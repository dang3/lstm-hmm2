push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
or
mov
mov
jmp
rcl
fmul
rcr
add
aam
pop
test
jle
movsl
add
fld
fcom
enter
leave
cld
lret
cmc
stc
sar
rcl
mov
nop
fsub
nop
cld
jmp
leave
ss
xor
neg
aad
int
fnsetpm(287
lock
in
cli
sti
jmp
xchg
in
cli
fxch
out
leave
icebp
idiv
iret
ds
lock
repz
enter
out
fildl
ret
sub
shl
xlat
fdiv
stc
aas
adc
call
fmuls
repz
mul
ret
into
jmp
loopne
iret
lock
in
repnz
into
sub
sti
ljmp
int
into
out
rorb
fimull
div
aam
hlt
cmc
aad
ss
int3
rcl
rol
idivb
icebp
les
out
sti
xchg
ljmp
in
xlat
shl
rcl
loopne
fsincos
xbegin
leave
int3
in
fdivp
std
cmc
out
xlat
shll
int3
rcl
cmp
enter
lock
mov
fcmovb
out
out
vphadduwd
aam
enter
out
std
fcmovnu
in
clc
fcmovu
std
repz
mov
xlat
cli
dec
call
xchg
mov
xor
out
cmp
loopne
icebp
fsubrp
rorb
loopne
mov
out
lock
in
in
aam
cmp
loopne
in
out
sub
or
call
shll
cld
in
fsubrp
icebp
lret
out
int
fsub
loop
in
sti
into
xchg
int
jmp
icebp
in
fisubrl
cmp
fdivrs
in
cmp
aam
ret
dec
in
decl
cs
lock
repz
fsub
loopne
xchg
jmp
in
test
cld
in
out
rcl
xor
clc
call
loope
rcr
and
enter
mov
loop
lea
shl
divb
jmp
in
sti
loop
flds
out
loopne
jmp
adc
jmp
fbstp
xor
iret
int3
fxch
in
ljmp
cmp
and
out
clc
lret
mov
aam
xlat
out
aam
cmc
ss
cmp
clc
hlt
in
aad
iret
ds
stc
in
in
lock
repnz
out
loopne
leave
xor
jmp
iret
out
in
fyl2x
cmc
loopne
aas
loope
aam
test
mov
cs
aad
repnz
std
int3
fnstsw
loop
out
test
lret
ffreep
mov
xchg
jmp
repz
rol
leave
into
cmp
in
out
fadd
enter
loop
test
jmp
sar
out
loope
xor
les
xor
ljmp
loopne
aam
fdivrp
fmul
xchg
loop
mov
in
mov
clc
xlat
rol
cmp
jmp
in
sbb
test
cmc
in
fsts
iret
jmp
jmp
int
in
fcmovnbe
ds
div
cmp
jmp
in
into
orb
xor
vcvtdq2pd
fcmovne
jecxz
test
sbb
ljmp
lock
rcl
icebp
aam
aam
sar
lock
fstp
xchg
imul
xlat
sti
std
into
fiadds
out
xor
cmp
cmp
iret
cmp
iret
aad
aad
repnz
std
in
lea
iret
xchg
shll
leave
lret
fdivp
cmp
cmp
sar
ljmp
std
mov
add
repz
lock
fdiv
repnz
xor
out
call
test
icebp
shl
repz
fnstcw
loopne
loope
rol
fldl2e
loop
repnz
fsubrp
mov
repnz
out
loope
idiv
fnstsw
enter
jmp
fiadds
loop
in
lret
in
repz
repnz
fst
iret
stc
loopne
jmp
jmp
int
jmp
clc
test
lock
leave
cmp
ret
ret
xchg
stc
ret
and
test
jmp
roll
fdivr
xlat
cmc
out
clc
sar
jecxz
adc
ret
fdivr
test
out
into
fdiv
enter
shr
ret
out
ljmp
jmp
jecxz
fcom
fyl2x
ss
int
lock
aam
test
cli
mov
fsubrp
clc
lock
mov
xchg
xor
cmp
mov
sbb
mov
mov
orl
push
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
push
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
push
adc
mov
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
jmp
xlat
iret
into
fst
xor
mov
cmpsb
push
mull
add
cmp
fsubr
ret
clc
cmc
cld
sti
cli
in
into
in
std
in
int3
in
int
ror
int
out
fxtract
fdiv
loope
fninit
jmp
int
fildl
dec
das
sarl
ss
aad
div
jmp
jecxz
cmp
fsubr
repz
testl
fcmovu
xor
fnstenv
stc
call
aas
loopne
ret
sti
lret
int3
shr
fiadds
cmc
jmp
repz
in
cmp
aad
xlat
test
sti
out
in
in
xchg
jmp
repz
out
fucomi
fsubr
loopne
sar
ret
loope
out
incl
xchg
in
call
icebp
clc
clc
in
xor
shr
in
xchg
jmp
repz
jmp
lret
out
lock
loope,pt
sti
in
jecxz
out
fcmovnbe
xchg
lret
test
loop
nop
lea
xor
fstpt
fdiv
cli
std
loop
aad
test
enter
testl
int
xor
xor
ljmp
ret
loopne
mul
jmp
ficoms
test
in
clc
enter
ds
shl
out
out
jmp
loopne
sub
lock
xor
aam
out
ds
cmc
addl
ret
leave
cli
out
cli
mov
xchg
cmp
jmp
jmp
jecxz
sar
cli
call
xchg
enter
rcl
ror
idivl
aaa
rcr
sar
sar
iret
in
aam
sbb
mov
mov
in
sub
fidivl
out
shll
and
ffreep
jmp
mov
cmc
int3
test
xlat
xor
in
cmc
cmp
lock
loopne
aas
cmp
rcl
xlat
cld
loopne
ror
xchg
jmp
shl
enter
sarb
incb
ljmp
jmp
std
xchg
nop
shl
xor
into
into
int
cmp
in
cmp
std
movb
cmp
ret
lret
repz
enter
hlt
ret
out
fadd
fucomip
jecxz
lret
lret
into
jmp
repnz
div
cld
loop
stc
test
repnz
repz
in
ljmp
mov
shrb
xor
in
hlt
cli
ljmp
clc
hlt
ret
ret
jmp
in
mov
xor
xor
leave
in
int3
std
stc
sar
stc
cmp
ret
xor
rcl
test
std
rcll
in
lret
cmp
rcr
stc
int3
int
icebp
stc
lock
hlt
fdivrp
nop
lret
lock
fimuls
fcmovne
xlat
cmp
fld
fdivp
shr
add
test
mov
in
out
ss
lret
enter
into
add
jmp
lds
mov
sub
loope
hlt
clc
clc
hlt
loopne
ror
test
sti
leave
xlat
enter
fucom
jmp
cli
cmp
lret
int
std
fucomi
fcomp
icebp
cmp
xlat
loopne
loop
cld
idiv
out
call
ret
in
cmp
lret
cmp
cmp
fildl
xor
int
lret
in
xchg
cmc
in
out
iret
repz
hlt
sti
jmp
clc
fdivrl
fistpll
test
test
jecxz
jmp
xchg
xor
int
std
lock
add
loop,pt
aad
stc
jecxz
shl
ljmp
cli
enter
rcl
cli
xchg
out
xchg
div
test
fcoms
out
xchg
out
out
enter
fdiv
aas
ret
test
mul
fmull
in
jecxz
cmp
fucomi
out
repz
in
icebp
ret
cmp
repnz
fcmovnb
xlat
cli
ljmp
repz
xor
xor
fcomp
cmp
faddp
mov
orl
xlat
cmp
stc
aas
into
fucom
sub
loope
fildl
int3
test
mov
fstpt
fnstcw
xor
incb
enter
leave
notl
in
nop
loop
xor
ret
cli
aad
loopne
sti
loope
sti
iret
jmp
cmc
fmulp
enter
fisttpll
sti
fadd
clc
xlat
ss
iret
aad
mov
jmp
fadd
leave
int
bound
inc
aad
xor
inc
int3
pop
jle
movsl
add
out
cmp
ret
addb
rcll
jecxz
xlat
xlat
fiadds
xlat
aas
stc
hlt
aam
clc
or
xchg
iret
int
shr
leave
cmp
cmp
ror
testb
call
out
in
call
into
out
rcr
fnstsw
lret
cli
add
fidivrl
std
mov
lret
loopne
in
xchg
rcr
ror
repz
lret
rcr
ret
cld
out
icebp
clc
rol
xchg
call
xchg
lock
int3
xor
out
lock
push
ret
fadd
mul
mov
into
out
std
iret
fcmovu
lea
lock
ljmp
loopne
out
in
cld
aad
std
orb
aad
ljmp
lret
shl
rcl
xlat
jmp
out
mov
xchg
std
hlt
iret
test
out
out
int3
out
xor
call
addb
loope
enter
nop
int
decb
int
idivb
aas
ss
rcr
fcomi
cld
ret
xchg
fmull
int
aam
xor
iret
cli
call
fbstp
repz
cli
mov
leave
call
call
fcomp
cmc
call
sti
lds
add
add
out
shlb
repz
ss
aam
test
mov
lret
adcl
fdecstp
ret
xor
into
shlb
shl
stc
repnz
leave
iret
mov
lret
loop
lret
sti
fucomp
cmp
aam
fnstcw
icebp
aam
fst
mov
into
xchg
fcomip
test
lret
ret
faddp
ss
iret
addb
jmp
mov
cmp
fisttps
int3
xor
shl
std
into
shl
idivl
in
fld
leave
in
out
iret
out
loope
jmp
jmp
cmp
aam
aad
repnz
xchg
mov
icebp
in
int
xor
fldl2e
xor
sti
out
ljmp
xchg
enter
into
test
ljmp
loop
enter
into
test
mul
xlat
adc
mov
in
out
lret
in
aad
cld
fst
cmp
sti
in
adc
mov
out
xlat
out
xchg
or
std
icebp
loop
in
xor
in
out
in
rolb
call
xchg
test
stc
cld
cld
fisttpl
sub
xor
cmp
fdiv
fdiv
fpatan
ds
fimull
or
out
xchg
aam
leave
enter
icebp
jmp
ret
out
fstpt
out
mov
lret
call
out
ljmp
cmp
stc
stc
ljmp
int3
fildl
divl
test
cld
stc
lock
in
aas
aad
stc
loop
out
clc
loop
mov
in
repnz
in
ret
in
in
int3
int
fiaddl
cmp
in
shr
mov
test
int3
add
fxch
test
not
idiv
repz
sbb
out
fsubr
lret
out
loopne
nop
and
lret
xchg
xlat
lret
xor
cmp
ror
loope
test
xchg
fimuls
adc
shl
iret
ljmp
xlat
in
fucom
enter
mov
std
test
enter
out
ss
fiaddl
sti
fcmovu
std
or
out
out
in
xchg
loopne
jecxz
repz
stc
repnz
cmp
jecxz
out
xor
mul
nop
lock
xchg
movl
cld
into
cmp
out
and
mov
addb
mov
test
repnz
xlat
clc
shl
sti
sti
int
out
sar
test
cmc
cmp
jecxz,pt
out
jecxz
in
fdiv
in
cli
xor
lock
cmp
iret
fsubr
icebp
jmp
jmp
jecxz
loope
repz
cmp
jecxz
repz
rol
cmp
loope
ret
lds
int
loop
mov
hlt
out
icebp
out
out
fmul
out
fsubrp
cmp
repnz
in
xlat
lret
aad
out
iret
into
cmp
into
xchg
xor
lret
lret
xor
cmp
out
cli
test
aas
decb
cld
mov
mov
sub
and
mov
mov
and
mov
orl
xor
xor
add
mov
add
jmp
rcl
lret
fst
jmp
mov
jle
movsl
add
movb
in
in
repz
enter
aad
aam
iret
int3
rcl
ret
vpsubb
cld
enter
xchg
mov
in
out
cmp
aad
rcr
shr
cli
cld
loope
roll
fsin
call
xchg
xchg
xchg
fldl
into
xor
std
cmp
in
aas
out
fisttpl
test
icebp
call
xor
loopne
sti
cmp
ss
ret
cld
aam
jmp
cld
leave
ror
xchg
sub
repz
rcr
lret
jecxz
repnz
ret
xlat
mov
mov
flds
xchg
out
aaa
out
out
enter
jmp
repnz
loope
fld1
jecxz
fcomp
ljmp
int3
mov
in
rol
aad
iret
out
repz
cld
ret
fcom
repnz
fadds
out
fdivrp
lea
into
xor
repnz
icebp
iret
repnz
aad
xlat
fdivr
in
adc
xchg
hlt
cli
jmp
into
stc
fucom
lock
sti
mov
shl
in
icebp
cmc
dec
in
jmp
stc
ljmp
test
mov
ljmp
in
xchg
ffree
loope
ret
sub
fnop
leave
test
hlt
frndint
jecxz
mul
loope
loopne
out
cld
jmp
int
fucomip
repnz
cmp
ret
loop
aad
in
cld
cli
mov
in
test
not
jecxz
fdivrs
out
lret
cmp
jecxz
lret
mov
call
cmp
jmp
cmpl
cli
stc
out
hlt
fcmovnu
in
mov
ljmp
icebp
lret
xor
jecxz
iret
call
in
xchg
lret
in
mov
lock
fdivrp
decl
rcr
out
int
and
rol
ds
in
ljmp
fcomi
out
jmp
repnz
ss
sar
iret
shl
fldl
testl
call
push
aad
loope
cmp
rcr
fdiv
std
jmp
ret
ljmp
int
call
xlat
sbb
fadds
xchg
in
sti
loope
in
loop
sub
fnstenv
jmp
sti
sbb
test
in
shr
mov
mov
icebp
mov
in
into
xor
aad
in
ret
repz
loope
test
mov
test
aad
in
jecxz
cmp
hlt
std
in
loopne
rcl
cli
clc
mov
call
adc
rcl
sti
cmp
int
ror
int
in
xor
mov
test
xchg
xor
repz
enter
aad
out
fmull
mov
call
xor
out
enter
repnz
fcomp
cmc
int
sar
loop
fadds
xchg
mul
xor
clc
cli
repnz
int3
repz
rcl
aam
jmp
sti
test
test
hlt
int3
lock
ljmp
stc
not
clc
test
leave
iret
orb
hlt
ror
cli
fdivr
ss
cmp
loop
cmp
mov
out
fstp
out
bnd
iret
cmp
fcmovu
repz
jecxz
in
icebp
fdivrs
ret
xchg
in
sti
mov
ljmp
iret
ret
cmp
out
call
xor
out
addb
clc
cmp
lret
jecxz
shl
xor
out
xor
idiv
sti
test
idivb
ret
test
int3
fimuls
int3
cli
jmp
jmp
aam
cmc
inc
lock
mov
aam
mov
in
or
cmc
xor
int
clc
cld
lret
loopne
shr
fld
ljmp
in
call
out
mov
loop
sub
repz
inc
hlt
loopne
cmp
jmp
test
clc
leave
enter
in
out
lret
cli
into
stc
ljmp
hlt
out
into
icebp
call
xchg
lret
aad
xor
cld
out
in
xor
dec
fidivrs
mov
mov
cmc
repnz
in
rcr
aad
rcr
iret
test
stc
leave
test
sbb
xchg
fnop
add
mov
jmp
int3
rcl
aad
int3
call
push
icebp
lcall
jle
xchg
sub
sub
lds
leave
in
stc
idivl
shl
icebp
aas
xlat
mov
xlat
xchg
out
and
xchg
ret
hlt
not
icebp
in
aas
cmp
fcomi
sar
fcomi
rcr
cld
jmp
mov
xchg
fcom
cli
out
enter
in
and
in
orb
icebp
xchg
aaa
lock
int
aaa
leave
sti
xlat
aad
cld
iret
addb
lret
xchg
repz
lock
icebp
cmp
cmp
adc
stc
test
test
lret
stc
test
out
repnz
xchg
out
shr
hlt
cmp
lret
lock
sti
clc
cmpb
rcl
aas
loop
push
out
test
into
sbb
iret
enter
clc
repnz
out
in
loop
ret
rol
xchg
leave
ljmp
lret
nop
mov
ret
rcl
xor
cmp
cmp
cld
rcr
aam
xchg
and
lock
fxch
f2xm1
call
cmp
fucomi
test
fadd
lret
fadds
into
lret
shr
in
cmp
aad
fcmovb
add
shl
inc
addb
loop
call
ftst
cmc
cmp
std
rcl
add
xlat
faddl
aad
lock
fcomi
in
mov
cmp
cmp
or
loope
aam
out
out
fxch
lock
into
popl
out
int
out
stc
std
cmp
test
rolb
xchg
fimuls
mov
fucomip
in
cmp
lret
sar
cmp
faddp
cmp
out
sarl
aas
out
cld
loopne
loope
fyl2xp1
fmull
call
xor
cmp
cmpl
aas
rol
add
addb
xchg
mov
lret
in
ffreep
loopne
orl
in
mov
in
out
cld
xchg
lock
sub
lret
cmp
leave
loope
fdivrp
rol
shl
cld
fsubr
testl
xchg
aam
fxch
clc
cld
push
fildl
xlat
jecxz
mul
std
enter
jmp
repz
not
out
in
cmc
ljmp
xlat
cmp
call
fisttps
lock
imul
not
ss
cmp
xor
in
fadds
out
neg
int
out
xchg
ror
out
xor
ljmp
sti
clc
lock
out
loopne
lret
std
orb
jecxz
lret
aaa
cmp
xor
fxch
aam
call
std
std
in
fsubrp
jmp
sub
fsub
icebp
sti
cmc
leave
ljmp
stc
out
cmp
call
loop
mov
xchg
xor
clc
aam
jmp
cmp
ret
in
sar
lret
out
mov
xchg
xchg
shl
aad
jmp
adc
cmp
out
out
loop
sbb
mov
out
shrb
cmp
out
std
dec
cmp
in
in
mov
xlat
fdivrp
fmul
loop
jecxz
orb
cmp
rcl
fxch
iret
int3
in
aad
out
cmp
fsubr
mov
clc
in
in
jecxz
rol
rcr
cmp
cmp
lret
enter
cmp
test
in
ljmp
hlt
enter
ljmp
int3
jmp
aaa
out
out
fldlg2
lea
in
aas
shll
xor
in
out
icebp
ds
ret
shl
out
ret
loopne
cli
stc
shl
ror
mov
mov
out
int3
jmp
std
cmp
shl
xlat
loopne
ljmp
shl
les
ret
lds
enter
repz
addl
in
mov
jmp
hlt
in
repz
fnsave
faddl
out
out
mov
in
aad
aaa
xor
hlt
int
cld
loope
fmul
int
out
cmp
mov
out
shr
shl
icebp
aaa
ror
shr
out
jmp
ss
fcomi
leave
xchg
xlat
fmul
out
out
jecxz
repnz
shr
sar
int
int
or
rcl
xchg
jecxz
cmc
out
ret
loope
call
std
div
int3
ret
ljmp
aad
sarb
stc
std
fiaddl
ljmp
in
test
pushf
clc
jmp
int3
rcl
fstp
fldt
mov
jle
movsl
add
xor
stc
idiv
in
test
sti
std
loopne
lret
mov
sti
xchg
mov
in
in
xlat
ss
fdiv
lret
into
cld
shl
sar
fdivp
fcomp
enter
ljmp
leave
in
fsubr
in
leave
lret
into
repnz
rcl
loop
fucomp
jecxz
out
jmp
xchg
xor
xor
fmul
enter
shl
cli
shl
loopne
sub
mov
mov
call
rcr
fiaddl
in
ljmp
out
jmp
into
or
ss
loopne
test
aam
jmp
cli
int
loopne
ljmp
jecxz
aaa
fnstcw
aam
fdiv
cmc
shl
shl
fdivp
aad
test
loopne
out
xchg
cmp
in
in
repnz
sti
ljmp
fiaddl
xchg
enter
clc
lret
lret
loopne
out
fdiv
addb
jecxz
cli
dec
in
jecxz
jecxz
iret
ror
aad
fcmovne
leave
fpatan
out
loop
call
addl
xchg
fmull
aad
sar
cmp
sti
ror
les
jecxz
mov
jecxz
xchg
mov
out
sub
cmp
test
sar
cmp
in
test
lock
test
test
int
ror
icebp
repnz
std
in
out
ret
rol
leave
ret
in
fildl
jecxz
jmp
fucomi
cld
iret
xlat
int
shl
loope
enter
out
nop
in
fstp
mov
shl
ret
xlat
clc
in
rcl
out
ds
ret
aad
out
xchg
fsubr
loopne
fucomip
out
mul
cmp
icebp
ret
out
fcomip
repz
mov
lock
dec
mov
in
ret
cmc
aam
xlat
aad
cmp
fstpt
test
rcr
sti
xchg
ljmp
in
out
adcb
fidivl
shr
fcomp
clc
shl
fdivrp
fcmovb
xchg
xchg
mov
fimuls
xor
das
xlat
repnz
leave
cmp
neg
cmp
sarl
adc
orl
mov
aam
shl
mov
out
lock
call
loop
jmp
fdivp
ljmp
mov
mov
into
rcl
xor
cmp
loop
test
jecxz
sbb
repz
adcb
not
lret
call
hlt
ror
sar
and
lds
ljmp
cmp
lock
dec
out
shl
aaa
fsubp
rcl
ljmp
mov
iret
iret
mov
hlt
ror
aaa
icebp
shl
fnstsw
cmp
lock
mov
fadd
in
mov
loop
test
roll
in
out
lret
cmp
fucomp
aad
stc
in
hlt
into
fcomip
fld
fld1
enter
out
test
out
sub
call
rcl
cmpb
hlt
jmp
lret
nop
fcmove
fucomp
repnz
in
out
hlt
aaa
ljmp
les
ljmp
call
lock
enter
cmc
loop
sti
in
out
in
into
or
mov
rorb
idivl
sarl
out
iret
vcmpsd
in
incb
mov
jmp
cli
cmp
in
jmp
les
hlt
out
fucomip
leave
sub
loopne
int
lret
aad
lock
aad
iret
cmc
out
repz
loop
cld
fmulp
ljmp
not
hlt
icebp
rcr
loopne
sar
fstp
cmp
lret
loopne
jmp
sti
shr
jmp
xor
xor
shl
rcl
shl
adc
clc
out
fcmovne
cli
mov
xor
call
cmp
cmp
ds
ret
fxch
xchg
out
out
aaa
ss
xor
shl
call
loopne
stc
fisttpll
nop
xor
iret
rol
sar
out
aas
lret
cmp
loop
loop
test
loope
in
jecxz
jmp
std
into
icebp
ret
xor
cmp
in
test
jecxz
fdivp
hlt
fiadds
mov
stc
cmp
cmp
cmp
loopne
inc
in
mov
xor
add
mov
mov
mov
mov
mov
mov
jmp
iret
xlat
rcl
fcomp
iret
bound
sub
and
jle
movsl
add
loopne
sub
and
out
out
mov
imul
in
jmp
jmp
xor
cmp
fmul
fildl
in
call
mov
xor
out
fcmovne
in
cmp
xlat
in
out
rcr
mov
leave
lea
xchg
out
fnstenv
xor
in
in
sti
into
neg
xchg
stc
out
std
ljmp
out
xlat
icebp
aaa
fcom
cmc
not
xor
aam
ret
loop
sti
mov
out
in
rolb
fcomi
xor
ds
test
test
out
mov
ret
ss
cli
in
loope
clc
aad
ljmp
in
mov
cs
int
repnz
aaa
int3
ds
cli
cmp
lret
mov
testb
into
out
aaa
in
xor
lock
std
fprem
loop
repnz
call
orb
xor
loopne
aaa
out
fcmovbe
xor
sarl
loope
call
aam
vpandn
xchg
icebp
sub
fdiv
repz
fdivrl
sti
jmp
fadds
leave
mov
fxch
std
lret
out
in
xor
repz
in
lret
fucomi
test
mov
loop
jmp
ret
stc
stc
call
fsubr
into
test
out
sti
mov
xchg
mov
sbb
orl
vpsubusb
xor
shl
aad
and
neg
incl
jmp
out
icebp
jmp
int
xlat
shl
xlat
shl
sti
sti
enter
leave
fucomip
lds
mov
fdivrs
cmp
rcr
cmc
cmp
aas
not
fcmovnb
xchg
cli
out
mov
sub
in
loop
sti
stc
xor
cmp
rcr
loopne
xchg
leave
jmp
mov
xchg
iret
mov
ljmp
aam
into
std
xlat
fcom
hlt
fiadds
icebp
hlt
fmul
test
das
icebp
out
int3
xor
rcl
aam
mov
enter
call
cmc
shl
das
out
hlt
in
cmp
enter
sti
icebp
movb
out
or
xor
cmc
loop
cmc
shr
fsub
leave
int3
out
std
in
cmp
sarl
cli
stc
fdivrp
loopne
jecxz
loop
out
shr
in
ss
loopne
fsub
and
ret
out
call
out
enter
in
out
in
imul
lock
fiadds
mov
filds
shl
xlat
aad
fndisi(8087
lret
shl
out
cmp
ret
aas
iret
orl
lds
cs
sar
neg
hlt
shl
iret
aad
fdivrp
loop
clc
filds
loope
xor
xor
ljmp
fnstcw
iret
shl
in
add
ljmp
jmp
xor
std
aas
neg
jmp
aad
fsubrp
imul
ret
fsubr
xlat
fsub
out
out
leave
xchg
aad
sub
fucomp
hlt
rcr
aaa
cmp
cmp
into
hlt
enter
int3
fldl
in
cmp
in
sbb
fdiv
xchg
fisttps
cld
call
into
shl
xor
cli
icebp
cmp
aam
xlat
icebp
out
std
xchg
in
loop
loope
xchg
popl
in
cli
enter
cmc
enter
lock
clc
bnd
ret
flds
int3
lret
rol
repnz
ljmp
stc
clc
ret
repz
out
xlat
in
iret
loopne
cld
shr
idiv
repnz
jecxz
clc
clc
ds
ror
repnz
jecxz
cld
out
mov
loopne
leave
in
fucom
repnz
mov
xor
aaa
fcmovu
fsub
hlt
fcomp
fimull
fcomi
out
cli
stc
lock
int
shrb
fldz
repnz
into
sti
cmp
in
rol
std
fdiv
jecxz
jecxz
out
mov
sub
leave
out
divb
sub
sar
into
lock
fsub
ret
test
out
in
xchg
ljmp
iret
aam
hlt
cmp
div
hlt
and
hlt
movb
xchg
sub
lds
shr
cmp
in
std
cld
shl
out
mov
jmp
ret
aas
ret
aad
aad
mov
mov
add
in
cli
cmp
std
rorb
rol
jmp
shll
sub
lock
ds
int3
out
xor
out
ljmp
bnd
jmp
fucomp
cld
ret
sti
rcr
jecxz
mov
and
int3
icebp
sti
in
out
sub
in
leave
in
cmp
icebp
lock
imul
cld
cmpb
ljmp
aam
test
into
fucomi
in
int3
xlat
loopne
cmpb
stc
sti
std
addl
test
xchg
icebp
mov
sar
in
jmp
cmc
cli
fsub
xor
idivl
loop
out
lret
icebp
cli
xchg
fisttpll
repz
into
icebp
cli
leave
xor
clc
xlat
ret
test
test
addb
test
int3
cs
out
in
idiv
int3
cmp
cli
ret
xchg
mov
jmp
fxch
cld
mov
int3
ror
fcom
lret
repnz
test
sar
cmpl
mov
xchg
xchg
loope
aas
aad
aad
xor
cmp
hlt
lret
aas
test
fsubrp
aas
in
jecxz
int3
or
mov
xor
shr
ror
shlb
fcom
addl
mov
call
sub
icebp
out
int
lock
loop
iret
cmp
aad
lds
imul
ljmp
vaddsubps
std
out
in
aas
cmp
cmp
in
sti
jmp
mov
clc
fcmovu
out
mov
xor
das
sti
cli
jmp
in
repnz
cmp
orl
fucomip
int
icebp
jmp
xlat
ss
out
xor
cmp
repz
in
fucom
rol
repz
jmp
lret
xor
fsub
hlt
fcomi
fmul
mov
ljmp
jmp
jecxz
div
jmp
jmp
int
and
loope,pt
jecxz
imul
mov
in
fmulp
lock
call
call
ret
ret
mov
and
xlat
mov
test
shr
out
out
out
lock
xor
in
in
sub
fucomp
aas
dec
loopne
jmp
sub
cmp
hlt
xor
div
in
repnz
fdivr
cmc
loope
out
in
ret
and
aam
loop
call
in
shr
idivl
fsubr
add
clc
xchg
out
lret
xchg
shl
xlat
hlt
out
in
int3
aam
aam
shr
aam
cli
rol
xor
orb
rcl
jecxz
cmp
aad
cmp
fnstcw
clc
rol
cmp
cli
addb
fcomi
shl
sub
sub
out
rcr
int3
shl
fldlg2
in
rcr
ret
in
incl
int
xchg
call
xor
cmp
out
aas
shl
cmp
rcr
lock
xor
cld
mov
jmp
ljmp
cmp
std
iret
clc
cmp
and
cmp
addl
xchg
int
lret
jmp
cmp
rcl
aas
hlt
shl
repnz
mov
jmp
in
lret
xchg
shr
leave
enter
into
ffree
aaa
into
out
loop
in
fsubp
or
and
ljmp
cmp
aaa
rcl
rcl
hlt
rol
cmp
sti
cld
out
in
jmp
xchg
xlat
sarb
clc
into
iret
fst
jecxz
shl
xor
aad
fsubrp
cli
decb
add
cmp
fnstenv
jmp
cmc
ret
fadds
fsubp
loop
fnstsw
lret
adcb
out
stc
out
ror
enter
in
fmul
rcr
loope
loop
out
lret
xchg
jmp
loope
int
cli
sub
enter
iret
cld
addl
repz
call
adc
nop
sub
xor
div
xor
repnz
cmc
cmpb
clc
testb
in
fdivr
mov
out
xchg
out
ret
call
leave
ds
fmul
sbb
jmp
cld
test
repnz
shrl
into
das
lret
xlat
ss
cmpb
cmc
fstpt
aam
into
iret
iret
loopne
iret
into
icebp
ljmp
out
stc
cli
ljmp
cli
out
ret
ljmp
std
mov
out
jmp
iret
lret
ffree
loop
in
hlt
fldl2e
sti
add
jmp
rol
ror
rcr
fcmovnu
mov
xchg
jmp
and
movsl
add
mov
fmul
mov
sti
xor
ljmp
stc
stc
aam
call
jmp
mov
ret
aaa
repz
shr
cmc
idivb
jmp
mov
or
test
icebp
das
cmp
icebp
ror
enter
cmp
hlt
loope
out
cmc
fimuls
xchg
test
sub
lock
cli
aas
fdivr
stc
loop
ret
aas
xlat
testb
fmull
ljmp
aad
clc
cmp
fucomi
jecxz
lock
shl
mov
lea
fsubrp
addb
out
leave
int
aaa
sarb
int
orl
jmp
cld
in
incb
call
fcmovnbe
aad
add
xlat
cmp
or
xchg
icebp
nop
shr
loop
in
cmp
int3
jmp
iret
roll
loop
mov
into
out
loope
loop
in
cmc
aam
xor
fdivp
ret
ss
ds
cmc
shr
test
ret
ror
repz
out
out
cli
div
incb
cld
cli
enter
add
and
sub
in
clc
out
stc
aam
into
cmp
int
icebp
loopne
rol
decb
jmp
xchg
hlt
shlb
icebp
out
out
in
fidivrs
lock
cli
shl
mov
ret
out
mov
repnz
lret
shr
xor
faddp
decb
mov
jmp
cmc
rcl
out
cmp
int
testb
xor
xchg
int3
aas
aaa
into
iret
sub
clc
sti
icebp
out
int
ret
cmc
mov
out
xor
iret
lds
int3
call
int3
aas
aad
cmp
rcl
div
fdivrp
cmc
jmp
int3
cli
iret
incl
xor
icebp
idiv
fxch
lret
cmp
cmc
test
out
cmc
loop
call
fisttpll
aad
ret
jmp
ds
xor
test
hlt
or
mov
int
int
call
fidivl
xor
ss
into
icebp
rcr
out
out
call
in
stc
out
nop
std
shr
test
loope
sti
fstpt
repnz
call
fnsetpm(287
in
in
std
mov
sti
shl
in
shll
cmp
jmp
shr
cmp
loope
cld
hlt
mov
loope
std
xchg
mov
xchg
jmp
aam
iret
into
lret
hlt
fdivrl
cld
clc
cmc
faddl
cli
sub
iret
loopne
in
loop
xor
out
cld
jmp
ret
ffree
ljmp
test
loop
jmp
into
xor
iret
shl
out
cmp
rcl
cmp
fiadds
ljmp
call
test
clc
stc
cmp
repnz
fadd
out
loopne
leave
filds
jmp
ret
out
ljmp
repnz
xchg
int
mov
icebp
xlat
call
in
aam
rcr
aam
test
in
leave
xlat
ljmp
call
in
xor
in
ljmp
test
clc
lret
ljmp
loope
aam
int
loopne
imul
std
test
fiaddl
out
xchg
in
ljmp
sti
cmp
int3
call
xlat
aas
rcr
cld
in
jmp
jmp
lock
fstp
lret
cmp
cmp
out
ljmp
ljmp
enter
jmp
loop
shr
test
cld
clc
loope
loopne
test
neg
vpsubusb
out
fninit
jecxz
cmc
std
aam
loopne
mov
ljmp
lret
cmp
rcl
lret
fucomip
addb
ljmp
loope
hlt
rorl
fnstcw
iret
shll
clc
aad
into
loop
aas
hlt
cli
call
loope
mov
into
into
mov
xor
hlt
out
into
jmp
cmc
rcr
xlat
cmc
loop
idiv
in
in
push
fucomp
sub
out
sti
aam
icebp
xlat
sar
xor
lock
fadd
std
in
mov
mov
call
mov
aad
leave
aad
fcmovnu
sub
mov
movsl
add
xchg
cmp
jmp
shl
and
xabort
xchg
xchg
jmp
aad
lret
in
das
xor
out
shlb
test
out
shl
cli
jmp
std
in
lret
lea
loop
xor
sti
call
shl
jecxz
jecxz
mov
aad
jmp
mov
mov
loope
mov
xor
jmp
repz
aam
aas
aad
fsub
vpmovmskb
into
fisttps
int
xor
aad
out
cld
fidivrl
and
test
cld
lret
fadd
fadd
cli
int3
out
jmp
xchg
das
sar
cmp
cmp
xor
icebp
rcr
fcmovnbe
xchg
loop
aad
jmp
jecxz
fiaddl
jmp
stc
leave
fdivr
int
lret
cmp
ret
mov
sbb
rorl
fcmovu
cmp
out
imul
aaa
hlt
loop
lds
out
cld
aad
mov
mov
nop
into
aad
das
lret
aam
rcr
cmp
sti
out
cmp
shl
in
clc
xchg
fucomp
xchg
xchg
xor
leave
cli
std
not
hlt
xor
ds
in
stc
mul
fxch
std
addl
ljmp
fsubp
repnz
fdiv
fld1
ljmp
xchg
ret
clc
cld
repnz
ret
shl
repz
fdiv
call
iret
enter
in
out
ret
fxam
repz
cmp
flds
mov
call
std
nop
out
sub
fidivrl
cmp
aas
sti
fucom
aas
ljmp
cmp
les
repnz
cmp
stc
cmc
iret
fstpt
orl
stc
xchg
in
mov
in
in
vmovq
clc
cmp
cmp
rol
sti
repz
loopne
sti
iret
icebp
mov
xor
lock
cmp
xlat
ljmp
repz
sti
loope
out
repnz
in
xor
xor
xor
enter
in
iret
ret
fiaddl
xchg
jmp
ljmp
icebp
test
iret
out
clc
std
xchg
loope
xchg
jmp
out
std
mov
in
enter
cmp
rcl
les
cli
out
leave
sti
adcb
hlt
std
cmp
cmp
clc
cmp
out
iret
cmp
repz
loopne
incb
xor
leave
out
aam
repz
ret
test
rcl
jmp
in
mov
test
shr
aas
repnz
xor
xor
cld
icebp
rcr
lret
rol
repnz
aas
cld
rol
ljmp
loope
mov
xlat
das
stc
shl
fmulp
idiv
aad
rcr
sti
std
mov
fistl
std
aad
vcvtdq2pd
fdivrs
repnz
out
clc
sarl
stc
leave
cld
enter
rorb
in
xor
iret
lock
aas
rol
rcl
xchg
xchg
fiadds
in
sub
les
shr
imul
icebp
loop
vpmulhuw
into
mov
icebp
cmc
shrb
aad
cmp
incb
out
idiv
aas
fistpll
and
iret
jmp
sub
stc
xor
std
call
in
out
les
mov
xchg
shl
shl
in
repnz
ss
sub
xlat
lock
fstp
out
stc
loop
ljmp
loop
stc
ss
iret
cli
clc
in
test
in
in
sti
adcb
repz
stc
in
out
repnz
out
stc
icebp
shl
out
cmc
fcmovne
ljmp
loopne
icebp
xor
aaa
xlat
into
in
cld
cli
lock
div
icebp
fdivrp
clc
testl
jmp
fmul
out
push
sbb
ss
faddp
fildl
clc
mov
nop
hlt
loop
in
icebp
cmp
ljmp
fsub
jecxz
in
xlat
leave
jmp
adcl
aam
lock
rcl
cmp
ret
out
fnsetpm(287
mov
cli
jecxz
xchg
lret
in
repnz
int3
enter
out
cmp
cmp
fiadds
mov
test
test
xchg
and
mov
mov
aam
jmp
aam
dec
clc
xor
add
cmp
jmp
vaddsubpd
rcr
pop
push
xchg
fistl
es
inc
test
jle
add
sar
stc
roll
jecxz
idiv
loope
std
jecxz
sar
rorb
not
repz
ds
cli
rol
aam
fcmovnu
clc
fldl2e
in
cld
rcl
in
std
int3
ror
loope
lret
out
xor
cmp
shr
icebp
fucom
test
repnz
ret
ror
out
rcl
shl
out
loopne
fstp
idiv
lret
stc
mov
loopne
int
enter
pushl
fpatan
sar
cld
sti
xor
idiv
fstp
test
hlt
sub
aas
repz
stc
sub
call
stc
fcmovu
lret
jmp
hlt
xchg
out
xlat
stc
out
lret
aaa
clc
rcr
cmp
test
fiaddl
loop
call
icebp
mov
xor
cli
shr
in
ss
xor
cmp
xchg
cli
cld
nop
out
xchg
out
leave
cmp
cmp
fdivrs
cli
fsubp
out
cld
ret
jecxz
jmp
out
lret
loopne
in
fstpt
out
divb
hlt
cmp
stc
cmp
in
cli
test
cli
fmull
xor
in
leave
cmc
fdivp
repz
loopne
cli
aas
fcmovnb
in
nop
leave
jmp
incb
jecxz
in
out
loope
ljmp
ror
out
in
xchg
in
movl
fistpll
cmp
rcl
in
and
fiaddl
into
xor
repz
cmp
lret
out
addb
rcr
sti
loopne
test
in
fsubp
in
jmp
adc
out
cld
lock
out
aad
fistpll
fdecstp
rcl
call
cld
loope
int
lock
int
imul
stc
fstpt
test
std
xchg
popl
xor
aad
into
rcr
shll
sarb
std
in
enter
jecxz
fcmovne
sti
out
fcomi
call
out
xor
cmp
cmc
cmp
incb
ljmp
rcl
test
xor
cmp
or
xlat
jecxz
test
xlat
orb
fdiv
cld
int
ljmp
test
icebp
cmp
clc
cli
fdiv
in
xchg
cmc
cmc
xchg
xor
aaa
ss
std
cmp
cld
repz
repnz
xchg
fcmovu
int
addl
jmp
into
hlt
leave
not
cld
ds
addl
faddp
enter
mov
lret
cs
int
imul
out
or
loop
clc
clc
fmuls
xchg
test
out
loope
loop
loop
leave
cmp
repnz
loope
in
aas
fnclex
test
test
decl
out
in
icebp
fdivs
call
divl
rcr
jmp
hlt
in
movl
leave
out
aaa
repz
call
test
in
ret
cli
in
ror
mov
cmc
repnz
out
in
ss
cmp
loopne
cld
rcl
out
enter
repnz
repnz
aaa
int
out
jmp
int3
test
aam
mul
loop
nop
in
enter
jecxz
xor
xor
xlat
xor
icebp
ret
vpavgw
cld
xchg
sti
out
in
adc
iret
enter
out
xor
clc
jmp
cli
cld
xchg
enter
sub
mov
int
jmp
in
cmp
clc
aad
cli
cmp
test
incb
loope
orb
ret
cmp
cmp
leave
call
ret
jecxz
icebp
fdivr
faddl
lret
ljmp
cmp
fdivrs
cmp
rcr
shl
fidivrs
int3
std
sti
cli
clc
std
mov
fld
imul
hlt
out
jmp
iret
int
out
cmc
hlt
loop
mov
shl
int
icebp
lock
xor
stc
fcmovbe
ror
jmp
sar
stc
cmp
aas
test
mov
out
lock
call
loop
in
into
roll
stc
mov
loope
out
out
iret
and
shl
test
cli
cmp
cmpl
std
std
rcr
test
aam
int
mov
int3
sarl
clc
shl
fsubr
lret
rorb
test
and
add
add
add
xlat
fcom
fcom
fstp
outsb
push
mov
dec
sbb
jle
add
std
out
mov
int3
nop
mov
in
nop
addl
icebp
cmp
neg
xor
dec
roll
in
test
ror
xchg
xchg
into
aad
lock
aad
lret
aam
sar
out
fdiv
call
fmul
fcomi
loop
jmp
jecxz
fcmovu
cli
out
iret
int3
sarl
cmp
mov
idiv
or
jecxz
int3
ljmp
iret
int
loop,pt
fadds
or
enter
loope
ljmp
hlt
aam
cmp
cmp
filds
ret
fadds
in
mov
fmull
shl
loop
lds
lret
iret
xlat
cmp
ret
loopne
leave
fadd
test
loopne
xchg
hlt
shr
lret
cmp
aam
ss
lock
faddl
jmp
lret
cmc
ljmp
sti
rcr
fiaddl
xchg
fdivr
call
ljmp
test
sub
cmp
fdivr
bnd
cli
idiv
lock
xchg
mov
loopne
fmulp
loope
mov
xor
in
aad
aaa
fdivrl
fdivrs
in
fucom
loope
sbb
idiv
xchg
mov
xor
out
cmp
shr
in
loope
cmc
out
movb
out
xor
iret
fucom
int3
xlat
shr
in
loope
jmp
test
fdiv
icebp
addb
cmc
xor
cmp
mov
leave
mov
int3
fldl
out
jmp
call
aad
fcmove
jmp
cmp
in
ljmp
out
ror
icebp
ss
fcmovb
cmp
div
fst
fadd
aad
aam
std
loopne
leave
sti
out
test
in
repz
cli
int
cmp
aas
icebp
out
xor
jecxz
in
neg
out
out
test
mov
mov
repnz
loop
in
fcmovbe
xor
repz
stc
fadds
call
ljmp
leave
aad
out
icebp
into
int3
ret
cmp
out
mov
cmc
ljmp
xchg
in
imul
lock
int3
iret
xor
cmp
cmp
call
fsub
ljmp
xor
repnz
dec
into
iret
cmp
fldl2e
fcmovnb
cli
fdivrp
mov
loopne
out
in
out
rcl
loop
shl
fcmovbe
aas
aas
ljmp
mov
in
fcomip
shll
das
enter
div
int3
ds
rcr
stc
xlat
faddp
vpaddusb
xchg
in
addl
cmp
cmp
cmp
fcomip
aam
cmp
loop
orl
in
ret
jecxz
out
clc
std
in
loope
cmp
addb
hlt
movb
cmc
loope
jecxz
jecxz
fdiv
lock
cld
mov
xlat
loopne
vpandn
leave
jmp
xchg
enter
cmc
iret
int
fadd
cmp
int3
shl
fcmovu
in
cli
mov
repnz
int
ret
repz
hlt
cli
shl
lret
cmp
aad
aas
icebp
imul
std
loope
sti
cld
mov
lret
lret
std
shl
rcl
in
int
rcl
fscale
cmp
icebp
sti
imul
xchg
out
jmp
jecxz
cli
jecxz
call
repnz
roll
cld
repz
cmc
cld
les
fucomi
filds
ljmp
out
inc
cmc
ret
incb
fildl
lret
lret
aad
stc
faddl
filds
filds
mov
nop
shr
mov
hlt
rcr
fdecstp
xlat
ljmp
in
fdivr
repz
xchg
loopne
in
loop
test
shr
xchg
lock
ret
aad
cs
ss
fiadds
xor
push
call
int
call
in
leave
xor
repnz
cmp
mov
fcomi
mov
mov
in
repz
loope
xor
not
cmp
out
repnz
aad
cmp
rcl
out
lock
aad
cmc
jecxz
lock
in
in
rcr
ror
cli
lret
neg
in
out
iret
aaa
stc
test
sub
fmul
or
xchg
mov
icebp
iret
loop
ss
out
stc
cli
shr
in
rolb
movb
cmp
jne
mov
mov
xor
add
mov
mov
mov
jmp
ret
fstp
ret
frstor
mov
mov
xor
jle
in
jmp
fisttpll
xchg
xchg
sub
repnz
loopne
repnz
shl
fdivr
ret
clc
sti
jmp
clc
out
shrb
repnz
cmp
xor
ret
fstpt
call
fmul
into
jmp
xchg
shl
int3
fdivrs
stc
div
test
out
cmp
mov
std
testb
xor
aam
sub
loopne
lret
fadd
icebp
hlt
aad
test
fsubr
jmp
lock
ljmp
xor
in
clc
fmul
in
lock
cmp
icebp
shr
fldl
fcmovu
xchg
lret
aas
xor
sub
cmp
repz
int
sarb
loop
out
cli
orb
xchg
in
repz
xor
repnz
xor
int
neg
cmp
rcl
roll
mov
in
in
std
xchg
in
into
call
fcmovbe
cmp
repz
aam
rcr
xchg
stc
out
cmc
lret
leave
fisttpll
rorl
ss
neg
ljmp
aam
call
mov
lret
std
jmp
imul
shlb
call
out
repz
sarb
adc
ds
hlt
neg
out
xchg
enter
fisttps
out
int
hlt
fstpt
cli
loopne
faddl
ljmp
sbb
in
loop
loop
lret
repnz
xor
cmp
in
xor
loope
mul
add
leave
sti
jmp
cmp
ret
fcomp
fcmovbe
iret
cmp
cmp
stc
repnz
cmc
lret
lea
loop
out
out
xor
stc
fdivrl
jmp
idiv
in
iret
out
fdivr
jmp
fcomp
jmp
int3
mov
nop
iret
in
hlt
aam
cmp
xlat
std
sti
cmp
jecxz
enter
stc
fcomp
out
xchg
xchg
out
out
hlt
xlat
ljmp
in
adc
ret
jmp
call
jmp
clc
jecxz
fidivrl
aaa
out
leave
lock
rol
in
cmp
sti
int3
loope
xchg
fucom
fmull
sub
xor
test
out
fldl
not
adc
mov
out
fcmovb
ror
xchg
cmc
dec
shr
aam
out
ljmp
xlat
loop
out
in
in
mov
aam
sub
cmc
cmc
xor
shl
loope
std
repnz
test
fcmovnu
in
int3
fsubrp
test
lock
enter
cld
stc
lock
jecxz
into
sti
faddp
repz
testb
ss
repnz
cmp
into
shl
cmp
ds
out
mov
mov
ror
aam
cmp
repz
idivb
ret
aad
ret
fisttps
xchg
shl
xchg
lret
lds
int3
xor
in
lret
lock
cmc
ret
ds
jmp
in
leave
lret
call
mov
jmp
mul
ss
xlat
icebp
ret
test
cmpb
and
mov
enter
std
cld
repz
leave
sti
aaa
rcl
jecxz
cmc
shl
cli
loop
sti
faddp
loopne
sub
in
incb
out
stc
int
out
into
out
out
adc
fimuls
mov
lret
ljmp
cmc
sarl
les
int
sbb
aad
lret
out
addb
repz
mov
mov
test
jmp
lock
loope
in
cmp
lret
repz
out
out
xor
lret
into
call
test
aam
stc
lret
imul
stc
loope
icebp
sar
out
stc
in
fadd
lret
sti
filds
ret
fdivs
aam
aas
aaa
aad
cmp
fldl
int
xchg
out
das
int
xor
cmp
enter
into
cld
int3
icebp
jecxz
mov
mov
testl
jecxz
vshufps
lret
loopne
sbb
adc
loopne
sub
std
decl
lret
loop
ror
sar
test
in
cmp
sar
into
sti
loopne
shl
iret
xchg
int3
clc
ret
cld
into
xor
xlat
clc
lock
xlat
aam
lea
mov
out
cli
hlt
std
rcl
faddl
fucomp
cmp
mov
xchg
fucom
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
jmp
aam
fistl
in
mov
cmp
movsl
add
xchg
sti
shl
int3
call
cmp
fst
sar
ds
cmc
aas
fimuls
into
leave
loop
fucomp
rcll
enter
ror
cmp
cmp
test
test
xor
rcr
xor
lock
fcomi
cli
out
fdiv
xlat
fildl
xchg
xchg
enter
xor
leave
jmp
aaa
aad
aas
loope
ret
ljmp
test
xorb
rol
cmc
fnstsw
std
dec
xlat
rcl
cmp
loop
ret
fimull
incl
out
enter
cmp
ds
cmp
cld
test
xchg
testl
in
xchg
lock
xor
aad
cmp
into
incb
sti
enter
icebp
in
repz
aad
vpsllw
cmp
in
idiv
out
ljmp
mov
icebp
into
cmp
repz
ss
int
xlat
sti
std
testl
in
loope
repnz
aam
iret
xor
into
out
sarl
cmc
and
std
icebp
xlat
ds
lret
out
jmp
nop
icebp
out
lret
lock
sti
cli
repnz
ror
lret
xlat
fcom
lds
mov
iret
lret
popl
xor
out
jecxz
xor
fmul
int
sbb
cld
repz
fcmove
mov
lret
mov
ror
hlt
xchg
sub
in
repz
cmp
cli
rol
div
fsubr
in
out
mov
repnz
xchg
fbstp
int3
in
rol
call
jecxz
cmp
fprem1
call
test
jecxz
jmp
fincstp
ljmp
mov
ror
lock
cmp
in
int3
cmp
fmul
cmp
stc
shl
iret
vpsubusb
ljmp
fst
fiadds
not
cmp
call
aad
adc
enter
sbb
and
lret
and
fptan
ss
fdivr
cmp
lret
lock
roll
out
jmp
fsubr
xchg
stc
xor
shl
repz
cmp
testl
shl
hlt
icebp
cs
xor
xor
ret
ret
fldl
int
jmp
test
jmp
aam
aad
lret
int3
lret
iret
div
in
cli
repz
aas
cld
rcr
jmp
std
fscale
lock
cld
test
and
sub
int
fmul
into
cmp
ss
fmul
lret
in
ficoms
int
leave
call
jmp
cmp
fscale
rol
aam
loop
call
in
jecxz
int
lock
cmp
mul
test
aas
jmp
jmp
cld
out
nop
loope
test
jmp
aam
iret
shr
stc
jmp
shr
test
icebp
xchg
ret
clc
decb
repnz
in
in
out
xor
shl
aad
out
aad
stc
icebp
clc
sar
vmovq
xlat
lret
in
mov
iret
jmp
leave
jmp
fcmovnbe
lret
ret
ret
addl
rcl
out
mov
xor
sti
int
fcomp
stc
call
cmp
aad
and
out
ljmp
hlt
xlat
cmc
loopne
jmp
sti
cmc
fxch
xor
loop
jecxz
ffreep
int3
loope
xchg
xchg
xchg
mov
int
neg
aam
aam
sbb
sar
shr
cmc
test
testl
call
cmp
out
stc
cmp
out
jecxz
in
loop
xchg
cld
cli
loop
and
shl
les
in
lret
cmp
ds
xlat
xlat
in
cli
loopne
idiv
vpsubusw
adc
int
cmc
repnz
in
xlat
ljmp
hlt
out
loop
icebp
aam
loope
cmp
in
ror
aad
lock
fucomi
hlt
in
into
cmp
shl
in
xlat
shl
rcr
xlat
int3
jmp
lea
repz
enter
loopne
iret
out
repnz
ret
xchg
div
lock
hlt
cmc
nop
jmp
enter
cmp
rolb
shl
mov
lret
loop
jecxz
xchg
roll
in
into
jmp
fdiv
ret
loop
jecxz
cli
mov
mov
cli
test
mov
sub
lret
shr
add
add
fcom
fstp
je
xchg
or
and
jle
movsl
add
aaa
icebp
int
cmp
fcomp
lret
ror
repnz
mov
ljmp
out
iret
out
xchg
ljmp
xor
aas
ret
cmc
cmc
hlt
test
hlt
leave
sti
movl
lock
ljmp
testl
loop
xchg
mov
rol
ror
shl
aad
loop
jecxz
sbb
fsin
fndisi(8087
fadd
mov
loop
test
loope
stc
into
ror
cmp
iret
test
out
rcr
add
fisttpl
jecxz
test
cs
vmovq
lret
cmp
out
in
repz
repz
fadd
test
in
in
lock
cmp
shr
sarb
into
call
aad
fucomip
icebp
fisttpll
shr
leave
idiv
xor
lock
fstpt
std
in
sti
cmp
test
mov
ror
aam
repnz
cmp
loope
jmp
shr
mov
hlt
fisttpll
nop
loope
iret
aam
sub
leave
clc
in
xbegin
ffreep
rol
mul
xchg
testl
in
sar
repnz
dec
out
ror
repnz
fsubrp
sti
ficoms
out
cmp
shr
repz
loope
std
sarl
cmp
dec
lret
xchg
fcmovbe
out
div
xor
sti
out
repnz
in
call
int3
int
lock
loopne
out
loopne
lret
shl
jmp
iret
in
in
divb
std
cmp
fistpll
loop
aam
rcl
fcom
stc
in
fcmovnu
xlat
in
ljmp
ret
in
cmc
icebp
stc
aam
sar
int3
loop
out
faddl
sti
ljmp
repnz
in
shl
cmp
lock
in
int3
cmp
addb
cli
lret
ljmp
jmp
xor
loope
rcl
aad
clc
into
roll
test
clc
testl
loop
cs
out
xor
ss
loopne
ljmp
mov
mov
lea
shl
in
fcmovnbe
loope
sub
test
jmp
clc
ror
sub
mov
iret
cmc
out
fdivs
out
test
ret
aam
les
orl
xor
repnz
loop
cmc
roll
cmc
jmp
test
icebp
addb
clc
fcmovnbe
fcomip
jecxz
into
fiaddl
mov
sti
in
ljmp
loope
hlt
sub
jmp
cmp
jecxz
cmc
fisttpl
fcomip
int
mov
fcmovne
shl
lock
int
into
rol
aad
xchg
loope
jmp
enter
or
repz
jmp
sar
sar
iret
sti
fistpll
sar
test
fxch
stc
fdivr
xchg
shl
call
icebp
cmc
ljmp
sar
leave
clc
sbb
std
mov
fxam
xor
repnz
stc
lret
fcom
mov
leave
sti
enter
in
aad
leave
aam
into
lret
cmc
std
int
addb
into
enter
out
in
out
out
cmc
enter
shr
loopne
repnz
fildl
mov
mov
fdivrs
hlt
cmp
cli
shl
repz
in
repnz
stc
loope
jmp
iret
loop
xchg
nop
cmc
mov
lret
imulb
leave
cmp
in
fadd
fldl
lret
lret
icebp
cmc
xorl
enter
rcr
cmp
fsin
loope
sar
mov
ljmp
out
out
ss
sti
cmp
jecxz
in
icebp
aas
call
out
in
loopne
test
icebp
in
fdivrl
loope
adc
loope
notrack
xchg
hlt
in
out
leave
in
loope
test
pop
fcom
jmp
xor
cmc
push
fdivp
neg
loop
shr
sbb
lea
call
cmc
rol
vpsadbw
in
in
sti
jmp
fst
out
shr
clc
in
fistl
mov
enter
fxch
sti
cli
loope
xlat
in
fucomp
fcmovnu
repnz
call
iret
loope
xchg
xor
out
in
lret
in
xor
sub
mov
movzwl
sub
cmp
mov
movzwl
jg
jmp
int
rol
fst
lcall
lea
jle
movsl
add
ss
iret
loope
rcl
ds
mov
filds
into
fcmove
xor
aam
xlat
sti
fcmovnu
aam
cli
shr
in
aad
idiv
ret
mov
xchg
das
out
ljmp
out
rcr
lock
clc
rorl
out
fsubr
int
xchg
div
sub
xor
xor
ss
into
cmc
ret
jecxz
fildl
in
lret
loop
lret
loop
fucomi
shr
ss
cmp
cmp
fdecstp
shl
fdivr
fisttpl
int3
ror
loop
mov
shl
fldln2
ror
xor
int3
aam
fiaddl
idiv
xlat
mov
test
sbb
xor
cmp
fst
div
in
hlt
shl
aam
adc
mov
xlat
int3
dec
lret
into
out
out
icebp
cmp
cmp
lds
cld
std
fdivp
fiaddl
fucompp
lret
aad
sub
test
out
jmp
inc
ss
lock
in
ret
adc
cmc
out
fmull
loop
out
ljmp
repnz
jmp
xlat
jecxz
repnz
xchg
in
call
xchg
mov
ret
repnz
cmp
into
cmpb
mov
fmuls
int3
roll
xlat
xor
xor
cmp
fsub
lock
fdivr
loopne
xchg
out
incb
out
mov
lret
idivb
cmp
into
cli
hlt
lret
xor
cld
rcr
incl
addl
out
sar
repz
cmp
fucomp
cld
cmp
out
xlat
les
clc
jmp
shl
shrl
xor
repz
out
call
idivb
repnz
jecxz
fsubr
loopne
rorl
shll
into
iret
leave
not
mul
fld
loopne
aam
in
mov
int3
xchg
xchg
jmp
sub
ffree
faddl
xchg
cmc
xlat
test
leave
out
xchg
int3
xor
rcr
xor
cmp
loope
loopne
out
sar
in
mov
jmp
jecxz
jmp
ret
std
ss
ljmp
loope
in
cli
lret
fucompp
mov
out
fmulp
out
hlt
lock
int3
cmp
ss
loopne
aad
out
repnz
loop
xchg
mov
mov
faddp
out
lret
idivb
sar
rcl
cli
rcr
ret
mov
ffreep
out
in
out
fsubp
test
cmc
hlt
les
xor
cs
clc
ds
shr
aad
cld
mov
mov
out
nop
mov
xchg
hlt
xor
ror
jmp
fcmovbe
sub
fcmovnu
shl
out
test
cld
jmp
xchg
call
xor
lock
xor
aam
cmp
ret
loopne
loope
shl
mov
fucom
out
mov
push
sub
xor
stc
jmp
fiaddl
stc
ror
std
aad
lret
fucom
cld
out
aam
shl
repz
in
out
iret
out
fdivr
shr
fsub
test
aam
cmc
mov
in
icebp
iret
in
incl
vpaddd
call
icebp
ds
cmc
fildl
sti
in
call
out
das
jmp
in
shr
iret
rol
repnz
jmp
fnsetpm(287
sub
loope
aam
ror
out
aad
std
call
fcomp
fsub
roll
jmp
icebp
jmp
mov
cmp
jmp
loope
xor
test
icebp
xchg
xchg
mov
sarb
lret
leave
sti
sti
out
clc
sti
into
shr
ds
out
addl
test
int
fldl
jmp
aaa
shl
idivb
repz
ds
mov
fiadds
iret
fldl2t
sub
cmp
icebp
fcmovnu
hlt
roll
int
fsubrp
cli
rcr
call
repz
sub
lret
addb
repz
neg
fstp
mov
lret
out
jecxz
int
nop
neg
repz
lock
sar
cld
cmp
rol
in
fdivrl
fldl2t
fsubr
into
in
ss
xor
iret
std
cmp
out
lret
rcr
ds
rol
ret
mov
enter
out
hlt
aas
loope
xor
stc
cmp
xlat
fcmovbe
repz
loop
enter
in
icebp
in
mov
ljmp
rcr
cmp
fcmovbe
xor
sub
sub
mov
jmp
jmp
leave
ret
int
int
mov
cmp
out
enter
add
xlat
fcmovbe
fincstp
and
test
rorb
iret
out
enter
fcom
fcmovnbe
test
fninit
in
into
enter
xchg
test
ljmp
jmp
ret
jmp
out
idiv
adc
div
xor
cmp
aam
imul
shl
shl
shl
fcomp
ljmp
mov
shlb
lock
rcr
leave
sti
ret
ret
sti
icebp
lret
in
test
fsts
jecxz
clc
xor
std
cld
out
in
int
test
fmuls
in
iret
std
nop
jecxz
ret
shlb
lret
into
rcr
cmp
cmc
adc
mov
mov
mov
lret
xchg
cmc
out
loope
aad
rcl
int
int
cmp
in
stc
ret
inc
out
std
in
xchg
loop
xchg
enter
fcomi
xor
ljmp
repz
in
orb
mov
xorl
std
clc
ss
rcr
in
rolb
fcmove
imul
in
out
fisttpll
ret
aad
ljmp
clc
test
test
test
test
rcl
rcl
jmp
cmp
out
aaa
fcomi
cmp
ds
neg
imul
fdivrl
fcom
stc
icebp
fcmovne
into
lret
rcl
ror
lock
lock
cmp
test
shl
roll
lret
xchg
jmp
loop
vpmullw
fcmovnu
fcmovu
call
repz
loopne
test
jecxz
lret
lret
int3
mov
iret
hlt
xor
idivl
cmp
loopne
xlat
rcr
aad
in
test
shl
fisttpll
xchg
jmp
cmc
fcmovne
out
hlt
out
sarl
fcmovb
shr
stc
mov
sti
in
call
xor
ljmp
in
sti
std
in
testb
sub
ret
div
cld
call
repnz
sti
loop
sarl
mov
mov
xor
lock
iret
rcl
cmc
iret
into
iret
jecxz
fdiv
rcr
leave
adc
mul
fsubrp
rclb
iret
sub
cmc
cmp
ljmp
cmp
repz
in
mov
mov
int3
nop
bnd
xlat
fcmovu
lock
in
rcl
ret
sar
out
mov
orb
nop
div
in
aad
cld
ljmp
repz
ret
mov
in
icebp
jecxz
jmp
in
xor
sarl
idivb
test
not
cmc
loopne
in
mov
stc
test
mov
out
call
int
xor
cmp
aam
ljmp
xor
xchg
and
hlt
stc
not
clc
int3
cmp
lret
cmp
test
icebp
lret
loop
fucomi
iret
lock
mov
cmp
xlat
in
fadd
in
ret
rol
rcl
lds
out
cli
sub
jmp
vpaddq
out
loope
div
test
lock
in
repnz
ret
xchg
xchg
mov
out
out
int
out
xor
in
loop
aad
mov
ljmp
call
lret
out
out
cmc
cli
in
icebp
cmp
shl
xchg
in
cmc
int3
leave
call
std
jecxz
shlb
aam
out
fsubrp
icebp
fidivrs
sti
loopne
call
fsubr
xchg
mov
xor
ret
rcr
ds
fdivl
add
fildl
testl
out
ret
fucom
lret
rolb
out
cmp
mov
xchg
mov
in
fsubr
stc
int
fcmovb
cmp
mov
jmp
call
out
xor
fcmovb
cmp
xor
fidivrl
incb
loopne
loope
repnz
jmp
enter
call
imul
loope
aam
rcr
ljmp
xchg
xchg
aaa
clc
xor
call
cld
cmp
xchg
xlat
sar
repnz
xchg
xchg
xor
jmp
out
cli
in
stc
fdivrl
sti
test
xlat
rolb
leave
fstp
lret
xor
lret
xor
cli
iret
std
fcmovbe
xlat
aas
adc
fbstp
jmp
aam
mov
stos
mov
jle
add
xchg
stc
repnz
loopne
in
xor
fmul
shr
jmp
aas
repnz
les
xchg
xchg
bnd
aam
fcmovbe
icebp
in
ret
in
cmp
testl
out
in
idiv
rcl
in
aam
div
fdivrl
ds
cli
fcomip
clc
mov
int
roll
int
in
fcompp
jecxz
into
xchg
out
test
out
and
rcr
xchg
loopne
repz
icebp
out
out
addb
ret
in
incb
mov
fists
jmp
sarl
cmp
int3
in
cmc
fstp
cld
loop
test
xchg
call
call
out
lret
cmp
out
into
clc
imul
fstpt
sbb
cld
div
cld
fcmovb
cli
clc
lret
out
in
ljmp
ss
aas
fsubr
fiadds
inc
clc
add
in
xor
test
aad
iret
hlt
frndint
repz
enter
loope
loopne
orb
into
test
ljmp
cmp
icebp
test
sar
addb
in
or
iret
ljmp
lds
shr
fdivrl
in
loope
loop
cli
and
and
loopne
out
loopne
out
mov
lret
jecxz
repz
lret
icebp
cmp
in
repz
ret
and
out
iret
sar
leave
leave
loop
cli
xor
fnstcw
loop
shl
xchg
rol
leave
xchg
test
jmp
out
repz
rcl
call
iret
test
fcmovnu
ret
ljmp
jmp
cmc
aam
fucomip
rcl
roll
rcl
test
out
repnz
mov
lock
cmp
sarl
test
cld
rcr
mov
xlat
fmul
in
repnz
out
out
lret
aaa
idiv
ljmp
fcmovnbe
mov
jmp
jmp
xchg
mov
cld
in
ljmp
ret
iret
enter
idiv
sub
lock
xchg
jmp
mov
xor
xor
enter
fcomi
fdivrs
xchg
jmp
in
mov
in
iret
int3
push
fldl
cld
fxch
stc
sarb
aam
in
aad
shl
xchg
addl
icebp
out
xor
icebp
aad
ds
and
cmc
cmc
testb
in
out
jmp
call
rcl
int3
cmp
std
fdiv
mov
in
test
jmp
in
call
lock
in
enter
fldl
jecxz
mov
in
int
orb
not
lret
aad
flds
ret
ret
fmulp
test
out
fsub
iret
loop
lock
nop
leave
hlt
fidivl
div
ljmp
repnz
rcl
and
loopne
in
int3
ror
xchg
xor
cmp
fsincos
cmp
cmp
fprem
fcmovnu
xlat
les
in
out
ror
loopne
hlt
fcom
sar
repnz
aam
int
test
ret
rcr
int3
loop
loope
test
shr
xor
ljmp
std
clc
lret
icebp
fcos
cli
cli
test
les
in
out
fisttpll
cmp
repnz
iret
aas
std
fsubr
test
jmp
ds
int
rcr
repnz
std
iret
aad
leave
lock
cmp
in
aaa
fadds
testb
stc
ljmp
in
cmc
aad
xor
lret
shl
ret
mov
xchg
loopne
ljmp
hlt
cmp
xor
xlat
out
cmp
fiaddl
faddl
fbstp
ss
aad
in
ds
clc
mov
xchg
int3
loop
mov
jmp
out
xor
iret
int3
out
sti
out
fptan
xor
rcr
fisttps
lock
lock
ljmp
cld
or
or
loop
cli
leave
cli
int3
clc
enter
adcl
fidivrs
into
fiaddl
xlat
mov
fisttpll
out
loop
ror
lock
fdivrl
repz
repz
int3
int
ret
mov
clc
sub
lret
out
mov
xchg
jb
add
inc
cld
mov
cmp
je
jmp
xlat
rol
xlat
enter
push
mov
sarl
movsl
add
std
aad
aam
into
fsubr
hlt
cmp
aam
fcomip
cmp
fdiv
aam
int3
jmp
fnstsw
xchg
iret
test
xor
into
xor
cld
fucomp
cmp
cmc
rolb
out
int3
lock
out
rorl
clc
fcom
leave
out
rcl
iret
loopne
in
cmp
fcom
enter
fsubrp
fsts
repnz
sarl
fxch
cmp
lret
aas
ds
ds
stc
loopne
jecxz
adc
orl
fdivr
idiv
repnz
hlt
loop
flds
jmp
mov
ror
shr
out
repz
imul
repz
std
xlat
out
xlat
xlat
cli
leave
fcmovnu
test
int
loope
jecxz
jmp
jmp
aaa
neg
std
cmp
repz
xchg
mov
mov
sub
into
int
loope
into
xor
repz
rcr
stc
sti
xor
cmp
bnd
aas
jmp
iret
lock
fcmovbe
fnstenv
ss
div
fiaddl
roll
shl
mov
enter
fdivs
cld
cmp
jmp
in
aam
sbb
hlt
in
into
fsts
call
in
std
rcl
int3
sub
loopne
neg
ffreep
in
xchg
int3
iret
int
int
fucomip
in
jmp
xor
repz
cli
into
incl
ret
cli
vpmaxsw
rcr
loope
ror
enter
xlat
xor
fdivp
in
iret
fdivrl
in
jecxz
cmp
shl
leave
clc
in
addb
xor
jmp
sar
icebp
rcr
mov
std
sbb
into
fists
shl
cmc
out
in
fidivs
pushl
icebp
cmp
fsub
cmp
cli
ret
test
fcom
mov
loope
fcomip
jmp
in
shl
not
enter
aas
shl
sar
sub
icebp
leave
jmp
in
xor
icebp
sti
sti
into
ljmp
fld1
leave
shl
testb
filds
repnz
sar
aam
xor
sub
xchg
sarb
sbb
aas
lea
lret
idiv
imul
incl
lock
loop
in
test
fsubp
in
int3
icebp
repnz
hlt
mov
ljmp
shl
aam
jecxz
ret
fcmovbe
ret
in
shr
int3
inc
fmulp
out
nop
out
jecxz
stc
cmp
cld
cmp
cli
cmp
jmp
fiaddl
fiadds
mov
fcmovnb
aad
sti
lock
filds
loopne
into
fmulp
shl
ffreep
cs
leave
aas
fdivrl
ret
fdivrp
xlat
cli
ret
test
sbb
in
loop
iret
aam
ret
iret
in
xor
xlat
fmul
lock
neg
clc
rol
leave
neg
test
fmul
int
in
lret
xchg
ret
jmp
hlt
fcomip
xlat
not
fmul
jecxz
imul
aas
enter
xchg
loope
mov
in
enter
fcmovu
cld
int3
jmp
out
add
mov
in
jecxz
enter
cmc
cmp
xlat
xor
clc
ret
ret
in
aad
nop
jmp
in
loopne
in
aam
enter
xor
sub
repz
mov
test
fldl
int3
int3
mov
lock
cmp
cld
flds
aam
xchg
enter
in
loope
in
icebp
ljmp
out
fsubr
into
lock
hlt
call
mov
lret
out
cmp
cli
enter
fdivs
icebp
ffreep
call
mov
fcomip
out
mov
fucomp
cmc
lock
icebp
shl
cli
inc
jmp
mov
mov
rclb
xor
repnz
xor
iret
out
xor
fcmovnbe
lret
jecxz
mov
std
test
das
in
in
jmp
stc
rol
aad
roll
fcmovu
loope
fiadds
icebp
in
call
lret
xlat
cmp
aad
cmp
leave
inc
fstp
enter
test
fdivs
jmp
cli
iret
out
into
loopne
sti
out
lock
mov
jecxz
mov
cli
ret
xchg
out
mul
aad
clc
xor
fcomip
div
into
int3
cmp
fcmovnbe
vcvttpd2dq
cld
out
iret
xchg
int3
sub
out
in
mov
jmp
into
ror
fxch
fst
cmc
mov
mov
jecxz
jle
movsl
add
ljmp
sarb
xchg
rcl
mov
enter
addl
int3
enter
cmp
xlat
in
call
ret
out
xchg
in
jecxz
loop
int3
aad
ret
sub
xor
cli
leave
cli
lret
into
cmp
iret
mul
ljmp
in
fsub
aaa
rol
cmp
cmp
adc
std
lock
loop
mov
loope
loop
shll
xor
iret
out
cli
xlat
int
fmul
cmp
sbb
test
leave
ljmp
into
in
icebp
repz
in
xor
aad
cmp
shl
repz
rol
fcmovu
out
fucomp
std
xchg
sbb
ljmp
cmp
sti
rol
stc
roll
or
repnz
xor
cmp
hlt
xor
stc
xlat
xor
sbb
into
in
decl
lock
cmp
cmp
xor
cmp
out
cld
cmp
loopne
fldl
test
std
loop
ret
cli
int
rcl
int3
stc
fmulp
test
cli
loope
stc
fucomip
in
cli
sub
shl
xchg
mov
not
lret
leave
lret
int
neg
cmp
and
out
call
shl
iret
repz
out
lock
lret
aaa
cmp
testl
repnz
jecxz
jmp
loope
int
fsubrs
rcr
fxam
leave
in
out
fabs
icebp
iret
sar
out
fdiv
fcom
aam
mov
in
iret
rorl
xor
lds
rol
cld
jmp
cli
out
shl
shl
jmp
mov
lock
out
cli
aad
out
sar
iret
repnz
cmp
fcmovb
call
int3
addb
rolb
repnz
xor
div
rolb
in
ret
ljmp
loop
repnz
jecxz
lret
out
cmp
icebp
int
iret
sti
mul
aad
fsub
sub
loopne
mov
xchg
loop
aam
aam
imul
hlt
out
cli
iret
fcmovne
fdivp
and
out
clc
fisttpl
mov
xchg
lock
not
rcr
fdivr
frstpm(287
cmc
test
cld
in
out
sub
incl
out
call
filds
shl
aad
test
fiadds
loop
les
xor
aad
ds
xor
stc
test
in
test
out
out
fisttpl
loopne
aaa
jmp
fsubrp
icebp
repnz
idiv
rcr
fildl
fiadds
icebp
lret
out
int
cld
leave
test
sar
cmc
leave
jecxz
loope
int3
loope
ljmp
test
rolb
fsub
idiv
test
fisttpl
xor
cmp
fcmovu
cmp
fcompp
out
vcmpsd
out
shl
int3
out
in
xor
cld
in
into
fdivr
cmp
fcmove
call
repnz
jmp
cs
clc
lret
icebp
into
std
std
rcr
cli
fcomp
cmc
aad
fadd
xchg
sub
int3
jmp
ror
jmp
rol
icebp
cld
cmp
aam
stc
aam
mov
hlt
xchg
jmp
leave
aad
cli
cmp
jmp
ffreep
aad
out
mov
stc
mov
iret
jmp
aad
lret
call
out
cmp
fdivp
mov
stc
out
int
or
sub
in
call
cmp
shl
fadds
iret
test
out
addb
stc
shll
out
cli
in
fisttpl
leave
fisttpll
lret
ror
divb
aaa
rcl
call
repnz
fcmovbe
loope
rol
fucomp
mov
ss
jecxz
cmp
fcmove
icebp
std
test
cmp
stc
ror
jecxz
cli
xlat
lret
jmp
in
ljmp
jmp
int3
jmp
in
adc
jmp
cmc
xlat
les
call
cmp
flds
sarb
mov
sti
jmp
enter
lret
clc
cmp
lret
ss
call
fidivrs
rcr
filds
roll
test
jmp
out
jmp
cld
loopne,pt
add
xlat
cmp
add
add
add
rol
rcl
rcl
sar
and
adc
push
pushf
or
jle
movsl
add
cmp
sti
sbb
ffree
out
sti
lret
nop
ffree
mov
lret
aad
clc
xor
fdivr
inc
cli
repnz
fisttpl
out
test
fdivp
cld
icebp
roll
sar
cmp
loopne
std
aam
ss
loope
fdivr
test
aas
leave
or
call
iret
out
call
cmp
mov
or
mov
leave
out
lock
jmp
xor
enter
xor
std
cmp
jecxz
test
decl
and
aaa
lret
xor
ss
rcl
ss
jecxz
add
out
xchg
aam
ss
rcl
ljmp
ret
icebp
xor
cli
clc
mov
xchg
mov
aad
out
clc
into
shlb
aad
fneni(8087
fnstsw
jmp
test
out
das
xlat
shl
cmp
lret
int
in
loop
xor
cli
lret
jmp
xchg
mov
rcll
cs
lret
cmp
cmc
ljmp
cmp
out
cld
shl
loopne
sarl
call
cmp
clc
std
aad
repnz
leave
test
out
loop
loopne
loope
clc
loope
jmp
int3
sbb
int3
rcr
hlt
in
mov
in
lret
out
sub
rcl
repz
stc
cmc
fchs
icebp
ret
shl
incb
loope
mov
loop
int
repnz
lret
cmp
out
fdivrp
sarb
mov
fists
vpsrlw
xor
leave
cli
cmp
and
shl
xchg
int3
in
stc
xchg
loopne
cli
lret
xor
ss
cmp
into
lock
adc
in
stc
fcmove
loopne
enter
std
incl
cmc
aam
fxch
xlat
lret
push
aas
aad
loope
fucomip
sbb
into
stc
test
rol
into
aam
in
lret
fcmovne
int
icebp
fnstenv
aaa
cmp
jmp
out
mov
mov
rcl
frstpm(287
cli
test
sti
cli
loopne
mov
xchg
addl
xchg
rclb
aam
f2xm1
fdivrs
push
repz
in
cld
in
mov
test
int3
iret
jmp
icebp
adcb
call
fidivs
out
loope
adc
leave
mov
mov
jecxz
out
in
jmp
ret
fdiv
xor
ljmp
ret
incb
iret
leave
xchg
fmul
lret
das
lock
push
repz
out
out
jecxz
jecxz
addl
std
mov
out
ds
aam
into
sarl
test
fiaddl
xor
xchg
in
xor
enter
ror
ret
loopne
loop
sar
in
out
jmp
out
lock
rorb
clc
sar
lock
enter
cmp
test
ret
hlt
sti
mov
shl
mov
jmp
xor
hlt
cmp
sar
adc
mov
cmc
sti
mov
sti
clc
fisttpl
jmp
jmp
into
sarb
test
loope
mov
lret
xor
int
out
shr
xlat
jecxz
loope
sti
fcmovb
fstp
fnclex
enter
nop
mov
call
into
fnstsw
enter
ret
icebp
cmp
lret
xchg
call
mov
jmp
cli
cmp
in
repz
clc
div
repz
int3
sti
out
icebp
loope
test
out
mov
rcr
ret
fmulp
xlat
sar
in
shl
out
rol
xchg
aad
mov
fsubr
out
not
jmp
lret
icebp
sarb
fst
rcr
lret
test
sar
sti
ljmp
int
in
ror
hlt
aas
rolb
lret
fsubr
in
iret
mov
stc
out
xlat
cmp
xlat
xor
repnz
cmp
shl
repz
hlt
adc
into
movl
div
cmc
fidivrl
fdivr
loope
in
cld
test
ds
jecxz
fiadds
int
fsubrp
xchg
in
rol
clc
rcr
neg
aas
lock
fdiv
aas
lret
ret
clc
xlat
out
or
xor
out
int3
cmc
jmp
in
lret
stc
clc
hlt
fiadds
movb
cmp
jmp
rcl
rcl
fstp
rcr
cld
cmp
jmp
flds
movsl
add
imul
fdiv
std
fiadds
xchg
iret
ret
iret
xlat
cmp
std
repz
aad
test
movb
int
xor
div
aam
shr
inc
test
loopne
test
adc
mov
mov
jecxz
dec
in
cmp
xor
cli
aaa
rcr
sbb
clc
aas
rcl
loopne
out
cli
fldl
xchg
ljmp
int3
cld
std
cmp
lock
cld
and
lea
xchg
lret
out
rcl
ret
fsubrp
icebp
sarl
call
jecxz
call
out
in
dec
mov
in
xor
out
cli
adc
les
jmp
or
sti
repnz
int3
incb
call
aam
mul
roll
cld
repz
into
jecxz
repnz
ret
jmp
aad
cmp
out
repz
fmul
aam
loope
sbb
repz
enter
aam
in
xlat
lret
sar
loope
cmc
fcomp
out
vcvttpd2dq
lret
loope
out
fucomp
xor
cs
aaa
jmp
not
fucomp
fisttpl
out
cmp
in
xchg
mul
shlb
in
xor
fucomp
in
cli
clc
shr
std
icebp
fcmovbe
fcmovnb
fisttpll
rcl
rcr
stc
in
out
shr
aaa
loopne
repz
ret
repz
aam
xchg
imul
xor
xor
hlt
sti
aas
testl
cld
addb
jmp
xor
aam
into
hlt
fdiv
clc
fucom
jmp
iret
fyl2xp1
icebp
hlt
mov
in
aad
out
in
rcl
out
testb
aas
rcr
std
lret
jmp
adc
repnz
out
jmp
icebp
lret
out
shl
ret
fsubr
jmp
testl
in
int3
test
sti
shll
int3
cmp
addb
cli
fsub
in
xchg
out
fadd
lret
sti
in
cmc
sti
jmp
fiadds
fisttpl
xchg
xor
in
vpminsw
in
leave
rcl
cli
cmp
ret
mov
adc
fdivr
in
rorb
out
lret
jmp
lret
call
out
out
iret
sub
rcr
aam
add
jmp
ret
not
std
loope
shl
shl
fcomip
fiadds
xchg
loope
mov
sar
ljmp
and
sbb
hlt
movb
fadd
rclb
cli
jmp
aam
aas
cmp
cmp
rolb
orl
out
loope
out
cmc
repz
ljmp
aam
xchg
sti
in
in
stc
int
int3
loope
divl
repz
aam
divb
xor
jmp
ret
lock
sbb
cli
int
jecxz
out
xchg
test
lret
ret
out
xor
aam
std
mul
test
ret
testl
xchg
aad
xor
out
into
clc
cmp
ds
loope
fstp
rcl
std
xchg
lret
mov
mov
loopne
loope
sub
in
in
cmp
repz
cmp
int
lea
test
icebp
cmc
loop
cmp
hlt
fdivr
repnz
test
sti
ds
fmul
jecxz
ljmp
fcmove
std
cli
fidivrl
hlt
out
sti
addb
out
std
lock
xchg
out
loopne
xchg
push
out
repz
xor
iret
ss
out
xor
cmp
testb
out
lock
bnd
jmp
enter
ret
stc
loop
rorb
cld
stc
mov
hlt
repnz
out
jmp
call
fdivr
cmp
cmc
not
xchg
in
fisttpll
ss
shl
cmp
xor
ret
std
fcmovu
hlt
icebp
mov
ljmp
ljmp
jmp
out
loope
in
fcmovb
fdivr
ds
dec
out
fsubp
ret
int
aam
ljmp
loopne
in
rolb
jmp
ret
stc
mov
test
jmp
out
leave
out
loopne
leave
std
jecxz
repz
std
xlat
je
mov
mov
jmp
int3
enter
lret
int
stos
test
xchg
movsb
fwait
fsub
jle
movsl
add
test
cmc
aam
int3
fdiv
xlat
dec
call
aas
stc
lock
xchg
int
lret
mov
in
out
sarl
into
cmp
fistpll
xchg
xlat
loop
jecxz
xchg
repz
jmp
loopne
iret
hlt
testb
clc
test
xlat
int3
into
fdivrp
jmp
lock
lret
enter
rcl
loop
cmp
enter
test
popl
lock
int3
call
fcomip
cli
rol
in
rol
cld
out
int
fcmovnu
int3
icebp
mov
in
repnz
sar
stc
test
jmp
mov
loop
test
in
repnz
icebp
cmp
lret
rcr
sti
aad
xchg
ret
xchg
testl
loopne
jecxz
hlt
leave
cmp
lret
not
out
fdivr
ds
call
test
cmp
nop
in
loop
int
out
stc
mov
xlat
fdiv
rolb
bnd
out
mov
in
mov
xor
lret
ljmp
dec
test
jecxz
out
fimuls
fucomip
sub
int
leave
sar
hlt
cmp
addl
test
test
aam
out
into
xlat
stc
aad
leave
out
int3
hlt
cmp
repnz
movb
xchg
xchg
lret
ret
mul
xlat
in
cmp
cmpl
movb
xchg
fsubrs
fptan
shr
aaa
std
fidivl
sti
idivb
hlt
fnstsw
sbb
in
ljmp
repz
lock
in
fstpt
test
iret
ds
xchg
lret
out
xchg
stc
leave
out
into
loope
stc
shlb
lret
hlt
neg
lret
cld
rcr
faddp
mov
loop
stc
in
fdivr
fucomp
fcomi
sbb
cmc
in
jmp
loopne
leave
jmp
xor
std
xor
cmp
fsub
loope
inc
cmp
sub
orb
rol
xor
sti
xor
out
cmp
xlat
lock
xchg
mov
in
xchg
in
neg
loop
iret
cs
aas
out
ds
repz
mov
rcr
fildl
out
shl
in
ret
repz
jmp
aam
aaa
xlat
out
xchg
test
in
call
xchg
mov
icebp
out
in
aam
shl
ds
sbb
xlat
fcmove
fimuls
decb
aad
in
lret
out
lock
aas
hlt
in
in
in
ffree
fiaddl
filds
enter
ret
jecxz
not
int
in
iret
into
jecxz
add
fmulp
sti
mov
fucomp
mov
ljmp
cmp
aad
mul
stc
in
ss
in
repz
lret
lea
in
xor
neg
rcr
cmp
int
clc
aas
cli
jecxz
stc
enter
ret
loopne
imul
aad
in
ffree
aas
cmpl
jmp
hlt
ret
call
mov
ror
sub
out
in
shl
xor
sarl
loop,pt
jmp
in
test
cld
out
out
jmp
aam
repnz
cs
rcl
rcr
neg
icebp
loope
fcomp
aam
fisttpll
in
jecxz
xor
lret
out
cmp
aam
cmp
not
testb
fsub
loop
fsubrp
in
in
int3
jmp
fidivs
call
test
in
jecxz
adc
repnz
test
loopne
xor
xor
fadds
repz
out
mov
loope
xchg
jmp
into
xlat
leave
jecxz
cmp
enter
jmp
sar
jecxz
aas
loop
sub
sti
in
mov
cmc
div
jecxz
shl
lock
xlat
icebp
stc
test
aad
jecxz
idiv
ret
aad
inc
enter
xchg
out
cmc
fcmovbe
icebp
fdiv
lret
in
hlt
test
out
call
cmp
xchg
icebp
cmp
in
cmp
clc
idivl
fdivr
rolb
test
hlt
out
in
xlat
in
xor
ss
cli
int3
fcmovne
repz
cmp
aad
stc
mov
in
xchg
cld
into
loopne
out
mov
mov
lea
add
mov
mov
mov
jmp
int
rcl
fcmovu
int
xchg
daa
ljmp
jmp
jle
jmp
rcr
rcr
sub
aad
repz
call
xchg
out
test
in
neg
jmp
jmp
lret
hlt
cmc
fsub
test
out
fiaddl
in
loope
in
int
ljmp
lock
sti
lock
fadd
mov
call
repnz
xchg
cmc
out
jecxz
hlt
xor
shr
ret
std
loop
std
shl
cli
testb
xchg
lock
das
xor
fxch
lret
ljmp
into
fstp
xlat
ror
clc
ljmp
roll
xlat
icebp
cli
rcr
hlt
cmp
leave
filds
lret
in
lret
cmc
jecxz
lret
out
cmp
cmp
fsubr
sar
ret
stc
sbb
test
xchg
enter
and
out
xchg
in
jmp
cmc
jmp
fsubrp
std
cmp
out
ljmp
in
std
fldl
in
out
xor
push
sarl
in
cmp
fldl
mov
out
xchg
out
ret
repz
lret
int3
hlt
leave
cmp
cmc
test
ljmp
in
mov
shl
xor
lret
hlt
into
in
cmp
out
icebp
icebp
jecxz
mov
rolb
in
out
enter
test
fdecstp
int3
cmc
aad
xor
test
in
xchg
in
loopne
ljmp
repz
dec
sarb
icebp
repz
jmp
roll
icebp
loopne
fisttps
lret
jmp
sti
fcmove
loope
xchg
orl
jmp
adcl
fsubr
cmp
test
ret
jmp
aad
out
mov
or
int3
and
cmp
ret
leave
fsubrp
dec
fprem
in
test
sar
aad
addl
in
shl
lock
in
xor
enter
cli
mov
xor
in
in
lret
fmulp
call
div
fadd
rorb
in
into
lret
loope
out
loop
sti
lock
stc
idiv
ds
lock
rcr
test
lret
fucomip
test
call
stc
clc
aam
out
cmp
in
int
mov
nop
out
enter
cmp
std
loope
mul
ret
test
jecxz
lds
cmc
xor
ret
in
aam
fmul
stc
xorb
loop
loop
faddp
fisttps
loopne
out
addb
fcom
lret
lret
in
repz
aas
aas
lock
call
into
int
call
aam
cs
sti
cli
repz
int
shl
ret
fadd
int
lret
std
out
out
fisttps
hlt
jmp
out
std
int
jecxz
loop
sbb
xlat
jecxz
mov
hlt
icebp
mov
icebp
repz
call
loop
cmp
neg
fcmove
test
out
repz
cmc
xor
cmp
ror
ss
mul
ds
in
fldl2e
hlt
aad
mov
adc
int3
das
sub
out
lret
out
faddp
shr
test
test
icebp
aad
std
fmul
sti
leave
int3
shl
nop
ror
cli
aaa
shr
xlat
fidivrs
cld
aas
aas
out
test
lock
fcomi
clc
flds
loop
shr
rcl
jmp
ljmp
shl
rolb
lret
mov
ror
lret
jecxz
into
pushl
div
aam
cmc
xor
aas
fprem
stc
aas
fcomi
mul
in
out
test
mov
testb
icebp
xor
sar
ret
cli
ret
xlat
or
leave
lret
in
mov
sub
lret
idivb
out
xor
clc
ss
fsubp
lret
fdivrp
out
orl
shl
into
cmp
sar
loope
xchg
mov
loop
ljmp
loopne
repz
in
lock
jmp
cmp
and
xchg
loop
int
ret
aam
int3
int
jmp
cmp
fdivr
xlat
in
xlat
mov
mov
rorb
fldcw
sti
loopne
xor
add
sbb
int3
lds
in
rcr
icebp
mov
mov
xor
add
mov
jmp
mov
fst
fxch
jg
lods
loop
fsts
jle
add
loope
xor
xor
leave
orb
fucomip
xchg
xchg
mov
aaa
ljmp
int
repnz
xchg
mov
fiaddl
push
in
leave
aam
xlat
aad
aaa
aad
ds
fadd
clc
aam
out
orl
fucomp
out
aam
in
icebp
out
sar
int
sbb
fildl
jmp
leave
ljmp
lret
into
loope
loope
cmp
in
cmp
xor
rol
in
rcr
loope
mov
enter
hlt
cmc
enter
fsub
aas
cmc
idivl
clc
std
rcr
ret
test
mov
leave
lock
mov
cmc
out
int
cmp
hlt
rcl
xchg
shl
addb
jecxz
shl
loopne
sub
cmp
aam
cmp
rcl
sti
test
jmp
int
rolb
test
leave
fst
shr
in
fdivrp
ljmp
mov
fildl
loop
out
fstp
call
loopne
in
mov
fdivrp
out
in
jecxz
decl
in
out
lret
repnz
stc
cmpl
fdiv
fsubrp
cld
std
mov
repnz
iret
cli
cmp
cmp
enter
out
fcmovb
and
fdivrp
into
fxch
lret
xchg
jmp
into
xor
repnz
stc
shl
shl
cmc
cld
xlat
fcmovnb
cld
sar
shl
xor
out
cmp
repz
cli
shl
xchg
repz
loop
mov
out
call
xor
xor
xor
sar
stc
test
xlat
and
in
loope
jmp
nop
xchg
mov
subl
cmc
sub
div
rcl
icebp
fldl
out
test
dec
in
xor
les
fdivr
rcr
cmp
shl
fstp
xchg
enter
ret
loopne
icebp
stc
jmp
ficoms
stc
cli
std
rcl
hlt
in
rcr
cmp
mov
in
in
popl
hlt
xchg
aam
into
div
xlat
shlb
xor
fcmovnbe
aam
cli
cld
in
xchg
xchg
loop
cli
hlt
cld
neg
fdivrs
fcomi
aas
jecxz
jecxz
mov
aad
fucom
mov
iret
into
aaa
into
ror
shl
in
loopne
fdivr
mov
loope
xchg
rcr
in
lock
into
in
ret
sti
out
fxch
int
sub
loope
shl
jmp
xlat
jecxz
ljmp
out
call
repz
ror
sti
ret
mov
jmp
in
mov
xchg
aad
ret
ljmp
int
clc
faddl
stc
fiaddl
fucom
test
repz
fcmove
int3
leave
cmpl
fiaddl
loop
xchg
out
aam
repnz
cmp
cmp
lock
loop
xchg
lds
ljmp
lret
loope
fdivs
enter
iret
repnz
test
mov
mov
rorb
fcmovb
sar
cmp
stc
xor
shl
jmp
int
cld
xchg
int3
xchg
mov
xor
in
jmp
jmp
cmp
hlt
hlt
in
ret
jecxz
inc
icebp
leave
in
cmp
out
aaa
xor
cmc
rcr
sti
out
xchg
fcomp
rolb
out
nop
add
sub
hlt
hlt
fxam
aad
ror
in
icebp
fsub
incb
and
les
hlt
lret
int3
rcl
lret
in
sarb
mov
fimull
into
inc
xor
sub
fucomp
jmp
cmc
sti
call
jmp
leave
cli
xchg
loopne
rcl
icebp
out
cmp
sti
fdivr
stc
fyl2x
cmp
cmpb
std
hlt
mov
lock
shr
in
in
fadd
into
clc
xor
in
idivb
dec
lock
cmp
loopne
sub
xlat
sub
enter
aad
stc
shl
jecxz
in
cmp
cmp
xor
mov
in
int3
int3
sti
dec
int
nop
loopne
cli
lds
jmp
lret
repz
sar
fucom
jmp
enter
nop
sub
repz
in
enter
cli
cmp
int3
int3
sbb
dec
in
movb
cmp
je
mov
mov
add
mov
mov
mov
jmp
rol
lret
aad
mov
leave
int
jle
movsl
add
push
fdivrp
ljmp
out
nop
call
aad
jmp
sarl
idiv
test
leave
jmp
jmp
int
incb
int3
ljmp
fstpt
fdivr
rolb
sub
out
jecxz
repnz
in
ljmp
shll
rcl
loope
in
roll
enter
loope
mov
icebp
xor
out
cmp
fistpll
fdivr
sti
shl
cld
div
out
int
addb
xlat
stc
rcr
cmp
in
cmc
loop
shr
shl
int3
fcmovu
out
int3
xchg
xchg
shl
icebp
test
fpatan
fcmove
lock
test
loope
in
stc
add
lret
std
ffreep
lret
mov
cs
cmp
cmpl
lock
jmp
fldl
hlt
xor
cmp
sbb
rcr
xchg
inc
ret
leave
ret
sbb
orl
shr
xor
xor
cmc
stc
int
std
in
out
repz
jecxz
in
mov
fdivr
filds
xchg
cld
fucompp
sti
idiv
loopne
test
jecxz
cld
and
out
decl
cli
iret
jmp
cmp
neg
fcmovb
loopne
fcmovnbe
test
hlt
call
jmp
mov
shll
rcr
iret
loopne
fdiv
rolb
xchg
out
dec
stc
mov
iret
out
out
int
cmp
std
out
rcl
aam
fdivr
div
sti
loope
clc
mov
mov
out
xchg
aam
loop
xor
in
ss
ss
cmc
fsubr
jmp
fcmovbe
aam
stc
ffreep
orl
out
icebp
in
hlt
in
jmp
cmp
std
out
in
fcomi
int3
aad
shl
sub
ljmp
in
out
hlt
int3
int3
iret
sarb
out
lock
les
aad
ljmp
orb
repz
jmp
shr
adc
rol
icebp
in
faddp
stc
loopne
repnz
enter
out
int
icebp
shr
fcmovnbe
ret
loop
cmp
and
ret
loopne
cmp
out
aad
fcmove
leave
xlat
aad
lock
out
cli
test
mul
and
in
ljmp
out
int
repnz
xor
repz
rol
repz
sti
xlat
into
int3
addl
stc
icebp
in
aam
fiaddl
cli
call
lds
shl
mov
cmp
fcmovb
cmp
rol
repz
aam
cmc
xlat
out
mov
xchg
fldl
test
xlat
aaa
test
loope
loop
jecxz
in
ret
fcoml
jmp
fucomi
xor
loop
iret
loope
xchg
fcmovu
in
mov
xchg
fsubp
ror
fprem
aam
int3
cmp
imul
sbb
aam
cmp
mov
adcb
ss
cld
aad
ljmp
cli
mov
ljmp
out
nop
xchg
loopne
in
aaa
in
clc
aam
aad
xor
shl
ds
shl
lret
jmp
loopne
in
std
into
jmp
lret
int
cmp
ds
fdivrp
test
ret
in
jmp
loope
out
xchg
nop
mov
xchg
xor
ss
repnz
cli
aad
xlat
shr
in
test
ljmp
lret
cs
div
out
cmc
aam
fmul
test
jecxz
cld
repnz
loop
fisttpll
loop
fcom
stc
cmp
clc
fcos
testb
sti
in
jmp
repnz
xchg
aad
hlt
xor
call
loope
int3
cmc
cmc
rcr
fcmovb
roll
loopne
mov
jmp
ret
out
fcmovu
in
iret
cmp
out
loopne
rcl
ret
cld
out
mov
sub
lds
lock
cmp
repz
cmp
sbb
sti
orl
incb
lret
fdiv
jmp
loop
ret
fdivr
frndint
mov
jmp
repnz
sbb
call
fprem
aaa
sar
jmp
sti
sbb
les
icebp
out
in
xchg
lock
shl
aam
aam
lret
repnz
repnz
repz
inc
or
or
mov
ror
aad
fldt
sbb
je
jle
movsl
add
testl
xor
xlat
lock
cmp
test
fdivrs
rolb
orl
call
int3
jmp
leave
loop
sti
sar
test
cli
std
jmp
lret
filds
das
xor
enter
cmc
out
cmp
cmc
lds
xchg
fcomi
ljmp
out
out
cmp
aam
shr
shr
xlat
fcmovnu
loope
aam
fiadds
fsubrp
jmp
xlat
lock
sti
cmp
cmp
fmul
cmc
out
in
fsubp
cmp
in
rcl
sub
repnz
fnstcw
int
in
out
test
in
ljmp
out
in
icebp
out
clc
fsubr
lret
in
into
out
aam
aas
int
out
test
out
or
cmp
aad
not
cmp
fnstsw
in
stc
shl
test
mov
xchg
fldl
not
xor
cmp
ror
shl
fcmovu
sbb
orl
test
fneni(8087
shl
addl
leave
fdivr
fucomp
sti
xchg
orl
call
in
rol
lock
mov
leave
cld
nop
test
repz
hlt
jecxz
lret
xor
rcr
test
cli
jecxz
leave
jecxz
xchg
mov
loop
adcl
iret
sti
xor
icebp
neg
fcomip
clc
aam
cmp
adc
in
repz
xor
cmp
std
out
icebp
clc
ss
hlt
std
fcomip
xlat
sti
rcr
sbb
out
ret
out
out
in
xor
std
cli
cmp
cmp
cli
fsubp
fcmovnu
call
fdivr
clc
sub
orb
icebp
ss
xor
in
shl
out
ffreep
hlt
out
mov
lock
mov
sar
shl
repz
cmp
out
ret
shl
mov
out
jmp
out
fptan
fcmove
cli
repnz
sar
cli
aas
shl
std
iret
mov
test
rolb
in
cli
fdivrl
hlt
cli
dec
loope
repnz
loopne
cld
fxch
out
clc
test
loopne
hlt
jecxz
out
loope
xor
aad
ds
in
ds
fsubp
ret
mov
fxch
out
jmp
ror
rol
loope
ret
shr
lret
leave
into
repnz
repnz
jmp
aas
enter
fmull
aad
fcmove
jmp
ds
out
orb
cli
out
sti
iret
shr
aam
int3
sar
cld
int
dec
test
lds
leave
mov
out
lret
loopne
test
frndint
jmp
jmp
fmulp
sarb
lds
ret
loope
aam
loopne
test
xchg
out
sbb
stc
out
cmp
int3
stc
ror
xor
clc
int3
loop
stc
sti
fxam
int3
fdivr
clc
into
repz
rorb
cld
enter
sti
aaa
sti
std
flds
loop
loopne
cli
cld
rcr
enter
in
xor
out
icebp
shr
sarl
sarb
out
int
xchg
in
xlat
leave
out
in
fists
out
in
ror
cmc
stc
in
into
in
stc
ret
xlat
loope
clc
enter
ljmp
hlt
lret
ljmp
xlat
out
loope
loop
or
in
xchg
cld
in
lock
cmc
cmp
ss
cmp
in
rcr
aam
hlt
sar
out
xchg
testl
stc
lret
fsubr
ljmp
shl
rcr
mov
mov
std
in
rcr
shr
les
in
rcl
fcmovne
ret
mul
in
std
dec
lret
loop
out
out
rcll
in
in
fdivs
rcr
fcmove
cli
xlat
aas
aas
fsubp
std
call
mov
into
xchg
out
hlt
sub
xlat
cmc
cmp
lock
out
lret
fadd
into
cmp
addl
lret
int3
mov
ljmp
cmp
out
cld
ds
out
cmc
stc
jecxz
loope
ljmp
jecxz
iret
sti
hlt
repz
fsubr
sti
fsubr
idiv
out
repnz
in
in
and
mov
xor
jmp
aaa
stc
int
out
shl
or
fsubrp
call
mov
add
jmp
aam
iret
int3
fst
outsl
fmull
ljmp
movsl
add
aam
mov
int
lret
out
ss
out
cmp
cmp
ret
jecxz
cli
xlat
out
std
in
shl
sub
in
test
out
cmp
iret
ret
sarb
fnstcw
and
rcr
cmc
out
stc
fptan
xor
aad
int3
fnstsw
xlat
addl
stc
in
dec
and
hlt
repz
out
sti
icebp
lock
aad
dec
xlat
shr
fadd
test
mov
fsub
in
and
nop
mov
leave
in
neg
ljmp
xor
cmp
add
mov
in
xchg
out
idiv
idivl
repnz
aas
cli
in
aad
in
lret
jmp
sbb
addl
int
jmp
idivb
ds
loop
cmp
test
addb
test
int3
test
iret
rcl
stc
xor
cmp
rcr
cmp
xlat
shl
int3
mov
mov
fstpt
aaa
fcom
in
fdiv
fcomip
fstp
out
decb
fmuls
rorl
xor
in
jmp
cmc
aam
cmp
cli
mov
vpavgb
jmp
repz
nop
icebp
cs
imul
out
sar
hlt
jmp
loope
cmp
loope
jmp
mov
xchg
in
ret
jmp
ljmp
std
cmc
xlat
orb
test
loope
shl
xor
cmc
div
int3
xor
roll
leave
cld
std
loope
iret
fisttpll
out
jecxz
xor
ds
aam
sti
ret
loopne
cmc
leave
fcmovnb
fdivrp
xchg
xchg
ror
loope
fcmove
fsubr
cmc
aam
shl
flds
stc
stc
int3
stc
or
mov
in
in
shr
enter
fmul
cmp
cli
int
aad
cmp
hlt
std
fnclex
stc
nop
loope
xchg
sub
jecxz
xor
aam
in
out
iret
cmp
aam
repnz
xlat
div
mov
loop
out
test
call
loopne
xor
call
aas
loope
test
test
hlt
jecxz
test
dec
iret
mov
lret
leave
aad
fidivrs
cmp
cmp
iret
test
loope
sar
call
mov
xchg
icebp
loop
out
std
shlb
fcmovnu
pushl
xchg
lret
addl
xor
icebp
xor
sti
aam
aas
xlat
shl
cmp
test
mov
loope
jmp
aad
aam
repz
cmp
aas
fdivr
fcmovnbe
fcmovnb
xchg
jmp
cli
mov
int3
xchg
out
ror
xchg
into
imulb
fdiv
enter
cld
cli
into
fadd
faddp
sti
enter
in
leave
loopne
ljmp
fcmovb
imul
xlat
repz
cli
out
ret
loopne
test
in
mov
fcmove
ljmp
ret
xor
and
aam
hlt
aam
ds
sti
lock
in
mov
lret
rcl
aaa
stc
stc
aad
sti
aad
addl
mov
xchg
in
mov
sub
imul
in
aad
cmp
sti
adc
loopne
mov
loop
loope
adcl
enter
rcl
call
into
aam
fcmovbe
rcr
test
faddl
aad
out
lret
fdiv
cmp
in
fadds
out
add
out
fxch
call
xor
shlb
aam
sar
stc
shl
out
jmp
in
lds
in
xor
int3
in
sar
lock
sbb
cmp
sti
sar
leave
stc
out
lret
movb
ror
repnz
in
out
cmp
into
out
test
cmp
in
mov
les
sub
jmp
test
fsubr
iret
stc
stc
cli
jecxz
fildl
sti
jecxz
loop
subl
int
ss
xor
hlt
loopne
out
clc
mov
ljmp
mov
leave
out
iret
in
ss
cld
lret
aad
aas
test
iret
std
repnz
out
int
lret
in
out
out
in
cmp
leave
test
cli
fsub
cmp
or
incb
add
int3
out
fnsave
int
fstpt
sbb
hlt
test
and
mov
lret
xchg
test
xor
cmp
jmp
ret
xlat
int
fstp
cltd
sbb
or
movsl
add
clc
iret
fdivr
icebp
mul
shl
fcom
stc
enter
nop
lret
mov
iret
fildll
shr
sti
repnz
rcr
clc
into
vpminub
mov
jmp
out
mov
std
shl
vpaddsw
in
lret
fnsave
jecxz
fsub
clc
repz
jmp
cmc
mov
lret
test
aam
cmp
call
iret
iret
repz
std
xchg
leave
faddl
loope
into
in
ljmp
cmp
cmc
out
into
cmp
rcr
ret
fcmovnbe
out
xchg
call
call
ret
int3
aam
icebp
cmc
neg
addb
call
xchg
out
repz
enter
in
cmp
in
ret
leave
ret
orb
ror
shlb
in
shl
aaa
cmp
idivb
hlt
aas
loopne
cmpl
ljmp
mov
adcb
cmp
aam
sbb
xchg
ret
repz
out
jecxz
cmp
iret
test
xor
int
in
cmp
cmc
sar
in
fiaddl
adc
int
out
stc
int
xor
aam
loope
lock
jmp
testl
mov
std
mov
in
int3
stc
int
sar
cli
xor
loop
filds
lea
cmp
lret
cmp
cmp
testl
mov
int3
jmp
repnz
cli
cmp
cmp
std
adc
fcmovne
fsts
xchg
iret
jecxz
ss
lds
xor
xlat
fdecstp
stc
ret
lds
in
jmp
mov
lret
sar
ror
loopne
shl
frndint
cmp
loopne
out
loopne
repnz
sar
enter
lret
in
fmul
jmp
out
clc
cmc
stc
xchg
xchg
xor
xor
out
das
xor
iret
stc
loopne
in
aam
test
loope
lret
ljmp
out
out
xchg
xor
sub
leave
out
out
cmp
icebp
loopne
repnz
call
loope
loope
fucomp
int3
xchg
fidivs
fincstp
lock
int
jmp
fistpll
aam
fdiv
cli
aad
stc
mov
cld
jmp
loop
test
in
cmc
fmulp
int3
sar
out
xchg
in
fsubr
addl
int3
xor
jmp
aad
rorb
sub
xchg
loop
test
mov
clc
fcomp
cmp
cmp
iret
xor
icebp
aad
call
out
loop
shr
into
xchg
fsubr
enter
aad
repnz
fnstcw
cmp
loopne
in
enter
xchg
or
into
leave
lret
cli
aam
repz
fistpll
sarl
sbb
loop
enter
xchg
adcb
enter
cmp
loopne
out
std
in
xchg
fildl
std
ljmp
hlt
in
ljmp
xchg
std
xchg
mov
lock
idiv
fcmove
iret
cmp
aas
cmc
hlt
ret
test
cld
in
jecxz
xlat
xlat
fld
in
enter
cmp
loopne
rol
repnz
cli
call
loop
xorb
ret
out
cli
repz
lret
and
ds
out
in
jmp
jmp
out
jmp
lock
xlat
xlat
call
sti
aam
rol
cli
ds
rcr
addb
shl
loopne
lock
call
cmc
cmp
hlt
out
sti
loopne
in
in
mul
xchg
mov
call
test
iret
icebp
jmp
cmp
in
cmp
sub
rcr
in
jecxz
xchg
mov
out
into
int
fidivs
int3
loop
in
ror
enter
cmpl
xlat
jmp
test
int
xchg
xchg
out
call
call
xor
idiv
aad
cmp
cmp
in
std
sar
in
idiv
fcomi
aam
aam
rol
out
fldln2
int3
rcr
iret
jecxz
roll
mov
enter
lret
test
cld
out
rcr
fcmovu
out
lret
cmp
out
cmc
fstp
xchg
fldl2t
aam
in
clc
out
sub
xchg
in
ljmp
mov
mov
xor
add
jmp
rol
xlat
int
arpl
mov
stos
movsb
mov
movsl
add
sarb
mov
out
cld
xchg
call
cmp
aad
cli
cmp
cmp
xor
aas
cmp
addb
ljmp
cld
loope
aas
lock
std
dec
in
jmp
fcmovbe
fucomip
xchg
cs
icebp
ret
lock
enter
in
aam
cld
fimuls
loop
adc
in
fucomi
rcr
aam
fdivrs
loopne
jmp
in
fsubr
xor
repz
xor
in
aad
fdivrp
cmp
stc
fdivr
rol
std
clc
hlt
lret
xlat
or
in
fucomp
filds
lock
fdivr
fnop
call
rol
neg
cmp
loop
stc
xchg
ljmp
in
in
ret
cli
sti
loope
cmp
clc
xlat
sarb
fadds
and
loopne
sti
cmp
xor
lret
ds
div
fdivr
rcl
orl
loopne
shr
sub
cmp
out
divb
fucom
in
cli
aaa
out
decb
mov
lret
in
leave
iret
loop
loop
out
ss
xor
ljmp
fcmovnbe
aam
not
fiaddl
int3
lret
into
xor
cmp
int3
sar
lock
xlat
jecxz
jmp
aam
out
rorl
loop
out
lock
hlt
int3
clc
clc
into
out
repz
fdivr
xlat
addb
out
hlt
aam
int3
loope
shll
jecxz
cmp
shl
rolb
mov
aad
mov
out
mov
jmp
xlat
int3
out
stc
rcl
and
roll
cmp
call
aad
xor
ljmp
icebp
addl
fsub
cli
jmp
call
test
out
shl
aaa
cmp
jmp
cmp
jmp
sbb
faddl
loope
lock
aad
xor
jmp
idiv
mov
fucom
fldl2e
loope
mov
nop
repz
in
out
enter
in
clc
leave
ror
xlat
repnz
dec
cld
fldl
repnz
xchg
xchg
xlat
repz
cs
shll
out
sbb
loop
ror
clc
decb
xchg
out
in
ss
clc
enter
jmp
fsub
rcr
sub
jmp
ret
clc
mov
cli
stc
enter
aad
shr
idivl
cli
cmp
stc
mul
cmp
rol
in
out
jmp
int3
lret
int3
mov
in
repnz
jmp
xor
out
icebp
aam
int3
icebp
add
aaa
flds
aad
in
sbb
lret
leave
loopne
cmp
icebp
lock
loope
std
enter
out
clc
mov
call
shlb
cmc
xor
icebp
xor
fstp
add
fadd
imul
fmulp
lock
into
shl
cmp
jmp
fmul
lock
ret
ret
enter
fnsetpm(287
std
lret
out
not
int3
enter
xor
cmpl
ds
aam
enter
rorl
mov
lret
das
xor
mov
lret
lock
fcmovbe
rolb
icebp
enter
repnz
aad
fmul
lock
aaa
cmp
xor
test
jecxz
loope
aad
call
out
in
nop
mov
iret
fdivs
rcr
out
jmp
cld
jmp
out
jmp
fisttps
out
clc
rcl
into
lret
cmp
not
test
repnz
fcmovnu
out
out
nop
lock
les
cmp
shl
idiv
cmp
rcl
iret
cmp
test
xchg
cli
lret
call
out
ret
fnstcw
jmp
fmull
xchg
mov
test
ret
leave
out
aaa
repz
sarb
loope
fadds
mov
in
jmp
enter
loope
ss
fsub
clc
into
xor
idivb
aad
hlt
cmp
call
in
std
mov
xchg
out
iret
icebp
out
cli
rcr
test
vpsubsw
fcomp
call
out
in
jmp
cmc
ret
stc
xor
int
lret
repnz
aam
ret
ljmp
hlt
sub
aas
out
jmp
in
cmp
xor
fistpll
out
fstp
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
jmp
lret
ffree
fcmovu
sbb
jb
fidivs
adc
add
hlt
aam
lret
xchg
xchg
fsubr
call
xor
out
out
test
ljmp
lret
xchg
loop
lret
xor
in
ds
aad
in
loop
out
ret
ret
ffree
out
int3
mov
int3
not
int
cmc
aad
cmp
cmp
out
shl
ljmp
mov
jmp
lea
cmc
les
icebp
fnstcw
jecxz
movb
sti
cli
mov
jmp
mov
into
cmc
cli
in
sti
cmp
cmp
rcr
shl
ret
repz
cmc
in
std
in
call
loope
out
icebp
ret
sti
hlt
loope
cmp
repnz
lds
leave
int3
mov
mov
int3
ret
leave
out
hlt
ljmp
out
test
int3
out
nop
mov
sub
sar
ljmp
int
std
and
ljmp
sbb
mov
rcl
lret
in
test
shl
and
aad
out
sti
xchg
xchg
into
out
loope
jmp
clc
into
cmp
fcomip
not
cld
hlt
out
xchg
jmp
in
in
xor
aad
leave
in
fucomi
ret
cmp
ds
ret
call
xchg
out
xchg
jecxz
ljmp
ljmp
cli
repz
mov
ret
in
xchg
jmp
in
mov
xor
cld
aad
out
cmp
cmp
test
cld
lret
out
les
std
std
out
xor
cmp
fmul
ljmp
test
mov
mov
call
xabort
jmp
cmp
fistpll
ret
xlat
loope
jecxz
cld
call
jecxz
imulb
leave
call
cmp
cmp
ljmp
iret
enter
xor
ss
cld
out
stc
cmp
jecxz
repnz
jecxz
cld
aam
mov
iret
icebp
jmp
xchg
sub
ljmp
int
into
fdivrs
repz
stc
xchg
fucomip
out
call
lock
iret
cmp
jmp
out
iret
xlat
test
out
cli
mov
test
orl
ljmp
fnstcw
repz
repz
in
adc
add
cld
sub
mov
stc
in
in
xor
rol
cmp
cli
in
test
test
cmc
mov
sti
xor
cmc
fdivr
fcmovnb
aam
mul
in
fadd
stc
loopne
mov
decl
loop
lock
cli
repnz
repnz
clc
in
loopne
xchg
call
not
call
fst
cmp
fldl
fsincos
leave
out
out
xchg
ror
cli
jmp
fsubr
iret
repz
sti
iret
in
test
call
loope
mov
in
repz
sarl
aaa
fcmovnu
loop
cmc
repnz
fdivrp
fmuls
adc
cmc
shr
rcl
cmp
cmp
into
out
aad
icebp
incb
ret
mov
loop
mov
out
div
int
leave
ljmp
loope
out
out
out
xlat
sti
loop
mov
test
jmp
xchg
mov
jmp
idiv
iret
ss
call
fucom
fistpll
fdivr
or
icebp
jecxz
lret
in
jmp
rcr
jmp
call
adc
fld
cmp
cld
out
stc
fiaddl
shr
int
jmp
cmp
xlat
fcomip
cmpb
cld
out
cld
fists
jmp
jmp
repnz
iret
iret
fsubr
cmp
rcl
ret
sti
in
ret
jmp
jmp
in
test
lock
fadd
cmp
aad
jmp
test
fcomi
hlt
neg
testl
fdiv
test
xlat
in
out
fiadds
sarb
enter
int3
sub
loopne
cmc
xlat
cmp
ss
in
in
imul
rcr
hlt
loop
shl
fmul
int
fcmovbe
xchg
fdiv
aam
shlb
cmp
leave
ror
cli
inc
ret
xchg
ret
loopne
mov
iret
repnz
shl
jecxz
out
cmp
stc
out
repnz
fnclex
ret
hlt
std
or
stc
xlat
cmp
clc
jmp
int
into
fst
das
inc
aam
pop
aad
xor
movsl
add
mov
repz
repz
in
lret
xor
ljmp
test
out
out
cli
call
sub
into
aad
iret
ds
cmc
loopne
jecxz
sti
add
jecxz
cmc
xlat
stc
int
cld
repz
rol
ret
in
lock
ljmp
rolb
fsub
fldpi
sub
rolb
fdiv
aam
xabort
ljmp
loope
cmc
hlt
xchg
stc
in
fiaddl
cmc
call
ret
cmp
xor
hlt
fsqrt
sub
into
cmp
in
sti
enter
sbb
mov
das
rol
aam
fmul
fneni(8087
lock
clc
out
mov
xchg
in
repnz
xchg
xchg
loope
ljmp
in
or
flds
mov
ljmp
test
imul
hlt
fldcw
rcr
stc
rcr
cmp
repnz
fucomp
and
jmp
sar
xor
jecxz
int
cmp
fadd
fucomi
rcr
test
test
clc
loope
cld
nop
loopne
repnz
call
test
ret
cli
test
std
jmp
mov
fcmove
std
mov
lret
cmc
int3
cmp
sti
sar
jmp
shl
ret
les
lret
xchg
in
icebp
cli
in
fcmovnbe
enter
shr
cmc
cmc
sar
and
into
stc
mov
loope
int
ss
out
lock
lret
loope
fldz
jecxz
fdivr
enter
fchs
nop
mov
mov
call
out
icebp
cmp
loope
jecxz
loopne
jecxz
sti
mov
xchg
jecxz
rcr
out
cmp
cmp
icebp
int
cmp
aam
test
mov
popl
aam
in
fdiv
bnd
loop
rcl
loop
in
mov
out
lock
in
loope
ret
ret
repnz
clc
aam
jecxz
fadd
cld
test
sar
lret
mul
clc
lret
call
adc
cmp
aaa
clc
shr
fcmovbe
aad
fadd
jecxz
test
dec
or
mov
cmp
call
aas
loope
jmp
sti
out
enter
fsubr
out
jecxz
repz
rcl
call
not
int
cmp
into
out
fldl
jmp
cld
loop
test
in
cmc
cmp
lret
fnstsw
ljmp
aam
clc
loopne
out
fmul
xchg
rcl
cmp
fcmovnu
fidivs
fnop
ljmp
inc
fdivr
loopne
iret
jecxz
repnz
test
xor
into
iret
xlat
int
cmp
stc
ror
stc
rcl
aas
shl
loopne
cli
decl
into
int
aaa
loop
lret
fcmovu
fcomip
shl
sti
ret
shl
faddp
aam
fildl
filds
cs
cli
in
repnz
call
ror
lret
out
not
fsub
sbb
cmp
mov
lock
out
into
cld
rcr
loopne
cli
hlt
in
idiv
fcom
fcmovnb
in
cmp
out
clc
xor
stc
cld
cmp
out
cmpb
idiv
rcl
rorb
jmp
fisttpl
test
xor
stc
in
out
aad
fnstsw
cld
sti
int3
fdivp
xlat
flds
out
mov
xor
lret
in
out
out
lock
rcl
icebp
sub
sti
fisttpll
in
rorl
int3
into
cmp
aas
neg
hlt
int
sar
rcr
cmc
fsub
in
leave
and
out
shl
jmp
ret
in
jmp
sti
int3
jecxz
ret
fsubp
call
loope
lret
fcmovne
into
xorl
enter
fdivs
sarl
in
xlat
orb
cld
xchg
leave
xor
ss
out
fucomip
shl
cmp
ret
rcl
in
cli
repnz
mov
test
cld
cli
fstpt
in
sbb
repz
jecxz
mov
xchg
xor
shrb
icebp
cli
cmp
int
fidivl
sub
adc
cld
shl
and
out
orb
cs
les
stc
fdivp
cmp
sbb
faddl
sbb
test
mov
ljmp
enter
fiadds
in
jmp
inc
out
into
in
jmp
data16
add
je
mov
mov
pop
jmp
into
lret
fcmovne
into
fistpl
adcl
pop
xchg
jle
movsl
add
enter
jmp
shr
fcom
lds
cld
cli
out
fcmovne
out
or
out
xchg
xchg
into
int
int3
xor
std
shl
jecxz
ffree
jmp
test
stc
lret
in
out
test
dec
xchg
sar
enter
fidivs
fdivrs
fcmovnbe
not
ret
call
fabs
in
xchg
ss
hlt
frndint
clc
in
iret
sar
ds
fdiv
ret
lret
test
mov
enter
fists
leave
cmp
fcmovnbe
hlt
cld
iret
fsub
ffree
enter
out
leave
fists
enter
push
adc
adc
sar
loop
mov
clc
out
loopne
sbb
repnz
out
shlb
das
into
int3
jmp
in
stc
stc
cmp
fcmovne
ljmp
repz
in
cmp
sarb
in
out
in
iret
rcr
fnstcw
jmp
enter
out
loope
aad
int
fucom
cmc
lret
icebp
into
stc
ret
flds
std
fcmove
out
rclb
fcom
fdiv
cmc
cmp
in
fst
test
fmuls
out
loop
in
in
out
sub
icebp
cmc
jmp
out
lock
hlt
fsub
aad
rol
test
sar
enter
into
int3
icebp
in
xor
in
fdivr
int
ds
fnstsw
sar
fdivr
in
out
test
ror
loop
cmc
out
out
lret
cmp
cld
stc
cmc
orl
mov
jmp
ret
ljmp
div
std
rolb
mov
ljmp
rcl
mov
enter
fyl2x
iret
loope
cmp
std
mov
rclb
int3
icebp
icebp
lock
icebp
cmp
xlat
faddl
aad
cli
leave
fists
xchg
hlt
jmp
imul
icebp
in
iret
dec
fucomp
jmp
aas
sti
fdivrp
jecxz
xchg
xchg
xchg
aad
xor
fnstenv
xor
clc
loopne
cli
icebp
in
shl
repz
mov
fucomip
xchg
xor
aad
clc
fdivl
fsubp
cmp
xlat
aas
neg
in
ljmp
sbb
ror
adcl
div
fdiv
cmc
ljmp
in
repnz
call
mov
sub
loop
ljmp
int3
cmc
xor
clc
std
test
mov
test
call
out
aaa
enter
cmpb
cmp
lock
test
cld
loopne
shlb
xor
in
xor
xlat
loope
test
repz
ret
lret
in
in
fcomp
divl
stc
leave
into
in
xchg
xor
cmc
cmp
aaa
lret
fmul
icebp
repnz
repnz
sub
xlat
std
loop
std
jmp
xor
cmp
cmp
clc
test
mov
ret
lret
lret
xchg
leave
loopne
cmc
in
lret
std
cmp
iret
sti
cmp
in
lret
lret
leave
mov
rcl
ljmp
jmp
fdivr
in
testl
ljmp
stc
into
xor
jmp
cmc
cmp
out
test
ret
sbb
mov
out
jecxz
jmp
orb
enter
ljmp
addb
sti
jmp
xchg
rcll
sti
stc
hlt
xor
aas
shl
or
sar
and
ljmp
adcb
int3
leave
hlt
in
cmpl
fprem1
test
lret
out
rol
cli
icebp
neg
clc
fdivrl
cmp
loope
adc
fcomip
mov
test
in
cmc
mul
lock
repnz
in
aas
iret
in
cmp
xlat
int
xchg
jecxz
xchg
aad
call
out
fsubr
std
aaa
loop
ss
out
aam
ret
xchg
int
cld
adcl
into
repnz
fcmovne
cmpl
cmp
fcos
out
testl
fcomp
out
xor
repnz
stc
sti
in
loopne
jecxz
aad
mov
stc
imul
test
hlt
in
bnd
ror
out
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
jmp
aad
into
aad
fst
int
loopne
lret
lahf
dec
sbb
add
enter
loopne
and
ffree
fimuls
jmp
fmull
in
cmp
idiv
out
ret
repz
orb
les
jecxz
div
cmp
sarl
ss
ret
roll
enter
mov
std
out
xchg
xlat
icebp
stc
xor
leave
cmp
std
in
cli
ljmp
stc
lret
fimuls
ljmp
lret
int
aam
test
sar
ret
out
std
adcl
clc
in
shll
inc
ss
icebp
fiaddl
les
rclb
ljmp
in
ret
sti
loope
clc
jmp
mov
std
xchg
clc
repz
fdiv
repnz
std
lret
flds
loopne
lret
sti
out
out
int3
out
iret
in
xabort
cmp
aam
rcl
repz
in
sbb
aad
hlt
faddp
fsub
lret
lret
shl
mov
xor
cmc
fdiv
repnz
test
cld
hlt
cmc
in
call
mov
into
xchg
int3
cs
xor
imul
cmp
jmp
lock
xchg
leave
loop
leave
orl
fucomp
idivb
cmp
hlt
ds
loope
loopne
out
fdivp
test
jmp
or
xor
aad
in
or
aam
aad
cli
ljmp
xchg
iret
rolb
call
idivl
test
cmc
clc
fcmove
leave
ffree
jecxz
test
iret
lock
div
int
repnz
lock
in
xor
cmp
not
ret
movb
push
mov
aaa
idivb
aad
sti
cmp
ret
lret
out
fucomip
std
int
mov
jecxz
jecxz
repnz
xor
cli
cmc
fcmovu
icebp
cmp
rcl
fxch
lret
enter
sub
leave
lret
stc
into
cmc
cmp
out
fcom
in
ds
xlat
out
loopne
fsub
cld
fucomp
roll
sti
out
fsubr
ss
into
out
stc
aad
loop
xchg
fcomi
and
ljmp
iret
leave
xor
xor
dec
xor
jecxz
fisttpll
test
rol
sarl
fcmovu
iret
out
fmulp
sarl
rorb
fdivr
icebp
fsubr
xchg
in
out
xlat
cmp
out
aam
fcmovnbe
shl
jecxz
aad
aas
repz
movl
out
shrb
fsubr
out
jmp
jecxz
les
mov
fsubrp
xchg
out
loopne
fmul
cli
loop
ss
call
cmc
loopne
xchg
add
test
mov
nop
in
aad
das
out
enter
xor
fpatan
jecxz
repz
test
ret
mov
xchg
icebp
out
aam
hlt
cs
shr
sti
xlat
aas
and
sbb
fucom
cld
mov
lds
out
enter
lock
cmp
clc
aad
ds
mov
fisttps
aam
call
fxch
leave
fsubr
xor
repz
cmc
jmp
mov
lock
loop
mov
aad
cmp
shll
cmpb
mov
ror
xlat
mov
std
out
call
xor
std
jmp
cmp
loopne
ret
fdivr
aad
std
int3
cld
cld
loop
nop
aam
adc
xlat
in
iret
in
ror
cld
int3
loope
aad
into
icebp
cmp
roll
mov
in
jmp
lret
jmp
idiv
rcr
vpsadbw
test
fmuls
int
in
mov
cmp
cmc
repnz
lret
int3
rcr
stc
cmp
or
cld
inc
in
lds
xor
out
fucomp
int
shl
fcmovb
xor
fcos
in
call
test
in
cmp
out
in
fcmovnbe
call
sbb
in
repz
fdivrp
cmc
in
or
popl
cmc
in
int
hlt
rcr
int
shr
loope
in
leave
stc
orb
mov
in
ss
int
ret
clc
stc
not
addl
nop
test
mov
adc
and
mov
mov
sub
xorl
mov
sbbl
push
mov
xor
movl
cmp
movl
je
sbb
jmp
rcl
rcl
rcl
aad
xchg
stos
gs
mov
jle
add
xchg
sub
leave
call
in
cmp
loope
out
test
stc
stc
xchg
in
fsubp
mov
xor
in
cmp
stc
cmp
ds
shl
and
shr
fsubp
fcmovne
adc
lret
in
icebp
fcmovnbe
int
hlt
in
out
aad
test
nop
clc
out
jmp
stc
loop
in
imul
lret
aas
sbb
in
aam
in
std
in
fcmove
lret
out
nop
shl
loop
cmp
fdivrl
lret
shll
aad
jmp
mov
call
xchg
ror
jecxz
div
ss
aam
cmp
loope
shl
xlat
lret
call
fdivp
test
loop
rcl
cmp
idivb
std
aad
cmc
int
movb
lret
sti
call
test
cmc
sar
out
icebp
lret
call
hlt
cmc
aam
roll
mov
adcb
stc
icebp
cmp
aam
xor
jmp
clc
fucom
ror
loope
xchg
out
shl
xor
icebp
std
cmp
rcr
test
test
call
xchg
or
xchg
test
lock
out
cmp
xor
sti
sti
rcr
fmull
vpaddd
iret
xchg
imul
in
stc
fsubr
xlat
aad
jmp
xchg
jmp
aad
in
icebp
mov
xlat
cmp
rcl
cmp
cmpb
clc
xchg
sti
not
cmc
fstpt
mov
fcmovnb
cli
in
mov
enter
aam
loope
test
aad
sti
rolb
lds
mov
into
shl
out
std
bnd
int
in
cmc
fadd
ffreep
fldl
lret
out
repnz
call
cmp
add
ret
enter
shl
mov
ljmp
sub
push
push
test
sarb
out
in
cld
lea
loopne
xchg
fld
out
sarb
aad
clc
cmp
ljmp
and
jecxz
enter
fidivrl
cmp
idivb
fimull
mov
xchg
lret
test
into
int
cld
aad
ror
leave
icebp
aas
loopne
addl
addl
xor
aaa
cmp
hlt
cli
out
out
test
ds
add
xlat
fildl
int3
lock
xchg
iret
sub
aaa
out
ffree
aad
shl
cmp
iret
loopne
fsubrp
xchg
loop
ljmp
into
cmp
in
jecxz
repz
ds
test
shl
loopne
cmp
fsqrt
int
les
fdiv
filds
leave
rorl
out
fsub
hlt
shr
xlat
out
aam
xor
in
xchg
jecxz
in
incl
xchg
movb
aaa
in
repnz
out
shl
cli
fimull
fdivrp
ljmp
shrl
xor
hlt
lock
int
in
rcl
cli
out
loop
in
test
vpor
icebp
out
loope
cmp
in
std
mul
std
fiaddl
mov
std
iret
icebp
xchg
adc
into
loop
cmp
out
rol
cmp
repz
icebp
xchg
jmp
enter
mov
ret
aaa
in
shr
clc
cmp
cmp
int
loop
in
incb
in
fcoml
jecxz
fcom
cmc
cmp
out
int3
loopne
xor
jecxz
or
mov
xchg
clc
icebp
fnstenv
icebp
loopne
in
cmp
out
mov
out
mov
iret
imull
ret
cmp
sti
cmp
shl
adc
call
iret
nop
iret
mov
sub
aaa
repnz
clc
int
lret
repz
test
fdiv
repz
fcmovnb
jecxz
into
jmp
shr
lret
cmp
loop
loope
in
fucom
stc
ljmp
in
hlt
in
test
sub
out
hlt
cmp
xorl
rcl
sti
int3
call
in
in
nop
mov
repnz
sti
ds
xor
xor
fnstsw
test
sbbl
mov
andl
sub
addl
xor
movl
cmp
jne
adc
mov
sbbl
jmp
enter
int
int
repz
mov
jle
xchg
add
mov
leave
fisttps
in
icebp
cmp
cld
aam
aam
loop
fucom
in
clc
ds
test
jecxz
mov
out
sar
out
sarl
fadd
roll
stc
popl
mov
xor
ret
shr
icebp
out
icebp
into
sti
in
cld
cld
iret
neg
neg
mov
repnz
ljmp
cmp
fcmovnbe
fstp
testl
ret
cli
aad
call
mov
shlb
sti
not
cmp
out
repnz
sbb
mov
test
cli
leave
faddp
shl
sti
ljmp
xlat
call
sarl
xor
xlat
hlt
sar
fxch
int
mov
fucomp
out
fcomip
icebp
xlat
sti
ss
stc
xor
std
sti
cld
std
xchg
mov
jmp
faddp
test
out
into
pushl
into
test
mul
cmp
call
out
hlt
xchg
jmp
lret
in
xor
aad
aas
rcr
call
jmp
in
in
xor
xor
aam
das
ss
repnz
roll
lret
int
iret
out
int3
out
aam
bnd
fcmovbe
fcomp
aaa
jmp
sar
out
cld
out
mov
push
xchg
sarb
loop
cmp
cmp
jmp
repnz
ret
icebp
ljmp
iret
nop
into
xchg
fisttpll
fsubr
aaa
icebp
ss
ror
into
xlat
out
rolb
mov
addl
fcomp
fcomp
fsubr
cmp
cmc
cmp
fdivrp
neg
and
loop
cli
test
xchg
loop
xchg
enter
sti
icebp
ljmp
std
loope
ret
loop
clc
jecxz
jmp
nop
ret
hlt
mov
shl
jmp
fdivr
rcl
sar
out
in
rcr
in
enter
mov
dec
repnz
test
mov
loope
ret
sar
ss
in
shl
ljmp
fucomp
in
xchg
xchg
jmp
xchg
into
ljmp
shl
out
repz
ds
fmul
mov
cld
leave
loope
fld
leave
les
enter
in
lret
fucomi
sti
rcr
in
shr
fmull
addb
shl
xor
in
jecxz
mul
ds
loop
cld
test
jecxz
fucomip
sti
hlt
shr
test
cld
cld
repz
jmp
cli
dec
in
std
call
faddp
xchg
cli
xchg
mov
sti
cmp
shl
aam
out
out
in
cmp
cmp
loop
enter
icebp
lock
sbb
iret
xor
xlat
in
into
imul
hlt
fsubr
iret
in
or
xchg
out
cmpl
out
sub
into
aad
fmul
rcr
sar
sbb
clc
fdivp
inc
test
repnz
int
xchg
call
lret
test
icebp
out
jmp
stc
loopne
xchg
repz
aad
fcmove
cmp
into
aam
int
cmpb
add
sub
in
into
loope
xor
rol
lock
cmp
addl
cld
xchg
stc
lret
xchg
xchg
in
ror
ret
sarl
out
inc
not
xor
stc
xlat
cli
xlat
loop
fdivr
fndisi(8087
hlt
lret
call
rcl
xlat
sti
repz
icebp
ret
int
clc
dec
hlt
ljmp
jecxz
xchg
out
int
lock
cmp
cmp
repnz
cld
jmp
mov
call
imul
xor
enter
call
aas
out
test
cld
in
fmulp
nop
ss
into
loop
aad
fdiv
aaa
cmp
shr
shl
jecxz
jmp
stc
int3
into
jmp
fsub
or
aaa
in
into
icebp
or
test
jecxz
cmpl
testb
mov
out
cs
aaa
sti
cmp
stc
leave
aad
cmp
sarb
clc
loope
cmc
jmp
xchg
ret
orl
ss
sti
ret
shl
std
ljmp
lret
addl
int3
fsub
into
xlat
sar
rcl
icebp
cmp
shl
fucomip
xchg
fldln2
ljmp
les
cmp
fdivrs
jmp
out
add
jmp
mov
xorl
xor
add
adcl
mov
sbb
mov
andl
xor
subl
jmp
rol
aad
aad
aad
leave
mov
and
xchg
add
flds
aad
in
stc
out
int3
in
xchg
icebp
enter
hlt
fidivs
aas
stc
sti
cmp
std
clc
leave
lret
cld
leave
cld
mov
lret
int3
loopne
rol
repz
cli
rcl
test
jmp
in
enter
xor
shr
clc
fsincos
lock
lock
cmp
in
fucom
in
test
lret
jmp
lret
in
shr
idivl
in
cmc
hlt
jmp
std
repz
sbb
decl
fmul
jecxz
repnz
lock
call
loopne
flds
fld
cld
loope
in
lock
xchg
test
xor
xor
icebp
cmc
inc
cmp
cmc
std
ret
loop
lock
incl
aad
sti
rcr
repnz
ror
sti
xlat
repnz
leave
fadds
std
filds
iret
ret
call
enter
div
sti
out
test
les
out
lret
aaa
in
aad
aaa
int3
ds
xor
sbb
in
ljmp
iret
xchg
into
out
cmp
cmc
call
loopne,pt
fdivrl
aaa
aad
addb
add
leave
repnz
mov
xor
ret
enter
lret
shl
cmp
loop
ret
addb
out
cmp
rcl
xor
lret
cmc
ds
repnz
in
leave
mov
addb
cld
out
out
aas
xor
jecxz
fistpll
fld
fidivrs
call
ljmp
cs
ror
cli
sarb
ret
mov
fmull
xlat
xor
cmc
xor
in
call
in
int
sub
out
xor
xlat
cmp
cmp
clc
addl
lret
iret
jmp
fiadds
sar
out
cmc
cmp
cmp
mul
loope
enter
int
xchg
jecxz
out
enter
rcl
shll
imul
repz
repnz
out
rorb
repnz
test
mov
rol
enter
out
icebp
iret
rcr
sarb
neg
loopne
mov
in
jecxz
repz
shr
out
xlat
ror
shl
lock
in
shl
loop
mov
cmp
into
enter
mov
int3
stc
stc
cmp
ljmp
rcr
loopne
in
clc
out
in
mov
aam
enter
sti
xor
icebp
cmp
shl
div
sti
loopne
mov
fildl
in
call
jmp
ror
lret
xlat
and
hlt
test
in
in
in
int
shl
rol
in
iret
cmp
fistpll
out
repnz
cmc
rcl
leave
fsubp
roll
jmp
fsubrl
fmul
in
repnz
fcmovb
sti
lock
xor
mov
orb
leave
shr
repnz
lock
in
inc
cmp
std
in
in
in
fstp
rorb
fdivrs
icebp
call
roll
fst
mov
addb
xor
int3
cli
cmp
out
fidivrs
in
repnz
sar
shl
cmp
mov
mov
std
shl
iret
repnz
lds
fcomi
shl
rcr
aas
out
ds
call
loope
mov
jmp
out
lret
xor
ds
aad
fstp
cmp
in
leave
cld
div
cli
mov
in
faddl
aad
xor
or
lret
lret
ss
fdiv
and
fadd
mov
popl
fucomip
xor
call
lock
out
loopne
cmp
testb
fstp
out
nop
jmp
xbegin
iret
jmp
cmp
add
fld1
lret
sti
in
fmuls
xor
sub
fucomp
fmul
in
lret
xor
fdivr
out
fildl
int3
fucomi
xchg
out
jecxz
cmp
aam
hlt
fcmovnu
iret
out
test
out
test
fnsetpm(287
mov
mov
mov
rol
in
neg
sti
stc
cmp
fdiv
cmc
in
in
test
rolb
shl
repnz
mov
jmp
and
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
mov
xor
mov
jmp
into
int
fstp
aam
or
mov
gs
jle
jmp
sti
cld
std
repz
ret
testb
mov
out
out
mov
repnz
cmp
xlat
leave
cmp
int
dec
aam
mul
fdivrp
in
addl
int3
cli
hlt
xor
cmp
cmp
aam
div
test
jecxz
out
in
xlat
sub
fistl
cli
div
rol
leave
dec
cld
imul
cmp
into
fchs
int3
stc
fcmovnu
jmp
filds
int
out
std
fcomi
aad
cmc
rol
out
xlat
call
mov
xchg
inc
loopne
jecxz
jmp
cmp
jmp
shl
out
std
testb
jecxz
out
out
addb
shlb
leave
out
shr
ret
xchg
aam
stc
enter
sti
fists
icebp
cmp
iret
into
fdivl
aas
aad
ret
adc
xchg
idiv
lret
fmul
jmp
clc
xor
enter
repnz
ds
adc
test
in
mov
fimull
leave
clc
aam
out
into
out
aad
loopne
cmp
fcmovu
ljmp
ret
xchg
loop
xchg
das
into
cmp
aaa
in
ljmp
fdivp
xor
xchg
loop
ror
xchg
repz
xlat
shll
cld
stc
cli
lock
enter
stc
adc
out
test
loopne
and
ljmp
out
fnstenv
lret
rcr
cmpl
stc
ret
cld
std
faddl
test
ret
clc
in
sar
call
cmp
std
fcmovne
mov
fadds
in
xchg
jmp
fstp
out
in
in
rcl
ss
xchg
in
sti
sti
and
xchg
xor
jmp
sar
out
out
aaa
aaa
leave
xlat
aas
cmp
testl
icebp
jmp
int
lock
lret
xlat
loop
out
in
lret
cmp
sti
test
fiaddl
incb
fmull
enter
imul
jmp
lock
lock
aad
int3
std
sti
into
fisttps
xor
enter
aas
rcl
not
fiaddl
in
int3
stc
fdivp
iret
call
rcl
fadd
xlat
aad
or
lock
out
std
xlat
out
idiv
aad
enter
loope
lret
out
loopne
ret
in
lock
aad
lret
ror
rolb
stc
addb
xchg
les
enter
das
out
hlt
icebp
cli
ret
aas
iret
roll
fcmovnu
in
xchg
or
out
int3
jecxz
iret
sar
sar
cmp
hlt
std
in
test
fdivrp
jmp
jmp
xchg
mov
ror
out
lock
xor
fdivr
cli
xlat
out
ror
addl
into
fcmove
in
ljmp
call
ret
test
ror
ftst
xlat
out
loope
test
in
jecxz
hlt
xor
clc
sti
sar
loop
mov
cmp
icebp
loopne
roll
out
jecxz
hlt
aaa
cmp
shl
adc
cli
out
sar
ffreep
hlt
icebp
in
xor
call
incb
test
add
mov
xchg
fucomp
loopne
std
out
ret
repnz
int3
clc
cmp
fcmovnbe
in
xlat
in
fdivr
xlat
test
std
repnz
cmp
fcmove
cld
lret
flds
ffree
mov
int
fucomip
call
cmp
xlat
in
cmp
in
or
fcompp
clc
hlt
stc
aas
cli
repz
vpmulhuw
lock
out
jecxz
out
shlb
cmp
cmc
aas
idivb
loop
into
cmp
xchg
fmulp
lock
ret
mul
int3
in
cld
aaa
jmp
cli
iret
sbb
sti
out
hlt
test
out
rcl
rol
shl
enter
incb
cmp
fcmovnb
jmp
in
fsts
mov
ss
test
iret
fdivrl
fcmovu
cld
sar
in
out
sti
test
aad
idiv
iret
or
shr
mov
jmp
fdivrs
cmc
xor
aad
cli
out
repnz
call
sti
lret
xchg
int3
into
ret
loop
lds
into
int
cmp
adc
out
std
jecxz
fadd
out
rolb
mov
and
jmp
leave
rol
ret
int
cwtl
stos
cltd
fs
stos
movsl
loop
scas
jle
xchg
add
shl
ss
cmp
out
shl
ret
adc
aas
aam
leave
lret
sbb
in
fisttpll
cmc
ret
clc
aaa
rcr
ret
add
fincstp
int
xchg
call
in
xor
hlt
sti
shl
roll
loopne
rolb
clc
lret
sti
in
leave
fucom
shr
cli
leave
ds
std
cmp
aam
testb
enter
jmp
call
leave
cld
cmp
ljmp
stc
sbb
in
ljmp
xor
repz
aad
clc
fsub
aad
clc
repz
mov
fdivr
mov
xchg
call
cmp
int
neg
iret
call
lock
aam
std
mov
lret
aam
bnd
lock
int3
in
int3
fidivrs
sti
clc
into
cld
sub
mov
lret
loop
int3
xlat
in
ss
repnz
shll
fst
fst
out
std
sar
mov
test
mov
lock
sub
cmp
int
cmp
sub
xchg
stc
std
rol
neg
out
cld
lock
jecxz
cmp
cmp
rol
add
fcomi
loop
addb
ror
hlt
fdivrp
fld
clc
aam
fcmovnu
out
lock
rorb
mov
idiv
in
enter
fdivrl
stc
iret
loopne
fyl2xp1
ret
xchg
jmp
and
cmc
out
xor
shlb
int3
ds
loope
icebp
in
ret
adc
jmp
lret
call
int3
xchg
jmp
fxch
int3
imul
xor
in
sarl
xchg
neg
sub
out
mov
fucomip
repnz
cmc
enter
fcmove
fld
loop
in
cmpl
ret
iret
out
loop
cld
fstp
out
cli
aaa
rol
fcmovbe
loopne
fcomip
into
ror
fst
movb
xchg
icebp
filds
int
call
repz
lock
icebp
neg
repz
xor
mov
test
sub
ss
cmp
out
into
sbb
in
call
cmc
xchg
fbstp
stc
in
xor
loopne
cmp
incb
aam
fcmovu
clc
loope
test
xor
icebp
stc
in
ss
out
fiadds
aam
fdivr
jmp
out
call
ljmp
leave
ret
aas
loop
fisttpll
sub
loop
aam
ror
fcmovb
in
hlt
cmp
jmp
stc
loopne
rol
out
idiv
loope
stc
mov
mov
lock
aaa
mul
sar
icebp
int
xlat
ss
cmc
add
mul
repz
xchg
fucomip
rcl
icebp
ljmp
in
hlt
repz
aaa
sar
stc
cmc
inc
test
sub
idiv
lret
ljmp
clc
cmp
xor
loope
cmp
ret
fsubp
repnz
fucom
int
in
call
fcmove
iret
in
add
in
or
roll
test
jmp
repnz
lret
repz
cli
in
fidivrl
fptan
mov
rorl
loop
test
in
test
xor
cmp
jmp
fsubr
mov
std
xchg
into
mov
in
loope
cmp
fdiv
fidivs
fcmovnbe
in
icebp
xlat
cmp
in
in
adc
into
testb
lret
roll
mov
sti
xlat
ret
fstl
cli
divb
aam
out
cmc
std
out
cmp
fcmovu
rol
call
leave
mov
loop
cld
jecxz
shlb
fld
iret
jmp
rol
std
fld
movb
mov
ror
fcmovnbe
call
fsubr
sbb
ret
cmp
mov
mov
shr
xor
rcl
aad
lock
aam
out
and
sbb
das
repz
shl
cmp
fdivrp
aam
repnz
stc
out
fsub
clc
cli
loop
fucom
loopne
out
int3
icebp
aaa
aam
ds
out
adc
aam
lock
roll
stos
sbb
pop
ret
push
mov
sub
adc
jmp
rol
lret
iret
fcmovnbe
fcmovb
addr16
decl
jle
aas
add
clc
in
rolb
shr
jmp
loop
cmp
fdecstp
cmp
xchg
mov
xchg
fxch
lock
call
aaa
iret
sarb
in
fdivr
icebp
out
cmp
shr
cli
jecxz
sti
leave
out
decl
out
leave
cmc
cmp
lret
repz
into
xor
rolb
addl
lds
jmp
loopne
rol
call
aaa
fucomip
in
in
clc
aas
repnz
mov
sti
in
mov
icebp
icebp
cmp
leave
xor
in
fcmovb
fndisi(8087
loope
lret
mov
loop
xchg
nop
in
mov
jmp
divl
rcl
ds
sar
shl
fldl
fstl
jmp
ror
in
cs
ds
jmp
icebp
out
xlat
call
jecxz
iret
leave
mov
shll
iret
stc
in
fdivrp
xlat
leave
lret
cmp
ds
fildl
mov
int3
adcl
xlat
cmp
jmp
repz
xlat
xlat
fsubr
mov
jmp
rcl
shl
jecxz
std
lret
cmp
aas
ds
ret
jecxz
lret
ljmp
ljmp
hlt
leave
xor
cmp
frndint
addb
cld
loop
xchg
lea
lret
aam
ss
ljmp
loope
repnz
fdivr
leave
mov
shr
aam
out
fdivrl
lock
ds
ret
loop
ret
sti
cmp
in
int
add
into
mov
in
cmp
cli
hlt
cmp
test
cld
ret
stc
movl
shl
in
aaa
hlt
std
cmp
clc
ljmp
roll
addl
imul
jecxz
xor
cmp
xchg
leave
shr
fmuls
addl
out
icebp
lret
xor
cmp
jecxz
rorl
filds
mov
repz
rcr
std
out
cmp
loope
icebp
sti
flds
test
loopne
int3
jecxz
and
neg
ror
sar
xlat
adc
fucom
add
enter
jmp
hlt
xlat
jmp
xor
ror
loope
sbb
mov
test
cli
in
int3
out
aad
loop
in
cmp
aaa
roll
ret
idiv
cli
jmp
mov
out
xor
clc
fsubr
das
fsub
aas
in
aas
incl
xchg
mov
call
cli
lret
in
out
icebp
xlat
ljmp
aas
fldl
cmc
jecxz
cli
sti
orb
repnz
int3
xlat
shr
leave
fsubr
ds
into
out
std
rol
cli
in
mov
std
in
out
fisttpll
lock
into
ljmp
sti
ror
test
ret
mov
dec
leave
jecxz
aad
int3
cmc
xor
out
jmp
in
inc
fiadds
mov
sub
cmc
cmc
ret
bnd
hlt
stc
hlt
lret
cld
cld
ret
roll
mov
repnz
fucomip
in
repz
jmp
xor
cmp
cmc
rcl
std
mov
xlat
lock
nop
loop
ror
cli
clc
stc
out
cmpl
fcomip
sti
cld
clc
dec
test
loope
xor
cmp
idiv
fdiv
repz
mov
lret
jmp
iret
loop
repnz
xchg
xor
repnz
std
enter
hlt
fdivrl
loopne
ret
jmp
jmp
int3
fld1
shr
fucom
leave
xlat
xor
jecxz
xlat
test
fcmovu
ret
repz
shr
lret
out
xchg
out
sub
aaa
out
enter
aas
lock
fistpll
test
in
std
iret
fucomip
hlt
loopne
icebp
test
cli
xor
jmp
ss
fldln2
xchg
ret
decl
dec
arpl
add
add
mov
inc
mov
cmpl
jne
push
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adcl
xor
adc
mov
add
mov
sbb
mov
jmp
int
lret
int
and
push
mov
jle
add
mov
nop
mov
in
clc
ljmp
icebp
cmp
neg
cmc
add
or
sbb
fsubr
out
mov
ficoms
xor
sti
out
out
cli
cld
and
xchg
fsubr
jecxz
mov
enter
lret
in
cmp
out
test
xlat
std
cld
clc
fsub
mov
mov
mov
icebp
in
repz
cmp
cmp
cmp
ds
ds
and
loopne
icebp
fisttpll
xor
fstpt
fcomp
out
cli
jmp
in
jecxz
loope
clc
std
loop
in
out
iret
call
aaa
iret
jmp
rcl
aas
cmc
cmp
aad
in
jecxz
fucomp
ljmp
xor
int
aam
cli
sarb
stc
out
ret
ffree
out
fcmovnu
jecxz
ror
loop
call
xlat
out
idiv
in
rcl
fidivrs
in
mov
loopne
sar
repnz
aas
leave
cli
xlat
test
in
enter
test
incl
in
jmp
loope
call
aad
cmp
in
in
cmpl
loop
mov
mov
icebp
test
jmp
xchg
hlt
enter
xor
sarl
shl
loope
test
out
test
out
movb
out
fstp
xlat
repz
cmp
repnz
rcl
movb
int3
jecxz
mov
not
iret
in
xor
out
out
int
cmp
cmp
out
jmp
loop
nop
enter
in
xlat
aad
xor
lret
cmp
fcmovbe
rol
in
les
dec
in
out
addb
cmp
aaa
fdivrl
div
cmc
out
testl
mov
jecxz
int
adc
das
in
in
in
xor
into
leave
cld
cli
jecxz
out
sti
rolb
out
fcomp
leave
fmul
iret
rcll
cmc
rol
dec
lret
ret
cmp
jecxz
xlat
sti
int3
mov
clc
int
sti
cmc
xchg
out
vshufpd
cmp
not
hlt
loop
xlat
sarb
clc
jmp
ftst
lret
repnz
sti
ror
in
in
enter
incl
loope
ret
or
lret
ret
out
nop
icebp
fmul
shl
test
shrb
in
cmc
test
shr
cmp
fdivrp
std
jmp
out
fldl2t
mov
loope
in
loopne
fcmovbe
shr
aam
into
xlat
fincstp
in
fcomip
xchg
sti
enter
into
repz
int
out
xor
ljmp
lret
divb
clc
loopne
in
incb
out
shl
xor
aaa
xor
int3
xlat
clc
stc
lock
stc
ds
test
loopne
ret
mov
jmp
test
rcl
lock
repnz
div
add
out
ffree
movl
cmp
enter
aaa
xor
lock
out
lds
std
loope
nop
mov
aad
in
hlt
fstpt
ljmp
aas
aas
test
loop
cli
fld
enter
lret
loope
jecxz
sti
test
into
test
lds
std
testb
faddl
jmp
jmp
fcmovbe
ror
cld
fsubp
roll
std
in
out
in
jmp
fcoml
aad
stc
aaa
lret
out
faddl
icebp
out
jmp
int
xchg
vprotq
out
xor
cmp
in
hlt
rcr
mov
test
lea
into
ss
repnz
idiv
cmc
fstpt
into
ret
ds
aam
shl
neg
xchg
lret
int3
xchg
out
rcl
xor
fnstsw
fistpll
xor
cmp
mov
mov
repnz
in
clc
aaa
cmp
lock
sar
xlat
cmp
jmp
test
cmc
shl
in
into
mov
test
jecxz
fucomip
aas
idiv
aaa
xchg
jmp
lds
mov
xor
mov
xor
xor
mov
sub
movb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
ret
ror
rcr
fnsave
xchg
sti
mov
adc
cmp
add
fmull
ljmp
call
fcmovu
cld
addb
mov
jecxz
ljmp
repz
loope
fld
jecxz
icebp
ret
cli
fchs
cld
in
mov
std
repz
shlb
fcomip
ret
call
loopne
and
mov
loope
shr
out
enter
bnd
int3
cmp
sar
int3
idiv
sbb
addl
loopne
ror
clc
lret
xor
repnz
cli
ljmp
test
lret
mov
xchg
xchg
xchg
test
fdiv
call
cli
fcomp
fcmovb
cli
jmp
rolb
mov
leave
in
cmp
enter
ss
loop
out
lock
loop
lret
lret
faddl
rol
iret
in
in
jmp
fcomi
in
fst
loope
sbb
fsubr
loopne
sub
in
icebp
call
jmp
ss
repz
int
cld
aam
repz
fidivrs
lret
cmp
int3
jmp
aam
cmp
repz
lret
ds
icebp
fildl
jmp
hlt
test
call
icebp
cmc
int
cmc
adc
shl
cmp
mov
xchg
lock
sub
stc
sar
out
icebp
fst
out
add
xlat
call
sub
les
jecxz
iret
cmp
cmc
in
fdivr
addl
lock
and
aam
aad
cmp
into
aas
ds
aad
in
xchg
out
loope
mov
mov
nop
repnz
int
cmp
xor
std
xor
cli
fmuls
in
int
xchg
fbstp
int
out
into
jmp
cmp
cmp
int3
repz
loop
repnz
loop
jmp
xchg
dec
cmc
xchg
int3
hlt
in
xor
ss
into
fcomi
repz
in
rcr
sub
decb
out
sarb
rcr
lock
sti
in
sub
ret
fiadds
shr
int
fstpt
out
flds
fcmovnu
loop
test
sti
xchg
call
xor
cmc
xor
in
aaa
fcom
lret
out
lock
in
xlat
cmc
loopne
fists
icebp
shll
stc
in
aaa
fstp
out
int3
cmp
cmp
fistpll
cli
stc
loopne
mov
fdivp
ljmp
shl
cli
sti
lret
clc
rcl
jecxz
ret
out
std
int3
fsubr
out
clc
lock
loope
xchg
xchg
cs
xor
lret
leave
neg
sarl
rol
out
jmp
sbb
movb
xchg
iret
sar
out
push
fidivrl
in
call
mov
in
test
xchg
mov
xchg
cmp
cmp
ror
enter
fadd
mov
fdiv
sub
xchg
lret
nop
xchg
in
mov
leave
call
cmp
jmp
ret
jecxz
aam
clc
aad
and
in
sarl
jmp
aad
not
rol
fsubp
fcmovnu
cld
test
jmp
loope
fdiv
shr
lock
icebp
in
lret
ss
idiv
fnstcw
jecxz
aaa
addb
int
leave
lret
mov
jecxz
shl
out
jmp
lock
addb
movb
iret
out
jmp
out
xlat
ror
aad
fucomip
imul
loopne
mov
fcomip
fcmovnu
mov
rorb
ljmp
jmp
std
xlat
clc
flds
cli
out
in
call
cmc
enter
xor
xlat
leave
cmp
iret
shl
cli
sti
cmp
loope
fsub
adc
fdivp
aam
cmp
lock
imul
cmp
fcmovnbe
ljmp
xchg
std
into
in
shrl
aad
cmp
lret
fyl2xp1
fidivrs
addb
xchg
lea
jmp
xlat
rcl
fxch
fxch
jp
cmpsl
push
pop
mov
pop
mov
jle
out
rolb
das
xlat
cmc
std
repz
hlt
cli
cmp
icebp
repnz
rcr
ljmp
in
ljmp
out
ss
repnz
sarb
rol
repnz
hlt
jecxz
fucompp
loop
enter
into
loope
shr
iret
cmp
in
aad
fidivl
cmp
fimull
in
icebp
in
repz
xlat
jmp
leave
xlat
icebp
cmp
rcr
mov
shl
mov
test
jecxz
out
int3
cmp
cmp
enter
fmulp
repz
loop
xchg
mov
in
shr
xor
lock
call
rcr
stc
cmpb
jecxz
in
fcmove
test
leave
out
hlt
xchg
test
ljmp
jmp
cmp
incl
and
fyl2x
xchg
test
xor
sar
hlt
into
fdivp
out
jecxz
addb
mov
out
cmc
ss
out
cmp
leave
int
in
fsub
roll
call
into
cld
lret
in
aaa
jecxz
xor
neg
xor
int
rcl
out
mov
call
ret
test
xor
repnz
leave
cld
fmul
aad
repnz
cmc
loope
aad
loop
in
out
loope
jmp
lret
test
fnstcw
in
roll
fisttpl
ror
icebp
cmc
ss
jmp
out
div
cmp
fstpt
cmpb
fldl
mov
in
sbb
leave
into
jmp
in
idiv
aad
rcr
cmp
out
enter
out
out
cld
in
adcl
clc
out
loop
out
aas
vpmulhw
clc
repz
fcmovu
mov
lock
xchg
lret
icebp
out
in
into
xor
rcr
aaa
addb
fcomi
stc
aad
call
fsub
xchg
loope
cmp
repz
lock
adc
hlt
in
aam
repz
aas
mov
jmp
xor
cli
fdivrp
fmulp
fdivp
xchg
mov
loopne
hlt
test
test
xchg
leave
loop
call
int3
int
enter
loope
in
int
std
in
ret
xlat
cld
mov
stc
lock
mov
jmp
xor
cmp
leave
sarl
loope
sti
xchg
lds
enter
in
xchg
iret
vpinsrw
ss
cmp
sti
cmp
cmc
incl
jmp
int3
mov
clc
int
xchg
mov
fdivrs
divb
cmp
cld
sbb
ror
sar
fcmovb
test
test
int3
cmc
ljmp
cmp
enter
loop
rol
in
mov
loop
loopne
mov
call
lret
fsub
cmp
aad
cmpb
loope
sub
repnz
aaa
ljmp
ljmp
aas
enter
jmp
mov
in
in
loope
nop
mov
fldl2t
cmc
cmp
div
int3
shll
cmp
int3
loopne
aas
call
cmp
sti
or
sub
xor
cmp
std
call
flds
stc
mov
test
xchg
or
in
lret
ljmp
fcmovnb
out
ljmp
int3
into
into
lea
loop
shlb
cmp
lds
cmp
fcomp
mov
in
sti
std
loopne
xchg
call
into
out
out
fcmovne
cmp
repnz
cmpb
loop
sar
fmull
sti
test
xor
ror
stc
loope
rcl
repz
or
out
fcomi
rcl
ret
xor
rcl
cmp
cli
ret
out
shl
xchg
test
jmp
call
aas
ret
into
xlat
loope
loopne
test
enter
xchg
lock
jmp
sar
fscale
out
rcl
testb
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
xor
add
mov
add
mov
mov
xor
subl
jmp
sarb
into
rcl
ror
add
jmp
lahf
or
aas
add
loope
nop
in
jecxz
fldcw
xlat
in
sar
lock
loop
test
rcl
repz
sbb
loope
in
mov
jmp
lret
mul
cs
leave
cmp
sar
shl
aad
xchg
and
xabort
xchg
in
int3
sub
in
out
cmp
out
test
cmc
repnz
testl
ror
xor
out
in
int
aaa
iret
shr
lock
call
mov
nop
icebp
ljmp
ljmp
clc
loop
cld
mov
loopne
std
les
in
loopne
xchg
mov
fdiv
cmc
out
repnz
ds
sar
and
jmp
sti
ret
xchg
xor
int3
repnz
aaa
lock
lret
cmp
rcl
idiv
test
fcmovne
shl
int
xchg
fimull
ret
ss
cli
int3
or
icebp
or
icebp
clc
jmp
clc
movb
iret
into
in
out
xlat
cmp
hlt
clc
stc
repnz
cli
lock
flds
jmp
call
fcmovnb
leave
rcl
jmp
ret
cmpl
nop
lock
and
xchg
not
loope
aam
lret
cmp
int3
aas
in
cld
loope
aam
call
test
out
lret
ss
aad
icebp
divb
out
test
rol
fcmovbe
fmulp
int3
mov
loopne
jecxz
jmp
lret
hlt
ds
cmp
orl
jmp
in
xchg
lock
loopne
aad
cli
fcomi
xor
loopne
cmp
loop
repz
loopne
test
loopne
lock
rcr
int3
fxch
fucompp
sti
sbb
stc
jecxz
ret
ret
leave
mov
test
aaa
fdivrl
fdivp
fdivl
mul
xchg
xlat
rol
orl
ljmp
clc
neg
aam
out
aas
not
lret
cmc
aaa
jecxz
cli
cld
cld
mov
iret
lret
divl
cmp
fdivp
loope
in
cmp
jecxz
loope
ljmp
sar
jmp
rcl
cmp
out
testl
incb
out
xor
xor
fdiv
lock
cmp
sti
sbb
int
xchg
xchg
test
xchg
int
rcl
out
icebp
enter
cmp
shr
loopne
xlat
test
rcr
jecxz
fsin
fsubrp
xchg
xchg
nop
cmc
ljmp
out
std
ds
aad
test
fcmovnu
fst
leave
in
jmp
clc
mov
jecxz
shl
into
xlat
stc
cmp
clc
iret
ret
incb
fucomi
mov
ror
fiadds
jmp
fld
clc
div
stc
shl
lock
shl
fcmovnb
ljmp
lea
jmp
lds
sarb
cmc
out
ret
test
test
fisttps
in
mov
loop
repz
repnz
xor
cmp
add
fidivrs
inc
mov
orl
cmp
xchg
into
ljmp
ss
hlt
addl
jecxz
in
ljmp
hlt
int3
cli
leave
lret
call
not
rol
cmp
ret
fadds
xchg
out
jmp
leave
xor
fdivrs
fdivrp
cmp
cmp
call
stc
test
iret
div
aad
cmc
cmp
rcr
les
fisttpl
int
ffree
mov
xlat
repz
xor
jmp
sbb
mov
leave
out
fsubr
leave
iret
mov
int
repnz
ror
out
jmp
rol
test
loopne
fildl
test
ljmp
repnz
in
xlat
repnz
shl
clc
test
cmp
in
sbb
in
call
jmp
loopne
lret
test
xchg
in
xchg
cli
out
sub
orl
mov
xor
movl
inc
movl
mov
sbb
jmp
iret
fcmovnb
stc
inc
sti
mov
fimull
jle
add
out
rcr
in
ret
ror
int
ss
test
cli
repnz
ffree
jmp
loop
stc
shr
in
mov
and
jmp
cmp
cmp
xlat
ds
aad
std
cli
test
jecxz
out
cld
rclb
icebp
test
fdivr
loop
ret
in
cmp
loop
mov
test
in
lret
fmull
xor
loope
test
out
idivb
les
test
mov
ficoms
xor
hlt
in
shll
cld
ss
jecxz
repnz
ret
jmp
sub
lret
xchg
out
shr
aad
cs
in
aad
repnz
into
ds
cmp
clc
clc
mov
lret
xchg
mov
xor
aam
cmp
lock
idiv
cmp
adc
roll
fdivr
mov
lds
shlb
in
xlat
sti
cmp
aam
ror
cmp
dec
ljmp
repz
fcmovb
into
xor
clc
cmp
in
fadd
repnz
out
int
repz
int3
xor
jmp
int
out
fiaddl
leave
clc
loopne
ffreep
call
aam
mul
jmp
cmc
repz
in
in
jecxz
loopne
xor
in
decb
loopne
jmp
aaa
not
jmp
ret
in
jecxz
call
fdiv
lock
cmc
aas
iret
fmul
ret
cmp
cmp
cli
aaa
int3
ss
loop
aad
cmp
imul
mov
loopne
shr
loop
xor
sti
repz
aaa
enter
loope
cmp
cmc
test
mov
addl
shl
repz
cmp
aas
aad
sarb
test
test
in
idiv
icebp
into
nop
fsubr
in
iret
xor
fadd
cmc
xlat
ret
aam
fyl2xp1
aas
fisttpl
cmp
jmp
out
ret
test
aaa
hlt
cld
fcmovnu
out
sar
fcomi
out
test
in
xchg
pushl
call
loope
in
test
addb
out
cli
adcl
fldz
stc
hlt
std
not
int
cld
iret
rcr
jmp
xchg
std
icebp
enter
xchg
out
cmp
lret
into
xor
ds
cmpb
rorb
int
xchg
ror
cmc
xor
lret
out
rcr
leave
aas
sti
in
fucomp
cmp
in
out
loop
into
test
test
xor
iret
fdiv
cmp
out
stc
lock
loope
loope
fdiv
mov
loopne
jmp
rcr
out
rol
in
hlt
in
icebp
std
ds
std
les
int
sbb
mov
cmp
int
std
sarl
fdivrp
jmp
lock
repnz
mov
enter
loop
xchg
fists
sti
into
cmp
jmp
out
fiaddl
lret
lret
into
ljmp
xor
in
out
iret
ds
hlt
ljmp
stc
jmp
loopne
out
call
xchg
cmc
lock
shlb
repnz
cmp
test
filds
or
in
out
out
int3
clc
clc
jmp
cmp
cmp
fiaddl
fcmovnb
sti
in
cld
xchg
jecxz
xchg
adcb
cmp
sti
cmp
xchg
loopne
stc
shl
enter
addl
out
iret
int3
aam
int
les
roll
xchg
xchg
out
out
in
xlat
jecxz
ss
iret
inc
cmpb
jmp
loopne
loope
mov
test
jmp
cmp
xor
rcr
fdiv
ffreep
in
aad
sti
stc
mov
incl
or
nop
ss
cli
clc
cmp
in
aaa
cmp
loop
xor
fmul
fcomi
std
aas
jmp
repz
repnz
jecxz
jmp
cmp
neg
inc
clc
sbb
repz
stc
faddp
decl
mov
mov
orl
push
xor
mov
add
jmp
mov
mov
inc
cmp
jmp
aad
aas
ret
fcmovne
aad
mov
and
bound
add
in
out
out
call
fsincos
addl
xchg
in
out
jmp
test
hlt
shl
iret
hlt
ljmp
rcr
cmc
cmp
mov
xchg
mov
mov
mov
jmp
cmp
out
jecxz
cmp
rcl
test
ficoms
hlt
rcl
repnz
fsubr
repnz
fdiv
clc
rol
rol
jmp
fyl2x
fsubrp
in
and
not
out
into
shr
rcl
stc
jmp
xchg
cli
in
fxch
stc
addl
lock
xor
cld
aaa
ljmp
ret
fadd
int3
test
fists
and
clc
clc
leave
xor
fdivrp
cmp
int
cld
hlt
cmp
cld
std
fmul
xchg
mov
ret
cmp
xor
clc
cmc
fstp
out
mov
idiv
out
int3
cli
call
xor
xor
out
aaa
cmp
in
into
iret
sti
shl
xlat
mov
test
ljmp
lret
fcmovnbe
std
repnz
cmp
not
into
jmp
aad
call
in
ror
ret
out
fidivl
aas
divb
ds
fcmovnu
stc
mov
in
icebp
xchg
mov
rcr
call
hlt
not
aad
cli
in
fmul
stc
std
in
mov
mov
xor
in
call
cli
cmc
cmp
cmc
out
in
fld
ret
out
lea
loopne
xor
hlt
not
aam
in
sar
loope
lock
test
aas
call
call
fcmovnu
int3
xchg
loop
cli
in
in
test
in
cmp
out
test
fmul
out
loope
mov
xorl
aad
loop
aas
int3
adc
fdivr
test
in
loope
not
fcom
icebp
cli
out
loope
rcl
lock
std
xchg
or
in
lock
jmp
aaa
in
adc
test
or
mov
fsubr
xor
out
cld
fldln2
into
jecxz
aam
test
cli
out
loopne
loop
xchg
in
iret
int3
cmp
shl
rcl
rcl
cld
repnz
jecxz
xchg
addb
in
in
in
jmp
shl
addb
jmp
sti
in
into
fists
xlat
cmp
into
ljmp
out
aad
leave
out
fdivr
cli
lret
iret
call
shr
test
fcomp
sti
cmp
ror
fdivp
fidivrl
dec
ret
shr
rol
mul
fcmovnb
test
iret
out
shl
mov
jmp
aad
int3
hlt
call
rcl
shl
fxam
lret
lret
mov
icebp
popl
in
jmp
sti
repnz
fxtract
in
stc
sti
xor
loopne
in
jecxz
mov
int
xor
lock
cld
lock
cld
cmp
loope
test
int3
out
fdiv
in
int3
in
xor
jecxz
into
cmp
stc
enter
out
addl
dec
std
xchg
lock
out
cmc
aaa
aad
xor
sti
aam
in
xor
jecxz
sti
clc
mov
lret
clc
in
out
out
test
shr
enter
or
lock
cmc
rcl
int3
cli
xchg
xchg
mov
aam
rcl
lret
lds
idiv
cmp
cmp
in
repz
test
in
loopne
cmp
lock
in
shl
icebp
iret
rcl
cmc
sarl
rolb
shl
cld
fcmovne
cmp
fstl
rol
vpslld
rcl
xor
cli
shr
sarb
xchg
xlat
mov
fchs
sti
repnz
loop
jmp
sub
loopne
hlt
ds
fsubp
aad
mov
sti
enter
test
out
cli
icebp
cmp
ds
fneni(8087
jecxz
test
mov
xchg
sti
jmp
rcl
xlat
fcmovnu
shl
cwtl
clc
xchg
ficoml
push
jle
add
in
shll
ror
repz
cmp
loope
int
in
cmc
in
and
mul
leave
std
mov
sti
jmp
ror
sti
out
cmp
shr
shl
cmp
loop
lds
loopne
iret
int3
xchg
mov
sub
leave
call
stc
clc
add
fcmovnbe
out
in
mov
fst
lea
xor
bnd
shll
jmp
icebp
rcl
leave
loope
in
enter
fdiv
fnstsw
shl
out
fcmovb
repz
ret
fnstsw
orb
lret
repnz
fldpi
out
in
stc
fincstp
cld
in
ds
fldl
fyl2xp1
fdivrp
into
out
loopne
out
xor
cld
ror
int
test
fsub
cli
fucomp
fsubp
loop
sti
std
xchg
lret
xchg
jmp
cli
lock
out
sub
div
cmc
out
mov
xchg
iret
loopne
repnz
iret
cmp
xor
lret
out
jmp
rol
loope
ret
clc
sub
aam
stc
int
repnz
enter
rcl
clc
in
hlt
xchg
fcmove
repnz
mov
jmp
cmp
lret
shr
iret
cli
into
and
cli
std
xchg
in
iret
xor
repnz
repnz
out
loope
xchg
fdivrl
int
xor
lock
imul
ret
ret
xor
xor
lret
aam
shl
test
lds
jmp
fucom
jmp
mov
shrb
xor
rcr
cmp
clc
repz
repnz
xlat
out
addb
loop
clc
xor
int3
div
jmp
rcl
xchg
call
mov
xchg
lret
in
int
out
out
fdiv
lret
loop
fnstcw
out
in
ret
testb
test
jmp
sub
iret
fcmovne
repz
cli
cmp
aas
out
xchg
int
fmull
xor
icebp
sti
not
ds
aad
hlt
fadd
fmul
cmp
fmull
mov
in
cmp
cli
icebp
jmp
mul
fcmove
in
sub
cmpl
mov
out
adc
jmp
cmp
incl
icebp
xchg
aad
xlat
fucomi
rcl
xchg
repz
ret
cmp
fcmove
aad
div
icebp
fninit
jmp
rcr
int
xchg
fiadds
jmp
rcl
int
jmp
cmp
cmp
xchg
sti
sub
into
jecxz
enter
fnstsw
shl
stc
xor
std
div
shl
cmp
adcl
ror
ret
in
shl
in
fistpll
cmp
shr
jecxz
fstp
sti
fisttpl
orb
out
sti
xor
fldl2t
out
idiv
cmc
ret
test
cmp
call
out
in
faddl
cli
in
cmp
in
in
cmp
in
shl
in
jecxz
aad
mov
loop
in
loopne
lret
hlt
lock
xor
fmul
in
sti
sub
neg
repnz
testl
fildll
icebp
bnd
fidivrs
jmp
fcos
xlat
cmc
orl
cmc
ror
cmp
xor
repnz
icebp
into
cmpl
testl
xchg
mov
int
cs
aad
xlat
addb
stc
sub
shl
repz
xorl
xor
hlt
int3
sar
fmulp
shr
into
aas
fcmovnb
repnz
xchg
ljmp
sti
std
in
mov
lock
in
fcmovnbe
idivl
cmp
cmp
test
int3
jmp
in
mov
xlat
lock
fstp
call
repz
loop
filds
sti
jmp
jmp
out
aam
sti
aam
std
ror
in
lret
filds
in
in
in
test
enter
mov
mov
jmp
ret
ror
ret
rcl
je
repz
sbb
add
aad
aam
in
stc
cmp
cmp
lock
aam
roll
clc
enter
adc
rol
sar
clc
xor
xlat
shr
sti
ret
sub
div
sti
sti
enter
loope
in
rolb
shl
fnstenv
cmp
lret
lock
cmp
test
jmp
repz
hlt
fcmovbe
clc
enter
hlt
rcr
in
jecxz
test
loop
mov
jecxz
mov
jmp
leave
fstp
aaa
aas
aad
ret
hlt
shl
addb
stc
in
call
int3
xlat
in
aad
xor
cmp
ds
ds
sub
lret
cmc
loope
mov
repnz
xchg
in
xchg
sub
lret
cmp
in
shl
cmp
out
mov
out
call
lock
int
cmp
sar
xchg
in
out
xchg
aam
into
xor
xor
cmp
in
iret
aad
into
out
test
std
cld
xchg
jecxz
out
mov
jecxz
fidivrl
xlat
cmp
xchg
ds
enter
lret
fiadds
adc
xlat
xlat
in
fdivr
cmp
ret
rcl
shl
xchg
imul
out
xchg
into
ljmp
cli
call
dec
mul
int
repnz
repz
loopne
int
jecxz
xchg
xlat
hlt
fdivr
fcmovbe
push
out
stc
repnz
shl
xchg
cld
test
in
fsubrp
loopne
jmp
aad
lret
fdivl
lock
lret
loop
cld
leave
fmul
loop
xchg
ret
les
cli
fadd
cmp
xchg
xchg
cli
sbb
xchg
leave
fcoml
shll
fcom
shr
repz
cli
cld
in
ret
sti
out
call
out
in
repz
repnz
enter
cmp
hlt
cmp
repnz
in
out
loop
mov
sub
imul
iret
cmc
in
cmc
enter
loopne
out
int
in
cmc
in
xchg
loop
orl
fnsave
iret
cmp
fsin
sbb
repz
in
enter
jecxz
fdiv
aad
ror
sti
aam
xlat
cmp
sbb
cmc
std
ror
testb
iret
fstp
repnz
ret
lock
icebp
rcr
fadd
stc
not
xor
rcl
fdivr
out
test
shl
cld
adc
icebp
clc
cli
fnstenv
out
ret
repnz
idiv
cld
mov
fisttps
mov
xor
int3
out
stc
cmpb
out
call
aad
loop
into
mov
in
fcomip
enter
aaa
fstp
lock
sarb
fnstsw
clc
cmp
ds
in
loop
test
ret
in
int3
xchg
int3
xor
sti
vcvtdq2pd
lret
enter
jecxz
icebp
call
inc
xchg
mov
lret
mov
loope
in
aad
xor
cmp
out
iret
cmp
cld
aad
les
adc
cmpb
lea
cmc
bnd
leave
shl
cmc
idivl
aad
not
lock
int3
clc
sbb
call
cmc
repz
shlb
aad
out
not
mov
into
loop
loopne
addb
aam
enter
call
std
jmp
cli
fadd
fdiv
test
xor
test
into
xchg
xchg
lret
xlat
out
xor
aaa
enter
clc
rcl
out
fdivr
out
aas
hlt
fcmovb
in
mov
loopne
jmp
xor
ss
fmulp
cmp
or
xlat
rolb
loopne
fildl
clc
icebp
shl
cld
repz
out
fcmovbe
out
xchg
sti
test
in
xchg
aad
out
jmp
cld
hlt
aas
in
repz
test
repz
xor
int3
xchg
test
aaa
das
aaa
stc
sti
ss
stc
cld
icebp
icebp
fcomp
repz
mov
fidivs
shr
pop
add
add
iret
vpaddusw
fstp
pop
mov
outsl
repnz
es
pop
jle
aas
add
loop
ret
hlt
in
in
jmp
aas
aad
push
faddl
test
lret
jecxz
std
test
xor
sti
divb
int
out
cmp
cmp
aad
loopne
roll
jmp
clc
out
cmc
in
loopne
ds
ds
in
addl
xchg
lock
out
fprem
hlt
sbb
rcr
icebp
fildl
fcmovu
ficoms
iret
out
jmp
std
les
add
inc
cmp
out
in
mov
nop
bnd
loope
jecxz
lock
push
sbb
loopne
xchg
fldl
out
add
out
aaa
int
rcl
in
aad
into
ret
ds
rcl
fdiv
out
icebp
sub
xchg
divb
in
in
cmp
fnstsw
in
iret
ljmp
cmp
loop
xchg
jmp
icebp
xchg
ret
rol
aam
aam
iret
rcr
xlat
xlat
shr
test
enter
or
aam
lret
ljmp
loope
out
addl
in
lret
ljmp
xor
lret
ror
repnz
iret
test
repnz
faddl
out
xchg
in
out
in
shll
div
in
ds
cli
roll
idiv
fiaddl
ret
in
cmc
fidivrl
enter
repnz
rol
stc
inc
neg
clc
fstp
out
fsubp
lret
mov
in
in
leave
icebp
in
in
shl
fsincos
out
out
out
rcl
mov
ljmp
in
cmc
jmp
cli
cmp
cmp
stc
lret
std
ret
neg
xchg
rcl
cli
xlat
call
jecxz
addb
cmp
cmp
cli
hlt
xchg
sub
test
ret
xchg
loope
mov
out
mul
cmc
out
cmp
lret
cmp
mul
aad
jmp
cli
vpavgb
loopne
nop
lea
sub
fcmovnb
repz
lret
hlt
ffree
out
in
icebp
cmp
loop
sti
int
shr
in
shl
call
jmp
faddp
cmp
sar
ret
out
fsubrp
or
in
out
shr
adc
jmp
jecxz
in
bnd
aas
stc
repnz
repnz
in
into
fcomp
sti
test
jmp
shl
fidivl
int
cmp
adc
out
xchg
jecxz
jmp
out
mov
jmp
out
cmp
sti
shl
sti
icebp
into
lock
cli
and
test
addb
xor
cmp
repz
cmp
iret
stc
filds
in
fmull
in
xorb
xlat
jmp
iret
out
fcmovnbe
aas
cld
cli
mul
fildl
test
imul
ret
xor
jmp
in
hlt
fdivp
fnop
rcl
fadd
jecxz
test
xchg
jmp
cmp
repz
ss
aad
std
clc
movl
std
fnstsw
out
sub
rcr
ljmp
loope
clc
xchg
mov
fcomip
in
mov
mov
nop
loope
lret
lret
in
sti
aad
jmp
and
rcr
lret
in
int3
adcl
out
into
call
repz
mov
mul
out
fmull
ror
out
aad
cmc
fidivs
repnz
orb
adc
out
das
jmp
fcomp
cmp
imul
cmp
xor
lock
in
out
fsub
out
xchg
in
in
xlat
ret
stc
cmp
jmp
clc
ds
loope
xchg
xlat
out
loop
std
jecxz
ljmp
jmp
cmp
stc
loope
call
fimuls
sub
lock
xor
cmp
cmp
cmc
cld
shl
in
mov
ret
mov
repz
add
jmp
fcom
xlat
push
xlat
outsb
shrb
pop
jle
aas
add
shll
xor
fcmovne
fdivs
sarb
lret
xchg
dec
les
xor
jecxz
clc
rcr
inc
cmp
in
cmp
mov
in
fsubr
stc
fxch
xchg
std
aam
shlb
hlt
cmc
xor
std
ljmp
lock
cmpb
fmul
ret
mov
into
ljmp
out
xlat
out
xor
hlt
xor
shr
stc
sbb
rorb
nop
iret
xchg
lret
mov
shr
cli
out
int
ds
in
xchg
hlt
cmc
leave
in
adc
fsubr
std
xchg
out
out
sti
fmul
repz
out
xlat
fdivrs
cmp
iret
stc
xchg
call
imul
popl
xor
out
fcmovb
xor
push
repz
hlt
loopne
mov
mov
in
xchg
out
int3
call
fidivrs
ror
loope
fcom
ret
repnz
lds
xchg
ljmp
out
in
lock
shl
testl
lret
lock
rcll
cmp
out
xor
fcomip
cmp
into
in
std
enter
out
call
rolb
fcmovu
cmp
cmp
adc
idiv
fadd
ljmp
hlt
loopne
fcmove
imul
xor
cmc
cmp
sub
out
mov
test
out
aad
int3
repnz
loop
clc
sar
leave
cld
xchg
mov
fmul
test
ficoms
lock
hlt
aad
in
cli
fsubp
clc
rcr
cmp
jecxz
xor
mov
test
lds
ret
sti
stc
enter
rol
repnz
fcmovu
loopne
ror
mov
leave
in
sti
mov
enter
loopne
loopne
loopne
shl
enter
in
test
std
clc
in
iret
hlt
int
repz
cld
repnz
xor
cmp
mov
fcmovne
fiadds
jmp
ss
aaa
cmp
fcomp
lock
lock
fsubrp
mov
in
xchg
stc
out
nop
mov
int
out
cli
jmp
das
cld
ss
repnz
ret
rorl
lret
out
aaa
cmp
ret
cmc
ror
int
xlat
std
rcr
loop
cmp
sar
jmp
cli
mov
rcl
or
jmp
cmc
loop
xlat
rol
ds
jmp
aam
jecxz
mov
into
in
loop
mov
ss
sti
in
fnstcw
repz
out
ds
xlat
fiadds
jmp
out
loopne
into
ss
cmp
sarb
fidivrl
repz
iret
sar
loop
lret
hlt
jmp
cld
mov
in
ret
xor
ret
cld
icebp
lds
cmp
clc
ror
not
rcr
test
add
xchg
std
out
out
in
fdivs
out
idiv
sar
loopne
cli
lock
cmp
fdiv
mov
jmp
add
jmp
call
in
ljmp
lock
cmp
fdivrl
fdiv
rcr
cli
mov
fmull
mov
aam
cmp
fstp
clc
out
icebp
into
repnz
orb
in
in
out
mov
into
call
shl
repnz
lret
ret
ds
aad
sti
loope
mov
in
out
jmp
rclb
cmp
aaa
aaa
jmp
sbb
call
rol
xchg
ret
mov
in
lock
xchg
loop
lock
cmp
int
stc
sbb
xor
enter
mov
aad
lds
ror
out
sti
neg
into
xlat
cmp
fimull
fsubr
rcl
xchg
mov
out
out
shl
in
cmp
ss
cmp
repnz
test
aam
sti
hlt
mov
mov
iret
aas
shll
int
cmp
iret
loopne
in
ljmp
fadd
fmul
aad
out
repnz
std
hlt
loopne
ljmp
repnz
dec
clc
fstp
cli
in
fadd
loopne
clc
in
addl
pop
or
mov
jmp
rcl
rol
rol
rcl
mov
pop
out
pusha
popa
jle
aas
add
in
div
lock
into
inc
cmp
xchg
xchg
std
in
aam
ror
in
loope
std
xchg
cmp
in
sar
call
flds
jecxz
int3
fld
fucomp
lret
xchg
test
cmc
shlb
xor
fldl
repnz
sti
jecxz
fsubr
addl
repz
cmp
ret
fcos
testl
xchg
call
rcl
cli
jmp
ror
cld
ds
cmc
ss
out
mul
jecxz
cld
sti
xchg
cs
repnz
shl
cld
into
std
jmp
fistpll
fsubp
cld
out
out
nop
addl
cmp
aad
out
add
ret
rcl
idiv
loop
icebp
hlt
jmp
int
shll
out
out
in
cmpb
repnz
out
in
call
in
xchg
sub
repz
cld
std
int
clc
sar
ret
fiadds
out
in
in
rclb
iret
cld
leave
enter
aam
cmp
cli
in
in
in
loope
jmp
adcl
std
shll
loopne
sti
test
xlat
cli
rcr
cli
mov
in
sti
int
call
cmp
std
rcl
icebp
clc
cmp
ret
xor
cmc
call
mov
out
out
das
aad
fneni(8087
ljmp
sti
mov
flds
repz
lret
fdivr
repz
cmp
xor
in
fsub
cmp
aad
mov
in
hlt
int
icebp
loop
fcomi
xor
std
xor
jecxz
cmc
aad
jecxz
out
fcmove
adc
cli
xchg
rorl
jmp
out
out
out
into
jecxz
imul
ljmp
nop
loopne
call
int
cmp
lret
repnz
clc
ret
icebp
mul
cmc
in
cld
out
in
in
std
lret
xor
xor
lret
fcmovnu
icebp
fdivr
sti
mov
fucomip
into
xchg
mov
cmc
ret
in
enter
ds
loope
ret
fdivr
stc
jecxz
flds
lock
aaa
xor
call
ror
sbb
loopne
in
in
clc
sti
out
shr
std
test
cmp
jmp
out
hlt
out
cld
idivb
sar
and
ljmp
call
int
in
repnz
out
in
aad
hlt
clc
aas
stc
out
std
xor
jecxz
in
mul
fucom
ljmp
out
shr
ret
stc
cmp
repnz
int3
loopne
repz
call
cmc
loope
in
decl
fmul
ss
icebp
jmp
lock
ret
sti
aas
jecxz
mov
cli
leave
test
into
into
mov
in
xor
aaa
cmp
fdivrs
fptan
xchg
cmp
out
xchg
loope
out
cli
out
stc
fmul
cld
fcomip
sar
ds
enter
fucom
into
in
nop
jmp
out
enter
call
cld
idiv
sar
or
loop
div
sti
lock
out
aam
in
out
cmp
sarl
xlat
ror
cmc
ret
aad
fsub
out
mov
decl
jecxz
jmp
out
lock
cli
shl
out
rorl
fsincos
fcomi
cld
lock
out
repz
cmp
ss
cmp
fdivr
stc
add
fcmovnb
stc
ljmp
rcl
cli
rcr
push
xor
in
neg
cmp
fabs
neg
add
fsts
aad
repz
shl
test
std
lock
rolb
cmc
fld
ret
and
in
cmc
ljmp
aad
loopne
fidivrs
cmc
jmp
in
rcr
in
out
jmp
ljmp
repz
cmp
rcl
sar
add
fucomip
lret
iret
shl
and
mov
xor
add
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
jmp
into
mov
fmul
iret
fucomp
sub
inc
jg
fldenv
data16
aas
add
shl
fstp
xlat
int3
xor
ret
test
jecxz
out
fsubrp
fildl
call
fldln2
sti
cld
out
cmp
fdivr
int
cmp
movb
and
shrl
ret
sti
lret
repnz
lock
int3
adc
mov
ljmp
std
xchg
out
in
nop
jmp
rcl
jmp
std
cmp
adc
stc
loope
mov
fildl
rcl
sub
cmp
cmp
ds
jmp
fadds
in
add
lret
filds
aad
fcomi
call
out
rolb
lret
mov
lea
fdivs
leave
ss
int3
lock
roll
ljmp
shr
aas
sarb
rcr
enter
iret
sar
repz
jmp
std
jmp
lret
ljmp
lret
cmp
cmp
ret
sarl
cmp
fucomip
loopne
cld
loop
cld
mov
xlat
in
enter
loope
fsubr
test
aam
xchg
in
out
shl
repz
ror
ss
cmp
out
call
jmp
cli
xacquire
loope
aaa
hlt
rol
roll
repz
int3
frstpm(287
loopne
fildl
shr
fcmovu
xor
clc
aas
aas
fcomip
aad
roll
sbb
and
hlt
enter
cmp
pushl
fdivp
iret
jecxz
rcr
ljmp
enter
aam
loop
leave
aad
repnz
fdivr
jmp
fcom
cmp
testl
repz
stc
cmp
fsubp
lret
shl
aas
repnz
in
int3
nop
xchg
xor
bnd
fxtract
sti
into
lock
and
or
in
mov
fsin
in
out
jmp
fstp
fprem
xor
int
cld
ret
std
out
orb
out
out
aaa
cs
in
cmp
sarb
addb
hlt
rorb
leave
xchg
test
shl
xor
cmp
iret
idivb
out
xchg
ret
aad
fcmovu
int3
nop
cld
call
ret
lret
fyl2x
cmp
cmp
lds
ds
cld
sub
lock
iret
in
cmp
ss
idiv
cmp
ret
cld
cld
xchg
jmp
into
jmp
out
fsqrt
not
sub
int
neg
out
loope
loop
out
aad
mov
in
int3
hlt
mov
shl
cmp
out
cmp
cmp
lret
jmp
fsub
lock
hlt
leave
loopne
sti
loope
in
mov
test
out
cs
repnz
sub
cmc
rolb
lds
cld
nop
leave
dec
int
ficoms
in
xor
cld
ljmp
fpatan
jmp
mul
jecxz
cld
mov
xchg
mov
int
xor
repz
in
cmp
jmp
ret
in
fucomi
sub
orl
out
sti
jmp
int3
iret
cmc
iret
fstp
icebp
stc
jmp
leave
out
out
mov
xor
cmp
cs
fcomp
int
adc
aas
repz
xlat
call
clc
in
sbb
jmp
xor
xor
fnstenv
imul
fmul
ror
out
int3
cld
fldl
in
stc
fsubr
fcomp
cli
repnz
std
call
xor
ss
lret
sub
std
cmc
aam
mov
fcomp
leave
in
xchg
lock
not
iret
xor
in
stc
loopne
icebp
xlat
int3
aaa
xchg
cli
ljmp
iret
xchg
mov
leave
xor
test
sar
int
ret
loopne
loope
fdiv
clc
mov
fsubp
icebp
rcr
out
lock
ss
lret
lret
out
rcl
int3
icebp
sarb
and
clc
in
hlt
dec
jecxz
jecxz
stc
out
loope
rclb
out
jge
mov
mov
inc
cmp
jne
pop
jmp
ret
xlat
rcl
lret
xchg
pop
ficompl
mov
push
jle
add
xor
divl
ret
cmc
ror
xchg
ret
hlt
aam
xchg
sub
rcr
ljmp
shl
fst
out
icebp
lock
repnz
into
aad
out
fsubr
loope
icebp
shl
cld
loope
fcom
leave
aad
les
in
hlt
ffreep
iret
jecxz
aam
call
ds
clc
icebp
aas
sti
ret
test
testb
repz
xchg
ror
sar
int
cmc
out
xor
fdivrs
cmc
out
loope
cmp
into
test
jecxz
in
call
fidivrs
fsub
sti
fcomi
jmp
iret
ljmp
aam
int
stc
fidivl
shlb
rcl
in
sbb
shl
in
clc
test
mov
xchg
jmp
lock
ror
xor
ljmp
sbb
cmc
ror
call
xchg
sub
mov
vpxor
in
into
int3
cli
jecxz
push
out
xchg
out
in
jmp
repnz
repnz
loope
cmp
out
stc
aaa
fldl
in
loopne
ljmp
ficoms
in
in
not
out
fiadds
std
xchg
in
mov
hlt
repnz
enter
cld
lock
shlb
cld
cmc
aas
fdivr
aam
cmp
fdivrp
fisttpl
aad
ljmp
aad
int
icebp
in
icebp
mov
test
test
test
jmp
shr
cmp
xor
lock
mul
stc
ret
fst
xchg
idiv
test
mov
loope
rcr
cmp
out
dec
in
cmp
sti
mov
fldl
ficoms
repnz
xor
lret
sar
cmp
cld
cmp
clc
fsubp
leave
in
lret
out
rcl
cmc
rcl
das
clc
ror
jmp
sarl
cmp
rcl
ret
sar
neg
ror
lret
jmp
ss
repz
fsub
hlt
fdiv
cmp
aad
fsub
fcmovnb
fld
rol
lret
xor
xor
cmp
enter
lret
out
rcl
cmpb
mov
jecxz
or
shr
cmpb
jmp
out
pushl
hlt
stc
ret
lock
out
fmul
lret
icebp
out
out
in
lret
out
xor
enter
rcl
vpmuludq
cmc
enter
sar
into
leave
fucom
int3
in
jecxz,pn
jmp
aad
icebp
repz
repz
ds
in
cli
stc
call
adc
xchg
divb
ror
aaa
fdivl
cld
call
out
aad
xchg
rorl
enter
jmp
xor
int3
repnz
neg
cmp
iret
xchg
fidivrs
in
fadds
leave
in
faddp
nop
xor
cmp
repz
ljmp
in
enter
ds
enter
lret
loop
jecxz
ror
cli
in
cs
ljmp
out
idiv
cmp
lea
in
leave
out
enter
repz
in
aam
xor
sub
stc
test
mov
int
out
ss
cli
xor
test
icebp
iret
hlt
test
sti
filds
ljmp
repnz
lock
into
repnz
loope
std
ljmp
mov
loope
cmp
shl
fmul
out
fcom
shl
stc
jecxz
rorl
iret
std
mov
xchg
out
rol
xor
xor
fmul
jmp
in
or
fcmovnbe
mov
mov
lret
stc
push
jmp
cmc
loope
rol
loope
fiadds
loop
int3
out
int
xor
fcom
aaa
rcr
cmp
cli
clc
jmp
loop
fsub
lock
mov
lret
mov
repz
cli
hlt
fmulp
jmp
xlat
iret
ret
ret
stc
nop
mov
xchg
in
xchg
shlb
in
stc
fcomps
inc
clc
jmp
aam
fadd
fstp
pusha
shl
stc
jnp
andl
clc
rcl
idiv
rcr
loop
in
and
clc
sti
call
jmp
das
int3
leave
jmp
fsubr
cmp
addl
std
test
in
cmc
xor
ss
std
jmp
aam
ret
jmp
in
stc
loope
out
xchg
rcl
in
jmp
repz
mov
fsubp
fmul
fcmovnu
fisttpll
cld
in
out
cmp
rol
xor
lret
cmc
out
shl
shl
in
sar
cli
ret
fidivrs
loope
out
mov
mov
aad
stc
fprem1
lret
cmc
fneni(8087
xor
xlat
test
cmp
test
out
mov
repz
mov
rol
aaa
xor
lret
ret
xlat
out
jecxz
loopne
mov
call
rcll
sar
div
fdivrp
cmp
in
test
icebp
stc
frstpm(287
loope
jecxz
mov
fiadds
sub
repnz
cmp
aam
repz
fcmovbe
idivb
call
fsub
lret
mov
jecxz
in
xor
cmp
mul
in
cmc
cmp
out
std
fmul
sti
in
hlt
aad
not
fnstenv
iret
aam
jmp
xor
ljmp
ror
mov
mov
stc
jmp
rcl
ljmp
aam
hlt
out
stc
std
fsubr
std
in
loope
jmp
faddl
ss
clc
xlat
cmp
jecxz
repz
fildl
in
mov
fcoml
rcr
hlt
aam
lret
aas
aas
iret
shl
cli
in
jmp
loopne
xchg
jmp
out
fcomp
fsubrp
iret
iret
hlt
enter
loopne
shr
ret
jmp
xor
xor
xor
sar
int
ds
ror
xchg
fimull
lret
jmp
ret
cmp
into
repz
cli
cmp
cmp
call
ds
fnstsw
in
xchg
mov
fucomip
aad
jmp
fidivl
rcl
leave
repnz
cmp
xlat
repz
fldl
test
test
sub
divb
xor
repz
cmp
out
fmul
testl
ljmp
shrb
ss
aad
int3
xlat
cmp
rol
test
jmp
div
loop
mov
hlt
mov
call
jmp
aas
xlat
in
repnz
rorb
sbb
out
into
rcll
in
aad
jmp
adc
loop
shl
filds
mov
xor
shll
cmc
out
shll
in
cli
ljmp
aas
cli
in
jmp
into
xchg
out
add
shll
enter
repz
repz
fld
shl
hlt
cld
xor
in
addb
fdivr
rol
cld
out
aas
cmp
ret
lds
ret
cld
lock
xchg
test
fxch
out
imul
xlat
fldl
stc
out
cmp
xchg
in
shll
enter
ljmp
shl
clc
fnclex
ret
in
fcmovne
mov
leave
lret
rcl
out
int
fdivp
xor
fcos
dec
in
mov
mov
mov
aam
cli
aaa
imul
int3
in
jmp
ds
loop
push
fadds
in
in
std
ror
int
xor
in
ss
xor
xor
lock
ret
fsubr
loop
fxch
call
leave
xor
cmp
testb
out
ret
jecxz
lret
in
jmp
out
sarl
neg
fidivrs
aas
shl
rolb
fldl
rcl
icebp
lret
clc
fidivl
fcomp
ret
icebp
loop
jmp
leave
iret
les
hlt
icebp
xlat
fcmovnu
lock
out
loopne
aas
loop
jmp
fldl
in
jecxz
sar
repz
mov
xor
jmp
fcomp
fistps
je
lods
push
jle
add
rcl
int
loop
lret
cmp
clc
sbb
jmp
xchg
ret
fucom
xchg
test
cmp
fst
not
out
adc
fucom
mov
add
xchg
out
mov
repnz
int
ret
out
shr
repnz
repnz
sub
aaa
cli
repnz
enter
sti
imul
cli
xchg
repnz
int3
ret
divb
cli
aad
xor
fnstcw
out
sub
ret
mov
out
mov
shr
xor
imul
int3
icebp
sbb
std
rcr
ret
cmp
loop
lret
mov
fcmovu
rcr
cmp
int3
out
loopne
fucomp
fcmovnb
aad
jmp
fmul
in
out
mov
div
cmp
fcomp
aaa
xor
std
shr
loop
jmp
xchg
nop
out
in
iret
xor
call
fsubp
xlat
loope
out
xlat
jmp
enter
rcr
cmc
mov
call
int
aad
call
iret
fsqrt
std
fcom
cmp
out
incl
fsubr
xor
sarl
cmp
iret
cmp
jmp
loope
sar
repz
shll
cmp
cmp
hlt
fcomi
cli
in
jmp
fmul
addl
cmp
fdiv
into
cmp
fdivrp
iret
sar
shl
clc
aam
in
call
lret
mov
xor
repnz
loope
rcl
int3
ret
into
out
sarl
adc
cli
orb
aaa
repnz
fcmovu
iret
cmp
test
test
out
xchg
lea
repz
fdivr
xor
out
clc
lock
rcl
aad
xchg
incl
jecxz
lret
in
repz
fdivrp
neg
loopne
fsincos
iret
lds
int
fimuls
in
xor
out
call
iret
loopne
iret
stc
cmp
ljmp
int
out
int3
aad
xor
icebp
repz
loopne
in
not
clc
or
call
ror
xchg
xchg
out
aaa
in
sarl
iret
out
int3
f2xm1
cmp
rcr
shl
aad
flds
in
ror
xchg
aad
ret
ret
shl
cmp
in
enter
cmp
in
mov
call
iret
in
into
lea
sti
leave
aad
xlat
cmp
out
fsub
ljmp
xchg
in
jmp
enter
fdivr
ror
rcr
out
out
repz
shl
in
into
xor
icebp
cmc
lock
dec
out
fcom
out
out
dec
or
adcb
xor
cmp
lret
fdivrs
neg
lret
fdivr
ret
into
jmp
xchg
xor
xor
sar
ds
iret
icebp
loopne
mov
not
mov
in
ljmp
loop
out
fstpt
cmc
int
aas
aam
into
movb
shr
jmp
loope
xor
shll
vcvttpd2dq
filds
loopne
loope
rorl
out
mov
xor
ret
jecxz
call
sarl
fdivp
icebp
fst
out
out
ljmp
loop
fdivrs
in
ss
cmc
out
stc
aas
aas
clc
sti
aas
out
cld
test
in
mov
iret
out
xor
icebp
rcr
cmp
cmp
shl
jmp
sti
out
out
call
in
loope
out
fsubr
cmc
loopne,pt
int
cmp
out
jecxz
xchg
in
int3
xchg
ficoms
cmp
repnz
jmp
lock
fdiv
out
cmc
jmp
int
mov
and
loope
fsub
fcomi
out
sbb
sti
inc
loopne
neg
fsubrp
mov
out
leave
out
loope
mov
int3
jecxz
lret
lock
enter
cld
shl
xor
aad
cmp
faddp
in
jecxz
loop
aaa
sub
stc
icebp
add
mov
mov
jmp
iret
aas
aas
ror
rcl
ret
pushf
mov
andl
jle
aas
add
xor
int3
or
call
aad
xchg
in
mov
orl
into
stc
lock
imul
call
cmp
jecxz
call
sti
fucom
loopne
stc
shr
shl
ss
stc
repnz
fdiv
rcr
test
loope
test
sti
cld
shr
loop
out
out
repnz
cmp
not
rcr
les
mov
cld
imul
and
ljmp
out
das
lret
aaa
xor
cld
aad
loop
aas
ret
rol
ret
cli
sti
fcmovne
out
loope
repz
sti
fcmovne
jmp
roll
fxch
sar
jmp
fiadds
xchg
call
xor
fcmovbe
out
fildl
sarl
out
addl
in
lret
lock
cmp
icebp
hlt
add
mov
sub
xchg
and
hlt
call
int
add
clc
ffreep
out
stc
jecxz
ret
test
mov
in
test
mov
hlt
orb
hlt
out
cmp
repz
cmp
in
out
in
cli
call
test
in
sti
cld
fstpt
xor
orl
jmp
lret
lock
out
out
aam
stc
aam
lock
repnz
xchg
iret
int3
iret
out
orb
cmc
shl
fdivrl
fsub
out
sbb
fucomi
int3
hlt
xchg
jmp
out
in
xlat
fidivl
incl
fcmovnbe
ret
and
shr
int3
ljmp
icebp
dec
adc
icebp
cmp
fldl
in
cld
in
les
cmp
lret
hlt
out
cmc
fcomi
icebp
xchg
in
imul
fildl
xchg
aam
subl
xor
fucomp
aam
ds
aad
mov
mov
xchg
nop
div
xlat
xor
fadd
aam
clc
sti
lret
xchg
rcl
and
in
out
int3
xchg
int
in
xor
xor
cmp
shl
adc
int
icebp
idiv
xor
in
call
aas
shlb
xor
cmp
clc
jmp
ror
fst
in
idiv
jmp
std
jmp
in
neg
clc
aam
cmp
int
hlt
int
xchg
cmp
shr
mov
xchg
lea
jmp
sar
cmp
xor
iret
cmp
std
aaa
fadds
clc
leave
out
loop
mov
repz
jecxz
jecxz
icebp
hlt
cld
cmc
cmc
repnz
enter
aam
leave
mov
incl
int3
xor
cmp
loopne
in
cmp
test
ffree
xchg
in
xchg
test
xor
cmc
frndint
aam
loop
in
sar
leave
ljmp
lret
xchg
out
xchg
ficoms
shlb
cli
aad
out
hlt
repz
fdivrp
sti
xchg
neg
xchg
in
lock
fsub
jmp
iret
ss
into
cmp
test
loop
test
in
lock
or
in
mov
ror
cmp
fcmovnu
out
repnz
cmp
call
fdivr
jmp
out
addl
cmp
roll
rcr
test
leave
xchg
lock
loope
in
shr
xor
into
call
fsub
clc
stc
clc
cld
fildl
mov
xchg
xchg
jmp
out
enter
repnz
cmp
xchg
mov
mov
out
mov
xchg
shll
cli
xor
cli
lret
xlat
std
fcmovnu
ret
aad
jmp
fucomi
sti
orl
call
fmul
xor
rolb
jecxz
in
ljmp
lock
xor
xor
iret
enter
sar
iret
shl
loope
out
std
in
mov
xchg
mov
ror
out
loop
out
fld
clc
cmp
fidivs
shr
add
add
rol
aad
pop
pop
movsb
or
sub
aas
add
cmp
icebp
ret
xchg
xor
in
ljmp
out
in
xor
out
fcomi
rcl
aad
aad
ret
cmc
adc
jmp
loopne
orl
jmp
fcmovnbe
fdivr
xor
rol
shl
rorl
jmp
mov
lret
fidivl
fadd
std
cli
out
ror
std
flds
in
clc
loop
orb
int3
sub
in
enter
jmp
and
loop
fcmovu
mov
fsubrp
xchg
cmp
lret
fdiv
out
hlt
test
loop
and
aas
aaa
div
call
rcr
into
jecxz
out
test
mov
jmp
cli
sub
not
imul
fsubr
int3
ljmp
lds
call
mov
repnz
fstpt
out
stc
aam
int
loop
xchg
in
in
cld
sti
mov
repz
xor
ror
cli
lds
loopne
faddl
loop
addl
in
in
in
sti
stc
jmp
lock
test
ljmp
jmp
jmp
jmp
ror
ss
in
cmc
jmp
out
and
xchg
mov
into
ror
neg
cmp
fsubr
cmp
repnz
jmp
repz
fdivp
xchg
adc
xor
leave
repnz
aad
fcmovnb
int
cmp
test
aad
out
xchg
shr
loop
aam
iret
ret
icebp
cmp
leave
int
cmc
or
in
jmp
enter
nop
sbb
clc
shl
lock
iret
fcmovu
stc
out
aas
cli
cli
lock
out
cld
sti
mov
xor
orl
std
fyl2x
in
aam
cmc
fyl2xp1
aad
testl
call
xor
cmp
repz
ror
test
fucomp
sar
out
mul
decl
sub
loop
in
lock
lret
into
sbb
repz
in
out
std
mov
xchg
jecxz
test
aam
repz
lret
aam
fadd
cmp
xlat
testl
xor
jecxz
jmp
out
call
fsubrp
cmp
xabort
fcmovnu
mov
cli
nop
mov
hlt
loope
out
xor
aad
stc
aad
sar
into
fstpt
fcmovne
fdivr
orl
in
xor
cs
enter
aas
test
int
repnz
xchg
in
cmp
test
rcr
nop
out
addl
xlat
cli
fdivr
adc
rolb
xlat
lret
mov
fucom
xchg
xor
repz
clc
fyl2x
cld
icebp
cmp
loopne
mul
aam
les
in
hlt
into
sub
shll
fucomip
fcmovnbe
xor
jecxz
addb
in
xor
xchg
loope
xlat
sti
lret
idiv
fisttpl
mov
in
xchg
lock
xchg
in
cmp
imul
cmp
cli
loopne
rcr
in
rcr
or
mov
mov
out
das
rcr
int
in
out
repnz
rcl
addl
loopne
xchg
dec
out
repz
cmp
leave
imul
loopne
ror
cld
cmp
lds
icebp
shl
mov
mov
in
jmp
iret
call
cli
cmp
enter
out
call
xchg
jmp
div
out
sti
shr
fcmovnb
shl
fcom
ret
enter
fildl
or
call
cmp
ss
lret
repz
aaa
in
std
cmc
fucomi
decb
xchg
int
ljmp
cmp
clc
cmpb
aad
testb
mov
std
loopne
nop
lret
xor
fidivrl
enter
mov
mov
mov
jmp
ret
into
sarl
rol
rcl
ja
cs
pop
dec
cmpsl
jg
jle
add
repz
shl
into
testb
lret
iret
in
loopne
test
xor
lock
cmp
fdiv
cld
test
cli
out
stc
in
idiv
fsub
fdivp
dec
xlat
cmc
std
cmp
xor
sarl
cli
fsubrp
les
mov
into
jmp
enter
out
fidivrs
cmp
loope
fidivs
notrack
and
fcmovu
test
nop
jmp
xchg
xchg
sub
rcl
out
jmp
cmp
repnz
test
std
xlat
test
fadd
jecxz
jecxz
ljmp
fnstsw
fcmovnu
adc
roll
mov
fisttpll
shl
out
cmp
fxch
in
cmp
aad
ret
idiv
sar
shr
jmp
mov
loopne
xor
cmp
div
rcl
cmp
ds
sarl
in
loop
addl
int3
xchg
and
int3
in
out
fcomi
rcl
lret
cld
out
sbb
in
jmp
decb
leave
loopne
xor
fcomi
fcomp
jmp
lock
neg
ljmp
iret
out
out
in
xor
cmp
int
xor
aam
test
in
fmul
fsubr
fsub
call
cs
fcomi
cld
cmp
int
repnz
enter
sti
filds
icebp
ret
idiv
fcmovne
repnz
fcomp
cmp
test
xchg
fcomi
rcll
out
rcr
not
cld
aas
shl
loopne
fst
mov
lret
out
lret
in
shl
clc
aaa
out
in
repnz
idivl
cmp
sarb
sbb
add
cli
mov
shl
ljmp
xor
out
cmc
out
loopne
icebp
out
loop
xchg
mul
imul
out
fistl
loope
int3
xor
lret
hlt
lock
xor
fxch
in
stc
in
stc
ror
loopne
mov
ljmp
leave
fdivp
aad
int3
out
loop
fcomi
incb
enter
fidivs
sar
cmp
roll
rolb
leave
fadd
out
xchg
bnd
ret
in
out
xor
repz
sar
ret
xlat
repnz
stc
xchg
mov
sbb
cmp
xor
out
fdiv
shll
aas
repnz
test
cld
hlt
mov
test
in
std
repz
mov
aad
aam
aad
ljmp
filds
fiadds
out
jmp
xor
shrl
div
int3
xlat
lock
aas
ror
cli
std
leave
xlat
out
lret
mov
nop
xchg
out
loope
xlat
sar
into
cmp
sub
cld
cli
faddl
hlt
clc
xlat
xor
out
cmp
fcmovu
rcr
out
iret
xchg
stc
loope
into
call
rorl
les
rcl
cld
shl
cmc
neg
cmc
leave
loope
in
mov
int
mov
xor
enter
std
aad
aaa
fnop
iret
stc
stc
xlat
loop
cmp
ret
in
faddl
mov
xor
lret
cmp
xor
xlat
fdivp
cmc
fcom
aas
hlt
out
decl
mov
ror
in
jecxz
shl
enter
loop
aam
and
ljmp
mov
icebp
lret
hlt
repz
loopne
stc
lock
loope
xchg
adcb
aam
cmp
int
iret
in
hlt
iret
sar
aam
vcvttpd2dq
lds
cld
stc
into
out
lock
loopne
xor
cmp
lret
in
int3
aas
repnz
xlat
faddp
fadd
roll
rcl
lea
in
xor
cli
out
repz
test
int
or
int3
nop
in
repz
leave
cld
cs
out
out
icebp
icebp
hlt
rol
idiv
or
fimull
xchg
lret
cmp
cmp
out
mov
cmp
je
mov
mov
jmp
leave
aad
movsb
inc
jb
adc
out
push
add
cmp
aad
repz
in
ret
jmp
int3
mov
rcl
loop
jecxz
xor
shr
cmp
cmp
into
fnstcw
mov
neg
sti
out
test
mov
mov
iret
enter
cld
aad
sti
in
aaa
xchg
out
or
mov
xchg
lea
les
sub
ss
stc
out
std
jmp
fdivrp
rcr
repz
sub
int3
cld
repnz
xchg
leave
stc
aam
ret
int3
aaa
cmp
in
add
sbb
aad
lret
stc
xchg
shl
out
mov
call
lds
into
shr
shl
jecxz
cmp
cmp
iret
enter
lea
out
out
sar
sub
fneni(8087
test
mov
shl
xchg
shlb
ret
cld
aaa
clc
out
cld
call
jecxz
mov
sti
in
addb
ret
cmp
in
lret
iret
xlat
sarl
loopne
cli
sar
std
fdivr
out
out
xchg
in
out
out
int3
hlt
leave
in
int
in
neg
test
fprem
mul
cli
in
out
xchg
mov
xchg
add
out
ljmp
jecxz
test
aad
not
ffreep
idiv
lea
ret
sub
clc
adc
fucomip
loopne
out
int3
mov
xchg
lret
div
xor
fsubr
repz
cmp
cmp
loopne
cmc
lret
orl
sar
leave
in
into
in
addl
faddp
clc
clc
out
fucom
loopne
shl
xor
ss
clc
aas
aam
fdivrp
loop
out
iret
roll
fxch
jecxz
cmp
stc
loope
cmp
enter
std
in
fcomi
std
mov
out
xor
xlat
dec
clc
lret
fiaddl
repz
decb
fmulp
addb
fld
repnz
hlt
ror
rcl
test
jmp
loopne
loope
loope
repz
in
leave
into
adc
int
sbb
in
into
fxch
test
lret
int3
stc
fcomi
rcl
cmpb
out
fucom
clc
jecxz
enter
fcomi
call
lret
out
out
lret
lret
rolb
cli
fcmovb
clc
fsubrp
out
fcmovne
out
aad
loop
sti
out
fdivrl
stc
ss
fsubp
jmp
sti
into
repnz
mov
fsubr
lret
mov
xchg
leave
jmp
aas
jmp
rcl
fisttpl
fdivp
cld
jmp
out
rcl
std
out
leave
in
ljmp
xor
fcmovnu
loopne,pt
fsub
sarl
lock
loop
loop
cmc
out
das
jmp
xlat
lret
aam
in
test
sti
aad
test
in
out
lret
int3
mov
aaa
rcl
cmc
ds
in
out
iret
in
fcmovnu
incb
loopne
mov
out
xor
xor
fcmovne
fcomp
fxch
icebp
sbb
repz
fidivrs
sti
fldl2t
sbb
xlat
std
add
ljmp
cmp
cmp
cmp
aam
xlat
repz
fmul
xchg
loop
fcmovnu
enter
jmp
cmp
loopne
sarb
icebp
xchg
lret
cmp
into
mov
call
ret
ljmp
shl
xchg
lds
fiaddl
out
mov
xor
aaa
shr
call
cmp
lock
loope
add
loop
out
cld
mov
call
sub
ds
neg
fstpt
aad
fadd
stc
fst
fadd
fiadds
loop
xor
cmp
call
fdivp
repz
fcmovnbe
xchg
mov
call
xchg
int
in
xor
xor
cmp
out
int3
inc
shl
mov
jmp
jmp
shr
ret
jmp
idivb
in
hlt
hlt
mov
cmp
jne
mov
jmp
ret
into
aam
aad
fst
stc
hlt
stos
xchg
iret
out
fldcw
or
aas
add
in
into
cli
call
in
test
cli
lret
sti
jmp
lock
cld
lret
fcmovne
loope
jecxz
aam
idiv
mov
cld
leave
sti
popl
not
shl
out
iret
rcr
loop
loopne
cmc
adc
jmp
out
out
in
in
ljmp
ret
in
xchg
out
iret
test
lea
aaa
cli
in
cmp
cmp
cmpl
cmp
jmp
loop
out
nop
in
jmp
xor
out
repnz
cli
jmp
test
in
out
test
sub
xchg
xchg
aad
in
fcom
cmp
roll
xchg
cmp
in
in
jmp
das
fldpi
iret
ljmp
hlt
in
std
roll
or
lret
into
fstl
out
fprem
clc
ss
loope
clc
loop
iret
in
cld
cmp
test
out
fmull
aaa
xor
in
xlat
lret
jmp
test
call
lds
out
enter
stc
into
ss
aam
aas
and
lock
iret
aad
test
adc
jmp
leave
ss
rcr
fcmovnbe
leave
clc
adc
in
cli
clc
fdivp
leave
call
fstl
loopne
aad
xlat
jmp
in
cmp
xlat
lret
aas
ds
out
fucomp
nop
lret
out
ljmp
xor
shr
clc
cmpl
loop
in
cli
fisttpll
mov
mov
ljmp
lret
aaa
shl
ret
xchg
and
mov
out
faddp
out
fcoml
leave
fidivrl
test
sbb
ret
inc
mov
test
xchg
xchg
xor
aaa
call
rcl
clc
loope
repz
test
cs
leave
out
shll
loopne
fdivr
int3
xchg
filds
out
out
in
lret
nop
xchg
aad
in
mov
enter
fsub
sti
test
xchg
cmp
xlat
in
or
mov
in
fcomp
cmc
enter
lret
cmp
fistpll
cld
sarl
mov
leave
out
ret
mov
lret
enter
icebp
jmp
add
not
roll
sti
sub
lret
fimuls
cmp
fcmove
fnsave
leave
lret
filds
sti
loope
loop
cld
icebp
in
xchg
xchg
in
int
jecxz
imul
rcl
fdivp
sbb
int
ret
call
cli
out
mov
out
in
int3
cs
fmul
cli
fdivrp
fdivrp
shl
repnz
test
jmp
cld
xlat
mov
int
mov
out
loope
out
mov
sar
cmp
cmc
neg
ret
loopne
xchg
faddl
aad
icebp
icebp
repnz
xor
xor
aaa
aaa
fsubrp
push
cmp
cmp
int
xchg
mov
out
xchg
ljmp
repnz
div
cmc
aad
sar
jecxz
aas
mov
loop
in
iret
lret
leave
int
in
mov
loope
fdivs
iret
repz
fprem1
fninit
ds
aam
fmulp
fmul
fucomp
std
mov
int
fildll
rcl
call
inc
test
ds
lret
orl
addl
sti
aam
loope
loop
cli
out
rcr
mov
fdivrp
fldl
repz
aad
icebp
xor
aas
std
ljmp
jecxz
vpaddd
in
orl
ret
jecxz
cli
fadd
shl
testl
dec
int3
mov
out
aad
rcl
jmp
sti
sarl
fdivrl
fidivrl
rcl
out
rol
jmp
cld
mov
mov
out
clc
leave
repnz
icebp
idiv
out
iret
int3
ds
rcr
loop,pt
jmp
in
decb
xor
test
call
cmp
mov
add
aam
aad
fstp
movsb
ficomps
xchg
or
jle
add
cmp
xchg
div
ret
rorl
ror
loope
ret
aaa
icebp
lock
jmp
rolb
std
loopne
lock
icebp
fists
aaa
fcmovnu
lret
in
lock
icebp
aad
out
loope
leave
sti
int
test
ljmp
test
aaa
cmp
cmp
cli
fcmovu
hlt
ret
aam
xlat
mov
orl
xlat
out
xor
in
fstpt
int
jmp
cmp
out
not
test
loope
lea
out
leave
iret
cld
enter
fcmovne
lock
rcr
out
jecxz
sti
jecxz
rclb
int3
cmp
in
sarl
into
cmp
add
clc
out
jmp
test
mov
shl
aad
out
cmp
out
in
cmp
iret
ret
stc
test
ret
mov
cmc
loop
sti
enter
lock
loope
shll
xor
stc
iret
aam
shl
cmp
stc
iret
out
mov
loope
xchg
cmc
int3
cmp
icebp
cld
fistpll
icebp
fcompp
add
rcr
aad
mov
rcl
sub
out
in
call
int
loopne
loopne
aad
decb
stc
xchg
repz
icebp
cmp
aaa
rcr
ds
shl
vpaddusw
test
lret
sub
mov
aam
leave
hlt
into
fcmove
cmp
aad
in
xlat
inc
lret
loope
in
ljmp
fnstenv
aaa
ljmp
jecxz
cld
frndint
fadd
cmc
leave
out
cli
mov
xchg
xor
repnz
int
cmp
xlat
cmc
aam
testl
xchg
sub
in
divb
test
shl
rcr
clc
clc
out
enter
mov
test
iret
mov
not
shlb
out
rcl
lock
rolb
out
cmp
lret
xchg
enter
xchg
xchg
xchg
repz
hlt
call
cmp
loope
lock
adc
mov
out
jmp
int3
xchg
nop
int3
stc
xor
cmp
icebp
call
xor
cld
clc
sub
mov
int3
icebp
sar
int3
not
xor
ss
icebp
aas
lret
in
fst
sti
cld
lret
in
xchg
lea
out
leave
out
xlat
push
hlt
sti
aas
fadds
sarl
mov
loopne
xchg
int
xor
enter
rcl
aas
test
xchg
in
xor
in
out
stc
cmc
xor
loope
cmp
shl
fnstcw
loope
int
orl
in
call
in
addb
rorb
xchg
rcr
out
div
loop
enter
cmp
sti
loope
cmc
loope
enter
jecxz
ljmp
test
xor
out
into
xlat
cmp
cli
std
cmp
rol
fsub
mov
or
rorl
out
cld
lock
ljmp
cld
div
fsub
mov
enter
in
loopne
hlt
in
out
test
in
neg
xlat
rol
shl
roll
in
sti
jecxz
enter
in
jecxz
out
aam
int
enter
hlt
aam
std
fcom
fcomp
xchg
mov
leave
iret
iret
addl
shl
icebp
shr
aam
cli
lock
in
in
shl
or
add
hlt
loopne
repz
cmp
std
aas
icebp
cmp
repz
cmp
decb
not
cmp
cmp
aad
in
icebp
shl
ljmp
test
xlat
ljmp
xchg
sar
ret
repz
fchs
aam
ret
in
in
xchg
sub
int
into
adcl
loopne
aaa
repnz
leave
xchg
popl
aam
in
iret
repz
icebp
cmp
repz
ds
shr
add
add
lret
enter
int
cltd
movsb
imul
jg
popa
push
aas
add
jecxz
xchg
testb
fcmovnu
or
loop
sub
sarl
int3
in
leave
idivb
in
neg
std
ret
ljmp
out
in
int3
sub
cld
into
aaa
call
clc
out
ror
cmc
fimuls
hlt
icebp
std
shl
hlt
ret
out
xor
lret
shl
loop
rcr
ret
ret
xchg
in
mov
push
aam
rcl
sub
aad
out
fdiv
test
iret
xchg
xchg
int
ret
ror
lret
rcl
in
cld
fadds
fcmovb
aam
jmp
call
lret
fcmovnbe
out
ljmp
out
cmp
repz
int3
iret
into
shl
loop
cmp
mov
jmp
not
fsubr
in
in
jmp
out
fdivr
cmp
loop
cmp
out
cmc
cli
jmp
xchg
ljmp
in
cld
sti
sar
sar
clc
rcl
mov
loope
lock
into
jmp
loopne
xor
jmp
in
aas
idiv
ror
shl
aad
testb
int
rcr
xor
xor
cmp
sti
out
cmp
fcmovb
xlat
loopne
loope
shr
movb
std
imul
repz
repz
flds
out
rcr
hlt
in
mov
test
xchg
lea
hlt
out
fdivl
rcr
shr
repz
fcomip
loope
xlat
or
orl
xor
cmp
loop
cmp
xchg
stc
enter
mov
out
iret
in
into
enter
lret
inc
ljmp
stc
test
shl
loope
lds
enter
out
fdivp
loope
test
ret
mov
jmp
ret
aad
test
cmp
cmp
std
loope
repnz
int3
nop
rcll
rol
out
hlt
in
cmc
repnz
rcr
jmp
cmp
hlt
stc
and
xchg
out
imull
cmc
fxch
ljmp
lock
repz
test
cmc
fdivr
fucom
out
cmc
repz
loope
int
sti
cmp
fbstp
xchg
fnop
inc
cmp
lret
adc
xchg
clc
aam
xor
idivb
aaa
enter
aas
fdivrs
loope
ret
loope
mov
addb
lea
iret
ret
clc
enter
fcmove
cmp
enter
loop
out
frstpm(287
into
call
into
rcl
xor
mov
testl
jmp
mov
xor
rol
int3
in
out
clc
or
ror
ret
orb
jmp
xchg
xor
repz
xor
into
xor
fcmovb
adc
out
xchg
jmp
in
lret
orl
icebp
shr
icebp
ds
hlt
std
fistpll
neg
hlt
leave
stc
out
fmul
in
lock
ljmp
int
repnz
repnz
icebp
stc
push
xchg
test
fcoml
jmp
jecxz
xor
stc
fdiv
ds
cmp
loop
ljmp
nop
xchg
std
shl
shlb
ror
fscale
xor
aam
lret
cmp
in
int3
shl
std
xchg
cli
lret
rcl
fcmovu
xor
in
ret
iret
aas
enter
and
int
shl
rcr
ret
xor
jmp
out
neg
shl
xchg
jecxz
shr
cli
cmp
mov
nop
adcb
loop
hlt
sti
jmp
xlat
lret
hlt
cmp
div
flds
sti
loopne
sti
fists
out
stc
fistpll
jmp
in
ret
int
fprem1
repz
test
int
call
rcl
shll
ret
jmp
cli
xor
mov
cld
test
neg
xchg
mov
shl
xor
repnz
jecxz
cmp
jmp
iret
ror
fcmovnu
out
mov
insb
adc
jle
add
xor
out
sarb
or
loopne
jecxz
xor
into
std
aam
icebp
idivl
testb
roll
in
xchg
xchg
xchg
into
in
shlb
mov
cmc
cmc
fmul
cmp
hlt
fnop
mov
test
orl
test
hlt
rcr
sti
jecxz
lock
jmp
in
int
leave
repz
adc
ret
loope
in
repnz
hlt
call
sti
ret
xlat
aad
repnz
cmc
xchg
into
clc
in
int
mov
aad
out
out
int3
clc
int3
hlt
loope
ds
xor
in
mov
addb
xlat
call
icebp
icebp
loopne
loope
aam
incl
mov
ljmp
into
sar
filds
testl
sti
jmp
hlt
jmp
clc
shll
or
sti
shl
ret
shl
orb
test
iret
loopne
jecxz
cmp
leave
ds
cmp
iret
cld
cmp
jecxz
out
int3
and
lock
not
rol
aaa
lret
movl
xor
hlt
out
stc
fdivrp
ret
jmp
rcl
shl
xor
clc
rcl
out
shl
aas
hlt
fistpll
mov
std
loopne
decb
repnz
shl
xlat
aad
jmp
sti
fcmovnu
loope
sti
cmp
out
fsub
xor
repz
cli
fdiv
idiv
faddp
bnd
loope
fdivrp
mov
call
xchg
loop
leave
xor
jmp
ljmp
flds
out
jmp
rorb
loopne
cmp
ror
cli
lock
cmp
std
xlat
fcmovne
jmp
out
xchg
mov
incb
aad
loopne
out
lock
repnz
jecxz
rol
stc
lret
fimull
mov
das
call
icebp
cmp
out
fucomip
iret
into
hlt
sti
shl
mov
cld
jmp
xchg
or
call
in
cli
xor
repnz
fsub
aad
xor
test
loopne
int3
repnz
rol
xlat
into
ljmp
into
fdiv
xlat
ljmp
loope
lock
jmp
hlt
fldt
lock
xlat
out
ror
in
enter
and
ret
shl
iret
fstp
aam
int3
loopne
out
fcompp
in
movb
fimuls
loopne
ss
out
aam
lret
cmc
cli
ror
fcomip
roll
std
in
mov
loope
mov
std
fistpll
testb
sar
jecxz
fadd
mov
dec
mov
xor
aad
sarl
cmp
xor
shr
jmp
out
cli
std
rcl
cmc
fimuls
mov
int3
jmp
loope
sarb
xchg
xchg
fdiv
out
jmp
iret
xchg
loope
ss
out
ror
aas
lret
out
rcr
repnz
cli
aad
mov
out
fstp
addl
cmp
out
lret
aad
std
fprem
mov
cld
in
out
repz
nop
aam
xor
out
jmp
xor
in
aad
in
in
out
jmp
aam
mov
cmc
leave
repz
cmp
cmp
in
into
shl
loop
xlat
aam
fisttps
loope
iret
lret
aaa
cmp
sar
std
fnstsw
repz
cmpb
mov
or
test
test
jmp
out
repz
out
out
idivl
cmp
into
int3
sti
fstpt
inc
jmp
cli
adcl
icebp
xor
iret
out
repz
roll
lds
sti
test
in
test
out
out
loope
hlt
lock
xlat
xlat
out
fdivr
clc
aam
idiv
sub
rcr
sbb
mov
xchg
ror
cmc
sub
sarb
ljmp
test
push
add
movl
jmp
int3
into
fmul
fsubrl
in
jecxz
clc
and
loope
sbb
aas
add
fstpt
mov
fadd
mov
cli
jecxz
mov
test
ljmp
cmp
rcr
aam
in
aas
adc
enter
in
nop
lret
lret
in
into
xchg
xchg
xor
fnstcw
hlt
cmp
shl
adc
ret
loopne
fdecstp
jmp
int3
xchg
mov
mov
call
out
clc
in
aas
cmp
cmp
leave
out
xchg
decb
fidivl
repnz
in
roll
shl
enter
jmp
call
clc
hlt
lock
fcmovu
test
test
fdivrp
loope
xchg
add
roll
in
jecxz
cmp
clc
out
lret
sar
aam
ds
movl
fildl
fnstenv
xor
shr
lret
out
cmp
movl
into
mov
ljmp
imul
bnd
les
test
aam
jmp
hlt
iret
xlat
imul
xor
in
ss
ljmp
clc
fsubrp
lret
enter
or
xor
lock
ds
aad
cmp
and
ret
into
int3
icebp
jmp
enter
in
ljmp
cmp
in
call
in
stc
fsub
jecxz
repz
out
lret
sti
out
cmp
fcmovb
iret
rcr
fucom
out
xlat
out
stc
fiaddl
in
das
stc
xlat
stc
repz
sarl
cmp
repnz
cli
incb
in
in
shll
enter
cmp
cmp
iret
in
rcr
fmuls
mov
stc
lret
ret
int3
lret
cmp
xor
addb
fadd
test
cld
xchg
int
loope
xor
fdivr
std
cmp
jecxz
icebp
rcr
int3
mov
xchg
mov
xor
dec
out
fidivrs
loope
incb
cmc
xchg
ljmp
int3
into
fstpt
shl
cli
rcr
ljmp
incb
call
ljmp
test
aam
mov
cld
loopne
xchg
xchg
hlt
cmp
sarl
int3
cmp
aam
fstp
flds
jecxz
jmp
shl
lret
call
stc
sub
in
loopne
ret
rcr
sti
aas
mov
fdivr
fsubrp
test
fnstenv
repz
cmp
shr
xchg
fadd
mov
cli
out
jecxz
in
orb
cmp
hlt
cmp
into
into
cmp
addl
rolb
aam
das
ljmp
rcr
not
jecxz
stc
vpminsw
fsin
fldl
cmp
sti
cmc
repnz
out
aam
cmp
clc
xlat
fiadds
loop
lock
mov
fcmovne
aad
cmp
loop
aam
shl
cmc
jecxz
out
enter
mov
xor
ret
jecxz
idivl
cmp
ss
in
sti
shr
stc
leave
fsubr
ljmp
cmp
test
ljmp
repz
clc
ljmp
ror
hlt
int
shl
cmp
lret
in
lock
fsub
aas
aad
jecxz
fld
sbb
leave
aam
ffreep
xor
fninit
out
icebp
cmp
xlat
icebp
shr
iret
in
mov
stc
and
jecxz
ficoms
lret
in
icebp
std
enter
loopne
cli
ffreep
xchg
in
stc
lea
stc
clc
into
in
aam
cmc
fld
cld
loop
sar
sti
aad
enter
in
xchg
jmp
in
enter
sub
fsub
repz
in
lret
mov
mov
sti
in
not
fdivrp
divb
aas
jmp
repnz
add
ret
ror
aam
mov
in
out
sbb
jle
out
cmp
fsubp
out
clc
sub
out
repz
shr
fmulp
repnz
mov
flds
stc
int
leave
xchg
loope
ror
divb
fxch
enter
loope
shl
loope
adc
loopne
ljmp
xchg
out
lock
out
aad
cmp
loope
xchg
cld
in
mov
rcr
out
shl
repnz
iret
hlt
fdivr
fmul
into
and
cmp
fsubr
fdivr
mov
fmulp
int3
in
popl
repnz
in
div
stc
cmp
in
ds
std
hlt
cmc
cmc
leave
jmp
fiaddl
xchg
or
jecxz
shl
out
enter
fldl
rolb
in
into
mov
ss
out
fnstenv
cmc
and
shr
aad
test
clc
or
orl
loope
ss
cld
cld
repz
rol
repz
xchg
cld
aad
mov
icebp
shr
jmp
out
aad
fucom
cmp
cmc
adc
in
in
mov
nop
rorb
shl
cmp
ljmp
cmp
rcr
aad
fcomp
jmp
mov
lock
ror
mul
rol
fcmovu
into
std
ror
cmp
aam
shl
fcmovbe
out
clc
lock
test
fiadds
cmp
in
cmp
ret
ljmp
int
std
mov
xlat
int3
cmp
cmp
xor
cmp
hlt
loopne
test
fucomip
jmp
repnz
shl
hlt
in
leave
clc
cmp
iret
not
cli
cmp
out
incl
lret
aas
out
cmp
call
xor
icebp
rcl
in
cld
rcr
mov
jmp
jecxz
rol
aaa
xor
cmp
rcr
aam
sti
xchg
mul
in
les
call
vmovq
int
cmp
rcr
rcl
lock
xchg
shl
rcl
fsubr
xlat
sti
call
test
loope
shl
ret
out
lret
loope
jmp
loop
stc
repz
std
cmc
test
jecxz
in
enter
loope
int
mov
rcl
jecxz
enter
leave
fnstsw
int
fdivrl
adc
cmc
in
icebp
test
fdiv
xchg
shl
out
shlb
out
fcomp
fdecstp
stc
loop
icebp
jmp
loope
xabort
mov
xchg
xchg
xchg
rol
cmp
in
div
sarl
in
lock
mov
mov
cmp
mov
jmp
into
out
shrb
xor
cmp
lret
xor
repz
shl
fiaddl
mov
addl
into
fidivrs
lock
rolb
xchg
in
in
or
in
iret
cmp
call
in
testl
fiadds
shl
repz
ror
cld
aam
cmp
ljmp
ds
fcmovnb
cmp
in
ret
shl
hlt
mov
clc
out
into
call
fcmovnu
ds
iret
push
cmc
jecxz
cmp
popl
int3
in
neg
jmp
cmc
idiv
out
in
xlat
mov
call
loope
lret
into
ljmp
int
neg
cmc
ret
ret
call
or
enter
call
cld
cld
xlat
aad
cli
cmp
shl
shl
hlt
enter
sub
popl
cs
xor
ds
ds
cmp
fstp
jmp
out
lret
ffreep
in
lock
out
into
cmpb
sbb
call
test
sub
sarl
xlat
stc
clc
std
loopne
test
in
out
enter
loope
in
xchg
shl
ss
add
rcl
ret
inc
in
mov
jmp
xlat
lret
aad
aad
int
jle
and
scas
and
aas
add
sbb
clc
xchg
icebp
roll
test
int
clc
ljmp
test
loope
mov
iret
out
mov
in
repnz
xor
div
das
call
ret
cli
add
test
enter
sub
mov
ss
jmp
clc
sti
in
fdivl
lock
fucomip
xchg
fyl2xp1
cld
out
ljmp
lret
loopne
neg
stc
cmc
xor
sarl
cli
repz
in
xlat
icebp
fidivrl
cmc
sti
and
and
hlt
xchg
inc
loopne
ror
cld
test
lret
aaa
loop
shl
repz
aas
leave
aad
lea
loopne
mov
not
stc
fsubrp
cmp
test
jecxz
aas
jecxz
fcmovu
mov
ss
cmp
hlt
lret
ds
in
sti
out
rolb
cmp
iret
into
nop
out
mov
jmp
loop
out
icebp
ds
test
fadds
out
xchg
mov
call
cmp
rcl
clc
int3
cmp
fdivrs
aad
icebp
in
jecxz
ljmp
rclb
xor
rcl
fcomip
sarl
loop
shlb
inc
cmp
stc
ret
xchg
xchg
out
fimuls
das
jmp
repz
idiv
std
bnd
clc
in
xchg
xchg
xchg
out
jmp
int
cld
xor
repnz
sbb
fildl
lret
into
enter
xchg
in
cs
fcmovbe
fcomi
icebp
fistpll
lock
call
mov
iret
sti
iret
out
aad
jmp
lock
cmp
roll
ret
xchg
test
leave
fisttps
int3
into
ret
fdivr
fcom
in
cli
incb
filds
fsubp
ret
out
jmp
enter
idiv
cmp
sti
in
jmp
lock
fiaddl
repnz
fcomip
into
into
iret
sti
ror
cmp
loopne
jmp
aas
ret
rol
xlat
roll
std
leave
sub
mov
into
out
int
fcmovnb
int
fmul
cli
loopne
ror
jmp
fcoml
out
loopne
out
in
sub
cli
out
iret
test
cmp
call
leave
xchg
int3
jmp
cld
call
fldln2
sti
in
fsubp
mov
in
fcomp
leave
and
repz
rcr
ljmp
aam
enter
mov
enter
std
repnz
cmp
fidivl
repz
xor
hlt
out
xchg
ret
jmp
in
out
xlat
xor
jecxz
ss
out
lock
test
test
std
mov
loopne
fmul
shr
rol
int
int
call
idiv
sbb
ret
sti
loop
mov
cmp
in
in
repnz
cmc
idiv
fcom
repnz
ds
jecxz
cmc
sar
fsubr
ljmp
iret
sbb
sub
iret
repnz
into
cmp
in
cmp
fstp
rcr
sbb
dec
xchg
in
rcl
fcmovbe
repz
int3
aad
test
mov
stc
mov
aad
into
fsubrp
icebp
test
mov
vcmpss
jmp
in
ffreep
cmp
in
ljmp
hlt
ror
shr
jmp
in
in
out
into
cmp
addl
mov
out
adcb
int
lock
cmp
loop
shl
testl
xchg
hlt
fldl
xor
test
sar
cld
incb
mov
mov
icebp
xchg
in
xchg
call
out
shlb
stc
loope
aas
jmp
leave
int3
mov
test
out
enter
lret
xor
add
enter
xchg
xchg
in
lea
lock
cmp
leave
cmp
cmp
aam
add
inc
lock
xor
lea
mov
jmp
lret
rcr
aad
fsubr
xor
and
jg
aas
add
mov
cmp
xchg
test
out
in
in
ljmp
out
adc
clc
clc
add
in
mov
xchg
mov
icebp
shl
ss
repnz
in
cld
hlt
loope
int
rolb
inc
fucom
sub
lock
out
int
sar
into
loope
test
fmuls
out
in
shl
out
mov
in
clc
sub
into
cmp
std
fadd
xor
call
ljmp
lret
out
aam
sar
shr
aad
int3
aad
rcr
rcr
imul
xchg
cli
jecxz
mov
jmp
repz
sub
lret
out
xor
aam
hlt
loope
cmc
fildl
sar
fmulp
leave
out
xchg
xchg
icebp
adc
jecxz
int3
int3
cmp
enter
loop,pt
call
jecxz
cld
mov
mov
std
out
lock
cmp
icebp
cmp
idivl
test
std
fdivp
loop
add
call
aad
leave
sti
aaa
aad
imul
in
cld
call
repz
cli
loop
fucom
in
lret
xchg
in
jmp
fxch
cmp
fstp
cmp
roll
mov
test
subl
in
aaa
aam
out
loope
cld
aam
xchg
cmp
in
jmp
addl
idiv
neg
int3
leave
aaa
fcom
in
fucom
shl
mov
lret
loope
jecxz
out
lret
icebp
xor
iret
repz
leave
repz
int
cmp
xlat
out
in
mov
nop
enter
lock
ret
repz
aad
xor
loopne
fnstcw
loopne
out
leave
xchg
test
xchg
imul
out
ljmp
loop
cld
std
div
ljmp
shl
into
aam
xor
in
cli
std
enter
std
aad
rol
hlt
fdivrp
add
out
fisttps
sbb
stc
cmp
call
loope
rcr
loop
loopne
test
loopne
in
filds
into
cmc
repnz
in
neg
aaa
or
cmp
test
in
mov
iret
rorl
lret
leave
xor
xor
xor
fstp
aas
repz
hlt
out
xor
rol
repnz
xor
aad
ss
enter
repz
cld
hlt
xor
fimuls
lret
test
in
int
loop
jecxz
jmp
loope
in
int
test
aam
or
mov
jmp
into
shl
lock
jmp
lock
loop
jmp
lea
sar
stc
aad
in
lret
hlt
cmp
ret
shl
std
hlt
jmp
xchg
and
xchg
orl
aam
out
int3
stc
cmp
cli
aad
fadd
loop
enter
repnz
out
lret
iret
aaa
cmc
cmp
call
rolb
add
cmp
cli
ret
into
jmp
ror
ss
loopne
jmp
cmp
add
std
jmp
loop
out
into
mov
cs
cmp
out
fstp
jmp
sar
test
cmp
xlat
int3
mov
int
fnstsw
int3
cmc
hlt
sub
enter
fsubr
iret
cld
fdiv
cmc
fdivrl
jmp
sbb
filds
shr
aaa
repz
ljmp
loopne
rolb
fsts
repz
idiv
shl
fldln2
int
aaa
aaa
fcom
in
out
sti
clc
sti
cmp
movb
repz
sub
lret
aad
sarl
clc
stc
xlat
ds
hlt
stc
mov
fadd
add
loope
xchg
mov
into
lret
in
in
lret
shl
fdiv
ret
cmpl
mov
in
shl
icebp
out
lret
cmp
aas
std
into
cmp
aam
xchg
xlat
cli
jmp
jmp
call
push
aam
aas
fldl
inc
or
jmp
jmp
ret
iret
enter
int
xchg
cmpsb
push
ja
insl
int
xor
jg
aas
add
mov
into
lea
shll
cmp
lret
fdivp
cmp
sti
cmp
out
test
jmp
rol
test
shll
cld
icebp
shl
fdivr
cmp
xchg
lock
std
ffreep
mov
test
int3
xchg
aad
jecxz
jmp
cmc
idiv
stc
flds
rcl
stc
test
neg
leave
test
mov
sub
std
jmp
fucomip
push
xlat
stc
stc
cmpb
xlat
orb
int3
in
fdivs
xor
out
lret
cld
fsubr
fsubr
idiv
xlat
rol
leave
test
call
loop
loop
xchg
in
ss
shr
lret
shl
cld
int3
iret
out
ffreep
ret
div
fnstsw
fcmovne
filds
test
in
ret
icebp
lret
cli
loopne
dec
ds
leave
jmp
out
fstp
out
shl
out
in
icebp
iret
aam
cmp
icebp
loope
shl
icebp
and
cld
ljmp
enter
loopne
loopne
rol
cmp
sarl
cmp
icebp
repnz
and
stc
loop
mov
addl
call
cmc
sarb
inc
test
testl
sti
cmp
cmp
fcmovu
sar
in
lds
xchg
rol
xlat
fcmove
mov
mov
lock
cli
into
xor
std
cmc
filds
sti
mov
xchg
cli
and
inc
lret
in
cli
stc
std
iret
repnz
std
cmp
into
test
loop,pt
ret
sarb
repnz
notb
lret
sti
lret
cmp
jecxz
clc
aad
sbb
jmp
xor
hlt
fucomip
int3
rol
cli
vpsubsw
hlt
shr
cmc
fadd
test
cld
ds
in
or
adcb
out
cs
cli
jmp
aad
testl
out
fnsetpm(287
out
shl
hlt
aaa
sarl
xor
int3
icebp
iret
test
aam
in
mov
in
jecxz
std
in
xchg
aam
ror
in
ss
cmp
lock
cmp
loope
cmp
lret
loope
xchg
lret
rclb
leave
ljmp
aad
repnz
shr
or
loopne
div
loope
aad
in
out
ror
and
in
out
cmp
in
jecxz
xchg
loope
int
idivb
int3
into
enter
jmp
out
ret
fidivrl
fmuls
idiv
ficoml
xchg
jmp
lret
cld
in
int
cmp
cmp
neg
cmp
repz
fldl
xchg
cmp
out
sti
into
aam
sarl
loope
aaa
cli
mov
in
jecxz
out
in
repnz
jmp
xchg
imul
xor
cmp
stc
fxch
into
in
aam
les
loope
std
lret
int
sar
in
cmp
repz
ss
and
loopne
decl
mov
mov
fcmovbe
iret
lret
aam
sti
xor
and
stc
cmc
call
dec
loope
call
in
lret
div
cmp
fdivp
ret
testl
incb
ss
out
sti
in
out
div
aad
fdivr
aad
adc
leave
cmc
lret
xlat
call
xchg
loop
xor
fcmovnb
out
aaa
shl
in
fadd
std
loope
in
cmc
ret
cli
icebp
lret
ljmp
int
sti
cmp
aad
ds
fdivrp
in
out
clc
fadd
out
nop
lret
into
into
leave
loop
ret
cmp
xlat
rcl
stc
fucom
loopne
cld
in
stc
fiaddl
xlat
jecxz
aad
int3
icebp
hlt
enter
lock
roll
stc
loopne
leave
int
adc
fldlg2
iret
clc
das
fstp
cmp
test
jmp
xchg
cld
fsts
xchg
aaa
cli
call
fidivl
xlat
ds
mov
xor
mov
jmp
lret
fst
int
test
cmp
bnd
aas
add
hlt
std
xlat
loop
cli
jmp
mov
out
repz
iret
fdiv
fdiv
xlat
shl
clc
std
cmc
fimull
cli
fisttpl
cli
ror
jmp
filds
ffreep
out
std
in
mov
nop
in
fcmovb
cli
shl
cmp
xor
int3
std
sar
loop
cmp
fsubr
lret
loope
leave
test
les
loope
out
cmp
lret
fiadds
hlt
std
in
jecxz
sti
fld1
icebp
loop
lock
int3
shr
repz
loope
aam
add
leave
jecxz
vpsubb
call
lock
out
aad
out
aad
fdivrp
cmp
shl
out
hlt
orb
fsubp
std
into
out
sub
icebp
mul
ds
aad
hlt
cmp
ret
xchg
repz
out
into
lds
ss
out
enter
leave
aas
cmp
xchg
ljmp
in
or
xchg
nop
xchg
aam
lock
test
aad
ret
rol
in
out
jecxz
mov
dec
ljmp
xor
rcr
int3
ror
fcmovu
std
cld
idiv
xchg
loopne
in
and
loop
lret
shr
test
enter
in
jmp
div
cmp
in
cmp
sbb
nop
fiaddl
jmp
in
fcom
fdivrp
out
int3
cmpb
in
mov
jmp
leave
loop
loop
hlt
ss
aam
sti
idivl
neg
in
ds
flds
jmp
xchg
mov
frstpm(287
cmc
cmp
icebp
into
cmp
filds
xchg
loopne
lret
rorl
in
fdiv
cmp
lret
xor
lock
aad
lds
ljmp
loop
stc
cmc
div
aaa
aaa
repz
stc
in
cld
xchg
iret
cld
out
mov
call
ret
imul
iret
std
in
cmp
loop
icebp
aas
xchg
cmp
loope
in
incb
out
xor
call
fldz
adc
repnz
clc
lret
in
xchg
repz
ret
hlt
shll
lret
sarl
fsubrp
cld
fcmovb
sub
mov
out
decl
fucomip
out
fldz
icebp
aam
cli
aaa
repnz
and
xlat
sub
fsub
loopne
out
int
int3
repnz
das
das
xlat
cmp
lret
loope
out
cli
cmc
xor
mov
loope
loopne
out
rcll
int3
icebp
repz
aad
icebp
in
loopne
ret
cmc
fdivr
leave
lock
fucomi
loop
fidivs
rol
iret
cmp
not
cmp
test
rcl
fucom
std
cli
in
imul
iret
cmp
sub
mov
call
call
in
test
repnz
lds
int
int
lret
hlt
xchg
rcl
into
cmc
fsub
cmp
xlat
cmp
jmp
icebp
lock
out
idiv
cli
repz
stc
ret
in
in
in
int3
mov
ret
aam
lock
sti
leave
xlat
cmp
in
loopne
in
ljmp
mov
out
ret
shl
cmp
repnz
aas
in
testl
lret
in
lret
loope
int3
xor
shr
cli
leave
cmp
aad
sar
cmc
fstp
repnz
mov
mov
int
loope
ljmp
out
cmp
loope
fcomp
test
shr
jecxz
lret
mov
shr
out
hlt
int
xor
aam
loopne
aad
in
add
or
mov
or
fsub
xor
fxtract
xor
cmp
fstp
clc
in
shr
testl
test
xor
into
aaa
cmp
xor
fcom
out
test
roll
lea
in
lds
lret
out
xor
addb
out
loope
mov
out
in
out
cmc
jmp
out
ret
idivb
ljmp
lock
icebp
lret
mov
pop
leave
ret
push
mov
push
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
push
adc
jmp
xlat
ffree
xor
pop
fstl
es
xor
scas
add
loope
out
cld
xchg
sub
aam
sti
lock
out
int3
fucom
shl
aas
jmp
int3
xchg
jecxz
test
hlt
clc
in
out
repnz
aam
aas
fxch
stc
xchg
fiadds
call
lret
rclb
jecxz
xor
clc
loope
ret
xlat
neg
shl
test
ret
aad
leave
fsub
shl
jmp
shl
shl
shl
out
idiv
cli
std
sti
vpaddd
loope
mov
mov
fsubr
mov
jmp
ds
int
cmp
xchg
enter
leave
into
mov
aad
ret
out
cmc
fcomip
frndint
test
inc
cld
mov
lret
jmp
ljmp
in
ljmp
xor
in
ret
addl
loopne
lret
into
hlt
loope
in
dec
hlt
cmp
incl
ds
jmp
lret
out
out
shll
ss
in
flds
fxam
mov
aam
mul
aad
loope
out
lret
rcll
out
sti
fadd
in
aad
rcr
test
testl
rorl
repz
out
cmc
cmp
out
loope
rorb
mov
ljmp
loope
sarl
xor
ljmp
mul
ret
lret
out
adc
lret
hlt
mov
aaa
jmp
ret
aaa
xor
leave
fmul
lock
in
xchg
addb
fcmovu
in
enter
repz
cmp
cld
iret
cmp
fdivp
int
cmp
ret
xchg
orl
mov
aaa
out
cmp
rcr
sar
clc
in
xor
iret
cmc
jmp
clc
in
loop
icebp
loope
clc
fcom
repnz
repnz
loopne
test
shl
lret
mov
iret
mov
into
mov
std
into
rcl
aam
cmc
in
fsubr
idivb
cmpb
cli
loopne
jecxz
fcos
cli
std
leave
out
rcr
xrelease
in
sti
in
cmp
in
sti
xor
int
out
test
neg
in
shl
repz
int3
hlt
lret
int
xor
fsubp
ret
rorl
jmp
out
jecxz
aaa
enter
shr
int
aaa
cli
rolb
test
xchg
in
mov
leave
ljmp
xor
jmp
out
repz
leave
lret
repz
hlt
testl
loop
into
xlat
cmp
call
xlat
addb
xchg
sti
lret
incb
aad
sub
icebp
in
not
aam
jmp
loopne
sarb
out
ret
fmull
rcl
aaa
int
cmc
sti
test
into
cmp
stc
mov
or
mov
std
in
lret
sub
jecxz
cmp
aas
out
fcomi
aad
in
cmp
call
fcmovne
xchg
jmp
cmc
aam
call
mul
out
std
loope
fiaddl
in
call
jmp
xor
ss
jmp
fdivp
lock
cmc
in
loop
push
lret
repz
cli
out
cld
call
clc
adc
push
jmp
ror
into
xchg
mov
shl
clc
in
lret
int
sti
icebp
out
into
aas
aad
sti
out
out
hlt
ljmp
loope
call
cmp
xor
jmp
shr
cmp
clc
loope
repz
in
mov
repnz
loopne
repnz
xor
cmp
hlt
out
aad
jmp
sti
cld
fsubrp
ljmp
xchg
std
xchg
cs
les
out
iret
int3
cmp
out
lds
lret
cmp
xchg
popl
sub
hlt
xor
cmp
sarl
xlat
sti
cmp
hlt
mov
in
fcomp
fmul
lret
aam
leave
enter
cmp
fcompp
clc
cmp
test
test
xlat
shr
jecxz
int
loopne
out
jmp
out
cs
repnz
cmp
ss
ds
loop
out
rcl
testb
int3
xchg
out
fnstcw
rcl
clc
jmp
into
rol
loope,pt
fldl
cld
jecxz
out
rorl
clc
fcmovnb
repnz
shl
out
clc
aaa
aam
roll
fdivr
in
out
clc
leave
leave
movl
xor
jmp
iret
rol
rol
or
push
aaa
inc
sub
inc
in
jg
scas
add
ss
enter
cmp
sar
xlat
inc
cmp
call
out
out
out
jecxz
vpmaxsw
xor
cmp
clc
xlat
hlt
faddp
sti
mov
clc
lret
in
fadd
call
xlat
test
repnz
cmp
out
out
not
cmp
sub
aas
cli
clc
incb
hlt
int
in
out
xor
stc
in
rcl
roll
in
xchg
fucomp
mov
rol
aaa
iret
cmp
pushl
cmp
vpsrad
leave
hlt
out
fcomi
rcl
rol
int3
ss
xlat
into
stc
cmp
lret
xlat
fcmovb
into
ret
sbb
in
fstp
mov
sar
sti
mov
jmp
repnz
cmp
int
add
in
sti
out
in
jecxz
in
cld
test
jecxz
out
cli
idiv
fdivr
int
stc
roll
aam
fiaddl
mov
fcmovnbe
cmp
cmp
not
lret
cmpb
test
cli
lret
cmp
cli
int
cld
hlt
mov
out
jmp
fcom
hlt
jmp
loopne
stc
fsin
jmp
lret
out
mov
out
xor
loopne
cld
adc
fsub
fcomp
sbb
lret
icebp
loopne
xchg
repnz
in
out
xlat
fucomp
leave
cmp
test
fdivr
orl
hlt
test
xor
cmc
cli
into
cmp
cmp
stc
fxtract
cmc
mov
loop
sub
jecxz
mov
das
out
aad
cmp
ds
out
cmc
icebp
iret
cld
fcmovbe
not
loope
jmp
mov
std
xchg
mov
xchg
jmp
aad
call
shl
aaa
ds
aad
test
rcr
cld
xlat
imul
enter
xchg
ljmp
int3
incb
fstp
enter
in
testl
leave
loop
sub
fidivrs
rcr
cld
cmc
neg
leave
cmp
lret
out
mov
in
xchg
in
aaa
leave
out
xor
xor
hlt
std
fcom
adc
xlat
jmp
sti
add
into
mov
aaa
into
xor
leave
out
in
icebp
loopne
stc
cmc
cmp
xchg
ds
div
call
sub
mov
aad
int3
fstpt
cmp
fcmovnu
sbb
cmc
out
fadds
into
loop
out
clc
cmc
in
into
int
fnstcw
repz
loopne
out
mov
xchg
cld
jmp
aam
cmc
in
in
cmp
dec
lret
hlt
aad
loop
xchg
std
ret
aad
lock
cld
mov
xchg
mul
xor
in
shl
into
int3
cmp
xchg
fdecstp
ret
out
mov
fmuls
in
loope
shr
ret
hlt
fdivl
ret
in
shl
xchg
stc
cli
mov
test
out
out
loopne
mov
loopne
shl
call
iret
leave
cmp
repnz
ret
out
stc
call
lret
out
out
std
int3
jmp
xchg
cld
cli
fsubp
xchg
leave
fdivr
xchg
jmp
ror
loopne
test
sar
lret
int
icebp
call
xor
cli
into
xor
leave
enter
aam
ret
rorb
mov
xchg
jecxz
repnz
aad
xor
shr
enter
loope
f2xm1
ret
xchg
hlt
mov
out
loop
xchg
xor
xor
sarl
shl
sar
add
stc
xlat
call
xchg
iret
or
jmp
out
lock
in
repz
xlat
jecxz
mov
mov
xlat
mov
sbb
xchg
call
cmp
cmp
cmp
shl
repnz
adc
out
xlat
int3
test
lret
xchg
shl
test
sar
aad
hlt
cmp
out
rcr
fstpt
call
out
mov
loop
out
loopne
in
bnd
ljmp
jecxz
jmp
out
lret
lock
orl
int
ljmp
les
decb
lock
xlat
leave
xor
out
fadd
cmp
out
mov
aad
push
stc
std
fucomi
in
repnz
fstp
aaa
out
incl
xlat
xlat
in
ljmp
int
xchg
mov
lret
loopne
xor
xor
shl
cmp
repnz
add
cld
daa
test
add
ror
fxch
shll
or
into
lcall
add
xchg
jecxz
int
xchg
and
das
aaa
sti
fcmovbe
ljmp
xlat
shl
ret
jmp
mov
sub
ret
out
in
hlt
xchg
ljmp
cld
call
repnz
mov
loopne
lret
out
fdiv
test
hlt
out
into
loop
ret
fcmovnbe
fxch
jmp
loopne
out
cld
aam
cmc
sti
enter
testb
xchg
out
aam
out
shr
fsincos
cmc
lret
lret
cmp
into
hlt
cmpb
loop
fcomp
in
decb
mov
lock
fdivr
sti
hlt
fmul
roll
leave
out
stc
iret
in
jmp
stc
fcmovb
in
stc
int3
fcomip
aam
cmp
add
loope
int
cld
sbb
fcomi
in
xor
rol
hlt
xor
fdecstp
testl
xchg
lock
fcoml
jecxz
stc
aaa
call
lock
xlat
loop
enter
lret
stc
jmp
out
test
xor
repz
ds
lock
ret
fcmovb
jmp
ror
mov
sub
loope
repnz
aad
cmp
cmp
fcmovbe
lock
std
fmul
ljmp
lock
shl
fdiv
fcmovne
cli
aam
test
out
fneni(8087
fucomp
vpminsw
xchg
shl
rcr
aaa
out
xor
idivl
call
ret
cld
loopne
xchg
iret
in
ss
repnz
xor
ljmp
ret
cmpl
loopne
movl
xor
lock
f2xm1
cmp
cmp
cmp
in
aam
test
faddl
loopne
lret
loope
div
int
enter
hlt
cmp
cld
cli
shlb
ret
in
ror
mov
enter
out
test
enter
rol
fcmovb
jecxz
out
jecxz
std
lret
addl
shl
cmp
ror
jmp
sti
rcl
adc
out
int3
call
ljmp
jmp
repz
not
shl
jmp
loopne
stc
std
mov
iret
in
icebp
cmp
cmp
addb
std
out
rcr
cld
out
ljmp
icebp
ret
out
cmp
xlat
shl
in
cmp
iret
fildl
les
icebp
mov
cmc
or
xor
in
out
icebp
aaa
ror
in
ds
loop
stc
div
ret
loopne
test
sti
filds
loop
lds
ror
out
in
shll
rol
fstp
cli
ret
fcomp
xor
repnz
cmp
clc
repnz
adc
icebp
adc
loopne
lea
repnz
ret
hlt
int
cmp
cmp
cmp
cmp
test
and
out
shr
jecxz
jmp
jmp
aaa
cmp
ljmp
hlt
ds
in
sti
jmp
filds
fcomp
fcomi
out
in
lock
mov
test
shr
xor
lret
clc
cmp
in
int3
filds
orb
lock
out
jecxz
aad
jecxz
aaa
cld
repnz
xor
idiv
fcmove
std
fadd
stc
repnz
out
stc
nop
cli
out
xchg
into
lret
repnz
in
aam
in
hlt
in
in
lock
cmc
in
in
lock
fldlg2
fnsetpm(287
in
jmp
jecxz
icebp
xchg
int3
aad
hlt
out
xor
aaa
iret
ror
hlt
clc
rcr
aaa
cmp
xchg
fadd
les
jmp
xchg
lret
aad
fcmove
out
aaa
fldl
clc
ds
hlt
xlat
cld
inc
in
in
lock
mov
aam
int3
ret
cmp
lret
out
fucom
cld
jmp
sub
leave
jmp
cmp
lret
sti
fcmovu
loop
cmp
test
xchg
ljmp
cmp
int3
lret
jmp
cli
repz
test
cli
mov
jmp
xchg
jmp
iret
lret
into
not
rol
out
clc
in
jecxz
int3
fmull
mov
in
neg
fnstsw
rcl
stc
sar
xchg
les
sti
fcmovnb
rcll
shlb
cld
cmp
fmul
cmp
xlat
sti
xchg
std
sti
inc
incb
lret
mov
ljmp
mov
push
xor
add
mov
sub
xor
mov
sub
jmp
sarl
aam
aam
fcmovne
inc
cwtl
sbb
inc
sarb
add
xor
loop
cmp
std
repz
out
mov
mov
sbb
xchg
repz
jmp
jmp
cli
out
in
sar
aas
shl
jecxz
mov
mov
xchg
xchg
shl
sarb
aad
int
cmpl
cmc
clc
xchg
jecxz
adc
out
jmp
rcr
int
aas
rcr
cmp
out
out
test
test
out
not
cmp
in
in
lret
icebp
int3
sub
sarl
xlat
fmuls
loopne
lret
aam
loope
repnz
div
cmc
cmp
jecxz
shl
test
fucom
cli
stc
mov
sti
int
test
icebp
out
idiv
in
fscale
cmp
clc
addl
in
mov
int
shl
aam
jmp
shlb
shlb
cmc
les
rol
fsubrp
incb
out
out
xor
sti
int3
cmp
cmp
xor
dec
add
sbb
fdivrp
test
int
in
mov
mov
das
in
loop
cli
in
fst
std
xlat
rcl
fcomip
adc
loop
jmp
fiadds
int
lret
imul
ds
repz
rolb
leave
lea
into
rcr
hlt
out
xor
xor
rol
out
cld
xlat
in
loopne
test
rcr
fdivr
cld
cmc
lret
mov
xlat
xor
out
loope
out
repnz
ret
aad
int
fmulp
repz
in
repnz
lret
jecxz
cli
xchg
in
out
shl
loop
in
int3
rol
call
hlt
stc
xor
call
fdiv
incl
or
aad
ret
not
in
aam
in
sub
fcmovnbe
cmp
aas
vprotd
xchg
cld
jmp
out
loope
ljmp
out
ljmp
vmaskmovdqu
int3
out
int
into
int3
in
out
ret
lock
repz
fyl2xp1
fprem
ret
iret
and
loop
and
out
call
rcl
lret
into
aad
cmp
lock
jecxz
div
xchg
cli
jecxz
rcll
cmp
cmp
int
jecxz
clc
icebp
add
rol
xchg
mov
rcl
test
into
mov
leave
out
int
cli
lock
cld
and
stc
aad
jmp
out
mov
out
xor
not
icebp
cmp
into
lret
out
loopne
cmc
lock
mov
mov
loop
int3
mov
mov
aam
xor
jmp
sbb
lock
rol
cli
stc
ds
ror
rorl
in
cld
lock
out
into
rolb
xlat
jmp
xchg
lock
and
mov
loop
in
cmp
stc
xlat
lock
ds
vpsubw
aam
call
out
call
xor
cmc
neg
in
iret
aaa
leave
repnz
ffree
cld
loop
cli
mov
loopne
fcomip
ljmp
fcomi
out
cld
fmul
cmp
out
shl
call
jecxz
sti
shr
incb
loopne
hlt
mov
ret
cmc
in
xor
jecxz
shl
rol
cld
loop
cld
fldl2t
cld
fisttpl
ss
xor
aaa
xor
cld
xor
lock
cli
xchg
xchg
jmp
rorl
repnz
call
rcl
std
in
aas
rcr
cld
in
out
call
out
in
jmp
xor
stc
loope
in
test
cld
aas
stc
ret
ljmp
orb
xor
repnz
shr
add
jmp
stc
incb
icebp
icebp
enter
stc
out
not
cld
aad
rcr
xlat
hlt
addl
test
roll
icebp
aam
aam
aas
aam
sub
fdivp
fldl
in
addl
out
fldln2
lret
rcr
in
lret
aad
mov
int3
mov
ljmp
fdiv
fiadds
sbb
aas
lret
in
fstp
repnz
shr
mov
into
call
iret
cmp
cmp
sbb
mov
mov
mov
nop
int
fucomip
out
hlt
fidivrs
aad
rol
cmp
cld
fiaddl
fsubrp
cld
test
out
rorl
cmp
icebp
int
xlat
xor
div
leave
std
mov
jecxz
dec
or
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
xor
xor
xor
or
jmp
int
fcmove
fstp
adc
js
sbb
lea
lds
scas
add
xchg
cmc
in
out
into
cmc
leave
iret
xor
cld
ds
test
shl
stc
aad
neg
test
loope
out
out
in
repnz
out
ror
std
leave
int
int3
aam
iret
ret
xor
neg
int3
in
icebp
xchg
in
cld
aam
std
cld
aad
loope
out
test
roll
sar
out
in
rorb
repnz
shl
cmp
clc
shl
test
fxtract
incl
lret
fdivp
enter
jmp
xor
xor
aad
ret
fldl
out
loop
ljmp
fsubr
call
lret
aaa
loopne
cmp
orb
in
mov
mov
jmp
xor
fdivrp
stc
aas
icebp
hlt
xchg
ljmp
xor
xor
leave
out
fst
fidivrl
mov
leave
cli
fucom
flds
repnz
lret
call
rcr
cmpl
ljmp
sbb
repz
xchg
in
out
lret
hlt
cmp
ljmp
dec
mov
leave
mov
loop
orl
lret
xor
iret
enter
rol
loop
std
cli
push
stc
jmp
xor
jmp
in
iret
cld
repnz
in
add
stc
test
sbb
rcll
rcl
cmp
shlb
repz
fnsetpm(287
inc
lret
mov
xor
fstp
std
sub
lock
into
into
xor
leave
hlt
icebp
icebp
xor
hlt
lock
xchg
out
iret
iret
jmp
int
call
sti
or
repnz
loop
sbb
leave
jmp
ficoml
jmp
sub
stc
int
fidivrs
inc
lret
not
aas
fcmovnu
jmp
mov
int3
std
shll
fdiv
ret
cmp
icebp
in
fstpt
stc
ds
sti
cmp
test
neg
iret
iret
loopne
dec
call
xor
in
shr
aas
cmp
in
fcmovnb
cmc
fsincos
ret
mov
lds
in
fmulp
repz
fldln2
rcr
aam
ret
and
sti
not
jmp
sti
or
icebp
aad
loop
jmp
icebp
sarb
sti
fcomi
cmp
xchg
ret
out
mov
xchg
mov
addb
in
jmp
fcmovu
rcl
in
sbb
fdivr
rol
jmp
loopne
sar
mov
in
out
sub
repnz
ds
sar
leave
mov
loop
cli
fst
xchg
aad
out
sar
out
cmp
cmp
aas
stc
hlt
out
cld
aam
enter
icebp
fiadds
loope
lret
cmp
fdivr
cmp
fstp
fcomi
in
jmp
loopne
loop
out
xchg
lock
shlb
aaa
aam
call
sarb
fsqrt
ret
cld
enter
fcmovnu
test
in
mov
lret
ljmp
repnz
into
ret
std
into
hlt
repnz
jmp
xor
out
out
jmp
jmp
xor
fsubp
test
roll
leave
call
shl
mov
xchg
mov
cmp
xor
jecxz
std
loop
rol
cli
out
sbb
std
adcl
repnz
cmp
call
rol
stc
xchg
jmp
leave
leave
mov
int
xor
repz
aad
enter
cli
cli
cmp
ret
stc
in
test
cld
mov
loopne
mov
cmc
rol
jmp
fldlg2
in
cmp
flds
cli
out
mov
call
out
rcr
in
rcl
ret
out
testb
out
fucomi
and
into
shr
cs
cld
aas
test
icebp
test
repz
loope
jecxz
into
int3
out
in
orl
ss
sarl
int
cmp
fcmove
in
xlat
repz
fsubrp
lret
int3
int3
repz
idiv
jmp
into
shl
cld
flds
fsub
nop
shr
xor
out
xor
sti
iret
stc
loopne,pt
cld
mov
repnz
cld
aad
std
fcmovnb
fcomip
out
imul
sub
enter
call
in
cmc
aad
cmc
ret
fabs
out
test
out
in
mov
xlat
ret
int
iret
out
mov
add
subl
add
addl
imul
jmp
into
aam
enter
fsubl
dec
pop
mov
lret
scas
add
lock
cmp
leave
xchg
out
testl
in
aam
repnz
cmc
in
lret
cmp
sti
mov
in
fucomp
iret
jmp
decl
shll
xor
cld
repz
fcomp
loop
rcr
aas
mov
fucomp
out
fiaddl
not
out
in
aad
xor
xor
cmp
sar
cmc
ret
cli
out
loopne
test
jmp
lret
rcl
rol
xlat
repz
in
out
sti
ret
std
aam
cld
and
jmp
xchg
sarb
int
test
fucom
call
mov
into
ror
lret
test
aam
lret
cmp
std
ljmp
shl
fidivrs
mov
idiv
enter
shl
int3
repz
aaa
in
cmp
lret
into
cmp
rcl
loop
mov
nop
test
lret
xchg
shl
iret
xor
stc
sar
push
xor
xlat
sar
out
loope
clc
std
jecxz
lds
in
hlt
ljmp
into
shr
clc
rcl
into
out
aam
out
neg
hlt
out
loopne
mov
xchg
jecxz
xor
cmp
cld
in
repnz
iret
sti
fucomip
in
cli
stc
mul
lea
aam
int
int3
call
fcmovnu
cmp
cli
ret
mov
call
mov
stc
incl
xor
lock
leave
lret
cmp
sti
inc
into
xlat
clc
aas
test
icebp
loop
jecxz
fsubp
out
aaa
xor
repz
cmc
fcomp
out
in
out
fsubrp
xchg
incb
fsubr
loope
cmp
aad
xor
int3
testb
add
repnz
out
repz
cli
out
xlat
fcomp
neg
lret
icebp
ret
aas
shl
jmp
std
jmp
loopne
xchg
shlb
lret
cmc
shl
cli
cmp
lret
cld
cmp
fcmove
into
sbb
hlt
jmp
rcl
ret
fcmovbe
xlat
hlt
cli
sarl
in
fiadds
fld
mov
shl
in
shl
ljmp
cld
in
faddp
test
sti
in
int
xchg
roll
fpatan
call
cli
adc
testb
mov
loope
mov
icebp
loop
shl
shl
cmc
ds
xlat
ljmp
fldl
loope
lock
sar
xor
jmp
fyl2x
stc
and
test
out
in
cld
test
lret
mov
leave
cli
aaa
leave
lret
enter
std
loope
in
loop
fsub
out
in
lret
into
xchg
in
xor
cmc
cmp
shl
lock
not
in
leave
in
call
repnz
jmp
cli
ret
rol
clc
cmp
loope
in
ret
movb
repnz
sub
out
not
int
addb
leave
repz
mov
addb
enter
call
cld
lret
shl
in
lock
mov
orl
enter
lret
sarl
out
rolb
cli
jmp
cld
leave
in
mov
loopne
aam
xor
xlat
clc
cmc
fdivrp
neg
icebp
ffreep
shl
fdiv
addb
in
aad
lock
xor
shl
test
xor
add
rol
faddp
ds
into
in
std
mov
ror
aaa
in
in
imul
sti
std
out
mul
icebp
fstp
addl
out
repnz
xchg
rclb
icebp
jmp
loopne
into
out
in
test
call
call
repnz
ret
jmp
cmp
sti
repnz
hlt
lock
ljmp
and
rol
in
cmc
sti
ljmp
ret
jecxz
jmp
cli
xlat
mov
sub
iret
idiv
xor
int
hlt
xlat
int
xor
out
shl
out
in
ret
imul
icebp
sbb
jecxz
ffreep
cmc
aad
in
in
idivb
int3
icebp
loop
loopne
fsubp
cli
in
jmp
adc
out
ret
xor
test
lret
cli
lret
fdivrs
loopne
shl
loop
fsubr
test
fsubr
xchg
int
jmp
fincstp
vmovq
fmul
repz
cmp
in
jecxz
fsub
ljmp
fisttps
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
jmp
int3
rol
xlat
fstp
fst
mov
pop
jg
pop
into
jg
scas
add
in
jecxz
hlt
mov
ror
fidivl
lock
cmp
sub
cld
cmp
and
ljmp
jecxz
xchg
jecxz
loopne
ror
xor
shr
push
idiv
test
xchg
nop
iret
call
fxch
leave
icebp
aaa
jmp
aas
out
test
cmp
testb
mov
in
shr
or
jmp
out
rcr
int
sar
loopne
fucom
call
xchg
mov
cld
rcr
std
mov
lret
fcmovnbe
repz
iret
cmp
not
shl
loope
fmuls
inc
xchg
decb
ret
clc
fadd
xlat
leave
incl
cmp
std
into
mov
dec
out
xchg
test
fdiv
ret
into
xor
aas
fmul
xor
sub
xchg
leave
fmull
fnstenv
shr
in
stc
lret
xlat
aas
repz
cli
fildl
sub
ljmp
out
ss
cmc
sar
div
lock
neg
les
sti
mov
repnz
hlt
loopne
int
leave
jmp
out
faddp
fadd
ret
mov
in
in
loopne
loope
les
call
cli
icebp
sti
xlat
add
loope
mov
repnz
mov
xchg
in
ret
int
stc
repz
stc
in
rol
ljmp
test
repnz
cmp
ds
icebp
std
adc
std
aas
fsubp
not
jecxz
enter
xchg
sub
repz
fsubrp
cmp
in
test
stc
fsubr
xchg
out
in
hlt
mov
in
out
in
into
cmp
sar
cld
rcl
fsincos
in
mov
sti
rcr
loop
int
repnz
cmp
lds
sarl
lock
in
xchg
hlt
loop
hlt
lret
jecxz
out
mov
lret
iret
jmp
in
lret
fldl2t
hlt
loope
lret
sarb
out
jecxz
cli
mov
flds
cmc
aad
aam
clc
out
int3
cmc
sarl
cli
loope
in
aad
mul
sbb
rcr
rolb
idivl
stc
into
out
aad
cld
repnz
clc
xchg
xor
rcr
loop
shr
repnz
ss
ljmp
loop
loopne
ds
sar
out
mov
imul
std
in
jmp
xor
sub
jmp
rcl
rol
lds
ljmp
fdiv
out
out
das
enter
repnz
iret
cmp
addb
repz
jecxz
lret
in
loopne
cld
nop
mov
icebp
fcmovnb
not
fcomi
xor
in
hlt
rol
xor
in
lock
jmp
jmp
in
lock
jecxz
rcr
rol
loope
mov
jmp
ret
lret
in
aad
into
enter
aad
ret
cmc
mov
ror
movl
call
fxch
clc
int3
fsubr
shr
fsub
fsub
out
sti
fdivp
fisttpl
fst
shrb
fcomi
lret
icebp
aad
lret
clc
sti
fucom
loope
loop
ret
int3
mov
fsubrp
cli
ljmp
fldpi
clc
into
out
fdivrl
in
iret
xlat
cmp
ret
iret
loopne
rorb
repnz
in
icebp
xlat
loope
enter
repz
stc
into
hlt
addl
mov
in
aam
cmp
vpmuludq
cmp
roll
aam
in
jmp
hlt
in
into
ljmp
in
idivb
cli
ds
std
ret
call
or
repnz
lret
shl
aad
out
int
rcl
cmc
shl
cld
loopne
orl
out
xchg
mov
ljmp
clc
fldl
cmp
clc
xchg
jecxz
std
jmp
stc
lock
in
div
leave
xor
frndint
enter
lret
int3
lock
cld
jmp
orl
int3
ss
lock
stc
cmp
std
hlt
iret
aad
out
xlat
cld
loopne
or
repz
jmp
in
hlt
repnz
test
xor
in
jecxz
addl
out
mov
aad
aas
repnz
cmp
ss
lret
in
loope
cmp
clc
cld
fcomp
loop
mov
out
xchg
xor
jmp
iret
lret
xor
jmp
rol
rcr
fld
pop
into
shll
mov
jg
scas
add
cmp
sarl
test
in
jmp
int
xor
cs
rcr
out
cmp
lret
leave
ljmp
not
xlat
fmuls
int
jecxz
lret
jecxz
das
shr
stc
cmp
test
loop
cmc
stc
aad
in
test
orl
stc
sar
out
lock
loopne
fmuls
ret
jmp
out
xchg
nop
enter
xor
cmp
in
cmp
sar
stc
in
cli
in
xchg
test
rol
in
shr
sarb
stc
into
cmc
shr
iret
out
repnz
in
loopne
orb
sub
sti
jmp
aad
lock
fdiv
mov
stc
iret
test
jecxz
in
rcl
iret
aam
int
xlat
fiaddl
adc
lds
mov
test
fadd
icebp
fcmovne
fmul
repnz
repnz
enter
movl
sub
iret
out
aad
fmul
cmp
loope
fdivrp
xchg
aas
fldlg2
out
loope
cld
into
mov
out
aam
fcmovbe
xor
ljmp
std
icebp
hlt
call
out
test
hlt
xchg
in
cs
int
aad
aam
cmc
aas
in
rcl
lock
cmp
fcmovnu
in
fiaddl
xchg
repz
stc
in
jmp
cmp
ds
cmc
xchg
roll
enter
fldl
lock
xor
cmp
repnz
jecxz
enter
out
mov
leave
mov
call
rcl
cli
rcl
fucomip
rcl
jecxz
cmp
cld
jecxz
mov
fsubrp
test
jmp
out
ss
hlt
loopne
repz
out
aam
in
lret
loop
shr
int3
div
in
aaa
lock
lock
faddl
cld
cmc
fdivrs
and
xchg
lea
in
cmp
lret
jmp
cmp
int3
aad
loop
hlt
rcr
lret
test
icebp
sbb
ficoms
ret
repz
shr
lret
not
shl
sti
cmp
loopne
nop
decl
fbstp
int3
call
icebp
cmp
sti
std
lret
fiaddl
out
hlt
jmp
orl
sub
loop
cmp
ss
sti
lock
out
cli
jecxz
and
fprem1
xor
mov
xchg
repz
jmp
lret
int
stc
xor
sarl
xor
into
repnz
fidivrl
mul
in
out
jecxz
sbb
aad
xor
sarl
ljmp
cli
fcmovbe
stc
mov
xlat
div
jmp
fsubr
lock
test
fsubr
cmp
aam
ret
neg
cmp
test
jecxz
in
call
sub
cmp
in
and
jecxz
xlat
repz
roll
call
xchg
lock
jecxz
into
fdivr
cli
ljmp
shr
fsubr
fdivr
cli
cli
int3
test
int3
filds
xor
rcr
xor
fcmovu
rcl
enter
fdivrp
xlat
ftst
lock
mov
shl
xor
aam
ljmp
rcl
cli
loop
hlt
fincstp
loop
sub
out
lock
xor
aaa
cmp
loope
fcomip
ret
cmp
icebp
sar
incb
mov
xchg
call
ret
ljmp
int3
fcom
incl
in
lret
fxch
shl
into
nop
jmp
jmp
in
ds
cmc
fdivr
fdivrp
addl
lret
ljmp
aad
iret
aaa
fdiv
int3
fdiv
jecxz
repnz
clc
hlt
leave
clc
test
jmp
loop
iret
fldl2e
sarl
ss
cmp
lock
out
jmp
out
leave
ljmp
cmp
in
xlat
stc
aam
shr
sbb
icebp
shl
testl
mov
shl
shl
leave
in
fldz
out
xlat
ljmp
xchg
xchg
cli
icebp
addb
clc
aaa
xor
std
dec
cmp
clc
ret
rcl
in
fchs
mov
mov
int3
aad
repnz
jmp
cmp
in
ret
cmp
out
addl
clc
xlat
shl
xor
cld
cld
stc
cmp
clc
cmc
aam
jecxz
test
in
xor
jmp
aas
sarl
fcmovnbe
fcmovb
loope
add
pop
mulb
fdivrs
scas
add
test
xor
testb
repnz
stc
repz
call
loope
mov
into
xor
xor
xor
ljmp
iret
into
ret
xlat
jmp
out
std
and
test
loopne
in
ret
divb
cs
sar
inc
lret
sti
roll
lret
fmulp
leave
orb
loop
fidivrl
into
sar
jecxz
aad
rolb
sar
loopne
test
icebp
mul
lock
in
ss
cmp
hlt
flds
jmp
int
xchg
adc
adcl
xor
loope
mul
imul
test
enter
call
in
aad
ss
in
fdiv
shl
ret
fyl2xp1
shl
loope
mul
ffreep
test
loop
mov
jecxz
not
xlat
enter
neg
cmp
xor
mov
sti
mov
leave
loop
call
xorl
int
into
out
leave
aam
int3
fldl
hlt
mov
enter
adc
in
in
idiv
xlat
leave
neg
rcr
clc
in
leave
mov
loopne
int3
or
into
xor
enter
in
out
loopne
aam
xlat
icebp
mov
loop
cli
int3
in
fcmovne
xchg
xchg
cmc
sub
enter
loopne
ds
stc
shll
les
loop
fxch
cmc
fdivr
std
out
test
repnz
in
sarl
leave
xor
clc
repnz
fcomip
sarl
shl
mov
xchg
fsubp
decb
fucomi
repnz
ds
iret
cmp
cmp
shr
cmp
aad
mov
lret
mov
fstl
rol
rcl
cmp
stc
icebp
cmp
fcomip
lret
std
incl
repz
xor
int3
jmp
xor
sarb
fildl
lret
in
fsubp
xchg
jmp
rol
das
in
int3
xor
xor
aaa
in
sarb
fdivrl
fstp
flds
lret
xchg
jecxz
lds
xor
bnd
std
aad
lock
mul
aam
fcom
jmp
jmp
icebp
mov
ror
out
fdiv
iret
cmc
fidivs
fld
call
addb
loope
xor
stc
ljmp
int
lret
in
aad
fdiv
mul
in
mov
mov
sar
in
out
cli
shr
fyl2xp1
leave
int
int3
ret
fnclex
sar
enter
in
lret
test
xchg
xor
lret
ljmp
shl
vpinsrw
or
std
ljmp
fcomp
out
rcl
iret
clc
cmp
out
test
xchg
lret
cli
ljmp
hlt
in
xlat
icebp
rol
out
cmp
cmp
fiaddl
and
lret
leave
jmp
cmp
cld
das
aam
fdiv
cmp
shl
ret
ret
xchg
cmc
cli
xlat
jmp
in
in
repnz
ror
icebp
aad
jmp
iret
in
int
cmp
fcmovbe
icebp
fprem
fsqrt
jecxz
out
fpatan
leave
rolb
in
out
out
jmp
int3
into
fdivrl
repnz
mov
out
in
mov
div
xor
fcomp
lock
loop
hlt
fnstsw
les
iret
mov
int
cmc
lret
int
stc
in
cmp
stc
fnstsw
cld
aam
movl
lret
jmp
xor
xor
int3
xor
cmp
sti
sti
loop
ret
xlat
testb
inc
std
push
test
ret
repnz
not
neg
jmp
aam
out
xor
ds
loopne
test
into
in
lret
out
cmp
in
shr
rcr
fiaddl
mov
lret
enter
jmp
hlt
jmp
or
call
cld
std
in
loop
icebp
shl
shr
cmp
fucomp
xor
jmp
in
aam
sar
mov
lock
xor
cmp
aad
in
ss
xchg
sti
leave
fsubp
call
in
in
adc
das
xor
fcom
aaa
call
rcl
fsin
call
mov
repnz
xchg
ss
lret
jmp
shl
sarb
cmp
mov
fmulp
mov
orb
stc
out
cmp
fcomi
xlat
aad
int3
int
roll
imul
jmp
into
aas
ror
rcl
sarl
xchg
lods
mov
insb
fdivrl
scas
add
xlat
rcl
sar
cld
stc
call
loope
test
repz
loope
bnd
repnz
fucom
cmc
add
test
in
loopne
icebp
jmp
lock
xor
lret
lret
cmp
repnz
flds
jecxz
test
jmp
xchg
divb
clc
repz
loope
jecxz
jmp
mov
mov
call
icebp
aaa
out
in
cmp
ret
aam
loopne
jmp
repnz
enter
out
cli
or
ffreep
neg
ljmp
and
call
in
ror
lret
int
loop,pt
adc
aad
mov
in
inc
lret
sti
nop
loopne
shl
out
enter
jmp
sub
test
jmp
popl
xor
stc
int3
out
cs
out
cmp
in
test
mov
jecxz
loop
xor
mov
xor
test
shr
out
xlat
cli
bnd
fiaddl
int3
enter
cld
xchg
mov
out
shl
int3
int
cmpl
lock
shr
leave
test
jecxz
call
leave
xor
idiv
idiv
in
out
cli
cmp
xchg
add
mov
fildl
ss
rcl
aas
loop
cmp
fadd
enter
cmp
dec
cmc
icebp
repnz
xor
in
aam
std
cld
cmc
sbb
aam
ljmp
loop
into
out
loopne
enter
out
ss
iret
aam
out
xlat
out
addb
test
in
bnd
loope
ret
sub
das
out
aad
rcr
cmp
call
loope
ljmp
mov
rorb
out
imul
enter
lret
iret
xchg
sti
jmp
in
sti
into
jmp
xor
in
fcmovb
fincstp
cmp
iret
ror
cmp
cli
mov
mov
loop
in
shl
stc
hlt
jmp
sar
out
into
fdiv
repz
enter
iret
mov
xchg
lock
jmp
sti
mul
call
int3
in
fdivrl
hlt
cli
ljmp
cmc
xchg
adc
cmc
into
cmp
loope
clc
xor
cmp
sti
loop
dec
test
in
aam
lret
int3
lock
cmp
jecxz
out
ds
jecxz
loop
out
and
lock
out
out
iret
rolb
xchg
hlt
test
adc
aad
das
loope
int
xor
repz
lock
in
ret
mov
mov
loopne
int
xchg
int
cli
in
jecxz
aas
loope
cmp
sar
jmp
fcmovu
loope
mov
lret
fbstp
fdiv
fdecstp
fsubr
out
idiv
and
addl
mov
and
aaa
fmul
xor
in
call
ret
repz
std
aas
mov
loop
in
dec
out
std
mov
cmc
xor
sub
divl
int3
fnstsw
out
rcr
loope
sti
fstp
repz
stc
in
adcb
cmc
aaa
repnz
xlat
iret
cmp
loopne
aad
in
enter
cli
fsubp
jmp
dec
xor
ss
stc
xlat
xlat
loopne
out
aas
fiadds
hlt
std
cmp
loope
loope
fldl
hlt
out
call
lret
iret
cmp
jecxz
flds
jecxz
xchg
rcl
xor
sub
rcl
cmp
aad
mov
ljmp
repnz
mov
test
int
cmp
std
rcl
add
jecxz
iret
xchg
mov
xchg
ret
ror
shl
leave
cmc
cmp
cmp
cmp
jecxz
nop
ljmp
repnz
cmp
out
enter
loopne
cmp
test
test
nop
enter
int3
aad
in
sub
sti
and
addl
xchg
loop
ret
fmul
aam
out
cmp
fcomi
aam
lock
in
cli
mov
rcl
ror
sub
in
leave
sti
cmp
ror
rcl
xchg
fisttpl
lret
loopne
fisttpll
jmp
rcl
aad
aad
shll
lds
popf
loope
jle
add
repnz
stc
hlt
int
loopne,pt
les
loopne
test
jecxz
hlt
repnz
lret
in
icebp
cmc
ss
lock
rol
xchg
icebp
hlt
out
in
std
lock
fcmovnu
aad
xlat
in
ret
lds
aam
fcmovnu
shl
dec
aas
aas
rol
call
mov
jecxz
out
cmc
not
ljmp
cli
rcr
lock
lock
in
enter
out
out
xchg
jmp
in
cli
cmp
int
cmp
aad
stc
loope
hlt
testl
in
ljmp
fdiv
call
cmpb
aam
into
iret
jmp
in
iret
in
xor
sub
xor
icebp
lret
sub
cld
enter
loope
xlat
orb
lret
aad
fstp
fucomi
out
cmp
not
mov
rorb
clc
leave
loope
lret
out
in
jmp
stc
repnz
sti
cmp
lds
fsubp
leave
faddl
mov
mov
in
cli
fsub
cli
ljmp
repz
rorl
repz
lock
loope
out
aam
stc
int
fst
testl
loop
out
in
mov
in
aam
xchg
aaa
sub
fdivr
cld
das
leave
xor
in
call
call
fcmove
xchg
adcb
out
cmp
fildl
lock
lret
adcl
aad
fdivrl
jmp
testb
in
mov
out
rcl
stc
cmp
in
out
idivb
cld
into
test
test
lret
in
pop
fcomi
jecxz
into
in
xor
xlat
out
fsubr
sarb
hlt
cmp
std
test
flds
leave
xchg
fcmovnbe
in
aas
repz
out
iret
int
fcmove
xlat
out
rcl
rcr
lea
lock
xchg
ret
cmp
aam
xor
cmp
bnd
out
clc
and
repnz
ficoms
xor
in
cli
clc
adc
sar
les
leave
iret
orb
int
cmc
shl
repnz
icebp
idivl
cld
xlat
and
ffree
cmp
leave
call
rolb
icebp
fucomi
in
call
fcmovu
cli
aas
iret
movb
addl
in
rcr
clc
ss
cmpb
clc
out
rol
mov
ret
test
in
in
shl
add
icebp
sarl
xor
shl
cmp
cmp
fndisi(8087
jmp
into
in
fisttps
xor
sub
cmp
aas
ret
fld
rcl
jmp
mov
rcr
loopne
sub
xor
push
enter
cmp
ret
cld
aad
out
jmp
into
mov
std
into
lret
cmc
ret
fcomi
out
ljmp
jecxz
stc
stc
cld
shl
out
in
jmp
out
test
sti
fcmovnu
xor
lret
clc
out
ret
sti
in
out
in
in
nop
repnz
shlb
shrl
lock
lock
loope
fistpll
fildl
std
mov
aam
xchg
lret
out
shl
in
aad
in
hlt
rol
fst
enter
out
leave
fpatan
loope
mov
in
into
xor
into
xlat
hlt
cmp
rcr
ss
addl
in
hlt
xor
xor
cmp
jmp
adc
cmc
ret
aad
ret
mov
out
in
xorb
cmp
sti
xrelease
in
rcr
leave
in
loopne
lret
test
lret
out
aam
mov
call
cld
fiaddl
mov
mov
int
fsubrp
fsubp
shl
ret
into
stc
call
out
out
iret
lock
movl
int
mov
fcom
in
cmp
cli
stc
stc
idiv
sbb
out
ret
clc
call
rorb
cmp
int3
aam
cmp
or
xchg
call
mov
xlat
fxch
mov
fists
out
aaa
cmp
cmp
loopne
rcr
enter
in
call
mov
xchg
nop
repnz
ss
repnz
cmp
cmp
mul
xlat
loopne
cmp
mov
je
xor
add
mov
imul
add
jmp
int3
rol
aad
aad
fpatan
int3
and
adc
jg
into
out
jle
add
sbb
ret
lret
lret
int
jmp
repnz
xchg
hlt
ss
xor
vpslld
loope
jecxz
add
mul
in
jmp
dec
in
fucom
ret
vcvtdq2pd
xlat
das
cmp
sar
lret
repnz
out
mov
nop
std
iret
mov
jmp
in
aam
loop
iret
fscale
enter
mov
in
jmp
mov
cmc
enter
sub
aas
mov
jecxz
out
leave
int3
lea
cmc
sub
out
mul
xor
addl
test
inc
iret
adc
test
repnz
das
enter
std
std
repz
ror
shl
repnz
roll
into
out
addb
int3
fadd
ljmp
cmp
enter
in
cli
mov
loope
mov
int3
repz
shl
hlt
cli
neg
imul
loopne
les
xlat
aam
int3
lret
loopne
fsubp
lock
mov
aad
in
cli
cmp
out
add
cmp
lock
rcl
mov
aad
flds
or
xlat
int3
xor
out
in
sar
icebp
in
ret
sarl
loopne
jmp
in
jmp
fmull
cmc
jmp
cmp
cli
cmp
iret
int
loope
xchg
stc
in
jmp
iret
cmp
clc
ss
out
repnz
out
cmc
std
in
enter
fmul
jmp
cld
out
in
ljmp
shr
cld
loop
filds
cmp
test
out
cs
cmp
aad
in
std
int
cli
test
sbb
enter
jecxz
xchg
lock
iret
xor
iret
lret
sti
int
loopne
rcl
test
cmp
leave
xor
leave
repnz
call
in
in
test
out
lret
loopne
in
jmp
enter
fdivs
fcom
cld
in
call
test
in
enter
divl
int
jmp
in
xlat
lock
sti
sbb
fdivr
mov
iret
xchg
call
ljmp
out
repz
hlt
shr
into
in
cmc
std
dec
cli
rol
iret
jmp
ret
lret
aam
fmul
sarl
lret
fadd
shl
out
test
aam
sbb
clc
std
lock
shl
lret
in
lret
shlb
aad
addl
orb
rcl
loop
shl
aam
stc
stc
stc
in
cli
shl
clc
in
in
xlat
mov
xchg
out
lock
das
icebp
xor
cmp
idiv
out
loopne
repz
fxam
in
addb
enter
lret
test
jecxz
xor
out
fcmovne
fstpt
cmp
aad
stc
cmp
fisttps
mov
int3
mul
not
cmp
out
iret
mul
roll
cmp
out
mov
repnz
mov
fsub
rol
out
fidivrs
cmp
out
hlt
repz
sti
lret
cmp
test
loope
jecxz
rol
icebp
fcomi
in
aas
cmc
out
repnz
rcl
in
jmp
loope
jecxz
mov
lock
call
aad
in
lret
fcom
rcr
cmp
sar
in
sti
decl
shr
ret
in
jmp
cmc
fcomi
cli
test
mov
enter
xchg
fiaddl
xor
sti
cmp
and
lret
xor
into
out
lds
hlt
cmp
cmp
cli
incl
ret
sti
xlat
call
sub
shr
ss
std
fsubr
leave
ss
in
icebp
addl
fsub
test
out
int3
into
loopne
xorb
fdivr
in
fcmovnbe
cld
fcomi
loop
addl
in
jmp
in
out
shr
in
int3
aaa
xor
inc
jmp
cmp
fadd
loop
cli
lret
leave
shl
mov
fsubr
out
test
rolb
in
cmc
and
out
icebp
mov
mov
aam
das
int3
fdivrs
xor
int
ss
cmp
out
shl
cli
jmp
test
leave
mov
jmp
loopne
jecxz
clc
das
fdivp
cmp
xorb
idivb
out
stc
nop
icebp
lret
xchg
xchg
in
inc
or
inc
or
leave
ret
push
mov
push
push
mov
mov
mov
jmp
into
rol
fcomp
fcomps
gs
xlat
jg
jg
or
jle
xor
fcomi
fcomp
out
bnd
aas
repnz
fadd
shl
mov
mov
into
in
rcr
lock
test
stc
cmp
roll
push
loopne
fiaddl
int
imull
repnz
ss
loope
icebp
stc
and
push
mov
test
loope
lret
xor
int
neg
or
mul
inc
ds
sti
stc
cld
mov
in
ljmp
enter
aaa
icebp
xlat
cmc
idiv
out
fildl
in
mov
iret
test
cmp
call
aaa
into
loop
clc
clc
ret
stc
addb
jmp
shr
mov
icebp
xor
out
out
ror
clc
rcr
fidivrl
cmp
xchg
cli
xchg
out
int3
or
out
loopne
enter
xor
ss
test
loopne
sar
out
icebp
aam
nop
shlb
test
out
hlt
aam
ljmp
sti
test
test
jmp
shr
call
sub
cmp
imul
mul
loop
call
xlat
int3
cli
ret
mov
xchg
out
ret
rcl
sti
ror
fdiv
flds
repz
out
lret
fsubrp
test
xor
int3
shl
in
aam
repnz
stc
fldl
fimull
xor
das
in
xor
int
cmc
fcmovbe
cmp
out
and
cli
cmp
flds
out
pushl
xor
lret
ror
iret
cli
in
clc
incb
les
mov
in
icebp
hlt
into
cld
in
out
aam
or
rcl
loopne
les
movl
jmp
cmc
in
loop
and
push
xchg
test
icebp
loopne
jmp
xor
xor
sti
in
rolb
ret
loope
mov
shl
xchg
int3
fsubp
repnz
cli
xlat
test
ret
aam
enter
ret
test
lock
sub
lock
into
stc
cli
aaa
into
stc
fdivl
cmp
repz
in
std
loopne
mov
jmp
fsubrp
or
out
jmp
repnz
xor
fdivr
out
fsincos
into
clc
cmp
xchg
xchg
xchg
cmp
jecxz
lret
cld
ds
repnz
rcl
leave
loope
cld
fld
fisttpl
cmc
loop
jmp
into
out
fsub
out
loope
xlat
std
jecxz
incb
sti
out
in
out
out
icebp
loope
repnz
jmp
sarb
cli
hlt
ds
jmp
ds
jecxz
out
repz
imul
lret
in
fyl2xp1
in
cld
sar
icebp
idiv
std
out
in
jmp
iret
lret
adcb
jmp
int3
ror
repz
cmp
sti
test
sar
lret
out
cmc
iret
idivl
cmp
icebp
std
fdivp
into
hlt
out
loop
out
sti
call
fcomi
rclb
div
ss
cmp
cld
inc
in
cmc
cld
cmp
fsubr
icebp
xchg
fistl
fcmovnb
cmp
ds
std
xor
test
out
out
int3
ret
leave
iret
std
lock
ret
cmp
fidivrl
cmpb
cmp
out
or
call
xlat
out
iret
in
jmp
in
xlat
das
xor
rcl
aam
ss
aad
lock
add
in
cld
jecxz
xchg
xchg
rorb
into
lret
cmp
lock
stc
cmc
stc
into
call
test
or
ljmp
call
fdiv
sar
fcomip
aam
and
loope
cmp
out
fcmovnu
adcl
sar
in
inc
cmp
clc
cmp
add
add
icebp
add
add
and
add
ror
rcr
fstp
aam
cmp
lods
lahf
xchg
push
out
or
jg
or
jle
fldz
into
hlt
rcl
rcl
aad
fscale
lret
clc
out
jmp
jmp
mov
jmp
fdivr
repnz
xor
loope
sub
lret
mov
clc
loop
cmp
xorb
icebp
and
rol
leave
fucomip
jmp
in
rclb
aaa
rcr
int3
ss
fstpt
cmp
clc
lock
lret
in
orb
cmp
xor
int3
cmp
ds
loop
in
fstp
shl
out
in
rorl
hlt
cmp
aam
jmp
push
sub
test
fdivr
neg
fnstsw
loope
xchg
call
loop
in
aam
clc
aad
stc
ds
sti
aad
xlat
xor
int
xchg
repz
hlt
shr
repz
loop
xor
cmc
sti
xor
loop
ror
fimuls
sbb
lret
repz
loope
ljmp
out
ds
fcomp
sbb
stc
in
into
addb
out
mov
cs
sarl
adc
loopne
xlat
sti
in
sti
mov
sti
iret
xchg
xchg
xchg
loopne
jmp
jmp
jmp
fstpt
repnz
repz
idivl
loopne
cld
faddp
lret
jmp
ss
fcomp
xlat
stc
ror
hlt
std
in
cmc
mov
fcomip
mov
ljmp
ss
fmul
aas
cmc
call
in
fprem
addl
xchg
cmc
hlt
int
stc
call
sti
and
out
icebp
out
mov
mov
loopne
mov
out
hlt
jmp
lret
aam
fildl
xlat
rol
ret
xor
loopne
lock
fdivrp
repnz
clc
out
hlt
lock
sarl
out
in
stc
mov
mov
xor
icebp
rcr
call
rol
movb
push
stc
stc
lret
fmull
cmp
fnstenv
cmp
loopne
rol
rcl
ljmp
int
jmp
cmc
sarl
loopne
int
cmp
loopne
ds
out
leave
frndint
xchg
rorl
neg
shr
sarb
repnz
hlt
stc
in
stc
in
mov
lret
fcomip
ret
ret
cmp
out
int3
cmp
push
aam
sti
enter
mov
lret
cli
mov
jecxz
test
lock
rcr
stc
cli
jecxz
enter
out
nop
mov
xchg
in
sub
xor
int3
cli
lock
loop
ret
mov
mov
lret
and
out
fcomip
shl
lret
aaa
out
sti
xor
neg
cmp
jmp
test
out
mov
mov
out
lea
cmp
in
repz
sub
fdiv
xchg
aam
div
out
fmulp
shr
aam
out
icebp
clc
not
aaa
shr
fdivp
aam
aas
shr
shl
cmc
cli
fmul
jecxz
fiadds
cli
cmp
shr
out
cli
std
not
iret
clc
ret
loopne
aad
fprem
orb
clc
icebp
out
call
into
fmul
cmc
ds
div
aad
mov
cli
fmuls
mov
jmp
xor
sub
rcl
jmp
sarb
sti
call
call
out
lock
xor
int
xor
lock
cmp
fucomi
idiv
or
xchg
cmc
out
cli
repz
leave
jmp
repz
cmc
repz
lret
fcmovbe
shr
into
in
test
hlt
out
cs
lret
cmp
ret
int
out
call
fmuls
mov
rol
hlt
out
lret
repnz
roll
xlat
int
enter
arpl
loope
add
jne
subl
mov
add
mov
xorl
xor
add
jmp
sarl
ret
ffree
in
jns
pusha
mov
repz
or
jle
in
call
test
icebp
rcl
lret
in
jmp
in
not
mul
int3
out
xchg
rcr
cmp
test
ss
ljmp
std
xor
xchg
out
rorb
xor
in
cli
not
int3
cmp
aam
int3
in
and
in
imul
out
out
loop
xchg
jmp
lret
xor
div
cmc
fsubrp
lock
fnstcw
xchg
fstp
loop
sub
xchg
mov
lock
int
fnstcw
int
int3
fdivrl
test
in
jmp
lock
fcmove
jmp
aam
std
faddl
jmp
loope
repnz
fcomi
cmp
iret
aad
cmp
mov
fucomip
cmp
in
aad
fst
xor
loope
cmc
cmp
aas
and
out
in
into
loop
aam
aaa
int
cmp
jmp
ljmp
clc
cli
rolb
in
mov
and
nop
rorl
lock
cmp
ret
jecxz
lock
fsubr
jmp
in
into
xchg
push
out
in
ret
fxch
cmc
cmp
adc
repz
lock
out
loop
push
aam
repnz
lock
enter
imul
repnz
out
testb
jecxz
and
rclb
fidivl
rcr
in
lock
int
sub
fdivs
fsubrp
fucom
jmp
cld
sbb
lock
fcmovb
sub
fldl
mov
repz
shr
cmc
out
cmp
cld
std
xchg
jmp
vpsubsb
xchg
jmp
cmp
fidivs
sarb
std
not
ret
loop
fcomp
mov
in
clc
mov
jmp
jmp
cmp
enter
rol
test
stc
int3
int
fsub
out
int
lock
fdivs
jecxz
iret
clc
stc
repnz
cmc
fidivrl
push
in
mov
loop
ljmp
cmp
stc
leave
rcr
fcmovnu
aas
cmp
ffree
incb
sti
out
loopne
nop
xorl
aaa
sub
in
cmp
fdivrl
xor
aas
cli
fmul
in
loop
jmp
mov
ljmp
cmp
aam
div
faddp
sub
jecxz
iret
out
repz
dec
loopne
jmp
lock
repz
fdivr
xor
out
lret
enter
jecxz
ljmp
cmp
loop
lds
stc
cmc
faddl
lret
cld
mov
xchg
fsub
aad
shl
lret
cmp
cmp
int
fcomi
fcmovnbe
mov
out
xlat
enter
mov
fmul
cmp
icebp
xor
sarl
fsubrp
ffree
sub
fst
out
jecxz
sub
out
xchg
call
stc
cld
cmp
ss
clc
fcmovu
cmp
test
ret
in
nop
hlt
mov
xor
xor
cli
leave
stc
icebp
lock
cmp
loop
fcomi
mov
test
in
mov
loop
xchg
in
sub
out
out
idivl
call
sti
sti
std
fstp
in
jmp
lret
lret
loop
in
in
fidivrl
test
stc
xchg
shl
xlat
mov
mov
mov
sub
cmp
std
out
icebp
shr
div
ret
jecxz
enter
fldz
lret
sar
imul
sub
lret
aad
sar
rcr
lock
cmp
out
xchg
neg
ret
int3
enter
incl
repnz
iret
fcmovne
xor
jmp
shl
xchg
rcl
ljmp
call
out
mov
andl
add
adc
jmp
rcl
aad
rcrl
outsl
add
idivl
or
jle
stc
in
mul
out
lret
shll
loop
mul
fildl
xor
rclb
stc
fstp
fstpt
cmp
xor
fsubr
les
nop
into
xchg
leave
xor
cmp
jmp
cld
repnz
out
ret
std
cli
xchg
out
out
hlt
xor
out
sbb
aas
test
in
mov
jecxz
and
rorb
les
aam
cmp
shl
not
in
std
lds
fdivrp
mov
int3
stc
out
lret
lret
test
stc
cmp
jecxz
mov
ljmp
ror
shl
mul
xor
fstpt
in
aam
sub
mov
xchg
ss
xor
cmp
ljmp
cli
aad
xchg
xchg
fsin
in
out
leave
jmp
xorb
imul
icebp
repz
cli
fcomip
out
shl
sbb
loope
leave
repz
mov
mov
in
fucom
xchg
aam
stc
call
aas
cmc
aad
out
std
ds
loop
repz
cld
call
xor
dec
xlat
lret
div
stc
xor
ljmp
xchg
xchg
icebp
icebp
repnz
cmp
idiv
out
call
jecxz
jmp
test
fdivr
iret
jecxz
out
idivb
shll
shl
aad
rcr
and
fst
rcl
xchg
jmp
ljmp
int
cmp
xlat
ss
aas
loop
in
out
orb
clc
mov
test
fcmovnbe
ljmp
enter
iret
not
int
fdivr
adc
fistpll
in
xchg
xchg
shl
in
in
clc
sub
xor
cmp
aam
fildl
loopne
jmp
ljmp
xchg
xchg
rclb
int
leave
rcr
clc
cmc
inc
xlat
xor
enter
mov
into
xchg
in
cmc
aad
vpsrlq
aas
fnstcw
ror
jmp
fimull
lret
not
xor
sti
jmp
in
int
loopne
cmp
shl
out
addb
stc
mov
das
leave
jecxz
lret
jmp
cmp
fstpt
cli
jecxz
aad
rol
mov
lock
out
icebp
hlt
out
into
xor
in
int3
enter
icebp
shr
fisttpl
filds
mov
xchg
ljmp
aad
int
cmp
std
aaa
and
enter
ret
fsubr
or
rcr
in
shl
out
in
cmp
stc
icebp
cmp
shl
iret
fadd
loope
jmp
mov
fisttpl
not
iret
lret
rcl
call
lret
sti
shl
sar
cmc
in
stc
fsub
cld
jmp
repz
cmp
icebp
xor
cld
lock
aas
iret
ret
loope
fmuls
loopne
and
divl
ljmp
shlb
in
rol
cmp
test
xchg
nop
in
call
jmp
iret
xor
lock
mov
mov
nop
fcomip
lret
lret
stc
xor
shl
test
std
out
test
test
cld
shr
jmp
xor
out
out
fdivrl
cmp
in
ret
sar
out
xchg
jmp
decl
rol
call
in
jecxz
addl
fcmovne
mov
xchg
leave
lret
sarb
in
cmp
out
aam
push
cmc
ds
jmp
mov
mov
loop
ret
out
lock
cmp
testb
fimull
mov
xchg
mov
clc
out
cld
test
loope
mov
movzwl
sbbl
not
movl
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
leave
ret
push
mov
sub
subl
jmp
leave
xlat
rcr
mov
cwtl
push
push
pop
xlat
sbb
sti
jg
roll
jle
xor
aas
xchg
cld
fimuls
out
fisttps
in
cmp
out
lock
xlat
cmp
cmp
loopne
cli
cli
test
loope
cld
flds
shl
fsub
xlat
sarb
int
sti
rcl
aad
out
clc
out
flds
out
sarl
in
xlat
out
cmp
std
repz
cld
int
idiv
rcr
mul
xlat
xlat
in
mov
lock
ret
leave
fnstenv
jecxz
cli
std
cmc
clc
fstp
clc
fcom
loopne
loop
mov
fnstenv
ss
imul
into
in
iret
rolb
xchg
std
fcomp
lret
cli
cld
call
int3
xor
repz
into
xlat
shl
fsub
fmul
loop
icebp
xlat
lret
mov
ljmp
loop
out
jmp
les
xor
cmpb
div
cmp
clc
mov
xchg
loope
loopne
int
xlat
test
lret
repz
inc
xlat
aam
fxch
enter
in
lret
lea
das
mov
fucomp
xlat
sar
sarl
cmpl
rcr
out
in
sti
lds
mov
in
imulb
enter
ds
repnz
sub
aad
fldl
loop
lock
adcl
in
repnz
rcl
ret
hlt
shl
xchg
mov
xchg
test
aam
sub
ret
leave
out
ds
jmp
loop
cmc
cmpb
repz
ljmp
ljmp
jmp
sti
cld
sarl
faddl
leave
clc
enter
fistl
hlt
cmc
int
out
xlat
jmp
int3
jecxz
out
out
fcomp
add
int3
in
mov
int
xor
xlat
rcr
icebp
int
cmpb
out
xor
aas
clc
stc
xchg
out
jmp
test
call
clc
xor
ljmp
test
cmc
cmp
test
in
cld
idiv
std
lea
xor
into
fcom
div
fstp
fdiv
adc
cli
out
inc
incl
xchg
xor
call
sti
xlat
aas
cld
cmpb
cmp
fadd
cli
clc
out
clc
mov
repz
repz
vaddsubps
aad
int
pushl
testb
mov
and
into
mov
loopne
leave
xor
fucomi
std
lret
fldln2
std
cld
sti
ds
xlat
clc
out
loopne
and
out
shrl
cmc
ror
jmp
fnsave
sarl
cmp
ret
out
lret
leave
fucomp
xchg
out
jmp
sub
cli
out
jmp
ds
loopne
xchg
movl
shl
mov
out
xor
int
enter
into
iret
xor
call
fcomip
out
addb
xchg
in
call
jmp
aam
lret
into
fidivrs
mov
jecxz
push
aad
mov
mov
std
rorl
aam
out
aaa
cli
rcr
clc
hlt
cmp
test
hlt
cmp
jmp
repnz
repz
call
out
inc
rcr
orl
jmp
repz
hlt
xor
std
ljmp
aam
sbb
sbb
int3
test
jecxz
xchg
xchg
in
icebp
jmp
in
loopne
fidivrs
clc
sarb
mov
sti
jmp
int3
shr
mov
out
in
enter
fcmovbe
aad
sti
shr
in
aam
enter
in
out
xchg
int
xlat
ljmp
icebp
push
cli
xbegin
loope
enter
rcl
int
sti
and
aas
out
xlat
fcomi
mov
cli
out
hlt
jecxz
int3
loope
xor
iret
cmp
cmp
div
cmp
sarb
fdivrp
ret
cmc
loope
leave
int3
out
lret
in
shlb
xor
int
out
push
lret
aas
cmp
cmp
inc
ljmp
loop
nop
out
shll
in
aad
xor
lock
jecxz
icebp
sti
hlt
addb
fucomip
out
out
rcll
daa
test
test
add
sbb
jmp
mov
fstp
enter
imul
jg
roll
jle
ss
jecxz
xor
out
lret
sbb
repz
ret
add
cli
mov
cli
enter
jmp
sar
aad
out
fcmovnu
in
cmp
loop
cld
shr
fcomp
cmp
ret
jmp
mov
xchg
in
hlt
aaa
ret
cmp
hlt
jecxz
into
and
xchg
shl
std
in
das
icebp
sti
cmp
aam
lret
mul
sti
xchg
ds
mov
call
mov
shl
cmc
in
call
cmc
ss
test
idiv
cmc
mov
mov
lret
loop
fcos
cmp
fsub
mov
aad
aaa
divl
fucomi
fdivrl
fdiv
aam
icebp
out
mov
cld
in
in
icebp
out
repz
out
ss
in
cmp
idivl
and
aad
mov
mov
loope
popl
xor
vpsubsb
icebp
out
into
fnop
and
in
aas
lds
int3
lock
into
xchg
ljmp
xlat
iret
in
ljmp
shl
mov
fmul
mov
mov
lds
enter
shr
fcmove
cmp
sar
cmpb
movl
iret
xchg
out
lret
out
in
ljmp
std
test
xlat
dec
out
shl
cld
loop
xchg
xlat
out
shl
jecxz
repnz
in
cmp
fxtract
aas
aas
incb
fisttps
aam
xchg
clc
divl
fidivrl
aam
rcl
jmp
jecxz
lock
jmp
fmull
ljmp
aas
ljmp
ffree
cli
loopne
out
int
in
xchg
int3
jmp
in
ss
rcl
cli
xor
incl
cmp
nop
in
out
cmp
icebp
enter
cs
cli
call
clc
ljmp
idiv
in
cmc
dec
ljmp
in
xor
lret
hlt
int3
cmp
icebp
ror
adc
out
xchg
orb
leave
fcmove
icebp
cmp
hlt
divb
iret
into
add
mov
mov
in
int
fcom
xor
sar
cmp
loope
neg
aas
xchg
loopne
in
in
in
mov
in
ljmp
clc
sti
jecxz
testb
test
adc
loop
std
xchg
xchg
fstl
xor
fsubr
cmp
ror
stc
aam
loop
xlat
clc
loopne
test
mov
xchg
xchg
cmc
in
cmp
call
sar
hlt
hlt
fcomip
out
f2xm1
test
test
test
pause
adcl
cmp
repnz
ret
out
cmp
out
ffree
sti
loop
xchg
xor
xor
xor
aad
hlt
aas
fsub
aam
cmc
fadd
sti
jmp
out
mov
into
xor
aam
out
cmp
sub
mul
in
xchg
loop
mov
loopne
xorl
cld
cmp
xor
lock
in
ds
clc
sarl
in
out
fimuls
sub
das
fdiv
lret
idivb
aam
repz
clc
cld
out
fcmovnbe
jmp
fmul
sar
into
sar
out
cmp
jmp
stc
aam
cmp
rol
loopne
sub
call
mov
cmc
cmc
aam
and
test
fimull
in
jmp
out
into
mov
aad
rcr
int3
cld
enter
cli
addl
call
in
jmp
sub
call
rcr
jmp
adc
aam
stc
adc
fucompp
enter
icebp
jecxz
repnz
lret
cmc
int3
cmp
cmc
aas
fcmovnb
in
sarb
test
loope
nop
jmp
ljmp
cmc
fxch
into
loop
cmp
aad
ret
in
loope
test
loope
enter
in
in
not
ret
shr
clc
fdivrs
test
cmc
lret
mov
std
ficoml
out
loop
fcmovnu
stc
out
clc
lret
ds
jecxz
fcmovbe
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
inc
jmp
lret
aas
fst
fcmove
fidivrs
mov
push
cmpl
add
incl
in
sbb
rcl
out
sti
aaa
fidivrl
cmp
hlt
and
test
out
rol
ret
cli
out
mov
mov
hlt
cld
lock
idivl
in
fdiv
loope
lock
call
loopne
loope
jecxz
mov
mov
xor
stc
ret
cli
icebp
sti
xlat
int
and
xlat
repnz
clc
mov
out
repnz
aam
lret
xlat
cmp
fnstcw
sti
clc
cld
int
ret
mov
imul
into
cli
sbb
shr
int
call
xor
loop
ds
cmp
cmp
lea
xchg
out
mov
aaa
xor
xlat
repz
fsin
ds
cmp
mov
xlat
in
mov
call
leave
int3
loope
out
std
cmc
neg
cmp
aam
jmp
mov
xor
lds
out
cmp
repnz
aaa
repz
ret
sar
addb
mov
out
out
shr
out
imul
aam
fsubrp
xor
fcmovnb
cmc
div
test
loopne
mov
out
iret
addb
fcmovnbe
cli
sti
cmp
ds
jmp
ret
cmp
std
lds
fcmove
cmp
not
icebp
aaa
sub
cld
or
out
mov
test
mov
test
stc
out
rclb
xor
std
lret
aad
aaa
into
ror
in
in
out
jmp
test
in
xchg
aad
into
repnz
sub
fiadds
movb
sbb
mov
icebp
lock
shl
in
call
cld
clc
aad
aas
cli
rcr
mov
fucom
adcl
ljmp
hlt
cmp
fcomip
repz
loop
out
xchg
xchg
les
out
out
sar
faddp
hlt
filds
rcr
xchg
loopne
fcmovnu
nop
xchg
loop
int
into
iret
cmp
ror
xbegin
fdiv
int
std
repz
test
into
fildl
repz
jecxz
xor
sti
fnsave
iret
div
ret
fidivrl
repz
test
loop
lret
rclb
fcmovbe
bnd
hlt
fsub
in
not
rcr
enter
test
lea
icebp
out
cmc
xor
lret
cmc
ret
lock
in
call
test
xchg
test
cmp
aaa
aaa
int
clc
into
jecxz
in
sar
sar
leave
out
out
jmp
roll
xlat
into
out
fsubr
ror
jmp
xlat
cmp
mov
test
iret
leave
leave
cmp
xlat
divb
out
aas
cmc
cmp
fidivrs
clc
mul
repnz
lret
jmp
flds
aad
xor
xlat
cmc
jmp
cmp
sar
out
out
hlt
ffreep
leave
decl
mov
xchg
in
out
lret
icebp
iret
repnz
div
rol
aad
sti
aam
mov
mov
leave
in
iret
in
stc
cmp
idivl
aad
cmc
test
xlat
mov
mov
out
rolb
xor
hlt
sub
xor
fcomi
std
test
std
adc
xchg
xchg
aad
iret
repnz
icebp
ss
fidivrs
sti
shr
cmp
fldl
aam
mov
in
rcr
xchg
ret
ljmp
in
in
out
std
jecxz
sarb
hlt
repnz
clc
cli
fadd
mov
fisttps
lock
in
cld
fnstsw
cmp
faddl
lret
in
sti
test
icebp
icebp
cmc
xor
int3
ror
loopne
out
aam
cmp
shl
fisttpll
in
xchg
in
fimull
iret
hlt
cmc
cmp
repnz
test
in
jmp
xchg
xchg
xchg
mov
in
les
in
hlt
imul
fsubr
shl
filds
xchg
jecxz
mov
orb
loope
xor
xor
loopne
into
cmp
fstp
fucomp
ljmp
decb
in
xlat
fcmovne
leave
lea
movl
jmp
aam
aas
ret
lret
fst
fnstenv
lods
pop
inc
or
mov
roll
jle
xlat
repnz
cmp
ds
aam
out
cmc
sti
lret
into
dec
fucom
int
xor
cmp
cld
shr
stc
loopne
testb
hlt
add
nop
leave
test
in
aam
loop
ret
fcmovu
cmc
loop
ret
fsts
notb
shl
sti
xlat
jmp
stc
clc
rol
loopne
fmuls
addb
aad
lds
cld
cmp
aam
lret
cld
hlt
roll
cli
call
xchg
ret
cmc
xor
out
loopne
adc
rcl
in
mov
test
ljmp
jmp
aaa
cli
lret
call
xor
xchg
enter
loope
ljmp
sarb
icebp
leave
shl
cld
jmp
in
add
jecxz
in
imul
mov
jecxz
out
fsub
lret
iret
xor
cmp
div
hlt
xlat
xchg
shl
rcr
in
lock
fdivp
iret
xor
cld
xor
sarl
int
rcr
sar
repz
in
mov
mov
jmp
icebp
out
sub
xor
xor
cmc
hlt
roll
test
stc
cld
jecxz
std
stc
incl
jmp
out
ss
in
div
cli
cmc
fadd
lock
xchg
loope
ret
fucomp
mov
aad
loope
lret
icebp
enter
sti
ret
test
rcl
leave
faddp
or
fiadds
not
shl
int
stc
fucomi
in
std
clc
std
iret
rcr
cmc
in
xchg
lds
out
std
out
xchg
out
hlt
lds
cmp
ffreep
fpatan
fdivrp
cmp
aam
jmp
iret
loopne
xchg
test
cli
sti
shl
cli
ds
loope
stc
rcr
mov
cli
ffree
sti
call
in
icebp
shl
shr
cld
icebp
fldl2t
cmp
lock
sti
out
in
lret
in
fcomip
hlt
xchg
out
lret
cmp
iret
cmc
ljmp
rol
mov
mov
mov
out
out
int3
xlat
sub
out
enter
loop
ret
out
fcmovnb
add
fsubrp
shl
jecxz
mov
test
aaa
cmp
int
and
sti
shl
icebp
mov
mov
aam
shl
fcmovne
fmul
in
enter
cmp
hlt
jecxz
call
mul
mov
xchg
lock
lret
idivl
leave
clc
lock
flds
test
jmp
mov
xor
cmp
cli
cmp
aas
neg
call
stc
push
mov
test
fadd
loopne
orl
xor
idivl
cmc
stc
aas
cmp
loope
clc
ret
sti
ret
jmp
std
mov
mov
in
xor
shl
jecxz
sti
out
lock
cmp
fcomip
shl
mov
leave
xlat
fildl
repz
divl
into
cmp
cmc
not
cmp
ror
shl
in
test
test
out
aaa
in
aaa
std
cmp
hlt
lret
ljmp
aad
fcom
xchg
nop
leave
xchg
addl
leave
cmp
aad
fxch
in
hlt
test
cmc
fcmovnu
mov
xchg
out
xor
out
int3
fsubr
loopne
std
iret
test
call
leave
sar
mov
into
fstl
shl
jmp
cmp
testb
jmp
cli
out
int
hlt
lret
mov
out
out
cmp
into
jmp
enter
in
ds
cmc
stc
cmc
out
test
testl
int
in
aam
test
sarb
ror
loopne
sti
fiadds
int
iret
jmp
repnz
in
xor
in
fstp
fdivrl
fldl
xchg
mov
call
xchg
enter
fxch
int
fmul
into
in
loopne
fcmovnb
fiadds
imul
out
fucomp
xor
out
sub
stc
xor
out
cmp
ss
in
in
out
ret
rorl
fmuls
push
arpl
add
add
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
neg
mov
sbbl
push
and
lea
andl
mov
neg
jmp
rcl
xlat
fcom
push
outsl
cli
ret
testl
repz
mov
int3
iret
iret
leave
in
std
int3
fstp
in
fucomip
cld
sti
call
clc
in
push
test
out
jmp
test
das
in
out
cld
shlb
fnstcw
lock
out
test
in
loopne
lock
sti
test
mov
sub
aam
in
xor
shll
fcom
in
cmp
cmp
mov
in
in
cmp
xchg
loopne
aas
lret
into
hlt
aam
fstpt
repz
test
cld
rcl
out
fcmove
incb
std
jecxz
fsubp
shl
in
hlt
sti
jmp
xchg
jecxz
test
xchg
decl
fsubr
xlat
vmaskmovdqu
clc
aas
enter
filds
add
lret
mov
mov
jmp
lock
fcmovnbe
sti
out
faddp
ret
repnz
fsub
jecxz
call
test
jmp
aaa
cmp
lret
aas
sti
cli
flds
test
imul
mov
loope
ljmp
xlat
shl
icebp
repz
aad
sar
loop
jmp
std
int
call
out
repz
repnz
ret
in
aas
loope
fst
ljmp
std
rcl
lock
cmp
ss
sti
cmp
cmp
aad
jecxz
add
fcmovne
out
jecxz
ror
fmulp
in
icebp
icebp
xor
cmp
icebp
enter
sarb
repz
loope
aam
in
leave
int
xchg
int3
call
in
out
lret
xlat
shr
rcr
cmc
ret
enter
shr
into
adc
in
shr
sub
sti
enter
cmp
rcr
mul
in
jmp
int
out
jmp
cmc
aaa
into
cmp
int
ret
repnz
into
test
out
in
sti
iret
aad
and
filds
aam
fcmove
in
addl
in
int
fsqrt
xor
clc
cmp
aam
loop
fadds
repz
int3
not
ret
xor
leave
rolb
stc
addl
lock
out
xor
int3
sti
cld
aad
aad
aad
lea
xchg
std
in
aam
int
hlt
xor
fdivrl
lret
repz
icebp
out
out
aam
ret
std
call
aam
xor
out
les
iret
cld
ss
ror
fdiv
inc
fmul
cli
shl
fucom
fsubrp
hlt
mov
ret
ret
jecxz
int3
sarb
rcl
clc
cmp
fxch
aad
sub
mov
in
fmul
ret
rcll
in
in
sub
cmp
lret
clc
stc
xor
rcr
mul
or
xchg
adc
cmc
adc
aam
aam
ror
in
ds
aas
rolb
sub
xchg
lret
out
pop
cmc
int
cmp
cli
out
fsin
adc
cmp
out
rcl
imul
test
mov
lret
lea
ret
xor
cmc
leave
lret
std
aad
adc
fcmovbe
fucomip
nop
lock
jmp
shr
fsubr
lret
push
repnz
loope
fcos
lret
loope
iret
iret
loope
out
aam
cmc
icebp
ror
ror
aam
fmulp
int
cmpb
ret
jmp
fucomi
out
out
hlt
in
ret
jmp
repz
rolb
hlt
test
sti
aam
int3
mov
ljmp
cmp
xor
cmc
test
fucom
xlat
sar
call
out
call
cs
sub
in
std
cmp
shr
cmp
stc
mov
fcmovb
loope
int3
int3
decl
xchg
ret
icebp
cmp
fcmovbe
xor
fdivrs
mul
lret
fsubrp
in
int3
xchg
shl
xchg
loope
out
shr
sar
jmp
out
xlat
sbb
neg
in
iret
shr
addl
icebp
in
repnz
out
or
xlat
in
stc
test
and
in
into
cmp
in
xlat
jmp
leave
shl
iret
mov
push
jmp
aam
enter
aad
cmp
and
iret
mov
jle
add
jecxz
loopne
xlat
sar
in
xchg
xchg
ror
ljmp
cmp
stc
jecxz,pt
iret
fiadds
mov
fucomp
test
ljmp
xor
cmp
fprem1
aad
and
test
mov
ffree
out
loope
fcmovnbe
xchg
sub
lret
cmp
into
cmp
xor
shl
xlat
clc
in
mov
jmp
xchg
loop
loopne
notb
ror
cli
repz
sti
shl
lock
aas
clc
addl
lret
mov
int
lret
sub
stc
or
int
shr
shl
and
fcmovne
loopne
into
mov
xor
rol
sti
rcr
ljmp
std
inc
cmpl
sub
ficoms
int3
cmc
loop
leave
stc
cmp
stc
sarl
cld
fndisi(8087
in
std
fcmovbe
neg
in
xlat
out
test
cmc
aam
rol
loop
cmp
xor
fnstcw
cmpb
stc
call
sub
icebp
xor
out
test
cld
idivb
iret
ret
loop
std
lret
clc
iret
out
loope
fucomi
cmc
mov
div
sar
hlt
idiv
leave
in
lret
shl
loope
fadd
fscale
movb
nop
jmp
out
repz
cmc
fdivs
adc
fadd
ror
fucom
sub
stc
mov
xchg
aas
int
cmp
xor
enter
adc
in
cmpl
cld
mov
lret
shl
cmp
xor
aad
cmp
lret
stc
in
cmp
faddl
clc
flds
mov
in
int
lds
in
into
aaa
in
int
cmp
aas
loop
sarl
loop
shl
out
out
rorb
shll
repz
aad
loopne
ss
fiaddl
fisttpll
out
into
mov
repz
into
loope
sar
hlt
ds
xabort
jmp
jmp
shl
xchg
lock
out
clc
rcl
jmp
cmp
fdivrs
fadd
ds
test
xchg
loope
loop
shr
fcmove
rolb
cmp
in
out
fyl2x
stc
cmp
xchg
hlt
shl
test
jmp
rolb
int3
aaa
into
out
sar
jmp
fiadds
sti
lret
cli
fdivrp
test
fdiv
push
iret
shl
leave
cmp
ljmp
test
hlt
cmpb
mov
cmc
sti
jecxz
in
mov
fdivs
aaa
cmc
fmul
jmp
loop
sar
cld
addb
ret
lret
into
mov
fdiv
out
int3
out
pushl
sar
loop
fprem
aam
fmulp
hlt
std
xor
loop
xchg
call
cmp
fdiv
fistpll
hlt
rcl
out
loope
ljmp
ret
aam
idivb
call
cmp
ds
icebp
call
ljmp
in
ror
aad
xor
cmp
into
sbb
int
in
ljmp
fdivr
incb
in
in
call
cmp
cmc
cmp
in
in
in
hlt
test
in
rorl
shr
vpsubb
fdivp
div
jecxz
in
xchg
out
cli
loopne
out
and
in
xorl
vpsubsb
ss
cmp
ret
aas
jecxz
fxch
fucomi
ljmp
enter
stc
in
xor
cmc
cmc
cmpl
push
xchg
leave
nop
xchg
test
sub
xor
ss
imul
shl
rcr
test
inc
clc
in
leave
call
cmp
lret
aam
xor
sti
stc
fdiv
aam
fcomi
mov
test
test
xchg
call
xor
ljmp
test
out
in
stc
lock
in
xchg
rcl
das
ljmp
loopne
in
in
repz
aas
loope
in
sbb
icebp
xchg
call
cmp
ljmp
repz
jmp
hlt
incl
mov
mov
enter
fsubp
push
mov
mov
mov
movl
mov
xor
jmp
rcl
enter
fcmovne
fdivl
xchg
jg
roll
jle
icebp
xor
call
fcomip
ror
addl
jmp
test
decl
rcl
ror
xor
into
clc
aas
cld
out
decl
lret
enter
mov
out
icebp
cmc
fadd
jmp
xlat
icebp
in
aad
fsubp
ret
rcr
aas
sti
ljmp
stc
lret
jmp
shlb
shr
xlat
cld
int
shr
xlat
into
clc
hlt
enter
jmp
in
in
out
aam
int
int
stc
fdivl
cmp
ret
clc
fsub
loopne
lret
xchg
leave
mov
test
xor
out
call
cmp
mul
out
fadd
mov
mov
fsubp
in
test
xchg
out
out
cli
iret
sti
cmp
aas
cmp
repz
fcmovnb
sbb
ret
clc
mov
in
rcr
xchg
aad
loope
into
ss
out
repz
lock
ret
jecxz
loop
xchg
mov
inc
int3
aam
call
lock
in
xlat
in
or
ds
cld
repnz
std
hlt
fst
loop
mov
aam
rcr
div
cmc
stc
aas
cli
cld
int
jecxz
hlt
rorl
lret
xor
mul
xor
xor
ss
in
aas
lock
in
add
lret
jecxz
jecxz
mov
ljmp
loopne
ds
sar
loopne
cli
xlat
in
test
mov
lret
ljmp
fidivrl
into
cmp
into
fcmovbe
ret
f2xm1
jmp
jecxz
mov
rorb
shl
xlat
hlt
int3
aam
in
jmp
aam
jmp
fdivrp
int
lock
cmc
fdiv
lock
call
hlt
xlat
in
lret
stc
addl
loope
cli
cli
xrelease
test
push
mov
in
fsub
mov
rorl
lret
jecxz
cmp
out
fcmovnbe
hlt
sarb
loop
xchg
mov
fmuls
out
loop
neg
xor
int3
xor
stc
cli
loope
rolb
aam
in
cld
std
lock
lock
in
ss
in
xor
test
loop
fcmovb
loopne
lret
rcr
in
out
sub
ret
out
out
int
icebp
int
cmp
cmpl
fninit
nop
out
lock
in
cmp
aaa
cmp
repz
repz
ret
jmp
call
ljmp
cmp
sti
lock
icebp
cmp
stc
fstpt
lds
std
ret
in
fcmovne
icebp
loope
jmp
out
int3
mul
ss
clc
cmp
roll
jmp
ret
in
enter
repnz
xor
ret
ss
int3
cmp
adc
push
neg
in
mov
into
int
lock
imulb
fcomp
leave
cli
cs
stc
lret
adc
aad
test
or
fcmovnu
mov
mov
fucom
rclb
cmp
shr
repz
loop
loope
and
lret
out
out
in
rcr
jmp
ljmp
repnz
cli
aad
shl
in
in
mov
repnz
lock
sbb
ljmp
mov
in
ljmp
lret
fcmove
xor
int3
out
ss
testl
orb
idivl
out
imul
div
rol
sti
out
ret
in
fcompp
int
out
nop
mov
jmp
loop
jmp
cmp
hlt
into
loope
in
rolb
xchg
loope
test
in
test
xor
out
into
aad
cmp
xor
in
xchg
mov
mov
test
loopne
lret
ljmp
aas
ret
ror
jmp
lret
fmuls
xchg
hlt
loope
cmp
cs
rcl
sar
out
fadd
aad
jmp
addl
call
cmc
enter
into
ds
aas
out
out
fistpll
rol
mov
movzwl
adc
mov
xor
mov
or
mov
xorl
xor
adcl
jmp
int
rcl
int
stos
fimuls
adc
cltd
jg
roll
jle
cmc
movb
fmulp
adc
repnz
cmp
iret
lret
int
ret
ret
enter
or
leave
cmc
out
jmp
int
jmp
rcl
loope
fstp
in
cmp
ret
filds
xchg
ret
ret
in
icebp
std
out
aas
lret
cmp
aad
loop
loope
shr
call
fists
ret
jmp
hlt
cmp
fnstcw
xor
or
jmp
icebp
call
fidivl
hlt
jmp
aad
cmp
jecxz
fcomp
fisttpll
in
in
aad
in
out
in
cmp
cli
icebp
in
cmp
sti
jmp
rorb
loop
hlt
sti
fdivrs
aam
hlt
fucomi
iret
addb
addb
shr
orl
icebp
cmp
not
cmp
fyl2x
inc
fcomp
mov
int3
mov
iret
les
icebp
in
clc
int3
std
iret
lret
std
rcl
shl
repnz
in
loop
int
ret
xor
sti
iret
clc
sarb
enter
xchg
mov
in
repz
jmp
test
rol
clc
mul
hlt
fidivrs
leave
fdivrp
cmp
loope
fst
fdivp
aad
loope
lret
ficoml
shlb
div
lret
cmc
xor
int3
cld
xchg
cmc
and
jecxz
add
cld
out
xchg
clc
aaa
imulb
rcl
in
xlat
fcmovu
call
stc
lds
mov
std
lret
jecxz
leave
lret
call
out
shl
lock
lret
rolb
aas
call
sar
mov
fisttps
shl
in
cmp
rcl
in
rcr
sti
clc
loopne
cli
std
hlt
shl
out
stc
in
in
lret
jmp
out
mov
hlt
ret
lret
jmp
out
cmc
aas
xlat
repz
bnd
ret
test
mov
shl
loope
shl
xor
fcomp
cld
stc
ljmp
sti
stc
in
loope
faddl
xchg
cmc
xor
repz
and
loop
add
incl
out
call
out
aaa
repz
cmp
out
ds
out
in
leave
int
loop
mov
lret
jmp
aaa
cmp
int3
enter
rolb
std
leave
fdivr
aad
mov
repnz
mov
aad
call
cmp
aas
in
ror
cli
shl
loop
incl
in
cli
into
mov
in
clc
cld
out
in
call
add
test
test
fcmove
xchg
iret
lock
mov
ror
fstpt
stc
sti
dec
lret
loope
mov
fcomp
std
out
jmp
iret
mov
lret
xlat
cli
icebp
fsubp
idivb
loopne
cmc
incb
sub
fldl
aad
fincstp
cmp
stc
cmp
fucomip
fstp
mov
int
aam
iret
in
aad
aaa
fdivl
xor
cmp
into
cld
iret
mov
cmc
aad
jmp
repnz
mov
clc
stc
cmp
sti
jmp
out
out
les
xchg
nop
icebp
xor
cmp
clc
fnstsw
clc
lock
int
shl
fcom
hlt
fildl
ror
mov
cmp
leave
jecxz
ljmp
shlb
shl
rcl
jecxz
mov
in
loopne
test
shl
mov
sti
xor
cmp
fadd
fdivr
fdivr
shl
fst
hlt
call
lea
cmp
lock
xor
enter
loope
loop
xlat
fisttpll
mov
cmc
mov
cmp
fmulp
int
cmp
fnstcw
xor
ljmp
cld
rolb
call
xor
rolb
into
aad
std
std
in
loopne
fsub
sti
lret
lock
repz
enter
repz
out
sar
shll
xchg
mov
dec
test
int3
fst
clc
hlt
aam
out
shr
imul
enter
fmul
fnstcw
cmc
mov
inc
popf
jg
roll
jle
aam
sarl
cmc
jmp
cli
call
stc
orl
lock
xor
repz
jmp
test
xchg
call
fimuls
leave
rorl
ljmp
repz
xlat
fildl
out
ljmp
dec
mov
xor
cli
aad
std
in
cmc
leave
call
out
fdivr
in
cld
mov
idiv
sub
aam
rcl
loop
xor
xor
idivl
int3
cmp
sti
les
clc
ljmp
test
int
hlt
in
in
ljmp
icebp
aas
add
fcom
out
int
cld
fsubr
jmp
loop
repz
in
sti
repz
in
rcr
sti
ds
push
out
in
sbb
cld
xchg
in
xchg
aam
fdivs
icebp
aam
icebp
xor
repnz
repnz
aaa
out
shl
stc
in
std
jmp
ljmp
shll
lret
lret
ss
fsubp
addb
in
in
dec
sbb
mov
jmp
aam
fcmovbe
int
cmp
in
repz
ljmp
lret
shl
mov
aam
hlt
stc
ljmp
xlat
std
fucom
xchg
fcmovb
in
jecxz
call
leave
into
clc
iret
cmp
enter
xchg
lea
xchg
rcr
loop
xor
in
das
ds
fcmovne
lret
test
cli
loope
xor
mov
mov
lock
into
rol
fidivrs
loope
test
clc
cli
test
mov
int
lret
into
sbb
fidivl
aam
cmc
loopne
int3
rcl
clc
hlt
incb
out
sti
adc
sar
std
xchg
ljmp
rcr
jmp
cmp
cmc
call
loopne
mov
cli
hlt
jmp
loope
icebp
in
fisubrl
or
add
loope
cli
fucomp
test
test
out
repz
xor
cmp
fsub
hlt
repz
fisttpll
icebp
jmp
in
imul
ss
jmp
in
aam
cmp
adc
ret
stc
xlat
sub
cld
out
orb
ror
lret
repz
std
rol
testl
mov
mov
rclb
out
shlb
testl
mov
int3
fdivr
jecxz
adcb
jmp
clc
icebp
rcl
icebp
shl
sti
cld
repnz
fdiv
cmp
stc
lea
test
aam
iret
xor
xor
call
cmp
cmp
out
fdivr
out
jmp
xchg
hlt
out
xor
std
cmc
out
fdivp
cli
repnz
sar
mov
cmc
fadd
fsubr
out
in
out
rcl
xor
fst
int3
repnz
sub
loop
xchg
out
repz
jmp
cli
xor
ljmp
repnz
rcr
aam
jecxz
clc
xchg
jmp
out
out
out
int3
xor
aad
fabs
xlat
loopne
roll
jmp
jmp
mov
xchg
rcl
rol
in
jmp
fnstsw
ror
call
aaa
fdiv
icebp
ret
sar
mov
mov
loope
int
call
jmp
in
clc
hlt
shl
cmpb
test
ljmp
jecxz
into
lock
cmp
hlt
ffree
in
in
in
sti
sar
out
repz
loopne
jecxz
adc
test
fcmovbe
out
lock
fcomp
ret
repnz
in
hlt
filds
xchg
out
xchg
div
call
int3
cld
ror
rcl
in
stc
cmp
rolb
std
mov
xor
sar
neg
cli
out
loop
shl
sar
fucomip
in
orb
xchg
repnz
loope
shr
jmp
repnz
cmp
repnz
roll
mov
mov
in
loop
out
cmc
xor
xor
jmp
ss
fucomi
aas
fnsetpm(287
icebp
fsub
mov
movb
shrb
add
imul
enter
fst
ffree
and
dec
jo
cmp
jg
roll
jle
call
repnz
sti
call
shl
div
roll
mov
mov
nop
mov
xor
out
xor
into
clc
cld
xlat
test
shl
iret
ret
not
test
lret
icebp
mov
xor
sub
out
cmc
stc
cmp
shl
sbb
in
fdivp
mov
popl
xor
cmp
xor
fidivrs
cmp
clc
mov
ljmp
leave
out
xchg
out
ret
sar
cli
test
out
aas
aas
ffree
in
repz
mov
in
mov
aam
cld
shr
aam
sar
cli
mul
cmp
loopne
mov
cmp
xchg
hlt
cmp
cmp
hlt
loopne
lock
bnd
cld
enter
loopne
lea
into
out
cmc
ror
cmp
shl
loopne
stc
mov
jecxz
fucomip
hlt
nop
in
shr
sub
lret
shll
in
cmp
fneni(8087
int
ret
loope
fsub
addb
cld
aad
xor
loope
test
neg
addb
in
ret
call
mov
fxch
in
in
iret
out
lock
cmp
aad
ret
xlat
fcomp
ljmp
bnd
repnz
cmc
stc
ljmp
enter
cld
xchg
repnz
icebp
lret
hlt
rcr
xlat
xor
into
cmp
aam
jmp
enter
repnz
mov
icebp
loop
xor
loope
repz
in
clc
clc
orl
mov
cli
int3
out
jmp
in
cld
xor
fsubrp
jmp
fbstp
fdivp
cld
loope
mov
faddl
jecxz
orl
xor
int
xlat
aam
ljmp
mul
fisttpl
int
in
aam
in
jecxz,pn
fsubr
lret
ljmp
cli
fcomip
hlt
fsubr
mov
out
out
mov
fld
xor
icebp
and
ds
fadds
loopne
xchg
jmp
test
icebp
out
xor
lret
aam
lock
aad
fiadds
fiadds
in
hlt
int3
xor
lret
in
cmc
cmc
idivb
aaa
cmp
into
cld
rcr
in
mov
in
mov
jmp
call
fcomi
ljmp
testb
mov
loopne
nop
xchg
out
call
fdivs
in
enter
shl
fdivp
adc
ljmp
test
repnz
int
in
shll
aad
jmp
leave
fsub
int3
sar
ds
jecxz
stc
loope
test
xchg
xor
cmp
cmp
div
loopne
cmp
iret
lock
iret
cli
fcomip
fdiv
std
xlat
xchg
leave
in
out
hlt
xor
imulb
lret
icebp
cmp
ret
sub
in
mov
sti
jmp
lret
xor
hlt
aam
cli
hlt
lock
cmp
xlat
test
stc
out
mov
iret
xor
repz
clc
fcmove
fnstcw
jmp
loopne
in
sar
mov
cli
sub
leave
cld
out
mov
ret
xor
test
fiaddl
cld
and
mov
rorb
xor
cmc
out
stc
cmp
fildl
repz
clc
jecxz
not
mov
int3
loopne
sub
shl
jmp
cmp
fcmovu
shr
loopne
shl
call
loopne
fxch
icebp
jmp
shl
xchg
das
das
cmc
shl
fucom
in
repnz
aas
clc
ds
test
cmp
jecxz
clc
in
mov
rclb
repnz
fcomi
cmc
sub
shl
sar
repz
std
out
int3
lret
icebp
jmp
loopne
cmp
into
lret
lock
cmp
stc
test
clc
fcmovu
leave
loope
fistl
adc
ret
in
cmp
cmp
cli
cmp
shll
shl
std
fcmovnb
in
out
cli
ljmp
rcr
xlat
out
cmp
xor
rolb
fiadds
add
arpl
div
not
mov
movl
cmp
movl
jmp
rol
mov
xchg
cmpsl
sub
add
roll
jle
fcmovnu
std
lock
leave
hlt
cmp
in
xchg
fcomip
orl
out
clc
jmp
sti
rcr
out
repz
cli
xchg
out
or
lock
xchg
out
shll
lret
call
stc
fcmovnb
xlat
rcr
shl
std
stc
in
jecxz
in
fisttpl
in
fldl
shl
fsubrp
fnstcw
aas
int3
in
xchg
in
out
fildl
shl
enter
xor
aam
hlt
in
ljmp
fcmovnu
fadd
popl
shl
lock
lret
out
cmp
sti
rcl
stc
cmp
loope
repz
ret
loope
xchg
xor
jmp
aad
imul
repnz
iret
ljmp
loope
xlat
cmp
out
test
jecxz
lret
xor
cmc
loope
repz
jmp
in
sar
into
lret
repz
leave
out
cmp
sti
repz
addb
std
mov
xchg
cli
jmp
hlt
int
in
stc
xor
lret
fstpt
cmc
in
test
rol
sub
lea
xchg
sub
icebp
lds
jmp
sbb
iret
fsub
call
mov
loop
out
mov
in
iret
mul
into
clc
lret
fdiv
in
cmpl
ror
xlat
and
in
aad
fsubr
fcmovu
enter
sbb
in
stc
xchg
cld
hlt
mov
into
enter
lock
repnz
lock
cmp
hlt
repnz
cmc
aad
out
jmp
fmul
mov
lret
neg
icebp
adc
fnstenv
loop
mov
lret
in
loope
repnz
shr
call
lret
not
sar
fisttpl
iret
into
repnz
test
vphaddubw
xlat
sarl
out
cmp
stc
rcl
shl
testb
jmp
nop
loop
xchg
cmc
xor
sar
repz
ret
jmp
ljmp
out
out
jecxz
fcmovb
cmc
shll
lret
lret
cmp
clc
in
cld
cmc
cmp
hlt
cmp
loop
jmp
xchg
lret
xchg
xor
int3
in
shl
aad
cmp
repz
stc
orb
mov
out
clc
das
xlat
rcr
into
lret
fstp
jmp
cli
incb
mov
nop
xchg
in
out
call
rol
clc
clc
xor
aaa
ss
fmulp
out
sar
flds
cld
ret
sbb
int
jmp
jmp
out
fmul
flds
rcl
loope
stc
int
fmul
xor
test
cmp
repnz
aas
hlt
cmp
loope
sti
decb
out
cs
cld
out
cmc
rcr
cmp
fincstp
cmp
fisttpl
sar
in
enter
aad
aad
aam
ret
out
int
shl
rolb
jmp
iret
loop
or
test
lock
jmp
hlt
test
clc
faddp
loopne
std
lret
clc
mov
out
ljmp
cmp
xlat
icebp
jmp
out
out
stc
lock
repz
mov
sbb
loop
in
xchg
lret
loop
xor
rol
std
and
rcl
cli
ljmp
lret
int3
in
loop
xor
icebp
icebp
aas
aad
in
ds
aad
cli
xchg
std
into
jmp
call
cmc
rcl
lock
out
leave
ljmp
sti
xor
xchg
ret
out
std
mov
orl
shr
jmp
in
sub
ret
incb
fucomi
int3
std
xchg
repz
out
xor
ds
out
clc
jmp
mov
out
xchg
lea
int
xor
icebp
repz
ds
cmp
test
test
lds
xchg
xchg
ss
in
cmp
hlt
imul
fdivrp
loopne
idivb
stc
sti
loop
orb
je
movzbl
sub
movl
add
jmp
aas
aam
int3
aad
lret
fstl
in
mov
add
in
out
lret
loop
aaa
rcr
xlat
hlt
cmp
rcl
ss
faddl
out
dec
rorl
cmc
xlat
in
xor
sarb
cld
cmc
add
stc
out
stc
test
out
jecxz
rolb
xor
jmp
jmp
cmp
call
icebp
rol
loope
jmp
test
fldl
repnz
hlt
xor
cmp
int
fucomip
out
sti
jecxz
sbb
fdiv
cmc
aam
loop
int
std
cmc
shl
ss
hlt
ss
aam
ds
sti
sbb
loope
hlt
aad
mov
xchg
mov
out
lock
xor
lret
enter
sti
aam
sarb
jecxz
lock
leave
in
mov
lock
ljmp
rcl
out
aam
out
test
in
call
ss
lret
jecxz
testb
ljmp
lea
xor
std
clc
cmp
int3
aas
iret
addl
cld
loop
rorl
xor
fnsetpm(287
test
fcom
loope
fcmovnbe
shl
out
std
fsubr
loope
sar
fildl
jmp
in
jmp
add
jecxz
out
fisttpll
orb
xor
cmc
jmp
hlt
ret
fcomip
repz
hlt
test
stc
adcb
loop
cmp
sti
idiv
out
shl
ror
out
fcmovb
test
in
rol
shl
cmc
in
aam
in
inc
fistpll
ds
fsubp
xlat
stc
mov
loope
jmp
out
hlt
cld
repnz
mov
xchg
ret
aam
fucomp
out
mov
add
xchg
into
int
out
hlt
rcl
rcr
flds
fstp
int3
repz
call
out
out
cld
lock
clc
in
xchg
loop
lret
mov
mov
add
lret
cmc
in
cmp
clc
into
std
cmp
addb
rorb
xchg
mov
xor
out
in
call
jmp
ret
in
mov
in
lock
lock
xor
jmp
icebp
xor
test
rcr
leave
incb
loope
add
mov
in
in
leave
repz
fdivrs
int3
loope
cmp
fcmovnb
repnz
jecxz
icebp
test
leave
lock
fdiv
call
loopne
in
cmp
repnz
in
in
jmp
nop
mov
in
jmp
aad
ljmp
iret
aam
hlt
sarb
sub
cld
cmp
mov
xchg
popl
ror
lock
ljmp
loop
test
in
out
mov
icebp
loopne
sar
xor
stc
sti
cmp
in
stc
fcomp
mov
filds
xchg
aam
loop
in
hlt
sti
idiv
in
jmp
or
ds
stc
aad
sti
jecxz
cld
in
out
lock
xlat
aad
out
xlat
cmp
roll
ds
lret
fiaddl
xor
aam
repnz
idiv
shlb
in
in
mov
mov
xchg
in
std
out
rcr
fucomi
int
fcmovnb
cmp
lret
enter
fsubrl
jmp
lret
fnsave
fstpt
fucomip
adc
out
iret
neg
lret
fistpll
leave
fst
iret
les
std
ljmp
fsubrp
lret
lock
sarb
sub
loope
lock
cld
loope
mov
int3
loope
enter
mov
stc
xor
out
out
hlt
into
call
stc
cmp
mov
in
decl
repz
ljmp
sar
iret
xchg
aad
enter
loope
xchg
jecxz
iret
ljmp
out
hlt
cmp
div
lock
inc
hlt
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
dec
mov
mov
mov
imul
jmp
lret
ror
fstp
fnstsw
out
jo
daa
or
clc
imul
roll
jle
test
stc
cmc
loop
jmp
fcmovnu
ljmp
iret
into
shl
aaa
jmp
push
ret
sbb
ljmp
mov
mov
call
aas
call
test
call
mov
iret
in
std
fucomip
nop
iret
sub
xor
fdivr
test
in
loop
cmc
ret
in
ret
sti
nop
into
xchg
test
in
lock
xlat
jmp
out
ss
adc
sar
out
int
mov
into
test
icebp
aam
in
test
idivl
into
cmp
ret
xlat
fcmovu
test
loop
lock
test
sub
test
repnz
fst
iret
xchg
xchg
cmp
into
xchg
filds
fsub
fdiv
fdiv
jmp
jecxz,pt
rol
faddl
iret
xchg
cmp
xor
fprem
sti
jmp
clc
enter
ret
cmp
std
cmc
loop
cld
loop
test
jecxz
hlt
test
stc
cmp
movl
imul
out
rcl
ss
cmp
lret
cmp
test
fadds
out
and
out
aam
int
int3
rcl
sarb
sti
mul
incl
xlat
in
fucomi
cld
cmp
cmp
cmp
xor
ror
idiv
cmp
out
int
test
sti
jmp
test
iret
std
out
into
in
xor
div
leave
dec
into
shr
sti
fst
cmc
cli
repz
mov
fcmovu
loopne
mov
fdivr
xor
neg
fstp
std
cmp
loope
aad
faddl
fsubr
xchg
xchg
mov
cmp
in
cmp
loop
fdiv
shl
call
ffreep
out
nop
repnz
ret
xor
out
fdivl
sarb
sar
filds
fmulp
out
mov
icebp
hlt
in
in
ljmp
lret
cmp
loope
jecxz
ret
fildl
into
mov
adcl
aas
cmp
addl
call
lret
faddl
out
aam
cmp
shr
incb
stc
lret
leave
leave
orb
xchg
xlat
shll
aaa
aaa
out
call
in
stc
roll
in
out
jecxz
lret
lea
out
aad
in
repz
cmp
flds
std
xchg
ljmp
jecxz
in
mov
stc
xor
lock
xor
lret
fcomp
testl
test
loope
jmp
fcomp
in
idiv
ljmp
fyl2xp1
hlt
or
enter
out
mov
hlt
ror
ret
sti
xor
das
xlat
lret
fdivr
and
test
and
aam
rorb
loope
into
xlat
ret
lock
fidivrl
fstp
jecxz
clc
fadd
test
test
mov
in
fcomi
cli
sbb
ret
iret
fcompp
aad
loope
xlat
neg
fmuls
fsubr
repz
sti
shl
fucomip
int
out
repz
aam
loopne
xchg
stc
lock
test
cmc
mov
jmp
leave
xor
icebp
aas
cld
sar
xlat
sbb
fadd
mov
in
fdivr
out
in
mov
cli
jmp
repz
ffree
ds
out
fndisi(8087
fldln2
enter
nop
icebp
or
in
test
xor
in
aas
cmp
cmc
test
out
repnz
call
repz
shlb
ror
jmp
sti
rolb
rcl
mov
idiv
mov
rorb
div
xlat
cmp
int
lret
lret
rcl
icebp
ret
cmp
ret
xchg
incl
iret
in
lret
in
fsubr
in
aas
lret
aas
xor
xlat
sbb
aam
ljmp
out
imul
xor
jmp
cmp
sarb
cmc
sbb
out
mov
aam
jmp
lret
mov
mov
cmp
je
mov
orl
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
jmp
rcl
rcr
fst
xlat
xchg
sbb
shl
mov
jle
add
aam
iret
aaa
int3
sarl
repz
cmp
aad
ret
lret
in
lock
adcl
xor
fcomip
testl
sti
out
fmull
ss
in
sub
out
sarb
lock
fnstcw
xor
mov
or
xor
ss
shr
repz
repz
fxch
iret
loop
rolb
xlat
in
call
ret
lret
xlat
in
lret
fmul
fdivs
aas
iret
sbb
sti
in
in
aaa
shl
out
std
int3
lock
aam
aad
loopne
ret
aad
stc
faddp
icebp
lret
rcr
enter
xor
stc
xor
cld
cld
out
loopne
jecxz
xlat
iret
fincstp
jmp
stc
cmp
call
into
rcl
rcl
xor
leave
aam
loopne
rcl
sbb
out
in
lret
in
out
iret
mul
xor
cmp
fcomi
call
out
faddl
out
xor
jmp
xor
int3
jecxz
les
jecxz
or
out
fmull
xor
xor
cmp
aam
aas
aas
fldl
aam
ds
xchg
out
in
aad
ljmp
lret
ror
loop
out
test
hlt
frndint
icebp
sti
icebp
orb
jecxz
out
repz
out
loopne
in
loopne
fcomp
ljmp
rcr
in
ror
cmp
fcmove
in
fnstsw
aaa
iret
std
not
loope
mov
mov
stc
int3
mov
jmp
xor
repz
cld
fidivrs
fnstsw
jecxz
mov
loop
xchg
cld
out
mov
int3
cmp
aad
cli
clc
addb
fadd
in
rcr
test
mov
nop
jecxz
icebp
mov
cmp
xor
shr
roll
clc
mov
out
cld
mov
cld
addl
out
cli
jmp
fstpt
cmp
fsub
ds
aas
fcmovb
xchg
in
fucomi
roll
stc
lret
shl
aaa
imul
int
repnz
stc
jmp
sti
fadd
sti
ftst
orb
xor
cmp
out
aam
hlt
jmp
cld
out
or
test
cld
test
xor
lret
xor
enter
clc
in
addb
in
xchg
lea
out
repnz
out
jmp
fcos
cmc
xchg
mul
out
std
incb
aam
in
ret
int
cmp
in
icebp
jmp
cmp
cmp
fsub
xlat
sti
orl
xor
loop
icebp
ljmp
repnz
aam
sbb
loopne
xchg
in
leave
idivb
fcmove
fsub
into
lock
xlat
xor
out
test
int
call
test
xor
sar
div
addl
test
fiaddl
repnz
test
pushl
iret
loop
fdiv
sti
xchg
loope
mov
rorb
aad
lret
cmp
lret
iret
aam
iret
cmp
into
rcr
adc
xchg
enter
ljmp
cmp
out
leave
ljmp
in
sar
leave
fmulp
mov
xchg
out
ljmp
xor
ljmp
call
xlat
lret
call
push
aad
ret
iret
shl
cmp
xor
loopne
loop
mov
fdiv
hlt
addb
fdiv
enter
ljmp
cmc
cli
loopne
aas
jmp
repnz
in
lret
xor
lret
cmp
in
shl
shl
aam
leave
out
lret
mov
out
into
fcmove
iret
shr
xor
jecxz
sti
icebp
sub
in
in
in
fmulp
xchg
mov
call
out
cmp
xlat
enter
repnz
repnz
in
mov
orb
sbb
add
arpl
decl
call
mov
add
add
stos
cli
push
es
mov
mov
mov
jmp
rcl
mov
aad
sti
adc
mov
jg
roll
jle
out
jecxz
fcmove
int
loop
rcl
sar
aaa
cmp
ret
les
fcomp
call
xchg
shll
shl
aad
std
cmp
sbb
clc
call
xlat
loopne
popl
aad
xor
fyl2x
icebp
enter
sti
ret
in
rcr
loopne
leave
test
jecxz
out
xchg
out
nop
rcll
loop
cmp
out
iret
lock
iret
shl
fdivr
jecxz
loop
addl
loop
les
divb
into
iret
lret
std
ret
icebp
mov
fimull
loop
jmp
xchg
ror
shl
jecxz
rcr
cmp
in
lock
leave
shr
jmp
aad
in
aaa
call
into
into
cmp
xlat
fldl
in
in
int3
out
jmp
out
loopne
ret
repz
xor
repz
iret
fcomip
out
fiadds
fucomip
loope
lret
xor
sub
sarl
fnstcw
jmp
ss
faddp
sarb
fld
fisttps
ljmp
xor
jecxz
out
aam
ljmp
test
call
lret
jmp
jecxz
fucomip
int
lret
fdivrp
cmc
std
jecxz
aas
sar
cmpl
jecxz
cmp
out
xchg
lret
repz
lret
xor
fst
out
fmul
loopne
xlat
in
sti
in
out
mul
mov
loop
xchg
shl
fdivr
enter
idiv
shl
repz
test
div
loope
rolb
call
xlat
fsubr
lret
int3
xlat
aad
fcom
inc
jecxz
mov
in
into
mov
out
xchg
xchg
clc
xor
out
aad
dec
repnz
cmp
rol
std
jecxz
in
int3
shl
jecxz
icebp
int3
repz
aaa
std
idivl
sti
out
or
jmp
xlat
xlat
nop
xor
xchg
loope
lea
icebp
in
stc
aaa
icebp
jmp
ret
loope
test
stc
filds
fildl
enter
ss
shl
iret
sti
stc
leave
jecxz
fcmovnu
in
mov
loopne
ror
mov
enter
out
into
clc
imul
cmp
jecxz
sti
ret
adc
les
cli
mov
fisttps
aad
repz
iret
lret
lret
into
fdiv
repnz
in
int
enter
xchg
lock
sub
out
ror
aam
ds
fcmove
aad
xor
std
fcmovbe
fiaddl
int
jmp
push
fadd
fdivs
repnz
out
cli
jecxz
fld
loop
fucomip
out
xchg
dec
ret
ror
iret
int3
shr
fpatan
std
fld
fsub
lds
in
mov
cli
ljmp
hlt
loop
xor
ss
aam
ljmp
not
mov
nop
lret
icebp
mov
fdiv
rcr
icebp
iret
xor
and
ret
jmp
lock
jmp
in
cmp
cmp
aad
sarb
xor
vpaddusb
ljmp
sar
hlt
adc
lret
fidivl
xor
repz
les
fmull
repz
sarl
iret
shll
cmc
imul
dec
call
fcomp
in
std
aad
jecxz
int
mov
jmp
das
cli
lock
ror
fbstp
repz
rolb
loop
lret
loopne
stc
in
lret
out
neg
ljmp
cld
in
icebp
fcomp
std
test
fcmovne
jmp
jmp
std
ljmp
cmp
int
int
sti
xlat
jecxz
loope
jecxz
clc
in
std
int
cld
std
leave
xchg
repz
cmc
fsubr
das
out
int3
loopne
cmp
ftst
cmp
icebp
movl
jecxz
lea
div
repz
clc
sar
fxch
cmp
cld
in
rol
mov
lret
mov
loop
shl
enter
enter
aad
lock
sti
aad
mov
add
cmp
rcll
aaa
in
cmc
fidivs
mov
xor
mov
add
cmp
jmp
rol
lret
fstp
aad
dec
jns
shlb
jg
roll
jle
loopne
aas
test
rol
clc
fmuls
mov
xchg
xor
aaa
cmp
ss
std
call
neg
loop
iret
in
in
loopne
enter
aad
rol
leave
jmp
cli
aaa
cmp
cmc
cld
loope
jecxz
mov
xor
ljmp
fmul
out
loope
lock
clc
loop
ret
leave
int
in
addb
fcomi
fyl2xp1
lock
lret
in
cld
in
sti
leave
out
jmp
xchg
out
in
sub
in
neg
cmp
fimull
stc
addb
clc
loope
out
stc
cmp
xlat
into
lock
hlt
rcr
loope
mov
mov
fcomp
lock
fcmovb
int
shl
hlt
cli
std
cmp
cmp
out
aad
in
lret
loopne
test
test
into
fcmovne
fucomip
rcr
std
call
incb
xchg
into
in
das
xor
icebp
fucomi
cmp
cmp
out
stc
std
in
iret
iret
test
ret
ret
jmp
cld
int
fcomip
lock
ret
ljmp
fildl
orl
fiadds
fsubp
lret
stc
leave
ljmp
cmp
jecxz
out
aam
in
jmp
mov
loope
xchg
int3
leave
in
fyl2xp1
not
aad
sti
repz
les
fisttpl
in
in
in
roll
cmp
cmp
aaa
sar
fucomp
shl
fadd
mov
nop
loopne
addb
out
rcl
xor
fcmovne
ror
fsubr
fistpll
stc
std
cld
clc
dec
out
loopne
repz
in
xor
repz
enter
int3
rcr
xchg
test
iret
dec
test
in
div
cmp
lret
fdivrp
xlat
test
adc
fiaddl
jmp
fisttpll
divb
out
fcmovnbe
cmp
cmp
clc
incb
adc
sub
loop
out
cmp
fidivrs
testb
out
ffree
lock
loopne
xchg
in
iret
into
leave
jmp
loopne
ret
repz
test
rolb
int
repz
shr
les
fstpt
ljmp
rol
ljmp
fcoml
xchg
out
enter
jmp
cmp
into
fndisi(8087
roll
enter
std
xchg
lret
bnd
ror
divl
int
ret
sti
fndisi(8087
clc
test
xlat
fmuls
xchg
icebp
xchg
in
shl
xor
in
cli
repnz
jmp
into
repnz
fcomip
test
leave
fisttpll
xchg
into
icebp
jmp
sti
cli
xor
aas
cli
shl
aas
fdivrp
aas
repz
xchg
mov
rcl
out
in
repz
jecxz
bnd
test
mov
out
out
test
in
shr
enter
aam
cmp
stc
xlat
test
fcmovb
cld
out
test
mov
in
mov
int
aam
repz
jmp
not
xlat
clc
aam
hlt
aam
in
neg
call
lock
out
xlat
cmp
leave
fldl
xchg
fidivrl
orb
repnz
xchg
mov
adc
iret
lret
leave
ljmp
hlt
ds
mov
mov
mov
xlat
lret
in
call
fildl
fsubp
lret
jecxz
loop
icebp
in
hlt
cmp
fcmovu
out
leave
cmp
lds
leave
loop
lret
mov
ljmp
cld
call
lret
loop
cmp
loop
jecxz
mov
or
lret
lock
into
out
xor
rcl
xor
repz
cli
cld
cmp
sar
lret
jecxz
decb
nop
out
xor
fucomp
std
clc
loope
neg
fucom
hlt
idiv
fsub
cld
jecxz
rcr
xchg
je
mov
xor
add
jmp
iret
aad
aad
aad
aad
push
push
mov
fildl
jle
add
loopne
lock
cmp
into
leave
cmp
fdiv
sti
add
mov
lret
mov
repz
lret
cmp
cmp
not
fucom
vpmuludq
cld
mov
sub
jmp
ror
fcomp
fsqrt
in
cmp
in
ret
jmp
cmp
jmp
jmp
into
rorl
leave
xor
aam
fsubr
ds
adc
test
hlt
cmp
out
xchg
int
out
xor
shr
sti
lret
aad
ljmp
aad
out
ljmp
int3
jmp
out
das
imul
leave
in
hlt
sti
sar
aas
aad
fdivrl
hlt
sti
or
stc
out
fisttpll
fcmovnu
ljmp
lds
dec
test
iret
std
mov
and
out
hlt
loope
aam
aam
call
rcl
lock
test
clc
roll
in
rcr
fmul
div
in
aaa
sub
shl
xchg
leave
sti
into
sbb
sbb
xchg
mov
xor
repnz
idivl
lret
testb
jmp
in
loope
icebp
xchg
lock
hlt
fidivrl
rcl
neg
out
fmul
aas
cmc
in
repz
xlat
jmp
test
into
test
fnstcw
int
repnz
cmp
hlt
out
jecxz
rcl
mov
std
sub
xabort
imul
int3
in
fcomip
dec
xor
roll
call
mov
fimuls
out
aaa
divb
ss
in
loopne
loope
loopne
xlat
jmp
cmp
dec
lret
mov
das
ljmp
repnz
std
cmp
loope
fchs
fisttpl
mov
clc
out
out
out
clc
cli
fdivr
loope
test
cmpb
test
mov
call
mov
cmp
fadd
out
lock
aam
cmc
fcmovu
in
repnz
and
fldl
xorl
rcl
out
aas
ljmp
cli
loopne
mov
in
ret
mov
mov
in
ret
stc
in
sar
icebp
xor
xlat
in
ret
sti
rcr
fadds
int3
sbb
icebp
or
cli
cmc
repnz
ljmp
out
fdivrp
rcl
ljmp
xchg
enter
aam
ljmp
clc
call
in
into
out
xchg
out
lret
in
cmp
hlt
xlat
jmp
out
ds
xlat
hlt
rolb
test
int3
mov
int
sti
icebp
lock
lret
cli
sti
ffree
jecxz
out
cld
in
in
xchg
int3
jmp
icebp
out
cmp
xor
test
cli
out
mov
xor
das
clc
xor
rcl
leave
jmp
loope
fildl
out
lock
xchg
repz
shll
ret
repz
out
shr
hlt
cmp
out
jecxz
rcr
out
movl
test
aam
jmp
cmc
sub
cmp
int3
out
ds
shr
mov
icebp
xchg
incl
repz
xor
fldl
sarl
repnz
fldl
lret
nop
hlt
aam
stc
xor
iret
in
out
aas
ljmp
std
sti
cmc
mov
loopne
fiadds
aas
xor
stc
hlt
xlat
lock
iret
xor
repnz
aam
jmp
dec
nop
jmp
clc
xor
out
lret
ror
cmp
repnz
ffree
lret
fmulp
call
int3
lret
aaa
shr
fcompp
ds
loope
inc
lock
cmp
enter
test
repnz
cmp
aaa
sti
xlat
xlat
out
shl
cli
xchg
clc
in
in
out
mov
sti
in
cld
into
push
shl
xor
rcr
aas
lret
std
shl
xlat
ret
rol
adc
mov
in
mov
xchg
rol
ljmp
fcmovnu
out
fdivr
test
mov
mov
mov
mov
xor
add
jmp
ror
rcl
mov
sbb
inc
jg
roll
jle
fadd
test
or
lock
shl
int
lock
jmp
hlt
out
cmp
rol
testl
xchg
jmp
loopne
aam
out
out
out
cmc
fdiv
aad
xchg
lret
into
out
ljmp
in
lret
iret
xor
call
cmp
push
inc
sti
jmp
jmp
jecxz
test
add
out
fdivs
icebp
cli
aad
fcmovne
lret
jecxz
sti
mov
loopne
out
call
cli
int
cmp
fdivr
jmp
lock
jecxz
decl
xchg
ret
into
rcl
fdivrp
lret
in
jmp
cmp
neg
leave
fdivrp
test
in
jecxz
cli
leave
orb
cmp
into
lret
int3
fdiv
shl
lock
clc
fcomp
cld
ds
decb
xchg
xchg
int
loope
vshufps
xor
lret
int3
incb
ret
test
dec
nop
jmp
leave
lock
out
ror
cli
clc
shl
in
fdivr
sub
hlt
repnz
out
int3
xor
shr
iret
xorl
jmp
xchg
xchg
icebp
test
clc
into
xor
out
fdivrs
cmp
xor
fsubrp
std
in
repnz
jmp
cli
cmp
leave
cmc
out
jmp
sti
neg
xlat
cld
test
lea
call
fdivs
in
hlt
in
vpsllw
aaa
jmp
int3
repnz
neg
ret
loope
xlat
int
lret
xchg
int
test
xor
cmp
loope
xlat
rcr
in
cli
out
call
test
loope
fdivs
ljmp
std
rcr
fdiv
into
neg
sbb
fiadds
std
call
xor
xlat
xor
shr
rol
out
mov
mov
out
repnz
adc
int3
jmp
xor
cmc
shll
loope
in
sar
xchg
testl
ss
fsub
fpatan
fcmove
out
fnclex
ret
sbb
movl
aas
cmc
repnz
xor
int
aad
aad
fcom
fsub
sti
in
sub
mov
call
repnz
not
clc
xor
sarb
sarb
shr
int
out
lret
imul
mov
out
mov
mov
out
sub
sti
ret
clc
fdivrs
idiv
push
ret
lock
mov
out
call
xchg
out
lret
cmp
ljmp
out
aad
loop
jecxz
loop
mov
loope
test
jecxz
lock
fsubrp
jmp
lret
sbb
testl
test
stc
ss
shl
cli
fcmovne
ljmp
testb
std
sti
cli
in
aam
inc
jmp
sti
aas
fxch
hlt
iret
add
fmulp
out
test
fisttpll
sar
test
jmp
cmp
aad
rcl
mov
cmc
in
loop
loope
addb
ljmp
std
fsubrp
addb
jmp
aad
shl
mov
cmc
iret
hlt
lret
xlat
cld
icebp
jmp
test
loop
mov
lea
mov
loope
jecxz
out
xor
loopne
out
into
cli
aam
ds
xlat
loop
fcmovne
lock
repz
rolb
aam
cmp
dec
into
fcomi
ds
aas
xchg
cmp
in
int3
fisttpll
rolb
lret
fcomp
cmp
lret
fdivp
loope
in
aam
sarb
mov
out
call
fimull
out
repnz
cmp
ljmp
ffree
xchg
test
loopne
int
loopne
cmp
das
aaa
cld
clc
repz
int
cmp
fcom
stc
in
movb
xchg
xchg
repz
cmp
lret
icebp
in
ret
rcl
adc
out
jmp
frstpm(287
mov
icebp
xchg
enter
movzwl
mov
xor
lea
add
jmp
rcl
aam
sarb
xchg
sbb
fimuls
add
jle
add
aaa
sti
jmp
shl
sbb
fiadds
fcmove
jmp
repz
xchg
out
shl
fdivr
int3
clc
stc
xor
cmp
cmp
enter
add
loop
lret
loopne
out
in
repnz
fucomi
fsubr
cmp
vpsrlw
fadd
cli
fiaddl
xchg
testb
std
fucom
cmp
cld
cld
and
clc
sti
hlt
test
int
cld
fisttps
out
jecxz
lock
shr
jmp
int3
lret
out
cli
cmp
cmp
jmp
rolb
out
aad
fdiv
sar
cmp
in
test
ljmp
xchg
lret
xchg
aam
int
in
in
out
sti
cmc
out
fdivr
sti
xor
ds
mov
test
vpand
in
out
les
aaa
aad
into
iret
repnz
int3
sbb
xlat
jecxz
clc
jmp
stc
fiaddl
repz
int3
fxch
fcom
ljmp
aam
jecxz
test
cli
int3
std
fmul
into
fcmovbe
std
mov
shr
das
repnz
sar
xor
sti
fildl
enter
cld
repz
aam
lock
ds
cmp
incb
nop
in
aam
xchg
loop
int3
xor
repnz
jmp
roll
stc
sti
fldl
in
xchg
cmp
xor
loope
sbb
in
xchg
sar
mov
lock
sub
div
repnz
enter
clc
out
out
xlat
out
in
fsub
lock
in
test
out
xlat
repz
out
int3
rolb
aad
loop
out
in
std
shl
aam
loope
out
cs
aas
stc
repnz
xlat
aad
loope
mov
stc
cli
xchg
sti
xchg
xchg
int
rol
not
test
repz
aas
out
clc
sbb
jecxz
leave
lret
in
lock
iret
fld
out
fcomp
fcmovne
sarl
loope
and
aad
in
mov
loope
in
aam
stc
rcl
fdiv
icebp
aam
and
loop
fcmove
out
int
int3
lret
repnz
lock
dec
fcmovbe
add
rcl
fcomp
sti
stc
xlat
fmulp
int3
leave
mov
iret
out
icebp
shl
clc
lret
std
cmp
out
std
fdivrs
std
repz
mov
xchg
jmp
hlt
cli
fcomi
cmc
lret
sti
adc
clc
test
loop
les
add
icebp
cmc
clc
cmp
xlat
stc
in
int
repz
addl
loopne
mov
enter
neg
int
into
rcl
call
addl
shr
ret
lock
dec
test
fadd
rcl
out
in
repnz
rcl
leave
sti
lret
rcl
loope
cmp
fiadds
mov
fimull
out
xchg
rol
int3
shlb
call
rcr
rol
aad
ljmp
test
lret
into
div
ret
test
leave
ror
std
loope
cmpb
std
fldl2t
mov
test
fsubp
vpmulhuw
cmp
xor
jmp
cmc
std
xchg
cld
mov
nop
sbb
lret
mov
enter
xor
repz
sar
jecxz
rorb
ret
mov
sar
aam
clc
out
jmp
int
aas
cmp
fadds
lret
int3
lret
nop
fildl
in
out
sub
sub
test
loop
lds
jecxz
sar
mov
aam
loopne
hlt
jmp
sarl
loope
cmp
fdivrl
addl
loop
xchg
fldl
aam
rcl
iret
aad
sti
ror
icebp
loop
cmp
fstpt
ror
mov
xchg
cld
jecxz
xor
std
out
fdivrs
adc
stc
fcmovb
loop
icebp
cmc
lret
sti
mov
mov
mov
jmp
rcl
int
int
fstl
dec
push
aam
jg
roll
jle
ffreep
rcr
in
xchg
out
in
cmp
shr
std
adc
lret
xlat
int
rcr
out
jecxz
out
iret
hlt
ret
bnd
xor
test
sar
lret
loopne
cli
faddl
roll
aam
stc
stc
out
aaa
cmp
cmp
fcmovbe
into
rol
sti
idiv
mov
fcmovne
lret
cmc
adcl
ror
out
aad
int3
in
icebp
in
clc
cmp
ret
test
ljmp
iret
xchg
ret
fcmovu
in
jmp
lret
neg
in
addb
cld
fdiv
or
mov
mov
aad
clc
out
int3
call
fdivrs
in
in
stc
fcmovnb
ret
loopne
call
fucom
xchg
std
lock
mul
les
shr
cmp
in
jmp
sarl
fadd
in
mov
mov
iret
in
cmp
fcmovu
out
fdivr
in
xlat
cmc
fst
cmc
lock
xlat
test
in
jmp
repnz
call
loope
in
jmp
clc
cmp
enter
sarl
les
jmp
loope
xchg
int
out
enter
sti
lret
sarb
in
cld
fsubr
xor
fcomip
cld
mov
mov
loope
repnz
xor
lock
into
int
rolb
mul
jecxz
iret
in
fdivrp
xchg
hlt
hlt
repz
lock
aad
in
rol
sub
loopne
fmull
in
jmp
lock
cmp
sarl
hlt
rol
loop
in
testb
lock
jmp
test
xor
aam
clc
loopne
iret
loope
aam
cmp
cmp
test
fimuls
iret
lds
icebp
repnz
rcl
fmulp
cmp
aam
fninit
xor
ljmp
xchg
sub
enter
int3
jmp
repz
fcompp
fsub
call
cmc
jmp
fimull
in
mul
repz
ror
xor
in
sti
rcl
loopne
hlt
enter
in
xchg
sar
xchg
leave
repz
ds
xlat
ds
orl
add
xchg
mov
shr
imull
cmc
jmp
lock
cmp
leave
jmp
aad
call
xchg
xchg
mul
xor
xor
xor
int
rolb
aam
aas
ret
idiv
addb
in
ret
hlt
call
fnstcw
fistpll
icebp
loop
hlt
test
aad
lret
mov
out
jmp
clc
in
jecxz
lret
cld
xor
fstpt
testl
int3
mov
out
rol
jmp
ror
fildl
in
repz
xlat
fcmovnb
out
xchg
mov
jecxz
leave
rcl
xor
cmp
cmp
into
cld
cli
out
clc
loop
hlt
ret
rorl
call
out
rcl
das
cmp
in
cmp
in
cli
int
movl
loopne
filds
loop
into
in
fsubr
fcomp
ljmp
mov
repz
cli
in
lock
ret
ret
hlt
cmp
cmp
jmp
shl
aam
lret
in
iret
jmp
mov
bnd
fidivrl
repz
stc
hlt
fcmovb
repz
incb
jecxz
out
out
ljmp
xor
out
cld
fst
repnz
div
repz
rcl
orl
call
in
frstpm(287
jmp
shl
xor
test
ds
call
stc
fcoml
xchg
in
int
int
xor
cli
iret
in
rcr
shl
ret
xchg
out
iret
shl
xchg
into
enter
lock
div
out
loopne
into
sarb
jecxz
test
icebp
repnz
lret
stc
clc
sub
loopne
aad
fmul
lock
filds
fxtract
cld
les
cld
int3
leave
sti
mov
mov
call
rcl
fstp
in
xor
loop
sti
hlt
fdivrp
fisttps
sar
xchg
int
fcom
sarl
stc
clc
fnsave
roll
imul
jmp
lret
ret
enter
fcmovnu
dec
lcall
cmpsl
push
jg
roll
jle
fstpt
out
cmp
rcl
ds
mov
shlb
ret
call
cmc
icebp
aas
loopne
not
lds
ret
mov
lock
mov
das
leave
repnz
imul
cmp
out
fdivr
ret
fimull
cld
in
sub
shl
shr
int
sarl
cli
in
sti
sti
shl
sbb
xlat
test
test
repnz
shr
int
ret
iret
shll
in
cmp
clc
stc
cmp
dec
cmp
jmp
jmp
ret
ljmp
xor
cld
cs
out
cmp
sar
sarl
xlat
fadds
xchg
ret
enter
sarl
int3
shl
sar
idivl
or
jmp
test
into
loopne
mov
fxam
lret
out
ss
into
cmp
xchg
xlat
fsub
mov
loop
and
jmp
in
leave
cmp
lock
call
into
fcmovnb
aad
out
ret
jecxz
nop
mov
and
mov
enter
cmc
xor
xlat
and
enter
xor
loope
mov
icebp
xchg
mov
lret
aad
aam
adc
stc
shl
sti
neg
repz
ror
fsub
fldl
cmp
cli
jmp
shl
in
rolb
test
mov
mov
out
ror
in
xor
jecxz
cmp
aad
cmp
rcl
cmp
in
ret
leave
xor
ss
lret
sti
repz
cmp
out
out
mov
fcoml
xchg
loope
xor
xor
icebp
call
aam
xchg
ds
clc
fistpll
xchg
into
out
out
in
xor
das
cmp
divl
cld
cmp
or
mov
fadd
loop
mov
out
into
into
out
fucomip
not
aad
lret
into
repnz
lock
rorb
cli
call
loopne
icebp
loope
xor
aaa
xlat
repnz
loopne
fnstsw
sar
ljmp
lret
xchg
enter
into
out
fsubrp
cmc
loopne
cmp
cmpl
xchg
fdivrp
mov
lea
xchg
xchg
jmp
aam
cmp
cli
sarb
std
out
lock
loop
mov
mov
fsub
nop
int3
in
in
test
int
cli
jmp
aam
add
icebp
loopne
lret
call
adcl
clc
xor
cmc
sub
clc
repz
cmc
in
sub
neg
in
test
cmp
xchg
int
cmc
imul
idiv
icebp
lret
jmp
fdivr
loopne
mov
call
out
jecxz
aam
int3
enter
xor
rcl
icebp
cmp
fcmovu
icebp
jmp
lret
in
fmull
cmp
xlat
aaa
aas
xor
xor
fidivrl
jecxz
xchg
repz
aas
mov
sub
mov
in
jecxz
leave
ds
in
and
addb
out
jmp
enter
ljmp
cmp
out
sarl
fcomp
fnstsw
cmp
cli
decb
aam
iret
loop
hlt
sub
shr
into
cmc
loopne
repz
ds
call
mov
int3
enter
ror
into
sti
stc
jmp
rcr
cld
test
cli
leave
fildl
in
not
in
out
in
fstpt
cmp
rcl
out
xchg
fucom
ret
flds
test
in
int
ret
lock
hlt
ss
xor
shl
leave
idiv
call
mov
aad
out
cmpb
xlat
ret
bnd
sbb
out
cld
out
int
int
jecxz
in
out
jmp
cmp
aad
cmp
xchg
ffreep
in
enter
fcmove
xchg
cmc
loopne
shl
sub
rcr
cmp
into
rcl
fadd
cmc
rcl
cli
loope
lret
out
int3
out
jecxz
in
aaa
icebp
fcmovnbe
imul
hlt
shr
sar
hlt
in
shl
repz
sub
jmp
sub
jmp
lret
mov
fildl
adc
jp
jg
roll
jle
icebp
rolb
in
std
out
lret
div
clc
xchg
cld
mov
in
in
or
in
jmp
das
leave
aam
repz
cmp
out
adc
aad
loop
jmp
stc
fdiv
out
int
fucomip
jecxz
repnz
repnz
aad
shl
loop
rcl
sti
mul
std
test
or
out
iret
int
ljmp
int3
clc
in
into
in
sti
adc
stc
xbegin
xchg
loope
xchg
ret
cs
repnz
into
faddl
out
mov
mov
test
loop
shll
shr
into
aam
ljmp
xchg
call
mov
sti
lret
lret
fucomp
shl
ret
out
lret
cmp
cmc
cmp
hlt
hlt
test
call
ffreep
jmp
call
ss
lds
out
cmp
fldl
in
aad
int3
fmul
xor
jmp
repnz
fmul
leave
cmp
hlt
cmp
icebp
fucomi
rcr
jecxz
not
xor
ret
idiv
int3
mov
test
out
shl
xor
jmp
aas
out
std
out
fadd
in
in
lret
in
cmp
in
and
sar
out
stc
lock
icebp
out
fchs
fcmovu
shl
aam
cld
faddl
test
in
cmc
ljmp
cmpb
shr
int
cld
ljmp
rcl
aaa
cmp
hlt
in
lock
ret
iret
enter
out
int
sar
out
icebp
mov
out
int
icebp
jmp
lock
fdiv
aam
cli
ret
leave
out
xchg
into
sti
leave
addl
sti
in
sar
shl
hlt
mul
cli
rol
mov
leave
loop
aas
fimull
or
xor
clc
rcl
out
int3
xlat
cmp
aad
clc
ror
ds
hlt
fsub
jmp
mov
int
lret
out
ss
loopne
rcr
test
shl
fsubrp
out
mov
rol
stc
out
jecxz
clc
lock
clc
fiaddl
addl
test
fsubr
hlt
cs
ljmp
aas
clc
test
std
repnz
test
loopne
in
loop
fadd
iret
loop
cmc
call
out
out
lret
loope
clc
movb
jmp
out
adcb
jmp
lret
cli
loopne
adc
adc
cmc
idiv
in
leave
call
xchg
mov
into
shl
jmp
ljmp
jecxz
ret
out
test
clc
test
xchg
in
call
repz
bnd
in
ljmp
mov
test
test
xor
repnz
out
cld
jmp
cmp
sti
into
repnz
repz
xchg
cld
fmulp
lret
xchg
xchg
in
out
stc
leave
cmp
lock
inc
stc
xchg
out
in
vprotw
div
clc
sarb
in
hlt
ljmp
fmul
xchg
mov
xchg
repz
jmp
aad
aaa
aaa
xor
lock
rol
ret
loop
ljmp
in
in
into
cmp
int
cmp
out
xlat
loopne,pt
fstp
loope
ret
shl
test
lret
stc
fildl
pushl
xor
in
jmp
fucomp
aaa
fcmovnu
lret
test
clc
test
fsubrp
into
out
std
in
leave
div
xor
cmp
ds
clc
div
test
xlat
loopne
mov
ret
cli
mov
clc
out
xrelease
lret
out
xlat
in
lock
in
faddl
imul
fdivrp
cld
out
xchg
into
xor
in
cmp
rcr
enter
repnz
test
rcr
ret
out
jecxz
adcl
clc
ljmp
in
jecxz
cmc
mov
mov
call
in
cmp
out
xor
cmp
fstpt
stc
clc
xchg
rol
addb
orb
mul
cmp
aam
fdivr
icebp
ret
mov
jmp
mov
mov
jmp
int3
int
fstp
fstp
mov
in
cmp
int
jg
roll
jle
test
out
cmc
leave
mov
clc
sbb
lock
out
cmp
out
lret
ds
int3
in
ret
jmp
cmp
stc
mov
test
or
ss
cmp
sar
ret
ds
jmp
in
mov
repz
out
in
repz
cld
cmp
cld
into
int
cmp
test
cli
cmp
int
shll
icebp
into
lock
addl
sti
enter
sub
sbb
repz
jmp
xor
push
cmp
sti
dec
fcmovu
fcmovne
loope
lret
mov
add
out
xor
aas
fdiv
fdivrl
test
cld
icebp
cmp
fisttpll
mov
in
cmp
sub
cmp
xlat
fdiv
repz
lret
cmp
sbb
test
mov
fndisi(8087
loopne
mov
fdivp
in
stc
in
into
enter
shl
into
jecxz
hlt
xchg
push
ljmp
in
lret
repz
xchg
fucom
in
cld
sar
xchg
out
out
icebp
shr
int
fdivrl
xor
in
cmp
into
aad
ret
fisttps
xchg
sub
in
jmp
sarl
out
aad
lret
repnz
hlt
in
leave
int3
in
call
rclb
icebp
out
cmp
cmp
loop
jmp
std
in
fdivr
xchg
shl
xor
stc
hlt
aaa
in
and
sar
aad
fsub
out
mov
test
aam
rcl
ret
lret
in
hlt
aad
icebp
jecxz
hlt
clc
aad
ffree
sti
out
in
mov
xchg
int3
out
cmpl
jmp
pushl
in
rcr
not
cmp
xchg
loop
cld
cld
in
in
cmp
fdivr
leave
cmp
loopne
sar
hlt
in
call
fadds
loop
xchg
call
in
std
aaa
int
shl
aad
fcmovnb
shl
in
jmp
popl
shlb
fidivrs
cmp
loop
aas
lret
fstl
test
xlat
cs
ss
adc
loop
in
ds
mov
out
out
loope
enter
out
icebp
cmp
repnz
fdivrp
in
out
in
rcr
lock
hlt
jmp
xor
int3
repz
std
cmp
idiv
repz
mul
xchg
fadd
mov
sub
cld
mul
xor
shll
cmp
cmp
aam
sar
hlt
dec
incb
in
into
aam
xlat
cli
cmp
loope
in
mov
cmc
lret
mov
out
in
out
sub
iret
test
int
repnz
out
lock
rcr
mov
in
jecxz
call
in
lret
fcmovnb
rcl
out
in
std
fmulp
rolb
loop
fsubr
xchg
mov
fldl
int3
ss
fdiv
fdiv
ss
idivl
rcr
clc
shl
neg
inc
mov
shl
mov
filds
cmp
shr
cli
leave
iret
in
xchg
out
rol
enter
enter
ljmp
lret
out
hlt
iret
repnz
cmp
ret
ds
shl
jmp
std
xchg
ficoml
ljmp
aam
sub
int3
jecxz
idivl
mov
jmp
xchg
xchg
lock
shr
sar
dec
cmp
rolb
fcmovu
out
stc
test
lret
subl
shl
not
fucomi
xor
cmp
rcl
std
enter
dec
xchg
lock
loope
in
int
idiv
call
cmp
icebp
sarl
fcmove
filds
int3
fcomi
orb
in
fcmovnbe
neg
rcl
shr
fcmovbe
ret
fucomi
xchg
ljmp
fstp
aas
cld
lret
rcl
loope
mov
fldl
lock
mov
jecxz
ret
fstpt
sti
je
mov
jmp
leave
rcl
ret
ffree
arpl
lea
mov
add
xor
cmp
aaa
cmp
fst
loopne
rol
aad
std
fmull
repz
adc
cmp
vpsllw
loop
cmp
fiadds
or
or
addl
cld
sbb
aas
rcl
iret
cmp
loope
addl
test
cs
fcmovnb
sar
cmp
clc
icebp
xor
repnz
jmp
in
stc
mov
sti
hlt
test
in
aas
leave
out
cmp
dec
rcr
iret
ror
out
fld1
movl
into
out
aad
sar
int
sti
lret
out
cmp
ffreep
ret
cmp
lret
cli
jmp
fildl
aam
aad
rcr
in
shl
aaa
cmp
stc
int
fcmovnbe
hlt
loopne
lret
addl
ret
rcr
jmp
stc
fcmovne
cli
out
fdiv
fnclex
ret
xchg
lock
xor
divb
ret
ror
shr
leave
fcomip
adc
loope
cli
cmp
call
rcl
in
cmc
cmp
std
cmp
out
aad
call
fisttpll
fisttpl
repz
out
into
cli
sti
loope
fcomi
test
out
test
testl
out
ljmp
fcmovnu
loope
jecxz
iret
repz
xchg
xchg
loopne
int3
in
out
test
nop
lret
int3
jmp
out
cmp
fsubp
in
cmp
stc
ds
jecxz
std
rol
test
jmp
fucomp
ljmp
enter
sti
fcmovnbe
xlat
repnz
xor
fst
int3
ficoms
lret
repnz
cmp
int3
stc
out
dec
cld
loopne
aad
lock
hlt
aam
loop
cmc
fisttps
xchg
push
fdivrl
repnz
shl
cmp
rcl
leave
loopne
fiaddl
xchg
out
icebp
cmp
xor
clc
test
fmulp
aam
sub
in
jmp
xchg
into
bnd
neg
leave
shl
jmp
filds
jmp
jmp
xchg
incb
fadd
clc
fld1
jmp
loope
shl
cli
clc
ljmp
lret
mov
jecxz
xor
xor
xor
not
xlat
repnz
addl
test
out
out
imulb
sarl
iret
xlat
sarb
cmp
aas
out
mov
jmp
fdivr
cmp
orl
cmp
in
iret
xor
fcomp
out
icebp
addb
out
xchg
addb
cli
fdiv
icebp
out
in
hlt
fcos
cmp
out
ret
aad
mov
dec
in
xchg
xor
repz
les
xor
ror
loop
ds
cli
out
ljmp
xchg
sub
out
iret
loopne
hlt
fdivrp
in
out
test
call
jmp
nop
iret
enter
fdivp
into
das
xor
cmc
in
cmc
cmp
fcomi
sarb
aam
jmp
sti
int3
int3
fucomp
leave
leave
shll
in
out
cld
rcr
loop
incb
mov
mov
leave
sti
in
mov
int
out
std
out
out
xlat
sar
out
neg
not
sti
xlat
jecxz
loope
in
fucomip
xchg
sar
in
cmp
ljmp
fprem1
add
shl
loopne
fsubr
loopne
adc
ret
in
cli
xor
cmp
loope
iret
aas
repnz
test
repz
xlat
into
xchg
xchg
icebp
loope
cmp
fcmovne
in
sarb
int3
jecxz
loop
div
cmpl
call
sub
loop
shr
aaa
cmp
iret
repnz
repnz
lock
leave
mov
shl
fmull
shl
lret
rol
not
fldl
loopne
repz
out
cld
leave
loopne
loope
iret
in
rcl
iret
out
out
sti
xor
fdivs
loopne
shl
aad
jecxz
out
int
aam
enter
icebp
ret
lret
out
lock
rcl
cmp
loopne
lret
push
xor
into
decl
add
add
rcl
rol
fcomp
lahf
mov
data16
jg
roll
jle
mov
shr
mov
out
hlt
xor
xor
into
cmp
shl
fdivr
out
shl
jecxz
testb
addb
out
aad
cmp
aaa
cmp
hlt
rol
aas
ds
vpminub
out
nop
rorb
int3
shl
xor
cld
lret
hlt
fst
iret
sar
fmuls
call
call
in
out
aam
cmp
fnstcw
incl
clc
stc
int3
int
rcr
lea
ror
shl
int3
stc
out
sar
int3
loopne
cmp
fimull
dec
call
leave
enter
aaa
cmp
aam
fcmovnbe
hlt
repnz
cmp
add
rol
lret
in
repnz
in
fidivl
cs
cld
cmp
cmp
iret
cld
cmc
test
lret
enter
lret
test
out
clc
call
int3
fnstsw
jecxz
sar
in
cli
ffreep
ficoml
enter
out
cs
repz
jmp
incl
enter
rcr
repz
in
in
xor
aad
cmp
in
out
hlt
sbb
enter
cmp
in
orl
int
fcmovbe
fdiv
sar
aaa
ret
mov
in
xchg
iret
cld
iret
inc
int
out
in
lock
aam
shl
loop
mul
test
in
into
dec
rcl
aam
enter
shl
cmp
jmp
repnz
jecxz
aas
loope
jmp
lea
in
out
ret
xor
stc
std
xor
not
loope
fadds
cld
fsub
addb
xchg
repnz
iret
xor
jmp
sar
jmp
jmp
fdivrp
in
mov
loope
into
sar
out
aaa
in
sub
xor
iret
test
aaa
xlat
ret
mov
cli
lret
out
jecxz
xor
addb
clc
cmp
or
hlt
xor
fmuls
lock
xchg
div
xor
out
rcr
rol
cmc
loop
ffree
test
loop
enter
fisttps
shl
call
aam
cmp
fmulp
std
mul
ret
or
out
enter
xchg
enter
in
aaa
loopne
inc
fdiv
loop
loopne
ret
test
in
fmul
repz
sub
in
in
aaa
xlat
lock
ror
aas
incl
test
sar
addb
repnz
neg
xor
sti
fcomi
fidivrs
xor
out
fucomp
aad
xchg
stc
test
lock
repnz
out
loopne
idiv
rol
sti
std
fucomi
repz
out
fstp
std
cli
in
incl
shr
repz
aad
std
ffree
clc
cmp
fsubr
cmc
and
cmc
in
cmc
xor
ror
cmp
xor
cld
rcr
repz
incb
sbb
jmp
in
xor
into
jmp
fprem
cmp
cli
shl
rcr
in
ljmp
ljmp
sti
imul
sar
fnstsw
cmp
addl
test
in
incb
imulb
cmc
int
in
cmp
aad
sti
in
fimull
in
and
xchg
repnz
lret
xlat
enter
sbb
repnz
mov
sarl
mov
lret
cmc
in
fsub
hlt
clc
xor
int
repnz
mov
in
std
decl
ret
repz
rcl
sti
cli
iret
fsubp
shl
xlat
hlt
in
loop
out
mov
in
std
out
call
clc
in
iret
hlt
fcmovnu
cmp
ret
test
adc
cmc
mov
fsub
in
sti
sti
repnz
xchg
xchg
mov
jmp
iret
fucomi
not
repz
aam
loope
xchg
lret
int
cld
out
rcl
fsub
xor
cmc
cli
out
sarb
stc
aad
xlat
lock
inc
xlat
hlt
fucom
mov
lea
lock
lret
lret
cmp
test
leave
mov
jmp
push
mov
sub
mov
push
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
jmp
into
aas
rol
rcl
aam
pop
xchg
and
ret
int
addr16
push
add
enter
out
ret
cmc
loopne
fdiv
mov
loopne
stc
cli
xchg
iret
rol
ret
shl
cmc
stc
sarl
repz
loop
fisttpl
filds
sub
repnz
vpsubusb
fcmovnb
cmpb
out
xor
rolb
xchg
xchg
aad
jecxz
lock
out
ljmp
loopne
cli
cmp
leave
jecxz
out
sbb
mov
mov
ret
xor
clc
jmp
in
clc
fsub
out
cmp
out
loope
mul
ret
xchg
out
jecxz
xor
cmc
cmp
iret
icebp
aaa
shl
repz
aad
shl
lret
std
iret
int3
mov
out
icebp
in
fdivr
repz
call
cmp
xchg
in
ffree
std
fucomp
cmp
rcr
hlt
aad
ss
leave
jmp
into
lret
filds
in
stc
lret
sub
jmp
out
into
iret
loop
ljmp
cld
fldl
enter
in
jmp
nop
loopne
mov
loop
fcomp
iret
hlt
int3
cli
flds
in
movb
xchg
mov
int
lret
aaa
aaa
cmp
lret
ds
inc
jmp
mov
out
ficoms
out
iret
xor
cmp
fcmovnu
icebp
push
aam
shl
out
xchg
fsub
lret
rolb
lret
cmp
jmp
repnz
test
hlt
out
test
loop
rol
fucomp
sub
shl
enter
lret
cmp
fildl
jmp
lea
out
cli
sti
xlat
xlat
std
fadd
cmp
loopne
sti
xor
mov
loop
popl
test
ss
lds
stc
aad
cmp
call
lret
vpor
cmp
repnz
cld
fadd
rcl
ret
aad
loop
ret
enter
in
repz
repz
mov
in
repnz
fcmove
test
cmpb
lea
iret
in
icebp
fcmove
aas
iret
hlt
xlat
int
cmp
fiadds
mov
shl
lock
aad
jmp
repz
test
cli
add
jecxz
sub
in
int
addb
in
xor
lret
hlt
shl
xor
out
xor
call
jmp
fmul
cmp
xor
cmpl
mov
xlat
testl
jmp
loop
ss
fdivrl
shl
int3
xor
shl
fucom
lret
sbb
in
repnz
xchg
bnd
jmp
lret
neg
adc
clc
cld
in
mov
call
lock
call
fptan
ss
icebp
loope
loop
repnz
in
fildl
fsub
enter
xor
leave
cmp
ret
test
loopne
fdiv
mov
imul
mul
cmc
cli
cmp
fxtract
lret
sti
cld
fdivr
sti
decb
repnz
xchg
out
sub
call
ror
frndint
in
xchg
stc
cmc
mov
out
enter
lret
mov
out
shl
cmp
call
test
enter
ret
loope
xchg
repnz
loope
aad
testb
aas
out
rcr
xchg
stc
fcmovu
lock
out
out
das
rol
ret
cld
iret
cmc
cmc
cmp
out
int
clc
repnz
call
loopne
lea
imull
ret
in
out
out
idivl
int
sar
icebp
ret
jmp
lret
jmp
test
call
iret
fincstp
icebp
fnstsw
clc
repnz
xlat
test
aad
loope
std
cli
cld
call
loopne
imul
div
fcmove
std
hlt
jecxz
jecxz
jecxz
ret
mov
ret
repnz
out
loope
aam
iret
stc
out
ror
shr
lock
jmp
in
lret
fists
ret
int3
clc
in
repz
icebp
cld
and
cld
rol
fstp
int
leave
fsub
mov
lea
ror
xlat
clc
int
xor
cmp
out
cmp
lock
test
int3
int
in
rcl
iret
jecxz
cmp
icebp
fcmovb
enter
rcl
cli
in
clc
loope
aad
lret
out
mov
decb
aad
in
hlt
cmp
lret
inc
repz
int
out
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
sub
sub
mov
or
jmp
ret
fmul
fstp
xchg
aaa
pop
adc
xor
insb
jg
push
add
xchg
enter
repz
cmc
hlt
loopne
cld
icebp
cld
test
sub
ret
fdivrp
loope
repz
ss
fdivrs
sbb
fnstcw
fsub
xchg
hlt
int3
ljmp
repnz
test
leave
cmc
jmp
jmp
ret
xlat
clc
jmp
hlt
orl
ficoml
leave
jmp
in
xor
cli
lret
loopne
sti
mul
and
hlt
int
orb
in
loope
fsub
idiv
ljmp
in
push
loopne
fiaddl
call
aam
ss
call
sti
cld
out
mov
out
mov
loop
call
shll
jmp
out
lret
int3
repz
ret
cmp
cmc
out
out
cmp
out
rcl
loope
xor
test
fnstenv
loopne
cmp
mov
int
fsub
mov
orl
enter
div
in
roll
idiv
jecxz
std
cld
in
ss
shlb
sti
cmp
rcl
fidivrl
ffree
sar
repz
int3
fdiv
ror
icebp
test
divb
loopne
sarl
ffree
sar
jmp
test
iret
or
jmp
mov
ss
out
aam
lock
lock
rolb
lret
in
xchg
filds
int
lret
enter
out
std
iret
lret
ret
incl
sar
clc
std
imul
cld
incl
jmp
leave
cmp
sarb
in
vpaddw
in
int3
addl
faddl
cmp
out
aad
icebp
int3
cmp
xlat
sti
addb
icebp
in
jmp
in
shl
stc
fcmovb
shl
lock
jecxz
jecxz
loop
shl
call
in
loop
rol
sub
out
ss
ds
jecxz
jecxz
fsub
loop
xchg
std
loop
mov
ret
iret
xor
cmp
out
sti
in
sarl
in
fadds
fmul
in
sub
repnz
xor
iret
fucomp
out
shr
ds
fadd
loope
out
lret
out
cld
mov
aam
int3
repnz
leave
fcomi
in
loopne
cmp
std
sti
loopne
aam
call
clc
out
icebp
mov
into
aaa
repz
lret
call
shl
cmp
loop
fimull
test
das
das
lret
cs
icebp
lret
std
aad
in
aam
aad
cmp
cmc
jecxz
out
sti
mov
sub
out
out
cmp
dec
cmp
lock
inc
in
test
call
out
cmp
loope
loope
testb
test
jecxz
icebp
loope
test
aaa
ror
xor
int3
int
loopne
in
hlt
mov
cld
repz
xor
mov
cmp
jmp
cmp
out
repnz
test
in
cld
stc
xchg
lea
lock
xor
cmc
cmp
cmp
fmulp
out
xor
test
cld
mov
repnz
iret
out
xor
xlat
enter
aas
lock
out
cld
leave
mov
leave
mov
out
leave
nop
jmp
incl
xor
cmp
cmp
fucom
sti
jmp
sar
hlt
neg
xchg
mov
sti
hlt
xchg
into
aam
out
xor
shl
cmc
int
xlat
fcmovu
loopne
cmp
mov
or
jecxz
rcl
rcl
leave
repz
int3
repz
loop
fsubr
out
inc
mov
loop
sti
roll
jecxz
cmc
aam
hlt
fdivp
rcl
aas
xlat
jecxz
ret
call
fcmovne
enter
jmp
repz
rcl
in
xor
lret
xor
into
xor
repnz
out
test
out
fisttpll
int
clc
into
loope
fcom
call
std
cmp
rcr
cmc
rol
cmpb
stc
jmp
xchg
stc
cmp
fdivrl
std
repz
std
repnz
int
mov
mov
lret
lret
fdivs
xor
iret
hlt
lret
sti
loopne
not
neg
loopne
cld
lret
sti
mov
mov
fsubrp
les
cmp
repnz
leave
sti
int3
lock
repz
out
out
xlat
clc
repz
in
cld
int3
iret
stc
in
fucomp
jmp
fucomip
hlt
idivb
neg
aad
in
out
cmp
and
leave
ljmp
fcmovnu
hlt
icebp
mov
aaa
int
fsub
divl
cmp
clc
xchg
sar
xor
mov
or
mov
mov
adcl
add
xorl
jmp
ror
lret
int
int
bound
bnd
jg
push
add
xlat
xor
sub
loopne
shl
call
in
ror
xor
cmp
repnz
or
out
jmp
jecxz
xchg
into
int
rol
aam
sarl
fsubr
ss
sti
icebp
loope
xchg
stc
in
out
mov
xchg
shl
into
ss
out
repnz
cmp
iret
test
jmp
loope
fisttpl
aam
int3
ror
jmp
iret
in
div
clc
aam
mov
into
fucomip
lret
lock
cmc
xor
cld
fstp
mul
aam
fcmovbe
cmp
loop
orl
leave
in
enter
iret
jmp
ffree
ffreep
repnz
mov
mov
movb
out
loope
icebp
xor
out
loopne
adc
fst
jmp
call
mov
aam
aaa
fdivrs
cmp
sbb
out
orb
out
enter
in
std
xor
in
dec
xlat
sar
test
rol
aam
ljmp
test
xor
fdivs
cmp
std
xor
aam
aam
test
test
std
repz
rolb
out
in
xor
lret
fsubrp
clc
hlt
iret
sti
fst
roll
int
mov
out
call
cmp
iret
cs
fsubr
repnz
fmulp
imul
jecxz
int
in
mov
loope
xchg
int3
hlt
leave
ds
loope
int
loop
ret
lret
xchg
std
int
loop
aad
xor
enter
fcmovne
int
test
out
in
in
ffreep
aad
loopne
fucomp
std
test
xor
jmp
xlat
loop
std
aad
repz
mov
xlat
xchg
out
out
cmc
cmp
out
enter
cmp
ret
addl
jecxz
std
int3
aam
ror
ljmp
rcr
ffree
xchg
in
decl
xchg
iret
out
in
jmp
leave
out
ds
sti
in
sar
loope
sub
sti
int3
fdivrp
into
mov
loopne
rcl
out
cmp
cmp
loope
fdivr
movb
clc
repnz
cmc
out
out
int
sti
cmp
cmp
xchg
lret
or
xchg
mov
ror
repnz
xor
in
rcr
loop
aad
call
leave
jecxz
into
std
fmulp
call
cmp
out
aam
repz
cmp
flds
into
std
cld
hlt
xchg
not
jmp
cmp
xor
fadd
ss
repnz
cld
test
test
fsub
jecxz
xchg
out
lock
lret
iret
aam
enter
sti
in
shl
flds
loopne
cld
fxch
rorb
out
cmc
in
std
aaa
clc
cmpl
ds
stc
xchg
out
lret
xchg
jmp
jmp
cmp
leave
roll
xchg
cmp
in
cmc
stc
loope
nop
nop
shl
xor
icebp
cmc
int3
iret
xlat
aam
loop
clc
test
adc
and
int
jecxz
out
xchg
fucomip
shr
shl
testb
cmp
out
in
leave
lock
cmc
in
vpsadbw
fnop
repnz
fistpll
in
ret
cli
call
out
loopne
fmul
ljmp
cmp
cmpl
clc
loope
mov
jmp
loope
out
xlat
ss
ljmp
int3
cli
clc
addb
mov
mov
out
shlb
lret
loopne
fsub
cmp
jecxz
loop
ret
in
test
loope
iret
loope
imul
hlt
out
lret
enter
out
aam
into
ror
aas
cmp
ret
out
int
fimuls
xchg
sub
ljmp
xor
aas
ret
cmp
filds
mov
in
addl
sti
int
ss
cmp
cmp
sar
aad
stc
cld
mov
in
lret
lock
out
loopne
xchg
mov
fcmovbe
out
int3
not
loope
stc
out
icebp
xchg
cld
leave
loopne
test
in
nop
test
rcll
repz
fcmovu
into
aas
ds
cmp
test
ljmp
jmp
std
cmp
cmp
rcr
fiaddl
jmp
and
fiaddl
repnz
ret
out
into
repnz
xlat
notb
mov
int3
arpl
sub
mov
mov
add
mov
xor
negl
movl
adcl
jmp
ror
int3
mov
cmp
jne
jle
add
shl
jmp
rol
rcr
fsub
aad
cli
mov
roll
lock
cmp
jecxz
out
clc
sbb
test
neg
fucomp
out
nop
test
int3
xchg
pushl
hlt
ret
int
jmp
aad
stc
xor
sub
orl
test
xor
test
cmc
in
out
leave
aaa
idiv
rcl
sar
testl
jecxz
jecxz
divb
jmp
int
xor
imul
and
out
or
or
in
add
sub
xor
cmp
enter
ds
repz
icebp
loopne
dec
mov
clc
int
lock
repz
leave
sti
ss
aaa
xor
les
out
cmp
out
out
xchg
imul
xor
rol
aad
fcmovu
in
aam
sti
in
cli
rolb
neg
mov
in
mov
lret
hlt
out
std
sub
fdivp
rcl
imul
repnz
fsub
iret
in
and
out
out
aam
jmp
fnstenv
out
cmp
out
fdivp
test
loopne
jecxz
lret
aad
int
mov
xor
jmp
fcmovne
loope
fsub
ffreep
cmp
fisttpl
jecxz
lock
loope
das
clc
icebp
xor
lret
add
out
xchg
jmp
repnz
int3
in
ss
cld
mul
sbb
cmp
xchg
orb
loope
in
xor
stc
fcomi
fucom
loope
repnz
ss
sarb
cmp
mov
fnop
xchg
jmp
int
cs
fldln2
cli
cld
fsubr
std
ds
roll
cmp
int3
lock
shll
cld
icebp
xor
lret
repz
in
or
stc
imul
nop
out
rcl
lock
cli
vshufps
xor
stc
cli
cmc
repz
lret
int3
enter
xchg
aad
hlt
int3
loop
sti
enter
jmp
mul
shl
out
in
clc
jmp
xchg
cmp
jecxz
out
xlat
ret
lret
cli
fcmovbe
fsubrp
ds
leave
fucomi
cmc
cmp
frstpm(287
lret
mov
loop
xor
aaa
cmp
xor
in
loope
xchg
ljmp
cld
jmp
cli
jmp
aam
mov
int
mov
icebp
in
sub
das
imul
repnz
cmp
divb
rcr
addl
fsub
int
lock
sar
decb
in
aaa
aad
xor
into
rol
aas
fldl
mov
enter
xchg
rclb
clc
in
in
iret
sbb
ret
fdivp
loope
cli
fsub
test
mov
cld
incb
rcl
lock
aaa
loopne
fnclex
test
mov
fimuls
cmc
int
hlt
in
clc
xor
in
clc
test
leave
std
xchg
repnz
jmp
in
fcmovnb
repnz
in
aam
cld
rol
xchg
rol
repnz
or
test
jmp
incb
xchg
rorl
in
mov
ffreep
repz
in
fldl2t
cmp
out
out
out
cmp
fsub
fimuls
xor
xrelease
ljmp
lock
icebp
loopne
in
in
fisttpll
loop
das
repz
std
hlt
icebp
lret
fiaddl
test
faddl
les
cmc
xor
fnstenv
in
movb
in
test
xchg
lret
fsubrp
vpsrld
addl
out
out
mov
mov
lret
repz
repz
aaa
shl
in
into
lock
cmp
mov
loopne
fcmovbe
sti
roll
ljmp
aad
int
not
aad
sar
cmp
incb
mov
loope
int
sub
shl
loop
sub
fptan
stc
rolb
int3
nop
addb
in
cmp
lret
stc
loope
fnstcw
jecxz
std
ret
jecxz
loope
mov
ljmp
xor
xor
jmp
cmp
rcl
ds
fneni(8087
stc
jmp
lret
out
call
cmc
in
int3
das
clc
xor
rcl
rcr
test
xchg
and
testl
lock
lods
bound
inc
arpl
add
movl
jmp
cmp
movl
jne
jmp
aam
aam
ds
adc
dec
sahf
jp
jle
add
xor
cmp
cmp
cmc
int3
ret
jecxz
xchg
cli
in
loope
mov
icebp
test
rorl
iret
idiv
call
repz
cmp
addl
shl
loope
cmc
mov
out
rcr
repnz
jmp
cmp
rcl
rorl
imul
fucompp
nop
push
repz
stc
icebp
repz
cmp
clc
lret
cmc
stc
in
test
hlt
lea
xchg
or
rol
repz
repnz
icebp
rcl
hlt
fcmovnbe
add
ffreep
cld
repnz
lret
test
repnz
rcr
icebp
sti
lock
cmp
inc
rol
cmp
sti
xchg
div
mov
nop
call
jmp
out
fidivrl
cmp
rol
ds
add
in
in
push
sub
int3
enter
xor
aad
ljmp
cmp
testl
out
mov
aad
shl
cmp
lret
fnstenv
aad
loope
lock
mov
out
fmul
incl
shr
leave
cmc
fcomp
call
cmp
rolb
movb
fdivp
xor
in
xor
rcr
jecxz
loop
loop
xlat
incb
mov
in
cmp
cmp
ss
sbb
aad
call
cmc
test
jecxz
lret
sti
ljmp
shl
out
stc
enter
fistpll
roll
fcomip
enter
out
addb
xor
in
out
call
into
test
xchg
enter
mov
aad
xor
into
out
aam
shl
sbb
into
movb
mov
mov
loopne
mov
icebp
cmp
cli
jmp
out
sti
xlat
in
sbb
lock
aad
aad
jmp
fucomi
mov
mov
shr
xor
jmp
xor
cmp
lret
cmp
ret
mov
clc
mov
cmp
lock
cmp
repz
aad
jmp
cmp
clc
aad
rol
idivl
sti
shl
dec
shl
xorl
icebp
sarb
repnz
aas
into
xlat
aas
mov
int
in
mov
fnstenv
out
xor
lret
cmc
cmp
cmc
out
xchg
jmp
loope
fcmove
std
fsub
mov
jmp
hlt
sub
cmp
aas
orl
out
xchg
fmull
xor
jecxz
mul
cli
jmp
test
sti
not
aas
loop
or
in
in
ret
repz
hlt
cmp
out
std
fucomi
sbb
sar
aam
leave
in
fstl
call
in
fmul
imul
aad
cmc
fsub
sub
ror
in
in
in
shl
hlt
div
out
xlat
imul
aas
loope
out
rolb
leave
lds
mov
int3
iret
xor
aam
rcr
lret
int
shl
jecxz
fsub
loopne
incl
mov
enter
fcmovbe
std
stc
in
int3
fsubrp
ror
aad
rcl
call
lds
leave
cld
sub
jmp
sar
rcr
fsqrt
sarl
mov
out
into
in
repnz
jmp
cmc
cmp
int3
aam
icebp
out
out
loopne
hlt
testl
xchg
repnz
lret
cmp
test
aas
xlat
repnz
fsubp
adcb
lock
xor
fdiv
fucom
jmp
out
cmp
fadds
test
out
xchg
test
out
jmp
stc
leave
hlt
imul
cmp
call
in
idiv
test
int3
loop
std
in
call
cmp
cli
enter
aaa
roll
test
repnz
lret
int
loopne
ror
in
mov
fsub
cli
enter
fdiv
fsubrp
rcr
leave
cli
loope
leave
fcoms
icebp
sarb
ljmp
cld
div
fstp
fcmovnb
stc
aas
add
lret
loop
repnz
xchg
out
xchg
fxch
fidivs
out
fnstcw
test
aam
inc
fisttps
hlt
xor
out
fxtract
aam
jmp
in
in
stc
rcr
test
aas
leave
clc
testl
fdivp
loope
div
cmp
ds
loope
jmp
cli
jecxz
cmc
aas
cld
vshufps
fmull
rol
jmp
cmc
icebp
jmp
repnz
lock
mov
xchg
inc
add
bound
lret
push
add
mov
mov
mov
mov
jmp
int3
ret
int
mov
pusha
das
push
inc
push
in
hlt
jg
jle
add
aas
div
clc
cli
nop
jecxz
out
shrl
jmp
cmc
dec
icebp
loop
ret
test
rcl
lret
mov
jmp
xchg
jmp
fidivrs
out
cld
loopne
cld
rol
std
call
ror
in
cli
mov
orb
stc
out
ss
sar
aaa
testb
aas
shr
test
in
lret
repnz
stc
lret
xlat
sar
xchg
enter
ret
lret
lock
in
ljmp
in
test
add
in
mov
loop
test
xor
xor
cld
cmp
rcr
lret
test
or
std
xor
mov
mov
nop
jmp
clc
aam
inc
std
not
cmp
rcl
loop
jmp
pop
mov
inc
in
call
std
call
cmp
in
ret
hlt
fstp
iret
movb
loop
xor
jecxz
enter
idiv
std
test
std
hlt
fninit
cld
stc
call
xchg
loopne
xor
fcmovne
in
fsqrt
sarl
fnstcw
icebp
sti
aas
aas
fdivr
loopne
in
sbb
in
decb
ret
xor
out
loope
std
sar
cmp
aas
in
mov
out
out
lock
lret
ss
icebp
enter
in
aad
ds
aas
incl
fdivrp
loope
call
hlt
jmp
lret
aaa
sar
enter
cmp
hlt
fucom
fdivr
mov
nop
in
hlt
rclb
out
icebp
fcmovu
cmp
stc
loope
shl
or
out
int
nop
mov
xchg
int
shl
lock
lds
fcmovne
rcl
std
lock
mov
or
into
ljmp
out
shl
fstpt
shl
ss
cmp
in
sub
xchg
out
mov
out
xchg
in
xor
fldlg2
dec
call
icebp
and
loope
fcom
fndisi(8087
in
out
test
int3
mov
repz
in
cmp
ss
int3
lret
fucom
ret
xchg
mov
fsub
incl
xchg
fisubrs
test
fdivrs
cmp
loope
rcr
icebp
iret
push
rcl
ljmp
fcoml
int
fcmovu
jmp
repz
aad
jmp
leave
mov
ljmp
cmp
cmp
stc
ljmp
std
sarl
movb
loop
mov
in
mov
out
lret
icebp
cmp
fdivrs
ror
fiaddl
vpsubusb
lret
cmp
out
clc
aad
into
std
cmp
jecxz
idiv
fnclex
test
enter
mov
repnz
shll
icebp
in
sbb
repz
cmc
fiaddl
in
loopne
aam
into
iret
ljmp
cmp
rcr
ds
ds
in
lret
sub
hlt
icebp
iret
out
into
clc
jmp
cmpl
out
faddl
fimull
mov
jmp
int
cmp
jmp
lret
ds
xlat
fdiv
ror
xlat
aas
xlat
sbb
xchg
addb
leave
cmp
rcl
cld
sti
imul
int
cmc
cmp
xor
mov
mov
aad
fadd
ljmp
loopne
into
test
faddl
testb
loop
xchg
int3
cs
repz
shll
enter
cmp
repnz
ret
mov
leave
fsubr
lret
repz
jmp
jmp
sarb
in
cmp
xlat
idivb
fcom
and
cmp
out
test
out
xchg
cmc
in
out
cmp
xlat
roll
rcl
repnz
in
rcr
stc
rolb
xchg
out
loope
xabort
out
in
shlb
rcl
fnstsw
iret
cmp
out
xchg
shl
lret
ljmp
in
enter
cli
test
test
std
repnz
xor
in
lock
stc
std
repnz
stc
addb
leave
and
jecxz
out
iret
popl
cli
xor
ror
out
cld
sar
cmp
rol
test
out
sti
mov
lock
ficoml
xor
lret
aad
jmp
clc
shr
icebp
test
ret
cmc
xlat
xlat
shl
in
ljmp
out
xorl
rcl
fsubrp
in
into
aad
clc
jecxz
out
fsubr
xchg
ljmp
call
xor
inc
call
add
add
out
add
add
rcl
aad
aad
push
push
scas
ja
pop
lret
lret
jle
add
out
cmp
sti
movl
std
addb
enter
cmc
imul
shl
test
shl
clc
jecxz
leave
xchg
fisttpl
repnz
aaa
div
xlat
repz
hlt
jecxz
les
xchg
out
loopne
int
xlat
xlat
ss
fistpll
not
repz
add
std
cld
shr
out
xchg
xchg
call
out
rcr
cmp
loop
mov
addb
aam
out
cmp
cmp
mul
loopne
sti
dec
xchg
loopne
in
fst
sti
lret
test
test
test
int
ljmp
xlat
shl
into
xlat
aas
in
in
fdivrp
stc
out
loope
xchg
addl
cld
aad
aam
in
out
jecxz
sar
in
ret
ret
enter
call
das
int3
xor
shr
cmp
cmp
icebp
in
aas
rol
xchg
neg
hlt
leave
and
shl
push
xchg
das
aam
out
out
stc
into
ljmp
call
lret
cmp
and
leave
div
fnstcw
into
cmp
rcl
cmp
fcom
mul
hlt
call
add
xchg
xchg
fsubrp
cmp
cli
xor
hlt
out
ret
fistpll
icebp
leave
mov
idiv
fisttpl
int3
jmp
jecxz,pn
into
lds
lock
repnz
cmp
rcr
fisttpl
jmp
sub
aam
cmp
aad
ss
rolb
sti
fucomp
xchg
enter
xorl
ret
repz
fcomp
int
test
ret
fcmovnb
cmp
lret
fisttps
xchg
in
mov
call
stc
cld
fnstsw
stc
inc
sar
incb
mov
sti
ret
rcl
xchg
loope
out
repnz
idivb
xor
out
mov
test
incb
out
loopne
jmp
out
aaa
shr
sar
int
cmp
filds
testb
and
shr
int
inc
jmp
ret
out
mov
xlat
hlt
clc
fsub
shr
mov
int
jecxz
hlt
fstpt
aaa
cmp
cli
shr
div
out
ret
test
mov
fildl
ret
xor
das
sarb
cmpl
fsub
call
fcmovnbe
test
enter
test
enter
xor
sti
testb
hlt
cli
lret
sbb
lret
out
lret
in
aas
aad
xor
clc
fcmovnu
divb
lret
sbb
test
int
sti
mov
xchg
in
cmc
xchg
xor
clc
cld
cmp
hlt
div
ret
shl
call
test
leave
mov
call
repnz
icebp
int3
int3
out
cmp
leave
int
fdivp
and
aam
cld
ret
jecxz
lret
mov
cmc
xor
rcr
int3
ljmp
test
ret
jmp
out
into
sti
mov
call
sub
test
aam
clc
ljmp
xlat
mov
idiv
or
ret
fucomip
cld
out
shr
clc
aam
sti
ds
icebp
add
in
fsubp
mov
mov
stc
out
rcl
jecxz
or
aam
int3
lret
fcmovnb
cmp
cmc
leave
cld
ljmp
xchg
in
out
cli
call
cmp
jmp
fiadds
ljmp
and
xor
fsubr
not
enter
cmp
shl
shr
jmp
fsubr
out
test
shl
aad
out
xor
shr
aaa
lret
aam
sbb
jmp
jmp
flds
div
lret
ss
aam
rolb
loope
mov
in
mov
xor
in
ss
sbb
ret
int
loop
aad
fsubr
xchg
fucom
out
xor
jmp
std
cli
hlt
sub
fmul
ret
loopne
in
loope
ljmp
out
aam
lret
lret
xor
fldl2t
rol
fdivp
into
out
rcl
in
in
in
lock
xchg
les
lret
in
aad
icebp
lret
ror
loop
hlt
mov
ljmp
in
rol
into
shl
jmp
icebp
stc
lret
faddl
ljmp
sub
bnd
aaa
fcomp
xabort
aaa
lock
ret
fstp
call
test
std
xchg
aad
ss
andl
mov
jmp
aas
into
lret
leave
aam
dec
jo
xchg
add
add
aad
lock
shl
lock
repz
out
ret
in
mov
int
sar
out
shr
into
out
int3
cmp
rol
sub
mov
ret
in
fcomp
out
lret
addl
out
in
cmc
int3
repz
rcl
xchg
fcmovnbe
rolb
jmp
out
repnz
in
fdivs
ss
cld
loope
in
cmp
fldl
loopne
cld
cmc
cmc
out
repz
shlb
fdivrp
int
cmp
lock
rorl
loope
xabort
ljmp
into
repnz
test
fsub
loop
in
dec
cld
incb
shlb
call
in
lret
loope
cli
iret
loop
shl
testb
loopne
into
cld
xchg
sbb
xor
xlat
aas
bnd
test
out
shl
loope
aam
aas
in
cld
ret
lea
lock
ss
enter
loope
mov
fsub
leave
sti
orb
xorl
stc
cmp
jmp
cmp
idiv
out
loope
stc
fucomp
repz
in
xchg
in
cli
rcl
leave
stc
aaa
div
icebp
lock
sti
roll
mul
iret
xchg
xchg
loopne
shr
ror
out
cmp
ljmp
fcmovb
fsub
incl
in
faddl
xor
cmc
cli
fcmovnu
repz
xor
call
call
xchg
in
test
cmp
out
cmp
shr
loope
int
shl
xchg
aam
in
jmp
cli
loopne
xchg
hlt
loopne
aaa
loop
enter
aaa
ljmp
in
xchg
test
icebp
repnz
clc
lock
jecxz
fcompp
xlat
fcmovu
cmp
enter
clc
mov
loop
cli
xchg
shl
rcl
stc
int3
int
xor
test
fdiv
loopne
lock
cli
jecxz
icebp
lds
jmp
jmp
fstp
out
testb
shl
enter
xchg
in
mov
cli
stc
enter
idivb
clc
xlat
flds
add
stc
enter
out
int
xchg
enter
ljmp
aaa
testl
jmp
out
mov
icebp
ljmp
int3
xor
fnstenv
ret
cld
ror
xlat
call
lret
and
rcr
loope
out
repnz
hlt
jmp
jmp
jecxz
mov
repz
stc
jmp
lret
mov
int3
xor
cmc
xor
stc
aam
ret
sti
hlt
repz
or
in
orb
cli
icebp
fidivl
enter
fcmovu
std
out
repnz
std
leave
stc
int3
mov
loope
cmp
into
xor
aaa
cli
out
fsubp
rolb
dec
call
iret
test
clc
in
stc
cmp
cmp
ret
fldl
mov
loope
rcr
fsubrp
roll
jmp
cmp
repz
icebp
incl
fsubp
test
xchg
sub
shr
repnz
jecxz
repz
test
cld
out
les
shl
in
cld
cmp
dec
icebp
lret
cli
cmp
fsub
fsin
jmp
leave
xchg
adcl
cli
int3
cmp
out
loope
jecxz
sarb
mov
mov
int3
iret
fsub
int
sbb
ror
call
std
repnz
or
idiv
mov
sbb
mov
out
shl
aad
xor
lock
loop
xchg
out
out
mov
in
out
sbb
loop
ret
cmp
call
cmp
iret
out
ret
cmc
cmp
out
jecxz
jecxz
int3
jecxz
xchg
icebp
cs
cmc
fxam
loope
roll
and
loope
movb
xchg
jmp
jmp
clc
repnz
cmpb
in
sti
cli
loop
or
test
out
cmc
pop
cmc
enter
iret
enter
aad
ret
lock
fimull
loopne
int3
loopne
xor
stc
cmc
sarb
lock
out
call
loope
fucom
sub
jmp
enter
icebp
stc
cld
out
idiv
clc
fldl
fcomip
jmp
bnd
cmp
jmp
out
cmp
sub
cmp
xchg
orb
or
inc
cld
jmp
int3
ret
int3
int3
sahf
pushf
gs
mov
jbe
add
add
cli
jmp
xchg
fbstp
lret
aam
iret
cmp
cli
test
xlat
sub
fcmovb
iret
test
loop
int
xlat
clc
rcl
in
shl
in
call
loop
ljmp
out
out
cmp
int3
out
repz
fsub
ret
adc
aam
mov
out
cli
icebp
test
lock
xor
enter
rcl
out
xlat
xchg
hlt
testb
jmp
lret
out
xor
div
lock
cmp
addb
fisttpll
fcmovnb
clc
in
jecxz
rcll
lock
fidivrl
icebp
std
rcr
fadd
cli
sti
lret
decb
loopne
repnz
lret
lock
push
add
add
out
faddl
repnz
loop
out
lock
in
into
iret
cmp
xchg
out
ljmp
into
aad
xor
sti
xor
sti
sarl
stc
in
repz
loopne
lret
out
jmp
int3
xor
out
cs
int3
out
stc
cmpl
fisttpll
ljmp
cmp
in
aad
stc
std
adc
rcl
repz
fsin
loop
fisttps
ret
jmp
stc
adc
fst
out
shl
push
fsubr
aam
out
jmp
lret
fcmove
xchg
xchg
loope
xor
jecxz
xor
hlt
fxch
cmp
ds
out
mov
int
movb
xor
rcr
aam
cmp
ljmp
mul
vpaddusb
mul
mov
adcl
ss
jmp
shl
shl
test
xchg
leave
movl
mov
xlat
loope
jmp
rol
xlat
addb
mov
enter
jmp
divb
aam
shl
in
std
std
ljmp
cmp
mov
out
mov
mov
rcr
out
repz
jecxz
repz
int
std
xlat
cmc
cmc
repz
repnz
jecxz
testl
mov
icebp
loope
cmp
rcl
fstp
fxam
repz
repnz
aam
mov
fxch
lock
sti
fsubrp
ljmp
xlat
dec
test
shl
repz
call
jmp
fmulp
jmp
int
ss
aad
aas
test
mov
repz
mov
fucomip
out
call
les
out
icebp
hlt
repz
icebp
idivb
cmc
cli
call
mov
leave
or
rorl
aaa
aad
shr
filds
testb
clc
div
lock
fcoml
loope
stc
cmp
in
jmp
into
loop
xchg
sar
les
lea
xor
loope
xor
fdivrp
fdivr
fildl
xchg
loopne
fiadds
enter
mov
xlat
in
cmp
cmp
lret
fdivp
and
mov
loop
out
fldl2e
std
shr
out
out
rol
repnz
sar
repnz
sarb
lock
fucom
sti
cmc
test
mov
into
jmp
jmp
shl
cmc
test
shl
addb
into
mov
hlt
adc
idiv
call
xor
shr
cmp
or
int3
in
test
xchg
xchg
int3
aad
aaa
cmp
lock
shl
sti
mov
out
decb
out
vpaddq
jmp
loop
int
repz
not
mov
out
fiadds
fnstenv
fcom
aam
sar
int3
loop
clc
out
dec
mov
std
in
mov
in
into
cmp
ljmp
cmp
loop
jmp
stc
stc
xchg
in
xchg
loope
xor
stc
ljmp
std
iret
rcr
fsub
enter
leave
int3
loop
mov
icebp
repz
inc
fidivrs
shr
fdivp
addl
sub
mov
fdivrp
aam
rol
into
int
lock
cmc
cmc
les
std
loop
in
lret
enter
xchg
loop
call
out
imul
sar
ror
fsubp
decl
test
fcoms
mov
enter
lret
cmp
not
call
mul
in
call
sub
repnz
xor
icebp
xor
cmp
stc
in
add
jmp
lret
into
fst
fstp
bound
addr16
adc
jle
add
idiv
ds
fcmovnu
in
mov
stc
fmull
sub
out
stc
stc
aaa
cmc
int
jecxz
sti
out
rcl
jecxz
enter
rcl
mov
ret
hlt
vpsubsw
out
shl
filds
clc
roll
in
fists
aaa
cmc
cmp
xor
cmp
std
lock
mov
fmul
enter
add
out
xlat
xor
out
rcr
aaa
loopne
cmp
ds
testb
std
test
fisttps
fidivl
aad
repz
mov
testl
loop
cmp
bnd
ret
in
rcl
ffree
addb
test
mov
xchg
out
mov
lret
sti
aaa
ffreep
xor
in
out
aad
and
in
orl
stc
icebp
aaa
out
cmp
jmp
out
rolb
sti
test
stc
orb
rcl
jmp
fxch
lock
cmp
call
shl
jmp
out
jecxz
mov
cmp
sub
in
xlat
aam
in
in
out
xlat
hlt
fdivr
out
cmc
sbb
loope
lret
out
out
das
div
rcr
repnz
not
fcomp
repnz
aam
jecxz
fiadds
cmc
jmp
sub
shl
fcmovne
lock
test
cmc
aad
loope
out
and
jmp
shl
test
cmp
out
stc
aad
lock
out
hlt
test
out
test
dec
xchg
das
out
sarl
das
fcomp
ss
aad
rcr
xchg
cld
lret
out
call
ljmp
mul
cmp
stc
sar
cli
loopne
fsub
jecxz
xchg
call
xlat
lret
cmc
xlat
out
sar
xor
stc
loopne
lret
lret
loope
repz
mov
stc
repz
out
mov
ret
cmp
aad
leave
idiv
clc
loop
cld
out
out
repnz
stc
test
ds
jmp
in
in
icebp
repz
out
repnz
out
in
jecxz
mov
not
cli
fcmovb
jecxz
hlt
fdiv
clc
movl
mov
into
jmp
not
fdivrp
fcomp
lret
add
loopne
xchg
call
xchg
int
in
frstpm(287
imul
jmp
jecxz
rcl
aas
aam
xlat
sti
std
fmul
loopne
lds
enter
stc
jmp
stc
aad
out
repz
sbb
cld
mov
aad
shl
fcmovnu
fidivrs
xchg
fldl
int
loopne
addb
xlat
iret
ss
cmp
aaa
aad
cli
mov
int3
fcmovb
test
in
xor
cli
clc
sti
out
out
shl
in
cli
fdecstp
loope
out
repz
xlat
lea
test
out
ljmp
repnz
and
loop
fdivr
lret
out
call
int
in
loop
fnstcw
shl
call
cmp
in
fucomp
fmul
loopne
loope
into
out
int
out
xor
iret
aad
call
in
xor
loop
std
jecxz
jmp
mov
xchg
mov
cmc
aaa
iret
jmp
out
fiadds
ret
adc
leave
in
mov
mov
iret
xchg
into
in
xchg
hlt
in
ret
fsubr
jmp
cmp
aad
lock
cmp
orb
in
mov
out
jmp
into
enter
in
div
xor
cmp
rcr
test
enter
in
mov
cs
xlat
repz
stc
in
repnz
xor
dec
incl
call
xlat
shrl
rcl
fdivl
rcl
loopne
xor
rcr
out
neg
fiadds
orl
jmp
ss
jmp
add
mov
orb
shl
pushl
stc
xor
shrb
xor
cmp
out
cmp
xlat
aas
into
ds
jmp
clc
mov
int3
out
into
int3
xlat
into
in
neg
ljmp
in
fildl
loopne
cld
decl
rolb
jmp
faddp
cmp
fdivr
repz
loop
call
xchg
in
aad
shl
neg
ret
icebp
rolb
ljmp
ljmp
jmp
int
iret
rcl
aad
inc
xor
lret
or
add
ret
fdivr
cmp
fucomp
aas
cld
call
in
mov
mov
nop
lret
xchg
test
ss
into
lret
out
rcr
fcom
fcom
aad
test
call
mov
leave
pop
icebp
addl
call
ror
lret
std
std
fsubr
decb
hlt
int3
test
fpatan
enter
fucompp
hlt
cmc
lock
sar
lds
loop
fld
sti
int3
ljmp
repz
fxch
clc
call
idiv
out
lock
cmc
fiadds
rcr
rcl
mov
in
xlat
repz
fdiv
int
sti
cmc
fneni(8087
addl
std
in
xchg
lea
out
ret
rcr
cld
fdivrl
adc
out
hlt
xlat
jecxz
rcl
neg
mov
out
hlt
cmc
out
sar
fdivr
aad
repz
clc
sti
cmp
cmp
fcmovbe
flds
out
int
xchg
ljmp
sar
cmp
ret
in
xchg
testl
aaa
call
ljmp
clc
repnz
fisttps
loopne
loopne
orl
xor
jecxz
in
xlat
jmp
cld
lret
rcr
cli
out
sti
jmp
cli
loope
test
loop
fdiv
into
std
imul
shl
iret
ret
aad
stc
stc
ret
test
sti
mov
loop
loope
loope
lret
das
das
cmp
hlt
ss
and
test
sti
out
mov
fcmovb
in
shl
in
or
imul
ret
xor
cmp
cmp
fcmovne
roll
out
fcmovnbe
in
out
cld
jecxz
divl
shll
cmp
shl
in
in
fstp
or
and
out
bnd
xor
int
jmp
out
add
call
jmp
iret
fdivs
stc
mov
cli
into
fcmovu
cmp
into
lds
xchg
call
std
fucomi
in
icebp
int
out
jmp
repz
cmp
into
xlat
cld
icebp
rcl
loop
in
clc
in
cld
ljmp
xor
in
icebp
loopne
hlt
fcomip
loope,pt
cmc
xchg
cli
call
xor
call
ds
rol
xlat
idiv
or
cld
loop
into
adcb
in
out
call
leave
out
aam
rol
cmc
not
out
mov
fcmovnu
incb
neg
cmc
cs
in
xor
stc
sti
roll
loope
ror
loopne
test
out
nop
loope
out
aam
xor
repz
cmp
loope
div
stc
repz
fucomip
into
icebp
test
stc
in
cmp
enter
int3
fucomip
rcl
addb
mov
out
adcl
jmp
leave
ljmp
iret
jecxz
imul
loop
and
into
loop
loopne
cli
cmc
shll
repnz
xor
loopne
cld
loope
loop
sti
mov
sar
in
xchg
in
sti
aam
cmp
jmp
repz
ret
neg
hlt
out
mov
sbb
jmp
xor
hlt
out
hlt
aad
ds
xlat
leave
loop
loopne
xchg
repnz
inc
out
xlat
stc
test
jmp
lret
cmp
fadd
idivb
aam
lret
jecxz
iret
nop
into
in
cs
in
std
aam
shl
sarb
std
aam
ljmp
stc
fisttpl
div
shlb
repz
fidivrl
out
out
roll
ljmp
lret
mov
ror
ror
aaa
ss
idiv
ret
repnz
xor
jecxz
fadds
cli
nop
sbb
aad
xor
fsub
aam
lock
loope
roll
cld
pop
xchg
mov
sub
xlat
enter
cli
lock
out
leave
test
int
xorl
cmp
lret
jmp
in
cmp
aad
loope
xlat
xchg
mov
ret
int3
in
in
fcmovb
fdivrs
cmp
rolb
fdivr
mov
loopne
enter
jmp
aaa
aad
aad
test
cmpb
ffreep
xchg
mov
loop
xor
cli
dec
int
xchg
out
in
add
out
out
out
jmp
clc
in
xlat
aam
clc
clc
std
fcmove
int
aas
inc
cli
leave
mov
jecxz
sub
incl
jmp
mov
fcmovnu
or
sub
hlt
dec
clc
sbb
jle
add
or
xor
xor
xor
cmp
sti
ds
jmp
test
test
loope
fimuls
fiadds
xor
test
xlat
cld
sti
clc
clc
push
ljmp
into
sub
loop
xor
out
xlat
not
lret
fidivrl
ret
repz
movl
stc
in
rorb
xor
sti
call
fiadds
ret
clc
mov
adc
loop
rol
icebp
jmp
in
sarb
in
out
fincstp
flds
or
cmc
test
cmp
ljmp
xlat
stc
test
ljmp
cld
adcl
out
ds
cld
aad
lock
out
jmp
neg
icebp
dec
into
out
repnz
clc
int
cli
repz
sbb
ret
loop,pt
mov
enter
lret
iret
xor
out
xor
cmc
aad
aam
cli
lock
add
ftst
fstl
cmc
out
xchg
divl
sti
lret
shl
rcr
cmp
ret
mov
in
out
loop
icebp
shrl
into
sar
lret
xlat
sti
aad
ret
in
jmp
neg
lret
ljmp
shr
in
in
fnstenv
in
fsubp
lock
fcom
rcr
sar
out
fdivrp
lea
in
loop
jecxz
aam
aaa
out
xor
jmp
cmp
cld
in
stc
fadds
int
icebp
movl
loope
cmp
aad
jecxz
fmuls
lret
mov
filds
fcmovnbe
iret
aaa
loopne
aam
out
loop
loop
fucomp
ljmp
loope
aam
enter
xor
int
aas
sarl
sar
sbb
xchg
rcr
lret
icebp
repnz
out
out
imul
enter
in
adc
incl
rcr
jmp
int
ror
stc
rcr
jmp
hlt
fidivl
fidivs
mul
jecxz
lds
lret
aad
xlat
cmc
enter
cli
cmp
enter
cmc
sar
add
fsubr
call
lret
ret
mul
out
ss
cmp
shl
loop
and
out
repz
imul
fucomi
cmp
aad
aam
enter
lret
jecxz
in
cmc
sar
ljmp
stc
sub
out
test
cmp
xor
out
repnz
cli
rol
out
repz
test
call
jmp
leave
cli
hlt
into
sar
fst
int
cmp
loop
out
stc
out
out
adcb
out
fxam
xor
push
aas
fdiv
stc
fucomp
xchg
mov
fimull
fimull
fyl2x
sti
sarb
fcmovnbe
repnz
sub
aaa
std
test
lret
mul
loopne
test
xchg
rcr
cmp
jmp
faddl
loopne
cmc
stc
in
jmp
lock
ljmp
ror
xor
cld
jmp
aas
jmp
cli
ror
fst
in
repz
out
sti
loop
in
call
into
sarb
int
jmp
cmp
xlat
fnstcw
test
enter
mov
fidivs
xlat
jmp
in
int3
cld
fdivrs
rcl
fcmovnb
cmp
cld
clc
xchg
xchg
into
jmp
jecxz
ret
cmp
call
repnz
ds
addl
fdivr
cmc
xchg
rcl
lds
aam
rcl
enter
into
jmp
aas
movl
repnz
xchg
nop
aas
out
lret
lret
aaa
sar
in
xlat
lds
stc
mov
sti
mov
out
in
out
test
sti
lret
fdivr
ror
rorl
in
out
out
ljmp
out
jmp
cmc
loop
cmp
ljmp
jmp
jmp
call
fdivrp
rcr
adc
clc
ljmp
nop
into
shl
rorb
rol
jmp
ds
cmp
rol
frstpm(287
test
cmp
xchg
nop
loope
sub
iret
clc
lret
lret
addl
out
decl
ret
fidivrl
fdiv
ljmp
not
mov
in
loope
sti
int3
nop
call
rcr
shl
fptan
shl
ret
cmc
out
cmpl
jb
jmp
cmp
jne
jmp
iret
lret
rcr
aad
int
jge
ja
jae
add
push
add
cmp
rcl
jmp
xchg
into
xchg
cld
test
out
rol
repnz
aad
div
out
loope
rcr
xchg
ror
cld
clc
mov
out
in
das
loope
xor
fdivr
cmc
cmp
rcr
fst
roll
lock
icebp
fldl
in
iret
repz
lret
fxtract
cmc
loopne
aad
lret
cmc
test
xchg
out
in
into
xor
shr
cmp
out
repnz
loop
xchg
fiadds
into
jmp
jmp
cld
xlat
hlt
cmp
aas
repz
aad
fcomp
mov
les
and
jecxz
jmp
ljmp
addl
call
mov
sub
int3
mov
ror
cld
lret
cmp
cmc
aad
mul
fcomp
in
stc
cmpb
lret
jmp
loop
shl
ss
cmp
rcl
std
loopne
out
loope
jmp
xchg
in
out
out
lret
test
aaa
lds
hlt
out
aam
leave
repz
std
aad
div
rcl
mov
nop
int3
ror
jecxz
cmc
aaa
in
aaa
cli
out
cli
cld
ds
std
sbb
testl
fmulp
shr
fmul
hlt
fcomp
in
aad
xor
xlat
stc
in
hlt
xlat
fmul
in
cld
fucom
xchg
in
sti
hlt
ror
iret
jmp
jmp
in
xlat
ret
out
aam
call
mov
cmp
mov
iret
leave
repnz
in
int3
fcmovnu
cli
cmp
movb
xchg
clc
in
lock
ror
out
sarb
in
shr
ret
xchg
test
cld
test
in
aaa
xor
cmp
lret
out
ror
leave
in
xor
faddl
xlat
fucomi
rcl
orl
fcomi
leave
div
repnz
frstpm(287
rorl
in
int
xor
test
aaa
loop
stc
std
cmp
lret
loope
not
ret
and
testb
mov
xchg
aam
jmp
sar
xor
div
ds
inc
in
xchg
rorl
xchg
leave
xor
in
not
icebp
lock
sub
out
rol
leave
mul
sbb
out
loope
and
lock
cmp
out
aam
xlat
aad
xlat
loope
adc
loope
fmul
xchg
xlat
into
std
out
lret
cmc
fucomp
test
std
cmp
xchg
loopne
dec
faddl
iret
loopne
das
loop
aam
fcomi
clc
aad
loope
loopne
cmp
leave
orb
test
in
aam
xor
incl
fldl
lret
and
mov
jmp
clc
ss
cmc
stc
cli
rol
fcmovnbe
sti
fiadds
cli
clc
nop
shl
out
or
out
das
aas
sarl
std
int3
loop
fcomi
xchg
cli
ljmp
sti
cmp
aam
sarl
repnz
fst
fdiv
aad
addl
out
icebp
iret
fstl
jmp
fmul
loop
shl
jecxz,pt
cmp
loop
ror
rcll
lret
jmp
cmp
ljmp
ror
mov
in
ret
rorl
fmul
lock
xlat
cmc
cld
cmp
test
lock
cld
jmp
cli
xchg
out
in
loop
out
cmp
fdivp
shr
aad
repz
xchg
addl
xchg
mov
aaa
in
ljmp
loope
adc
lock
orl
into
ljmp
out
stc
xor
cld
out
cmp
roll
call
mov
call
in
clc
iret
cli
sti
std
aam
in
repz
aad
rol
movb
fsts
loope
mov
lock
in
aaa
aaa
fiaddl
in
repnz
cli
loop
xlat
out
xchg
sub
icebp
out
xlat
cmc
xlat
iret
int
fdivrs
sti
test
fcmovnb
ds
fsub
loope
stc
fildl
sub
repz
icebp
ret
lret
jmp
aas
iret
icebp
cmpb
ret
enter
add
out
fucom
call
shr
rcr
lret
fsin
cmp
repnz
stc
aam
out
lea
icebp
in
nop
jecxz
ror
in
jmp
hlt
rol
fyl2x
lds
test
mov
sbb
sti
movl
mov
mov
jmp
enter
int
int3
lret
xlat
ja
lea
add
add
cmp
cmp
bnd
repz
lret
decb
mov
hlt
jecxz
ljmp
rcl
lock
test
mov
or
rolb
xor
in
cmc
xor
aam
cmp
rol
in
in
leave
cld
ret
jecxz
loop
int
int
int
xor
shl
jmp
cmc
loop
ror
xchg
xchg
lret
int3
out
shr
xlat
cmc
cmp
xor
lret
jecxz
faddp
jmp
enter
mov
lret
mov
lret
xor
idivl
sbb
sarb
rol
mov
imul
or
test
fucomip
mov
lret
aaa
lret
cmp
cmc
cmp
fucomip
fdivrs
loop
addl
repnz
shr
aam
out
sarb
jmp
xlat
or
sbb
loopne
ret
test
out
iret
idiv
xlat
out
cmc
iret
loopne
int
loopne
lock
enter
rorb
rol
hlt
sti
fucomi
idiv
ret
fndisi(8087
hlt
jmp
leave
int
xchg
jmp
sub
xlat
icebp
xlat
cmp
lret
loopne
fcmovu
out
aas
ljmp
int
jecxz
lea
in
leave
call
cmp
test
clc
mov
neg
cli
sar
in
xor
icebp
sarb
enter
cmp
xchg
cmp
cmc
aas
not
int
call
mov
xor
out
hlt
aad
loop
aam
test
test
test
rcr
mov
jmp
xchg
xor
iret
rol
cli
fbstp
repnz
fdivr
xlat
xchg
xchg
aam
out
test
std
aad
into
aaa
fcmovne
ds
in
sarb
ds
loope
in
leave
mov
jecxz
or
in
lret
jmp
cmp
fptan
ftst
fcomip
div
in
mov
repnz
loop
out
in
fdivs
out
xor
int
iret
xlat
out
call
loope
mov
nop
call
out
repnz
shl
clc
cmp
in
and
test
inc
enter
in
loope
ffreep
into
out
jmp
fst
lock
aas
sti
xor
loop
xchg
mov
sar
leave
jmp
leave
clc
hlt
hlt
int
loope
jecxz
in
test
decl
loopne
push
repz
out
shl
lret
fnstcw
ljmp
fchs
xlat
jmp
xlat
xchg
test
out
loop
xor
fcmovb
sti
xor
ds
xlat
iret
sar
cmp
aad
stc
mov
addb
jmp
rcr
repnz
lret
shr
loopne
in
sti
loope
sti
mov
lret
xchg
aam
ljmp
int
ds
cmp
fdivr
aad
std
out
out
fcmove
lock
sti
int3
ljmp
cli
idiv
aam
fimull
cli
push
out
out
rolb
out
out
das
repz
fdiv
ret
hlt
jecxz
cmc
filds
out
lds
xor
cmp
repz
lock
cld
bnd
mov
in
out
std
hlt
cmc
sarb
cmp
cmp
fadds
sti
in
out
iret
out
ljmp
int
cmp
cmc
ljmp
std
loopne
fstp
in
fucom
mov
leave
jmp
fucomip
loop
fmul
vpaddsw
jmp
cmp
cld
fsub
aas
shr
aam
lret
fcoml
out
lret
sti
cmp
divb
lock
jecxz
cmp
mov
std
leave
clc
out
fcmovu
fistl
aam
aad
int
sbb
loopne
ret
icebp
hlt
xlat
stc
test
in
test
call
ret
cmp
out
cmp
cmp
ret
loopne
flds
jmp
out
ret
out
call
call
cmc
cmp
jmp
filds
ljmp
faddl
xlat
cmp
aad
into
aas
faddl
xchg
jecxz
xchg
filds
aaa
out
cs
sti
aam
cmp
les
loop
leave
cmc
stc
int
cld
cmp
out
fucomip
sub
in
cmp
iret
aaa
ror
fcmovnbe
sti
shl
addb
nop
out
fdivr
test
not
jmp
cmc
shl
rcr
loopne
jmp
or
int
inc
clc
mov
mov
xor
add
mov
lea
jmp
rol
lret
ffree
aam
mov
mov
nop
bswap
jp
add
add
jecxz
cmc
int3
clc
das
ljmp
jecxz
out
int
add
clc
stc
enter
mov
out
mov
shl
enter
test
sbb
rol
mov
icebp
jmp
lret
fsubr
in
int
into
cmp
iret
shl
faddp
sbb
jmp
loopne
lret
shlb
fdivrl
cli
fcmovb
out
in
lock
enter
xchg
enter
jmp
mov
in
ss
fcmovbe
ljmp
adc
cli
fcomip
fimull
orb
into
in
icebp
icebp
in
sti
fcmovnbe
loopne
rcr
repnz
std
xlat
or
fsubr
fsubrs
ljmp
fcomp
loop
ret
rcl
cmc
orb
lock
in
xchg
shl
cmp
idiv
int
fcmove
sub
jmp
jmp
fsub
in
mov
out
fdivr
jmp
rcr
shl
xchg
dec
or
test
xchg
rclb
xlat
clc
in
out
cld
rol
cmp
aas
shl
add
int3
call
xchg
rclb
repz
std
fsubrp
ss
ret
icebp
fcomi
ds
jmp
xchg
icebp
aam
out
lds
clc
icebp
cmp
out
fidivrl
ds
and
xor
std
jecxz
jmp
sti
out
test
xchg
xchg
repnz
jmp
aas
ljmp
xchg
in
clc
orb
mul
sub
test
not
cmp
lock
repnz
orb
into
enter
faddp
xlat
div
out
repz
div
loopne
cmp
in
mov
fxch
addb
rol
lret
xor
stc
ss
iret
lock
add
fst
shl
mov
flds
repnz
int
ror
loop
shrb
clc
cmp
cmc
cli
loopne
iret
lds
mov
cmp
leave
incb
out
shr
fcmove
in
leave
stc
out
shlb
rorb
fimuls
ror
ret
ret
out
hlt
loop
hlt
inc
cmc
mov
sbb
lock
lock
stc
cli
ljmp
stc
xchg
loop
ret
xchg
in
out
cmp
int
cmp
cld
aaa
std
ds
in
std
rcr
leave
clc
enter
int
shl
lret
mov
ljmp
cmc
cmc
cmp
cmp
in
mov
cmc
jecxz
test
fmul
xchg
mov
jmp
sub
cs
ret
icebp
loop
aad
rcl
cmc
ret
test
cld
jmp
out
aam
test
leave
sarl
lret
push
cmc
hlt
loopne
fdiv
lret
mov
xchg
in
repnz
repnz
ret
xlat
jmp
cli
loopne
int3
ffreep
fldl
loopne
in
mov
or
cs
stc
jmp
cmp
and
ret
out
loopne
mov
in
sbb
xchg
call
ret
aam
cmp
repnz
int
aaa
add
fsub
test
in
std
out
clc
stc
into
cmp
fst
icebp
aam
cmp
roll
into
loope
int3
out
into
out
xlat
jecxz
rcl
rcl
idivl
fsub
int
lds
ljmp
adcl
cmp
ret
repz
push
into
cmp
in
repz
shl
cmc
xchg
mov
addl
out
xor
xlat
sbb
not
icebp
in
in
jmp
in
xchg
int
mov
int3
lret
enter
in
xor
sbb
jecxz
mov
out
in
orl
ret
xlat
rcr
icebp
repz
lret
cli
sbb
out
mov
xor
lock
int3
in
cmc
cld
in
cmp
jmp
in
xchg
std
aad
xor
out
leave
icebp
fdiv
lret
lock
rolb
xchg
fcmove
aad
stc
ljmp
jecxz
enter
fcmovnbe
sarl
lock
mov
jecxz
fucomip
ljmp
loopne
sub
xor
cmp
divl
cmc
stc
cmp
test
ret
in
mov
out
mov
nop
jmp
rorb
lret
rcr
aas
cmp
repnz
std
xchg
call
jmp
out
repz
shr
out
fsqrt
fcmovb
cmp
out
div
ds
cld
sti
rorl
mov
add
add
int
xlat
js
int
das
add
add
fldl
out
loopne
jmp
in
clc
out
aad
shlb
not
into
aad
lock
incl
out
enter
int
int3
les
jmp
aad
jmp
test
test
cmc
stc
call
ljmp
lret
lret
lret
icebp
out
ss
idivb
addl
rcr
leave
ret
xchg
xlat
fisttpll
fbstp
jecxz
jecxz
stc
call
in
hlt
sti
jecxz
out
mov
test
mov
filds
lret
vaddsubps
xlat
cmc
rcr
xchg
call
cmc
fimull
lock
hlt
in
repnz
jmp
aas
cld
roll
nop
mov
in
leave
clc
div
fmul
fdivr
call
loope
ret
aad
sti
rcr
int3
loope
lock
cmp
and
rcr
test
inc
call
loop
clc
xlat
int
fcmovne
fincstp
cli
mul
fidivrl
cmp
fiadds
test
int
fmul
xor
repz
fcomp
flds
ljmp
out
into
hlt
int
call
loopne
in
mov
jecxz
in
in
shlb
xor
sti
repnz
hlt
out
cli
fisttpll
out
popl
cmc
ret
cmp
int3
repz
aaa
in
sar
idivl
cli
std
rolb
mov
iret
cld
xchg
out
shr
sti
lret
cld
in
std
rcr
lret
rcr
fiadds
out
int
xor
out
jmp
call
adc
jecxz
fsubr
std
cli
push
out
clc
test
addl
int
cmc
cmp
std
ljmp
stc
call
hlt
xchg
jecxz,pn
cmc
fucompp
fcmovnu
in
cld
out
sti
fdivr
ljmp
xchg
nop
mov
out
lret
out
cmp
ds
aas
aam
mov
sar
loope,pt
into
loopne
out
repz
clc
in
loop
clc
call
repz
shl
rcr
clc
enter
incl
aas
in
lret
repnz
cmp
lock
rcl
in
clc
xlat
sti
aad
add
sbb
int3
fdivrp
mov
imul
iret
repz
stc
int
cmp
icebp
loopne
aad
cmc
fsubrp
fsubrp
fsub
std
int3
ljmp
out
rcl
in
shlb
xlat
jmp
aas
cld
ror
fmulp
faddl
decb
cli
int
xor
not
xlat
fsubr
hlt
xchg
cmc
std
mov
fdivrp
leave
xchg
jecxz
testb
hlt
jmp
rcr
cmp
out
leave
ret
in
in
in
test
out
neg
aam
cld
xor
in
iret
roll
fsub
out
mov
int
lock
lock
ljmp
cmp
repnz
shl
rcl
sti
call
loopne
stc
mov
repz
shl
out
xor
int3
sar
lock
clc
flds
jmp
test
shl
out
jecxz
out
fmulp
sti
icebp
rol
rcl
enter
add
out
fcomi
sub
in
into
cmc
into
xor
cmp
fidivrl
cmp
faddl
clc
test
xchg
aas
ljmp
fmul
cmp
repz
std
std
loop
and
sub
sub
repz
into
in
in
fcmovnb
cmp
sti
clc
iret
xor
fcomip
int3
xchg
test
xor
in
sarb
fsubp
jmp
fcmove
iret
int
xchg
jmp
in
cmp
clc
dec
fucomi
ds
test
loope
call
out
xchg
fimuls
ljmp
in
repnz
cld
cmc
xchg
fcmovnb
mov
les
ss
cmp
out
imul
sarb
cmp
cmp
jecxz
test
xchg
jmp
iret
cmc
xor
in
jmp
cmp
loope
call
into
nop
aad
stc
enter
into
xor
leave
xlat
ljmp
in
fcmovnu
int
into
repnz
testb
sar
in
in
fdivp
shl
cli
fildl
addb
loope
out
repnz
in
in
cmp
cli
add
mov
jmp
ret
int3
int
ret
leave
pop
cs
cmpsb
xor
jle
add
cmp
icebp
cmc
cmp
and
cmp
cli
stc
std
aas
leave
test
loopne
icebp
fsincos
jmp
into
lock
ret
iret
aam
fld
int3
imul
loopne
sub
in
aaa
in
rcl
in
out
shlb
cmp
std
sar
xchg
rolb
enter
iret
iret
icebp
shrb
call
sti
xlat
into
fsub
lock
stc
into
lret
cmc
mov
in
lds
lret
lret
in
cmc
repnz
aad
fucom
mov
test
test
fcmove
cmp
enter
lock
repz
cli
test
out
loope
mov
jecxz
sub
iret
cld
ror
xchg
out
out
aaa
xor
jmp
aad
xor
repnz
fimull
lret
icebp
in
aam
iret
ljmp
sar
repnz
push
loopne
xlat
out
cli
fnclex
out
clc
ljmp
das
int3
in
shl
out
aam
cmp
repnz
xchg
call
cli
loop
in
faddl
jecxz
repz
ss
fcmovu
rol
ret
out
loopne
mov
cmp
repnz
enter
rcl
fimull
in
leave
mov
xchg
in
fsub
lret
leave
shr
loopne
xor
mul
std
out
xchg
cli
jmp
nop
vphsubbw
in
out
int
lret
lret
hlt
jmp
in
shl
loope
aas
fcmovb
addb
out
jecxz
std
hlt
shl
ljmp
sar
lock
mov
or
fimuls
shl
loop
fnstcw
in
ret
loope
vpaddusw
std
mov
imul
xbegin
in
cmc
xor
cmp
add
out
loopne
decl
cmc
xor
std
enter
fst
stc
ret
fucom
rol
mov
lock
and
ljmp
in
sti
ss
ss
ds
out
fchs
out
sub
jecxz
into
lret
xchg
dec
les
shr
xor
jmp
iret
fucomip
aas
aam
fadds
in
sar
mov
icebp
xchg
repz
out
xor
fldl
rorb
clc
fucom
ljmp
imull
xor
out
sti
xor
jecxz
loope
add
leave
cmp
ljmp
repnz
in
fmul
jmp
aas
clc
out
addb
mov
fndisi(8087
xlat
test
ret
les
cmc
aaa
xor
cmp
loope
shl
fcmovbe
ffree
jecxz
frndint
enter
jecxz
lret
repz
std
in
enter
loopne
fcmovnbe
aam
sti
mov
in
fistl
in
jmp
icebp
cmp
sti
call
loope
test
fmul
ffreep
loop
out
enter
cmc
idiv
jmp
in
cmp
in
xor
std
ret
loopne
fiaddl
std
in
sti
mov
mov
xor
hlt
shl
shr
jmp
add
fcmovnb
fcom
fadds
xchg
xlat
jecxz
in
lret
enter
icebp
idiv
jecxz
mov
out
nop
ljmp
leave
xor
lret
iret
clc
aam
clc
inc
xchg
hlt
std
loopne
mov
cld
in
in
jmp
in
xor
cli
xor
in
fidivs
cli
idiv
cmp
in
mov
loope
std
lock
ret
xor
test
loop
out
out
jmp
fstpt
rcr
clc
incl
jecxz
in
test
ret
repnz
out
in
rcr
cmp
into
sar
shl
ret
call
fdivrp
subl
enter
aam
into
shl
fucomi
icebp
std
cld
fcmovnbe
mov
in
cld
fcmove
lret
repz
call
xor
xlat
fcmovnbe
aad
in
fcomi
fiadds
cld
mov
div
int3
shl
aaa
enter
rcr
cld
clc
shl
repnz
test
leave
test
fistl
aas
clc
icebp
out
out
in
out
cmc
ljmp
test
xchg
mov
orl
shl
sti
cmc
stc
out
ds
hlt
fcos
int
call
cld
in
test
loope
shr
xor
out
in
stc
fst
into
clc
loopne
cli
mul
enter
mov
xor
aad
int
repnz
jmp
jmp
faddl
fcomp
mov
testb
lea
push
mov
jmp
aam
ror
fcomp
aam
aas
idivb
gs
cmp
jle
add
jmp
ret
sub
loope
ds
icebp
aam
xlat
add
out
fxch
or
test
out
cmp
ljmp
cmc
test
mov
test
out
xchg
vpsubsb
jmp
lret
lock
out
stc
lret
aam
cld
call
test
sub
iret
roll
xor
cmp
cmp
icebp
int3
fstpt
faddl
mov
cmp
xchg
nop
sti
int3
test
jmp
leave
fxch
lock
das
leave
int
jmp
clc
cmp
jecxz
loop
or
loope
cld
leave
cmc
call
xor
fxch
fdiv
fucomip
cld
cmp
icebp
rol
test
mov
push
test
out
test
cmp
repz
aas
inc
rcr
jmp
clc
flds
xor
out
cli
std
neg
repz
in
cmp
out
ret
faddl
cmc
xchg
shl
ljmp
repz
lock
repnz
vpminsw
hlt
int3
xor
repz
repnz
cmc
xor
aas
shl
test
lret
mov
rolb
ror
enter
loope
in
iret
fildl
in
jmp
jmp
ret
repnz
icebp
roll
xchg
cmc
mov
iret
repnz
out
xor
aad
aaa
fidivl
aas
ret
movb
decl
xor
int
fdivrs
loopne
incb
loop
xchg
stc
fsubrp
into
in
int3
shl
ljmp
repz
fistpll
faddp
sbb
hlt
incb
out
in
mov
shr
int3
cmc
roll
rcl
repnz
ret
aas
in
xlat
sub
repz
xlat
stc
stc
sti
clc
idivb
fdiv
loope
iret
cli
clc
lds
loopne
xchg
into
int
xor
idiv
shll
int3
cmp
into
shl
iret
ds
fcmovne
shr
in
call
ret
lret
cld
ljmp
cmc
sbb
fcmovu
ret
icebp
mov
hlt
iret
rol
lock
aam
fcomip
xchg
sti
aas
repnz
out
lret
mov
cmp
cmc
repnz
roll
fisttpl
loopne
xchg
iret
xlat
xor
aad
out
out
in
aam
cmp
vcvtdq2pd
sti
test
jecxz
nop
aaa
jecxz
cmc
out
aaa
jmp
test
xor
jmp
mov
stc
lret
in
loopne
xor
cmp
xor
sarb
test
fcomp
out
loope
mov
repnz
in
xlat
fcomi
sbb
ret
test
mov
in
sar
call
ss
cmc
xor
call
idiv
clc
and
stc
in
cmc
in
sub
fmull
in
das
shl
cs
cmp
jmp
std
test
cmc
cmp
leave
decb
lock
aaa
idivl
hlt
adc
in
test
test
in
loop
in
xchg
out
shlb
enter
stc
roll
test
loope
and
xorl
clc
out
out
xor
cmp
in
aad
into
out
repnz
cli
fsubr
out
in
fsubrp
loop
xor
sar
jmp
aaa
bnd
into
icebp
rorb
jmp
out
xchg
repnz
loop
out
fadd
fdivr
sbb
rcl
into
fcmovnu
in
cmp
out
in
mov
in
shr
in
out
xlat
aad
jmp
ret
aas
fmulp
in
stc
in
jmp
jmp
into
xor
out
icebp
cmp
sar
cmp
xchg
fxch
cli
in
out
and
jecxz
out
sti
cmp
leave
call
cmp
xchg
mov
out
cld
or
clc
les
aaa
imull
xor
aam
lret
rolb
mov
addb
lret
add
int
lret
jmp
repnz
out
in
mov
jecxz
jmp
out
in
aad
int3
rcl
int3
idivb
fldl
cld
xor
mov
mov
in
in
aam
aad
lret
vpmaxsw
lock
fcomp
repnz
lds
movb
push
mov
push
jmp
ret
rcl
aam
ret
sarl
dec
dec
add
add
add
cli
in
fsubr
cli
in
hlt
repnz
in
xor
cmp
in
xlat
cmp
ss
cld
std
stc
test
fildl
stc
leave
test
leave
mov
adc
jecxz
icebp
in
cli
std
in
xor
lock
ror
fincstp
jmp
xchg
fisttpll
xchg
into
shl
xor
fdiv
xor
repz
test
fadds
xchg
loop
repz
hlt
ror
clc
loope
fsub
fdivrs
xchg
xchg
jecxz
cli
mov
fsubr
int
repnz
cmp
xor
adc
test
lds
repz
ret
rcl
xor
cmp
cli
fucomp
cmp
ret
clc
cld
cli
xchg
in
cld
sti
xchg
shll
iret
aad
hlt
ljmp
iret
vcvtpd2dq
repz
stc
in
mov
cld
repnz
shl
shlb
out
cmp
xor
aaa
lock
jmp
addl
stc
lds
fmul
mov
out
clc
aam
aam
in
cmp
aas
in
add
sarl
movl
or
test
cmp
bnd
stc
shr
ss
out
enter
in
cld
fiadds
in
jmp
call
cmc
int
aam
cmp
aam
stc
in
aas
xchg
int3
fsubrp
incl
repz
std
rol
iret
into
icebp
shl
xchg
enter
loope
mov
int
or
lret
xor
cld
ljmp
clc
fucom
mov
testl
fst
cmc
int3
lret
leave
hlt
sarb
icebp
hlt
aad
aad
loope
mov
test
test
in
ljmp
in
iret
shl
in
repz
fnstsw
aam
aas
loop
cmp
mov
lret
int3
std
jecxz
shl
iret
iret
call
rcr
in
cmc
cli
fxch
test
cmp
int3
sbb
rcl
fstp
out
shl
out
int
std
cmp
sarb
out
out
mov
mov
fmulp
test
shll
cld
aam
xor
aad
cmc
ret
roll
addl
repz
stc
sar
enter
jmp
cmp
mov
cmc
out
nop
fisttps
aaa
fdiv
xor
sarb
aaa
lret
fstpt
sti
test
hlt
and
test
in
xchg
out
enter
fdiv
cmp
ds
cmp
addl
mov
loope
mov
test
ljmp
out
lret
out
xlat
idivb
in
cmp
jmp
testl
xor
ss
in
vmaskmovdqu
lret
in
in
cmc
clc
ror
xchg
decb
repz
repz
icebp
cmp
xor
rcr
jmp
lock
test
into
out
ds
ret
std
test
movb
sti
jmp
mov
std
ljmp
xor
cmp
loop
inc
sti
out
ret
stc
mov
test
mov
not
out
out
out
adc
out
xchg
iret
shl
sar
sub
mov
leave
lret
in
iret
shll
into
cmp
repz
aaa
lret
loope
fsub
std
hlt
xchg
lds
into
loopne
xchg
xchg
sub
jmp
xor
out
cmp
and
loopne
cmp
into
xchg
mov
nop
ret
repz
nop
in
cmc
cli
leave
cmp
fcmovnbe
in
inc
les
fsubp
ret
jmp
mov
jecxz
int3
cmc
int
not
sub
cli
xor
in
aam
roll
std
cld
sub
nop
or
sub
sti
fdiv
std
cmp
idivl
enter
dec
mov
test
call
cld
cli
cmp
aas
cmp
div
fmull
sub
ljmp
idiv
sti
lock
sarb
repnz
into
test
fimuls
stc
enter
lret
xlat
fstpt
aad
iret
flds
cld
jmp
repz
xchg
mov
jecxz
in
jmp
sar
cmp
mov
fdivr
mov
lret
loopne
jmp
out
out
repz
clc
std
aam
std
orb
test
in
ljmp
repz
rcr
int3
into
test
sti
ret
mov
std
std
in
xchg
out
out
repnz
in
cld
pushl
call
jmp
cmp
jne
mov
xor
add
mov
mov
mov
jmp
sarb
ret
enter
fldl
jge
int
cmp
push
add
int
loope
faddp
adc
add
fmuls
xchg
in
ret
jmp
sarb
xlat
out
lret
in
clc
cmp
shl
aas
jecxz
incl
shr
xchg
aam
das
icebp
repnz
out
ds
call
cld
ds
repz
xlat
aad
in
xchg
enter
xchg
iret
das
repz
leave
cmp
jmp
in
fcomip
out
loope
enter
enter
loope
in
loope
xor
cmp
leave
cmp
in
cmc
fdivrp
cmp
repnz
cmp
in
out
jmp
addl
sar
leave
fsubr
sar
in
in
shl
mov
into
shlb
int3
ret
out
ret
fidivl
in
int
int
fiadds
lret
fisttpl
and
hlt
lret
ss
cli
aaa
out
repnz
ret
test
jmp
ljmp
xchg
xor
call
ffreep
testl
ljmp
jmp
xor
std
cmp
rol
f2xm1
addb
decl
aad
shl
cmp
sarl
out
idivb
fadd
xchg
faddp
cli
in
loopne
loop
aam
sarl
xor
enter
sti
loopne
aas
jecxz
fsubr
fisttpll
in
xlat
ret
stc
out
xor
cmp
in
cld
fcmovnb
call
loopne
icebp
mov
in
xchg
out
cmp
shl
rcr
lret
fadd
sti
loope
rcl
loopne
leave
out
out
in
jmp
in
cli
idivl
xor
in
ffreep
cmp
loopne
mov
imul
jmp
icebp
rcll
int3
clc
ljmp
icebp
loopne
cmc
test
test
jmp
jmp
repz
rol
leave
fucomi
xor
test
loop
stc
enter
addl
mov
mov
int3
aaa
fldcw
xor
jmp
call
idivl
aas
icebp
mul
aad
cmp
fimuls
xchg
fildll
stc
in
xor
fxch
aaa
loop
stc
aad
std
orl
cs
cli
sti
fstp
fst
repnz
ret
clc
leave
rorl
out
loope
incb
int3
xor
enter
sti
cmp
fdivp
aas
sarl
xchg
aad
cli
ss
ss
lock
test
sar
mov
in
loopne
jecxz
xchg
ret
loope
nop
in
neg
cmc
repz
rcl
stc
loope
fcmovb
test
lret
mov
xchg
in
jmp
fxch
aaa
call
xlat
repnz
aad
test
cmc
add
test
xchg
lock
hlt
in
shl
clc
shr
jmp
in
lret
in
out
in
xchg
int3
into
shl
in
iret
not
idiv
cmp
loopne
fcmovnbe
ds
rcr
cld
loop
cli
sbb
xchg
jecxz
in
aaa
into
idiv
std
int
int
iret
sbb
clc
std
aam
fidivrl
loopne
iret
in
xchg
incl
lret
out
neg
cmp
lret
cmp
icebp
adc
fsub
addb
xchg
enter
out
fsubr
out
ds
repz
loopne
jmp
ficoms
shll
into
xor
cmp
hlt
sti
stc
add
shl
rol
test
xchg
out
lock
shr
lret
cmc
iret
cmp
adc
ret
mov
stc
jecxz
cld
mov
lock
out
fbstp
das
in
cmp
aad
cld
call
shl
xchg
cld
fdivrp
enter
in
fcomi
in
das
in
iret
hlt
cmc
icebp
cmp
ret
out
cmp
rcr
aad
xlat
fdivrp
jmp
loopne
xor
out
idivb
aaa
div
ret
xlat
out
loop
xlat
mov
mov
xchg
cmc
mul
jecxz
sar
leave
in
adc
aam
aam
aas
std
mov
in
add
into
lea
xlat
ss
int
xlat
int
repnz
rol
jmp
cmc
fimuls
shl
mov
lock
xor
xor
repz
in
idiv
out
aam
rcr
enter
testb
ror
icebp
lock
xor
cmp
cmp
cmc
mov
cli
mov
test
loopne
xchg
iret
ss
jmp
fdivr
lret
in
out
shl
xor
cld
clc
lret
out
jecxz
addl
cld
push
pop
sub
add
mov
jmp
ror
fmul
fcomp
fcmovnb
aad
jp
xchg
div
jle
add
add
jmp
into
into
neg
fnstsw
std
shl
into
rcr
loop
xchg
lea
out
hlt
sbb
out
xor
in
fstp
call
sarl
test
in
mov
out
mov
ljmp
cmp
dec
cmp
test
stc
in
lret
out
ret
mov
in
stc
fsubrp
sti
out
sti
cmp
cld
sti
out
clc
in
in
fmuls
ljmp
out
shr
lret
jmp
iret
sbb
call
out
mov
lret
repnz
int
sti
int
cmp
aas
idiv
lock
loopne
cmc
mov
clc
test
test
loope
call
int3
out
leave
cmp
fdivr
cmc
hlt
into
sar
repnz
out
faddl
int3
aas
lret
xlat
fidivl
in
jecxz
icebp
out
testb
into
lock
fmulp
xchg
mov
out
jmp
ss
rolb
fcompp
xor
cli
mov
into
fcmove
mov
call
ljmp
bnd
sti
imul
rcr
fcmovnu
in
jecxz
xchg
loop
repz
hlt
repnz
fadd
rcr
leave
imul
fmul
loop
stc
hlt
stc
cmp
or
in
repz
nop
sub
cmc
lret
clc
aam
icebp
in
aad
ret
xchg
rol
stc
mov
xlat
xchg
mov
loopne
xchg
repnz
out
sti
xor
out
loope
fdiv
xlat
test
fmulp
fisttps
std
mov
xor
cmp
fdivr
out
out
ljmp
ret
cmc
hlt
leave
clc
test
mov
into
xchg
mov
cmp
in
ljmp
aam
out
shl
aam
mov
out
in
aad
aad
not
aad
shl
cmpb
loop
xlat
cld
test
xor
sti
nop
lret
ror
mov
out
test
cmp
into
sti
aas
cld
aam
loope
sub
mov
out
hlt
mov
jecxz
aad
aaa
cmp
call
idiv
cli
aas
out
cld
fcom
jmp
mov
loop
iret
mov
loop
lret
cmp
idivb
std
repnz
loope
test
fcmovnb
loopne
int
orb
iret
rcr
std
call
cmp
in
cmp
icebp
loop
jmp
enter
mov
repz
sti
ljmp
faddl
icebp
loope
loop
in
test
std
call
xor
cmp
int3
cmp
int
ret
ds
enter
cld
int3
addb
out
enter
aaa
sti
clc
lock
lds
mov
std
out
fadd
shrb
int3
into
test
stc
test
cli
out
lret
fprem
int
ljmp
iret
cmp
enter
ds
sub
out
ds
sub
int
fucomip
fiaddl
das
out
hlt
ret
cmp
hlt
fnstcw
ljmp
jmp
xlat
xchg
in
into
jecxz
int3
loopne
xor
sub
fcmovbe
repz
sar
jecxz
xchg
mov
lret
into
cld
into
xchg
imul
jmp
stc
cmc
cmp
cmp
aam
clc
test
jmp
repnz
cmp
shr
xor
jmp
ret
std
loope
fst
stc
in
xchg
and
das
hlt
xor
out
cmc
cmp
fldl
cmp
mov
hlt
int3
jmp
rorl
sub
shr
leave
rcl
enter
repnz
clc
aad
shl
lret
int3
stc
call
decb
lock
xor
dec
int3
ljmp
leave
xchg
jmp
dec
lret
std
sarl
loop
shl
in
hlt
sti
in
clc
stc
filds
in
xchg
aam
ror
leave
icebp
ljmp
rcl
ds
mov
int
out
stc
jmp
mov
in
jecxz
xor
rcr
ret
cli
ftst
neg
fldl
xchg
iret
aam
lret
loopne
int3
shl
into
out
loop
xlat
mov
orb
das
iret
aad
in
rcr
hlt
call
cmp
flds
mov
testb
out
aaa
aam
hlt
in
fdivrl
cmp
fidivrl
cmpl
loopne
out
leave
fimuls
xchg
mov
lret
shll
iret
fstp
in
xlat
fcmovb
icebp
test
fneni(8087
xlat
lret
mov
xor
lea
cmp
jne
jmp
int3
int
fstp
cmp
pop
pushf
fs
add
add
jecxz
and
into
imul
cmc
in
xor
ljmp
loopne
loope
loopne
loopne
xchg
orb
cmp
sarb
loope
ret
jecxz
std
in
stc
lret
jmp
cmc
mov
ljmp
xor
cli
cld
loopne
cmc
ret
out
loope
jmp
jecxz
out
in
lret
cmp
out
cmp
jmp
rol
cmp
hlt
xlat
jmp
mov
xchg
lret
out
loope
aad
int
fcom
sti
shr
xor
xchg
mov
out
icebp
subb
repnz
cli
adc
xchg
lret
jecxz
into
lock
call
xor
in
repz
ss
xor
loope
test
test
cld
out
icebp
orb
lret
xor
call
rol
fcom
cmp
cmp
test
sub
lret
jmp
jecxz
hlt
loope
jecxz
jmp
ror
icebp
repz
sar
cmp
or
out
and
xor
loop
test
jecxz
repnz
call
cmc
jmp
xchg
xor
cmp
int3
lret
std
into
fcmovnb
aas
in
icebp
fsub
xchg
mov
aam
in
call
ss
ffree
int
or
neg
cli
fisttpll
test
mov
call
fcom
into
cld
lock
cli
in
rcr
repnz
xchg
enter
in
xor
rcl
lds
out
cmp
xor
cli
stc
hlt
rcl
out
call
filds
cmp
enter
cli
lock
out
enter
test
xchg
xor
in
xchg
filds
jmp
out
xor
ljmp
roll
in
std
cld
jmp
test
cli
and
in
in
aad
shl
loopne
jmp
ffreep
fiaddl
enter
lock
std
mov
in
xor
iret
fmul
aaa
out
sar
xlat
roll
fimuls
int3
out
leave
rorb
aad
repnz
fnstsw
ffreep
neg
jmp
loopne
out
xchg
lret
xchg
rol
cli
aas
sar
repnz
ret
loope
in
not
std
jmp
ljmp
xor
das
stc
icebp
rcl
div
hlt
sbb
jmp
mov
ror
jmp
aad
jmp
xlat
test
cmp
ret
jmp
filds
in
xor
sar
ds
icebp
inc
iret
ret
ret
fcmovne
fxam
call
mov
xchg
pushl
hlt
cmp
imul
icebp
cmp
inc
test
test
std
in
loopne
loop
int
iret
sub
cmp
into
sti
sub
loope
cli
nop
out
cld
cld
out
in
iret
test
lret
cli
ljmp
stc
out
enter
mov
fptan
test
fsubp
int
clc
jecxz
into
cmp
cmp
shl
cmp
rolb
lret
orl
int3
jecxz
in
xor
xor
shl
out
fimuls
sti
mov
fisttpl
and
das
aam
ljmp
loopne
shl
mov
mov
out
lds
fidivs
loop
xor
cmp
filds
stc
ret
aam
aad
in
fsubrp
leave
into
cld
call
int
cmc
iret
jmp
sar
icebp
aas
addl
or
xor
ret
xor
aaa
in
call
xlat
fcom
jecxz
enter
xor
xchg
loope
clc
call
cmc
cli
cmp
ss
addl
in
fdivp
in
ret
ljmp
std
cmp
fcmovbe
in
call
and
and
loope
mov
iret
int3
shl
cmc
xlat
icebp
out
int
in
into
in
fucom
ret
adc
out
in
xchg
mov
iret
sti
cld
repnz
cmp
rol
repz
loopne
cld
fimull
in
mov
iret
stc
xor
aam
std
ljmp
hlt
faddl
ljmp
or
ret
iret
ror
hlt
xlat
clc
in
aam
xlat
aaa
jecxz
cmp
hlt
ljmp
xor
repz
push
call
or
jmp
iret
xlat
rcl
rcr
lret
push
cmp
aad
push
std
cmpsl
stos
roll
jle
add
aas
fiadds
faddp
int
neg
enter
out
repz
enter
std
int
jmp
shl
repnz
xchg
ljmp
in
xchg
or
das
sub
xor
cmp
icebp
loope
jecxz
rcl
cmp
sbb
adcb
loope
leave
fdivr
out
cli
cmp
shl
fdivrp
std
lock
mov
iret
in
mov
hlt
jecxz
stc
xor
loope
cmp
repnz
mov
loop
les
push
fsubrp
mov
imul
jmp
enter
out
fsub
rol
xlat
icebp
leave
faddp
loope
mov
das
clc
ss
int
xlat
stc
xor
fprem1
hlt
add
rcr
rclb
out
bnd
xor
icebp
cli
xor
loopne
int
test
repz
cmp
lret
int3
in
cmc
iret
mov
sub
out
xor
shl
cld
xor
rcr
call
xchg
shr
aam
ss
lock
sti
cmp
cmp
shl
iret
loop
repnz
lret
in
out
in
int
call
ror
cmc
xor
int
out
fcmovnbe
cmpl
ret
jmp
lret
clc
out
lea
aam
call
int
out
and
and
repz
xlat
mov
std
loopne
nop
xchg
hlt
cs
cli
hlt
icebp
enter
int3
cli
in
shl
movb
mov
enter
out
cmp
cmp
test
icebp
xlat
icebp
repz
in
loopne
cli
iret
or
out
into
sub
fstpt
cmp
lret
xlat
ret
fmull
out
test
aad
sar
xor
not
repz
out
shl
rol
sti
fimull
out
test
xor
fdivrl
test
fmulp
xlat
loop
jecxz
out
sti
mov
cld
mov
int
xor
out
in
out
ljmp
aad
out
mul
enter
mov
cld
out
ljmp
cmp
lret
aas
testl
std
std
mov
mov
shr
cmp
out
leave
loopne
sti
aas
or
hlt
rcr
xchg
cmc
fisttpl
repnz
out
in
stc
cmp
fdivs
aaa
fsubr
iret
loopne
hlt
repz
cld
loopne
in
jecxz
out
faddl
cli
repnz
fidivrs
lock
xlat
lret
fsubp
rcr
cmc
add
ljmp
in
aam
cli
hlt
xor
cmp
iret
cld
fdiv
flds
ret
roll
loope
xchg
xor
int
fscale
aas
loope
xor
xor
icebp
out
std
hlt
xchg
in
int3
jmp
adcb
xor
repnz
int
mul
in
shl
and
lret
mov
iret
nop
int
mov
out
in
ljmp
aad
ffreep
icebp
fxch
aas
test
in
xchg
in
lret
in
jmp
xchg
rcl
repnz
fsub
xlat
repz
enter
sar
shl
inc
cmc
fmul
lds
ljmp
idiv
cli
lret
jmp
add
sbb
mov
loopne
mov
lock
out
lret
xchg
out
ljmp
fcmovnb
shr
cmc
sti
ret
in
addl
clc
les
cmp
not
lock
neg
ds
in
mov
in
mov
repz
out
call
sarl
rcr
sar
in
rorl
ret
and
fidivrl
enter
cmp
out
xchg
in
clc
jmp
in
xor
xor
xor
idivl
repz
and
cmp
repnz
xchg
out
int3
ret
ss
int3
xor
aad
cmc
lret
lock
rolb
jecxz
sub
nop
int3
in
in
lock
aaa
imul
idivb
cmp
inc
sbb
fnstsw
lret
orb
in
cmp
in
cld
repz
stc
cmp
in
call
xchg
mov
int3
int
std
int3
test
xor
call
aaa
cmp
loop
loope
shl
fcomp
enter
flds
test
ljmp
aam
test
sbb
xchg
cmc
stc
cmc
mov
leave
repnz
rolb
fsubr
ljmp
mul
xlat
std
fdivr
aam
lret
fimull
out
xchg
aas
xor
ret
pop
leave
ret
push
mov
jmp
into
lret
rcr
xor
mov
cmp
add
add
cmp
in
cmp
cmp
out
sti
xlat
hlt
iret
loope
aad
xlat
lds
out
roll
in
xor
lret
cmp
jecxz
loopne
aam
xchg
fldpi
ret
lret
xchg
out
aam
ljmp
cmp
cmp
cmp
aam
lret
in
xor
xor
shl
stc
shl
cmp
aas
cli
xlat
shl
cmp
rolb
loopne
iret
xor
cmp
shr
stc
clc
fyl2xp1
fdiv
into
xchg
fcomi
fucomp
std
mov
jmp
cli
xchg
aad
sub
ss
xor
mov
ljmp
mov
rcl
xor
aam
xlat
ljmp
rcl
icebp
in
out
orl
test
nop
xchg
loop
aad
jmp
cmp
cmp
fstp
flds
in
lret
xor
in
in
iret
aam
call
rcl
into
stc
aaa
idiv
rcr
cld
addb
in
enter
cmp
lock
cmp
loope
cmp
fldl
mov
call
repz
aaa
repz
call
cmp
adc
jmp
xlat
test
sub
ljmp
stc
cld
ror
fcmovnu
lret
test
fcmovnbe
sti
sti
loope
in
xchg
loopne
hlt
ss
jmp
int
clc
rcr
in
cmp
out
add
leave
int
out
fisttpll
xor
testl
fld
out
out
cmp
cld
int3
fst
xorb
call
hlt
sti
neg
xlat
aad
ret
xchg
std
xchg
ljmp
rol
leave
icebp
int3
cmp
ljmp
leave
aad
sti
leave
stc
mov
lret
xchg
in
enter
hlt
cli
xlat
repz
leave
loop
std
loope
cmp
aad
fmulp
loopne
loop
lea
lret
cmp
into
div
icebp
hlt
std
cmc
iret
fnop
repz
shl
mov
mov
mov
shll
fst
fdivs
shl
lock
out
xchg
fsubp
in
fmul
in
leave
iret
mov
fsubrp
in
sarb
out
cmp
repz
lock
fnstsw
in
div
in
out
loope
loopne
out
int
in
jmp
stc
leave
int3
cmp
lret
cmp
fninit
ljmp
faddp
out
sti
fldl
not
in
out
xor
fcmovnbe
idiv
aas
stc
mov
test
mov
std
div
shl
cmp
xor
lret
int3
stc
adc
enter
int3
lret
clc
jmp
xchg
in
out
call
cmp
cmp
hlt
fdivrp
test
test
jecxz
out
out
loopne
jmp
cli
xor
clc
jmp
cmp
into
out
mov
cmc
out
loop
in
ljmp
shlb
vpsllq
xlat
out
fsubr
sub
lock
ret
movb
nop
int3
fsub
xor
iret
cmp
sti
fxch
aad
icebp
dec
test
out
in
call
jecxz
notb
cmp
lock
cmpb
imul
ret
out
cli
call
ret
jmp
int3
fsubr
cmp
cmp
cmp
in
shl
rcr
jmp
loopne
mov
or
in
test
out
clc
cmc
aas
clc
out
shl
cmp
fisttpll
mov
out
xor
xor
xor
clc
cld
cmp
int
iret
aam
cmp
cmp
int
xchg
ljmp
idiv
xlat
std
stc
cmp
aas
sti
in
push
neg
jmp
fiadds
adc
xor
call
cmc
divb
rol
xchg
clc
incl
hlt
hlt
adc
out
std
cmp
lret
sti
testb
loopne
mov
and
xchg
ljmp
stc
ret
cmp
cmp
lock
icebp
icebp
icebp
loop
fiadds
int3
fisttpll
call
shl
in
xlat
out
out
into
cmp
iret
cmp
rcr
in
fucomi
in
loopne
push
int3
xor
loop
xor
int
call
rcr
fcomip
xchg
int3
fcomp
loopne
shl
out
xchg
loop
cmc
cmp
das
out
out
iret
div
in
aam
in
inc
sbb
push
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
sub
mov
sub
movl
adcl
jmp
mov
fcmovne
jnp
xchg
jb
mov
add
add
loopne
test
repz
aas
lret
lock
xchg
sub
lock
shl
shl
ljmp
jecxz
fsubr
vpmovmskb
out
int3
cmp
in
test
out
int3
sub
aas
fdivp
loop
lock
mov
in
cli
xchg
int3
std
mov
in
jecxz
xor
rcl
loop
adc
fdivr
loop
fadds
mov
mov
in
not
jecxz
out
cmp
out
in
out
fnstcw
repnz
lret
xchg
ret
rcr
xor
incl
xlat
and
hlt
jmp
addb
mov
iret
enter
icebp
std
ljmp
xchg
movb
in
imul
lret
not
iret
aam
out
flds
xchg
fmuls
rorb
fdivr
repz
lock
fdivr
loopne
clc
jecxz
aas
test
jmp
xchg
aad
div
out
out
lret
rcr
repz
cld
cld
icebp
ret
xchg
sti
mov
idiv
add
jmp
clc
leave
jmp
repz
and
enter
repz
sub
out
jecxz
lret
sarl
aam
repnz
test
fucomp
into
jmp
in
xor
repnz
aam
in
aam
repnz
ret
out
fdivr
int
orb
icebp
out
stc
sti
leave
xor
shl
ds
icebp
out
in
loopne
rorl
xchg
std
fldl
out
sarb
aas
fdivp
cmp
rcl
xor
out
out
xchg
leave
lret
std
or
icebp
iret
ljmp
shr
jecxz
inc
mul
aad
jecxz
test
in
loope
shr
xor
rcr
sarb
jmp
rcr
cmp
loop
fisttpl
call
in
lret
enter
out
repz
stc
sar
fucom
std
aam
ljmp
repz
neg
aad
xor
jmp
cmc
rcr
repz
fdiv
cmp
add
sbb
sbb
mov
sub
int
enter
aas
in
aas
and
hlt
shl
fsin
int3
lea
in
sarb
cli
sti
jmp
aam
in
fiaddl
cli
clc
lea
aam
clc
in
lock
cmc
fdecstp
cli
clc
out
cld
repnz
xchg
loop
repnz
in
ret
into
aaa
icebp
repnz
icebp
cli
rcr
ds
out
in
mov
in
popl
repz
fcmove
aaa
call
cmp
cli
mov
rorb
cmc
into
xlat
fsubr
cmp
enter
repz
movb
sub
loop
mov
hlt
enter
enter
out
ror
repz
decb
int3
out
mov
iret
int
fcomi
std
out
aaa
fdivr
idiv
in
in
in
out
test
call
in
ret
xor
std
jmp
cmp
lret
addb
add
rolb
jmp
enter
clc
cmp
imul
fcmove
nop
lret
std
xchg
ss
cmp
fcmovbe
shl
fsubr
test
test
in
into
int
xchg
add
xor
iret
ds
aas
test
test
test
xchg
test
loopne
cmc
lret
divl
out
cmp
idiv
shl
aas
test
sti
test
rcll
into
cli
iret
jmp
iret
test
in
fld
in
fsub
loopne
fldl
shl
ss
in
cmp
clc
fsubp
aad
call
in
int
fmull
mov
xor
out
xor
in
call
rcl
fcomp
aas
lret
test
sub
aam
enter
fcomip
cmp
in
in
ror
out
shr
sub
rorb
ss
fcomp
jmp
cmp
clc
fcmovb
shr
leave
mov
lock
out
loop
mov
lock
in
cli
out
cmp
roll
loop
cmc
loope
ljmp
test
or
adc
mov
mov
jmp
lret
ror
rcr
lret
fistl
pop
jns
filds
jle
add
out
mov
xor
ret
int3
call
aam
icebp
repz
hlt
repnz
faddl
nop
xor
into
repz
fnstcw
jmp
rolb
repz
out
stc
mov
out
aam
lock
icebp
fstpt
fiadds
mov
dec
mov
rcl
iret
loope
enter
fsubr
cmp
loop
lock
shl
add
sti
xor
shr
fidivrs
jmp
sti
hlt
leave
aad
cli
div
in
fcomi
xchg
in
ret
in
stc
fcmovu
loop
mov
orl
in
fdivrp
ljmp
clc
rcr
loopne
faddp
fists
test
loope
repz
hlt
cmp
loop
into
ror
jmp
cli
idiv
int3
in
fdivrp
jecxz
shll
cmc
clc
cli
int3
xlat
out
in
into
clc
fsub
sbb
filds
loopne
stc
mov
jecxz
xchg
icebp
ss
in
rcr
stc
sar
xor
loope
cld
mov
hlt
lds
mov
jmp
out
in
cs
out
enter
iret
rcl
rol
rol
xor
loopne
xchg
or
in
int
cli
fucomip
bnd
loope
cmp
fiadds
faddp
sti
test
icebp
lea
jmp
cmp
jmp
iret
sti
loop
iret
clc
in
imul
ljmp
repz
ljmp
cmp
shl
aas
test
aad
mov
out
mov
jmp
repz
in
clc
into
aam
xlat
into
cmp
fsubrp
shl
fcomi
xlat
out
clc
int
mov
fisttps
rcr
iret
out
xlat
enter
les
stc
repz
imul
lea
xchg
mov
test
jmp
repnz
sbb
sar
fadd
ljmp
int3
lea
mul
shr
out
aaa
out
aad
in
into
incl
lds
nop
loope
xchg
xor
stc
jmp
cli
aad
ror
cmc
iret
cmc
cmc
loope
cmp
loop
into
repnz
out
int
call
loope
neg
fst
aas
aas
jmp
in
stc
in
xchg
lret
iret
xor
cli
loopne
xor
fcmove
test
cmp
ret
in
aam
xchg
int
call
in
aam
cmc
sti
shl
int3
sarl
loop
ljmp
ret
jmp
cmc
mul
lret
repz
aad
aad
mul
cmp
div
in
mov
mov
test
sti
test
xor
shl
cld
call
rcr
flds
cld
into
fmull
jmp
in
enter
ds
xor
icebp
xlat
aad
out
fcmovu
in
xchg
shr
loop
repz
xlat
in
jmp
clc
shlb
in
lock
loope
ljmp
fcmovnu
cmc
mov
aam
iret
sti
cmc
int
shl
filds
lret
lea
call
loop
repnz
stc
imul
jecxz
cli
cmp
iret
rolb
in
sti
into
repz
shl
lock
in
fstpt
in
in
fabs
lock
faddp
ror
ffree
sti
lea
into
vshufps
into
rcl
shl
fstpt
faddp
cld
cmp
sbb
fsubp
decb
out
xlat
enter
cmp
adc
fdivp
test
out
add
ljmp
clc
xor
clc
xor
in
aas
cmp
in
loop
leave
cli
int3
in
in
rorb
xor
xor
call
repz
call
movb
mov
addl
in
cmc
rcl
stc
jmp
in
in
icebp
fdivp
out
xchg
xchg
test
sar
ljmp
xlat
repz
loope
fstpt
fadd
loopne
fcomi
pop
jmp
mov
leave
shr
cli
cli
rcr
fcomp
loop
int3
cmp
hlt
mov
mov
loope
into
into
xor
cmp
fdivrs
int3
fcomip
in
ret
xlat
sarb
mov
ljmp
out
ror
enter
repnz
loopne
fcmovnbe
rcl
cmc
ret
aam
fisttpll
in
int3
xchg
xor
into
cmp
icebp
sti
aam
shr
lds
add
enter
int
fnstenv
nop
popa
mov
stos
add
fsubrp
jecxz
jecxz
sti
xlat
addb
icebp
loope
xchg
rorl
cli
cmp
hlt
jmp
iret
in
sub
out
xchg
hlt
repz
call
cmp
jmp
fcmovnbe
ss
test
jmp
jecxz
cli
repnz
in
in
mov
ljmp
xor
cmp
cmp
xlat
mov
in
shl
mov
sub
cmc
aam
out
fcmovu
fdivr
iret
add
lret
out
fnclex
loop
mov
out
in
xor
int
loopne
fiadds
les
fsub
mov
loope
lret
shll
icebp
ror
cmp
rcl
cld
and
shl
clc
div
lock
or
icebp
cmp
clc
xor
repz
cmp
ret
fadds
loope
or
out
cld
repnz
imul
xor
fsubrs
in
call
icebp
hlt
iret
xchg
in
leave
cmc
mov
or
or
out
enter
xor
test
into
xor
in
test
rolb
int3
sbb
int3
repz
loope
cmc
fldl2t
fdiv
lret
ljmp
fmul
xlat
iret
sar
int3
out
sub
xchg
into
fcom
stc
out
out
clc
imul
cmp
cmp
std
aam
lret
enter
loope
loop
icebp
clc
icebp
enter
shl
stc
ret
out
clc
fucom
ljmp
mov
shr
repz
out
rcr
xor
cmp
fucomi
cmp
xor
xchg
jmp
call
xchg
fmul
adcl
xor
shr
lret
shr
div
loopne
sti
int3
xchg
add
lret
loopne
xor
aam
idivb
out
sti
test
rcl
cmp
or
aam
leave
fcmove
mov
mov
cld
notb
hlt
cmp
int
aas
fadds
xchg
test
loope
mov
shl
sub
aam
shlb
sbb
in
enter
jmp
leave
xchg
icebp
xor
xor
ljmp
repz
cli
lds
testl
call
leave
lret
aam
hlt
loop
cld
cmp
mov
into
call
nop
loopne
ret
fincstp
ss
out
out
cmp
mov
jecxz
test
int
cld
rcl
loopne
xchg
xor
leave
xabort
call
cmp
out
std
repnz
fxam
xchg
into
lret
ror
in
out
jmp
xor
std
int3
shl
out
frndint
jmp
or
int3
push
aad
shl
lock
lock
into
repnz
in
ffree
jmp
sbb
jmp
hlt
loop
adc
into
xor
clc
fdivrs
fcmove
hlt
clc
fsub
addb
xchg
xchg
and
ret
out
clc
ljmp
lock
jecxz
aaa
cmp
rcl
sti
inc
out
faddl
xchg
cs
out
aad
jmp
lock
not
loop
fcmovnbe
lret
int3
mov
lret
icebp
int3
repnz
xor
or
flds
mov
jmp
loopne
mov
lret
shr
in
into
fidivrl
in
out
jmp
int
cmp
xchg
enter
leave
repnz
ror
in
ljmp
ret
test
jmp
jecxz
fcomp
int
mov
mov
sub
cmp
aad
fdiv
lret
fmulp
cmp
loopne
int3
jmp
stc
mov
repz
sti
lret
jmp
rcr
fiadds
xlat
in
loop
test
loop
test
loop
shl
sti
out
sar
repz
and
loope
out
loop
leave
fst
xchg
nop
loopne
hlt
fnstcw
out
hlt
int3
in
std
adc
loopne
fadd
cmp
out
out
ljmp
sar
repnz
sti
aam
jmp
in
ds
cld
ret
test
sti
lock
test
xor
test
int
repnz
sub
hlt
les
in
mov
test
in
out
imul
aad
std
out
loope
rcl
test
std
hlt
jmp
mul
std
xchg
into
into
xor
cmp
out
cmp
out
sbb
fdivr
aam
testl
arpl
jmp
ret
fmul
fcom
fdiv
jne
sub
add
add
int
std
nop
adcl
icebp
clc
int
repz
rol
rcl
into
les
lret
lret
mov
loop
repz
jecxz
ss
fxch
cmp
fsub
xlat
cli
rol
aad
mov
shr
iret
cmp
fcmovnbe
sarb
cli
faddl
call
ljmp
rcll
call
neg
div
fidivrs
clc
hlt
cli
fdivp
in
out
iret
lret
cmp
leave
fcmovnbe
frndint
sti
out
std
idiv
cmp
fcmove
jmp
jecxz
loope
fsubr
shl
jmp
jmp
int
shl
sarb
in
out
lds
int
repnz
loopne
stc
leave
cmp
jmp
aad
sar
fcomp
les
jmp
xchg
in
out
repnz
iret
xor
sarl
cmp
cld
call
mov
xchg
icebp
out
in
iret
rol
cld
call
icebp
cmp
inc
loop
lret
mov
xchg
cmc
xor
clc
sti
fxam
jmp
std
aad
in
or
testl
mov
out
std
repz
stc
shr
ss
cld
out
ror
xlat
loop
leave
dec
fbstp
sarb
lock
lret
fdivrl
xor
hlt
idivb
out
mov
ljmp
rcr
ror
lret
icebp
leave
fsubr
fdivr
testl
ds
jmp
incb
enter
xor
cs
aaa
lret
shr
cmp
cld
dec
mov
xchg
mov
repz
jmp
ss
stc
pushl
xlat
fdivp
test
out
ljmp
repz
in
jmp
cmc
cmp
sarl
lock
shl
cli
loopne
rcl
int3
loope
in
ss
repnz
roll
hlt
icebp
aad
test
xchg
fstl
jmp
shl
in
ljmp
repnz
out
ret
out
call
sti
call
xor
call
in
sarb
jmp
sti
test
jecxz
in
iret
mov
out
leave
ljmp
xor
iret
fcmovnbe
fld
icebp
mov
hlt
out
loopne
in
mov
jmp
shr
out
int3
repz
out
repnz
roll
loope
xchg
in
enter
mov
xor
out
aam
xor
cmp
fcmovne
rcr
std
out
and
loope
aad
xor
xor
lock
cmp
not
cld
stc
ret
hlt
cli
in
out
jecxz
iret
loop
xchg
repnz
aad
fxch
repz
inc
fucom
std
test
mov
test
or
xor
aaa
fsqrt
sar
out
cli
sbb
xchg
out
dec
loopne
sbb
repz
sti
xor
aas
push
iret
loope
aad
sti
mov
aad
jmp
or
xor
repz
cmp
out
repz
xchg
repz
xchg
in
sti
mov
frstpm(287
rcll
div
cmp
ds
ret
les
cmp
loopne
jmp
int
cmc
mov
rol
das
hlt
repnz
cmp
fsubp
sarl
add
fmuls
iret
jecxz
shlb
loop
in
ss
cmc
shl
xchg
incl
out
incb
rcl
leave
into
repnz
fnstcw
sarl
cmp
call
sti
lret
mov
xor
stc
aam
out
ljmp
rcr
ffreep
fld1
enter
fcmovnu
fyl2x
in
std
out
shlb
jmp
xor
fdivrl
sub
call
out
lret
jmp
shl
mov
in
pop
out
shl
lret
aam
lret
in
rolb
shr
test
fisttpll
repz
shr
xor
add
test
rcl
test
lret
ffree
mov
enter
rcl
aad
cmc
rol
cmp
fdivp
stc
stc
mov
fiadds
addb
rol
sub
in
aaa
std
lock
fucom
fcmovu
frndint
mov
in
clc
lock
in
aaa
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sub
jmp
aas
rcl
aad
fstp
loop
pop
mov
popa
in
add
add
fldl2e
aaa
into
fmul
int
int
cld
rcr
jmp
testl
xor
aam
cmc
clc
rcl
test
adc
rcr
fisttpl
ljmp
fcmovb
aaa
test
cli
out
ds
cmp
cld
std
out
out
out
mov
cmp
cmp
int3
clc
fucomp
into
rcr
repz
mov
fldl2t
in
test
loope
xchg
aad
ss
xor
xor
stc
aam
cmc
std
fiadds
test
out
out
fnsetpm(287
addl
sarl
into
aas
cli
out
stc
idiv
std
shl
aam
in
int
fsub
repnz
out
test
jecxz
shll
aam
xor
stc
icebp
out
cld
dec
cld
fmul
in
out
fisttps
lock
repnz
fstp
std
out
sarl
iret
add
aam
bnd
enter
std
iret
in
xchg
iret
les
loope
jmp
xlat
jmp
test
ret
orb
std
lret
ljmp
shll
cld
lock
xor
ds
out
cli
adc
addb
mov
lret
iret
cmp
in
lret
aaa
icebp
and
clc
loopne
jecxz
mov
ljmp
jmp
aam
aam
into
xlat
out
ss
rcr
cmp
loopne
fucomip
cmc
stc
clc
in
fists
call
lock
xor
cmp
aad
loope
aaa
aas
out
cmp
loope
mov
in
jecxz
aad
repnz
enter
into
call
in
fsub
adc
sub
in
icebp
fildl
xor
cmp
out
std
fmul
addl
fdiv
loopne
loopne
shl
lret
loope
out
aam
cmp
cld
cmp
hlt
fneni(8087
neg
repnz
xchg
lret
nop
iret
decb
aam
in
fyl2xp1
fdivr
fst
lret
add
ds
out
int
mov
repz
xchg
lret
fcomp
jecxz
xor
aam
loope
out
hlt
cmp
cmp
add
std
repnz
int3
rol
shl
ds
lret
test
xchg
mov
aam
call
nop
dec
call
not
xor
ds
shl
xor
fdivrp
fcomp
enter
jmp
cs
xor
cmp
std
xor
clc
cmp
orb
jecxz
lret
mov
call
rol
aad
into
ret
fsubr
icebp
ds
lret
rol
int
fstpt
mov
mov
enter
std
repz
leave
les
cmp
sti
aaa
stc
push
shl
xor
mov
clc
in
in
mov
shll
leave
icebp
cmp
cmp
test
cli
lds
jmp
loop
sub
aaa
hlt
idivl
dec
out
xor
and
xchg
mov
leave
fcomi
fdivrs
cmp
aad
cli
mov
shl
neg
xchg
in
xlat
loop
lock
sti
fmulp
shl
ret
adc
mul
jmp
mov
in
and
jmp
sub
fsqrt
lock
fmul
aad
rcr
into
neg
fadd
out
loop
addb
xor
jmp
in
std
ret
iret
repz
rol
ret
loope
fsub
loop
out
lock
repnz
into
or
cmc
call
mov
rcl
out
sub
in
in
lock
clc
fidivrs
aas
hlt
mov
repz
fmul
std
in
out
loope
loope
cmc
ss
ret
repz
cli
not
out
in
stc
faddp
mov
fsub
fsub
mov
int
repz
enter
xlat
ljmp
rorl
mov
shr
faddl
cmp
lock
sar
aaa
cmp
cmp
mov
lds
ljmp
imul
ror
xor
loope
ret
ret
repz
jmp
in
iret
leave
rcl
cmp
fsub
in
iret
cld
xor
cmp
cmp
stc
cmc
into
loope
mov
incl
shl
shr
lret
aaa
loope
ret
adc
jmp
int
and
sub
test
into
in
jmp
xlat
aad
call
repz
mov
sbbl
jmp
leave
aad
xlat
fcmovnu
ret
pop
lock
lahf
push
push
fmuls
add
filds
lret
cld
hlt
adcl
lock
fucompp
loopne
jecxz
aad
fcom
decb
ljmp
ret
out
cmp
cmp
cmp
fcmovbe
repnz
cmp
loope
popl
nop
xchg
into
fcom
ror
cmp
shl
ljmp
not
mov
aam
in
nop
fsub
fmul
repnz
sub
ljmp
cmp
sar
out
in
mov
fcmovu
and
mov
xor
hlt
out
xor
sar
lock
aam
rcr
fcomp
addb
clc
out
int3
jmp
lock
hlt
leave
lds
xlat
fdivrl
cmp
fld
ffreep
loopne
fdivr
aad
clc
fsubr
int
loop
call
fnsave
cmp
icebp
hlt
fistpll
cmp
rorb
jmp
loop
fists
ror
leave
shr
loopne
fdivrs
ljmp
leave
test
loopne
mov
test
cmp
aaa
in
fmulp
cmp
idiv
out
sar
mov
mov
or
in
enter
idivb
ds
cmc
aad
inc
fnop
adc
testb
jmp
in
ret
xor
into
or
or
std
cmc
faddp
or
jecxz
clc
rcr
clc
xlat
lret
fucom
sarb
sbb
loop
loop
sub
lret
mov
orl
xbegin
cmc
cmp
ret
repnz
testb
int
loope
repnz
cli
lret
fdivs
ljmp
cmp
cmp
lret
fmul
incb
in
out
iret
neg
out
ss
ret
fistpll
test
and
xlat
shlb
in
sar
cmp
in
rcl
sti
lret
mov
leave
mov
xor
aam
out
sub
in
fdiv
out
add
hlt
fiaddl
fdiv
mov
xor
cmc
clc
cli
ljmp
in
jmp
in
mov
test
ljmp
fmul
hlt
in
fadd
fcos
ffree
test
test
in
in
hlt
orb
icebp
cli
fdivrl
sbb
clc
int3
sarl
sbb
out
testb
addb
repz
aam
div
cmp
shr
aam
test
out
test
std
lret
xchg
jmp
out
std
fstp
fucom
cmp
xor
rol
cmp
enter
in
repz
shl
aaa
loop
int3
fcomi
fneni(8087
jecxz
loopne
ret
lret
mov
xchg
xchg
repz
sarb
xor
leave
mov
lret
shl
fptan
iret
mov
mov
shll
int
int
incl
ror
mov
mov
mov
in
mov
in
clc
idiv
neg
out
int
sar
in
test
rol
repnz
call
test
in
repnz
xor
fstp
repnz
jmp
lret
loopne
cmp
jmp
loope
lds
out
ljmp
idivb
cmp
aaa
hlt
aas
fnstsw
in
in
loope
orb
rol
cmp
in
cmp
into
xlat
loope
stc
repz
clc
jmp
lret
in
loop
lds
imul
xlat
shr
lret
jmp
lret
sar
sar
xchg
enter
mov
call
fidivrs
shl
cmp
xlat
fnstcw
loope
xlat
lret
mov
int3
call
sbb
cs
iret
fdecstp
cmp
cmp
hlt
cmp
xor
in
mov
movb
jecxz
shl
in
repz
jmp
loope
sar
fiadds
ljmp
xchg
xor
xor
iret
int3
imul
fstp
aas
jecxz
repnz
std
xor
cli
out
out
out
mov
jecxz
int
enter
aaa
cmc
rolb
stc
in
int3
in
mov
nop
sub
lret
ret
in
test
rcl
out
xchg
in
out
lock
lret
out
fidivrl
out
cld
clc
clc
cli
in
fcomip
in
ret
jmp
clc
mov
add
addl
mov
mov
sub
movl
mov
xor
mov
jmp
ror
ret
int
movsb
inc
push
cmp
daa
cmp
add
add
lret
out
ret
leave
jecxz
cli
fcmovbe
idiv
cli
stc
in
lock
sti
leave
enter
cld
loopne
loope
cld
test
in
xor
cmp
stc
leave
faddp
rcl
fildl
addb
in
mov
aam
xor
fcomi
out
xlat
sbb
cld
stc
loope
popl
mov
xor
in
out
iret
sar
cli
cmp
in
cli
out
test
lret
into
shl
jecxz
out
out
aam
cld
out
std
cmc
fiadds
loop
loope
incl
out
rorb
sub
lret
int3
cmp
cmp
repnz
cmc
lret
fcomp
cld
xchg
repnz
xor
hlt
shl
into
clc
lock
xlat
rol
shl
sar
leave
call
xchg
loopne
xchg
rcll
xlat
lret
call
xor
addl
test
jmp
xchg
icebp
into
clc
test
xor
int
test
testl
in
out
in
xor
xor
in
hlt
lock
jmp
ret
rcl
movb
decb
iret
iret
lret
lds
lret
ss
and
repz
cli
out
mov
cli
addb
in
repz
iret
shl
clc
cli
cli
cmc
ds
cmc
idiv
std
in
incb
repz
cmp
fcmovb
std
in
fdivr
xlat
cmp
lock
mov
idiv
mov
xchg
repnz
loop
shr
cmp
fdivrs
cmp
shr
aam
rol
clc
int3
test
jmp
das
int
cmc
xor
fcmovbe
aaa
lock
aad
add
jmp
ljmp
out
shll
out
fsubrp
loop
rol
rol
ret
fldl
rcr
xchg
xchg
loope
leave
cs
iret
in
std
int
int
rolb
fmuls
mov
into
nop
loop
repnz
cld
fxch
iret
cmp
fmul
jecxz
stc
stc
shl
ljmp
xchg
mov
iret
xchg
xchg
xor
xor
ss
leave
ljmp
lock
cli
cld
jecxz
clc
mov
movl
xor
int
fcmovu
sti
loop
sar
clc
out
xlat
shl
test
hlt
out
xlat
fld1
and
jmp
jmp
aam
sar
ds
cld
out
cmc
addb
int
mov
loope
jmp
aaa
clc
clc
cli
xlat
sti
aam
loopne
std
std
idiv
in
jmp
xchg
lock
fcomip
call
lret
cmp
in
repz
cld
fadds
decb
shl
clc
std
cmp
fdivr
loop
test
cmp
jecxz
lret
lret
test
jmp
cmc
xchg
ss
in
jmp
cmp
in
fmul
ljmp
out
cld
movb
mov
in
lock
int
cmc
das
fsub
idiv
aas
test
clc
loope
loopne
lret
ret
incb
clc
les
ret
enter
jmp
in
ret
aad
lret
clc
orl
int
cmp
repz
cmp
loope
fsub
add
loopne
fsub
decb
in
xchg
jmp
cmp
repz
cld
fdivrl
xlat
rcr
loop
iret
cld
xacquire
sti
sti
fmul
leave
aam
ljmp
aas
leave
stc
cmp
nop
mov
into
xchg
rcr
rcr
clc
xor
fdiv
cmp
clc
cmc
and
neg
mov
nop
ljmp
jmp
ljmp
aad
test
cld
loop
jmp
rol
into
mov
mov
aad
call
out
xlat
in
fucomip
fildl
mov
mov
leave
mov
orb
xor
loope
cmp
shl
out
call
test
fsub
xchg
xor
rol
aad
leave
fsubrp
xor
cli
aad
rol
cld
in
mov
in
enter
xchg
out
test
out
call
cmp
cld
out
cli
jmp
fmul
out
jecxz
out
lret
cmp
out
cmc
loope
cmp
stc
fcmovnb
fsubp
ljmp
iret
nop
test
icebp
xchg
cmc
xor
cmc
cli
cmp
std
movl
jmp
ret
int3
rcl
ret
fldl
stos
dec
push
add
cmp
cld
ret
rol
jecxz
icebp
stc
lret
sti
fcmovnu
in
mov
xlat
jmp
cmp
loop
in
in
clc
sub
loopne
shr
in
repnz
xor
xor
cmp
ror
ds
sar
aas
incb
cli
sti
mov
call
fsubrp
jecxz
in
cli
repnz
repnz
cmp
lock
repnz
in
in
test
clc
in
orb
jmp
hlt
cmc
lock
in
loop
in
rcr
xchg
mov
enter
out
out
test
enter
out
int3
xor
shl
rcl
cmpl
rcl
loopne
sub
mov
xchg
xchg
fdiv
out
aad
aad
aam
jmp
rcr
aas
loope
inc
lret
std
mov
leave
iret
ljmp
icebp
lock
shl
fcmovnu
rolb
cld
int
ret
ficoml
jecxz
xor
stc
out
fcomp
in
sar
lock
fstp
orl
std
fimuls
jmp
xor
ss
in
out
testb
mov
xchg
xor
out
test
fcom
lret
fsubp
xor
in
hlt
mov
std
std
test
xchg
lock
lret
xor
cli
sti
faddp
cli
ds
out
fucom
cli
xlat
aam
test
fadd
out
fmul
rcr
jmp
in
out
stc
ds
fucom
aam
ljmp
iret
jmp
out
xchg
xlat
int
ss
cld
xor
loope
ds
cli
out
testl
ffree
int
test
in
shll
std
int3
repnz
neg
cmp
fcmovnu
rcr
ret
mul
xchg
call
xor
ror
sub
fdivrl
aad
aas
ret
call
mov
lret
out
out
repz
in
jmp
ror
fcmovbe
repnz
lock
sti
mov
out
jecxz
out
leave
out
rcl
cli
int
imul
fiaddl
sbb
loopne
loopne
lret
out
in
int3
jmp
fadd
cmc
out
in
adc
cld
cmp
cli
loopne
aam
mov
fsubrp
leave
xor
jmp
loope
repz
cmc
leave
call
shl
cld
loopne
xlat
call
jmp
jmp
rcr
out
ds
jmp
loop
loopne
aad
hlt
jmp
fisttps
xor
lret
in
shr
in
ljmp
fdiv
in
test
out
call
cmp
out
ror
cmp
sti
sti
into
cld
out
xchg
mov
repz
jecxz
ror
int3
loop
int
ljmp
jmp
in
xchg
mov
repz
in
out
lret
call
divb
jecxz
fcmovnbe
shr
into
loope
cmp
in
cmp
cli
faddl
jecxz
call
subb
xor
cmp
loope
mov
cmc
mov
sti
decl
loopne
loop
into
cld
in
jmp
fdivr
jmp
repnz
cmc
mov
mov
test
nop
shr
loopne
in
fdivs
loop
fadd
jecxz
shl
ffree
inc
sti
enter
fucomip
in
xor
div
icebp
cmp
out
lock
shl
out
aam
cld
xchg
aam
mov
in
icebp
cs
hlt
leave
std
into
xor
loopne
into
in
test
xlat
out
xchg
orl
cmc
cmp
add
mov
mov
test
addb
cmp
out
in
loopne
repz
test
movb
sti
fmulp
incl
cmp
out
in
shl
fsub
cld
in
cli
lock
aam
fsincos
jmp
lret
leave
cld
adcb
cmp
leave
imul
fcomip
test
jecxz
idiv
sti
mov
sbb
loop
ret
fcomi
out
sar
jmp
fld
rcr
repz
call
lret
out
out
aam
hlt
fcmove
cmp
icebp
stc
divl
out
idiv
call
mov
hlt
cmc
lret
aad
std
fstp
cmp
xchg
mov
in
stc
repz
or
lret
cmp
hlt
aam
cmp
aas
cld
fmulp
ffreep
aad
movl
xor
movl
sbb
jmp
fadd
aam
fst
fcoms
sbb
jg
jbe
les
add
orl
in
xor
fldl
mov
cmc
test
int3
into
xor
lret
cli
ljmp
loopne
ret
enter
loope
loopne
std
jmp
cmc
xlat
rol
aaa
cmp
xor
in
cmp
fsubp
aad
xchg
xchg
int3
repnz
out
icebp
cmp
out
cld
icebp
fistpll
repz
ljmp
repz
or
enter
int3
out
cmp
sti
ret
cmc
repz
aas
in
jmp
in
lock
subb
aaa
iret
lock
aam
lock
cmp
xlat
fcomp
icebp
vcmppd
fadd
xlat
loope
std
int
icebp
ret
repz
ljmp
shl
mov
neg
mov
test
in
mov
ljmp
fcmovu
cmp
iret
in
ffree
int3
xor
ljmp
in
rcl
icebp
filds
jmp
cmc
icebp
aam
aad
sar
loop
div
loopne
mov
adc
fsqrt
cmp
icebp
repnz
cld
out
repnz
fiaddl
loope
iret
mov
aad
icebp
xor
fidivrl
hlt
xor
loope
std
fsub
ret
mov
cli
jmp
int
out
fmul
in
fsubr
int
out
aam
call
into
in
test
out
decb
aad
ss
dec
in
fdivrp
call
incb
mov
int3
fiaddl
aas
ror
cli
in
int3
cld
xor
shr
in
cli
aam
cld
stc
add
in
mov
ss
ljmp
mul
fcomi
loopne
les
sti
shl
mov
mov
hlt
jmp
repz
idiv
cld
loope
hlt
loop
ret
ljmp
fst
xor
jmp
aas
int
lock
std
cmp
in
ds
repz
xchg
hlt
fdivrs
ss
aaa
cmp
lock
cmp
out
icebp
iret
clc
mov
decb
test
ljmp
aam
ds
clc
cmp
xchg
shl
int3
lret
fmulp
cld
in
repz
loop
aam
xor
cli
cli
cmpb
cmc
sar
in
mov
jmp
out
test
adc
shll
sarb
jecxz
icebp
clc
cld
cld
in
fucom
ror
and
ss
out
fdivrl
loope
adc
fcmovu
loopne
test
xlat
nop
loop
jmp
icebp
cmp
ds
shl
stc
adc
div
lret
mov
xchg
divl
in
out
hlt
stc
out
xor
stc
idivb
lock
fsubr
mov
fdiv
rcr
out
xchg
xor
xor
aam
shl
into
fucomi
std
and
les
ret
std
call
cmp
cli
xor
cmp
shlb
shl
sti
loop
out
ljmp
out
loop
ret
stc
iret
fdivrs
repz
xor
hlt
icebp
fiaddl
in
ljmp
icebp
aam
hlt
lret
cmp
cld
fldl
fcom
jmp
ficoms
clc
ret
aad
aaa
fdivr
rolb
call
sbb
xchg
repnz
ret
lock
shr
out
mov
loop
mov
jmp
xchg
into
lock
fucomi
ljmp
icebp
ret
call
clc
lret
nop
shl
iret
in
loope
out
fincstp
cmp
in
jmp
aad
in
fdivr
aam
test
fndisi(8087
fcomi
xchg
xor
jecxz
cmc
fcmovnbe
std
xor
lock
repz
loope
ljmp
and
rcl
jecxz
int3
aam
hlt
int
xor
cmp
xor
mov
leave
out
jecxz
fucom
fsubp
jmp
das
fcmovu
clc
cmp
cmp
fadd
out
shl
loop
out
fsub
int
xchg
out
in
cmp
iret
cli
fnstenv
rcl
cmp
sar
mov
fdivr
nop
xor
mov
icebp
cmp
cld
rol
test
cmp
rol
leave
ret
testb
aam
jmp
int
xrelease
not
movl
sbb
movl
mov
adc
xor
mov
subl
add
jmp
int
int
leave
push
hlt
cltd
loope
mov
xchg
ret
jle
add
shr
xlat
ljmp
jecxz
add
test
add
jmp
test
leave
enter
cmp
int3
rcl
sub
sti
aad
repz
sti
out
mov
in
cmc
xchg
jmp
sti
std
fcomi
out
clc
int
ret
jecxz
les
fninit
shl
mov
out
repz
jmp
ljmp
in
sti
ljmp
fcomp
xchg
ljmp
jmp
call
sti
iret
xchg
dec
fdiv
repnz
out
loope
iret
out
ds
ds
fst
std
sar
fstpt
mov
out
in
in
mov
std
push
xlat
xlat
jmp
fcmove
fnstcw
aas
fmul
cli
in
sti
out
mov
sti
sbb
xbegin
repz
repnz
aaa
cmc
call
test
ss
in
mov
fcmovnb
int3
lds
lret
leave
mul
ss
hlt
cmp
shl
cmp
add
stc
rcr
leave
out
fucomip
lret
fcoml
iret
ret
div
xor
in
idivb
sti
and
int3
dec
mov
cs
cmp
loopne
cld
cmp
in
xchg
loopne
aam
cld
jecxz
add
xchg
loopne
fisttps
fnstcw
enter
cmp
aad
sti
rcr
rcr
cld
in
idiv
sub
aam
jmp
mul
in
into
sti
loopne
in
out
movl
jecxz
aad
mul
xor
fxch
jmp
idiv
lock
loopne
shl
aam
ljmp
fiadds
jmp
cmp
xor
fcmovnu
int3
leave
xchg
into
mov
imul
icebp
leave
xor
out
aam
call
loopne
clc
jmp
out
std
jecxz
addl
xor
in
cmp
fcmovnbe
out
cli
lret
cmp
cmc
icebp
xlat
shl
leave
test
fsub
nop
dec
mov
xor
aaa
out
into
aam
ds
iret
flds
test
sub
int3
fcmovnbe
icebp
lret
cli
cld
cmp
mov
cld
in
mov
jecxz
cmp
clc
stc
cmp
cmp
lock
fstp
mov
cmc
orl
xchg
out
out
test
fdivrs
in
aas
fistpll
std
hlt
repnz
out
test
or
mov
jmp
cmp
call
lock
sti
movb
int3
fstp
rclb
xchg
aas
ljmp
cmp
hlt
ror
shl
xor
jmp
cli
xchg
in
mov
mov
xchg
out
ss
std
in
out
fsin
addb
mov
lret
and
in
in
out
in
cmp
cmp
ret
sti
rol
out
ret
out
iret
std
cld
xchg
das
out
in
aam
aad
ljmp
add
ret
fiadds
xchg
loopne
div
xlat
repnz
ljmp
rolb
lea
faddl
loop
enter
cmp
xor
cld
iret
xor
and
out
in
icebp
std
loop
ljmp
leave
cmp
add
std
loopne
and
enter
lret
neg
test
call
aad
cmc
jmp
int
cmp
repnz
in
iret
ror
into
cli
fdiv
repz
loop
mov
into
out
fcmovnbe
hlt
out
ret
sar
fsubr
enter
shr
xlat
fcomp
test
stc
in
sub
out
in
ror
xor
xor
out
out
sarb
jmp
fidivrs
cmp
aam
loop
fdivr
fcmovbe
xchg
jecxz
aaa
aaa
lret
aam
out
rcl
incb
fsubr
cld
int
lret
out
test
sbb
ror
stc
fdivrs
hlt
repnz
hlt
cmp
loopne
clc
and
xlat
cld
std
leave
sti
int
repnz
xor
loop
cli
fsubrp
ds
lret
fildl
out
lret
mov
lock
rol
stc
clc
xor
loopne
stc
rol
test
ret
sar
div
ljmp
test
not
shr
lock
sarb
loop
aam
ret
leave
ret
jmp
rcl
cmc
fcomi
xor
dec
cmp
loopne
cmp
movl
je
movl
push
movl
jmp
jmp
int
ret
rol
fcmovnu
jecxz,pn
dec
daa
and
outsl
mov
jle
add
cmp
imul
mov
in
xchg
int3
leave
in
out
sub
call
lock
sarb
rcr
in
mov
hlt
fsubr
lret
or
hlt
out
lret
in
rcr
ds
clc
loopne
aad
into
shl
fcmovu
shl
out
in
sub
call
jmp
cmp
out
aaa
fnstsw
ret
fsub
rolb
movl
in
hlt
jmp
fucomp
loop
xlat
faddl
mov
test
fdivrp
icebp
mov
aad
imul
leave
lret
rolb
aam
add
ret
fucom
xchg
jmp
int3
xor
stc
into
cmp
into
in
jecxz
hlt
enter
sti
testl
into
lret
xor
out
shr
stc
in
rcr
aas
jmp
mov
icebp
jecxz
rorl
xor
cmp
fadds
std
jecxz
cmp
into
shl
divl
xor
cld
xor
fcom
sar
loop
aad
shl
lret
xchg
int
into
iret
lock
aam
in
enter
repz
stc
loopne
loope
jecxz
mov
in
adcl
in
lock
idivl
rcr
out
in
cmp
add
sbb
mov
enter
cli
sti
aam
sar
call
into
cld
fiadds
fdivr
jmp
shl
iret
xchg
shl
call
aad
out
cmp
int3
out
xlat
loopne
test
test
sti
fiaddl
out
cmc
cmc
enter
xor
or
leave
ljmp
int3
mov
mov
out
loope
divb
fdecstp
cmp
int
icebp
cmp
cmc
shl
call
mul
in
enter
repnz
into
out
iret
cld
xor
loope
repnz
rcl
clc
icebp
shl
rcr
in
mov
into
leave
nop
jmp
fdivs
lret
iret
lock
out
into
cmp
fisttps
jmp
ret
mov
iret
jmp
xor
jmp
loop
in
lock
ds
enter
out
std
sub
shl
call
cli
fucomip
ds
test
div
clc
fmulp
mov
xchg
out
sub
out
fld
cmp
aad
sbb
jmp
int3
loop
mov
mov
ljmp
icebp
lock
aas
in
rolb
and
loop
out
out
ljmp
fdivrl
repz
sar
xchg
int3
stc
decl
std
xchg
int3
test
hlt
cmp
test
aam
leave
test
testb
cmc
nop
loope
les
in
aaa
idivb
sti
adc
cli
lock
mov
int3
in
ljmp
rol
cmp
into
xlat
xor
fcom
in
lds
jmp
xchg
or
xlat
ljmp
lock
cld
faddl
loope
mov
lret
icebp
or
rol
hlt
out
sti
sar
rolb
ret
add
cld
fdiv
in
mov
leave
aam
fdiv
ror
int3
loopne
fldl
out
cmp
loop
addl
in
cmp
aam
icebp
lret
sti
ds
cld
rolb
xlat
stc
stc
ret
mov
mov
xor
icebp
leave
std
lret
rolb
fstp
jecxz
mov
fucomi
orb
mov
stc
rcl
sti
xlat
aam
into
cmp
aam
cli
and
int
call
loope
das
call
out
repz
cld
aam
cmc
xchg
fdivp
idiv
jecxz
cld
mov
in
shll
jmp
ror
idivl
in
call
cmp
loopne
out
cld
jecxz
in
push
ss
leave
call
fstp
std
cmp
fcmovu
test
xchg
jmp
in
loop
int3
in
out
repz
cmp
aam
add
out
test
and
xchg
incl
stc
fcom
lret
ror
int3
cmp
in
hlt
lock
in
ljmp
lds
ss
xlat
call
leave
int3
fidivrl
in
fneni(8087
out
cld
out
in
sti
loope
xchg
mov
addl
mov
subl
sub
jmp
int
ret
aam
fstp
fstl
fmull
jae
pushf
mov
jle
add
in
in
repnz
fcmovne
loopne
sti
jmp
jecxz
aam
ret
sbb
xlat
in
lret
mov
hlt
aaa
jmp
lock
jmp
cmc
fdivrl
test
cld
sti
enter
fucom
sbb
jecxz
lret
enter
sub
into
clc
in
in
fdivp
test
aad
ret
jmp
fucomp
in
and
ss
hlt
xlat
cmp
cmc
xchg
fdivr
add
jmp
and
fsubr
shll
rcl
vpaddusb
xchg
leave
into
into
fstl
das
hlt
clc
fucomi
in
fdiv
out
xor
clc
xlat
orb
loope
lock
icebp
out
loop
in
adc
push
hlt
loop
test
sti
xchg
out
in
loope
int3
out
icebp
cmp
cmc
ds
aam
ffreep
hlt
icebp
fsub
enter
cli
iret
in
in
ljmp
call
rcr
loope
cmp
repnz
cmc
loopne
loope
mov
cld
jmp
fucomip
int
in
aaa
cmp
into
lret
xlat
clc
int
sbb
sti
div
repnz
fiaddl
lock
lea
aad
iret
lret
cmc
xlat
ljmp
xlat
jmp
jmp
nop
sbb
shl
xchg
xor
xor
sar
lock
fcmovnu
adc
flds
flds
xchg
cmc
cmc
int
cli
into
ror
cmp
fsub
aas
in
roll
cmc
fldz
mov
loope
lds
out
xor
call
imul
roll
test
ljmp
leave
fcoml
div
jmp
xor
xlat
or
aas
jmp
aad
loope
mov
jmp
out
icebp
test
jmp
cmp
rolb
testl
shrb
fstpt
out
sti
out
jecxz
loopne
cmc
fninit
fimull
int
lret
rol
jmp
aad
out
sti
rcr
addl
fucomip
cld
in
repnz
icebp
cs
out
shl
repz
incl
cmp
loope
and
imul
xlat
iret
cli
mov
repz
out
fcom
sti
jmp
cmp
not
jecxz
cli
add
out
lret
xchg
lock
in
fucomi
fxch
stc
aad
icebp
cmp
test
lret
enter
xor
in
nop
das
ret
cmp
into
xor
aas
cmp
in
in
jecxz
inc
out
fmull
in
ror
xlat
sti
stc
int3
out
rcr
icebp
in
cmp
mov
jmp
int3
leave
xchg
out
loope
into
repz
clc
cld
std
lret
lret
repz
loope
rcl
call
mov
hlt
icebp
std
nop
in
call
out
cmp
cmc
jecxz
std
aam
xchg
fdivr
icebp
lret
int3
ret
aaa
fsubr
sar
leave
call
cmp
rcr
add
fldlg2
std
lock
in
ljmp
aam
stc
cmp
fxch
addl
out
div
fiaddl
add
leave
ljmp
fsubrp
in
ret
out
mov
std
fstp
std
mov
in
filds
leave
cs
int3
in
cmp
call
ds
stc
call
enter
out
sub
rcr
int
loopne
shl
test
call
xchg
out
cs
lret
cmc
in
neg
out
iret
and
out
rcl
loop
fildl
icebp
in
int3
call
xor
cmc
hlt
jmp
repz
xchg
mov
test
mov
xchg
pop
xor
aaa
call
cmp
cli
std
faddl
xlat
and
stc
fsub
icebp
aad
divb
into
xor
lret
clc
cmp
cmp
xlat
repnz
jecxz
fsubp
fdivr
hlt
fldl2t
mov
and
sub
enter
loop
aad
in
call
ret
mov
shl
fsubr
in
jmp
xlat
cmp
cmc
fiadds
jecxz
cmc
fmul
mov
nop
jmp
mov
in
in
xor
shr
in
jmp
ljmp
sbb
cmp
lret
loopne
sti
mov
fmulp
call
xor
icebp
fdivl
cmp
push
cld
xor
adcl
add
movl
cmp
movl
jb
xor
mov
mov
xorl
xor
or
xor
add
jmp
rcl
rcl
dec
mov
div
sub
loope
xchg
add
add
addl
call
test
cmc
int3
lret
xlat
hlt
iret
ljmp
loopne
fcmovb
clc
test
stc
int
int3
jmp
xor
fldcw
repnz
rcr
mul
jecxz
lret
iret
in
test
ror
aaa
ss
stc
call
fsub
in
out
div
faddl
fcmovb
loope
jmp
jmp
hlt
repz
in
aad
rolb
in
lret
jmp
rorl
out
shll
xlat
ss
loope
ljmp
rorb
jecxz
fcomi
ljmp
fidivl
sar
call
xchg
sbb
clc
fdivr
int3
and
nop
into
rol
in
in
xlat
lock
and
in
leave
in
shl
std
nop
filds
cmp
icebp
cli
leave
rcr
cmp
fstp
xlat
mov
xor
idiv
decb
int
jmp
iret
xor
in
sti
shl
ss
test
loopne
repnz
ffree
repz
int3
fadds
mov
iret
cmc
out
incb
lock
mov
dec
hlt
loop
lret
shll
sarb
cmc
loop
cmp
jmp
aam
loop
enter
repz
cmp
push
fcmove
ret
loope
cld
flds
ljmp
ljmp
shr
ds
mov
inc
out
int3
fucom
xlat
lock
clc
clc
flds
jecxz
jmp
in
int3
out
ficoms
xchg
shr
aam
out
jmp
sarb
iret
loope
out
aas
fninit
in
leave
loopne
ftst
lret
shr
das
fsincos
vpmaddwd
ror
lock
shl
sti
aas
aam
fucomi
call
mov
jmp
ret
int
std
fnsave
fcom
not
xlat
fcomi
fsubrp
fadd
mov
test
mov
filds
lret
xor
clc
cld
sub
fdivrs
fcomp
test
aas
fstp
adc
jmp
fucomi
fists
aam
enter
int3
lret
jmp
int
sti
shl
fcomp
ljmp
out
in
rcl
in
cs
cmp
idivl
out
icebp
hlt
loopne
mov
aam
out
leave
cld
leave
dec
fisttpll
xlat
fdiv
hlt
cmp
div
fadds
leave
mov
mov
aam
fnstenv
xor
addl
mov
sti
inc
or
icebp
int3
jmp
das
enter
cli
lret
jmp
cli
orl
xchg
sub
out
loop
hlt
fsubrp
cmp
ret
call
xlat
jmp
out
nop
out
xchg
in
icebp
lock
shl
sti
icebp
fidivrs
flds
idiv
std
mov
fsub
xchg
fcom
in
in
jecxz
out
int3
cmp
repnz
testl
mov
out
in
rcl
cmp
call
out
sbb
xlat
incl
rcl
in
icebp
xor
xlat
call
rcr
fsqrt
fcmovb
loopne
enter
leave
nop
cmp
mov
jecxz
sarl
xor
cmp
int
cmp
cmp
out
out
mov
mov
aam
fistpll
jmp
cmp
ds
test
cmc
jmp
lret
icebp
in
call
xor
cli
cmp
fidivrs
cmp
fyl2x
sar
ret
ret
in
ret
out
mov
mov
aaa
jmp
lock
adc
sbb
loope
mov
fsubr
jmp
jmp
into
hlt
xor
ljmp
fcomp
fadds
test
xlat
faddl
jmp
leave
xor
jecxz
iret
out
rcl
cmp
int3
fdivr
jecxz
mov
cld
leave
fsubp
xchg
out
xchg
repnz
xlat
neg
icebp
into
cmp
fst
in
clc
in
out
sti
leave
enter
out
rcr
in
in
in
rol
xor
test
cli
cmp
rcl
aam
cmc
loope
loop
jecxz
sti
fsub
jecxz
jmp
lock
in
cmp
sti
sti
sar
test
not
fadds
enter
add
sbb
add
cmpl
je
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
mov
adc
mov
jmp
ror
rcr
ror
js
cmp
xchg
add
add
loopne
nop
out
in
aad
in
jecxz
aad
int
hlt
xor
int
clc
rcl
not
aam
in
sti
mov
xchg
rorb
ret
cmp
xor
fcomi
sub
aas
xlat
jmp
xlat
lret
std
repnz
out
icebp
loopne
ret
cmp
cmc
out
fcmovbe
icebp
out
fcos
sbb
cmp
cli
out
lds
hlt
out
icebp
cli
jmp
sti
fcmovnbe
fcmovne
fdivr
mov
stc
fsqrt
in
decb
icebp
lret
in
fmul
int
sar
dec
rcl
out
aam
mov
movl
loop
in
lret
jmp
icebp
cmp
cmp
fld1
in
cld
cld
jmp
fucomp
fdivr
clc
cmc
jmp
int
sub
xor
leave
movl
out
ret
repnz
cmp
repnz
cld
fdiv
xchg
mov
test
not
ljmp
loope
ror
test
xlat
mov
jmp
test
xchg
jmp
lret
in
out
push
fldl
sti
test
aad
mov
mov
aam
out
cmp
jmp
repnz
icebp
aas
into
loope
loopne
cmc
in
int3
call
ror
cmp
out
int
hlt
out
repnz
cmp
ds
hlt
test
test
aad
clc
in
out
into
out
ljmp
xor
int3
rcl
out
testl
fucom
mov
leave
aam
xchg
enter
ljmp
les
xchg
stc
clc
test
clc
mov
inc
sti
jmp
out
xchg
icebp
leave
clc
aad
idivl
ljmp
sbb
call
cld
sti
enter
out
fmulp
out
fdivp
icebp
out
out
xor
clc
cmp
jecxz
in
xchg
out
cld
int3
incl
xor
sar
xor
in
repnz
fcom
cmp
sbb
mov
xor
enter
call
sti
icebp
cmp
rcr
loop
iret
fstl
repnz
cmp
cmp
cs
lret
fcomp
jmp
ss
fdivr
test
test
aad
int
loope
iret
rolb
bnd
int3
out
cld
fcom
fcmovbe
ret
lret
testb
loop
hlt
hlt
cmc
imul
cli
cmp
aam
jmp
cmp
cmp
ret
clc
iret
out
incl
jmp
out
aas
repnz
ret
xlat
clc
aas
ror
ftst
jmp
shl
rorl
rcr
xor
xchg
test
aad
jmp
loope
xchg
loop
fsubp
test
idivl
lret
test
out
cmp
test
loopne
mov
in
rolb
int3
xor
cmp
fcmovnu
std
cmp
enter
lds
int
jmp
xor
cmc
sti
aad
not
roll
addl
out
lock
fsub
lock
stc
lock
idivl
repz
icebp
fdivr
incb
sub
rol
stc
stc
shr
xor
ret
test
lret
sub
adcl
shl
jmp
fistpll
loopne
ds
loopne
mov
cli
mul
ljmp
fucomip
in
in
xlat
out
sti
out
ds
clc
loope
icebp
adc
icebp
repnz
leave
int
fucomi
loop
xchg
mov
xor
repnz
jmp
inc
mov
xchg
rcl
repnz
out
in
in
jmp
jmp
neg
out
sti
sar
leave
jecxz
int3
mov
out
loopne
out
faddl
into
test
loop
mov
mov
mov
loopne
jmp
out
aas
xor
jmp
cmc
xlat
cmp
iret
cmpb
orb
mov
icebp
in
ret
leave
not
fistpll
xlat
or
div
xor
clc
sbb
fimull
repnz
call
jmp
loop
ret
out
in
fadd
aam
mov
or
mov
out
out
in
xor
fdivr
into
fdiv
vpmaxub
fiadds
in
lea
repz
and
mov
sub
mov
addl
sub
movl
cmp
movl
ja
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
xor
or
sbb
mov
movl
xor
sbbl
add
movl
jmp
or
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
aad
iret
lret
fstp
push
shrl
mov
add
sar
aaa
enter
in
repnz
rol
addl
fmul
inc
jmp
jecxz
cmp
out
sar
in
loopne
xor
test
fildl
fdivr
nop
xchg
int
cmc
cmp
in
cmp
in
loope
clc
test
neg
leave
mov
int3
sti
int
fiadds
out
shl
repz
jmp
cli
repz
fiadds
int
xchg
out
xchg
out
repnz
out
enter
int
leave
hlt
int3
fadds
cmp
ret
enter
rcl
shl
in
jmp
out
cmp
ljmp
cld
repz
ret
xchg
fcoml
cli
clc
icebp
jmp
fcmovne
lock
out
aad
clc
les
in
rorb
ss
ljmp
fdiv
into
leave
mov
fcmovu
mov
faddl
iret
shl
cmp
icebp
call
xlat
jecxz
fmul
sti
faddp
fcomp
ljmp
lock
into
cld
ds
cmp
inc
out
fdiv
jmp
cld
cld
add
enter
int3
rol
lret
jecxz
iret
sti
xor
fst
fcmovnb
ret
out
test
std
roll
out
jmp
int3
repz
clc
fsubr
out
iret
icebp
icebp
out
fidivrl
fnstsw
iret
aad
fisttps
sti
in
mov
test
xor
hlt
xor
lock
fcmovnb
adc
and
test
add
jecxz
cmp
out
cmp
lock
in
out
out
out
shl
cld
aas
jmp
fmull
icebp
aaa
lret
xor
dec
fadds
rol
std
cmp
mov
loop
rcl
loopne
repz
jmp
shrb
jmp
cmc
int3
in
aaa
icebp
in
aam
jmp
fnstsw
ljmp
aaa
into
xor
repnz
ss
int3
repnz
aad
mov
fucomi
in
in
jecxz
call
aam
ljmp
icebp
in
into
fadd
cld
shl
mov
out
or
jmp
aam
cmp
int
std
fcmovbe
std
fdivrl
ret
lret
ljmp
repz
into
cmpb
cmp
cmp
repz
xlat
sti
lret
fcoml
loop
leave
aad
fldcw
fsqrt
cmp
adc
cli
or
mov
xchg
fldl
hlt
int
lock
aaa
cmp
fcomip
cld
sti
cmp
in
stc
push
sti
ficoml
xchg
jecxz
xor
lock
aas
rcl
fcomi
and
leave
repz
ds
fsubr
xchg
int3
cmp
into
neg
loope
cmc
rcl
mov
cmp
mov
and
xor
cmp
out
into
iret
aad
mov
in
sub
in
jecxz
repnz
orl
cmp
cmp
and
cmp
lret
sti
fsubr
in
adcb
repnz
aam
cmp
sar
hlt
and
cld
in
fisttpl
into
xor
out
rcr
aaa
ror
adc
cmp
in
out
mov
std
int
mov
or
xor
icebp
cli
out
cli
int
not
cmpl
jmp
fadds
fsubrp
jecxz
fcomp
jmp
incl
shl
rolb
sti
jecxz
sub
addb
fucom
icebp
iret
divb
jecxz
fsub
rolb
fiaddl
out
or
xlat
fcom
sti
xlat
call
clc
out
inc
fsub
fprem1
aam
xchg
out
cli
sub
repz
ret
int3
cmc
xlat
shl
fsubr
fcomip
out
in
imul
rol
repnz
mov
loop
int3
lock
lret
cmc
fcmovnb
fidivrl
jmp
cmp
aam
fadd
hlt
cld
xchg
loope
into
loope
jecxz
repnz
into
ret
call
fstpt
test
cli
clc
loop
in
fsubrp
into
repz
sub
jmp
ret
std
stc
rcr
lret
fnstcw
std
test
mov
jmp
xorb
call
out
lret
fdiv
ffree
lock
sar
loop
lret
cli
sti
cld
fstp
mov
call
cmp
int3
iret
cmc
push
loopne
loope
cmc
xor
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
xor
xor
add
orl
add
imul
mov
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
mov
sub
jmp
rcl
lret
fcmovnbe
lods
pop
mov
rcl
add
add
aas
hlt
hlt
std
mov
int
leave
test
mov
subl
cmp
cld
into
fldlg2
fdivr
add
enter
in
std
mov
std
call
icebp
int3
fcmovbe
shlb
sar
fcomi
fstpt
out
fcomip
mov
mov
cmp
idiv
leave
xor
in
xor
icebp
lock
icebp
loope
loopne
std
fdivr
sti
fucomp
ret
repz
in
mov
hlt
enter
cmp
div
fcom
mov
idiv
iret
test
std
mov
out
lock
ljmp
cmc
ret
not
rcl
loopne
mov
lret
icebp
aam
sar
imul
enter
stc
fcomp
fdivrs
fndisi(8087
and
fdiv
xchg
ror
not
xlat
fcmovnbe
in
repnz
cli
cli
jecxz,pt
rorb
cld
jecxz
in
xchg
cmc
repz
jmp
fadd
lds
shl
sub
test
not
loop
in
jmp
fmulp
jecxz
call
xor
rcl
aam
fucomip
fxch
cld
jmp
xchg
in
int
rolb
jecxz
jmp
lds
out
cld
fsubp
repz
idiv
aas
loope
cmc
mov
in
call
xchg
lea
int
cld
cmp
jmp
lret
in
incb
xchg
loope
or
xchg
xchg
in
cld
out
out
repnz
loope
cmpl
lock
ljmp
stc
fcmovne
mov
clc
mov
aaa
clc
fucomi
clc
out
mov
xbegin
ret
mov
xchg
fsubp
xor
sarb
aam
idiv
fsubr
std
and
xchg
loop
and
mov
jmp
out
lret
iret
cmp
in
std
aad
sar
ds
loopne
jmp
jecxz
loop
std
popl
cmp
aaa
stc
aam
in
aam
shr
cmc
xlat
cld
leave
enter
into
jmp
fdivp
out
fcmovu
shrl
icebp
into
jmp
iret
repnz
icebp
call
out
lea
aaa
lret
div
rcr
icebp
cli
loopne
fcmovu
hlt
roll
cli
iret
iret
loope
call
lret
repnz
rol
fadds
mov
loop
rclb
lret
lret
aad
out
jmp
out
sar
imul
jmp
fsubrp
out
xchg
iret
in
test
hlt
aad
vpaddusb
in
clc
rcr
jmp
rcl
icebp
mov
cmp
fsubr
fmulp
adcb
stc
xlat
out
ror
lock
testl
cmc
addb
fcomi
mov
xor
fld
clc
ljmp
hlt
sti
add
lds
test
out
loope
or
not
cmp
xor
xlat
loop
rol
std
addb
int
test
dec
jmp
lret
xor
cmp
ljmp
out
aad
fcmovnu
ljmp
in
ljmp
leave
rcr
fsubrp
aad
lret
mov
out
out
shr
into
vpaddusb
xor
int3
lock
cmp
loope
orb
out
xor
xor
iret
clc
xor
int
clc
int
ret
leave
ffreep
faddp
out
ljmp
stc
ret
sti
cmc
lret
repnz
loopne
imul
aam
rcr
fcom
enter
mov
in
int
out
in
icebp
in
icebp
xor
into
rcl
cld
and
cmc
fcomi
loop
int
rol
out
cli
icebp
jmp
xor
shl
test
in
shl
cld
fabs
rcr
xchg
in
aaa
out
fcomp
leave
div
repz
loopne
cmp
out
mov
iret
fxch
repnz
rcl
xlat
out
aad
iret
enter
xlat
in
lock
fildl
fsub
cld
test
incl
xchg
ljmp
out
cmp
fstp
xchg
ret
out
mov
mov
shl
fld
out
cmc
repnz
fcmove
filds
repz
fisttpl
stc
out
in
in
sub
sar
enter
loopne
stc
repnz
aas
mov
test
test
mov
xchg
imull
shl
rol
out
ljmp
cmc
aaa
repz
lea
loope
int3
cmp
jmp
fcom
rcr
fstp
fnstsw
fmull
cmp
fcmovb
jge
add
add
in
ss
shr
cmp
sti
in
repz
shl
xor
dec
dec
enter
nop
jmp
leave
aam
cmc
aas
faddl
xchg
leave
xchg
test
cld
mov
call
out
xor
jmp
out
xor
sti
loopne
fsubrp
cld
xlat
fidivrl
add
hlt
fdivr
xchg
enter
int3
int3
fdecstp
div
enter
sub
ds
ret
call
in
out
nop
mov
loope
int3
lock
rcl
repnz
repz
cli
lret
in
movb
enter
mov
call
loope
cmp
cmp
int
fndisi(8087
ret
rolb
adc
into
mov
aad
clc
div
int3
iret
fnstcw
fcomip
cmp
std
jecxz
fstp
xchg
rcl
loope
test
mov
mov
call
lock
cmc
jecxz
cmp
roll
fnstsw
cld
mov
fiaddl
hlt
aam
lret
xor
std
fdivrl
int3
aad
jecxz
add
lock
fisttpl
int
repz
enter
loope
faddp
movb
loopne
decl
sub
into
ljmp
sub
fadd
sbb
cld
xchg
xchg
leave
out
ljmp
cmp
cli
enter
jmp
cmp
cld
loopne
fld
in
int
lock
loope
mov
repz
cmc
in
fsubr
shl
icebp
xlat
ljmp
rol
fldl
fcoml
lret
xor
int
fdiv
iret
std
rcr
clc
rcl
cli
neg
icebp
ljmp
sti
repnz
aaa
ljmp
into
add
ret
int3
into
lret
ljmp
xor
xor
fmul
in
in
dec
in
stc
and
cmp
loop
mov
jmp
out
out
out
int
sar
cmp
test
enter
cld
in
into
out
lea
xlat
jmp
cmc
rcr
repnz
out
iret
xchg
fdivp
out
mov
in
lret
mov
bnd
sti
int3
lret
cli
aas
int3
mul
test
test
add
leave
and
out
lock
ret
out
call
icebp
fsubr
cmp
adc
enter
mov
decb
xor
jmp
cmpl
adc
test
jecxz
loopne
in
int
into
call
leave
cmp
aam
cmp
fisttpll
fdivrp
sub
ljmp
jmp
cmp
lock
fildl
fstp
icebp
fiadds
lock
ljmp
sbb
idiv
mov
sub
xor
out
in
rcr
cli
in
ds
fiadds
cmp
in
fildl
xchg
loope
icebp
lock
cmp
repnz
cmpb
int
nop
std
mov
test
popl
out
cmp
fdivrp
shl
lock
icebp
in
rcl
xlat
imul
sti
test
and
repz
out
xor
lock
repnz
cmc
test
fcmovb
mov
in
xchg
xor
shr
out
fdivrl
icebp
rcl
cli
cld
sti
testl
out
xor
loop
shr
div
call
ds
repnz
fstp
cmc
testl
repz
ljmp
jmp
cmp
xchg
in
loope
fsin
lea
lret
repnz
call
rcl
shl
rcl
cli
test
mov
leave
jecxz
rorb
sti
cmp
hlt
cli
addl
lret
xlat
in
mov
mov
shr
out
into
int
repnz
loopne
cmc
rolb
clc
testl
iret
shl
aam
clc
int
div
ljmp
test
filds
in
mov
in
xchg
mov
ror
cmc
shl
cmp
test
in
ret
roll
clc
enter
mov
out
loop
cmc
call
out
xor
ljmp
aad
xchg
xchg
mov
hlt
mul
loop
cli
in
out
aad
lock
ja
mov
jmp
jmp
ror
aam
aad
aam
sbb
stos
stos
add
add
fcmovbe
in
and
movb
out
ret
xchg
in
in
xor
repnz
ss
into
aad
jmp
cmp
icebp
sar
and
shl
lea
loop
xchg
shlb
lds
hlt
jmp
fcmovu
aad
shl
xlat
jecxz
loope,pt
ret
call
mov
jmp
into
sar
shl
cmc
xor
xchg
loop
in
jmp
out
call
aas
call
repnz
out
icebp
loopne
jmp
out
aas
ret
loop
rcl
sti
mov
aas
icebp
repz
jmp
xor
std
bnd
hlt
mov
sub
lock
in
iret
aam
in
in
in
cmp
cmc
cmc
loope
cmp
repz
ljmp
xchg
int3
repz
cmp
loopne
cmp
ret
mov
mov
fsubrp
xlat
lret
mov
into
jecxz
fimuls
icebp
in
repz
sti
xlat
test
cmp
adc
xchg
lock
cs
repnz
ljmp
test
fadd
fimuls
xchg
lds
loop
cmp
cmp
loopne
aad
repnz
lock
test
out
cmp
mov
rclb
mul
xor
cld
loop
xlat
cld
fcomip
sti
add
fcomp
mov
xchg
xor
call
cmp
int
repz
out
ret
loopne
fdivr
hlt
xchg
mov
int
adcb
sub
ljmp
and
loope
test
aam
cld
in
mul
fldl
xor
into
shll
fstpt
std
loope
fistpll
aas
rcr
addl
shl
nop
fiadds
leave
stc
cmc
or
iret
in
addl
flds
in
repz
stc
icebp
repz
fcmovbe
cmp
rol
loope
flds
leave
xor
fcoml
shl
neg
cmp
hlt
leave
repnz
repz
adc
fsin
fdivp
addb
in
ret
lret
fsubrp
fprem
icebp
sarb
int
ret
sub
jecxz
clc
stc
std
xchg
into
xchg
ret
cmp
xor
sar
in
mov
fiadds
in
fsubr
shl
cld
xor
jmp
fldl
mov
std
loope
in
lret
leave
ror
les
repnz
sar
fcmovb
jmp
fsubr
icebp
sti
out
std
in
fildll
xor
lret
stc
lret
call
aaa
aam
shl
cli
aad
orb
mov
repnz
fcmovne
cmc
leave
cmp
aas
cmp
cld
cmp
test
fld
cld
stc
clc
in
mov
fcmovnbe
icebp
cmc
out
out
out
ss
repz
shl
fstpt
fidivrs
ds
cmc
faddl
cld
out
loope
test
xor
repz
lock
jmp
addl
sub
fstp
ror
aad
cs
lock
rol
cmp
in
in
decb
jmp
jecxz
jmp
nop
mov
ror
lock
cmp
enter
sti
shr
testb
int
iret
test
in
xchg
das
fnstenv
imul
ss
ds
loopne
aad
clc
faddp
loopne
loop
out
test
repnz
jmp
not
cmp
aam
cmc
sarl
aas
jmp
int3
fcmovu
fcmovne
lock
xchg
into
xor
lock
out
shr
out
fsub
cmc
ror
aas
xlat
mov
fld
aam
call
xchg
icebp
ror
iret
jecxz
ljmp
cmp
test
fcomip
shl
fsub
mov
in
in
cmc
in
lret
rcl
cmc
fnstcw
out
sar
adc
lock
loope
rcr
cld
iret
jmp
cld
jecxz
out
xor
sub
cmc
in
cld
hlt
ljmp
cmp
out
xchg
jmp
fstp
int
xchg
test
into
lds
shr
cmp
lret
lret
jmp
sar
lock
in
loopne
mov
loopne
nop
cld
out
out
clc
hlt
jmp
idiv
fcomip
lret
loop
ds
addb
out
fstp
mov
cs
cmp
lock
jmp
cld
in
out
mov
enter
enter
lret
into
loope
fxch
cmp
ljmp
fcomi
filds
out
stc
mov
mov
xor
xor
add
add
imul
jmp
rol
aam
aad
aad
xchg
mov
enter
xlat
scas
add
add
lret
fisttpl
xor
jecxz
lret
cmp
xor
testb
nop
stc
sar
mov
aad
repz
call
enter
cmc
fldz
out
repnz
dec
mov
mov
loope
in
loope
xor
cmp
cmp
cli
idivl
iret
xchg
jmp
jmp
not
in
aad
repz
cmp
loopne
test
xlat
loopne
testl
shl
enter
sub
cmp
clc
sub
in
shl
mov
into
test
jmp
cmc
cmp
cmp
fcomi
shl
clc
div
cmpl
loopne
loopne
mov
jmp
shl
rcr
iret
rcl
lock
into
jecxz
incl
test
and
out
xor
loope
ss
leave
aaa
iret
int3
cmp
loop
aas
xchg
cmp
jecxz
mov
cld
mov
aaa
sar
sarb
out
clc
cmp
sti
sti
ret
out
out
stc
cli
jmp
in
fucom
jmp
lret
ds
cmpb
out
aam
orl
sub
int3
test
xchg
ljmp
fsubr
cmp
rolb
mov
shl
loop
ret
jmp
stc
loopne
iret
cli
cmc
fcomip
cmc
cmp
fdivr
std
out
leave
out
fsubp
cmc
fsubr
test
ds
aam
faddp
roll
mov
mov
lock
fcomp
aas
shl
repnz
out
jmp
xchg
hlt
repnz
clc
iret
xlat
std
leave
sti
shl
ror
fildl
leave
cmp
shl
shl
das
in
rcr
das
iret
out
xlat
int
out
ret
in
not
fistpll
fsubrp
add
lock
aad
sar
cmp
xor
fmulp
mov
in
stc
adc
test
sti
fst
lret
fucomp
lock
mul
mov
aam
enter
fucomi
addb
repnz
ss
fcomp
aad
cmp
ret
mov
loop
lea
loopne
int3
aad
ret
fcomi
lret
sti
int3
cli
cmpb
test
sti
fadds
xchg
xor
jecxz
xor
cmc
iret
not
stc
stc
fdivrs
sbb
aad
mov
out
leave
loopne
leave
loope
jmp
cmp
in
in
xlat
cld
xlat
in
icebp
inc
clc
loope
loopne
mov
sti
std
shl
or
cmc
ljmp
out
repz
into
ret
out
loope
aad
testb
nop
iret
xchg
int
xor
out
repnz
sti
aad
rcr
add
lea
int
icebp
icebp
ljmp
call
xor
loope
aas
fcmovnb
clc
cli
in
stc
into
sti
in
repz
ficoms
xor
clc
cld
std
jmp
ljmp
shl
fucomip
hlt
sub
xchg
fldl
into
lret
icebp
in
rcr
shr
aad
not
lret
cmc
mov
loopne
xchg
iret
repnz
fcmovnbe
iret
aad
loope
fsub
cmp
aad
mov
stc
fildl
lret
cli
cli
shl
cmp
out
ds
int3
iret
cld
xor
ds
fisttpll
icebp
test
int3
in
hlt
imul
cli
divl
xor
rcr
loopne
mov
jmp
in
out
cld
fsubrp
leave
stc
fdecstp
rcr
call
int
aad
aas
cld
mov
out
xchg
xor
out
ror
into
hlt
loopne
hlt
fdivr
aas
rcl
ror
aas
mov
int3
lret
in
mov
jmp
call
leave
clc
cmp
jmp
repnz
xor
div
ffreep
jmp
jecxz
dec
in
repnz
sarb
iret
ljmp
cmp
stc
jmp
jmp
mov
in
ljmp
cmp
cli
cld
in
sti
jmp
fnsetpm(287
ret
out
repz
ds
xor
aas
movb
cmc
in
lock
jecxz
int
xor
xor
jmp
cli
xor
sti
jmp
cmp
out
rcll
out
mov
mov
jmp
rcl
ret
fucomp
insb
fstps
orps
add
add
jg
jle
in
shr
rcr
cmp
rcr
rol
cli
std
rcll
jmp
xor
shl
sbb
aad
idivl
xlat
enter
aad
in
out
sti
fcmovne
loop
int3
lret
imul
divl
xor
cld
call
icebp
rcl
cli
fdivr
leave
lret
loope
rol
shl
iret
clc
fsubr
xor
cli
int
fucomip
repz
incb
nop
rol
divl
mul
clc
in
ds
jmp
aad
ret
xchg
clc
lret
loop
xchg
loop
cmc
into
jmp
lret
in
hlt
test
xchg
ffree
loope
cmc
aaa
ljmp
ror
ret
rol
fucom
ret
into
sbb
out
into
icebp
lret
enter
ds
icebp
fninit
test
stc
aas
jmp
jecxz
and
mov
in
lock
int
out
sar
std
clc
fcom
rcl
call
xlat
loope
xor
fprem
ret
ror
fcmovne
int3
in
into
cmp
rcl
lret
loopne
mov
in
lock
imul
jmp
jmp
in
lock
cmp
addb
sub
xchg
test
int
ror
aam
out
int3
ror
rcr
fiadds
lret
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
sbbl
push
push
adcl
push
xor
addl
lea
addl
xor
or
sbbl
xor
andl
add
push
lea
xorl
push
movl
push
xorl
lea
inc
xorl
xor
addl
xor
adcl
call
movl
movl
mov
mov
movl
jmp
movl
xor
sub
xor
xor
xor
xor
mov
add
xor
movl
incl
mov
mov
cmp
movl
jb
andl
xor
add
inc
mov
cmpl
jne
pushl
call
cmpl
jb
add
movl
adc
movl
mov
mov
sub
xor
lea
mov
lea
xorl
mov
mov
mov
or
mov
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xorl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
sbb
add
not
mov
mov
mov
mov
cmp
mov
mov
movl
je
movl
cmpl
je
cmpl
jne
push
push
push
call
xor
or
dec
mov
jmp
mov
xor
xorl
add
adcl
imul
mov
jmp
sbb
xor
xorl
add
xor
mov
movzbl
or
mov
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
or
add
sbbl
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
xor
addl
add
movl
cmp
movl
jne
adcl
push
pushl
addl
pushl
call
mov
mov
sbbl
mov
incl
mov
mov
adc
mov
mov
mov
mov
adc
mov
mov
dec
movl
adc
mov
neg
movl
mov
orl
xor
add
jmp
mov
orl
xor
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
lea
sub
mov
mov
and
xor
movzbl
and
lea
or
mov
mov
mov
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
and
movl
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
push
pushl
call
xor
or
dec
mov
jmp
adcl
movl
mov
mov
xor
mov
xor
add
movl
cmp
je
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
inc
xor
add
sub
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
orl
xor
or
mov
sub
xorl
add
mov
mov
cmp
ja
movl
cmpl
je
cmpl
jne
push
push
call
xor
or
dec
mov
jmp
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
push
sub
push
xor
push
mov
call
pushl
pushl
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
je
mov
jmp
mov
mov
mov
mov
movl
movl
mov
xor
add
mov
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
xor
add
jmp
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
pushl
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
push
mov
push
mov
mov
movl
push
mov
mov
mov
push
mov
mov
mov
cmp
je
adc
mov
mov
andl
xor
sbbl
add
movl
cmp
je
mov
xor
inc
add
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
sbb
push
adc
pushl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
pushl
mov
call
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
push
movl
mov
subl
mov
add
xor
cmp
jne
mov
neg
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
add
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
xorl
mov
mov
adcl
xor
add
movl
mov
movl
movl
not
movl
movl
mov
movl
push
movl
mov
cmp
je
mov
adcl
xor
incl
xor
lea
sbbl
xor
movl
cmp
movl
jne
jmp
add
sub
mov
xor
add
mov
xor
mov
adcl
xor
movzwl
add
xor
mov
sub
mov
adc
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
call
jmp
mov
leave
ret
push
mov
sub
movl
neg
movl
mov
push
or
mov
mov
sub
xor
mov
xorl
add
orl
mov
and
mov
subl
push
push
adcl
test
movl
je
mov
movzbl
or
mov
mov
andl
mov
mov
sub
mov
imul
mov
subl
add
dec
mov
not
mov
xchg
inc
sub
subl
xor
mov
movzwl
and
mov
negl
mov
mov
sbb
mov
subl
xor
sub
xor
addl
add
mov
movl
mov
je
and
mov
xorl
xor
andl
add
movl
cmp
movl
jne
pushl
adcl
call
sbb
mov
mov
mov
sub
and
mov
mov
mov
sub
mov
mov
andl
xor
orl
add
cmp
je
pushl
incl
pushl
orl
call
xorl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
dec
mov
incl
xor
orl
add
movl
cmp
movl
je
sub
mov
xorl
mov
mov
mov
sbb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
andl
add
mov
mov
subl
mov
add
movzwl
or
mov
mov
mov
add
mov
movzwl
or
mov
mov
addl
add
xor
mov
sbb
mov
mov
addl
add
lea
andl
mov
push
orl
pushl
pushl
call
mov
subl
mov
sbbl
xor
movl
add
movl
cmp
jne
mov
inc
cmp
movl
jb
movl
jmp
mov
xor
xorl
add
movl
jmp
subl
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
