push
mov
sub
mov
mov
and
mov
andl
mov
inc
mov
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
subl
push
mov
mov
sub
add
push
mov
xor
xor
mov
sbbl
add
andl
mov
mov
sbb
mov
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
push
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
sbb
mov
mov
mov
sub
add
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
mov
movl
sbb
mov
and
xor
add
adcl
mov
mov
mov
mov
mov
and
mov
adcl
mov
and
mov
xor
push
neg
pop
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
add
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
movl
mov
and
movl
mov
xorl
mov
mov
orl
mov
and
mov
xor
movl
add
mov
adcl
lea
sbbl
mov
mov
or
mov
adcl
xor
add
mov
lea
andl
push
mov
movl
xor
add
andl
push
subl
mov
xorl
push
subl
pushl
xorl
call
andl
mov
inc
mov
cmpl
jb
jmp
push
pushl
pushl
call
cmpl
jb
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
movl
mov
incl
mov
lea
incl
mov
movzbl
or
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
pushl
push
call
jmp
mov
sbb
xor
sub
mov
sub
mov
mov
movzwl
movl
mov
mov
cmp
movl
je
add
mov
mov
sbbl
xor
xor
lea
mov
orl
xor
div
mov
xor
mov
xor
orl
xor
orl
sub
cmp
jne
mov
mov
add
mov
mov
subl
xor
addl
xor
add
add
movl
mov
movl
cmp
movl
jae
and
lea
not
mov
mov
xor
xorl
add
lea
mov
mov
mov
cmp
jbe
addl
addl
movl
jmp
addl
addl
sub
mov
xorl
xor
decl
inc
sbbl
incl
addl
add
cmp
movl
jb
notl
mov
xor
mov
movl
xor
xorl
mov
sub
add
mov
adcl
xor
sub
andl
ror
movzwl
sbb
xor
mov
mov
mov
adc
mov
orl
jmp
pop
mov
pop
mov
add
sub
pop
addl
cmp
sub
cmp
jae
jb
fcmovu
imul
jb
int3
bound
lea
xchg
xchg
inc
mov
sub
push
rol
repnz
sub
nop
ss
mov
aad
jb
adc
and
aaa
jo
lods
sub
mov
notb
test
pusha
push
and
cmpl
fwait
dec
or
jecxz
imul
xchg
ss
leave
int
outsb
cmc
pop
imul
or
mov
shll
imul
jno
add
sub
imul
dec
inc
xchg
or
es
dec
and
and
xor
xlat
scas
sub
ja
test
and
sahf
fmul
lods
push
jbe
cmp
js
cmp
sbb
loop
or
push
sbb
int3
ds
in
add
fistpll
push
push
leave
sbbl
mov
mov
enter
pop
xchg
jle
jno
or
rcrb
inc
test
loopne
jno
jge
imul
repz
pushf
or
jns
pop
sub
mov
out
push
sbb
movsl
pusha
and
in
mov
lret
insl
dec
mov
xor
fcmove
sub
mov
fprem
or
popa
fdivrl
mov
ret
mov
and
lds
sbb
aas
mov
ret
lods
mov
mov
xchg
and
imul
inc
dec
cltd
and
mov
test
or
pop
outsl
addr16
add
rcrb
jge
mov
std
xchg
push
lock
imul
dec
out
jecxz
fsubr
lea
mov
or
jp
outsl
or
xchg
hlt
inc
mov
mov
xchg
loopne
cmc
sub
mov
fsts
js
out
divl
lods
lea
sbb
fnstsw
mov
imul
lret
lea
pop
mov
mov
push
and
jl
mov
fsubl
test
std
sar
cmp
fsqrt
jae
jmp
inc
mov
popa
pop
inc
movsl
push
enter
mov
dec
push
or
dec
rolb
push
add
lods
push
push
pop
mov
jne
mov
fsubl
fldl
pushf
test
das
push
mov
scas
in
add
pop
mov
or
sbb
jo
xor
dec
inc
inc
xlat
testb
mov
jg
mov
subl
ljmp
in
loope
orl
lock
mov
pop
test
pop
pushl
xchg
pop
xchg
inc
cmp
adc
lock
lret
jle
sub
xchg
out
std
mulb
mov
std
jge
add
adc
mov
sub
lret
dec
loopne
insb
ja
adc
out
iret
adc
imul
sti
notb
out
mov
sub
cltd
or
mov
ja
xlat
pop
mov
shlb
cmp
sbb
sbb
and
xchg
jl
outsl
incl
ret
jo
sub
sbb
push
xchg
jg
outsl
mov
push
test
test
lods
fwait
jmp
lret
pop
xchg
push
or
roll
add
test
adc
mov
or
push
jbe
je
fbstp
mov
mov
xchg
in
mov
addl
imul
fisttps
std
mov
lret
add
bnd
jmp
cmovno
mov
xchg
and
xor
addb
cmpb
adc
adc
pop
mov
in
unpckhps
loop
imul
mov
pushf
xchg
stos
pushl
pop
push
xor
mov
jmp
mov
arpl
ds
scas
std
sub
nop
outsb
scas
and
cld
xor
pop
mov
mov
add
mov
sbb
push
je
inc
mov
push
orl
push
and
xor
jne
clc
mov
dec
mov
push
pusha
pop
int
std
mov
out
xor
push
sbb
mov
or
pushf
je
jp
sub
push
out
adc
fdivp
sub
xor
and
ss
ja
push
sbb
push
out
jle
sub
add
adc
pop
xor
daa
pushf
insb
push
push
data16
sub
out
sub
xorb
xchg
sbb
mov
fnstsw
or
sub
cmp
adc
movsb
mov
xor
mov
mov
sbb
jbe
ss
jl
mov
shl
xlat
cmp
push
lea
lret
jnp
or
sub
std
pushf
addr16
inc
test
shrb
andl
sbb
das
fs
xchg
mov
ja
out
scas
jmp
ja
insb
jbe
pop
aad
cmp
dec
adc
nop
xor
push
push
xchg
inc
add
push
jge
cli
incb
aas
cmc
push
sbb
pop
pop
cs
imul
and
sub
clc
cmpsb
mov
fwait
xchg
lods
add
inc
mov
les
stc
lock
jmp
mov
cld
add
cmpsl
stc
dec
sti
lret
sbb
xchg
jmp
add
mov
xchg
sbb
sbb
jns
push
decl
outsl
mov
rol
leave
dec
dec
shr
cmp
les
ljmp
sti
pop
ficoml
js
in
mov
jbe
dec
cwtl
jl
mov
lahf
cs
mov
cld
mov
mov
push
xor
dec
testl
adc
lds
jmp
aaa
fnsave
sub
cld
jno
testl
adc
jcxz
outsb
fimull
push
adc
aam
imul
stos
cmp
xor
lods
leave
movb
pop
push
rolb
cmpps
push
lock
lret
pop
jg
xlat
xchg
fdivrs
subb
andl
pop
jl
stc
sbb
rolb
pushf
or
cmp
add
aam
rorb
in
add
iret
cwtl
call
push
push
roll
mov
pop
push
inc
cld
in
int3
xchg
loope
mov
movsl
and
jle
lret
pop
mov
in
dec
ljmp
xorl
fiaddl
out
das
mov
dec
inc
in
lock
sub
dec
addr16
into
lret
or
scas
sub
cli
mov
jae
xor
int
fbld
xchg
pop
and
repz
scas
popf
jae
cltd
roll
aam
sbb
pop
repz
jo
jo
pop
test
rolb
and
mov
aas
push
xchg
rcrl
jnp
pop
jle
mov
jecxz
push
mov
push
or
xchg
jecxz
sbb
sbb
popf
xchg
insb
repz
out
mov
cmp
sbb
xchg
push
mov
ror
jne
jns
xlat
lcall
sub
enter
xchg
pop
xchg
clc
insl
xor
cmp
pusha
mov
mov
cmp
cltd
mov
insb
mov
or
sbb
fcomi
jmp
lds
or
scas
pop
dec
cwtl
ret
ljmp
test
dec
mov
xchg
jp
pop
mov
pop
mov
mov
andl
icebp
lret
jbe
push
sahf
pop
jno
add
jle
mov
jmp
fisttpll
adc
inc
dec
mov
adc
loop
adc
xchg
lret
insb
insb
cwtl
ss
push
push
mov
jg
cwtl
pop
cwtl
mov
lods
fdivr
pop
jb
arpl
cld
daa
xlat
xchg
or
sahf
into
cmp
mov
into
repnz
sbb
dec
mov
sub
imul
jg
jmp
mov
aad
aas
add
sub
push
jns
nop
icebp
jae
pop
cltd
dec
aaa
mov
out
jg
mov
negb
sub
mov
sub
mov
les
add
subb
pop
push
xchg
xor
adc
in
or
lahf
test
daa
fisubs
rorb
jnp
in
xor
dec
pop
repz
mov
xchg
add
sbb
idivb
push
xor
aam
adc
xorb
in
insb
pop
test
nop
push
stos
sbb
adc
out
pushf
sub
inc
push
sbb
dec
cmp
rclb
cwtl
sub
mov
call
jle
jae
mov
loop
test
fucomip
inc
shrb
sub
stc
and
hlt
fnstsw
iret
fwait
push
nop
sahf
addr16
jno
jmp
daa
push
leave
jo
in
xchg
inc
push
cmp
cmpl
mov
pop
sub
jge
rcll
push
push
icebp
lahf
mov
mov
xchg
ljmp
pop
mov
cmp
mov
lahf
add
mov
movsb
adc
add
lret
or
lea
cmp
xor
add
rcrl
push
pop
popf
cmp
stos
sbb
dec
fs
outsl
bound
dec
mull
rol
sbb
testl
dec
pop
and
or
addl
mov
mov
add
jns
inc
shll
sbb
cld
push
lahf
dec
mov
sub
ljmp
cmp
subb
xchg
jnp
mov
jne
xor
mov
fistpl
lods
and
push
fwait
das
xchg
cltd
cld
hlt
jmp
nop
ljmp
lods
bound
shl
outsb
mov
cltd
sbb
ja
sub
fcoms
inc
xchg
mov
and
pop
repnz
sub
lret
mov
sbb
aad
add
push
jmp
or
jae
pop
mov
insl
xor
pusha
adcb
js
loope
fwait
aas
shlb
and
outsl
sahf
cmp
cmp
shlb
dec
mov
or
or
sub
xchg
push
std
xchg
test
xor
or
andl
in
jo
push
jb
push
pop
lret
push
push
fmul
test
sub
std
push
cld
subb
inc
jmp
ficomps
int3
or
xchg
hlt
mov
nop
or
sub
push
fildll
out
push
scas
xchg
add
xchg
or
adc
fstpl
or
iret
sub
fdivs
add
imul
jmp
cltd
sub
ficoms
inc
jmp
xchg
dec
inc
sub
or
ss
dec
push
inc
jmp
iret
xor
push
rorl
shlb
pop
sbb
xor
sub
mov
cmp
and
inc
mov
lock
mov
cs
cmp
pop
mov
push
popa
out
push
das
popf
mov
xchg
xor
push
mov
mov
aas
popf
push
scas
cli
dec
mov
or
push
sbb
adc
or
lods
lods
and
inc
mov
and
fcmove
xchg
mov
jns
es
daa
mov
in
rcrl
adc
imul
enter
adc
fistl
dec
xchg
stos
pop
xchg
jbe
cmp
sub
cld
add
rcl
out
sahf
dec
adc
cmovno
sub
rcll
push
lods
jecxz
pop
and
push
gs
push
enter
mov
imul
sbb
popf
sub
add
xor
fidivrl
mov
jg
jp
jns
or
sbb
adcb
adc
mov
call
sbb
popf
iret
mov
std
mov
in
cwtl
push
test
push
add
fsubrs
mov
xchg
cld
cmpsb
lret
rorl
cmp
push
std
xchg
mov
cmp
int
sbb
rorl
push
mulb
ficomps
loopne
scas
loopne
iret
cwtl
jmp
outsl
mov
cmp
and
popa
rclb
test
xchg
rorb
aam
mov
mov
sti
xor
scas
and
push
sub
dec
cmovae
ljmp
test
shll
out
add
fldcw
sahf
cmp
mov
mov
push
sub
fwait
std
cmpl
inc
add
xlat
mov
or
popa
repz
pusha
xor
rol
cmp
dec
test
jae
jbe
push
mov
ds
iret
jne
lds
jl
inc
jb
inc
cmc
rclb
test
fcoml
push
jmp
call
arpl
adcb
push
std
popf
sbb
xor
add
out
inc
aam
sub
outsl
dec
fwait
xor
in
stc
push
xor
add
ret
or
rcrl
clc
push
push
xchg
repz
cli
cld
in
add
adc
add
shlb
stc
sarb
xor
stos
mov
aaa
xchg
stc
scas
lret
adc
or
xchg
rcll
pop
xchg
push
mov
cwtl
aad
jmp
push
xor
mov
aaa
xor
pop
jp
push
inc
jno
pushf
inc
bound
jle
bound
xchg
add
and
in
sbb
lahf
jmp
mov
xchg
and
test
sbb
ret
mov
inc
sahf
fistps
mov
test
xchg
cwtl
xor
fsubs
xor
mov
and
push
jl
sbb
outsl
inc
or
insb
jbe
push
lret
fsubp
adc
fmull
data16
lods
sub
int3
jle
out
xlat
iret
xchg
xor
adc
add
ljmp
mov
imul
pop
pushf
pop
fwait
cld
mov
lods
mov
hlt
sbb
fidivrs
repz
in
add
stc
sbb
sub
addr16
hlt
inc
lahf
aas
iret
dec
addr16
pop
mov
insb
aaa
dec
cmp
jl
push
mov
mov
xor
in
ds
push
cmp
adc
jns
bound
mov
ror
mov
jbe
imul
jecxz
cmp
mov
cltd
mov
mov
pusha
pop
out
push
ret
lcall
popf
stos
dec
pop
push
or
pop
call
fstpl
mov
cs
adc
and
mov
lods
pop
push
imul
mov
repnz
mov
mov
ret
sub
mov
outsb
pop
fmuls
mov
push
movsl
fnstcw
push
inc
ret
fcmovbe
fdivl
cmc
shll
inc
scas
dec
adc
push
lods
mov
fwait
cmpsb
mov
push
test
ds
addb
jne
insw
cwtl
dec
je
push
inc
push
dec
sub
loop
les
ss
dec
jp
popa
sub
outsl
hlt
dec
sub
sbb
ljmp
cs
inc
scas
ss
out
aaa
out
clc
pop
sub
sbb
cli
nop
push
scas
adc
jae
push
pop
lret
pop
mov
fs
pop
ds
addr16
mov
sub
lods
aam
jl
testl
dec
mov
inc
mov
sub
pop
add
lcall
insb
add
sub
shrb
movq
fwait
or
imul
xor
xor
push
and
sahf
test
imul
adc
xor
cmp
add
xor
scas
lea
scas
lock
divl
inc
dec
orb
jmp
mov
iret
pop
aaa
push
fstpl
cmp
sub
xor
clc
loope
aaa
cmp
mov
mov
ss
aas
jg
mov
xchg
sub
fs
inc
daa
adc
sub
stc
push
aaa
mov
cmpsl
addr16
jo
dec
mov
inc
rolb
js
ds
pop
lods
das
mov
insl
xor
aad
divb
outsb
xchg
pop
mov
sbb
jo
fists
push
fsubrp
inc
fildll
outsl
or
lret
hlt
rcr
repnz
fs
lcall
mov
mov
movsl
repz
sbb
or
pop
fs
add
imulb
outsb
inc
dec
dec
ja
fwait
adc
fstpl
push
int
or
add
mov
lods
sbb
mov
cmp
shrb
cld
shrb
test
mov
dec
in
cmp
mov
dec
test
loopne
push
mov
xor
sbb
jno
pop
sub
nop
push
inc
jns
fisubrl
push
inc
push
mov
push
int3
daa
mov
scas
inc
and
xchg
movsb
in
sbb
add
or
test
sbb
push
xor
sbb
movsl
sub
gs
push
mov
fiadds
into
push
lret
sahf
repz
sub
xchg
mov
lahf
jb
out
xchg
das
js
jns
mov
mov
and
std
sbb
movsl
cmp
push
cmp
pop
cmp
mov
mov
pop
adc
lea
pop
jmp
mov
push
push
ss
push
rcrb
xchg
pop
int
pop
xchg
cmp
stc
loopne
pop
inc
xchg
push
inc
mov
orl
or
ror
mov
arpl
adc
cmp
cmp
shlb
out
mov
clc
gs
sahf
and
push
push
cli
mov
mov
cmp
inc
pop
mov
mov
sub
daa
jmp
xor
pop
lods
mov
jle
sahf
outsb
lret
push
jne
mov
or
enter
js
in
and
inc
mov
cmpsb
scas
in
or
jb
push
add
scas
ret
or
push
fcomps
out
enter
test
jbe
inc
inc
cltd
dec
cltd
xchg
xchg
inc
loope
sub
and
adc
mov
mov
adc
sbb
imul
je
les
daa
adc
imul
nop
outsb
pop
or
sub
icebp
inc
mov
mov
punpckhwd
cwtl
or
xchg
or
sub
dec
inc
xchg
sti
mov
add
orl
or
fimuls
out
jg
test
shlb
mov
sub
cmp
cmc
fcoms
std
rol
inc
leave
adc
sbb
push
xchg
jnp
mov
fdivrl
stos
in
fcomps
dec
xchg
jnp
sbbl
adc
pop
les
int
into
pop
xchg
push
pop
add
or
jbe
insb
mov
push
pop
jo
sbbl
adc
mov
adcb
push
aaa
fwait
mov
pop
inc
testl
int
sarl
xor
aad
jb
movsl
cld
rcll
add
mov
fimull
adc
xbegin
repnz
cld
jmp
je
xchg
jecxz
push
dec
adc
ljmp
mov
push
cmp
pop
cmc
jno
out
xor
cmpsb
and
out
clc
sysenter
in
inc
ffreep
ss
out
add
cmp
xor
aas
push
pop
test
dec
ror
in
jns
nop
ret
das
out
shl
jmp
mov
sbb
lods
sbb
fimuls
imul
int
push
mov
jae
or
out
jmp
dec
mov
fidivs
mov
mov
hlt
nop
cmp
xor
and
out
jmp
scas
popf
sti
push
mov
mov
enter
or
addr16
push
mov
ror
dec
ret
aaa
aaa
scas
xor
sub
movl
cmp
jnp
mov
inc
jns
push
xor
popa
pop
xor
add
nop
popf
xor
mov
stos
xchg
inc
and
icebp
mov
out
call
adcl
test
cld
in
pop
adc
dec
outsl
rsm
jecxz
scas
in
aaa
or
xor
xor
loop
push
fldenv
inc
or
jns
push
push
fs
adc
mov
lahf
out
fwait
sub
jecxz
jle
cs
and
mov
push
cltd
jb
jae
sbb
or
in
test
sbb
mov
stos
add
std
inc
test
sub
mov
dec
dec
lds
push
es
aam
jecxz
addr16
pushf
dec
push
mov
mov
mov
daa
mov
mov
and
in
mov
pop
xchg
and
xor
jp
pop
fstpl
hlt
aam
fadd
cmc
push
outsl
push
cmp
sub
rcr
sahf
push
mov
dec
stos
push
rcr
test
pop
adcl
push
lret
push
inc
jg
mov
push
adc
adc
mov
out
popa
sub
rcr
xor
jmp
out
mov
repnz
enter
ja
sub
cltd
and
inc
lahf
hlt
add
sbb
mov
test
test
addl
cmp
das
add
in
daa
xchg
cmp
into
cmp
cmc
mov
stos
cld
adc
out
cltd
in
mov
cmpsl
cwtl
data16
cmp
or
push
scas
jns
cmc
aas
ds
sbb
in
mov
cmp
add
addb
dec
mov
adc
inc
je
push
jg
cltd
jne
shl
je
fnstcw
fisttps
outsb
aam
in
lahf
and
lret
dec
lahf
push
push
mov
pop
xchg
lret
inc
lahf
in
push
adc
ljmp
int3
add
loope
pop
cmp
or
fimuls
add
out
insb
push
pushf
ja
sti
scas
in
stos
cs
mov
add
xchg
jb
inc
sahf
mov
mov
lret
scas
fimuls
xor
add
nop
mov
mov
dec
enter
mov
adc
std
stc
hlt
lock
cmp
dec
sbb
adc
aas
adc
push
pop
test
jne
dec
inc
xor
mov
shll
aam
lods
add
idivl
aas
push
les
mov
adc
push
shll
lcall
sub
orl
cmpsb
mov
in
mov
popa
ljmp
imul
jp
out
je
vporq
cmp
or
lret
outsl
adcl
ljmp
and
add
sbb
cltd
pop
jp
mov
int
cld
ja
dec
cmp
cmpsb
sbb
ljmp
pop
pop
ljmp
repz
sub
pop
xchg
mov
sub
icebp
or
inc
inc
into
xchg
dec
outsb
or
and
jne
mov
sti
push
into
and
push
in
inc
mov
xchg
mov
aas
clc
pop
loop
rep
jl
loope
imul
fdivrl
and
dec
cmc
imull
std
cmc
imul
push
inc
fucomp
gs
in
pop
add
mov
mov
stos
mov
mov
fdivrp
jne
sahf
and
add
adc
rol
fcompl
cmp
imul
imul
inc
pop
cli
icebp
lcall
dec
dec
cmpsb
out
pop
cli
jl
adc
clc
fldenv
stos
test
xchg
jnp
mov
pop
repnz
outsl
jl
fs
sub
mov
out
push
dec
mov
sbb
out
enter
push
repz
adc
les
pop
loopne
push
cmpsl
mov
dec
push
popf
outsb
mov
inc
decb
adcb
pop
mov
adc
pop
decb
mov
notb
in
bound
pusha
fs
dec
lret
scas
pop
mov
inc
arpl
push
ss
fisubs
cwtl
sub
pop
pushf
mov
in
adc
jge
xchg
jnp
mov
sbb
scas
std
and
cwtl
mov
lret
cli
and
imul
enter
sub
mov
std
sbb
xchg
frstor
and
and
jg
add
in
adcl
addr16
jmp
pop
mov
add
mov
test
mov
xchg
mov
aam
xor
cmpsl
adc
xchg
mov
lret
lret
enter
pop
and
mov
lods
mov
mov
insl
insb
aaa
int
and
mov
or
jno
ret
sbb
xchg
gs
mov
cmp
and
add
dec
xchg
out
ja
pop
repnz
movsb
fwait
sub
cmp
adc
cmp
adcl
shlb
loopne
test
ds
dec
movsl
insb
ud1
out
in
gs
and
xor
pusha
addl
addb
or
pusha
fmuls
adc
lret
lds
call
add
and
xchg
push
sbbl
mov
inc
sub
leave
arpl
test
loop
jmp
lahf
sub
inc
dec
xlat
jne
xchg
xor
lea
xlat
cmp
adc
mov
mov
scas
adc
inc
mov
jo
popa
jmp
dec
push
jne
add
push
dec
add
cwtl
jl
ss
pop
orl
xchg
adc
jecxz
rcrl
divb
xchg
fistl
imul
pop
fcoms
out
lahf
push
xor
pop
add
or
jg
das
js
mov
js
pcmpeqd
ds
xchg
pop
test
cmpsb
xor
xor
repz
cmp
nop
repnz
bnd
mov
push
bound
movsl
int3
mov
ds
fistps
sub
cmp
movsl
mov
push
in
loop
push
xchg
or
arpl
insl
in
jno
push
xor
rcrl
or
pop
adc
cmc
cmp
mov
sub
xor
pop
lret
pop
jle
push
iret
or
sbb
cmp
clc
icebp
ss
pop
xchg
pushf
xor
push
add
arpl
imul
inc
inc
cmp
xchg
stos
xor
test
cli
sbb
jmp
pop
sub
scas
xor
push
addl
sbb
adc
adc
mov
xchg
pop
adcb
in
cld
jno
es
shll
inc
add
xlat
dec
in
xchg
push
in
cwtl
mov
into
lret
mov
xor
sub
sub
jg
lahf
adc
xor
or
test
iret
leave
popf
sub
clc
add
subl
inc
movsb
adc
mov
pop
in
dec
subl
lock
iret
cmp
xchg
lret
inc
mov
inc
stc
fwait
clc
mov
leave
loope
cwtl
mov
lahf
shll
pop
cli
mov
pop
adc
pop
fwait
and
and
les
xor
cmpsl
push
int3
rcrl
cli
fs
das
sub
movsb
xlat
lahf
movsl
out
js
sti
push
jle
mov
cmp
inc
rcr
lods
and
insb
in
fwait
xchg
divl
scas
imul
loop
fnstenv
ret
fucomip
jmp
outsl
inc
jmp
inc
pop
loope
adc
fiaddl
push
mov
ja
jmp
popa
pop
and
xchg
bound
add
loop
repnz
lahf
pop
and
mov
xor
inc
dec
out
es
xchg
push
out
pop
mov
sub
or
or
lret
xor
and
cs
jno
xor
loope
aas
ret
sbb
sbb
aaa
pop
cmpsb
je
loop
pop
lret
dec
repnz
fists
outsl
sbb
cmp
out
fsubs
js
enter
add
outsb
xor
mov
sarb
aas
add
loope
xor
subl
cs
jo
lods
adc
shrb
push
in
dec
dec
pop
dec
aad
lfs
roll
rcrb
xlat
stos
jl
int
mov
addr16
mov
adc
jo
sarb
inc
dec
push
mov
test
pushf
or
mov
in
or
add
add
xchg
mov
mov
mov
or
push
cmp
je
xor
pop
inc
aam
xchg
cmpsl
and
adc
clc
lods
push
aad
cwtl
and
adc
lds
outsl
rorl
inc
lret
lahf
mov
sbb
mov
inc
pop
out
and
test
or
add
push
into
xchg
cwtl
add
or
ds
out
mov
cmp
cmc
sbb
sti
enter
arpl
out
push
cmpsl
adc
cwtl
imul
movsl
xchg
fdivp
enter
popf
mov
and
pop
add
xor
fmulp
js
cmpsb
jecxz
lods
mov
hlt
std
outsb
sahf
adc
cmpsb
test
inc
in
inc
sahf
int3
jns
jno
mov
js
jb
in
xor
icebp
imul
mov
jne
sub
popa
push
jmp
bnd
sub
jmp
arpl
and
cmpsb
sub
add
xor
mov
movb
nop
sti
imul
shr
adc
adc
jp
pop
mov
fcomp
jmp
rorb
fnstcw
and
xchg
ljmp
dec
adc
push
adc
sub
push
fwait
aam
cmp
mov
xor
in
pop
xchg
aaa
inc
adc
mov
mov
cmp
jae
sub
push
fwait
xchg
push
cmp
or
push
mov
jnp
push
xor
movsl
mov
inc
outsl
stos
xor
xor
lods
icebp
sbb
leave
aaa
push
ds
iret
test
dec
inc
jle
xor
xchg
adc
out
aaa
pop
leave
jecxz
cmp
aaa
dec
in
loopne
inc
jnp
and
mov
pop
into
data16
inc
repz
clc
lock
mov
sub
push
dec
shrb
push
out
dec
ss
push
add
ss
mov
ss
sarl
andb
mov
nop
jmp
fs
jno
dec
rorl
mov
pushw
into
dec
out
pop
daa
push
add
fisubrl
dec
fucomi
mov
jge
or
adc
pop
testl
out
pop
jge
pop
add
pop
adc
lods
dec
and
jae
xchg
xchg
inc
jmp
out
gs
xlat
push
xchg
sahf
sbbl
scas
add
sbb
and
xor
jnp
fdivrl
jbe
arpl
mov
sbb
jp
cmpsb
mov
or
out
out
add
dec
shlb
shll
inc
inc
test
nop
mov
in
nop
lock
add
sahf
je
out
insl
sarb
test
push
add
xchg
addl
xchg
jb
imul
insl
mov
and
or
lcall
aad
clc
hlt
mov
sbb
add
pop
and
ret
jge
or
mov
add
fiadds
fucom
fcmovu
leave
cmpsb
std
sub
popl
cmp
mov
outsl
jno
dec
cld
mov
cmp
adc
sbb
gs
daa
mov
lcall
xchg
xor
mov
out
fcmovnb
pop
push
fwait
aad
in
cs
cwtl
popa
popf
push
push
xchg
xchg
std
imul
xchg
lret
jle
jg
popf
and
pop
push
pop
lds
lds
lret
test
inc
shll
xor
pop
mov
jae
and
and
sbbb
lds
ss
imul
subb
ss
outsb
add
cli
mov
mov
xor
sti
add
es
jp
pop
mov
lea
test
xor
cmp
jne
or
mov
andl
mov
adcl
xor
xorl
xor
sub
sub
mov
mov
xor
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
jmp
mov
and
out
mov
fnstsw
lods
aas
xchg
out
pop
addl
pop
cli
add
cmp
jns
insb
mov
jno
xor
sub
icebp
bnd
cmp
filds
testb
imul
and
add
jns
lds
lods
inc
test
dec
jnp
sar
mov
loop
test
and
adc
movsb
cld
cmp
scas
sub
or
push
test
mov
pop
std
pop
mov
dec
decb
jp
adc
loope
mov
sub
xor
jae
repnz
mov
loopne
and
stos
test
das
dec
fsts
dec
mov
adc
inc
neg
rolb
iret
clc
or
or
dec
push
mov
cmc
mov
aad
sbb
lods
add
lret
mov
mov
test
rclb
mov
loope
pop
and
or
aas
enter
out
push
cmp
mov
ret
inc
dec
mov
pop
icebp
pushf
cmp
mov
or
dec
popa
xchg
rcrb
push
push
jmp
adc
xchg
xchg
mov
pop
jne
lcall
cmp
add
pop
cmpsb
cmp
jg
sub
cmpsb
pop
jmp
in
repz
out
int3
int
test
aaa
or
add
or
inc
sbb
pop
out
xor
and
xor
and
das
xchg
cmp
push
xchg
pop
lret
dec
movsb
pop
fcomps
cltd
push
inc
mov
or
add
jg
sub
cli
jnp
or
outsl
jle
inc
call
mov
es
push
mov
dec
mov
aad
and
jo
daa
xchg
into
test
mov
andl
mov
es
sub
inc
icebp
pusha
pop
xchg
ret
adc
xlat
popa
pop
arpl
inc
loopne
mov
popf
and
sahf
mov
cltd
pop
je
cmp
inc
mulb
fiadds
mov
icebp
adc
push
loopne
mov
mulb
data16
js
pop
mov
xchg
pop
inc
movsl
sbbb
mov
leave
jg
les
xor
push
add
cmpsb
cmp
jno
test
lods
pop
icebp
js
jne
jns
call
ficompl
in
clc
cmp
push
or
xor
push
movsl
andb
aaa
in
mov
and
inc
dec
loopne
push
or
lret
cltd
lds
and
cmp
mov
xor
dec
dec
pop
pop
in
test
xor
xchg
cmc
daa
scas
mov
jge
push
xchg
jo
imul
inc
inc
or
xchg
pop
xchg
leave
ljmp
dec
push
cmp
push
mov
cmp
in
and
bound
sahf
mov
rorl
mov
xor
pop
in
rorl
bound
cmp
ss
rcr
inc
sub
sbb
ss
aam
jle
addr16
adc
out
add
lds
xchg
sbb
sub
mov
notb
push
loope
inc
out
aaa
gs
in
add
mov
mov
jecxz
fdivrs
pop
cmp
sbb
pop
mov
jp
pusha
ljmp
out
std
mov
add
dec
loopne
push
dec
cli
pop
inc
push
inc
dec
or
jl
dec
mov
in
sti
mov
fcompl
adc
xchg
or
aam
xchg
add
aam
xchg
jo
push
mov
mov
shrl
lock
leave
sti
rolb
dec
pusha
out
sub
mov
pop
inc
rsqrtps
adc
inc
sbb
mov
outsl
pop
loope
clc
dec
inc
push
inc
shlb
or
add
ljmp
xchg
mov
pusha
icebp
dec
xchg
outsl
outsb
inc
mov
mov
ret
scas
jb
lods
daa
dec
sbb
mov
jmp
push
loope
les
xchg
push
call
or
lret
mov
jbe
addr16
icebp
adc
mov
ds
in
ljmp
mov
pop
jno
mov
mov
mov
xchg
ds
out
pushf
cld
leave
repnz
fsub
aas
cmpb
xchg
insb
jno
repnz
xchg
push
mov
lret
mov
add
sub
jmp
fs
jae
shlb
jae
adc
jecxz
sbb
cmp
xchg
adc
inc
rcrb
pop
stos
jge
hlt
cmp
or
push
fnstcw
and
xchg
lahf
adc
cmp
fldenv
push
sahf
or
fcompl
xor
add
xchg
cltd
ljmp
sub
push
xchg
inc
mov
mov
push
mov
sub
ret
inc
cmpsb
and
push
ret
mov
aaa
insb
movsb
jp
ds
fstpt
cmpsl
scas
jmp
fbstp
cmp
andb
scas
xchg
ja
mov
in
xchg
bound
lcall
out
insb
cmp
push
mov
in
jg
cmp
std
mov
and
iret
push
jle
xor
imull
or
adc
push
add
cmp
xchg
cmp
jecxz
adc
sbb
cmpsl
mov
rorb
sbb
out
xchg
jb
or
mov
nop
out
push
shl
cmp
pop
mov
or
lods
mov
ret
jg
or
lahf
inc
mov
mov
leave
ret
scas
lret
pop
imul
mov
push
fidivl
mull
stos
pop
jmp
add
jl
dec
xchg
stc
sub
std
sub
dec
mov
pop
jge
loope
je
insb
push
orl
not
invd
iret
push
sbb
fildll
jno
mov
into
mov
fldt
cmpsl
bound
sub
push
scas
push
jl
cmp
dec
mov
dec
pop
outsl
clc
int
mov
adc
adc
jno
xor
iret
cmp
cwtl
fwait
popf
popa
bound
adc
insl
out
push
andl
sarb
decb
test
cli
pushf
mov
push
out
and
fstpl
fnstenv
je
push
jne
lret
popa
fimull
aad
push
jbe
lods
fsts
popl
loop
inc
popa
push
arpl
add
push
sub
dec
loope
je
icebp
cli
push
xchg
jle
das
push
mov
mov
cmc
fsubl
iret
jb
stos
sub
pop
xchg
into
fldenv
cld
into
jnp
cltd
cmpsb
sub
and
add
pop
or
xchg
test
dec
push
testb
scas
add
sti
or
out
enter
arpl
dec
loop
sti
mov
add
fcmovnu
or
daa
aaa
fildl
cmp
aaa
ljmp
idiv
sbb
sub
xor
leave
xchg
iret
iret
mov
test
cltd
jno
dec
add
fucomi
ja
fs
and
je
xor
cs
dec
push
cld
mov
push
or
add
cmovo
or
jns
adc
lahf
sbb
out
jb
lcall
lock
and
outsl
mov
fs
and
call
in
jnp
lret
mov
pop
jb
loopne
daa
std
jl
pop
sbb
mov
jl
add
es
dec
sbb
mov
lcall
mov
adc
mov
and
dec
ja
lods
addr16
push
mov
mov
imul
sub
pop
jno
sbb
mov
jmp
aam
pushf
jae
cltd
loopne
movsl
adc
test
divb
testb
lds
mov
mov
in
push
shl
outsb
mov
roll
setg
lsl
push
shll
cmp
mov
mov
jb
push
xchg
push
movsl
add
testb
lret
dec
inc
das
imul
jnp
iret
jo
dec
out
adc
sub
inc
fsubl
addl
pop
or
sub
mov
jae
pop
fnsave
sub
sbb
and
cli
lret
loope
in
mov
testl
clc
or
lret
jecxz
cmpsl
add
insl
shll
or
movsb
movsl
cmp
addr16
dec
insb
jno
loope
ficoms
inc
dec
imulb
adc
or
fdivrp
std
call
stos
xchg
lret
fisubrs
mov
jecxz
dec
cli
pushf
je
pusha
dec
xchg
pusha
add
push
jmp
clc
xor
out
and
loopne
xchg
pop
push
ljmp
mov
mov
insb
in
inc
jp
xchg
jo
fdivrl
imul
bound
loopne
jns
xchg
sub
cli
orb
dec
sub
and
mov
push
pop
inc
dec
hlt
ljmp
dec
inc
test
jne
jne
shrb
fmul
mov
pushf
mov
and
sub
jo
rcrl
dec
cmpsl
push
push
or
push
pushf
sbbl
jns
xor
lret
cmp
sbb
mov
push
stc
stc
mov
push
lcall
inc
pop
xchg
cmovns
ss
sub
jl
dec
push
or
push
or
mov
cmp
pop
mov
cs
dec
popf
loope
dec
lgs
mov
mov
jae
push
popf
in
pusha
imul
dec
mov
int
jl
ljmp
pop
dec
sub
ss
lret
dec
cld
scas
sub
rorb
lock
push
cmp
pop
dec
cmp
fwait
testb
loopne
push
clc
ljmp
add
sbb
js
add
ss
or
pop
xchg
or
int3
faddl
cli
ret
xchg
xor
pop
sarb
ds
int
and
sub
flds
outsl
and
cli
mov
outsb
lret
add
pop
iret
xchg
cmp
xor
imul
mov
outsl
dec
pop
movsl
mov
in
add
sbb
dec
jp
divl
std
mov
mov
sbb
clc
push
sbb
hlt
enter
sub
xor
inc
lret
cmpl
in
xor
movsb
ss
mov
add
cwtl
std
movsl
iret
xchg
out
mov
cmp
mov
mov
into
jne
mulb
cmc
mov
aas
call
adc
lret
mov
push
cltd
and
std
push
addr16
push
clc
mov
xchg
iret
daa
sub
mov
es
lea
sub
imul
cmp
lods
xorl
pusha
inc
lahf
mov
push
out
ja
dec
and
inc
das
pop
bswap
rcrb
xchg
cwtl
cmpsb
mov
xchg
dec
lods
push
xchg
jo
cmp
ficoms
lods
dec
mov
mov
cmp
sahf
mov
push
fs
mov
xchg
int
sbb
lret
out
lret
lfs
mov
pop
mov
push
xor
push
fstp
lahf
adc
scas
shll
push
sbb
fwait
adc
lods
lret
and
arpl
cltd
loopne
mov
adc
stos
dec
imul
das
stos
sub
pop
add
xor
adc
ret
push
xor
shlb
pop
jl
js
push
cmpsb
jno
inc
pop
shl
flds
sarb
aaa
test
mov
pop
aad
jb,pn
into
push
mov
or
ret
push
xor
out
imul
add
daa
cmp
push
mov
xchg
ja
lods
imull
mov
sar
jno
add
ror
mov
stc
xor
lods
popa
sarl
push
call
call
mov
cmp
addr16
push
or
mov
fdivrl
adcl
pushf
ret
push
lahf
jp
cmp
cmp
call
scas
fcomp
stos
or
and
sub
jge
xchg
ret
scas
movsb
fdivrl
dec
mov
mov
ljmp
dec
cmp
sub
rol
push
lcall
cmc
iret
enter
movsl
sbb
dec
sbb
fistpl
cld
repnz
jl
mov
mov
into
xchg
lock
gs
or
sahf
xor
ret
cmpsl
insl
mov
cmp
and
ret
pop
pusha
lods
xchg
jl
inc
fsubp
aas
add
adc
mov
shlb
mov
push
xchg
adc
cmp
xor
lods
jmp
adc
iret
push
pop
mov
cli
scas
dec
icebp
mov
seta
aam
mov
fistps
scas
aad
add
push
lods
or
jo
dec
push
call
sbb
ja
push
add
pop
cli
daa
mov
nop
mov
dec
repnz
hlt
xor
aam
push
jge
lods
and
pop
mov
fimuls
xchg
push
in
test
cmp
clc
push
arpl
xchg
and
xor
shll
les
pop
in
movb
mov
push
sahf
pusha
test
xadd
sub
dec
pushf
mov
push
int3
loope
bts
arpl
mov
iret
loope
jnp
in
hlt
daa
cmp
and
mov
jp
cli
hlt
dec
in
mov
mov
testb
and
into
shll
cmp
jnp
mov
pop
mov
daa
iret
negb
int
popl
cmp
jae,pt
ss
sbb
mov
jns
xrelease
mov
fwait
in
insl
cs
cmp
test
mov
cmc
jb
add
push
das
or
dec
or
push
mov
push
insl
or
pop
and
gs
sbb
push
mov
cli
shll
pop
jnp
repz
pushf
push
mov
mov
popf
mov
mov
fildll
adc
movsl
jae
mov
mov
enter
aam
and
push
xchg
dec
iret
into
push
cs
lea
shlb
and
xchg
jle
or
sbb
pop
adc
or
mov
add
sbb
mov
xchg
popf
xchg
fistl
jnp
or
notl
xor
and
lea
pop
gs
jne
sub
xor
lods
adc
nop
sub
sti
xchg
pop
push
pop
pusha
shr
fildl
adc
stos
mov
out
movsb
aas
jno
pop
jbe
imul
pushl
test
push
cmp
push
notl
xor
push
mov
js
data16
lret
insl
fwait
out
or
repz
ret
push
hlt
je
cmpsb
mov
pop
mov
into
xchg
dec
test
sub
nop
aaa
or
dec
sub
daa
sahf
arpl
daa
push
test
fs
movsl
jne
mov
sub
dec
push
popf
adc
dec
sub
int3
cmp
cmc
jns
jbe
shr
fcompl
in
cmp
fidivl
mov
cltd
iret
test
push
pop
loope
cmc
pop
or
push
jns
lods
loope
popf
dec
xchg
or
or
jl
sbb
rorl
outsl
adc
jns
in
xchg
inc
clc
adc
pop
and
int
cmc
xchg
xchg
icebp
insb
or
lds
popf
scas
mov
push
dec
lds
adc
jns
lea
dec
adc
pushf
push
lret
pop
test
in
cli
cmp
push
fdivl
or
or
and
and
sub
xor
mov
std
mov
addr16
notb
sub
mov
xchg
dec
xor
cmp
push
sbb
shld
scas
xor
or
mov
scas
popa
int3
jge
jo
sahf
arpl
jne
inc
push
cmp
or
adc
popa
push
ret
daa
mov
aas
dec
or
jle
fstps
repnz
loop
sbb
call
jmp
ret
pop
dec
pop
inc
shll
idivl
xchg
int3
sub
mov
cmp
enter
cld
sbb
pop
mov
mov
nop
adc
add
daa
add
xor
inc
fwait
push
xchg
inc
mov
push
loopne
je
jo
in
add
sub
mov
push
cmpsl
lret
dec
mov
adcl
and
xor
lret
xchg
push
shrb
push
rol
les
cltd
pushf
pusha
sti
mov
test
mov
sbb
pop
rcll
lcall
sbb
jl
jge
push
mov
fistpll
movb
leave
xchg
inc
fadds
sub
mov
enter
outsl
lea
sbb
iret
inc
mov
dec
ret
or
mov
aas
push
sbb
adc
sub
or
xchg
xchg
jmp
push
mov
cmc
leave
gs
insl
cmp
pop
shl
rcrb
cmp
ret
adc
rolb
fstps
push
xchg
mov
aam
sub
or
loop
add
mov
dec
outsl
or
inc
cmp
xor
loope
cltd
xchg
and
ss
loope
mov
adc
mov
cli
cmp
xor
or
cmp
adc
fs
jecxz
pop
and
inc
adc
icebp
lret
out
repz
jae
and
add
stos
dec
push
insl
daa
xchg
rolb
mov
sub
test
ret
cmpsl
std
daa
repz
js
push
xchg
or
mov
dec
adc
out
cmpsl
inc
roll
test
lea
push
into
dec
mov
enter
mov
xchg
jae
jns
pop
add
out
rcl
mov
mov
push
mov
or
dec
push
sub
insb
and
lcall
cmp
and
sar
fcomps
or
xor
cmp
lock
sub
cld
pop
adcl
outsl
sub
cld
iret
ret
xchg
aam
push
ljmp
in
dec
pop
pop
jmp
pop
rclb
cli
push
mov
mov
ljmp
repz
nop
insl
enter
sub
sarl
cmp
inc
and
mov
imul
dec
into
sbb
in
xor
or
mov
sbb
jmp
mov
adc
mov
cmp
mov
dec
push
in
cltd
xchg
fdivs
inc
adc
lock
outsl
add
or
and
sbb
jae
call
icebp
fisubs
xchg
cld
mov
popf
inc
aam
inc
aam
dec
dec
js
dec
pop
sahf
cmp
in
jl
out
or
mov
sub
push
inc
xchg
call
popa
scas
stos
jge
das
inc
and
int
push
xchg
rcll
outsb
cmp
roll
push
xchg
shl
arpl
fiaddl
jae
arpl
jmp
fs
and
mov
mov
lcall
addl
clc
pop
fndisi(8087
movsb
and
inc
inc
xchg
ds
sbb
or
sbb
imul
cmp
jp
std
xchg
jae
dec
gs
sahf
and
mov
add
aad
add
push
int
xchg
mov
cmpsl
push
mov
cmp
xchg
jmp
ret
and
sbb
aam
jns
loop
mov
jbe
enter
lcall
pmulhuw
jae
negl
int
push
sbb
adc
inc
sub
sbb
sbb
add
and
inc
ret
imull
mov
push
sbb
add
ret
ljmp
pop
imul
fadds
push
cmp
pusha
imul
stos
cmp
inc
push
cmp
inc
jmp
pop
xor
cmc
bound
out
cmp
xchg
xor
pop
jno
fadds
lds
adc
or
jb
shlb
sub
sub
xor
psrlw
add
push
xor
push
mov
push
orb
mov
mov
lret
mov
lcall
gs
into
loop
mov
sar
aas
lds
jns
jg
outsb
aad
inc
les
adc
pop
scas
xor
sbb
jle
addr16
add
add
and
xchg
mov
mov
push
or
xchg
mov
stc
xor
repz
out
fs
sbb
mov
std
flds
mov
pop
lds
and
les
ret
mov
add
adc
sub
out
jae
add
fldt
jecxz
fnsave
dec
push
dec
push
imul
in
pop
mov
xchg
es
and
out
xlat
inc
xchg
orb
sub
scas
and
fstps
mov
mov
int
xchg
push
push
stos
and
xchg
sub
jg
outsl
mov
lret
lret
inc
adc
rcrb
loope
pop
sti
sbb
jg
pop
dec
ss
xor
cmp
xor
cmp
dec
xor
scas
mov
jmp
mov
cmp
pop
sti
add
popf
stc
jg
add
mov
xor
ds
add
push
sub
mov
cmp
repz
sti
cmpsl
in
outsl
jl
mov
fucomp
xchg
inc
orb
cmc
out
in
daa
ret
cmc
mov
jns
gs
jae
cmpsb
pop
sahf
jmp
add
add
pop
je
inc
mov
xchg
pop
fcomi
add
inc
push
ja
paddsw
sti
and
mov
pop
ds
push
xor
mov
faddl
mov
push
je
add
xor
aad
int
and
jnp
sub
push
adc
push
out
push
pop
inc
inc
adc
xor
mov
rorb
loope
push
sub
sub
xchg
xchg
sub
or
adc
notl
sbb
mov
xchg
lret
nop
scas
sub
imul
enter
cmp
shlb
dec
lret
cmpsl
rclb
mov
mov
dec
xor
sti
lret
add
icebp
xor
out
cltd
add
jp
les
dec
xor
scas
jg
pop
push
inc
cmp
mov
inc
adc
pop
je
push
andl
mov
xchg
adc
ljmp
pop
movsb
stos
mov
push
jg
jmp
leave
and
push
test
xlat
cld
in
lds
pop
cs
or
xchg
mov
mov
insb
nop
push
jbe
mov
and
cmpsl
sbb
adc
mov
insb
cmpsb
inc
add
or
pop
lods
mov
sub
loop
xor
aad
xor
jecxz
stc
bound
dec
clc
outsb
jp
scas
push
push
repnz
je
pop
mov
je
or
notl
mov
test
imul
mov
adc
mov
adc
sub
inc
mov
xchg
ret
sbb
add
mov
pop
fucomi
fmulp
mov
fldcw
jne
call
mov
subb
sbb
cmpsl
popf
pushl
mov
sub
lods
insl
mov
arpl
pop
and
push
sbb
cwtl
push
mov
inc
pop
insb
aas
push
inc
pop
lock
add
xlat
push
outsl
sbb
mov
mov
les
in
cmpsb
pop
movsl
or
mov
pop
outsb
push
stc
in
enter
popa
jmp
ljmp
mov
mov
out
test
adc
jecxz
and
mov
cs
jmp
mov
cli
lcall
testl
fidivs
in
fildl
push
push
ret
ljmp
arpl
enter
pop
or
test
push
test
pop
arpl
pop
shlb
sbb
data16
cmpsl
lret
sarl
aad
sbbl
or
lahf
outsl
cmp
mov
mov
std
loope
fcomps
push
mov
sbb
and
imul
jb
fdivs
push
jle
flds
cmc
rorl
push
jbe
mov
inc
mov
sub
mull
into
adc
mov
jecxz
and
ret
subl
cmpsl
ja
adc
mov
sbb
lret
cltd
mov
mov
cmp
mov
fldenv
mov
nop
add
lods
or
insb
push
int
out
or
or
or
lods
adc
and
cld
outsb
rorl
jb
lahf
test
icebp
xor
cmp
int3
inc
ljmp
and
jmp
mov
jle
sub
jne
iret
icebp
push
data16
call
aam
sbb
sub
adc
mov
xchg
arpl
push
xlat
mov
and
and
push
add
add
jno
ja
shll
mov
pushl
mov
sti
popf
stos
jecxz
mov
inc
es
cwtl
xchg
sbb
pop
in
loope
push
shrl
cmp
insb
int
cmp
jl
mov
sbb
dec
mov
xchg
cwtl
jbe
ja
xor
lret
xchg
jno
cld
out
sub
dec
mov
mov
sti
cmc
adc
mov
jl
cwtl
xor
popa
pop
sub
pop
dec
dec
xorb
cld
and
call
dec
cwtl
push
ja
repz
lds
xchg
stos
ds
popa
push
adcl
inc
push
inc
imulb
cmpsb
sbb
cmp
inc
pop
loope
lods
mov
repz
ret
lock
jb
jp
loop
add
or
inc
and
mov
mov
aad
les
test
out
or
mov
and
xchg
add
push
and
push
dec
sbb
movsl
fsubr
sub
gs
push
mov
mov
into
mov
ljmp
mov
mov
xchg
cmp
test
push
ss
insb
or
int3
pop
fistl
mov
mov
test
sbb
pop
pushf
imull
mov
jns
sub
xor
sbbl
add
sub
inc
mov
mov
sbb
jne
icebp
and
inc
mov
fmuls
xchg
outsb
push
inc
fldt
jns
or
jmp
dec
les
sub
les
pop
arpl
in
mov
lods
pop
test
jo
loop
outsl
aas
mov
jbe
int3
cmp
jae
add
mov
fidivrs
repz
mov
cmpsb
jp
test
popf
dec
dec
lret
push
push
xor
call
cmp
xor
cmp
mov
dec
push
jl
inc
arpl
jbe
jbe
outsl
sarl
daa
out
jae
jo
pop
push
out
out
enter
adc
shll
sub
dec
xor
and
cmc
jno
insl
mov
jg
adc
push
ret
mov
jp
or
mov
sahf
ja
imul
shll
adc
jmp
arpl
fsubl
std
mov
lret
inc
insb
outsl
and
push
push
mov
in
out
mov
in
lea
cmpsb
les
in
mov
mov
test
add
jecxz
in
insl
cmp
insl
jge
dec
in
sub
jae
xchg
xor
out
imul
sub
add
out
inc
mov
mov
call
sub
icebp
cmp
scas
int3
jo
xchg
pop
imul
dec
cmpsl
inc
bnd
jg
xor
jne
pop
jge
cltd
js
outsb
pop
nop
lods
std
mov
add
jp
subb
aam
outsb
adc
lret
negl
push
mov
sub
aas
std
lret
sbb
cmp
push
fcoms
loope
pop
icebp
and
jbe
lret
adc
loope
repz
enter
jbe
xor
dec
icebp
jnp
lcall
out
mov
inc
xchg
pop
adc
lds
inc
mov
dec
lret
out
pop
mov
leave
les
mov
lea
dec
xor
xlat
and
lock
xor
mov
orb
mov
insl
sub
cmp
cmc
rcl
mov
je
xchg
and
push
lret
push
and
insl
in
mov
and
ret
loop
jge
and
and
in
sahf
sub
pop
and
fld
sbb
lret
lods
inc
arpl
and
addl
lahf
mov
pop
inc
loop
jno
mull
popa
mov
inc
pop
and
loopne
xor
cltd
mov
mov
cmp
addb
lods
jp
insb
out
mov
xor
mov
push
adc
fidivrl
xchg
hlt
adc
das
adc
sub
xor
clc
rcrb
and
and
mov
push
decl
dec
add
xlat
and
and
pop
jns
popa
cmc
aaa
and
mov
jge
cmp
lock
insl
xor
rcrb
sbb
mov
sub
nop
mov
xchg
lcall
adc
mov
inc
or
cmc
jl
gs
inc
lock
and
lret
inc
mov
xchg
sar
mov
push
cmp
imul
loopne
sub
xor
add
scas
xchg
pop
push
jecxz
std
cltd
out
jge
subl
lret
cld
imul
hlt
out
xchg
pop
ret
xchg
or
and
mov
or
ror
shrl
addr16
jns
test
mov
cmpsb
out
fildl
sub
pop
adc
pop
out
addr16
lods
ret
imul
icebp
popf
adc
aad
xchg
push
cmp
sub
cmp
sti
frstor
stos
dec
jg
in
in
popf
psubsb
pcmpeqd
sbb
dec
lds
push
mov
lret
adc
add
fcmovu
aam
mov
adc
adc
push
cmp
int
or
sub
test
aas
imul
sbb
std
push
mov
inc
mov
add
sbb
jl
sbb
mov
shll
sti
xor
dec
pop
imul
pushf
inc
mov
test
and
or
sub
push
jo
cmp
mov
jno
xchg
jns
arpl
adc
stc
adc
mov
mov
mov
jge
lods
xor
imul
mov
mov
pop
dec
scas
push
sbb
je
mov
cmp
jp
rorb
cmp
sbb
nop
sub
inc
jge
cmp
dec
sbb
xchg
pusha
dec
pop
and
xchg
xchg
scas
into
xchg
or
push
pushf
mov
jns
adc
sar
ret
out
fsts
adc
jnp
cmp
movsb
sbbb
or
push
sub
pop
leave
leave
sbb
mov
push
testb
stos
pop
xchg
adc
fcom
test
mov
es
rcrl
lcall
adc
push
mov
jnp
test
xchg
loop
aaa
and
xchg
cwtl
repz
imul
mov
mov
inc
in
repz
scas
ljmp
xchg
sbbb
inc
sub
mov
clc
sahf
fs
ja
xlat
xchg
add
faddl
push
leave
and
hlt
bound
xor
popf
inc
stos
in
repnz
fistpll
xor
stc
xchg
and
ror
sbb
aas
loop
js
insl
addb
and
fildl
jg
adc
mov
sub
pop
pop
and
sbb
shll
dec
or
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
jmp
movsl
mov
sbb
scas
mov
nop
cmp
cmp
cmpl
pop
pop
test
jecxz
pop
je
cmp
inc
outsl
pop
jl
push
outsb
es
aaa
dec
xchg
in
inc
push
sbb
jecxz
sbb
and
lea
pop
mov
je
pop
popf
jmp
aas
xchg
testb
xor
jle
aas
dec
lcall
in
xorl
or
cmpsb
cmpsb
jg
sbb
pop
test
mov
popf
ret
jle
dec
cmp
into
lret
or
ljmp
in
pop
push
lds
dec
add
xchg
jns
test
out
push
jmp
and
loopne
arpl
ret
dec
movsl
push
adc
sarl
out
push
stc
in
cwtl
cwtl
jae
xchg
pusha
jmp
ret
iret
arpl
sub
push
mov
inc
outsl
inc
je
sub
or
pop
jno
popf
push
pop
push
insl
jns
insl
cmc
fwait
out
or
into
cld
dec
adc
mov
ljmp
lret
lods
scas
and
mov
mov
cmp
lret
lret
pop
or
jl
add
insl
insb
es
dec
fbld
sbb
orb
mov
pop
adc
xor
ror
out
lcall
and
pusha
test
add
adc
mov
pop
cmp
jmp
push
outsl
add
dec
cmp
mov
push
test
and
push
add
jno
cltd
stc
notb
ret
jecxz
out
mov
cs
ret
and
add
dec
mov
jns
loope
or
push
xchg
aam
cmpsl
cli
push
adc
aam
inc
addl
cmp
mov
in
js
xor
cmp
sub
fldt
or
ja
cmp
clc
out
adc
jnp
es
xchg
movsl
sbb
dec
pop
add
or
jne
xor
adc
mov
iret
xor
or
ja
xchg
mov
xor
pop
or
sbb
jns
pop
mov
iret
rcr
jg
cmp
ljmp
nop
mov
mov
xchg
mov
mov
das
pop
test
push
jmp
push
fnstsw
rorl
jno
cwtl
in
adc
fdivl
pop
cmp
leave
loop
imul
sub
outsb
pmulhw
out
sub
les
int
testb
pop
pop
je
nop
adc
jbe
fidivs
inc
jge
mov
inc
add
in
jg
adc
or
pop
jne
js
or
jmp
push
cli
xchg
push
loopne
fistps
fiaddl
xchg
jbe
adc
icebp
and
cld
pop
fnstenv
sub
xlat
orl
call
insb
loop
push
sub
and
rcll
cli
sbb
xorb
test
ss
sbb
sub
loop
imul
cmp
push
pop
lea
adc
test
push
and
push
movsl
pusha
sub
int
in
mov
lods
jno
push
jmp
cmp
dec
mov
and
movsl
es
shll
or
addr16
or
push
jne
in
iret
lds
push
fcompl
cltd
adc
xor
inc
pop
bound
cmp
cmpsb
shlb
and
in
cmp
jae
xchg
xchg
sbb
mov
nop
insb
pop
movsl
jg
add
js
std
hlt
jmp
cmp
imul
lret
pop
lahf
adc
cmp
cmc
test
bound
push
mov
or
std
push
inc
repz
pushf
cld
push
push
push
in
push
push
std
adc
fbld
cmpsl
sbb
ficoml
mov
leave
lret
icebp
and
not
cmp
sbb
adc
push
mov
add
imul
cmpsl
je
enter
adc
lahf
incl
test
arpl
mov
addb
loope
cwtl
in
pop
hlt
add
pop
pop
scas
sub
shlw
dec
pop
jle
lret
xchg
sub
cmpsl
lret
xchg
enter
push
leave
std
out
sub
inc
insl
sub
iret
cli
stc
push
mov
test
es
test
mov
cmc
stos
or
jl
icebp
adc
enter
outsb
lods
adcl
nop
insb
je
enter
pop
pop
test
add
pop
ficomps
sub
pop
shlb
mov
je
mov
aas
push
dec
sub
rcll
scas
inc
mov
xchg
xchg
shll
mov
mov
pop
fisubl
mov
je
xor
out
push
lret
adc
lds
aam
movsl
dec
inc
xor
ss
ds
cmpsb
cs
test
in
ja
lcall
mov
cli
or
cmc
cmp
std
into
icebp
test
daa
add
jg
and
aad
xchg
push
test
lea
nop
sub
cmp
pop
lcall
mov
push
subl
out
push
inc
mov
aaa
jb
stos
sub
mov
mov
pop
adc
fcomps
push
xor
mov
mov
addr16
stos
xchg
jecxz
in
iret
cmc
push
add
dec
adc
in
xchg
xlat
aam
cld
andl
mov
sub
sub
dec
lahf
adcb
jecxz
iret
notl
aam
or
rcl
repz
clc
adc
pushf
jge
movsb
and
cld
repnz
jnp
js
xchg
movsl
fldl2t
int
mov
cmp
push
pop
push
outsb
lret
xor
inc
std
loopne
or
mov
rolb
out
push
insl
push
mov
xchg
cwtl
sbb
rcr
les
mov
sub
cs
adc
popa
lea
xlat
jno
pop
lahf
jle
dec
in
das
in
jp
ret
pop
inc
adc
fbld
push
mov
fcomp
stc
pop
sub
jns
xchg
jbe
popf
pop
sbb
fistps
nop
int3
repnz
mov
and
int
jmp
jno
enter
sbb
or
sub
cwtl
fwait
and
cld
sbb
jg
scas
into
ret
sub
adc
inc
xchg
pop
in
jge
jae
movsl
cli
xchg
mov
shlb
push
mov
dec
andb
addr16
cmp
sti
das
pop
mov
lods
inc
mov
adc
sub
orl
scas
inc
lods
enter
inc
cmp
dec
cltd
inc
adc
icebp
icebp
ja
sub
aam
test
adcl
fsincos
mov
push
adc
es
rorl
cmp
pcmpgtd
mov
loopne
push
rcrb
lcall
add
jns
cld
push
into
push
jbe
test
and
cld
or
xchg
xor
sub
out
ret
dec
add
and
dec
mov
popa
adc
insl
rcrl
inc
jnp
sahf
lret
mov
mov
js
mov
sbb
mov
pusha
push
cs
sub
int3
movl
nop
mov
sbb
stos
inc
shlb
out
repnz
hlt
nop
popa
push
repz
ljmp
push
dec
cld
cltd
fs
dec
dec
popl
sub
into
sub
int3
mov
rol
mov
pop
aas
adc
das
cmp
dec
adc
sbb
movsl
and
leave
sub
insl
jbe
dec
jne
fwait
adc
mov
inc
imul
mov
add
das
xchg
sbb
sti
ss
out
popf
js
test
xor
dec
lods
rcl
xchg
int
dec
adc
mov
rcrl
outsb
mov
movsb
add
in
fldl
jge
dec
aas
lods
addl
fildll
fstpt
sub
fs
add
imul
mov
decl
jp
cmc
inc
cmp
cmc
adc
push
gs
and
inc
cmp
push
adc
fstpl
rcll
filds
loope
add
dec
cmpsb
cmp
das
and
xor
ja
test
xchg
inc
repz
stos
xchg
shrl
sbb
fsubrl
leave
mov
pusha
or
mov
add
adc
xor
int
repnz
add
test
cmp
incb
add
andb
or
aas
push
pop
xchg
push
xchg
insb
inc
or
lahf
or
shl
hlt
lea
adc
in
pop
aas
pop
dec
push
pushf
jbe
mov
jg
test
and
push
test
mov
pop
inc
xchg
hlt
cli
stos
jmp
sarl
push
les
and
stos
inc
das
push
pop
stc
lahf
cmpsl
cmpsb
pop
into
hlt
lds
sub
jbe
mov
mov
mov
add
mov
dec
jo
add
ss
nop
pop
mov
add
jmp
jnp
out
or
pop
push
xchg
mov
add
push
js
fcmovb
addr16
loop
inc
hlt
dec
out
shl
pop
mov
call
iret
push
lods
mov
pop
push
fs
adc
pop
inc
cmp
mov
rcll
sti
lods
push
pop
icebp
xchg
cli
pop
mov
mov
les
dec
aas
rcrb
enter
mov
and
add
jnp
pushf
xor
scas
mov
inc
imul
sub
pop
fwait
movl
xchg
lret
mov
jle
and
scas
inc
adc
cmpsb
insl
mov
xor
mov
arpl
lock
leave
add
inc
jbe
pop
xor
imul
addr16
push
xor
cmc
shll
inc
shl
jmp
lods
aam
test
orb
loopne
in
adc
mov
mov
sbb
xchg
mov
inc
sbb
add
push
data16
imul
jo
cmc
popa
jae
push
in
add
in
jp
push
ss
pop
pop
add
inc
add
cwtl
mov
mov
in
sbb
repz
popa
or
mov
mov
in
shl
addr16
sub
fists
outsl
in
fcompl
xchg
adc
push
mov
mov
out
faddp
xchg
stos
lahf
adc
mov
or
hlt
and
mov
xor
stc
add
testb
mov
push
mov
push
test
out
push
cwtl
insb
xchg
jl
sub
pusha
test
pop
popa
sub
mov
sbb
xchg
addl
rorb
dec
push
outsl
fnstcw
dec
stos
inc
sbb
pop
dec
das
and
inc
cs
repz
push
mov
divl
fwait
or
sub
insl
enter
rcl
aam
out
push
pop
lock
subl
repnz
inc
xchg
mov
ret
add
push
adc
fstpl
je
stos
clc
mov
pop
inc
icebp
dec
shl
cmpl
push
mov
jbe
clc
mov
adc
sub
lret
sub
inc
gs
and
sbb
outsl
cmp
insl
pop
or
bound
popl
popa
cli
inc
sub
ret
js
adc
adc
jecxz
mov
mov
sbb
dec
mov
or
jle
dec
rorb
jecxz
cli
cmp
mov
mov
pop
mov
ja
mov
fiadds
sbb
xor
xchg
ss
mov
imul
into
daa
jo
imul
orl
add
push
pop
inc
jp
xor
jnp
mov
sub
ret
in
pop
icebp
mov
stos
je
mov
or
sbb
sub
je
sub
ficoms
xor
cli
push
ret
mov
dec
add
adc
adc
jl
and
aad
push
mov
leave
and
cmc
adc
and
inc
insb
inc
pop
scas
ss
cmp
inc
sahf
mov
ret
ret
sub
cmc
push
add
push
sbb
xchg
or
or
iret
test
push
lea
or
add
mov
xchg
lds
in
icebp
fistps
adc
mov
inc
mov
stos
push
mov
adc
ja
shrl
cwtl
sbb
jbe
pop
pop
add
adc
cmp
dec
rol
xor
das
ja
jmp
lods
ja
cmp
mov
mov
sti
and
das
lret
push
adc
insb
jbe
mov
outsb
insl
iret
push
cmp
scas
lock
mov
testl
enter
mov
popa
imul
pop
push
inc
pop
or
mov
xor
push
sbbb
cmp
inc
outsl
cmp
mov
pop
dec
or
icebp
adc
test
in
movsl
pusha
and
vphaddbd
fcomp
sub
mov
jns
lea
aaa
call
popa
out
ja
pusha
push
push
mov
inc
jge
js
adc
ret
jo
fbld
fstpt
jecxz
mov
daa
or
xchg
cltd
ljmp
jae
call
movsl
pop
mov
pusha
arpl
dec
out
cmpsl
add
scas
xchg
xchg
loopne
stos
rolb
dec
ret
mov
cmp
loop
shlb
lcall
jg
mov
push
out
in
push
mov
push
les
jp
ret
bound
mov
dec
popf
mov
aam
cmp
or
jo
nop
jl
or
outsb
testl
test
imul
mov
mov
addr16
sub
int
mov
xor
push
adc
std
test
cltd
or
mov
je
sub
inc
mov
and
int
js
cli
pop
sti
ds
sbb
std
jp
cmp
adc
xorl
pminub
cmp
sarb
out
lret
sub
mov
aad
push
shlb
mov
out
jbe
xlat
lods
lock
mov
out
pop
dec
pop
xor
int
pop
call
aad
add
scas
dec
in
jne
popf
jle
imul
mov
xchg
pop
int3
sbb
incb
sar
jge
or
mov
in
daa
xlat
jle
dec
inc
insb
imull
cmp
inc
sbb
enter
add
sub
imul
cli
mov
test
push
fmuls
outsl
dec
mov
das
rcrl
sub
inc
pop
shrb
arpl
jl
xchg
repnz
adc
in
cltd
sub
lock
adc
jbe
les
daa
test
nop
jle
jne
cmp
inc
pop
and
push
aam
sar
inc
rorl
das
cmp
sub
dec
adc
inc
cmc
mov
lea
clc
lcall
and
mov
push
push
dec
aaa
push
pop
scas
add
imul
mov
jb
cmp
fcom
push
js
addr16
jl
sub
push
mov
lds
jns
shl
rclb
ss
js
test
jmp
dec
add
ds
push
nop
decb
cmp
lcall
test
std
fldenv
dec
dec
inc
addr16
xchg
inc
pop
inc
test
lods
adc
imul
fadds
out
sbb
and
mov
jnp
xor
push
stos
xor
int
les
mov
pop
repnz
loopne
int
mov
jmp
push
mov
cltd
ror
mov
mov
movsb
mov
adc
aad
test
xor
mov
mov
cmpsl
sti
xor
pop
jle
adc
clc
pusha
fwait
push
adc
cmp
leave
cwtl
sbb
cld
mov
iret
popa
pop
jge
call
stc
clc
loope
filds
fmull
popa
bound
hlt
xor
js
jo
dec
mov
sti
je
adcl
push
adc
rorb
mov
push
cs
imul
aas
bound
scas
fwait
sbb
and
jbe
push
pop
push
les
cmpsl
adc
imul
test
add
or
xor
mov
pop
mov
or
cmp
outsb
idivb
or
jb
aaa
call
insb
out
pusha
add
inc
testb
sbb
sbb
clc
ret
mov
xchg
inc
or
pop
and
cltd
inc
fstpt
inc
test
push
jbe
inc
fildll
mov
sub
or
xor
mov
dec
and
pop
test
popf
cmc
shll
aaa
icebp
stc
out
test
movsb
mov
lea
sub
shrl
mov
mov
sbb
xchg
je
ret
jmp
jp
sahf
mov
inc
inc
pop
jp
icebp
lock
movsl
xor
sti
sbb
leave
icebp
scas
icebp
js
mov
loope
jno
mov
cwtl
sbb
enter
adc
lcall
fwait
out
popf
fldl2t
mov
jnp
jns
rorl
dec
jp
push
mov
outsl
jg
int
aaa
adcb
mov
repz
shl
sbb
orl
mov
jnp
rcr
data16
cmp
xor
test
fwait
pop
inc
in
inc
inc
leave
imul
add
lret
xchg
mov
add
insb
sbb
mov
imul
outsb
add
sub
inc
sub
push
push
or
mov
jbe
pop
scas
jae
pop
xor
dec
fimull
add
loopne
out
shll
stos
hlt
lock
rclb
push
call
icebp
xor
fdiv
mov
dec
jmp
push
sarb
popl
pop
aaa
mov
mov
dec
cmpsl
fnstsw
into
lret
imul
or
cmp
or
idiv
ljmp
ja
or
push
cmc
inc
mov
and
push
adc
out
xor
xchg
sbb
and
cmp
in
cmp
shl
push
ret
movsb
inc
fwait
movsl
lahf
outsb
xor
sbb
sub
xchg
adc
in
mov
push
cmp
lock
hlt
repnz
jno
cli
cmpsb
ret
adcl
call
aas
mov
xor
mov
gs
add
leave
lods
pop
aad
inc
cs
cltd
enter
mov
push
push
push
aas
orl
shlb
insl
ljmp
inc
repz
pop
or
lahf
clc
aad
es
xchg
cmp
inc
mov
xchg
cmp
icebp
imul
mov
inc
xchg
inc
cmp
pusha
xlat
les
lcall
and
sbb
scas
in
cmp
push
and
and
test
ret
mov
es
lds
arpl
push
pop
mov
sbb
cmp
rorl
push
cmp
dec
adc
fistl
push
mov
jns
jo
insl
add
out
setns
or
sbb
adc
xchg
imull
inc
into
inc
std
pop
inc
imul
movsb
jno
out
outsb
fwait
shrl
cmp
inc
mov
xchg
cmp
jb
and
mov
pop
sub
sbb
dec
ss
sub
and
or
ljmp
inc
arpl
cld
pop
ret
sub
xchg
icebp
fsubr
jnp
in
popa
and
xor
iret
fmuls
mov
cld
and
mov
int
test
fadd
mull
rorb
popa
mov
outsb
mov
aad
lret
fbld
orb
adc
mov
fs
cmp
jmp
outsl
push
jmp
dec
jb
jmp
insb
cmpb
and
insl
adc
mov
mov
je
push
fisubrl
test
fldl
fisubs
xchg
mov
or
test
enter
insb
sub
sub
xor
inc
in
dec
pop
aad
dec
aam
mov
mov
repnz
neg
clc
stos
push
push
sbb
and
movsl
popf
icebp
lahf
sub
mov
mov
adc
jbe
pop
sbb
cmp
pop
imul
cmpsl
stc
test
add
mov
gs
jmp
push
push
mov
xor
mov
bound
sbbb
lahf
mov
mov
sub
xchg
push
ficoml
push
adc
xchg
call
mov
outsl
add
inc
data16
mov
inc
xor
out
adc
jns
or
test
inc
adc
arpl
jns
test
sarb
and
mov
shlb
pop
dec
adc
fnsave
xchg
loop
in
and
and
mov
scas
mov
incl
lret
jecxz
mov
dec
add
pushf
popf
das
lret
fucomp
andl
rcr
jno
xchg
push
pop
movsb
sbb
aam
xchg
daa
adc
mov
push
outsb
fisubrs
jl
cli
fld1
out
sbb
nop
mov
add
sahf
lahf
lcall
or
xlat
pop
les
inc
jae
sub
imul
sub
jp
sbb
add
jbe
popf
jno
fwait
dec
mov
inc
incl
cmp
cld
adc
test
pop
inc
call
in
jae
pop
loope
es
js
mov
add
push
lds
das
xor
and
xor
xchg
imul
adc
lret
mov
xor
dec
add
inc
sti
push
adc
mov
out
fnsave
std
jnp
sbb
adc
cltd
adc
xchg
inc
cmpsl
cmpsb
loope
jnp
cmp
or
xchg
sahf
aas
pop
cmp
or
out
loope
adc
aas
push
adc
sbb
cmp
nop
xor
mov
mov
nop
inc
insb
das
imul
arpl
fstl
loopne
in
fsubrp
fwait
add
sbb
jbe
adc
sbb
fdivrs
in
addb
pop
lahf
fsubr
lret
push
cmp
jmp
test
ffree
call
push
das
jo
jo
sarl
pop
add
cmpsl
movsl
lcall
ljmp
incl
mov
mov
hlt
into
cli
dec
stc
sbb
xchg
out
pop
mov
pop
and
dec
leave
enterw
inc
pusha
aaa
push
jo
push
enter
or
pop
inc
pop
dec
dec
push
outsl
std
ret
fnstsw
ret
aaa
push
cs
sub
stos
popa
in
xor
cmpsb
sbb
adc
or
cmp
nopl
xchg
aam
or
jmp
movsb
shrb
dec
inc
or
dec
jmp
mov
push
xor
fistpl
testb
sbb
jnp
add
adc
stos
mov
fwait
rorl
pop
mov
scas
pop
ret
and
loopne
mov
jmp
cmp
lret
pop
pop
push
sbb
jbe
or
xor
add
push
cs
cwtl
int3
popa
es
out
add
sub
shll
push
test
inc
ret
ret
imul
movups
int
dec
cmp
sub
int
add
ljmp
subl
push
jns
sti
shl
fsubl
test
push
stos
mov
rcrl
push
sub
push
inc
mov
sar
nop
add
int
ss
inc
fdiv
push
mov
inc
jecxz
sbb
daa
cmp
sub
fiaddl
dec
add
sbb
dec
mov
fsubr
sub
mov
and
xor
bound
push
inc
imul
fcmovb
mov
mov
xor
sub
cwtl
mov
mov
es
jnp
and
ja
aaa
out
xchg
or
je
push
and
into
xchg
es
fcmove
test
pop
mov
adc
and
pop
out
inc
imul
insl
pop
push
in
cmp
cwtl
dec
push
imulb
mov
ret
xor
aas
add
hlt
xchg
arpl
xor
pop
jl
jnp,pn
loop
mov
or
adc
push
loopne
out
and
ret
dec
xchg
js
pusha
lods
lods
cmpsb
add
push
lds
movsb
test
out
jecxz
jge
leave
jns
sub
push
and
mov
lcall
push
cmc
imul
mov
mov
push
mov
adc
push
scas
xchg
loop
lock
sub
mov
jle
mov
cld
push
fstpl
cmp
adc
ffree
mov
push
inc
pop
push
xchg
sub
mov
lea
js
jo
test
insb
pop
cmp
mov
mov
lods
add
mov
push
xchg
gs
sbb
movsl
and
xchg
fisubrs
or
push
repnz
in
js
pop
subl
jge
inc
dec
out
loope
inc
and
popf
scas
imul
jp
aas
jle
sbbb
xor
xchg
inc
mov
outsb
sub
xor
pop
ret
les
insl
jle
test
loop
int
and
pop
ret
out
bound
mov
lock
rcrb
or
mov
fs
shr
cwtl
mov
inc
dec
fstl
xor
mov
stos
mov
decl
arpl
push
cmc
loopne
adc
adc
incl
icebp
addr16
pop
xchg
bound
ret
cltd
sub
les
push
sbb
jmp
jge
test
iret
lea
jns
sbb
rol
hlt
stc
imul
sbb
mov
out
sub
push
cmc
movb
dec
xor
mov
stos
pop
scas
cmp
iret
push
shll
push
add
fnsetpm(287
inc
mov
push
pushf
jecxz
add
inc
xor
add
cmp
adc
fdecstp
in
xor
ret
inc
xchg
aaa
ljmp
adc
lock
cld
icebp
stos
or
insl
xchg
add
mov
and
push
jo
add
cmp
inc
mov
lcall
xchg
jne
inc
je
movsbl
cmp
ret
loopne
cli
js
mov
fwait
aam
dec
xor
shrl
test
xor
push
call
xor
add
pop
mov
mov
mov
xor
cmp
cltd
push
stc
xor
push
inc
mov
adc
push
xor
add
push
imul
aaa
mov
pop
jae
nop
shr
jp
outsb
movsl
in
sub
lret
jge
cmpsb
addr16
and
xor
mov
fcomip
mov
es
push
cli
adc
fistpll
das
mov
mov
sub
out
lock
pop
xor
addr16
lahf
or
movsl
loope
mov
rcrl
sbb
lret
inc
xor
inc
js
push
jmp
or
call
cltd
mov
outsb
daa
test
push
repnz
add
in
aas
hlt
ja
dec
mov
and
mov
pusha
push
cmovl
arpl
cmp
mov
inc
pop
lret
and
xchg
sbb
add
and
mov
ljmp
jle
sbb
divb
ds
leave
xchg
or
or
cmp
scas
mov
jnp
gs
xlat
xchg
pusha
add
lods
dec
insb
daa
lods
cmpsl
sub
es
push
outsl
pop
and
subl
xor
add
rcll
add
call
fldenv
add
add
xchg
fxch
fiaddl
ret
loopne
cmp
ret
aas
mov
loopne
repnz
repnz
loopne
sub
push
inc
fs
popf
xchg
xchg
adc
mov
cmp
cmp
in
mov
rclb
adc
cmp
inc
pop
adc
dec
cmp
testb
out
lods
and
repnz
add
xchg
movsl
xor
fs
outsl
les
icebp
push
xchg
lods
xchg
xchg
cmp
sbb
sub
shlb
andl
andb
mov
fldcw
andb
cmp
mov
daa
adc
cs
lods
pop
fstpl
fstpl
dec
ss
xor
add
scas
add
xchg
mov
jmp
shld
pop
pop
mov
jno
lock
addr16
jg
jle
das
in
jnp
clc
je
cltd
loopne
mov
mov
repz
xchg
sbb
insl
fsubs
in
push
push
mov
mov
ss
pop
add
jns
and
adc
push
fdivrs
out
xor
ret
ret
enter
pushf
cld
cmp
into
jb
lahf
fs
jecxz
jns
divl
mov
cld
ret
xchg
out
pop
mov
jl
in
mov
mov
ja
adc
ljmp
popa
xchg
mov
dec
aad
jecxz
xor
push
leave
pop
mov
gs
mov
das
add
dec
mov
adc
out
rcll
mov
fbld
repnz
fisttpl
ret
xchg
jp
aad
push
and
dec
repnz
sbb
xor
sarl
out
fs
insb
xchg
pushf
and
loop
inc
adcl
fcompl
loopne
divl
les
fmulp
out
ljmp
mov
xor
popa
pop
imul
adc
dec
shl
shlb
data16
jnp
adc
pop
sub
in
insb
ja
jns
outsb
xor
pop
ret
cld
push
cmc
push
jo
dec
jmp
stos
faddp
aam
and
arpl
nop
mov
jl
mov
out
sbb
fsubrp
das
daa
push
stos
jmp
addr16
out
jno
pop
dec
loop
fdivr
hlt
in
push
movsb
call
roll
mov
xchg
push
aad
push
and
jle
cmp
andl
movsb
std
out
and
or
pop
shrb
pop
scas
lret
push
cli
pop
dec
jge
xor
lahf
push
inc
pop
or
bound
ss
xchg
je
or
jo
xor
or
das
and
jno
lahf
mov
clc
push
movsb
sub
add
arpl
mov
pop
or
or
jo
decl
test
adc
jns
outsl
aaa
loope
shrl
mov
xchg
mov
out
and
and
and
mov
fiaddl
jle
sbb
rclb
imul
sub
loope
cmc
and
push
sbb
loope
roll
add
popa
dec
out
sti
pop
sti
mov
call
in
xchg
mov
out
lret
cs
push
sub
pop
in
push
cld
xor
adcl
je
stos
cmc
ret
cmp
push
test
sbb
mov
lods
popf
jno
add
jp
adc
out
inc
jl
sub
aaa
into
loop
adc
cmp
xor
adc
or
jno
ja
push
jo
lahf
sub
rcrb
xchg
xor
sbb
jg
ljmp
or
xor
sbb
pop
nop
push
das
fcoms
andl
negl
xchg
aas
push
jge
out
insl
and
inc
xchg
fisubrs
stos
cltd
daa
outsb
push
sbb
sbb
test
inc
je,pn
aaa
push
int
cld
shrb
sub
inc
stos
mov
ficomps
jmp
lods
nop
iret
adc
sbb
push
push
mov
test
sbb
sub
mov
cmpsl
push
stos
dec
jg
add
add
or
jmp
xchg
gs
aad
jmp
xchg
fs
jecxz
int3
dec
arpl
mov
lea
leave
and
movsl
mov
inc
addl
fnstsw
mov
in
in
jl
push
dec
pop
jle
dec
push
mov
sahf
mov
jp
js
add
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
xor
andl
inc
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jle
jmp
call
cmpl
jb
movl
push
adc
movl
subl
mov
push
mov
adcl
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
orl
add
andl
mov
mov
addl
test
movl
je
movl
cmpl
je
cmpl
jle
jmp
push
call
mov
dec
mov
jmp
mov
sbb
mov
addl
mov
mov
xor
xor
add
and
mov
mov
and
xor
mov
and
mov
add
sbb
mov
mov
xor
mov
or
mov
add
or
mov
orl
mov
xor
mov
xor
mov
add
mov
sub
sbbl
lea
xor
xorl
xor
movl
cmp
movl
je
xorl
mov
subl
xor
adcl
add
cmp
movl
jne
pushl
call
mov
not
mov
adcl
mov
addl
xor
add
movl
cmp
movl
je
pushl
sbbl
pushl
call
mov
xor
mov
xor
mov
xor
add
movl
cmp
movl
je
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
call
jmp
mov
add
sbbl
mov
mov
mov
sbbl
add
orl
mov
jmp
push
mov
andb
test
sbb
call
jae
ret
notl
addl
push
pusha
xchg
mov
xor
scas
stos
lahf
imul
mov
dec
mov
jae
aaa
mov
aaa
out
push
bound
rcrl
jnp
repnz
or
push
or
enter
or
lods
sbb
and
aad
lds
xor
movsb
add
mov
jae
mov
cmp
mov
lods
cltd
sub
sub
mov
loopne
jmp
imul
insb
fdivl
ud0
mov
int3
outsb
jns
lock
cmpsl
xor
or
jp
or
add
mov
hlt
sub
mov
adc
and
pop
xor
scas
sub
idivl
fnstsw
mov
mov
push
push
je
inc
imul
adc
nop
in
movsb
icebp
mov
faddp
cmp
fsubl
push
popf
dec
inc
sub
shll
xlat
adcb
push
out
nop
or
jle
dec
add
lock
dec
inc
scas
aaa
mov
out
test
shll
jl
rol
in
xchg
adc
mov
push
jle
sub
add
mov
imul
fnsave
and
outsb
rcrl
dec
xchg
jg
popf
and
or
xchg
pop
hlt
lds
stc
out
mov
lock
cwtl
jg
cmp
sbb
dec
sub
insl
pushf
sbb
xchg
push
mov
jle,pt
mov
lret
mov
loope
pop
test
out
pop
add
push
rolb
inc
jno
mov
adc
mov
js
daa
adc
pop
dec
jle
and
pop
call
add
xchg
add
shrl
test
fidivl
adc
jle
mov
and
out
mov
pusha
adc
ja
stos
push
sub
pop
mov
icebp
push
out
or
cmp
out
nop
rorl
or
mov
or
xor
dec
popf
pop
push
out
cmc
pop
cli
in
sbb
inc
popa
cmpsb
into
les
xchg
imul
scas
push
sbb
push
rorb
pusha
sbb
push
outsb
lret
sbb
fdivrl
das
and
push
jp
fstpt
adcl
push
cmpsl
mov
pop
lahf
adc
aaa
xor
mov
jnp
nop
pop
jge
rorb
push
or
sub
jno
pop
sahf
ss
adc
insb
dec
cmp
pop
lds
dec
mov
outsb
dec
mov
jl
testl
in
rol
cli
cmp
call
clc
ret
ds
cmp
xchg
icebp
mov
dec
fdivl
add
mov
icebp
jl
ds
push
xchg
jnp
mov
add
push
or
and
xchg
aas
xor
sbb
pop
outsb
mov
jmp
addr16
fisttpl
pop
jl
sub
adc
lahf
cmp
andb
sarl
pop
pop
and
adc
je
fisttpll
lsl
jns
add
jmp
fldl
pop
sbb
add
shll
cmp
add
or
cmp
clc
adc
push
lcall
jae
popa
ljmp
cmp
xor
adc
mov
divb
push
ret
pop
dec
cmp
sbb
in
inc
inc
mov
incl
int3
icebp
in
js
cltd
cmp
mov
imul
xlat
ret
add
jo
xlat
adc
movsl
sbb
pop
loope
push
sbbl
sub
add
test
jge
stos
pop
orb
adc
insb
das
sbb
and
mov
jecxz
test
in
stos
pop
sti
mov
cmp
jp
fsubrp
adc
inc
test
or
inc
test
and
mov
loopne
loop
sbb
adc
jg
xor
stos
inc
dec
cmp
pop
imul
imul
mov
fisubrs
jno
lret
inc
or
pop
or
ljmp
push
je
mov
xchg
scas
pop
mov
mov
pop
pop
adc
ret
mov
or
mov
lret
das
jnp
push
les
mov
js
cmp
sub
mov
pop
mov
xchg
xchg
inc
or
jle
dec
testb
ds
mov
push
repz
inc
xor
fwait
dec
dec
inc
dec
mov
add
inc
clc
add
pop
and
sbb
mov
nop
jnp
in
jle
imul
fildl
and
dec
mov
lods
je
adc
cmp
jmp
adc
ss
nop
jp
sbbb
sbb
ret
loopne
or
outsl
insb
mov
dec
das
movsl
fs
test
push
cmp
movsb
and
lods
dec
xor
cmc
pop
add
cmp
add
scas
ljmp
fdivrl
jae
lods
adc
jnp
pop
inc
addr16
insb
ljmp
mov
arpl
arpl
cmpsl
nop
shlb
shll
push
shrl
jp
fistl
xchg
xchg
hlt
lock
pop
insl
xlat
inc
cmc
dec
mov
fisubrs
jl
cmp
sbb
mov
mov
ret
in
outsb
and
lret
xchg
xchg
and
cmpsl
add
ret
cmp
nop
dec
push
orl
outsl
scas
adc
shrl
rolb
mov
pop
out
hlt
mov
mov
out
xchg
cmc
outsb
shlb
xor
pop
cmpsb
frstpm(287
cmp
insl
xor
fs
pop
cs
xorl
mov
xor
outsb
arpl
dec
addr16
xchg
mov
not
dec
mov
push
and
inc
xchg
imul
dec
sbb
inc
pop
cmc
pop
js
jnp,pt
je
ret
sub
insl
lock
push
andb
push
je
jge
in
mov
inc
mov
mov
pop
add
flds
inc
imul
xchg
pop
scas
lods
or
addr16
ret
and
pop
xchg
mov
and
ja
cmc
mov
mov
sbb
sub
aas
mov
aas
and
pop
pop
int3
scas
jb
pop
pop
movsl
dec
add
cmp
fs
push
jno
xchg
fwait
push
jg
movsb
inc
push
inc
jmp
push
cmp
sahf
mov
cmp
sbb
or
imul
stos
incb
cmp
mov
xchg
xor
into
nop
adc
add
push
pop
stos
or
ljmp
test
loop
icebp
xor
jg
push
lods
dec
mov
test
stos
xchg
pop
mov
mov
mov
sub
call
shr
jbe
ret
cli
test
icebp
lods
js
lahf
inc
nop
ret
jl
inc
cmpsl
lea
and
stos
aam
stos
loop
je
fldcw
sbb
mov
xor
push
mov
dec
pop
sbb
movsl
adc
dec
inc
jbe
ret
push
sbb
stos
xchg
insl
and
xor
sbb
jne
add
mov
sti
dec
sub
shrb
inc
push
stos
or
sub
dec
js
lret
leave
xor
fisttpll
std
and
shrb
test
cmpsb
push
sar
and
inc
or
mov
or
je
aas
adc
repz
pushf
cli
jne
call
test
loope
add
cli
lahf
adc
adc
test
lcall
divl
jg
clc
xlat
les
orb
and
popf
test
mov
mov
ficoms
xor
pop
adc
sub
mov
dec
cmp
cwtl
or
add
mov
cltd
test
jmp
cmp
adc
test
movsl
adc
jecxz
sarl
je
and
jo
mov
scas
ret
xchg
addr16
call
pop
mov
sub
cmp
mov
mov
fldl2e
scas
cwtl
out
lds
xor
pop
cmp
sbb
dec
adc
movsl
dec
lea
mov
jecxz
adc
orl
and
sub
or
rorl
jns
xchg
fbld
sub
test
push
mov
push
xor
mov
pop
lcall
ror
mov
xchg
dec
dec
mov
xor
dec
rorl
mov
cmpsb
lea
into
mov
movsb
mov
dec
inc
fsts
mov
daa
fmuls
mov
out
jmp
fs
in
imul
data16
push
out
jge
pop
ss
test
iret
addr16
and
adc
mov
jmp
popf
nop
mov
cmp
xchg
out
xor
mov
cmp
push
push
test
fnsave
in
pusha
inc
or
lahf
test
dec
das
inc
lret
int3
xchg
push
scas
pop
push
mov
mov
iret
mov
adc
pop
dec
mov
out
popa
cmc
push
inc
daa
inc
sbb
popf
loope
out
testl
out
push
test
out
cmp
cmp
in
gs
adc
mov
mov
xor
or
push
fwait
ret
adc
sub
lret
xchg
push
cmpsb
shll
sub
jl
repz
push
sahf
sub
je
iret
data16
dec
daa
rcrb
cmc
shll
mov
std
sbb
fs
out
fs
inc
inc
push
call
sbb
movsl
lock
push
shrl
cmp
enter
shll
xor
cld
das
xor
es
test
repnz
mov
mov
mov
shlb
pushf
lahf
sbb
mov
push
sbb
jge
and
sbb
or
stc
shl
push
push
push
in
add
cmc
call
mov
dec
test
loopne
push
jl
xchg
pushf
ja
lret
sub
leave
push
and
mov
xchg
rorb
inc
scas
sub
mov
pop
jl
xor
cwtl
xchg
sahf
fwait
or
dec
pop
push
xchg
lcall
mov
lea
dec
sarb
fcmovnbe
mov
inc
adc
lea
xchg
rcr
scas
jne
or
popa
mov
inc
pop
int3
scas
pop
inc
inc
adc
push
jmp
lea
cmpsl
fstl
pop
adc
xor
pop
bound
stos
xor
add
add
cwtl
imul
shll
sub
pushf
or
dec
jb
pop
mov
mov
enter
aam
xor
inc
test
outsl
sar
jmp
mov
out
ss
jne
test
cmc
fwait
pop
sbb
dec
aad
xlat
mov
push
les
push
xchg
adc
xchg
push
xor
adc
xlat
mov
jns
movsb
and
add
or
out
popa
pop
pop
lods
push
nop
divb
push
pop
sar
mov
mov
mov
cmpsb
cvtps2pd
push
jne
das
xor
gs
lahf
addb
lods
xor
mov
fadd
js
stc
out
xchg
mov
pusha
fstpt
add
pop
out
inc
adcb
test
int3
or
sarb
push
inc
lcall
and
xor
stc
mov
int
in
add
jl
or
push
xor
ret
shrl
mov
leave
dec
and
inc
adc
adc
fidivrs
loope
cmp
cmp
aam
data16
cs
xchg
inc
or
gs
add
inc
dec
fistps
addr16
add
sbb
and
loopne
jo
xor
xchg
pop
pop
jp
or
in
jle
rorb
cmp
push
xor
pop
rep
and
test
cld
dec
jns
sub
popa
adcl
out
mov
rcll
adc
and
mov
cwtl
pusha
dec
cmp
sub
pushf
ret
gs
es
mov
pop
test
sub
pop
push
pop
adc
xor
fcomps
aas
jne
ds
cmpsb
icebp
std
cli
mov
lret
ja
fildl
out
cli
cmpsl
notb
jmp
lahf
hlt
pop
repz
int
sti
xchg
pop
mov
push
mov
sarl
mov
push
rcrl
push
adc
pushl
sbb
and
mov
leave
fidivl
in
dec
lret
loop
out
mov
pop
sbb
pop
jbe
cli
clc
sub
sbb
fcmovnb
pop
ljmp
pop
jb
xchg
jle
shlb
pop
xlat
add
pop
push
roll
fwait
ss
push
mov
outsl
sbb
in
in
and
mov
iret
xchg
sti
repnz
adc
xchg
jo
cmp
push
xchg
jne
test
cwtl
jl
mov
xor
mov
push
inc
ficomps
inc
fistl
mov
jp
cltd
mov
or
mov
jmp
aad
and
xchg
mov
fsubp
xor
insl
icebp
dec
cltd
roll
inc
stos
cmpb
and
xchg
aam
mov
fisttpll
lret
mov
or
or
rclb
inc
subb
sub
enter
aam
push
test
add
test
mov
enter
out
adc
cli
adc
js
nop
idivl
sahf
cmpsl
repnz
sub
and
xchg
sub
push
sti
pop
or
mov
push
fistps
roll
mov
lea
mov
shlb
repz
jl
jb
inc
insb
rorl
sub
loop
xlat
dec
sub
hlt
in
pop
ss
xchg
mov
mov
leave
lods
stos
adc
xor
sub
pop
js
push
leave
lea
jae
mov
add
and
in
mov
cmp
sub
mov
mov
push
or
sbb
push
push
stos
loope
or
fwait
jb
adc
fstpt
cmpsb
test
mov
ret
xor
jne
in
mov
stc
jg
push
and
or
add
and
dec
mov
lods
pop
mov
dec
mov
mov
push
sub
in
sub
outsb
mov
scas
push
in
cmp
cmp
in
fxch
xchg
xchg
xor
js
adcb
negl
push
movsl
add
push
xlat
pop
ljmp
mov
push
int
xlat
flds
mov
mov
push
sahf
pop
cmp
movsl
nop
aaa
pop
push
xlat
push
movsl
sub
jbe
ret
movsl
jmp
mov
testl
mov
xor
push
mov
pop
xchg
push
pop
mov
in
adc
cmpsb
mov
jmp
aaa
cmp
mov
cli
int
mov
aam
cmc
xor
pusha
jnp
push
cmp
bswap
mov
sbb
insb
out
cmp
ret
es
fwait
aas
outsb
stc
mov
ljmp
in
lods
mov
daa
push
pop
sbb
sub
mov
add
jg
jno
add
lret
push
push
ljmp
add
pushf
aas
fmull
aam
add
ret
mov
das
fsubr
inc
or
outsl
sbb
sub
movsb
outsb
jg
sbb
cmp
sub
and
jbe
inc
pop
iret
sbb
call
icebp
sub
insb
subb
cmpsl
sbb
js
jne
dec
mov
jbe
mov
push
sub
xchg
mov
nop
cmp
pop
ret
push
call
clc
push
leave
add
pop
mov
fimuls
push
dec
jae
movsl
sbbl
adc
scas
adc
mov
int3
mov
lahf
lds
or
or
stos
gs
sub
shll
push
jge
pop
xchg
sbb
cmp
or
in
xchg
icebp
imul
sbbb
sub
and
and
sub
push
inc
or
nop
adc
ret
rorl
xchg
mov
lods
mov
sub
cwtl
jae
aam
mov
scas
push
adc
sub
cltd
cmp
sbb
adc
enter
lcall
mov
jmp
mov
add
xor
or
sahf
aas
jp
push
add
and
fs
adc
jp
stos
roll
out
clc
mov
and
jecxz
or
stos
mov
je
push
lods
lcall
loopne
clc
popf
cwtl
xor
sub
sbb
mov
bound
mov
xchg
push
fiaddl
xchg
repz
cmp
outsb
fldt
mov
cli
movsb
cltd
mov
sbb
shrl
cmp
notl
cmp
cmc
xor
or
dec
fmuls
out
ja
dec
jb
in
test
leave
xor
les
push
lods
cltd
pop
jbe
jbe
add
xchg
ror
dec
and
cs
sub
or
popf
ret
je
aaa
shr
jb
lahf
call
std
pop
jnp
dec
cld
shlb
sarb
sub
adc
in
shl
jle
lods
mov
arpl
and
fistpl
mov
cwtl
rolb
xchg
lods
mov
fdivl
sub
or
pushf
sub
sbbl
jecxz
sbb
xor
mov
rcrl
sub
mov
data16
in
movsb
sahf
jno
push
in
sub
gs
pop
je
clc
ficoml
xor
imull
lock
imul
jl
mov
ljmp
or
sbb
loopne
xchg
mov
mov
mov
popa
and
sbb
jo
push
shl
data16
addb
lret
js
push
mov
mov
push
sbb
in
mov
sub
std
jb
es
lret
daa
aaa
inc
lods
add
pop
iret
aad
fdivrl
retw
ja
add
dec
sbb
cmp
daa
sbb
jbe
or
or
add
dec
jp
xlat
cmpsb
ljmp
ficomps
bnd
and
daa
mov
mov
xchg
or
mov
cmpb
inc
int3
mov
pop
or
jne
mov
negb
cltd
into
sbb
jns
xor
loope
insl
xchg
sarb
addr16
loop
inc
sub
inc
rcll
into
stos
iret
push
xchg
cmp
das
stos
out
mov
fwait
add
out
testb
jp
jg
pop
fidivs
stos
mov
jecxz
ljmp
pop
fnstsw
call
pop
addr16
lods
sub
fstps
xchg
fwait
mov
xor
push
adc
inc
sbb
sbb
test
cltd
xchg
xor
movsb
mov
insl
push
mov
loop
xchg
in
sbb
dec
mov
in
loope
loopne
or
jne
not
adc
adc
add
mov
mov
mov
xchg
pop
stos
mov
jnp
bound
add
ret
dec
out
push
out
sbb
mov
daa
push
xor
xchg
dec
clc
enter
lret
push
push
push
or
dec
pop
sbb
jmp
add
mov
rorl
or
pop
pop
pop
push
inc
pop
or
or
inc
xchg
aas
pop
out
mov
movsb
pop
mov
cmp
es
sahf
js
mov
mov
dec
mov
cltd
jbe
out
and
sbb
or
orb
xor
mov
sub
shufps
mov
jnp
lretw
popa
test
aas
data16
cltd
jge
repnz
mov
into
jnp
sarb
pcmpeqw
pop
pop
loope
and
adc
out
push
mov
ja
mov
and
hlt
repnz
adc
ds
sbb
bnd
inc
jl
aaa
shlb
xchg
sub
dec
lods
push
fst
clc
sub
nop
test
divb
aad
aam
or
lret
out
mov
sbb
push
sub
and
mov
pop
sub
aaa
pop
push
scas
fs
pop
adc
rclb
int
lahf
aas
je
cmp
out
in
daa
ret
mov
mov
cmp
xchg
ret
lds
mov
mov
movsb
xchg
sbb
xor
sbb
hlt
jno
dec
test
jo
loopne
mov
pusha
out
or
fstl
lret
xchg
loop
xchg
ror
addr16
jmp
imul
adc
dec
lock
inc
pop
fdiv
iret
out
jecxz
mov
fiadds
or
repz
das
sarb
addl
mov
dec
je
cmpsb
fs
mov
es
jae
xchg
xchg
stos
pusha
scas
xchg
dec
rcl
frstor
push
scas
add
or
aam
std
jmp
pop
mov
or
sbb
addr16
aas
cld
outsb
loopne
pop
xchg
add
enter
sbb
gs
mov
in
cmp
data16
lds
enter
lock
dec
imul
inc
dec
cmp
scas
lret
in
mov
pop
movsb
ret
push
mov
jae
jmp
rcrb
pop
mov
roll
leave
data16
xor
mov
dec
pop
lods
mov
sbb
pop
cmp
outsl
ret
mov
pusha
pop
jae
imul
pop
xor
pop
fsubrl
mov
mov
sarl
cli
stos
scas
rcl
xchg
leave
inc
sbb
xchg
fwait
sub
idivb
shl
inc
xor
stos
je
cmc
or
call
inc
in
in
jg
lret
inc
pusha
or
out
mov
into
bound
in
repz
lock
dec
pusha
dec
fpatan
pop
fwait
mov
js
inc
jmp
mov
jae
rolb
dec
mov
cwtl
repz
jl
jmp
fmulp
pushf
mov
dec
mov
jle
xrelease
bound
pop
das
cmp
mov
fadds
fnstenv
inc
jl
dec
sbb
cmp
sub
out
cmpsb
lret
xchg
mov
pop
lcall
adc
ja
or
dec
cs
push
test
subl
addr16
pop
arpl
xor
bound
jg
xchg
dec
sub
mov
fistpll
stos
sub
aaa
cmp
xor
movb
repz
fwait
imul
sbb
sahf
dec
aam
and
mov
lds
out
xor
mov
lods
sbb
in
notl
pop
pop
addl
pop
popf
sti
ja
and
shrl
pop
pop
orb
mov
mov
jecxz
pop
pusha
or
pop
or
cltd
adcl
or
cmpsb
inc
cmpsb
cltd
sub
sub
and
cmp
test
adcl
dec
icebp
and
stos
push
jne
das
xor
mov
push
imul
mov
das
orb
popf
push
outsb
pop
daa
push
hlt
cmc
les
stos
stc
cmpsl
fsts
subl
inc
outsl
cmp
adc
cmp
fidivrs
repz
adc
dec
cmc
scas
imul
pop
push
push
dec
scas
idivb
sbb
lea
mov
mov
cmp
insb
leave
fs
fwait
push
lods
mov
fucomp
sub
fcoms
insl
fsubr
mov
leave
and
shrb
lret
testl
or
lea
fwait
sahf
jns
inc
test
insl
jge
adc
mov
sub
test
aas
inc
xor
pusha
dec
movsb
repz
enter
dec
rcrb
cmpsb
icebp
add
inc
dec
popa
dec
dec
jno
jae
stc
dec
inc
jae
lods
sub
ja
hlt
repnz
dec
repz
jbe
popf
aad
es
jmp
inc
fidivl
jmp
inc
fldenv
or
icebp
js
dec
mov
aam
fstpt
ljmp
sbb
data16
call
lds
nop
filds
lret
mov
jl
sbb
in
insb
push
ds
xchg
dec
loopne
pop
lret
shlb
or
mov
adc
mov
sub
pop
sub
push
mov
mov
mov
out
loop
scas
lret
incb
inc
ljmp
int3
fst
xchg
jge
sbbb
jg
rorb
mov
push
jmp
jecxz
xchg
clc
add
xchg
and
lret
push
xchg
mov
lods
jp
insb
sub
xchg
sbb
jnp
xor
pop
adc
sbb
cwtl
cli
movsb
mov
nop
clc
xor
pop
inc
lods
add
sub
int
call
xor
add
scas
mov
cmpsb
lock
and
jbe
out
lods
lahf
mov
and
in
push
adc
mov
imul
mov
pop
add
add
mov
push
mov
xchg
lods
mov
or
dec
notb
ja
orl
es
jbe
lds
cwtl
dec
mov
push
lods
pushf
in
clc
xor
sti
xchg
cmp
ret
lahf
pop
jmp
pop
sbb
arpl
jno
leave
shrl
add
or
or
jl
mov
adc
ja
mov
out
bound
jecxz
xorb
outsb
pop
push
jo
cmp
add
rcrl
data16
shl
push
pop
xor
push
pop
push
mov
jg
jnp
inc
adc
jge
pop
dec
in
jbe
loopne
xor
pop
dec
and
inc
xchg
notb
mov
lock
xchg
cs
je
sub
jg
push
stc
xchg
lock
cs
testb
and
jne
data16
dec
test
iret
pushf
mov
mov
flds
je
mov
jg
cltd
stos
daa
insl
or
pop
pop
cmpsl
adcb
pop
jle
cltd
xor
loopne
loope
or
pushf
repz
sub
outsb
daa
push
jne
sti
mov
sbb
pop
push
mov
scas
dec
sbb
jo
inc
in
mov
out
fcoml
jbe
andb
cmp
cwtl
sub
push
jae
mov
aad
mov
sbbl
adc
enter
in
sbb
repnz
sahf
cltd
pop
mov
push
mov
test
xchg
jp
cmpsb
jbe
out
cld
or
mov
fwait
mov
sbb
lret
aam
mov
scas
and
mov
sub
loop
adc
out
jnp
fisttps
sbb
jecxz
rolb
xchg
add
addb
das
fidivrs
sbb
adc
dec
push
leave
mov
pushaw
lea
add
mov
push
inc
dec
test
xchg
xor
push
gs
sti
push
cld
adc
dec
and
and
push
addb
cmp
xor
xor
leave
scas
rorl
andb
scas
dec
push
sbb
mov
xchg
sbb
out
mov
aas
mov
out
jo
insb
cmc
xor
dec
sbbb
sarb
push
dec
scas
sub
jmp
push
lods
xor
inc
cmp
add
insb
xor
pop
lea
add
inc
int3
or
loope
loop
xchg
cmp
test
js
popf
dec
das
shlb
fldt
ss
adc
lea
sub
lods
cmpsl
gs
pop
stc
mov
aam
mov
iret
dec
mov
pop
adc
inc
or
jg
xor
lahf
cli
lods
movsb
xor
xor
popf
jno
in
fs
incb
push
push
cld
fmulp
inc
in
mov
out
testw
das
xor
pop
fcomi
xchg
fwait
mov
jp
insb
or
cmp
push
xlat
popf
cmovo
ret
data16
cltd
out
sbb
lods
arpl
sub
jmp
addr16
push
mov
int
push
add
icebp
rorb
pop
sbb
mov
inc
sub
dec
inc
xchg
incl
arpl
jns
sti
ljmp
pusha
mov
sbbb
and
hlt
dec
xchg
enter
push
inc
xor
xor
push
scas
in
sbb
popf
or
outsb
push
test
aam
cmc
into
es
mov
push
inc
push
int
leave
das
hlt
dec
sub
xchg
pop
jnp
jmp
insl
adc
push
in
lcall
sbb
movsl
add
std
mov
or
mov
inc
aad
stos
subb
cmp
repnz
jns
stc
ret
xorb
mov
add
inc
lods
movsb
jmp
lea
xchg
xchg
dec
pop
mov
dec
cmpsl
aas
pop
lds
pop
push
adc
cmc
push
into
outsb
rcrl
stos
mov
inc
and
ljmp
gs
inc
into
lods
mov
sub
jge
sbb
leave
sbb
sub
push
repnz
jmp
and
loop
icebp
mov
mov
das
or
dec
dec
js
cld
mov
mov
pusha
rorl
stc
mov
rcr
fildl
mov
out
outsl
jl
xchg
mov
xchg
pop
cld
shr
lcall
int3
push
push
lahf
mov
jmp
or
jmp
aad
mov
mov
fstpl
jl
push
inc
cld
out
adcb
sub
sbb
cmp
xor
lahf
ljmp
movntps
dec
pop
xchg
jecxz
ss
or
loope
xlat
js
push
push
jmp
pop
pop
loope
repz
fidivrs
inc
popa
add
push
stos
push
lods
xchg
subb
aaa
inc
jo
xor
rcrl
fcoml
push
or
notl
add
jle
jl
stc
pop
mov
test
push
outsb
sbb
mov
fisubs
mov
test
pop
loop
test
imul
repnz
jecxz
pop
clc
das
gs
outsl
ficoms
lahf
inc
jne
in
pushf
stos
inc
mov
xchg
dec
enter
popf
outsb
cli
mov
outsb
fists
xor
fs
jns
jle
out
daa
sbb
xor
loop
ljmp
dec
jne
fwait
pop
ss
cmp
in
stc
cmp
rorl
imul
mov
cmp
arpl
gs
fldl
jns
pop
xchg
inc
jg
and
mov
fisttps
scas
mov
les
jno
mov
std
push
gs
and
lret
stos
adc
mov
and
insl
enter
pushf
mov
jl
shlb
or
push
popa
mov
mov
and
mov
inc
jae
addr16
inc
pop
adc
scas
push
push
xor
jp
and
cmp
dec
add
icebp
push
sbb
adc
mov
sbb
push
jno
cmp
push
lock
jo
outsl
push
and
ja
push
jbe
leave
mov
shlb
pop
fsqrt
mov
jecxz
jge
out
fcoms
mov
sub
movsb
push
lret
add
mov
mov
inc
adc
jge
xor
sub
mov
out
jns
subb
mov
xchg
xchg
push
push
std
outsb
testb
cli
xchg
xchg
add
divl
inc
cmc
dec
aas
ds
addl
sti
mov
rolb
pop
mov
aaa
inc
sbb
sbb
loopne
in
das
subl
idiv
mov
dec
push
hlt
or
add
not
xor
jmp
fneni(8087
jmp
fists
pop
xchg
fists
xchg
push
stos
es
repnz
scas
repnz
test
sbb
jnp
outsb
sub
lods
pusha
inc
cld
dec
adc
fdivrs
cmp
ret
xchg
call
inc
je
push
cmp
pushf
dec
mov
imul
cmpsb
lret
in
movzwl
or
mov
add
mov
movl
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
xor
mov
xor
jmp
add
cld
sbb
nop
andb
push
sub
addl
xchg
and
inc
insb
pop
cld
mov
gs
cltd
in
adc
sub
gs
xor
xor
pop
cmp
loopne
mov
int3
xor
cmp
xchg
nop
ret
aaa
hlt
movl
shlb
pop
xor
lcall
add
movsb
inc
popa
cs
out
xlat
in
jb
out
or
adc
es
int
mov
jmp
insl
push
cltd
cmpl
mov
dec
pusha
push
mov
lret
jne
lret
mov
and
ficomps
or
insb
jg
mov
bound
clc
outsb
stc
les
xchg
in
mov
and
std
out
test
pop
cmpb
pop
push
mov
loopne
lcall
adc
loope
sti
mov
bound
push
mov
jg
and
out
aad
push
push
and
lahf
ret
xchg
ja
mov
lock
out
jg
sbb
shlb
popa
push
xchg
sbb
test
jg
and
sub
shl
fisubrs
cltd
add
push
shlb
cmp
lods
xor
push
test
movntps
xor
sti
lock
movsb
and
sahf
scas
mov
cmc
xchg
sub
mov
fwait
scas
dec
lret
shlb
pop
mov
mov
xlat
imul
fwait
mov
mov
sub
cmpsl
pop
mov
lock
push
adc
pop
sub
ror
fldenv
icebp
sbbl
inc
lret
aad
cli
pushf
dec
inc
push
pop
iretw
repz
mov
sub
in
mov
xchg
mov
mov
stos
xchg
jge
mov
fstp
cli
cmc
jg
repz
and
inc
xor
xor
daa
mov
out
pop
cmp
lods
scas
fsubrp
pop
jmp
or
pop
add
daa
cmp
sbb
xor
jecxz
jb
or
icebp
mov
mov
pop
fists
cmp
out
pushf
or
cmp
outsb
je
xchg
pop
xchg
jo
addr16
mov
mov
push
xor
mov
xchg
divl
xor
mov
pop
movb
xor
push
lods
inc
mov
mov
jmp
jae
sbb
jb
mov
or
movsl
gs
leave
cmp
loope
push
fcoml
sub
cs
mov
lret
pop
lock
mov
mov
fiadds
xchg
xor
fmuls
xchg
cmc
cmp
jl
sbb
xchg
push
xchg
sahf
inc
add
insb
mov
ret
adc
aam
pop
xchg
or
cli
inc
loop
rep
pop
fnstenv
push
push
xor
jecxz
mov
xchg
inc
shlb
lods
fdivrl
mov
sub
js
push
pop
sub
rcrl
xchg
je
jp
and
xlat
out
nop
stos
lock
mov
bound
cmpsl
ja
aaa
fcmovbe
inc
inc
push
sub
cmp
dec
mov
or
sub
ja
cli
gs
pop
stos
imul
jo
lahf
add
cmp
sti
popa
dec
and
test
xchg
sub
cmp
pop
seto
aaa
test
popf
xchg
xlat
jno
das
imul
imul
stc
pop
xor
mov
sbb
je
in
mov
out
lods
aam
mov
jge,pt
fcmovbe
mov
cmpl
inc
and
dec
pop
fcmovnu
pop
add
pushf
lods
sbb
scas
mov
lahf
sub
dec
mov
sahf
scas
push
inc
sbb
jne
mov
jns
popf
out
push
popf
add
bound
push
outsb
mov
enter
dec
out
inc
adc
and
cmp
push
negl
cltd
sarl
pop
jns
dec
add
inc
out
dec
xlat
xchg
xor
dec
adc
xor
sahf
repnz
jns
shlb
xchg
cmp
add
js
repnz
repz
lcall
mov
add
pop
imul
jge
push
dec
dec
shl
in
sbb
xor
xlat
cwtl
shl
mov
mov
test
sub
jp
dec
sub
adc
and
xchg
or
jbe
scas
or
jecxz
addr16
pop
xchg
stos
stos
xor
push
loope
sahf
cmp
in
lea
fadds
jae,pt
movsb
imul
into
testl
imul
aam
les
sub
xchg
jle
adc
jb
and
mov
les
or
ret
xor
lcall
mov
pushf
mov
je
mov
cmp
jne
xchg
adc
cmp
mov
enter
dec
iret
cmp
mov
hlt
xor
mov
push
nop
and
out
dec
pop
lds
leave
jle
xchg
imul
imul
inc
dec
pop
out
xchg
push
xor
lods
mov
out
mov
fdivrs
xchg
mov
mov
fcoms
repnz
roll
fists
xorl
cmp
outsl
sub
mov
stc
pop
dec
or
fbstp
pop
cs
lods
mov
test
inc
imul
popa
add
test
pusha
push
shlb
daa
jb
test
jbe
inc
in
outsb
shll
jl
push
repz
in
push
cmp
cmpsl
dec
mov
test
mov
mov
mov
inc
xchg
lds
jp
out
dec
inc
inc
dec
retw
pop
loopne
sti
add
ja
aad
mov
popf
add
lea
add
out
scas
lahf
aad
push
insl
fsubrl
dec
cli
mov
cwtl
iret
scas
cli
inc
outsl
bound
mov
es
mov
xchg
xchg
jg
sbb
cmpsb
lea
sbb
add
adc
imul
sub
jmp
sbb
jp
dec
jns
jp
pop
int
fucomi
cmp
loopne
lret
pop
enter
out
push
filds
int3
ds
data16
pop
xchg
mov
cmp
lods
xor
add
out
test
std
adc
std
imul
add
decb
data16
leave
push
dec
adc
mov
loop
cmpsl
adc
sti
cmc
inc
xor
or
add
jmp
mov
outsl
arpl
leave
imul
sti
leave
lret
out
fisttpll
jne
jp
pushl
stos
addl
push
jg
jb
sbbl
sub
push
dec
dec
fdivl
adc
pushf
fstps
inc
bound
fwait
pushfw
lock
or
rolb
andb
pop
icebp
data16
mov
jns
pop
incb
clc
cltd
mov
and
testl
pop
mov
adc
fsts
loope
test
inc
call
sub
xor
addb
xchg
push
adc
insb
or
into
mov
test
and
and
lret
mov
and
in
aam
mov
pop
nop
cmpsl
daa
pop
jge
mov
xchg
movsb
repz
xchg
out
stc
aas
cmc
push
mov
jg
icebp
jmp
pop
jle
out
dec
cltd
jecxz
jb
dec
pusha
mulb
nop
pop
iret
cmpsb
xchg
mov
popa
iret
lea
rolb
inc
xor
mov
push
testb
fdivs
orl
pop
daa
sbb
adc
mov
and
or
cmp
or
sbb
or
xor
adc
xor
or
ret
hlt
jb
lods
jge
arpl
cmp
push
flds
out
mov
cmpsb
in
pop
pop
xor
int3
mov
faddl
mov
dec
movsb
sbb
mov
daa
adc
mov
insl
daa
popl
jp
test
xlat
les
mov
jg
jp
add
je
lahf
insl
xchg
icebp
dec
inc
push
out
mov
xlat
sub
test
mov
into
push
lods
push
scas
in
jbe
push
mov
xor
mov
pop
sub
mov
mov
ret
or
or
in
add
movsb
test
pop
pop
add
dec
daa
xchg
xlat
fs
pop
or
out
test
xor
mov
in
sub
lret
mov
inc
aas
loope
in
dec
sti
xchg
neg
leave
movsl
push
xor
push
push
out
push
mov
out
cmp
stc
cltd
jnp
lods
int3
adc
pop
or
xchg
mov
lahf
psubw
sub
sub
jp
cld
xor
pushf
arpl
mov
fnstenv
ret
pop
insb
jge
imul
clc
jp
hlt
mov
popl
cmpsb
xchg
adcb
fcomp
xor
cmc
outsb
pop
ja
sbb
stos
jecxz
pop
pop
movsl
pop
nop
in
out
in
packssdw
cmp
or
sub
aaa
push
xor
adc
add
jnp
nop
jne
mov
pop
fnstcw
push
jmp
add
ret
sub
data16
outsb
jo
gs
pushf
ret
pop
lods
pushf
shrl
in
je
sbb
and
inc
mov
sub
adc
call
mov
pusha
xlat
movsl
cld
add
pop
enter
pusha
push
xlat
sbb
leave
mov
push
int
dec
xor
xchg
jns
ret
fsubrp
jne
jge
in
call
inc
mov
inc
sbb
cld
mov
ss
pushf
mov
inc
dec
cmp
testb
push
lret
pusha
jnp
jg
pop
shl
cmpsb
cmc
add
in
imul
test
in
push
imul
mov
mov
stos
jp
sbb
aas
push
add
scas
pcmpgtd
sub
cmp
xor
add
or
stos
and
mov
sub
rcrb
daa
lahf
and
sbb
cmp
xorb
jb
insl
mov
xor
test
mov
lea
xchg
inc
popa
jg
xor
stos
into
cs
sar
aaa
ss
fwait
sub
ds
xlat
loopne
xchg
lret
adc
xor
adcl
pop
mov
data16
cmpb
insb
sbb
sbb
dec
or
cltd
hlt
mov
cmc
xor
adc
and
daa
adc
xor
out
inc
ljmp
dec
jl
cmc
add
pop
fs
sub
ds
ja
sahf
lcall
je
pop
inc
xor
fnstsw
dec
dec
xchg
icebp
dec
roll
jnp
roll
addr16
icebp
inc
inc
cli
vcmpsd
sahf
pop
out
add
push
fcmovbe
pop
mov
dec
cwtl
js
ret
mov
push
cmc
subl
mov
lods
dec
jge
xor
adc
xor
jne
pop
jno
sahf
subb
setno
inc
push
mov
pop
in
stos
add
sub
push
jge
cli
mov
mov
pop
pop
inc
xor
inc
inc
jg
inc
xorl
ljmp
int
dec
mov
les
mov
stos
mov
sub
sbb
cmp
push
jne
push
orl
lds
fwait
push
jae
fs
fbld
das
cld
pop
nop
int3
scas
icebp
inc
aad
imul
dec
cwtl
js
xor
daa
shlb
outsb
fldcw
jg
lods
xchg
das
cwtl
arpl
mov
std
and
aad
jle
loope
jo
lcall
lret
fidivrl
bound
in
and
dec
movsb
fidivrs
ds
inc
daa
xchg
jne
add
std
inc
push
add
mov
std
mov
push
gs
dec
cmc
or
pop
mov
insb
jmp
mov
jp
inc
mov
shrw
dec
cmpsl
adc
adc
cwtl
mov
adc
stos
xchg
and
leave
jp
pop
fwait
mov
movsl
pop
and
loop
fnsave
jae
arpl
push
xchg
cmp
stc
adc
jb
mov
shrl
and
mov
popa
adc
mov
jbe
add
es
sbb
cmp
iret
aaa
dec
pop
insb
sbb
and
or
mov
gs
or
jecxz
jg
push
es
test
cmpsl
and
fistl
or
and
mov
xor
mov
roll
adc
pop
dec
inc
or
sbb
aas
sub
push
dec
add
popf
dec
negl
popa
sbb
push
adc
adc
jecxz
and
jne
dec
jae
stos
fdivrl
mov
call
sbb
jg
out
lret
out
test
rolb
jg
mov
jecxz
mov
mov
sbb
mov
mov
xchg
push
mov
ljmp
mov
ja
xlat
sbb
push
ficompl
dec
aad
adc
push
cmp
and
insb
and
rcrl
mov
data16
enter
faddp
into
sub
adc
adc
lret
aas
xchg
dec
cmp
push
push
jp
aam
ljmp
adc
xchg
mov
adc
ret
pop
pushf
shll
xor
jle
out
cmp
jne
mov
fisttpll
js
inc
popf
test
daa
jbe
mov
shll
push
loop
jmp
aas
jns
cwtl
sub
mov
push
and
into
pushf
decl
movsb
out
inc
fsubp
push
sbb
cmp
int3
fdiv
scas
adc
fdivrl
bound
pusha
gs
dec
or
jbe
fwait
test
stc
push
dec
outsl
in
pop
lcall
popf
aaa
xor
loop
push
mov
mov
sbb
je
adc
int
mov
mov
movsb
xchg
or
jno
scas
push
mov
jne
pop
stc
das
gs
mov
int
hlt
imul
mov
mov
jae
mov
dec
xorb
or
out
jge
add
mov
mov
lcall
sub
jecxz
mov
sbb
subb
jg
sbb
or
lcall
inc
pusha
sub
adc
out
sbb
movsl
add
mov
sti
jg
push
pop
pop
neg
mov
rcll
and
jns
jno
in
iret
rcl
fdivrl
loopne
xor
push
mov
xchg
xlat
jg
xchg
sarb
xchg
cld
aas
cmp
jne
or
xchg
rcrb
inc
into
add
rorb
jo
sbbl
or
inc
xor
add
jmp
mov
add
inc
aad
xchg
cmc
or
mov
outsl
and
shlb
js
sbb
mov
int3
push
cld
sub
fwait
cld
sahf
enter
shll
mov
shrb
xchg
mov
pusha
outsb
aad
scas
stc
pop
sub
adc
cmc
int3
push
loope
std
test
push
clc
in
cmpsb
push
add
cmpsb
push
mov
dec
pop
das
dec
push
mov
sti
aad
iret
xor
mov
mov
loope
mov
sub
lock
ficomps
insl
pop
jl
adc
xor
mov
das
jle
mov
popa
in
test
jo
mov
data16
cmp
jmp
sub
lahf
jns
outsl
daa
mov
mov
inc
jo
mov
mov
nop
test
out
cs
mov
xchg
pusha
cld
pushw
push
out
mov
insb
inc
imul
rorb
dec
add
push
push
push
repnz
out
pop
aam
and
mov
and
repnz
and
lahf
jg
mov
inc
mov
repz
inc
and
pop
hlt
leave
sbb
aas
adcl
imul
sbb
jae
aas
ja
pop
cmpsl
in
mov
mov
icebp
adc
test
jecxz
xor
imul
mov
cmovle
or
mov
sar
push
mov
std
ds
and
mov
cmpsl
fcomps
jl
xchg
xchg
scas
sub
aas
pusha
scas
scas
btr
arpl
fstpl
mov
mov
outsb
icebp
adc
xchg
inc
jnp
mov
mov
stc
sbb
mov
push
les
mov
and
mov
jge
lds
mov
jmp
or
inc
xor
les
movsl
loop
xlat
insl
dec
xchg
sub
push
call
push
fwait
and
jo
sub
sub
int
stos
and
inc
js
mov
or
pop
imul
mov
adc
jle
add
jl
jg
xchg
js
xchg
mov
fdivl
cmpsb
jae
ror
sbb
push
jg
sub
out
cltd
loop
mov
imul
jns
rcl
dec
or
loopne
inc
lods
imul
insl
arpl
xor
mov
adc
and
imul
adc
push
lcall
bound
push
std
orb
and
pop
std
daa
sbb
jne
xchg
inc
arpl
or
and
into
mov
cmp
sub
sti
addl
mov
sub
sti
add
sbb
cs
cld
cmc
and
in
pop
inc
dec
jnp
dec
pop
adc
or
inc
push
inc
lods
sti
mov
jl
or
roll
jle
frstor
adc
add
dec
stos
stos
or
leave
sbb
ficomps
fscale
int3
jno
in
sarl
inc
mov
add
inc
jne
fstps
mov
int3
and
pusha
ja
mov
faddl
mov
inc
lods
dec
ret
out
loopne
cmp
out
test
mov
mov
mov
or
jo
divb
push
push
or
xchg
dec
jo
in
push
notl
jb
cmp
mov
xlat
testb
jns
fisubs
xlat
xchg
repnz
inc
mov
and
mov
les
mov
mov
nop
mov
fucomip
scas
xor
jno
pop
leave
int
cmc
pop
ret
out
stc
jecxz
xorl
mov
decb
int
mov
mov
je
pop
fsubl
push
push
dec
mov
ret
fs
fwait
add
ds
xor
in
jb,pt
or
inc
mov
jne
pop
sub
in
loope
ret
clc
mov
incb
mov
dec
cltd
jne
or
sbb
insl
sbb
ljmp
dec
movsb
pop
pop
into
mov
pop
fdivr
aas
jge
mov
lahf
insb
lret
push
mov
add
xlat
lret
sub
mov
lahf
ds
std
cli
or
inc
movsb
insb
sub
mov
adc
pop
push
add
ja
xchg
out
gs
ss
and
fdivr
jbe
lods
ud2
and
cld
and
cld
lods
cmp
fsubrs
mov
mov
sub
and
mov
xor
mov
sahf
ja
xor
pop
pop
mov
mov
in
pop
mov
popf
addr16
add
cmp
cmp
inc
mulb
orb
add
leave
push
mov
aas
sbbb
or
mov
jnp
or
cs
pop
mov
push
mov
fdivs
pop
cmp
xchg
ljmp
pop
std
inc
mov
rorb
inc
nop
repnz
xchg
push
aad
cs
mov
aad
in
add
and
aam
dec
xor
test
or
stos
stos
sbb
inc
adc
and
or
outsl
mov
repz
jmp
or
pushf
cltd
jp
notl
pop
push
std
push
jmp
xchg
cmp
push
or
mul
aaa
mov
stos
pop
in
cmp
sub
inc
dec
xchg
adc
xor
push
mov
pop
cmp
sbb
xchg
push
nop
loopne
lock
and
and
in
pop
in
mov
fnsave
das
xchg
stc
jb
jg
push
movsl
jle
mov
arpl
imul
mov
cmp
pop
repz
scas
push
dec
mov
lcall
push
add
aad
pusha
ficomps
aaa
mov
xor
cmp
jnp
aad
rorl
jle
mov
insb
add
or
and
adc
mov
mov
xchg
out
sarb
in
popf
fs
sub
int3
ja
imul
xor
xchg
or
mov
outsl
xlat
push
loop
inc
pop
push
movsl
bound
pop
push
push
sbb
mov
pop
lea
cmp
or
cmp
and
arpl
cs
and
loop
xchg
push
jne
rol
mov
inc
mov
lret
repz
ljmp
int
hlt
stos
cmp
sbbl
lock
lods
out
cmpsb
xor
insb
arpl
out
lds
cmp
stos
inc
pop
sub
mov
push
adc
and
or
xchg
cmp
popf
sub
stos
add
mov
jnp
and
jmp
mov
jge
sarb
mov
dec
mov
inc
sarb
inc
xor
and
movsl
rcl
mov
lret
add
fldt
cwtl
xor
call
iret
dec
imul
enter
mov
dec
arpl
scas
in
in
mov
inc
pop
adc
in
repnz
pop
xor
popf
jecxz
mov
mov
setae
jne
pop
dec
dec
jmp
out
dec
dec
mov
sub
aaa
dec
iret
aaa
xchg
sub
xchg
sbb
iret
negb
or
loope
mov
push
mov
dec
sbb
xor
push
jl
fcoml
jp
dec
xorl
jns
push
imul
movsl
dec
push
hlt
pop
lret
pop
pop
lea
mov
xlat
dec
inc
mov
movsl
pop
or
jne
shlb
and
int
in
sbb
rcrl
ljmp
ljmp
mov
addr16
jecxz
fidivrl
mov
cmp
push
out
ja
dec
inc
cmpsb
jne
push
add
mov
pop
pop
lcall
aam
lods
push
jnp
mov
lds
pop
add
daa
cld
outsb
mov
adc
and
sub
in
inc
mov
in
lods
push
imul
mov
cli
xchg
scas
mov
sbb
and
mov
jae
outsl
xorl
push
mov
sub
imul
mov
add
fldcw
mov
sbb
int3
ss
es
add
cltd
mov
fiadds
or
mov
xchg
movsl
xor
and
inc
pushl
xor
cwtl
imulb
fisttps
fmuls
pusha
inc
fwait
sub
pop
in
es
fsubs
fmuls
mov
movl
dec
aas
jge
iret
cs
inc
fucomi
mov
mov
jno
mov
mul
lds
push
into
xor
jno
push
je
scas
cmp
in
mov
rcll
insb
xchg
cmp
das
inc
dec
push
sub
sbbb
inc
pop
push
les
aaa
or
jae
aam
mov
inc
jae
mov
push
xchg
and
xchg
scas
mov
inc
lret
pop
mov
aad
in
push
xor
loopne
push
push
fs
mov
cmc
push
and
jmp
push
dec
popf
outsl
and
cltd
mov
ret
lds
inc
sub
test
sub
cmpsl
push
xorb
movsb
jb
test
cs
sub
mov
push
inc
cmp
test
xchg
fdivs
cltd
sub
int
jp
cmp
imull
lcall
jl
jne
xor
push
jnp
mov
fisttpll
lea
push
xchg
stc
push
les
mov
fsubl
sub
in
lea
sub
jg
in
les
mov
fwait
pop
jecxz
jecxz
cmp
and
aam
stc
clc
adc
pop
pop
adc
bound
pop
add
or
pop
popf
std
mov
movsb
mov
and
fisubs
stos
push
out
mov
scas
mov
das
cmp
mov
lods
fsubp
sub
jnp
arpl
push
shr
pushf
jle
and
or
xchg
mov
sub
decl
je
stos
xchg
xor
sbb
jge
ret
data16
ss
push
xchg
pop
cmp
fnsave
or
mov
shrl
leave
cmpb
out
cwtl
mov
cli
mov
enter
xchg
sub
adc
mov
lcall
adc
pop
mov
lret
mov
in
insl
test
shll
js
ficompl
xchg
pop
mov
cmpsb
inc
cmp
mov
adc
daa
mov
mov
push
dec
xlat
loopne
mov
test
test
sarb
mov
out
rorl
cmc
fildl
mov
iret
sub
inc
pusha
mov
shll
outsl
and
stos
repz
popf
dec
in
adc
int3
roll
jmp
jbe
jnp
rcrl
push
pop
shlb
cmpsb
adc
stc
adc
cmp
in
fisubrs
sarl
dec
inc
pop
sbb
jle
das
jmp
adc
push
outsl
push
push
decl
mov
pop
sarl
rcll
push
jmp
cmp
jo
push
dec
inc
or
or
out
cmp
jmp
ficoms
add
int3
push
daa
and
lahf
xchg
xchg
dec
mov
pop
mov
repz
mov
cltd
inc
rcrb
and
xchg
push
outsl
inc
lcall
fs
cmp
loope
mov
mov
push
add
or
cmp
mov
sub
xchg
nop
dec
dec
leave
mov
mov
out
std
mov
fdivs
stos
xchg
xchg
jecxz
out
or
pop
out
and
and
add
mov
lret
int
jbe
jmp
cwtl
push
mov
lret
fwait
pop
sub
fwait
dec
fsubrs
popa
mov
inc
arpl
push
add
pop
add
mov
mov
inc
cld
sqrtps
mov
jp
aad
rorb
outsl
loop
out
lret
xor
pop
jl
pushf
mov
aad
mov
ja
or
pop
int3
mov
lock
lock
shll
test
in
mov
mov
add
ds
pop
pop
push
mov
clc
test
ror
and
pop
fadds
push
lock
test
scas
jl
loop
push
test
aas
xor
dec
arpl
sti
daa
xchg
add
jne
dec
repnz
int3
test
rol
cmpsb
xchg
cmp
gs
daa
fnstsw
sbb
flds
or
inc
pusha
sti
mov
icebp
lahf
jmp
lret
mov
pop
aad
lahf
in
inc
jge
cmp
outsl
ret
dec
mov
test
inc
cld
adc
and
add
mov
in
mov
jne
sub
xor
scas
outsb
cld
mov
dec
sbb
shll
xor
jb
icebp
dec
jmp
popw
adc
bound
sti
cld
data16
jecxz
pop
or
loop
cmc
nop
in
pop
jno
push
and
fcoms
movsl
adc
jbe
ja
push
mov
add
stos
xchg
mov
dec
fcompl
outsb
or
or
inc
stc
add
pop
mov
and
js
and
sub
fwait
cltd
adc
cmpsl
out
adc
mov
aas
scas
in
shlb
fsts
sub
push
call
adc
mov
sbb
xchg
xorl
dec
sbb
mov
push
jbe
movsb
mov
push
pop
enter
cmpsb
aaa
leave
adcl
pop
ds
or
fidivl
test
cmp
addr16
js
mov
aad
jnp
mov
lods
pop
fwait
arpl
loope
je
mov
push
cmp
jns
outsl
subl
sbb
call
cltd
fcmovne
sahf
cmp
push
push
sbb
cmp
sbb
jnp
test
aas
mov
sub
xchg
mov
push
cmpsl
mov
add
in
shll
sbb
push
jbe
mov
not
or
rcll
xchg
inc
mov
sub
fwait
imul
push
stc
dec
push
add
add
jbe
and
mov
call
pop
mov
pop
jo
xchg
leave
daa
aas
ror
nop
sbb
inc
cmp
jne
xchg
faddp
push
leave
ret
pusha
out
pop
push
cmc
inc
test
sub
fwait
test
pop
add
leave
mov
hlt
lods
cltd
cli
pop
sbb
inc
xor
or
repnz
dec
fmul
pusha
clc
nop
leave
js
adc
aaa
movsl
fcom
dec
jl
cltd
adcb
arpl
push
xchg
mov
sub
enter
bound
movsl
or
hlt
or
ljmp
test
and
push
xchg
popf
out
push
fstps
mov
in
jl
push
and
cmp
movsb
dec
xchg
out
or
add
fdivs
jg
xchg
mov
jg
testl
ficoms
out
lods
sbb
sub
inc
pop
shrl
outsl
das
xor
mov
adc
inc
xchg
ret
xor
fidivrs
or
stos
mov
in
dec
mov
pop
mov
lock
add
int
mov
push
clc
cmp
in
sbb
fcoml
xor
aad
add
out
mov
push
shrl
fstps
lret
mov
push
int3
mov
inc
add
ret
jle
inc
jp
shll
mov
pop
pop
xchg
xchg
inc
ret
mov
sbb
xchg
and
sti
loopne
stos
mov
jnp
into
jnp
and
sub
pop
jmp
fisubl
jo
mov
and
movsb
je
lcall
std
mov
stos
adc
inc
test
jbe
ja
loope
out
push
orb
push
xlat
std
sbb
jb
dec
shl
sbb
inc
ss
sbb
lock
popa
jae
cmp
xor
xchg
dec
lods
out
push
dec
shll
loopne
dec
mov
xchg
mov
daa
adc
mov
out
int3
or
lods
or
aas
xor
inc
rorl
sbb
outsb
rcrl
lea
cltd
pop
ret
fistpl
pop
pop
push
add
dec
and
dec
sub
mull
icebp
pop
das
and
mov
bound
test
pusha
dec
jg
jl
dec
rcll
rcll
push
push
push
popf
lret
popf
adc
inc
mov
test
loopne
sbb
bnd
mov
sbb
mov
mov
arpl
cltd
loopne
or
jp
ljmp
int
punpckhwd
ss
fcompl
sub
push
scas
and
and
dec
push
xor
xchg
aaa
fstpl
mov
adc
test
mov
movsb
ret
sub
sub
icebp
jge
icebp
aad
mov
clc
and
cld
push
mov
cli
les
loopne
shr
push
inc
pop
mov
xor
or
push
or
das
orl
dec
ffreep
jae
pop
inc
cmpsb
lods
xlat
fidivl
mov
or
jae
aaa
outsb
and
push
lea
xchg
sub
mov
cli
sbb
out
cmovno
jmp
pop
iret
dec
lret
dec
cmp
mov
jge
arpl
dec
mov
pop
or
or
sub
jns
add
adc
test
jns
adc
cmpsl
pop
fstpl
popf
les
out
dec
je
push
movsl
leave
and
xchg
in
xor
mov
test
sbb
jo
outsl
xchg
popa
cmp
push
mov
cmp
push
cmp
push
jno
imul
test
add
add
and
add
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
jmp
add
mov
hlt
aas
push
scas
iret
and
xchg
rolb
subl
test
leave
dec
dec
ficoml
scas
fildll
bnd
pop
and
arpl
inc
in
mov
loopne
jg
cli
mov
xor
jno
fbld
mov
xchg
shrl
ret
bound
lock
repnz
or
mov
test
movsb
insl
sbb
daa
push
cmp
xor
mov
lea
stos
jae
sub
lret
push
clc
push
jl
xor
lea
or
jmp
xlat
sbb
sub
cs
lea
sbb
out
sbb
jecxz
mov
aam
dec
cld
in
ss
shl
mov
and
imul
out
sub
mov
xchg
movsl
loope
les
shll
jle
mov
jge
lea
sub
test
push
xchg
mov
fimuls
ror
jne
sarb
sahf
rcll
hlt
lret
out
test
mov
fiaddl
mov
xchg
jns
or
add
out
sbb
vminpd
testl
shlb
cmc
into
jo
add
adc
iret
jno
cmp
xchg
mov
stc
insl
lahf
sub
cmpsb
sbb
mov
hlt
push
lock
stc
shrb
push
das
loop
sub
cmp
gs
js
lcall
out
dec
in
faddl
and
inc
out
popf
jecxz
push
ss
icebp
clc
inc
pusha
jl
cmp
filds
out
adc
and
xchg
inc
mov
mov
or
and
push
dec
push
mov
rol
and
nop
mov
and
test
outsl
inc
sti
mov
and
aad
sub
test
imul
sbb
jl
sub
into
faddl
int3
adc
sbb
mov
sbb
fstpl
cmpsl
popf
scas
lret
pop
rcrb
cmpsb
cmp
push
add
push
jl
push
pop
hlt
mov
enter
inc
mov
add
movsb
lock
pop
outsl
mov
jo
shl
pop
or
inc
popf
pop
insl
mov
mov
imul
jo
daa
mov
mov
in
into
pop
loopne
cmpsl
jge
cmp
loopne
out
loop
out
in
ljmp
pop
mov
aam
sbbl
nop
fiaddl
mov
outsl
inc
sub
or
repnz
inc
cmp
push
jecxz
cli
push
lret
movb
xlat
mov
dec
mov
fcom
sbb
pushf
mov
sbb
subb
loope
inc
xchg
psllq
inc
in
add
push
fwait
inc
xchg
pop
outsl
lret
dec
lods
push
js
jnp
movsb
pop
addr16
loope
out
fmul
and
fnsave
movsb
data16
insl
inc
xchg
lds
sub
es
pusha
sbb
imul
lods
and
push
xlat
lea
push
mov
push
into
jmp
pop
lret
mull
iret
inc
ds
pop
iret
jecxz
push
xchg
sbb
mov
mov
jne
out
int
jns
xchg
pop
scas
scas
xor
bound
pop
into
shr
jns
mov
jp
fsubr
leave
hlt
push
popf
loopne
sub
leave
std
call
sub
jg
scas
sahf
sarl
push
mov
int
insl
xchg
lahf
call
and
in
lcall
pop
pop
ss
inc
mov
insl
ss
cmp
sbb
pop
mov
xchg
dec
jmp
repnz
in
jae
ret
out
repz
adc
ss
divl
dec
xchg
xorb
fsubrl
lods
push
outsl
mov
sti
mov
dec
fisubrl
and
movsb
mov
lret
mov
loopne
fwait
xchg
out
mov
cmp
idiv
xor
bound
adc
mov
dec
mov
outsl
stc
sbb
scas
mov
push
in
push
pop
dec
sbb
sahf
enter
sub
clc
sbb
dec
pop
scas
test
or
idivl
xorb
jne,pt
mov
repnz
mov
add
push
pop
pop
add
fldcw
and
jns
or
mov
push
movsl
cmp
leave
sbb
iret
sbb
pop
cmp
pop
loope
ds
add
adc
and
adc
bound
xor
gs
add
add
int
nop
adc
ret
dec
sbb
stc
cmpsb
push
out
or
adc
adc
and
aam
fdivp
xor
pop
iret
jns
dec
push
pushf
imul
dec
add
cmc
mov
inc
xor
cmp
enter
cmpb
xorb
and
ret
enter
lahf
pop
mov
inc
lock
mov
push
shlb
mov
fmulp
cmp
cwtl
mov
fsubs
repz
and
arpl
xchg
loop
imul
fmuls
sbb
xchg
cmp
test
jge
aad
jecxz
mov
iret
lea
cs
mov
push
roll
cmp
xchg
sbb
das
adc
mov
sarb
ljmp
sbb
repnz
push
insb
arpl
add
fsubrp
xchg
jno
fstpl
mov
stc
cmp
or
sbb
jg
fisttpl
sbb
mov
or
aaa
xchg
lock
jne
sbb
orb
mov
push
push
push
and
movsl
clc
and
shll
sub
mov
rcr
push
lret
in
repz
mov
inc
movsb
dec
shl
je
pop
and
fsubrl
sbb
jnp
or
and
out
mov
mov
sahf
mov
bound
push
or
pusha
hlt
cmpsl
and
imul
lea
lahf
cld
popa
sti
mov
dec
addr16
adc
mov
or
and
pop
orb
jl
shrb
jmp
inc
dec
push
lcall
dec
fs
xor
lret
jns
cmp
popa
and
lahf
dec
fimuls
fadd
cmc
jecxz
and
neg
roll
sarl
sub
clc
dec
popf
fidivrl
iret
sbb
add
stc
stos
je
sub
mov
mov
in
aam
xor
or
xor
xchg
pop
sar
adc
aad
add
cmp
mov
inc
enter
jo
fisubl
aaa
rorl
push
push
leave
mulb
dec
es
pop
pusha
cmpsb
es
testb
mov
idivl
stc
mov
and
movsb
sub
cmpsl
sbb
popf
loope
dec
mov
pop
pmullw
mov
push
pop
nop
push
dec
add
mov
jp
repnz
sub
mov
jbe
sbb
adc
ret
scas
sub
lock
cli
jle
push
repnz
pop
call
es
dec
test
out
xchg
pop
jno
pop
mov
rol
cmp
cmp
aam
push
pop
mov
push
mov
pop
repnz
sbb
or
and
sbb
popa
push
sbb
mov
mov
int
mov
jg
mov
pop
and
add
mov
pushw
push
jb
jmp
gs
mov
push
mov
jl
or
sarb
int
sub
hlt
sbbl
jle
out
sbb
fidivrl
into
iret
iret
sarl
test
enter
shl
mov
xchg
mov
pop
fmull
mov
xor
mov
or
or
outsb
fdivr
test
and
xchg
test
mov
movsb
ret
mov
sub
jl
xor
fistpl
hlt
call
sub
push
pmuludq
cmp
jb
inc
dec
out
mov
repz
jmp
adc
mov
inc
scas
lods
popf
cmc
or
or
cmpsl
xchg
orb
adc
push
push
aaa
dec
jp
int
add
adc
cmpsl
jae
xor
sbb
inc
ja
nop
into
js
push
jo
inc
insl
shlb
inc
dec
aas
btr
cmp
aaa
push
insl
into
orb
sti
jns
inc
xor
sbbl
in
test
fsubrs
fstl
frstor
addl
cld
cld
in
pop
sbb
sbb
ret
fsts
mov
push
sub
adc
insl
pop
iret
mov
mov
adc
aad
nop
mov
test
xchg
or
or
std
clc
sti
outsl
ja
loop
dec
arpl
or
pop
push
test
xor
mov
or
xchg
movsb
mov
cmpsb
mov
aaa
lahf
add
xor
adc
mov
jbe
jns
in
out
in
fsub
cli
cli
cwtl
jae
add
test
pop
xor
xor
test
fistpll
xchg
movsl
std
inc
outsl
sub
rorl
dec
les
ret
in
adc
roll
xor
xor
xchg
mov
xor
lret
loopne
cmp
pop
push
push
in
push
stos
xchg
cwtl
xor
pushf
imul
and
xchg
pop
jle
jge
pop
mov
ja
push
xor
int3
addr16
jmp
sarl
dec
sub
ffree
ss
shrl
into
jecxz
lret
xchg
rep
sbb
cmpsb
mov
cmp
addr16
add
sbb
pop
jle
hlt
push
cltd
cli
mov
cmp
out
xchg
pop
sub
sti
pusha
push
mov
cmp
cmp
popf
jo
adc
clc
mov
mov
lods
lea
or
push
xchg
das
dec
xchg
loopne
sahf
aad
stc
std
ret
fimuls
fists
mov
sbb
clc
jp
je
out
jl
mov
jecxz
fimuls
xor
aaa
sbb
clc
mov
or
sub
sub
pop
jmp
or
mov
mov
loop
ret
xor
in
sbb
fimull
pop
push
shl
sbb
shrb
fcomps
inc
jo
xor
outsl
ja
push
push
cmp
pop
je
jl
xchg
bound
xchg
divl
testb
jp
das
clc
push
push
lods
mov
fistpll
add
divb
sub
push
lock
adc
add
subb
or
jge
xchg
out
mov
scas
cltd
xchg
inc
add
xor
lcall
xor
jg
push
mov
test
xchg
in
push
jp
loope
xor
mov
pop
xchg
jg
rorl
pop
or
sub
xchg
clc
cmp
sti
pop
shrl
cs
dec
lea
mov
outsl
mov
xor
cwtl
lret
xchg
lea
inc
mov
je
aas
nop
push
xchg
dec
into
add
xchg
push
push
rcl
pop
dec
or
fisttpll
repz
clc
mov
cmp
mov
push
xchg
cmp
out
stos
pop
mov
pop
lds
adc
mov
mov
add
and
sahf
jb
mov
xchg
pop
ss
fdivrl
pop
dec
loopne
jnp
test
and
cmp
mov
mov
sbb
cli
xchg
sub
jae
mov
or
inc
rcrb
lcall
mov
inc
inc
test
out
mov
xor
inc
in
je
cmp
push
movsl
in
adc
inc
sub
andb
inc
cwtl
int3
sahf
outsb
sbb
cmpb
jg
adc
ret
push
pop
pop
inc
mov
ss
dec
dec
mov
lret
jno
lods
popf
or
dec
pop
shll
jp
xor
fistpl
test
sub
insl
or
mov
mov
xchg
xor
ja
scas
inc
inc
adc
cs
sarb
xor
rcrl
hlt
dec
out
fstps
cmpsb
add
push
call
mov
aad
pop
and
call
mov
cmc
fdivrl
es
sbb
and
or
sub
enter
xchg
fdivr
movsb
je
sbb
lock
xor
loope
xchg
lret
shufps
dec
cmp
mov
pop
pop
adc
sbb
add
rcrl
loop
sub
adc
mov
in
cmp
cmp
push
bound
pop
fs
in
inc
dec
imul
push
mov
lds
inc
and
enter
and
dec
and
divl
dec
dec
mov
pop
sub
mov
cmp
and
rcrl
and
ficoms
lods
jl
jb
call
pop
das
fsubrl
es
loop
incb
or
das
sbb
dec
lods
push
cmp
out
dec
pushf
or
sbb
dec
mov
pop
bound
push
fsts
mov
cmpsb
stos
xchg
and
jns
and
into
inc
mov
or
ficomps
xchg
and
inc
sbb
pop
inc
pop
int3
jne
dec
je
xor
dec
sub
dec
jbe
adc
cmp
lret
or
sti
sbb
int
xor
idivb
ret
aaa
adc
mov
lahf
dec
mov
sbb
inc
into
shll
je
push
loopne
call
inc
loop
out
pusha
mov
out
incb
push
add
pop
pushl
mov
ret
pop
pop
lods
cmp
out
cmp
das
pop
and
fstpl
outsl
xchg
jmp
fidivrs
lahf
loope
sti
sub
inc
shr
cwtl
aas
mov
imul
cmpsb
inc
mov
inc
mov
ficomps
mov
pop
inc
sub
jne
ror
xchg
rcll
jecxz
mov
or
push
adc
icebp
loopne
inc
jmp
lahf
hlt
adcb
stos
ficomps
adc
push
mov
mov
jmp
test
xchg
push
call
ds
push
nop
lock
xchg
aas
cmc
mov
jae
xchg
hlt
pop
add
inc
lahf
clc
rcll
push
cs
mov
and
imul
adc
in
dec
sub
jo
leave
repnz
jg
call
ret
popa
sub
pop
stos
jb
repz
ret
fldt
mov
leave
in
push
fisttps
add
mov
push
popf
jg
mov
fnstcw
ljmp
addl
hlt
ljmp
lock
pop
push
loope
cld
lea
cmc
mov
sbb
mov
scas
add
ja
mov
sbb
cld
test
fimuls
xchg
roll
cmp
xor
adc
loop
imul
stos
push
lds
push
or
fbstp
mov
out
lea
sarb
nop
int
rcrl
add
imul
or
loope
and
fsubs
inc
mov
data16
scas
cs
ret
js
test
out
nop
scas
ljmp
inc
mov
jo
test
cmp
pop
mov
iret
jecxz
rorb
cmp
movl
inc
sub
cmc
and
push
jns
pop
jmp
push
sbb
push
shr
xchg
pop
test
xchg
mov
push
outsb
dec
jl
xchg
shll
sub
leave
ljmp
and
jge
lret
clc
sti
mov
aas
push
lea
movsb
data16
mov
mov
pusha
mov
aam
sub
fsubs
xor
inc
xchg
out
orl
icebp
jne
cltd
add
stc
negl
scas
clc
repz
repz
xor
lret
mov
mov
gs
fnstcw
repz
xchg
jae
insl
negb
js
idivb
std
rclb
mov
cld
pushf
and
ds
popa
pop
es
fldl
data16
xor
stos
imul
into
out
int
xorl
cmp
add
push
jnp
xor
cmp
push
out
mov
loope
pushf
ret
cmpsb
scas
or
jbe
jne
stos
mov
pop
inc
push
into
lea
int3
fmull
push
xlat
adc
mov
xchg
dec
sub
cmp
dec
jno
out
fwait
add
out
cmp
pop
jle
lahf
mov
xchg
cmpsl
push
xchg
ret
sti
shll
rcrb
inc
je
mov
cli
adc
push
cs
cmp
xchg
aas
int3
mov
jne
xchg
popa
mov
xor
sub
xorb
dec
movsl
lret
xor
mov
int
jae
lock
jno
adcl
jg
dec
inc
in
fnsave
sahf
dec
cs
or
sub
pop
mov
mov
sub
cld
sbbl
pop
mov
sub
outsl
into
into
lods
pop
shrb
fldcw
daa
or
mov
stos
ret
iret
or
lcall
push
lea
mov
adc
aaa
mov
or
loopne
push
adc
mov
jg
inc
dec
fadds
mov
jo
iret
rclb
sub
or
xchg
inc
mov
popa
push
inc
sbb
pop
loopne
mov
loope
js
cmc
pop
push
xor
xchg
pop
scas
into
call
subl
loope
pop
shl
adc
aad
mov
rcrl
int
mov
xchg
xor
jb
adc
adc
ficomps
dec
iret
popf
mov
int
cmp
jmp
add
push
push
ds
cmp
pop
dec
dec
data16
lahf
sarb
jbe
scas
xor
mov
xor
cmp
inc
dec
and
es
stos
cmp
xor
mov
dec
mov
shlb
xchg
outsb
mov
dec
cmp
pop
rcrb
sbb
cmp
pusha
inc
xor
inc
dec
sub
outsl
dec
pop
mov
xor
shr
mov
sbb
in
mov
mov
fisubrl
imul
inc
sbb
cmp
mov
jns
pop
pop
jmp
fbstp
inc
enter
mov
pop
mov
push
filds
cmp
push
or
test
arpl
stos
xor
inc
jmp
xchg
inc
dec
jg
mov
jecxz
in
xchg
nop
imul
jns
arpl
fistpl
mov
mov
notl
mov
adc
push
lea
dec
mov
pop
iret
sub
fsubs
iret
arpl
fildl
or
scas
movsb
fimull
jle
stos
sti
dec
sbbb
cld
cmp
pop
dec
or
jg
pusha
sbb
xor
mov
mov
into
data16
sub
cltd
shrb
js
or
jge
sub
inc
aas
push
mov
fcompl
sti
xchg
jo
jno
test
repnz
inc
xchg
mov
out
shlb
pop
dec
inc
inc
pusha
imul
and
mov
xchg
sub
add
add
addr16
add
jo
mov
sbb
pop
inc
cmp
adc
cmp
ret
sbb
mov
push
xchg
and
push
adc
sahf
mov
mov
stos
pop
popa
push
lods
jg
mov
jae
sbb
movsl
adc
outsl
stos
cs
xlat
cmp
lea
jno
mov
lahf
xor
fistpll
test
cmp
jno
icebp
inc
loop
sub
les
add
cmp
inc
dec
dec
lds
cmpsl
xchg
pushf
fbld
sbb
add
push
cmp
inc
call
cmp
and
je
test
insb
stos
lock
in
inc
inc
xchg
stos
iret
push
mov
push
jl
test
shll
mov
xchg
xor
fwait
rcr
jge
dec
adc
es
and
test
mov
or
ret
enter
mov
jle
mov
push
rcrl
push
aad
cmpsl
aas
iret
aas
push
lock
jmp
add
lahf
sub
jge
std
insb
sub
scas
shlb
sbb
cmp
rcrb
cli
cmp
mov
leave
jl
sarl
add
pop
cltd
nop
xor
dec
push
fcmovu
cmp
mov
cmpsl
addr16
enter
hlt
push
popa
mov
pop
sbb
pop
xor
mov
mov
rol
bound
cmp
mov
mov
cmpsl
xchg
mov
insl
xchg
int3
out
dec
gs
mov
iret
pop
cmp
enter
int3
jge
dec
loopne
es
addl
and
mov
fcomip
sbb
or
dec
xchg
js
loopne
sbb
cwtl
jae
mov
rclb
nop
cmc
mov
lds
addr16
lcall
out
cld
sbb
imul
jg
push
cs
test
test
imul
std
dec
push
jge
sub
and
js
push
push
xchg
bound
shll
mov
inc
sahf
cmp
and
sub
mov
mov
jo
rcrl
xchg
pop
out
shlb
cmp
inc
sti
and
enter
lods
or
aaa
fistps
hlt
push
js
xor
shr
mulb
pop
push
fsubrl
cld
das
push
cmpsl
cmp
pop
push
adc
pop
add
fisubl
nop
or
mov
movsl
repnz
jmp
test
pusha
jae
xchg
nop
and
jge
cs
movsb
ljmp
xor
pop
lcall
jl
stos
pusha
fists
enter
sub
push
bound
jle
jge
test
mov
arpl
push
into
js
enter
mov
in
mov
inc
shll
jns
and
xlat
add
adc
inc
mov
sbb
cmp
push
mov
or
cs
lret
mov
out
xchg
lcall
sub
cmpsb
jae
or
mov
push
dec
arpl
sahf
repz
cmp
push
mov
inc
pop
ja
push
cmp
add
sub
push
dec
aam
xor
clc
fistl
jp
push
mov
xchg
sub
pop
mov
aaa
xor
mov
xchg
mov
sbb
roll
sbb
mov
xchg
sti
xchg
push
sub
xorl
sbb
xor
gs
cmc
push
setge
push
add
and
pop
push
adc
mov
iret
je
nop
jae
sub
in
inc
insl
aam
cmp
push
mov
or
popf
inc
fsubl
xor
adc
out
pop
xchg
inc
stos
dec
jp
mov
arpl
gs
and
mov
sarl
lret
fldenv
into
inc
loop
into
mov
add
push
idivl
add
stos
cmpsl
xchg
leave
adcl
aad
lret
fsubs
sub
jno
scas
stc
xor
rcrb
mov
xchg
pop
mov
mov
outsl
sarl
dec
insb
cmp
xchg
mov
add
in
jbe
adc
add
cmc
or
inc
adc
pop
xchg
cli
and
jmp
mov
jnp
mov
bound
push
loope
lahf
cld
scas
pop
fidivrl
pop
mov
add
mov
jecxz
test
push
jle
fiaddl
mov
in
push
push
cltd
loope
aas
pusha
inc
lds
movsl
fdivrs
in
rcr
jns
in
mov
jb
data16
scas
xor
jmp
ds
sub
push
mul
ret
dec
hlt
jecxz
jns
in
pop
push
add
mov
jge
jb
mov
and
stos
and
out
rorl
or
into
scas
in
imul
lds
sub
pop
mov
dec
add
sbb
ljmp
inc
cltd
sub
inc
mov
lahf
adc
mov
add
sub
test
xor
mov
ja
js
mov
xchg
ret
mov
ja
clc
mov
xor
mov
stc
and
mov
arpl
inc
hlt
cmp
cmpl
call
into
cld
repz
jg
rcr
insb
shll
test
lahf
das
cmpsl
pop
jb
outsl
sbb
jp
cmp
sub
dec
inc
ret
adc
repz
mov
mov
orb
arpl
xchg
and
inc
int3
xor
or
cmp
scas
mov
push
inc
aas
xchg
add
arpl
add
mov
sti
stos
xor
loope
psubsw
adc
dec
pop
and
sahf
popa
adc
add
jp
loopne
xor
dec
pop
in
dec
and
hlt
mov
sub
ds
and
fsubl
pop
imul
in
dec
xchg
out
xchg
push
mov
leave
lret
outsl
sub
rcrb
sbb
les
xchg
add
es
lea
adc
jle
negl
dec
jne
dec
and
flds
pop
scas
push
ja
push
js
sub
xchg
sbb
or
push
inc
push
mov
sbb
aam
nop
xchg
loop
xchg
lods
adc
mov
jp
enter
fwait
sub
fcomps
movups
dec
icebp
aam
gs
add
enter
jle
stos
adc
mov
out
pop
xor
sbb
jae
aaa
pop
scas
jnp
sbb
jno
and
mov
mov
push
fsin
addr16
rcl
inc
inc
subl
jae
adc
popa
ljmp
stc
repnz
xor
ja
push
xchg
shl
arpl
jle
pushf
push
aam
test
sti
xchg
fucom
add
loope
mov
movsl
les
jmp
push
push
addr16
inc
push
outsl
xchg
iret
inc
sub
daa
mov
in
and
pop
or
mov
xchg
movsb
test
out
int3
or
dec
lret
jae
les
adc
jmp
pop
dec
cld
push
or
mov
fistpll
jae
xlat
mov
xor
xchg
xor
or
adc
repnz
mov
ret
movsb
cmpsb
or
adc
mov
filds
pop
cltd
push
adc
and
mov
fsubl
inc
inc
mov
imul
mov
inc
push
out
mov
insl
popl
int
test
push
sbb
mov
std
sbb
in
cmpsb
inc
cmp
ficompl
mov
adc
and
lret
push
mov
in
or
hlt
ret
es
push
inc
imul
mov
sbb
and
sub
fstps
fdiv
adc
add
xor
xor
mov
or
in
ficoms
inc
hlt
pop
orb
xchg
inc
dec
stc
pop
adc
sbb
pop
int3
adc
mov
movsl
pop
or
in
loope
jo
aas
push
nop
ss
inc
pop
push
xlat
cs
or
cmp
popa
psllq
pop
dec
int
push
int3
add
pop
inc
movsl
lods
test
push
jbe
dec
scas
addr16
dec
loope
out
test
jae
push
enter
cmp
inc
cltd
fcomi
addl
pusha
cmp
pop
lret
ds
movsb
xor
aaa
std
repz
shll
jnp
and
orb
les
hlt
xlat
jo
xor
call
ret
pop
jbe
fstps
sbbb
hlt
ja
ss
mov
push
lret
stos
jbe
add
mov
cltd
or
sbb
subl
fucomp
jbe
jl
mov
jle
and
push
sysenter
lock
int
and
test
scas
lcall
repnz
mov
loopne
pushf
pop
jmp
mov
dec
or
and
int3
pop
cmp
mov
repz
fcmovnu
lahf
cmp
mov
sbb
or
mov
out
push
pmullw
ficoms
or
mov
push
and
out
mov
jno
add
add
mov
dec
push
jb
mov
cmp
xchg
mov
sbb
loop
mov
inc
mov
pop
inc
cmp
xor
cltd
ret
rcll
sub
jge
mov
jne
jecxz
insb
jl
test
ret
js
mov
out
ja
xor
movsl
int
sub
mov
ss
xchg
pop
add
mov
xor
jae
mov
inc
jge
test
popf
xor
xchg
arpl
dec
inc
push
mov
adc
sbb
lods
inc
popf
clc
pop
int
mov
sti
dec
sub
mov
push
lods
jmp
fnstsw
daa
xor
les
jno
lahf
xchg
sti
and
insl
mov
lret
mov
into
adc
xor
xor
lods
adc
pop
dec
or
cs
or
add
jne
je
out
outsb
sub
jne
data16
pop
loope
call
lret
ror
mov
mov
repnz
cli
sub
inc
mov
out
add
mov
cmp
push
es
in
stos
out
in
call
std
adc
pop
ficoml
js
mov
and
arpl
pop
push
movsl
je
push
or
pop
lods
inc
pop
sti
pop
loop
call
sub
mov
push
xor
stos
js
push
or
pop
out
loopne
push
cmp
sbb
loope
add
icebp
dec
inc
out
inc
mov
mov
push
lock
sub
sahf
sbb
sub
int
mov
fimuls
push
rol
adc
adc
xchg
inc
sbbl
lods
mul
call
jecxz
mov
mov
xor
test
ret
jg
jo
mov
mov
mov
xchg
sbb
cmpsl
jge
cwtl
mov
or
mov
xor
push
lds
sub
in
xchg
xchg
or
inc
or
adc
cmp
lods
arpl
cmpl
xor
mov
clc
or
call
sbbb
cs
fsubl
xchg
popf
inc
cmp
xor
xor
cmp
lret
int
cmpsl
xchg
mov
mov
cwtl
xchg
fstpl
pop
inc
shll
sbb
cmovnp
lea
jo
inc
andb
cmc
jo
cmp
je
in
fldt
sarl
imul
pop
sub
imul
and
pushf
xchg
xor
mov
call
mov
cltd
sub
and
sub
out
or
repnz
shll
pop
or
xor
xor
cmpsb
push
sbb
and
push
test
jne
sub
cmpsl
inc
inc
pop
inc
cmp
or
lcall
clc
inc
jle
pop
mov
daa
imul
xchg
mov
sbb
das
cld
inc
sbb
out
dec
xor
in
mov
push
lods
cmpb
int3
stos
sub
sbb
fdivr
andb
rclb
or
repz
sub
push
gs
test
in
mov
loop
fldl
mov
scas
stos
bound
sub
mov
addr16
cmp
faddl
mov
add
mov
in
push
push
repz
inc
aas
les
das
pop
out
inc
mov
pop
fsub
cmpsb
sub
arpl
out
mov
jecxz
or
xor
sbb
jns
imul
pop
xchg
sub
add
and
mov
popa
xor
pop
jg
lret
push
sbb
push
sub
add
pop
xchg
shll
add
or
in
rorb
dec
and
add
inc
loopne
add
add
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
jmp
outsb
lods
or
mov
cmpsb
or
push
xor
scas
addl
xor
xor
mov
ret
ficoms
inc
out
fidivrs
movl
push
jp
push
out
out
and
std
mov
push
jae
ficoml
add
push
xor
jp
lods
pop
dec
sbb
pop
gs
rdpmc
mov
dec
cmp
stos
push
inc
or
push
adc
fdivrl
sarl
sub
cmp
xor
pop
fildll
cmp
sbb
pop
or
mov
stos
add
push
or
mov
adc
or
cmpl
push
pop
mov
mov
xchg
and
sbb
dec
jmp
test
xchg
add
and
adc
ljmp
xor
mov
mov
sbb
add
in
das
mov
sub
cmpsb
jne
sub
mov
sahf
inc
test
xchg
shl
mov
cmc
rcr
call
sbb
add
pop
xor
add
ret
sub
mov
ss
xor
mov
dec
cli
gs
movsb
sub
in
or
les
int
push
scas
jecxz
inc
jb
in
mov
stos
pusha
inc
push
fucomi
xor
pop
jb
cmp
sbb
stc
test
ret
and
mov
xorb
dec
bound
incb
ret
push
cmp
sub
sub
loop
inc
dec
jno
in
dec
inc
outsb
xlat
cmp
or
movsl
lock
sub
jbe
xchg
or
and
dec
loopnew
shl
bound
cmpsb
mov
lret
stc
outsl
movsb
ffree
mov
testl
mov
sub
loop
mov
shlb
nop
push
ljmp
jle
insl
scas
gs
cmp
adc
or
rcrb
pop
cld
cmp
pop
orl
xchg
rolb
push
scas
icebp
adc
mov
xor
adc
fs
pop
out
call
adc
push
sub
mov
jmp
cmp
call
or
mov
out
xor
xor
add
js
sbb
fadd
fcmovu
and
test
cwtl
int3
mov
sub
xchg
in
mov
xor
lods
outsl
jno
les
lock
pop
mov
repz
aam
sbb
push
jl
cs
ja
mov
ret
int3
mov
xchg
mov
jmp
arpl
dec
sub
nop
and
in
xchg
adc
dec
push
pop
iret
inc
inc
push
mov
adc
push
dec
push
scas
mov
cli
imul
fisttps
jbe
xorb
mov
push
addl
outsb
out
sbb
in
fldt
movsl
mov
jecxz
add
idivl
out
sbb
inc
aaa
or
pop
cmpsl
mov
cmp
and
outsb
jo
sub
in
mov
mov
mov
lock
adc
lcall
fcoms
mov
into
test
arpl
lret
in
subl
and
or
les
cmc
push
dec
adc
mov
ss
pop
dec
into
mov
push
adc
leave
sahf
data16
add
out
push
add
pop
mov
fiaddl
sbb
cli
fisttpll
lea
and
and
ficoms
pop
mov
mov
pop
jg
jb
ss
fcomi
int
jae
jle
cwtl
roll
int
dec
xor
or
xchg
xor
or
enter
aad
pop
sbb
or
cmovns
xor
cli
cmp
sbb
loope
bnd
stos
mov
enter
add
and
push
ret
aaa
adc
xor
test
aas
iret
add
xor
jecxz
bound
inc
sub
loopne
iret
ljmp
lock
jne
or
mov
jge
pop
movsl
aad
lock
jecxz
dec
mov
or
pop
les
pop
xchg
daa
mov
jge
push
add
mov
ret
stos
mov
sub
sub
arpl
jne
test
ja
or
mov
sbbb
mov
mov
in
or
stos
subl
out
repnz
jae
push
mov
adc
xor
lret
ljmp
data16
push
mov
xor
jg
sub
cmp
sub
test
aad
aam
add
sbb
lock
incb
add
in
dec
repz
pop
jmp
fbld
sbb
or
pop
push
sti
test
jg
push
jo
sub
adc
cmp
push
test
cmp
pop
lret
mov
cmp
hlt
pop
cmp
in
imul
subb
loop
push
clc
not
mov
ja
adc
mov
clc
loopne
std
popf
je
movsl
mov
cld
and
inc
dec
pop
pop
sub
add
add
test
adc
push
or
insl
jne
iret
ret
ret
cmpsl
and
jle
dec
insb
dec
lods
scas
xchg
push
ds
adc
sti
scas
add
addr16
jnp
jne
xor
jbe
lock
lahf
mov
test
pop
ja
xor
sub
sbb
xor
sub
sahf
cmp
ja
orb
fildl
rclb
sub
sub
rclb
lds
dec
movl
sub
stos
sbb
mov
in
loopne
push
ret
iret
sbb
pop
mov
xor
subb
out
adc
imul
mov
jae
mov
push
cwtl
test
outsb
ja
ljmp
fwait
push
cld
hlt
sti
cs
dec
or
or
inc
add
cs
jp
jecxz
sub
or
jo
repnz
rolb
cmpsb
decl
jp
and
call
mov
push
pop
pop
xchg
mov
in
mov
clc
mov
mov
shlb
rorb
cmpsl
in
jae
adc
xchg
mov
fsubl
movb
das
test
daa
rclb
push
adc
cli
add
adc
jno
xchg
mov
xor
jbe
fs
shl
or
lea
jmp
loopne
dec
inc
out
in
push
adc
pop
jnp
push
mov
or
addr16
mov
adc
and
mov
xchg
pop
jo
add
xchg
sar
dec
int3
pop
inc
xchg
cmp
pop
cmp
movsb
jmp
test
insl
lds
imul
mov
shll
pop
int3
mov
mov
mov
mov
test
cwtl
int3
in
lcall
sub
out
mov
ja
int
sbb
mov
add
pop
xlat
or
cmpsb
outsl
outsb
leave
clc
pop
ja
mov
hlt
sub
pop
push
scas
pop
dec
pop
test
loop
ja
mov
stc
or
dec
xchg
dec
pop
mov
movsb
push
jae
insl
fstpt
or
movsl
out
xor
and
sub
int
or
mov
push
xchg
outsb
lock
mov
out
push
mov
add
cltd
outsb
jae
and
push
inc
lods
push
frstor
pop
jo
js
or
mov
lahf
cmpsl
bnd
mov
add
mov
add
enter
ljmp
shlb
jbe
xchg
shrb
xchg
dec
les
xor
popa
outsb
test
sbb
mov
aas
mov
pop
lods
call
pusha
push
sti
jle
push
jno
mov
out
sub
popa
jae
adc
and
inc
sub
push
sub
repz
les
push
cltd
sub
popa
jns
mov
inc
jno
ficoml
and
cmp
and
mov
inc
outsb
rcll
pop
adc
fisubs
pop
jo
inc
sarb
into
in
pop
js
mov
out
or
dec
inc
pop
sub
fcmovnu
jg
lahf
lods
repz
ret
insb
out
sbb
mov
mov
pop
cmpsl
or
pusha
mov
in
xchg
gs
or
pop
or
jbe
jle
bound
sbb
out
popa
xlat
movsb
shll
cs
in
sahf
sub
xchg
jecxz
jb
mov
jnp
sub
lds
or
push
das
sbb
int3
inc
lahf
cmc
sub
stc
push
test
push
lds
lods
jbe
jge
insl
fst
or
xor
lcall
sbb
mov
stos
js
sub
or
mov
enter
cld
jno
jge
lods
jecxz
jmp
icebp
mov
xchg
xchg
and
int3
sbb
lret
fisttpl
sbb
ffreep
out
pop
push
jbe
rcr
push
fstl
xchg
in
inc
movsb
out
inc
fwait
fs
mov
pusha
cwtl
aas
or
fdivrs
dec
loopne
cmp
fidivrl
xchg
ficomps
xor
pop
fwait
cmc
jb
lahf
cld
dec
arpl
pop
into
jg
mov
shr
in
mov
xorl
pop
xor
fiaddl
lcall
fmull
mov
hlt
xchg
dec
arpl
push
or
sti
fcomi
sbb
mov
movsl
cmp
ret
adc
lahf
lea
mov
inc
dec
daa
bnd
aas
and
insl
pusha
dec
jo
jno
testb
adc
push
mov
call
ret
pop
xchg
push
xchg
inc
sbb
jbe
push
nop
mov
xchg
xchg
or
and
bswap
push
and
mov
mov
lods
mov
jbe
push
or
mov
sarl
imul
pushf
subl
in
out
push
popa
fldcw
inc
cld
sbb
fisubrs
ds
aam
repnz
dec
mov
cmp
inc
jb
inc
and
out
push
push
aaa
hlt
jns
icebp
inc
mov
pop
dec
clc
sbb
bound
popa
pop
cmp
jns
stc
cs
sub
pop
dec
sbb
cmp
lock
jg
popf
lahf
cmpl
pop
sub
adcb
inc
sub
adc
inc
or
xchg
inc
adc
lea
jae
mov
imul
shll
dec
inc
xchg
lds
push
mov
sbb
cwtl
mov
insl
js
xchg
add
sub
mov
in
jl
push
filds
sar
mov
jp
sbb
push
flds
jl
mov
jecxz
hlt
arpl
ja
xchg
push
mov
lret
jno,pn
test
sub
mov
adc
adc
sahf
jns
pop
add
int
into
push
clc
aad
shrb
dec
sbb
in
int3
fwait
dec
inc
jno
aaa
pop
push
cmp
mov
stos
jb
bound
addr16
mov
fsubrl
or
xlat
mov
leave
subb
mov
pop
push
es
mov
sti
mov
cmpsl
push
mov
arpl
call
xchg
xchg
push
mov
sub
pop
mov
adc
cmpps
iret
and
arpl
push
in
addr16
in
or
dec
in
sbb
mov
sar
popa
inc
inc
adc
mov
mull
and
push
loope
cli
hlt
jnp
scas
mov
sub
mov
push
push
xchg
cmpsb
mov
add
dec
cmp
xor
aam
sub
or
jecxz
shlb
sub
push
ret
pushf
sbb
sahf
xchg
in
push
in
outsb
clc
xchg
movsb
sar
cmpsb
pop
dec
push
enter
sub
xor
inc
mov
mov
or
mov
or
idivl
in
push
push
ror
mov
je
add
aam
imul
dec
fldl
adc
push
mov
ret
loopne
lods
inc
lods
daa
or
and
xor
push
xchg
sub
dec
sbb
outsl
in
pop
hlt
pop
shlb
inc
add
cmp
and
xor
into
cmp
outsb
mov
pop
mov
mov
and
push
fistps
fdivrp
and
and
hlt
clc
push
jb
jne
in
out
add
movsl
pop
and
mov
jmp
and
and
jae
dec
insl
mov
loopne
aaa
jb
mov
testl
popf
lret
adc
push
or
inc
jo
push
fcmovnu
outsl
push
bound
sub
iret
jmp
xor
cmc
inc
adc
addb
call
adc
out
aas
js
push
in
or
test
inc
mov
arpl
sub
es
xchg
scas
inc
mov
fnstcw
cmp
inc
pop
shll
mov
xchg
cmp
and
and
push
add
jp
divl
pop
cwtl
jne
popa
outsl
xchg
mov
sarl
or
sti
or
pop
std
inc
adc
rol
ret
adc
ljmp
add
test
dec
jno
leave
sub
ret
fcomip
pop
push
js
mov
pushf
ret
mov
hlt
lcall
inc
push
sub
imul
fdiv
rolb
imul
and
push
add
sahf
into
and
push
out
sub
sbb
pop
in
pop
add
lock
mov
mov
mov
mov
dec
test
jge
mov
inc
ss
or
arpl
mov
inc
sub
jle
mov
shll
cmp
add
mov
fisttpll
arpl
dec
mov
pop
rep
jmp
into
nop
cli
sbb
or
mov
popf
dec
jo
cmp
mov
shlb
aam
bnd
out
insb
ret
xor
test
push
cmpsl
repz
and
out
inc
test
add
or
dec
test
inc
pop
into
mov
enter
push
mov
xchg
sahf
inc
mov
mov
cmp
xchg
mulb
in
xor
lock
sbb
jo
cmp
in
arpl
clc
add
imul
and
xor
out
push
sbb
movhps
xor
out
loop
int3
fmull
aas
and
insl
xor
jmp
cli
daa
push
or
adc
jno
leave
xor
cmp
icebp
add
inc
or
sbb
mov
ja
xchg
outsl
adcl
mov
jne
and
aas
inc
xor
lret
jnp
fadds
adc
cmp
mov
mov
cld
jp
or
xlat
cmpl
or
add
lods
adc
ljmp
jb
addr16
insl
mov
cmp
jnp
pop
inc
and
rorb
mov
xorb
outsb
jmp
cld
lcall
ret
mov
adc
mov
mov
xchg
in
filds
adc
loope
add
je
mov
out
loop
dec
or
out
xor
cmpsb
push
or
cld
push
mov
cmpsl
lret
nop
adc
xchg
mov
add
mov
mov
ljmp
cmpl
sbb
sbb
mov
test
pushl
out
loop
sbb
fs
lds
clc
or
enter
jle
or
fnstsw
push
push
lret
add
ret
sbb
imul
and
cwtl
dec
sbb
mov
lods
jbe
arpl
adc
shll
xchg
push
shlb
mov
lock
cld
sub
push
jl
ljmp
rclb
sub
lods
sub
ror
mov
aaa
in
aad
enter
dec
aad
jns
sbb
faddl
in
sbbl
push
mov
js
inc
imul
xor
mov
cwtl
pop
push
jl
int
or
stc
ret
int3
lcall
pop
daa
push
xlat
shrb
cmpsl
les
mov
enter
mov
out
or
push
sbb
insl
xor
and
out
inc
pop
xor
adc
cmp
and
pop
mov
lods
scas
jne
and
pop
fbld
cmp
cmp
leave
mov
xor
mov
fidivrl
jecxz
mov
testl
fstpt
pusha
adc
lret
jge
fwait
sbb
jle
jns
dec
pop
add
jae
add
cmp
pop
pop
mov
test
mov
arpl
jecxz
or
movsl
imul
and
lret
cmpsl
mov
test
mov
out
jo
aam
mov
inc
push
jns
xor
sbb
xor
xchg
pop
scas
mov
dec
xchg
mov
subb
xor
data16
push
sarb
sub
mov
hlt
xor
mov
jae
sub
lods
pusha
and
pop
movb
push
pop
jae
scas
sbb
ljmp
icebp
enter
scas
xor
push
add
fsts
mov
adc
mov
adc
cmp
addr16
mov
sbb
push
dec
fimull
xor
fidivrl
cmp
jp
or
ljmp
les
in
push
incl
aad
repnz
mov
lahf
push
out
mov
ror
out
push
scas
jo
shll
je
test
fldl
sub
jge
lahf
adc
xor
jmp
sub
mov
dec
add
jmp
xchg
cmpsl
lret
mov
pusha
jecxz
push
mov
fpatan
scas
repz
fwait
ja
dec
add
jge
push
mov
or
nop
mov
or
nop
mov
pop
movsl
cmp
push
fiaddl
bound
push
je
outsl
mov
and
sahf
ret
in
sahf
and
int
cmp
sub
or
xor
jge
in
insl
sub
popf
mov
sub
loopnew
repz
or
cs
jecxz
xchg
stc
popf
int3
push
lcall
inc
jl
sti
jmp
arpl
imul
push
cwtl
sub
lods
mov
and
pop
xchg
jmp
pop
int
ds
imul
loop
xor
push
daa
push
and
or
xorl
pop
jp
push
push
arpl
test
shl
sub
pop
cmp
clc
es
inc
outsb
jmp
push
mov
inc
scas
jp
adc
clc
sti
cmp
mov
sahf
mov
fisubs
mov
mov
mov
ds
sub
mov
inc
in
nop
push
mov
jae
mov
int
mov
test
pop
cltd
pop
sbb
or
mov
stos
xchg
fbstp
or
lods
mov
dec
rorb
mov
and
cmc
stos
int
sbb
movsb
xor
push
gs
inc
fwait
push
adc
adc
jns
jmp
pop
cltd
gs
imul
jmp
sbb
fnstenv
loopne
push
inc
add
xchg
fs
or
xlat
movsl
out
int3
out
xchg
lahf
je
and
push
push
xlat
pop
cld
xchg
in
inc
dec
add
ja
aaa
push
xorb
pop
fidivrl
inc
cmc
xor
push
punpcklbw
into
insl
mov
int3
data16
and
cmp
jmp
and
mov
outsl
call
or
mov
stos
jb
mov
jmp
xor
les
iret
notb
mov
call
sub
mov
sti
cmp
rorl
add
sub
mov
or
mov
or
jg
adc
mov
adc
out
pop
std
sbb
iret
or
stos
scas
ds
jl
mov
fidivl
pop
in
inc
jno
push
push
pop
or
cs
sub
and
push
shrb
and
je
dec
scas
push
inc
in
in
nop
repz
sub
dec
rorb
or
gs
roll
inc
jp
xchg
filds
aad
popf
outsb
movsb
shl
test
mov
imul
fcmovnb
mov
pushfw
cwtl
mov
add
xlat
push
and
sub
or
push
inc
inc
mov
or
pop
addr16
inc
inc
rcrb
popa
cmp
dec
fdiv
jmp
jle
icebp
shlb
xor
fs
pop
insl
icebp
adc
pop
jge
sub
std
shlb
ret
loope
push
insl
push
mov
pop
fs
jg
cli
push
mov
push
dec
mov
cmp
pop
inc
daa
movsb
mov
test
pop
leave
or
rcrb
stos
push
stos
movsl
aaa
lods
insl
aas
scas
test
jge
lcall
rcrl
mov
xchg
push
test
push
adc
lret
pop
fsts
inc
fs
sbb
stos
popf
in
mov
out
inc
mov
clc
sub
andl
in
sub
mov
loop
add
mov
mov
rcll
inc
cmp
cmp
test
mov
les
dec
jo
xchg
test
ja
cmp
sbb
cmpsl
sub
fisubrl
sbb
xor
mov
and
fwait
jecxz
loop
lahf
xor
out
shll
mov
out
test
xchg
stos
add
xor
cmpsb
enter
cmp
mov
cli
mov
jecxz
pusha
testb
insl
adc
out
mov
and
lret
pop
mov
xor
pop
aas
inc
fs
mov
repz
and
push
test
movl
insl
pop
ficoms
adc
xor
xor
sti
ficoml
sbb
push
and
int3
jg
into
push
mov
es
cmp
test
sbb
imul
rcrl
lcall
decl
nop
cmp
fadd
add
and
dec
aam
gs
imul
or
sbb
hlt
imul
xchg
lret
mov
lods
pop
rcrl
pop
mov
out
in
loop
jmp
out
lds
pop
sub
pop
xchg
enter
in
dec
push
adcl
pop
sub
mov
sbb
inc
lods
jb
ds
stc
into
inc
sub
or
xchg
lret
push
push
mov
cli
jl
fcom
sbb
add
sub
scas
sbb
dec
add
jne
push
xchg
cmpsl
int
stc
cmp
inc
mov
or
mov
push
nop
mov
fxch
sub
lret
ds
inc
in
push
dec
pushf
lea
data16
popf
jno
add
es
out
or
inc
lcall
clc
out
scas
jp
dec
mov
cmp
das
aad
scas
mov
lret
or
push
xchg
std
xchg
mov
sar
enter
adc
je
stos
pop
jne
add
adc
loope
addr16
imul
in
push
xchg
fucom
aam
and
and
jmp
dec
mov
lret
adc
mov
fdivrs
out
testb
adc
rolb
adc
xchg
xlat
out
inc
adc
cmp
je
jmp
aas
icebp
adc
lock
adc
fldenv
dec
adc
repz
inc
sub
mov
mov
cmp
out
cmp
ja
out
les
orl
xchg
inc
adc
or
arpl
mov
push
push
inc
or
inc
or
orb
cld
xor
out
repz
lods
cmpsb
push
adcl
lds
cmp
add
lods
mov
popa
out
cli
jle
xchg
pop
push
icebp
gs
sub
movsb
shlb
sub
out
popf
adc
data16
add
inc
test
inc
rcl
inc
stc
adc
dec
enter
mov
les
cmc
xchg
cltd
jg
adc
mov
mov
ds
mov
and
mov
leave
das
sub
cmpsl
out
test
jne
fsts
cmp
out
jnp
jns
in
xchg
mov
sub
mov
add
mov
je
aaa
jle
pushl
jnp
test
outsl
ds
add
mov
imul
ret
pop
sbb
popf
repz
nop
pusha
push
addr16
inc
fcoml
shrb
jle
dec
mov
insb
dec
or
clc
pushf
jns
sub
inc
dec
jae
inc
mov
inc
inc
jg
push
repz
dec
mov
pop
lds
sbb
inc
mov
les
pop
jae
loope
pop
shlb
pushf
pushl
cmp
jmp
movsb
rol
aad
repnz
or
popa
push
js
mov
gs
rcll
xchg
xor
notb
sub
mov
xor
outsb
push
push
js
cmp
fsubl
aam
outsl
enter
and
sbb
fsubrs
xor
fimuls
sub
stc
sub
cmp
movsl
ds
or
and
dec
addr16
ret
pop
add
and
test
jne
repz
xor
jp
mov
pop
jge
xchg
in
cmp
je
outsb
je
sub
mov
cmp
mov
cli
add
aaa
pop
mov
sahf
sbb
push
test
scas
push
push
or
mov
sbb
aaa
stos
pop
and
lds
and
adc
mov
add
stos
int3
push
mov
xor
pop
aad
inc
ds
push
mov
sbb
lahf
insb
mov
push
mov
int3
scas
sarb
dec
sbb
std
cs
cmp
or
sub
dec
mov
sbb
cmc
aaa
out
lcall
push
mov
jle
or
mov
movsb
icebp
out
sbb
hlt
ficoml
clc
cmp
sbb
dec
insl
jns
icebp
lods
cld
push
sarl
stc
std
push
mov
pop
inc
addr16
push
in
sahf
push
xchg
inc
mov
dec
jge
leave
fistpl
rolb
out
mov
push
aad
jns
and
mov
jle
xchg
sbb
jo
pop
lahf
and
sub
pop
cmp
mov
mov
std
jb
jbe
idivl
mov
sbb
dec
sub
test
mov
sbb
aas
leave
cmp
cmp
jno
dec
pop
loop
cmp
bound
loop
in
xchg
sbb
scas
leave
mov
pop
dec
or
aaa
loop
or
sub
fidivs
pop
nop
int
pop
insl
adc
inc
adc
movsb
push
jle
jne
xor
imul
std
call
inc
jae
dec
xchg
mov
xchg
mov
notl
or
lcall
push
out
xchg
scas
fistl
rolb
gs
sbb
mov
outsb
or
mov
faddl
fcompl
leave
shl
add
push
xchg
and
pop
jl
push
mov
lahf
xor
push
mov
sub
sub
or
cmp
sahf
xchg
icebp
cmpsl
pop
xchg
or
int
push
iret
lock
flds
push
in
push
sahf
arpl
mov
cmp
mov
addr16
lods
dec
cmp
xlat
out
mov
fidivl
adc
rclb
push
mov
fisubrs
adc
or
xor
and
int3
dec
fbstp
mov
out
lods
xor
sbb
jo
or
sarl
sub
mov
into
dec
cmpsb
leave
ja
daa
mov
lods
jbe
sti
mov
add
add
in
fisubrs
aad
xlat
mov
mov
iret
std
loopne
jo
sbb
ljmp
push
push
stc
xchg
inc
fcmovu
lea
rol
pop
lods
xor
lret
cmp
push
jp
sbb
pop
adc
arpl
orl
ret
cmp
and
cld
push
push
pushf
add
iret
push
mov
rclb
pop
inc
out
fs
inc
movsl
ljmp
cmp
cld
shrl
inc
loop
stos
bound
and
lcall
insb
rcll
jns
cli
add
repz
xor
lret
int3
and
js
mov
add
les
pop
jbe
xor
sbb
ret
cmp
adc
inc
add
std
mov
ja
sub
outsb
mov
jo
scas
jae
ret
xlat
insb
fbstp
inc
inc
ljmp
movsb
pop
pop
mov
pop
jno
gs
xchg
dec
mov
test
cld
adc
adc
in
imul
xchg
pushf
ljmp
ljmp
fidivl
cmp
mov
test
ret
icebp
iret
xchg
xchg
int
scas
ret
in
les
lcall
cmc
xchg
pop
stos
notb
jmp
jnp
mov
or
pushf
addb
jmp
dec
sbb
mov
daa
stos
cvttps2pi
xchg
jne
xchg
and
pop
jae
jnp
add
inc
or
pop
push
jnp
dec
xchg
push
call
xchg
in
out
rcr
dec
test
push
mov
xchg
int
mov
lahf
jle
enter
sarl
fdivrs
dec
mov
and
daa
jnp
mov
push
push
fstpt
icebp
and
cwtl
push
fildl
stc
test
test
sub
es
mov
mov
inc
lods
sbb
mov
mov
mov
xchg
jns
dec
jle
in
dec
in
roll
test
mov
push
cmc
iret
lds
fimuls
dec
jmp
jle
ljmp
cld
inc
inc
jnp
lahf
in
mov
jle
dec
adc
cmp
inc
lret
in
imul
aad
xchg
sub
xchg
mov
out
inc
mov
cmp
pop
xchg
push
test
loopne
or
cs
fisubl
xchg
shrl
inc
mov
mov
xchg
jmp
xchg
mov
es
sbb
movsl
stc
clc
xor
insl
add
xchg
daa
mov
lret
ljmp
and
outsl
mov
mov
mov
outsb
test
lahf
sahf
test
mov
sbb
adc
sub
mov
fistpl
movsl
popa
fnsave
lcall
addb
mov
outsl
shlb
xor
xbegin
mov
and
in
inc
push
pop
mov
jnp
jae
pop
xchg
push
cmp
jbe
sti
pop
adc
push
mov
pop
iret
sarb
cmc
xor
es
jg
cmp
or
push
pop
cmpsb
adcb
cli
mov
ret
xchg
cmp
flds
test
out
mul
mov
sbb
mov
dec
dec
scas
cli
pushf
xor
inc
idivb
iret
inc
xor
add
push
sbb
inc
jg
loope
xchg
inc
testb
cltd
inc
sub
cmp
mov
mov
ljmp
xchg
sub
push
shrb
xor
lret
dec
xor
xchg
xlat
sbb
in
mov
add
cmc
sbb
adc
fidivrl
and
adc
sub
aas
shrb
bnd
mov
sub
push
mov
insl
cmp
leave
fsubr
repnz
add
into
stc
and
and
aas
mov
xor
hlt
out
jae
lahf
mov
xchg
stos
ss
aas
lock
popa
jp
sahf
iret
mov
repz
loop
lret
call
add
jb
add
loopne
add
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
and
movl
andl
mov
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jb
mov
xorl
mov
mov
sbbl
xor
xorl
add
mov
and
mov
and
xor
xorl
push
xor
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
movzbl
or
mov
mov
subl
xor
mov
add
andl
mov
inc
mov
cmpl
jl
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
mov
movb
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
pushl
call
jmp
lea
incl
mov
mov
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
call
cmpl
jb
mov
xor
movl
add
andl
mov
sbbl
movl
push
movl
movl
cmpl
je
cmpl
jl
jmp
push
push
push
call
mov
dec
mov
jmp
mov
or
push
mov
xor
xor
or
xor
mov
sbb
mov
mov
push
add
jmp
incl
mov
mov
inc
movl
cmp
jb
not
mov
xor
movl
add
jmp
movzwl
or
mov
adc
mov
adcl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
add
addl
movzwl
sbbl
mov
movzwl
and
mov
sbbl
movzwl
xor
add
mov
movl
mov
mov
inc
not
mov
movl
cmp
jne
and
mov
sub
mov
xorl
xor
and
add
mov
mov
sbbl
xor
add
adc
mov
addl
movl
movl
movl
movl
mov
movl
cmpl
je
cmpl
jb
jmp
push
push
call
mov
dec
mov
jmp
mov
mov
xor
add
movzwl
mov
mov
je
mov
subl
mov
xor
xor
notl
sub
notl
sub
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
subl
mov
mov
movl
add
andl
imul
mov
xor
mov
mov
add
mov
add
incl
or
mov
mov
mov
sbbl
add
xor
mov
dec
mov
add
mov
add
and
and
mov
xor
mov
subl
mov
lea
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
pushl
call
cmpl
jb
mov
or
mov
sub
movzwl
and
add
mov
andl
mov
xor
adcl
add
movl
jne
movl
jmp
xorl
mov
subl
sub
xor
movl
cmpl
je
cmpl
jbe
jmp
push
call
xor
or
dec
mov
jmp
mov
subl
mov
mov
xor
decl
xor
adcl
sub
sub
xor
mov
mov
mov
jmp
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
push
push
call
mov
dec
mov
jmp
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
addl
imul
mov
andl
mov
inc
mov
cmpl
jb
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
mov
addl
add
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
jmp
mov
mov
andl
add
movl
xor
mov
subl
mov
mov
xorl
add
xorl
and
or
mov
mov
sbb
mov
xorl
mov
lea
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
jmp
rcr
sbb
mov
nop
cs
or
mov
addl
add
cli
cld
popf
add
out
daa
inc
pop
nop
dec
or
nop
fnstcw
fdivs
fs
pop
sbb
pop
subl
sub
in
imul
jp
shlb
adc
bound
jns
add
xorb
int3
aad
mov
mov
mov
mov
push
nop
xor
and
mov
xchg
dec
mov
lahf
clc
pushf
call
testb
cmp
mov
repz
lret
push
add
sbb
push
subl
rcrb
lea
mov
jb
repnz
adc
mov
std
push
push
adc
sub
xchg
popf
sbb
lret
add
mov
sub
dec
pop
pop
jbe
scas
fisubl
out
cltd
das
xchg
jecxz
and
push
jl
jb
cmp
or
sbb
aaa
filds
pop
into
repz
cmpsb
jne
jae
xor
hlt
mov
loopne
pop
sub
xor
jmp
jne
test
mov
fadds
lahf
stc
and
jne
lret
cmp
fnstcw
mov
pop
mov
cmp
or
add
decb
aad
add
imul
bound
push
add
xor
sub
call
jl
aad
out
rolb
lcall
push
xchg
loop
inc
adc
pushf
aaa
outsb
mov
movsb
sbb
cmc
sti
mov
and
dec
xor
inc
mov
in
insb
test
ljmp
sbb
mov
outsl
icebp
sbb
pop
and
mov
popf
jmp
out
mov
xchg
jmp
movb
dec
lds
insb
or
sub
fcompl
xor
mov
cmp
dec
arpl
ret
sbb
mov
sub
lea
mov
push
xchg
xlat
rorl
xor
cwtl
ss
ss
xchg
loop
jp
sbb
pop
pushf
xor
push
fisubrl
loopne
mov
sbb
idivl
lahf
or
jecxz
dec
repz
dec
cld
loope
movsb
mov
es
xchg
pop
pop
inc
add
dec
xor
xlat
lods
into
mov
mov
and
xchg
ds
jnp
out
pop
inc
lret
lods
xchg
in
xchg
xchg
pop
mov
decb
push
and
or
cmp
pop
xchg
lods
cmp
sbb
ljmp
gs
sbb
ja
mov
and
add
pushf
fldl
lods
nop
cmp
mov
fdivrs
xor
jmp
shr
lds
enter
stos
test
xor
shll
filds
in
xlat
aas
xor
into
mov
xor
gs
rclb
sub
add
mov
mov
outsl
ljmp
call
mov
out
add
mov
pop
cs
xchg
fcomip
and
mov
sub
mov
dec
push
fmuls
cs
notl
adc
pop
push
fs
jecxz
lods
cli
cli
add
rcr
stos
mov
in
es
out
imul
pushf
xchg
test
ror
dec
loopne
fisttps
ds
scas
negl
ja
into
mov
out
scas
lods
xchg
pop
divb
stc
add
sbb
adc
mov
mov
clc
into
imul
add
adc
or
int
cltd
imul
jns
test
push
rcrb
xchg
scas
idivb
dec
pop
mov
daa
imul
icebp
push
dec
mov
out
cmp
out
cli
fcomps
and
sub
sub
repz
loop
cwtl
or
push
and
fs
rorb
jle
into
sub
notb
movsl
xchg
xchg
popf
loope
xchg
pop
or
test
mov
inc
js
nop
orl
fidivrl
insl
cmpsl
movsl
sbb
mov
jmp
xchg
pop
fidivrs
iret
aam
fstl
inc
jmp
inc
inc
pop
notb
mov
xchg
ror
pop
cli
sub
xchg
daa
inc
outsb
lods
mov
in
mov
mov
arpl
jmp
test
mov
cli
mov
fistl
push
sti
xor
jge
aad
dec
xlat
or
fstps
lea
sti
sub
repz
je
je
test
std
nop
cmpsb
repz
mov
inc
push
repnz
and
pop
jmp
shlb
popa
inc
imul
add
stos
aaa
std
cld
dec
push
mov
xchg
adc
inc
mov
ret
in
std
imul
call
sbb
pop
fsubrl
mov
into
stos
pusha
mov
mov
test
lea
mov
pop
xor
pop
in
repz
hlt
fwait
jne
insb
cwtl
call
or
data16
push
inc
and
mov
adc
jg
ds
rcr
sar
lahf
sahf
roll
rolb
lahf
mov
push
xor
adc
xor
fbstp
mov
out
leave
push
daa
loop
outsb
sub
pop
mov
imul
fdiv
push
mov
addl
lods
xor
xchg
fisttps
xlat
call
and
cmp
cs
iret
mov
repz
mov
xor
repz
dec
mov
jmp
xor
xchg
xchg
aas
jo
dec
sbb
or
mov
push
sub
inc
test
es
sub
in
mov
scas
into
stc
sti
sbb
xor
loop
es
inc
push
in
sub
or
out
adc
int
or
inc
cltd
insb
push
and
add
jl
cli
pop
js
and
jbe
sbb
pop
or
inc
xchg
mulb
jnp
in
movsb
mov
push
dec
lods
inc
mov
cmp
fdivp
pushf
xchg
and
or
sbb
push
pop
xor
popf
ljmp
call
or
mov
lock
insl
iret
xchg
sbb
jns
imul
jecxz
repz
xchg
sti
inc
jbe
push
dec
icebp
cmp
dec
inc
shlb
clc
mov
loop
loope
aaa
lcall
mov
and
es
xor
cld
scas
addl
rcrl
dec
repz
inc
repnz
sbb
add
repnz
sarl
xor
cmp
pop
arpl
nop
jae
lahf
aaa
or
imul
insl
divb
les
jae
and
fisubrl
aas
jno
mov
jle
inc
push
pop
add
jns
in
dec
stos
xor
lahf
cmp
out
add
pop
gs
out
adc
test
cmp
push
mov
mov
repz
jne
nop
fldl
and
cmp
pop
sbb
inc
das
jle
or
out
xchg
jne
sbb
pop
mov
roll
cmp
dec
sbb
ret
dec
sub
aaa
add
push
lods
add
xchg
and
sbb
jbe
jg
xchg
stos
jbe
jno
xor
mov
push
or
out
andl
into
imul
pop
or
sbb
mov
out
mov
clc
sub
leave
pop
cmp
arpl
hlt
inc
push
push
mov
faddl
sub
inc
or
and
sbb
fdiv
adc
sub
lds
xor
insl
push
pop
lds
inc
cmp
jbe
pop
mov
fdivrs
sbb
in
in
outsl
cmp
or
xor
faddl
sub
and
fmuls
mov
int3
in
je
cmpsl
stos
fdivrs
mov
and
and
ret
fwait
sti
mov
mov
mov
add
aam
mov
xor
icebp
mov
jo
es
insb
lret
rorb
xchg
pop
aam
push
push
sbb
js
xlat
dec
dec
xchg
or
lock
pop
xlat
add
incl
inc
xor
push
push
pushf
decb
cmp
inc
fs
hlt
cltd
jnp
inc
out
imul
or
inc
movsb
repz
movsl
push
dec
mov
push
in
sahf
sbb
jg
push
lcall
xor
test
cmpsl
or
mul
sarb
faddl
mov
jne
pop
out
pushf
cmp
jge
movsl
scas
inc
mov
adc
xor
or
shll
cmc
je
jp
jg
or
sbb
mov
add
xchg
mov
mov
sub
cmp
loop
push
mov
sub
js
ret
mov
lods
popf
aam
push
xor
daa
scas
stos
mov
fnstcw
cmp
loopne
daa
std
rol
jno
enter
fcomip
hlt
dec
arpl
ss
dec
enter
cmp
stos
outsb
jl
or
fdivrl
add
scas
sub
lock
mov
popf
sbb
aam
or
adc
xchg
pop
lock
pop
and
and
popa
add
data16
bound
dec
inc
mov
mov
add
ss
aad
mov
out
cmp
xor
pop
jmp
pop
mov
jge
xor
mov
pushf
cmp
lock
test
sbb
mov
sbb
or
insl
cwtl
ret
mov
dec
test
mov
mov
mov
ret
popa
xorb
cld
jp
adc
sti
jb
inc
xchg
push
fcoml
inc
jne
hlt
jo
addl
and
mov
add
mov
jbe
jo
icebp
loopne
loopne
lea
mov
jae
addr16
clc
pop
into
cmp
lcall
and
jge
or
shll
add
sub
ds
sbb
mov
es
dec
cmp
bnd
xor
iret
nop
shlb
sub
cmp
movsl
inc
and
jb
fs
hlt
in
dec
pusha
mov
ds
fs
scas
xchg
test
lcall
mov
popf
jnp
pushf
int3
out
sbbb
cmpsl
shlb
outsl
dec
fisttpl
pusha
jp
xor
orb
jg
ret
adc
sub
push
ds
pop
cld
sbb
mov
into
das
mov
subl
sbb
sbb
push
mov
cmp
xchg
mov
inc
inc
daa
rcr
shrb
js
pop
popa
pop
inc
lods
mov
mov
or
adc
loopne
daa
push
andnps
xchg
arpl
mov
gs
jae
cmp
dec
xlat
test
pop
pushf
out
cwtl
push
cld
xchg
dec
incb
int3
and
mov
fbstp
lahf
hlt
jmp
dec
sub
lret
inc
mov
leave
jge
cltd
cmp
xchg
push
xor
lcall
sahf
std
test
scas
xlat
add
adc
inc
pop
cmpsl
aam
pop
std
xor
push
xor
and
adc
ja
fisttpl
xchg
cmp
mov
xchg
shrb
mov
cmpsl
call
push
mov
push
jl
jg
std
icebp
xor
jmp
ret
dec
or
adc
add
pusha
leave
outsl
stos
push
js
mov
jmp
add
test
int
lret
cld
scas
movsb
dec
xor
lahf
and
mov
ficoml
xchg
aaa
out
imul
add
popf
xor
jno
out
sub
sub
lret
idivb
mov
int
pop
inc
sbb
inc
negl
sbb
mov
rcll
ret
fcom
int
xchg
jl
adc
loop
ret
sub
adc
jbe
push
or
and
arpl
xchg
jno
pop
loop
xchg
mov
pushf
call
jmp
mov
adcb
scas
push
in
rcr
pop
or
js
arpl
bound
dec
js
adc
add
push
les
push
adc
clc
mov
mov
cmc
outsb
aam
adc
pop
lcall
cmp
mov
loope
mov
mov
out
xchg
mov
push
mov
mov
jle
mov
jno
push
imul
js
outsl
or
or
lds
cmc
call
rcrb
insl
inc
add
push
jbe
jge
cwtl
scas
cltd
xchg
pop
inc
dec
cmp
outsl
les
dec
xchg
push
divb
cmc
push
push
and
in
lods
out
and
aas
xchg
loope
and
mov
push
cwtl
inc
lods
call
sub
mov
in
jp
enter
and
push
cmp
push
icebp
pusha
orl
mov
js
jecxz
int
and
jecxz
int3
adc
std
push
xchg
incl
jnp
clc
and
sub
fst
or
add
jg
das
nop
je
push
nop
dec
mov
mov
mov
rep
jge
enter
cmp
xchg
push
test
push
pop
lcall
xchg
mov
jle
pop
lahf
addr16
lea
out
cmpsb
stc
and
push
ss
or
scas
fs
cmpsl
mov
pop
les
add
cmpsb
sahf
add
add
sti
clc
xor
imul
insl
stc
sub
inc
sub
or
hlt
je
add
lods
aam
pop
push
and
cmp
shrb
sahf
dec
mov
fdivrs
xor
sbb
ljmp
mov
jbe
js
sbb
add
push
addl
scas
jae
movsl
int3
lret
jge
add
push
outsl
sub
es
push
or
dec
cmp
adcb
ja
xchg
js
cld
mov
xor
outsl
addr16
dec
push
or
push
sahf
int3
aas
or
loope
or
je
rcll
clc
icebp
xchg
andl
icebp
jg
inc
scas
push
outsl
mov
xchg
jp
inc
sahf
in
addr16
fimuls
cmp
mov
and
cli
mov
sub
inc
lret
lahf
mov
in
or
pusha
rorl
out
dec
adc
dec
adc
cmp
push
xor
push
cmp
mov
loopne
jno
ret
imul
clc
shlb
pusha
aas
mov
aam
dec
cmp
cmp
lock
mov
mov
jae
out
repnz
and
jl
ror
into
xlat
shl
and
inc
adc
aad
lods
loope
mov
sarl
mul
inc
and
mov
cmp
addr16
mov
inc
and
sub
fwait
dec
sbb
aad
jo
daa
sbb
out
arpl
xchg
push
push
mov
divb
sub
dec
in
jae
iret
lods
sahf
cmc
pop
sahf
stos
dec
mov
and
jb
xchg
xchg
inc
clc
jo,pt
sub
inc
arpl
xlat
movsb
pusha
outsl
insl
and
sub
adc
add
dec
cld
xchg
xlat
inc
leave
inc
jbe
push
negb
jb
or
inc
in
cli
sbb
dec
jg
jne
sbbl
ret
repz
xchg
or
xchg
jb
loop
leave
test
mov
pop
jp
stos
mov
imull
ss
push
inc
mov
das
xlat
jo
sub
inc
insl
mov
mov
push
mov
mov
push
dec
imul
nop
add
lds
fldcw
out
addr16
jno
out
jbe
jns
xor
cmpsl
clc
rorl
cmc
and
mov
inc
movsl
out
mov
mov
outsb
add
fimuls
add
push
jbe
imul
scas
stc
xchg
out
pushf
or
mov
pop
push
mov
jg
cvtpi2ps
sub
fwait
loop
jo
cmc
mov
std
push
xchg
out
in
jns
sub
es
movsl
push
xor
add
inc
ret
outsl
mov
aaa
mov
mov
gs
mov
sbb
fwait
dec
arpl
lahf
rolb
scas
mov
add
cmp
jge
and
jae
nop
sahf
fistpl
xlat
je
out
cli
cmp
xchg
leave
push
mov
push
add
aad
pop
xchg
lret
lret
adc
adc
push
repnz
lods
stc
jmp
sbbl
mov
mov
data16
pop
xor
mov
push
jp
ljmp
ret
mov
mov
cmp
in
data16
les
std
mov
lahf
pop
ja
jno
nop
stos
addr16
loopne
xor
outsb
fwait
insl
jmp
cmp
inc
dec
lods
cmpsl
xchg
mov
ror
aaa
jns
shl
in
std
push
ret
sbb
loop
xchg
pop
inc
mov
cmp
push
in
stos
lret
popa
adc
or
add
sub
sub
or
fmulp
mov
mov
movsb
fistpl
push
nop
rcl
pushf
mov
dec
xchg
out
fwait
or
pushf
inc
cmp
int3
fstpt
pusha
enter
xor
adc
pop
ret
fdivr
mov
mov
sarb
out
mov
sub
xchg
cli
rorb
sub
andl
xchg
mov
cltd
pushf
popa
fs
clc
fwait
adc
aad
out
call
pop
mov
adc
sahf
and
sub
mov
push
lods
adc
aas
test
dec
je
xor
lods
cmpsl
xor
arpl
fnstsw
mov
call
mov
aas
push
xor
xchg
pop
add
cmp
fucom
jno
stc
cltd
fwait
std
xor
jne
loopne
int3
add
ds
sub
add
jnp
mov
in
mov
cltd
add
bound
pushf
cmp
push
and
jns
fisttps
or
xchg
cmp
testl
clc
mov
js
dec
pop
movsb
shll
fidivs
pusha
cs
insl
clc
loop
es
and
in
sub
mov
xchg
popl
repnz
loopne
jmp
mov
cmpsb
pop
mov
xor
les
mov
aad
leave
and
mov
mov
fst
movsl
xor
mov
cmp
lds
xchg
negl
in
xor
pop
mov
pop
sub
jae
fcmovnu
cmpsl
and
mov
inc
xor
or
in
xor
loope
stos
add
sarb
les
int
lods
cmp
xor
hlt
shll
mov
fdivr
lock
xor
mov
sub
mov
xchg
lret
fmulp
and
cmp
jmp
cmc
inc
mov
xchg
aam
fucomi
das
cmpsb
jae
pop
jmp
repz
mov
mov
jne
add
pop
mov
mov
subb
fs
call
lods
or
jae
sub
inc
pop
jecxz
out
inc
std
jb
xor
outsb
xor
fwait
sub
es
cmpsb
inc
sub
sar
add
movsl
out
daa
movsl
ds
stos
push
sbb
and
add
addb
push
mov
cmp
shlb
testb
mov
dec
jecxz
jmp
js
sbb
shrl
sbb
sub
sbb
jg
arpl
cmc
mov
stc
roll
imul
sbbl
lahf
popa
dec
add
ror
ja
bound
je
adc
loop
dec
mov
mov
mov
push
js
aaa
cmp
xor
mov
lds
outsl
aas
outsl
or
xlat
jle
add
clc
in
dec
add
ljmp
aam
adc
test
pop
cmp
jecxz
and
pushf
out
pusha
or
add
jb
mov
adc
mov
lock
shll
inc
and
aaa
ss
push
and
clc
xchg
adc
mov
adc
clc
mov
adc
scas
inc
xor
lods
jne
scas
in
and
and
adc
cmp
ss
stos
cmp
es
leave
sbb
ret
daa
mov
out
in
and
jmp
fsub
imul
loope
pop
jbe
daa
adc
leave
shrb
out
jns
ja
add
int
inc
mov
sbb
adc
pop
ljmp
push
cltd
test
xor
pop
push
dec
cmp
lcall
int
out
or
sub
stc
shr
int3
dec
inc
inc
mov
or
sub
out
cmpl
push
mov
push
push
mov
pop
jns
sub
add
fists
mov
mov
cmp
or
test
mov
dec
sahf
mov
icebp
popf
divl
and
mov
mov
add
mov
mov
bts
push
outsl
push
ljmp
mov
lret
mov
arpl
jge
jnp
ljmp
add
fidivrs
mov
cwtl
adc
fistl
add
aaa
cmp
pop
inc
cmp
pop
xchg
mov
jmp
call
xlat
xchg
xor
xchg
add
cmpsl
adc
pop
ja
mov
mov
test
testb
outsb
xchg
insb
pop
pop
and
cwtl
int
movsl
mov
rcll
test
cwtl
pop
aaa
inc
push
pop
sub
mov
sti
sub
xlat
xor
sahf
pop
or
or
cmc
xor
and
push
xor
inc
xchg
test
or
mov
adc
insb
add
jecxz
sbb
inc
and
dec
lods
fiadds
push
bound
add
cmp
fst
push
in
outsl
push
sbb
sub
mov
push
lea
add
sub
jl
cld
pop
xchg
xor
adc
insl
jg
cwtl
enter
or
inc
cmc
mov
lods
sbb
adc
mov
ljmp
clc
push
aaa
into
imul
test
ret
lea
jecxz
lret
scas
xor
fwait
leave
ss
inc
xor
fxtract
jl
scas
popa
aaa
xchg
fldt
or
retw
int3
xlat
aaa
push
fcomps
aam
nop
loopne
adc
fldcw
enter
pop
jle
ss
pop
aas
ret
ja
shl
mov
mov
lods
ds
adc
push
mov
xchg
cmp
dec
in
ds
lret
jae
jno
xchg
xchg
cmovl
jb
inc
xchg
test
xor
xchg
xchg
and
call
scas
int3
into
lret
sub
cs
jp
out
bound
lods
data16
fildl
pop
fisttpl
add
mov
xchg
cmpsl
sbb
loop
sbb
lret
popa
in
sub
cmp
mov
das
and
pushf
jge
cmp
mov
bnd
sbb
stos
add
push
scas
sub
enter
pop
mov
arpl
adc
lods
or
push
dec
int3
jg
cltd
in
sbb
enter
lahf
and
xchg
xorl
mov
pop
popa
mov
dec
jne
push
push
gs
mov
test
inc
and
hlt
or
pop
insb
adc
or
popa
gs
add
push
cmp
xchg
shlb
stos
or
pop
push
sti
mov
dec
mov
mov
jecxz
cmp
in
aam
leave
mov
lods
cmpsb
stos
jmp
dec
lock
sbb
shll
cld
mov
mov
pusha
test
push
cmp
mov
repz
adcl
cmp
jnp
test
jo
lods
push
mov
dec
mov
or
pop
test
pusha
cmp
xor
iret
inc
xchg
js
cli
cmp
push
stc
stos
xchg
mov
and
fnstcw
jb
push
add
and
jns
daa
cmp
pop
ja
mov
test
ss
out
fstpl
jecxz
mov
cmovo
mov
push
maxps
dec
mov
sub
test
dec
pop
sub
mov
data16
shll
fists
and
xchg
into
cmc
jo
or
add
sub
enter
es
pop
lods
jg
xor
sbb
sbb
pop
push
and
repnz
stos
mov
out
sbb
pop
jle
jns
cmp
mov
in
test
fnstenv
mov
lahf
pop
filds
inc
js
outsl
aad
lret
ds
das
pop
sbb
dec
ror
arpl
pop
faddl
outsb
jns
cmp
xlat
jb
ljmp
iret
sub
sub
outsb
js
sar
pushf
mov
xchg
jb
loopne
jb
sti
cmp
ds
stos
scas
iret
in
fcoms
mov
pop
mov
sbb
fs
je
insl
dec
insb
ds
and
dec
mov
leave
std
jecxz
dec
cmpsb
mov
mov
add
dec
sbb
cmp
mov
rolb
push
pop
jle
lret
jge
push
jb
inc
daa
dec
add
xchg
fistpl
lds
add
pop
mov
cmp
mov
mov
sub
jg
jb
loope
inc
aad
lds
xchg
cmp
cmp
movsl
mov
lcall
inc
ja
xchg
adc
repz
jb
pop
sub
dec
decb
scas
les
push
inc
xchg
iret
sub
fildl
jne
test
cmpb
in
mov
js
jmp
iret
mov
cmpsl
sti
lcall
lret
or
mov
push
popa
sbb
mov
push
ja
or
mov
aaa
je
xchg
lds
imul
lods
or
rolb
insb
or
subl
push
jne
lcall
or
adc
stos
or
pushl
aam
jle
mov
imul
xchg
mov
lahf
sub
test
ds
daa
adc
sbb
push
sub
mov
into
cld
or
adc
dec
jb
sti
jge
pop
out
lods
mov
popf
inc
or
scas
xchg
mov
lods
and
push
repz
sbb
mov
insb
mov
push
imull
cli
pop
test
out
jle
jmp
loope
push
mov
mov
mov
sub
lahf
shll
add
or
push
daa
sbb
pop
movsb
cmc
rcrb
or
push
sbb
and
aas
sbb
scas
or
sahf
ficompl
lret
push
sub
xor
data16
mov
arpl
mov
mov
pushf
cmp
inc
out
pop
jb
jle
mov
lods
out
adc
stc
outsl
push
pusha
adc
loop
lods
push
lcall
cs
inc
notl
sbb
int
adc
add
lods
addr16
push
jno
lea
adc
addr16
ds
add
and
lds
pop
sbb
mov
add
pop
xor
adc
pop
test
or
bound
jbe
jno
bound
xchg
adc
add
popf
ret
rclb
mov
test
ret
lahf
addr16
xchg
das
xchg
in
xchg
sub
mov
or
icebp
and
leave
pop
bound
or
lret
mov
mov
leave
aas
push
cmp
imul
out
pop
mov
sbb
xchg
sub
negb
mov
jnp
xchg
and
addb
inc
lret
fwait
stos
out
xor
pop
mov
fstpt
sub
aad
inc
cli
lods
push
bound
cmp
sbb
insl
dec
stc
cmp
insl
jecxz
test
pop
insl
cmc
icebp
repz
mov
pop
popf
ja
enter
aad
lods
sub
aad
std
xor
sbb
mov
rclb
push
push
adc
cmpsl
repnz
add
fcomp
movsl
dec
popa
mov
cmp
and
fcmovb
dec
jle
or
and
dec
mov
lea
jbe
cltd
mov
inc
lret
lods
dec
sbb
hlt
popf
or
and
loope
xor
popf
lahf
cs
mov
xchg
pop
jmp
cltd
mov
nop
loope
jmp
sub
popa
adc
add
xor
outsl
stos
movsb
call
insb
outsb
fldl
lcall
xchg
push
dec
adc
cmp
push
outsl
imul
mov
xchg
push
std
mov
and
gs
xchg
aad
outsb
mov
imul
sub
repnz
in
fistpll
xchg
aas
lahf
out
push
xlat
test
lahf
jno
test
lahf
or
fisubs
adc
fwait
jmp
cli
sub
outsl
popa
xor
sti
mov
inc
xchg
push
mov
and
pop
jae
pop
aam
xlat
pop
int3
lret
xchg
sbb
inc
sbb
fst
inc
adcl
mov
dec
xor
push
xor
movsb
aas
adc
nop
xchg
xor
pop
jne
cmp
push
fisttpl
jno
iret
ret
xchg
push
aam
sbb
sbb
cmpsl
pop
cmpsb
out
in
inc
ret
pop
idivl
lcall
xor
and
inc
lds
xchg
aam
inc
sub
fcomp
fs
shl
sub
cmp
and
jg
jmp
in
sarl
lret
scas
shlb
pop
jno
mov
bound
insl
addr16
jne
xchg
add
mov
out
cmp
sarb
adc
scas
pop
lcall
jbe
inc
in
aas
ja
mov
mov
cld
dec
push
xor
xchg
mov
cmpsb
push
clc
loop
inc
adc
sub
jnp
lret
push
add
mov
ret
ds
xchg
cs
pusha
mov
shlb
test
xchg
add
sbb
imul
rcll
sub
std
shrb
cld
stos
movsb
lods
popa
in
dec
mov
push
sub
sub
inc
arpl
and
add
inc
lods
dec
jo
cltd
fistps
xor
mov
loopne
adc
into
mov
repz
push
jno
adc
dec
insb
or
sbb
inc
ds
fdivrs
add
lret
pop
push
xor
xchg
enter
dec
aaa
push
fbstp
jb
pop
imul
lcall
dec
mov
sub
cmp
shll
push
popf
mov
add
mov
and
mov
mov
pop
jmp
inc
or
addr16
xor
xchg
or
inc
jmp
loopne
shlb
fidivs
fwait
mov
inc
xor
cmp
icebp
sbb
out
pop
mov
dec
mov
sbb
mov
jno
sbb
cmpsb
fildll
pop
das
mov
leave
decb
aas
push
in
mov
aas
popa
cmp
fldenv
sub
dec
aas
mov
in
adc
xor
nop
addr16
hlt
push
mov
shl
pushf
cmp
adc
xor
cmp
jge
mov
mov
and
mov
les
loope
cwtl
push
imul
jae
fcmove
and
enter
push
or
jo
add
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
jmp
repnz
repz
jp
jb
jmp
adcl
addl
stos
sub
jb
je
hlt
jge
mov
lods
jmp
xor
push
aam
mov
add
mov
jmp
push
dec
pop
les
pop
out
and
pop
add
ficoml
lods
push
pop
adc
jle
sbb
fwait
mov
int3
sahf
ss
mov
push
out
xchg
int
mov
push
int3
push
or
sbb
insb
pop
test
add
outsl
or
or
std
js
jno
call
in
mov
add
sub
outsl
xlat
clc
and
dec
fwait
dec
lret
sbb
xchg
and
loope
outsl
mov
pop
je
subb
sysenter
xchg
push
int
leave
pop
dec
mov
adc
sahf
xchg
and
shrb
pop
sub
xlat
leave
lret
mov
out
push
push
push
mov
stos
sub
call
inc
cmp
mov
mov
fwait
xlat
sbb
jb
cli
leave
mov
mov
repz
dec
in
mov
ja
sub
mov
imul
xor
sub
push
outsb
aad
mov
iret
mov
movsl
repnz
pushf
imul
rcrl
and
xchg
inc
jmp
adc
mov
lahf
into
pop
xor
hlt
adc
mov
sub
ja
mov
add
jnp
push
xlat
inc
cmpl
adc
popa
out
sub
cmpl
shlb
jecxz
xchg
jmp
cmp
mov
dec
mov
sub
cmp
cld
imul
jbe
test
pop
mov
scas
and
push
mov
or
xor
and
bound
adc
jnp
jmp
cli
pop
inc
add
sub
negl
enter
mov
and
nop
out
cltd
mov
pop
iret
inc
adc
mov
dec
lds
test
int
cli
shll
fistps
jge
outsb
lahf
fwait
xchg
sahf
movsb
cmp
fisttpll
stos
mov
mov
pop
adc
push
push
sub
mov
fcmovbe
mov
idiv
sub
sbb
rcl
divl
adc
add
insl
sbb
pop
int
jno
pushf
mov
lods
sub
jne
sub
shlb
cmp
mov
jbe
scas
dec
push
add
xchg
pop
int3
push
xchg
xchg
cmp
in
fiaddl
push
cld
icebp
adc
jb
lret
stos
add
insb
out
jbe
hlt
jno
push
aad
fcoms
ss
mov
mov
mov
roll
inc
push
test
xlat
jge
sti
pop
pop
pop
pop
xor
and
ds
pop
fdivr
mov
sub
mov
lcall
cmpsl
or
addr16
jne
cmc
pushl
sub
out
nop
pop
cmp
aaa
sbbb
push
or
sub
adc
push
inc
in
xlat
insl
sbb
test
jnp
mov
stc
in
int
enter
mov
xchg
negl
loopne
xchg
mov
out
stos
stos
pop
add
and
sub
js
nop
lret
inc
int3
js
mov
push
fildl
push
out
push
dec
test
aam
fwait
and
cmp
xchg
int
push
add
sbbl
xchg
sahf
cmp
scas
sub
inc
orl
push
dec
xor
lahf
sbb
sub
pop
mov
jb
jge
int
xchg
stos
lret
mov
out
mov
mov
add
dec
cmpb
xlat
lds
adc
insb
inc
push
iret
lds
leave
call
outsl
mov
xchg
lods
add
push
sub
xchg
cmp
jg
les
push
jecxz
test
add
ja
sbb
movsl
lret
repz
test
jbe
jle
ds
test
push
dec
loope
hlt
mov
fnsave
leave
mov
test
mov
xchg
push
data16
scas
or
icebp
popf
fstpt
dec
sbb
jnp
pop
sub
sbb
jne
movsb
adc
pusha
scas
popa
add
rorb
mov
push
insl
jns
xorb
cmpsb
js
mov
pop
je
or
adcl
fimuls
push
jne
push
aad
pop
dec
hlt
ficoml
mov
push
lahf
pop
inc
test
sub
mov
enter
paddusw
pop
das
push
sbb
sub
in
mov
sbb
sub
jmp
jo
cmp
mov
mov
dec
dec
cmp
xchg
sub
sbb
daa
add
movsl
mov
outsl
cmpb
jne
pop
jbe
test
or
add
popa
xlat
jmp
mov
outsb
jecxz
add
and
mov
loope
fidivl
arpl
cmp
sub
pop
mov
hlt
and
test
cmpsl
cwtl
xor
pop
sbb
dec
inc
fiadds
fidivs
mov
push
and
pop
dec
cmp
jp
out
pop
lods
dec
test
jo
popa
outsb
xchg
fadds
adc
sti
add
outsb
mov
xchg
sbbl
and
pop
push
push
sbb
scas
and
push
jo
mov
jno
mov
adc
and
xchg
fsubrl
sbb
sub
leave
xorb
add
xchg
in
imul
jecxz
iret
push
jl
sbb
add
das
out
ds
jmp
in
rorl
scas
sub
ds
or
mov
adc
inc
add
pushf
sbb
dec
test
inc
pop
mov
popf
int3
movsl
mov
and
inc
in
dec
add
call
or
pop
sahf
jnp
add
int3
orl
jle
add
adc
aaa
sub
mov
jno
pop
jmp
push
subb
jp
mov
xchg
mov
jno
adc
xchg
mov
pop
lret
adc
iret
xor
icebp
lea
add
jmp
inc
call
loope
popf
dec
rorb
andb
mov
cs
xor
xor
dec
mov
mov
adc
testl
cwtl
mov
movsb
pop
es
push
dec
insl
dec
push
mov
hlt
sbb
inc
adc
in
pop
push
jecxz
decb
enter
or
push
stc
outsb
pop
push
mov
add
xor
js
or
cmpsl
push
mov
popa
push
shlb
fsts
nop
cmpsl
pop
roll
jno
mov
xor
ljmp
jae
add
pop
cwtl
sbb
adc
mov
add
cmpsl
cmp
xchg
xchg
in
adc
ljmp
cmp
sbb
nop
xorb
loop
xchg
inc
repnz
pushf
inc
test
pop
stc
cmpsb
fnsetpm(287
scas
add
test
inc
mov
in
xchg
fs
fneni(8087
xor
jo
mov
outsb
jge
xor
cmp
adc
cltd
xor
jecxz
mov
cmp
mov
fwait
and
in
lea
fldenv
or
pop
popf
or
jno
or
mov
jae
popa
cmp
call
int
push
int
loope
fwait
test
arpl
jo
adc
shrl
out
pusha
adc
xor
jae
pushf
std
mov
dec
addr16
dec
aam
outsl
mov
push
ljmp
mov
imul
push
dec
mov
jmp
add
lods
push
pushf
ds
mov
fbstp
gs
outsb
int3
nop
mov
jno
jp
out
mov
insb
jle
xchg
push
pop
pop
mov
dec
leave
mov
mov
fists
aad
mov
fstpt
add
out
pop
cmp
test
pop
mov
jl
and
inc
sbb
push
lds
ja
jno
xor
fistpl
jbe
filds
fcomi
dec
xchg
bound
inc
sub
mov
adc
sbb
sbb
adc
lods
adc
idiv
push
inc
xchg
mov
xor
jnp
aad
cmc
jae
add
mov
pushf
push
add
lods
sbb
adc
mov
cmp
mov
cmp
aaa
xor
loop
outsb
pop
lahf
rol
xor
or
clc
js
sub
in
pushf
mov
sub
mov
dec
mov
mov
pop
ja
dec
cltd
dec
xchg
and
mov
pop
lds
xor
jb
cmp
dec
pop
push
mov
mov
cmp
adc
inc
adc
xchg
adc
mov
pop
ss
outsl
fisubrl
xchg
jo
cld
cmp
adc
shll
dec
cmp
xor
std
cmp
xorb
push
enter
movsl
sbb
mov
push
mov
fwait
es
scas
dec
arpl
ss
loop
and
ja
pop
jg
jecxz
cltd
sbb
or
outsb
loop
jb
aas
and
jmp
lods
or
dec
jle
imul
mov
mov
dec
inc
push
repnz
addr16
fs
mov
lds
std
adc
daa
or
in
inc
test
adc
or
cmpsl
jle
sbb
mov
mov
inc
ss
lds
orb
or
pop
pop
into
push
jl
dec
cmpsl
sbb
into
fadd
jne
add
and
jb
dec
xchg
xchg
mov
int
pop
daa
incb
add
mov
stc
dec
xchg
or
adc
test
mov
sub
je
push
push
xor
mov
mov
inc
xchg
clc
popa
jmp
or
xor
ret
inc
xchg
test
adc
fidivrl
daa
jno
rclb
cli
fucomi
faddp
aaa
mov
lea
pop
pop
jmp
outsl
mov
or
push
jns
xlat
mov
cmp
lahf
repz
mov
aaa
into
push
aad
pop
jne
pop
cmc
and
mov
mov
xchg
out
sub
xor
bound
inc
dec
adc
lds
mov
jge
mov
xchg
test
mov
mov
call
or
pop
pop
push
push
mov
lods
lcall
out
mov
or
mov
sub
jae
repz
and
leave
int
aaa
and
mov
xchg
dec
xchg
adc
mov
push
mov
lret
mov
mov
xchg
movsb
in
dec
sahf
push
jnp,pn
lret
adc
add
push
sahf
mov
or
cli
mov
sbb
sub
test
lret
lds
mov
pop
out
dec
mov
xchg
jno
sbb
xchg
xor
scas
aas
jb
or
sbb
add
jae
push
xchg
dec
in
out
mov
xor
inc
cmp
inc
sbb
lcall
and
xchg
inc
in
repnz
imul
jae
stos
xor
addr16
imul
sub
ds
arpl
inc
sbb
dec
adc
frstor
mov
out
jmp
pop
popf
sub
ret
pop
mov
or
aam
aas
sbb
insl
cmp
cmp
mov
push
cmp
jns
add
pop
add
arpl
adc
repz
cld
sub
pop
int
xchg
imul
adc
iret
jecxz
inc
inc
enter
add
mov
push
push
int
jbe
pop
stos
sbb
and
fisttpl
dec
dec
push
fisubs
and
mov
mov
mov
shll
mov
xor
add
xchg
sbb
pop
cmpsb
lcall
xor
pop
jp
int
movsl
data16
pop
ds
add
call
xchg
dec
hlt
xchg
mov
or
bnd
movsl
mov
pop
xchg
sub
cli
jmp
lods
jnp
imul
xorb
shr
popf
and
testl
in
in
aaa
mov
aaa
sahf
inc
mov
mov
mov
out
loope
xchg
rcll
mov
dec
mov
cs
sbb
lcall
xor
or
ret
push
js
push
mov
xor
lea
xor
gs
gs
popf
loopne
movsb
pop
add
and
notl
adc
out
add
sbb
hlt
lret
ret
jg
add
jne
sub
jle
cmc
test
inc
ljmp
sub
and
and
rclb
cmp
mov
sbb
aam
push
dec
outsb
es
add
clc
in
pop
bound
lock
xchg
int3
fwait
mov
cli
mov
sub
shrb
xchg
mov
mov
lods
lods
aam
and
pop
dec
lea
dec
lcall
push
inc
rcrl
mov
lea
sbb
dec
cmp
fnstenv
das
enter
out
adc
roll
pop
fsubs
mov
pop
pop
popf
lds
test
cmpsl
lea
js
adc
cmc
ljmp
pop
xchg
bound
imul
xchg
mov
sbb
jmp
mov
std
jge
ficoms
inc
add
lret
popf
inc
cld
loopne
orl
add
sub
cmp
inc
cmp
shlb
ja
sub
stos
repz
rcrb
xchg
and
fcmovb
sub
dec
imul
jne
negb
popa
and
inc
jnp
outsb
add
call
outsb
add
or
xchg
pop
mov
stos
psubsb
push
dec
add
mov
dec
mov
into
ret
push
and
xor
adc
lods
adc
xor
push
xor
cmpsl
cmc
xchg
adc
repnz
fdivs
inc
mov
out
adc
mov
add
mov
mov
mov
inc
je
pop
out
xor
lods
cmp
shrb
mov
inc
fs
ficompl
lods
dec
mov
xchg
mov
xchg
ficoml
rolb
movsl
in
mov
mov
pushl
stos
popa
mov
icebp
add
lods
and
arpl
pop
add
fiadds
xor
sbb
add
pop
ss
xchg
jmp
mov
into
test
inc
test
das
icebp
repz
push
shrb
sub
mov
pop
sti
scas
adc
adc
dec
aaa
sbb
and
clc
and
rclb
ja
mov
pushf
jl
xchg
jae
sbb
cmpsb
negl
dec
fsubrl
jge
pushf
or
hlt
sbb
div
and
invd
dec
push
adc
rcll
jl
pusha
out
loop
sub
aad
fists
dec
mov
and
in
or
icebp
sbb
gs
or
in
cmp
stc
add
cmovb
and
jno
negl
mov
jns
hlt
out
dec
call
out
mov
push
sub
testb
xchg
aam
or
outsl
movl
movsb
mov
js
aam
or
addr16
dec
jno
mov
negb
stos
in
jecxz
add
xlat
add
jmp
xor
movb
push
nop
xor
xor
test
int
inc
test
mov
dec
nop
inc
xchg
adc
pop
ja
pop
pop
xorb
jecxz
into
add
cwtl
ret
arpl
aaa
push
inc
inc
sbb
mov
jge
in
subl
dec
dec
ficoms
adc
int3
cli
pop
loopne
mov
test
push
ja
sbb
dec
cmp
or
xlat
imul
push
xor
iret
sbb
xor
sahf
xor
push
or
enter
movsl
dec
push
jb
movsl
xlat
jg
and
jne
out
shrb
mov
add
out
dec
in
pop
dec
cmp
jle
adcb
roll
lods
or
fsts
xchg
mov
sub
in
mov
xor
ss
push
jnp
enter
pop
fs
lea
pop
dec
add
mov
mov
shrl
ds
sub
movsl
adc
movsl
sbb
lds
mov
xor
sub
hlt
mov
mov
xor
fcomip
jecxz
sbb
fsubl
in
fdivrl
pop
das
jbe
xchg
push
fisttpl
leave
mov
jmp
mov
and
dec
ja
mov
push
inc
sbb
and
ja
add
dec
push
inc
dec
and
inc
adc
sbb
xchg
inc
fadd
orl
fidivrl
pusha
cmc
mov
test
loop
dec
ret
cwtl
mov
mov
adc
xlat
mov
lcall
int
rcll
out
sub
sub
icebp
inc
bound
jg
clc
sbb
dec
push
aas
rclb
ss
or
data16
popf
mov
gs
adc
dec
mov
sbb
push
rorl
sub
push
xchg
adc
mov
mov
xchg
ja
and
pushf
fwait
add
hlt
cwtl
imul
repz
pop
pop
lds
roll
mov
jno
stc
or
or
lret
cmpsb
and
out
push
js
cmp
push
sub
lds
mov
sbb
add
sub
pop
xchg
mov
xor
jle
pop
and
enter
fwait
scas
sbb
sbbb
pop
cmp
inc
mov
out
push
aas
fistl
fcmovne
loop
sbb
and
inc
xchg
xchg
cs
daa
aam
icebp
int3
daa
add
mov
lea
js
cmp
push
xor
pop
icebp
lds
imul
or
sbb
add
addr16
fisttpll
xchg
mov
aaa
mov
out
repz
cmpsl
adc
fcmovnbe
mov
loop
dec
jns
mov
iret
aaa
mov
mov
movsb
inc
lds
adc
or
les
xor
jmp
cmp
daa
imul
aad
pop
stos
scas
and
into
or
mov
cmp
pushf
xor
int3
mov
adc
lock
sub
mov
les
js
jno
lahf
pop
test
fs
iret
push
nop
enter
popf
in
pop
sbb
push
icebp
notb
xchg
mov
jno
imul
mov
test
sbb
mov
cli
divb
outsl
popf
int3
sub
mov
ds
push
xor
stc
fldl
add
outsl
daa
imul
jmp
and
icebp
sti
sbb
sub
rcrb
sub
lods
leave
lods
int
mov
jno
and
mov
inc
pop
jmp
cwtl
mov
out
gs
xlat
pop
cmpb
mov
and
cltd
fildl
sub
aas
out
cmp
call
jns
pusha
inc
repnz
rcr
leave
or
js
push
aam
xor
add
repnz
iret
test
xor
xor
xor
fcoms
lahf
cmp
mov
ljmpw
popf
hlt
sbb
ss
push
clc
rclb
insl
iret
in
push
in
ja
and
leave
cmp
jae
xor
push
or
stos
inc
shrl
icebp
inc
cmp
add
add
lahf
stos
test
test
sbb
adc
jmp
arpl
fs
jo
add
sbb
ja
mov
xchg
in
jmp
jmp
xor
cld
stc
or
call
push
inc
mov
jmp
neg
push
mov
cmpsl
shlb
mov
mov
fistl
and
push
shll
xchg
cmpsl
iret
sub
idivl
cmp
repz
push
inc
inc
lds
xor
sub
in
stc
pop
rorl
pushf
push
xchg
out
push
lock
mov
lcall
sbb
mov
incl
mov
inc
sub
pop
repz
sbbb
sub
hlt
shlb
xchg
loopne
lcall
testl
sub
inc
aam
repnz
jle
lock
sub
jne
adc
out
jmp
mov
loopne
dec
mov
mov
sub
adc
ja
xor
cs
xchg
shrl
mov
sub
xchg
scas
repz
pushf
fwait
dec
cmpsb
in
mov
test
mov
mov
mov
push
mov
fcompl
pop
xlat
jno
xor
lret
fcoml
mov
cmp
or
fdivrl
dec
orb
and
addb
outsb
xor
dec
cmp
xchg
lods
sbb
or
dec
sbb
cwtl
andl
leave
adcb
fwait
scas
add
in
pop
or
dec
mov
ja
xor
fsubl
dec
add
js
and
ret
mov
pop
stos
add
mov
call
mov
cmp
mov
into
stos
push
jbe
inc
mov
add
insl
les
loope
pop
mov
xchg
sub
dec
jle
lock
sbb
push
outsb
lea
popf
mov
jbe
cs
or
xchg
inc
lods
mov
mov
mov
out
pusha
inc
xor
ljmp
sti
push
push
popw
cmp
inc
xor
push
cmc
adc
and
jecxz
sahf
imul
xor
sub
sbb
rclb
sbb
movsl
sahf
shlb
lods
arpl
mov
jecxz
or
lcall
jo
pop
mov
ljmp
pop
mov
jne
mov
and
dec
pop
push
cli
add
stos
jo
ja
andl
push
dec
cmc
xchg
pop
mov
mov
cmp
inc
dec
loop
bound
repz
popa
stc
pop
push
dec
lahf
lea
stos
mov
cmp
insb
mov
pop
cmc
mov
mov
repz
lds
pop
int3
roll
xchg
or
push
out
test
push
push
adc
pushf
cmpsl
pop
jg
inc
dec
sbb
xchg
and
mov
leave
xor
aam
fstpt
loop
js
add
je
cmpsb
mov
push
pop
into
mov
and
dec
xor
test
sub
jmp
mov
and
pop
pop
xchg
pop
pop
sub
arpl
fstps
or
cli
rorl
popf
nop
bound
or
push
add
ss
in
int3
mov
lahf
popa
sbb
add
mov
xchg
adc
es
sbb
leave
fmull
mov
jns
inc
xchg
xchg
xchg
fcomps
in
std
push
pop
push
mov
loope
in
add
fbstp
dec
xor
mov
pop
pop
mov
ret
pop
push
sub
xchg
jae
es
inc
and
clc
mov
scas
mov
icebp
mov
jns
push
pop
or
outsl
and
cmc
xor
adc
pop
sahf
jbe
or
pusha
stos
pop
xchg
mov
loop
xor
adc
xchg
mov
rol
sbb
mov
std
mov
jne
icebp
xor
mov
daa
fxch
sub
movsl
nop
jns
lret
add
dec
fistl
in
cmp
arpl
and
ror
inc
dec
loope
dec
inc
sbb
stos
push
jle
cmp
cmp
or
inc
rolb
jns
fimull
sbb
and
push
outsl
and
push
xor
sbb
movsb
sub
add
cmp
sbb
leave
xchg
jmp
mov
test
daa
pop
push
cmp
clc
add
cwtl
dec
and
lods
sti
mov
stos
and
sar
lods
daa
aam
push
ret
jnp
cmp
fmull
fcoml
inc
or
mov
xor
cmp
ljmp
pop
inc
adc
pop
arpl
inc
aad
push
cmp
lret
pop
cmp
fmuls
xchg
inc
cmp
mov
in
jp
xlat
pop
into
pop
adc
cwtl
pop
sub
cmp
mov
pop
ret
sbbb
addr16
inc
jno
add
mov
dec
bnd
out
cli
inc
pop
fidivl
es
adc
sbb
repnz
arpl
out
cmp
popa
cpuid
pop
cwtl
in
mov
xlat
pop
add
lret
xchg
iret
cmp
mov
mov
scas
es
cmc
add
lret
jecxz
lret
pop
cmp
jp
fldl
dec
loop
hlt
aaa
ja
testl
outsb
inc
fbld
jnp
dec
sbb
lds
sub
dec
adc
dec
jns
outsl
jo
mov
lret
cmpsb
adcb
vpunpcklqdq
dec
pop
jno
cmp
or
cli
mov
in
mov
xlat
and
stos
inc
mov
imul
xchg
adc
mov
cs
sahf
lock
add
push
repz
xor
cld
dec
xor
aad
fisttps
mov
jl
xor
mov
or
fisubl
dec
test
push
cmpsl
or
stos
jecxz
add
stc
jbe
inc
inc
sbb
sbb
xor
mov
clc
icebp
inc
stos
aad
mov
ret
pop
and
ljmp
mov
xor
stos
jg
stc
subb
sahf
mov
xchg
dec
mov
and
pop
vaddsubps
mov
mov
xor
aas
icebp
orb
adc
scas
xor
faddl
dec
addr16
std
dec
xor
pop
xor
mov
jns
imul
jo
shll
adc
sti
xor
lret
push
mov
mov
test
cltd
mov
popa
xor
and
sahf
inc
pop
rclb
push
insl
ds
je
mov
mov
dec
mov
lock
xor
repz
lret
sub
fwait
lret
std
add
jle
mov
push
and
adc
popf
hlt
adc
mov
daa
sarl
test
ds
mov
sub
push
xchg
cmp
jle
call
jecxz
stc
jns
mov
popf
lock
xchg
jb
lahf
mov
push
push
add
add
out
cwtl
jns
shlb
sti
addr16
ja
shll
test
pusha
sbb
cmpsb
lods
jmp
mov
sbb
stos
dec
aad
mov
inc
outsb
pop
out
lret
mov
cmpsb
dec
inc
sub
sub
ds
int3
test
push
out
and
mov
addr16
jg
add
mov
push
push
adc
jmp
push
mov
add
in
test
test
lods
pop
jg
cli
repz
sbb
popa
jmp
push
xchg
outsl
in
mov
pop
flds
dec
jmp
xor
dec
cli
leave
inc
mov
mov
arpl
cmova
jbe
xchg
sub
sbb
in
faddl
xchg
pop
arpl
test
xor
subl
or
sbb
scas
outsb
sti
pop
jle
jecxz
mov
jle
jno
es
push
mov
shll
jb
incl
inc
mov
in
repnz
push
xchg
xor
sarb
jge
sub
xchg
mov
jl
or
sub
call
pop
sub
or
inc
aaa
gs
cmc
bound
pop
push
mov
cmp
adc
mov
fisubrs
insl
sub
clc
push
testb
mov
add
les
inc
arpl
sub
mov
xor
jge
pushf
mov
ja
xor
sub
rorb
xor
arpl
stc
scas
inc
pop
mov
or
mov
mov
in
addl
sub
fnstsw
in
push
lret
rclb
out
cli
aaa
test
pop
inc
aam
pop
add
mov
rcl
xor
add
sbb
jo
test
cmp
mov
mov
sbb
sbb
mov
adc
pop
data16
cld
jmp
mov
cwtl
jmp
push
pusha
in
jg
fcmovnbe
inc
bound
xor
jmp
nop
cwtl
push
mov
pop
sub
cmpsb
in
ret
mov
dec
ret
mov
xor
and
scas
fidivrl
sarb
mov
pop
inc
jg
push
orl
scas
add
rcl
mov
jmp
test
loopne
fwait
or
sub
adcb
gs
mov
sahf
jg
sbb
leave
cmp
xorb
mov
push
jbe
cmp
stos
mov
or
loop
lret
pop
dec
add
mov
sub
shlb
vmovaps
sub
lods
out
iret
daa
iret
adc
shlb
dec
test
cli
insb
loopne
inc
lds
push
or
stc
cmpsb
cmpsb
iret
jmp
mov
sub
xor
outsl
dec
push
aaa
mov
cmp
jecxz
push
sub
bound
std
lods
mov
sub
shlb
and
icebp
data16
xor
mov
mov
fcoms
push
loope
jno
setle
dec
pop
cltd
sub
iret
xlat
jmp
pop
jp,pn
cli
stc
xor
jo
sbb
xor
bswap
lahf
gs
loop
xchg
jo
mov
loope
and
add
mov
lret
shlb
iret
addr16
fisubrl
and
ss
mov
sbb
cli
xor
fcomps
jp
pop
cmp
repnz
dec
push
sbb
cmp
fnstenv
aaa
imul
sbb
mov
inc
inc
outsl
sarl
lds
popf
add
xorb
xor
icebp
mov
sti
pop
adc
add
lret
dec
or
ret
cmpsb
dec
cmp
out
ss
cmp
js
test
xchg
inc
loop
mov
fs
cltd
inc
ret
lcall
mov
cmp
dec
cmp
inc
repz
or
scas
add
repnz
jb
setno
test
scas
add
sbb
inc
xor
movsb
gs
fldenv
mov
adc
mov
push
adc
cltd
push
push
adc
inc
sbb
fstpl
rclb
sub
xchg
add
cltd
add
rorb
lods
outsb
loop
rcr
jge
add
mov
push
pop
adc
sahf
shl
adc
faddl
leave
pop
stos
iret
in
outsl
pop
sub
mov
ds
mov
xchg
inc
add
add
push
pop
sbb
test
daa
mov
sbb
xlat
xchg
cwtl
mov
scas
dec
in
rolb
mov
add
gs
cmp
push
fcmovnb
aas
outsl
inc
into
adc
sub
inc
push
push
rol
cmc
cmp
mov
ds
mov
mov
xor
movsl
push
add
mov
mov
xchg
stc
sbb
enter
mov
clc
cmc
iret
mov
lcall
mov
adc
fidivrs
aad
addb
leave
jbe
xchg
xor
and
nop
test
mov
loop
hlt
add
jns
push
adc
sbb
push
mov
mov
mov
fadds
sti
pop
and
fldcw
inc
in
xor
sub
sub
jmp
adc
test
test
sbb
adcl
addl
dec
call
ljmp
lret
mov
fstpl
aad
inc
ljmp
subl
in
jb
push
test
in
push
orl
repnz
or
cmpsl
push
inc
clc
jne
mov
inc
aas
mov
sub
cs
mov
enter
test
test
adc
adc
dec
jecxz
cmp
rcl
xchg
jns
xchg
sub
xor
frstor
pop
ja
adc
xchg
adc
push
gs
insl
push
arpl
cmp
push
xor
nop
shlb
testl
push
es
gs
shll
mov
shll
mov
testl
push
pop
loope
and
mov
mov
mov
jg
jle
cltd
out
push
xchg
divb
fwait
call
pop
jnp
cmp
or
mov
and
jp
xchg
cmp
pop
sbb
dec
or
pop
shlb
pop
out
jmp
sbb
sub
psllw
dec
dec
lods
movsb
push
call
dec
mov
mov
xor
in
movsl
sbb
test
lret
aam
mov
inc
or
xor
xor
fidivs
adc
push
outsl
cmpsl
sbb
jb
inc
mov
je
lods
cmp
mov
in
sub
mov
and
push
mov
mov
in
stc
sbb
jge
add
inc
adc
enter
aas
jg,pt
pop
test
pop
pop
pop
inc
push
daa
mov
mov
out
dec
push
cld
aaa
mov
add
lcall
xor
pop
mov
in
loop
dec
xor
push
mov
inc
sti
outsl
shlb
in
sbb
vmwrite
aaa
jg
mov
sbb
xlat
outsb
mov
mov
lret
stc
negb
shl
cltd
or
or
push
int3
and
and
and
xor
adc
pop
xlat
mov
adcb
pop
loop
or
and
xor
sbb
bound
push
jmp
ss
stc
inc
or
jp,pn
les
jne
jle
xchg
inc
mov
loopw
dec
aaa
push
sbb
ret
aaa
mov
push
addr16
sbb
arpl
arpl
mov
jge
inc
daa
stc
jns
imul
lret
sbbl
scas
or
hlt
aaa
lahf
push
mov
cltd
fnsave
in
fdivr
call
js
jno
rcr
ja
or
add
mov
dec
xchg
mov
mov
mov
jb
test
sub
aad
fcmovnbe
fs
push
mov
sbb
xchg
xor
cmp
shrl
gs
add
call
mov
repnz
in
pop
jmp
orb
push
lods
dec
out
and
scas
xchg
sub
push
loop
addb
movsl
pop
jg
xchg
sarb
dec
push
jg
mov
adc
outsb
dec
push
fstp
jno
push
imulb
xor
add
ret
jg
adc
jg
dec
sbb
bound
mov
adc
sbb
xor
repnz
xchg
xor
cs
sbb
daa
mov
popf
int
mov
movsb
out
push
jmp
leave
stos
ljmp
out
inc
mov
lods
push
addr16
xchg
fwait
imul
repz
xchg
mov
mov
shll
loop,pt
or
cmpsl
pop
dec
in
es
inc
mov
insl
lods
scas
mov
adc
incl
sub
js
and
xlat
pop
mov
stc
ss
jge
jecxz
xorl
cmp
loopne
fisubs
dec
jge
iret
push
pop
sub
push
stc
stc
outsl
icebp
divl
or
pop
cli
inc
iret
inc
pushf
shlb
sub
cwtl
jecxz
jge
jbe
ljmp
fnstenv
into
or
dec
fcomi
outsl
and
aad
fidivs
fsubrl
xor
pop
mov
out
js
ret
inc
fdivrl
stos
sbb
xor
js
sub
dec
sbb
mov
fwait
hlt
dec
loope
mov
in
out
sahf
xor
data16
and
shll
shll
aad
jecxz
mov
jnp
es
push
push
pop
cmc
xor
imul
repz
cmc
lret
sub
mov
cs
out
mov
or
mov
fldcw
paddsw
nop
ffree
fsubrl
cld
inc
lret
sbb
sub
mov
fisttpl
and
outsb
xor
xchg
push
sahf
insl
cs
inc
gs
fsubp
add
mulb
aam
call
sarb
dec
cmp
stc
mov
subl
xor
mov
ljmp
aas
hlt
jg
mov
cmp
pop
pop
prefetcht2
mov
mov
jp
cmp
test
add
inc
sub
push
es
push
jo
dec
stc
or
test
or
add
jecxz
std
hlt
pop
sbb
lods
xor
add
je
push
dec
push
sub
pop
mov
hlt
pop
or
test
cmp
push
xchg
cmp
adcb
mov
loop
xchg
pop
test
lock
xchg
inc
clc
into
sahf
insl
cmp
xor
sbb
cmp
ret
in
sbbb
jnp
inc
push
and
sbb
pop
insb
and
cmp
push
push
adc
insb
popl
sbb
nop
outsl
cli
fisubl
jne
pop
sbb
movsl
cli
fistpll
adc
mov
gs
repnz
cmpsl
inc
pop
std
pop
pop
or
inc
pop
fimuls
iret
enter
inc
jp
inc
mov
ret
inc
pop
movsl
xchg
and
mov
and
mov
je
jne
movsb
fcompl
ja
out
mov
cwtl
int3
cmp
mov
cli
int
xorl
fdivl
mov
loope
adc
mov
movsb
nop
pop
jp
stos
js
ficompl
lret
hlt
cmpsb
test
mulb
xchg
dec
and
mov
inc
jne
stc
addl
outsl
pop
les
psubusw
loop
lds
movsb
repnz
push
das
or
dec
push
jns
or
andl
or
lret
lahf
imul
jge
aam
orl
js
push
jbe
lahf
pop
mov
das
inc
dec
sub
or
and
jae
push
push
fwait
ja
sub
jb
fsubp
ja
mov
push
adc
xor
sub
gs
or
movsb
out
in
and
stos
pop
xchg
jae
jnp
int
ds
out
xlat
mov
xor
sbb
add
xchg
inc
in
add
lea
rcrb
insl
sarl
outsb
fwait
push
xor
out
imul
ljmp
sub
mov
into
icebp
imul
pop
test
add
sub
mov
mov
pushf
push
cs
xor
sub
mov
loop
and
flds
and
mov
jb
lods
shll
mov
push
ljmp
xor
cmp
mov
arpl
lods
faddl
mov
fwait
loopne
pop
pushf
and
call
dec
loope
add
cli
sbb
test
stos
je
lcall
xchg
fucomip
xchg
add
lcall
popf
dec
adc
hlt
mov
pop
push
shrb
adc
and
inc
pop
and
cld
xchg
mov
lods
jecxz
aam
mov
lahf
dec
ret
add
in
or
subb
cltd
mov
mov
decl
icebp
adc
lcall
inc
imul
and
stc
xchg
or
lods
sub
loop
fwait
cmc
cwtl
and
inc
inc
mov
iret
iret
out
iret
in
sbb
test
or
xchg
jno
repnz
vpcmpeqw
xchg
scas
loope
jns
mov
movsb
inc
sbb
sub
test
sub
jbe
ret
pop
lea
dec
add
jmp
jg,pt
mov
fs
ds
pop
imul
or
jecxz
sub
mov
jns
xor
shlb
sarb
xchg
shr
add
roll
fisubl
sbb
pop
js
mov
into
mov
mov
or
fs
sbb
insb
fs
xchg
inc
test
mov
test
fidivrs
jns
stos
nop
bound
arpl
mov
in
push
addr16
push
adc
push
adc
das
adc
int3
ret
daa
pop
stos
sahf
std
loop
xor
les
loopne
cld
cmc
push
add
jl
xchg
pushf
mov
mov
fidivrs
jb
daa
push
pop
jae
testb
mov
dec
pop
and
call
sbb
cwtl
sub
cli
lret
lods
and
lea
jae
pop
outsl
jge
lds
shufps
negl
pushf
aad
js
movsl
je
mov
call
jle
push
fst
andb
stos
enter
jmp
mov
xorl
mov
nop
xchg
cmc
aaa
dec
outsb
out
shr
mov
fildl
dec
popa
add
pop
sub
aaa
das
leave
xchg
jno
or
shrl
sub
xchg
mov
inc
leave
lods
push
push
xor
mov
lret
sti
jns
add
stos
jecxz
push
jp
fimull
pop
push
fstpt
int
ljmp
xchg
mov
inc
sub
jecxz
mov
mov
hlt
adc
out
cmp
and
arpl
dec
insb
inc
mov
popa
popa
pop
mov
repnz
mov
cmp
xor
adc
stc
loope
cltd
or
in
test
push
cmp
xchg
adc
adc
into
xchg
fcoms
xchg
adc
rcll
add
ljmp
das
sbb
dec
fdivrl
pop
dec
in
adc
lds
or
push
fs
pop
movsl
push
leave
mov
rorl
pop
jg
ja
out
scas
int3
lods
add
lret
sub
fs
repnz
cli
push
jo
pop
cmp
sub
mov
xchg
movsl
mov
data16
jnp
icebp
cs
enter
fstl
jno
bound
into
fstpl
sub
sar
push
xor
inc
sbb
jl
shrb
xchg
push
xor
sahf
popa
mov
cmp
and
or
mov
iret
and
mov
cli
scas
pushf
inc
adc
dec
fldlg2
gs
into
mov
je
imul
pop
iret
jne
lods
lret
and
add
ja
cld
leave
mov
shlb
mov
inc
js
gs
rolb
outsl
das
mov
bt
adcb
je
xor
and
or
or
cli
loope
xchg
lahf
stos
fnstsw
jo
and
enter
cli
sub
push
dec
pop
repz
push
loope
push
mov
ja
inc
mov
es
je
rcrb
movsb
scas
addb
aaa
or
aaa
ds
fadds
outsl
fwait
adc
and
and
dec
dec
js
xor
sbb
icebp
jp
cmp
lahf
cmp
mov
dec
sub
jge
add
or
push
xchg
jp
dec
popa
push
lret
sarb
and
dec
jp
sbbl
lcall
or
out
push
or
fdivrl
adc
xor
mov
push
inc
mov
arpl
push
daa
cmp
sub
mov
out
sub
pop
pop
fidivrl
leave
pmaddwd
lahf
push
mov
dec
push
dec
into
cld
movsb
sbbb
int3
daa
mov
sbb
jp
call
mov
add
js
daa
jp
xor
out
lret
in
je
scas
jb
add
pushl
in
je
aad
mov
rcrb
or
icebp
pop
xchg
std
test
inc
js
ja
push
add
rclb
inc
xor
sahf
push
sbb
cmp
add
jnp
push
dec
xchg
sub
mov
or
mov
pushf
cmpsb
ja
test
pop
jo
lods
mov
push
test
enter
inc
scas
or
pushf
pop
movsl
movsl
sti
call
jno
mov
xchg
inc
cld
mov
xor
fnstcw
sbb
sar
lcall
mov
or
push
inc
data16
out
outsl
mov
push
sub
mov
lahf
stos
inc
ja
insl
lret
adc
leave
inc
fucomip
pop
mov
mov
repnz
jmp
jp
push
dec
in
xor
jl
in
enter
lods
mov
mov
not
pushf
add
test
pop
insl
jp
sahf
stc
sti
cli
imul
sbb
ret
std
sub
push
fsubrl
mov
imul
mov
xor
dec
sbb
imul
mov
movsl
js
mov
and
or
mov
mov
xor
cmp
fwait
dec
xorb
sbb
mov
fs
bnd
jne
imul
adc
cmp
and
icebp
add
adc
daa
xlat
push
cmc
sub
dec
aaa
jmp
cmc
or
push
jle
fwait
jno
sti
sbb
add
sbb
jle
mov
xchg
push
clc
mov
mov
mov
repz
pop
loopne
pop
mov
cmp
iret
dec
xor
loopne
xchg
mov
fistpll
add
stos
jecxz
xchg
xchg
inc
xor
or
xchg
out
js
push
dec
lret
dec
or
xchg
xor
pop
adc
stos
mov
in
incb
xchg
js
mov
ja
cmp
dec
outsl
rclb
repz
sbb
incb
push
xor
push
gs
fcomp
shlb
push
out
push
popa
push
mov
pop
and
add
sarb
fisttpl
xchg
cmp
into
lahf
adc
imul
pusha
xchg
xor
mov
in
aad
or
xchg
ljmp
call
jge
fs
push
mov
hlt
fwait
and
loope
push
jl
es
repnz
xchg
dec
in
movb
sbb
xchg
aas
ror
pop
or
ja
pushw
mov
cld
and
cmp
mov
mov
cli
sub
xchg
shl
mov
cld
mov
stos
jmp
mov
lret
outsb
sbb
xchg
cmp
loope
or
jecxz
mov
stos
push
and
or
dec
push
adc
add
outsb
add
pop
cld
dec
push
adcl
loopne
cmpsl
fwait
in
sbb
pop
iret
ljmp
push
pop
sbb
decl
adc
pusha
jg
push
lcall
popa
enter
adc
into
andb
sub
jae
fcoml
adc
repz
or
lods
jge
add
xor
stos
stos
aad
dec
loope
jmp
adc
fldt
mov
cld
jmp
inc
hlt
sbb
lods
daa
jg
sahf
shll
jb
inc
movl
stc
sbb
shll
insb
xchg
mov
stc
add
inc
and
lea
in
shlb
jns
jge
push
jae
xchg
leave
fcomp
sbb
mov
data16
out
repz
dec
jp
cmp
mov
jae
es
ret
sti
inc
stc
pop
shl
adc
push
jnp
rorb
push
fsubl
in
imul
inc
lret
and
shrb
jae
sub
shrl
mov
stos
fwait
push
test
or
push
push
mov
outsb
or
push
ret
stos
mov
mov
jo
std
aad
ret
cmp
lret
mov
int3
cmpsb
dec
insb
dec
popf
popfw
dec
mov
mov
std
mov
xchg
sbb
sub
inc
repnz
jp
sbb
xchg
xchg
cmc
sbb
mov
mov
jmp
lods
mov
mov
mov
cs
mov
push
repz
and
sub
imul
loop
leave
outsb
pop
dec
xor
add
sbb
movsb
loop
lret
sbb
repnz
push
inc
xor
adc
push
inc
push
insl
pop
lock
inc
sbb
shlb
xchg
mov
in
sub
xor
jg
sti
xlat
xchg
das
ret
fisubs
fnstcw
fdivs
popa
hlt
inc
into
ret
cmp
shll
fwait
pop
les
jg
stos
or
jle
jo
jbe
ret
mov
xchg
inc
and
push
dec
rcr
sbb
mov
add
hlt
lahf
mov
add
shlb
add
and
shlb
xor
jne
mov
shlb
cwtl
mov
inc
pop
in
ret
mov
jg
sarb
repnz
jns
sub
ror
dec
push
ds
sbb
stc
lret
sbbb
lds
rcrl
xor
sbb
push
mov
inc
jo
clc
push
jnp
lock
shll
ss
and
inc
or
jmp
fisubs
jae
pop
fnsave
push
aam
inc
loope
pushf
pop
dec
out
cmp
mov
mov
xor
cltd
das
lods
or
shrb
gs
stc
dec
adc
sahf
cmp
sbb
pop
ljmpw
fdivrs
lret
movsb
cmp
ss
mov
pop
pushl
push
aad
push
add
ffreep
sbb
and
daa
mov
add
call
cmp
push
movsb
and
outsl
fcoml
push
jbe
les
test
cmp
xlat
out
mov
mov
push
and
lret
sahf
inc
or
sbbb
or
inc
cld
dec
inc
subb
lock
inc
call
inc
push
popf
iret
adc
or
pop
jmp
add
jp
xchg
hlt
cmp
mov
mov
cmp
dec
dec
mov
sub
fs
jge
push
inc
pop
pop
data16
in
add
push
mov
repnz
adc
add
or
mov
jno
cli
sbb
into
pop
pusha
or
mov
or
addr16
mov
xor
jge
insl
rcrb
sti
mov
inc
or
into
test
cmpsb
dec
push
xor
pusha
xchg
and
push
inc
lcall
stos
or
rcr
outsb
fdivrl
adc
shlb
dec
call
cmp
push
or
fadds
cmp
mov
cli
adc
mov
ljmp
pop
xor
call
arpl
and
out
cmp
adc
ljmp
adc
data16
adc
ja
loopne
scas
and
mov
push
jecxz
cmp
and
push
or
dec
xchg
das
mov
xchg
aas
mov
adc
dec
push
jmp
cld
sti
xor
xchg
mov
dec
sbb
repnz
jbe
pop
cmpsb
dec
jnp
jb
jecxz
jno
rcl
pop
xor
sbb
mov
fnstenv
jecxz
clc
or
and
jle
gs
xor
inc
test
loope
push
xor
stos
pop
nop
xchg
inc
pop
mov
sbb
rcll
and
out
ficomps
sbb
int
and
pop
add
daa
mov
sbb
xchg
dec
imul
cs
sbb
mov
cmp
das
sbb
xor
sbb
mov
scas
pop
jne
lds
mov
ret
jns
mov
int
pop
out
jns
iret
mov
push
mov
loop
fwait
hlt
push
testb
inc
push
pop
out
inc
jno
mov
ret
inc
adc
pop
jae
mov
js
jge
lcall
dec
in
sahf
fwait
cld
jno
jne
adc
and
cmpsl
aaa
cwtl
popa
mov
insl
shl
jne
mov
push
pop
fucomi
cltd
xor
cmpb
push
or
adcb
cmp
pop
cmp
cmp
sub
mov
or
les
je
push
decl
js
adc
add
shll
jno
mov
rorb
lock
dec
adc
dec
or
inc
xchg
lock
pushf
movsl
mov
icebp
pop
shll
mov
xor
mov
test
jecxz
sub
js
mov
call
lahf
jb
outsl
jmp
and
mov
arpl
fildl
faddl
js
xor
ret
pushf
pop
xor
dec
adc
sbbb
mov
lods
cmpb
outsb
test
lret
pop
dec
in
addr16
push
aad
lahf
sarb
jg
daa
cltd
push
or
pushf
cwtl
sbb
sti
mov
jg
js
xchg
fisubrs
repz
and
dec
or
pop
inc
inc
and
sub
fsubl
dec
shl
cli
inc
xchg
mov
mov
xlat
dec
push
fcoml
lods
movsb
mov
int
jge
sbb
xor
mov
push
fsubp
addr16
xchg
or
adc
test
shrl
jns
jae
lahf
cwtl
adc
dec
mov
cmp
sti
inc
enter
and
xchg
call
or
insb
or
pop
out
pop
iret
dec
cltd
lea
lods
mov
insb
xor
mov
nop
jo
leave
sub
jno
adc
pop
insl
cmp
loop
aad
and
inc
dec
shlb
daa
repz
jge
out
aaa
repnz
xlat
sbb
pop
cmp
add
rcr
ret
or
xchg
xchg
sub
push
fmuls
ja
xor
insb
sbb
outsb
std
std
add
xchg
xchg
add
or
cwtl
sbb
loopne
and
jb
into
rorb
sub
mov
adc
fimull
and
es
push
mov
xor
cmpsb
movsb
adc
cltd
mov
pop
xor
sub
sahf
mov
movsb
or
sub
mov
pop
cmp
icebp
and
scas
mov
push
arpl
lret
imul
xchg
jg
inc
stos
mov
loop
jb
cmove
pop
loop
adc
mov
xor
pop
cwtl
mov
movsl
mov
lock
push
movsb
cmp
fucomi
xor
fildll
stos
mov
sbb
in
lea
xchg
adc
inc
mov
in
les
pop
ret
addr16
push
xchg
das
mov
dec
dec
dec
mov
stc
cmp
shrb
push
cmpsb
add
ficomps
popa
test
jno
push
enter
dec
frstor
iret
pop
and
xchg
jg
jns
add
lcall
sbb
into
rcll
jp
test
cs
punpckhwd
inc
fisttpl
jmp
scas
xchg
lret
mov
cltd
or
and
and
add
sbb
or
xchg
lcall
push
js
mov
inc
aam
lret
aad
enter
pusha
and
aam
pop
fnstsw
cmc
or
in
and
xlat
pop
and
lahf
push
mov
fwait
jo
jle
fnsave
decl
testb
shrb
lds
aad
pop
push
jp
inc
std
into
inc
jno
rclb
insb
pop
push
ss
test
dec
mov
mov
inc
testl
lcall
adc
bnd
cmp
lahf
lock
push
and
xor
test
mov
call
mov
fildll
clc
in
mov
ss
jno
mov
stc
mov
pop
fdivp
or
adc
lods
jbe
and
outsb
mov
cmc
fisttpll
rorb
add
mov
cmp
imul
shr
or
dec
adc
stos
jmp
mov
daa
xor
mov
push
sbb
rol
xchg
int
lahf
fnstsw
mov
adc
or
int
xor
inc
int
imul
leave
xorl
dec
push
mov
and
xchg
pop
repnz
xchg
cwtl
insb
cmpl
insb
aam
add
xchg
jg
dec
and
fwait
xor
dec
cmpsb
imul
jl
inc
sub
mov
adc
push
or
daa
xchg
out
dec
jb
popaw
inc
jb
iret
xchg
pop
leave
mov
notb
out
fs
in
push
push
pop
inc
imul
push
hlt
popa
and
jo
int3
test
pop
jnp
icebp
outsb
pop
dec
sbb
in
sub
into
adc
xor
pop
sti
dec
mov
xchg
mov
pushf
mov
jo
aad
in
mov
shll
xchg
mov
jb
jecxz
mov
or
mov
rcrb
jo
lea
jae
dec
test
fsubrl
sub
sbb
lcall
or
lcall
fiadds
movsl
leave
lods
ss
into
addr16
push
xchg
insl
cmp
add
mov
jb
rorb
int
push
sub
hlt
clc
lret
cmc
enter
rep
cmc
notb
mov
repz
repnz
or
xchg
dec
loope
jbe
adc
roll
sbb
xchg
mov
dec
jmp
rol
dec
pop
nopl
cmp
xchg
cmp
pusha
xchg
mov
mov
pushf
stc
cmp
rcl
cmp
aad
sub
inc
lods
mov
or
nop
sub
add
pusha
cmc
jo
and
pop
loopne
mov
pushf
adc
pop
nop
mov
jbe
xor
dec
xor
xchg
frstor
in
add
cwtl
xlat
push
adc
or
xchg
clc
inc
inc
popa
aam
jl
shll
mov
cmc
fucom
sbb
jnp
pop
cmpsl
mov
xchg
outsb
stos
lods
ss
lcall
insb
insl
ss
cs
loope
movsl
in
push
or
xor
cmp
mov
insl
pop
iret
jge
jae
loope
and
dec
xchg
mov
mov
sbb
add
cmp
mov
inc
mov
push
and
testl
mov
inc
outsb
aaa
or
mov
clc
inc
push
or
sub
xchg
mov
jne
outsl
add
outsb
mov
cmc
mov
popa
lock
loopne
xor
push
arpl
mov
jb
movb
sahf
inc
stos
pop
pop
push
inc
sbb
jecxz
and
xor
mov
sbb
test
push
outsb
xchg
adcb
test
inc
inc
rcl
cli
ljmp
nop
push
xor
scas
mov
stos
je
dec
sub
xchg
jle
lret
clc
into
test
push
dec
cs
notl
lods
jne
mov
push
ror
inc
sahf
les
jne
repz
cmc
fadds
and
add
inc
test
js
sub
push
pop
daa
or
int
ss
xlat
pop
mov
pop
dec
sub
pop
inc
inc
js
sbb
shlb
outsl
pop
fistl
repnz
testb
insb
mov
lret
ror
mov
and
orl
jnp
fwait
gs
pop
das
xchg
ljmp
push
mov
fistps
jl
pop
mov
jbe
aad
pop
xor
clc
pop
adc
fisubrs
jecxz
pushf
imul
mov
imul
push
stos
sahf
pop
fucomip
adc
inc
adc
subl
arpl
xchg
cmpsb
pop
pop
cld
or
jg
mov
push
ret
jg
cmpsb
dec
add
lock
sub
inc
push
sbb
cmp
int3
mov
sub
into
insl
jb
jl
loopne
mov
xchg
jbe
mov
iret
add
and
insl
pop
pop
push
aaa
cmp
iret
std
push
cmp
loop
xor
xor
mov
test
loop
sub
inc
lods
or
aad
ljmp
cmpsl
dec
sbb
sti
mov
xor
bnd
inc
cwtl
fisttpl
cmp
push
bound
adc
jmp
loopne
stos
push
stos
dec
push
aas
sbb
jb
les
dec
jnp
xor
pop
cmp
xchg
push
adc
fs
rclb
dec
call
add
jge
mov
pop
adc
idivb
fcmovnbe
or
or
jnp
jb
push
cmpsl
xor
in
xor
dec
lods
fsubs
gs
mov
je
jecxz
mov
in
mov
cld
xchg
clc
pop
jmp
test
std
movsl
lods
cmpb
and
or
mov
popf
and
mov
adc
das
push
into
xchg
cmp
sub
push
ret
cltd
jbe
push
mov
mov
mov
mov
push
in
clc
sbb
les
ret
add
adc
sub
pusha
adc
es
jl
fld
and
dec
push
jns
nop
stc
cmpb
nop
out
js
xchg
xchg
adc
jb
out
mov
rep
andb
sub
lcall
faddl
repz
sahf
push
xor
adc
push
dec
cwtl
mov
fildll
push
test
cmp
push
jmp
faddp
jns
cmc
mov
push
add
mov
fsubp
cmpsl
dec
sbb
xchg
sbb
stos
sahf
ficoml
dec
movsl
push
and
pop
mov
dec
xchg
imul
inc
cmp
lcall
inc
cmp
adc
hlt
movsb
test
call
aad
push
mov
xchg
xchg
mov
and
aad
inc
pusha
lods
jmp
adc
jb
or
popw
push
scas
outsl
out
or
xor
adc
sbb
mov
popf
mov
loopne
xchg
lods
inc
sahf
gs
mov
jl
andb
out
in
jns
pushf
cmp
in
xor
icebp
mov
arpl
sarl
jne
dec
push
shl
lret
pop
lods
jmp
pop
movsl
arpl
lods
das
pop
jl
daa
hlt
std
xchg
lea
mov
mov
arpl
mov
adc
xchg
pop
mov
xor
xor
mov
jo
les
insl
mov
push
dec
mul
add
or
pop
cs
loopne
inc
rcr
push
dec
push
jmp
fucomi
in
nop
out
jl
mov
push
cmp
xor
rol
pop
stc
xchg
cmp
xor
shrb
das
xchg
xchg
outsb
mov
out
hlt
pop
cmpsl
xchg
cmp
and
inc
cmpsb
mov
mov
js
fnstenv
cmpsb
popf
jo
or
or
pop
test
out
ljmp
shrl
add
and
cmpsb
cmp
xchg
jnp
arpl
mov
pop
mov
inc
cmp
dec
shl
adc
inc
sub
arpl
iret
lcall
js
push
mov
cmp
fcoml
adc
pop
xchg
sbb
sbb
inc
leave
and
xor
scas
sbb
fadds
xchg
out
mov
mov
sti
jno
mov
outsl
fldl2e
call
mov
mov
leave
xchg
lds
inc
mov
dec
rcr
fwait
cmp
push
xchg
std
and
stos
out
or
lcall
inc
hlt
ret
loop
xor
push
pop
push
mov
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
jmp
aad
mov
mov
rorb
cmp
daa
sbb
adcl
addl
dec
or
xchg
push
rcl
jbe
repz
cld
mov
xchg
sbb
add
aas
fs
cmc
jns
ret
xchg
ds
loopne
jl
add
mov
fimuls
mov
aam
rcl
xor
push
mov
fsubr
bound
sti
jmp
mov
lods
sub
adc
jg
pop
inc
cltd
decb
xchg
dec
dec
push
mov
fwait
jnp
or
xor
mov
mov
push
lods
xchg
scas
adc
add
jle
mov
gs
fwait
aad
call
or
jne
or
subb
sbb
cmp
sti
cmp
add
data16
push
lock
sbb
aaa
repz
mov
mov
jl
sarb
mov
shll
outsb
in
sbb
dec
add
mov
push
push
mov
aam
cmp
inc
mov
dec
adc
sub
sub
pushf
pop
xor
scas
jg
pop
fpatan
cltd
push
add
mov
jnp
dec
jns
mov
adc
ds
test
mov
enter
inc
push
and
roll
out
and
mov
ja
call
leave
loop
or
lea
ss
cmp
lea
xchg
sub
gs
mov
shll
stos
imul
sbb
mov
xor
rcll
fidivrs
dec
enter
outsb
mov
or
pusha
lods
and
test
push
leave
mov
nop
fstpt
sub
lcall
xor
ljmp
mov
jmp
dec
sbb
pop
push
int
repnz
xor
inc
movsb
decl
scas
mov
mov
sub
inc
or
lret
push
add
lret
sbb
push
xchg
movsl
arpl
sbb
sahf
mov
lahf
or
push
push
jae
xor
out
fsub
or
daa
icebp
jnp
pop
pop
mov
ficompl
xorl
jg
cmpsb
push
mov
xor
fnclex
push
icebp
push
out
fisttpll
out
jge
fsubl
fstps
out
dec
sti
cmp
lcall
mov
push
and
shll
les
jp
lcall
pop
out
mov
test
sbb
leave
ljmp
lds
xchg
dec
mov
xchg
xor
and
inc
xchg
jno
sbb
adc
scas
mov
mov
mov
fstpt
stos
clc
loope
push
subl
add
shr
push
add
ror
mov
mov
test
mov
cmc
inc
lahf
add
fmull
fs
leave
sbb
aad
pushf
pop
jmp
mov
dec
and
dec
idiv
test
out
ret
leave
inc
movsb
leave
mov
or
mov
loop
push
cmp
in
test
test
xchg
jae
push
insl
nop
rolb
js
adc
mov
mov
std
cmp
les
divb
cmp
push
das
and
test
test
imul
adc
ja
rcr
loopne
xor
jg
cmp
xchg
lahf
insb
popf
insb
mov
jo
aaa
inc
push
jne
adc
iret
or
dec
jno
sub
mov
adc
dec
xchg
pusha
jb
jne
scas
pop
push
ss
push
lock
dec
adc
jge
std
mov
shlb
push
add
xlat
ret
lret
pushf
mov
fsubr
mov
sti
add
in
clc
jp
fs
pusha
lcall
cs
mov
lahf
push
popa
das
mov
les
sbb
adcl
bound
pop
mov
pop
daa
adcl
cli
test
jnp
sub
js
cmp
or
jbe
lock
fstpt
cmp
notb
lds
scas
rolb
xchg
jne
adc
sbb
and
cli
test
cld
mov
pusha
ret
aam
adc
jne
shrl
iret
jl
mov
xor
cltd
stos
repz
into
pop
loope
aam
xchg
mov
cld
push
jo
jl
call
xchg
mov
outsl
bound
je
out
enter
shrb
jo
lret
xchg
sub
add
or
sub
loope
xor
cmp
cmp
jge
sbb
loop
pop
adc
push
pop
inc
aam
scas
lahf
enter
in
mov
bound
popf
jb
or
mov
add
lods
cwtl
cmp
jle
or
xchg
push
movsb
push
jl
lods
scas
std
subb
inc
dec
jno
cmp
ss
gs
adc
out
inc
nop
fdivs
pop
arpl
dec
mov
mov
inc
xor
scas
cmc
and
movsb
mov
popf
lcall
xchg
clc
in
fdivrl
add
add
mov
fnsave
cmp
test
dec
dec
sub
sarl
pop
mov
push
mov
push
mov
ret
push
rclb
out
int
push
iret
pop
test
push
xor
push
mov
fs
call
rcrl
pop
fcmovnbe
push
test
movl
pop
test
scas
or
mov
ror
outsb
cmp
pop
repz
and
insb
decb
mov
dec
mov
and
jg
jnp
xor
std
jne
xor
movsl
ds
mov
jmp
fs
subl
push
pop
push
mov
testl
dec
inc
inc
mov
aas
add
jo
jmp
pop
mov
lahf
out
test
fisttpl
lahf
push
popf
fld
add
addr16
cmp
loopne
sbb
out
mov
sub
cltd
xlat
push
cmp
and
mov
js
shl
sbb
mov
cmc
rorl
fdivrp
sbb
dec
ss
mov
xor
pop
lcall
xchg
out
shll
push
icebp
push
out
sub
push
jne
stc
dec
iret
in
andb
jl
jmp
sbb
movsb
pusha
jbe
mov
mov
jns
mov
pop
mov
xchg
int3
xchg
test
adc
das
rcll
inc
push
mov
push
aas
jns
and
arpl
cmp
loopne
sbb
mov
shrb
cltd
add
xchg
pushl
xor
loop
dec
pop
ret
inc
cwtl
fwait
ds
data16
dec
jns
lods
cmpsl
subb
cmc
xchg
jmp
mov
nop
aas
and
pop
jecxz
cmc
add
sub
sub
js
shrl
les
push
push
rclb
outsl
fmull
jmp
aad
dec
loope
lock
sbb
add
mov
mov
ja
mov
jno
idivl
push
sbb
fs
jp
int
sbb
movsl
stc
test
fwait
mov
sub
sub
ja
mov
jne
mov
sub
fcompl
daa
stc
push
xchg
rcrb
shrl
adc
fs
add
jmp
adc
arpl
inc
mov
movsb
inc
cld
fldenv
inc
mov
mov
shll
jne
pop
aad
shrb
sub
cmpsb
inc
lret
push
cs
int
mov
push
lds
fisttpl
je
jmp
je
push
and
or
cmp
jne
insb
push
inc
mov
xlat
dec
les
arpl
mov
rorl
fdivp
cmp
cmp
cmc
dec
addr16
push
out
adc
mov
pop
decb
je
inc
mov
sbb
mov
rclb
mov
cwtl
rorb
adc
xchg
andl
and
and
mov
mov
fisubs
cmp
rol
sahf
xchg
or
test
repnz
cs
or
adc
sti
imul
shlb
or
and
cmpb
cmpl
dec
adc
and
pop
test
aam
lret
sbb
call
pop
jbe
xchg
sbbb
out
inc
mov
pop
test
notl
push
mov
inc
cmp
cli
hlt
and
mov
in
nop
fcomps
pop
push
fs
out
mov
in
mov
or
and
mov
int
push
push
xchg
cli
out
push
push
movsb
or
push
mov
sar
add
dec
adc
lds
loope
rolb
out
clc
push
fs
push
sub
pop
frstor
mov
out
lret
aad
lea
mov
test
lcall
loop
inc
rcrb
je
insb
and
out
push
in
sbb
and
push
sti
sbb
jbe
adc
mov
jbe
jns
leave
test
sub
popa
pop
xor
or
mov
sarb
push
sahf
push
mov
js
adcl
adc
push
inc
in
dec
sub
sbb
rol
das
stos
jae
popa
repnz
push
or
fistpl
nop
push
movsl
shll
xchg
rclb
scas
inc
int3
cmp
arpl
add
inc
jnp
inc
xor
sbb
push
add
xchg
sahf
jns
scas
ja
lret
or
mov
add
adc
cmpsl
sub
jb
cmp
and
cmp
push
divl
outsb
and
shl
add
stos
mov
stos
adc
movsb
mov
in
mov
scas
sub
dec
loop
pavgw
in
sbb
inc
mov
lahf
and
xor
pop
dec
rol
hlt
test
inc
sub
outsb
adc
mov
je
cmc
test
adc
stc
lods
sbb
test
push
jl
adc
popa
orl
ja
out
imul
cmp
and
movsb
rcll
arpl
pop
xchg
aaa
aas
jle
adc
cmpsl
clc
xchg
cmp
cmpsb
jg
mov
lret
pop
test
lds
push
push
daa
shlb
pop
daa
sahf
pusha
add
cmp
int3
jno
int
jle
aaa
in
jb
xchg
pop
mov
test
es
pusha
sarl
mov
mov
push
jecxz
sbb
jl
xor
mov
adc
and
mov
push
mov
jp
lock
pop
sbbl
stos
jne
aaa
das
lock
fs
repz
jne
andb
mov
add
mov
pushf
xor
fs
aad
or
add
mov
and
push
pop
ljmp
inc
push
mov
lds
lahf
aad
enter
or
cmpsl
bound
xor
push
popf
jmp
xor
adc
cmp
jae
fbld
ret
ret
dec
or
orb
fwait
bound
pop
int
sub
in
cmc
fidivs
sub
andl
sbb
cltd
pop
dec
in
add
lods
sarl
mov
mov
out
push
movsb
stc
stc
out
stos
mov
aas
mov
push
sarl
divl
or
jo
mov
addb
shlb
fidivrs
daa
in
push
stos
and
hlt
mov
js
mov
sbb
in
pop
sbb
mov
sub
pop
xchg
add
in
movsl
pop
outsb
jl
inc
dec
loopne
loope
int
lods
ljmp
testl
shl
les
movsb
arpl
adc
add
mov
out
jno
scas
inc
push
mov
stos
in
movsb
mov
popa
rclb
xchg
movsb
add
lahf
outsl
inc
std
mov
xchg
add
inc
ds
sbb
or
mov
add
scas
cmp
sub
jo
je
push
or
repnz
movsb
jl
or
add
and
xchg
mov
adc
mov
test
js
sub
jg
push
in
test
enter
sbb
stos
or
push
mov
pop
inc
out
add
loopne
jae
arpl
out
xchg
mov
or
jns
les
mov
jmp
mov
fldt
mov
orl
jno
mov
repz
push
push
arpl
hlt
movsl
out
pop
pusha
xchg
sbb
or
push
ret
push
rcr
push
pop
outsl
dec
ret
fstpt
cmp
aaa
pusha
xor
pushf
cmp
out
xchg
scas
jg
add
je
mov
mov
add
xlat
cmpsl
sbb
addb
hlt
in
jne
js
xchg
cs
xorb
sbb
repnz
sub
and
cltd
mov
inc
and
inc
shrb
cmp
sarb
lcall
insb
stc
bound
call
pop
outsb
scas
enter
dec
adc
out
sbb
inc
jae
pushf
ljmp
rcl
cmp
rclb
cld
call
cmp
mov
fstps
das
inc
mov
shll
iret
sti
lods
outsl
push
loop
jp
mov
push
inc
aad
xchg
pop
das
rcrb
div
repz
cmpsb
les
mov
mov
pop
inc
fwait
push
cmc
jbe
or
mov
dec
pop
mov
mov
mov
loope
cltd
add
jbe
in
sub
xchg
pop
sti
cmovg
out
lret
out
lock
test
or
jg
aad
mov
sbb
cmpsb
out
add
sub
cmp
enter
inc
mov
fnstenv
jne
inc
xchg
push
mov
sub
lods
jb
ljmp
repz
test
push
std
push
adc
mov
and
fsubr
xor
nop
clc
push
pusha
mov
or
mov
dec
lcall
iret
mov
xchg
aas
mov
jge
fmull
jle
cmp
rol
ret
ljmp
pop
mov
mov
test
adc
or
cli
pop
pop
xchg
shl
test
sbb
testb
mov
hlt
aaa
daa
sahf
mov
jmp
fs
jno
lret
mov
repnz
stc
pop
mov
inc
jge
or
rclb
mov
sbb
cld
pop
sbb
pop
pop
push
dec
jmp
mov
mov
lds
lock
scas
sub
shll
inc
xchg
js
jno
rcll
fdivrl
sub
xchg
add
jmp
dec
dec
stos
pop
jl
sti
push
adc
mov
test
js
cmpsl
lods
ljmp
mov
cmp
xchg
cmp
xchg
stc
mov
mov
jns
icebp
test
inc
arpl
imul
jle
and
lock
lds
inc
mov
enter
and
push
shll
shll
loope
pop
prefetcht0
rcrb
xchg
mov
mov
mov
sti
cltd
negl
or
mov
test
cmpl
cltd
out
adc
xchg
out
adc
sub
adc
jge
cmpl
fwait
mov
jne
clts
sub
mov
inc
loopne
mov
cs
nop
popf
sahf
lds
loop
xor
mov
push
pop
sub
nop
and
sti
push
pop
sbb
xor
sti
push
cmc
fcom
repz
lret
inc
stc
add
mov
lods
out
stos
jnp
sub
mov
mov
add
lret
mov
insl
outsl
or
dec
scas
mov
mov
pop
xor
and
nop
xor
hlt
xor
mov
pop
mov
repz
jne
mov
and
xchg
jg
je
xchg
stos
mov
sahf
pop
push
mov
repnz
mov
dec
and
ja
rcrb
jle
push
and
movsl
pop
ret
jo
or
mov
mov
sbb
decl
xor
inc
xchg
jbe
add
cmc
mov
dec
fisubl
jmp
sbb
daa
xchg
pop
jp
lods
xlat
ljmp
mov
movsb
loope
sub
pop
lahf
fucom
ret
test
mov
mov
jno
fwait
sbb
in
jns
mov
jns
test
ror
pop
les
dec
sbb
xchg
push
sbb
push
sahf
or
sbb
arpl
and
push
hlt
add
test
les
sbb
mov
icebp
mov
imulb
out
jnp
out
dec
or
andb
icebp
into
lret
jne
data16
sbb
cs
mov
stos
sahf
jb
clc
xlat
inc
stos
pop
repnz
xchg
std
push
pop
or
out
xor
js
cmc
outsl
dec
lret
loopne
pop
pop
or
pop
iret
imul
dec
pop
adc
int3
sbb
xor
mov
inc
dec
fsubrs
jg
ss
add
fcom
cwtl
add
jno
arpl
dec
mov
dec
jb
cmp
or
outsb
cmpsl
mov
jp
push
in
or
fstps
mov
fdivr
cmc
mov
xlat
cltd
jg
lea
adc
cwtl
incl
std
adc
pop
outsl
loop
sarb
push
inc
test
mov
gs
adc
out
add
fldt
ss
loop
xor
inc
cmp
clc
ljmp
pop
or
dec
jns
cwtl
push
cmpsb
xor
aas
mov
fs
pop
adc
mov
dec
dec
ljmp
out
mov
or
cld
sbb
and
add
pop
call
call
cmpsl
fimull
jns
icebp
xchg
dec
fwait
push
mov
ljmp
mov
shr
sbb
sbb
inc
inc
repnz
test
imul
fdivrl
test
jb
nop
inc
cld
adc
rcll
inc
cmp
ret
ss
dec
daa
roll
ficomps
adc
mov
or
or
jns
add
int3
or
mov
ficoms
mov
jb
xchg
imul
popl
sbb
mov
push
ljmp
mov
cmpsl
push
push
mov
inc
mov
popf
imul
mov
hlt
sahf
mov
out
push
sbb
cmp
sbb
sbb
imul
xor
sbb
mov
dec
ret
inc
pop
mov
test
jmp
mov
cmp
testl
mov
mov
sub
and
into
and
loopne
inc
inc
ds
jno
sbb
orb
push
out
sti
and
lret
jo
lret
cmp
mull
decl
push
xor
cwtl
lret
stos
fiaddl
cmpsl
cli
cmp
and
jae
sbb
mov
arpl
add
dec
shrl
cmp
cmp
add
ficomps
imull
sub
je
ja
mov
gs
les
jg
dec
out
jae
loope
in
lock
xor
stos
push
repnz
aas
xchg
xor
cmpsb
out
test
leave
push
jmp
adc
fcompl
cs
mov
pop
rorb
addr16
rcll
jno
xor
pop
inc
xorl
lcall
pop
and
shrl
xchg
xor
repz
adc
mov
mov
mull
fcomps
add
sub
test
sbb
lock
lea
dec
ss
xchg
push
push
test
mov
cmp
in
es
xchg
icebp
call
push
add
pop
fidivs
xchg
in
lock
or
jae
lret
or
repnz
scas
inc
aas
faddl
rcl
mov
ret
hlt
mov
mov
mov
mov
or
pop
or
pop
cmc
repnz
xlat
lods
mov
movsl
adc
sbb
push
cmpsb
adcb
xor
lret
stc
adc
roll
sub
xchg
test
ficomps
adc
aam
mov
stos
mov
adcl
ret
test
leave
and
and
fdiv
loope
ficoms
dec
jp
fimuls
cs
lock
das
call
imul
cmovle
mov
dec
adc
xor
stos
and
pop
inc
pushf
call
scas
icebp
sub
pop
jge
pop
sub
in
jecxz
inc
movsb
fisubrl
jbe
lret
and
repnz
xchg
sub
jbe
dec
out
repz
aaa
dec
pop
std
adc
jno
out
cmpsb
mov
aas
inc
imul
jb
test
lret
inc
movsb
push
icebp
push
mov
cmp
orb
clc
lcall
mov
add
int3
rclb
mov
xchg
mov
leave
inc
insb
inc
mulb
push
push
nop
mov
mov
push
stc
out
cli
mov
and
notl
leave
and
and
outsb
xor
stc
lds
hlt
out
rclb
popa
pop
and
in
dec
scas
test
push
xor
stos
std
pop
aam
shrb
repz
jle
or
sbb
mov
in
sbb
call
jae
cli
scas
push
movsb
bswap
insb
push
outsl
scas
fsubs
and
lahf
jno
mov
scas
mov
ret
cmpsb
sarl
and
in
jbe
inc
push
imul
js
inc
fsub
repz
pop
or
jns
push
mov
pop
push
daa
cltd
sub
xchg
jmp
enter
xor
xchg
pushf
jl
jno
xchg
xchg
sub
xchg
iret
cmp
sub
mov
in
loopne
int
jne
cltd
iret
inc
cltd
push
cltd
xchg
or
addb
sbb
call
push
pop
movsb
dec
cli
mov
inc
add
cmp
out
xchg
add
adc
pop
fsubs
stos
xor
addb
ja
ds
cmpsb
adc
pop
popa
movsl
xor
pop
jae
fcompl
adc
or
lret
cs
mov
dec
cld
cmp
mov
sub
fsubp
push
in
jno
and
adc
fidivrs
cmp
sub
sbb
test
mov
aaa
xor
jg
dec
popa
test
adc
jae
mov
clc
repnz
notb
pop
push
xchg
loop,pt
add
cmpsl
sbb
cld
dec
jbe
pop
out
pop
lea
xor
inc
andb
test
lret
cwtl
pop
aas
xchg
cwtl
xor
push
adc
imul
xchg
outsb
cmovne
push
out
cs
imul
std
or
adc
sub
aas
mov
mov
rcrb
out
pop
or
mov
pop
enter
sub
xchg
sbb
or
mov
aaa
mov
xchg
shrl
mov
xor
xlat
dec
fsubs
mov
sahf
ret
scas
jmp
inc
jbe
int3
scas
inc
xchg
fdivs
repnz
xchg
push
and
add
dec
mov
xorb
pop
pop
aas
data16
insb
mov
popa
and
inc
lcall
popa
repnz
lcall
idivl
imul
sub
fdivl
inc
pop
sub
lahf
in
popa
cmp
fnsave
push
xchg
sbb
popf
addr16
std
js
or
and
inc
sbb
xchg
sbb
je
js
adc
mov
jbe
sahf
push
test
daa
scas
insb
jge
test
mov
ss
pop
and
adc
out
mov
movsb
xchg
cli
sahf
les
jnp
jge
mov
pushf
aas
xchg
lret
jg,pn
out
movsl
pop
leave
xor
jle
mov
xor
adc
addr16
in
push
mov
jne
pusha
mov
inc
and
or
xchg
sbb
je
xchg
cmc
jg
stos
sti
fidivrl
pop
sub
pop
jb
xchg
inc
test
push
fwait
aad
push
xlat
pop
test
mov
lret
neg
push
and
jb
cmp
xor
in
outsl
mov
rol
adc
and
es
jns
or
jae
sub
lods
mov
inc
sub
pusha
out
and
mov
add
cmpsb
push
cmp
xchg
popf
cwtl
neg
test
test
xchg
mov
or
data16
dec
aaa
mov
lock
data16
icebp
pusha
in
sub
retw
xchg
xor
xlat
or
adc
dec
loop
test
leave
sahf
xchg
lahf
adc
lcall
or
add
sub
dec
push
sbb
sub
fisttps
stos
scas
or
and
ljmp
out
sahf
in
xchg
mov
cmp
pop
push
test
mov
and
lret
clc
cmc
add
shlb
pop
frstor
js
arpl
sbb
lcall
stc
gs
das
fistpl
push
adcl
sub
sar
loopne
imul
data16
cmpsl
loop
jg
push
xor
sbb
pushl
and
dec
mov
mov
arpl
push
jmp
ret
aad
sub
pop
popa
pushl
imul
add
jp
push
sub
enter
or
in
jae
jae
pop
xchg
push
arpl
push
sbb
inc
xor
adc
mov
ds
mul
jbe
dec
mov
call
inc
sbb
call
aad
sub
pushf
cli
in
inc
adc
jo
add
ret
movsl
lcall
les
int
fnstcw
mov
repz
push
cld
xchg
mov
jae
pop
add
pop
daa
jle
roll
adc
ja
jnp
negb
je
dec
outsb
popf
pusha
pop
ljmp
sbb
mov
and
sbb
mov
dec
pop
mov
add
sbbb
test
dec
je
in
sub
aas
jecxz
cld
sbb
jecxz
lret
test
add
cwtl
push
ss
inc
fmuls
es
xor
mov
xor
sbb
fld
or
jbe
or
pop
xor
sbbb
test
push
mov
push
les
mov
mov
jmp
popa
push
in
mov
repnz
outsb
push
cmp
aam
arpl
adc
jmp
or
insb
movsb
mov
xor
ret
arpl
sub
push
dec
adc
pop
push
mov
or
sbb
jmp
fwait
jmp
cmp
repnz
je
pop
jb
jp
mov
cmp
cmc
pop
xchg
shl
shl
pop
dec
pusha
cmc
dec
loopne
enter
pop
mov
or
fstpl
dec
test
pushf
xchg
jl
dec
sbb
xchg
lret
sti
loopne
ja
aas
test
push
sub
or
leave
and
mov
mov
push
mov
cmc
aam
mov
add
cwtl
and
fdivrl
mov
xchg
sub
jle
sbb
sarl
push
and
and
arpl
fcmovne
gs
stos
adc
sub
jmp
mov
test
push
ljmp
push
stc
nop
loopne
mov
xlat
cmp
popf
jecxz
gs
stos
push
push
sub
pop
dec
pop
sbb
sahf
xor
jne
popl
aas
cmp
orb
and
hlt
jmp
inc
adc
xor
psubusw
fcmovu
icebp
jl
neg
rorl
jle
or
add
pop
jmp
jo
add
lret
pop
cmpsb
lods
xchg
mov
sub
sar
mov
mov
adc
mov
mov
add
jb
cmp
xor
xor
jo
mov
jle
mov
ss
inc
xchg
inc
insb
es
ljmp
pusha
lods
or
jp
dec
push
fdiv
test
and
pushf
arpl
adc
jmp
xor
xor
jbe
repz
xchg
popa
stos
push
inc
mov
mov
and
fdivr
mov
mov
cmp
out
into
sti
jp
popa
sbb
rcpps
lds
inc
clc
bound
inc
sub
sbb
mov
cmp
in
jmp
pop
test
addr16
jp
cmpsl
or
pop
and
test
or
repz
mov
lahf
clc
cltd
das
jge
stos
mov
aad
mov
imul
xchg
outsl
adc
addb
or
inc
push
mov
add
in
pop
pop
sub
cmp
inc
xor
xchg
dec
inc
and
push
mov
xchg
gs
add
xchg
inc
xor
xchg
in
jno
push
outsb
jge
into
push
pop
nop
pop
xchg
bound
imul
mov
adc
pop
cmp
js
xchg
call
sbb
lock
xchg
shl
loopne
dec
mov
stos
pop
sbb
or
mov
das
cmp
dec
sub
fsts
popa
scas
addr16
aad
fadds
gs
adc
push
mov
shl
jmp
imul
push
les
adc
clc
lock
daa
ret
sub
mov
dec
pop
push
lock
xor
adc
sub
push
add
and
adc
ds
dec
in
shlb
repnz
sub
push
int
bnd
in
pop
ss
xor
clc
out
imul
pop
sti
ficoms
or
addr16
mov
inc
test
in
sbb
add
out
into
int3
lahf
rcl
stos
imul
xor
js
out
rcll
add
mov
jmp
icebp
imul
and
in
fcomp
das
jns
mov
decb
push
xor
daa
imul
movsb
fbstp
push
mov
orl
mov
mov
or
cmc
xlat
dec
add
clc
icebp
jns
insl
dec
cld
mov
enter
fidivl
jle
repnz
mov
bound
inc
cmp
cld
push
push
and
sub
addl
int3
pop
push
fisttpll
ficompl
push
cmp
push
aas
fs
addl
xchg
mov
jo
rorl
xlat
enter
xchg
fildl
out
push
and
test
int
scas
sbb
xlat
push
push
pop
dec
dec
test
scas
or
xor
add
sbb
add
adc
cmpsl
mov
in
xchg
in
fsubl
aad
lds
aaa
dec
or
lret
push
les
imul
mov
inc
ja
and
loope
sub
inc
jb
stos
inc
adc
dec
pop
mov
push
mov
movsl
sub
add
sub
dec
cmp
flds
outsb
xchg
data16
pushf
fwait
les
inc
jmp
inc
les
xchg
xchg
push
aad
arpl
jl
pop
pop
mov
sarl
push
repz
outsl
test
push
mov
dec
insl
fxch
sub
mull
loopne
adc
jno
popf
xchg
xor
out
mov
or
mov
mov
mov
ss
add
sub
or
sti
jl
pop
fnstcw
dec
add
scas
ficompl
and
jg
jl
mov
sti
inc
lock
push
xchg
loop
les
mov
inc
data16
xchg
dec
mov
sbb
and
inc
sbb
cmp
xor
mov
fildl
cld
xor
bound
scas
xchg
mov
adc
xchg
or
cld
inc
loop
adcb
mov
lea
sub
mov
lea
dec
notl
jb
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
notl
push
sub
push
sub
mov
mov
mov
inc
mov
or
movl
movzbl
adc
movl
adc
mov
add
mov
adcl
sub
adc
mov
xorl
xorl
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
pushl
pushl
call
cmpl
jb
mov
sub
mov
orl
mov
andl
mov
sub
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jb
mov
xorl
orl
mov
andl
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
movl
cmpl
je
cmpl
jbe
jmp
call
mov
dec
mov
jmp
mov
orl
add
mov
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
jmp
mov
mov
mov
neg
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
adcl
movl
subl
lea
movzbl
sbb
mov
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
call
jmp
lea
add
mov
xor
mov
mov
mov
sub
xor
mov
adc
mov
adcl
xor
orl
add
xorl
mov
andl
xor
add
inc
mov
cmpl
jge
jmp
push
push
pushl
call
cmpl
jb
mov
mov
mov
add
movl
cmpl
je
cmpl
ja
jmp
push
call
xor
or
dec
mov
jmp
push
sub
mov
mov
mov
mov
mov
adc
mov
xor
and
mov
add
movl
cmp
movl
je
notl
mov
jmp
mov
xorl
xor
push
add
xor
xor
sub
mov
add
movl
push
adc
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
push
push
pushl
call
jmp
mov
xor
subl
xor
movl
cmp
movl
jne
movl
cmp
jne
push
movl
jmp
mov
xor
adcl
add
subl
xor
add
movl
adc
subl
xor
orl
xor
movl
cmp
movl
jne
cmp
movl
jne
addl
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
call
xor
xor
dec
mov
jmp
xor
add
mov
subl
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
jmp
mov
movl
xor
add
adcl
imul
mov
orl
xor
add
movl
cmp
mov
je
movl
cmpl
je
cmpl
ja
jmp
push
push
call
mov
dec
mov
jmp
mov
orl
add
and
mov
mov
xor
add
imul
sbbl
mov
mov
mov
mov
xor
mov
sub
mov
jmp
mov
xor
mov
mov
mov
xor
mov
sub
mov
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
jg
mov
mov
xor
mov
sub
mov
jmp
mov
xor
add
add
mov
mov
mov
xor
add
not
and
mov
movsbl
cltd
add
adc
jmp
pop
push
xchg
dec
add
shll
mov
sbb
addl
add
orb
sbb
add
in
cmp
orl
outsl
into
imul
jno
or
leave
addr16
fs
repz
mov
cmp
jp
clc
mov
insb
jge
lods
mov
xchg
jecxz
push
jbe
in
cmp
add
and
pop
ret
pop
aam
jle
and
mov
adc
gs
push
or
jl
xchg
or
pop
sbb
sub
mov
jmp
lods
in
scas
cmp
push
pop
cs
lock
inc
jbe
out
add
and
mov
call
sbb
sub
enter
data16
push
xchg
push
mov
pushf
push
mov
sub
jo
or
cmp
inc
stc
cmp
lcall
jae
sarl
pop
adc
pop
int3
and
mov
ss
sbb
dec
push
js
mov
enter
inc
cmp
loopne
fmuls
int3
mov
pop
scas
rclb
lock
add
xor
outsl
sbb
mov
cmpsl
imul
jne,pn
jbe
jo
fwait
cmp
ret
hlt
frstor
sbb
mov
add
aaa
sbb
pop
push
imul
cmp
or
fildl
test
setae
push
xchg
imul
pop
jno
mov
push
mov
int3
scas
shl
cmc
and
or
mov
inc
dec
mov
fcmovbe
xchg
cld
fld
dec
insl
push
sarl
fs
negb
dec
and
xor
xlat
fsubrs
pop
aam
sub
imul
fs
push
cld
popf
inc
mov
shlb
push
outsb
and
repnz
add
jmp
sbb
and
iret
sub
xor
xor
aas
insb
movswl
jle
or
lock
pop
les
sbb
inc
daa
insb
fcompl
cmpsl
imul
aad
jne
pop
cwtl
jge
repz
negb
aam
shl
pushf
push
ljmp
mov
insl
add
nop
add
mov
pop
xchg
fcmovnb
add
sbb
iret
sub
xchg
adc
xchg
cmp
mov
mov
push
sub
xchg
decl
fdiv
jnp
mov
fildl
in
inc
pop
outsb
dec
or
mov
sti
jecxz
repz
mov
inc
cld
xor
adc
fildl
mov
xlat
cmovg
int3
lret
jns
xchg
lock
push
push
jno
notl
jmp
imul
and
jl
jnp
inc
jo
inc
rorb
xchg
adc
sub
push
addr16
mov
xchg
lahf
or
repnz
imull
je
jg
sbb
lock
pop
cli
movsb
cmp
push
scas
jge
push
lcall
push
mov
cltd
in
mov
sbb
mov
sti
add
and
inc
sbb
mov
shrb
test
test
cmp
enter
inc
int3
add
loopne
sbb
xor
pop
adc
cmpl
push
cmp
int
pop
push
outsl
or
and
mov
inc
rcll
aam
cli
adc
fidivl
mov
jle
out
call
repz
mov
xor
mov
stos
mov
repnz
lods
imul
insl
jecxz
cmp
and
cwtl
int3
jb
inc
add
pop
call
push
sbb
adc
cmp
adc
sbb
pop
dec
or
out
add
add
pusha
inc
ja
repz
cmp
or
adc
stc
jle
out
xor
push
rorb
ret
jae
sub
mov
repnz
popf
inc
inc
pop
stos
ret
lods
sub
fisttpll
mov
aam
shrb
jno
jb
xchg
popf
or
jl
sbb
jecxz
adc
sahf
ds
mulb
xchg
mov
insb
rclb
aam
imul
repnz
sub
test
out
pop
sub
cmp
jns
adc
arpl
dec
hlt
sbb
mov
xchg
shrb
lods
sub
push
dec
add
or
jb
mov
xchg
mov
xchg
cmp
sbb
xchg
ret
cmp
and
aam
rcr
sbb
jae
popf
sbb
fimull
fists
push
stos
jnp
jle
in
sarb
mov
mov
ds
xchg
adc
inc
push
fwait
jg
aam
repnz
adc
shlb
popa
nop
lahf
push
test
test
dec
push
lret
pop
lret
ret
xlat
sub
add
in
cmp
loop
jns
adc
sub
inc
repz
test
scas
incl
xchg
add
in
inc
das
fisubrl
shl
mov
mov
and
or
int3
mov
out
cli
mov
mov
xor
adcl
out
jb
insb
lret
mov
pop
dec
push
mov
ljmp
mov
mov
cmp
xchg
sahf
inc
sahf
fwait
adcl
sbb
int3
les
sub
les
and
sbb
insl
sub
mov
xor
dec
mov
jle
pop
in
mov
or
test
jle
outsb
xor
and
lcall
dec
push
fistpll
lods
dec
inc
pop
push
inc
les
sub
shrb
negb
and
and
lods
imul
sbb
mov
sub
cmp
jp
xchg
fucomi
in
push
xchg
repnz
mov
inc
in
jmp
cmc
rorl
xlat
or
loop
and
xchg
adc
mov
fidivrl
mov
pop
xchg
test
add
jbe
sub
add
push
xor
dec
xor
or
imul
cmp
push
mull
dec
mov
outsb
je
repnz
mov
xchg
push
jo
mov
aaa
js
stos
push
mov
mov
dec
xchg
mov
push
int
insb
addr16
fwait
add
dec
data16
std
fwait
add
loope
or
dec
push
and
xor
lcall
xchg
push
push
mov
jae
mov
jl
cld
xorb
cmpsb
repnz
clc
push
loopne
dec
div
movsb
out
xor
xorb
sub
mov
xor
jne
adc
iret
fbstp
mov
or
orb
xorb
fs
lahf
mov
rorb
dec
adc
mov
cmp
lret
daa
adc
scas
mov
outsb
in
aas
lret
jne
push
push
adc
out
aam
fiadds
mov
jb
inc
aaa
adc
lret
sbb
lds
mov
test
int
mov
out
cs
std
test
data16
fidivrl
bound
das
and
sarb
xchg
jg
cmp
lret
in
insl
out
loop
xor
sub
push
push
adc
pop
xlat
nop
mov
inc
xor
out
add
imul
pop
jae
clc
xchg
stos
inc
pop
cmovp
shrb
cli
mov
lret
test
arpl
jle
arpl
mov
jecxz
and
inc
inc
and
addb
mov
test
ja
xor
pop
in
adc
inc
xchg
mov
mov
mov
arpl
fs
aaa
inc
lret
in
jns
movsb
add
dec
gs
push
add
std
sbb
mov
mov
in
push
mov
fcmovb
push
adc
int
xchg
inc
movsl
dec
inc
lret
jns
cmp
lret
out
stc
in
mov
xchg
sbb
jle
cmpsl
cmp
sub
mov
push
push
xchg
out
frstor
data16
lahf
or
hlt
push
mov
adc
mov
stos
stos
icebp
adc
fistps
mov
adc
imul
loopew
and
xchg
mov
sub
daa
mov
clc
jbe
xorb
mov
inc
icebp
out
enter
push
int
and
xor
gs
test
dec
pushf
clc
rcrl
sti
rolb
lret
cmp
and
mov
or
adc
and
mov
add
insb
and
sub
aaa
dec
pop
adc
or
imul
loop
mov
dec
lret
sbb
sub
or
sub
call
test
and
inc
sbb
movsl
mov
xlat
bound
ret
sbb
mov
add
mov
and
pop
aas
mov
mov
sbb
jb
sub
arpl
sub
loope
popf
sub
mov
jns
jno
xchg
fs
das
lret
cmp
sahf
rclb
cmp
mov
aam
push
xor
jns
mov
addb
loop
icebp
test
dec
aam
int3
out
xchg
adc
push
mov
add
lea
push
icebp
pop
leave
add
cwtl
cmpsl
fisttps
in
pop
cmp
sahf
xchg
cmp
add
fnstsw
add
stos
insl
pop
inc
movsl
inc
mov
clc
hlt
inc
fucomp
or
mov
jno
xor
into
idivb
pop
add
jmp
mov
xchg
imul
sahf
pop
mov
mov
push
mov
xor
insb
or
pop
mov
inc
push
shl
adc
adc
outsb
je
sbb
cmp
mov
movsl
inc
push
cmp
shr
mov
jl
pop
fmuls
idiv
inc
jp
adc
mov
jae
sub
sub
adc
es
xchg
inc
les
loope
inc
imul
subl
es
pop
jl
in
inc
jns
leave
add
cmc
cltd
jno
mov
sti
dec
lods
cmpsb
fiaddl
push
test
iret
dec
fistpll
icebp
iret
adcb
test
loope
enter
iret
das
repz
dec
test
xor
jbe
xor
jmp
std
shrl
test
in
pop
jae
xchg
lea
and
xor
fwait
inc
mov
in
push
mov
test
mov
les
xchg
aad
xchg
je
xorl
lahf
into
jnp
mov
arpl
in
out
loop
and
pop
lods
fstl
rorb
xchg
mov
mov
stos
sub
jo
or
dec
icebp
push
or
sti
pop
push
xor
adcl
add
insb
mov
adc
out
test
xchg
cs
pop
insl
mov
cltd
adc
adc
pusha
les
repnz
aad
faddl
ds
pusha
sbb
pop
in
adcl
dec
and
pop
clc
arpl
cmpsl
sti
inc
movsl
test
xchg
test
inc
adc
in
add
fs
xchg
gs
mov
int
sub
lock
mov
scas
push
lods
push
fucom
sbb
pop
ljmp
sbb
jge
in
scas
xor
jbe
add
dec
jno
xchg
xor
sub
mov
mov
pusha
mov
sbb
fisttpl
mov
fadds
imul
rorb
fildl
and
jno
dec
xchg
data16
and
scas
mov
aas
fsubrl
shrl
andb
mov
sahf
ss
das
ja
adc
jl
mov
pushf
push
leave
call
xchg
inc
add
or
stos
shll
pop
cmp
push
fsubrp
pop
sahf
dec
fists
mov
pop
arpl
inc
and
add
or
out
dec
pop
add
dec
std
rol
jp
mov
mov
jle
aaa
shlb
jb
fwait
rorl
push
xor
inc
loope
pop
pop
jno
sti
cld
lods
repnz
xchg
pop
dec
pop
out
xchg
cmp
mov
cmc
fucomp
mull
sbb
pushf
pop
into
inc
out
movsl
int
ficompl
push
sub
and
mov
in
pusha
test
jae
or
mov
xor
sahf
popa
fwait
ret
int
xchg
jae
pop
mov
mov
xorl
fsts
mov
xlat
cmp
push
sub
adc
mov
cmpsl
mov
inc
or
pop
push
in
mov
hlt
mov
fwait
adc
inc
aaa
cld
nop
int3
mov
jg
pop
ljmp
test
sbb
sbb
popa
dec
xor
xor
mov
push
cld
lock
jb
mov
dec
pushf
cmp
cmpsl
mov
addr16
mov
push
dec
sub
cs
insb
cmc
test
ja
pushf
mov
clc
push
out
push
jbe
and
cmp
jle
jl
jae
mov
cmpb
orb
push
or
sbb
adc
in
sti
into
scas
push
adc
jle
movsb
hlt
mov
pop
and
stc
pop
sbb
push
mov
push
xor
sti
aas
inc
loop
repnz
je
mov
je
jge
arpl
xor
push
sbb
or
inc
idiv
into
jp
xchg
and
scas
cmp
scas
out
loop
and
jbe
xor
mov
add
push
dec
out
popf
dec
and
and
mov
ss
insl
dec
ficoml
mov
fdiv
and
mov
lret
or
mov
pop
fcom
insb
adc
mov
sub
in
sbb
lock
rorb
shrb
fxch
cmpsl
insl
jb
fildll
test
xchg
jnp
fists
pop
adc
add
subb
iret
std
sub
out
jns
ds
jg
cmpsl
xchg
pop
pop
loop
stos
xor
jo
dec
sub
jmp
cld
mov
ret
and
mov
insb
add
fbld
clc
mov
pop
mov
das
and
add
testb
ss
cmp
push
inc
and
jb
xorb
pop
rcr
mov
pop
insb
pop
xlat
adcb
sub
sbb
ds
insl
sub
popa
pop
imul
pop
inc
or
jbe
ret
int3
jns
ret
push
mov
iret
jnp
jns
pop
mov
and
ficompl
int
xchg
add
inc
popf
sub
adc
inc
jb
jne
pop
pop
and
dec
cmp
neg
mov
lahf
hlt
and
push
adc
cmpsl
popf
in
pop
or
jnp
insb
mov
mov
sti
sahf
cmp
sbb
faddl
arpl
es
insb
sbb
inc
cltd
mov
jmp
fwait
lock
cmp
jae
inc
xchg
pop
xchg
loopne
pop
jecxz
mov
jecxz
push
divl
lret
pop
sbb
add
push
pop
push
repnz
or
shl
inc
mov
add
insb
in
int
mov
xchg
shrb
outsl
scas
aad
adc
incb
sbb
mov
inc
lahf
in
pop
addr16
mov
or
jbe
jae
je
jge
cmp
lret
xor
popa
daa
add
mov
jae
or
and
loope
movsl
test
sbb
incl
adc
sub
fcomp
rol
daa
or
and
rclb
pop
cmp
int3
aas
into
mov
in
cmp
insl
push
cmpsb
inc
xor
ret
push
enter
sub
sarl
loop
fadd
jbe
pusha
or
mov
sub
fs
fwait
pop
mov
es
and
out
dec
mov
inc
mov
jb
movsb
jne
sub
outsl
jecxz
push
outsl
xchg
jl
faddl
push
cld
fstpl
xchg
in
mov
das
int3
cmp
in
dec
push
fcomip
adc
jmp
jno
mov
test
fcmovnb
in
cmpsb
fmuls
and
cmp
mov
xchg
mov
sbb
data16
mov
mov
mov
mov
fsubl
cmp
out
ljmp
xchg
jp
dec
and
scas
mov
js
dec
shll
imul
or
adc
lcall
jo
sub
inc
pop
and
scas
in
mov
ss
pop
cmp
pop
movsl
mov
addl
in
ss
shlb
out
adc
sub
jl
mov
or
int
lds
cmp
xchg
sbb
bound
sub
idiv
stos
lcall
cmp
cmc
xchg
bound
sbb
push
call
cmp
fs
sbb
lcall
or
call
fstpl
pop
inc
dec
mov
sub
ret
in
xchg
cld
jmp
jbe
popa
lcall
add
mov
or
cwtl
fsubrs
mov
js
add
fadds
pop
lods
cmc
xlat
and
mov
mov
pop
ljmp
mov
fistl
imul
lret
jmp
xor
push
test
push
lds
inc
add
rolb
dec
pop
je
fstps
adc
xchg
xchg
test
jmp
jle
insb
in
lret
out
rcll
push
adc
test
test
pusha
jg
sub
aaa
cmp
stos
insl
fidivrs
fwait
add
fisttpl
inc
cld
mov
out
mov
mov
andb
push
inc
fcmove
dec
movsl
jbe
push
cmp
adc
xlat
aam
loopne
xchg
pop
out
repz
in
shrl
sbb
fnstsw
addr16
push
push
sbb
imul
push
repz
pop
pop
in
dec
and
scas
inc
sub
dec
mov
and
leave
mov
in
dec
cltd
call
or
mov
mov
in
rcll
or
das
mov
decb
sbb
mov
loope
sahf
test
popa
or
arpl
in
jbe
jno
popa
ja
cmpsl
je
ret
push
mov
and
mov
fildl
xor
imul
push
das
cmp
xor
mov
stos
test
inc
add
jle
popa
cmp
test
or
add
dec
fs
cmp
out
stc
push
pop
mov
sahf
rolb
pusha
aaa
and
cmpsb
push
dec
iret
clc
adc
jnp
ret
fdiv
push
mov
ss
dec
pop
gs
cs
jle
add
stos
and
pushf
mov
pop
jno
add
mov
dec
out
popf
sbb
cmc
inc
jbe
call
jp
mov
jo
mov
cmp
pop
out
int3
std
das
gs
or
pop
in
lahf
pop
sub
fadd
stc
xchg
add
jns
popf
xchg
lea
adc
mov
popa
lods
or
xchg
xchg
cmp
fwait
inc
inc
mov
and
mov
pop
lods
push
aaa
push
xchg
cmpsl
cmc
leave
inc
add
and
mov
mov
ficoms
jle
xor
testl
sbb
nop
mov
jp
or
pop
mov
int3
adc
jo
in
hlt
and
fcmovu
sti
fadds
loope
ret
in
xor
aam
and
lcall
xchg
or
push
and
jmp
sub
es
lods
push
fldenv
cmc
sbb
dec
test
imul
loop
sti
xchg
cwtl
mov
std
in
mov
push
pop
movsl
mov
mov
mov
enter
stc
in
cld
js
outsl
push
jbe
in
add
je
fwait
movsl
sbb
fisttpl
js
enter
mov
add
push
push
jno
jbe
adc
mov
gs
fistpll
pop
push
dec
pusha
pop
xchg
pop
std
iret
adc
sar
jae
push
add
mov
xchg
ret
shl
push
push
cs
lahf
push
push
andb
cld
dec
call
subl
xchg
jge
and
xchg
mov
in
in
adc
xchg
or
cltd
int
mov
int3
lahf
loop
xchg
push
sbb
push
out
jmp
sti
xchg
pop
cmp
pop
inc
sti
sbb
and
mov
out
cmp
push
ljmp
cltd
push
or
imul
mov
out
inc
sbb
lahf
daa
xchg
sub
push
jbe
add
jb
outsb
jp
xor
testb
lret
pop
in
xor
sub
loope
mov
arpl
call
push
sbbb
fstl
jae
dec
push
das
fiaddl
movsb
lea
outsl
idivb
cld
lcall
out
clc
jecxz
sub
sbb
sti
add
divb
sti
push
mov
xchg
iret
fsubrp
cmpsb
ret
dec
pop
pusha
xorl
clc
icebp
jns
icebp
hlt
fildl
les
hlt
leave
out
push
lcall
push
pop
jp
fnstcw
mov
xchg
mov
hlt
lods
pop
and
cltd
jb
out
or
cmp
out
mov
pop
add
leave
push
adc
imul
bound
cmp
or
or
sti
dec
push
dec
adc
in
push
jne
sub
fnstenv
lahf
mov
gs
inc
jb
adc
mov
xchg
mov
jno
cmp
and
cltd
cmpsb
lahf
insb
add
xor
mov
cmpsb
inc
lret
pusha
add
mov
sub
popf
xchg
lods
jns
xchg
fmul
mov
lahf
arpl
jg
test
rcr
aam
imul
cltd
jbe
aas
xlat
pop
insl
inc
addl
in
mov
dec
sbb
xchg
addr16
or
jns
dec
aas
ret
ficoml
cmp
adc
daa
aaa
inc
stos
xchg
add
jg
xor
incb
mov
sub
push
xlat
insl
repnz
adc
xor
cmc
xchg
xor
out
push
and
out
sub
hlt
lods
cmp
ss
push
iret
arpl
push
leave
adc
ss
roll
push
ror
push
arpl
test
lahf
pop
push
xchg
sub
decb
mov
lock
dec
pop
sub
adc
subb
xchg
and
dec
bound
cltd
sub
js
lcall
nop
nop
mov
push
push
push
cs
arpl
push
mov
scas
xchg
jb
mov
imul
pop
xchg
push
sahf
fwait
repnz
sti
es
clc
jns
or
pusha
xchg
imul
xor
xchg
adc
sbb
aaa
loop
cmc
inc
dec
mov
adc
jne
mov
sbb
and
fs
inc
cltd
dec
sbb
xor
aaa
sub
push
add
outsl
int
fadds
inc
add
test
addr16
test
stos
aas
inc
mov
stos
mov
pop
mov
sbb
lods
push
lods
popa
mov
dec
add
ss
daa
jmp
mov
aam
pop
movsb
mov
pop
fistps
pop
or
mov
jle
xor
jge
mov
push
roll
pop
xor
jle
mov
aam
nop
push
imul
xchg
data16
insb
aam
movsl
mov
adc
push
xor
arpl
pop
in
or
arpl
add
or
loope
scas
data16
cld
pop
cli
loop
xor
rcrb
stos
movsl
mov
ss
dec
push
out
and
push
and
push
push
outsb
rclb
flds
rcrl
pop
push
inc
loope
jo
push
xor
scas
imull
or
jmp
lea
lods
adc
in
fisttpl
sahf
cwtl
mov
mov
jo
mov
jae
sbb
aaa
mov
mov
mov
and
mov
mov
fbld
xlat
idivb
jae
mov
jb
lods
jecxz
out
stos
sbb
xchg
mov
js
popf
cmp
or
push
pop
cmp
pushf
ret
into
rolb
jmp
in
sbb
pop
adc
or
shr
std
ror
mov
pop
sub
inc
fs
lret
xor
push
dec
sub
pop
jae
inc
subl
xor
adc
aaa
cmp
call
sub
repz
jge
or
fcmovnb
out
or
out
push
stos
pop
mov
test
jge
ret
sbb
xor
and
adc
add
loope
repnz
rol
adc
mov
inc
sbb
push
mov
cmp
mov
stos
jno
lret
int
cmp
rorb
push
loop
loope
repnz
clc
out
cmp
es
addb
cmp
jle
lods
ljmp
cwtl
xchg
pop
push
or
pop
pop
lods
mov
in
pop
aam
das
loopne
icebp
ljmp
test
pop
jo
fisubs
pushf
aas
hlt
and
mov
lret
cmp
mov
mov
jle
scas
or
aas
fwait
fwait
jb
sub
adc
and
adc
pop
xchg
cmp
push
sub
cs
imul
fldl
ljmp
and
sub
mov
sbb
cmc
pop
or
add
pusha
sub
das
mov
mov
jg
inc
sbb
mov
jo
in
out
loop
loopne
pop
andl
xchg
fldcw
das
jle
mov
jecxz
jmp
lcall
sbb
xchg
inc
jmp
cmp
fwait
das
repz
push
pop
mov
out
xchg
jg
push
mov
lret
jge
mov
subl
aam
sahf
jl
inc
lods
fldl
fcom
lods
add
inc
les
leave
or
sbb
xchg
pop
popa
imul
adc
in
mov
int3
cmpsl
cmp
xlat
xchg
in
out
push
xchg
test
or
imul
pop
insl
out
adc
or
pop
inc
push
or
jmp
aas
sub
gs
mov
nop
fcomip
jg
jnp
lods
adc
push
loope
mov
and
inc
adc
sbb
inc
cld
cmp
popf
das
fnstenv
in
jl
sub
jg
int3
lock
lahf
push
js
movsb
xchg
sbb
sub
or
outsl
ss
xchg
ret
add
push
test
jl
lahf
icebp
data16
sbb
sarl
scas
test
mov
sub
xchg
jns
mov
sbb
push
cmp
cmp
imul
xor
push
dec
jne
jns
leave
add
xchg
insb
fs
cmpsl
pop
or
dec
rcll
icebp
popf
pop
jmp
lock
mov
push
pop
inc
enter
in
fstps
xor
adc
or
movsb
inc
cmp
stos
or
lea
into
mov
jecxz
xchg
stos
dec
dec
je
dec
push
mov
jecxz
inc
clc
adc
push
mov
sub
or
cld
fisttps
jns
test
sbb
lea
cltd
xchg
xchg
cmp
call
aad
mov
dec
mov
jb
push
inc
in
inc
cmpsb
loope
and
and
fs
insl
xlat
int3
das
mov
xchg
push
js
mov
mov
xor
test
jmp
push
jmp
xchg
mov
push
insl
mov
adc
cmp
jp
sbb
sub
hlt
jo
and
scas
sub
loop
in
jno
sar
mov
xor
jp
sar
push
aam
sti
inc
data16
inc
aam
inc
cmp
shll
jle
mov
iret
inc
xchg
sbb
mov
dec
and
push
mov
test
das
lods
mov
mov
aas
jbe
mov
insl
fs
fcomi
add
inc
out
dec
push
nop
push
xchg
daa
ret
add
fldt
shll
in
sbb
pop
inc
pop
lds
cltd
clc
inc
icebp
call
pop
xchg
sbb
pop
lret
dec
dec
orb
fdivr
push
shll
cmpsb
sahf
push
nop
add
cmp
scas
pop
xchg
add
mov
dec
mov
bound
insl
mov
mov
mov
adc
add
je
add
jmp
les
add
add
jne
xor
pop
pop
sbb
dec
lret
push
imul
xor
pop
lock
lock
jns
pop
adc
dec
xchg
cmp
add
lcall
shl
push
add
jge
cmpsl
repz
sbb
inc
dec
push
mov
pop
dec
scas
fs
cli
stc
push
mov
xor
jp
outsb
bound
mov
es
cmpsb
rol
pop
push
lock
aam
xor
mov
stos
mov
add
lock
out
add
outsb
in
pushf
mov
pop
xchg
push
outsb
fisubl
js
jae
mov
testl
push
mov
pop
daa
fildll
repz
test
mov
div
mov
out
in
loope
and
pop
and
mov
cmpsl
mov
dec
pushf
lahf
xor
or
mov
into
pusha
cmpsl
int
movsl
out
add
xchg
xor
push
xor
sbb
outsb
jnp
in
mov
push
adc
stos
adc
adc
pop
test
or
mov
adc
out
xchg
popf
scas
inc
pop
insb
xor
out
shlb
cmp
js
scas
lods
ja
or
xor
or
add
xor
or
mov
cmpsb
enter
out
jbe
insl
pop
pusha
xchg
adc
xor
jp
out
imul
lock
out
mov
dec
jae
loope
pop
mov
or
mov
jg
negb
jae
push
jp
fisubrl
push
scas
sahf
mov
xor
sar
enter
nopl
adc
inc
lretw
dec
mov
arpl
and
enter
jne
lods
loope
jbe
cmp
loopne
and
scas
sub
outsb
fstps
sub
loop
sub
bound
ret
mov
sub
push
jnp
repz
push
ret
pop
out
cwtl
movsl
lret
insl
sub
ljmp
jl
fldl
stos
push
cmp
fwait
mov
jge
push
mov
rcll
adc
mov
jp
mov
push
add
adc
cmp
popa
or
outsl
jmp
imul
adc
jbe
icebp
cmc
cmp
or
mov
stc
rclb
mov
push
mov
cmp
xor
cmp
adcl
inc
loope
lods
out
ret
loopne
fisubs
xchg
repz
sbb
cmp
pop
mov
pop
dec
jmp
lds
jp
fnstcw
gs
mov
stos
popa
xchg
mov
pop
dec
jg
adc
aaa
lds
jbe
les
pop
loope
in
or
or
adc
dec
add
and
push
dec
adcb
dec
idiv
or
cmpsl
fcomps
add
pop
add
addr16
cwtl
stc
xor
push
in
lret
icebp
mov
aas
in
xchg
push
xor
jecxz
xorb
lret
xor
rolb
pavgb
jmp
xchg
in
xor
aas
xchg
dec
stc
loop
pop
add
imul
mov
and
loop
ret
rol
enter
lods
jo
mov
sbb
dec
sub
pop
add
push
pop
jmp
imul
jecxz
imul
xchg
hlt
je
adc
and
je
push
in
fists
sub
dec
adc
jns
stos
mov
cmc
imul
and
icebp
xchg
xor
imul
push
lods
push
or
adc
data16
xor
xor
cmp
jne
cmp
jne
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
je
mov
xor
mov
sub
add
mov
jmp
mov
mov
mov
mov
lea
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
mov
jmp
test
lock
orb
enter
sub
addb
jge
and
xor
nop
icebp
add
adc
sbb
neg
mov
cmp
jae
mov
cmp
int
xor
movsl
push
adc
sbb
inc
aas
or
jo
outsb
pop
ja
push
mov
xchg
rorb
cwtl
sti
shrl
xor
adc
jg
divb
stos
adc
pop
sti
cmpl
pop
les
or
arpl
sahf
inc
xchg
pushf
jno
mov
scas
inc
xchg
outsl
das
inc
inc
rclb
push
pop
lock
xchg
pop
jno
gs
fsubp
movb
dec
dec
xchg
ret
js
dec
lea
jae
mov
cmc
xchg
push
pop
inc
popf
addr16
jnp
cmpsl
inc
jecxz
sbb
pop
add
jl
fistpll
cmp
daa
or
push
daa
mov
out
and
loope
and
cmp
repnz
test
sub
sub
jl
adc
aad
xchg
adc
sbb
dec
loopne
sub
frstor
faddp
lods
adc
mov
or
insl
in
rcrl
ret
jo
ds
in
push
pop
xor
xchg
aam
cs
push
fidivs
mov
and
push
in
cltd
push
jnp
push
test
push
sbbb
fmuls
xor
cmp
fnstenv
pusha
rorl
jne
jmp
inc
hlt
mov
mov
movl
insb
sbb
loopne
add
mov
fnstenv
pop
sub
out
jbe
repnz
push
enter
and
adc
push
xlat
shlb
sbb
fwait
and
xor
pop
mov
popl
out
pop
dec
lcall
mov
ljmp
mov
into
loopne
enter
or
mov
mov
pop
pop
jne
or
inc
fsubrl
cmp
or
and
mov
jo
shlb
inc
pop
sub
mov
out
mov
inc
inc
mov
in
fidivs
lods
mov
incb
jg
add
lods
cmpl
std
pop
lods
ljmp
out
mov
add
test
adc
out
ja
lret
les
ret
fmull
into
popf
mov
incb
cmp
cmc
cld
jnp
xor
inc
negl
push
loopne
mov
ja
mov
fidivrs
hlt
movsb
cmpsl
cs
jg
dec
ficoms
inc
mov
jb
iret
xchg
jle
cltd
repnz
lret
imul
sub
jg
repnz
xor
xor
stc
jns
xchg
jno
push
and
xor
xchg
das
cmpsb
dec
mov
andb
subl
adc
mov
pop
sbb
jmp
bound
pop
xorl
loopne
and
je,pt
adcl
adc
xchg
insl
test
add
and
add
jl
in
mov
dec
push
sub
bound
fidivs
push
in
loop
sbb
lahf
popf
mov
jne
gs
addr16
arpl
dec
sti
xor
das
push
std
push
addr16
stc
addr16
test
mov
outsl
ret
fistps
inc
aam
clc
cmpsb
inc
jno
enter
jp
dec
cmp
inc
pop
push
adc
push
jmp
pop
jno
sbb
mov
shr
in
sbbb
adc
stos
or
mov
and
mov
fidivrs
inc
inc
repnz
pop
notb
cmp
xchg
aaa
loope
mov
pushf
xor
es
push
mov
push
out
pop
testb
mov
popf
popf
out
es
add
int3
loop
xchg
addr16
sahf
clc
fdivrl
dec
mov
in
fwait
imul
xchg
les
mov
or
test
xchg
fldenv
loop
subb
mov
test
fisttpll
mov
dec
pop
js
xchg
in
mov
mov
enter
fs
mov
sub
fcmovu
pop
stos
out
push
scas
cmp
inc
mov
and
int
shlb
pop
pop
cmp
cmp
add
loope
mov
out
std
inc
std
mov
xor
hlt
mov
test
and
mov
jnp
pushf
out
ret
sbb
mov
pop
adc
and
jmp
fsubl
mov
repnz
aam
mov
mov
jl
push
and
leave
inc
ljmp
mov
push
xlat
out
xchg
push
xchg
mov
clc
push
repz
push
js
inc
ljmp
xor
and
xchg
xorl
and
fists
cmp
mov
insl
xchg
std
and
addb
cmp
ja
sti
dec
arpl
popf
pop
mov
and
xor
stos
mov
jno
les
mov
mov
add
data16
faddp
and
cmp
lods
cli
mov
sbb
xlat
push
xchg
test
sbb
jmp
sbb
and
xor
jge
sbb
pop
lahf
sarb
mov
push
adc
out
std
add
aad
push
pop
pop
mov
mov
idivb
adc
xchg
imul
mov
adc
inc
and
hlt
add
xchg
adc
pop
mov
adc
push
mov
adc
cmp
sbb
shll
mov
cmp
pop
pop
into
or
mov
bound
out
mov
pop
and
or
dec
int3
sub
and
dec
mov
cmp
mov
pop
mov
movsl
mov
inc
xchg
cmc
ret
jnp
pusha
shrb
in
ljmp
cmp
sub
and
and
in
mov
inc
mov
mov
fs
cld
outsb
aad
fsubrs
and
push
mov
sti
lret
push
pop
xchg
mov
jnp
shl
daa
stc
jne
stc
rcll
sti
mov
outsb
sbb
inc
je
and
imul
pusha
mov
jne
sbb
cli
aas
out
push
enter
pop
aam
sub
mov
scas
mov
int3
stc
cld
add
ret
dec
sahf
ret
push
push
out
mov
mov
xchg
faddl
push
inc
stos
movsb
mov
gs
shlb
in
repnz
out
call
imul
sub
pop
icebp
mov
test
inc
xor
inc
xchg
push
scas
inc
lahf
adc
sbb
dec
mov
movsb
cmc
jnp
add
jbe
outsb
push
mov
cltd
sahf
in
outsl
jg
jno
lret
jo
or
hlt
sahf
scas
jno
test
dec
add
xchg
js
mov
cs
lret
xor
stos
aam
jno
test
or
testb
push
xchg
aas
out
and
cmp
sarb
xchg
and
push
test
mov
adc
pop
mov
movsb
es
int
int3
jmp
pop
mov
dec
retw
lods
mov
dec
sbb
dec
sub
add
out
or
adc
sti
mov
add
lea
scas
das
icebp
dec
add
cld
ss
out
lods
icebp
test
dec
mov
push
mul
outsb
inc
out
popf
cmp
enter
mov
fsqrt
out
insb
xchg
xor
inc
xor
or
jno
inc
clc
sti
push
mov
jnp
xor
pop
shlb
adc
sar
les
in
or
sub
mov
loope
std
adc
fldenv
clc
mov
jg
sbb
leave
les
repnz
xchg
mov
xor
out
and
int
sbb
out
mov
iret
mov
inc
sbb
outsb
loop
push
repnz
pop
in
cli
pop
and
add
sbbb
xchg
loope
sbb
ss
outsl
jp
mov
jge
repz
fucom
pushf
and
movsb
xor
or
cs
add
push
repnz
jno
arpl
mov
xor
push
xor
cltd
cmpl
arpl
call
sub
sbb
aad
out
sbb
adc
pop
add
mov
pop
mov
jbe
push
rcrb
leave
pop
cmc
jbe
sub
rorb
push
das
pop
xchg
or
inc
mov
in
sahf
flds
lcall
pushf
xchg
test
pop
inc
inc
test
push
adc
sub
push
or
jmp
push
jae
cmpsb
push
adc
lret
xchg
cltd
mov
test
push
mov
xchg
and
xor
scas
pop
xor
adc
or
cmpsl
scas
sub
cmc
rorb
jb
les
out
push
enter
push
cmc
push
lea
ss
hlt
dec
mov
cli
pop
pop
sub
xchg
cmp
or
and
test
sub
js
push
mov
pop
aaa
aaa
dec
ljmp
stc
jmp
rcr
popa
aam
pop
addr16
into
cmp
xor
stos
jmp
xchg
dec
jle
or
or
test
mov
mov
or
adc
or
jae
pop
lods
sbb
xor
fbstp
nop
sbb
and
clc
mov
stos
test
push
loopne
add
push
cmp
xchg
rorl
cmc
out
ja,pn
xchg
inc
faddl
movsb
imulb
insl
shlb
mov
aam
mov
jae
cmp
sub
cmpsl
inc
jno
mov
push
push
lea
mov
lret
adc
test
sub
rorb
mov
jl
inc
inc
jmp
roll
mov
mov
mov
or
in
cmp
and
and
push
mov
and
add
clc
mov
and
mov
push
cmp
dec
addr16
or
shrb
cmp
rcll
out
fstpt
mov
jne
int3
and
cmpsb
decl
push
stos
decb
cwtl
loopne
pop
jo
xchg
or
rorb
xchg
xor
push
clc
lds
dec
cli
fs
mov
out
or
or
dec
call
adc
xchg
mov
lahf
shlb
xor
movsb
mov
mov
roll
add
adc
das
je
ret
loopne
pop
and
in
fsubs
or
or
cmp
cmp
test
cmc
push
mov
loopne
lcall
add
sub
push
ret
mov
cmp
add
jnp
dec
sbb
push
xlat
add
lods
mov
cwtl
fistpll
xchg
mov
movl
dec
in
mov
test
jne
cld
repz
aam
adc
pop
sub
adc
lahf
clc
sahf
pop
fisttps
pop
popa
adc
repz
jl
mov
dec
fdivrs
rcl
mov
fidivrl
lret
cmp
dec
sbb
or
sub
jnp
or
stc
jo
in
cmp
mov
mov
repz
sub
dec
ret
mov
fnsave
add
push
sub
jo
inc
ret
inc
push
roll
lock
or
sbb
jb
jne
jbe
mov
and
xor
jnp
fwait
dec
mov
iret
les
loopne
cs
sbbl
cmp
scas
jbe
ficompl
dec
in
cmpb
inc
std
cs
xor
push
repz
movsl
xor
repnz
and
subl
sti
mov
and
or
inc
fmuls
jno
mov
lds
or
pusha
fisubs
dec
sub
dec
pop
or
pop
aas
iret
stc
dec
mov
loopne
adc
dec
in
loope
sub
mov
inc
cmc
and
pushf
test
pushf
iret
xchg
xchg
xor
lret
jmp
cltd
loope
and
push
mulb
fstl
test
stc
add
std
jp
jle
push
out
add
ja
scas
and
mov
or
shrl
xor
pop
pop
stc
test
pop
mov
stos
mov
shll
mov
lcall
js
mov
out
stos
mov
mov
int3
mov
mov
mov
enter
inc
sarb
call
and
pop
xorl
inc
inc
xorb
add
arpl
mov
and
add
enter
mov
lcall
mov
int3
cmp
cmpsb
in
hlt
push
fs
dec
sti
lret
add
out
push
or
lods
lods
pop
addb
dec
lret
jecxz
popf
xchg
mov
cmp
hlt
stos
jg
push
jb
cmpsb
sarb
ret
jb
mov
jge
adc
sti
xchg
mov
pop
stos
sub
jmp
push
nop
js
bound
js
test
jl
cs
mov
popf
adc
scas
enter
inc
outsl
pop
mov
cmp
xchg
pop
outsl
daa
mov
mov
mov
ror
dec
cltd
sub
shlb
cs
cmpsl
daa
pop
leave
inc
rcrb
xchg
scas
cltd
mov
and
aaa
xchg
in
pusha
jb
daa
jno
inc
jg
xor
pop
adc
dec
jne
push
mov
pushf
jle
cmp
fmuls
test
mov
xchg
sub
lcall
xor
inc
call
into
push
or
shr
push
xchg
stc
lahf
and
lea
fistps
lds
mov
loope
sbb
mov
cmp
and
daa
and
call
out
test
int
xchg
sbb
or
loopne
and
fdivrl
pop
stc
fisttpll
sbb
stc
adc
and
scas
int
xchg
das
or
inc
or
fistpll
sub
adc
fcompl
sbb
inc
jnp
in
clc
shl
test
push
adc
repz
jmp
ds
lds
out
test
fdivs
jbe
jae
lahf
add
cmp
sbb
and
cmc
mov
jnp
push
push
aaa
jl
pushf
cmp
add
xchg
and
xlat
das
xor
mov
or
jne
aam
popf
lds
rcll
cmp
fmuls
xchg
pop
out
insb
sub
cltd
cmp
dec
cmpsl
cmp
mov
test
repnz
fldcw
mov
add
mov
dec
add
hlt
aaa
xchg
jns
jo
cli
das
add
repz
mov
xchg
popa
and
pop
and
addr16
mov
pop
cli
inc
push
aas
icebp
sub
stos
and
scas
js
flds
out
out
add
mov
stc
icebp
dec
loope
roll
mov
xchg
jno
pop
xor
inc
dec
stc
and
and
jp
xor
repz
mov
push
mov
xlat
jle
jne
jp
stc
or
mov
test
arpl
mov
push
mov
sbb
imul
and
or
insb
sbb
loopne
inc
mov
dec
xchg
ret
jle
popf
std
mov
pop
lret
xchg
mov
outsl
cs
sbb
or
movsb
sbb
ja
cltd
push
aas
sbb
hlt
add
xchg
repz
xchg
shlb
mov
shlb
enter
mov
je
push
inc
fsubs
inc
sub
and
cmp
sbb
add
sbb
pop
fxch
mov
aad
out
test
xor
xlat
cmp
mov
jmp
cltd
into
imul
pop
xchg
roll
movsl
adc
leave
dec
inc
push
inc
enter
fs
pop
mov
fdiv
testb
or
pop
inc
scas
adc
roll
out
xor
ficoms
notb
nop
fldenv
sbb
mov
sti
mov
push
arpl
jg
mov
mov
dec
shll
je
xchg
push
jge
stc
out
out
mov
in
int
ljmp
fsubs
stos
mov
adc
je
mov
cmc
mov
pop
push
sub
mov
jecxz
sub
dec
stos
scas
dec
stos
mov
adc
cltd
movsb
jp
and
or
mov
dec
test
dec
loop
pop
test
sbbb
jno
repz
insl
xor
in
add
jbe
hlt
lret
xchg
jae
xor
mov
std
xor
jle
adc
jge
lods
divb
and
xchg
lahf
inc
aaa
loope
pop
push
sbb
fwait
or
leave
rclb
jb
mov
pop
add
movsb
rcr
sbb
andb
mov
lods
out
sbb
stos
fimuls
aad
xchg
dec
arpl
cmp
outsl
adcb
pop
push
daa
dec
xor
insl
pop
dec
dec
movsl
data16
cmpsb
sbb
mov
adc
enter
and
jecxz
out
pusha
shl
daa
repz
fidivs
sub
repnz
sub
out
dec
mov
mov
cmp
and
jns
cmp
jne
incl
pop
mov
push
mov
out
pop
mov
pop
inc
jecxz
stc
cmp
pop
popf
cwtl
add
cwtl
sub
bound
sbb
lahf
arpl
sub
and
data16
push
out
xchg
js
or
ljmp
sbb
je
add
call
shr
test
sbb
lds
test
frstor
fwait
movl
push
je
inc
loope
stos
adc
inc
cld
popa
pop
or
pop
push
and
stos
cltd
xor
sbb
mov
das
mov
imul
adc
clc
sub
lods
and
push
mov
hlt
push
mov
dec
fisubrs
adc
scas
jg
repnz
int
loopne
cwtl
int
and
stos
aam
dec
sub
adc
push
push
xor
sbb
aad
stos
ficoml
and
movsl
and
xor
and
sbb
or
aaa
or
xor
pop
mov
test
fldenv
data16
incl
pop
sbb
cwtl
xchg
scas
pop
pop
mov
test
adc
cmpsl
mov
and
repnz
loopne
adc
addb
jle
hlt
dec
std
aaa
inc
lea
mov
mov
ds
lock
daa
nop
enter
cld
xchg
in
gs
mov
add
pop
fcmovnb
push
sbb
sbb
sahf
jmp
aad
and
inc
cmpsl
xchg
insb
push
or
inc
filds
adcl
xor
stos
imul
popl
icebp
shll
out
nop
xor
stc
pop
xchg
inc
inc
in
into
imul
les
sti
sahf
pop
push
or
popf
insb
nop
subb
clc
fxch
mov
add
dec
mov
xor
mov
dec
stos
adc
xor
lret
std
cmp
jmp
out
push
lock
mov
jno
jge
sub
outsl
pop
cmp
adc
in
adc
call
cmc
jno
shll
in
out
mov
int
stos
popa
rcrl
dec
gs
sbb
cmc
push
fwait
test
and
inc
add
mov
push
lcall
ret
adc
mov
adc
mov
xchg
mov
sbb
or
fstl
xlat
ds
jns
mov
rcrb
push
jbe
aas
adc
notl
stos
fs
push
popf
jne
adc
out
add
mov
aaa
out
mov
pop
mov
sti
repnz
jae
mov
bound
mov
aaa
outsb
and
pop
push
cmpsl
xor
cmp
or
sti
and
or
lret
je
cmp
insl
xchg
pusha
or
lods
pusha
dec
xchg
and
jo
and
and
repz
sub
mov
mov
dec
mov
jp
test
mov
or
lods
mov
cmp
jb
push
dec
xor
out
lds
and
fisubrs
das
fnstenv
mov
push
sbb
dec
mov
mov
mov
les
and
loopne
xchg
sub
dec
sub
pop
sbb
loope
rcrb
fmul
jecxz
fistpl
sub
sub
or
mov
repz
inc
mov
fdiv
cmp
sub
inc
test
cmp
jb
push
dec
mov
es
jg
jo
mov
xor
notb
mov
mov
dec
scas
addr16
add
sbb
add
push
adc
gs
flds
fmull
xor
inc
xchg
ds
adc
fsub
or
into
test
jle
lret
stos
leave
sbb
outsb
fsubp
sub
sbb
pop
int3
gs
test
adc
ret
test
xchg
aaa
std
fadds
imul
mov
gs
dec
push
xor
icebp
or
cmp
mov
inc
pushf
scas
mov
add
inc
sbb
stos
mov
inc
enter
sbb
out
es
mov
sub
ret
div
push
clc
sbb
push
pop
dec
pop
sarb
inc
ljmp
push
repz
jae
or
sbb
adc
pop
pop
testl
pop
inc
or
xchg
mov
mov
mov
adc
jne
inc
adc
cmpb
pop
sbb
xchg
into
ret
dec
bound
fdivs
push
hlt
aaa
sbb
or
cmp
jp
roll
mov
cltd
data16
push
enter
xchg
ja
mov
mov
lahf
xchg
fsincos
dec
jb
es
adc
cmp
sub
ss
jae
jno
and
cld
mov
sahf
xchg
test
adc
repz
jns
push
aaa
addr16
mov
gs
aas
jne
pop
mov
fadd
pop
gs
test
arpl
test
push
cmp
mov
mov
int3
orb
add
mov
lea
and
fsubs
mov
add
mov
iret
imul
subb
adc
js
push
movsl
dec
or
lds
push
xchg
push
fcomp
adc
pop
mov
mov
xchg
nop
or
cmpsb
inc
test
pop
mov
inc
fcomps
mov
in
add
jmp
decl
xor
and
aad
pop
push
mov
fsub
pop
cmp
lcall
aad
in
test
push
test
shlb
mov
iretw
mov
fdivs
arpl
in
jb
lcall
mov
fwait
cli
pop
in
or
push
mov
js
cmp
mov
push
lret
sbb
rcrl
push
iret
mov
es
mov
loope
jo
pop
pop
jge
fiaddl
push
in
outsb
ficomps
cmpsb
lock
in
add
and
cmp
inc
xor
cmpsl
mov
xchg
faddl
jecxz
push
shll
mov
jne
std
je
bound
pop
xlat
sub
xor
lods
and
scas
or
adc
mov
mov
cmc
iret
jl
roll
hlt
ret
in
sub
sbbl
adc
cmp
pop
orl
aas
mov
push
pop
xor
inc
inc
outsb
xchg
mov
les
popf
gs
lods
out
mov
cmp
pop
cmp
mov
in
stos
or
ret
mov
dec
stc
xor
and
and
adc
fistpll
jp
pop
bound
lods
xchg
cmpsl
nop
add
dec
sbb
push
scas
dec
hlt
cld
cli
test
mov
xor
pop
cmp
adc
and
test
mov
cmpsb
insl
sub
mov
cmp
and
testl
es
mov
sub
xor
inc
or
into
cmp
test
mov
or
pusha
mov
mov
dec
push
shlb
addr16
lock
add
and
dec
popf
das
lret
mov
mov
xchg
in
mov
sbb
into
je
sub
and
push
sub
lods
adc
push
test
add
push
jb
sbbl
in
fwait
and
fidivl
dec
adc
push
push
int3
push
xchg
test
adc
test
insb
gs
mov
dec
ret
adc
push
cmc
ds
test
aam
je
fstps
push
jg,pt
sbb
mov
pusha
pushf
mov
xor
sub
jmp
std
hlt
loopne
pushf
jl
jmp
mov
shlb
dec
pop
sbb
aaa
inc
xchg
xor
cld
jecxz,pn
sub
jo
or
pop
pop
mov
sub
call
xor
sub
cltd
je
push
bound
pop
mov
mov
mov
stos
cmp
ss
inc
movb
mov
clc
dec
ds
ljmp
xor
pop
bound
sbb
xchg
outsb
inc
les
imul
ret
or
clc
rclb
dec
inc
pop
mov
addr16
jge
jp
or
and
sbb
fsubl
and
jmp
push
sub
nop
fbld
xchg
pop
pop
push
imul
lcall
aam
push
hlt
and
push
inc
scas
mov
jp
sbb
mov
rclb
shll
xor
sbb
jg
popf
mov
movsb
jl
hlt
xchg
sbb
and
xor
xchg
pop
lret
xlat
repnz
push
fsubp
aam
test
lret
cmp
jno
aas
mov
aam
clc
js
pusha
ret
or
add
add
lahf
and
push
push
sub
outsl
shrl
push
xchg
dec
scas
jg
in
mov
call
clc
jnp
out
jo
jp
out
mov
cltd
inc
sahf
dec
add
arpl
icebp
cld
stos
sub
cmc
mov
test
fwait
sub
pop
adc
daa
jnp
aaa
loop
scas
enter
gs
fisubl
aad
lret
aaa
js
push
movsl
ljmp
loope
lds
or
add
adc
lods
lret
and
pop
sti
les
dec
out
iret
test
ljmp
xchg
sbb
test
imul
fisttpll
sub
in
into
mov
iret
mov
jns
nop
push
lods
mov
xchg
push
push
adc
mov
fnstcw
xchg
test
mov
push
lahf
xchg
lret
rcll
call
loop
js
cmpsb
dec
push
xor
push
jg
inc
or
add
push
test
cmc
pop
adc
jbe
in
inc
cmp
dec
cmc
pop
xlat
aad
icebp
jno
dec
test
push
subb
jp
rorl
pop
cmp
mov
inc
add
lea
mov
and
add
ljmp
jle
addr16
pop
sbb
lret
cli
hlt
aaa
pop
cpuid
lds
inc
mov
cli
adc
xchg
fsubrp
pop
mov
rolb
xor
or
popf
orl
int3
into
mov
cmp
out
xchg
push
mov
call
sbb
pop
pop
inc
stos
stos
les
shlb
and
call
sbb
jns
les
insb
mov
ss
repnz
and
xor
fldcw
scas
and
pushf
shl
movsl
xchg
xor
cmp
iret
aam
and
dec
out
pusha
insl
fsubr
xchg
cmp
sub
movsl
push
cmpsl
and
add
inc
xchg
shrl
int
mov
jecxz
inc
push
cmpsb
jecxz
push
and
rcll
add
inc
add
out
sbb
mov
add
mov
xor
test
cmp
pop
xor
pop
pop
or
xor
arpl
xorb
fstp
jmp
in
jmp
xchg
mov
add
ret
sub
xor
push
xchg
mov
xor
nop
stc
jno
lret
sti
mov
inc
jae
call
inc
pushf
sub
fmuls
sarb
fimull
sbb
pop
add
push
mov
dec
cs
frstor
mov
ret
xchg
bts
mov
rcl
jl
inc
push
rclb
int
sbb
arpl
fnstsw
xor
push
mov
dec
dec
ret
jbe
pusha
fyl2xp1
lcall
idivl
jbe
outsb
cmp
enter
push
xor
mov
sub
imul
xchg
gs
cmp
mov
mov
pop
lcall
mov
pushf
xor
ds
push
xchg
popa
push
mov
mov
bound
xchg
sarb
sub
adc
je
aad
sub
dec
cmc
nop
popf
or
dec
adc
fwait
inc
cmp
inc
ja
xor
mov
mov
lfs
mov
jbe
pop
push
mov
xchg
cli
andl
sbb
movl
pusha
mov
dec
ret
aam
test
jae
sbb
in
mov
dec
js
push
add
je
xor
lret
pop
or
inc
or
add
inc
push
lret
pop
movsb
mov
cmpsb
inc
scas
scas
lcall
fisttpl
mov
sub
lods
pusha
ljmp
jno
mov
das
xor
out
mov
cld
sahf
mov
adc
pop
xor
ja
mov
cmp
and
jnp
adc
lahf
xor
xchg
test
call
pushf
push
in
mov
add
mov
pop
inc
mov
scas
insb
jnp
or
pop
mov
clc
cld
push
jmp
aas
dec
sti
cmpl
mov
adc
in
push
jae
mov
cli
into
fiadds
xor
insb
std
or
dec
lods
mov
jg
cmp
xor
and
push
mov
mov
daa
sti
sub
add
fndisi(8087
mov
lea
mov
mov
mov
push
les
bound
xor
cmp
mov
cmp
and
pop
sti
dec
fsubs
jp
jmp
xor
lods
into
sti
mov
push
pop
cld
adc
inc
inc
out
and
or
loope
or
or
mov
loop
icebp
out
mov
ljmp
scas
mov
push
mov
cmpsb
dec
testl
outsb
outsl
inc
cmp
int3
cli
addr16
mov
cwtl
fcmovbe
inc
loope
sbb
cmp
xor
pop
lock
xchg
cmp
int3
mov
sar
add
into
dec
lea
and
icebp
clc
cs
cli
jle
pushf
inc
test
aas
cmp
inc
adc
sub
mov
ljmp
mov
jecxz
rcr
pop
iret
sahf
adc
adc
or
dec
mov
lret
cmpsb
stos
xorl
fdivrs
inc
push
lcall
xchg
iret
shll
push
inc
stos
cmp
es
outsb
jne
in
xor
notl
aaa
lret
push
fcoml
iret
and
je
add
add
mov
mov
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
orl
sub
sbbl
push
push
push
andl
push
orl
push
orl
call
subl
mov
lea
push
subl
push
movl
call
cmp
je
xorl
xor
jmp
mov
xorl
push
lea
push
push
push
subl
push
adcl
call
imul
cmp
movl
jne
orl
lea
andl
push
addl
push
andl
call
cmp
jne
addl
movl
or
mov
movl
cmpl
je
cmpl
jge
jmp
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
addl
movl
mov
or
lea
mov
xor
lea
sbb
mov
or
mov
movl
cmpl
je
cmpl
jl
jmp
push
call
xor
add
dec
mov
jmp
mov
mov
mov
mov
mov
sbb
xor
adcl
mov
addl
add
notl
mov
movl
mov
cmp
movl
jne
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jl
jmp
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
mov
adcl
xor
subl
add
addl
mov
mov
xor
notl
add
sbbl
mov
mov
sbbl
xor
subl
add
mov
andl
xor
xor
inc
mov
cmpl
jb
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xorl
mov
addl
mov
mov
mov
mov
addl
mov
orl
mov
mov
decl
mov
andl
xor
add
inc
mov
cmpl
jge
jmp
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
movl
sbb
mov
xor
xorl
add
jmp
lea
subl
push
addl
push
addl
call
movl
cmp
jne
push
lea
addl
push
adcl
push
push
orl
push
call
imul
movl
cmp
movl
jne
sbbl
lea
push
push
sbbl
call
movl
cmp
jne
mov
xor
mov
sbbl
xor
sbbl
lea
incl
push
add
mov
xor
lea
xorl
push
movl
mov
xorl
pushl
adcl
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
adc
xor
and
lea
mov
neg
mov
orl
xor
orl
xor
xorl
add
mov
addl
xor
movl
lea
movl
mov
cmp
jbe
xor
or
or
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
push
call
cmpl
jb
mov
mov
mov
movl
cmpl
je
cmpl
ja
jmp
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
movzbl
adc
mov
subl
sub
andl
xor
mov
lea
mov
xorl
lea
subl
mov
lea
subl
push
addl
push
call
movl
cmp
movl
jne
push
lea
xorl
push
push
adcl
push
push
call
imul
cmp
jne
lea
push
push
subl
call
movl
cmp
movl
jne
lea
addl
push
negl
push
addl
call
movl
cmp
movl
jne
xorl
push
orl
lea
andl
push
subl
push
adcl
push
xorl
push
orl
call
imul
movl
cmp
jne
orl
lea
push
subl
push
notl
call
movl
cmp
movl
jne
lea
push
subl
push
subl
call
movl
cmp
jne
addl
push
lea
push
sbbl
push
push
push
call
subl
imul
movl
cmp
jne
addl
lea
orl
push
push
andl
call
movl
cmp
movl
jne
andl
lea
adcl
push
orl
push
sbbl
call
movl
cmp
movl
jne
xorl
push
lea
orl
push
push
push
subl
push
call
imul
movl
cmp
movl
jne
addl
lea
orl
push
andl
push
andl
call
cmp
jne
orl
lea
subl
push
xorl
push
addl
call
movl
cmp
movl
jne
adcl
push
xorl
lea
xorl
push
adcl
push
push
sbbl
push
adcl
call
imul
cmp
jne
movl
lea
addl
push
notl
push
call
movl
cmp
jne
lea
xorl
push
push
addl
call
movl
cmp
movl
jne
push
lea
adcl
push
xorl
push
adcl
push
xorl
push
call
adcl
imul
movl
cmp
jne
lea
xorl
push
push
orl
call
movl
cmp
jne
addl
lea
movl
push
push
adcl
call
movl
cmp
jne
andl
push
lea
push
push
subl
push
sbbl
push
call
xorl
imul
movl
cmp
movl
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
lea
movl
push
movl
movl
push
movl
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
sub
mov
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
or
mov
push
movl
cmpl
je
cmpl
ja
jmp
push
pushl
call
mov
dec
mov
jmp
mov
xor
mov
push
mov
add
cmp
movl
je
movzwl
adc
mov
mov
incl
xor
andl
xor
add
addl
add
movl
adc
orl
xor
adcl
mov
movl
cmpl
je
cmpl
jge
jmp
push
call
cmpl
jne
xor
add
dec
mov
xor
xor
dec
mov
jmp
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
jmp
sbb
cmp
xchg
xchg
dec
push
nop
incl
add
fwait
movsb
xchg
sub
cmpsl
mov
ljmp
push
jle
push
adc
inc
jae
mov
in
imul
in
push
iret
pcmpgtd
imul
pop
jle
in
test
bound
fadds
mov
mov
inc
pop
and
push
adc
imul
mov
ror
pop
outsb
divl
lahf
daa
movl
add
rclw
mov
out
and
pop
leave
xlat
pop
sahf
adcb
or
sub
and
add
or
xor
dec
or
rcll
jl
jno
nop
inc
in
bound
xchg
addl
lds
jo
cmp
pop
inc
inc
pop
adc
shll
add
xchg
cmp
cmpl
sub
xchg
inc
jecxz
lods
ret
xor
lret
xchg
push
mov
sub
jbe
fwait
dec
lea
dec
adc
sbb
lds
pushf
sarl
sub
mov
and
ret
inc
mov
stos
jnp
ret
and
mov
cmp
ds
jno
adc
mov
xorl
cmpsb
faddl
and
mov
mov
pop
and
inc
aaa
mov
sarl
cmp
adc
idivl
pop
ljmp
je
mov
jg
dec
ss
ss
cltd
aam
icebp
int3
gs
testl
sub
inc
dec
shrb
mov
sbb
imul
mov
xchg
jecxz
mov
mov
aaa
pop
clc
shlb
mov
repnz
xchg
icebp
bound
dec
mov
mov
xchg
loope
mov
cmpsl
sbb
fisubrl
and
sub
mov
push
cltd
cwtl
and
mov
cmp
jl
pop
mov
dec
pop
xor
xlat
cmpl
mov
push
pop
mov
push
xor
or
lcall
pop
add
mov
int3
loop
cmp
dec
mov
add
jp
adc
xor
cmpsb
jge
cmp
pop
jbe
iret
mov
and
or
loope
cmpsb
pop
out
bound
push
loope
nop
jae
int3
addr16
or
jo
std
out
enter
sarb
add
adc
mov
int
lahf
mov
ret
lahf
cwtl
in
lods
into
mov
nop
sbb
or
or
outsb
scas
xchg
test
jmp
pop
leave
daa
cmpsl
lret
mov
jnp
inc
arpl
adc
lock
sbb
fisttpll
movsb
dec
lock
push
mov
sbb
mov
stc
js
jle
jmp
push
cli
push
test
mov
imul
sub
mov
ss
icebp
and
or
jae
orl
insb
push
pop
fidivl
ja
jo
sahf
add
push
stos
jne
pusha
das
and
in
jae
jne
lea
bound
mov
shl
dec
stos
in
aaa
les
leave
sbb
jbe
aam
jb
popf
test
add
nop
mov
pop
je
and
mov
push
enter
xor
add
mov
pop
lcall
addr16
call
fldl
jbe
push
test
test
pop
sbb
mov
push
ficompl
sahf
sub
mov
push
push
jp
mov
jo
inc
pop
inc
add
sti
imul
xor
aam
fldcw
mov
frstor
sub
stos
stos
mov
fmul
cmp
lahf
sbb
xchg
cwtl
xchg
jmp
out
mov
movsb
inc
fidivrs
popf
stos
shrl
stc
stc
call
push
mov
cmp
rclb
into
mov
frstor
xchg
push
pop
pop
push
les
sahf
pop
xchg
inc
ss
sub
inc
fstpl
scas
ja
out
test
test
daa
push
xor
jo
inc
jl
and
or
leave
pop
pop
push
xchg
es
adc
mov
jns
jp
fldcw
ja
inc
mov
dec
xlat
movsb
mov
mov
lret
fstp
pop
sub
pop
test
sub
std
shlb
pop
xor
loope
imul
push
testl
inc
mov
nop
adc
cmp
xor
pop
sub
xchg
mov
daa
in
ljmp
cmp
lret
add
mov
mov
mov
mov
dec
in
sbb
rorl
loop
mov
mov
call
sbb
out
sbb
imul
lret
mov
xor
mov
jno
xor
cld
add
repnz
mov
insb
dec
add
in
in
clc
mov
clc
push
cmpsb
xor
push
mov
xor
inc
lods
cmp
inc
push
xchg
xchg
lret
adc
cmc
push
insl
sub
ljmp
jecxz
jne
stos
xor
add
scas
incb
sbb
movsl
mov
jmp
cmp
xlat
push
sbb
push
outsl
in
push
rcll
pusha
lahf
pop
iret
outsb
and
push
in
in
addb
and
xchg
mov
adc
mov
sub
or
and
je
pop
sub
movsb
pusha
sbb
inc
cli
jb
mov
xchg
orb
jno
scas
clc
xor
xchg
inc
popf
xlat
imul
fstpt
imul
stos
out
lods
pop
cmp
outsb
lcall
xor
mov
imul
shll
int
pop
adc
and
scas
fistps
gs
leave
jns
outsl
push
xchg
arpl
in
or
add
aaa
arpl
out
aas
xor
pop
sub
rcr
or
pushf
ss
push
push
jecxz
inc
icebp
jge
rcll
lods
sti
push
jge
jnp
push
cmp
jbe
or
addr16
jle
incl
ds
inc
addr16
sub
aad
out
loop
test
in
roll
scas
pop
jle
push
jge
or
test
ds
out
add
push
and
lods
mov
fnstenv
scas
inc
or
and
mov
adc
in
mov
mov
jbe
mov
jnp
cltd
aad
cltd
jecxz
inc
adc
cld
into
jmp
daa
ljmp
push
repz
xlat
in
data16
mov
pop
js
sub
in
fsubs
and
xchg
pop
inc
mov
dec
fdivs
push
inc
mov
stos
nop
call
adcl
ret
icebp
add
aad
cld
lods
notb
das
or
imul
or
pop
in
mov
xor
pop
test
movsb
fucom
xorl
push
insb
fcmovnb
jmp
das
inc
jns
shr
fbstp
jno
mov
cld
xor
add
sub
fs
xchg
or
leave
and
push
sbb
add
push
cmpsb
mov
in
data16
and
pop
in
adc
mov
insl
cli
outsl
mov
xchg
jmp
pop
inc
arpl
sti
test
and
push
popa
xor
nop
or
jae
xorb
fstl
sbb
imul
push
dec
or
aam
jo
mov
outsl
or
int
cmp
jmp
leave
out
ljmp
jae
lea
xor
hlt
int3
insl
sbb
shlb
xchg
xchg
sub
xor
sbb
iret
and
incl
and
cmp
push
stos
ja
mov
mov
mov
roll
fisttpll
dec
loope
jp
popa
out
xchg
add
rcr
xchg
cmp
jl
xor
in
arpl
mov
in
cmpsb
xchg
je
jbe
adc
push
icebp
xor
les
cmpsb
call
movsb
jo
sub
out
cmp
xlat
cmp
mov
insl
and
mov
aas
inc
sub
cli
pop
mov
fwait
jns
loopne
or
fsubp
dec
int3
sub
int
sbbb
dec
jp
sub
cmp
imul
cmp
loopne
pinsrw
cwtl
sbb
aas
mov
jmp
ja
cmpsb
jns
test
outsl
pop
faddl
push
adc
js
mov
into
push
pusha
pop
iret
subb
inc
data16
add
jp
cmpsb
arpl
sub
sbb
repnz
cmp
incl
pusha
aad
push
lcall
inc
jg
jmp
add
mulb
dec
stc
sbb
xchg
scas
adc
lret
cltd
dec
sub
cmp
push
orb
test
fidivl
dec
scas
mov
cmpsb
dec
ja
in
push
scas
repnz
xor
mov
pop
sbb
or
aad
inc
adc
stc
stc
adc
push
mov
imul
stos
mov
mov
pop
mov
sub
insl
js
sub
pop
out
mov
push
xchg
call
enter
xchg
les
ret
pop
ret
mov
pusha
movsb
hlt
out
inc
push
test
inc
push
mov
sub
lahf
pop
test
lea
adc
in
or
jbe
sub
shlb
push
leave
cmp
push
mov
and
je
sbb
arpl
and
xchg
ds
in
mov
add
lret
or
shlb
mov
fprem
pop
mov
adc
sbb
jo
pop
inc
mov
jns
les
jp
test
dec
lret
add
push
sarl
sub
cmpb
cli
sub
adc
lods
xchg
pop
mov
adc
add
psubw
movsb
int
inc
jmp
lods
xchg
add
mov
jmp
dec
ds
lea
fadd
jo
dec
fwait
jp
push
dec
mov
hlt
in
sub
pusha
faddp
dec
mov
push
mov
inc
hlt
push
push
pop
popf
test
mov
cmc
inc
repnz
test
ret
adc
push
add
outsb
in
add
and
cmpsl
jbe
insb
aam
je
cmpsl
mov
cmp
lret
mov
inc
dec
dec
orl
cltd
push
adc
rcrl
lock
xchg
stos
add
cmc
xchg
mov
push
add
idivb
xchg
adc
xchg
iret
xor
scas
je
inc
pusha
cmc
aam
mov
pop
xchg
scas
sbb
arpl
xchg
sti
rolb
xor
xor
xor
xchg
xor
inc
push
pop
xlat
test
js
pop
popf
sub
xlat
lahf
mov
push
test
and
adc
jl
mov
mov
and
xchg
aaa
jecxz
push
fiaddl
pop
sbb
add
js
dec
sub
xchg
push
pusha
imul
dec
lods
adc
lcallw
cmp
ret
je
sahf
lock
or
pusha
mov
xchg
sub
lods
scas
shrl
icebp
pop
pushf
pop
pop
xor
jmp
push
dec
push
aad
out
sbb
sarl
xlat
jmp
jnp
add
xor
scas
cmc
stc
ljmp
dec
push
in
stos
fldl
adc
div
mov
xor
xor
xor
add
sbb
xchg
sub
mov
dec
nop
pop
cltd
test
jp
fldl
fst
jo
jg
test
mov
out
pop
scas
sbb
xchg
inc
pop
leave
cmp
out
or
fucompp
imul
gs
jle
fnsave
dec
in
test
mov
dec
out
or
scas
add
mov
mov
inc
fcoml
into
andl
jnp
mov
pop
push
pop
out
call
out
xchg
pop
pop
jno
jbe
nop
xor
lods
popa
cmp
mov
popa
les
scas
movsl
sbb
push
dec
mov
outsb
push
inc
jmp
sub
sub
out
aas
dec
mov
stc
sub
and
push
fnstsw
out
add
mov
xor
and
xchg
shll
mov
inc
mov
lds
stc
mov
push
mov
jnp
testb
cld
lea
aad
and
xchg
mov
mov
sub
aad
sub
ss
je
xchg
roll
push
mov
jb
xor
std
cmp
xorb
xlat
daa
pushf
mov
sbb
ret
popa
sbb
fs
popf
xchg
ja
sahf
test
xchg
addl
fisttps
xor
push
rcrb
sbb
cmp
sbb
jecxz
outsl
sti
inc
push
inc
out
addb
mov
addr16
jne
inc
adc
xchg
aam
daa
loope
jbe
adc
mov
push
and
shl
loopne
or
stos
mov
je
in
xchg
add
add
aam
xchg
xor
sbb
icebp
mov
lea
aaa
jmp
shll
movsl
sti
push
mov
dec
movsl
cmp
insb
loop
lret
bound
adc
mov
xchg
lcall
rcrl
and
push
cmpsb
int3
jb
xchg
jb
sub
daa
fnstcw
push
out
sub
int3
jb
mov
dec
leave
stos
repz
pop
add
repz
enter
mov
imul
andl
into
or
fdivs
repz
jl
loopne
pop
int3
outsl
mov
xchg
and
push
imul
xchg
push
arpl
stos
mov
or
daa
adcb
lret
call
dec
hlt
jmp
sub
test
xchg
mov
pop
mov
dec
mov
mov
mov
aam
ja
push
fimull
xor
sbb
inc
cmp
iret
loop
adc
mov
and
lret
xor
inc
cmpsl
xlat
pop
jnp
sbb
mov
inc
dec
push
mov
dec
ret
pop
jno
sub
xchg
loope
jecxz
roll
into
or
movsl
mov
lcall
nop
xor
loop
pop
mov
icebp
inc
data16
pop
sbbb
cmp
mov
leave
loopne
ljmp
cwtl
lret
mov
jmp
int
mov
xchg
test
fimull
cmp
inc
xor
cmp
int3
add
lret
cmp
push
adc
xchg
aas
push
mov
adc
sti
cmp
inc
cmpsl
aad
pop
push
xorl
ljmp
icebp
push
jnp
std
xlat
and
insl
iret
xchg
mov
inc
je
mov
pop
mov
popf
repz
push
jns
out
jnp
push
fnsave
or
jg
test
inc
jnp
adc
cld
mov
jbe
mov
test
sbb
pop
test
int
in
mov
movsb
inc
lea
bnd
fdivrl
lock
push
jno
in
mov
push
xchg
jge
inc
jle
jb
mov
inc
faddl
clc
fcoml
lret
scas
outsl
mov
dec
cmpl
cmp
jecxz
push
cli
fs
sub
jmp
or
fsubrs
xlat
add
mov
lahf
jbe
jns
xor
jl
jg
insl
push
rcrl
pop
add
and
pop
sub
ja
push
out
push
rorb
sbb
inc
and
push
jle
push
insl
sub
jnp
std
addr16
add
shlb
mov
jo
in
pop
lods
xchg
cmp
sbb
iret
call
out
push
ret
rcll
push
dec
orb
out
out
pop
lcall
mov
stos
dec
out
cmp
test
in
scas
cld
jl
sub
cmpsb
mov
jle
mov
cmp
push
jp
mov
fiadds
dec
mov
xor
pusha
es
fnstcw
rcl
imul
movsl
pop
mov
cmc
cs
add
in
lcall
enter
xchg
cltd
ja
adc
rolb
push
mov
hlt
xchg
push
lcall
cmp
xchg
ret
pop
push
xchg
in
movsl
mov
sti
jbe
arpl
movsb
inc
or
test
jae
fistpl
push
fwait
pop
or
jg
scas
dec
jle
pop
sbb
pop
xchg
xchg
mov
lods
hlt
and
xchg
sub
popa
int
insb
inc
cmp
sbb
into
sub
jecxz
add
xchg
in
daa
out
jecxz
out
xchg
push
jl
lds
and
shrb
xchg
dec
call
or
and
hlt
fiadds
mov
add
cmpsl
pop
popf
nop
lods
scas
lods
movsb
mov
ret
nop
jp
aaa
push
ja
aas
inc
push
shll
cmp
es
sub
aam
adc
xchg
jo
neg
or
xor
sub
push
clc
jmp
mov
dec
jne
mov
test
sub
mov
lea
push
lahf
ret
cli
mov
into
and
mov
add
int
lea
jbe
jns
and
aas
in
cmp
mov
dec
insl
cli
inc
sarb
add
mov
movsb
into
xchg
scas
mov
mov
xchg
xchg
jno
nop
mov
mov
sbb
sahf
mov
in
call
arpl
jle
sub
popa
mov
and
popf
and
daa
push
movb
sti
sbb
push
xor
lods
push
or
mov
pop
ror
xlat
ds
pop
cmp
xor
or
popf
mov
loop
inc
mov
cmp
mov
xchg
mov
ret
cs
xor
negb
sub
jg
mov
call
inc
sbb
repnz
or
repz
push
andb
sub
push
addr16
fldenv
addr16
cmp
fs
ret
gs
stos
jns
vmwrite
sahf
jne
rol
pusha
dec
test
push
fldcw
mov
ss
mov
sub
ret
lds
sahf
jmp
push
jg
pop
mov
sub
and
mov
mov
cwtl
movsb
fmuls
fcoms
cld
mov
les
mov
adc
xchg
push
pop
fldt
mov
push
aas
rorb
dec
loop
sbb
mov
lock
pop
out
and
jnp
aaa
xchg
ret
inc
fcmovu
xchg
push
test
mov
cli
push
sti
inc
movsl
testl
ret
popa
and
imul
lods
sub
push
mov
loop
lcall
jle
lock
push
push
mov
outsb
mov
js
sbb
xchg
cli
jecxz
push
jb
mov
jp
aad
xlat
into
jmp
xor
ja
fsubs
out
push
adc
fcoml
fcmovnu
out
pop
out
js
push
adc
imul
push
xchg
mov
jnp
test
pop
xor
aad
xchg
popf
je
scas
fiaddl
je
das
sub
dec
fdivrl
or
insl
push
ja
shlb
dec
dec
ret
outsb
mov
cmpsb
push
mov
je
mov
mov
sbb
dec
xor
sbb
rcrl
sub
adc
pop
dec
cmpsb
daa
popa
pusha
and
jnp
mov
ret
mov
jb
jp
cmpsl
cmp
cmp
jmp
call
pop
inc
sbb
push
xor
imul
adc
aam
in
imul
mov
testb
push
inc
push
rcrb
mov
sub
out
mov
jmp
notb
ret
ret
test
subl
addb
int
out
out
xchg
push
mov
mov
scas
ret
movsb
cmpsb
pop
rorl
cs
int
repnz
mov
add
xlat
fcmovnb
mov
daa
jno
and
jp
repz
mov
dec
int3
sub
adcb
andl
adc
and
sbb
pop
and
dec
stc
sub
mov
repz
call
fnstsw
push
jb
mov
jp
or
xchg
popf
fsubr
mov
mov
andb
in
lret
fisubs
ret
adc
mov
dec
jg
sub
sbb
inc
sbb
mov
cmpsl
lret
addl
inc
inc
lds
out
daa
mov
or
mov
jp
jmp
data16
arpl
mov
lock
pop
push
jno
xchg
cmp
xor
sub
inc
jbe
jb
jle
mov
stos
loope
call
aaa
jl
icebp
lods
jmp
push
fiadds
jg
dec
lret
es
and
cmp
ret
mov
sbb
jb
xor
ljmp
dec
push
js
mov
in
push
lahf
lea
inc
cmpsl
mov
push
cltd
cld
lods
pop
push
lret
sub
fcoms
out
popa
push
sbb
ds
adc
inc
xchg
sbb
mov
xchg
add
adc
mov
lcall
aad
imul
inc
dec
push
in
into
daa
dec
lret
lcall
xchg
cs
cli
movsb
fbstp
and
outsb
cli
add
sbb
sbb
or
sbb
js
incl
or
cs
shrb
xor
push
dec
xor
jbe
pop
inc
or
lahf
cmp
and
jo
or
stos
sub
pop
incb
jae
or
sahf
in
loop
or
jmp
daa
dec
add
jg
push
and
mov
imul
inc
xor
pop
xor
pop
add
testl
dec
scas
std
push
daa
inc
ficompl
push
mov
outsl
sahf
cltd
nop
push
dec
push
subb
sbb
leave
jge
addl
shll
lret
ja
mov
xchg
rclb
call
jle
in
adc
push
dec
les
fs
lret
pop
sbb
out
scas
sbb
je
mov
aas
lods
or
xchg
xor
test
xlat
jge
jl
ficomps
mov
or
ljmp
xchg
jne
cli
and
push
and
lcall
movsl
ret
roll
aam
mov
xchg
xor
and
push
rclb
movsl
add
icebp
mov
adc
sti
out
movsb
cmp
inc
push
out
mov
cmp
clc
adc
jnp
mov
stos
mov
xchg
int3
jnp
test
xorl
sub
xorb
cmp
aam
push
out
mov
hlt
push
add
push
xlat
dec
jo
mov
inc
lods
push
daa
sbb
fsubl
inc
adc
cwtl
inc
push
sarb
jno
sbb
xor
rolb
movb
cli
or
icebp
push
sbb
outsb
xchg
pushf
mov
shl
pop
pop
int
lock
jecxz
inc
addb
scas
or
loop
push
shl
pop
pop
dec
cmpsb
inc
not
xor
mov
push
cmp
push
xchg
adc
pop
cwtl
int
dec
pop
ljmp
in
xchg
rorb
imul
jmp
cs
les
mov
push
add
xlat
enter
inc
adc
cmp
adc
inc
or
jb
scas
lea
jle
fxch
shrb
jge
mov
or
repz
ret
sub
inc
repz
out
bound
mov
sub
stos
lcall
jecxz
fistps
mov
rorl
clc
lret
push
or
dec
xchg
push
inc
ret
lods
cmpsb
adc
in
cmp
mov
or
add
out
sbb
orl
xor
addl
dec
jae
sbb
push
rcl
push
jo
adc
xchg
incl
jl
sub
out
dec
popa
loopne
xchg
or
or
clc
inc
cmp
enter
xchg
addr16
ror
iret
addr16
cltd
xor
fmull
sbb
dec
das
insb
rep
sbb
push
lret
and
into
pop
sub
in
pop
fstpt
xchg
cmpl
and
gs
test
jbe
jp
pop
mov
enter
mov
pop
push
into
xor
cmp
pop
xchg
pop
adc
fiadds
cmp
or
test
mov
dec
fcom
aas
add
insl
xor
cmp
jne
icebp
loope
push
adc
frstor
dec
mov
shll
add
mov
push
pop
fwait
cli
push
pushf
lret
daa
jae
add
bound
in
lea
mov
mov
arpl
cmp
and
mov
jle
adc
inc
pop
icebp
jnp
in
arpl
adc
outsl
jp
lcall
xor
mov
fwait
xchg
and
popw
jne
inc
dec
sbb
insl
pop
outsl
add
clc
in
jns
ds
stos
std
imul
mov
shlb
fs
adc
xor
push
test
clc
test
in
pop
orb
jns
cmc
sbb
shlb
lret
push
push
jle
push
hlt
xor
es
sbb
sub
dec
inc
pusha
fbstp
fmuls
dec
testl
sti
mov
pop
and
orb
mov
repz
jge
mov
jbe
mov
sub
mov
in
push
jb
sub
aam
repz
xchg
sub
xor
pop
cmp
mov
and
orl
leave
fwait
push
xchg
outsl
addr16
push
push
test
scas
outsl
mov
mov
push
push
push
and
xor
push
pop
das
mov
push
dec
fsubrp
push
pop
or
mov
std
add
test
add
cli
pop
mov
stos
push
mov
pop
ds
pusha
sub
outsl
lock
and
and
jnp
jmp
mov
dec
inc
out
cmpsl
nop
bound
sub
in
sbb
and
fisttpll
addr16
xor
sub
rcll
jns
andl
mov
pop
lods
jmp
dec
jns
sbb
lea
dec
pop
mov
mov
push
rcr
jbe
push
jne
pop
xchg
lods
push
les
mov
cmp
cmc
cld
mov
in
lcall
clc
test
mov
mov
in
fidivrl
shlb
fstps
push
pop
test
aas
push
mov
inc
insb
pusha
xchg
loop
mov
outsl
sbb
mov
test
cmp
dec
pop
xor
ja
sbb
rcrb
sbbl
shrb
add
push
sti
jns
and
and
or
test
jecxz
sbb
push
jbe
push
mulb
xchg
out
sub
add
movsl
in
jmp
mov
cmpl
jge
fsts
mov
xchg
fistps
movl
cmpsb
dec
sub
pop
push
dec
popf
cmp
mov
mov
adc
into
pop
ret
aaa
mov
add
dec
push
xchg
pop
add
pop
in
xchg
mov
pop
fwait
push
mov
mov
and
sub
inc
in
or
or
ret
gs
imul
mov
and
mov
arpl
faddl
dec
iret
xor
shll
pop
xor
jmp
mov
dec
imul
cmp
dec
ret
inc
addr16
mov
adc
bound
mov
stos
into
aad
mov
xor
pop
scas
push
mov
push
xchg
pop
lds
stc
fdivs
sub
gs
cmp
xor
loop
lods
clc
xor
jle
mov
lret
xor
push
pop
lods
push
fs
stos
jp,pn
inc
addl
xchg
and
mov
int
fistpll
and
cld
subl
cmpsl
jno
fs
jne
jo
sti
repnz
xchg
push
das
xchg
bound
mov
mov
mov
mov
addl
sub
out
mov
pop
inc
ss
mov
call
testl
mov
jnp
fidivrs
and
cmpsb
xchg
sub
aaa
lock
push
jae
xchg
imul
fsubr
adc
dec
out
movsl
test
rcrl
pop
dec
lods
push
inc
nop
lods
ret
push
push
xchg
sbb
sub
add
nop
aam
repz
inc
mov
loop
int3
sahf
adc
div
push
and
pop
cmp
sub
mov
and
push
xchg
rolb
jb
pop
ficoms
sar
imul
repz
inc
movsl
mov
jl
insb
mov
sub
daa
pop
adc
and
xchg
fwait
loopne
push
in
adc
pop
sbb
push
cmp
mov
inc
das
mov
cmp
aas
dec
add
daa
in
out
subb
sahf
int
pop
xchg
push
jbe
lret
cmpsb
add
inc
test
mov
test
lods
jle
js
mov
orl
faddl
bound
cmp
lods
out
inc
int3
adc
xchg
js
ret
push
push
inc
push
sbb
popa
imul
jecxz
push
add
pusha
pop
scas
cmpb
inc
cmp
mov
aas
adcl
fwait
loope
lock
xlat
popf
jns
mov
inc
sti
jle
push
xchg
lods
ja
je
xchg
mov
ljmp
mov
pop
mov
cmp
sar
mov
mov
sub
xchg
insb
imul
mov
add
fidivl
and
push
inc
lods
cmp
inc
push
testl
rclb
pop
pusha
sbbl
into
daa
dec
xor
shll
mov
hlt
sti
cmc
mov
in
mov
jnp
xor
mov
jne
jae
adcl
and
lds
loop
mov
imul
loop
mov
cwtl
sub
xchg
ljmp
rcrl
and
xor
push
jno
aaa
notb
and
arpl
xchg
mov
ja
mov
or
jns
loopne
mov
cmpsb
dec
in
inc
jp
fcmovne
rol
sbb
stos
in
cmp
adc
into
and
ss
std
imul
mov
call
add
arpl
jbe
inc
loop
or
mov
sbb
insb
lcall
inc
add
pop
push
aad
mov
pop
jp
lods
ja
jns
push
sbb
jne
movsl
xor
ja
jne
pop
xchg
nop
inc
es
adcb
jns
fnstenv
in
lds
fcompl
push
mov
psrlw
cmp
and
mov
data16
cwtl
mov
jl
lret
xor
mov
cli
jmp
cli
ss
mov
bts
rol
mov
pop
shlb
push
test
pop
paddq
push
std
cvtdq2ps
mov
ret
inc
mov
sbb
sbb
xchg
sbb
sub
inc
xchg
or
mov
std
lods
sub
imul
pop
pop
leave
ret
push
mov
push
movl
movl
cmpl
je
cmpl
jb
jmp
push
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
or
movsbl
or
mov
addl
sub
movl
cmpl
je
cmpl
jl
jmp
push
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
xor
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jl
jmp
pushl
call
cmpl
jb
push
mov
mov
mov
sub
sub
mov
andl
movl
sub
push
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
pushl
call
jmp
mov
andl
mov
addl
mov
adc
mov
mov
and
xor
addl
xor
mov
mov
adc
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
push
test
add
add
add
add
add
add
add
push
cmp
add
add
add
inc
push
enter
pop
movsl
fs
mov
xchg
lret
jecxz
cld
dec
add
add
inc
cmp
outsb
outsl
ja
and
pop
inc
imul
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
add
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
inc
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
inc
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
jl
lods
outsl
scas
hlt
add
testl
jbe
xchg
mov
cmpsl
loopne
pop
push
pop
notl
pushf
or
pushf
or
mov
lcall
xchg
pushf
sub
popa
mov
stos
mov
mov
jbe
xchg
mov
pop
pop
cmpsl
jae
pop
clc
push
stc
mov
xchg
cmpsl
test
lret
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
add
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
mov
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
