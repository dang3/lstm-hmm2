push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
or
mov
mov
mov
sbb
mov
mov
orl
push
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
push
jmp
enter
fldenv
add
inc
sub
jl
addb
jl
aam
ret
rol
in
lret
fmul
cli
icebp
fmul
aam
jecxz
cli
rcl
xchg
mov
loopne
cli
jmp
leave
xor
icebp
xor
neg
aad
int
fnclex
out
repz
ljmp
out
ret
clc
fxch
in
leave
icebp
hlt
dec
cmp
rolb
repnz
in
fildl
shl
sub
shl
xlat
stc
aas
adc
out
out
test
mov
iret
cld
fdivp
jecxz
hlt
jecxz
aaa
ret
fcmovu
neg
in
iret
out
lock
in
lock
in
aad
jmp
sti
call
aam
int
int3
out
ds
fmulp
sti
out
fmuls
hlt
icebp
rol
repnz
aad
xor
lret
sarl
cld
hlt
cmp
ret
loopne
out
sti
xchg
call
ror
out
cmc
jmp
jmp
cld
in
sar
stc
testb
mov
ljmp
leave
int
aad
out
ret
idiv
test
shr
test
loope
leave
into
nop
in
int3
sarb
sarl
in
lret
fsub
in
cmp
cmp
fld
jmp
int
fimuls
cs
xor
aam
ror
aas
ljmp
sbb
aad
adc
rorb
repz
xor
std
stc
out
jmp
iret
fsubr
cmc
in
jmp
flds
cld
fiadds
aad
lds
out
into
sarl
cmp
test
fmulp
incl
fmul
enter
sub
mul
shl
cmp
enter
lret
rorb
test
fucomp
out
loope
mov
leave
into
fldz
xor
stc
in
xlat
sarl
out
fsub
shl
cld
loop
std
loop
imul
lret
leave
ljmp
lock
cld
sar
cmc
fucom
cmp
idivb
call
ftst
and
lret
leave
aaa
xor
aam
ss
xlat
xlat
iret
out
rcr
rcl
clc
fstp
mov
lret
leave
fucomip
xchg
hlt
xor
aam
out
fst
iret
sarb
sar
repz
test
fimull
repnz
fadd
xor
rcr
lret
cmp
fldl
xlat
clc
call
loopne
aad
jecxz
out
int3
xlat
xor
cmp
out
sti
rcl
fdiv
div
ljmp
in
loope
div
xor
in
leave
stc
sbb
ret
test
xchg
in
loopne
lret
xor
int3
loopne
ret
test
out
sti
rcr
iret
int3
aad
in
test
call
out
cmp
ror
ret
les
mov
enter
enter
repnz
shl
aam
in
icebp
fdivr
cld
aam
xor
ljmp
into
mov
lock
call
lock
ret
stc
icebp
cld
jecxz
idiv
enter
xchg
lret
iret
call
fcom
jmp
out
frstpm(287
clc
clc
sub
in
call
jecxz
jmp
into
lret
xor
call
fiadds
std
or
mov
repz
lock
jecxz
aaa
ret
stc
int
cmp
cmp
inc
fcmovu
imul
fsubp
mov
loope
bnd
repnz
call
rcr
jecxz
and
loop
sbb
jecxz
out
hlt
xor
loopne
in
hlt
jmp
aad
xchg
icebp
ljmp
std
iret
ds
repnz
jmp
lret
mov
aaa
divl
shr
aad
lret
lret
out
push
jmp
in
idiv
lock
sub
xor
in
aad
call
cmpl
sbb
std
mov
fcoms
shrl
hlt
out
enter
call
xor
rcr
rol
sti
mov
movl
iret
ljmp
out
loope
cld
test
shl
xchg
in
jmp
fmul
in
xor
xor
xlat
cli
cmp
lret
jecxz
repz
adc
loop
loop
enter
jmp
out
cli
fdivrs
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
enter
lret
xor
inc
inc
leave
inc
sub
addb
jl
ljmp
aad
repnz
fsincos
fldlg2
test
mov
loopne
in
in
out
in
lret
cli
into
cmp
test
fsub
inc
in
fdivr
fadds
icebp
jmp
jmp
imul
rcr
clc
xlat
cmc
test
cli
hlt
in
fsub
in
xchg
jmp
lock
ret
out
cmp
int
les
std
clc
jmp
icebp
call
xchg
ds
mov
fcomip
loopne
iret
iret
shr
ret
fnsetpm(287
test
jecxz
loope
leave
enter
out
aad
xor
lret
fstpt
repnz
clc
loop
fadd
ret
popl
push
call
cld
ds
cmp
neg
sar
lret
int
mov
out
mov
int
in
aas
fst
lock
iret
cmp
rcr
ljmp
std
xchg
dec
mov
jmp
out
divl
repnz
stc
out
fsub
aam
in
fmull
loopne
rol
aaa
int3
lret
aam
xor
cmp
clc
in
sarl
test
ret
cld
out
loop
cli
repnz
xor
fcom
fdivrp
cmp
clc
fsub
fcmovu
std
in
ret
cli
std
out
mov
iret
aad
xor
cli
out
fcmovnb
clc
repnz
ds
xchg
fst
xlat
loopne
fdivr
popl
xor
int3
cld
rcr
sar
in
mov
rcr
fmull
mov
shlb
loopne
cmc
cmp
loopne
cld
repz
sar
cli
clc
mov
fdiv
mov
dec
xor
iret
out
int3
aam
clc
out
lret
rcl
repz
fptan
ffreep
fldl
fsubrp
test
in
int3
ljmp
loop
jecxz
and
loope
stc
fmulp
std
mov
into
iret
ljmp
hlt
aam
std
fst
clc
jecxz
xlat
xchg
fmul
mov
loopne
rcl
cmp
xor
cli
in
testl
lret
jmp
mov
xor
call
repnz
loope
int
std
sar
rol
out
fcmovu
in
fisttpll
loopne
icebp
in
leave
in
fcom
not
cmp
and
test
icebp
in
out
xlat
xor
xor
jmp
fsubr
cmpl
aad
loope
and
out
rcl
sub
out
jmp
cmp
cmp
cmp
sub
hlt
mov
lret
lret
xchg
out
into
in
cli
aam
ss
lret
out
cmp
idiv
sar
rol
stc
out
stc
std
cld
clc
loop
in
iret
aaa
xor
sti
lock
std
sti
lret
mov
mov
in
xchg
repnz
out
sub
xor
lret
cs
in
ljmp
clc
inc
int3
mov
incb
lret
icebp
jmp
hlt
aam
test
cmp
ret
std
mov
ret
in
enter
sti
fsqrt
hlt
int3
iret
into
cmp
in
icebp
repnz
idiv
fsubp
mov
in
xor
fadd
xor
in
int
icebp
repnz
cmp
cmpb
cmc
shr
fsub
mov
clc
icebp
roll
shl
out
cs
aam
loopne
sbb
in
ret
iret
cli
out
mov
cmc
xchg
not
lock
out
lock
aad
flds
sbb
jmp
std
std
lock
int3
stc
lret
cmp
repnz
cmc
ds
rol
fldl
shll
xor
cmp
lret
std
in
int
aad
int3
fucom
cmp
repz
fcmovnu
xchg
out
repnz
int
repnz
loopne
jecxz
mov
enter
ljmp
cmc
call
in
ror
into
repz
cld
in
fcmovnu
fiaddl
loope
stc
mul
enter
aam
lret
repz
lret
in
in
icebp
mov
xor
cli
idivl
ljmp
aad
std
not
enter
and
clc
in
nop
loopne
jmp
jmp
loop
lret
out
aas
icebp
xor
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
push
adc
mov
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
mov
lea
mov
mov
sub
and
mov
jmp
lret
aad
fcmovu
adc
adc
jo
or
jl
addb
jl
std
test
stc
or
mov
out
repnz
in
in
fdivrl
loopne
clc
out
cmp
test
mov
lret
enter
jecxz
in
in
int
lret
jmp
hlt
ljmp
shl
loopne
cli
in
in
mov
fld
lock
sarb
cmp
adc
mov
into
sub
fidivs
loop
out
cmc
frndint
cmp
ret
cmc
test
and
fucompp
lret
mov
repz
shr
out
int
ss
sti
sar
shr
int3
int
out
clc
sti
jecxz
int3
lret
and
xchg
aad
int
std
rcr
repz
aad
lock
fiaddl
xchg
loope
repnz
in
out
fcmovbe
leave
fcomip
loope
iret
lret
loopne
testl
mov
das
shl
xor
rcr
lret
fcmove
cli
out
lock
fsub
fldz
int3
fcoml
rcr
lret
out
fnstsw
fdivl
ljmp
in
and
out
jecxz
test
lret
aad
leave
cli
enter
sti
stc
fdivrl
loopne
test
call
loop
cld
in
enter
iret
shlb
cmp
repnz
enter
fnstsw
sarl
cmp
loope
mov
lret
call
ljmp
inc
cmp
cmp
cmp
ffreep
ffreep
mov
hlt
stc
fsub
ljmp
sub
jecxz
aaa
in
lock
cmc
clc
dec
xchg
clc
test
fimuls
sti
mov
shl
in
in
ljmp
cmp
rol
loopne
xchg
sti
idiv
mov
fdivs
leave
iret
xor
aaa
cmp
ret
aam
test
fisttps
lret
int3
in
les
clc
xor
xor
cmp
in
loop
add
fcmove
and
sub
aam
cmp
std
in
aaa
clc
shr
sar
fxam
ffreep
aam
lds
jmp
xor
shlb
enter
lret
ret
cld
sti
std
loopne
into
test
rorl
int3
shl
iret
repnz
rcr
sarl
out
aam
loope
sub
sti
out
test
ljmp
lret
fdivr
ss
sti
aad
cli
loope
mov
std
fxch
lea
idivl
shl
int3
shl
leave
xlat
cld
cmp
fsincos
idivl
sbb
int3
ljmp
xor
test
iret
aad
test
out
sub
hlt
std
orb
nop
xchg
aaa
aaa
int3
loop
fcmovu
lret
cld
fdivr
test
fld
fucomp
leave
xchg
std
fdivr
ljmp
fsubr
xor
cmp
cmp
repz
aad
lret
not
xchg
loope
sub
xor
loop
enter
cmc
xor
cmp
xor
ret
in
out
enter
out
xchg
int3
in
xor
ror
int3
repz
jmp
loopne
into
ret
out
fndisi(8087
aam
jecxz
std
ljmp
xor
out
dec
fcomp
shl
iret
lock
xlat
test
stc
in
into
jecxz
ffreep
out
aaa
aaa
into
cmp
int3
loope
ror
loopne
out
fcomp
in
fisttpl
rclb
aaa
ret
cmc
xor
xlat
test
clc
aad
in
out
int
in
sub
loop
das
loop
rcr
xor
aas
loopne
cli
test
ret
cmc
leave
call
out
std
ljmp
fmul
cmp
jmp
loop
jecxz
in
adc
test
loop
loope
lock
ss
fsubrp
out
ret
or
fimull
fadds
xorb
fnstenv
cmp
into
cmp
repz
jecxz
ret
add
jmp
loopne
mov
shr
ret
int
in
aas
lock
fdivrp
test
xchg
aas
int
addl
sar
in
enter
in
in
aam
fdivr
test
roll
cld
into
out
aam
enter
enter
jmp
loopne
cmp
mov
and
mov
orl
jmp
rol
aas
ror
daa
jae
lea
test
jl
add
ret
call
fsubrp
and
lock
jmp
cmp
neg
out
fldpi
stc
xchg
jmp
shl
jmp
cmp
imul
cmp
cmp
stc
xlat
addb
loop
mov
cld
ror
xchg
aam
in
cli
ror
cmc
shl
cmp
cmp
xchg
std
mov
lret
mov
cld
popl
sub
cmp
faddl
fcompp
out
filds
fucomp
mov
in
xor
ljmp
rcr
test
hlt
incl
not
jecxz
sti
repnz
lret
out
fsubr
cli
fstp
ds
sarl
enter
vpmacsswd
mov
ret
in
xor
fidivl
cmpb
call
in
cli
filds
out
call
aad
aad
fucom
shr
xor
vpmulhw
fsub
in
jmp
lret
xlat
xor
call
neg
out
loope
aad
and
not
mov
leave
testb
out
out
loop
xor
cmp
xorl
ret
test
out
std
xchg
lret
repnz
xchg
out
cmc
xor
cmp
cs
not
sarb
fcomi
sbb
loop
jmp
out
lock
loope
jecxz
leave
rol
aaa
cmp
xor
shl
clc
ds
sub
loopne
fists
ret
clc
xor
fdivr
loopne
cli
ds
cmp
loop
mov
xchg
lret
cli
fmul
ror
xor
aaa
std
fnstsw
fcmove
into
ss
testl
sub
sti
fstpt
cmp
and
cmp
loopne
in
rcl
out
lock
ror
int3
vpmovmskb
rol
test
test
and
enter
ljmp
test
jmp
lret
out
cmp
repz
jmp
jmp
adcb
loopne
divb
test
fdiv
sti
rol
std
shl
cld
shr
in
mov
xchg
leave
bnd
xlat
into
xlat
xor
out
cmp
rolb
out
std
nop
out
enter
loop
loop
jecxz
in
out
test
aaa
repz
adc
sti
out
vpaddusw
sub
iret
f2xm1
xor
rcr
div
loope
int
or
in
repnz
test
jmp
xor
ljmp
out
ffree
xchg
loope
xchg
xchg
jmp
lock
icebp
aaa
adc
roll
mov
jmp
fsubrp
subb
shl
cmp
stc
lret
repz
ret
fnclex
idiv
jecxz
test
cli
out
int3
loopne
fsubrp
repnz
xor
les
call
fstp
cmp
test
and
mov
stc
ljmp
shl
shl
shlb
aaa
enter
add
mul
roll
jmp
cmc
cmc
ret
out
lret
les
cmp
into
ds
testl
fmul
lret
loope
ds
xor
call
lock
std
sbb
ret
out
ret
jmp
sub
mov
call
call
shl
cmp
repnz
cmpb
loopne
cmp
enter
in
ffreep
sub
fsqrt
cmc
repnz
in
call
ret
orb
icebp
jmp
in
ret
out
leave
in
aas
test
in
test
add
add
mov
loope
test
out
aad
int3
repz
add
cmpb
sti
aam
hlt
ljmp
int3
aas
jecxz
div
lock
jmp
roll
fildl
in
adc
ror
jmp
fucomip
cmp
loope
sti
lock
cmp
in
mov
xchg
into
shl
shl
int
fcmovne
std
stc
sti
aas
fidivrs
stc
jecxz
fdivr
in
in
out
mov
xor
enter
test
cmp
cmp
mov
shl
std
xor
xor
add
mov
add
add
mov
movl
lea
jmp
ror
rcl
fcmovnu
ror
and
dec
and
addb
jl
faddp
loop
loopne
aam
out
aam
out
repz
xlat
aas
int
fnsetpm(287
cmp
test
neg
fadds
xchg
rorl
jecxz
in
out
fcmovnu
in
clc
loop
xchg
out
leave
sub
mov
xchg
lea
sub
enter
lret
ds
ret
ret
ds
decb
mov
mov
aad
lret
xor
out
cmp
int3
out
lret
sub
call
nop
xchg
loopne
out
ffreep
cs
cmp
in
sarb
rcl
idiv
adc
in
jecxz
int
out
jecxz
repnz
int
lock
fnstcw
cmp
fcmovnu
clc
icebp
hlt
loop
jmp
mov
fcomp
sti
in
jecxz
out
xchg
sub
xor
aam
in
ror
fsub
iret
lock
out
loope
cmc
jmp
out
lret
rorb
xor
enter
cmp
int3
ret
xchg
loope
test
imul
filds
xor
xor
int
addl
incl
icebp
leave
test
jecxz
xor
sti
icebp
out
div
cli
ds
cmp
cld
out
xchg
int
fabs
in
enter
mov
aam
fcmovnbe
cmp
into
imul
cmp
loop
hlt
fildl
int3
sub
iret
loop
hlt
out
int
aas
jmp
cli
jecxz
xlat
shr
in
mov
enter
iret
orl
into
sar
ss
loope
cmc
jmp
jmp
aad
fmuls
xchg
and
fxtract
std
fmul
sar
cmp
cmp
jecxz
lret
hlt
out
test
std
or
faddp
ret
in
cmp
ss
and
ror
shl
xlat
jmp
clc
clc
cmp
cmp
int
jmp
ss
xor
call
in
cmc
not
enter
sti
jmp
vaddsubps
in
sti
ss
cld
loope
icebp
mov
lret
fildl
loop
ss
jmp
jmp
shr
xchg
and
fcmovb
jmp
loope
iret
xor
fsqrt
in
hlt
test
icebp
rolb
fcmovnu
cld
fistpll
addl
ljmp
std
fidivrl
test
std
incl
out
in
out
lock
int3
in
jmp
iret
out
cmp
sti
sti
rcl
loopne
in
jmp
jmp
out
ret
int
xor
repnz
fcomp
out
call
fsubr
xor
xchg
xchg
ret
mov
cld
or
call
cmp
ror
div
idivb
clc
lret
xor
ret
shl
ret
jmp
and
loope
mov
xor
fdivrs
lock
jecxz
cmp
rcr
stc
mov
rcll
out
xor
aam
fst
ss
fsubr
fistpll
jmp
sub
mov
in
divl
lret
repnz
cmp
iret
cmp
loope
loopne
int
leave
in
shl
aad
ss
call
rcl
loopne
jecxz
ds
leave
jmp
rorb
ret
in
icebp
cmp
int
ss
ss
hlt
and
iret
out
shl
filds
decl
lea
out
jmp
lret
fidivrl
aad
ret
xabort
xor
icebp
ror
icebp
mov
repz
rcl
xlat
repnz
int
cmp
jecxz
repnz
loop
cmc
test
xchg
lret
repnz
repz
in
loop
rcl
jmp
fdivr
fcmovnu
shl
addl
ljmp
out
cmc
div
lret
icebp
fcomi
cmp
xchg
mov
leave
xchg
out
out
xchg
int3
repz
lock
push
xor
mov
clc
mov
jmp
jecxz
mov
shl
ljmp
aad
in
hlt
cld
in
stc
sarl
fdiv
lock
mov
lret
loope
fcomp
xor
hlt
icebp
lock
sbb
icebp
repnz
cli
cmp
jecxz
mov
int3
loop
in
jecxz
jecxz
cmc
cmp
in
loopne
fdivr
fsqrt
jmp
test
clc
test
inc
loopne
inc
in
mov
jmp
aam
into
lret
rcr
fstp
les
jmp
lcall
jl
xchg
in
cmp
stc
cmp
xor
xor
hlt
loop
inc
jecxz
mov
in
lock
cmp
std
cld
ret
stc
clc
loop
sti
neg
cld
loope
xchg
leave
enter
in
in
ret
int
cld
cmp
out
ss
sti
rorb
fcmovu
enter
sar
icebp
sub
out
leave
neg
iret
lret
jecxz
rcr
and
stc
stc
cli
call
fmull
lret
div
clc
rcl
les
ds
repnz
stc
shl
hlt
sti
cmp
in
cli
and
out
out
int
icebp
jmp
fucomi
aas
icebp
into
xor
out
hlt
ret
aam
fsubr
faddl
loope
lret
aam
jmp
xor
push
int3
adc
cli
fadds
out
jmp
cmc
in
cmc
ret
xor
aaa
fsubr
lret
aas
icebp
sti
iret
fdiv
ffree
loope
leave
in
fcmovne
in
fimull
repz
cmp
in
fdivrl
fsubr
lret
into
cmp
jecxz
shl
cmp
xchg
cld
jmp
ss
imul
fdivr
cmp
ljmp
repz
nop
loop
xorb
jmp
iret
ljmp
clc
in
repz
jmp
fimull
int3
xor
shl
into
xor
repz
cmc
xlat
aad
ret
xlat
fmulp
sti
rolb
lock
xor
das
clc
fnstenv
in
fcomp
ret
vpaddusw
leave
lret
fmul
in
std
lret
mov
into
repz
ljmp
xlat
std
fdiv
aas
mov
out
jmp
out
into
rorl
lret
sti
fdivs
in
ss
cmp
sbb
test
aam
repz
stc
in
mov
int
xor
xor
int
sar
aas
loope
xlat
cmp
loope
sbb
jmp
loope
in
xor
clc
ds
fdiv
icebp
xchg
repnz
loope
out
mov
sub
cmc
jecxz
xor
xor
ljmp
in
repnz
sti
cli
std
test
loop
ret
lret
fsubp
not
repnz
out
ss
cli
loope
incb
leave
mov
call
xchg
rcl
ret
icebp
shll
xor
leave
in
cmp
in
jmp
cmp
ret
in
mov
in
mov
jmp
cmp
int3
fistpll
ds
test
xlat
repz
int
xchg
out
jmp
in
xor
aad
idivl
imul
cmp
in
loope
rol
ljmp
aas
xor
jecxz
test
fildl
enter
fstl
call
cmp
fdivrs
neg
aad
xchg
test
ret
test
xchg
in
mov
in
loope
ss
cmp
hlt
fidivrs
aas
cmc
aas
hlt
push
cli
in
loop
int3
cli
fmulp
enter
int3
sarb
call
in
cmp
xor
fldl
fucom
int3
leave
mov
lock
stc
cmp
lds
into
ror
fprem1
clc
test
fildl
loope
xchg
out
shl
shl
aaa
icebp
hlt
xor
in
repz
jecxz
rcl
out
fcmovnu
out
jmp
ror
enter
stc
in
neg
leave
cld
fsubp
aad
ret
rcr
ret
loop
cld
and
orb
icebp
fnstcw
fdivl
cmp
in
ffreep
call
mov
out
std
mov
repnz
jmp
jmp
push
repz
out
stc
fmul
xchg
cld
ljmp
aam
into
xlat
in
shl
ljmp
testl
into
xor
stc
lock
clc
in
enter
rcl
cmp
ds
fiaddl
int
incb
int3
das
out
ljmp
iret
std
jmp
fsubr
repnz
jmp
aad
vmovq
stc
in
repz
ffreep
aam
fiaddl
enter
lret
roll
in
fdiv
int
loope
aad
out
in
imul
sti
aas
hlt
ret
and
sar
leave
iret
xchg
mov
cs
sub
movb
mov
mov
mov
mov
mov
jmp
ret
rcl
rcl
aad
shrl
xor
dec
and
jl
addb
jl
fldln2
aaa
jmp
rcl
xlat
loop
loopne
jecxz
lea
sbb
xor
clc
les
sub
lret
cmc
sti
not
ds
cmp
mov
ror
mov
xchg
mov
loopne
ljmp
lret
hlt
or
fdiv
ret
in
ffree
loope
cld
cli
repnz
icebp
aam
in
in
in
fcmovbe
cld
std
xlat
test
faddl
fisttpl
xchg
in
rcr
xor
call
clc
fxch
cld
rcr
out
imul
loopne
ret
lret
int3
loope
aam
into
hlt
aad
enter
repnz
testl
in
cld
xchg
and
aam
enter
out
call
rcl
cmp
orl
out
mov
jecxz
sub
in
stc
cld
xor
in
ret
incb
sti
hlt
lds
fadd
icebp
out
icebp
rcl
iret
cmp
enter
lret
cli
faddp
xlat
mov
les
shl
xchg
icebp
rol
cmp
fmul
cld
jmp
hlt
sar
icebp
rolb
test
repz
int
xor
fucomp
int
call
inc
jmp
xlat
xchg
out
adc
loope
jmp
xlat
xor
stc
int3
repnz
int3
fnstsw
cld
loopne
out
mov
fdivp
out
loop
ss
jecxz
clc
icebp
lock
cmp
faddp
repz
sti
in
fmulp
fcmovu
xchg
test
cmc
in
aad
clc
iret
icebp
fdivl
fdivrp
cmp
rol
mov
cli
clc
or
xchg
ljmp
aaa
leave
cmp
std
ds
in
jecxz
sti
out
sar
mov
shl
in
jecxz
aad
jmp
xor
clc
xor
repnz
jecxz
jmp
iret
adcl
cmp
std
repnz
sarb
hlt
mul
adc
mov
into
xlat
sub
call
aas
xor
icebp
sbb
sar
decl
into
lret
mov
jecxz
xabort
ljmp
ss
cld
leave
test
lret
loopne
lret
ret
cmc
ror
clc
cmp
div
shl
fmuls
lret
rorb
xor
rol
fst
ss
xor
icebp
shl
test
in
enter
jmp
xor
fcomp
aas
cmp
out
rolb
std
test
ljmp
xor
fdivs
lock
aaa
aam
idiv
inc
cmp
cld
jecxz
mov
fimuls
repnz
jmp
xlat
iret
into
iret
fcmovnbe
out
ds
in
cld
stc
mov
out
test
hlt
jecxz
lock
in
lret
cmp
cmp
cmp
clc
std
out
ret
mov
mov
sub
loop
out
lret
aaa
cmp
cmp
cld
icebp
movb
fucomip
fcoml
cmc
fld
sub
shr
out
iret
jmp
add
xchg
jecxz
fiadds
loopne
xchg
rcl
sub
xor
hlt
ljmp
fyl2x
rcr
rcr
sub
call
jmp
int
stc
xor
cmp
stc
ret
cli
in
xchg
mov
cld
ror
int
clc
shr
cmp
clc
fsubr
shl
cmp
test
fmuls
out
xor
enter
int3
aaa
stc
test
idiv
std
loope
mov
in
cli
test
loope
jmp
loop
clc
jecxz,pn
cmp
xor
icebp
out
xchg
fdivr
mov
jmp
lret
leave
xor
icebp
cmp
rcl
cmp
out
loope
cmp
out
int3
rcll
lret
xor
clc
sti
aam
fdivrl
sar
stc
repz
xlat
aad
clc
ljmp
aad
shl
aaa
rcl
cmp
ljmp
addl
in
xchg
ljmp
enter
leave
shr
jecxz
sti
aad
ret
ret
std
fcmovnu
out
and
xor
ret
not
cmp
cmp
mov
jmp
sarb
enter
fidivl
mov
andb
jl
shl
ds
sar
into
lock
sbb
sti
and
aam
in
stc
out
ds
stc
repz
sar
rol
jecxz
aam
fcmovnb
fucomi
xchg
repnz
loope
shl
leave
lret
out
cmp
cmc
cmp
fcom
sub
mov
leave
icebp
xchg
xchg
xchg
xchg
jecxz
xor
lock
repnz
rcl
cld
call
sarb
jecxz
fcmovnbe
rol
fisttpll
rorb
out
fst
lret
call
clc
cmp
rol
cmp
leave
loop
into
jmp
in
cmp
rcl
cmp
in
aas
fidivrl
cld
rol
sarl
add
sub
jmp
addl
not
iret
xlat
ds
xlat
loop
jecxz
adc
clc
int3
jecxz
fdivr
sub
sar
stc
out
out
jmp
in
rol
fst
jmp
loop
ffree
and
fiadds
repz
fcmovne
clc
fdivrl
ret
loope
in
fst
mov
std
loop
int
jecxz
cld
mov
jecxz
ret
fcmovnu
out
aaa
ss
icebp
out
in
cli
cmp
mov
orl
popl
stc
clc
call
out
cmp
fadd
cmp
xchg
mov
into
roll
xor
enter
cmp
clc
cmp
test
call
iret
int3
int
xchg
rcl
jmp
loop
ror
lret
jmp
shl
in
orb
enter
hlt
enter
fxch
shl
loope
fst
fsubrp
sbb
imul
cmp
flds
rclb
jmp
cmc
aas
lret
int3
testl
mov
loopne
nop
into
aam
xor
std
in
out
lret
cmp
loopne
shl
fstp
int3
std
loop
in
adc
mov
in
neg
lock
out
fcomip
aad
lock
repz
ret
loop
lock
ret
fsubr
cmp
rcr
out
fldl
icebp
int3
lds
shl
rol
into
cmc
leave
cmp
cmc
std
faddp
and
cmp
cmc
sub
sub
clc
fmul
ss
aam
aas
loopne,pt
fadds
jmp
mov
out
call
divl
ror
cmp
iret
in
stc
les
cli
ret
jecxz
leave
xchg
jmp
fdivr
cld
lret
ret
clc
sti
lret
int
jmp
lock
lret
int3
aad
sti
cmp
into
jecxz
xor
ffreep
sbb
fcmovne
xchg
in
int3
jmp
xor
cmp
sarl
test
mov
cld
in
into
jmp
loopne
rcl
lret
das
ffree
int
aam
shl
cmpb
stc
rol
ret
fmull
shr
cmc
hlt
int
cs
in
hlt
out
aas
out
fucomi
cmp
fdivr
sti
out
nop
nop
sbb
das
ret
rcl
in
icebp
ds
std
in
aam
lock
hlt
ret
ret
fcomi
ret
icebp
repz
lock
cmp
fadd
into
out
dec
repz
xlat
adc
aad
cli
ret
mov
test
iret
call
clc
repnz
jmp
cmp
roll
mov
icebp
xor
int3
lret
icebp
in
xabort
out
jecxz
clc
ret
shl
mul
fcom
cli
sbb
test
fst
repz
leave
jmp
hlt
into
fucomp
jmp
cmc
cld
cli
cmp
ds
mov
repz
sbb
jmp
in
xor
aam
jmp
cmp
xlat
aam
cmp
xchg
adcl
xor
xor
in
shr
cmc
call
adc
int3
iret
out
sar
repz
mov
out
ljmp
imul
cmc
out
int
shl
and
testl
cld
fmul
int
loope
lock
shrb
lock
jmp
int3
into
ret
aad
jmp
repnz
loope
mov
iret
out
icebp
icebp
jecxz
xor
in
std
lock
xor
sar
sarl
out
test
jecxz
mov
call
in
out
repz
aas
rol
loope
movzwl
add
mov
mov
mov
xor
add
cmp
jmp
iret
leave
rcl
fstp
leave
repz
dec
add
inc
sub
jl
addb
jl
ret
flds
fsub
sti
fsubr
mov
iret
fcmovne
clc
stc
idivb
loope
out
clc
xchg
clc
neg
fsub
out
enter
rorl
les
imull
ss
cmp
icebp
aad
fadds
std
mov
out
sub
out
xor
sar
sar
out
cmc
add
xchg
lret
in
shl
xor
xor
fucomi
iret
cli
cmp
in
not
test
mov
out
sub
xor
cmp
xor
leave
jmp
out
cld
ret
repz
lea
and
xchg
fidivs
cmp
sti
lock
cli
cld
cmp
clc
fsubr
test
mov
xchg
iret
mov
cmc
aad
stc
lock
in
in
out
std
rcr
xlat
fld
fmul
out
out
jmp
ljmp
int
std
out
repz
cld
aam
repz
shl
fdiv
not
loope
xchg
ficoms
lret
int
fcmove
aas
cmp
fildl
sar
in
incb
adc
repnz
leave
clc
xor
fscale
lock
cmp
sti
mov
rcr
fchs
std
mov
std
test
xor
out
jmp
xlat
fcmovne
loope
ret
hlt
int3
stc
in
leave
aam
mov
out
cld
mov
xlat
int
ss
ds
xlat
shl
aad
xlat
xlat
and
out
fmulp
loopne
lret
in
xor
out
clc
loope
xor
ret
fiaddl
popl
addb
into
xor
test
loope
sbb
xchg
ds
jmp
into
xor
out
rcl
in
std
cmp
ss
rcl
rcl
sar
stc
neg
fstp
int
mov
jecxz
call
shr
clc
fst
cmp
fstpt
ret
stc
out
xchg
jecxz
ljmp
in
sub
aad
repz
cld
cli
fsubp
cmp
div
stc
mov
mov
mov
out
aam
in
ret
cmp
fcmovnu
xor
rol
mul
fcmovnu
sub
sub
lret
xor
cmp
cmp
lret
cmp
std
in
lret
out
in
xchg
out
rol
lret
cmp
fmul
cmp
repz
ret
out
ret
test
clc
mov
rcll
aad
leave
xor
enter
aas
fildl
ret
cli
ret
loop
xchg
fst
int3
sub
in
cmp
icebp
cmc
sub
loope
ret
call
incl
test
sti
jmp
xor
out
sti
ljmp
out
cmc
cmc
stc
aad
fsub
decl
xchg
orl
in
idivb
in
repz
in
cli
jecxz
imul
enter
fyl2xp1
in
jmp
mov
shlb
hlt
out
rcl
repnz
cmp
test
sti
sti
or
repnz
aad
cmp
icebp
call
into
aad
cli
roll
test
fiadds
in
jecxz
clc
repnz
enter
out
aas
and
aas
ffree
fdivr
cli
jmp
and
jmp
aad
lock
cmp
and
ret
out
mov
decb
mov
xor
fsubr
cli
bnd
fdiv
aas
aad
in
xchg
mov
call
in
xor
out
aad
into
clc
lret
cmc
out
int
icebp
aas
out
rol
aad
fcomp
std
test
xchg
mov
shr
jmp
xor
xlat
loopne
rolb
ret
xchg
out
lret
jecxz
in
shl
cmc
iret
xor
sub
enter
xor
fidivrl
lret
in
sub
int
in
in
lret
out
aaa
fcmovbe
aad
fstpt
ds
call
test
in
xchg
loop
ror
rcl
jmp
clc
aam
cmp
clc
fcmovu
cmp
ljmp
jmp
loopne
into
stc
cmc
cmp
loop
stc
cmp
aad
stc
lret
and
xor
shr
ss
xor
enter
clc
cld
ror
ret
shl
ljmp
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
jmp
int
lret
xlat
int
es
mov
jb
mov
jl
addb
jl
in
sti
movl
ret
repnz
cmp
xor
fstpt
fcmovnbe
cmp
mov
mov
in
mov
cmc
shll
repnz
shl
repz
rol
cmc
cmc
xchg
loope
jmp
loop
loopne
stc
sarl
test
cmp
leave
lock
xlat
hlt
fnop
test
ljmp
test
lret
xor
repnz
out
lret
out
jmp
shl
adc
out
aad
in
fxch
fisttpl
jmp
loop
lret
std
xlat
call
cmp
test
neg
out
test
xor
clc
cmp
in
out
jmp
cmp
shr
fcmovnbe
loope
dec
ret
in
lea
mov
aam
hlt
xor
out
cmc
iret
in
rolb
idiv
mov
std
aas
jmp
xchg
rolb
int3
out
icebp
in
iret
aad
cli
rcl
loop
mov
fimuls
mov
cli
mov
xor
xor
sar
xor
adc
ret
neg
rcr
enter
mov
xchg
sarl
cmp
das
shl
std
aam
test
clc
ffree
rol
orl
sub
int
in
in
lret
ss
cmp
fstp
shl
icebp
fdivr
cmp
fisttpl
loop
adcb
xor
fcmovne
cmc
idiv
ljmp
ret
jmp
fimull
lret
ret
cmp
jmp
ds
clc
xchg
call
mov
sti
in
in
int
fdivp
into
jecxz
enter
fidivrs
xor
out
cmp
sti
cli
and
out
shlb
fcmove
div
enter
aas
clc
in
lock
sti
jecxz
hlt
leave
enter
loop
sub
out
hlt
cmc
lret
iret
lret
lret
std
fildl
ret
mov
loop
jmp
test
repnz
cmc
test
cmp
cmp
repz
loop
fld
lret
fiadds
xchg
xchg
dec
lret
out
out
clc
cmp
fdivrs
lock
in
iret
jecxz
lret
out
xchg
cmc
shr
xor
hlt
repz
out
repnz
shl
fcmovnu
in
out
mov
out
call
loope
das
xor
cmp
sarb
rcl
cmp
rol
aad
addb
cld
sar
shl
xor
clc
rcr
xlat
leave
jmp
loopne
hlt
hlt
test
test
sti
jmp
int3
int3
addb
imul
leave
into
repnz
xlat
jecxz
into
roll
in
std
out
ret
fcoml
neg
jmp
in
aaa
hlt
jmp
neg
out
cmp
loop
call
mov
loop
aam
cmp
ss
in
cld
jecxz
ror
cmp
fld
loop
in
mov
and
test
ret
stc
clc
cld
fscale
sub
fnclex
repnz
test
clc
stc
mov
jecxz
loope
leave
in
rcl
xor
sar
ds
cmp
aas
repz
fsubr
ftst
rolb
in
ror
xor
lds
shr
loope
int3
repz
fnstcw
in
fistpll
jmp
mov
rol
lret
lret
fnstsw
fucomi
lret
not
repnz
add
enter
into
ljmp
int3
leave
jmp
jmp
call
imul
fiaddl
out
xchg
mov
shl
rol
imulb
cmp
rcl
shl
filds
sti
cmc
out
fucomip
jmp
xor
xor
ffreep
iret
sti
loopne
shl
out
lock
out
fcomp
movl
sarl
rol
ror
cmp
cmpl
iret
not
xchg
adc
xchg
in
xor
xlat
in
icebp
xor
sbb
xchg
lock
test
xchg
out
xchg
out
enter
enter
fsub
cmp
std
fdivp
vpmullw
lret
out
fcmovnu
fucom
ret
aaa
fdiv
call
ss
loope
hlt
out
out
inc
std
orl
in
fucomp
in
loop
enter
fucompp
lret
lret
in
std
and
cmp
orb
add
les
rcr
fxch
enter
jmp
sub
add
std
xchg
shrb
lock
fcmovb
bnd
rcr
loope
cli
ljmp
xor
xor
out
sti
aaa
in
cmp
test
jmp
xchg
ljmp
xor
fld
into
lret
lret
into
ret
sar
xlat
xlat
clc
test
into
repnz
xor
ss
fcmovnb
ror
xor
lret
fcmove
ret
xchg
out
lret
cli
faddl
out
fcomi
std
sti
jmp
in
cmp
mov
hlt
mov
mov
sbb
popl
jmp
ret
enter
cmc
shl
repz
hlt
out
test
test
fucomp
lock
shlb
sti
fst
xor
xrelease
lret
fiadds
out
not
ljmp
cmp
std
std
aad
ret
and
add
xchg
cli
std
mov
lock
loop
aad
fst
repz
sar
add
fadd
xchg
loope
into
jecxz
jecxz
xchg
loopne
shl
stc
cmp
sar
stc
jecxz
xlat
fldl
addl
hlt
sub
rol
fcmovbe
mov
fcmovnu
sarl
cmpl
call
xor
sar
xchg
out
iret
int
loopne
out
fdivr
cli
rcr
out
repnz
jecxz
cmp
stc
xchg
in
orl
std
xor
adc
aad
cld
sti
fdivr
fdivr
add
loop
call
jmp
cmc
icebp
in
aam
sarl
rcl
in
test
fdivp
xchg
enter
xchg
out
out
hlt
ljmp
ret
in
xlat
mov
sti
in
sti
jecxz
ror
shr
repnz
ret
icebp
icebp
fucomp
fldl
mul
jecxz
mov
sub
enter
cs
ljmp
int3
or
fnstcw
cmp
les
mov
jmp
cmp
fninit
cmc
rcl
add
addb
sti
xchg
std
out
xor
jmp
clc
std
rcr
loop
lock
loop
in
mov
mov
int
loope
xor
fcmovu
enter
aas
faddl
idiv
jmp
sti
lret
mov
call
aaa
aam
cmp
testb
mov
mov
in
faddp
aaa
xlat
xlat
xor
cmp
fcmovnbe
roll
in
sub
cld
iret
shl
int3
xor
ss
xor
ds
sarl
jecxz
fdivrp
enter
jmp
xchg
dec
ror
xor
stc
cld
cmp
test
vpand
ftst
mov
loopne
int3
out
mov
xlat
clc
cld
xlat
clc
fdivrl
out
in
int
shl
lock
loop
jmp
rclb
xor
cmp
fldl
into
std
cli
out
orb
xor
lret
cmp
xor
xlat
test
ds
out
mov
in
xchg
loope
hlt
in
lret
lret
fdivs
xor
test
cmp
loopne
shl
jmp
cld
in
enter
hlt
aaa
out
stc
cmp
fmulp
loopne
int3
cmp
out
jmp
out
fiadds
lock
jmp
shrl
xor
in
cld
jecxz
sar
xlat
lret
fcmove
mov
out
repnz
in
ror
aam
xlat
inc
ds
hlt
aam
mul
xchg
enter
fucomip
lock
ljmp
repz
sarb
repz
xchg
mov
test
call
out
xlat
idivb
ljmp
jmp
out
shl
xchg
fucomip
xor
cmp
aaa
hlt
call
fsubp
cmp
xlat
hlt
addl
int3
aas
xor
out
out
cmp
cmp
hlt
fcomip
ret
ror
out
ljmp
std
iret
in
test
ljmp
loop
test
xchg
out
mov
fcmovu
iret
xchg
loope
in
icebp
int
inc
lock
xor
jmp
enter
vpsubusb
sub
xor
fstpt
add
enter
cmp
cmc
jecxz
in
jmp
cld
xchg
jmp
xchg
out
xlat
out
rcl
cld
clc
jmp
loop
hlt
ret
fldl
and
repz
test
lock
int
sarl
das
sti
call
ret
in
fdivr
mov
frndint
in
mov
nop
xchg
lret
int3
nop
adc
xor
iret
cmp
jmp
hlt
aas
stc
std
rol
inc
hlt
fdivrp
mov
mov
xlat
cmc
rol
xor
cmp
ss
ds
div
sti
frndint
xchg
xlat
cld
sti
mov
hlt
out
xor
cmp
fsubrp
ljmp
sti
cli
lret
jmp
test
mov
orb
aam
int3
icebp
cmp
hlt
jecxz
ret
ret
rorb
hlt
xor
out
call
ljmp
rcl
clc
rolb
out
loopne
and
lret
jmp
xlat
sar
ss
idiv
loop
jecxz
xchg
icebp
in
xor
ljmp
int3
out
int3
aad
shl
testb
cmp
cli
test
repz
not
shr
cld
cld
out
cmp
ds
in
hlt
sbb
in
flds
out
cmp
jmp
jmp
sub
fldpi
ljmp
out
and
cmp
repz
repz
loopne
rcl
fsub
ffree
xlat
test
in
std
ror
shl
aad
out
fldl2t
xlat
leave
rcl
ds
cmp
addb
into
out
ljmp
aaa
int
xlat
fmul
xor
stc
cli
out
cmp
loope
cld
call
mov
shr
xor
fucomi
sti
shl
cmp
cmp
cmc
int
ret
icebp
incb
out
xchg
jmp
ljmp
icebp
into
in
cmp
mov
mov
adc
lock
fdivs
jmp
cmc
cmp
cmp
div
lds
sti
sti
lret
in
icebp
xor
cmp
std
int
int
jecxz
and
loop
xchg
fmul
repz
repnz
stc
aad
cmp
fmul
ljmp
repnz
jmp
testb
cmc
loope
stc
stc
cmp
sarl
int
cmpb
repnz
lret
aam
test
jecxz
aaa
jecxz
cmp
shr
cmp
lret
in
shl
roll
aad
and
std
out
jmp
into
lret
test
jecxz
cmp
incl
mov
test
repnz
ss
into
jmp
lock
fst
out
add
vpandn
fisttps
loopne
shrb
aad
fsubr
iret
cld
icebp
cmc
ds
fucom
mov
mov
loop
icebp
repz
fcmovu
call
fnstcw
incl
into
fmulp
ljmp
ret
idiv
stc
xor
fiadds
xchg
hlt
loopne
out
mov
xchg
shl
loopne
repnz
jmp
dec
clc
test
sar
hlt
cmp
in
std
xor
xchg
in
int
cmc
ret
out
ror
ljmp
fsub
out
jmp
jecxz
mov
rcr
shl
int3
xor
xor
cmp
stc
loope
test
fld
leave
jmp
xchg
mov
xchg
in
ss
jecxz
xor
filds
out
test
jmp
in
leave
enter
out
lret
aam
sti
les
cmp
fdivp
in
repnz
mov
int3
out
jmp
int3
mov
xlat
jecxz
xlat
icebp
cmc
std
lret
hlt
loop
aas
fsqrt
fucomi
loop
loope
mov
adcl
xor
ss
fxch
jecxz
ret
les
in
fcomi
into
fnstsw
mov
in
loopne
loope
sti
xlat
not
xor
rolb
sbb
clc
fcmovbe
lret
test
jmp
ljmp
repz
ljmp
ljmp
int3
fmull
icebp
cs
call
int
sub
add
mov
mov
mov
movzwl
add
mov
jmp
iret
int3
ror
fcmovu
frstor
movsl
je
mov
sub
les
jl
addb
jl
xor
fcmovbe
out
fstpt
mov
jecxz
lret
or
int
leave
out
out
xor
cmp
rcr
out
bnd
fcom
aam
fadds
cld
into
ljmp
cmp
call
repnz
leave
lret
iret
fucom
out
mov
jecxz
shlb
stc
fmul
in
enter
sti
cmp
std
shl
jecxz
jmp
xchg
in
mov
icebp
jecxz
rcl
fdivrl
out
fstpt
jecxz
test
in
lret
mov
fmul
mov
sub
out
loop
iret
cmp
aad
cld
loope
into
cmc
repnz
out
loopne
in
lock
in
into
cld
cmp
loope
fucom
std
testl
roll
xor
rcl
test
aas
in
testl
testl
in
icebp
cmp
aad
cmp
xlat
in
sar
lret
testl
loope
cli
repnz
fdivr
loope
sti
ds
in
jmp
test
jecxz
mov
mul
fldl2e
out
shl
aaa
int3
out
in
fmul
in
int3
cld
cmp
loopne
mov
lret
enter
out
hlt
aam
int3
lret
fldl2e
leave
cld
cmp
cmp
sti
roll
flds
mov
fst
lret
repz
repnz
hlt
in
jecxz
icebp
test
aam
int3
into
jecxz
icebp
test
loope
xor
cmp
fnstcw
lock
fiaddl
cmc
in
popl
nop
xchg
loopne
out
enter
rol
shr
rcr
cmc
fstp
hlt
icebp
stc
jmp
iret
cli
lret
ljmp
fdiv
jmp
aam
stc
aad
mov
mov
in
xchg
xchg
out
jmp
xor
cmp
hlt
rcr
hlt
idiv
ds
int
cld
xchg
xchg
icebp
shll
out
icebp
lret
repnz
fadds
ljmp
xchg
test
in
clc
xor
ret
out
out
cmp
idiv
fdiv
add
xchg
loopne
xchg
stc
cli
out
xchg
mov
cmc
stc
enter
fst
std
fcomip
cmp
cmp
div
fdivrp
call
cld
jmp
cmp
repz
xor
out
out
sti
mul
sar
mov
jmp
enter
adcb
mul
out
cmp
iret
in
cmc
out
neg
std
icebp
sti
lret
int3
loope
in
test
hlt
leave
xor
sti
out
out
shl
cmp
fcomp
fsubp
repz
loope
sti
out
mov
shr
loop
int
test
in
hlt
loop
cli
in
rcr
out
out
fxch
std
ljmp
ror
into
xor
int
aaa
out
fdivr
cmc
testb
cmp
in
rol
shll
cld
xlat
out
cmp
repnz
mov
fcmovnu
in
mov
jmp
in
rcl
cmp
xor
in
fadd
cmp
stc
test
hlt
loopne
int
std
iret
fmull
sti
enter
lock
cld
fcmovnb
fadd
test
cmc
sub
fcmovnb
jmp
ljmp
in
sarl
cmp
test
not
div
fcomi
hlt
fdivrp
sbb
jmp
jmp
int
cmp
icebp
cmp
into
xlat
iret
cld
cmp
fdiv
jmp
iret
loop
ret
aad
fmul
sti
fucomip
shl
loopne
adc
jecxz
or
out
fmulp
in
out
int3
repnz
int
fucomp
into
aam
faddl
loope
out
int3
int
loopne
aad
jmp
iret
leave
in
repnz
jmp
fnstcw
shr
and
cli
loope
into
mov
lds
int
fnsave
xor
hlt
loop
ds
ret
fdiv
out
out
jecxz
nop
leave
mov
xor
jecxz
cmc
out
out
clc
sarb
ret
rol
repnz
jmp
mov
ljmp
cld
in
int3
in
add
imul
in
fcmovne
xchg
mov
int3
neg
enter
aas
jmp
decl
or
sahf
add
add
iret
leave
ret
int
xor
int
mov
jl
add
flds
cld
leave
in
jmp
rclb
icebp
cli
repnz
in
sbb
iret
fldz
clc
ret
jmp
fimuls
jecxz
loop
iret
leave
stc
cmc
shl
cld
hlt
sar
iret
iret
xacquire
out
mov
jmp
in
shl
fldln2
out
repz
in
fmul
cmc
hlt
fcmovnu
ret
cmc
sbb
lret
shl
iret
roll
xor
loop
aaa
enter
fxch
out
loop
out
flds
lret
fiadds
enter
icebp
repz
leave
int3
hlt
ror
ret
fld
out
xor
vpxor
test
test
in
int3
sub
ror
hlt
ljmp
icebp
lock
stc
incl
out
jmp
repnz
lret
cli
call
loope
fdivrp
sarl
into
xchg
mov
aad
addb
xchg
sub
cmp
cmp
clc
fldl
loope
jmp
mov
and
mov
xlat
mov
jmp
int
out
lret
fsubp
in
clc
fstp
fdivrs
fiaddl
loop
in
not
sub
fxch
iret
cmp
fiaddl
sub
cli
filds
lock
cs
out
out
xor
into
stc
out
cmc
repz
fcmovnbe
cli
ds
leave
orl
loop
xor
fst
test
sub
sti
cmp
icebp
in
mov
xchg
in
aaa
int3
xor
shl
stc
int3
repnz
in
clc
int3
rcr
in
out
in
int
mov
call
rol
jmp
dec
shl
cld
fstp
cmc
sar
add
ret
lret
xchg
xor
rolb
shr
out
icebp
cli
test
stc
lds
ret
jecxz
mov
xchg
pop
clc
xor
in
std
call
repnz
in
faddl
call
into
call
aad
repnz
rcl
and
imul
loop
addl
lret
into
shl
hlt
jecxz
aas
repnz
cli
faddl
int3
xchg
icebp
aas
aad
call
cmp
rcr
ljmp
in
int
jecxz
nop
lock
std
fmulp
xor
aaa
xor
jmp
lock
xor
fdivrp
stc
jmp
ror
or
xchg
int
int
xor
in
shr
in
sti
aaa
shr
cmc
cmc
in
mov
in
out
in
jmp
loopne
jmp
in
in
out
jmp
fidivrl
loop
jmp
cli
in
jmp
xchg
subb
int3
jmp
lret
fucomi
sbb
fdivr
fucom
loope
cli
neg
ljmp
loopne
xor
enter
cli
aad
int3
ds
rcr
aam
clc
jmp
in
xchg
jmp
leave
jmp
stc
cmp
mul
cmp
fadd
test
call
in
mov
xchg
xchg
xchg
loopne
sub
icebp
ljmp
in
rcl
shr
test
ret
les
icebp
lock
in
sti
fcmovu
iret
std
hlt
jecxz
adc
out
jecxz
ds
jecxz
stc
into
out
out
loopne
rcl
ret
xor
cli
repnz
in
ds
icebp
icebp
cli
movl
loop
iret
into
out
enter
ss
aas
cmp
cmp
loopne
sti
xlat
fstp
out
cld
lret
int
xor
sub
jmp
out
ljmp
test
aas
fdivrl
int
lret
and
fnstcw
in
stc
in
rcr
icebp
cmp
fcomp
jecxz
in
out
icebp
std
xchg
lock
out
shl
repz
cli
out
fdivrp
call
aad
shl
ret
sti
mov
test
mov
aaa
divl
xor
stc
aas
fmul
out
loopne
xor
jecxz
fisttps
cmp
loopne
cs
iret
stc
cmp
in
xlat
sti
sar
rcr
cli
ret
and
loope
ret
ret
aad
rcl
loopne
loop
in
shll
std
loopne,pt
cmp
cmpl
xlat
int3
int3
les
mov
lock
repnz
aaa
lret
fdiv
hlt
sbb
clc
fdivl
lea
jmp
rcl
int3
iret
rol
shll
or
push
sarb
jl
add
fsubr
int
ljmp
lret
jmp
fcmovnbe
cmp
idiv
xchg
rcr
out
iret
xchg
int
out
aas
xlat
hlt
in
cmp
not
out
aas
xlat
int3
sar
icebp
cmp
adc
inc
enter
cli
incb
stc
fidivl
jmp
repz
jecxz
cmp
cld
ret
testl
lock
int3
into
cmp
out
cmp
fmul
into
into
out
fdiv
fdivrp
aam
addb
in
xchg
cs
xlat
out
iret
xor
imul
hlt
lret
in
rcl
stc
and
in
in
loop
cmc
hlt
call
ret
imul
cmp
sti
clc
repnz
fdivr
jecxz
xchg
mov
cli
xchg
icebp
int3
in
ljmp
cmpb
cmc
hlt
addl
mov
xchg
mov
xchg
shll
aam
out
jmp
fcomip
cmc
cmp
cli
xlat
fiadds
test
aad
ljmp
out
leave
cmp
cld
fldl
ds
inc
in
std
xchg
repnz
cmp
shr
stc
out
xor
fistpll
aam
rcl
cmp
xlat
ret
jmp
ficoms
fcomp
rcr
cmp
sar
addb
idiv
enter
jmp
mov
xchg
shl
ss
fnstenv
repnz
sarl
xorb
cld
jmp
into
out
call
jmp
xor
out
in
repz
idiv
shl
fimuls
ret
cld
xchg
xlat
xor
out
std
cmpl
int3
repnz
xor
stc
aam
test
fsub
in
out
repz
aaa
cmp
lock
sti
and
push
loopne
rorl
jecxz
ret
rcr
ror
jmp
cmc
fcomi
test
aad
lret
fisttpl
aaa
xlat
test
shll
into
int
cmp
in
repz
test
aam
xlat
filds
shl
aaa
cmp
sar
idivb
out
cld
cmp
shr
xlat
jmp
shlb
aad
stc
lret
rcr
aam
aas
stc
cli
cmp
ds
mov
loope
fucom
sti
out
out
in
xchg
xor
into
shl
enter
cmc
aam
test
xchg
fmull
test
cli
std
xchg
aam
lret
out
rcl
lret
sarl
test
xchg
fprem1
flds
lea
repz
fcmovnbe
test
add
loopne
in
vpavgb
fisttps
aad
vmaskmovdqu
shl
xor
out
pushl
fcomi
into
lock
mov
fucom
stc
hlt
loopne
std
fdiv
xchg
std
xchg
into
xlat
enter
icebp
aas
sti
idiv
hlt
imul
cmp
cld
in
ret
loop
leave
roll
ljmp
call
mul
jecxz
fcmovb
xlat
rolb
mov
out
xchg
out
lret
rcl
lock
xor
loop
loopne
loopne
std
in
ret
out
int
shl
ljmp
fcmovbe
hlt
cld
out
sti
rcl
xor
stc
lock
mov
nop
out
mov
cmc
xor
sarb
ds
sti
ret
mov
leave
fmulp
repnz
stc
aaa
fucompp
fistpll
aaa
xor
or
jmp
add
ljmp
hlt
shl
repz
xor
lret
lock
xlat
fmulp
loope
sti
out
mov
jecxz
mov
cld
test
in
shl
cmp
into
ss
add
jmp
fsub
ljmp
shl
jecxz
jmp
fucomp
into
clc
cmp
aas
xlat
icebp
hlt
cmp
out
incl
fmuls
cs
ret
rcl
ror
fucomi
repz
out
in
cmp
out
mov
aam
cmp
repnz
ljmp
xlat
loop
cli
sti
sti
sub
loop
in
sti
cmp
lret
lret
ss
leave
aam
ret
clc
mov
std
xchg
aaa
in
in
iret
enter
shl
sti
shl
call
std
loope
fldpi
in
loop
xor
sub
mov
movzwl
cmp
jmp
lret
rcr
int
orb
jge
adc
push
sarl
jl
cld
std
in
and
aaa
int
divb
std
repz
cmp
aad
ljmp
movl
xchg
repnz
call
lret
fildl
call
rcr
jmp
leave
ret
clc
sbb
lret
fadd
sub
fucomip
cmp
fcomp
ret
leave
mov
xchg
not
cs
out
xor
repnz
in
out
fidivrs
hlt
repz
hlt
mov
loope
fldl
in
xor
rcr
cmp
lock
cmp
test
sti
sti
loopne
fnsetpm(287
xchg
xchg
jecxz
aam
jmp
leave
std
jmp
clc
aam
test
fmull
iret
in
clc
int3
xacquire
jecxz
xor
fadd
in
aas
xchg
lock
mov
into
rorb
jmp
sar
fld
aam
int
in
repnz
fcmovnbe
cli
in
cld
fcoms
aam
divb
lock
cld
out
int3
sti
sti
aaa
stc
out
cmp
hlt
call
fcomi
push
test
nop
lret
fsubrs
shr
aas
std
rcl
repz
out
loope
aad
lds
orl
xchg
iret
int3
repz
test
rcl
out
shl
lock
aam
leave
fdiv
int
icebp
lret
leave
cmc
xor
ror
fld
fidivl
cmc
cmp
aaa
loope
sar
incl
fldl
xchg
xor
iret
in
ss
hlt
jmp
jecxz
fsub
hlt
repnz
in
fadd
inc
jmp
in
lock
ljmp
aam
lock
push
mov
mov
sbb
iret
std
lret
sbb
jmp
lock
ret
loopne
hlt
out
cld
mov
xchg
loope
ss
in
shr
aad
int3
cmp
loop
cmp
out
loop
lret
lret
rol
into
clc
in
cmp
cs
sti
cmp
out
lret
ds
enter
leave
loop
call
in
shll
out
shl
xorb
fdivrp
ret
hlt
mov
fmulp
in
lret
lret
ss
ljmp
aad
icebp
iret
cmp
decb
xchg
adcl
aam
cmp
in
push
and
and
fmul
or
fcom
stc
std
into
std
lock
neg
fldl
loop
sti
in
frstpm(287
shl
out
cmc
int3
fyl2xp1
out
cmp
int
hlt
hlt
cmp
ds
aam
test
jecxz
out
lock
out
loopne
repz
cmp
repnz
xchg
mov
mov
adc
loope
repz
imul
iret
shl
hlt
iret
cmp
cld
int3
cmp
std
ret
repnz
sub
clc
test
enter
aaa
aaa
lret
fnstsw
shl
in
loopne
dec
out
in
call
lds
ss
lock
std
loopne
fstp
std
mov
icebp
ror
fcom
lret
leave
lret
aam
icebp
into
cmp
aas
sarb
fucomip
cmp
enter
mov
mov
jmp
jmp
cld
lock
int
hlt
fdivrp
loop
jmp
into
into
enter
loopne
loope
jmp
iret
cmp
out
ret
cmp
cmp
mov
mov
xor
shr
nop
xchg
enter
out
aas
fmul
sub
cmp
mov
or
nop
fdivr
out
into
sbb
cmc
enter
fdivrl
int3
sarl
in
out
loop
out
out
les
jmp
cli
rcl
aad
sub
fdivr
shl
cld
enter
repnz
jecxz
xor
int
fcomi
int3
out
cmc
icebp
out
repnz
call
mul
int3
fcoms
enter
test
ds
cmp
shr
xchg
xchg
fdivp
repnz
das
cmp
std
enter
filds
std
int
addb
aam
xor
hlt
fstp
cmp
fnstcw
fdivr
loopne
ds
repnz
xchg
fcomp
orl
mov
movzwl
jg
xor
sub
jmp
rcl
rcr
fcmovbe
xlat
ja
inc
mov
fadd
jl
addb
jl
xor
ss
hlt
stc
repz
into
rcl
aas
mov
orb
or
jmp
lret
std
aas
out
cmp
fdivp
repz
shl
leave
int
out
icebp
icebp
int3
filds
ret
std
repz
cmp
fdiv
repz
aad
out
fsin
fmul
fcmovb
cmc
sub
lret
call
cld
idiv
div
sar
roll
call
repnz
lret
clc
cmp
xor
loope
cld
repz
cmpb
xchg
jecxz
rol
aad
in
fcom
bnd
ret
cmp
pop
test
roll
rcr
jmp
aad
aas
sarl
fdecstp
repz
fldl
jmp
enter
cmc
jecxz
lret
test
fcmovne
clc
shr
rcr
adc
mov
mov
xchg
int
loope
jmp
aaa
idivb
hlt
fstpt
roll
out
jecxz
lret
xchg
fld
xor
out
aaa
in
enter
in
std
aam
fsubr
out
cld
ljmp
in
ror
repnz
cld
fmulp
fstp
aas
ffree
vpaddw
loopne
fstp
clc
xor
int3
orb
lret
fcmovbe
lock
ds
cmp
lret
xlat
testl
mul
ret
leave
fpatan
cmp
rol
repnz
rcl
ljmp
into
out
int3
loop
loope
loop
jmp
loope
ljmp
hlt
fisttps
into
xchg
xor
xor
shl
jmp
addb
testb
rol
int
in
cli
aad
stc
iret
lock
shr
cmp
std
stc
fcomp
loopne,pt
fcmove
in
aad
out
lret
shr
iret
clc
das
icebp
test
ljmp
xchg
rcl
sub
fimuls
leave
rcl
jecxz
test
icebp
stc
vlddqu
out
loop
ljmp
shl
ljmp
sti
adc
sar
mov
out
lret
add
icebp
call
xlat
xor
cmp
call
into
cli
clc
fdivr
aam
sti
neg
hlt
clc
orb
fsubrs
loope
cmp
int3
sarb
lret
mov
testb
xor
lock
stc
repnz
fcom
hlt
aad
aad
xlat
xchg
mov
in
fldln2
in
mov
out
jmp
xor
int3
fsub
fnstsw
sarb
shl
loope
loopne
leave
iret
clc
mov
iret
shr
xchg
jecxz
cmp
cmp
clc
call
jmp
fcmovnu
xchg
rorl
iret
lds
ss
enter
fnsave
sarl
into
repz
neg
icebp
and
test
mov
sti
in
jecxz
in
fxch
ss
fcmovnbe
clc
in
call
and
int3
iret
xor
fnstenv
lret
xor
not
aam
jecxz
std
in
adc
sar
xchg
mov
lret
mov
int
out
mov
repnz
ljmp
roll
aas
roll
sti
orl
ret
sub
cmp
faddp
aad
inc
test
adc
ret
filds
lret
loope
shlb
icebp
ljmp
rcl
loopne
rolb
enter
int
std
fiadds
lock
jmp
xor
cmc
fsub
xchg
call
fcmovbe
mov
loope
xor
stc
in
enter
incb
jecxz
aam
ffree
xchg
test
orb
in
aam
repz
fcomp
incb
and
fsubr
xchg
xchg
xchg
ret
out
xor
icebp
out
cli
ljmp
cmp
jmp
into
loop
and
hlt
xlat
jmp
lock
xor
loope
icebp
fmulp
out
sbb
out
orb
fmul
icebp
lock
fcmovnbe
hlt
cmp
in
cld
ljmp
xor
ret
rcl
ljmp
cld
jmp
jmp
rcl
rol
fstp
push
es
enter
add
not
into
testb
hlt
in
aam
std
out
or
loop
iret
xor
icebp
les
lock
fnstsw
fdivrl
xor
shl
loop
xchg
mov
das
shr
aaa
sti
stc
in
aaa
fsubr
aas
rol
fucom
out
incb
in
mov
shr
jmp
xor
in
xor
out
int3
cmp
rcr
aas
cli
rol
enter
in
test
fcoml
stc
ss
sub
lock
int3
fxch
shl
rorl
fsub
cld
clc
repnz
aad
hlt
shr
lret
stc
cmp
cmp
fcomi
roll
clc
fsubr
call
cmp
leave
fmul
fcmovb
cmp
in
cmpb
filds
xchg
das
ret
aam
std
cmp
sarb
xor
lock
mov
cmp
jecxz
xchg
mov
in
cmc
in
sub
ljmp
xor
cmpb
stc
leave
out
xchg
repnz
cmp
leave
leave
aas
lock
stc
jecxz
out
cmc
sti
sar
or
in
cli
mov
in
enter
out
out
fcmovbe
clc
aad
icebp
test
inc
fdivrl
add
cli
testl
in
rcl
imul
call
ds
cmp
hlt
call
rcr
nop
repnz
leave
out
out
imul
cmp
repnz
rol
ljmp
int3
mov
xchg
pop
aad
fadd
aaa
aaa
ss
fyl2x
fabs
fdivr
xlat
jmp
in
out
out
orb
loop
std
repnz
int3
roll
std
fadd
loope
jmp
icebp
ret
loope
hlt
aad
repnz
repnz
fdivp
icebp
fdiv
loop
in
cmp
repz
imul
mov
cmc
mov
aaa
shl
into
jmp
cmp
aas
in
cmc
ret
fsubp
in
fcmovne
icebp
cld
jecxz
hlt
sub
ror
xor
cmp
fstp
div
test
rol
lret
rcr
mov
loop
out
leave
in
lret
rcl
aad
fidivrl
clc
int3
fmulp
clc
aaa
cmc
ds
jmp
cmc
in
in
xchg
xchg
test
lret
cmp
out
int3
test
loopne
cmp
fdivrp
cli
cld
fxch
clc
mov
in
int
out
jmp
leave
jmp
aas
ds
cli
jecxz
in
aam
mov
fistl
incb
aam
fcmovu
in
aaa
fdiv
lock
not
loop
fcom
and
cmp
mov
hlt
shlb
out
test
jmp
icebp
aad
shl
in
shl
clc
fsts
test
jecxz
leave
jmp
out
in
call
out
fcomip
loope
ds
cli
std
in
cli
lret
xchg
lock
call
aas
ds
std
rol
rolb
jecxz
fsubrp
in
int
hlt
rcl
cmp
cmp
repz
cli
ljmp
cld
jecxz
xchg
cld
out
repnz
aad
lock
fcmovnbe
cmp
icebp
xor
int3
std
loope
sti
cmc
int
mov
xchg
repz
int
xor
clc
hlt
call
testb
mul
out
std
lret
int
into
int3
in
lret
jmp
cmp
cli
in
stc
leave
out
cmp
ret
loopne
cmp
in
enter
lret
mov
lret
shl
leave
cmc
cmp
int
cmp
out
iret
icebp
jecxz
mov
loopne
sbb
jmp
std
rcr
into
aad
lock
in
fidivrl
fst
loop
stc
stc
jmp
in
xchg
xchg
int
icebp
rcl
into
out
into
aas
std
rolb
sti
loop
sti
int
mov
xchg
mov
xor
ljmp
ljmp
cli
xchg
in
jmp
int3
loop
in
xor
call
clc
xlat
xor
stc
clc
in
test
xchg
lret
test
mov
fdivp
leave
ret
rcl
xor
clc
cmc
cmp
rolb
mov
addb
not
jmp
iret
lret
repnz
testl
orl
ss
loopne
out
lret
inc
xorl
lea
mov
jmp
mov
lret
fnstenv
addb
iret
jl
addb
jl
and
cmp
and
test
cli
jmp
cmpb
fcmovnbe
in
ffreep
xlat
cld
std
xchg
jmp
repz
cmp
ljmp
repz
shr
hlt
std
rol
in
cli
fdivrp
sti
jmp
push
repnz
shr
sti
clc
test
cmp
aam
jecxz
in
int3
mov
jmp
ret
repz
leave
in
ret
hlt
add
adc
ljmp
ljmp
jmp
shll
int3
in
in
loopne
sti
addl
fisttps
loop
std
jmp
ljmp
rolb
movb
idiv
loope
out
fdivrs
into
repz
repnz
ret
call
out
adcl
stc
ljmp
hlt
hlt
sar
test
out
fsub
fsubr
call
cmc
cld
aad
sti
fdiv
loopne
icebp
out
idivl
test
ror
icebp
out
cmc
in
in
xor
fcmovnbe
call
repnz
fdivrs
std
inc
cli
in
cli
loope
mov
rcr
call
into
in
cmp
lock
fildl
ret
out
cmp
jmp
in
xor
cmp
clc
ret
cmp
enter
fsub
mov
ljmp
stc
xor
idiv
fcmovnbe
jecxz
mov
into
repnz
aad
out
repz
aas
cmp
sar
shl
sbb
or
fmul
in
bnd
divl
in
jmp
out
lock
rcl
shl
in
aad
xchg
in
mov
rol
fxam
cmp
out
cmp
fptan
fcmovne
aam
loopne
aam
jecxz
lock
loop
repnz
call
cmp
lds
out
loope
leave
loopne
loope
jecxz
test
mov
out
rcl
int
vpsubusb
cmp
clc
cld
std
in
out
stc
leave
fucomip
ljmp
out
out
ret
shrb
out
cmp
faddp
adc
sti
mov
sti
dec
ljmp
jecxz
leave
call
enter
ljmp
aam
aam
fsubp
cld
loopne
jmp
out
out
idiv
fcmovb
idivb
aas
cmp
repz
shl
fiadds
out
and
test
xor
aam
xor
ret
fadd
jmp
aam
loop
fcmove
out
fsubp
stc
xor
clc
lret
xor
jmp
in
shl
sar
fst
clc
jecxz
fabs
in
mov
mov
rcr
repnz
aad
fcomi
int3
icebp
repz
out
cli
cmp
sar
jmp
int3
loope
hlt
shl
lock
imul
fcomp
incl
aad
testl
jmp
cmc
in
int3
fdivrp
test
fsub
out
enter
int3
les
cmp
fcos
shr
neg
orb
xor
xor
aaa
int3
fcmove
cmp
ror
in
aam
cmp
aad
ret
int3
ljmp
repz
aam
fdivl
iret
leave
fld
lock
iret
cld
out
std
out
aam
loopne
loope
adc
in
xor
xor
add
jecxz,pt
mov
orl
out
xlat
sar
repz
sti
cld
iret
sar
int
jecxz
fsub
enter
fucomip
popl
into
ret
xor
fcmovnu
repz
out
sti
ret
aam
ret
ljmp
rol
imul
jmp
out
cli
in
leave
fidivrs
int
sar
into
repnz
les
in
int3
lock
jmp
fdivrp
cli
shl
clc
shl
icebp
jecxz
addl
out
repz
xor
int3
sti
cmp
out
cli
jecxz
out
icebp
out
xchg
out
out
enter
shll
fcmovnbe
out
into
cmp
jmp
fsubr
in
cli
xchg
stc
xchg
sub
aad
shl
in
ljmp
rcl
aad
cli
out
in
inc
hlt
cmp
je
mov
jmp
ror
lret
int
loopne
and
outsb
sarl
add
sub
cld
loopne
out
fsubr
out
into
call
repnz
cmc
fdivr
xlat
enter
ds
out
mov
lock
call
fcmove
iret
call
repz
fdivr
xchg
sti
leave
cld
fxch
out
xchg
loope
shr
test
hlt
aas
ss
cli
and
lret
jecxz
int
int
ret
jmp
clc
aad
test
cmp
clc
aad
mov
mov
enter
in
xchg
icebp
jecxz
in
jmp
call
ret
clc
mov
aam
int3
into
lock
lock
int
jmp
icebp
call
imul
shl
enter
jmp
xchg
mov
out
in
hlt
div
aad
roll
clc
enter
jecxz
loope
enter
stc
call
in
cmpb
std
clc
fcmovu
ret
mov
in
ljmp
cmc
jmp
enter
in
adc
testb
iret
mov
nop
out
ljmp
jmp
ljmp
aas
out
call
xchg
cli
sub
rcl
xor
aaa
neg
cmp
int
repnz
fsub
mov
fucomp
fiaddl
jmp
mul
std
clc
hlt
fldl
test
cmc
in
fucom
fucomi
orb
aad
std
repz
ds
cmp
lret
leave
out
in
dec
test
rol
cmp
lock
xlat
aas
repz
loop
ret
cmp
adc
xchg
lea
shl
in
cmp
ljmp
in
rcr
ds
loopne
idiv
xchg
iret
in
rorl
cli
clc
int
jmp
out
cmc
incb
out
cli
rolb
ret
xor
ror
aaa
cmp
loopne
fucomp
mov
sub
cmp
jmp
rcl
out
repnz
loope
icebp
lock
bnd
iret
push
out
out
iret
xchg
leave
jmp
icebp
ror
call
test
aas
cld
hlt
out
mov
enter
mov
xlat
lret
aam
out
frndint
aam
icebp
ds
sbb
clc
clc
in
movl
ljmp
int3
repnz
cmpl
fsubp
lock
out
vpaddusw
fbstp
aas
sarb
into
cmp
out
cmc
testl
ljmp
sti
cli
into
lock
cld
cmpl
hlt
out
ret
leave
clc
fsubp
int
fsub
icebp
into
int
jecxz
ret
std
lock
cmp
in
filds
fsubr
in
fiaddl
cmp
lock
cld
in
xor
fdiv
repnz
jmp
repz
ret
out
std
enter
lret
cmp
cli
jecxz
idiv
jmp
fcom
jecxz
ret
div
rcl
iret
xor
fcomip
loope
cld
in
in
jmp
ljmp
in
lock
icebp
lret
lock
ret
fcmovb
test
fndisi(8087
lret
out
std
fucom
fimuls
cli
repz
stc
xor
cmp
sarb
and
in
xchg
fdivr
int
repz
xor
imull
fsubr
fdivrp
not
and
sti
enter
xchg
xchg
lret
out
aam
cmp
lock
fcmovnbe
testb
lock
cli
not
sti
xchg
lock
cld
xchg
cld
test
int
xor
aad
ror
iret
div
icebp
hlt
call
loop
icebp
mov
adc
out
rol
int3
aaa
in
fcmove
out
ds
fcom
sti
ret
cli
div
repnz
xchg
sbb
call
cmc
sti
lret
imul
int
cmc
div
idivb
mov
call
add
lret
fdivr
out
leave
xlat
jmp
loop
clc
stc
lret
out
fnstsw
xchg
aam
ljmp
imul
aam
and
fsubp
idiv
mov
add
xor
add
jmp
ret
lret
enter
dec
outsl
sti
pop
mov
jl
addb
jl
leave
and
ljmp
rcr
sarl
int
out
std
fdivrs
loopne
xlat
xchg
fcmovnbe
loope
out
in
out
div
out
enter
ljmp
in
neg
in
sar
ljmp
roll
stc
xor
repz
xlat
out
ljmp
cli
cld
jecxz
aam
inc
addl
cmc
cmp
out
stc
aam
ss
idivl
into
icebp
add
mov
neg
rcr
adcl
int
aam
jmp
in
cli
in
fmul
fiadds
mov
ss
jmp
cmp
fdivrl
xlat
iret
and
std
flds
testl
jmp
in
int3
aad
cmc
sub
fdivr
xchg
cmc
xchg
cld
in
xchg
enter
loopne
in
icebp
xor
std
faddl
xchg
hlt
jmp
loopne
jmp
int3
sti
rcr
into
rol
in
sub
cmc
fyl2xp1
clc
cmp
ret
cmp
lock
decl
and
in
in
nop
xchg
xor
in
cmc
ljmp
cli
sar
std
aam
rol
loope
fmul
lock
out
in
imul
xor
int3
fmul
xor
add
iret
add
lock
mov
repz
int
repnz
call
cmp
aam
testl
iret
lret
xchg
icebp
jmp
int
jmp
repz
fiadds
fdivr
shl
ret
call
in
cli
xchg
xchg
shl
out
in
cmc
cmp
jmp
lret
repz
fsub
in
clc
call
xor
ljmp
lret
out
in
cld
roll
jmp
testb
shr
xor
xor
ror
fucomip
jmp
out
ss
out
out
ljmp
ljmp
xor
out
in
fincstp
cmp
hlt
iret
jecxz
xchg
in
repnz
loop
repz
xor
in
ffreep
and
fcmovu
jmp
loope
lret
mov
mov
out
stc
loope
test
iret
out
cmp
div
aad
movl
mov
cmc
xor
lret
iret
out
icebp
cmp
fcmovnu
sarl
loope
aad
std
mov
out
mov
inc
aaa
div
jecxz
leave
fstpt
not
stc
rcl
in
cli
cmc
add
enter
leave
test
out
int
aad
aam
fdivl
idiv
loopne
rcl
incl
sar
loop
cli
leave
loopne
repz
xor
out
iret
cmp
lock
fcmovb
ds
cmp
repnz
in
xchg
xchg
int3
ljmp
shr
in
sti
loop
loope
jecxz
fndisi(8087
enter
rcr
jmp
aam
cmp
cmp
mul
rcl
std
add
out
mov
into
rcll
shr
lret
jmp
rcr
fdivrp
cmp
leave
out
xchg
cld
mov
rol
cmc
cmp
cmp
fsubrp
shl
clc
fdivrl
out
mov
and
in
out
out
sub
xchg
in
rcl
repnz
div
sbb
rcl
mov
repnz
fsubr
out
loop
call
xor
cmp
aaa
xor
idivl
cmc
ror
fsubp
mov
xchg
ljmp
jmp
cmc
lock
cmp
cmp
loope
repnz
aam
dec
out
jmp
xchg
xor
out
xor
out
enter
cmp
cli
sti
aam
fsub
fsub
fdivr
mov
xchg
out
loopne
iret
int
xor
sti
out
test
fnstsw
neg
std
ror
test
enter
fiaddl
shr
leave
fdivrs
in
xor
aad
loopne
fiadds
fcomp
clc
sti
enter
fdivp
sub
leave
cmp
dec
shl
filds
enter
enter
loope
inc
repnz
sti
xor
aaa
shl
cmp
mov
std
sti
fiadds
mov
xchg
repnz
jmp
cmp
std
in
xor
cmp
into
rol
test
call
or
sahf
add
add
rcl
aad
lret
enter
or
mov
addb
jl
jmp
jecxz
loopne
rcr
cmp
out
lret
cmp
cmp
fsub
cld
xchg
std
out
ror
decl
enter
fcmovne
cli
hlt
in
mul
aam
loope
ret
faddl
iret
loop
jmp
fcomi
rcr
fdiv
cmp
aad
cmp
lock
in
xabort
mov
mov
out
sub
icebp
ret
cmp
cmp
cli
sarl
fdivp
jecxz
repnz
in
xchg
in
xchg
ljmp
lret
fcmovnu
repz
repnz
cmp
in
sti
ljmp
aam
jmp
xor
cmp
iret
aam
std
cmp
loope
jmp
clc
aam
into
fstp
in
lret
jmp
repnz
stc
enter
or
ret
test
orl
mov
xchg
in
out
icebp
jmp
in
out
clc
neg
cmp
shl
fadd
aad
ret
decl
shl
loop
int
rcr
in
jmp
fsubrp
ror
cld
loopne
in
test
xchg
fdiv
xchg
sub
out
fadd
out
out
out
cmc
aad
hlt
cmc
hlt
ret
roll
les
fmuls
jmp
hlt
aaa
imul
ret
sti
out
int3
rol
roll
fldlg2
test
out
rorb
in
fcmove
out
cmp
repnz
decb
out
xchg
lret
imul
aam
stc
int
repnz
fcomp
hlt
loop,pt
clc
ror
jmp
in
decb
div
cli
out
icebp
out
std
jmp
rcl
in
sbb
int3
xchg
nop
test
enter
shl
int
not
cmp
xlat
ret
loop
in
mov
lret
clc
xor
call
sar
ret
out
loopne
inc
mov
clc
mov
ljmp
cmp
clc
imul
idiv
xlat
xor
out
ror
testb
ror
fmulp
out
lock
out
std
leave
xor
xor
out
fiadds
std
les
push
in
sub
vcvtdq2pd
cmp
sar
test
cli
test
flds
ljmp
hlt
xor
cmp
hlt
lret
div
lock
lock
fcmovnbe
loopne
stc
and
fsubp
cmc
out
repz
lret
jmp
xlat
rolb
fucom
lea
ljmp
sti
in
enter
shr
test
fcomi
faddl
mov
out
dec
xchg
cmc
into
xor
aaa
sti
shll
aaa
icebp
cld
cmp
ror
loopne
clc
repnz
cli
test
int
mov
aad
out
jecxz
out
repnz
xor
out
into
loop
fiadds
mov
jmp
out
jecxz
lret
ds
xor
sarl
clc
ds
repz
in
fstpt
aam
add
fdiv
int3
in
lock
rcl
in
cs
divl
cmp
jmp
fnop
xor
out
cmp
aas
out
iret
mov
icebp
sub
jmp
shl
jmp
aam
in
addb
neg
fcmovne
mov
out
in
in
xlat
loope
enter
rcl
aas
cli
adc
loope
in
fcoms
out
xor
aaa
loop
in
cmp
loop
loop
cmp
loope
mov
popl
out
xor
int3
fdivrs
cmp
cli
in
mov
in
neg
mov
loop
repnz
loop,pt
xor
xor
leave
clc
fadds
cmp
out
jmp
in
fxch
out
fmull
xor
xor
clc
icebp
out
loop
ret
sti
hlt
sti
call
pop
out
fmull
out
cmp
int
lret
in
loope
cmp
fdiv
and
sti
imul
mov
fimuls
into
xor
shl
fprem1
out
stc
aad
sarb
repz
enter
in
adcl
div
into
cli
aaa
fcom
cmp
aas
rcr
repz
pause
shl
fsub
aad
aad
xor
in
xor
fscale
or
sbb
loope
bnd
orl
mov
xor
add
jmp
rol
rcr
jbe
and
jge
and
jl
add
aad
xor
jmp
into
cmc
faddp
ret
aad
test
mov
out
in
loope
fcoml
int3
sub
jmp
int
lret
testl
addl
int3
cld
fadd
icebp
xlat
into
lret
lock
not
int
cmp
shl
inc
jecxz
jecxz
shl
aaa
int
int3
cmp
aam
cmp
cmpl
jmp
int3
in
rcr
repz
dec
shl
ljmp
ljmp
hlt
ljmp
out
in
call
cmc
repz
rcr
aam
xlat
jmp
sub
and
int
loopne
fidivl
div
call
out
cmp
flds
enter
test
iret
nop
cld
loopne
enter
div
leave
aas
enter
out
cmp
xor
not
mov
icebp
in
leave
mov
std
xchg
sub
stc
in
ss
jmp
fsub
fcomi
frndint
cmp
fmulp
out
std
in
std
out
sub
in
hlt
idiv
leave
neg
cmp
fadd
in
fcmovnbe
loopne
rolb
into
out
xchg
int3
call
aam
out
cmp
aad
incb
mov
out
fmulp
sbb
out
shrb
xor
cmp
int3
rcl
cmp
out
mov
fcmovb
mov
loop
cs
aad
rcl
in
ds
cld
in
aad
enter
in
out
out
out
mov
shl
lock
jmp
mul
shl
addb
xchg
int
icebp
orl
lret
out
in
in
xor
int3
icebp
fcmovbe
test
in
std
jecxz
enter
out
or
ljmp
xor
xor
enter
loop
aam
aam
fisttps
iret
repz
fidivs
ss
aaa
xlat
aad
out
shl
fmul
ljmp
into
iret
cmp
int
enter
aad
aad
cmp
cmp
cmpl
shr
repz
mov
lock
clc
lock
test
test
fadd
repnz
in
in
jmp
xchg
lret
xor
jecxz
test
cld
jmp
jecxz
decl
enter
sar
call
cmp
xlat
repnz
loopne
loope
jmp
shr
int
jmp
lds
fcmovu
sarl
lock
in
xchg
out
jmp
out
cmc
repnz
out
xor
into
aad
fcom
stc
aad
fsincos
test
xchg
in
out
xchg
int3
repz
div
shl
ret
cmc
in
aam
sbb
lret
int
loopne
xor
lock
jmp
hlt
ljmp
cld
fucom
cmp
stc
cmp
mov
mov
mov
xchg
sub
out
out
repz
xor
xlat
repz
lds
hlt
in
fsubr
jecxz
lea
leave
cmc
clc
aad
xlat
cmp
aas
fnop
test
shl
jmp
in
jecxz
fldl
repnz
lret
sar
fcomi
cmp
xor
shl
testl
fildl
int
loop
repnz
idiv
shr
stc
aad
call
inc
enter
cmp
not
icebp
ss
rol
hlt
into
int3
loop
fcmovnb
out
mov
cli
fsub
enter
call
jmp
jecxz
lock
test
test
and
out
sti
loop
loope
xor
stc
call
into
repnz
loopne
shl
mov
in
loopne
xchg
xchg
fdiv
icebp
jecxz
stc
hlt
out
sti
xor
lret
loope
adc
rol
test
in
out
lret
fst
fmul
sub
les
out
cli
lret
sarb
cmpl
lock
jecxz
jmp
cld
out
jecxz
roll
aam
not
lret
lret
rcl
jmp
inc
aad
mov
call
loope
and
sub
cmp
icebp
call
cmp
roll
out
iret
leave
loope
iret
fsub
out
rol
loopne
leave
lret
cmpl
cmp
add
clc
mov
mov
lea
add
jmp
mov
fcmovnu
jnp
clc
mov
ds
inc
push
in
jl
add
cli
in
repnz
fucom
out
xor
mov
hlt
in
lret
jmp
out
xor
std
cmp
aam
aas
rcl
adc
xchg
lock
aam
aam
out
cli
fsubrp
ret
ds
shl
xchg
loopne
repnz
mov
das
aam
ss
rcr
neg
rcr
inc
aas
repz
vcvtdq2pd
out
in
nop
loope
repnz
iret
xor
not
aad
int3
dec
loope
std
in
in
in
lock
incb
cli
repnz
fdivp
out
sub
in
sarb
repz
loopne
xchg
in
out
std
and
shl
out
sar
lock
lret
stc
fmul
repz
fcmovbe
add
shl
sbb
std
mov
xchg
fnstsw
rcr
lret
rcl
fcmovnb
int3
shl
ret
les
xlat
out
nop
icebp
fucomip
sub
sub
shr
in
ss
aam
int3
aad
ret
aas
cmc
shl
sar
jmp
loop
orl
ljmp
into
out
xor
ror
orb
fucomi
lret
cli
lret
out
shll
idiv
xor
ss
xor
mov
cld
loopne
test
ljmp
sub
xor
fstp
repnz
fcmove
loope
loope
std
mov
test
lea
xor
out
rol
aas
fldl
aad
jecxz
enter
cli
sbb
int
loop
sti
cmp
jmp
iret
xor
lret
mul
fildl
std
call
enter
aas
out
leave
shr
ret
ss
rcl
fst
cmp
rol
leave
fildl
jmp
cs
aam
into
clc
divl
cmp
jecxz
fld
xlat
neg
fcom
out
cmp
leave
enter
xor
cs
xlat
cmp
int3
xlat
hlt
cmp
lock
test
in
enter
in
xchg
into
xor
lock
iret
rcr
fcomip
sti
rolb
rcl
ljmp
out
xchg
lret
shlb
leave
jecxz
sti
rcl
cld
out
jmp
cmp
mov
fidivs
out
mul
out
xor
jecxz
loope
shl
in
mov
call
sbb
cmc
ret
shl
leave
cli
std
call
sarb
sarl
cld
rcr
test
xlat
ljmp
repz
lret
into
shr
int3
hlt
idiv
fcmovnu
in
aad
into
rcl
fildl
adcl
xor
sti
fcmovne
xor
clc
in
cli
test
cmc
shl
testl
xchg
fcomip
stc
shlb
out
leave
cmp
call
div
test
ror
sti
mov
xchg
int
int3
in
fld
cmp
lret
xlat
xor
hlt
shl
out
jecxz
lds
xchg
ret
xor
xor
cmp
ljmp
xor
testl
mov
ret
loopne
cmp
div
cli
lret
flds
xabort
icebp
orl
ret
sar
into
les
int
fsub
shr
fsubp
repnz
loop
out
in
shl
iret
shl
hlt
in
fnstsw
cmp
cli
in
adc
les
std
loope
leave
xchg
jmp
xlat
out
cmp
in
aad
int3
shl
cmpb
fucomip
jecxz
jmp
out
jmp
cmp
xor
loope
mul
in
ret
rol
mov
mov
repnz
stc
out
out
sar
xor
std
lock
aam
out
testb
rcl
shl
xor
cmp
cli
std
shl
and
fdivr
xchg
loopne
mov
cmp
aaa
lock
leave
int3
loopne
ds
aas
sbb
fld
in
lret
shr
in
ret
aam
icebp
in
out
fcmovne
div
cmpb
test
out
in
xchg
call
loop
cmp
aam
in
iret
cmp
aam
loope
test
mov
enter
xchg
icebp
int3
repz
in
clc
out
lret
in
dec
repz
jmp
int
xlat
int3
int
cmc
or
test
inc
add
jl
loopne
sti
rcr
enter
sti
mov
lds
cli
int3
cmp
movl
in
lret
shr
in
ret
ss
repnz
out
xor
stc
sarb
flds
mov
loopne
lock
jmp
lock
lret
lret
test
shr
lret
rcr
xchg
jecxz
in
in
fmul
ss
in
div
stc
sti
repz
ret
cmc
lret
inc
int
fists
hlt
ljmp
cmp
ljmp
repz
clc
ret
sti
in
cli
iret
aad
sub
shl
ss
shl
fdivr
jecxz
repz
out
leave
std
sub
shl
out
cmp
cmc
stc
in
ljmp
fadd
inc
shl
cld
sar
icebp
nop
rcl
xlat
fxam
out
cmp
aaa
cmp
sar
jecxz
mov
leave
cli
mov
stc
in
adcl
cs
std
lret
cmp
test
clc
xchg
sar
iret
orl
jmp
clc
neg
cmc
int3
repnz
test
loope
clc
in
lret
xchg
xor
out
xor
hlt
xor
xlat
jmp
shl
into
jecxz,pt
xabort
incl
loopne
jmp
shr
out
in
hlt
cmp
fstp
lret
cmp
clc
adc
cli
ret
lret
xchg
fucom
loopne
mov
xor
leave
xlat
fadd
sarb
sti
ljmp
fdivp
cmc
xchg
clc
or
cld
ljmp
repnz
fdiv
aam
aad
fsubp
ret
mul
addb
loope
jecxz
in
ss
repz
int
lret
sub
cmc
hlt
repz
test
fsubrp
xor
jmp
xlat
jecxz
rcr
shll
xlat
in
rcr
in
fiaddl
cmc
fldl2t
sbb
mov
orb
call
rcl
int3
ret
repz
test
fcmove
out
clc
in
ljmp
leave
out
int3
fucomi
fcomi
lock
fadds
clc
in
out
rorl
aad
out
jmp
cmp
aad
clc
orl
stc
fcoms
loop
in
leave
int
aaa
div
shr
sbb
hlt
mov
loop
out
shr
in
xchg
mov
aam
repnz
int3
loopne
cmp
not
loopne
hlt
shl
jmp
les
mov
hlt
repz
fildl
in
xlat
fcomi
test
lret
in
leave
call
jmp
in
out
hlt
stc
jmp
sarb
test
ffreep
fxam
fcmovnu
icebp
ljmp
icebp
out
jmp
iret
adc
rol
test
aad
fcomp
cli
into
loopne
lret
addb
ret
int
cmp
aas
xor
test
hlt
sar
jmp
loopne
fiadds
shr
xor
iret
cmp
lret
ret
out
fsincos
cmp
adc
int
jmp
into
out
out
test
cmp
cmp
cld
int
fprem1
neg
jecxz
fst
test
mov
out
xchg
xor
in
xor
cmp
call
in
in
repz
aad
fiadds
out
jmp
iret
repnz
aad
cli
in
aam
cmp
aam
fst
int3
in
sbb
fucomip
lea
mov
ror
lds
aad
leave
cld
aad
out
and
fiaddl
mov
or
loopne
jmp
div
out
cmp
cmpb
add
sti
ffree
mov
in
adcl
lret
cmp
aaa
out
cmp
out
ljmp
test
loope
loope
sub
sub
ror
jecxz
incl
faddl
in
repz
test
vcvttss2si
cmp
loope
xlat
rcr
cmp
sti
loop
jecxz
mov
lret
test
cmc
in
ss
ss
rcl
iret
roll
fdivrp
into
fsubr
fiadds
rcl
lret
ror
fadds
sbb
lea
mov
mov
xor
add
mov
mov
mov
xor
jmp
leave
aam
fld
fpatan
cwtl
jp
push
les
adc
jl
addb
jl
inc
shl
mov
call
sub
cs
fdivrp
cmp
fistpll
xchg
loop
in
repz
in
out
call
idiv
cmp
aad
hlt
ftst
mov
or
repnz
xor
cli
repz
lock
cli
cmp
lock
shl
rol
in
cli
jecxz
mov
in
xchg
test
shr
ret
fsub
lock
out
in
loop
cli
out
into
lret
repnz
shr
hlt
shr
lret
shr
xor
xor
rcl
out
fcmovnb
jecxz
int
icebp
mov
in
aaa
icebp
xlat
lock
lret
lock
aad
aad
rcl
fiaddl
inc
in
int3
int3
aam
in
leave
in
jmp
into
testb
out
enter
jmp
test
aad
fsubrp
aam
xor
cmp
or
sarb
cmp
test
decl
lret
aaa
lret
cs
xor
xor
rcl
cmp
lret
iret
out
mov
out
ror
out
cli
rcl
hlt
in
cmp
out
repz
fmuls
int
out
sub
cmc
in
leave
not
into
fdivrs
loope
rolb
call
repnz
out
cmp
sti
out
sar
repnz
fnsave
into
fidivrs
jmp
xlat
out
jmp
roll
cs
std
cmp
test
shl
ljmp
enter
xchg
xor
leave
vpslld
icebp
div
shl
clc
cmc
out
inc
xchg
aad
ljmp
cld
loop
out
ljmp
aaa
sar
sbb
repnz
xchg
fcmovnu
out
test
std
sar
sarb
out
in
aaa
xor
shl
cmp
imul
xlat
out
stc
lock
addl
xchg
in
fucomip
repnz
xor
enter
int3
shl
out
cmp
sar
hlt
filds
cld
mov
sub
rcl
enter
out
cmp
xlat
aaa
loopne
idivb
loop
fucomip
int
iret
mov
call
xor
cli
idivb
out
not
cli
mov
xchg
xor
cld
mul
std
repnz
fprem
lret
jmp
lock
xor
int3
jmp
stc
aam
roll
cmc
cli
nop
xchg
loop
test
aam
sub
fnsave
xor
stc
lock
mov
lret
in
xor
das
in
xabort
xlat
test
fdivr
xlat
loop
jmp
ret
jecxz
lret
fsubr
mov
in
lock
aam
int3
in
sbb
cli
faddl
nop
out
out
jmp
hlt
leave
stc
xor
cmp
loope
fimuls
frndint
jecxz
cld
mov
in
jmp
jecxz
lret
lret
out
out
ret
cmc
loope
ljmp
int3
mov
out
imul
ror
cmc
in
enter
aad
sar
shl
rcl
rcl
test
fucom
faddl
out
sti
in
jmp
cmp
in
xchg
cmc
addl
fidivs
imulb
iret
in
leave
neg
leave
std
fcmovnu
cmp
out
loope
out
sub
int3
call
sar
out
sbb
lock
not
test
loope
jmp
icebp
and
shl
iret
out
sar
aad
cld
fdivr
icebp
xlat
repnz
mov
mov
testl
into
int
loopne
into
cmp
cld
rcr
ss
std
in
sti
shl
cmp
fcomip
test
jecxz
repz
out
icebp
out
repz
sbb
lds
stc
std
add
fsubr
out
loope
xor
sarl
out
repz
aas
repnz
int3
jecxz
shr
cld
in
xchg
iret
call
test
xchg
in
iret
imul
clc
out
das
ss
shl
ds
hlt
rorb
lret
out
loop
xchg
shll
shr
repnz
out
rolb
test
repnz
xchg
mov
jmp
ror
int
fcmove
mov
push
pop
stos
stc
rcrb
add
test
iret
into
fsubrp
ds
loop
jecxz
stc
bnd
loopne
call
jmp
xchg
cld
imull
sub
loop
jmp
ss
cmp
sar
fsub
enter
xlat
mov
call
ljmp
icebp
shl
ljmp
test
rolb
enter
fcomip
int
sti
rcl
into
rcr
icebp
sti
std
xor
lds
mov
fld
shr
stc
cs
call
repz
std
xchg
enter
clc
out
jmp
shl
int
ffree
ljmp
out
loope
mov
loope
in
ret
xchg
xor
clc
iret
ss
out
rcr
cld
rcr
cmp
cmc
enter
iret
out
xchg
int
lret
aad
hlt
int3
shr
aas
rol
idiv
xchg
stc
jmp
test
shll
ret
vpsllq
cmc
lret
jecxz
iret
fst
std
or
xlat
aam
fsubrp
fmull
cmc
fdivrp
shlb
out
repz
fnstenv
out
fstp
cld
loop
fprem1
loopne
in
stc
clc
mov
mov
aad
jmp
jmp
repz
sar
clc
test
not
xchg
lea
lret
rcr
leave
das
out
fiadds
lock
xlat
aad
in
mov
fsubr
lret
cmp
in
in
fdivrp
std
mov
int
jmp
out
lret
stc
out
xlat
cmc
xor
lret
lret
sar
in
repnz
aam
test
adcl
cld
sar
lret
std
aas
sti
into
fsincos
sarb
jmp
clc
jecxz
mov
iret
addl
fdecstp
shr
cmc
loope
cmp
xchg
ror
fisttpll
in
dec
cmc
leave
ret
cmp
int3
fnstenv
xlat
ror
test
fiaddl
xor
in
out
int
out
fdecstp
in
cli
ljmp
cmc
addb
out
repnz
in
in
leave
vpmuludq
fsubr
ret
sbb
leave
hlt
stc
leave
out
test
xor
rcl
call
icebp
int3
cmp
ret
aad
xchg
lret
mov
ljmp
shrb
fsubr
repnz
fdiv
std
stc
cmc
in
ret
lea
test
stc
mov
cmp
call
ss
xor
ds
into
ror
leave
aam
in
fdivr
jmp
fldl
rol
cmp
stc
fcomi
sbb
in
ljmp
ljmp
xor
out
cli
xor
idivl
stc
rcr
cmp
mov
cmc
decl
xor
mul
lret
aaa
cmp
std
iret
ds
in
in
jmp
cld
cli
iret
xchg
int3
cs
call
int
cmp
sbb
jecxz
enter
clc
out
rcll
xor
fxch
int
iret
sti
cmc
cmp
int
ds
stc
fcmovu
in
test
out
out
mov
in
ror
cmp
sar
std
cmp
aas
in
aad
fsubr
fsubp
in
fsub
sbb
mov
cmp
cli
aaa
rcl
cmp
shl
cmp
xlat
addl
hlt
div
jmp
out
in
xor
repnz
cmc
fstp
filds
cmc
jmp
ret
sbb
xchg
jmp
cmp
divl
roll
stc
fildl
lds
xchg
fdiv
into
fadd
shr
in
ss
cld
xor
stc
mov
mov
out
in
xor
ss
cmc
cmp
cmp
addl
mov
mov
iret
in
cmp
cld
icebp
out
lret
cmp
aad
clc
sub
test
xor
ror
aad
lock
clc
sti
shr
fcmovnu
out
aas
inc
aad
test
out
ret
in
nop
xchg
xchg
iret
sub
repz
std
xlat
xor
int3
int
ret
stc
sti
fimuls
test
xchg
lock
cmp
je
mov
jmp
xlat
ror
ror
xlat
fisttpl
lock
adcb
addb
jl
std
xor
out
cmp
icebp
stc
shr
fcomi
loope
stc
loop
xchg
cli
out
shr
fmulp
xlat
xor
ljmp
sarb
hlt
in
xchg
mov
stc
fdivr
call
iret
inc
jmp
cli
out
ffreep
cmp
jecxz
iret
add
test
mov
in
sub
call
leave
shl
clc
fdiv
repz
iret
fcomp
mov
cmp
xchg
ds
ret
aam
rcl
ss
int
test
out
idivb
cld
jmp
jmp
int3
xchg
loop
xor
lret
cmc
xlat
std
cmp
ljmp
push
movl
in
hlt
enter
in
int3
cld
into
cmp
icebp
in
in
in
fsub
in
out
cli
and
in
icebp
sub
ret
aad
stc
div
rcr
repz
xlat
leave
mov
jmp
test
hlt
xor
int
hlt
out
hlt
xor
out
cli
ret
in
aad
ret
testl
mov
out
fnstenv
aaa
aad
rol
jmp
cmp
cmp
icebp
addb
lock
mov
jmp
in
neg
cld
sar
fdivr
icebp
shl
into
out
cmp
mov
loop
shrb
out
in
ffreep
into
cld
rcr
and
fxam
and
stc
stc
fiaddl
xlat
xor
in
cmp
in
ror
fstp
push
iret
iret
adc
cli
cld
cmc
jecxz
fsubrp
test
out
addb
cmc
aaa
std
xor
call
fsub
ds
loope
iret
lret
shr
in
push
into
shl
idiv
aaa
cmp
jmp
std
stc
cmp
cmp
add
ffreep
fmuls
repz
out
xor
ljmp
aam
cld
loopne
icebp
in
repz
hlt
mov
out
fdiv
mov
out
aaa
cmc
lret
shll
cmp
sti
addb
test
test
call
int
aam
call
fsubp
xlat
cmp
loop
in
repnz
sub
lret
fucomp
iret
stc
out
int3
out
rcr
in
aad
xchg
ljmp
into
test
lret
lock
xor
int
sti
out
fdiv
cmpl
cmp
cli
cmp
stc
cli
call
out
jmp
imull
shr
shl
cmc
jmp
into
adc
sti
inc
ret
aad
out
jmp
mov
cmc
xor
jmp
cmp
loopne
in
ret
fsubrp
in
fisttpll
sub
int
cmc
rcl
cmp
std
repz
aam
faddl
test
loope
call
mov
call
in
call
aam
cmpl
addl
mov
xchg
xchg
sub
leave
out
into
cmp
aad
into
aad
cmp
orl
sar
out
out
sub
cmp
ds
fcom
out
cmp
out
clc
call
jmp
xchg
test
xor
enter
out
out
cmp
fcmovne
rcr
mov
fmulp
loopne
and
xchg
repnz
into
in
std
lret
cmp
repz
iret
xchg
cli
cmc
loopne
stc
push
loopne
ljmp
in
repnz
out
cmp
fldln2
sbb
cli
idiv
loope
cmc
shr
aam
loop
fsubr
mov
loop
jmp
lret
hlt
xlat
xor
xlat
hlt
sti
imul
cmc
repz
in
ljmp
in
loopne
cmc
loop
lret
fmul
fnstsw
fst
fst
sbb
ret
fsub
into
rorb
in
repnz
rcl
cmp
cmp
aam
xlat
test
jmp
aad
fdecstp
stc
lret
mov
xchg
hlt
test
cmp
idivl
icebp
icebp
rolb
mov
ljmp
repz
int3
lret
cmp
cmp
repnz
sti
fidivrs
enter
iret
mov
hlt
mov
xor
out
lret
in
repz
enter
out
repnz
xchg
in
stc
into
xchg
enter
not
aam
cmp
and
mov
int
aad
repz
ret
mov
add
mov
jmp
leave
iret
xlat
rcr
flds
cwtl
pop
dec
fbstp
jl
addb
jl
xor
imul
shr
repnz
xchg
fcoms
mov
aad
xlat
out
rcl
cmp
sar
test
leave
jmp
ret
out
xchg
aam
xor
int
out
fdivp
cld
int
rcr
jmp
ljmp
jmp
into
sub
jmp
std
lret
lock
and
rol
loop
incb
mov
xor
fnstenv
cli
ss
sbb
loope
mov
call
test
xor
call
out
cmp
rcl
aad
clc
xchg
dec
lret
ljmp
sub
shr
cmp
out
fidivrl
clc
sti
loop
or
loope
int
call
orl
idivl
out
fistpll
cmp
ljmp
leave
mov
fsub
mov
out
loop
les
aam
call
leave
dec
in
aas
fcom
fucomp
fsubp
out
into
mov
xchg
jmp
lret
repz
rcr
shl
int
in
fcmovnbe
cld
jmp
rorl
lret
xor
int3
lock
imul
cmp
test
loope
movb
testb
shrb
repz
jmp
ljmp
ds
clc
pop
in
xchg
in
addl
ret
fmul
fcom
inc
cld
aas
lock
enter
into
clc
incb
call
in
lock
in
cld
repz
fcmovnu
out
in
mov
sti
in
mov
fsub
in
into
xchg
xchg
fucomip
xor
ror
fcmove
fstp
adc
loopne
cld
clc
sti
enter
loop
out
in
in
fldln2
out
iret
fcmovnb
jmp
icebp
ret
loop
test
mov
jmp
std
xorb
fcmovnu
call
std
repnz
ret
aad
fdivrp
jmp
cld
call
loope
xchg
xchg
cmc
icebp
vpmovzxbd
int
out
cmp
jmp
xlat
repz
out
stc
ret
imul
lock
fldl
loopne
fsubrs
push
cmp
ror
out
fst
out
mov
out
cli
xchg
jecxz
repnz
mov
lret
aam
jmp
aam
sbb
sarl
fsubp
aad
aad
mov
sti
jecxz
ret
sti
mov
repnz
enter
sub
fcmovne
fdiv
fstp
aad
shl
testl
cmc
loopne
repnz
repz
lret
xlat
repnz
iret
hlt
rcl
sar
lret
xchg
mov
xlat
stc
ret
in
shr
shl
repnz
aad
cmc
cmp
fld1
in
out
clc
loope
cld
fldl
loopne
les
cld
iret
fstpt
fcmovnb
adc
idivb
clc
in
aas
loope
iret
mov
out
vpsubb
lock
loop
aas
clc
ret
clc
std
adc
in
jecxz
std
adcb
stc
cmp
cli
sbb
out
fdivrs
addl
int3
jmp
sub
call
aam
lret
cld
lock
rcl
fmull
orl
clc
shl
cmp
rcr
stc
xchg
leave
aad
cmp
into
sbb
lret
loope
xor
ljmp
aam
cld
in
leave
shl
loope
into
xchg
call
out
iret
vpaddsb
cmp
fsubr
test
mov
loope
icebp
rcr
out
loope
divl
into
into
cmp
enter
cli
sti
rcl
ret
add
mov
jmp
in
out
lret
lret
shl
cmc
fucomi
fdivrp
out
out
shr
leave
clc
int
int
icebp
out
xchg
imul
ljmp
sar
cmp
aas
test
and
add
enter
out
iret
into
shl
aaa
das
into
loop
sub
int3
rolb
in
xlat
flds
in
jmp
out
in
ljmp
cmp
sarb
aad
idiv
cmp
jecxz
sub
loop
test
xchg
xor
xlat
sub
adc
aas
imul
cld
call
in
fmulp
roll
neg
lret
ljmp
loopne
sahf
add
add
leave
int
int
int
mov
aam
fmull
addb
jl
out
roll
jmp
ljmp
out
mov
aam
lock
repz
mov
aad
in
int
lret
fsubp
lret
fsubrp
in
ss
fnstenv
xor
xlat
leave
ss
cmp
xlat
roll
addl
aad
fcmovnbe
dec
enter
aad
iret
test
cld
xor
in
test
out
repz
xchg
loopne
loopne
fstpt
ss
cmp
std
xor
mov
mov
loop
vcomisd
xor
int3
xor
in
clc
repnz
orl
xchg
fiadds
ss
out
call
cmp
fincstp
mov
stc
orl
out
iret
iret
sar
clc
cmp
lret
ret
test
fcmovb
test
fucomp
ljmp
in
out
loop
fdivrl
ss
or
into
out
clc
fsub
out
mov
mov
std
std
rorl
cli
not
fcomp
xor
iret
out
int3
loop
cmp
fcmovnu
jecxz
addl
call
test
xor
shl
incl
sti
fstp
shr
int3
lea
jmp
sti
xor
lret
aad
cmc
in
loopne
std
leave
xchg
stc
aam
mov
lock
jecxz
out
fistpll
aaa
lock
int
sar
aam
and
cli
dec
mov
xchg
push
in
idivb
cmp
xor
cmp
shl
push
cld
jmp
mov
in
fsub
ljmp
clc
lret
cmp
out
cmc
fcomi
ljmp
rorb
cld
repz
out
loop
in
aam
xor
std
xlat
iret
sti
div
aam
call
out
out
jmp
ljmp
enter
stc
cmp
testb
ret
in
orl
xor
cmp
in
sti
fdecstp
shl
hlt
fstp
lret
faddl
std
fsubp
cmp
xor
iret
out
out
cli
loopne
ret
stc
les
test
ror
call
out
out
ror
xor
rcl
cmp
icebp
loopne
cmp
repnz
sti
ljmp
sub
out
fxch
lock
repnz
hlt
xchg
ljmp
fisttps
ds
out
cli
repz
fdivr
aad
cmp
shl
in
fcmovb
call
mov
neg
icebp
int
cmp
fdiv
aas
aas
rcr
ret
ds
xchg
cmp
icebp
cmc
and
lock
fcomip
jmp
sarb
fcomi
lock
roll
fmul
loopne
jecxz
loope
divl
xlat
clc
shlb
addl
loop
fdiv
test
fstl
lret
fdiv
ljmp
aam
rcr
jecxz
shl
test
leave
loopne
lock
lea
div
sar
shr
cli
iret
test
rcr
lock
leave
mov
sti
xchg
out
aad
jmp
ljmp
cmc
incb
ds
xlat
div
out
cmc
in
fidivs
aaa
out
rol
xor
clc
jmp
cmp
cmpl
neg
xchg
cmc
shrl
loop
hlt
icebp
call
cmp
test
cld
sti
cld
mov
xchg
sti
out
loope
shl
jecxz
aaa
cmp
ljmp
iret
ror
sti
clc
cli
lds
fsub
rcl
repz
ret
out
in
aas
cmp
cmp
leave
lret
call
fcmovu
push
shl
aam
into
xlat
iret
fldl
xlat
ffreep
cld
clc
addl
out
xchg
mov
cmc
out
out
das
hlt
hlt
iret
xor
jmp
cmp
cmp
test
in
mov
rolb
in
ljmp
out
jmp
in
jecxz
in
cli
shl
in
xor
in
rol
enter
loope
cld
cmc
f2xm1
fcomp
fninit
orl
jmp
stc
clc
cmc
call
stc
neg
int3
icebp
orb
jmp
aad
leave
lret
fstp
aad
mov
arpl
addb
jl
hlt
testb
mov
ds
ljmp
cmp
sar
shr
repnz
xchg
roll
cmc
shr
ss
in
cli
cs
cmp
aas
ds
orb
in
lret
rcl
cs
sar
cmp
lock
jecxz
mov
mul
in
not
into
loop
in
icebp
shll
loopne
rol
icebp
lret
ds
mov
ret
fsubrp
cld
lret
sub
xchg
lock
in
cs
enter
out
incl
xchg
cli
xlat
neg
ljmp
out
rol
shl
leave
ljmp
fidivrs
loope
mul
clc
jecxz
rcl
loope
in
mov
xor
ror
repnz
aad
shl
xor
clc
mul
sti
out
sbb
nop
mov
xor
ror
std
fst
xor
push
out
lock
jmp
loopne
jmp
and
lret
in
repnz
cld
fildl
int
aas
loope
mov
jecxz
stc
lret
shl
adc
xor
jmp
ror
shl
in
in
fdivrp
stc
ret
rcr
fcmovnb
cli
icebp
shl
mov
out
ss
std
ljmp
ret
and
dec
ljmp
xor
stc
shr
cmp
hlt
cmp
cmp
clc
into
loop
mov
mov
cld
sub
jecxz
out
out
ljmp
cmp
repz
call
ljmp
sti
xor
sarb
cmp
rcl
in
ret
stc
add
orb
call
in
lock
cmp
aad
out
ret
xlat
iret
xchg
incb
leave
xor
in
hlt
jmp
loop
fdivrs
jecxz
mov
or
in
lret
enter
stc
cli
ljmp
mov
aam
fsub
dec
into
loope
out
lret
ret
sub
iret
std
fnstsw
fscale
in
jecxz
not
xlat
cmp
stc
add
in
fildl
imul
xor
cmc
aad
lret
cld
sarl
repz
shl
jmp
fld
cmp
cld
mov
shl
xlat
int3
rol
cmp
cs
sub
ffree
and
aad
enter
nop
xchg
jecxz
repnz
in
xor
cld
in
xor
cmp
cld
xlat
ret
xlat
cli
loop
out
in
test
xchg
in
int
fidivl
lret
xlat
xchg
cld
mov
mov
ret
repnz
sub
ss
xor
fsub
hlt
push
fpatan
out
faddl
fst
iret
jmp
into
in
hlt
xor
out
hlt
out
sti
fst
sti
out
cmc
shl
ret
std
xchg
out
nop
addl
icebp
cmp
cmp
xor
out
mov
decb
in
ljmp
xor
fincstp
lock
in
aam
addb
lret
mov
out
xchg
idiv
loop
rcr
in
cmpl
rol
shl
fsubr
cmc
iret
leave
in
out
test
xchg
shr
bnd
out
cs
ffreep
xlat
cmp
repz
ljmp
test
xor
out
jecxz
in
shlb
xor
iret
sbb
fstpt
loopne
leave
loope
repnz
repnz
loopne
jmp
sti
out
imul
enter
loope
fcmovb
sarl
repnz
stc
mov
out
cmc
sub
jmp
out
sti
aam
lock
addl
iret
rorl
fcom
xor
aaa
in
aas
jmp
in
fdivrl
rcl
clc
ror
ret
fstp
xchg
repnz
loop
in
ljmp
lock
cmp
shl
cmc
cmp
enter
test
loopne
rcll
clc
xor
xor
cmp
icebp
fstpt
xbegin
loopne
int
mov
in
cli
fnsave
stc
into
push
fdiv
stc
enter
mov
xchg
ljmp
ror
fincstp
imul
iret
cmp
xchg
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
jmp
rol
lds
aad
aad
lcall
adc
mov
add
fdiv
mov
test
sub
sarb
repz
cmp
sub
test
out
fldl2e
in
test
jmp
ljmp
sarb
enter
hlt
cli
addl
fldl
lret
into
xor
leave
hlt
int3
cmp
stc
sub
ret
fcmovb
cld
iret
int
shr
xchg
fbstp
ret
aaa
int
jmp
ljmp
stc
cld
loopne
xchg
fldl
xor
icebp
in
xor
clc
xlat
and
aam
ror
in
repz
enter
fmul
neg
fxch
fstpt
cmp
movb
mov
nop
loopne
xor
xor
clc
lret
cmp
fsub
jmp
test
in
popl
ret
lock
fcmovb
lret
and
or
lock
jmp
out
iret
nop
mov
ljmp
cmp
rolb
rcr
sti
and
out
cli
sub
out
stc
in
ret
stc
int
aaa
lock
rol
xchg
in
cld
lret
mov
cli
fsubp
shlb
lret
rcl
fyl2x
stc
in
repz
xor
lret
cmp
mov
test
mov
push
ljmp
aaa
cmp
repnz
stc
sarb
in
aam
mov
out
mov
mov
in
sti
loope
lret
idiv
loop
adc
fimuls
in
stc
mov
lret
mov
fsub
clc
cmp
idiv
fidivrl
aas
fucomi
rol
fucomp
xchg
mov
jmp
xchg
sub
aad
icebp
cmc
xlat
leave
hlt
lret
push
ds
out
ret
ret
fcomp
rcl
in
sarb
call
std
shr
xor
rolb
rol
call
mov
fcoml
fsub
ret
call
in
hlt
in
out
leave
fcompp
clc
test
call
int
out
cmp
in
rcl
in
cmp
lret
filds
lea
jmp
out
sub
stc
into
rcr
shl
not
in
shl
out
in
std
ljmp
int
shrl
fdivl
out
jmp
sub
aam
call
mov
iret
out
loop
jmp
fsub
sarl
cmp
testl
std
out
xchg
div
lock
ss
cmc
shl
xlat
ror
cli
out
fadd
aam
mov
xchg
xchg
xchg
shl
fdecstp
imul
rcr
fdivr
sarl
in
roll
loop
aad
aad
repz
cmp
aam
loop
jecxz
rcr
sub
in
rcl
mul
jmp
cmp
aad
test
stc
rol
faddp
ljmp
xchg
shll
shl
aaa
leave
ljmp
loope
aam
cmp
sub
fld
in
nop
nop
in
lret
iret
ret
sti
lock
std
int3
std
jecxz
out
ret
fstp
test
jecxz
cld
loop
ror
hlt
call
out
jmp
aas
sti
icebp
cmp
hlt
shr
int3
fchs
mov
nop
sub
ret
aam
int
cmp
cmp
lret
ljmp
xchg
mov
out
icebp
iret
int3
jmp
jecxz
in
enter
xor
repz
jecxz
out
leave
sti
loop
stc
ljmp
icebp
loop
lret
call
cmp
xchg
add
ljmp
in
iret
xor
cmp
fdiv
stc
jmp
shl
ret
out
fdivp
mov
test
fisttpl
xor
fdivrs
loope
in
xor
ffreep
mov
jecxz
test
jecxz
not
ljmp
aam
enter
ss
loop
xlat
cld
addl
orl
aad
iret
ss
sbb
into
into
cli
stc
loopne
enter
fmul
pause
xchg
and
out
in
int
in
repnz
stc
xlat
int3
testl
fcmovnb
movb
xor
add
jmp
xlat
aad
rcr
fstp
fimull
mov
add
int
loop
enter
cmp
fsubr
fdivr
ds
xchg
out
addb
aad
divl
ffreep
iret
sti
cmp
xor
aad
testb
test
addb
jmp
out
in
cmp
cmp
xor
test
repnz
in
call
jmp
hlt
ror
cmp
ss
hlt
cmp
loop
shl
ret
loop
fdivr
out
in
icebp
xchg
xchg
lret
xor
xor
in
fxch
xor
addl
mov
jecxz
xchg
and
loope
sub
in
fildl
out
repz
ror
clc
call
test
iret
mov
xor
xor
pushl
into
leave
xlat
repz
fldl2e
cld
jmp
lret
leave
ret
aam
rcr
adc
sarb
std
loop
fptan
aam
cmp
test
ror
out
ss
out
leave
ror
in
clc
cmp
shl
orl
sub
aaa
das
jecxz
in
jmp
aam
shl
ret
sbb
jecxz
cli
stc
shl
sub
lret
fimuls
out
hlt
out
cmp
cmpl
in
out
aas
fiadds
ror
nop
shlb
out
xor
cmc
fmul
aaa
fidivrs
sbb
xchg
in
leave
out
ljmp
cmp
aam
stc
int3
in
out
loop
enter
in
repz
ss
leave
in
int3
lock
jmp
roll
out
mov
call
shl
shl
aad
clc
sub
sub
in
fchs
call
test
jmp
xchg
out
xor
ror
ds
clc
iret
test
xlat
mul
mov
fcmovu
std
in
std
repnz
out
lock
shl
fucomi
xlat
enter
cld
in
cmp
out
test
out
in
in
test
sub
ret
lret
shlb
aad
stc
xchg
xlat
xlat
jmp
enter
int3
in
sti
loope
lock
aad
xor
cli
div
std
and
fcomi
ret
test
jecxz
in
mov
aaa
cmc
into
in
hlt
repnz
lock
xlat
leave
leave
fcmove
lret
in
xchg
in
aaa
shl
hlt
xor
fdiv
int3
repnz
cmpl
xchg
jmp
jecxz
icebp
in
loop
int
neg
fdivr
clc
repz
loop
xor
dec
stc
iret
ffree
loopne
int3
or
in
cmp
loopne
fcomip
int3
ret
cmp
add
loop
out
xchg
out
out
xor
repnz
lock
fiaddl
hlt
mov
addb
rcl
ret
fucomi
leave
jmp
xlat
cli
repz
cmp
rcr
sar
enter
xchg
int
aam
aaa
hlt
fstpt
iret
int3
sar
in
sbb
cli
loopne
loope
xchg
int
nop
fldl
in
jmp
cli
xlat
fdivr
cmp
int
in
loopne
stc
repz
rcr
call
nop
out
xchg
in
xor
bnd
stc
iret
xlat
cmc
jecxz
out
hlt
aad
cld
test
ret
fdivr
call
in
loop
cmp
clc
xor
cmp
int3
int3
loopne
rol
icebp
mov
repnz
in
out
ljmp
aam
jmp
fucomp
cld
leave
ljmp
out
ret
test
sar
xchg
leave
repz
cmp
shl
sbb
jmp
cli
xchg
cli
decl
out
jmp
repz
faddl
mov
fcmovb
jmp
out
imull
ret
in
clc
out
not
cmp
jmp
cmp
jmp
jecxz
cli
jmp
icebp
lock
xor
jmp
cmp
aas
shl
sti
call
cli
fadds
in
call
int3
sti
in
cli
xor
sar
fcomp
cmc
xchg
int3
mov
out
loop
out
leave
call
ror
cmp
in
mov
mov
mov
icebp
fisttpl
add
jmp
ds
leave
fstp
ret
lds
ret
jl
add
cmp
cmp
icebp
icebp
sbb
ret
shr
mov
fcmove
leave
out
ljmp
in
das
sarl
fsqrt
cld
lock
out
rcl
cmc
ret
cld
out
out
mov
into
xor
stc
jmp
xlat
into
cmp
in
cmp
ret
out
fdiv
lds
std
xchg
fnstenv
int3
in
fstpt
fsincos
cld
fucomp
ret
orb
in
loopne
ret
loop
sti
sarl
cmp
shl
cmp
xlat
and
loopne
test
into
fmulp
shl
out
in
lret
ret
xor
cmp
cmp
ds
out
cmp
enter
in
out
lret
icebp
cli
das
out
cmp
cmp
int3
sar
out
cmp
in
fchs
ds
out
fisttpl
aaa
aaa
sub
lret
std
ror
enter
std
cmp
ret
cmc
ror
out
xchg
xchg
rcr
repz
icebp
iret
roll
out
fucom
rcl
jmp
cld
adcb
out
shl
repnz
call
not
idivl
loopne
sti
in
test
cld
loop
sub
rol
hlt
in
ror
ss
cmc
xlat
fsubp
stc
fadds
test
ss
xor
cmp
cld
aaa
int3
fcmove
jmp
cmp
out
cli
fsubr
mov
fcmovne
jecxz
shr
call
in
cmp
imul
cmp
ret
movl
fiaddl
xlat
aam
out
in
shl
hlt
fadd
rcl
int
into
loopne
leave
shl
mov
or
xchg
enter
in
ror
icebp
cmp
lret
cmp
shl
cmc
call
int
std
test
lock
jecxz
ljmp
ss
iret
cmp
test
cld
test
fisttpll
lret
fiadds
out
sti
cmp
ss
std
repnz
mov
fldpi
fiaddl
in
test
out
int
repz
call
cmp
rolb
rcl
sti
icebp
enter
add
das
fcom
repz
cmp
cmp
std
fdiv
clc
aad
stc
xchg
fisttps
icebp
out
roll
rcl
ss
jmp
enter
stc
iret
aam
xlat
xchg
loop
out
in
sbb
jecxz
in
lret
repnz
addl
loopne
int
call
orb
sub
cld
div
jecxz
out
stc
std
aad
repnz
fdivr
jmp
addb
not
stc
fdivrp
jecxz
aam
sar
aad
mov
in
fxam
fucomip
mov
std
xchg
int3
ror
int
repz
in
xor
int3
loope
cld
shr
rol
ljmp
ljmp
cmp
xor
sti
cmp
xchg
rcl
repz
leave
in
jecxz
repz
mov
fld
ss
clc
aaa
cmc
call
aas
jmp
xchg
out
mov
aaa
loopne
enter
cmc
out
sarl
cmp
fstp
repnz
loopne
cld
loopne
out
orl
cli
xor
out
xor
loop
shl
cmp
stc
std
loope
in
sti
jmp
jmp
xor
in
repz
lret
xlat
and
clc
rcl
fndisi(8087
jmp
int3
xchg
out
xchg
ret
cld
cmp
fyl2x
repnz
repz
cli
in
sti
test
xchg
mov
test
hlt
aad
dec
fucomi
fcmovu
shl
incl
in
cmp
in
mov
aad
in
shl
xor
fnstsw
call
in
cmp
sbb
in
loope
in
rcr
in
rcl
ret
clc
cmp
cld
ljmp
jmp
jecxz
iret
mov
ljmp
rol
cli
cmp
cmp
repnz
test
test
rcr
jecxz
push
loop
mov
test
sub
ljmp
aam
aam
fsubr
out
sbb
in
idiv
cld
fsubr
idivl
loopne
out
cmp
xchg
imul
cld
mov
sbb
loop
lret
cmp
out
jmp
cld
out
ljmp
add
add
jmp
ror
int3
fcmovne
inc
clc
adc
jp
pushf
pop
dec
xchg
jl
addb
jl
ret
std
sarl
leave
mov
out
sbb
fimuls
out
fpatan
in
icebp
icebp
sbb
test
fcmovb
out
test
or
call
out
aaa
fmul
dec
fsub
cmp
cli
add
out
lret
in
out
out
lret
lret
call
shl
jmp
clc
loope
stc
fadd
adc
mov
sub
ret
call
shll
enter
fcmovb
ret
aam
jmp
imul
loope
test
icebp
xchg
out
xor
int3
xor
stc
idiv
lret
int3
mov
cmp
in
lret
repz
xlat
out
int3
cli
fadd
lock
jmp
repnz
enter
loope
xchg
jecxz
xchg
xor
shl
ret
les
divl
fmulp
cmp
clc
fidivrl
aad
xlat
in
test
push
orb
xor
enter
out
int
xor
icebp
cmp
test
mov
fdivrp
decb
aam
xor
shlb
into
ss
cmp
mov
in
enter
int
out
mov
shl
repz
cs
jmp
lret
int3
xor
ret
rcr
sbb
out
rol
test
shr
lds
cmp
f2xm1
enter
ds
shl
repz
fmul
mov
in
or
shlb
leave
repnz
cmp
sbb
fimuls
fldl
aaa
xor
out
in
cmp
cli
rcl
sub
ret
cli
loope
fdivr
std
iret
hlt
shl
aam
enter
shl
repz
ss
in
cmp
fdivr
loope
out
roll
sub
lock
hlt
jmp
test
xor
mov
cli
lret
out
loopne
enter
cmp
int3
xlat
fcmovne
into
icebp
ds
test
leave
add
decb
aad
enter
stc
ret
ds
loopne
out
aas
lret
lds
jmp
jmp
aaa
out
test
fcmovu
shl
hlt
shl
idiv
xchg
rorb
hlt
ret
out
in
hlt
sub
fdivr
in
xor
call
int3
in
out
ss
in
repz
lret
cmc
std
loop
in
aad
fadds
std
jecxz
lret
int
fldl2t
cmp
cmp
hlt
clc
and
out
clc
rcl
xchg
sti
xchg
fcmovb
and
mov
ds
fld
jmp
std
fsubr
test
lock
loope
jecxz
int3
sbb
leave
int3
icebp
lock
sti
jmp
sbb
and
fsub
fucom
ret
cmc
decl
cld
in
xor
jmp
out
idiv
fcomi
cld
aas
cld
int
iret
shl
shr
aad
in
xchg
icebp
vcvtpd2dq
aad
sti
clc
cmp
shr
int
fadds
out
out
fldl
mov
icebp
iret
lret
out
call
out
out
loope,pt
fiadds
int3
and
cld
fadd
int
out
xor
ss
in
fsub
lock
loopne
aam
sbb
jmp
loope
mul
xor
cmp
xor
leave
jmp
icebp
sar
ds
roll
jecxz
call
xor
icebp
jmp
in
not
fcom
stc
incb
int3
jmp
mov
shll
in
enter
fldln2
xor
int3
cmp
mov
mov
nop
mov
repnz
xor
iret
rcr
cmp
clc
lret
loope
loope
leave
jmp
loop
lret
aad
shr
not
cmp
in
out
inc
idiv
repnz
lock
cli
ret
cli
out
sbb
cli
in
repz
loop
rcr
test
fcomip
hlt
and
in
lock
enter
lret
clc
cld
out
in
ds
into
jmp
enter
test
aam
ds
loop
iret
ljmp
in
loop
cmp
loop
iret
xor
stc
shr
repz
aam
cmc
fcomip
bnd
mov
out
xchg
xchg
into
int3
int
xlat
enter
iret
fdivrp
loope
loope
shl
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
jmp
lret
leave
aas
lret
int
pop
push
icebp
mov
adc
into
lcall
orb
icebp
ljmp
shl
ret
sarb
cmp
lock
call
mul
mov
sbb
loopne
xlat
bnd
stc
aam
aam
aaa
div
cmp
call
xchg
lret
out
iret
fucomip
enter
cmp
call
repnz
idivl
test
xchg
int3
test
xor
xor
int3
fsub
fnstsw
std
jmp
loop
sbb
jmp
into
in
ss
jmp
aam
test
repz
shl
test
xchg
xchg
fsubp
lock
aam
cmp
out
int3
aad
leave
repz
loopne
enter
out
sbb
ffreep
ljmp
xor
sarl
int3
lret
rcr
jecxz
fcomp
lds
and
loop
mov
aam
enter
loopne
out
clc
fst
stc
ret
fcmovne
loopne
in
adc
loopne
call
int3
ss
cmp
rcr
fucomi
clc
xor
cli
mov
fsub
fyl2x
lret
orl
in
into
shl
call
into
test
in
hlt
sti
std
in
fsubrp
lock
aam
bnd
leave
into
lret
in
jmp
divl
hlt
std
shl
dec
sti
fyl2xp1
xchg
ror
shr
xlat
shl
int
shl
icebp
ret
into
test
jecxz
out
cli
out
rorb
fcom
idivl
cmp
cmpl
cmp
rol
fmuls
lret
into
repnz
cmp
hlt
aam
call
std
ds
aam
ss
cmp
or
cmp
out
fildl
cmp
imul
out
shl
cmp
lret
rol
xchg
cli
fxch
cli
lret
shl
xchg
out
mov
out
enter
addl
std
adc
movb
cli
in
cs
xor
sar
fdivl
sar
vpandn
and
mov
lret
call
call
icebp
xor
shl
cmp
fnstsw
sar
ret
addb
cmp
call
not
shr
cmc
aam
out
icebp
ss
repnz
into
icebp
jmp
int3
fsubr
nop
icebp
loop
mov
fsub
shl
std
xlat
fcmovbe
jecxz
lock
aas
call
out
shl
loopne
xchg
int
cs
repz
jmp
std
shl
incl
into
xchg
sub
cmp
fstpt
sar
cmc
xchg
sti
shr
addl
shl
out
ljmp
icebp
in
lret
into
call
out
xchg
clc
into
fsub
fmull
lret
call
cmp
sti
repnz
sbb
lret
filds
in
fsub
aad
out
sti
stc
fcmovu
rcl
cmp
repz
cli
sti
faddl
sub
in
repz
ss
out
test
mov
aam
enter
xchg
out
addb
int3
iret
int
cmp
fucomp
repz
out
aad
out
aam
mov
ret
ljmp
jmp
sti
fcmovnu
fcmovu
sti
aam
fpatan
jmp
xchg
sti
nop
std
call
lock
lds
xor
iret
xor
xlat
iret
aas
ljmp
vpavgw
loope
mov
mov
mov
cmc
ds
xor
xor
out
aam
shl
loope
test
jecxz
out
incl
iret
sub
aaa
cmp
aaa
out
fdiv
aaa
rcr
xor
jecxz
div
sub
cld
ljmp
das
icebp
sti
cmp
shl
sar
std
call
ret
sbb
in
fcmove
sar
loope
lret
loop,pt
ret
lock
fcomip
sarl
ret
ret
jmp
filds
xchg
in
iret
cmp
lret
cmp
rolb
test
incl
fmulp
out
xor
cmp
jmp
into
shl
loopne
enter
stc
test
call
in
ret
shr
fcom
fistpll
cmp
aas
cli
fcmovnbe
cli
rolb
in
test
jl
decl
jmp
iret
iret
ror
ror
xlat
fnop
and
xor
inc
inc
or
jl
add
iret
out
out
fiadds
icebp
out
fcmovu
sti
clc
xlat
lock
cmp
leave
in
loop
fst
lea
jmp
cmp
sub
idiv
sar
fcom
cld
loope
fucomp
jecxz
aad
repnz
fdiv
icebp
in
jmp
cmp
shl
rcr
ret
jecxz
enter
mov
lea
iret
in
aaa
std
stc
rol
fdivrp
jmp
fucom
mov
loope
fdivp
xchg
loope
sub
lret
in
cmp
cmp
cmp
repz
idiv
mov
lret
mov
cld
xchg
lret
test
fcmovu
fcmovnu
rcr
jecxz
ret
mov
out
jecxz
mov
leave
out
xor
enter
repz
cmp
test
out
jecxz
leave
aad
test
out
fcmovne
out
div
aaa
xlat
lock
lock
int
idiv
cli
repnz
out
sti
ret
aad
hlt
test
loope,pt
or
lret
xor
repnz
test
iret
ret
xchg
in
into
mov
sar
xlat
cmp
cmp
into
rcl
ret
sarl
orb
cs
repz
add
cli
out
xchg
ret
fucomi
and
call
int
mul
cmp
hlt
lret
sar
ret
ffree
cmc
jmp
fildl
ljmp
lock
repz
fidivrs
in
out
in
out
xchg
icebp
rol
call
call
cmp
shl
testl
addb
into
fsub
cli
enter
sti
jmp
aam
jmp
out
int
dec
jmp
out
fcmove
loope
cmc
rol
in
xlat
lock
clc
mov
mov
test
out
loop
sub
loop
aaa
iret
leave
clc
lock
rolb
neg
fists
out
sub
lret
lock
cld
cmp
cmc
stc
fdivr
mov
out
call
xlat
aaa
icebp
in
sar
fcmovnb
fadds
stc
jecxz
shl
enter
fcmovu
dec
in
shr
in
icebp
xor
int3
fdivr
in
cmp
aas
jecxz
addb
addb
sub
sub
cld
lret
loopne
repz
fdivp
cli
fldl2t
jmp
fcmovnb
test
repz
hlt
rcl
out
out
enter
fucomi
jecxz
and
jmp
cli
icebp
mov
mov
cmc
rcl
fdiv
cs
leave
cmc
ljmp
in
lret
ret
out
std
lret
rcr
iret
into
xor
out
std
idiv
cmp
fdiv
loopne
addl
jmp
nop
shr
jecxz
out
ret
sar
in
fdivl
idivl
fdivrp
fabs
xchg
mov
testb
jmp
fcomi
sub
repnz
cli
ror
rcl
sti
leave
jecxz
int3
sub
int
fucomip
out
out
std
out
call
repz
in
in
fadds
fistpll
rcl
neg
sar
into
out
lret
ljmp
aam
int
ljmp
mov
loope
cli
fcmovnb
into
repnz
repnz
jmp
fcmovnu
dec
jmp
cs
cmp
aaa
enter
fnstenv
ret
std
faddp
loopne
out
cmp
jecxz
int3
xchg
shlb
clc
xlat
stc
xor
out
aam
loopne
fsub
repz
fiaddl
in
xchg
mov
fucom
aam
repnz
aad
das
sti
int
cmp
cli
ret
add
xor
lret
repz
loope
fmul
xor
out
fsubr
cmp
fdivr
cmp
aam
mov
call
call
xchg
call
repnz
aad
in
sti
cmp
enter
loope
fdiv
repz
fcmove
into
out
cmc
out
ss
xlat
rcr
cld
into
out
xor
repz
clc
cmp
leave
neg
leave
test
leave
in
rcl
ror
into
xor
into
lret
sub
in
out
fcmovbe
cmp
xacquire
out
loop
fcmovnu
out
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
mov
jmp
xlat
enter
fcmovbe
cmp
rolb
fisubl
jl
jecxz
loop
fcom
stc
xlat
fdiv
xor
aas
int3
incb
cmc
in
out
in
sti
int3
mov
test
shl
add
loope
hlt
aam
stc
lds
jmp
leave
rcl
stc
stc
idiv
sti
cli
lock
sti
rol
out
stc
repnz
in
or
loop
mov
loopne
call
rcr
out
ljmp
iret
xchg
aas
repz
loopne
sbb
fiadds
in
cs
cmc
idiv
loopne
leave
fcos
jmp
mov
mov
xchg
incb
xor
repnz
rcr
in
dec
aam
rcr
leave
cmc
les
std
repz
sub
jmp
rcl
cmp
cmp
out
xlat
shl
loope
enter
lock
loopne
xor
cli
aaa
int
out
in
or
cmp
jmp
leave
sti
fucomp
cmc
mov
jmp
into
xor
jmp
fdivrs
ret
rol
addl
xchg
call
f2xm1
leave
call
aad
loope
in
out
in
shr
movl
fisubrs
in
stc
ror
ljmp
repz
aad
rol
test
jecxz
xchg
loope
jmp
call
rcl
cld
sar
fld
cli
sti
mov
sub
ret
rcl
clc
cmp
leave
stc
fcomip
sbb
lds
cmp
clc
jmp
fucomi
mov
mov
out
fdivp
lret
aad
out
cmp
cmp
enter
hlt
out
std
rol
xor
into
in
loope
jmp
leave
aad
call
ror
loope
test
lret
jmp
jmp
repnz
int
out
rol
out
call
in
enter
in
testb
in
jecxz
out
test
xor
cmp
in
repnz
cmc
aaa
jecxz
iret
neg
cld
aas
cmc
ffree
sti
loop
icebp
loop
in
pop
shlb
enter
ds
loop
lock
idiv
test
out
cld
mov
das
int
cmp
cmc
call
cmp
cmp
test
jecxz
fchs
loopne
jmp
das
shl
loop
in
repz
cmp
cmp
aad
aad
fsub
lret
xchg
lea
mov
ljmp
out
icebp
fistpll
repnz
mul
mov
mov
cld
cmc
adc
aaa
into
aaa
flds
fistpll
stc
aas
cli
movb
vfrczsd
hlt
xor
cmp
cld
cmp
int3
cmp
fadd
mul
test
out
shr
sub
rcl
lret
cmp
cmp
cld
testb
xchg
testl
les
lret
hlt
repnz
jmp
fninit
addl
aad
dec
in
xchg
fsubp
xlat
faddp
lock
icebp
stc
xor
adc
loop
clc
fucompp
lea
rcr
iret
jecxz,pt
lret
fucomip
jmp
loopne
stc
fcom
ret
sti
fsin
enter
int3
loopne
mov
xor
int3
out
leave
xor
jmp
fidivrs
aas
aas
test
sti
fdivp
aad
ljmp
mov
hlt
jmp
cmc
out
iret
jmp
aas
into
cmp
enter
mov
mov
std
in
xchg
in
call
repnz
iret
loopne
test
xlat
aam
cli
loope
leave
jmp
shl
repnz
not
out
or
test
in
out
test
into
mov
xchg
lock
out
lret
cs
jmp
into
hlt
neg
cmc
fidivrs
hlt
neg
loope
call
xchg
icebp
not
cli
in
enter
in
xlat
loopne
and
out
mov
fmull
aad
cmp
fsubr
ss
fidivrl
ret
test
fsub
addl
fcmovu
mov
xlat
xor
fucomp
in
std
cmp
out
hlt
leave
fdiv
ljmp
add
add
or
mov
sub
mov
sbbl
push
inc
jmp
aas
lret
lret
xchg
lds
flds
jl
in
in
in
xchg
out
iret
ss
xor
out
out
lret
rol
fnop
jmp
loop
in
clc
fstl
jmp
cli
cmp
cmp
fnstcw
fcomp
cli
icebp
cmp
addl
jecxz
out
fldln2
call
sti
ss
ret
in
fsubp
cld
out
in
jmp
mov
loopne
leave
into
stc
out
out
xor
fildl
loop
loope
out
out
jecxz
fnclex
decl
fcmovne
int
aam
jmp
in
repnz
and
jmp
xchg
fimull
bnd
clc
cmp
ljmp
shl
rol
or
enter
sti
incb
das
divb
jmp
cmp
out
xlat
cmc
fadd
sti
in
xchg
xchg
xchg
test
in
jmp
in
out
repz
cli
std
repnz
cmp
cmc
test
fisttpl
adc
in
out
int3
fstp
cld
lock
vcmpsd
out
int3
iret
loopne
aad
aaa
out
cld
jecxz
in
clc
test
rcl
fucom
enter
or
into
ljmp
out
xor
xor
aad
cli
loope
ror
std
addb
xchg
fucomip
and
out
jmp
in
call
std
int3
in
std
repz
leave
out
cli
fcomi
lret
jecxz
xchg
ror
out
out
fst
aad
aas
test
cmp
cmc
fcomi
int
in
lds
in
clc
out
rcl
repz
sti
cmp
int3
repz
mov
fcmovnu
repnz
in
in
testb
xor
hlt
ret
fdiv
stc
jmp
loopne
sti
repz
xlat
cld
loop
cmc
out
in
mov
test
mov
shr
fucomi
sti
enter
repz
fdivp
fsubrp
fmul
incl
lret
sti
aad
cmp
fsub
loopne
repz
loope
mov
fdiv
or
mov
xorl
frndint
sarl
int3
sti
and
out
xchg
loop
in
mov
nop
icebp
xchg
jmp
hlt
stc
xabort
cmp
test
test
test
in
loope
mov
lret
xor
fdivrs
out
cli
xor
std
fidivrs
xlat
jecxz
in
int3
icebp
lret
orl
shl
icebp
out
repz
int3
lret
fabs
cmp
ljmp
mov
xchg
call
into
jmp
ss
xor
ret
lock
out
fsub
icebp
call
call
call
xlat
xor
sti
test
test
lea
cli
mov
xor
hlt
leave
cmc
sub
cli
cli
fdivrl
cmp
aas
sti
fsub
stc
call
sbb
xchg
cmc
xor
loop
sub
cmp
ror
cmp
lds
lret
jmp
xor
xchg
cmc
lock
iret
in
aaa
imul
fidivl
stc
idiv
in
rol
fstp
sti
out
enter
in
ror
call
fincstp
out
xlat
cmp
shr
rcr
fadd
jecxz
call
repz
xor
call
xor
ds
hlt
aas
test
mov
mov
fcmove
test
xchg
enter
iret
xor
shll
sub
ljmp
icebp
stc
sbb
lret
in
call
loopne
shr
aad
xor
repz
filds
aad
rolb
fimull
sar
loop
int3
std
aad
out
call
ss
faddp
fistpll
mov
lret
and
cld
mov
xlat
xlat
aad
test
xlat
ss
sbb
in
repnz
in
fdivr
ficoml
out
lret
cmp
cmp
out
jecxz
sar
ljmp
mov
das
lret
ret
shrb
repz
imul
icebp
ret
loop
fcomp
in
out
stc
clc
out
iret
in
in
icebp
into
xor
in
shl
rcl
repnz
in
loope
fmul
xchg
loopne
jne
subl
xor
jmp
ret
lret
ror
lret
sub
sahf
in
mov
jl
flds
jl
cld
enter
iret
call
repz
xlat
cs
shr
fxch
jecxz
ret
adc
clc
leave
fimuls
icebp
ljmp
cs
out
loopne
fdivp
xchg
test
xlat
cli
in
loopne
out
iret
int
cmpb
xor
jmp
in
cmp
out
cmp
jecxz
cmp
lock
fdivp
jmp
test
xlat
in
in
fidivl
in
fdiv
shl
xlat
std
fdivr
sub
testl
into
stc
xor
hlt
int
cmp
lret
in
ret
jecxz
fstp
mov
jmp
xchg
icebp
loope
in
cmp
out
xor
aaa
leave
sar
aas
fstp
aad
test
nop
in
lret
repz
repnz
rol
jmp
icebp
fldl
frndint
fildl
out
mov
loopne
ret
cmp
fdiv
xor
imul
rol
rol
div
in
clc
in
and
repnz
out
xor
imul
xor
loopne
std
aas
iret
test
div
out
test
fdiv
lock
xor
xchg
loope
in
ret
xor
fmulp
flds
lock
mov
mov
xor
call
std
shll
sar
aad
cmp
f2xm1
fcomp
jmp
shl
mov
fsubrp
xor
ret
out
rcr
ror
rcl
aad
in
out
xchg
sub
not
in
cmp
ljmp
loop
cmp
sar
shl
out
cld
xchg
test
test
fucomip
shl
xor
int3
cmp
cmp
sar
fcmovu
stc
cmp
cli
call
fisttpll
lret
enter
leave
fucomp
lret
call
idiv
repz
loop
in
test
xchg
in
lret
ror
xor
xor
aaa
test
cmp
hlt
cld
hlt
out
stc
sub
stc
in
decb
out
in
xor
xor
idivl
loope
loopne
mov
fincstp
fsubrp
xchg
jmp
sub
ss
test
lret
ss
rcr
hlt
xchg
mov
fimuls
out
cmp
repnz
sub
int
fcmovb
faddp
fcmovnu
ret
xlat
out
decb
mov
out
iret
out
lret
jmp
ljmp
aas
flds
std
int
stc
stc
fsub
xchg
ljmp
cmp
sarb
fdivrp
clc
fildl
hlt
stc
int3
xor
xchg
out
rcl
repz
leave
hlt
cmc
cld
stc
rolb
xchg
xchg
int
mov
jmp
iret
cmp
lret
into
int3
add
clc
test
xlat
ljmp
cld
lock
shlb
lret
out
xor
cmp
sarb
fst
fdivr
in
fucomp
sti
out
icebp
into
fimull
ss
cli
ftst
jmp
test
out
fsubp
rol
call
xchg
fdivrp
sti
jmp
icebp
aaa
lret
sarl
ss
cmp
in
repz
xrelease
int3
in
or
xchg
icebp
xor
cmp
lret
in
cmp
shl
ret
in
cld
cld
lret
jecxz
xchg
in
out
aam
hlt
cmp
call
jmp
into
out
out
out
test
ret
shr
incl
int3
xchg
fdivp
ret
loopne
out
jmp
ljmp
add
fcmovb
neg
vcvtdq2pd
icebp
loopne
out
lret
leave
iret
out
repnz
xor
test
cli
addl
test
xor
sarl
xor
aad
cmp
cmp
ret
rcl
stc
mov
iret
call
test
cmc
ljmp
fsubp
ret
repz
xchg
sub
and
in
lret
out
xchg
aam
shll
loop
fdivs
fst
mul
in
test
testb
xchg
xchg
out
loopne
leave
aaa
sub
cmp
shl
out
loope
loopne
xchg
mov
xor
call
ljmp
cmp
icebp
lock
fidivrs
je
jmp
iret
aad
aad
aad
aad
mov
mov
jl
flds
jl
stc
out
roll
fadds
in
fisubrs
lock
cli
xor
int
cmp
hlt
repnz
in
fstl
cmp
xor
cmp
loope
fildl
cmc
aad
jmp
ret
jecxz
in
into
cmc
xor
cmp
cmpb
int
loope
out
repnz
xlat
sbb
out
enter
aad
xor
neg
fsincos
cmp
fcomp
std
jecxz
roll
loope
out
out
xchg
xlat
in
in
out
rcr
repz
cmp
rol
test
cld
not
mov
loope
jmp
in
out
sub
out
jmp
not
cli
xor
jmp
fisttpl
nop
adcl
sti
aad
test
stc
add
cmp
mov
nop
fimull
in
lock
ror
out
ss
fildl
mov
int3
mov
adcb
xor
int
into
out
fcmovu
in
icebp
ret
out
jmp
lret
shl
jmp
iret
sar
std
fucomi
out
in
fsubr
cmp
sar
push
cmp
filds
loope
shl
repz
xor
ljmp
cmp
std
faddl
leave
in
int
iret
shr
enter
sarl
aam
cmp
aad
cmpl
loop
xchg
mov
fdiv
mov
loopne
xor
lock
rcr
xor
fucomip
into
clc
aad
icebp
cld
cli
out
iret
adcb
xor
out
xor
fnstsw
rcl
or
out
loopne
fmul
mov
in
mov
jmp
test
call
cmp
jmp
idiv
clc
cli
cli
mov
leave
xlat
fadds
xchg
out
rol
int
lret
cli
sti
sar
fsincos
aad
ret
repnz
in
ficoms
ds
cmc
out
int3
fsub
cmp
lret
fstpt
inc
aas
cld
jecxz
loope
sub
ljmp
cmp
cmp
int3
cmpb
out
cld
shr
call
lds
fsub
test
aaa
out
xor
iret
repz
stc
aad
cmc
mov
cmp
xchg
int
lret
fnstsw
rcr
in
clc
in
lret
mov
out
lret
fdivp
loopne
iret
aaa
fdivr
cmp
in
incb
ret
ret
loope
cli
fucom
jmp
not
shl
in
call
sbb
sbb
fld
aam
xchg
ljmp
lock
iret
shl
in
cmp
into
cmp
fnstsw
fidivrl
sti
fsubr
lret
in
std
rclb
int3
sti
out
enter
shl
add
or
aad
jecxz
leave
jecxz
mov
std
decl
iret
out
ror
in
cmp
out
sub
ds
jecxz
in
lds
lret
std
in
call
sar
jmp
fcom
cmp
sbb
decl
ljmp
cmp
ret
int
hlt
std
cmp
in
ret
rcl
mov
aas
out
int3
repz
mul
aaa
xor
div
xlat
into
hlt
hlt
aas
clc
cmp
idiv
nop
xchg
enter
shll
cmp
int3
cmp
fadd
hlt
rcl
sti
stc
fdivr
xchg
imul
int
loop
out
loope
int
sub
fmul
in
ss
ljmp
mov
ds
loop
out
in
repnz
loopne
sar
cmp
fsubr
call
lock
fmulp
lret
iret
mov
rolb
ror
cmp
out
cmc
out
into
enter
clc
in
cmpl
sti
std
fsubrp
shr
or
int3
int
sub
xor
sar
out
loope
lock
in
sti
sti
cmp
out
out
xchg
in
orb
xor
lock
sar
rol
cli
call
repnz
xor
xor
aam
inc
add
subl
xor
movl
cmp
movl
jne
xor
jmp
ds
ret
ds
jmp
add
add
hlt
or
fdivrp
aam
in
enter
xchg
inc
leave
cs
enter
out
out
ljmp
mov
in
sub
mov
in
lock
call
cmp
fnstsw
fldl
out
test
les
rol
std
mov
ljmp
repnz
cli
xlat
lock
lret
rcl
xlat
fst
xchg
rol
xlat
neg
jmp
fsub
ljmp
aam
int
les
loope
test
jecxz
mov
mov
fucomi
adcb
iret
lret
xor
in
aam
ds
out
into
mov
enter
out
aaa
repz
std
call
int3
repz
cld
imul
out
mov
in
xchg
fists
lret
call
fabs
repnz
cmp
xlat
loopne
cld
enter
mov
mov
out
mov
xor
neg
cli
out
jmp
rol
out
ljmp
in
jmp
lock
ret
ret
out
in
ror
lret
cmp
adc
repnz
jmp
sti
mov
xor
xor
aam
into
call
loopne
rcr
hlt
fiadds
fiadds
out
rcr
aad
cmp
out
out
iret
aam
into
ror
icebp
add
cli
cmp
mov
iret
sub
xor
xlat
divl
cld
int
fdecstp
out
cli
cld
faddp
aam
loop
test
lret
jmp
xor
out
xlat
into
iret
or
shl
sar
call
mov
mov
aaa
int3
hlt
jmp
xor
jmp
clc
cmc
sar
iret
out
ret
aad
call
xchg
enter
and
in
fst
leave
repnz
int3
in
fdivrl
loopne
incb
sti
mov
fsubp
iret
xchg
nop
out
ror
out
rol
stc
lock
bnd
cmp
cmp
cmp
adc
in
iret
jmp
repz
out
aas
ss
loopne
fcmovbe
rolb
hlt
stc
jmp
out
fmulp
cld
in
loop
leave
xor
in
xlat
cmc
fdiv
lret
or
repnz
imul
fcmovu
lret
xchg
call
sub
in
cmp
out
cmp
repnz
in
test
fdivrp
and
sti
roll
enter
call
icebp
repz
sar
jecxz
sar
out
iret
rcll
repnz
imul
lds
ss
cmp
loopne
testb
loop
enter
out
int
xlat
in
lock
out
repz
stc
idiv
xchg
cli
stc
fucom
sub
leave
nop
mov
call
fcmovbe
int3
icebp
sar
loop
fst
sti
cmp
fildl
xchg
xchg
dec
xor
shl
shlb
fdivl
jecxz
or
xchg
out
xorl
ror
ss
fcmovnu
into
cmp
addl
jecxz
repnz
iret
out
in
in
enter
faddp
xor
shl
aaa
in
ror
fsin
lret
ffree
std
repz
or
test
xor
out
out
out
shl
sbb
filds
fmull
orb
div
aam
cmp
aaa
aaa
into
shr
in
aam
cld
aad
cld
lret
xchg
test
ljmp
call
lock
shl
out
sti
loop
out
cld
or
lret
xor
xor
rcl
cld
cmp
shl
mov
fdiv
sbb
lock
mov
xchg
leave
xor
fcmovnbe
stc
aad
hlt
repz
add
test
xchg
jmp
fdivrp
ljmp
call
ljmp
fcmovbe
icebp
fcmovnbe
ds
aad
fildl
cli
mov
ffreep
shl
out
sti
ss
cmp
cmp
iret
cli
lds
mov
ljmp
repz
into
lock
iret
ss
aas
in
cld
loopne
fadd
shl
loope
fucomp
call
fiadds
shll
add
jmp
mov
andl
xor
jmp
ds
rcr
fcmovbe
rcl
aad
sbb
mov
jl
jmp
sarl
out
fcmovnbe
out
in
enter
test
std
jmp
in
jecxz
repnz
mov
mov
loope
xchg
sbb
repnz
call
sarl
stc
cmp
in
sar
cmc
repnz
fiaddl
loop
sub
stc
iret
sti
cmp
iret
fucomi
ss
cli
xor
fcomi
call
ret
xlat
enter
shl
cld
nop
aad
xor
lret
clc
into
int3
leave
in
dec
enter
cmp
out
mov
enter
rorl
cs
iret
jmp
fsin
loope
fdivrl
std
addb
leave
decb
fsubr
xor
cmp
cmp
lock
repz
and
shl
sti
call
jmp
sbb
xchg
cmc
adc
out
ror
xor
leave
into
stc
repnz
cld
ss
loop
xlat
loopne
iret
lea
idivb
out
sub
idivb
cmc
cmp
loop
in
fsubp
sti
aad
ret
orb
faddp
jmp
aaa
les
test
repz
cmp
int
fcmovne
loopne
jecxz
ret
in
xchg
mov
hlt
lret
into
int3
sarl
ljmp
lock
ret
aam
ret
loopne
call
rcl
out
xor
cmp
stc
enter
sarl
xor
int3
out
stc
repnz
loope
fcoml
ret
lret
cmp
rcr
roll
cmp
aam
aam
icebp
fdiv
fisttpll
ljmp
lret
shl
rcr
rcl
cli
repz
fldl2e
mov
iret
icebp
ljmp
iret
clc
fcomp
out
in
fdivrp
rcl
loop
fidivrl
loope
in
loope
cld
jmp
into
int
rcr
cli
rcr
cmp
hlt
test
shl
loop
fdivr
xchg
leave
mov
in
xor
fcmovne
ds
fcom
shl
repnz
sbb
lock
mov
rol
enter
cmp
not
rol
jmp
loope
sti
loop
addb
xchg
out
hlt
icebp
out
out
xor
std
aam
cmp
ljmp
clc
sti
incl
xchg
fimuls
jecxz
in
into
out
call
vpsrad
ret
loope
out
cld
loop
faddl
rol
cmp
aaa
cmp
int
aam
test
fdivp
loop
dec
std
fcmovu
mov
xor
cmp
repz
int
shl
aad
and
loopne
fsubr
fucom
lret
in
cmc
loope
in
cmc
enter
out
xor
sar
lret
mov
lret
std
xchg
out
call
out
fdiv
fadds
loop
icebp
and
mov
icebp
cld
xchg
addl
in
enter
cmp
out
cmp
sbb
fsub
fcoml
xor
call
ror
cmp
neg
mov
fmulp
lret
fildl
xor
cmp
lock
jmp
fsub
addl
sti
sti
hlt
call
in
ret
lock
cmp
ret
sarl
xchg
sti
int3
into
jmp
in
rcl
lret
shr
fdivl
stc
xlat
cmc
loop
shl
out
mov
call
loop
enter
aaa
repnz
ret
cmp
test
loop
std
rcr
xchg
leave
aad
int
jecxz
mov
into
stc
ret
repnz
jmp
test
enter
mov
xchg
xlat
lret
into
xor
ljmp
fmul
fildl
testl
cld
in
clc
int3
rol
fcmovnbe
aad
out
fdivp
iret
test
std
mov
clc
in
fcmovne
fucomp
test
call
loopne
out
xlat
in
imul
lret
shll
jecxz
lock
out
mov
mov
test
ljmp
lret
sarb
fcmove
in
repz
fadds
loop
mov
loop
hlt
icebp
add
mov
mov
xorl
jmp
ds
aam
aam
aad
inc
dec
push
pop
lock
data16
mov
jl
ljmp
cmp
loopne
in
inc
sbb
ds
mov
jmp
shl
jmp
xor
ds
fcomp
sti
in
xchg
repnz
sbb
xchg
push
in
shl
jmp
cmp
fsubr
jmp
lret
out
mov
ss
icebp
repnz
cli
cmp
addb
ret
cmp
in
mov
xchg
into
divl
lock
into
cld
aas
fxch
imul
std
cli
lock
loope
fdivrp
stc
sti
fucomp
fmul
sub
sarl
out
xor
aam
cmp
in
fmul
orl
sub
out
in
int
iret
sar
in
xor
idiv
fneni(8087
xchg
orb
leave
ficoml
out
repz
jmp
jmp
fdivp
cmp
fisttpl
std
ljmp
or
in
fsqrt
sub
push
idivl
aad
cli
shl
test
fdivrp
lea
out
out
xor
out
cmp
aad
cmp
out
cmp
xlat
roll
nop
cli
mov
xor
ret
sar
jmp
iret
flds
hlt
lret
out
mov
out
nop
fstp
mov
ror
sti
out
out
jmp
fnstcw
xor
repnz
test
in
addl
xor
ror
cmc
jmp
cmp
fadd
rolb
fsubr
cmc
mov
xor
shl
out
aas
cmp
loopne
out
loope
fldl
hlt
cld
in
jecxz
sti
repz
in
leave
cmp
lds
xor
shr
rcl
leave
mov
nop
adcl
xlat
call
cli
jecxz
jecxz
xchg
cld
fadd
or
jecxz
mov
repz
shl
xlat
into
out
idivl
enter
lock
movb
out
leave
xor
ftst
leave
iret
fucomp
sti
repz
cmp
enter
orb
xor
int
cs
iret
xlat
sar
cmp
fildl
xchg
clc
mov
xor
lret
loop
stc
int
enter
aas
cmp
fchs
mov
sbb
out
loope
fsubp
xchg
xor
shl
jmp
cli
stc
icebp
aas
loope
shl
in
hlt
xchg
jmp
xchg
test
icebp
aad
ror
leave
ss
xor
ljmp
cld
sarl
mov
int3
xor
int3
call
aaa
aas
cmp
repnz
stc
div
stc
jmp
orb
faddp
cmc
xor
les
fxch
shr
jecxz
incb
fld
sti
mov
cli
fistpll
in
ror
mul
aad
sarb
jecxz
and
rcr
std
fucomi
sti
loop
test
in
in
aam
shlb
vshufps
icebp
cmp
xlat
sar
shl
in
mov
loop
fdivs
out
cmp
icebp
stc
jecxz
addl
sti
out
xchg
call
out
lock
cld
push
cmp
aam
ffreep
call
in
sti
out
jmp
fsubr
call
fxch
fnstenv
leave
sti
imul
std
aam
into
lock
flds
out
xchg
ror
shl
das
int
fcomi
ljmp
xlat
sub
sub
loope
in
sub
xor
out
cmp
aam
xor
addb
in
jmp
xchg
shr
sub
xor
int
jmp
clc
iret
lock
xor
fldl
out
cld
mov
adc
xor
ljmp
aaa
div
xor
aas
jecxz
out
stc
aad
ljmp
repz
jecxz
cmp
cli
shl
clc
jmp
loopne
ror
cmpl
ljmp
loope
icebp
sub
cmc
int3
lret
test
loopne
loop
enter
loopne
mov
roll
notl
mov
movl
jmp
mov
xor
or
sub
add
jmp
ret
aad
fstp
int
ja
imul
pop
inc
jl
flds
jl
jecxz
repnz
lock
out
fcmovnb
fnstcw
fcmovnb
cmp
sarb
incb
in
int
xchg
in
repnz
leave
rol
in
xor
xor
repz
hlt
in
idiv
fidivrl
call
sbb
enter
icebp
ret
clc
int
hlt
jmp
loope
rol
ret
loop
leave
mov
int
in
fsub
repz
loop
leave
call
xor
sti
sti
cld
fcmove
loop
div
fadds
out
fadd
xchg
in
sub
lret
repnz
iret
call
lret
out
testb
out
shr
rorb
fxtract
out
xor
xlat
sti
cmp
jmp
icebp
xlat
ds
aam
fsubr
xchg
loopne
in
cli
shl
loope
cmp
xlat
aam
iret
ljmp
test
imul
stc
ljmp
xor
shl
lock
jmp
ret
jecxz
fdivp
hlt
test
fsubr
loop
xchg
lret
xor
in
loop
xor
xor
lret
in
rolb
mov
in
xchg
iret
sub
out
xor
ror
clc
fmul
aas
mul
push
in
in
imul
call
orl
aad
in
xlat
rcr
mul
add
lret
mov
or
cld
mov
in
icebp
cmp
repz
in
cld
ret
sti
fsubp
aad
fiaddl
std
test
aam
int3
cmp
in
fmul
cmp
shr
neg
mov
mov
cld
test
xchg
in
cmc
adcb
cli
jmp
call
fsub
xor
icebp
cmc
test
aam
loopne
mov
icebp
in
shr
call
iret
iret
sar
in
sar
stc
fcomp
div
in
out
enter
jmp
out
ror
idiv
in
stc
fucomi
stc
fsubp
stc
fdivrp
cld
test
enter
fmull
xor
enter
int
out
xor
ret
rol
xchg
stc
in
orl
in
les
sti
xor
sbb
out
and
aad
int
test
out
enter
sarl
int3
iret
lock
sarl
cmp
iret
cmp
icebp
sti
lret
xchg
jmp
int
jecxz
xor
in
clc
jmp
sarl
aad
stc
lds
in
out
mov
xchg
jecxz
aam
xor
cmp
iret
fucomip
cmc
int3
xlat
adc
repnz
add
test
lret
xchg
fdiv
jecxz
sarb
sub
xor
aad
out
out
out
clc
shr
fucom
sti
faddl
out
shll
dec
cmc
ds
loop
aad
aas
hlt
lret
mov
into
ret
fucomp
cmp
incb
out
std
shl
jmp
test
mov
call
out
int3
loope
repz
enter
fcmovbe
loope
cmc
iret
lock
lret
sub
leave
fdivrp
in
int
loope
aaa
clc
cmp
fdivr
fmul
int3
cmp
test
in
inc
iret
mov
mov
hlt
leave
stc
cmp
xor
cmp
repnz
test
fdivrp
out
into
iret
mov
sarb
xlat
sarb
iret
in
fsubr
inc
cld
fdivr
sbb
adc
in
into
loopne
cmp
out
cmp
cmc
repnz
icebp
xor
test
loopne
clc
xlat
decl
jmp
out
imul
shl
repnz
loope
rcl
cmp
xlat
jmp
aas
in
test
in
stc
nop
adcb
lock
into
xor
fsubrp
sti
repz
xlat
stc
xchg
fmul
cli
ljmp
call
ret
sti
repnz
leave
loope
jecxz
fcmovnbe
rcl
loopne
ret
stc
out
fsts
out
loope
xor
in
repnz
lock
cmp
into
les
aam
clc
iret
mov
rcll
test
fstp
xlat
ds
fldl
std
clc
fldln2
testb
or
jecxz
ss
fdiv
int
ljmp
lock
fsubrl
inc
add
add
add
add
or
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
push
pushl
call
jmp
mov
mov
jmp
iret
ror
fstp
xlat
ret
dec
or
aad
xor
jl
add
ljmp
loope
xor
xor
xor
clc
icebp
cmp
sti
fsub
fistpll
xchg
xor
test
clc
ficoml
xor
iret
ret
leave
aam
test
test
out
std
loopne
in
in
sti
fistl
xor
in
loop
in
aas
jmp
fsubr
cmp
cmp
loop
loopne
out
ljmp
loopne
cmc
clc
enter
fmul
xor
in
loope
cli
mov
lret
jecxz
call
shlb
cld
cmp
idivl
test
std
fisttps
lea
jecxz
xchg
ffreep
lret
ss
into
cli
call
lret
into
ret
hlt
stc
and
fldln2
repz
repz
clc
out
lock
neg
loopne
aas
jecxz
hlt
or
mov
out
fildl
icebp
shll
hlt
idivb
aad
iret
aad
loop
cld
mov
loopne
fmull
out
out
mul
lret
stc
xor
int3
icebp
hlt
icebp
shl
mov
xchg
in
stc
leave
in
xchg
into
faddp
in
stc
cmc
fcmovne
shr
in
into
rolb
mov
nop
sar
out
out
icebp
loop
icebp
ret
lret
shl
stc
cmp
iret
xchg
idiv
cmp
fimuls
cs
in
aaa
out
cld
out
cmp
out
shr
loope
jmp
xchg
xchg
out
lea
clc
sti
div
cmc
cld
xlat
fxtract
into
add
jecxz
in
loopne
into
loopne
cli
dec
ret
loop
aaa
int3
cli
stc
enter
iret
loope
add
sti
decb
iret
cli
xchg
repz
ljmp
stc
shl
cmp
test
in
adc
frstpm(287
fadd
mov
iret
out
loop
sti
fcos
std
std
stc
cmp
cmp
fcomip
out
jmp
ret
loopne
jmp
int
call
repnz
fistpll
repnz
fsub
call
repz
mov
xchg
aaa
ljmp
repz
ljmp
sti
fcmovnu
enter
or
ret
cmp
enter
std
cmpb
cmpb
out
fcmovb
stc
std
int3
nop
in
subl
leave
sti
out
out
lock
cmp
ret
out
jmp
ds
into
jecxz
xchg
int
aaa
xor
out
vpandn
in
call
cld
xchg
addb
mov
ljmp
out
int3
imul
cmp
rcr
sti
cld
ljmp
orb
iret
int
sti
sti
ljmp
out
ds
xchg
xchg
stc
cmp
icebp
cld
jecxz
xchg
mov
loope
xor
jmp
enter
int
cmp
jmp
movb
mov
xor
cmc
loope
fdivrl
ret
cld
cmp
in
xlat
jmp
nop
loope
xchg
aaa
jecxz
aad
repz
into
cmc
cmp
in
repnz
fadds
out
in
aad
aas
sub
rol
shll
imul
cmc
fiaddl
add
loope
int
in
xchg
out
jmp
out
fsubr
fdivs
int
in
stc
loopne
std
fiadds
fcmove
ljmp
cmc
in
sub
cmc
cmp
ljmp
out
xlat
cli
mov
in
mov
ljmp
ss
into
int3
repz
ret
loope
mov
in
shr
lock
into
sti
enter
int3
ffree
sarb
fsub
loopne
cli
sar
int3
loop
xchg
pop
aad
fcmovnb
enter
cmc
not
std
rcr
ljmp
cli
call
ret
out
cli
div
idiv
dec
neg
ret
xlat
xchg
xchg
ret
ret
fmul
iret
das
iret
lret
out
aam
out
icebp
imul
ds
in
add
sti
jecxz
loope
int
jmp
xorb
ljmp
std
stc
neg
into
cmp
decl
add
lret
aam
fstp
fisubrl
push
int3
jecxz
shlb
flds
jl
aas
orl
leave
lea
xor
lret
stc
fcomip
fld
repz
aad
mov
xlat
mov
ret
in
sti
repz
xchg
cmc
les
fmul
out
dec
repnz
loop
aad
inc
in
sti
mov
orl
hlt
leave
aas
idivb
test
cli
cld
xchg
aam
or
call
ljmp
dec
stc
in
fistpll
mul
neg
in
div
xchg
loopne
leave
ljmp
stc
cmp
sar
ds
std
hlt
mov
xor
mov
mov
xor
iret
int
stc
lret
int
cmp
loop
out
mov
fists
div
rcl
stc
loope
sti
sub
fcmovb
repz
fcmove
mov
mov
call
call
cmc
rcl
loope
jmp
mov
cli
mov
mov
ficoml
out
lret
cmc
aam
cmp
lret
in
aam
idiv
mov
in
out
into
or
fyl2x
jecxz
imul
xor
xor
addl
rcl
out
test
cld
ret
iret
fisttps
aam
shr
sar
aaa
into
sar
ror
inc
cmc
clc
fiadds
out
mov
out
jmp
int
iret
enter
rcl
iret
addl
ret
addl
cmp
aam
sti
stc
repz
xchg
in
orb
test
nop
mov
hlt
xor
ss
ror
stc
repnz
fucom
adc
decb
ror
into
ret
fcmovnb
repz
rcl
cmc
fsubp
std
test
fadds
xor
loope
mov
bnd
cmp
rcl
iret
in
sar
repnz
testl
aad
stc
in
sti
fcomi
out
sti
aam
stc
faddl
rorl
icebp
mov
clc
lret
call
call
lock
cmp
xabort
cli
or
mov
mov
shr
nop
ret
aaa
aaa
mov
call
repnz
lock
xchg
aam
test
mov
lret
mov
das
out
in
aad
repnz
lret
fadds
shl
shl
leave
jmp
lds
mov
xor
in
out
hlt
xor
fcos
out
in
ret
ret
xlat
xlat
aad
sti
sub
mov
filds
int
cmp
xlat
aam
out
cmp
loop
cmp
std
repz
rol
adcl
leave
xlat
jmp
fdivrp
iret
fdiv
jmp
cli
mov
out
shr
xchg
ljmp
lock
cmpb
fdiv
out
flds
fsub
out
lret
fsincos
rcl
aam
roll
cmp
rcl
cli
div
jmp
fucomip
int3
icebp
mov
jecxz
in
aaa
shl
ror
hlt
ret
cmpl
shr
bnd
out
ljmp
in
rol
fcom
fnstcw
in
mul
cmp
in
cmp
test
fdivr
or
enter
xchg
sub
rcr
aad
out
ss
fdivp
clc
mov
fisttpl
xchg
fdecstp
in
shll
jmp
fxch
ret
test
ret
testb
shr
in
repnz
fdivrs
lret
xlat
fucomip
stc
cli
xor
xlat
cld
call
lea
xor
icebp
ret
repz
int3
fmul
out
in
or
rolb
testl
iret
lock
leave
cmp
fcomip
icebp
hlt
cmp
hlt
fld
cmp
mov
loop
leave
icebp
xor
cmp
in
not
test
xchg
clc
in
std
in
fsubrp
xchg
out
fxch
out
xlat
mov
fcmovbe
stc
hlt
fdivrp
out
hlt
in
leave
loope
fnstsw
xchg
aad
jmp
repnz
add
or
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
jmp
iret
into
ret
ror
aad
addb
push
add
push
add
shr
aam
cmp
hlt
in
xchg
cli
mov
int
out
sar
cmp
sti
cmp
fcmovu
std
xlat
repz
idivl
addl
lea
int3
cmc
ror
cmp
ljmp
loope
loop
cld
test
les
out
ljmp
add
icebp
cld
hlt
jmp
out
lret
in
in
mov
ret
in
icebp
int3
cmp
ret
call
in
testb
loope
sarb
cmp
cmp
cmp
rcr
fst
leave
enter
sti
lret
lock
nop
rol
out
int
out
out
shl
fdecstp
rol
rcr
jecxz
sti
std
leave
mov
icebp
out
in
and
loopne
sar
clc
cmp
in
std
out
fnstcw
fcmovne
loope
test
in
cli
loopne
fiadds
vpmaddwd
fistpll
std
xor
jmp
hlt
sti
mov
ror
mov
nop
out
div
ss
aaa
xor
fsubrp
sti
shl
xchg
stc
rolb
out
out
jecxz
bnd
cmc
leave
leave
sti
std
cmp
rol
sbb
jecxz
mov
into
lock
into
xchg
int3
aam
ret
lret
fiadds
clc
shl
in
xchg
out
xchg
loopne
lock
fcmovne
in
aam
clc
cmp
repz
fcmovnb
xchg
jmp
aam
loopne
hlt
in
clc
fdiv
cmp
fadd
aad
jmp
test
enter
out
xchg
xchg
ljmp
not
ds
roll
fcmovne
mov
decl
xor
ror
fdiv
cli
xlat
fcmovu
ljmp
repnz
incl
test
cld
divl
loope
xor
cmp
std
loope
into
out
mov
icebp
in
test
cmp
in
xlat
int
fnstcw
sti
std
icebp
roll
movb
mov
clc
aaa
into
lock
into
cmp
cmp
loope
cmc
in
rcl
movl
in
out
sub
in
loop
aaa
int
aas
cmc
lock
enter
mov
call
jmp
xor
aas
sti
aas
cmp
lea
cli
decb
rol
cmp
cli
fldln2
shr
call
ds
loopne
rolb
sti
addl
xor
int3
xlat
fscale
stc
aaa
std
test
ljmp
cmc
fsub
jmp
fmul
lret
leave
fnstenv
clc
sti
hlt
std
jmp
int
in
jmp
fmull
jecxz
hlt
cmp
neg
cmp
cmp
not
ffreep
fcmovnbe
xchg
mov
lock
fdivp
shl
xor
cld
sti
hlt
in
ss
ds
rolb
mov
orl
imul
xlat
into
in
cmp
aad
xor
aas
ret
shl
sti
fsub
mov
stc
fdivrp
cli
test
nop
xchg
test
shl
xor
cmc
aas
int
aad
rolb
and
xlat
jmp
iret
lret
lock
ss
call
test
rcr
icebp
shl
into
cmp
in
cli
mov
out
in
int
shll
cli
cmp
lret
leave
ds
repz
ret
ljmp
xchg
into
icebp
shr
loopne
out
lock
out
in
cmp
stc
repz
fdivr
ret
not
in
in
in
sub
into
int3
aas
vshufps
lret
cld
in
fstpt
iret
lock
fcom
xlat
mov
decb
std
cmp
cmp
call
repz
mov
test
xchg
iret
leave
cmc
shr
cmp
hlt
cmp
jmp
sar
loope
cmc
jecxz
orl
enter
cmc
xor
fcmovnbe
into
into
aam
xor
clc
les
loopne
decl
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
pushl
pushl
push
pushl
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
adc
mov
add
mov
orl
xor
sub
mov
xorl
add
movzwl
movl
mov
movl
movb
sbbl
lea
dec
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
orl
mov
mov
xor
incl
sub
xorl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
jmp
ret
rcl
rol
aad
nop
push
pop
rorl
sbb
lret
jl
loopne
out
out
lret
shl
int
into
cld
cli
sti
out
cld
adc
jecxz
loope
int
out
xchg
xchg
leave
cmp
clc
fucomp
jmp
ljmp
out
cmc
sar
mov
xlat
ror
sti
or
repnz
aaa
iret
xor
cmp
in
cli
sti
cmp
aas
fcmovnb
sbb
and
shl
and
xor
sub
cmp
aaa
repz
aam
std
loopne
rcr
jmp
in
loop
shlb
cmp
leave
std
fstpt
aaa
loope
sti
fdiv
xchg
std
in
orl
stc
cmp
icebp
iret
xor
sar
sarb
filds
in
out
leave
mov
sub
iret
in
stc
rcl
icebp
fucomi
fsubr
neg
and
in
ljmp
repnz
ror
cmc
repnz
ss
fcmove
cmp
int
xlat
shr
out
cli
div
leave
ljmp
out
aad
sub
cmp
icebp
in
cmp
ret
hlt
fdivp
cmpl
std
loop
sti
int3
mov
xchg
in
ljmp
sti
shl
out
not
adc
ds
ljmp
enter
sti
jmp
ljmp
ljmp
enter
xchg
lock
jmp
fsubr
clc
std
fistpll
movl
xchg
sar
repnz
out
enter
xor
aaa
lret
test
testb
in
out
mov
enter
in
cmp
aaa
in
int
loope
adc
leave
mov
sti
in
adc
enter
icebp
jmp
in
xlat
aaa
clc
sar
rol
inc
fcmovne
test
rcll
lret
shl
loope
repz
mov
leave
jecxz
xor
iret
fsubr
mov
out
aaa
repz
divl
in
leave
stc
aaa
sub
idiv
xchg
clc
ficoml
out
enter
lret
stc
call
ret
xchg
xlat
std
sbb
cli
jmp
xor
in
fdivl
lock
hlt
ds
cmc
stc
test
cld
xlat
ljmp
jecxz
nop
lock
int
icebp
xor
fcmovb
out
jecxz
aad
rcr
std
in
ret
flds
mov
xlat
cmp
aam
ss
fst
stc
clc
cmp
in
repz
shl
loopne
in
xchg
shr
int3
repnz
shlb
clc
leave
out
cli
ror
lock
fdivrl
in
ret
div
inc
neg
fmul
loop
lret
out
ss
shr
fnstcw
aad
bnd
clc
rcr
cmp
fxch
in
sbb
cli
lea
idiv
xor
neg
fst
rcr
rcl
in
hlt
cli
clc
out
cld
ret
fmul
out
jmp
call
out
jecxz
call
fnstcw
aas
out
mov
orb
in
cs
ss
aam
cli
cmp
fnstsw
xlat
hlt
hlt
not
lret
in
fimull
fstl
xlat
iret
aaa
cmp
loop
roll
ret
std
test
loopne
repnz
repz
jmp
idivb
cmp
clc
test
ret
div
in
in
repz
or
divb
iret
jmp
ds
iret
cmp
mov
mov
nop
xchg
mov
int3
shr
call
cmp
clc
int3
xlat
repz
cld
and
cld
ret
int
ss
rol
hlt
int3
jmp
icebp
cmp
in
rcr
loopne
fdivrp
in
fucomip
orb
shlb
cmp
out
fcmovu
sti
int
jmp
ss
loopne
vpxor
loopne
loop
xchg
faddl
xor
int3
dec
cmp
sti
jmp
xorb
sbb
call
mov
fucom
xchg
fsubr
xor
xor
ljmp
cmp
sar
mul
xchg
fsubr
fsub
int3
cli
xchg
fmull
xor
xlat
rol
inc
lock
dec
or
push
xor
mov
add
jmp
jmp
aad
shlb
rclb
pop
jl
lret
jl
leave
xor
cmp
sti
fdivrl
add
ror
nop
aad
jmp
fnstcw
ljmp
lock
cmc
into
hlt
testl
loope
test
out
ror
aad
repz
lret
cmp
fcomp
hlt
cmp
mov
out
int3
in
in
in
out
ss
xlat
cmpl
xor
ds
cmp
jmp
out
lret
repnz
cmc
fstpt
in
cmp
test
fucomi
loope
sub
jmp
leave
sub
call
fdiv
in
fsubp
rcl
ftst
clc
rcr
fildl
aad
xor
div
mul
int3
call
icebp
jecxz
loope
test
les
icebp
mov
lret
in
xor
aaa
in
in
ljmp
fidivrs
mov
loope
adc
into
jecxz
jecxz
fmul
cmp
lret
xlat
std
sar
ds
les
in
cld
out
loopne
in
stc
aaa
stc
into
lret
cmp
iret
fnstcw
adc
cld
fld
stc
decl
lret
call
ret
cmp
out
lret
out
jecxz
aam
aam
fsubr
mov
aad
mov
xchg
addb
enter
aaa
sti
cmp
hlt
cld
rol
ds
testl
call
lock
enter
jmp
cld
cmc
stc
enter
loope
loop
loopne
icebp
ljmp
cld
aad
ds
out
in
std
fadds
fcmovnb
leave
cli
enter
loop
into
hlt
fmul
xlat
in
xlat
hlt
cld
int3
ret
out
out
fchs
aad
add
fimull
int3
lds
rcr
stc
loope
in
out
std
cmp
repnz
fdivr
orl
leave
shr
icebp
enter
xor
cld
aad
rol
in
in
aad
fsub
sti
incl
aam
in
sar
call
fdivr
cmc
int3
fdiv
shl
cli
and
out
jmp
rorl
leave
out
cmp
icebp
repnz
fsub
jmp
neg
and
dec
jmp
ljmp
out
repz
lret
fmul
xor
repnz
int3
in
jmp
out
test
enter
xor
fucomi
leave
leave
out
cld
cmp
in
int3
std
stc
rcr
clc
cmp
in
out
ljmp
shlb
fcmove
jmp
cmp
enter
std
shl
into
xchg
std
fmull
lret
mov
int
aaa
iret
xor
xor
int
cmp
cmp
in
mov
out
clc
xchg
icebp
test
xlat
ror
sub
cmp
cmp
aaa
xchg
rcl
incb
cld
mov
enter
lret
repz
sar
sar
inc
rolb
enter
mov
xchg
loope
loop
in
rol
call
idivl
cmp
cmp
out
enter
jmp
cmc
iret
lret
lock
lock
cmp
sarb
cmp
addb
loope
iret
rol
loop
out
shl
fsubr
cmp
lock
aad
testb
xor
into
xlat
xor
cmp
cli
in
incb
hlt
std
in
lds
mov
xlat
iret
aaa
stc
xor
lret
shr
cmp
sarb
cli
movb
hlt
sub
stc
lock
in
repz
fucomip
cld
bnd
clc
jecxz
sub
lret
xor
xor
jmp
in
out
into
aam
adc
fldl
push
xchg
ljmp
out
out
out
cmc
loopne
addb
xchg
test
mov
cmp
clc
iret
cmp
cmc
into
idivl
fmulp
repnz
rcr
addb
out
mov
lret
int
in
jmp
fcomp
rcl
clc
cmp
cld
clc
mov
mov
jmp
rol
aad
aad
fcmovne
scas
push
mov
add
pop
push
pop
jl
lret
jl
sub
jmp
fsub
xchg
leave
ror
lret
mul
fnstenv
hlt
ret
push
repnz
mov
or
clc
repnz
clc
stc
neg
roll
ljmp
mov
fmul
xor
aad
enter
aad
cmp
addb
shl
xchg
loope
lds
hlt
aam
idiv
icebp
fstp
ds
ffree
iret
or
aas
rcl
lock
out
cld
jmp
rcl
loop
idivb
sti
les
out
xchg
fisttpll
fcom
in
aas
cmp
rolb
rol
lret
jmp
fiaddl
enter
cmp
stc
xor
and
sti
out
incb
incl
ljmp
ror
cld
fst
cmp
fldln2
repnz
fincstp
hlt
std
ret
aas
in
div
in
loopne
xchg
mov
out
repz
out
in
cmp
fcomip
aas
and
test
loop
ljmp
mov
loopne
in
cmp
xlat
fcom
testb
jmp
stc
loope
iret
loop
in
rcl
int3
in
out
std
shr
fdivp
int3
fucomp
sub
repnz
leave
and
in
fimuls
ret
div
in
call
std
cmp
xor
les
clc
call
addb
ret
aam
cmp
out
rol
sarb
rcr
vpavgb
in
fdivrp
or
in
xor
ss
xor
or
call
neg
test
xchg
iret
call
cmp
cmp
shl
fstp
fadd
call
clc
lret
into
in
out
mov
vpsrld
xor
call
aas
cmp
jecxz,pt
lret
leave
out
fiaddl
sub
test
fdivr
iret
shl
cmp
fdivr
loope
div
lret
loopne
lret
lea
repnz
int
cmp
int3
sbb
cld
repnz
stc
xor
int3
mov
repz
jecxz
enter
fst
int3
loop
clc
test
hlt
inc
sti
fcmovnb
out
iret
nop
sar
test
cmp
std
call
cmp
sar
imul
mov
mov
out
fmull
mov
hlt
cmc
cmp
cmp
hlt
fidivrs
in
xor
add
shr
mov
call
into
in
jmp
rol
cmp
xor
icebp
in
cmp
ds
out
clc
xlat
loopne
jmp
nop
lock
out
int
rcr
cmp
loop
neg
jecxz
hlt
ljmp
out
in
jmp
fcmovnbe
icebp
iret
ljmp
roll
ret
loopne
out
lret
xor
in
sub
cmp
out
shl
cmp
in
fcmovnbe
decb
in
xchg
fsubr
mov
jecxz
rol
ljmp
fcomi
sti
repz
test
ds
xchg
mov
and
cli
jmp
int
vcvttpd2dq
lock
clc
lock
rol
cli
int
cmp
lret
out
repnz
jmp
fsubrp
lret
faddp
out
out
enter
mov
sti
into
xor
jmp
repnz
xor
incb
fdivrp
mov
loope
icebp
or
iret
in
xor
out
fcmove
out
fcom
adc
cmp
mov
cld
in
out
loopne
mov
loop
xchg
leave
fdivp
xor
aad
lock
clc
aad
loope
jmp
testb
shrl
out
shl
enter
out
add
out
jecxz
fcmovbe
call
lret
mov
lock
cmp
cmp
aad
lock
repnz
xlat
out
repz
sti
mov
mov
shl
xlat
hlt
cmp
stc
leave
fcom
fxch
idivb
shl
xlat
loop
loope
mov
in
add
in
fsubp
into
flds
clc
inc
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
jmp
aad
xor
das
mov
jl
add
out
out
cmp
ds
lock
cmp
mov
ror
shl
icebp
aad
rcl
imul
xlat
call
cld
cli
loop
clc
loope
in
sbb
fisttps
in
aaa
das
leave
cmp
cmc
std
loopne
cld
sti
ljmp
clc
lds
neg
out
cmp
aas
fmul
jecxz
adc
stc
test
ret
frndint
in
mov
fidivs
out
cmp
xor
cmp
repnz
test
enter
fisttpl
cli
xchg
lret
cmp
rcl
lds
movl
iret
call
into
cmp
int3
rcl
cmpb
int
hlt
neg
stc
xchg
in
aad
xchg
out
shl
sarb
aam
into
jmp
fnstcw
icebp
cmp
in
ret
shl
fmulp
icebp
icebp
fmull
fcmovbe
clc
fsub
lret
xlat
sar
repz
hlt
fsubp
xchg
call
stc
ret
xor
enter
hlt
cmp
xchg
fidivrl
repnz
cmc
ds
faddl
hlt
imulb
int
cmc
repz
enter
call
cmp
sti
call
out
leave
fiadds
jmp
lret
neg
fdivrp
aam
shl
cmp
jmp
out
int
lock
sub
hlt
cmc
imul
call
cmp
fneni(8087
cli
ret
xor
in
in
mov
xchg
addl
vpand
in
fidivrs
loope
cmp
test
mov
lock
rorl
in
fnstenv
ror
jecxz
or
in
in
out
loopne
call
sub
xor
aaa
cmp
int3
cmp
rcl
rol
loope
decb
xchg
nop
fmulp
fildll
in
cs
aad
lret
jmp
fsubr
bnd
xchg
loop
iret
ljmp
rcr
enter
hlt
jmp
rcl
cmp
cld
fucomp
ds
loopne
xchg
out
out
rol
aaa
ss
bnd
adc
loopne
rcl
leave
jmp
mov
fmuls
iret
cmc
mul
iret
out
shr
repz
iret
std
and
repnz
ljmp
nop
lret
cs
cmp
out
cmp
stc
test
test
fsubp
xchg
decb
in
lret
cmc
icebp
hlt
aad
imul
xor
fcom
out
mov
jecxz
int
cld
out
lret
in
out
rol
cmp
lock
fstp
clc
ret
rol
test
std
repnz
shr
in
leave
sar
rcr
jecxz
repz
ret
fmul
mov
xor
out
out
out
repnz
aaa
add
hlt
in
hlt
lret
ror
ljmp
mul
iret
lret
clc
cmp
shl
aas
jecxz
hlt
xchg
ljmp
call
xlat
shlb
repz
rolb
test
addb
test
loopne
hlt
mul
int3
out
clc
cmp
cmc
shl
loope
jecxz
addl
mov
ret
into
out
sarl
cmp
cli
shl
xchg
xchg
in
fstp
mov
xlat
int
sub
cmp
divl
lock
cld
xchg
dec
in
rclb
repz
cmc
std
stc
jmp
cmp
out
aam
enter
sub
iret
imul
int3
in
sub
loope
cmc
fdivr
rcl
loopne
mov
fiadds
icebp
xorl
aam
xor
div
repz
ffreep
mov
les
clc
in
call
sub
cmc
in
int
enter
loop
inc
lock
clc
ljmp
rcl
int
lret
out
rcl
clc
in
cmp
repnz
xchg
add
add
jmp
ret
int
lret
sub
fsubrs
fs
lret
jl
ffree
filds
leave
mov
hlt
cmc
out
clc
xor
hlt
out
not
cmp
aas
repnz
xchg
add
lock
mov
jmp
stc
aaa
jmp
ret
ret
out
repnz
ret
in
icebp
int3
lret
in
out
int3
into
icebp
in
xlat
out
rcl
xchg
in
fcmove
mov
and
call
call
ret
shr
fildl
loopne
idiv
call
lock
ror
lret
iret
iret
repz
lret
iret
shl
in
cmp
aam
call
std
mov
iret
int
in
cs
repz
or
test
add
orb
ljmp
jmp
repz
out
cmc
cmc
xlat
fsub
aad
in
mov
int
xchg
jecxz
cli
jecxz
loop
hlt
ret
clc
in
sarl
fcmovnbe
hlt
filds
jmp
out
loop
nop
das
in
ss
xlat
iret
fdiv
cmp
rcl
fcmovnu
mov
out
out
in
fsubrp
or
xor
xor
repz
test
shl
rcr
sti
int3
jmp
rorb
int3
cli
out
out
cmc
sub
clc
aas
loope
sti
out
leave
loope
test
ficoml
lds
in
aaa
in
ljmp
ret
jecxz
out
in
std
mov
test
in
ds
sub
out
leave
cmp
cli
shl
out
cmp
sbb
in
in
leave
shll
stc
int
aad
cmp
ds
out
mov
aam
xlat
cli
iret
in
out
addb
cmp
sar
out
shl
cmp
imul
les
xchg
xchg
out
ljmp
repnz
ljmp
fadd
loope
enter
or
call
fiaddl
loop
xor
sti
jmp
ret
icebp
fcomp
test
orl
xor
sti
rcl
call
shr
sti
cli
aas
icebp
clc
idiv
aad
aas
in
out
cld
incb
repz
lret
cli
faddp
cld
call
xchg
orl
int
filds
out
icebp
aam
xor
ljmp
cmp
aad
les
in
ljmp
fdiv
into
enter
shl
cli
sbb
adc
mov
cld
lret
lock
shl
or
repz
idivb
cmp
into
cmp
ffree
aam
faddp
in
clc
loope
leave
cld
hlt
xchg
das
xlat
xor
aad
xlat
jmp
lret
and
in
div
cld
iret
leave
fldl
das
sub
aam
repz
shr
neg
cmp
jecxz
clc
repz
jmp
int
shl
iret
sub
stc
jmp
xor
ret
fcomi
sti
loopne
out
loopne
out
loop
in
out
enter
int3
fmul
iret
iret
out
cmpb
sbb
adc
jmp
ss
out
xor
cmp
shl
xor
loope
decb
out
jmp
inc
xor
ss
sub
cmc
fadd
sti
sti
cmp
repnz
in
mov
jecxz
out
xor
clc
fprem1
fidivrl
ljmp
int3
sar
xlat
enter
addl
cmc
out
shlb
xlat
lret
loope
out
cli
mul
aas
out
shl
cmp
out
in
sbb
loopne
test
aaa
leave
int3
cli
int3
repz
call
out
out
rcll
in
xor
aaa
fnstsw
sti
adc
test
aad
out
lret
jmp
mov
in
rol
loopne
loopne
cmp
ss
cmp
repz
ret
lds
icebp
repz
xor
ds
out
ss
stc
lock
shr
ljmp
lret
lret
xchg
movzwl
mov
mov
jmp
ds
int
int
int
mov
xor
popa
mov
lret
jl
jmp
lock
enter
rcl
int3
xchg
lock
clc
lret
or
fiaddl
in
repnz
ss
aas
idivb
fcmovnu
lret
aam
fcomi
ret
lret
test
jmp
in
xchg
int3
out
int
clc
repz
cmp
cli
ljmp
vpmulhuw
hlt
out
ljmp
xchg
in
stc
ljmp
fdivs
cli
fnstsw
stc
jecxz
cli
lock
in
mov
filds
out
lret
sar
jmp
div
in
filds
fmul
enter
out
into
in
aad
ljmp
call
cli
incl
fsubp
jmp
and
out
cmc
call
sti
cmp
loope
fsubp
addb
adcl
int
in
aad
into
sar
ret
cmp
rcl
mov
loopne
out
in
out
xor
xor
lret
adc
cmp
stc
leave
cld
test
stc
loop
loop
xchg
leave
repz
fnstenv
cmp
rol
lock
xor
clc
int
shl
out
loope
xor
xlat
lret
xor
iret
aam
into
repz
testb
flds
xor
out
lret
aaa
cli
div
ror
aam
shl
ret
lret
mov
xchg
stc
les
stc
aam
div
loopne
std
sar
jmp
xchg
xlat
xchg
hlt
std
out
sti
xor
hlt
imull
xor
lret
ror
in
ljmp
jecxz
faddl
out
in
repz
sub
div
leave
out
int
repnz
lret
cmc
loope
ret
movl
out
test
mov
ss
lret
cli
out
imul
shl
out
shl
in
sti
fyl2xp1
addl
xlat
ljmp
div
cli
fiadds
cli
xchg
xchg
lret
fmul
rcr
in
cmp
cli
cmp
aam
out
fdivrs
fmulp
sbb
jmp
leave
out
call
in
icebp
lret
lret
idiv
aad
lret
repz
mov
ljmp
adc
icebp
in
aaa
sub
std
into
cmp
in
or
ds
loop
lock
test
fmul
lret
jecxz
rcl
hlt
in
ljmp
loopne
rcl
jmp
fst
mov
int
icebp
xchg
out
shl
shl
fsincos
lock
hlt
not
xchg
clc
and
jmp
in
cmp
lret
cmp
into
cmp
cmp
out
mov
mov
dec
lock
repnz
les
fnstsw
ss
cld
fdiv
rcr
cmc
cmp
or
out
mov
mov
call
fcmovb
test
mov
xchg
xchg
jmp
icebp
repz
cld
cmp
loope
in
cmp
sar
fadds
cli
roll
in
enter
hlt
xor
rol
cmp
into
lds
test
int
sub
xchg
into
mov
into
mul
leave
aam
cli
rcr
rolb
fdivrl
out
fucomp
stc
enter
mov
rcl
jmp
sti
shr
fdiv
cld
stc
fadds
aam
out
sub
xchg
int3
loope
mov
xor
out
fstpt
out
cmp
in
rcr
aam
loop
mul
fsubp
icebp
loope
call
cmp
sarb
cld
lock
fcmovb
rcr
inc
mov
ffree
loopne
decl
xor
xor
in
in
aas
ds
dec
fdivr
fsqrt
mov
fucomip
cmc
repnz
cmc
lret
ret
std
iret
cmp
cmp
dec
cld
stc
out
sar
hlt
call
shl
in
in
xor
iret
fmul
imul
repz
fldl
out
cld
shl
stc
xor
hlt
fnstsw
fdivrl
aad
out
movzwl
xor
add
mov
jmp
rcl
ret
fst
xlat
inc
dec
push
lods
daa
jne
or
jl
add
test
fcomp
stc
fsubr
ljmp
xchg
nop
rcl
test
fdivrp
xlat
rcl
in
ret
aad
add
fsub
vpaddsw
loopne
and
in
xor
lret
int3
fucomp
sar
shl
icebp
ffreep
cmp
loopne
out
in
in
cmc
divb
hlt
cmp
stc
stc
repz
cmp
hlt
test
clc
lock
fsubr
ljmp
int
icebp
jmp
fstpt
in
aad
ds
sar
fucom
into
into
out
repnz
xchg
fsub
cmc
xlat
sub
test
fsubr
xor
repnz
mov
xchg
cld
int3
sbb
std
ljmp
rcr
in
fldl
loope
loop
hlt
fisttps
mov
xor
in
xor
xor
fcmovu
std
in
in
cmp
out
enter
xchg
out
in
not
hlt
in
sti
xor
ffreep
sarb
aam
xchg
test
loop
test
lret
mov
adc
jecxz
jmp
int3
aad
loopne
loope
movb
loop
fmull
in
out
int
out
out
fsubp
cmp
fsubp
repz
fimuls
jmp
ljmp
xor
iret
out
imul
in
cmp
fpatan
loop
xlat
test
mov
std
enter
xor
in
xor
cmp
xor
stc
sti
ror
sarb
fld
mov
mov
lret
and
icebp
das
fcom
clc
cmp
cli
lret
lock
stc
cmc
sub
rcr
ret
mov
rcl
in
loope
cld
iret
int
lret
shr
repz
jmp
loope
icebp
mov
aas
clc
ljmp
loope
sub
stc
into
lock
in
out
lock
aaa
ss
roll
mov
xor
mov
jecxz
xor
in
lock
icebp
aaa
fcompp
cmp
ret
rolb
test
out
int
sub
aad
sub
repnz
enter
cmc
xlat
cld
rcl
fldl
int3
mov
out
mov
int3
in
ss
xlat
jmp
ror
int3
cli
aas
sar
xlat
aad
mov
out
in
xchg
call
repz
fnstcw
int
cmp
in
shr
addb
sbb
xor
das
leave
cmp
cli
jmp
cmp
ret
jmp
in
ljmp
cmc
das
ret
lret
repnz
imul
cli
fucom
aam
out
loop
cld
jmp
clc
clc
test
cmc
div
hlt
int
test
cmpl
iret
clc
aad
jecxz
jmp
out
enter
lock
lds
idivl
hlt
cmp
cmc
cmp
cli
rcr
idivl
std
mov
out
mov
lret
fdivs
fdiv
cld
aas
fadd
fst
out
out
out
cmc
dec
fxam
iret
in
xchg
xlat
out
sti
shr
cmc
shr
fcmovnbe
fsub
out
icebp
fdivr
sbb
std
fmul
mov
int
int3
jecxz
loop
aad
repnz
stc
clc
cmp
loope
std
addl
std
ret
jecxz
jmp
sti
cmc
into
clc
or
in
loop
sub
or
int
loope
jecxz
jmp
shr
fidivrs
repnz
rcl
call
flds
in
ljmp
out
aad
imul
in
xchg
aam
out
xchg
xchg
sub
aad
out
lret
xor
rol
ret
xlat
test
jmp
int
mul
xor
cld
shrl
loopne
call
cmp
roll
loopne
cld
aad
xchg
icebp
int
test
das
loop
cs
int
int3
cmp
sti
std
stc
cmp
xchg
filds
iret
std
test
ds
aam
leave
std
clc
sbb
not
or
call
test
nop
xchg
sub
test
lret
lret
cmp
cmc
shl
ret
xchg
mov
fldl
test
inc
hlt
jmp
aad
enter
fsts
jge
nop
fdivs
jl
add
in
xchg
ror
ss
out
repz
fdivrl
cli
addl
fmul
loop
fucomip
lret
aad
int3
enter
lock
aaa
out
cmp
cli
repnz
xlat
xlat
call
leave
rcll
repz
repnz
into
jmp
fcmovnbe
icebp
xor
in
addb
fistl
fnstenv
iret
div
aam
lock
loope
sti
mov
les
mov
loopne
clc
shl
int3
ljmp
rol
clc
loop
lret
xchg
clc
mov
enter
enter
loop
cmp
out
ror
std
in
hlt
shl
loopne
loop
addl
lock
in
test
lret
out
out
fistpll
cli
cmp
out
stc
ror
enter
in
repz
leave
cs
aam
cli
jmp
into
faddl
call
cli
loopne
adcb
aaa
cmp
cmp
stc
lret
ds
neg
cld
test
jmp
clc
out
loop
shl
iret
out
out
in
jmp
sbb
in
ret
lea
adcb
shll
in
repnz
xor
cmc
fcom
in
cmc
xchg
sub
test
xor
rcl
fnsave
lret
aas
shl
aas
adc
ret
std
lret
cld
into
adcl
int
lret
xlat
call
aad
fcomp
cmp
ds
loope
clc
sub
int3
sub
shr
cmp
ljmp
loop
aad
aad
decl
ljmp
loop
clc
out
std
lret
iret
cmc
lds
test
fiaddl
divb
fcmovnb
std
xor
std
sarl
aas
xlat
test
jmp
fucomip
rcr
xchg
iret
lret
cmp
leave
aas
adc
clc
shl
loope
xor
xchg
jecxz
lret
loopne
cs
ret
icebp
cmp
not
repnz
incb
mov
in
jmp
xchg
loope
ror
lock
xor
in
fdiv
lock
cmc
ret
faddl
in
jmp
in
lea
repnz
repz
sar
lock
cmp
stc
ret
loop
jecxz
fmul
fcmovu
lret
into
test
jecxz
stc
xlat
idiv
ds
loopne
fxch
fdivr
test
clc
out
jecxz
into
int3
cld
add
lret
xor
lret
dec
repz
xor
in
loope
loop
out
lret
rcl
imul
lock
enter
ret
addl
test
enter
ror
fmulp
shl
rol
cli
out
lret
adc
xlat
fadd
repz
fmulp
mov
shl
enter
std
fcmovbe
adc
test
idiv
xlat
iret
into
int
in
xchg
in
not
in
repz
fcomp
lret
cld
shl
fiadds
test
mov
mov
xchg
repz
in
in
fcmovnu
in
jmp
ljmp
ret
incl
xchg
xchg
ror
fdivrs
xor
in
neg
rol
idiv
xchg
mov
clc
fisttpll
repz
lret
xlat
in
stc
lock
loope
rcr
aas
test
neg
idivb
call
mov
in
fsubp
out
shl
out
cmp
leave
std
imul
cli
cmp
mov
clc
sbb
fcmovu
orl
in
call
aam
fdivrp
int3
fcomip
shl
aad
mov
in
rorl
lret
out
jmp
clc
fcomip
not
test
fisttpll
std
cld
or
shr
ss
cmc
cmc
into
xchg
loop
sbb
mov
ljmp
sti
repz
shl
loope
out
into
loop
lret
out
call
out
cmc
hlt
iret
repz
idivl
icebp
sti
inc
jmp
lret
xlat
aas
fst
fcmovne
mov
imul
lret
jl
aad
out
int3
inc
stc
loope
sti
sti
out
test
std
int
loope
xchg
in
loop
int
xor
les
xlat
int
in
aam
out
shl
repnz
mov
cli
cmp
test
test
add
call
out
mov
xor
hlt
call
jmp
iret
rcl
out
cmp
rol
idiv
xchg
fimuls
cmp
sar
loope
repnz
loope
iret
xchg
roll
cmp
nop
in
loopne
ss
cmp
sarl
loop
jmp
in
ret
mov
shrb
neg
imul
aad
repz
cmp
stc
in
fucom
clc
flds
jecxz
addl
into
cmp
ljmp
in
out
mov
fcmovu
mov
int
in
xor
jmp
imul
repz
cmc
in
in
ljmp
mov
fbstp
xlat
fcmovnbe
int
cmp
ss
clc
cli
cmpb
push
lret
stc
out
loop
inc
shr
ljmp
std
rol
ds
fucom
adc
mov
test
jecxz
cmp
ss
call
in
icebp
icebp
cmp
in
leave
leave
flds
loope
int
aam
cs
cmp
ljmp
cld
clc
aas
fcmovnbe
aam
in
xchg
lret
rclb
shl
out
cmp
aad
repnz
sar
incb
enter
jmp
ljmp
enter
call
fdivp
fsubp
iret
hlt
fldl
pop
int3
repz
xchg
xchg
leave
ror
rcr
aad
frndint
ss
fstpt
fmul
loop
ret
fiaddl
mov
out
rcl
cmp
fcmovu
into
repnz
sti
or
aam
jecxz
mov
mov
mov
int
xor
sarl
int3
fucomip
loope
int3
cli
cmp
ljmp
out
in
call
vcmppd
clc
int
dec
in
rcr
jecxz
fdivr
ljmp
clc
mov
jmp
jmp
lock
out
repz
repz
jmp
jecxz
xchg
stc
sar
call
fiadds
xor
cmp
loope
fucomip
loope
in
clc
ret
xchg
xchg
shr
aam
in
icebp
xor
aad
aam
cmp
stc
xchg
fisttpl
loopne
les
ss
out
iret
hlt
sar
shl
out
decb
sti
in
lock
ljmp
rcl
in
loop
loopne
jmp
in
out
iret
out
repz
into
int
int3
shr
out
cmc
aam
ds
in
loopne
lret
mov
imul
fsubp
leave
repnz
nop
sub
sub
in
f2xm1
out
in
xlat
iret
test
ds
clc
sbb
int3
icebp
mov
loopne
xchg
xlat
rcl
ret
xor
leave
enter
cld
fidivrs
neg
aam
mov
stc
addl
test
out
cmp
fyl2xp1
sti
fst
test
test
test
jmp
fcoml
ss
in
xor
rcr
rcl
in
shl
xchg
into
orb
iret
iret
test
sti
clc
fcmovnb
in
iret
out
ret
fdivp
fiadds
loopne
test
xor
icebp
cmp
cmp
or
stc
call
loop
test
xlat
aam
sub
cmp
jmp
xor
test
cld
ffreep
sbb
sub
int
subb
loopne
out
int
hlt
fnstsw
fdivp
in
out
lock
out
fadds
call
aad
lret
in
cmp
aam
fdivl
ret
jecxz
out
addl
aad
xor
out
lock
cli
iret
cmc
loop
div
roll
aad
cmp
jne
pop
pop
jmp
int
into
fcmove
fst
aam
lods
push
lahf
push
outsl
je
jl
lret
jl
clc
icebp
repz
shl
in
xor
out
jmp
jmp
fmul
rol
rcl
faddl
in
icebp
jmp
pop
ret
aam
lock
cmp
cmp
repz
sub
in
mov
enter
clc
loopne
xchg
repnz
enter
aaa
leave
loope
cmp
xor
shl
fucomi
cmc
stc
test
fsubrp
or
loopne
aam
leave
enter
sbb
cmp
aad
aam
jmp
pop
rcl
int3
dec
cs
iret
out
xor
xor
std
aam
xlat
in
orb
mov
lret
adcb
jmp
cmc
icebp
icebp
stc
aad
std
rol
xchg
loop
leave
out
int3
loop
loope
repz
ljmp
hlt
int
hlt
ds
aas
repnz
xchg
shr
iret
into
xor
rcr
ljmp
xchg
fsqrt
clc
mov
in
fdivr
fldl
xor
fidivl
int3
std
cmp
inc
mov
shl
rclb
shl
out
clc
ss
repz
cli
int
in
aas
mul
rcl
add
mov
xchg
repnz
xor
icebp
cmp
ss
rol
aad
hlt
ret
mov
or
xchg
cs
jmp
ljmp
loope
stc
lock
ret
in
and
in
fiadds
ss
lret
loope
enter
neg
add
sbb
call
int3
addb
jmp
in
lret
enter
out
rcr
fisttpll
in
xchg
rclb
out
enter
std
rol
sarl
fabs
icebp
stc
testl
in
ljmp
xlat
cmp
cmp
ret
sti
sarl
clc
imul
cld
out
ljmp
lock
ds
xlat
ds
fdiv
out
fcomi
in
out
xlat
fld
aam
int3
in
jmp
cld
in
out
repnz
out
jmp
cld
decb
ror
aam
icebp
cs
das
out
neg
fxch
loopne
loop
xor
iret
lock
xor
xor
enter
lret
lock
cmp
test
in
mov
shlb
sar
int
lret
in
lock
shl
fcmovb
test
lea
popl
ror
rcr
cs
ss
int3
ret
fcmovnbe
repnz
sub
test
and
lret
hlt
hlt
lock
out
icebp
aad
aad
idiv
fstp
xor
in
fiaddl
ror
rol
into
fstp
lret
jmp
shl
sar
fdivr
and
lret
and
jmp
int
icebp
cld
cmp
stc
clc
cmp
not
aam
in
loope
fdivr
out
into
aam
sub
cmp
fcomp
lret
icebp
ljmp
loope
rcr
leave
loope
call
jmp
shlb
aad
bnd
int3
in
incl
loop
in
loope
repz
xchg
in
in
int
cmp
push
clc
fdivrs
or
aam
cmp
orl
ljmp
lret
sar
cli
repnz
mov
mov
sti
lret
into
mov
out
loop
sti
jmp
aam
adc
aad
cmp
xchg
or
sti
nop
test
enter
out
testb
into
lds
cmp
inc
or
sub
repz
out
stc
repnz
sarl
sar
fst
sti
iret
test
sar
jmp
ds
lret
in
xchg
cmc
mov
shlb
lret
int3
std
xor
cmp
loope
out
test
jecxz
orl
jecxz
test
repz
cmc
out
enter
cmp
in
sar
out
enter
xlat
in
sti
xchg
lret
xor
xor
mov
mov
xor
add
mov
mov
xor
add
mov
mov
jmp
sarl
rcr
ret
fucomp
push
jle
jl
add
in
fcomi
lret
ret
cld
out
addl
loope
aad
xor
hlt
repz
clc
lret
cmp
fadd
out
xchg
and
lret
test
popl
aam
ljmp
testb
loopne
out
mov
mov
cld
mov
jecxz
loop
fmul
rcl
fcomip
in
ljmp
loope
les
xchg
mov
loop
lret
jmp
rcl
loop
roll
sti
jecxz
out
ljmp
clc
idivb
sub
fcomi
loope
ror
shr
loope
aam
enter
mov
ljmp
xor
in
out
cmp
ds
loop
test
jecxz
lock
ss
xor
cld
ds
fdivr
in
add
call
in
loope
xor
aaa
sti
aad
out
repz
stc
int3
fdiv
adc
fucomp
lret
into
lret
mov
shr
call
xor
into
xlat
cmp
lds
cli
cmp
xchg
jmp
loop
stc
leave
in
xor
clc
stc
call
stc
cmp
sar
aam
fisttpl
std
cmc
in
rol
rcl
cmp
lret
out
sbb
in
fadds
aam
mov
cmp
fcomp
ljmp
ds
loop
stc
jmp
mov
icebp
in
jmp
stc
hlt
clc
ljmp
lock
in
jmp
mov
iret
mov
xor
shr
cmp
fcmovnbe
aaa
sti
ds
sti
loop
sar
fabs
fadds
and
test
xor
cmp
clc
out
push
int
cmp
out
jmp
call
sub
out
hlt
aad
xlat
icebp
stc
cmp
cmp
test
adc
cmp
in
loop
ret
leave
xor
lret
into
sarb
into
in
lock
fcmovu
shl
sarb
mov
mov
lock
cs
icebp
icebp
aam
leave
iret
iret
jmp
cld
ds
fsub
enter
ljmp
xchg
aad
int
in
rcr
jecxz
ret
int
into
repz
out
out
fimull
int3
sub
into
ret
aam
cmc
stc
mul
into
cmp
xchg
out
xchg
xlat
roll
ror
jmp
cmc
lret
icebp
in
stc
out
fsubrp
lret
iret
cld
fucomp
ret
shlb
int3
in
int
aas
stc
stc
fdivp
clc
stc
rol
clc
cld
leave
jmp
cld
in
xchg
out
sub
xor
jmp
std
imul
shl
xor
loop
fadds
loopne
fdivl
xor
ret
lock
hlt
in
lret
cmp
in
loop
in
ret
jmp
aam
int3
lock
vpmaddwd
repz
into
call
rcl
mul
cld
in
into
rorl
jmp
fsubrp
fnstsw
jecxz
into
out
fiaddl
xchg
clc
mov
nop
xchg
call
lds
jmp
addb
or
int3
fdivp
std
xchg
sub
cld
cmp
into
aas
ret
in
out
ret
sar
or
mov
xchg
mov
lock
out
repnz
cmp
rcr
cli
adc
loopne
loop
vpand
mov
std
lret
xchg
rcl
lret
xor
cmp
in
in
repnz
xlat
rolb
repz
mov
hlt
div
ss
cmp
int3
cmp
cmp
repnz
clc
repnz
xlat
ret
in
in
lret
fiaddl
in
out
iret
out
aaa
jmp
fmul
movl
mov
jecxz
nop
lock
lret
xor
cld
cmc
enter
idiv
loope
mov
hlt
mov
xchg
loope
out
in
ljmp
fcmovnu
flds
inc
add
add
ror
ds
ret
or
es
jl
enter
fmulp
fiadds
fbstp
leave
jmp
sarl
cmp
shl
fcmovnb
out
jmp
and
test
icebp
repz
shlb
aad
idiv
clc
int3
in
cmp
rcr
sar
fiadds
stc
adc
into
loop
ss
lock
shl
in
rcl
xlat
fcmovnb
ret
sbb
sbb
leave
ljmp
xchg
aad
sub
cmp
call
xor
neg
out
stc
cli
jecxz
cld
hlt
cld
jecxz
sti
leave
lret
repz
rcr
jmp
ror
std
aam
cli
aas
hlt
xlat
loope
hlt
ljmp
repz
imulb
cmp
fstpt
test
hlt
xlat
repnz
in
leave
mov
fsts
aam
out
ljmp
clc
rcr
hlt
jecxz
out
enter
fisttps
xchg
repz
sarl
xlat
xlat
shll
xor
stc
aam
aas
jecxz
lret
jmp
sti
loop
subb
stc
sti
icebp
aam
iret
cmp
fnstsw
addb
cld
mov
cmc
icebp
ljmp
cmp
fiaddl
mov
mul
fcmovne
in
lock
in
cs
iret
test
rcl
cmp
faddp
sti
cld
cmp
jmp
loop
rclb
xor
cmp
clc
aam
fdivp
xchg
test
xchg
iret
loope
mov
xor
icebp
fcmovbe
call
sarb
test
roll
in
addb
mov
int
call
int3
icebp
or
in
clc
loopne
lret
out
shl
call
loop
rcl
xor
jmp
int3
in
shr
in
stc
fsubrp
stc
mov
shlb
leave
loopne
fnstcw
iret
cmc
into
cmp
test
aam
loop
clc
mov
enter
xor
cmp
test
fsubr
int3
in
std
loope
hlt
xor
lret
ret
cmp
fxch
fdivrs
icebp
rcr
cmp
jmp
and
stc
ljmp
ror
lds
fdivrs
shr
aas
icebp
fsub
std
stc
not
mov
leave
and
xchg
aaa
stc
xlat
in
xor
cmp
in
xor
idiv
cli
hlt
fsin
mov
fcmovb
addb
icebp
repz
fld1
cmc
in
cmp
aam
in
ret
in
orl
loopne
rcr
xorb
fcmovne
ret
ljmp
loopne
mov
clc
aam
jmp
rolb
iret
shl
cmp
sarl
aas
addl
jecxz
sti
out
fistl
repnz
enter
fmul
lret
cmc
cmp
hlt
sarb
in
stc
jecxz
enter
adcl
lock
xor
cmp
repnz
lret
loop
mov
fiaddl
out
repz
aaa
out
iret
f2xm1
ljmp
cld
jmp
lret
ror
out
int3
out
das
loop
int3
ss
shr
fcmovne
sarb
sar
orb
in
cmc
aam
lock
aad
std
cmp
ss
aad
ffreep
ret
shr
test
in
fcmove
call
ror
jmp
cmp
leave
iret
cmc
loop
cmp
fmuls
dec
jmp
test
out
in
fnstsw
cmp
xlat
xchg
aam
fcmovb
add
mov
lret
fnstcw
cmp
shr
cmp
bnd
aam
icebp
out
rolb
in
jmp
xor
cli
xor
cmp
ljmp
sar
fld
clc
xchg
sbb
loope
xchg
shl
lret
xor
int
aaa
repz
cmp
aaa
neg
rorb
mov
repz
cld
in
jecxz
rcl
cmp
cmp
cmc
xlat
sar
std
ffreep
out
in
add
das
testb
test
add
add
jmp
lret
aam
fcomp
aad
andb
xchg
insb
mov
jg
lret
jl
shlb
fst
aaa
fsubp
enter
cmc
cmc
cmp
jecxz
mov
lret
stc
das
lock
ljmp
out
fdivrp
jmp
in
mov
aam
das
ss
icebp
cmp
ffreep
iret
test
idivl
test
stc
ret
ffree
lret
jmp
mov
out
test
ljmp
fdivr
ret
loop
ds
ret
loop
ljmp
icebp
out
fdivs
stc
fucom
hlt
fcmovb
adc
std
neg
sub
iret
loope
in
jmp
rol
lock
int3
out
ds
cmp
in
fldl
add
hlt
icebp
xor
jmp
in
iret
cmp
rcl
xor
cmc
xchg
hlt
in
std
ffree
out
mov
in
sti
int3
in
aaa
in
shl
repz
std
mov
std
call
fisttps
ds
shr
out
icebp
dec
int
ret
icebp
repz
in
jmp
jecxz
loop
fdivr
std
in
xor
in
in
sti
fidivl
in
shl
rcr
cld
add
lret
ljmp
xchg
xchg
xchg
aam
in
into
loop
enter
cmp
in
cmp
enter
aam
test
mov
rcl
out
sub
jmp
adc
hlt
aad
fdivr
cld
cmp
int
jecxz
test
jmp
sar
cld
call
repnz
in
in
int3
xchg
xor
sti
xor
cld
cmpb
add
cmp
in
sub
test
fucom
int3
mov
idiv
divb
ss
imul
xor
cmp
lock
out
ljmp
test
sbb
not
cld
in
div
fcmovu
ror
in
icebp
movl
int
cld
int3
xor
jmp
shrl
out
cmp
cmc
iret
fcomp
xlat
clc
cli
xlat
rcr
fdivr
fisttps
cmp
loope
shl
cmp
xor
repz
hlt
aad
loop
call
mov
mov
out
icebp
into
jmp
sti
std
rol
jecxz
xlat
rolb
fxch
and
popl
int
cmp
repnz
fcmovu
std
test
xchg
aad
jecxz
fdivr
test
fisttpl
lret
cmc
out
xor
lret
stc
sti
int
std
std
call
xchg
and
out
jmp
leave
shll
ss
xor
enter
xchg
rol
lret
mov
out
adc
out
rol
lret
lock
add
idivb
in
fnclex
loop
xchg
int
fdivs
sarl
out
in
shl
fstpt
shl
sbb
test
cld
rorb
aad
out
repz
lret
rol
rcl
cli
fdiv
cmp
mov
sub
adc
jecxz
ror
jmp
std
icebp
loopne
iret
ret
in
in
cld
fsubr
clc
enter
in
shll
in
std
int
cmp
aad
fsub
in
fdivr
out
lea
in
iret
cmc
int
or
ret
dec
aam
fisttps
mov
xor
icebp
leave
fcmovu
aaa
xor
cld
out
sar
cld
std
jecxz
rcr
xchg
loopne
xchg
sti
jmp
repnz
sar
xor
clc
jmp
repz
ds
aam
aas
fdiv
loope
std
fdivr
mov
icebp
mov
lret
div
cmc
xor
out
cmp
jmp
fxch
aad
cli
cmp
sar
std
xor
in
in
shr
int3
rol
xor
aam
repz
cmp
aaa
cmp
out
std
loopne
fldl2t
out
iret
xchg
repz
ret
shr
cs
in
int
fnstsw
vpavgb
clc
fxch
mov
mul
clc
mov
out
call
cmp
into
cs
ss
fxtract
loop
cld
xchg
cli
call
in
mov
shr
ss
aaa
aaa
rcl
shr
rcl
fdivp
cmp
jmp
mov
fcmovnb
in
mov
lret
int3
sub
jg
lret
jl
mov
inc
mov
testl
icebp
aaa
xor
xor
in
call
cmp
movl
clc
shl
rclb
enter
cmp
cmp
xor
fucomi
loope
lds
in
cli
lret
loope
ror
ret
repnz
sbb
xor
ffreep
incl
iret
enter
loopne
xor
in
lret
xor
xor
out
loopne
idivl
ret
hlt
int
mov
lret
xchg
nop
in
in
out
out
ss
xor
aam
jmp
loope
loopne
lock
fsubr
jmp
lret
xchg
loop
test
aam
div
call
ret
enter
out
mov
test
repnz
in
int3
xlat
shl
xlat
xor
ds
std
sti
fucom
call
enter
loop
fnstenv
stc
sub
out
out
fucom
shr
cmc
idiv
ffreep
fcmove
ret
test
enter
cmc
xlat
shr
int3
jmp
sarb
fidivrs
cmp
mov
in
mov
in
mov
out
xlat
into
ror
xor
out
std
in
xlat
int3
shl
fld
aam
fldl
out
xchg
shll
shll
leave
xlat
leave
xlat
fsubr
cmp
rcl
shr
xchg
loope
add
ret
mov
jmp
ror
aaa
lock
aam
fcmovne
ret
fdivrs
out
xlat
fstpt
cmp
in
int3
in
lock
int3
xor
out
fdivs
repnz
cmc
xchg
and
fninit
rcl
xchg
ret
icebp
jmp
out
loopne
sti
ds
les
enter
out
ljmp
iret
call
jecxz
aam
icebp
in
fprem
jecxz
fimull
aas
test
out
sti
dec
cmc
movl
and
shl
call
fucomp
cmc
adc
out
test
cmp
mov
int
in
test
fisttpl
xlat
loop
hlt
cld
fldpi
enter
cmp
orl
mov
out
lret
cmc
into
loope
sar
icebp
fdiv
cmp
test
xchg
fscale
test
movb
aaa
fcmovne
xor
out
in
fucomip
fdiv
in
mov
lea
shr
loopne
divl
icebp
xlat
clc
fst
in
cld
add
les
in
iret
mov
lret
test
out
jmp
enter
div
hlt
fcmovnb
enter
stc
ljmp
mov
iret
jmp
into
jmp
ljmp
int3
loop
fld1
ftst
ljmp
in
cld
xchg
cs
in
ss
call
add
shl
xchg
xchg
test
mov
test
shr
shr
in
jmp
in
hlt
out
repnz
loopne
sar
test
leave
in
test
in
lret
icebp
into
in
aad
leave
leave
aaa
ss
cmp
jmp
xor
imul
shr
fsubr
xchg
int3
and
out
lret
cmp
int
stc
roll
in
xchg
jmp
loope
jmp
call
cld
incb
fiaddl
int3
out
jmp
into
int
xor
leave
repz
ror
lock
out
cmp
int3
fcmovne
incl
shrl
aaa
rcl
lret
cli
cmp
rcr
cmp
hlt
sar
test
call
fucom
mov
rcl
repnz
enter
cmp
faddl
test
test
icebp
mov
lret
in
repz
aaa
sar
stc
addl
cld
dec
int
loopne
out
aad
loope
ss
leave
cmp
fiaddl
testl
dec
in
nop
repnz
in
in
enter
aas
enter
loop
lock
rcl
stc
icebp
xchg
incl
sub
add
or
mov
data16
add
ror
rcr
int
add
jle
adc
lret
jl
test
int3
rcl
sar
int
fadds
out
fucomip
call
shr
test
xchg
out
ror
shr
ret
out
clc
std
sarl
ds
sbb
fstp
jmp
out
fcomip
in
cmc
aam
out
into
sti
lret
enter
repnz
test
test
lret
cld
lret
loopne
shr
sti
rol
repz
into
xlat
shl
aas
lds
enter
fcomp
mov
cmp
call
stc
ffree
aad
aad
loop
addl
in
icebp
std
fmul
loop
in
sti
rol
out
cmp
xor
sarl
iret
xchg
aas
in
ret
orb
jecxz
sub
repnz
into
ljmp
xchg
loopne
out
test
xchg
out
ds
lret
aas
std
out
sti
out
in
xlat
fcmovu
cmc
mov
mov
xor
fsubr
out
iret
xlat
ljmp
and
in
lret
out
clc
repz
ror
int3
lds
in
aaa
jmp
cmc
shl
jmp
ret
cmp
sti
cli
repz
loop
std
mov
jmp
jmp
jmp
ret
out
aad
ds
lret
fmull
jmp
xchg
in
call
out
lret
aad
in
repz
aas
repz
hlt
shl
out
mov
addb
clc
sar
lret
cmc
repz
int3
fcomi
out
fcmovnbe
addl
ds
xchg
test
hlt
fstpt
shl
idiv
out
call
adc
rcr
fcmovb
addl
aad
xor
clc
aas
icebp
out
repz
fcomi
xchg
loop
mov
fmull
hlt
xlat
das
hlt
in
rcl
jmp
rcr
loop
loop
shl
clc
mov
test
repz
in
xor
sti
cld
cli
in
std
iret
int
ss
aad
aam
movl
fsubr
in
xor
jmp
lret
ror
sar
repnz
rcl
jecxz
cli
lret
shl
sarb
aaa
xor
lock
jmp
cmp
aam
jmp
call
int3
jmp
aad
fidivrl
enter
fninit
int3
aad
stc
icebp
xor
int
fildl
test
lret
out
repnz
clc
call
cmp
aam
mov
loop
mov
rol
out
sti
int
fdiv
loopne
cli
test
lock
fcmovu
sbb
std
int
in
cmc
out
hlt
repz
neg
shlb
ljmp
out
call
fadd
in
ror
lret
ss
vpinsrw
int3
xlat
aas
aad
jecxz
les
call
lret
fsubr
adc
cmc
aaa
aam
clc
rcl
xor
idivb
addb
testb
loope
mov
call
lock
sar
cli
out
fcmovu
fcomi
ds
loopne
loope
mov
cmp
loope
mov
jmp
int3
fidivrl
and
lock
leave
ret
xchg
cld
lret
sub
iret
cs
ljmp
lret
cmp
jmp
in
orl
iret
aad
cmp
aad
icebp
repz
ror
and
mov
test
ljmp
shl
std
cld
fstpt
std
repz
lds
int3
out
lea
ljmp
lock
loopne
cmp
out
cli
fst
sbb
jecxz
into
sti
out
in
aad
sub
in
aam
leave
out
out
clc
fstp
fadd
std
shr
sti
mov
iret
xchg
rol
ss
in
sar
cmp
int3
shr
out
mul
not
xchg
loope
cli
jmp
jmp
call
out
in
xor
int
ret
ret
jmp
xchg
lret
out
int
ret
vpsubusw
xlat
aam
ljmp
test
adc
add
inc
call
jmp
rcl
rcl
roll
movsb
mov
jl
add
cmp
jecxz
loop
jmp
test
mov
or
xchg
shr
rcr
repnz
aaa
ror
cld
cld
loopne
aad
std
aam
loope
in
int
mov
sar
shl
rol
jecxz
into
lret
test
into
repnz
shl
ret
lds
in
ror
xchg
xchg
in
out
int
lret
ror
call
iret
cli
lret
int
lock
std
call
in
icebp
shl
cmp
out
jmp
iret
enter
hlt
fnstsw
rcl
rcl
shl
into
icebp
ret
mov
cld
test
fdivr
test
repz
xor
into
xor
iret
fcmovne
aas
repnz
imul
aad
fcmovnu
test
aad
enter
in
into
div
cmc
aaa
ss
leave
xor
rcl
int3
sbb
jmp
clc
mov
xchg
mov
jecxz
in
rcl
call
cmp
hlt
rcr
ss
aad
repnz
out
xchg
orl
shr
int
clc
cmp
call
xlat
out
loopne
mov
ljmp
dec
test
stc
fdivrs
addl
into
fdivrp
xchg
out
icebp
in
out
sti
out
int3
jmp
ds
rol
jecxz
lret
incl
jmp
out
out
int3
icebp
leave
icebp
call
hlt
cmp
cmp
mov
in
lret
shr
xchg
hlt
into
fldl2t
xor
out
icebp
cld
call
cmp
jecxz
test
stc
fldpi
mov
mov
ffreep
leave
out
jmp
aam
ljmp
rol
icebp
ret
cmp
jecxz
dec
loope
sub
icebp
out
leave
fucomp
hlt
aaa
sarl
aam
and
mov
cmp
mov
mov
test
ss
out
fidivrl
iret
lret
rolb
test
jmp
lret
test
out
sub
in
cli
rcr
aaa
stc
idivl
stc
cmc
mov
mov
clc
leave
roll
iret
enter
call
out
clc
cmp
ds
jmp
mov
repnz
ljmp
aaa
fmulp
call
hlt
std
xlat
cmp
fld
out
ror
ljmp
jmp
ljmp
in
ror
clc
and
mov
in
in
xor
xor
sarl
cli
ret
std
xchg
testl
fists
ljmp
fxtract
iret
loop
sti
cld
sti
ds
enter
iret
fsub
loop
repnz
xor
xor
jecxz
iret
out
sarl
ret
ljmp
loopne
cli
std
out
aad
jecxz
enter
ror
out
xorl
std
test
call
mov
loopne
aaa
in
fmul
cld
xor
cmp
ret
stc
out
repz
or
sti
fiadds
out
out
call
in
hlt
inc
cmp
std
les
ljmp
xchg
jmp
sarb
iret
std
repz
fldl2e
fcomip
fyl2x
ds
leave
testb
mov
xor
rcr
xor
aad
into
ss
cmp
stc
in
hlt
neg
or
les
repz
call
in
int3
icebp
in
int
std
ds
rcr
ret
mov
in
and
mov
enter
div
into
xor
cmp
cli
test
fsub
test
mov
out
lock
rcr
xor
fsubrp
rcr
aas
idivb
rcl
xlat
out
mov
mov
nop
and
jmp
ss
shl
ds
clc
lret
in
ljmp
leave
xchg
icebp
xlat
into
jmp
ss
shl
aam
cmp
cld
shl
out
xor
aam
xor
iret
in
loope
shl
xor
cmp
mov
enter
lock
out
jmp
rol
in
loope
loopne
cmp
icebp
ret
ds
std
clc
lea
jmp
lret
ret
int
jle
rcr
inc
adcb
jg
lret
jl
std
call
xor
cmc
in
fucomp
jmp
cmp
rcr
lock
fidivrs
jmp
cli
lock
xchg
out
xlat
hlt
in
cmp
lret
hlt
cmp
cmc
and
ffree
in
inc
mov
adc
std
leave
jecxz
call
out
jmp
lret
enter
into
aad
fld
stc
ret
enter
jmp
cld
in
orb
in
lret
in
xlat
sar
rcr
loope
fidivrl
repnz
lret
ret
icebp
iret
jmp
mov
into
stc
xlat
aaa
sti
leave
cmp
jmp
ror
icebp
testb
std
int
enter
int3
rol
aam
cmp
repz
rcl
int
aad
cli
call
cmp
out
xor
cmp
int3
in
cmp
sti
cli
mul
cli
in
repnz
test
into
ss
les
lret
cli
call
sarl
in
mul
test
xchg
cmc
hlt
xor
in
fdiv
aam
std
int
sarb
loopne
rol
fcomi
jmp
decl
orl
lock
int
cli
lock
out
loop
stc
fcomip
clc
leave
mov
mov
popl
out
mul
icebp
cmp
int3
sti
cmp
in
std
cmp
stc
mov
fmulp
ret
std
loopne
fdivs
sub
ds
fcmovu
icebp
hlt
sbb
cmp
iret
jmp
out
lock
cmp
cld
stc
stc
in
std
out
roll
std
imul
lret
leave
cli
nop
hlt
xchg
into
out
jecxz
int
cld
cmp
cli
cmp
in
mov
ror
shl
in
les
xor
sti
fcmovbe
out
fcmovne
lret
fcomp
sti
testl
nop
adc
repz
xlat
leave
fstpt
cmp
clc
lock
xchg
inc
jecxz
sbb
call
repz
loop
icebp
lret
leave
adc
fcmovnbe
test
leave
cmp
int
repz
neg
shl
std
aam
hlt
cmp
and
aad
aad
fscale
call
cld
in
jmp
icebp
xor
out
xlat
call
std
cmp
xchg
into
mov
in
jmp
std
xlat
stc
xor
test
ret
les
lret
int
jecxz
lret
in
divl
fcmove
fucomip
fdivp
repz
cmc
fdivrp
enter
hlt
sub
xchg
and
vpxor
out
sar
iret
stc
stc
sti
stc
cmp
fcmovu
rol
fucomi
xchg
in
icebp
cld
ror
repnz
jmp
shl
cmp
out
ds
cli
out
out
shl
xchg
lock
cs
les
clc
into
fdiv
sarb
xlat
mov
fcmovb
ljmp
in
xor
fptan
clc
int
cld
clc
faddp
enter
shr
fnstcw
repz
cld
out
in
out
leave
stc
in
fucomi
std
fmul
int3
into
fstp
fcomip
cli
aam
xor
jecxz
ret
jecxz
lret
jecxz
shr
sub
in
dec
std
jecxz
std
loop
repnz
lret
int3
ljmp
shll
in
cmp
jmp
lock
loope
ret
cmp
jecxz
ds
in
mov
iret
lret
mov
xlat
ret
out
loopne
aam
leave
repz
incb
leave
orb
lret
cmc
cmp
cmp
fdivrs
cmp
sti
add
test
ljmp
cld
repz
in
in
xlat
cld
div
clc
xor
sti
cld
shl
and
addb
loop
fdivp
icebp
aam
out
cmp
shl
int
call
in
cmp
mov
mov
icebp
loope
hlt
imul
rcl
lock
into
into
fxch
fadd
and
cli
cmp
call
enter
mov
repnz
call
fcmovne
rcr
mul
icebp
test
loopne
out
xchg
loope
hlt
out
in
sti
cli
fld
leave
mov
mov
addl
mov
jmp
rol
into
ret
rcl
aad
pop
repz
xor
mov
lret
jl
not
fdiv
ffreep
xchg
fucomi
xlat
out
ljmp
repnz
hlt
into
clc
rol
repnz
mov
add
loop,pt
fsubp
mov
xlat
sub
lock
lret
in
rolb
cmp
stc
clc
aam
f2xm1
int3
mov
in
shl
ror
repz
neg
loope
rcr
in
fcom
out
xlat
xlat
cmp
fucomip
in
nop
in
int
ret
lret
fdivrs
in
test
push
jecxz
call
out
out
or
shl
fdivs
fcom
cmp
fldz
aad
shl
xlat
cmp
out
nop
cli
sub
repnz
icebp
mov
lret
cld
ds
ret
int
sar
repnz
xchg
mov
into
iret
icebp
jmp
hlt
cld
cmp
fincstp
cmc
loopne
loopne
out
out
out
cmc
aad
xor
rcr
xor
in
xlat
loop
aam
div
cld
cld
cli
lret
movl
icebp
rcl
shr
cmp
in
icebp
repz
jecxz
jmp
sbb
test
rcl
jmp
rcr
shll
sbb
stc
repnz
imul
lret
nop
rol
xor
test
cmp
ror
clc
repz
mul
ret
std
in
mov
test
out
jmp
neg
int
out
lret
int3
addb
imul
ds
jecxz
xchg
hlt
jmp
lock
fnstenv
rcr
fadds
and
ftst
out
add
ret
test
test
ret
clc
aad
cmc
cmp
into
cld
in
sar
roll
les
repz
in
fnstenv
aad
xor
ds
test
test
jmp
in
dec
fcoml
loopne
ret
xlat
cmp
in
rcr
ss
fdiv
lock
repz
mov
fisttpl
out
rcl
ret
leave
fcomp
jmp
rolb
sub
fmul
clc
std
mov
fdiv
fcomip
out
shl
xor
cmp
shlb
ss
jecxz
lock
sbb
into
ret
leave
iret
lret
loope
jmp
iret
clc
cmp
xor
cmp
iret
ret
ret
flds
lock
call
xlat
enter
xlat
out
in
int3
sti
cmp
std
aam
std
mov
in
iret
xchg
lock
int
into
rcr
sarb
cld
sti
loop
ret
lret
int
lret
lret
repnz
jmp
cmp
fidivrl
rcl
cmp
cmp
mov
jmp
adc
mov
loop
rol
out
aad
cli
xor
ffreep
in
jmp
test
hlt
mov
sub
shl
clc
out
cmp
div
loope
fsubp
incl
aas
ljmp
xchg
loopne
xor
fmul
std
call
jecxz
loop
cli
testb
out
in
xchg
in
lds
int
xlat
loope
ret
and
sar
aad
aas
orb
mov
in
loope
rcl
int
neg
cmp
stc
ljmp
jecxz
fiadds
roll
call
lret
aas
cld
cmp
sarb
cmc
jmp
fdiv
fcmovbe
in
cmp
call
out
lret
xor
xor
fdiv
iret
ds
rolb
clc
orl
in
hlt
shlb
jmp
out
sbb
clc
aad
rorb
in
int
out
xchg
shr
jmp
rcr
hlt
cmp
ljmp
stc
neg
ljmp
hlt
out
lret
xlat
jmp
ss
shl
aam
rcr
lea
xor
in
in
loopne
clc
ss
cmp
int
aas
out
cld
ds
std
mov
in
xchg
jmp
aam
in
xlat
out
in
lret
aam
cmp
idivl
ljmp
lea
mov
jmp
into
int3
ret
ds
jge
jae
out
inc
xor
add
hlt
out
std
jmp
loope
leave
out
int
lret
sti
loope
std
out
xchg
loope
mov
in
fld
into
int3
out
in
cs
int3
shll
hlt
repnz
int
rol
test
aas
loopne
fmul
loop
out
fmul
mov
out
xchg
loop
int
xor
int3
out
xlat
cmpl
repnz
and
sbb
out
into
mov
xor
cmp
divb
sub
out
aad
mov
lret
fimuls
out
ss
int
shl
cmp
rol
testl
mov
cmc
aas
shr
ror
ljmp
repnz
mul
std
in
faddl
lock
loope
ds
shr
fstp
fdiv
sbb
cli
xlat
test
loopne
loop
leave
out
jecxz
ror
mov
repz
call
fdivrl
loope
out
leave
in
faddl
test
loopne
loop
xor
icebp
das
shlb
stc
cli
ffreep
fiaddl
out
enter
jmp
icebp
int3
not
shl
lret
rcr
enter
rol
in
xor
jmp
iret
repnz
bnd
xor
aad
fcomip
repnz
jmp
ljmp
mov
xor
repnz
cmp
sarb
clc
out
aam
sti
xchg
iret
mov
lret
lret
int3
icebp
aaa
iret
iret
iret
div
out
cld
aas
cmp
lds
adc
mov
in
lock
out
aam
cmc
xor
ss
int
aam
ret
out
out
hlt
xchg
stc
mov
out
lock
xor
stc
repnz
ljmp
loopne
xlat
std
repz
les
fsubp
hlt
in
aam
fcmovnbe
out
lret
fstpt
jecxz
iret
fcmovnb
repz
jmp
cmc
xor
cmp
aad
iret
lock
aam
cli
std
xchg
sti
mov
sbb
aam
iret
int
shr
fcmove
test
stc
cli
fnstsw
sti
or
into
nop
icebp
lock
ljmp
clc
fdivs
aas
clc
test
lds
std
mov
xchg
jmp
ret
fcomi
lret
iret
jmp
in
ror
aad
icebp
jmp
cld
enter
shr
jmp
xlat
leave
ljmp
cmp
cmp
test
test
cli
fninit
in
icebp
fucomi
repz
dec
xor
out
icebp
fucomip
aad
lock
cmp
xlat
rol
jecxz
iret
ljmp
test
iret
icebp
call
lock
cli
call
xchg
fmulp
iret
nop
out
test
ljmp
aad
rcr
fdivrp
ror
xlat
iret
jecxz
in
mov
cs
fsub
in
xor
ror
xor
clc
hlt
xor
fucomip
mov
out
repnz
fstp
shr
in
in
sar
repnz
std
lret
mov
out
int3
in
lret
in
repz
sub
out
aaa
aad
sti
in
test
fcmovnu
stc
add
mov
loopne
loop
out
ror
xor
int
neg
loope
lret
shr
iret
cmp
call
int3
in
cli
xchg
mov
shll
shll
shlb
ss
xlat
cmc
lock
cmp
loopne
call
loope
fcmovne
ror
jecxz
out
out
int3
xlat
out
lock
out
cmc
cld
cmp
lret
into
filds
mov
xchg
jmp
xor
xlat
enter
rcl
repz
shr
xlat
leave
ljmp
xchg
ror
cs
jmp
iret
fcmovnbe
shl
cmp
jecxz
in
fneni(8087
in
fcmovnu
sub
fsubrp
hlt
out
cmp
cmp
cmc
jmp
rcr
adc
cld
cmc
test
jmp
std
xchg
shr
call
cmp
cmp
int
fdiv
fsubp
icebp
icebp
out
rol
rcl
ret
xchg
mov
cmc
loop
lret
incl
jmp
mov
jmp
lret
ds
fcmove
fisubrl
xor
daa
jg
lret
jl
cmp
cld
ljmp
sbb
loop
cmc
lds
fdivp
shl
jmp
in
cld
in
aas
cmp
cmp
shl
out
sub
xchg
and
aam
in
xor
std
aad
in
stc
int
mov
flds
call
lret
shl
repnz
mul
int
repz
ror
loopne
clc
popl
shl
int
repnz
fst
cmp
shl
cld
cmp
ds
cmc
leave
loopne
cld
adc
in
shl
rcl
aam
das
clc
cli
call
repnz
leave
cli
call
fsubrp
cmp
int3
inc
enter
enter
cmp
jmp
icebp
in
iret
aad
xlat
out
xchg
jmp
loope
call
lock
cmp
roll
rol
frndint
loope
sbb
loope
lret
int
aad
cli
ljmp
fdivrp
and
enter
mov
xchg
jmp
sub
xor
lret
ret
repnz
cld
jecxz
not
rol
test
mov
nop
fsubrp
cld
shlb
xor
aam
fdivr
aas
loope
test
out
cmp
fadd
test
in
xor
idivb
not
stc
hlt
sar
test
xchg
int3
jecxz
in
out
jmp
aam
xlat
enter
xor
cmp
xor
into
jmp
in
int3
fadd
fisttpl
stc
into
in
aad
cld
icebp
cmp
fld
neg
out
mov
lock
mov
loope
in
xor
icebp
aad
repz
test
aas
cli
in
repnz
enter
mov
jecxz
int
fucomp
aam
call
sbb
addl
xchg
repz
lock
fxch
loope
repz
in
icebp
stc
lock
add
jmp
shl
xchg
iret
aaa
jecxz
enter
fucomp
sub
rol
ds
lret
decl
sti
div
fmulp
lock
aam
push
cmp
fdivr
int
jecxz
test
shrl
jmp
lret
into
cmp
xor
in
iret
rcl
in
mov
cmp
and
not
xor
in
cmc
in
cmp
repnz
rcl
aam
stc
cmp
mov
clc
mov
div
ret
cmp
cmp
call
lock
cmp
jmp
jmp
call
das
clc
loop
lret
xor
in
fsubr
aas
out
out
cld
cli
fadd
jmp
sbb
cli
in
mov
icebp
hlt
in
xor
shlb
ds
rcr
stc
shl
xchg
in
leave
jmp
xchg
in
int3
rcl
fidivl
div
call
int3
out
call
fisttps
sub
jmp
test
fucomp
out
repnz
loope
shl
loope
add
idiv
xchg
xchg
ljmp
icebp
cmc
xor
hlt
sbb
mov
decl
iret
ljmp
cmp
fdiv
out
int
cli
incl
jecxz
into
int
fdivr
ljmp
cmp
xor
aam
adc
in
sar
fcmovnb
ljmp
leave
loopne
sti
aad
jmp
sti
aad
sti
xor
xor
loope
ds
rol
out
aad
lock
iret
out
hlt
xor
xor
idiv
aas
add
out
leave
in
into
xchg
jmp
xchg
rcl
sub
repz
in
cmp
fdivrl
sti
fdivr
out
stc
hlt
in
jmp
clc
shl
xchg
jmp
lock
enter
hlt
cmc
call
rcl
cmc
fdiv
cmp
cld
filds
jmp
xor
cmp
lock
out
std
lret
fdiv
repz
mov
out
sbb
addb
repnz
lock
cmp
out
sar
and
shr
add
add
ds
rcr
fsubr
push
in
xor
sub
lret
jl
add
fld
enter
mov
fsubrp
int
loop
cmp
leave
aaa
in
leave
cmp
loop
ds
lret
jmp
cli
std
lret
ljmp
xor
div
shl
add
cli
mov
lret
ret
fdivr
clc
in
loopne
mov
repnz
aad
ljmp
mov
add
jmp
out
sub
loope
xor
fdiv
repz
ror
ret
sub
std
in
out
repnz
sar
in
repz
aas
shl
jmp
cli
fcomi
lds
fld
fxtract
call
sti
loopne
mul
test
rcl
aam
lock
iret
fdivrp
int
in
std
vpsubw
shl
mov
in
ljmp
cmp
sti
sarb
stc
repnz
filds
call
aaa
hlt
out
in
in
cld
in
sti
clc
leave
loop
bnd
lret
ror
hlt
ror
int
sti
out
int3
repnz
rol
repnz
enter
sub
nop
lret
loopne,pn
idiv
fucomi
into
cmp
lock
xchg
out
aam
cli
loope
and
xchg
rol
lret
int3
xlat
out
idivb
repz
repz
std
test
xchg
addl
out
int
fadd
cmc
loop
test
in
cli
mov
std
fsub
jmp
out
int3
loop
cmc
aas
fnop
sub
cmp
icebp
out
xlat
aad
lock
rol
mov
jmp
int
loop
fildll
clc
neg
out
sti
lret
aad
shl
lret
loop
lock
inc
mov
call
cs
idiv
int
sbb
loope
shl
shl
std
fsub
fxch
lea
stc
jecxz
enter
sarl
roll
fucomip
faddl
aad
out
xor
cmp
lock
sbb
jecxz
ds
xor
test
sub
cmc
das
shl
ffree
into
test
in
aad
sti
fdivr
jecxz
ror
lea
fcmovnu
repz
hlt
aaa
xlat
cmp
rol
ret
aas
out
xchg
jmp
lret
aam
ret
bnd
into
loope
out
xor
jmp
lret
testb
in
shr
rcl
call
clc
jmp
fiadds
out
and
lret
jmp
lret
lret
fcmovu
cli
out
jecxz,pt
roll
roll
flds
cs
shr
enter
cld
fnop
cmp
shll
sti
aas
mov
mov
test
faddl
xor
jmp
call
ds
sarl
icebp
repnz
xlat
jecxz
leave
loop
call
fdiv
iret
out
ror
xor
in
cmc
cmp
cmc
xchg
inc
fdivr
fsubr
lret
fmull
aam
ss
int
fdivrl
sarl
fmul
fildl
mov
cld
fsub
loop
lock
xor
ss
cli
clc
fdiv
repz
or
xor
rcr
stc
imul
int
nop
test
std
int
enter
cmp
das
clc
dec
loope
fucom
lock
shr
stc
test
leave
std
loopne
loope
nop
ret
ljmp
sti
xlat
hlt
int
std
in
jmp
fadd
leave
int3
addl
vshufps
roll
rcr
hlt
aad
in
ret
aam
int3
leave
repz
mov
loopne
vcmpsd
jmp
in
aas
cmp
hlt
in
test
mov
xor
into
addb
iret
repnz
jmp
sbb
loop
out
leave
not
loopne
out
jmp
sub
in
aam
xor
out
fptan
aad
cmp
ret
test
incl
int3
ds
lret
sti
repnz
ret
mov
add
sbb
fcomi
xchg
orb
add
fcmovnbe
int
loope
insl
lahf
pusha
push
cmp
pushf
das
jg
lret
jl
cmc
stc
xor
cmc
xlat
call
stc
cmp
fdiv
loope
mov
lea
jecxz
mul
int3
lret
int3
into
cmp
rcr
icebp
fcmovb
ret
orl
in
in
sub
cs
ret
int
shl
cmp
loop
out
ds
mov
repnz
loope
or
cli
out
nop
xor
shll
fcmovnbe
in
sti
ljmp
flds
sub
std
fcmovnb
out
mov
test
loop
stc
in
ret
call
lret
sub
xchg
lret
sti
loope
test
fyl2xp1
iret
out
stc
aam
sar
fidivrl
rcl
in
leave
addl
call
sub
out
fcmovne
fldlg2
fiadds
cli
or
addb
shl
call
iret
clc
cmc
std
test
loope
std
in
mov
leave
call
cmc
out
shlb
cmp
loope
loopne
sar
stc
adc
call
rolb
out
jecxz
repz
fmul
leave
xor
loope
out
xchg
std
out
mov
lds
out
shl
rcl
cmc
jmp
cli
std
aad
roll
and
int
leave
cli
mov
cs
stc
shl
rcl
xor
lret
loope
out
xchg
ffreep
clc
leave
mov
aad
in
cmp
idivb
xor
xor
enter
sar
repnz
fyl2xp1
test
mov
in
in
rcl
test
aad
fcmovne
int
clc
loop
loopne
ret
lock
ffreep
in
icebp
mov
aas
cs
cs
repnz
fidivl
aas
sti
cld
clc
out
in
xor
fisttpll
in
out
cmc
mov
icebp
lock
fidivrs
xlat
lock
cmp
sti
mov
in
lret
loope
not
hlt
cmp
xlat
fdiv
int3
repz
rcr
addl
in
test
sub
hlt
out
out
icebp
in
lret
cmp
in
std
rol
rolb
out
fucomp
out
fsubrp
call
out
enter
or
in
in
sbb
leave
int
out
fstl
jmp
xor
clc
aad
fcmove
push
shl
loopne
fcom
std
mul
frndint
xchg
enter
xchg
subl
xor
aad
fstp
clc
jecxz
ror
ret
lret
xchg
add
sub
hlt
jmp
aaa
out
cld
aam
cld
filds
ljmp
test
mov
mov
shr
xor
fcom
leave
lock
repz
loopne
aas
aas
loope
aad
aam
mov
fsubr
call
out
icebp
loopne
cmc
xor
loope
rcl
cmp
std
fiadds
movl
xor
sarl
into
enter
jmp
int3
shl
div
mov
cli
jmp
out
rcr
out
call
jecxz
leave
lret
shl
cmc
cmc
icebp
shl
aad
leave
shl
mov
cld
fsubr
xor
xor
idiv
in
xlat
aas
aad
int
fsub
ret
enter
stc
clc
addl
cmp
cmp
aas
bnd
ret
loope
iret
xchg
int
lret
xor
fdiv
cmc
xor
ret
cmc
loop
ret
jecxz
mov
fdivr
jecxz
loope
aam
stc
out
fcmovbe
iret
ror
aaa
xor
aas
in
les
loope
clc
cld
lea
cs
into
icebp
ror
xlat
in
out
ret
into
fildl
sti
out
mov
test
aaa
ljmp
lret
loop
in
test
sti
fcmovu
in
xchg
rol
ljmp
imul
fcomi
int
stc
idiv
lock
loopne
int3
call
xlat
sub
fdivs
aad
rcl
cmp
out
in
aam
inc
test
cld
loop
xchg
ljmp
enter
std
repz
add
jmp
iret
iret
sarb
aad
aad
pop
sbb
scas
sub
push
jg
lret
jl
flds
rolb
rcl
fsubr
repnz
loopne
lret
cmp
roll
mul
fcomp
hlt
mov
popl
loopne
out
out
aad
repnz
sarl
cmp
out
mov
sti
into
shl
lret
lret
lock
in
fsubr
clc
ds
aad
sbb
mov
fadds
in
xor
icebp
cmp
fmul
addb
loopne
fimull
repz
repz
xor
call
out
cmp
std
lock
test
out
jecxz
jmp
mov
in
int
aam
ljmp
into
stc
aad
aad
std
ror
fisttpl
fnstenv
call
xor
sbb
loope
loopne
cmp
loop
ds
in
lret
iret
in
in
call
cli
xor
stc
fdivrl
aad
cld
icebp
std
hlt
ds
or
ffreep
icebp
rorl
cs
xor
lret
int
aad
cmc
fadd
std
fimull
enter
loope
loop
out
lret
jmp
rcl
call
fstpt
xor
orb
xchg
out
out
int
cmp
into
cmp
clc
cli
cmp
ret
mov
in
out
mov
out
shl
jmp
aam
fcompp
addb
ds
jecxz
test
test
out
xor
cmp
fsubr
out
jmp
cmp
cmp
mov
aam
lret
mov
adc
clc
sti
repz
out
stc
int3
cmc
fdivrs
cmp
roll
in
std
fidivs
loopne
xor
mul
cmp
in
cmp
in
stc
out
jmp
loope
fdiv
lock
out
int3
ljmp
fsubr
cmc
xor
neg
add
rcl
sti
test
int
call
stc
xor
sarl
fldlg2
hlt
fcmovnu
cmp
ret
or
cld
out
int3
cld
loopne
mov
in
loopne
ss
cmp
std
xlat
not
sub
cli
aam
fildl
iret
mov
aad
hlt
lret
xor
enter
aam
stc
in
out
fld
sti
rolb
in
into
lret
aaa
out
clc
cmp
cmc
shll
cmp
cmp
ret
xor
ret
xchg
jmp
in
in
out
fsub
call
rcl
clc
cmp
iret
into
hlt
in
cmp
ret
fsub
out
in
stc
call
xchg
mov
icebp
cs
les
jmp
ss
loopne
iret
test
aad
test
and
loope
repz
out
ret
in
ljmp
sar
fcmovnbe
add
xchg
stc
stc
cli
in
fldl
lret
fidivl
int3
cmp
lret
out
cld
test
int3
in
lock
repz
aam
aam
out
lock
cmp
lock
add
fcmovnb
loop
test
sub
cli
xchg
out
out
enter
hlt
in
repnz
cmp
clc
cmp
rol
sti
mov
in
mov
jmp
rolb
leave
out
call
shl
roll
cmc
call
fimull
out
out
stc
iret
in
cmp
imul
hlt
aad
std
and
idiv
ljmp
ljmp
sti
repnz
int
into
sbb
out
rcr
ret
cli
and
fstl
loop
fcomi
aas
call
cld
loopne
out
in
mov
loop
lret
or
sub
lock
cmp
iret
cli
fst
roll
fidivrs
in
popl
cs
in
loop
shl
xlat
aas
cmpb
icebp
cmp
out
aam
flds
into
fmulp
aad
xor
cs
cli
out
divl
test
cmpl
test
ret
and
mov
les
sti
out
cld
cmc
lret
cli
ds
xlat
hlt
cmp
and
xchg
pop
leave
ret
push
mov
jmp
rol
rol
fstp
dec
lahf
push
dec
xchg
mov
jg
add
int3
out
out
sub
icebp
shl
hlt
cmp
repz
testb
sbb
xchg
das
xor
test
div
lock
repz
lock
ret
cld
clc
fucomi
xchg
cli
out
in
aad
shr
out
int
into
enter
fildl
cmp
rorb
out
enter
das
iret
xor
aas
clc
roll
rolb
xchg
shll
in
ljmp
sar
sti
lock
ds
ret
cmc
mov
enter
in
leave
xchg
out
in
int3
rcl
in
cli
hlt
jmp
in
in
shl
xlat
jecxz
inc
ret
jmp
enter
xor
xor
shr
out
iret
iret
lret
cmp
loopne
rcl
sti
cli
xchg
mov
xlat
ret
cmc
aam
in
lret
shr
cmp
hlt
incb
ret
jmp
sti
int
fimull
lret
sub
ds
rolb
aad
adc
orl
lock
cmp
cmp
call
sarb
enter
clc
out
in
out
out
ret
das
shrb
cmp
rcl
jmp
int
xlat
fucom
fildl
int3
and
aas
sar
xlat
jecxz
repz
fstp
loope
stc
int3
in
out
loop
out
and
rol
jmp
sar
fucomi
fnsave
jmp
cli
rol
cmp
fisttpll
shl
ret
out
call
repz
sti
ret
jecxz
sub
ljmp
lock
hlt
cmp
flds
loop
in
shl
xor
lret
xor
into
ss
jecxz
ret
xor
sub
test
lock
loopne
out
lret
xlat
aaa
out
lock
int3
addb
test
rclb
in
call
cli
cmp
lret
in
jecxz
ret
jmp
lret
xor
icebp
xor
shl
leave
cmp
fcmovnu
fadd
aad
in
iret
int3
mov
iret
adc
hlt
stc
xlat
iret
ljmp
fdivp
fcmovnbe
jmp
enter
fiadds
iret
mul
sub
sti
into
sti
call
xchg
cmp
test
fmul
test
loopne
cmc
rcr
xor
std
loop
ret
loop
sar
fadd
sti
cli
addb
ror
stc
ljmp
cmp
out
ds
enter
int3
mov
sub
into
aad
cmp
faddl
sbb
lret
repnz
mov
into
out
xor
jmp
int3
into
into
cli
cld
loopne
rcr
fadd
xchg
enter
aam
sub
loope
aad
xorl
fcmovbe
test
mov
sub
mov
leave
out
int3
cmp
ror
aam
call
test
sti
mov
orb
mov
repz
rol
lret
out
into
enter
stc
not
in
shl
in
loopne
mul
xchg
in
repz
lock
rcl
lock
iret
fsub
xlat
jecxz
aad
les
fsubp
leave
jmp
icebp
in
in
ss
sar
fdivp
fildl
stc
fdivr
out
loope
iret
or
enter
cmp
hlt
aas
int3
loop
add
mov
loopne
loopne
in
loope
hlt
lock
cmp
lock
out
aad
clc
cld
jmp
ret
test
out
nop
rolb
rol
out
clc
aad
aad
out
std
rcr
fdivrs
xchg
lret
fsub
cli
sti
xchg
mov
aam
shll
iret
enter
clc
fdivrs
cmp
rcl
rcr
xlat
les
mov
icebp
repnz
ss
call
repz
rcl
aad
shl
out
movb
jecxz
neg
aam
leave
rcr
fsub
clc
stc
out
shl
mov
enter
test
aaa
xor
xor
repnz
fsubrp
cmc
xchg
ljmp
xchg
aam
sti
ret
jmp
jmp
out
fcmovne
sub
in
cli
cmp
in
fstp
rcll
das
neg
sar
ljmp
cmp
stc
fstp
icebp
aam
jecxz
dec
lret
sar
cmc
add
leave
push
xor
push
movl
jmp
into
rol
aad
rcl
jmp
insl
and
jl
ljmp
dec
loop
icebp
rol
fst
lret
fldl
in
lock
aad
out
stc
cmc
fdivrp
jecxz
cld
hlt
inc
div
fiaddl
loopne
into
mov
iret
loope
fidivs
test
stc
xor
leave
loope
adc
cmp
fsubrp
jmp
fisttpll
in
aad
vpsubusw
fiadds
xlat
xchg
lock
jmp
and
call
in
int3
shl
clc
iret
out
shr
and
hlt
inc
test
std
xlat
mov
sub
loope
xor
in
lret
icebp
div
lds
rolb
loopne
xchg
sub
ret
dec
fcom
sarb
addb
jmp
mov
in
icebp
subb
fsubr
in
out
in
cmp
loope
stc
into
out
xlat
mov
jmp
out
shl
in
out
int3
lock
fcomp
shlb
cmp
xlat
out
aas
ret
jecxz
fmul
cld
fsubp
ror
out
into
aam
jmp
rcr
out
std
cmc
rcl
fsubp
clc
cmp
in
int
fmul
iret
in
sti
rol
aam
lret
shr
lret
idivl
ss
fcomi
cmp
mov
out
mov
rorl
out
test
sti
int
loope
cmc
fldl
popl
fiadds
cmp
repz
leave
clc
cli
iret
cmp
neg
addl
mov
shlb
enter
clc
jmp
ffreep
cmc
test
idivl
repz
and
ret
lret
dec
lret
jmp
fldl2e
jmp
and
fdivrp
ljmp
loope
out
xor
fnstenv
divb
xlat
cmp
aaa
xlat
xor
aad
test
mov
mov
jecxz
in
aaa
icebp
cld
aaa
cmc
fildl
fsub
ljmp
mov
call
lock
sar
cmp
std
jecxz
test
faddp
stc
xchg
out
leave
ror
xrelease
shl
lock
cmp
aam
xor
shl
sti
rol
repnz
leave
cli
jecxz
fcmovnb
call
call
fcmovb
cmp
fistpll
fdiv
lock
mov
mov
sti
cmp
in
shl
in
xor
call
repnz
fcom
hlt
fmulp
cmp
incb
lock
shr
in
shlb
lret
fstpt
repnz
int3
loop
ds
test
mov
out
out
repz
leave
sti
lret
call
fsub
stc
aas
lock
mov
jecxz
sti
clc
enter
int
xchg
mov
in
cmp
out
test
aas
cmp
addb
mov
mov
sti
test
xor
leave
cli
sar
lret
cmp
test
icebp
hlt
fimull
jmp
loopne
lret
loop
aaa
xor
clc
cmp
pushl
cmp
xchg
out
std
test
shl
fmulp
icebp
lret
cmp
ds
aam
fucomi
clc
mov
test
neg
leave
into
repz
icebp
ljmp
fcos
fiadds
sarb
xor
ret
shl
fsubp
xor
loopne
cmc
cmp
jmp
sar
repz
sarl
in
xchg
mov
repnz
shr
xlat
leave
xlat
roll
loope
rol
testl
in
lds
out
hlt
rol
icebp
hlt
iret
jmp
aam
fcmovu
cmc
leave
loop
out
fcmovb
leave
mov
lock
stc
cmp
jmp
aas
call
fcom
jmp
in
hlt
adcb
aam
lock
vcvttpd2dq
aam
into
shl
sarb
aad
out
filds
xor
iret
in
repz
aas
test
push
sbb
repz
fcmovbe
lret
lret
icebp
mov
xchg
loopne
loope
enter
sarl
in
lret
ljmp
repz
lret
out
clc
shl
repnz
lret
cmp
rcl
leave
into
cmp
idivl
xlat
cli
addl
hlt
jecxz
cli
loopne
loope
xor
out
repz
cmp
aad
div
icebp
fcomi
cmc
cli
stc
in
loop
fisttpll
in
ljmp
jmp
jmp
test
repnz
out
lret
jmp
ffree
in
cmp
clc
leave
fnstsw
cmp
xlat
shl
test
lock
orb
shl
ljmp
test
or
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
push
push
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
jmp
sbb
jmp
rol
enter
aad
add
xchg
push
pop
mov
jl
add
sar
out
shr
fcomi
cli
cmp
lret
orb
test
ljmp
sarb
fistpll
aad
fnstsw
sti
cld
ffree
leave
enter
fsub
fucomip
cmc
aad
clc
aad
xor
out
repnz
sti
not
lds
out
leave
fimull
test
fmul
xchg
out
iret
idiv
int3
xlat
cmp
out
sti
in
shl
test
ret
mov
loop
in
lret
icebp
xor
aad
xlat
cmc
in
hlt
fdivr
rcl
cmc
loope
loopne
in
ljmp
lock
ret
in
aaa
xor
loope
loop
hlt
cld
ret
mov
imul
sbb
std
loop
enter
cmc
das
sti
jmp
sbb
shr
out
out
repz
iret
rcll
xor
out
aad
cmc
enter
ret
stc
test
loop
loop
sti
fcomip
fucomp
ret
in
cld
in
into
out
stc
xor
loop
xor
shl
cmp
sar
cmc
fcomip
shl
aad
testl
int3
out
out
ror
repnz
rolb
call
xchg
int
xor
ss
cmc
ret
ret
loopne
cmp
ret
hlt
jmp
addl
adcb
fdivrl
leave
jmp
rcl
sti
and
stc
nop
jmp
ror
xchg
shl
lds
aam
jmp
cmp
cmp
jecxz
in
loopne
leave
in
out
mov
mov
out
in
into
xor
enter
aaa
ror
cmc
sub
ret
cmp
cli
loop
fstl
xor
xor
xor
cmp
cmp
ds
shlb
fcmovnu
ret
out
in
mov
iret
in
test
imul
aaa
call
iret
aam
xor
fstp
into
cmp
clc
call
loopne
lret
jmp
loop
loop
jmp
enter
aad
hlt
test
xor
loope
mov
ljmp
xlat
enter
cmc
loop
cmp
mul
fimuls
shl
out
das
cs
in
xlat
clc
xor
xor
cmp
fst
ret
aam
lret
fcmovb
xlat
addl
lret
call
lret
out
cld
shr
cmc
out
roll
fildl
fmull
in
cmp
aad
cli
sar
aaa
ret
fcmovnb
testl
loopne
lret
in
stc
out
or
cmp
fucom
lock
fxch
call
enter
shr
shr
ss
hlt
rcl
stc
icebp
aam
jecxz
leave
mov
out
out
subl
loopne
icebp
xor
hlt
cmp
out
fsubr
fxtract
fnstcw
idiv
cld
ljmp
mov
cli
clc
jmp
iret
lret
sti
cmp
in
imul
ret
addl
cli
sbb
mov
cli
in
into
out
test
fldl
into
les
ret
shr
sarl
cmp
iret
add
vpaddd
hlt
out
cli
stc
or
ror
xor
lret
aaa
cmp
loop
cmp
mov
enter
int
xchg
out
out
repnz
ror
repz
fmul
cmp
cld
xor
aad
rcr
stc
out
shl
sub
out
cmp
int3
test
sar
leave
and
orb
out
fdivr
ror
cmp
int
ffree
cmp
incb
faddl
shr
divb
xor
repnz
not
ds
rcl
std
out
enter
test
leave
lret
out
int
into
in
xor
fnclex
rcr
fcmovu
out
loop
lock
jecxz
in
cli
aam
out
ss
out
clc
cld
addb
test
int
enter
test
iret
lock
shlb
icebp
aam
cld
fdivr
int3
idivb
cmp
rorb
loopne
sub
out
loopne
lock
jecxz
in
out
cmp
int3
test
imul
iret
push
testb
loopne
ret
in
out
in
repz
lret
ljmp
clc
cmp
rcl
out
cli
lret
jmp
in
jmp
jmp
int
cmpb
out
repnz
fucomi
ds
out
test
lret
xor
ror
not
repnz
and
repz
and
mov
lret
fimuls
int3
clc
int3
sarl
lret
call
int3
lock
mov
movzbl
and
mov
mov
adc
xor
or
jmp
int3
ror
fnop
xchg
sti
add
jae
mov
les
add
loope
jecxz
leave
out
ljmp
iret
jecxz
das
in
ljmp
aad
test
xchg
int3
icebp
mov
jmp
fcmovu
repnz
fmul
cmpb
loop
cmc
jmp
faddp
mov
xchg
jmp
fmulp
lock
clc
cmp
ss
jecxz
fadd
lock
loope
xlat
stc
jmp
mov
xor
rol
enter
icebp
ds
fcmovb
mul
hlt
cld
enter
lret
icebp
in
in
cmpb
xlat
aam
cmc
clc
cs
hlt
fdivp
faddp
repz
ret
fadds
mov
hlt
out
xor
aad
xlat
out
jecxz
test
cmc
aas
shl
mov
mov
fyl2x
nop
fsubp
test
into
xor
aaa
aaa
iret
shl
xor
loope
sbb
incl
fiadds
xchg
std
xchg
fisubrs
in
iret
clc
aaa
aaa
rcr
loope
fidivrs
jmp
cmp
loop
clc
test
fiadds
int
xchg
sub
icebp
cmp
cli
fsubr
xor
iret
fdivrp
repnz
repz
aad
leave
std
lret
fmul
orl
iret
fnstenv
cmp
xlat
test
ret
cli
stc
fld
sti
jmp
mov
popl
fsubrp
in
sub
cmp
incl
out
jmp
repz
clc
leave
sti
shll
xor
xor
cmp
fsub
flds
loopne
mov
enter
out
xor
rol
lds
call
into
idiv
hlt
clc
xchg
ret
orl
in
mov
xlat
xor
shr
cli
cmp
shl
ret
xor
push
in
leave
loopne
dec
jmp
hlt
sub
call
cmc
ljmp
jmp
in
fisttpll
xchg
loop
div
shr
imulb
xlat
shr
cmp
xchg
stc
fucomp
mov
xchg
xchg
in
fldl2t
shr
aad
aam
in
neg
cmp
clc
fsubp
loopne
in
rol
ret
out
cmp
shr
out
cmp
and
faddp
aad
call
loop
ljmp
clc
cmp
cmp
in
repnz
cmp
fadd
rolb
lea
shl
les
in
fucomi
incb
xchg
sti
shl
fcmovne
leave
xchg
out
int
xor
les
lret
in
cmp
aam
repnz
xlat
in
ret
fstp
hlt
loope
loope
rorb
iret
int
cmc
lret
jmp
clc
fucom
cmp
cld
rolb
iret
and
int3
aaa
aaa
aad
fcomp
sar
fucomp
cli
iret
lret
xchg
loop
fcmovnb
lret
lret
mov
in
lret
mov
ljmp
repz
into
loope
aad
loop
stc
clc
mov
test
std
lock
in
aam
lock
out
jmp
int3
lock
fucomip
enter
call
loop
in
sub
cs
xlat
int
lret
shr
out
aad
mov
test
aad
out
neg
shl
cmp
aad
cmp
aas
icebp
aas
mov
xlat
test
aam
lret
test
mov
xchg
jecxz
icebp
shrb
aam
in
fld
aas
aad
in
mov
xchg
leave
fucompp
xchg
cmc
out
xor
test
out
fucomi
sarl
cmp
cli
idiv
mov
int
int3
in
in
fucomip
int3
shl
cmc
enter
cmp
loopne
in
cld
test
cmp
iret
fcmovb
mov
xchg
mov
call
div
fidivl
iret
icebp
fcomi
rcr
ds
sub
leave
testl
jmp
lret
call
test
fsin
repz
test
test
jmp
fdivr
fsubr
lret
clc
call
test
mov
in
xchg
cld
repnz
hlt
int
fcmovne
out
xor
cmp
sti
test
call
out
cld
faddl
shr
divl
fucom
fcom
sti
aaa
cmp
clc
jecxz
sbb
jecxz
loopne
clc
out
std
loopne
jecxz
xchg
test
fld
ror
shlb
cmp
xor
aas
sti
jmp
roll
rol
fldz
cmc
into
repz
frndint
int3
std
cmc
xlat
test
xchg
ret
leave
out
ds
ret
in
loopne
xchg
cmc
ret
xor
aaa
out
cmp
xor
aad
sbb
shl
mov
in
loopne
std
jecxz
cs
repnz
fcmovbe
xlat
aas
addl
fcmove
cmc
ljmp
add
ror
fcmovu
fcmovne
sbb
dec
rclb
add
jmp
nop
out
lock
aaa
icebp
ss
out
lret
repz
fsub
test
sub
xlat
test
xor
test
iret
aaa
das
not
shl
cld
lret
out
enter
shl
in
cmp
lret
mov
addl
jecxz
cmc
xor
xlat
loope
lock
in
shl
in
mov
fldl2e
jmp
out
cmp
cli
out
xor
imul
out
loop
into
sti
ret
xchg
jecxz
cld
stc
fimull
out
out
cld
xlat
leave
lret
xor
enter
fptan
fcmovne
lock
aam
xchg
clc
lock
cld
filds
cmp
repnz
aaa
shr
sar
cld
std
fldl2t
ret
int
xor
leave
enter
aad
addb
clc
rol
sti
jecxz
mov
sti
shl
jecxz
ds
xor
sti
aaa
repnz
ds
fildl
cld
sbb
rol
loopne
icebp
in
ljmp
xor
cld
roll
mov
fcomp
ffreep
fcmovu
loopne
out
iret
clc
xor
xor
in
enter
testl
xchg
icebp
ror
out
ret
aaa
std
in
in
fscale
aad
shlb
shl
call
fadds
rcl
mov
leave
aaa
jmp
flds
fcomp
sti
jmp
test
cmp
shl
xor
shl
sub
cmp
sti
cmp
incb
in
ljmp
imull
aad
iret
xor
sarl
icebp
lret
loope
in
fadd
loop
imul
ret
mov
nop
out
mov
ror
jmp
stc
cmp
call
fdecstp
shr
ret
mov
rolb
lret
lret
fld
aad
cmp
in
int3
shl
sti
loop
lock
cld
test
fisttpl
mov
icebp
jmp
ljmp
out
std
lock
cli
cmc
fstp
lea
inc
aad
sub
ss
cmc
cmp
xor
in
in
cmp
rcl
test
out
int3
rcr
mov
ss
ror
fcmovne
loope
aas
ror
mov
ffreep
xlat
cmc
cld
call
test
out
loop
int
in
lret
lret
rcr
icebp
out
cli
in
xchg
fsubp
jecxz
sub
call
aad
xor
xlat
lock
test
mov
in
jmp
idivl
stc
sti
cmc
div
out
cmp
fsubr
cmp
stc
clc
mov
cmp
mov
int
xchg
fdivp
repz
clc
fnstenv
xor
iret
cmp
cli
fsubr
xchg
shr
repnz
stc
int
and
fucomp
ds
cmp
xor
shl
ret
aam
fisttpl
int3
in
mov
loopne
sar
cmp
cmp
jmp
cmp
clc
fildl
and
int
jecxz
in
jmp
lret
lret
xlat
aaa
repz
fcom
xchg
jecxz
and
sti
std
test
xor
enter
out
fmulp
int
in
fnstcw
shl
jmp
xchg
lret
stc
ljmp
out
xlat
cmp
bnd
out
out
hlt
iret
sarl
out
int
mov
in
lock
int3
loop
xor
into
mul
clc
iret
fdivr
ss
std
roll
mov
jmp
loope
aad
int3
call
xor
shr
repz
out
mov
mov
jecxz
jmp
test
repz
cmp
stc
addl
mov
aad
iret
iret
fdivr
int3
int
testl
out
call
loopne
sub
ljmp
loopne
cmp
out
lret
cld
jmp
shl
mul
fcom
sti
stc
cld
idivb
adc
lds
call
fdiv
shl
aad
sub
cmp
int
shr
into
shl
mov
in
enter
int
out
out
xor
sub
cli
lret
jmp
fld
cld
test
call
int3
addb
ret
aad
ljmp
iret
loopne
test
xchg
loop
jmp
std
loope
mov
ret
fidivl
fdivp
test
xchg
fadds
fdivr
std
jmp
out
xlat
jmp
xlat
in
shl
fdiv
cli
std
rcr
in
fisttpll
int
mov
jmp
leave
ds
fstp
fnstsw
aaa
dec
jmp
mov
add
repz
fdivs
clc
not
cs
cmp
int3
loope
aas
ret
add
repz
test
in
ret
lock
loope
mov
div
repz
leave
enter
cli
repnz
fsubr
in
cld
fsubp
loop
xchg
out
sti
iret
out
lock
rol
xor
hlt
out
imul
out
fdivr
xor
aam
cmp
fiaddl
adc
sub
loope
repnz
lock
out
into
fxch
cli
loope,pt
rcr
leave
cld
in
jmp
mov
out
leave
ror
shrb
in
loop
fucomi
fcmovbe
repz
lock
jecxz
call
mov
loop
xchg
out
int3
nop
sub
enter
das
sarb
cmp
rcr
frstpm(287
vpaddusb
in
xchg
addb
aam
ror
cmp
in
lock
aas
sar
rcr
aam
ljmp
rcl
test
shl
sti
sar
shl
test
loope
xchg
addl
into
xchg
xchg
fsubrp
sar
fnstsw
repnz
cmp
jecxz
call
jecxz
aad
in
call
aam
lock
in
mov
ss
cmp
xlat
fimuls
into
cmp
repz
aam
jmp
xor
cmp
repnz
jmp
jecxz
cli
in
shl
int
xor
adc
out
ror
decb
int3
jmp
sar
vpmuludq
div
std
neg
into
aad
icebp
aam
flds
repnz
in
int3
in
cmp
in
cld
aaa
ds
std
jecxz
std
addb
adc
into
mov
iret
icebp
ss
idivb
cmp
ret
ret
mov
out
jmp
enter
mul
xor
icebp
cmp
jmp
clc
sti
rolb
leave
loope
test
out
mov
leave
xor
iret
fsubrp
aam
cmp
loop
ret
stc
mov
in
fiadds
cld
loopne
xor
in
leave
icebp
xor
in
lret
cmp
jecxz
fdivrp
xlat
out
test
sar
cld
in
fcmovb
hlt
rol
in
clc
xor
repz
cmp
cmp
cmpl
cmc
testb
into
test
icebp
out
repnz
clc
cmc
adc
loopne
jecxz
in
fndisi(8087
mov
mov
or
out
out
stc
aad
sarl
idiv
sti
idiv
clc
fucomip
sti
loop
jecxz
mov
jmp
ret
ljmp
rol
fsubp
in
clc
imul
test
out
adc
icebp
stc
in
sti
out
lret
rcr
in
into
loope
add
loopne
ljmp
jmp
hlt
aad
iret
idiv
std
fucom
shr
out
vpsubsw
xchg
in
ljmp
cld
ljmp
lock
out
stc
jecxz
xchg
cmc
das
lock
cmp
xor
cmp
and
rol
stc
orb
cmc
xor
repnz
xor
stc
cmp
sbb
fchs
enter
test
lock
fcom
fprem
in
cmp
ret
rolb
stc
ret
fcmove
loopne
out
xchg
out
out
lret
xlat
jmp
cmp
jecxz
ds
cmc
cmp
cld
mov
cmc
xchg
iret
jmp
in
xor
fld
and
loopne
test
nop
sbb
hlt
xor
out
sub
in
ss
iret
shr
repnz
in
add
fcmove
xchg
repz
in
lret
mov
out
shl
int3
fldpi
jmp
cld
faddp
aad
cli
sti
xlat
ret
in
in
popl
in
clc
cmp
int3
in
clc
cmc
ljmp
enter
jmp
test
sub
clc
std
xor
cld
push
cmpb
jecxz
mov
loope
ljmp
iret
fidivs
repnz
cmp
ss
ljmp
flds
test
xlat
hlt
xor
sti
xor
sti
in
rcl
loop
std
xor
lret
int
into
out
lock
leave
stc
cs
neg
in
int3
cmp
iret
cli
shr
jmp
xchg
sub
leave
xor
jmp
aas
fdivr
int3
xlat
test
xlat
cmp
cmp
movl
icebp
sarb
cmp
cmp
faddp
clc
mul
clc
sti
test
decb
aad
sub
jmp
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
jmp
iret
ret
fstp
insb
sub
repz
jo
aad
jl
add
enter
jmp
fcmovu
inc
cmc
cli
sar
loopne
out
out
xchg
int3
ror
in
ret
shl
cmp
leave
cli
fstpt
xor
cli
xchg
cld
mov
fcomi
leave
loop
jecxz
int
out
int3
mov
cmp
ss
lock
fmul
fadd
movb
mov
xor
ret
out
jmp
jecxz
cmp
fdiv
call
lret
in
sbb
loope
out
lret
xor
rcr
hlt
test
in
ret
sti
xlat
clc
out
test
into
jecxz
sub
out
xor
ss
icebp
loopne
aad
out
decl
repz
int
xor
shrb
int
repnz
into
int3
cmc
sub
roll
fcmovbe
cmp
loop
xchg
out
in
leave
xlat
repz
fcmovu
sar
aam
shl
std
faddl
jmp
decl
lret
out
leave
aam
faddl
loopne
fcmovnu
neg
int
leave
fisttps
xchg
xor
xor
enter
addb
aad
mov
jecxz
std
in
test
aam
hlt
cmc
cmc
int3
iret
hlt
cmp
sbb
icebp
hlt
roll
nop
ljmp
cs
stc
lret
repz
cli
or
in
fcmovne
std
rorl
std
xchg
out
mov
icebp
aam
in
std
in
ds
shl
cld
cmpl
fcomi
xchg
mov
out
lret
out
nop
xchg
loopne
bnd
xlat
fdiv
cmp
std
ffreep
sar
mov
cmp
std
fists
xchg
xlat
loope
call
repz
hlt
out
cld
aas
and
loop
jmp
nop
nop
sub
xor
lret
in
iret
cmp
incl
rolb
mov
clc
xor
aam
sarl
lock
cmp
loopne
icebp
incl
in
out
loopne
xchg
mov
cmc
ret
int3
aam
leave
sti
out
sar
repnz
cmp
cmp
ret
ret
faddp
sti
cld
mov
in
rolb
out
aad
jmp
leave
sbb
test
aad
in
jecxz
test
in
shl
jmp
out
jmp
cmp
jecxz
rolb
stc
lret
faddl
out
int3
iret
out
aad
fdivrs
fidivrl
ret
cmp
xchg
aam
fisttpll
enter
xor
aam
rcr
ret
lock
loop
movb
xchg
xchg
in
aaa
shlb
aaa
sub
ss
frndint
cmp
out
hlt
shl
out
lret
loop
mov
mov
loop
lock
shll
fsubrp
stc
ffree
loop
out
aam
loopne
call
repnz
in
jmp
cli
sbb
in
fsin
vpsubd
in
mov
loop
leave
imulb
iret
call
in
repnz
jmp
fcmovnu
xchg
loop
leave
filds
xor
ret
xor
lret
fsub
loop
clc
cmp
test
mov
sub
cmp
fdivr
ror
hlt
stc
cmp
fildl
mov
ror
into
int3
ret
in
sub
in
lret
leave
fstpt
jecxz
int3
cmp
cli
aad
repz
in
mov
test
repz
repz
lret
clc
cld
repz
shl
cli
cld
loope
call
fdiv
mov
ror
das
ss
cli
xor
inc
cmp
adc
leave
test
in
mov
hlt
cmp
clc
test
sub
mov
add
in
out
enter
out
cmc
test
neg
aaa
rolb
jmp
cli
iret
sbb
aad
loop
in
shr
div
aam
sarl
shl
xchg
xchg
std
orb
in
ss
loope
loop
rcl
cld
in
mov
xchg
fucomip
mov
into
fsubr
in
neg
lret
icebp
out
xor
fcmove
icebp
std
lock
xlat
hlt
in
out
lea
out
aam
int
vpmovmskb
xor
cmc
into
dec
cmpb
cmc
fcomip
out
std
xchg
ljmp
aad
leave
sar
shlb
cmp
int3
clc
in
mov
cli
mov
add
out
call
lret
out
fidivl
aaa
aam
cld
xor
out
std
mov
in
iret
lock
xlat
into
div
dec
fstp
mov
mov
mov
mov
mov
xor
xor
add
add
jmp
rol
int3
fcmovnu
fcmovb
and
ja
xchg
cmp
jl
add
loopne
sbb
xchg
xchg
out
xchg
sub
enter
out
into
fnstcw
ss
sar
adc
shl
out
loop
cmp
in
xor
clc
out
xor
ss
sarb
fsub
jmp
mul
xchg
test
in
mov
not
call
sarl
rcr
test
rorl
fisttps
ret
call
icebp
out
sar
ljmp
call
stc
loopne
mov
xchg
ror
fucomp
out
cld
aam
fcmovnb
jecxz
sti
cmc
cmc
xor
fisttps
in
out
aas
hlt
leave
xlat
out
sub
div
repz
clc
hlt
test
test
addb
test
in
icebp
int
loop
out
repz
in
lret
and
out
fldl
ret
lret
hlt
mov
repnz
aaa
ljmp
ror
fidivrl
cmp
test
hlt
jmp
clc
lock
jmp
fld
sub
hlt
rcr
aad
icebp
in
repnz
shl
enter
loop
jmp
lret
fyl2x
fsubr
cmp
shl
dec
mov
in
xchg
fmull
ljmp
xor
rcr
cmp
rol
rorb
loop
xchg
repz
vmovq
clc
shll
cmp
in
fcmovu
in
xchg
fcmove
mov
clc
sti
xor
rcr
in
out
sar
sti
in
fidivl
rcl
jecxz
shl
stc
xlat
mov
xlat
hlt
xchg
xchg
out
leave
cli
hlt
aam
ljmp
sti
fdivr
rol
out
jecxz
int3
mov
call
ror
sti
fdivrs
stc
std
cmp
cli
rcr
int3
in
rcl
fst
in
mov
jmp
out
sar
sub
sar
cld
shl
dec
adc
ljmp
jmp
in
das
rcr
cmp
lock
stc
shl
repz
fmul
loopne
aad
aam
in
mov
jmp
out
sub
cmp
ror
int3
cmp
cmp
roll
mul
hlt
aam
fimull
enter
sub
clc
fdivp
out
rcl
aas
lds
loop
out
lret
sub
shr
in
lock
vpsrld
icebp
xor
rcl
int3
xchg
ret
mov
jmp
jecxz
lock
xlat
aaa
sub
int3
ljmp
into
div
stc
idiv
fucomp
ret
xchg
lock
orl
xor
clc
rcl
aas
sar
rcr
std
in
sbb
std
loopne
aas
hlt
fucomp
fdivr
fmul
loope
in
loope
out
out
cld
in
ljmp
xchg
jmp
aaa
jmp
out
leave
cmp
fcmovbe
cld
loop
fidivrs
rol
jmp
int
lock
mov
ror
sub
sti
in
out
loope
repz
and
in
fdivp
out
fdiv
cli
jmp
jmp
xor
xor
std
ds
sti
fnstsw
fstp
ret
fmul
enter
mov
shl
call
rcr
hlt
stc
test
out
cmc
fcmovnu
std
mov
mov
fcoml
xor
xor
xor
jecxz
shr
loope
in
movl
sti
clc
fstp
fst
cmp
clc
lret
cmp
out
rol
xchg
xlat
or
mov
test
jmp
cld
fst
ljmp
sti
ds
fsubr
stc
fisttpll
in
lret
xor
rcr
pushl
ret
in
loop
fimull
decl
int3
cmp
lock
repnz
repnz
ljmp
orb
in
cmp
shl
aam
test
cli
lock
repnz
movl
hlt
leave
not
xor
and
xchg
fcom
fadds
test
call
icebp
std
aaa
aad
into
cmp
shl
icebp
call
loope
xlat
cli
ljmp
out
lret
out
sti
jmp
dec
lret
in
test
ss
sti
decl
xchg
xchg
rorb
div
lret
sti
in
xlat
lock
fdiv
idivl
into
cli
jmp
ds
in
nop
xchg
ret
jmp
cld
ds
repnz
jecxz
cmc
fmul
in
mov
call
jmp
into
fldl2t
fcmovnbe
in
ror
fdiv
cmc
loopne
iret
mov
mov
cmp
jmp
iret
aad
ret
fst
dec
cwtl
mov
add
fistpll
add
test
test
in
sbb
out
in
in
dec
rcr
idiv
lret
loop
loopne
call
test
lret
lock
out
ret
xlat
xlat
hlt
std
shr
std
ds
faddl
aam
int3
ljmp
lret
xor
jmp
iret
int
neg
lock
shr
clc
lret
jmp
in
fcmovnbe
mov
ljmp
int
cmc
shl
icebp
loope
rcr
lock
fsub
ljmp
shl
lret
ret
icebp
cmc
aam
hlt
lret
cmp
call
jecxz
loop
rol
ljmp
fldl
ror
das
xor
fidivl
test
fcmovbe
jmp
ret
in
jmp
repz
xor
xor
icebp
cmp
loope
rcr
and
mov
call
in
fucom
sbb
lret
int3
xor
in
xor
out
lret
shl
iret
shr
out
ret
jmp
jecxz
std
cmp
lret
xor
iret
in
xor
std
repz
ss
stc
div
icebp
testb
fcmovnb
mov
out
int3
nop
mov
fdivp
lret
repnz
ds
cmp
fsubp
out
mov
in
in
out
call
loopne
cmp
ljmp
iret
test
fcmovne
lock
call
call
aam
hlt
in
hlt
cmp
std
ss
adc
loop
lock
jecxz
out
enter
int
rcl
sarb
xlat
jmp
and
repz
loope
int
sarb
cmc
fcmove
aam
loope
ljmp
addl
in
out
xor
int
fsubr
out
ljmp
cmp
aam
int
loopne
xchg
loopne
aad
ror
xor
rcl
repz
loopne
lock
cmc
hlt
std
cmp
div
jmp
enter
enter
cmp
fsubr
sarb
cli
loop
fsubrp
repz
cmc
mov
test
ljmp
icebp
fnstenv
loope
in
test
mov
cli
test
call
jmp
cli
sarb
and
fcmovbe
cmp
fmull
aad
hlt
not
enter
cmp
loop
loopne
jecxz
rorl
sti
xacquire
aam
sub
jmp
repz
fidivs
cli
xchg
xchg
fadd
jecxz
adcl
fcmovne
sarb
clc
fnstcw
in
mov
stc
fldl2t
jmp
fimull
xor
out
sub
cld
in
ds
aad
mov
sti
cli
loop
in
in
sub
nop
xchg
divl
lock
icebp
fnsave
aad
xor
cli
jmp
jmp
ret
enter
cmp
repz
adc
stc
fcmovbe
sbb
fldln2
sbb
into
xchg
xchg
lock
out
shl
lret
shll
int3
dec
shl
cli
test
orl
out
mul
xor
repnz
test
sarb
call
loopne
cmp
lock
fnclex
fdivr
out
cli
cmc
mov
shr
sub
lret
int3
xor
sti
into
xor
fcomi
jmp
iret
icebp
dec
call
xor
in
ljmp
lret
int
fsub
fiadds
in
loope
sbb
jmp
iret
in
lret
enter
ljmp
ds
add
clc
ret
faddl
jmp
loope
ss
xor
std
aas
cld
out
fldl2e
addb
cli
mov
std
icebp
int
repnz
test
aad
out
jmp
aaa
enter
lock
ret
rcl
fimull
fiaddl
aam
iret
in
clc
shrb
fdivp
in
lret
xlat
sti
fmul
aam
call
in
jecxz
cli
mov
xchg
test
iret
loopne
int
ss
in
cmc
call
fcmovb
in
sbb
in
leave
in
loopne
fadd
int
iret
test
inc
idiv
sar
cmp
ret
out
hlt
out
int3
into
in
fists
out
out
iret
lret
lret
aam
cmp
in
cmp
cli
stc
fsub
std
in
lret
enter
out
xor
mov
cli
cmp
fdiv
rcr
shl
rcr
mov
in
ljmp
xor
clc
test
ljmp
lock
lock
hlt
adc
out
int3
iret
xchg
jmp
ror
rcl
out
stc
out
sti
int3
cli
xchg
loop
call
jmp
jmp
iret
int
ret
fstp
sbb
xchg
mov
add
mov
jmp
shlb
xor
rcl
sarl
adc
sti
repz
in
mov
cld
mov
mov
ss
in
hlt
ljmp
test
fildl
xchg
iret
nop
pop
xlat
iret
shl
icebp
out
sarl
cmc
clc
sar
and
cld
mov
out
std
fucom
in
jmp
out
out
shr
xor
fnstcw
xlat
cmpb
ds
addb
mov
jmp
shl
nop
jecxz
hlt
xor
ret
in
xor
aas
shl
out
cmp
loopne
repnz
xchg
ret
shl
xchg
iret
enter
hlt
sarb
fst
sti
aas
in
fildl
fucomp
std
ljmp
ret
cmp
cmp
cmc
std
in
incb
xlat
fadd
in
in
sbb
loopne
lock
idiv
call
cmp
std
fcom
and
hlt
sbb
mov
ret
leave
in
cli
cmc
fnstcw
jecxz
fcmovne
aad
fmulp
test
icebp
nop
cld
mov
xor
rcr
ret
jmp
in
cmp
lock
loop
int
test
xchg
in
rol
int3
sub
lock
lret
sar
filds
int3
xchg
ret
out
lock
xlat
aad
ljmp
not
sbb
jmp
or
fdivr
xchg
in
xchg
repnz
xlat
lock
iret
into
cmp
rcr
shl
cli
clc
clc
jmp
lds
in
cli
fmul
cs
aas
xor
cmp
std
flds
fucomp
into
repz
shll
ljmp
leave
repz
clc
cmp
rcr
cmc
cmp
sbb
mov
in
mov
aad
jmp
lret
aam
lock
int
in
loop
testl
lret
hlt
jmp
ss
cmp
cmp
fcomip
fxch
fxch
icebp
test
into
out
int
loopne
ss
xor
xor
loopne
loopne
test
iret
sar
out
jmp
jmp
mov
in
into
jecxz
clc
jmp
out
shlb
not
rolb
fcomp
test
in
in
in
shrl
loopne
stc
int
enter
fsubr
in
idiv
sti
cmp
loope
test
lea
loopne
jmp
leave
fldcw
enter
fstpt
loope
fsubrp
out
hlt
ds
loopne
mov
int
vaddsubpd
cmp
into
in
in
aam
sarl
shl
stc
add
std
enter
lret
sub
repz
in
into
cmp
in
ds
fdiv
out
mov
int
icebp
xchg
out
sar
jmp
aas
xor
fsubp
xlat
adc
imul
jmp
lock
das
int3
test
repz
aas
fdivp
cld
cli
fildl
fsubr
icebp
in
inc
jmp
into
out
aam
cli
incl
ret
in
fst
jecxz
rclb
xor
fidivrl
hlt
repnz
rcr
std
incb
loope
fucom
idiv
clc
lock
aam
in
loopne
loop
enter
sti
cmp
roll
loop
in
xchg
enter
shlb
shl
clc
xor
in
icebp
ljmp
fcmovnbe
lret
test
call
xchg
test
out
xor
hlt
bnd
rol
mov
add
loop
xchg
xchg
lds
lret
icebp
not
fsin
loopne
sarl
icebp
ret
std
fcomp
and
sti
ret
int
repz
xor
cmc
std
jmp
jecxz
lret
cmp
fadds
test
sub
mov
in
out
in
fiaddl
rol
lock
mov
rolb
test
sub
ljmp
sub
std
repnz
neg
faddp
fisttpll
loopne
out
loop
ret
repnz
enter
sar
clc
add
mov
push
or
fucomip
rorl
fincstp
idiv
cmc
fdivr
out
cmp
sar
xor
mov
ljmp
divl
aam
lret
clc
vpminsw
ss
out
std
fidivrl
ret
in
xchg
mov
jecxz
repz
fnstenv
std
aad
aad
fdivrs
loopne
xchg
jmp
and
ljmp
xor
ljmp
in
test
cli
in
aas
shl
fldl
fimull
je
xor
add
jmp
rol
sarl
rcl
mov
ret
ffreep
ds
jl
fnstenv
icebp
sub
ljmp
test
fistpll
lock
loop
fcmovnu
fcmovne
incl
in
xlat
idivl
xlat
sti
cmp
shr
rcr
out
faddp
jmp
idiv
addl
loop,pt
cmp
ljmp
ret
loop
shl
test
mov
fucomip
hlt
xor
hlt
lret
fdivs
xorl
fsub
flds
call
iret
cmc
aam
xor
out
clc
fcomip
cld
lock
fabs
ds
loop
jmp
out
enter
shlb
out
lret
repnz
leave
cmp
cli
fxch
cmc
xchg
cld
mov
test
xor
icebp
int
out
aam
fchs
xlat
aam
repz
repz
fldl
fimull
sarl
lock
fdivr
leave
aas
aas
std
idiv
test
loope
ret
iret
iret
out
lret
out
mov
iret
out
in
idiv
cmp
aam
sarl
std
loopne
jecxz
shl
repnz
clc
clc
shl
in
lret
xchg
int3
shl
jmp
in
fst
repz
mov
mov
jmp
mov
out
leave
rcl
clc
lret
in
loope
stc
call
sti
out
int3
fmulp
test
xor
xor
out
cli
iret
ror
int3
div
jecxz
sar
cmp
out
ror
in
ror
call
in
int3
in
lock
std
jmp
repz
cmp
rol
jmp
fisttpl
nop
into
aad
out
leave
jmp
xor
shl
into
aam
fcmovnu
loopne
rolb
lret
xlat
cmp
sti
xor
in
leave
enter
mov
xchg
test
xlat
in
in
jmp
clc
icebp
rcr
ffree
cmp
fcoms
shl
ret
lock
cmp
sar
std
fcom
fninit
rcl
stc
mov
lret
out
fisttps
call
out
hlt
in
cmp
ss
orb
int3
mov
int3
xor
cmp
aad
std
ljmp
repz
fcmovnb
out
mov
jmp
mov
ret
imul
neg
xor
ljmp
aad
jmp
fsubr
sti
lret
xchg
test
iret
ror
xlat
fstpt
cmp
cmc
xorl
stc
jecxz
leave
mul
fiadds
sti
fucomp
out
jecxz
jmp
shl
fdivp
add
fldl
out
stc
ljmp
ret
out
clc
cmc
out
ds
iret
div
rcr
in
testb
xchg
xchg
xor
cmp
aam
fbstp
into
xlat
fmulp
iret
cmc
rcl
std
rorb
call
test
ds
repz
fdivr
sti
imul
repnz
ret
cld
xor
aad
mov
out
fadds
sub
out
std
clc
cmp
fnstcw
cmc
fxch
in
jecxz
into
sub
repz
lret
leave
clc
lret
cmp
loopne
in
mov
clc
jecxz
fcom
fcoml
cmc
shlb
pushl
cmp
shl
ret
ret
out
fcmovu
out
int3
test
xchg
lret
xor
jmp
lock
int
into
lock
and
mov
into
lea
enter
xor
cmp
cmp
jecxz
in
xlat
mov
fsub
in
ljmp
aam
repz
xlat
sbb
aam
lds
sar
cli
std
out
lret
iret
jmp
jmp
hlt
aas
cmp
lock
addb
adcb
call
jmp
cli
cmc
aaa
test
call
out
test
orb
lock
int3
aad
xor
fdivr
clc
testb
ret
faddl
jmp
int
frndint
out
mul
rolb
in
enter
jecxz
hlt
in
lds
cmp
fdivrs
cmp
fst
cmp
in
fiadds
out
xchg
int3
rol
sar
in
out
jmp
aad
sti
int3
fsubrp
into
fdivr
xchg
fldl
mov
clc
sub
cli
std
out
sti
sti
fldz
aad
out
fcmovb
fcomp
enter
leave
leave
adc
aad
icebp
xor
fnstcw
stc
ljmp
movl
xor
rcl
cs
sti
int3
aad
mov
jmp
iret
aad
aad
push
sbb
dec
daa
in
jg
add
std
loope
iret
jecxz
ret
not
lret
xchg
jmp
xchg
xor
out
ljmp
sarl
xchg
jmp
test
lea
aas
out
int
lret
cld
rcl
shl
cmp
aam
jecxz
mov
mov
xchg
out
sti
in
lret
ds
into
repnz
leave
jecxz
std
clc
ret
lret
iret
or
sbb
lret
sti
in
lock
shr
xor
cli
repz
xchg
das
out
xor
stc
cmp
xor
stc
xlat
jecxz
into
ret
cld
jmp
mov
ljmp
jmp
int
cld
shl
cmp
call
test
orb
aam
aad
rcl
out
not
lret
cmp
cmp
repz
in
dec
mov
int3
xor
in
lret
out
aam
std
ret
fsubp
jecxz
repnz
clc
jmp
cld
lock
jecxz
shr
xor
int3
cli
aaa
xor
rcl
loop
aas
out
xlat
mov
fcmovbe
in
clc
repz
jecxz
jmp
cmp
enter
fidivrs
cmp
std
imul
out
div
orl
call
sub
test
cmp
fsub
test
test
clc
ror
cli
faddl
cld
mov
loop
ljmp
dec
fchs
aad
jmp
fcomi
cmc
or
out
stc
clc
lret
cmp
repnz
stc
fmul
aas
cli
fdivrl
in
imul
faddl
repz
ret
xor
hlt
stc
enter
sti
fdecstp
mov
testb
int3
std
int
lret
aaa
out
lret
cmp
sti
loope
fsubr
shr
int
out
cmc
lret
repz
into
cmc
fptan
iret
ds
cmp
loope
orl
out
int3
lds
xor
fucomip
int3
rolb
repnz
out
mov
loop
xor
repnz
fadd
hlt
stc
rcr
icebp
fldl
loope
enter
mov
jecxz
xor
sar
lock
jmp
ror
addl
mov
cli
mov
mov
icebp
xchg
in
into
ds
iret
xor
xor
ds
loope
in
int3
stc
shl
ror
aam
fdivr
in
or
xchg
clc
icebp
cli
adc
in
out
stc
ret
mov
nop
out
jecxz
leave
clc
fucomi
in
not
shr
cli
fstp
cmc
ds
hlt
not
ret
lret
in
fmulp
nop
ror
xchg
call
in
out
call
cmp
loop
test
loope
xchg
sub
jecxz
out
cmp
jmp
out
clc
rcr
leave
xlat
sti
loop
movl
in
into
cmc
aaa
in
lret
xor
sarb
incl
iret
fldl
lock
in
aaa
xor
out
stc
aas
rol
repnz
stc
lret
iret
mov
xchg
orb
into
neg
dec
enter
flds
lret
cli
in
mov
out
cmc
in
aad
lret
ss
out
sti
hlt
cmp
hlt
xlat
jecxz
test
out
loope
mov
repz
ljmp
jmp
call
icebp
sti
fcmovb
xlat
test
out
in
mov
iret
fsubrp
divb
clc
loop
std
bnd
sti
ret
xchg
shl
xchg
mov
shr
out
icebp
sti
into
repnz
cmp
sbb
call
adcb
int
cmp
fdivs
int
lret
cmc
xor
and
orb
xchg
repz
cmc
into
jmp
leave
cld
ss
sti
adc
div
neg
hlt
sti
mov
in
rol
call
lret
lret
enter
test
cmp
cmc
loop
in
mov
out
repz
lret
aaa
enter
sar
cmp
cld
ret
cmp
sbb
in
mov
cld
orb
jecxz
shlb
in
lret
out
fidivl
loopne
shl
rcr
cli
repnz
loopne
mov
xchg
cmc
into
lret
jmp
cmp
or
std
jecxz
test
clc
ljmp
clc
jmp
shl
rcr
lock
ror
imul
cld
cmp
repnz
test
mov
cld
aad
in
div
iret
iret
lock
rol
scas
roll
or
or
leave
ret
push
mov
push
not
push
movl
mov
mov
mov
mov
mov
movl
cmp
movl
jmp
int3
aam
xlat
fst
fldl
mov
jb
popa
pop
or
jg
std
add
adc
mov
out
fmulp
loope
nop
lret
iret
rcr
repnz
lret
in
in
flds
ret
sar
lret
call
call
cmc
das
xor
mul
icebp
cmp
xor
cmp
out
shl
incl
mov
mov
repnz
in
aaa
out
cmp
icebp
jmp
loop
in
cld
test
mov
icebp
xchg
orb
clc
jmp
xor
cmp
xlat
xlat
shlb
aad
lock
orb
lret
jecxz
in
std
fcomip
fcmovnu
int
iret
fnstcw
std
test
xchg
jecxz
mov
mov
std
mov
xor
clc
xor
int3
fcmovnu
fcmovnu
div
fimuls
xchg
fcmove
leave
fldl
ss
rcl
repz
repnz
cmp
cld
jmp
stc
leave
fucomi
rorl
lock
iret
cld
cld
aaa
out
sti
xlat
fdivr
aas
ret
clc
ret
std
call
cld
mov
and
xor
icebp
sti
lret
int
in
faddl
test
dec
in
std
sti
mov
mov
stc
out
enter
jmp
int
loopne
loope
aad
fimull
cli
out
in
xor
loop
lret
out
xor
loopne
test
add
repz
in
call
incl
aam
fnstenv
jmp
cmp
cmp
lock
div
loope
call
loope
out
test
shl
ds
xlat
lret
xor
jmp
aas
ds
sti
testb
loop
jecxz
lret
cmp
fsub
repnz
imul
fdivr
into
rcr
shl
rol
xlat
icebp
ret
mov
cli
fmulp
xchg
out
lret
clc
iret
fucomp
xor
faddl
into
mov
sbb
in
out
xchg
rorl
cs
sar
cmp
aam
loop
fistpll
loopne
std
lret
lret
jmp
addb
xor
rcr
cli
test
ror
ds
ret
in
test
bnd
and
test
xchg
int
enter
out
cmp
in
sarl
fcmovbe
out
ds
shl
repz
loope
leave
in
jecxz
adc
lret
call
cmc
fdivr
fdivrs
loop
aad
out
fimull
in
filds
rcl
aam
fucomp
xor
cmc
shl
loope
testb
fdivr
call
fdivp
ret
rol
stc
aas
call
cmp
test
decb
call
mov
enter
lret
in
adc
stc
in
push
sti
jecxz
in
addl
ss
icebp
in
out
lock
fstp
dec
loopne
sarb
sti
aad
cli
xlat
jmp
div
ljmp
iret
int
iret
call
cmp
icebp
sbb
jecxz
xchg
ret
fistpll
out
in
enter
das
shlb
cs
iret
out
aaa
jmp
fcomp
cmp
test
cld
in
cld
mov
std
jecxz
cli
rcr
sub
xor
out
ljmp
rcl
int3
fcmovu
adc
xchg
loop
jecxz
lret
aaa
xor
cs
fcmovbe
cmp
fdivrp
in
sar
clc
lock
fisttpll
xor
into
ret
xor
hlt
fbstp
jmp
loope
repnz
iret
call
lret
shll
lock
cmp
out
icebp
out
lock
rcr
jecxz
test
loope
aam
mov
repz
out
in
in
cmp
int3
lds
out
fxch
loop
sub
out
out
iret
not
in
in
cmp
cld
out
fyl2xp1
cld
not
xchg
icebp
xor
lret
sub
shl
loop
div
aaa
aad
icebp
fdivrs
xor
frndint
xlat
mov
mov
loope
repnz
call
cmc
repz
sti
clc
hlt
movl
in
hlt
xlat
lret
in
out
lret
repnz
icebp
rcr
ror
out
loop
fst
fdiv
cli
xlat
loop
iret
jecxz
std
loope
cmc
in
sti
xor
std
aas
ret
out
out
and
lret
jmp
nop
shr
cmp
cmp
xor
fcmovne
stc
rorb
test
add
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
push
call
mov
dec
mov
jmp
mov
xor
mov
add
mov
movzwl
not
jmp
rcl
ror
fstp
fldenv
jns
inc
idivl
std
add
out
cmp
fiaddl
std
xchg
iret
repnz
fst
rcl
out
repnz
cmp
out
add
movb
xchg
in
test
xor
out
sti
out
cmp
xlat
movl
test
ljmp
xor
in
jmp
rcr
rcl
rcr
test
fsubr
out
xchg
nop
lock
out
hlt
in
lret
out
out
repnz
repnz
ret
std
ffree
out
cld
fmul
sub
rcl
out
xor
call
hlt
repz
fucomp
out
sti
fsub
mov
xchg
in
mov
jecxz
xlat
div
iret
pushl
cmp
ret
repz
int
in
std
out
mov
jmp
lret
leave
leave
cmp
call
in
jecxz
loope
fnstsw
test
loopne
fcomp
icebp
test
ror
out
aam
ret
in
cmp
aaa
loope
cmp
faddl
test
orb
rol
repz
leave
into
aad
ss
loopne
fdivrp
cmp
loopne
cli
div
stc
test
mov
rorb
repz
int3
iret
int3
clc
lock
repz
std
icebp
fdiv
icebp
mov
mov
lea
shlb
iret
lret
cmc
ret
repnz
out
xlat
fistpll
into
xlat
test
rol
jmp
loope
icebp
out
lret
xchg
loope
das
lret
repnz
cmp
sar
rolb
testl
into
mov
jecxz
aam
aam
hlt
jmp
in
leave
stc
decb
fsubrp
jmp
leave
jmp
xor
shr
into
icebp
incb
test
fiaddl
loope
call
in
out
hlt
hlt
lret
lret
lock
repz
xlat
shl
jmp
loopne
ror
lock
xchg
call
in
int3
sarl
int
rolb
cmp
lret
mov
sbb
test
iret
loopne
fdivs
ss
rcr
cmp
rcl
shl
enter
fxam
fucomp
rclb
xor
out
stc
out
lret
hlt
sarb
cli
std
out
cmp
xchg
orl
out
aam
int3
cli
aad
jmp
int3
in
out
fildl
in
imul
repz
call
test
ret
ror
stc
idiv
xchg
out
xchg
push
call
out
stc
out
int
cld
aam
fldl
stc
int
loopne
call
hlt
xlat
loopne
aad
xor
aas
stc
rcl
repz
rcr
cmpb
xchg
ljmp
jecxz
in
in
lock
clc
repz
cmp
leave
ds
iret
mov
ds
shrl
cld
jmp
neg
fmul
hlt
cli
shl
decl
orl
das
les
test
aam
cld
aas
xor
fmul
in
sar
out
cmc
addb
int3
std
loope
into
xlat
hlt
jecxz
icebp
xor
aam
cmp
cmp
ret
cmc
jmp
lret
test
xchg
aam
aaa
repnz
cmp
xor
xor
ror
jecxz
add
out
in
mov
xchg
repz
jecxz
jmp
shl
xor
xlat
cld
lret
neg
jecxz
cli
hlt
xchg
clc
sti
xchg
loope
addl
cmp
fidivl
shl
sarb
std
xlat
xlat
int
in
shl
lret
xor
lret
xor
cli
lock
leave
jecxz
rcr
repnz
cmc
addl
call
sub
lret
hlt
aam
cmp
fsubrp
sar
clc
int3
cmp
in
in
out
sar
in
fsubr
ror
mul
lock
std
cmp
xlat
rcr
std
out
into
std
stc
rcr
inc
jmp
cs
leave
out
out
cmp
icebp
out
cmp
mov
iret
mov
mov
mov
shl
int3
in
repz
lret
cmp
div
ret
clc
out
addl
enter
fdivr
enter
cmp
ds
in
addl
lret
shl
mov
xor
jmp
shl
sti
and
mov
mov
jmp
jmp
enter
fstp
fstp
adc
call
jg
std
add
ret
out
cmc
ljmp
mov
int3
ljmp
xlat
aam
clc
jecxz
cmp
and
aam
lret
lea
icebp
imull
into
cmp
lock
cmp
xor
out
fdivrs
cmp
jmp
int
enter
in
call
jmp
xor
int
out
repnz
out
cmp
xchg
in
sti
loopne
roll
ret
out
ljmp
out
out
fadd
loopne
mov
ret
leave
mov
call
sti
loop
xor
out
std
fcmove
cli
neg
sti
out
lret
flds
loopne
xor
leave
jmp
cmp
in
xor
lock
incl
loope
mov
loop
hlt
int
into
cmp
cld
cmp
leave
cmp
repz
cmp
mov
mov
fsubp
fdiv
xrelease
shl
ljmp
cmp
hlt
fcomi
fmull
in
xchg
aaa
shl
cmp
neg
std
xlat
neg
cli
int3
fdiv
in
test
jmp
mov
repz
loop
sub
div
aam
icebp
hlt
fidivl
out
mov
jmp
neg
loopne
leave
sub
int3
jmp
ljmp
cld
int3
addb
enter
int
repz
jmp
aaa
in
fsubr
aaa
xor
sti
sarl
in
fucom
loop
fnstsw
cld
sub
fisttpl
in
aam
idiv
cmc
idiv
cmp
iret
xlat
hlt
int3
adc
test
std
loop
test
cmc
out
sub
xor
lock
cmp
fdiv
div
into
sar
sub
lea
jmp
hlt
out
cmp
imul
sarl
fsub
xchg
aas
sar
aam
jecxz
int3
in
jmp
int
rol
vpsllw
aad
cmc
aam
cmp
cmp
fiadds
jmp
leave
cld
into
fsubp
mov
cmc
lock
clc
int
cmp
fcmove
fcmovnu
div
aad
repnz
ror
mov
lret
jecxz
adcb
hlt
in
out
shr
sar
cmp
loope
rol
orl
xchg
nop
aam
das
clc
enter
leave
fyl2x
icebp
cmp
in
icebp
into
ret
out
out
into
lock
loopne
xchg
imulb
xor
sar
xor
loope
idivl
xchg
fcom
sti
jmp
loope
orb
out
out
xlat
rcl
xor
fneni(8087
fiaddl
jmp
sti
jecxz
mov
fidivrs
xor
clc
xor
jmp
ds
test
fmull
out
ljmp
leave
cmp
xor
cli
fnstenv
rcr
cmp
hlt
loop
test
and
out
and
rol
ret
call
int3
roll
rol
fninit
lret
in
leave
int3
mov
xor
xlat
repz
ss
shl
jecxz
add
testl
into
out
fdivr
ror
aam
test
xor
add
stc
call
out
mov
cmc
out
in
fdivs
repz
cmc
cmp
out
stc
shr
jmp
out
into
out
mov
jmp
int3
lret
xor
out
repz
lret
cld
fsub
fsubr
inc
hlt
cmc
rorb
jecxz
xchg
icebp
fmulp
icebp
out
fnstenv
repz
loope
ljmp
add
test
out
incl
lea
rol
ror
cld
std
and
cmp
loope
cmp
aaa
rol
jmp
cmp
aam
cmp
mul
hlt
loopne
clc
hlt
loop
lret
int3
int
mov
std
mov
into
xor
stc
not
lock
loopne
cmp
roll
lret
lret
in
into
vpavgb
ss
aas
std
in
cmc
shl
leave
test
test
enter
xchg
mov
out
lret
fnstenv
cmp
xlat
fldl2e
out
lret
fiaddl
fld
vmaskmovdqu
add
test
addl
aam
fsub
aad
sti
adc
filds
fmull
in
clc
ret
idiv
repnz
ds
fnstsw
xorl
jmp
aad
rcr
fstp
sbb
and
mov
jg
std
add
bnd
clc
xor
mov
lea
lret
loop
decb
out
divl
dec
cmpb
sar
repz
enter
cli
call
fcmovbe
in
xor
lret
ljmp
loop
jecxz
out
ds
imul
out
loope
lock
ljmp
cli
out
cmp
imul
aas
shl
loopne
enter
and
mov
xor
int
out
clc
loope
loopne
lock
aad
ret
mov
mov
icebp
test
xor
cmp
shl
cmp
lret
in
add
loope
jecxz
fiadds
incb
clc
out
cli
cmp
fmulp
add
les
imul
ffree
in
cmc
xchg
out
repz
enter
shl
jecxz
hlt
in
sti
rcr
leave
out
jecxz
mov
in
repz
aad
neg
into
not
cmp
sti
and
faddl
fsubr
add
out
sub
shl
sub
cmp
cmp
cld
lock
orl
test
aam
jmp
shr
hlt
xor
out
fbstp
std
xor
hlt
cli
shr
mov
enter
mov
ret
icebp
repz
xor
sti
ljmp
sub
mov
lret
test
xor
clc
icebp
leave
out
int3
icebp
cmp
fcmovnu
mov
lret
xor
leave
aaa
in
lret
lret
out
sar
jecxz
test
sar
clc
ret
loop
test
in
fsubrp
xor
loopne
div
lds
aas
cmc
sar
adc
rorl
int3
int3
nop
into
test
in
xlat
test
xlat
ror
clc
jecxz
shl
cmc
test
cmp
mov
rol
sar
cmc
xchg
repz
int
cli
lret
clc
shl
inc
cld
sti
repz
int
addb
lret
lock
cmp
shl
out
test
loope
xchg
test
mov
in
repz
repz
fdivrp
loope
addb
xchg
mov
mov
xchg
repz
xor
aam
jmp
cmp
out
xlat
cmp
cli
fcos
faddl
orb
repnz
repnz
cli
cmc
loopne
aam
sti
fucomp
xchg
std
icebp
loopne
out
ret
ret
lds
fcomp
clc
repz
cmp
addb
test
int3
out
int3
jmp
fadd
xor
jecxz
rcl
aam
loop
fcomp
idiv
fcmovu
ljmp
das
sti
cmc
xor
xor
int3
shl
cmc
cmc
repz
loope
out
ljmp
jecxz
sti
in
repz
xor
testl
lea
out
leave
in
divb
aad
lock
xchg
call
clc
out
loopne
xchg
ljmp
jmp
shr
hlt
cli
test
mov
jmp
or
xor
fnstcw
jmp
iret
out
cli
roll
sar
test
into
icebp
repnz
fcom
sti
enter
jmp
call
aad
xor
mov
lret
leave
shl
jecxz
repnz
lret
repz
xlat
int
test
repz
rcl
mov
jmp
mov
xchg
aad
repnz
xor
cmp
stc
lret
cmp
addb
cld
out
fcomip
loop
das
lock
out
out
into
fucomp
fcmovne
iret
int3
fcomi
in
jmp
jecxz
fucomp
mov
repz
ror
aam
in
iret
jecxz
into
cmp
fcmove
cmp
testl
mov
enter
not
enter
lret
out
aas
cli
fildl
out
lret
dec
lock
out
out
fsub
cmp
out
jmp
cmp
fcmovu
flds
lret
in
in
call
sub
leave
icebp
imul
cmp
test
mov
lds
cmp
in
out
xlat
in
shl
stc
clc
aad
lret
shl
mov
pushl
call
test
je
leave
ret
push
mov
sub
adcl
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
aad
xlat
int3
ret
sahf
orl
jl
add
out
rolb
lds
shr
int
loopne
out
out
aaa
out
f2xm1
aam
idivl
cmp
lock
fsincos
jmp
mov
loopne
enter
div
out
cmp
div
lock
in
rcr
xchg
cmc
fidivs
in
jmp
stc
fcmovnu
sub
cli
ds
fcomi
test
in
int3
out
out
in
orl
lret
incb
cmc
aas
cli
out
lock
out
xchg
icebp
out
aad
std
cmp
in
rcl
cmp
test
out
test
sbb
mov
fadd
jmp
lret
loope
cli
addl
call
roll
repnz
fucomp
enter
in
test
icebp
aam
mov
addb
fsubr
test
into
cs
sti
call
call
out
xchg
leave
cld
leave
ljmp
mov
fprem1
hlt
cmp
roll
movl
cmp
fnsave
aas
lret
fldl
leave
xchg
aam
in
test
cmc
sub
stc
cmp
sti
int
xlat
cmp
cmp
jecxz
loope
rcl
cld
loopne
xchg
mov
adcl
aaa
repz
into
into
out
xor
cmp
ret
hlt
in
clc
int3
lret
xchg
lock
cmp
cld
fscale
repz
loope
xchg
fucomi
incb
nop
mov
lret
xor
fdivr
fmul
repnz
into
cld
cmp
mov
mov
rcl
cmc
loop
aaa
enter
in
sbb
iret
fdivrp
test
imul
ret
out
lret
repnz
aad
in
out
imul
shl
fcmovu
repnz
in
loope
out
test
mov
lock
les
sub
jmp
fcomi
cmp
loopne
out
jmp
stc
loope
fmul
sub
out
hlt
repnz
sar
fld
test
fcmovbe
aam
loope
test
sar
cmp
out
ds
repnz
div
idivb
cmpb
cmp
aam
leave
sti
fsub
cld
call
repnz
xor
shr
sti
out
cmp
cmp
rcr
fxch
loopne
cld
call
out
lret
call
cld
into
out
rcr
lret
loope
push
loopne
cmc
cmc
movl
xor
aaa
xlat
into
loope
or
in
xor
ds
mov
call
out
imul
icebp
out
lret
xlat
xor
sti
int3
cmp
rolb
leave
xchg
xchg
fstp
mov
in
ljmp
repz
std
repz
ds
jmp
loope
jmp
and
aam
clc
aaa
ror
int
in
cmp
ret
xlat
hlt
enter
in
test
xor
stc
neg
cli
xor
xlat
sar
rcr
inc
rolb
icebp
mov
sub
fcmovne
cmp
fscale
fsubp
cmp
neg
rol
shr
call
icebp
shr
icebp
enter
cmp
cmp
xor
into
repnz
lret
fsubr
xchg
test
lock
sub
repnz
int
aam
aam
clc
into
xchg
addl
mov
xchg
jecxz
in
int
in
out
jmp
fcmovu
std
fcmovb
testl
cld
mov
hlt
xor
cmc
in
cmp
cmp
jecxz
roll
fcmove
ds
aaa
lret
fcom
enter
fnstcw
in
movl
and
hlt
shlb
int
fdivp
cmp
clc
repnz
loope
mov
fdivrp
call
les
into
aad
les
lret
repz
in
aas
test
hlt
fadds
fisttpl
cmc
rol
cmp
repz
enter
lock
stc
xor
jmp
clc
addl
rcr
fnstsw
lret
int
shl
out
cmp
test
in
iret
fcmovu
add
stc
lret
hlt
fbstp
fmulp
rcl
cli
sar
hlt
out
cmp
inc
in
daa
test
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
lea
adcl
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
jmp
ror
fcmovb
rcr
fs
lods
arpl
cmpsl
cwtl
mov
jg
cmpsb
add
fsubrp
leave
in
or
repnz
loope
shll
shl
int3
loope
sar
clc
hlt
in
shl
in
xchg
sub
rol
aaa
hlt
sub
aam
lock
loope
fistpll
ret
test
fucomi
nop
out
call
lret
in
xor
cmp
fidivrs
cld
iret
cmp
cld
mov
in
rol
loopne
jmp
shl
into
lret
ror
cmp
test
ljmp
xchg
out
cmp
enter
lret
cmp
int3
repz
test
fstp
test
in
in
cmc
loop
jmp
clc
ret
xor
repnz
in
cmp
xor
ret
jmp
mov
loopne
loop
xchg
enter
cmc
jmp
iret
fnsave
icebp
lret
sarl
rcl
cmp
xchg
hlt
enter
cld
xchg
in
lock
in
int
cli
cmp
into
aad
repz
sti
out
jmp
fsub
lret
repnz
loop
iret
cmp
incl
out
loop
cli
aad
in
in
in
loopne
cld
nop
loop
int
test
cmp
idivb
out
mov
movb
out
loop
fnstenv
rcl
cmp
int
into
cli
repz
xchg
fisttpl
mov
out
cmc
int3
aaa
call
lock
dec
repz
cmc
fldl
stc
addl
test
cmp
shl
into
int
xlat
fstp
cmp
mov
fdivrp
mov
in
int3
out
enter
cmc
shr
rcl
call
fndisi(8087
shl
ljmp
loope
call
aad
lock
out
into
loope
cmp
aas
aam
repz
jmp
loop
in
ljmp
aam
lret
out
aas
lret
in
fldl
cmpb
jmp
xchg
loope
call
test
repz
out
rolb
ret
xchg
icebp
mov
sub
cmp
in
jmp
ffreep
aas
aam
push
lds
decb
in
aad
das
sti
call
ljmp
imul
test
mov
into
add
repz
xor
ds
xlat
ret
fcomp
lret
shl
ds
mov
mov
into
in
icebp
fidivl
cli
ss
xor
test
shr
out
xchg
ljmp
iret
repnz
xor
cli
out
dec
sti
cld
std
test
ret
test
int3
into
mov
ljmp
xor
shl
div
cmc
imul
cld
jecxz
loopne
movl
jmp
iret
aaa
out
cmp
aaa
out
enter
ret
cmc
out
faddl
mov
mov
into
aad
loop
ss
stc
fcmovbe
out
aas
cld
sti
icebp
loope
into
aad
fxam
mov
mov
loope
icebp
xor
stc
cmp
aad
sti
cmp
icebp
out
loope
fst
mov
sti
cmp
xor
xor
cmp
lock
cmp
mul
neg
leave
cli
loopne
fneni(8087
in
sar
fsubrp
lret
icebp
shl
sarb
xlat
cmp
ret
aas
aad
test
int3
leave
fucomp
shl
lret
jmp
cld
xor
loopne
xchg
shl
rcl
aas
ds
rcr
iret
into
faddp
jmp
sub
into
out
cli
in
aas
std
icebp
iret
sar
into
in
clc
in
xlat
out
orl
cmc
xor
lock
std
xor
xlat
aam
xchg
loopne
int
loope
xor
loopne
les
fcmovnu
adc
jecxz
ffreep
incb
test
int
jmp
loop
repnz
lret
fdivr
out
ss
in
cmp
ss
testb
int
mov
adcb
aad
repnz
fiadds
fidivrs
rcr
test
adcl
aas
enter
aaa
fstpt
in
repz
sbb
fisttps
ret
rol
out
clc
cmp
cld
loop
ffreep
test
call
sub
mov
out
aam
xor
out
cli
cld
xor
out
idiv
jecxz
shl
mov
loope
jmp
int
mov
cmc
mov
mov
movzbl
xor
push
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
orl
jmp
rol
into
into
fnstcw
pop
aaa
jb
mov
cmpsb
add
aam
jmp
repz
xchg
stc
rcl
rcl
stc
ffreep
mov
icebp
repz
xchg
sub
aam
clc
iret
ljmp
testl
cld
cld
xchg
ljmp
repnz
cmp
cli
cli
rcl
fst
in
out
stc
xchg
xchg
lret
sti
sub
call
int3
vpaddusw
std
cmp
clc
fcmovb
ds
mov
xlat
test
into
ret
clc
loop
in
shr
stc
lret
xor
aad
jmp
incb
sarl
orl
mov
shll
int
hlt
int3
std
enter
lret
fsub
xor
push
in
int3
xchg
in
xchg
cs
in
shl
not
out
aas
sbb
fucomi
aas
sbb
fld
int
into
lret
xchg
xchg
repnz
ljmp
enter
repnz
aas
div
sar
xlat
mov
div
jmp
jmp
jmp
repz
cmp
in
test
fdivr
aam
enter
mov
aad
in
div
xor
int3
sti
sar
lret
fnstcw
xor
fcomp
out
out
lret
les
divl
lock
test
sub
fisttpll
in
cli
iret
faddp
cs
ret
ss
ljmp
addb
test
call
icebp
ret
lock
out
sar
in
lret
out
clc
stc
repnz
cmp
mov
lret
mov
xor
xor
xor
cmp
in
lock
cmp
stc
inc
fmuls
int3
fsts
in
cmc
cs
ss
cmp
out
loope
in
jecxz
rol
int
out
mov
cld
xchg
rcl
shl
xor
cli
lret
cli
fdivl
fsubrp
out
fdivr
sti
in
jmp
in
in
leave
icebp
call
leave
xor
xlat
sarl
shl
aas
cld
shl
jecxz
orl
loopne
shr
xor
xor
lock
in
and
enter
in
nop
icebp
mov
call
sti
cmc
out
enter
stc
xlat
int3
cmc
adc
xchg
leave
call
call
in
hlt
in
rol
in
fistpll
adc
aam
fmul
clc
jecxz
mov
in
aam
test
ret
sarl
int3
out
repz
out
in
cld
jmp
hlt
call
out
lret
into
lret
shr
ss
cld
fstpt
xlat
test
aam
xchg
jmp
imul
ret
roll
lret
cld
rcr
shl
cmp
sti
aam
fldl
test
xchg
into
cmc
xor
xlat
ljmp
int
cmp
clc
sbb
int3
mov
enter
in
out
xlat
shl
hlt
mul
int
call
ret
loop
in
neg
fildl
rcl
xchg
out
lock
hlt
vcomiss
int3
out
add
f2xm1
fadd
ret
xchg
clc
loopne
int
out
shrb
cmp
iret
out
sbb
clc
sarl
in
call
shl
in
xchg
out
repnz
hlt
int
sti
shl
aaa
loope
ljmp
in
in
stc
fucomp
mov
iret
iret
hlt
xchg
jmp
fxch
cmp
dec
cli
sar
xlat
out
cmp
repz
clc
fisttpll
xchg
in
loope
out
fdiv
not
out
cld
clc
cld
cmc
shl
std
test
testb
int
adc
repz
cli
xor
sti
into
in
fdivp
hlt
mov
aas
jmp
int3
ror
out
aad
xlat
lock
hlt
in
jmp
aas
fcmovu
ret
rcl
xchg
jmp
call
fst
leave
fiadds
out
fcmovnb
mov
in
mov
fisttpll
ret
test
call
loope
lock
rcr
sar
addb
xor
in
iret
aas
ss
cmp
test
addl
repnz
pushl
call
cmp
out
fld1
cli
pushl
jecxz
add
fcomi
leave
cli
mov
jecxz
cli
lret
shll
xor
xor
shl
cmp
cmp
cli
std
loop
fcmovnu
ret
xlat
jmp
xchg
loopne
mov
sti
ret
into
decl
in
inc
in
cmp
push
sbbl
push
mov
xorl
jmp
ror
rol
aad
ror
fstpt
jno
sub
jg
cmpsb
add
call
loope
fdivrl
faddl
loope
fnstsw
out
lea
clc
in
lock
out
cld
int
rol
aas
and
call
fnsetpm(287
cld
int
ljmp
sar
out
clc
fcom
aas
xchg
fldl
jecxz
jmp
or
shl
shrl
in
out
lock
fsubr
aam
out
rolb
in
test
into
into
call
div
int
ljmp
cli
sti
rol
cmp
not
faddl
std
out
out
call
cmp
mul
repnz
mov
out
int3
out
out
sub
fsubr
shr
into
fst
sarl
aad
out
ror
inc
loop
incb
xchg
out
int
shlb
rol
xor
adc
jmp
ljmp
in
int3
ss
out
xor
cld
fcomp
int
cmp
loop
icebp
cmc
fdiv
leave
repnz
loope
test
lret
aam
leave
xor
cmc
aad
ss
enter
lock
test
in
test
cmc
in
test
ljmp
fxch
in
repz
cmp
jecxz
loop
rol
out
std
cli
sti
in
cmc
icebp
sarb
aad
sarl
leave
cmp
shr
sti
ljmp
xchg
enter
loope
addb
in
xor
idivb
in
sti
test
cli
jecxz
stc
out
and
in
int
sub
repnz
shlb
stc
jmp
fdivrp
ret
in
cmp
repz
leave
div
out
test
xor
fnstcw
rcl
inc
in
addl
test
sub
icebp
lret
rcl
cld
fcom
lret
fadds
xchg
fldl
fucomip
hlt
rol
aaa
hlt
repz
int
enter
repnz
cmp
decb
cli
mov
into
xchg
hlt
rcl
iret
ss
cmp
aaa
repz
aaa
loope
fadd
rorb
orb
cs
in
repnz
in
sub
ds
rcr
aam
aam
fucom
sti
ret
jmp
iret
loopne
lret
fnsave
fucomip
aas
sti
ret
cmp
addb
ljmp
cmc
loop
hlt
in
aad
fucomi
repz
lock
ret
hlt
ret
cld
in
in
fldz
mov
fxch
ljmp
sar
aam
repz
aas
fdivp
ljmp
in
iret
xor
xor
iret
in
call
test
out
std
ret
test
in
les
test
out
xor
sar
fidivs
cmp
aam
loop
test
rcl
fsub
orb
icebp
cmc
aam
cmp
xlat
lret
stc
sarb
jmp
test
loopne
clc
fsubp
xchg
jmp
out
lock
fdivrl
adc
ror
mov
in
in
in
nop
iret
adcb
aad
out
jmp
cmp
test
sbb
clc
mov
sti
clc
jmp
repz
in
repnz
iret
stc
out
icebp
rcr
cmp
xchg
orl
sub
jecxz
xchg
iret
shl
jmp
clc
leave
fnstenv
int
loope
stc
mov
xchg
ljmp
out
in
out
out
cmp
lret
int3
cmp
stc
loope
shr
ret
mov
loop
into
out
xor
sar
repz
aad
loope
cmpl
jmp
testb
in
into
rcr
cmp
xor
xor
jmp
into
loope
std
xchg
jmp
mov
lret
cld
lret
cmc
fidivrs
rcr
xor
cld
fsubr
fcmovne
loopne
neg
cli
ret
hlt
rol
in
xchg
loop
mov
ror
lret
das
leave
in
iret
aad
shl
cmp
fcmovu
int3
test
cmc
stc
and
nop
lret
xchg
sarb
cs
repnz
cmp
std
rcl
not
stc
jmp
in
mov
ret
shll
repz
fld
lret
fnstsw
adc
test
xchg
loopne
nop
out
xchg
jecxz
leave
lret
cli
aas
fidivrs
in
clc
clc
loope
fadds
call
rolb
jmp
fdiv
out
ret
int
bnd
fdivp
cli
mov
mov
mov
mov
xor
mov
jmp
leave
mov
lret
mov
add
sub
xchg
jg
cmpsb
add
fsubrp
ror
fucomip
xor
aaa
xor
xor
std
repz
int
fsub
loop
lret
sub
xchg
mov
in
ds
xor
fsubr
out
sarb
in
cmp
repz
push
orb
aad
xor
cmp
xlat
xor
sti
aad
xchg
flds
int
loop
repnz
into
out
lret
cmp
stc
std
std
testl
in
mov
shl
mov
out
xor
loopne
call
fneni(8087
repz
jecxz
neg
stc
fisttpl
mov
loop
xor
sarb
fstpt
hlt
jecxz
fsub
test
ror
cmc
xlat
jmp
fprem
repnz
sti
in
test
xchg
repnz
nop
hlt
loope
fsubr
ss
enter
cmp
ds
aad
fdivrp
into
cld
mov
rclb
ss
lret
shl
cmp
cld
call
test
out
fisubrs
int
clc
not
sti
fucom
jecxz
ret
clc
in
fucomip
sub
jmp
adc
xor
aad
sarb
ror
cmpb
in
out
and
in
shlb
cmp
enter
aas
cld
lret
repnz
aad
repnz
ljmp
jecxz
fmul
leave
std
into
out
jmp
iret
ror
sti
loop
cmp
testb
cli
fsub
xchg
in
test
imul
out
idivl
lret
xlat
fildl
not
aad
cli
mov
mov
lret
in
sub
cmp
call
stc
cli
fucomip
mov
fildl
hlt
loope
cmp
out
in
cmp
cli
cmp
cmp
jmp
fsub
icebp
xchg
in
xbegin
rcr
cmp
into
sar
test
jmp
ljmp
mov
out
div
cmp
out
int3
loope
out
hlt
cmp
cmc
leave
stc
out
fucom
iret
int3
lret
lock
iret
enter
in
int3
hlt
fptan
stc
cli
in
out
loopne
in
fcos
test
mov
in
xor
jmp
repz
std
idivb
sarl
aam
xchg
hlt
fxch
mov
iret
mov
in
xor
xor
xor
ss
call
faddl
in
ljmp
lock
jmp
fucomip
in
rcr
out
fcmovnu
cmc
test
xchg
orl
cmp
fdiv
loope
into
into
mov
jmp
ljmp
loopne
jmp
not
in
stc
lret
lock
loopne
rolb
frndint
in
loopne
addl
fucompp
aad
sarb
cmc
addb
cmp
lock
fmul
jmp
fnstenv
shl
in
xor
out
int3
clc
iret
rcl
test
ret
stc
loope
rolb
loopne
in
cli
lret
ljmp
clc
rcr
call
addb
loopne
xor
cld
cmp
stc
xlat
cmpb
loope
ret
mov
ljmp
aaa
lret
rol
lock
in
ljmp
incl
in
ljmp
fnstenv
in
cmp
out
out
aas
jmp
shl
sti
jmp
xchg
jmp
les
clc
int
enter
cmp
mov
stc
fucomip
stc
fimull
out
icebp
xor
into
call
loopne
lock
cmp
clc
jecxz
cli
fcmovb
mov
lock
in
out
jmp
shll
iret
icebp
in
cmp
cld
cmp
ret
std
out
notb
jecxz
xor
fnop
out
icebp
into
clc
clc
cmpl
aad
in
in
mov
mov
mov
xchg
lret
loope
aam
into
fnstcw
ss
xlat
call
in
cli
sar
ret
xlat
out
decl
icebp
call
cmc
cld
sar
aaa
sub
aam
xchg
call
int
or
xor
fsub
out
cmp
fstp
std
repz
ret
fstp
hlt
test
xchg
cld
xor
jmp
aad
rcl
fst
leave
pop
push
push
scas
ficompl
jl
sbb
loopne,pn
repz
int3
int
ds
ds
rcl
jecxz
jmp
cld
loope
ret
in
fildl
aam
cmc
out
into
std
sub
repz
rcr
cmp
les
std
test
sub
fptan
shr
cmp
repz
xlat
lock
sti
loopne
loope
stc
call
subl
test
sarl
shl
test
sub
loopne
lock
div
int
fst
clc
xor
jmp
aam
in
shl
fdiv
jecxz
sti
xchg
iret
sti
fmul
or
ljmp
ljmp
ret
cmp
loop
orl
loop
cmc
in
cmp
lret
out
iret
cmpb
cli
int
xchg
enter
mov
addl
loopne
cli
int3
sti
jmp
shl
out
hlt
in
cld
aad
cld
leave
leave
xchg
int3
shrl
out
cmp
repz
aaa
ss
aaa
aam
shl
std
mov
xlat
in
orb
lret
clc
iret
in
in
out
loope
in
iret
icebp
repz
cld
xchg
sbb
in
xchg
loope
aas
ljmp
lock
faddp
in
les
loop
lret
addb
xchg
rolb
fidivl
hlt
loope
rcl
xchg
clc
in
std
test
lret
dec
loop
rcl
iret
lret
iret
fcmovne
shl
cmpl
in
sti
fprem
iret
icebp
cld
fcmovbe
jecxz
icebp
int3
xor
in
in
fincstp
push
ret
fstp
repz
cmc
or
cli
out
iret
int3
jmp
fucomi
aas
int
sarl
cmp
jmp
jecxz
lock
xor
in
shl
roll
out
test
loopne
out
test
cli
int
fmul
enter
fcmovbe
repz
cmp
cmpl
mov
enter
out
rol
out
stc
out
rcr
rcr
lock
fsubp
icebp
aas
cli
mov
fisttpl
out
ss
lret
xor
test
into
fdivrp
loope
aas
testl
loopne
orb
in
ljmp
fnstsw
fcmovb
jmp
std
xchg
repnz
repnz
fadd
lret
cmp
fdiv
or
icebp
sti
cld
lock
clc
fcmovnb
jmp
lock
shr
into
repnz
ljmp
int
cmp
icebp
jecxz
in
xchg
dec
shl
fisubrs
in
icebp
jmp
xor
out
jecxz
inc
sarl
aam
aas
orl
loopne
sub
call
lock
iret
cmp
jecxz
call
in
int3
in
ljmp
in
jmp
iret
xor
lret
loope
test
test
xchg
mov
xor
in
fst
repnz
ljmp
test
out
lret
cli
vphsubbw
mov
xor
cmp
cld
cmp
sar
repnz
fucom
call
xchg
lock
ljmp
shl
xlat
ds
jmp
xlat
aad
loopne
in
iret
out
dec
xor
cs
iret
ljmp
int3
mul
cmp
imul
mov
int3
lret
out
roll
lret
lret
fcom
lret
xlat
int3
ljmp
fsqrt
in
cli
leave
mov
addb
sub
leave
xor
ds
shr
shr
mov
int
addl
xor
fcompp
loope
xchg
xchg
aam
mov
fdiv
out
mov
out
out
rcr
into
xor
fcomp
rcr
out
icebp
cli
shl
out
clc
repnz
jecxz
test
test
test
cmp
cmp
std
lret
aad
mov
in
fcmovnu
xchg
xchg
jmp
rol
sub
cmp
out
aad
sti
sti
mul
addl
loope
enter
rcl
out
in
ljmp
cmc
cmpl
mov
mov
sti
ljmp
shlb
ss
int3
xlat
aad
fldl
fsubrp
fsub
int3
nop
ljmp
enter
add
add
jmp
leave
sarl
rcl
int
mov
cmp
jl
add
hlt
jmp
lret
imul
int3
rolb
cli
mov
int3
in
mov
aam
call
int
sti
cmp
aaa
ret
xchg
loope
faddl
xchg
in
mul
lock
not
ss
aaa
icebp
int3
cmp
ret
cmp
cmc
stc
mul
int3
rol
int3
mov
int3
in
repz
cli
xlat
idiv
repnz
repz
std
sbb
clc
fucomp
out
or
hlt
out
leave
shll
loopne
lret
cmc
lret
aam
jmp
xchg
rcr
mov
jmp
leave
enter
cmp
lret
fsub
icebp
ror
out
lret
loop
jmp
mov
call
std
sar
into
ror
aam
in
shr
loop
roll
shl
int
jmp
aas
test
ffreep
cli
fcomip
call
jmp
int3
mov
xor
aad
cmp
in
cmp
int3
cld
addl
aas
loope
jecxz
in
icebp
mov
iret
leave
sub
fxch
lock
rcr
int3
in
cmp
cmc
fst
clc
stc
ror
lds
lret
lret
out
loopne
divl
jmp
cmp
vpaddq
in
cld
int3
in
repz
shll
sub
div
cli
out
aam
cmc
iret
out
fstpt
mov
stc
fiadds
out
into
nop
iret
xor
aad
cmc
ss
cmp
loop
aam
std
dec
loop
jmp
iret
rcl
aad
enter
call
repz
test
repnz
shl
cli
mov
incb
aad
int3
jmp
out
aad
out
iret
aad
aas
loopne
rolb
fxch
fimull
aam
fdivrp
ror
repz
ss
not
cmp
out
shl
std
in
jecxz
sti
leave
icebp
in
in
fsubrp
xlat
in
xor
vpinsrw
rcl
out
add
aam
out
testb
lret
ss
sti
out
fucomip
cmp
repz
incl
hlt
iret
out
int3
mov
iret
xor
enter
fcomi
cmp
ret
repz
leave
lret
call
int3
iret
mov
xor
hlt
xor
cmp
clc
cmp
in
hlt
ret
rorb
fcmove
int3
fistl
sub
fnstcw
cmp
iret
out
lret
cmp
aad
out
leave
cmp
loop
loop
in
mov
icebp
ljmp
repz
shl
inc
in
shl
std
jecxz
jmp
stc
roll
jecxz
iret
xor
aam
xlat
lret
ret
repz
icebp
into
les
in
fcomp
iret
jecxz
jecxz
lret
xor
fstp
aad
jmp
fcomi
ret
addl
in
out
fdivrl
in
into
leave
lock
cli
shr
out
xlat
jecxz
loope
cmp
std
test
call
cmc
xchg
ds
cli
cmc
cmp
loopne
test
loopne
cmc
faddp
out
fucomip
in
cli
lock
xor
in
repz
in
leave
out
ss
incl
ret
fdivr
and
jmp
jecxz
clc
fcmovnbe
call
adc
adc
rcl
lret
in
cli
enter
in
out
xor
jmp
testb
jecxz
loope
loope
into
xchg
loop
movl
jmp
cmp
loope
clc
fst
loop
mov
xchg
loopne
mov
hlt
leave
into
rcl
cmp
fnstenv
not
aam
in
iret
ds
ret
in
out
fimull
in
hlt
ror
fprem1
repnz
cli
hlt
cli
roll
mov
lret
int
iret
sub
out
cs
cmp
xor
repz
clc
cmp
iret
lret
in
ljmp
out
repz
out
cmp
rol
cmp
loopne
aam
mov
and
int3
test
test
std
stc
cld
out
into
ret
cmp
xchg
inc
fld
out
mov
mov
xor
cld
loope
aam
into
sti
loop
mov
xchg
cld
xchg
mov
aaa
xlat
shl
shl
repz
loopne
ret
cmp
not
test
fdivrp
call
cli
mov
cmp
stc
stc
test
xor
mov
movl
cmp
jmp
mov
leave
ret
int
leave
lret
and
scas
movsl
jg
cmpsb
add
fdivrp
out
fmulp
loopne
mov
fcoml
repz
fnsave
int
icebp
aam
adc
loope
aad
loope
and
jmp
div
int
lock
fdivr
cmp
int3
sti
fnop
test
cli
lds
xchg
movb
fdivr
int
cmp
out
into
fcmovnbe
ds
int3
fcom
leave
and
cmc
call
icebp
call
int
int
hlt
hlt
aas
loop
fcomi
loopne
incl
sti
jecxz
rcl
in
xlat
into
fmul
fstp
clc
in
ss
cmp
cld
cmp
filds
in
leave
test
mov
aam
repnz
idivb
cmp
clc
in
cli
aam
loopne
in
in
fiadds
sub
into
into
aam
das
stc
fcmovne
cmp
hlt
incl
sti
into
std
xchg
hlt
shr
out
clc
xor
das
clc
cmp
lds
out
mov
mov
jmp
jmp
cmp
cmp
test
ffree
loop
sti
fsubrp
shr
in
xor
out
xor
cli
call
fsubrp
testb
jecxz
ret
ffreep
lock
sub
aaa
ljmp
loopne
mov
cld
test
out
jecxz
mul
out
repnz
jmp
clc
cmp
loope
mov
cli
cli
in
out
lret
lea
ljmp
fidivrl
cmp
rcr
sti
cmp
cld
jmp
xchg
xchg
lret
repz
repz
icebp
cmp
in
out
repnz
idiv
fucom
in
rcl
jmp
enter
clc
mul
shll
fldz
stc
mov
loopne
mov
in
rcl
fmulp
xor
out
cmc
xor
icebp
lock
fsubr
ljmp
sti
jmp
sub
out
pop
hlt
jecxz
cmp
cmp
fcmovbe
aaa
ljmp
clc
out
std
mul
sar
fimull
jecxz
repnz
cli
hlt
ss
shl
in
in
fsin
ret
loop
addl
aam
int
fnstsw
repz
lret
aam
faddl
lret
mov
mov
test
divb
jmp
xor
lock
jmp
std
iret
jecxz
repnz
ret
fdivp
mov
cmp
lret
icebp
aaa
aad
cmc
in
in
test
jecxz
cmp
out
incl
jecxz
ljmp
test
xor
repz
ror
in
test
fnstsw
leave
ljmp
out
rcr
jmp
ret
out
ret
fnstcw
cmp
flds
fmull
xchg
cmp
iret
loope
iret
jmp
out
out
test
incb
call
ret
jecxz
repz
shr
lds
lret
ds
xlat
in
clc
cmpl
in
iret
fisttpll
xor
lret
into
test
or
repz
cld
jmp
in
fdivrp
out
int
xchg
shr
leave
lret
in
cmp
cmp
loope
cli
loop
xchg
fucomp
lret
lock
sub
out
leave
xor
fdivr
div
icebp
aam
sti
cmc
out
orb
int
xor
out
out
fucomi
sti
fidivl
iret
fdiv
out
in
in
jmp
mov
cmc
jecxz
xor
ss
fmul
out
fprem1
aad
hlt
div
loop
popl
out
xchg
xchg
aam
out
loop
cld
enter
call
xlat
hlt
filds
xchg
xchg
int3
fnsetpm(287
out
fldln2
cmp
iret
fmul
test
inc
out
fadds
fisttpl
out
call
fcom
into
cld
icebp
cmp
in
in
ffree
roll
sub
fdivp
nop
repz
lock
aaa
lret
fdiv
sti
fnstsw
cld
and
xchg
jmp
xbegin
jmp
shl
xor
cmp
call
rcr
mov
in
lock
int3
icebp
xchg
jmp
lret
in
repz
ss
cmp
hlt
leave
rol
or
clc
int
in
xchg
ds
jmp
aam
out
xor
out
clc
sarl
icebp
cmc
cmp
call
in
test
push
add
movl
jmp
sarl
rcl
rcl
rol
ret
bound
aam
fsubrs
jl
cli
loop
jmp
sub
hlt
iret
loop
clc
sar
shl
loop
icebp
clc
aad
shr
sti
ret
in
ret
nop
test
repnz
xor
iret
cmp
std
std
cmp
ljmp
in
aam
decl
test
xchg
xor
leave
jecxz
clc
test
int
fdivp
sub
fdiv
leave
ret
lret
lret
fldl
call
xor
enter
xor
iret
cmp
repz
jecxz
lock
in
mov
out
clc
out
xchg
ror
shl
ss
cs
cmp
cmp
out
in
jecxz
sbb
ljmp
cs
out
out
fstpt
fsin
out
xor
cld
in
loop
test
clc
cmp
fildll
int3
ss
cmp
sar
in
shl
aam
fcmovu
fldl
loop
iret
loopne
faddl
loop
cli
repz
cld
ds
clc
clc
ror
cmc
in
filds
cli
in
xor
shl
clc
clc
cmp
sbb
leave
cli
leave
fsubr
jmp
lock
test
jmp
xor
cmp
cmp
int3
xlat
sbb
ffreep
shl
jmp
faddl
fcomip
aaa
ds
xor
in
jmp
clc
cmc
aas
repz
cmp
roll
test
jecxz
out
fdivp
xlat
lret
in
out
ljmp
test
lock
ljmp
xchg
loope
sub
aaa
not
lock
out
fstpt
fsub
jecxz
out
inc
rorb
std
in
loopne
fmulp
aam
rcl
xor
int3
lock
fsub
enter
int3
iret
into
fdivr
xlat
stc
fucomip
xchg
fmull
loop
out
in
loope
aad
cmc
fiaddl
sti
xchg
out
int3
fiaddl
ror
cs
fucomp
shr
fsub
rolb
rcr
fadd
test
mov
repnz
lock
repnz
shl
sar
fcmovnu
mov
testl
out
jmp
lret
icebp
int
cld
shl
lock
loop
mov
in
cli
in
into
mov
xor
aad
imul
cmp
or
loope
rcr
lret
lret
xchg
xor
lret
repnz
icebp
hlt
shll
test
aad
loopne,pt
cmc
icebp
fcom
mul
out
jmp
hlt
rol
into
lret
xor
aaa
call
cli
test
cld
loop
std
lret
jmp
call
in
das
xor
xor
aad
repz
cli
rol
lock
ljmp
in
mov
in
cs
fidivrl
out
dec
leave
icebp
loopne
int3
out
jecxz
rcl
std
addb
rolb
xor
xor
icebp
stc
cmp
lock
in
in
mov
mov
leave
mov
in
call
out
shl
xor
stc
fmulp
fidivrl
fcomi
out
out
xchg
cmpl
orb
lret
sub
xor
aam
out
loope
repz
fnsetpm(287
jmp
in
enter
jmp
hlt
lret
in
in
xor
fidivrl
int3
iret
cmc
aam
aaa
int3
loopne
test
in
shr
out
nop
shl
fsubrs
div
fucomp
call
xchg
out
in
or
and
repz
ret
iret
jmp
cld
cmp
aad
aam
cmp
idiv
ret
fadds
jmp
nop
int3
aam
xor
ret
stc
sti
cli
hlt
rcl
enter
cmp
fst
flds
lock
mov
cmp
divl
ror
aaa
lock
cmc
fsubr
out
loopne
mov
sub
aad
in
das
cmp
ror
ret
int3
or
cli
ret
mov
ljmp
test
lret
iret
aaa
int3
test
call
int3
int3
out
xchg
out
sub
xlat
lret
stc
cmp
cmp
repnz
fucom
loopne
sti
call
fimull
out
fidivl
aam
lock
cmp
cli
loope
in
stc
ret
in
xchg
shr
test
in
test
in
xor
std
clc
enter
cld
ret
ret
cmp
sar
in
loop
repz
lret
aas
icebp
int
ror
xor
out
jmp
lds
cli
fsubrp
nop
enter
rol
das
test
mov
mov
jmp
sarl
aad
aad
aad
sbb
or
cwtl
push
mov
scas
jg
cmpsb
add
xor
in
filds
jmp
fsubp
int
aas
stc
loop
out
int
xor
movb
cmp
shl
fsubrp
int
mov
cli
addl
aam
stc
stc
cmp
fidivrl
in
loop
in
and
iret
mov
xor
xor
test
out
rol
repnz
in
iret
mov
jmp
rolb
shlb
std
cld
cli
aaa
call
cmp
sub
aam
cli
mov
cli
xchg
popl
fmul
out
hlt
aam
cmpb
idiv
sti
xchg
fsubr
ljmp
mov
div
xor
loop
div
xlat
jecxz
xor
fxam
cli
mov
mov
nop
test
in
call
xor
xor
aad
loop
mov
mov
cmp
fmul
xchg
call
iret
enter
in
aas
loopne
cmc
cmp
out
loop
ds
test
out
xor
sar
bnd
hlt
aas
fcom
sar
rcr
lret
fmul
loope
rcll
xor
aaa
stc
cmp
ljmp
aad
fucom
xchg
std
in
cmp
shrl
aad
aaa
in
leave
into
in
std
cmp
shr
loopne
repnz
mul
lret
out
test
aad
sub
fcmovnu
fsubr
sar
loop
add
shl
faddl
in
ret
into
in
repnz
repnz
hlt
lret
loope
sbb
lock
stc
loope
xchg
cmc
call
fsubr
aad
rol
out
leave
lds
xor
div
shl
repnz
cmp
repnz
fcmove
jmp
in
ret
in
int3
in
call
ror
in
loope
fmul
aaa
fdiv
sti
shl
jecxz
loope
jmp
xchg
out
fisttpll
jmp
out
int
cmp
fcmovbe
sti
hlt
aam
les
ljmp
aad
xor
repz
ss
fdivrp
iret
jmp
in
std
test
ret
jmp
mov
in
xchg
ds
out
aaa
rcl
fcmove
rcr
in
shl
into
mov
fldl
shr
int
repz
iret
in
in
cmp
cmp
loopne
cmp
test
xchg
xchg
testb
dec
int3
lock
loopne
cmp
out
iret
fistpll
shr
into
jecxz
sarb
test
cmpl
test
cld
sub
out
lock
xlat
in
cld
cmp
idivb
shl
jmp
ret
orl
lock
sarl
cmp
cmp
cmp
fdiv
clc
ds
in
lret
fsubrp
jecxz
out
int
loop
xor
aad
sti
stc
icebp
ss
repz
clc
out
fsub
fmul
fimull
out
rol
shl
aaa
stc
cmp
fucomp
cmp
aam
sub
jmp
lock
out
lret
lret
aam
fdivr
iret
fcomi
call
ret
leave
fnstsw
fsubr
loopne
aad
iret
cs
stc
int3
cli
rcr
loopne
ret
sti
in
xlat
popl
loopne
out
lock
jmp
cmp
loop,pt
loopne
enter
sti
mov
xchg
jmp
ss
sti
cmp
fcmovbe
cmp
aad
jmp
jecxz
jecxz
std
mov
aad
loop
iret
int
jmp
ror
int
ds
and
ljmp
xchg
in
and
iret
jmp
stc
out
cmp
cmc
aad
lret
out
cmp
lret
xchg
xchg
cli
lret
nop
jmp
ss
xlat
int3
hlt
aas
aad
aad
int3
loop
rcr
rolb
sti
test
loope
idivb
ret
int
fnstcw
loopne
shl
xor
call
lret
loope
call
sti
xor
std
xor
iret
out
shr
aas
cmpb
aad
testb
in
enter
out
ret
pushl
aas
aas
out
sti
idivl
leave
stc
loop
ljmp
aaa
das
ror
int
sti
ror
aaa
std
fcomi
stc
cmp
shr
neg
mov
test
out
shr
loopne
loopne
clc
divl
int
cli
rcl
rcl
in
xlat
sbb
test
in
and
shl
aad
sub
in
int
lret
rcr
into
int
cmp
mov
imul
jmp
ret
fcmovnu
aad
inc
pop
inc
mov
or
cmpsb
add
out
add
in
lock
enter
repz
aas
rolb
icebp
cmc
fstp
xchg
mov
rcr
in
test
repz
hlt
stc
fprem
ljmp
call
int
in
loope
cmc
out
stc
into
bnd
rcl
in
xor
cmp
cmp
xchg
out
loopne
loopne
xchg
jmp
lock
out
aam
aad
ds
rolb
bnd
rclb
les
out
jmp
xor
jmp
lds
rol
adc
lret
jmp
xchg
lret
shr
loopne
enter
stc
sarb
jmp
out
jecxz
fcmovbe
incl
lock
ljmp
loopne
fcmovbe
rol
cmp
nop
jmp
loope
int
fsqrt
cmc
int
enter
shl
cmp
div
lret
out
lret
mov
xor
fnsave
ss
ljmp
loopne
cld
clc
in
test
or
int3
in
shl
shl
fidivrl
ljmp
icebp
rol
hlt
adc
xchg
test
hlt
loop
xor
leave
aad
cmp
fdivrs
shl
xlat
fnstsw
xchg
loopne
mov
mov
xchg
xor
call
enter
clc
ret
repz
fcomi
into
cld
hlt
mov
test
xchg
nop
fisubrs
rcl
leave
enter
aam
cmp
aas
cmp
cmc
call
xchg
leave
out
out
shll
icebp
jmp
out
enter
cmp
clc
aad
stc
out
fcmovu
add
jmp
call
ljmp
out
cld
ljmp
loopne,pt
test
or
in
out
fdivp
jecxz
out
lret
icebp
cmp
int3
test
rcr
cli
rcl
add
xchg
into
aad
sub
in
xlat
in
rcr
cmp
cmp
lock
jecxz
lret
xchg
out
xlat
xor
lret
clc
xlat
loopne
sar
cmpl
enter
call
call
out
xor
idiv
repz
cmpl
xchg
sti
xchg
mov
jecxz
cmc
in
lock
fldln2
xlat
icebp
hlt
aam
jmp
fimull
mov
out
mov
int
aaa
aad
jmp
cmp
cmc
cli
ss
out
rcl
rcl
mov
testb
iret
int
cmc
int
in
fcomi
clc
int3
ss
cmc
fdivr
stc
cmp
mov
nop
cld
xchg
fsubp
repnz
cmp
shr
fxch
cmp
hlt
loop
ret
cld
hlt
testb
xchg
lock
rcl
out
fmul
std
sarl
cld
int3
jecxz
aam
repnz
out
call
xchg
mov
in
xlat
ret
xor
xor
jmp
aam
jmp
ds
cmc
call
fsubp
rorl
into
int3
lret
out
fst
cmp
cmp
loop
clc
in
int3
mov
add
in
fmul
rcr
sti
clc
lret
aas
cmp
xlat
inc
fcmove
cli
orb
faddl
vpaddusb
repnz
not
shl
test
out
fldl2t
cmp
mov
xchg
xchg
shl
xor
out
int
clc
fucomp
iret
iret
cld
test
test
fucomip
or
pushl
aad
ljmp
xor
hlt
into
sbb
rorb
stc
fcmovne
addl
clc
lret
in
repz
int3
ds
out
cmp
shr
cmp
cld
lret
jmp
das
ret
shl
icebp
in
cmp
icebp
loopne
testb
test
shr
xchg
loope
ror
mov
iret
cmp
aaa
stc
fidivrs
jecxz
aam
fcmovu
loop
ds
test
xchg
mov
stc
aaa
lret
mul
fsubr
in
repnz
cmp
clc
cli
out
mov
addl
fucomip
out
lret
mov
repz
repz
out
rcl
icebp
rolb
in
mov
out
test
xor
in
out
aaa
into
shl
cmc
fucomip
ds
cmc
test
idiv
jecxz
lock
iret
call
enter
in
lret
aam
cmpb
xlat
cmc
lret
out
out
cld
mov
mov
cmp
je
mov
orl
mov
xor
jmp
xlat
int
ret
ljmp
jg
cmpsb
add
cli
icebp
xchg
out
aaa
int3
lock
cmp
clc
loope
cmp
aad
cld
stc
ret
in
test
int
clc
into
out
ljmp
out
in
repnz
loopne
sub
rcr
in
lret
mov
fildll
std
fdiv
shl
rcl
sar
ret
fadd
cld
neg
mov
lock
iret
hlt
int3
in
lret
rcl
std
cli
mul
fadds
mov
test
call
repnz
sub
ljmp
cmp
aas
cli
repz
call
jmp
mov
fucom
out
xchg
int3
xor
in
aaa
sub
in
fdivrs
aaa
xlat
testb
enter
lret
xchg
lock
in
xlat
aaa
fmul
into
fcomp
not
cld
mov
in
cmp
enter
repz
xor
aad
int3
fistpll
sti
std
cmp
lock
xchg
repz
test
out
xchg
out
std
in
shlb
ss
sub
repnz
idivb
hlt
stc
aad
sti
rol
faddl
repz
xlat
xor
into
out
xlat
icebp
add
fcmovu
lock
stc
fdiv
in
nop
in
int3
loop
xor
xor
cmp
lock
test
repz
sub
call
lock
xor
fldt
ror
iret
cld
fcmove
fildl
out
enter
mov
leave
loope
shlb
cmp
aaa
fmul
shl
ds
movb
sti
loopne
rclb
jecxz
enter
jmp
fdivl
aad
stc
addl
in
cld
lock
xchg
cmp
aam
ljmp
test
sar
clc
test
int
out
mov
repnz
loop
out
iret
xor
stc
sub
cmp
lock
out
cld
mov
call
hlt
stc
stc
cli
cmp
xlat
icebp
in
neg
cmp
in
fcmovb
icebp
xchg
orl
xchg
cld
loopne
out
out
neg
in
cmp
idivb
ds
test
fucom
rol
ljmp
into
leave
xor
loopne
aaa
in
shl
cmp
fadds
test
out
cld
addb
out
leave
out
jmp
icebp
std
test
xlat
ffree
mov
xchg
mul
out
repz
out
loope
cmp
cmp
fcom
fmul
jecxz
out
in
sti
iret
call
hlt
ror
clc
fcmovbe
cmp
std
out
fst
clc
ret
adc
ret
aam
call
idivl
out
in
in
out
lock
int
rcr
cmc
cld
loop
out
in
les
in
loope
loopne
test
lock
icebp
shl
cmp
xor
mul
mov
fisttpll
jmp
jmp
enter
lret
fabs
fmull
fadds
std
iret
and
jmp
iret
aam
out
clc
iret
repnz
aas
ds
xchg
cld
fucompp
in
jmp
xor
lret
aas
loopne
cmp
into
mov
fucom
lea
in
enter
shr
cmp
out
idivb
rcl
fldl
fisttpll
out
aam
enter
out
in
lret
call
test
fucomip
ret
out
lock
call
call
cmp
aad
ret
sar
in
fadd
testb
mov
in
xor
jmp
in
into
ror
shl
icebp
in
in
fsub
ljmp
mov
adcb
icebp
push
cmp
aad
loop
cli
rcr
mov
repz
jecxz
cld
in
enter
test
cs
lds
in
out
loope
ss
std
rcr
in
sub
cmp
into
lret
repz
out
xlat
into
out
cmp
shl
ret
test
mov
loop
in
xchg
loopne
cmp
shr
ss
cmp
cmp
ret
aad
fcomp
cld
fxam
xchg
sub
out
call
cmp
testb
in
fdivrp
cld
into
mov
idivl
cmp
cmp
into
aad
shl
repz
cmp
sub
xchg
lret
xor
add
jmp
rol
int
fst
fcmovne
xor
push
add
jl
imul
cmp
cli
stc
cmp
fsubrp
ret
jecxz
xchg
call
iret
and
in
ret
ror
repz
stc
bnd
hlt
fcmovb
loope
filds
in
enter
in
idiv
aam
lret
clc
repz
idiv
cld
cmpb
lock
in
xchg
in
shr
mov
jmp
icebp
iret
call
test
cmp
lock
test
jmp
enter
aam
loop
cs
aaa
lock
sti
cmp
loope
test
jmp
xchg
mov
ror
filds
repz
cmc
out
iret
xor
in
aad
ds
aad
in
fucomp
cmp
xor
iret
div
fdivs
into
iret
cmp
into
ret
cmp
lret
lret
jmp
mov
mov
jecxz
stc
ror
xor
lock
aam
cmp
loopne
repnz
fucomi
fiadds
mov
aam
cli
int
shl
or
sub
lret
fucomip
ret
in
shl
out
repnz
shr
jmp
cmp
addb
lret
lret
sbb
test
in
hlt
test
cmc
xor
out
stc
aas
sar
shr
repz
out
fadds
out
loop
ret
fldcw
repnz
fucomi
xlat
fdivr
imul
in
out
in
std
rcr
std
decl
in
out
xor
enter
mov
int3
cmp
icebp
clc
repz
call
lock
out
in
hlt
in
out
idivb
cmpl
rcl
fdivrs
movb
in
xor
cmp
lret
into
cmp
in
aas
loope
loope
fxam
rcr
addl
cmc
xor
ss
cmc
sbb
aad
in
icebp
shl
inc
mov
in
out
shl
or
clc
lock
cli
xor
lock
loopne
cmp
in
cmp
mov
repnz
aaa
cmp
lret
cmp
std
sar
aaa
icebp
dec
out
fildl
loope
mov
jmp
into
out
out
call
cli
fdivp
sti
mov
ljmp
cmc
xchg
out
xor
iret
in
fidivl
stc
lret
fdivrp
call
call
out
orb
jmp
xor
rolb
aad
in
loop
fmul
lock
xchg
lret
cs
out
cmp
rcr
lret
cmp
jmp
neg
or
loope
ret
xor
ss
out
lock
sbb
div
fildl
test
in
mov
in
cmp
fnstenv
lret
fistpll
out
sti
in
cmp
mul
hlt
mov
sti
mov
xchg
fucomip
out
in
rcl
xor
fucomp
jmp
fcmovu
mov
mov
clc
xbegin
in
shl
xor
xor
int3
in
cmp
test
rcr
in
int
loope
lret
sub
not
cmp
fcomip
shr
ret
icebp
sti
idiv
rcr
jecxz
mov
nop
loope
out
xor
enter
sti
in
xor
enter
mov
jmp
loope
sub
in
out
into
hlt
repz
ljmp
aad
sbb
aas
fcmovb
leave
in
out
shll
out
ljmp
xorb
aam
cld
loop
lds
loope
int
in
jmp
iret
leave
in
int
rcl
aaa
fcomp
fdiv
ss
mov
hlt
ret
hlt
fcoml
mov
in
ss
out
iret
sub
cmp
aas
out
loope
jmp
lret
fdivr
ret
out
jmp
iret
rol
jmp
ds
mov
sbb
xchg
loope
aaa
into
cs
fdiv
fmul
cli
xor
ljmp
out
sbb
mov
mov
orl
cli
int3
ss
test
icebp
in
ffreep
filds
icebp
icebp
mov
jmp
sar
lret
call
icebp
test
enter
sti
clc
int
out
mov
rol
lret
fnstcw
cmp
filds
imul
std
ret
in
int3
iret
fsub
rcl
cmc
loop
xor
fdiv
pop
jmp
lret
ret
fstpl
fidivrl
cltd
test
stos
inc
jg
cmpsb
add
cli
rolb
in
jmp
out
rol
in
xlat
iret
aam
jmp
stc
cli
out
repz
test
testb
adcl
call
ret
jmp
fcmove
jecxz
jmp
jecxz
loope
jmp
shll
xor
test
imul
clc
mov
decl
loope
xlat
cmc
fxtract
jmp
cmp
iret
shl
xlat
rol
aas
xchg
ljmp
xchg
orb
xor
sti
stc
in
lret
cmp
jmp
aas
les
sub
xor
repz
in
repnz
cmp
add
rcl
flds
fmuls
rcl
rcr
out
in
out
enter
repnz
ret
cmc
shr
xchg
jecxz
adcb
in
leave
sti
rcl
out
cmp
clc
fucomi
sti
shl
out
rcr
mov
in
xchg
jmp
iret
lret
repz
cmp
idiv
stc
sti
xor
std
adc
out
mov
in
ret
mul
fcmove
out
aam
cmp
aad
out
lock
vpavgb
incl
int3
xor
aas
cmp
ret
ljmp
jmp
lret
xchg
iret
fildl
sub
ret
repnz
ss
iret
xorl
xor
repz
aad
in
xchg
out
clc
lret
cld
sti
faddl
cmp
mov
hlt
jmp
loopne
ror
mov
xlat
lock
jmp
out
dec
iret
aad
rcr
shl
rolb
mov
leave
lret
lea
out
jmp
cmp
aam
faddp
rolb
ljmp
xchg
imul
jmp
call
fdivrp
sub
sub
push
orl
xor
ror
stc
neg
idivl
neg
out
loope
fcmovnu
out
div
out
jmp
orb
not
fnop
in
in
or
loop
addl
lds
mov
call
xor
std
shll
ds
incb
out
fucomip
dec
loopne
int3
jecxz
ljmp
fcom
repz
ror
repz
sti
test
out
xchg
call
sti
repz
out
ror
cmp
loopne
std
sar
test
jmp
out
xchg
out
in
xor
cmp
cmc
repz
rcl
aad
aam
int3
stc
into
loopne,pt
enter
loop
test
ret
repz
clc
fdivrp
lock
loopne
sarb
xlat
inc
out
fmull
mov
ret
out
shr
stc
mul
lock
not
fld
fdivr
xchg
sti
rcr
cld
fst
loop
loop,pn
fcomp
loope
out
not
ret
add
loope
loopne
fucompp
out
mov
aaa
lret
in
clc
pushl
cmp
xor
ret
fcmovne
lret
icebp
mov
cli
cli
hlt
into
cmp
into
int3
stc
lock
fcmovne
jmp
out
loop
shl
jecxz
int
repz
stc
ss
lock
jmp
loopne
ror
out
repz
cmc
in
aaa
repnz
test
cmp
lds
frndint
xchg
xchg
int3
in
lret
xor
stc
rcl
sar
jmp
stc
roll
clc
xchg
fildl
xor
std
out
call
jmp
iret
into
ret
out
xchg
call
lds
xor
ljmp
fstpt
out
aad
jecxz
shl
xlat
loopne
icebp
int3
out
in
xchg
jmp
clc
aas
ror
out
iret
mov
sti
cli
sti
xchg
lret
in
loopne
xor
xlat
cld
sarl
aad
out
cli
call
iret
mov
dec
ljmp
sti
call
fidivrl
cmp
fmull
in
decl
imul
div
in
icebp
out
jecxz
div
repnz
repz
clc
enter
lret
int
les
test
in
sti
lret
jmp
cmpb
and
loopne
mov
leave
ret
mov
jmp
aam
fcmovnu
mulb
in
push
aam
jg
cmpsb
add
mov
mov
cs
loopne
out
cld
into
fscale
xlat
fnstcw
repz
iret
out
repnz
xchg
in
rcr
jmp
out
imul
aam
aas
idiv
sbb
aad
ds
lret
call
out
test
in
ljmp
int
aad
loopne
ret
loopne
fcmovb
idiv
test
sti
sbb
out
out
out
int3
aaa
ss
repnz
xorl
out
cmp
fdivr
and
test
mov
int
test
xor
icebp
out
int3
cmp
cmp
std
sbb
clc
mov
xchg
xlat
cmc
int
cmp
lock
fistpll
xorb
lock
xlat
mov
out
fdivp
call
aad
cmp
ror
cmc
shl
out
out
std
in
mov
xchg
test
ret
ss
cmp
in
xlat
ss
in
fcmovne
sbb
call
lret
int3
fcmovb
xor
fdivr
iret
test
les
std
out
xlat
in
fcmove
std
in
in
out
lock
xor
out
sti
fdiv
div
test
in
out
stc
lret
filds
inc
xor
leave
loop
loope
ss
fldl
loop
fimuls
enter
into
jmp
ss
int3
ss
out
roll
dec
in
aas
not
addl
ret
out
lock
icebp
faddp
fmulp
into
sti
faddl
jecxz
ljmp
fmulp
jmp
out
rcl
loop
shl
ret
cli
neg
xlat
out
icebp
cli
sar
std
cld
in
out
rol
in
repnz
ror
cmp
repz
rcr
loop
mov
addl
icebp
cmp
jmp
loope
icebp
sbb
mov
int
loopne
mov
out
xlat
out
neg
out
stc
stc
sar
in
out
les
stc
lea
lock
loope
xor
aaa
neg
stc
icebp
loopne
cmp
std
repnz
fisttpl
in
lret
hlt
aam
fmul
int
int3
stc
clc
out
loope
xlat
repz
leave
nop
xchg
ljmp
aaa
out
cmp
call
out
jmp
fcmovnu
fsubp
std
adcb
out
ret
out
fdivr
icebp
cmp
in
jecxz
xlat
lds
out
xchg
int3
xchg
in
call
ror
xor
out
shl
repz
mov
shlb
imul
in
lock
cmp
cmc
stc
fnstsw
ret
repnz
aas
fucomp
rcll
xor
jmp
rcl
std
repz
adc
lea
test
in
xor
lock
in
ljmp
cmp
ds
sti
sti
enter
iret
lock
jecxz
hlt
in
xor
sti
ror
sarb
orb
iret
fisttpl
ljmp
cs
stc
std
ror
fsubr
in
loop
enter
int
icebp
fdiv
call
vcvtdq2pd
ror
lret
xor
sar
mov
in
in
in
in
ror
call
loop
int3
sti
ror
div
fst
aam
jecxz
or
mov
sti
clc
xchg
repnz
ss
cmp
std
cmpl
out
into
clc
sti
fcmovnbe
leave
mul
int
xchg
nop
addl
iret
jmp
fnstcw
into
fadd
shl
aas
fidivrl
fiaddl
fadd
lret
mov
les
cmp
repz
cmp
ds
idiv
mov
mov
leave
nop
clc
in
repz
int
cmp
lret
clc
div
out
icebp
int3
xlat
idiv
in
ret
in
pop
std
cld
int
mov
jmp
fcmovbe
aam
ljmp
aad
loop
lret
fimuls
xchg
repnz
jmp
cmc
icebp
xor
fbstp
clc
cmp
rolb
sti
test
mov
int
iret
loope
hlt
cli
shl
iret
repnz
out
xor
in
idiv
test
in
loop
mov
xlat
ret
into
leave
out
cld
loope
in
roll
ret
hlt
in
xchg
jecxz
sarl
hlt
add
cmp
je
mov
jmp
int
aas
ror
rcr
fcmove
mov
js
push
lahf
pop
jle
jg
cmpsb
add
jmp
in
int3
cmp
std
ret
fadd
test
jmp
mov
cmc
int
call
repz
std
std
mul
fnstsw
out
cli
in
leave
fsubr
jmp
icebp
into
in
loopne
ljmp
cmp
aaa
out
out
aad
roll
loop
rorb
icebp
shl
imul
into
stc
into
aam
sarl
aas
stc
std
jmp
flds
clc
out
faddl
icebp
hlt
repnz
fldlg2
fsin
out
int3
jecxz
fcomi
xchg
fldl
ljmp
std
call
loopne
fcomi
adc
neg
mov
fldl
in
enter
ror
aam
rolb
fcomp
mov
repz
clc
cmp
shl
lret
sar
test
shl
xchg
fcmovb
cld
enter
mov
loop
out
fld
repnz
cld
icebp
int
clc
loope
cld
hlt
test
mov
enter
std
incl
lret
xor
repz
leave
iret
lret
jmp
aas
cmp
lock
ljmp
mov
xor
leave
rcr
std
xor
cmc
in
rolb
call
test
out
jmp
out
cs
xor
clc
cld
lret
in
fcom
cli
cmc
repz
lret
mov
xchg
lret
out
in
out
fsubrp
in
fmulp
cld
std
stc
adc
std
clc
cmc
aas
mov
addb
icebp
out
xor
into
cmp
sub
test
fmulp
or
xchg
ret
xlat
lret
not
in
fnsave
faddl
in
repnz
jmp
ljmp
aad
cmc
cmp
cmc
cmp
cmc
ljmp
rorl
clc
mov
std
rclb
stc
out
cmp
rcr
shl
stc
mov
aad
neg
iret
cld
lret
lret
xlat
rcr
sti
xor
cmc
sar
cmp
mov
in
fimuls
rorb
cmc
clc
sar
sti
fdivr
int3
sti
stc
cmp
fadd
movl
roll
out
mul
int3
xor
into
in
fcmovu
sti
std
cld
test
ds
jmp
rorl
rcl
repnz
cmp
repnz
flds
fucomi
sbb
mov
incl
aaa
out
shr
cmp
xor
clc
cmc
clc
aam
jmp
std
clc
test
mov
test
out
call
fcomi
int
shr
ljmp
std
cmc
jecxz
stc
xchg
cld
in
xor
ljmp
lock
fcmovnbe
test
test
or
jmp
loopne
test
fld
fmul
in
shr
jmp
test
out
fcom
jmp
xlat
sbb
repnz
jmp
fcompp
imul
rcl
ss
cmp
test
in
in
xchg
ret
fdivr
xor
out
jmp
enter
out
in
rcr
rcr
xlat
mov
xchg
loope
mov
out
fildll
cmp
fcmovu
lret
rcr
lret
fcmovnbe
clc
enter
cld
jecxz
sbb
out
hlt
call
lret
fcomp
repz
add
fsubp
fisttpl
jecxz
iret
jmp
xor
xlat
cli
cmp
idiv
ds
ds
mov
mov
lret
into
rorl
ss
xlat
int
aas
fdivp
lock
xlat
mov
fadds
repz
stc
aam
out
hlt
shr
iret
lret
rol
lock
jecxz
cli
stc
fsub
mov
fsubrp
call
lock
xabort
fucom
rcl
loope
into
and
ret
xlat
in
mov
ror
in
rol
out
hlt
clc
into
sar
repnz
in
xchg
std
mov
leave
rorb
divb
xor
fstp
fidivrl
rcl
test
aam
cmc
cmc
loope
sbb
out
ljmp
stc
mul
loopne
ret
out
int
aam
fadd
fcomp
loopne
xchg
jmp
rol
out
jmp
cmp
test
xlat
fneni(8087
testb
into
xor
aam
ret
lret
flds
add
lock
decl
add
add
rol
iret
aad
aad
adc
lea
test
jg
cmpsb
add
cmp
sar
lock
fnstcw
sti
fsub
out
shl
loopne
iret
out
xor
std
fcmovbe
lret
rcl
sbb
test
lret
fstp
enter
xor
div
shr
lret
into
repz
aas
aad
cld
and
int
test
mov
popl
shlb
repz
aad
in
rcl
fucomi
fnsetpm(287
mov
jmp
rcr
loopne
lock
in
cmp
ss
fiaddl
test
into
fimuls
iret
stc
out
int3
lret
loope
in
cli
xor
out
mov
loop
mov
shlb
fyl2x
ror
jmp
rcl
lock
test
stc
jmp
fisttpl
mov
rcl
shr
loop
das
lret
int
out
lock
aad
ss
lds
int3
fadds
ret
hlt
xor
cld
fcmovnu
ss
std
fadds
aam
loope
rorl
test
test
out
xlat
cmp
cmp
idivl
in
in
loop
vpaddb
imul
into
in
in
sbb
divl
ljmp
loop
call
lock
jmp
jmp
in
fmul
out
cld
int3
ds
call
call
std
clc
loop
fcmovnbe
mov
cli
mov
or
in
in
out
ss
shl
lret
aas
cmp
in
jecxz
neg
hlt
jmp
call
into
hlt
xchg
jmp
loop
out
std
xor
hlt
in
ror
sti
sbb
aad
xchg
iret
loope
repnz
int
hlt
ljmp
test
clc
ds
rolb
sub
ret
cmp
ljmp
stc
incb
test
fisttps
in
xor
xor
cmp
into
fnsave
cmp
out
filds
fxam
in
in
cld
lret
aad
fdivs
xlat
repnz
aas
shl
shl
ret
repz
leave
mov
mov
xchg
int
out
icebp
aaa
xor
cld
jmp
cmp
ds
test
and
dec
shl
xchg
loope
shll
in
aam
not
roll
fstp
cmp
out
cli
test
idiv
in
mul
clc
cmp
lock
loope
cmp
cmp
test
jecxz
leave
enter
hlt
shrl
icebp
clc
enter
cmp
cmp
lock
aam
or
div
int
fucomi
jmp
shll
shl
fadds
ljmp
leave
jecxz
loop
test
div
cmp
cmp
sar
fildl
cld
fcmovne
out
leave
mov
cli
aad
shr
icebp
lret
hlt
hlt
aad
lock
ret
in
jmp
int3
xlat
fld
leave
in
clc
cmp
ds
loopne
fstp
rol
stc
sti
leave
cmp
icebp
sbb
lret
fsubrs
stc
lret
idiv
fcomip
fscale
cmp
rolb
std
nop
filds
aam
aaa
xor
ror
cmp
fcomi
addl
aam
out
xchg
out
clc
jmp
in
rol
xlat
in
icebp
cld
cs
aam
cmp
cld
les
cli
jmp
subl
cs
repnz
cmp
jmp
into
xlat
icebp
rcl
clc
aas
sti
aam
mov
in
mov
repz
stc
call
shl
cmp
jmp
icebp
cli
out
fadds
orl
bnd
jmp
ds
les
test
repz
mov
loop
cmc
aaa
enter
fdivs
call
out
clc
roll
leave
loop
jecxz
out
in
in
aam
cmp
hlt
iret
fmul
stc
adc
addl
roll
in
shr
int3
ss
lret
fiaddl
out
ljmp
ret
clc
enter
jmp
fistpll
iret
cmp
aad
xlat
fsubr
lea
xlat
into
rol
shr
into
in
lock
loope
cld
ret
iret
loopne
aas
xlat
xor
and
in
sti
call
shl
in
jmp
ljmp
div
ret
push
call
add
int
int
mov
mov
rclb
jl
add
or
mov
cmc
in
clc
ljmp
jmp
stc
aas
rolb
mov
sti
ds
shl
int3
test
lds
xor
out
cmp
stc
ret
out
cmc
idiv
jmp
int3
iret
test
adc
repz
ret
xor
and
fcomi
ror
ljmp
int3
repnz
ret
jecxz
fnstcw
fprem
leave
fcmovnbe
aad
fxch
aam
test
hlt
jmp
test
adc
out
int
ss
cmp
stc
sub
fdivr
lock
fcomi
ret
clc
jmp
add
ret
call
repnz
in
cmp
out
clc
fcmovnu
xchg
cli
iret
loope
mov
repnz
cmp
fldln2
cld
fcmovbe
aam
xchg
xor
fcmove
decl
test
out
xor
out
xor
cmp
aas
ret
ds
clc
rcr
ljmp
repz
rcr
clc
lret
xor
in
xor
out
aas
xlat
int3
in
rolb
stc
in
xchg
shl
jmp
mov
lret
rol
das
repz
out
icebp
cld
xlat
stc
icebp
sti
aas
shl
lret
add
loop
fistl
aad
xor
aam
in
out
cld
mul
fsubp
cld
les
sbb
loop
test
xchg
int3
iret
xchg
rol
out
xlat
fincstp
call
iret
in
cmp
out
out
or
add
les
std
loopne
out
out
cmc
in
shr
leave
shl
fldl2e
cmp
cmp
addb
lret
fdivp
int3
jecxz
das
hlt
in
jmp
xlat
cmc
cmp
aam
aam
rcr
cmp
loop
inc
sbb
sti
std
int3
fsub
out
shl
xlat
out
sarb
loope
aam
cmp
test
leave
jecxz
cmp
mov
mov
fmulp
loope
test
stc
cmp
fcmovnu
test
loopne
and
leave
std
or
in
out
loop
aaa
not
in
out
cmp
clc
aam
fdivr
into
cmp
mov
in
leave
out
clc
int3
call
aam
into
xlat
loope
cmc
xchg
ret
aad
loop
out
test
addb
xor
cmp
rol
hlt
ret
rol
test
cmp
cmp
adcb
aam
jecxz
in
lret
int
int
aad
fstp
call
iret
lock
rol
cmc
out
fsubr
rcl
fcmovu
ret
aas
rol
xchg
enter
jecxz
out
clc
xor
repz
or
fcmovnu
aam
stc
std
test
call
out
enter
sarb
out
xor
into
in
cmp
repz
std
fucom
shl
neg
test
mov
xchg
fcomip
imul
aam
hlt
jmp
fdivrs
lock
loope
in
xchg
out
call
nop
shr
in
out
out
cld
ror
lret
ret
cld
repnz
frstpm(287
orl
jmp
jmp
iret
std
icebp
and
sarl
jecxz
loopne
out
cli
lock
shr
addb
cmc
cmp
cmp
repz
cmp
xchg
fstp
clc
call
test
xchg
into
xor
jmp
cmp
enter
in
xchg
test
stc
aad
in
mov
fsubr
in
xchg
mov
call
rcr
into
cmc
ljmp
out
inc
in
in
in
mov
rcl
aaa
xor
fcmovu
fmul
in
sti
xlat
les
clc
leave
mov
sti
in
adcl
cmp
ljmp
in
stc
loope
in
repnz
std
or
mov
shl
cs
xor
cmp
cmp
aad
cmp
in
rolb
lret
nop
xchg
in
mov
shll
xor
into
call
sar
in
testb
lock
sar
xchg
cmc
in
int3
enter
into
fcomip
clc
aas
rolb
xlat
ljmp
xchg
adc
aaa
ror
out
leave
xor
int3
roll
lock
cmc
fucomip
mov
mov
cmp
cmp
loope
sar
into
shl
fsubrp
cld
cmc
fdivr
mov
sub
int3
call
fstp
shr
cmp
xchg
lret
shr
out
xchg
xchg
out
ret
cs
clc
je
mov
jmp
int
aad
fstp
ffree
push
jl
push
jl
jg
cmpsb
add
xor
lret
std
cli
aas
into
lds
sti
sti
loop
fsubrp
loope
les
lock
xlat
idiv
fidivrs
fadd
ret
stc
leave
sti
fcomip
ret
nop
ror
out
ror
ror
out
in
cli
xor
aas
mov
in
rorb
xor
loop
out
repnz
sti
clc
int
idivb
icebp
xchg
repz
out
xchg
out
shl
jmp
xor
iret
cmp
in
clc
fcomip
hlt
rolb
in
in
into
icebp
fdivp
ljmp
into
int3
xlat
idiv
loope
rcr
xchg
sub
lret
mov
shll
xor
xor
cmp
roll
mov
lock
ret
fstp
in
jmp
das
jmp
in
enter
aam
fadd
fadd
in
mov
mov
aad
in
xor
rcr
cmp
sti
addb
in
mov
orb
sub
in
in
ljmp
sar
sbb
std
fsubr
rcl
in
xchg
nop
cld
int3
jmp
lret
std
in
ljmp
addb
in
int
nop
test
int3
in
cmp
xor
out
into
in
fcom
in
hlt
test
fldl
addl
in
sub
lret
shr
in
iret
loopne
aam
ret
roll
lret
jmp
lock
xor
jmp
lret
cmp
in
xchg
test
cmc
addl
fucomp
xchg
xor
aam
out
out
out
shll
cli
into
out
hlt
leave
cmp
mov
xchg
nop
into
in
loope
xor
cli
ss
xlat
cmpl
div
into
sub
call
out
jecxz
in
xchg
out
in
int3
neg
aad
fcmovnbe
cmp
cmp
fdivrp
fcmovbe
aas
fcomp
in
rcl
out
mov
int
xchg
shlb
in
leave
repnz
sar
rcl
aad
cmp
jecxz
out
incl
rcl
fcmovnbe
clc
jmp
lock
in
loope
in
ret
test
fsubr
mov
hlt
jmp
in
aad
cmp
lret
in
aad
rorb
in
nop
out
mov
loop
stc
aad
jmp
sub
cmp
std
or
idiv
fisttps
sar
fiadds
in
in
ror
cld
sti
lret
aam
cli
ret
std
fsubrp
stc
cli
iret
in
test
jmp
out
enter
sar
sar
fdiv
in
fnstsw
aad
clc
hlt
test
out
cmp
lock
int
out
out
aaa
rcl
rcr
les
lret
stc
filds
xor
leave
jmp
lock
fidivrs
fst
in
lock
fdiv
in
xchg
into
in
out
enter
ret
xor
fdivr
std
testb
ret
int3
nop
nop
xchg
fmulp
xchg
into
loop
rcl
mul
fnstsw
hlt
test
cmp
roll
sti
ljmp
int
in
cmc
in
enter
aas
xor
jecxz
in
sar
mov
aam
iret
mov
lret
xor
xor
shr
cmc
out
sarl
ss
ret
fucomp
or
or
out
call
ljmp
xlat
roll
in
mov
ret
in
repz
into
aad
fsubr
fidivrl
in
aas
testb
stc
fdivr
stc
in
out
mov
std
mov
in
fidivs
fdiv
xor
aas
cld
out
loop
jecxz
adc
jecxz
test
jmp
xor
jmp
lret
cmp
and
roll
fsubp
cld
xrelease
xor
fucomi
out
xor
out
call
fcomi
rolb
mov
jmp
lret
lock
icebp
rol
fcmovu
in
fsubr
shr
repz
iret
sti
xor
test
xchg
out
repnz
cmp
std
jmp
rol
test
inc
in
fcmovne
lret
leave
int
xchg
rcl
sub
test
jmp
ror
idivb
lret
fstpt
ffreep
repz
test
lea
rcl
out
sub
out
fmul
lock
incl
es
mov
mov
mov
mov
xor
jmp
aam
ror
rcl
fld
sub
jae
cmpsb
pop
jg
cmpsb
add
ss
sti
ret
aam
loopne
out
test
stc
call
aam
ret
icebp
cmp
cmp
frndint
cmp
rol
fiadds
fdivrp
fsubr
out
int3
fsubrp
int
in
loope
in
divb
in
call
sti
cli
out
into
fimuls
enter
jmp
neg
rol
leave
xor
lock
cmp
shl
std
cmp
fcmovnb
loop
std
test
lret
test
ljmp
fnstenv
sar
xlat
loope
rcl
rolb
loope
decl
xor
ret
repnz
hlt
fcomi
cmp
cmp
clc
cld
std
aad
mov
fimuls
in
in
out
cmc
call
lret
cld
rcl
roll
cmp
sti
std
jmp
ss
fnstcw
loope
iret
shl
test
loopne
out
int
xorl
int3
in
lret
cmp
repnz
sar
rol
enter
movl
int
bnd
cmc
aaa
iret
int
cli
aas
fld
fisttpl
and
into
in
cs
xor
xor
rcr
fst
xlat
ret
aad
sti
out
mov
xlat
hlt
enter
int3
cmp
icebp
cmp
lock
in
mov
ret
movb
icebp
cmc
mov
cmc
ret
aaa
int
out
cld
jmp
into
cli
sar
test
xchg
ret
xchg
out
cli
in
in
in
iret
lock
cmc
fnsave
fsubp
fcmovnb
hlt
fcomip
cli
loope
leave
xchg
jmp
shll
xor
xor
ror
aam
std
aam
add
repz
cli
sub
enter
out
out
int
leave
int3
hlt
cmp
cmp
cmc
fisttpl
mov
loope
shlb
ror
out
das
iret
std
lret
lret
aad
int
cli
cmp
lret
imul
or
shr
lret
in
repnz
xor
sti
std
test
clc
xrelease
mov
in
test
out
repnz
fsubrp
out
in
les
fucom
cmp
icebp
xlat
testl
call
fdiv
loop
loopne
lret
repnz
filds
cmp
xchg
mov
enter
rol
aaa
test
fadd
fdecstp
in
fnstsw
xlat
int
jmp
xor
loopne
ret
out
lret
sti
fst
fstpt
cli
clc
xor
mov
call
mov
in
jmp
fdivr
repz
test
shl
mov
stc
enter
repz
jecxz
call
cmp
iret
add
fst
jmp
sub
cld
rcr
fsub
xchg
ret
out
cs
fdivs
ds
cmp
add
fucomi
sti
filds
in
xor
sub
lret
out
rolb
rol
testl
ror
rorl
xlat
xor
icebp
fcom
ljmp
test
ret
test
mov
in
mov
xor
leave
out
cmc
fsub
lock
cmp
std
fistpll
adc
cmp
or
decb
out
xlat
xlat
enter
sti
jmp
ds
hlt
dec
in
ds
mov
fsubrl
xor
jmp
repz
sarl
rol
repnz
cmc
sti
clc
ljmp
test
xor
lret
int
clc
repz
jecxz
jecxz
into
out
and
mov
in
iret
aam
shll
out
cmp
iret
incb
ret
rol
sbb
in
sub
test
out
out
out
cld
int3
std
sti
iret
idivl
cmp
shl
and
lock
xor
std
aam
not
into
fucompp
aam
xlat
ljmp
rcl
aam
rol
loop
out
fdivrs
jmp
xlat
adc
aad
ret
test
mov
out
addl
jmp
int3
call
cmp
cmpb
repnz
fucomp
out
out
iret
mov
jecxz
xchg
ds
out
xor
fst
enter
test
out
lock
mul
ret
xchg
mov
shl
cmp
lret
out
xlat
rcr
int
lock
fnstcw
mov
add
cmp
je
mov
xor
add
mov
mov
jmp
enter
int
insb
push
push
mov
pusha
jg
cmpsb
add
enter
in
fucompp
jmp
mov
enter
fxtract
lret
out
fldlg2
lock
cmc
repz
les
and
lea
fldl2t
lret
xor
out
ds
test
aam
shl
ljmp
xchg
fists
ss
in
int3
sti
sarb
loope
into
clc
fsub
jmp
jmp
ljmp
into
imul
loop
rol
call
aad
hlt
cmp
cmpl
aad
cld
test
rcll
cmp
aam
out
cmp
out
out
vpavgw
xbegin
std
rolb
repnz
rcl
hlt
int
out
adc
rcl
loope
jmp
stc
or
test
int3
xchg
aam
lret
in
into
std
lret
enter
cmpl
loope
fsubrp
sub
loopne
shr
xor
f2xm1
into
cmp
xor
jecxz
ret
sbb
jmp
div
clc
loopne
mov
into
xor
in
out
jmp
lret
lret
xor
test
cmc
cmc
cli
fldl
mov
mov
shl
repnz
clc
out
repnz
fndisi(8087
cmp
addl
stc
into
aam
neg
cmp
sti
cmp
repnz
cmp
roll
mov
aam
ds
lock
out
jmp
aam
fcmove
iret
jmp
xchg
loopne
mov
cld
enter
cmp
rcr
xlat
rcr
rcl
sti
adc
fimuls
xchg
hlt
out
lret
lock
into
fdivrl
cmp
ds
stc
hlt
sbb
lret
test
decl
icebp
cs
cli
rcr
enter
sarl
cmp
out
shl
enter
ljmp
repz
fmul
repnz
repz
vpaddq
call
loope
jecxz
std
cld
fmul
das
int3
aaa
fcmovu
fnstcw
fdivr
fnstsw
sub
fcmovb
lret
loop
ret
and
lock
fsub
in
lret
int3
sti
cld
cli
push
test
loope
out
test
adc
lock
into
fnstcw
cli
neg
cmc
lock
loope
lret
fiaddl
sar
jmp
xor
ret
aad
fiadds
neg
ds
aam
roll
xchg
xor
cmc
int
cmc
cmp
mul
repz
mov
in
ljmp
cmp
int
stc
sbb
jecxz
jmp
mov
out
jecxz
cmc
test
repz
fcom
into
shl
icebp
lds
mov
in
jmp
int3
lret
into
mov
in
aaa
loop
aam
call
jecxz
clc
cld
stc
loop
mov
popl
lret
mov
jecxz
fsub
lret
fbstp
dec
icebp
loopne
ret
loop
vpsubq
loope
decl
aad
aad
sti
in
xor
cli
cmp
into
cmp
out
rcl
out
lret
in
fsubp
adc
xor
xor
in
sar
cmp
sti
ljmp
rcl
mov
std
xchg
out
aad
shlb
lret
aaa
cmp
ss
call
hlt
aad
sar
clc
aam
mov
addl
icebp
aam
sub
xlat
cmp
int3
hlt
ds
rolb
fiaddl
in
ror
int
test
cmc
repnz
into
test
loop
lret
mov
or
ljmp
out
fucomp
cmp
out
call
lock
xor
incl
ljmp
cmc
cmp
divl
aam
stc
fdivr
fildl
fmuls
in
sub
cmc
call
fmulp
std
xlat
cmpb
cmp
jecxz
call
out
fucomp
lret
hlt
xor
xor
clc
icebp
fcmovu
lret
sub
out
jmp
cli
lret
fisttps
jmp
in
into
icebp
lock
fldl
call
mul
repnz
jmp
out
out
aas
out
aad
aas
fmulp
cmc
xlat
jecxz
sbb
iret
lea
in
in
test
std
lock
shl
in
in
jecxz
repz
les
xchg
mov
mov
jmp
rcl
rcr
fcmovb
mov
fstpl
pop
imul
jp
jg
cmpsb
add
xchg
in
lock
int3
loope
cli
out
repz
mov
cli
in
fiadds
test
into
out
cmp
lret
cld
leave
cld
out
icebp
cmp
rol
out
out
mul
aam
lret
in
test
fmulp
shr
jmp
enter
fscale
add
repz
lret
fldln2
lret
xchg
cs
repz
cmp
xlat
frndint
and
les
xchg
int3
mov
ret
xor
enter
sti
testl
test
fsub
lret
fidivs
out
in
ljmp
repz
cld
orl
loopne
aad
hlt
cmp
pushl
aad
in
lock
test
filds
jmp
loope
leave
cs
rol
fucomp
in
sar
repnz
fxch
cld
cmp
fistl
jmp
repz
rol
cmp
rcl
repnz
xor
cld
mov
xchg
xchg
lock
cmp
cmp
xlat
xor
iret
ret
cmp
test
rcr
mov
or
fiaddl
mov
das
fsubr
xor
cmp
add
fdiv
cmp
mov
leave
popl
out
div
out
lret
ror
fcmovne
loopne
stc
idiv
testb
jmp
jmp
mul
xor
into
ljmp
cld
addb
stc
adc
iret
cli
enter
aam
aam
out
sub
fst
loope
cmp
test
icebp
shl
out
hlt
enter
xchg
sub
jecxz
out
cli
ljmp
std
jecxz
fcomp
sar
aam
cmp
mov
loopne
iret
aaa
rcl
fcomi
std
test
in
repz
hlt
ljmp
fdiv
in
shr
jecxz
cli
icebp
out
int
rcr
xor
ret
repnz
sti
clc
mov
mov
int3
xchg
inc
xor
lock
aas
ds
cmp
fstpt
in
in
fildl
dec
mov
into
in
fidivrl
shl
cmc
fsincos
stc
addb
int
out
iret
out
lret
xlat
cmp
loope
rcr
dec
sti
fmul
repz
fcomi
test
dec
shr
mov
iret
loopne
iret
std
xlat
fdivr
cmp
out
in
ss
out
stc
sti
fadds
vpmaxub
xlat
int3
rcl
xor
clc
aaa
fyl2x
int3
ss
cmp
sarl
ret
idiv
int
fsubp
lret
xchg
in
hlt
xor
in
sar
aam
cmp
xlat
ret
cmpb
clc
loopne
int
into
add
aad
xor
repnz
fcmovu
cli
fcomi
fldl
loop
xchg
loop
loop
xor
ljmp
xorl
in
sbb
fsubp
leave
int3
jmp
aad
out
ss
fdivp
repnz
ror
in
and
sti
stc
lea
loope
repz
fld1
lret
hlt
clc
aam
cmp
iret
out
ds
sbb
std
nop
cli
out
lock
xor
stc
shr
lret
xlat
cmp
cmp
int3
hlt
fiadds
loope
loope
lret
shr
rol
ret
ret
cmp
aam
cmp
rorl
call
out
xor
in
sub
int
ss
ds
in
test
rorl
stc
into
in
sarb
cmp
repz
loope
aad
ret
std
sub
stc
xchg
loop
cmc
fmul
int3
out
lret
sub
loopne
loope
add
test
jmp
jmp
lret
ret
xor
cs
fldl
std
xchg
cli
call
mov
loope
lret
xchg
in
aaa
out
xlat
out
flds
xchg
test
loopne
icebp
xchg
out
xlat
xlat
loop
hlt
call
cli
aad
cmp
ds
repnz
ds
addb
hlt
ret
lret
xor
in
cmpb
fscale
sub
fcoml
aaa
hlt
xor
fmul
ss
xlat
int3
stc
cmp
rol
repnz
mov
loopne
cli
mov
aad
xlat
aaa
out
shl
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
jmp
ds
leave
fstp
ror
cmp
mov
imul
add
into
xlat
loopne
filds
enter
leave
int3
sti
jmp
jmp
iret
xor
in
enter
stc
out
sar
xchg
fsubrp
mov
xchg
shl
xor
out
int
cmp
enter
shl
in
rolb
fsubr
std
lock
jmp
hlt
sti
int3
fxch
fcomip
cmp
sar
fiadds
or
jmp
mov
xor
hlt
jecxz
out
aam
ds
clc
repz
out
fstl
nop
out
jmp
xor
shr
cmp
aad
repz
neg
sti
stc
sti
call
int3
in
rcl
out
in
int
xor
lock
faddl
movb
sti
out
lock
lret
loop
ret
xor
lret
jecxz
sub
cmp
leave
jmp
icebp
call
lock
ret
in
cmp
adc
out
testb
rolb
fisttpll
out
xor
int3
lock
fmulp
jmp
iret
aas
test
test
test
or
mov
out
fucomip
jecxz
leave
xor
lret
int3
into
shl
adc
jmp
xor
loopne
in
rcl
enter
icebp
int
int
fiaddl
in
xchg
loope
mov
out
ret
iret
xor
out
leave
in
stc
loopne
cld
std
lock
or
out
out
xchg
loope
fdivs
rcl
std
imul
fdivp
sar
ret
loopne
adc
xchg
mov
xchg
fimull
ljmp
sub
int
not
shl
mov
jmp
mov
fiaddl
ror
jmp
lret
shl
cmp
fdivp
aam
out
jecxz
and
testl
lret
xor
out
stc
ror
std
out
fcmovnb
icebp
loope
aam
test
idiv
enter
call
jmp
xor
rcl
cmp
not
cld
ds
std
jmp
mul
loope
iret
mov
enter
in
mov
sub
out
aas
loopne
sti
in
jecxz
repz
xchg
stc
mov
fiaddl
out
jmp
rcr
xlat
aam
cmp
ds
aas
in
clc
addb
xor
cs
xor
shl
lock
lret
xchg
out
leave
cld
mov
mov
mov
out
loop
aaa
enter
xor
rcl
inc
cmpb
hlt
loop
ror
cli
fucomip
dec
filds
ljmp
loope
std
fucom
stc
in
push
inc
fst
hlt
fcmove
out
fiaddl
loop
in
cmp
sti
lret
loop
out
cmc
call
loope
mov
out
out
std
divl
aad
repnz
ds
aam
sbb
loopne
call
shlb
xor
out
xor
in
out
cmc
aaa
int
out
out
fcomip
sub
shl
loope
lret
sti
mov
xlat
xor
clc
fcomp
jmp
call
xlat
enter
xchg
mov
ljmp
out
rol
loopne
faddp
sarl
repnz
out
mov
fldz
into
cli
xchg
in
enter
cmp
aaa
fmulp
ds
cmpl
std
cmc
in
ds
leave
lret
rorb
div
jmp
cmp
xor
std
sub
leave
mov
sub
hlt
clc
xor
jmp
repnz
ffreep
repnz
fldl
or
mov
in
fdiv
jecxz
out
xlat
rcr
fmul
aam
test
neg
imul
call
in
nop
call
loope
cmp
ds
cmpb
addl
xchg
loope
call
enter
call
fdiv
repnz
out
fxch
loope
std
xchg
int
sub
call
rcl
sub
xor
fucomip
xchg
pause
rcl
xor
cmp
lret
ss
ljmp
aad
addb
adc
int
fsubr
shl
in
not
lock
jmp
cld
out
cmp
ret
ret
fisttps
ss
clc
rcl
std
xor
ljmp
loope
add
jmp
int
ret
fcmovu
add
dec
mov
outsb
jg
cmpsb
add
rol
add
out
out
sub
xchg
shl
f2xm1
stc
hlt
ljmp
repnz
lock
sti
cld
lret
out
les
xchg
test
ss
cmp
imul
test
in
stc
fdiv
fcmovnu
in
xchg
adcl
in
jmp
fcomi
sarb
shl
sti
fucomip
addb
icebp
repnz
test
test
cli
rol
leave
or
mov
out
test
repz
loope
xor
aad
cld
cld
xchg
into
call
xor
cld
fmulp
cmp
aam
lock
cli
rcr
std
rorb
mov
xor
in
cmp
fld
sbb
xlat
cmp
xor
shr
leave
std
iret
fmull
xor
ror
fcmove
in
cmp
cmp
ret
std
lret
in
fstl
out
aam
repnz
cmp
cmp
iret
clc
loopne
repnz
fiadds
clc
ljmp
loop
cmp
rcr
std
aaa
jecxz
cld
cmp
aam
testl
icebp
cli
xchg
repnz
int
aad
in
in
cmp
std
ret
xlat
ds
sti
std
out
xchg
out
in
xchg
in
xor
lock
out
in
out
xor
sti
cld
rcl
out
fisttps
nop
jecxz
ds
imul
leave
clc
cmp
hlt
sbb
cmp
jmp
loope
fldl
call
std
jmp
out
hlt
sbb
test
fsubp
enter
out
repz
loopne
jmp
xlat
in
icebp
repnz
cli
icebp
out
call
cmp
enter
test
mov
imul
xor
int
sti
fmulp
jecxz
aam
movb
fucomp
ret
out
xorb
das
jecxz
in
out
aaa
aaa
sti
aam
roll
cli
mov
jecxz
mov
test
lock
loopne
in
xor
call
cmp
in
jecxz
loope
loop
xchg
lret
xchg
ror
xor
shl
in
fnsave
idiv
cld
ds
faddl
int
lret
shl
out
not
xlat
lret
lret
out
lret
fdivr
cld
stc
roll
jmp
jecxz
cli
shr
fisubrs
int
cmp
cmp
rolb
aam
clc
cmc
rcr
clc
jecxz
orb
loopne
test
aaa
enter
out
cli
stc
fnstsw
jmp
filds
into
cmc
xor
out
imul
or
fdivp
clc
fcomip
fsubr
add
out
shl
cld
int
sub
ljmp
in
idivb
out
loope
loop
fdivrp
fcmovu
xchg
aaa
aaa
fcmovne
aad
cli
jmp
and
rcr
repz
xchg
neg
mov
enter
shl
ss
fmul
loope
loop
loop
out
repz
call
leave
loopne
leave
sti
ljmp
ljmp
repz
aaa
rcr
fdivrp
lret
test
xchg
repz
in
in
in
cmp
lock
repnz
rcl
in
fiadds
jmp
fmul
loop
mov
int3
in
cmp
fsqrt
cmp
clc
shr
cli
std
lock
into
rolb
sti
std
orl
cmc
shlb
ljmp
hlt
aam
loop
mov
hlt
jmp
jecxz
int3
mov
repnz
lret
aad
cld
out
fucomp
out
aam
shl
rcr
cmpb
mov
stc
enter
jmp
into
xor
fdiv
in
out
in
lret
les
mov
test
f2xm1
icebp
ljmp
lret
out
repz
fsubr
fxtract
cmp
xchg
lock
bnd
sti
rorb
rcl
icebp
int3
jmp
cmp
repnz
shl
aas
loopne
jmp
ljmp
iret
shl
int3
in
call
cmc
int
clc
ret
cmp
aam
mov
ljmp
aam
repnz
jecxz
cli
int
cmp
repz
icebp
sti
cmc
out
aad
int
int
iret
xchg
addb
int
cmp
cmp
fidivrs
xchg
in
ffree
imul
sub
mov
jmp
mov
mov
xor
cmp
jmp
aas
enter
xlat
fcmovnu
mov
pop
pusha
test
js
jg
cmpsb
add
xchg
mov
int
aam
not
lock
sti
out
faddp
xor
clc
fld
fcomi
and
int
into
or
enter
rcl
jmp
clc
div
fiaddl
enter
jmp
sub
in
xlat
ror
aam
in
int3
xlat
in
repnz
hlt
ds
testl
rcll
ljmp
rol
repnz
in
jmp
out
lret
call
iret
int3
in
das
call
enter
lret
aam
std
shl
fldl2t
hlt
fcomp
into
lret
icebp
lret
lock
ret
loope
out
lret
cmp
cmp
aaa
sarb
sbb
fdivrp
lock
ljmp
rorb
into
shl
aaa
cmp
xor
sar
int3
icebp
repz
sar
lret
test
iret
in
xor
in
out
clc
fbstp
cld
loope
faddp
in
ret
ljmp
jmp
out
call
fidivrl
rcl
icebp
shl
in
int3
in
icebp
std
out
test
ret
iret
rcl
ss
cmp
xor
loopne
xor
fcmovnu
loope
in
fildl
loope
fnstcw
test
fdivrs
xor
jmp
cmp
stc
test
cli
and
xor
aaa
cmp
out
loopne
xrelease
stc
in
iret
fildl
shl
fdivrs
loopne
out
ds
ret
cli
leave
out
enter
mov
out
rol
out
loop
fdiv
sarb
jmp
in
cmp
aas
shl
mov
mov
mov
ret
xor
stc
out
repnz
out
jmp
ret
xor
and
decb
in
mov
stc
rcl
in
fcomp
repnz
sar
stc
int
rolb
test
out
out
fsub
fimuls
out
fcmove
aam
stc
cmp
aad
ret
jecxz
lret
cli
not
in
in
xchg
out
ror
xor
ret
aam
cmp
xor
rcr
fincstp
out
repnz
cmp
in
lock
out
jmp
xlat
ss
test
cmc
xor
cmp
cli
cmc
sti
div
neg
addl
fbstp
aam
cmp
cmp
ds
out
out
out
shl
jecxz
cli
stc
out
lret
repnz
imul
cmp
xlat
frndint
fadds
roll
fdivr
into
lock
xchg
ds
out
hlt
divb
ds
fsubrp
fadds
fsubp
jmp
nop
iret
out
sub
cmp
fxch
int
fsubr
addl
out
icebp
lea
lock
enter
lret
hlt
ljmp
loop
orb
int
xchg
icebp
xchg
sub
sub
xor
in
repz
xlat
fdivrs
fidivrs
hlt
out
les
test
jmp
fadds
loope
out
call
lock
enter
clc
loopne
fadd
mov
int
fmulp
mov
cmc
aaa
jecxz
aaa
loop
std
cmp
ds
std
std
cli
repz
leave
loope
mov
enter
lock
cmp
clc
cld
ljmp
fcmovu
in
sub
loopne
out
fcmovne
addb
lret
xlat
aam
fcmovnu
ds
cmc
jmp
fsincos
mov
mov
jmp
jmp
ds
rcl
rcr
fst
xlat
loop
in
jecxz
rclb
xor
aad
out
rcr
lret
cmc
aad
flds
fcomip
ffree
loop
clc
out
fcmove
out
in
cmc
ret
fsubr
cmc
cs
ror
not
sti
out
int3
in
nop
xchg
in
into
loopne
in
cmp
iret
stc
shl
sti
shl
xchg
out
xlat
out
fimuls
xor
repz
int3
lret
cld
shl
aam
into
xchg
loopne
loopne
sub
in
out
call
jecxz
cmp
out
stc
loope
repnz
les
out
xchg
int
or
int3
loop
hlt
icebp
out
aaa
in
out
aaa
cli
out
std
test
lock
fsub
cld
test
orb
shl
fmul
xor
fpatan
cli
stc
int3
int3
clc
icebp
fildl
fsubr
loopne
sti
xchg
cmc
fmul
je
mov
addl
jmp
jmp
vpsrlq
rcl
aad
xchg
mov
in
int3
repz
mov
add
iret
fcomi
fiaddl
in
clc
ffreep
leave
jmp
fimull
mul
aaa
fsqrt
int3
int
fcomp
rcr
into
cld
stc
ret
xchg
xlat
cmp
ljmp
jmp
loop
shl
cmp
in
cmp
in
in
jmp
les
lret
fdivrp
int3
out
xlat
aad
aad
lret
in
cmp
cmc
lret
xlat
xchg
hlt
test
les
enter
jmp
jmp
stc
out
cmp
not
sti
cmp
std
jmp
in
loop
xchg
repnz
fsub
fucomp
in
aaa
and
loope
sbb
ljmp
popl
cmp
cmp
hlt
in
ret
xlat
loope
mov
lret
cmp
in
out
in
lds
hlt
cmc
jmp
icebp
out
out
cmc
loopne
fcomp
vpsubsw
lret
loope,pt
xchg
fiadds
hlt
aad
out
out
leave
stc
sarb
rcl
sar
loope
call
out
rcll
ret
xlat
repnz
idivb
sar
fdivr
hlt
call
clc
out
aam
jmp
in
cmp
fistpll
aad
div
mov
test
out
hlt
fadds
loope
xlat
sub
divb
shr
iret
repnz
lock
cli
loope
ret
in
test
cli
lea
icebp
xor
repnz
in
ljmp
int3
repz
mul
rcr
aam
xchg
decb
xor
ror
cmp
ror
clc
call
test
ds
cli
test
lret
ljmp
sti
int3
lret
in
cs
sti
aam
lret
loope
xchg
fcmovbe
cmc
clc
aam
lret
out
jmp
out
xor
out
jmp
repnz
test
fadds
sub
roll
mov
cli
cmp
cmp
ss
ret
aas
cmp
fld1
loop
or
jmp
int
jmp
fdivp
cld
repnz
test
jecxz
stc
repnz
loopne
test
in
fdivp
repz
repz
ss
xlat
ret
filds
out
ljmp
sub
out
hlt
ss
fadd
xlat
in
xchg
int3
lock
idiv
ljmp
hlt
rcl
in
div
loopne
lock
xchg
hlt
loope
lret
iret
in
out
divb
sarb
sar
fdivrl
cli
fcompp
iret
aaa
jecxz
aas
testl
ljmp
lret
repnz
int3
jmp
fcomp
ds
ds
out
dec
clc
in
ror
mov
enter
hlt
fucomp
not
leave
aad
fsub
out
test
fstp
loop
loopne
xchg
out
loopne
vpsubb
leave
std
into
cli
sar
cld
stc
cmp
fldl
orl
iret
ret
ret
test
shr
rcr
aad
xchg
fdivr
fldl2t
out
out
in
lret
fsubp
aam
call
not
ds
shr
int
out
test
cmc
jmp
fmuls
mov
loopne
ret
icebp
xor
fadd
ror
cmp
pushl
loope
rorb
in
in
std
sbb
ds
xor
lock
repnz
shlb
test
out
mov
in
out
les
xor
jmp
test
fsub
clc
hlt
loope
mul
fmull
ljmp
out
icebp
ds
clc
int
icebp
out
jecxz
idiv
loopne
in
into
sti
repz
repz
sub
int
into
xor
cli
in
test
call
sti
loopne
jmp
xchg
icebp
iret
out
xor
aam
out
leave
aam
xor
add
sti
fcomi
movl
int
loopne
rcr
leave
in
cli
jmp
out
jmp
aaa
repnz
ret
cmc
clc
ds
mov
call
cs
out
xor
cld
out
rolb
adc
in
mov
jecxz
incb
cmc
leave
test
int
in
jecxz
loopne
cld
faddl
xlat
xchg
into
call
xor
out
loopne
jmp
into
cmp
std
out
ret
ffree
lret
cmp
out
mov
xchg
lock
xor
xlat
cmp
ds
fidivl
inc
in
cmp
test
mov
jmp
push
mov
sub
incl
mov
push
or
push
mov
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
rol
sarb
aas
rcl
mov
adc
int3
jl
jl
add
idivb
jmp
call
loopne
out
fsubp
fidivs
hlt
in
repz
ror
std
test
mov
xchg
in
ljmp
std
cmc
shr
jmp
cmp
icebp
jecxz
fcmovb
mov
loop
loop
fninit
test
mov
rol
clc
fstpt
mov
cmp
loopne
in
sti
sti
aad
les
aam
sub
repz
rcl
out
aam
mov
clc
jmp
xchg
repz
aaa
rcl
lret
not
xor
addl
in
icebp
leave
lret
xchg
test
rol
repz
lret
shr
sub
sarl
xchg
jmp
in
shr
ljmp
neg
mul
ds
repnz
fcomp
rorl
sbb
mov
aam
iret
out
xor
cmp
call
xchg
clc
sub
call
jmp
loope
stc
fstpt
stc
in
lret
sti
div
clc
in
xchg
rcr
mov
aam
addl
mov
fsubp
lret
xor
sar
fucomip
int3
imul
in
fadd
mov
out
iret
orb
repz
xor
xor
xlat
cmp
xor
neg
xchg
fildl
enter
leave
xor
leave
loop
stc
in
std
cmp
cmp
jecxz
fmulp
cli
loop
in
fxch
std
jmp
out
les
loop
sub
std
fadd
fld
sti
repnz
ret
lret
call
sbb
xchg
mov
repnz
repz
cmp
fcomip
ds
cmc
and
clc
shl
mov
into
faddl
call
cmp
rolb
hlt
add
fcmovnu
jecxz
fcmovu
xchg
enter
shl
xor
int3
not
sti
int
fsubr
shl
ret
in
fcmovnbe
fucomi
jmp
shl
fidivs
enter
out
int3
aad
cmp
fsincos
sarl
fsub
fdivr
test
and
lret
xchg
int3
rol
ss
out
cld
out
repz
ret
fldl
jmp
sub
test
fucomp
fcmove
shl
loop
fmul
cmp
lret
sbb
ss
addl
rolb
in
xor
aaa
shl
xlat
into
xlat
ljmp
repnz
out
iret
xchg
xchg
repnz
neg
fcmovbe
cmp
int
sar
fucom
fadds
xchg
ljmp
xor
in
aaa
out
fsubr
repnz
cmp
repz
ror
sub
fxch
xchg
icebp
sub
shr
aad
jmp
xlat
cmc
cmp
aas
mov
xchg
clc
shr
nop
out
rcl
in
xor
sti
jmp
icebp
icebp
repnz
repnz
leave
loope
loop
pop
mov
std
shl
out
cmp
fcmovbe
cmp
lret
cld
loopne
loopne
in
loopne
out
mov
enter
hlt
iret
ss
xor
loop
aad
add
clc
les
lock
out
cmc
lock
cmp
fnstcw
int
xor
rol
out
in
jmp
ljmp
xchg
fidivs
ret
sar
call
xor
ds
cld
jmp
ret
xchg
in
fcomip
xchg
in
div
jmp
stc
lock
repz
inc
repnz
jecxz
cmp
lock
in
xchg
mov
loope
in
ror
cmp
cmp
lret
cli
mov
out
mov
and
shr
lock
in
int3
shr
fcmovnbe
out
fucomi
lock
in
fiaddl
test
stc
cld
iret
loopne
mov
icebp
cmc
aaa
ror
std
xbegin
cmp
xlat
cld
repnz
jmp
loopne
icebp
cmc
xchg
repnz
xlat
aam
aad
leave
lock
cli
cmp
rcl
sub
xlat
neg
in
nop
in
aam
out
shlb
lock
cmc
cmp
cmp
in
add
fmul
call
repnz
in
call
xor
in
not
sar
cmp
jecxz
int3
fyl2x
repz
xchg
loop
test
out
aad
cld
clc
out
int
ret
xlat
fcomp
int3
xchg
loopne
rcl
jmp
in
cmp
aas
cmp
repz
ret
enter
vpaddusw
mov
aad
ljmp
cmp
icebp
fdivp
adc
rolb
fsubr
out
dec
in
jecxz
aad
icebp
into
stc
aad
int3
rcr
loope
out
cmp
out
mov
faddp
iret
ss
int
sar
jmp
cmp
xchg
jb
add
add
add
add
sbbl
push
neg
jmp
int
aad
ffree
fstp
stos
push
push
rorb
sub
jge
jl
shl
fcmovnb
loop
and
mov
out
mov
out
jecxz
rol
lret
std
rcr
in
dec
fldz
iret
aad
movl
in
call
loopne,pt
ret
sar
ss
cmp
fnstsw
test
repz
fcmovu
in
icebp
rcl
enter
fscale
shl
cmc
neg
shl
ret
loopne
enter
xchg
rorl
cmp
in
cmc
in
leave
int3
fsubr
cmpb
out
rcr
std
lret
in
loope
fsubp
loope
in
in
out
in
sti
cmp
rol
rcr
loopne
fldl
loopne
fsubrp
div
lock
aam
stc
into
cli
repz
fdivr
sar
shl
loopne
mov
iret
out
out
lock
in
jmp
fcmovu
aad
loopne
loope
addb
loop
dec
repnz
loop
in
imul
stc
out
out
in
fcmovne
aad
aas
jmp
ficoml
xchg
call
lret
cmp
cmp
cmp
div
shl
test
loopne
mov
nop
lret
std
pushl
sub
cmc
rol
fnsetpm(287
icebp
aaa
in
cmc
loope
loop
sbb
mov
jmp
fucomp
in
ds
ljmp
ljmp
cld
fsubr
rcr
loope
test
ficoms
fnstenv
fsubr
cmp
shr
cmp
std
fcmovnbe
sar
out
jecxz
cmc
hlt
into
xlat
loope
rcl
lret
out
std
fstpt
out
fcomip
rol
shl
loop
xchg
xchg
repz
icebp
lret
icebp
cli
cmp
clc
cli
repnz
ret
fcomp
hlt
cld
testb
and
iret
xor
in
in
lret
in
out
cmp
repnz
fstp
test
in
mov
lret
jmp
lds
into
ss
cld
jmp
cld
div
rol
roll
xchg
lock
ss
fmul
std
ljmp
hlt
mov
fdivrp
int3
loope
hlt
out
rcl
xor
cmp
cld
xlat
jmp
fldz
out
cmc
xlat
cmp
lret
clc
clc
fsub
fucomip
fucomip
lret
xor
in
xor
sarl
in
cmp
sar
std
iret
sub
sbb
xor
icebp
xor
ljmp
std
fnstsw
enter
mov
sub
in
xor
fidivrs
cli
loop
cmpl
leave
cmc
enter
jecxz
xchg
aad
shrl
xlat
call
out
shl
cmp
cmc
rolb
loope
out
cld
aad
call
hlt
ss
in
sti
mov
enter
leave
in
out
mov
xchg
int3
jmp
les
aam
fcmovnu
adc
cli
loope
enter
int3
or
icebp
out
rcr
aam
sub
fcmove
cmp
test
fdivr
lock
cmp
incb
aad
xor
in
fidivrs
cmp
hlt
ret
jecxz
fcomi
loope
xchg
xchg
fmulp
mov
hlt
lock
call
cmp
cmpl
aad
mov
out
stc
fimull
aam
xor
in
lock
cmp
sar
test
test
add
test
in
std
into
repz
xchg
jmp
xor
cmp
stc
enter
test
imul
flds
in
test
xchg
xchg
in
shr
cmp
cmp
ds
out
shl
sarl
cld
out
test
icebp
mov
xchg
ror
in
into
in
in
cli
lret
dec
fildl
aam
ljmp
icebp
test
lret
xor
xor
rcr
cmp
loopne
test
lret
xchg
out
jmp
aam
out
aaa
cmp
in
int3
cld
into
out
std
aad
fadd
clc
enter
jmp
loope
rorb
ljmp
clc
cmpl
loopne
std
in
movb
mov
stc
shl
leave
in
lret
cli
cld
into
cld
lock
rol
mov
fld1
icebp
nop
int3
mov
ljmp
jmp
leave
aaa
fcmovnbe
in
in
ret
test
std
testl
fucomp
lret
xor
cmp
hlt
lret
fdiv
ds
cmp
loopne
mov
and
fnstsw
xchg
xchg
in
loop
into
xlat
repz
test
icebp
ljmp
mov
ret
in
cld
enter
icebp
xlat
rol
xor
out
cmp
lret
cmp
icebp
hlt
and
leave
ljmp
rol
xor
fucomip
out
sar
mov
or
mov
addl
xor
xorl
movl
sbbl
jmp
rcl
int3
fstp
arpl
test
sbb
push
jle
jge
jl
xlat
out
fcmovbe
xchg
in
loopne
mov
addl
repz
sar
call
lock
into
fptan
ret
xlat
ljmp
mov
ljmp
fdivp
into
aas
testl
ret
in
xchg
roll
aad
fsubr
in
sti
std
int3
cmp
cld
idiv
hlt
in
enter
int
xchg
xchg
fdivr
ror
xor
sub
xor
int3
stc
aad
repz
loop
test
incb
int
xchg
lds
cmc
lret
jecxz
fdiv
fucomp
sti
ror
adc
cmc
fdivp
cld
filds
fmul
xor
repz
enter
shl
rolb
enter
rorl
test
cs
aam
cmp
lock
mov
mov
out
loop
xor
stc
lret
fbstp
iret
xor
in
aam
cld
std
repnz
jmp
int3
jmp
int
jecxz
jecxz
leave
shl
enter
repz
call
cld
fcmovnbe
fnstenv
sar
fdivrp
les
xchg
test
sub
repnz
rcl
in
std
into
cmp
out
lock
lock
rol
in
test
cmp
sub
out
out
jmp
ret
jecxz
repnz
fisttps
mov
fildl
out
jmp
cli
leave
cmp
in
ss
sbb
loop
cmp
rcr
clc
sub
cli
decb
aad
clc
aaa
icebp
std
sbb
lock
stc
cmp
test
call
lret
aad
loop
out
rcl
aaa
cmp
cmp
test
fstp
rcl
clc
in
out
mov
jmp
jmp
sub
in
rcl
cmp
not
loope
test
sar
mov
jmp
std
in
nop
test
loopne
shr
hlt
call
or
int3
in
idiv
in
in
lret
add
mov
in
xor
leave
sub
into
repnz
stc
hlt
jecxz
in
mov
jmp
into
cli
loope
xchg
lret
loope
in
aam
enter
div
cli
test
mov
mov
jmp
int
out
xor
lret
repz
clc
cmc
in
xor
call
lock
and
icebp
rol
ljmp
lock
stc
xlat
fcmovnb
cmp
in
in
lret
ror
loop
ret
enter
enter
repnz
loope
xlat
xchg
loop
in
fcmove
sti
in
enter
loopne
xor
in
cmp
in
repz
loopne
repz
test
in
in
xchg
lret
stc
lret
ror
cmp
ds
ret
clc
out
ret
call
out
ss
repnz
in
out
cmc
int
cmp
iret
ret
xlat
ret
cld
std
aad
lret
rorl
xchg
out
xor
stc
ss
fucomp
loop,pt
cmp
cmp
jmp
loopne
fdiv
int
xor
rcl
call
out
clc
lret
stc
rcr
stc
out
fdivr
xchg
jecxz
fldl
ds
ret
rol
hlt
neg
iret
out
cmp
aas
in
rol
mov
cmc
in
std
leave
lret
sti
fsub
fistl
into
divl
fdivrs
fildl
out
test
loop
enter
out
cmc
ljmp
cmp
aas
jecxz
inc
sti
leave
leave
cmp
ljmp
rol
sar
in
xor
not
not
loopne
sti
cmp
cmp
jecxz
in
or
icebp
lret
out
lret
cmpl
jecxz
xlat
inc
stc
out
orb
cmp
out
fcmovne
aam
repnz
fsubp
loop
sti
leave
inc
out
cli
out
jmp
lret
ret
xor
lock
lret
cli
aas
into
iret
jmp
into
icebp
icebp
ret
sti
fiaddl
sti
rcl
rcr
vaddsubpd
ljmp
in
xor
hlt
fsub
test
loop
in
in
fsubrp
icebp
jecxz
out
loop
sarb
cmp
ds
stc
test
clc
hlt
test
jmp
fsubr
ljmp
subl
icebp
leave
xor
neg
repnz
lret
cmp
loopne
xchg
jmp
mov
fsubr
sti
nop
cli
int3
xchg
int
in
fcom
xlat
shlb
cmp
lock
add
loop
cmp
xchg
xchg
int3
in
fnstenv
cmp
into
ljmp
test
std
ret
repz
fdivr
call
mov
lock
ljmp
fmulp
roll
xchg
fs
add
push
dec
add
movl
jmp
xlat
enter
enter
xchg
rol
ljmp
jge
jl
std
neg
std
aas
cmp
fiadds
lret
lret
xorl
in
int3
lret
hlt
repz
test
sti
mov
movb
loopne
mov
lock
out
out
div
call
and
not
filds
jecxz
mov
xor
fbstp
cmp
sti
clc
cmp
fcmovu
xchg
fmulp
fstl
iret
ss
divl
cld
idivb
fdivrl
not
ds
call
test
loopne
or
out
rcl
sub
fstpt
xor
in
repz
and
clc
enter
addl
clc
fcmovne
sar
rcl
ror
rcl
cmp
fdivr
clc
cld
in
lock
shl
jmp
loop
hlt
cli
xlat
ror
xor
clc
in
fcomp
aad
rol
jmp
in
dec
test
das
call
ror
shl
aaa
cmp
repz
sbb
xlat
ljmp
test
enter
cmp
jmp
icebp
adc
jmp
jmp
out
loope
iret
hlt
ror
clc
rcl
xor
leave
cmp
icebp
fdivrp
mov
push
call
out
test
fdiv
fdivp
out
divl
leave
fcmovnbe
fistpll
aam
aas
sarb
out
aam
in
mov
enter
xchg
repnz
lock
fcomi
std
repnz
xlat
sarl
std
out
cld
faddl
in
ret
in
jmp
int3
enter
ljmp
mov
test
xchg
cld
ror
ljmp
out
repnz
fcomp
rcr
stc
cmp
ret
mov
out
in
mov
out
xor
fadd
clc
jmp
cmp
call
in
loop
ret
shl
aam
in
into
cmp
loope
mov
loopne
out
cmp
aam
xor
int3
sbb
cld
loopne
int3
fucomip
loopne
cld
int
out
iret
fcmovbe
hlt
int3
filds
cmp
out
lea
xchg
xlat
jmp
fmul
test
shl
repz
ljmp
std
xchg
shl
ret
ljmp
add
clc
fisttps
cld
int3
lock
aas
repnz
out
cld
lret
leave
shl
loope
fptan
xchg
in
fimull
loop
into
fistpll
xabort
into
out
aas
out
imul
sarb
clc
adc
cld
rcr
xchg
ds
lock
xchg
in
mov
int3
ror
lock
enter
dec
jecxz
xlat
in
stc
clc
fucomi
lret
xchg
out
int
out
mov
ret
cmc
neg
imull
repz
xor
hlt
leave
imul
in
lret
in
jmp
iret
ss
into
out
fsubrp
lock
fcmovbe
aad
jmp
dec
std
mov
shrb
sti
loop
cmp
int3
loope
into
clc
std
out
ret
xchg
xlat
loop
xchg
xchg
out
stc
sub
fstpt
cmp
cmp
int
cli
out
lock
mov
into
loopne
das
in
sarl
fsubr
rcr
fnstsw
xor
xchg
rcr
xchg
mov
jecxz
fiaddl
loopne
sar
in
lret
fcmovbe
ljmp
sti
fidivrl
out
lret
out
test
enter
jecxz
rol
shlb
lret
fstp
xor
test
ljmp
ljmp
lock
enter
ds
fucomi
jecxz
aad
fsubr
jecxz
xchg
xor
iret
call
lret
ds
rcl
fcmovnb
mov
in
jmp
test
xchg
ss
cmp
hlt
icebp
test
test
in
incl
int
lret
int3
test
cmp
push
test
icebp
loopne
mov
roll
out
out
in
xor
cli
rol
std
shll
fst
cmp
filds
mov
out
lret
lea
shl
aad
out
sti
fadds
aas
fadd
stc
shr
addl
xchg
xor
jmp
jmp
jmp
incl
loope
sub
in
in
out
xor
leave
out
xor
or
cmc
incb
stc
lret
repz
out
das
idiv
jmp
fcomi
aam
in
in
xor
jecxz
ffreep
fucom
jmp
fimull
xchg
ror
stc
ljmp
aam
int3
shl
vpsubd
filds
fst
ljmp
int3
xor
clc
fiaddl
ret
add
or
add
test
add
mov
movl
mov
movl
mov
mov
movl
jmp
aad
leave
fcmovne
fcmovbe
test
pushl
sub
adc
jge
jl
iret
rolb
fsubr
enter
xchg
xchg
xchg
test
hlt
in
in
call
ret
fadd
cmp
aas
cmc
loop
fcmovu
mov
test
stc
hlt
cmc
in
in
xor
div
test
repnz
addl
leave
jmp
lret
xlat
stc
lock
loopne
shr
incb
mov
repz
ror
cmp
call
rolb
test
fcmovnbe
fsubrp
hlt
xor
xor
shl
cmp
rcr
idivl
cld
loope
not
hlt
faddp
neg
in
int3
mov
test
icebp
in
loop
sar
icebp
fmul
cmp
rcr
adc
into
shl
inc
enter
loop
leave
into
xchg
neg
jecxz
int3
repz
cmp
fcmovnbe
fucom
ret
cmc
neg
fucom
hlt
mov
in
repz
sub
jmp
stc
lock
sti
in
sbb
ror
sar
stc
hlt
cmp
fcmovnu
into
jecxz
int
enter
out
in
out
leave
fucomip
fmul
aas
repnz
loope
in
in
mov
ror
out
iret
aad
fcompp
cs
lret
in
frndint
loop
jecxz
movb
sub
call
cmp
cmp
cmp
xlat
loope
xchg
fiaddl
into
in
in
cmp
in
int
sub
lock
sti
xlat
mov
int
int
ljmp
fst
cli
jecxz
iret
in
rol
mov
addl
dec
sub
ljmp
lock
loop
fsin
loope
std
xlat
loop
jecxz
call
iret
stc
aaa
int
cmp
lock
div
in
ror
xlat
cmp
rolb
fsubrp
xchg
xchg
xchg
jmp
out
int3
aam
clc
icebp
fcmovnu
out
jecxz
hlt
aad
rol
test
jecxz
xchg
leave
sbb
fcmovnb
leave
fnstsw
int3
cmp
test
and
cli
mov
cli
sbb
out
shr
out
sub
xor
shr
in
cld
cmp
cmp
rcr
add
xchg
mov
adcl
hlt
out
xlat
xlat
cmc
in
loopne
in
out
xor
in
jmp
xchg
test
int
sarb
test
cmc
out
call
xlat
adc
fcomp
testl
xor
not
loop
sarb
repz
aad
cmc
rolb
loop
iret
ret
in
into
ljmp
in
in
jmp
test
rcr
repz
sub
cmc
into
jecxz
repz
ljmp
loope
fcomip
cmp
in
call
mov
cmc
repnz
out
out
std
aam
cld
fldl
sar
adc
xchg
mov
call
int
in
stc
iret
std
loopne
rol
rol
cmp
sbb
nop
aam
cmc
xor
cmp
sti
aam
fsub
xlat
cmp
jecxz
in
aas
hlt
xchg
mov
xor
jmp
aam
int
repz
in
lret
loop
loop
lock
fimull
cli
loop
hlt
in
imul
xor
std
xor
fdiv
rcr
loopne
and
loopne
shl
nop
hlt
fprem
loop
into
fucomp
sti
cmp
in
aam
fdivr
out
div
jmp
fcmovb
fcmovu
lret
incb
ret
leave
xor
in
in
fmul
ss
std
ret
clc
testl
mov
loopne
hlt
leave
out
int
aas
fldl
lock
test
cld
jmp
cmc
jmp
iret
ret
aad
cmp
in
in
mov
test
in
xchg
out
enter
repz
shl
icebp
repz
cmc
aam
out
fcmovu
xchg
int
repnz
ret
fsubr
int3
cmp
enter
cmp
shl
shl
xchg
or
mov
incl
shl
fdivs
rcl
ljmp
lock
enter
or
in
lret
lret
lret
iret
int3
ret
out
leave
cmp
clc
fcmovne
cmp
aas
in
fisttps
loope
out
out
out
sti
fidivrl
stc
xlat
int
std
aas
fcomip
in
in
rcr
ret
fucomip
cld
enter
out
xor
ljmp
jmp
ds
orl
fdivp
in
in
repnz
std
shr
shl
fdiv
ljmp
jecxz
loop
mov
cld
ret
xchg
xchg
jmp
cmp
xor
cmc
std
mov
mov
jmp
movl
cmp
jne
or
andl
or
mov
subl
jmp
int3
ds
rcl
iret
or
fwait
ror
pop
jle
jge
jl
iret
jmp
clc
addb
mov
sti
loop
xchg
fsubrp
out
fdiv
out
leave
out
std
test
cmc
mov
in
orl
loope
ss
clc
lock
fcmovu
hlt
rcl
sbb
fucom
cmpb
mov
call
out
cmc
in
call
jmp
iret
icebp
adc
xchg
stc
sub
lret
cli
rolb
ror
cmp
ljmp
ret
repz
cmc
out
cld
std
cmp
loope
cld
aam
divl
out
sarb
fcmovnu
test
icebp
sar
mov
test
lret
mov
xor
ret
fnsave
xlat
into
rcl
sti
clc
xor
sbb
sub
std
fmull
cmc
out
shr
hlt
ljmp
fstp
call
addl
lret
rcl
repz
rcl
cmc
fucom
repnz
jecxz
fmull
std
fstl
fldpi
repz
cmp
enter
lock
out
cld
fprem1
neg
ljmp
incb
in
lret
aam
aaa
sar
hlt
in
out
xchg
std
xchg
out
fists
lock
cli
fst
iret
in
stc
sar
ds
call
clc
loopne
out
out
cld
fsubrp
into
repz
cmp
enter
idivb
icebp
into
sbb
ret
clc
mov
jecxz
mov
xor
loop
sti
int3
rcr
jmp
std
loop
loop
mov
and
aad
xor
jmp
cli
ret
shl
in
test
jmp
in
int
fxch
sub
dec
xlat
ror
cmp
cmp
in
enter
fldl
iret
cmc
cli
sti
cmp
fcmovb
jmp
jecxz
neg
mov
test
jmp
int3
icebp
xor
sarb
lret
idiv
cmp
fcom
fdivr
in
aas
in
push
ljmp
icebp
jecxz
xlat
in
int3
xor
cli
aas
repz
cmp
aam
fdivr
in
in
int
xchg
lea
in
cli
stc
cmp
aad
clc
into
test
jecxz
mov
lret
xchg
xchg
xchg
repnz
aaa
icebp
fcmovne
out
shr
lret
test
sbb
mov
cmc
xchg
leave
jecxz
ret
xchg
in
out
call
leave
ss
cmp
aam
mov
cmp
in
out
enter
loopne
in
int3
sar
aaa
ret
aad
lret
cli
addl
ds
mov
xor
out
ljmp
fdiv
clc
aad
shl
xchg
cld
in
ljmp
lret
ror
rcr
into
aaa
in
repz
cli
adc
xchg
test
loopne
fsub
fninit
nop
mov
test
jmp
stc
loopne
ljmp
idiv
fsubr
fldl
rorl
rcl
out
clc
cmp
lock
in
stc
testl
jmp
xlat
xor
cli
into
stc
in
clc
stc
loop
sti
fcmovnbe
aas
sbb
jecxz
xchg
sub
cmp
shl
out
out
fiadds
out
loop
out
jmp
loop
xor
out
xor
ljmp
xor
cli
xlat
jecxz
addl
iret
int3
idivl
cmp
fdiv
into
hlt
in
cmc
fiaddl
test
out
iret
out
lock
out
das
ss
cs
cmp
ffree
sarl
loope
fdiv
lock
loop
aad
std
cmp
fidivrs
icebp
enter
call
std
jmp
in
fdivs
jmp
aas
out
cli
aam
aam
repnz
mov
dec
std
out
std
loop
int
hlt
sub
aas
icebp
shlb
cmp
jmp
test
in
ret
jmp
xchg
test
loop
aam
rcr
fcomi
out
rcr
fcmovnu
fsub
fstp
fcmovnbe
mov
hlt
shl
int
lock
aam
jmp
shl
jecxz
cmp
sti
jmp
filds
xor
int3
fcom
out
in
cmp
div
mul
shl
ds
loop
int
mov
in
call
ror
fnstenv
in
addl
cld
in
mov
enter
xor
xlat
shlb
in
out
cmp
rol
rol
cld
leave
xor
leave
loope
xchg
hlt
xor
into
lret
lret
sub
sbbl
push
xor
mov
incl
add
orl
push
call
movl
incl
cmpl
jb
movl
jmp
cmp
movl
jmp
ror
int
lret
xchg
or
xor
or
add
cmp
cmp
incb
xchg
mov
test
xor
call
rolb
loope
mov
shr
xchg
loop
ljmp
out
lret
test
int
fnstsw
loope
xlat
fcomi
mov
in
in
into
repnz
ljmp
aam
rcl
xlat
test
dec
aas
out
jecxz
mov
leave
fmul
in
fucomi
cmp
fnstcw
lret
in
sbb
in
in
out
filds
out
stc
fdivrs
cmp
jmp
aas
rolb
xchg
out
xchg
mul
lock
into
in
cmp
fidivrs
int
into
cmc
ret
aad
ljmp
mov
in
repnz
cmc
cmp
mul
neg
neg
out
jecxz
repnz
rol
xchg
ljmp
xorb
in
lret
sti
int3
out
out
std
cmc
cli
cld
in
ret
jmp
in
test
fsubr
addb
lret
lret
lret
jmp
ds
cmp
ret
jecxz
in
out
addl
cmc
iret
lds
iret
out
shlb
sar
icebp
xor
jmp
out
rcr
fldl
in
xor
cmp
out
sti
in
clc
cmp
cli
shr
leave
lret
fcomi
enter
fsubr
loope
xlat
ss
ret
cmp
fucomip
shl
ret
sub
out
out
fadds
loop
in
jmp
out
ss
out
cmp
sbb
addl
or
xchg
out
cs
lret
cs
aad
in
aad
xlat
jmp
into
hlt
out
repz
mov
stc
mov
cli
int3
jmp
out
aaa
cli
cli
cmp
sar
rolb
mov
orb
enter
hlt
aaa
sarb
fcmovbe
in
loope
fiaddl
rclb
ror
fcmovnb
icebp
enter
sti
cmp
out
repnz
cld
ret
cli
cld
add
mov
xchg
lock
lret
lret
aad
clc
int3
into
cmp
ret
out
fimuls
fmulp
mov
sti
lret
mov
ljmp
cmpl
repz
rol
push
out
xchg
ljmp
xor
sar
icebp
xor
fmul
stc
std
cmc
rcr
mov
loopne
mov
shll
aad
std
cmp
stc
fabs
cmp
mov
ffreep
cld
iret
sti
jmp
out
shll
cli
fsubr
ljmp
rol
rorl
cld
out
mov
rclb
call
rcr
jmp
into
addl
xchg
xchg
jmp
lock
cmp
cmc
int3
ds
aam
loopne
leave
mov
loopne
test
lds
aam
out
rcr
lret
std
ds
stc
cld
cmc
xlat
hlt
mul
mov
nop
fneni(8087
test
xlat
ljmp
icebp
in
lock
and
mov
in
loope
cmp
rolb
fcomi
xor
cmc
dec
cmp
in
addb
addl
out
ret
repz
sti
imul
clc
out
fucomi
cmp
sbb
xchg
lock
enter
loop
das
ret
aaa
in
call
sar
idiv
and
cld
jmp
nop
out
lea
in
fbstp
fdivrl
fdivr
test
sar
cmp
cld
call
xchg
in
icebp
repz
cld
cmp
in
out
std
in
icebp
sti
sti
ret
std
out
mov
int
lea
out
fmul
xor
sar
cmc
cmp
clc
div
aam
mov
orl
in
xor
aaa
int3
sti
cmp
in
test
jmp
lret
loop
cmp
icebp
not
hlt
out
out
repnz
xchg
stc
in
orl
repnz
ror
cmc
jmp
ss
into
out
jmp
out
and
in
cld
sub
sub
sti
aaa
idivb
adc
aam
rcr
fucomi
fxch
mov
mov
loopne
lret
mov
out
jmp
xor
repz
leave
repnz
sarb
add
cmp
mov
clc
repnz
loope
hlt
aaa
test
ljmp
jecxz
addl
hlt
dec
rolb
int3
xor
call
faddp
cmp
xlat
shl
ret
std
cmp
mov
loop
and
clc
loop
int3
call
add
xor
or
adc
movl
orl
mov
sbbl
mov
xorl
jmp
rcl
lret
rcl
cmp
mov
dec
and
jge
jl
sarl
xlat
stc
add
fcmovnbe
sbb
cld
in
in
xchg
ror
repz
xlat
clc
enter
loope
icebp
shl
cmp
loopne
fsubp
int3
out
xchg
xchg
ret
call
leave
fsubrp
aam
fcomip
loopne
aad
fimull
push
ds
xor
ss
ljmp
sti
adc
loope
enter
imul
xchg
xchg
decl
int3
aam
int
call
xlat
cmp
bnd
ljmp
mov
lret
aad
clc
out
cmp
stc
lret
shr
aaa
fcmovu
fmulp
fld
aam
in
push
xchg
in
add
shl
clc
stc
in
repz
hlt
xchg
fsub
dec
xchg
aad
mov
jmp
hlt
out
enter
xlat
fucom
sbb
aas
hlt
sti
std
fstl
imulb
shl
lret
lock
cmp
sub
les
div
cmpl
icebp
xchg
xchg
stc
std
jmp
in
cli
icebp
out
sti
loope
fsub
loope
cld
filds
shl
out
jmp
jmp
fnstcw
testl
jmp
in
call
aaa
jmp
repnz
add
out
cli
sar
hlt
fmull
fcmove
loopne
rorl
ljmp
cmp
cld
loop
hlt
repz
lret
in
in
call
mov
repnz
ret
out
xor
shl
cmc
xor
lock
lock
std
xlat
lock
test
test
in
lock
in
xchg
xchg
cmc
sarb
cmp
fstp
aad
fsubp
loopne
test
addl
repz
xor
das
test
aaa
fidivrl
loop
in
fcomp
mov
loopne
fcomp
roll
repz
into
std
ljmp
hlt
int3
clc
rcl
sub
rorb
nop
and
lds
out
aaa
fcmovnbe
lret
div
loopne
clc
cld
loope
rolb
in
enter
xchg
into
in
fptan
ror
jmp
cmp
in
in
cmp
fcmovu
call
fucomip
ror
in
in
aaa
cli
lret
cld
cli
ret
out
xchg
xchg
jmp
fstp
int3
ror
lret
jmp
lret
rcr
fsincos
and
mov
in
lret
fistl
in
in
shr
hlt
aam
aad
adc
fnstcw
rcl
ret
fmuls
cmc
decb
int
into
fsub
int3
cli
shl
out
les
mov
xchg
aam
rcr
shl
in
out
xor
shl
ret
lock
call
adcl
in
lock
loope
sarl
loopne
in
in
fucomip
jmp
xchg
call
aad
fdivrs
enter
loopne
loope
lock
xchg
orb
int
ljmp
fucom
loop
loopne
fstp
in
fucomip
ret
cmc
jecxz
out
stc
aaa
aas
fcomi
loopne
hlt
std
out
out
icebp
roll
jecxz
loope
cmc
xchg
xor
loopne
xor
clc
cmc
into
xchg
hlt
shl
mov
imul
add
orb
call
int
cmc
ror
icebp
cmp
xlat
hlt
xchg
in
fimuls
mov
call
jecxz
call
jmp
ss
cmc
fcmovu
out
fdiv
aad
rcr
out
add
mov
xor
sub
rcl
fnstsw
hlt
cmc
loop
cli
loopne
test
fsubp
imul
icebp
mov
mov
rcr
cmp
cs
lret
cmp
rol
sarb
int
int3
mov
fdivr
shlb
ret
in
divl
cmp
loope
into
icebp
xlat
fst
clc
clc
lret
cld
lret
in
clc
xchg
and
ror
lds
ljmp
cmp
shl
cmc
fxch
test
and
mov
and
out
xchg
enter
into
into
iret
leave
sar
aad
jmp
cld
std
cld
ret
icebp
cli
in
and
sti
xchg
sarb
fstp
ljmp
loope
loop
test
lds
xlat
xchg
in
into
xchg
out
ljmp
stc
aam
repnz
fidivrl
stc
fnstsw
std
div
fldl
test
std
fcmovnbe
nop
xor
xor
cmp
xabort
roll
sbb
movb
fmull
aam
loop
jmp
in
aam
call
in
mul
rorl
orb
das
jmp
xor
cmp
push
fs
add
pop
add
iret
rcl
fsts
fs
vpaddb
jge
jl
fcmove
loope
cli
addl
in
aad
out
jecxz
lret
cmc
out
out
les
neg
int3
xor
rcl
fsub
jecxz
ret
mov
in
leave
mov
jmp
lock
std
roll
in
clc
iret
or
enter
shl
out
in
aad
xor
fnstcw
adc
xchg
rol
cmp
ljmp
jmp
fsub
ror
in
fucomi
cmp
cmp
aam
out
addb
sbb
cmc
cld
call
fxch
stc
fdivrl
loopne
loope
jecxz
repz
aad
mov
lret
and
cmc
xchg
cmc
enter
aam
jmp
std
cmp
out
flds
loop
mov
in
shl
cmc
xlat
in
stc
inc
in
into
roll
sti
loope
ffreep
out
out
cmc
decl
rcl
clc
iret
cmp
jmp
loop
hlt
out
enter
cli
out
fucomip
mov
xor
out
hlt
fldl
lock
cld
mov
mov
clc
cld
dec
call
das
jmp
shlb
cld
ss
cmc
cmpb
xor
ljmp
xor
lret
jmp
out
rcr
xlat
shr
icebp
hlt
call
testb
mov
xor
int
jmp
aad
repnz
cld
cmc
shl
clc
loop
ljmp
call
icebp
call
call
shl
iret
xchg
fcomp
loope
mov
add
fcmove
cmc
call
shl
in
int
lock
repz
icebp
in
cmc
mov
sti
rolb
loopne
mov
shl
shlb
sarl
std
jmp
icebp
xor
lock
neg
faddl
xor
cs
in
in
cmp
iret
fmulp
cmp
not
faddp
xchg
fiadds
vpmaxub
sar
enter
fcmovnu
out
cmp
fildl
leave
clc
out
cli
cli
fsubr
loopne
out
in
xlat
iret
std
in
cmp
rcl
rol
mov
in
jmp
cli
in
hlt
ret
cmp
out
fdiv
leave
shlb
repz
out
testl
xlat
jmp
leave
icebp
call
in
std
out
sarl
movb
in
shl
xor
loop
std
jmp
ret
rol
in
ffreep
std
xchg
out
mov
xlat
shll
shl
ds
mul
rol
loop
mov
ljmp
mov
int3
jmp
hlt
cmp
icebp
clc
cmp
cmp
repz
sbb
leave
test
lock
jmp
xor
cmp
xor
cmp
adc
sbb
jecxz
lea
out
das
aaa
out
clc
lock
incl
repnz
loopne
mov
icebp
lret
in
rcl
xor
shr
int3
cmc
fdiv
repnz
dec
rolb
rcr
out
in
xchg
adc
xor
in
shr
cmp
loope
aas
loope
mov
clc
lret
neg
mov
leave
ror
xor
cmp
fnclex
neg
int3
stc
jecxz
clc
loope
movb
icebp
xchg
hlt
repz
stc
int3
idiv
fst
call
filds
clc
clc
neg
xchg
xor
jecxz
xor
out
fldl2e
cmp
xor
int
repnz
repz
stc
mov
decl
repnz
sti
int3
in
test
rolb
jecxz
in
call
fmulp
xchg
imulb
lret
jmp
fdivr
fcomi
xlat
roll
fsub
int3
sti
loop
iret
ljmp
cs
fprem1
push
lret
out
rol
clc
fsqrt
xor
cli
loope
mov
mov
aam
clc
repnz
cmc
loop
fadds
cmc
jmp
xchg
cld
test
lret
into
fcomip
enter
cli
out
orb
out
jecxz
out
iret
jmp
out
xor
jmp
repz
fcmovbe
cmc
test
loop
fcmove
mov
ret
iret
loopne
orl
testb
repz
fldl
lret
ror
ljmp
neg
clc
ss
loop
test
call
fsub
lret
in
fiadds
jmp
lock
shl
das
cli
out
repnz
loopne
cmpb
sarb
call
xor
loop
xor
loop
shl
sti
mov
mov
jmp
ds
aad
aad
aad
movb
lds
jle
jge
jl
fnstsw
xlat
aam
xor
jmp
in
fmul
loope
nop
enter
lret
int
ljmp
ds
in
icebp
addb
test
repnz
fld
call
cld
in
cmp
cli
incb
out
int3
ljmp
xlat
shl
in
out
aam
iret
jmp
stc
fcomip
jecxz
lret
xchg
mov
xchg
iret
test
shl
call
out
aam
cmp
ror
decb
cld
out
call
loop
xor
cmp
fucomp
hlt
cmp
fcom
sti
iret
cmp
loope
jmp
enter
pop
sub
rcl
leave
enter
iret
fistpll
fdivp
test
lret
sti
call
loopne
in
jecxz
icebp
xor
aas
cmp
dec
ds
fdiv
cli
cmp
cli
fcmove
xchg
fildll
xlat
into
ret
into
cmp
sar
fst
loop
ss
xlat
aam
mov
and
enter
adcb
xor
ljmp
rcl
icebp
ret
add
loop
adcl
cmp
xor
out
ds
aad
clc
xbegin
cli
xchg
mov
loopne
xor
in
aad
cmp
fninit
rol
cli
out
ljmp
hlt
out
shl
out
std
clc
lret
cmp
in
ret
dec
filds
mov
rol
ror
imul
cmp
clc
divl
cmp
sti
in
xlat
std
fcmovb
cli
stc
fcmovne
fildl
les
ljmp
iret
cmp
sarl
mov
cld
mov
std
inc
fcmove
std
mov
jmp
repz
enter
lock
rcl
jmp
fisttpll
jmp
rcl
vpslld
fmul
lock
call
stc
vpaddd
cmp
out
lret
hlt
aad
xor
fmul
lret
cmp
test
mov
icebp
out
iret
test
mov
shl
call
cli
repz
loope
std
xlat
jmp
fmulp
orl
shl
lock
fdivrp
out
icebp
aad
cmpl
out
jecxz
lret
fsubp
loop
int
stc
fcmovbe
std
cmc
enter
rol
in
les
in
cmc
sub
fnstenv
out
call
test
fildl
mov
fst
lret
int3
rorb
cli
jmp
lock
repnz
add
ret
xchg
jecxz
loope
xchg
jecxz
icebp
sub
out
in
in
cli
repnz
shl
test
aam
fucom
jecxz
out
cmc
add
aaa
in
cli
fcmovne
sti
clc
shr
xlat
jecxz
add
cli
xchg
mov
cli
std
fcmovu
in
hlt
xchg
jecxz
lret
imul
cmc
fsin
leave
filds
cmc
cmc
xor
lret
iret
mov
mov
sub
xor
call
cmp
fsub
test
fildl
mov
sarl
xor
sbb
cmp
repnz
fucom
int
xchg
roll
xor
jmp
fmul
aaa
xor
divb
lock
out
loop
loop
int3
filds
test
push
call
out
lock
fimuls
jmp
mov
repz
enter
xor
lret
xor
sti
cmp
aam
repz
loopne
faddp
leave
call
mov
into
stc
test
cmp
in
out
loop
jecxz
in
mov
int
fcmovne
cmp
out
rcl
test
shl
jecxz
cld
fmull
iret
cld
test
rcl
in
aam
enter
cmp
shl
leave
xlat
call
lock
fsubr
cmp
fsubr
lock
xlat
addl
ret
mov
call
aaa
lret
lret
out
out
idiv
xor
sbb
rolb
out
popl
jmp
xor
cmp
loopne
mov
not
test
xchg
or
aad
ror
leave
out
fxch
iret
aam
hlt
cmp
in
in
cld
test
fnstsw
in
ljmp
int3
rcr
ss
repnz
in
xor
std
faddl
ljmp
out
rcl
out
ss
fcomi
into
shl
xchg
faddl
mov
in
fcmovu
rcl
loopne
out
cmp
jmp
rcl
aad
aad
rolb
push
inc
push
pop
ret
jl
add
lret
ror
cmp
sbb
fcmove
int
out
lea
lock
rcr
cmc
call
sti
stc
fldl2t
in
mov
in
mov
cld
jecxz
or
ret
aam
out
cmp
lock
cli
addl
jmp
fdivr
mov
xor
frndint
aad
int
sub
into
ret
out
rcr
loop
call
into
jmp
test
shr
aaa
xor
xor
icebp
in
sti
out
in
les
jmp
lret
lock
stc
aam
stc
aad
loopne
and
cmc
jmp
in
out
rcll
int3
shrl
out
lret
fcmovbe
shl
cli
clc
aam
in
aam
out
fsubrp
nop
in
aam
rol
int
in
neg
aam
repnz
add
fldl
xchg
ret
out
repz
out
cmp
sti
sti
cmp
test
icebp
out
sarb
out
jmp
xchg
jecxz
ljmp
int
cmp
aas
cmp
ds
idiv
lret
out
in
mov
repnz
jmp
aam
lret
loopne
mul
cmp
clc
in
in
test
lock
out
jmp
ret
lret
fcmovbe
movb
not
icebp
xchg
lret
lret
std
fmulp
int3
test
add
repz
ss
cmc
hlt
enter
lock
hlt
fdivr
in
fimull
fmulp
sub
sti
jecxz
aam
into
aaa
xor
repnz
rcr
in
test
int
leave
cld
jmp
jecxz
leave
test
fbstp
jmp
loop
loopne
ds
movb
mov
cld
in
hlt
jmp
xor
stc
ss
int
std
inc
fcmovbe
cmp
mov
testl
cmc
das
ror
fucom
call
cmp
clc
addb
xor
mov
hlt
iret
ljmp
jmp
jmp
cmp
rol
ret
ret
loopne
ljmp
icebp
out
xor
repz
hlt
lret
cmp
cli
dec
rolb
in
aam
orl
stc
in
in
out
sti
iret
clc
lret
aas
ret
sar
xchg
les
icebp
sti
fisttpll
leave
cmp
lret
sti
icebp
stc
ds
iret
int
jmp
mov
enter
fsubr
jmp
xor
mul
in
neg
cmp
aad
cmc
cmp
lock
ffree
jmp
jmp
xchg
in
stc
sti
clc
aas
lret
cmp
lock
vpsraw
loop
lret
xlat
adc
lret
lret
mov
sub
in
stc
repz
cmp
clc
rcr
fdiv
xchg
in
xchg
cmc
popl
ror
aad
cld
cmp
cmp
cmp
in
sar
in
jmp
sar
jmp
loop
test
rcl
adc
mov
jmp
addb
out
in
out
cmp
cmp
cmp
cmp
out
repz
ljmp
std
xchg
out
in
ss
leave
cmp
jmp
ss
out
ds
jecxz
testb
jecxz
fdivr
in
loop
sar
loope
shr
icebp
xor
repnz
cmp
fcomi
shl
sti
int
lret
fildl
ss
shr
aam
test
fsubp
repz
xlat
jecxz
fcmovb
fmulp
in
repnz
xor
ret
xor
aad
lret
std
std
cli
call
loope
loop
lret
lock
loopne
int3
aam
cmc
leave
xor
cmp
xor
fst
jmp
cmp
nop
adcb
ljmp
cmp
adc
test
out
cli
cmp
test
loope
jecxz
cmp
div
jmp
jmp
enter
loope
repz
in
out
cmp
loope
fsubp
repz
fdivr
loopne
jmp
roll
out
hlt
fucom
cmp
cli
in
lock
shl
stc
in
movl
xor
enter
aas
aas
cmc
call
loop
xchg
test
ret
sti
sti
les
cmp
fsubrp
int3
ror
vpmulhw
in
rclb
enter
fucomp
int3
xor
std
ret
sti
rol
sbb
mov
lret
out
enter
out
test
out
lret
fdiv
shl
rcl
lock
mov
mov
into
xchg
not
aam
ret
mov
lea
mov
mov
xor
add
mov
lea
jmp
into
aad
int3
fcmovnu
aad
add
sub
ret
xor
jl
icebp
cmp
cmp
adc
cmp
cld
icebp
xchg
ffreep
mov
aad
aaa
iret
in
dec
sarb
into
ret
cld
add
clc
xlat
roll
sti
lret
jmp
sub
out
cmp
dec
lret
rcr
ret
jecxz
add
in
lret
sti
mov
lock
aam
jmp
cmp
rolb
fcmovu
iret
fiaddl
ror
int3
int3
in
aam
in
in
cli
cld
repz
addl
mov
iret
mov
out
adcl
hlt
fidivs
adc
test
rcl
out
add
lret
out
shr
jmp
repz
call
cmp
fcomi
shl
adc
rorb
int
nop
call
loope
rcl
cmp
shl
shl
int
ds
repz
mov
call
lock
ret
sub
in
fprem1
aam
cmp
sti
cmp
hlt
repnz
mov
lret
in
aam
bnd
fabs
jecxz
sti
in
ljmp
out
fucomp
lret
aad
stc
icebp
into
sti
fstp
cli
fdivrp
in
in
mov
lret
fucom
out
icebp
in
hlt
aad
fbstp
testb
mov
mov
xor
xchg
xchg
loop
call
leave
cmp
ljmp
shl
fisttps
in
nop
test
pop
out
leave
xor
fidivs
lret
out
iret
cli
test
cmp
std
rorl
in
call
repnz
lret
call
aam
sbb
loop
out
adc
std
int
test
sub
xchg
loopne
ss
loop
fdivl
jecxz
rcl
mul
rolb
fmul
mov
out
int3
in
fstpt
fdivr
hlt
loopne
and
fldl
in
testl
jmp
loop
aad
fcmovu
fmulp
rol
in
in
fldl
les
loopne
shlb
cmp
loope
cmp
idiv
test
adc
mov
test
int
sub
xchg
fstl
xor
icebp
rcl
aaa
iret
rcr
ret
iret
repz
std
test
into
xchg
jmp
out
aaa
aad
in
xlat
xor
ror
clc
out
fnstcw
addl
idiv
in
int
jecxz
aam
in
cs
fstp
shl
lock
fildl
loop
fmulp
into
jmp
int
xor
out
out
in
sti
fucomip
into
enter
test
in
mov
fxch
int3
lret
in
xor
clc
jmp
into
out
shr
std
mov
jecxz
in
enter
icebp
hlt
ss
cmp
aad
iret
aad
jecxz
xor
sbb
xchg
cld
lret
test
jmp
shlb
in
lock
inc
enter
ret
ret
sti
lock
cmc
test
in
enter
or
out
xor
lock
xor
idiv
lret
fabs
fcomip
shl
repz
ds
jmp
ljmp
hlt
xor
repz
int
out
in
fsubr
fsub
loop
xor
addl
loop
divl
xlat
int
lock
aaa
in
cmp
mul
cmc
cli
rcr
aad
fld
loope
in
xchg
xchg
out
jmp
aaa
cmp
incl
loope
mov
xlat
in
fadd
out
sti
lret
loope
ret
out
out
iret
cmp
std
leave
enter
fdiv
in
lret
clc
aam
mov
sub
std
cmp
cli
fucomp
clc
fsubp
call
test
dec
xchg
out
out
leave
enter
div
out
cmp
std
lret
repnz
loope
aad
fcmovu
mov
leave
orb
int3
int
loop
imul
fcmovnbe
shr
xor
ret
testb
jmp
in
and
mov
aam
ss
aaa
sti
in
aas
ffreep
cmpb
cmp
roll
in
mov
call
into
loope
fscale
iret
cmc
sarl
sti
cld
xor
in
in
aad
cli
lret
lock
ret
out
aad
iret
sti
fcmovnu
cmp
in
clc
hlt
addb
jmp
filds
sti
xor
fdivr
cmp
cmp
idiv
incl
out
loop
rol
xor
test
aaa
cmp
aas
cmc
int
fdivr
shl
test
cli
out
fmull
ror
cmp
into
cmp
leave
iret
not
repnz
ds
cmpl
neg
hlt
cld
in
in
aam
das
cmc
push
mov
xor
jmp
ror
ror
rcr
frstor
pop
sub
movsb
jno
sarb
jl
add
icebp
int
leave
fcom
sarb
incb
mul
loope
out
in
sub
out
cmp
hlt
clc
icebp
jmp
fcmovbe
shl
sti
fdivrp
fiaddl
ljmp
in
repz
cli
out
sti
repz
in
aad
out
rcl
mov
decl
mul
repz
xor
cmp
repz
sti
in
adc
repnz
sub
in
loopne
out
call
cmc
neg
repnz
cmc
xor
sar
addl
mov
mov
in
fmul
jecxz
stc
enter
hlt
push
ljmp
sbb
div
orb
out
sar
div
xor
leave
xor
fucomi
fucom
repnz
ret
jecxz
in
fcmovne
jecxz
flds
loop
xchg
loop
mov
movb
fdivr
mov
std
lret
adcl
xlat
clc
xor
xor
ret
loopne
jmp
testb
aam
rcl
lret
xlat
lret
jmp
and
out
repz
flds
enter
ss
jmp
ret
repz
roll
loopne
mov
bnd
lret
div
ss
lock
sti
lret
in
into
rolb
hlt
lret
mov
shl
lret
fst
out
iret
cli
cmp
jecxz
aam
repnz
cmc
loopne
leave
shl
lret
repz
jecxz,pn
test
aad
sarl
jecxz
loop
idiv
test
out
xlat
ret
in
out
mov
cli
xchg
aam
fadd
sti
sarb
loopne
hlt
cli
stc
loop
in
mov
xlat
jmp
jecxz
les
out
cmp
int3
cld
cmp
test
fcmovu
call
fsub
loope
fiaddl
in
lds
aam
out
fsubr
loopne
hlt
sti
rcl
shl
xchg
jecxz
out
loopne
aam
lret
sti
enter
jmp
fcmovnu
xchg
sar
sti
jmp
test
in
rcl
sti
fcomp
hlt
rcr
ror
idiv
sti
lock
shl
mov
nop
shr
shll
fdecstp
into
aad
ror
int
stc
out
ljmp
mov
out
int3
call
lret
in
repz
xbegin
aad
incl
fcomi
repnz
mov
mov
leave
ljmp
addl
enter
in
fsubp
out
enter
xor
aaa
icebp
out
cmp
out
in
repz
roll
out
stc
leave
incb
repnz
mov
lret
fidivrs
icebp
int3
ror
in
cli
cmp
add
test
jecxz
jecxz
shrl
in
leave
out
hlt
aad
jmp
repz
jecxz
lds
lret
loopne
in
ljmp
xor
into
int
aas
into
cld
clc
repnz
test
repnz
hlt
call
stc
jmp
lret
loope
ret
sar
stc
fmul
mov
out
aam
clc
sti
leave
cmp
icebp
fcomip
icebp
ret
rol
out
mov
hlt
and
loope
rclb
aam
in
out
out
out
jmp
jecxz
cmpl
fimuls
fsubrp
xchg
shl
int
cmp
cli
iret
in
int3
xlat
icebp
sti
sbb
repnz
rol
call
cld
call
call
in
leave
repz
aam
int
aam
fcmovbe
testl
clc
loopne
loope
ror
in
aaa
enter
fucompp
fadd
lock
hlt
mov
test
fsubr
hlt
loope
jmp
in
ss
xlat
cld
xlat
div
aad
jmp
in
fsubr
loope
shr
icebp
loope
in
out
jmp
xor
lock
std
cmp
fadd
call
test
jmp
aam
iret
cs
cmp
cmp
shl
rcl
fdivrl
clc
mov
shl
test
in
fildl
rol
mov
out
xor
nop
shrl
shlb
iret
aaa
rcl
dec
xlat
not
test
filds
fprem1
xchg
clc
out
cmp
shl
in
out
xlat
fcmove
cmp
rcl
repnz
icebp
clc
leave
cmc
call
fistl
in
clc
repz
hlt
jmp
cmp
enter
std
out
in
ljmp
int3
xchg
dec
jmp
xor
rcl
aam
xor
call
hlt
loope
fdivp
rolb
jmp
aad
lock
push
jmp
lret
ds
lret
rol
loop
sbb
jge
jl
jmp
out
enter
not
int
fldl
ffree
stc
loopne
shr
test
jmp
aam
out
cmp
loopne
int
repz
shr
addl
jmp
jmp
int
in
in
fcomip
roll
lret
test
and
rol
das
ret
cli
ror
cmp
fnstsw
addb
fyl2xp1
in
lret
icebp
loopne
call
xor
aad
stc
jmp
int
sarb
adc
repnz
ret
lds
sbb
lock
iret
int
jmp
shr
stc
cmp
jmp
shr
xchg
lret
mov
xor
out
fdivr
out
clc
loopne
jmp
fmul
fprem
clc
in
stc
hlt
jmp
cli
fcmovnbe
repz
xor
aam
cmp
sti
shl
lret
repnz
out
incl
sub
lret
fnstenv
sub
enter
std
xor
div
rcl
jmp
xchg
sub
in
repnz
out
lock
hlt
hlt
icebp
fcomi
int3
loopne
fcmovnu
and
fiaddl
xchg
sub
xor
ljmp
ret
loope
sbb
in
cli
jmp
jmp
hlt
shl
into
sub
shr
test
cmp
test
vcmppd
out
mov
shl
jmp
cmp
icebp
cmp
out
div
sarl
sub
stc
fmul
adc
addl
ljmp
fdiv
test
les
test
ret
xchg
fucomip
lret
lds
call
rcr
cmp
repnz
sti
vpor
loope
mul
leave
jmp
aad
xor
cmp
test
test
fmul
jecxz
ror
xchg
int
loopne
sti
xor
ror
cli
sti
loop
mov
loopne
mov
out
leave
xchg
std
xchg
das
jecxz
shlb
int
out
in
rol
in
lock
out
std
mov
in
lret
xor
ss
dec
add
jmp
out
jecxz
xchg
out
aad
stc
iret
jmp
cmc
cmp
aaa
fdivr
xlat
add
clc
fdiv
loope
test
jmp
lock
lret
xlat
jmp
aaa
sarl
lret
lock
fcmovnu
cld
jmp
rol
repz
lret
stc
sti
lock
repnz
into
aas
stc
incb
jecxz
orl
sar
ss
cmp
lock
out
mov
sbb
out
cmp
call
fdivr
ljmp
into
sbb
fdivp
fnstsw
out
sbb
in
shl
cmp
int3
out
out
and
loope
aam
lret
stc
test
enter
call
into
cli
aaa
sarb
out
leave
ss
ret
clc
clc
stc
in
out
in
nop
xchg
fiaddl
lret
jmp
lret
fsubr
cmp
lock
sar
sti
ret
cld
out
out
in
loopne
repz
xor
jmp
loope
cmp
xor
jecxz
in
not
les
or
xchg
xchg
aam
ret
aam
fldcw
xor
std
xor
idiv
and
mov
fucompp
addb
lock
into
cli
cmp
test
cld
ds
in
iret
icebp
aam
cld
aam
leave
or
loopne
cmp
repz
cmp
aam
cmp
ror
in
out
enter
nop
xchg
in
lret
loopne
jmp
cmp
cmp
dec
loopne,pt
aam
mov
in
lret
int3
mov
in
cld
out
bnd
repz
cmp
int3
aas
sarl
xlat
cmc
shl
sbb
sti
ds
mov
aad
ret
into
jmp
xor
fdivs
in
leave
xchg
out
sbb
call
sub
out
loop
sub
xor
aas
int3
cmc
sar
in
cmp
in
in
mul
jecxz
ljmp
out
jmp
repnz
in
out
sti
bnd
fucom
mov
jmp
std
xlat
in
iret
fcmovne
in
hlt
loopne
out
ret
out
shl
leave
clc
in
hlt
cld
in
fnstsw
fptan
fidivrl
notb
mov
xor
fcomi
cmc
test
cld
in
hlt
fnstcw
xchg
fisttpl
out
ret
ss
in
div
in
int
lock
loope
jmp
int3
flds
rcl
in
xor
cmp
icebp
aaa
out
loopne
int3
sarb
iret
loopne
jmp
out
int
repnz
mov
push
jmp
rcl
mov
neg
repnz
aaa
jns
and
ret
jge
jl
rol
out
stc
cmc
fucomip
cmp
loop,pt
aad
loope
ror
fildl
ljmp
int
leave
cs
shll
sti
adc
cli
in
cmc
in
int3
test
cld
sub
int
lret
cmc
aad
xor
aaa
aam
icebp
stc
cmp
rolb
ljmp
test
hlt
jecxz
icebp
jmp
fcomip
sarl
out
aad
cmp
ror
mov
cmc
shl
in
in
not
fdiv
fdivrs
hlt
jecxz
cmp
loop
jmp
xchg
leave
repz
sub
enter
ror
aas
in
jecxz,pt
xlat
clc
jmp
jmp
out
shl
call
cmp
aas
mul
rolb
lret
leave
ljmp
lret
lret
int3
test
xlat
lret
clc
sarl
aam
stc
cli
not
test
int3
int
in
mov
les
xor
fucomp
idivl
ljmp
jmp
in
loopne
fcmovnbe
iret
int
in
out
in
cli
leave
lret
cli
cmp
aaa
cmp
jmp
jmp
fdivr
out
repnz
icebp
clc
cmp
fsubr
std
sti
sar
fdivr
cld
cli
mov
loop
jmp
ljmp
cmp
lock
in
sarl
faddl
cli
loop
jecxz
xor
hlt
fcmovne
cld
xlat
repnz
sti
shr
rcr
loop
mov
mul
jecxz
cld
loope
shll
leave
int
ret
cmc
cmp
repnz
adc
out
test
out
jecxz
in
cli
test
lret
mov
ljmp
iret
lret
sar
xor
stc
cmp
les
aam
int
rcr
cld
out
clc
cmc
cli
xor
lock
sar
int
les
test
fcmovne
mov
mov
xor
aaa
cmp
ljmp
fsubr
addb
nop
repnz
enter
cmc
cmp
lock
in
cli
out
fucomi
mov
rorl
shl
enter
enter
cmp
out
fst
in
inc
loop
out
into
or
xlat
lds
cld
loope
clc
in
cmp
cli
sti
sbb
fcmovu
in
mov
int3
ror
iret
xorb
cmp
enter
icebp
ret
aaa
aas
in
in
sti
mov
out
lock
stc
jmp
std
cld
ret
ret
sti
fcom
fneni(8087
loopne
jecxz
lret
fisttpll
repz
hlt
ror
loop
cld
test
jmp
mov
leave
mov
int3
in
in
int
aaa
cmp
cmc
cli
repnz
cmp
int3
les
shl
test
xchg
xor
sti
int3
iret
fmul
aad
cli
xor
lock
fmul
call
fsubr
shl
out
ljmp
cmp
lock
cmc
out
fldln2
int3
mov
sar
iret
out
sub
leave
lret
imul
cmp
bnd
cmc
xlat
shl
repnz
cli
mov
sbb
xchg
test
repz
rcr
out
call
ss
fistpll
fsubp
leave
mov
fucomp
shrl
xor
int3
aad
rcl
cmp
add
jmp
fiadds
xchg
lret
vshufps
hlt
cmp
loope
in
sti
test
fisttps
loope
loop
cmc
xor
icebp
clc
xor
std
out
xchg
push
out
clc
cli
xlat
shr
xchg
sar
loope
in
out
sti
in
cli
stc
shr
fadd
cmc
fstp
sti
clc
sti
fimull
repz
xor
clc
ljmp
fadds
aad
lret
aas
in
lock
int
shl
cmp
in
clc
fdiv
fnop
hlt
shl
hlt
in
mov
jmp
std
in
in
cs
fadd
xor
cmp
cmp
sar
test
loop
xchg
in
lds
in
not
fnsave
aaa
std
shl
shl
loop
ret
xlat
clc
aad
loopne
out
test
rolb
rcl
aaa
sti
out
fdivr
ljmp
xchg
orb
xchg
mov
ror
xlat
ret
int
cmp
out
repz
shl
out
lret
fmuls
iret
mov
repnz
cli
loope
repnz
and
cmp
repnz
lret
jmp
ljmp
clc
xlat
lret
int
cmp
aam
flds
out
std
into
xchg
aad
pushl
call
jmp
jmp
int
mov
cmp
xchg
sbb
jl
add
sar
leave
lret
xor
ds
sti
in
repnz
aas
xlat
add
in
mov
sti
lea
ljmp
ss
clc
cli
sarb
out
lock
out
lret
enter
orb
out
imul
cli
cmc
aaa
fcmovnu
xlat
sar
sbb
in
ljmp
jecxz
fmull
jmp
out
enter
in
test
sti
xchg
jmp
faddl
aas
loop
xor
fcmovbe
into
enter
loope
repz
flds
loop
ljmp
in
jmp
lock
fmul
fxch
call
cmp
ds
rolb
in
cmp
hlt
out
ljmp
loope
std
filds
cmc
test
lds
icebp
int3
loopne
out
in
out
sar
ss
xlat
int3
call
sti
out
loopne
fdivr
addb
jmp
xor
ret
into
shl
aam
not
cmp
ret
loop
shl
fcomi
aad
out
mov
out
rcr
xchg
xor
lret
jmp
stc
aam
icebp
cmc
ret
loope
test
in
iret
test
cld
les
xlat
lret
vpaddusb
call
cmp
aad
ljmp
xchg
mul
jmp
jmp
out
sub
icebp
sbb
and
jmp
mov
jmp
lret
fmulp
call
rcl
xlat
jecxz
filds
lds
jmp
cmp
cmp
neg
test
cmp
aad
xor
cld
shl
hlt
aad
out
loop
sar
xor
out
jmp
xchg
shl
shl
test
xchg
iret
aad
ret
aam
jmp
cmp
xor
fstpt
fst
hlt
xlat
fmul
in
test
jmp
fcom
out
cmp
idiv
stc
sti
shl
aad
ret
mov
loopne
ret
xchg
out
shll
aaa
xor
xor
cld
loope
sarl
in
xchg
mov
dec
out
sub
cmc
shr
imul
cmp
aas
fiadds
filds
loopne
mov
fmul
int
leave
fistpll
cmp
aas
cld
loope
mov
mov
mov
addl
ss
in
jmp
cmp
cmc
aam
inc
repz
shll
ds
sti
iret
fdiv
loope
iret
fdivr
cmp
fcmove
mov
fcmovnbe
fldl2t
iret
int
lds
leave
xor
call
out
ds
sub
idiv
enter
fiaddl
shl
ret
xor
cmp
call
not
in
in
fst
fcom
in
iret
cli
mov
iret
sub
iret
fdivrl
xor
cmp
out
faddp
hlt
std
sar
sbb
cmp
in
out
addb
in
into
xor
out
hlt
repnz
cli
ret
leave
fsub
out
fmulp
orb
shr
iret
call
xor
xchg
ret
ret
lret
and
xchg
in
out
icebp
ljmp
int
out
aaa
rolb
leave
loop
lret
lret
out
test
int
not
aas
in
aad
int
xlat
repnz
fdivr
mov
int
lret
out
cld
xchg
hlt
mov
out
out
lret
xor
fidivrs
div
aad
hlt
fildl
dec
int
int3
orl
out
rolb
sarb
ds
lret
fninit
ror
into
out
aad
jecxz
out
sar
fmul
cmp
ret
icebp
mov
lret
in
out
in
mov
call
xor
cmp
iret
iret
int3
fcmovnu
sti
mov
iret
shlb
sub
ljmp
out
repnz
aas
stc
jmp
ffree
cld
xchg
mov
int3
lret
out
ss
aam
fsincos
icebp
iret
cmp
lock
adc
faddp
filds
rcl
out
hlt
jmp
div
out
leave
iret
loopne
fiaddl
les
or
xchg
cmc
ljmp
fsubp
sti
vpavgw
les
int
or
in
shr
in
aaa
out
lock
xor
sarl
in
test
testl
rol
fxch
xor
out
fucomip
sarb
stc
repnz
sti
decb
fldl
icebp
enter
repz
cmp
add
jmp
testl
cmp
jne
mov
xor
add
mov
mov
mov
jmp
rol
leave
rcr
fstp
lds
mov
js
int3
jle
jge
jl
shl
leave
cmc
out
not
fidivrs
repnz
cmp
cmpl
rcl
std
int3
out
mov
repnz
shr
ljmp
xor
roll
std
out
lret
stc
lds
xchg
fucomip
loopne
in
jmp
aas
test
sbb
mov
shl
out
faddl
ljmp
shl
sti
hlt
cmp
loope
sar
sar
ret
xlat
in
jecxz
mov
repz
clc
in
out
std
xlat
icebp
in
fdivrs
test
rcl
std
loopne
ljmp
divl
das
loope
ret
jmp
sub
ret
iret
fst
mov
sar
loop
sar
out
int3
ljmp
int
fprem1
cmp
in
clc
fdivrp
aas
mov
into
sub
in
xor
cmp
ss
ret
cmc
hlt
mov
jmp
xor
leave
das
hlt
lock
call
adc
sti
int
std
xchg
xchg
xchg
mov
sub
xor
shlb
hlt
ljmp
iret
shl
repnz
orl
hlt
xor
lret
in
cmp
shl
aas
xchg
test
xor
in
fsub
fucomip
lret
in
fbstp
sar
xor
cmp
ljmp
cmp
loope
or
xchg
sub
or
aam
sub
ret
int3
stc
clc
into
idiv
xor
clc
fcomip
cmp
ret
fcmovnb
aam
fldl2e
lock
xchg
out
fcomip
int
fscale
out
leave
call
rcr
in
mov
stc
mov
or
in
in
ljmp
jecxz
aaa
stc
call
cmp
icebp
cmp
cmp
lret
hlt
mov
xchg
test
jmp
repnz
fdivrp
out
loopne
test
fsubrp
idiv
sti
out
in
xchg
sub
jmp
idivl
icebp
xor
addb
cmp
cmp
fucomp
into
call
icebp
aaa
icebp
div
xor
sar
int3
rcl
out
cld
shl
or
stc
xchg
rcr
sbb
bnd
ljmp
iret
cld
std
rol
ffreep
mov
call
cli
jmp
ljmp
xor
xor
cmp
jmp
lret
int
ljmp
shr
repnz
jmp
clc
lock
rcl
lock
test
fisttpl
xchg
adc
in
call
ss
shl
icebp
xor
cmp
sbb
repz
test
pop
nop
sti
sar
mov
mov
std
aas
cmc
loopne
aam
std
stc
mul
fsqrt
loopne
ds
out
nop
xchg
out
nop
ffreep
int3
clc
xlat
out
sti
stc
cmc
fadd
cmp
sti
in
sti
fcomp
out
xlat
mov
mov
ret
test
cmp
lret
repnz
lock
test
sti
fcmovnbe
neg
std
lret
rolb
clc
idiv
icebp
cmc
rcl
xor
in
inc
ret
fcmovne
xchg
out
call
xor
aaa
jmp
sarb
fsin
aad
sbb
jecxz
xlat
ljmp
cs
in
cmp
iret
std
into
sti
aas
shl
sarl
loope
aad
mov
test
sub
in
test
repnz
hlt
cmp
out
lret
leave
in
in
mov
xchg
rol
ss
xor
out
jmp
xlat
fcmove
lret
cmp
aas
xor
lret
lea
iret
rol
out
in
fidivl
shl
int3
loope
adc
fildl
clc
mov
jmp
xlat
into
sub
fsubr
ds
sti
out
sbb
sar
out
std
xchg
ret
out
rcl
lock
sti
out
aad
ljmp
adc
lock
iret
cmp
into
xlat
xor
jecxz
into
aas
in
les
sar
in
and
incl
xor
cmp
ds
shl
xchg
loopne
aam
in
iret
ljmp
icebp
shr
loop
xor
jmp
aas
stc
cli
repz
sti
aad
mul
call
call
adc
lock
fucomi
int3
fmul
cmp
clc
sbb
repz
out
ffree
fucomip
jmp
jmp
clc
repz
cmp
fst
rorb
iret
test
xchg
repnz
stc
xor
fnsave
xlat
out
cmp
ss
loopne
loopne
hlt
cmc
loopne
into
xchg
loop
hlt
iret
jmp
ljmp
test
clc
sti
decb
lock
shr
mov
mov
mov
push
pop
sub
add
jmp
ds
rcr
fst
xlat
xchg
icebp
mov
fdivl
lret
cmp
add
hlt
xor
loopne
cmp
enter
fcmovnu
shr
mul
in
fsubp
test
cli
cmc
icebp
sub
sub
int3
icebp
iret
sarb
clc
out
cld
in
fcmovbe
in
out
nop
popl
jmp
repz
rcr
ret
ret
rcr
out
loope
mov
lea
repz
ret
xor
aad
hlt
into
lret
not
cld
std
cld
rcl
mov
ljmp
and
in
clc
lock
stc
cmp
aas
xlat
rcl
ret
roll
cli
std
fsubr
lret
cmc
out
ret
cmp
loop
cmp
fcomip
aad
fdivr
cld
rcl
lock
faddl
mov
out
xor
aam
ror
out
jmp
or
clc
cmp
out
repnz
mov
cli
rclb
xlat
loop
xor
fcom
call
cmp
cld
jmp
mov
in
in
cmc
aas
repz
int3
enter
iret
fstpt
icebp
ds
cmp
into
fadds
std
mov
fdivr
repnz
shlb
jmp
ljmp
icebp
aas
repz
lret
fcmovu
mul
iret
shr
xor
ljmp
sbb
incl
test
cli
std
mov
repnz
out
shlb
repnz
not
ljmp
fxch
hlt
leave
out
sti
jecxz
addb
jmp
shr
fidivrl
aad
repz
in
ds
mov
call
jmp
loop
aaa
ss
xor
cmc
call
cmp
fdecstp
shl
fsub
xchg
loopne
jecxz
mov
sub
das
cmp
hlt
rcl
cmc
cmp
fsincos
in
loop
idiv
cli
sti
repnz
int
in
addl
cmp
stc
into
lret
shl
shl
out
mov
jecxz
mov
orb
out
repz
out
lock
cmp
icebp
rcl
ffree
aam
sar
int
int
mov
div
icebp
out
sar
cmp
lret
rcr
addb
fsub
lea
in
jecxz
enter
in
shl
enter
ror
jecxz
xor
int3
fiaddl
fildll
sub
shl
cmc
icebp
std
leave
repz
in
aad
xchg
fsub
xchg
lret
mov
out
lock
shl
int
cmp
sti
div
stc
ss
aam
mov
jecxz
xchg
iret
int
xchg
repnz
lock
iret
repz
ror
cli
sar
test
addl
mov
cmc
int
aam
into
aad
repnz
stc
fisttpl
ffreep
test
xchg
in
iret
icebp
aam
call
cld
loope
stc
les
xchg
cmp
enter
not
cli
jmp
std
cmp
mov
imul
movb
ljmp
repnz
hlt
fidivrs
bnd
addb
shll
loope
repz
jmp
roll
loope
fucomip
mov
mov
ror
lret
into
shl
lock
out
call
lock
iret
aas
ret
cld
ffree
out
fldl
icebp
loop
jmp
lret
xor
cld
aad
sar
rol
lock
aad
call
or
cs
in
sub
clc
int3
cli
hlt
int
faddp
ret
clc
fcmovne
jmp
faddl
icebp
hlt
call
in
neg
fucomi
lock
xor
neg
in
xchg
loopne
adcb
sub
in
into
rcr
cmp
fstp
out
xchg
enter
clc
jmp
sti
ljmp
aad
cmc
hlt
idivb
cmp
cli
shl
aad
jecxz
or
fcmovne
orb
ror
cmp
fcmovne
lret
inc
fstp
sarl
in
not
fxch
into
out
fiaddl
xor
sti
hlt
clc
lock
clc
cmp
test
std
fcomip
vpsubsb
fmull
sub
repz
iret
xlat
enter
addb
ljmp
jmp
xchg
lret
iret
shl
in
cmp
fstpt
loop
xchg
jecxz
fdiv
test
iret
shll
aam
call
cmp
hlt
aad
cmp
sti
leave
cmc
fildl
in
out
shl
hlt
xor
iret
int
fcmovne
xor
sarl
fsub
enter
nop
jmp
cld
lock
out
aam
lret
aad
xor
fadds
test
rorb
or
lea
cmp
jne
jmp
int
ds
int
lock
sarb
jle
jge
jl
iret
xor
int3
cmp
lret
iret
les
fdivp
jmp
idiv
aas
out
add
lret
mov
in
fstl
fldlg2
enter
cli
lock
clc
rcr
std
rol
fcmovnb
ror
out
pop
test
sub
sub
int3
ret
cmp
xor
cmc
fdivrs
rcl
aad
in
fisttps
cmc
loope
ss
fdiv
cmc
int3
lock
icebp
loop
xchg
jmp
fmulp
out
in
xchg
out
xchg
ds
cmc
repnz
int
sti
lret
testl
rolb
sbb
xchg
loop
lret
jmp
ror
cld
mul
test
loope
lret
call
clc
xchg
test
adcl
xor
fucomp
in
sub
sar
lds
ret
les
mov
call
icebp
loopne
sub
cmp
jecxz
out
cld
leave
fcmovu
out
cmp
call
in
in
cmc
int3
shl
int3
aam
fsubr
jmp
cmp
sti
cld
inc
jecxz
test
fildl
repz
rol
xor
in
sar
lock
div
leave
cmc
sub
enter
out
loop
fsubr
rcl
cmp
cli
cld
loop
mov
ret
ds
xchg
mov
xchg
filds
clc
aaa
out
dec
dec
repnz
loope
fidivrs
rolb
jmp
icebp
rcll
in
icebp
out
sti
cmp
cmp
shll
test
sti
mov
fdivr
mov
xchg
in
aad
frstpm(287
repz
std
enter
cmp
lock
sar
stc
xlat
loopne
loop
xchg
in
cmc
out
fsubr
cmp
in
xlat
ret
aam
icebp
into
fcmovnbe
mov
testb
in
cmc
jecxz
xor
ds
roll
xchg
or
loopne
enter
sub
xor
cmp
ds
xlat
fcmovb
loop
clc
out
shl
in
out
rcl
jmp
cmp
jmp
ret
aam
jmp
jmp
sub
xchg
repnz
cmc
jecxz
xlat
icebp
iret
fucomp
aaa
ror
sti
test
inc
rol
lret
mov
mov
xor
stc
xor
xor
icebp
cmp
rol
mul
in
cli
xlat
in
in
mov
sar
addl
iret
in
shl
aad
stc
jecxz
rcl
xchg
cmp
out
fiaddl
mov
sub
out
fcomip
enter
aad
clc
cli
stc
fldl
cld
movb
lret
lock
in
out
int3
fidivrl
loope
out
ret
ds
test
mov
enter
fcmovne
mov
stc
aam
rol
idivb
iret
xchg
xchg
repnz
mov
in
loope
mov
shl
lock
int3
cmp
and
repz
in
fiadds
in
leave
in
in
xor
xlat
xlat
cli
in
ret
lock
hlt
adc
ret
movb
jecxz
in
cmp
cmp
shl
cli
imul
cld
test
in
sub
call
loop
leave
in
stc
cmp
loope
jecxz
out
icebp
loop
mov
in
lret
lret
lea
loop
neg
loope
cli
xor
fld
add
in
xchg
fiaddl
loopne
shlb
call
stc
hlt
sar
aaa
xor
test
stc
ljmp
cmc
ret
stc
ret
into
aad
stc
ror
in
hlt
icebp
shr
test
sbb
jmp
std
int
ljmp
sti
out
out
xlat
xlat
out
repnz
stc
jmp
jmp
roll
icebp
out
std
std
into
xlat
cmp
repz
icebp
mov
mov
shr
ljmp
out
rcl
stc
out
cmp
iret
cmp
cld
rcl
cmp
ljmp
in
orl
out
leave
std
fcomi
ror
rcr
cli
sar
xchg
int
icebp
stc
loope
shl
xchg
aad
ljmp
cmp
int
ljmp
ret
leave
jmp
vpavgb
shl
icebp
xor
lret
cld
std
xlat
int3
fst
rolb
out
std
clc
test
iret
jecxz
lret
int3
into
cmp
cmp
in
ror
lock
out
cli
ret
fildl
call
cmp
fdivr
fidivl
shr
rol
xchg
mov
sub
repz
cmc
int
lds
fnstsw
ss
div
in
fincstp
fdivr
sub
fmul
mov
xor
jmp
int
enter
int
lds
fidivrs
fnstsw
jge
jl
repnz
std
das
lret
ror
shl
mov
vmaskmovdqu
loope
mov
leave
in
sar
das
aad
ret
sti
sar
xor
fxch
cld
not
out
call
cmc
cld
das
iret
stc
aaa
lret
lret
call
loop
icebp
in
sar
enter
std
std
loope
in
addb
lret
enter
xor
and
cmp
shl
jmp
fildl
xchg
call
sub
fcom
div
test
filds
in
enter
mov
std
loope
in
leave
lds
repz
ds
lock
sub
mov
dec
fiaddl
in
shl
in
ljmp
cld
loop
ds
fsubr
fld
jmp
clc
loopne
loopne
aaa
das
xor
icebp
iret
cmp
fmul
xor
cli
cmp
sbb
shl
test
out
xchg
aaa
repnz
out
aam
sti
cmp
in
in
lds
fdivr
lret
xchg
into
clc
cli
shl
stc
cmp
cmp
icebp
fcmovbe
call
ljmp
shr
jmp
cmp
in
lret
cmp
cli
add
jecxz
and
xchg
jmp
mov
call
icebp
cli
xor
cmp
xlat
aam
repnz
aas
call
jecxz
loopne
lock
nop
iret
out
das
jecxz
cmp
shl
xlat
stc
test
rcr
aas
fsub
imul
fisttpll
ret
repnz
stc
imul
cmc
jecxz
cld
cmp
cmp
std
mov
shl
fists
sub
cli
cmp
xor
adc
loopne
jmp
cmp
fcmovu
xchg
cmc
shr
xor
cld
cld
into
out
call
aad
sti
aad
in
xabort
leave
mov
in
call
lret
aam
rcl
imul
int3
jecxz
cli
testb
mov
loope
test
xchg
xchg
vpsubb
in
leave
sti
out
enter
xlat
out
incb
in
jmp
int
subl
repz
stc
out
cmp
hlt
clc
addb
mov
loop
test
cmp
out
call
cmpl
repnz
jmp
orb
lock
shlb
cmp
lock
cmp
enter
xor
cld
test
xchg
test
out
fcoml
aaa
rol
out
cmp
call
cmp
faddp
les
in
loope
orl
icebp
out
std
idivb
hlt
out
int
out
fidivrs
cmc
test
test
int3
cld
ret
lret
loope
jmp
xor
aas
cli
fcmovne
aas
fcmovnbe
fiaddl
std
and
sub
shl
mov
shl
xor
aam
clc
clc
cmc
xor
idiv
sbb
xchg
loop
mov
xlat
mov
call
lock
repnz
xlat
iret
sub
lret
fistpll
stc
repnz
loopne
cmp
orb
cmp
xor
fcomp
int
fyl2x
hlt
in
ret
cmc
rol
loopne
mov
xchg
xchg
jmp
in
ret
shr
cmp
std
sti
hlt
cli
fucompp
mov
dec
dec
int
mov
shll
enter
xor
sti
in
divl
repz
fsubp
mov
jecxz
jmp
lret
aaa
int
jmp
loope
fldl
push
in
fxch
or
aad
xor
cmp
cmp
lret
cld
fidivrl
clc
shl
flds
in
xchg
fucomp
lds
in
sub
std
aad
sar
fidivl
in
test
loopne
ror
in
mov
or
aam
repz
int3
enter
cli
cmp
fbstp
jmp
repz
aam
sti
out
loop
in
mov
rcr
fyl2xp1
icebp
sarl
clc
aas
in
int3
fst
cld
aam
shr
rcr
std
lret
xchg
in
loop
jecxz
loop
enter
test
cmc
std
cmp
call
in
icebp
cmc
xlat
rcr
out
fimuls
test
lret
int
into
out
jmp
and
cmp
mov
call
cmc
in
loop
ret
cli
xor
jecxz
loopne
repnz
cmp
enter
leave
mov
in
in
std
mov
aam
call
lock
out
jmp
hlt
mov
icebp
fdivp
cld
sub
int
out
ffree
xlat
rcl
clc
int3
ds
fadd
test
jmp
sti
mov
aaa
xor
out
jmp
out
in
ffreep
mov
aad
jecxz
int
pop
jmp
ds
ror
aad
fistl
loop
mov
loopne
jl
add
mov
xchg
fdivrp
aam
sar
in
stc
cmp
aas
idivb
call
int
xchg
mov
enter
lock
jecxz
fcmovnbe
cld
stc
in
fst
xlat
fxtract
fucom
mov
adcl
xor
hlt
jecxz
cmp
aas
iret
int3
lock
cmp
cmc
fiaddl
sti
testl
enter
enter
mul
aas
clc
xor
aam
in
std
clc
jmp
xchg
shr
lds
in
loop
aad
jmp
rcl
loop
repnz
loope
leave
fabs
fadd
stc
mov
out
adc
in
lret
int3
les
std
xor
loope
shr
incb
leave
jecxz
enter
fucomi
mov
in
in
out
ret
shlb
cmc
out
addl
mov
mov
ffree
nop
fisttps
imulb
iret
cmp
jmp
fst
sti
cld
shl
cli
flds
orl
cli
aad
fdecstp
xor
ss
shl
push
aas
in
call
int
jecxz
out
ret
hlt
ss
repnz
out
sbb
jecxz
rol
fsub
jecxz
out
sub
mov
lock
shl
shr
incl
fdiv
shl
loope
mov
in
call
xor
shlb
xlat
fistpll
out
aad
jecxz
inc
leave
jecxz
addl
shr
clc
cli
ds
int3
shl
fcmovnu
loope
cld
out
repnz
lds
rol
xor
xor
int
incl
into
sbb
test
lret
mov
jmp
call
xor
aad
cmp
repz
fidivrl
loope
out
hlt
cmc
jmp
fcomp
enter
call
enter
call
out
std
rcr
rol
cld
call
notb
xchg
lret
in
stc
cld
lret
rol
cmp
and
out
ret
mov
leave
in
loop
xlat
out
cmp
shl
cmp
loope
ret
vpaddusw
out
loope
stc
out
and
sub
div
sub
ljmp
sbb
rol
loopne
cmc
xchg
out
orb
shl
divb
cmp
test
or
popl
ds
shr
out
in
cs
int
cmp
test
incl
leave
call
test
addl
in
out
fdivs
shl
sar
out
mov
loop
ljmp
test
cmc
in
loopne
into
aaa
fnsave
cmp
into
icebp
sti
in
fdiv
in
ret
lds
xchg
out
ljmp
lret
enter
fdivp
sti
mov
ret
fst
cmc
xchg
or
das
aaa
xor
in
fidivrl
push
sarb
loop
repnz
mov
iret
loope
int
call
xor
cli
cmc
cmp
lock
in
cld
cli
addl
loopne
cld
int3
into
out
into
fstp
cmp
stc
iret
enter
mul
repz
in
call
out
xchg
xchg
in
out
enter
ljmp
iret
fcmovnu
lds
rolb
fnsetpm(287
xchg
repnz
int3
in
aam
repz
lret
cli
addl
out
ds
stc
jmp
mov
xlat
fldcw
iret
cmp
rcr
add
roll
icebp
stc
call
aam
ret
add
cmc
xchg
loopne
std
jmp
xchg
fsubp
hlt
cs
xor
dec
xor
fdivp
loope
loopne
rol
stc
stc
jmp
loop
rcl
lret
xchg
sub
xor
leave
aaa
jmp
std
out
sti
fmul
cmp
ret
orl
rcr
xor
ror
int
repz
xchg
inc
jmp
int3
fsubr
lret
fiaddl
loopne
cmc
shll
cld
cmp
cmp
cmp
icebp
testl
lret
mov
ljmp
hlt
cmp
fdivr
iret
frndint
cmp
fcmovnu
cmp
out
add
loopne
loope
icebp
loope
idiv
std
int3
cmp
loopne
in
clc
out
rcr
fadd
in
out
lret
xchg
int3
test
shl
int3
repz
enter
cmp
aam
in
xor
cli
sub
shr
fcom
idivl
cmp
loop
cmp
repz
faddl
xor
xor
stc
aaa
out
imul
fnstsw
fcmovnu
sti
jmp
std
fsub
faddl
ret
pop
leave
ret
push
mov
jmp
int3
ret
ds
fst
decl
cwtl
push
fldl
cmp
jle
pop
add
fistl
not
cmp
repz
fsubr
cmp
jecxz
test
cmc
leave
fsqrt
ffreep
fisttpll
in
in
std
out
ror
faddp
xor
jmp
xchg
sub
int3
call
rol
fidivrl
out
xor
orl
mov
int
rcl
loop
shr
cmp
and
cmc
rorl
lret
xchg
xchg
loope
cmc
rol
sti
cmp
iret
hlt
out
fcmovnbe
fcmovnu
ret
repnz
ljmp
into
in
cld
xor
lret
fucomip
loopne
hlt
cli
hlt
xor
aad
loop
fsubr
mov
lock
into
ss
pushl
repnz
loopne
fst
add
out
ljmp
xor
lock
das
cmp
into
repnz
xor
cmp
test
test
int3
test
shlb
cmp
sub
dec
and
sti
test
out
enter
iret
out
cmp
ret
xchg
mov
mov
xchg
mov
fidivs
lret
sub
fdivrs
iret
cmp
std
cld
fsub
shl
loopne
cld
rcr
iret
out
fcoml
ror
xor
std
adc
in
loope
rcl
leave
ffreep
fsubrp
or
loope
xlat
ret
xor
out
loopne
int3
int
loop
sti
out
mov
fdivr
icebp
test
test
int
cmp
xlat
stc
cmp
ret
or
fcmovnu
clc
in
ljmp
stc
xor
out
repnz
enter
icebp
out
rol
enter
in
xchg
into
int3
xchg
out
cmp
iret
fdivp
shr
add
loopne
in
dec
enter
repnz
jmp
leave
cmp
xor
iret
int
xor
fiaddl
or
sti
out
loope
imul
sub
out
leave
div
cld
lret
in
aas
repz
sti
fcmovnb
loope
sti
jmp
mov
dec
cld
sarl
ret
icebp
in
aad
xor
lret
stc
roll
xchg
sti
out
cli
lret
loop
repz
lock
leave
xor
stc
cmp
rolb
cli
loope
fcmovnu
mov
cmp
jecxz
shlb
enter
ljmp
icebp
shl
mov
enter
out
in
lret
cmc
sub
shl
lds
in
out
loopne
fcomi
cld
out
fcmovbe
idiv
fsubr
cmc
addb
repz
sar
repnz
shr
fdiv
in
cmp
idivl
fsub
rol
ffree
call
repz
jmp
in
fxch
xor
iret
out
enter
add
jmp
fcmove
jecxz
out
call
out
cmc
jmp
ss
fdivr
out
iret
fisttps
fnstenv
cmp
fdivrs
loopne
rcr
test
aas
rol
faddl
in
into
mov
sti
into
repz
fstpt
cld
cmpb
hlt
ds
xchg
in
in
int3
mov
lret
into
sarl
loope
lret
jecxz
imul
stc
into
stc
cli
sti
fcmovne
loope
lock
faddp
add
call
in
fdivp
loope
div
xor
repnz
leave
enter
out
in
cmp
mul
stc
in
out
out
jmp
test
sub
ret
ret
in
clc
aas
or
mov
loopne
loopne
sub
xchg
ror
rol
in
xor
leave
sub
icebp
out
loope
enter
lea
out
ret
lock
shll
aas
stc
out
clc
sar
hlt
leave
leave
ret
int
out
xchg
jmp
icebp
ljmp
fptan
cmp
shl
test
lock
out
xchg
int3
in
out
out
ss
aas
sar
fsubp
ret
xchg
jecxz
in
idiv
mov
std
fucomp
and
cli
jmp
incb
sbb
loopne
idivl
ror
in
repnz
iret
enter
out
aam
in
rol
iret
rol
fidivrl
cmp
leave
stc
loope
mov
sub
int
enter
int
fcomi
repz
aas
clc
adc
repnz
fsub
loope
mov
mov
cld
sti
std
mov
in
in
xor
aaa
xor
xor
out
aas
hlt
sarl
out
hlt
in
icebp
loop
rcl
in
mov
stc
xlat
fldln2
fcmovnu
enter
rolb
in
loope
sti
jmp
in
inc
xor
xor
and
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
mov
mov
mov
jmp
rcl
leave
leave
fst
fimull
mov
and
adc
jle
pop
add
jmp
out
fildll
lret
out
leave
out
into
and
ret
test
xchg
out
fdivr
fmul
mov
loopne
aam
xor
cmp
clc
iret
jmp
xor
in
shl
std
cmc
sub
out
push
not
cmp
repnz
enter
jmp
xlat
cmp
cmp
out
lock
in
addb
out
cmc
enter
aad
cmp
xor
fcmove
not
xlat
xchg
loope
in
cld
clc
fsubr
std
shr
icebp
lock
hlt
rcl
cmp
test
std
shl
cmp
faddl
rorl
xor
repz
hlt
cmc
cmp
incl
test
fld
in
fdivr
call
in
leave
cmp
cli
lds
shr
dec
addb
in
lret
fmulp
mov
jmp
dec
and
bnd
fldl2t
cmc
in
repz
cli
sarb
test
enter
lret
in
lock
xor
shl
fxch
aas
out
ror
cld
rol
call
into
cmp
int3
out
out
in
lret
jecxz
ss
hlt
sti
ror
fildl
stc
loope
jecxz
jmp
imul
shll
repnz
hlt
shl
std
rcl
fnstsw
xchg
cld
leave
cld
mov
in
cld
lea
ss
cld
lret
aad
xlat
fcmovu
loopne
loopne
in
clc
aam
mov
xchg
loope
aad
cmc
shr
cmp
xor
cmp
cmpb
fdivrp
mov
mov
or
lret
nop
mov
out
rol
jmp
cmp
hlt
int
cmp
call
icebp
hlt
call
loope
addb
ret
aam
lret
repnz
mov
loopne
mov
sub
lret
aam
ds
loop
addb
cli
ror
or
f2xm1
icebp
xor
ljmp
aad
enter
mov
mov
filds
fldlg2
out
ljmp
repnz
cmp
stc
in
in
clc
jecxz
mov
xchg
sub
iret
rcr
cld
int
rcr
test
lds
rolb
loop
ljmp
out
cmc
ror
cmp
sub
in
in
mov
int3
xor
fcmovb
fcmove
xlat
rcr
clc
shl
vpsrad
std
aam
aam
xor
push
lret
out
sar
flds
mov
std
loopne
dec
aas
lock
xor
in
repnz
cmp
iret
shl
loope
ret
enter
loopne
in
rcl
xor
aad
aad
in
out
cmp
xor
icebp
int
xlat
rcl
hlt
jmp
fcmovnb
mov
mov
ljmp
ffree
in
hlt
cld
and
xchg
aas
ds
fadds
loopne
cli
aad
lock
cmc
aam
icebp
clc
cmp
ljmp
div
ret
mov
call
loope
loop
iret
sti
in
stc
stc
enter
in
sbb
fadds
fsubr
lock
fdiv
lock
jmp
iret
hlt
iret
fmul
shl
aam
ret
out
fisttpll
loop
xchg
test
loopne
not
loop
cmc
aad
jmp
ljmp
enter
fcomip
decb
icebp
xor
lock
clc
sar
fxch
sar
in
fdiv
test
cmp
iret
mov
fcomip
jmp
int3
fdivr
ljmp
and
loope
jecxz
out
out
in
in
ret
rcl
xlat
idivl
fmul
in
in
clc
stc
rcr
ret
mov
cld
addb
mov
int3
xlat
stc
fadd
xor
aas
cmp
fpatan
in
in
jmp
mov
into
sbb
out
xor
int
cmp
shl
cmp
cmp
roll
add
adcb
sti
lret
iret
ss
repz
idiv
test
loopne
call
icebp
repnz
rcr
xlat
cmp
std
shl
mov
movl
fyl2xp1
cmp
aad
repz
out
clc
out
out
lret
jmp
rcr
out
mov
xlat
jecxz
jmp
ffree
shl
aad
lock
out
cmc
ret
inc
les
loopne
clc
xor
ror
out
cs
lock
decb
or
test
inc
add
add
jmp
lret
ffree
fst
in
notl
pop
cmpsb
jb
jae
jle
pop
add
jmp
sub
in
cs
loope
cmp
int3
xchg
in
aam
test
loopne
nop
loope
xchg
test
les
iret
sti
repnz
aas
xor
hlt
incb
stc
idiv
clc
leave
fcomip
addb
shl
int3
incl
std
in
cmc
cmp
incb
xor
aaa
sub
cmp
cld
adc
jmp
idiv
rol
lret
lret
in
cli
mov
iret
aam
repnz
cmp
jmp
ss
loop
shl
rcl
jecxz
test
iret
popl
cmc
out
out
out
fmul
not
cmp
push
ljmp
leave
out
xchg
mov
repz
test
out
loop
xor
shll
repz
in
xlat
cmp
faddl
loope
mov
mov
ret
xchg
shrb
cmp
lock
imul
stc
mul
jmp
out
clc
out
mov
cmc
sub
out
aad
call
loope
sti
in
div
roll
fucomp
mov
lock
rcr
icebp
in
in
cmp
repz
into
cli
mov
out
loop
orb
ds
xor
idiv
loopne
cmp
rcr
lock
call
jecxz
sbb
adcl
aaa
out
jmp
aam
cmp
repz
call
lock
div
aaa
aaa
cli
enter
cli
shr
repnz
loopne
incb
cli
ljmp
xlat
lret
sti
hlt
lret
clc
repz
jmp
int3
xchg
call
shlb
int3
sti
fmul
iret
test
hlt
ds
decb
or
loopne
lret
cmp
cmp
xor
loopne
loop
fsubp
repz
or
lret
out
ljmp
enter
stc
loop
loop
ret
fucomp
mov
jmp
mov
repz
xor
cmp
fildl
faddp
cli
std
rcl
lret
jmp
jmp
call
aam
cmp
out
repnz
lret
in
icebp
and
mov
rolb
and
xor
out
into
xor
iret
out
jecxz
cld
cmc
clc
stc
ret
test
loopne
fcmovu
stc
lea
repz
enter
lret
sar
clc
sar
fdivr
rolb
orl
repnz
lret
into
xor
repz
ror
int
stc
aas
int
int
cmp
not
sub
fiaddl
sub
in
leave
hlt
xlat
lret
in
loope
out
shl
rcl
addb
std
orl
int
icebp
rcr
dec
rcl
sub
fucom
xlat
fcmovu
rolb
lret
leave
out
lret
out
in
stc
lret
fdivrl
cld
fdiv
enter
cmp
xchg
fdivr
int
jmp
enter
repnz
cli
adc
lret
mov
mov
fxch
fidivrl
cmp
xor
fninit
cmp
faddl
nop
in
rolb
ret
lret
jmp
push
aam
aad
xchg
leave
ret
out
out
fmull
out
jmp
out
aas
or
fst
faddp
jecxz
enter
std
fxch
xchg
lret
repnz
das
aam
fnsave
ljmp
into
out
shl
xchg
jmp
lret
int3
xchg
ret
xabort
xor
div
ss
idivb
xlat
icebp
fsubp
xor
in
fimuls
xor
hlt
int3
jmp
in
int
cmc
fcomip
xor
ret
ret
xchg
cmc
sti
cmp
lret
adcl
cmc
leave
int
in
out
int
fnstsw
rcl
cmp
jecxz
mov
imul
adc
test
mov
xor
std
xor
icebp
hlt
ss
xor
cmp
icebp
fmul
loope
cli
lock
mov
leave
cmp
divb
cmc
repnz
fimuls
call
in
jecxz
loop
shl
test
xor
aam
sti
roll
out
test
fmul
repz
in
shr
ss
into
div
jmp
cmp
cmc
call
in
fdivrp
addb
clc
loopne
into
call
ret
stc
out
out
aaa
aam
ds
in
test
hlt
in
leave
fldl2e
fmul
ljmp
xor
jmp
xlat
jmp
std
add
inc
loopne
test
sub
sbb
cmc
add
add
ret
int3
ror
aad
lahf
mov
push
les
jle
pop
add
jecxz
ret
lret
in
adcl
clc
shl
ss
xor
ss
std
loope
aas
fcmovnbe
cmc
test
test
fdivrp
mov
xor
neg
cmc
shl
in
int
stc
test
addl
xor
clc
aam
ljmp
xor
jmp
jmp
test
test
test
in
lret
ror
jmp
cmp
out
fsubp
ret
fsub
call
in
into
rcr
mov
xor
in
lock
fmulp
loope
hlt
lock
hlt
addl
and
out
lret
xchg
loopne
repnz
in
xor
hlt
cld
cmp
lock
rol
out
cli
or
ljmp
ds
loop
out
aam
aas
out
out
repz
add
xchg
std
and
stc
fsubr
jecxz
jmp
fmul
icebp
int3
fcomp
cmp
repz
jmp
std
enter
nop
mov
lds
xor
repnz
ljmp
cmp
cmc
orb
cmc
xchg
out
aad
repnz
repnz
in
aaa
cmp
fnstsw
cmp
in
sti
lret
call
repz
lret
in
fcomp
sti
out
iret
in
out
int3
stc
rol
lock
cli
ret
mov
test
loopne
jmp
xchg
into
enter
in
out
aam
in
fdivs
out
jmp
fabs
out
fadd
lret
lds
shl
aad
aam
xor
stc
adc
incb
in
in
jecxz
test
mov
jmp
sub
lret
rol
iret
cmp
cmc
hlt
into
ret
clc
loop
cli
mov
fdiv
faddp
in
out
xor
cmp
sti
jmp
lock
loopne
loope
in
idiv
in
fmulp
mov
lock
loope
sti
into
fsubr
out
aad
cmp
jmp
lret
jmp
leave
sarb
cmc
std
vpsubw
shr
into
cld
std
out
les
xchg
dec
iret
fcmovne
shl
imul
in
loopne
lret
shll
xlat
lret
std
sbb
hlt
adc
fmuls
ffreep
aaa
sar
iret
hlt
jmp
int3
loopne
add
out
fcomi
leave
vshufps
imul
shl
cmp
cmp
fdivr
testb
fadds
icebp
cld
lea
out
ret
out
hlt
jmp
loope
rol
loop
orb
leave
decl
loopne
aam
out
std
aas
fcmovnb
in
xlat
fdiv
rol
aam
hlt
std
xchg
jecxz
repnz
mov
loop
aam
ror
cmc
repnz
adc
incl
in
mov
into
cmp
fnstenv
int
aam
icebp
test
rol
fadd
hlt
loop
enter
stc
xchg
mov
in
out
xor
ss
leave
aaa
fucom
in
repnz
out
xchg
xchg
clc
cld
clc
xchg
nop
int3
test
xor
cmc
jmp
fnsave
cmp
out
cmp
out
xchg
fstp
mov
int3
icebp
rol
int3
xor
fdiv
cmp
repz
repnz
loope
mov
add
test
addb
lret
fsub
sub
repz
cmp
ret
testb
lret
loope
into
int
xor
enter
rcr
ss
test
fcmovnbe
rolb
in
lret
mov
decl
ss
repz
cmp
in
ss
cmp
fcmovb
not
fmuls
mov
aam
sub
into
hlt
fldz
leave
sarb
repnz
out
aam
idiv
fldl
icebp
sti
mov
aaa
into
enter
repz
loop
clc
ret
fcmovnu
jmp
mov
out
loop
int
stc
hlt
sub
leave
xor
leave
hlt
icebp
icebp
sti
mul
sar
ret
cli
jecxz
orl
xor
xor
fcomi
lock
out
leave
shl
leave
hlt
xchg
xchg
and
in
shl
cmp
xor
out
cmp
test
jecxz
cld
idiv
hlt
jmp
lock
in
aaa
cmp
repnz
xlat
cmp
inc
loop
in
fldl
incl
test
xor
jmp
cmp
sti
ds
int
jecxz
xchg
in
in
enter
iret
fnstenv
xor
repz
xlat
idivl
testl
jmp
ret
adcl
int3
sti
shll
in
lret
cmp
inc
shlb
add
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
leave
lret
aad
int
cmpsl
mov
sahf
cwtl
lods
clc
jle
pop
add
fcmovbe
addl
mov
xchg
rcl
in
xor
jmp
cs
fsub
aas
stc
cmp
in
xchg
ffree
sub
in
mov
fdiv
test
ror
xlat
xor
ljmp
fadd
and
movb
orl
ljmp
into
fcmovne
cmp
iret
in
leave
ljmp
cld
mov
hlt
ljmp
cmp
repz
fisttpll
xlat
mov
lock
int
out
fxam
out
jmp
out
std
in
adc
cmc
ljmp
into
fmulp
iret
lock
int3
jmp
fdivr
cmp
ljmp
enter
mov
jmp
mov
shll
iret
shl
cld
into
xlat
rcl
into
shl
xlat
in
into
leave
cli
aam
test
test
out
repnz
ret
hlt
xor
xor
in
test
shl
cmp
out
sub
std
xchg
fneni(8087
in
out
div
cmp
cli
out
out
aas
ret
shl
xchg
lock
xlat
fsubp
dec
out
loop
orl
repnz
loope
int
aam
mov
clc
loope
loope
lret
iret
ljmp
xlat
out
iret
fstpt
idiv
cmp
aas
fcomp
rcr
vpsrad
in
test
loop
lret
xor
ss
in
cmp
ljmp
lock
fcmovu
fucom
addl
loopne
out
lock
aas
jmp
cmp
cmp
rcl
aad
neg
cmp
loop
test
xor
rcl
stc
jmp
jecxz
idivb
sar
test
sbb
into
fbstp
leave
lret
ss
fsubr
in
cli
stc
cmp
cmp
hlt
xlat
in
incl
out
xchg
divl
lret
shr
repnz
aas
clc
loopne
mov
fucomip
std
or
into
out
cmp
enter
cmc
cmp
leave
repnz
lret
imul
xlat
into
repz
aaa
cmp
test
sarl
ds
std
in
out
in
test
icebp
out
fst
call
fcmovb
out
sti
fisttpl
mov
push
adc
shl
int
fcmove
idivl
ljmp
loop
in
ret
out
fld
into
xchg
jecxz
jecxz
leave
mov
out
cmc
frndint
out
jmp
aaa
out
sar
xchg
ret
in
mov
divb
xor
cmc
sar
fcomi
xlat
int
test
loop
xor
test
clc
mov
int
ret
cmc
out
fcmovne
loope
loope
repnz
in
call
xlat
int3
ljmp
xor
in
int
leave
jmp
repnz
rcl
adc
lret
sti
out
ret
clc
in
fucomip
jmp
cmp
enter
std
sarb
xchg
lock
lds
int3
jmp
aaa
iret
dec
cld
test
icebp
aam
cmc
cmc
sbb
sti
sti
nop
iret
mov
out
in
lock
ss
int3
repz
roll
loop
sti
sti
leave
xchg
jmp
out
ror
shr
shl
iret
out
std
jmp
test
faddl
clc
out
lret
shr
jmp
repz
cmp
repnz
loope
std
fsubr
xchg
out
call
loop
fucomp
repnz
cli
aad
in
sar
out
loop
cli
mov
loop
repz
xchg
jmp
enter
fdiv
xlat
cmp
call
cli
std
roll
mov
loop
shl
loopne
loop
mov
cmp
cmp
loope
out
rol
clc
fcmovnbe
mov
in
loope
mov
out
mov
iret
aad
stc
shr
cmp
enter
fiaddl
fcmovne
aas
imul
cli
call
shr
xor
lret
jmp
hlt
hlt
stc
icebp
cmp
cld
aam
loopne
fmuls
in
sub
aad
icebp
fsubr
call
xor
icebp
fnsetpm(287
aad
mov
in
les
mov
iret
out
lret
test
jmp
cld
cmp
in
or
xchg
in
fisttpl
iret
xor
in
stc
loope
aaa
cli
fld
leave
jmp
lret
xchg
fsubr
in
mov
shl
xor
fnstsw
idiv
cmp
xchg
roll
loop
jecxz
xchg
into
hlt
loopne,pn
in
aad
xor
jmp
aas
ror
aas
aad
iret
rol
adcb
sbb
add
cmc
ret
in
cmp
in
and
std
shrl
out
cli
xlat
cli
test
cld
in
test
cli
enter
ljmp
shr
rol
ds
out
rcl
repz
xor
ljmp
out
fucomip
test
sub
shl
iret
fdiv
fptan
hlt
cmp
aaa
fcmovb
fsub
leave
lret
aam
int
mov
or
jmp
aam
xor
call
cmp
sti
rol
cli
in
in
icebp
xchg
roll
ljmp
imul
int3
icebp
rcl
cmp
rcr
ljmp
jecxz
xchg
xorb
xor
cmc
enter
not
cmc
shr
xlat
fcom
rol
sti
test
rol
loop
iret
jmp
fmul
ret
fst
rolb
in
leave
in
out
cli
jmp
jecxz
xor
push
dec
ss
shr
mov
ret
mov
jmp
icebp
jmp
aaa
lret
out
in
idiv
inc
ds
repnz
ret
mov
out
int
xor
xor
leave
cmp
loope
fucomp
ret
rol
xlat
jmp
inc
mov
in
not
ss
aaa
aam
fcmovnu
lock
fdivr
in
in
mov
sti
xor
fcmove
and
and
into
ljmp
in
fsubp
rolb
mov
fdivr
test
call
xor
int
xor
fcomip
idiv
fiaddl
cmp
fcomp
hlt
orl
loop
call
test
and
stc
test
aam
out
or
test
repz
iret
out
into
int3
xor
ds
ljmp
repnz
int3
mov
ret
lret
mov
lret
cmp
ss
cmp
shr
cmp
rol
out
in
test
int
mov
hlt
xlat
into
in
aam
shr
sti
aad
jmp
idiv
test
cld
loope
mov
sub
iret
out
cmc
ss
lock
cmc
mov
leave
cld
ljmp
iret
ljmp
stc
int
cmp
fsub
hlt
testl
divl
jmp
shl
jmp
std
repz
std
aam
mov
fucomp
repnz
jmp
lock
in
iret
std
aam
repz
ljmp
xchg
jecxz
lock
mov
lock
cmp
xchg
repz
enter
enter
xchg
int3
test
xor
cmc
jmp
xor
int
cld
rcl
sti
int3
lock
cli
mov
mov
out
ljmp
in
leave
in
cmp
shl
jmp
fstp
ljmp
lret
loop
loope
mov
int
mov
subl
out
jmp
lret
cmp
sub
xlat
xchg
fsub
clc
xchg
aam
xor
loop
rcl
cmp
fldl
aad
addl
out
repnz
xor
ret
cmc
xor
lock
cmp
aas
jmp
fadd
out
sbb
xchg
fcomip
mov
int
rcl
aam
in
aas
shr
idivb
cmp
orl
aad
in
shr
out
int
stc
cmp
clc
sar
std
leave
mov
stc
xchg
xchg
enter
not
lock
cld
mul
aad
std
lock
mov
faddl
shl
enter
stc
fsubr
lret
aad
into
ret
div
sar
call
ljmp
repnz
in
leave
shl
div
sar
out
aam
aam
xchg
call
adc
fcomip
cmc
sti
call
in
fscale
cmp
lds
ret
sti
leave
in
test
dec
ret
aad
out
cmp
lret
icebp
lock
fmul
jmp
hlt
aam
fcmovu
loop
out
out
ljmp
fst
int
hlt
rol
ffree
call
xchg
in
icebp
lea
mov
fst
out
cmp
aas
iret
repnz
into
rol
lret
mov
test
shr
div
out
xlat
in
xlat
leave
hlt
in
iret
int3
shl
repnz
out
fdivrp
jmp
fsubrp
loopne
and
in
mov
xlat
lret
out
fcmovu
rcl
aas
clc
sti
in
cld
and
rcr
rolb
out
inc
shll
xlat
aad
fidivl
xor
add
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
sbb
mov
subl
mov
add
xor
mov
mov
sbb
add
mov
xorl
jmp
enter
fstp
fstpl
sub
neg
stc
cs
jle
pop
add
lock
ljmp
cmp
mov
loope
fcmovne
out
lret
lock
aam
ror
hlt
enter
aas
ljmp
mov
std
ljmp
into
into
ret
xor
ret
jmp
rcr
aad
xor
cmp
mov
icebp
ljmp
enter
aad
cmp
icebp
loope
aam
imul
cld
mov
hlt
out
shrb
call
cmp
leave
out
loopne
cld
enter
xchg
in
lret
jmp
iret
shl
in
aas
repnz
out
loop
xchg
out
xchg
hlt
aam
repz
in
xor
lret
lret
fstp
aad
les
fldlg2
jecxz
lret
test
xor
cmc
lock
ljmp
sti
ds
cmc
cld
testb
mov
shll
iret
in
std
rol
adc
fisttpll
lds
test
xor
in
ret
hlt
int3
ljmp
hlt
fcmovnbe
repz
xlat
mov
in
test
cld
in
test
sar
repz
cmc
int
lock
clc
out
jmp
fadds
shl
icebp
aam
mov
jmp
fstpt
cmp
std
rcr
shl
decb
mov
in
aaa
iret
enter
int3
cmp
cmp
in
decl
nop
int
out
jecxz
repz
cmp
icebp
rcl
adc
test
jecxz
testb
sub
ds
std
call
sarl
xor
rolb
in
enter
int3
in
ds
not
int3
cmp
int
shl
rol
ret
and
sti
loopne
fyl2x
fadds
xor
cmp
call
fcmovb
call
clc
jecxz
ljmp
xor
cmc
das
call
rcr
sbb
in
jmp
lret
mov
std
loope
lret
sub
xor
iret
aas
sbb
stc
shl
into
inc
mov
aas
fcmovnbe
out
fdiv
call
leave
aad
in
fstpt
fsubrp
in
cmp
cmp
loop
sub
mov
nop
mov
lret
fstp
in
cs
sub
cmp
sti
lock
aam
fcmovb
mul
std
hlt
clc
call
xchg
and
or
lret
out
cld
cmp
imul
xlat
xor
fsubr
test
addl
icebp
loopne
lret
aad
enter
cmp
cld
sti
fiadds
cli
addb
repnz
jmp
xor
call
iret
out
int3
out
sar
stc
mov
jmp
mov
in
loopne
loop
loope
loopne
loopne
aaa
sti
fucomp
shl
shr
neg
rcl
aas
ret
test
jmp
call
mov
into
ds
jmp
fdivrs
leave
jmp
cmp
fcmovu
out
into
std
flds
fucomp
fcmovu
cld
in
ret
clc
cmp
jmp
adc
shl
xlat
add
loopne
jmp
xchg
rorl
in
cmc
shl
xor
fdivrp
jecxz,pt
fadds
cmp
fcmovb
mov
call
out
fnstenv
in
int3
icebp
cmp
mov
mov
leave
call
loope
xchg
leave
xor
xor
call
xlat
cmpl
roll
decl
sub
leave
jecxz
fnop
xor
cmp
cmp
leave
in
fmul
int
cli
test
out
rcl
icebp
sti
fcmovne
cmp
lret
ljmp
idivl
fcmove
hlt
ret
test
in
out
rcll
iret
cmp
repnz
lret
fdivrs
stc
std
out
sar
mov
loopne
mov
enter
shlb
aam
fprem
std
enter
roll
mov
call
popl
aam
fcmovbe
clc
fdivrs
fneni(8087
cmp
cmpl
fyl2x
out
sar
jecxz
imul
ret
xor
aam
int3
leave
sar
loopne
iret
incl
in
mov
iret
xchg
xor
xor
xor
cmp
fcom
cmp
cmpb
ret
loop
iret
into
ret
ror
jecxz
das
in
jmp
cmp
iret
int
int3
shl
aad
sub
sub
fcoml
int3
rol
xor
cmc
loope
not
repnz
loop
fisttps
imul
nop
addl
fldpi
out
inc
cld
movl
test
test
test
add
add
rcl
lret
aad
fstp
sub
cld
dec
sbb
ret
jl
add
cmp
cmp
ffreep
repz
xchg
out
mov
ficoml
lock
fst
rcl
std
in
ror
repnz
fadd
rolb
int
mov
jmp
clc
in
into
fptan
cmp
cmc
cmp
mul
fiadds
and
std
lock
in
in
leave
cmp
shrl
test
std
stc
iret
repz
aam
hlt
std
hlt
jecxz
xchg
or
iret
repnz
imulb
xor
fiadds
fdiv
not
aam
xchg
int
rcr
std
pop
xor
sub
les
in
xor
aam
iret
in
aad
add
in
xchg
mov
std
orl
cmp
ds
in
and
mov
loopne
mov
fsubp
test
fmul
sub
loope
xor
sar
shl
call
std
call
roll
repnz
loop
cmp
fsin
ljmp
std
rcr
xlat
enter
std
out
mov
xchg
rol
iret
clc
xor
rcr
cld
lock
aad
cli
cmp
repz
fcmovne
out
loope
sub
cmc
icebp
in
aad
int
loopne
loope
cmp
cmp
repz
leave
mul
jecxz
int3
lock
rol
xchg
call
fdecstp
in
call
std
mov
loope
loopne
or
lret
shl
jmp
aad
int3
cmc
sti
out
fdiv
call
xchg
xchg
std
out
sub
iret
sti
roll
loopne
in
repz
clc
aad
rolb
out
fcmovb
addl
fcomi
cli
fsubr
cmp
inc
test
out
fndisi(8087
lock
xchg
xchg
fnstsw
aad
fstp
adc
ds
in
loop
xchg
out
repnz
call
cmc
lret
cmc
jecxz
ret
fstp
sar
test
int3
mov
jmp
rorl
xor
call
cmp
out
in
fadds
mov
orl
into
cmp
aad
cmp
rolb
loopne
lret
mov
aaa
loop
out
out
sti
fcmovne
fistpll
rol
test
std
std
dec
std
out
xchg
lret
cmp
lret
bnd
aam
cli
aad
cli
jmp
aad
lret
addb
cs
cld
cmp
roll
jmp
les
lret
out
aad
shlb
fucomp
int3
leave
lret
loop
clc
loop
cld
fabs
ljmp
leave
icebp
out
incb
not
in
shr
in
stc
dec
aam
shl
stc
clc
mov
cld
mov
orb
ds
int
jecxz
out
std
sti
lret
xlat
cmp
and
decl
in
ror
in
call
xor
fcom
rcr
cmc
loop
fsubr
call
xchg
mov
cmc
mov
in
in
fdiv
sarb
aas
loopne
into
adc
aad
test
icebp
lret
in
rol
in
int3
fadd
sti
in
test
cmp
cmp
add
loopne
out
loope
out
faddl
out
rcl
test
stc
shl
neg
loopne
jmp
lret
les
repnz
jmp
divl
dec
int
in
cmc
loop
mov
fiadds
cld
incb
test
std
dec
divb
cmp
xlat
xchg
sti
mov
std
into
xchg
out
ds
ret
xor
xor
cmp
cmp
cmp
into
in
ret
cli
in
addl
shr
std
cmp
rcl
clc
int3
cmp
xor
mov
imul
out
jecxz
in
xchg
lret
int3
bnd
cmp
stc
lret
shll
fdiv
aam
loope
jmp
rorb
shr
ret
cmp
sar
in
int3
hlt
sar
cld
fdivr
out
clc
mov
out
repz
xor
xlat
icebp
icebp
xor
cmp
jecxz
mov
test
nop
std
repz
loope
out
in
sti
int3
clc
rcl
icebp
ljmp
aad
in
out
nop
lret
orb
iret
aad
jmp
out
shl
lret
fcmovnb
clc
jmp
hlt
call
loopne
in
out
int
jecxz
cmc
aam
sti
shl
fcmovnbe
ret
neg
mov
leave
test
mov
out
xchg
sub
in
inc
int3
and
inc
fs
add
cmp
add
test
add
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
mov
xor
xor
sub
xor
movl
movl
xor
jmp
into
aad
lret
rcr
mov
dec
jge
and
jl
icebp
shl
fcmovnb
xchg
leave
aad
ljmp
sar
xchg
xor
jmp
out
repz
incb
clc
fnstsw
out
in
jmp
ljmp
clc
lret
sti
cmp
fdiv
cld
idiv
fiaddl
in
xchg
ror
jecxz
int3
out
lret
loope
out
aas
loope
cmp
rcl
sti
fdivrp
test
incl
rclb
out
hlt
int
lret
cmc
neg
ret
repnz
out
enter
shl
push
leave
out
test
xor
cmp
cmp
sarb
xchg
mul
xchg
lret
xor
enter
fmul
jmp
fcmovnu
aad
cli
add
fcomp
sti
in
mov
lock
repz
aad
fstpt
aam
test
rol
xchg
cmp
lret
out
shr
aaa
stc
xor
in
or
faddp
ret
aad
leave
jmp
mov
in
loope
call
cmc
sti
fucom
aas
sarl
rolb
ljmp
and
out
shrl
in
in
xor
repz
cmp
cmp
testb
cli
mov
into
ljmp
lret
cmp
icebp
div
vpsubq
cli
jmp
mov
call
stc
repnz
aam
cld
leave
aam
rcr
int
clc
into
jmp
cli
fiaddl
ret
sti
ljmp
test
fcomi
call
leave
mov
loop
jmp
in
ret
cli
in
shl
enter
aas
cmp
out
lock
rol
fsubrp
shl
sub
icebp
enter
in
ss
leave
cmp
rcl
ds
dec
test
xchg
sti
out
cmc
out
lret
icebp
aad
aaa
fdivr
ds
cmp
aad
mov
xchg
lock
in
xor
fucomi
in
out
fdiv
aas
aam
ffree
ds
fadd
jecxz
in
lret
sti
int
into
jmp
les
aad
idivl
out
fmulp
aam
xlat
aas
loopne
iret
cmp
jmp
mov
addl
out
cld
int
jmp
jecxz
frndint
roll
call
ror
bnd
call
std
cmc
rcl
int3
clc
in
lret
repnz
lret
fmulp
orl
aaa
test
jmp
repz
out
rcr
add
mov
leave
fisttpll
ljmp
into
rcr
cmp
iret
cmp
ret
ds
ret
sti
out
loopne
icebp
xchg
fisttps
aaa
out
aad
leave
leave
std
fucom
cmc
cmc
loopne
fnstsw
mov
ret
mov
mov
ljmp
cmp
sti
sti
sarl
jecxz
sar
hlt
out
mov
stc
xchg
lret
mov
jmp
fsub
div
cmp
call
jecxz
in
fdivp
stc
out
dec
into
in
nop
mov
ljmp
iret
icebp
hlt
xlat
cld
loope
loopne
ret
aad
ljmp
xchg
xor
test
fcmovnbe
cmp
stc
loop
fmul
out
mov
jmp
xchg
in
cs
call
cld
fdiv
cmp
sbb
roll
clc
addb
lret
out
int
in
in
leave
fdivr
cmp
sti
test
into
mov
fcomi
cli
shl
lret
lret
in
fldlg2
in
xlat
fcom
fidivrs
fcmovb
fucomi
imul
out
ljmp
ds
call
in
clc
xor
ror
cmp
in
repz
fmul
xchg
fldl
in
iret
sti
in
cmc
cmp
in
in
aas
loope
aam
sti
fmul
iret
in
sub
enter
call
int
in
out
aas
cli
rol
cmc
xchg
mov
lea
xlat
out
cli
iret
lds
fcmove
fiadds
sub
fninit
and
in
mov
leave
ljmp
lock
in
aas
div
aam
in
lds
xchg
jmp
loopne
xlat
std
aaa
cs
cmp
clc
addb
loopne,pt
mul
or
fmull
xor
aad
hlt
cmp
cld
fcmovu
aad
in
shl
and
enter
mov
lock
lret
icebp
call
cmp
cld
shl
ss
mov
xchg
loopne
ror
movl
add
cmc
add
add
rol
xlat
vpaddusw
xchg
jb
push
mov
sbb
pop
add
out
hlt
leave
stc
in
cmc
fsubr
loopne
into
ret
testl
int
iret
int
ljmp
ror
xor
rcl
fiaddl
in
test
in
out
sti
int
mov
hlt
ljmp
loope
rol
jmp
ret
aam
fcomp
stc
in
jmp
xlat
icebp
aam
out
repz
cmc
std
cmp
jmp
ljmp
hlt
ds
repnz
xlat
fcomi
std
xor
iret
iret
aaa
in
addb
cld
ljmp
ljmp
cmc
ss
lret
incb
sti
fst
rol
int3
lds
xchg
test
lds
jmp
cmp
fcmovnbe
cmp
cld
out
ror
in
test
mov
in
cmc
icebp
cmp
shr
repz
ds
fdiv
in
rolb
in
int3
icebp
test
xor
in
cmp
cmp
leave
aas
lret
dec
lret
ret
icebp
ret
stc
cld
mov
ljmp
int
out
lock
in
out
shll
xlat
jecxz
iret
into
loop
ret
leave
mov
call
loope
mov
rclb
lret
stc
xor
sarb
in
aad
fdivr
call
iret
xchg
repz
test
rcr
call
hlt
into
cli
test
loope
ret
shl
lock
fucom
in
lock
sarb
stc
jmp
repz
cmp
enter
in
xchg
out
jecxz
xchg
shl
call
aad
shl
int3
clc
rcl
ret
fsub
out
mov
cli
out
rorl
jmp
xor
call
call
fucomi
repz
mov
jecxz
lret
fisttpl
mov
xor
xor
fdivr
fadd
lret
in
cmp
sti
ror
iret
loope
in
inc
jecxz
jmp
aaa
out
xlat
pushl
loopne
cmc
adc
test
lds
fpatan
xchg
shl
int3
shr
repz
in
lock
ss
fmul
std
add
fmul
sar
out
std
lock
ss
stc
cmp
rcl
fldl
fcmovnbe
mov
lret
test
fmul
loop
shrb
in
rcr
aas
sti
shl
lock
jmp
xlat
shr
shr
hlt
in
in
in
sti
not
aam
cmc
lret
cld
shr
fsub
out
jmp
jmp
sub
repz
xlat
clc
fsincos
repnz
lret
cmp
rcr
fdivrl
sti
xchg
fisttps
out
ljmp
fldcw
std
out
cld
enter
fdivr
cmc
out
fxch
stc
cld
lret
enter
loope
int
cmp
out
in
cmc
cmp
aam
loop
loope
rcr
jmp
clc
rcll
ror
out
idivl
xor
fdivrp
std
xlat
xlat
sarb
sbb
loopne
out
int3
xchg
call
imul
cmc
enter
iret
lock
out
aam
aam
repz
out
xchg
popl
xchg
lds
shrl
enter
in
fidivrs
fcmovu
cli
into
mul
aam
xchg
loop
out
call
loop
cmp
divl
fsubr
addb
sar
stc
fsubr
out
fadds
xchg
into
div
xor
sti
out
cli
jmp
aas
rcl
sar
xchg
imul
ret
std
std
in
ror
int3
in
add
loopne
cmp
in
xor
fdivrp
adc
sarb
jmp
int
lret
out
fadd
xlat
int3
shr
shr
out
cli
cmp
les
fcmovb
mov
leave
int
sar
enter
lock
hlt
loop
leave
stc
shl
aam
xor
div
cld
ret
clc
repnz
fneni(8087
mov
icebp
mov
out
fucomip
stc
sarl
xor
jmp
rcl
ret
jmp
clc
jmp
loop
jmp
clc
imul
iret
out
out
rcl
loope
nop
orb
leave
int3
cmc
repz
aas
rol
xlat
sarl
ljmp
xchg
rcl
ds
leave
xor
int
std
aam
aam
les
shl
loopne
fimull
call
xor
call
aas
test
hlt
mov
fdivr
in
jecxz
out
into
xchg
iret
loopne
cmp
icebp
iret
fstpt
into
fst
cmc
lds
jmp
int3
in
div
xor
jmp
mov
in
cmp
aad
out
out
out
loopne
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xorl
jmp
iret
ror
aas
aad
iret
shlb
lods
jmp
jge
jle
xchg
jle
pop
add
lret
loop
aad
iret
xor
rol
ror
aam
sub
in
add
flds
in
mov
not
mov
int
test
test
call
fisttpll
ljmp
clc
idiv
lock
shr
loopne
add
hlt
out
loope
rcl
in
nop
xor
in
jmp
int
fdivrs
int
fcos
aam
filds
clc
fadds
in
cmp
icebp
cmp
cmp
xlat
into
lock
sar
mov
jecxz
clc
out
or
das
lret
ror
cmc
jmp
ffree
xor
lret
neg
std
out
clc
aad
testb
sti
xchg
xor
shr
shl
lret
aas
fnstsw
loopne
mov
sti
lret
cld
lret
and
loope
aad
enter
shl
aas
std
cld
lret
adcb
repnz
ss
int3
cmp
fsubr
iret
dec
loope
aam
rolb
in
adcl
xor
sti
and
fisttpl
mov
out
call
lret
xor
cmc
hlt
shlb
cmc
int
cld
aad
jecxz
out
mov
lret
fsubr
lret
test
in
in
into
repz
repz
lret
rcl
out
clc
sar
loop
fcom
fcmovu
inc
mov
jmp
xabort
divl
rcl
into
fucom
icebp
in
repz
fcomp
lret
loope
fucomp
mov
in
out
int3
int3
fucomp
xor
ret
clc
cmp
mul
in
adc
out
test
int3
repnz
out
shll
jmp
divl
cmp
rcr
test
ljmp
fimuls
out
loope
lret
fld
stc
ror
inc
hlt
shl
fdivr
rolb
mov
fucomp
test
out
fmul
out
clc
lret
ljmp
in
out
std
sti
in
lret
jmp
icebp
ret
stc
shlb
out
clc
hlt
leave
aas
std
fdivr
mul
repnz
repnz
jmp
fucomi
into
in
add
jecxz
xor
cmp
test
aaa
into
adc
jecxz
cli
faddp
fsub
icebp
lock
fucomp
fbstp
aad
into
ret
int
rcl
in
mov
shl
lock
out
aam
not
int
std
test
fcomi
sti
jmp
int3
nop
test
ss
in
cmp
into
cmp
test
stc
into
fistl
loop
xor
fincstp
cmp
lret
cmp
icebp
into
aas
fdivr
out
int3
lret
dec
test
repz
cmp
in
int
loopne
ror
ret
test
in
out
xchg
jecxz
repnz
int3
ljmp
cmp
rorl
orb
das
in
aad
in
cmp
lret
in
xor
cli
std
addl
rcr
out
in
shll
out
cmc
call
cld
ds
fildl
hlt
stc
sub
mov
into
rcr
in
into
cmp
aad
loope
xchg
icebp
ret
aas
ds
clc
test
iret
out
out
iret
ret
enter
repnz
sti
out
sti
shl
fcmovnu
mov
mov
faddl
jecxz
stc
enter
xor
cmc
icebp
clc
test
std
ds
ljmp
nop
cmc
test
in
out
in
neg
iret
cmp
loope
iret
ds
in
repnz
jmp
xlat
jecxz
xchg
leave
mov
jecxz
not
xor
out
out
cmp
fcomip
loop
xchg
leave
xchg
xlat
aad
repz
jecxz
xor
call
clc
iret
incl
rorb
xchg
mov
loope
out
lret
cmp
cs
out
cmp
std
shl
orb
test
fmul
xchg
xor
lret
in
out
shr
aas
jecxz
iret
ret
fidivrl
test
mov
loopne
jecxz
loop
in
mov
aad
xor
lret
ret
cld
cmp
jmp
in
lret
xchg
xchg
fsubrp
in
enter
cmp
cmp
aam
in
not
mov
mov
jmp
lock
lock
jecxz
lret
ss
rol
out
repnz
roll
or
std
in
shr
lret
in
iret
repz
fcomip
cli
aaa
test
idiv
incl
jge
xorl
add
movl
cmp
je
push
movl
jmp
and
jmp
enter
fcmovnbe
int
pushw
jle
mov
cwtl
and
add
fldl
leave
rol
fsub
rcl
jmp
fnstsw
cmp
fdecstp
cmc
sar
std
addb
test
shlb
shl
xlat
jmp
ss
xchg
leave
cmp
out
call
aas
mov
xlat
idivb
clc
cli
div
clc
out
shl
fstp
in
iret
out
xchg
repnz
in
ss
neg
fxch
cmp
in
aad
leave
in
jmp
cld
cli
leave
in
lret
in
fbstp
xor
rcl
repnz
sti
leave
xlat
loopne
clc
jecxz
test
loope
repnz
out
decl
int
ss
xor
fnstsw
sti
cld
aas
fdiv
aad
xchg
cmc
loopne
jecxz
xchg
xchg
mov
or
lret
loopne
xor
fprem1
into
cmp
sar
cmp
cmc
rcr
in
lret
icebp
iret
test
decb
shr
icebp
shr
shll
xor
test
cmpl
mov
std
enter
in
incl
shll
mul
in
fdivrl
aam
cmp
decl
out
in
cmp
mov
shll
in
iret
out
cmp
fmul
sar
shr
idiv
fisttpl
orl
loopne
xor
in
jmp
shr
cmp
aad
out
sarb
dec
xchg
sub
xor
jmp
ljmp
xchg
xrelease
int
jecxz
fst
hlt
jmp
lret
ret
leave
int
cmp
cmc
iret
xor
mov
mov
jmp
ss
xlat
out
in
out
repnz
int3
test
out
jmp
fsubr
jmp
xchg
cmc
jmp
repnz
cli
jecxz
sti
loop
fiadds
int3
rcr
repz
into
jecxz
cmp
fst
sar
iret
jmp
roll
fcom
leave
in
enter
repnz
out
sub
int3
out
fcomi
xor
fcmovne
cmp
out
mov
lret
fucomip
out
loope
hlt
xor
xor
ret
xor
stc
cmp
shl
rcr
call
out
inc
lret
jecxz
aas
xor
sarl
sti
in
aaa
in
ror
xor
incl
ret
mov
xor
icebp
out
fsubrp
fld
int3
aaa
call
sub
stc
in
ret
xchg
test
icebp
in
xor
aad
fmul
iret
in
jecxz
icebp
sar
test
ret
out
cli
rcr
repnz
lret
cld
aad
incb
fcmovu
mov
in
in
mov
out
fsubp
ljmp
dec
sarb
lret
clc
fcmovnbe
shl
fstp
test
addl
cmc
jmp
fmul
cmp
cmp
cmp
loope
orl
cld
loop
xchg
repnz
ret
fucomi
cmp
fidivrl
shl
std
cli
cmc
out
mov
fsubp
mov
shl
xchg
out
cld
jmp
aas
cli
cmp
mul
aam
dec
jmp
ret
decb
div
int
cmc
aam
iret
out
cmp
sti
roll
aad
loop
in
lret
enter
in
xor
xor
out
xor
fcmove
enter
fyl2x
fst
in
loope
fdivrp
int
decb
jmp
fcom
sti
iret
lret
jmp
imul
jecxz
loope
enter
mov
clc
fmull
out
ret
cmp
in
aas
int3
aad
xlat
cmc
cld
enter
call
shl
loopne,pn
aad
aad
enter
lock
ds
rol
lret
out
fmul
out
nop
jmp
in
lock
icebp
int3
aad
cmp
out
rcl
int3
repz
cmp
mov
int
int
into
lret
icebp
idiv
out
lret
cmp
lock
cmp
cld
ffreep
loop
test
out
shr
in
xlat
sub
jecxz
fadd
lock
cmp
aad
aad
out
cli
cld
aad
mov
mov
repnz
xor
xor
lock
std
repz
jecxz
sti
hlt
ror
out
sbb
shl
out
fsub
jecxz
rcl
ror
jmp
repnz
in
neg
icebp
xchg
fdiv
shr
in
shr
ljmp
test
xchg
aas
mov
out
hlt
xchg
enter
neg
out
cmp
int
shl
sti
rcl
ret
mov
sub
or
icebp
ljmp
into
cmp
ds
loop
incl
pop
fs
add
push
fs
add
add
jmp
leave
aam
xlat
in
fsubrl
stc
xchg
mov
jl
loopne
test
ret
aam
in
cs
std
sar
lret
in
fcmovnb
fisttps
xchg
in
fisttpl
div
in
lock
test
lock
aam
rcl
cli
lret
out
stc
sti
fucom
icebp
out
xchg
sub
sub
into
cmp
in
ds
aaa
in
shr
test
in
cli
jecxz
mov
shl
cmp
das
loop
lret
xor
sar
lret
aas
loope
aam
mov
clc
jmp
xchg
in
cmp
call
ds
std
fistpll
cmpl
les
movl
into
ss
in
xor
cli
loop
jmp
xchg
test
out
repnz
rcr
out
repnz
fdivrs
adc
neg
cmp
xchg
jmp
mov
shrb
repz
std
iret
cmp
cmp
cmp
frstpm(287
shl
fcomp
loope
in
loopne
test
xchg
adcl
int
cmp
aas
hlt
addl
jmp
lret
repnz
lret
int
int
out
clc
cmp
cmp
out
jecxz
xlat
idiv
shl
cld
out
fldpi
in
int
in
out
rol
int
aad
cmp
cmp
call
iret
fucom
loope
fcmovnu
lret
lock
popl
aad
leave
jmp
repnz
fcomi
loope
lock
jmp
fimuls
stc
fcom
sti
xor
int
fdiv
sarb
sti
cmc
fdivr
loope
jmp
fucom
out
mov
lock
lock
cmp
idiv
rcl
ret
jmp
jmp
out
cld
lret
mov
iret
repz
in
leave
stc
fdivrs
cmc
call
cmc
sar
aas
ds
xchg
lea
int
loope
shlb
int
lret
std
out
cld
fucomp
sar
repz
aam
cmpl
loopne
mov
aad
jmp
ss
aad
cld
fadd
jecxz
in
clc
sbb
fcmovu
out
mov
jmp
cmc
sub
out
in
repz
cmp
xor
incl
xabort
loop
out
jecxz
mov
sbb
leave
aaa
in
in
rcl
cli
aam
loop
in
incl
sti
loope
std
mov
in
fmulp
in
out
out
clc
cmp
repz
test
ror
repz
loopne
in
mov
ret
stc
mul
divb
cmc
cmp
loopne
cmc
sarb
lds
xchg
cmp
int3
out
ljmp
iret
ljmp
jecxz
clc
xchg
fxch
and
in
xor
leave
call
cmp
rcl
test
out
cld
int
xchg
out
ljmp
jmp
repz
ror
aas
repnz
test
filds
fld
repnz
out
cld
cmp
std
cld
into
fldl
fcmovne
loopne
test
std
jmp
xor
xlat
aad
cmp
stc
int3
call
icebp
fdivr
rcl
fucomi
fiaddl
ljmp
ss
fdivr
jmp
shr
int3
fiaddl
fmuls
orb
in
into
lret
hlt
int
xor
fcmovnbe
cmp
shr
addb
mov
into
hlt
out
repnz
xor
int
cmc
out
sar
out
aad
fsubp
in
out
jmp
in
shr
xchg
iret
xor
stc
rcl
aaa
xor
fcom
ljmp
repz
mov
loop
testb
vphadduwq
repnz
fpatan
out
aam
sar
fcom
cmp
jmp
lret
mov
xchg
aam
enter
ret
xor
stc
repnz
aad
jecxz
cmp
sub
flds
repnz
ret
fcmovbe
fucomp
icebp
in
xchg
out
ds
fcmovb
in
mov
nop
cmp
lret
in
stc
vcvtdq2pd
div
stc
not
cmc
ret
hlt
in
out
mul
out
std
jmp
fdivs
clc
call
fiaddl
rol
shl
test
test
out
xchg
xchg
loopne
int3
in
fdivrs
enter
cld
fucomi
out
xor
ffree
mov
mov
or
jmp
ret
idiv
xor
out
rcl
cmp
aad
rcr
sub
aam
test
out
shl
xor
repnz
int
cmc
clc
icebp
leave
cld
cmp
xlat
rol
cli
rol
call
mov
jmp
leave
hlt
repnz
jecxz
ret
cmc
mov
cli
adc
mov
jmp
leave
aam
rcl
aam
insb
bound
jl
lock
jle
pop
add
fcmovb
fiadds
jmp
cmp
shl
out
fmul
jecxz
sti
loopne
fptan
cld
clc
ret
xchg
leave
les
xor
stc
in
cmp
shl
loopne
enter
stc
sti
fdivr
and
int3
mov
loop
xor
in
aaa
xor
shll
int3
std
fstp
jmp
loopne
loope
mov
mov
hlt
aaa
aad
xor
sarl
in
test
addb
leave
enter
out
call
call
call
roll
test
cmp
std
xchg
repnz
aam
in
shl
xor
shl
ror
aad
call
clc
cld
iret
popl
in
stc
ror
xlat
ror
jmp
xor
fcomi
xlat
cmpl
out
roll
jecxz
cmp
idivb
cmp
hlt
cmp
fsubp
fprem1
in
jmp
test
xlat
call
cli
cmp
sarb
fdivrp
orl
out
ror
xorl
das
in
repz
mul
rcl
icebp
ret
cmp
shl
test
addl
enter
loop
fcmovne
jmp
rol
repnz
testb
nop
loop
call
cs
leave
shl
sar
out
call
xlat
aad
cmc
rcr
loopne
xchg
jmp
repnz
shr
repnz
vpsubusb
sbb
fptan
lock
aas
les
int
out
repnz
xor
out
in
enter
idiv
sti
rcl
test
call
mov
int
jmp
in
out
aaa
cmc
iret
ljmp
cmp
lock
les
in
mov
jecxz
ret
hlt
in
out
cmp
stc
into
hlt
in
cmp
neg
cmp
loop
xchg
std
nop
in
aaa
int
cmp
jmp
lret
cmp
aam
mov
mov
int
sti
xchg
sub
leave
hlt
cli
lret
lret
cli
in
ret
std
rolb
and
mov
sbb
aam
out
sarl
cmp
cmp
stc
xchg
loop
sti
mov
in
fcomi
xchg
xor
lret
call
fstpt
sbb
out
std
cld
out
cmc
in
orl
idivb
cmc
int3
out
jmp
std
cmp
aas
shl
ret
sub
sti
sti
std
call
xor
out
in
xbegin
lret
aam
aaa
clc
icebp
xor
ffree
sti
sti
cmp
test
loope
xor
hlt
icebp
cmp
stc
neg
cmc
sar
aas
out
hlt
loop
not
idivb
call
or
lret
rol
rcr
cmc
fdiv
flds
mov
loope
ret
call
ljmp
ret
cli
icebp
repz
cmp
xor
cmp
aam
enter
jecxz
shr
out
loope
aad
in
idivb
sarb
idivl
repz
test
in
test
cmc
ror
lock
int
rcl
cmp
into
testb
fcomip
sub
jmp
out
shl
cmc
loop
cmc
xor
fucomi
call
adc
cli
test
fucomi
in
into
lret
in
loop
into
sub
leave
leave
lock
ret
in
fnstsw
cli
mov
fmul
cld
mov
int
ljmp
fadd
in
fincstp
aad
aad
aas
call
lds
sti
xlat
idiv
mov
leave
mov
test
idiv
icebp
rcl
aaa
cmp
into
rol
repz
xlat
enter
loopne
adc
test
jecxz
cmc
xor
out
clc
aas
clc
repz
incb
in
adc
test
ss
aam
into
cmp
aam
cmc
fcomp
loope
mov
repnz
shr
xbegin
in
call
stc
and
and
test
test
fsts
lret
shl
out
sti
cmp
loope
cld
aas
std
rcr
sti
enter
in
jmp
call
lock
aam
repnz
fdiv
sbb
fcmovnb
fmuls
int3
subb
aam
xor
cmp
cmp
cmp
cld
loop
std
loope
sbb
or
out
ljmp
in
ds
cld
aam
std
cmc
mov
or
iret
ljmp
out
hlt
iret
clc
cmp
fidivs
std
out
xor
add
movl
jmp
rol
ret
ret
ret
fwait
cmp
iret
stos
jle
pop
add
lds
xlat
xchg
fcomip
shl
jecxz
shl
std
ljmp
lock
test
xchg
xchg
int
out
shr
lock
cli
lret
cmp
jecxz
faddp
icebp
shl
ds
xlat
ret
out
xlat
fdivr
or
mov
sub
ljmp
cmp
repz
rol
jecxz
ret
cli
lret
sti
ljmp
not
into
call
cmp
fxch
out
lret
repnz
loope
xor
int3
xchg
repnz
repz
lret
rcr
lret
int3
pushl
sti
fadd
mov
add
repnz
shl
sarl
out
int
in
cmp
aam
xor
cld
out
lret
mov
xor
rcl
shl
cmp
in
dec
int3
shr
fsub
fsubr
sarl
aam
icebp
fmull
xor
repnz
ds
hlt
cmp
xchg
lea
fucom
xchg
aad
in
clc
xor
in
cmp
int
ds
rolb
in
jecxz
rcll
iret
icebp
out
out
fcmove
stc
lret
roll
aad
add
cmp
jecxz
iret
into
fcmovne
leave
fdivp
sbb
loop
hlt
aad
clc
mov
ljmp
aam
cmc
jmp
fndisi(8087
ljmp
cmp
shl
mov
xchg
out
shll
hlt
sti
fxch
sti
xor
cmp
aaa
repz
test
ret
int3
out
int3
stc
repz
hlt
mov
sub
hlt
jmp
rcl
std
idivl
rol
lock
mov
add
xor
call
cmp
clc
fcmovu
cmc
shl
jecxz
clc
lret
sti
jmp
rorb
lret
out
out
loopne
lret
loop
idiv
fmul
sti
mov
loop
loopne
int3
cld
mov
int3
das
in
jecxz
fcomi
aad
in
cmp
loope
fiadds
jecxz
test
xchg
into
xor
divl
out
das
aam
rcr
into
cmp
out
testl
iret
fucom
test
xor
in
lret
sti
ljmp
enter
mov
lea
add
hlt
in
lds
int
lret
cld
fcomip
ror
cmp
mov
call
in
out
inc
xlat
xor
aad
int
xor
icebp
fcmove
shl
lea
out
in
in
jecxz
loop
in
idiv
cmp
cmpl
repz
xchg
mov
in
loop
sub
hlt
lret
sbb
aam
fdivp
stc
xlat
jmp
xchg
lock
cs
ror
cmp
enter
idivl
aam
icebp
jecxz
out
aad
test
ret
fmulp
out
shl
aam
in
ljmp
cmp
aad
cmp
fisttpl
out
enter
in
ljmp
rcl
fcmovne
lret
sarb
add
cli
in
sbb
loope
das
fcompp
xor
repz
jmp
cli
testl
in
test
icebp
int3
xor
stc
stc
hlt
aad
in
loop
icebp
cmp
fisttps
fcmovu
out
jecxz
into
in
icebp
xor
lock
shlb
xlat
cld
cmp
ret
cmp
xlat
loope
fmulp
out
lea
out
aad
into
out
ljmp
clc
fdivr
shr
jmp
repz
cli
cmp
sar
cmp
repz
fyl2x
repz
in
or
test
xchg
xchg
iret
jecxz
in
aam
fcmove
fdivr
fdivrp
aad
aad
xlat
ds
call
out
loope
into
loop
cmp
cmp
push
sub
in
lds
cmc
clc
xchg
icebp
xchg
icebp
into
xchg
in
lret
lret
xor
neg
xlat
sar
cmc
ret
ret
inc
jecxz
loop
jecxz
pop
aaa
out
cmp
fnstenv
shr
xor
neg
fcomi
icebp
out
clc
in
loopne
lret
loopne
shl
loope
call
std
cmp
loope
shr
mov
test
rorl
lret
ret
shl
into
shr
fpatan
fdivr
shl
jmp
lret
dec
out
and
xor
aam
aaa
repz
fcomp
lock
incl
leave
cli
enter
out
call
in
xor
sarb
cli
jb
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
orl
jmp
into
ds
rcl
aad
arpl
fiadds
pop
add
cli
cmp
mov
rcr
fxam
cld
int3
lret
lret
lock
xor
cmp
xor
imul
cmc
sti
cmc
aam
aam
in
icebp
rol
clc
leave
in
loop
ljmp
shll
out
xor
lret
aas
xor
lock
mov
clc
decl
sub
ret
les
xlat
loope
cmc
addb
call
fsubrp
fcoml
cmp
xor
out
jecxz
fdivrp
jecxz
leave
cld
ljmp
fldl
int
enter
hlt
into
xor
clc
iret
fucomi
mul
repnz
fcmovnbe
ror
ret
out
ljmp
fdiv
out
rolb
jmp
xchg
repz
loopne
loop
jecxz
iret
lret
aam
inc
sar
cld
fcmovnb
loope
call
xchg
cld
cld
int3
int
xor
ss
cmp
enter
ds
cli
aad
repnz
xchg
fxch
int
test
mov
jecxz
stc
lret
xlat
out
shr
cmp
cmp
xchg
clc
call
loope
and
in
int
enter
aam
fucomip
ffree
cmp
fdivp
cmp
vpmaxub
in
xchg
nop
in
xchg
int
shr
cmc
fnstcw
xor
fistpll
aam
rolb
cmp
out
xlat
xchg
xchg
lret
into
iret
jecxz
rol
fstpt
leave
fidivrl
jecxz
std
jmp
in
ret
int
repz
sub
cmp
into
repz
sar
loopne
sti
dec
stc
in
out
mov
jecxz
leave
hlt
call
push
cmp
aam
push
hlt
call
int
xor
lea
xlat
shr
shlb
call
jmp
repnz
lock
int
mov
ror
int
shr
cmp
aad
out
fld
lock
sti
jecxz
aad
mov
out
mov
sar
in
jecxz,pt
ret
stc
cmp
in
cmp
mov
xlat
rol
xor
or
hlt
xchg
fnstenv
iret
in
lret
fistpll
shl
clc
cli
ret
sar
xchg
cld
cmp
ror
out
xor
cmc
not
repz
cmp
loop
in
sti
inc
loop
aas
out
call
out
cmc
aad
ret
repnz
iret
xor
aas
out
leave
fcmovbe
mov
out
lret
mov
lret
in
rol
out
cmc
sub
cli
std
lret
fiadds
loop
lret
mov
std
sti
ljmp
ss
fcmove
icebp
cmp
idiv
hlt
stc
repnz
in
mov
into
fmul
in
mov
xor
xor
call
sar
rcr
aad
xlat
xchg
out
fcmove
filds
sub
not
sti
rol
fcmovu
int3
test
xlat
xor
jmp
mov
xchg
mov
icebp
int
sar
call
cli
fnstcw
aam
decl
loope
cli
fcmovu
int3
aam
aaa
cmp
iret
cmc
aas
jmp
aad
add
out
fcomp
ret
out
xor
std
xor
rolb
repz
fucomip
xchg
fsubp
jmp
in
lret
out
aam
std
shl
cmp
out
xchg
cli
fcos
icebp
loop
in
lret
shr
leave
fsubr
in
sar
into
int
xor
sar
mov
nop
xchg
loop
repnz
shr
out
clc
cmp
cmp
mov
std
cld
fsub
ljmp
stc
sti
rcl
ds
int3
loope
hlt
iret
out
lds
test
orb
jecxz
jecxz
repnz
xlat
cmp
cmp
int3
std
shl
call
ljmp
divl
repz
xor
int3
aad
cmp
in
rcl
call
test
div
loop
jmp
rol
ljmp
call
sbb
clc
enter
call
test
xchg
int
ss
jmp
out
cmp
stc
idiv
enter
leave
std
orl
xor
fmul
stc
loopne
sar
fsubp
test
mov
cld
xchg
out
ljmp
jmp
shl
rcr
lock
sti
xchg
fxam
ret
decb
jecxz
leave
shl
sarl
stc
aad
xor
std
call
int3
aaa
xlat
ret
test
out
jecxz
sti
xchg
in
int3
out
call
xlat
shr
decl
sahf
fs
add
shlb
clc
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
add
imul
mov
jmp
leave
sarb
int
leave
jle
mov
pop
mulb
jl
jl
jl
icebp
loope
fadds
jecxz
fldl
loopne
icebp
cld
xor
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
push
andl
push
subl
push
xorl
xor
lea
xor
movl
or
andl
xor
add
adcl
push
orl
lea
subl
push
push
xorl
lea
movl
inc
subl
xor
negl
xor
call
movl
movl
mov
mov
jmp
adcl
xor
movl
xor
sbb
xor
addl
xor
movl
incl
mov
mov
cmp
jb
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jb
movl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
andl
movl
sub
lea
mov
sbb
mov
mov
and
lea
neg
mov
xor
or
sub
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
movzwl
sub
mov
mov
mov
add
mov
add
xor
mov
add
not
mov
mov
mov
cmp
mov
movl
mov
movl
je
sub
mov
xor
add
adcl
imul
mov
movl
jmp
sbbl
xor
movl
add
mov
xor
mov
mov
sub
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
call
jmp
sbb
add
mov
xorl
mov
xor
mov
orl
xor
movl
add
movl
cmp
movl
jne
push
pushl
andl
pushl
andl
call
mov
mov
mov
xorl
mov
mov
mov
mov
movl
movl
andl
mov
and
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
andl
mov
xorl
xor
sbbl
add
movl
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
xorl
xor
sub
lea
mov
mov
xor
orl
lea
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jb
and
mov
movl
mov
movl
or
mov
mov
xor
addl
add
cmp
movl
je
xor
mov
xor
addl
add
add
mov
mov
mov
sub
and
mov
xor
and
mov
orl
sub
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
xor
add
adc
add
mov
movl
cmp
ja
mov
and
mov
movzwl
sub
mov
xor
add
movl
cmpl
je
cmpl
jne
push
push
push
push
call
mov
dec
mov
jmp
orl
imul
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
xor
add
and
mov
xor
adc
add
add
mov
mov
mov
mov
mov
mov
sub
or
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
push
sub
push
xor
push
mov
call
pushl
pushl
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
je
mov
jmp
mov
mov
mov
mov
movl
movl
mov
xor
add
mov
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
xor
add
jmp
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
pushl
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
push
movl
push
movl
mov
movl
push
movl
mov
movl
mov
mov
push
not
mov
movzbl
mov
cmp
movl
je
mov
mov
xor
addl
add
cmp
je
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
sbb
xor
add
push
mov
adc
pushl
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
pushl
mov
call
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
push
movl
mov
mov
sbbl
add
andl
xor
movl
cmp
jne
and
mov
mov
movl
add
mov
mov
mov
movl
xor
and
push
xor
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
movzbl
adc
mov
xor
mov
addl
xor
subl
add
movl
mov
mov
movl
movl
mov
movl
push
mov
movl
mov
cmp
movl
je
orl
mov
addl
xor
adcl
xor
xorl
lea
negl
xor
movl
cmp
movl
jne
jmp
add
mov
xor
addl
add
andl
mov
movl
mov
xor
and
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
call
jmp
mov
leave
ret
push
mov
sub
adc
movl
dec
movl
mov
push
mov
adc
xor
mov
add
mov
xor
or
mov
add
mov
push
push
adcl
test
movl
je
mov
mov
mov
sbb
mov
mov
imul
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
sbbl
mov
add
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
sbbl
mov
xchg
sub
xor
orl
mov
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
sub
mov
xor
sub
xor
add
mov
movl
mov
movl
je
andl
mov
xorl
xor
andl
add
cmp
jne
adcl
pushl
call
subl
mov
movzwl
add
mov
mov
mov
or
mov
sbbl
mov
xor
andl
add
cmp
je
pushl
pushl
orl
call
movl
mov
mov
add
mov
xorl
xor
add
movl
cmp
movl
je
orl
mov
mov
mov
sbb
mov
mov
notl
add
movzwl
sbb
mov
sub
mov
subl
mov
add
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
orl
mov
mov
subl
add
adc
xor
mov
sub
mov
xor
add
mov
sub
mov
add
xorl
lea
mov
xorl
push
pushl
subl
pushl
orl
call
mov
xor
add
sub
mov
mov
notl
xor
decl
add
movl
cmp
movl
jne
inc
mov
movl
inc
movl
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
