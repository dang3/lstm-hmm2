push
mov
sub
push
lea
push
addl
push
subl
call
xorl
push
incl
xor
inc
movl
push
decl
push
andl
call
xorl
test
movl
je
xor
movl
jmp
push
xor
mov
incl
push
addl
push
call
andl
test
je
sbbl
lea
push
orl
call
jmp
push
inc
mov
push
adcl
push
push
orl
call
andl
test
movl
jne
mov
orl
push
sbbl
push
adcl
call
test
movl
je
orl
push
xorl
push
push
subl
call
adcl
test
jne
push
push
call
xorl
test
movl
jne
addl
push
orl
push
push
call
xorl
test
jne
andl
push
push
sbbl
call
movl
jmp
movl
add
mov
mov
movl
addl
movl
lea
mov
mov
sub
sub
mov
xor
lea
mov
xor
add
xor
mov
mov
movzbl
or
mov
mov
mov
mov
addl
xor
xor
mov
andl
add
mov
mov
cmp
jne
sbbl
mov
mov
inc
mov
xor
addl
add
mov
negl
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
jmp
add
mov
mov
add
mov
mov
mov
mov
and
mov
mov
mov
sub
sub
mov
mov
sbb
mov
adc
mov
movl
cmpl
je
cmpl
jg
jmp
pushl
call
mov
dec
mov
jmp
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
mov
adc
movl
movzwl
xor
mov
mov
xor
orl
add
movl
jmp
adc
mov
addl
xor
subl
lea
orl
push
negl
mov
xor
adcl
lea
orl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
subl
pushl
adcl
call
movzbl
sbb
mov
adc
xor
sbb
lea
mov
add
mov
mov
adcl
xor
xorl
xor
add
xor
mov
sbbl
xor
lea
movl
cmp
jbe
mov
and
mov
mov
movl
mov
sbb
mov
neg
mov
sub
xor
movl
mov
mov
mov
movl
cmp
movl
jne
orl
push
xor
movl
inc
andl
push
push
adcl
call
orl
test
jne
xorl
push
push
xorl
call
test
jne
adcl
push
push
push
call
test
movl
jne
addl
push
negl
push
andl
call
orl
test
jne
sbbl
lea
subl
mov
lea
orl
mov
xor
mov
andl
test
je
xor
mov
mov
xorl
mov
andl
xor
add
inc
mov
cmpl
jbe
jmp
pushl
call
cmpl
jb
mov
movl
cmpl
je
cmpl
ja
jmp
push
pushl
pushl
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
pushl
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
orl
mov
mov
movl
cmpl
je
cmpl
jbe
jmp
push
pushl
pushl
pushl
call
xor
xor
dec
mov
jmp
cltd
mov
movl
cmpl
je
cmpl
ja
jmp
call
xor
add
dec
mov
jmp
mov
add
mov
adc
and
andl
xor
mov
mov
mov
and
mov
andl
xor
add
mov
movl
adcl
adcl
xor
subl
mov
mov
xor
mov
movl
cmp
movl
jne
mov
mov
cmp
movl
je
movl
cmpl
je
cmpl
jbe
jmp
pushl
call
mov
dec
mov
jmp
mov
orl
mov
addl
mov
xor
add
adc
xor
xor
cmp
movl
jne
cmp
movl
jne
mov
orl
mov
sbbl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
pushl
call
jmp
mov
mov
mov
add
notl
mov
jmp
mov
movl
cmp
movl
je
xor
xor
adc
mov
mov
mov
xor
add
movl
cmp
movl
je
xorl
push
xor
inc
sbbl
push
subl
push
adcl
call
orl
test
movl
jne
movl
push
addl
push
call
test
jne
andl
push
push
push
sbbl
call
orl
test
movl
jne
push
addl
push
call
addl
test
jne
movl
cmpl
je
cmpl
jle
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
or
mov
mov
mov
pushl
movl
mov
pushl
movl
add
mov
orl
mov
movl
pushl
sbbl
call
mov
mov
movl
mov
jmp
adcl
push
adcl
xor
sbbl
inc
notl
push
push
call
orl
test
movl
jne
orl
push
addl
push
addl
call
addl
test
movl
jne
xorl
push
push
push
call
test
movl
jne
subl
push
push
call
test
movl
jne
andl
push
push
push
call
test
movl
jne
adcl
push
subl
push
call
notl
test
movl
jne
sbbl
push
push
subl
push
call
test
movl
jne
subl
push
adcl
push
sbbl
call
test
movl
jne
mov
andl
mov
inc
mov
cmpl
ja
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
decl
add
movl
cmp
jne
sbbl
mov
mov
andl
mov
xor
subl
add
cmp
jne
movzwl
and
mov
adcl
push
xor
add
adcl
push
decl
push
sbbl
pushl
andl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
xor
mov
inc
lea
mov
lea
mov
mov
test
je
push
push
push
call
test
jne
push
push
call
test
jne
push
push
push
call
test
je
lea
push
call
jmp
push
push
call
test
je
xor
jmp
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
inc
ret
push
mov
sub
mov
sbb
mov
mov
addl
mov
movl
movzwl
sub
mov
dec
jmp
sub
jae
xchg
xchg
pop
int3
add
jns
jl
jl
pop
jl
adc
and
popa
pusha
push
jp
insb
insl
xor
fdivrp
push
arpl
stos
jp
push
iret
pop
dec
cmp
dec
jg
mov
jmp
cld
imul
xor
mov
andl
push
mov
fldl
or
and
inc
push
and
mov
sub
mov
jbe
ret
sbb
jb
jnp
xchg
pop
cmpl
cwtl
je,pt
add
sub
push
sti
iret
mov
or
out
push
dec
push
cmp
xor
lods
inc
int3
cmpsl
dec
fiaddl
push
std
push
push
movsl
icebp
bound
loopne
aad
sub
xor
nop
xchg
xor
lret
adc
sbb
cwtl
sti
mov
pop
pop
aaa
ja
dec
inc
leave
scas
jnp
cmp
push
inc
mov
jge
cmp
das
pop
push
mov
stos
in
cmp
or
dec
inc
mov
or
push
or
jns
shl
aaa
adc
pop
sub
aam
ss
leave
push
and
cmp
push
cmpsl
fimull
mov
repz
jno,pn
or
jns
ljmp
cltd
lahf
orb
pop
inc
push
das
pop
loop
lcall
std
stos
stos
cmp
test
cs
jp
dec
sarl
cwtl
add
lods
or
xor
mov
dec
cld
mov
test
shlb
jne
test
sar
addr16
sbb
je
inc
push
mov
clc
aad
mov
mov
mov
adc
xchg
outsb
je
pop
mov
dec
fs
inc
fnsave
sbb
add
aad
pop
xchg
dec
fists
std
fidivrl
ret
outsb
or
popa
add
push
push
push
jbe
push
sub
jecxz
jge
jno
int
xor
aad
mov
fistpll
icebp
inc
jg
pusha
loopne
mov
aaa
jp
and
dec
rolb
mov
jbe
cmp
mov
int3
pop
ss
push
outsl
sub
outsb
xor
sub
or
cmc
call
stos
push
rsqrtps
inc
xor
and
nop
xor
mov
sub
xchg
and
out
or
sub
jmp
jae
lods
lods
fnsave
adc
inc
mov
dec
push
loope
mov
jmp
xchg
cmp
mov
mov
mov
fld
add
pop
jnp
xchg
pop
lods
popa
sahf
add
push
xor
lods
pop
call
fidivrl
pop
cs
cmpsb
fbstp
add
call
in
test
hlt
popf
pop
inc
cwtl
mov
push
mov
int
fs
sub
pop
ss
xchg
or
lret
and
mov
adc
fsts
ret
dec
call
jg
mov
mov
add
mov
or
push
sti
clc
addb
add
add
push
aaa
or
xchg
mov
cli
xor
add
sub
mov
insb
mov
inc
pop
mov
repz
adc
mov
mov
xchg
sub
fsub
scas
into
clc
pop
and
std
rorb
mov
xor
sub
cs
cltd
mov
sbb
inc
pop
orl
cltd
dec
ss
inc
mov
in
mov
loope
cmpsl
orb
sbb
scas
lret
push
or
push
jae
cld
mov
and
pop
adc
dec
xchg
ja
sub
sub
jge
sahf
inc
stos
cmc
sub
les
push
sti
insb
sub
arpl
push
adc
arpl
push
sti
lods
cld
lret
stos
cmc
fwait
add
push
sahf
inc
ja
into
ljmp
fildll
inc
shr
sti
cltd
push
adc
daa
andb
jge
push
inc
into
and
int
outsl
mov
add
out
sub
rclb
jl
psubusw
xor
push
shl
lret
inc
cmp
lcall
mov
test
testl
push
jbe
fmull
mov
lret
dec
or
ja
xchg
cld
mov
shl
jp
in
push
rclb
enter
xchg
cmpsb
dec
int
rcl
dec
testb
ret
nop
and
aas
lods
popa
jl
or
movsl
lods
mov
jmp
pop
mov
out
mov
jmp
gs
push
out
sarl
mov
in
mov
push
mov
stc
rcr
out
push
sub
out
loop
push
inc
dec
test
mov
mov
aas
mov
movlps
lds
aas
mov
scas
insl
cmc
adc
orl
aad
or
rorl
pop
shrb
addr16
fdivrs
mov
ds
lods
aaa
push
mov
cs
inc
into
dec
inc
pop
scas
and
push
hlt
pop
push
insl
cmp
popl
fnstcw
adc
mul
mov
in
in
test
in
add
fstl
cmp
push
mov
mov
adc
jae
insl
dec
lea
cmc
loop
roll
push
in
das
out
xchg
or
push
ds
out
imul
lds
push
scas
dec
xchg
jg
adc
mov
xchg
stc
dec
test
inc
and
pop
adc
xor
dec
mov
dec
repnz
imul
lods
xchg
add
repz
push
jg
imul
sub
pop
cmp
int3
mov
test
test
xor
jmp
xchg
push
lret
cli
or
add
push
jb
in
adc
mov
xor
test
dec
nop
jbe
cmp
mov
sbb
cmpl
daa
js
sub
pusha
add
mov
push
cmp
int
or
xor
dec
repnz
mov
mov
jle
ret
ss
push
sbb
sub
jmp
add
sbb
loope
rorb
sbbl
push
pop
repz
mov
pusha
or
pop
faddl
hlt
push
push
stc
push
push
aaa
int
add
xchg
xor
sahf
push
mov
push
enter
js
mov
xchg
and
cltd
mov
scas
or
and
mov
jne
in
sahf
ljmp
sbb
fistpl
add
push
mov
jns
cmp
pop
push
mov
jae
or
sbb
xor
pushl
adc
sub
das
adc
and
imul
lods
lcall
fistl
cmp
and
in
add
xchg
pusha
arpl
jge
jge
sbb
adc
jns
pop
mov
fiaddl
das
rolb
daa
add
cmp
mov
hlt
popa
incl
ds
sarb
mov
jmp
fdivs
push
push
inc
dec
mov
mov
inc
icebp
icebp
sub
inc
jp
pusha
pop
aaa
les
out
cmp
inc
lods
jb
pushl
add
xor
xor
mov
and
lret
xor
rdtsc
jp
or
jno
mov
int3
call
adc
das
mov
ja
ljmp
test
jne
mov
fucomip
xor
test
movsb
cmp
dec
stc
push
xchg
nop
jg
and
jno
mov
push
pop
ret
and
mov
inc
xor
cmpsb
and
sub
cmp
ljmp
sti
sub
sarb
fstpt
jo
add
loop
push
jns
add
cmp
xchg
insl
push
jne
push
jl
cs
inc
pop
jae
insl
popa
add
cmp
aas
push
mov
and
fnstsw
shlb
pop
cmp
mov
jne
movsb
mov
jl
mov
pop
mov
add
je
sbb
jge
idivb
nop
adc
mov
mov
and
jp
jno
btr
iret
out
daa
or
mov
xchg
and
and
mov
add
pinsrw
aad
in
and
xor
les
scas
out
mov
ror
push
sbbb
pusha
xchg
xchg
fsubl
fsub
and
cli
das
mov
decl
add
mov
push
in
sti
sub
fs
outsl
pop
popf
rorl
mov
add
int3
jp
xor
mov
push
ret
loopne
sti
sahf
jo
pop
pop
push
test
mov
push
aaa
sbb
lock
mov
and
fwait
pop
sub
xor
jae
cmp
iret
jne
insb
fidivs
and
pop
jle
cmp
in
xor
gs
fmuls
cmp
aaa
cltd
in
or
test
stc
fldl
movsl
scas
inc
jecxz
mov
cli
test
inc
adc
mov
jmp
add
xchg
sub
pop
adc
mov
add
fcomip
repnz
cmpsl
push
popa
outsb
xor
pop
out
sbb
or
add
out
sub
in
popa
dec
imul
sbb
xor
dec
in
xorl
popl
jo
dec
je
test
pop
jbe
sub
or
mov
pop
ucomiss
mov
in
add
mov
out
icebp
xor
push
stos
insl
and
vfrczpd
sti
bound
dec
jle
dec
test
push
repz
test
hlt
aaa
dec
fwait
inc
enter
mov
cmc
push
loope
or
push
mov
sub
in
push
mov
mov
mov
sub
into
imul
jmp
hlt
xlat
mov
arpl
mov
decl
dec
jg
js
rorb
ljmp
inc
scas
lds
test
inc
or
inc
addps
mov
inc
push
cli
enter
pop
xor
and
leave
xchg
cmc
bound
push
cltd
mov
xchg
jo
movsb
cmpsl
cmp
jno
jg
aas
mov
nop
push
and
jg
dec
les
ficompl
sub
ficoml
aad
pop
pop
mov
adc
jo
inc
dec
pop
jle
adc
mov
aas
xor
xchg
add
rol
xor
jge
push
dec
mov
shlb
xor
test
hlt
lods
mov
aaa
outsb
decl
movsb
and
push
cmpsb
inc
scas
sti
je
je
popf
mov
xchg
mov
and
out
xchg
mov
jns
cltd
cmc
mov
stos
fnstsw
or
cmpsl
mov
pushl
cmpsb
movsb
es
into
sbb
jmp
ret
mov
icebp
push
js
dec
arpl
and
sub
jne
in
mov
arpl
mov
sub
add
sub
inc
ret
sti
fcomps
inc
les
notl
rcrl
mov
je
dec
xlat
ds
add
stc
pop
enter
mov
ss
movsl
pop
push
and
lods
add
fwait
xor
js
mov
mov
arpl
jmp
mov
mov
in
sti
sub
stos
ljmp
iret
stos
push
sbb
in
xor
jg
or
int
stos
or
push
call
lods
inc
test
pushf
adc
dec
es
jmp
mov
dec
and
fwait
imulb
repnz
jno
lcall
cmc
jnp
mov
sarb
mov
sbb
orb
add
fists
jnp
lahf
xlat
add
push
cmpsb
dec
jae
cmp
xchg
rorb
sti
dec
add
pop
clc
bnd
das
and
or
lahf
mov
pop
jbe
jnp
or
xor
in
adc
jno
ret
movsb
or
xchg
add
lea
xor
lret
and
loop
fstps
xor
dec
sahf
and
test
adc
or
sub
je
or
xor
insl
cld
je
jb
decb
in
mov
arpl
dec
inc
loop
xor
stc
pop
jb
rorb
and
jg
stos
aas
js
out
xchg
adc
inc
adc
sahf
sbb
sub
mov
mov
js
or
shlb
loop
leave
xchg
fistpll
lea
sub
mov
push
ja
pop
push
stos
jbe
cmpl
or
shll
lds
dec
sbb
fs
js
stos
mov
push
dec
adc
push
pop
xor
mov
stos
mov
mov
mull
pop
sub
mull
cmpsb
push
adc
pop
test
jle
ret
fsubrs
jns
pop
repz
test
addr16
jb
andl
mov
aas
insl
cs
sar
outsl
jae
lock
jle
jo
int
pop
ljmp
sahf
aam
adc
sub
xchg
sbb
daa
roll
nop
in
mov
cmp
cmpsl
outsb
ljmp
idivb
xchg
mov
jge
pop
repz
sti
jb
cmp
jg
loop
or
and
inc
mov
push
dec
ja
in
clc
decb
cmc
fcoms
mov
shrl
cwtl
shrl
jne
mov
rolb
or
add
sub
push
test
clc
aas
xchg
adc
imul
jmp
jae
jmp
nop
inc
mov
sub
add
cmp
mov
or
repz
in
fimull
fiadds
outsl
and
mov
testb
or
leave
adc
insl
fidivl
mov
je
popa
popf
aad
rcll
rorl
cmpsl
notb
mov
shll
cmp
bound
lahf
pop
mov
inc
mov
dec
sbb
adc
sub
jns
sahf
and
add
aas
sahf
std
dec
xchg
cmp
sti
lds
sub
outsl
in
lods
js
fstpt
aas
push
test
push
xor
cmpsb
jae
rcll
and
mov
xor
push
clc
fbld
aad
inc
adc
ja
dec
dec
fwait
xchg
ds
and
xlat
int3
repz
andb
or
mov
sbb
mov
mov
push
mov
mov
push
popa
pop
cwtl
insl
push
xchg
cvtpi2ps
mov
or
xchg
loope
push
xlat
xchg
lds
repz
add
pop
aam
mov
jbe
loopne
jg
inc
ds
push
or
nop
jge
and
stc
outsl
movsb
insb
lcall
mov
push
xorb
inc
mov
fmulp
mov
int3
add
fwait
mov
and
stos
cmp
xchg
or
mov
daa
cmp
loop
mov
mov
dec
xor
jo
loopne
push
mulb
xchg
inc
insl
fildll
xor
rcl
pushf
fdivrl
xor
stos
mov
push
jecxz
pusha
std
pop
pop
and
inc
out
clc
mov
mov
ss
jmp
lret
lea
xchg
shll
pop
cmp
shl
cli
out
mov
push
xchg
orl
push
out
loope
or
aas
xor
ds
mov
lock
mov
xchg
sbb
rcl
push
push
clc
and
pop
fiaddl
pop
mov
es
mov
daa
iret
cltd
add
mov
xchg
stos
scas
jle
sub
cmpb
pop
sub
fstpt
jmp
xchg
adc
mov
add
dec
sbbl
movsb
jbe
mov
sbb
mov
or
js
cmc
adc
or
inc
lahf
push
sub
push
add
je
out
shlb
lahf
cmpsl
pop
push
inc
gs
mov
sub
jnp
mov
inc
jb
push
mov
push
jne
bound
aaa
push
pop
pop
mov
mov
cmp
mov
fninit
mov
jmp
lods
jg
mov
das
mov
stc
mov
inc
pop
pop
fbstp
mov
push
fsubl
cmp
testl
imul
lods
mov
inc
fcmovnu
sub
adc
dec
aam
popa
xchg
arpl
mov
pop
stos
jo
add
mov
lret
test
test
test
test
std
outsl
push
and
add
into
fnstcw
xor
test
pop
outsb
push
add
dec
cmp
jge
adc
add
dec
ds
pop
xchg
xlat
xchg
mov
xchg
add
adc
mov
pusha
push
adc
pop
ss
jo
mov
ss
lahf
jae
scas
bound
push
ja
or
dec
add
mov
cmp
pop
mov
test
fsqrt
mov
jb
daa
subl
scas
mov
daa
js
outsl
sub
mov
xchg
xchg
dec
jnp
cmp
or
jb
in
sysenter
cmp
insb
sub
ja
loop
sbb
ljmp
push
push
mov
add
jb
outsl
pop
dec
dec
loop
and
mov
xor
pop
and
outsb
in
test
pop
pushf
jl
cmp
sub
jae
mov
js
clc
push
test
sub
pushf
mov
inc
cwtl
adc
dec
sarl
inc
mov
lds
push
lods
xor
push
int
mov
lods
and
pop
add
movsl
jno
wrmsr
dec
mov
inc
xor
rol
repnz
dec
rcrb
push
repz
dec
jge
mov
cmp
mov
fbld
push
jmp
push
inc
ror
cmpsb
cs
lret
icebp
mov
push
sbb
lahf
sub
gs
or
fnstenv
jmp
inc
stc
les
push
push
popa
jecxz
mov
fisttpll
insb
xchg
pop
jl
fcomps
or
outsb
andl
out
hlt
popf
pop
xchg
ss
xchg
inc
scas
cwtl
loope
pop
pusha
lea
push
push
gs
sbb
inc
shrl
push
test
push
hlt
jmp
or
sub
sub
int
xchg
cmc
add
in
aam
mov
add
mov
cmpsb
inc
sub
push
xchg
xchg
fs
lods
popf
xchg
lret
pop
lods
jl
shlb
xlat
stos
push
mov
mov
pop
dec
test
adc
xchg
or
es
test
pushf
add
sub
cmp
lods
cmp
popa
test
lret
push
iret
ljmp
and
xor
xchg
aad
sub
mov
or
imul
or
cs
inc
dec
aas
and
xor
mov
shl
fwait
pop
mov
xor
lahf
fstpt
movsb
push
aaa
inc
movsb
popf
out
xor
aas
leave
xor
inc
jbe
mov
repnz
add
notl
lret
pusha
lret
xor
mov
nop
sub
or
lds
jns
out
sbb
lret
shrb
sbb
mov
add
bound
rcll
and
inc
cltd
and
movsl
mov
push
js
sbb
pushf
inc
cmp
in
std
add
fwait
sahf
sar
pushf
push
inc
lock
xor
lea
lods
xchg
or
popa
es
xor
or
outsb
sub
mov
pushf
test
xchg
and
mov
popf
mov
insb
jb
jo
push
push
sub
test
mov
stos
mov
inc
pop
out
jns
hlt
or
mov
xchg
xchg
pop
outsl
mov
ret
add
jg
scas
push
fmull
lods
lret
fisttpll
push
push
sub
jbe
orl
add
pop
sbb
push
fcmovb
pop
and
fnstenv
sub
fcomp
outsb
xchg
repnz
xor
lahf
imul
xor
mov
sbb
adc
fs
jo
sbb
aaa
icebp
adc
repz
cmp
stos
xchg
lock
sbb
sbb
shlb
mul
mov
push
faddp
imul
shll
sbb
mov
jg
imul
repnz
ret
adc
xor
fcmove
cltd
movsl
add
mov
imul
jle
jmp
testb
roll
scas
cmc
inc
lea
cmpsb
xlat
push
push
and
test
xchg
add
push
loope
sbb
arpl
sub
sti
inc
int3
sarl
and
mov
jb
dec
or
or
shlb
push
jns
sub
jbe
cmpsl
stc
pop
cs
xchg
cmpsb
addr16
cmp
popl
ja
mov
fidivl
jge
ficompl
stos
dec
dec
int
mov
test
es
scas
pop
movsb
fdivr
fisubs
cmpsl
xor
xor
pop
scas
leave
sub
into
shlb
lods
stc
xchg
or
pusha
and
loope
jecxz
and
dec
fwait
bound
es
in
in
xor
pusha
xchg
fsubrl
push
mov
sbb
xchg
sub
xchg
xlat
fbstp
mov
aaa
loopne
inc
sbb
jb
or
pop
cmpsl
adc
loop
push
popf
gs
int3
or
xchg
jp
inc
popf
dec
dec
stc
push
popf
pop
in
mov
xchg
mov
testl
repz
shl
imul
pushf
in
lret
dec
pop
mov
nop
xchg
lret
mov
jle
sbb
pop
iret
sbb
leave
sub
mov
test
jl
dec
push
in
add
fcomps
aas
adc
and
popa
sti
mov
clc
test
in
imul
xchg
mov
or
shr
xchg
adc
cmp
xchg
arpl
sbb
xchg
lds
mov
sbb
and
and
mov
adc
daa
and
mov
repz
dec
sahf
inc
pop
xchg
sub
adc
and
lods
test
mov
ret
pushf
jmp
rcrl
fstpl
fsubl
add
outsb
mov
dec
fs
loope
push
leave
outsb
sub
lcall
fimull
sub
ja
fcomps
fists
adc
jge
and
das
cmpsl
push
call
outsb
divb
aad
fisttpl
sahf
test
pop
mov
mov
or
mov
cld
and
fistl
xchg
pop
push
pop
mov
mov
sbb
arpl
scas
sbb
testl
pop
dec
repnz
inc
in
fbstp
xchg
out
sbb
mov
fistpl
sbb
inc
faddl
dec
jae
pop
rcll
and
pop
dec
loop
test
xchg
pop
ja
xor
push
mov
out
fildl
xchg
gs
cmpl
cmc
pop
mov
mov
rcr
mov
fisubrl
sbb
sbb
data16
negl
xchg
sub
mov
mov
ret
adc
dec
adc
in
jne
inc
adc
out
lods
adc
and
sbb
lcall
xor
jmp
cwtl
pop
ret
jl
fdivrl
popf
movsb
or
insl
mov
rclb
mov
mov
push
ret
xlat
clc
mov
test
or
add
push
and
dec
cmc
sbb
popa
rcl
popa
push
test
repz
scas
gs
xor
loope
dec
imul
inc
into
ljmp
ja
pop
rcrb
xchg
push
push
or
jnp
mov
test
sbb
data16
mov
inc
icebp
mov
push
lret
iret
sub
xchg
pushf
pop
cmp
sub
scas
out
call
ficompl
shrb
jbe
xchg
aas
jo
les
stc
push
adc
xor
std
fwait
sub
push
subb
xchg
sarl
mov
pop
sbb
and
push
mov
mov
push
movb
andl
sbb
mov
cld
or
popa
sbbb
dec
aam
inc
xor
shll
sbb
lret
pop
adc
adcl
cmpsb
cmp
cmp
cli
sub
dec
lds
xlat
lods
cmp
mov
mov
xor
imul
inc
and
fstl
mov
das
dec
nop
scas
mul
icebp
fwait
cltd
mull
mov
out
pop
xorl
jmp
push
cmpsl
addr16
or
mov
sub
arpl
orb
add
shrb
addr16
fimull
sub
js
pop
mov
mov
cmp
int3
and
add
inc
das
push
pop
aas
arpl
hlt
jle
inc
xchg
mov
dec
mov
cltd
inc
inc
sbb
jo
out
fmul
sbb
js
lods
mov
mov
xchg
dec
aas
bound
xlat
out
sbb
sar
mov
in
arpl
mov
nop
test
xchg
push
and
test
push
in
push
mov
push
inc
jle
or
and
inc
add
adc
insl
pop
addl
jbe
push
mov
adc
addr16
jp
or
aaa
or
addr16
leave
iret
pop
mov
out
repnz
lea
cld
ficomps
aad
repz
hlt
mov
inc
test
test
mov
sahf
xor
out
test
xchg
lahf
je
pop
xor
push
arpl
push
mov
inc
je,pn
cmp
mov
pop
mov
xor
mul
fwait
push
mov
add
jecxz
in
xchg
dec
pand
dec
xor
leave
loop
push
inc
imul
mov
dec
or
arpl
add
xchg
jl
jle
aas
dec
jbe
and
push
mov
ficomps
xchg
jne
loopne
xor
ja
popa
mov
pop
js
jecxz
mov
out
fmull
cmp
push
popl
rclb
jmp
adc
add
nop
xor
iret
lahf
pop
xchg
sub
push
pop
pop
sbb
xchg
fistps
push
jmp
bound
push
int
push
inc
inc
test
mov
add
push
jl
hlt
pop
cs
sbb
das
adc
stos
fstpl
bound
adc
jae
push
ja
aaa
lcall
cmp
cmpsl
sahf
js
jo
fimuls
mov
cmpsb
mov
lds
push
push
lcall
mov
cld
call
lret
in
push
xor
xor
or
mov
adcl
add
xor
cli
mov
or
insb
stc
insl
inc
bound
xchg
dec
mov
add
test
xor
jl
int3
ss
push
outsb
out
xlat
adc
loopne
inc
push
test
pop
add
pop
psubsw
xchg
insb
mov
adc
adc
fadds
jle
cli
scas
dec
add
or
jo
push
not
pop
idiv
add
out
adc
mov
cwtl
sub
or
dec
lcall
cmp
add
adc
pop
jne
push
rcll
sbb
test
iret
push
inc
dec
stos
or
imul
cmp
and
pop
sub
int3
jnp
pop
clc
pop
das
push
dec
daa
cmp
dec
adc
jp
push
dec
cmp
hlt
shrl
and
cs
cmp
jnp
xlat
inc
xor
mov
cmp
rorl
repnz
lcall
sub
mov
ss
pushf
scas
lret
push
sbbl
or
sub
mov
movsb
loope
ficoml
xchg
dec
pop
into
xor
xor
pop
mov
cmp
pusha
dec
cmpsl
push
or
mov
adc
xchg
jecxz
add
js
arpl
sbb
sbb
xor
fwait
or
pop
adc
arpl
les
jno
fldt
adc
pop
cmp
mov
orb
mov
popf
push
mov
push
push
and
add
mov
sub
inc
sahf
mov
ret
inc
sbb
std
pusha
xchg
and
fildll
inc
jbe
adcl
ds
pop
or
xchg
mov
mov
dec
sub
mov
and
pushl
or
pop
mov
xor
mov
jg
in
sub
cli
cmp
pop
fmuls
fldenv
inc
sbb
cmp
mov
pop
inc
dec
sbb
negb
sub
pop
ds
cli
inc
insl
in
or
cld
pop
xor
movups
xchg
sarb
gs
pop
lods
sub
mov
sbb
mov
mov
lcall
hlt
in
mov
aaa
daa
dec
filds
test
push
add
arpl
xor
repz
test
ret
sub
stos
cwtl
fwait
push
jl
adc
lret
ret
fsubrs
scas
pushf
or
pop
cltd
and
cmp
movsl
jg
nop
jg
jmp
std
in
enter
jge
mov
ljmp
rorb
xchg
or
lahf
push
jle
insl
sub
divb
add
js
dec
js
jmp
mov
repz
dec
fidivrl
ret
push
dec
add
xor
test
mov
stos
fsts
mov
jg
popl
movsb
cmp
xchg
mov
mov
cld
cmp
cld
inc
sbb
mov
inc
xor
shrb
or
push
lret
adc
daa
dec
mov
push
popf
cltd
xchg
out
cmp
jp
lahf
adc
push
lods
mov
shl
jb
out
pop
rep
xchg
dec
pop
movsb
and
cmc
lret
lods
or
dec
push
ret
fsubrs
es
mov
repnz
scas
sbb
out
xor
call
jmp
test
dec
and
mov
sub
inc
and
pushl
dec
outsb
lcall
push
imul
adc
cld
ret
push
sub
sub
nop
std
sbb
scas
test
insl
popl
repnz
jbe
jp
test
stc
std
and
out
add
xor
xlat
push
push
inc
lcall
and
sahf
lods
ds
idiv
cmp
sub
movsb
out
pop
mov
fdiv
xlat
cltd
cmp
jns
jbe
adc
or
and
xchg
jmp
jns
dec
mov
mov
ss
push
incb
test
bound
mov
daa
mov
outsl
dec
mov
mov
inc
push
rcrl
jmp
scas
fadds
xor
mov
leave
or
mov
fimull
pop
ljmp
icebp
out
jle
mov
sub
cmpsl
mov
vxorps
sbb
pop
mov
hlt
mov
loop
fimull
lret
ja
fisubs
jmp
repnz
loop
testl
rcl
mov
cmp
mov
fstp
in
sbb
or
lock
push
inc
xorl
ljmp
dec
hlt
cmc
ror
iret
in
iret
jo
xor
mov
ljmp
jle
xchg
or
cmc
or
xor
call
xor
add
cmc
nop
call
cmp
movsl
add
lods
adc
or
sub
mov
mov
fwait
pop
push
sub
roll
adc
sub
push
loop
jne
aad
jne
inc
add
fiaddl
das
or
movsl
mov
sub
jge
jl
shlb
roll
bnd
leave
rorb
cmp
imul
movsl
test
sbb
test
lds
jns
enter
pop
push
das
dec
cmp
inc
jge
repz
sbb
adc
sub
fildl
clc
fistl
test
mov
es
notb
pop
test
insb
loope
cmp
dec
testl
icebp
xchg
cs
push
or
mov
addl
xor
andl
xor
or
inc
mov
cmpl
jl
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
orl
push
add
mov
add
movl
cmp
movl
je
mov
sbb
mov
xor
xorl
xor
add
movl
add
adc
incl
xor
orl
mov
push
xor
adcl
xor
movl
cmpl
je
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
addl
movl
mov
movsbl
andl
mov
inc
mov
cmpl
ja
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
neg
sub
mov
xor
movl
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
orl
movl
mov
or
push
movl
adc
mov
xorl
push
xorl
mov
andl
xor
notl
push
mov
add
xorl
mov
andl
mov
inc
mov
cmpl
jb
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbbl
test
je
and
mov
andl
xor
add
inc
mov
cmpl
jl
jmp
pushl
call
cmpl
jb
mov
or
mov
orl
mov
adc
xor
xor
or
xor
add
mov
addl
mov
xor
add
and
xor
andl
xor
add
inc
mov
cmpl
jg
jmp
push
pushl
push
pushl
call
cmpl
jb
add
movzwl
sbb
mov
mov
mov
and
xor
add
addl
mov
sub
mov
subl
xor
sub
add
adcl
mov
xorl
sub
lea
xor
adcl
xor
movl
cmp
movl
je
andl
xor
or
inc
mov
cmpl
ja
jmp
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
subl
add
cmp
jne
adcl
pushl
adcl
call
mov
sub
mov
andl
mov
inc
mov
cmpl
jl
jmp
pushl
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
mov
orl
xor
add
cmp
je
pushl
andl
pushl
xorl
call
sbbl
mov
or
mov
mov
or
mov
subl
xor
add
movl
cmp
je
movl
cmpl
je
cmpl
jb
jmp
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
sub
mov
adc
mov
movl
cmpl
je
cmpl
jl
jmp
pushl
call
mov
dec
mov
jmp
mov
or
mov
xorl
add
sbbl
mov
mov
mov
xor
mov
add
xor
add
xor
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
or
push
add
push
xor
mov
mov
orl
mov
or
mov
andl
add
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
cmpl
jne
xor
or
inc
mov
jmp
movl
mov
mov
sub
sub
mov
mov
mov
sub
xor
mov
sub
movzwl
and
mov
mov
xorl
sbbl
mov
movl
cmpl
je
cmpl
jge
jmp
call
xor
xor
dec
mov
jmp
mov
movzbl
xor
sub
mov
sub
orl
neg
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
sub
or
mov
orl
sbb
mov
addl
mov
or
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
jmp
push
out
push
jae
jae
das
push
sbb
cmpsb
rcrl
jl
pop
jl
jecxz
outsl
fbld
movsl
add
ret
dec
sub
mov
xor
push
jg
stos
lahf
das
and
mov
adc
pusha
sbb
ds
or
sub
stos
movsb
outsl
mov
adc
rolb
jge
jns
dec
call
mov
push
and
mov
sub
and
iret
xorl
push
push
addr16
add
or
in
xchg
andb
mov
arpl
gs
icebp
jmp
dec
aaa
punpcklwd
subw
call
mov
movb
outsb
testb
lea
data16
testl
fiaddl
cmp
sub
mov
xchg
push
sti
sub
sub
stos
jecxz
add
dec
mov
pop
loope
cmp
adc
pop
cmp
icebp
sahf
stc
fs
mov
shl
inc
xor
test
mov
inc
dec
lods
inc
setle
mov
pop
leave
inc
test
movsl
nop
and
sub
sub
xor
aad
jecxz
jmp
aaa
xor
xchg
inc
shll
je
pop
filds
sub
sub
inc
js
ret
outsl
add
jg
pop
scas
push
mov
in
sbb
xchg
in
rorl
sbb
mov
sar
adc
es
push
lahf
inc
mov
cmpsl
arpl
mov
lea
cwtl
xchg
jno
xchg
repz
ret
mov
out
adc
enter
shlb
jle
scas
jo
fldl
lods
lods
aas
ret
es
test
cs
adc
int3
mov
cmp
and
repz
outsl
or
pop
scas
pusha
and
fs
test
xor
outsl
pop
dec
ret
dec
jl
jno
out
push
cli
dec
pop
xchg
xor
in
sub
push
stos
push
add
lock
mov
arpl
pop
ret
sub
pushf
jbe
mov
in
lahf
test
mov
ficoml
ss
daa
mov
jmp
lret
test
mov
lock
pop
xor
mov
pusha
adc
push
mov
mov
fadd
xchg
inc
cld
pop
cmp
sub
inc
or
push
out
mov
rcl
gs
xchg
in
insl
push
add
cltd
sahf
data16
dec
ss
sub
out
mov
add
imul
push
mov
les
cmc
xlat
jge
mov
mov
inc
out
aas
adc
dec
xor
je
ds
push
push
add
in
jne
repnz
adc
fiadds
push
sbb
shrb
pop
push
out
and
sbb
repnz
push
push
cltd
por
cmp
mov
jne
fs
adc
hlt
add
dec
es
mov
xlat
jge
xchg
mov
shrb
push
mov
pop
cs
jb
mov
inc
roll
jp
inc
xor
leave
jne
pushf
lret
jg
addr16
jp
movsb
ds
jns
into
cmc
pop
sbb
mov
insl
or
imul
mov
push
sbb
test
ret
cmpsl
inc
dec
adc
mov
shrl
jno
ficoms
ss
fstpt
repnz
add
xorl
lock
add
adc
ja
shll
cs
cld
xchg
xchg
repz
movsb
adc
xor
in
inc
jns
sub
add
xchg
mov
push
add
pop
lods
sub
add
ljmp
leave
out
pop
jge
xchg
add
xchg
mov
add
loop
inc
lcall
aas
mov
jae
mov
mov
cwtl
insl
add
lcall
xor
and
aas
cmp
inc
adc
ret
sbb
fists
mov
or
std
adcb
stc
xchg
xor
cmp
insb
cmp
les
data16
ret
cmp
out
pop
mov
xor
jle,pn
cmp
aaa
out
cltd
pop
inc
mov
inc
jle
pop
mov
sahf
scas
mov
dec
leave
shl
jbe
imul
mov
lcall
popf
xchg
jae
icebp
rcl
fnstcw
xchg
push
fs
sub
cli
cs
inc
ss
mov
testl
mov
push
testb
adcl
adc
in
mov
xor
int
les
cli
in
dec
out
inc
mov
enter
jae
mov
int3
inc
and
sti
sub
adc
sub
mov
imul
ja
push
pop
jae
decb
adc
in
mov
and
or
inc
mov
out
inc
int3
je
push
sbb
pop
mov
fbstp
rorb
sub
fbstp
ret
sahf
inc
cmp
xor
hlt
pop
push
jno
adc
dec
cmp
test
jl
jo
clc
jmp
or
jo
and
xchg
out
in
mov
rcrb
loop
es
fiadds
cmpsb
in
dec
sub
add
pop
cmp
sbb
xor
in
mov
sar
and
xchg
jns
test
add
xchg
cmp
inc
repnz
adc
mov
call
popf
fisttpl
repnz
testb
fdivs
xchg
mov
fdivrl
ja
adc
adc
sbb
test
int3
or
sti
mov
xchg
sub
jbe
sub
lods
out
jns
in
xchg
into
jno
outsl
in
fstpl
imul
in
popa
xor
dec
pop
or
fdivrs
pop
cltd
bound
shll
xor
mov
pop
add
xchg
out
out
inc
mov
adc
packsswb
mov
xchg
fcomp
into
leave
pusha
xor
lahf
inc
jns
enter
xor
gs
lcall
jb
punpckhwd
out
push
insl
daa
sbb
sub
lods
dec
mov
mov
inc
std
cmp
adc
cmpb
pop
push
mov
pushf
movups
fwait
inc
fsts
push
adc
jecxz
out
sub
fildl
int3
pop
dec
jmp
push
xchg
sahf
inc
call
xlat
or
repnz
mov
and
pop
jae
mov
mov
dec
sahf
mov
in
les
inc
lods
neg
add
pop
mov
mov
bound
shlb
inc
adc
addr16
clc
push
and
mov
jle
lods
push
xchg
nop
mov
cmp
imul
mov
mov
stos
or
movsb
pop
mov
mov
ret
push
inc
sbb
adc
dec
rorb
sbbl
daa
xchg
flds
sbb
dec
insl
lret
push
frstor
fiaddl
fistpl
pop
mov
lret
add
mov
fcoml
and
jg
add
and
cmp
cmp
jns
out
push
and
inc
ja
xor
push
sub
cmc
xor
aas
shlb
xchg
mov
inc
adc
xor
inc
lret
out
loop
mov
and
shr
pop
mov
adc
sahf
xor
dec
pushw
and
loop
dec
push
mov
add
push
xchg
daa
mov
mov
stc
mov
out
xchg
sbb
xor
jae
inc
xchg
xchg
cmpsl
sti
inc
jp
push
xor
in
outsl
out
sbb
mov
bswap
test
jp
popf
xchg
notl
xchg
sbb
sbb
fsubrs
mov
mov
add
ret
and
add
xchg
pop
jne
dec
ret
xchg
ret
fimull
stos
mov
mov
or
jg
pusha
sarb
pop
fmull
jae
inc
xchg
int
jge
popa
sahf
rcll
mov
outsb
call
dec
xor
test
sar
mov
adc
mov
pop
aam
xor
xchg
jmp
das
sbb
int
xchg
sahf
outsb
mov
in
gs
icebp
mov
jne
pusha
fcomp
gs
fldl
mov
push
mov
mov
dec
xchg
sarl
add
shr
int
push
push
enter
xchg
mov
repnz
jge
mov
and
daa
ret
or
push
stc
sbb
push
enter
cltd
sbb
pop
inc
lcall
fsubrs
fsts
icebp
pop
outsb
mov
shrb
int
jbe
fsubl
cltd
lret
lods
jno
cmc
pop
movb
ftst
and
xor
out
or
lret
sub
leave
fwait
push
push
sbb
ja
mov
push
cltd
mov
mov
mov
xchg
sbb
jge
shlb
test
mov
test
cltd
dec
movsb
outsb
pusha
cwtl
loop
jle
mov
cmp
aad
mov
lock
std
sbb
jp
sbb
jno
lods
aas
movsb
icebp
imul
jecxz
sbb
fstpl
out
xchg
push
mov
ficomps
sub
or
xorb
das
cmp
jp
mov
bound
or
xchg
lods
mov
ret
dec
mov
test
sub
mov
sbb
hlt
pop
mov
out
push
jno
fdivrl
push
pop
or
mov
cmp
sub
cltd
pop
mov
mov
inc
cmpsb
pop
arpl
adc
js
addr16
sub
je
mov
stos
xchg
jne
sahf
xorb
inc
push
sti
mov
ja
sbb
or
popa
sub
sub
mov
mov
mov
dec
jbe
inc
cmp
nop
adc
test
aaa
out
jae
or
mov
mov
jp
pushf
mov
imul
pop
dec
sbb
icebp
xor
xlat
iret
scas
rorb
adc
or
inc
xchg
out
shl
or
jno
jo
fsubs
rcrb
pop
xor
push
adc
lahf
leave
int3
add
push
and
repnz
loopne
push
in
jne
or
imul
sbb
and
loopne
inc
cmp
xchg
pushl
rcll
jo
stos
test
or
adc
inc
shrb
or
mov
mov
add
out
jmp
in
mov
add
mov
push
cmp
adc
pop
jne
iret
xor
cmp
xlat
push
in
sahf
fstpt
push
adcl
rep
cwtl
pop
sbb
pushf
xlat
les
loop
sub
dec
ret
mov
mov
pop
in
pop
jb
jo
jns
fcmove
push
repz
xchg
mov
lods
xor
xor
xor
jge
ficoml
arpl
jmp
pusha
rcll
dec
xor
lock
mov
mov
cmc
or
add
and
dec
jle
pop
loop
into
push
cli
add
push
push
into
jbe
mov
push
add
pop
int
cmp
sub
push
xchg
daa
icebp
mov
rorb
mov
ss
jmp
pop
cwtl
dec
fdivrl
sbb
inc
cmpsb
stos
fstl
jnp
orl
xchg
dec
push
icebp
adc
je
cmp
push
jg
jmp
negl
ret
jmp
xor
push
dec
aas
push
push
dec
ret
incb
cmpsl
cmp
aam
push
lret
inc
repz
ret
or
add
dec
push
mov
lret
aad
lcall
icebp
cld
pop
dec
inc
jno
mov
subb
in
stos
jp
jg
add
jle
dec
add
xchg
jnp
sbbb
icebp
stc
push
jb
jp
outsl
loop
inc
xor
rcrb
test
ljmp
imul
call
xchg
shl
and
ret
lods
jmp
mov
mov
scas
push
nop
or
dec
mov
jo
into
jae
aad
jno
xchg
adc
cmp
jns
fisubl
outsl
sub
loop
mov
pop
sbb
jmp
inc
inc
mov
sub
nop
adc
add
mov
jmp
pop
sub
repz
addr16
fdiv
push
ljmp
cmc
setne
sbb
mov
out
loope
popa
inc
into
xlat
pushf
std
sti
popf
fildll
push
or
testb
push
scas
xor
inc
loop
adc
imul
inc
dec
lret
and
sbbl
mov
xchg
gs
stc
sarb
mov
sub
test
adc
cmc
jo
xchg
rorl
inc
subl
dec
mov
cmp
mov
adc
fistl
ss
fwait
shlb
iret
inc
test
xor
fs
addr16
jg
mov
ficoml
adc
jle
xchg
daa
mov
cld
mov
sub
daa
in
addr16
inc
jge
dec
hlt
arpl
inc
dec
sbb
imul
push
xchg
jle
lods
inc
xchg
jnp
js
stc
dec
add
sahf
xchg
sahf
les
movsl
lea
outsb
inc
cld
add
mov
mov
add
out
pop
pop
loop
mov
fwait
dec
inc
jge
insl
in
mov
sub
loop
lock
in
mov
xchg
cmpsb
jo
test
dec
xor
pop
adc
pop
fldenv
imul
and
testl
test
jp
and
enter
imul
dec
mov
mov
mov
jns,pn
adc
dec
fwait
ds
std
adc
cmp
sbb
scas
jo
bound
pusha
push
shll
xchg
adc
arpl
test
outsb
mul
push
or
lcall
out
push
movsb
cltd
pop
cwtl
xor
pop
sbb
and
movsl
outsl
stc
into
scas
inc
mov
push
mov
jp
lahf
lods
fwait
std
sbb
rcl
push
out
jl
es
test
aaa
mov
push
push
mov
scas
incl
push
cmp
push
out
sub
dec
xchg
dec
aad
sahf
jmp
out
call
jle
push
jbe
rol
fistpl
jns
mov
sbb
adc
fwait
aad
adc
or
jp
adc
jg
js
cmp
jmp
hlt
shrl
mov
inc
es
mov
lret
jbe
adc
clc
fdiv
aaa
mov
insl
pop
or
rcr
lds
push
jmp
pop
shlb
pop
push
loop
jb
packsswb
inc
xor
xchg
dec
fistl
movups
sub
aam
jecxz
jge,pn
mov
pop
pop
or
pop
out
es
mov
js
xchg
and
mov
test
lret
inc
push
xor
mov
xchg
addr16
lret
dec
in
fldt
outsl
mov
and
stos
xchg
in
push
int
rorl
out
xchg
mov
rcr
xor
jl
push
xchg
and
cmp
dec
xor
lret
or
mov
std
popa
lret
in
sbb
ret
repnz
push
jbe
push
imull
fwait
cmpsb
mov
movb
fbstp
dec
cmpsb
cmp
int
jmp
dec
mov
mov
imul
add
dec
sbb
sbb
mov
jle
push
pop
iret
shl
ljmp
sub
dec
pop
ja
popf
shl
mov
jg
sbb
cmpsb
rcrl
adc
jo
out
ja
push
sarl
loopne
jno
mov
dec
daa
xchg
inc
dec
pop
cmp
pusha
push
mov
add
cmpsl
out
xor
pop
jae
mov
xor
push
cmp
inc
out
iret
sbb
repz
jnp
stc
mov
je
inc
sahf
shrb
cmp
mov
jno
xor
and
pop
push
jg
loopne
dec
and
or
and
jae
mov
or
dec
and
mov
mov
jge
dec
adc
mov
dec
pop
andl
cmp
mov
mov
out
adc
lahf
sarb
adc
dec
flds
out
pop
or
xchg
push
jae
ja
fwait
and
inc
call
loope
mov
push
pop
repz
sub
jle
mov
fisubl
repz
xchg
xchg
scas
push
imul
cwtl
cmp
jne
frstor
dec
xchg
pushf
xchg
or
lds
in
xchg
int
int3
mov
or
ret
and
ljmp
in
mov
aas
adc
fdivr
and
cmp
push
mov
adc
or
stos
mov
bound
xchg
outsb
fdivs
mov
mov
stc
sbb
push
mov
int3
mov
movsb
and
iret
icebp
adc
ds
pusha
cwtl
mov
cmpsb
dec
sbb
mov
aas
test
jae
sub
mov
ror
jno
aad
pusha
sbb
daa
pop
bnd
test
cmp
mov
faddl
test
lret
adc
xor
iret
loopne
lea
cmpsb
fisubl
pop
jo
out
xchg
pop
lods
xor
fistps
lret
mov
mov
or
ret
mov
adc
mov
and
jle
test
stc
cmp
jmp
push
ret
repz
add
xchg
lods
jle
mov
pusha
roll
jmp
inc
push
dec
js
xor
leave
add
inc
sub
mov
test
out
pop
or
repz
std
mov
xchg
fs
push
pop
jl
jle
and
xchg
pop
mov
insl
leave
pop
test
stos
push
dec
inc
cmp
or
js
popa
clc
push
fnstsw
rolb
xor
xchg
xor
repz
dec
sub
push
mov
push
pop
pop
jne
push
adc
faddl
mov
int3
push
cmp
sub
das
addr16
fisubs
or
xor
dec
pop
pop
lods
cmp
push
mov
push
ficomps
clc
xor
xchg
xchg
rcrl
cmpsb
leave
cmp
fnstenv
mov
sbb
out
and
pop
sti
shlb
test
sbb
int3
dec
adc
into
add
add
ficompl
insb
loop
repz
jo
in
push
sbb
enter
insb
xchg
divb
add
test
xchg
notb
push
addr16
inc
sbb
xchg
mov
loopne
lea
pop
stos
pop
int
mov
pop
ds
pop
dec
pop
add
xor
mov
cltd
lea
dec
mov
int3
iret
mov
xchg
dec
mov
xchg
scas
sub
jb
shll
inc
add
or
mov
mov
sti
movsb
fdivl
push
movsb
jg
jb
cmp
mov
movsl
mov
cmpsl
mov
arpl
test
sub
fs
fwait
push
daa
adc
int
inc
aaa
movsb
push
xor
mov
push
pop
test
out
push
outsb
inc
jg
jmp
mov
sbb
dec
mov
push
and
mov
mov
aam
dec
in
mov
pop
xchg
add
dec
test
cwtl
sbb
ss
xchg
jae
lock
ss
fisubl
addr16
adc
jbe
cld
xor
insb
ret
test
jle
xchg
ljmp
mov
sbbb
cmpsb
inc
sub
cmp
lock
pop
mov
add
test
fmul
and
jnp
push
negl
add
in
outsb
inc
lahf
fisttpll
adcl
and
jmp
push
xchg
or
int
scas
jo
idivb
fucomip
adc
jle
xchg
xchg
or
mov
mov
add
xchg
fs
dec
jns
adc
cwtl
mov
mov
push
mov
aad
repz
add
mov
mov
push
cmp
and
adc
or
xor
test
mov
je
mov
xlat
xchg
outsb
add
popf
sbb
pop
xchg
mov
sub
jge
movsl
stos
sbb
sbb
scas
aas
jl
cmp
test
xor
adc
mov
aaa
movsb
dec
pop
call
fimuls
ja
sahf
cmc
or
mov
lea
ja
mov
lahf
add
rclb
cmc
ja
fdivr
pop
jmp
and
or
sbb
fidivrl
mov
loopne
mov
sahf
inc
mov
add
inc
test
loope
iret
or
adcl
int3
rorb
cwtl
mov
outsb
mov
dec
vpminsw
or
xor
sbb
call
xchg
add
les
and
repz
mov
mov
lds
call
mov
repz
test
inc
sbb
pop
out
nop
lock
sti
jnp
daa
xchg
mov
shl
xor
mov
hlt
lcall
pop
mov
sarb
mov
or
inc
cmp
ja
in
clc
popa
mov
sbb
sub
aam
cs
inc
sbb
jbe
test
jae
inc
movl
fwait
jae
fsub
adcb
cltd
push
outsl
shll
call
std
rcr
punpckhwd
jl
cmc
xchg
xchg
cmp
jmp
mov
les
xor
mov
xor
sbb
xchg
xlat
adc
xlat
mov
rcr
or
mov
repz
xlat
mov
mov
mov
jl
sbb
mov
xchg
movsl
outsl
pop
in
xchg
jge
adc
int3
lea
sbb
push
pushf
dec
pop
jns
adc
out
mov
js
push
lahf
xchg
int3
sub
int
popa
pop
xchg
add
sbb
cmp
stc
in
lock
add
movsb
ss
lahf
and
add
outsb
js
xchg
aad
clc
add
inc
pushf
sbb
mov
push
repnz
popa
push
les
lock
adc
adc
sub
push
jp
jecxz
and
rol
aad
inc
jle
xchg
mov
outsb
sbb
ljmp
and
and
testl
push
pop
stos
jbe
dec
push
and
and
cwtl
js
movsl
mov
cmpsl
mov
cmpsl
mov
sbb
and
std
push
lods
jmp
imul
fcoms
jne
mov
mov
adc
arpl
dec
push
push
adc
add
or
sbb
cmpsl
pop
stos
xor
xchg
mov
sbb
or
push
add
jmp
mov
push
push
insl
xor
stos
xchg
pop
mov
lock
bound
dec
das
mov
or
ret
jo
fs
push
sbb
cmpsl
cmp
pop
and
jmp
add
push
bound
dec
out
lea
pop
lret
pop
cmc
dec
push
lods
add
cs
stos
xchg
imulb
adc
push
mov
push
daa
rep
add
push
pusha
and
movsl
cmp
mov
and
scas
arpl
outsl
rorb
aaa
and
out
rorl
rcll
mov
jg
mov
mov
stc
in
aad
xlat
push
cmp
sti
fdivl
inc
add
push
xchg
sahf
jle
pop
pop
inc
daa
jbe
jo
or
pushf
ljmp
dec
movb
es
jo
pop
ffree
jmp
inc
mov
les
xor
ljmp
push
adc
pop
arpl
jp
dec
jle
and
shr
movaps
jns
repnz
jae
sbb
fcomps
lcall
addr16
icebp
cmp
mov
mov
rcr
xor
sbb
loopne
sahf
in
and
out
aaa
mov
or
mov
xor
pop
mov
enter
aas
ret
xor
cld
pop
adc
hlt
out
stos
cmp
std
enter
out
inc
xchg
sbb
dec
xor
add
aaa
loop
test
shrb
sub
fisubs
les
arpl
cmp
mov
fidivrl
inc
cs
cmp
inc
add
int3
lret
push
cld
xchg
dec
mov
push
push
lret
pop
pop
jno
xchg
jge
jmp
outsb
movsb
aas
mov
loop
cmp
xor
mov
mov
sbb
jae
fs
mov
inc
sahf
shll
in
dec
dec
mul
mov
or
sub
jne
inc
pop
mov
out
inc
ret
mov
loopne
sahf
lret
xor
mov
mov
adcl
mov
popa
cmpsl
xor
jae
imul
add
jl
mov
mov
xor
adcl
notl
inc
pop
lahf
push
push
hlt
mov
xor
scas
push
data16
adc
mov
or
dec
roll
adc
add
jne
pop
les
cltd
inc
xchg
jmp
fcoml
cmp
lret
insb
jle
gs
mov
ficoml
or
or
and
cmpsb
push
or
mov
ret
repnz
das
dec
xchg
ret
mov
jge
cltd
cmp
hlt
aas
cmpsb
lret
push
test
std
xchg
mov
fs
mov
add
in
int3
xchg
js
sbb
and
xchg
hlt
pop
ss
and
xor
insb
fcompl
bound
scas
inc
aaa
aaa
dec
in
adc
sbb
jns
int3
into
dec
xor
cmc
inc
jne
pop
jmp
and
arpl
jns
jb
arpl
pop
fs
mov
cltd
xor
daa
jl
jb
or
cmpsl
popa
enter
scas
xchg
repz
add
stos
mov
ljmp
ret
dec
xor
mov
mov
lahf
cwtl
mov
or
stc
daa
lret
mov
jecxz
movsb
jns
adc
push
loop
cmp
jb
xor
lds
cs
in
aaa
mov
fcompl
addl
xlat
inc
adc
fdivrl
mov
push
enter
ljmp
js
add
js
cmpsl
mov
push
repz
xor
push
inc
lcall
stc
sub
bound
iret
push
repz
pop
js
clc
int3
adc
mov
enter
dec
imulb
mov
push
sbb
sbb
jl
insl
mov
mov
dec
mov
iret
adc
dec
mov
fsubl
adc
jmp
shll
xchg
add
inc
cltd
push
mov
pop
and
xchg
push
movsl
xchg
test
mov
jg
add
cmp
sbb
aas
fisubl
ljmp
out
pop
mov
popf
inc
sub
pop
fnstsw
out
xor
sbb
daa
sub
stos
mov
scas
push
and
movsb
stos
pop
sbb
xor
xchg
jp
mov
nop
je
inc
js
add
lcall
pop
jns
mov
push
js
push
xchg
cmpsb
add
add
or
pop
ljmp
mov
pushf
leave
add
int3
cli
nop
orb
fisubrl
mov
cmp
stc
cmpsl
adc
inc
aad
mov
or
sbb
js
push
cmc
enter
push
addl
ret
mov
xchg
aaa
or
mov
sub
shll
pop
add
mov
dec
push
and
mov
pop
mov
dec
lahf
and
repnz
xchg
add
ljmp
int3
fisttpll
sahf
add
aam
aam
sbb
nop
lret
push
jno
dec
aas
and
pop
fdiv
mov
aas
ret
lods
add
aad
ret
ret
andb
mov
xchg
dec
mov
cmp
filds
mov
mov
jp
sbb
rorb
inc
jl
movsb
and
dec
jb
pop
jmp
scas
mov
mov
xchg
divl
sbb
mov
xor
push
dec
das
arpl
xor
pop
push
xchg
imul
add
sbb
add
push
adc
test
xchg
scas
sub
aam
inc
insl
icebp
sub
outsl
in
cmpsl
aaa
inc
psubq
cmp
jbe
push
test
push
mov
jb
cwtl
push
xor
movsl
out
in
fstpl
inc
out
add
loope
and
xor
adc
xchg
test
lea
ret
cmp
pop
or
push
rcll
mov
dec
sbb
pop
adc
test
mov
mov
sub
outsl
xlat
cmp
xor
repnz
mov
std
enter
xor
sbb
cmp
fsubs
cmp
rcr
and
in
sbb
xchg
adc
inc
xchg
adcb
movsl
jmp
adc
out
movsb
int3
mov
push
sub
imul
fisttpll
mov
clc
or
sub
mov
jle
das
cmp
pop
sub
dec
cmp
fnstsw
xor
lods
dec
repz
or
dec
sub
lock
or
mov
out
into
dec
push
cwtl
sbb
cmp
mov
hlt
ficomps
mov
test
arpl
inc
inc
dec
inc
mov
daa
ja
mov
mov
jge
pop
shlb
xchg
stos
sti
adc
int
dec
push
cmc
fcomps
cmp
pop
and
jmp
mov
dec
repnz
dec
push
mov
add
add
adc
push
jmp
adc
mov
push
pop
inc
daa
or
pop
fsubs
add
push
shlb
lret
mov
lret
ja
loope
jae
out
in
and
or
lcall
mov
push
pop
add
and
ret
and
jge
and
jl
popa
aaa
jp
lds
push
mov
aaa
push
stos
notl
cmp
out
xor
pop
adc
jge
call
addr16
sbb
inc
mov
pop
pop
int3
mov
cmp
fs
rcrb
bound
loopne
ljmp
jge
fs
mov
cli
xor
or
int3
push
ficomps
push
in
xor
int
lret
inc
dec
cmp
js
sub
ja
jp
aaa
add
ret
lcall
dec
sbb
sbb
imul
aam
push
in
cmpsl
in
push
stos
dec
test
mov
movsb
adc
and
sbb
pop
xorb
and
or
fwait
popf
add
push
dec
test
dec
xchg
loop
jnp
lcall
jb
imul
pushf
mov
paddb
into
adc
out
mov
orl
push
and
lods
inc
push
cmp
fs
cmpsb
rolb
mov
outsb
scas
push
add
scas
add
dec
insl
pop
sbb
cwtl
adc
mov
mov
pop
sub
imul
jne
pop
add
repnz
lock
sub
fiaddl
dec
sub
ffree
cmc
lods
dec
sbb
je
mov
in
movsl
push
add
xlat
rolb
int3
test
mov
push
cmpsb
inc
add
jne
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
lea
adc
mov
adc
push
xor
mov
xor
mov
lea
adc
mov
movl
cmpl
je
cmpl
jg
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
xor
add
adcl
mov
subl
mov
sbb
mov
orl
mov
addl
add
push
mov
mov
andl
xor
xor
inc
mov
cmpl
jle
jmp
push
call
cmpl
jb
mov
mov
adcl
xor
mov
add
movl
cmp
movl
je
movl
mov
movl
jmp
mov
cmp
jne
movl
push
jmp
mov
mov
cmp
jne
sub
mov
xor
movl
cmpl
je
cmpl
jl
jmp
pushl
call
mov
dec
mov
jmp
add
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
and
mov
mov
or
mov
adcl
xor
adcl
add
xorl
imul
mov
andl
xor
sbbl
add
movl
cmp
mov
movl
push
movl
je
movl
cmpl
je
cmpl
jb
jmp
push
push
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
mov
mov
xor
mov
mov
andl
xor
addl
add
xorl
imul
movl
mov
jmp
movl
cmpl
je
cmpl
ja
jmp
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
jmp
lahf
xchg
jle
emms
xchg
ljmp
test
pop
jl
dec
scas
sub
push
fmul
pop
jno
pop
cmp
aas
jge
lds
movsl
cwtl
aas
jnp
sbb
test
jno
adc
ret
popf
adc
ds
add
out
push
lret
jp
repnz
mov
jge
imul
or
xchg
and
xor
and
adc
movsb
lods
popf
lea
mov
sarb
aad
xor
decl
sbb
fwait
xor
xor
mov
arpl
fucomp
lods
xor
lds
xor
out
das
mov
adc
and
adc
push
lcall
adc
sbb
cmp
ds
outsb
je
subb
cmpsl
jnp
mov
mov
movsl
pop
lds
insl
loop
sbb
das
int
or
jp,pn
xor
and
fistl
test
orl
cltd
andl
dec
adc
mov
and
jmp
push
cmc
push
mov
mov
push
xchg
push
daa
xchg
aas
and
pusha
ss
aaa
and
ljmp
nop
lods
jbe
in
loopne
xchg
mov
std
les
shrl
nop
aad
into
mov
sti
xlat
ljmp
into
push
xor
fwait
std
pop
xchg
and
and
lret
cld
cmc
mov
mov
xchg
lea
mov
jge
sti
enter
ret
adc
lea
imul
popf
mov
xor
lds
or
inc
push
push
jmp
adcb
mov
ds
movsb
add
pop
les
pop
into
jns
rorb
out
pop
adc
insl
dec
arpl
int3
xor
mov
mov
test
scas
scas
mov
adcb
roll
dec
bnd
test
push
or
cmpsl
push
mov
inc
lock
out
gs
add
scas
clc
xchg
scas
jecxz
mov
data16
int3
shlb
inc
insl
push
xor
shll
cmp
jo
xchg
dec
or
test
ret
fiaddl
sbb
xchg
jne
ljmp
in
or
mov
push
pop
ret
fsts
repnz
pop
sahf
shll
pop
xlat
aad
in
xchg
loope
jp
push
dec
dec
mov
cmp
xor
mov
cs
pop
jmp
jmp
or
xor
fidivrs
icebp
inc
les
cltd
xchg
lcall
aad
lods
mov
fucom
push
sbb
jbe
fisubl
data16
sahf
push
mov
or
inc
xor
dec
cs
sbb
cs
repnz
pop
mov
push
repnz
mov
xchg
iret
lea
ret
or
jle
out
lahf
test
outsl
xchg
jecxz
fbld
sub
fcmovu
pop
dec
xlat
mov
mov
imul
mov
out
adc
push
ror
out
mov
mov
inc
push
xchg
std
push
xchg
sti
sbb
dec
or
dec
sub
and
mov
aaa
cltd
movzbl
shlb
sti
insl
insl
cmp
dec
shlb
xor
dec
out
push
push
test
ret
in
fstps
xchg
dec
fidivs
sbb
rcll
add
mov
mov
out
ss
mov
andl
sbb
push
subl
xchg
jp
pop
and
aas
add
vmovups
je,pn
xchg
jno
xchg
sub
or
mov
scas
lods
xchg
bound
pop
jo
sbb
ss
outsb
and
inc
lret
stos
xor
push
loope
cwtl
push
xchg
push
shrb
mov
leave
pop
cwtl
pop
dec
ja
add
in
cmp
sbb
je
ret
je
pop
sbb
pushf
adc
iret
lret
or
ds
adc
dec
das
dec
sub
out
xchg
jno
xchg
shl
lods
js
and
scas
pop
repnz
inc
pushf
jmp
ja
fcoml
insb
push
xchg
xor
fyl2xp1
sub
repnz
cmp
cmp
mov
sub
pop
mov
add
in
dec
je
ljmp
lret
pop
cmp
lret
inc
push
fwait
notb
lea
fisubrs
mov
cmp
push
popf
add
xchg
fistpll
loopne
sbbl
testl
fs
push
imul
add
cmc
inc
push
jne
shll
or
sbb
cmp
enter
mov
adc
pop
inc
stos
adc
insl
cmp
in
inc
es
push
inc
rclb
pushf
frstor
xlat
jl
mull
xor
inc
in
sbb
je
sbb
sub
ror
xor
fnstsw
call
xchg
jns
aaa
mov
hlt
icebp
jae
icebp
cmpsb
in
mov
pop
add
sub
push
push
mov
aaa
xchg
mov
fists
imul
rcrb
push
pop
stos
mov
pop
repz
enter
popf
in
sbb
cmpsb
and
test
lods
inc
cmp
mov
fnstcw
cmp
repz
rorb
sub
cmpsl
mov
test
stc
xchg
dec
xor
and
jmp
dec
int
rol
jno
pop
dec
dec
jbe
aam
mov
dec
nop
add
mov
sarl
rorb
push
adc
subl
jp
pop
cwtl
ret
xor
dec
sahf
in
xchg
addr16
fidivrs
mov
dec
je
fnsave
jne,pt
out
mov
mov
xchg
push
clc
ljmp
xchg
fcomps
insb
and
push
lcall
xchg
sub
or
in
mov
shl
jmp
cmpsb
pop
mov
push
ljmp
insb
testb
test
inc
adc
inc
xchg
int
test
sbb
mov
add
jl
repnz
je
jmp
inc
fisttpl
mov
mov
cli
cmp
call
mov
push
pop
in
mov
inc
pop
sub
adc
movsl
rorl
mov
pop
push
pop
jne
pusha
outsl
insl
scas
adc
and
adc
jbe
pop
xor
sub
or
lahf
push
dec
lret
pop
cmpsb
mov
loop
dec
js
cs
in
insb
pminsw
mov
mov
movsl
push
push
jns
cmp
inc
loope
cmc
cmp
inc
fsubrs
or
test
push
or
xor
loopne
mov
xor
mov
hlt
jecxz
cmp
out
enter
jbe
mov
ds
pop
aad
repnz
lds
push
das
push
mov
and
pop
stos
mov
cmp
std
in
pop
or
pop
imulb
das
or
xchg
sbb
std
push
enter
js
xor
int
pop
ficoml
or
dec
mov
and
enter
xor
sub
mov
push
popa
enter
sbb
outsl
mov
out
ss
rcr
ret
stos
fmul
in
into
les
mov
inc
jne
xchg
sub
cli
and
outsl
imul
and
push
aaa
mov
movsl
inc
add
out
mov
icebp
xor
jg
xchg
fwait
push
push
test
push
sbb
data16
and
xchg
mov
sub
xchg
fsubl
lods
inc
sti
mov
lds
pop
or
sub
shll
sbb
imul
pop
out
stos
push
push
outsl
push
cmc
movsl
xor
repnz
aad
repz
test
rcr
sub
sahf
mov
mov
mov
pushf
aad
xchg
lods
cmp
in
lcall
jl
mov
sbb
add
mov
inc
add
mov
bound
sbb
add
dec
xchg
add
cmp
jl
pop
int3
pusha
adc
rcrb
int
or
dec
fstpt
pop
mov
sub
xchg
popf
or
push
popa
pusha
mov
in
incl
add
aaa
arpl
lods
mov
je
jecxz
outsb
pop
and
mov
jp
out
push
sub
int3
or
cltd
cld
jbe
mov
dec
inc
adc
arpl
sub
sub
jne
idiv
mov
ror
mov
outsl
imul
les
mov
inc
mov
in
cmp
mov
inc
fs
in
mov
aas
cs
dec
push
pop
rclb
es
dec
in
sub
sbb
and
hlt
jne
filds
adcl
add
mov
dec
xor
dec
lds
push
push
loope
sub
in
aaa
pop
insb
mov
popf
pop
je
cmp
and
xor
fcomp
inc
cmc
out
and
sub
cmp
sti
loope
dec
pop
mov
aad
dec
dec
pop
jmp
sbb
mov
nop
rclb
mov
cltd
cmpsb
das
sahf
dec
int
out
inc
sub
mov
inc
push
dec
pop
and
test
inc
out
sub
pushf
sub
pop
xchg
xor
mov
jae
sti
es
mov
enter
adc
insl
mov
mov
push
adc
sub
mov
shrb
adc
sub
xor
subl
orl
lods
ds
leave
sbb
xchg
xchg
movsl
xlat
xchg
bnd
imul
ret
repz
sub
nop
cs
add
push
stos
cld
cmpsb
pop
mov
andb
jp
and
ret
add
ljmp
mov
mov
rcrl
call
pop
in
and
repz
cmp
inc
sbb
movsl
push
out
orl
sub
sbb
xchg
nop
lock
mov
inc
inc
mov
repz
cmpsb
mov
outsl
popa
add
add
pop
push
mov
push
loope
jo
xor
sbb
mov
mov
test
pop
ficompl
mov
shll
mov
shrb
fdivrs
sbb
add
add
sub
fldcw
lret
fisubl
add
push
xchg
mov
inc
add
ds
rorb
push
cmp
add
fstpl
pop
pushf
rcr
in
lock
das
iret
xchg
push
mov
or
arpl
insl
xchg
mov
sti
les
lods
pop
dec
inc
jecxz
inc
lret
jle
adc
rorb
shrl
or
cmp
inc
mov
sub
imul
divb
xor
aas
les
fcomip
into
enter
pop
mov
push
lods
jl
jl
jg
loopne
imul
cmp
pushf
mov
sub
shlb
loop
add
outsl
add
addr16
stos
das
xchg
xlat
cmpsb
daa
lods
movsb
adc
jg
cwtl
cwtl
out
je
daa
jg
cmpsl
xchg
push
leave
test
jb
dec
fldt
aaa
call
sub
xchg
add
imul
xchg
sbb
jg
pop
ret
jnp
sub
xlat
add
clc
ljmp
push
clc
movsl
sar
pop
xlat
inc
xor
lahf
jnp
gs
test
mov
mov
or
test
xor
dec
in
test
dec
sub
icebp
xor
fstps
ja
aam
push
mov
js
mov
push
and
test
int3
jl
mov
fsubl
pop
subl
mov
gs
in
stos
das
push
lea
xor
cld
ficoms
adc
pushf
addl
inc
fmul
fisttpl
add
inc
rolb
cmp
adc
dec
sbb
cmp
xchg
push
ds
test
arpl
cltd
sub
and
mov
out
not
inc
into
xor
pop
fwait
mov
rorb
xor
shr
hlt
lods
out
jne
pop
ja
dec
andl
out
repnz
and
dec
hlt
bndldx
adc
scas
xor
xor
test
lcall
adc
testb
movsl
push
imul
fldl2e
std
mov
popa
cmpsl
insb
into
arpl
loope
fadds
je
jmp
mov
pop
push
les
popa
loope
loopne
es
xor
mov
jge
mov
fwait
ljmp
and
xchg
out
xchg
cmpsl
jo
jle
sti
ljmp
out
cmp
pop
cmc
iret
dec
loopne
ret
out
sbb
cld
in
xchg
fildll
xchg
pop
sub
pusha
jo
xor
push
std
add
ds
pop
jns
scas
inc
jecxz
pop
or
cwtl
inc
addb
dec
fdivrs
or
std
sub
pusha
pop
mov
mov
nop
repz
adc
add
sbb
mov
je
jbe
call
hlt
inc
inc
inc
ret
push
into
nop
push
fstp
mov
mov
push
outsb
pusha
out
bound
daa
cmp
outsb
mov
pop
and
xor
nop
sub
jmp
fldln2
dec
fs
pop
cltd
fnstsw
xlat
daa
and
sbb
cmp
xchg
popf
aaa
in
outsl
insb
stos
sub
xchg
adc
notl
subb
sbb
test
or
jae
sub
mov
mov
aam
sbb
cmp
pop
cmp
out
das
or
jge
mov
in
xchg
adc
jle
adcb
xchg
sub
insl
xor
imul
addl
aad
test
dec
jne
pusha
xchg
js
repz
fprem
out
cmp
packssdw
dec
insl
data16
dec
xor
mov
ss
mov
add
cld
mov
cmpb
insb
push
das
mov
idivb
push
dec
or
stc
sbbb
adc
cs
scas
push
fistpl
inc
cmp
fcoms
das
cmpsb
adc
mov
mov
adc
mov
gs
mov
js
and
mov
fstp
jle
push
inc
pushf
pop
shll
decb
xchg
adc
xchg
rorl
push
or
add
xor
sub
add
jp
xor
out
jb
cli
fildl
mov
push
add
sub
test
push
jo
add
daa
xchg
dec
xor
mov
ljmp
movsl
sbb
xchg
rcl
mov
nop
mov
mov
push
popa
iret
test
hlt
lcall
pop
in
dec
xchg
xlat
mov
rcrl
inc
out
or
addr16
cmpb
pusha
sub
push
mov
mov
mov
dec
sahf
aad
outsb
imul
push
sti
les
adcb
ljmp
xor
std
xor
add
pop
lods
inc
jg
mov
fsubs
or
cmpsb
sbb
jae
jno
or
mov
jg
loopne
scas
es
push
jge
jp
inc
jmp
inc
sub
cmp
push
popa
jnp
out
jnp
pop
mov
add
mov
loop
faddl
xor
clc
out
js
pop
addb
push
es
lock
cli
clc
repnz
pop
mov
rclb
sahf
xchg
stos
sbb
pop
mov
mov
mov
sbb
or
out
jl
gs
jecxz
imul
add
push
add
jae
mulb
enter
cmp
dec
sbb
cmp
add
stc
cmc
test
lds
cwtl
leave
mov
mov
push
mov
iret
jge
add
xor
sahf
lret
loope
inc
and
shr
xor
mov
jl
mov
out
mulb
adc
movsl
jno
adc
push
aam
cld
push
mov
add
orb
outsl
test
xor
xchg
loopne,pt
adc
cwtl
mov
mov
mov
stc
das
aaa
insb
add
je
sbb
sbb
cltd
pusha
inc
push
dec
push
cmp
sbb
es
cmp
fimull
push
mov
in
add
pop
and
mov
aas
mov
sbb
ret
add
ljmp
testb
jl
cmp
in
iret
inc
ds
and
mov
ljmp
mov
lahf
mov
loopne
inc
dec
xchg
mov
mov
or
mov
xchg
mov
ljmp
clc
fildll
inc
add
loop
shr
mov
popa
sbb
adcl
add
sbb
push
mov
push
aam
dec
aas
mov
loope
push
std
insl
ret
fildll
pop
xchg
lcall
clc
mov
loopne
push
inc
jne
or
outsb
lods
fiadds
or
add
sub
mov
mov
mov
xchg
push
shlb
mov
rol
push
adc
xor
rolb
pop
movsl
and
pop
sub
pusha
adc
daa
call
lret
dec
xchg
clc
inc
inc
sbb
cmpsl
and
xor
cwtl
jmp
pop
jbe
into
mov
icebp
xchg
adc
test
insb
mov
pop
sarl
lret
dec
ss
lods
mov
mov
dec
add
adc
aas
sti
out
sbb
sbb
inc
push
imul
sub
lret
aas
xchg
lcall
cltd
imul
mov
les
inc
sub
cmp
pop
mov
je
push
addr16
mulb
insl
xor
loop
adc
js
push
dec
mov
add
rcrl
inc
inc
sub
inc
out
mov
lret
sbb
and
sub
hlt
sub
sub
nop
and
xchg
jmp
push
xchg
and
dec
cmp
addb
test
mov
call
pop
data16
xchg
pop
xor
notl
adc
or
loopne
push
mov
repnz
ret
jp
mov
icebp
fidivrs
add
mov
data16
out
mov
hlt
rolb
repz
stos
jle
cmc
das
push
sub
cli
pop
aas
adc
cmpb
scas
push
sub
mov
adc
jge
sti
aam
fstps
jg
lods
sbb
or
scas
mov
addr16
pop
xor
sub
enter
lret
xchg
les
cmp
sbb
es
stc
mov
push
xorl
call
sbb
and
pop
icebp
repz
xchg
mov
loope
inc
and
sbb
subl
adc
push
dec
mov
cmpb
jb
andl
push
fcmovne
popl
adc
jmp
sti
mov
cmp
pop
cmc
or
or
add
sbb
outsb
daa
int
adc
xor
shr
sub
pop
in
stos
adcl
sahf
shll
icebp
jno
mov
lea
xor
cmpsb
pop
cmc
mov
lock
push
and
popf
push
dec
movsb
pop
and
addr16
add
lods
js
fildll
push
and
cmpsb
mov
jle
mov
push
adc
push
inc
das
imul
fisubrl
and
mov
daa
orb
out
aas
mov
dec
out
jg
dec
jecxz
pusha
sbbl
rcl
jo
adc
lcall
test
test
jae
cmp
xchg
push
adc
enter
cmc
das
xchg
cmpsb
dec
mov
pshufw
sbb
mov
dec
mov
mov
or
stos
jae
sarl
scas
out
std
push
add
out
push
xchg
pop
sbb
rcr
popa
sub
add
inc
or
or
xor
adc
loop
sti
xor
mov
das
iret
push
mov
out
lahf
jno
jbe
hlt
xor
arpl
or
in
cli
lock
sti
xchg
xchg
jl
xor
lret
jmp
lcall
fxch
lea
and
xchg
cmp
push
pop
pop
jae
xorb
rcrb
jge
fidivrs
mov
xchg
rolb
push
out
ret
ljmp
arpl
mov
insb
lret
jae
sub
mov
mov
mov
pop
lret
addr16
mov
sbb
jne
loopne
jmp
xchg
fcmovbe
ljmp
test
lods
div
xchg
leave
lret
adc
outsb
jmp
scas
sti
aad
pop
sbb
dec
xlat
mov
push
pop
out
add
insl
push
lds
js
fs
pop
cmp
outsb
add
ljmp
jnp
pop
pop
cwtl
jne
push
push
add
add
jno
nop
cld
mov
andb
lcall
rcl
push
insl
cmpsl
mov
dec
mov
jl
dec
scas
les
sbb
or
pop
cmc
mov
arpl
pop
xor
loop
fmul
hlt
pop
outsb
dec
mov
push
adc
or
imul
mov
jmp
cwtl
lcall
dec
gs
push
cmpsb
or
jmp
cmp
jecxz
bound
aad
out
test
cmp
pop
dec
mov
popl
xchg
imul
cltd
call
dec
jbe
xchg
xchg
xchg
pop
stc
mov
aas
mov
jb
lods
ficomps
loopne
enter
push
dec
pop
xchg
pop
loopne
fstl
xchg
subb
and
and
in
jnp
xor
add
jp
icebp
dec
fmuls
add
fs
out
lods
mov
xchg
dec
mov
and
outsb
cmp
je
jl
pop
pop
lahf
cs
jno
ret
sbb
dec
imul
sbb
adc
pop
inc
sbb
xor
in
subb
lds
pop
pop
pop
outsl
push
mov
xor
adc
insl
sbbb
stos
cmp
pop
sub
andl
inc
imul
mull
out
pop
and
sti
icebp
mov
je
into
sbb
idiv
lock
test
dec
pushf
xchg
cmc
inc
or
mov
lods
pop
aam
pop
mov
pop
outsl
mov
lcall
add
push
fstpl
test
jbe
adcl
or
xchg
cmpsb
lahf
das
into
lock
jmp
sbb
or
xchg
jge
or
aad
sti
lea
lds
sahf
call
cmc
push
fdivrs
fsubrs
das
mov
loopne
pusha
in
repnz
out
loope
mov
das
decb
nop
adc
push
out
scas
push
sbb
mov
fmulp
scas
jl
push
je
mov
or
sub
jge
xchg
pop
out
loopne
pop
fidivl
jp
in
lcall
subb
adc
xor
pop
imul
shl
aas
loopne
int
in
adc
sbb
mov
jno
mov
mov
adc
fldl
mov
mov
movsb
push
imul
jae
popa
cmp
adc
jns
movsb
or
sbb
lret
xchg
stos
in
jecxz
xor
ret
or
mov
in
pop
aaa
leave
adc
jle
inc
cs
push
dec
stos
shl
notb
bound
push
ds
in
fmuls
xlat
pop
adc
repz
popf
clc
adc
mov
shrb
pop
scas
popa
or
fistpll
jl
loope
sub
adc
movsl
icebp
dec
lcall
nop
cltd
lcall
std
add
es
jns
cmp
and
xchg
inc
inc
push
rolb
or
aad
loopne
jnp
fsts
in
aam
nop
mov
repnz
cmpb
ds
push
mov
sbb
ds
pop
lret
outsl
into
xor
out
rcl
lea
fsub
popa
xor
in
enter
push
scas
bound
mov
or
jmp
mov
mov
pop
fwait
jmp
sbb
adc
sub
cmpsl
scas
lods
scas
and
sub
les
lret
sub
adc
inc
mov
in
adc
sbb
dec
loopne
mov
lods
cmp
pop
dec
rol
adc
sbb
mov
ss
lods
xchg
insl
in
test
adc
addr16
mov
mov
dec
shll
mov
xor
or
bound
pop
stc
inc
pop
mov
frstor
adc
imul
add
fldt
bound
pop
add
xchg
dec
xor
push
jge
mov
push
pop
adc
dec
mov
mov
aad
adc
stos
aaa
mov
jns
pushf
test
lret
rcrl
pop
lret
pop
add
sub
pusha
sbb
lock
mov
rclb
jecxz
dec
fstp
push
stos
aam
test
pop
mov
lods
push
ljmp
add
push
xorl
cmpsl
iret
inc
aaa
and
cmp
scas
mov
push
loope
clc
lcall
cwtl
xchg
stos
sub
outsl
push
ds
xchg
test
popa
sbb
xchg
lods
mov
jmp
mov
das
jg
repnz
sbb
fwait
ss
cmp
aaa
mov
movsb
cmp
cmp
lods
jmp
shl
jecxz
jbe
movsl
js
push
cld
push
das
pusha
push
fdivl
sbbb
sub
imul
or
add
fwait
mov
movsb
add
xor
sub
pop
repnz
clc
xor
aas
sahf
or
push
or
jae
mov
mov
test
popf
xchg
ret
pop
cmp
arpl
popa
adc
imul
push
je
lods
fs
sbb
fildl
lds
pop
cmpsl
and
in
mov
dec
sbb
std
mov
fstps
push
pop
jle
cmpsl
sbbb
add
lea
ds
out
sub
push
or
pop
mov
xchg
sti
nop
mov
adc
mulb
xchg
out
adc
mov
dec
dec
imul
sbb
sub
xor
fcoml
pop
shl
insb
mov
mov
mov
xchg
mov
sbb
sbb
push
ret
test
icebp
mov
mov
outsb
cmp
pop
ljmp
sbb
sahf
sahf
aam
xchg
nop
in
or
mov
mov
inc
mov
sarb
adc
mov
adc
idiv
ja
mov
sub
add
int3
movsl
push
inc
aam
xor
divb
enter
jecxz
cmpsl
push
push
fucomip
cld
je
es
loop
cmp
push
je
jne
fistpll
js
jno
mov
fimull
sub
cli
or
adc
mov
cmc
inc
dec
jp
xor
out
mov
cmpsb
mov
jg
add
cmp
mov
dec
and
lret
dec
lahf
push
in
nop
sub
imul
dec
rorl
icebp
sbb
sti
mov
in
cmpsb
iret
jbe
sub
mov
mov
xor
mov
cmp
push
xchg
icebp
cli
pop
jb
mov
inc
dec
enter
shr
sbb
popf
push
mov
movsl
xor
jbe
mov
pop
faddl
adc
or
sbb
dec
jnp
data16
out
in
mov
inc
xor
xchg
jae
xorl
in
push
ja
in
adc
arpl
jl
out
inc
in
ficompl
adc
aam
test
inc
cmp
push
int3
mov
rcr
push
cmp
jnp
inc
enter
mov
int3
in
insb
sbb
adc
inc
push
or
mov
push
es
pop
mov
stc
inc
scas
ds
xchg
mov
add
mov
repz
cmp
pop
and
sar
cmp
push
pusha
pop
sahf
leave
mov
scas
into
aaa
jo
int3
add
pop
dec
enter
sub
sti
pop
lahf
push
imul
xchg
daa
sub
repnz
pop
cmp
xchg
aad
dec
pop
test
push
jmp
mov
xor
fisubs
rorb
je
xchg
outsb
add
cltd
pop
xor
shl
mov
leave
std
push
jp
imul
nop
sub
dec
std
call
sbb
es
xchg
push
dec
sbb
rclb
aaa
int3
add
xchg
pop
add
push
inc
or
jg
imul
mov
popf
add
cmpsl
xchg
pop
iret
inc
lods
out
xchg
ja
jp
pop
cmp
jb
insl
xchg
jb
and
fistps
lret
cmp
add
aas
xchg
icebp
sti
pop
xchg
jbe
das
push
mov
or
mov
jne
mov
in
xor
stos
ss
stos
fsubrs
xchg
in
stos
mov
add
mov
test
shlb
into
dec
mov
in
mov
dec
lret
shr
subb
xor
movsl
push
mov
xchg
jae
inc
lret
sbb
ret
loop
inc
mov
sbb
outsb
into
or
mov
std
repz
js
test
fdivrs
enter
pusha
lods
jbe
jns
xchg
stc
mov
aaa
inc
pop
pop
movsl
jmp
inc
cmp
mov
ja
stos
push
pop
push
dec
push
movsb
push
pop
sub
xchg
sub
cmp
inc
push
cmp
sub
addr16
fwait
xchg
lea
jns
xchg
and
loopne
ret
test
int3
push
inc
and
rorl
add
push
cmpsb
sbbb
in
sbb
xchg
push
jnp
test
push
aas
fwait
or
popf
and
inc
sbb
pusha
cmp
rcrb
mov
xchg
add
hlt
lods
cld
jmp
fcmovbe
sub
je
negb
iret
insl
xchg
or
sar
inc
fcmovu
out
dec
dec
cmp
repnz
sbbb
and
cli
xchg
stos
lods
push
dec
int
sbb
jle
iret
sub
fimull
test
rcr
into
xchg
sbb
hlt
and
mov
sbbb
xchg
movsb
pop
popl
push
xor
ficompl
pop
repz
push
stos
adc
xchg
out
mov
shlb
aas
and
mov
fsubl
or
mov
xchg
push
mov
fdivrl
xor
dec
dec
sbb
lcall
mov
lock
test
pop
xor
and
mov
pop
push
adcb
sbb
btcl
insl
push
sbb
xchg
div
push
test
fsubr
mov
cmp
and
xor
adc
int
xchg
ffreep
xchg
test
dec
jb
test
pusha
xchg
dec
sub
and
scas
mov
mov
and
icebp
loop
inc
clc
sub
pop
dec
mov
or
inc
mov
sub
popf
pop
stos
je
mov
sub
mov
stc
jp
dec
jle
stc
or
les
inc
and
and
in
xor
call
fidivs
lock
test
jns
adc
loope
int3
ss
pushf
push
cmpl
loope
negl
xchg
dec
push
or
sub
pop
inc
mov
daa
add
jo
sub
and
rcl
lods
aam
xchg
stos
mov
test
mov
mov
stc
aas
cld
inc
daa
mov
adc
sbb
jae
iret
andb
lea
cld
mov
push
push
fimuls
xor
pop
xorl
fstpt
ret
xor
adc
fsubrp
mov
pop
jns
push
dec
cmpl
push
and
std
rcr
pushf
mov
and
lea
loopne
shlb
fnstsw
fists
les
push
loopne
mov
dec
xor
dec
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
sbbl
push
movl
cmpl
je
cmpl
ja
jmp
call
mov
dec
mov
jmp
mov
notl
mov
movl
push
mov
mov
mov
sub
imul
mov
mov
mov
movzwl
or
xor
adc
xor
and
mov
addl
add
subl
add
imul
mov
mov
cmp
je
and
mov
mov
mov
sub
mov
movl
cmpl
je
cmpl
jg
jmp
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
push
mov
push
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
xor
add
mov
mov
movl
cmpl
je
cmpl
jl
jmp
push
call
mov
dec
mov
jmp
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
movzbl
xor
mov
mov
xor
mov
add
mov
add
movzwl
mov
movb
sub
lea
mov
sub
mov
add
mov
andl
xor
andl
sub
orl
mov
movl
andl
mov
inc
mov
cmpl
jl
jmp
call
cmpl
jb
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
movl
movl
cmpl
je
cmpl
jbe
jmp
push
call
xor
xor
dec
mov
jmp
mov
push
and
mov
xor
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
subl
push
andl
add
movl
jmp
mov
movl
mov
movl
inc
cmp
movl
jb
andl
xor
xor
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
xor
adcl
add
jmp
adc
mov
mov
sbb
mov
orl
xor
mov
add
movzwl
mov
andl
mov
inc
mov
cmpl
jg
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adcl
movzwl
incl
xor
orl
add
mov
mov
movl
mov
movl
inc
mov
movl
cmp
jne
inc
mov
movl
cmpl
je
cmpl
ja
jmp
push
push
push
push
call
mov
dec
mov
jmp
mov
xor
dec
add
add
mov
xor
or
mov
sub
or
mov
sub
xor
add
add
orl
mov
movl
and
movl
orl
movl
andl
mov
inc
mov
cmpl
ja
jmp
pushl
push
pushl
push
push
push
call
cmpl
jb
mov
mov
mov
xor
mov
orl
mov
xor
add
mov
mov
mov
je
mov
mov
xor
orl
xor
sbbl
sub
andl
sub
neg
xor
or
mov
decl
mov
mov
add
imul
mov
mov
mov
subl
add
or
or
mov
mov
mov
jmp
mov
xchg
mov
pop
fprem
mov
push
jl
jmp
jl
and
das
fwait
int3
rorb
dec
popf
sub
mov
movsb
or
pop
int3
aaa
sbb
scas
jae
sub
inc
push
mov
imul
enter
in
out
ljmp
hlt
mov
cli
pop
into
jmp
inc
hlt
lret
xor
scas
mov
add
daa
mov
adc
xchg
fsubrl
js
popa
ficoml
rcrl
lret
mov
icebp
cmc
repnz
pop
inc
mov
clc
cmpsb
stc
gs
aas
mov
cmp
jae
add
inc
fwait
jecxz
pop
arpl
in
test
out
xor
cmp
mov
sbb
sub
xor
popa
pop
fistpl
pop
pop
outsl
out
in
popa
std
push
and
push
jmp
pop
ljmp
aad
fsub
ss
int3
jge
mov
or
inc
jae
pop
cmp
std
xchg
sub
outsl
adc
push
mov
xor
add
lret
jge
push
pusha
in
or
sbb
dec
xchg
clc
pop
push
push
mov
mov
data16
repnz
pop
xchg
lret
xchg
iret
mov
in
sar
fcomps
jno
mov
jle
pop
mov
add
pop
bound
mov
mov
outsb
mov
lds
sbb
add
adc
ret
enter
out
icebp
loope
push
test
in
sbbl
outsb
roll
bnd
jns
movsb
jo
popf
in
cwtl
cmp
push
cli
adc
dec
nop
and
xchg
mov
arpl
cmp
std
sti
out
pop
dec
sub
ret
cs
jbe
inc
jbe,pn
mov
push
mov
fnstenv
arpl
fwait
in
std
aaa
arpl
mov
mov
jmp
aad
jmp
movb
insl
sbb
lea
jno
out
sub
fucomip
loope
out
push
test
mov
sbb
enter
lods
mov
pushf
sahf
add
fstl
mov
in
test
mov
and
add
push
sbb
or
or
fisttps
pop
rcll
add
mov
jp
and
aad
adc
adc
ljmp
pop
dec
cmp
mov
bound
sub
xor
pop
jnp
sahf
xchg
test
dec
mov
mov
add
in
jle
sub
or
loopne
movups
add
pop
jmp
add
jle
and
push
stos
std
idivl
lcall
xchg
pushf
test
subl
xchg
push
bnd
xchg
addr16
inc
dec
push
or
adc
gs
sub
mov
fisubrl
movsb
lods
cmp
loopne
mov
testb
and
movsl
lds
add
bound
xchg
nop
lret
fiadds
cmp
fcomps
adc
push
icebp
sbb
jnp
lds
repz
sbb
fmuls
sbb
dec
mov
fsubs
mov
stos
int
sub
lds
sub
fdivp
jb
es
lahf
mov
pop
mov
jle
cmp
dec
mov
iret
xor
sahf
add
mov
pop
add
mov
push
xchg
jl
jne
lock
xchg
loop
jo
adc
mov
and
mov
inc
bound
push
push
jo
addb
xchg
inc
xchg
cltd
mov
mov
bnd
inc
leave
xchg
sub
mov
shll
clc
and
cmp
call
cld
mov
movsb
adc
subb
mov
sub
pop
sbb
sub
sti
pop
dec
bound
out
mov
das
inc
xor
mov
pop
scas
xor
lods
mov
push
dec
std
lret
testb
loop
inc
inc
xchg
mov
lods
int
jmp
and
pop
lcall
jno
mov
add
xor
mov
sbb
pushf
jp
dec
sbb
lods
call
pop
xor
outsb
mov
mov
dec
adc
sub
xchg
mov
int
and
mov
into
test
dec
pushf
sub
sub
sahf
inc
pusha
scas
add
adcb
mov
and
shl
enter
sub
xor
hlt
push
leave
mov
jle
sbb
jmp
pop
ds
call
daa
call
nop
out
pusha
mov
aam
or
mov
dec
mov
cmp
dec
scas
xor
or
xchg
pop
rorl
movsb
stc
int
mov
fisubs
xorl
mov
enter
ret
icebp
add
sbb
sti
pop
pop
pop
push
pop
adc
inc
jno
lret
and
or
dec
and
mov
imul
pop
hlt
out
cli
rcrl
addl
push
lods
fs
push
scas
cmpsb
scas
xchg
mov
in
mov
jge
mov
sbb
shlb
ljmp
mov
into
dec
outsb
movsb
incl
fldenv
icebp
test
cmp
shl
xchg
push
add
cli
cmp
add
dec
popa
xchg
add
add
mov
jl
xor
adc
fldcw
jo
cmp
fbstp
or
and
fistpl
dec
push
xchg
sbb
lods
cli
xchg
shll
push
inc
push
and
push
inc
xor
jne
mov
push
shrb
icebp
cli
push
adc
jo
int
xchg
test
push
outsl
imul
cmpsb
sti
fs
mov
fstpt
push
cmpsb
and
or
dec
ljmp
xchg
insb
jp
outsb
xor
rclb
dec
dec
aaa
pop
sbb
add
xor
and
mov
xor
mov
sbb
jle
into
mov
stos
vmovsd
sbb
mov
and
jne
mov
add
xor
outsl
shlb
inc
jle
add
out
push
pop
xor
inc
shld
out
pop
pop
add
cmpsl
mov
dec
sub
jo
jl
cltd
cmpsb
cmp
scas
int
std
out
add
push
or
xchg
xchg
mov
lcall
mov
add
imull
mov
lods
cmp
jl
mov
testl
mov
jae
xor
and
mov
pop
and
pop
and
sbb
jo
or
push
ss
dec
scas
push
test
fmuls
dec
je
add
in
pusha
or
pushf
jp
sbb
xchg
sbbb
mov
adcl
rclb
sbb
sbb
push
and
insb
ja
loope
ljmp
pop
push
push
mov
cmp
add
xchg
inc
xor
mov
cli
ja
mov
frstor
mov
or
pop
xor
or
icebp
imull
sbb
repz
jb
and
sub
jp
cs
ds
arpl
adc
insl
adc
push
mov
aad
aam
dec
pop
test
sbb
repz
loope
nop
adc
icebp
mov
cmp
js
loopne
or
int
shl
mov
inc
les
negb
scas
mov
dec
stc
add
inc
mov
and
add
lods
pop
mov
insl
movsb
sbb
and
les
mov
fldcw
mov
lret
xchg
mov
enter
xorl
push
shrl
mov
fcomps
cmp
sub
xor
shrl
not
rcl
mov
xchg
loope
je
outsl
jmp
dec
jbe
loope
xor
add
mov
shlb
jb
cs
cmpsb
fs
popf
dec
mov
inc
fldt
jb
cwtl
dec
inc
sbb
jnp
xor
and
push
cmp
lds
jnp
inc
xchg
pop
xchg
mov
jne
push
pop
out
xor
push
out
pop
xor
imul
push
push
daa
imul
mov
lea
cmp
jl
pop
mov
pause
or
push
sub
movsl
fsub
mov
test
mov
and
sbb
mov
inc
hlt
mov
stos
mov
fadd
aam
cmp
adc
mov
cmp
fiadds
mov
or
push
or
arpl
push
pushf
fst
xor
dec
fwait
mov
dec
in
push
into
or
mov
jnp
mov
adc
jl
push
addr16
adc
notl
inc
sub
or
push
pop
or
cmp
cs
sbb
cmpb
fadds
js
leave
pushf
or
xor
popa
add
mov
arpl
mov
psubb
mov
lods
xor
andl
xor
outsl
inc
cmc
jne
addr16
pop
cli
clc
testl
out
in
push
in
shlb
dec
gs
lret
push
notl
rcl
icebp
shrb
fistpl
mov
pusha
jne
filds
pusha
test
jo
scas
inc
jno
and
je
mov
repnz
ljmp
dec
mov
and
jg
pop
xchg
sub
or
and
cmpl
mov
cmpsl
insl
punpcklwd
das
fcompl
icebp
enter
sub
incb
fistpll
and
add
rcll
jnp
je
cwtl
test
rep
cltd
rcrl
xchg
push
lods
bnd
xor
cld
icebp
xchg
xchg
xchg
and
iret
jmp
push
mov
enter
jl
rorb
mov
imul
xchg
outsb
cmp
xor
dec
jmp
mov
xchg
sbb
rorl
sbb
ljmp
xor
in
inc
fstpt
addr16
dec
shl
movsl
inc
fisubrs
aam
or
ret
pop
jp
xchg
xchg
imul
int
mov
lcall
ror
mov
ret
dec
mov
scas
sbb
mov
mov
push
sbb
ret
pushf
gs
ss
push
pushf
imul
aad
mov
test
cmpsb
adc
jge
ret
cmp
je
sarl
lock
loopne
enter
repz
repnz
aaa
lahf
and
sbb
jnp
mov
dec
dec
mov
cwtl
lds
xchg
mov
outsb
mov
push
inc
lret
adc
mov
fsubrs
mov
cmp
mov
ret
jle
push
pop
idiv
out
lahf
adc
jb
sti
mov
aas
mov
ficoml
jmp
fisubs
shlb
jno
and
enter
adc
jno
test
adc
adc
out
lds
mov
rclb
sub
mov
xchg
mov
sbb
pop
outsl
aam
jns
pushf
popf
pop
icebp
cltd
inc
mov
das
xor
out
mov
ret
int
push
cmp
inc
roll
inc
dec
lods
jo
mov
fdivs
xor
add
sbb
push
leave
shll
adc
fsts
lods
repnz
imul
fistpl
pop
cmpsl
adc
mov
rclb
and
int3
out
dec
ror
jecxz
xor
pop
scas
stos
mov
lcall
push
fstpt
pop
sbbb
cmpsb
enter
jmp
test
sbb
andl
in
mov
inc
mov
sub
xor
mov
xchg
sub
pop
pushl
sbb
mov
sbb
cmp
jo
int
rolb
popf
lea
inc
sbbb
mov
and
adcl
adc
sahf
jne
clc
push
aas
mov
sbb
pop
fcomip
hlt
adc
or
fwait
xchg
addl
rcr
mov
mov
hlt
xor
xor
xchg
stos
add
push
repnz
test
or
mov
cmp
mov
and
out
mov
or
and
push
test
sbb
cmpb
push
lcall
pop
int
push
dec
ja
and
cmp
repnz
fsubs
push
aas
cmpsb
shlb
xor
and
clc
loop
ror
push
lahf
fnsave
inc
inc
sbbl
push
cmpsl
scas
push
inc
ljmp
ret
scas
mov
mov
insl
sub
mov
or
mov
add
push
js
ret
inc
mov
shl
add
and
addl
cld
cs
in
pop
aam
jge
movnti
int3
push
xchg
xchg
xchg
mov
js
in
ss
std
stos
mov
pop
jbe
fcompl
nop
fsubrs
push
mov
dec
fdivrl
jb
mov
fwait
sbb
out
mov
push
out
scas
dec
cmp
aaa
divb
dec
add
inc
sub
pop
movswl
test
xchg
mull
or
dec
sbb
xor
sti
pop
mov
push
lods
outsb
inc
std
rcr
adc
push
sub
push
push
popa
mov
add
fsubr
cmp
push
adc
inc
pop
pop
dec
dec
and
xchg
sub
and
mov
negb
aaa
jo
loopne
and
pop
mov
jno
jmp
nop
xor
mov
orb
lds
jmp
lock
cmp
cld
lahf
lret
loop
adc
pop
aam
nop
sub
mov
jmp
mov
outsb
bound
hlt
jg
lret
sub
jp
imul
mov
sbb
cmpsb
sub
and
stos
pop
mov
or
or
imul
pop
filds
xchg
test
or
je
cmpsb
or
adc
int3
and
inc
xchg
push
andb
insb
aas
and
xor
test
mov
push
cmp
add
or
or
imul
xchg
hlt
and
fadd
mov
iret
sub
cmp
cmp
iret
pop
lods
pop
inc
stos
jp
push
sub
cwtl
push
xchg
cmp
add
inc
cmp
pop
jge
ss
test
pop
lcall
les
sbb
inc
ret
inc
xor
inc
in
mov
test
cwtl
ja
sahf
adc
mulps
fimuls
std
jb
popa
dec
lcall
ds
or
jns
arpl
out
lcall
push
int
stos
rorb
imul
xchg
fisubrs
adc
into
xchg
mov
sbb
xor
outsb
insl
mov
decb
lret
aad
loopne
add
rolb
pop
or
push
xor
sahf
shl
mov
andb
lods
push
out
sub
sbb
outsl
ss
jbe
xchg
nop
xor
mov
sbb
mov
push
scas
mov
pushf
gs
pop
movsb
lds
push
in
jecxz
or
in
xchg
rcll
imul
mov
xchg
xchg
rorb
mov
stos
pop
aaa
stos
mov
lcall
jp
ret
nop
lods
inc
inc
cmp
or
fcmove
xchg
fsubr
lods
enter
jbe
mov
jge
iret
test
imul
movsb
loop
movsl
sub
push
jnp
sbbl
in
and
ror
dec
and
xchg
pop
lret
mov
jp
lahf
add
insl
adc
cmpsb
lods
cmp
cmp
stos
roll
daa
sti
mov
fldl
push
cwtl
inc
mov
inc
outsb
dec
xor
xor
addr16
xor
push
mov
fcomi
xlat
punpckldq
mov
outsl
adc
in
jmp
lods
fwait
sub
test
sbb
fsub
pop
xor
ds
mov
inc
jle
dec
es
inc
pop
shlb
pop
jns
iret
mov
push
sub
dec
inc
test
or
mov
pusha
xchg
xchg
jbe
xorl
outsl
pop
mov
int
loopne
jbe
xor
jmp
ja
sub
pop
xor
je
call
dec
lret
push
scas
push
out
xlat
sbb
dec
mov
mov
add
addr16
out
imull
mov
push
mov
xchg
mov
sbb
mov
daa
xchg
lods
clc
stos
mov
pop
movsl
inc
stos
in
insl
push
cmp
fldcw
insb
ss
pop
jmp
dec
cmpsb
jno
fbld
gs
sub
out
push
lock
xchg
notl
jb
xchg
call
adc
mov
sub
dec
add
mov
mov
in
scas
leave
sub
in
inc
iret
mov
mov
jp
or
pop
shrl
or
in
and
mov
jo
data16
adc
movsb
mull
lahf
call
lock
jmp
mov
push
fs
adc
cli
ficoms
lods
lcall
test
xor
pop
in
test
and
adc
enter
or
sub
jne
mov
jns
add
and
hlt
mov
insb
mov
adc
add
aam
xor
and
icebp
pusha
inc
inc
mov
call
iret
test
outsl
ret
cld
push
test
ss
add
imul
out
aam
lods
sub
lcall
stc
add
pop
iret
bound
xor
push
inc
jge
jbe
jp
xor
xchg
mov
mov
mov
adc
xor
cmp
cmp
outsl
mov
aaa
lcall
fidivl
cmpsl
and
mov
cmp
sbb
mov
pop
cmp
cmpsb
out
sub
je
jecxz
ja
mov
lahf
mov
daa
jg
adc
xchg
xor
clc
jge
inc
iret
sbb
mov
test
push
mov
pop
fdivrp
scas
into
out
mov
adc
movsl
push
pop
sbb
and
mov
jb,pt
jns
leave
mov
shrl
push
cmpsl
les
pop
dec
test
push
jae
push
sbb
cltd
push
xchg
pushl
sbb
mov
inc
mov
sbb
cmp
cs
cs
push
mov
and
decl
fdivrl
andl
and
enter
sub
mov
test
push
inc
cmp
imulb
enter
or
popa
inc
jae
pop
cmp
cmpsb
fwait
push
xchg
cli
sub
add
sub
mov
push
add
push
add
and
cs
dec
test
adc
mov
sub
lds
jne
pop
cmp
sbb
xchg
fnstenv
loop
rep
jecxz
repnz
lods
data16
inc
sbb
dec
mov
aam
jg
mov
shlb
data16
in
push
popf
arpl
dec
cmp
sbb
sbbl
out
sti
fmull
outsl
jmp
cli
addl
lds
popf
lcall
in
add
push
lods
ljmp
stc
dec
mov
mov
icebp
adc
pop
and
push
cltd
mov
xor
dec
sahf
rolb
test
cli
je
inc
mov
or
cmp
jmp
cld
fsubrp
add
addl
adc
sbb
sub
sahf
and
sbb
or
andb
shrb
scas
mov
lahf
sub
or
ja
fiaddl
fstpl
push
lds
pop
dec
lahf
push
mov
or
add
cld
daa
push
popa
sub
mov
sahf
mov
lahf
adc
inc
sbb
dec
int3
and
dec
jne
jg
sub
adc
push
push
pop
nop
mov
mov
cmpsb
das
mov
int
lcall
sub
test
mov
adc
jb
sbb
jmp
cs
and
sar
push
jge
negb
stos
xor
cmpsb
popf
je
ret
inc
pop
add
mov
xchg
xor
push
repnz
lcall
mov
lock
jg
add
mov
adc
lea
call
mov
and
scas
jbe
or
pushf
mov
cmp
pxor
lock
out
pop
dec
mov
inc
inc
arpl
sbb
scas
mov
mov
adc
loopne
pop
dec
cmp
or
push
orb
jb
scas
pop
xor
cmpsl
adc
lcall
sar
testl
mov
sbb
xchg
aad
ss
pusha
jb
cmp
cld
cmp
pop
mov
cmp
adc
add
mov
scas
inc
lea
and
dec
stc
push
lds
pop
sub
inc
and
push
je
jnp
jle
add
inc
sub
jns
fsubrl
out
and
inc
mov
jno
xchg
mov
sahf
imul
sub
inc
repnz
jo
pushf
jns
sbb
push
cmp
mov
movlps
stos
cmp
insl
add
aaa
gs
push
sbb
addb
jb
xor
jnp
mov
lret
adc
pop
ret
push
test
xchg
ret
and
rcll
cs
jp
cmp
mov
mov
or
out
movsb
jecxz
scas
xchg
push
imul
sub
mov
xchg
xor
loope
dec
jno
pop
inc
sub
mov
pop
or
fiaddl
and
xchg
adc
je
fsubrs
push
push
sbb
mov
add
sbb
arpl
outsb
adc
mov
andb
lods
xchg
dec
aaa
xchg
stos
xor
in
cmp
jbe
clc
push
and
mov
rcrb
repnz
out
sub
and
and
cmp
movsb
pop
ljmp
cmp
movb
jo
push
xor
add
lret
ret
add
in
icebp
xchg
insl
loopne
pop
adc
add
ss
xchg
pop
mov
xchg
jo
dec
in
adc
pop
xor
mov
pusha
dec
or
xor
sti
cmp
jns
cli
loope
add
jmp
lcall
or
jle
ljmp
cli
mov
mov
jb
mov
mov
jp
add
cmpl
mov
cmpb
xor
call
jne
movsl
pop
inc
add
movsl
and
jbe
inc
sbb
add
out
jge
rolb
inc
mov
out
jl
test
ja
dec
fdivs
ds
push
jae
pop
adc
or
pop
cmovne
cmpsb
jns
scas
mov
jge
int
loop
jp
jmp
xchg
por
or
arpl
push
inc
vmulpd
pop
mov
add
aas
mov
sub
pop
stos
icebp
xchg
nopl
ja
push
fcom
push
push
dec
jmp
adc
mov
lods
pop
mov
jnp
or
cmpsb
cmpl
push
cmpsb
jl
inc
push
cmp
add
lods
push
mov
scas
or
pusha
or
jno
test
pop
seta
testb
mov
js
or
jae
push
imul
pusha
cmpsb
inc
dec
pop
mov
fs
jl
mov
leave
mov
ss
xchg
cmp
mov
push
xlat
ds
aas
out
push
or
jge
ljmp
adc
sti
sub
pop
sahf
dec
ds
push
fsubrs
pop
mov
pushf
cmc
and
cwtl
rcrl
mov
cwtl
dec
mov
jns
ds
or
xor
pop
shlb
jmp
jecxz
mov
jmp
lock
sub
aam
dec
or
lods
pop
push
ss
lea
std
xlat
or
lods
push
rorb
stos
cmp
xor
dec
mov
pop
scas
mov
mov
mov
or
pop
shll
cmpsb
jne
and
mov
and
loope
mov
or
insb
mov
scas
jmp
in
in
jo
fadds
popa
notb
repnz
sub
add
mov
jecxz
roll
push
pop
cmpsl
mov
mov
data16
fimull
push
xor
rcll
fwait
mov
xchg
stc
sub
and
shll
inc
mov
clc
dec
fs
jo
push
loope
lret
sub
call
int
cmp
xchg
or
xor
xchg
adc
out
jl
jmp
rcll
push
cli
addr16
imul
mov
mov
ja
loop
jns
stos
cs
mov
jecxz
into
mov
jo
xchg
pushf
stos
enter
out
xchg
sbb
jb
mov
pop
dec
sub
xor
mov
or
xor
push
fdivr
or
jle
sub
cmp
sti
jmp
pop
dec
loopne
dec
in
mov
cmp
mov
outsb
pop
push
pop
inc
lds
loope
push
sub
in
push
jnp
outsl
mov
pop
adcb
fldt
dec
mov
imul
fs
sbb
inc
mov
push
dec
pusha
mov
jle
imul
mov
xor
nop
fwait
int
pop
mov
mov
mov
xchg
push
sub
stos
dec
outsb
push
daa
inc
jb
push
add
sahf
fwait
orl
dec
add
in
sbb
mov
sbb
mov
flds
dec
dec
pusha
div
jl
js
insb
popf
adc
int3
push
jbe
cmp
lcall
aaa
ret
xor
cmpsl
jle
jns
sbb
cli
fadd
and
adc
push
mov
mov
enter
pop
or
cmp
test
dec
jns
cli
aam
pop
insb
out
mov
pushf
cmp
arpl
mov
outsb
clc
mov
inc
or
and
jmp
push
jg
jg,pt
or
ja
repz
mov
jae
xor
fwait
cs
dec
fisubrs
daa
xchg
psraw
mov
xor
sbb
push
jg
ss
xchg
orb
push
and
mov
rol
dec
decb
mov
cmpsb
dec
jns
pop
mov
loope
sbb
popa
pop
and
mov
adc
movsb
scas
outsl
dec
xchg
jnp
in
xchg
sub
pop
or
fwait
js
mov
leave
cli
imul
and
icebp
pusha
movsb
mov
add
push
mov
push
or
adcb
push
negb
inc
mov
js
dec
adc
repz
movsb
cmpsl
cmpsb
or
clc
repnz
aam
or
inc
leave
pop
jecxz
lret
jae
fimuls
xchg
or
inc
data16
in
mov
sub
fstps
mov
xchg
lcall
popa
inc
adc
adc
pause
add
push
push
stos
push
and
ret
or
sarb
fistl
jo
mov
gs
and
nop
in
xor
pusha
icebp
or
adcl
push
inc
fildl
divl
in
pusha
stos
sub
ds
fwait
aad
cmpsl
out
imul
cld
inc
push
sbb
stos
sub
or
and
ds
push
adc
sbb
fbstp
call
fcomp
pop
sbb
test
mov
jo
pop
test
xchg
xlat
push
mov
cmp
cmp
aas
les
icebp
aad
or
loop
cltd
mov
jns
push
es
cmp
jno
adc
pop
subb
mov
mov
ficoms
push
js
lcall
xchg
mov
cmp
cmp
sqrtps
scas
inc
mov
sbb
int3
jmp
xchg
subl
inc
adc
int
lods
popa
inc
jp
xor
push
addb
mov
or
xor
add
data16
jb
ds
iret
mov
movb
ljmp
mov
cmp
loopne
pusha
pusha
idivl
mov
and
xorb
pop
out
lcall
mov
pop
test
inc
ja
push
push
inc
outsl
lods
xchg
xchg
adc
enter
sbb
fwait
xchg
inc
shl
pusha
jmp
movsl
sub
mov
ret
lods
inc
das
movsl
mul
pop
cmp
ja
imul
insl
cmp
scas
out
subl
pop
lea
out
jae
movsl
add
popf
leave
jl
sub
ja
bswap
adc
adc
arpl
stos
stc
dec
je
adc
inc
mov
movsl
sbb
fucomip
mov
cmp
add
inc
popf
inc
jno
mov
mov
xor
adc
aas
mov
add
add
ds
mov
in
pop
outsb
pop
fstpl
loop
lods
ja
add
scas
pop
clc
cmp
cwtl
mov
or
jno
lds
mov
cwtl
out
jg
mov
jb
push
arpl
inc
xchg
outsl
inc
rcrb
jle
or
dec
add
pop
mov
pop
jmp
es
dec
add
cmp
add
jge
test
test
dec
sub
jo
xor
pop
sti
and
add
push
repz
lcall
push
xor
push
subb
push
jl
dec
mov
jp
xor
mov
cltd
mov
mov
inc
aas
in
out
push
fwait
addr16
xchg
flds
enter
cmpsb
dec
ret
pop
orb
pop
sbb
xorb
inc
adc
pop
inc
mov
mov
mov
mov
in
cwtl
js
popf
xor
insl
ret
or
aam
cmpsl
pop
pop
pop
mov
pusha
inc
cmpl
orb
aad
enter
sbb
in
ljmp
mov
outsl
test
push
cmp
cld
out
pop
add
and
jae
mov
data16
adc
ds
xor
cmc
loope
test
mov
mov
jno
or
pushf
jo
pop
lret
scas
aad
mov
cmp
popf
outsl
enter
cmp
and
ds
cmp
and
pusha
dec
lds
push
int
add
pop
jmp
addl
dec
lds
stos
jns
pop
shlb
leave
daa
or
push
xor
enter
sbb
sbbb
es
fistpl
repz
mov
mov
adc
shrl
adc
ret
jmp
mov
sub
pusha
test
sub
xor
jno
aaa
arpl
inc
cmpsb
movsl
or
cmp
lret
cmp
mov
mov
add
sub
push
sub
cmp
fimull
and
iret
into
bound
mov
sahf
jno
sbb
sub
mov
push
xchg
sub
xchg
fisubl
mov
jbe
ljmp
nop
xor
inc
call
mov
test
or
lret
hlt
add
gs
add
stc
push
and
lock
dec
sti
icebp
sub
cmp
cmp
adc
into
inc
cs
adc
mov
lahf
adc
cmc
pop
push
push
inc
movsb
mov
loope
push
inc
adc
lret
int
aaa
ss
mov
lock
sbb
in
inc
inc
ss
lds
rcll
add
xchg
cltd
dec
test
mov
lock
lock
pop
add
xchg
fistps
push
lods
mov
lret
jl
movsl
pop
dec
or
shll
rorl
add
sbb
mov
mov
mov
sbb
mov
jmp
movl
ret
xchg
cs
lcall
jl
pop
jl
mov
mov
dec
mov
in
inc
or
xorb
adc
fidivrs
jo
push
loopne
les
jbe
fildll
enter
stc
je
inc
pop
cmp
jno
pushf
insl
cmp
mov
filds
andb
scas
aam
cmc
imul
dec
xchg
sbb
ds
mov
and
add
mov
xchg
stos
inc
es
xor
aaa
xlat
seta
and
rcrb
mov
je
int3
xchg
mov
repz
cmp
or
out
sub
pop
movsb
inc
xor
cld
popf
and
lahf
push
insb
cltd
repnz
mov
push
in
in
icebp
push
lea
inc
neg
cmp
sub
das
aas
sub
loope
loop
xlat
bound
and
and
and
and
and
add
outsb
pop
adc
js
orl
maxps
mov
out
push
add
inc
les
push
jns
movsb
xor
dec
inc
xchg
into
xorl
jmp
push
sti
mov
addr16
in
cmp
fistps
add
push
pop
cmp
repz
mov
idiv
mov
rorl
movsl
clc
or
xor
popf
mov
mov
popw
es
inc
jbe
dec
jp
inc
ret
mov
mov
push
push
mov
cmp
jmp
push
loope
mov
pop
sbb
xchg
imul
repz
cwtl
stos
push
movl
call
fmull
or
sub
cmp
aad
push
sub
mov
xor
or
popf
in
push
jl
and
enter
sarb
cmpsl
mov
jnp
jnp
lcall
or
into
jp
test
sarl
adc
push
aam
nop
cwtl
xchg
sbb
pop
repz
inc
shlb
les
imul
jbe
push
ficoml
clc
arpl
mov
lock
stos
imul
lahf
cmp
adc
out
nop
repnz
les
in
stc
fsubs
xor
add
mov
adc
or
call
cmp
cltd
pop
outsb
xor
pop
xchg
gs
leave
mov
sub
push
popf
ret
mov
lret
clc
mov
mov
fldenv
bnd
rcl
sbb
fsts
mov
mov
xchg
jp
enter
cmpb
ss
push
pop
fs
lds
push
or
inc
mov
pop
cmp
dec
push
gs
ja
and
pop
scas
push
ret
push
pop
adc
adc
loop
push
outsl
dec
mov
repnz
dec
sbb
mov
flds
sbb
movq
andl
cmpl
into
inc
xor
and
sbb
iret
cbtw
dec
call
add
gs
dec
mov
outsb
shrl
xor
cli
xor
sbb
xchg
lcall
inc
inc
push
push
lret
sub
sbb
out
push
jp
orl
mov
ja
popa
dec
dec
jle
lea
testl
in
cmp
stc
sbb
icebp
test
pop
popf
arpl
loope
jo
push
cmp
mov
dec
jno
jp
mov
std
cmp
sub
push
push
rorb
and
mov
push
adc
mov
jbe
sub
lahf
mov
repz
shll
mov
rcl
sti
sbb
inc
mov
mov
sub
punpckhdq
mov
and
loop
jmp
stc
sub
cmpsb
addr16
fmul
movsl
rcr
dec
add
xlat
js
push
aas
sbb
push
cmp
rcll
jbe
adc
cmpsb
jnp
imul
shl
daa
in
jae
inc
sti
leave
adc
mov
arpl
nop
push
or
mov
pop
dec
mov
rolb
loopne
pusha
jle
dec
jnp
dec
cmpsb
cmp
cld
jp
lock
sub
mov
sub
xchg
push
sub
and
or
add
leave
idiv
xadd
mov
push
lahf
cld
je
lret
add
ret
fstps
in
fisubrl
dec
sarb
jge
shlb
test
push
mov
hlt
push
std
jp
adc
mov
xor
out
pop
mov
jg
ret
lahf
push
mov
aaa
or
sti
dec
pop
sub
xchg
scas
lock
jbe
jge
push
mov
or
adc
fnstsw
xor
lahf
jo
push
mov
out
ret
xor
bound
sub
xchg
mov
and
test
lods
mov
inc
pop
fnsave
popf
imul
sbb
cwtl
leave
jns
imul
cltd
pop
pop
imul
aad
sti
cmp
mov
cmp
pop
fcoml
hlt
loopne
fs
push
lret
lods
dec
mov
xchg
jae
hlt
outsl
dec
ds
movsl
pop
mov
stos
pop
sahf
mov
nop
movsl
shlb
fucom
sub
jl
icebp
insl
rcl
std
sub
mov
mov
xlat
inc
cmp
and
mov
imul
cmp
adc
xlat
xorl
push
and
dec
xor
mov
mov
add
pop
push
cld
jg
insb
pop
shll
push
xor
jbe
adc
xchg
cmp
push
dec
jge
cmp
xchg
dec
fisubrs
xor
sub
sbb
cmp
fwait
mov
add
or
cld
xorl
aam
daa
mov
mov
bound
push
xchg
jb
sbb
cs
jmp
movsl
push
cld
sbb
pop
imul
adc
mov
inc
push
iret
mov
mov
leave
xchg
inc
aaa
and
jno
jecxz
xor
sbb
sbb
pop
jno
imull
inc
xchg
cmp
out
lahf
jb
push
psllq
int3
sbb
pop
mov
adc
fstpl
repz
xchg
adc
orl
call
add
mov
sbb
ret
cmp
xor
and
or
push
cmp
inc
cmpsb
hlt
loopne
inc
lock
push
pop
xchg
mov
push
cli
jle
jg
shll
aaa
and
add
or
cs
cs
hlt
cmpl
popa
fdivl
fmull
mov
inc
cmp
jno
sub
jae
mov
mov
out
sub
sub
jbe
outsl
cmp
arpl
push
adc
out
enter
lcall
jae
and
test
xor
push
mov
cwtl
fs
ss
fstl
mov
es
and
sti
push
dec
ljmp
inc
jns
test
aas
das
jnp
ret
mov
lahf
ss
mov
pop
jns
mov
ja
jle
and
call
xor
add
pop
push
dec
addr16
xlat
cltd
sbb
ss
leave
subl
repz
or
inc
add
cmpsb
aas
cmc
sbb
mov
inc
xor
xchg
or
insb
add
movntps
cmpsb
ficomps
sbb
int
lds
or
mov
mov
jl
sbb
mov
cmpsb
je
decl
adc
icebp
push
dec
in
and
or
les
xchg
rolb
pop
sub
push
mov
xor
mull
adc
dec
in
out
outsb
cmpsl
outsb
cmpsl
scas
and
push
mov
mov
cltd
cs
lods
adc
loop
stos
push
mov
cmc
in
in
add
push
out
data16
mov
int3
xchg
andl
pushf
add
lock
ds
out
mov
mov
loopne
sbb
ja
mov
cmp
sbb
pop
add
hlt
stos
mov
mov
arpl
push
movsl
mov
test
xor
pop
push
test
and
stc
sub
add
push
outsl
rcrl
add
les
aad
je
js
fbstp
inc
inc
jge
jb
lret
xchg
push
inc
push
push
ror
test
addr16
rcrl
lahf
lds
adc
cwtl
sub
mov
int3
dec
inc
dec
cmpsb
rcll
sbb
sub
inc
sbb
adc
sbb
jns
enter
jae
jo
movl
xchg
jb
push
mov
repnz
mov
loop
into
sti
rolb
cmp
pop
xor
fwait
inc
cmpsb
fimuls
adcb
cmpsl
xor
or
or
ffreep
ja
dec
iret
std
dec
mov
cmp
push
popf
mov
sub
fcomps
insl
jo
dec
pop
test
dec
data16
insl
jne
push
lahf
out
add
sub
mov
jo
xchg
fwait
cmpsb
push
mov
dec
hlt
scas
fcmovbe
and
sbb
testl
roll
xor
sub
icebp
repz
dec
fwait
popf
or
mov
jmp
pop
jb
pop
fucomp
movsl
fcoms
push
subl
ret
inc
lea
jne
pop
add
xchg
dec
jb
clc
lret
jo
in
mov
sarb
std
pusha
dec
inc
test
test
addl
sub
push
ret
inc
or
adc
bound
mov
pop
xor
xchg
insl
and
frstor
xchg
je
into
sub
out
out
cld
xchg
jnp
stos
fdivs
orb
add
and
sbb
popa
push
repnz
ret
jg
sub
test
repz
shlb
lret
aas
cmovno
int3
pop
add
les
xor
pusha
fsubrs
inc
inc
test
mov
fdivl
stos
shlb
test
stos
and
repnz
dec
insl
test
cmp
push
aaa
scas
addr16
jbe
iret
aaa
cli
andl
mov
subb
and
push
dec
cmp
sbb
adc
xchg
int
outsl
push
loope
je
cmp
rcrl
cs
lock
pop
pop
daa
push
popa
inc
arpl
push
jge
imul
inc
cmp
add
and
pop
cmpb
adc
cmp
push
mov
mov
iret
cmp
or
push
loop
adc
or
movsl
scas
cwtl
cmpsl
xchg
and
xor
sti
xor
pop
addr16
pushf
out
xchg
lahf
lret
inc
adc
adc
aam
scas
mov
js
xchg
stos
es
addl
sbb
repnz
jecxz
push
pop
adc
and
repnz
add
cwtl
jmp
loope
cld
lret
daa
xchg
jne
jo
mov
inc
fildl
inc
push
jnp
pop
or
xchg
cmpsl
loopne
add
out
push
rclb
clc
mov
pop
sahf
push
movsb
mov
mov
rcrl
push
cmp
pop
inc
or
cwtl
icebp
pop
xor
je
lods
push
je
addb
in
leave
push
stos
roll
xor
std
mov
cwtl
aaa
aas
xchg
inc
push
cmc
fisubs
and
xor
sbb
push
out
or
test
outsb
sbb
pop
into
adc
lret
cli
dec
add
fs
and
mov
cwtl
iret
cmpsb
cmp
lock
mov
ja
or
scas
stc
loope
jecxz
out
pop
mov
dec
rcll
mov
mov
push
outsl
out
mov
xor
jo
push
sub
add
cwtl
mov
outsl
jl
sub
jl
sbb
mov
push
es
fimull
push
mov
inc
dec
cltd
add
inc
dec
stos
idivl
cmp
inc
push
mov
mov
cli
sub
pop
in
sarb
lahf
aaa
scas
out
loop
in
stc
shlb
dec
ss
clc
xor
sahf
lock
and
fldt
repnz
pop
sub
imul
dec
int3
and
scas
push
add
add
mov
mov
sub
cs
mov
lcall
pop
bound
mov
xor
inc
and
cmp
stc
pushf
rcl
das
adcb
add
in
lds
adc
mov
mov
inc
jecxz
int
add
pop
lds
ret
push
inc
push
inc
int3
fdivrs
xor
out
jbe
hlt
loopne
incl
pop
rorb
fidivrl
xchg
leave
mov
xchg
cmp
insb
out
or
inc
orb
mov
push
loopne
mov
inc
or
scas
jp
mov
std
stos
cmp
and
int3
rcl
rclb
mov
movsl
cmp
aad
mov
or
xchg
aam
repnz
dec
add
dec
adc
into
sbb
sbb
and
sbb
and
aas
inc
dec
or
xchg
in
push
or
adcb
mov
scas
addb
mov
or
movsl
mov
push
mov
in
testl
jle
jmp
add
push
and
jae
imull
lds
dec
leave
xchg
mov
pop
adc
push
push
dec
cmpsb
inc
fadd
adc
ljmp
sub
xor
xlat
push
push
mov
add
mov
into
mov
jae
ss
xor
mov
jp
stc
jo
jg
pop
mov
mov
push
push
sbb
pop
dec
out
xchg
insw
dec
adc
lret
rcll
add
sub
movsl
ss
inc
push
std
repnz
cmp
mov
divb
loope
pop
loope
dec
test
cmp
gs
xor
loop
lcall
addl
lods
das
add
shlb
xor
scas
into
jnp
pop
and
xor
dec
fdivs
in
jb
dec
in
pop
pop
dec
loopne
stos
test
inc
lcall
stos
sbb
lods
mov
stos
inc
mov
test
mov
mov
sub
fnsave
test
sbb
pop
dec
test
fists
jno
leave
cs
jne
xchg
add
je
mov
dec
jnp
mov
cmpsb
stos
xchg
mov
inc
jno
insl
adcl
leave
pop
addr16
jo
jno
inc
shr
and
mov
mov
mov
or
cmp
aaa
mulb
jg
fiadds
gs
repnz
sub
or
in
in
lds
add
ret
jnp
data16
data16
jge
das
ljmp
mov
mov
xchg
add
push
add
fadd
mov
sahf
pop
loopne
add
add
and
xor
mov
xchg
enter
mov
xor
xchg
insl
mov
aad
and
hlt
xchg
xchg
into
fsubl
js
mov
repz
fs
lea
pop
repnz
mov
testb
clc
sbb
lret
stos
pop
lcall
jo
les
dec
push
jbe
mov
add
and
decb
sbb
jns
loop
je
pusha
fldenv
bound
cli
scas
in
pop
dec
cmp
in
enter
pusha
mov
lock
fimuls
leave
int
cmp
call
aad
je
adc
cltd
inc
xor
push
cmc
push
scas
and
ret
mov
mov
test
sbb
mov
adc
adc
mov
adc
popa
into
mov
test
gs
icebp
and
loop
js
cmp
cmp
mov
outsl
sub
sub
addb
xchg
sub
jbe
mov
xor
xlat
je
jae
xor
mov
jecxz
sbb
adc
scas
rolb
popa
int
es
mov
xor
xor
shll
dec
imulb
sarb
mov
cmp
inc
das
popa
inc
jmp
and
scas
aas
mov
std
jle
sbb
call
jge
lcall
sarl
inc
lcall
mov
insb
inc
xor
mov
cmpsb
inc
dec
shll
or
insb
jl
fadds
mov
cltd
out
ja
outsb
sub
ret
roll
adc
inc
hlt
xor
add
lahf
fidivs
push
fimuls
ja
daa
xor
out
les
mov
pop
aad
ficompl
inc
inc
arpl
aam
push
ljmp
lea
popl
inc
push
sub
inc
bound
xchg
lret
and
pushf
aas
add
stos
fiadds
jne
mov
add
jae
loope
xor
xchg
ljmp
push
lahf
daa
pop
mov
cs
out
pusha
jge
jbe
nop
inc
std
fwait
xor
add
and
shrl
mov
push
xchg
div
fs
scas
test
pop
dec
xor
aam
sbb
jge
aad
xor
mov
aas
aad
pop
rcrb
mov
push
popl
rcl
mov
jge
icebp
xchg
aaa
adc
push
xchg
inc
xor
iret
test
inc
fmul
sub
or
mov
push
das
xor
or
xchg
pusha
mov
dec
xlat
out
sub
mov
in
xor
jae
mov
inc
or
mov
cmp
add
clc
ljmp
jge
leave
push
xchg
sbb
push
aad
lods
push
sub
cs
jno
add
pop
lcall
push
push
das
ficompl
sbb
std
xor
dec
test
cmp
inc
das
stos
dec
add
xor
or
dec
int
nopl
fimuls
lea
test
aaa
jne
fnsave
xchg
xchg
pop
xor
out
outsb
xorb
lods
inc
test
mov
push
fsubrs
pop
pop
and
jns
loope
inc
insl
test
bound
push
jo
clc
pop
jmp
dec
or
mov
fidivrs
dec
rolb
pop
scas
jecxz
movsl
dec
stos
scas
ficomps
or
dec
cltd
jns
dec
pop
shlb
mov
ja
push
rorb
jg
dec
in
inc
sahf
repz
das
dec
adc
sbb
adc
sub
out
test
mov
pop
jmp
aaa
mov
mov
fdiv
test
jg
cmp
jp
add
or
outsb
xchg
in
fwait
stc
pop
out
lods
or
xchg
mov
push
outsb
in
ljmp
or
push
hlt
fidivrs
add
xchg
roll
imul
inc
and
mov
and
adc
pop
faddl
iret
shlb
cmpb
ficoms
cmp
xchg
jo
xor
mov
in
mov
and
push
sbbb
cmp
adc
and
fildll
lds
sub
or
lcall
xor
lret
add
loope
add
jnp
nop
sahf
xchg
inc
in
das
fisttpl
inc
mov
in
dec
jno
mov
or
add
mov
gs
in
pop
mov
xchg
push
and
stc
push
adc
shll
adc
add
insl
mov
add
mov
xchg
arpl
and
jge
cmpsl
push
movsb
xchg
insl
inc
lea
mov
jl
dec
xchg
int
scas
rol
mov
push
push
and
stc
add
cmc
pop
imul
in
inc
out
jns
fs
jl
xchg
jo
xor
test
push
pop
imul
in
push
fcoms
js
jecxz
int
test
outsl
fwait
call
sarl
int
cmpl
test
movsl
loopne
inc
orl
mul
ret
bound
stc
sbb
mov
test
outsb
cmc
je
jb
mov
testl
jmp
jne
and
xchg
ja
loope
jae
int
push
mov
clc
mov
add
dec
xor
sub
lret
and
es
mov
sbb
jp
push
cmp
adc
cmp
push
shr
dec
lret
lret
sub
into
in
mov
test
xor
or
jnp
adc
push
je
push
ljmp
adc
cs
shlb
mov
repnz
jp
in
mov
mov
leave
pop
je
add
imul
dec
xchg
aaa
cmpsl
in
sahf
rcr
pop
jne
mull
int3
sbb
lods
xor
mov
or
mov
mov
xlat
adc
aaa
ss
mov
icebp
mov
add
mov
ret
out
in
sub
js
jns
lock
aad
lret
or
ja
mov
lret
ja
or
les
jne
mov
popf
pusha
aas
jle
adc
dec
fimull
pop
std
jmp
arpl
inc
jb
je
xchg
and
and
cmp
hlt
hlt
les
or
cmp
popf
and
cmc
or
pop
mov
push
adc
dec
jbe
or
mov
sub
jne,pt
fs
or
loop
or
xchg
fsub
arpl
mov
pop
dec
mov
sbb
push
test
scas
mov
cli
sti
jbe
pop
mov
and
lahf
pop
movsl
dec
jmp
pop
je
outsl
aaa
push
or
xchg
and
notl
push
xor
imul
inc
sbb
or
xorb
push
adc
enter
inc
negl
push
lock
movsl
call
jl
push
arpl
xor
push
cwtl
mov
lods
xlat
loopne
dec
cltd
mov
mov
out
lahf
ja
sub
flds
cmp
pop
xchg
nop
mov
add
cli
jg
adc
xor
std
cld
clc
mov
pop
jnp
das
push
adc
jns
out
cmp
into
ret
mov
nop
pusha
mov
fnsave
sub
les
dec
adc
jns
sbb
xor
mov
xchg
stc
cwtl
lcall
stos
dec
push
out
bound
push
inc
cli
pop
arpl
push
in
mov
dec
or
stos
int3
cmc
or
jecxz
mov
cmpsl
fs
lds
jg
or
jl
dec
lods
fistpll
mov
scas
lock
jb
cmp
rolb
fistl
sub
mov
or
fcompl
mov
add
out
roll
xorb
add
push
clc
or
data16
lock
shl
xchg
test
les
cs
ret
rol
pop
repnz
inc
mov
ss
push
mov
cwtl
vprotd
addb
inc
test
in
xchg
add
sub
push
mov
jne
mov
xor
mov
cld
bound
mull
mov
mov
add
adc
add
popf
popa
cs
pop
dec
movaps
test
adc
fnsave
imul
xlat
mov
ja
mov
xor
push
rol
jo
arpl
mov
fnstcw
pop
sbb
imul
or
int3
xor
iret
push
mov
lahf
repnz
cmc
cmp
scas
xor
mov
out
or
pop
aad
fcoms
push
shll
movb
ja
jmp
jo
mov
xchg
add
arpl
cld
shl
cmpsl
pop
and
inc
in
iret
jl
or
adc
arpl
popl
bound
jmp
dec
push
push
sub
add
and
cmpsb
jns
or
in
das
or
ss
cs
add
lret
push
in
and
cmp
push
sbb
and
push
xor
stos
mov
jle
xchg
mov
pop
in
dec
lock
push
out
jns
mov
push
fld1
add
test
mov
es
sub
xchg
xchg
xorl
pop
xlat
inc
rclb
movl
push
mov
adc
lahf
adc
jb
nop
mov
jp
sti
cmp
xchg
xor
stos
lret
sbb
dec
xchg
arpl
aad
adc
mov
sbb
xchg
mov
sub
sbb
leave
addl
insb
or
jo
fisubrs
fsubs
mov
popf
ja
mov
out
popa
add
xlat
push
fadds
jo
sub
in
inc
sahf
in
call
mov
pop
iret
and
scas
and
repz
add
pushf
xor
test
test
xor
movsl
lcall
inc
and
xchg
fcoms
ss
lcall
pop
pmulhuw
scas
int
jl
in
dec
jae
pushf
mov
pushf
into
cmpsl
out
out
sub
sahf
pop
xor
fmuls
mov
daa
out
mov
nop
xlat
movsb
movsl
xlat
aaa
lock
fwait
dec
jmp
loopne
stc
mulb
push
lods
daa
aas
cmp
jg
cmp
xchg
xor
inc
or
push
mov
lea
sbb
popf
sub
and
adc
and
sti
adc
js
sub
in
pop
jmp
jecxz
sti
sarb
out
cmp
pop
jmp
daa
add
pop
lods
fdivs
aad
ds
sub
out
in
aaa
std
insl
inc
jmp
cld
pop
or
lret
lahf
and
test
jmp
idivl
xchg
loope
call
push
mov
ljmp
add
mov
aaa
sub
sti
or
jo
movl
out
sbb
push
adc
vcvtpd2dqy
test
arpl
pusha
jge
fimuls
pushf
adc
and
shl
fdivp
incb
ficomps
pop
jbe
loop
or
jo
adc
loope
push
lret
loop
xor
xchg
out
ret
mov
bound
divl
mov
xor
rolb
mov
iret
arpl
in
xchg
add
sub
fs
fsubl
dec
addr16
mov
mov
mov
cmp
and
and
mov
popa
or
fcmovbe
dec
std
jbe
xor
adc
mov
mov
prefetcht0
sbb
das
int
inc
push
xchg
mov
cli
push
das
pushf
mov
cmp
cwtl
sbb
stos
mov
xlat
popa
shll
mov
fisttpl
push
mov
roll
xchg
mov
dec
pop
nop
lea
in
frstor
and
sub
gs
cs
jmp
imul
jp
dec
sub
inc
ret
pop
xchg
fcomi
xor
lods
dec
xchg
bound
pop
loopne
cwtl
into
shl
mov
sbb
sti
fsubl
mov
ficomps
sub
cmp
mov
sbb
cmpb
bound
roll
fildl
mov
ret
cmp
xchg
cmp
or
cwtl
ret
push
or
cmp
dec
and
add
std
and
push
outsl
pop
inc
sub
mov
sbb
in
mov
in
pop
push
and
or
scas
adc
les
lahf
rol
es
ss
out
cmc
popa
cmp
icebp
aam
push
insl
stos
cmc
sub
sbb
decb
mov
add
aas
push
lahf
arpl
adc
movsl
sarl
lret
shll
stc
mov
mov
mov
dec
jb
fstps
jp
rcll
lock
push
jmp
std
xor
jmp
adc
mov
or
pushf
jnp
ljmp
push
in
inc
dec
imul
mov
cmpxchg
popa
dec
loope
clc
cmp
stos
fdivrp
push
mov
int3
push
stc
movsb
sti
mov
xchg
lods
insb
push
push
std
imul
sbb
jp
push
pusha
pop
or
push
int3
mov
mov
dec
push
xor
jl
aas
mov
lcall
loop
fsubrl
mov
mov
xchg
ljmp
jl
dec
jecxz
stc
pop
lret
mov
mov
mov
into
iret
mov
std
mov
lret
mov
and
lahf
dec
enter
mov
or
adc
out
ljmp
push
leave
push
dec
fldt
push
pop
pop
rcr
jno
push
push
lahf
loope
testl
rcll
shr
mov
sbb
mov
loop
dec
into
sbb
cld
mov
push
push
pop
xorl
adc
jbe
sbb
and
sub
jb
or
stos
mov
out
nop
add
jnp
jnp
in
add
mov
jg
cli
or
sahf
js
push
ss
dec
sbb
add
subl
dec
dec
xchg
push
into
outsb
filds
negb
dec
lock
cld
mov
pop
test
sub
andl
inc
xchg
cmpsb
stos
iret
xor
call
dec
gs
xor
xchg
jno
mov
dec
test
daa
xchg
jno
outsl
mov
pop
adcb
inc
pop
push
iret
sbb
push
lahf
arpl
add
xchg
mov
out
dec
add
push
aaa
mov
lea
ret
add
mov
push
loop
in
outsb
lcall
xor
pushf
iret
and
push
fldl
stos
add
push
jg
sub
les
mov
add
aad
cs
xchg
cli
jg
mov
sti
test
jnp
clc
in
mov
loope
cltd
outsb
mov
fsub
pop
dec
aas
ljmp
sbb
pop
push
mov
push
in
mov
jmp
mov
test
mov
sti
xchg
push
inc
xlat
and
pop
shrl
pop
imul
fdivrs
lcall
fimuls
pop
sahf
popf
mov
loope
mov
fidivl
icebp
mov
jns
call
js
jne
adc
xchg
push
cmp
add
mov
dec
sar
dec
mov
les
jl
ds
mov
pop
into
call
aas
mov
push
fiadds
out
shll
sbb
adc
int3
mov
cmp
shl
pushf
lock
aas
fisttpll
repnz
mov
mov
cli
aad
cmp
adc
pop
mov
adc
cwtl
push
xchg
push
cwtl
mov
add
fldl
fdivs
orb
jno
sbb
inc
sbb
jns
test
cmc
push
inc
sbb
negb
xor
loop
pop
jae
mov
cmp
shl
dec
sub
sbb
dec
and
mov
jae
lret
pushl
xchg
ret
jmp
jb
or
inc
sub
push
xchg
cmp
cmp
outsb
std
push
sbb
fildl
mov
inc
leave
xor
mov
mov
ljmp
sbb
test
adc
pusha
mov
adc
cmp
out
adc
cmpsl
orl
int3
adc
lds
inc
xchg
movsl
popl
xor
xchg
ficoml
in
js
dec
push
leave
push
jno
push
scas
or
sti
insb
mov
jecxz
imul
dec
push
bound
push
aaa
mov
inc
ret
push
testb
inc
mov
dec
loopne
lds
imul
mov
cmp
mov
mov
sbb
pop
call
mov
mov
adc
push
jge
int3
and
jge
push
push
jmp
jno
add
push
lahf
jge
xchg
shll
dec
and
pop
jne
es
mov
sub
pop
enter
jo
mov
pop
scas
or
ret
test
pop
psrlw
scas
ficoml
xor
jg
insb
hlt
into
adc
push
add
add
orl
and
mov
sbb
mov
and
mov
andl
lea
movzbl
and
mov
and
mov
mov
sub
orl
add
mov
mov
xor
orl
add
movl
jne
jmp
movl
cmpl
je
cmpl
jl
jmp
pushl
push
push
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
negl
sub
xor
mov
mov
mov
orl
xor
xor
adcl
sub
andl
sub
xor
mov
movl
mov
movl
mov
jmp
movl
cmpl
je
cmpl
jb
jmp
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
mov
adcl
xor
subl
xor
sub
sub
andl
mov
inc
mov
cmpl
jge
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
movzwl
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
call
jmp
mov
sbb
mov
add
adcl
imul
mov
adc
mov
mov
xor
mov
adcl
add
or
mov
mov
adc
mov
add
adcl
xor
adcl
mov
adcl
mov
mov
andl
add
addl
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
jmp
ficomps
xchg
dec
mov
ret
fmul
jl
jmp
jl
jl
sahf
cmp
call
fmuls
mov
adc
dec
cwtl
loopne
jge
cmp
test
outsb
mov
or
mov
inc
dec
es
push
xchg
sbb
out
shrb
push
imul
cmp
dec
shrb
lock
mov
es
clc
outsb
shll
and
mov
cli
in
fbstp
xchg
push
sub
in
hlt
pop
and
add
cmp
jp
and
jg
mov
dec
js
xorb
push
int3
int
mov
add
test
and
cwtl
adc
in
pop
popl
push
sub
inc
pop
cmc
hlt
test
xchg
ret
andl
push
cmc
mov
adc
push
xorl
sub
sahf
cmp
xor
push
xor
mov
jmp
cli
dec
or
sub
mov
xor
xor
lods
bound
jae
push
iret
pop
out
ljmp
jecxz
and
and
cmp
mov
push
shrl
mov
dec
ret
jmp
lret
imulb
dec
ffree
nop
cmpsl
jb
jl,pn
ret
dec
jmp
pusha
cmp
mov
sub
dec
fwait
je
das
orl
shll
push
inc
push
add
mov
push
shlb
xor
cs
cmpb
test
adc
pusha
out
adc
add
jns
aam
lahf
adc
daa
inc
cmp
in
cmp
lret
aam
cltd
js
clc
idivl
cmpsl
add
add
fwait
xchg
jnp
add
test
xchg
cltd
ret
sarl
stc
loope
jb
and
push
dec
push
fdiv
dec
jg
andb
ss
es
xchg
aaa
test
inc
push
sub
jne
les
pop
std
jecxz
push
fs
lods
push
sbb
mov
jo
testb
mov
push
imul
lods
dec
andl
jne
xor
sbb
orb
mov
aad
pop
popa
pop
ss
les
cmpsl
add
mov
je
mov
or
sub
dec
push
cmc
jmp
fwait
inc
xor
xor
xor
mov
rcll
imulb
xchg
xor
cmp
out
xor
in
dec
jl
lea
dec
stc
adc
push
addl
mov
das
scas
add
xor
int
icebp
xchg
nop
sbb
ljmp
es
mov
pusha
pop
clc
and
mov
mov
rcrl
pop
roll
sbb
jecxz
sti
cmp
lahf
jmp
fsubrl
sbb
adc
adc
mov
mov
jmp
adc
int3
sub
out
lcall
jge
cmc
mov
or
mov
fcmovbe
jecxz
orb
dec
xchg
insl
sub
dec
iret
mov
add
pop
sbb
cltd
repz
ret
lahf
insl
loop
add
scas
imul
aad
add
jo
mov
dec
fwait
repnz
jno
jmp
popf
push
in
mov
std
lds
inc
lock
pop
push
int3
shlb
dec
out
sbb
sahf
ret
subb
dec
push
jno
sti
test
sub
mov
cwtl
push
imul
cmp
push
fsubs
inc
jmp
je
pop
adc
pop
gs
or
mov
xchg
adc
adcl
xor
or
rol
mov
dec
aas
clc
sbb
adc
les
repz
not
in
xor
xchg
dec
stc
sbb
and
jg
xor
push
mov
cmpsl
orb
mov
rcll
fstpt
lds
aam
test
bound
add
and
imul
pushf
mov
stc
cli
xchg
fdivrl
cmpb
scas
outsb
mov
push
mov
repz
xchg
daa
addr16
lret
ds
sbb
mov
mov
clc
mov
scas
and
outsb
in
repnz
xchg
or
cwtl
jns
xor
xchg
jg
shll
lret
neg
jg
push
xchg
invd
pop
and
pop
pop
mov
popf
daa
repz
sbb
int3
adc
das
aaa
stc
lahf
adc
arpl
outsl
mov
ljmp
clc
gs
pop
jg
mov
inc
xchg
ficompl
outsb
nop
adc
pop
ja
int
aaa
mov
push
xor
das
jae
popf
or
outsl
fdivrp
cmp
loop
fadds
push
jecxz
js
gs
jmp
sbb
mov
push
cli
mov
add
jge
pop
fmuls
mov
mov
mov
cmovg
stos
jbe
add
stc
xor
pop
je
adc
pop
addr16
inc
out
mov
mov
nop
cmc
jge
jg
roll
insl
cmp
icebp
ja
push
mov
and
push
arpl
jb
cmp
inc
sbb
and
hlt
test
lahf
in
ret
sbb
bound
outsb
push
sar
xchg
cmp
test
ljmp
xchg
icebp
or
mov
sahf
jle
lret
aam
dec
dec
jbe
lcall
sub
outsb
jecxz
cmp
xor
jnp
filds
ljmp
sbb
pop
jge
adcb
test
mov
cmpb
xchg
aad
xor
ror
int3
sbb
push
mov
pushf
outsl
pusha
cmp
xchg
add
push
stos
std
lret
jle
and
test
es
pop
jle
inc
mov
pop
jnp
loopne
push
dec
pushf
fbld
insl
fisubrl
imul
hlt
cld
negb
cmp
mov
xor
pop
add
jecxz
jecxz
orl
jae
xchg
outsb
imul
fwait
push
mov
rolb
out
mov
mov
cmp
insl
mov
push
cmp
cmc
psraw
mov
sub
xchg
lods
push
sub
push
inc
lea
jecxz
iret
mov
or
inc
push
jne
or
inc
or
int
pop
pop
add
hlt
and
xchg
fisubs
repnz
dec
stos
ds
xor
enter
testl
sbb
lods
mov
rclb
adc
pop
push
xchg
xor
add
pop
test
stos
and
push
int
or
es
mov
nop
cmpsl
lods
sub
cmpsl
popa
stos
xchg
pop
inc
fcmovnb
call
in
in
cli
in
and
lods
jmp
repnz
das
jge
scas
and
cmp
dec
add
test
and
in
imul
ja
add
mov
std
push
out
out
call
test
lea
movsb
add
inc
mov
mov
cmpsb
outsb
xor
shrb
sbb
fnstcw
or
cld
mov
aad
dec
push
jo
jle
stc
adc
push
push
outsb
lods
pop
popf
cmc
push
sub
out
mov
gs
flds
subl
xor
sbbl
sub
iret
aaa
cs
mov
icebp
sub
jp
push
int
mov
sbb
sbb
icebp
test
sahf
pop
mov
jp
fsubrl
fmull
aas
adc
test
add
inc
xchg
cmp
int
add
dec
sti
inc
push
hlt
xor
fisubrl
stos
les
add
lret
inc
sbb
scas
dec
ret
sbb
inc
and
mov
sub
cltd
mov
mov
out
xchg
imul
xor
add
in
in
outsl
fsubl
sub
test
mov
dec
aaa
jne
mov
iret
test
gs
push
dec
push
mov
clc
aam
aaa
sti
mov
and
inc
cmp
xchg
inc
shlb
jle
lods
pop
movsl
sbb
sbb
out
hlt
xor
icebp
jno
sbb
xchg
mov
jmp
jl
adc
sbb
jecxz
pop
lods
jmp
and
int
out
cmp
outsb
pmullw
ficoms
pop
lret
mov
in
bound
lret
mov
out
dec
mov
mov
lret
xorl
in
in
shlb
repz
dec
mov
xor
call
mov
cmpsb
sbb
xchg
cmp
pop
lods
repnz
mov
inc
inc
fldenv
mov
arpl
mov
xor
lock
scas
inc
je
xchg
dec
loopne
in
cwtl
pop
pop
pop
test
xchg
lock
sbb
repz
lods
repz
dec
icebp
mov
push
pushf
add
fsubrl
sub
push
push
lock
fmuls
and
push
inc
int
add
adc
jge
dec
outsl
inc
mov
pop
jo
and
adc
ret
jmp
int
clc
xor
cmpsb
sub
xchg
into
cmp
es
push
mov
rcll
xchg
jnp
adc
out
cld
jno
setno
jb
daa
cmp
adc
popf
push
aas
scas
jnp
sahf
insl
add
imulb
cld
cmp
out
mov
movsl
dec
lea
adc
incl
movsb
sub
lods
fiadds
sub
fs
push
sub
decb
xor
adc
clc
xor
aaa
lds
jle
je
mov
int
ficomps
jp
pop
mov
cmpsl
cwtl
jbe
popf
test
out
jmp
mov
adc
cltd
inc
fneni(8087
gs
scas
shl
inc
lods
sub
test
out
lahf
mov
stos
cmpsl
dec
out
stos
ljmp
jns
fsts
lods
cltd
mov
in
xchg
stos
mov
jp
push
sbb
sti
lock
ret
cmpsb
bound
stc
or
mov
xchg
ds
subl
bound
push
jmp
sub
ret
pop
pop
pusha
jge
and
cmp
lea
mov
jecxz
imul
xchg
lea
dec
pop
add
sahf
addl
sbb
sub
mov
pop
movsl
or
cmp
cmp
sub
frstor
push
cli
shl
add
shll
out
in
inc
and
mov
pushf
in
mov
and
les
mov
add
out
push
imul
call
xchg
jmp
inc
stos
ja
and
aaa
add
pop
jbe
lret
test
add
jns
push
lcall
jo
loopne
rclb
add
mov
ret
push
and
xor
mov
cmp
push
sbb
or
aad
xchg
dec
ret
mov
xchg
jb
fs
mov
mov
andb
inc
stos
xchg
lods
mov
mov
push
xchg
frstor
mov
xlat
std
sub
mov
cld
les
mov
dec
stc
imul
lods
ljmp
and
xor
add
insb
lahf
push
adc
inc
into
push
add
les
mov
pop
pop
cmpsl
ds
popa
cmpsb
dec
repz
ljmp
test
xchg
cmp
loop
imull
xchg
xlat
sti
addr16
cmc
leave
mov
jnp
xorl
lahf
inc
cmp
loop
push
fstpt
sbb
sti
fbld
mov
mov
xlat
jp
lods
ds
xchg
bound
adc
cmc
movsl
push
imul
pop
push
dec
mull
call
inc
sub
test
mov
jb
arpl
sub
inc
aad
pop
push
test
add
fnsave
lea
jg
inc
cmc
cmp
fwait
adc
lock
outsl
or
xchg
jne
lea
sbb
mov
mov
pop
xchg
imul
shlb
adc
add
push
adc
loope
inc
mov
mov
mov
ret
stos
xor
jns
movsl
push
test
aaa
jmp
fsubr
cli
adc
mov
int3
repz
lahf
pusha
imul
push
mov
xor
cmp
inc
mov
ss
sbb
mov
mov
pushf
add
sbb
std
sub
push
lret
call
cmpb
cmp
lret
out
xor
repnz
push
ss
insb
xor
push
jg
xchg
cmp
push
fsub
sbb
mov
push
fisubs
mov
add
jo
dec
or
xlat
cmpsl
sub
dec
adc
ret
sub
xor
movsl
pextrw
inc
sbb
sub
xlat
loopne
jmp
mov
das
dec
push
aam
pop
ljmp
adcb
lahf
ss
es
mov
pop
sti
and
rcrb
jb
mov
aam
lods
cmc
sub
adc
or
iret
sbb
pusha
adc
loope
js
jge
and
inc
inc
xorb
add
sahf
mov
mov
test
push
dec
push
jo
outsl
fwait
mov
test
cmpsb
mov
dec
and
or
xor
pushf
dec
loop
and
sbb
push
push
pop
popf
mov
sub
pop
hlt
mov
mov
in
or
dec
or
leave
orl
mov
add
inc
add
scas
imul
or
xchg
dec
dec
jns
outsl
bound
dec
cmpsl
mov
pop
fcomip
xor
cld
andb
call
dec
dec
xchg
or
jmp
rcrl
sbb
iret
and
mov
push
loop
call
out
test
aam
pop
xchg
or
mov
mov
jns
lds
hlt
xlat
mov
pop
xor
inc
dec
pusha
fstp
aas
lods
sub
test
mov
sbb
fs
or
xchg
bound
outsb
sub
push
test
mov
iret
loope
insl
dec
mov
lds
xor
ss
cwtl
inc
ret
outsb
dec
bound
out
daa
and
pop
xchg
or
in
jae
sub
dec
sub
repnz
pop
adc
lahf
jbe
arpl
shl
sub
jmp
test
push
or
jne
sub
mov
rcll
loope
push
mov
sub
aaa
add
in
and
dec
in
mov
subl
xchg
jo
into
movsb
cmp
jecxz
popa
std
out
fidivrl
xchg
fs
dec
pushl
fdivr
repnz
sahf
or
xor
fs
stos
xor
lret
push
push
lea
jnp
jo
sub
push
xchg
xchg
sub
popf
adc
jg
jns
mov
lret
test
stc
sahf
add
sub
std
jo
mov
stos
sbb
and
gs
or
in
inc
mov
mov
in
lea
enter
ljmp
or
dec
orb
adc
lcall
movsl
cld
add
mov
pop
fisubrs
or
pop
and
int3
out
dec
mov
outsb
sti
aam
inc
xor
adc
fucomip
mov
dec
xchg
xchg
push
cld
mov
jp
sub
pop
push
into
ficoml
cmpsb
jge
std
fimull
in
mov
in
in
jns
or
cmp
cmpsl
sub
jge
shl
loop
inc
lahf
sbb
pop
imul
or
int
sti
and
mov
pop
fidivs
push
fstps
mov
sbb
addr16
jle
add
lret
inc
sub
add
and
insb
push
jg
mov
or
jbe
pop
in
mov
mov
fildl
int3
mov
imul
pushf
mov
xchg
hlt
dec
mov
loope
vpsubb
mull
mov
sti
insl
fbld
out
mov
mov
call
mulb
jo
je
dec
cmpsl
pop
imul
push
jnp
pop
cltd
into
fnstcw
mov
cmp
int
int
es
jno
and
scas
es
jb
test
sbb
imul
icebp
in
stos
ret
popa
stos
out
cmp
lahf
movsb
jmp
sbb
xchg
or
or
aam
jb
pusha
inc
inc
popa
negb
aam
sti
inc
popf
in
lahf
lods
test
ljmp
scas
frstor
aad
test
inc
pop
enter
push
push
dec
pop
daa
mov
loop
mov
sarb
jmp
mov
fistl
mov
les
dec
mov
lea
xchg
imul
test
aas
ret
incb
mov
test
cmpb
inc
popf
mov
push
aaa
cmp
mov
stos
xchg
xchg
push
and
mov
and
lret
dec
ret
addr16
jbe
mov
icebp
sarl
jnp
mov
sub
mov
jle
insb
mov
mov
add
lock
jmp
mov
ljmp
and
xlat
mov
test
in
aaa
fisttps
mov
rcrb
test
xchg
lods
add
mov
jmp
sub
adc
ss
mov
jo
jo
xchg
adc
rclb
stos
push
fwait
xchg
ljmp
fs
sub
clc
mov
loopne
add
pop
inc
push
lret
loop
jecxz
sbb
mov
jbe
enter
mov
lcall
cmp
dec
and
test
adc
subl
mov
push
pop
adc
inc
outsb
movsb
cmp
lock
cli
aad
mov
ds
mov
pop
out
cmpsl
rorl
xor
stos
or
pop
sbb
ja
or
into
push
lret
push
cmp
or
out
xchg
cld
mov
xor
jo
or
popa
xor
out
test
mov
push
sub
out
test
imul
mov
push
fistl
push
in
fwait
cmp
call
mov
out
jnp
sbb
outsb
bound
nop
fisubs
adc
xor
and
add
mov
jg
repnz
adc
cmc
inc
cmp
and
ds
repnz
jns
inc
jge
and
or
mov
mov
into
adc
aaa
jns
push
inc
clc
lret
push
ret
cmpsb
fcomps
and
or
push
inc
sbb
and
jne
shlb
inc
sbb
gs
clc
dec
xchg
ret
clc
mov
lods
scas
lods
mov
stos
mov
push
jnp
dec
or
decb
push
test
add
gs
dec
mov
fisubrs
push
and
mov
bound
fldcw
mov
inc
test
mov
jnp
cmpl
and
mov
or
in
xchg
test
fcompl
in
cmp
xchg
addr16
ficomps
movsl
call
int
imul
mov
cli
add
xor
jo
sub
pop
jmp
add
sub
neg
push
pop
xor
out
pop
enter
repnz
or
push
or
or
mov
jp
scas
jnp
xor
ljmp
mov
testb
cmpsl
int
cwtl
mov
fldlg2
test
mov
nop
cmp
loopne
out
ja
cmp
push
jcxz
rcll
jecxz
jno
orl
xchg
sbb
shll
and
cld
sbb
inc
mov
push
and
mov
adc
mov
mov
sarl
stc
push
out
fcmovnb
add
je
mov
cmpsb
pop
cltd
cli
sti
inc
leave
gs
fnsetpm(287
jbe
cmpsb
cmp
insl
mov
aas
xchg
add
inc
scas
sbb
cs
jns
cmpl
aaa
insb
mov
xchg
push
gs
lds
dec
cmp
clc
pop
xchg
sahf
sub
sub
lods
adc
lock
add
xor
testb
xchg
sub
outsl
insb
jmp
out
dec
jg
and
insb
stos
cmp
popf
cmp
test
pop
sar
sarb
clc
cmpsb
mov
cmpsl
xchg
jae
lret
imul
call
push
nop
xchg
mov
aad
xor
pop
sbb
xor
mov
push
jae
std
jae
les
fucompp
test
mov
inc
adc
pop
pop
lret
cs
in
mov
push
icebp
cwtl
in
test
in
cmpsb
mov
inc
rclb
scas
movsl
mov
test
pop
pop
jg
call
pop
add
call
mov
jnp
jp
xchg
les
cmp
ret
dec
and
inc
lods
and
dec
aaa
fmulp
mov
push
jl
popa
movsl
lret
mov
gs
mov
imull
and
fs
mov
sub
mov
lea
mov
out
fnstcw
xchg
fdivrl
shll
bound
sub
xchg
sub
push
adc
xor
sub
lods
fidivl
jmp
or
loop
aam
or
jns
ss
movsb
mov
cmpsl
imul
out
jmp
mov
jl
movsb
rolb
sbb
test
cmp
adc
inc
mov
popf
jb
mov
ror
xchg
int3
or
stc
cld
clc
and
inc
or
aam
ret
or
sarl
mov
xchg
xchg
add
adc
sub
push
aaa
pushf
je
xor
jl
bound
and
jns
movsb
sti
cmpsl
mov
xchg
dec
mov
mov
sbb
outsl
add
arpl
cwtl
jb
ret
mov
lcall
movsb
jmp
nop
test
mov
xsha1
cmpsb
lret
scas
enter
mov
jns
fwait
pop
cmc
das
out
out
fisttpl
cmp
sub
sub
stos
sub
inc
stc
lods
push
and
jg
icebp
sti
push
push
mov
mov
das
jle
and
jbe
cwtl
aam
data16
cwtl
mov
push
nop
cmpsb
adc
mov
xabort
adc
in
inc
inc
mov
and
mov
ret
rclb
sub
pop
mov
arpl
mov
xor
and
inc
shll
or
jb
gs
sbb
push
cld
pop
jbe
icebp
pop
xchg
pop
test
jecxz
push
jp
xchg
pop
lods
shrl
or
jns
scas
push
insb
loopne
je
and
xchg
sub
pop
mov
sbb
ss
arpl
arpl
mov
sub
jl
push
mov
inc
shrl
push
mov
cmc
icebp
dec
cmpsl
in
mov
cmp
sub
loopne
bnd
jecxz
pop
push
rclb
dec
inc
dec
inc
inc
add
sub
xor
nop
es
mov
test
enter
cmp
pop
push
loopne
paddusb
shrl
stos
mov
dec
movq
iret
xchg
pop
aam
jle
inc
dec
add
fsubs
out
imul
mov
cli
inc
push
psrlq
bound
rorb
adc
addr16
nop
push
jle
inc
daa
aas
bound
out
cmp
stos
push
fisubrl
into
mov
cmpsl
and
xchg
push
ja
daa
push
stos
cmp
pop
add
mov
and
into
lds
mov
xor
jne
out
addl
out
or
inc
int3
push
sbb
incl
cmp
pusha
frstor
adc
rorb
insl
fisttpll
sub
daa
stc
jp
imul
sbb
cmc
pop
inc
cmp
pop
lahf
inc
dec
ja
sbb
jo
and
or
orb
pop
jbe
push
add
mov
jmp
addl
pop
push
push
add
jnp
add
lret
jns
sbb
sbb
std
cmp
push
adc
mov
daa
pop
mov
sub
fldt
bound
inc
or
test
sbbl
mov
ret
fidivs
jnp
jb
xchg
roll
mov
fimull
arpl
push
mov
stos
jbe
rcll
roll
mov
xor
loop
popa
outsb
adc
push
mov
mov
psubd
insb
sbb
addr16
cmp
addr16
adc
fcomi
pop
fs
ret
data16
aas
mov
inc
nop
pop
sub
inc
pushl
sub
arpl
dec
push
enter
mov
cld
or
sub
mov
sub
ss
stos
enter
sahf
lret
xchg
fldl
es
mov
repz
mov
or
and
imul
inc
xor
push
pushf
jo
int
push
pushf
cltd
dec
rolb
gs
ret
into
mov
insb
test
jns
fldl
and
pop
inc
loopne
jle
or
shlb
add
add
enter
cli
enter
push
jne
mov
fcomps
ret
cltd
roll
cli
stc
dec
and
rcr
mov
hlt
scas
add
test
fprem
aad
inc
idivl
push
orl
loop
aaa
cmpsl
cmp
fcoml
out
mov
mov
fnstsw
dec
sbb
test
and
pop
fs
fmull
add
ljmp
rcll
cwtl
fnstsw
jae
clc
lock
dec
pop
sbb
inc
sbb
push
data16
es
imul
mov
xchg
cld
sbb
addr16
mov
push
push
pop
push
jl
cmp
daa
repnz
movd
xor
jp
sub
cwtl
push
sub
sahf
pop
stos
dec
mov
in
add
mov
frstor
daa
sub
in
add
cwtl
cmp
pop
cmpsb
mov
xchg
dec
cmp
roll
jmp
dec
mov
sub
mov
adc
dec
mov
lcall
sub
and
add
in
push
scas
les
orb
jmp
mov
xchg
aam
repnz
gs
pop
push
mov
popf
or
mov
cmp
sub
xchg
rcll
cmp
push
data16
mov
push
ja
leave
sbbb
into
fcmovb
cmp
cmpsb
je
and
and
cmpb
mov
push
cltd
movsl
imul
dec
cli
push
jo
aaa
adc
cmpsl
mov
mov
push
lods
stos
cmp
xchg
cmpsl
mov
inc
dec
xor
mov
sbb
adc
repz
xchg
testb
in
movsl
aad
mov
sub
cmpsb
aaa
fistpll
mov
leave
std
push
sti
jbe
out
mov
jl
pop
in
pop
dec
xchg
dec
das
shlb
rorb
dec
push
hlt
out
xlat
aaa
fwait
jmp
hlt
push
xchg
mov
mov
pop
xor
and
mov
cmp
pop
inc
enter
mov
mov
fwait
lods
addr16
insb
ljmp
jecxz
sti
ljmp
js
mov
jb
in
xchg
loope
and
shlb
jae
inc
cltd
cltd
iret
leave
popf
adc
into
test
push
sub
aad
int
lds
subb
xor
adc
sub
stos
lcall
xchg
xor
mov
insl
scas
mov
dec
scas
jns,pt
lcall
mov
mov
xor
pop
inc
mov
add
cmpsl
xchg
mov
jmp
shl
pop
leave
adc
or
lock
ret
xorl
mov
mov
pusha
es
push
inc
fs
xor
jns
mov
mov
out
jmp
mov
dec
or
cmp
sbb
sub
ficompl
or
xchg
fs
lret
daa
adc
cmpb
push
push
adc
in
int
ret
daa
sbb
inc
pushl
push
lcall
pop
jno
ret
movsb
cmp
xchg
pop
imull
push
mov
mov
inc
loop
mov
push
ljmp
scas
mov
lret
sub
pop
jg
call
cmp
push
stos
aam
subb
sub
or
lcall
pushf
xchg
pusha
daa
push
fwait
mov
xchg
adcb
scas
jbe
pop
mov
in
mov
mov
cmpsb
push
inc
mov
dec
cld
sub
mov
xor
xor
js
adc
mov
das
mov
adc
in
icebp
pop
sub
jge
and
mov
pop
mov
push
or
push
mov
inc
push
sahf
mov
mov
insb
pop
std
mov
mov
or
sub
pop
out
and
mov
or
dec
push
mov
imul
mov
out
dec
jno
jb
bound
in
sub
rorl
mov
sbb
decb
test
movsl
mov
insb
sar
enter
and
cmp
push
movsb
lea
sbb
jg
xor
ret
jge
mov
cli
movsb
loopne
jnp
xchg
mov
loop
cs
lahf
addb
mov
lahf
dec
lds
add
outsb
mov
sub
add
add
movsl
incb
fcoml
cs
jne
outsb
inc
push
scas
pop
mov
lret
repnz
cmp
sbb
frstor
lds
sbb
fwait
inc
mov
loop
pop
push
inc
jg
cmpsl
mov
inc
cld
lcall
push
or
dec
xchg
jecxz
adc
outsb
add
loop
add
loopne
popf
cmp
inc
push
scas
stc
rcrl
in
lock
movsl
das
xor
fnstenv
call
hlt
out
cmpsl
flds
sub
nop
sbb
hlt
jl
jne
mov
add
sub
out
mov
rcrl
rcrb
lret
mov
pop
cwtl
push
out
and
sub
insb
push
push
fsts
ret
push
or
mov
loopne
jbe
push
jmp
ret
cwtl
jge
call
testl
repnz
inc
cmpsb
xchg
dec
mov
int
and
std
cmp
lcall
sub
imul
xchg
icebp
out
je
jbe
insl
push
or
fwait
cwtl
inc
dec
and
or
iret
cmp
inc
pop
mov
and
cmp
push
dec
mov
stos
push
sub
push
xchg
popa
loopne
adc
or
in
scas
aad
popa
add
ja
xorb
cltd
cmp
mov
xchg
add
and
pop
daa
stc
mov
mov
lret
mov
pop
and
add
fldl2t
xchg
dec
sub
mov
xchg
sbb
bound
incl
push
push
ror
sub
dec
out
das
aas
jmp
cltd
test
in
pop
dec
gs
daa
dec
and
jecxz
cli
cwtl
xchg
les
aaa
dec
xchg
jns
push
mov
insl
pop
sahf
leave
pop
fdivrp
pop
jae
int
rclb
sub
les
fisttpll
and
and
ret
xchg
push
mov
xor
ret
cmp
dec
ret
lret
push
mov
mov
stos
inc
lahf
mov
push
insb
adc
pop
xor
es
mov
mov
ficompl
xchg
negb
mov
lods
jo
push
mov
rorl
jecxz
clc
dec
outsl
mov
pop
popa
popa
addb
js
adc
in
xchg
xchg
aas
mov
inc
fsubl
in
int3
in
icebp
fistpll
cli
sub
add
shr
push
or
mov
xchg
addr16
sub
pop
xor
and
sbb
and
push
fadds
xor
inc
and
nop
cltd
pushf
insl
lcall
inc
sub
lret
adcb
rorb
sbb
mov
mov
fsts
cltd
hlt
and
xchg
add
imul
jecxz
lret
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
jmp
rcrb
and
rorl
shl
jnp
dec
test
jl
dec
and
ss
mov
add
xchg
outsl
jnp
lea
nop
ss
mov
jnp
inc
fisubl
push
adc
jae
fdivrl
data16
mov
push
movsb
hlt
gs
sbb
jmp
into
pop
adc
jns
in
inc
pop
mov
shl
imul
std
ds
in
xchg
jmp
imul
sub
cld
bound
or
imul
inc
pusha
push
mov
dec
pusha
ficompl
xchg
das
inc
xor
lret
aaa
shlb
ret
jecxz
xchg
cmpsb
jb
pop
inc
xchg
cmpb
cmpsb
mov
jae
scas
cmp
das
aaa
clc
pop
neg
mov
inc
jns
jae
sub
scas
mov
pop
mov
call
adc
call
pop
lds
cmp
fisubrl
lock
insb
pop
dec
add
adc
icebp
ss
lret
adc
pop
les
stos
imul
ss
xor
xchg
cmpsb
ret
fistpl
lock
cli
inc
cwtl
cld
insb
mov
test
aas
pop
mov
cmp
sahf
fcomip
dec
push
cld
in
loop
pushf
sub
push
and
mov
inc
mov
pusha
icebp
inc
es
nop
fidivrs
ret
inc
das
push
and
jne
jecxz
mov
sub
test
or
adcb
push
cmp
push
gs
or
adc
pop
mov
or
xor
popf
stos
incb
aas
push
in
xchg
out
and
iret
push
imul
jmp
call
adc
shl
inc
popf
stos
stos
loop
les
add
in
jnp
inc
cltd
sub
ja
stos
lret
call
or
mov
ret
lret
xchg
lds
mov
xor
and
sub
xchg
mov
mov
cmpb
fcoml
xchg
adc
mov
mov
je
shr
popf
mov
jecxz
jns
jle
jg
push
into
inc
sbb
test
mov
xchg
movsl
mov
sbb
add
jg
pop
mov
inc
pop
inc
adc
push
inc
pop
dec
or
xchg
cmp
mov
aam
pop
inc
stc
jmp
shlb
ljmp
aas
lahf
cli
pop
pop
aad
xchg
push
sbb
repz
xchg
mov
xchg
jl
outsl
push
push
insb
push
je
cwtl
xchg
adc
repz
hlt
pop
push
call
sub
arpl
jbe
imul
test
imul
repnz
popf
in
hlt
fistps
pop
scas
bound
cmp
ret
das
add
cmp
adc
outsb
into
sbb
mov
jbe
sbb
xchg
mov
into
xchg
mov
in
xor
imul
jbe
mov
shlb
inc
hlt
cwtl
jmp
dec
outsb
aam
jge
or
xchg
dec
ret
or
andl
xchg
test
or
lahf
sbb
jl
mov
out
xchg
jge
sbb
jns
test
dec
lds
push
pop
inc
fucomip
pop
daa
ds
add
out
xor
mov
inc
sbb
mov
jbe
sbb
bound
sub
pop
in
mov
sbb
mov
lods
mov
out
xor
repnz
out
push
daa
mov
leave
inc
fs
cmp
mov
jbe
mov
inc
ljmp
into
pop
push
and
or
loopne
cmp
mov
lahf
loopne
lcall
out
mov
push
movsb
scas
nop
shrb
lods
or
inc
repz
enter
fldl
dec
popf
add
lcall
sbb
xor
push
push
loopne
das
lret
bound
mull
push
jl
pop
add
outsl
add
mov
rcll
stc
add
jle
lahf
mov
shrl
sub
fldl
jmp
mov
jo
adc
stc
dec
mov
aas
pop
sahf
scas
adc
jno
lret
das
or
fucom
lods
dec
insb
dec
mov
xor
mov
imulb
dec
push
cmc
inc
mov
imul
test
sar
fs
jnp
das
mov
repnz
inc
push
imul
sbb
add
inc
xchg
int3
std
clc
jne
inc
stos
cmp
in
mov
jp
pop
pop
mov
pop
dec
adc
mov
lret
mov
cmp
fcmovnu
mov
push
fistpl
pop
cmp
jmp
pop
pop
push
xchg
imul
popa
cmc
xchg
movsb
js
cmp
nop
push
pop
stos
enter
movsb
daa
xchg
push
adc
xor
jo
mov
sub
jb
roll
xchg
test
jne
sbb
iret
mov
or
push
xor
xchg
outsl
and
pop
push
fstps
push
add
fcmovnb
loope
and
adc
pop
or
sub
and
shr
jne
pop
jae
fldenv
arpl
frstor
cmp
jmp
ret
inc
ljmp
mov
popf
fstpl
mov
adc
nop
cli
incl
mulb
and
pop
dec
or
push
inc
je
fdivrl
mov
into
and
shr
cli
add
movl
mov
push
and
mov
xor
out
aam
lods
jnp
mov
sbb
movsb
punpcklbw
scas
out
sub
and
mov
pop
sbb
test
sub
in
call
mov
aad
push
xor
xchg
test
xchg
push
adc
dec
cmc
push
sub
push
add
aaa
stos
mov
mov
pop
cmp
push
cmp
lret
jno
mov
sub
dec
outsl
mov
aas
fildl
xchg
mov
aad
std
pop
fstpl
jle
insl
inc
jbe
mov
shrl
xchg
testl
mov
adc
mov
cmpb
xchg
pop
call
or
push
mov
cli
jnp
ret
mov
xlat
jns
mov
aaa
cmp
outsb
stc
repz
sbb
mov
inc
sub
mov
and
orl
fdivp
mov
xlat
pop
jne
sbb
arpl
and
fdivrp
int3
imul
sub
jae
inc
inc
fimuls
mov
sarb
mov
shrl
lahf
ds
and
out
xor
ljmp
dec
lds
fildl
aas
xor
inc
aaa
pop
inc
sub
imul
stc
pop
movsb
pop
cmp
mov
faddl
test
mov
fsub
fwait
lods
push
bound
je
mov
sahf
lods
inc
lret
dec
sub
pop
xchg
push
es
jp
and
orb
xchg
popf
jno
mov
or
inc
out
das
dec
adc
popa
cmpsb
jg
inc
into
jne
scas
or
je
lret
xor
shll
pop
sahf
xlat
add
jl
fbstp
push
mov
lahf
dec
decl
out
jbe
xor
xchg
mov
mov
mov
js
popf
notl
leave
xor
jne
mov
aam
js
mov
rcll
cli
jecxz
mov
and
pop
dec
pusha
in
insb
aad
sub
out
repnz
or
push
add
test
sub
jmp
pop
stos
fistpll
les
std
push
xor
inc
adc
and
lahf
inc
push
cltd
jle
xchg
shrb
shl
fistpl
cld
cmpsl
sub
mov
inc
imul
xor
ljmp
aas
push
lock
dec
call
jmp
jecxz
jp
jle
loop
sub
fistl
int3
and
mov
scas
xchg
mov
ret
mov
fcmovnbe
jno
xchg
mov
cmp
jns
cmc
pop
jle
scas
cmpsl
leave
jg
push
mov
push
mov
movsl
lods
push
mov
filds
imul
add
insl
push
movsb
shrb
in
jns
inc
stos
lcall
fwait
sbb
mov
clc
or
sub
cmpsl
cli
push
mov
sub
pop
lret
aam
lcall
lahf
pop
aad
aaa
push
jge
popa
push
pop
and
rcl
xchg
call
jg
cmp
call
xor
jae
push
stos
inc
sbb
xchg
sub
ds
pop
call
inc
arpl
mov
out
pop
lods
iret
mov
loopne
test
movsb
push
imul
aaa
jne
mov
jl
popa
lds
pop
negb
lret
mov
in
add
fnstcw
aaa
push
mov
xlat
mov
jnp
aas
call
stos
test
inc
push
pop
adc
xor
fwait
or
and
out
out
jno
xorl
add
inc
adc
and
aam
lret
popa
hlt
je
sbb
cmp
inc
xchg
mov
jge
subl
push
inc
inc
and
int
js
push
mov
xchg
jb
dec
pop
mov
push
int3
mov
fcompl
pushf
adc
out
or
cmp
push
nop
jb
pop
push
adc
test
aas
add
pop
or
stos
test
mov
jecxz
pop
lea
movsb
jecxz
sub
mov
movsb
adc
cmpsb
gs
add
jg
pusha
imul
dec
fwait
imul
outsl
inc
in
add
lock
sub
xor
jne
and
idivl
fidivrl
popf
cli
jp
push
sub
or
fstps
dec
xor
push
push
es
and
and
push
jns
sbb
lock
loopne
xor
dec
dec
push
test
dec
jne
cmp
push
xor
mov
cmp
and
inc
mov
outsb
cmp
and
test
mov
adc
mov
dec
daa
mov
sbb
inc
fs
or
outsb
stc
jns
xlat
adc
mov
stos
sbb
test
mov
mov
mov
push
lcall
insb
pushf
imul
dec
cmpsb
mov
push
dec
fcoms
and
jae
cld
xchg
jmp
mov
ljmp
and
dec
xchg
iret
cmp
scas
sub
js
xchg
or
shr
xchg
call
divb
daa
mov
sbb
lods
popf
lret
mov
ss
pop
inc
test
movsl
jns
xlat
filds
jns
xor
fsincos
out
call
xchg
cmc
pop
jg
xchg
xor
aad
dec
dec
cmp
jnp
fnstenv
push
fcoml
lods
push
iret
aam
pushf
outsl
icebp
mov
movsb
cmpsl
clc
mov
mov
sub
ret
pusha
jae
pop
aas
add
pusha
mov
sbb
cmp
jle
xor
lods
jmp
lods
lret
mov
pop
jge
cmp
fwait
roll
jne
jo
mov
pop
dec
rorl
ss
sbb
dec
loop
push
xor
dec
ret
cmp
mov
push
inc
sti
icebp
jb
add
into
int3
add
jnp
mov
push
int
sbb
dec
loopne
push
jo
xorb
leave
daa
jo
lret
jle
shll
lret
jmp
roll
loopne
inc
push
flds
ret
loopne
xlat
adc
dec
jne
cmp
inc
stos
ljmp
aam
lahf
insb
inc
movsb
cmp
ds
pop
idivl
loop
jno
fwait
mov
aas
addr16
cmp
add
hlt
inc
ffree
sbb
gs
sahf
lods
sar
or
gs
or
inc
std
jne
fmuls
push
pushf
cwtl
mov
adc
push
sbb
cmp
push
cmpsl
dec
test
push
std
stc
or
add
pop
jo
andb
lahf
ret
or
adc
movnti
inc
push
or
mov
jle
jne
mov
mov
mov
sahf
cwtl
mov
sbb
jmp
insl
ja
repnz
gs
mov
adc
mov
push
sti
adc
pop
mov
and
and
sar
daa
fldenv
mov
mov
mov
sub
mov
lods
adc
push
push
pop
pop
repz
inc
pusha
mov
add
rolb
lret
jb
nop
pop
lcall
jl
add
and
adc
stc
aad
adc
ljmp
push
pusha
cwtl
push
rep
adc
and
mov
rol
adc
xchg
mov
sub
int3
fidivs
lock
movsl
pop
dec
or
ljmp
push
pop
or
pop
nop
push
jl
pop
mov
popf
jg
fists
insb
xchg
mov
pop
jle
stc
add
pop
dec
sbb
pop
xor
inc
adc
push
sub
inc
out
or
pushf
mov
aam
sahf
or
mov
jno
adc
das
xchg
pop
mov
sub
mov
xor
rcrb
sub
out
sub
xchg
stos
out
pop
push
adc
mov
and
rolb
lea
sar
rorl
or
xchg
in
jns
stos
out
xchg
lret
pop
inc
xor
out
mov
dec
mov
fmul
xchg
push
aaa
add
sub
adc
push
xchg
insb
pop
push
mov
jge
cmp
std
jno
adc
inc
xor
xchg
loope
sbb
lea
xor
or
cmc
subb
sbb
imul
adc
sub
jl
push
nop
push
mov
sbb
cmp
pop
mov
aad
sbb
mov
pop
stos
or
lahf
cmp
int3
xchg
hlt
jae
ljmp
fld
movsl
rolb
mull
xor
fidivrl
in
push
inc
fimull
notb
cwtl
and
mov
jmp
inc
aam
dec
js
xor
and
xchg
aaa
lret
jmp
pop
ret
aas
dec
inc
in
mov
xchg
pop
mov
loope
jge
aas
aaa
add
pop
jge
push
je
sub
test
sbbb
clc
xchg
popa
fdivr
test
aas
push
pop
sbb
mov
xor
mov
xchg
adc
add
stc
icebp
xor
xchg
insb
sub
sub
cwtl
fidivrl
in
add
das
stos
int
mov
jmp
push
mov
icebp
addr16
mov
sar
and
gs
sbb
mov
arpl
enter
pop
shlb
ja
rcrl
stc
mov
test
imul
cmp
out
adc
xchg
cmpl
lcall
sahf
pop
adc
lcall
ja
sub
xchg
push
mov
dec
mov
daa
loopne
subb
out
pop
pop
lahf
and
or
sahf
mov
bound
cli
add
add
jae
cmp
pop
cmp
xchg
mov
inc
xchg
mov
and
xor
addr16
or
mov
xor
or
cld
xchg
ret
mov
and
add
pusha
add
test
es
out
xchg
xchg
ja
jl
cmp
or
jns
les
int
bswap
adc
and
pusha
sub
repnz
arpl
jp
jmp
pop
mov
or
mov
mov
push
xchg
mov
sbb
fistpll
and
xchg
mov
pusha
pop
mov
and
mov
push
aam
pop
int
pop
mov
dec
fidivrl
and
leave
shl
pop
pop
fstpl
add
repnz
push
sub
mov
clc
inc
mov
jne
dec
push
leave
jmp
and
mov
xchg
mov
and
add
sti
pop
lret
outsl
xchg
sub
cmp
add
je
inc
sbb
imulb
inc
xchg
incb
ret
sbb
xchg
mov
sbb
repnz
jmp
ret
mov
stos
subb
es
repz
cld
pop
test
inc
mov
xchg
rorl
mov
or
pop
cmp
xchg
add
fldl
jecxz
pusha
xchg
dec
mov
mov
clc
shrb
imul
jl
ss
jbe
push
push
sbb
cmp
shlb
xchg
insl
cwtl
jns
sahf
iret
or
mov
mov
sbb
and
and
add
push
mov
xor
inc
das
cmp
in
into
roll
mov
add
sbb
jns
sbb
mov
and
imul
dec
mov
out
push
push
leave
cs
pop
mov
ret
adc
cmp
fiadds
cmp
je
aas
repnz
xchg
arpl
adcl
adc
adc
mov
mov
sub
and
mov
push
add
sti
mov
or
mov
inc
out
mov
fistpl
dec
xchg
divb
add
jne
and
out
repz
in
inc
sysret
out
outsb
mov
mov
mov
sbb
loopne
ds
jbe
inc
imul
ja
or
hlt
int3
repnz
imul
aad
mov
push
mov
or
cs
lock
jb
and
sub
and
daa
or
add
xor
mov
das
loop
pusha
outsb
sbb
out
imul
add
and
jno
mov
stos
int3
aam
jle
outsb
outsl
rcll
imul
lods
xor
xor
add
call
add
pop
dec
jnp
dec
xor
mov
daa
pushf
xchg
pop
xchg
nop
push
iret
jg
imul
call
cmp
jae
adc
cmp
inc
mov
arpl
gs
add
popf
dec
std
gs
pop
movl
mov
push
loop
mov
sarb
in
leave
rcll
mov
mov
or
lret
stos
addr16
mov
inc
push
jb
mov
into
aaa
rcll
push
insb
in
sbb
int
jmp
sahf
imul
cmc
ljmp
pop
neg
in
das
rorb
stos
sbb
sbb
adc
ss
gs
or
pushf
out
adc
jnp
mov
subl
out
in
jp
push
lock
xor
shrb
insb
xchg
data16
insb
fs
ja
mov
or
push
ss
inc
push
pop
data16
andl
movsb
fiadds
add
test
xor
add
push
lds
gs
pop
pushf
fsubl
dec
test
roll
cltd
int
add
pop
mov
dec
sub
sti
rcrl
mulb
mov
mov
dec
jae,pt
out
ds
repz
jp
mov
sub
inc
das
ss
mov
jnp
xchg
lds
lds
pushf
dec
push
loope
sbb
arpl
leave
mov
cli
out
xor
pop
xlat
stos
jbe
jne
pop
cs
xor
mov
addr16
mov
call
rorl
sahf
fdivrs
mov
mov
adc
mov
das
stc
jle
inc
dec
dec
imulb
sbb
push
stos
adc
jmp
out
adc
sub
test
mov
mov
inc
mov
into
mov
push
outsl
ret
xor
mov
popa
push
das
jbe
jmp
jge
bound
sbb
movsb
mov
adcb
mov
lret
mov
aad
adc
mov
pop
icebp
incb
inc
shl
loope
xlat
pop
and
push
mov
mov
lods
fsubr
ja
insl
sbb
jae
imul
sub
jnp
pop
push
add
lret
leave
xchg
sub
fidivl
movsl
pop
adc
out
xchg
mov
stc
lahf
or
inc
lahf
dec
out
mov
lret
sahf
push
sub
pop
and
ds
mov
inc
and
xor
xchg
xchg
sub
cmp
repnz
addr16
or
sbb
mov
mov
fistpll
ja
into
popa
pop
and
repnz
leave
cmp
mov
pop
aas
fnstenv
lea
lea
iret
jne
in
std
xor
xor
stc
imul
std
ds
out
sub
and
inc
cmp
mov
sarb
xchg
jne
rcrl
push
push
out
ja
fnstsw
inc
jnp
jmp
cli
hlt
push
les
inc
pushf
sub
and
and
push
cs
sbb
inc
lret
lods
or
les
sub
push
stos
or
fisttpl
jo
dec
out
or
out
xchg
call
rol
cli
inc
je
cmpsl
bound
loopne
mov
and
fimull
mov
mov
jns
adc
inc
pop
fistpl
xor
gs
mov
pop
cmovp
bound
jp
call
or
mov
mov
xchg
mov
push
mov
insb
xor
push
xor
arpl
dec
fmuls
ja
jl
and
jle
testl
add
cmp
xor
cmp
adc
call
test
mov
pushf
mov
lods
mov
lahf
push
insl
je
loopne
fisubrl
outsb
xor
xchg
scas
fnstenv
aad
ds
or
add
addr16
mov
cmp
aas
andl
add
inc
stos
or
shlb
pop
test
and
mov
xor
loopne
xchg
int3
mov
cmp
ja
mov
in
iret
mov
fdivs
test
sarl
xorb
dec
pushf
js
cmp
mov
add
adc
xor
icebp
sub
jb
mov
mov
cmp
ljmp
call
mov
pop
out
call
int3
sub
cmp
cmp
adc
mov
rol
or
lods
cmpsb
sbb
xor
push
hlt
jecxz
stos
lods
adc
adc
cmp
pop
and
xchg
pop
pop
loopne
out
jb
mov
mov
cmp
sub
loopne
mov
popa
sbb
lret
dec
sarb
mov
dec
add
stc
mov
popa
cs
daa
les
push
sbb
push
push
xchg
or
push
mov
or
inc
dec
aaa
ret
outsb
xchg
lock
push
jbe
bound
ret
sarl
pop
ficompl
pop
xor
popa
cmp
ret
repnz
xchg
ss
mov
addr16
xchg
pop
pop
test
imull
xor
movsl
nop
lret
ds
dec
inc
popf
aas
push
xchg
mov
data16
jns
mov
mov
cwtl
aad
xor
and
daa
sub
cmp
cmpsb
sub
out
insb
fs
sti
cmp
sub
inc
out
sbb
mov
xor
mov
or
xchg
cmp
in
push
pop
jg
cmp
or
cli
add
cli
xchg
mov
push
mov
out
mov
pop
andb
vpunpckhwd
sub
xor
cmpsb
rcrl
cwtl
inc
lea
clc
rcrl
fidivl
add
sbb
stos
push
pop
inc
ret
mov
and
out
je
test
sbb
idiv
sbb
mov
lret
jno
pop
add
mov
sti
fcoml
inc
sti
data16
test
cmp
push
xor
add
xor
je
fbstp
test
and
mov
push
jnp
mov
rcrl
shl
sub
adc
push
fidivrs
xchg
and
jbe
sahf
outsb
pop
dec
aam
ljmp
push
fdivrp
jno
xor
jae
sub
push
cmp
addr16
pusha
out
adc
dec
mov
mov
add
movsl
pop
inc
lea
popa
jle
mov
jbe
and
sbb
push
mov
sub
cmp
add
push
inc
sbb
sahf
aad
das
mov
add
cmc
inc
add
cltd
int3
xchg
jae
inc
jg
aam
adc
inc
test
stc
add
insb
cmc
daa
jecxz
sub
insl
rorl
mov
hlt
dec
ret
sbb
into
add
arpl
lods
mov
std
test
dec
je
fsub
and
orl
aaa
sub
mov
xchg
mov
int3
adc
sub
sahf
and
ja
rolb
daa
ss
xchg
or
sub
ja
mov
dec
mov
sub
pop
mov
lret
cmpsl
in
sub
inc
cmp
inc
and
cmp
mov
in
mov
rorb
bnd
in
imul
fldcw
fcomip
scas
aad
insb
push
pop
icebp
cmpsb
rorb
outsb
insl
cmp
mov
mov
pop
cmpsb
dec
xchg
jb
xchg
sbb
pop
pop
leave
push
sub
push
adc
push
push
enter
lods
mov
call
repz
xchg
jl
mov
mov
stos
xchg
jl
mov
sti
test
and
jno
push
mov
mov
push
bound
and
jle
test
adc
push
and
cmp
out
inc
sub
insl
js
cmp
mov
add
je
xor
add
mov
and
lods
dec
xchg
ja
jecxz
mov
aad
add
ds
mov
fwait
adc
daa
and
loopne
mov
repnz
mov
fistpll
loop
mov
push
nop
pop
cmp
bound
popf
negl
andb
pop
insl
lods
sub
clc
nop
fmull
cmp
adc
mov
stos
clc
adc
data16
pop
pop
fucomi
fistl
add
das
cmp
cmpsl
gs
rclb
xchg
xor
inc
pop
xchg
mov
pop
sub
loopne
adc
or
sub
pop
enter
int
sti
inc
pop
jb
ret
mov
aam
shl
arpl
in
insb
sub
push
js
xorl
pop
push
dec
aaa
sbb
mov
mov
ljmp
fs
stos
add
xor
pop
mov
xor
and
bound
pop
dec
rcrb
pop
add
xchg
mov
add
lods
cmc
inc
sbb
out
sub
mov
adc
or
xorl
data16
jno
lods
test
jae
sub
shll
jp
pop
push
jle
xchg
sub
cmpb
pop
add
mov
xor
inc
icebp
mov
xchg
mov
sbb
das
shll
adc
pop
out
mov
add
pusha
movsl
ja
fdivrl
dec
imul
xchg
cmp
mov
insb
xor
outsl
loopne
out
dec
repz
mov
or
mov
ficoml
inc
cwtl
push
inc
jle
cmpsl
loop
fdivrs
into
mov
insl
ljmp
dec
mov
mov
shlb
inc
pop
imul
movsb
iret
fs
in
out
pop
fmuls
or
loopne
lock
aas
xchg
in
pop
push
rclb
and
jb
xchg
sub
add
enter
pop
cmpsb
pop
sbb
fldenv
pop
or
jo
jnp
popa
aad
adc
mov
mov
push
inc
push
jno
adc
xchg
leave
movsb
notl
and
push
sbb
sbb
loope
daa
int3
aaa
push
or
add
lock
test
add
pop
mov
fwait
mov
jae
daa
push
dec
lea
punpckhbw
ds
mov
pop
ljmp
inc
cmp
inc
mov
mov
ret
mov
mov
ffree
stos
les
es
fsubrp
pop
insb
scas
loop
out
jg
or
fwait
out
xor
loop
ds
sub
inc
mov
rorl
movsb
aam
jge
stc
xlat
xchg
pop
repz
mov
or
aam
je
mov
clc
dec
mov
mov
pop
hlt
les
cmpsb
push
push
fmuls
inc
ror
or
pop
jbe
fildll
jl
sub
loopne
add
into
mov
jmp
sub
rorb
add
inc
out
add
adc
mov
cs
std
mov
inc
daa
in
cmp
lock
and
dec
mov
addr16
xor
cld
push
outsb
pop
aam
jp
fstl
xchg
xor
jbe
mov
xchg
mov
dec
mov
cmc
fs
xchg
testb
addr16
fsts
jb
add
push
jmp
in
mov
in
and
pusha
jnp
fildl
pop
loope
negl
mov
aas
shlb
inc
jb
jb
mov
cltd
loop
clc
add
adc
jl
mov
dec
lcall
push
mov
and
push
mov
inc
mov
ja
mov
test
in
sbb
sahf
and
dec
aad
sbb
mov
add
les
sbb
or
mov
imul
push
xchg
movsb
mov
scas
mov
orb
adc
jle
xor
pop
sbb
inc
or
mov
jg
ljmp
jmp
pop
cmp
pushf
jl
and
pushf
aam
je
int3
xor
fcmove
mov
add
rol
js
fwait
mov
out
add
pop
dec
lods
cmp
repnz
cltd
add
stos
xor
cmovb
inc
pop
bound
mov
or
and
out
lods
cltd
pop
jecxz
xor
test
xor
mov
push
gs
xor
jge
es
xchg
cltd
stc
xchg
jnp
cs
rol
cltd
pop
mov
pop
mov
lahf
mov
mulb
mov
lea
stos
xor
sub
jge
mov
xchg
mov
mov
cmp
jns
xor
inc
shrb
sbbb
and
test
mov
xor
push
nop
imul
jecxz
decb
test
xchg
outsb
jp
sub
jecxz
cwtl
sbb
loop
pop
aas
ds
insl
cli
dec
pop
fimull
mov
sub
sub
sub
ret
mov
cmp
inc
mov
mov
add
jle
jle
dec
xchg
xchg
je
mov
jmp
xlat
sti
or
cwtl
jecxz
pop
leave
adc
mov
scas
iret
sbb
mov
scas
repz
in
into
adc
ret
sbbl
dec
push
xchg
fmulp
aam
dec
icebp
cmp
lret
sbb
mov
cmc
push
test
je
cs
rcl
pop
and
cltd
adc
add
aaa
add
dec
data16
push
lods
gs
sbb
repnz
shll
shll
popf
cmp
push
cmp
in
outsl
jg
adcl
or
ret
xchg
cmpsl
sbb
add
imul
andb
call
rcll
mov
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
jmp
scas
shlb
jno
scas
mov
xor
or
je
jl
pop
jl
pop
andb
cld
lret
xor
ret
movsl
push
je
lods
inc
js
xor
adc
xchg
xchg
iret
or
in
leave
xor
mov
jmp
or
icebp
in
popa
and
icebp
cli
ret
lock
stos
je
add
dec
lods
dec
jl
aam
adc
fistpl
lods
cli
movl
push
xchg
dec
cmpsb
pop
cmpsl
imul
pop
mov
out
lcall
lods
andb
pushf
out
sub
or
inc
inc
rolb
push
mov
xor
jae
and
lret
jecxz
testb
lds
mov
outsl
and
dec
dec
push
jp
or
scas
test
scas
es
or
imul
outsl
fistps
and
push
pop
jecxz
faddl
sbb
mov
lods
xchg
jmp
mov
inc
mov
std
push
jns
rclb
ljmp
jne
cs
mov
out
xchg
outsl
inc
mov
xchg
adc
inc
ja
movsl
cs
mov
ds
nop
std
std
out
lods
fstps
dec
or
in
jle
mov
jmp
jo
out
je
inc
push
cmpsb
pop
adc
cmp
test
ficomps
cmpsb
test
gs
mov
fsts
add
push
cmp
sub
cmp
out
clc
mov
inc
lds
and
or
lods
stos
and
add
js
outsl
es
sbb
mov
cmp
hlt
pop
inc
sub
add
das
rcl
push
outsl
repnz
mov
jge
or
cltd
fstpl
mov
sbb
pop
out
xchg
or
ljmp
popa
mov
xchg
inc
pop
insb
mov
xor
mov
mov
cmp
ljmp
sbb
mov
jl
inc
mov
in
repnz
sbb
ja
or
dec
adcl
pop
outsl
imulb
jle
mov
mov
roll
add
ja
nop
fbld
adc
repnz
nop
ret
xchg
lds
cmp
mov
cmpsb
insl
inc
clc
pop
pop
push
jnp
inc
mov
cmp
es
loope
jbe
pop
mov
lahf
popa
and
pop
push
nop
leave
mov
mov
int3
cmpsb
pop
testl
cld
pop
imul
mov
arpl
xchg
idivl
push
mov
push
cmpl
js
ja
push
xchg
pop
or
mov
mov
or
jecxz
and
insl
jo
inc
lds
incl
pusha
dec
inc
pop
or
imul
in
pop
xchg
mov
int3
adcb
fdivl
and
sbbl
mov
xchg
sub
fcomip
jmp
jbe
cmp
in
testl
mov
push
cltd
sbb
dec
cwtl
stc
enter
xchg
push
inc
repz
pop
jecxz
sbb
cs
pop
test
dec
pop
rclb
test
mov
popf
jle
icebp
int3
mov
sub
jecxz
xor
dec
outsl
push
inc
pop
aas
ret
cld
xor
rclb
jo
in
jl
or
loope
or
orb
sub
aam
das
xchg
in
aam
lret
mov
jmp
outsl
or
jmp
inc
leave
out
lea
mov
push
push
inc
imul
xchg
pop
aas
xchg
enter
fs
lds
mull
rorl
jnp
mov
in
hlt
xchg
dec
inc
and
leave
mov
sarl
adc
xchg
mov
or
pop
ret
pop
fdivr
arpl
js
jae
sub
push
dec
inc
mov
jle
push
dec
lock
dec
mov
insl
repz
add
mov
cli
insl
dec
loop
xor
in
xchg
outsb
test
mov
pop
pop
pop
pop
mov
pusha
pop
cmp
mov
es
mov
push
xchg
nop
shrl
out
mov
push
les
mov
subb
xor
aaa
lret
cli
pop
mov
daa
xor
pop
xlat
sahf
fucomip
ja
add
arpl
push
ljmp
mov
mov
dec
inc
ja
mov
and
in
adc
or
xor
jp
xor
pushf
cmp
inc
outsb
cmc
out
cli
mov
adc
and
xor
push
rep
mov
lds
jg
sbb
adc
and
push
pop
lock
xor
nop
imul
mov
test
repnz
add
fdivrs
dec
sub
rcll
out
test
out
shlb
fs
js
pop
ret
xchg
mov
cmp
int3
movsl
xchg
xchg
push
clc
dec
stos
xchg
mov
mov
and
sbb
ret
inc
mov
clc
pop
cmp
and
addr16
jp
loop
je
idivb
rcll
mov
je
repz
loope
xor
pusha
repnz
xchg
test
mov
shll
sub
pop
push
shll
scas
jnp
loop
mov
cmc
adc
lret
sub
dec
shl
inc
xchg
es
int
mov
idiv
pop
mov
and
mov
xorb
pop
jbe
push
in
inc
out
movsb
pop
mov
movsl
pop
dec
sub
addb
jmp
xor
out
mov
popa
sbb
cmp
shll
sbb
call
push
addr16
cmpsb
aas
jo
mov
std
sub
pushf
xchg
jmp
xchg
stc
and
jns
sbb
dec
lcall
das
stc
mov
sbb
sbb
sub
push
jb
mov
ss
sbb
aaa
add
xchg
jge
mov
lds
mov
ja
push
in
cmpl
jge
lods
push
jecxz
mov
aam
pop
pop
sbb
push
push
inc
les
jg
cmp
andb
loope
sub
jg
mov
bound
cmpsb
jnp
mov
inc
insb
and
inc
filds
and
jecxz
add
int3
andb
fucom
add
rol
fisubl
mov
jle
fimuls
mov
test
mov
inc
push
lods
cwtl
ljmp
and
and
es
jnp
rcll
movsb
inc
sub
push
pop
push
push
loop
xchg
ret
nop
out
and
enter
lock
jg
inc
sub
add
mov
aam
inc
mov
je
or
lea
roll
push
pushf
cwtl
je
push
dec
pop
daa
and
pop
mov
jbe
inc
adc
dec
push
jb
sbb
or
insl
adc
cmp
loope
ret
mov
jmp
push
adc
jle
xchg
and
pop
leave
movsl
outsb
jo
out
repz
xchg
imul
movsl
and
hlt
push
jge
dec
loopne
out
cmp
add
aam
js
shl
movl
fcmovnbe
outsl
xchg
ljmp
jle
and
add
cld
push
lods
cld
xchg
insl
in
arpl
mov
or
sahf
movsb
xchg
mov
xchg
fs
cld
xchg
sbb
jne
insl
inc
scas
xor
mov
lods
cmp
in
mov
push
and
xchg
add
adc
xchg
cwtl
pop
jp
lcall
ret
jmp
idivl
mov
loopne
push
xchg
mov
push
jb
test
mov
out
inc
int3
dec
sti
js
and
roll
inc
lods
in
sbb
pop
lcall
cmp
lcall
inc
mov
adc
xor
adc
lcall
enter
das
sbb
decb
call
sub
sub
ds
in
sbb
mov
add
xchg
mov
xchg
in
pop
ja
mov
idivb
shl
out
test
add
mov
sahf
push
xor
mov
in
mov
jns
dec
js
std
push
mov
ret
and
push
mov
into
lock
icebp
insl
xchg
mov
lock
shrb
outsb
mov
jmp
mov
and
lock
mov
movsl
xorl
fsubs
into
ljmp
inc
ret
shlb
pushf
jge
adc
sbb
rcll
loop
ret
jge
insb
cltd
test
icebp
lret
loopne
ret
dec
dec
sub
sbb
fcomip
test
jb
jb
pop
jmp
jl
sub
pop
add
dec
and
outsb
ret
nop
les
sub
pop
rcrb
adc
pop
xchg
inc
dec
in
jae
mov
hlt
and
jg
jmp
subl
add
andl
inc
jge
inc
cs
leave
xchg
add
cwtl
mov
pushf
in
out
leave
mov
adc
jle
or
arpl
jns
mov
adc
scas
push
aad
and
mov
nop
adc
or
jnp
inc
aad
inc
push
mov
sahf
sbb
adc
jne
xchg
pushf
daa
pop
xchg
inc
fnsave
jo
mov
mul
push
lods
dec
cmp
loop
jnp
out
mov
mov
mov
aas
sbb
out
mov
pop
insb
sbb
dec
mov
jo
add
negb
inc
xchg
sbb
adc
xchg
sbb
int
dec
jle
mov
insl
cmpsb
cmovg
dec
sub
inc
in
sub
in
mov
cbtw
shl
xchg
and
dec
fbld
repnz
pop
jno
js
jo
mov
jecxz
js
cmp
xchg
popa
test
cmp
testl
add
mov
pop
and
test
imul
and
ja
xor
push
push
lret
push
lock
cli
insb
fwait
mov
cltd
scas
sarl
mov
and
outsl
mov
inc
jg
rol
mov
je
pushf
pushf
push
clc
ret
shll
xchg
push
cmpsl
adc
pop
mov
adc
ljmp
adc
clc
xchg
xchg
insb
push
test
mov
xor
and
pop
popa
add
dec
gs
js
nop
jb
test
je
xor
jae
push
fbstp
aas
lds
dec
jge
addr16
pop
mov
or
dec
lea
lret
jbe
sbb
xchg
mov
push
jp
and
test
ficomps
mov
idivl
sahf
mov
jne
push
outsl
inc
fs
lahf
stos
xor
imulb
or
xor
mov
cmp
jo
lret
lret
sbb
mov
aad
push
in
mov
scas
ret
sbb
xor
loopne
dec
push
push
mov
lock
or
xor
in
test
jecxz,pt
imull
movsl
gs
pop
adc
push
lods
xor
inc
loopne
mov
call
pop
fs
xchg
pop
xor
lods
sqrtps
js
mov
mov
adc
sahf
lods
pushf
cmp
andb
jnp
clc
jl
testl
mov
or
inc
ror
jbe
push
subl
mov
dec
aaa
fprem
aaa
das
mov
loope
pop
std
xchg
jae
je
xor
sahf
mov
cli
adc
jo
js
mov
jge
enter
jge
ljmp
loopne
mov
xorl
shlb
push
push
jae
fwait
cmpb
out
xor
or
add
in
mov
ja
jp
sbb
dec
mov
dec
adc
xlat
and
les
int
outsl
and
dec
xor
dec
ss
ret
mov
sbb
loop
inc
adc
out
pop
and
cltd
jbe
subb
sarl
mov
mov
xor
xlat
out
aas
sti
add
idivl
push
test
cmp
movsb
roll
popa
cmp
sub
pop
cmpsb
inc
leave
sahf
fs
xchg
iret
cmp
mov
shrb
arpl
jae
mov
pop
push
mov
fwait
scas
xchg
mov
fisttps
cli
jmp
stos
xor
lods
sbb
sub
sub
push
in
adc
pop
or
pop
push
push
in
mov
mov
inc
jne
mov
movsb
fldl
dec
aam
jge
jae
dec
repnz
xchg
out
stc
push
ss
adc
xor
sahf
lea
lods
test
shl
clc
adc
adc
cmp
shl
mov
in
ret
mov
add
imul
outsb
sbb
call
out
into
aam
pop
sti
inc
and
sub
push
add
sahf
sahf
and
cmpsb
aam
icebp
xchg
push
sbb
xchg
push
mov
xchg
mov
daa
pop
add
jmp
cmc
jno
dec
xchg
testb
repz
jnp
pusha
sub
mov
adc
add
std
inc
test
fistps
stc
in
sub
sbb
dec
push
clc
xchg
xchg
movsb
rolb
leave
inc
fldt
mov
inc
dec
rorl
dec
lods
ds
push
adc
aam
and
into
xor
test
nop
xor
or
or
or
push
movsl
hlt
and
push
sub
fldenv
rcrb
pop
in
testb
out
out
mov
inc
xlat
mov
mov
insb
cmp
lods
dec
movsb
loope
js
pop
outsb
les
jnp
popf
and
lret
rol
movsl
subl
stos
push
cmpsw
pop
daa
xchg
out
jno
mov
push
xchg
sarl
pop
fbld
loopne
loopne
test
xchg
js
popa
lret
js
push
dec
popa
call
add
adc
or
add
and
mov
loopne
jno
js
hlt
jnp
ss
into
lcall
inc
loopne
adc
imul
dec
sub
cmp
dec
stc
fs
mov
or
movsl
jbe
fcmovnb
pop
jnp
arpl
sub
and
int
inc
mov
fisubs
inc
xor
fnstsw
pusha
leave
mov
jge
add
inc
xorl
sub
pop
pop
pop
adcb
aad
xchg
hlt
out
push
js
jne
stc
int
dec
mov
xor
mov
negb
xchg
xor
add
test
jmp
stos
adc
jns
pop
and
nop
push
push
cmpsl
sbb
push
in
cs
pop
sub
cmp
mov
enter
sbb
xchg
cmpl
mov
adc
aam
adc
insb
xor
out
ret
xor
leave
xchg
rorl
jno
inc
dec
aam
test
jp
push
out
sahf
add
popa
push
xchg
mov
jne
jmp
dec
fstl
sti
adc
mov
pop
mov
and
mov
fimull
push
xchg
cmp
cmp
ds
pop
push
push
aam
dec
in
dec
mov
call
xor
movsb
repnz
fs
gs
in
pop
jecxz
sub
push
inc
in
and
cmp
repz
movsb
fucomp
aam
cmc
data16
jg
xor
and
inc
xor
jge
jl
bound
inc
cmp
and
jmp
inc
je
pop
js
jno
je
cmp
mov
pavgb
fcompl
js
call
lret
clc
mov
mov
adc
xlat
adc
loopne
mull
xor
adc
and
add
push
movsl
add
out
mov
add
mov
rclb
pop
mov
jae
sbb
loope
insb
xchg
sub
test
dec
lds
cmp
test
cmpsl
jg
mov
cmc
pop
out
les
pop
sub
shrl
sub
cmpsb
fdivs
push
add
cmpsl
fsts
addr16
rolb
pop
mov
dec
ret
dec
mov
test
mov
iret
xchg
mov
jp
and
mov
loope
hlt
pop
jnp
in
xor
mov
add
xchg
int
mov
dec
mov
jae
fwait
popa
test
sub
hlt
ret
mov
jge
or
inc
dec
test
cmc
push
fistl
push
and
cmpsb
stos
cmp
xchg
wrmsr
fnstcw
cmpsb
out
dec
pop
adc
sbb
or
lcall
or
adc
out
les
xor
ds
push
inc
stc
test
incl
outsb
jbe
fdivs
mov
mov
rorl
push
push
addb
inc
loope
lock
mov
or
nop
sub
bound
daa
cld
pop
test
xchg
mov
cltd
pop
outsl
inc
add
mov
cmp
xor
inc
pop
aas
sub
push
aam
jecxz
inc
adc
sahf
stc
xchg
int3
bound
jae
lahf
leave
movsb
fs
sbb
xchg
cmp
jbe
mov
hlt
movsb
adc
or
loopne
lahf
xchg
cmp
ja
pop
das
sbb
mov
out
dec
jae
insb
push
sarl
adc
movsb
mov
sub
jb
sub
icebp
js
movsl
js
jmp
std
movsl
loopne
pop
xchg
les
sbbb
lods
into
fnstcw
cli
repz
or
jns
fldenv
xor
jns
fisubrl
pop
or
and
les
rorb
mov
sahf
inc
pusha
call
dec
hlt
stos
fwait
pop
mov
adc
icebp
std
push
inc
das
sub
push
movl
in
sbb
fimuls
xchg
dec
adc
pop
fmull
xchg
daa
aaa
cli
adc
sbb
daa
into
push
mov
push
jno
sub
xchg
test
ret
push
sbb
mov
jge
cmp
stos
push
sub
or
ret
sbb
loopne
fwait
xor
out
mov
jg
test
mov
int
pop
pop
popf
mov
push
add
lret
rcrl
sbb
sbb
lods
mov
jae
decb
icebp
fldcw
adc
rorl
aad
xor
or
scas
mov
addl
sub
inc
xor
add
mov
stos
pop
test
push
jbe
ret
scas
add
andb
ljmp
push
stos
push
sbb
call
cmp
fdivs
pop
xor
out
ds
inc
push
fildl
pop
adc
stos
into
cmp
nop
mov
mov
fists
xorl
inc
out
or
cmp
pushf
or
lods
int
negb
sbb
arpl
push
mov
stos
xor
xchg
pop
ja
fldl
stos
jge
jo
add
mov
push
fidivl
xlat
stos
mov
out
addr16
vpcomq
cmp
xor
cmc
jbe
cld
stmxcsr
orl
ljmp
mov
sub
rcrl
pop
cmp
mov
adc
pop
push
cs
je
cmpsl
fcompl
push
mov
mov
fs
shrl
dec
adc
inc
outsl
aad
xchg
loop
ljmp
xchg
pushf
mul
pop
push
test
mov
lcall
mov
ss
cmpb
mov
cld
sub
jle
xlat
jo
test
data16
mov
clc
xor
inc
push
inc
fsubr
test
ret
aas
test
in
or
fisubrl
cmp
sahf
or
aam
cmp
sahf
call
sub
scas
cmp
sub
fdivl
call
leave
fdivl
aad
cmc
mov
fidivrl
out
push
dec
cs
out
ljmp
out
mov
dec
ficomps
ss
dec
pop
dec
xchg
mov
push
xchg
mov
outsl
addr16
inc
fdivs
stos
pop
sahf
fucomi
ds
xlat
setle
dec
push
lcall
push
xchg
adc
add
lea
cli
orb
sub
pop
add
scas
dec
sti
movsb
int
and
scas
cwtl
loop
popa
dec
das
sub
push
es
xor
cmc
gs
mov
lret
int3
repz
mov
js
push
mov
aas
pop
sub
push
or
xchg
test
or
push
arpl
cs
jp
dec
sbb
jns
dec
pop
scas
add
scas
push
jns
fsubr
push
movsl
jnp
sbb
xchg
pushf
or
pop
imul
mov
mov
aaa
stos
das
sub
mov
ja
mov
cli
mov
iret
adc
mov
push
repz
icebp
sarl
or
loope
aaa
mov
xor
add
xchg
gs
sub
dec
cmp
push
cmpsl
fisttpl
lret
lock
sbb
pop
pushf
ret
fwait
stos
mov
gs
ficomps
push
mov
scas
lds
xorb
mov
pop
ds
icebp
add
shl
int
or
cld
xchg
jo
and
or
jnp
fwait
add
loope
fcmovnu
sbb
dec
xor
hlt
xchg
popf
pop
adc
rclb
xor
sub
sub
out
add
ret
or
jae
daa
outsl
mov
mov
mov
inc
ja
enter
sbb
xchg
mov
sbb
and
test
adc
jns
mov
sbb
sub
pusha
xchg
push
fwait
jo
idivb
test
xor
ffree
int3
loop
es
shrb
push
dec
rolb
jns
pop
xor
sar
hlt
outsb
popa
hlt
pop
gs
dec
inc
mov
cmp
fcoms
mov
les
pop
lds
mov
sbb
push
fcmove
adc
rcll
dec
faddl
dec
out
out
stos
out
jb
out
addr16
mov
mov
adc
insb
cmpsl
insl
jmp
mov
je
bound
dec
ljmp
inc
cmp
movl
xchg
loopne
inc
in
mov
push
cmp
add
leave
daa
bound
jle
cmp
dec
inc
dec
lret
xor
lods
cmpb
xor
mov
sahf
fcompl
or
mov
inc
xchg
xchg
add
cwtl
clc
int3
dec
adc
adc
sahf
dec
xchg
add
xchg
imul
sbb
cli
adc
mov
sub
push
xchg
xor
mov
mov
xchg
scas
push
xor
cmp
mov
jo
ds
lods
inc
or
int3
outsb
and
inc
fs
jbe
sbb
xlat
filds
sub
int3
icebp
in
xor
mov
sub
jne
aas
cmp
xor
clc
push
jo
xor
rcrl
push
in
in
xor
push
out
mov
xchg
xchg
mov
lock
and
aaa
adc
cmpsl
inc
movsb
pop
mov
add
and
or
loope
xor
push
dec
rcrl
cli
sub
mov
xchg
jp
cltd
ljmp
in
and
mov
or
mov
pop
pop
adc
outsb
mov
push
sbb
xchg
int3
or
push
jmp
mov
cmp
movsl
add
pop
xor
outsb
lcall
adc
mov
pop
or
lds
sbb
test
loopne
aad
fnsave
push
out
pop
add
cmp
lea
int
adc
inc
dec
xchg
out
inc
cmpsl
dec
aaa
ret
ficoms
cld
xchg
adc
popa
sbb
pushf
in
das
dec
or
mov
add
push
or
mov
fstpl
jns
aaa
inc
mov
repz
stos
sbb
pop
mov
sti
lods
ficomps
sbb
pusha
push
fidivs
cld
pop
xchg
je
jb
in
stos
xor
push
cmp
add
lcall
pushf
pusha
lret
sti
testb
adc
imull
shrl
mov
sarl
pop
icebp
movsl
pop
imulb
dec
xchg
sbb
mov
sbb
mull
outsb
ja
push
sbb
repnz
jecxz
push
xor
lea
mov
pop
or
mov
push
daa
pop
pop
add
je
dec
aad
inc
arpl
adc
ret
and
adc
mov
mov
dec
daa
sub
sarl
scas
je
or
movsl
add
cmp
mul
lds
jne
mov
ret
es
lret
cs
fnstcw
lock
adc
mov
movsb
jle
mov
jmp
add
xor
sbb
sbb
lods
aam
or
imulb
pop
xchg
ljmp
cmpsb
adcl
ficomps
push
aam
push
scas
ljmp
add
push
sbb
adc
jo
dec
mov
pop
fdivs
and
movsb
fnstsw
push
test
jns
adc
or
xor
dec
pop
add
rcl
insl
outsl
mov
ss
repnz
lahf
jl
fldl
pop
push
sub
test
pusha
push
adc
lock
insl
lock
ret
fs
ljmp
out
insb
add
mov
popf
and
daa
mov
xchg
shr
lret
add
fwait
jnp
fisttpll
fsts
pop
fdivp
jbe
mov
lcall
addr16
mov
inc
movsl
sbb
scas
cvtpi2ps
sarb
pop
jb
aas
daa
inc
xor
push
adc
pop
cmc
orb
or
and
test
xchg
dec
orb
cmp
mov
push
xchg
stc
xchg
cli
pop
mov
dec
je
add
cli
dec
cmpsl
cmpsb
mov
mov
arpl
push
aaa
je
adc
and
mov
adc
mov
pop
es
and
mov
aam
xor
inc
pop
adc
xor
mov
xor
dec
mov
cmp
xchg
push
xchg
cmpsl
or
dec
jl
dec
or
mov
push
mov
js
fwait
jnp
pop
es
and
in
mov
mov
aam
and
sub
xchg
mov
mov
aaa
lods
in
and
loopne
inc
pop
push
inc
dec
pop
lret
xor
subl
cmp
xor
std
lret
test
cld
outsl
xlat
adc
push
rcll
mov
popl
sbb
xchg
cli
in
sarl
iret
push
mov
stos
cli
fsts
dec
sub
dec
jae
mov
out
xchg
enter
imul
rcrb
inc
mov
into
jbe
mov
mov
scas
loopne
lods
and
addr16
mov
shrl
jbe
sbb
lds
cmpsl
dec
dec
ret
lcall
inc
xchg
pop
sbb
push
xchg
pop
cld
in
sti
push
movsl
push
mov
or
push
add
call
mov
mov
and
rcr
stos
pop
lds
in
aas
addr16
dec
sub
lock
or
psllw
push
lret
ret
repnz
jbe
std
in
ret
inc
lea
jp
call
fsubp
std
pop
int
cmp
add
into
loop
pop
cmp
enter
inc
into
cwtl
mov
ret
ficoms
stc
out
mov
mov
mov
xchg
xor
mov
mov
insb
dec
lret
add
das
mov
push
jbe
popa
jb
ret
push
push
addr16
fs
cmp
pop
sub
shlb
test
movsl
pop
xlat
adc
lods
sbb
dec
out
sbb
cmp
ret
or
xchg
inc
cmp
lret
xchg
mov
mov
mov
or
and
sbb
imul
adc
fs
or
notl
sub
push
movsb
mov
pop
jne
ljmp
or
inc
cmp
aam
hlt
xor
js
xchg
push
call
pop
adc
int
pop
pop
addr16
sarb
test
lods
movsb
dec
sub
mov
xchg
cmp
rorl
jecxz
aaa
std
sub
push
push
lods
and
and
dec
xor
pop
cmp
cmp
outsb
push
push
cld
daa
dec
jns
add
push
les
dec
push
mov
je
and
mov
loop
outsb
iret
daa
out
lods
lea
cmc
pop
cmp
xchg
xchg
push
popa
pop
lods
mov
sbb
and
nop
push
iret
mov
stos
pop
lods
xor
pop
inc
jmp
mov
aas
mov
mov
bound
cltd
sbb
out
cld
jmp
push
popa
inc
inc
std
xor
ds
fwait
xchg
cmp
fidivrl
imul
inc
loop
data16
movsb
xchg
mov
stos
fwait
jnp
int
add
fiaddl
lea
lock
fcoml
lret
xor
dec
lods
out
shlb
pop
xchg
push
pop
mov
add
aad
mov
rcr
jno
or
lods
ljmp
mov
insb
sub
jmp
sbb
push
mov
jae
adc
call
xlat
xor
jp
stos
ret
cmp
call
pop
cmp
stos
and
mov
scas
mov
mov
mov
sbb
mov
xchg
mov
cmp
jp
add
rorl
inc
gs
jno
jg
and
ja
cli
cltd
test
gs
jae
xor
cmp
jg
testb
test
popf
xor
xor
repz
cwtl
and
inc
adc
fcomps
sbb
mov
rcrl
test
sub
sbb
inc
xorl
mov
mov
lahf
push
jae
je
popl
fisttpll
fucomp
mov
dec
inc
or
push
daa
or
fstpl
fmull
pop
inc
ret
push
pop
arpl
jbe
mov
ret
adc
pop
orb
mov
mov
jb
jg
aad
rcll
jl
loopne
stc
mov
aam
adc
lahf
jl
inc
ret
xlat
fsubrl
aad
sbbl
pop
shrb
mov
push
fistpl
jp
loop
xlat
pusha
out
cmp
xchg
cmp
xchg
jbe
jo
xchg
mov
lahf
and
inc
int
fs
lret
jb
lret
ja
adc
aam
sub
add
pop
push
jb
sti
mov
jno
inc
out
jb
dec
out
xchg
enter
xchg
jecxz
inc
negb
ret
pop
add
and
mov
inc
pop
inc
or
loop
inc
xchg
or
ss
cltd
insl
repnz
cli
loopne
xchg
mov
push
mov
mov
push
adc
insb
aad
mov
mov
xchg
cmp
push
in
lahf
gs
nop
xor
push
xlat
lret
inc
dec
cmc
sbb
xor
mov
xor
repnz
inc
in
mov
cwtl
lock
aas
jge
pop
shlb
in
pop
nop
repz
les
in
cwtl
pop
addr16
shll
test
addr16
les
or
pusha
cmp
mov
push
mov
mov
iret
xchg
push
add
jg
loop
cmc
into
imul
inc
filds
pop
dec
ss
adc
mov
pop
lret
repz
in
inc
mov
or
pop
sbb
js
or
mov
test
adc
mov
jno
sarb
daa
mov
push
out
push
movsb
jb
fwait
imul
jno
shl
cltd
fwait
jl
repz
inc
stos
jb
push
mov
dec
clc
dec
pop
lods
adc
mov
stos
sbb
insb
lcall
clc
or
mov
jecxz
lret
test
movsl
xchg
and
mov
gs
lret
mov
ljmp
lcall
mov
inc
adc
test
adc
insl
push
test
sbb
sahf
mov
movmskps
and
pop
popf
xor
fiaddl
pop
mov
push
or
rolb
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
add
add
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
add
inc
inc
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
add
add
into
xor
add
add
add
add
add
rcrb
add
add
inc
add
jo
add
inc
add
jo
add
inc
add
jo
add
inc
add
add
add
inc
push
xchg
adc
inc
xchg
cmp
daa
add
add
inc
cmp
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
xor
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
and
add
push
call
test
jne
and
jmp
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
sub
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
mov
add
mov
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
andl
andl
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
lea
push
mov
pushl
call
mov
test
je
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
xor
add
mov
movl
movl
movl
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
jae
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
add
mov
add
mov
mov
mov
inc
mov
jmp
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
mov
xor
mov
sub
add
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
dec
inc
mov
pop
xchg
andl
gs
add
fbstp
out
ja
mov
push
in
add
sbb
adc
lods
gs
pusha
pop
nop
xchg
xor
sub
jge
leave
xor
sbb
fnstcw
clc
pop
clc
fstps
pop
and
lds
xlat
std
dec
dec
xchg
out
jle
adc
inc
or
imul
test
add
fisubs
lock
jnp
pop
fsubs
lock
or
out
adc
and
aas
dec
push
adc
insl
mov
popf
aad
test
repnz
es
ljmp
in
mov
fmulp
push
shr
int3
orb
lret
enter
push
sti
shl
shlb
push
sete
int
out
push
shrl
adc
mov
mov
xor
sti
out
das
test
iret
and
add
out
out
lods
pop
xor
inc
rorl
ret
push
jo
stos
dec
addr16
mov
adc
hlt
call
jne
xchg
lods
mov
stos
sbb
out
sub
jbe
mov
jno
fmuls
inc
sbb
jo
pop
loopne
push
scas
mov
cmp
push
xchg
loopne
stos
loope
and
les
enter
mov
ffree
jo
xor
sbb
bound
imul
fiaddl
sahf
fldcw
mov
lret
shrb
ds
pop
fs
pop
cs
xchg
cmpsl
cli
jmp
sbb
and
gs
or
adc
inc
in
lret
mov
xchg
scas
insb
in
and
stc
jmp
jbe
clc
aaa
icebp
aaa
in
in
mov
mov
fs
mov
clc
inc
jb
jns
mov
push
push
int3
add
add
or
mov
in
pop
mov
inc
sbb
or
popf
mov
iret
pop
shlb
mov
in
and
sub
leave
add
adc
outsl
xchg
nop
cltd
mov
cwtl
into
jmp
test
xor
insl
xor
add
fmuls
pop
loopne
xor
dec
dec
inc
push
sbb
in
sub
aam
ss
inc
mov
pop
xor
jl
fnsave
lcall
inc
leave
lods
repz
xor
dec
xor
cmpsb
mov
inc
cmp
and
aas
or
jg
xor
or
aaa
test
sub
loop
push
mov
addr16
dec
or
in
sub
out
adc
movsl
and
aaa
mov
ja
gs
fidivl
mov
shrb
in
dec
xchg
mov
dec
or
mov
add
rcr
jmp
or
hlt
mov
dec
adc
popf
xlat
out
xchg
dec
add
in
add
xchg
jle
lock
or
jbe
jae
xor
aam
push
cmpsl
subb
outsl
movsl
outsl
add
sub
lods
and
lods
ljmp
xchg
movsb
movsl
xchg
daa
imul
arpl
inc
inc
negb
pop
hlt
dec
cli
dec
ret
arpl
xor
dec
xchg
adc
xchg
and
xchg
addr16
xor
cmp
add
test
fnstsw
cmc
lds
gs
and
pushl
pop
jle
jp
imul
fsubl
add
jmp
or
and
int
adc
add
stos
add
add
roll
enter
adc
aam
mov
and
repz
add
das
mov
shrb
loop
sbb
pop
lds
or
fxch
adc
or
lock
sbb
and
imul
mov
push
jno
mov
xchg
adc
sub
mov
mov
xchg
aad
lret
dec
fsubr
lds
add
and
sbbl
stos
loopne
mov
movsl
mov
andb
cmpsb
adc
add
shll
sbbl
pop
ljmp
adc
out
leave
adc
popl
push
and
mov
inc
and
test
in
inc
popa
jg
mov
popa
stos
pop
push
loopne
pushf
jg
ret
leave
xchg
adc
mov
xchg
jp
mull
sbb
clc
and
aaa
mov
mov
fisubs
inc
inc
inc
jo
mov
pop
cmp
ficomps
jae
ja
fdivs
rcll
inc
cmp
sti
push
xor
stc
jno
mov
icebp
fs
stos
push
roll
lods
cld
mov
or
dec
or
jno
inc
mov
pop
movsl
aad
pop
or
repz
pop
int3
jns
das
or
ret
dec
int3
imul
ss
adc
outsb
in
push
outsb
imul
mov
in
pop
mov
cmp
fwait
or
jle
ja
dec
orb
mov
arpl
sbb
mulb
or
jnp
in
lods
pop
and
ret
stc
leave
pushf
in
push
mov
dec
sarl
and
add
mov
adc
lcall
mov
cli
ja
inc
fiaddl
fs
in
dec
xor
sub
call
mov
xor
popf
adc
xor
int
lods
movsb
jg
lea
mov
shrb
jbe,pn
ret
das
rorl
cltd
adc
and
arpl
add
dec
cltd
xor
int
jno
std
aad
stos
out
jmp
pop
pop
notb
aas
jmp
push
sarl
jb
and
popa
dec
std
mov
push
pop
xchg
xchg
or
fisubrl
push
test
dec
dec
mov
out
mov
out
jbe
cmp
cmc
add
cmpsb
xchg
dec
add
lock
xor
sahf
jno
pop
or
movsl
clc
pop
inc
push
test
push
cld
and
testb
cld
loopne
jg
jne
call
xchg
inc
int
shll
and
adc
in
xchg
shrd
icebp
and
inc
aam
js
mov
hlt
add
cmp
inc
daa
mov
cli
xchg
lods
xchg
xchg
imul
push
bound
iret
movsl
lods
inc
fstps
sub
mov
push
lcall
test
fimull
pop
test
dec
mov
or
xor
add
mov
mov
sub
xor
popa
ret
add
inc
subl
mov
dec
pop
mov
pop
insl
pop
mov
mov
push
test
adc
push
cmp
lods
cmp
sarl
add
add
mov
or
lcall
and
add
or
fs
inc
fmulp
pop
mov
les
das
lcall
mov
mov
pop
in
cmp
andb
leave
ss
cmpsl
or
inc
add
bound
stc
fcmovu
bound
cs
lods
enter
sti
or
testl
mov
fidivl
pop
mov
aaa
inc
sti
mov
ret
cmp
push
iret
loop
pop
pop
sbb
fdivl
fmull
mov
rol
int3
movlps
xchg
bound
pop
negl
adc
mov
adc
or
pop
test
add
popf
pop
mov
pop
or
test
cmp
pusha
adc
pop
addb
ret
lahf
push
pop
sar
cmc
jne
xlat
enter
jae
icebp
push
gs
mov
and
das
cli
hlt
xor
jp
aaa
jb
mov
push
test
fbld
ror
cmc
push
fisubl
popa
repnz
or
inc
ja
hlt
xor
and
inc
xchg
cmpb
push
lock
jp
or
stc
arpl
inc
js
inc
ljmp
cs
jns
xchg
dec
cmpb
xor
mov
push
cmp
fdiv
xlat
jbe
xorb
rclb
push
and
sub
adc
pop
mov
push
push
ja
pop
inc
pop
repnz
sub
jg
cmp
and
push
cmc
mov
ja
xchg
jbe
or
divb
jg
outsb
int
dec
adc
mov
aad
fwait
cmp
ret
cmp
icebp
mov
jb
and
pusha
xchg
xchg
jecxz
xor
sbb
arpl
sub
nop
fnstenv
sub
clc
sub
rcll
cmp
dec
push
or
mov
incb
imul
sub
std
mov
push
mov
loope
mov
out
daa
inc
jnp
lods
dec
nop
cmp
arpl
int3
rclb
xor
pop
mov
xor
divb
fwait
pop
mov
push
pusha
mov
aaa
mov
jg
xor
lds
sbb
lock
sahf
mov
call
mov
insb
pop
fimull
mov
mov
adc
hlt
sub
jne
cmp
xor
shll
js
jl
jmp
push
data16
gs
outsb
adc
xor
cmpl
jle
mov
mov
fs
ret
inc
ss
ss
sub
test
push
pop
nop
or
mov
test
test
out
xchg
les
je
nop
outsl
cmp
xchg
faddp
int3
pop
loopne
mov
pushf
cmp
arpl
jb
pop
push
cmc
xchg
mov
push
leave
mov
xchg
jbe
push
xor
push
jmp
fbld
or
loopne
dec
push
fistps
test
sub
aad
lds
fldt
stos
cmc
pop
dec
les
ret
pcmpeqb
jecxz
xchg
cmp
enter
push
js
sbb
xchg
lds
cmp
outsb
sarl
and
pop
pop
sbb
bound
pop
mov
sbb
cmc
test
jg
push
bound
ljmp
ja
dec
jo
outsb
lods
xchg
dec
lock
add
gs
popf
jg
mov
dec
sahf
adc
pcmpgtd
add
stos
add
add
xchg
loope
xchg
sub
pop
push
push
popa
and
cmc
sbb
pop
mov
pop
in
push
aaa
leave
loop
mov
lret
out
popa
ljmp
jecxz
adc
loopne
cmpsl
scas
xor
xor
es
gs
cmc
jnp
push
adc
add
lock
test
lock
mov
icebp
icebp
fwait
pusha
add
or
stos
mov
lock
dec
les
rorl
adc
mov
xchg
adc
stc
push
jl
ret
imul
rcrb
test
lret
jle
out
out
pop
imul
imul
push
mov
and
icebp
pushf
loope
mov
mov
testl
dec
lods
movsl
sarb
insl
gs
rol
ret
sub
test
or
adc
insl
jo
lret
or
add
aam
ljmp
dec
xor
cmc
jne
jl
rcrl
mov
push
mov
lods
call
dec
dec
daa
or
outsb
pmuludq
xor
sbb
mov
lahf
pop
push
mov
add
sarl
push
jp
scas
in
es
shrl
out
jge
leave
jmp
push
in
jno
mov
and
sbb
jl,pt
or
cwtl
lods
adc
cltd
imul
sub
inc
rclb
sbb
pop
repz
inc
daa
leave
mov
jbe
push
scas
adc
ret
or
out
xor
stos
mov
and
inc
data16
popf
mov
loope
insl
daa
subw
fldcw
pop
adc
lahf
lret
jecxz
mov
pop
sarl
scas
xchg
cmp
es
xchg
xchg
mov
xchg
dec
pop
sbb
jle
std
test
cmpl
sbb
xchg
mov
and
lock
sti
push
mov
jne
add
mov
mov
in
das
int3
loop
data16
cmpl
jmp
mov
out
imul
xor
jl
or
xorb
lods
lcall
jbe
ljmp
mov
or
rclb
ljmp
push
loope
cli
mov
das
test
mov
pusha
test
and
inc
test
xchg
out
roll
push
sub
sub
mov
int
mov
stos
dec
sbb
insl
loope
mov
sahf
xor
and
cmp
push
clc
jmp
iret
cmp
or
mov
mov
int3
pop
add
mov
js
inc
xchg
sti
stos
loope
or
scas
push
test
addr16
dec
addl
sbbl
int
inc
push
in
push
jge
adc
ret
push
pop
lds
pop
cld
je
jno
hlt
xchg
int3
ljmp
push
roll
outsb
stc
les
or
pusha
mov
inc
lods
inc
setg
out
push
cmp
aaa
push
cmp
mov
mov
stos
xchg
xor
out
aad
out
sub
push
mov
xchg
addr16
rcr
es
adc
sahf
jecxz
inc
mov
jns
lea
push
enter
pop
mov
sub
mov
pop
sbbb
dec
imul
sub
add
mov
repz
flds
js
inc
in
sbb
mov
pop
cli
xor
xchg
and
pop
aad
lret
mov
jl
and
gs
mov
mov
adc
mov
leave
or
xchg
testl
imul
je
lods
xchg
and
xor
or
or
lock
mov
fucomp
aad
stos
mov
incb
push
mov
jg
andb
pop
outsb
mov
pushf
mov
loop
add
idiv
xor
or
mov
and
fnstenv
lods
test
mov
jb
sub
or
frstor
adc
jnp
dec
lret
mov
or
das
inc
or
ja
and
sbb
add
sub
and
pop
in
repz
sahf
jb
xor
xorl
test
insl
hlt
mov
mov
jp
ret
xchg
add
popa
push
mov
fstl
inc
addr16
mov
or
inc
lea
pop
pop
inc
mov
mov
scas
mov
or
imul
push
jp
xor
xchg
addr16
mov
jg
ljmp
dec
mov
jmp
mov
adc
pop
sub
ss
rcr
mov
inc
sub
fs
outsb
inc
arpl
xchg
adc
sub
ss
cmpsl
daa
xor
lret
in
add
std
mulb
insl
dec
mov
addb
push
arpl
dec
add
add
imul
pop
mov
jmp
and
dec
sbb
push
hlt
xor
aam
pusha
stos
and
sbb
jmp
jecxz
out
out
int
xchg
mov
insb
mov
jl
es
pop
les
sub
ljmp
out
adc
pop
pop
xchg
dec
pop
enter
mov
inc
and
insl
mov
mov
lahf
jmp
mov
jae
lret
push
into
add
add
mov
jbe
out
xchg
pop
add
repnz
repnz
push
inc
push
or
outsb
adc
mov
mov
or
mov
imul
hlt
push
popa
xor
xrelease
outsb
ja
and
shrb
sbb
push
cmc
imul
sub
push
mov
mov
xchg
hlt
add
adc
jle
mov
fxch
cmpsl
cmp
add
fs
push
insl
pusha
push
xchg
int
lret
push
loopne
push
divb
pop
and
xor
movsl
mov
adc
xchg
icebp
jp
sbb
push
shrb
mov
pop
pop
add
sbb
aam
es
cmp
inc
js
and
enter
ljmp
test
imul
shrb
jnp
jno
cmp
push
in
fndisi(8087
stos
xor
xor
jbe
push
ljmp
jg
ret
mov
lcall
cltd
pop
mov
fstpl
shr
pop
daa
adc
cmp
inc
lods
in
push
and
pop
popl
popf
inc
xchg
xor
mov
insb
test
inc
js
mov
sbb
push
sub
cmp
mov
sbb
xor
pop
adc
add
jecxz
nop
rcrb
dec
shr
cld
jg
mov
add
add
mov
push
push
imull
loope
fcoms
dec
ffreep
popa
mov
roll
add
adc
mov
aam
jns
xchg
lods
es
pop
int3
dec
and
push
daa
int
sub
sbb
aaa
pop
mov
mov
sbbb
xor
sub
jnp
scas
push
pop
bound
jg,pn
adc
pop
mov
jb
inc
sub
fidivl
xchg
adc
jnp
pop
lea
pop
std
outsl
or
repnz
dec
push
mov
inc
xor
shrl
out
fwait
arpl
fists
or
fwait
or
sbb
xlat
adc
movl
cltd
xchg
ljmp
jb
push
clc
nop
outsb
bswap
out
mov
movsl
fistpl
push
jg
sub
and
jne
mov
pusha
dec
pop
scas
in
xor
xchg
pop
fdivl
mov
mov
icebp
mov
cs
in
push
shlb
xor
cmpsl
add
add
adc
jp
mov
sbb
gs
jae
sbbl
andl
or
mov
les
into
sub
xor
hlt
mov
cvtps2pi
scas
mov
test
mov
jb
addr16
stos
inc
cmp
mov
push
es
int3
in
jno
sbb
fistps
pop
or
cmp
jb
inc
fs
out
imul
arpl
clc
ljmp
cmp
sti
add
push
sbb
pop
push
lret
in
pop
pop
jne
scas
fcmovbe
sub
and
mov
arpl
dec
mov
pop
ficompl
push
cwtl
or
rcl
lods
test
mov
push
push
dec
inc
insb
xlat
mov
data16
mov
add
jmp
xchg
das
jecxz
out
jae
push
repnz
jmp
inc
aam
dec
mov
pop
push
push
fs
pop
xchg
les
leave
pop
cmp
clc
cmp
pop
fildl
push
add
or
pop
xor
js
and
xlat
pushf
xchg
loope
or
lea
dec
in
insl
filds
dec
stos
jge
xchg
in
dec
mov
add
xchg
int3
lahf
cltd
cltd
inc
xchg
andb
inc
or
dec
cmp
popf
xchg
enter
sti
xor
gs
push
jno
jge
jle
xor
mov
cmpl
scas
stc
pop
push
call
out
or
mov
imul
arpl
mov
insb
cmp
xor
cmp
xchg
loop
repnz
inc
fs
in
and
xor
push
out
shll
mov
xor
jecxz
mov
sub
stos
cmp
sbb
pop
fucomi
jecxz
sbb
cmp
adc
lcall
mov
cltd
aaa
lods
xchg
in
xorb
jmp
push
pusha
out
mov
mov
jno
and
mov
pop
pop
mov
pop
ss
test
test
dec
dec
and
sbb
jp
push
xchg
mov
outsb
inc
xor
enter
and
mov
xchg
xchg
inc
jo
xchg
xchg
cli
test
out
leave
mov
fldcw
dec
push
repnz
add
data16
lods
cld
mov
hlt
xor
xor
add
arpl
push
fsubrp
lea
arpl
lods
aaa
stc
mov
fstpt
sub
push
insb
lret
push
enter
pushf
jp
jmp
jecxz
scas
sbb
mov
jbe
jp
cmpsb
in
fcomi
pop
addl
cmpsl
or
mov
insb
test
add
add
pop
rol
faddl
mov
das
cltd
outsb
adc
adc
push
clc
loope
sub
scas
push
js
push
push
mov
into
sub
jnp
pop
mov
mov
mov
adc
fsubrl
xchg
dec
xchg
pop
pop
and
pop
out
cltd
xchg
mov
sahf
test
lret
and
sub
ret
in
jge
xor
xor
fs
dec
and
icebp
sub
loope
dec
dec
nop
lcall
inc
jecxz
dec
mov
inc
xchg
mov
sbb
jp
xchg
mov
push
pop
mov
hlt
prefetchwt1
addr16
mov
aas
movsb
sbb
mov
out
ja
nop
push
sub
aam
pop
or
sub
sub
jb
jle
sub
leave
jb
aaa
mov
and
mov
inc
leave
add
out
add
inc
in
inc
test
leave
xor
into
sbb
push
lods
mov
inc
clc
mov
int3
jbe
mov
je
dec
adc
and
adc
cltd
jle
in
mov
out
mov
or
adc
test
or
scas
stos
iret
jl
push
push
and
notl
fsubrs
mov
loop
cmpsb
lahf
test
add
sub
cli
out
mov
mov
jge
addr16
or
mov
scas
jbe
mov
dec
dec
sub
mov
jnp
inc
lods
sub
cmp
push
loop
jb
aam
filds
cmp
pop
setl
inc
jle
imul
mov
jge
mov
mov
adc
sub
push
mov
jl
jl
mov
lea
aad
dec
clc
in
or
fidivs
adc
push
dec
icebp
in
movsl
testb
fiadds
movsb
hlt
out
mov
ss
inc
mov
jmp
mov
mov
shll
movsl
lock
ret
push
push
xchg
stos
nop
push
xchg
cmp
mov
sbb
fs
outsl
js
repnz
mov
dec
or
lret
inc
insb
sub
adc
push
mov
mov
cs
repz
or
movsb
xchg
repz
or
repz
mov
lcall
rdpmc
loope
push
orb
aad
xchg
movsb
cmp
adc
or
sub
out
jle
pop
jl
rol
dec
in
bound
adc
add
jns
lret
or
call
jg
repz
jle
mov
movsb
mov
lret
add
outsb
mov
adc
mov
imul
mov
data16
push
sbb
xor
loop
mov
pop
sbb
das
sbb
jns
xchg
in
sub
addr16
sub
mov
movsb
push
ror
cmp
mov
or
mov
in
cwtl
fcmovnbe
int3
xor
aam
xchg
addb
sub
pop
xchg
idivb
jecxz
addb
xor
add
dec
clc
in
cmc
add
neg
jmp
cli
and
das
jae
adc
add
stos
add
add
xor
mov
xchg
out
imul
inc
nop
xor
or
push
sub
loop
mov
cmp
out
movsl
push
adc
and
lret
mov
xor
lods
hlt
add
push
push
sub
and
iret
sahf
mov
sub
ret
xchg
dec
mov
mov
jne
out
outsl
adc
std
cltd
iret
mov
out
mov
add
or
xchg
fwait
jmp
andnps
outsb
cmpsl
inc
mov
je
fdecstp
pop
stos
ret
jg
sarl
sub
add
pop
sbb
das
push
mov
cli
sti
adc
sahf
push
popf
jnp
mov
and
sti
mov
shrb
addl
pop
into
sbb
cld
xor
test
or
push
sub
iret
dec
inc
enter
push
or
push
pop
loope
adc
add
mov
adc
test
rclb
daa
mov
test
xchg
sub
jmp
in
inc
dec
pop
lcall
insb
cltd
push
fmul
sub
mov
pop
push
stos
rcl
repz
daa
icebp
xor
mov
sbb
xchg
aaa
test
dec
cmpb
jge
int
and
fwait
cs
mov
jo
sar
mov
xchg
fwait
popa
fwait
pop
out
mov
push
dec
inc
and
mov
sbb
es
into
xor
stc
mov
popf
pop
jg
lods
hlt
nop
add
int
stc
call
popa
and
add
hlt
movsb
repz
testl
inc
mov
sbb
sarb
outsl
sbb
mov
sbb
in
mov
push
inc
mov
repz
rep
jge
shrb
and
xchg
sbb
aam
ss
jle
adc
fisubs
sub
adc
or
and
std
out
push
cs
mov
mov
sahf
subl
loopne
pop
rorb
dec
aam
add
inc
or
add
cmp
xlat
jno
ja
mov
cwtl
out
jecxz
pop
dec
dec
xchg
cmp
out
aad
repz
clc
or
adc
fists
lahf
popa
scas
mov
xor
pop
not
fsubl
insb
pop
add
ss
cmpsl
mov
inc
xchg
sub
dec
inc
test
or
fwait
insb
xlat
or
xor
loop
push
imul
mov
rcr
into
push
ret
push
stos
pop
hlt
jmp
mov
dec
orl
movsl
add
std
in
xchg
dec
lahf
cltd
outsl
inc
mov
or
mov
ja
sbb
dec
cli
xor
ret
insl
int3
jge
rcrl
aas
push
lcall
sar
cld
cmp
adc
in
dec
cmc
es
cld
scas
jne
jne
dec
outsb
or
push
add
mov
mov
mov
jno
push
imul
pop
and
mov
mov
rorl
jno
cmp
dec
jecxz
pop
jne
and
fsubs
rep
mov
or
test
movsb
movsb
adc
mov
or
call
inc
push
xor
mov
push
push
ret
mov
and
inc
gs
das
mov
add
xchg
insb
mov
out
pushf
push
inc
xor
adc
add
mov
and
jmp
add
ja
cmp
add
or
lods
in
xchg
or
xchg
mov
cmp
xchg
dec
push
add
loop
adc
and
add
sub
call
pusha
and
xchg
lods
cmc
adc
jo
or
movsb
push
xchg
sti
mov
outsb
lret
jge
pop
add
jns
inc
fmulp
aad
es
test
scas
out
add
out
ds
inc
mov
adc
dec
or
data16
mov
xlat
jle
or
ja
cmp
int
in
lret
push
rorb
out
mov
popf
cmp
mov
or
jae
loopne
cmp
jae
rorl
daa
rcrl
stos
shlb
and
adc
push
inc
cwtl
xchg
pop
xchg
leave
add
cmp
pop
daa
mov
lahf
out
cmc
mov
mov
lods
adc
pop
sub
xor
inc
jmp
imul
jl
lods
fnstcw
dec
outsl
push
fadds
jae
ret
loopne
jae
push
cmp
cs
int3
imul
fs
sar
dec
inc
testl
cmp
push
sbb
dec
xor
push
lods
test
adc
adcl
addb
or
sub
dec
push
xchg
mov
jp
repz
sbb
mov
lock
mov
scas
xor
lcall
push
loopne
or
mov
adc
nop
or
adc
mov
push
movsl
das
repz
outsl
scas
mov
adc
cs
mov
push
or
out
mov
fbld
ja
push
cwtl
mov
pop
je
ds
out
pop
fstps
mov
sbb
repnz
push
cmpsl
mov
in
jb
xchg
adc
add
and
shl
into
adc
outsb
outsl
mov
cmp
adc
imul
add
jb
inc
sub
and
and
sbb
adc
lcall
and
subl
ret
cmpsl
les
shrb
movsb
data16
dec
sbb
sub
sbb
xor
insb
pop
repz
movsb
sub
daa
adc
jg
rcrl
jo
push
sub
and
cmp
inc
ss
jb
mov
out
int3
idivb
jb
inc
das
jb
pop
push
push
fs
imul
mov
data16
sbb
insb
das
std
outsl
movsb
fsubrl
imul
adc
loopne
cmpsb
test
xchg
push
push
pop
sahf
fs
mov
mov
add
pop
outsl
push
jl
scas
mov
sbb
gs
out
push
pop
adc
lds
popf
clc
add
pusha
xor
jne
or
dec
insl
xchg
pop
test
dec
jg
test
mov
sub
mov
dec
sbb
addr16
loope
push
adc
cmp
lods
int
dec
sbb
dec
push
adc
shr
mov
cmp
clc
sub
stos
in
negl
pop
sub
cmpsl
xchg
sbb
notb
std
pop
cmp
imul
and
push
xchg
add
pop
movb
adc
cli
enter
push
add
test
sbb
dec
fisubl
or
fldcw
add
stos
add
add
enter
cli
sbb
push
popf
inc
adc
mov
jae
in
cmpsb
nop
bound
arpl
jae
pop
in
jl
cltd
jl
cmp
out
addr16
mov
sbb
dec
adc
sbb
push
loop
in
das
iret
stos
cld
adc
xchg
cmpsb
lahf
out
cmc
das
rcrl
sbb
ret
xor
aaa
sub
or
lahf
imul
inc
pusha
movsl
test
jno
fiadds
mov
js
insb
inc
sbb
push
and
adc
inc
mov
mov
or
add
test
fbstp
mov
mov
ret
jne
fists
movsb
xchg
xchg
repnz
ror
loope
mov
daa
mov
lcall
call
rcrb
fwait
mov
sahf
fs
jecxz
add
sbb
xchg
je
rol
ljmp
mov
insb
cmp
or
push
pop
mov
rclb
js
loope
call
cmp
je
mov
pop
pop
xor
ficoml
fwait
lret
xor
push
sbb
hlt
cmp
add
jmp
push
test
into
jb
xchg
inc
inc
pop
or
xchg
int3
ja
inc
jbe
loop
lods
cmp
lahf
enter
subl
subl
mov
or
movsl
shrl
inc
imul
scas
es
dec
mov
loope
pop
loop
xchg
loopne
xchg
movsl
mov
push
pop
fsts
clc
xor
lret
pop
cmp
imul
sub
jno
fdivrp
movb
cmp
xor
ds
xchg
lea
sbb
cltd
xchg
loop
shlb
and
cmpsb
hlt
add
shll
in
in
cmpsb
nop
lret
lods
pop
aad
sbb
mov
push
jae
xor
inc
outsl
xchg
lcall
push
mov
add
ficoms
mov
fnstenv
jmp
cs
jle
sub
divb
jae
and
jg
xchg
mov
sub
cwtl
ds
or
mov
repz
lods
scas
mov
hlt
jg
insb
push
and
add
test
add
testb
bound
mov
adc
xor
testl
popa
daa
dec
incl
cwtl
data16
cmp
xlat
or
push
add
mov
jp
sbb
add
out
lods
pop
ja
leave
push
sub
dec
xchg
sub
aas
and
pop
jne
out
mov
cld
mov
les
out
mov
repz
sub
daa
jecxz
fstpl
lods
out
adc
adc
add
insb
fdivs
fisubrl
dec
in
rorb
fdivrp
movsl
inc
inc
test
repz
jl
inc
xchg
add
cmp
inc
out
and
cmp
testb
lods
adc
nop
loope
or
xlat
and
cmp
mov
sbb
sub
cs
pusha
sub
imul
mov
mov
jb
pop
sbb
fbld
cmp
insb
jne
and
in
xlat
pop
push
push
stos
dec
insl
aaa
lods
xchg
mov
or
mov
nop
push
mov
xor
dec
divl
pop
movsb
shrl
sbb
push
test
mov
xchg
inc
inc
lcall
ja
sbb
push
push
inc
xchg
cmp
addb
outsl
and
int
add
out
inc
dec
add
sub
stos
add
add
mov
aas
sbb
enter
fnstsw
or
mov
adc
mov
xchg
fsts
cld
hlt
test
lods
push
aaa
or
jno
fs
ret
jge
xchg
jb
ret
and
in
mov
mov
push
xchg
adc
inc
ja
cmp
push
bound
or
mov
fcompl
pop
es
xor
ja
leave
gs
imul
inc
movsb
sbb
jno
out
loopw
push
jecxz
pandn
iret
ret
int3
aaa
mov
aaa
dec
cwtl
push
cmp
fs
sub
xor
es
jmp
sbb
and
or
ja
dec
inc
sub
divb
jae
jbe
mov
addr16
es
xchg
lods
sbb
sub
push
data16
pusha
ja
or
xor
and
add
sysexit
cmpsb
add
int3
sub
or
sti
mov
pop
int3
mov
xorl
insl
test
or
test
or
xor
shll
jo
cmp
in
daa
xor
mov
shl
dec
je
adc
cld
enter
lods
lods
leave
or
push
add
fs
lret
inc
in
test
xchg
and
inc
ljmp
cmpsl
ljmp
pushf
das
cltd
ds
negb
leave
sahf
sbb
sub
mov
test
inc
pop
or
hlt
and
and
xchg
xor
push
pop
loop
arpl
aad
outsl
arpl
pop
mov
shll
sahf
into
repz
pop
push
cmpsl
mov
add
adcl
push
loope
push
imul
subl
add
pop
push
ljmp
popf
lahf
in
jno
aaa
test
jno
xchg
out
hlt
inc
mov
pusha
mov
andl
lea
icebp
dec
dec
out
cltd
push
shll
cli
push
and
sti
adc
sbb
ret
enter
aaa
clc
mov
mov
call
and
jne,pt
sarl
mov
fcomip
clc
mov
sbb
or
mov
sbb
sub
outsw
popf
rep
xor
call
add
inc
jbe
mov
stc
push
jne
sub
stos
icebp
lahf
lds
cmc
daa
mov
mov
bound
and
xor
ds
test
or
or
rcrb
push
push
mov
shlb
xchg
popf
sub
push
inc
sub
push
popf
cli
push
bound
cmp
ja
add
fldcw
push
nop
mov
cmp
sbb
insb
or
inc
cmp
inc
lret
fcompl
cltd
dec
jmp
pop
outsb
cli
fstl
mov
ja
jno
into
movsl
jl
pop
dec
les
decb
pop
mov
sahf
jmp
pop
cmp
repnz
or
xchg
dec
loopne
mov
ret
xchg
daa
jge
hlt
sub
cwtl
outsb
fcoms
inc
cmp
adc
sbb
sub
lds
out
and
jg
cmpsl
js
cmp
cld
sbb
lret
shlb
cltd
push
in
pop
inc
mov
and
mov
leave
in
into
add
cmc
hlt
pop
cltd
aaa
xlat
repnz
mov
push
enter
leave
or
add
or
add
push
inc
add
stos
add
add
dec
ss
sub
stos
lea
lret
ds
inc
mov
mov
les
mov
fistpll
frstor
xchg
or
ljmp
int
inc
int3
or
jb
or
push
xchg
xor
or
sub
jge
out
mov
and
popa
fucomi
push
fwait
or
cli
cmp
arpl
ljmp
jg
mov
clc
loopne
out
shlb
daa
and
mov
fdivr
mov
adc
stos
pop
pop
jns
imul
in
add
or
or
xor
mov
jp
mov
mov
dec
xor
jl
add
sbb
testl
xchg
sbb
dec
xchg
jle
adc
lret
add
ret
xchg
daa
pop
fbld
xor
loop
jns
jno
gs
std
push
into
sti
inc
das
cmp
push
adc
xchg
mov
pop
imul
jmp
push
adc
jae
push
ficompl
lods
inc
dec
hlt
and
cli
mov
les
xchg
stc
xchg
fisttps
push
pop
and
inc
xor
jne
mov
inc
rorb
sub
jecxz
push
loopne
ret
fists
arpl
movsb
pop
mov
xchg
je
jmp
push
and
push
loop
and
sbb
insb
lea
hlt
lds
das
mov
jg
es
ret
adc
push
lds
repnz
rclb
xor
mov
fbstp
add
into
aas
test
daa
jmp
cmp
and
jge
jmp
ds
sbb
push
xor
push
arpl
jne
sbb
mov
cmpb
loop
insl
in
pusha
xchg
and
lds
push
inc
inc
aam
pushf
jg
jmp
dec
aaa
dec
fisubrs
testl
pop
inc
jnp
xchg
je
dec
jmp
jecxz
out
repz
cmp
daa
aaa
mov
ret
lret
repnz
and
rcll
lods
jnp
ds
jbe
push
xchg
inc
pop
fidivrl
jg
jg
stos
xor
nop
sub
aam
mov
xchg
push
xor
lret
aas
and
bound
jl
movsb
idiv
outsl
std
push
mov
mov
movb
imul
fidivs
push
jae
loop
push
loope
or
and
inc
jmp
cmp
mov
dec
loop
dec
xor
or
or
pushf
inc
rcll
aaa
cmp
test
dec
in
mov
xlat
rorl
or
or
insb
sbb
shr
stc
pop
stos
ja
push
andb
ret
repz
sub
pop
cltd
jl
mov
and
xor
push
inc
sbb
out
iret
jb
mov
mov
xor
loope
pop
xchg
test
add
push
xor
outsb
shl
std
inc
fistpl
xchg
pushfw
mov
ljmp
out
push
and
sub
es
fwait
mov
jl
mov
push
pop
scas
int3
ror
inc
add
sbb
out
negb
xor
cmp
mov
jmp
add
cltd
ja
out
out
cltd
ja
daa
xor
imul
add
out
push
cmp
jb
mov
jecxz
aas
or
dec
and
jbe
and
nop
jb
cmp
cmp
jb
loop
leave
jg
lahf
test
adc
cmpsl
push
xchg
dec
pusha
mov
sub
fistps
icebp
mov
iret
outsb
lock
jecxz
pusha
mov
outsb
add
fwait
loop
inc
addl
adc
bound
pushf
xchg
ds
adc
lods
dec
jp
inc
pop
leave
push
cld
xor
dec
aam
test
lods
mov
push
out
mov
pop
int3
jae
cmc
cltd
repz
adc
mov
in
xchg
loop
push
adc
push
push
iret
cmp
mov
xchg
mov
rorl
rclb
jne
ret
jno
mov
in
pop
fistps
jmp
stos
loop
lahf
in
adc
jnp
sbbl
push
pop
inc
mov
sbb
sub
int3
clc
pusha
out
xlat
and
icebp
cs
mov
sbb
cli
aad
lods
setno
icebp
sbbb
cmp
pop
or
pop
pop
mov
fcompl
test
push
adc
sub
sbb
xchg
and
mov
icebp
xchg
andb
or
pop
fs
cmp
call
test
outsb
add
adc
cmc
sbb
decb
xchg
movsl
inc
inc
popa
push
pop
in
popa
jle
push
adc
sub
xor
lea
fcomp
in
xchg
mov
xchg
pop
insb
out
add
insl
mov
int
add
ret
cwtl
enter
mov
sarb
xchg
add
push
xchg
adc
pop
and
mov
subb
sti
cmp
in
xchg
cmc
adc
fs
or
push
pop
jge
pop
or
pop
lea
ds
les
add
push
cmovle
xchg
xlat
lcall
in
orl
in
sub
stc
jbe
adc
or
jecxz
lds
out
jbe
in
test
dec
mov
rclb
inc
loope
das
cmp
les
sbb
cmc
sti
push
and
lahf
adc
pop
push
inc
icebp
movsb
add
or
sbb
sub
gs
cmc
dec
xchg
sub
mov
jns
stos
pop
repz
pop
out
or
mov
xor
sbb
push
mov
neg
nop
pop
imulb
mov
fidivrs
lret
test
loopne
mov
add
or
cmpsb
sahf
push
sbb
mov
xor
pop
les
ret
pop
pop
mov
sub
mov
loope
ret
inc
cli
stc
scas
arpl
sbb
or
sbb
dec
imul
repnz
inc
dec
xchg
outsb
fcoms
outsl
movsb
mov
inc
push
call
push
repnz
mov
repnz
sar
icebp
das
inc
int
push
and
lds
lods
mov
iret
loope
in
sub
mov
jg
dec
jecxz
insb
arpl
shlb
lahf
and
cmp
subl
mov
sarl
dec
int3
lcall
lcall
xchg
mov
jp
push
cmp
ret
in
scas
sub
aaa
pop
pop
add
scas
stos
cmp
mov
jle
std
jp
cmpsl
out
shlb
inc
pop
add
iret
lahf
push
loop
aad
into
push
mov
add
repnz
lea
inc
lock
or
ds
gs
iret
push
and
adc
adc
daa
lahf
add
push
out
repnz
leave
dec
in
jbe
rorl
inc
sbb
adc
gs
cmpsb
inc
cmp
adc
mov
add
loop,pn
into
xor
arpl
mov
mov
add
in
int
sbb
movsb
pop
les
jl
lods
mov
mov
les
xor
jp
pop
xlat
dec
cmp
stos
xchg
pop
cwtl
jnp
add
popf
dec
in
jne
popf
and
cld
in
sbb
add
ljmp
aad
fstpt
fucom
lahf
rclb
stos
jmp
mov
push
ljmp
out
or
mov
jmp
out
cmpsl
pushf
sbb
enter
add
cmc
push
sub
data16
xchg
pop
inc
sbb
mov
xchg
lods
cmc
cmpsl
movsb
sbb
sub
adc
pop
aaa
sbb
cmp
stc
arpl
dec
ljmp
jo
cmc
push
mov
daa
jp
push
leave
and
mov
aaa
and
jl
stos
pop
sub
ret
pusha
adc
or
outsl
xchg
fadds
push
repnz
int
cmp
mov
pop
shll
and
out
shrb
adc
add
push
mov
mov
mov
daa
movsb
imul
mov
in
or
sub
cmc
push
aas
leave
sub
adc
addr16
enter
add
bnd
add
imul
xchg
xor
stos
jb
fcmovb
inc
es
idiv
push
aaa
cmp
xchg
pop
ds
imul
aas
pop
xor
inc
inc
xchg
push
mov
mov
in
add
call
xchg
xchg
push
icebp
imul
push
jne
cld
mov
nop
and
nop
cwtl
mov
and
add
cli
insb
sbb
mov
sbb
xor
or
jno
mov
sbb
repnz
test
lods
js
xor
pop
test
jmp
stos
sbb
nop
scas
in
pop
mov
cmpsl
pop
or
jmp
cs
cld
out
fcomip
ffreep
std
sub
mov
adc
hlt
je
pop
int3
sub
push
nop
pop
xor
paddusw
mov
ret
int
dec
aam
dec
aaa
arpl
divb
ficoms
sbb
stos
je
scas
mov
popa
mov
mov
push
pop
rclb
nop
lods
inc
jae
sti
lods
jae
fs
gs
xor
jns
mov
xchg
lods
das
mov
add
push
sbb
aaa
mov
inc
test
cmp
jo
or
cmp
cmp
data16
xor
leave
stos
ret
daa
mov
jnp
mov
or
inc
jmp
into
lea
rcrb
and
xor
das
js
xchg
pop
sbb
mov
mov
adc
sub
sbb
jnp
sub
jmp
dec
fsubrs
add
insl
cmp
pop
mov
mov
sbb
sbb
repnz
insb
or
adc
js
rcrl
xlat
pop
push
xchg
add
mov
fwait
roll
dec
and
jle
sub
lcall
jg
push
jecxz
jmp
jnp
mov
add
add
jle
call
pop
mov
rolb
inc
sub
adc
xchg
sarl
cs
int3
mov
fwait
xchg
pushf
add
ret
ja
add
pop
gs
xchg
cmp
xchg
adc
add
mov
or
mov
leave
repnz
testb
inc
loopne
fucomp
mov
adc
jne
je
addr16
fdiv
or
mov
rcrl
dec
ja
int
jns
fstl
rorl
cld
dec
fstl
xchg
pop
mov
pop
push
negb
mov
xchg
cmp
fistl
jo
mov
jno
cld
scas
cwtl
or
add
push
mov
iret
pop
inc
ret
dec
inc
repz
mov
cmp
nop
push
and
stos
out
jmp
mov
rolb
lods
xchg
add
jo
fsts
test
xlat
and
mov
int3
push
jnp
mov
mov
or
test
jmp
jge
aad
loop
fldcw
or
fsubrl
cwtl
lods
dec
rol
bound
cmp
pusha
sbb
pop
lea
dec
nop
mov
xor
outsl
js
mov
pusha
ja
mov
mov
cli
aam
add
imul
jae
in
xor
sarl
mov
pop
inc
xlat
adc
and
rcrb
mov
pop
scas
fistps
xor
mov
rorl
lods
pop
pop
stos
ja
pushf
or
lods
and
jb
vmovhps
fadds
mov
shl
pop
mov
add
sbb
mov
fxam
push
xchg
jl
mov
leave
in
xchg
imul
dec
mov
mov
cmp
jbe
sti
fs
mov
xchg
aaa
std
test
aad
mov
fcompl
mov
fsubl
push
adc
pop
fwait
dec
xchg
adc
pop
sub
lea
push
dec
mov
jecxz
mov
push
dec
es
sti
push
cmp
or
stos
push
pop
out
aad
cwtl
xchg
popf
sbb
pusha
add
pop
out
pop
and
lret
imul
ret
mov
sti
jecxz
xchg
inc
mov
pop
aam
pushf
stc
int3
ljmp
imul
or
ficoml
test
shrl
outsb
mov
mul
dec
mov
mov
xor
cmp
bound
jle
push
pop
ss
mov
xor
and
adc
xchg
sbb
out
rclb
fcomps
push
data16
sub
iret
scas
in
sahf
in
fwait
add
add
mov
sub
pop
dec
fcomps
jns
clc
inc
aad
incb
add
xchg
push
or
loop
push
push
arpl
data16
outsl
sub
cmp
cmp
loope
sbb
jbe
repz
subl
mov
pop
mov
je
aam
pop
popf
xchg
out
mov
sub
test
add
popf
inc
into
sbb
and
add
mov
sub
mov
test
rolb
icebp
xor
pop
add
ret
aad
rcr
jle
mov
push
sbb
fs
into
and
push
sub
ss
jne
sarb
movsb
lds
add
add
xlat
dec
call
adc
push
in
push
add
stos
add
add
stc
mov
fwait
pop
mov
push
xchg
pop
mov
xor
lahf
push
fstp
xchg
push
and
push
daa
cmovs
push
sub
fisubs
pop
inc
mov
mov
mov
and
mov
adc
push
lret
fildl
mov
gs
adc
xchg
jb
sahf
sti
add
mov
and
lcall
inc
out
test
pop
and
cmpsl
out
in
aaa
dec
std
fdivs
or
mov
insb
shlb
loop
pop
ds
or
lret
ja
icebp
dec
or
jg
fidivrl
cld
ljmp
ja
fdivs
lds
mov
lcall
cltd
jle
or
pop
cmc
push
jge
xchg
and
lock
imul
bound
js
fsubr
mov
shrl
or
mov
pop
in
pop
jno
in
mov
icebp
in
cltd
popf
push
pop
and
cld
or
insb
inc
mov
inc
repz
xchg
jbe
loopne
mov
arpl
jecxz
mov
int
cmp
mov
xchg
mov
mov
pop
imulb
call
dec
pop
sub
jno
stc
and
add
test
cmp
cli
mov
ss
pop
rcrl
movsb
mov
jmp
ljmp
sub
cmp
lock
shlb
pop
xchg
and
js
inc
jbe
movsl
stos
mov
ljmp
mov
inc
das
or
sub
inc
in
mov
push
lea
or
jne
mov
or
xor
mov
push
test
sbb
test
cmp
and
and
mov
jl
aaa
mov
jmp
insl
mov
sahf
ret
xorb
mov
and
sti
les
scas
sub
mov
cmc
mov
push
cmpsb
movsl
rcll
sbb
js
mov
or
dec
lods
nop
mov
scas
mov
jb
fisttpl
adc
lcall
cmp
fldl
clc
out
mov
xchg
fdivl
orb
push
dec
inc
inc
mov
xor
adc
jnp
dec
loope
aaa
flds
jmp
sbb
cltd
test
fld
in
js
sbb
and
mov
popf
sub
and
lods
jle
xchg
xor
outsl
dec
addr16
lahf
sti
into
cld
fwait
xchg
mov
pop
xchg
sbb
mov
orl
pop
fsubs
xchg
sbb
push
push
jmp
ds
jmp
lret
in
mov
xchg
scas
movsl
cltd
gs
into
sahf
jmp
mov
cmp
push
or
push
daa
push
mov
xchg
and
push
mov
sub
fsubl
xlat
loopne
daa
pop
sub
push
mov
rcr
mov
cmp
add
test
sub
cmc
mov
mov
mov
jle
jns
or
mov
and
sub
ds
fisubrs
fnsave
xor
inc
xchg
mov
jae
call
push
loop
idivl
in
xchg
pop
cmc
andl
gs
outsl
adc
jae
fstpt
out
movsl
out
test
ds
add
jnp
mov
cmp
fsts
add
add
push
cmp
jbe
pop
aad
push
push
ljmp
lods
and
std
push
outsl
or
lea
mov
es
cmpsb
mov
dec
push
mov
lock
sbb
leave
aas
or
xchg
add
int3
movb
mov
jge
mov
mov
nopl
ret
ret
pop
arpl
outsl
idiv
mov
sub
inc
je
repnz
insl
repz
int3
subb
nop
movsl
popl
lods
out
leave
xchg
xchg
pop
stos
fcmove
jp
pop
pop
fsubl
shl
dec
mov
test
xor
adc
movw
pop
inc
outsb
nop
sub
fsubrs
imul
mov
pop
ret
add
in
push
cmp
mov
inc
inc
jns
inc
xor
scas
enter
sub
cltd
cmp
cmc
lods
addb
out
pop
or
and
xchg
xlat
inc
cmp
mov
sbb
mov
scas
das
fwait
gs
jae
pop
in
aaa
sti
xchg
dec
pop
push
xchg
xor
dec
loop
cmp
xlat
adc
jmp
xchg
push
push
mov
shll
pushf
test
inc
dec
mov
add
pop
cwtl
push
jae
aam
in
pop
jae
push
dec
add
sub
add
jp
in
out
int
rcll
or
imul
nop
in
inc
mov
cmp
incl
cmp
or
aad
adc
mov
cmpsb
jecxz
mov
mov
jmp
movsl
popf
dec
lea
cli
test
loope
test
out
mov
cmp
jmp
or
pop
loopne
push
jbe
icebp
or
cli
jmp
add
lods
aas
leave
sti
jb
or
ja
sub
cmp
add
or
dec
jns
add
mov
cmp
in
mul
pop
ss
fnstsw
cmpsb
xchg
mov
add
jge
popf
ret
xchg
jmp
mov
test
daa
stos
outsl
xor
push
fldcw
ret
call
pop
mov
push
test
stc
inc
sbb
icebp
jns
addr16
punpckhwd
mov
jg
jl
inc
sahf
inc
xlat
shrb
push
sbb
jg
cmp
repz
rcr
into
sti
fs
test
mov
mov
cmp
or
aas
fucomi
push
jmp
mov
jle
insb
loopne
test
dec
pop
lcall
je
aad
mov
fstps
xchg
iret
sbbl
icebp
stos
lea
lock
xor
sub
ljmp
xor
add
roll
setne
mov
nop
sub
in
jnp
inc
mov
jno
adc
mov
test
inc
std
mov
push
in
jl
call
imul
call
movsl
jbe
cs
aaa
outsb
fcmovu
push
cmc
inc
test
mov
pop
stos
dec
jae
add
bound
and
fidivl
mov
xchg
aaa
xchg
ret
sti
sarl
mov
sbb
ss
or
cltd
notb
test
and
or
and
push
jge
mov
jae
fildll
sub
lcall
adc
jg
jns
pop
addb
add
test
mov
loope
fbstp
mov
and
ret
xchg
dec
lea
xchg
popa
leave
cld
lcall
xchg
push
frstor
pop
cmp
jmp
ss
ja
pop
dec
pop
add
pop
int3
cmpsl
out
mov
cmp
sbb
pop
xor
xor
shll
loopne
or
decl
test
mov
lahf
into
das
pop
movsl
popf
out
bound
mov
pop
cli
cmpb
adc
cltd
adc
inc
mov
mov
pop
aas
enter
enter
les
fwait
mov
scas
ret
jg
push
dec
pop
dec
mov
in
ja
mov
insb
jno
dec
int3
scas
xchg
xor
xchg
dec
and
sub
jne
lret
out
pop
mov
jns
push
xchg
jo
xor
fmuls
jo
mov
int3
mov
pop
xor
push
pop
adc
rcrl
mov
out
jns
mov
loop
lock
pop
push
lea
add
sub
jb
idivl
rclb
call
icebp
ret
mov
hlt
sbbl
jbe
mov
mov
and
adc
cmp
xchg
ja
jl
dec
imul
inc
stos
and
pop
shll
adc
cmp
fwait
std
pop
ds
sbb
mov
outsb
xchg
ret
test
xor
mov
and
gs
fimuls
xor
test
shlb
mov
and
sub
mov
pusha
mov
sarb
loopne
and
leave
xor
adc
cli
js
jnp
sbb
mov
rcrb
push
or
movsl
outsl
jmp
shll
inc
imul
xlat
gs
rcr
pop
cmp
jmp
fwait
sbb
mov
mulb
or
loop
rcrl
repz
popa
mov
scas
and
in
pop
rorb
inc
ds
inc
pop
dec
push
outsl
sbb
stos
fisubs
loop
mov
add
mov
and
mov
or
adc
dec
push
lds
jnp
movsl
inc
inc
sbb
sti
imul
inc
add
sbb
movsb
jns
sbb
hlt
jmp
out
stos
jo
cmp
lea
pop
cld
xor
arpl
aam
cwtl
out
push
lret
je
cmpsl
icebp
xchg
or
adc
das
and
mov
dec
push
mov
jle
pop
cmp
insl
rorl
xor
and
cwtl
sbb
inc
mov
shr
mov
jl
xchg
loopne
ljmp
imul
int3
ja
jmp
neg
or
unpckhps
ja
mov
inc
jle
push
fildll
call
cmp
xchg
xchg
adc
mov
into
xchg
dec
jg
push
ljmp
in
test
inc
ja
sbb
push
pop
xlat
sar
jno
inc
sbb
dec
jecxz
scas
arpl
and
sti
sbb
mov
push
test
sbb
adc
push
xor
stos
into
negb
push
lds
sub
testl
outsb
idivl
notl
pop
dec
mov
add
sti
jle
dec
or
dec
and
in
popa
xchg
lcall
push
jp
or
pop
mov
int
icebp
outsl
xchg
and
je
icebp
cli
mov
sarb
xchg
or
jge
pop
das
adc
js
cwtl
jae
adc
xor
adc
cs
jmp
fwait
enter
sarb
xchg
sub
inc
mov
adc
sbb
sub
leave
ljmp
or
jae
lcall
movsl
mov
mov
in
rclb
out
xchg
jg
das
lods
outsb
iret
inc
jecxz
stc
jl
inc
pop
jge
inc
icebp
sbb
adc
out
adc
jge
inc
adc
daa
jo
add
imul
add
mov
shll
sub
cmp
fs
or
mov
sahf
fwait
lea
cmpsl
pop
call
mov
lods
cmp
stos
jp
pop
sarb
push
mov
neg
stos
out
sbbl
adc
imul
jbe
mov
std
pop
xlat
and
sbbl
mov
and
daa
push
cmp
pop
pop
cmp
mov
adc
sbb
xor
xchg
ljmp
leave
ds
cmp
sub
push
cmpsb
mov
clc
outsb
xor
jg
stos
dec
mov
xchg
jp
les
and
sub
mov
in
aad
jns
jns
sbb
jnp
jb
lcallw
adc
pop
enter
inc
pop
inc
adc
or
and
cmpsl
outsl
mov
stos
push
cmp
scas
and
push
xor
mov
add
inc
push
fcoml
xchg
cmp
jl
int
sbb
js
aaa
cmpsl
mov
aad
xor
sub
hlt
xorb
cmp
inc
mov
add
sub
ds
insb
xorl
nop
insl
mov
or
imul
push
in
int3
rcll
data16
aam
push
xor
sbbb
popa
sub
jle
or
cmp
clc
dec
xchg
mov
sbbb
cli
sub
and
inc
and
xor
mov
cwtl
xchg
sub
sbb
lret
xor
je
cld
sbbl
sub
sbb
bound
scas
loopne
js
xor
mov
hlt
xchg
mov
mov
lret
outsb
jae
or
cld
cli
push
mov
ljmp
mov
jns
lahf
leave
mov
pop
out
xchg
dec
cmp
hlt
and
cltd
cmp
mov
jno
stos
cmp
ret
xchg
lret
and
xor
inc
iret
popa
aaa
add
xchg
and
dec
xor
stos
mov
hlt
mov
cs
and
push
nop
mov
mov
and
pop
loopne
loope
js
jb
pop
outsb
into
aad
cld
aad
sub
jbe
mov
sti
push
or
mov
push
dec
push
cmpsb
push
mov
sbb
repnz
into
or
pop
xchg
inc
out
fldenv
mov
dec
xor
adc
adcb
fmulp
push
add
push
cltd
and
adc
inc
pop
fadds
push
lahf
cmp
sub
sti
lods
or
jmp
nop
push
bound
add
xor
add
push
xlat
jle
push
mov
mov
mov
arpl
bound
jo
mov
and
sbb
hlt
push
cli
out
dec
loopne
jecxz
sub
stc
jmp
xchg
cmpb
xor
cli
xor
or
sarb
xlat
jecxz
xchg
sbb
out
push
inc
dec
pop
arpl
sub
imul
cmp
sbb
jmp
outsl
sbbl
xor
mov
mov
cld
xor
and
cld
sbb
popf
stos
inc
lods
and
mov
popa
roll
mov
xchg
vpacksswb
fwait
sbb
xchg
icebp
pop
jecxz
mov
repz
out
pop
jl
add
push
pusha
out
mov
xchg
addr16
test
mov
stc
sub
stos
xchg
xorb
gs
sbb
sbb
lock
inc
mov
jno
jmp
mov
add
lds
mov
data16
cmp
out
or
pop
jbe
and
pop
jmp
sahf
push
jl
stos
mov
movsw
aad
fdivrl
lock
popa
mov
pushf
mov
add
out
pushf
pop
jne
push
dec
sbbb
pop
stc
pop
mov
sbb
and
stos
mov
out
mov
bound
inc
inc
or
add
dec
or
imul
pop
xor
sti
lods
dec
fbstp
mov
mov
sub
adc
pusha
fdivp
jecxz
dec
lea
sbb
jle
sub
mov
sarb
or
shrl
adc
fcmovnu
daa
adc
pop
nop
adc
ret
pop
idivl
xchg
jmp
and
adc
mov
push
mov
clc
lock
add
hlt
cwtl
jno
in
out
push
adc
lods
out
inc
mov
lcall
xlat
xor
mul
js
push
mov
pop
mov
fwait
loopne
sbb
xor
jne
dec
sbb
xchg
gs
xchg
in
inc
lcall
mov
cmpl
fsubrs
ret
and
push
mulb
sbb
test
cwtl
andb
and
scas
xchg
push
jae
loopne
cmp
sub
push
pop
in
push
lret
cmp
clc
pop
and
mov
jl
xchg
outsl
in
cmpsb
pop
push
mull
iret
adc
cmc
or
sub
movsb
repz
mov
mov
rorl
adc
fimull
test
std
xor
mov
and
sar
inc
out
ret
fidivl
arpl
out
imul
hlt
in
push
lea
movsb
cs
mov
ja
or
es
push
lds
rorb
stos
test
xor
add
adc
or
inc
das
jnp
insb
jle
adc
lods
lock
pusha
das
repz
cli
cmpsl
stos
adc
je
mov
mov
dec
cmp
ja
dec
push
inc
in
and
popf
mov
mov
mov
insl
fdivrp
std
int3
roll
pop
icebp
cmp
xor
loop
icebp
push
lods
push
imul
lock
rcll
cmp
add
add
in
push
cld
cs
repnz
add
xor
fwait
or
shll
stos
add
add
test
jge
cs
and
sti
popa
stos
jl
lds
in
jmp
lods
or
arpl
cmp
test
push
push
xlat
adc
sub
cmp
adc
xchg
cmpb
cltd
jp
pop
fadds
lods
popa
iret
pop
inc
pop
sub
sbb
xchg
lock
lods
lea
cmpl
push
in
fnsave
repz
push
push
ret
add
add
jecxz
push
or
mov
enter
dec
and
ljmp
inc
test
sbb
dec
cmp
push
jb
xlat
push
pop
loopne
out
sbb
cmp
cmp
fisubs
pop
mov
stos
fdivl
jg
or
lret
je
dec
das
xchg
mov
push
ljmp
add
or
cmp
pop
decb
mov
sti
int
loop
ss
cmp
stc
lcall
fidivl
movsb
xchg
xor
sahf
shr
dec
in
inc
xor
inc
adc
mov
hlt
and
mov
and
cltd
nop
mov
into
int
je
push
in
adc
xchg
xor
aaa
mov
pop
cmpsb
and
fiadds
xchg
arpl
or
inc
xor
and
js
movsb
push
xor
adcb
jbe
loop
inc
mov
cmp
inc
xchg
iret
mov
sbb
outsb
cmp
imul
mov
cltd
inc
cld
movsb
jo
sub
sub
mov
int3
mov
jb
rclb
stos
leave
sarl
jns
push
rclb
mov
cwtl
shlb
mov
mov
pusha
xchg
sbb
add
cmp
mov
inc
pop
cmp
or
add
xchg
mov
push
or
sub
clc
addr16
pop
fisttpll
out
adc
jae
in
fldl2e
inc
lds
mov
pop
rol
pop
loopne
outsl
in
inc
mov
cltd
shl
lds
dec
cli
push
and
push
xchg
leave
mov
push
jl,pt
xor
and
lds
cmp
loope
inc
mov
adc
fcomp
fldt
mov
sbb
fimull
clc
mov
cli
cltd
stc
push
cltd
mov
pop
mov
and
jne
stos
add
lahf
std
stc
cld
inc
xor
out
inc
sbb
mov
cmp
dec
sub
jnp
lods
jp
adc
cmp
inc
mov
outsl
or
fisttps
dec
sub
nop
lret
mov
movzwl
popa
pop
pop
clc
adcl
loope
mov
insb
mov
sub
fidivrl
mov
cltd
adc
cli
xchg
sbb
mov
stos
cltd
popa
jge
lods
sbb
sub
jp
shlb
fstl
push
sub
je
test
sub
cmpsl
frstor
jecxz
pop
shlb
jno
aaa
daa
cmp
rorl
add
xchg
push
pop
aaa
in
fisttpl
iret
imulb
push
push
inc
mov
cmp
movsb
subb
cld
add
loop
filds
fbstp
pop
repz
inc
ret
jno
lods
sahf
repnz
cmp
push
and
jmp
pop
or
inc
mov
sub
dec
cmpsb
adc
jns
lretw
and
outsb
jnp,pn
mov
mov
add
mov
aad
push
stos
add
add
repz
in
aas
sbb
inc
mov
jo
or
push
jle
jae
stos
jg
std
clc
inc
out
int
sbb
inc
jb
sbbb
inc
push
es
cmp
pop
hlt
cmpsl
pop
outsl
loop
mov
stos
and
pop
adc
push
mov
clc
jmp
in
inc
imul
test
cmpsl
int3
repz
bound
pop
cmp
inc
xor
dec
jbe
test
mov
xchg
aas
cmpsl
jb
ss
mov
sub
sub
loop
sub
scas
xor
pop
repnz
mov
xor
in
jo
sbb
ss
dec
flds
jns,pt
adc
jne
push
addl
cltd
mov
cmpsb
enter
js
push
nop
and
mov
fcmovnu
or
add
stc
or
inc
adc
pop
les
imul
cli
sti
pop
and
xchg
and
or
aaa
dec
cli
jp
lea
mov
addl
icebp
mov
stc
int3
dec
in
test
push
cmp
lret
push
add
xlat
pop
pop
scas
lds
lock
nop
and
or
lods
or
ds
roll
jne
xor
aas
push
push
lcall
in
jns
or
inc
stc
loope
in
and
jnp
mov
fnsave
pop
mov
and
loopne
sbb
aaa
in
inc
or
stc
stos
inc
flds
add
sti
or
cmp
enter
je
mov
sbb
xchg
out
jle
dec
rcl
push
jg
fidivrl
cmpsl
sbb
adc
lcall
dec
lret
push
imul
movsl
out
ss
popf
leave
xchg
jecxz
xchg
movb
inc
mov
lret
and
pusha
inc
bnd
out
std
mov
fsts
cmp
xchg
or
or
push
dec
pop
adc
mov
out
sbb
push
push
mov
bound
cmc
adcb
mov
orl
mov
pop
mov
inc
icebp
cmp
or
mov
rcrl
inc
loopne
jo
jle
sti
fldt
lods
into
test
jae
jle
es
in
std
mov
pop
add
push
push
xor
xor
rolb
cmp
fsubl
push
sti
loop
test
sbb
loop
push
test
gs
mov
sbb
loope
dec
xchg
leave
outsl
hlt
pop
aas
sbb
xchg
cmp
fisubs
jle
lahf
add
jmp
divb
aam
sub
xchg
jle
nop
insb
int
jle
push
pop
dec
mov
lock
ds
and
not
cmpsb
aam
dec
inc
leave
jo
mov
jmp
lret
push
dec
iret
sbb
xchg
movsb
push
inc
je
fbld
mov
sbb
sahf
xchg
jb
dec
ficoms
or
mov
jb
mov
stos
insl
pusha
mov
sahf
rclb
push
jmp
and
inc
mov
and
ret
test
or
lods
adc
call
mov
ja
inc
jbe
or
pop
mov
movl
add
insb
xor
mov
scas
iret
mov
hlt
aaa
stos
cmc
js
jmp
les
cltd
adc
fisttpll
int
cld
cmovb
inc
cli
nop
fcoms
out
scas
and
push
into
testl
add
ret
repz
fcmovnb
pop
sbb
adc
add
stos
add
add
imul
sbb
mov
jae
mov
repnz
or
ja
fidivl
into
sbb
and
dec
dec
scas
cmc
mov
jnp
and
imul
imul
pop
mov
fstpt
push
push
loop
in
loopne
fisttpll
int3
dec
cmp
je
int3
imul
sbb
repz
jbe
cmp
inc
dec
scas
lahf
in
inc
mov
stc
cmp
or
in
jg
ds
pusha
and
inc
cmp
clc
sbb
or
inc
or
xchg
mov
lcall
mov
adc
push
xchg
daa
jne
adc
fidivrs
push
add
out
cmp
pop
add
scas
les
mov
fucomip
test
addb
daa
and
cmp
lea
test
push
jae
and
loope
and
mov
jmp
insl
push
lds
lahf
popa
cmc
in
mov
pusha
fs
enter
xor
gs
push
xchg
aad
pop
test
mov
dec
jp
jge
mov
iret
ret
bound
nop
lcall
imul
xor
aam
mov
xor
movsl
mov
and
leave
sub
push
dec
movsl
inc
sub
or
ds
add
mov
mov
mov
inc
and
aaa
mov
ffreep
lods
push
xor
in
fwait
inc
cmpsb
cmp
push
xor
xchg
lods
inc
loop
push
jp
lahf
lahf
push
rcrl
int3
lock
loop
ljmp
fisubl
dec
mov
movsb
dec
pop
inc
cwtl
mov
fdivp
jl
sbb
cld
pop
testb
mov
fwait
icebp
push
xchg
sti
sahf
repz
inc
pop
dec
dec
jne
jbe
cltd
pop
pop
push
stc
push
jno
xchg
add
sub
ja
push
cld
test
lods
mov
shll
data16
and
fs
lds
sti
mov
mov
jmp
pop
je
les
pop
fdiv
lret
jo
push
std
sbb
fcmovbe
imul
inc
mov
mov
cmp
ret
out
stos
lods
out
das
mov
lret
stos
repz
test
lret
jae
add
push
ret
insl
insb
cltd
mov
fsubrs
movsb
fsubrl
clc
fistl
push
and
cmc
shrl
icebp
ds
cmp
sub
cmp
fbstp
or
shl
bound
dec
push
xchg
xchg
sbb
test
mov
xor
pop
dec
pop
pushf
imul
mov
adc
push
test
xor
rorb
mov
mov
mov
dec
jmp
int
enter
fisubrs
adc
js
addr16
test
and
hlt
add
inc
cltd
imul
loop
push
dec
cmp
jmp
cmp
scas
sub
jnp
pushf
aaa
and
test
or
js
jle
scas
fcoml
xor
push
inc
out
push
adc
lahf
jno
test
in
adc
inc
add
out
icebp
push
roll
sub
jno
imul
jb
xor
dec
add
mov
xchg
mov
add
and
gs
daa
sti
mov
push
mov
call
add
mov
inc
jbe
push
sti
rcrl
rdmsr
insb
jge
stc
jle
pop
pushf
push
mov
inc
repnz
decl
call
and
imul
dec
jo
mov
or
cld
dec
int
push
jge
stos
sbb
outsl
xor
mov
out
mov
cmp
sbb
lods
fwait
addb
push
lock
jbe
mov
fmulp
mov
mov
and
lahf
mov
sub
stos
sub
insb
add
xchg
sub
mov
shl
fiadds
negb
add
pop
mov
adc
imul
repnz
cmp
mov
sbb
mov
outsl
call
cmpsl
dec
pop
aad
ljmp
inc
aam
sub
sbb
mov
dec
jae
sub
xchg
mov
gs
mov
imul
add
test
dec
outsl
andb
clc
jnp
fiadds
add
and
int
lret
ljmp
addr16
sarb
cmpsl
sbb
jns
sub
imul
insb
loop
add
lock
lods
icebp
mov
data16
mov
insb
sub
sub
dec
fcoml
cmp
jle
lahf
adc
xchg
mov
push
or
dec
xchg
jae
dec
xor
sbb
lret
ret
pop
adc
fldenv
mov
jmp
lods
gs
dec
sub
bound
jge
pushf
push
sbb
sub
push
icebp
xchg
ss
jl
cmp
iret
outsl
adc
adc
stc
subb
arpl
aad
setg
movsb
in
mov
es
mov
sub
lret
aam
sub
ja
ret
jno
into
jb
jmp
dec
sub
mov
lcall
pop
or
pop
ret
out
stos
pop
pop
mov
repz
divl
rcr
mov
jecxz
clc
dec
fwait
les
lds
testb
fsubs
push
jb
xlat
inc
jp
aam
sbb
xorl
cmpsl
sbb
insb
jp
ficomps
mov
rolb
divl
mov
xchg
out
sub
pop
sarb
push
mov
imul
jg
int
mov
cwtl
sub
push
push
jno
int3
cmp
mov
insl
jl
mov
fs
inc
std
out
push
test
push
rolb
mov
enter
repz
test
aas
sahf
or
mov
incb
std
insb
loopne
sub
fsincos
call
addb
shrb
jmp
shrb
jns
pop
pop
or
je
insl
bound
sbb
cmp
push
fimull
sbb
mov
test
xchg
sub
mov
incb
xchg
inc
icebp
sahf
fdivrl
insl
lods
dec
in
js
sub
test
cmp
call
cli
mov
das
rorb
sbb
arpl
mov
test
jns
jnp
test
pop
cli
hlt
sbb
ficoml
aaa
test
and
cli
hlt
and
sbb
repnz
arpl
jge
xchg
add
mov
inc
ficomps
lods
jl
xor
inc
icebp
in
clc
repnz
mov
mov
aas
sysexit
pop
push
or
movsb
insl
je
add
rcr
mov
sbb
vphaddudq
adc
jnp
mov
sub
and
iret
xchg
in
test
and
lock
push
sub
orl
icebp
inc
jno
push
rcrl
jg
insl
daa
movsb
push
pop
iret
jg
movsl
adc
pushf
cli
mov
stos
adc
add
test
inc
jne
add
leave
ficoms
mov
mov
push
in
xchg
mov
add
dec
mov
cmp
call
jg
or
pop
fidivl
and
jge
pop
sbb
push
loopne
das
cmp
xchg
enter
and
pop
jbe
pushf
fdivl
lret
or
sub
pop
fisttpll
sbb
cmpsl
es
pushl
mov
add
scas
adc
or
xor
jne
add
jecxz
lock
rcll
add
arpl
adc
imul
lods
in
xchg
test
loopne
paddq
pop
adc
mov
movsb
mov
imul
push
jo
clc
mov
or
dec
dec
dec
cmpsl
xor
int3
es
xchg
mov
dec
lea
mov
xchg
sub
sbb
xchg
fcompl
xor
cmpsb
push
jg
jecxz
imul
enter
iret
push
dec
mov
or
pop
aas
add
pop
cmp
dec
adc
lods
fbld
stc
fs
fneni(8087
imul
dec
inc
sub
movsb
mov
mov
pusha
mov
leave
incl
xchg
xchg
xor
push
adc
mov
int3
addr16
mov
push
mov
pop
push
movl
rcrb
mov
shlb
mov
mov
mov
fisttpl
test
insb
jnp
aas
pop
icebp
sub
stos
cmpsl
aad
adc
jmp
sbb
xor
hlt
push
ljmp
insl
fucomp
shll
mov
call
dec
jge
push
in
test
sub
cli
xchg
inc
dec
inc
fisubrl
xchg
jnp
cmp
lret
sub
gs
dec
dec
push
imul
loope
pop
sub
fs
cmpsl
ja
cmpsl
cmp
call
mov
sbb
insb
sub
out
call
add
int
in
pop
outsb
xor
loopne
outsl
int3
xor
cmp
dec
cli
jno
jecxz
dec
aad
movsb
mov
mov
addr16
rcrb
packsswb
addr16
enter
out
xor
xor
sahf
mov
jb
aaa
or
or
xchg
lcall
out
pop
fimuls
adc
xchg
imul
xor
sub
movsl
cmpsl
add
rorb
cwtl
or
leave
pushf
iret
int3
mov
divb
xchg
jae
jae
adc
cmc
inc
into
mov
pusha
mov
das
fsubl
cltd
inc
mov
sbb
scas
in
push
shrb
fldt
cmc
mov
ljmp
ss
mov
xor
cmp
xchg
xor
into
sub
sbb
popf
mov
mov
shrl
cmp
or
add
js
jg
and
in
test
pop
movsl
mov
mov
mov
test
add
repz
push
cmp
jecxz
jae
sbb
add
pop
pop
xor
mov
pop
mov
inc
rcl
sarl
lods
andb
lret
pop
outsb
jmp
add
addb
enter
adc
sbbb
cmp
jbe
dec
inc
btr
aas
mov
stos
repnz
mov
mov
sahf
shll
shl
mull
lods
inc
adc
in
mov
pushf
xchg
and
enter
lods
icebp
lret
xchg
xor
or
imul
mov
mov
cs
bound
pushf
sarb
adc
call
mov
stc
jbe
rcrl
jo
lret
js
or
leave
stos
mov
mov
jb
mov
push
out
mov
sbb
loopne
dec
inc
xchg
inc
pusha
in
rorb
lret
jg
and
xor
dec
scas
outsb
pop
jl
adc
inc
test
cmpl
popf
mov
fcmovnu
sbbl
fdivrl
lahf
add
mov
xchg
fucom
addr16
fdiv
imul
xchg
dec
insb
pop
jle
and
or
fsubrs
pop
movsl
lret
push
mov
xchg
je
mov
lods
inc
push
lcall
fdivrp
xchg
faddl
lock
xchg
mov
pop
test
and
daa
and
pop
std
rolb
stos
popa
inc
jmp
aam
xor
gs
inc
dec
stos
mov
loope
out
bound
out
movsb
ret
push
adc
notl
jecxz
xor
bnd
xchg
xor
inc
adc
mov
cmp
dec
add
inc
cld
imul
and
xor
cli
lcall
stos
dec
xchg
push
add
sarb
dec
and
push
les
lcall
sbb
fmul
rcll
mov
jno
sbb
adc
addr16
adc
pop
lahf
cmpb
push
hlt
mulb
mov
mov
add
adc
xor
jnp
or
push
mov
outsb
and
sbb
and
dec
mov
inc
xchg
jnp
fsts
dec
and
jo
mov
jo
ja
ss
aaa
jmp
xchg
xor
adc
bound
nop
sbb
dec
mov
inc
ss
ljmp
push
shrb
lds
lds
jno
clc
rcrl
sub
test
mov
je
in
cwtl
aam
enter
mov
push
jp
inc
lahf
sbb
mov
pop
mov
inc
inc
xchg
stos
repz
iret
ds
popf
xchg
push
int
sbb
bound
popa
mov
sbb
mov
into
add
stc
adc
mov
dec
fstpt
push
js
jge
jmp
sub
outsl
inc
inc
out
imul
pop
jne
cli
or
test
cmp
std
pop
sbb
lods
mov
mov
jmp
fnstenv
push
cmpsl
scas
cmpsb
sti
shlb
jle
mov
pushf
jno
repnz
mov
or
nop
push
aam
imul
imul
mov
dec
mov
mov
aaa
test
mov
filds
inc
adc
mov
iret
pusha
ja
outsb
adcb
dec
faddp
push
add
add
xchg
lcall
out
bnd
jnp
add
push
dec
fs
mov
arpl
icebp
inc
pop
iret
cmpsb
sub
or
icebp
leave
adc
or
lods
sub
es
add
fstpl
test
lea
mov
and
sahf
inc
push
mov
cmc
cmpsb
mov
jl
and
out
mov
lret
mov
jmp
or
push
and
int
test
jecxz
jle
mov
repz
push
call
insb
sbb
ds
and
xchg
pop
push
pop
add
or
fnstcw
or
mov
enter
rcrb
mov
pushl
sti
data16
push
fstpt
inc
dec
es
imulb
adc
test
rcrl
mov
test
inc
lods
mov
jb
cmp
xchg
lock
loope
lea
ret
mov
xchg
jp
ret
cmp
cmp
add
xlat
lods
sbb
es
and
outsb
cmp
inc
sub
push
xor
test
popa
dec
outsl
repz
jg
and
adc
cli
addr16
cltd
xchg
jl
into
cmpsb
stos
mov
cmp
les
lea
jp
arpl
xor
xor
out
jg
and
in
das
outsb
cmp
jle
aam
mov
inc
xchg
out
stos
lock
scas
or
sub
sbb
ds
jo
stos
sbb
or
cltd
sarl
addr16
xor
nop
out
or
cmp
xchg
jbe
lcall
inc
mov
fdivrl
enter
jae
inc
pop
imulb
adc
clc
adc
mov
mov
xadd
sub
loop
sub
mov
dec
fstpt
xchg
jbe
pop
dec
or
out
adc
cmp
cmp
dec
or
xchg
imul
ss
mov
push
mov
cmp
lods
pop
jno
jnp
sahf
jbe
enter
ret
mov
inc
xchg
adc
sbb
push
fnstcw
or
mov
iret
adc
repnz
shll
mov
shl
leave
gs
mov
fistpll
insb
testl
pop
shrb
movsb
cmp
jne
out
sbb
jo
fs
sbb
int
popa
push
mov
out
push
jns
loopne
mov
es
xchg
jmp
mov
mov
mov
clc
pop
add
adc
xchg
std
mov
adc
imull
mov
jg
adc
jl
dec
inc
push
pop
or
mov
lret
das
cmp
mov
xchg
lahf
das
hlt
in
inc
shll
pusha
leave
inc
ljmp
adc
gs
mov
je
pop
xlat
lret
sti
mov
out
mov
insl
ja
js
and
lods
psrlw
inc
aaa
mov
jbe
push
cmc
or
mov
mov
push
mov
dec
fisubl
jmp
mov
mov
repz
test
rcll
jae
jnp
addr16
mov
xor
add
scas
incl
out
xor
cltd
shrl
pop
mov
lds
movb
adc
sub
jge
mov
sub
fcomps
push
add
nop
mov
fildll
and
jp
and
jg
add
hlt
pop
std
jle
sahf
lcall
mov
es
call
xchg
cmp
ret
push
add
fsts
incb
pusha
mov
mov
imul
insb
mov
adc
es
scas
fadd
loop
popf
push
fmul
stos
test
mov
negb
fildl
xor
mov
popf
sub
addr16
mov
dec
xor
incl
cmp
push
insb
jge
jmp
enter
fldenv
mov
movsl
gs
ss
mov
outsl
int
aas
subb
stos
das
or
push
push
mov
fldenv
nop
dec
xchg
sub
lcall
or
shll
into
rcrb
jg
mov
lods
dec
popf
mov
test
and
and
popf
xchg
js
ret
mov
lods
add
dec
stos
lock
cwtl
scas
out
sub
out
cmpsl
xchg
inc
aam
dec
les
mov
jo
xor
loopne
sbb
mov
ljmp
mov
mov
lods
cmp
fucomip
shrl
repz
out
fisttpll
movd
xchg
ret
dec
and
mov
jo
mov
inc
push
push
lret
in
xor
scas
xchg
mov
inc
pushf
pop
aaa
add
jne
stos
jp
jl
lds
xor
push
xchg
adc
loopne
xchg
sar
sbb
fwait
in
cwtl
out
inc
stc
mov
lahf
sub
push
lret
repz
out
mov
mov
inc
jp
sub
js
and
pop
aas
pop
loope
jnp
pop
pop
mov
dec
icebp
xor
or
shrl
xor
inc
mov
and
mov
mov
call
pop
cmp
sub
and
std
rcrb
lahf
int3
ret
add
cmp
call
mov
dec
imul
fs
movsl
dec
jb
jbe
int
stc
xchg
jae
xorl
inc
cmp
jns
sbb
dec
adc
test
pop
repnz
dec
adc
xor
push
and
lock
subb
add
pop
mov
sub
inc
lret
sbb
outsl
mov
je
lret
inc
pop
push
and
cs
out
ds
imul
adcb
push
test
int
mov
sbb
xor
sbb
pop
inc
shll
lods
out
dec
mov
sar
adc
sub
pop
jno
repz
in
push
dec
push
lods
inc
das
call
sub
xor
imul
punpckhwd
pop
shr
jecxz
out
xor
xor
outsl
push
sahf
cmp
cli
addr16
mov
roll
pusha
xlat
imul
lds
cmc
push
fldenv
popw
out
push
shrl
int3
and
add
sarb
fiadds
pop
cmp
jo
sbb
push
jae
mov
add
lret
ret
addr16
lock
push
add
or
sub
out
sbb
xchg
je
dec
xor
xchg
scas
loope
and
movsb
xor
xor
sub
push
xorl
jae
or
fiaddl
daa
test
sti
add
add
add
cmp
pop
rcrb
addl
stos
add
add
js
jp
jl
mov
rep
clc
and
mov
sub
sbb
sti
add
out
sahf
fs
stc
mov
and
sbb
cmp
adc
iret
loop
stos
fcmovu
loopne
push
adcb
rorl
movsl
sub
imul
cmp
sub
filds
frstor
inc
push
adc
xor
cmc
jmp
push
sti
nop
int
and
lahf
pop
ss
dec
jmp
shll
jle
insl
lcall
repz
ja
pop
jg
imulb
stos
mov
fistl
push
dec
adc
dec
push
and
repnz
sub
or
sbb
adc
or
fwait
push
stos
push
dec
outsl
lods
lret
jp
pop
lahf
pop
jne
lods
arpl
imul
mov
jno
vcvtss2si
inc
mov
or
mov
or
jl
push
aas
cmpsb
out
andb
push
sbb
xor
ficomps
xchg
push
imul
dec
roll
adcb
out
xadd
mov
mov
jmp
mov
or
sbb
divb
xor
mov
pop
cmp
xchg
dec
mov
jle
adc
sbb
stos
mov
jp
lock
ret
rcl
ds
and
dec
ret
fdivs
inc
test
pop
mov
pop
or
aam
or
xchg
jp
cmp
fnstenv
lcall
cmp
inc
aam
iret
lock
jecxz
add
into
dec
and
and
icebp
out
lods
or
xchg
inc
test
jae
push
dec
xor
pop
ljmp
popf
mov
je
ja
and
mov
sbb
pop
mov
dec
aad
push
imul
mov
inc
adc
add
int3
lcall
bound
sbb
push
sbb
sub
push
cmc
add
ljmp
pop
scas
insl
cld
mov
stos
js
pop
dec
push
imulb
call
lds
mov
jl
into
aad
sbb
stos
xchg
inc
jb
ffree
ss
jmp
loopne
xorb
push
repnz
inc
popa
cmc
lahf
idivl
dec
fdivrs
stos
stos
mov
pop
mov
mov
add
sub
das
push
in
daa
sub
out
push
xchg
mov
call
gs
pop
and
cmp
push
lahf
test
inc
sbb
movsl
mov
pop
xchg
cmpsl
je
mov
mov
cltd
push
xchg
outsl
pusha
in
sub
fistps
insb
adc
push
mov
fs
or
es
pop
lods
sub
adc
aad
icebp
jbe
ror
mov
pop
mov
mov
stos
daa
inc
add
sahf
mov
mov
mov
xor
pop
dec
dec
add
jmp
dec
jg
sub
mov
les
and
sub
lock
jnp
xor
or
inc
filds
sbb
or
jle
outsb
mov
insb
movsl
lret
cmp
sub
es
mov
out
fldcw
daa
insl
fiaddl
int3
mov
push
pop
inc
cmc
rcll
stos
test
xor
pop
clc
jne
popl
es
cmpsb
mov
pop
sub
jp
xchg
add
aaa
rorb
leave
cld
push
mov
sub
jle
jle
cli
lcall
adc
jno
test
mov
rcrl
xchg
jl
scas
sbb
imul
inc
fstps
mov
dec
mov
mov
adc
dec
iret
pop
inc
mov
inc
xor
sub
xchg
lahf
jo
jbe
arpl
cmp
les
xchg
aas
mov
cmpsl
pop
daa
xor
cs
stos
shll
notb
cmp
lahf
orb
jae
adc
sbb
inc
pop
mov
movsb
mov
cmp
pop
gs
sahf
push
push
mov
sbb
test
add
test
mov
push
scas
je
test
jp
hlt
icebp
js
and
push
imul
mov
inc
and
out
mov
fadds
and
fstpt
jno
scas
je
out
jns
push
mov
lret
sub
lret
xchg
xchg
leave
mov
pop
outsl
int3
in
push
inc
jmp
cmp
xor
in
and
jl
mov
arpl
dec
popf
mov
or
ror
xchg
xlat
imul
xor
sbb
mov
cmpsb
pop
pop
add
mov
popa
push
insb
lcall
xchg
mov
adc
imul
adc
add
inc
imul
loop
xchg
loopne
in
nop
aad
jne
sbb
mov
fiadds
loop
jge
lcall
mov
or
mov
jle
sbbb
les
inc
stc
enter
pop
out
mov
lods
jbe
je
fsubrs
mov
dec
stos
or
inc
inc
mov
inc
or
shr
sbb
lea
leave
outsl
negb
pop
inc
jnp
cld
leave
mov
pop
dec
aaa
lods
test
sbb
stos
cwtl
xor
mov
add
lea
mov
jae
xchg
cmp
mov
cmp
popf
add
push
xchg
hlt
xchg
mov
cltd
repnz
loop
mov
sbb
xchg
mov
push
push
imul
pop
imul
ljmp
iret
scas
stc
mov
sub
popa
iret
inc
mov
mov
push
repz
jge
mov
in
xchg
ret
fldt
add
out
lret
fstpl
or
mov
sub
fnstcw
pop
jecxz
and
jl
xchg
loope
adc
fisubrl
mov
inc
adc
jo
lcall
xor
scas
jns
mov
outsb
push
ret
pop
dec
mov
adc
in
idivb
sbb
xchg
daa
pop
adc
jns
adc
sbb
fidivrl
adc
loop
xchg
arpl
fnsave
lret
sbb
and
mov
fcompl
cmp
icebp
jbe
xor
or
cmp
xor
jae
jmp
jbe
test
and
nop
das
cmc
in
dec
imul
notl
fs
fs
outsl
mov
das
iret
insb
lcall
dec
cmp
sub
nop
ret
jl
inc
jbe
out
test
pop
ds
jg
aad
mov
sbb
insl
mov
movsl
mov
add
fdivrs
out
jbe
outsl
cmp
mov
mov
add
movsl
lds
cmpsl
lods
fld
pop
movb
xchg
lods
addr16
cltd
dec
xor
xchg
dec
pop
stos
sub
ja
mov
mov
xorl
jg
xchg
sub
adc
outsl
test
bound
sub
mov
mov
dec
jecxz
int3
xlat
push
movsl
shrl
or
mov
push
into
out
jle
mov
mov
mov
inc
mov
dec
cmpsb
xor
loope
shrl
inc
lock
stos
jecxz
jbe
lea
dec
cld
mov
cwtl
cli
clc
popa
pusha
fwait
pop
loop
aad
push
sbb
dec
sub
clc
cwtl
and
xlat
push
pop
out
xor
jno
stos
out
cwtl
add
inc
in
xor
jo
sbb
sub
xchg
test
lock
lcall
aaa
scas
out
or
inc
insl
inc
ret
stc
jl
mov
in
out
cmpsb
jl
ljmp
dec
jecxz
push
push
xor
xor
pop
mov
mov
or
or
and
mov
adc
cmp
out
sbbl
aad
sbb
cmp
sub
mov
cmp
lret
arpl
cmp
and
sbb
inc
sub
xor
xchg
mov
leave
in
push
pop
cmp
mov
jecxz
pop
rorl
and
xchg
mov
or
out
cmpsb
xor
sbbl
hlt
mov
inc
xchg
mov
ficoms
sbb
xchg
stos
in
add
fistps
call
scas
leave
xchg
fistpl
jg
mov
xchg
jb
sbb
jecxz
fsubr
cs
sahf
aam
xchg
inc
sub
out
jecxz
and
lock
push
mov
fcmovb
data16
movsb
adcl
loope
movsl
mov
add
out
mov
pop
or
enter
daa
and
in
insl
imul
fwait
adc
pop
jno
roll
xorl
adc
mov
xchg
push
sbb
ja
aaa
addl
test
inc
inc
dec
popf
rcrb
fcoms
aad
push
adc
xor
sbb
cmp
arpl
xorl
int
cmp
and
sarb
imul
std
and
mov
in
inc
mov
std
in
je
mov
push
repnz
or
sbbb
push
shr
push
mov
mov
push
aad
xchg
adcl
stos
xchg
out
pop
jmp
cmpsb
inc
mov
test
rorl
jp
cwtl
cmpsl
pop
cmp
jp
jge
xchg
add
dec
push
pushf
ja
mov
jecxz
or
jnp
outsl
int
sub
add
sbb
pusha
cwtl
jge
popa
loop
fnsave
sub
sti
push
lahf
testb
sub
fcmovnb
decl
mov
cmp
push
mov
cmp
or
jb
dec
mov
lret
cltd
lods
bound
sub
in
stos
pop
push
pop
inc
sbb
xchg
insl
clc
pusha
adc
inc
adc
fdivp
xor
nop
scas
jnp
jns
fldl
fstpl
add
popa
sbb
add
fs
shlb
frstor
popa
lcall
lods
add
lret
mull
das
push
dec
push
pushf
jo
mov
cld
mov
cmp
mov
popl
rcrb
xchg
fldcw
mov
mov
mov
icebp
mov
jnp
pop
jle
mov
lcall
pop
dec
xlat
mov
mov
sbb
mov
pushf
mov
es
stc
orb
dec
sbb
xchg
fisttpl
loope
push
in
adc
ficoms
out
xchg
daa
jg
jle
xchg
shll
dec
pop
and
mov
jle
insl
out
xor
call
sub
lods
jmp
adc
cmp
jge
imul
jne
lock
jns
scas
ljmp
cmp
cld
ficoml
outsb
sar
in
or
cmp
mov
mov
lods
hlt
call
daa
xchg
xchg
dec
mov
add
push
pop
pushf
sub
sub
mov
lods
lahf
jns
mov
lcall
in
and
sbb
cmpsb
dec
fdivrs
jb
xor
cmpsl
movsb
push
dec
jae
imul
rol
xchg
jbe
cmp
pop
push
xchg
push
adc
inc
jbe
push
in
mov
lea
subl
pop
mov
mull
sub
lock
mov
cmc
mov
jno
scas
push
mov
in
movsb
xchg
inc
movsb
sub
sub
jle
test
add
pop
stos
jne
sbb
push
icebp
xchg
out
xor
cmp
push
aas
xchg
or
pop
rolb
inc
arpl
or
or
in
inc
xchg
mov
fdivl
cmp
adc
ss
shrb
loope
jb
xchg
dec
notl
inc
push
and
jge
fidivrl
jle
fbstp
push
stos
sbb
pop
add
aas
pop
popa
mov
test
aas
cld
xchg
jb
and
sub
mov
dec
sbb
bound
icebp
mov
aad
mov
test
and
push
nop
xchg
dec
cwtl
mov
pop
outsb
loop
fadd
push
or
jnp
clc
xchg
or
lds
sub
inc
or
cltd
lret
mov
pop
stc
cli
outsb
mov
lahf
nop
test
add
addl
lret
movsl
jno
add
and
xchg
fs
push
jo
scas
mov
jle
jbe
sbb
cmpsb
add
arpl
pop
inc
dec
sbb
cmp
popf
sti
add
sbb
dec
lock
movsl
in
pop
xor
cld
mov
out
xchg
xchg
mov
cmpsl
lods
sbbl
jl
push
mov
pop
movsl
sbb
mov
mov
and
and
insl
or
cmp
aaa
push
es
xlat
out
push
sub
push
xor
push
lahf
dec
xchg
mulb
push
pop
sbb
mov
cmp
inc
orb
imul
jl
fdivl
addb
repz
xchg
ret
icebp
cld
jbe
lret
jno
ficoml
out
mov
shr
pop
adcb
int3
mov
loopne
mov
cmpsl
rcll
add
inc
dec
mov
popa
dec
push
sbb
xchg
add
stos
add
add
sti
pop
fsubs
lods
in
pusha
push
push
fisttpl
aaa
mov
in
das
pop
out
rcrl
or
cld
mov
pop
aam
cmpsl
roll
push
sbb
inc
jno
jo
mov
jmp
int
lahf
js
test
fs
add
jno
xchg
leave
push
outsl
pusha
push
inc
inc
into
shl
jmp
lea
or
lret
fld
cmp
mov
sbb
cld
jmp
inc
inc
or
mov
mov
mov
add
jnp
in
mov
pusha
mov
adc
lcall
lret
lret
pop
dec
popf
inc
pop
fisttpl
push
inc
cli
mov
mov
nop
adc
loope
divb
mov
jle
mov
xchg
dec
push
sbb
cwtl
jmp
jne
insb
adc
movsb
adc
push
stos
mov
mov
pop
mov
faddp
ret
iret
sbb
mov
mov
sbb
lea
vpminsw
mov
dec
negl
xlat
or
mov
jb
sbb
jmp
mov
mov
jo
outsb
cmp
push
pop
loop
sub
shl
jmp
dec
repnz
test
ds
pop
cli
call
stos
xchg
xchg
call
mov
subl
xchg
mov
jmp
mov
rcr
add
mov
cmp
aas
mov
adc
push
pusha
jle
popf
jecxz
adc
pushf
scas
pop
or
aas
jne
adc
insl
std
fisttpl
add
outsb
ficomps
add
std
inc
mov
mov
pop
lahf
fisubs
jmp
repnz
fcoms
pop
ss
ja
icebp
or
sbb
sbb
aaa
movsb
sub
fwait
mov
cli
mov
mov
cmp
mov
sub
jo
bound
ljmp
lret
shrb
ret
lret
jo
jbe
dec
enter
cmp
sub
jle
das
leave
rolb
xor
dec
dec
xchg
std
out
xchg
jge
ljmp
rcrb
jae
lods
jg
or
popa
pop
ss
xchg
jmp
xor
shll
out
popa
scas
mov
pop
aaa
or
mov
xor
mov
push
xor
lods
adc
mov
dec
stos
sub
xorb
lahf
fidivrs
icebp
mov
sbb
fcmovb
mov
xchg
pop
imul
data16
repnz
mov
out
aam
mov
mov
xlat
cmp
cwtl
cmp
and
lahf
pop
insl
mov
cltd
adc
or
or
into
jmp
adc
fnsave
add
shrl
out
push
hlt
lret
stos
or
mov
xor
pop
jbe
mov
mov
or
lret
sub
mov
add
cli
adcl
cli
dec
push
jmp
pop
adc
ss
jb
sar
sub
adc
repz
sbb
mov
mov
mov
vpsadbw
add
xlat
xchg
bnd
cmp
mov
out
inc
pop
scas
pop
inc
push
sbb
shrl
cltd
inc
mov
mov
pop
dec
cmp
scas
xor
inc
push
sbb
ficomps
fwait
inc
rcrb
push
in
pop
in
das
push
js
xchg
in
add
xlat
and
aaa
std
out
and
xorb
stos
add
add
and
cs
push
lods
ret
icebp
cmpb
inc
xchg
loop
cmpsl
or
xor
fcomip
cld
cltd
mov
add
and
or
or
lret
in
inc
test
cmc
and
addr16
and
or
decl
rcll
mov
cwtl
sahf
cmpsb
leave
cmc
jmp
sub
push
dec
xor
adc
icebp
adc
xchg
ds
mov
mov
icebp
jecxz
xchg
inc
dec
orl
call
mov
jnp
cs
push
pop
lods
mov
mov
aaa
dec
lcall
shl
int
and
mov
mov
mov
enter
outsb
iret
into
pop
jno
movsb
cmp
push
sub
mov
lock
pop
and
je
in
mov
es
in
mov
mov
sbb
mov
pop
call
mov
int3
ja
scas
cmpb
pushf
mov
mov
push
psrlw
in
out
roll
mov
frstor
jnp
jge
ret
lock
and
adc
jle
insb
dec
add
popa
jae
xor
mov
and
cwtl
adc
lahf
or
jnp
out
push
jnp
adc
inc
mov
mov
ss
rorl
jo
mov
mov
sub
lods
sbb
jne
ret
repz
incl
ficomps
ja
bound
add
in
rolb
jl
repz
call
clc
add
leave
push
pop
lods
fsubs
leave
enter
mov
xchg
bound
xor
xor
cmp
mov
dec
inc
inc
nop
mov
push
mov
fcmovb
sub
cli
popf
and
adcl
push
mov
cmc
test
mov
ds
push
sub
inc
push
lea
out
mov
pusha
mov
sub
call
cmc
push
notb
mov
fs
lods
test
les
and
cmp
mov
dec
pushf
mov
int
fwait
jae
cmc
jb
imul
test
inc
push
int3
push
jae
dec
ficoms
adc
jecxz
sbb
addb
lret
mov
sub
mov
popf
fs
cli
ds
mov
mov
lcall
mov
cltd
push
add
mov
xchg
inc
bound
xchg
insb
jmp
rcll
mov
pop
pop
fisubs
mov
fisubl
jmp
pop
popa
push
faddl
aad
lahf
jb
lds
clc
or
aam
jp
xlat
loop
das
inc
daa
aad
mov
sub
add
push
xor
push
gs
push
in
sar
jo
insl
adc
shlb
fists
rcrb
add
ja
sahf
jp
mov
out
fnstenv
in
cmc
in
fs
dec
sub
fldl
idivb
outsb
sbb
pmulhuw
mov
divl
push
and
sti
cli
andb
ror
fsubrp
adc
insb
les
ffreep
jbe
jno
andl
inc
stos
add
jno
mov
sub
pop
add
nop
int3
popf
fistps
lea
jmp
mov
stos
add
add
cmp
push
mov
popf
dec
lret
or
jns
add
xchg
jae
mov
repz
in
mov
jmp
sbb
sti
int
int3
cmpsl
shl
xchg
xor
cmpsb
rorb
jecxz
mov
inc
jl
mov
fcompl
mov
sub
fdivs
pop
insb
sti
cmpsb
jmp
adc
or
andb
mov
movsl
and
sbb
and
sbb
ds
lods
repnz
inc
stc
mov
adc
push
scas
xchg
or
fisttpl
dec
and
rorl
mov
fstps
inc
into
sbb
arpl
pop
lock
ljmp
xor
pop
in
aaa
xor
aad
jl
cmpsl
div
ret
mov
lods
push
andl
scas
push
out
mov
and
fldenv
pop
sub
jo
sbb
insb
leave
insb
out
loop
push
mov
mov
push
adc
popf
mov
movsb
stc
xor
pushf
or
cmp
loop
lahf
cmp
push
stos
jl
or
imul
pop
movsb
mov
and
test
xchg
pushf
sbb
or
mov
pop
push
jmp
dec
out
push
int
das
popa
jbe
add
add
and
xchg
or
cmp
daa
push
pop
enter
sar
xchg
push
sbb
jl
mov
aad
negl
push
test
xor
or
xchg
pop
sub
pop
pop
inc
inc
mov
aad
es
popl
bound
idivl
mov
mov
clc
insl
xor
cmp
iret
lods
add
iret
sbbl
jge
sub
aam
push
push
stc
idivl
in
and
rcrl
xor
push
insl
or
xchg
es
lods
nop
out
test
stc
lods
sub
in
pop
or
es
cltd
iret
ljmp
mov
std
fisubrs
xchg
pushf
pushf
imull
sub
sbb
or
rcl
xor
outsb
arpl
xchg
pop
test
cwtl
movsb
mov
icebp
cld
lret
inc
cmpsl
sub
cmp
dec
call
xor
iret
pop
mov
lods
push
mov
xor
sti
xchg
iret
fdivl
jbe
inc
mov
test
cmp
pop
aaa
rcrb
xchg
or
dec
mov
arpl
dec
add
in
das
movsb
int
cmp
mov
jno
movb
out
jns
and
push
ss
call
add
mov
mov
add
mov
xor
jbe
jne
mov
push
mov
ret
stos
call
and
push
xchg
xor
xchg
pop
dec
lret
mull
fdivs
decb
xchg
out
stc
mov
sub
in
in
arpl
movsl
in
movsb
aas
aam
pop
xchg
clc
mov
or
pop
ret
push
xchg
sbb
xorl
add
xchg
test
mov
pop
mov
int3
mov
mov
fstps
xor
add
outsl
mov
nop
jle
sub
imul
mov
sub
mov
mov
je
imul
scas
sbb
je
add
inc
les
lcall
add
data16
mov
pop
mov
ja
pushf
add
stos
add
add
js
stos
push
cmp
adc
in
xchg
mov
adc
cmc
imul
loopne
add
inc
repnz
push
mov
sub
inc
daa
mov
sub
pop
sub
popf
rol
pop
popa
aad
es
add
or
or
push
lahf
pop
inc
jg
lods
fidivs
clc
ljmp
adc
xchg
fcomps
mov
mov
xchg
pop
jne
cwtl
int
test
jnp
push
pop
push
xchg
pushf
fucomip
andl
out
ljmp
mov
adc
xchg
call
inc
sbb
xlat
into
inc
std
jp
mov
and
stc
inc
popa
add
int3
or
rclb
push
lods
xor
mov
mov
in
jae
mov
testb
xchg
and
sarb
sbb
adc
xchg
mov
add
sahf
add
imul
sbb
movsl
cs
inc
and
insb
mov
cmpb
adc
fistpll
xchg
adc
int3
test
outsl
in
fistpll
stos
cld
ds
sub
aad
nop
test
in
or
aas
jg
and
insb
outsb
sbb
mov
cmp
mov
mov
ret
mov
xlat
repnz
aaa
mov
cmp
mov
jecxz
idivl
pop
ret
cmp
outsl
iret
inc
ljmp
mov
push
aam
mov
push
xchg
arpl
mov
ljmp
ja
fldcw
adcb
jno
mov
inc
xchg
sub
push
cmc
pop
xchg
sti
jae
stos
mov
mov
lcall
fwait
sbbb
rcrl
mov
loop
int
std
mov
push
jnp
andl
js
pop
mov
dec
and
jmp
test
cmpsb
pop
addr16
lret
jne
imul
dec
inc
adc
rol
and
mov
inc
test
movsl
adc
xlat
es
push
xchg
icebp
pushf
xchg
lcall
xor
lods
sbb
mov
shrb
push
test
push
loopne
or
jb
inc
loop
push
dec
ret
inc
pop
stc
stc
adc
adc
das
jo
inc
arpl
fisubrl
xchg
sbb
les
sbb
xor
adc
stos
xorl
cs
lret
lahf
aad
push
jnp,pn
clc
mov
inc
dec
out
scas
cmp
movsb
inc
loopne
push
or
ss
mov
rcr
sub
int3
dec
adc
inc
pop
nop
imul
mov
lods
push
jge
loope,pt
jae
push
loopne
jo
or
cmp
pop
rorl
popa
cld
jl
std
sahf
scas
imul
dec
xchg
sti
ds
outsl
sbb
inc
jle
pop
lock
sub
jne
cli
loope
ljmp
push
and
jmp
inc
pop
popl
repz
or
pop
daa
xor
xchg
pop
imul
lahf
in
out
rcrl
sbb
add
repz
sub
bound
aaa
test
shl
jge
cltd
hlt
in
jl
icebp
xor
and
jnp
sub
inc
xlat
mov
outsl
mov
push
push
adc
adc
add
int3
inc
fdivrp
out
ja
or
pop
roll
add
stos
add
add
enter
sbb
sub
dec
clc
push
pop
call
and
mov
xchg
lds
scas
mov
fcmovnb
pop
jns
and
xor
insb
jp
faddl
in
rol
or
jae
pop
in
and
push
sbb
insb
or
lods
test
cmpsl
hlt
dec
jge
aas
inc
out
sbb
rolb
jae
aam
ljmp
and
or
repz
negl
sarb
fisttps
mov
int3
out
mov
adc
adc
loope
scas
rcrl
popf
jecxz
aam
aad
push
pop
mov
and
lea
cmpsl
add
pop
mov
addr16
dec
sub
fiadds
into
xlat
arpl
jnp
mov
ret
add
outsb
or
push
rcll
cltd
and
add
in
sub
lods
dec
jmp
mov
push
cmp
mov
mov
out
mov
mov
or
int3
bound
cli
cmp
lock
mov
ss
das
rcl
xchg
mov
jnp
rcrb
lea
mov
subl
adc
fwait
arpl
std
sbb
cmc
adc
sbb
add
push
dec
aaa
pop
lret
jp
rcrb
pop
cmp
xor
in
lods
add
out
mov
inc
aas
cld
pop
gs
lods
jmp
mov
decb
adc
sub
scas
mov
or
xchg
rolb
imul
and
push
mov
inc
push
ret
dec
shlb
pop
shlb
xchg
aad
jmp
fsubl
and
rcrl
add
stos
out
sbb
xchg
sub
pop
inc
or
decb
ljmp
mov
jecxz
adc
out
fistps
push
aad
jmp
ret
push
push
pusha
jns,pt
loop
xchg
lods
push
insl
jae
and
xchg
xchg
mov
int
mov
hlt
inc
dec
je,pn
mov
mov
and
lcall
xchg
into
xchg
fnstcw
lret
pop
shr
or
dec
clc
rorl
inc
fidivrl
adc
sbb
jne
ljmp
daa
adc
data16
addr16
stos
sbbl
stos
sub
mov
sbbb
inc
ljmp
cmpsl
in
out
cmpsl
pop
testl
aad
test
dec
mov
pop
loope
push
and
sbb
xor
mov
mov
call
rolb
xchg
lock
pusha
and
shlb
and
add
in
dec
mov
aad
push
data16
jne
or
movsl
xchg
sub
out
pushf
aaa
adc
lea
imul
js
ljmp
into
jb
jns
je
adc
mov
push
mov
in
outsl
or
jl
or
mov
addb
je
and
push
sub
icebp
int
mov
nop
mov
ljmp
cmp
or
les
push
xchg
jl
iret
int
outsl
push
sti
in
xor
andl
mov
cltd
mov
xor
sahf
add
sbb
add
stos
add
add
mov
cltd
mov
pop
pop
mov
or
shlb
rorl
stos
push
pop
test
lret
enter
add
in
adc
arpl
jmp
cli
push
adc
cmp
jmp
jmp
sarb
sahf
cld
aas
adc
insb
dec
xor
fdivrl
in
daa
sub
pop
and
or
dec
xchg
fistpll
and
or
push
in
mov
insl
lahf
insb
outsb
in
cmp
jb
cld
and
dec
xchg
lahf
daa
pop
dec
push
sarl
cmpsb
in
jge
in
lds
jle
pop
fsts
inc
fs
repnz
jbe
mov
stos
mov
test
sub
lds
jmp
lea
or
stos
pushf
push
sub
mov
fwait
inc
scas
fstl
scas
outsl
sbb
mov
push
cs
xchg
lcall
test
pop
ds
stos
inc
ljmp
frstor
es
jge
imul
inc
xlat
dec
or
stc
sahf
iret
insb
cmp
fldt
xchg
aam
xchg
int
ficoml
in
push
pop
cmpsb
cmp
bound
inc
icebp
mov
movsl
or
andb
sti
inc
ret
and
rcll
scas
pop
or
rcll
test
in
add
mov
repnz
add
fidivrl
rcrb
lock
and
mov
sbb
mov
push
jmp
mov
xor
or
pop
fdivl
mov
push
or
jnp
mov
fnstenv
jno
test
icebp
add
dec
mov
lds
and
hlt
pusha
push
cmp
dec
decl
mov
loope
cmp
test
in
dec
shr
push
fisubl
fiaddl
dec
mov
js
pop
adc
jg
pop
cs
lcall
xchg
and
xchg
gs
push
in
lret
rolb
daa
leave
data16
mov
fnsetpm(287
mov
ja
fdivrl
in
mov
inc
mov
mov
or
loop
jg
notb
mov
sub
cld
inc
int3
js
imul
rolb
out
jae
jns
adc
xor
out
cmp
mov
sahf
sub
mov
rorl
mov
ret
xchg
mov
push
dec
lock
and
imul
xchg
push
jmp
push
sbb
mov
and
mov
cmc
jnp
mov
xor
inc
push
shrl
mov
inc
sbbb
repz
das
mov
cmp
mov
pop
and
cmpsb
movsb
xchg
cmp
aam
sub
daa
mov
push
call
sbb
dec
lcall
cmc
adc
sbb
adc
jge
mov
mov
add
test
mov
mov
lret
jo
adc
push
in
mov
add
or
xchg
dec
dec
pop
dec
popa
lods
inc
cmpsl
sbb
les
jecxz
xor
pusha
loop
ds
sbb
mov
pop
pop
lods
push
or
cltd
add
cmp
sbb
xchg
pop
xchg
stos
loop
fcmovne
sub
imul
add
xor
cmp
ret
sub
cmpsl
add
stos
add
add
xorb
push
icebp
negb
bound
rcrb
or
test
hlt
int3
adc
adc
mov
push
sub
and
inc
mov
int3
xchg
ss
jge
pop
dec
shl
popf
es
push
push
int
xlat
push
aad
inc
shr
lods
pop
mov
adc
aaa
lret
mov
in
pop
nop
fsub
addl
fsubrs
scas
inc
cld
mov
mov
or
clc
aas
imul
das
xchg
xchg
mov
pop
mov
pushf
testl
les
in
push
inc
mov
movsl
xchg
mov
cmp
and
popa
push
inc
aam
inc
mov
jle
pop
dec
dec
pop
xchg
into
mov
push
jp
jb
lcall
xor
mov
stc
nop
inc
aam
jge
cmp
push
rcrl
cmpsl
in
mov
push
xchg
jmp
adcb
jmp
adc
and
rcl
mov
out
mov
inc
js
mov
jno
js
xlat
sub
in
mov
iret
data16
pop
lret
jo
sbb
aas
xchg
cmp
xor
lret
xchg
movsl
fwait
cltd
stc
xchg
add
inc
popa
pop
ret
scas
arpl
mov
insl
outsb
lods
push
xchg
in
aas
test
divl
aas
addb
sub
loope
scas
outsl
arpl
mov
xchg
testl
push
push
lahf
cmpsb
idivl
and
inc
ret
popa
test
out
mov
aad
jnp
repz
cmp
inc
pop
rclb
inc
adc
jbe
xchg
inc
aad
notl
lret
iret
jmp
test
aas
clc
pop
hlt
jbe
pop
add
outsl
jmp
fcomip
pushf
lods
jae
or
jns
fiaddl
lock
pop
jmp
xor
jnp
and
xor
loope
adc
fimuls
add
and
mov
mov
push
cmpsl
dec
sub
xchg
cmpl
filds
cmp
sbb
sbb
inc
xor
jo
scas
sub
xorl
sub
mul
sti
sbb
enter
leave
jecxz
mov
in
std
cld
sub
shlb
inc
imul
nop
adc
aad
jl
dec
repnz
mov
stc
or
andl
push
jnp
inc
add
xor
cli
arpl
iret
into
outsb
and
jo
ss
pop
xchg
rcrl
adc
loope
std
jecxz
push
pop
cld
enter
sub
popf
out
sub
jmp
xlat
dec
mov
mov
jb
or
sarb
out
pop
rol
pop
repz
fisubl
mov
pop
sub
fsubr
call
cmp
mov
sub
aaa
out
dec
sbb
pop
loope
push
add
pop
in
lods
test
xor
mov
fsubr
xchg
or
push
mov
ficomps
and
popf
enter
dec
lcall
test
sar
sbbb
jnp
dec
pop
cli
cltd
push
jmp
sbb
xchg
sub
in
nop
add
test
sti
loop
out
adc
push
test
dec
cs
jge
fistps
mov
fadds
cli
dec
push
ret
mov
jge
cmp
in
jns
pop
jb
add
stos
add
add
sbbb
inc
fwait
push
cmp
shll
cltd
bswap
sub
cld
loope
and
or
or
cmp
rcll
cli
imul
data16
mov
add
fsubl
fwait
popf
js
mov
or
add
enter
mov
mov
inc
push
cmc
sbb
into
mov
negb
out
or
movsl
test
adc
fmuls
xor
jge
add
mov
sarb
xchg
fisubs
insl
fucomp
shrl
mov
ficomps
dec
les
ja
int3
cmp
adc
sbb
movsl
cmp
pop
xor
loopne
nop
inc
push
test
in
jge
adc
xchg
cmp
cltd
les
das
stos
loopne
adc
cmpsl
sub
add
imul
jb
cmp
aad
int3
testl
jg
sbb
xor
into
push
daa
dec
pop
test
sbb
sarb
xor
lar
inc
adc
pop
xchg
out
dec
dec
cmp
addb
rcrl
pusha
iret
dec
aas
pushf
mov
xchg
sarb
xchg
jae
jns
xor
xchg
in
add
adc
icebp
or
jae
outsb
lret
sbb
xor
sub
aad
dec
aas
push
in
push
xor
push
sbb
stc
sub
jae
hlt
mov
add
mov
sarb
cmpsb
adc
mov
jb
pusha
repz
cmc
enter
roll
pop
xor
dec
mov
addr16
stos
aam
push
mov
out
pop
mov
aaa
lea
mov
inc
ficompl
stc
cmpsl
jbe
push
sub
cmpsb
out
and
aaa
pusha
jo
aaa
fs
mov
pop
mov
jne
push
xchg
dec
pop
popf
dec
scas
cmp
jp
dec
add
dec
lret
xorb
adc
push
or
int
lods
sahf
jl
sub
pop
out
insb
mov
mov
pusha
mov
push
push
fs
add
popf
ss
out
adc
in
jecxz
inc
xchg
mov
jns
lods
sbb
orl
or
pop
xor
mov
ret
inc
fidivrl
mov
lds
jmp
cmp
pop
lcall
insl
paddb
jns
mov
cmp
sahf
stos
ja
mov
xchg
mov
jbe
add
jns
xor
dec
out
pop
pop
cmp
ret
mov
stos
lcall
in
pushf
in
repz
lahf
ret
dec
ljmp
subb
fstp
mov
pop
aad
jecxz
fsubrl
add
out
gs
incl
dec
sbb
xor
adc
cmpsl
and
sbb
mov
push
mov
in
into
pop
xor
xor
and
lock
jmp
adc
test
hlt
cmp
outsl
rorl
lahf
sbb
dec
sbb
outsl
push
movsl
sbb
dec
mov
or
or
div
loop
mov
cmc
aam
jecxz
testb
jecxz
out
in
nop
in
lret
pusha
cmp
sbb
sbb
enter
cmpb
xchg
mov
aam
push
mov
ds
fsubp
push
hlt
in
scas
fwait
out
fwait
cmpl
add
add
in
jmp
lahf
jle
stos
xchg
sbb
add
add
add
fcoms
mov
iret
mov
xchg
lret
mov
jbe
rcll
stos
shlb
andl
sarb
je
daa
jl
push
add
scas
nop
fimuls
cwtl
push
inc
divl
cmp
out
out
in
rolb
mov
add
lea
xchg
mov
or
jns
xchg
sub
dec
and
and
sub
sti
inc
xor
jmp
adc
dec
outsb
adc
or
lea
cmp
add
repz
jl
fimull
xchg
mov
pop
adc
add
in
es
xchg
sarl
repz
mov
mov
movsb
pop
fnstsw
in
dec
subl
push
movsl
adcl
xchg
stos
push
dec
and
stos
scas
add
xchg
xchg
cmp
pop
push
inc
rcrb
pop
mov
lds
ret
and
jnp
mov
enter
sub
andb
fdivl
sub
mov
test
inc
xor
mov
push
lahf
out
aam
or
dec
pop
scas
cwtl
mov
jae
dec
loopne
es
jns
sbb
jne
sub
lahf
iret
ja
sti
push
xor
pop
dec
mov
sbb
jg
push
push
inc
xchg
jecxz
xchg
enter
dec
adc
jmp
push
and
or
psraw
jbe
lods
loope
xor
ret
shr
pop
and
mov
add
dec
pop
push
les
repnz
or
pop
and
call
jge
push
fdivrl
repz
xchg
insl
aas
cmp
cmp
in
pop
lods
in
xchg
cmp
sbb
setae
stc
stos
stos
aam
and
fs
lds
adc
repz
arpl
add
pop
call
in
dec
sbb
cs
mov
mov
and
daa
lahf
clc
mov
stos
stc
arpl
mov
xor
add
sbb
xchg
xor
es
xchg
mov
sub
add
sub
aad
jno
repz
outsl
pop
stos
ficoms
add
push
nop
mov
testb
dec
inc
mov
movsb
dec
in
mov
jp
pop
cld
push
adc
jle
dec
jbe
lds
outsl
daa
mull
and
lods
mov
nop
lods
inc
pop
jp
test
lret
pusha
or
rolb
cmp
adc
push
adc
mov
dec
loopne
les
je
push
lock
mov
cld
repz
in
fldl
addr16
ljmp
cli
cmp
sbb
pop
movsb
mov
xchg
push
icebp
in
sbb
ja
cli
fcompl
adc
xchg
and
pop
mov
push
xchg
or
xchg
ret
xor
fwait
sbb
shlb
xlat
pop
mov
cs
xor
shlb
outsb
outsl
mov
push
insb
pop
cmc
jne
lods
std
ret
adc
jge
inc
mov
jnp
cmc
movsb
cli
insb
and
mov
dec
push
jnp
ret
xchg
xchg
xor
xor
mov
mov
pusha
cmpps
jne
pop
lret
or
or
dec
cli
mov
decl
mov
int
or
mov
add
cli
movhps
scas
sub
imul
std
mov
mov
sub
sub
pop
inc
test
or
loop
dec
hlt
arpl
adc
xorb
push
fcmovnbe
into
jecxz
jb
jmp
int3
and
outsb
insl
cld
ret
movsb
push
cmpl
icebp
xchg
in
ja
lret
xchg
sbb
ja
movsl
mov
push
mov
fildl
scas
add
sub
pop
or
mov
fs
clc
mov
mov
imul
aam
adc
mov
lret
jae
push
push
fwait
sub
and
ljmp
aam
enter
push
in
test
jo
sar
fstpl
insl
or
mov
jne
fs
pop
and
xor
cmp
mov
cltd
and
lods
sub
sub
mov
pop
rcll
mov
mov
aam
dec
push
bound
inc
bound
jne
addr16
push
imul
clc
subl
and
xor
leave
mov
sub
adcl
shrl
jp
mov
cmp
or
mov
cmpl
jmp
movsb
jp
sti
fwait
leave
xchg
cli
imul
ja
sub
cmp
sbb
scas
fbld
inc
inc
push
jae
inc
scas
shl
pop
outsl
dec
sbb
mov
pop
push
repz
xchg
es
inc
sub
mov
sbb
aaa
xchg
in
out
push
stos
mov
inc
adc
jno
fsubrs
add
pop
adc
mov
icebp
cmc
fisubrl
das
sub
mov
ret
xchg
test
ja
inc
fisubrl
push
pop
mov
mov
fsts
cltd
mov
inc
sbb
mov
mov
jb,pn
push
scas
leave
out
into
mov
xor
xchg
push
fstps
outsb
jb
stc
imul
pop
dec
std
js
mov
shrl
fisubl
xchg
push
sub
cmp
xchg
aad
ret
cmp
sbb
jno
testb
out
or
pop
xor
leave
int
adc
popa
pop
shll
lds
mov
or
cmc
into
insb
sbb
push
jecxz
mov
hlt
insb
fistl
mov
aam
cmp
add
loopne
outsb
ja
iret
repz
mov
int3
repnz
jge
jp
stos
mov
mov
dec
lods
mov
out
nop
ds
stos
sbb
dec
mov
mov
jo
mov
sbb
insb
ss
dec
std
ficoms
dec
jbe
push
cmp
aaa
dec
jns
cltd
mov
xor
pusha
push
les
cs
mov
adc
ret
es
mov
pop
scas
jno
gs
lcallw
out
mov
jle
rcrl
fcompl
outsl
and
insl
lds
pop
shl
add
jl
jg
inc
push
and
mov
and
sub
jb
xchg
pop
sahf
jecxz
fsubrs
rorb
out
test
aam
pop
sbb
mov
lret
out
mov
out
mov
xor
outsb
xchg
int3
pop
add
test
cmp
mov
subl
cmp
sub
push
inc
aad
sbb
inc
xchg
mov
add
lret
xorb
icebp
lret
aam
imul
test
in
mov
add
sbb
mov
mov
test
sub
jns
mov
jmp
cmpb
sub
and
inc
cld
icebp
mov
jb
gs
shlb
lds
in
sub
and
jns
je
in
mov
call
outsb
insb
je
jg
sub
adc
and
xor
aad
repz
call
or
test
mov
int
call
das
xor
xchg
push
outsb
rorl
cmpsl
popf
adc
flds
mov
lods
pop
add
bnd
sub
cs
pop
lahf
add
cmpsb
roll
filds
aad
cltd
repz
jge
add
ss
sbb
mov
cmp
fcomps
pop
test
dec
lret
sbb
and
cmp
push
and
gs
push
sbb
pop
cmpsl
and
or
cmp
mov
lods
test
adc
cli
mov
mulb
sub
lods
sbb
sbb
icebp
leave
hlt
movsb
and
sbb
dec
arpl
pusha
shl
enter
icebp
icebp
inc
mov
pop
or
test
jmp
push
mov
mov
leave
in
das
push
mov
and
rcrb
dec
push
and
cmp
xchg
pop
xchg
sbb
jb
inc
push
xor
arpl
cs
mov
pop
bound
adc
sub
das
sub
mov
andb
mov
jnp
bound
loopne
in
and
cs
insl
xor
rcll
xchg
test
xor
fstps
push
jmp
movsb
sbb
in
out
ret
dec
cmp
test
jmp
push
xchg
fmuls
and
fisubrl
or
lcall
mov
into
mov
mov
mov
dec
xor
es
lahf
jb
movsl
pop
adc
lret
add
sub
xchg
fadds
sbb
dec
fnstsw
shll
jmp
icebp
shr
jg
push
nop
xchg
outsl
pop
pop
lds
push
jg
add
popa
pop
dec
cwtl
mov
in
mov
in
adc
addr16
lock
cmp
lea
inc
pusha
xchg
jmp
dec
push
gs
jnp
insb
in
sub
mov
sbb
jl
je
mov
xchg
push
fdivp
and
sbb
cmpsl
bound
jae
out
pop
insl
popf
fsubl
or
addr16
push
mov
fcompl
add
lcall
add
pop
dec
mov
jns
xchg
loopne
mov
out
movsl
outsl
xor
ljmp
xchg
push
mov
cmpsl
sub
popl
mov
out
add
push
aaa
mov
and
ror
int
loopne
outsb
cmp
sub
sub
sub
jge
out
pusha
fistpll
inc
in
sub
cwtl
jae
xor
enter
cmpsl
jbe
adc
out
das
repnz
cs
push
shrb
nop
jo
jns
mov
js
dec
leave
andl
out
icebp
scas
dec
in
hlt
push
cli
sbb
out
aam
push
nop
leave
xchg
out
mov
xchg
cmp
xchg
leave
insb
adc
addr16
fstpt
add
add
in
jp
jp
in
sarl
insb
cmp
mov
add
shrb
lahf
xor
jnp
in
jg
mov
dec
inc
inc
data16
and
outsb
frstor
fidivrs
cmp
ss
xor
repnz
mov
roll
loopne
pusha
pop
imul
jae
or
ret
push
xor
js
and
sbb
mov
mov
insl
cmp
dec
es
loopne
lcall
clc
mov
in
dec
loop
push
jl
cs
clc
inc
popf
and
jbe
nop
xchg
xor
insl
pop
insl
pop
push
or
std
mov
jp
inc
xchg
fsubrs
out
popl
into
idivl
mov
pop
or
mov
and
adc
pop
mov
add
ret
out
stc
loopne
jne
in
bound
lret
imul
mov
xor
loop
lds
adc
cmp
pop
sti
gs
hlt
outsl
mov
ss
mov
mov
jl
fcmovnbe
or
aaa
pop
xchg
mov
adc
sub
in
test
gs
jge
jp
aas
push
mov
shrl
fcmovnu
mov
cmp
and
pop
inc
int
imulb
or
and
pop
push
mov
jmp
aaa
sub
push
mov
pusha
jge
test
scas
push
inc
gs
pop
inc
pop
dec
inc
push
jecxz
stc
gs
icebp
aaa
shlb
outsl
dec
xchg
pop
in
mov
cli
icebp
scas
enter
pop
or
jne
rolb
mov
movaps
out
ret
insb
int
scas
push
cmp
mov
mov
iret
shlb
mov
loop
in
sbb
gs
ret
imul
fisttpll
jmp
aas
jg
aaa
sub
fwait
add
fdivl
inc
shll
adc
mov
sti
jnp
or
iret
shll
pop
inc
jno
outsl
test
jmp
jno
dec
jmp
jns
mov
mov
sahf
dec
mov
int
add
push
icebp
push
lahf
lahf
enter
mov
aam
sbb
dec
mov
pop
jbe
aad
xchg
push
pushf
lods
aas
inc
out
pop
faddp
adcb
or
lahf
push
nop
cmc
std
cs
push
cmc
push
aad
push
test
xor
push
aas
adc
sti
mov
xchg
sbbb
cmpsl
mov
mov
jb
jecxz
mov
shlb
jne
jno
push
and
fistpl
pop
shlb
icebp
push
pop
inc
or
mov
mov
cmpsl
lock
mov
sbb
sahf
or
xchg
sbb
lahf
movsb
pop
fwait
adc
sbb
xchg
mov
mov
mov
adc
jle
mov
fdivl
sub
movl
lret
jecxz
les
and
mov
xchg
push
fstl
jno
or
cld
pop
sub
or
cmp
lcall
xchg
cmp
faddl
insb
adc
pop
mov
repnz
pop
mov
push
jp
add
rcrl
sbb
push
dec
push
and
cmpsb
fdivr
cwtl
sahf
fs
pusha
xchg
rcl
cmpsb
addr16
cmp
addl
daa
mov
shrb
mov
mov
dec
jg
imul
lahf
push
jl
dec
int3
fisttps
leave
mov
add
mov
test
mov
das
testl
xlat
and
jo
jb
push
mov
add
sbb
xchg
sbb
push
jl
dec
xchg
jno
nop
xchg
pop
mov
or
add
dec
jecxz
clc
pop
mov
inc
mov
xor
pop
aas
dec
daa
add
nop
lahf
pop
lods
cmp
loopne
xchg
loop
xchg
or
mov
pop
lods
or
movsb
adc
mov
cmp
in
inc
and
mov
sub
mov
ss
and
mov
add
test
add
xchg
jnp
jo
push
bound
pop
xchg
jae
repnz
adc
lret
es
out
test
sahf
push
daa
rclb
pop
pop
adc
scas
xchg
jle
add
test
flds
mov
loope
mov
fistpl
xchg
mov
and
mov
popf
rorl
frstor
bound
orb
mov
cmp
lods
mov
xor
xor
dec
pop
outsb
mov
cli
dec
andl
xor
hlt
adc
ljmp
jbe
iret
ds
negb
dec
xor
shrl
lcall
clc
shrl
lahf
sbb
scas
xchg
mov
push
pop
sbb
cltd
addr16
cmpsb
aad
jbe
or
shrb
pop
push
clc
adcb
and
aas
lea
sbb
mov
inc
cltd
pop
ljmp
or
jbe
fwait
push
sub
push
stc
jno
mov
jle
xorl
fnsaves
cmpsb
cmp
mov
icebp
icebp
sbb
sub
and
mov
pop
mov
mov
jns
repnz
mov
adc
xorl
mov
jb
xchg
pop
call
xor
fistl
subl
out
xchg
fs
pop
mov
sub
or
fucomi
shl
das
ret
dec
jg
jle
lock
push
outsl
or
popf
fimull
in
push
mov
pop
xchg
out
in
and
xchg
aas
pop
cmp
rorb
pop
stos
mov
roll
ljmp
jo
sti
fnstcw
mov
scas
aam
xchg
sahf
xchg
pop
outsl
repnz
pop
jnp
fsubr
cmp
inc
mov
mov
mov
sub
lret
jne
sub
pop
fld1
pop
out
and
roll
push
mov
inc
mov
mov
out
mov
scas
outsl
stos
in
popa
push
in
adc
das
jmp
dec
inc
or
push
shll
aaa
xchg
lcall
outsl
lea
test
movntps
shlb
sub
movb
lds
sbb
es
stos
test
test
in
fdecstp
subb
lods
addr16
mov
roll
push
das
or
pop
mov
and
out
add
xchg
test
loopw
out
jbe
pop
mov
scas
fisttpll
ss
addr16
pop
xchg
repnz
popf
dec
pop
mov
shrl
pop
sub
mov
fisttpl
cltd
add
and
sub
adc
or
mov
jecxz
add
out
mov
cmp
or
add
je
add
stos
add
add
es
sar
xor
and
add
sbb
cmp
jl
sbb
add
inc
jmp
mov
into
cmp
fidivrs
add
sbb
inc
lds
lods
push
xor
sahf
scas
inc
cmp
push
inc
mov
movsl
arpl
xor
push
jle
pop
scas
cmpsb
push
insb
cmp
out
adc
xor
out
push
mov
gs
scas
popf
scas
mov
in
inc
add
dec
pop
mov
pop
test
jo
adc
and
jmp
cwtl
jle
or
mov
inc
mov
cmpsl
popl
mov
mov
push
jmp
lods
fwait
sarl
sbb
arpl
leave
lods
std
ss
cld
or
add
inc
pop
aad
pop
dec
push
mov
int
pop
pop
cmp
out
insl
mov
adc
rclb
repz
aad
dec
repz
adc
test
iret
ljmp
shlb
lret
iret
dec
mov
mov
and
ficompl
add
add
aam
pop
sub
and
mov
movb
push
das
xchg
mov
add
mov
sub
dec
mov
add
aam
jbe
je
dec
pop
int3
shrl
mov
loope
test
test
outsb
xchg
sub
jg
adc
cmpsl
cmpsb
mov
leave
jae
xor
sbbl
enter
jecxz
fcompl
and
push
push
jbe
mov
pop
leave
sbb
fs
cwtl
inc
rclb
test
inc
push
jne
mov
fimuls
mov
mov
inc
stc
popf
lods
jecxz
mov
sbb
xor
cmp
jmp
xor
ss
aas
cmp
jmp
push
mov
aaa
or
cwtl
cltd
xchg
mov
loopne
ja
ljmp
ljmp
pop
fistps
insl
pop
and
inc
push
leave
rcrl
mov
cmpsl
test
adc
pop
ja
cmp
sub
jnp
xor
jecxz
xor
jbe
dec
and
pop
xor
cs
shlb
pop
flds
rorb
cmp
addl
ret
cmc
cmp
out
pop
movsb
mov
call
jns
hlt
scas
lds
lret
sbb
ja
xor
roll
pop
daa
cs
les
mov
je
jge
data16
jg
xor
out
nop
shll
sbb
mov
inc
out
cld
in
or
sub
mov
outsb
sbbb
sbb
sbb
imul
out
iret
push
decb
adc
push
imul
or
fdivl
lea
shrl
popa
inc
push
shl
add
js
sbb
fcmovnu
stc
outsb
stos
lock
int3
mov
dec
and
pop
shlb
add
push
ja
pop
bound
pop
rorl
xorb
adc
in
sub
mov
js
mov
ss
repnz
popa
and
pop
das
addr16
call
sbb
and
pop
fisubrl
push
je
cmp
add
mov
xor
mov
lds
add
push
into
xor
jo
iret
dec
add
sbb
aad
dec
adc
xor
fdivp
ljmp
nop
ret
push
arpl
jb
mov
or
sub
aas
sbb
testb
dec
enter
or
hlt
push
jbe
xor
nop
mov
lods
add
lea
int3
dec
iret
cmpsl
adcl
outsb
dec
push
and
jbe
inc
xchg
cwtl
int
sub
jl
add
dec
insb
lret
rcrl
pusha
cltd
add
movsl
xchg
mov
nop
inc
incl
stos
dec
inc
inc
jae
and
xchg
lock
mov
jp
sub
xor
xor
inc
dec
or
mov
pop
leave
sarb
aam
imul
test
aad
adc
int3
add
clc
sub
sub
push
pop
or
jge
pop
xchg
loopne
push
xchg
adc
iret
dec
jecxz
sbb
in
sarl
les
jp
mov
mov
popf
stc
add
cmp
call
jg
dec
push
xlat
cmp
adc
js
inc
adc
andb
pop
insb
jge,pt
mov
push
fcoms
je
imulb
clc
jbe
addl
dec
icebp
arpl
cld
scas
clc
fimull
xchg
fldt
and
xor
fldcw
xor
pop
fsubrl
out
sub
icebp
mov
test
mov
clc
or
js
ret
xor
pop
mulps
inc
xor
loope
or
cmp
rcrl
inc
or
or
mov
ljmp
xor
test
push
mov
inc
mov
xor
in
and
mov
dec
and
movsl
sbb
out
loope
pop
out
add
mov
or
or
mov
pop
add
arpl
sahf
inc
mov
in
shlb
adc
xor
les
ds
push
jnp
fidivrl
insb
fwait
repnz
pusha
push
xchg
inc
jecxz
aam
adc
mov
dec
leave
jmp
push
rcr
sti
pop
adc
xor
xor
imul
jne
cld
orb
pop
ds
orl
rolb
fsubr
push
or
mov
std
out
jmp
xchg
stc
ds
in
dec
add
lcall
lds
pop
ffreep
inc
sti
mov
dec
mov
popf
sbb
add
inc
lods
sbb
sbb
lret
push
cmpsl
mov
mov
notl
sti
and
es
pop
jbe
into
enter
and
xor
inc
enter
mov
je
pusha
mov
out
repz
inc
xlat
ja
cltd
rcl
fnsetpm(287
mov
xor
or
gs
fcmovne
cltd
push
mov
or
pop
xor
das
cmp
mov
mov
fs
and
testb
scas
mov
or
push
pop
jo
xor
rcl
insb
ljmp
pop
popa
stos
push
mov
cwtl
mul
leave
nop
cmp
sarb
fcomps
mov
jbe
mov
imul
pop
out
cmp
pop
outsb
inc
sbb
gs
push
sbb
lret
jno
mov
out
mov
push
out
imul
dec
pop
or
lahf
lret
add
mov
pop
xor
fdivrp
enter
sti
sub
add
fisttps
fdivrl
push
aas
mov
inc
mov
in
clc
inc
jecxz
jl
mov
jbe
hlt
in
and
sub
add
sahf
push
fcomps
and
ljmp
pop
adc
jmp
push
pushf
pop
movsb
mov
dec
rcll
fmuls
shll
mov
in
mov
mov
stos
pop
das
dec
inc
pop
mov
xchg
sti
push
inc
std
in
lock
sbb
scas
sub
mov
fidivl
in
aam
lds
repnz
jmp
push
push
mov
ds
fcmove
sub
in
shlb
jecxz
inc
dec
push
into
cmp
call
inc
push
outsb
in
cwtl
adc
in
scas
sub
sbb
xor
lods
imul
jle
gs
push
in
mov
sbb
aad
hlt
insb
push
and
int
das
jmp
push
popa
fchs
sub
insl
jge
stc
dec
adc
sub
ds
xchg
arpl
fdiv
std
sub
and
add
xchg
popf
std
fldenv
pop
int
and
les
mov
inc
push
pusha
push
mov
pop
dec
mov
jno
pop
push
ffreep
adc
mov
mov
rolb
insl
icebp
cmpsb
mov
pop
mov
ljmp
mov
xchg
test
mov
cmp
loope
sub
rcrl
ja
data16
sarb
xchg
cmp
dec
adc
inc
rep
data16
mov
fstp
add
add
cmp
mov
lods
test
xchg
xor
jae
shlb
out
movsb
xor
adc
xor
pop
ret
or
rolb
loopne
mov
mov
mov
xchg
mov
insb
and
pop
mov
jmp
adc
push
repnz
pop
push
inc
and
pop
scas
int3
in
mov
mov
sahf
jns
loopne
cwtl
adcl
mov
adc
clc
loop
lods
les
jno
out
cmp
out
enter
aaa
je
push
mov
mov
lock
in
mov
lret
mov
adc
mov
xchg
icebp
jno
loope
jl
fisubs
roll
int3
lock
insl
mov
inc
mov
repnz
adc
jg
aas
sbb
pop
push
xor
mov
cmp
or
imull
clc
cmp
mov
mov
outsl
faddl
push
xor
cmp
arpl
fnstenv
sbb
clc
jg,pt
mov
mov
std
shlb
mov
aam
in
xor
push
inc
inc
or
inc
out
mov
fldl
mov
xchg
dec
repnz
daa
scas
lret
cmp
pop
notb
or
notb
dec
cld
jae
pop
mov
jne
jne
sbbl
sbb
cmp
into
sub
or
push
imul
fcoms
lret
pusha
fstpt
dec
mov
jo,pt
and
xchg
jnp
and
lcall
int3
jbe
xor
mull
in
dec
add
dec
or
scas
jmp
popa
mov
or
sbb
jne
add
stos
add
add
mov
nop
cmp
cmovno
insl
sbb
xor
pusha
out
inc
mov
addr16
mov
ss
das
loop
cmp
or
mov
shll
mov
mov
push
xor
inc
sub
fwait
cmp
pop
mov
mov
scas
in
mov
sbb
ja
cmp
stos
call
aas
aaa
mov
mov
je
xchg
repz
arpl
or
cli
jno
fcmove
subb
xchg
ss
lcall
fwait
xorb
addb
out
or
jge
inc
popf
xchg
cmp
push
imul
xchg
cmp
pusha
icebp
sbb
xor
and
dec
push
pop
lcall
insb
sti
loope
add
adc
xor
inc
dec
mov
gs
sti
inc
insb
add
out
cmp
arpl
push
lods
orb
lock
inc
daa
and
lret
or
mov
mov
call
and
mov
xor
add
and
mov
jl
cmp
aaa
xor
and
mov
adcb
xchg
fistps
dec
cmpsb
jecxz
test
add
popf
or
and
imul
std
inc
test
lea
push
dec
push
and
inc
inc
lret
xchg
rorb
xor
push
jne
and
aaa
out
jg
iret
xchg
pop
ds
je
scas
jp
jmp
inc
clc
and
dec
daa
jns
loop
mov
xor
or
nop
hlt
aam
ds
add
mov
data16
test
sbb
mov
push
xor
std
sbb
leave
xchg
int
sti
pop
mov
xchg
dec
push
push
or
jle
mov
cmpsl
loop
or
ss
lahf
enter
add
outsb
pop
pop
int3
xor
add
push
inc
aas
dec
sbb
popa
jno
cli
pop
js
jp
popf
insl
ja
inc
popf
jnp
or
cmpsl
sahf
push
ss
sbb
cwtl
jae
pop
call
jle
inc
stos
jo
in
movsl
xor
lods
adcl
mov
push
paddq
stos
jo
inc
mov
hlt
jnp
fucomp
mov
sub
cmpsb
mov
cltd
cmp
popa
ljmp
or
outsl
ret
insl
mov
jmp
jecxz
push
push
lock
test
pop
xchg
xor
sti
shl
sub
leave
rclb
gs
add
test
sbb
inc
js
mov
mov
ret
loopne
mov
cmp
out
inc
xor
jbe
mov
loop
mov
lock
sbb
mov
dec
fscale
mov
es
test
adcl
mov
push
scas
mov
adc
jle
mov
dec
dec
lret
dec
mov
cltd
add
adc
jle
stos
fsubl
das
push
pop
dec
in
and
xchg
jno
jb
in
outsb
pop
in
scas
cmp
and
aad
out
sbb
dec
imul
test
xchg
insl
mov
mov
lds
mov
mov
stos
xor
add
cltd
in
shlb
je,pn
shlb
in
or
pop
fcomps
adc
add
test
push
cld
mov
and
add
stos
add
add
addl
cmp
daa
popf
pop
scas
out
adc
mov
rolb
pop
sub
sub
enter
xchg
enter
mov
mov
pop
cmp
sti
push
jle
xor
mov
popa
scas
xchg
cmpsb
cmp
rcll
std
lahf
add
adc
rorb
aas
in
fistl
mov
push
jnp
rclb
xchg
test
fiadds
jo
push
aaa
pop
jno
pop
js
xchg
test
push
jge
pop
fcoml
sbb
and
sub
lea
in
pop
popa
inc
sub
mov
lea
test
adc
stc
lret
jae
arpl
cmp
sub
xlat
ss
orl
cmpsl
sbb
push
sub
fwait
sbb
lds
mov
outsl
and
dec
xor
cld
xchg
imul
dec
lds
dec
mov
test
xor
cmpsb
sbb
in
mov
sub
jp
fs
push
scas
daa
pop
fmull
sbb
dec
loop
sub
in
xor
adc
test
sub
dec
mov
mov
dec
mov
insb
stos
scas
sbb
or
in
enter
sbb
enter
into
sbb
arpl
jp
loop
clc
pusha
sbb
xchg
or
dec
push
icebp
inc
dec
repz
movsl
or
lds
cmc
rcrl
sub
push
fsubs
adc
shlb
mov
mov
cmc
dec
xchg
leavew
flds
adc
mov
dec
jecxz
adc
scas
lea
push
es
pop
lret
mov
iret
mov
jmp
repnz
xor
je
sub
movsb
mov
xchg
mov
jle
fldcw
lcall
lods
int
cmpsl
inc
mulb
rcl
nop
stc
mov
inc
adc
arpl
movsl
das
pop
stos
daa
jge
gs
pushf
js
imul
push
movsl
dec
repz
or
sbb
pushf
mov
dec
pop
pop
sbb
adc
mov
xorl
mov
bswap
andl
sbb
push
test
test
in
out
push
pop
hlt
fcoml
test
pop
xor
mov
adc
dec
inc
test
lcall
fdivrs
insb
xchg
imul
aam
lcall
ret
jl
push
xchg
add
shlb
cwtl
jmp
sti
dec
fldz
mulb
aas
add
mov
pop
test
in
sbb
test
fcomp
bound
ljmp
in
imul
lods
pop
in
adc
fsts
lea
ss
test
jle
inc
add
ja
cmp
loopne
xchg
and
jecxz
mov
inc
dec
sub
sti
add
push
sub
xchg
mov
xchg
fstpl
push
aaa
repz
mov
push
push
pop
sbb
imul
cmpsb
ljmp
daa
xchg
pop
aas
movsb
mov
aas
xor
xor
inc
pop
push
insl
adc
mov
cmp
inc
cmp
add
add
jecxz
sbb
insb
mov
out
rclb
or
push
mov
lock
mov
outsl
xor
xor
and
and
adc
stc
movsb
mov
add
add
leave
popf
lret
popf
pop
xlat
loope
fs
repnz
roll
add
and
or
adc
jb
lret
dec
pop
pop
stc
xor
xlat
mov
xchg
mov
pop
ss
lahf
mov
jmp
mov
mov
cmp
jge
stos
in
in
inc
lods
stos
nop
mov
mov
lods
scas
lds
repz
jmp
lret
insb
aad
dec
jae
push
daa
inc
push
out
and
dec
sbb
sbb
dec
out
mov
in
stos
adc
lcall
sbb
mov
fldenv
hlt
mov
mov
imul
push
sti
scas
daa
outsl
dec
fwait
mov
sbb
mov
sub
add
inc
in
outsb
dec
movups
dec
mov
arpl
sarb
cmpsl
sbb
divb
popa
aaa
add
es
fisubrl
clc
pop
lcall
jbe
bound
inc
inc
sub
aaa
pop
fiadds
es
sbb
mov
sub
dec
mov
stc
dec
bound
movd
xchg
sbb
mov
add
xchg
not
aaa
jle
pop
stos
pop
xchg
adc
clc
sub
and
mov
and
dec
cwtl
xor
and
fsubl
testl
sub
push
xchg
shl
arpl
jo
mov
push
jl
push
lcall
stos
in
repz
mov
mov
inc
mov
arpl
int
lret
ds
cmp
adc
aam
push
pop
inc
adc
outsl
inc
lret
pop
cmp
or
mov
mov
in
mov
in
bound
sbbl
in
sbb
pop
ja
push
fadds
lret
pop
hlt
push
fidivrl
push
mov
dec
movsl
cmp
mov
push
lahf
or
add
stc
xchg
and
sbb
sub
push
js
pop
stc
sub
in
sbb
push
or
int3
mov
out
insl
or
popf
sbb
mov
subb
mov
mov
icebp
rorl
les
fs
pushf
jnp
int
sub
enter
out
jns
cmpsb
data16
jle
inc
mov
lahf
add
iret
lahf
daa
add
add
aaa
lret
fcmovnb
lret
das
outsb
out
lahf
jns
pop
pop
mov
gs
xor
mov
cmp
cmp
fnstenv
cmc
pop
xlat
icebp
xchg
int
xchg
out
jns
ljmp
mov
pop
lock
lock
lret
mov
mov
out
sahf
insl
loopne
shll
call
sbb
std
jg
cld
jb
dec
jb
jo
or
mov
mov
sbb
xchg
sub
pop
aam
nop
scas
adc
push
gs
out
insb
rolb
mov
sti
jae
dec
jae
in
es
jmp
mov
imul
cmpsl
cs
add
aam
lret
xchg
push
ds
sar
mov
inc
into
lods
mov
out
dec
push
dec
jno
xchg
popa
inc
mov
leave
out
pushf
sub
out
push
cmp
mov
pop
sarb
inc
xor
pop
mov
repz
xor
ret
pushl
cmpsb
sbb
outsl
or
jnp
or
jae
iret
aam
lea
mov
sub
jp
lea
dec
orb
add
add
call
pop
out
dec
pop
popa
sub
leave
out
jbe
add
stos
add
add
divb
dec
mov
loop
movsb
dec
test
gs
sarl
cld
jns
mov
push
sub
xchg
pop
sahf
shl
loopne
mov
mov
or
and
or
or
int
bts
data16
arpl
popa
aas
or
sub
popf
nop
cmc
push
jge
jne
push
jnp
lock
jecxz
jmp
mov
sub
push
aad
ffreep
leave
sbb
xchg
jbe
out
std
pop
aam
shlb
inc
jnp
adc
pop
ljmp
in
mov
adc
test
pop
mov
and
mov
jmp
adc
dec
mov
jl
pop
test
xchg
jl
push
mov
je
pop
pop
insl
fsubs
lcall
lock
mov
xchg
adc
push
mov
cmp
out
popa
mov
daa
ja
xchg
enter
push
shlb
xchg
inc
repz
push
fcoms
sbb
sub
cli
jbe
mov
mov
testb
nop
xor
adc
pop
xchg
jns
movsb
mov
scas
add
inc
push
xor
iret
or
sbb
pop
imul
add
int3
out
cs
pop
jle
sub
cmp
lods
test
xor
or
dec
fldl
or
mov
inc
xchg
sub
mov
xchg
movsb
add
imul
in
jnp
xor
adc
sbb
adc
and
repz
pop
into
jne
mov
add
pop
push
jecxz
push
fistpll
and
or
jg
sbb
mov
xor
xor
stos
cmp
dec
subb
or
push
mov
cltd
pop
adc
insb
dec
out
jle
ret
dec
xchg
std
out
or
and
jp
and
add
mov
aaa
inc
pushf
adc
pop
movsl
outsb
add
out
or
xchg
push
dec
nop
inc
jns
mov
fsubs
lds
mov
mov
xorb
pop
arpl
mov
jl
mov
sub
jne
mov
aad
push
mov
xchg
iret
or
push
sahf
mov
jmp
movsl
lcall
pop
shl
mov
push
xchg
stc
hlt
cmpsl
add
shl
jns
mov
inc
lock
sub
test
icebp
inc
jns
callw
in
cmp
push
faddl
sub
mov
pushf
dec
pop
bound
pop
sub
cmpsl
pushf
loopne
or
fs
inc
mov
cltd
sbb
dec
inc
cmp
fs
or
ret
ljmp
push
mov
jecxz
jp
shlb
incl
out
jg
lock
jle
dec
addr16
stc
hlt
adc
comiss
xchg
mov
sbb
fsubrp
movb
cmp
fs
into
and
jne
rol
cli
or
es
mov
push
pop
orl
adc
movb
sbb
push
fiaddl
sbb
das
pandn
pusha
out
scas
addr16
jp
fidivrs
sub
imul
cltd
inc
cmc
imul
xor
and
bound
loop
push
data16
decl
std
or
lret
and
add
stos
add
add
push
sbb
push
rorb
mov
aaa
lods
jge
mov
addl
aas
xchg
imul
add
sub
loopne
addb
in
lods
cwtl
cmc
pop
icebp
add
cltd
add
push
jg
push
loopne
cld
leave
ja
cmp
xor
repnz
jge
dec
cmpsl
mov
test
add
test
call
sarl
mov
lcall
jge
imul
lock
mov
xchg
ljmp
popa
rclb
in
jg
cmc
in
add
dec
test
push
int3
pop
test
inc
mov
stos
mull
inc
aaa
mov
in
sbb
cmp
nop
movsl
je
pop
adc
push
stc
or
nop
popf
in
ds
fmul
je
fnsave
aaa
inc
sub
ficoms
mov
or
jne
aas
jae
fildl
push
mov
sub
lea
add
in
sbb
cmp
repz
mov
mov
fistps
shr
mov
sub
sub
sbb
fsts
mov
pop
pop
jno
call
sub
push
jle
inc
pop
cwtl
aaa
stc
cmp
int
add
sahf
xchg
inc
and
sbb
mov
test
sbb
negb
fimuls
lcall
push
lcall
cmpsb
lahf
inc
loope
jbe
sahf
push
addr16
dec
jl
repz
cs
test
sbb
arpl
mov
sub
mov
outsl
lret
fildll
or
loop
xor
or
outsb
pop
call
jns
scas
jbe
mov
cmp
lea
scas
mov
fwait
push
aad
lds
out
ficoms
scas
stc
ja
in
jmp
mov
mov
cmp
fiadds
and
in
mov
call
jp
in
cmp
loop
sub
or
pop
jmp
daa
inc
into
and
cmpsl
in
loope
fcoms
inc
or
add
xchg
call
pop
das
int3
sti
push
mov
pop
ljmp
fwait
adc
stc
push
cmp
adc
xor
repnz
xchg
mov
daa
add
pop
push
int3
mov
push
rcr
jbe
and
test
enter
or
sub
pop
cmp
and
cmp
adc
sub
mov
jmp
cmp
in
xor
fdivl
mov
mov
sub
movsl
add
cs
and
sub
pop
imul
xor
movsl
popf
fwait
cld
lahf
pop
js
jl
mov
inc
pop
jno
mov
jle
neg
dec
imul
mov
lahf
int3
dec
and
out
push
sub
stos
xchg
imul
mov
cmpsb
push
cmc
push
adc
add
pop
clc
pop
cmp
mov
popa
mov
mov
insl
test
jnp
sarb
data16
inc
or
jp
cs
adc
fbld
imul
cs
sbbb
or
jl
mov
dec
stc
push
inc
xchg
xor
mov
xor
xor
sub
sbbb
outsl
push
pop
cmp
sahf
ss
outsb
inc
icebp
add
into
psrld
rcr
fistpll
push
clc
mov
scas
int3
fiadds
add
ret
std
inc
sbb
fwait
inc
fxch
adc
mov
lock
test
inc
xorb
jp
xchg
push
pop
rcrb
fdivrs
mov
sbb
aam
cmc
or
mov
adc
repnz
mov
jp
jo
sarb
jae
lret
push
or
xor
mov
or
sbb
arpl
mov
fsub
aas
lcall
xchg
or
lds
popl
test
mov
xor
xchg
out
lods
mov
add
pop
sbb
test
push
lea
fwait
sbb
cmpsl
cmpsb
mov
or
popa
shll
nop
jle
shlb
fwait
test
mov
cmp
fwait
ret
js
xchg
iret
insl
or
sbb
cmpsb
jno
mov
or
clc
xor
mov
mov
iret
loope
mov
or
sub
and
push
icebp
add
adc
sub
sbb
or
cmp
mov
adc
add
inc
nop
adc
dec
popa
jg
popl
mov
push
add
mov
pop
test
ss
popa
lds
inc
mov
push
or
fimuls
xchg
mov
jmp
dec
dec
jb
mov
gs
mov
fists
mov
into
and
js
gs
mov
pop
dec
data16
xchg
jmp
shrb
rcll
sbb
dec
scas
mov
and
pop
mov
lods
cmpl
mov
cmp
jle
mov
loope
mov
mov
push
mov
imul
cmp
dec
cmp
add
xchg
pop
inc
mov
test
pop
hlt
cs
jae
mov
inc
mov
inc
mov
jle
scas
addr16
adcb
add
xchg
loope
lods
call
fildll
cmp
inc
mov
jge
icebp
or
iret
rorb
mov
jl
fsubrs
fisubs
xor
fsubr
pop
push
mov
jp
mov
sub
jmp
outsl
mov
jl
out
inc
sbb
and
insb
push
arpl
xchg
clc
jb
aad
sub
repnz
push
xchg
aas
sahf
xchg
pop
lds
adc
xchg
and
xor
xlat
ret
sbb
in
movsl
xor
popf
or
fnstsw
xchg
movsl
int
add
loopne
insb
fadds
sbb
test
push
jg
clc
imul
jne
mov
or
mov
lahf
call
jnp
dec
sbb
push
icebp
out
or
insl
leave
mov
pusha
adc
fldt
lds
bound
sub
pop
sub
xor
les
inc
ja
je
or
jg
fisubl
jcxz
jg
cmp
mov
inc
in
out
dec
leave
movsl
adc
cmp
imul
insl
test
xchg
shrl
call
pop
lcall
dec
dec
das
pop
or
pop
adc
add
and
adc
push
mov
dec
sbb
rcll
enter
mov
sar
outsl
xor
daa
jo
xchg
add
lock
pushf
pusha
pushf
cld
cld
push
dec
lock
push
and
stos
add
add
push
lds
add
xor
or
int3
loope
movsl
cli
icebp
mov
inc
ret
scas
mov
in
xchg
sbb
aam
lret
data16
push
lcall
lock
jmp
xchg
xchg
mov
nop
fadds
fmuls
ret
int3
pop
or
jns
sbb
xchg
aaa
adc
push
push
dec
mov
imul
test
movsl
mov
dec
inc
int
adcb
clc
pop
iret
mov
xor
sub
stos
mov
inc
push
jb
dec
loop
jmp
popw
sub
iret
repz
dec
dec
mov
repz
sti
pusha
xor
sbb
pop
mov
xchg
popf
cs
sub
xor
and
jae
fdivl
inc
orb
sbb
mov
push
fiaddl
add
jbe
push
int3
mov
push
pop
xchg
fidivl
mov
inc
pop
pop
stos
pusha
dec
sbb
pop
jbe
shlb
scas
dec
adc
adcl
test
push
lcall
test
mov
cli
orl
push
fisttpll
push
push
in
mov
popa
xchg
jle
cmpsl
mov
cld
call
cs
pop
or
sub
sbb
xor
lret
and
jle
xchg
add
lahf
jmp
sbb
dec
je
add
mov
dec
or
cmp
aam
outsb
ja
push
mov
data16
mov
roll
lret
aad
xor
ret
adc
mov
add
lcall
jge,pn
std
jae
adc
shlb
jecxz
sti
icebp
testb
or
lret
cmp
adc
adc
call
and
mov
pop
daa
cmpsb
addl
xor
xlat
inc
sub
cmp
push
int
int3
rcrl
int3
push
into
mov
cmp
aaa
and
ret
jno
mov
std
aad
inc
and
jle
lcall
xchg
cmp
fdivs
push
in
rolb
xchg
fdivrl
adc
lock
jbe
jb
dec
cmc
or
push
cmpsb
or
and
pusha
push
mov
mov
cmp
xor
mov
outsl
push
dec
ljmp
adc
dec
fs
out
fisubs
out
scas
cmp
and
jae
repnz
sbbb
ja
xchg
sub
mov
scas
adc
xchg
test
aam
aad
xor
ret
leave
xlat
in
cmp
aad
jle
arpl
and
mov
pop
fwait
test
push
enter
shlb
loope
cmpsb
jnp
xchg
inc
cmp
repnz
and
adc
cmpb
sub
lret
fscale
xchg
cs
in
dec
mov
mov
mov
pcmpgtb
jge
pop
lahf
lock
mov
fisttpl
xor
xchg
dec
cmp
pusha
test
push
pop
xchg
mov
ret
cmc
shrb
les
push
xlat
in
cmp
test
mov
add
jnp
adc
das
xchg
adc
sbb
jle
js
aas
aam
push
lea
fs
lret
xchg
ljmp
sub
push
cmpsb
aad
data16
mov
and
pop
mov
and
cltd
fldenv
add
inc
gs
jg
mov
rclb
or
out
add
dec
rorb
lret
bound
xchg
inc
xor
pop
fadds
test
mov
push
push
and
cltd
add
inc
pop
in
fcmovnbe
sub
sbb
hlt
jmp
xchg
xrelease
insb
out
insl
in
xchg
popa
stc
adc
aas
jns
testb
cmc
mov
cli
out
push
stos
push
aad
inc
jmp
leave
cmpb
push
movsl
stos
cmc
rclb
pop
mov
xchg
fs
push
cmpsl
in
push
loope
iret
arpl
or
sub
insl
push
lds
jecxz
iret
pop
xchg
push
mov
out
pop
adc
mov
inc
pop
popf
pop
cld
rcrl
std
ret
out
pushf
cmp
andl
mov
sahf
push
loop
dec
mov
push
cmp
inc
cld
cld
movsb
inc
push
shrl
addr16
xchg
cs
and
push
mov
sar
mov
xchg
push
xor
popf
shr
mov
int3
jle
insb
in
sub
pusha
imulb
pop
mov
xor
imul
mov
xchg
push
pop
nop
insb
fwait
aaa
xor
push
cwtl
aaa
dec
aas
imul
pop
data16
addl
test
jbe
mov
insb
das
mov
mov
push
or
loopne
and
dec
cmp
adc
xchg
mov
adc
xchg
cltd
fdivrs
sbb
xchg
lea
sti
test
and
add
xchg
loop
call
jae
xchg
mov
inc
pop
ss
jns
pop
mov
in
roll
aaa
loopne
shll
cmp
pushf
push
shlb
jg
scas
int3
fsubrl
fstpt
call
out
icebp
ja
gs
mov
cmp
sbb
add
pusha
sub
dec
sub
sub
mov
adc
int3
sub
mov
in
popf
pop
fs
adc
xor
test
fstl
scas
imul
andb
add
dec
xchg
cmc
xor
push
das
dec
andb
into
mov
or
shrb
dec
das
and
movl
sub
mov
or
pop
je
aaa
mov
pop
push
pop
fdivr
adc
arpl
sub
pushf
jmp
inc
jne
cs
xchg
jb
pop
bound
insl
jns
lahf
cmp
enter
mov
addr16
mov
sbb
adc
cmc
dec
inc
lods
xchg
mov
leave
inc
mov
aam
sahf
push
and
repnz
push
jae
xchg
xlat
fcoml
popa
sbb
adc
add
notl
addb
cmp
mov
push
or
pop
sti
movsb
je
jle
xor
fildll
pushf
pop
xor
inc
pop
js
pop
or
ja
xlat
sub
cltd
cmp
pop
xchg
xor
add
icebp
fdiv
testl
movsb
xorb
in
sti
lret
add
leave
push
mov
movsb
mov
popa
jmp
shrb
sbb
xchg
cli
fisubrl
iret
lds
movsl
ficoms
stos
iret
mov
or
lcall
adc
outsb
bound
mov
and
cmp
out
and
or
mov
sub
dec
jmp
push
imul
add
inc
xchg
dec
xchg
mov
mov
add
stos
add
add
out
push
mov
adc
xor
in
push
xor
pop
push
dec
loop
out
lea
int3
loopne
add
cld
and
stc
add
cld
sarb
jae
fs
mov
outsb
fcoml
dec
and
xchg
mov
mov
fistpl
leave
mov
js
in
in
int3
aaa
cmpsl
out
in
insl
orb
hlt
xor
out
add
pushf
loopne
push
cltd
sti
mov
add
imul
adc
divl
mov
ficoms
adc
popa
iret
arpl
cld
aaa
pop
lret
xchg
bound
rol
ljmp
pusha
loop
lods
ja
and
in
stos
sbb
stc
mov
pop
stos
pop
jecxz
push
imul
dec
sbb
scas
sub
jae
fisubl
adc
movsl
cmp
push
arpl
imul
out
jnp
insb
dec
pop
stc
xorl
gs
xlat
iret
xchg
gs
push
dec
repz
xchg
les
dec
scas
dec
stc
pop
and
mov
aad
pop
or
push
aaa
inc
pushf
push
imul
sub
repz
dec
mov
int3
cli
add
dec
push
and
mov
fistpl
int3
xor
mov
aad
outsl
jnp
sahf
adc
dec
cwtl
xor
jmp
sahf
adc
fistpl
xchg
dec
push
aaa
xor
and
bound
pop
pusha
inc
push
rcl
mov
gs
imull
jno
loopne
ds
xchg
jbe
pushf
adc
jns
fdivrp
rcr
int3
xchg
inc
fiaddl
dec
lea
sbb
cwtl
sub
pop
insl
sbb
pushf
jp
and
sarl
jno
sbb
jbe
ja
lods
mov
cmc
mov
pop
sbb
cmp
add
cmpsb
mov
cmpsl
sbb
push
les
mov
es
es
lods
js
int
ret
sub
shll
sbb
mov
dec
and
push
mov
rclb
mov
pop
xchg
lret
mov
cmpsl
inc
into
call
lret
lock
imul
movsb
add
fptan
loope
mov
repnz
and
les
rcr
sti
xchg
hlt
mov
int
jmp
or
xor
test
pushf
repz
out
sub
test
inc
sti
or
xor
sub
cmpsb
xchg
adcb
xor
stc
rcll
rclb
cmp
mov
pop
xor
mov
cltd
negl
jo
je
out
cmp
jle
bound
dec
outsb
mov
push
jns
lret
sub
out
xchg
sub
out
mov
jmp
cmc
fstl
mov
nop
xor
lods
fisubs
ljmp
popa
daa
mov
pop
jmp
cmp
dec
outsl
sbb
or
jb
call
out
xor
inc
data16
fcmovbe
out
mov
push
cmpsl
inc
jo
pop
jo
stos
in
fnsave
xchg
sbb
push
add
movsl
mov
mov
mov
jno
es
cmp
popa
push
cmp
inc
lock
lret
cmpsl
or
js
xchg
incb
cmpsb
xchg
mov
pop
ffreep
xchg
push
test
pop
dec
mov
rcrb
add
and
jg
push
adc
push
mov
stos
add
add
test
push
xor
lret
jp
fiaddl
inc
sti
mov
in
fiadds
pop
loopne
cwtl
sbb
push
inc
sbb
xor
push
scas
aad
dec
popa
push
inc
adc
ret
bound
jl
add
out
adc
add
js
test
sub
sahf
xor
lods
adc
mov
cmc
loop
popl
gs
sub
push
mov
jecxz
xchg
out
popa
mov
call
xchg
push
mov
cmp
mov
mov
xor
scas
in
insb
add
cmp
idivb
decl
fstpl
lea
add
fldcw
adcl
call
cwtl
shl
leave
add
push
or
adc
jl
movsb
adc
aam
js
fwait
repz
mov
test
sub
adc
ss
sbb
pop
sub
jns
dec
rdmsr
xchg
and
fnstenv
repnz
repnz
inc
mull
dec
inc
mov
adc
adc
push
dec
inc
xchg
sub
mov
inc
ljmp
outsb
sub
push
jno
call
or
lret
test
jg
ja
jmp
out
sub
sub
push
ljmp
pop
insl
mov
daa
xchg
push
adc
int3
inc
add
inc
pop
mov
mov
cvtpi2ps
jl
or
inc
jbe
daa
push
clc
rcll
in
orl
imul
jb
mov
notl
jo
shr
fcomp
cmpsb
pop
aad
add
enter
sbb
mov
cli
test
push
imul
clc
out
sub
andb
aaa
aam
je
pop
call
mov
jecxz
mov
mov
clc
fidivs
add
iret
pop
into
push
enter
or
mov
cmp
mov
sub
jmp
and
xchg
xor
adc
mov
and
mov
lods
fstps
xchg
xorb
push
fcomip
or
or
lret
dec
sbb
imul
aad
inc
xchg
dec
repz
sub
movsl
pop
jle
call
pop
loope
gs
xchg
shrb
aad
data16
fwait
nop
xchg
pop
out
aam
bound
out
dec
push
add
or
jge
add
add
sub
xchg
sub
test
es
fdivrl
lods
mov
dec
and
enter
push
sahf
mov
xchg
jo
fldl
pop
dec
jl
sub
mul
jle
mov
leave
pop
sub
push
fisttps
shlb
pusha
test
jecxz
and
mov
cmpsb
pop
pop
push
inc
add
xchg
jl
cmp
mov
mulb
xor
jl
std
seta
lods
lahf
popf
xor
inc
lods
dec
jp
sbb
push
outsb
lods
clts
or
inc
push
jl
lret
icebp
aad
push
push
inc
and
movsl
fistps
mov
repz
cmp
adc
jae
ss
in
xor
xlat
stos
add
and
jl
ret
rcrb
sub
sub
jns
or
in
shrb
push
mov
xor
add
loopne
cmp
mov
aaa
mov
das
fists
and
add
stos
add
add
jns
ret
jl
lret
push
jo
sbb
xchg
aaa
stc
test
movsl
insl
xor
mov
fcmovbe
fildll
ds
xchg
in
ret
push
jno
andb
push
sub
mov
sbb
mov
push
mov
and
ror
cmc
xor
dec
leave
fnstenv
add
push
mov
pop
inc
xor
iret
inc
int3
fwait
sbb
int
mov
pushf
ret
push
movsb
adc
cmc
adc
xor
cltd
push
mulb
push
and
jns
shll
xchg
fwait
push
in
mov
dec
scas
inc
add
mov
pop
add
fistps
shlb
insl
stc
cmp
dec
sub
test
int3
ret
mov
stos
mov
xor
loope
jns
and
push
inc
popa
std
or
sbb
das
data16
dec
adc
jl
loope
cli
xchg
fldz
mov
or
inc
leave
and
add
test
jbe
int
xor
loopne
sbb
out
push
call
movsb
pop
in
inc
insb
adc
jmp
dec
adc
mov
push
std
jl
cmpsl
sets
add
fnstenv
ljmp
jb
testb
enter
inc
jg
pop
lret
subl
push
sbbl
pop
sub
pusha
adc
pop
push
cltd
adc
ja
mov
aam
icebp
xchg
adc
xchg
and
mov
movsb
pop
gs
sbb
pusha
cmp
push
mov
mov
dec
add
imul
in
fucomi
cltd
lds
loopne
mov
lods
std
stos
movsb
sbb
cmp
and
rorl
loope
xor
lods
fisttpll
lds
push
into
dec
inc
ret
test
sub
xchg
pop
sysret
lods
repnz
dec
stos
sub
xor
or
insb
dec
mov
xchg
decb
mov
stc
sub
je
sbb
xor
daa
jne
sub
repnz
xchg
shll
ret
pushf
and
push
in
inc
dec
pop
loopne
pop
cmp
or
movsl
cmp
mov
aad
dec
mov
and
repz
test
xor
mov
loopne
loope
aaa
push
cwtl
fwait
test
push
mov
xchg
cs
adc
lods
aam
loope
dec
jl
cmp
cwtl
xchg
inc
test
popf
shlb
add
push
sub
sub
dec
xchg
es
and
or
pop
dec
and
jg
pop
or
push
xchg
push
inc
std
sub
push
xchg
jp
in
pop
cmpsl
out
dec
or
jne
ds
test
lcall
xor
xchg
rorb
gs
daa
adc
cli
mov
push
stos
pop
repnz
cmp
ret
loope
xchg
push
stos
scas
jns
mull
push
jbe
dec
mov
push
lods
mov
lock
aas
les
add
lock
movsl
xchg
mov
adc
lods
es
add
push
jno
fists
xchg
sbb
stos
adc
jmp
shll
pop
push
sub
mov
add
fisttps
jl
xchg
xorl
adc
push
in
pop
cwtl
hlt
jecxz
imul
mov
out
push
add
mov
xor
test
add
xchg
pop
inc
push
jl
pop
movsl
cltd
cmp
mov
mov
cmp
jmp
lcall
add
insl
cmp
jne
mov
add
mov
into
mov
adc
int3
xchg
or
sub
push
into
mov
cmovno
sub
lahf
mov
push
inc
jnp
mov
leave
pop
jbe
or
pop
bound
pop
fcos
lahf
xchg
jl
jbe
xor
xchg
or
ror
subl
mov
in
xchg
dec
sub
and
mov
dec
aas
cs
test
inc
scas
ja
pop
ja
ja
sub
out
mov
dec
loope
in
jo
pop
ja
adc
mov
lahf
add
test
cmpsl
ret
jbe
sbb
sbb
xor
push
into
push
leave
sub
scas
loop
icebp
or
mov
add
xchg
stos
ds
incb
cltd
push
inc
xchg
addr16
aam
mov
arpl
movsl
push
test
dec
mov
jl
fcomps
xchg
adc
cmpsb
sub
mov
lret
cmpb
sbb
lcall
fidivs
mov
xchg
test
mov
ret
out
sbb
inc
xor
ja
jne
test
xor
or
sub
sbbl
pushf
les
nop
jmp
inc
arpl
aad
push
mov
cmpsl
ja
pop
inc
mov
fcmovne
leave
and
sub
xchg
xlat
out
ja
fidivrs
mov
rcr
push
mov
aad
std
repnz
add
mov
or
out
mov
xchg
addr16
je
mov
dec
imul
shrb
repz
dec
repz
push
es
mov
movsl
jmp
jns
daa
mov
cs
nop
loopne
in
shl
mov
js
loope
sti
sub
in
mov
sub
mov
lods
push
popa
loop
lods
scas
ret
lea
mov
pop
xlat
mov
adc
outsb
mov
outsb
dec
rcrl
lahf
and
popa
xchg
shl
jecxz
pushf
cmp
fidivrl
dec
cltd
aad
outsb
fdivrl
jp
or
mov
rol
push
or
and
filds
inc
pop
lret
pop
push
add
into
push
inc
in
pop
sahf
shlb
shl
push
aas
cmp
fs
btr
sbb
aam
je
in
nop
push
jl
add
das
cltd
fstps
cld
test
dec
jle
mov
mov
add
adc
adc
cwtl
dec
jno
jp
or
lcall
mov
into
push
dec
addl
cs
int
or
xchg
xchg
xlat
bound
pop
fsubrs
or
insl
fs
mov
ror
mov
mov
cmp
outsb
lahf
cld
int3
xchg
cmp
cwtl
stc
sarl
adc
pop
ss
lahf
shll
dec
and
and
data16
inc
adc
push
pushf
sub
cld
push
or
sub
pop
sbb
outsl
add
enter
addr16
stc
gs
add
mov
addr16
inc
jb
cltd
mov
sbb
cmpsl
mov
xchg
in
aam
dec
mov
pop
inc
push
mov
divl
pop
push
repz
repnz
