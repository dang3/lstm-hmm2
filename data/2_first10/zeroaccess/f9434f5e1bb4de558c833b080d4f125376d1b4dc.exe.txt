push
mov
sub
mov
mov
and
mov
andl
mov
inc
mov
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
subl
push
mov
mov
sub
add
push
mov
xor
xor
mov
sbbl
add
andl
mov
mov
sbb
mov
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
push
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
sbb
mov
mov
mov
sub
add
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
mov
movl
sbb
mov
and
xor
add
adcl
mov
mov
mov
mov
mov
and
mov
adcl
mov
and
mov
xor
push
neg
pop
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
add
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
movl
mov
and
movl
mov
xorl
mov
mov
orl
mov
and
mov
xor
movl
add
mov
adcl
lea
sbbl
mov
mov
or
mov
adcl
xor
add
mov
lea
andl
push
mov
movl
xor
add
andl
push
subl
mov
xorl
push
subl
pushl
xorl
call
andl
mov
inc
mov
cmpl
jb
jmp
push
pushl
pushl
call
cmpl
jb
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
movl
mov
incl
mov
lea
incl
mov
movzbl
or
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
pushl
push
call
jmp
mov
sbb
xor
sub
mov
sub
mov
mov
movzwl
movl
mov
mov
cmp
movl
je
add
mov
mov
sbbl
xor
xor
lea
mov
orl
xor
div
mov
xor
mov
xor
orl
xor
orl
sub
cmp
jne
mov
mov
add
mov
mov
subl
xor
addl
xor
add
add
movl
mov
movl
cmp
movl
jae
and
lea
not
mov
mov
xor
xorl
add
lea
mov
mov
mov
cmp
jbe
addl
addl
movl
jmp
addl
addl
sub
mov
xorl
xor
decl
inc
sbbl
incl
addl
add
cmp
movl
jb
notl
mov
xor
mov
movl
xor
xorl
mov
sub
add
mov
adcl
xor
sub
andl
ror
movzwl
sbb
xor
mov
mov
mov
adc
mov
orl
jmp
pop
mov
pop
mov
add
out
and
pop
addl
cmp
sub
inc
jbe
jns
jae
jb
fcmovu
imul
jb
int3
bound
lea
xchg
xchg
inc
mov
sub
push
rol
repnz
sub
nop
ss
mov
aad
jb
adc
and
aaa
jo
lods
sub
mov
notb
test
pusha
push
and
cmpl
fwait
dec
or
jecxz
imul
xchg
ss
leave
int
outsb
cmc
pop
imul
or
mov
shll
imul
jno
add
fs
stos
mov
pop
dec
ret
inc
xchg
xor
daa
mov
cmp
outsb
aam
sbb
and
sbb
or
sbb
sub
popf
rorb
mov
aas
pop
ficoml
imul
mov
test
fmull
lock
inc
aam
dec
mov
insl
lret
xor
xor
sbb
scas
mov
nop
loopne
xlat
pop
sbb
loop
or
and
xchg
in
cltd
add
lret
scas
fistpl
lea
in
push
xchg
add
push
cmpsl
insl
out
popf
jae
add
cmpsl
loope
add
jbe
repnz
mov
test
push
repnz
pop
mov
adc
out
int
xchg
jno
pusha
icebp
cmp
iret
pop
jno
fwait
sub
mov
xor
cmp
lret
ljmp
sub
adc
aam
xor
in
les
add
mov
stc
cmpb
xor
mov
loopne
cmp
int
fdivs
mov
jo
lock
xor
arpl
test
cld
das
sub
jne
mov
das
push
ror
and
shlb
cmpsl
out
ds
stos
jp
into
test
shl
mov
outsb
push
mov
data16
add
inc
sub
clc
push
cmp
dec
jb
add
test
insl
mov
sbb
syscall
jbe
dec
sahf
fisubl
mov
stos
or
push
aaa
andl
mov
cli
ss
cli
xchg
cmp
jp
ret
sbb
test
xor
sti
or
dec
roll
mov
mov
jl
push
pop
jno
jno
xor
add
std
aad
sub
ljmp
insl
push
xor
jns
push
scas
repnz
push
je
orb
jmp
sbb
cmp
sbb
subl
fsubs
enter
adc
or
inc
xchg
add
bound
add
in
pop
adc
movsb
test
iret
les
scas
pop
add
ret
mov
outsb
jle
gs
sub
xor
sarl
outsb
test
pushf
push
cmpsl
bound
out
lret
nop
cmpsb
loopne
mov
out
push
cmp
mov
cwtl
fnstcw
test
loope
xor
mov
xor
int
shlb
pop
mov
mov
rorl
movsl
and
and
xchg
pop
xor
jno
pop
adc
adc
sbb
int
add
shr
lret
adc
sarl
add
fstl
push
and
and
cwtl
cmp
lock
fcomps
bound
lahf
movsb
movsl
inc
mov
push
mov
inc
pop
xchg
stc
push
jns
and
jl
test
push
adc
cmpsl
ret
cld
nop
or
insl
and
scas
mov
call
xchg
sub
cvtps2pi
cli
xchg
dec
dec
mov
ret
xchg
shll
fimull
outsb
fildl
jne
loope
repz
adc
jge
popa
mov
fs
cmp
jmp
mov
mov
flds
seto
mov
lahf
mov
xchg
pusha
lea
jnp
dec
iret
jge
sub
test
scas
ljmp
or
ss
push
movsl
jbe
out
xchg
mov
push
rorb
sub
push
movsb
ljmp
outsl
imul
insl
insl
pop
push
test
adc
aaa
xchg
out
lods
insb
and
arpl
xchg
test
mov
and
dec
and
xlat
lcall
push
stos
lcall
movsl
sarb
andl
mov
fisubrs
insl
push
inc
push
sub
jb
pushf
ficompl
add
mov
aas
roll
jno
sbb
pop
jb
push
sti
nop
and
jne
roll
adc
xchg
sub
xor
in
rcll
sub
jg
cmp
fcmovnb
je
jne
mov
push
lods
xchg
push
shrl
adc
xchg
clc
fisttpll
push
pop
xchg
outsb
push
or
in
cld
cmpsl
cwtl
ds
movd
aaa
ud2
cs
subl
pop
call
pushf
mov
mov
call
pop
mov
gs
loope
or
or
nop
add
or
lret
xchg
hlt
pop
cmc
mov
sub
fcoms
inc
lea
data16
into
sub
sahf
arpl
adc
icebp
mov
in
add
and
xor
or
push
sbb
ret
xor
shll
fistpll
scas
lret
icebp
xchg
mov
jecxz
orl
enter
cld
hlt
jg
sbb
jns
add
dec
cltd
pop
lea
iret
pop
scas
jl
cltd
mov
xchg
adc
sbbb
inc
leave
jge
test
bound
cmc
add
pop
mov
inc
jno
ja
aas
xchg
dec
ret
cwtl
add
sbb
jmp
repnz
mov
push
icebp
sub
loopne
mov
mov
push
nop
jecxz
rorl
in
outsl
xchg
jb
xchg
repz
cmp
dec
into
cmp
push
divb
cwtl
out
insb
xchg
xor
cmp
sub
and
mov
sub
ds
mov
mov
andb
hlt
insb
outsl
leave
mov
or
imul
dec
nop
mov
jne
sbb
push
mov
ss
cwtl
sahf
xor
push
cmp
ret
jnp
insl
sarl
add
push
mov
imul
int
sahf
out
and
xor
xchg
nop
fnstcw
xor
pop
and
shll
fs
js
addb
xchg
idiv
cmpsl
mov
clc
sbb
mov
scas
push
add
pop
addr16
mov
inc
testb
sub
out
cmc
jl
imul
or
pop
pusha
xchg
mov
inc
hlt
lods
inc
int3
repnz
xorl
jo
or
xor
into
cmp
inc
aas
xor
hlt
lret
mov
xor
test
mov
frstor
in
jle
in
jns
sub
out
lea
mov
mov
sbb
push
or
test
stos
sbb
test
dec
cmp
push
pop
push
inc
lahf
or
pop
mov
and
shll
push
ss
pop
jae
mov
popf
fwait
das
pusha
add
mov
mov
cmp
fsub
into
xchg
mov
nop
fcmovne
stos
dec
cltd
roll
ljmp
push
aad
fcmovne
pop
mov
dec
mov
mov
mov
sub
jecxz
xor
xor
hlt
dec
mov
mov
lcall
add
int3
scas
dec
ds
out
adc
addl
insb
iret
andb
outsb
fiadds
cmp
and
mov
jb
popf
dec
inc
lret
sti
das
push
jecxz
mov
test
hlt
adc
or
pop
xor
or
je
test
mov
mov
add
and
pop
scas
push
setp
pop
mov
nop
sub
andl
stos
insb
mov
add
mov
adc
mov
mov
pop
aam
addl
std
pop
xchg
and
push
add
inc
iret
add
mov
and
in
pusha
lea
sbb
leave
push
sarl
das
dec
jg
add
xchg
push
arpl
and
pushf
insl
clc
insb
push
xchg
dec
movsl
rcl
js
popf
lret
jg
insl
or
cld
enter
gs
sbb
dec
movl
cli
outsb
jns
rcl
xchg
fwait
add
inc
fnstenv
ds
push
jmp
inc
inc
aaa
mov
subb
dec
hlt
jl
clc
sbb
popa
aad
xor
inc
mov
lret
mov
scas
mov
shlb
in
loop
fildl
sub
sbb
and
pop
mov
hlt
js
mov
pop
add
and
cltd
js
dec
cmc
sub
inc
pop
push
incl
jge
imul
xchg
in
scas
mov
jno
inc
cmp
push
popa
lea
rorb
fsubl
mov
insl
outsb
push
jg
push
mov
sub
imul
pop
test
lock
or
lea
sub
dec
shlb
loopne
push
and
jecxz
add
mov
xchg
mov
mov
jno
and
pop
mov
and
cmc
aad
or
inc
repnz
jge
fstl
les
icebp
xor
mov
adc
imul
int
cmp
xchg
jne
ss
or
xor
rolb
aas
into
sbb
fwait
adc
imul
mov
add
cli
insb
and
xchg
lcall
or
insl
movsl
ljmp
inc
xor
pop
sti
or
outsl
or
cld
loopne
hlt
sub
shr
add
inc
loopne
aad
xchg
jo
lret
fcmovb
sbb
fs
push
xchg
arpl
ret
mov
imul
mov
movsl
popf
arpl
pusha
lds
aaa
inc
or
add
or
imul
frstor
pusha
repz
xor
imul
cwtl
popa
orb
dec
xorb
fildl
fldcw
xor
movsl
mov
bound
sarl
scas
divps
into
push
imul
push
jne
div
pop
push
sub
lods
mov
add
xlat
push
mov
les
mov
or
scas
mov
jo
je
testb
sub
or
in
imul
daa
add
or
sbb
imull
sub
cmp
mov
mov
je
pop
inc
mov
cmp
jp
out
inc
sahf
sub
adc
push
add
sbb
orb
dec
pop
mov
lock
scas
mov
cmp
dec
pusha
fmull
jmp
scas
ss
jns
hlt
subb
data16
imul
adc
out
pop
clc
mov
pusha
aaa
sub
sub
sub
in
jg
repnz
mov
mov
std
pop
mov
push
test
sti
xor
fisubrl
int
test
idivb
sahf
pop
movsb
mov
and
and
add
xchg
sub
jecxz
push
cmpsb
in
xor
int
popw
sub
adc
push
imul
mov
jnp
jnp
in
xor
in
ds
aas
sub
mov
jne
jbe
cld
mov
ret
jns
mov
hlt
mov
add
push
pop
and
daa
xchg
or
sub
negb
mov
jns
xor
xor
movsb
push
data16
sbb
movsl
xchg
mov
push
lret
testb
sti
or
sbb
test
es
mov
cmpsl
xor
and
fisttpll
ljmp
cmp
leave
popf
out
aas
in
mov
mov
fldt
sbb
lret
mov
ss
xchg
xlat
inc
rorb
psubsw
movsb
das
xchg
cltd
fwait
sti
aad
scas
cwtl
stc
inc
in
jmp
pushf
rcrl
dec
push
and
xchg
mov
jl
cmp
xor
xor
sar
dec
sbb
imul
add
dec
jne
dec
jnp
mov
das
push
lret
pop
cs
in
or
aad
mov
and
dec
add
rcr
stc
inc
popa
lret
pop
clc
outsl
or
inc
jp
jae
stos
std
xchg
push
jmp
adc
imul
mov
inc
xchg
xchg
mov
clc
sub
pop
xor
cs
into
cmpsb
xor
in
or
mov
mov
sbb
shlb
std
sub
cmp
stos
mov
mov
and
clc
test
mov
shrl
insl
pop
cmpsl
mov
fptan
scas
mov
jb
add
shll
movsl
ljmp
mov
dec
add
inc
mov
shll
or
mov
xor
arpl
xor
xchg
loopne
or
out
fldenv
stc
loop
dec
call
dec
fcoms
adc
pop
icebp
rcl
xrelease
clc
push
push
ffree
and
or
enter
out
jp
repz
cmpl
mov
jle
test
fldl
inc
cmp
arpl
das
cwtl
sbb
mov
subl
fldt
insb
jo
mov
cmc
jecxz
into
stc
cli
inc
aad
ret
push
test
adc
pushl
jns
push
sbb
add
jnp
jp
cmp
xchg
inc
push
sbb
sbbl
je
and
xchg
cmovb
adc
and
int3
mov
in
decl
or
cltd
cmp
into
mov
mov
data16
scas
lret
inc
andb
pop
in
pop
punpckhdq
push
ljmp
pop
enter
shrb
adc
xchg
xchg
and
cli
sbb
mov
cmc
mov
rcr
cmpsb
mov
enter
add
pop
rclb
dec
jge
inc
outsl
sub
push
int
gs
rolb
push
mov
and
mov
data16
cli
add
leave
add
aas
cmovb
leave
shrl
xchg
sub
aas
pop
pop
idivl
push
enter
movsl
lahf
imul
push
sbb
cmp
push
xchg
sti
pop
or
in
fdivl
jns
ret
xchg
outsl
sub
jno
pop
jle
sbb
jnp
gs
jne
push
or
xchg
adc
ljmp
aad
std
pop
rol
shll
repnz
adc
mov
add
xor
sbb
mov
mov
in
sarb
mov
cltd
rcl
outsl
jns
cmp
les
insl
loop
mov
adc
sub
into
jmp
mov
xor
add
sbb
pushf
popa
add
inc
push
pop
popa
in
pop
loopne
lds
cld
mov
imul
rsm
ret
push
mov
push
stc
mov
mov
jne
mov
push
loop
stos
scas
and
mov
aaa
call
shll
imulb
mov
add
mov
test
push
pushf
sub
lods
mov
mov
std
es
sbb
inc
dec
xor
addr16
insl
dec
in
or
cmpb
sbb
inc
test
add
test
cmpsb
movsb
sub
or
push
bound
fistps
push
dec
or
xorb
dec
mov
pcmpeqw
psrlq
out
test
lahf
repnz
es
fstpt
mov
xor
add
gs
ret
push
inc
roll
rorl
mov
xor
mov
add
gs
add
shrl
shlb
fs
mov
insl
or
call
add
pushf
mov
cwtl
sub
shll
cli
jns
adc
rcrl
jno
adc
jge
enter
cmp
ljmp
ss
adcb
add
inc
sti
push
test
cmovge
shrl
lret
mov
and
or
std
shll
mov
and
adc
dec
aaa
je,pt
rcrb
iret
imul
pop
ljmp
dec
adc
mov
ds
xor
push
arpl
and
adc
dec
mov
xchg
inc
lcall
push
aas
xchg
loope
mov
sbb
mov
sbb
mov
aas
adc
xchg
loop
mov
int
pop
call
popa
aam
dec
outsl
lods
cli
jb
sub
inc
inc
inc
mov
test
shll
in
xchg
push
pop
cs
cmp
ja
mov
shlb
cmpsb
out
jb
push
data16
mov
push
loopne
and
dec
fcoms
xlat
sbb
scas
sub
mov
call
mov
shl
fisttpll
push
cmc
into
imul
paddw
aaa
inc
mov
xchg
pop
jl
dec
ret
sub
jb
mull
and
or
iret
repz
dec
add
inc
or
mov
movsb
lock
mov
out
mov
push
xchg
inc
outsl
mov
das
sub
adc
sahf
sub
push
inc
inc
lea
push
mov
dec
xor
cmp
push
loope
mov
arpl
cmp
in
cmp
or
xchg
mov
out
stos
jno
sub
adc
ficompl
in
lahf
es
shll
xchg
pop
pop
mov
push
aam
aam
jno
sbb
int3
popf
insb
popa
xchg
in
std
pusha
and
jg
mov
fsubrl
pop
xor
cmp
roll
cmpsb
test
or
xchg
mov
mov
rcll
out
add
mov
addr16
daa
test
xchg
mov
add
insl
cmp
insb
mov
imul
mov
and
test
jmp
cld
fcomi
adc
daa
js
std
push
jbe
cmp
mov
loope
bound
push
jo
and
jl
pushf
mov
pop
insl
shl
add
mov
add
lea
daa
pop
ljmp
pop
adc
shl
pop
cmp
aam
loope
ljmp
dec
int3
incb
cmp
mov
pushf
mov
cld
cmp
xorl
mov
cmp
outsb
push
push
icebp
sbb
add
mov
movsb
xlat
xor
add
das
pushf
lret
xchg
mov
loope
test
and
push
lods
or
mov
cmpsl
mov
sahf
dec
push
or
or
inc
or
mov
jnp
aam
add
sbb
iret
sbb
hlt
ja
pop
aas
adc
test
outsl
inc
shrb
adc
dec
xchg
jno
cs
xor
pushw
fldenv
scas
cmc
cmpsl
lods
orb
out
push
xchg
mov
fadd
outsb
or
cmpsl
jne
hlt
outsl
ret
ret
jnp
inc
inc
cmp
aaa
popf
jl
or
popf
mov
push
les
xor
daa
mov
mov
mov
sbb
push
sbb
mov
mov
test
mov
leave
pusha
shrb
call
xchg
in
popa
adc
jno
dec
mov
jge
outsb
roll
out
fdivl
mov
add
ljmp
jge
sahf
insl
aam
stc
mov
xchg
inc
sti
loope
fwait
inc
data16
jmp
add
decb
push
fidivl
rorb
xchg
sbb
outsb
sub
mov
int3
mov
aad
mulb
les
mov
jmp
inc
push
gs
lret
les
out
int3
loopne
sbb
add
cs
jnp
push
jae
and
aad
popa
push
mov
inc
js
sub
add
mov
dec
xchg
pop
cwtl
jns
sbb
test
mov
jg
xchg
push
scas
and
jecxz
mov
cmc
pop
xchg
pop
popf
jno
sub
jnp
call
insb
aam
addr16
adc
dec
push
xor
push
ficoml
jb
mov
jbe
test
orb
mov
inc
nop
pavgb
mov
pop
loopne
daa
and
loopne
dec
inc
test
push
jl
pop
push
mov
xlat
adc
pop
add
ljmp
std
mov
js
divb
ja
dec
out
int3
add
sub
and
push
mov
sbb
dec
push
pop
test
and
iret
std
movsb
addr16
mov
add
stos
inc
mov
push
jbe
lock
or
pop
ds
into
xchg
in
out
mov
adc
and
add
sti
repnz
ljmp
adc
and
push
int
dec
adc
sbb
repz
ficomps
mov
mov
pop
jo
fs
mov
aam
leave
jbe
inc
loop
and
rclb
cmp
jmp
imul
cmp
and
pop
jmp
movsl
lret
test
xchg
push
xchg
test
or
mov
pop
dec
in
or
ficompl
clc
stos
push
ficoml
mov
inc
xchg
addr16
xor
fcoml
rcl
mov
jb
sahf
loopne
movsl
adc
or
jg
sbb
adc
inc
jp
and
cmp
sbb
mov
and
int3
out
sub
insl
pop
jno
pop
xor
icebp
mov
mov
dec
sbb
xorl
mov
leave
andl
outsl
mov
jns
movl
les
push
loop
mov
jbe
lods
enter
repz
icebp
or
adc
in
adc
add
fs
mov
lods
jmp
jle
mov
data16
movsb
out
cli
in
addr16
and
add
and
insl
cld
jmp
cmp
mov
inc
testb
cmp
pop
cmp
push
push
xchg
mov
popl
or
push
stc
xchg
inc
xchg
pop
cmp
scas
ds
xchg
into
xor
loope
repz
jne
shlb
outsb
mov
jg
xchg
jmp
cmp
imul
xlat
movsl
xchg
iret
mov
mov
sbb
jae
jge
ret
jg
add
xlat
mov
int3
pop
in
xchg
hlt
inc
dec
mov
stos
mov
loopne
out
dec
xor
adc
call
testb
cltd
jle
stos
sti
shlb
loope
scas
or
cmp
das
data16
fistps
xor
cltd
es
js
mov
xor
mov
std
incb
jp
dec
pusha
push
inc
jns
std
lock
lcall
std
sub
adc
pop
jge
mov
insl
icebp
scas
xchg
movsl
lods
dec
fucom
cs
add
cmc
mul
mov
stos
jo
cmp
and
or
xorl
loopne
xchg
sbb
adc
xchg
lods
sbb
pop
add
sbb
fucom
popf
xchg
mov
test
decl
mov
pop
ret
jp
jne
xor
push
shlb
cmc
imul
outsl
mov
mov
les
push
mov
mov
notl
cmp
mov
imul
imul
fdivr
enter
mov
lock
clc
xchg
or
push
adc
pop
iret
push
in
jno
mov
mov
push
iret
xor
clc
or
adc
mov
sub
jge
and
lahf
lcall
mov
jle
pusha
mov
sti
mov
cld
pop
jp
sub
inc
cmp
mov
mov
xor
mov
inc
mov
hlt
pushf
in
setp
mov
test
add
lcall
xorl
in
fsubl
dec
mov
sub
adc
test
imul
mov
push
icebp
jle
sub
test
movsb
mov
pop
cmpsb
in
dec
lock
push
imul
pop
push
mov
popa
aad
and
test
jge
xchg
xchg
xchg
adc
je
push
and
cmpsl
jnp
xor
add
lods
rorl
cmp
cmpsl
and
cmp
jbe
je
cwtl
pop
mov
stos
lods
mov
lods
hlt
dec
adc
ss
mov
aad
jg
data16
lahf
mov
push
sub
dec
into
mov
mov
mov
push
pop
sbb
es
cmpsb
add
orl
adc
insb
stc
add
mov
cli
ds
or
or
push
pop
mov
xor
pop
rcr
lret
pop
jns
data16
mov
cmp
shl
fs
in
call
test
clc
in
lock
pop
pop
lea
cltd
xchg
cli
test
divb
cmp
adc
xchg
or
gs
inc
lds
mov
ffreep
and
or
mov
lcall
loop
sub
adc
push
mov
xchg
or
ficompl
ret
mov
mov
push
popa
sarb
out
jmp
pop
or
mov
add
lea
push
fwait
pushf
dec
mov
icebp
mov
push
imul
fwait
imul
add
nop
rol
shl
mov
pop
lock
loop
adc
lea
and
dec
pop
xlat
ret
xor
addr16
enter
sub
jbe
aad
in
xorl
clc
sbb
loope
mov
adc
push
stos
adc
xchg
out
mov
jmp
xchg
or
push
lret
shlb
adc
dec
push
adc
sahf
jnp
mov
fcmovnbe
xlat
and
pop
stos
sub
cwtl
cltd
addr16
sub
xchg
stc
rol
lea
pop
or
jle
jne
jecxz
mov
outsl
das
in
adc
mov
mov
movsl
adc
or
xchg
lea
sbb
arpl
sarl
ljmp
loope
mov
xchg
xor
jnp
inc
sbb
dec
repnz
enter
call
sbb
mov
and
jbe
push
sahf
jge
add
cmp
test
add
loop
jne
fstp
ret
bound
aaa
jnp
std
loop
sarb
mov
stc
rol
mov
dec
or
and
pop
xchg
sbb
push
loopne
and
imul
idivb
inc
jg
in
es
sub
or
lret
int
add
test
fldpi
aas
xchg
sub
loopne
imul
and
hlt
repnz
jns
repz
add
push
pop
add
stos
add
icebp
dec
xor
cmp
mov
dec
imul
or
mov
mov
inc
lahf
hlt
mov
cmp
mov
rcrb
cwtl
or
fwait
ja
push
cld
stos
mov
lock
adc
shlb
jmp
sbb
inc
cmpsb
in
in
cld
stos
leave
add
cmpsb
mov
aad
outsb
and
xor
inc
mov
ljmp
cmp
push
push
push
and
clc
aam
cmp
int
mov
fidivrl
std
stos
and
cs
jo
pop
cmp
loope
cld
sarl
mov
daa
adc
mov
aas
ds
shlb
pop
mov
mov
ja
nop
xor
sub
test
hlt
xchg
loope
add
jno
mov
adc
mov
xchg
xor
fld
pop
cmpsb
mov
pop
inc
xchg
pushf
inc
in
or
out
or
ret
jecxz
bound
cmp
and
pop
lahf
inc
and
ret
sbb
jb
xchg
add
pop
adc
or
adc
pusha
adc
or
loope
ljmp
and
add
cs
cmp
cmp
aas
sbb
lea
inc
sub
xchg
inc
faddl
mov
jmp
and
jo
push
fdivrp
xor
dec
sbb
push
dec
and
xchg
lock
out
std
cmp
xor
dec
xchg
push
pop
jg
xchg
sub
cmpsb
lods
ds
scas
ja
fiaddl
orb
sbb
je
mov
out
xlat
push
push
adc
ds
ds
push
mov
bnd
sbb
and
xchg
sti
ss
mov
add
call
dec
mov
lea
mov
jle
push
pusha
imul
fisttpl
subb
sti
insb
push
ljmp
imul
adc
les
stos
and
in
xchg
out
pop
outsl
dec
push
adc
movsl
inc
insl
dec
es
inc
xor
mov
aad
jbe
lea
int3
je
dec
jmp
jle
adc
mov
xor
outsb
or
scas
iret
bound
cmp
cltd
ds
out
add
in
das
mov
and
jmp
mov
int
cmpsl
sub
adc
push
mov
inc
daa
sub
push
int
dec
lahf
sarl
test
mov
dec
sbb
pop
pop
or
je
fdivrl
inc
addr16
out
or
xchg
add
mov
pop
fnstcw
jbe
daa
orl
mov
shll
out
xor
push
in
fwait
add
mov
jns
or
addr16
inc
pop
or
roll
out
stos
ss
inc
jg
jp
popa
loopne
mov
xchg
sbb
insl
xchg
xorb
mov
fisubs
mov
scas
or
mov
push
in
mov
xchg
lea
lcall
inc
sbb
in
mov
in
sbb
inc
aad
xchg
es
inc
repnz
push
test
add
dec
int
inc
jbe
fcmovnu
scas
in
shlb
idivb
xor
cmpsb
adc
push
outsl
lea
adc
or
sub
and
xchg
loope
jle
push
mov
icebp
add
in
xchg
in
ds
push
mov
mov
test
mov
sbb
mov
insb
or
outsl
idivb
int
and
mov
sbb
js
scas
inc
leave
mov
push
mov
dec
rcr
cmp
jge
push
xor
rep
popa
mov
push
ja
xchg
push
fiaddl
mov
jmp
push
cli
js
jl
pop
and
lock
inc
scas
sbb
imul
jno
lods
icebp
outsl
xchg
hlt
lret
xchg
lcall
xchg
aaa
mov
scas
xchg
pop
cmp
jg
lods
pop
cld
add
xor
in
lods
popf
add
dec
lods
out
mul
fmuls
push
adc
outsl
push
push
push
mov
test
jle
pop
mov
push
xor
mov
push
push
mov
jbe,pn
lods
movsl
ljmp
ljmp
pop
add
divb
addl
repz
sarl
and
push
stos
mov
and
cmp
jecxz
jp
cli
inc
sub
or
or
cmc
xchg
test
imul
fistps
arpl
insl
xchg
inc
jle
aam
inc
fs
ret
cmp
cwtl
or
out
cwtl
jl
jno
in
cmc
jne
adc
inc
push
lahf
insb
adc
cwtl
mov
mov
les
and
push
cmp
mov
jae,pt
in
cmp
mov
cmp
jne
or
mov
andl
mov
adcl
xor
xorl
xor
sub
sub
mov
mov
xor
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
jmp
mov
and
out
mov
fnsave
in
cmp
pop
addl
xor
jp
lock
lock
xchg
xchg
out
and
jne
cltd
jo
xchg
fwait
in
cmp
sbb
bound
mov
sbb
cltd
inc
out
sbbl
dec
cld
jmp
lods
fs
mov
inc
idivl
xor
jnp
insl
fwait
arpl
mov
adc
jmp
clc
jae
mov
mov
iret
pop
cmova
rcr
sub
mov
fstpt
and
and
sti
jge
sub
rorb
out
xchg
not
pop
imul
into
lods
das
mov
rol
int3
sti
imull
test
cmp
repnz
test
popf
inc
mov
or
mov
stos
incb
jecxz
mov
lds
movzbl
mov
fst
gs
in
subb
dec
in
arpl
orb
and
int
mov
call
mov
pop
outsb
ja
divl
pop
mov
mov
pop
icebp
not
pop
gs
data16
dec
out
clc
in
mov
xor
js
mov
add
jae
loop
jecxz
fmuls
cs
push
push
xor
xlat
ljmp
stos
jne
mov
inc
in
in
xchg
lods
mov
insl
xor
adc
cmpsl
or
lret
ret
stc
mov
mov
xor
in
pop
shll
xor
or
es
adc
mov
sbb
cmp
cli
inc
xor
pop
clc
xor
inc
push
xchg
pop
adc
addr16
push
bound
push
and
jns
vpshufd
scas
ret
or
dec
jmp
in
xchg
push
or
xor
push
mov
sub
adcb
mov
pop
add
mov
mov
out
test
mov
sbb
or
or
es
fisubs
fadds
fildl
xchg
addl
jae
ds
rep
and
and
mov
gs
sub
mov
xchg
jns
push
repz
jns
es
mov
outsb
and
out
push
mov
mov
lret
in
jge
mov
ror
push
jmp
ljmp
cmp
je
or
popf
lods
push
shlb
lret
mov
out
sbb
sti
adc
imul
mov
sbb
pop
mov
ja
test
cwtl
dec
outsl
ss
sahf
xchg
jo
dec
sub
repnz
jae
aas
clc
mov
dec
adc
jbe
xchg
pop
loop
mov
mov
fs
repnz
xorl
aad
jns
mov
pop
testb
mov
rclb
mov
repnz
and
sub
sub
dec
mov
jecxz
and
pop
std
jmp
mov
xor
shl
sub
call
and
xchg
insb
adc
and
xlat
inc
pop
sub
stc
je
adc
jne
sbb
arpl
loopne
orb
andb
cmp
jae
push
jecxz
xchg
push
pusha
mov
fcomip
adc
loopne
into
mov
add
je
sbb
test
fs
or
or
push
jecxz
cmpsb
imul
sbb
pop
int3
stc
cmpsl
cmp
mov
arpl
fistl
dec
repz
add
xchg
push
and
pop
std
out
xchg
negl
push
cmp
xchg
jp
cltd
jle
sbb
xchg
repz
lods
das
ret
lods
mov
adc
xchg
push
les
vpminub
mov
mov
hlt
sub
dec
mov
femms
test
jbe
cmp
add
daa
fstps
out
hlt
xchg
loop
mov
dec
adc
sahf
inc
mov
add
pop
fdivs
push
and
lcall
stos
ss
cmp
jp
push
inc
nop
xchg
cmp
scas
cwtl
xchg
dec
ja
icebp
js
pop
or
bound
mov
sub
mov
jg
push
fwait
jnp
daa
aas
jp
jmp
xor
cs
ret
loopne
push
mov
dec
push
in
jge
insb
in
enter
aas
sub
mov
xchg
push
pop
repnz
es
ss
cmc
pop
int
in
or
fildl
nop
add
aas
nop
cmp
imul
sub
pop
shlb
ds
lahf
scas
inc
jl
push
pop
cmc
cs
pushf
mov
lret
dec
repnz
insl
and
pop
jno
arpl
lcall
adc
psubsw
and
adc
pop
hlt
fmull
ja
sub
mov
sub
adc
xchg
out
stos
das
into
in
sub
outsb
mov
cltd
add
push
and
int3
js
nop
imul
ljmp
out
pop
xor
add
adc
js
jne
or
imul
dec
out
aam
and
sbb
adc
lea
movsb
jb
fistps
rorb
rcr
in
sub
mov
cmpsl
inc
mov
cmp
xchg
cmpsb
or
cmp
outsb
leave
lods
push
movsl
imul
test
shrl
das
and
add
xchg
out
inc
movl
adc
mov
xor
shll
mov
outsl
inc
mov
ljmp
sub
pusha
or
aas
mov
addl
sub
andb
pushf
and
adc
adc
pop
popf
popa
adc
xor
orb
and
cmc
adc
mov
in
xor
push
movsb
into
xchg
hlt
mov
adc
jae
mov
sbb
mov
mov
jge
stc
mov
mov
push
stos
ret
sbbl
mov
push
pop
sbb
mov
cwtl
sbb
cmc
enter
jmp
adc
push
cmpsb
lret
ss
or
add
or
mov
jo
and
lret
and
mov
inc
mov
xchg
stos
les
cltd
std
hlt
cmp
mov
inc
clc
cli
imul
adc
dec
adc
adc
jne
ds
xor
add
subb
pop
insb
xchg
ds
rorl
xor
call
mov
movsl
das
sub
shrl
mov
inc
repz
jno
jae
fisubrs
popa
stos
cmp
rol
push
pop
mov
dec
add
repz
aas
xchg
dec
dec
outsl
shr
invlpg
adc
aaa
jbe
inc
xchg
mov
out
add
mov
xlat
stos
add
pushf
in
decl
mov
ljmp
roll
push
std
mov
mov
scas
fistps
lock
pop
sbbb
daa
int
cmp
mov
insl
xchg
outsb
cmpsb
mov
iret
xlat
add
daa
ret
call
adc
scas
enter
mov
sub
mov
ret
inc
sub
cli
sub
es
es
mov
cmpsl
xchg
ja
adc
insl
int
inc
lahf
mov
dec
push
lods
lret
movsb
mov
data16
sub
mov
cwtl
jmp
xorb
sub
insb
gs
arpl
mov
jmp
inc
out
add
sbb
nop
mov
out
ret
sbb
test
leave
jmp
adc
daa
sbb
shr
insb
imul
xchg
ja
sbb
xchg
pop
dec
jno
mov
loop
cmpb
or
add
mov
ret
sbb
pop
and
push
pop
pop
ja
mov
dec
ds
jbe
test
out
and
mov
mov
xchg
jbe
and
mov
ss
jg
sub
mov
push
pop
mov
repnz
jb
mov
pop
xor
jmp
std
jp
sub
mov
in
xchg
jb
aad
cmp
adc
xor
or
xor
inc
ror
aad
cli
dec
cmpb
mov
ffree
inc
sub
mov
jecxz
addr16
pop
cmp
ss
lahf
test
push
mov
lds
iret
fcoms
push
inc
sub
insb
clc
lret
push
xchg
add
mov
call
fldl
add
test
push
inc
jne
and
mov
mov
sub
fstp
xchg
lods
lods
push
mov
mov
jne
xchg
lea
cmpsl
pop
popa
adcb
xor
jle
sar
dec
hlt
add
mov
stc
inc
adc
xor
rorb
fcomps
fdiv
jp
dec
xchg
or
out
jmp
push
loop
xchg
mov
mov
cmp
scas
push
aam
enter
mov
idivb
in
cmp
repz
adc
mov
adc
ss
ja
pop
das
out
and
adc
add
rcrb
pop
mov
mov
pop
xchg
sbb
lret
dec
push
sbbl
aas
in
add
mov
lds
lock
fstpl
jle
jne
ds
add
sub
aam
or
pop
jbe
adc
lea
out
scas
jg
and
jp
je
push
loope
push
cmc
inc
push
scas
rorb
aad
imul
sub
andl
outsb
push
inc
subb
sar
pop
jo
and
jl
jbe
enter
icebp
jle
fisubrs
xor
mov
jmp
test
aas
fwait
outsb
pop
push
jbe
ds
xor
push
add
daa
loope
inc
mov
push
mov
call
cmp
inc
jge
cmpl
mov
enter
dec
mov
jmp
mov
pop
sarl
add
arpl
out
add
mov
push
or
sub
mov
and
jnp
add
or
pop
jae
in
jno
mov
pusha
and
jno
lds
int3
jno
sbb
mov
lea
cmp
rcr
inc
mov
lods
push
rcrb
imul
add
aaa
ret
push
cmpsl
jns
pop
ret
sub
fisttpll
insl
push
cmp
insb
pop
lods
inc
jle
mov
lods
sub
xchg
xchg
or
jb
or
xchg
add
jge
mov
imul
push
mov
adc
mov
cmpsb
lret
mov
lcall
cld
add
dec
cmpsl
xchg
mov
inc
mov
dec
fmulp
nop
lods
and
in
add
mov
mov
add
cmp
iret
mov
mov
mov
push
push
fsubl
sub
scas
adc
push
mov
lahf
add
sub
mov
pusha
mov
and
add
add
std
pop
ljmp
or
gs
fldln2
lret
mov
clc
push
je
pop
cmp
aad
adc
mov
xchg
push
adc
xchg
iret
inc
push
bound
mov
rcrl
adcb
push
add
add
mov
subl
dec
mov
mov
adc
popf
xor
mov
lods
imul
imull
fcmovnb
xor
hlt
dec
fdivrs
pop
cld
pop
out
mov
pop
adc
mov
pop
sub
pop
popa
push
icebp
jge
xchg
insb
shrl
in
or
xor
out
mov
sub
ja
and
imul
dec
add
loopne
loope
sub
fucomi
punpcklwd
pop
or
movsl
or
test
pop
inc
incl
idivb
in
jmp
out
mov
insb
stos
cmpsb
hlt
pop
mov
xor
sub
mov
addr16
addr16
out
divb
sbb
test
mov
addr16
xor
aaa
jns
xlat
dec
xor
jbe
push
inc
jge
pop
or
dec
or
mov
inc
js
xor
clc
cld
out
xchg
pop
aaa
aaa
add
dec
movsl
aam
ffreep
loopne
jp
cs
jg
es
mov
push
pop
outsb
add
fucomp
sbb
jge
fsts
mov
ds
jb
pushf
mov
and
iret
in
loop
mov
out
scas
cmpsb
outsb
dec
mov
pusha
shl
repz
sarl
pop
test
in
mov
loop
imull
adc
mov
jecxz
push
or
jo
or
add
push
or
push
decl
shlb
fisubl
pop
dec
sbb
push
int3
mov
mov
xor
daa
aas
imulb
test
xor
mov
pop
cmp
xor
jbe
push
dec
mov
mov
cli
and
pop
dec
mov
mov
xor
push
or
aaa
sarb
ret
mov
insb
repnz
popf
mov
test
sahf
fwait
std
xlat
enter
mov
mov
add
xor
mov
dec
cmpsb
mov
rcr
je
loope
roll
test
inc
cs
stos
dec
je
xchg
fdivr
clc
inc
push
fistl
xchg
mov
mov
and
int
fs
cmpsb
cmpsb
mov
mov
xchg
mov
add
sahf
pop
or
inc
adc
cmp
leave
in
add
push
cmp
adc
shll
push
ret
inc
sbb
orl
sub
inc
jge
jmp
aaa
imul
into
jecxz
shlb
outsb
inc
scas
jmp
test
push
divl
int
push
and
mov
test
dec
push
icebp
push
mov
inc
mov
dec
sub
add
fstpt
mov
mov
push
pop
pop
data16
sub
cmp
in
aad
aam
sarl
outsl
gs
sub
lds
adc
xchg
mov
adc
pop
inc
push
mov
scas
cmc
pop
pop
xchg
ss
outsl
mov
xchg
fidivrl
rcrb
mov
dec
adc
addb
push
pop
fsubr
cmc
rorl
popf
cmp
mov
push
sbb
outsb
leave
fsubr
push
rcrl
inc
push
adc
jne
movsl
fs
ficomps
inc
pop
cwtl
mov
add
cmp
pop
orl
cmp
dec
sbb
imul
jnp
xor
adc
jns
retw
or
cwtl
xchg
das
test
movsl
cwtl
cli
push
fdiv
arpl
jg
mov
cmp
adc
pusha
dec
out
loopne
or
lds
or
jp
mov
mov
and
xor
sub
sub
sbb
pop
rcrl
int3
or
or
dec
clc
aam
es
sbb
jp
push
pop
cmp
movsl
stos
push
adc
leave
push
jecxz
pop
mov
add
jae
cmpsl
insl
xchg
mov
js
sarb
cmp
aas
clc
mov
shr
pop
jo
pop
add
pusha
leave
or
ret
sahf
mov
mov
inc
sub
in
xchg
test
loope
lock
xchg
in
jno
movsb
xchg
sbb
or
push
popa
comiss
mov
push
outsb
pop
xor
je
out
cmpsb
mov
or
stos
sub
fmuls
hlt
shll
xor
sbb
popf
jne
sub
sbb
sbb
push
xor
cltd
xchg
popaw
lock
incl
ret
push
into
dec
mov
clc
dec
lret
mov
rcll
mov
adc
xor
inc
jg
lcall
popf
je
pushw
fwait
hlt
mov
pop
inc
gs
mov
mov
xor
pop
stc
ja
jmp
jne
pop
sbb
int3
ret
inc
fucomi
pop
xor
idivb
mov
pop
out
mov
dec
pusha
fmuls
push
int3
test
sub
pop
xchg
ret
out
lods
sti
adc
pushf
sub
jb
pop
or
xor
pushf
orl
fadd
cmpsl
mov
cmp
arpl
mov
lcall
jb
xor
imul
mov
jno
xor
pop
sbb
imul
push
jl
sub
in
daa
adc
enter
pop
xchg
mov
ss
xchg
and
dec
adc
aas
sub
test
inc
ja
ss
sub
jmp
add
paddsb
mov
cmp
nop
out
sbb
pusha
shl
bound
inc
xor
fst
mov
repz
jns
adc
mov
popf
jns
push
jns
jb
xlat
xchg
in
data16
sar
jno
clc
xlat
call
hlt
or
movsb
mov
cmc
and
js
mov
jg
leave
in
push
es
pop
xchg
sub
dec
cwtl
pushf
movl
pop
push
and
push
inc
pop
cmp
fdivl
shll
ret
sub
pop
data16
adc
and
sbb
notl
push
xor
mov
cli
push
mov
push
movsl
xchg
mov
sbb
xlat
shll
rorb
shl
pop
or
sahf
xchg
and
and
stos
xchg
dec
sub
gs
test
xchg
mov
cmc
mov
pop
pop
mov
xchg
addb
cwtl
mov
rclb
fwait
jmp
xor
add
in
and
loop
jae
jno
inc
shlb
lahf
sub
mov
testb
mov
add
mov
sbbb
add
mov
and
sbb
xchg
inc
xchg
jbe
aam
in
int
movlps
mov
ss
add
cmp
cmp
jns
fstp
pushf
push
popf
mov
mov
sti
mov
jle
outsb
in
sbb
push
das
das
fildl
and
jecxz
or
ds
push
out
imul
pop
popa
fwait
inc
aam
cmpsb
adc
xlat
mov
ljmp
cs
into
inc
jae
pop
push
cmp
in
rcl
and
mov
pop
xor
scas
in
mov
or
jb
and
leave
xlat
xor
aaa
lcall
ret
cmp
rorb
inc
xor
xchg
out
insb
and
cltd
add
int
pop
xlat
je
or
mov
ret
pop
inc
jno
in
mov
fwait
cmpsb
sti
jmp
sbb
xchg
outsl
je
popf
out
pop
lret
bt
xchg
out
add
push
rolb
sbbl
repz
push
adc
jbe
testl
and
push
cmp
and
xor
aam
ss
sub
fistpll
cltd
ljmp
dec
das
xchg
xchg
jl
out
xor
dec
sbbl
mov
xchg
jo
fwait
das
loopne
cmp
pop
pop
mov
add
cmp
nop
test
std
mov
push
es
clc
outsl
push
add
fwait
pop
mov
pushf
mov
inc
dec
ljmp
mov
outsb
cmp
imul
lock
cmp
pop
fmull
pop
imull
stos
fwait
mov
push
ds
ds
sti
xor
push
and
inc
dec
loopne
ss
sub
jg
icebp
mov
inc
enter
mov
mov
fcoml
das
pop
faddp
xchg
sub
stos
push
inc
mov
mov
pop
mov
sarl
fnstcw
jmp
mov
lret
sti
xor
inc
ret
dec
jnp
imul
push
mov
rcr
ds
aam
mov
cli
fisttpl
pusha
gs
cmc
push
or
push
out
ja
leave
jne
fmulp
xlat
cmp
sub
xchg
xor
shll
sbb
jl
icebp
pop
mov
ret
mov
ljmp
or
testl
daa
cmp
sbb
and
cltd
mov
addb
pop
lahf
test
fisttpll
cmp
jbe
xor
mov
mov
loop
mov
insl
stc
repz
cli
cwtl
test
ret
popl
or
sbb
push
lahf
jmp
fiaddl
mov
pop
dec
pop
icebp
daa
sbb
sbb
rcrb
xchg
icebp
pusha
jmp
nop
cmc
inc
in
xchg
push
push
dec
out
cli
xor
jnp
nop
push
jns
ss
adc
sub
scas
mov
or
sbb
mov
sub
rol
push
adc
pop
dec
xor
fdivl
in
mov
rcll
data16
js
testl
nop
push
mov
ja
dec
cmpsl
mov
xor
outsl
xor
lret
jo
lahf
push
inc
mov
imul
mov
adc
jp
and
nop
sahf
inc
lahf
movsl
test
mov
sar
push
pop
imul
enter
dec
decb
cmp
call
mov
pop
jb
mov
in
xchg
pop
stos
clc
mov
pop
bound
test
xchg
in
push
out
mov
sbb
scas
mov
and
cli
jae
daa
adc
inc
adc
push
ljmp
mov
pop
ret
add
push
sub
rcrb
adc
nop
fwait
adc
int
std
lcall
aas
pop
and
dec
orl
sti
enter
add
xor
ljmp
pusha
dec
addl
and
daa
push
or
sub
int
in
jl
or
mov
sbb
adc
lcall
ds
loope
int3
call
daa
pop
jge
xor
movsb
arpl
sub
jmp
fbld
dec
stc
dec
rorb
sbb
jb
mov
and
pushf
iret
and
imul
sub
push
inc
pop
pop
mov
into
or
andl
enter
add
mov
pop
pop
lods
leave
mov
sub
in
dec
mov
jne
repnz
xor
push
out
xchg
mov
inc
hlt
dec
inc
fmull
js
lret
cld
pop
jnp
pop
ljmp
cwtl
repnz
mov
fidivs
jae
lods
adc
fs
out
adc
pop
sub
xchg
and
sub
test
lret
and
pop
daa
outsb
xchg
and
mov
jg
bound
sbb
rolb
in
cmpsb
imul
adc
xchg
es
adc
bound
in
mov
addb
pop
in
inc
jb
xorl
mov
es
fwait
or
mov
xor
mov
test
xchg
adc
lock
push
ret
rcll
notl
bound
inc
fistpll
dec
or
movsb
xor
add
jno
push
leave
iret
push
adc
movsb
ficoml
jne
int
pop
test
or
loope
cmp
jo
andb
cmpsl
sub
fld1
mov
dec
jo
or
push
call
ret
std
push
fcoml
mov
jae
push
sbb
repz
xchg
cmp
mov
or
mov
adc
hlt
das
cmpsb
test
jmp
bound
mov
xchg
push
and
ds
jb
bound
push
sahf
mov
mov
push
pop
lret
scas
lea
mov
rclb
mov
adc
lahf
shrb
pusha
ds
aam
add
xchg
jbe
or
dec
out
fld
enter
xlat
js
subl
movsl
push
pop
loope
sti
adc
or
xor
mov
in
pop
jp
test
stc
daa
pop
pop
bound
je
movsl
xor
sub
inc
lret
notl
fcoms
push
and
hlt
out
popa
dec
out
mov
imul
or
scas
sbb
movsl
pushf
adc
lcall
adc
lock
mov
adc
dec
sub
sahf
pop
push
and
test
aad
inc
and
loope
sub
ficomps
lret
loop
stos
add
jno
les
ds
dec
mov
xchg
cmp
push
adc
sbb
sbb
sbb
fisttpl
push
fs
adc
sub
fstpl
notb
cmpsl
scas
fxtract
stos
hlt
dec
sub
adc
or
inc
rol
push
imul
test
sarb
adc
sarl
sbb
mov
pop
pushf
pop
jle
and
shlb
mov
enter
std
push
icebp
pusha
popa
dec
cmc
in
rcl
test
scas
jmp
sbb
adc
out
add
fsubrp
cli
fisubrl
nop
sti
jmp
xor
pop
outsl
mov
out
push
jg
sub
inc
sub
in
loop
data16
movsb
mov
int3
pop
lods
mov
lds
xchg
popa
mov
iret
aas
dec
dec
test
push
sub
fadds
repz
cmp
and
mov
out
pop
mov
scas
fucomp
shrl
mov
adc
mov
test
push
add
pop
daa
repnz
or
lock
or
mov
or
outsb
ror
jp
dec
sbb
xchg
mov
arpl
cmpsl
movsb
popa
jecxz
and
daa
xchg
push
fnsave
push
cmp
jo
adc
popa
jl
sub
out
fwait
pop
outsl
or
jge
call
mov
pushf
outsb
data16
jecxz
push
lret
jle
shrl
xor
outsb
gs
pop
push
mov
sahf
roll
cmp
push
push
sub
fmull
lock
lret
and
out
call
or
sub
dec
adc
mov
mov
nop
jbe
adc
xor
int
repz
mov
dec
inc
test
repz
pop
push
or
loop
jle
rcr
pop
sbb
enter
xchg
xchg
shlb
pop
ss
sarb
rcr
push
add
fnstsw
call
add
push
addr16
pop
sbb
decb
push
mov
aam
imul
scas
aad
in
jb
and
adc
fbstp
shrl
cmp
xchg
das
mov
dec
fistpll
cltd
fwait
lock
push
lcall
sbb
and
pusha
push
pushf
por
xchg
xchg
loope
cli
rcll
xchg
mov
insl
xchg
lret
xchg
leave
imul
jmp
jae
pop
fsubrl
jnp
loopne
pop
cmp
push
jne
std
mov
arpl
mov
testb
mov
scas
sbb
adc
jmp
out
inc
sub
jecxz
mov
call
pop
xor
dec
ror
leave
pop
xchg
xor
cmpsb
addr16
loopne
cmp
mov
aad
loope
fdivs
mov
mov
mov
cmp
stos
scas
sbb
aad
xor
mov
test
inc
fstps
fcmovbe
jns
insl
cmpsl
push
jns
jae
rorl
sbb
jge
and
mov
mov
repz
fs
cmc
sahf
adc
testb
pusha
decb
push
sarb
or
test
sub
cmp
lods
into
mov
cmp
mov
sub
add
mov
inc
mov
mov
adc
leave
xchg
mov
add
dec
cmp
sbb
xchg
lahf
out
mov
test
popf
inc
add
out
mov
int
pushf
test
jns
flds
sbb
lea
aad
addr16
lods
sahf
mov
xchg
mov
cmpsb
cwtl
das
jge
jae
dec
mov
sbb
mov
aaa
inc
push
fcmovnu
subl
fnstcw
sub
xchg
aam
mov
adc
push
out
pusha
cld
test
fsub
scas
int
jle
mov
xchg
xor
and
lea
mov
inc
lods
push
dec
aam
mov
mov
pop
and
arpl
add
pop
outsb
mov
ret
or
mov
mov
loopne
mov
or
xor
cmp
xor
loope
mov
test
mov
fisubs
adc
xor
sbb
jo
aaa
and
push
lds
shlb
test
jmp
orb
jnp
ret
imul
or
lods
or
popf
add
pop
sub
cmpsl
clc
cmpsb
shr
loop
daa
adc
jno
inc
dec
xchg
dec
lds
pop
cltd
movsb
cmp
pop
ficoms
daa
mov
insl
pop
dec
cmp
jns
push
dec
out
es
lea
ss
out
shlb
addr16
add
inc
int
pushf
push
or
jne
rolb
xchg
mov
lods
add
adc
loope
xor
jb
adc
jno
jle
or
pop
dec
lods
push
inc
flds
in
std
push
jecxz
adc
dec
push
sbb
ficompl
test
ja
and
and
pop
shll
inc
adc
mov
mov
cmpsl
cmp
sbb
jle
push
xchg
lods
iret
out
and
jle
lret
and
mov
push
inc
pop
and
pop
sub
dec
inc
scas
mov
add
cmp
jo
insb
dec
dec
sub
cmp
xor
sbb
xor
xchg
mov
xchg
adc
pop
add
mov
or
cmp
cltd
call
sub
addr16
and
inc
mov
and
sub
incb
jbe
es
or
jns
addl
call
push
arpl
insb
std
jp
lods
movsb
ds
out
jne
pop
cmp
imulb
add
into
adc
push
subl
adc
add
sub
sahf
imul
js
adc
jb
lcall
movsl
mov
inc
repz
cld
push
sub
stos
mov
mov
push
xor
stos
xchg
cmpsb
add
int3
sub
sub
mov
sbb
mov
and
fdivrp
inc
aas
clc
test
mov
shll
pop
xchg
jl
and
jecxz
ret
pop
pop
sub
adc
data16
cmp
jecxz
cmpsb
inc
push
rol
mov
adc
fbstp
adcl
ss
adc
jecxz
mov
or
fmuls
mov
mov
imulb
sub
out
or
fidivs
in
push
or
test
and
fstps
cltd
scas
push
pop
dec
xor
pop
or
setl
fildl
mov
xchg
fcmovnu
pushf
in
lahf
fstpl
push
and
test
pop
jmp
mov
js
push
lods
rcl
xor
imul
ficompl
xchg
xchg
xor
loop
push
cmp
aaa
pop
cmp
call
cmpl
xchg
sub
daa
movsl
adc
pop
pop
sbb
dec
sbb
decl
loope
and
clc
add
pop
pop
scas
insl
xchg
movsb
xlat
jecxz
fsubs
insb
xor
dec
sbb
jmp
scas
out
mov
jle
inc
adc
fildll
rcll
jmp
mov
gs
jl
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
jmp
movsl
mov
sbb
scas
mov
nop
int
out
pop
addl
sti
scas
xchg
mov
lock
ljmp
imul
imul
push
popf
aaa
xchg
cmp
mov
or
and
int
xchg
stc
outsl
addr16
scas
adc
gs
fisubrs
sbb
gs
js
jp
mov
lret
pop
sub
nop
jp
aad
aam
push
inc
lcall
mov
dec
aas
mov
dec
pop
mov
aas
xor
rorl
jl
jecxz
xchg
jnp
inc
ds
mov
adc
or
jg
cmp
and
je
in
mov
and
loop
mov
jmp
sbb
loop
pop
cli
xor
jbe
aaa
out
sbb
sbb
inc
addr16
push
fidivrl
inc
dec
vcvtsi2sdl
out
or
ret
pop
sbb
mov
mov
outsb
and
dec
je
mov
arpl
push
bound
or
mov
dec
mov
addr16
or
add
jl
mov
testl
mov
movsb
push
dec
fs
xor
pop
repz
orl
nop
and
xchg
clc
sbb
cmp
repnz
fisttpll
es
aam
inc
and
dec
sbb
add
cmc
fbstp
xor
mov
rcl
add
dec
xchg
push
mov
push
sbb
push
lock
mov
lcall
mov
mov
xor
pop
negl
insb
xchg
pop
rcl
sbb
hlt
inc
cmpsb
loope
addl
sbb
mov
mov
fs
cmp
mov
iret
xor
pushf
mov
lret
test
mov
sbb
xor
add
fs
inc
and
cs
xor
js
cmp
arpl
stos
or
test
sub
add
push
sub
sbb
scas
sbb
in
xor
add
add
dec
and
mov
push
adcb
movsb
in
sub
ja
call
jb
in
outsl
jno
jp
push
incb
ds
or
lods
xor
lahf
push
pushf
stc
into
and
mov
pop
mov
cmpsl
outsl
inc
sti
push
scas
sub
and
dec
rcll
xchg
and
cmp
cwtl
cs
sub
mov
sub
enter
adc
das
mov
and
add
cli
add
sarb
dec
xchg
push
cmpsb
cwtl
sbb
in
leave
cmpsb
jl
adc
cwtl
pop
jns
xor
ret
sub
xchg
mov
dec
xor
movsb
push
mov
mov
xchg
jns
mov
test
dec
cmpsl
inc
sbb
add
xchg
pop
fwait
xchg
xor
pop
lods
es
adc
shlb
inc
xchg
rorb
push
pushf
sub
nop
test
std
jp
jle
sub
inc
add
xor
outsl
bound
leave
push
mov
cld
inc
fadds
aas
rorl
and
lds
pop
popf
mov
xchg
mov
imulb
out
jge
in
dec
mov
adcl
in
or
psrld
fdiv
ds
push
and
scas
add
insl
fs
fwait
sub
loope
sbb
push
inc
cltd
xlat
mov
les
cli
dec
jecxz
and
lods
loop
cmp
lock
add
pop
push
add
mov
enter
or
pop
mov
sahf
cmp
out
pop
aad
rcl
addb
and
in
stos
push
outsl
add
int
and
outsb
xor
data16
cmpsl
lahf
sbbl
out
repz
and
lahf
lea
jge
fidivrs
mov
sub
xchg
dec
stos
je
mov
sti
lock
and
xor
mov
push
mov
push
cmpsb
insl
or
js
rorb
adc
shlb
pop
lock
test
pop
mov
jl
hlt
inc
test
das
pmulhw
cwtl
mov
push
cwtl
mov
xor
ds
sarl
push
add
ffree
movsl
pop
push
ds
in
in
jecxz
call
pop
les
pop
ss
repz
jg
popa
fwait
and
push
int3
adc
jg,pn
inc
mov
les
aas
inc
dec
sbbl
lods
pop
dec
call
fdivs
arpl
movl
jle
mov
jmp
test
cmpsl
gs
jne
dec
lret
cmp
lea
jo
ss
cld
hlt
insl
push
xchg
jae
cli
push
or
ja
es
jns
cmpsl
sbb
xchg
mov
xor
mov
fwait
pop
or
push
adc
scas
and
shll
mov
mov
jl
ror
test
inc
in
push
add
cmp
sbb
push
pop
cmpsl
movsl
sub
mov
outsb
xor
shlb
inc
adc
sub
mov
dec
cmc
dec
add
mov
repz
pop
add
lods
subl
mov
add
sub
fs
ss
sbb
xchg
testl
xor
movsl
das
mov
pop
imul
adc
xchg
es
or
xchg
popa
jge
pop
sub
lret
cmp
cs
call
outsb
lods
lock
mov
and
arpl
jg
sbb
sub
fwait
incb
lret
cmpsl
mov
cmc
or
les
ret
clc
dec
ficoms
mov
lock
add
arpl
cmp
xlat
push
push
pop
dec
lock
movsb
or
pop
cld
movsb
les
ss
lret
fbld
xchg
subb
popa
adc
pop
in
push
out
jp
sbb
mov
or
mov
lods
test
inc
daa
xorb
inc
icebp
imul
hlt
xchg
sub
push
push
into
cli
scas
fcomps
daa
mov
ds
lods
sub
lcall
sbb
sub
cmpsb
sbb
scas
xor
cs
push
sarb
or
sub
push
mov
fisttpll
jnp
mov
gs
mov
and
or
sbb
stos
fstl
xor
mov
push
push
cmp
dec
jo
sbbb
out
mov
and
mov
adc
inc
xchg
sub
popa
add
mov
sub
scas
stc
jns
sub
jb
sub
adc
xor
xor
cld
std
rclb
jne
jae
mov
scas
ret
push
fwait
jmp
inc
add
lretw
test
int
add
pop
out
mov
xchg
fisubs
and
pop
in
decb
lds
outsb
inc
sub
daa
or
inc
mov
hlt
xlat
xchg
popf
stos
and
xlat
jp
es
mov
ss
ret
sub
lret
jne
je,pt
or
sbb
lods
xchg
pusha
sahf
push
or
push
xor
xlat
loope
xchg
cmp
xchg
mov
int3
dec
dec
bound
stos
push
cmp
xchg
inc
stos
xlat
or
rorb
sar
push
je
push
add
or
and
out
sbb
dec
fs
test
ffree
mov
sub
stos
mov
loop
jnp
cld
mov
mov
jb
jb
push
adc
mov
adc
cld
sub
jp
push
sbb
pop
cmp
adc
js
leave
out
jns
xor
scas
cwtl
push
ret
pop
cmc
leave
xchg
sbb
mov
or
addr16
roll
xchg
push
into
pusha
lods
add
jl
pushf
into
mov
int3
mov
add
test
lock
cmp
or
push
mov
sbb
adc
cs
xor
repz
mov
subb
lahf
dec
cld
dec
mov
and
stos
hlt
scas
pop
inc
imul
test
testb
jno
jg
jge
and
pushf
add
hlt
and
pop
xchg
sti
sub
cmp
iret
mov
dec
mov
sbb
add
fildll
call
sbb
xchg
pop
into
rcll
lcall
ljmp
leave
popa
jl
fidivl
cmpsl
loop
xchg
push
ficoml
xchg
inc
ds
int3
inc
pop
jge
repz
call
fnstcw
fwait
fwait
xor
adc
dec
stos
lret
into
repnz
push
enter
mov
push
push
jns
jne
pop
mov
xchg
sub
out
inc
cmpsb
mov
cmpsl
test
xor
lret
dec
stc
pop
mov
ret
test
add
lcall
add
pop
in
sub
imulb
and
push
add
fbstp
repz
fisubrl
mov
sub
std
mov
loopne
xor
pop
fstl
jecxz
lea
in
call
sub
cmp
fucomi
xchg
add
insl
gs
mov
loopne
shrl
sub
pop
es
pusha
ret
imul
mov
test
mov
out
mov
mov
mov
cmpl
fstl
jle
sub
and
cmp
mov
xlat
push
ret
ja
inc
jb
das
mov
add
cltd
int3
jno
dec
push
sbb
sub
inc
add
xor
jmp
inc
xbegin
in
dec
mov
sub
sbb
js
bound
outsb
idiv
push
out
inc
jno
jle
dec
mov
jl
mov
test
fdivrl
pop
inc
lock
mov
cmp
lret
lock
fbstp
mov
mov
mov
lods
inc
jg
das
jge
xchg
fbstp
loop
sbb
push
sub
pop
pop
push
mov
mov
stos
dec
sarb
or
mov
int
add
dec
cmpxchg
stos
push
rorl
fisttpl
fnstsw
test
fistps
add
popf
push
std
adc
test
loop
mov
fistps
pop
adc
pop
sub
cmovno
sahf
test
xchg
pop
mov
sbb
ljmp
jno
xlat
test
mov
nop
mov
test
in
or
or
cltd
or
imul
mov
pop
push
incb
mov
xor
loope
sti
lret
mov
dec
out
fldl
xchg
ljmp
mov
dec
in
aam
pop
mov
jns
flds
xchg
dec
inc
test
les
cwtl
je
testb
aaa
push
addr16
xchg
mov
jp
aas
dec
cmp
inc
fidivs
sbb
sbb
mov
pop
sub
mov
div
push
inc
mov
xchg
push
adc
gs
leave
lret
mov
xchg
sbb
test
pop
mov
adc
scas
dec
lret
cwtl
and
or
adc
mov
push
lock
jmp
xor
cmc
hlt
mov
fstps
mov
add
lcall
scas
xchg
cli
data16
imul
xchg
sub
test
aad
and
push
cmc
pop
add
seta
cli
test
jmp
aad
mov
aaa
xor
mov
push
rcl
loop
ja
out
sub
mov
shll
out
and
rorb
inc
movsl
adc
jb
sbb
hlt
lret
int3
mov
mov
jmp
adc
movsl
fwait
dec
rolb
jo
scas
sbb
push
aad
jmp
hlt
adc
xchg
xchg
mov
push
push
cmpsb
xchg
lds
outsb
inc
push
or
icebp
stos
sbb
fisubrs
shlb
mov
cli
sahf
popa
cmp
push
push
push
repz
inc
insb
movd
sub
jecxz
outsl
pop
bound
sbb
xchg
push
rorb
lods
mov
pop
scas
lods
ss
loope
add
xchg
mov
lcall
inc
sbb
sub
rolb
cmp
fcoms
inc
fucomp
push
fwait
test
ja
sub
push
push
push
pusha
fdivl
jmp
mov
sar
push
rorb
xlat
mov
icebp
nop
test
xchg
insl
inc
cmp
inc
pop
cmp
out
test
push
or
jmp
fprem
or
jecxz
xor
sarl
pop
faddl
xor
mov
jb
mov
and
mov
inc
shl
imul
pop
adc
cmpsl
fldenv
jne
push
or
jg
jp
sub
cmp
sbbl
into
inc
sub
sub
daa
mov
rorl
and
inc
sub
pop
jg
mov
ds
push
sub
mov
mov
jmp
sti
into
into
negb
inc
sbb
cmp
jb
mov
arpl
insb
adc
lret
lock
mov
lcall
add
sbb
mov
mov
fs
adc
repz
mov
lea
popa
insl
fnsave
push
out
mov
and
ss
xchg
mov
cs
or
cmp
dec
cwtl
adc
mov
and
mov
mov
aas
call
int3
or
call
test
mov
std
adc
inc
pusha
cmp
cmpsl
mov
cmp
aas
stc
lods
xor
lds
sub
jnp
test
adc
decl
daa
cmpsl
stc
icebp
xchg
aad
test
and
lret
push
je
xorb
cwtl
cltd
pop
nop
call
popa
das
mov
ljmp
clc
rorl
or
xchg
inc
arpl
mov
inc
mov
sbb
outsl
fisubs
aaa
and
cmp
mov
sub
dec
in
push
lods
pop
cmpsl
dec
sbb
pop
jno
mov
adc
lods
xchg
sbb
mov
push
aaa
je
cmp
cmp
mov
sbb
lret
xchg
in
cli
inc
stc
ret
fs
mov
push
mov
and
mov
add
jg
insl
xchg
stc
mov
in
sbb
add
mov
gs
push
xchg
lret
sbb
mov
sub
bound
pop
sub
shr
sub
andl
xor
faddp
pop
push
lock
xor
xor
lret
add
lahf
cwtl
xchg
jl
fidivl
push
mov
int3
xchg
fadds
xor
mov
out
lea
scas
int
adc
imul
mov
ret
adc
test
lds
hlt
push
insl
cmp
fnstenv
call
xchg
test
jle
push
jmp
subb
add
xchg
lods
mov
insl
xchg
shll
rorb
add
mov
popa
sub
xchg
lea
arpl
sbb
pop
lock
sbb
push
dec
in
pop
fdivl
cs
sbb
fidivl
xor
cmp
nop
out
hlt
es
lret
jmp
and
movsl
call
or
scas
fcoms
add
push
mov
ja
aam
test
bound
cli
mov
push
mov
test
jnp
inc
in
jle
enter
or
jnp
movsl
pop
aam
movsl
xor
push
add
je
or
aaa
jb
fcmovu
inc
lret
out
sahf
loopne
dec
sub
inc
add
dec
dec
cmp
ds
adc
filds
cli
jg
mov
adc
dec
or
or
xchg
loope
push
ds
cmc
mov
and
push
sub
add
roll
jl
lds
popa
inc
testl
repnz
lahf
pop
mov
mov
cmp
mov
inc
add
xchg
stc
and
stos
jns
iret
daa
mov
sub
shrl
pop
jo
enter
fdiv
testb
cmp
mov
dec
ss
int3
mov
out
jbe
xchg
or
mov
ljmp
cmc
incl
movsb
xchg
add
lret
mov
ret
or
out
shll
add
scas
mov
mov
adcl
inc
scas
xorl
lret
insl
sahf
mov
test
movsb
pop
jl
rorb
and
aad
inc
scas
mov
push
mov
sahf
clc
pushf
std
lret
inc
fs
jl
popa
push
aam
adc
movsl
in
xor
negl
pop
jnp
mov
push
mov
jp
popa
repz
es
or
movsl
dec
pop
xchg
xor
bnd
pop
stos
mov
sbbl
xchg
stos
fildll
push
ficoml
jp
repz
fmulp
jae
clc
dec
sbb
bound
es
xor
dec
aam
push
mov
rdmsr
test
inc
sbb
cmpsb
add
jns
aas
jnp
xchg
dec
ljmp
xchg
inc
inc
inc
iret
sub
xchg
and
sub
mov
testl
and
out
jb
shrb
add
mov
ret
cwtl
ret
pop
mov
sub
jne
sub
mov
add
xchg
cli
pop
lods
mov
js
jge
mov
sahf
xor
test
pop
cli
push
adc
inc
xchg
shr
lea
loop
sbb
mov
mov
into
add
add
lcall
jb
stc
dec
pop
dec
mov
lds
in
out
loopne
dec
iret
rcl
pop
pop
mov
mov
mov
aam
fidivs
jo
add
les
test
mov
sbb
loopne
mov
pop
cwtl
enter
popa
push
add
stc
and
cmp
sub
adc
mov
pop
in
mov
add
mov
int3
in
mov
inc
mov
les
push
xchg
xchg
jae
stos
xor
cltd
dec
int3
add
cmpsl
pop
cmpsb
cs
leave
jmp
aad
pop
mov
jecxz
out
pop
cmpsl
xchg
out
mov
xor
imul
sbb
dec
jmp
xlat
scas
fildl
out
xchg
xor
xchg
sbb
xchg
xchg
pop
sub
jg
fcmovne
and
push
fmuls
test
jns
jge
imul
sub
call
lea
je
dec
dec
jmp
add
subb
or
pop
mov
and
bound
in
mov
xchg
mov
pusha
icebp
mov
push
push
xchg
inc
push
cmp
shl
adc
ss
adc
cmp
gs
and
scas
cli
dec
int3
push
fdivs
dec
mov
adc
xorl
push
add
frstor
ljmp
or
sbb
xchg
xor
dec
subl
mov
in
movsl
xchg
dec
sbb
not
mov
rorb
pop
ja
fmuls
add
adc
incb
loope
clc
inc
dec
mov
push
jp,pn
dec
int3
adc
mov
and
sub
dec
aaa
je
inc
lea
inc
mov
adc
xlat
pop
loope
xchg
or
inc
push
test
cmp
jp
cmp
incb
ror
jge
or
mov
filds
test
push
test
mov
push
fists
sahf
fstpl
push
or
shll
test
ficomps
jecxz
insb
mov
jle
sub
stos
pushf
sbb
fcoml
pop
fwait
xchg
sbb
ret
testl
andb
js
jcxz
orb
and
cli
and
insl
int3
adcl
shrl
movsl
dec
jns
stos
xchg
sub
aas
jb
fwait
shl
repz
test
xchg
fidivl
add
cmp
push
push
pop
loop
int3
dec
sbb
in
loope
xchg
shll
dec
sub
out
dec
cwtd
and
mov
fcoms
data16
push
scas
adc
fistpll
dec
out
scas
add
adc
out
dec
pop
lret
dec
dec
ljmp
out
int3
and
add
out
mov
or
addb
and
jle
sbb
ja
and
out
jae
adc
in
add
sahf
sbbb
ds
fbstp
and
test
mov
and
mov
cmpsl
lahf
scas
sub
sar
mov
icebp
daa
into
xor
mov
xchg
mov
add
sahf
or
insl
scas
mov
mov
and
sti
push
mov
add
leave
mov
xchg
sbb
sub
nop
arpl
test
mov
test
mov
fsubrl
in
sbb
pop
push
dec
xchg
sbb
push
or
lcall
in
add
xchg
jae
adc
or
mov
into
adc
cwtl
xchg
jmp
imulb
mov
fldl
adc
push
cmpsl
loop
add
push
iret
jae
aam
push
nop
cmp
out
mov
adc
aas
add
xchg
mov
and
xchg
and
jnp
test
pop
imulb
jecxz
scas
out
cmpsb
stc
subl
jp
mov
daa
push
mov
popf
mov
adc
inc
inc
loop
and
mov
aam
push
dec
and
sbb
sbb
xor
das
das
lret
xchg
fdivl
and
adc
adc
inc
fsts
push
mov
or
lret
scas
rclb
pushf
cmp
mov
or
sub
iret
jno
popa
aam
lds
shr
ss
push
pushf
hlt
mov
fnstsw
jg
xor
push
jno
sub
adc
inc
cwtl
cmp
movsl
cld
ljmp
iret
xor
cmp
jge
in
es
insb
jmp
iret
rolb
pop
mov
jae
mov
sub
xor
nop
xchg
repnz
xchg
xor
or
int3
pop
and
scas
mov
loopne
lahf
in
test
pusha
ror
fwait
insl
push
lods
or
jp
dec
leave
gs
push
daa
add
mov
cmpl
sbb
push
cmpsl
es
sub
adcl
fmuls
out
jecxz
sbb
and
or
out
xor
dec
xor
jecxz
imul
lods
inc
sub
sbb
jge
pop
mov
push
mulb
xchg
insb
lea
arpl
push
sbb
push
sarl
outsl
push
dec
sbb
mov
and
ds
fdivl
andb
inc
jp
xchg
inc
movsb
jecxz
ret
sbb
addr16
mov
xor
xchg
jb
pop
add
xor
mov
mov
sti
pop
jmp
roll
add
and
jo
outsb
aas
fisubrs
adc
sar
fbstp
mov
dec
jb
xorl
push
data16
sarl
cmc
xor
cmpsl
mov
lret
push
push
xchg
xlat
xchg
arpl
mov
jp
add
xchg
addr16
loop
xor
dec
pop
enter
jbe
jl
loop
mov
adc
loop
sbb
outsl
aaa
in
jmp
cmp
dec
frstor
dec
mov
xor
sub
out
mov
xchg
and
push
rorb
ja
pop
test
and
dec
shlb
dec
and
mov
mov
imul
repnz
cmp
dec
push
je
out
shll
cmp
dec
adc
jbe
mov
enter
rorb
das
jo
adc
jno
and
movsl
jnp
jnp
outsl
xchg
sahf
inc
mov
cmp
into
jne
mov
sbb
sbb
ret
mov
fmul
sub
xchg
jmp
in
mov
xor
mov
xor
xchg
loop
inc
js
jge
pop
pop
and
jb
push
movsl
sub
add
dec
lret
sar
inc
mov
pop
int
dec
adc
fwait
icebp
fidivrl
es
popf
jnp
dec
cwtl
xor
pop
mov
push
test
dec
je
repnz
mov
js
mov
mov
jl
mov
out
adc
nop
xchg
inc
mov
xchg
xor
sbb
mov
test
xor
inc
int3
bound
clc
adcl
js
into
js
lds
arpl
cmpsl
aam
mov
repnz
cwtl
inc
and
adc
mov
fldenv
cmp
call
ljmp
lock
in
rcrl
popf
inc
push
into
jecxz
sbb
test
xchg
lock
jge
arpl
cmp
mov
mov
cmp
dec
pop
cmc
jg
movsb
movlps
adc
adc
cli
cmpsb
cs
out
mov
jmp
enter
or
and
sbb
mov
insl
xchg
inc
lret
push
lret
in
xchg
and
jne
xchg
mov
fwait
imul
or
mov
sbb
lock
and
add
inc
ljmp
sub
jg
cltd
pop
jge
adc
jb
push
arpl
clc
imul
popa
fld
pushf
into
iret
inc
mov
popf
mov
call
and
fimuls
pop
outsb
mov
lcall
jecxz
mov
cmp
mov
cmpsl
fisttpll
cld
stos
xor
fidivl
sub
cmp
ja
mov
and
hlt
jge
mov
std
cwtl
mov
stos
sbb
sub
out
adc
pop
adc
sub
icebp
push
cmpsb
mov
loop
std
dec
mov
dec
lods
daa
ljmp
out
sub
out
xlat
cmp
cmp
mov
jne
cmc
aaa
push
int
inc
cmp
stc
dec
loope
clc
lcall
fsubrp
and
mov
scas
push
pushf
xchg
roll
cmc
popf
push
ljmp
cmp
adc
pop
lret
push
ds
jl
fstps
adc
popa
or
inc
inc
dec
ret
mov
scas
add
int
ja
xor
push
and
dec
jne
ret
daa
ret
scas
mov
add
xchg
cmp
mov
ss
dec
outsl
mov
ja
push
ljmp
sub
std
or
mov
mov
test
icebp
jp
mov
cmc
adc
jbe
adc
ds
jo
pop
mov
popa
xor
loope
push
test
test
jp
sbb
es
arpl
fcompl
jg
add
arpl
pop
sahf
test
inc
push
lahf
nop
sbb
adc
jne
in
es
je
fnstsw
xor
jnp
push
jge
or
aaa
lret
adc
sub
subl
dec
cmpsl
adc
clc
roll
push
sub
test
add
xchg
and
adc
lods
mov
in
cli
mov
hlt
fimuls
add
cmp
push
out
push
in
push
movsl
mov
xor
lock
or
int
sbb
cmpb
push
stos
push
and
sbb
pop
add
repz
add
add
lea
mov
pop
mov
jl
pushf
jl
inc
sar
push
loop
aad
mov
inc
inc
cwtl
sbb
aam
lods
in
test
jo
xor
addl
movsb
clc
insb
jnp
out
dec
or
mov
es
mov
xor
sbb
outsb
and
mov
jae
push
fwait
call
into
adcb
inc
aam
fwait
cli
in
lret
test
mov
hlt
inc
fcompl
xchg
or
mov
in
mov
and
or
idivb
movsb
or
lods
icebp
fcomps
mov
pushf
sbbl
cmp
xchg
adc
inc
mov
xor
dec
pop
aaa
das
jns
es
cltd
mov
lods
xchg
mov
inc
jl
int3
fstps
mov
arpl
in
bnd
into
sbb
out
sub
adcb
sarl
xchg
xchg
test
mov
loop
mov
mov
cmp
cmc
sbb
xchg
dec
push
jo
into
mov
add
dec
mov
sbb
ss
in
add
push
popf
push
mov
cmpsb
das
dec
int
rorb
inc
insl
insb
jg
je
mov
xchg
mov
lcall
mov
or
hlt
stc
enter
mov
inc
js
sbb
mov
sbb
mov
push
and
pop
sbb
mov
rclb
data16
jge
push
outsl
mov
cmp
loopne
dec
pop
popf
addl
jecxz
shlb
inc
ja
jmp
leave
xchg
push
and
lret
push
push
push
or
sub
xor
movhps
jno
bound
imull
inc
push
lret
hlt
xor
andb
pop
imul
inc
rol
jge
loope
sub
cld
and
aas
stos
cmp
push
fs
and
punpcklbw
dec
je
cmp
mov
jnp
imull
stos
push
pop
mov
mov
cmpsb
adc
fstpt
cmp
jg
cld
mov
pushf
push
jno
imul
mov
adc
jo
mov
mov
cmp
and
lcall
mov
fcompl
inc
and
loope
je
das
rdmsr
push
dec
faddl
rclb
xor
test
xor
cmp
addr16
inc
cwtl
cmp
rcrb
adc
sahf
dec
and
mov
sub
imul
cmpsb
adc
xor
lods
cmpsl
mov
add
sbb
insb
std
in
push
in
inc
inc
and
pop
clc
lds
pop
int3
testl
add
outsb
dec
push
push
scas
movsl
mov
lods
lahf
dec
cmp
xor
dec
fst
ss
mov
outsl
sub
or
cmc
sahf
pop
test
mov
call
xor
adc
js
movsb
adcl
xor
fsubrl
int
mov
int3
shlb
orl
outsb
fcoml
push
test
addr16
push
vldmxcsr
jae
mov
je
and
ds
test
lahf
ret
sbb
addr16
add
cmp
push
stos
cwtl
lcall
popf
out
shll
dec
outsb
pusha
pop
subl
and
ss
jnp
jg
sbb
dec
loop
push
sbb
cld
xchg
jge
imul
jmp
mov
clc
aas
je
xchg
mov
std
add
stos
sbb
loop
enter
jge
cmp
mov
popa
sub
inc
jae
xor
dec
stc
inc
fcomi
cs
cwtl
mov
test
call
repz
fidivl
sbb
int
shr
loope
mov
dec
mov
sbb
pop
sub
mov
cli
lcall
mov
jmp
sub
sahf
fstps
push
mov
add
xor
push
data16
or
or
pop
imull
fstp
fidivs
lods
ss
sbb
push
stos
sahf
ficoml
jne
daa
dec
data16
repz
ret
dec
in
mov
add
adc
iret
xchg
and
icebp
aad
ss
adc
rorb
mov
jo
mov
das
cmp
jmp
mov
jne
mov
pushf
or
test
or
xor
in
scas
xor
out
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
xor
andl
inc
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jle
jmp
call
cmpl
jb
movl
push
adc
movl
subl
mov
push
mov
adcl
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
orl
add
andl
mov
mov
addl
test
movl
je
movl
cmpl
je
cmpl
jle
jmp
push
call
mov
dec
mov
jmp
mov
sbb
mov
addl
mov
mov
xor
xor
add
and
mov
mov
and
xor
mov
and
mov
add
sbb
mov
mov
xor
mov
or
mov
add
or
mov
orl
mov
xor
mov
xor
mov
add
mov
sub
sbbl
lea
xor
xorl
xor
movl
cmp
movl
je
xorl
mov
subl
xor
adcl
add
cmp
movl
jne
pushl
call
mov
not
mov
adcl
mov
addl
xor
add
movl
cmp
movl
je
pushl
sbbl
pushl
call
mov
xor
mov
xor
mov
xor
add
movl
cmp
movl
je
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
call
jmp
mov
add
sbbl
mov
mov
mov
sbbl
add
orl
mov
jmp
push
mov
andb
test
mov
adc
adc
addl
mov
push
push
inc
enter
jg
outsb
js
aas
popf
sbb
pop
stos
xchg
call
hlt
cmpsb
int
mov
mov
imul
add
sbb
dec
inc
jmp
cmp
fcomps
stc
sbb
int3
divl
cwtl
mov
sub
nop
pop
xchg
movsl
js
dec
cmp
aaa
sti
hlt
add
jg
call
pushf
xor
and
arpl
jbe
jo
jmp
adc
pop
jbe
aas
pop
sbb
sub
aas
add
pop
lods
test
sub
sti
pop
in
in
sbb
pop
cmp
insw
dec
push
mov
mov
fchs
loope
mov
repnz
leave
mov
stos
cmp
sub
jbe
mov
sbbb
push
pushf
cmp
or
lods
repz
int3
mov
push
xor
enter
and
test
xor
lahf
addr16
movsb
shlb
mov
pop
rolb
fdivr
xor
jae
add
mov
fsub
dec
mov
cmp
cmpsl
push
outsb
icebp
mov
fildll
call
mov
mov
in
mov
shll
icebp
mov
jb
xor
mov
xchg
das
cmpsb
xchg
add
add
in
mov
scas
incb
fistpl
jl
mov
sub
cmpsl
adc
cmp
pushf
movsb
iret
inc
mov
and
sti
sbb
aaa
jle
jno
mull
add
aaa
sub
xchg
in
je,pt
imulb
or
xchg
scas
scas
pop
push
iret
shll
sbb
pusha
imul
push
pushf
adc
aam
pop
cmp
fcompl
and
jp
adcl
mov
aam
pop
leave
stc
push
and
in
sahf
sub
fstl
fs
lds
mov
fistps
addr16
div
cmpsl
imul
jecxz
int
mov
sub
pop
xchg
cmc
sti
sbb
mov
popf
std
in
dec
dec
andl
out
fcomps
test
scas
cmp
fmull
push
insb
insl
xchg
adc
lahf
push
fdivrl
xor
xor
or
fs
xchg
pop
mov
dec
mov
sbb
sub
cmp
test
mov
sub
pop
cmp
add
stos
mov
clc
es
dec
mov
in
int
mov
sub
mov
add
andl
push
cmp
mov
mov
test
inc
xchg
js
jl
mov
in
xchg
or
pop
imul
push
jg
lret
add
mov
sarb
dec
mov
add
movsl
xor
pop
rcr
out
sub
rcr
ficomps
lret
fwait
ja
idivl
out
stos
jmp
test
out
xor
cmp
and
xchg
push
mov
push
in
push
stos
xlat
ja
sub
sub
sbb
scas
xchg
xor
bound
rorl
test
testl
mov
mov
daa
sub
jo
push
divb
adc
movsl
lods
add
mov
and
mov
sahf
adc
jmp
in
lret
sub
inc
xchg
pop
test
mov
lods
xor
push
mov
cmp
jnp
stc
je
jno
and
add
pop
inc
push
leave
popa
xor
cltd
mov
mov
subl
or
or
mov
lds
out
mov
popa
divl
fs
jno
add
rorl
mov
xchg
pop
je
sbb
xchg
popa
xor
inc
repnz
scas
stc
leave
mov
mov
push
rclb
loopne
aam
stc
sub
cmp
cmp
mov
cltd
mov
cmp
arpl
mov
jno
xchg
pop
test
and
mov
je
in
sbb
pop
mov
mov
jg
aas
inc
sub
jnp
rdtsc
out
sub
pop
xor
rcrl
and
jg
sbb
xor
dec
mov
pop
mov
movsb
lea
imul
push
push
fsubr
lret
sbbl
out
inc
pop
cmp
jle
mov
fcmovnu
in
push
push
push
inc
dec
popl
enter
arpl
inc
mov
cwtl
jmp
cmpsb
roll
push
in
cmc
rcrl
and
lahf
fadds
enter
scas
repz
stos
das
mov
inc
push
shl
out
xchg
imul
and
xor
daa
cmpsb
push
jns
push
add
pop
mov
pushf
scas
cwtl
and
and
into
mov
mov
test
outsb
push
mov
cmp
inc
nop
ljmp
fsubrl
push
iret
and
sub
sub
inc
mov
push
enter
and
mov
mov
adc
sti
push
loopne
and
jle
mov
stos
fcoms
fsts
call
ljmp
dec
cmc
icebp
stos
push
ret
std
adc
sbb
push
pop
mov
test
rorl
ret
mov
push
xchg
inc
nop
mov
je
xchg
cmc
pop
fisubl
lret
push
pusha
imul
push
lea
imul
adc
fcmovnbe
fnsetpm(287
lahf
dec
adc
arpl
fsts
push
jno
push
dec
xchg
ljmp
shll
mov
lahf
push
inc
xchg
dec
mov
lock
imul
mov
jmp
xor
lods
or
jae
dec
testl
inc
fwait
lret
add
jbe
fdivrl
test
mov
mov
lock
stos
pop
repnz
jg
loope
mov
inc
mov
add
jl
dec
pop
sub
inc
add
add
inc
xchg
fldl
cltd
rcrb
push
push
insl
lea
dec
xchg
clc
lock
xchg
pop
and
lods
cmp
and
push
or
sbb
mov
cmovl
cmp
bound
lock
sbb
daa
out
call
pop
or
xchg
mov
xchg
xchg
das
sbb
mov
in
stc
xchg
push
push
daa
popf
fwait
inc
aas
fidivrl
mov
rcl
mov
xchg
jnp
xchg
or
xor
xchg
ret
dec
aad
aas
mov
popf
ret
adc
aam
stos
mov
out
adc
rclb
jecxz
fmuls
mov
add
sub
clc
adc
bound
cmpsl
and
inc
shrd
cmp
and
or
loope
popa
nop
stc
insb
jge
xor
mov
mov
mov
xchg
fildl
sub
lods
fwait
xchg
outsb
xlat
icebp
rol
mov
add
dec
mov
mov
inc
fidivs
add
cmp
jnp
pop
repz
mov
xchg
mov
std
pop
add
rcll
sub
mov
push
imul
jmp
inc
test
jno
lds
ja
cltd
leave
das
fdivl
outsl
adc
or
xorl
out
enter
andb
repz
out
imul
sbb
pushf
sbb
call
sub
ret
sbb
dec
cmp
jo
imul
adc
stos
std
rcll
mov
xlat
jns
fstps
test
mov
pusha
sub
cmp
xchg
es
int3
cmp
test
test
jg
dec
mov
enter
inc
ss
aas
jecxz
adc
int
push
mov
cmp
mov
mov
push
ret
adc
xor
xchg
test
add
mov
insb
jmp
add
lods
jge
dec
push
add
sarb
repz
ljmp
fwait
ja
mov
sub
jle
sub
xor
ljmp
sub
nop
mov
xchg
imul
out
add
cmp
ja
mov
cltd
addl
push
prefetch
and
or
mov
sarl
jecxz
mov
mov
and
mov
or
cmc
call
test
dec
and
pop
sti
dec
jmp
pop
xchg
lcall
lret
mov
inc
mov
stos
xchg
ror
and
xor
sbb
test
stc
push
mov
xor
or
sub
outsl
or
sub
sbb
fwait
sti
ss
adcb
xchg
into
cmp
push
data16
mov
mov
add
int
mov
pop
cmpl
inc
mov
movsl
and
add
mov
mov
fcomip
push
dec
orb
or
aam
iret
movb
xlat
popa
out
adc
push
adc
cmp
lret
addb
clc
jp
dec
fucom
mov
aad
idivb
pop
int3
jae
leave
mov
jae
mov
adc
lcall
dec
idiv
and
mov
cmc
xchg
scas
popf
mov
cmp
add
jmp
js
in
test
sub
in
jle
mov
enter
add
leave
xor
rorl
js
mov
fld
xor
sub
lds
je
lret
push
mov
xchg
sub
jae
mov
stos
addl
fsub
jae
xchg
addb
test
mov
fldt
pop
sub
pop
outsl
sbb
in
stos
xchg
iret
dec
sub
mov
pop
jnp
jnp
fbstp
mov
clc
pop
mov
insb
xor
mov
ljmp
jbe
popa
lahf
sahf
mov
scas
insl
das
pop
jmp
insb
and
jbe
mov
decb
adc
testl
dec
int
mov
inc
test
popf
mov
ljmp
lea
xor
mov
lahf
ret
in
pushf
lods
call
cli
test
pop
insb
ret
std
movsl
adc
test
adc
or
sub
scas
pop
int
hlt
add
mov
mov
ja
jns
xor
fstpt
test
jl
cltd
fldenv
push
pop
out
xor
lcall
sub
sbb
dec
imul
mov
mov
jo
stos
mov
subl
fwait
dec
fiadds
and
leave
daa
mov
hlt
jecxz
sbb
js
jl
push
sbb
inc
and
mov
sub
xor
pop
mov
lods
je
movsl
jecxz
xchg
int3
pop
or
scas
imul
loop
fwait
push
pop
push
subl
xchg
dec
lock
cmc
test
adc
mov
cmp
cmp
mov
cmp
outsl
int3
fdiv
sub
jmp
lret
cs
mov
inc
imul
and
push
lds
and
or
call
push
or
jl
outsb
pop
pushl
xchg
cmp
ljmp
sbb
mov
or
rclb
jae
push
lods
jnp
stos
mov
out
mov
dec
inc
imul
lret
negl
stc
sbb
xchg
cmpsl
lods
pop
add
cs
mov
or
adc
popa
adcl
push
sub
or
jnp
ljmp
cld
repz
js
out
add
xor
cmc
fs
lock
adc
das
fldcw
sub
xor
cmpb
and
test
xchg
xorl
into
jge
insl
mov
popf
insl
lret
cmc
mov
imul
out
andb
and
pop
sbb
in
mov
xchg
add
sbb
testb
sbb
sahf
jge
repz
cld
std
sahf
repnz
sub
out
sbb
sub
inc
or
lock
push
and
pushl
dec
dec
lcall
mov
out
or
call
or
and
fdivs
scas
jns
out
pop
cwtl
lea
int3
fadd
xchg
pop
mov
fstl
pop
adc
inc
pushf
add
mov
mov
sbb
inc
repz
or
cmc
sub
sbb
mov
out
call
jecxz
std
mov
xor
daa
jnp
sub
int3
lds
jg
arpl
out
movsl
mov
jmp
jae
mov
mov
test
sub
mov
sbb
xor
xor
rorl
xor
scas
out
movsl
insl
mov
cltd
jmp
and
sbb
cmc
into
pop
push
xor
pop
fidivl
sbb
leave
mov
push
push
std
jne
cmp
rcll
divb
ror
imul
out
mov
jne
call
lret
fwait
arpl
push
add
imulb
add
popf
repnz
cmc
movsb
cmp
das
add
cmpsl
pop
cmp
dec
les
into
cltd
mov
jg
out
test
finit
fidivrl
sbb
ss
test
aam
sub
jb
fcmovne
aas
pop
or
sbb
hlt
stos
jg
repz
cli
fcomp
push
dec
cld
sbb
jae
mov
pop
imul
in
pop
sbb
notb
or
and
dec
stc
out
repnz
mov
ss
sbb
out
mov
arpl
sti
sbb
adc
outsl
mov
pop
arpl
daa
out
sahf
or
scas
mov
roll
mov
mov
dec
into
sbb
add
sbb
cmp
sbb
out
aaa
stos
orb
xchg
punpcklbw
stc
or
jp
cld
mov
pop
and
inc
sbb
into
inc
lea
dec
adc
pcmpgtd
xchg
inc
jmp
mov
adc
andl
add
mov
push
push
cmp
mov
cmp
cmp
xchg
jp
arpl
enter
fildl
fistpll
dec
push
es
push
add
sbb
aam
and
push
push
sub
mov
pop
jbe
push
pminsw
mov
adc
int
test
mov
popf
and
or
jle
add
rolb
sub
xor
xchg
push
mov
inc
sbb
out
sub
and
stos
mov
pushf
sbb
sti
xchg
ljmp
jge
mov
push
adc
inc
add
out
icebp
cmp
cwtl
int
fs
dec
adc
call
cs
leave
pop
aaa
mov
sbb
aad
aas
push
mov
ja
fisttpll
pop
daa
arpl
test
or
loope
call
scas
mov
cli
xor
add
ds
lods
or
jbe,pt
aad
mov
push
lahf
and
aaa
loope
test
mov
add
addr16
mov
push
push
jbe
adc
cmp
fistps
rcrl
movsl
xor
sti
roll
shl
into
movsb
xlat
cmp
add
outsb
or
ja
neg
inc
jb
sub
pop
addb
mov
sarb
out
and
sbb
xchg
es
sti
xor
scas
mov
std
jbe
sub
cld
outsl
outsl
leave
sub
and
hlt
loopne
insl
lds
aam
shl
adc
rcl
jge
out
outsb
in
add
add
cmp
rolb
test
shrb
stos
fidivrl
cwtl
pop
adcb
pop
les
inc
adc
cli
or
shlb
push
adc
imul
fstps
les
mov
scas
xor
xchg
xchg
data16
fistl
xor
jmp
repz
adc
dec
jmp
aas
sbb
xor
push
cmpsb
pop
mov
xchg
mov
decl
insb
xlat
xlat
cvtpi2ps
mov
xchg
into
fwait
ret
bnd
add
mov
jmp
or
popf
xorps
out
add
in
push
int3
or
sbb
outsl
mov
push
movsl
jno
and
adc
mov
push
aaa
and
pop
adc
pop
xor
scas
pop
popa
movsl
add
shll
pop
ja
cltd
push
rorb
add
sbb
adc
in
push
cmp
insb
push
xor
mov
cwtl
imulb
test
add
subl
movsl
mov
sbb
scas
cmp
daa
fdivrl
xchg
mov
or
out
adc
cmpsl
dec
es
xor
jae
pop
mov
ret
mov
fdivrl
cmpl
inc
ds
mov
adc
jl
test
adc
leave
testb
xchg
mov
add
les
sbb
mov
sarb
int
lods
loopne
mov
inc
push
push
mov
ds
and
stc
hlt
push
mov
pop
fbld
push
iret
jg
inc
mov
add
mov
loope
sbb
cli
fdivrp
xchg
mov
fisttps
inc
cld
cmpl
das
inc
fs
stos
push
mov
into
loop
jle
int3
movl
pop
ret
mov
adc
and
adc
fnstenv
lret
stc
movsb
jns
cld
cmp
or
cli
mov
pop
sarb
xchg
inc
jl
outsb
sahf
mov
aas
xor
adc
and
or
test
shlb
jle
mov
andl
imul
mov
bnd
cmp
lret
cmp
cmpsb
outsb
lock
pop
mov
ret
push
pushf
pop
fsts
mov
int3
push
pusha
mov
aas
shlb
psllq
dec
shl
cmp
xor
cs
cltd
aad
or
dec
pop
xor
out
cmp
cmc
fmuls
xchg
jno
hlt
add
pop
xchg
sub
sub
stos
xchg
lahf
jno
cmp
and
mov
add
mov
lods
sbbl
les
and
push
mov
cmp
xor
cs
jmp
sbb
icebp
pop
cs
xchg
das
leave
aad
or
cmp
rcrb
ret
or
hlt
idivl
pop
inc
in
shrb
dec
test
mov
data16
test
insl
shlb
push
xchg
add
sub
xchg
iret
adc
sub
les
push
insl
movsb
cmp
test
mov
jb
sbb
loop
sbb
pop
sbb
lret
jmp
insb
lret
mov
mov
pop
or
js
imul
call
shrl
mov
mov
mov
sbb
push
in
xchg
and
mov
lods
in
cmpb
or
jge
xlat
push
lea
loopne
cmpsb
xchg
xchg
dec
push
fwait
iret
sub
ss
js
add
pop
fadds
fstl
push
dec
or
push
dec
shll
insb
aas
inc
and
jge
jo
cltd
lahf
jae
jbe
pop
mov
jmp
sub
stc
cs
icebp
push
lea
sbb
jne
push
mov
push
stc
lret
sbb
cmpb
mov
push
lods
pop
aas
dec
mov
cld
mov
stc
sbb
jmp
in
or
repnz
pop
jle
add
pop
pop
int3
fs
dec
sti
fwait
pop
adc
es
test
add
mov
or
cmpsb
xchg
mov
repnz
jmp
nop
inc
mulb
out
xchg
cltd
cmp
call
inc
mov
in
mov
in
jmp
mov
ret
mov
in
in
in
sti
add
aas
or
jbe
jecxz
pop
jnp
lret
push
aam
xor
movsl
adc
adc
imull
pop
xchg
mov
xchg
adc
mov
mov
sbb
push
mov
in
out
pop
pop
jmp
mov
arpl
pushf
cmpsb
stos
push
pop
addr16
cmpsl
rclb
jbe
sahf
xchg
adc
pop
mov
rclb
mov
jle
pop
and
sub
inc
rcll
out
lahf
lods
lahf
fwait
xchg
std
xchg
les
arpl
mov
xchg
cmp
sti
call
scas
cmp
aam
cmp
pop
fimuls
push
pop
in
lods
je
xor
jg
dec
push
dec
mov
aas
fisubrl
inc
inc
bound
shrl
sbb
adc
jl
xchg
adc
adc
daa
addr16
add
scas
icebp
xchg
shll
adc
cltd
cmp
dec
add
imul
insl
cmp
nop
in
nop
and
movsl
mov
sub
loop
add
bound
and
cmova
out
shrl
and
test
jp
adc
cmp
pusha
adc
and
daa
push
ficoms
mov
jmp
adcb
inc
test
and
int3
jo
mov
subl
inc
aam
push
fs
scas
add
daa
icebp
sub
out
dec
push
jmp
or
add
and
jbe
mov
cli
mov
sub
mov
ret
mov
loopne
pop
imul
cmpl
sbb
push
mov
bound
jnp
xor
jbe
fwait
inc
mov
insl
pop
leave
fcmovnb
data16
pushf
mov
fisubs
mov
pop
mov
sbb
adc
mull
popf
pop
insl
cmp
into
cltd
scas
outsl
sahf
popa
daa
sbb
aad
pop
cmpsl
xchg
sbb
push
and
fs
adc
cwtl
out
xor
push
dec
cmp
push
pop
fisubrs
jnp
sub
es
lea
inc
dec
outsb
push
or
push
lds
in
xor
test
pop
cmpsb
icebp
fs
test
sub
add
insl
ret
pop
push
push
adc
test
jne
notl
cmpsl
int
jge
lods
cmp
xchg
imul
test
dec
mov
sbb
mov
repnz
scas
jle
or
pushf
out
dec
add
jns
imul
pop
or
loopne
outsl
dec
pop
arpl
aad
lock
cmp
testl
ret
mov
cltd
arpl
or
icebp
mov
fwait
lds
stc
sti
mov
insb
inc
mov
cmp
or
cmpb
sub
shlb
inc
pop
leave
je
enter
icebp
sub
inc
in
push
sbb
lret
aas
pop
pop
xchg
xchg
loope
mov
je
push
gs
fwait
mov
je
xchg
data16
add
movsb
or
mov
fsubs
inc
lret
add
mov
sub
pop
jb
sarl
xchg
or
sbb
shlb
mov
inc
adc
sbb
mov
mov
je
sbb
xor
int
add
ljmp
jbe
lret
ds
sti
shl
cmp
shlb
push
out
inc
sbb
sub
xchg
or
or
shll
or
cmp
dec
sahf
dec
fst
sahf
loop
push
pop
popf
xlat
inc
xor
out
bnd
shll
shrl
sub
xor
into
fcoms
lods
mov
sbb
jne
sub
clc
lock
cs
cmp
cmp
stos
add
pop
and
movsb
mov
cmpsl
bound
xchg
clc
negl
fldl
ss
in
ds
nop
icebp
mov
mul
inc
cmp
push
daa
mov
ds
sbb
andl
mov
sub
rolb
mov
mov
sbb
adc
and
xor
jge
ss
inc
enter
inc
pop
lahf
xor
out
jns
les
popf
cli
stc
sub
sbb
or
movsb
pop
inc
or
fsubp
adc
push
jp
inc
js
clc
push
mov
or
mov
lcall
inc
pop
inc
xor
je
adc
insl
cmc
xorl
lock
push
jmp
ret
stos
jno
add
mov
das
lahf
sub
mov
adc
xchg
pop
and
inc
cld
mov
in
or
cs
neg
fisubrs
aad
dec
fidivrs
xor
push
mov
inc
mov
cwtl
push
dec
cmp
cli
xchg
popa
loope
nop
icebp
mov
or
ret
mov
insl
out
das
xchg
or
add
lods
test
rcl
cmp
and
iret
lods
roll
mov
test
push
stos
scas
movsl
mov
gs
or
repz
sti
and
dec
pop
xchg
mov
cmp
mov
dec
fists
loopne
mov
das
push
jge
cmpsl
inc
enter
addb
loope
mov
mull
orb
data16
sub
or
lock
hlt
addr16
test
gs
and
scas
aam
stc
outsl
icebp
jp
mov
je
jb
mov
nop
mov
clc
ss
xchg
mov
out
sub
dec
mov
sub
push
in
and
mov
rclb
and
lea
shl
repnz
inc
mov
adc
sub
cmp
adc
cmpsl
sub
dec
andl
jle
ret
push
out
popf
lods
xor
bound
in
shrb
loope
ja
pop
out
inc
xchg
lret
mov
mov
push
ret
add
adc
scas
push
dec
fiaddl
inc
pop
imul
mov
pop
imul
int
dec
xchg
or
call
mov
or
pop
gs
ss
xchg
cmc
mov
and
xor
xchg
xor
mov
inc
call
andl
clc
mov
or
pop
jecxz
outsb
adc
dec
adc
cs
sub
adc
stos
mov
sbb
inc
lea
aad
es
ja
out
dec
fidivrl
add
mov
jne
push
mov
aad
mov
sti
push
loope
xor
aam
inc
dec
push
and
iret
stc
lea
int3
mov
popf
mov
ret
adc
cmp
in
xor
negl
push
jp
xlat
mov
shll
sbb
xchg
xor
fwait
ret
lds
mov
inc
sbb
and
test
cmc
mov
test
mov
idivb
mov
push
fcmovu
push
inc
push
push
jne
push
leave
inc
pop
cmp
shrl
call
daa
les
sub
dec
pop
iret
xor
pop
cmc
xchg
cld
popf
fdivrp
jecxz
aaa
sbb
stos
cmpsb
test
dec
dec
in
adcb
fs
xchg
pop
xadd
inc
roll
and
add
jnp
adc
cmc
test
jge,pn
pop
mov
je
adc
mov
data16
add
pop
test
xchg
dec
out
ja
popf
mov
popa
pop
popf
lods
add
add
add
lret
and
jecxz
cmc
adc
mov
inc
lcall
adc
test
dec
data16
jl
mov
or
into
push
cmp
sti
xor
and
jae
cld
xor
rorl
and
std
imul
jge
dec
out
std
cmp
mov
dec
xor
dec
inc
cltd
mul
xchg
add
dec
jmp
ffreep
xor
xor
pop
or
or
std
pop
das
push
or
dec
sbb
cwtl
add
mov
adc
ret
ds
jg
adc
push
xchg
push
pushf
sbb
add
cmpb
adcl
cmp
stos
dec
stos
lock
data16
xchg
add
mov
sub
push
jb
hlt
aam
dec
or
stos
push
mov
cmp
imul
adc
test
lahf
sar
jmp
adc
sbb
xor
xchg
mov
call
xchg
jg
inc
aam
ja
lock
mov
push
mov
push
xchg
sbb
mov
adc
sub
xor
push
outsb
and
cld
pop
lret
hlt
jecxz
mov
push
les
jbe
and
clc
outsb
cmp
outsl
movsb
enter
out
push
es
xchg
adc
testb
ret
clc
dec
jp
jle
popf
and
mov
add
test
add
push
dec
add
sub
dec
pop
movsb
pop
mov
and
mov
in
sti
dec
aaa
inc
shlb
dec
sub
stos
insl
mov
adc
mov
gs
mov
xor
jge
adc
mov
stc
ret
sub
add
xchg
adc
inc
je
hlt
xchg
mov
sub
repz
in
mov
xchg
add
cmp
pop
out
xchg
jno
xor
leave
mov
lock
xchg
inc
adc
mov
pop
pop
jo
sub
bound
mov
add
push
lea
divb
jge
inc
mov
mov
jne
xor
arpl
pop
repz
sbb
clc
sub
aas
lods
mov
mov
pop
lret
sbbb
arpl
std
pop
mov
mov
jb
adc
xchg
ds
inc
sub
ret
sahf
pop
aam
lea
mov
outsl
dec
sub
adc
jne
sub
xor
cs
push
adc
push
jecxz
and
movsb
adc
xor
push
xchg
in
pop
pusha
out
adc
imul
cmp
mov
dec
sbb
aas
mov
lock
aad
addl
popf
add
xor
and
shlb
addr16
lret
add
movsl
jbe
aam
push
jmp
sbb
or
jg
sarl
mov
mov
inc
movsb
lods
mov
lods
cmc
dec
and
mov
and
scas
mov
les
xor
push
loop
test
jne
and
aam
pop
adc
push
iret
inc
add
rorl
add
cmp
lock
aam
iret
popa
aad
mov
stc
cwtl
xchg
push
pop
dec
aaa
pop
insl
pushf
and
aaa
mov
cmc
aad
mov
add
dec
fucom
cmp
adc
loope
xchg
aad
xchg
lds
inc
daa
lods
push
test
movsl
adc
mov
lret
leave
loop
sub
xchg
mov
test
mov
xchg
xchg
sbb
mov
andb
imul
or
into
adc
mov
ret
scas
jle
jo
xchg
and
cmc
inc
ss
cli
mov
inc
sub
xchg
xchg
fldl
repz
mov
aas
and
push
mov
cli
stc
jne
aam
xor
ja
pop
lea
xchg
sub
pop
sub
inc
mov
mov
inc
js
or
mov
mov
pop
icebp
out
jns
lock
int3
mov
lcall
or
in
xchg
ja
adc
push
gs
data16
add
or
imul
movsb
jae
lods
push
jmp
push
mov
mov
shlb
pop
jb
out
sti
push
imul
xchg
int
jnp
and
lret
and
pop
inc
clc
pop
sarl
inc
js
inc
rol
stc
dec
cld
push
test
jg
outsb
dec
push
aam
pop
jbe
inc
jne
jns
int3
pushf
loop
and
movzwl
or
mov
add
mov
movl
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
xor
mov
xor
jmp
add
cld
sbb
nop
andb
push
sub
addl
pop
add
mov
pop
pop
lds
push
insb
jl
inc
jp
xor
mov
or
imul
sarb
pop
xchg
pop
lahf
int
pop
gs
pusha
js
test
pop
adc
out
aaa
lock
mov
ljmp
inc
xlat
jle
inc
or
adc
sbb
faddp
push
mov
jle
dec
mov
insb
xchg
inc
inc
dec
addr16
rolb
inc
add
jnp
dec
mov
jns
dec
jg
cmp
jb
sbb
jns
ret
mov
cmp
packuswb
int3
xlat
call
insb
cld
push
cwtl
ja
inc
cld
sbb
das
xchg
mov
pop
popf
mov
int3
lret
dec
pop
xchg
xor
out
pushf
mov
cmp
inc
pop
das
jmp
inc
inc
and
add
cmp
fmuls
clc
and
into
mov
imul
dec
xchg
scas
push
fstpt
cmp
sbb
pop
in
mov
mov
cmp
inc
in
je
cmp
xchg
jnp
ret
fwait
sarb
rcr
xor
xor
in
and
xor
scas
xlat
out
aam
test
sahf
fwait
dec
dec
cs
jle
pop
or
add
mov
push
arpl
or
es
mov
sub
sbb
outsl
sbb
ss
pop
sub
mov
sub
push
push
shll
lock
add
cmp
mov
pop
adc
cmp
repnz
jle
cmpsl
fstpl
push
int3
test
mov
inc
call
sbb
bnd
or
mov
pusha
lods
lret
out
jbe
adc
call
enter
hlt
mov
pushf
cmc
cmpsb
nop
push
cmp
dec
add
sbb
test
or
pop
clc
cmp
xor
dec
aas
inc
sar
outsb
fwait
lcall
mov
jb
sub
adc
dec
xor
mov
lret
inc
pop
cmp
mov
pshufw
in
dec
fnstenv
inc
int3
push
and
push
jno
cltd
pushw
dec
mov
cmp
dec
cmpl
pop
push
xchg
mov
je
lahf
or
xor
jge
or
mov
js
jmp
fmuls
pop
outsb
xorl
sbb
shrb
imul
aas
jnp
repz
jecxz
adc
mov
das
fdivs
sahf
test
jns
cmpsl
testb
xchg
dec
out
stos
icebp
and
xlat
cmp
pop
cmp
xchg
push
or
and
jno
test
add
xchg
arpl
add
sub
sbb
les
movsb
lods
push
xchg
mov
pop
in
adc
stos
push
rolb
iret
icebp
setns
lock
leave
xchg
icebp
sbb
add
mov
les
leave
fadds
sbb
das
push
and
or
cwtl
popa
lds
cli
sbb
mov
lds
mov
shrl
inc
ficompl
std
stos
lea
and
dec
je
push
dec
push
cli
aaa
mov
xor
push
cmp
sbb
decb
inc
sbb
lret
loop
imul
xor
pop
lret
mov
cmp
jecxz
dec
inc
xchg
ffree
xor
or
xchg
push
out
push
loop
inc
enter
push
sub
fmuls
aad
and
push
sbb
jge
xchg
sbb
mov
fstl
xor
popa
lahf
sub
bound
cmp
lcall
lahf
scas
or
add
mov
andb
xchg
insb
div
hlt
sub
test
lahf
arpl
fsubrs
push
pop
mov
loopne
push
mov
repz
ss
jbe
mov
mov
ret
pop
push
movsb
dec
iret
push
mov
push
fistps
adc
jnp
mov
jnp
or
lahf
sahf
or
and
or
jmp
mov
jnp
stos
add
sub
stos
or
ret
bound
or
cmp
cmp
add
mov
mov
dec
out
or
ret
dec
clc
in
data16
add
lcall
mov
mov
jmp
dec
xchg
sbb
sbb
aaa
sahf
outsb
into
mov
jp
pop
je
leave
subl
xchg
imul
stos
pop
addr16
xchg
jecxz
in
mov
out
sahf
std
jecxz
xor
add
xchg
hlt
ljmp
scas
cwtl
and
or
lock
xor
repz
loop
jecxz
in
mov
mov
mov
push
cmovns
fisttpll
sub
mov
pop
movsb
mov
or
push
adc
out
repnz
cmp
sbbl
cmp
mov
dec
cmpb
out
lahf
fisttps
rclb
jg
cmp
fcmovu
flds
fs
sub
sub
lahf
sahf
popa
cli
outsl
push
in
mul
scas
sbb
testb
hlt
push
mov
jo
into
movsb
mov
mov
in
insl
cli
stc
xchg
hlt
sahf
inc
pop
pop
dec
inc
jp
popa
adc
xor
xchg
mov
inc
imul
mov
repz
jae
hlt
cmp
xchg
daa
lahf
pop
loopne
les
sub
pop
lret
pop
add
push
push
mov
dec
lret
add
dec
xchg
scas
push
pop
lock
jbe
pop
dec
xchg
pop
mov
rcll
jg
push
cmp
and
xchg
int
mov
shll
scas
aam
mov
jae
jnp
mov
popa
cmpsl
cwtl
xor
sub
stos
fldt
hlt
pop
clc
inc
and
sbb
pop
in
popa
add
ss
imul
mov
sub
test
call
sbb
aaa
or
pop
movsl
cmpsl
sub
insl
dec
in
add
loope
int
pop
outsb
icebp
mov
dec
push
xchg
je
or
fisttps
dec
imul
cs
xor
sbb
scas
cmp
scas
popf
hlt
dec
jl
inc
fisttpll
jb
pusha
outsl
and
adc
add
pusha
pop
mov
mov
ret
or
cmc
bound
out
jmp
jbe
fcoms
pop
pop
mov
mov
stos
mov
cmp
data16
and
sub
jp
je
stos
mov
mov
mov
ljmp
repz
xchg
jnp
fcomi
mov
mov
je
or
sbb
push
jne
call
sub
lods
sbb
sub
xchg
mov
scas
adc
xor
and
sub
or
inc
hlt
mov
add
jecxz
add
call
push
in
les
fistpl
fidivrl
stos
in
outsl
and
div
add
repz
jns
and
dec
sbb
loop
mov
arpl
shlb
mov
pop
lock
stc
ds
lock
xlat
cmpsl
xor
mov
sarl
insl
xor
mov
or
push
add
push
int3
mov
imul
dec
aas
mov
push
in
push
int3
adc
clc
xor
xor
loopne
pop
es
lds
mov
lret
cwtl
mov
pop
mov
insb
fnstcw
fcoml
ficompl
fildll
lahf
loopne
ret
sbb
dec
mov
jno
xchg
popa
inc
shr
ss
sbb
arpl
jns
jge
sbb
and
les
test
fisubrs
rcrl
sub
stc
and
fbld
lods
sbb
adc
xchg
mov
inc
sbb
loope
stos
leave
fdivrs
lret
cmp
movsl
mov
pop
mov
add
in
popf
cmp
adc
in
mov
mov
pop
fsqrt
or
shlw
aad
mov
pop
mov
cli
dec
mov
rclb
dec
xor
in
into
pop
add
xchg
cli
mov
fildl
shlb
lods
enter
xchg
dec
rcll
push
int3
imulb
xchg
in
pop
mov
xorb
inc
gs
out
ret
and
das
adc
movsl
jns
repz
outsb
icebp
pop
pop
rep
dec
xchg
xchg
fnsave
sbb
stos
daa
divb
sbb
jecxz
mov
xor
xor
rcrb
div
pop
pop
sbbl
gs
mov
or
sub
fdivl
shlb
dec
aaa
ljmp
aad
cmp
mov
sbb
mov
mov
bound
or
out
pop
icebp
and
push
int3
test
imul
add
mov
pop
pusha
arpl
js
in
push
fildll
das
adc
fwait
mov
out
pop
nop
jge
xchg
inc
or
lret
sub
xor
mov
fs
pushf
mov
sub
test
xchg
sbb
aam
mov
xchg
into
push
mov
xor
int
cmp
test
dec
inc
jne
mov
loope
push
mov
insl
adc
xor
or
popf
stc
xor
cmp
sbb
popa
lcall
rorb
movsl
cltd
inc
rolb
stc
cmp
add
adc
fwait
jge
in
inc
clc
inc
and
mov
out
pop
xchg
filds
xchg
cmpsl
js
inc
inc
mov
lea
fidivs
movsb
mov
fistps
lahf
out
fs
scas
adc
aas
jg
loop
xor
pop
mov
or
out
out
push
gs
and
dec
adc
mov
inc
mov
adc
cmp
mov
inc
repz
out
dec
mov
arpl
fisttpl
adc
imul
scas
inc
iret
pop
mov
ret
add
xchg
mov
jo
popf
nop
adc
ds
pop
sub
jne
cmp
dec
pop
out
jns
adc
push
scas
xchg
cltd
outsb
push
ja
jp
mov
adc
cmp
pop
mov
dec
pop
aaa
ds
xor
mov
iret
sbb
mov
imull
es
clc
in
cmp
push
loope
push
jle
lahf
mov
outsl
pop
or
sbb
jp
int
fstpl
das
add
lods
jecxz
aas
cmp
iret
pop
fsubs
sbb
push
imul
mov
push
dec
cmp
iret
cmpsl
outsb
fcomps
fsubs
xchg
push
lret
dec
jle
pop
jae
jbe
jl
add
insl
push
dec
lea
push
fstl
fnstsw
ljmp
xchg
in
stos
or
jmp
or
sub
mov
inc
movsb
js
add
jl
inc
or
jg
mov
jbe
cmp
aas
mov
cmp
sti
push
cmpsb
push
mov
and
and
and
pop
push
and
sub
mov
call
xchg
stos
popa
xchg
rcll
and
ds
push
xchg
dec
shl
outsl
pop
jmp
mov
aam
and
push
hlt
xchg
xchg
outsl
aas
jge
popa
and
int3
lret
sub
ljmp
test
sbb
push
repz
inc
mov
xchg
mov
inc
repnz
lahf
cmp
jbe
movsl
xorl
dec
and
data16
inc
pop
and
push
mov
std
ljmp
sbb
bound
pop
dec
mov
in
cmpsb
popa
sahf
cmp
mov
cmp
int3
mov
jns
sahf
int3
dec
mov
mov
rorl
repz
push
push
dec
jae
push
sbb
sub
stos
sub
push
cmp
nop
jnp
ss
inc
mov
add
sbbb
add
hlt
pop
loope
jle
dec
push
cli
mov
inc
adc
mov
add
sub
xchg
in
pop
aam
inc
xchg
mov
or
loop
pop
bound
cmp
or
mov
iret
xchg
fistpll
jle
xchg
ds
aad
mov
js
push
sti
loop
or
fisttpl
outsb
cltd
sarb
push
jno
mov
xlat
cmp
jp
or
out
add
push
ds
sbb
inc
shrb
rclb
sahf
test
mov
dec
cmp
mov
and
popf
in
xchg
vdivps
or
repz
sub
fcmove
cmc
inc
push
push
push
inc
adc
push
bound
and
sub
fwait
mov
fbld
sbb
jg
pop
cmp
scas
mov
aad
or
add
aad
mov
dec
ret
inc
popa
jno
lahf
adc
push
bound
test
daa
outsl
testl
pop
dec
mov
jmp
in
mov
rcrl
jge
mov
sbb
add
das
mov
cmp
push
and
mov
cmp
mov
pop
scas
jmp
ret
adc
jns
jnp
call
dec
gs
cld
daa
hlt
push
fadds
jmp
sahf
sar
mov
jbe
outsb
dec
ss
mov
add
cwtl
cmpsl
xor
test
bound
push
xchg
jb
shrb
gs
shll
rclb
dec
sbb
fbstp
out
cld
mov
fcompl
or
inc
push
pop
add
icebp
imul
sub
mov
push
movsb
xor
or
call
pop
xor
mov
iret
cmp
cmp
in
es
rorb
mov
in
push
rcr
cs
inc
xchg
xchg
pop
xchg
xor
push
in
outsb
into
or
and
ljmp
scas
sti
aad
xchg
xor
mov
pop
push
hlt
shrl
ljmp
push
ret
testl
sbb
xlat
loop
mov
ret
or
xor
cmpsb
aam
arpl
mov
adc
sbb
scas
or
sbb
pop
adc
push
clc
jb
out
pop
mov
mov
xorl
addl
cmc
cmp
sbb
loope
cmp
sub
sbb
in
pop
xchg
loope
imul
ret
cs
xchg
mov
pop
and
fidivrl
xchg
leave
not
mov
jno
cs
push
xorl
fwait
adc
xchg
pop
sub
mov
mov
xlat
test
sbb
pusha
xchg
dec
fidivrs
out
sarb
pusha
lcall
ret
cltd
imull
sub
jne
into
pop
dec
pushl
dec
sbb
inc
out
loop
cmp
in
dec
rcr
sub
out
pop
jb
stos
lods
jb
aam
cmp
imul
push
int
pop
leave
xor
lods
jmp
push
or
inc
inc
out
sbb
pop
cmp
xchg
push
push
rcl
data16
out
add
idivl
adc
pop
xlat
mov
pop
out
jbe
addb
push
mov
pop
sub
insb
pop
movl
stos
in
gs
lret
pop
fdivrs
cmp
or
out
and
jmp
fdivs
cmp
push
add
and
cmpsb
pusha
or
test
in
cld
ret
dec
gs
out
mov
xchg
dec
mov
and
jae
dec
xchg
ret
loop
lods
dec
dec
pop
sbb
xchg
push
mov
mov
push
push
jl
add
or
sub
lret
fstp
adc
xor
push
aam
pusha
insl
xchg
cwtl
inc
fistps
inc
mov
push
jb
aaa
push
xchg
mov
pop
pop
xor
mov
notb
call
dec
rorb
push
pushf
movsl
mov
inc
test
aam
lret
fmuls
mov
push
pusha
dec
push
lods
cmp
lret
xchg
dec
jo
nop
insb
mov
push
int
adc
jo
jb
push
int3
sbb
and
pop
popf
clc
mov
jecxz
mov
cmpsb
mov
scas
jb
and
cmpsl
out
pop
sub
adc
enter
pop
out
adc
fistl
mov
sbb
and
stc
cmp
mov
xor
and
or
mov
or
push
adc
fisubs
in
imul
mov
sbb
xchg
mov
cs
adc
imul
scas
mov
cmc
cmpsb
sbb
cmp
or
ret
push
sub
sbb
xor
xchg
js
test
xor
cmp
dec
stos
adc
sub
sbb
mov
add
jb
shrb
scas
imul
cmpsb
sub
dec
mov
out
mov
ret
add
pop
jecxz
inc
sbb
cld
in
mov
sahf
mov
fcomp
out
movsb
jle
les
je
sbb
or
mov
aad
test
cld
push
jg
mov
aaa
ja
sub
or
mov
pop
loope
push
dec
nop
scas
xchg
mov
jp
int3
jno
xchg
and
inc
pushf
test
mov
cltd
mov
ret
add
cmpsl
pop
ljmp
lods
inc
cmp
pop
out
push
stc
jb
icebp
jb
cli
adc
xor
mov
outsb
xchg
lds
mov
mov
sbb
jo
xor
hlt
mov
push
sub
dec
les
push
stos
mov
pop
fcomps
jecxz
push
mov
inc
cmp
sbb
test
cmp
and
push
or
and
roll
leave
or
mov
xor
fs
cwtl
stos
negl
pop
cs
mov
lret
inc
addb
aam
leave
mov
xchg
mov
aam
je
or
dec
pop
jmp
jge
adc
and
aam
mov
ds
sub
sbb
xchg
pushf
push
sub
jl
push
mov
gs
orb
out
loope
push
aad
mov
mov
xchg
push
jecxz
sub
inc
mov
pusha
mov
mov
in
fcoml
outsb
jns
fisubrl
ret
push
daa
les
lcall
mov
fbstp
inc
int
cmp
sub
and
dec
mov
sub
adc
mov
lds
xchg
imul
aad
ja
rcrb
add
ljmp
inc
lds
shr
lcall
pop
rorl
std
ret
jg
cmpsl
hlt
mov
push
movsl
aam
mov
mov
dec
iret
dec
cmp
sbb
pop
stos
pop
daa
xor
scas
xor
xchg
mov
dec
insl
lret
loopne
cmp
xor
loopne
add
sbb
ret
in
int
sbb
push
mov
add
xor
jb
gs
mov
pop
lods
les
pop
cs
arpl
pop
and
fmul
sarl
shr
cmp
adc
jo
roll
mov
xchg
xchg
mov
adc
mov
jecxz
out
outsb
cmpsl
sub
sub
xor
call
aam
inc
xor
pop
push
call
xchg
cmp
dec
test
add
lret
es
aad
pop
xchg
dec
pop
xchg
jl
or
js
mov
push
outsl
pop
lret
xlat
mov
loopne
rdtsc
aam
inc
adc
fnstenv
sbb
sbb
cmpsb
test
sti
push
cld
xor
in
into
sti
es
rcr
movsl
or
sbb
pop
call
adc
or
push
jg
pop
adc
adc
sub
cmp
jo
fisttpl
mov
aaa
and
movsl
xor
lods
jns
push
xchg
xlat
xchg
push
dec
clc
ret
push
repz
adc
bnd
paddusb
loopne
xor
pop
nop
mov
test
adc
int
mov
jbe
out
ffreep
mov
mov
shll
jne
in
dec
mov
adcb
lock
fwait
addl
into
shlb
sub
pop
mov
insl
daa
mov
and
jl
mov
aaa
ja
sbb
cmpsl
inc
iret
xor
pop
imul
imul
xchg
fbstp
flds
addr16
push
sub
psllw
mov
mov
or
jae
mov
or
mov
mov
push
es
cmp
loop
jmp
iret
lahf
rcll
pop
pop
pop
dec
nop
jne
incl
jmp
mov
mov
ss
icebp
sti
mov
sub
and
mov
push
aas
sarb
push
and
test
loopne
cmc
jmp
aam
lea
push
mov
mov
insb
dec
dec
in
fcoml
inc
mov
lcall
cld
pop
mov
xor
fprem1
inc
das
shll
rcr
and
out
xchg
addl
mov
sub
les
and
imull
in
pushf
xor
xchg
jb
loopne
mov
popa
or
sub
sub
push
lcall
jecxz
rorl
jno
data16
adc
push
pop
add
xchg
mov
ljmp
insb
and
pushf
mov
or
pop
cli
xchg
push
mov
jbe
popf
sbb
pop
inc
lds
dec
insl
add
sbb
xchg
clc
daa
inc
mov
xor
ljmp
in
mov
or
adc
mov
movsl
jns
movsb
sbb
les
mov
dec
pop
push
mov
pushf
imul
xor
xchg
and
sub
add
push
xchg
jle
cmp
or
hlt
push
sti
or
fcmovbe
push
adc
sbb
and
dec
pop
push
out
add
ja
inc
xchg
or
js
cmp
aas
mov
jge
dec
dec
jnp
loopne
mov
lahf
xor
mov
std
iret
push
dec
jmp
mov
outsb
imul
jecxz
outsb
into
sti
or
push
mulb
stc
loop
fbstp
out
scas
int3
mov
bound
xor
cmc
xor
xor
sti
or
test
fidivs
adcl
ds
or
adc
xlat
xor
pop
mov
jnp
dec
ficomps
in
xor
adc
pop
aam
and
pandn
jo
loop
jno
add
xlat
lods
cltd
mov
and
movsb
jmp
xchg
popf
and
mov
push
ret
sbb
ret
jmp
inc
jns
movsl
jbe
mov
add
lret
jbe
fiaddl
jae
adc
negb
aad
jns
outsb
sbb
pop
jmp
xchg
pusha
mov
cmp
jbe
ja
iret
xor
and
fadds
rolb
sbb
popf
or
shl
mov
cmp
mul
pop
xchg
sbb
cmp
cmp
scas
das
js
sbb
popa
aaa
sbb
in
pop
sub
push
jo
lahf
xchg
idiv
js
cld
mov
lods
push
jmp
into
mov
push
cmp
pop
lods
jbe
out
adcb
mov
cmpsl
test
cmc
add
adc
dec
movb
pop
jecxz
icebp
iret
icebp
xchg
shlb
xchg
popa
jns
dec
aas
or
out
jmp
mov
xchg
mov
rorb
js
cmpsl
dec
xlat
das
pop
inc
addr16
xlat
imul
stos
testl
gs
cmp
shll
movsb
sub
and
mov
or
xchg
pop
repz
aad
je
jno
test
jbe
lret
cmpsb
push
mov
fcmovnbe
popa
jae
pushf
pop
jno
sub
out
mov
in
mov
mov
into
fdivrl
out
xor
mov
cli
cmp
test
into
mov
pop
out
xchg
jb
jb
sub
mov
pop
and
es
adc
mov
cmpsb
cmpb
ja
cmp
push
sbb
int3
xchg
jns
jb
mov
dec
adc
iret
xor
inc
lds
lock
sub
xor
stos
jg
popf
push
ja
cs
mov
insb
sbbl
push
dec
or
in
sbb
add
or
sub
popa
inc
jg
or
inc
mov
outsb
fmull
in
pop
pop
xchg
aaa
xor
out
leave
lea
mov
out
add
push
or
mov
mov
push
cmc
es
lods
add
sti
sub
inc
xchg
outsl
mov
sbb
add
fisubrl
push
test
mov
pop
outsl
adc
jae
aam
mov
movsl
rcll
bound
dec
add
push
xchg
pand
mov
adc
aad
or
xor
xchg
inc
fildl
or
daa
stos
daa
xor
lods
xor
adc
fcmovne
xchg
adc
or
test
gs
cmc
sbb
sti
adc
jae
movsb
mov
aad
add
dec
fiadds
icebp
cmp
and
xchg
mov
adcb
outsb
dec
divb
dec
bound
inc
lcall
push
outsb
in
jb
or
cmp
mov
ffree
ljmp
outsb
dec
call
imul
shrl
push
dec
cmpsb
fdivl
fsub
loop
mov
push
mov
bnd
fisubrl
dec
rorl
or
cmp
xchg
pusha
or
push
fdivr
arpl
sti
sbb
mov
cli
push
lret
movsb
fs
leave
lods
shlb
es
ret
adc
cmpsl
test
repz
push
mov
jne
xor
into
cmc
fcom
fildl
fs
cmp
movsb
in
in
stos
sub
pop
arpl
mov
mov
xlat
pop
mov
add
cmp
dec
and
cmp
movl
cld
icebp
sbb
mov
js
xor
or
lds
push
outsb
pop
and
push
mov
sbb
cmp
vmread
adc
pop
rorl
sbb
ljmp
mov
push
adc
sub
sbb
test
shll
jmp
inc
push
sahf
add
scas
cs
or
add
inc
cmp
inc
sti
xor
out
shrl
loope
pop
jge
push
sbb
xorb
jg
or
insl
lock
dec
outsl
imul
das
xor
jg
inc
leave
inc
xor
pop
pop
mov
stos
xor
xchg
je
dec
hlt
das
movsl
pop
jnp
adc
cmpsb
ror
out
sti
lock
in
into
add
sahf
dec
mov
jp
push
fstps
push
push
je
pop
loope
mov
insb
out
into
stos
jns
xchg
add
and
jno
xchg
sbb
add
incl
dec
gs
jg
sub
pusha
roll
fstps
cli
jge
test
or
mov
incl
mov
mov
sub
mov
call
movsb
aam
loop
cltd
sbb
xchg
testb
sub
sbb
sbb
add
jl
mov
test
or
add
jne
pop
pop
jnp
cmpsl
cld
cli
cli
lea
pop
dec
jecxz
xchg
loope
mov
push
jge
mov
rorb
pop
mov
mov
ficoms
mov
call
mov
lcall
cmp
aam
outsb
push
mov
inc
pop
movsb
sub
cli
rorb
xor
xchg
loop
pop
ret
dec
adc
add
push
cmpsl
xchg
iret
mov
ret
test
mov
xlat
xchg
push
fildl
xlat
adcb
mov
adc
xchg
mov
cmp
xchg
imul
das
jg
pop
inc
movsb
rcr
scas
outsl
xor
pop
push
mov
cmp
xor
jg
xlat
inc
xchg
cmp
jbe
mov
addr16
push
push
jp
or
lods
dec
jae
movsb
cmp
stos
and
lods
sbb
add
lds
xor
sbb
xchg
fucom
aad
xchg
ficomps
mov
mov
cmpsl
jge
push
mov
out
mov
scas
loopne
cmpsb
pop
loopne
std
faddl
into
test
es
aam
fsubs
xchg
imul
adc
pop
mov
adc
jg
in
movsb
lret
mov
mov
add
enter
add
xchg
in
andb
sub
test
push
ret
aam
inc
hlt
and
sub
fcoml
cwtl
shr
clc
mov
push
sub
dec
addl
fnsave
das
ficoml
fwait
or
sbb
jns
inc
mov
jmp
pop
adc
mov
pop
notb
mov
pop
xor
add
out
pop
or
adc
mov
cmpsb
addr16
push
into
cmc
xchg
stos
inc
jmp
rorl
mov
dec
call
int
lods
jmp
push
ret
adc
adc
lcall
rcl
pop
shlb
jo
mov
test
push
pop
loopne
add
mov
pop
mov
mov
adc
inc
out
push
test
pop
jecxz
dec
xor
mov
mov
ret
mov
ret
xchg
sbb
lcall
adc
push
push
sbb
jge
sub
lods
mov
pop
fiaddl
mov
subl
loop
aas
sub
sub
adc
sbb
cmpl
mov
and
nop
aad
xchg
fnstsw
outsb
mov
mov
inc
adc
cmpsb
sbb
cmp
and
or
popf
jns
movzbl
out
sbb
xor
xor
stc
add
shrb
dec
shrl
out
sub
push
nop
mov
es
jnp
xlat
outsl
hlt
sub
in
xor
push
incb
push
mov
mov
mov
adc
xchg
sarb
xor
mov
inc
mov
and
aas
pop
sbb
add
jge
jns
data16
mov
faddp
addr16
sbb
mov
or
add
and
jbe
xchg
call
fwait
pop
dec
jne
adc
xor
and
and
and
cmpsb
inc
sub
lahf
lds
fmuls
adc
dec
xlat
pop
push
dec
push
pop
mov
outsl
jae
clc
inc
sub
lds
sbb
mov
xchg
mov
hlt
push
out
test
pop
lret
dec
and
mov
mov
mov
add
sub
xchg
fnstenv
fwait
mov
push
test
test
cmp
pop
fadds
imul
xor
mov
sub
mov
adc
pusha
inc
test
int3
cmpsb
dec
cmp
js
push
ficomps
daa
push
jp
push
xchg
aaa
testb
xchg
xchg
daa
mov
pop
cmp
lahf
mov
xchg
leave
lret
inc
xchg
addb
jle
xchg
xchg
int3
xchg
lret
push
testb
andl
outsb
fwait
pop
cmp
cs
sub
mov
shrb
pop
sti
pop
jmp
sbbl
xor
lea
xor
jmp
fcomi
dec
mov
stc
dec
int3
mov
into
push
mov
sbb
ds
dec
rcll
and
mov
lret
push
adc
xchg
sub
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
jmp
add
mov
hlt
aas
push
enter
xchg
rolb
add
xlat
mov
cltd
sbb
test
xchg
aaa
out
jo
inc
loopne
out
fsub
add
lods
scas
pop
inc
fnstsw
sarl
pop
fisttps
adcl
inc
or
lret
mov
lea
in
in
fnstcw
mov
mov
imul
test
popf
push
jg
sbb
or
sbb
mov
mov
ss
insl
xchg
mov
pop
out
adc
jnp
cmpb
daa
mov
push
sub
incl
jmp
mov
pushf
imul
pop
ret
xor
fisttps
or
sub
repz
pop
dec
or
sub
or
daa
out
es
sub
lock
xor
adc
int3
or
dec
loop
or
pusha
lret
mov
jnp
push
jle
mov
rcll
sbb
out
xor
or
push
sbbb
mov
push
ljmp
fisttps
or
mov
aam
cmp
push
shrl
lods
sub
sbb
psubq
icebp
call
sub
pop
inc
fstpt
inc
loop
insb
pop
inc
outsb
push
fchs
dec
ja
into
icebp
sbb
shl
test
in
clc
sub
fs
rorb
mov
enter
pop
test
cltd
cli
xchg
popf
iret
xchg
pop
iret
jmp
data16
xlat
out
call
repnz
add
fsubrs
imul
xor
lds
test
adc
jg
sbb
push
shl
xchg
jg
out
cli
cwtl
bound
jbe
add
lfs
adc
repnz
cmc
mov
or
rcrl
cmp
jo
ds
add
sbb
in
lahf
pop
cmc
lds
push
aad
into
fstl
or
test
not
xor
imul
shl
adc
std
xor
sbb
fcomip
mov
lcall
and
in
in
ss
push
andnps
daa
fbld
aaa
xchg
sub
cmp
mov
pop
cld
fwait
add
and
fbstp
shlb
push
jp
rcr
enter
dec
rolb
mov
jecxz
mov
insb
pushf
pop
aam
call
sahf
test
leave
pop
jbe
add
les
mov
fmull
add
jecxz
stos
or
xchg
mov
xchg
jp
jge
mov
sbb
in
pushf
sbbl
lds
aaa
popf
rolb
lods
jb
insb
pop
lret
aas
adc
lods
pop
push
mov
test
out
shl
jbe
mov
dec
xchg
rcl
add
js
data16
push
mov
xor
scas
aas
mov
inc
addr16
dec
push
push
sbb
jns
adc
dec
xlat
and
int3
mov
repnz
dec
aaa
cmp
push
mov
xchg
leave
add
loopne
jge
jg
aaa
jecxz
outsb
sbb
pop
std
cwtl
jns
sub
movsb
dec
xchg
popa
push
ficoml
das
ss
add
xor
bnd
repz
mov
xchg
mov
push
cltd
cs
cmp
cmp
shrb
pop
mov
leave
ljmp
add
xchg
mov
jl
je
popa
xor
mov
cs
mov
es
xchg
sbb
ret
mov
push
in
xor
mov
or
and
lret
and
shr
lahf
das
or
push
mov
adc
jle
pop
push
xor
add
loopne
dec
push
out
add
jne
push
pushf
inc
add
xor
dec
imul
nop
inc
stc
fucom
xlat
jle
jmp
lds
cmp
mov
lea
xchg
mov
arpl
dec
gs
clc
push
xchg
push
pusha
xchg
mov
mov
negl
lret
mov
ficoml
cmp
jb
loopne
or
repz
sub
das
lahf
cmp
fxch
jo
ror
sub
sbb
lret
mov
jecxz
jbe
bound
loop
and
ret
jae
dec
adc
aas
mov
fisttps
jmp
lret
cwtl
sbb
in
mov
or
adc
scas
repz
and
push
arpl
out
xor
lret
ja
push
ficomps
cmp
outsl
and
inc
jne
lods
rorb
pop
pop
je
pop
ja
xor
cwtl
adc
or
jg
xchg
pop
sbb
pop
push
push
pop
sub
mov
jno
xor
clc
or
out
mov
xor
movsb
jne
push
data16
jne
fnstcw
inc
jne
push
hlt
mov
in
add
inc
adc
cwtl
cmp
mov
aam
cmp
adc
cld
mov
mov
inc
ret
imul
in
out
sahf
dec
shlb
mov
js
add
and
or
mov
pop
add
push
push
dec
lret
mov
repnz
mov
push
fmul
jae
sub
shll
mov
aas
mov
xor
pop
adc
mov
sbb
jno
dec
or
aas
pusha
or
enter
mov
xor
pusha
ds
xchg
sub
jmp
inc
xor
shrl
pop
pop
loopne
xchg
xchg
mov
ss
fidivl
int
aam
int3
ja
cmc
xor
into
stos
in
cli
nop
in
mov
scas
mov
shr
in
mov
add
mov
popf
sub
fists
imul
shl
xchg
jl
pushf
sub
out
insl
add
xchg
lds
es
adc
popf
cmp
jo
and
ljmp
push
mov
sub
inc
inc
aam
jmp
sub
adc
sbb
subb
add
sbb
fcomi
inc
push
push
bound
mov
adc
mov
dec
mov
inc
jmp
aas
jo
fucomp
aam
mov
sbb
fwait
push
daa
pop
iret
mov
rol
pop
insl
mov
xor
das
fnstcw
sub
in
in
and
add
pop
inc
subl
adc
mov
xor
sbb
xchg
pop
dec
inc
push
push
pop
movsb
addr16
or
imul
orb
lcall
push
out
test
lds
mov
mov
nop
lods
imul
scas
mov
daa
sti
mov
lock
lcall
ret
lret
cmp
jnp
out
xchg
pop
or
mov
arpl
add
dec
fistpl
das
adc
mov
sub
jo
push
sub
aas
ja
mov
movsl
jmp
vunpcklps
mov
dec
pusha
mov
mov
jno
aaa
data16
jnp
push
xchg
cli
pushf
and
pop
xchg
xor
femms
iret
cmp
push
inc
movsb
xchg
shrb
inc
or
cmp
mov
mov
jmp
mov
mov
pop
fildl
clc
push
out
xorl
fsubrs
and
inc
loope
adc
adc
sub
jns
imul
jmp
repz
cltd
js
decl
lds
dec
out
sbb
pop
push
lret
mov
adc
and
dec
mov
dec
xor
cltd
sbb
je
mov
add
stos
cmc
dec
pop
cmp
std
cmpsb
cmp
mov
rcr
sub
cld
leave
push
hlt
fdivrs
rcrl
adc
cli
xchg
cmp
enter
loope
dec
adc
insl
int
mov
pop
fcompl
add
out
xor
xchg
push
int3
sub
and
inc
xchg
in
or
faddl
jae
or
pop
sub
das
cmpsb
call
cmpsb
neg
mov
lods
dec
imul
into
test
out
cmp
lock
adc
das
xchg
xchg
dec
jnp
xor
ret
pop
and
inc
push
xor
sti
dec
mov
pop
lods
in
js
imul
pop
push
push
in
jae
insl
mov
push
scas
mov
xlat
scas
out
lods
pop
shll
push
icebp
pop
push
mov
mov
enter
repz
push
ja
sub
fiadds
jg
movsl
int3
int
repz
xlat
fldenv
dec
scas
mov
popf
inc
ds
and
inc
pop
push
mov
dec
jp
subl
push
aad
repnz
cmc
shll
aas
jmp
pusha
xchg
dec
scas
push
lret
mov
inc
jbe
ret
push
xor
lods
jle
push
mov
or
jp
outsb
js
xchg
stc
pop
js
les
cmp
bound
movsl
jg
sub
dec
movsb
hlt
mov
adc
cld
add
cmp
movsb
cmpl
scas
pop
fs
js
mov
cmp
or
fwait
dec
mov
mov
aas
lock
lret
and
mov
loope
fmul
popa
lds
aad
iret
mov
cmp
adc
les
addr16
mov
and
cltd
imul
lahf
fdivl
or
aam
sbb
inc
pop
and
addr16
movsl
ret
out
aam
cmpsb
adc
pop
or
sbb
icebp
cmp
cvtpi2ps
pop
rcll
lret
das
das
into
jne
cld
pop
jb
pusha
or
inc
pushf
xchg
mov
mov
fsub
dec
sub
inc
adc
inc
ja
shll
cmp
sahf
push
and
aas
dec
dec
fnstsw
mov
mov
bound
sbb
loopne
test
sub
jle
mov
push
ret
dec
cmp
cmp
fprem
stos
dec
sbb
jmp
dec
rcl
mov
dec
in
mov
icebp
xchg
out
arpl
cmpsb
mov
ss
dec
push
or
adc
in
jae
push
loopne
push
in
xor
cmpb
jl
lods
subb
sub
add
pusha
sbb
pop
mov
mov
fsubrs
mov
test
lret
dec
adcl
nop
movsl
xchg
add
mov
sbb
xchg
iret
xchg
mov
jmp
cmp
dec
imul
scas
cwtl
lds
xchg
rcll
xchg
pushf
mov
data16
repz
xlat
mov
stos
jo
sbb
mov
loope
addb
or
outsl
mov
pop
fs
sbb
push
popa
jb
dec
insl
cwtl
fisubs
jbe
jne
sti
das
jns
imul
enter
loopne
test
aam
lcall
xor
in
sub
cmc
xchg
mov
movsb
add
iret
adc
sbb
pop
test
cmp
cmpsb
add
or
ss
loope
inc
jns
pop
cmc
xorb
fimull
adc
and
xor
xchg
iret
rolb
sbb
xchg
test
jno
mov
push
dec
sarl
or
adc
ret
shll
push
out
mov
mov
mov
sbb
mov
mov
rcl
add
sarl
mov
jmp
dec
sbb
inc
inc
jmp
pushf
ljmp
jne
test
mov
cmp
repnz
sub
lcall
push
je
inc
test
into
add
push
sahf
lods
adc
jmp
ror
stos
mov
movsl
loop
mov
sbb
xchg
in
lock
push
enter
idiv
inc
jmp
add
inc
inc
push
cmp
xchg
andb
inc
js
pop
mov
push
mov
pop
xchg
inc
cld
and
insl
outsl
add
mov
adc
mov
in
lcall
cs
cmp
lods
call
sub
cmp
sbb
incb
lret
sbb
dec
sub
or
lahf
out
mov
jo
stos
fdiv
leave
fisttpl
shl
mov
push
mulb
dec
xchg
mov
mov
add
push
push
test
sbb
jmp
repnz
jmp
or
push
push
cmp
mov
and
jns
outsb
test
cmp
mov
gs
dec
mov
pop
ret
dec
jl
dec
std
aad
xor
sub
lahf
cwtl
repnz
jg
dec
daa
stos
cmp
push
rcll
dec
jb
mov
or
call
inc
ret
add
out
rorl
mov
enter
mov
push
mov
xor
push
xchg
out
out
jno
mov
loope
loop
sbb
lcall
sub
ss
andl
pusha
iret
rcll
add
in
or
insb
adc
cmpsl
jge
jmp
sahf
mov
push
dec
mov
ljmp
inc
testb
jno
mov
test
cmp
mov
pop
or
popa
xchg
mov
stc
adc
repnz
shll
or
test
pop
data16
xorb
cmc
adc
cmp
jl
repz
sub
push
inc
inc
or
jg
aas
mov
xchg
xchg
sbb
pop
add
jge
loopne
xor
in
dec
ret
xchg
loop
cli
movsb
out
jo
iret
je
mov
sub
out
and
sub
sbb
loopne
mov
out
cmp
pop
loop
mov
inc
ljmp
mov
xchg
xor
pop
ja
repnz
test
inc
xchg
sub
aam
and
mov
hlt
mov
sahf
pop
lea
mov
test
xchg
mov
cmp
jp
sti
inc
dec
mov
or
mov
and
ror
mov
jmp
push
xchg
repnz
and
popa
shrl
inc
push
addr16
fstpl
aaa
mov
mov
jmp
sbb
filds
outsb
jns
movsb
je
sub
pop
insb
movsl
rclb
leave
ficomps
lahf
repz
imul
xchg
sbb
mov
pop
stos
shl
cmp
xlat
cmc
fsub
jno
sbb
mov
jne
into
dec
faddl
mov
push
loope
jge
push
nop
xchg
mov
dec
mov
hlt
pop
cltd
insb
cmp
and
adc
pop
and
popf
loopne
inc
mov
ljmp
cmc
pushf
jg
xchg
lock
out
shrl
stos
cltd
stos
mov
gs
fwait
test
pop
pop
in
enter
lea
adc
int3
loop
js
dec
pop
es
sub
cmpsb
loope
or
mov
inc
inc
dec
int3
aam
arpl
stos
sub
sbb
int
ds
aad
out
sahf
out
sbb
mov
gs
movsl
push
sbb
mov
adc
xchg
cmc
cmp
sbb
scas
cli
in
mov
out
mov
push
roll
push
pop
push
sub
and
inc
mov
pusha
shll
xchg
add
and
stc
jg
ret
pushf
push
lret
daa
lock
inc
inc
dec
ror
fdivrp
push
fs
jge
jb
xor
scas
stos
jno
es
rcl
pop
addb
xor
in
xor
and
shrb
sub
and
aas
fnstcw
js
mov
hlt
rorl
adc
jbe
ja
lret
stos
sar
cmc
mov
add
test
sbb
mov
push
dec
sti
cld
imul
loop
pop
xor
nop
dec
xchg
shlb
lret
in
push
jg
xchg
jmp
stos
xchg
pop
jo
pop
and
add
out
cltd
inc
fwait
push
adc
dec
sub
jbe
insl
xor
bound
and
loop
imul
inc
or
cmp
ja
push
mov
mov
mov
test
and
push
sub
sub
pop
dec
stos
push
pop
sbb
movsl
jmp
xor
xchg
jae
mov
imul
or
out
mov
addb
pop
cmp
dec
fs
fwait
cmp
inc
ret
data16
lock
jno
push
lods
mov
pop
mov
icebp
or
popa
sub
in
jae
and
in
xchg
ret
mov
movsb
xchg
sub
icebp
rdpmc
and
loopne
push
into
ja
fldt
clc
lods
jl
inc
xchg
je
adc
xchg
xor
push
and
adc
ret
int
in
xchg
scas
or
in
stc
sbb
or
sub
pushl
movsl
or
xor
inc
das
inc
jl
jne
and
fcompl
sub
fs
inc
mov
inc
movb
or
mov
das
arpl
rorb
mov
push
daa
stc
gs
cmp
lock
cmp
or
cmc
in
mov
dec
adc
add
outsl
inc
int
pop
addl
or
and
imul
mov
dec
xchg
dec
fsubl
aad
jnp
cmp
push
adc
cmpb
imul
xor
cld
test
testb
cwtl
pop
pop
mov
add
fsubrs
xor
loop
popf
dec
insl
sub
jne
adc
adc
imul
test
cmp
ljmp
cli
jle
sbb
test
into
test
inc
jmp
mov
fsubr
and
push
inc
inc
repz
std
xchg
sbb
xor
ret
mov
adc
mov
mov
sub
mov
aad
mov
lds
into
or
and
into
jl
movsl
cmp
fwait
mov
scas
test
adc
push
dec
mov
or
test
mov
popa
sbb
xchg
mov
hlt
and
push
daa
lds
aas
jb
fimuls
mov
icebp
cli
push
cmpsb
out
pop
xchg
mov
aad
les
in
jo
pop
mov
test
das
pop
sbb
sbb
ret
bound
cmp
int
mov
or
cmc
dec
jge
adcl
out
xor
inc
or
sub
js
add
shlb
inc
mov
movsl
xor
pushf
outsb
outsb
aas
test
fiadds
mov
rol
cmp
sbb
int3
out
mov
jns
mov
inc
ret
sbb
or
fucomip
inc
sub
xchg
aam
jne
into
stos
ds
mov
xchg
lahf
and
loopne
pop
cmp
pop
fidivrl
call
repnz
cmp
mov
cwtl
cmp
push
enter
pop
inc
add
lcall
mov
xchg
adc
or
lret
mov
mov
and
fisubl
mov
sahf
cmc
and
push
pop
and
aaa
rcl
push
popa
roll
xchg
pop
arpl
rcrl
sti
std
jo
leave
je
jo
jns
and
in
scas
inc
fmull
insb
int3
mov
pop
das
cmp
or
sbb
test
icebp
lahf
mov
inc
mov
lcall
iret
sub
jbe
ljmp
inc
pushf
jne
test
or
loope
test
loopne
negl
clc
mov
push
pop
sub
cltd
jns
scas
jge
shll
cmp
das
lods
stc
pop
into
icebp
xchg
test
cmpsl
and
fdivs
out
xchg
mov
xchg
mov
mov
xchg
xchg
sub
das
mov
enter
out
mov
or
int3
xchg
push
stos
pop
xchg
adc
mov
cli
test
imul
inc
mov
or
and
mov
in
out
cmp
test
in
sbb
push
inc
push
inc
negb
sahf
pop
jge
shrl
lahf
das
xor
ljmp
sub
inc
add
dec
nop
jmp
dec
push
jno
addr16
xchg
pop
xchg
cmp
int3
addr16
and
xlat
sub
adc
aaa
mov
cmp
test
cwtl
cmpsl
adcl
push
lds
inc
sbb
or
sub
sahf
fimuls
add
pop
inc
cmp
stos
repnz
xchg
lds
and
mov
pushf
sub
lea
scas
mov
mov
fsubl
dec
fcomip
lret
aaa
xor
sbb
in
mov
pop
mov
add
xchg
mov
cmp
hlt
or
jcxz,pn
inc
cmp
fwait
imul
enter
jbe
ljmp
gs
daa
shrb
xor
cld
dec
in
clc
mov
xchg
xlat
out
sti
das
dec
jmp
int
pop
adc
loopne
xchg
jmp
addl
outsb
pop
inc
icebp
xor
pop
or
aam
push
mov
rcll
in
mov
dec
mov
pop
xchg
xor
mov
mov
repz
cmp
xchg
outsb
adc
mov
jmp
cmpsb
orl
xchg
mov
push
cmpsl
jb
dec
scas
in
mov
fmul
sub
sti
dec
ljmp
jge,pn
sbb
jmp
push
and
mov
sbb
addl
ret
in
push
inc
jle
add
popf
mov
in
cmp
lods
or
inc
popa
pop
and
mov
pushf
xchg
nop
mulb
cmp
pop
sub
gs
lock
xor
mov
inc
sbb
mov
orl
sbb
pop
imul
sub
mov
xchg
jmp
sub
pop
push
icebp
inc
sub
mov
in
mov
xchg
hlt
jo
mov
aad
fistpll
jae
push
bound
arpl
jnp
or
and
pop
test
mov
cmc
push
or
mov
sub
jb
mov
cs
ret
fistpl
xor
xchg
pop
adc
das
bound
repz
jno
xchg
aaa
push
sub
pop
adc
bound
test
cmpsl
and
test
ds
sub
push
add
mov
call
jmp
xchg
add
enter
lods
fidivrl
ljmp
ror
cwtl
pop
mov
inc
fbld
xor
popf
aam
fwait
sub
int3
stos
cwtl
jle
jb
das
inc
cmp
and
mov
aad
jnp
jmp
dec
push
xlat
sbb
insl
sub
pop
jp
cmp
inc
daa
insb
inc
adc
jno
into
sub
call
jge
xchg
adc
dec
cld
and
iret
push
push
push
mov
push
das
push
sbb
aam
pop
or
jecxz
test
xchg
mov
cmpsb
pop
mov
xchg
pop
enter
jnp
test
mov
rclb
sub
add
loope
or
add
xchg
push
popa
test
mov
cmp
into
cmpsl
pop
push
pop
fisubrs
cmp
stc
cld
or
inc
clc
push
insl
xchg
ds
outsl
je
test
fisubrl
ja
add
movsl
or
jo
js
pushl
add
lahf
dec
pop
jg
mov
std
pop
in
fwait
in
mov
mov
test
movsb
mov
call
mov
cli
fdivrl
jo
sub
adc
pop
lods
mov
mov
cltd
adc
or
xor
pop
sarl
dec
imul
ja
push
enter
and
mov
lds
rcrb
xorb
je
mov
pusha
sbb
push
sub
cmpb
leave
ds
jns
and
int3
loope
push
cmp
out
incb
out
and
mov
loop
mov
push
sbb
clc
out
repz
add
lret
sub
iret
push
aaa
mov
jge
in
push
hlt
je
fwait
in
add
sbb
inc
or
pop
xlat
jbe
and
mov
mov
dec
lcall
dec
jns
out
outsl
dec
push
mov
jp
test
mov
push
outsb
pusha
ljmp
out
outsl
aas
ds
fidivl
jg
stos
jge
daa
xchg
scas
dec
loope
add
in
ficompl
mov
jae
orl
xor
dec
mov
add
scas
and
pop
jp
lds
jb
in
fnstsw
iret
sbb
mov
cs
mov
mov
pop
leave
inc
lea
jle
clc
icebp
cmp
testb
pop
fbstp
dec
xor
mov
cmpsb
jb
mov
push
shl
mov
mov
loopne
push
popa
mov
adc
mov
data16
stos
push
fs
addl
dec
test
pop
out
mov
jp
inc
mov
mov
leave
lret
outsb
mov
or
pop
push
or
ss
adc
shlb
pop
fst
adc
dec
fimull
pop
cmpsl
jae
or
aas
xor
jp
sarb
sbb
imul
jbe
movsb
push
xor
pop
rolb
test
rcrl
mov
cld
and
inc
xchg
push
pop
mov
or
push
push
and
test
inc
xor
add
pusha
inc
pushf
fsubrs
mov
push
out
repz
xchg
and
loopne
insl
mov
dec
std
jns
mov
xorl
adc
inc
push
jmp
enter
dec
or
push
test
mov
pop
je
pop
scas
mov
and
stc
mov
add
mulb
fsub
add
bound
jb
dec
lret
into
rorb
pop
xchg
jbe
aaa
pop
inc
jns
sub
mov
sahf
rorb
outsb
ret
pop
std
xchg
pop
jg
xor
jge
in
cmpsb
mov
cld
jmp
fwait
sub
ss
repnz
shll
mov
outsl
aam
mov
bound
popa
dec
mov
sbb
add
xchg
push
imul
test
mov
or
pop
movsl
dec
sar
ret
aaa
in
push
sti
or
jg
jecxz
jnp
iret
mov
push
inc
jb
xchg
in
push
and
outsb
inc
add
mov
adc
jmp
int3
cld
mov
inc
js
dec
push
cld
push
or
aam
sub
dec
inc
jae
negb
sbb
adc
add
cmp
pop
cli
movsb
xlat
test
gs
or
dec
out
cmp
fildll
and
std
pop
das
icebp
mov
mov
cmp
sti
sbb
inc
dec
push
pop
insb
add
pop
inc
add
dec
dec
push
dec
and
sbb
enter
and
add
push
iret
jne
jns
push
frstor
xor
mov
inc
js
inc
scas
negl
xchg
cmpsl
push
in
das
sub
adc
push
out
xlat
leave
ds
mov
add
adc
mov
mov
or
in
mov
iret
scas
lcall
inc
pop
jb
or
in
adc
imul
nop
add
aaa
mov
clc
rclb
ljmp
mov
or
pop
repnz
push
jl
imul
mov
icebp
out
andl
repz
push
mov
bound
fs
loope
mov
mov
xor
inc
mov
mov
sbb
aad
dec
mov
and
punpckhdq
cmp
jecxz
cs
pushf
dec
sbb
push
or
mov
popa
ds
movsl
aam
jno
rcl
in
lods
loopne
mov
and
addr16
mov
dec
loop
push
adc
loope
mov
orb
shlb
gs
aad
inc
iret
iret
enter
aaa
aaa
fdiv
cmpb
scas
rcrl
cmp
scas
test
cmpb
scas
movsb
fisttpl
cli
enterw
jne
ljmp
adc
push
enter
inc
int
incb
dec
xor
lret
jge
in
hlt
sti
loopne
mov
iret
jae
lea
lea
mov
lret
repnz
jmp
inc
add
popf
stos
pop
arpl
fwait
sub
iret
pop
testl
mov
push
out
jl
mov
and
jno
xchg
lods
pushf
mov
rcrb
sub
shl
fs
fs
add
es
ja
mov
sbb
and
push
xchg
out
adcl
add
pop
xchg
rcrl
sbb
scas
push
test
outsl
jns
mov
arpl
aam
idivl
rcl
xor
cmp
mov
sbb
sti
pop
and
fldenv
add
aaa
lret
fstpl
lret
in
lock
add
dec
scas
fistpll
popf
nop
or
jecxz
cmpsl
arpl
sub
pop
xchg
push
pop
into
faddp
enter
aaa
xor
out
jb
outsl
cmp
repz
test
das
ja
mov
dec
ss
stos
xchg
adcl
jnp
pop
bound
dec
clc
lods
movsl
and
xor
cwtl
std
sub
orl
arpl
aam
push
xchg
add
mov
inc
jb
loope
dec
sbb
insl
dec
mov
adc
test
ds
add
fwait
pop
outsl
or
std
push
mov
insb
ror
nop
add
incl
push
jae
cmp
xor
and
insb
and
outsb
vcvtsd2si
mov
and
jo
daa
sbb
adc
test
adc
inc
popf
pop
sahf
out
dec
shlb
mov
loop
jnp
sub
dec
jnp
adc
sahf
pop
mov
ljmp
movsl
in
or
rep
xor
andl
lcall
imul
shld
cmp
imul
repnz
das
stos
mov
sti
cmp
or
push
in
stos
push
and
jno
xor
xchg
cmp
aam
mov
testb
inc
repz
pop
orl
jno
inc
movsl
sbb
fwait
stos
mov
push
fstl
lret
aam
or
fcomi
inc
test
loope
mov
jb
pop
push
jne
ret
jo
stos
inc
stc
push
imul
pop
sbb
add
jl
lret
lcall
rol
xchg
inc
or
aas
jl
cli
add
scas
cmp
ficomps
push
jp
popl
test
jbe
jns
jb
out
iret
cld
call
scas
sub
cmp
mov
mov
inc
mov
inc
test
pop
xchg
and
out
mov
int3
dec
mov
addr16
sub
mov
sub
mov
data16
cmpl
dec
inc
push
sbb
or
pop
popa
cmpsl
inc
xchg
add
cmp
js
test
xchg
leave
adc
aas
outsl
xlat
lret
cltd
and
inc
loopne
mov
mov
incl
mov
mov
push
sti
jp
iret
jo
loop
push
aam
mov
mov
cwtl
fstps
xor
ret
xchg
push
mulb
outsb
das
xchg
mov
mov
pop
aaa
pop
ja
dec
insb
jbe
test
hlt
mov
fadds
inc
cmp
xchg
push
jge
movsb
sti
adc
repz
shrl
cmc
mov
test
cld
dec
mov
mov
imul
insl
stos
and
das
cmp
xchg
mov
lock
add
sub
addr16
prefetch
or
dec
fwait
inc
lcall
add
push
test
test
xor
cltd
and
add
bound
loope
inc
xchg
sbbb
test
dec
ret
test
std
dec
add
call
stos
xor
mov
or
jl
adc
pop
mov
lahf
ret
lcall
out
outsb
cmc
loopne
xchg
xchg
ret
mov
jo
fnstcw
adc
mov
cli
ds
adc
xchg
mov
xor
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
jmp
outsb
lods
or
mov
cmpsb
or
push
mov
scas
addl
stc
ljmp
ret
sub
cmp
sbb
imul
addr16
inc
inc
mov
loope
dec
add
mov
jb
test
sbb
fstps
dec
orb
sub
test
push
sub
jmp
or
test
mov
cmp
das
lahf
jle
push
dec
cmp
xorb
xor
lcall
mov
cltd
cld
lret
push
push
cwtl
push
cmpsb
movsb
push
loop
in
out
and
mov
dec
mov
rorl
nop
push
xchg
jns
fmuls
fs
icebp
adc
cmp
stc
icebp
in
pop
ljmp
add
add
repnz
out
outsb
mov
dec
fcomps
cld
mov
jne
rclb
hlt
inc
testb
adc
cs
mov
int3
sbb
fwait
xchg
push
mov
adc
dec
orl
pushf
xlat
leave
adc
andb
lds
lcall
cmpsl
int
repnz
test
popa
out
mov
xchg
call
lea
shlb
cmpsb
jns
cmp
jg
inc
add
jb
cmp
movsl
fwait
out
out
stos
mov
sub
fmul
push
push
jecxz
and
cld
fisttpll
mov
mov
cld
clc
dec
fwait
insb
inc
fiaddl
push
push
add
pop
out
sbb
sub
inc
mov
es
div
add
mov
pop
pop
mov
xchg
push
add
aad
into
js
sbb
xor
add
sbb
mov
in
push
mov
lods
enter
sti
stos
out
inc
push
xlat
repnz
arpl
sbb
push
lret
add
jg
mov
ja
push
outsl
call
push
inc
mov
xchg
inc
jl
xchg
in
scas
arpl
fiadds
fwait
cs
or
mov
arpl
sbb
out
dec
leave
notb
add
in
mov
push
mov
inc
insb
out
scas
push
scas
nop
adc
sbb
arpl
xlat
mov
cmc
pop
mov
adc
out
std
arpl
add
insl
addb
jmp
movsb
daa
in
movsl
and
nop
lret
cmpsl
jne
mov
xlat
in
rcr
push
lock
stc
sbb
push
pop
add
push
sbb
mov
push
dec
mov
es
mov
lahf
sbb
jb
mov
jl
movsl
movsl
dec
test
cmp
cmpsb
push
insb
neg
jo
cwtl
push
sar
imul
mov
and
in
pop
in
xchg
push
xor
push
int
ret
imul
xchg
loopne
mov
dec
cmc
cmpsl
add
jmp
add
dec
fwait
into
cmp
fwait
cmc
dec
dec
int
and
cmp
dec
outsl
test
int
push
pop
mov
lret
sbb
add
jo
mov
sbb
xchg
push
push
xlat
xor
mov
pop
mov
lahf
es
or
pop
push
sub
jle
adc
in
and
pop
inc
lea
dec
or
out
pop
and
lea
mov
mov
ja
rcrl
pop
adc
lds
in
jns
xchg
and
scas
imul
int
stos
inc
imul
mov
jl
fucomp
pop
gs
insl
fisttpl
clc
in
push
push
in
pop
mov
lahf
or
push
mov
inc
fwait
sbb
jnp
and
and
addl
pop
in
or
jl
push
push
jne
push
gs
sahf
fistpl
dec
lcall
movsb
dec
xor
lods
sahf
jb
xchg
pop
out
cmp
stc
xchg
mov
or
pop
mov
and
xor
lret
jl
loope
or
jl
fsubrs
stc
ds
dec
xor
fs
lret
and
ja
xor
mov
imul
mov
mov
cmp
and
push
xchg
stos
jmp
sbb
icebp
push
clc
dec
insb
sbb
pusha
int
jle
xchg
rcr
orb
int
and
push
sub
sub
js
cltd
mov
pop
adc
jae
or
stos
movsb
rep
mov
jle
cli
jns
adc
int
add
inc
dec
jg
dec
enter
and
loope
test
adc
adc
es
fstpl
or
repz
shll
ret
out
mov
jbe
or
add
out
nop
sti
jle
out
push
andb
add
dec
jp
lahf
pop
sbb
ss
fcmovnu
or
imul
add
inc
lock
inc
pop
inc
popa
outsl
cwtl
les
ja
xor
jbe
cmp
jecxz
adc
sbb
xchg
aad
mov
dec
mov
lods
mov
call
cmpb
pop
loop
sbb
in
ja
hlt
lods
je
adc
andb
sbb
out
adc
push
out
stos
push
fs
loop
in
sahf
add
jb
xchg
outsl
pop
or
icebp
int
xchg
ss
in
fwait
add
cmp
push
loopne
pop
mov
xchg
cmp
rcl
ljmp
ss
pop
je
fisttpl
jo
rol
lcall
test
mov
stos
sub
das
mov
xor
add
push
imul
mov
inc
rolb
cmpsb
popa
mov
shrl
add
in
andl
sbb
int3
ret
sbb
movsb
bound
lods
jmp
dec
lahf
mov
xchg
jb
xchg
loop
popf
arpl
mov
in
loope
sub
pushf
mov
jne
and
dec
jg
pop
dec
ljmp
out
pop
leave
test
cmp
xlat
in
jbe
pop
sarb
outsl
aam
xchg
aas
xchg
push
pop
mov
push
mov
xchg
aad
adc
outsb
sbb
test
jl,pt
push
stc
call
and
or
in
inc
xchg
push
pop
out
fcmovbe
or
lds
mov
mov
add
push
cmp
xchg
fcom
inc
add
xchg
pop
cmp
xlat
inc
cmp
adc
add
paddsb
fcompl
ret
nop
push
das
inc
ret
pop
cmp
popa
frstor
sub
sub
loop
jg
inc
xchg
pop
movsb
push
fbstp
arpl
cltd
mov
inc
test
daa
pushf
ficoml
and
dec
repnz
out
jmp
cmp
xor
adc
jae
enter
subb
push
ror
dec
dec
jb
leave
xor
bound
cld
push
mov
cltd
movsl
xchg
adc
leave
or
mov
cmp
xchg
and
mov
push
and
adc
xchg
leave
dec
call
out
lods
pop
ljmp
lods
test
or
add
test
std
add
jnp
and
adc
shl
xchg
mov
and
add
lds
das
dec
ss
scas
fstpt
push
cmc
mov
mov
test
jmp
pop
sub
or
pop
mov
push
fcmovnu
into
mov
push
jb
pop
mov
add
inc
loop
jns
mov
daa
ds
push
push
and
les
sub
cmc
sub
jo
sub
xchg
fdivrs
or
pop
ss
sbb
pop
lock
push
mov
lcall
outsb
rol
pop
out
ds
fstps
mov
cld
cwtl
pop
daa
cmp
sbb
mov
mov
push
add
mov
pop
add
push
mov
mov
push
mov
and
call
lods
jns
inc
fistpl
lret
xchg
in
andl
sahf
lods
jbe
or
cld
rolb
or
add
and
mov
ss
arpl
fisubrs
std
mov
push
aam
adc
xlat
pop
and
push
xlat
sub
jnp
in
fs
mov
adc
lret
jo
dec
dec
stos
hlt
dec
out
inc
movsb
iret
jp
cmp
jae
add
or
dec
cltd
cwtl
mov
lret
cltd
mov
jmp
or
mov
jne
jle
mov
xor
cmp
sti
mov
push
sub
push
adc
jmp
sub
jb
fimull
enter
mov
addr16
aaa
std
sub
cmpsl
push
repz
lods
frstor
lahf
loopne
shrl
mov
push
sbb
ljmp
cmovne
addr16
arpl
xchg
das
lds
roll
push
pop
or
add
sbb
popa
insb
lahf
mov
ss
out
sub
adc
bound
call
aas
dec
cmp
pop
popa
push
sahf
imul
sbb
xor
push
call
and
adc
lds
pop
stc
pop
xor
xchg
movsb
mov
cmc
lock
cmp
xchg
mov
int
mov
cmp
inc
mov
jecxz
into
mov
lret
cmc
mov
add
dec
enter
inc
int
imul
pop
andl
jb
pushf
push
mov
jae
or
push
and
mov
add
insl
fwait
mov
arpl
or
orb
ss
inc
jae
out
mov
stos
xchg
and
mov
out
stos
cmp
lret
mov
scas
insl
mov
or
xor
js
shrl
mov
lret
shll
add
lret
jo
add
subl
dec
mov
mov
cltd
popf
adc
filds
mov
lret
out
jnp
fisttpll
outsl
in
mov
shlb
ret
mov
sarb
pushw
xchg
pop
jp
inc
les
dec
fldl
push
leave
ficomps
sbb
mov
dec
aas
nop
push
mov
mov
test
and
outsb
push
push
rorb
xor
mov
ret
addr16
cmpsb
movsb
mov
adc
dec
and
jno
subl
pop
insb
sub
movl
or
mov
sbb
lods
dec
test
lcall
and
lods
sbb
xchg
jecxz
loope
ds
imul
lods
mov
jo
pop
bound
push
popa
push
push
cmp
or
pop
loop
out
mov
fadds
ja
mov
pusha
mov
mov
je
es
lcall
mov
pop
mov
gs
add
std
rep
or
pop
orl
jne
notl
int
xchg
mov
xor
or
inc
in
mov
push
inc
pusha
dec
mov
lret
and
add
stc
icebp
outsb
testl
inc
loope
push
mov
gs
cmp
in
fldcw
push
add
jp
cltd
loope
push
cmp
mov
out
or
loopne
fcomip
test
lods
lret
xor
adc
ret
test
mov
das
call
pusha
sti
dec
sahf
in
dec
dec
xchg
dec
out
add
insb
mov
pop
pop
in
dec
movsb
imul
xor
lcall
jne
jo
outsb
mov
sub
mov
xor
fisubrs
pop
pushf
mov
mov
cli
popf
jmp
mov
mov
fbld
fistps
mov
adc
call
outsb
or
hlt
cmp
fwait
pushf
in
out
imul
mov
xchg
bnd
pusha
scas
mov
addb
leave
xchg
or
pop
in
subb
pushf
mov
ja
mov
sub
adc
and
shrl
mov
ret
jae
xchg
and
int
ljmp
jne
xchg
dec
nop
mov
sub
nop
xchg
sub
arpl
cmp
test
inc
popf
les
lahf
push
rcl
addr16
jns
xchg
mov
xor
xchg
std
mov
add
jmp
movsl
aam
sbb
push
push
push
cld
dec
mov
lods
and
ja
jp
add
and
out
ljmp
rclb
pop
mull
cmp
fnstenv
out
xchg
orl
mov
pop
rcl
dec
adc
lret
mov
push
movsl
mov
inc
inc
int
cmp
ds
ret
cmc
lods
xchg
sub
pop
or
add
add
incl
fmuls
push
outsb
andb
scas
sbb
pop
mov
pop
sbb
ret
bound
decl
insb
ss
dec
and
jle
ds
sbbl
cmc
int
repnz
xor
insl
imul
jle
xor
dec
pop
ja
stos
cmp
push
imull
cmp
inc
arpl
lcall
push
xor
mov
push
cmp
and
sbb
in
test
fs
cmc
sti
roll
pop
bound
dec
paddusb
adc
and
jb
out
es
call
inc
mov
push
aaa
stos
pop
xor
jg
mov
mov
jmp
xchg
adc
add
dec
mov
addr16
mov
pusha
cmpsl
mov
push
aas
outsb
js
jmp
testb
call
mov
inc
mov
pop
shrl
xchg
add
lret
add
in
jns
fisubrl
mov
sub
jge
sbb
adc
subl
pop
fdivr
ljmp
pop
mov
fidivs
cmp
sbb
enter
cmpsl
inc
sub
lahf
jmp
add
inc
loop
inc
aaa
jmp
je
cmp
pop
cld
push
stos
iret
pop
or
decb
mov
adc
adc
outsl
sbbl
fists
push
jae
movsl
inc
imul
inc
test
cmp
fisubl
mov
jl
cwtl
icebp
jno
or
sti
lea
push
inc
sbb
sbb
inc
push
icebp
cmc
sub
mov
sbb
pop
and
mov
and
or
outsb
scas
movsl
andl
jne
std
insb
dec
push
mov
or
test
inc
cs
movsb
mov
jecxz
inc
aaa
xlat
lock
cld
cmpsb
pop
or
out
cmpsb
pop
adc
idivb
jg
push
mov
mov
cli
lea
inc
hlt
xchg
lods
lds
out
je
or
jg
jae
inc
insb
jnp
sbb
out
pop
inc
and
mov
mov
sbb
imul
sub
pop
adc
jae
xchg
test
outsl
popf
add
adc
fstps
cmp
xchg
in
mov
mov
add
add
cli
test
ficoms
mov
pop
sbb
sti
jb
int
lret
mov
lcall
test
fs
sbb
divl
jmp
mov
mov
in
sahf
add
pop
imul
fldt
loopw
mov
jb
pushf
inc
fimuls
pop
pop
jo
mov
std
cmpsl
fistpl
mov
std
pusha
fxch
and
push
flds
push
daa
fidivs
outsb
mov
mov
pop
popf
mov
push
loop
add
aad
out
push
in
daa
out
aas
enter
push
lods
xlat
mov
sub
insl
mov
adc
adc
rcll
sub
jmp
pop
adc
lahf
and
mov
jl
mov
jge
sbb
xchg
test
sbb
xor
cmpsb
iret
enter
imul
rorl
cmc
xchg
xchg
sahf
js
into
mov
inc
inc
shl
call
sahf
iret
leave
movsb
bswap
mov
or
and
xchg
dec
adc
sub
sub
push
lret
cltd
pop
ds
pop
mov
out
dec
cs
out
inc
stos
cmp
loope
mov
icebp
call
xor
scas
out
or
mov
fildl
jle
orl
mov
jecxz
or
sub
je
mov
fcmovnbe
xor
mov
repnz
xchg
xchg
dec
xlat
xor
and
mov
icebp
test
mov
ljmp
sbb
rorb
pop
inc
jns
aas
push
outsb
cmpl
cli
aad
push
shlb
cs
cs
inc
mov
cmpsb
cs
or
ret
and
out
outsb
mov
pop
xor
adc
jb
inc
sub
leave
lods
mov
mov
xor
jp
mov
test
xor
in
inc
sub
lock
pushf
push
push
sbb
hlt
pop
outsb
cli
inc
cmc
fdivr
and
jo
mov
adc
adc
roll
idivl
in
lret
dec
push
repnz
push
ret
xchg
jb
jecxz
adc
sahf
jge
inc
add
mov
clc
jmp
cmpxchg
add
mov
push
mov
or
mov
clc
xchg
out
movsb
mov
adc
cltd
xchg
leave
cmp
jnp
and
mov
jl
sbb
test
xchg
cmp
push
out
mov
lock
dec
das
andl
cs
sbbl
in
xor
fmull
and
and
or
shl
subl
mov
test
add
pop
ljmp
push
or
push
xor
jbe
mov
xor
and
repnz
rolb
arpl
imull
sbb
mov
stos
sub
loope
fimuls
sub
fwait
pop
xlat
pop
outsb
aas
fisubrl
mov
xchg
in
es
mov
xor
dec
jo
cmp
cmp
jbe
xchg
inc
add
sub
aaa
cmp
sbb
cmp
dec
mov
pop
js
hlt
jbe
cmpsl
jp
add
cmp
repz
sub
add
sub
fdivrs
or
push
xchg
stos
in
or
cmp
push
xchg
push
pop
js
adcl
out
imul
jb
sbb
call
xchg
and
pop
pop
push
leave
enter
js
sub
ja
fwait
dec
sbb
cltd
dec
mov
test
std
movsb
xchg
jg
movsl
div
in
adc
and
loope
lods
in
div
iret
in
inc
into
sahf
icebp
sub
nop
sbb
cmp
clts
fcmovbe
icebp
dec
addr16
add
dec
mov
rclb
setnp
call
push
ret
pop
add
or
mov
xchg
fs
aaa
jmp
push
int
ret
mov
in
into
sbb
add
in
lods
aas
test
gs
inc
sbb
push
popf
leave
sbb
negb
hlt
xor
cmp
enterw
add
in
icebp
sbb
mov
adc
pop
dec
pushf
add
popf
jbe
ret
and
jle
lcall
dec
adc
sub
fcmovnb
add
inc
dec
shlb
rol
and
adc
mov
xor
mov
mov
and
and
sbb
scas
stos
mov
imul
adc
or
inc
add
cltd
dec
xor
adc
pop
addr16
push
push
out
pop
jecxz
inc
daa
into
shl
arpl
je
insb
movl
mov
and
xchg
fidivs
fsub
in
js
cmp
cld
ss
gs
cli
lods
movsl
stos
jge
inc
sub
inc
inc
stos
ds
int3
mov
and
ja
adc
pop
dec
jnp
pop
cli
cmpsl
imul
xor
cmp
sbb
mov
fimull
push
jl
inc
inc
roll
fwait
ljmp
xchg
addb
ret
cs
and
cmc
inc
in
jmp
test
nop
hlt
xor
bound
jb
xchg
jne
dec
jl
adc
popa
xchg
pop
data16
clc
orb
arpl
pop
stos
sarb
cmp
or
stos
mov
mov
fdivs
mov
jne
push
lcall
or
or
xchg
cmpsb
stc
dec
xchg
out
cmpsl
rorl
stc
enter
jp
cli
add
xchg
es
and
mov
add
add
xchg
cmpsl
imul
icebp
in
or
mov
icebp
and
ljmp
add
and
ds
mov
dec
je
shll
mov
sbb
in
mov
xchg
push
incl
mov
je
mov
shlb
aaa
mov
lds
repnz
mov
and
lds
xor
dec
push
lahf
rol
and
popf
sbb
push
out
mov
inc
and
inc
push
adc
test
lods
mov
rorb
scas
idiv
lret
in
dec
call
jno
outsl
inc
mov
mov
fnstcw
push
aad
clc
add
inc
cltd
push
jg
ficoml
mov
inc
push
stos
add
fisubrs
mov
mov
mov
cmpsl
xchg
ja
adc
shlb
add
ret
loope
jge
and
push
add
sub
in
mov
test
rolb
scas
pushf
iret
repnz
jbe
cmp
lret
xchg
jns
sbb
ljmp
dec
fwait
or
push
das
in
ss
dec
out
inc
hlt
sub
inc
lcall
push
pushl
int
ret
mov
jp
clc
out
mov
mov
into
push
xor
filds
cmp
testb
mov
repz
rorb
cmp
mov
jmp
jno
leave
fwait
mov
pop
dec
lods
push
out
cs
stos
cli
push
dec
dec
xor
jb
fidivl
das
jo
sub
inc
inc
leave
sbb
xlat
xor
sub
xor
inc
out
sub
lods
inc
jnp
lahf
pop
or
inc
mov
sub
mov
dec
adc
jbe
jns
repnz
in
mov
and
and
add
xchg
dec
ss
fsubrs
fcmove
sub
jecxz
inc
mov
test
arpl
jmp
cmpl
into
jle
iret
decl
pushf
leave
xorl
fstpl
lock
fucomp
jae
rcrl
xor
mov
push
aas
add
cmpsb
lcall
rol
sahf
sbb
das
lcall
lds
out
jne
dec
mov
das
push
sbb
popa
out
xor
push
repz
push
push
lahf
mov
and
fcmovb
loop
test
fidivl
jp
pop
cmp
cltd
shrl
fadds
in
push
jo
dec
pop
jnp
jmp
or
push
and
sbb
cli
mov
test
arpl
dec
push
mov
cs
push
jp
cmpsl
stos
jmp
outsl
icebp
out
out
cli
mov
int
pop
movsb
cltd
push
gs
movsb
cwtl
lods
xchg
outsb
mov
enter
inc
pop
or
loop
and
movsb
and
push
out
out
mov
and
mov
xchg
inc
jp
jmp
and
inc
inc
cmp
jle
and
jo
arpl
push
cmc
adc
frstor
mov
cmc
mov
xchg
imul
cld
push
and
dec
xor
repz
fprem
xchg
jl
xor
pushf
insb
cs
push
jmp
stos
fcoms
cmpsb
sub
mov
inc
lret
adc
inc
sbb
jne
sbb
cmpsl
and
pop
and
pop
mov
repz
daa
adc
adc
cltd
sub
xchg
das
xchg
xchg
inc
sub
ud2
push
add
xchg
push
pop
pop
je
sub
ljmp
sbb
push
dec
mov
daa
push
inc
and
sbb
mull
xor
cmp
pop
lods
out
out
adc
das
xchg
xor
sub
mov
adc
push
fstpl
mov
lock
jo
out
mov
xchg
stc
push
sbb
cmp
dec
mov
mov
sub
ror
out
fildl
xor
ljmp
lods
adc
das
leave
mov
clc
call
xlat
cmp
pushf
enter
sub
inc
mov
or
test
mov
mov
dec
adc
enter
jns
mov
mull
push
clc
out
out
mov
cmp
gs
scas
fbld
ret
stos
int3
lret
shl
and
and
xor
fstpt
mov
pop
and
mov
cmp
push
ljmp
stc
ret
push
test
adc
data16
sub
outsl
mov
push
sarb
jl
outsb
stc
out
dec
out
hlt
pop
jo
or
xlat
push
inc
insb
jmp
loopne
xor
cwtl
test
cmp
push
dec
test
mov
mov
test
and
mov
loopew
aas
fdivrs
pop
pop
loopne
insb
in
roll
bound
ss
jp
xchg
stos
xchg
popf
add
mov
push
jmp
xchg
xchg
mov
call
aam
mov
adc
or
cmpsl
fwait
dec
sbb
cmp
pop
cmpsb
les
xor
mov
fdivp
sbb
xor
cmpb
mov
push
push
xchg
xchg
or
xlat
adc
xchg
pop
and
inc
pop
mov
push
gs
xor
shrb
inc
inc
imul
jns
sti
les
cmpsl
sahf
jae
dec
inc
shrl
test
iret
xchg
adc
xor
sbb
jp
pop
cmpsb
data16
xchg
push
mov
repz
push
popf
neg
mov
sbb
sahf
aad
xor
jne
out
ficoml
sti
call
cmpsl
popl
insb
xchg
xchg
fildl
lret
or
frstor
jecxz
aaa
jb
jae
mov
xchg
push
add
cmp
cmp
mov
dec
cmp
gs
adc
shr
into
mov
test
pop
jmp
sub
adc
out
xchg
pop
test
pop
test
loop
pop
fs
fdiv
mov
add
adc
loopne
dec
and
adc
stos
mov
cmp
aas
mov
and
jb
mov
push
or
sub
incl
repz
imul
dec
xchg
popa
cmc
sub
ss
add
xlat
mov
xor
lods
xor
xchg
out
pushf
jae
or
aaa
mov
lcall
sub
inc
scas
cmp
inc
inc
adcl
and
cli
stos
push
mov
aam
pop
imul
loopne
ja
dec
cmp
outsl
dec
jae
xor
leave
xor
sbb
lds
test
mov
xchg
adc
mov
inc
mov
dec
push
scas
and
out
sahf
iret
call
test
sbb
dec
push
fcmovu
arpl
mov
sbb
mov
fisubs
hlt
decl
inc
push
mov
out
mov
les
mov
sub
ret
rolb
movsl
dec
pop
addr16
dec
stc
mov
cmp
add
jmp
mov
and
shl
pop
add
outsl
inc
out
lret
enter
add
mov
aam
rorb
es
popa
mov
xchg
call
cmpsb
inc
fsubs
fwait
inc
ja
imul
mov
daa
jb
ljmp
ret
or
repz
cmpb
push
loop
mov
xchg
lea
mov
jne
adc
hlt
cmp
and
std
enter
cmp
lret
stos
mov
jle
xor
stos
push
repnz
mov
pop
mov
mov
adc
call
jmp
sub
into
int3
sub
stos
aaa
ret
fs
adc
sahf
jp
sahf
aad
pop
int
xchg
data16
pop
fnstcw
or
pop
sbb
mov
das
pop
movsl
scas
loop
mov
pop
sub
mov
mov
cmp
add
pushf
pop
pop
stc
pushf
mov
les
sbb
cmp
shll
je
xor
lea
outsl
stc
inc
jnp
push
das
sub
jb
cmpsl
dec
push
push
fisubs
pop
pusha
test
nop
xchg
or
cmp
in
push
mov
mov
xchg
jb
pop
sbb
clc
mov
pop
insb
inc
lods
movsb
ljmp
xor
jno,pn
mov
call
xchg
dec
push
adc
push
push
hlt
arpl
or
scas
jecxz
inc
jecxz
cmp
loop
push
in
and
rcl
dec
xchg
jecxz
test
shl
cli
jo
cmp
jge
mov
inc
dec
push
shlb
mov
mov
sbbb
in
dec
adc
sbb
jo
xchg
movl
xor
sub
jmp
movsb
loope
jmp
jge
mov
sub
aam
cmp
dec
push
mov
push
in
mov
adc
sbb
dec
add
dec
dec
mov
lcall
or
shll
addb
movsb
in
lret
sub
cld
jne
sub
gs
inc
xchg
sbb
jae
lods
sub
pusha
sub
dec
mov
imul
fimuls
and
in
jo
pop
and
mov
adc
fildl
push
inc
lahf
aad
push
xchg
divb
xor
leave
pop
js
or
push
lahf
loope
or
cmp
adc
out
or
aad
aas
and
pop
andb
jnp
cmpsb
pop
stos
imul
push
jecxz
sub
pop
cmp
pop
rcll
cmp
push
repnz
jo
mov
fsubr
fiaddl
gs
lret
hlt
loope
xor
inc
jbe
sarl
in
lods
inc
dec
out
cs
loop
mov
mov
pushf
test
daa
jle
shlb
rcll
lcall
mov
dec
mov
insb
adc
out
mov
sti
pop
xor
fsubrs
js
pop
push
sub
sbb
mov
jae
ljmp
test
divb
pushf
ds
inc
das
xchg
inc
jecxz
mov
lcall
repnz
xchg
in
adc
cmp
xchg
scas
mov
or
or
sbbb
ljmp
fadds
jmp
dec
fs
jmp
cmp
rcrb
cmpsb
push
sub
mov
rolb
xchg
xchg
push
jbe
leave
inc
movsb
mov
jbe
test
aam
out
and
pushf
nop
aas
sub
in
cld
or
stos
add
inc
mov
cmp
sbb
xlat
mov
fwait
cli
push
shrl
mov
add
xchg
mov
fmul
lods
shlb
sub
pop
pushf
sub
cmp
adc
fildll
mov
out
or
inc
addr16
stos
inc
and
loope
and
lret
mov
ss
sti
lret
popa
inc
stos
add
cmp
ds
mov
popf
pushl
adc
jecxz
mov
lods
leave
xor
inc
mov
xchg
cld
sbb
jl
sbb
push
inc
mov
jnp
push
and
sub
cwtl
fs
push
pop
mov
test
pop
adc
sbb
mov
cwtl
call
mov
push
cmp
out
pop
repnz
leave
mov
and
inc
lret
dec
lret
mov
addr16
dec
rcl
testb
cs
repnz
jo
jl
dec
lock
das
xor
insb
test
inc
decl
jno
mov
rcrl
xor
mov
test
repz
add
loopne
add
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
and
movl
andl
mov
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jb
mov
xorl
mov
mov
sbbl
xor
xorl
add
mov
and
mov
and
xor
xorl
push
xor
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
movzbl
or
mov
mov
subl
xor
mov
add
andl
mov
inc
mov
cmpl
jl
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
mov
movb
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
pushl
call
jmp
lea
incl
mov
mov
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
call
cmpl
jb
mov
xor
movl
add
andl
mov
sbbl
movl
push
movl
movl
cmpl
je
cmpl
jl
jmp
push
push
push
call
mov
dec
mov
jmp
mov
or
push
mov
xor
xor
or
xor
mov
sbb
mov
mov
push
add
jmp
incl
mov
mov
inc
movl
cmp
jb
not
mov
xor
movl
add
jmp
movzwl
or
mov
adc
mov
adcl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
add
addl
movzwl
sbbl
mov
movzwl
and
mov
sbbl
movzwl
xor
add
mov
movl
mov
mov
inc
not
mov
movl
cmp
jne
and
mov
sub
mov
xorl
xor
and
add
mov
mov
sbbl
xor
add
adc
mov
addl
movl
movl
movl
movl
mov
movl
cmpl
je
cmpl
jb
jmp
push
push
call
mov
dec
mov
jmp
mov
mov
xor
add
movzwl
mov
mov
je
mov
subl
mov
xor
xor
notl
sub
notl
sub
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
subl
mov
mov
movl
add
andl
imul
mov
xor
mov
mov
add
mov
add
incl
or
mov
mov
mov
sbbl
add
xor
mov
dec
mov
add
mov
add
and
and
mov
xor
mov
subl
mov
lea
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
pushl
call
cmpl
jb
mov
or
mov
sub
movzwl
and
add
mov
andl
mov
xor
adcl
add
movl
jne
movl
jmp
xorl
mov
subl
sub
xor
movl
cmpl
je
cmpl
jbe
jmp
push
call
xor
or
dec
mov
jmp
mov
subl
mov
mov
xor
decl
xor
adcl
sub
sub
xor
mov
mov
mov
jmp
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
push
push
call
mov
dec
mov
jmp
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
addl
imul
mov
andl
mov
inc
mov
cmpl
jb
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
mov
addl
add
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
jmp
mov
mov
andl
add
movl
xor
mov
subl
mov
mov
xorl
add
xorl
and
or
mov
mov
sbb
mov
xorl
mov
lea
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
jmp
rcr
sbb
mov
nop
cs
or
lea
imul
sbbl
out
adc
push
push
xchg
dec
or
inc
stos
mov
enter
mov
inc
mov
xchg
jge
xchg
aad
out
sub
pop
out
dec
jns
cli
pop
pop
cltd
and
shlb
inc
sub
lock
hlt
cmpps
pop
mov
imul
outsb
testb
pop
mov
push
mov
push
xchg
sbb
mov
push
hlt
cmp
push
pusha
xor
pop
roll
loopne
dec
fnsave
jl
pop
in
in
mov
pushf
repnz
fildl
sub
jae
stos
aaa
addl
movsb
test
push
lds
mov
imul
xor
lea
in
movsl
lds
ja,pn
jge
push
add
sbb
jno
aad
push
or
xor
xchg
in
testl
or
jp
jp
cmp
sahf
add
cltd
loop
dec
dec
out
lcall
mov
into
jp
mov
push
imul
stos
sub
push
fsubl
or
jbe
pop
mov
pop
jmp
sbb
out
mov
add
cs
imul
sub
adc
rcll
sbb
cltd
fmull
sbb
fwait
fdivl
inc
pop
scas
jg
addr16
pop
notl
push
rcll
stos
or
mov
xor
fsts
pop
aas
lods
push
or
enter
sub
adc
clc
cmp
push
decb
or
mov
mov
in
rcrb
push
fdivrl
pop
lds
in
lds
loope
outsl
in
push
sub
jb
xor
add
sbb
mov
out
xor
into
cmp
insl
jg
xchg
mov
aam
or
test
push
jp
or
ljmp
add
loope
xor
cmp
pop
lret
mov
add
inc
out
pop
ret
popa
lock
jle
sbb
ficomps
aas
pushf
push
jno
add
andl
je
in
pushl
dec
push
and
pop
call
pop
out
mov
add
adc
add
js
mov
jo
popa
sbb
and
mov
aad
or
mov
push
sbb
mov
mov
into
pop
mov
sbb
cmp
pop
push
ja
push
sub
fldl
or
xor
cmp
data16
add
test
mov
xchg
lahf
or
pop
scas
shrl
adc
sub
js
dec
icebp
ljmp
push
xor
add
mov
dec
pusha
mov
call
lods
hlt
outsb
test
jb
repnz
push
jp
dec
sti
jns
adc
mov
test
insl
cwtl
mov
lcall
mov
add
fiaddl
push
cmp
add
movsl
lock
mov
push
imul
push
push
jno
jbe
mov
sub
test
lods
lods
lds
xchg
stc
icebp
test
aaa
mov
and
xor
dec
stos
sub
adcl
mov
push
jae
addr16
jb
mov
and
xor
shrl
sbb
call
imul
insb
rclb
das
xchg
adc
imul
cmp
inc
fwait
xchg
inc
out
adcl
xor
push
pop
push
js
jmp
bnd
lods
lret
out
cld
add
add
fdivrs
int3
inc
push
into
xchg
cwtl
pop
cmc
sub
jae
icebp
sub
xor
fs
popf
push
std
subb
sub
pop
sub
stc
vpunpcklwd
test
mov
leave
sbb
and
sbb
and
or
sub
inc
fidivrs
push
aad
mov
mov
loopne
jp
dec
lret
sub
sbb
in
sbb
out
clc
jle
and
xchg
pop
idiv
inc
lods
mov
cmp
out
xor
mov
insb
mov
jno
movsl
adc
mov
xor
inc
stos
cmp
jo
xlat
mov
repnz
inc
insb
arpl
jmp
nop
js
pop
rcll
scas
xor
mov
xchg
loope
mov
pop
xchg
sbb
mov
mov
cld
test
mov
mov
shl
or
cmpsb
sbb
nop
mov
xor
hlt
pop
jmp
xlat
mov
movsl
in
call
insb
xor
sbb
add
pop
sahf
xchg
inc
add
pop
dec
fadds
jge
jno
xchg
clc
orb
pop
add
sarl
dec
ja,pn
pusha
xor
bound
call
dec
sti
jmp
fxtract
sbb
xor
aad
sbb
add
jmp
cs
xor
xchg
or
je
add
pop
clc
fstl
jae
sbb
or
aam
add
cmpsb
test
xor
or
jbe
push
into
fcoml
dec
dec
incb
dec
xlat
adc
jne
mov
sub
sub
mov
jle
cltd
adc
adc
in
inc
or
jb
pop
movsb
xchg
popf
xchg
jg
sbb
sub
loopne
gs
add
mov
cmc
into
movsb
xchg
jbe
jmp
ret
out
clc
push
sbb
addr16
andb
pop
je
aam
or
mov
popf
mov
jo
aas
hlt
pop
cli
jo
or
sarb
sar
mov
loopne
sub
cltd
inc
mov
nop
adc
jl
cltd
xchg
sbbb
sub
in
jge
xchg
lahf
jg
call
sbb
sub
lea
popa
pop
push
adc
adc
lods
xor
xor
cltd
ja
arpl
lods
push
lcall
int3
in
xor
outsb
cmc
mov
sub
xchg
cmpl
jle
ds
cmp
sub
das
int3
sub
pop
jo
je
lods
or
dec
jae
push
cmp
mov
mov
and
lods
fs
mov
dec
jp,pn
mov
cmp
mov
into
sub
popa
movsl
fcompl
or
mov
xchg
ret
mov
and
mov
sahf
into
ds
sbb
mov
mov
movl
fwait
adcl
jmp
pop
push
xchg
sub
cmpsl
cmc
shlb
movsl
mov
inc
movsl
cmp
leave
mov
and
jb
mov
xlat
adc
ss
sbb
sbb
in
jge,pn
pop
sbb
sub
push
push
mov
test
xor
stos
mov
xor
pushf
loopne
out
xchg
into
loope
cwtl
insl
out
mov
jne
sbb
xor
dec
push
pop
pop
xor
or
xchg
dec
cmp
jle
jns
pop
add
pop
xchg
test
fldl
in
insb
pop
out
push
rep
add
ljmp
leave
sub
mov
xchg
roll
sub
bound
sub
pop
xor
test
loopne
push
mov
or
imull
sahf
lods
es
loopne
es
add
stos
and
push
xor
cmc
dec
loope
xor
inc
insl
sub
sbb
stos
add
push
fldl
mov
pop
std
dec
imul
inc
int3
inc
stc
enter
adc
lret
pop
cld
xor
inc
xchg
mov
in
fistpll
xchg
jp
pop
int
inc
cmp
jmp
and
cwtl
test
movsb
fimuls
fdivl
fmul
mov
inc
lods
in
cmc
fsubl
and
sub
testl
mov
scas
sbb
cltd
sub
js
pushf
add
mov
mov
dec
fdivrs
mov
push
xchg
cs
inc
xchg
sbb
xchg
mov
scas
fsub
sbb
int3
dec
lcall
adc
test
fs
fdivr
sbb
pop
into
pop
stos
ret
call
aaa
jbe
push
bound
mov
js
ss
sbb
and
fadds
sub
ret
sar
xchg
and
jge
adc
stos
mov
inc
loope
cltd
pop
sti
sbb
cmpsb
cld
and
mov
scas
mov
out
repnz
jl
lock
js
std
sti
push
cmp
outsl
addl
js
shlb
fldcw
das
mov
nop
mov
adc
adcb
xor
adc
mov
lret
in
popl
mov
loope
gs
loop
sbb
mov
sub
pop
pop
lock
ret
cmp
mov
shll
movl
or
ss
cmpsl
insl
mov
int
jb
xchg
insl
xchg
lods
push
inc
cwtl
xorb
mov
sub
js
lods
mov
int
xchg
lods
popf
xor
fwait
add
mov
jbe
inc
stos
sbb
mov
leave
cli
out
inc
adc
dec
add
arpl
jbe
pop
cltd
pop
cmpsl
ss
rol
pusha
dec
and
decb
mov
nop
lods
jno
scas
shll
mov
and
jae
mov
mov
push
sbb
dec
out
iret
inc
push
add
cltd
xchg
or
pop
jecxz
sbb
div
mull
sbb
push
mov
cmpsb
fs
mov
cs
fs
xchg
sub
mov
int3
pop
adcl
mov
rorl
ss
sub
aaa
ja
push
jl
mov
cmp
mov
stc
cmp
sti
inc
mov
movl
cs
insb
push
mov
inc
mov
cmpsb
jo
xchg
lods
jno
in
aam
sarb
repnz
xor
mov
jge
mov
imul
xchg
xor
sbb
rep
mov
pusha
loopne
mov
daa
incb
inc
imul
pop
arpl
jbe
cwtl
iret
or
inc
pop
cltd
add
cs
outsb
ffreep
sarl
int
in
mov
hlt
loope
shrb
xchg
inc
push
xor
or
out
mov
or
loop
insl
push
jmp
sub
jbe
cmp
and
test
push
sbb
mov
lods
fcmove
pop
loop
adc
xor
pop
movsl
push
test
cmp
rorl
inc
out
cmp
and
repnz
lahf
and
aad
adc
sub
adc
lret
lret
in
scas
add
mov
mov
push
mov
mov
insb
jae
test
sub
mov
sub
test
push
pop
das
test
clc
lea
push
int3
sub
or
xlat
jno
bound
jae
test
pushf
ret
sbb
xchg
dec
scas
dec
leave
inc
sti
add
xor
call
mov
and
in
xor
xor
xor
xor
aam
andb
movsl
iret
fldcw
sub
pop
pop
in
push
and
ret
jge
jg
je
mov
mov
movsl
jne
mov
mov
and
or
dec
jb
pop
jmp
ret
add
orb
fs
insl
push
mov
xchg
outsb
leave
loopne
ljmp
test
lret
mov
dec
xor
in
test
mov
mov
test
test
or
clc
int
mov
adc
or
and
nop
jp
pop
aas
dec
test
in
cwtl
xlat
insb
pop
inc
pushf
loopne
in
dec
jns
ror
into
sbb
nop
movsl
xchg
orl
push
dec
jmp
mov
jmp
movsb
push
lret
lods
test
loop,pn
loop
in
cmpsb
jbe
mov
out
jnp
lcall
xor
data16
rorb
popf
in
jle
lahf
cmp
xchg
daa
xor
or
mov
lret
popa
sarb
sti
cmp
stos
cmp
push
sti
mov
enter
fldt
aaa
and
inc
rcrl
or
or
push
test
fisttpl
mov
sub
test
scas
insl
in
aam
push
xchg
or
mov
stos
and
adc
popf
jecxz
pop
lcall
mov
dec
adc
jmp
lock
in
xor
test
xor
cmp
fwait
inc
inc
and
mov
icebp
fnstcw
add
lahf
stos
rorb
jne
insb
addr16
repnz
cmpsb
push
add
push
xchg
sbb
push
jg
nop
lahf
loop
mov
sbb
into
es
pop
jle
sub
scas
jbe
aam
adc
call
movsb
hlt
jmp
sar
xor
pop
into
and
lea
and
mov
inc
sbb
xchg
mov
test
in
add
lods
pusha
cmp
jno
arpl
aaa
and
mov
adcl
subb
jns
ja
jnp
xor
testl
fsubrl
pushl
dec
out
icebp
add
aaa
jl
sub
mov
or
loopne
push
mov
or
stc
fs
js
jmp
mov
cmp
int3
std
ljmp
andl
mov
dec
xor
iret
out
ja
mov
into
mov
lock
dec
loop
in
or
adc
xchg
shrl
sub
push
and
lea
mov
xchg
lahf
fisubrl
xchg
pop
lcall
cmpsl
xlat
pop
pop
or
jne
scas
adc
xor
or
dec
daa
cltd
cmpsb
jnp
mov
test
cmp
push
cmpsb
cwtl
movsl
gs
pop
loopne
xchg
inc
imul
pop
test
cs
xchg
out
sub
stc
fdivrl
ljmp
stc
dec
out
or
sti
dec
adc
js
adcl
mov
or
scas
adc
in
ds
add
mov
jb
cmp
rolb
sti
sub
fwait
sti
mov
add
lcall
xlat
subl
inc
jg
pop
pushf
or
add
fs
jo
inc
addb
out
mov
std
push
test
rcrb
pcmpeqd
pop
inc
out
mov
dec
jle
sub
xchg
rorl
lea
jle
pop
test
pop
nop
ljmp
imul
lods
mov
loopne
mov
cmp
sub
jle
mov
idivl
nop
mov
stos
mov
xchg
cmpsb
dec
pop
ss
dec
daa
xchg
fwait
lcall
xor
cmp
jb
imul
push
mov
out
outsl
enter
fcoml
movsl
jp
inc
mov
xor
outsl
jl
je
fldcw
sbb
mov
adc
fistps
push
ret
and
and
leave
test
cmp
ret
cmp
mov
push
sub
inc
inc
into
push
jo
or
call
outsl
mov
rorb
jge
aad
xchg
sbb
shrl
inc
mov
nop
andl
sti
push
out
mov
push
je
aam
sbb
addr16
push
push
clc
dec
sti
adc
movsb
xchg
mov
js
and
sti
xchg
adc
adc
sub
sub
cmp
xor
xchg
test
mov
adc
das
movsl
enter
cltd
and
icebp
pop
sbb
mov
rcrl
xor
insl
pop
fdivs
repnz
testb
push
icebp
lcall
roll
fwait
out
lds
pop
xor
aaa
lcall
pop
loop
sti
test
testb
mov
stc
clc
jnp
or
inc
fldt
push
shlb
mov
insb
mov
jge
jnp
dec
lods
dec
mov
add
aas
add
lds
mov
aam
fxch
sbb
in
cmp
xor
ret
sarl
aam
mov
inc
pop
dec
or
insb
inc
xor
pop
push
mov
negb
push
push
jecxz
jno
mov
and
sarb
aaa
sub
imul
scas
test
pop
nop
dec
push
test
add
mov
xor
jmp
xor
in
push
int3
fisubs
in
out
ror
inc
jmp
push
add
xor
pop
ja
or
dec
ja
imul
push
xchg
out
jg
xchg
cmp
pop
jecxz
cmpsb
mov
les
pop
cld
sub
mov
imul
inc
lods
loopne
fcmovb
xor
dec
jl
pop
les
pop
dec
loopne
in
rclb
idivl
push
ljmp
sarb
mov
lahf
pop
out
sub
daa
or
mov
inc
push
cld
and
pop
scas
fsts
insb
leave
idiv
js
and
jp
xchg
sub
inc
les
ret
jmp
add
repnz
test
adc
nop
nop
icebp
les
in
test
xchg
stc
pop
push
dec
aad
jge
repz
out
lahf
lods
cwtl
jl
cmp
test
pop
adc
mov
push
pop
lds
imul
and
sub
mov
dec
sbb
or
pop
fdivr
jb
lret
sahf
xchg
mov
movsl
imul
lret
inc
out
outsb
shl
div
sahf
push
pushl
add
pop
outsl
or
gs
adcl
fistpll
xchg
lret
cmp
mov
mov
mov
sarb
fisttpl
pop
pop
fists
push
xchg
aas
inc
in
insb
fldt
cld
or
pop
jl
push
loopne
push
aam
sub
imul
jbe
mov
repz
in
adc
stos
es
xlat
mov
out
lds
sub
inc
pop
clc
push
push
pushf
shll
les
xchg
add
ja
cmp
insl
call
mov
cltd
adc
iret
lods
sub
fnsetpm(287
push
loop
sar
adc
out
lock
nop
jmp
sbb
clc
and
fidivs
mov
xor
clc
sahf
cmpsl
clc
or
or
je
dec
imul
pop
push
pop
push
inc
inc
sbb
jbe
push
test
out
push
push
xor
pop
jno
pushf
clc
lock
jle
das
inc
and
shll
cmp
stos
test
subb
frstor
in
adc
jns
dec
push
jo
setnp
jbe
jns
xlat
outsb
add
and
mov
push
movsl
xor
loope
cmpsb
adc
in
out
jg
or
or
stc
jno
test
push
xor
mov
aas
fidivrs
pop
pushf
cmpsl
push
cs
mov
jns
js
ret
shlb
xor
cwtl
pusha
dec
mov
adc
out
cmovno
dec
outsl
pop
mov
push
das
das
and
sarb
test
stos
sbb
pusha
loop
in
xchg
iret
lret
fistpl
in
and
sub
xchg
xorl
xchg
cmp
sbb
add
cmp
fistps
inc
aaa
in
daa
xor
jae
xor
int3
sti
outsb
cmpsl
jp
jb
mov
sarb
mov
and
sub
mov
icebp
mov
loopne
jp
imull
mov
xor
fimuls
jno
mov
test
arpl
jmp
jl
inc
out
mov
pop
fsub
xchg
sbb
dec
xor
movsl
mov
lret
in
outsb
xor
loope
sbb
ja
jp
mov
and
cs
outsb
arpl
jo
sahf
and
repnz
js,pt
rcl
mov
xor
pop
jle
mov
cmp
push
ljmp
jl
or
cwtl
sbb
and
mov
in
sbb
xchg
xorb
mov
inc
stc
push
inc
jae
or
mov
fcompl
mov
pop
addb
outsb
add
or
arpl
sbb
filds
mov
stc
aam
pop
scas
scas
mov
xchg
pop
jg
adc
dec
fstpt
out
sbb
lret
add
dec
pop
leave
cmp
xchg
ss
jne
js
xchg
or
push
outsb
filds
fldt
das
cwtl
pushf
insl
lea
push
xchg
data16
mov
add
push
les
orb
cmc
mov
subl
push
shlb
mov
cmp
notb
insb
mov
orl
mov
lea
inc
cmp
test
sbb
aas
shll
or
pop
std
es
bound
pop
mov
mov
jmp
mov
cmp
push
lcall
shrl
fstps
adc
imul
scas
test
dec
xchg
pop
pop
into
push
add
sbb
add
orb
rorb
pushf
mov
mov
ja
sub
out
pushf
pop
jmp
int
jp
daa
push
js
stc
add
xchg
mov
sbb
out
test
dec
ds
lds
push
mov
or
pop
xor
pshufw
cmpb
scas
divl
mov
cli
adc
dec
cs
dec
xor
insl
out
push
mov
ret
mov
sti
fdivrp
mov
push
loop
xchg
minps
inc
scas
jp
mov
pop
cs
lahf
je
je
mov
cmp
les
nop
cmp
xlat
pop
loope
ss
pop
sub
mov
push
scas
js
ja
add
and
sbb
mov
addr16
cmpsb
adc
jecxz
mov
sub
daa
decb
push
pop
push
cmpsb
sub
into
mov
mov
jge
lods
outsl
jne
ficoml
sahf
or
shl
sbb
jp
int3
mov
loope
pushl
in
jp
xchg
inc
sub
fiaddl
lahf
add
adc
pop
add
xchg
mov
pop
subb
lods
mov
insb
pop
je
adc
ret
mov
arpl
push
adc
stc
push
push
mov
xor
ret
sub
decl
adc
sahf
mov
daa
int
sub
les
shlb
jmp
in
lret
push
outsb
or
xchg
push
add
test
stos
popa
sarb
cmp
xchg
add
xlat
out
add
cmp
shrb
pop
and
das
fidivs
xor
pop
xchg
lock
les
xor
ret
movsl
sahf
mov
mov
insb
push
test
and
enter
aad
ja
pop
fiadds
mov
outsb
add
leave
xchg
jae
pop
mov
and
mov
rcll
iret
out
xor
adc
movsb
xor
ss
cmp
mov
aas
subl
fldl2t
mov
in
dec
into
arpl
push
std
xor
out
sub
jmp
stc
pop
sbb
pop
add
sub
fldt
addb
sub
ljmp
sbb
pop
add
mov
rep
xlat
imull
xor
or
pause
jge
lcall
add
xchg
jge
adcb
bsf
aaa
add
add
or
cmp
mov
movsb
dec
adc
add
mov
xchg
cwtl
push
fsubrl
pop
push
bound
repz
pushf
jl
push
aas
xchg
adc
xor
or
push
aas
insl
inc
rcr
or
imul
fadds
pusha
in
dec
mov
sbb
addl
daa
and
xlat
lcall
fistpll
hlt
mov
xchg
ffree
add
dec
fistps
adcl
dec
mov
jle
jge
jmp
jbe
mov
push
insb
testb
ret
mull
pop
or
stos
push
cmp
fmuls
icebp
ds
std
roll
and
or
or
inc
xor
mov
call
aaa
inc
fldl
loop
push
xchg
fs
dec
test
aaa
xchg
out
sarl
inc
mov
test
mov
sbb
stc
cmpb
dec
pop
pop
lret
popa
sarl
inc
gs
sbb
and
jb
jmp
push
mov
cmpsl
and
mov
sbb
jecxz
jmp
xor
push
popf
lea
inc
mov
jo
bound
xchg
mov
out
dec
and
xchg
ret
mov
jae
mov
sbb
loopne
mov
lods
jge
pop
pop
xchg
mov
mov
das
daa
outsb
shl
mov
divb
adc
andl
repz
cmp
es
mov
adc
cmpsl
push
data16
mov
jmp
outsb
pop
push
stc
out
cmp
bound
xchg
xor
repnz
loop
sbb
mov
lret
je
jbe
pop
sub
into
pop
or
std
sub
movsl
jmp
repz
jg
add
ljmp
xchg
adc
adc
lock
cmp
mov
jne
in
insl
loopne
mov
loop
or
icebp
lahf
mov
jne
pop
add
mov
fimuls
dec
xor
aad
xor
pushf
out
push
mov
dec
roll
imul
jmp
out
or
push
and
fidivrl
cmp
pop
sub
sahf
aas
push
push
add
ja
insb
pop
jecxz
mov
fwait
lahf
lock
das
fwait
cmp
mov
arpl
pusha
in
dec
mov
in
push
rcrl
sub
out
xor
insb
out
add
ja
mov
daa
and
mov
clc
sbb
mov
or
pop
pusha
shll
sub
int
or
cmp
sbb
shr
push
pusha
dec
scas
add
push
call
xchg
scas
and
add
cmc
pop
out
jnp
clc
and
or
mov
cld
je
or
mov
dec
cmp
stc
insb
add
sbb
sbb
sbb
aaa
push
icebp
jg
lcall
dec
sarb
sbb
sub
xchg
jp
fmuls
punpcklbw
movsb
clc
push
push
icebp
into
jle
movsl
or
or
xor
dec
pushf
pop
or
mov
jmp
aam
lds
push
outsb
rorb
scas
xchg
and
out
scas
sub
adc
mov
inc
cmp
mov
loop
out
pop
or
and
ret
out
pop
imul
in
gs
lret
mov
or
dec
bound
iret
adc
sub
inc
mov
xchg
adc
add
ss
dec
jnp
rorb
lahf
out
divb
and
and
lret
lea
lcall
push
popf
dec
jmp
in
imul
pop
sbb
sub
dec
jno
inc
add
sub
mov
movsl
xor
sub
adc
in
and
icebp
dec
insb
mov
and
out
pushw
stos
dec
adc
pop
xchg
in
and
lahf
out
rorb
fcos
jge
hlt
xchg
pop
jmp
mov
in
pop
mov
aas
movsb
push
xor
mov
inc
adc
repnz
iret
stos
iret
in
repnz
xchg
pushf
lretw
sbb
add
stos
jle
inc
jne,pt
aas
jmp
jecxz
fs
mov
int3
mov
andl
test
loope
adc
mov
out
xchg
add
lret
lds
jmp
jno
sbb
stos
out
jbe
pop
gs
xor
mov
mov
pop
pop
jbe
fdivrs
movsb
les
sbb
inc
in
icebp
das
xchg
jne
test
lds
fldl
jae
adc
je
test
push
jae
sbb
inc
das
inc
fiaddl
cmpsl
inc
and
sbb
rcll
fsubr
mov
or
fcompl
lret
test
enter
sbb
fsubl
adc
jb
out
mov
and
adc
fstps
or
ficompl
iret
adc
xor
xlat
out
inc
fucomi
or
movsb
outsl
xor
movsl
push
data16
into
mov
fwait
std
pop
cli
jo
fdivr
push
xor
lea
mov
aaa
dec
pop
mov
int3
lods
dec
mov
mov
arpl
pushf
push
mov
mov
scas
lock
imul
xchg
xor
fwait
xor
test
test
push
push
es
cs
push
ljmp
subl
outsl
mov
jnp
popf
adc
mov
pop
stos
rolb
call
lret
jbe
xor
pusha
inc
mov
loop
mov
cmp
cwtl
mov
add
mov
rcll
add
pop
inc
push
sbb
inc
sti
cmpl
into
jl,pt
mov
pop
jo
jle
in
negl
push
call
xchg
mov
lds
dec
cmc
adc
xor
fidivrl
push
sbb
pop
sub
add
cmp
push
clc
or
inc
inc
xlat
fsubrp
jnp
or
daa
pop
adc
mov
mov
scas
adc
cs
mov
pop
test
xor
sar
xchg
mov
adc
insb
mov
sub
sarl
jp
adc
pop
es
cli
and
ret
ljmp
pop
aaa
into
rcrb
pop
movsl
stc
rorb
popa
roll
add
dec
and
mov
inc
push
loop
aad
int3
mov
jo
push
clc
iret
cwtl
sbb
push
hlt
cmp
adc
mov
sahf
lods
enter
cmp
adcl
sbb
cmp
ret
mov
sub
pop
loope
jg
adc
clc
jne
cltd
lea
std
push
mul
jge
jb
mov
pop
in
fcomp
cmpsl
insb
stos
push
inc
clc
pop
adc
rolb
adc
rorl
popa
or
jle
mov
popa
xlat
or
pop
je
scas
pop
in
jbe
mov
movsl
icebp
in
push
sbb
sub
mov
push
ret
and
pop
hlt
adcl
nop
lret
jle
loopne
jb
or
insb
add
push
xorl
insb
mov
xor
sub
subl
mov
mov
inc
mov
lods
fdivs
fcmovne
mov
push
sub
test
add
xchg
cmp
in
lcall
fcmovu
and
add
xchg
push
mov
sbbb
sbb
push
lock
shl
xor
repz
sti
push
aad
addr16
sub
insb
sub
xor
add
mov
lret
add
push
leave
jae
or
testb
rorb
jle
lret
mov
aam
int3
repz
push
iret
stos
lea
cmc
push
inc
fists
cmp
mov
push
iret
mov
inc
stc
jne
sbb
or
stc
test
test
pop
idivl
push
inc
jne
push
cwtl
inc
rol
cs
je
je
mov
pop
test
or
movsb
stc
stc
inc
dec
jle
pop
push
dec
pop
sub
sbb
jge
fdivrl
mov
sahf
cmp
sbb
ss
push
jg
aad
or
inc
jb
push
or
jo
add
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
jmp
repnz
repz
aad
les
addb
jg
sti
dec
mov
mov
pop
pop
daa
rcrl
mov
mov
lret
clc
mov
mov
mov
mov
icebp
sbb
scas
enter
ret
stos
xor
and
rcrb
sbbb
cmpsl
cs
mov
dec
stos
enter
addl
xchg
and
fiadds
pop
mov
ss
movsl
mov
addl
mov
or
ljmp
loope
out
mov
aam
adc
xchg
mov
add
cmp
pop
jae
cmc
ss
sbb
ss
andl
ret
popa
cmp
and
dec
cmp
fsub
stos
xor
dec
jo
adc
pop
mov
movsb
or
or
fsubrl
mov
add
fwait
cmpsl
lods
xor
add
pop
push
insb
clc
add
mov
sbb
mov
jecxz
jno
or
dec
or
sub
xor
sbb
sub
mov
bound
pop
into
hlt
int
sbb
leave
push
loopne
or
xchg
sbb
ret
pop
ret
hlt
arpl
fs
pop
shll
pop
inc
mov
and
cmpsl
scas
mov
icebp
push
mov
int
cmp
xchg
push
mov
lock
ret
rorl
push
sahf
mov
aam
sub
loope
pop
cmp
lcallw
fnstsw
sbb
rcll
dec
jmp
dec
stos
and
sub
or
das
cli
stc
push
inc
js
lods
rcll
into
fisubs
xor
sub
gs
cmp
dec
pop
jl
cmp
xor
stos
mov
jl
sbb
cmpsb
fisubrl
push
push
in
push
divb
cs
adc
or
xchg
clc
jp
fiaddl
xchg
outsb
mov
jmp
pop
mov
push
addb
push
xchg
cmp
push
mov
sub
ret
inc
testl
or
xlat
mov
sub
movsl
shlb
cmp
and
lea
xor
mov
lret
sub
shl
cmpsb
addr16
sub
or
sbb
push
scas
inc
std
lods
js
sbb
test
cs
jg
scas
popa
fsubrs
mov
xor
sti
test
lcall
rcl
xor
loopne
fidivrl
into
cmpsb
repz
cmc
xchg
stos
xchg
mov
adc
mov
cld
mov
xchg
push
js
fstpt
add
inc
lcall
mov
call
or
cli
xchg
jg
rcr
cwtl
mov
aas
imul
pop
jg
xchg
out
in
push
icebp
inc
shll
testb
mov
inc
jno
stos
cmp
lahf
mov
rcll
ds
jno
aas
data16
mov
xor
add
pop
push
dec
daa
adc
mov
pop
call
scas
or
mov
fidivrl
mov
shl
loope
pushf
ss
insb
jp
cmp
les
cli
loopne
aad
mov
adc
addb
pop
nop
movsb
push
shlb
push
sub
bnd
jno
xlat
sub
negb
sbb
stos
add
mov
sbb
lods
cmpsl
jbe
in
sub
in
and
cmp
mov
popf
bound
aaa
rcll
aam
sub
xchg
xor
into
andb
add
insb
xchg
clc
mulb
out
inc
iret
movsl
push
loop
jl
mov
in
sbb
test
jbe
fisubl
add
mov
and
mov
inc
xor
lcall
xor
sub
or
addr16
testl
mov
xchg
insb
cmp
lock
xor
adc
pop
les
dec
mov
addr16
add
cmp
rorl
fstl
adc
add
jmp
adc
xchg
or
jb
jns
and
gs
add
insl
dec
ljmp
add
pop
stc
push
in
jno
enter
loop
fstl
movsb
arpl
ja
int3
sbb
sbb
movl
jp
push
cmpsl
sbb
lcall
mov
sub
xchg
cmp
dec
ret
mov
je
inc
arpl
and
and
jecxz
scas
les
imul
lock
loope
mov
jns
dec
comiss
mov
js
enter
add
jg,pt
push
mov
fiaddl
scas
xchg
jmp
dec
xor
cmp
dec
movsl
out
lahf
in
data16
pusha
hlt
jb
idivl
mov
sub
and
add
nop
jbe
aad
mov
outsl
mov
stc
loop
xchg
cld
sbb
jno
and
das
bound
mov
dec
dec
ljmp
adc
incl
or
mov
add
sti
adc
mov
pop
adc
sbb
inc
jbe
jnp
cmp
mov
mov
cmpl
cmpsb
lock
sbb
addr16
imul
cwtl
loope
std
xor
mov
pop
loop
cmc
decb
hlt
jne
or
mov
imul
ja
popf
xchg
icebp
pushf
and
lods
dec
cmp
push
int
stc
leave
sti
xchg
jno
arpl
pushf
mov
aas
cmp
sub
mov
cltd
jne
push
fs
adc
rorb
xchg
sub
inc
mov
sarb
adc
sbb
xchg
stc
jmp
js
inc
test
jno
dec
dec
dec
cld
enter
xchg
daa
fdivl
xor
inc
mov
lods
into
mov
mov
clc
lahf
cwtl
mov
daa
negl
repz
icebp
cmpsb
incb
les
add
mov
cmp
xchg
cli
imulb
stos
aam
ss
cmp
push
rolb
pop
mov
inc
dec
push
sub
push
in
jl
in
aaa
stc
or
fmuls
fadds
out
fsubr
sti
cmpsb
ret
and
pop
out
mov
imul
xor
mov
pop
sbbb
testb
jne
mov
and
outsb
movsb
pop
mov
sbb
int3
cmpb
mov
ret
push
lods
rolb
push
shll
xchg
dec
jl
mov
inc
add
loopne
adc
iret
cs
cwtl
xchg
and
mov
insb
ss
pop
das
lock
jae
adc
sub
cltd
popa
ljmp
mov
je
loop
lods
jl
fistpll
loopne
and
mov
dec
xchg
jecxz
pop
xchg
mov
or
stos
xor
in
xor
lcall
xor
cmp
jmp
inc
xchg
pop
outsl
xchg
mov
in
or
sarb
jns
adc
arpl
cmpsl
mov
call
stos
loop
push
fcomps
cld
jge
mov
xchg
lea
lcall
add
aam
gs
test
lret
cld
test
cmp
push
sub
dec
imul
imul
push
insb
cmp
sbbl
mov
mov
push
pop
dec
mov
pop
inc
mov
push
pop
and
xchg
into
hlt
pop
pop
cmp
pop
and
pop
push
push
jl
test
push
adc
aas
stc
and
xchg
notl
fstl
cmpl
push
repz
pop
stos
hlt
sbb
sub
cli
mov
mov
sbb
xor
push
mov
push
xor
rol
cmp
pop
adc
push
dec
insl
pop
pop
jae
xchg
insb
cmp
xchg
jns
cltd
add
pusha
and
cmpsb
dec
pop
xchg
pop
cmc
sub
inc
hlt
dec
fsubr
sbb
or
popf
xor
pop
jbe
and
sbb
cmp
dec
adc
or
jge
pop
mov
ss
repz
enter
in
jle
xchg
sub
or
movsl
xchg
cmp
aam
out
mov
call
push
add
test
mov
addr16
imulb
daa
push
aas
sub
push
jmp
dec
popa
xchg
mov
mov
push
arpl
pop
lds
mov
jne
aaa
enter
cs
cmp
out
test
sub
orl
xor
into
jmp
inc
sub
mov
cs
mov
or
pop
mov
mov
adc
out
scas
xchg
add
mov
std
mov
mov
hlt
xchg
adc
sub
bound
loopne
fs
call
outsl
cmp
sti
cwtl
lods
aaa
js
jnp
loope
dec
xchg
jo
in
pop
sub
inc
popa
sbb
icebp
jecxz
xchg
call
xor
sbb
fdivr
sbbl
lahf
fstpt
pop
out
dec
lret
sbb
mov
jmp
mov
xor
flds
or
into
rclb
flds
push
mov
popf
cmpsl
les
ret
lcall
jo
adc
andb
dec
pop
loopne
mov
lods
xchg
xchg
inc
mov
stc
xchg
sbb
pop
test
les
or
nop
inc
mov
xlat
push
add
mov
adc
out
jo
mov
xchg
aas
loop
xor
pop
popf
xchg
push
outsb
mov
das
js
outsl
inc
jp
mov
mov
or
mov
fscale
mov
and
imul
mov
push
scas
mov
mov
push
ret
push
cltd
popf
jo
push
pop
dec
out
xor
adc
sarb
mov
xor
outsl
mov
xchg
pop
push
and
fnstsw
mov
shlb
outsb
imul
cmp
pop
shr
in
clc
pop
adc
jns
xchg
sbb
fisttpl
mov
lods
xchg
push
popf
xchg
cmpsl
mov
jns
inc
jg
pop
mov
or
adc
cmp
ljmp
push
mov
lret
mov
dec
outsb
mov
xchg
test
outsb
int3
sub
sahf
std
pop
add
mov
fcmovnb
push
push
in
adc
push
sbb
sbb
jno
jp
dec
inc
into
push
inc
pop
outsb
fstl
mov
sahf
roll
ja
push
jle
and
cwtl
test
mov
adc
jae
pop
fs
jns
jb
andl
add
or
lock
pop
rolb
inc
mov
jo
push
outsl
or
lret
xor
fnstsw
cmpb
loop
sbb
mov
repnz
and
cmpsb
sbbl
inc
pushf
aas
addr16
dec
inc
mov
sbb
pop
xorl
sbb
int
push
icebp
sbbb
bound
jl
push
xchg
int3
fstps
aad
xchg
xchg
bound
pop
and
or
dec
inc
in
imul
ljmp
pop
incl
and
movsb
cmpsl
in
push
dec
movsl
cmpsb
jecxz
mov
sub
push
pop
movsb
je
repnz
ret
sub
push
fwait
cld
into
pushf
mov
jge
loopne
cld
cltd
pop
inc
xor
mov
mov
sti
xor
pop
fisttps
movsb
jno
jle
out
push
jnp
data16
jge
aam
loope
mov
test
hlt
mov
mov
sub
add
xchg
testb
fwait
xchg
push
xor
push
lcall
dec
xchg
mov
loop
cmc
mov
lret
repnz
push
dec
sbbl
mov
movsl
ret
xor
jns
jae,pn
adc
jle
fimuls
scas
aas
xor
loopne
cmp
adc
jecxz
mov
cmc
movsb
int3
nop
cld
push
inc
pop
push
push
aam
xchg
inc
fisttpl
repz
pop
jmp
movsb
iret
jno
jl
out
inc
cmp
je
adc
dec
push
cmp
mov
pop
out
gs
sub
xorl
test
mov
pop
cltd
xor
cltd
call
xchg
or
bound
mov
test
arpl
mov
mov
std
call
push
mov
aam
cli
jge
fwait
xchg
lret
les
out
fs
push
into
fidivl
ljmp
add
ss
ds
movsb
jge
cld
sbb
shlb
jge
insb
mov
cmp
inc
imul
cmp
ficomps
frstor
mov
mov
fisubl
and
shrl
and
stc
fdivl
in
inc
imulb
dec
mov
cmp
cmp
pop
iret
imul
xchg
sub
xchg
adc
dec
data16
xor
daa
aas
mov
or
pop
jl
lds
mov
inc
icebp
notl
jo
js
jns
mov
mov
pop
pop
jg
jl
add
das
insl
push
push
jnp
xor
sbb
insb
adc
mov
das
jge
stos
lcall
in
jg
jnp
cmp
push
idivl
xor
leave
aam
jo
or
and
in
sub
or
sbb
push
hlt
dec
jecxz
push
jns
jae
inc
cmp
push
bound
sbb
addr16
dec
leave
adc
adc
das
mov
and
les
invd
mov
and
icebp
mov
push
pop
jb
clc
cli
add
push
mov
adc
mov
mov
push
fiaddl
ljmp
ss
jne
cmc
sbb
mov
xchg
movsl
push
jae
and
cmp
pop
jmp
test
add
xor
bound
pop
inc
jmp
jp
mov
pop
dec
ja
aad
mov
xchg
das
or
cmc
lods
jns
cmp
and
push
rcll
push
ja
das
sti
sbb
addr16
outsb
mov
pop
rcrl
and
out
add
lret
mov
icebp
push
jno
add
lock
add
xor
jg
xchg
mov
xor
repz
movnti
cmc
xchg
xchg
pop
xchg
xorb
fdivl
jno
ljmp
mov
sub
adcl
sbb
push
lret
cmp
repnz
outsl
addr16
or
aad
pop
aad
in
repz
push
mov
push
cmp
xor
les
sbb
ss
ret
scas
and
shll
aad
or
popf
adc
stos
add
lds
jp
jne
movsb
das
fstl
mov
iret
int
call
sahf
and
jmp
rorb
jnp
or
sahf
fcoml
jno
and
or
ja
mov
cmp
cmc
popf
xor
leave
sub
cmpsb
mov
aas
into
xchg
push
sti
aas
add
enter
xlat
mov
int3
popa
adc
inc
out
daa
pusha
jge
fiadds
xchg
idivl
popf
inc
test
or
out
mov
xlat
stos
mov
mov
frstpm(287
imul
fstpt
je
lods
or
fwait
mov
add
shrb
pop
jg
and
jbe
mov
daa
inc
jb
mov
mov
jle
ljmp
xlat
aas
xchg
pop
xchg
pop
insl
mov
pop
cmp
jns
or
lds
js
push
lret
sarb
sbb
cwtl
test
outsl
test
xlat
in
and
leave
mov
jo
mov
addr16
push
stos
jg
out
lods
ret
and
lret
insl
popf
cltd
setno
in
pop
lea
jnp
xchg
lds
adc
and
pop
jno
cli
and
lods
jle
ds
push
push
movsb
pop
jl
push
push
repnz
mov
mov
clc
addr16
inc
and
dec
dec
jne
cmpsb
mov
xor
outsl
pop
cmp
fidivrs
or
add
cmpsl
repz
lods
in
add
aaa
sbb
mov
clc
fwait
mov
shrl
inc
pop
cmp
in
outsl
mov
filds
cmp
push
add
inc
jne
or
outsl
adc
test
xor
jg
int
or
xor
sbb
notl
mov
ficoms
push
dec
arpl
enter
fstl
out
aas
mov
xchg
bound
fiadds
sub
pop
dec
roll
and
arpl
mov
adc
addr16
jl
push
cmpsb
movsl
push
adc
clc
enter
fidivrl
nop
sub
insb
out
out
jmp
inc
and
inc
xchg
nop
mov
adc
xor
loope
gs
ficoms
bound
and
xchg
jne
dec
sti
push
bnd
sub
ret
ret
cmp
pop
or
dec
inc
scas
pop
and
cmp
sarl
and
mov
inc
xchg
mov
inc
icebp
jl
mov
insl
out
dec
lcall
dec
std
add
or
cmpsl
dec
sbb
nop
ljmp
jae
jecxz
sbb
pop
dec
xor
or
mov
mov
popa
cmpsl
sbb
mov
neg
rolb
add
bound
xor
sbb
daa
mov
mov
xchg
lods
jnp
scas
add
leave
test
xor
mov
andl
mov
cli
sbb
add
sub
call
mov
push
cmp
sub
sahf
dec
xor
mov
mov
aam
push
mov
push
mov
and
jnp
jmp
mov
iret
mov
ret
pop
leave
or
lahf
and
call
jo
mov
jb
imul
enter
outsl
lahf
xchg
inc
mov
cmp
xor
push
jo
xor
bound
jne
mov
mov
mov
filds
in
and
jno
sbb
std
iret
aad
loopne
std
xor
pop
sub
or
inc
shll
lea
adc
sti
mov
or
sbb
inc
dec
bound
push
pop
dec
jle
fst
repnz
scas
pushf
xor
loope
cmc
mov
sub
pop
and
ss
js
test
pop
push
pushf
xor
sbb
mov
das
adc
adcl
movsb
loop
cmp
cmp
ja
and
push
push
out
pop
out
std
mov
pop
inc
mov
sub
mov
inc
add
nop
ljmp
daa
mov
in
out
out
test
dec
fcmovnu
mov
pop
scas
mov
push
mov
cmp
pop
rcll
adc
lock
in
pop
fldt
out
inc
fstl
test
and
adc
push
fbld
push
xor
lock
xorb
cld
lahf
mov
stos
cltd
in
push
xor
add
push
mov
sti
negb
les
xchg
pop
cmp
mov
pop
cmp
or
or
mov
fiadds
jae
or
es
fs
std
inc
cmp
inc
push
loop
add
mov
fnstenv
dec
mov
mov
add
into
xchg
stos
lea
mov
sbb
fincstp
mov
js
int3
push
loop
subps
fimuls
mull
jmp
bound
in
lods
mov
xor
sbb
mov
push
fadd
pop
out
sar
push
lret
loope
pop
inc
inc
in
lds
sahf
mov
push
fdivrs
jne
mov
sbb
adc
mov
lds
sbb
sub
enter
xor
and
jae
fwait
loopne
lcall
fimuls
adc
mov
filds
mov
adc
incl
subb
jns
lock
xchg
das
popl
xchg
jo
sbb
movsl
mov
addr16
mov
xor
xchg
setne
dec
scas
sub
pop
jo
pop
xchg
mov
adc
in
cmovbe
pop
or
xlat
pushf
iret
jo,pt
mov
or
imul
rol
out
xchg
stc
xorb
in
mov
xchg
sub
dec
or
inc
dec
pop
int
neg
mov
dec
dec
iret
stos
add
ja
sbb
dec
push
mov
mov
rclb
or
scas
jb
cwtl
icebp
fcmovnbe
pop
xor
sti
xor
xor
and
dec
mov
mov
sbb
repz
or
add
lret
mov
or
pop
xchg
pop
mov
rcr
push
movsl
in
or
pushf
pop
adc
and
inc
pop
fmull
inc
andl
es
pop
mov
notb
aad
repnz
sub
push
cwtl
lahf
inc
sbbb
mov
lods
in
shrb
std
rcl
pop
rorb
add
push
push
cld
jmp
popf
bnd
fildl
cmc
mov
fs
xchg
and
xchg
or
addb
add
xor
jne
jae
cwtl
lea
or
push
xchg
lock
cltd
data16
loop
js
jmp
shlb
outsl
mov
icebp
add
pop
rcrb
jg
dec
or
push
xchg
cmp
ret
dec
prefetch
or
adc
int
cmp
dec
and
dec
mov
in
xor
push
jo
cmpsl
filds
mov
sub
fnstsw
mov
mov
ret
jle
js
int3
into
adc
loopne
out
cmp
dec
loope
sub
shlb
sbb
loope
jo
add
ds
xchg
test
outsl
loope
push
cltd
xchg
jne
filds
fsqrt
stos
sbb
add
adc
or
ret
xchg
mov
das
les
int3
stos
rolb
enter
xlat
push
fists
nop
pop
lea
pushf
ficoml
aam
fidivrs
dec
and
mov
dec
or
ret
lods
jl
mov
stc
dec
cmp
adc
push
mov
jns
sahf
pop
sbb
fmul
in
fdivl
aad
push
mov
xor
aas
dec
movsb
push
sbb
addb
cld
aaa
jne
popf
movsl
fcmovnb
and
lcall
xlat
add
sub
jo
std
xor
inc
inc
xchg
ds
scas
inc
insl
into
cli
gs
stc
scas
sub
add
push
adc
repnz
push
pop
rcl
jl
mov
fildl
cli
test
mov
lods
arpl
call
pop
push
pop
ds
sub
clc
test
mov
add
movsl
les
cmpsb
es
lea
mov
mov
leave
inc
test
cli
adc
xor
push
cltd
cmp
add
in
xchg
leave
call
vucomisd
pop
mov
gs
xchg
xchg
fidivs
hlt
or
add
mov
push
clc
dec
scas
sub
testl
jns
push
dec
xor
imul
fisubs
movsb
rcrl
sbb
hlt
imul
loopne
sbb
add
test
mov
push
dec
loop
pop
movsl
or
add
inc
test
rcr
xchg
cmp
sbb
cmc
push
lods
lods
jbe
push
adc
xor
sbb
mov
push
sub
pop
fcmovb
mov
sbb
mov
test
mov
sub
xor
outsl
add
iret
ss
mov
xchg
pusha
mov
jmp
push
cmp
xchg
push
inc
testb
cmp
fadds
jne
and
jbe
cmc
rclb
inc
pop
inc
dec
sarb
jae
mov
cs
cmpps
loope
jp
test
sbb
lods
stos
mov
sbb
loopne
inc
push
pop
cmc
mov
xor
push
fidivl
mov
jo
in
ja
inc
into
sub
leave
fnstenv
das
xchg
inc
jbe
ss
adcb
iret
scas
jp
push
outsb
ret
cmpxchg
adc
dec
mov
adc
ret
test
cmc
mov
mov
bound
int
jo
push
leave
xchg
jmp
stos
pop
adc
jns
in
stos
jb
push
adc
sub
push
shrb
into
aad
mov
dec
pusha
pop
adc
leave
test
xchg
bnd
mov
movsl
pop
sub
mov
adc
mov
aam
mov
or
adc
add
divb
andb
push
into
push
enter
dec
stos
stos
pop
addr16
lods
jl
cmp
add
imulb
xor
mov
leave
sub
pusha
ficompl
imul
fnstenv
xchg
repz
mov
out
add
lcall
ret
out
ja
dec
pushf
sub
shlb
lock
aas
push
popa
push
mov
fidivrl
scas
cmp
adc
fbld
aam
test
dec
mov
aas
scas
mov
push
sub
nop
cmp
and
xor
outsb
add
xchg
es
notb
fucomp
pop
cli
outsb
outsl
lahf
inc
cmpsl
lock
stos
fcmovb
mov
mov
jo
cmp
sbb
add
cmpsb
sub
jl
aaa
pop
in
adc
std
add
push
xor
jno,pn
iret
out
jne
or
xchg
and
sub
or
shlb
lret
in
sbb
pushf
pop
jmp
shl
mov
add
cltd
sbb
aas
mov
sbb
mov
icebp
pop
mov
repz
popa
imul
push
pop
xchg
pop
addr16
cwtl
jnp
mov
jns
je
sub
or
sbb
and
and
mov
fwait
adc
xchg
mov
pop
out
mov
pop
movsb
push
mov
inc
lret
addr16
pop
jns
loop
mov
movsb
jb
pop
jae
or
das
test
cld
je
xor
dec
mov
xor
inc
std
push
int
adc
inc
xchg
cmp
mov
enter
fcoms
jle
leave
neg
outsl
lds
pushf
add
stos
or
mov
loop
adc
sbb
sub
pushf
fxch
push
inc
outsl
pop
test
shlb
mov
mov
loope
mov
mov
fidivs
jne
dec
insb
mov
into
inc
pop
inc
ret
fwait
ret
rolb
cli
xor
cld
lret
mov
ret
outsl
jo
mov
popf
popa
dec
ret
andb
mov
imul
lret
mov
andb
jp
icebp
sub
xchg
push
or
addb
add
inc
dec
outsb
loopne
adc
push
pop
jg
sub
scas
adcb
inc
and
and
pop
add
jl
jmp
mov
cli
jp
lea
pop
cmp
sub
mov
sub
in
jae
jns
in
jp
sbb
cmpsl
dec
pop
movlps
stos
out
shlb
imul
or
push
fldl
lret
int
hlt
lret
add
jo
fildll
lods
stc
cld
jbe
mov
cli
jno
inc
xor
jge
inc
enter
lcall
or
imulb
shll
call
pop
insl
push
mov
lret
jbe
gs
adc
push
xchg
nop
ret
pop
lahf
push
add
cmp
pop
push
test
cltd
and
xchg
inc
adc
jecxz
ss
test
int
fwait
xor
and
enter
mov
pop
mov
inc
adc
sbb
xchg
dec
mov
cmpsb
pop
mov
adc
inc
add
sbb
jno
add
push
aam
bound
es
movsb
xor
sti
pop
adc
inc
sahf
push
jo
ljmp
dec
es
xchg
or
add
mov
dec
cmp
xor
fistpll
inc
rolb
stos
pop
inc
in
push
fldl
xchg
std
add
fsubs
add
loopne
jne
cli
sub
push
into
and
jg
enter
dec
lods
mov
lahf
mov
push
loope
jle
mov
dec
mov
xchg
xorl
push
lret
je
fists
in
mov
lds
out
mov
imul
lds
jmp
push
or
mov
out
test
and
rdmsr
cmp
pop
mov
movsl
mov
shrb
fistpll
xor
int
enter
ret
call
stc
mov
dec
mov
inc
and
inc
sub
pushf
xor
fnsave
xchg
lret
lret
mov
inc
jmp
clc
lret
mov
jmp
insb
pushl
pop
xchg
jb
fldl
mov
test
test
jp
nop
lods
inc
xchg
in
shr
jmp
cmp
inc
ret
fwait
test
icebp
cmpsb
loop
fwait
mov
shll
push
cmp
testl
pusha
mov
jmp
mov
sahf
out
call
aas
sarl
fcoms
dec
xlat
dec
mov
cltd
mov
call
popf
fwait
pop
jg
fwait
leave
addr16
pop
or
test
mov
dec
mov
aaa
out
mov
lret
in
inc
icebp
adc
gs
push
cmp
inc
decb
dec
xor
sarl
sbb
fstl
loope
sbb
sbb
xchg
into
fcompl
push
lods
sub
pop
pop
inc
jbe
xorl
xor
dec
adc
inc
mov
sub
lret
subl
test
ljmp
imul
pushf
pop
and
and
insb
es
and
inc
ficoms
and
push
mov
arpl
xor
pop
ret
pop
movb
xchg
xor
scas
xor
and
insb
jae
fidivrl
jg
mov
fstl
fsubl
outsb
rcrb
das
stos
sub
cmp
repnz
mov
data16
mov
rorb
jecxz
into
and
fsubp
mov
mov
stos
mov
std
sbb
int3
mov
or
pop
xchg
xor
add
cwtl
cwtl
inc
mov
loope
ret
scas
rcrb
int
xor
iret
imul
cmc
cmp
push
test
stos
stos
jbe
and
pop
cmp
mov
adc
lret
das
or
shr
sub
js
mov
dec
or
aad
pop
mov
loop
xor
psadbw
les
and
lock
sub
inc
dec
push
cmpsl
adc
std
test
iret
cmpsl
adc
cmpl
jp
dec
dec
imul
xor
jae
and
mov
add
je
sub
cmpl
incb
pop
dec
mov
xor
xchg
test
cmp
insl
addr16
inc
push
pusha
cltd
jl
test
imul
aad
sahf
shlb
insb
mov
add
adc
mov
xor
clc
push
lds
jmp
jmp
in
ja
and
xor
stc
fdivl
add
push
dec
fimuls
out
flds
adc
xor
sub
sub
jmp
adc
test
or
xchg
inc
addb
push
lds
and
mov
mov
call
sbb
pop
shlb
lret
shlb
cmp
mov
iret
jecxz
mov
je
xor
mov
adc
and
data16
je
adcl
lcall
jmp
jb
add
or
xchg
clc
shlb
push
and
out
sahf
dec
dec
rcrl
jno
aam
imull
decb
mov
es
jns
jmp
es
jmp
pop
push
movsl
stc
aaa
mov
and
outsl
adc
push
rcl
sub
test
in
adc
push
scas
sbb
fnstcw
fnsave
xchg
lcall
pop
ljmp
movsb
and
pop
xor
jle
pop
xchg
jmp
push
sub
bound
ret
ret
int3
lret
fmuls
pop
mov
xlat
push
push
insl
push
mov
lret
stos
xor
out
fldenv
or
sub
shrb
out
out
sbb
push
sbb
imul
xchg
inc
adc
and
sbb
pushf
outsb
dec
gs
or
test
cwtl
lods
fs
pushw
or
push
mov
in
jmp
mov
pop
push
call
or
bound
fs
cmp
aam
xchg
or
test
and
lods
inc
xor
fsubs
jb
xchg
mov
stos
sti
adc
adc
cmp
loopne
mov
pop
jp
aas
mov
mov
enter
mov
adc
call
insl
pop
sbb
mov
popl
push
mov
mov
sar
aas
popf
ljmp
scas
add
xchg
push
add
dec
mov
out
aas
jecxz
dec
sub
sbb
nop
icebp
dec
push
sub
data16
adc
mov
ret
or
aam
sbb
ds
inc
mov
nop
mov
lods
in
inc
sbb
inc
shr
jo
dec
mov
mov
xor
testb
add
aam
aam
and
fidivrl
cmp
xor
sbb
push
outsb
dec
mov
push
jle
inc
mov
sbb
outsl
repz
out
xchg
push
lcall
leave
inc
stc
mov
or
inc
fimuls
cld
inc
ficoml
cmp
aad
test
imull
cld
or
xorb
cmpsl
lret
nop
into
push
pushf
jge
jne
outsb
arpl
push
mov
mov
clc
enter
or
or
sub
sbb
rclb
incl
mov
sbb
pop
outsb
jp
jo
sbb
loop
rcl
ficoms
jbe
push
in
mov
sub
mov
mov
shrl
push
fldl
dec
and
lcall
and
or
xor
lock
add
or
vmwrite
adc
arpl
cwtl
sub
xchg
push
ret
push
add
and
xor
pushf
push
and
sub
xor
es
jns
mov
hlt
mov
bound
popf
popa
idiv
in
mov
enter
sub
or
and
sti
les
int
test
xchg
xchg
and
test
mov
lea
nop
inc
mov
sub
nop
or
shrb
mov
mov
in
aaa
push
jp
mov
lret
xor
push
mov
fists
add
insb
and
sub
xchg
jnp
mov
sub
iret
dec
add
lcall
fs
or
std
jmp
aad
cmp
adc
mov
je
outsb
pop
cmc
jecxz
push
pop
pushf
loope
rcrb
test
test
sti
leave
cmp
sbb
enter
sbb
jb
insb
int3
adc
mov
xchg
lods
testl
adc
sub
clc
cwtl
or
and
dec
out
bound
hlt
call
jb
loopne
push
or
cmc
mov
outsb
sahf
out
cwtl
mov
mov
cli
data16
xlat
pop
fldl
scas
mov
pop
out
cmp
mov
rorb
push
sar
out
xchg
mov
or
lcall
fdivrl
jo
fs
aaa
adc
movd
cwtl
or
dec
mov
push
inc
lods
mov
xchg
gs
arpl
xor
dec
mov
jmp
lret
lock
daa
ljmp
aas
push
pop
adc
push
mov
aas
jo
fisubs
push
mov
and
aad
cmp
icebp
sarl
push
cmp
mov
lods
mov
jae
cmpsl
jo
mov
es
ss
add
repnz
std
ljmp
arpl
dec
add
inc
adc
daa
dec
pop
mov
shlb
adc
lahf
jo
sub
in
cmc
push
pop
aaa
dec
stos
insl
jmp
popa
shlb
jp
js
and
pop
lods
push
push
mov
xor
jb
pop
xor
ja
rorl
aam
ss
test
repnz
sub
andl
fcmovne
and
int
adc
xor
jo
enter
test
fistpl
out
int
pop
ds
mov
add
or
dec
scas
jmp
cmpb
cld
popl
por
push
hlt
xor
mov
pop
bound
repz
cmp
sub
or
jmp
pop
idiv
jecxz
arpl
adc
jb
push
jp
inc
sahf
rcl
jmp
cmp
add
imul
xchg
cmpsb
fcomip
cmp
adc
mov
inc
jg
out
xor
fidivl
push
sbb
arpl
sub
jbe
push
int
pop
add
add
addl
and
insl
in
pop
sub
mov
mov
out
mov
sahf
rclb
ds
jg
jne
jl
cwtl
shlb
sub
ja
dec
dec
scas
adc
movsl
pop
sbb
rcr
push
inc
gs
dec
pop
aam
mov
fcmovnb
mull
icebp
xor
inc
out
hlt
jns
cs
sub
imul
aam
jae
cmp
add
or
sti
pop
stos
push
scas
xchg
sub
ret
jbe
xchg
inc
sub
mov
ret
js
or
inc
cmpsb
fs
dec
out
inc
jmp
scas
stos
push
popf
add
pop
mov
stos
mov
mov
sub
dec
push
lds
inc
push
test
test
mov
cmpsl
sti
cmp
test
loopne
scas
imul
js
dec
popa
cmp
fiaddl
adc
rclb
mov
mov
fwait
inc
xor
cmpsb
hlt
mov
test
cmp
jne
fstpt
les
leave
out
mov
xchg
xor
push
inc
or
cmp
rorb
leave
mov
popl
sar
mov
lods
mov
push
cmp
aam
jmp
pop
movsb
jb
scas
imul
add
lea
gs
int
inc
sub
adc
add
xor
push
nop
out
cld
imul
adc
int
icebp
int
into
in
jmp
mov
addr16
mov
jnp
pop
insb
mov
sub
and
mov
pop
pushf
inc
sub
push
jo
insb
dec
or
dec
filds
jle
mov
push
mov
out
sub
and
inc
sbb
aaa
out
jne
jp
ja
add
aaa
pop
ret
xchg
ja
fldl
std
addr16
push
xchg
ret
stos
arpl
inc
cmpsl
insl
dec
or
dec
cld
into
shrb
sahf
mov
stc
flds
sbb
sub
or
fucomip
add
orb
add
es
pop
out
cmpsb
imul
jb
pop
aam
ljmp
outsl
push
and
cmp
movl
sbb
mov
lret
mov
negb
mov
mov
shrb
sahf
inc
xchg
jnp
jg
jne
scas
add
adc
lea
inc
jb
cmpsb
and
scas
push
sbb
mov
or
pop
rclb
jae
sti
std
jb
imul
call
mov
inc
sub
and
cmp
push
cmpsl
cmp
out
dec
les
iret
and
call
stc
xchg
xor
mov
jecxz
xchg
stos
movsl
enter
lahf
push
fnstsw
sarb
and
sbb
jo
lods
jbe
xor
and
sub
jb
inc
pop
mov
roll
jecxz
jmp
cli
aas
cwtl
bnd
cmp
popf
shll
mov
mov
xor
ds
pop
pop
cmp
xor
dec
loope
fs
xor
mov
je
adc
sti
rcrl
ljmp
adc
mov
jo
pop
mov
or
mov
call
and
dec
or
lds
fistpl
cmp
push
and
dec
cmc
aad
and
js
jmp
std
fstpl
pop
popa
dec
or
mov
pop
push
sahf
lret
test
test
xchg
daa
imul
adc
adc
pop
and
in
fistpl
push
jmp
pop
dec
inc
xchg
fmuls
outsb
ds
fs
psrad
popa
fimuls
fs
into
cmpsb
xor
cmp
lahf
call
cmpsb
js
hlt
ret
das
and
ss
push
cwtl
fcoml
popf
push
add
add
rcll
sub
cli
push
ja
cli
pop
addr16
mov
mov
mov
dec
xchg
imul
cmc
add
lahf
cld
pop
push
repz
jae
inc
icebp
addl
jmp
xor
fdiv
cmp
mov
mov
aad
push
jmp
adcb
clc
inc
insl
dec
outsb
ds
jl
sub
mov
pop
data16
imul
arpl
dec
fstl
inc
mov
mov
test
rol
sbb
jno
or
push
dec
or
xchg
mov
jb
ja
push
xchg
push
mov
daa
and
call
mov
int3
cmpl
push
jbe
les
fcmovbe
jle,pt
push
xchg
shlb
cwtl
add
sub
xchg
cmp
pop
mov
xor
adc
pop
push
jno
fmul
sub
aaa
in
or
sub
xchg
dec
jno
add
test
jmp
mov
addr16
inc
and
fiaddl
pop
es
mov
push
mov
sahf
ja
pop
mov
xorl
or
xor
push
mov
clc
fsub
aam
std
loop
and
and
addr16
adc
or
ror
aas
cmpsb
xchg
cmc
add
pop
negl
mov
aas
dec
test
iret
test
cmpl
adc
scas
jno
pop
sub
or
pop
xchg
or
aam
cmpxchg8b
std
pop
sub
adcl
inc
inc
adc
cmp
insl
push
fld
pusha
shlb
or
incl
clc
pop
xchg
cmp
cld
fidivrl
dec
test
dec
call
xchg
mov
adc
mov
jb
fisubrs
and
rcll
punpcklbw
pop
fsub
pushf
loop
jmp
ds
dec
fcmovb
mov
mov
push
jns
insb
lea
jg
call
mov
lea
mov
and
fwait
mov
adcb
cld
popa
pop
dec
and
hlt
movsl
jne
ljmp
dec
insb
cmc
daa
fnstenv
mov
stc
ret
lea
in
jno
jo
mov
jmp
aas
imul
das
add
xchg
mov
mov
jne
or
out
jcxz
jl
stos
aad
adc
repnz
mov
hlt
clc
cmp
loopne
lock
mov
jae
dec
ret
cs
outsb
out
push
push
add
aas
rorl
lea
mov
push
jb
push
and
sahf
dec
fistl
test
push
call
cmp
mov
imul
adc
sbb
mov
mov
cmc
cmpsb
nop
icebp
out
cmpsb
xchg
xorl
std
stc
out
out
jp
icebp
dec
cmp
mov
xlat
jl
inc
adc
test
xchg
setb
fistpll
adc
mov
or
pop
lods
mov
std
leave
push
cmpsl
pop
ror
mov
fs
pop
imul
scas
push
ja
xor
mov
sarb
adc
inc
mov
dec
xor
lock
xor
push
ret
repz
xor
leave
or
ss
mov
enter
jnp
loop
pop
dec
mov
loop
add
pop
fiadds
js
std
jl
sub
xor
in
xchg
idivb
and
cmp
sub
jne
jbe
int
mov
xchg
daa
insl
scas
sub
xor
pop
insb
inc
pop
cltd
popf
fwait
shl
xor
mov
pop
sub
mov
cwtl
dec
fisttps
jne
jae
out
and
fisubrs
mov
jb
rcrb
out
fs
mov
push
sbb
sbb
rorl
fistps
jmp
filds
lods
loop
imul
push
xchg
popa
fisubl
test
xlat
insl
push
les
fisttpl
mov
add
jg
cmpsl
pop
cmpsl
dec
int
adc
jnp
cmp
cld
xlat
jge
cmpsl
sahf
stos
imul
lock
push
in
lods
mov
cwtl
lods
adc
lahf
pop
xchg
push
xor
push
movsb
or
sub
fadd
insl
push
scas
mov
pop
jae
sbb
add
push
in
pop
inc
xchg
aad
push
mov
cmp
mov
dec
stc
loop
sbbb
xchg
adc
lret
movsb
adc
ds
lds
xor
pmaxub
jnp
xor
adc
fcmovu
push
and
mov
dec
cmp
jmp
inc
mov
push
or
dec
push
xor
or
stc
mov
add
sub
hlt
loop
or
mov
jbe
stos
scas
lods
pop
dec
dec
imul
dec
ret
adc
inc
cld
mov
sbb
mov
lcall
out
sbb
pop
mov
cmpsl
adcb
mov
cmp
rcll
ror
fists
jg
pusha
pop
mov
or
xor
push
es
in
mov
push
sbb
lock
jp
popa
xchg
mov
aaa
lods
sub
xchg
hlt
dec
int
push
push
lahf
ret
imul
call
xor
cmp
adc
sub
mov
dec
mov
je
test
sbb
or
cmpl
mov
loopne
mov
mov
pop
sbb
mov
js
jmp
bsf
pop
and
mov
sub
adc
xchg
sti
lea
lock
jo
push
adc
adc
pop
jae
test
pop
mov
add
test
inc
mov
jbe
ret
popa
cmp
mov
add
cmc
sub
jmp
dec
sub
repz
in
and
xchg
sti
lea
or
xchg
outsb
jp
rcr
in
aas
in
cmp
and
andl
mov
in
inc
or
add
pop
shrb
jnp
adc
ret
test
sub
push
sub
dec
les
div
cmpsb
jmp
montmul
cmpsb
sbbb
outsl
mov
jnp
int3
adc
pop
dec
or
jo
jmp
jle
mul
mov
stc
std
lcall
pop
out
jl
int3
in
es
inc
cmp
cmp
mov
test
mov
mov
sbb
pop
lret
mov
out
dec
add
sub
hlt
je
dec
outsl
pop
push
fistl
test
lock
inc
mov
aas
mov
ja
clc
test
and
add
popa
lods
popf
jl
push
testb
xchg
bound
sbb
aad
fcmovb
xlat
sub
roll
xor
jge
aad
lret
dec
push
or
dec
test
lret
stc
jbe
arpl
add
or
xor
adc
jmp
adc
push
enter
in
jmp
adc
popa
xor
orl
cmp
xor
sub
mov
icebp
push
stc
mov
inc
push
rcll
lea
xchg
mov
aaa
ljmp
rorl
ja
jbe
jns
cmp
mov
cmp
mov
dec
pop
shlb
subl
lea
xor
jmp
mov
jg,pt
in
lea
cmp
cmpsb
test
jns
xor
cli
add
inc
sbb
sbb
std
and
mov
inc
jp,pt
dec
call
mov
mov
sub
call
pop
adc
or
adc
push
add
aad
mov
pop
pop
jmp
aaa
mul
inc
lds
adc
call
adc
lods
mov
dec
adc
ret
pop
decb
jns
cmovo
fsubs
js
mov
cmpsb
test
in
adcl
negb
adc
xchg
mov
into
pop
enter
aas
inc
lea
adc
outsb
cmc
sar
int
std
mov
jb,pn
and
leave
icebp
lods
stos
inc
into
mov
inc
pop
adc
adc
mov
jnp
popf
push
mov
dec
add
call
les
les
ljmp
frstor
and
lea
shl
xchg
mov
mov
ret
mov
cwtl
int
stos
sub
sbb
lods
loop
dec
int3
loop
fiaddl
cmp
mov
loope
mov
das
pop
fstps
mov
mov
lock
flds
bound
loopne
pop
nop
xorl
iret
pop
xor
jmp
repnz
fnclex
lods
and
outsb
xchg
enter
into
mov
cmpsl
inc
stc
lcall
adc
sub
xchg
imul
mov
or
into
mov
mov
sbb
or
sub
jmp
inc
and
js
adc
add
add
push
mov
lcall
pop
push
loop
jp
nop
jecxz
sub
add
mov
nop
shll
imul
dec
outsl
lret
loope
sub
jl
mov
test
out
jns
inc
popf
lds
xchg
push
test
pop
lock
sub
jmp
sub
cmp
push
into
cwtl
xchg
test
bound
push
in
insb
jo
in
rcrl
popf
cmc
xorb
mov
ja
jbe
and
push
das
push
jmp
dec
mov
jge
in
cmp
test
fs
push
cltd
sbb
fsubr
mov
adc
sub
adc
out
or
in
outsl
es
cmp
sbb
aam
lods
and
movsb
xchg
cmp
in
orb
loope
jecxz
test
int3
mov
ds
je
repz
jb
and
jb
call
dec
test
mov
pop
in
adc
loop
popl
outsl
lret
and
sti
sub
lock
push
xor
and
fimuls
out
jo
mov
add
sub
mov
lods
movl
ficompl
jmp
adc
mov
jmp
pop
jge
push
sub
jle
rol
out
das
inc
lods
jae
mov
filds
test
pop
jno
jmp
aad
or
ret
sbb
jnp
ja
inc
sbb
jmp
test
sub
jnp
mov
or
mov
mov
test
inc
cwtl
cmp
popa
sbb
scas
jg
testb
pop
fdivl
mov
jo
xchg
add
jmp
pop
add
insb
cmp
stos
jecxz
adc
xor
push
ret
mov
loope
push
push
pop
cmc
sbb
jle
pushf
push
mov
adc
out
stos
jne
xchg
sub
and
or
mov
pop
idivl
push
mov
movsl
fldl
jl
adcl
add
jb
inc
push
in
js
mov
jb
jnp
shl
jno
mov
ds
mov
adc
pop
aas
jne
sti
lret
outsb
into
inc
int3
cs
adc
dec
jnp
daa
repnz
inc
lds
mov
movsl
pop
dec
dec
test
mov
repz
enter
push
inc
mov
pop
pushf
lahf
dec
add
mov
inc
int3
daa
xchg
jns
cmp
outsb
push
mov
xchg
stc
repz
pop
xchg
aad
xlat
outsl
mov
jno
ss
out
dec
cli
cmp
mov
out
xchg
repz
sbb
jbe
adc
inc
xor
sub
and
xlat
sub
xchg
pop
adc
push
cmpsl
stos
or
lahf
xor
out
mov
cmp
mov
test
test
loope
loope
cmp
and
and
lock
sbb
shrl
flds
pop
sbb
xchg
and
dec
add
adc
pop
lods
ret
movsb
or
dec
mov
dec
unpckhps
jnp
inc
xor
addb
and
xchg
dec
dec
inc
adc
push
test
inc
lock
testb
dec
cmpsb
dec
mov
cmp
ljmp
lahf
pop
mov
jmp
outsl
inc
imul
jno
xchg
sub
mov
stos
jecxz
out
pop
add
mov
inc
dec
lock
popf
mov
push
dec
std
sbb
pushf
fcoml
jo
fcmovbe
xchg
xchg
call
negb
in
xor
cmp
sti
xchg
mov
sahf
push
add
push
fstpt
mov
lahf
rorl
test
aaa
mov
xorb
aad
and
es
or
cmpsb
add
imul
gs
jne
loop
dec
out
jb
jb
and
or
aaa
rorb
pushl
fnstcw
into
xor
xor
cmp
inc
stos
or
pop
xchg
subl
orb
and
push
mov
out
enter
dec
mov
xchg
sbb
mov
mov
mov
in
pop
and
inc
push
icebp
rorl
scas
cmp
ret
arpl
loopne
scas
mov
xchg
je
xchg
test
aas
loop
fimull
or
in
test
divb
or
imul
mov
popa
rorb
cmc
ja
add
ds
jb
pushf
xor
dec
dec
dec
adc
and
inc
repnz
iret
outsb
call
mov
pop
iret
pop
test
and
xchg
scas
jge
fdivp
daa
testb
daa
mov
or
fsts
mov
dec
iret
xchg
dec
xlat
or
outsb
adc
loopne
xor
mov
xorl
cmp
mov
mov
lcall
mov
inc
lock
lcall
dec
pusha
fwait
clc
std
mov
ja
and
movsl
inc
dec
rcrb
cltd
mov
push
add
bound
xor
fisubs
lock
mov
xor
or
jae
xor
xor
lods
pop
pop
cwtl
mov
mov
iret
cmc
or
loopne
push
pusha
sbb
fidivl
fisubrs
lea
add
pop
mov
adc
pop
rorl
ret
test
scas
rorl
out
jnp
loope
or
sbb
sbb
sub
mov
int3
xor
jnp
jp
add
std
mov
clc
out
mov
in
mov
jmp
adc
in
jle
or
xchg
test
add
jle
jl
inc
mov
mov
sub
mov
mov
fstl
and
daa
sub
pop
mov
je
pusha
clc
jo
subl
xchg
adc
xor
jno
push
and
jge
xor
stc
or
pop
jmp
xor
notl
hlt
in
shrb
mov
pop
or
mov
add
add
test
lock
sti
in
ja
dec
movsb
cmpsl
sub
cmp
and
jno
mov
stc
shll
push
pop
push
mov
xchg
lahf
mov
das
xor
sar
stos
fnstsw
mov
clc
xchg
mov
xchg
push
and
lret
sbb
cmpsl
and
push
lods
sbb
xchg
push
inc
push
pop
mov
ret
pop
rclb
rcl
jne
hlt
in
aaa
je
mov
adc
adc
xor
dec
fnstsw
pusha
add
inc
inc
stos
inc
mov
scas
stos
xchg
les
or
pop
xlat
adc
and
out
mov
xor
mov
enter
push
inc
inc
mov
xchg
fwait
enter
add
lahf
xor
pop
mov
xor
pop
mov
lods
flds
lahf
mov
imul
xchg
sahf
popa
lock
ret
dec
xchg
or
shll
adc
mov
fucompp
movsb
push
xor
or
mov
pop
es
xor
cmp
jbe
call
push
sahf
dec
arpl
mov
dec
jbe
mov
int3
aaa
inc
mov
jp
pusha
add
adcb
and
sarl
mov
test
je
testl
mov
fmuls
xchg
push
cmp
out
adc
inc
dec
outsl
or
movsb
mov
out
loop
push
test
jnp
sbb
es
ss
out
pop
lods
inc
mov
stos
out
pop
popf
push
push
outsb
test
jmp
lret
imul
cmp
inc
repz
sbb
punpckhbw
push
mov
adc
sbb
and
in
imul
push
add
cli
fcompl
inc
dec
ss
mov
inc
int3
push
adc
mov
or
sub
inc
mov
sbb
stos
ja
inc
fwait
addr16
iret
or
cwtl
sbb
insb
test
das
inc
mov
mov
mov
je
subb
pop
std
mov
mov
jle
dec
arpl
add
std
dec
xchg
xchg
sub
shll
or
pop
call
pop
in
outsl
cmc
nop
pushf
sbbl
mov
shll
or
outsl
insl
call
xchg
pop
lret
cmp
rcrl
pusha
dec
cwtl
xchg
loop
push
xchg
test
inc
and
and
fiaddl
adc
test
or
cmp
fadds
cltd
ljmp
inc
xchg
movb
pop
add
inc
xor
in
push
out
cmp
and
jnp
sbb
sbb
shll
dec
cltd
push
mov
adc
orl
xchg
cmpsb
xlat
jo
pop
sub
fwait
rorb
inc
pop
push
fwait
cmpl
outsl
ja
addl
outsl
cmpsb
clc
out
mov
add
xchg
imul
outsl
or
jb
and
imul
pop
sub
aad
lahf
sub
jo
rorl
pop
test
inc
aam
mov
xlat
dec
jns
pop
lsl
fdivrl
mov
sub
adc
pop
popf
or
pop
push
fsubrl
mov
aas
mov
xor
test
jge
gs
ljmp
pop
xor
cmpb
adc
or
cwtl
lret
jnp
stc
cmp
xchg
cld
jecxz
mov
std
imul
sub
lret
cmpsl
mov
enter
or
inc
addb
mov
xchg
jo
or
fnop
cmpsl
mov
rcr
pop
sahf
add
repz
pop
fwait
gs
mov
in
leave
dec
out
aaa
mov
push
lahf
xor
js
insb
xchg
into
jle
adc
std
je
add
out
mov
filds
xor
inc
xor
int3
adc
mov
ss
cmpsb
mov
adc
or
mov
xchg
dec
cmp
cwtl
and
into
mov
cwtl
jle
out
test
adc
mov
cmp
mov
inc
loope
dec
leave
imul
popw
lret
inc
lcall
pop
lods
sub
in
or
cmpb
sbb
adc
push
add
insl
pop
popf
iret
dec
adc
inc
cli
mov
test
xchg
adc
add
test
das
repnz
cmpl
rdpmc
repnz
iret
sti
jno
sarb
movsb
jo
into
mov
push
mov
loope
and
add
and
ror
aad
sti
into
add
push
mov
imul
xor
cld
loope
rcr
ja
in
dec
mov
push
out
arpl
call
cmpsb
adc
sub
push
dec
or
mov
and
std
xchg
out
xor
dec
xchg
out
jne
xchg
test
xchg
or
ret
sbb
iret
fisttpl
push
idivl
dec
fwait
test
pop
fwait
test
cli
bound
push
mov
add
out
mov
mov
push
mov
negb
sub
jmp
dec
push
xchg
addps
xchg
jb
test
out
or
xchg
mov
mov
es
xchg
aad
inc
popf
sti
adc
in
andl
mov
xlat
pop
cmp
leave
mov
fcmovnb
cltd
test
xchg
in
jge
out
mov
repz
sub
cmp
fstpl
mov
xchg
dec
pusha
leave
cmp
dec
adc
mov
popa
jbe
fwait
sbb
or
subl
jnp
loop
test
sti
ds
mov
mov
inc
xchg
rol
or
fidivs
arpl
inc
dec
cli
and
or
insb
out
push
bound
dec
enter
fcoml
xchg
mov
pop
push
ja
jae
mov
sbb
xor
fcomps
popf
inc
push
pop
and
pop
mov
addr16
rcrb
addr16
pcmpgtw
sub
cs
pop
xchg
popa
mov
mov
mov
mov
push
ret
mov
mov
push
jb
ss
pop
pushf
loope
mov
mov
nop
mov
xchg
fmul
ss
jecxz
scas
mov
push
repz
cltd
movsb
mov
fcmovbe
xchg
gs
rclb
add
add
int3
pop
loopne
subb
sbb
fcmovnb
pop
ljmp
bnd
jne
mov
mov
test
mov
enter
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
jmp
aad
mov
mov
rorb
sbb
cmpsl
daa
sbb
adcl
addl
insb
or
adc
test
aas
testb
mov
xchg
xor
std
mov
repz
shll
add
push
out
cmp
push
mov
jno
out
pop
cmc
add
inc
jp
js
mov
insl
and
mov
xor
pop
popf
jnp
sub
mov
mull
test
in
push
inc
inc
push
fs
ss
and
fs
imul
xchg
lock
rorb
xchg
je
rolb
or
out
cmp
push
icebp
or
xor
lods
cmp
scas
jg
cmc
sbb
out
cmpsb
pop
fadd
ds
scas
pop
and
iret
imul
out
leave
leave
or
jb
add
or
fwait
loopne
ret
mov
movsl
sbbl
mov
in
fxch
je
jg
mov
xchg
outsb
and
fsubs
jge
cltd
xchg
add
stc
add
mov
xor
cmp
leave
jbe
insb
movsb
push
jnp
stc
push
dec
dec
imul
pop
jecxz
sub
adc
int
dec
fwait
mov
xor
test
xlat
mov
addl
je
xor
sub
jecxz
cmp
and
das
negb
push
mov
daa
shlb
add
add
or
jge
pop
sbb
loop
adc
imul
jmp
mov
cmp
adc
in
and
cmp
cld
nop
insb
mov
ljmp
mov
mov
enter
sbb
lahf
jg
sti
data16
jp
fstp
std
pusha
inc
aaa
test
sti
push
inc
jbe
push
cmpsb
aaa
pop
fs
flds
lahf
call
bound
cmp
cltd
js
push
mov
mov
push
gs
mov
cmp
cmp
inc
fs
mov
dec
sarl
js
adc
xor
sbb
jle
pop
out
add
push
js
pusha
jno
mov
mull
jbe
into
jle
sub
mov
into
mov
les
das
adc
and
into
mov
es
mov
mov
xor
lret
xchg
fimuls
fsubl
pop
ficompl
js
mov
cli
inc
ss
pushf
mov
aas
movsl
mov
aas
jo
cmpsl
shrl
cmp
and
fisubs
sub
lahf
divl
out
dec
push
std
pop
ss
push
push
pop
call
cmp
fwait
jmp
stc
in
cltd
orl
stos
movsb
mov
inc
jb
push
inc
cwtl
rol
push
test
stos
cmp
sub
add
test
inc
jo
mov
push
aaa
arpl
lods
add
sub
mov
push
outsl
dec
and
mov
mov
mov
pop
adc
lcall
dec
pop
lods
sub
xlat
sahf
sbb
cmp
dec
push
mov
scas
sbb
mov
mov
or
lcall
sahf
ss
jne
mov
outsl
je
xchg
mov
lods
mov
test
call
mov
cmp
pusha
pop
cmpsl
cmp
push
cwtl
lcall
mov
in
or
mov
mov
imul
sbb
inc
xchg
add
fldt
movsb
cmp
jbe
dec
or
dec
aaa
jecxz
mov
sub
fbld
xchg
xor
es
xor
dec
xlat
xor
lahf
jg
mov
js
pop
push
negb
pop
pop
das
push
lahf
push
and
xor
and
pop
movsl
movsb
inc
pop
sub
push
and
cmp
mov
sub
adc
adc
fsubs
repz
pop
mov
jmp
lcall
add
mov
dec
sub
mov
pushf
xchg
clc
lods
cmp
sub
fwait
jbe
stos
out
js
xchg
ds
pop
pop
cmp
enter
cmpsb
mov
lahf
enter
decl
add
test
into
je
popf
lods
xor
xchg
iret
jg
fstl
mov
fsubrs
or
adc
xchg
test
add
pop
dec
push
test
insl
pop
test
aad
mov
lret
xchg
std
adc
test
dec
sahf
cmpsl
into
aad
cmp
pop
mov
mov
push
int
adc
mov
test
outsl
add
xor
insb
gs
ret
lcall
shlb
add
fstps
sub
int3
cmpsl
into
xchg
cmp
pop
xchg
add
add
xchg
or
cld
push
cmp
cmpsb
fsub
test
xor
fstpl
repz
add
cmp
or
mov
xchg
xchg
push
call
cmp
xchg
stos
fs
xchg
imul
aas
mov
movsb
pop
jns
fimuls
add
or
mov
popa
sbb
ds
int3
jb
hlt
fadds
es
push
int3
xchg
int
lret
jo
gs
pop
mov
mov
xor
mov
imull
jmp
lahf
shlb
cmpsb
add
leave
test
cmp
mov
call
into
inc
out
lcall
clc
sub
mov
loop
push
or
std
mov
sbb
test
jmp
add
ds
std
sarl
xchg
mov
mov
sub
mov
clc
pop
jae
iret
or
mov
mov
adc
add
cmc
cmp
cwtl
outsb
cmovbe
xchg
ja
mov
jnp
mov
aas
popf
sbb
jp
pop
xchg
test
push
clc
and
bnd
cltd
testb
bound
mov
cmp
ds
mov
imul
ficompl
into
add
out
inc
insb
lock
sbb
ret
loopne
in
add
pop
shlb
int
or
out
jb
cmpsl
mov
inc
adc
or
and
fcmovnu
in
mov
xor
hlt
cwtl
push
inc
repnz
das
in
inc
mov
adc
mull
imul
mov
fmuls
jl
popa
ja
push
mov
mov
cmpb
mov
and
in
fwait
mov
mov
out
xchg
mov
out
and
jno
loopne
jo
push
cmpsl
into
lea
push
jo
mov
xchg
leave
push
add
jns
pusha
ljmp
mov
fstpt
xor
in
pop
fcompl
insl
out
xchg
aad
insb
aas
out
bound
mov
aaa
inc
les
ret
xor
cmp
stos
addr16
or
clc
inc
add
aad
fadd
sub
pop
mov
jo
pop
cli
jae
fsub
popa
stos
int
into
inc
scas
pop
orb
sbb
fsubrs
xchg
jecxz
mov
xor
xor
push
jecxz
mov
js
and
mov
jb
mov
add
lret
push
call
pushf
cmp
sahf
outsl
subb
add
addr16
insl
mov
fs
inc
mov
sbb
bnd
lock
test
sub
jp
sbb
call
icebp
call
addr16
adc
fsts
adc
out
out
dec
and
mov
arpl
pusha
jnp
jne
pop
ja
and
cmp
xor
rolb
and
xchg
dec
fdivrl
mov
loop
cmc
jle
dec
lcall
and
jo
gs
data16
push
cmpsb
and
pop
pop
std
push
xchg
xchg
test
repz
add
cmp
adc
repnz
mov
mov
mov
mov
push
sub
out
mov
mov
mov
pop
push
mov
aas
outsl
aam
mov
push
outsl
and
and
inc
mov
loope
addr16
xor
roll
scas
mov
mov
out
mov
and
mov
outsl
es
mov
cbtw
inc
push
fidivrl
and
add
mov
mov
gs
icebp
lods
in
xchg
rcl
in
lock
adc
loopne
sub
adc
and
lock
sbb
or
insb
ja
sbb
cmc
mov
mov
cmpsb
fsubs
shrl
xchg
cli
mulps
xor
adc
insl
enter
mov
gs
sbb
insl
orb
xor
xchg
fwait
insb
xor
sub
test
dec
aad
dec
cmp
mov
rorb
jl
stos
xor
lds
popf
or
xor
lds
xor
sahf
pop
test
testl
out
mov
sub
sbb
fiaddl
push
cld
fcomps
arpl
in
mov
jmp
mov
insl
xor
and
ficomps
adc
imul
push
jecxz
fs
addr16
cmpsl
ss
fwait
daa
cmp
outsb
xchg
pop
sub
add
push
cmp
js
jb
cld
stc
insb
mov
int
or
dec
sub
lds
inc
call
ret
adc
adc
cmp
addb
mov
pop
xor
sbb
mov
and
push
and
xor
bound
and
cs
pusha
test
je
int3
fmuls
jp
lret
mov
sub
and
nop
mov
inc
cld
in
cwtl
mov
and
dec
movsl
jbe
push
xor
loop
pop
icebp
xor
and
mov
push
inc
push
ficoml
mov
subl
jmp
nop
repz
fstl
rdtsc
call
out
pop
in
addr16
mov
jle
hlt
into
fisubs
adc
test
nop
xchg
xchg
outsb
into
inc
sbb
mov
das
jne,pt
mov
es
mul
icebp
mov
cltd
cmpl
xchg
or
inc
cmpsl
mov
sbb
and
test
fstpt
icebp
stc
sbb
outsb
mov
out
mov
cmp
out
cld
rcrb
fs
add
adc
and
fcomps
xor
notb
std
fdivrs
mov
mov
or
daa
jl
jl
test
mov
faddl
cmp
das
adc
push
cmp
jbe
js
inc
add
xlat
cld
inc
mov
xchg
xor
into
cmp
movsb
or
xchg
aaa
dec
and
loop
sub
outsb
xchg
push
iret
jl
fiadds
inc
xor
dec
jno
pop
push
scas
push
lret
iret
out
enter
fcomi
pop
pop
popf
xchg
adc
ss
mov
les
arpl
jno
movsl
cli
pop
ss
mov
pop
xchg
out
cmpsl
stos
stos
cmpsb
fmuls
jnp
sub
inc
enter
mov
insb
or
repz
push
bound
lahf
jae
xchg
dec
idivb
pop
or
std
add
ss
dec
jp
add
test
repz
jmp
xor
test
gs
xor
pusha
pushf
mov
dec
orb
and
pop
and
jmp
push
rcl
in
mov
sbb
popf
lds
fldenv
mov
in
xor
bound
out
jl
push
or
ljmp
fs
jp
dec
pop
mov
dec
je
sub
xor
jbe
or
in
loop
push
mov
rolb
filds
jns
ficoms
push
xchg
shl
sti
mov
leave
lods
inc
xchg
cmp
mov
sub
adc
pushf
sarl
push
jmp
mov
repnz
add
incl
push
cmp
les
mov
loope
cmpsl
test
sub
lcall
or
dec
jge
sub
pop
add
sub
xor
inc
rorl
push
stc
pop
cld
cmp
sub
cmp
addr16
std
push
inc
push
scas
jp
jnp
or
icebp
lcall
adc
mov
xchg
insb
fisubl
xor
pop
add
add
dec
aas
lcall
aad
push
xor
test
js
cs
mov
sbb
test
mov
jno
jns
imul
sub
inc
add
cmpsb
push
fsubrl
xlat
mov
sub
rcrb
enter
fldcw
mov
mov
loopne
test
add
pop
and
inc
or
stc
enter
xchg
leave
mov
in
aas
data16
lret
mov
cmp
test
sbb
dec
inc
xchg
leave
mov
cmp
dec
sbb
fs
pop
adc
popf
clc
in
loope
pop
mov
fisubrs
ficoml
pop
hlt
bound
pop
sar
in
inc
add
add
pop
push
test
xorl
push
mov
xor
ret
fninit
sti
je
sub
mov
in
jnp
imul
push
inc
xor
fisubrl
add
repz
enter
mov
jecxz
bound
cmp
outsb
mov
jns
or
outsb
insl
push
in
pop
or
icebp
icebp
loope
test
addr16
movsb
inc
lret
lods
movsb
jb
outsb
inc
add
jmp
je
clc
and
xchg
cwtl
cld
repz
pusha
dec
adc
adc
push
inc
dec
les
insl
out
or
inc
aaa
and
rcll
pop
sbb
ljmp
jne
push
aad
bnd
into
inc
jb
fs
leave
iret
insb
push
int3
dec
mov
pop
out
dec
add
jmp
sti
jbe
mov
aas
jle
sub
out
call
cmpsl
jns
mov
cltd
add
push
stos
pop
cmc
mov
leave
cli
add
mov
test
push
pushf
int3
out
push
cmp
mov
pop
sti
mov
leave
dec
js
arpl
ret
jbe
or
neg
xor
inc
loop
push
push
cmp
and
ljmp
xchg
mov
test
sub
inc
or
mov
dec
inc
jnp
clc
mov
xor
or
fstps
dec
lret
sub
mov
sbb
jbe
pop
cltd
bound
dec
clc
scas
test
sub
jge,pn
subb
mov
mov
sub
push
mov
and
jb
mov
sbb
sub
pushf
and
pushf
mov
jge
aam
add
adc
cmpsb
mov
or
xchg
jo
push
imul
out
push
jb
in
xchg
sub
lds
movsl
loop
and
pop
and
pushf
mov
test
dec
push
repz
or
and
ds
or
xor
lcall
jb
sbb
in
push
jbe
movsl
sahf
jne
mov
data16
or
sar
mov
xorl
out
jmp
pop
aas
in
inc
dec
mov
lock
push
adc
insl
popa
popa
xlat
stos
inc
mov
ss
mov
flds
sahf
push
push
mov
xor
dec
mov
out
adc
in
inc
mov
orl
aad
sbb
xor
out
xchg
and
fcmovu
mov
pop
push
mov
ret
push
scas
jo
outsb
cmp
lahf
ja
hlt
pop
xchg
fwait
scas
mov
pusha
dec
mov
dec
dec
fbld
int
movb
mov
test
call
sbb
xor
fsts
mov
cmp
cltd
shl
cld
pop
jbe
jp
lcall
mov
rcl
mov
imul
test
push
pop
sub
dec
xchg
jne
ljmp
jne
xor
jp
cmp
or
xor
xchg
mov
and
xchg
jb
jne
mov
negb
jecxz
mov
arpl
xchg
jne
in
push
lea
jge
adc
lds
xor
repz
data16
mov
push
aad
aaa
dec
lea
jae
cwtl
or
mov
jbe
lock
xchg
push
lock
mov
push
js
int
aam
insb
xchg
cmp
ret
push
fisttpl
sub
daa
or
mov
insb
jle
movl
cmp
adc
loop
inc
cli
rol
icebp
int3
addr16
lret
add
cmp
cwtl
xchg
dec
inc
mov
lock
aaa
pop
mov
jne
loope
push
jnp
scas
and
dec
pop
lahf
int3
lods
mov
lcall
pop
rcr
sahf
fistl
sahf
xchg
test
insb
mov
les
inc
jbe
fcmovnbe
outsl
pusha
push
add
adc
xchg
icebp
shrb
cmpl
rol
mov
fcoms
repz
jnp
add
mov
push
cmp
clc
xchg
add
mov
mov
push
mov
mov
push
testl
push
xor
push
cli
or
aam
pop
jge
adc
cwtl
testb
or
in
fstpl
jp
int
xchg
and
popl
dec
push
jge
les
or
xor
aaa
jmp
and
jge
mov
adc
dec
loopne
andl
inc
xchg
shlb
jecxz
add
mov
movsb
mov
lret
pusha
push
mov
sbb
mov
xchg
dec
push
mov
shrl
test
jl
inc
or
shlb
xchg
sub
mov
xor
cli
iret
mov
adc
ret
das
loopne
jb
mov
and
pop
nop
add
mov
in
je
fs
add
mov
ret
in
cs
les
xchg
cltd
fiadds
and
adc
sbb
add
inc
inc
adc
shlb
jle
xchg
cmc
cmp
mov
mov
xchg
scas
add
push
fisttpl
aas
fdivrs
jae
decb
loopne
iret
fdivrl
dec
shrb
xchg
inc
push
mov
xor
rep
add
mov
ds
mov
dec
jp
mov
jae
dec
push
mov
pop
sub
sbb
sbb
ljmp
dec
mov
loope
test
xlat
ret
lods
pop
arpl
gs
addl
arpl
pop
aam
mov
and
pop
cmp
in
iret
jl
addr16
sbb
mov
outsb
mov
or
aad
cmpsl
loop
aas
inc
and
fwait
mov
insl
outsl
movsb
sti
and
test
push
scas
sub
push
outsl
add
das
and
mov
dec
and
paddusb
or
cmp
addr16
dec
lds
sub
lods
xchg
fiadds
repz
dec
mov
jne
fs
push
jae
int3
int3
xchg
xlat
sbb
data16
push
xchg
data16
iret
dec
andb
xor
and
lcall
cmp
pop
ds
out
mov
xchg
mov
inc
and
mov
repz
mov
scas
scas
sarb
xchg
les
adc
lret
or
or
sahf
xlat
and
inc
lahf
int
cmp
push
sub
xor
adc
cmpsb
enter
mov
lret
cmp
xor
mov
xchg
sti
mov
lods
imul
xchg
fildll
mov
sub
stos
jge
push
sbb
jle
jmp
cmp
fcoml
mov
dec
add
mov
add
clc
test
or
jns
sub
stos
int3
inc
aaa
jl
sub
inc
mov
adc
mov
fsts
cmpsl
lcall
xlat
bound
movsl
out
imul
in
or
jnp
stos
jge
test
inc
testb
mov
div
insl
add
sti
loop
push
xor
cmp
shll
or
sub
pop
inc
ss
cmpsl
jg
add
sub
xor
cwtl
sub
movlps
xchg
jae
pop
xchg
popf
sub
pop
mov
into
cltd
sti
shl
dec
and
push
lods
ss
mov
pop
mov
jmp
js
sub
xchg
clc
cmp
outsl
sbb
mov
jp
push
arpl
fwait
lock
push
mov
cs
xchg
xchg
and
mov
xor
push
mov
xorb
cli
sbb
movaps
and
cltd
pop
rcll
pop
fadds
rolb
std
or
add
shrl
xchg
dec
add
pop
cltd
loope
out
xchg
xchg
clc
mov
daa
mov
push
or
mov
call
insl
cmc
les
push
fwait
in
jge
outsb
xor
mov
xchg
sbb
shlb
data16
popf
push
xchg
aad
mov
mov
notb
mov
cltd
in
add
xchg
mov
lock
test
dec
and
cmp
repnz
dec
pop
inc
jno
push
ss
sub
int
push
inc
das
mov
stos
cltd
aas
mov
inc
rorb
or
push
rcll
stos
dec
jg
jo
ficoms
sub
xor
pop
jno
int3
push
pop
fstp
repnz
adc
pop
daa
ds
enter
ss
int3
and
xorl
xor
xor
shlb
rcl
inc
fs
loop
pop
push
loope
in
adc
movsl
imull
push
xlat
cmp
ror
nop
addr16
imull
movsb
fwait
jb
das
inc
out
dec
int
jb
push
mov
jecxz
dec
sbb
leave
adc
sbbl
push
inc
xchg
out
push
jnp
jle
test
stos
call
aaa
out
jmp
shrl
das
adc
pop
les
shr
xchg
mov
or
inc
xor
into
sahf
sbb
imul
push
loop
lret
fimull
jl
addr16
movsl
inc
lret
mov
jp
outsl
cmp
rolb
cli
inc
xchg
ss
xchg
jg
cmc
xor
js
mov
jnp
push
insl
sub
pop
and
scas
cmp
pop
daa
insl
jmp
nop
sar
mov
dec
sbb
sub
movsl
sub
cmp
sbb
inc
dec
mov
inc
jg
aad
push
xchg
hlt
mov
mov
push
aas
not
fdivl
inc
and
inc
sbb
xchg
out
in
add
clc
sbb
add
cmp
xorl
xor
inc
data16
and
test
std
add
or
imul
shlb
dec
jp
arpl
into
xchg
sbb
repz
out
idiv
add
aas
call
xchg
aaa
mov
fstpt
push
sbb
repz
cmpsl
repz
add
das
mov
pop
jle
push
filds
push
fsubs
mov
xchg
and
xchg
insl
imul
das
adc
jp
jge
inc
sub
aaa
imul
fnstcw
sub
fildll
xor
dec
sbb
xlat
js
popa
cmc
shl
cmpsl
add
add
mov
pop
mov
xchg
mov
arpl
pop
xchg
inc
fsubrs
ret
fcoml
lret
negb
mov
mov
push
xorl
xor
popfw
scas
in
push
mov
and
sub
pop
scas
add
fcmove
xor
cmp
iret
into
gs
hlt
dec
clc
repnz
jmp
inc
xor
mov
xchg
js
mov
rorb
jge
push
lret
loope
inc
xchg
mov
movsl
sti
inc
mov
cli
xor
push
and
fidivrl
sub
xchg
ss
jmp
adc
int
xor
js
xchg
xor
pop
clc
sbb
jns
adc
sahf
std
cmp
adc
lret
xchg
or
pop
sahf
dec
jp
cli
fbstp
iretw
ja
test
cmp
insl
cld
sbb
pop
pop
xchg
andl
xlat
jle
movsb
scas
inc
jno
push
adc
adc
lahf
popf
dec
movsl
mov
jmp
xchg
std
je
jp
vcvttsd2si
lods
loopne
stos
dec
popa
adc
or
cs
xchg
ljmp
jno
xchg
dec
pop
mov
cmp
mov
mov
xchg
test
es
test
test
mov
lods
push
adc
lret
pop
mov
push
inc
jecxz
pop
aas
cmpl
mov
inc
dec
fdivrs
jp
mov
and
scas
cmp
sub
outsl
fs
push
inc
rep
out
add
xchg
sub
mov
pop
pushf
test
test
or
divb
loope
arpl
js
cmp
popa
jge
mov
inc
xor
adc
nop
mov
fwait
nop
inc
out
rorb
ljmp
or
aad
loopne
inc
mov
in
gs
fprem1
loop
in
and
or
fmuls
xlat
cmp
adc
test
mov
pop
pop
aam
mov
jo
push
dec
bswap
xchg
out
mov
pop
call
pushf
sub
adc
hlt
and
jns
mov
sub
jg
mov
dec
mov
cmp
cmp
lcall
adc
cmp
pop
pminub
popf
ret
jns
add
xchg
std
roll
adc
push
mov
lock
es
out
loopne
fcompl
mov
mov
push
push
xchg
adc
sub
cmpsl
out
rcl
xchg
test
adcl
jne
icebp
mov
inc
jne
popa
push
lods
test
and
and
ret
sub
pusha
pop
cld
cwtl
add
xorl
jmp
ret
mov
mov
out
cld
cmp
pop
mov
bound
pushl
jge
cli
mov
xor
pop
lods
bound
xchg
mov
adc
fildll
cmp
out
lss
pop
jnp
loop
sub
dec
xor
sbbl
adc
in
movsb
js
aas
mov
stc
popa
push
push
mov
shlb
sbb
shll
sbb
inc
jnp
stos
gs
mov
jno
jmp
ja
xchg
mov
fists
stc
cmpsb
mov
js
jnp
mov
rep
cmc
pop
mov
les
dec
push
out
or
or
sbbl
adc
xchg
and
lret
add
repnz
stc
bound
arpl
and
pushf
mov
aaa
in
sub
ds
movl
fstpt
pop
enter
stos
repz
fwait
xchg
mov
shl
es
popf
insb
cmpsb
add
sub
sahf
cmp
hlt
cmp
jmp
aas
jnp
and
roll
dec
daa
movsb
aas
inc
xor
jns
or
or
add
stos
hlt
fs
bnd
pop
dec
push
shll
iret
mov
mov
mull
mov
test
push
es
cli
pop
sbb
inc
stc
lret
ficoms
pop
js
mov
inc
imul
mov
xchg
push
pop
jno
loop
scas
roll
add
fwait
inc
xor
add
imul
pop
xchg
popf
sbb
movsb
aad
insl
add
loope
fnsave
lret
and
push
imulb
outsb
push
mov
xor
cs
dec
dec
lods
in
rorl
push
adcl
mov
dec
mov
cs
adc
aad
inc
push
std
out
loopne
das
lret
out
stos
mov
mov
ficoms
leave
push
repnz
fwait
dec
fldl
sub
jp
into
push
es
cmp
lods
mov
roll
xor
dec
push
push
pop
ret
jno
shrb
bound
xchg
adc
and
movsb
push
bound
push
lret
leave
pop
mov
inc
enter
ss
pop
pop
into
ja
stc
sbb
fwait
jno
daa
icebp
es
mov
incl
mov
nop
xchg
add
jb
push
es
sub
rorl
add
or
js
jle
shl
mov
out
subl
int3
sbb
push
adc
add
and
jno
test
lods
mov
jg
jl
jecxz
jp
lret
adc
cmp
xchg
les
jno
push
sbb
fnsave
sahf
sbb
aas
cmpsl
push
inc
xchg
jno
dec
lcall
jbe
lds
push
leave
push
stc
pop
popa
cmc
cmpsb
mov
jmp
dec
sub
cli
lret
jmp
decl
adc
push
into
in
movsb
mov
loopne
dec
ljmp
sub
jp
sbb
push
arpl
cmp
dec
sti
mov
push
fisttps
pop
xchg
lea
jno
ror
icebp
aas
pop
dec
xchg
jg
sete
sti
scas
mov
sub
rcr
jnp
mov
adc
sahf
xchg
sahf
mov
mov
mov
cmp
dec
lret
dec
mov
jno
jae
inc
sub
es
fbstp
add
cli
movsb
stos
push
or
outsl
addl
mov
push
jl
dec
test
out
test
sti
push
test
in
aas
loopne
loopne
jle
xor
dec
mov
ret
bound
fimull
jp
and
mov
aam
rolb
popf
les
lock
xlat
insl
mov
cmp
push
add
frstor
ds
dec
dec
daa
movsb
mov
mov
cli
pop
aam
pop
or
sub
xlat
sub
sahf
in
stc
int3
jecxz
jno
jb
stc
test
xorb
sti
lret
or
enter
add
adc
pop
std
push
jle
repnz
data16
cmp
aaa
sub
xchg
iret
inc
push
push
or
ret
jge
mov
xchg
mov
test
mov
add
fwait
shrb
lods
pop
cmp
mov
out
add
xchg
ret
pop
pop
js
xchg
movaps
and
jbe
mov
cwtl
ss
mov
std
and
adc
pop
ret
jb
mov
sub
je
scas
std
ss
aaa
add
int3
out
mov
js
icebp
cld
pop
mov
mov
lahf
stc
push
sbb
daa
enter
lahf
pop
scas
das
stc
movsl
xchg
push
mov
in
mov
mov
xchg
icebp
aas
cmp
sarl
cmp
or
out
sbb
add
ja
jge
inc
push
or
jbe
scas
jmp
push
punpckhwd
aaa
mov
and
call
mov
and
ret
lret
mov
mov
push
pop
mov
clc
jmp
push
dec
dec
movsb
scas
jbe
and
jns
dec
pop
adc
sbbb
mov
out
jp
scas
adc
sbb
inc
cwtl
les
cs
or
mov
nop
cs
jecxz
mov
ret
xchg
mov
or
add
mov
daa
xchg
adc
xor
mov
or
xchg
pop
add
es
mov
add
xchg
xchg
adc
push
mov
filds
cli
mov
fstps
cmpsb
es
xchg
pop
cld
addr16
out
stos
mov
and
fcmovu
shrl
cmp
outsb
scas
int
or
jl
or
xchg
out
mov
mov
out
push
mov
mov
add
pop
pushf
mov
out
push
mov
ror
inc
add
lret
mov
dec
or
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
notl
push
sub
push
sub
mov
mov
mov
inc
mov
or
movl
movzbl
adc
movl
adc
mov
add
mov
adcl
sub
adc
mov
xorl
xorl
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
pushl
pushl
call
cmpl
jb
mov
sub
mov
orl
mov
andl
mov
sub
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jb
mov
xorl
orl
mov
andl
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
movl
cmpl
je
cmpl
jbe
jmp
call
mov
dec
mov
jmp
mov
orl
add
mov
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
jmp
mov
mov
mov
neg
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
adcl
movl
subl
lea
movzbl
sbb
mov
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
call
jmp
lea
add
mov
xor
mov
mov
mov
sub
xor
mov
adc
mov
adcl
xor
orl
add
xorl
mov
andl
xor
add
inc
mov
cmpl
jge
jmp
push
push
pushl
call
cmpl
jb
mov
mov
mov
add
movl
cmpl
je
cmpl
ja
jmp
push
call
xor
or
dec
mov
jmp
push
sub
mov
mov
mov
mov
mov
adc
mov
xor
and
mov
add
movl
cmp
movl
je
notl
mov
jmp
mov
xorl
xor
push
add
xor
xor
sub
mov
add
movl
push
adc
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
push
push
pushl
call
jmp
mov
xor
subl
xor
movl
cmp
movl
jne
movl
cmp
jne
push
movl
jmp
mov
xor
adcl
add
subl
xor
add
movl
adc
subl
xor
orl
xor
movl
cmp
movl
jne
cmp
movl
jne
addl
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
call
xor
xor
dec
mov
jmp
xor
add
mov
subl
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
jmp
mov
movl
xor
add
adcl
imul
mov
orl
xor
add
movl
cmp
mov
je
movl
cmpl
je
cmpl
ja
jmp
push
push
call
mov
dec
mov
jmp
mov
orl
add
and
mov
mov
xor
add
imul
sbbl
mov
mov
mov
mov
xor
mov
sub
mov
jmp
mov
xor
mov
mov
mov
xor
mov
sub
mov
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
jg
mov
mov
xor
mov
sub
mov
jmp
mov
xor
add
add
mov
mov
mov
xor
add
not
and
mov
movsbl
cltd
add
adc
jmp
pop
push
xchg
dec
add
rorl
stc
addb
sbb
paddq
inc
enter
lcall
mov
in
mov
int
add
mov
inc
or
add
push
cmp
xor
mov
jno
cmp
popf
adc
sub
mov
jae
js
test
cmp
xor
mov
jb
loop
xchg
sbb
pop
xor
sbb
or
adc
push
adcl
add
sub
outsb
cmp
test
mul
mov
ret
ja
add
mov
xchg
fistpll
xchg
sub
sub
cmp
shlb
or
mov
inc
lods
xor
pop
ret
dec
jnp
out
and
dec
mov
pusha
pop
adc
and
mov
cmc
push
jp
scas
mov
xor
into
aam
mov
sub
push
in
push
adc
xchg
sub
mov
mov
in
push
add
mov
shll
jmp
mov
nop
lods
je
push
int3
push
or
imul
or
xchg
push
pop
sti
aas
pushf
in
and
add
and
push
mov
push
push
pop
popf
cmpsl
bound
lea
je
insb
cmp
push
stos
insl
int3
sub
pop
jnp
pop
fs
fiaddl
shlb
fcoms
or
xchg
int3
add
cmp
stos
aam
out
add
mov
fs
shrl
pop
clc
das
movsl
sbb
dec
cmp
lret
push
mov
test
insb
inc
sarb
push
dec
popa
jge
and
loop
mov
pop
outsb
cmp
adc
dec
jbe
sbb
call
cwtl
leave
inc
clc
push
es
push
enter
dec
jle
and
aam
inc
sti
out
pop
jge
mov
popa
in
jge
in
xor
mov
mov
jmp
cmp
push
imul
dec
sbb
adc
sub
adc
sbb
js
xchg
xchg
adc
lret
fidivs
inc
out
xchg
mov
fs
mov
sbb
push
mov
sub
xchg
stos
stos
mov
fildll
mov
add
xchg
aam
mov
mov
mov
or
lods
sub
mov
mov
adcl
int3
sbb
ror
adc
packsswb
add
xor
and
mov
mov
insb
mov
cmp
loope
fimull
xchg
or
jae
int
pushf
lret
fldenv
mov
outsb
mov
in
mov
cli
and
insb
jae
lock
pushl
push
and
shlb
jne
add
cs
sub
add
jmp
dec
adc
pop
xchg
push
mov
adc
test
nop
cmp
mov
addr16
or
push
xor
test
aaa
jle
dec
fisttps
sbb
ljmp
js
in
push
jmp
imul
xchg
xchg
mov
mov
lods
mov
adcb
jge
push
sub
jne
add
or
mov
cmp
insl
cmp
inc
sbb
sbb
or
ds
adc
ja
fidivl
cmp
rcrl
pushl
int
mov
aad
adc
dec
dec
pop
push
sub
pop
dec
jnp
xor
jg
or
dec
data16
mov
add
push
mov
popa
or
cmp
or
popf
fistpl
push
in
fsts
mov
lret
fbld
je
jb
daa
pop
das
pop
dec
in
aad
jge
push
aaa
xor
inc
js
dec
pop
xchg
out
test
bnd
shll
pop
pop
and
push
mov
mov
test
cmp
jmp
add
pop
jge
not
cltd
fsub
pusha
fidivrl
out
std
or
mov
jae
jg
iret
dec
aas
fptan
or
fbstp
outsb
loop
or
mov
mov
sbb
shrb
clc
or
nop
push
and
stc
daa
mov
repz
mov
mov
fldt
sbb
jb
frstor
imul
out
fdivl
pop
lcall
roll
xchg
jne
xchg
mov
mov
pop
xchg
xlat
in
insl
sarb
mov
sahf
or
popa
shlb
int
push
addr16
mov
cmp
pop
ffree
cwtl
aas
daa
mov
fprem
dec
lds
sbb
push
and
xor
dec
rol
sbb
imulb
sbbl
ds
std
shrb
pop
lahf
lret
les
test
imul
or
ljmp
dec
lret
sub
lods
xchg
inc
adc
jge
aam
vcvttss2si
push
mov
cmc
xchg
and
fistps
daa
or
inc
mov
push
fmull
adc
xchg
mov
jne
inc
gs
adc
aam
xor
mov
jb
lods
push
hlt
into
inc
or
scas
jg,pn
out
daa
add
sti
fidivrl
push
sbb
mov
loope
jle
adc
pop
sub
inc
and
mov
xor
ficompl
out
cmp
shll
pop
sbb
test
or
adcb
pop
stos
jmp
fwait
jle
xchg
insl
pop
jb
jle
xorb
push
ss
and
dec
imull
add
xlat
xchg
ja
popa
xchg
lret
adc
cli
jns
inc
daa
insb
add
lods
jle
shrl
dec
insb
adc
ljmp
xor
andb
imul
add
ficoml
dec
push
insb
pop
inc
push
pop
inc
hlt
leavew
adc
mov
bound
hlt
inc
sub
fwait
insb
das
xchg
inc
or
jmp
in
mov
and
cmp
inc
jbe
fistps
lea
popa
test
fs
sti
enter
ret
pop
push
test
sbb
aad
sbb
icebp
stos
shll
xchg
gs
or
push
mov
cmc
mov
rorl
out
xor
test
aad
movsl
cmp
ljmp
bnd
mov
xchg
and
rol
mov
xor
test
or
lock
addr16
test
aam
inc
loope
adc
fstpl
cmc
int3
pusha
jmp
or
push
cmp
or
xor
jbe
in
les
push
shl
adc
paddsw
subl
rclb
mov
pop
and
xchg
adc
lods
sbb
jge
adc
sahf
rcrb
pop
and
testl
das
xchg
dec
sub
lret
jbe
das
mov
insb
sbb
fdivl
add
sub
xchg
cmp
sbb
outsb
dec
push
test
inc
jmp
sbb
sbb
scas
xor
stos
shll
inc
and
test
or
rcrb
fistpl
inc
pop
mov
add
int3
je
sbb
cli
loope
loop
push
popf
stos
xor
pusha
cmp
hlt
mov
je
jl
add
es
lret
push
xor
xor
mov
mov
inc
lret
sbb
xchg
jg
repz
cmpsb
dec
negl
cmpsl
mov
mov
loopne
xor
lret
arpl
xchg
lahf
out
mov
push
dec
and
imul
mov
enter
test
jbe
outsl
or
loop
jae
mov
cmp
movsb
inc
shld
roll
scas
sbb
pop
pop
pop
sbb
xor
inc
scas
push
insb
lahf
mov
mov
lods
add
dec
imul
push
sub
out
iret
mov
inc
fcomps
rcl
mov
or
loope
movsl
xor
push
fnsave
lret
rcrb
jb
or
aaa
xchg
push
inc
push
pop
bound
push
mov
sbb
jle
ret
imul
or
icebp
das
rol
rclb
mov
and
dec
scas
fs
lahf
sub
and
ret
sbb
fsubs
ss
mov
sbb
xor
test
jo
in
repnz
xchg
adc
mov
mov
mov
insl
or
out
gs
mov
xchg
loop
dec
insl
ja
inc
ja
jno
dec
or
jle
and
int
ss
cmc
mov
push
inc
movsl
rcrb
adc
mov
xlat
dec
stc
pop
subl
push
push
push
imul
mov
sbb
enter
xlat
mov
cmc
sub
mov
bnd
sti
lcall
stos
mov
sub
push
xlat
lea
and
sbb
popf
or
xor
add
xor
cld
lret
cmp
lret
stos
or
dec
fsubrs
out
xchg
sub
or
xorl
iret
lcall
call
in
sub
sarb
xchg
sub
dec
fwait
popa
add
cwtl
rorl
push
mov
test
pusha
or
cmp
and
and
dec
cmp
jns
shlb
js
dec
jo
ret
xchg
fistps
mov
idivl
or
fcmove
xor
cmp
and
sbb
cmpb
push
xchg
imul
fs
adc
push
mov
lret
ficomps
xchg
push
repnz
fsubs
pop
jnp
jle
lods
loope
push
cwtl
push
jno
jmp
jnp
dec
push
add
or
sub
fiadds
in
movsl
outsl
repnz
cmp
fsts
insb
rclb
test
arpl
loopne
cmp
pushf
mov
add
xchg
ss
sub
notl
and
popl
mov
jb
xor
out
cmc
cmp
call
xor
or
je
adc
pushf
shr
xor
int
jmp
xchg
fildl
jne
cmp
pop
mov
sbb
dec
dec
ret
or
jl
lahf
xor
shll
dec
push
jmp
add
sti
in
xchg
and
dec
add
and
call
adc
out
mov
dec
test
lock
nop
inc
mov
cmp
pushf
in
lds
cwtl
cmpsl
mov
lret
scas
dec
adc
rcr
enter
out
lret
and
xchg
pop
cmp
sbb
test
loopne
cs
testl
jbe
sti
cld
dec
mov
fwait
cmp
push
adc
sbb
and
fcmovnb
les
shrb
mov
data16
das
xor
out
jns
jns
lret
in
jns
and
mov
push
pop
imul
jmp
out
sahf
mov
push
sti
rorb
mov
dec
add
dec
in
das
pop
addr16
or
pop
pop
inc
add
mov
rcll
test
jb
int
mov
fnclex
dec
movb
sbbb
shll
das
cmpsb
lcall
jno
insl
pop
jg
sub
mov
loop
and
inc
inc
pop
enter
in
push
aam
xor
das
scas
adc
push
jg
lret
cli
or
call
xchg
lret
fimull
push
jne
jae
int3
sbbb
sbb
jb
inc
lret
shlb
enter
inc
jp
mov
jg
add
mov
insl
push
mov
push
lods
call
jnp
sub
sbb
lret
mov
mov
xchg
mov
mov
shl
push
ret
inc
insb
call
lea
hlt
pushf
mov
sbb
shrl
cli
aaa
mov
xchg
inc
ret
jo
and
jmp
gs
cs
outsb
push
push
push
xor
rol
jae
adc
mov
inc
sub
jp
rcl
loop
xchg
sbb
add
inc
mov
xchg
xchg
out
pop
cmp
push
inc
cmpsl
in
or
cld
lock
jo
roll
pop
mov
jmp
rcl
mov
sbb
or
bound
mov
pop
mov
xor
inc
push
push
arpl
in
mov
sarl
mov
mov
mov
ja
nop
ret
jo
push
push
mov
mov
pop
and
mov
and
cmpl
loop
decl
push
movsb
xchg
aaa
cli
loope
bound
dec
jp
scas
pop
mov
mov
out
push
outsb
mov
call
dec
adc
sub
xchg
bound
cmp
inc
out
and
in
pop
adc
mov
sbb
je
shl
out
push
cwtl
mov
pop
mov
cmp
jp
aam
add
les
cld
out
in
pop
xor
dec
adc
mov
xchg
rclb
jp
add
getsec
sbb
mov
pop
cwtl
dec
mov
pop
out
pop
std
add
push
int3
out
cltd
addl
mov
enter
inc
mov
mov
and
push
jmp
fwait
popa
pop
mov
into
jge
sub
ficoms
mov
clc
in
les
sbb
loop
inc
out
add
xchg
xchg
cmp
xlat
jg
stos
pop
iret
stos
rcll
xor
aam
clc
test
pop
arpl
mov
jl
push
cli
inc
adc
push
outsl
push
in
je
sbb
pop
cmpsb
lahf
pop
dec
push
adc
or
pushf
inc
es
mov
data16
test
jge
push
ret
push
lock
adc
lahf
stos
fisttpll
int3
stos
mov
mov
xor
stc
or
nop
add
jae
push
adc
sti
mov
pop
adc
jae
adc
int3
movsb
push
mov
addb
aam
ret
lret
addr16
std
jno
mov
jae
push
or
push
pop
sbb
inc
out
andb
gs
sahf
test
push
adc
imul
aad
test
xor
in
sub
or
fisttpl
fstpt
inc
cmp
into
cs
mov
int
movsl
dec
and
and
ss
sbb
jmp
gs
rorl
mov
xor
mov
add
shrb
imul
aaa
addr16
rol
loop
fistpl
push
rorb
aad
fstps
outsb
dec
loope
mov
insb
pop
out
dec
and
jg
sbb
push
adcl
mov
scas
aaa
sbbl
mov
xchg
cmp
mov
in
sbb
cltd
testl
sbb
or
test
sti
dec
jecxz
sub
cmpsl
jl
les
mov
movl
push
sahf
adc
fldenv
mov
pop
mov
scas
mov
sbb
jecxz
and
je
test
xchg
push
xchg
push
inc
adcb
sub
data16
in
mov
sub
scas
aaa
gs
scas
and
out
aas
insl
pop
fcoms
sub
in
insb
leave
dec
lds
call
xchg
mov
fcmovbe
sbb
jl
int
jg
add
adc
and
push
xchg
mov
ds
push
sub
mov
test
loopne
mov
or
sbb
divb
or
imull
or
jb
dec
fistl
repz
outsl
lahf
adc
loope
lds
cltd
sbbb
jne
add
jno
jge
push
loope
js
pop
fwait
sub
sbb
jb
sub
add
iret
imul
add
negl
or
xor
test
mov
jae
jecxz
xchg
repnz
test
push
ja
sahf
cltd
mov
outsb
jg
or
push
dec
xor
inc
gs
mov
pop
cmp
adc
roll
stc
lcall
lret
outsb
call
lock
and
jne
cld
mov
in
cmp
adc
push
inc
xor
add
mov
shl
xor
mul
rdmsr
mov
push
pop
xchg
push
adc
cmpsb
jle
mov
push
movsb
and
mov
fcmovbe
pop
out
fs
movsl
add
cmpsb
dec
inc
test
fwait
dec
mov
imul
add
outsl
aas
jnp
lods
out
mov
cmp
cmpb
mov
xchg
loope
xchg
mov
cs
push
xchg
test
sbb
outsb
int
push
mov
std
test
mov
test
mov
jno
in
xor
mov
ret
xchg
or
or
iret
dec
dec
sahf
in
mov
add
test
mov
pushf
cmp
add
pop
outsl
add
sahf
pop
jle
and
addr16
addb
test
int
sbb
or
in
cs
and
pop
leave
lods
fucomp
pop
mov
inc
adc
xchg
xchg
popa
ds
mov
dec
shrl
out
scas
adc
add
lea
mov
scas
divl
ss
sbb
or
fcomps
adc
out
and
shlb
jno
in
repz
xor
sub
arpl
in
pop
lods
push
int3
mov
rcr
mov
bound
mov
das
mov
inc
inc
imull
cmpsl
rclb
jl
sub
xchg
repnz
clc
stc
leave
cmp
fistpl
fldl
pop
test
pop
add
cs
pop
insl
mov
adcl
dec
and
mov
shlb
jb
outsl
xchg
es
xchg
fnsave
sbb
cltd
jg
cmp
inc
push
xchg
pushf
mov
ja
inc
arpl
cmpsb
xor
sub
or
inc
je
push
popf
cmp
add
adc
sub
pop
jge
scas
xchg
sbb
xchg
xlat
push
mov
gs
in
aas
mov
daa
into
mov
loope
inc
xchg
popf
mov
adc
mov
lds
les
mov
mov
orb
xchg
mulb
test
xor
test
divps
in
aam
pop
popa
add
mov
sarb
sbb
mov
int3
loopne
lds
popf
cmc
mov
xchg
mov
and
test
fsts
inc
add
sub
push
repnz
xor
loopne
cmovl
loopne
sar
pop
gs
lahf
in
cmc
sti
outsb
or
pusha
js
sahf
mov
addr16
popf
outsw
adc
add
aad
mov
xchg
jae
cwtl
adc
mov
mov
clc
arpl
jns
cmp
mov
lcall
adcb
std
or
arpl
stc
or
xor
push
xchg
loopne
in
arpl
std
mov
xchg
ja
cmp
or
inc
mov
cli
xchg
popa
jbe
push
out
and
xor
mov
mov
add
movsl
add
mov
cmp
cli
xor
test
pop
dec
les
pop
cwtl
xor
push
xlat
fisubrl
movsl
mov
lds
cmp
mov
xor
aad
stos
add
dec
fwait
loopne
aaa
in
jl
fcomp
cld
or
or
int
pop
mov
cmp
faddl
xchg
aaa
movsl
das
pop
addr16
mov
pop
shl
insl
cltd
in
adc
lret
and
jnp
cs
inc
loopne
aaa
push
xchg
push
or
mov
loope
lea
fs
or
ret
xchg
xor
popf
clc
pop
mov
pop
js
sub
mov
cs
mov
cs
mov
adc
adc
fadd
sar
das
pop
mov
fiadds
mov
push
fwait
subl
push
xchg
sti
cmpsb
push
loope
xor
xchg
inc
repz
xor
push
lds
mov
mov
push
inc
push
xor
test
out
stc
sbb
push
sub
int3
gs
test
mov
cmp
insl
loopne
clc
push
jo
fcompl
mov
and
mov
movsl
sbb
mov
add
jmp
lea
ret
fisubl
adc
jge
cmp
lods
enter
push
sbb
mov
pushf
cmpl
push
out
add
adc
out
insl
ja
jge
jp
fisttpl
sbb
sbb
mov
mov
dec
xor
lahf
push
fstl
outsl
mov
nop
ss
aad
rcl
dec
sub
popa
mov
xor
pop
mov
sub
jnp
sbb
popa
jmp
js
or
add
movb
xor
xchg
insb
lds
imul
xlat
dec
mov
imul
mov
test
sbb
hlt
cmc
pop
enter
mov
stos
push
sbb
enter
sub
mov
mov
cmp
stc
push
out
ja
ljmp
adc
jge
loope
jae
push
jo
mov
sub
sub
and
gs
les
cmp
sub
mov
jl
pop
dec
fldt
cmc
jbe
lret
out
movsl
push
mov
cmp
test
jne
mov
out
in
xchg
cmp
adcl
out
xor
cld
pmovmskb
mov
in
mov
adc
fcomip
out
icebp
loopne
pop
push
or
lret
aam
inc
std
jmp
test
or
sub
movsb
dec
mov
pusha
ljmp
inc
out
imul
ja
add
fldt
sahf
mov
cmp
imul
ret
lock
aam
pusha
lock
cld
int
mov
divl
jbe
mov
aaa
cs
cmp
imulb
inc
js
ds
adc
or
mov
imul
mov
push
sbb
lahf
sbb
in
ds
xchg
add
cli
push
mov
enter
std
mov
clc
mov
es
lods
mov
inc
cli
test
inc
mov
mov
arpl
dec
pop
xchg
out
sbb
arpl
inc
jg
mov
out
push
sbb
stos
and
mov
incb
push
sbb
cs
stos
sbb
mov
add
outsb
stos
ror
push
jmp
decl
pop
repnz
in
mov
jecxz
and
cmp
cmpsb
mov
add
mov
dec
jmp
lods
xchg
inc
in
or
mov
ret
inc
cmp
sub
andb
push
scas
mov
repnz
sbb
xchg
pop
mov
ljmp
popf
jo
push
into
add
test
xor
sub
dec
jmp
xchg
into
fstpt
adc
bswap
xorb
ja
lea
mov
push
adc
sti
add
inc
loope
mov
mov
fwait
pop
jmp
ret
data16
add
cltd
jmp
xor
lds
xchg
jl
fwait
push
cmp
jns
mov
and
add
dec
test
repnz
adc
scas
jg
mov
and
pop
inc
sbb
pop
cmpsb
jl
push
shl
stc
std
mov
push
repz
inc
rorl
sub
jp
lahf
mov
xchg
ret
dec
jge
lret
mov
bound
aad
or
push
add
cmpsl
arpl
pop
sbb
in
xor
das
mov
mov
cmp
shrb
jecxz
mov
imulb
mov
push
mov
in
test
xor
sub
pop
rclb
pop
pop
ja
ss
mov
inc
lods
clc
movsb
arpl
pop
mov
repz
mov
and
ror
cmc
test
cmpsl
mov
adc
arpl
inc
mov
dec
dec
nop
xchg
mov
cmp
push
jge
sahf
mov
cs
icebp
out
mov
jns
pop
xchg
or
push
or
dec
imul
inc
mov
adc
mov
push
pop
into
dec
int3
loope
pop
or
pop
rclb
jae
outsb
incb
dec
adc
inc
loopne
ss
xor
mov
in
call
cwtl
cs
jg
test
dec
mov
sbb
je
dec
mov
push
nop
dec
pop
lahf
ret
xchg
js
sub
imul
adc
aaa
mov
ss
rcll
fadd
xlat
push
inc
jp
sbb
popa
adcl
out
nop
in
aam
loopne
xor
ljmp
daa
out
jge
add
inc
sbb
cli
and
outsl
fdiv
or
sbb
dec
mov
jg
mov
cmpsb
ss
pop
sub
mov
call
js
out
and
pop
aaa
sbb
sub
mov
bound
sbb
rcpps
xchg
jp
test
lods
mov
xchg
inc
bound
xor
imul
std
or
cld
stc
xor
imulb
xchg
out
dec
iret
xchg
push
mov
rorl
mov
lock
out
inc
out
pop
push
dec
dec
andb
data16
add
out
mov
fstps
out
sub
pop
addb
ja
cmpsl
shll
jb
icebp
push
fsubrs
dec
out
cmc
negl
mov
ficompl
or
xor
mov
mov
inc
cmp
pop
xor
xchg
mov
mov
or
out
jns
mov
mov
and
xchg
push
insb
gs
mov
mov
inc
mov
mov
push
push
aad
adc
cld
and
ret
xlat
dec
test
xlat
xchg
inc
test
cld
xchg
mov
lret
in
xchg
stos
mov
push
orl
adc
or
mov
loop
cmp
cmp
outsl
jno
cwtl
outsb
push
std
int3
in
mov
mov
imul
cmp
or
mov
pop
in
pop
in
fstl
dec
rcl
rcrl
pop
adc
das
sub
out
mov
adc
sub
xorb
mov
rolb
daa
pop
incb
pushfw
pop
push
sub
add
or
inc
push
lock
pushf
adc
insb
dec
out
xor
fcmovnu
jae
clc
dec
in
pop
push
js
mov
mov
testb
add
mov
dec
adcb
xchg
pop
decl
cmpsl
cmp
int
rcrl
inc
fsubs
roll
push
xchg
mov
cld
xor
nop
cmp
jecxz
ret
sbbl
or
cmp
imul
test
mov
xor
movsl
popf
mov
leave
bound
inc
xor
shll
gs
inc
out
popf
sub
push
popa
pop
out
add
sti
jo
cmpl
call
test
rolb
icebp
stos
movsb
imul
inc
in
imul
test
pop
jb
gs
jle
loopne
outsb
pop
dec
mov
outsl
test
jns
je
lds
jp
sbb
xchg
sbb
pop
mov
pop
mov
push
lods
cmpb
mov
or
pop
jno
inc
cmp
out
aaa
or
inc
mov
cmp
mov
data16
imul
loope
adc
mov
insl
out
dec
lock
fld
mov
xchg
inc
mov
test
jmp
cwtl
std
std
push
xor
shrl
push
lods
dec
pop
int
test
dec
loope
aaa
pop
stc
xchg
arpl
lcall
loope
push
mov
xchg
rcr
dec
sahf
into
data16
pop
stos
or
mov
cwtl
sbb
push
bnd
cli
and
idivb
inc
xor
dec
mov
mov
cmp
bnd
and
dec
mov
push
aaa
aam
lcall
lret
ret
and
cmp
pushf
mov
lock
test
out
push
loope
clc
inc
add
dec
or
ret
or
push
inc
ret
jg
shll
xchg
das
cmp
mov
in
pop
jno
fxch
inc
cmp
out
pop
cmpsl
repnz
dec
sti
xor
xlat
js
std
and
mov
enter
add
lea
mov
adc
xor
mov
sbb
sarb
pop
inc
xchg
jae
sbbb
jbe
inc
outsb
fcoml
and
push
and
scas
scas
test
xchg
std
andl
push
aaa
jg
xchg
outsb
cli
repz
mov
bound
pop
shll
jecxz
or
xchg
lcall
repnz
rclb
inc
adc
cmp
les
and
adc
pop
mov
or
fisubrl
adc
pop
sub
sub
adc
lea
cmpsb
xor
insl
add
sub
aam
cmpsl
enter
push
fiadds
addr16
mov
addr16
or
add
sbb
frstor
into
or
push
and
xlat
mov
fcomip
inc
rol
mov
insb
in
fdivrs
in
sbb
inc
add
add
jge
cmc
gs
mov
mov
orl
jnp
mov
sbb
loopne
ret
loop
scas
push
sub
xchg
pusha
dec
es
sub
dec
add
test
pop
pop
jo
push
mov
fcompl
push
pop
pop
push
shlb
cmp
icebp
shrb
test
in
cmc
repnz
cli
mov
lret
xchg
cmp
aas
or
adc
cmp
push
jmp
ret
lret
or
repz
orl
int
repnz
icebp
xchg
movb
sbb
call
inc
push
stc
out
out
jle
pop
jne
aaa
adc
insb
sbb
and
mov
les
mov
push
and
jne
jno
ja
dec
loope
in
sbb
dec
cmp
popf
orl
pop
cmp
hlt
push
insb
addr16
lods
adc
imul
and
sub
fistpll
jns
push
xor
iret
cmp
xchg
push
out
mov
loop
stc
xor
fcomi
jle
jb
dec
sbb
add
pop
mov
cmpsb
idivl
stos
adc
xor
add
loopne
xor
inc
movb
fistps
js
clc
mov
fmul
push
loope
outsl
pop
jle
scas
jb
out
mov
xchg
pop
out
or
lahf
push
jae
mov
sbbl
xor
ja
or
lahf
ja
sbb
outsb
fwait
mov
adc
int
ljmp
dec
pop
decl
ss
sar
repnz
push
stc
inc
jle
ds
xor
push
movsb
xchg
stos
mov
jns
pushf
xchg
mov
jno
jg
pusha
iret
inc
sub
push
inc
and
out
xor
jbe
es
pusha
fnstsw
lods
nop
pop
ret
mov
insl
jo
or
mov
stos
adc
ret
cmp
in
push
pop
jbe
pop
aad
fdivs
cltd
sbb
xor
pop
mov
or
mov
dec
insl
insl
adc
xor
xor
cmp
jne
cmp
jne
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
je
mov
xor
mov
sub
add
mov
jmp
mov
mov
mov
mov
lea
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
mov
jmp
test
lock
orb
enter
mov
addb
cmpsl
pop
and
pushf
cltd
or
cmp
lds
xchg
or
mov
addb
sbb
sahf
inc
xchg
jecxz
call
inc
fisttpl
pop
dec
fildl
or
lahf
jle
aaa
adc
ret
idiv
jno
inc
inc
call
xor
push
stc
dec
lret
jl
cli
add
sub
int
cmc
ret
lret
sti
mov
fcomps
inc
jbe
cmp
insb
addb
fildll
xchg
shll
into
mov
scas
adcl
lret
adc
test
pushf
shlb
sbbl
dec
in
das
dec
fldenv
into
das
mov
or
mov
js
cli
movsl
sbb
test
hlt
xor
mov
lock
and
or
in
jecxz
cmp
les
dec
add
pop
lret
insl
xor
mov
lea
or
out
lret
enter
rcpps
ss
push
addr16
sub
dec
lods
orl
inc
jecxz
adc
pop
pop
adc
mov
std
or
xor
es
fmull
sbb
into
jge
xor
jbe
xor
mov
test
stc
adc
ret
xchg
inc
fcmove
pop
xchg
adc
jg
jecxz
jmp
mov
outsb
inc
mov
in
xor
ret
pop
data16
pop
std
lock
push
loopne
or
fisttps
test
icebp
mov
pop
dec
popf
or
add
jo
stc
inc
or
ret
mov
lods
sbb
rolb
cmpsb
roll
cmc
outsl
lds
jns
frstor
and
es
add
lret
fildll
xchg
test
mov
out
lcall
aad
or
lods
and
cmpsb
add
jmp
fsubrs
pop
mov
cmpsl
jnp
push
popa
sbb
mov
jae
adc
dec
xchg
mov
xorb
int3
out
mov
add
mov
mov
mov
iret
out
inc
arpl
mov
inc
shrl
ficoml
xchg
xor
sub
xor
inc
movsl
lret
inc
scas
cmpsl
pop
repnz
and
xchg
les
xor
jge
mov
pop
into
std
add
jecxz
push
push
pop
je
pop
mov
inc
rolb
and
stos
arpl
insb
or
pop
and
test
inc
inc
xchg
mov
xchg
outsl
std
mov
and
cmc
rcll
mov
and
pop
pop
ret
repnz
sahf
addr16
movsb
insb
push
jl
sub
sbb
sbb
fwait
pop
aaa
subb
add
out
std
push
jb
cli
xchg
pop
in
mov
nop
cmp
push
inc
loopne
gs
addb
call
add
or
mov
add
jmp
in
push
or
pop
lret
fidivs
push
std
adc
mov
xchg
xchg
dec
ljmp
imul
jbe
test
sbb
jae
clc
int
inc
push
mov
mov
or
js
sysenter
pusha
jae
mov
or
arpl
or
jp
pop
bound
ljmp
test
into
mov
hlt
xor
mov
cmp
sbb
cwtl
dec
out
jp
shld
into
adc
add
pop
ss
inc
inc
jo
sbb
es
pop
imulb
jmp
aam
mov
rcrb
sbb
mov
in
fists
movsl
stc
jo
fcompl
sbb
aam
lock
or
ficoml
xchg
push
pop
pop
sub
jmp
test
mov
xchg
jbe
imul
xchg
jecxz
cs
test
push
xchg
cltd
adc
mov
xchg
sbb
iret
dec
test
mov
lahf
cmc
andl
nop
imul
out
and
repz
dec
or
pop
push
sti
ja
je
outsb
imul
mov
and
or
push
cmpsl
sarb
mov
inc
test
lock
aam
ds
mov
mov
jl
dec
jecxz
outsl
push
mov
mov
in
fbld
sbb
lret
push
fidivl
mov
ds
pusha
inc
lcall
in
movsl
xchg
ficoml
adc
mov
mov
dec
mov
mov
jg
out
dec
scas
and
inc
add
pop
xor
icebp
and
inc
insb
sub
pushf
cs
rcr
arpl
scas
pop
mov
mov
push
mov
aas
movsl
rolb
adc
ljmp
sub
jl
mov
and
ds
pop
decl
pop
jbe
mov
repnz
loope
movsb
inc
adcb
jecxz
dec
sbb
inc
shrl
mov
shll
icebp
mov
jnp
loop
inc
mov
fs
jns,pn
inc
pop
pop
push
xchg
cmc
and
or
push
repnz
mov
les
pusha
mov
jl
add
mov
jae
stos
int
mov
dec
cli
sbb
test
repz
xor
fwait
cltd
adc
sbb
or
test
cmp
stos
adc
clc
mov
fcom
fldl
or
lahf
mov
rcrb
ljmp
loop
cmc
cs
mov
sub
aad
dec
shl
nop
lcall
adc
test
call
in
negl
pop
fidivrs
and
add
push
push
dec
ficoms
mov
xor
sub
cmp
pop
imul
loopne
test
xchg
adc
and
pop
mov
cmp
hlt
adc
or
push
and
or
sbbb
sub
pop
add
xchg
cmpb
add
repnz
orl
addl
xchg
nop
icebp
stos
sub
xchg
jle
inc
mov
xorb
fmulp
ljmp
mov
imul
xlat
or
outsb
sti
testb
in
cmp
scas
jmp
stos
xchg
lret
cmp
xor
add
popa
mov
inc
mov
ret
mov
out
cmp
insb
shll
lods
cmp
stc
dec
shlb
push
mov
jg
mov
jbe
mov
imul
loopne
data16
ds
mov
mov
inc
mov
jb
loop
pop
or
in
cmp
mov
leave
stos
jmp
test
cs
adc
lea
repz
xor
mov
scas
pop
mov
mov
sub
jb
shlb
pushf
dec
nop
pop
pop
rorl
fadd
rcll
adc
mov
or
insl
mov
mov
adc
push
fwait
add
ss
movsl
data16
sar
in
sub
push
rclb
pop
outsl
xchg
cmc
push
pop
push
push
add
mull
cmp
mov
xor
iret
adcb
dec
push
inc
ss
loope
pusha
sbb
enter
mov
push
pop
xchg
data16
add
dec
xchg
addr16
push
mov
popa
jecxz
or
sbb
cmp
xlat
shrl
and
jmp
sub
adc
mov
cs
stos
mov
or
inc
addr16
cli
mov
mov
scas
in
jo
push
sti
push
mov
jl
pop
dec
mov
lods
fwait
push
push
pop
aaa
cltd
push
sbb
jae
or
pop
notb
dec
pop
inc
ljmp
fsubr
jno
adc
outsl
lahf
mov
inc
cmc
lock
fmull
popa
cs
xchg
jg
sub
loop
jnp
mov
movsl
stc
jmp
mov
mov
testb
jo
ja
outsl
imul
stc
push
adc
add
pop
scas
test
mov
mov
add
stos
leave
or
pushf
icebp
loop
pop
inc
cmp
int3
jmp
sub
int3
mov
lcall
gs
test
hlt
inc
dec
sbb
ja
or
xchg
test
or
loopne
dec
push
outsb
inc
out
loopne
mov
arpl
push
in
rolb
in
inc
and
and
cmc
mov
lea
jge
xor
jne
sub
mov
adc
xchg
jnp
pop
ss
enter
shlb
add
cmp
add
jp
icebp
adc
mov
sahf
xor
adc
mov
icebp
inc
push
aas
loop
xor
mov
push
js
jecxz
or
push
push
je
imul
sbb
mov
mov
daa
pop
fdivr
inc
or
mov
dec
rcrb
inc
add
push
inc
fucomp
fwait
sub
leave
das
fisttpll
mov
scas
lods
test
sub
sbb
mov
dec
iret
xor
mov
cli
lods
lret
fdivs
repnz
rolb
sub
pop
sbb
mov
mov
lock
xor
insl
sbb
inc
insl
out
rcrl
aaa
jg
popf
stc
mov
mov
hlt
xchg
pop
cld
cmc
cmp
push
notl
std
iret
mov
or
mov
hlt
xor
aam
cltd
mov
jnp
fnsave
sahf
imul
adc
imulb
imul
mov
test
ret
fsubs
dec
ds
pop
mov
data16
sbb
push
out
jge
ficoms
testb
adc
out
nop
and
stos
pop
xchg
sbb
stos
jle
mov
xor
popa
xchg
movsl
xor
mov
pushf
push
sbb
jmp
inc
cmpsl
push
subl
adc
dec
loop
push
sub
xorb
popf
add
sub
stos
mov
adc
jmp
pop
adc
jge
push
jecxz
or
xchg
lds
or
mov
divl
repz
daa
bound
jmp
pop
addl
out
pslld
imul
fsubrp
pushf
aad
cmp
loop
dec
push
into
fdivp
scas
fucomip
loope
pop
mov
sbb
mov
adc
pop
push
sbb
fwait
repz
jp
into
adc
xchg
lretw
ljmp
add
jle
dec
ja
ret
xchg
fdivrp
ss
int
inc
add
sub
jl
fwait
and
mov
icebp
sub
shlb
push
jbe
pop
inc
lods
dec
jge
push
ljmp
mov
xor
push
and
hlt
xor
jmp
lock
or
loopne
fcompl
insl
or
loope
and
pop
add
xor
ret
mov
dec
outsl
loop
pusha
dec
and
mov
cwtl
fidivrl
mov
ds
enter
xchg
jne
dec
sub
mov
jmp
faddl
inc
nop
popa
xlat
mov
call
nop
call
movsl
xchg
pop
push
into
jp
fstps
mov
icebp
push
or
les
inc
dec
adc
faddl
lock
pop
mov
add
jp
mov
pop
outsb
pusha
jp
jmp
imul
addr16
mov
push
adc
jno
outsb
jne
or
in
push
pop
inc
xor
cmp
jmp
mov
insl
inc
xchg
stc
andl
mov
jo
push
in
fcmove
fcmovnbe
cs
push
mov
jns
jne
clc
addb
inc
or
imulb
push
bt
jmp
rorb
pushf
and
mov
mov
fmuls
push
ret
ds
imul
xchg
mov
insl
icebp
or
add
xchg
cmp
es
push
dec
xchg
mov
add
xor
pop
mov
pop
orl
aas
push
mov
fnsave
lea
and
out
hlt
jle
xor
rcrl
or
push
xchg
lcall
cs
arpl
pop
cmp
jg
arpl
sarl
fs
cmc
jnp
in
lret
repnz
stc
out
sbb
shll
mov
xchg
into
pop
xchg
and
lahf
repnz
lret
mov
jae
add
or
loopne
xchg
jl
or
adc
aas
xorl
inc
cvtps2pd
sbb
aad
mov
pusha
jae
in
fs
int
ss
xor
pop
pop
inc
push
or
and
fmuls
les
in
adc
in
mov
xor
mov
sbb
mov
fbld
pop
inc
mov
rorb
cmp
sub
cmp
xor
fsubr
aaa
mov
xor
mov
in
sbb
cs
gs
scas
outsb
test
cli
notb
ljmp
ret
jnp
ljmp
pop
in
enter
push
pop
xor
sete
mov
stos
xor
pop
mov
dec
mov
xchg
dec
pop
cmp
push
cli
push
push
cmp
cwtl
sub
lods
call
mov
mov
lds
jbe
cs
jnp
mov
icebp
push
test
sbb
or
in
popf
cwtl
push
movsb
or
test
mov
movb
subl
mov
dec
cmp
jmp
pop
mov
in
jmp
sarb
fsubp
push
xchg
jmp
lds
mov
mov
dec
xor
xor
dec
aaa
mov
sar
adc
ja
scas
popa
or
xor
out
jg
xchg
mov
mov
pop
lcall
cmpsb
xor
inc
leave
sbb
and
adc
dec
cmpsl
jo
fwait
jp
jp
jne
ljmp
mov
inc
insb
fmul
enter
aaa
cmpsl
pop
test
jo
xchg
inc
pusha
adc
adc
sbb
sub
lods
push
daa
jno
fidivrs
pusha
mov
add
cmpsb
test
dec
xchg
int
ror
or
dec
fstpl
xchg
cmp
mov
dec
xchg
data16
and
push
mov
and
or
icebp
pop
xchg
jle
addl
outsl
mov
pushl
cmp
pop
mov
xor
mov
mov
ljmp
fs
clc
add
out
cwtl
sbb
cmp
or
push
gs
ds
jecxz
adc
lcall
adc
loopne
inc
enter
xchg
shrb
fs
dec
jbe
inc
mov
xchg
inc
push
insb
mov
ja
mov
push
fdivrp
push
sub
xor
push
cmp
mov
inc
fcompl
pop
fcomps
lcall
test
xchg
push
add
repz
pop
lods
fwait
roll
mov
ret
test
dec
call
pop
movsl
mov
sub
pushf
out
outsl
mov
sbb
pop
cmp
fiadds
mov
loop
nop
inc
pop
pop
fwait
cwtl
xchg
je
inc
pop
pop
popf
jg
and
sub
into
aaa
and
outsl
cmp
sub
sbb
mov
movsl
enter
je
int
fistps
mov
add
int
lret
jp
adc
sub
stos
lods
iret
out
scas
sub
adc
xor
fcomi
test
cmpsl
faddl
push
push
cmpsl
push
cmp
push
add
clc
int3
inc
iret
add
call
nop
push
stc
loopne
jg
and
pop
xlat
cmp
xor
xor
push
insl
es
dec
fcoml
out
xor
xchg
dec
push
sub
and
add
fwait
mov
dec
adc
enter
iret
enter
mov
jb
testb
xchg
xchg
cld
mov
je
sbb
or
jecxz
and
dec
imul
adc
pop
cmc
jo
xchg
sub
adc
xchg
adc
testb
rclb
push
cmpsb
ljmp
adc
into
mov
mov
dec
mov
aad
jmp
inc
mov
jne
add
mov
fidivs
dec
cmp
stos
sbb
arpl
lea
mov
jbe
sahf
add
push
pop
loopne
andl
add
fwait
xchg
xor
es
scas
xor
dec
shlb
loopne
dec
jmp
add
cmp
mov
sti
loop
aam
dec
dec
movsb
jnp
es
lret
in
or
daa
lods
pop
int3
jno
in
dec
or
aas
lret
lcall
add
repnz
mov
pop
cmp
adc
jb
lods
lcall
fbstp
jnp
sti
and
lahf
lahf
aaa
int
imul
aam
xchg
loope
inc
xor
dec
and
outsl
lret
jecxz
jg
leave
inc
testb
cltd
push
or
push
xor
xor
sub
cmp
xchg
xchg
cltd
inc
dec
insl
lcall
pop
dec
adc
repz
ja
xchg
call
repnz
pop
sbb
jg
sbb
jmp
cmp
ja
lds
dec
adc
sbb
xchg
mov
faddl
shrl
je
jbe
cmp
ljmp
test
push
ljmp
popa
mov
cmc
scas
pop
shll
test
ljmp
jg
adc
jb
jb
cmp
xorb
xchg
insb
dec
shlb
clc
cmc
loope
repz
mov
jg
xchg
pop
sub
mov
push
cmpsb
shr
clc
mov
lds
in
xchg
mov
outsb
rcl
mov
push
ja
add
arpl
jl
fs
cmp
fstpt
nop
mov
cmp
outsl
je
aas
loope
scas
mov
rorb
cltd
aad
sub
insb
je
je
arpl
pop
jne
push
adc
cmp
loope
ficomps
sbb
fstpt
mov
in
sarl
mov
shlb
call
add
cmp
out
adc
and
repnz
test
xor
jecxz
lcall
push
int
cmpsb
popa
outsl
xor
fnstsw
xor
je
mov
pop
sub
or
je
inc
push
leave
outsl
add
inc
mov
outsl
dec
not
adc
push
testb
sub
cmp
xchg
les
sub
mov
sub
inc
xchg
test
aam
mov
ljmp
arpl
mov
and
inc
or
mov
std
stos
or
repnz
cmp
cltd
mov
jmp
inc
jle
int
into
push
in
inc
push
std
lret
imul
lret
xchg
push
lock
cld
scas
push
test
and
in
push
mov
push
cmp
xor
loope
scas
cld
es
out
popa
lods
jb
and
cmp
add
xchg
adc
mov
dec
testl
pushf
scas
jno
xlat
lds
fcoml
cwtl
sarb
inc
gs
mov
sub
push
push
xor
in
pop
xor
daa
lahf
mov
sarb
adc
stos
outsb
lcall
rolb
repz
shlb
pop
pop
xchg
cmp
imul
jl
leave
orl
xchg
add
or
push
xor
inc
dec
out
mov
shlb
xor
push
ljmp
sub
jno
jns
jno
jnp
call
pop
push
push
lcall
out
sar
inc
mov
push
ret
mov
jp
push
mov
aaa
out
add
xchg
mov
loopne
shlb
out
test
sub
dec
xor
cmp
mov
bound
sets
out
cmp
mov
mov
push
enter
pop
icebp
nop
stos
xchg
and
lahf
fdivrl
cli
and
inc
scas
xor
pop
lock
or
and
push
aas
ljmp
sarl
inc
addb
outsl
push
cmc
mov
jp
dec
clc
sbb
cmp
sbb
test
icebp
jae
stos
add
mov
loopne
fwait
in
mov
arpl
stc
cld
mov
add
sbb
iret
ss
rcr
in
fldcw
out
push
sbb
mov
ret
cltd
mov
dec
aad
ss
subl
cmpsl
jno
divb
push
dec
dec
icebp
repnz
jle
mov
xchg
pop
add
sub
mov
pop
out
add
adc
push
push
or
je
mov
lods
cmc
stos
jge
jle
nop
or
inc
test
rcrl
fistl
jno
adc
lods
sbb
inc
repz
add
cltd
mov
mov
les
xor
test
pop
jno
fisubs
ja
xor
repz
dec
jb
leave
xchg
test
outsb
push
sub
push
pop
sub
sub
pop
call
inc
test
lea
in
ror
popf
fisubrs
inc
jns
addr16
dec
ja
pusha
adc
out
jle
xor
pushf
mov
and
roll
insl
push
leave
sti
push
pop
sbb
js
mov
inc
xchg
xchg
mov
sbb
push
out
jle
xchg
ffreep
and
or
rorl
mov
cmp
fidivs
sub
outsl
push
xchg
jns
movsl
adc
push
dec
inc
je
imul
inc
and
mov
fs
decb
inc
cmp
mov
aas
xchg
jo
lods
std
adc
orl
fdivs
lea
adc
xchg
ljmp
mov
and
mulb
daa
adc
loope
aam
insl
pop
rol
xchg
out
mov
inc
ss
mov
addr16
sub
mov
xchg
aas
loopne
aam
aas
or
and
js
outsb
add
sahf
push
mov
xor
jo
xchg
addr16
mov
dec
push
xchg
fidivl
xchg
or
nop
shlb
ret
aas
xchg
jo
or
pushf
inc
pop
cwtl
pop
test
outsb
xor
jb
cmp
std
fsts
bound
sub
lahf
or
inc
cmpsl
mov
sub
aas
xchg
aaa
icebp
adc
sub
les
jno
out
pop
xchg
pushf
dec
xchg
sub
sarb
movsl
subl
push
xor
cmp
fcmove
imul
push
push
lods
jnp
sbb
sub
push
mov
cmp
and
into
jmp
cmp
cwtl
fld
imulb
fmuls
sbb
push
jp
cld
sub
ljmp
sub
xorb
das
cmp
cli
repnz
shlb
mov
or
je
enter
icebp
cmpsl
inc
outsl
xchg
movsb
jge
mov
out
pop
xor
dec
push
sub
arpl
mov
addr16
or
jl
mov
dec
cmp
fisubs
je
cmpsl
pop
xchg
pop
cmpsb
push
and
xor
pop
popf
ds
inc
adc
mov
mov
mov
add
sbb
nop
xor
test
rcr
mov
inc
mov
add
push
iret
movsl
mov
fwait
jb
pop
sbb
pop
lahf
bound
fadds
adc
dec
sbbb
enter
insl
pop
and
in
dec
xlat
adc
fsubrl
adc
cld
sbb
int
push
fbstp
inc
pusha
aaa
mov
fmull
cmpsl
call
sbb
mov
je
xlat
mov
shlb
jae
inc
stc
insb
jb
outsl
aam
mov
arpl
jmp
adc
push
adc
mov
mov
sub
mov
push
insl
cli
xlat
push
add
cwtl
cmpsb
and
add
call
mov
cwtl
stc
jmp
mov
inc
jecxz
in
cmpsl
icebp
addr16
push
popf
adc
pop
dec
shld
pop
lahf
xchg
lds
icebp
fldenv
in
dec
lods
scas
cmp
cld
popa
push
add
cmpsb
push
adc
clc
cld
cmpsb
pushf
fists
xchg
and
shrb
movsb
cmpsl
and
xor
fwait
orb
pop
inc
cmpsb
jecxz
inc
mov
inc
dec
fistps
mov
js
pop
inc
add
mov
jle
in
mov
push
cmpsl
es
jmp
nop
dec
mov
mov
adc
and
lahf
into
pcmpeqd
aaa
icebp
push
mov
mov
dec
dec
cmc
push
xchg
aad
or
mov
imul
aad
insl
or
jnp
fucom
aam
jbe
mov
lahf
jne
add
inc
sub
mov
dec
xor
repnz
mov
push
daa
jl
ja
aam
xchg
inc
mov
mov
push
ficomps
out
ret
icebp
sub
adc
inc
shll
ljmp
sbb
pusha
and
cmp
dec
test
xchg
daa
imul
dec
mov
jmp
pusha
rol
shlb
inc
test
lock
out
ds
push
ja
pop
icebp
mov
xchg
push
rcl
pop
xchg
sbb
mov
adc
sbbb
sub
jecxz
or
je
xchg
testb
push
mov
adc
scas
push
in
add
mov
imul
mov
xchg
psllq
cmp
in
pop
jno
rcrb
dec
out
shlb
mov
sbb
dec
rolb
nopl
push
push
stos
mov
inc
insb
dec
aaa
shll
pop
adc
call
or
aad
pop
out
push
test
inc
sbb
test
dec
das
mov
test
jg
or
imul
orb
out
add
call
mov
stc
dec
mov
mov
jae
jecxz
dec
repnz
fldl
xchg
pop
xlat
popf
push
je
and
pop
in
stc
cld
dec
inc
loop
add
jo
push
mov
xchg
push
hlt
ret
jg
xchg
aas
ss
cmp
mov
repnz
mov
ret
inc
push
sbb
cld
adc
and
lea
xchg
lret
es
das
xchg
icebp
mov
jg
cmp
das
sub
lahf
in
mov
into
dec
pop
mov
sti
es
fisttps
adc
stos
or
lds
mov
cmp
pop
jno
or
js
cmp
adc
jno
sbb
sti
pop
and
insb
mov
add
mov
cmp
xor
es
js
imul
xchg
stc
jecxz
repnz
xchg
sub
nop
xor
out
add
shr
mov
cmp
inc
imul
jns
sti
iret
out
xchg
pop
imul
mov
and
faddl
mov
cli
rcll
xor
mov
mov
pop
mov
inc
scas
and
sbb
popf
jns
mov
stc
inc
and
xor
sub
fdivr
repz
sub
mov
cltd
xchg
out
mov
cmp
push
inc
sub
jbe
dec
icebp
in
jno
inc
nop
fucomi
xchg
lea
leave
sbb
cmc
lods
fwait
dec
pop
loop
xchg
adc
fildl
ljmp
jae
test
sub
lcall
stos
cs
xor
fidivrs
or
push
cmp
dec
and
and
cmpsl
or
cmpsl
cli
dec
push
jno
div
mov
jl
xchg
outsb
xchg
test
push
lods
cmp
lret
and
lret
mov
cli
adc
imul
je
insl
nop
insb
in
push
or
jns
scas
repz
pop
fucomp
jnp
scas
jns
jp
mov
sahf
into
fstpt
sub
jl
sub
and
pop
aad
addl
xor
addr16
repnz
cmc
mov
cmp
ret
xchg
sub
lock
pop
test
pop
ret
inc
adc
adcb
call
sbb
clc
loop
jbe
lret
cmp
fs
mov
data16
or
push
inc
push
cmp
fadds
xor
and
lret
out
int3
lret
cmp
pop
int3
pop
pop
add
or
movsb
jnp
pushl
push
jg
sub
loopne
fidivl
repz
es
cmp
mov
cmpl
test
std
add
cmp
icebp
cs
xchg
pop
or
jl
add
sbb
bound
mov
movsb
push
jg
or
mov
ret
mov
or
inc
and
test
popf
bound
test
orl
inc
sahf
jg
mov
sbb
adc
sti
cltd
loopne
mov
mov
push
ret
cltd
pop
pusha
push
gs
sub
ljmp
mov
icebp
xchg
xor
push
mov
pop
repz
sub
out
fisubl
stc
movsb
imull
cmp
sub
xchg
leave
pop
bound
cmp
sbb
mov
pop
dec
in
cld
pushf
push
lds
loope
xchg
dec
movsb
lahf
dec
cmp
fldcw
jae
lods
lock
push
xor
cmpsb
and
outsb
mov
pop
xor
jno
or
mov
jbe
lea
pushf
divb
call
iret
sub
cltd
jne
pop
add
lods
jl
repz
xor
xor
pusha
int3
inc
in
ret
mov
push
int
in
or
pusha
push
mov
ljmp
popa
cmc
add
xchg
adc
adc
andb
shlb
xor
fnstcw
enter
loopne
mov
push
inc
cmp
jge
out
sbb
mov
pop
xorb
add
icebp
sbbl
outsb
mov
iret
popf
pusha
fdivrl
mov
pop
mov
or
cmp
repnz
dec
add
popf
mov
outsb
mov
adc
sub
shll
daa
popa
add
ret
lods
mov
mov
dec
iret
lods
movsl
or
xchg
jae
mov
fsubs
jbe
sub
or
aad
fcmovne
lods
mov
and
loope
filds
mov
jmp
addr16
insl
outsb
fstpt
inc
test
inc
xchg
dec
dec
or
in
lods
push
out
andb
inc
jecxz
xchg
cli
add
ret
popf
add
out
inc
adc
push
lahf
push
jns
dec
scas
mov
sub
andb
leave
inc
divl
push
sub
test
daa
loopne
xor
sar
leave
popa
xor
fisttpll
sub
sbb
pop
push
stos
popf
inc
or
dec
dec
pusha
jns
bound
xor
lods
mov
xlat
or
adc
and
clc
mov
adc
jecxz
dec
xchg
pop
hlt
das
out
jmp
jecxz
leave
scas
push
rcrb
shrl
jnp
sub
and
enter
and
adc
pop
cmp
enter
in
mov
lock
or
scas
xchg
repz
sti
mov
push
mov
mov
cli
dec
jns
pushf
jle
out
jmp
mov
sbb
fs
int
mov
shll
pop
xchg
inc
or
addr16
push
adc
adc
stos
xchg
and
push
mov
pop
dec
ja
outsl
xlat
outsb
jno
popf
xchg
sbb
fs
repz
imul
in
jge
aaa
xchg
xchg
push
or
gs
pop
jmp
xor
pop
jne
sub
es
mov
sbbb
jae
std
mov
jo
add
enter
mov
pop
xor
loope
push
jb
mov
scas
cwtl
adc
push
in
test
inc
in
popl
bound
jg
or
shll
lcall
aaa
in
aas
add
in
xchg
scas
mov
leave
sbb
inc
in
mov
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
orl
sub
sbbl
push
push
push
andl
push
orl
push
orl
call
subl
mov
lea
push
subl
push
movl
call
cmp
je
xorl
xor
jmp
mov
xorl
push
lea
push
push
push
subl
push
adcl
call
imul
cmp
movl
jne
orl
lea
andl
push
addl
push
andl
call
cmp
jne
addl
movl
or
mov
movl
cmpl
je
cmpl
jge
jmp
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
addl
movl
mov
or
lea
mov
xor
lea
sbb
mov
or
mov
movl
cmpl
je
cmpl
jl
jmp
push
call
xor
add
dec
mov
jmp
mov
mov
mov
mov
mov
sbb
xor
adcl
mov
addl
add
notl
mov
movl
mov
cmp
movl
jne
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jl
jmp
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
mov
adcl
xor
subl
add
addl
mov
mov
xor
notl
add
sbbl
mov
mov
sbbl
xor
subl
add
mov
andl
xor
xor
inc
mov
cmpl
jb
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xorl
mov
addl
mov
mov
mov
mov
addl
mov
orl
mov
mov
decl
mov
andl
xor
add
inc
mov
cmpl
jge
jmp
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
movl
sbb
mov
xor
xorl
add
jmp
lea
subl
push
addl
push
addl
call
movl
cmp
jne
push
lea
addl
push
adcl
push
push
orl
push
call
imul
movl
cmp
movl
jne
sbbl
lea
push
push
sbbl
call
movl
cmp
jne
mov
xor
mov
sbbl
xor
sbbl
lea
incl
push
add
mov
xor
lea
xorl
push
movl
mov
xorl
pushl
adcl
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
adc
xor
and
lea
mov
neg
mov
orl
xor
orl
xor
xorl
add
mov
addl
xor
movl
lea
movl
mov
cmp
jbe
xor
or
or
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
push
call
cmpl
jb
mov
mov
mov
movl
cmpl
je
cmpl
ja
jmp
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
movzbl
adc
mov
subl
sub
andl
xor
mov
lea
mov
xorl
lea
subl
mov
lea
subl
push
addl
push
call
movl
cmp
movl
jne
push
lea
xorl
push
push
adcl
push
push
call
imul
cmp
jne
lea
push
push
subl
call
movl
cmp
movl
jne
lea
addl
push
negl
push
addl
call
movl
cmp
movl
jne
xorl
push
orl
lea
andl
push
subl
push
adcl
push
xorl
push
orl
call
imul
movl
cmp
jne
orl
lea
push
subl
push
notl
call
movl
cmp
movl
jne
lea
push
subl
push
subl
call
movl
cmp
jne
addl
push
lea
push
sbbl
push
push
push
call
subl
imul
movl
cmp
jne
addl
lea
orl
push
push
andl
call
movl
cmp
movl
jne
andl
lea
adcl
push
orl
push
sbbl
call
movl
cmp
movl
jne
xorl
push
lea
orl
push
push
push
subl
push
call
imul
movl
cmp
movl
jne
addl
lea
orl
push
andl
push
andl
call
cmp
jne
orl
lea
subl
push
xorl
push
addl
call
movl
cmp
movl
jne
adcl
push
xorl
lea
xorl
push
adcl
push
push
sbbl
push
adcl
call
imul
cmp
jne
movl
lea
addl
push
notl
push
call
movl
cmp
jne
lea
xorl
push
push
addl
call
movl
cmp
movl
jne
push
lea
adcl
push
xorl
push
adcl
push
xorl
push
call
adcl
imul
movl
cmp
jne
lea
xorl
push
push
orl
call
movl
cmp
jne
addl
lea
movl
push
push
adcl
call
movl
cmp
jne
andl
push
lea
push
push
subl
push
sbbl
push
call
xorl
imul
movl
cmp
movl
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
lea
movl
push
movl
movl
push
movl
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
sub
mov
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
or
mov
push
movl
cmpl
je
cmpl
ja
jmp
push
pushl
call
mov
dec
mov
jmp
mov
xor
mov
push
mov
add
cmp
movl
je
movzwl
adc
mov
mov
incl
xor
andl
xor
add
addl
add
movl
adc
orl
xor
adcl
mov
movl
cmpl
je
cmpl
jge
jmp
push
call
cmpl
jne
xor
add
dec
mov
xor
xor
dec
mov
jmp
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
jmp
sbb
cmp
xchg
xchg
dec
push
daa
cli
mov
addl
addl
push
jne
xchg
pop
sbb
inc
mull
ficompl
lock
aaa
fsubs
aaa
leave
or
call
fwait
pop
aaa
lods
mov
pop
push
repnz
imul
or
pop
leave
mov
dec
out
xor
in
mov
sahf
shl
shll
imul
adc
cmp
mov
sahf
pop
mov
popf
adc
cmp
fs
jns
mov
xlat
aaa
leave
pop
mov
insb
adcb
mov
pop
shrb
daa
pushf
sahf
mov
or
rcl
pop
je
sahf
and
sahf
int
mov
push
pop
fs
add
nop
mov
mov
inc
push
push
jg
adc
dec
fnstsw
jb
movsb
in
out
repnz
ja
or
xchg
dec
pusha
fimull
out
pop
dec
adc
pushf
int
popf
bound
inc
jmp
sahf
icebp
ret
orl
shll
sub
sbb
imul
lods
xchg
xchg
jae
mov
xchg
fisubl
mov
lods
call
and
cmp
std
pushf
out
adc
mov
mov
mov
pop
jae
shrd
lret
pop
scas
lods
push
aaa
sbb
adcb
nop
jnp
pop
fildl
cmp
xorb
push
ljmp
pop
sub
movsb
inc
push
jmp
test
pop
jno
pop
inc
mov
lret
jns
out
scas
xchg
xchg
popa
outsb
stos
jnp
mov
cmp
outsl
and
jmp
jecxz
pop
mov
adc
cmpsb
push
rcrb
ficomps
push
adc
xor
lret
mov
icebp
outsl
ss
adc
push
add
mov
js
ss
pop
fwait
mov
pushf
push
scas
in
dec
xchg
dec
cmpsb
maskmovq
negl
imul
jns
in
add
sbb
repz
mov
iret
pop
mov
pop
es
cwtl
repnz
push
jns
push
test
xor
popa
test
mov
mov
movsb
leave
jne
das
sub
ret
sbb
cmp
inc
xchg
pop
and
mov
lahf
mov
inc
add
sub
xchg
sahf
cmpsb
and
test
pop
out
movb
daa
pop
xor
sbb
add
and
lea
test
adc
das
out
imul
test
insl
pop
add
mov
sub
dec
mov
adc
mov
repz
icebp
jo
adc
cmpps
pop
push
cmp
and
cmpl
icebp
repnz
mov
int3
popf
scas
out
jmp
mov
mov
pop
mov
pop
repz
xor
loope
popl
dec
push
xlat
jnp
jge
out
stos
push
xor
in
icebp
sbb
in
mov
mov
or
sub
inc
jne
inc
push
sbb
jb
mov
or
sub
into
in
dec
mov
push
sbb
mov
fistps
and
out
repz
adc
ret
cmpsl
in
push
xor
roll
push
push
xchg
outsl
call
xor
or
test
aad
push
gs
jne
inc
sar
inc
jge
cwtl
or
testb
push
sbb
iret
jecxz
addr16
dec
xor
dec
mov
fistps
mov
sbb
out
sahf
das
and
fstpt
in
xor
sub
sahf
cmp
scas
stos
subb
mov
push
insb
mov
jecxz
mov
ja
je
and
lret
lods
push
scas
xor
jle
mov
mov
push
aad
jbe
dec
rcrl
mov
adcb
xor
jmp
or
jl
stos
imul
aaa
fs
insl
jle
popf
flds
mov
jecxz
dec
gs
bound
push
push
les
ds
andl
bound
dec
je
or
movsl
and
mov
enter
push
fsubl
lods
mov
shrl
andb
inc
fdiv
in
movb
jbe
and
ret
pop
mov
stc
and
pop
fs
jl
in
xchg
mov
dec
jno
push
pop
lret
and
das
pop
fmulp
xor
mov
add
sbb
mov
mov
jmp
dec
cli
iret
test
jns
out
popf
fistpll
ret
xchg
mov
dec
xchg
imull
sub
push
inc
xchg
outsl
jmp
pop
bound
sbb
push
mov
mov
jne
ret
jb
dec
icebp
xchg
inc
jns
aad
inc
mov
pop
iret
mov
mov
cmp
inc
fcomp
jecxz
add
cmpb
jno
sbb
sahf
out
add
pop
xchg
es
cmp
pop
jae
mov
fldl2e
aad
mov
dec
stc
mov
cli
popf
push
and
loope
test
int
scas
inc
xlat
jecxz
mov
mov
into
cltd
lcall
jnp
sbb
ror
in
in
xor
lds
jbe
jg
inc
popf
mov
or
xchg
push
add
mov
xchg
out
mov
push
stos
ljmp
negl
dec
xchg
xor
sbb
jp
jns
cmp
push
test
push
rcrb
mov
adc
push
cmp
mov
lock
dec
ret
xchg
mov
shrb
or
hlt
adc
mov
sub
jae
mov
xor
mov
popf
aad
push
outsl
fldt
inc
sahf
sahf
test
xor
dec
aad
divb
stos
xchg
jnp
fcoms
jbe
lods
mov
ficomps
mov
mov
shl
cmp
xlat
fdivl
mov
jb
inc
sbb
shrb
mov
loop
mov
fwait
insl
push
ficompl
mov
add
into
stos
adc
xchg
sbb
mov
cmp
rcrl
lahf
mov
lods
shll
pop
daa
lods
and
jb
cmp
jne
mov
mov
popf
cltd
int3
lea
pop
stos
push
adc
stc
fisttpl
mov
inc
dec
ficoms
imul
lret
xchg
ljmp
lcall
push
popa
xchg
cmp
movsl
push
jge
leave
lods
cmp
sub
in
pop
jnp
mov
dec
fldenv
mov
bound
sbb
push
add
les
sub
push
or
mov
sbb
insl
and
inc
xchg
in
adc
cmp
pop
sub
popf
mov
pop
mov
in
ja
pop
or
dec
pop
push
icebp
out
lret
push
sub
icebp
dec
mov
push
inc
in
addr16
out
scas
push
cmp
stos
pop
imul
repz
and
mov
xchg
add
mov
mov
js
add
jae
lods
test
dec
jp
scas
popa
mov
stc
jns
mov
in
mov
shlb
xchg
jno
or
sub
push
add
std
xor
pop
fldt
insb
adc
or
sub
mov
jnp
pop
adc
mov
mov
dec
fs
jmp
popf
mov
mov
iret
addr16
scas
xor
jnp
faddl
push
cmp
pop
xchg
mov
push
fdivrl
std
in
insl
test
stos
int
lock
cwtl
mov
nop
pop
jbe
fnstcw
pushf
cmc
das
xchg
push
cmp
and
sahf
pop
pop
add
movsl
cmpsb
repnz
inc
aad
add
xlat
push
add
mov
test
jg
out
ds
in
icebp
lret
cmp
popf
enter
int
iret
mov
sbb
lds
das
push
mov
das
ret
and
lret
jo
xchg
test
hlt
sub
leave
dec
inc
aas
mov
aas
xchg
jo
add
scas
or
out
cld
fsubr
push
mull
push
scas
pusha
inc
movsl
or
dec
cs
repnz
sub
je
xor
jbe
jmp
and
adc
add
xchg
or
sbb
xor
std
insb
stos
cmp
mov
dec
cmp
mov
mov
gs
pop
lret
adc
jmp
mov
push
push
push
add
mov
jp
cltd
loope
inc
mov
sub
adcb
jl
lret
mov
ffree
rcl
rorb
cmc
push
and
adc
shlb
dec
xlat
mov
mov
xor
loop
inc
pop
addb
popf
xchg
jl
stc
or
mov
fbstp
stc
xchg
es
xor
loopne
popa
jne
aas
sbb
mov
cmp
add
imul
aam
jbe
push
aas
mov
sub
mov
jno
bound
inc
inc
and
add
cmp
jae
push
mov
sbb
cmpl
pop
movsl
imul
aam
int3
lcall
and
mov
mov
sbb
leave
test
or
inc
pusha
shlb
fwait
sahf
dec
jmp
loopne
push
gs
ficoms
ds
cmp
nop
sub
push
jg
nop
or
add
mov
jecxz
fstpl
outsl
mov
inc
xchg
pop
repz
repnz
sbb
pop
in
mov
cmp
add
scas
or
arpl
mov
dec
push
fwait
mov
in
outsl
pop
rsm
fldenv
mov
lcall
ja
mov
mov
push
outsb
daa
shr
mov
mov
in
push
jnp
or
and
shlb
xor
roll
pusha
loope
push
mov
es
je
int3
xchg
subl
test
gs
push
movsb
mov
call
jp
div
jg
mov
js
and
push
inc
sti
cmp
lds
in
sti
out
mov
sti
push
push
adc
add
push
pop
gs
dec
sbb
cmp
ss
loope
sbb
data16
pop
sub
xchg
mov
repnz
push
out
rcll
loope
les
adc
cmp
ret
daa
rcrb
stos
or
cmp
pop
lds
js
pop
in
jge
nop
xchg
mov
sbbl
inc
mov
rcll
pop
aam
std
jg
mov
icebp
jle
addr16
rcll
les
aas
mov
dec
mov
ljmp
fwait
addr16
outsl
pop
fistpl
dec
imul
lret
add
push
inc
inc
stos
sub
push
push
push
mov
mov
sbb
orl
insb
cld
sub
mov
stos
mov
jge
mov
sahf
loop
mov
pop
sbb
mov
ljmp
icebp
les
xchg
sbb
pop
push
push
or
lea
imul
push
popf
out
sub
aam
xchg
mov
lea
push
push
adc
in
adc
mov
adc
add
mov
jns
cld
pop
jl
jecxz
out
lret
cmp
repnz
mov
cmp
add
dec
fstpl
and
cmp
xchg
sub
push
push
sbb
aad
sub
call
ss
int3
shll
out
movsl
mov
fsubrl
sub
pop
inc
and
mov
icebp
cmp
ret
fiadds
outsb
jb
cmp
inc
fmul
lds
push
inc
rorl
fld
aas
jo
rcrl
mov
inc
add
sub
pop
add
std
push
jne
aad
pop
jo
leave
sub
fnstcw
dec
mov
mov
rclb
xchg
in
clc
lds
jmp
dec
call
lock
and
jne
enter
dec
hlt
jmp
xchg
cmp
jmp
sub
dec
jp
jne
add
pop
jb
mov
cmp
or
fiadds
sbb
fsubrl
dec
std
xchg
std
inc
mov
ficoms
mov
fs
out
jb
cltd
mov
ja
lods
mov
cmp
int
pop
cmp
js
sbb
inc
mov
dec
xchg
pop
and
aaa
dec
dec
xorb
call
xlat
fs
inc
out
ds
sbb
lock
mov
dec
pop
and
cmp
push
xchg
jbe
cmpsb
fldcw
cwtl
cli
fnstsw
das
leave
mov
mov
fwait
jl
sub
push
mov
insb
ljmp
xor
jae
rolb
mov
jge
arpl
addr16
pusha
pop
or
jno
inc
inc
pop
xchg
or
sub
inc
mov
jg
cmp
jb
sub
insb
mov
aam
jp
ljmp
and
sub
add
fldenv
dec
es
fdivrs
mov
fmull
cmp
je
test
inc
insb
out
test
clc
sahf
add
repz
mov
out
arpl
and
inc
jae
or
or
mov
inc
cmp
mov
mov
inc
imul
ss
cmp
lahf
fdivrp
sbb
pop
in
mov
lahf
adc
mov
push
jle,pn
pop
fidivs
jo
std
into
mov
test
fnstcw
lock
je
scas
je
inc
mov
inc
rclb
test
scas
mov
cmp
popl
or
lret
lds
pop
push
jl
fdivs
int
push
lds
pop
popf
push
inc
cmp
push
mov
adc
or
mov
cwtl
ds
das
mov
xchg
hlt
or
xchg
lds
andb
inc
ror
aaa
add
xlat
addr16
pop
flds
push
pop
cwtl
xchg
out
dec
dec
test
sbb
mov
ret
fdivs
inc
inc
stos
add
aad
dec
mov
dec
sbb
test
int
push
int
imul
xor
mov
push
popa
mov
pop
testb
sbb
ret
add
shrb
push
xor
mov
xchg
fidivrl
sub
pop
add
mov
sub
pop
sbb
xorl
inc
mov
mov
lods
pusha
mov
push
daa
mov
repz
movsb
out
cmp
xchg
push
pop
cmp
xchg
shlb
inc
push
outsb
cltd
sub
xchg
xchg
imul
cmp
xchg
or
pop
adc
jmp
dec
daa
clc
inc
inc
mov
sub
test
cmp
or
sbb
jg
test
and
mov
pop
or
in
iret
push
sbb
jmp
mov
pop
leave
adc
int3
push
fcom
and
aam
push
xor
cltd
enter
or
sbb
pop
loope
es
out
jbe
lret
pop
movsb
iret
xor
lods
je
cmp
pop
out
jl
jp
aas
add
jo
inc
add
xchg
jnp
cwtl
mov
ja
jne
xchg
test
andl
jnp
dec
scas
pop
mov
push
fnstsw
jp
jae
mov
pop
insb
pop
push
pop
add
rorl
call
lods
mov
movsl
jno
icebp
cld
gs
gs
jmp
cmp
pop
xchg
or
sbb
or
fs
jmp
xchg
ds
stos
push
mov
loop
push
daa
dec
movsb
cmp
push
fsubrl
pop
pushf
dec
push
sbb
scas
mov
jne
adc
xor
sbb
push
pop
addr16
cmp
stos
sti
adcl
cmc
pop
jmp
and
push
xchg
incl
stos
loopne
pop
cs
xor
dec
ffreep
mov
movsb
into
or
dec
mov
or
enter
jp
into
sbbb
push
jo
pushl
adc
adc
call
lods
cmp
pop
pop
pop
test
outsb
cs
mov
lds
push
iret
mov
loop
arpl
inc
int
mov
outsb
lock
sbb
mov
mov
push
ljmp
push
jnp
pop
mov
sbb
les
notb
xchg
cltd
leave
jp
jnp
jecxz
pop
adc
xchg
sbb
and
das
clc
push
mov
dec
jae
xchg
sbb
mov
mov
mov
pop
adc
inc
repnz
adc
push
dec
push
mov
cmp
sbb
popa
test
jp
ret
mov
jp
sbb
iret
cmp
adc
xchg
mov
xor
cmp
cmp
mov
or
insb
ss
lods
cmpsl
leave
dec
mov
jge
pop
adc
aam
je
scas
jmp
sti
jle
dec
xor
xchg
jg
mov
int3
cmpsl
stc
dec
out
in
pop
cmp
into
ljmp
stos
and
jg
push
sti
pushf
lock
dec
cmp
push
sbb
xchg
inc
int
cmpxchg
movsb
lahf
pop
das
mov
adc
add
loopne
push
loopne
nop
decb
dec
cwtl
cmc
hlt
inc
mov
popa
mov
mov
mov
jb
cli
inc
or
xchg
pop
test
int
sub
inc
sbb
xchg
or
pop
leave
jl
mov
or
adc
and
mov
les
lods
in
or
in
outsb
jae
gs
leave
push
mov
inc
push
pop
or
fisubrl
or
xor
je
cmp
xor
xchg
lods
jne
movb
and
fistps
push
cmpsb
pop
inc
cwtl
mov
or
push
sub
rolb
in
mov
cli
fildll
or
add
repnz
mov
add
sub
cmc
incb
dec
lds
out
rorl
push
push
cld
loope
push
test
test
repz
ss
sub
inc
scas
mov
add
xor
hlt
and
scas
cld
mov
repz
sbb
fisubrs
fnstenv
loop
push
sub
shrb
dec
dec
cmc
test
test
sub
mov
and
and
cld
lds
leave
cwtl
andl
imull
and
mov
inc
sub
jne
aad
inc
mov
leave
add
push
ja
cmpb
mov
adc
mov
icebp
and
inc
loop
in
xchg
fldcw
clc
lcall
xor
xor
or
xchg
data16
adc
shl
shrl
xchg
hlt
mov
arpl
lock
cmc
mov
adc
dec
sbb
jae
dec
lahf
dec
xchg
cmp
ret
mov
fiadds
mov
dec
cmp
mov
mov
leave
fistl
scas
xchg
mov
push
jp
adc
daa
xor
in
push
fisttpll
loop
test
fsubrs
xchg
lret
int3
gs
xchg
mov
es
pop
mov
or
es
mov
push
das
or
jmp
fistpll
into
xchg
les
cmp
mov
mov
std
and
push
mov
ljmp
sysexit
jl
cwtl
xor
stos
push
test
mov
mov
bound
popa
or
push
jb
cmp
mov
mov
mov
movsl
sub
ljmp
ljmp
and
imul
xchg
sub
mov
mov
addr16
adc
or
fsubp
loop
jge
mov
mov
fucom
in
and
cmp
lea
pop
push
ret
fildl
call
and
xor
test
cmc
rcll
xchg
or
xor
icebp
push
mov
mov
pop
test
rorb
les
ffree
js
mov
out
cmp
mov
sub
int
push
imul
les
push
dec
mov
cmp
mov
jne
ljmp
jmp
push
lahf
imull
or
pop
wbinvd
addr16
mov
test
mov
jl
repz
testb
sub
orb
fmull
sbb
mov
jns
inc
inc
mov
test
mov
scas
dec
or
leave
lcall
mov
cmpl
repnz
icebp
into
arpl
push
test
sarb
lods
mov
jnp
rclb
data16
aas
mov
ss
add
fimull
lods
sub
mov
inc
lret
test
rcrb
jbe
pop
clc
push
push
or
enter
push
push
sub
add
faddp
int
xlat
jg
mov
fcoms
adc
mov
in
inc
insb
mov
xlat
fwait
push
push
sub
dec
inc
cmp
ss
adc
jns
out
orb
and
pop
jl
mov
scas
jne
leave
add
xor
cld
lahf
sub
jnp
stos
loopne
out
push
mov
inc
in
out
lahf
sbb
lahf
stos
pop
lock
idivb
scas
inc
nop
sbb
scas
mov
hlt
in
mov
scas
shll
ja
ljmp
inc
xchg
lcall
pop
sti
inc
dec
ljmp
flds
xor
push
aam
mov
or
imul
icebp
popf
or
or
cmpsl
cmp
int
jp,pn
inc
nop
sbb
add
mov
pop
out
add
mov
push
add
inc
sahf
mov
pop
lods
or
mov
jl
sub
cmc
mov
and
stos
xor
xchg
mov
sub
push
pop
fisttpll
jp
shrb
inc
jne
xor
xchg
out
subb
test
test
roll
pusha
mov
pop
cltd
in
and
sub
shrl
sbb
or
jmp
dec
outsb
mov
call
lret
or
push
fldenv
aaa
xchg
mov
xchg
pop
lea
cs
xchg
in
in
mov
adc
push
mov
push
mov
pop
stos
or
mov
mov
bound
cs
roll
nop
orl
jae
mov
jne
jge
loop
js
push
or
xchg
ja
sbb
push
xor
inc
xor
xchg
insb
movsl
outsl
add
lret
jae
in
mov
mov
aam
not
sbb
cmp
xor
push
mov
arpl
xchg
int
jle
xchg
xchg
mov
push
ds
shlb
or
aad
mov
jle
pop
mov
arpl
xchg
fsubl
adc
cmp
and
cmp
xchg
imul
push
adc
lds
loope
mov
int3
xor
mov
cmp
fs
jo
sbb
xor
sbb
outsb
cmp
inc
stos
cltd
mov
into
nop
fld
inc
push
flds
in
mov
mov
loopne
pop
cltd
add
cmp
std
mov
lret
loop
mov
ror
stc
testb
jmp
enter
jl
mov
xor
stc
aaa
xchg
mov
lods
outsl
adc
imul
add
and
test
ja
push
push
inc
adc
mov
xchg
fsubrp
and
inc
jmp
icebp
push
jae
xor
sub
xchg
cmpsl
popf
jno
cmp
repz
out
scas
jne
push
fsubl
xchg
jmp
popf
lahf
adc
add
into
jl
adc
mov
xor
adc
sahf
stos
jnp
enter
insl
pushf
inc
jb
mulb
sub
or
sbb
xchg
jns
cmpsb
pusha
ljmp
ficompl
mov
scas
out
xchg
jnp
fisttps
aad
dec
push
dec
lods
repz
inc
lods
cmpl
shlb
subb
jne
enter
clc
subl
pop
cmp
lods
lods
or
dec
aad
push
lcall
xchg
or
sub
jecxz
xor
cmp
xorb
pmaxub
test
cmp
mov
jge
arpl
mov
jmp
adc
adc
and
rcll
jno
insb
cmp
sbb
pop
sub
dec
jno
inc
in
sbb
mov
sti
jp
xchg
inc
push
xchg
add
jl
dec
jmp
and
sub
icebp
push
das
jecxz
gs
jo
sub
repz
fs
lods
xchg
out
test
or
mov
cmp
stc
sbb
pop
fcomps
loopne
mov
cmp
pop
mov
cld
mov
cmc
mov
test
mov
popa
xor
push
cli
sbb
sahf
test
bound
sbbb
jp
jns
mov
fldcw
xlat
mov
dec
div
in
dec
fimuls
jnp
iret
sub
mov
outsl
mov
pop
shrb
bound
add
mov
in
je
jno
mov
lahf
data16
push
clc
jnp
mov
jno
loope
cli
sbb
mov
mov
mov
dec
dec
pop
push
in
jg
cld
frstor
jnp
mov
pop
test
les
adc
dec
std
jmp
popf
cli
lods
mov
or
adc
fildll
hlt
fwait
lret
inc
mov
adc
pop
pop
pop
scas
lock
fidivs
mov
cmp
push
fs
and
cli
ds
shlb
mov
ret
xchg
das
icebp
sub
sbb
add
cmp
fdivr
adc
jbe
lcall
nop
sub
in
adc
loopne
jo
or
in
sub
pop
pop
xchg
movl
push
push
mov
out
jle
adc
or
ja
stc
into
inc
rolb
inc
xchg
jmp
inc
lea
fwait
push
pop
sub
dec
mov
adc
push
adc
xor
mov
fsubs
dec
pop
pop
mov
hlt
pop
call
shr
inc
cmp
repz
lahf
rcrl
jecxz
test
dec
dec
mov
cltd
mov
xor
arpl
adc
adc
adc
push
jno
sub
aaa
rorl
mov
inc
add
and
lods
or
add
pop
aaa
cs
mov
push
sbb
mov
rclb
fnstcw
xorl
testl
frstor
jbe
pushl
fs
lahf
adc
xchg
xchg
and
dec
clc
xchg
in
rcll
jnp
or
bound
mov
loop
sbb
inc
lods
out
sbb
xchg
fists
pop
mov
and
xor
shll
mov
icebp
ljmp
push
mov
jmp
pop
lret
sub
pop
rclb
sub
mov
test
ret
mov
aam
pop
xor
imul
sti
pop
loop
cmp
sbb
inc
pop
add
cld
cmp
jns
inc
add
push
pop
mov
xor
jg
xchg
fidivs
adc
iret
xchg
mov
aam
lea
stos
jne
xor
sub
int
fistps
push
dec
stc
push
xchg
std
cmp
jbe
insb
movsb
cmp
and
sbb
dec
mov
testl
imul
pop
ljmp
ss
xor
out
shrl
push
jb
test
xchg
call
xorb
lods
cld
dec
dec
jbe
lods
lret
fidivl
sub
xor
mov
fstpt
sahf
and
movsb
aad
adc
enter
fildll
inc
adc
gs
fildll
nop
cmp
sti
mov
adc
lock
les
inc
icebp
cmp
or
adc
mov
ljmp
stc
jle
push
jg
dec
shlb
mov
addr16
cmp
call
mov
cmpsl
lds
ljmp
mull
lds
ljmp
movl
daa
mov
int
mov
loopne
shl
dec
pop
shrb
or
mov
insb
scas
stc
mov
adcl
fsts
loopne
pushf
aam
and
inc
pop
pop
cmpsb
notb
mov
lea
cwtl
inc
sbb
mov
and
push
jp
sbb
adc
lret
cmp
pop
int3
or
mov
int
push
cmpsb
cmc
inc
xor
ss
push
dec
fistpll
fidivrs
xor
addr16
dec
sub
test
push
lahf
insl
outsb
test
xlat
leave
test
hlt
test
fidivl
leave
adc
fchs
adc
cmpsb
insb
in
movsb
lret
cmp
shrb
stos
or
and
daa
xchg
scas
mov
pop
cltd
mov
mov
inc
cmp
cmp
daa
mov
les
inc
dec
test
sarb
lahf
xchg
xlat
ljmp
xchg
dec
cld
addl
or
push
mov
sbb
movsb
mov
xchg
jl
in
pop
push
push
ljmp
scas
fsubrl
xor
out
rorb
inc
pop
mov
adc
mov
sbb
in
mov
add
aad
mov
js
pop
sub
mov
adc
mov
inc
aaa
inc
cltd
mov
sub
leave
fcomi
loop
or
or
cmpb
pop
fistl
xor
iret
xor
fsubl
addr16
hlt
sub
add
push
xor
xchg
add
lcall
leave
out
jp
nop
mov
xor
std
mov
loope
lods
or
mov
adc
adcl
mov
test
sete
pop
jnp
leave
pop
insb
into
cmp
and
xor
lock
gs
push
sbb
ds
das
adcb
cmc
jns
mov
push
adc
ds
test
push
jae
or
or
inc
pop
popf
movsb
cmp
mov
mov
jbe
push
ret
dec
stos
leave
mov
div
int3
xchg
inc
mov
jae
sub
sub
add
cli
pop
nop
sub
push
in
mov
movsl
fmulp
sub
negl
mov
adc
lret
push
jbe
and
into
popa
cmp
dec
xchg
dec
hlt
sbb
or
mov
jbe
and
push
xor
mov
xchg
xor
stos
cmp
pminsw
sub
mov
mov
dec
insb
js
push
aaa
xor
fxch
repz
mul
ss
test
pop
iret
clc
mov
jmp
idivb
adc
sti
pop
in
add
dec
jb
test
mov
mov
call
mov
jbe
data16
cmpsl
int
or
mov
orl
and
sub
mov
cmp
leave
add
shl
ret
repz
stc
outsb
lret
jno
lcall
scas
in
mov
enter
cwtl
loop
and
push
pop
mov
inc
add
icebp
shl
inc
pop
and
ret
test
in
sub
rcrb
adc
mov
push
jle
sub
idiv
jb
xlat
lahf
dec
push
dec
pop
fsts
es
imulb
or
loope
insb
scas
adc
imull
cmp
cmp
pop
loopne
mov
ss
repz
dec
pushf
fstpt
iret
in
fwait
jne
or
and
add
cs
xchg
shll
loopne
mov
test
lret
push
cmp
jmp
mov
pop
je
push
adc
jne
aas
inc
xlat
and
sbb
sbb
jb
adc
mov
pop
pop
leave
ret
push
mov
push
movl
movl
cmpl
je
cmpl
jb
jmp
push
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
or
movsbl
or
mov
addl
sub
movl
cmpl
je
cmpl
jl
jmp
push
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
xor
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jl
jmp
pushl
call
cmpl
jb
push
mov
mov
mov
sub
sub
mov
andl
movl
sub
push
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
pushl
call
jmp
mov
andl
mov
addl
mov
adc
mov
mov
and
xor
addl
xor
mov
mov
adc
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
push
test
add
add
add
add
add
add
add
push
cmp
add
add
add
inc
push
js
in
mov
cmp
dec
pcmpgtd
add
add
inc
cmp
outsb
outsl
ja
and
pop
inc
imul
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
add
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
inc
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
inc
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
jl
lods
outsl
scas
hlt
add
testl
jbe
xchg
mov
cmpsl
loopne
pop
push
pop
notl
pushf
or
pushf
or
mov
lcall
xchg
pushf
sub
popa
mov
stos
mov
mov
jbe
xchg
mov
pop
pop
cmpsl
jae
pop
clc
push
stc
mov
xchg
cmpsl
test
lret
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
add
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
mov
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
