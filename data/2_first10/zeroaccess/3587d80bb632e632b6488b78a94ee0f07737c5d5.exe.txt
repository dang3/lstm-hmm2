push
mov
sub
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
or
mov
mov
subl
mov
sub
mov
xor
movl
add
movl
sbb
mov
push
movzbl
sbb
mov
push
mov
xor
push
or
mov
add
andl
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
mov
sub
add
movl
movl
movl
orl
movl
mov
subl
xor
add
mov
sbbl
movl
movb
mov
xorl
xor
add
jmp
jb
fsubs
lock
push
in
or
std
loope
jle
jle
jg
jle
xlat
cmp
rol
pop
add
add
rcrb
adc
mov
push
out
mov
es
lods
fiadds
data16
outsl
or
pushf
js
inc
stos
push
sub
mov
stos
push
roll
jmp
mov
dec
out
inc
call
mov
and
jnp
ret
xchg
and
jmp
ret
lock
and
add
adc
xor
or
fisttpll
ds
or
fst
or
pop
fstps
jno
inc
dec
aaa
adc
sarl
dec
call
sub
lods
push
test
jp
jp
mov
stos
cmp
xchg
sti
sbb
xchg
cmp
xlat
std
fcomip
push
out
movsb
xor
xchg
xchg
sahf
call
rcrl
cmc
shl
lea
xchg
mov
mov
pushl
shrl
jge
fcompl
fnsave
inc
pop
inc
sub
and
js
shrw
ljmp
inc
cmp
sub
inc
insl
js
shlb
leave
xlat
push
aaa
bound
mov
jb
sub
mov
pushf
subb
push
jo
cmpsl
pop
adc
lock
or
mov
jg
arpl
inc
adc
mov
loop
add
stos
test
add
push
pusha
mov
jne
into
xlat
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
orl
jmp
dec
push
push
push
cmp
dec
cli
jg
jle
jg
jle
xlat
int3
mov
push
cmp
push
add
movsl
int
or
outsb
mov
iret
outsl
pop
add
xchg
push
aam
ljmp
ja
inc
sub
pusha
dec
xchg
xchg
ds
lds
mov
fadd
cmpsl
jg
incb
dec
popf
sbb
xor
imul
das
gs
xor
fbld
cwtl
and
mov
or
pop
and
mov
cmp
mov
es
sbb
add
jne
cli
test
std
sbb
mov
cmp
stos
fs
shrb
jnp
sub
sub
jmp
ss
cmp
rol
jg
mov
fcompl
fwait
or
aam
lock
mov
xchg
icebp
jle
lock
cmp
push
mov
lcall
mov
std
data16
pop
pop
and
mov
enter
push
fmuls
jb
dec
pop
mov
mov
inc
dec
mov
jle
sti
sarl
inc
jns
sbb
cmc
pop
test
add
pop
stc
add
sub
shll
fidivrl
adc
and
adc
add
jp
sbb
pop
jp
int
or
ds
lret
xor
cmp
mov
and
pop
loope
jno
std
iret
popa
clc
jl
xchg
popf
jg
sub
xor
mov
xor
xor
neg
jmp
cli
fcompl
jno
cmp
xchg
push
jge
jle
jg
jle
scas
push
push
and
movsb
out
pusha
movsb
mov
ret
sub
lds
cwtl
fnstsw
sub
jp
aaa
mov
adc
push
dec
push
mov
icebp
cs
or
pop
jbe
call
jp
std
mov
xchg
insb
or
int
rcll
outsl
sub
adc
icebp
nop
jo
mov
lcall
inc
lret
or
jbe
scas
sahf
mov
xchg
repz
xchg
jae
and
adc
loope
roll
push
mov
loope
jo
mov
aad
sarl
shlb
fildl
sub
pop
xchg
popf
adc
out
sti
test
or
add
cwtl
xchg
or
push
in
sbb
repz
in
das
sub
pop
test
jmp
or
inc
cmpsl
enter
cmp
jae
lods
sarl
shrl
xchg
mov
jne
lret
mov
jecxz
pop
mov
mov
clc
sbb
cmp
or
jge
mov
sbb
dec
pop
imul
dec
or
rclb
clc
add
repz
cmpsb
sbb
inc
lods
mov
xor
and
lock
std
sti
pop
mov
ds
add
and
mov
inc
aaa
or
cmp
shr
mov
lret
push
mov
sti
jbe
lcall
fcompl
jge
xchg
lock
mov
fstpl
mov
mov
xor
sbb
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
xor
sbbl
add
decl
mov
lea
mov
movzwl
and
mov
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
xor
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
jmp
or
out
jecxz
icebp
int
add
cmp
jp
jle
jg
jle
lcall
inc
or
cld
mov
pop
mov
aam
inc
dec
adc
pushf
sub
icebp
inc
sbb
outsl
scas
and
adc
mov
xchg
rolb
cld
jecxz
xlat
dec
cwtl
fimuls
xchg
je
mov
sub
sbb
sbb
xor
cmp
sbb
or
cmp
and
dec
inc
inc
lods
mov
mov
not
inc
xlat
jl
ljmp
pushf
pop
sub
mov
sti
adc
movsb
dec
sbb
jae
sti
and
bound
sub
out
fistps
xor
mov
rcrl
and
or
imul
mov
mov
mov
inc
ss
ljmp
cs
mov
add
insb
jmp
mov
cmp
rcrb
cmp
inc
push
movsb
push
test
adc
cld
es
cmp
mov
xchg
xchg
outsb
sbb
subb
adc
sub
outsl
repz
movsb
es
ljmp
arpl
rol
dec
ficoms
mov
and
call
rcrl
into
sub
xchg
add
xchg
lret
cli
mov
icebp
jbe
cmc
push
sub
and
cmpl
daa
call
inc
mov
inc
test
in
mov
jmp
xchg
mov
push
jo
adc
dec
mov
js
jle
jg
jle
arpl
and
jge
mov
sbb
pop
and
adc
out
xor
inc
mov
or
xchg
in
cmpb
enter
sbb
outsl
and
iret
in
dec
inc
loop
gs
mov
jmp
push
scas
in
mov
mov
sub
cmp
cli
push
sub
int
pop
mov
xchg
cmp
loope
fstp
mov
loopne
cmc
xor
fst
js
fmul
in
pop
mov
or
push
xor
xchg
in
xor
or
dec
test
mov
inc
sbb
mov
inc
sub
sahf
fisttpll
loop
adc
dec
jno
aad
mov
sub
cwtl
adc
aam
push
mov
push
mov
mov
sti
pop
roll
mov
jno
pop
loopne
scas
pusha
sti
movsb
dec
dec
mov
pop
sbb
fadds
mov
xor
cmp
std
adc
mov
test
insb
push
mov
push
cmc
or
cltd
loop
pop
aad
dec
outsb
addr16
mov
jge
bound
shlb
pop
dec
or
pop
xchg
sbb
popa
pop
sub
mov
rorb
repz
in
ret
cmpsl
cmp
das
pop
ret
sbb
cld
mull
inc
mov
dec
clc
xor
add
mov
mov
mov
xor
jmp
pop
xor
mov
mov
mov
lahf
cmc
xchg
cld
dec
xor
mov
jle
jg
jle
ret
xor
imull
es
mov
pop
or
aad
or
sahf
movsl
pushf
andb
movsl
mov
sbb
mov
push
dec
fstps
mov
push
jbe
lods
cli
xchg
icebp
pop
jns
jmp
push
fidivrl
aas
cwtl
push
aad
test
xor
sub
scas
rcl
aam
dec
arpl
stc
mov
cmc
and
jp
mov
or
xchg
add
addb
push
mov
out
js
mov
cwtl
fiaddl
adc
xchg
sti
adc
lret
les
xor
aas
pop
es
int
sbb
xor
mov
fs
sbb
mov
cmovno
outsl
adc
es
adc
lea
lock
mov
inc
out
adc
ficoms
push
xor
out
cld
xchg
mov
loopne
and
ss
xchg
or
jl
mov
cmp
xor
outsb
int3
cmp
imul
ljmp
and
int3
je
pop
call
mov
sarl
stos
and
mov
div
sbb
cmp
popa
stos
dec
and
adc
jge
or
scas
push
add
jge
xchg
mov
popa
loopne
test
or
mov
lret
std
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
jmp
mov
les
loopne
mov
xor
das
push
pop
jle
cli
jg
jle
dec
out
test
or
push
push
push
inc
ret
push
and
ds
add
dec
sti
dec
xchg
mov
sub
dec
orl
add
out
mov
ds
gs
and
lods
mov
pop
ljmp
test
add
jl
clc
cmpsb
cld
sbbl
fsubr
sub
mov
and
insl
mov
or
fs
sbb
sub
inc
iret
arpl
and
push
mov
ja
jmp
pop
sbb
xchg
icebp
out
bound
fcmovbe
mov
aaa
push
xor
scas
jg
push
sub
dec
outsl
rolb
loopne
mov
mov
inc
iret
mov
loopne
add
push
dec
fistl
jno
push
jns
mov
mov
or
inc
mov
cmp
pusha
mov
sbb
call
lcall
sahf
jge
lahf
cmp
loope
hlt
movsl
mov
sbb
test
mov
sbb
ja
sub
xchg
pop
pusha
push
xchg
dec
mov
inc
out
xor
xchg
sub
mov
and
cmp
outsl
xor
or
ja
xchg
add
mov
das
jmp
cld
mov
testl
pushf
je
lea
push
mov
xor
add
jmp
pop
and
aas
jno
imul
xchg
add
jle
jg
jle
cmpsl
mov
jns
push
jne
mov
add
push
adc
lock
or
or
aad
and
cmp
inc
cmpsb
pop
das
mov
fsubp
hlt
and
jle
jg
pop
mov
dec
sub
out
jo
arpl
or
jbe
js
loop
jge
xor
aaa
ret
mov
fdiv
mov
mov
mov
lock
and
mov
in
jo
adc
notl
jb
jl
pop
ljmp
sbb
stos
test
lock
arpl
dec
fdivrp
push
cltd
insb
ret
bound
imul
push
cmpsl
dec
ss
xchg
or
test
mov
push
scas
mov
inc
or
add
dec
fucomip
aas
iret
and
rclb
mov
sub
ljmp
and
xchg
pop
add
and
ds
negl
imul
fucom
inc
punpckhbw
loope
inc
js
movsl
push
dec
pop
repnz
cmpb
or
pop
fbstp
mov
repz
mov
mov
fistpll
mov
loopne
das
andl
push
push
movsb
arpl
ficoms
hlt
inc
or
push
cmp
daa
pop
outsb
mov
push
xor
push
dec
cld
int
pop
lret
fldt
xchg
rorb
pop
xor
inc
mov
jge
push
mov
add
jmp
cmc
dec
and
jno
push
mov
cmp
enter
jle
cli
jg
jle
inc
jnp
in
fadds
ret
shll
inc
push
jb
popl
lret
test
js
sub
int3
repnz
ljmp
pop
iret
push
push
insb
out
in
lods
add
inc
imul
inc
fcmovbe
fiaddl
stos
xlat
mov
repnz
enter
insb
stc
adc
xorb
jmp
pop
jmp
call
js
mov
mov
adc
repnz
test
mov
shlb
adc
pop
cwtl
sbb
faddl
push
insb
aad
xchg
jmp
das
mov
xor
sbb
mov
jg
test
push
decb
mov
orl
in
xor
xchg
stos
ja
clc
scas
sbb
cltd
dec
cmpsb
pushf
ret
in
out
mov
sub
sar
int
xchg
je
pop
orl
out
mov
xchg
add
jo
arpl
ret
mov
jnp
rolb
test
dec
jp
not
sub
xor
rclb
out
cli
test
fiaddl
mov
pop
arpl
nop
shll
lahf
inc
jge
call
push
dec
scas
xor
decb
dec
imull
rclb
xchg
cmp
fildl
sub
loopne
pop
ja
sahf
cmp
imul
push
mov
mov
pushl
call
mov
cmpl
lea
mov
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
jmp
mov
bound
fadds
cld
jno
scas
lcall
jle
push
f2xm1
push
clc
mov
xor
cmp
adc
jmp
cmp
repnz
scas
push
cmp
dec
jns
jmp
js
sub
mov
in
adc
out
pop
add
sarl
data16
pushf
or
icebp
arpl
push
cmpsb
or
jae
jo
cmp
adc
aas
xchg
cli
xchg
lret
adc
mov
mov
cmp
cmp
int3
fnstcw
in
pop
es
cs
les
xchg
jmp
loope
mov
in
lock
mov
sub
inc
or
scas
fs
cmpsl
rcrb
ss
adc
or
sti
xchg
jb,pt
sub
adc
lcall
mov
pop
shrl
test
sub
xlat
das
cmpl
lea
add
sub
push
mov
dec
fsubs
scas
lods
adc
push
or
pop
shlb
cmp
mov
mov
out
aas
arpl
movsb
push
mov
data16
xor
out
adc
int
aas
sbb
orb
cmp
cmc
push
mov
loop
lea
jnp
popa
aaa
aaa
xor
mov
daa
fcompl
stos
jo
pop
imul
test
mov
out
xchg
cmp
xor
and
inc
lock
mov
mov
mov
mov
mov
jmp
push
shlb
push
stos
rol
push
cmp
jle
cli
jg
jle
pop
addl
mov
or
fs
mov
sub
pop
push
xchg
cmpsl
add
and
sub
xor
jae
sub
and
xlat
gs
mov
stc
mov
adc
adc
sti
ja
xor
cld
das
push
dec
sub
imul
add
cwtl
and
fxch
ret
cld
subb
push
cmp
mov
pop
jne
sub
dec
mov
add
jno
vmwrite
mov
dec
lret
int3
filds
jae
xchg
sub
and
xor
ja
stos
dec
xchg
fsubrl
xchg
sub
les
xchg
xchg
inc
cmp
mov
outsl
lods
lret
pop
cmp
mov
insl
scas
jmp
testl
mov
sbb
testl
mov
inc
outsl
sub
pop
enter
mov
mov
mov
dec
dec
and
adc
addr16
mov
inc
clc
fwait
rorb
xlat
adc
cs
sahf
lock
adc
inc
and
dec
inc
test
sub
outsb
add
cmp
push
bound
adc
shlb
dec
iret
xchg
xchg
cli
mov
das
sub
sub
pusha
dec
pop
xchg
sub
in
insb
lea
sub
pop
ljmp
int
and
push
pop
mov
fbstp
movb
add
clc
mov
mov
mov
mov
mov
mov
mov
jmp
les
rorl
or
movsb
jmp
jg
jle
cmp
aaa
xor
dec
aaa
outsb
repnz
add
sarl
mov
test
outsb
sub
jnp
pop
jbe
aad
insl
pushf
pop
pxor
mov
call
imul
int
pusha
pop
insl
imul
sub
call
pop
outsl
cmp
lock
xchg
push
movsb
lods
clc
fnstcw
mov
xchg
mov
loop
aad
popa
iret
sub
fistpl
mov
mov
imul
int3
jbe
mov
ret
push
adc
mov
xchg
mov
loopne
imul
arpl
xorb
scas
movb
rol
sub
dec
ja
mov
adc
adc
mov
jbe
cwtl
xor
dec
sbb
mov
mov
aam
mov
jo
nop
mov
jo
lds
data16
push
cmp
add
addr16
into
into
add
test
sub
jmp
leave
pop
into
add
lahf
shlb
test
adc
mov
cmp
leave
inc
fnstenv
mov
push
cld
sbb
xchg
clc
bswap
loopne
fisubrs
test
bound
repz
sbb
fidivrs
inc
leave
mov
je
rorl
out
repz
add
aam
jle
fnstenv
inc
rorb
adc
test
jmp
inc
push
jnp
or
push
adc
nop
dec
xchg
dec
test
or
jle
jg
jle
xchg
xchg
ja
dec
imul
pop
sub
mov
jg
cld
pop
and
rolb
mov
sti
mov
jns
pop
sub
rcll
sub
daa
js
mov
mov
ljmp
ja
in
mov
mov
and
movsb
jno
shlb
js
dec
sub
test
lcall
xor
int
scas
aas
insl
lret
push
xor
push
cli
inc
inc
push
mov
in
nop
inc
ja
das
or
cmp
shlb
mov
fsubl
lods
cmp
cmpsb
cmc
push
leave
adc
int3
in
das
fistpll
dec
call
adc
out
push
adc
dec
cli
test
jg
push
push
movsl
test
shr
filds
call
cld
ljmp
xchg
xor
mov
jo
scas
mov
int
inc
jmp
jo
cwtl
xchg
pop
jmp
cmp
sbb
inc
add
ljmp
sbb
bnd
jge
loop
xchg
mov
insl
sbb
imul
sub
adc
and
dec
mov
jo
cmp
rolb
fisubl
call
sub
mov
xchg
xor
push
sub
mov
sahf
push
lret
mov
push
cltd
loop
sti
mov
jne
mov
xor
add
jmp
or
lret
jecxz
jecxz
icebp
loop
mov
mov
or
jle
xor
les
sub
push
int3
jle
int
mov
sahf
mov
cmp
arpl
addr16
into
xchg
mov
push
ret
enter
mov
and
cltd
cli
rcl
popa
popf
lock
jo
dec
adc
stc
mov
push
lret
pop
notl
push
in
popf
jg
lea
inc
mov
push
push
gs
xlat
xorb
pop
arpl
push
sbb
aam
shrl
sbb
repz
movsb
fisubl
dec
pushfw
xor
and
icebp
add
sbb
jmp
fisttps
div
fcomps
orb
test
cmp
cmp
pop
das
xchg
cld
jl
shlb
mov
mov
insl
push
or
ss
mov
movsb
xorl
mov
and
and
fs
or
add
or
sub
add
lcall
xlat
pop
cmp
push
pop
xchg
sub
inc
call
inc
sub
hlt
jns
dec
js
clc
stc
pop
pop
adc
ja
and
xor
stos
fmul
mov
pop
out
stc
pop
adc
adc
cmp
xlat
daa
pop
adc
pushf
repz
sub
pop
cmpsl
adc
xchg
and
mov
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
jmp
add
inc
dec
aas
cmp
out
xchg
jg
or
cli
jg
jle
jne
hlt
ja
jmp
adc
mov
js
test
add
std
outsb
cmp
adc
cwtl
dec
mov
jle
es
mov
stc
scas
les
inc
pop
xchg
shll
pop
dec
xchg
or
sub
lahf
jmp
jo
lock
fmuls
cli
sbb
jne
in
cmovb
mov
aaa
lds
mov
aaa
repz
sbb
sbb
mov
into
mov
addl
adcb
scas
out
std
cmp
xchg
or
inc
insb
ret
movups
movsl
cmp
push
lods
push
and
ja
mov
jl
xchg
add
mov
shrl
stos
jo
mov
rcrl
fstpl
pop
push
int3
in
adc
cli
mov
cmpsb
jne
popa
push
hlt
loopne
clc
enter
inc
pop
xor
lahf
call
test
mov
imul
scas
sub
xchg
test
iret
in
arpl
iret
dec
xchg
inc
sbb
addl
lea
test
dec
pop
jl
pop
pop
mov
nop
cmp
out
push
outsb
cli
sub
jge
sahf
aaa
mov
mov
cwtl
pop
and
sahf
inc
leave
out
sbb
jle
filds
icebp
sub
pushf
les
fwait
jle
pop
int3
pop
lret
jle
mov
cmp
jne
inc
cld
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
jmp
jmp
xchg
push
arpl
nop
push
rorb
insb
add
or
cli
jg
jle
pop
jnp
xchg
xchg
mov
and
and
xchg
inc
pushf
lret
es
adc
dec
ret
pop
mov
nop
adc
pop
sahf
movsl
mov
mov
gs
ficoml
cmp
test
call
icebp
stos
pop
mov
lds
test
je
mov
insw
outsl
or
or
insb
sbb
sar
sub
iret
cmp
sbb
jge
jle
add
bound
js
mov
jecxz
xor
les
adc
push
arpl
lea
aas
imul
les
pop
or
dec
mov
sbb
xor
movsb
or
lret
pop
mov
mov
sub
sub
dec
int3
lock
push
je
xor
lahf
daa
loop
xor
pop
jl
es
pusha
adc
adc
rclb
ljmp
jne
mov
pop
inc
pop
inc
fadds
pop
int3
jns
popa
jp
out
xchg
lahf
sti
stos
mov
stos
adc
stc
xor
cmp
mov
mov
stos
lock
movsb
ss
mov
rclb
sti
cli
push
pushf
cmp
cs
fimuls
xchg
mov
pop
mov
mov
fwait
mov
cmpsl
test
ficomps
mov
fldenv
mov
mov
idivl
add
movsb
aad
daa
test
inc
add
xor
add
xor
add
xor
add
xor
pop
jmp
cmc
mov
icebp
insl
sbb
lahf
xchg
ds
jle
cli
jg
jle
ja
jne
insl
scas
iret
ret
pop
mov
dec
insl
mov
jp
xchg
in
add
popa
xchg
mov
cli
pusha
rcrl
adc
pop
out
sub
js
lock
and
fldcw
cmc
xchg
xor
xchg
subb
arpl
adcb
cs
stos
push
jne
xchg
inc
sarb
xadd
aaa
xor
pop
mov
negl
jmp
lret
imul
scas
inc
out
dec
das
cmc
out
cli
adcl
xchg
imul
push
pusha
inc
test
inc
sub
sub
repz
stos
movsl
rcl
lods
daa
push
int3
cmp
mov
dec
aad
bsr
sbb
ds
bound
fisttpll
fisttpl
lcall
cmp
sub
adc
and
insb
sub
pop
add
nop
and
push
mov
jns
pop
je
inc
repnz
orb
out
adc
fstpt
lds
fiadds
mov
mov
cs
pop
shr
xchg
jp
call
jno
arpl
idivl
mov
pop
mov
jecxz
loop
repnz
mov
adc
imul
in
sbb
or
sbb
cmpsl
outsl
ss
cli
push
pop
xchg
imul
enter
cmp
add
pop
jmp
add
mov
adcb
cmp
jg
jle
cmp
sub
out
mov
xor
mov
inc
repz
pop
stc
iret
rcl
dec
cmpps
sub
xor
into
imul
cmp
cmp
shrl
mov
in
mov
dec
pop
cmpl
dec
push
outsb
rcrb
adc
pop
adc
sub
xchg
sbb
push
add
lods
push
cmc
sbb
scas
jne
jb
jecxz
leave
imul
rclb
mov
or
xor
mov
insl
xchg
nop
dec
mov
xchg
clc
push
divl
sub
add
cmp
sahf
js
fisubl
fildl
pushf
jnp
test
cld
into
add
cltd
xor
jg
cmp
add
sbb
push
outsb
outsl
xchg
loope
xchg
push
sbb
into
pop
ret
xorb
and
cltd
jns
sti
xor
js
in
mov
fdivl
adc
jmp
xchg
adc
xor
jecxz
mov
cmp
push
xchg
lcall
pop
push
add
jno
mov
fimuls
inc
add
std
sub
loopew
xchg
out
lock
mov
sbb
add
inc
out
mov
notl
or
dec
test
sub
inc
or
jp
push
add
cmpsl
jo
int
shrb
bnd
inc
xchg
pop
leave
ret
push
mov
sub
leave
ret
push
mov
sub
push
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
not
mov
xorl
mov
sbbl
movl
mov
add
movl
xor
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
decl
mov
xor
mov
mov
sub
imul
mov
add
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
and
mov
mov
sbbl
xor
add
not
mov
not
movl
movl
mov
adc
movl
adc
movl
movl
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
and
jmp
sbb
add
lock
icebp
mov
fistpll
pop
jl
jle
icebp
xlat
leave
xchg
cmp
loopne
and
dec
jne
iret
lods
mov
sub
mov
mov
sbb
cmp
dec
pop
and
cmpsl
push
push
jne
cltd
mov
loope
and
adcb
adc
xor
adc
dec
leave
xchg
lret
xor
stc
dec
push
cmpsl
shll
test
push
jecxz
mov
out
je
mov
add
and
push
imul
dec
jp
adc
in
aas
push
in
mov
pushf
testb
mov
or
jae
inc
mov
test
or
and
xchg
xor
ds
movsb
xor
fs
cli
push
psrad
mov
and
movsl
lahf
and
adc
xchg
hlt
mov
push
or
fidivl
push
adc
inc
dec
cli
dec
int3
mov
or
mov
je
mov
inc
fidivl
sbb
mov
nop
adc
pushf
or
cmp
sub
dec
movsb
imul
jmp
adc
add
int3
add
out
cmp
push
frstor
mov
sub
sub
outsl
jmp
fistps
jl
imul
add
sub
mov
fld
xor
cmp
cltd
adc
cmove
add
mov
jnp
push
fs
fidivrs
inc
repnz
ja
add
jecxz
in
daa
cmp
nop
orl
pop
xor
mov
lods
int
mov
inc
into
xchg
xor
stc
mov
dec
pcmpgtd
loopne
mov
push
jo
es
sbb
or
xchg
xchg
xor
std
dec
xor
inc
jle
or
cwtl
out
and
insb
mov
out
testl
cmp
pop
sub
adc
mov
imul
pop
in
pop
push
clc
inc
push
repz
mov
mov
repz
lret
test
fs
push
inc
daa
and
stc
xchg
push
add
pop
xchg
stos
jo
jmp
dec
xchg
scas
loope
movsb
adc
mov
inc
mov
pop
sbb
int
add
inc
xor
lods
test
icebp
jmp
sub
fwait
xchg
jno
xchg
out
jno
fwait
mov
inc
fadds
sbb
das
int
xchg
outsb
adc
int3
mov
sbb
out
xor
or
xor
test
push
lahf
mov
subb
jns
push
cwtl
push
push
enter
and
js
sub
test
ficoml
cs
mov
mov
mov
xor
aad
scas
sub
adc
cmp
sti
ss
add
stos
aaa
inc
add
rolb
add
add
add
incl
cmp
inc
mov
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
subl
add
movl
cmp
movl
je
movl
push
jmp
xorl
mov
sub
mov
sub
xor
mov
xorl
xor
movl
add
cmp
jb
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
mov
sub
mov
mov
xor
movl
cmpl
je
cmpl
jne
pushl
call
xor
xor
dec
mov
jmp
negl
xor
andl
xor
or
inc
mov
cmpl
jne
push
call
cmpl
jb
add
add
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
imul
mov
and
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
pop
cli
mov
jno
gs
or
scas
loopne
push
mov
jle
jl
jle
pop
nop
movsl
ss
add
push
sbb
into
out
jl
ss
andb
pusha
inc
pop
scas
dec
arpl
bound
shll
cwtl
sbb
fcmovne
pop
bound
xchg
pop
sbb
cmpsl
xchg
fimull
dec
test
xchg
xor
dec
out
mov
popa
mov
roll
lret
test
dec
inc
dec
fisubl
mov
and
fistpll
es
mov
andl
popf
adc
shlb
sbb
mov
xchg
mov
inc
jle
clc
pusha
insb
addl
pushf
and
cmpsb
mov
retw
sbb
test
hlt
mov
mov
shrl
mov
mov
cmpsl
int3
mov
xchg
scas
mov
iret
add
xchg
xchg
fnsave
das
xor
lods
hlt
jl
outsl
ja
inc
inc
sbb
ss
call
xchg
into
jnp
or
scas
ja
cmpsl
orb
pusha
adc
mov
jns
mov
sbb
jmp
lret
arpl
in
flds
pop
jno
adc
movsb
pop
push
fs
daa
add
arpl
cmp
inc
cltd
icebp
aaa
or
sub
loope
out
mov
push
cmp
daa
jno
aaa
and
lock
add
adc
pop
add
adc
movsb
push
je
and
push
div
sahf
pusha
rolb
jnp
out
jmp
repnz
push
pusha
jp
xchg
enter
xor
mov
fidivl
icebp
outsb
push
xchg
and
push
mov
mov
adc
cs
repz
fbld
mov
ds
mov
jmp
rcr
cmpsb
sub
mov
cmp
and
mov
fwait
loop
mov
dec
inc
jnp
pop
cmc
enter
in
push
add
fdiv
or
insb
ja
and
lahf
sar
and
pop
clc
fidivrl
loope
xor
sbb
push
xor
stos
insl
fucomip
lcall
jp
ja
stos
not
scas
inc
iret
adc
sbb
dec
mov
xlat
pop
lahf
inc
xor
mov
repz
mov
push
push
xchg
leave
repnz
push
xorb
idivl
addl
push
daa
ret
adc
popf
push
mov
lcall
lret
lret
ret
test
and
push
push
push
lods
subl
scas
pop
xchg
jo
xor
std
stos
jo
xchg
arpl
inc
subb
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
jmp
mov
xchg
xorb
jno
cs
cmpsb
adc
jle
jl
jle
jo
and
rcr
lock
mov
movsb
repz
add
inc
xchg
xchg
fwait
cs
icebp
inc
cltd
test
popl
bnd
or
test
sahf
jmp
ljmp
repz
pushf
jge
xlat
jo
jno
mov
jle
jae
in
dec
jmp
inc
call
mov
xlat
or
or
dec
or
test
and
addr16
or
jge
cs
cli
shrl
rorl
insb
cli
xchg
push
lods
in
lea
dec
aas
inc
push
xchg
ret
cmp
xor
pop
push
pop
jno
sub
pop
ret
mov
cwtl
decl
dec
test
movsl
sbb
adc
je
leave
add
lret
jmp
jno
test
rolb
and
sbb
fs
jge
sub
add
in
lods
jb
sbb
adcl
push
or
adc
mov
xchg
repnz
pop
dec
mov
inc
xor
ja
fs
mov
mov
shl
std
mov
cmpsl
mov
inc
cmpsb
xchg
xchg
aam
shlb
mov
inc
push
mov
sub
in
push
pop
push
xor
lret
lss
insb
cmp
mov
int
or
popa
fcmovnbe
push
mov
rolb
insl
adc
fisubrl
sbb
xchg
ret
out
lret
stos
sahf
ss
push
inc
mov
pop
push
popa
xchg
add
push
and
int
xchg
sub
daa
inc
pop
outsb
and
aad
mov
push
outsb
adc
mov
jle
and
jl
or
mov
movsb
sbb
pop
xchg
ss
ja
add
xor
sub
mov
jae
pop
push
mov
clc
dec
mov
cmpsb
ret
push
mov
hlt
inc
and
push
fnsave
add
mov
aam
daa
dec
pop
jecxz
popa
xchg
lds
jecxz
mov
aam
inc
cmc
push
push
xor
in
fldl
js
lcall
jno
orl
lock
lret
jnp
or
pop
test
cwtl
mov
push
adc
sbb
jmp
mov
push
add
shrb
mov
inc
cmpsl
jg
xlat
in
push
add
into
ds
out
add
and
or
loope
push
cmpsb
mov
sub
push
or
xor
cmc
movsl
cmp
or
rclb
xor
aaa
inc
jae
inc
push
mov
mov
cmpsl
xchg
cmp
fmulp
mov
jmp
jmp
inc
inc
js
push
movsl
icebp
sub
in
xor
addr16
mov
push
pop
adc
push
cmp
fistpll
fimull
add
add
mov
mov
jmp
mov
aaa
or
mov
subl
xor
data16
jle
pop
jl
jle
iret
jle
push
cmp
push
in
fistpl
stc
dec
ss
jae
xlat
dec
push
lea
sub
loope
lds
or
popa
sahf
dec
and
es
jg
call
test
fs
das
cld
xor
pop
movsb
and
mov
xlat
jmp
shlb
adcb
adc
push
sbb
mov
fs
test
push
rolb
sub
stos
lock
sar
pusha
jl
test
xor
imul
inc
out
cmc
add
or
push
cmp
xor
xlat
sub
ss
jp
adc
xor
mov
loopew
mov
mov
xchg
push
xchg
int
sbb
jmp
mov
les
xchg
mov
loope
xchg
outsl
imulb
leave
sar
xor
inc
mov
cwtl
jle
add
cmpsl
push
push
jns
pop
jmp
and
insl
xchg
mov
icebp
dec
data16
ljmp
push
cltd
mov
arpl
out
add
cltd
in
inc
push
and
push
fs
repz
jecxz
push
pop
ss
outsb
inc
popf
push
xlat
xchg
pop
inc
cmpsb
call
rcrb
scas
rclb
pop
fiaddl
ret
pop
leave
and
pop
add
daa
cmp
jo
pop
cltd
pop
mov
addr16
jecxz
stc
jno
xor
sub
sub
jecxz
popa
movsl
adc
pop
call
mov
mov
nop
std
fisttpl
sarb
or
dec
push
cmp
aas
jbe
and
push
ror
cmpsl
xchg
or
mov
xchg
jbe
adc
and
inc
cwtl
xchg
hlt
pop
in
pop
aad
cwtl
cmc
idiv
into
sbbl
les
in
sbb
add
dec
paddusb
mov
ss
call
ret
mov
sti
mov
cli
cld
insb
divb
adc
xor
sub
push
adc
adc
mov
test
xor
inc
and
divl
jo
shrb
sbb
or
ljmp
pop
dec
lea
insb
stos
mov
mov
dec
js
xchg
jg
scas
jp
pop
and
jb
adc
shll
into
mov
sub
insb
addr16
jae
sub
movsb
lock
mov
push
jne
das
ja
nop
push
mov
in
imul
jns
in
aad
adc
mov
icebp
mov
jae
mov
cld
cmp
cld
iret
scas
jmp
xor
push
into
adc
jbe
in
arpl
out
sarb
data16
stc
jne
daa
pop
add
jbe
push
mov
xor
cli
xor
jmp
add
dec
popa
jno
jne
xor
jle
aaa
mov
jle
jl
jle
inc
xchg
int3
jmp
or
push
nop
scas
dec
sub
inc
push
movsb
inc
sbb
push
lret
dec
pushl
adcb
inc
push
aam
dec
and
out
loopne
popf
loopne
dec
xchg
xor
pop
roll
repz
fs
xchg
sub
cltd
mov
sti
jp
add
and
ret
in
mov
jno
das
pop
hlt
mov
mov
stos
and
scas
arpl
stos
sub
cmp
and
popf
mov
mov
inc
mov
adc
lods
xchg
mov
imul
add
adc
mov
ss
orl
pop
xor
inc
in
adc
sbb
adc
les
es
jg
sbb
cmpsl
clc
cli
pop
mov
dec
iret
dec
call
enter
and
sub
shll
cmc
loopne
cmp
adc
cmp
repz
push
arpl
push
cmp
jmp
sbb
jnp
test
cmp
cmp
cmp
sub
std
xchg
jmp
cwtl
mov
sub
or
sbb
mov
xchg
sbb
ss
in
scas
pop
adc
fstl
cs
fistl
in
rorl
jns
into
cmp
and
sarb
shll
test
or
jno
jne
mov
arpl
pop
imul
test
lods
in
rolb
lahf
xchg
dec
fsubrs
outsb
xchg
incl
inc
aad
sbb
imul
insl
pop
mov
cli
inc
in
mov
mov
divb
push
mov
mov
shll
mov
push
or
cmp
inc
sbb
xchg
adc
aad
mov
jmp
lea
add
mov
or
std
icebp
pop
nop
inc
jecxz
das
dec
gs
sub
jl
cli
mov
jg
xor
into
xorb
shrb
sub
mov
enter
add
aas
sbbl
roll
dec
inc
lock
add
jl
mov
cmpsb
cmpl
loop
xor
decb
int
shlb
mov
das
movsl
push
sbb
mov
popa
daa
aam
addl
and
mov
mov
into
jg
jge
pop
pop
mov
mov
adc
call
insb
and
js
add
pop
loope
xor
cwtl
sub
inc
and
pop
fsubr
mov
sbb
int
andl
xlat
add
sbb
rolb
stc
add
imul
mov
mov
mov
mov
add
movl
mov
jmp
sub
test
ficompl
cmp
pop
jl
jle
inc
arpl
sub
push
lock
mov
jle
aas
adc
jb
sti
inc
ret
in
dec
clc
addr16
data16
push
mov
mov
mov
dec
ljmp
inc
mov
jmp
ja
add
clc
repnz
daa
fcom
fnstenv
push
loopne
push
daa
les
xchg
enter
xchg
jnp
repnz
push
pusha
lea
rclb
inc
push
bnd
cmpsl
jb
in
add
out
cld
movsl
js
jge
and
popf
dec
mov
sbb
rolb
clc
xlat
call
add
jnp
cmpsl
ja
aad
fimuls
pop
pusha
xor
ja
fisubl
leave
mov
jno
fimuls
outsl
test
repnz
ljmp
insb
test
sbb
fwait
outsl
xor
cmp
dec
push
mov
std
iret
js
pusha
lret
cmpsl
sti
ret
nop
nop
ret
cs
aam
cmpsb
xchg
push
test
xor
and
testb
arpl
cwtl
push
lods
es
mov
fdivr
dec
movsl
addr16
or
cmp
sti
cmp
adc
mov
mov
lahf
inc
cmpsb
subb
lds
mov
bound
insl
jb
pop
mov
daa
addl
sub
pop
loope
mov
mov
mov
mov
lcall
cli
dec
ffree
dec
xchg
popa
arpl
xchg
dec
fidivs
int3
ficomps
scas
cltd
push
orb
pop
mov
push
jbe
cmc
xchg
int
cld
int
mov
movsl
nop
cmc
adc
inc
pop
dec
xor
jg
lret
cltd
shll
inc
push
sub
mov
data16
repnz
sti
lahf
bound
mov
add
push
fcomip
mov
mov
in
ja
add
movb
div
push
ljmp
sar
lahf
cs
imul
stc
pop
ficomps
inc
outsb
pop
and
jb
mov
outsl
test
push
sbb
jo
xor
pop
mov
xchg
jb
push
mov
sbb
popa
out
xchg
sarl
aaa
dec
xor
test
mov
or
out
loopne
lock
xor
loope
pop
sbb
mov
dec
add
push
xchg
mov
pop
mov
data16
xor
cmp
push
repnz
sub
fs
pop
push
ja
mov
mov
sar
mov
fisttps
loope
push
mov
mov
in
xchg
add
and
sarl
lods
test
sub
or
mov
xchg
rcrb
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
jmp
xor
adc
shl
icebp
repz
mov
xchg
mov
jl
jle
and
mov
push
mov
mov
stos
lods
rorb
in
cmp
insb
xor
out
mov
icebp
or
sbb
mov
sub
in
push
es
pop
clc
addr16
add
fiadds
outsb
sbb
lahf
pusha
hlt
mov
fisttps
dec
or
test
movsl
andb
cmp
sub
xchg
mov
jnp
ljmp
adcl
xchg
popf
cwtl
loopne
pop
leave
push
cmp
jg
push
sbb
sbb
repz
pop
in
data16
cmp
mov
js
insl
dec
jns
int
push
mov
mov
jecxz
loop
cmp
jb
lea
push
pop
xor
jp
mov
push
call
pop
inc
fisubs
bound
xor
push
bound
mov
call
mov
inc
dec
arpl
lret
jl
and
sub
imul
ljmp
sub
sar
jle
pop
clc
rcrb
inc
cmp
xchg
xchg
repz
les
outsb
mov
fistpll
adc
es
insb
dec
cmp
shr
mov
and
imul
and
testb
aas
aas
into
pop
push
insl
sub
jno
cmp
ret
test
scas
mov
push
rcrl
jns
jo
cmp
fnstsw
lret
pusha
lock
scas
lea
vdivpd
test
fstl
mov
xchg
out
ret
jne
jmp
sbb
push
loopne
ds
lods
jle
shlb
lods
sub
xor
icebp
inc
orl
mov
pusha
stos
inc
call
das
cmp
push
add
hlt
idivb
xchg
dec
rcll
call
cli
push
dec
pop
cmp
xor
das
xchg
cwtl
mov
clc
add
repz
xor
inc
test
mov
popa
pop
xchg
or
scas
jg
std
loope
hlt
pop
jbe
lahf
mov
mov
mov
mov
test
fimuls
stc
mov
cmp
mov
and
lods
mov
dec
in
or
scas
pop
pop
sub
adc
scas
in
out
fstpl
inc
int
arpl
out
mov
incb
xor
sbb
dec
or
rclb
xor
popf
pop
enter
flds
sub
scas
in
inc
out
add
sbb
pop
inc
and
xchg
movsb
mov
lret
xchg
push
pushf
lock
and
sbb
cwtl
mov
dec
pusha
rorb
into
push
dec
lret
sbb
bound
movsl
popa
xabort
xor
cmp
dec
addr16
push
in
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
jmp
xlat
pop
mov
jno
stc
hlt
jb
and
mov
pop
jl
jle
push
test
mov
inc
out
or
ja
imul
add
arpl
inc
pop
aaa
int
or
dec
addr16
or
mov
leave
inc
popf
push
mov
roll
adc
and
movsb
outsb
jg
cld
jb
adc
or
shrl
loope
scas
les
mov
or
cmp
mov
jne
jo
mov
aam
shr
mov
out
cmp
je
jnp
add
sbb
roll
sbb
push
mov
enter
cmc
adc
add
add
div
jns
int
hlt
cmp
push
fwait
dec
rclb
fsubrs
test
movsl
mov
orl
lret
xor
ss
jmp
cmpsb
inc
ret
xchg
jns
ss
push
es
push
shll
sbb
push
inc
or
sbb
mov
sti
iret
cltd
movsl
shll
out
out
subl
mov
adc
mov
push
bound
cmp
js
in
sti
sbb
mov
sbb
or
repnz
sub
fbstp
dec
test
cmp
leave
test
cli
int
xchg
cmp
and
ljmp
inc
out
or
pop
inc
dec
ret
movsb
iret
shl
and
je
add
jge
pop
push
cli
sub
mov
xchg
lret
jp
clc
ljmp
dec
push
shlb
xchg
jge
and
jb
in
inc
and
pop
scas
insl
xor
mov
iret
add
roll
rcrb
cmp
cmp
mov
imulb
dec
testb
mov
das
xchg
scas
jmp
push
int3
mov
mov
popf
lds
addl
add
xchg
ret
mov
mov
outsb
test
mov
pcmpeqd
addr16
cmp
sub
movsb
push
daa
ja
aaa
xchg
test
push
inc
adc
jo
call
fld
cli
adc
push
jecxz
sub
or
push
or
ret
clc
pop
sahf
push
sbb
jp
imul
nop
mov
pop
mov
add
push
pop
aad
or
sub
ja
int3
push
and
std
pop
icebp
pop
mov
aaa
mov
pop
add
push
xor
repnz
call
pushf
jmp
jecxz
jb
mov
push
cwtl
dec
scas
inc
or
dec
out
mov
cmp
pop
sti
push
movsb
int3
sti
adc
cmp
cmpsl
dec
ret
test
cltd
stos
cmp
in
push
mov
not
cwtl
adc
mov
dec
mov
lret
daa
out
cmc
iret
inc
outsl
bound
decb
imul
mov
xor
sub
lea
jmp
pusha
das
sti
pop
push
push
out
lahf
sbb
inc
imulb
jle
jl
jle
jo
lods
xchg
dec
sbb
fcmovu
sbb
push
inc
add
inc
pop
cmp
fdivs
hlt
sbb
cmp
into
or
cld
iret
aam
aas
xor
sub
test
sarb
jne
mov
adc
lcall
jo
repz
inc
sub
es
pop
in
les
test
cs
icebp
shll
int3
repnz
mov
xchg
xchg
imul
push
cs
cli
push
mov
lret
adc
sub
aad
lods
jnp
data16
test
call
aam
mov
rorb
jnp
inc
subl
mov
scas
stos
test
jmp
mov
enter
adc
xchg
xchg
mov
movsb
mov
pop
cmp
jmp
cld
repnz
xchg
repz
or
mov
sbb
mov
mov
stos
daa
cmp
fwait
mov
mov
aaa
adc
dec
loope
scas
rcl
lds
dec
cs
notb
iret
mov
loopne
nop
xor
dec
xchg
pushf
cltd
mov
popf
push
test
sub
fdivrl
and
aas
shlb
fdivrl
or
insb
push
adc
int3
xchg
inc
ja
dec
pop
loope
shr
xor
adc
adc
sub
pop
inc
test
fcmovb
movsl
mov
in
aad
outsb
repz
cs
dec
jae
mov
sbb
jne
cmpsl
ror
xchg
ret
shll
mov
daa
or
mov
xor
inc
pushl
or
fs
fistl
sbb
mov
xor
push
xchg
sub
aad
dec
inc
mov
in
stos
std
sub
add
test
cwtl
icebp
jle
cmp
cmp
test
pop
bound
or
dec
or
enter
or
inc
sbb
sub
adc
ret
pop
icebp
loop
pop
sub
jnp
inc
scas
outsb
lods
add
add
divl
test
xchg
push
in
fiadds
pop
inc
add
dec
setle
enter
xor
movsb
mov
scas
cmp
xchg
adc
nop
repz
rcrl
cmp
xchg
ja
rclb
push
aas
movsb
shlb
jb
arpl
movsl
aas
hlt
push
out
rorb
lea
jle
pop
scas
jge
mov
lock
mov
inc
inc
fdivr
xchg
daa
call
cmc
mov
ret
cmp
mov
push
cmp
jbe
mov
mov
jmp
outsl
fisttpll
pop
fmull
popa
pop
shrb
jle
pop
jl
jle
rolb
push
pop
lock
mov
push
nop
cmp
xor
cmc
clc
ffreep
xchg
lcall
adc
add
add
lea
mov
or
dec
inc
sbb
out
out
cmp
or
iret
stos
add
sbb
sbb
bts
movsb
test
out
icebp
adc
lods
out
insb
xchg
xor
pop
lods
test
or
jnp
std
cli
jle
mov
push
jne
lods
andb
adc
sub
scas
pop
shll
cmp
dec
ret
les
pop
mov
mov
shlb
dec
jmp
cltd
pop
stos
xchg
cmp
adcb
pop
fbld
sub
adc
nop
push
mov
push
lds
adc
xchg
testb
pop
iret
jbe
stc
cmc
subl
pop
dec
mov
movsb
fildl
mov
incb
mov
lds
mov
idivb
dec
test
cmp
jb
cld
or
pop
sub
fistps
push
addr16
xchg
mov
insb
loope
inc
mov
adc
ja
mov
cli
int
ret
mov
adc
push
jge
mov
sub
daa
or
andl
xor
es
icebp
xor
push
push
mov
push
ljmp
bound
sahf
push
les
xchg
fidivl
jmp
mov
and
outsb
push
mov
jns
mov
lods
sub
test
lea
sbb
lods
je
cwtl
inc
xchg
push
cmp
dec
inc
or
pushf
inc
cmpsb
fisttps
push
je
inc
sbb
push
aaa
stc
scas
cmp
jmp
mov
test
insb
mov
in
jecxz
or
sbbb
popa
notb
loopne
movzbl
ret
pop
adc
push
stos
js
outsl
out
push
fs
aas
outsb
xor
push
cs
add
pop
adc
data16
jecxz
mov
js
mov
stos
mov
or
xlat
adc
in
sbb
out
out
cmp
push
in
push
mov
icebp
cltd
jb
mov
sbb
insb
push
and
push
hlt
cmp
sub
sub
xchg
mov
lods
dec
lea
outsl
cmp
jbe
les
lock
inc
mov
andl
stos
test
and
mov
nop
push
mov
lods
loop
mov
sub
inc
fistpl
outsl
inc
andb
adc
jnp
cs
push
mull
inc
push
pop
dec
sub
call
cmp
lods
adc
cld
dec
xor
divl
rolb
rorl
scas
xlat
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
mov
and
mov
xorl
xor
notl
add
jmp
scas
incb
jne
lods
jbe
loopne
mov
icebp
shll
ss
sub
jle
cmp
push
cmp
jae
in
or
push
xchg
mov
jbe
pop
sarb
xchg
and
pop
popf
cmp
inc
cwtl
iret
mov
dec
adc
mov
cmpsl
mov
stos
mov
sbb
fisttpll
loope
outsl
shll
rclb
cli
jb
sub
test
or
push
rep
push
xor
int3
lcall
ss
aas
enter
xchg
mov
mov
incl
push
pop
fstl
mov
testl
hlt
ret
mov
push
pop
mov
xchg
push
sub
lock
rclb
ret
mov
dec
cli
shl
movsb
or
das
add
add
addr16
cltd
and
and
pop
fwait
dec
outsl
enter
inc
mov
pop
add
pop
in
nop
xchg
filds
xchg
dec
ficoms
or
adc
sti
test
jle
mov
insb
shll
add
xchg
jecxz
jmp
mov
or
lock
call
mov
xlat
in
jl
push
cwtl
iret
je
sub
push
addr16
jg
inc
xchg
or
push
and
or
sub
loope
stc
pop
xor
jle
test
mov
jo
mov
cmpb
adcl
inc
imul
and
lods
cmpsl
out
fstpt
ds
fildl
inc
aas
dec
scas
outsl
pop
push
fcmovb
push
inc
mov
xchg
xor
push
add
jno
jl
xchg
fistpl
jae
and
add
mov
mov
and
daa
iret
jecxz
pop
popa
insb
std
push
inc
adc
xchg
inc
xor
dec
arpl
cmc
fcoms
sbb
lods
aam
mov
loope
lods
sub
testb
or
fimuls
test
aad
mov
mov
popf
ret
shlb
iret
adc
fwait
jle
popa
ja
or
add
push
dec
and
outsb
xor
mov
je
mov
out
shr
clc
mov
mov
xor
lret
adc
xlat
xchg
shrb
dec
hlt
cltd
mov
dec
jp
inc
stos
int3
stos
cmpsb
or
out
mov
shl
cmpsb
loop
adc
jnp
pushf
or
sti
leave
cltd
in
fs
inc
mov
mov
jg
stos
out
pop
sub
int
jnp
xchg
daa
leave
pop
sub
mov
jg
cld
jmp
callw
out
lea
ljmp
jbe
add
ret
cmp
cmp
and
add
inc
aad
and
into
inc
in
cltd
sbb
xchg
jae
gs
adc
adc
out
mov
jle
or
pop
jmp
sub
sub
and
or
jmp
or
adc
ficompl
adc
mov
and
pushf
cmp
inc
mov
xor
insl
or
add
inc
or
inc
cld
test
clc
push
mov
movl
mov
cmp
je
mov
xor
xorl
xor
lea
xor
cmp
jne
movl
jmp
add
mov
xor
add
movl
mov
mov
movl
jmp
jmp
fldcw
les
adc
call
jge
jle
dec
jecxz
cmpb
and
sub
pop
lret
out
xchg
rep
inc
jge
mov
jle
or
xlat
fstpl
mov
jo
mov
aas
sub
adc
popf
and
or
bound
mov
add
iret
mov
pop
xchg
or
dec
mov
xlat
aad
mov
cmc
scas
dec
lods
jle
cltd
adc
mov
adc
fsub
pop
push
cltd
mov
cmpsl
scas
jo
cmp
push
and
scas
scas
ja
fwait
sti
shrb
cs
xlat
sbb
adcb
fs
pop
iret
icebp
sub
dec
jl
movsl
testb
push
pop
pop
add
popf
adc
shrl
dec
mov
add
sub
xlat
outsb
cs
movsl
cmp
jecxz
jge
sub
or
and
xchg
jb
add
push
insl
mov
jne
xchg
scas
adcl
add
sub
adc
insb
mulb
loop
push
add
enter
rorb
adcl
dec
imul
ret
inc
pop
dec
ficoml
and
cmp
push
ret
or
adc
iret
pop
cmp
inc
insb
dec
and
test
jnp
inc
fwait
pop
movsb
scas
sbb
nop
dec
iret
cwtl
jo
push
mov
cli
push
movsl
out
cmp
sub
inc
xor
cmpsb
outsl
fsubrl
imul
outsb
push
das
aaa
cmp
push
mov
jae
push
fs
mov
mov
add
sub
cmpsl
popa
enter
xchg
jbe
test
addr16
test
fs
xchg
shlb
xor
pop
xor
ds
sub
xor
pop
adc
mov
push
jp
mov
lcall
push
inc
mov
nop
mov
cmp
inc
xor
popl
out
push
mov
cmc
and
lret
in
fcoms
jg
cltd
rorb
scas
jg
cmp
cmp
jbe
jl
int
sbb
in
out
cwtl
clc
in
mov
push
push
or
mov
and
xor
dec
hlt
jge
pop
sbb
jbe
jno
mov
inc
or
mov
inc
mov
scas
jp
insb
add
nop
inc
test
jle
mov
in
sti
fs
in
pop
mov
shrb
aaa
imul
in
mov
pop
data16
imul
pop
dec
in
cmc
icebp
rorb
sar
cmpsb
outsl
call
xor
inc
xchg
xchg
popa
sbb
out
in
push
test
lock
xchg
jp
lcall
jge
xchg
bound
gs
xchg
lea
sbb
scas
shll
nop
sbb
mov
mov
shrb
xor
loopne
inc
out
int
lcall
and
xchg
pop
imul
and
data16
xchg
adc
add
mov
aaa
push
add
sbb
lahf
adc
mov
fisubs
neg
jmp
jne
sub
test
test
mov
cmp
sbb
jge
jle
setb
push
xor
sub
shrl
shrb
dec
sahf
dec
js
sbb
jnp
lret
repnz
fcoml
es
loopew
mov
ljmp
sbb
cmpl
or
sarb
dec
sbb
jp
sub
sbb
das
cmp
pop
inc
add
inc
inc
sub
sti
sar
loop
inc
xlat
adc
push
sub
adc
call
loop
ss
loop
lods
lods
out
aas
push
pop
pop
pusha
pop
cli
dec
rdmsr
mov
mov
sub
cmp
mov
push
ja
scas
outsb
jbe
inc
sbb
cmpsb
xor
sbb
ret
movsb
pop
lret
or
or
ss
out
aam
and
data16
call
sar
aas
adc
daa
jmp
enter
sti
xchg
shll
por
jae
xor
mov
loop
aas
mov
stc
push
xchg
jno
sub
jl
sbb
xor
jnp
in
test
jl
jl
inc
adc
bnd
inc
loope
inc
push
out
cmpl
sbb
fstpt
lods
mov
loop
mov
mov
test
in
sub
inc
jb
in
testb
and
dec
xchg
cmp
lret
aaa
sub
add
lea
mov
out
loopew
sbb
push
and
fwait
and
ret
adc
dec
outsl
hlt
mov
lock
mov
lods
cmp
das
repz
mov
call
dec
mov
fildl
cmpsb
cltd
push
adc
push
sub
inc
jbe
cmp
das
aas
fcmovu
mov
jecxz
adcb
jmp
add
gs
int
xor
aas
and
or
clc
test
leave
fcoml
mov
jbe
fstpl
mov
sarl
jge
lods
mov
sub
popf
jne
in
cmc
lock
test
shlb
inc
ret
adc
pop
xchg
push
insl
cmpsb
test
aad
sbb
add
sbb
aad
pop
add
sbb
mov
xor
daa
and
enter
call
shlb
add
lea
add
xorb
mov
enter
cwtl
xor
mov
jo
in
and
fxch
subl
jne
movsb
ss
or
xchg
je
scas
and
je
push
cwtl
movsl
mov
test
das
insb
loop
nop
aam
jnp
sub
int
lock
mov
jno
outsl
sub
add
sarb
mov
dec
xchg
dec
or
mov
fstpl
mov
je
xlat
and
adc
or
test
inc
testb
out
sbb
jne
icebp
or
aam
lcall
aaa
movsl
mov
pop
insb
fbld
mov
push
xor
or
jmp
subl
lock
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
jmp
lahf
cmp
push
pop
fcomps
cmc
adc
jle
sub
jle
pop
fsubr
cmp
pop
addl
mull
pushf
jo
lret
sbb
xchg
pop
push
cmc
mov
gs
mov
xor
adc
iret
sbb
lcall
push
mov
sbb
push
inc
push
hlt
aam
mov
flds
add
lods
sub
out
fsubrp
cmpsb
int3
iret
popf
data16
mov
push
jge
add
andb
xor
pop
in
shlb
and
jg
out
sbb
fwait
mov
pop
push
pop
push
cmpsb
mov
ret
cmpb
icebp
mov
frstor
jne
test
sbbl
jp,pn
cld
mov
xorl
sbb
mov
mov
adc
or
cmpsb
test
inc
sahf
pop
inc
push
cld
mov
aaa
icebp
cmpsl
xchg
push
js
dec
daa
push
jg
push
add
mov
and
xor
or
jnp
test
inc
pop
xor
jne
out
ret
cld
mov
push
mov
nop
xchg
fdivrs
out
test
lock
jle
ss
test
push
pop
movsl
sub
inc
mov
cmpsl
jb
fadd
dec
mov
ss
mov
sub
test
adc
mov
stc
scas
xor
push
iret
push
xchg
loopne
adc
outsl
and
pop
fcomi
in
fnstenv
add
adc
sbb
imul
mov
lret
mov
jmp
fmulp
mov
scas
dec
inc
jp
inc
pop
sbb
mov
push
pcmpeqb
inc
dec
fcomps
add
push
push
sub
cmp
xlat
or
popa
or
out
sub
sbb
mov
cli
mov
sti
movsb
jmp
add
je
test
dec
xor
sub
jnp
mov
pop
repz
mov
int
mov
dec
outsb
pop
mov
jo
jg
aas
rol
scas
jecxz
arpl
inc
xor
stos
pop
stc
aam
icebp
cmp
add
xchg
cli
xchg
mov
xchg
push
or
inc
xor
inc
mov
jns
sub
out
bound
xor
jecxz
jmp
mov
adc
push
fnstsw
cmpsl
mov
pop
lahf
loope
or
and
xlat
data16
popa
cwtl
popf
mov
in
leave
fidivl
sub
xlat
xchg
mov
testb
or
and
xchg
mov
out
ret
nop
sbb
imull
repz
push
lret
test
pop
out
aas
jnp
mov
add
xchg
xorb
stos
xorl
inc
jl
mov
xchg
in
out
push
shll
movsb
jle
sbb
cmp
ret
repz
cmp
adc
pop
shrb
adc
cli
je
xor
addl
icebp
loop
shr
add
add
mov
leave
ret
push
mov
sub
push
call
movl
cmpw
jne
push
call
movl
cmpb
movl
jne
movl
movl
lea
mov
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
movzwl
and
mov
mov
adc
mov
sbb
mov
mov
sub
mov
push
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
mov
subl
xor
adcl
push
mov
add
mov
mov
mov
cmp
mov
mov
je
or
mov
sbbl
xor
add
sbbl
imul
mov
movl
jmp
or
xor
and
add
xor
add
and
mov
mov
or
mov
addl
xor
and
add
mov
sub
mov
sbb
mov
and
mov
sbbl
xor
adcl
add
cmp
movl
jne
subl
push
orl
pushl
pushl
call
mov
mov
andl
mov
mov
mov
orl
mov
subl
mov
subl
movl
andl
mov
decl
movl
mov
adcl
xor
add
jmp
notl
mov
xor
lea
push
mov
xor
lea
push
adcl
mov
xorl
pushl
call
mov
add
xor
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
adc
mov
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
jmp
push
call
xor
leave
ret
push
mov
push
movl
push
mov
mov
mov
mov
movl
movl
movl
cmp
jne
or
mov
sbb
mov
movl
jmp
cwtl
sahf
inc
mov
ja
mov
movl
adc
cmp
mov
ret
dec
or
movzbl
push
call
imull
jge
inc
mov
sahf
psubsb
mov
sbb
mov
xlat
sarl
inc
test
jmp
mov
lahf
loope
aad
mov
inc
stos
daa
or
mov
inc
shll
sar
xorb
jge
movsb
addr16
gs
pusha
sbb
inc
stos
ficompl
pop
mov
das
jbe
xorl
bnd
mov
sub
or
xor
gs
pop
ret
aaa
cltd
stos
push
dec
xchg
xchg
push
mov
rcrb
dec
leave
mov
les
dec
push
push
sarb
mov
rcl
test
or
lcall
cli
fidivrs
in
mov
stos
push
xchg
rcr
mov
inc
ret
or
and
inc
lret
into
icebp
scas
xadd
jo
repnz
decb
xchg
dec
adc
or
push
jno
aam
leave
insl
or
or
lods
push
std
lods
mov
push
mov
insl
xchg
mov
ret
es
pop
pusha
mov
push
lock
arpl
or
jo
std
jmp
fcomps
repz
mov
inc
leave
pop
jmp
aaa
rorl
push
rcll
jl
jae
dec
sbbb
imul
mov
sbbl
pop
xor
push
sysenter
mov
out
mov
inc
andl
pop
scas
and
popf
jp,pt
mov
xor
mov
sbbl
add
addl
mov
movzwl
sbbl
jmp
cmp
es
repz
movsl
pop
xor
imul
jle
adc
pop
inc
inc
hlt
pop
mov
pop
cmp
xchg
cmc
jno
mov
dec
daa
in
add
xor
pop
inc
ficompl
add
aaa
popl
push
into
xchg
pop
out
pop
push
cmp
inc
adc
cs
imull
pop
repz
mov
mov
pop
call
ljmp
mov
mov
aam
lods
addr16
adc
cmpl
hlt
mov
scas
mov
pusha
xchg
int
out
mov
push
add
sbb
ret
adc
xchg
xchg
push
je
jno
aam
push
das
inc
and
scas
stc
ss
sub
sub
ja
cmp
cwtl
cmp
sbb
out
insl
ret
and
f2xm1
jmp
push
sbbl
insb
mov
ror
js
out
pusha
mov
call
push
and
jae
test
arpl
inc
inc
push
movsb
sti
out
aad
cltd
aam
gs
cmp
sbb
push
adc
aas
imulb
mov
loope
imulb
pop
adc
fisttpll
jae
fnstcw
aas
xchg
jmp
mov
mov
sbb
push
fistl
inc
lock
cmp
das
sbb
jg
push
das
add
push
sbb
loope
push
adc
and
jne
mov
jmp
push
push
scas
mov
pop
in
lock
add
sub
mov
test
or
lcall
out
icebp
adcl
int
orb
sbbb
jb
lcall
aaa
inc
add
inc
add
add
jmp
xorl
mov
jmp
dec
rcrb
mov
push
loope
sahf
adc
mov
jle
mov
sar
out
inc
pop
inc
fimuls
ret
arpl
mov
lods
gs
fiaddl
lcall
subl
ds
loopne
push
in
sbb
pop
jg
cwtl
fidivl
xchg
mov
dec
cmp
hlt
iret
or
lret
xorl
out
pop
xor
test
and
cld
sbb
lds
clc
mov
pop
and
xchg
xor
cmpsl
dec
iret
push
cli
pop
push
xor
dec
pop
out
adc
add
das
adc
in
inc
shlb
sti
fcomp
xchg
dec
mov
movq
dec
test
movl
out
sbb
mov
mov
push
call
and
lds
sbb
push
and
cmp
xor
sbbb
cmp
stos
xlat
cs
push
popf
inc
aas
lcall
cmc
pusha
hlt
jp
xchg
sub
sbb
mov
sti
fstpt
loop
aas
jns
rcrb
ret
mov
push
mov
pusha
sbb
ror
sub
pop
and
cs
push
mov
xchg
addl
ds
lret
adc
jg
sbb
dec
pop
mov
cmp
jge
mov
lret
loopne
add
or
sub
ss
mov
je
scas
leave
orb
testw
sub
push
xor
jb
sbb
adc
fsubrs
sbb
or
jne
imul
aaa
pop
mulps
jne
call
test
jmp
and
in
popa
push
lret
xchg
mov
les
mov
in
out
pop
cli
add
jns
fdivrs
push
sbb
into
ss
sbb
and
jecxz
add
in
rclb
jmp
in
daa
lcall
aas
jns
xchg
ss
cld
cmpsl
push
add
xor
cmp
int3
movsb
shll
push
push
ret
xchg
mov
cmp
in
xchg
roll
enter
jecxz
xchg
dec
imull
cmp
xlat
scas
roll
and
cld
pop
mov
mov
adcl
push
insl
inc
xchg
push
jl
inc
mov
push
mov
das
les
pop
mov
push
sbb
into
mov
mov
and
lods
xchg
sbb
xor
cmp
imul
outsb
cmp
mov
adc
fs
data16
xor
jbe
cmp
cmp
mov
cmpsl
or
in
loopne
xchg
mov
sbb
dec
adc
in
xchg
adc
stos
add
negw
cmp
push
out
mov
insb
leave
aas
jno
push
add
sbb
sahf
and
xchg
adc
lods
sub
cmc
sub
and
jb
ret
sub
jle
mov
pop
mov
je
ja
xor
fwait
mov
adc
lods
lock
jmp
pop
faddl
inc
pop
stos
test
xchg
jl
popa
cmpsl
dec
push
pusha
inc
push
lods
sub
mov
xchg
xorb
int
daa
and
sti
lcall
in
pop
adc
pop
xorb
xor
ret
cmp
je
leave
ret
push
mov
sub
andl
movl
mov
or
jmp
pop
cmp
inc
pop
arpl
js
push
loope
int
cmp
ret
add
adc
mov
icebp
cli
mov
aad
icebp
inc
push
imul
sub
sub
add
fidivrs
push
imul
push
lods
sub
mov
push
xor
bound
or
aaa
sbb
mov
xor
jns
arpl
fstpt
sbbb
or
sub
jbe
inc
adc
push
jg
jp
mov
jp
test
outsl
dec
aaa
cwtl
out
push
je
and
xorb
xor
mov
xchg
out
fistps
push
pusha
pop
mov
jmp
pop
and
mov
addb
jns,pn
cmp
push
pop
jb
pusha
test
sbb
clc
xor
in
cld
pop
cmovge
pop
fwait
pop
jns
clc
pop
mov
pop
and
decl
mov
movsl
inc
jmp
call
js
cli
xchg
lret
inc
rorb
adc
adc
imul
pop
inc
or
adc
push
xchg
jl
out
mov
sbb
inc
shl
add
inc
clc
xchg
jae
and
mov
sbb
nop
fdivrl
or
in
xor
sub
fcomi
shll
int
cmp
dec
xor
xchg
jle
ss
jbe
int
mov
cmp
out
aam
scas
pop
movsb
dec
xchg
nop
push
test
insb
dec
push
pop
out
inc
rorb
jle
adc
xchg
cmpsb
inc
add
je
jl
pop
fadds
sar
mov
int3
push
cmp
pop
cmpsl
popa
mov
insl
cmc
mov
rorl
inc
sub
fsubrp
or
xor
jg
aam
fisubl
jae
mov
push
ss
inc
sbb
aas
lret
and
and
or
push
out
inc
in
xor
add
xchg
add
mov
sub
mov
and
lea
sub
mov
mov
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
pushl
call
jmp
xor
push
lea
mov
mov
jmp
aad
shlb
dec
js
js
dec
pop
andb
jle
mov
dec
dec
xor
in
out
popa
xchg
lock
xchg
adc
imul
sar
pop
mov
inc
pushf
inc
or
xor
pushf
push
fisttps
cmc
sbb
jp
aas
jb
inc
and
out
cmp
fisttps
mov
xlat
scas
xor
cmc
test
cwtl
jecxz
stc
sahf
in
ss
in
rol
jg
pop
mov
mov
ss
and
mov
xlat
icebp
xchg
push
cmp
mov
inc
dec
sbb
mov
pushf
xor
and
cs
xchg
outsl
add
sbb
jmp
fwait
mov
shlb
lea
mov
xchg
pop
sub
adc
xor
rcll
push
test
arpl
lahf
push
xchg
xchg
insb
xchg
sub
in
in
ret
sbb
test
scas
and
aam
nop
jmp
mov
lock
xchg
sub
pop
outsl
inc
xchg
aaa
sbb
aaa
add
nop
sub
push
inc
icebp
xchg
insl
mov
je
mov
jle
jl
ljmp
mov
mov
mov
std
addb
sbb
mov
shrl
mov
push
xor
mov
popf
push
mov
jns
xlat
jne
test
dec
lods
jbe
test
shll
jp
stc
imul
lret
xchg
ja
jle
je
lret
shl
sub
movsl
fs
in
pop
mov
loopne
jns
sbb
jne
add
lods
outsb
das
jmp
xor
stc
std
adc
dec
shlb
mov
movsb
mov
sbb
mov
in
aam
stos
mov
je
pushf
cmp
imul
pusha
out
data16
cmp
stc
mov
mov
and
push
xchg
pop
mov
int3
jle
inc
imul
mov
xorl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
mov
neg
jmp
loopne
test
cmp
pop
out
int
xchg
and
jle
add
pop
add
repnz
mov
xor
mov
pop
inc
test
mov
push
repnz
and
lret
sbb
jnp
pop
xor
ret
cmp
mov
mov
lcall
loope
add
std
xlat
xchg
int3
scas
les
addl
scas
sub
cmp
sub
jl
lret
xor
das
lock
add
leave
and
inc
xor
jnp
mov
test
into
ja
sbb
sbb
sti
jo
sbb
mov
cltd
cwtl
ja
or
inc
stos
add
adc
stos
add
sbb
sub
sbb
sbb
test
cwtl
jmp
adc
sbb
ja
inc
or
sbb
push
xor
push
jb
outsb
out
fs
or
sbb
fldenv
shl
ds
pop
scas
push
cmp
aam
dec
fmul
cs
clc
jge
xorb
xchg
jno
and
and
mov
cwtl
mov
jmp
int
and
xor
shlb
test
in
outsb
mov
push
loopne
rclb
loop
nop
mov
mov
xorb
cmc
add
mov
sbb
aas
cmp
int
in
movsb
sti
or
pusha
fildl
rolb
rorl
cmc
cmp
pcmpgtd
xchg
lret
pushf
add
icebp
adc
sub
dec
out
push
push
dec
test
in
push
add
pop
push
push
fcompl
jg
sbb
mov
jo
pop
loopne
jp
pushf
xor
jno
out
mov
and
dec
ds
dec
shll
loopne
mov
cmp
jnp
stc
in
and
scas
or
insb
test
adc
fnstenv
rclb
imul
push
test
rorl
xor
adcl
mov
movl
xor
addl
xor
andl
add
negl
add
incl
div
mov
movl
movl
movl
cmp
je
movl
movl
andl
lea
xor
mov
and
mov
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
imul
jmp
and
out
je
inc
adc
sbb
test
add
add
mov
cli
mov
sahf
rclb
mov
pushf
push
ret
rol
jns
into
xor
test
out
test
test
aaa
js
fcomi
ret
mov
cltd
mov
push
inc
js
fstpt
adc
sbb
jmp
push
scas
js
cmpsl
movsl
xchg
xor
icebp
sbb
mov
cmp
push
sbb
jbe
cmp
push
ss
dec
mov
dec
insl
and
pop
scas
mov
scas
pushf
xchg
outsl
movsb
js
inc
sbb
adc
mov
dec
pop
jne
dec
xlat
or
lret
mov
adc
inc
sahf
stc
jecxz
aad
insb
data16
xor
xorb
xor
fcmovnu
aaa
aam
loop
decl
inc
mov
test
or
xor
test
xchg
lcall
test
lds
mov
add
les
stos
dec
sub
xor
inc
sahf
mov
push
pop
inc
mov
mov
push
jne
cltd
imul
mov
cltd
mov
and
rcrl
outsl
and
lret
xchg
les
pop
leave
xlat
sti
adc
lret
imul
mov
movsl
lea
cmp
fistpll
mov
jo
sahf
icebp
dec
adc
stc
dec
pushf
or
popf
cmp
fildll
mov
ret
mov
in
cmp
addr16
jl
push
jl
int
in
jle
xchg
add
out
push
lret
dec
sbb
jno
lahf
push
fmuls
inc
push
or
xor
dec
aas
ljmp
ss
adc
push
mov
push
in
push
data16
lgs
mov
cmp
pop
or
pop
add
mov
in
hlt
xchg
adc
mov
fdivrp
fwait
rcrb
rcl
fwait
mov
arpl
mov
mov
cmp
je
mov
orl
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
adc
mov
mov
movzbl
or
mov
orl
mov
mov
orl
push
xor
xor
sub
push
mov
sub
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
push
neg
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
sub
add
mov
addl
lea
not
mov
mov
mov
and
mov
andl
xor
add
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
lea
jmp
ss
lods
jmp
push
mov
enter
jle
jl
jle
mov
leave
sahf
ss
inc
xchg
mov
xchg
xchg
inc
mov
adc
pop
movsb
lock
in
inc
dec
je
sbb
push
pop
loopne
cmp
lret
dec
icebp
aad
fldenv
stc
cmp
dec
mov
cltd
and
sbb
push
sub
xor
arpl
inc
das
jle
lret
cs
xchg
or
ss
outsb
ret
sbbl
xlat
dec
push
cld
pushw
pop
adc
or
movl
dec
pop
mov
sbb
les
addr16
mov
sbb
jl
pop
jmp
shrl
lds
pop
cmp
shl
aas
daa
adc
dec
mov
jae
sub
inc
cmp
leave
loope
pop
jmp
xor
and
ja
mov
test
in
rorb
ja
jo
pushf
push
loopne
sarl
ja
sub
notl
sbb
loop
push
dec
pop
pushf
dec
fisubl
pop
stos
mul
inc
scas
cmp
xor
test
mov
inc
adc
loop
aad
lahf
addb
cmpsl
icebp
push
into
and
clc
jmp
dec
or
jle
inc
lcall
mov
lahf
pusha
aam
bound
test
enter
imul
push
cmp
negl
stos
dec
mov
in
stc
rcr
sbb
fstpt
adc
xor
filds
sub
fstl
jge
push
enter
jmp
mov
add
sbb
jne
sbb
cld
ljmp
mov
push
insb
sub
mov
adc
mov
out
fnstcw
xchg
cld
mov
adc
push
stos
jnp
mov
out
jp
test
dec
pop
cmc
or
or
xchg
es
inc
cmp
les
stos
add
or
cltd
jge
xchg
gs
in
movsb
adc
mov
imul
add
add
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
inc
mov
orl
mov
xor
xor
add
add
xor
mov
mov
adc
jmp
xchg
inc
in
mov
das
sbb
sbb
in
jle
and
jle
xor
sbb
pop
mov
or
sbb
into
ss
mov
add
jns
jb
fsubrl
aas
inc
loope
nop
pop
ret
pop
rcrl
pop
lcall
pop
xor
jg
cmpsb
adc
mov
xchg
cmp
fisttps
in
sub
fcompl
in
lahf
shrb
cmp
or
lods
and
pusha
repnz
loopne
and
arpl
cmp
add
and
jne
loop
sub
call
pop
mov
fdivrs
cmp
enter
mov
cmc
mov
nop
fnsave
popa
mov
mov
cmp
scas
push
cmp
out
rolb
jnp
std
mov
test
aam
mov
out
push
pop
add
cmp
and
push
xchg
push
inc
and
adcb
outsl
scas
and
and
clc
adc
and
xorb
mov
cltd
mov
inc
int
pop
in
hlt
sbb
out
call
rorl
push
scas
ret
pop
or
aad
vpunpcklwd
movsl
hlt
sbb
push
cltd
dec
mov
rol
push
fcmovu
pop
jl
ret
lret
into
mov
fisttps
mov
outsl
std
sub
mov
ljmp
icebp
data16
mov
push
hlt
xchg
cmp
jo
dec
pop
je
push
lahf
iret
mov
sub
dec
cmp
out
sub
mov
cmp
push
out
and
pop
enter
xor
mov
leave
xor
jmp
lret
adc
xor
cmc
jne
mov
ret
pop
movsl
insb
inc
jb
das
push
adc
fisttps
xor
in
out
or
mov
lret
ret
orb
pushf
popa
lds
xor
fwait
xchg
les
push
imul
sbb
cld
fistpll
adcl
mov
sbbl
jmp
pop
push
jg
xor
add
out
jle
and
jle
dec
nop
negl
es
xchg
imul
test
mov
fcoml
xchg
jecxz
movsb
add
pushf
sub
pop
lods
mov
fcmovnu
js
fwait
out
pop
movsb
mov
add
pop
jbe
mov
aam
or
add
sbb
cltd
mov
xor
sbb
xchg
ja
inc
pop
loop,pn
add
xchg
mov
pop
sarl
and
inc
neg
call
xchg
mov
fists
lret
loop
lret
cltd
inc
push
movsl
insl
sub
push
je
bound
and
arpl
push
insb
loop
inc
pop
stc
arpl
lret
int
ret
movsl
bound
inc
gs
dec
stc
inc
jne
pop
pop
sbb
lods
inc
rolb
faddl
mov
repz
imulb
mov
or
adc
andb
xchg
mov
jecxz
test
scas
dec
and
loopne
icebp
cld
out
adcb
movsl
or
test
inc
push
and
inc
jg
inc
ret
push
sahf
lds
pop
sub
fsubp
into
sub
bound
push
movl
push
stos
cmp
ljmp
adc
les
sbb
jne
fdivrs
iret
mov
loopne
mov
xor
call
push
movsb
xchg
lea
sub
out
in
test
and
lretw
std
fsubl
mov
xchg
gs
sub
xorb
push
ds
out
mov
lods
jo
dec
outsb
shl
adc
add
jg
xchg
push
sbb
inc
leave
mov
adcb
lock
push
mov
cmp
push
lret
push
clc
psubw
jmp
dec
aam
pop
xchg
inc
and
movd
outsl
rol
inc
aaa
sub
fdivrp
add
pop
and
mov
inc
and
cld
cmp
xchg
jecxz
out
ffree
rcll
int3
xlat
aad
int3
mov
subb
out
push
lea
inc
pop
cmp
rorl
aaa
inc
add
jl
add
dec
cld
adcl
movzwl
xorl
add
notl
mov
mov
or
mov
xor
add
cmp
jne
dec
mov
mov
xor
add
cmp
jmp
stos
adc
inc
jno
stos
icebp
jl
and
lret
mov
jle
and
jle
into
outsl
or
inc
sahf
add
mov
roll
loope
fucomp
jecxz
cmpsl
jns
cmpsb
jnp
inc
mov
or
ret
nop
jb
xor
cmp
out
cmpl
pop
lds
inc
lret
pop
div
pop
iret
int3
out
dec
int
aam
add
pop
outsl
or
dec
pop
inc
or
out
cwtl
lahf
outsb
repnz
inc
insb
shrb
cwtl
rcll
insl
aad
xor
iret
dec
mov
jnp
adc
and
adc
push
xchg
mov
xor
or
jo
test
shl
mov
rcl
jmp
scas
xchg
lods
pop
xchg
out
pushf
dec
lahf
lock
ds
xor
adc
xchg
into
into
pop
gs
sbb
and
outsl
xor
and
pop
or
mov
sub
repz
or
shrl
jp
push
fmuls
dec
in
sub
pushf
loopne
bound
adc
dec
outsl
xchg
pop
stc
sti
sub
push
cld
daa
repnz
push
jmp
fdivrl
and
xor
hlt
scas
int
jbe
lret
pop
insb
popa
fs
out
xor
test
cmp
and
loop
pop
jmp
cmp
loop
cwtl
inc
das
sbb
jo
ret
add
cmp
mov
jae
xchg
lock
push
sub
push
mov
pop
cmp
cwtl
loope
je
cmp
jae
inc
sbb
les
hlt
je
test
push
mov
pushf
shrb
cmc
adc
nop
cmp
fwait
cltd
test
xor
sbb
pop
jb
jb
mov
divb
push
push
push
scas
mov
and
cmpsb
mov
shr
mov
adc
or
jmp
popf
imul
inc
xchg
jge
out
sbb
enter
adc
mov
mov
add
xchg
inc
or
sub
mov
jno
xor
mov
xor
add
add
lock
add
mov
mov
mov
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
add
xor
sub
jmp
xchg
or
jmp
mov
push
aaa
data16
and
jle
pop
dec
mov
inc
push
pop
cld
add
shlb
pusha
lret
mov
arpl
pop
xchg
int3
push
push
pushf
sbb
and
loope
dec
je
sub
mov
scas
notb
push
cmp
mov
aaa
es
rol
xor
jmp
dec
pop
xor
insl
push
inc
mov
fisttpll
add
add
clc
rclb
xchg
mov
loope
or
pop
enter
jecxz
push
fnstcw
pop
jge
nop
mov
xchg
add
pusha
cmp
repnz
add
out
rorb
sbbl
and
cmp
lock
sub
mov
jl
repz
movsl
xchg
int3
and
xor
in
das
hlt
sub
mov
adc
sbb
movsb
daa
lock
dec
loope
xchg
test
mov
pop
inc
sbb
inc
push
das
cwtl
enter
jo
add
inc
lret
push
inc
stc
clc
aas
dec
pop
and
fisttps
sub
fists
sbb
lret
adc
mov
inc
testb
push
icebp
jns
and
daa
add
rcrl
movsl
and
ficomps
mov
sub
mov
fwait
xchg
sub
xchg
sub
pop
sub
rclb
sbb
sbb
das
pop
jo
jb
hlt
mov
js
jge
xchg
negb
mov
fcomp
std
popf
lret
mov
xchg
js
les
add
cmp
sbb
push
push
xchg
aas
pop
negb
adc
in
notb
cli
sbbl
stos
gs
sub
gs
out
dec
mov
loopne
inc
jmp
dec
push
cmp
mov
add
std
ret
mov
push
dec
inc
xchg
mov
scas
dec
repz
cmp
dec
cmp
inc
in
add
int3
and
and
jno
dec
ror
fwait
shlb
cmp
arpl
test
jle
xor
jp
ret
rdtsc
aas
mov
pop
xchg
inc
fcmovnbe
iret
test
mov
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
jmp
sbb
aam
je
and
adc
or
jle
and
jle
sub
hlt
jle
mov
mov
popa
into
scas
add
sub
mov
mov
jbe
repnz
movsb
xor
sbb
push
pop
imul
jnp
cmp
xor
cmp
or
or
clc
pop
mov
out
inc
andb
mov
pop
jp
xchg
push
cli
je
cmp
pop
push
pop
and
jne
iret
mov
push
std
sub
push
out
mov
loop
lret
push
js
adc
divb
lds
inc
sub
dec
sub
lret
test
pusha
mov
jne
loope
idivl
lcall
push
les
pop
pop
adc
push
out
dec
sub
sbb
fisttps
xchg
je
mov
cmp
and
outsl
cmc
push
das
jo
cwtl
lds
xlat
push
mov
sbbl
push
gs
dec
jmp
cli
mov
lock
xchg
fnsetpm(287
inc
xchg
and
push
dec
jb
ljmp
mov
or
mov
push
ljmp
xor
cmpb
jne
jns
mov
mov
repz
loopne
adc
fwait
sbb
rcrl
rorb
mov
and
xchg
jmp
adc
ficoms
push
imul
inc
jmp
add
adc
mov
push
xor
ret
add
mov
dec
and
jnp
cmp
sub
xchg
pop
mov
mov
pop
fs
push
fisubrl
cs
mov
roll
push
decb
scas
xor
mov
jbe
mov
xor
pop
jae
out
or
pop
into
mov
xor
pop
fadds
push
cmp
test
iret
sub
xchg
movl
and
popf
cmp
pop
and
push
into
lret
pop
ss
inc
mov
fistl
in
rcll
and
mov
xchg
das
imul
cmpsb
icebp
je
cmp
repnz
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
jmp
sbb
outsl
jno
out
jne
mov
jno
mov
and
jle
shlb
inc
add
xchg
sub
leave
jle
dec
hlt
mov
cli
sbb
movsb
pusha
stos
pop
scas
ret
leave
outsl
shl
shll
int
scas
push
cmp
mov
out
push
jl
lods
xorl
xlat
sub
mov
std
aam
cmp
out
lea
push
mov
aam
data16
jmp
cmp
fdivs
out
push
nop
fsubrs
inc
sub
push
repz
fwait
repnz
mov
push
xor
mov
sub
shr
xchg
mov
adc
loop
push
push
enter
fistl
sbb
sbb
xchg
shlb
test
jle
inc
jmp
into
dec
lds
sbb
jg
imul
jnp
lea
jae
ret
incl
pop
add
fmull
fbld
dec
jecxz
insl
sub
in
clc
and
ljmp
lock
lahf
loopne
xlat
out
jno
movsl
push
fwait
mov
jae
push
lock
push
cmp
dec
or
inc
xor
or
cmpsl
fs
mov
rol
loop
ret
addr16
cmp
xor
jbe
cli
mov
daa
dec
mov
and
bound
sbb
out
clc
int
or
mov
cli
xchg
jne
mov
inc
xchg
mov
rorl
xchg
mov
cltd
addl
push
addr16
lahf
jle
out
or
xchg
lret
jge
jmp
shr
sbb
pusha
mov
loop
add
fdivl
push
and
ljmp
push
jb
lcall
mov
ja
push
test
jp
mov
xlat
inc
dec
dec
mov
lods
push
sbb
push
add
xchg
sbb
pop
xchg
sbb
les
outsl
push
ja
jle
imul
sub
push
lds
cmp
lcall
cmp
mov
std
fs
inc
or
inc
or
jne
jmp
lods
mov
outsb
xorl
pop
shll
fcomp
jle
and
jle
ficompl
lock
cmp
cmp
ret
mov
ja
and
es
jne
or
sarl
fcomi
mov
stos
pop
imul
and
iret
mov
movsl
mov
or
dec
adcb
test
test
jns
push
push
add
and
jb
mov
ror
das
mov
cli
inc
cmp
inc
inc
mov
add
les
pushf
int
add
xor
sub
lock
mov
xor
adc
mov
imul
fisubrs
pop
and
dec
fists
test
inc
and
repnz
std
ja
in
sub
mov
xchg
cltd
sbb
aaa
or
loop
arpl
imul
in
and
ds
add
xor
roll
ret
xor
adc
inc
cmc
push
jecxz
cli
sbb
ss
in
mov
inc
mov
fisttps
adc
movsl
cmp
movsl
mov
outsl
mov
xchg
sti
add
outsl
ja
dec
into
mov
stos
pop
pop
add
pop
cwtl
stos
call
push
and
popa
mov
or
sub
out
jno
sub
dec
adc
mov
pop
sub
test
sub
jae
out
lods
rcll
lods
add
push
cmp
out
lret
test
fwait
out
add
lds
mov
rcll
adc
pop
repz
mov
jl
fbstp
and
leave
push
popa
sbb
loope
dec
out
pop
inc
lret
stos
cmc
stos
push
outsb
flds
sub
aas
jle
and
test
pop
push
xor
cs
popa
pop
add
int3
xchg
mov
nop
push
and
mov
cmpsl
idivb
and
and
rolb
and
sbb
jg
and
pop
inc
test
loope
xchg
adc
lds
popl
repz
jmp
loope
ljmp
clc
ljmp
fstpt
and
jle
xchg
inc
inc
xchg
xor
gs
es
into
sub
std
xor
push
inc
stc
fwait
dec
jo
das
adc
sti
sbb
arpl
loope
adc
xchg
pop
pop
sahf
sbb
inc
out
orl
arpl
pop
scas
push
jle
mov
lret
and
movsl
sarb
into
inc
jge
idivl
xchg
stos
add
sti
std
aad
cli
ja
insb
xor
dec
push
addr16
add
xchg
xor
add
cs
sbb
push
fnstcw
sub
fisttpll
mov
and
mov
adc
mov
clc
pop
andl
loope
out
mov
jp
test
fnstenv
test
and
push
jbe
mov
cltd
cmpsl
fcompl
and
xchg
sbb
bound
gs
push
sahf
pusha
push
inc
lret
aad
repnz
repz
sahf
mov
mov
das
or
sub
inc
daa
mulb
lret
sub
leave
jne
inc
and
jae
addl
fisubrs
sub
fmull
push
mov
cld
jo
push
mov
nop
leave
cmp
add
mov
adc
mov
cmpsl
test
sub
addl
testl
repnz
inc
cmp
insl
cmp
mov
ja
lcall
cmpsl
dec
int3
hlt
mov
loope
scas
int
push
xor
test
out
es
out
sarl
bound
aaa
cmc
pop
ret
and
fwait
cmp
or
es
push
adc
ret
xor
in
jp
xchg
gs
push
xchg
jns
clc
push
or
ficomps
pop
ret
mov
lahf
jbe
cmp
jo
sahf
pushf
lret
cmp
pop
jb
aas
xor
sbb
movsb
sub
divl
cmp
fcomip
push
push
std
mov
push
adc
insl
xchg
push
divb
cmp
hlt
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
add
movl
xor
xor
xor
mov
push
sub
mov
addl
xor
mov
add
orl
mov
mov
sub
mov
jmp
shrl
stos
fadd
cwtl
pushf
imul
jle
cmp
adc
hlt
jbe
sbb
pop
scas
cli
add
sarb
mov
sti
add
rorl
sub
clc
jo
inc
shrl
add
movsb
std
inc
pop
bound
sbbb
mov
je
pop
bound
sti
in
out
mov
aam
xchg
mov
repnz
jg
fmulp
adcb
adc
sub
shll
jb
daa
push
outsb
orb
xchg
inc
mov
jp
sub
shrl
add
and
cmp
sub
mov
mov
mov
in
mov
icebp
test
jbe
rolb
sbb
push
out
test
popa
xor
inc
fwait
cmp
negb
pop
mov
xchg
xor
daa
mov
sahf
mov
jl
xchg
das
fstpt
pop
sub
sbb
jb
cmp
mov
clc
dec
imul
dec
push
scas
lret
cld
inc
ss
shll
push
dec
jbe
mov
lcall
dec
adc
sub
and
lret
jae
das
xchg
aaa
push
push
xor
cmpsl
in
push
das
xchg
sti
pop
mov
and
push
shll
sbb
mov
jb
aam
testl
add
jno
sbb
cmp
adc
dec
push
sub
mov
mov
cmp
add
xchg
jns
add
repz
in
mov
iret
insl
pusha
lret
jge
cmpps
pop
dec
mov
fldenv
jbe
xor
lock
bound
repz
inc
xor
jecxz
aas
xor
jl
nop
data16
rclb
dec
out
mull
mov
into
loopne
mov
stc
mov
call
lret
mov
fndisi(8087
mov
mov
int3
mov
push
pusha
adc
rol
in
sub
sbb
xlat
fnstsw
sbb
push
aaa
inc
add
pop
add
add
cmpsl
lods
shrb
mov
fisttpll
arpl
jle
cmp
icebp
daa
pop
add
cmp
movsl
jl
ds
lcall
nop
cmpsl
xchg
push
call
out
lods
pop
movsl
dec
inc
or
add
mov
jge
xchg
sub
cmp
xor
add
mov
cli
pop
cmp
add
or
cwtl
out
test
into
fimull
inc
cmpsb
jle
jp
mov
add
lret
popf
lock
push
xchg
pop
repz
je
adc
jns
fnstcw
js
sbb
inc
ja
sti
xor
jmp
dec
sub
addb
arpl
pop
mov
cltd
roll
cmp
xchg
pop
jbe
add
movsl
js
mov
fwait
pop
in
sahf
sbb
imul
and
cmp
lods
mov
pop
jmp
push
mov
cli
mov
in
mov
jno
cmp
and
jo
outsl
push
in
sub
movsb
mov
repz
xor
mov
add
mov
ljmp
lgs
mov
sahf
jp
jle
into
fists
jne
add
int3
push
aaa
sahf
or
stc
shrl
notl
in
mov
mov
sub
popa
aam
lcall
add
out
cld
sbb
push
dec
notb
xchg
lea
xchg
outsb
push
push
mov
into
cltd
notb
xor
pop
fisubrs
lods
mov
stos
mov
arpl
lods
arpl
roll
hlt
jecxz
js
lahf
mov
mov
pushf
sbb
mov
jecxz
or
aas
jge
mov
adc
pop
push
jge
push
cmpsl
idivb
inc
add
pop
sub
hlt
mov
jle
cmp
or
outsl
or
xchg
mov
and
mov
adc
xchg
out
adc
sub
cmc
repnz
pop
std
push
dec
lods
cmc
aam
fxch
pop
rcl
pop
test
or
sub
jne
cmpsl
je
inc
jg
test
movl
je
mov
mov
sub
mov
mov
or
jmp
push
lcall
cmpsl
or
inc
pop
xor
jle
cmp
jecxz
sbb
push
cmc
loopne
jae
mov
aad
push
jmp
mov
sbb
mov
pop
js
pop
adc
lahf
popf
lods
cltd
push
xor
fs
inc
pop
mov
and
test
and
push
mov
scas
cli
popa
nop
xor
pusha
pop
out
or
adc
ljmp
pop
pop
stc
int3
jge
fistpll
mov
cmpsl
xlat
cmp
jo
arpl
stc
adc
or
sub
incb
push
inc
lock
in
mov
xchg
or
or
test
xchg
imul
push
jne
add
cmp
popf
stos
cmp
push
fcmovu
ss
mov
lahf
popf
jge
or
dec
stc
xchg
outsb
mov
xchg
push
mov
rcrl
push
xchg
or
ja
shr
or
in
cli
shlb
lahf
sti
ret
xchg
cmpsb
shr
jns
lcall
mov
repz
out
movsb
bndstx
mov
test
mov
ss
cmp
loope
pop
fdivr
pop
mov
jo
pop
bound
push
or
pop
ds
mov
dec
and
jecxz
jne
xchg
test
adc
push
jae
lret
adc
ds
fcompl
xor
mov
mov
cwtl
mov
mov
in
pop
out
sub
imul
dec
aad
xchg
sub
inc
add
pop
sbb
and
sub
sbb
cs
and
imul
lret
inc
imulb
jae
out
mov
stos
fwait
repnz
cltd
xchg
daa
inc
shll
adcb
cmp
xor
mov
cmp
pusha
pop
jne
icebp
aas
das
loop
pushf
ja
dec
out
pop
jno
inc
cmp
adc
lcall
mov
push
aad
or
push
out
sub
mov
mov
xchg
fdivrs
sub
mov
imul
mov
mov
sbb
add
mov
mov
xchg
adc
sub
and
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
mov
mov
sub
mov
mov
orl
mov
jmp
mov
data16
gs
jmp
xchg
ja
jl
loopne
jle
jl
jle
jno
and
scas
clc
repnz
dec
gs
int3
lods
repnz
sbb
pop
insb
mov
mov
ss
jns,pn
lret
cmp
inc
fcoms
xor
adc
xor
inc
mov
jg
stos
cmp
sbbl
adc
aam
fwait
or
rcll
addb
ds
fsqrt
bound
sub
and
mov
daa
leave
jecxz
adc
imul
sbb
das
cmpsl
sbb
and
add
add
pop
mov
lret
mov
adc
movsb
xor
mov
xchg
idivl
add
out
scas
sahf
jno
xchg
xlat
mov
jns
push
dec
xor
push
xchg
ds
repnz
in
add
push
inc
sahf
dec
mov
pop
pop
xor
sahf
idivb
shl
iret
test
push
das
mov
les
jl
or
xchg
lret
jbe
ljmp
dec
enter
mov
jne
mov
mov
cmp
pop
andl
pop
push
nop
addr16
test
mov
loopne
in
ja,pt
mov
mov
sbb
adc
js
test
fsubs
jge
xchg
xchg
mov
or
clc
fisubrs
mov
int
cmp
jl
clc
mov
inc
jmp
lret
int3
dec
hlt
inc
scas
stos
pusha
inc
ja
fwait
ss
shl
xlat
or
mov
scas
sub
ja
and
mov
jmp
movsb
lahf
outsb
pop
push
cmp
inc
movsb
dec
add
push
rcrb
popf
idivb
lahf
icebp
divl
pop
loop
ret
jae
in
mov
jne
ret
sbb
insl
fs
mov
lcall
pop
dec
jae
jmp
cmp
lds
or
mov
insl
adc
dec
outsl
sarb
daa
pusha
pusha
pusha
xor
dec
add
inc
aas
sub
ja
out
push
add
sahf
mov
lods
stos
lea
add
dec
mov
jne
xchg
push
shrl
sbb
mov
dec
mov
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
push
pushl
push
push
call
jmp
xor
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
or
add
movl
mov
mov
mov
je
mov
xor
sbbl
add
movl
jmp
imul
jno
dec
test
pusha
mov
out
jle
cmp
fiadds
cmp
test
out
aaa
mov
or
cmp
sbbl
sbb
xchg
fidivs
sarl
dec
push
iret
arpl
xchg
std
mov
ja
xchg
int3
push
rcll
dec
enter
rcll
stos
ret
rclb
addr16
sti
or
and
aad
xbegin
sbb
orl
and
sub
leave
test
mull
mov
cwtl
cltd
inc
sub
imul
fcoms
int3
fcomip
push
popa
push
rcll
xchg
dec
and
mov
push
push
mov
test
jle
dec
inc
or
adc
mov
sbb
movl
xchg
das
clc
jmp
sbb
xchg
or
imul
lods
ret
scas
jle
cmp
sahf
jo
out
loopne
cmp
jb
stc
push
xlat
jle
fidivrl
xchg
mov
insb
aaa
add
out
sahf
ljmp
push
popf
aam
pop
jo
pushf
pop
fdivp
mov
push
lret
shlb
imul
adc
es
int3
arpl
sbb
into
mov
inc
jbe
cld
hlt
jae
inc
in
test
cmpsl
sbb
insb
ja
xlat
call
call
cmp
aad
cwtl
fidivrl
push
xchg
dec
imul
dec
jle
andb
data16
push
mov
or
jg
ret
dec
nop
adc
cmp
cmp
clc
lea
data16
push
cmp
jg
push
pushl
xchg
test
in
mov
mov
dec
js
sbb
push
sbb
push
xchg
stos
dec
and
sub
ret
pop
nop
js
lds
inc
mov
and
int
fucomi
push
mov
int3
dec
adc
hlt
mov
insl
outsl
xchg
pop
scas
iret
lock
pop
icebp
popa
jp
hlt
loope
mov
mov
add
ret
fstps
xchg
adc
xchg
and
fmulp
movsl
mov
sbb
movl
jne
adcl
pushl
addl
call
sbb
mov
mov
xor
xor
or
mov
mov
xor
addl
add
movl
cmp
movl
je
addl
pushl
xorl
pushl
decl
call
movzwl
sub
jmp
or
and
loopne
shl
sti
and
pushf
adc
in
jle
cmp
mov
jns
cltd
out
pop
xor
pushf
pop
push
data16
and
mov
lds
dec
or
jnp
fnstenv
negb
out
pop
nop
pop
pop
xor
outsb
std
sub
rolb
inc
clc
mov
mov
outsl
adc
stos
out
inc
xor
mov
push
cmp
hlt
in
cmp
cld
inc
lret
pusha
into
popl
push
dec
jmp
sbb
or
add
pop
mov
xchg
arpl
push
sbb
mov
pop
roll
roll
cmp
loop
pop
sub
push
sahf
ljmp
scas
push
mov
cli
bound
fdivl
into
and
stos
nop
jge
aam
mov
push
shr
xchg
fucom
push
xchg
mov
sbb
bound
push
adc
popa
out
dec
popf
pushf
lcall
mov
sti
mov
ret
pop
adc
testb
pop
inc
ljmp
cmp
mov
xchg
and
imul
mov
jle
rcrl
imul
adc
push
test
shll
fnsave
dec
int
push
popl
and
push
push
shll
adc
ds
fadd
inc
jns
popw
mov
mov
inc
adcb
outsb
jo
in
jmp
mov
testb
imul
loopne
enter
jb
add
repz
jnp
das
jnp
bound
jo
cmp
mov
out
pop
insb
cmp
out
inc
pop
sbb
scas
sbb
movsl
gs
ja
add
xlat
push
daa
add
mov
aas
cmp
movsl
mov
xchg
ljmp
dec
rcr
leave
sub
dec
data16
pop
mov
mov
cld
lock
push
rcrb
lods
push
pop
lods
adc
mov
ret
out
roll
mov
xor
jae
nop
cmp
shl
in
push
stc
lods
push
adc
cld
xor
mov
xor
adcl
add
movl
jmp
dec
ret
xchg
push
nop
push
dec
ret
mov
into
lods
loop
shr
jle
cmp
sbb
cmp
mov
sub
sub
fcomip
dec
iret
fldcw
and
or
inc
jb
adc
into
pushf
xor
mov
mov
mov
inc
or
repnz
negb
and
pop
js
addr16
inc
push
cmp
outsb
movsl
mov
mov
cmc
fimuls
int3
in
fs
lea
sub
fwait
mov
pop
or
fnstsw
jo
add
in
jae
push
lock
sbb
sbb
push
xlat
pop
and
pusha
rol
add
test
jle
adcl
xchg
dec
jmp
pop
ficoms
fs
in
insb
jecxz
jne
dec
mov
mov
pop
test
es
push
js
out
enter
jno
sub
jmp
or
fs
push
xchg
and
push
outsb
cli
es
xor
insb
sarl
xchg
inc
mov
out
push
dec
adc
ds
adcb
cmpb
inc
loope
sbb
ret
xchg
sub
and
es
add
jbe
stos
jnp
lock
rcll
imul
insl
push
cmp
dec
mov
int3
jb
js
mov
shr
or
pop
out
loope
and
out
mov
movsb
xlat
or
movsb
cmpsl
imul
addr16
xchg
pop
insl
das
movsb
mov
movsb
sti
dec
sbb
call
sti
lods
jns
outsb
cmp
ljmp
pushf
cld
jmp
gs
movsl
xchg
pop
es
or
cwtl
inc
loope
outsb
popf
sbb
jae
or
popf
push
fimull
lea
sub
jo
push
adc
addl
ja
mov
fnstenv
leave
inc
and
push
push
ss
sub
push
dec
les
in
mov
mov
push
ja
into
mov
repz
outsb
lcall
jb
enter
movsb
or
xchg
cmp
loope
mov
test
pop
xchg
stos
pushf
sbb
lahf
sti
outsl
cmp
cmp
or
mov
cltd
sarb
pop
or
imul
add
je
add
out
aaa
inc
add
add
add
leave
or
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
adcl
jmp
stos
adc
imul
adc
lcall
jle
hlt
sbb
stos
out
add
mov
in
das
iret
xchg
cmc
mov
loop
jne
inc
mov
push
push
test
daa
fidivs
jne
jb
stc
mov
and
xchg
dec
xchg
push
out
test
popf
leave
arpl
sub
and
lret
pop
and
cmp
sub
mov
cltd
rclb
popa
dec
jb
sarb
mov
push
mov
arpl
int
out
iret
std
stos
sub
push
jecxz
mov
sbb
sub
inc
jmp
push
inc
imul
test
push
cmp
or
xchg
mov
mov
cmpsl
adc
mov
leave
xchg
adc
inc
rcrb
cmp
nop
xor
js
pusha
mov
jle
in
mov
jbe
movsb
testb
inc
or
sti
lock
xor
add
cs
xor
mov
mov
imul
insl
sahf
adc
and
scas
add
push
daa
jle
loop
inc
imul
push
les
fidivl
xchg
pop
xchg
add
adc
sub
xchg
mov
or
and
sub
adc
es
mov
cmp
and
add
push
mov
add
sbb
mov
cs
and
cmp
mov
xchg
xchg
add
push
push
fldcw
dec
cwtl
notb
aam
jmp
mov
notl
test
arpl
jg
fistps
add
jno
adc
adc
jo
mov
xchg
dec
push
inc
mov
sbb
ds
call
lds
jge
sahf
rcrb
cltd
in
mov
xchg
mov
lcall
xor
sbb
inc
mov
sahf
mov
loop
aas
jns
sub
sbb
scas
xchg
ja
hlt
fsub
add
push
pop
lods
and
lahf
call
cmp
ja
xchg
fsubrl
jge
jecxz
inc
inc
fisttpll
ror
repnz
fildl
aaa
orb
out
pop
sbb
cmp
cmp
inc
mov
xor
jecxz
shrb
call
sbb
add
in
mov
notl
add
movzbl
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xorl
jmp
push
fsubrs
push
loop
repz
idivl
cmp
lcall
sbb
add
cs
jecxz
fdivs
loope
xlat
scas
sub
mov
mull
push
in
xor
mov
mul
and
jmp
cmc
sbb
pop
aaa
push
cmc
mov
xchg
inc
outsb
scas
cmp
hlt
adc
gs
out
daa
push
cmp
repz
or
lahf
jl
stc
in
adc
testl
mov
adc
inc
dec
ffree
dec
ret
cmp
cmpsl
or
hlt
mov
scas
scas
lcall
dec
adc
daa
dec
xor
aam
ss
and
jmp
out
lods
inc
in
daa
pop
call
or
jge
lods
aam
sarb
add
cmp
sub
xor
add
jne
fwait
push
lahf
or
jmp
push
dec
fwait
jle
add
lcall
or
cli
shr
addr16
ret
lods
repz
push
ficompl
xchg
xor
jne
jo
adc
dec
test
cli
push
dec
ficompl
fidivs
add
dec
clc
pushf
and
bound
fwait
jp
sbb
call
xchg
pop
add
dec
nop
popf
pop
xlat
mov
jl,pt
negl
les
inc
dec
mov
pop
and
sbb
inc
inc
andps
cli
leave
pop
les
inc
adc
int3
add
lds
addb
mov
pop
mov
adc
cmp
popa
dec
or
adc
aas
shll
rolb
imul
xchg
jle
insl
push
or
btc
mov
mov
sub
ja
push
xor
pop
dec
cmp
add
jp
repnz
add
iret
push
push
clc
mov
mov
int
pop
ror
xor
pop
push
inc
dec
and
lcall
pushf
jp
pop
les
jb
xor
xor
scas
ds
lahf
xlat
jmp
or
fisubl
xchg
pop
fwait
fs
dec
imul
inc
negl
push
push
push
mov
xchg
or
dec
or
dec
and
pop
add
add
push
clc
jno
jno
pop
repz
push
mov
bnd
cmp
inc
orb
test
push
pop
lods
push
inc
xchg
jno
adc
rclb
inc
cmp
in
dec
inc
pop
sbb
sub
subl
or
jae
sti
frstor
dec
in
loopne
daa
sbb
xchg
les
add
stos
ret
or
mov
hlt
pop
stc
aas
or
gs
mov
mov
push
lods
cli
adc
push
and
pusha
fcmovbe
inc
fs
outsl
int
lods
insb
lcall
push
inc
testb
les
cs
push
icebp
lcall
fimuls
stos
je
sub
loope
add
dec
adc
test
mov
push
cmpsb
jno
clc
fistps
dec
push
outsl
hlt
and
mov
push
or
adc
pop
push
pop
mov
push
mov
adc
sub
cmp
imul
jle
push
add
js
cmpsl
xchg
movsl
int
dec
ret
ss
scas
mov
mov
imul
lret
mov
dec
or
cmp
test
jbe
mov
cwtl
and
adc
icebp
mov
dec
pop
jns
xchg
mov
in
lock
jns
cmp
lock
out
arpl
push
push
mov
and
in
cmc
mov
cmp
fldt
xlat
test
icebp
xlat
push
nop
ror
in
sti
push
cmp
rcll
push
pop
arpl
and
add
and
jp
test
xor
jns
cmpsl
xchg
cmp
imul
xorl
cld
adc
mov
rolb
dec
rcl
dec
cmp
dec
ss
mov
lea
adc
mov
add
into
into
cmp
mov
mov
clc
insb
mov
stc
adc
jge
sbb
lods
mov
pop
sbb
leave
out
idivl
ror
cmp
inc
pop
int3
add
adc
fisttpll
xchg
cmp
xlat
mov
push
ror
mov
cli
test
sbb
adc
in
dec
into
loopne
mov
mov
mov
add
xor
mov
mov
mov
add
lea
mov
push
jmp
pop
pop
sub
imul
call
inc
call
jl
jle
icebp
inc
xchg
and
lahf
xor
xchg
int
or
xchg
mov
fisttpl
outsb
pop
or
stc
adc
xchg
lods
add
cmp
mov
sub
jo
mov
aas
test
test
xor
ljmp
sti
mov
int
lret
cmpsb
xchg
test
and
adc
lahf
mov
mov
loopne
cmp
std
ss
loope
or
mov
aad
outsb
mov
daa
jg
push
xor
test
fwait
gs
add
mov
or
adc
ds
mov
scas
jae
cmc
mov
cld
into
loope
jmp
jns
insl
subb
or
es
or
shrw
xchg
pop
inc
mov
jg
inc
test
ljmp
gs
aad
cmp
mov
push
cmp
gs
adc
iret
jmp
jmp
jno
sub
add
icebp
mov
insb
out
fmuls
and
adc
into
or
xor
mov
adc
sbb
jo
aaa
cltd
jmp
xchg
enter
add
mov
lods
adc
push
sbb
test
sub
cwtl
push
rcl
mov
stc
lods
fxtract
mov
adcb
xchg
pop
enter
inc
movsb
jb
and
push
add
orb
sbb
lods
test
out
xlat
aam
cmpsb
xor
in
add
sti
push
pop
ret
leave
repz
sub
outsl
outsl
xchg
xchg
mov
scas
push
cli
mov
dec
imul
fcomps
jno
js
pushl
mov
push
orb
xchg
jbe
je
mov
sub
bound
adc
je
cltd
push
inc
add
insl
cmp
inc
jb
adc
ja
imul
mov
into
cli
enter
das
lods
mov
js
popf
mov
js
xchg
cmc
movsl
inc
mov
cmp
jne
pushl
call
mov
mov
xor
add
cmp
jne
jmp
mov
jo
das
pushf
dec
je
cld
push
jb
mov
jle
cmp
and
rol
and
xor
sbb
stos
fcoml
shlb
cmp
imul
xor
scas
inc
sub
mov
into
daa
jnp
pop
cs
jns
sub
add
loop
pop
and
into
mov
lret
fcomps
test
jecxz
or
fs
pushf
notl
jl
je
mov
ja
dec
xbegin
adcb
sahf
dec
popf
jno
mov
ljmp
bound
in
xchg
jo
test
jp
aaa
and
xor
cmp
and
mov
shll
or
repnz
mov
pop
cmp
mov
mov
insl
push
or
or
xchg
outsl
lahf
add
or
pop
imul
jl
stos
dec
dec
shrl
ret
and
push
ret
mov
mov
inc
icebp
daa
add
cmpsb
int
mov
mov
or
shlb
pop
lahf
outsl
into
cs
addr16
push
mov
inc
or
sarl
ds
es
fldenv
lret
repz
inc
and
xchg
addr16
adc
push
hlt
pusha
ds
test
pop
es
push
dec
add
jge
add
push
pop
shll
or
fdivrl
xor
or
dec
cmp
fwait
xor
leave
iret
sti
int3
inc
mov
or
mov
les
fidivs
cmp
jne
add
or
push
jl
repz
xchg
or
test
movlhps
loop
popa
jp
repz
and
dec
xchg
jo
stos
jle
scas
pop
cmp
mov
js
jae
jne
mov
and
inc
xlat
or
gs
push
sahf
fwait
pop
jb
fcmove
mov
fwait
dec
mov
out
stc
cmp
mov
in
sahf
push
ficomps
and
push
xlat
jno
xor
jg
fs
ss
cmp
jmp
mov
mov
loopne
adc
sub
sub
xchg
inc
sub
mov
pop
push
jbe
inc
loopne
cmp
jb
jmp
mov
xor
add
jmp
mov
jmp
test
popa
lahf
jno
inc
xor
imul
jle
cmp
jne
add
in
push
mov
fldenv
fcmovnb
xchg
jp
mov
orb
sub
xor
sub
jl
lods
es
mov
dec
in
jno
ret
or
and
adc
pop
clc
mov
or
pusha
notb
bound
jns
scas
outsl
push
cmp
inc
pop
cmpsb
scas
cltd
mov
push
or
hlt
push
push
and
mov
xor
xchg
cmp
les
sbb
cld
jnp
and
mov
stc
adc
pop
mov
xchg
push
shrb
push
sub
lds
repnz
scas
scas
jecxz
js
mov
loopne
test
popf
gs
xor
js
mov
ret
xchg
out
pop
mulb
shlb
in
lds
and
add
lea
push
xchg
lods
aam
pop
dec
in
pusha
int
xchg
or
lock
je
out
stc
scas
daa
dec
popf
sub
mov
outsb
dec
pushf
lods
inc
scas
aaa
jl
sbb
cmpsb
jle
jo
pushf
repnz
pop
outsb
clc
or
push
mov
ret
imul
dec
data16
loop
outsb
outsb
es
test
call
jmp
mov
mov
cmp
ljmp
mov
push
adc
pop
pop
movsb
popf
cltd
sub
daa
xchg
adc
or
dec
fistps
or
stos
or
xor
mov
mov
in
sub
shlb
das
out
sub
out
sbb
nop
cmp
mov
or
mov
aas
call
cmpsb
rolw
out
lret
cli
dec
and
cmp
lahf
rcll
shlb
loopne
insl
sub
dec
in
mov
xchg
jno
mov
fcomi
je
sub
sub
divps
mov
fistps
call
mov
pop
dec
nop
push
xor
add
in
rol
stos
nop
mov
repz
mov
and
mov
push
loop
mov
js
dec
in
mov
mov
mov
mov
xor
add
cmp
jne
mov
jmp
into
mov
shlb
stos
mov
mov
sti
jle
cmp
fidivl
clc
ror
sbb
mov
jb
jo
addl
sbb
popa
vunpckhps
mov
in
mov
outsl
les
icebp
jmp
imul
jecxz
adc
mov
inc
sbbl
lret
mov
inc
insl
insl
popa
sbb
xchg
test
mov
mov
jecxz
sub
lock
pop
aad
add
pop
xchg
roll
pop
in
jmp
xchg
fisubrs
mov
sub
xor
dec
push
mov
out
pop
push
mov
movsb
mov
orl
mov
dec
shl
ror
cmc
cmc
jnp
iret
dec
jo
inc
xchg
popf
fiadds
aad
std
in
adc
paddsb
mov
xor
loopne
fs
mov
inc
jne
xchg
and
fwait
bound
data16
das
and
pop
push
test
cmp
movsl
dec
dec
rolb
aad
mov
xchg
sahf
sub
or
mov
lcall
mov
out
mov
rorl
jnp
mov
xor
or
jl
aas
nop
xchg
dec
xchg
test
or
or
push
lds
imul
mov
aas
hlt
inc
mov
mov
sub
scas
or
pop
and
mov
push
rorb
inc
mov
add
push
lds
pop
insl
mov
xor
ds
dec
sbb
pop
jmp
sub
mov
mov
lods
and
cmc
dec
inc
jo
enter
push
mov
fwait
or
insl
ret
xchg
push
rol
loopne
in
mov
mov
icebp
int3
pushf
add
aaa
testb
dec
dec
movsb
ret
jnp
mov
jmp
daa
out
push
rcll
movsb
push
mov
mov
sti
je
xchg
jl
repnz
mov
ret
push
xchg
or
lcall
or
xor
push
insb
std
ret
xlat
cmpsb
movsb
mov
xchg
idivl
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
jmp
pop
jbe
push
scas
or
push
stc
jle
cmp
test
call
adc
lea
push
out
xchg
sub
or
jg
mov
add
mov
ja
mov
mov
add
adc
cmp
out
daa
adc
or
mov
xchg
call
fwait
mov
jg
jbe
lcall
imul
mov
mov
pop
rcrl
jmp
push
fs
addr16
mov
xor
sub
sti
scas
int
jecxz
push
lcall
and
dec
dec
sub
cmpsb
mov
or
xchg
dec
stc
je
std
dec
lret
int3
dec
add
enter
jmp
ljmp
ds
loop
or
out
jbe
test
mov
filds
gs
and
ret
jl
in
imul
inc
mov
push
rolb
mov
pushf
push
pop
stc
das
add
sahf
ja
movsb
mov
loopne
add
dec
rcl
addr16
push
xchg
outsl
sarl
push
xlat
sub
lods
mov
add
add
or
xlat
cmpsb
mov
sbb
inc
and
push
sbb
jecxz
imul
mov
test
es
push
mov
jae
add
xchg
popl
jecxz
call
cmpsb
call
fwait
sbb
push
fs
xchg
in
jns
pop
imul
add
mov
jge
bound
enter
rol
imul
push
xor
imul
ss
ljmp
es
neg
call
cmp
ss
and
push
cwtl
lret
cwtl
xchg
push
pop
mov
imul
or
mov
leave
add
pop
cwtl
add
stc
pop
outsl
lahf
jne
and
inc
adc
cmp
sbb
push
cmc
imul
or
sub
inc
mov
roll
inc
dec
mov
mov
jb
mov
sub
iret
repz
pop
jno
in
aas
push
pushf
hlt
xchg
js
ret
or
lods
daa
in
outsl
mov
jle
lret
dec
mov
imul
sub
mov
jmp
dec
loop
lds
push
jo
mov
sub
mov
jle
cmp
rcrb
xor
and
daa
scas
jecxz
xor
in
add
int
stos
movsl
dec
rclb
mov
mov
cmp
xchg
ret
std
repnz
dec
cmp
or
mov
push
leave
dec
div
addl
push
sub
xor
xchg
xor
fiaddl
mov
push
mov
stos
cmp
cmpsb
sub
cmpsl
aaa
dec
xchg
sbb
fiadds
ljmp
xchg
fldcw
arpl
enter
push
ret
movsb
adc
scas
outsl
pop
inc
cmpsl
cmpsl
xorb
mov
js
push
leave
or
outsb
dec
dec
push
outsl
sbb
mov
loopne
cmpl
in
out
inc
jg
and
les
add
cwtl
ffree
les
mov
rorb
icebp
int
xor
adc
cmp
lods
add
mov
inc
int3
es
push
dec
push
sbb
mov
pop
or
add
jecxz
adc
jp
jmp
lret
mov
mov
sub
std
sub
or
cld
cmovb
fiaddl
movsb
loopne
ud2
push
rorl
aaa
fs
cmp
insb
cld
les
sarb
mov
mov
sbb
stc
loope
adc
or
add
cmc
mov
mov
dec
ficompl
aam
mov
mov
cmp
fdivrs
mov
mov
add
push
popf
loop
movaps
rorb
mov
repz
outsl
in
cltd
lock
xchg
lahf
mov
mov
sub
cmp
push
push
rorl
cmp
dec
jns
add
dec
sub
fmuls
jp
cmpsb
loop
cmp
or
push
sbb
repnz
call
and
ds
adc
add
fnstcw
aaa
mov
pop
ja
jb
pop
insl
lcall
lcall
arpl
aaa
push
pop
fistps
xor
lods
xchg
test
enter
fs
call
leave
out
jns
fisttpll
xor
sbb
or
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
jmp
dec
scas
push
pop
cmc
arpl
pop
clc
push
roll
jle
cmp
mov
and
stos
mov
aad
cmp
mov
int3
fisubl
xor
std
push
ret
aam
inc
mov
mov
adc
jo
mov
mov
test
dec
jbe
rolb
fdivrl
add
cmp
xor
jle
cli
push
inc
jl
mov
inc
cmp
pop
add
scas
lcall
mov
sbb
sbb
xchg
jge
cmp
cwtl
ficoml
or
and
add
les
xchg
aad
rcrl
lret
aaa
rcl
lods
negl
jno
aam
pushf
mov
sbb
iret
xchg
andl
jecxz
repz
pusha
jl
inc
sbb
jge
cmpb
inc
jp
hlt
cmp
push
pushf
fs
xor
addr16
int3
sub
shll
cmp
rolb
xchg
fists
in
mov
lods
nop
das
lods
notl
movsl
sbb
rclb
add
loopne
dec
cld
mov
mov
int
mov
pop
dec
adc
fnsave
mov
or
bound
in
fnstenv
out
jmp
imul
pop
push
pushf
sahf
lahf
sub
or
and
aad
jnp
lock
movntq
out
sbb
cmp
sub
dec
js
ss
xor
sub
xchg
pushf
sub
jecxz
sub
xchg
ds
sbb
dec
insb
sub
cmpsb
shrb
or
dec
pop
scas
xchg
pop
mov
adc
flds
mov
xor
lods
jae
pop
dec
push
xchg
test
mov
and
ret
inc
pusha
int
push
cli
xchg
and
cwtl
push
imul
mov
in
cmpsb
scas
ret
iret
pop
dec
mov
pop
adc
out
repz
cwtl
mov
inc
xor
repnz
add
or
or
movsb
nop
daa
xchg
scas
out
testb
aad
aam
xchg
hlt
dec
cs
fldz
mov
add
inc
push
fstps
lods
scas
pop
dec
enter
xor
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
jmp
leave
adc
cmp
xor
loopne
fiadds
jle
fpatan
jb
mov
push
call
leave
xor
repz
or
jbe
fwait
push
cmp
push
dec
jo
push
sbb
push
insb
push
int
arpl
and
divb
ret
subb
aas
lods
mov
jns
mov
aam
adc
cmp
adc
mov
pop
xor
imul
cmpsl
jp
xchg
fcomp
xchg
sub
shrb
jecxz
push
lods
lahf
xchg
xchg
mov
fsubl
pop
rcl
cmp
rclb
mov
femms
mov
lea
lods
outsb
popf
push
fmul
imul
out
fmuls
add
jge
dec
mov
mov
sbbb
jo
inc
clc
and
pop
lds
dec
mov
push
xchg
pusha
fisttpl
adc
enter
outsl
add
sbb
fnstenv
dec
insl
add
jbe
mov
lea
pop
dec
sub
pop
sub
cmp
in
in
hlt
dec
roll
test
popf
paddsw
xchg
in
movsb
mov
push
dec
pusha
lea
iret
lret
cmc
cmp
mov
enter
xor
jp
arpl
dec
loopne
mov
rcr
adc
insb
jne
or
insb
jb
insl
das
lret
fcompl
aam
stos
test
adc
movsb
int
mov
or
xor
push
scas
stc
icebp
sub
ds
jge
xor
pushf
xor
lahf
mov
es
cmp
mov
pushf
fcoml
mov
pop
dec
outsb
int3
lcall
clc
jns
cmpsl
inc
dec
mov
pop
push
dec
lret
cmpsb
and
xor
push
out
test
adc
jp
add
mov
fwait
xor
ljmp
jmp
ljmp
lds
add
rorl
out
jo,pn
xchg
add
or
mov
fists
jmp
dec
pop
inc
pop
mov
xor
jmp
pop
mov
cwtl
mov
mov
cmp
push
cltd
rcrb
jl
jle
roll
jmp
lods
and
jp
gs
iret
dec
into
incb
jo
and
rcr
dec
int3
xor
inc
dec
ljmp
mov
dec
in
hlt
stc
stc
rcll
je
addr16
daa
mov
add
repnz
push
xchg
fildll
push
test
jge
or
test
sub
icebp
add
push
sub
movsl
in
and
mov
cs
xor
ret
mov
xchg
popf
lods
xchg
jl
xchg
pop
or
inc
outsb
push
sub
jle
jne
jae
adc
fidivs
mov
fimull
jp
pop
test
fbstp
outsb
dec
andl
pusha
fdivrl
pop
fistps
jp
sub
dec
orb
sub
cs
push
sub
subl
aam
test
adc
adc
loop
add
lea
outsl
adc
test
mov
mov
and
mov
push
cmpsl
inc
mov
cs
jl
adc
sbb
js
lret
mov
xlat
pop
adc
pop
xor
add
hlt
pop
movsb
das
jae
sub
ret
lret
or
test
mov
xchg
sti
inc
scas
aas
dec
shlb
jmp
idivl
sub
icebp
jo
in
push
pop
xchg
mov
jns
inc
mov
in
aam
jmp
ret
ljmp
sub
xor
pop
cmc
dec
dec
in
pusha
out
cli
jl
mov
scas
push
mov
test
out
fmull
sub
sbb
jns
sub
xchg
es
mov
iret
insb
arpl
rorb
les
in
add
icebp
xchg
mov
xchg
cmpsl
add
sub
int
cmp
xlat
mov
sub
ret
in
sbb
aas
out
test
sub
mov
pop
test
dec
mov
mov
lods
or
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
jmp
imul
push
int3
xor
ror
mov
jle
cmp
inc
mov
popf
dec
xor
mov
adc
int3
cs
dec
xchg
jne
bound
loope
ret
in
addr16
dec
adcb
icebp
jb
faddl
xchg
adc
movsl
call
push
or
pop
and
adc
test
shr
xchg
inc
push
sbb
loope
sahf
jg
or
aad
rclb
adc
inc
xchg
sub
and
xchg
xchg
push
sub
arpl
js
pop
dec
subl
jg
mov
mov
xlat
cmp
jp
shll
sbb
popf
ljmp
dec
or
movsb
mov
dec
xor
xor
push
fwait
pop
adcb
adc
push
mov
sub
js
leave
aaa
cmp
and
insl
pop
jl
aaa
stos
popf
dec
movsb
jecxz
pop
mov
cmp
test
fdivs
and
sarb
jmp
ret
mov
scas
and
mov
in
dec
pushf
lcall
dec
mov
mov
stos
adc
push
mov
clc
mull
inc
out
sbbb
adcb
inc
mov
or
cwtl
jl
inc
sub
push
cmp
mov
repnz
xchg
loop
add
es
sbb
dec
mov
jns
add
out
out
mov
mov
pop
jb
adc
mov
imul
das
testl
cmp
xchg
mov
mov
dec
nop
es
or
es
rorl
mov
leave
ja
or
sub
fwait
sbb
mov
xchg
iret
lret
jp
popf
aas
add
daa
sahf
stos
scas
mov
pop
mov
jmp
movsl
pop
sub
and
in
xlat
ds
mov
or
shr
xlat
xchg
movsl
fimull
pop
stc
mov
or
shll
daa
add
add
adc
add
or
rol
mov
outsl
iret
sbbb
xchg
jmp
push
std
dec
sahf
push
push
add
and
je
sub
jle
cmp
cmpsl
dec
sub
jg
xor
jnp
lret
adc
repz
stc
daa
dec
and
arpl
mov
les
rcll
sub
nop
sbb
dec
dec
shll
enter
loop
xor
inc
sub
cmp
mov
pcmpgtd
jle
dec
sahf
imul
sbb
pop
cs
leave
addr16
add
xchg
ret
adc
push
dec
addr16
imull
mov
cltd
clc
cwtl
jne
ret
sub
shll
mov
xor
mov
xchg
mov
mov
outsb
cwtl
in
arpl
inc
fstps
les
push
mov
inc
cmp
xor
das
dec
push
adc
pop
sbb
rcrl
mov
sbbb
cmp
lea
in
mov
scas
inc
add
addr16
es
mov
test
icebp
mov
mov
jle
cltd
push
vphaddubw
mov
inc
stos
stc
pop
mov
xor
cs
jne
pop
inc
lret
sahf
cmp
xchg
shl
inc
xchg
outsl
imul
clc
or
cmp
out
mov
and
mov
pop
outsl
dec
xchg
ffree
in
adc
push
addr16
aas
aaa
fincstp
jne
scas
xchg
xor
fadd
popa
mov
sti
iret
shrl
and
into
push
insl
rcl
fdivl
jmp
pushf
pop
xor
push
xchg
pusha
mov
adc
cmp
and
push
adc
mov
xchg
add
repz
in
xchg
jmp
sbb
fwait
mov
xchg
cmpsb
popf
push
gs
test
fwait
popf
lock
hlt
bound
int
inc
lahf
jnp
add
cs
repz
fwait
mov
pusha
hlt
mov
in
pop
jp
mov
sahf
inc
mov
push
imul
cmp
mov
or
scas
lods
push
aad
inc
neg
mov
mov
xchg
pop
stos
es
dec
mov
imul
add
xchg
jmp
sahf
testb
push
repz
jae
ficoms
cmpsb
inc
es
testb
jle
filds
cmpsl
xchg
mov
push
pop
imul
cmpsl
sub
push
xchg
lret
add
lret
mov
add
sbb
adc
add
in
ss
pusha
jae
or
loop
sarb
xchg
in
jb
and
jmp
in
mov
lock
pop
pop
sub
and
adcb
mov
mov
and
scas
and
cmp
pop
cwtl
adc
push
test
mov
in
stc
jno
divl
lds
andb
mov
cmp
ds
cmp
mov
ret
fs
aaa
and
aad
inc
andb
popa
pop
shrl
cmp
pop
cmova
mov
in
je
popa
ljmp
insb
jbe
je
sbb
loopne
and
pop
push
mov
aaa
mov
ss
cmp
adc
mov
sbb
leave
mov
rcll
jge
aad
mov
add
mov
repnz
dec
sbb
inc
out
mov
and
lret
cmpsb
sbb
stos
dec
cli
clc
pusha
cmp
dec
push
stc
popa
sub
scas
jae
mov
dec
pushf
js
outsl
sbb
inc
testw
ljmp
jae
loope
nop
aaa
lods
lahf
xchg
xchg
mov
aas
mov
loop
push
push
xchg
arpl
cmp
scas
xchg
cmp
mov
fdiv
sbb
stos
enter
cmp
mov
fwait
das
mov
and
lods
pop
mov
and
mov
nop
inc
fisttpl
insl
negl
jno
loope
and
outsb
add
repz
pop
lods
push
cmp
pop
pop
mov
mov
pushf
decl
or
test
sbbl
ficomps
aam
xor
lea
scas
mov
adc
sub
jecxz
ja
jl
add
fnstsw
xchg
dec
sbb
jno
xchg
or
add
cwtl
adc
inc
pop
dec
int3
push
xor
mov
dec
jmp
fwait
push
mov
mov
mov
pop
add
jle
cmp
int3
and
cmpsb
ret
pop
das
into
movsbl
add
mov
sub
mov
pop
loopne
inc
cmp
sub
insl
push
pop
cmpsl
das
ss
xchg
fsubrl
cwtl
pusha
rcrl
mov
lods
inc
js
pop
mov
loop
push
push
das
push
sbb
lcall
ljmp
xchg
xorps
inc
pop
sbbb
ss
sbb
dec
test
lds
daa
add
pop
xlat
fs
jbe
add
outsb
add
in
sahf
outsl
jmp
sub
dec
add
rclb
jne
gs
lret
enter
jbe
insb
push
gs
adcl
stos
outsb
outsb
jb
pop
pop
icebp
inc
or
sbb
sbb
mov
mov
mov
or
ja
inc
fimuls
push
cmp
data16
mov
imul
and
dec
inc
cmp
js
mov
arpl
add
lods
mov
jmp
mov
mov
add
loopne
in
push
stc
xchg
xor
xchg
xchg
jecxz
outsl
lret
or
in
stos
lcall
insb
pushf
cltd
nop
mov
and
fwait
mov
stos
aas
xor
sbb
mov
or
imul
xor
mov
stos
scas
jnp
pusha
daa
cmp
mov
or
adcb
dec
insl
or
dec
pop
mov
ror
push
dec
shll
mov
mov
movsb
lahf
xchg
mov
mov
scas
repnz
cmp
and
and
nop
xchg
cmpsl
pop
outsb
lret
ljmp
push
jne
int
xchg
mov
cmp
mov
xor
fmulp
scas
fs
cli
pusha
dec
inc
jmp
mov
jp
dec
pop
scas
ljmp
insb
fcoms
cmp
repz
loopne
cmp
movups
mov
lahf
sahf
sbb
sub
mov
adc
sbb
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
not
push
mov
mov
movl
mov
push
movl
mov
movl
mov
push
not
mov
notl
mov
movl
cmp
movl
je
mov
mov
subl
xor
add
movl
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
movzbl
add
mov
mov
xor
add
push
pushl
pushl
mov
call
mov
mov
jmp
mov
jo
adc
jnp
or
jle
jl,pt
jle
rcrl
adc
jmp
lret
sbb
or
out
and
jb
mov
stc
add
mov
fdiv
scas
cmc
fldenv
adc
loop
mov
popf
push
es
and
stc
into
ds
jae
lods
sbb
sub
dec
cmp
lods
outsb
or
jmp
int3
data16
cwtl
call
jp
mov
mov
dec
mov
mov
push
dec
cltd
pop
cmp
sbb
pop
loop
xor
dec
jp
icebp
adc
pop
daa
addr16
ds
xor
mov
iret
decb
out
mov
lds
test
adc
cwtl
adc
xchg
mov
adc
pop
testb
jmp
adc
jne
adcl
test
std
cltd
pushf
fistpll
xchg
rcl
arpl
mov
inc
mov
mov
int3
or
fstl
or
push
adc
dec
popl
sbb
xchg
pop
pop
icebp
xlat
leave
xor
pop
ror
fdivrs
outsl
sarl
adc
inc
inc
dec
cmp
or
cld
pop
cli
scas
sbb
xor
jae
xor
adc
sbb
sub
mov
cmp
sti
pop
adc
fwait
mov
aas
cmp
mov
sahf
imul
loopne
and
ljmp
cmpsb
out
scas
enter
mov
xchg
aas
mov
mov
addb
loopne
adc
jae
push
sarl
loop
hlt
mov
adc
hlt
dec
clc
das
sub
adc
scas
mov
fistpll
jmp
and
repnz
shl
cmc
xchg
mov
pop
xor
sahf
lahf
xor
loop
jb
mov
lock
test
ljmp
jmp
jne
lds
ret
fcoml
out
mov
fcomip
mov
mov
jbe
cwtl
loop
ljmp
out
js
movsl
sbb
sti
pop
shr
mov
inc
loop
bound
add
clc
sbb
jmp
mov
mov
xor
add
jmp
orl
imul
lea
cmp
jle
out
and
mov
push
loop
clc
pop
jmp
pop
or
push
push
into
filds
push
dec
loop
dec
adc
nop
jnp
pop
rclb
repnz
pop
stc
or
fidivs
push
out
adc
bound
jl
dec
rcrb
cli
mov
add
adc
adc
fisttps
and
iret
out
scas
push
insb
adc
shll
sti
lahf
mov
mov
inc
mov
push
cmp
ljmp
xor
inc
sub
and
paddw
repz
es
mov
and
sbb
adc
cmp
cmp
aam
xchg
dec
das
mov
lcall
decb
mov
outsb
fwait
xchg
iret
imull
aaa
lock
mov
fldl
or
movl
cmp
sub
cmp
mov
lcall
lahf
icebp
inc
jb
push
pop
adc
ljmp
mov
or
sbb
mov
xchg
rolb
rsm
sbb
dec
dec
stos
or
adc
ret
push
and
push
push
lods
add
ljmp
inc
lret
cmpsb
jmp
pop
aam
cld
xchg
add
sbb
and
pop
mov
jno
incb
loopne
js
pushf
clc
jecxz
mov
out
mov
aam
jp
and
in
lods
stos
lea
xchg
mov
or
shrb
outsl
pop
pop
in
imul
cs
add
enter
mov
pop
popa
fwait
lcall
adc
add
pop
mov
and
subb
rcll
xor
pop
rcl
mov
mov
add
mov
and
lods
bound
incb
pop
aas
pop
hlt
fdivrs
hlt
movsb
addr16
or
aad
in
in
aas
dec
loop
loopne
aad
out
pop
sbb
test
std
inc
into
lret
jnp
rorl
addb
add
jmp
mov
loopne
adcl
sahf
jle
jl,pt
jle
dec
xorb
xorl
push
dec
adc
dec
pop
jmp
pop
lret
insb
mov
js
sub
and
mov
inc
mov
cli
std
mov
aas
ss
inc
cltd
inc
stos
aad
cmp
push
dec
dec
clc
ret
mov
imulb
test
out
jns
inc
xchg
or
jle
nop
pusha
pop
lahf
pop
call
outsb
push
scas
pop
nop
aaa
add
test
enter
cmp
fistpl
jnp
adc
pusha
movb
mov
fistps
sub
or
xor
sbb
sbb
xchg
jg
mov
xor
ljmp
inc
sbb
mov
in
cmp
shlb
xor
test
cmp
in
and
mov
cmpsb
jnp
fs
mov
ja
ss
mov
or
inc
sbb
gs
jo
jbe
jle
ljmp
mov
adc
dec
lods
and
sub
out
inc
jp
jb
and
mov
xor
popf
js
sahf
or
pushw
out
sub
call
aas
fisubl
imul
insl
rclb
and
push
xchg
mov
call
jge
add
ds
dec
out
pop
repnz
notb
adc
xchg
or
insl
mov
sbb
ljmp
fs
dec
dec
into
stos
push
adc
push
dec
rolb
and
sub
inc
sub
jb
insl
xchg
sbb
iret
mov
cmp
pop
mov
inc
jl
bound
inc
sub
pop
xor
push
cmpsb
aam
xor
or
sub
ds
push
divb
dec
sub
movsl
int3
hlt
leave
sbb
or
add
and
mov
addb
xchg
xchg
jnp
push
lds
fcoms
es
sbb
mov
sbb
fs
jmp
dec
adc
inc
xor
jp
push
or
push
inc
scas
repz
push
outsl
sahf
dec
fucomp
lock
pop
inc
sub
test
cmp
in
mov
add
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xorl
jmp
push
inc
jb
jb
icebp
fisubrs
into
negl
sbb
mov
jg
jle
sti
push
push
add
pop
ja
test
lods
or
cmp
mov
inc
lds
hlt
and
or
fisubs
jl
or
scas
push
jo
pop
sub
sahf
push
imulb
adc
das
divl
jp
mov
lds
out
sbb
cmpsb
inc
mov
jge
out
insl
sbb
dec
inc
daa
gs
lds
xchg
xchg
sub
insb
fisttpll
rcll
push
in
aas
mov
inc
in
ret
scas
inc
icebp
push
pop
mov
jo
cmc
aam
mov
jo
sbb
sti
subb
fcoml
shrb
jb
cs
cmp
pop
fisttpl
insl
iret
mov
push
push
clc
subl
sbb
push
adc
insl
pop
in
or
mov
or
mov
fisubrs
aad
in
ljmp
jg
mov
xor
std
outsl
push
nop
sub
add
mov
xlat
ss
fistpll
inc
mov
subl
push
subl
push
or
mov
jmp
cmp
shll
xor
stos
addr16
std
add
jle
adc
jle
in
pop
insl
mov
xor
sub
aam
xchg
cmc
adc
imul
pushf
inc
jecxz
cmp
cld
ds
sub
cwtl
mov
fidivl
or
loopne
and
shrl
mov
ds
mov
arpl
cmp
push
fldenv
test
jl
outsb
inc
mov
adc
jg
sbb
pop
jae
shll
sbb
cmp
mov
addr16
inc
lods
mov
xchg
hlt
jbe
lods
outsl
push
cmpsb
xchg
and
lods
scas
mov
enter
add
pop
xchg
pushf
cmp
cmp
call
pop
in
popa
into
mov
and
pop
dec
push
cmpsb
cli
mov
mov
and
cmpsl
mov
or
aaa
xchg
daa
pop
adc
xor
aam
stos
sahf
loop
inc
cmpl
xchg
xchg
gs
dec
add
add
bound
aas
jae
cmpsl
fcmovnu
xchg
mov
movsb
mov
movb
xchg
and
add
xorl
add
push
jmp
pop
jecxz
call
and
out
mov
lcall
adcb
icebp
test
addl
ss
in
cltd
mov
flds
mov
mov
shl
insb
cmp
repz
or
popf
fnstsw
sbb
decb
aad
aas
int
mov
mov
and
sahf
mov
hlt
pop
sub
or
sbb
add
pop
adc
testb
sub
xchg
mov
stc
lds
sub
sub
inc
nop
call
adc
xor
xchg
fistps
mov
push
rol
adc
xchg
out
xorl
jmp
cmp
fnsave
outsl
ret
sub
movsl
inc
cmpsb
push
pop
data16
stos
movsl
lahf
lcall
mov
shl
and
xchg
gs
jle
push
cltd
aaa
jno
leave
fldt
pop
adc
mov
push
mov
pop
mov
sbb
jae
sbb
pop
mov
mov
incl
xor
addl
movl
movl
decl
add
movl
jmp
cmp
jne
movzbl
mov
mov
movl
mov
movl
mov
movl
mov
movl
mov
movl
jmp
movl
cmp
movl
jne
xorl
andl
mov
addl
sub
xorl
push
sbbl
mov
movl
add
push
call
movl
incl
cmpl
movl
jb
movl
jmp
movl
cmp
movl
jne
movzbl
and
movl
addl
mov
mov
mov
mov
and
jmp
test
test
mov
jo
stc
ret
or
mov
adc
jle
lds
xor
mov
xorb
pop
sbb
repz
mov
xor
push
sbb
push
cmp
test
idivb
sub
cmp
inc
push
rorb
movb
mov
sbb
test
daa
or
pop
icebp
cmc
xor
pop
pop
adc
sbb
mov
dec
sub
dec
mov
out
sub
jae
mov
add
pop
ret
scas
dec
cs
andl
popf
out
sub
dec
xor
cmp
bound
push
scas
mov
pop
pusha
out
lea
or
sub
lcall
mov
in
xchg
mov
ljmp
sub
mov
dec
scas
mov
pop
mov
mov
add
adc
and
and
call
jle
mov
sbb
sbb
sub
or
hlt
mov
test
fstpl
inc
jle
test
pop
mov
mov
orl
xor
add
sbbl
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
jmp
shlb
sub
sub
jle
jg
jle
aas
jle
mov
mov
cmp
in
movsl
inc
les
fwait
sub
jg
mov
lret
xchg
cs
xchg
pop
pusha
add
dec
int3
in
sbb
mov
jl
js
imul
std
cmpsw
sbb
or
outsb
mov
jno
cmpb
xor
out
adc
and
inc
sti
mov
es
clc
popf
aaa
jbe
inc
fidivrl
push
sub
add
mov
iret
mov
fwait
icebp
inc
mov
mov
rol
das
pop
push
addr16
mov
fs
fnstsw
dec
je
lds
test
or
insl
ss
out
sbb
cmpsb
mov
cs
mov
fcmovnu
cld
scas
dec
push
testl
mov
lds
fiadds
subl
xchg
mov
std
cmpsb
insb
sbb
or
push
cmp
out
cltd
ds
mov
mov
gs
cmpsb
adc
scas
jge
in
sub
lods
int
or
mov
mov
mov
jmp
jb
lods
ljmp
mov
into
cmpsb
jle
adc
jle
lods
insl
xor
rclb
and
shrb
lea
dec
aam
mov
mov
or
sub
cmp
fdivrs
aaa
test
mov
xchg
mov
in
test
cmp
fidivrs
pop
pop
or
xchg
int3
std
cli
repz
ljmp
roll
lcall
int3
or
xor
lret
shll
insl
fwait
mov
popa
xchg
clc
mov
xor
inc
cmp
stos
sub
xor
aam
outsb
fxch
sbb
pop
mov
in
imul
and
jns
and
cmp
je
mov
shlb
daa
mov
aad
sub
inc
enter
outsb
xor
je
dec
mov
mov
mov
into
imul
sub
inc
add
dec
imul
jge
and
inc
cmc
bound
pop
fmul
adc
jbe
mov
pop
mov
out
adc
dec
mov
add
adc
and
xor
mov
cmp
test
cld
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jmp
xor
xchg
das
push
jne
loope
jecxz
loope
or
loop
jle
adc
jle
fadds
dec
pop
jne
xchg
xchg
jmp
pop
aam
out
sahf
test
ficompl
cmp
cltd
push
cmp
adc
mov
and
and
cmp
push
mov
dec
pop
and
jmp
out
add
stc
add
inc
aas
cmp
shll
cmp
shrb
leave
repnz
xchg
cmpsb
insb
adc
pop
and
addr16
lds
adcl
sub
push
or
cwtl
fists
adc
rcrl
sub
inc
push
mov
scas
movsb
insb
xor
dec
mov
sub
add
pop
movsl
mov
pop
mov
in
jb
cmp
mov
das
xchg
xlat
mov
dec
add
out
xchg
lods
or
pop
aas
out
mov
mov
or
mov
or
add
daa
or
adc
mov
sub
test
int3
xor
cmc
jne
adc
jne
decl
pop
jmp
movsl
sbb
loope
icebp
mov
jns
add
mov
movsb
jle
adc
jle
pushf
push
std
dec
pop
jne
sbb
jecxz
scas
hlt
lock
call
lahf
out
xor
lcall
out
pop
je
push
arpl
lds
pop
sub
pop
sbb
rorl
lret
jge
mov
and
mov
lds
fistps
jecxz
das
scas
mov
push
mov
out
dec
cs
push
dec
cmpsl
xor
xchg
sarb
pop
adc
mov
out
outsl
hlt
lds
pop
fs
daa
and
and
lds
hlt
sti
sbb
mov
in
rcll
outsl
testb
push
out
sbb
insb
sub
sub
adc
add
or
add
xchg
test
pusha
dec
in
add
pop
xchg
or
call
dec
adc
ret
cltd
push
mov
sahf
stc
out
jbe
sub
mov
les
jl
mov
icebp
pop
cmp
push
cmp
or
lret
mov
or
iret
inc
pop
mov
dec
mov
das
add
pop
leave
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
movl
push
movl
sbb
movl
mov
push
add
mov
adc
mov
jmp
imul
mov
jecxz
sbb
movsl
jle
push
jg
jle
inc
inc
imul
loope
cltd
inc
or
sub
jbe
shlb
xchg
jb
ja
repnz
mov
movsb
aaa
repnz
outsb
insb
push
mov
mov
dec
dec
cmpsl
cmpsl
rolb
push
pusha
ftst
push
movsb
dec
jb
repnz
mov
pop
test
xchg
inc
and
test
addl
ret
imul
rclb
inc
mov
or
jb
mov
mov
daa
sub
mov
mov
test
mov
icebp
pop
push
mov
insl
and
dec
adc
clc
add
sub
mov
fmulp
cmp
mov
imulb
jbe
pusha
jae
cmp
test
dec
push
pop
push
jp
push
out
sub
ja
xchg
push
xchg
xor
fdivrs
pop
loopne
fimull
imul
pop
pop
jle
test
shrl
cmc
and
mov
mov
int
lods
sub
adc
in
sbb
pop
and
neg
mov
adc
lret
stos
scas
lahf
jp
or
inc
xchg
or
fstl
icebp
lahf
xchg
ret
out
dec
xor
push
int3
stos
imul
push
xchg
push
repnz
das
gs
sbbl
rorl
xchg
push
and
movsb
adc
or
cli
pop
lret
push
xor
jo
jnp
inc
cmp
cwtl
jl
jno
mov
mov
popf
cld
and
cmc
mov
movb
xchg
fdivp
jmp
gs
mov
lret
dec
push
xchg
sub
pop
scas
mov
push
cwtl
add
ret
push
aaa
inc
add
repnz
cmpl
je
cmpl
jne
pushl
pushl
push
push
push
call
mov
dec
mov
jmp
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
jmp
mov
push
jno
mov
ja
sbb
lock
jle
xor
xchg
xchg
sub
xchg
mov
insl
ja
fisttpll
in
rcrl
divl
push
test
and
popa
add
sub
ror
mov
jmp
pop
jbe
inc
stos
sub
adc
fwait
or
int3
mov
jge
cmp
sbb
icebp
dec
in
xor
notb
fisubrs
aam
and
je
int3
shlb
xor
scas
in
test
sub
sbb
add
movb
outsb
push
add
pop
out
add
dec
xchg
mov
cli
push
or
outsl
repnz
in
jle
scas
mov
inc
roll
jl
sbb
loope
int
cmpsb
push
mov
stos
test
mov
sbb
leave
cmp
negb
jnp
pushf
popa
cltd
cli
cs
mulb
and
xor
cmpsl
imul
dec
jns
pop
cld
je
rorb
xchg
arpl
loop
fmuls
cmpl
outsl
or
adc
cmp
loopne
mov
xorl
and
leave
out
mov
push
xchg
sbb
xchg
inc
push
leave
divb
je
in
popa
adc
call
shrb
sbbb
cwtl
jb
xor
and
je
pushf
or
inc
shll
stos
scas
jmp
fs
mov
xchg
nop
insl
adc
push
inc
push
cld
xor
imul
test
lret
movsb
dec
sbb
sti
or
jno
push
inc
inc
xchg
mov
push
incl
sti
dec
push
mov
push
mov
popa
repnz
push
and
jo
and
pushl
sub
mov
mov
pop
leave
ret
push
mov
push
push
incl
jmp
inc
iret
scas
mov
jno
sub
int
mov
jle
add
ss
hlt
xchg
loopne
mov
out
push
jns
push
mov
movsb
jg
cli
stos
out
ds
or
sbb
stc
or
push
stc
mov
inc
cmp
outsb
addr16
push
and
push
lcall
lods
sub
push
push
or
iret
mov
nop
pop
cmpsl
out
mov
pop
sbb
addr16
dec
sbb
dec
addr16
push
cld
lret
addr16
mov
ret
xor
addr16
mov
lret
orl
push
loope
add
mov
mov
imul
mov
mov
mov
es
xchg
jae
and
fstps
in
bound
inc
push
inc
mov
sbb
mov
add
imull
push
sbb
fcoms
mov
es
xchg
out
inc
mov
test
hlt
lock
fnstsw
push
push
pushf
jecxz
dec
adc
xor
add
jmp
das
push
mov
jnp
pop
mov
popa
inc
mov
sub
dec
inc
jecxz
push
cmc
cmpsb
xor
mov
cli
add
jnp
gs
imul
sbb
pop
xchg
pop
fucom
mov
out
inc
or
or
ljmp
bnd
xor
int3
dec
pop
mov
enter
jge
dec
sahf
adc
repnz
sub
out
int3
fcomps
fistl
js
mov
gs
cmc
cmp
iret
insl
or
jae
loopne
mov
cltd
jne
cwtl
lods
sti
cmp
fmull
es
adc
lock
dec
test
adc
aaa
mov
add
test
push
jno
stc
outsb
ss
push
mov
aad
mov
mov
lds
sbb
jo
jb
mov
inc
shl
jnp
mov
xor
jmp
std
subb
icebp
mov
sbb
mov
inc
sbb
sbb
jns
mov
in
sarl
inc
arpl
ljmp
mov
jo
mov
jmp
das
in
adc
mov
filds
movsl
xor
mov
mul
jns
adc
push
push
add
push
jno
sub
dec
mov
sbb
xchg
int3
cmc
lea
mov
ret
mov
out
sbb
rcll
mov
repnz
fbstp
jns
jecxz
ja
push
repnz
xchg
and
scas
fs
jp
adc
pop
xlat
cmp
sbb
cmc
dec
and
mov
sub
test
enter
cmpsb
xchg
in
fst
sbb
cmp
lret
mov
push
push
decb
pop
or
shrb
xor
xor
daa
cmp
add
add
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
sub
sub
mov
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jb
mov
adc
movl
mov
push
mov
xor
mov
push
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
jmp
and
sbb
push
jo
dec
add
aam
lods
jle
jl
jle
repz
and
sbb
or
mov
cmpsl
jmp
fcmovu
lahf
push
out
and
mov
rclb
pop
iret
xchg
xchg
mov
insb
jl
nop
mov
nop
repz
in
inc
in
xchg
dec
and
clc
or
xor
mov
inc
sub
popa
js
repz
je
cmp
cmp
mov
mov
push
xchg
pop
pop
mull
jae
mov
mov
push
cmp
adc
test
rcll
fmulp
or
sbb
xchg
inc
fwait
out
pop
mov
scas
out
dec
shrb
or
xor
jae
pop
mov
std
inc
into
dec
jge
mov
sub
loop
pop
ja
aam
push
or
dec
dec
pop
pop
inc
mov
push
sub
cli
sub
pop
mov
mov
in
adc
imul
js
lret
adc
dec
sub
int3
sahf
add
je
cmp
fldcw
out
push
jl
inc
or
mov
inc
out
arpl
mov
bound
sarb
mov
xchg
adc
push
add
scas
insl
push
jmp
cli
mov
mov
xchg
out
jo
xor
pop
movsb
outsb
add
dec
mov
sbb
or
or
pop
xchg
mov
fadds
xchg
cmp
dec
mov
push
push
sub
xchg
and
xor
fwait
push
push
mov
dec
sahf
and
mov
fucomp
popf
test
add
pop
mov
xchg
jb
sub
push
xchg
fwait
xor
xor
mov
test
in
aas
clc
jb
push
jle
fdivrp
dec
mov
in
adc
pop
xchg
ret
pop
pop
xor
insl
negb
dec
aam
inc
cmp
jl
inc
adc
nop
push
dec
pop
out
add
mov
ret
xor
xor
div
push
movl
cmpsb
mov
subb
into
lea
test
loop
jmp
pushl
push
movsb
mov
into
ds
sbb
xor
fsubrl
mov
push
pop
mov
mov
and
mov
inc
aam
orb
fs
mov
or
sbb
push
jg
inc
sbb
push
push
das
xchg
test
adc
push
loope
lcall
jne
ja
and
dec
repz
das
dec
dec
loopne
cmp
les
cld
sub
push
jg
fsubrl
mov
jns
cwtl
xor
cmp
lock
ret
jecxz
addr16
dec
ss
jnp
xchg
inc
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jmp
andb
in
loope
arpl
adc
push
shrb
jle
mov
add
xor
cmpsl
insb
out
mov
lahf
mov
inc
lahf
ljmp
fdivrp
bound
int3
sbb
enter
adc
push
mov
push
sahf
xor
and
clc
pop
or
movsl
and
mov
ja
push
test
inc
sub
xor
ret
lods
mov
sbb
cmp
xchg
in
cmp
or
sbb
cmpb
in
adc
add
push
mov
and
sahf
push
xorl
pop
mov
daa
int
push
mov
negb
push
out
sbb
pop
stc
cmp
sbb
push
xor
dec
idivb
insb
sbb
and
pop
cmp
dec
sahf
sbb
je
test
aad
push
out
jne
pop
and
adcb
fs
stc
pop
xor
ss
ljmp
and
cmp
loope
xchg
test
aad
jno
and
push
jle
mov
aas
jmp
pop
or
int
inc
sub
clc
out
pop
mov
call
mov
dec
outsb
ret
in
movsl
mov
bound
push
cmp
inc
iret
cmp
or
dec
lcall
cmp
cmp
rcrb
cmp
rorb
cmp
bound
mov
push
mov
dec
jae
mov
mov
cs
outsl
jp
push
jmp
mov
loopne
mov
rcr
mov
mov
add
call
xlat
test
jl
and
xor
pop
pop
in
or
push
in
sbb
movsl
std
mov
xor
test
xor
test
mov
leave
fsubrl
pusha
mov
fninit
pop
cmpsl
mov
jbe
cwtl
sub
sbb
or
push
in
cltd
ret
push
daa
add
loope
adc
xor
aas
sar
dec
mov
jle
xchg
gs
arpl
bound
loope
inc
ds
push
int3
test
jge
mov
push
sbb
sbb
xchg
push
mov
cs
clc
adc
icebp
stc
fildll
adc
rcrl
mov
or
faddp
gs
dec
xchg
xchg
adc
xchg
popa
xor
in
mov
fidivrs
dec
mov
movb
xchg
aam
test
and
lret
dec
dec
lcall
rdtsc
or
fmull
pop
and
pop
test
dec
sbb
xor
adc
scas
loop
filds
pusha
sbb
add
dec
imul
xchg
mov
cwtl
cwtl
popa
cmp
add
or
sbb
push
std
and
in
push
jge
mov
in
mov
fimull
cli
mov
jbe
pop
mov
pop
pop
leave
ret
push
mov
jmp
shll
jno
aad
xor
inc
jmp
jl
jle
sub
mov
xchg
packsswb
sbb
rolb
adc
mov
add
jae
xchg
pop
sarl
adc
adc
mov
mov
xor
lret
je
sbb
imul
sub
pushf
lahf
mov
dec
jno
mov
cmp
test
rcrb
fisubl
add
cmp
fildll
push
cmpsb
sub
aas
loope
aad
and
gs
cmp
loope
mov
jnp
mov
orl
testl
push
mov
leave
sbb
sub
push
popf
xchg
mov
pop
cwtl
cmc
shr
loop
or
lock
xchg
mov
xchg
and
stc
popf
xchg
dec
jae
cmp
icebp
adc
out
add
mov
bound
and
aaa
shlb
pop
fstpl
mov
jne
xchg
cmp
fst
jns
push
aas
ljmp
dec
cmpsl
add
mov
mov
or
das
inc
mov
fdiv
jno
ffreep
dec
mov
inc
cmpl
jmp
or
sbb
inc
lcall
cltd
inc
inc
cltd
add
arpl
jg
cmp
sub
pop
mov
rorl
add
mov
push
pop
mov
inc
test
lret
jge
sbb
cs
sub
imul
sbb
fdivs
inc
imul
push
sub
in
or
popa
dec
sbb
cwtl
mov
sbb
stc
sub
fs
cmc
pop
mov
lahf
mov
adc
xor
dec
test
lahf
dec
out
jns
cs
jae
orb
test
cmpl
push
sbb
sbb
dec
ficoms
ds
inc
push
in
pop
and
jns
ret
scas
cmp
test
test
lcall
jle
enter
enter
insb
mov
xor
mov
mov
dec
je
mov
cwtl
pop
push
icebp
sbb
push
fbstp
fdivl
jmp
pop
cs
cli
adc
dec
mov
sub
mov
fisttpll
sbb
add
pushf
xchg
aas
test
hlt
test
aam
push
stos
arpl
shlb
or
xor
jp
push
sarb
xchg
mov
dec
mov
xor
xor
nop
sub
sub
arpl
dec
xor
sub
push
fwait
js
xchg
scas
adc
adc
push
mov
lds
pop
or
mov
xor
mov
jmp
or
pop
jno
xchg
add
ss
mov
jle
jge
jle
mov
aaa
jns
mov
cmp
fildl
ss
les
inc
call
push
xchg
std
adc
mov
sbb
testl
fsubrl
ret
fwait
add
xor
rorb
divb
ljmp
cmp
fndisi(8087
dec
xchg
lds
aad
sbb
cmpb
test
daa
int
or
loop
dec
adc
xchg
rcrb
mov
push
xor
xchg
dec
pop
mov
js
mov
shrl
mov
mov
mov
bts
mov
imul
and
icebp
iret
push
cltd
shrb
pop
stos
pop
test
push
mov
test
test
mov
sub
cmp
and
in
shlb
xchg
mov
daa
xlat
mov
sbb
pextrw
push
ss
aad
xchg
pop
adc
mov
loopne
rorl
sahf
pop
mov
fisubl
or
pop
add
cmp
imul
inc
ljmp
xchg
lds
xchg
jnp
leave
and
in
mov
movsl
ds
fldcw
sbb
data16
insb
mov
hlt
push
mov
inc
mov
sbb
loope
ja
ficompl
jo
lret
jmp
sub
xor
cmp
test
rorb
jle
ret
mov
mov
rolb
jge
jg
pusha
ffree
les
enter
or
xor
adc
jno
cwtl
sbb
cmpsb
inc
mov
jecxz
outsl
or
add
sarl
push
cli
mov
popf
adc
into
lea
jecxz
test
cmp
mov
adc
aad
mov
outsb
jne
sub
mov
dec
lds
lret
call
mov
sbb
js
push
or
xchg
mov
sub
call
fmuls
inc
les
std
in
xor
mov
mov
pop
ss
mov
push
leave
scas
xor
push
sbb
out
fdivrs
sar
adc
scas
and
sbb
data16
imul
dec
mov
test
sub
or
jnp
xchg
rorb
or
mov
stos
bound
jl
shlb
ja
out
je
dec
cmc
fdiv
movsb
lock
fnstsw
mov
mov
and
loop
js
ret
pushf
jnp
pop
push
cld
and
dec
mov
or
cltd
jb
js
cmp
movsl
daa
repnz
xchg
mov
and
or
mov
pop
ret
push
mov
sub
mov
adc
mov
and
mov
xor
sub
mov
orl
add
xorl
movzwl
and
mov
xor
xor
or
movb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
sbb
lea
mov
mov
mov
subl
xor
xorl
sub
mov
movzwl
sub
movl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
adc
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
sub
mov
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
jmp
cltd
outsb
mov
outsl
or
push
out
xor
jle
scas
jl
jle
xchg
or
mov
jge
roll
xchg
jmp
jp
and
scas
lahf
dec
gs
pop
jb
pop
dec
icebp
cltd
shll
aam
inc
push
test
sbb
jge
popf
loopne,pn
jle
in
fs
cmp
jle
push
push
mov
in
jmp
jecxz
test
push
stos
jns
fstpt
xor
lea
cltd
test
icebp
scas
inc
mov
popf
pop
ret
pushf
popa
jmp
outsb
adc
bnd
int3
sub
mov
das
pop
mov
mov
das
jle
int
add
shlb
sahf
push
testl
or
mov
cs
scas
cmpsb
xor
leave
xor
adc
stos
testb
sbb
repz
dec
jns
test
movsb
ret
popa
out
fucomip
out
mov
movsl
mov
and
pop
fwait
pop
dec
aam
movsl
adc
testl
push
cwtl
test
loop
jecxz
add
test
sbb
adc
enter
sub
rcrb
xor
sub
or
xchg
mov
sub
inc
push
cmpsb
add
into
add
sub
sub
adc
aas
popf
mov
dec
jge
mov
push
mov
mov
dec
xchg
in
hlt
jo
das
fsubl
arpl
in
sub
xor
in
clc
push
mov
or
nop
sbbb
push
cmpl
add
pop
shl
lret
mov
xchg
loopne,pt
jl
push
lcall
stos
cld
adc
sahf
add
cmp
fnsave
aas
in
push
mov
xor
mov
and
fnstsw
jg
jp
push
daa
rolb
fbstp
cmp
xchg
fdivs
xchg
cmp
stos
sub
addr16
mov
xlat
fldl
inc
mov
lahf
scas
dec
fs
push
or
or
shll
shl
and
dec
jns
pop
cmp
mov
adc
cmp
pinsrw
fbstp
ffree
adc
xor
push
lods
mov
mov
repnz
adc
orb
push
int3
es
aas
add
or
lahf
into
jno
sbb
xlat
bound
ljmp
stc
lock
ds
ja
loopne
push
fdivrs
sbb
mov
dec
or
ds
mov
inc
cmp
jne
pop
pop
mov
mov
xor
jmp
mov
icebp
mov
and
or
jl
jle
push
ror
pop
cld
pop
dec
mov
fnstsw
push
jp
pusha
mov
ss
incl
mov
in
rorl
rorb
pop
fistpll
or
or
cmp
pop
les
int3
mov
inc
mov
jle
push
shll
inc
or
arpl
xchg
movb
imul
test
lock
or
or
aas
scas
jmp
insl
lcall
sub
jne
lret
mov
jne
xchg
mov
stos
lcall
call
enter
out
call
pushf
aam
int3
ljmp
push
int3
add
adc
rol
mov
pop
testl
mov
or
iret
cs
leave
or
fnstcw
test
ljmp
adc
movsl
and
push
cmp
mov
loop
inc
aad
mov
out
jmp
sub
std
sbb
popf
test
aaa
testb
faddp
pop
pop
out
pusha
ficomps
cwtl
rorl
in
mov
enter
jae
inc
lret
mov
cmp
mov
iret
mov
lods
out
icebp
aas
fwait
mov
sahf
mov
mov
xchg
cmpsl
jmp
cmpsb
arpl
lcall
push
jbe
mov
mov
iret
cmpl
sbb
dec
push
jne
dec
or
mov
lret
notl
shll
mov
jne
mov
ret
xchg
sbb
sub
rcrb
add
les
in
cmp
add
xchg
sti
xor
xchg
adc
or
pusha
loopne
sub
ds
pop
pushf
mov
outsb
repz
mov
mov
xor
dec
testb
adc
aaa
cmp
das
das
jo
cmp
data16
cmp
fwait
sbb
mov
push
xor
jmp
scas
xor
imul
sub
xchg
mov
lcall
jle
jae
lea
cld
push
test
pop
mov
or
push
pop
and
outsl
stos
sub
cld
outsl
and
clc
rorb
gs
xor
sub
mov
dec
xchg
pop
movsb
call
ja
add
mov
push
or
push
pop
ret
into
fnstcw
sbb
dec
pushl
cmp
filds
movsb
repnz
addl
pushf
pop
add
jmp
add
fdivl
lock
xchg
pop
sbb
push
lcall
jle
mov
xor
pop
loop
mov
push
or
imul
popa
sti
je
push
out
and
sbb
pop
into
scas
cltd
push
mov
xorl
scas
lahf
insl
fsubl
fisubs
mov
push
dec
xchg
mov
mov
aas
xchg
add
push
inc
imul
movsl
dec
jmp
out
push
pusha
pop
xor
lods
arpl
cmp
pop
cmpsb
mov
int3
outsl
test
cmp
std
pop
xor
sbb
idiv
inc
jge
out
push
pop
dec
sbb
mov
sbb
movsb
mov
adc
mov
aaa
not
xor
mov
adc
sbb
dec
loope,pt
fnsave
shr
adc
out
sarl
mov
add
js
adc
in
mov
nop
cmpsl
enter
shlb
idivl
je
push
out
divl
dec
cmpsb
push
lret
cmp
imull
add
fwait
sbb
sbb
lret
jmp
jno
mov
dec
push
int
ljmp
movsb
fcompl
or
insl
shr
xor
pop
jne
xchg
or
pop
dec
push
jmp
sub
xchg
test
mov
rorl
fadd
jae
mov
clc
xchg
addr16
mov
jne
in
insb
jbe
adc
test
jmp
lods
scas
popf
xor
fdivrl
push
mov
out
or
xchg
aam
push
add
jmp
rcr
jge
scas
jae
xor
movl
pop
pop
out
pop
jmp
fildl
xchg
das
sub
and
incb
dec
dec
adc
xor
mov
int
mov
or
fstps
sbb
ret
inc
or
fsubr
int3
push
mov
jb
sub
outsb
imul
push
jne
setno
adc
mov
movl
sbb
cmc
adc
cltd
push
xor
xor
and
popa
adc
imul
call
in
jbe
aas
sbb
gs
mov
dec
shlb
xchg
push
pop
push
mov
push
mov
mov
vmulps
mov
sub
popf
mov
or
fnsave
push
popf
xchg
repz
push
inc
mov
jge
dec
push
out
cs
cmpsb
mov
push
ss
ret
sahf
repnz
push
sbb
movsl
and
and
aam
mov
mov
jmp
je
push
push
lock
outsb
dec
mov
adc
scas
jl
jle
xor
lea
dec
data16
mov
cmp
add
jle
mov
add
pushf
imul
mov
in
xchg
stos
into
loop
and
je
test
lock
filds
mov
mov
mov
sub
mov
cltd
imul
fldt
add
push
imul
jbe
sub
sti
repnz
mov
adc
rcll
adc
xchg
xchg
lahf
or
nop
inc
cmc
sbb
ret
int3
jg
dec
cli
xchg
mov
or
or
and
mov
or
add
sub
sbb
cmp
ljmp
cli
gs
pop
ret
movsb
jp
xchg
scas
inc
sti
and
mov
cmp
push
sti
push
mov
pop
scas
add
test
lods
mov
pop
mov
sbb
and
ss
jo
xor
inc
addb
or
inc
jp
sbb
gs
or
js
sahf
push
pop
mov
or
sti
pushf
icebp
mov
jmp
push
add
fcmovnb
inc
rcll
push
ret
mov
xchg
stos
add
dec
daa
jns
outsb
scas
and
std
dec
xor
mov
push
adc
popa
inc
lret
ja
ss
mov
ljmp
in
jl
inc
clc
cmp
adc
sbb
sbb
xor
mov
enter
shll
xlat
dec
push
pop
sub
lods
mov
and
mov
and
in
xor
rcrl
sahf
testb
sub
ja
push
jae
icebp
cmp
fs
add
jle
enter
xchg
add
test
sbb
cmp
mov
fbld
xchg
push
insl
inc
adc
xchg
lcall
pushaw
mov
mov
gs
jle
jle
popa
aam
xchg
lods
add
movsl
mov
mov
inc
mov
fistpl
loop
jl
xor
add
adc
mov
imul
and
filds
shl
jno
pop
in
mov
mov
pushf
mov
pusha
int3
test
test
orl
sbbl
int3
push
mov
mov
je
or
mov
xchg
jno
test
data16
out
cmp
or
sub
mov
repnz
in
in
fldcw
into
hlt
mov
inc
cmp
sub
clc
int
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
jmp
jmp
push
dec
push
imul
and
loope
dec
mov
sbb
jle
jl
jle
aas
cwtl
sub
aam
and
ja
test
pushf
xchg
jno
imul
adc
aam
mov
cmpsl
idivb
sub
xor
mov
pop
ret
rolb
sub
push
add
rcll
adc
sub
ljmp
mov
mov
popa
cmpsl
and
fwait
xchg
lret
xchg
adc
ljmp
scas
leave
subb
add
push
xor
fildll
push
jb
cmp
jge
shlb
dec
int3
cmp
lds
jae
inc
xchg
sub
push
jns
pusha
or
pop
xor
push
lea
jns
sub
js
arpl
mov
jbe
add
andb
mov
adc
xchg
cmp
lods
ror
mov
lock
std
jb
cld
mov
shl
mov
inc
pop
cli
decl
stc
cmpsb
imul
xchg
es
subl
rolb
mov
add
repnz
mov
mov
jl
fisttpl
sbb
push
in
icebp
jle
test
add
xor
fnstenv
jmp
mov
ljmp
ret
fnstsw
daa
push
push
iret
dec
sbb
xor
out
mov
and
das
lds
les
fwait
push
dec
inc
or
pop
push
adc
pop
xchg
xchg
push
mov
enter
cmc
add
and
add
mov
aaa
adc
xor
mov
inc
jecxz
sub
lds
mov
daa
pminub
adc
lock
jne
mov
imul
stos
push
je
jno
adc
mov
fadds
in
sbb
mov
xchg
shll
mov
inc
lcall
push
cmpsb
pop
call
in
xchg
sbb
adc
dec
inc
adc
inc
dec
dec
pop
inc
lea
mov
mov
ficoml
mov
push
xchg
push
pop
jmp
xchg
fwait
jge
fmul
pop
dec
mov
enter
push
pextrw
inc
movsl
mov
push
movsl
test
out
mov
dec
jbe
cmc
add
das
je
xchg
or
pop
fcomps
orb
incb
add
movl
lea
mov
mov
addl
mov
jmp
sub
or
lock
inc
mov
or
jle
scas
jl
jle
inc
cltd
mov
fistl
xor
adc
mov
inc
jge
popa
inc
iret
imul
pop
push
sub
lock
mov
mov
gs
xchg
xchg
pop
push
sbb
mov
push
mov
xchg
push
ljmp
sarb
std
outsl
or
das
int
inc
mov
dec
push
push
pop
mov
mov
cmc
jmp
xlat
push
sbb
xor
adc
inc
pop
je
or
fstp
jge
xchg
je
push
sub
inc
inc
cmpsl
jae
lret
addr16
cld
aad
cmpsl
cmp
inc
out
adc
ja
in
or
xor
imul
addr16
stos
fadd
push
leave
or
cmc
xchg
test
cmpsl
and
fistpll
ret
pop
mov
cmc
fs
push
dec
add
loope
add
xchg
lods
fistl
mov
pusha
mov
adc
in
imul
xlat
add
sub
stc
lods
pushf
mov
mov
in
and
inc
mov
ret
stos
xor
or
ret
mov
mov
stc
fs
aam
sbb
or
popf
or
jno
inc
sub
iret
xchg
dec
aam
mov
sub
stos
mov
cmp
jmp
cmp
ficoms
pushf
hlt
sub
movsb
inc
mov
insb
push
ja
orb
sbb
sub
fdivrs
mov
fildl
jg
adc
jbe
mov
dec
call
jg
push
mov
sub
sbb
xchg
cld
dec
mov
xor
mov
adc
sbb
arpl
jae
sub
sub
pushf
mov
xchg
push
daa
outsb
psllw
adc
mov
add
hlt
add
xor
inc
ret
mov
mov
xchg
and
sbb
mov
mov
dec
jmp
dec
out
sub
insl
xchg
mov
test
inc
in
lock
loopne
lock
jmp
mov
pop
leave
popf
push
pop
stc
and
pop
add
xor
cmp
fisubs
repnz
outsl
lods
pusha
je
xchg
hlt
out
sub
xlat
nop
sub
daa
push
out
pop
daa
pushf
xchg
or
sbb
imul
pop
xchg
cld
pop
gs
add
rorl
ret
aaa
xchg
add
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
movl
jmp
mov
xor
in
leave
outsl
mov
or
xchg
jle
jg
jle
jnp
int3
xor
inc
test
rorl
mov
xchg
adc
jmp
loopne
negb
cwtl
inc
push
ja
dec
cltd
cwtl
dec
aaa
xchg
adc
xor
insb
data16
sbb
inc
inc
fwait
cmp
std
ficoms
cmp
fistps
aas
aas
sahf
add
decl
in
loope
jmp
movsl
and
or
jo
lock
xchg
and
add
adc
or
cwtl
insb
cmp
sbb
dec
in
ljmp
sbb
in
adc
das
out
jecxz
scas
ficoms
jbe
pop
adc
mov
push
xchg
ja
outsl
mov
jge
xlat
gs
inc
mov
lret
pushf
xor
mov
orl
xchg
outsl
pop
mov
rorl
jmp
sbb
dec
mov
mov
movsl
sbb
mov
push
icebp
adc
add
loopne
dec
adc
sub
inc
cs
lahf
mov
fdivl
push
outsl
mov
gs
mov
into
sbb
jl
adc
clc
cmp
into
adc
mov
loope
dec
push
cmpsb
jnp
sbb
mov
hlt
out
jne
adc
int3
mov
popf
scas
mov
movsl
les
gs
in
jae
and
xchg
stos
scas
hlt
jno
dec
mov
fbld
addb
subb
loope
pop
mov
cwtl
fcomip
in
mov
fstps
jp,pt
sbb
mov
iret
mov
or
rcrl
and
mov
movl
mov
subl
add
xorl
xor
movl
cmp
jne
and
mov
mov
add
andl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
pushl
pushl
pushl
push
pushl
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
jmp
mov
gs
stos
insl
add
sub
jle
movsb
jg
jle
jb
nop
dec
adc
outsl
xor
scas
hlt
hlt
sub
inc
mov
and
in
sub
pop
mov
xor
out
pop
movl
jmp
lods
add
sbb
mov
pop
mov
sti
jns
sti
call
int3
or
arpl
icebp
push
cmp
subl
aas
sahf
jnp
jnp
push
mov
iret
adc
mov
outsb
jbe
add
or
add
outsb
jp
dec
out
mov
mov
repz
dec
mov
jl
aad
xchg
out
or
sarb
and
cmpsb
mov
lea
mov
scas
addb
lock
sahf
push
cmp
xor
mov
bound
jne
les
jae
test
les
xchg
inc
mov
mov
mov
ja
mov
jno
movsl
inc
es
neg
scas
pop
sbb
adc
data16
data16
das
inc
mov
pop
andb
mov
cmc
push
hlt
test
mov
xor
push
loope
jae
pop
dec
clc
lahf
inc
push
imul
or
das
lret
and
xchg
hlt
mov
cmpsl
scas
cs
inc
subb
inc
xor
xchg
xor
mov
shlb
fcompl
jb
sarl
jnp
or
pop
mov
mov
addr16
xor
mov
roll
subl
sub
mov
icebp
cmc
cli
and
xchg
or
dec
xchg
dec
pop
mov
mov
push
add
jmp
mov
xor
add
leave
ret
sub
add
sub
add
add
dec
sub
add
add
bound
add
insb
sub
add
add
mov
add
xchg
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
add
dec
sub
add
add
sub
add
add
js
add
xchg
add
nop
sub
add
sub
add
add
shrb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
add
inc
sub
add
add
sub
add
add
nop
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
bound
add
add
test
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
dec
sub
add
je
add
subb
add
sub
add
shrb
add
imulb
add
adc
add
and
add
sub
add
ds
dec
add
pop
add
jo
add
jle
add
mov
add
lcall
add
add
aam
add
fisubrs
add
in
add
add
or
add
and
add
ss
add
dec
das
add
push
das
add
fs
add
js
add
mov
add
pushf
das
add
test
add
mov
das
add
fisubrs
add
repnz
add
das
add
or
add
push
xor
add
xor
add
xor
add
add
bound
add
outsb
xor
add
xor
add
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
dec
xor
add
add
push
add
js
add
xchg
xor
add
add
shlb
add
in
add
cld
xor
add
xor
add
add
add
add
inc
xor
add
add
outsb
xor
add
xor
add
add
add
add
out
add
cli
xor
add
xor
add
xor
add
xor
add
add
add
pop
xor
add
add
je
add
xorb
add
add
ret
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
pop
xor
add
add
xchg
add
add
mov
add
enter
fidivl
add
xor
add
xor
add
add
push
xor
add
dec
xor
add
xor
je
add
mov
add
add
add
mov
xor
add
in
xor
add
adc
add
sub
add
ds
dec
add
pusha
add
insb
add
xorb
add
add
lret
add
add
out
add
add
adc
add
and
add
xor
add
inc
aaa
add
push
aaa
add
pusha
aaa
add
outsb
aaa
add
js
add
mov
add
xchg
aaa
add
test
add
mov
aaa
add
ljmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
jo
add
jle
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
popf
dec
dec
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
and
add
add
add
lock
add
add
add
outsb
push
popa
addr16
push
js
outsl
ss
je
jo
aas
inc
outsb
gs
je
push
gs
push
inc
inc
pop
inc
push
inc
dec
pop
dec
cmp
add
add
sbb
add
adc
add
add
add
shlb
add
add
add
and
add
mov
add
test
add
scas
xor
add
add
mov
add
add
add
add
and
add
add
add
cmp
add
and
add
mov
add
add
add
sub
add
sub
add
add
dec
sub
add
add
bound
add
insb
sub
add
add
mov
add
xchg
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
add
dec
sub
add
add
sub
add
add
js
add
xchg
add
nop
sub
add
sub
add
add
shrb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
add
inc
sub
add
add
sub
add
add
nop
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
bound
add
add
test
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
dec
sub
add
je
add
subb
add
sub
add
shrb
add
imulb
add
adc
add
and
add
sub
add
ds
dec
add
pop
add
jo
add
jle
add
mov
add
lcall
add
add
aam
add
fisubrs
add
in
add
add
or
add
and
add
ss
add
dec
das
add
push
das
add
fs
add
js
add
mov
add
pushf
das
add
test
add
mov
das
add
fisubrs
add
repnz
add
das
add
or
add
push
xor
add
xor
add
xor
add
add
bound
add
outsb
xor
add
xor
add
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
dec
xor
add
add
push
add
js
add
xchg
xor
add
add
shlb
add
in
add
cld
xor
add
xor
add
add
add
add
inc
xor
add
add
outsb
xor
add
xor
add
add
add
add
out
add
cli
xor
add
xor
add
xor
add
xor
add
add
add
pop
xor
add
add
je
add
xorb
add
add
ret
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
pop
xor
add
add
xchg
add
add
mov
add
enter
fidivl
add
xor
add
xor
add
add
push
xor
add
dec
xor
add
xor
je
add
mov
add
add
add
mov
xor
add
in
xor
add
adc
add
sub
add
ds
dec
add
pusha
add
insb
add
xorb
add
add
lret
add
add
out
add
add
adc
add
and
add
xor
add
inc
aaa
add
push
aaa
add
pusha
aaa
add
outsb
aaa
add
js
add
mov
add
xchg
aaa
add
test
add
mov
aaa
add
ljmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
jo
add
jle
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
add
add
xchg
add
imul
ja
jae
insl
jo
add
add
outsl
outsb
je
outsl
insb
data16
add
outsb
jbe
add
jb
push
jae
jb
arpl
add
add
jb
jo
add
mov
pop
pop
jae
je
popa
jo
pop
je
jo
add
lds
jo
imul
add
outsl
jb
add
data16
outsl
outsl
jb
lods
add
js
imul
add
jo
pop
insw
outsl
fs
xor
je
insb
add
or
je
ja
jo
gs
add
add
jb
arpl
add
pop
pop
arpl
insl
outsl
fs
push
add
imul
addr16
add
xor
arpl
outsl
imul
test
jae
popa
arpl
add
js
imul
pop
popa
insl
jae
pop
gs
je
add
add
arpl
jo
add
xchg
pop
imul
insl
add
outsb
jne
add
add
jb
bound
add
insl
bound
gs
add
sbb
jae
jo
imul
data16
add
pop
pop
arpl
inc
imul
ja
jae
arpl
add
add
js
je
imul
jae
add
call
js
je
add
add
je
add
fadds
jae
je
outsl
arpl
add
gs
jae
jb
popa
je
gs
add
mov
data16
imul
gs
outsl
jb
add
popa
je
insb
add
jb
pop
pop
addr16
popa
imul
sub
arpl
arpl
add
add
insl
outsl
jbe
add
dec
push
push
inc
push
push
cs
insb
add
mov
imul
outsl
ja
jo
popa
je
add
nop
add
arpl
outsl
jo
jo
outsb
jne
add
add
je
jne
jae
jb
mov
imul
popa
bound
add
outsb
fs
gs
popa
addr16
js
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
adc
inc
gs
outsl
jne
insb
gs
insb
imul
add
mov
imul
jae
bound
mov
dec
outsl
popa
fs
arpl
push
add
bound
jbe
outsb
je
test
fs
imul
add
je
arpl
add
outsb
fs
imul
inc
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
fs
outsb
jo
je
cltd
add
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
inc
add
jb
outsb
je
inc
add
imul
je
insb
popa
jae
dec
outsl
outsb
addr16
add
outsl
outsb
imul
gs
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
ja
arpl
add
jmp
outsb
dec
outsb
jo
je
gs
je
jo
add
add
je
insb
imul
jb
movsb
add
pop
outsl
outsl
insl
gs
roll
outsb
popa
bound
imul
sub
inc
push
ja
jb
jne
push
add
inc
add
imul
arpl
outsb
add
add
inc
fs
jae
push
imul
arpl
add
icebp
add
jae
dec
gs
popa
addr16
add
out
add
imul
jae
addr16
add
dec
add
je
jb
jo
add
inc
add
outsl
jae
inc
gs
je
jo
add
add
jo
imul
imul
push
imul
popa
jae
inc
add
mov
dec
jae
push
jo
popa
dec
jne
gs
arpl
mov
dec
outsl
popa
fs
insl
popa
addr16
add
sahf
add
push
arpl
jo
jns
mov
push
outsl
push
outsb
imul
add
add
je
gs
popa
addr16
js
jb
dec
outsb
outsw
add
inc
gs
popa
jb
outsb
je
bound
inc
jb
popa
je
push
imul
inc
add
popa
insb
imul
je
add
push
gs
imul
outsb
addr16
add
adc
gs
jae
inc
inc
add
inc
push
dec
outsb
jne
add
add
arpl
outsb
jne
je
insl
add
add
outsb
dec
arpl
add
mov
imul
imul
add
jae
popa
addr16
outsl
js
add
ja
outsb
jne
popa
jb
inc
add
je
outsl
jb
addr16
jne
fs
imul
add
jae
jb
outsb
je
push
add
mov
imul
push
add
je
arpl
insb
insb
push
outsl
jae
add
add
je
jae
outsb
arpl
jns
je
je
add
or
inc
imul
jae
push
outsb
imul
jo
popa
je
push
imul
or
inc
gs
inc
inc
js
stos
add
fs
jne
jae
jb
add
gs
arpl
insb
insb
push
popa
outsb
add
cmp
inc
push
jo
jb
add
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
push
add
je
arpl
insb
insb
push
popa
outsb
add
insl
add
je
imul
outsb
addr16
add
addb
outsb
data16
popa
je
push
arpl
add
insl
outsl
jbe
dec
outsb
jne
add
ja
outsb
imul
arpl
das
add
je
arpl
gs
imul
add
insb
outsl
addr16
outsl
js
popa
jb
insl
inc
add
add
popa
insl
gs
arpl
add
inc
imul
jae
popa
addr16
add
xor
inc
push
gs
add
inc
outsl
jb
addr16
jne
fs
imul
add
imul
jne
dec
fs
add
push
add
je
jb
jo
add
dec
add
je
outsb
jne
scas
add
fs
jne
jae
jb
add
push
gs
jns
inc
outsl
insb
outsl
jb
add
xchg
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
push
imul
outsl
arpl
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
push
add
je
popa
jb
outsb
je
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
gs
imul
sub
inc
push
ja
jb
add
out
add
imul
jae
addr16
add
jne
inc
gs
imul
js
inc
add
add
je
gs
popa
addr16
add
jb
gs
push
add
push
je
imul
push
push
outsb
outsl
ja
jae
outsb
arpl
add
popa
jb
jo
gs
add
sti
add
dec
outsb
push
arpl
sbb
inc
popa
insb
insb
push
imul
outsl
arpl
lahf
add
jo
je
push
popa
addr16
add
mov
push
popa
bound
fs
gs
dec
jne
push
add
sub
push
outsb
fs
gs
popa
addr16
add
add
je
jo
popa
je
push
outsb
add
mov
ja
je
je
push
add
sub
dec
outsb
jne
push
popa
jb
inc
imul
outsb
jae
add
fs
je
imul
push
gs
arpl
jo
jns
add
inc
jb
popa
je
inc
imul
imul
jb
insl
push
add
cmp
inc
push
jo
jb
jne
push
add
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
xor
jb
outsl
dec
gs
push
add
dec
add
je
outsb
jne
gs
jne
je
je
insl
add
push
push
inc
push
xor
cs
insb
add
push
add
popa
addr16
imul
dec
arpl
push
imul
insl
popa
addr16
imul
je
add
dec
insl
popa
addr16
imul
insb
popa
arpl
arpl
add
add
popa
addr16
imul
ja
add
add
gs
je
push
jb
jo
jb
jns
push
popa
addr16
add
pop
add
outsl
jo
jb
jns
push
add
inc
dec
dec
inc
push
dec
xor
cs
insb
add
mov
inc
jb
popa
je
inc
outsl
insl
jo
je
bound
imul
add
gs
je
push
popa
insb
gs
add
gs
arpl
imul
into
add
insb
arpl
push
arpl
jp
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
popa
je
inc
jb
jae
dec
outsb
imul
add
je
popa
jo
outsl
fs
pop
add
je
popa
jns
jne
add
add
je
imul
add
jbe
inc
inc
add
pop
add
je
popa
jo
outsl
fs
mov
popa
je
dec
inc
push
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
gs
je
inc
outsl
outsb
je
add
outsb
jae
popa
je
inc
push
je
outsb
outsw
add
out
add
je
popa
insb
gs
gs
outsb
je
imul
gs
imul
outsb
jae
outsl
outsb
inc
js
add
add
jb
je
push
add
je
inc
imul
bound
imul
inc
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
gs
outsl
add
clc
add
je
gs
inc
insb
imul
push
popa
je
insb
je
add
inc
imul
test
inc
jb
popa
je
push
outsb
dec
outsb
imul
add
je
gs
inc
js
outsb
je
outsl
imul
aam
push
gs
imul
outsl
jb
add
add
je
dec
push
xor
stos
add
gs
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
xchg
inc
gs
gs
inc
js
outsb
je
outsl
imul
push
gs
imul
addr16
js
add
popa
je
push
outsb
add
push
imul
dec
jb
inc
js
add
add
arpl
add
mov
push
outsl
insb
jns
outsl
outsb
add
popa
je
push
arpl
outsb
add
gs
inc
js
outsb
je
outsl
imul
jo
inc
fs
outsl
outsb
je
gs
jne
arpl
add
inc
add
je
gs
arpl
popa
jo
add
inc
gs
imul
add
je
gs
dec
jne
push
add
popa
je
push
popa
je
gs
inc
jb
jae
add
into
add
arpl
gs
insb
imul
lds
inc
outsb
jne
inc
outsl
outsb
je
popa
insl
imul
inc
dec
xor
cs
insb
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
sbb
dec
popa
outsb
fs
gs
outsl
jne
je
add
add
outsb
inc
imul
jb
popa
je
push
popa
imul
insl
gs
add
and
dec
popa
jo
imul
insb
add
push
gs
push
push
jb
outsl
jb
je
add
bound
inc
gs
je
insl
dec
popa
insl
gs
add
lret
add
inc
popa
fs
gs
fs
je
add
or
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
inc
imul
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
inc
add
outsb
fs
gs
inc
push
dec
outsl
je
imul
outsl
outsb
add
xor
push
push
inc
data16
dec
popa
jae
add
add
je
jb
outsl
jb
je
inc
insb
popa
jae
add
sti
add
je
popa
jae
inc
jb
outsl
jb
add
add
imul
add
lret
add
je
jne
jb
outsb
je
imul
jns
add
mov
inc
jb
inc
imul
dec
push
dec
add
dec
popa
imul
outsw
add
add
gs
je
inc
jbe
outsb
je
add
outsb
add
outsb
fs
gs
jne
arpl
js
add
push
gs
fs
imul
gs
gs
jo
popa
je
inc
add
mov
inc
insb
outsl
bound
inc
insb
insb
outsl
arpl
xchg
add
imul
bound
inc
gs
gs
jo
popa
je
push
add
rolb
inc
jb
popa
je
inc
imul
gs
push
dec
outsl
arpl
add
add
jne
push
gs
jne
arpl
popa
insl
gs
add
repz
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
push
add
insb
gs
imul
jae
gs
push
imul
inc
jb
popa
je
push
gs
outsl
je
push
push
add
jns
inc
gs
gs
imul
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
je
outsl
fs
gs
imul
add
dec
add
jne
jo
outsb
fs
push
add
add
jae
jb
jo
outsb
push
add
add
je
popa
outsb
fs
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
or
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
inc
gs
push
inc
outsl
outsb
je
js
add
ret
add
insb
push
outsb
ja
outsb
add
je
insl
dec
popa
insl
gs
add
ljmp
insb
gs
je
jb
bound
gs
js
add
inc
add
je
push
popa
je
dec
popa
insl
gs
add
add
popa
jb
push
inc
add
push
gs
imul
jne
push
imul
add
insl
outsl
jbe
inc
imul
jns
add
ret
add
jae
jb
insl
jo
add
dec
add
insb
gs
imul
arpl
inc
imul
cmpsb
add
outsb
arpl
push
popa
imul
insl
gs
dec
inc
push
dec
inc
dec
xor
cs
insb
add
inc
add
je
inc
imul
outsb
jae
outsl
outsb
inc
add
inc
add
je
inc
imul
outsb
jae
outsl
outsb
push
add
push
dec
dec
push
inc
push
dec
cs
insb
add
addr16
pop
dec
popa
jns
push
imul
je
inc
push
insb
pop
add
add
or
inc
add
inc
add
cmp
call
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
add
dec
ret
dec
push
push
pop
push
cmp
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
imul
dec
push
bound
arpl
dec
jns
ret
dec
cmp
dec
dec
dec
xor
ret
dec
push
jb
jae
orl
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
sbbb
setae
nop
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
mov
aas
dec
push
dec
cmp
dec
push
dec
xor
ret
dec
push
mov
or
aas
dec
push
dec
cmp
dec
pop
dec
cmp
dec
xor
mov
ret
or
js
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
ret
psrlq
sarb
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
insl
dec
ret
dec
cmp
dec
ret
dec
push
loop
jecxz
repz
js
jns
js
jns
ds
jg
ret
dec
cmp
jb
ds
dec
dec
cmp
dec
xor
add
adc
adc
jns
aas
dec
add
mov
cmp
mov
ds
add
add
ds
add
cmp
add
inc
add
cmp
add
mov
inc
add
cmp
inc
add
inc
add
inc
add
cmp
mov
cmp
add
cmp
sbb
inc
add
test
sarb
add
or
inc
add
ss
add
inc
inc
cli
jne
in
incb
mov
cmp
xor
pushf
clc
xor
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
in
stc
add
cmp
je
inc
add
imul
pushf
clc
sahf
jmp
add
lods
cmp
pushf
or
addr16
add
adc
add
add
inc
add
imul
dec
add
add
add
inc
add
imul
add
dec
add
add
imul
jo
outsl
add
insl
add
add
insb
add
data16
imul
add
imul
outsl
add
add
push
add
add
add
add
inc
add
dec
add
imul
add
dec
add
add
insb
add
insb
add
add
dec
add
inc
add
imul
push
add
imul
add
add
imul
add
imul
add
add
dec
inc
dec
dec
push
fs
dec
dec
imul
push
inc
outsl
imul
data16
push
imul
add
add
add
add
inc
add
pop
dec
dec
dec
push
dec
pop
dec
push
dec
or
dec
add
pop
dec
pop
dec
pop
dec
or
dec
dec
dec
dec
dec
pop
dec
dec
dec
or
dec
add
dec
dec
pop
dec
push
dec
dec
dec
arpl
dec
pop
dec
ret
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jns
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
inc
xlat
rcll
rcr
leave
xchg
fs
push
rcrl
shll
add
add
or
add
shll
and
inc
push
outsl
push
mov
cmp
add
add
add
popa
push
push
push
dec
je
push
jne
popa
jns
pop
je
push
jp
jp
js
imul
push
dec
dec
outsb
push
pop
dec
dec
dec
dec
je
add
add
insl
push
dec
jne
outsb
imul
pop
outsb
jbe
jns
dec
je
bound
push
arpl
push
imul
add
inc
jne
push
outsl
push
inc
inc
push
imul
push
jb
add
insb
jb
inc
push
push
inc
insb
inc
inc
jae
dec
inc
jo
data16
jp
insb
je
jns
popa
push
push
push
dec
imul
inc
jp
pop
inc
jae
dec
dec
gs
jne
add
cmc
jnp
jnp
cmc
lcall
and
add
dec
add
add
inc
mov
mov
xor
sub
in
ret
or
adcb
movsl
cs
push
jecxz
stos
mov
push
ljmp
shl
in
xchg
fstl
shrb
inc
ret
jecxz
iret
and
cmpsb
repnz
lds
sbb
test
pushf
fs
ret
jb
adc
mov
push
push
mov
jo
test
repnz
adc
and
xor
mov
movsb
sahf
insb
mov
mov
mov
cmp
xor
aas
jmp
xchg
mov
lods
push
cmpsb
rcl
out
loopne
adc
mov
cmpl
andb
movsl
sub
and
add
and
and
push
mov
adc
ljmp
mov
repz
mov
stos
fcoms
jmp
sarl
add
add
push
pusha
in
jle
lcall
and
rolb
add
loopne
pop
ficomps
pop
cli
xchg
mov
arpl
or
jnp
push
or
adc
pop
push
push
cmpsb
jbe
mov
flds
fwait
mov
fs
mov
xor
rclb
xchg
lock
pop
les
shll
aaa
lock
mov
dec
orb
leave
jbe
scas
xchg
push
xor
sbb
adc
jns
xor
insl
repnz
lds
cmpsb
lahf
out
push
out
pop
dec
aas
shl
loope
insl
js
dec
mov
and
or
pop
pop
data16
xchg
repnz
or
in
pop
mov
jo
clc
or
enter
inc
repnz
cmovb
push
mov
and
push
cmp
mov
test
ja
leave
notl
add
or
fmulp
push
pusha
cld
cmc
fwait
pop
cltd
xchg
push
push
push
pushf
inc
mov
cwtl
push
scas
jb
mov
mov
dec
daa
mov
pop
loopne
jnp
mov
mov
add
add
add
mov
push
pop
out
stc
out
add
add
xchg
or
bound
movsb
xchg
mov
mov
insl
adc
ret
dec
xlat
cmc
ss
pop
pop
shrl
cmp
cmp
scas
stc
jns
mov
outsl
jae
or
push
pushf
pusha
xor
xchg
test
adc
xorb
adcb
mov
icebp
aaa
in
dec
and
push
jbe
pop
mov
or
pop
sti
repz
sub
xchg
xchg
mov
pop
outsl
cld
mov
ss
movsb
mov
cmpsl
std
stos
dec
cmp
adc
repz
mov
fmull
jb
pop
adc
dec
jl
test
rcrb
je
jg
ss
sbb
mov
mov
lcall
push
and
movsl
dec
mov
fdivl
int
es
mov
pop
js
pop
mov
sbb
icebp
mov
mov
xchg
inc
jmp
dec
jge
in
and
cmp
add
add
subl
roll
inc
and
add
add
xor
pop
in
ret
add
add
push
pop
mov
movsl
jmp
fs
cmp
xor
mov
mov
rorb
pop
jecxz
stos
jge
push
es
push
lods
dec
mov
ljmp
lret
clc
pusha
ret
mov
xchg
repz
and
and
movsl
push
push
sarb
loope
ss
out
nop
das
mov
movsl
mov
adc
stos
and
xor
ret
fcmovne
test
sub
xor
jne
adc
jp
or
lcall
out
mov
jl
enter
xchg
nop
mov
leave
imul
je
cmpsl
xor
mov
sub
mov
mov
cmpb
push
mov
rorl
mov
adc
pop
jae
or
pop
dec
or
mov
inc
lock
add
lods
fbstp
rcr
cld
leave
lret
mov
fcoml
cmp
pop
pop
loopne
aaa
xchg
mov
mov
into
xor
jbe
xchg
inc
test
ret
clc
out
ss
test
sub
xlat
ss
aaa
jns
cmpsl
dec
dec
sub
add
push
mov
stos
and
mov
out
pop
pop
push
aad
scas
jns
jb
js
cwtl
int3
push
inc
sub
std
cmp
repz
rcl
push
lods
cmpsl
push
add
cmp
xchg
mov
mov
jecxz
imul
shr
das
or
hlt
adcl
jecxz
adc
fsubrs
cmp
jno
sqrtps
incb
aam
and
push
dec
outsl
lret
cltd
xchg
into
xchg
xchg
test
pop
dec
sbb
xchg
or
sub
pop
bnd
xchg
dec
and
xchg
neg
notb
push
fdivp
test
fcompl
add
jg
cmc
insl
cmc
out
lcall
enter
imul
cmc
add
add
shl
ljmp
push
fdivl
adc
idivl
pop
loop
leave
mov
jo
inc
xchg
mov
and
shl
in
out
xchg
mov
icebp
or
pop
push
adcl
mov
cmp
jns
fcmovu
lods
push
sub
dec
dec
sti
imul
xchg
out
lock
jb
imul
in
mov
mov
test
jg
inc
inc
es
xor
jno
daa
add
mov
mov
mov
ja
mov
pop
dec
xchg
mov
roll
pusha
or
push
aas
xchg
mov
arpl
cmp
aaa
jecxz
lea
adc
xor
or
dec
sbb
mov
sub
and
sub
fcoms
sub
icebp
mov
add
sub
cmp
and
add
jle
add
outsl
jle
aas
mov
cmp
cli
xlat
add
add
cmp
mov
push
sub
aam
push
mov
cmp
loope
lea
push
shll
push
stc
aad
mov
roll
inc
jne
fisttpll
adc
adc
jmp
pop
pop
sbb
pushw
mov
imul
or
jg
pop
repnz
mov
arpl
jbe
mov
jbe
sahf
cmpsl
scas
jle
fidivrl
sbb
push
sub
mov
jecxz
pop
shrb
or
lret
insl
push
and
cmp
arpl
xor
pusha
cmpsb
mov
roll
leave
mov
cmc
xchg
ss
daa
add
and
outsl
push
lock
add
movsb
fsubrl
xorl
out
stc
dec
lods
xor
cmpsl
aad
rsm
mov
fcmovb
push
jno
arpl
pop
jnp
jae
dec
xchg
shll
outsb
je
data16
push
add
add
jle
and
scas
sti
jle
pop
push
pop
rorl
fadds
add
ljmp
scas
je
cmp
mov
fdivrs
das
inc
test
imul
insb
fs
stos
inc
inc
mov
sti
mov
cmc
cli
mov
pop
pushf
insl
pop
sbbb
and
lods
scas
imul
adc
xlat
sbb
push
enter
ret
cli
bound
xchg
cwtl
aaa
pop
and
movsl
je
push
dec
push
sub
and
sub
das
ljmp
test
pop
bswap
xor
ljmp
push
mov
gs
xchg
mov
push
fucomip
add
xor
dec
inc
xorb
and
dec
rcrl
sub
pop
sbb
lds
and
xchg
cmp
cmpsb
add
xchg
sbb
sahf
imul
inc
cwtl
es
ret
cmp
pop
xabort
jg
mov
aas
dec
out
push
outsb
fistpl
add
add
negl
arpl
arpl
add
add
add
das
cmp
sub
add
fnclex
adc
jp
push
dec
mov
mov
popa
in
fs
movsl
jbe
pop
mov
test
mov
jl
xchg
hlt
pusha
xor
mov
hlt
gs
add
test
in
fbld
pop
lea
add
cmpsl
cwtl
mov
cs
sub
jb
aad
push
xor
jns
mov
inc
and
mov
movsl
fmuls
sbbb
inc
out
mov
mov
push
test
loop
insb
cltd
vcvtpd2dqy
mov
dec
out
mov
add
daa
add
sarl
pop
and
cmp
push
xor
imul
call
xchg
addl
mov
sub
cmp
lcall
xchg
pop
ja
sub
movsl
xor
mov
int
ret
sbb
mov
pop
mov
xor
push
jl
jle
insb
out
adc
fildl
add
jae
dec
sbb
rclb
popf
insb
inc
leave
adc
popa
cld
inc
adc
cmp
push
cmp
cmpsl
or
xor
sub
sub
jo
jg
jecxz
mov
imul
and
pop
ja
repz
cmp
push
mov
popf
add
push
push
lcall
cli
sub
push
add
sti
push
pop
scas
iret
xor
mov
xchg
jmp
inc
aam
aam
fcmovnu
pop
mov
jo
and
adc
test
int
shlb
and
call
imul
out
repnz
cmp
jge
mov
mov
pop
lods
add
aaa
add
int3
jnp
or
ja
inc
pop
loopne
push
mov
loope
adc
and
stos
lret
adc
lret
out
dec
xchg
out
push
pop
testl
add
mov
adc
in
xor
adc
push
faddl
add
inc
push
fsubrp
sub
fs
push
xchg
push
jp
cmp
mov
xlat
inc
fidivrs
fmuls
test
repz
popf
dec
test
cwtl
inc
jmp
push
inc
add
shrb
sbb
push
sub
aas
lods
or
push
mov
adc
loopne
push
push
cmpsb
incl
mov
shlb
imul
push
out
jb
call
sub
or
pop
mov
sub
imul
cltd
jg
arpl
xor
dec
push
lods
imul
xchg
ljmp
mov
jg
xchg
pop
shl
mov
or
js
rclb
pop
cmp
mov
fdivrl
fs
or
dec
xchg
lods
cmp
stos
cmp
mov
add
lret
jp
sbb
int
xor
loope
sub
test
inc
pop
pop
pushf
mov
pusha
pop
push
test
das
lret
add
add
data16
jne
mov
lcall
add
add
jmp
in
push
leave
or
je
jmp
jae
push
addl
js
cltd
pop
and
cmp
jb
jg
cmpb
lods
dec
lahf
pop
lods
imul
inc
rorb
cltd
and
adc
fstpt
dec
pop
repz
das
and
add
or
jmp
out
mov
xchg
push
lods
pop
pop
daa
inc
push
pop
xchg
xchg
lds
jle
in
jg
sub
repnz
jne
add
sti
xchg
cmp
mov
push
mov
cmp
mov
inc
ds
push
std
aad
lret
or
mov
pop
mov
stc
or
jge
mull
insb
sub
enter
data16
enter
push
jmp
sbb
sbb
int3
pop
cmp
push
adc
xchg
inc
call
mov
data16
sbb
in
sahf
mov
add
add
add
jnp
sti
xchg
lahf
mov
enter
add
add
lock
or
aas
xchg
fsubs
push
cld
mov
sub
xchg
mov
mov
stos
inc
push
push
cltd
popa
dec
xor
xchg
mov
inc
aam
lods
popa
adc
cltd
sbbl
xchg
xchg
push
fbld
add
mov
or
outsl
adc
lret
sub
cmp
insb
cwtl
pop
xor
in
jg
mov
packsswb
cltd
cmp
cmp
leave
dec
pop
incl
jecxz
mov
js
mov
shr
int
popf
xor
imul
add
mov
adc
add
and
mov
je
pop
scas
popf
sub
dec
jb
adc
ret
push
push
mov
mov
mov
stos
call
cmpsb
and
iret
inc
pop
rcll
int3
add
inc
popf
fimull
push
jge
add
mov
out
inc
adc
add
pop
sarl
mov
sub
add
add
mov
sub
popa
cmpl
dec
adc
and
sub
push
fisubrs
in
push
pop
xor
daa
xchg
mov
nop
lods
xchg
mov
add
les
mov
jecxz
jo
out
imul
push
mov
add
xor
inc
ds
shll
adc
mov
jle
cmpsl
sbb
ss
icebp
out
sub
popa
xchg
orl
inc
cmp
mov
loop
mov
std
cmp
mov
lods
mov
mul
insl
mov
bound
cmp
cmc
daa
pop
cmp
xchg
dec
sbb
add
pop
int
test
sbb
sub
gs
movsb
outsl
sub
das
mov
push
push
xchg
andb
sahf
lock
xchg
push
mov
pop
or
jb
and
adc
enter
in
out
ds
out
and
jge
push
inc
incb
lahf
add
add
repz
std
repz
xchg
aaa
and
add
add
pusha
mov
inc
aam
shlb
mov
inc
cmp
mov
add
sti
cmpb
mov
push
fdivrl
aas
or
lea
je
fucom
fcoms
ds
jle
jno
inc
dec
mov
addb
inc
jge
inc
icebp
cmp
in
cmp
lods
add
in
cwtl
jae
cmp
push
ja
test
adc
mov
dec
cltd
cmp
or
dec
xor
mov
addb
mov
push
jno
fmulp
inc
push
pop
lds
cmpl
sbb
out
mov
fiadds
push
or
or
inc
add
lds
mov
sub
xor
mov
push
mov
sbb
insb
jg
ret
jle
repz
xchg
dec
out
cmpl
stc
xchg
aad
ret
pop
mov
mov
inc
mov
add
in
sub
cmp
arpl
je
xlat
jnp
daa
loope
add
pop
popa
jno
push
icebp
pop
loop
insb
icebp
mov
in
push
das
nop
push
lcall
push
jne,pt
cmp
lock
xchg
scas
aam
outsl
add
lea
add
inc
dec
aam
sub
or
outsl
mov
inc
lea
and
in
daa
aad
push
jo
call
cmpsb
outsl
push
pushf
dec
mov
jmp
push
imul
dec
xor
lcall
adc
pop
ja
push
daa
adc
xor
pushf
mov
pop
cmp
and
test
sbb
and
cmpsb
nop
and
std
xor
sbb
dec
pop
push
jne
lcall
xchg
and
test
mov
or
rorl
dec
sar
adcb
jbe
fnsave
inc
mov
dec
jl
pop
mov
inc
adc
testl
call
add
test
inc
jnp
add
insl
lcall
mov
inc
sub
mov
add
add
loop
pusha
pusha
andl
pop
xchg
push
loop,pt
lods
stos
bt
in
lahf
xchg
adc
adc
bound
mov
andb
stos
dec
mov
inc
sbb
or
sbb
adc
cmp
pop
pop
sbb
sub
in
inc
mov
xchg
testl
sahf
cmp
imulb
and
jae
sbb
mov
fdivrs
or
popf
fcomp
in
adc
cmpsl
stos
xchg
pop
int3
and
cltd
enter
xchg
push
js
jbe
xor
sub
insb
jne
and
ret
pop
test
push
sbb
push
scas
xchg
shlb
or
rorb
stc
pushf
sbb
sub
and
jp
repnz
test
nop
movsl
inc
and
sub
inc
mov
dec
sti
push
add
add
xchg
in
mov
incl
rcrl
jecxz
add
es
fs
sbbb
fs
or
test
add
pusha
fstpt
sub
push
ss
inc
and
mov
push
lock
adc
jge
xchg
lahf
rclb
out
mov
mov
insb
lds
clc
fadds
jle
arpl
cmp
sub
add
leave
add
aad
test
pop
pop
jge
pop
outsb
add
sbbb
pop
pop
adc
mov
or
mov
gs
pop
popa
add
xor
and
xchg
outsl
sti
loope
jl
cmc
dec
inc
xor
shll
jno
lahf
cld
pop
push
cmp
sub
xor
sub
test
in
jl
mov
sarb
xlat
les
push
loop
sbb
pop
out
call
sbb
cli
push
xor
xor
fbstp
imul
js
movsl
mov
add
add
sub
in
negl
sub
movsb
push
iret
aaa
repz
add
repnz
dec
or
sbb
sti
into
xchg
dec
shlb
xor
syscall
adc
xchg
cmpsl
stos
loop
rcr
mov
jne,pn
adc
xor
push
lods
ja
adc
cmc
sbb
inc
pop
cld
int
aas
scas
push
pusha
sahf
dec
aaa
push
stc
loop
test
es
out
andl
inc
cld
dec
pop
xchg
lods
add
lds
and
adc
inc
mov
inc
push
test
lcall
inc
inc
inc
fadd
sbb
fsts
arpl
jno
sti
enter
enter
aaa
xchg
insl
pop
xchg
movl
jno
pop
xor
add
sub
pushfw
push
xor
push
lret
int3
jle
fcmovnbe
add
cmp
jno
jmp
pop
mov
mov
add
mov
lods
adc
inc
jl
inc
ror
xchg
orl
cmc
in
fidivrs
repz
pop
inc
mov
add
add
mov
stc
dec
push
fcompl
cmp
add
add
mov
push
in
aaa
adc
cmp
sbb
insb
or
imul
xlat
rcl
jns
cmpsb
das
clflush
daa
jnp
mov
ja
imul
adc
clc
movsl
jns
lea
movsb
aas
rcrl
pop
adc
inc
and
mov
cmp
out
in
adc
push
push
sub
inc
shrb
int
test
or
loope
jb
cmp
push
adc
aad
mov
adc
mov
or
jmp
movsb
cmpsl
call
bound
jmp
js
pop
mov
arpl
sub
icebp
jmp
int3
shrb
dec
sbb
ljmp
lahf
jp
jecxz
fwait
js
movsl
inc
sub
fbstp
mov
mov
sbb
idivl
adc
das
sub
jp
adc
addb
andb
fimuls
addb
add
adc
push
push
push
mov
push
inc
out
add
inc
inc
jg
mov
xor
pop
aas
adc
dec
or
push
loopne
jbe
cwtl
inc
and
pop
dec
xlat
sub
loopne
push
pop
orb
adc
arpl
mov
mov
pop
dec
fsubp
ds
std
dec
cmp
pop
pop
inc
mov
aas
push
jne
mov
inc
and
jmp
jbe
mov
jb
out
xchg
or
jo
mov
and
mov
adc
add
negl
dec
push
lahf
in
lahf
out
out
xchg
add
loope
cmc
push
ljmp
cmp
jecxz
in
inc
andb
push
add
and
push
jbe
lds
pop
hlt
stc
jno
jo
cld
popf
sub
divl
mov
pop
cmc
and
mov
mov
rcrl
jns
enter
jge
xor
mov
or
test
ds
testb
add
out
repnz
add
pop
lcall
les
and
faddl
add
add
xchg
je
insl
aas
clc
push
fsubs
sub
adc
flds
lret
xchg
cmp
fidivs
scas
loope
jae
xor
jae
out
aaa
dec
dec
xchg
xor
and
popf
rcll
bound
orl
xor
xlat
xchg
aaa
cmpsl
sbb
adc
add
mov
jb
jmp
jmp
outsl
inc
div
push
mov
repz
dec
pop
outsl
cmp
adc
sub
xor
mov
std
adc
roll
aas
js
cwtl
pop
test
add
movzbl
jle
xor
xor
test
ljmp
jmp
sub
pop
xchg
shll
xor
jno
jge
test
jmp
stc
enter
cmp
or
test
ffree
dec
jno
out
cmp
test
jns
jl
xchg
in
jbe
adc
stc
mov
push
and
jbe
or
add
add
mov
push
decl
pop
andl
add
push
push
sti
jg
rclb
iret
sbb
lahf
cmp
pandn
add
ss
rolb
dec
iret
jecxz
add
add
xchg
cmp
mov
sbb
push
push
push
push
dec
add
adc
out
stos
or
mov
and
jp
js
mov
xor
and
hlt
rcll
sub
dec
mov
pushf
fwait
push
mov
xchg
sub
test
mov
scas
idiv
roll
cvtps2pi
stc
jno
xor
and
arpl
mov
mov
mov
aaa
clc
mov
sbb
hlt
das
mov
cmp
push
in
enter
ud2
dec
or
into
push
lods
push
inc
cmpxchg
mov
roll
adc
or
push
mov
fbstp
add
insl
xchg
mov
lock
add
add
jmp
in
push
sub
popf
dec
jmp
add
push
mov
mov
and
add
add
nop
enter
jmp
jne
in
mov
insl
cmpsb
mov
loopne
mov
data16
mov
test
nop
push
lds
call
out
imul
pop
and
insl
cmp
out
mov
in
pop
cwtl
in
pop
inc
pushf
repz
in
dec
sub
ret
jp
push
adc
xchg
sbb
jp
sbbl
in
xchg
lock
inc
or
pop
es
ja
fisttps
in
imul
mov
xor
sbb
cs
inc
stc
divl
ja
imulb
movsl
lock
mov
into
ljmp
add
lock
xchg
sub
in
mov
in
mov
cmp
int3
mov
xchg
push
mov
pop
dec
push
sbb
inc
dec
dec
fstl
movsb
adc
mov
inc
cmp
in
in
add
and
and
mov
lcall
ljmp
mov
dec
pusha
push
adc
pop
adc
inc
fcomp
mov
sahf
sarl
outsl
cmp
pop
jae
shr
mov
mov
decl
add
push
pop
shr
std
scas
cmp
or
mov
jb
xor
mov
add
push
es
adc
push
dec
cmpsl
dec
mov
adc
inc
mov
push
add
mov
jg
imul
and
pushf
jp
jb
push
stos
dec
xchg
jbe
dec
int3
in
lods
daa
hlt
jle
adc
inc
pop
xor
xlat
push
stos
pop
xor
jb
movsl
icebp
adc
add
dec
and
out
lret
or
dec
dec
aas
cmpsl
stos
mov
dec
push
jae
decb
sarb
and
xchg
inc
inc
sbb
scas
fmull
xchg
iretw
adc
fcomp
stos
push
sub
arpl
scas
mov
push
ror
jmp
add
sti
movb
add
repz
ror
lock
jnp
xor
xchg
cmpsb
fldenv
pop
jmp
add
sub
movsl
scas
mov
or
adc
hlt
mov
imul
and
pop
mov
pop
push
scas
mov
dec
sbb
adc
sub
insb
cmc
mov
in
in
sti
outsb
rorl
mov
test
incl
fisubs
stos
push
fdivl
xor
test
or
sub
or
pushf
xchg
lret
pop
movsl
test
lock
iret
lock
aad
mov
std
xchg
sub
in
es
jb
in
scas
mov
or
mov
pop
inc
in
addl
rcl
bound
mov
pushf
dec
pop
addr16
pop
mov
mov
xor
sar
push
addr16
sbb
mov
push
mov
out
pushf
mov
and
test
popa
mov
fcom
push
shlb
sub
dec
call
fdivl
sti
jb
jbe
lea
add
and
repz
fisubs
fs
pop
in
add
add
imul
insb
mov
dec
mov
sahf
in
insl
stos
mov
cmpsl
fdivl
mov
inc
jmp
mov
iret
cmpsb
arpl
std
std
push
enter
insl
xchg
out
cmp
inc
mov
hlt
inc
sub
mov
stos
mov
or
stc
out
pop
lcall
sbb
outsl
cld
into
mov
mov
adc
lea
pop
roll
std
inc
inc
add
imul
xor
lcall
insl
aaa
mov
lea
dec
jmp
fs
icebp
dec
fs
mov
fmul
loop
inc
outsb
sbb
leave
push
stc
scas
pop
aaa
jmp
pop
adc
inc
jecxz
jle
lock
inc
inc
ljmp
repz
out
aad
mov
xchg
ja
push
xor
daa
sti
popf
add
repnz
inc
out
mov
popa
in
dec
jp
inc
movsb
push
inc
add
out
sbb
scas
lahf
cmp
arpl
add
add
cwtl
lret
xor
jle
dec
inc
and
jo
fcompl
dec
dec
inc
adc
adc
mov
lea
outsl
sub
roll
mov
std
xor
aam
fisubl
add
adc
push
cli
inc
aas
rorl
push
in
stos
mov
adc
jns
lock
xchg
xor
lret
mov
and
cltd
lcall
ret
cmp
xlat
mov
adc
repnz
inc
xor
xchg
mov
or
daa
enter
jnp
cmpsb
mov
jecxz
add
and
cmp
ds
mov
pop
jle
sub
sub
xor
lods
inc
loope
push
lods
loop
mov
push
xorb
and
mov
movsb
ja
std
outsl
pop
adc
xor
lret
xorb
dec
dec
daa
mov
pop
cmp
mov
in
xchg
les
add
sub
jl
xor
xor
aas
shll
leave
lret
jmp
sbb
add
shrl
cmc
scas
sub
mov
push
add
add
xor
out
dec
imul
sbb
jns
sub
adc
xchg
pop
rorb
add
pop
in
xor
inc
or
push
sbb
ss
inc
pop
out
sbb
mov
into
add
mov
insb
fmuls
push
pop
cmp
mov
mov
mov
sbb
pusha
sbb
inc
aaa
in
mov
loope
push
divb
adc
mov
scas
sarl
cmpsb
sahf
imull
movsl
lds
mov
adc
push
lea
mov
sbb
cmp
stc
pushf
sbb
mov
push
sbb
sbb
leave
sahf
sub
xchg
dec
ljmp
mov
jmp
in
and
sti
imul
mov
jp
xchg
jl
je
push
rcll
test
sub
rcl
xor
add
lret
pusha
rorb
cmpsb
mov
enter
add
add
frstor
cmp
jl
aad
sbb
and
cmpsb
adc
rcr
inc
icebp
add
mov
xor
adc
fdivrl
cltd
sbb
sbb
movsb
push
fs
arpl
or
ds
mov
ret
popw
lea
or
ficoml
or
mov
mov
dec
ss
fld
vaddsubpd
scas
mov
mov
filds
call
into
mov
pop
mov
repz
push
sub
out
mov
pop
loopne
stos
cmp
sub
lret
in
cmp
fwait
add
cs
in
sbb
pop
sub
aaa
push
jmp
lock
xor
lret
outsl
cli
rol
std
popf
add
inc
sbbb
lock
daa
jecxz
jnp
out
jae
sbb
jp
repz
pop
pop
das
idivl
mov
ja
sub
adc
sbb
dec
into
jecxz
push
testl
sbb
jb
add
add
test
das
lahf
fcmovb
dec
mov
stos
iret
loopne
mov
sub
sub
ljmp
leave
dec
add
push
mov
sub
imul
test
subb
lahf
jno
dec
mov
adc
mov
sub
adc
mov
ljmp
adc
cmp
stos
lcall
addr16
nop
es
dec
ljmp
mov
inc
loop
sarl
push
aas
inc
inc
cmp
es
jecxz
out
sub
push
xlat
sub
push
cld
outsl
inc
xor
test
mov
dec
cltd
pop
cmpsb
scas
fstps
pop
mov
in
adcb
stos
rclb
mov
and
push
inc
or
loope
popa
mov
aaa
shll
pop
jno
mov
sub
leave
aas
stos
jb
mov
mov
rcrb
pop
ret
das
aam
aad
push
mov
add
add
xchg
mov
mov
pop
das
jno
mov
ja
add
add
mov
addr16
cli
shl
sbb
jl
mov
sbbl
in
arpl
mov
sbbb
sub
pop
lret
mov
mov
insl
rcrl
add
sub
mov
mov
lock
xor
dec
rorb
mov
xor
dec
or
sub
mov
xor
jbe
fwait
mov
cmp
or
mov
repz
cmp
sbb
xchg
clc
sub
aas
fucomi
loope
je
insl
cltd
dec
lods
xor
into
pop
pop
push
mov
std
lds
cltd
movsb
jns
rcrl
dec
cmp
and
jbe
aad
sbb
push
mov
outsl
cli
sbb
adc
loopne
inc
xchg
cwtl
mov
push
rolb
mov
inc
sbb
sub
push
jnp
mov
faddp
or
lret
jnp
cmp
xchg
pop
stc
loope
add
out
push
movsb
xchg
jg
repnz
shlb
fs
or
add
mov
fucomi
xor
jbe
jl
add
add
sti
sbb
jl
test
cmp
imul
sbbb
enter
jae
or
dec
cli
dec
cs
cmp
push
in
rorl
xorb
pop
push
dec
or
cmp
in
xchg
adc
add
mov
fs
pop
mov
push
pusha
movsl
pop
inc
mov
mov
int3
imul
addl
sub
jo
and
push
mov
shrl
push
push
sbb
loop
cmp
xor
pop
fstl
mov
daa
jp
push
mov
add
leave
subl
orb
enter
mov
repnz
jl
addl
out
out
stos
dec
fisttps
stc
mov
movsb
xor
insl
dec
xchg
sbb
push
sbb
in
inc
call
adc
jbe
push
inc
pop
jns
aas
loopne
sub
cmpsl
insb
xor
add
dec
dec
andb
jp
xchg
mov
in
push
cld
pop
fsubrs
cli
mov
cmp
xor
cmp
cmp
out
je
dec
lds
call
mov
sbb
test
cwtl
mov
sub
outsb
movsb
xchg
push
inc
xorl
push
insb
addr16
cmpsl
ret
sbbb
dec
popf
mov
out
test
sub
scas
pop
sub
mov
and
repz
lret
adc
enter
pop
pop
adc
fdivr
cmp
or
js
push
xchg
test
mov
xchg
mov
popf
pushf
insb
mov
lret
or
mov
add
mov
lahf
sti
mov
stos
out
call
sub
xor
sti
int3
stos
fst
inc
xorb
ret
in
jmp
ds
popf
aad
lret
xchg
aad
add
add
jnp
mov
inc
mov
xchg
add
add
lods
insb
sub
jp
test
xor
pop
fstpl
loope
mov
pop
das
dec
iret
pop
test
std
xchg
mov
jo
out
cmp
pop
js
sti
test
push
inc
xor
inc
iret
push
xor
ds
jecxz
sub
and
push
xchg
jg
mov
clc
aas
inc
jo
lods
adc
out
mov
mov
or
stc
in
jnp
jae
sub
cs
jge
push
dec
fs
jbe
incl
in
and
mov
jnp,pt
mov
dec
mov
mov
cli
jns
jecxz
sub
ficoms
cli
cmp
bound
pusha
std
add
pop
in
lcall
or
cld
push
dec
xor
inc
gs
test
mov
fimuls
mov
addr16
pushf
enter
push
add
pop
mov
push
jg
imul
add
xlat
pop
xlat
jg
mov
cmp
jge
mov
add
add
dec
mov
addr16
mov
mov
mov
add
pop
mov
scas
pop
xchg
mov
and
mov
pop
dec
dec
lods
add
mov
fsts
insl
push
insb
cmc
clc
inc
push
insb
sub
jp
insb
ljmp
outsb
or
adc
pop
mov
or
cmp
and
push
arpl
aad
mov
clc
js
fstpl
les
aad
rolb
mov
jmp
gs
jb
ret
jb
jg
incl
and
bound
mov
shrb
lods
ljmp
add
adcb
icebp
int3
sub
pop
es
cmp
sahf
jbe
addr16
inc
aad
push
inc
mov
pop
jmp
and
insb
jne
pop
sub
andl
mov
jne
lret
filds
sub
push
mov
outsb
mov
outsb
imul
add
xchg
mov
idivl
lret
mov
testb
add
lods
jae
and
adc
shll
push
ds
int
test
stc
push
stos
pop
xchg
cmp
cmp
adc
inc
hlt
lods
cmpsb
sbb
xor
aad
cmp
adc
mov
fistpll
pushf
jmp
movsb
inc
adc
pop
adc
xlat
cwtl
into
rolb
push
lods
loop
stos
xchg
lds
pop
lcall
inc
fsubr
mov
mov
jmp
enter
test
dec
arpl
mov
and
fwait
out
and
mov
sbb
cmc
push
and
cmp
clc
adcb
xchg
inc
clc
or
xlat
push
fbstp
cltd
mov
cmp
lods
mov
cmp
fwait
push
fiaddl
lret
cs
icebp
sub
dec
and
aam
ffreep
movsb
adc
roll
dec
sub
sub
or
cmp
ficompl
xor
hlt
add
add
mov
fcmovb
dec
ficoml
testl
add
aas
or
xor
and
adc
push
cmc
daa
test
sbb
adc
jle
sbb
cmp
push
cld
push
sarl
test
cmp
jb
sbb
shlb
or
xor
mov
dec
sub
cmpsb
int
js
dec
outsl
lods
mov
adc
pop
cmc
arpl
es
stc
rep
sbb
push
mov
jl
dec
ror
ret
sbb
mov
repz
mov
lock
or
std
cs
pop
inc
out
mov
xorl
jmp
ret
cmp
rclb
mov
xchg
pop
mov
out
loopne
stos
popf
push
insb
xchg
inc
jl
pop
movsb
das
in
repnz
sbb
cmc
push
outsl
cmp
andb
add
mov
jns
imul
addr16
xor
jo
xor
mov
dec
int3
jb
ret
push
stos
mov
dec
add
add
push
pop
push
jmp
shlb
cmc
mov
add
jp
test
stos
jmp
mov
jnp
imul
or
push
xchg
mov
xchg
sub
aaa
aaa
jg
ds
lahf
xlat
shl
cmpsb
jno
hlt
rcll
dec
fidivs
cmpsb
dec
jmp
jle
xchg
insl
push
mov
lret
pop
jle
adc
jl
inc
addr16
bound
rcrb
js
push
sub
mov
test
mov
pop
xor
jno
pop
loopne
dec
push
jmp
jmp
mov
fstps
dec
into
jp
mov
out
add
adc
xchg
jmp
or
outsl
or
leave
je
xchg
adcl
inc
dec
jb
movsl
ficoms
xchg
and
test
test
pop
lock
fadd
movsb
inc
xchg
rolb
adc
mov
mov
popa
cmp
xor
scas
enter
cmp
ds
pop
mov
fidivs
shrb
xchg
fadds
in
add
add
pop
lods
pop
cli
cmc
cmpsb
lret
ret
dec
lahf
stc
add
add
pop
push
mov
xor
adc
inc
xor
cwtl
ss
out
sahf
sub
xchg
xor
negl
jge
popf
int
jb
insb
ds
push
adc
mov
inc
or
pop
inc
lock
fistl
inc
sub
push
sbb
push
sub
pop
ffreep
out
leave
in
in
ja
add
jbe
cmp
adc
mov
push
mov
sub
mov
andl
ja
fs
cmp
adc
xchg
cwtl
cmc
je
hlt
test
fcompl
out
add
je
xor
adc
cmp
sbb
adc
sahf
or
addr16
dec
push
sub
xchg
subl
add
movsb
and
push
in
mov
mov
icebp
int
and
dec
add
pop
pop
enter
mov
sbb
shrl
in
mov
sub
fsub
lret
add
push
pop
ss
add
add
stos
cltd
inc
popf
jae
out
xor
movsb
cli
add
add
sub
dec
int3
xor
push
mov
test
mov
test
push
mov
ficoml
pop
mov
ret
movsb
mov
jno
sub
outsb
and
fsubs
or
mov
adc
movsl
fadd
sbb
test
jge
jle
out
push
adc
sahf
or
lret
mov
daa
aam
shl
in
xchg
loopne
pushf
mov
popf
js
lods
insl
test
sahf
push
movsl
xchg
inc
fcom
sub
cmpsl
inc
mov
and
aas
ds
jnp
pop
mov
xor
les
out
daa
and
sahf
sbb
stos
pop
stc
ficompl
mov
jo
and
iret
pop
sti
test
push
xor
xchg
inc
push
mov
mov
divl
xor
add
mov
mov
int
popf
std
inc
cmp
jne
ret
mov
inc
fcmovbe
cmp
lods
lea
cmp
pop
xchg
pop
cmp
loopne
add
add
aam
int
aaa
das
aam
outsb
jo
test
add
add
push
imul
mov
or
push
xchg
sub
xor
push
inc
add
pop
mov
mov
jle
rclb
loope
jle
hlt
mov
ljmp
add
add
cltd
sbb
addr16
fldt
dec
jae
ds
add
loop
jno
dec
xchg
mov
imul
add
js
xchg
push
lahf
loopne
jecxz
dec
mov
jg
ret
ror
insb
aam
and
lret
addb
mov
cmp
xchg
xor
cmc
loope
xchg
repz
xchg
sbb
int
cld
xchg
jp
inc
cmp
or
jmp
loopne
jns
inc
mov
lods
push
add
fisttps
xchg
cmpl
mov
cmp
pop
pop
jge
in
xor
data16
lret
push
jae
jg
idiv
mov
jne
sbb
movzbl
add
add
arpl
addr16
sub
in
ds
push
scas
cld
add
add
out
arpl
add
jle
or
lods
inc
movsl
xchg
sub
shrb
sub
sub
mov
adc
es
sub
mov
notb
int3
cmp
push
xlat
movsl
or
push
imul
hlt
leave
setnp
inc
push
add
scas
mov
inc
or
inc
ss
popa
mov
cli
sbb
add
fmull
sub
insl
pusha
add
movsb
sbb
pop
lcall
imul
out
push
or
clc
push
hlt
mov
ljmp
pop
loop
adc
aam
ret
push
push
cmp
out
mov
sbb
mov
cmp
add
mov
mov
add
das
inc
pop
push
xchg
in
mov
movsb
inc
mov
imul
test
enter
rclb
add
mov
int
push
mov
add
out
out
pushl
xchg
xor
mov
loop
mov
add
add
ss
scas
cltd
scas
arpl
or
mov
dec
in
xchg
push
mov
out
loopne
jl
dec
or
add
pop
sub
pop
nop
sbb
cs
push
loope
mov
cmp
lock
mov
pop
mov
xor
out
dec
xchg
sbb
push
add
gs
lea
push
mov
adc
fdivrs
sub
shr
dec
adc
inc
mov
inc
not
or
jne
mov
jmp
or
shll
mov
mov
frstor
out
call
adc
sub
mov
movsl
sahf
mov
int
jae
roll
mov
sbb
dec
lret
mov
pop
push
enter
pop
jbe
xchg
fs
test
cmp
movsb
out
xchg
sub
cmp
cmp
lods
fiadds
mov
cli
sti
pop
lret
pop
test
add
add
push
scas
mov
je
outsl
mov
add
add
std
sbb
lods
fsubrs
pop
cmpb
cmp
cmc
xlat
mov
fsts
jecxz
push
fists
jl
push
roll
mov
dec
fsubs
add
in
jg
mov
xchg
imul
dec
mov
xchg
push
cmp
std
pop
jno
sti
or
dec
in
inc
adcb
mov
xor
mov
jp
jl
jg
mov
in
in
mov
mov
leave
sub
xchg
push
adc
or
sub
imul
addr16
aas
sub
sub
out
push
sub
data16
dec
cmp
stc
outsb
outsb
mov
pop
add
mov
outsb
dec
imul
loopne
dec
push
mov
adc
int3
out
sti
cltd
mov
data16
fldenv
jne
xchg
jo
idivl
rolb
call
into
pusha
xchg
pop
pop
add
add
xchg
and
movsl
mov
mov
mov
sbb
incl
add
sub
and
cmp
loopne
mov
mov
shl
and
lds
fadd
shrl
into
aam
push
push
jns
div
sbb
mov
xchg
jns
cld
cld
lods
jp
sbb
popf
cmpl
sub
cmpsl
sbb
pushf
fidivrs
xchg
mov
pop
fcomps
loope
mov
clc
sbb
fdivrs
icebp
pushf
test
pop
jecxz
cmp
xchg
inc
jne
cs
push
dec
lock
push
add
and
jo
mov
lea
adc
sbb
pop
icebp
pop
lret
xor
cmpsl
and
addl
cmp
pop
dec
mov
jb
test
int3
fldenv
scas
cmpsb
imul
mov
es
notl
in
int
push
fwait
xchg
insb
or
fstpl
push
pushf
push
lret
test
fildl
test
jle
lahf
mov
add
add
mov
push
jg
mov
inc
mov
add
add
xor
aad
bound
sub
pop
xor
popf
cwtl
out
mov
fsubr
mov
fbld
adc
mov
cs
jecxz
sub
jbe
mov
mov
test
lret
pusha
mov
out
sti
aas
test
js
inc
dec
pop
push
imulb
jo
ret
mov
pop
xchg
mov
xor
sub
push
mov
and
fnsave
adc
or
and
stos
inc
std
xor
test
push
fbstp
cmp
movsb
sbb
inc
aaa
lods
lret
aas
in
arpl
mov
lahf
movsl
pushf
dec
and
xor
movsb
in
inc
jge
add
adc
ret
inc
enter
mov
xchg
mov
pop
pop
dec
xorb
pushl
iret
pushf
push
bound
stos
cmpsb
pop
mov
add
mov
pop
sub
add
add
mov
mov
lods
imul
dec
lock
ljmp
add
das
fsubrl
mov
enter
outsb
xor
popa
and
arpl
scas
inc
lds
out
xor
mov
sbb
dec
and
imul
sarl
cmpsl
faddl
sahf
mov
lret
mov
add
insb
push
add
jne
dec
test
xchg
mov
add
fstl
xor
jmp
test
in
in
jecxz
int3
mov
inc
xchg
lret
shrb
pop
dec
pushl
add
clc
movsb
hlt
jecxz
mov
hlt
mov
xchg
xor
jae
shll
xchg
enter
adc
dec
cmc
adc
rcl
inc
lods
jne
lcall
jmp
dec
ss
gs
add
mov
xchg
push
in
and
out
inc
jno
adc
sbb
cmpsb
rcl
mov
movd
adc
andnps
mov
aam
jge
cld
mov
cmpsl
sbb
test
pop
or
je
add
xchg
sub
scas
or
cmp
popf
xor
add
in
leave
out
jnp
scas
pop
mov
pop
lahf
xor
mov
inc
add
mov
daa
sub
jp
test
pop
in
insb
mov
jmp
push
outsl
mov
cli
mov
cli
clc
adc
pop
pushf
sbb
xor
sbb
xchg
sub
mov
jo
into
cmp
jbe
mov
dec
mov
sbb
sbb
pop
negb
lods
int3
in
shl
sbb
in
sbb
test
pop
sub
dec
push
push
pop
mov
and
or
cwtl
cmpsb
add
movsl
cmp
xor
pushf
cwtl
sbb
mov
push
dec
bound
and
mov
jp
das
insl
xor
mov
mov
or
xor
mov
push
push
test
fldt
call
mov
mov
cmp
add
xchg
enter
push
fbld
cmp
xor
add
add
dec
mov
out
test
mov
out
aaa
out
mov
cmpsl
loope
call
mov
shrb
and
adc
and
jle
lods
sarb
jl
mov
cmpsb
mov
nop
inc
xchg
outsb
sarl
add
repnz
in
fsubrs
sbb
in
js
lret
ja
xchg
pop
pusha
repnz
pop
aam
mov
mov
inc
cmc
cmp
fbstp
shr
mov
out
push
or
out
sbb
and
push
shrb
pushw
xchg
cltd
xchg
jp
add
popl
ss
mov
pop
cmc
sub
lcall
add
out
add
es
cs
pusha
fisubs
faddl
mov
iret
and
add
adc
xchg
xchg
xor
daa
cmp
push
inc
cwtl
pop
daa
and
lds
add
xchg
ds
inc
test
in
pop
jecxz
adc
xchg
movsb
out
enter
cmpsb
fisubrl
stos
xchg
add
mov
into
fwait
add
mov
push
add
add
cmpsl
mov
repnz
mov
push
out
test
ja
mov
sbb
lcall
int3
call
jg
nop
pop
mov
les
dec
cmp
andl
in
iret
enter
imul
mov
push
aad
lds
iret
mov
xlat
sub
add
icebp
xchg
ljmp
call
daa
pop
aad
loopne
cmc
mov
movsb
mov
stos
cmp
ljmp
mov
leave
add
xlat
mov
pop
dec
and
jmp
dec
cwtl
aad
ja
sub
je
stc
adc
cmpsl
mov
pushf
pop
fnstenv
movsb
xlat
cmc
xor
xchg
jb
xor
cmp
jno
aam
jl
adc
repz
fimull
pusha
test
daa
jnp
subb
mov
in
fwait
adcb
mov
mulb
add
add
xor
mov
pop
sarb
in
sbb
fildl
add
daa
jmp
xchg
sbbl
fnstcw
mov
idivb
jns
jnp
push
insl
mov
jg
xlat
cwtl
enter
test
test
in
sbb
aaa
mov
popf
rcrl
das
pushf
inc
in
into
cmp
xchg
add
push
leave
outsb
rcrb
sub
mov
aas
mov
cltd
into
sbb
jl
sub
test
push
lahf
fiadds
sbb
mov
inc
sub
sub
cmp
pop
out
js
mov
or
lcall
xor
push
imul
scas
cmp
pop
cld
inc
pop
sbb
cmp
and
push
fildl
rorb
sahf
push
dec
lahf
outsb
mov
inc
xchg
mov
sub
pop
dec
bound
dec
out
cli
xchg
rcl
fwait
mov
mov
nopl
lods
sbb
pop
loopne
sar
mov
add
sti
inc
out
aas
mov
rolb
fidivl
add
addl
aas
cwtl
sahf
aad
push
repnz
addr16
inc
loopne
bound
add
fs
or
jmp
popa
jl
lds
fs
xchg
dec
cmp
movsb
subl
cmpsb
inc
popa
ljmp
dec
lock
xor
mov
stos
xchg
xor
enter
stc
or
jno
and
jmp
jbe
mov
inc
frstor
sbb
leave
js
cmpsb
loope
xor
int3
shll
or
pop
jmp
into
push
pop
fmull
pop
xor
jl
xor
cmp
fwait
lahf
sti
sbb
sub
sbb
je
rorb
in
into
jp
insb
jg
out
dec
lret
dec
mov
add
mov
add
std
mov
jae
mov
xchg
xor
test
inc
sarl
push
sbb
xchg
loope
out
add
add
bnd
dec
leave
and
add
mov
add
sahf
aad
mov
push
loope
push
fstpl
ja
jno
mov
arpl
jecxz
jmp
rcl
fisttps
xor
ret
testb
mov
lahf
movsb
ret
pop
mov
inc
xchg
cmpb
jle
repz
out
imul
es
out
jle
and
fistpl
xor
sub
mov
sub
xchg
fmull
std
popf
mov
inc
cltd
xchg
mov
sbb
pushf
outsl
subb
rorb
inc
xor
arpl
pop
insb
xor
and
mov
lcall
aaa
int3
mov
inc
pop
mov
ss
or
sub
adc
lcall
subl
inc
sub
or
xor
inc
into
dec
repz
repz
mov
movntq
movsl
in
mov
cli
add
add
in
out
ja
filds
int3
add
add
xor
xchg
pop
inc
shrb
jno,pt
mov
sub
nop
pop
and
jae
outsb
cmpsl
cld
test
scas
jmp
mov
fmull
aaa
aaa
movsl
xchg
mov
cs
shll
sub
data16
xlat
out
cwtl
outsb
mov
in
jl
cmp
xlat
imul
std
mov
int3
cmp
cwtl
or
sub
and
in
or
insl
fiadds
xchg
jns
jge
mov
sti
push
jl
jl
pushf
clc
fdivs
sarb
ret
push
psubusb
bound
fisttpll
inc
add
movsb
and
das
stc
mov
out
and
arpl
jo
icebp
inc
add
mov
jge
mov
and
jb
or
push
iret
cmp
cmp
mov
mov
adc
je
sub
insb
bound
in
mov
xchg
xor
shrl
loop
mov
mov
add
scas
test
in
inc
push
or
or
add
jecxz
mov
pop
adc
mov
xor
scas
mov
sbb
sbb
pop
shll
jbe
dec
repnz
cmp
inc
pop
out
cld
rcll
or
int
adcb
lods
stc
stc
rol
mov
sbb
cmpb
ds
and
inc
ljmp
imul
ds
inc
inc
lock
sahf
std
sahf
and
adc
jle
xchg
mov
aas
xchg
sbb
adc
dec
xchg
rcr
in
fcom
icebp
xor
popf
mov
jp
into
push
mov
es
pop
adc
out
sbb
cmp
push
adc
sub
xchg
inc
cli
xchg
add
sbb
mov
outsb
push
mov
xchg
ss
sbb
mov
movsb
adc
cwtl
testb
xor
cmp
insl
inc
fmull
movsb
and
jl,pn
or
mov
aad
sub
in
icebp
jg
stos
push
xchg
push
arpl
jmp
add
add
jg
neg
pop
daa
inc
add
xchg
hlt
or
add
xor
bnd
nop
fsubl
sarb
adc
out
aas
fists
inc
mov
dec
lea
les
fdiv
enter
sub
adc
cmp
mov
enter
cs
add
and
mov
sub
out
out
add
ret
incb
push
out
ds
and
mov
xchg
or
mul
fnsave
es
es
dec
test
mov
leave
dec
fs
rcr
jns
stos
pop
pop
dec
lcall
cmpsb
cmp
into
js
iret
push
inc
test
cwtl
loop
movsb
enter
sbb
xchg
fadds
add
sbbb
dec
xor
xchg
iret
scas
stos
mov
ret
in
bound
push
loop
and
imul
pusha
hlt
xor
sub
cmpsb
stos
repnz
add
add
sti
jg
cmp
je
mov
sar
or
add
cmc
in
aaa
pop
mov
cs
ret
orl
adc
xchg
cmp
pop
lcall
mov
sbb
and
lcall
xor
and
or
sub
cmc
popf
jecxz
add
shl
xchg
xchg
js
cmp
movsl
ret
insl
dec
mov
and
or
fmull
cmp
mov
mov
and
fwait
push
sahf
sub
cltd
fmul
mov
sahf
and
dec
hlt
mov
pop
insl
sbb
cmp
adc
ljmp
jae
cwtl
loope
pop
pop
adc
pushf
lods
movb
icebp
aaa
ror
inc
add
xorl
mov
pop
fsubl
push
subl
jge
repz
test
icebp
in
push
push
shrb
popa
xorb
mov
inc
push
and
fisttpll
or
repnz
add
add
jnp
fstp
fcompl
sub
jb
decb
add
out
repnz
out
dec
dec
jmp
pop
inc
ror
jbe
and
movsl
aaa
aad
push
xchg
pop
lods
ljmp
cmp
icebp
andb
test
sub
dec
mov
fnstsw
lods
inc
dec
jbe
pop
js
fisubrl
roll
shl
inc
rolb
cmpsb
sahf
js
push
pusha
shlb
jb
clc
out
inc
ret
scas
mov
sbb
lret
aad
jbe
jp
cmp
std
fdivrl
in
xchg
push
into
fadd
push
pop
sub
ret
imul
dec
cs
or
mov
jae
out
scas
daa
pop
inc
push
test
mov
enter
jb
add
cmp
xchg
jle
sbb
pushf
shlb
add
inc
and
insl
inc
loope
xchg
lods
jmp
sub
mov
and
pop
shrb
add
repnz
or
decl
mov
jno
std
outsl
mov
add
adc
add
add
add
push
cltd
adc
pop
out
jb
sbb
lcall
adc
enter
stos
or
mov
lods
clc
mov
xchg
ljmp
mov
mov
mov
loop
jbe
jne
rsm
mov
adc
inc
insb
inc
dec
popa
cmp
dec
fdivl
and
jp
mov
fisubl
insb
mov
je
or
xchg
mov
adc
add
outsb
jnp
cmp
dec
repz
pusha
out
mov
call
cmp
insl
lods
lret
pusha
pop
adc
jae
loop
ret
inc
and
lods
call
fsubrl
nop
test
push
xchg
loop
sub
lahf
xchg
rcrl
or
bound
xor
sbb
out
pop
push
fidivs
pop
or
jae
fldt
in
mov
lods
cmc
adc
outsl
lea
sub
xor
pop
iret
mov
add
add
jmp
fstp
jecxz
repnz
add
add
negl
sbb
arpl
pop
filds
repnz
cltd
rcll
mov
adc
cmpsb
xchg
stos
out
xor
repnz
and
push
jne
inc
js
mov
pop
iret
xlat
cmovbe
daa
mov
mov
addl
mov
mov
mov
int
adc
pop
addr16
sbbl
cld
adc
enter
xor
xchg
and
pop
pusha
arpl
rolb
inc
jle
xor
jle
cmp
sbb
loopne
inc
push
jp
xor
xchg
dec
lds
sbb
xchg
or
js
or
in
shrw
fcmovb
out
push
push
mov
pop
fnstcw
popa
addb
inc
sahf
xchg
fidivl
jo
cmpsb
lcall
sbb
sub
adc
mov
mov
sahf
leave
dec
or
imul
push
xchg
jb
pop
and
add
add
xor
test
out
adcl
dec
stos
push
cmp
and
dec
mov
jb
scas
leave
sti
xchg
pop
ret
out
icebp
dec
out
mov
popf
and
pop
rclb
push
adc
test
pop
sub
mov
aaa
add
or
in
mov
mov
sub
and
and
sarb
inc
cmpsb
fdiv
or
dec
or
je
shll
sub
sbb
sub
lahf
push
push
inc
pop
sbb
dec
ret
lock
outsb
fisubrl
test
jbe
cmp
jmp
dec
subb
in
mov
addl
and
sbb
popf
imul
mov
icebp
pop
int
inc
leave
lahf
mov
inc
ja
push
bound
dec
add
das
adc
sub
das
or
add
xchg
nop
mov
fsubrs
lock
jne
add
dec
cli
inc
jg
int
xchg
lods
or
mov
add
push
nop
push
fnstenv
int
stos
and
inc
jnp
dec
mulb
pop
mov
dec
xchg
pop
mov
cmp
arpl
ljmp
pop
dec
stos
add
in
test
scas
test
sub
pop
scas
xchg
lods
scas
int3
popa
cmp
fisttpll
jp
push
dec
add
sti
xchg
cli
lahf
test
ja
mov
xor
sub
std
pop
int3
push
outsl
mov
or
mov
jae
adc
out
pop
mov
mov
cwtl
icebp
fsubrs
mov
and
fwait
sub
stos
in
ret
inc
test
dec
arpl
mov
stos
enter
jmp
xor
hlt
push
dec
fstl
pop
cli
xor
dec
in
mov
add
dec
and
ret
inc
jp
mov
into
push
xlat
and
xor
aas
add
add
xchg
std
cmp
jle
fistpll
fimull
adc
add
movsb
pushf
and
xor
jae
sub
arpl
mov
test
nop
test
mov
pop
sbb
mov
loop
inc
mov
addl
xchg
cltd
xchg
arpl
scas
in
mov
lahf
mov
arpl
test
popa
lret
lret
add
jb
imul
xlat
pusha
ja
jbe
mov
push
out
ret
push
sbb
push
pop
mov
fwait
dec
or
pop
iret
lea
iret
sub
or
fidivs
js
addr16
test
sub
addb
pop
sti
std
pop
mov
shll
loope
xor
adc
jne
notb
loop
pushf
push
icebp
shr
mov
pop
dec
fldenv
mov
rol
dec
pop
pop
repnz
aam
mov
rcl
lods
imul
or
push
push
or
mov
mov
add
xchg
pop
lds
xlat
ficompl
inc
mov
out
sbb
add
add
jg
lds
or
daa
daa
pop
cmovns
push
jno
aaa
lods
arpl
push
pop
pop
adc
nop
cmp
addr16
adc
cmp
jge
push
lods
dec
mov
out
or
mov
push
sbb
or
pop
rclb
lahf
sub
andb
sbbl
imul
ja
push
lods
cmp
enter
mov
cmp
test
imul
mov
xchg
inc
xchg
sub
inc
out
mov
xchg
repnz
outsb
jp
jl
jae
cs
movb
lret
push
in
stos
fwait
jecxz
repz
or
mov
inc
int3
shr
cmp
adc
inc
xchg
pop
sub
movups
mov
dec
gs
pop
insl
push
mov
inc
test
mov
mov
add
rolb
inc
cmp
fiaddl
add
dec
jmp
dec
scas
iret
outsb
jmp
push
test
push
dec
icebp
and
add
loope
into
mov
mov
ret
mov
mov
cmpsl
jecxz
in
mov
cs
aam
repnz
adc
shl
daa
pop
decb
dec
mov
xlat
xchg
cmp
push
inc
and
jb
js
nop
pusha
int
mov
loope
enter
pop
pop
fdivl
sbb
std
inc
loopne
xchg
mov
add
and
xchg
or
sbb
icebp
dec
orl
jae
sub
inc
jb
cmp
sub
bnd
rcl
sti
fldcw
imul
ja
lret
mov
movsl
xor
mov
push
stos
jg
loope
push
pop
mov
mov
loop
adcb
aam
in
fidivrs
dec
xor
out
jle
ss
mov
dec
or
add
ljmp
out
xchg
stos
mov
push
xlat
jle
add
add
std
sbb
stc
cld
or
ror
lret
adc
add
shll
lret
in
cmc
jae
inc
in
mov
or
mov
out
jmp
ds
mov
lret
fiadds
adc
and
inc
mov
mul
loope
mov
pushf
or
insl
sub
adc
lds
xchg
mov
inc
mov
jo
pushf
dec
mov
es
nop
push
pop
ret
ret
add
into
add
push
cld
inc
lret
in
adcl
cmp
push
rcrl
shlb
push
adc
sbbl
rcrb
mov
mov
jbe
loop
lods
hlt
shlb
sub
add
sbb
dec
cmp
dec
pop
in
mov
pop
cvtpi2ps
jne
loope
dec
dec
fisubrl
test
pushf
iret
cmpb
mov
xor
iret
lret
pop
dec
loopne
aam
push
fistl
cs
ljmp
jp
add
negl
adc
pop
xchg
cmpsb
ret
jo
loopne
push
add
add
or
sub
stos
rorb
fbld
test
repz
cmp
aam
sbb
mov
in
rcll
dec
lahf
sub
scas
push
pop
adc
insb
ss
cmp
fistpll
pusha
je
sub
je
xchg
add
iret
iret
repz
xchg
insb
addl
rcl
jp
sbb
fucompp
push
daa
inc
mov
adc
jp
inc
adc
stos
jecxz
andl
stos
sbbl
movsb
cmc
test
fiadds
insb
lods
jp
mov
test
fs
sbb
push
push
out
in
dec
or
es
jmp
mov
mov
jge
and
mov
add
test
popf
imul
mov
inc
int3
data16
mov
out
cmp
push
mov
fistpl
add
lea
les
nop
aad
add
mov
dec
pushl
or
push
out
xor
add
add
mov
sbb
movsl
xor
push
xor
or
lcall
jmp
xor
adc
add
xchg
sarb
in
sub
or
and
imull
inc
ds
arpl
jp
jnp
mov
sarb
or
test
loop
inc
dec
lods
repz
or
adc
icebp
mov
repnz
jnp
mov
leave
test
lahf
mov
pop
stc
fdivp
inc
outsb
adc
adc
sbb
out
stc
out
push
stos
rep
jns
cs
xchg
and
idivl
mov
cmp
jnp
fs
add
lods
sti
cmc
insl
mov
push
jl
enter
or
lcall
cmc
fs
jg
jle
loope
xor
arpl
and
mov
inc
cmp
in
enter
fisubl
out
mov
lods
xchg
xor
sub
adc
or
pop
cmp
fwait
and
add
pop
sub
inc
ja
pop
aas
dec
push
inc
pop
xor
add
add
sbb
sub
rolb
mov
stos
pop
lahf
cmp
ss
xchg
fsubr
cmp
dec
dec
xchg
inc
jae
sbb
jl
xchg
pop
push
mov
xor
mov
mov
das
mov
insb
rcrl
imul
cmp
xchg
hlt
push
add
stos
add
ds
stos
jmp
pop
js
out
out
bound
and
sbb
popa
or
loopne
push
aaa
pusha
adc
out
int3
sub
push
les
add
inc
test
and
sbb
popa
lret
cmc
test
cmp
addr16
lahf
shl
mov
push
call
xor
out
push
in
pop
imul
scas
xor
jge
outsb
jge
jbe
lahf
cwtl
jnp
xor
cmp
iret
dec
cmp
in
ss
xchg
ja
sbb
aas
out
lahf
imul
add
sub
mov
std
movsb
mov
cmp
in
mov
add
xchg
jae
ja
div
mov
shll
cmp
add
add
call
mov
xlat
movsl
jecxz
les
xor
push
ja
les
into
orl
mov
nop
out
jnp
or
adc
daa
icebp
cmpsl
xchg
out
sbb
pop
fwait
rcrb
mov
add
mov
out
inc
xchg
hlt
in
arpl
aaa
fmulp
pop
ficompl
dec
lcall
test
jle
cmp
ficoms
rcl
fsubs
jg
aam
cltd
loope
xor
ret
mov
push
add
mov
push
fmuls
popa
jne
gs
fdivrp
leave
in
sub
out
cmp
aad
sarl
cmp
ret
pop
fisubs
mov
adc
mov
in
or
data16
std
subb
sbb
and
inc
shlb
ljmp
fisttps
mov
andl
mov
cmc
rcrl
jae
mov
fs
js
push
mov
add
xor
cli
std
jg
push
pushf
dec
xchg
jp
xor
sbb
add
xor
jle
sahf
xchg
enter
sub
sub
mov
fwait
out
data16
pop
imul
scas
dec
pop
testl
dec
xchg
cmp
popf
in
loop
push
add
fldcw
addb
mov
je
outsl
ja
dec
int
ss
jmp
dec
sub
xor
iret
imul
adc
pop
mov
cmp
mov
xor
loopne
mov
jne
out
out
or
in
mov
ss
cmp
xchg
push
into
test
fldcw
sbb
into
fnstenv
sahf
test
daa
or
iret
rorb
cmp
pop
pusha
cmp
mov
push
lods
jge
xchg
and
mov
sbb
mov
push
test
cmc
xchg
cld
dec
movsb
ss
insb
xor
ljmp
xchg
pop
inc
es
inc
mov
cld
pop
jg
cmp
js
add
testl
incl
sbb
aas
jp
daa
inc
sbb
add
pop
ja
jp
aaa
scas
dec
xor
fcomp
push
dec
pop
mov
loopne
jnp
rol
sbb
sbb
mov
push
pushf
pop
mov
mov
roll
cmp
cmp
pusha
mov
test
jbe
stos
xchg
sbb
pop
insl
adc
xchg
push
mov
jg
sbb
fstpt
rcr
lds
jne
xor
sti
adc
pusha
pusha
rol
push
mov
mov
sbb
arpl
sub
cmp
out
test
ljmp
sbbb
add
pop
outsb
arpl
mov
insb
icebp
mov
rorb
inc
lcall
das
and
push
inc
cld
sub
stc
in
mov
jle
and
and
jb
or
jne
mov
cmp
stc
repnz
jmp
lahf
adc
aas
je
pushf
shl
repz
add
es
jg
pop
or
xor
cmp
add
cli
cmp
xchg
push
inc
jmp
mov
push
pop
xor
cmp
adc
jns
sbb
arpl
out
lock
mov
out
or
dec
loopne
insl
sub
xor
xor
mov
scas
lahf
xchg
jne
cmp
dec
dec
cmp
mov
inc
sahf
lret
cmovbe
jnp
push
stc
orl
gs
dec
and
and
ret
inc
pop
lods
leave
jo
cmp
add
push
movsb
imul
mov
ds
push
movsb
fsts
and
xor
mov
inc
in
xchg
adcl
icebp
push
lret
push
push
hlt
xchg
push
loopne
push
sub
xchg
push
xor
insl
and
sahf
add
stos
cmp
ret
pop
fwait
adc
lods
lahf
sub
pop
outsl
shlb
add
test
jae
addr16
mov
cs
insl
jp
mov
xchg
out
jnp
push
mov
add
add
or
dec
push
cmp
sbb
add
jne
out
fs
adc
ror
mov
lret
hlt
inc
lahf
or
jle
mov
jns
xorl
mov
outsl
push
push
out
int
push
xor
les
xchg
call
dec
add
es
ds
cmp
and
lea
push
fs
pop
mov
sub
lods
aaa
outsb
mov
ss
lods
and
ljmp
cmpsb
xlat
pop
lret
or
mov
and
cwtl
xor
stc
xchg
ret
xor
mov
jne
pusha
cmp
mov
sbbl
xchg
push
and
xor
test
invd
lock
push
hlt
xchg
in
xchg
icebp
inc
cwtl
les
xchg
fs
loopne
call
xor
xchg
in
and
ljmp
sub
cmp
lods
xor
cld
fldcw
xor
mov
insb
mov
hlt
or
shlb
xor
mov
jmp
push
push
add
add
bound
out
cmp
stc
dec
xor
mov
pusha
aaa
jl
mov
sub
push
jbe
cmp
insb
sbbb
outsl
push
pop
mov
scas
lcall
push
enter
fcmove
or
rorl
cmp
pop
mov
push
je
xor
adc
fsubrl
add
sub
les
dec
aam
pop
mov
sbb
cmpsl
sahf
in
push
sbbl
js
add
adc
dec
inc
aaa
lahf
jge
sub
stos
aaa
nop
rolb
push
add
out
cs
mov
aad
cld
pop
pusha
lcall
mov
imul
icebp
adc
cli
inc
ljmp
mov
xchg
icebp
popf
or
xchg
clc
outsl
inc
notb
mov
repnz
cltd
orl
in
test
test
push
pop
inc
inc
or
jno
fisttpl
or
cmp
xchg
or
add
add
ficoms
stos
sbb
call
mov
pop
pop
add
add
fidivl
add
sub
roll
cmp
out
add
xchg
inc
imul
fwait
int3
and
or
out
lcall
push
ror
sub
pop
jmp
xor
dec
mov
aaa
cmc
stos
pop
mov
ss
mov
aaa
je
fists
mov
pop
mov
pop
aaa
mov
fs
dec
movsl
adc
add
rcll
cmc
adc
lea
or
jno
xor
mov
xchg
lea
and
jmp
push
push
test
dec
subb
aaa
cmp
adc
ror
enter
mov
daa
in
and
fisttpll
sub
rclb
xor
leave
push
mov
shlb
mov
mov
dec
mov
lahf
pop
mov
icebp
dec
fsubrl
add
add
in
out
stos
jge
or
sbb
xor
add
add
jae
mov
jl
adc
icebp
or
pop
cmc
jge
xor
inc
add
fisubl
ljmp
add
sti
movsb
jb
adc
rcll
lods
push
dec
sti
frstor
add
test
cwtl
ja
int3
rcll
mov
rol
repz
and
sbb
outsb
movsb
sbb
in
rcrl
rcll
ret
inc
add
mov
add
jnp
pop
sbb
lcall
sti
xor
popa
loopne
cmp
fs
adc
bnd
mov
inc
ret
add
sbb
lcall
pushf
mov
adc
sbb
jg
and
iret
and
daa
dec
je
insb
mov
jmp
xchg
cli
mov
add
pop
test
mov
inc
mov
mov
jb
xorb
jp
inc
push
scas
jno
push
imul
aad
inc
add
add
sbb
out
xchg
iret
push
aas
lcall
add
lret
rclb
fucom
insl
fcmovbe
rcll
paddb
cmc
ljmp
repz
fistpll
je
shll
push
and
imul
pusha
and
xor
push
mov
mov
sti
mov
pop
loop
pop
ljmp
outsb
je
test
subl
dec
stos
push
fs
jno
insl
ret
lret
xchg
mov
lock
jmp
test
mov
dec
lret
out
and
pop
cmp
std
mov
nopl
mov
push
mov
push
mov
add
out
sub
sbb
and
ja
int3
js
inc
dec
sbb
sub
notb
outsb
shll
je
inc
cmpsb
mov
sub
fmul
lret
dec
rcr
push
pop
sbb
cs
es
lahf
push
jns
das
pop
movsb
and
xor
push
stos
dec
add
add
in
add
cmp
out
loope
jns
fidivl
xchg
and
add
clc
std
popl
mov
inc
jno
pop
or
arpl
adcl
inc
and
xchg
out
fcmove
or
dec
stos
cmp
pop
lods
das
test
mov
push
scas
pushf
push
data16
out
fdivl
mov
in
shl
adc
xchg
xchg
mov
push
mov
dec
dec
icebp
shlb
jmp
popa
inc
mov
divl
jnp
xchg
addr16
adc
xchg
aas
repnz
imul
jmp
ltr
lret
cmpsl
lahf
jp
adc
push
test
adc
je
push
sub
cmp
jbe
jns
or
leave
mov
ret
sbb
jmp
push
icebp
dec
rolb
xor
push
fmuls
stc
in
int
mov
ljmp
push
nop
cmp
outsb
aas
insb
xor
and
sarl
int
add
test
sbb
sti
push
mov
enter
insb
and
add
mov
sub
lods
repnz
cmp
pop
dec
mov
ret
ret
cmp
push
jnp
xor
testl
cmc
mov
sbb
mov
scas
ja
subl
or
pop
in
push
jno
jl
sub
aad
enter
and
test
mov
into
xchg
sbb
cmpsl
xor
data16
sbb
in
loop
jl
push
cmp
fs
and
icebp
mov
cmp
dec
dec
outsb
and
cmp
adc
insb
es
sbb
icebp
lcall
movsl
rolb
fxch
ficoms
mov
jns
outsb
enter
add
enter
mov
pop
push
xchg
mov
dec
bound
push
push
stos
in
pop
repz
sbb
stos
jle
outsl
test
std
mov
lcall
sub
add
cmovl
sub
sbb
cmp
jns
pop
fmul
add
add
jg
cld
ret
add
sbb
add
test
mov
jecxz
and
aas
nop
jmp
in
stos
xor
pusha
test
shr
stc
jb
add
stos
and
pop
clc
push
push
movsbl
negb
call
loopne
and
negl
and
xchg
jg
mov
lods
das
pop
dec
pop
sbb
int
lods
sub
cs
jg
clc
cmpsb
aad
sub
ds
int
call
fprem
and
int3
push
xchg
xchg
testl
sbb
and
mov
or
ds
mov
out
push
lods
sub
add
dec
test
repz
ja
fists
andb
lods
pop
cmp
std
sub
iret
cvtps2pi
imul
fstp
mov
cs
add
cmp
cmpsb
movsl
xor
pusha
or
cmp
mov
movsb
add
aas
popf
pop
jo
jne
loopne
sub
add
ret
mov
iret
mov
js
lods
jae
and
add
xchg
mov
mov
ror
adc
mov
sbb
outsl
cmp
mov
mov
push
sbb
pop
jl
mov
sub
cmc
adc
in
xor
cmc
mov
sti
js
fdivrl
mov
in
lods
shlb
mov
sbb
repnz
pushf
scas
mov
or
movsl
cmpsl
mov
sub
push
mov
dec
push
pop
mov
adc
aas
xchg
lds
sbb
daa
outsl
xchg
jp
mov
fdivrs
loop
push
repnz
cmp
out
divl
push
xchg
icebp
stos
xchg
xchg
bound
pop
test
sub
pop
sbb
push
push
fs
scas
cwtl
lret
sub
dec
push
orb
cltd
inc
mov
mov
dec
sbb
xchg
fdivl
shl
cltd
mov
and
jnp
test
and
adc
push
pop
cmpsb
add
add
or
jg
arpl
and
add
jo
repz
imul
mov
push
in
lcall
mov
in
pop
and
pop
testb
cmp
xlat
sub
jmp
pop
dec
fmull
aaa
in
jle
cmp
pop
in
inc
sbb
mov
rcr
pushf
rcrb
sarb
mov
or
mov
shlb
sbb
orl
call
popf
insl
and
and
push
es
push
es
loop
push
clc
mov
dec
push
rcll
std
cmp
mov
movzbl
dec
ffreep
adc
pop
mov
sub
stos
sub
fwait
mov
add
fdivrl
es
insl
adc
mov
push
sbb
das
outsb
mov
prefetchw
loopne
mov
mov
cmp
fs
push
cmp
imul
cmp
add
add
xor
clc
cli
clc
sarb
sti
mov
jg
andb
add
adc
stos
jbe
fwait
dec
mov
push
fistl
cmp
jp
insb
xor
inc
add
test
aas
repz
sub
sbb
sbb
mov
pop
mov
aaa
adcl
pop
sbb
dec
mov
jmp
ljmp
push
or
jo
lock
movsb
rcrb
nop
mov
pop
in
jb
repz
inc
mov
xchg
xchg
subl
xchg
rorl
pop
and
add
mov
or
mov
cmc
dec
imulb
mov
inc
lret
jae
test
subl
adc
mov
int
push
leave
data16
mov
and
cmp
sti
or
sarl
cltd
test
push
addl
and
repnz
mov
add
test
imul
mov
int3
addl
sbb
out
and
mov
sahf
in
in
lret
loop
ret
movsl
std
std
xchg
adcl
outsb
subl
fildl
xchg
mull
loop
xor
stc
sub
iret
mov
inc
and
push
lods
outsb
repz
xchg
and
cld
test
xor
incb
lods
mov
cmp
or
mov
xlat
mov
mov
test
push
out
sbb
pop
sub
lret
adc
mov
lods
js
mov
mov
sub
and
sbb
xor
mov
jne
mov
jle
pop
lahf
std
in
add
push
push
push
mov
xchg
sbb
sub
shll
andl
outsl
dec
sbb
ss
add
test
inc
icebp
or
xchg
xchg
loop
test
push
fadd
fs
sub
add
es
data16
insb
daa
mov
repnz
add
leave
cli
jbe
xor
jge
sbb
sbb
adc
sub
orl
jno
cld
add
pop
adc
jno
inc
mov
rorb
adc
jge
add
jp
fcmove
loopne
push
jle
and
inc
movsl
push
xchg
pop
pop
int3
sub
inc
or
jo
adc
popl
inc
lret
faddl
pop
push
xchg
imul
stc
mov
adc
imul
sbb
lods
stos
hlt
cmp
fmuls
rcll
lahf
test
sarb
pop
popf
mov
test
push
sub
inc
fisubs
add
mov
pop
jno
xchg
sbb
daa
sub
mov
fsub
sub
push
lret
cmp
hlt
or
inc
pushf
jns
pop
dec
jno
push
mov
out
xchg
ds
push
lret
cli
sub
adc
loop
push
xor
aam
mov
addb
add
dec
mov
imul
add
add
sub
shll
mov
jecxz
scas
loope
xor
add
jmp
sbb
inc
loop
repz
push
mov
and
mov
mov
mov
mulb
add
jno
test
and
lret
adc
jg
lcall
shlb
testl
in
cli
daa
hlt
icebp
add
test
mov
loopne
cmp
lea
xchg
cltd
jge
jbe
loope
mov
and
movsb
add
or
outsb
lahf
push
add
lods
pop
push
cmpsb
adc
jmp
hlt
aam
adc
sub
xchg
push
inc
insb
leave
dec
add
cli
mov
sub
cmp
sub
inc
sub
into
adc
sbbl
mov
cmc
jno
aam
xchg
adc
pop
iret
nop
filds
mov
adc
stos
jo
out
and
fdivrl
inc
pop
test
fsts
jbe
add
repz
push
sti
cmpsl
enter
pop
iret
mov
add
popf
add
imul
xor
sub
adc
outsl
lahf
or
aad
sub
add
mov
sbb
cltd
sbb
ret
xchg
pop
push
mov
xor
jnp
outsl
jl
push
push
cwtl
inc
lcall
inc
ds
or
sti
mov
je
gs
dec
push
popf
cmpsl
out
add
sbb
xchg
ss
sbb
xor
jb
mov
xchg
mov
pop
dec
sub
cmp
and
jmp
ds
mov
push
dec
xlat
add
out
mov
sub
movsl
bound
out
sub
lcall
insl
movsl
mov
arpl
adc
icebp
sub
mov
adc
adc
int3
push
ljmp
addr16
mov
and
test
gs
sbb
sbb
call
pushf
cmp
add
push
and
std
mov
dec
push
in
rol
cltd
sub
add
clc
jae,pn
fnsave
and
push
inc
daa
push
shr
mov
nop
and
dec
jns
ds
dec
jne
cs
mov
lret
fs
sti
mov
mov
or
into
fsubl
mov
mov
dec
ss
mov
shrb
repnz
adc
mov
pop
jl
push
mov
fidivs
and
cs
jb
dec
in
mov
jae
xchg
gs
mov
nop
shufps
xor
scas
mov
sub
clc
loope
addr16
mov
xor
bsf
aad
push
push
nop
sbb
fs
call
dec
cmp
push
fstp
mov
push
push
cli
sbb
repz
push
int3
xor
in
xchg
lds
ja
jmp
rcrb
aam
dec
sti
mov
int3
mov
dec
xchg
roll
add
inc
iret
add
add
and
jecxz
and
lcall
add
add
jae
xchg
cli
push
mov
orl
fistpl
sub
int
negl
sbbl
inc
loopne
xchg
add
je
adc
test
dec
loope
nop
pop
sub
ds
push
das
cltd
fiadds
add
test
push
mov
cmc
outsl
andl
dec
push
sbb
inc
adc
jle
movsb
cli
push
jno
dec
out
push
pop
jp
xorl
cmc
gs
es
pusha
xchg
push
fwait
or
lret
pop
sub
sub
std
push
iret
cltd
mov
cmp
mov
sub
cmc
push
inc
adc
in
xor
sti
adcb
mov
jo
out
lret
cmp
jnp
and
shr
push
int
mov
ret
mov
inc
mov
std
in
punpcklwd
cmp
out
jae
lea
add
fiaddl
ret
ficomps
cmp
lahf
dec
lds
add
add
mov
das
nop
cmp
pop
fcomi
sbb
mov
sub
mov
pushf
fs
js
cmc
dec
mov
aaa
sub
pop
rcrb
aam
xchg
dec
cmpsb
lret
jo
je
pop
and
jbe
mov
inc
mov
cwtl
js
loopne
les
addr16
es
mov
jae
lods
mov
in
mov
jnp
lret
pop
and
loope
sbb
call
jle
dec
fldcw
test
fsubrs
jns
cwtl
or
add
lea
orl
sub
adc
push
dec
jg
xchg
lods
jmp
iret
mov
into
xchg
out
iret
and
sub
aad
bnd
or
mov
movsl
xor
mov
pop
cli
dec
shrb
jne
inc
xchg
ret
mov
adc
aam
imul
add
pop
sub
jl
inc
roll
add
lods
xor
mov
cmp
aam
or
add
add
out
shl
cmp
jge
or
mov
aas
cltd
jnp
and
xlat
lret
jecxz
adc
cmp
mov
inc
insb
daa
cmpsl
jmp
push
lods
fcoms
push
sti
cmp
aaa
insb
out
cltd
mov
frstor
test
fldcw
cmpsl
pop
jbe
cmpsl
xchg
mov
cltd
jnp
shlb
out
adc
loope,pn
out
push
pop
add
icebp
aas
mov
mov
nop
mov
jb
cwtl
sbb
popa
jb
sub
mov
ja
mov
psubd
dec
repz
pop
aaa
inc
call
mov
jge
and
and
pop
sbb
add
out
adc
jbe
cmp
ljmp
adc
in
add
mov
jae
mov
cmp
xchg
add
imul
pop
add
ljmp
push
push
add
mov
dec
push
clc
es
push
push
push
dec
je
fnsave
and
mov
lock
mov
or
mov
xor
add
scas
movsl
or
test
xlat
jmp
outsb
xchg
arpl
out
pop
imul
cld
push
and
je
push
cmc
cltd
out
inc
xlat
stc
in
pop
sbb
shr
xor
es
insb
mov
sbb
sub
jg
sbb
inc
and
fisubs
lahf
ds
cmpsb
cmpsl
cltd
aaa
xchg
xchg
in
sub
les
daa
mulb
ja
jbe
mulb
mov
mov
mov
cmp
loop
xchg
lds
pop
sbb
mov
and
mov
inc
mov
repz
jo
cmp
cmp
sahf
pushf
or
sub
js
mov
adc
out
add
outsb
movsb
cmc
popa
and
xchg
xor
ja
pusha
shrl
in
loop
mov
mov
movsl
das
lcall
imul
loopne
or
mov
aas
pop
mov
insb
in
imul
add
add
sti
pop
jge
neg
hlt
add
in
xor
add
rcl
in
adc
sbbb
cltd
popf
ror
mov
rcl
mov
stos
adc
push
pushf
aaa
push
and
add
sarb
push
in
leave
jbe
int
popa
mov
outsl
jle
push
enter
and
sbb
cli
mov
loope
outsb
xchg
or
enter
in
ss
mov
imul
scas
mov
stos
adc
cld
push
fs
stc
adc
addr16
out
popf
jmp
adc
add
movb
xchg
fcompl
dec
inc
popf
shrb
xor
pushf
ja
dec
adc
mov
push
push
or
in
xchg
xchg
jg
pop
insl
sahf
cli
pop
mov
movsl
pop
push
loop
cli
leave
inc
test
jno
add
in
mov
sub
mov
out
xchg
pop
call
push
jl
sub
fistps
jl
sub
scas
sti
push
je
xor
inc
mov
je
aad
jne
cmp
sbb
add
add
fsub
std
in
popf
in
stc
jmp
mov
add
add
gs
sbb
cld
jge
sub
ljmp
scas
pop
sbb
jns
mov
and
daa
xor
cmp
fistpl
adc
or
test
inc
bound
mov
dec
cmp
stc
insb
rcl
rcll
aad
cmp
pop
sub
sub
rol
push
adcl
int
inc
pop
mov
push
jb
dec
cltd
pop
js
inc
ja
xchg
mov
or
fmuls
out
clc
scas
rcrl
xchg
jmp
imul
add
mov
mov
sbb
insl
jg
cmp
cld
xor
scas
mov
jle
cmp
and
fnstsw
sbb
imul
jp
mov
data16
repz
dec
dec
and
mov
mov
or
and
cmp
je
je
into
mov
bound
dec
scas
jbe
ljmp
jns
add
pop
jp
jnp
sti
xchg
jle
jp
lods
sbb
add
add
std
js
cwtl
sub
mov
jae
dec
push
push
arpl
push
xor
mov
hlt
idivl
cmpsb
inc
adc
xor
aam
imul
or
and
fmulp
xor
jno
das
rol
popf
es
jo
or
xlat
pop
paddsb
iret
mov
mov
sti
stc
fdivs
bts
iret
xchg
mov
jle
and
out
cli
pushf
xchg
das
jb
in
imul
mov
mov
sbb
mov
or
arpl
jno
pop
mov
dec
out
jecxz
int
inc
call
stos
push
and
into
inc
mov
div
test
fwait
dec
std
daa
xor
dec
jecxz
lods
ret
fnstsw
push
pop
push
dec
mov
repnz
jbe
or
out
push
mov
std
fs
add
add
push
sti
decb
mov
hlt
shll
add
cs
fdivrl
add
mov
inc
inc
dec
jl
aaa
jnp
fildll
cmp
fnstenv
and
lret
addr16
xlat
cmpsl
sbb
gs
repnz
jne
cltd
mov
int
lods
sub
movsl
ja
cmp
out
add
and
jmp
or
pop
pop
rolb
ret
lock
pop
push
popa
leave
and
test
data16
loop
push
cltd
mov
lock
cltd
vpshuflw
mov
mov
jno
sub
inc
push
cmp
mov
outsb
jnp
adc
lret
out
je
test
stos
loopne
adc
mov
gs
dec
test
or
mov
das
mov
leave
xor
push
inc
cmp
cld
scas
push
jnp
int3
pop
pop
xchg
add
cltd
aaa
gs
leave
push
mov
xor
add
add
cmp
xor
hlt
iret
das
movsb
je
xor
add
sti
pop
pop
fisttps
xchg
pop
insb
mov
icebp
dec
daa
jge
lea
mov
stos
add
cwtl
lea
jmp
xor
cs
popa
leave
aaa
inc
xchg
xchg
mov
repnz
daa
pop
std
int3
mov
filds
and
xor
iret
enter
push
pusha
jbe
mov
bnd
xchg
cmp
xor
push
jne
inc
xchg
ret
mov
sti
repz
or
out
es
jns
or
lods
jne
sub
cs
push
push
gs
lds
pop
cmp
sub
pushf
jle
arpl
stc
mov
insl
fsubrl
mov
outsl
std
sbb
scas
outsb
adc
aad
xor
xchg
test
sbb
scas
ss
in
add
sbb
int3
das
jb
in
out
xor
xchg
loopne
push
imul
stos
lds
pop
xor
add
add
cmp
jge
stos
lea
shrb
scas
dec
add
add
lret
shrb
sbb
mov
ret
or
cmp
sbbl
daa
push
jg
mov
pop
out
pushl
or
mov
jl
ljmp
sub
clc
je
xchg
cltd
sahf
xchg
mov
or
pop
cltd
jno
mov
out
inc
lcall
test
jnp
adc
aam
jns
jle
lods
or
mov
aas
sbb
or
sub
mov
bound
lock
mov
push
and
and
dec
mov
mov
rorl
cmpl
jmp
popf
xor
push
push
cmc
sbbb
in
jns
xchg
inc
stos
in
pushf
dec
adc
xchg
popf
push
mov
loope
shl
sti
inc
das
push
mov
popa
data16
flds
test
sub
mov
sahf
dec
dec
psrlw
add
divb
rclb
nop
lcall
aaa
add
add
or
dec
test
aaa
ss
shlb
add
test
mov
sub
xchg
daa
mov
cmp
add
leave
or
insl
fsubl
movsl
test
bound
aas
in
or
into
cmp
fwait
cmp
or
xchg
ljmp
and
mov
mov
lahf
jnp
test
mov
fs
jp
flds
inc
hlt
movsl
mov
addb
imul
inc
mov
lahf
aaa
xchg
cmp
fiaddl
aaa
pop
jge
pop
fmull
mov
fisubs
lods
mov
mov
dec
mov
lock
pop
xlat
push
ret
xchg
sbb
ficompl
mov
adc
adc
and
add
sahf
js
call
xor
rolb
mov
mov
sar
jecxz
add
jl
dec
jbe
idivl
or
jo
adc
cmp
add
cmpsb
jmp
xchg
addr16
lret
in
pop
nop
xchg
and
and
mulb
cmpl
insl
mov
rclb
lods
or
fildll
das
and
jmp
push
jecxz
dec
ret
dec
lock
jae
fdiv
repnz
fsubrp
jnp,pn
ljmp
pusha
test
push
adc
mov
fwait
clc
mov
push
movsl
inc
aam
out
fisttpl
xchg
addl
out
sti
xor
sub
or
cmp
inc
mov
jns
dec
mov
xchg
jg
adc
and
xchg
pop
mov
repz
mov
mov
hlt
in
mov
in
push
inc
sbb
iret
add
xchg
test
xor
cli
cmp
lea
scas
cmpb
sbb
addl
out
and
adc
and
jns
ds
ljmp
mov
jle
fwait
stos
add
add
outsb
sub
stos
fs
jmp
leave
aas
pop
gs
fidivrl
add
add
adc
mov
std
cmpsb
dec
xchg
clc
inc
adc
aaa
xor
adc
repz
in
mov
sti
or
fwait
pop
xchg
ret
mov
xchg
sbb
jge
fs
hlt
sub
scas
cmp
addr16
or
stos
add
cmpsl
lret
pop
or
movsl
add
in
adc
and
push
mov
mov
xchg
mov
int
in
call
rcll
orb
xor
push
add
xor
jmp
mov
sbb
dec
mov
popf
xchg
in
cmp
mov
or
pusha
xchg
sbb
cmpsl
mov
movsb
and
sub
and
push
mov
push
sarb
cmp
mov
mov
cmpsl
pop
dec
shl
test
ret
xchg
shlb
xchg
hlt
pop
lds
push
into
ret
and
cmp
test
cmpsb
cmpsl
lods
lahf
bswap
scas
cli
sub
lcall
add
insb
pop
pushf
scas
fistpll
outsl
gs
inc
pop
mov
add
inc
pop
cmp
cmp
pop
negl
mov
mov
pushf
pop
xchg
ret
add
cmp
adc
sub
insl
stos
je
je
repnz
push
popf
xchg
jns
xchg
xor
mov
adc
mov
popa
lods
xchg
xchg
jge
outsl
mov
lea
inc
pop
mov
mov
add
ret
adc
add
vpunpckhdq
imul
in
fs
mov
nop
aam
fistpl
scas
iret
divb
iret
dec
cld
xor
out
cmpsb
stos
jmp
in
fs
mov
js
sti
addb
add
shl
inc
cmpl
mov
sbb
mov
xor
adc
jno
adc
sub
push
mov
xor
insl
cmpsl
movsl
lahf
rcll
pushf
mov
js
push
rorl
add
add
cmp
movsb
push
sbb
pop
pop
push
in
add
add
xchg
cltd
movsl
mov
mov
adc
test
dec
jno
pusha
pop
pop
fdiv
mov
dec
imul
divl
popf
adc
push
mull
and
jmp
cmp
push
xor
pop
add
pop
lret
xchg
mov
push
inc
xchg
lret
adc
push
adc
ljmp
dec
mov
fsub
loop
idivb
xchg
xchg
scas
or
cmpsb
jcxz
insb
jle
cld
out
xchg
movsl
stc
leave
repz
push
int
and
cwtl
sarb
sub
jno
je
mov
ficompl
je
xorb
mov
cwtl
inc
roll
repz
fisubrl
out
iret
push
lea
arpl
in
mov
push
inc
or
cld
test
insb
dec
and
cs
iret
aam
aad
pop
cltd
std
icebp
fadds
cmp
cmc
mov
aaa
iret
insb
sbb
sbb
orb
add
outsl
lret
mov
out
jmp
stos
loope
jmp
add
add
push
inc
std
mov
repz
dec
fwait
add
sbb
lods
ret
ja
cmp
loop
ds
arpl
pop
into
lret
pop
add
jmp
inc
pop
int3
aas
cmpsb
sub
jb
sahf
push
into
rolb
cltd
stos
jmp
adc
xlat
out
xor
xchg
les
ret
mov
mov
push
leave
and
mov
and
sbb
push
or
ja
dec
in
push
pop
jnp
fwait
repz
xchg
scas
ss
imul
pop
sar
imul
cli
mov
dec
repz
mov
xor
nop
or
inc
mov
sbb
xchg
inc
sarl
or
push
fst
loopne
xchg
call
fldenv
aad
sub
inc
add
icebp
ret
mov
mov
hlt
lock
int
push
pop
sbb
lock
pop
add
lcall
sbb
test
add
add
and
das
cmp
lods
repz
mov
enter
out
cmp
add
roll
mov
adc
les
icebp
cmp
push
inc
or
mov
dec
inc
fnstenv
scas
mov
push
in
xchg
mov
mov
movsb
mov
xor
mov
xor
mov
mov
mov
das
dec
xchg
pop
xorl
cmp
pop
outsl
out
scas
mov
sahf
pop
ret
dec
in
xchg
xchg
aaa
mov
out
jae
or
fwait
xchg
pop
lods
inc
sbbl
subb
pop
dec
pop
mov
adc
xchg
out
adc
dec
add
cmp
xchg
jae
daa
pop
bound
repz
lahf
ljmp
pop
mov
mov
gs
not
aad
jge
adc
negb
jns
dec
xchg
sub
call
imul
mov
stos
insl
lcall
ja
cmpsl
in
push
and
push
stc
mov
lods
outsw
rorb
add
add
daa
push
cld
push
std
jmp
dec
push
pop
and
add
add
jnp
cmp
int
adcb
gs
addr16
sbb
inc
cltd
mov
mov
cmp
inc
test
add
cmp
mov
jnp
leavew
inc
xor
push
jae
pop
insb
shll
insl
adc
or
in
dec
movsl
xchg
clc
jmp
fildl
add
mov
push
nop
insl
idiv
lret
mov
dec
pop
jge
jbe
shl
mov
and
aaa
outsl
adc
adcl
or
add
stos
add
scas
push
call
adc
mov
mov
sub
jb
cmc
lds
sahf
and
push
xlat
xchg
daa
sbb
les
nop
inc
cmp
jmp
or
subb
adc
mov
sub
or
pop
popa
mov
sub
and
jle
lret
jp
test
add
add
add
sbb
dec
push
out
aad
pop
gs
and
aas
add
add
je
push
add
mov
xchg
cmpsl
push
jbe
inc
adc
lret
push
cs
imul
arpl
cmp
sub
pop
test
sahf
gs
imul
stos
cmp
mov
dec
jmp
mov
pop
pop
xor
add
cmc
and
jbe
outsl
testl
and
test
mov
in
xor
outsl
mov
outsl
incl
mov
push
xlat
pop
xchg
pop
outsl
loope
cs
pushf
pop
scas
dec
je
pop
pop
cmp
mov
repz
lahf
popf
std
sarb
jge
cmp
daa
inc
ret
jg
add
mov
sti
aas
xchg
pop
lods
in
push
push
cmp
jae
lret
push
in
sbb
xchg
xor
cmp
mov
aaa
mov
lret
fimuls
mov
sub
push
js
scas
push
imul
inc
xor
pop
jl
test
aad
inc
sbb
or
ljmp
add
stos
add
push
mov
or
add
inc
add
add
cmp
incb
or
and
inc
push
xor
fs
inc
in
adc
sbb
mov
and
adc
push
cmp
or
ja
inc
jo
orb
lods
cmpsb
sbb
inc
es
movsb
sub
aad
cmp
clc
xchg
dec
mov
mov
push
outsl
sbb
jno
xchg
lods
addr16
movsb
shlb
lock
es
adc
es
mov
mov
mov
xlat
lret
orl
nop
repz
inc
rcr
xor
adc
push
xchg
mov
clc
daa
in
hlt
dec
jns
repnz
pop
sbb
jmp
popa
test
repz
jg
jle
repz
gs
lods
jle
std
in
mov
int
aam
cmp
iret
outsb
add
ds
pop
movsb
jno
and
pop
add
fsubp
aam
mov
sbb
es
cli
add
add
jg
xchg
orl
mov
inc
add
add
push
push
adc
jle
sub
incb
add
mov
jmp
arpl
jno
pop
push
lret
testb
mov
jne
aaa
fnstsw
mul
xchg
add
rcll
test
aaa
push
mov
dec
mov
inc
repnz
sti
push
or
inc
popa
push
xor
test
jecxz
push
mov
sub
ror
stc
out
movntps
repnz
stos
test
add
outsl
adc
sbb
insl
sahf
adc
lcall
jnp
push
cmp
inc
xchg
xor
subb
xchg
leave
xor
push
rclb
or
in
mov
inc
js
shrl
pop
pop
pop
out
repnz
xlat
add
jge
scas
into
cli
dec
push
dec
sub
mov
stos
mov
in
mov
jg
stc
push
fisttpl
push
ss
and
add
and
dec
lret
jmp
imul
aaa
je
bound
add
push
sbb
inc
inc
ret
xchg
inc
add
loope
lret
mov
and
fsubr
xchg
inc
filds
inc
add
mov
fs
mov
jb
cwtl
fnstcw
mov
imul
jge
xor
push
xor
pop
in
cmp
call
mov
ds
cli
mov
and
push
cmp
xchg
add
or
jbe
bound
data16
loopne
dec
daa
mov
std
and
and
mov
lods
jns
dec
push
imul
js
or
jge
loop
jle
push
sub
adc
sub
test
shrb
inc
push
pop
pop
cmp
xchg
mov
adc
in
mov
mov
clc
out
lcall
or
pop
in
push
leave
stos
sbb
add
lds
cmc
cwtl
xchg
push
sub
sbb
or
add
add
adc
shlb
in
xor
pop
xchg
stc
adc
xor
push
push
shlb
mov
sbb
adc
sbb
pop
jo
jo
add
sbb
adc
dec
push
or
mov
sub
sbb
cmp
cltd
add
movsb
push
lea
out
dec
jp
dec
cmp
sub
and
ficomps
pop
and
jg,pn
test
and
shll
sub
pop
sub
imul
hlt
outsb
cmpsl
jne
dec
and
adc
mov
cmp
add
add
mov
push
repnz
movsl
jnp
movsl
jmp
lds
leave
ss
movsl
stos
mov
xchg
adc
fwait
cmpsl
xchg
and
dec
sbb
loopne
cmp
sbb
into
ljmp
add
and
or
or
add
sub
jns
xor
jg
in
cwtl
adc
add
rcl
adc
mov
repnz
cmovno
dec
or
jb
cld
jae
test
adc
fs
test
jmp
inc
ljmp
sub
inc
movsb
pop
jle
pop
sti
xchg
pusha
cmp
rolb
outsl
sbb
lds
mov
push
dec
ljmp
rorl
mov
push
jae
pop
fisubl
fcomip
mov
sub
jne
inc
sahf
push
mov
sarl
sbb
push
pusha
pop
inc
aam
xchg
pop
lcall
stos
sarb
insb
out
xchg
les
fs
xor
repnz
idiv
int3
out
mov
mov
fsts
loopne
sti
fsubs
sbb
int
push
xorl
rcll
imull
jle
mov
cmpsb
cmp
inc
das
fidivrl
sbb
jns
pop
add
std
xchg
add
add
ret
jg
decl
rol
pop
cltd
pop
aaa
push
inc
add
add
xchg
sub
ret
shr
call
nop
adc
sbb
inc
lret
das
mov
das
adc
ja
test
mov
and
ss
cmpsb
jo
sbb
jb
nop
push
out
out
cwtl
cmp
shrb
jo
xchg
push
xchg
in
roll
or
add
xchg
int
dec
cmpsl
jg
dec
pop
cmovge
mov
jg
loopne
mov
inc
mov
push
jae
movsb
sub
fdivs
ljmp
or
and
xor
push
push
cmc
xor
xorl
out
lret
mov
xchg
pop
inc
mov
fbld
and
xchg
mov
inc
and
push
fidivrl
dec
cs
jae
negl
arpl
sub
pop
aad
mov
push
cmp
roll
inc
push
pop
push
iret
or
sahf
pusha
add
cld
test
inc
xchg
call
pop
add
add
das
mov
out
aad
sbb
add
loopne
inc
shl
divl
pop
pop
pop
xchg
cltd
push
mov
push
dec
add
push
or
mov
pop
stos
outsl
arpl
xchg
push
pop
push
add
out
stos
leave
pop
xchg
popl
shrl
push
stc
lret
add
repnz
arpl
out
xor
inc
adc
jns
cli
xchg
mov
jb
sbb
push
inc
loopne
mov
cmc
inc
dec
enter
call
mov
sti
je
div
jle
outsb
mov
xchg
xchg
lcall
int
add
cmpsl
pop
add
or
jle
mov
inc
dec
mov
push
mov
inc
adc
sarb
popa
enter
or
xchg
push
xchg
lods
xor
pop
daa
cmp
adc
aad
xchg
dec
gs
cmp
lds
stc
das
cmpsb
fdiv
xchg
rcr
dec
cmp
add
add
hlt
gs
dec
adc
fwait
repz
add
test
out
push
sti
mov
mov
jb
push
sub
cltd
cld
mov
push
gs
xchg
pushf
cmp
mov
push
gs
mov
mov
mov
push
stos
cmp
mov
add
lods
inc
pop
or
xlat
insl
inc
leave
cmp
mov
inc
jmp
dec
sub
and
jno
int3
sar
leave
lods
sub
inc
mov
dec
mov
int3
rcrl
mov
jne
push
add
arpl
insb
push
inc
clc
in
in
cs
jle
cmp
lods
ljmp
xchg
hlt
pop
cltd
pop
adc
jno
mov
hlt
and
arpl
repz
mov
push
inc
jo
movsb
popa
aad
lahf
dec
sub
xor
out
repz
out
push
pop
xchg
addr16
adc
pop
sbb
arpl
or
sbb
lret
xor
out
add
add
aas
gs
pop
repnz
dec
add
add
ljmp
rorb
shl
lds
ljmp
pop
inc
sub
cmpsl
xchg
test
jae
icebp
sub
pop
lret
sbb
jg
sbb
jo
aaa
call
mov
sub
call
mov
ds
mov
andb
daa
out
ret
fidivs
sbb
lret
repz
or
mov
sbb
jmp
or
cmp
cld
inc
sarl
imul
jmp
fs
lods
sub
jmp
jne
mov
sub
inc
jnp
es
cli
enter
cmp
out
mov
mov
sbb
fcmovne
and
mov
mov
mov
lock
insl
jb
movsb
out
nop
iret
and
adc
cmp
fwait
sar
adc
mov
add
out
fisttpll
lock
add
add
add
cmp
testl
jmp
je
imul
mov
stos
outsl
lcall
xor
cmp
sarb
sub
inc
dec
cwtl
pop
mov
mov
bound
andl
scas
dec
mov
subl
inc
inc
mov
out
aas
cmp
xor
or
dec
sbb
jge
shll
jg
jmp
insl
outsb
dec
jge
lret
sbb
and
movsb
or
push
mov
call
movsb
jb
out
pushf
pushf
in
lea
and
dec
ficomps
rcrl
mov
and
jle
jne
add
xchg
or
push
mov
in
cltd
xchg
in
mov
in
loop
arpl
jp
and
or
xor
adc
ja
movsl
daa
xchg
notl
mov
push
or
xor
add
fildll
mov
ljmp
add
add
loop
sahf
out
imul
aam
cmp
cmp
add
fs
jp
adc
push
jns
lds
out
sub
into
fsubrl
shlb
bound
sahf
sbb
aad
push
inc
rclb
repz
fcomi
scas
xor
cmc
lret
outsb
cwtl
inc
push
mov
aas
add
jne
ljmp
sub
cmp
mov
dec
and
arpl
insb
dec
fs
shll
inc
shlb
or
jl
sbb
dec
inc
jmp
test
stc
cmp
cmp
xor
shr
mov
in
aad
or
lret
pushf
mov
movsl
stos
fmulp
inc
cmp
sbb
aaa
or
mov
and
pop
inc
pop
dec
cmc
mov
pop
xchg
mov
push
xchg
inc
je
divb
push
dec
mov
push
clc
dec
fidivrs
daa
inc
push
aaa
or
aad
jae
shlb
jl
jge
stc
push
fistpll
push
sbb
jmpw
fnstcw
jo
sahf
jb
dec
inc
aas
xor
add
add
inc
push
and
add
jne
mov
das
xchg
inc
fsubrs
sub
cmp
add
jno
adc
sbb
xchg
xor
imul
pop
je
mov
dec
and
sbb
pop
shl
das
jmp
in
pop
jb
sbb
aam
adc
fwait
pop
stc
pop
addr16
inc
or
in
enter
cmpsl
cli
les
pop
imul
fdivrl
cvttps2pi
aaa
out
ret
pop
xchg
sbb
aad
aam
add
gs
pop
aad
mov
movsb
or
push
movsb
int3
scas
daa
inc
adc
imul
dec
xor
or
test
fst
mov
push
pop
jns
xlat
lods
fdivrp
aaa
or
lret
sub
mov
les
push
fmull
jb
jo
inc
dec
push
sahf
das
and
push
xor
pop
scas
cmp
add
add
imul
out
mov
mov
fimull
add
inc
aam
cltd
sbb
adc
out
lret
mov
fmuls
and
add
pop
fsub
pusha
gs
addb
or
fisttpll
fcmovnu
out
add
mov
push
add
add
les
lcall
jmp
lcall
dec
mov
xchg
mov
jnp
ja
and
stos
pop
sub
aas
push
adc
sbb
add
iret
xchg
cmp
scas
pushf
out
pop
imul
pop
jg
leave
in
add
pop
loopne
test
push
push
je
sub
fcoml
shlb
sub
cmp
roll
popf
nop
cli
icebp
add
stc
sub
std
clc
aaa
out
imul
and
dec
mov
sub
out
push
cmp
ret
cltd
jge
dec
sahf
xor
orl
es
push
xchg
scas
pop
mov
push
test
inc
push
mov
js
add
dec
stc
mov
ljmp
ds
add
add
nop
push
es
jo
call
into
shl
or
sub
jge
test
push
outsb
push
in
pop
jo
adc
lcall
in
or
int
and
mov
sarl
adc
adc
add
cmp
add
inc
and
rorb
mov
iret
mov
in
pop
sub
sbb
popa
cmp
jecxz
pop
repz
pop
or
or
dec
fcoms
xchg
push
jge
mov
cmp
sub
xlat
or
lea
and
pop
cli
jg
dec
xchg
mov
lds
iret
jno
dec
inc
dec
mov
rcr
sahf
push
rcl
je
repz
jmp
xchg
and
and
lea
imull
scas
push
arpl
jns
pop
lahf
jmp
and
jmp
sbb
enter
adc
push
push
pop
es
add
add
jg
cld
lcall
movb
add
inc
pop
and
xchg
cld
mov
mov
adc
ficoml
mov
test
push
adc
xchg
imul
cld
push
mov
rclb
dec
push
repnz
inc
lds
repz
adc
fs
call
sub
shr
fisttpl
out
jl
cmp
daa
and
and
lea
dec
inc
in
push
mov
xchg
mov
out
sbb
jne
out
xor
jg
shl
mov
imul
push
push
adc
and
lcall
cmp
mov
ja
mov
xchg
xor
mov
xor
test
add
add
cmp
cmp
mov
sahf
and
dec
or
repz
out
xchg
mov
insl
shlb
sub
fs
sbb
int3
xchg
fwait
add
add
xchg
mov
pop
mov
push
add
add
cld
add
cmp
jne
insl
lea
idiv
movb
jmp
nop
jnp
mov
fstl
and
jg
adc
into
div
inc
jg
adc
adc
and
jge
mov
xchg
gs
mov
loopne
xchg
xchg
push
push
jb
push
in
push
icebp
push
add
push
outsl
shl
push
cmp
loop
aaa
lret
ret
repz
push
push
adc
and
cmpsl
and
cwtl
jecxz
movl
mov
push
xchg
mov
dec
sub
fdivr
loope
and
jp
mov
imul
mov
jae
divb
jl
and
test
popa
jge
iret
pop
mov
mov
and
sbb
ss
adc
call
leave
lods
adc
jp
xchg
mov
cld
test
fs
roll
add
or
mov
and
adc
dec
push
add
add
pop
sbb
into
add
cmpsl
mov
sbb
test
xchg
js
mov
push
xchg
inc
mov
or
aaa
push
bound
jg
xchg
push
adc
mov
test
adc
popa
insl
mov
in
in
dec
in
sbb
dec
repz
jno
mov
cltd
cmp
xchg
test
fucom
mov
mov
repnz
dec
or
mov
pop
adc
ss
inc
in
and
ljmp
stos
mov
cmpl
jmp
enter
mov
push
mov
loopne
cmp
dec
pusha
dec
dec
mov
ja
or
dec
adc
pop
inc
dec
bound
insl
mov
adcb
xchg
pusha
arpl
xchg
sti
shrl
push
inc
push
decl
add
aam
xor
or
loope
pop
add
add
sub
cmp
ret
or
dec
in
das
push
push
add
add
adc
insl
daa
mov
cmpsl
inc
loop
add
pop
add
xchg
fdivl
or
movsl
xor
add
adc
stc
sub
cmp
xchg
ja
mov
pop
jmp
fldcw
mov
fdiv
ss
mov
in
pop
test
mov
jecxz
pop
sbb
movsb
and
mov
insb
or
in
push
mov
xchg
xchg
push
jle
insb
in
mov
add
int
mov
sbb
xchg
sub
mov
fwait
push
adc
popf
das
jbe
cld
fildl
mov
and
sbb
mov
das
inc
insb
push
push
fcmovnu
mov
sbb
in
push
cmc
dec
xor
push
scas
pusha
mov
out
sbb
enter
or
fsts
and
das
and
ds
daa
xor
je
outsl
jb
lods
fcom
jo
or
mov
mov
xor
mov
or
repnz
add
add
push
shll
out
pop
pop
pushf
push
iret
dec
mov
add
push
mov
add
mov
decl
mov
xor
mov
pusha
cltd
in
aad
pop
cmpsl
jbe
pop
push
push
adc
sti
or
pop
stc
push
out
aam
mov
sti
push
or
push
mov
mov
push
jg
dec
adc
das
aaa
nop
sahf
adc
xor
ja
addb
cmp
sub
cmp
and
xchg
jne
stc
sbb
fsubrl
jno
clc
ret
in
inc
push
push
sbb
lcall
xor
and
std
lods
pop
rcrb
mov
xor
inc
sbb
out
add
or
call
add
stos
fwait
mov
xor
arpl
jp
dec
aaa
addb
faddl
in
icebp
jg
xchg
sub
sbb
jp
jle
jno
xchg
mov
fsubs
xchg
ss
add
stos
push
lcall
hlt
mov
xchg
rcrb
add
jge
jae
lds
or
leave
out
flds
nop
cld
cmp
jb
stc
pop
xchg
inc
test
mov
sbb
inc
fisubs
call
imul
js
cltd
jns
xor
inc
fs
subb
ss
inc
push
movsb
das
cmpsb
adc
ds
mov
mov
jge
bound
push
add
test
lret
ljmp
fs
in
out
sbb
arpl
cltd
divl
into
or
cmpsl
xor
std
or
aad
enter
add
aas
cmc
aam
clc
rclb
or
es
pop
or
outsb
aad
mov
lret
call
xor
mov
jl
mov
xchg
pop
push
jmp
or
pushf
aas
sub
add
bound
imul
cmpsb
cmpsl
jg
push
add
add
std
popl
lcall
divl
cmp
into
fistps
sbb
clc
cmpsb
lcall
in
dec
or
and
xchg
dec
adc
repnz
inc
xchg
les
jnp
hlt
or
cmp
mov
or
cmp
push
gs
ljmp
pop
sarb
mov
jmp
mov
sub
pop
sbb
lahf
pop
push
mov
mov
cwtl
jbe
enter
test
sti
xchg
mov
inc
lret
xchg
pop
test
ja
inc
sub
inc
icebp
psubusw
ds
flds
pop
popl
dec
loop
xor
cmc
popf
call
gs
sarb
cmp
sub
dec
stc
mov
ret
push
mov
pop
data16
mov
dec
test
ljmp
daa
imul
outsl
dec
add
add
fwait
cmp
stos
sarb
push
add
add
stc
scas
add
out
movsb
or
roll
hlt
adc
pop
dec
mov
enter
lock
std
sbb
and
int3
fcoms
std
ja
je
jae
push
aad
jg
loopne
cmpsb
shlb
call
arpl
movsb
in
or
shll
in
mov
xlat
and
lret
fdiv
popa
jo
loope
mov
push
sbb
nop
pop
or
aad
scas
or
or
mov
jnp
xlat
xchg
jle
push
xor
dec
jns
sbb
test
add
xor
jae
andb
nop
xchg
dec
outsb
lods
pop
lods
addr16
pmullw
lret
inc
hlt
push
insb
les
mov
sub
adc
sub
cmp
dec
xlat
out
lea
mov
mov
xor
enter
cmp
lahf
pop
cmp
std
outsl
lcall
test
movsb
mov
add
push
mov
inc
push
clc
mov
and
hlt
push
mov
add
add
mov
mov
push
sbb
sub
into
loopne
xchg
push
jb
lock
daa
enter
pop
mov
lea
push
cmp
in
push
push
adc
into
jmp
nop
aaa
inc
mov
adc
pop
out
and
pushf
mov
fsubr
pop
fcoms
in
jne
jb
xor
jl
xchg
stc
cltd
xor
dec
sbb
cs
ror
notl
xchg
jno
iret
nop
mov
or
movsb
and
cmp
mov
into
stc
xchg
push
cli
sub
fs
pop
mov
add
dec
mov
jle
test
jg
pop
mov
jmp
dec
lret
roll
jecxz
jb
jns
add
sbb
roll
pop
cmpsb
mov
ret
and
lret
insb
syscall
inc
outsb
cmp
fcomi
out
jo
jle
aaa
sub
scas
xchg
push
adc
out
mov
cltd
sbb
add
leave
les
in
ret
pop
sub
and
or
pusha
jmp
add
and
xchg
or
mov
xchg
filds
sahf
xadd
pop
inc
in
std
or
mov
inc
push
fistpl
or
lahf
cmp
js
push
sub
movsb
mov
fadd
in
sub
push
and
xor
int3
insb
fnstsw
pop
jl
sbb
enter
into
push
stc
in
fmuls
push
in
inc
scas
outsb
cwtl
push
in
push
divb
mov
out
push
cmc
arpl
and
jl
jnp
jbe
sub
and
mov
ss
dec
add
repnz
call
gs
int3
fwait
stos
ljmp
imul
xor
sub
push
aas
scas
scas
shrb
dec
xchg
and
xor
movsl
loope
mov
fadds
out
and
out
dec
jmp
mov
jb
push
add
add
test
or
fdivs
arpl
out
jne
add
add
lcall
mov
xlat
mov
stos
fisubrs
gs
and
jae
mov
pop
outsl
xchg
mov
data16
in
mov
les
js
dec
xchg
lret
fldcw
outsb
cltd
xchg
fstl
test
mov
xchg
dec
pop
stc
xor
jno
nop
or
inc
jno
push
adc
addr16
mov
cmp
cltd
sub
dec
outsl
out
mov
pusha
mov
and
inc
movsl
fbstp
mov
jb
mov
sbb
push
cmpsb
adc
fwait
and
lcall
dec
adc
push
pop
loope
mov
mov
cmpsb
out
test
lods
and
test
mov
mov
cmp
in
ja
mov
sub
pop
push
add
jno
cmpsb
adc
adc
mov
push
mov
mov
or
mov
add
mov
and
das
cmp
pusha
mov
lods
pushf
jp
add
add
out
and
lahf
xor
imulb
mov
mov
mov
clc
push
insb
pushf
outsb
xor
cmpsb
mov
ret
push
jmpw
jb
xchg
mov
adc
movsb
lahf
xor
stos
mov
in
pop
mov
sbb
rorl
jns
pop
push
aam
jecxz
fidivs
inc
cmp
loop
ss
fwait
adc
jne
push
repnz
jl
cmpsl
and
fsubl
fstpl
mov
insb
mov
adc
mov
or
cmp
jbe
popf
repnz
mov
fsubrl
mov
push
push
xor
add
es
out
sub
xchg
movsb
int
loope
push
add
in
ljmp
or
xor
in
jl
xchg
lret
xorb
sbb
dec
jae
repz
add
add
movsb
jae
jnp
mov
ja
mov
adc
add
add
cmc
outsb
push
nop
inc
xchg
add
jae
adc
lahf
jmp
push
cmp
dec
or
into
or
or
jae
mov
arpl
mov
test
lds
adc
dec
pushf
add
or
dec
mov
xorl
shlb
int
xchg
movsb
fxch
std
fnsave
lcall
mov
xor
mov
mov
add
push
lret
test
pop
fsts
rolb
and
call
or
add
cli
call
mov
xor
aad
push
jmp
mov
std
xor
mov
adc
outsl
aas
gs
jae
add
insb
mov
out
pop
iret
mov
iret
xor
pop
lret
jmp
orb
int
pop
dec
sub
and
lods
fs
ja
or
sub
hlt
push
insl
scas
fiadds
fbstp
scas
adc
lahf
xlat
out
cld
cmpsb
push
popf
pop
test
add
test
sub
jne
and
cmp
add
std
or
rorl
xor
insb
rorb
add
dec
mov
popa
dec
or
cmc
mov
pop
cmp
mov
adc
jbe
mov
pop
cwtl
sbb
les
decb
faddl
leave
add
pushf
sbb
sbb
out
pop
ret
ljmp
dec
and
lret
jmp
pop
dec
jg
sarb
sbb
repnz
sbb
dec
nop
xor
ja
imul
and
jle
in
mov
push
cmpb
cmp
xlat
pop
push
push
mov
hlt
loopne
les
mov
es
dec
outsb
cli
sysenter
aad
mov
mov
aam
popf
inc
aam
push
jle
fsubl
fwait
jg
jg
xchg
outsb
ljmp
lahf
or
in
scas
dec
sldt
add
mov
add
inc
pop
or
add
shlb
insb
lcall
divb
push
jecxz
dec
and
rorb
lret
popa
lret
cwtl
push
pandn
mov
repz
and
and
push
mov
jp
inc
lea
hlt
sbb
mov
icebp
jb
ficoms
int3
lods
pop
gs
xchg
dec
adc
jbe
push
aas
hlt
sbb
das
in
mov
mov
and
lret
adc
testl
fists
int3
aam
cli
and
cmpsl
pop
clc
fimuls
or
addr16
xor
int3
push
jno
nopl
mov
dec
xlat
test
jl
test
xor
daa
fwait
xor
adc
cwtl
inc
mov
stos
mov
pushf
faddl
jb
test
adc
or
ds
xor
and
das
mov
ss
mov
cmp
shll
adc
sub
add
add
push
into
push
push
inc
lahf
mov
mov
add
insb
int3
pop
jp
mov
enter
fimull
orl
gs
in
dec
lcall
xor
js
push
sbb
sbb
ljmp
xor
mul
mov
pop
sub
mov
sub
loop
mov
jne
pop
cmp
jl
mov
xor
rcrl
cli
clc
xor
or
mov
aam
ret
pop
push
add
into
dec
out
inc
jecxz
xchg
imul
cmp
cld
ffree
sub
or
cmp
push
sub
jmp
push
gs
in
mov
or
movsl
jo
jge
lret
jl
pop
xchg
inc
xchg
pop
loopne
ja
inc
add
xor
push
aad
daa
inc
leave
aam
lcall
enter
xlat
adc
clc
adc
rclb
pop
cmp
ss
adcb
dec
jo
aad
test
scas
ficomps
leave
xchg
popa
roll
mov
and
mov
jg
or
xchg
pop
add
add
cmpb
sub
in
dec
hlt
fstps
mov
fldcw
cwtl
sbb
sbb
adc
jae
sbb
clc
xchg
movsl
mov
std
sub
lret
loope
incb
or
pop
vpsadbw
mov
test
cli
push
sti
sub
mov
decl
repnz
test
push
pop
jmp
fimull
cmpsb
pop
jns
and
mov
cwtl
pop
mov
movsb
adc
out
stos
shlb
jle
xor
sub
cmpsb
push
inc
and
push
dec
imul
mov
lods
push
mov
int
jns
test
pusha
iret
mov
push
dec
xchg
xchg
add
decl
mov
add
add
popa
push
in
add
out
push
leave
addl
push
and
jp
xchg
rcr
cltd
mov
add
add
lahf
pop
cmpsl
jne
mov
inc
stc
cwtl
pusha
add
add
push
in
ja
jg
leave
mov
and
adc
das
cmp
sub
jp
pop
iret
jb
adc
testl
push
and
pop
xor
mov
mov
fcoms
add
push
je
jno
jno
cmpb
pop
in
pop
out
jae
push
mov
xchg
inc
cmc
out
and
mov
imul
pop
lea
cld
mov
xchg
add
test
mov
jle
xor
fistpl
fistps
popf
add
test
push
cmpsb
dec
std
fidivl
jecxz
cmp
push
out
int3
in
mov
mov
mov
fisubrs
das
cmpsb
fdivrl
notl
push
mov
aad
ds
add
ret
mov
inc
push
pop
mov
pop
imul
aam
lds
test
mov
sahf
jns
cmp
fmull
and
sahf
pop
testl
or
test
add
mov
pushf
insb
rcrb
fisttpll
mov
nop
inc
bound
test
in
lock
push
add
add
ds
mov
xchg
lea
jo
xchg
inc
sub
div
lret
mov
jae
inc
les
push
scas
xlat
add
out
push
inc
jae
into
jnp
cmp
cmpsl
jmp
lock
mov
cli
loopne
pop
jb
sbb
mov
sbb
adc
es
jae
ffree
adc
sub
mov
dec
es
hlt
push
pop
mov
fidivl
or
rcll
stos
push
aas
ret
cmp
in
cmpsb
or
icebp
mov
sub
sbb
sbb
adc
addr16
sbb
shrb
xor
pop
sahf
ret
pop
push
data16
adcl
push
push
and
sbb
jno
xchg
scas
pop
fstpt
sbb
sub
mov
sar
rcll
inc
pop
mov
fstps
lock
add
add
jmp
pop
in
xor
cli
mov
mov
mov
pop
leave
mov
push
mov
mov
push
cmp
adcl
lret
mov
call
scas
inc
adc
add
add
fsubrl
js
inc
test
sbb
pop
fcoms
in
rclb
arpl
sbb
aam
ja
mov
push
in
fs
push
mov
sub
cli
sbb
sub
xor
pop
cmpsl
in
out
jecxz
pop
pop
insl
push
sub
pop
push
aas
xorl
shlb
cmp
ret
lods
lea
dec
jo
cwtl
daa
iret
in
xor
into
js
mov
mov
enter
cmp
cmpsl
les
fisttpll
in
cmp
or
mov
outsl
jbe
fstpl
sub
add
repnz
movsb
jle
arpl
pop
lcall
add
cwtl
aaa
mov
and
addr16
mov
pop
xor
pop
test
and
fstpt
mov
outsb
stc
cld
ficoms
or
inc
sarl
inc
lret
mov
stos
sub
lcall
mov
xchg
mov
data16
or
loop
sahf
cmp
fmulp
ds
imul
or
xchg
push
mov
pusha
and
push
mov
dec
jg
clc
sbb
aad
dec
mov
cld
mov
ja
mov
push
mov
adc
pusha
add
das
out
rcll
sbb
fimull
iret
inc
cmpsb
adc
mov
insl
lahf
ljmp
push
dec
mov
inc
or
push
loope
call
aaa
xchg
fisttpll
insl
push
inc
loop
mov
add
clc
pushf
aaa
push
addl
add
jmp
sub
and
add
add
aas
sbb
cli
mov
and
mov
inc
ss
arpl
loop
push
icebp
dec
int
push
xchg
adc
mov
into
cs
and
fistps
xlat
out
push
pop
fwait
jmp
int
xchg
mov
in
lds
sarl
in
fucom
rcl
aad
add
jp
dec
out
cli
inc
jl
or
sbb
lcall
repnz
push
not
into
jge
test
sub
mov
popa
sbb
pop
popf
aas
xchg
adcl
add
xchg
xor
xor
pop
inc
out
jne
rol
lods
pop
or
or
lcall
push
push
jb
mov
mov
jo
pop
add
dec
add
inc
std
and
adc
rcll
sbb
ss
outsb
add
outsb
sarb
sub
shrl
add
add
mov
fnstenv
mov
add
add
imul
xchg
lds
in
mov
dec
movsl
nop
fdivrl
or
test
pop
add
xchg
dec
push
sahf
out
iret
push
inc
pop
dec
fdivrp
in
xchg
lods
fimull
adc
cmp
test
lret
and
js
cmpsl
jmp
or
xchg
inc
pop
insb
out
aaa
push
inc
or
jge
ja
js
fisubrs
test
mov
add
mov
mov
push
imul
cmp
rol
sub
movsl
xchg
and
dec
cmp
mov
jl
pop
cmp
add
je
scas
add
adc
rorb
adc
jno
dec
push
xor
test
scas
cmp
sub
sub
xchg
or
and
adc
rclb
mov
jbe
in
sbbl
xor
add
or
xlat
enter
mov
add
add
cld
je
jbe
jns
sbb
cmp
add
add
outsb
xor
cltd
out
mov
jns
sub
insl
hlt
int
pop
mov
pop
cmp
in
incl
mov
dec
loop
leave
loopne
fistl
jne
xchg
lods
ja
cmp
das
or
sub
xchg
xchg
fwait
xor
jmp
ljmp
lods
shrl
movsl
xor
mov
and
ret
inc
jno
pop
jmp
ljmp
lds
mov
and
mov
out
pop
sub
push
xchg
or
outsb
inc
or
push
outsb
in
xor
incb
pop
bound
xor
xor
aaa
sahf
jb
xorb
sbb
sbb
loop
mov
push
test
jl
test
mov
or
lds
and
stc
inc
outsl
aas
jbe
loop
shlb
std
cmp
in
sti
orb
pusha
mov
add
add
cltd
jmp
fildl
or
add
add
jp
je
cs
loop
cmc
shr
les
inc
enter
xchg
dec
dec
inc
rcl
inc
leave
sbb
hlt
push
xchg
cmp
nop
loope
sbb
popf
pushl
lcall
cmp
xchg
das
lahf
adc
cmpsb
inc
adcl
pusha
bound
sbb
cmc
js
jnp
mov
insb
neg
mov
xor
push
sbb
xor
pop
dec
mov
addr16
iret
shll
mov
ret
nop
sbb
add
icebp
fs
lret
dec
mov
test
rcrl
adc
sti
mov
mov
fprem1
and
ret
arpl
cltd
mov
incl
stos
jecxz
movsl
inc
mov
rorl
xorb
cwtl
movsl
mov
jb
in
dec
lds
xor
inc
sbb
or
in
jns
push
dec
jmp
cld
lods
push
mov
xchg
aaa
and
cmc
mov
jnp
enter
add
add
push
jg
dec
xchg
dec
adc
std
aad
push
add
sbb
ret
cmp
lds
sbb
scas
arpl
mov
push
and
mov
icebp
push
ja
xlat
test
stos
mov
mov
push
and
rcrb
push
jae
cli
xchg
out
std
inc
imul
int
cld
push
insl
dec
in
inc
out
jbe
jg
adcb
sub
sbb
or
out
dec
xor
xor
push
loopne
adc
fcomp
cmp
inc
sbb
call
adc
push
mov
adc
fdivs
adc
cmpsb
clc
incl
mov
mov
js
dec
lds
cld
pop
add
inc
cli
pop
movb
sbb
minps
ss
jb
add
std
cmpb
addr16
sbbb
cmp
cmp
dec
insb
cmp
shr
jg
push
push
mov
sub
movl
add
iret
mov
fucomip
push
insb
xor
xor
rol
imul
add
pop
or
scas
xchg
xor
mov
stos
call
popa
into
ss
mov
add
out
and
hlt
mov
lock
insl
iret
sahf
jg
or
jnp
iret
jae
mov
and
and
pop
arpl
xor
xchg
push
fstpl
mov
cs
mov
jecxz
lods
fistpl
or
mov
adc
fisubrs
lods
insb
ror
insl
sti
adc
leave
or
xor
lret
std
xor
sbb
loopw
mov
sti
add
pushf
movsl
pop
jge
mov
popa
int3
outsl
lcall
sub
test
in
push
or
sub
rorb
mov
repz
addb
inc
mov
inc
cmp
inc
xchg
addr16
bound
dec
dec
adc
xor
decl
in
sub
push
int3
adc
aad
push
cmp
dec
lock
addr16
dec
ret
jmp
into
in
mov
add
add
dec
out
iret
jmp
aas
in
push
lods
jb
xor
add
ds
sbb
divb
outsl
shrl
lret
cmp
scas
mov
push
fldenv
mov
hlt
test
fldt
push
incl
repnz
into
xor
mov
paddw
out
psubusw
mov
xor
or
xchg
mov
push
in
pop
add
roll
add
mov
cltd
sub
popf
mov
fdivl
sar
testb
fwait
jl
imul
icebp
or
ror
dec
flds
mov
ret
jne
test
hlt
pop
xchg
mov
cmc
jno
scas
lret
mov
pop
mov
adc
outsl
lock
imul
test
scas
xchg
dec
push
sub
sub
out
add
xchg
dec
enter
popf
insb
dec
mov
imul
or
inc
mov
dec
xor
loopne
fdivl
in
int
add
out
add
add
std
cmpsb
pop
dec
sub
sub
imul
add
rcll
jecxz
in
test
jae
add
hlt
push
fisttpl
dec
dec
jne
xchg
sarl
pop
push
ss
inc
leave
adc
sbb
shr
push
repz
pushl
sub
nop
rclb
lods
out
je
dec
jl
sbb
mov
lock
sti
pop
cmc
in
scas
mov
aam
pop
or
bound
mov
jmp
clc
into
out
ds
xchg
push
sub
movsb
xor
mov
enter
scas
fs
mov
sahf
xchg
imul
xlat
pop
leave
pop
scas
mov
cmp
icebp
lds
sub
mov
cs
in
add
enter
pop
jle
popf
inc
pop
cltd
hlt
fsubrl
inc
outsb
cs
mov
out
dec
or
leave
ret
sbb
sub
test
je
dec
or
xchg
mov
xchg
add
in
lods
imul
neg
std
sub
dec
movsb
js
xchg
aam
add
add
daa
mov
cmp
inc
lahf
jle
comiss
add
xchg
mov
jmp
stos
aam
dec
ficoms
lods
inc
aad
mov
xchg
pop
imul
jmp
inc
aas
jns
push
ljmp
movsl
popa
pop
fwait
xchg
and
jns
push
sbb
les
pop
adc
jno
sahf
dec
insl
cmc
in
lods
aam
jp
lock
fdivrl
jmp
repnz
add
in
mov
fisubrs
xchg
push
add
mov
fidivl
adc
mov
fcompl
sub
inc
jbe
ret
les
sub
push
inc
or
out
mov
scas
testl
xor
shll
pop
shlb
aam
testb
scas
mov
repnz
aaa
jb
dec
jnp
xchg
je
xchg
dec
enter
repnz
lock
cmp
add
add
cs
xor
cltd
jg
loopne
fldcw
add
stc
aaa
outsb
fwait
adc
fmull
add
idiv
xor
in
les
jo
push
daa
pop
add
jecxz
fldcw
push
test
mov
mov
shrb
leave
cwtl
bound
xchg
xor
icebp
pop
jb
out
dec
lret
lea
xchg
mov
in
out
or
dec
add
and
lea
nop
cmp
add
scas
jp
ja
mov
and
xchg
sub
and
add
pop
rorb
cmpsl
adc
mov
mov
push
ja
aad
sbb
and
push
jo
xchg
scas
dec
cltd
and
pushf
cmp
std
cli
lods
add
mov
andps
xchg
je
cld
adc
stos
jae
mov
dec
scas
leave
fwait
repz
std
cmp
call
sub
bound
add
add
ja
out
sbb
xchg
neg
outsb
add
add
mov
inc
pop
pusha
xchg
rclb
pop
push
mov
pop
std
ja
jb
loop
fisttpl
jo
bound
dec
loope
test
mov
jl
js
xor
jmp
iret
daa
xchg
fs
inc
ljmp
xchg
insb
push
out
jge
loop
stos
and
cli
rclb
adc
subl
test
test
rcr
adc
call
push
clc
xlat
push
enter
ss
mov
xlat
inc
pop
add
pusha
xor
cmp
lret
cmp
push
push
out
inc
rcl
xchg
int
cli
enter
push
aas
add
test
mov
ss
inc
jl
icebp
gs
cli
and
sbb
inc
repnz
jb
xor
mov
push
jnp
mov
jge
popa
adcb
xlat
jbe
xchg
add
mov
add
add
sub
ja
mov
push
fldl
add
into
push
out
pop
les
lock
adc
shlb
push
inc
iret
add
cltd
mov
repz
adc
mov
call
in
cltd
and
outsl
std
lods
xchg
aas
movsb
push
test
je
test
outsl
xchg
mov
dec
xchg
lcall
pushf
push
sahf
cmp
mov
loopne
or
movsb
mov
jns
and
sbb
scas
aad
out
into
ss
or
xchg
xchg
jne
lret
test
aaa
fisubrl
icebp
lods
lock
test
jne
mov
call
in
enter
jl
inc
loope,pt
inc
xchg
mov
jecxz
adc
jge
mov
xor
dec
sub
or
incl
xchg
inc
movsb
fs
pop
dec
dec
fcoms
fsts
or
push
jl
neg
xchg
lds
lahf
pop
movsl
iret
outsb
or
mov
insl
sbb
out
fldt
int
mov
jnp
outsl
cmpsb
loopne
addl
add
cs
dec
adc
outsb
add
imul
mov
adc
pop
lods
cli
inc
sub
add
sbb
jnp
sahf
pop
fistpll
inc
popf
aaa
ds
popf
lcall
mov
push
pop
lret
cmpl
pop
fs
fwait
or
push
xor
mov
pop
ljmp
mov
mov
mov
aas
movsb
dec
stos
mov
aaa
mov
pop
jmp
inc
xchg
xchg
cmp
jge
xor
sbb
mov
cmp
xor
sahf
or
frstor
addb
pop
xchg
cli
xchg
sbb
mov
push
push
add
movsb
sub
inc
fists
test
adc
xchg
add
aam
sub
xchg
shrl
mov
push
paddb
imul
outsl
cmpxchg
shll
mov
mov
cmp
and
in
shrb
add
xchg
push
mov
cli
xchg
jle
push
je
push
aam
in
jno
add
mov
pop
cmp
pop
scas
mov
sbbl
mov
sub
imul
adc
sti
dec
fwait
inc
mov
shrb
in
das
ds
lods
push
pop
cmp
cltd
out
cmpsl
push
cwtl
xchg
or
lret
push
xchg
mov
cmp
dec
fs
in
rcll
test
leave
lods
out
loopne
ss
cmc
mov
movsb
cwtl
mov
aad
rcll
mov
in
xor
adc
mov
std
cmp
imul
mov
pop
lods
jge
imul
mov
imul
jmp
adc
inc
fldl
std
aam
shl
imul
arpl
ss
divl
pop
into
cmp
rcr
push
nop
pop
push
jnp
xor
mov
jmp
push
dec
adc
pop
add
add
fwait
jnp
aad
sbb
push
mov
jb
add
dec
mov
pop
stc
dec
mov
lods
push
pop
clc
add
xor
jnp
mov
cmp
shll
jl
jb
mov
dec
mov
fnstenv
insb
test
xor
sub
fcomp
pop
fimull
xchg
bound
ljmp
rcrb
pop
dec
xor
xchg
lcall
insl
push
push
stos
les
or
or
ret
cmp
call
aaa
roll
xor
xor
xor
stos
sbb
jns
clc
and
fwait
ds
dec
out
jmp
mov
cmp
cmp
les
int3
rcrl
xchg
sub
je
gs
fs
testb
fisubl
shlb
notl
cmp
jb
xor
das
cmp
and
cmp
add
add
std
mov
sub
add
add
scas
jo
inc
push
xlat
mov
push
xor
push
mov
add
dec
mov
push
imul
scas
push
lret
addl
test
pop
sbb
outsl
imul
sbb
mov
fsubrp
or
dec
pop
cmp
rorl
daa
mov
fcomi
cmp
add
mov
cmp
sub
scas
inc
test
sub
cmp
mov
cwtl
dec
cltd
or
cmpsl
push
and
pop
cmpsb
cmp
adc
jns
push
add
xor
jle
sar
scas
xchg
cmpsb
xor
mov
icebp
fisttpl
fadd
push
hlt
popa
jp
or
dec
push
lods
scas
mov
add
and
mov
jmp
cli
inc
xchg
fidivs
shr
bound
mov
xor
dec
xchg
popf
mov
scas
into
push
mov
xor
repz
dec
mov
sti
rcrb
add
jmp
cmp
fisubrs
daa
add
add
fstl
lret
pop
dec
cld
je
add
or
movsb
mov
and
mov
daa
jecxz
pop
cli
fcom
mull
sub
rorb
lods
pop
cmp
in
jne
stos
cmp
and
shl
in
nop
imul
std
sti
mov
jbe
adc
cmp
mov
shlb
mov
sub
sub
adc
sahf
test
stc
movb
sar
mov
jmp
mov
mov
push
cmp
dec
sbb
adc
push
insl
push
repz
mov
adc
aad
hlt
mov
or
sbb
pop
xor
dec
mov
mov
das
mov
fwait
mov
ss
or
mov
aaa
punpckhdq
xor
mov
add
pop
lret
daa
scas
pop
das
js
mov
push
cld
scas
pop
push
les
ljmp
in
in
imul
add
inc
in
mov
mov
out
sub
sbb
jbe
add
pop
mov
jne
adc
xor
jle
js
xchg
int3
cmpsl
push
sub
push
xchg
es
cli
cmpsl
add
inc
fisubrl
and
stos
jl
icebp
cmp
push
cmp
movb
movsl
push
imul
out
popf
pusha
fldlg2
xchg
ficompl
push
xchg
aad
mov
xchg
cmp
std
sub
xor
lods
popf
pushf
ja
into
xor
popf
mov
cmp
jle
sbb
repz
xchg
jle
mov
stos
jo
insl
fsin
fs
push
sahf
les
xor
std
push
adc
dec
sbb
ret
and
mov
inc
mov
int3
mov
push
std
push
mov
sub
cmp
mov
fiaddl
inc
adc
lods
rcr
mov
jbe
lcall
dec
add
subb
scas
and
pop
sbbb
fsubp
jne
inc
in
cmp
in
push
aas
lods
dec
adc
iret
mov
flds
add
jns
divl
in
sub
push
ja
add
mov
dec
mov
xor
psubw
xor
jno
xor
mov
adc
add
loopne
mov
adc
xor
pop
pushf
add
sub
mov
das
test
cmp
sbb
out
rorb
hlt
call
lock
sub
nop
jmp
or
and
cwtl
sub
testl
in
int3
sbb
ds
pop
jge
adc
std
jg
std
jb
mov
in
sub
bound
arpl
iret
sarl
repnz
or
push
and
ret
call
mov
mov
cwtl
cmp
jne
cmp
es
inc
dec
adcb
xchg
sar
jl
scas
mov
sub
sti
pop
scas
out
ret
mov
aaa
outsb
push
mov
ljmp
add
clc
fisubs
mov
mov
out
or
add
loop
stos
imul
jns
lods
jo
cmc
cwtl
pop
in
mov
rclb
hlt
xchg
test
rorl
push
mov
jmp
push
data16
fnstenv
inc
ficoms
daa
xchg
and
mov
mov
cmp
stc
xor
aad
ja
sbb
jnp
es
sahf
add
push
pusha
call
pop
add
sarb
dec
popa
xchg
jo
adc
push
cmp
call
mov
sub
popf
lods
push
push
loopne
pusha
adc
inc
jbe
fldcw
mov
scas
push
pushf
cmpl
clc
adc
sub
fists
jle
mov
in
notl
fs
or
fistpll
nop
push
mov
jg
push
jae
or
push
inc
out
daa
fsubrl
dec
dec
jge
mull
dec
gs
xchg
addl
addl
add
add
mov
outsl
jne
ljmp
pusha
adc
add
into
sbb
jae
lcall
insl
imul
cmp
fisubrl
adc
sbb
push
mov
leave
and
mov
daa
mov
stos
xor
pop
jbe
mov
mov
daa
pop
repz
jg
dec
cli
scas
inc
sub
call
popa
inc
jge
or
sarb
xchg
sub
data16
xchg
outsl
pop
insl
repz
nop
pop
or
test
or
pop
out
decl
hlt
adc
and
adc
jo
shrl
cld
insb
in
push
adc
mov
lahf
out
das
ljmp
movsb
xchg
add
in
js
sub
popa
ror
lock
ret
sbb
shl
loop
stc
mov
lock
fisttpl
push
sub
lcall
ret
cwtl
xchg
push
cmc
out
les
stc
mov
jecxz
cmp
scas
sub
ficomps
popf
cmp
pop
fsub
imul
orb
ljmp
jl
mull
mov
add
add
mov
jmp
sahf
jbe
mov
cmp
arpl
add
or
mov
loope
loopne
dec
stos
data16
test
xor
pop
pop
stos
xchg
ret
mov
mov
loopne
mov
out
lds
out
es
mov
cltd
jmp
stos
test
or
sbb
into
loope
jp
jg
jne
cmp
mov
add
out
iret
in
hlt
stc
xor
movsb
sarl
dec
int
push
test
xor
mov
ror
push
push
into
lods
movsb
dec
jns
push
jmp
jp
or
pop
mov
xchg
and
xchg
jnp
dec
cmpsl
sahf
sti
inc
sub
mov
es
mov
repnz
pop
mov
cwtl
cs
je
add
stos
popf
jns
xor
xchg
or
cli
sub
add
add
jo
ja
std
stos
sbb
ljmp
add
add
test
iret
loop
fcmovnu
cmp
jle
lahf
xlat
adc
and
sbb
and
cmp
lock
cmpsl
filds
adcb
xor
jmp
push
push
pusha
xchg
fnstcw
xor
lods
dec
imul
or
stos
repz
inc
inc
jmp
mov
shlb
jae
ret
mov
je
cmp
mov
push
and
out
push
out
xchg
xor
mov
mov
aam
test
fidivl
sbb
arpl
subl
insb
insl
out
rcrl
scas
fcmovu
outsb
mov
pop
dec
pop
bound
popa
mov
inc
dec
sub
fimuls
inc
cmc
cmp
pop
sub
daa
push
call
cld
pop
lds
shll
pop
data16
dec
pushf
mov
mulb
movsl
pop
mov
fildl
pop
pop
sub
dec
ror
pop
inc
add
add
cmpsb
push
sbb
add
pop
jl
add
mov
lock
sbb
inc
shlb
mov
sub
push
push
shl
mov
in
inc
sbb
out
sub
bound
cwtl
cmp
cli
add
pop
test
daa
xchg
dec
add
int3
repz
aas
jp
cmpsb
into
mov
lret
shlb
daa
scas
arpl
jno
jo
lock
mov
xchg
add
mov
aaa
jg
jo
movsl
incb
sahf
les
movb
adc
xlat
repnz
xor
addr16
jb
push
in
mov
out
jnp
and
lret
inc
adc
inc
into
ret
pop
xor
or
adcl
hlt
dec
adc
iret
mov
mov
jns
dec
add
dec
test
popf
outsb
cltd
xchg
incb
jmp
leave
mov
xchg
lret
in
enter
jmp
insb
lods
int3
push
cld
outsl
add
add
cmp
cli
mov
insb
add
and
add
add
idiv
xchg
lds
or
loop
sti
add
mov
scas
sti
inc
jmp
adc
gs
les
test
sbb
lock
jg
stc
lods
mov
push
ret
inc
sub
xchg
adc
dec
pop
mov
js
fildl
jecxz
sbb
dec
sarl
sti
or
pop
dec
ss
inc
aas
sbb
mul
movl
movsb
insb
test
sbb
out
sub
nop
in
inc
sbb
pop
mov
lahf
and
push
pop
out
test
xchg
fistps
icebp
mov
bound
arpl
xor
int3
add
push
cmpl
cmp
sub
xor
rclb
jb
inc
fdivl
dec
jmp
cmp
push
call
mov
imul
mov
xor
inc
xchg
dec
lret
dec
jp
pop
push
outsl
add
add
test
lcall
rcrb
add
pushf
pushf
out
insl
mov
pushf
inc
gs
xor
leave
mov
inc
jne
ds
push
cmp
ljmp
popa
xchg
gs
or
xchg
jae
lret
jmp
bound
test
push
test
jns
adc
inc
pop
adc
nop
aaa
les
gs
add
cwtl
xor
out
jp
fucomp
mov
repnz
jns
mov
sbb
and
stos
pop
xchg
sub
xor
sahf
sbb
repnz
jge
in
and
sub
or
cmp
shll
push
cltd
and
cmpl
jl
push
xchg
xchg
imul
sbb
shr
xchg
push
out
jno
xor
inc
pop
js
loopne
decl
sbb
adc
mov
xor
fcomip
or
ljmp
dec
mov
in
js
add
add
xchg
xchg
jns
jmp
mov
out
jg
add
xchg
leave
jbe
lods
and
adc
dec
flds
fdivl
data16
or
cmp
add
mov
jle
xor
cli
loope
int3
mov
or
xor
scas
pop
repnz
ds
shlb
push
and
es
aad
pop
stos
fs
cwtl
inc
mov
push
in
neg
push
or
cmp
fs
ss
imul
inc
xor
push
in
sahf
sbb
enter
fdivrs
push
insl
sub
and
push
xchg
leave
xor
cs
int
outsl
push
std
inc
push
fwait
std
jbe
js
popf
pop
pop
push
ret
inc
push
inc
loope
jo
push
iret
outsb
ret
jno
push
aaa
cmp
cmp
mov
pop
xchg
adc
add
sbb
rcrb
das
stc
jno
pop
cwtl
das
inc
jne
es
cmp
dec
lods
pop
jb
inc
push
mov
add
scas
lcall
adc
sbb
dec
lret
xor
add
daa
pop
add
bound
add
mov
pop
sub
jnp
xor
pop
push
pop
repz
push
mov
fists
xorb
int3
pop
xchg
repnz
aad
xor
fnstsw
adc
mov
clc
adc
mov
shll
mov
cld
call
fs
pop
inc
mov
mov
sbb
fiadds
out
loop
insb
and
lock
push
cli
jg
lods
push
scas
mov
inc
sbb
call
std
xor
ret
jle
add
in
mov
mov
jne
mov
in
mov
ljmp
and
mov
push
inc
xor
sbb
call
aad
shlb
call
int
adc
mov
pushf
stos
ret
mov
cli
je
sub
les
lds
mov
xchg
xchg
xor
xchg
int
loop
pop
loop
add
add
mov
idiv
jne
iret
lods
push
and
cmp
add
lods
ja
mov
mov
mov
pop
inc
inc
dec
xchg
pop
js
adcl
cmpsb
dec
cld
les
jg
xchg
push
dec
lahf
and
add
or
fcom
adc
insl
or
gs
in
jle
inc
aad
loopne
ret
lds
fstl
sbb
xchg
cmp
call
xchg
nop
inc
lock
scas
cwtl
mov
jmp
push
jg
pop
cmp
aas
xchg
mov
stc
mov
xchg
int
int
pop
dec
or
mov
movsl
cmp
push
inc
loope
jle
mov
lret
nop
or
push
sbb
jl
sub
sti
inc
repnz
clc
orb
pop
sub
cs
imul
andps
mov
scas
xchg
mov
mov
adc
popa
jne
cmp
ret
or
and
fnsave
cmc
clc
pop
pop
mov
addr16
xchg
add
xchg
pushl
sub
adc
add
add
sti
mov
push
push
fisttpll
jecxz
pusha
imul
mov
js
lock
ficompl
int3
sbb
pop
xchg
push
icebp
sarl
das
mov
out
and
lcall
shlb
push
mov
test
xor
cmp
gs
dec
or
dec
push
repnz
cmp
test
lcall
jo
fwait
int
pop
xlat
and
cmp
movl
dec
rep
and
jo
cmp
or
idivl
sti
xorl
rcl
xchg
jno
sbb
les
add
dec
xor
adc
fdivl
clc
xor
inc
out
test
outsb
push
in
ret
pop
hlt
adc
fucom
cmp
sub
cmc
stos
out
jae
add
dec
mov
pusha
stc
les
popf
ja
inc
jns
sahf
or
push
pop
xchg
xchg
lods
notl
ja
add
add
sti
iret
ss
push
jno
jb
xchg
inc
addl
add
sub
std
xchg
outsl
mov
shll
inc
pop
jmp
jno
inc
xchg
in
lods
inc
std
ja
jbe
xorl
ss
lods
fldcw
in
scas
or
xor
jno
and
lods
dec
mov
mov
daa
repz
inc
mov
dec
xchg
xchg
inc
push
add
outsb
adc
dec
movsl
aas
dec
pop
dec
jnp
mov
aas
push
xor
mov
dec
jb
dec
jo
testl
push
iret
pop
push
xchg
push
cmp
stos
aad
in
mov
or
push
packsswb
negb
packuswb
lea
fcoml
sar
mov
mov
scas
sub
mov
das
cmp
cld
push
imul
mov
mov
subb
inc
add
fadd
push
lods
inc
xchg
cmp
mov
and
cmp
mov
mov
fstpt
aas
inc
sbb
inc
sbb
jle
adc
mov
add
add
outsl
xchg
inc
lahf
sti
hlt
out
dec
roll
outsb
fisttpll
test
add
dec
inc
cltd
rcl
sub
sbb
xchg
adc
mov
push
push
or
pushf
push
pop
push
xchg
into
mov
pop
sub
cld
pop
push
sub
pushf
cmpsl
inc
inc
inc
push
in
or
lret
pop
fs
cmp
pop
xchg
jle
rorl
push
push
das
xor
repnz
add
test
add
push
xorb
jno
pop
cmpsl
into
sub
popf
lret
or
mov
push
jecxz
outsl
push
mov
xor
outsb
cmp
jne
stc
push
pop
mov
sub
fstpl
pushf
inc
ss
pusha
xor
int3
ret
in
out
mov
lods
cmpsl
dec
sbb
dec
popf
in
lds
cltd
out
out
mov
jns
pop
clc
fstl
mov
movsb
inc
and
jge
lahf
or
enter
loopne
xchg
sub
decl
cld
xlat
int
bound
rorb
add
add
mov
mov
test
add
sahf
inc
mov
mov
fiaddl
xchg
jmp
icebp
jnp
mov
mov
xor
inc
jo
add
loopne
cmp
jmp
inc
xchg
cmp
test
fcoml
jmp
hlt
mov
xchg
rcrb
outsl
sub
or
outsb
cmc
lret
clc
cltd
pop
imul
push
fnsave
push
jbe
jno
push
into
xor
movb
jl
cmpsl
mov
daa
ja
or
sbb
sbb
xchg
cmpsl
and
mov
or
lret
in
mov
sub
push
js
ffree
xor
popa
xor
inc
jno
movsb
sub
jl
add
bound
shrl
pop
mov
mov
xlat
sub
mov
aas
sub
jmp
add
inc
dec
pop
mov
lock
sti
ret
lret
adc
sbb
sarl
add
xorb
xor
add
and
out
ljmp
lock
xchg
pop
pop
das
stos
push
xchg
add
or
sub
in
fs
mov
push
pop
imul
sbb
add
pop
xchg
mov
test
repz
or
jge
jge,pn
pusha
fnstcw
inc
inc
test
cmp
or
jl
cmpsl
jne
dec
sub
aad
jnp
mov
rorl
adc
ss
inc
mov
ja
notl
fimuls
loop
and
lahf
jae
mov
mov
push
sbb
bnd
test
cmc
or
xor
mov
xchg
ret
or
mov
push
cld
dec
imull
and
inc
pushf
sbb
scas
hlt
ja
into
into
dec
and
ljmp
add
movsb
mov
jge
push
mov
mov
scas
mov
jle
mov
mov
test
push
dec
xor
xorl
adcl
mov
dec
add
add
arpl
jnp
sbb
push
xor
xchg
add
and
out
lods
sti
jbe
jmp
idivw
adc
adc
adc
fiaddl
jns
fidivs
push
in
adc
pop
mov
sbb
fcompl
mov
pop
pop
sbb
sbb
xchg
jle
sar
xor
aam
movsb
dec
aas
movsb
jmp
ret
or
mov
ret
rorb
mov
loop
in
lock
sbb
pusha
pop
cmp
movsl
loope
jmp
xor
fisttpll
jb
mov
aaa
mov
dec
xchg
dec
push
xorb
inc
and
and
xor
into
loopne
push
repz
and
and
xor
jo
icebp
mov
icebp
mov
push
sti
pop
imul
or
cmpsl
inc
sbb
cmp
adc
aaa
sbb
mov
add
push
push
add
cmp
dec
adc
mov
cmpl
or
add
add
aas
or
mov
push
xor
add
mov
push
insb
fdivs
jbe
das
scas
pop
and
leave
ljmp
sbb
sbb
mov
xlat
cmp
repnz
mov
or
and
aad
mov
or
mov
lret
sti
es
lock
ficompl
subb
rclb
add
stos
mov
and
push
push
rcrb
mov
mull
addl
sub
in
ja
rorb
pop
pop
mov
pop
push
or
or
ss
lcall
cmp
and
scas
movsl
dec
scas
jo
xor
inc
jl
clc
mov
dec
sbb
out
enter
lcall
lea
stos
repnz
in
and
pop
pop
fisttpll
push
outsb
mov
sub
mov
add
add
push
outsb
fisubs
test
lahf
mov
add
add
mov
xchg
test
pop
loopne
cmp
mov
and
sbb
inc
inc
add
jmp
jbe
mov
lods
pusha
xchg
lcall
sbb
sub
or
and
int
popf
cmp
inc
xlat
and
decl
xchg
cmp
adc
sub
test
pop
sbb
dec
dec
pop
icebp
sub
sahf
rcll
dec
sahf
cmp
test
jnp
cs
cmpsb
hlt
ja
mov
push
dec
xor
adc
adc
insl
loop
imul
test
xchg
pop
out
mov
mov
into
pavgb
aas
insb
lcall
es
sbb
and
shrl
movsb
int3
jecxz
bound
loop
mov
dec
cmp
push
xor
test
out
jecxz
lcall
js
sbb
sbb
mov
lcall
or
daa
sub
cmp
mov
jns
adc
add
and
imul
jae
addr16
sub
mov
es
sub
xor
add
loope
mull
mov
in
lds
push
inc
movsl
scas
and
sub
add
mov
jae
std
ja
mov
sbb
push
xor
les
mov
mov
enter
cmp
popa
mov
xor
adc
popa
jl
mov
aas
stc
testb
out
outsb
mov
add
xchg
and
adc
sub
iret
imull
mov
test
mov
mov
sub
int3
pop
push
aas
jl
loope
jge
xchg
push
dec
stc
push
jo
loop
lods
push
movsl
sub
mov
or
sub
push
int3
cmp
sbb
inc
jl
add
fs
or
sub
inc
fistps
add
pop
je
test
mov
cmpsl
dec
adc
outsl
popa
xchg
add
int
fstp
iret
push
cmpsb
fadd
dec
mov
mov
add
and
mov
call
mov
stos
and
sub
xor
enter
aam
or
sub
sub
in
jbe
ror
mov
inc
js
cld
negl
push
or
push
inc
and
push
daa
imul
push
pushf
sub
jno
sbb
jns
mov
aaa
sbb
and
decl
mov
inc
cmpsl
lods
push
pop
jns
sub
popa
test
loop
mov
test
or
push
dec
insl
cmpsl
es
inc
sub
add
pop
cwtl
cmp
mov
mov
imul
dec
pushf
popa
dec
add
jl,pt
mov
jnp
sub
adc
shll
shl
or
je
mov
sub
inc
mov
xchg
and
push
jl
push
mov
xchg
mov
sub
adc
or
mov
add
add
adc
std
out
ljmp
outsl
mov
add
nop
pop
aaa
into
jno,pn
imul
test
mov
xor
mov
xor
cmpsl
leave
bnd
mov
mov
cltd
jbe
and
jnp
add
pop
add
add
push
cli
leave
xchg
mov
ficompl
xchg
push
jp
mov
repnz
stos
mov
jnp
iret
ds
jmp
loop
and
mov
sahf
adc
unpckhps
jmp
xchg
push
mov
fdivl
xchg
mov
pop
out
xchg
dec
mov
dec
loop
mov
fwait
popl
iret
addr16
pushf
sbb
or
popf
mov
loopne
movsb
fwait
cmp
loope
inc
add
inc
loope
adc
mulb
test
repz
les
pop
sub
rcrl
add
add
lods
les
jnp
mov
icebp
sub
mov
je
add
add
hlt
jne
cli
or
inc
mov
inc
arpl
dec
add
jecxz
mov
xchg
xor
mov
loopne
lods
cmp
adc
jecxz
dec
mov
inc
xchg
xor
fidivrl
cli
mull
adc
push
rcrb
shll
cld
scas
fcmovu
aas
in
jle
jecxz
in
ret
and
data16
or
mov
adc
gs
dec
push
sub
cmp
push
xchg
sbb
fstpt
enter
lret
add
jo
icebp
out
push
sahf
stos
shrb
dec
ds
out
mov
inc
or
scas
xor
or
popa
std
jae
or
xchg
jbe
lods
dec
add
mov
push
xchg
decb
popa
push
iret
fcompl
outsb
xchg
ret
repnz
add
out
xor
cmpsb
dec
test
or
pusha
mov
or
lret
gs
inc
or
test
fcomps
add
icebp
adc
jns
add
add
out
lds
push
loop
xchg
movsl
fldenv
jp
lea
jle
orl
mov
sub
loope
inc
xchg
and
xchg
jae
push
test
push
pop
jmp
shlb
push
mov
xchg
add
cld
lock
stos
stc
mov
adc
test
enter
lea
push
jae
jge
stos
or
mov
or
xchg
sub
push
sub
xchg
pop
jle
fnsave
imul
cld
and
test
add
sbb
xor
outsb
out
or
addr16
stos
enter
or
adc
stos
xchg
mull
mov
mov
pop
and
mov
xlat
pop
pop
cmp
mov
mov
pushf
testl
popf
arpl
inc
icebp
stc
and
cmc
stc
js
mov
cmc
inc
loope
jg
add
ljmp
dec
mov
sub
jle
add
add
testb
inc
ss
xor
sti
inc
shl
xchg
test
dec
jno
mov
sahf
mov
hlt
jge
and
arpl
test
arpl
adc
rolb
mov
pop
divl
push
stos
jns
outsl
xor
rcll
in
push
js
nop
pushf
insb
mov
xor
adc
push
int3
xlat
fwait
bound
sub
fiaddl
aaa
push
insl
fs
lds
lcall
push
stos
sahf
sub
xor
lret
xor
pop
and
imul
mov
inc
inc
mov
in
stos
pushf
mov
cwtl
push
aas
push
ljmp
into
leave
ss
sarl
cltd
sub
out
dec
out
aas
ret
lret
sbb
mov
or
jl
cmp
pop
push
outsl
call
lret
sbb
imul
out
xchg
fsubrs
sarl
das
rclb
sub
aaa
cmp
nop
inc
push
cmp
inc
dec
arpl
aaa
shlb
cmc
div
testl
sub
add
leave
xchg
pop
ja
xchg
pop
je
push
or
ret
xchg
push
xor
pop
sub
gs
xor
mov
lock
add
nop
aam
psubsb
inc
jmp
xchg
pop
loop
mov
and
or
pop
addr16
push
lods
xor
aas
cmp
pop
ss
mov
fiadds
sbb
popa
jl
ss
sti
add
outsb
bound
adc
cmp
push
out
addb
cmc
adc
sbb
add
mov
movsb
stc
movsb
xchg
push
into
sahf
inc
scas
pop
cmp
mov
gs
mov
loopne
sahf
xchg
test
sbbb
psrld
lret
push
std
mov
add
out
sbb
pop
aam
mov
shrl
sub
sub
ret
adc
loopne
add
inc
inc
insl
push
call
jno
stc
testl
add
pop
push
nop
push
sahf
rcr
pop
adcb
pop
dec
sbb
add
mov
into
and
mov
mov
sub
mov
mov
loopne
add
sub
loopne
dec
iret
xor
xchg
rolb
push
clc
mov
lcall
mov
in
pop
xorb
xchg
sbb
jecxz
xor
mov
in
cmp
stos
inc
sbb
adc
sub
xor
pop
lcall
test
rcrl
lods
lds
ja
jnp
xchg
xchg
and
mov
scas
call
insb
rcrb
stos
jge
xchg
cs
mov
xchg
jmp
pop
leave
fcoml
icebp
cli
ret
cwtl
mov
adc
aaa
or
rcl
popf
stos
push
clc
cltd
js
jnp
fs
in
xchg
inc
shrb
pusha
daa
push
in
fimull
test
pop
inc
push
sarb
test
mov
enter
daa
pop
dec
std
or
sahf
popl
add
shll
cmpsb
jcxz
fimull
lea
add
movsl
cltd
inc
mov
push
cltd
icebp
cmovnp
mov
mov
int3
cmpl
dec
mov
iret
mov
or
dec
adc
dec
ja
shll
aad
jbe
mov
loop
cmp
sub
in
rcll
cltd
xor
mov
add
popa
adc
shll
lods
cmpsl
fsubrs
push
rcl
mov
cmp
and
fs
shlb
xor
ret
jp
add
leave
out
mov
sub
scas
mov
movsl
push
cs
adcb
fcoms
push
lcall
verw
fs
cmp
dec
dec
xlat
adc
jecxz
xor
inc
stos
ret
jp
test
inc
stos
sub
clc
movsb
adc
adc
in
adc
popf
cmp
clc
into
mov
mov
sbb
sahf
sbb
cmp
xchg
add
add
clc
jnp
jg
in
cli
enter
test
fwait
pop
xchg
xchg
add
add
in
mov
and
lods
int3
fimull
sbb
icebp
repnz
xor
in
clc
cmp
dec
test
push
inc
mov
jo
jne
fldl
std
inc
in
cmc
xchg
imul
jmp
xchg
shlb
lret
inc
mov
jecxz
sbb
dec
icebp
sub
fsubs
iret
mov
jge
iret
add
push
js
loope
adc
jno
add
movsl
cld
push
stos
dec
int3
loope
push
lea
pop
add
scas
in
sarl
subb
xor
lods
je
pop
sub
sub
adc
fstpl
mov
incb
test
in
inc
inc
sub
ljmp
bound
sub
fs
push
cmp
xchg
adc
push
inc
sub
jge
mov
int
dec
xor
ret
xor
or
mov
int3
mov
add
ljmp
cld
gs
mov
xchg
xchg
add
add
adc
inc
jne
enter
ror
mov
fcoml
mov
loop
pop
inc
jge
pop
jns
out
iret
xor
scas
or
xchg
sbb
mov
jl
or
test
add
cwtl
in
pusha
lds
inc
push
dec
push
pop
popa
mov
fldt
popf
cmp
jno
lds
inc
push
les
jns
int3
add
push
jl
and
test
fwait
dec
and
sbb
xchg
inc
pusha
mov
pop
insb
roll
sub
xchg
scas
sub
mov
stos
jle
lret
dec
push
movl
test
mov
shll
xchg
mov
jne
jb
push
stc
mov
sub
addr16
mov
or
enter
inc
jl
mov
lret
mov
mov
or
jae
out
sub
loop
inc
inc
push
roll
add
jl
sar
std
jle
pop
popf
scas
mov
jl
pushf
xchg
add
add
outsl
inc
insl
pop
mov
pop
pop
xchg
lock
or
movsl
popf
xchg
mov
addr16
popa
mov
addl
xor
sti
xchg
push
rol
repz
out
fdivrs
xchg
fwait
push
mov
mov
xchg
sub
mov
xchg
movsl
mov
imul
fadd
jmp
mov
cmpsb
or
jecxz
call
jle
inc
xor
dec
xchg
jo
enter
pusha
into
fxsave
push
stc
cmc
sti
jecxz
rclb
jbe
testb
pop
mov
loopne
push
mov
cmp
lods
stos
data16
xlat
xchg
or
call
imul
mov
sbb
lret
push
in
push
xchg
mov
and
jmp
test
lcall
xchg
cltd
aad
cltd
mov
mov
pop
sbb
scas
or
jbe
movsb
add
add
cwtl
or
stos
xchg
cmp
in
xchg
pop
inc
leave
mov
add
add
dec
je
dec
dec
adc
pop
push
movsb
jmp
scas
pop
mov
xchg
pop
mov
adc
sbb
pushf
popf
push
mov
dec
iret
fmul
fildl
cli
xlat
or
out
adc
aad
into
jno
ja
outsl
xchg
adc
cmp
lock
cli
push
push
int
stc
adc
aas
xor
call
cli
pushf
adc
push
sub
mov
inc
xchg
fadds
call
sbb
leave
test
mov
ljmp
repz
pop
lods
mov
cli
adcb
fsubr
stos
into
sub
jl,pn
stos
jl
xchg
xchg
ret
xor
dec
icebp
scas
inc
mov
push
std
sbb
negl
dec
adc
lds
sub
in
lods
int
fs
inc
je
xchg
mov
inc
inc
or
add
imul
adc
pop
pop
int
clc
adc
lahf
imul
mov
pop
jmp
mov
add
add
outsl
sti
mov
mov
xchg
dec
cmpsb
xchg
add
add
movntps
lds
mov
xchg
jecxz
stos
test
mov
and
in
lret
out
daa
jmp
pop
jmp
lods
mov
popf
dec
lock
mov
push
fstp
xchg
sub
movsl
sub
fidivrs
fucomi
push
xor
lret
out
jle
push
lret
pop
call
mov
and
clc
add
repnz
xchg
xor
punpckhbw
adc
adc
enter
or
or
outsl
fsubs
dec
mov
sbb
insb
fwait
pop
sub
push
mov
jp
mov
pusha
jne
pop
call
push
leave
in
outsl
mov
mov
and
arpl
sbb
ja
dec
incl
loope
fstpt
pop
cmp
mov
addr16
add
inc
add
out
xchg
or
sbb
lock
loop
and
mov
push
xchg
aas
inc
push
mov
xor
jne
add
push
and
xlat
aas
dec
sbb
or
stos
cwtl
add
add
aad
xchg
mov
sub
ret
xor
mov
hlt
popa
mov
jno
fcmovnu
jl
lahf
dec
jae
inc
mov
xchg
and
fsubrl
sub
mov
imul
subb
sbb
loop
mov
std
cwtl
pop
shlb
mov
xor
pop
int
dec
adc
inc
push
lea
dec
call
repz
dec
outsl
fistpll
jno
subl
push
jecxz
test
and
std
ljmp
jno
jg
inc
push
xchg
adc
andb
cmp
push
dec
sub
inc
sub
ret
movsb
cmp
in
aas
pop
xor
lea
repz
pop
in
cmpsl
pop
ss
inc
fldt
jg
mov
stos
out
dec
rorl
push
mov
faddp
outsb
in
mov
mov
repz
adc
lock
add
imul
outsl
vmwrite
stc
mov
add
add
pop
ds
sbb
or
cmc
xor
inc
cmpsl
push
cmc
mov
fs
push
jo
popa
scas
push
xor
push
xor
mov
lds
nop
lahf
xchg
stos
data16
int3
icebp
mov
fstps
xchg
sub
gs
and
mov
pop
lods
sbb
in
inc
ficoms
pop
push
cs
xor
rclb
insl
outsb
lahf
or
sahf
fstl
cmp
inc
sti
loope
xchg
sbb
push
scas
dec
lods
mov
add
aas
aam
inc
push
sbb
clc
push
push
or
add
test
daa
repnz
mov
popa
clc
xor
leave
seta
std
cwtl
dec
bound
or
cmpsb
es
mov
xchg
cmp
imul
xor
jbe
and
sbb
add
lret
sbbl
popl
xchg
popf
mov
add
add
push
mov
cmp
sbb
cs
popa
icebp
cli
in
xlat
inc
daa
popa
fs
pop
imul
inc
add
xchg
out
push
aam
les
jecxz
pop
inc
and
sub
cli
movb
shr
pop
sbb
shrb
out
sahf
lea
ljmp
aaa
mov
mov
stc
and
int
adc
cltd
push
jg
mov
ss
mov
and
add
es
test
xchg
in
lds
mov
mov
aad
pop
pop
inc
dec
sub
test
xchg
mov
xlat
jns
je
jbe
imul
sbb
movsl
xor
xchg
mov
jmp
dec
gs
pop
inc
dec
int
xor
sub
int
sub
xchg
dec
adc
fcoml
fdivrp
sti
test
ret
jp
scas
add
out
lods
and
add
mov
imul
movsb
and
cmpsb
and
dec
mov
add
add
push
sbb
stos
mov
sahf
repz
add
fstl
int
or
pop
and
push
push
clc
cmpsl
adc
add
bound
movsb
mov
cld
test
sbb
jbe
sbb
repnz
adc
test
je
inc
sbb
jle
leave
test
inc
icebp
repnz
loop
ss
jl
dec
mov
xchg
mov
jae
push
in
insb
xor
ss
inc
jb
sub
bound
dec
lods
outsl
inc
std
stos
sub
jbe
into
lds
bound
imul
outsl
cmp
lods
lret
cmp
xchg
pop
in
cmpsl
mov
mov
int
std
pusha
or
cmp
pop
inc
enter
out
out
adcl
cli
xchg
and
xchg
popa
fnstenv
aaa
pop
sti
or
mov
jp
addb
iret
push
add
push
cmp
hlt
mov
add
mov
sub
lahf
mov
pushf
add
add
cmp
dec
mov
sbb
xchg
lahf
outsb
ret
int
iret
sbb
mov
cmp
out
push
call
push
loope
push
dec
sbb
fstpl
xchg
enter
mov
into
add
and
adc
aam
in
ret
mov
xchg
sbb
movmskps
or
loop
cmc
xchg
add
sub
jle
mov
test
ficomps
and
adc
or
shl
aaa
pop
lea
inc
aad
iret
adc
ja
shrb
push
xor
mov
xor
xor
testl
or
cmpsb
xchg
pop
ss
mov
xor
mov
dec
stos
fisttpl
mov
hlt
insl
and
ficoms
sbb
jp
mov
and
cli
pop
mov
sub
add
cltd
sub
out
inc
sub
or
mov
in
les
add
fcomp
ret
fucomi
xor
mov
icebp
cli
cmpsl
std
imul
adc
test
leave
mov
xchg
inc
sar
mov
jns
in
ljmp
test
sub
and
dec
aaa
test
and
sub
mov
mov
dec
xchg
pop
cmpsb
xchg
xchg
std
cltd
or
into
out
pusha
rcr
jno
jne
sbb
pop
icebp
jno
xor
loop
add
ja
mov
fadds
mov
aas
cltd
movb
mov
roll
push
adc
xor
test
sbb
pop
adc
leave
jmp
outsl
pop
adc
nop
ret
stos
xchg
sub
cmp
pop
and
xchg
incb
adc
cmp
lret
xorb
push
lds
dec
in
data16
mov
xchg
adc
aaa
xlat
xchg
add
or
mov
mov
pop
js
xchg
inc
sbb
in
cmp
add
loop
test
mov
cld
mov
leave
sahf
add
add
loopne
adc
into
cmp
rclb
pop
mov
push
cmp
xor
insb
stc
cmpsl
jmp
pushf
int3
not
data16
arpl
jp
aam
jmp
and
mov
xchg
test
pop
int
stos
arpl
mov
dec
in
fcomps
in
push
pop
sbb
incl
les
add
push
or
cwtl
xchg
insl
and
pop
pop
in
dec
ret
adc
xor
and
ljmp
stos
sub
xchg
sbb
xchg
repz
jecxz
mov
in
rol
push
or
imul
insb
arpl
arpl
loope
aas
jp
and
iret
pop
cmp
mov
or
sbb
mov
dec
xor
push
or
mov
mov
shrl
push
rcrl
mov
mov
sbb
cmp
iret
into
addr16
shrl
lret
sbb
nop
and
rcrb
dec
push
add
mov
repz
repz
inc
cmp
add
xchg
je
dec
mov
das
dec
mov
sub
push
movsb
pushf
repz
mov
push
mulb
and
jns
rorb
or
in
incb
mov
cmp
dec
enter
imulb
call
popa
fbstp
pop
cmp
lret
mov
jns
inc
in
xor
mov
cltd
fwait
repnz
lret
lods
lds
test
mov
jge
jb
shr
push
xor
cmp
sti
cld
cmp
iret
repnz
sub
dec
lods
inc
push
add
or
dec
jl
fistpl
add
rorl
xchg
add
mov
leave
int3
loopne
push
in
shr
scas
les
add
pop
ret
inc
push
cmp
outsb
mov
lds
mov
cmpsl
pop
and
mov
fstpl
xchg
mov
add
cmpsb
mov
stos
sub
and
add
movsb
mov
mov
inc
inc
add
mov
add
sahf
sub
jns
lods
mov
arpl
call
mov
pop
push
test
dec
mov
pop
pop
add
lods
aad
mov
imul
pop
in
aam
cmp
add
inc
clc
mov
lret
mov
out
pop
push
out
cmp
cmp
cmovp
out
je
mov
sarb
movsl
scas
xchg
pop
or
jb
mov
jne
test
loope
xor
jae
jbe
mov
jecxz
out
repz
test
ja
add
mov
int
fwait
sub
push
push
add
lcall
cmpsb
shrb
movsl
sub
test
aad
jle
adc
arpl
mov
sbb
rclb
inc
pop
add
and
pushf
shrb
add
add
mov
jmp
shlb
mov
sbbb
push
or
push
ja
add
or
sbb
inc
mov
ret
mov
add
adc
xchg
shl
test
pop
popa
xor
and
mov
pop
imul
dec
ficoms
sbb
lods
mov
test
mov
dec
das
jnp
in
inc
clc
push
out
push
rolb
cmp
dec
jno
arpl
and
and
jp
push
andl
ja
sti
add
sub
inc
not
mov
sahf
cmp
repz
dec
lahf
pop
sub
out
pop
mov
test
mov
aas
outsb
bnd
fisubrl
xor
hlt
inc
cmp
data16
mov
addb
scas
out
daa
repnz
xchg
mov
mov
out
fwait
loop
shll
in
int3
cmpsl
stc
fcomps
dec
sbb
out
ja
jb
repz
inc
pop
jae
sbb
rorl
inc
pop
shlb
fisttpll
xchg
pop
jecxz
cmp
dec
clc
sbb
lcall
add
inc
fdivl
push
dec
mov
frstor
add
movsl
mov
test
clc
mov
xchg
xchg
mov
ja
shlb
aas
jecxz
sub
out
mov
out
push
pop
mov
mov
pushf
scas
std
jnp
and
jmp
mov
xor
in
sub
in
popa
dec
fisttpl
jbe
or
inc
mov
dec
inc
xchg
aaa
popa
and
pop
aad
dec
in
ljmp
mov
scas
pop
std
out
push
xlat
data16
push
adc
ret
cwtl
or
stos
add
arpl
inc
mov
out
sti
xchg
jb
movsb
in
daa
dec
icebp
pop
add
pop
int
cmp
pop
icebp
sub
inc
stos
lods
testb
imul
out
in
mov
cmp
sarl
dec
mov
test
dec
ja
cmp
cmp
shr
and
ss
rcrb
loopne
inc
test
dec
inc
pop
lahf
pop
stc
mov
add
adc
mov
sbb
sbb
loop
add
add
ds
rorb
sbb
mov
pop
or
fsubrs
mov
test
sub
adc
popa
mov
scas
dec
dec
jecxz
push
pop
rorb
repnz
xchg
or
filds
test
ret
cld
bound
xchg
xor
call
push
addr16
stc
mov
loop
sub
sarb
subl
imul
mov
jg
dec
push
aas
cld
dec
mov
xchg
enter
cmp
pop
or
enter
xor
adc
lcall
repz
inc
push
sub
inc
fistpll
stc
mov
int3
iret
jns
or
xor
rcll
lods
dec
or
xor
leave
add
pop
leave
and
mov
incw
add
pop
test
stos
hlt
jmp
cmp
jbe
std
dec
or
add
jge
sbb
leave
and
lea
sarl
cmp
call
mov
push
cmp
push
mov
leave
inc
mov
add
daa
xchg
nop
mov
dec
xlat
inc
mov
insb
sbb
lahf
add
jp
xchg
xchg
sub
add
cmpsl
mov
jo
out
push
std
adc
and
dec
xchg
push
jp
fisubs
sti
jg
jb
jbe
aam
jmp
jl
lcall
mov
adc
cld
mov
popf
jnp
adc
jnp
pop
sahf
fidivrs
mov
mov
mov
xor
add
or
xlat
sbb
cmp
mov
fiadds
int3
ds
ret
inc
rcll
mov
adc
neg
push
push
fimuls
dec
inc
sub
ret
insb
push
and
add
inc
imulb
aaa
pop
mov
mov
mov
pusha
les
clc
rorb
daa
sti
lret
in
cmc
mov
add
push
nop
out
xlat
out
jg
in
xor
fnstcw
movsl
add
add
push
int
xchg
push
pop
dec
addr16
or
mov
pop
xchg
sbb
mov
jae
xor
fdivrs
dec
or
jno
jnp
xchg
sub
jle
iret
stos
xor
xor
xchg
aas
jnp
sub
sbb
cmpsb
push
inc
pop
add
shlb
pop
insb
test
fmuls
pop
stos
push
and
lea
adc
jae
push
or
mov
xchg
aaa
jg
jbe
aaa
xchg
pop
mov
fmull
aaa
ret
jge
lret
minps
mov
mov
adc
inc
push
sub
test
cltd
jno
dec
gs
stos
ja
ret
inc
sub
xchg
mov
das
test
mov
sbb
jmp
enter
add
adc
and
test
subb
test
js
lods
adc
stos
ds
out
stc
sub
aas
sbb
stos
mov
sbb
pop
fbstp
fldl2e
dec
cmpsb
icebp
cmpsb
add
add
mov
add
jae
adc
out
or
adc
xchg
sarl
lret
add
mov
loopne
aas
adc
std
adcl
testl
ret
pop
out
les
cmp
lret
cmpsl
ret
and
add
cmp
push
push
dec
adc
loope
in
es
jae
mov
imul
xchg
pushf
rcll
sarb
mov
push
int
cwtl
inc
push
jmp
popf
xchg
push
push
popf
into
arpl
push
and
jbe,pn
lcall
in
and
les
pop
cmp
test
fldt
xchg
cmpsl
jp
js
xor
lds
es
insl
movsl
add
jb
cmc
sub
or
cmpsl
sub
popa
and
jbe
lds
add
add
mov
fadds
mulb
add
xor
adc
push
fcmovnb
pop
mov
adc
jb
stos
pop
dec
fdivl
mov
push
sub
popa
mov
jge
lods
aaa
jl
mov
mov
mov
adc
mov
jecxz
adc
gs
rcll
fnstenv
sbb
in
sub
dec
pop
sub
pop
push
mov
mov
adc
popa
sbbb
scas
js
or
imul
jle
test
movsl
lret
movsb
dec
push
cmp
or
xor
sbb
dec
dec
xchg
inc
xor
jle
cli
std
mov
lea
add
mov
imul
jl
loopne
inc
out
sbb
xchg
inc
pop
loope
inc
subb
es
outsb
filds
in
pop
or
mov
dec
and
orl
mov
cmp
mov
mov
cmc
add
add
mov
push
sti
jmp
push
mov
testb
add
add
jle
or
data16
mov
mov
ret
mov
mov
and
mov
sub
sub
in
ja
or
outsl
rcrb
sahf
xor
xchg
adc
xor
aaa
scas
jecxz
and
outsb
cmp
cs
addr16
lcall
pop
loopne
insb
pop
sub
out
scas
daa
shrb
jl
adcb
sbb
mov
xor
sbb
je
or
inc
lods
dec
pop
mov
insb
dec
stos
and
dec
mov
call
in
in
add
movsb
lods
push
inc
mov
nop
mov
stos
xchg
stc
pop
fwait
loope
sti
sahf
jne
adc
jo
and
cmp
pop
xchg
cld
loop
ficoms
cmp
leave
adc
mov
inc
xor
inc
mov
lds
inc
sub
push
xchg
sbb
push
bound
insb
jmp
lods
add
lds
add
sbbb
add
mov
jecxz
lock
sub
add
cld
jb
xlat
outsb
and
clc
pop
imul
pop
xchg
lret
and
testl
pop
mov
pop
mov
sbb
mov
movsb
or
arpl
shrl
arpl
aaa
sbb
pop
aam
inc
xlat
mov
adc
icebp
cmc
fdivs
imul
sbb
adc
inc
inc
pop
pop
out
clc
sub
cltd
push
mov
push
aam
sub
jnp
lock
mov
xchg
dec
clc
mov
dec
and
fldl
xchg
repz
test
leave
pop
xchg
sti
mov
xchg
lods
push
in
sbb
lahf
cmpb
ficoml
sbb
insl
adc
or
xor
jno
add
rep
pop
push
xchg
pop
roll
mov
aas
sbb
mov
add
add
fsts
sti
pusha
adc
daa
mov
dec
aas
or
test
mov
adc
mov
ds
sbb
add
mov
cld
mov
leave
pop
addr16
das
add
add
add
jmp
aad
lods
xchg
insl
movsb
add
stc
lret
mov
insb
repz
or
xor
hlt
loope
call
imul
sbb
call
pushl
inc
add
mov
fndisi(8087
push
cmp
daa
jecxz
insb
mov
xor
mov
pop
xor
mov
dec
mov
orb
in
mov
mov
bound
jmp
lret
sti
repnz
fwait
mov
mov
add
movb
inc
in
lcall
stos
add
dec
push
leave
cmc
cltd
and
inc
mov
pop
mov
loopne
imul
je
dec
push
jl
jnp
sbb
push
shlb
outsl
cmp
xchg
arpl
and
push
gs
das
out
adc
fcmovnb
mov
push
sub
xor
mov
xchg
lahf
pop
adc
add
add
out
cmc
mov
sbb
lods
add
add
mov
popf
pop
out
mov
mov
ret
imul
arpl
imul
xchg
inc
mov
jmp
xchg
test
mov
imul
ss
sbb
jl
jecxz
jne
mov
lret
repnz
add
mov
and
outsl
dec
rcll
imul
mov
xchg
jge
test
lahf
pop
je
sub
pop
andl
stc
jnp
pop
stc
cmp
xchg
jmp
mov
pusha
cmp
je
jo
push
lcall
push
sub
hlt
mov
and
adc
mov
aas
out
inc
add
push
adc
mov
mov
lock
inc
xor
mov
cltd
or
or
notl
xchg
leave
mov
mov
add
fucomip
std
dec
std
pop
lcall
xchg
pop
push
shll
add
add
xchg
push
mov
mov
movsl
mov
lea
ret
iret
repz
das
xchg
movsb
icebp
fldl
cs
sbb
faddl
cld
ss
sti
fstl
hlt
pop
repnz
insl
test
filds
adc
jo
orl
bound
push
push
fwait
stos
or
aaa
dec
dec
push
sub
inc
mov
push
inc
xchg
aad
loopne
fdivrp
mov
dec
jae
movsl
cmp
xchg
dec
or
out
lods
daa
cld
dec
sahf
xchg
jmp
pop
ds
bound
out
mov
inc
out
jae
mov
adc
push
orb
push
test
loopne
out
das
loopne
xchg
adc
cmp
jmp
and
and
xor
test
add
clc
inc
sbb
inc
or
adcl
sbb
mov
nop
aam
mov
ss
icebp
inc
push
arpl
mov
icebp
enter
fidivs
loop
ljmp
dec
cli
fnstcw
add
and
xchg
mov
icebp
and
jle
cmc
les
dec
js
push
add
test
and
cltd
sti
pop
inc
aad
fdivs
mov
pop
out
stos
cmpsb
shlb
sub
lds
pop
ja
inc
dec
mov
out
pop
and
cmp
or
outsl
adc
mov
jge
sub
and
mov
sub
jp
pop
adc
and
pop
mov
fwait
mov
or
xor
mov
fists
loopne
or
mov
lods
jae
test
inc
out
adc
mov
inc
push
lcall
jmp
mov
push
lods
jno
mov
pop
sub
fucomip
ret
imul
mov
push
push
and
cmp
ljmp
mov
cmpl
jnp
outsl
lcall
loopne
daa
add
add
xchg
jg
jmp
std
mov
pusha
mov
sbb
add
outsb
pop
xor
and
stos
int3
mov
mov
mov
adc
nop
jmp
jb
xchg
push
mov
push
mov
xchg
push
mov
pop
stos
xchg
or
and
ds
jb
push
popf
add
inc
push
pop
lods
out
push
fistpl
mov
or
aaa
inc
xor
rcl
adc
push
xor
sahf
popf
scas
mov
inc
mov
jge
mov
add
dec
ret
out
mov
add
sbbb
pop
imul
mov
lahf
shll
fnsave
cmp
xchg
imul
inc
push
imul
outsb
loop
push
pop
stos
mov
inc
and
xchg
dec
bound
fcomi
scas
lea
jnp
data16
shll
int3
test
sbb
xchg
stos
mov
mov
orl
cmp
lret
in
int3
push
jp
add
push
divb
inc
mov
adc
mov
add
enter
dec
push
jl
andb
pop
cld
sbb
push
sbb
or
xchg
inc
inc
loop
hlt
adc
out
push
dec
aad
add
mov
bound
rcrb
inc
jo
mov
shl
int
out
leave
fmull
lret
xchg
inc
negb
cmpsb
push
mov
or
out
rorb
cld
loop
adcb
sbb
add
xchg
cmp
mov
and
inc
mov
cmp
addl
add
data16
sub
clc
cmpsb
mov
jmp
cmp
out
add
adc
push
pushf
fdivl
pushf
aaa
cmp
pop
xchg
mov
enter
fs
lea
xlat
mov
es
insl
lret
or
aas
pushf
xor
daa
add
dec
mov
jg
push
in
popf
mov
popf
faddl
add
push
pop
xor
cmp
inc
call
shlb
mov
add
outsb
jo
pop
xchg
add
xchg
xchg
or
je
fwait
dec
data16
dec
and
sahf
ret
fwait
pusha
dec
nop
lret
lcall
insb
or
xor
xor
inc
call
and
nop
ja
mov
jns
sub
mov
add
movsl
push
sub
pop
push
fnsetpm(287
pop
inc
and
ds
lock
imul
in
jns
push
pop
sbb
mov
mov
push
push
xchg
jno
mov
mov
loopne
mov
pop
push
xchg
sub
stos
popa
or
push
popa
sub
pop
xor
push
push
xchg
push
repz
xorl
inc
sub
aam
sbbl
in
lahf
mov
and
xor
cmp
push
add
push
adc
add
cmpsl
jno
shrb
loope
pop
ror
add
add
es
les
mov
arpl
orl
add
add
mov
dec
pop
fwait
jbe
pop
scas
pop
jecxz
jmp
cs
std
imul
aaa
jns
loopne
mov
std
jl
cmp
cmc
jecxz
and
xchg
adc
rolb
jp
push
sbb
inc
adc
cmpsb
push
fmuls
push
into
xor
lds
cmp
movsl
fnsave
out
imul
sub
jge
ds
aad
rol
jbe
ja
fists
into
call
xchg
fs
inc
dec
and
lcall
pop
or
in
int3
inc
and
pop
clc
out
xchg
xor
xchg
jb
test
insb
mov
adc
aad
sbb
scas
xchg
sub
dec
lods
fisubl
nop
mov
mov
sbbl
lret
loopne
and
mov
popa
loope
cmp
jmp
das
and
int3
cmp
add
jle
fcom
loopne
sub
mov
lret
or
sbb
js
push
mov
dec
or
pop
stc
out
push
pop
bound
sub
add
add
sub
xchg
in
cmpsb
xor
sbb
jo
mov
dec
cmp
sbb
push
test
insl
frstor
mov
test
test
ja
xchg
leave
ret
jl
js
and
bound
mov
jno
lds
add
aad
and
loope
xor
int3
cmpsl
cmp
push
cltd
or
loopne
test
push
out
jl
sub
nop
data16
fisubrs
adc
jnp
jmp
test
mov
adc
mov
stc
test
xor
popa
sub
lret
lods
or
or
movsb
sarb
sbb
fldenv
pop
sbb
mov
sahf
outsb
inc
loopne
push
and
pop
pop
adc
cmpsl
jbe
fdivl
mov
mov
adc
mov
dec
cmp
add
adc
push
pop
roll
mov
in
or
and
add
add
push
mov
lcall
push
xor
add
shrb
insl
je
add
mov
hlt
pop
sub
decb
inc
in
repz
out
scas
dec
xchg
mov
mov
xor
jb
push
clc
mov
test
jnp
pop
push
dec
sub
lcall
pop
push
adc
je
inc
mov
aaa
mov
hlt
and
and
mov
test
icebp
pop
nop
mov
push
and
push
cmc
and
dec
into
sub
mov
sbb
pop
insl
xor
insb
pop
push
cwtl
movsl
out
ret
pop
popa
movb
scas
stos
fnstenv
imul
scas
inc
stos
mov
push
push
aad
xor
jl
je
xor
adc
mov
mov
fistpl
xor
and
dec
in
fcomip
lret
pop
jae
imul
sti
jne
shrl
add
xorl
insb
lret
push
jnp
mov
add
pushf
shrb
mov
sbb
lret
jo
xlat
lods
dec
rep
mov
sar
cmp
arpl
xchg
sub
daa
xor
lods
jae
mov
and
dec
lods
mov
push
push
repz
jl
add
dec
es
pop
xor
cmc
fildl
sbb
pop
test
mov
das
sub
xchg
pop
fsubp
pop
jbe
mov
dec
rcrb
cmpsb
inc
pop
stos
jl
mov
jnp
js
bound
clc
push
mov
jecxz
std
call
scas
insb
jb
int
fsubr
int
ljmp
flds
bound
push
sub
lcall
loopne
add
push
test
inc
add
cmp
xor
out
into
mov
cltd
jge
outsb
push
xlat
mov
cmp
ljmp
adc
lods
stos
cmp
test
add
add
pop
sbbl
fstp
rorl
cmp
aad
mov
add
mov
js
xchg
fwait
push
lds
xchg
je
pop
cltd
add
adc
aas
fistpll
dec
int3
push
outsb
mov
add
faddl
popf
adc
jns
adcb
pop
adc
lret
adc
mov
outsl
pop
push
dec
fisttps
jmp
loope
mov
xchg
fistpll
in
in
repz
xor
repz
and
jne
js
jb
or
mov
es
or
cmp
jb
scas
stos
adc
xchg
inc
and
sub
shr
sbb
xcrypt-ofb
cmpsl
test
sti
mov
inc
mov
cs
shlb
mov
and
or
fisubrs
ljmp
movsl
test
fdivrs
dec
dec
jo
aad
cmp
jg
int3
xor
clc
cli
push
outsb
push
xor
pop
insb
jne
inc
mov
jae
and
stc
rorb
cmp
and
add
add
in
mov
jecxz
out
mov
sbb
dec
inc
mov
add
repnz
lcall
sahf
mov
xchg
fimuls
leave
xchg
ds
sub
mov
in
imul
mov
std
xchg
sbb
inc
pop
ja
jmp
test
in
sub
repz
mov
jmp
pop
ficompl
mov
jle
pop
jo
mov
jns
adc
and
out
add
shrl
mov
jne
jp
jne
mov
popa
mov
pop
cld
and
mov
pop
out
ss
lods
add
and
mov
mov
dec
shlb
cmp
push
bound
xor
pushl
cwtl
fs
sbb
inc
decl
mov
xchg
and
icebp
lock
dec
xor
mov
cmpsb
les
rcrb
lahf
rol
lods
shll
cmp
lret
xlat
loope
or
xor
sub
push
in
fimull
or
sub
add
push
xchg
test
jg
into
lret
orl
add
add
mov
sahf
adc
loope
ds
cli
mov
int3
popa
insb
mov
call
mov
sub
sbb
and
xor
inc
cltd
andl
leave
test
out
jge
sahf
pop
scas
mov
fs
xchg
leave
push
enter
nop
mov
jno
out
xor
adcb
imul
movsb
jns
aas
punpcklwd
adc
mov
mov
push
test
mov
jmp
test
lods
push
jns
mov
je
fsubrs
add
cmp
jl
and
sarb
cli
fdivrp
pusha
lcall
scas
xor
outsl
mov
pop
jno
daa
ja
nop
mov
ror
mov
xchg
aas
mov
xchg
aaa
inc
subl
lret
lea
lods
sti
inc
out
and
test
add
add
adc
in
lcall
jae
dec
mov
adc
test
add
push
xor
pop
mov
leave
outsb
jb
out
push
pop
xchg
popf
jne
std
loop
jg
jne
inc
and
xchg
inc
bound
or
or
jo
dec
out
out
xchg
inc
in
cmp
shl
arpl
xor
lods
cltd
xor
js
mov
add
pushf
mov
in
leave
add
fisttps
inc
in
pop
push
jns
fcmove
test
inc
cwtl
push
mov
xor
push
fldcw
shrb
and
pop
mov
mov
subb
cmp
jb
mov
mov
rclb
call
jle
pop
cld
dec
and
aam
mov
sbb
cmp
mov
jae
jnp
mov
arpl
mov
daa
int3
sub
or
mov
jbe
inc
dec
sub
int3
in
sbb
xorl
push
sub
dec
mov
jecxz
push
aam
mov
add
add
sub
jg,pt
dec
arpl
xchg
push
mov
add
sub
or
push
dec
and
jbe
pop
mov
push
adc
sub
adc
sbb
mul
iret
add
out
jmp
je
dec
xchg
push
rcll
jnp
xchg
or
subl
sbbb
mov
mov
aad
add
xor
jb
hlt
daa
mov
icebp
sub
and
xor
insl
fsts
mov
lea
cli
adcb
test
mov
shlb
push
xchg
insb
enter
adc
pop
scas
ret
add
cltd
jmp
repz
jnp
mov
scas
pop
and
test
inc
repnz
lcall
inc
adc
out
sahf
popf
orl
jp
mov
aas
adc
pop
scas
sbb
pop
jb
sbb
orl
dec
jl
mov
pushf
fnstenv
adcb
add
add
out
idiv
outsl
mov
test
push
sbb
add
add
mov
lahf
xchg
das
scas
mov
aaa
nopl
fsubr
int3
in
jnp
cs
mov
lock
shr
cmp
popf
push
rorb
jge
scas
movsl
add
cli
ljmp
das
pop
mov
push
bound
and
and
push
in
addr16
jae
and
adc
inc
fisttpll
pop
inc
adc
fcos
insb
cwtl
sub
and
imul
lds
mov
adc
push
aad
lret
inc
jmp
jno
jp
sbb
jnp
fsubrp
adc
cs
call
mov
lret
into
outsb
pusha
ret
sbb
imul
rcrb
ret
cmpb
pusha
xchg
adc
fcoml
mov
mov
das
ret
adc
push
mov
sbb
mov
pop
push
mov
cmp
push
stos
mov
xor
push
push
imul
test
pop
js
cmp
xor
mov
pop
dec
fidivl
pop
pop
mov
add
ficomps
push
push
inc
xor
pop
xchg
out
hlt
test
loop
sub
cld
js
or
sbb
xchg
sbb
mov
mov
imul
cmp
mov
mov
jl
push
cmp
sub
cmp
out
mov
dec
lahf
mov
add
test
mov
cmpsb
cli
ja
fs
push
rorl
xchg
jmp
jo
test
cs
out
mov
sub
push
cs
and
std
aaa
aad
or
jno
int3
scas
loop
scas
cwtl
lods
cmp
out
js
sub
or
jae
jl
ljmp
pusha
das
dec
scas
ja
sbb
add
pusha
insb
push
sub
aam
shl
pop
mov
test
test
adc
jle
adc
stos
jecxz
or
cs
repnz
cmp
fs
inc
cmp
cmpsb
sarb
cltd
dec
add
add
fistpll
call
inc
ja
imul
add
popa
rclb
add
mov
jmp
mov
lret
xlat
adc
inc
outsl
and
in
dec
xor
insb
mov
jle
shr
loop
inc
imul
out
in
not
pop
fbstp
pop
pop
mov
or
insl
jae
test
into
jnp
xchg
sarb
addr16
push
pop
enter
sahf
andb
mov
popa
cmp
push
jbe
pop
inc
jl
test
lcall
and
inc
sub
mov
adc
repz
cmp
aad
push
pop
adc
xchg
add
sub
push
cwtl
nop
sti
andl
dec
mov
leave
mov
mov
in
ret
xchg
jo
xchg
or
mov
dec
sub
add
iret
cmp
jl
int
cld
push
sub
scas
inc
or
sub
cld
cwtl
jge
cmp
imul
add
into
std
sti
leave
sti
iret
jmp
xor
add
add
lret
enter
icebp
sub
fisubl
push
test
adc
int
cli
jns
cld
jp
sahf
out
mov
pop
negl
cmp
test
dec
repnz
dec
sub
mov
pop
push
pop
cmp
mov
test
lods
adc
enter
and
ret
pop
pop
test
add
insl
pop
cmp
mov
add
sahf
lock
aam
cmp
jo
out
adc
aaa
or
lret
xchg
xchg
jle
jo
jb
icebp
cld
pusha
lret
mov
xchg
inc
mov
lods
ds
xor
push
add
sub
dec
fwait
lahf
repnz
xor
test
out
adc
add
jle
dec
jns
aas
xor
loop
cmp
or
cmp
mov
push
jno
jne
or
popa
aas
mov
aad
bound
add
or
test
add
mov
mov
xor
test
imul
cmp
imul
lock
mov
cld
subb
jg
insl
imul
jmp
bound
pop
xchg
dec
mov
sbb
or
ljmp
sti
xchg
cmp
jns
xorl
fwait
xor
lods
test
xor
test
adc
inc
out
inc
and
lcall
addl
push
mov
xlat
mov
lock
cltd
and
adc
test
decb
jnp
jo
outsl
nop
dec
aam
dec
push
pop
pusha
jno
clc
inc
or
std
adc
sbb
pop
mov
push
filds
mov
shrb
cmp
mov
cmp
mov
inc
sbb
pop
inc
or
cmpsl
dec
icebp
jbe
sub
es
sub
out
mov
out
cs
pop
sbb
shll
add
add
jg
mov
sahf
loop
cli
dec
and
add
push
clc
shlb
or
xor
mull
add
push
fsubr
pop
pop
sub
and
jge
jb
stos
stos
fs
xchg
imul
jae
stos
dec
push
decl
xor
cltd
push
rolb
test
dec
mov
sbb
ds
aam
hlt
xor
jno
mov
adcl
ficoml
sbbl
rorb
sub
scas
lret
ret
pop
mov
ss
xchg
pop
mov
aam
lahf
pop
cmp
adcl
mov
cmpsl
sbb
pop
adc
push
jne
jecxz
out
in
push
leave
daa
lods
and
jns
ja
push
jl
sbb
lret
xor
cli
push
inc
leave
push
mov
cmpsb
sub
ret
add
notl
cltd
sahf
cmp
lahf
cmpsl
xchg
push
into
cmp
push
aas
add
push
mov
pop
int3
jecxz
fstps
sbb
add
xor
push
cld
pushl
cld
sbb
jae
add
add
stos
insl
mov
je
cmpsl
scas
add
mov
repnz
add
dec
subb
ja
mov
lret
xchg
loope
mov
xchg
mov
or
dec
adc
clc
fcmovbe
orb
bound
xlat
shll
lea
pop
ljmp
and
inc
addr16
fisttpl
std
aas
std
hlt
mov
pop
lret
mov
jno
fcmovbe
and
jo
jae
stos
push
jne
pusha
lock
jecxz
xchg
jecxz
dec
mov
lods
pop
mov
lods
xorl
push
inc
mov
jbe
cmp
push
xchg
scas
sbb
cmpsb
push
mov
mov
hlt
sti
test
cmp
fistl
mov
inc
and
jle
cmp
insl
out
sahf
or
ret
cmpsb
in
inc
sub
imul
add
pop
mov
jg
fadd
pop
add
sbb
cmc
sub
mov
inc
mov
xor
add
xlat
pushf
shrb
lcall
mov
ret
add
push
dec
jns
pop
repz
xchg
pop
xor
lods
mov
xor
inc
add
test
lods
ss
ljmp
cmp
add
sahf
aaa
int3
add
fdivp
xor
jmp
inc
shrb
addr16
jmp
adc
xchg
xchg
jle
mov
or
insl
push
sbb
loope
jl
pop
mov
movsb
flds
addr16
dec
fdivl
mov
inc
xor
in
stos
das
mov
push
outsl
jl
fnsave
loop
adc
and
fs
psrlw
orb
jo
or
add
pop
cltd
scas
cmpsb
out
sbb
sub
arpl
js
pop
push
jnp
fsubrl
mov
dec
mov
jns
or
decl
subl
mov
outsb
popa
sub
sbb
pop
ja
ja
testl
pop
xlat
mov
cmp
xchg
cmc
sbb
or
pop
lcall
jns
add
sub
scas
mov
aas
scas
fldenv
testl
add
push
das
jb
out
sub
stc
stos
lret
jo
in
sbb
fstpt
sbb
stos
movsl
int
cli
push
arpl
jecxz
adc
mov
mov
lods
cvtdq2ps
inc
lahf
mov
stc
or
and
repnz
cmp
mov
ret
jns
lock
lds
test
ja
push
pop
adc
push
dec
xchg
cmp
loope
daa
aaa
xor
jle
mov
dec
mov
imul
clc
sarl
fiadds
std
adc
cld
sub
insb
cs
dec
fcomps
mov
dec
dec
inc
push
mov
pusha
jb
in
lds
test
rcr
mov
pop
rcrb
jns
push
test
jno
push
scas
data16
fstl
mov
jmp
sbb
or
ja
xchg
aad
push
lock
pop
incb
or
cmc
xchg
pushf
lahf
inc
enter
mov
fstpl
hlt
add
xor
add
jg
jne
jne
jg
loop
mov
add
les
add
out
and
aam
xorb
lea
aaa
fcom
shrl
sti
mov
aad
cld
scas
arpl
inc
jbe
fs
adc
dec
xchg
cmpsl
nop
mov
add
lock
or
cli
ljmp
out
push
pop
mov
push
outsl
sbb
loopne
not
rcrb
daa
pop
cmp
xchg
sub
or
inc
fucomip
xor
xchg
test
sub
shrl
pushf
inc
out
pop
xchg
hlt
sbb
mov
jb
inc
and
sbb
sub
jno
mov
stc
adc
cmp
mov
lret
jne
out
outsl
jne
sbb
sarl
imul
push
shll
lret
sbb
addb
and
mov
mov
cmp
outsl
cmc
lret
js
dec
out
ficoml
cmp
push
shll
decl
ja
inc
and
mov
andl
jge
and
mov
add
sbb
mov
cmc
mov
xchg
xchg
add
add
lret
jnp
push
faddl
cmp
push
popa
or
lret
loopne
inc
mov
in
scas
xor
dec
mov
aad
xchg
xor
insb
idiv
test
filds
jnp
add
mov
testl
shrb
mov
fistl
hlt
dec
hlt
mov
sti
mov
cmp
mov
dec
jo
cmp
ret
push
in
aaa
and
xchg
mov
cmc
or
dec
jb,pt
clc
in
daa
and
mov
dec
and
pop
and
cmp
daa
mov
insb
andb
push
xor
sahf
div
shl
dec
and
push
adc
test
add
sub
ret
fcompl
jl
out
gs
sbb
mov
nop
outsl
adc
or
popa
xchg
cwtl
not
in
jns
fs
or
mov
into
in
cmp
aam
add
and
outsb
jle
lods
testl
movb
add
ret
dec
iret
lcall
xor
push
test
add
sbb
sub
xchg
nop
mov
mov
jg
mov
out
push
push
aas
cwtl
testb
xchg
cmp
xor
ljmp
mov
stc
cmpsb
daa
ja
bound
push
in
lods
aaa
mov
popf
dec
mov
rcl
data16
out
jg
es
imul
xor
mov
push
loope
sbb
pop
into
test
arpl
jp
pushl
mov
ds
jg
fidivl
mov
xlat
mov
add
mov
mov
push
pop
pusha
repz
push
mov
fsubs
es
std
sbb
push
pop
test
out
aaa
mov
aam
aas
shlb
mov
mov
ja
pop
sub
sarl
mov
enter
push
or
jb
cmpsl
imul
inc
ja
insb
faddl
rcr
pop
pop
add
add
mov
xchg
insb
push
divb
aas
xchg
movl
add
repnz
fldcw
mov
decl
jp
call
test
mov
mov
push
fldl
test
enter
hlt
mov
add
cmp
stc
inc
es
cmp
xor
test
lret
inc
inc
stc
stc
xchg
rcrl
stos
imul
mov
cmp
insl
mov
sub
shll
jle
orb
ljmp
int
jecxz
loope
sub
paddsw
rorl
subb
jg
or
popa
les
jo
clc
pusha
push
shll
mov
cwtl
adc
push
add
pop
das
xchg
ret
lret
add
push
cli
pop
cmpsb
rol
lds
add
idiv
push
cmpsl
shll
int3
addr16
xor
lods
cwtl
ror
repz
out
clc
out
es
popl
push
cltd
cmc
mov
mov
mov
loope
cld
movb
add
out
sti
xlat
in
aad
loop
mov
xchg
enter
add
add
out
test
insb
in
insl
outsb
push
pop
pop
push
add
add
ret
out
inc
shll
mov
pop
hlt
xlat
iret
test
xchg
fsub
mov
mov
push
mov
mov
jecxz
cs
push
icebp
or
icebp
ds
ret
mov
push
imul
and
add
sbb
lcall
sti
iret
out
out
mulb
call
xchg
add
and
std
je
xchg
push
orl
ja
psubsb
div
jns
test
mov
xchg
push
dec
push
mov
stos
cmpsb
jne
adc
arpl
xchg
mov
adc
and
inc
dec
in
shl
xor
fiadds
inc
jecxz
aaa
sahf
mov
xor
push
movsb
jo
xor
push
sub
cmp
addl
aaa
hlt
std
in
sbb
mov
adc
fwait
push
xchg
add
ds
sub
cmp
jg
and
mov
les
cmp
fwait
leave
add
add
jno
adc
loope
lcall
xor
aam
lock
or
pop
mov
fld
insb
jle
lea
ret
jo
outsb
sbb
mov
loopne
call
test
dec
cmp
cmc
gs
or
mul
inc
shrl
insl
and
cmpsb
in
out
cmp
mov
test
jnp
pop
sub
ret
aaa
shll
movsl
bound
cli
jno
sub
pop
jno
mov
sbb
cs
repz
cltd
mov
imul
mov
xor
mul
aad
xor
out
out
inc
or
enter
mov
mov
jno
mov
push
jmp
mov
adc
ret
stc
xchg
inc
sbb
xor
sbb
xchg
mov
cld
aam
cld
into
les
lea
jle
mov
xchg
mov
lret
add
xor
fistpll
out
repz
fcoms
cmp
push
lret
add
stc
sbb
daa
scas
clc
aam
mov
cld
jl
inc
lea
or
mov
sbb
aaa
push
xchg
int
push
decl
pop
rcr
lahf
in
or
ljmp
sub
sub
ss
cmp
sbb
xchg
pop
xor
and
xchg
push
dec
mov
flds
ss
rol
mov
inc
dec
mulb
mov
mov
push
dec
sbb
test
jno
mov
imul
je
add
mov
xchg
iret
out
repz
pusha
jge
cmp
mov
mov
push
sbb
mov
xor
aad
xchg
cmp
aad
pop
or
xchg
mov
test
lock
xchg
pop
dec
mov
cwtl
sub
mov
and
cmc
rorb
data16
addr16
adc
or
adc
and
test
add
mov
mov
mov
aaa
stc
mov
movsl
lret
add
add
jg
insb
push
cltd
mov
cmp
fnsave
cwtl
add
xor
push
inc
mov
adc
sub
xchg
jmp
outsl
mov
pushf
outsb
out
sti
mov
mov
xor
ficomps
cmovg
dec
dec
imul
imulb
test
in
cmp
in
xchg
jbe
lds
mov
fisubl
pop
inc
shll
dec
pop
add
pop
dec
stos
pop
sub
icebp
test
pop
imul
data16
and
ret
into
push
pusha
ja
inc
loope
or
xlat
xor
push
lret
lahf
mov
arpl
push
nop
inc
sub
cmpsb
rolb
xor
push
pop
jo
add
pop
add
cmp
or
add
ljmp
xchg
aam
xchg
call
mov
push
mov
push
adc
or
scas
inc
adc
jge
outsb
ret
sub
jl
rol
movsl
int3
mov
jb
sbb
jmp
loop
ss
jle
add
stc
enter
in
sbb
push
inc
and
dec
stos
int3
add
add
lods
cmp
imul
mov
lea
cmp
andb
xchg
add
mov
dec
testb
pop
and
lods
pop
dec
inc
ficoms
out
inc
cmp
testb
lea
and
cli
neg
fidivs
mov
push
cwtl
inc
pop
ret
adc
test
xorb
adc
push
fimull
dec
pushf
cltd
orl
fdivrs
lcall
insb
icebp
xchg
inc
xchg
add
rclb
sbb
mov
sti
aaa
ja
test
mov
popf
mul
int
aad
xlat
test
loopne
xor
adcl
pop
push
insl
loopne
rorb
sbb
pop
in
fidivrl
and
adc
mov
mov
popf
sbb
je
mov
add
jns
jge
in
sarb
hlt
aad
push
in
mov
adc
out
aas
and
orl
jne
imul
cmc
call
inc
push
popa
jp
gs
add
add
sbb
push
jp
or
or
imul
xchg
jns
push
sub
jl
cmpsb
xchg
or
arpl
adc
sbb
sarl
push
jb
das
cwtl
std
xchg
pop
ss
sbb
stos
popa
mov
popa
sbb
push
cwtl
je
out
mov
push
pop
imul
fistps
jmp
push
mov
cli
scas
std
js
or
and
mov
mov
fwait
jp
adc
push
pop
sahf
ljmp
or
pop
pop
lds
aam
shll
mov
mov
and
jbe
loop
xor
rdpmc
adc
movsl
pop
cmpsl
call
scas
jp
mov
cmp
insb
inc
adc
sub
add
sbb
ror
andl
jnp
daa
std
daa
cmp
or
iret
pop
adc
imul
adc
cmp
add
movsl
mov
iret
sub
in
imul
ljmp
push
or
adc
ds
mov
add
movsb
dec
and
add
sub
test
mov
lods
out
and
rcrb
and
stos
outsb
cwtl
loopne
cld
inc
adc
std
les
cmp
rolb
insl
adc
stc
pop
out
dec
in
cmp
xchg
push
sahf
xchg
inc
xchg
mov
dec
lret
clc
subl
inc
xchg
call
nop
lock
adc
adc
loopne
std
xchg
pop
iret
inc
xor
frstpm(287
in
sbbl
in
xchg
stos
xlat
inc
jmp
cmc
sti
jb
cmp
cmp
xchg
lds
cmp
mov
push
ret
xchg
lahf
push
adc
inc
xorl
xor
sbb
inc
lds
xchg
pop
adc
pop
in
pop
pop
sub
mov
mov
rcrl
iret
idivb
and
sub
loopne
or
fsubrl
add
out
into
gs
cld
test
bound
mov
add
add
mov
and
sbb
xchg
add
sub
push
shlb
ss
pop
jb
push
shl
fldt
push
rcrl
jmp
rol
stc
flds
mov
in
pushl
pop
dec
pusha
fidivrl
out
je
dec
mov
repz
add
mov
fmuls
js
mov
outsb
or
mov
mov
pop
lcall
add
int
rolb
stos
jnp
push
sub
iret
repz
xlat
pusha
add
pop
lret
loopne
lcall
cld
jae
popa
or
cmp
xor
sub
into
add
outsb
aad
pushf
test
mov
outsl
dec
pop
stos
adcb
inc
add
dec
sbb
inc
rolb
mov
pop
lods
cmp
inc
add
clc
xchg
pop
mov
cmpsl
xchg
lods
sbb
mov
sbb
adc
jmp
rcrb
imul
add
loopne
and
je
out
mov
jp
and
mov
add
add
push
sar
jl
jnp
int
rolb
dec
dec
stos
aaa
mov
jnp
cmp
inc
movsb
or
outsl
push
cmp
pop
in
fcoml
cs
xor
adc
mov
ja
and
sub
adc
fsubrs
test
popf
xor
cld
pushf
mov
rorl
jns
sbb
cmp
popa
or
je
loop
mov
xlat
repnz
mov
sub
pop
mov
lret
mov
xor
adc
cwtl
test
cs
and
cmpsb
int3
sbb
push
or
dec
leave
lret
mov
adc
cmp
aad
jno
sub
bound
dec
lds
cmp
add
dec
adc
add
sbbl
mov
nop
sbb
and
and
and
lods
test
add
dec
inc
dec
daa
dec
das
outsb
imul
push
xchg
repz
add
jmp
lea
jae
jmp
xchg
mov
pop
sarl
enter
adc
insb
imul
rorb
fs
xchg
add
xorl
ljmp
adc
add
gs
jge
in
enter
int3
cmc
les
inc
insb
xchg
icebp
push
mov
loop
mov
pop
jl
jmp
std
es
or
sahf
lds
cs
addl
xchg
out
mov
mov
cmpl
pushf
stos
ret
or
cmp
mov
inc
mov
pop
scas
and
push
push
fsts
adc
mov
pop
xor
in
pop
mov
js
push
sahf
pmaxsw
loopne
mov
cmp
adc
push
loope
outsb
add
add
mov
add
inc
xchg
bound
pop
add
add
popf
mov
lahf
ret
or
rolb
add
lods
adc
xchg
pusha
inc
push
lret
pusha
push
or
sbb
cmc
rcl
in
fwait
xchg
mov
and
add
cmpb
inc
lods
in
mov
sub
and
pop
sub
addr16
test
nop
cli
pop
gs
imul
cmp
out
xor
arpl
fsubs
loopne
das
sbb
jbe
fcomps
dec
mov
aad
inc
sbb
cmpl
inc
push
sbb
xchg
pop
imul
rorb
push
jge
mov
add
and
push
cmp
aaa
and
aas
push
mov
jmp
sub
sub
dec
and
mov
loope
xchg
setb
push
popf
in
stc
adc
nop
xchg
cld
mov
pop
stos
sbb
mul
pushf
mov
imul
or
jle
out
xchg
das
mov
flds
nop
xchg
lahf
inc
int3
cld
jb
push
add
ret
mov
add
neg
outsl
push
xchg
or
roll
add
lret
sbb
leave
or
adc
adc
faddl
and
push
scas
cld
xchg
fs
mov
ss
push
clc
aas
pop
sahf
push
jns
or
rcrb
push
arpl
and
shll
test
enter
add
je
shrd
mov
jbe
sub
ret
lds
inc
mov
sbb
push
outsl
ja
jnp
xor
jl
out
into
movsl
xchg
ret
and
out
lret
les
jb
sub
iret
loope
negl
test
out
in
xchg
rorb
hlt
cltd
lea
pop
les
pop
jnp
sbb
lods
cs
adc
cmp
dec
loope
das
std
and
jo
sub
in
mov
aas
pushf
sub
out
cmp
sti
push
in
es
inc
movsl
lret
aas
jo
inc
sbb
imul
xchg
movsl
mov
inc
jbe
xlat
cmp
add
add
add
sbb
sub
dec
or
mov
aam
add
aam
ds
and
imul
icebp
xorl
out
lock
mov
lds
movsl
xchg
hlt
mov
mov
adc
sub
mov
or
adc
or
test
adc
xchg
push
scas
sub
mov
mov
repnz
push
mov
or
js
mov
fidivrs
xlat
or
cmp
sub
test
dec
xor
out
stos
dec
pusha
out
aad
push
shlb
addr16
push
lahf
xor
int
movsl
int
lock
in
icebp
adc
das
mov
scas
enter
xchg
jo
out
dec
shl
sbb
push
sub
mov
outsb
test
sbb
mov
push
in
or
aaa
xchg
cli
cmp
xor
test
mov
or
out
inc
push
dec
imul
jbe
xchg
or
adc
mov
iret
movsl
dec
mov
and
mov
pushf
adc
ds
jae
adc
aad
add
aad
or
dec
cmpsb
mov
mov
dec
test
loop
jnp
or
pop
pop
cmp
je
jns
cli
fldenv
xchg
jmp
xchg
flds
in
insl
pop
adc
in
lahf
nop
xchg
cmpsb
shl
pop
sub
pop
rol
sbb
pop
fstpt
inc
cmpsb
push
out
scas
gs
mov
out
fisubs
loopne
in
add
mov
xor
js
push
mov
repnz
dec
das
in
cld
stc
pop
and
or
pop
mov
cli
pop
dec
cmc
cmp
leave
inc
fptan
dec
iret
je
ficoms
insb
xchg
xor
xchg
mov
or
cld
mov
pop
data16
dec
scas
mov
sub
cmpl
mov
and
aaa
dec
je
movsl
pop
push
xchg
sub
adc
insb
mov
jnp
add
dec
xor
call
dec
mov
push
add
cmp
add
xchg
and
idiv
lahf
insl
mov
repz
add
sbb
and
adc
or
and
sbbb
lret
test
imul
inc
jnp
out
pop
mov
cmp
in
pop
sarb
push
mov
adc
pushl
mov
movsb
movsb
mov
mov
mov
popf
jns
or
jno
cmp
or
lds
rcrb
iret
sarb
imul
stc
daa
std
sbb
aaa
loope
out
pop
test
inc
in
xchg
xor
mov
push
xchg
xor
repnz
aas
adc
je
push
and
sbb
sub
add
into
adc
into
pushf
xchg
adc
pop
xchg
cmpsb
push
andb
add
fistpl
jg
cltd
out
mov
fistl
dec
sbb
ljmp
in
or
add
xchg
ja
push
jg
leave
or
pop
cwtl
hlt
dec
loope
add
add
scas
clc
dec
in
addr16
stos
jp
outsl
test
leave
jg
jmp
xorl
subl
jecxz
push
pop
pop
inc
push
cmp
inc
pushl
cmp
xchg
loop
mov
adc
xchg
frstor
pop
das
pushf
jbe
mov
and
enter
dec
dec
add
push
call
mov
cmp
pop
cmpsb
or
cmp
mov
xchg
cltd
in
nop
cltd
cmpsb
in
push
adc
xchg
mov
and
add
cmp
mov
lea
mov
push
inc
inc
sahf
inc
shrl
cld
mov
mov
stc
out
xlat
cmp
movsl
push
loop
sub
cmp
dec
cld
je
mov
lock
xor
pop
js
add
mov
insl
push
rclb
ljmp
adc
xlat
cwtl
scas
movsb
int
xchg
mull
mov
pop
inc
test
test
add
add
int
out
out
imul
nop
xchg
movsb
addr16
in
out
add
add
sub
or
sbb
sub
ficomps
push
stos
mov
cmc
scas
fwait
pop
enter
add
adc
cmpsb
and
ds
les
xchg
jmp
xlat
popf
add
sbb
dec
add
call
mov
pusha
or
in
fwait
mov
jp
in
push
sbb
iret
rorl
pop
cs
inc
arpl
jge
pop
stos
push
adc
mov
aam
imul
fcmove
insl
inc
sbb
inc
lods
xchg
jle
repz
mov
in
xchg
dec
adc
dec
jle
add
pop
mov
shrb
nop
out
dec
aam
ret
rorl
lahf
adc
cmp
mov
mov
cltd
aam
mov
popa
or
scas
push
into
cltd
scas
xchg
icebp
das
out
push
aam
test
pop
pop
incl
fsubl
sub
aaa
push
test
dec
inc
pop
inc
jmp
pop
cmp
inc
adc
and
pop
iret
outsl
add
add
psubusw
push
in
sub
xor
flds
add
fwait
xchg
push
xchg
in
shlb
cmp
psrld
sbb
cmp
add
loop
inc
mov
mov
lods
xlat
pop
add
fisubs
mov
or
popf
mov
enter
mov
cmp
ja
insl
mov
sub
xor
mov
inc
sbb
inc
inc
mov
mov
pop
mov
mov
ss
pusha
les
push
mov
sub
cmp
imul
loope
push
and
or
test
jl
or
cmp
and
pop
int3
repnz
sbb
inc
addr16
xchg
xchg
addl
sub
nop
orb
call
pop
adc
lds
dec
or
xor
insb
ds
push
lret
push
mov
cmpb
xor
stos
mov
xchg
jle
aad
pop
ljmp
mov
add
sbb
sahf
cmc
fsubrp
jnp
sti
enter
add
lock
add
jae
mov
jmp
xchg
cmp
movsb
lods
xchg
in
mov
pop
les
mov
enter
mov
cmp
in
add
loopne
ss
movsb
in
loop
neg
jle
out
sbb
cs
mov
addr16
insb
mov
xchg
jmp
mov
inc
jo
ret
pushf
push
sub
loopne
shl
pop
mov
insb
mov
push
sti
cmp
xchg
xchg
sahf
adc
sbb
jno
jno
dec
jb
and
ret
push
push
iret
enter
fnsave
mov
push
sub
push
imul
stos
lcall
dec
lcall
jo
hlt
xchg
iret
data16
mov
xor
in
dec
xor
cltd
scas
int
test
ja
pop
pushf
add
add
addr16
mov
xchg
xchg
pop
adc
ds
xor
ss
sbb
in
loopne
push
test
add
add
jle
jg
std
fstpt
mov
add
add
mov
fstl
cmp
xor
notl
cmp
add
sub
test
fwait
mov
pop
in
jne
mov
fcoml
ljmp
lods
imul
mov
adc
dec
xchg
push
xchg
xor
jmp
mov
outsl
js
mov
add
or
pop
xchg
fstpt
jmp
and
or
lods
xchg
xchg
dec
cmp
test
stos
inc
cmp
aaa
cli
xchg
mov
or
in
pop
and
mov
push
sbb
xor
div
iret
xchg
pop
add
or
dec
pop
imul
cmp
mov
hlt
add
leave
imulb
imul
push
loop
jne
sbb
stc
lds
negl
out
mov
bound
shl
imul
add
fmull
nop
sbb
shrb
cmp
ljmp
insb
repz
add
movsl
fwait
out
arpl
ds
and
push
insb
in
push
fimuls
out
in
inc
lcall
xlat
cmpl
pop
fistpll
jp
sbb
cld
enter
fldl
push
add
outsl
sub
or
fwait
mov
inc
inc
mov
movsl
je
dec
mov
movsl
rcll
mov
fs
lcall
stos
rorb
sbb
popf
lret
xchg
push
loope
xor
xor
and
mov
in
pop
jbe
call
jmp
cmp
loopne
jno
int3
mov
cli
mov
inc
mov
jmp
dec
mov
stc
out
ret
and
xchg
xchg
nop
popf
pusha
jo
lock
jo
test
or
mov
and
pop
fs
jl
mov
xor
arpl
cs
inc
in
sub
push
add
add
sbb
jmp
scas
inc
call
fldl
add
sbb
cltd
cmpsb
popa
or
xchg
pop
add
inc
je
divl
mov
xchg
mov
daa
jp
sbb
es
iret
sha1msg2
push
ds
jle
mov
test
das
mov
cltd
fstl
cmpsl
pop
lds
mov
inc
bound
jge
out
enter
xor
inc
jle
jo
inc
je
les
and
lock
mov
mov
jle
mov
cli
pop
sti
cld
ja
ja
in
and
aam
clc
jo
xchg
aam
scas
loope
mov
sub
sub
inc
mov
push
aas
jnp
pushl
adc
dec
adc
pushf
mov
and
jne
cmp
mov
sub
cltd
xor
xor
dec
cs
gs
mov
movsb
lcall
jb
inc
loope
lret
fstpt
or
popl
add
add
push
out
faddl
repnz
add
add
es
ljmp
and
jge
push
jae
xchg
jmp
mov
mov
sub
xchg
pop
xor
stos
jne
mov
ja
mov
xchg
ret
jmp
xor
sahf
aas
rclb
enter
pop
pop
lods
mov
std
sbb
xor
mov
xorb
sub
sbb
or
test
add
les
and
loope
push
xchg
add
and
xor
gs
stc
push
and
movsl
inc
push
decb
cmc
jg
popa
bound
dec
outsb
xchg
bound
outsl
push
mov
cld
popf
pop
adc
pop
mov
xor
mov
xor
xchg
add
inc
add
jbe
push
subb
mov
lret
or
jl
and
lahf
xchg
add
push
mov
out
dec
mov
sbb
insb
clc
pop
inc
push
fmulp
adc
push
add
jg
mov
lcall
fisttps
or
or
add
add
mov
sub
je
xchg
sbb
pop
sub
xor
xor
test
nop
imul
dec
pop
rorb
adc
dec
adc
lret
imul
inc
imul
jae
xchg
gs
mov
pushf
or
mov
loop
daa
mov
push
and
cmp
lds
mov
das
inc
sahf
pop
mov
lcall
roll
js
push
orb
dec
sbb
shlb
sub
loope
sbb
ja
imul
jge
cli
xor
push
adc
into
inc
lcall
xchg
sbb
pop
leave
dec
inc
jmp
add
insb
adc
into
mov
scas
inc
bts
pop
xchg
testl
mov
pop
mov
push
lods
mov
icebp
add
mov
add
sbb
jns
xchg
xchg
mov
insl
int3
hlt
push
loope
add
add
mov
les
lea
inc
xlat
fdivs
in
or
imul
iret
repnz
xor
lods
cmp
mov
push
fidivs
std
nop
xlat
negb
aaa
ret
aad
push
int3
out
cmp
mov
xchg
and
push
push
iret
mov
out
test
dec
dec
xchg
add
xchg
jb
inc
sub
inc
iret
pop
ljmp
mov
int3
cmp
test
not
inc
hlt
xchg
lods
sub
mov
js
sbb
fsubrl
nop
pop
rol
fdivrp
outsl
sub
mov
cmpsb
inc
jno
and
je
int3
sahf
push
jp
insl
or
adc
lods
xchg
sub
dec
jecxz
sub
adc
and
cld
jge
cmc
xchg
cs
popa
sbb
push
mov
add
add
fadd
fsubp
jnp
or
cld
les
loop
add
pop
lds
loop
movsl
mov
xchg
inc
dec
or
adc
pushf
jmp
push
xchg
xchg
adc
es
mov
popa
push
sbb
jg
xchg
mov
dec
outsl
pusha
push
shll
mov
sub
inc
lahf
cmpsb
pop
popf
lcall
mov
dec
or
psubusw
pop
mov
scas
mov
or
into
mov
addr16
lods
pop
push
jb,pn
mov
cmp
xchg
lret
inc
dec
inc
inc
and
jb
dec
int3
xor
jo
out
xchg
cmp
arpl
fcomp
sbb
jecxz
dec
push
leave
cmp
mov
sti
fcomp
jo
lcall
in
push
or
fcmovne
fwait
inc
push
add
jnp
sarb
out
pop
xchg
sub
jle
push
pushf
and
xor
scas
repz
mov
cmp
sti
data16
add
add
sub
cld
cli
jle
dec
nop
xor
push
sbb
add
add
xor
ljmp
push
add
xor
lds
and
pop
xchg
jbe
rcrl
sub
jle
adc
cmp
pop
pop
mov
lea
add
mov
mov
leave
dec
lods
ds
shrl
push
mov
dec
inc
daa
dec
adc
jo
lret
mov
ds
cmc
mov
cli
pushf
fisttpl
repnz
dec
jmp
pusha
xchg
in
cltd
pop
roll
pop
mov
and
outsl
in
pusha
cld
js
sub
out
push
inc
icebp
lcall
jmp
addr16
dec
inc
push
add
scas
pop
mov
adc
adc
stos
adc
movsb
jmp
push
cmp
fcmovu
jb
in
dec
or
stc
into
icebp
ret
mov
clc
adc
add
movsl
pop
xorl
fildl
sub
push
xchg
dec
and
xchg
jae
shl
add
add
ja
sti
aaa
out
ja
movsb
out
add
add
add
and
int
jb
pop
adc
push
xlat
mov
fwait
xor
in
test
movntps
sti
call
loopne
in
or
ret
outsl
push
mov
xchg
lods
and
mov
xchg
push
add
lods
xor
mov
dec
xor
jg
movsb
loopne
aas
push
jp
out
addr16
out
in
mov
out
push
or
mov
inc
add
or
mov
xor
push
sahf
cmp
mov
xchg
mov
fcmove
fdivrs
mov
cs
and
sbb
fcmove
movsl
popf
test
pop
sbb
stos
pusha
xchg
loopne
std
das
dec
sarl
cltd
mov
aam
or
cli
xor
fwait
mov
loopne
and
lret
call
adc
adc
cmp
ret
fs
mov
push
push
cwtl
add
out
or
lock
pop
nop
repz
add
ror
cltd
outsl
mov
aaa
pushf
cmpsb
mov
add
add
in
mov
xchg
jo
xor
mov
jo
xor
lds
sbbb
sub
mov
mov
xor
cmpsl
and
int3
add
insb
xchg
insl
xorl
ret
and
aaa
shrl
cwtl
cmpsb
sahf
fninit
mov
push
and
xor
jmp
add
movsb
jp
add
sti
or
pushf
adc
int3
dec
mov
sbb
mov
mov
adc
sbb
and
cli
or
add
mov
mov
je
popa
push
fsub
mov
jp
js
xchg
mov
push
dec
dec
push
mov
or
mov
sarb
test
add
xor
and
adc
ror
push
out
jne
dec
and
add
sub
inc
pop
push
xchg
ja
xchg
or
mov
dec
jp
bound
and
add
cltd
cmc
adcb
fcos
pop
mov
xor
add
cmpsl
pop
push
ja
mov
inc
movsb
sarb
mov
mov
ss
in
in
or
inc
adc
jns
cmp
fdivrs
div
cmp
cld
add
or
sbb
push
out
mov
fs
inc
push
mov
movsb
mov
scas
xor
mov
or
adc
call
stc
jg
sti
imul
in
pop
jns
lret
inc
mov
pop
int3
sbb
cmp
jbe
sahf
sub
ffree
mov
inc
mov
popf
movsb
rcrb
js
iret
inc
add
call
shll
outsb
sbb
mov
jb
dec
inc
xor
jl
push
xor
in
pop
imul
sbb
sbb
pop
mov
pop
mov
jo
dec
roll
call
ret
loop
mov
and
lahf
fists
fcoms
sbb
cltd
sbb
mov
lods
xchg
cmp
add
repz
lock
jg
in
and
mov
add
add
aas
pop
xchg
mov
mov
sbb
fcmovnb
cmp
dec
push
repnz
xchg
mov
jnp
mov
iret
out
jp
popaw
or
adc
rcrl
mov
fcmovb
push
push
fs
dec
jg
mov
shrl
stos
cmpsb
adc
data16
jp
popa
dec
and
in
scas
call
cli
fmuls
enter
fdivr
or
inc
xor
dec
stos
je
add
push
cltd
mov
xor
idivb
jb
rcl
addb
sarl
sub
int
jne
push
jo
mov
jo
sbb
pushf
xor
insl
inc
push
and
push
jge
sahf
into
adc
pop
mov
or
shlb
bound
add
mov
rcrl
cmc
xor
jo
xlat
in
sbb
cmp
repz
mov
xor
sbb
pushl
pushf
add
add
pop
xlat
fistpl
cltd
sbb
call
add
rep
xor
or
mov
fnstcw
aad
push
je
orb
sbb
cli
cmp
pop
sahf
pop
loopne
push
push
sbb
jp
das
pop
mov
mov
loope
outsl
je
xchg
mov
ret
movsb
push
mov
cmp
or
mov
iret
pushf
pop
dec
dec
inc
scas
mov
sub
adc
in
mov
dec
cmp
mov
popf
inc
mov
jmp
dec
inc
in
fidivl
loope
cld
jne
and
or
mov
sub
or
mov
pushf
mov
mov
jae
pop
lret
icebp
pop
notl
sub
or
aam
mov
mov
mov
mov
in
sbb
ja
mov
in
dec
sub
pop
push
mov
xor
fisttpl
inc
pop
mov
dec
add
ds
inc
addb
add
mov
dec
js
stc
mov
dec
int
sbb
jmp
add
mov
cmp
pushf
dec
test
pop
call
jmp
and
sbb
sub
sub
mov
add
mov
mov
decl
dec
lods
cmp
insb
push
rorl
iret
nop
inc
std
ret
js
ret
jle
int
xchg
add
jne
pop
test
lcall
fldt
mov
icebp
or
add
sbb
inc
into
into
mov
testl
add
jbe
inc
push
out
aad
loopne
lods
jnp
pop
jecxz
hlt
mov
push
imul
inc
jmp
adcl
ds
jbe
fs
pushf
js
lea
adc
outsl
add
cmpsl
imul
pop
out
xchg
jle
dec
icebp
xchg
sbb
stc
adcb
and
mov
inc
nop
bound
hlt
cli
push
in
aas
scas
decl
and
mov
pushf
stc
in
test
add
add
insl
repz
fwait
jns
jns
mov
cmp
add
add
bound
mov
pinsrw
bound
inc
mov
pop
jnp
inc
and
xor
aam
mov
ds
jns
fs
jge
push
dec
lds
and
js
out
adc
les
inc
adc
into
xor
or
xchg
and
out
ret
pop
imul
loopne
sbb
shrb
loop
jp
loope
imul
jbe
insl
pop
ss
sub
ret
pop
jb,pt
sub
mov
pop
adc
repz
arpl
sub
xchg
fs
push
sbb
jbe
psadbw
into
dec
xor
in
or
test
nop
dec
pusha
shll
cli
in
push
inc
addl
jne
in
out
or
mov
mov
fstpl
aam
add
adc
and
iret
xchg
lret
mov
pop
add
add
jns
push
mov
add
aaa
sub
mov
pop
mov
cmp
jnp
adc
jne
inc
into
int
inc
jmp
add
mov
jb
mov
inc
cli
and
pop
arpl
aas
jmp
mov
xchg
and
aas
loopne
or
in
icebp
inc
test
cwtl
jp
lcall
jmp
mov
test
rcrb
mov
out
xorl
xchg
pop
lea
mov
stc
in
lahf
sbb
jno
mov
and
ds
push
cmpb
jne
sbb
mov
popa
pop
adc
push
inc
fs
push
int
mov
mov
iret
sbb
push
arpl
cmpsl
or
sub
mov
or
dec
rcll
lods
cmp
push
mov
loop
popa
push
mov
lods
adc
daa
mov
cs
xor
dec
xchg
in
pop
sbb
test
xchg
inc
and
cmp
aad
mov
mov
add
out
lods
xor
aas
xlat
fistl
das
repnz
loopne
in
add
add
dec
adc
cmp
in
cmp
cmpsb
jbe
ja
xlat
and
sub
mov
sub
into
sub
pop
fidivrl
shlb
jmp
decl
fidivrl
add
jle
sahf
cltd
or
xor
xor
jnp
lea
aad
pop
jl
aam
fisttps
test
or
mov
scas
pop
push
lods
repnz
mov
mov
insl
scas
js
mov
adc
das
ds
xchg
xrelease
pop
addr16
movsb
adc
in
lahf
mov
and
pusha
or
xchg
add
loope
pushl
inc
dec
jns
and
xchg
add
push
add
rorb
push
jg
mov
mov
cmpl
lahf
add
cmp
sti
ret
into
xchg
out
punpckhdq
mov
sbb
movsl
stos
push
arpl
and
mov
adc
mov
push
add
add
jb
scas
decb
fisttps
scas
stc
orb
add
aad
das
test
ret
inc
dec
repnz
mov
ret
cmpsb
push
out
push
call
int3
lret
push
mov
mov
jg
and
xchg
dec
sub
ds
fld1
push
ds
add
aaa
sub
push
cmp
push
pusha
mov
aas
repz
mov
xchg
das
es
and
xor
mov
inc
data16
inc
push
and
xor
loopne
jp
jb
insb
mov
sbb
pop
xchg
xor
sub
xor
sbb
insl
push
fadd
xchg
shl
cmp
xlat
outsl
sahf
add
cli
pop
cwtl
pop
xchg
sbb
push
sbb
sbb
adc
push
mov
out
pop
aas
movsl
aam
ja
fbld
not
adc
ljmp
mov
add
and
or
push
xor
mov
test
fcompl
jp
xchg
xor
sub
push
adcb
ja
add
mov
xlat
mov
xchg
push
pop
dec
out
add
add
xorl
or
lcall
xchg
imul
pop
insl
arpl
int
add
dec
sbb
mov
loopne
imul
movsl
std
outsb
or
rcrb
in
mov
movsl
inc
insb
adc
mov
in
cmp
inc
pop
cmpsb
pop
sbb
loop
call
rorb
fs
adc
push
fs
loope
lea
iret
sub
push
xor
aas
inc
jbe
jmp
or
int3
mov
stos
inc
out
sub
push
repnz
in
xchg
xchg
enter
dec
int3
test
cmc
lods
stos
jbe
mov
xor
adc
in
and
xchg
add
mov
lock
xchg
dec
xor
xor
stos
xchg
sub
into
add
mov
in
movsl
or
outsb
xchg
xchg
int3
xchg
out
push
and
push
into
pusha
mov
add
lods
cmp
lods
aas
mov
mov
pop
push
out
add
add
add
out
sub
inc
pop
xchg
ljmp
lret
lds
inc
movsb
push
mov
int3
and
cs
jmp
mov
xor
popa
sti
mov
fstpt
out
mov
paddsb
subb
push
mov
movsl
lds
int3
mov
repz
in
enter
push
cld
cld
push
std
push
xor
arpl
enter
cli
js
out
pop
sbb
into
pop
aad
int
out
ret
inc
outsl
sti
jp
data16
jae
fsubrs
jge
mov
lods
push
jnp
in
adc
push
lcall
mov
cs
icebp
std
imul
mov
xchg
fs
pop
mov
loopne
out
nop
hlt
adc
sbb
mov
int
mov
adc
push
inc
incl
and
cmp
adc
sbb
jmp
sbb
loop
fadd
sti
mov
int3
or
lret
add
add
sbb
popa
lds
mov
loope
fadds
lcall
inc
fisubs
loopne
mov
push
mov
in
mov
adc
lods
das
jb
mov
mov
dec
icebp
dec
push
lcall
push
mov
int
cmpsl
test
stos
cltd
aam
dec
hlt
sub
std
adc
sub
jbe
xor
dec
adc
sub
mov
jl
cmp
dec
movsl
and
int
hlt
testb
lahf
or
push
push
lds
daa
insb
lcall
addr16
push
ljmp
cmp
push
pop
pop
rcrb
aaa
popa
xchg
shlb
jbe
inc
pop
gs
dec
call
mov
ljmp
imul
clc
cmp
pop
jl
pop
ljmp
push
cltd
push
xor
push
mov
test
cmp
cmpsl
jecxz
fcompl
push
inc
and
cmp
dec
add
add
into
adc
neg
jge
xchg
jns
test
icebp
add
add
fstl
dec
cmp
push
dec
xchg
lock
into
mov
ds
lods
xor
cli
mov
iret
mov
cmpsb
xor
fcoms
imul
imul
xor
sahf
sub
ss
lret
mov
push
mov
fildll
or
movsl
pop
shlb
outsb
add
push
fistl
cmp
xchg
jns
adc
lock
gs
dec
inc
gs
out
jmp
adc
idiv
out
xchg
outsb
loope
lcall
fdivl
jns
jmp
mov
cmpsb
dec
cmp
push
mov
lods
jo
inc
xlat
imul
mov
mov
jbe
mov
std
mov
cmpsb
mov
pushf
sub
loope
cmp
push
movsb
xchg
push
icebp
and
mov
fists
fisubrs
lcall
or
mov
mov
jmp
dec
in
aas
iret
add
add
dec
sub
sub
ficompl
shlb
repnz
add
adc
aas
shlb
in
test
xorb
mov
out
mov
addb
mov
xchg
or
cmp
daa
aad
jo
pop
push
rep
push
inc
sti
dec
lahf
jecxz
and
rclb
push
enter
push
jecxz
sub
inc
mov
xor
loopne
ljmp
icebp
ds
xchg
lahf
push
pop
mov
lea
adc
call
adc
add
cld
mov
call
cmp
mov
jecxz
sub
aaa
sahf
outsl
mov
xchg
out
sbb
mov
std
enter
stos
mov
sbb
add
lock
or
jb
inc
push
add
adc
mov
cli
push
mov
push
adc
and
xor
xchg
gs
and
push
sub
in
roll
push
sti
mov
mov
add
add
ja
and
aaa
divl
xchg
mov
repz
add
into
gs
pop
and
push
pushf
inc
mov
sub
hlt
jno
imul
repnz
imul
xor
push
pushf
jecxz
test
nop
or
mov
insl
xchg
arpl
rcll
shll
test
movsl
out
push
pop
push
jp
sub
sbb
sahf
xor
loopne
sub
xchg
std
mov
scas
lds
loope
int
push
aaa
mov
lods
xor
shlb
daa
xor
dec
xchg
inc
cmp
jg
sti
jne
aas
and
imul
mov
jno
sbbb
insl
sbb
mov
mov
sbb
cmpsl
shrl
sbb
les
adc
cmpsb
pop
jae
icebp
push
pop
inc
pop
movsl
push
test
mov
push
in
pop
cmpb
sub
out
dec
lds
popa
inc
mov
xchg
sbb
insl
jmp
orb
mov
sbb
add
add
mov
cmc
mov
jmp
hlt
add
add
popa
ds
cmpsl
out
sub
fs
fsubs
jnp
push
inc
gs
add
cltd
dec
mov
lds
insb
push
fnstenv
rorb
punpckhdq
test
inc
cmp
or
mov
mov
sub
jno
pop
test
xor
cmp
xor
adc
pop
jns
sahf
out
aaa
cmp
sub
outsb
test
push
lahf
outsb
pop
push
movsl
std
dec
les
mov
adc
test
dec
sub
sti
out
out
push
inc
stos
bound
jb
adc
iret
aad
movsl
in
rolb
in
bound
cmpsb
xchg
pop
adcb
sbb
cmp
push
stc
ja
xchg
xor
pop
adc
mov
push
mov
jp
xchg
lds
rcl
add
push
pusha
xchg
lcall
cmp
sbb
add
add
jne
pusha
popf
pop
cmp
cmc
add
add
mov
add
add
add
mov
mov
push
xchg
fstpt
addr16
push
cmp
jbe
mov
call
or
xor
aam
jmp
clc
mov
aas
cld
push
popf
dec
fcomps
cmp
jo
cmpsl
push
lret
in
rcll
out
xor
or
sub
pusha
fisttpll
imul
mov
push
sub
outsl
rcr
sub
sub
cwtl
jae
mov
test
pop
mov
out
int3
or
pusha
int3
jno
nop
mov
pop
jnp
outsb
inc
mov
cmp
jbe
mov
xchg
test
sbb
rcll
js
inc
adc
fildll
mov
adc
aaa
stos
mov
jbe
xlat
stos
push
fwait
bound
aad
cmp
jmp
and
dec
inc
xchg
mov
cmp
xchg
cmp
fisttps
add
sub
scas
fdivr
fnstcw
jecxz
test
ja
add
add
in
cmp
xorb
repz
push
das
imul
add
and
cli
fbstp
mov
dec
lahf
mov
cld
sub
cs
cmpsl
aam
mov
je
fsubrs
ss
push
je
sub
in
lock
scas
dec
pop
sub
mov
das
mov
in
jno
pop
cmp
ja
out
or
cmc
jae
ja
not
das
sbb
jle
fisttps
mov
ss
rcrl
scas
cmp
lods
shrl
hlt
xorb
push
pop
or
or
aam
stos
nop
testl
jne
inc
mov
cmp
rep
push
sti
xor
adcb
jbe,pt
imul
cmp
repnz
xor
push
and
cmp
push
clc
mov
enter
xchg
loopne
lods
cld
push
mov
imull
xor
cmp
push
pop
mov
outsb
lea
push
int
divb
push
push
add
add
xor
jb
jae
js
mov
jl
add
add
insb
aaa
mov
fisubrl
xchg
pusha
js
cmp
aad
and
mov
mov
or
jle
mov
push
or
aam
and
insl
fstpt
icebp
adc
sub
jge
xlat
cmp
cmp
imul
adc
fstl
xor
in
xor
lret
cld
cmp
mov
adc
mov
js
xor
setnp
pop
out
aad
ret
pushf
vmaxps
int
inc
xchg
idivb
aas
xchg
xor
mov
scas
jg
or
inc
mov
jne
xor
fstps
sub
fisttpll
mov
push
push
in
xlat
adc
push
gs
add
mov
push
fldt
insb
sbb
jge
pop
add
or
xor
jno
lret
repz
jo
push
daa
pop
cmp
dec
fs
lods
inc
sbb
jecxz
repnz
adc
int
in
idivl
js
mov
mov
dec
push
cmp
add
pushf
shrb
xchg
dec
sbb
dec
jb
push
push
push
jbe
xchg
cmp
test
in
push
mov
sub
rolb
ljmp
inc
sti
ds
loope
jns
shll
fcoms
loope
mov
jge
sbb
or
outsl
or
rcrl
pushf
cltd
pop
popa
xchg
and
lods
sub
add
icebp
dec
add
fwait
xor
xor
ds
js
aad
cli
inc
dec
test
lock
je
xchg
jecxz
lods
cmp
jle
adc
mov
sbb
insb
ja
push
test
pusha
and
cmp
push
jno
arpl
xlat
mov
out
test
aam
cmp
xchg
test
add
and
insb
pop
sar
lahf
movsl
inc
lcall
rcrl
and
jno
ja
jnp
mov
popa
jp
mov
pop
sub
pop
sbb
sti
pop
sub
mov
aam
add
pop
es
inc
cli
aas
into
lret
movsl
movsl
loopne
xchg
add
add
push
mov
cmp
shlb
orl
or
fadds
mov
aaa
sbb
pop
xchg
adc
loop
popf
daa
adc
loope
setno
pop
cmp
dec
or
imul
fcoml
repnz
jecxz
int3
iret
mov
dec
je
outsl
js
in
push
push
add
xchg
loope
sbb
shll
icebp
and
sub
icebp
mov
lods
cltd
jmp
sbb
jge
inc
cmpsl
or
push
stos
imul
adc
shll
xor
sub
negl
inc
dec
das
push
pop
mov
push
push
sbb
and
jp
jl
xchg
push
dec
and
pushf
out
adcl
mov
pop
daa
cltd
aad
testb
mov
push
pop
test
jbe
pop
out
xlat
cwtl
inc
add
jb
ret
inc
push
insl
gs
nop
mov
jae
sub
test
add
add
lcall
mov
cli
add
add
mov
and
sti
dec
add
inc
faddp
shrl
adc
dec
orb
dec
and
daa
and
push
in
push
int
in
pop
jae
dec
mov
jo
cmp
loopne
in
xor
pop
fwait
stos
xchg
bound
xor
lds
and
lods
and
xor
push
cltd
sbb
or
sti
popa
mov
push
lea
push
imul
push
pop
mov
push
sbb
mov
push
mov
sbb
or
psadbw
popf
shlb
dec
fimull
lods
xlat
mov
add
inc
jle
mov
xchg
jne
add
inc
ds
aas
pop
push
sbb
loopne
out
add
jge
test
inc
xor
mov
and
pop
pop
les
and
fs
stos
scas
pop
int
aas
stos
loopne
lahf
mov
mov
jmp
insb
inc
std
sub
xlat
xlat
flds
add
aaa
jae
cltd
dec
mov
jno
inc
and
movsb
nop
sti
add
add
test
sub
cmp
dec
addb
stos
iret
mov
cli
xor
pop
pop
adc
and
ret
push
dec
xchg
repz
jp
adc
fstps
xor
sub
outsb
cmp
jnp
xchg
loope
jge
das
mov
or
arpl
pushf
mov
push
lahf
jg
adc
lods
repz
fistpll
aaa
jns
popf
rol
jmp
stc
lahf
ret
cltd
jge
xor
mov
cmpsb
mov
outsl
xor
sub
nop
dec
fdivrs
leave
mov
lods
mov
lock
repnz
sbb
fcom
pop
je
scas
int
pop
sub
inc
test
xchg
xchg
xchg
cli
scas
addr16
movsl
xchg
push
popa
pop
adcl
pop
mov
repnz
daa
mov
dec
mov
mov
sub
ljmp
leave
add
add
push
into
nop
out
cwtl
jle
push
sub
dec
pushf
jl
add
add
dec
mov
sahf
sub
jl
or
sahf
cmp
insl
sti
shl
push
xor
pop
cmp
dec
add
in
mov
cmp
fnsave
xor
and
mov
inc
xor
add
xor
dec
ljmp
and
inc
jge
mov
orl
loop
lods
xor
dec
shlb
jp
sub
sti
add
ja
add
jle
or
cwtl
add
mov
fidivl
cld
sub
push
adc
sub
jmp
push
dec
int3
pop
dec
sarl
add
jge
jns
xchg
or
jnp
pusha
inc
ret
mov
inc
hlt
mov
xorb
add
aad
lds
inc
mov
cmp
inc
xor
inc
addr16
outsb
mov
test
or
sub
dec
push
hlt
enter
std
aad
cmc
test
mov
test
push
movsb
adc
pop
add
add
test
jg
push
pop
push
mov
lcall
add
cmp
cmp
pop
and
pop
cmpl
xchg
in
rorb
std
and
xchg
out
dec
sbb
xor
int3
adc
movsl
cli
fistpl
iret
add
fildll
es
cmp
mov
leave
mov
or
jae
or
bound
dec
inc
imul
xlat
adc
imul
and
inc
sub
push
adc
jnp
and
push
leave
jns
bound
cwtl
xchg
sbb
cltd
xchg
lock
mov
sti
push
xchg
jl
jecxz
xchg
and
adc
inc
dec
push
cmp
xchg
sbb
sub
addr16
or
loope
loopne
push
lcall
jp
insl
push
mov
xchg
into
imul
stos
addb
fdivrs
dec
pop
repz
fs
icebp
xor
fiaddl
push
sbb
dec
mov
jg
sub
fildl
add
adc
movsb
push
in
cmc
jne
sbb
js
lods
xchg
add
add
add
pop
rcl
repnz
dec
sbb
inc
or
cmp
stos
notb
shll
js
or
or
or
test
lahf
mov
pushf
int
in
scas
pop
push
popa
jb
push
cld
das
xlat
lahf
pop
mov
push
adc
push
sahf
push
test
mov
pusha
mov
pop
cs
mov
sbb
data16
scas
xor
icebp
push
dec
mov
popf
out
icebp
fprem1
daa
in
pop
dec
jns
inc
in
xchg
xorl
or
fnsave
lcall
mov
sti
add
test
and
mov
aas
dec
jp
inc
enter
mov
push
sub
cmp
sub
cli
das
mov
imul
mov
mov
mov
jnp
test
dec
xorb
out
inc
or
xor
push
mov
scas
in
aad
aad
and
xor
or
jmp
addr16
jb
fstpl
xor
into
push
mov
sub
add
add
out
shlb
aas
out
int3
mov
iret
mov
xchg
add
xchg
fisttpll
xchg
negb
addr16
and
in
mov
push
inc
call
inc
dec
push
lahf
mov
es
insb
arpl
call
lods
stos
test
or
repnz
repnz
fidivrs
fisubrl
lods
js
push
jns
push
and
lock
jmp
pop
clc
sub
xchg
lds
adc
stos
mov
test
and
bound
mov
mov
addb
mov
arpl
aas
mov
cld
fimull
repnz
inc
ljmp
iret
rol
mov
and
xchg
xlat
imul
xlat
cmp
je
lret
push
or
pop
stos
and
lahf
adc
bound
inc
in
mov
xor
pop
pop
lret
negb
jecxz
lods
jae
mov
dec
int
add
mov
fmull
out
add
or
mov
and
popf
daa
test
add
add
sbb
push
ret
mov
loopne
jne
rcrl
fs
xchg
loope
mov
pop
sub
and
xchg
inc
idivb
lcall
bound
outsb
loop
in
out
jmp
mov
push
ror
push
cmc
inc
or
test
imul
xor
xchg
lret
inc
and
add
test
into
pop
out
rcrl
jp
iret
es
and
xchg
loop
outsl
add
ljmp
xchg
pop
mov
dec
jge
xchg
ds
jne
sub
insb
arpl
mov
sbb
insl
pop
add
adc
jae
ljmp
dec
mov
push
pop
mulb
jg
imul
fs
repnz
sarl
xchg
out
push
jg
hlt
push
fsts
xchg
xor
sbb
fwait
scas
repz
daa
jne
dec
cwtl
out
or
sub
add
add
ret
bnd
cmc
inc
stos
repz
outsb
stc
scas
add
add
bound
push
cld
out
add
mov
push
push
jecxz
js
push
push
sahf
xchg
cwtl
stos
jmp
clc
sub
ljmp
mov
push
inc
xor
or
out
arpl
add
inc
idivb
loopne
shlb
jmp
push
iret
in
jmp
sub
inc
addr16
enter
xor
popf
mov
push
sti
idivl
scas
sub
aad
xchg
or
aad
add
lods
aaa
inc
xlat
push
adcb
xchg
jp
fidivrs
pop
mov
mov
imul
mov
imul
add
shl
xor
popf
xchg
imul
insb
jno
aaa
jle
xchg
mov
ret
mov
loope
enter
test
inc
dec
sahf
inc
jl
out
and
stos
adc
shlb
fwait
xlat
je
outsb
xor
adc
add
pop
lock
loop
mov
pop
xchg
push
movsl
or
add
add
std
aaa
mov
shll
pop
mov
add
add
out
repnz
cmp
mov
movl
add
sub
xor
xor
pusha
fs
test
cmpsb
mov
cmp
lcall
je
xchg
mov
rol
sbb
fwait
cmp
dec
scas
xor
and
mov
mov
add
pop
mov
cmc
scas
and
insb
int3
subb
mov
je
into
jo
pusha
mov
inc
ss
adc
out
xchg
dec
aaa
scas
dec
mov
sub
ljmp
int
dec
lds
push
adc
sbb
xor
inc
jnp
push
cli
ja
xor
sbb
int3
mov
mov
dec
jp
scas
fdivl
test
out
push
mov
inc
xchg
aaa
in
or
scas
mov
in
sub
xchg
push
or
lock
xchg
xchg
sub
jo
pop
dec
mov
pop
lcall
add
insl
aam
mov
scas
add
xor
add
add
add
jo
dec
pop
stc
lret
pop
inc
lds
add
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
fwait
mov
xor
add
mov
mov
xor
lret
lret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
call
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
push
decl
mov
test
add
xor
add
mov
or
inc
mov
arpl
sub
incl
lea
or
incl
mov
cld
add
xchg
fdivr
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
loop
inc
out
fisttps
jecxz
in
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
add
push
decl
push
mov
call
mov
cld
add
test
loop
ljmp
fsub
add
mov
add
add
adc
add
push
inc
push
fisttps
test
out
shlb
jmp
fildl
inc
jle
test
call
out
test
in
mov
mov
add
call
rorb
add
add
xor
mov
cld
jle
add
add
inc
inc
mov
decl
add
inc
fmull
inc
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
fsub
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
jb
add
push
fildl
mov
inc
add
or
inc
call
jge
adc
mov
fwait
mov
lea
xor
call
call
jne
xor
add
pushl
call
enter
mov
xor
add
xchg
call
mov
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
loopne
sub
int
sub
inc
push
cmp
movaps
cld
faddl
jne
push
loopne
inc
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
daa
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
int3
inc
inc
add
add
xor
pushf
lea
add
inc
mov
xor
add
mov
fmull
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
mov
test
clc
pushf
inc
cmp
pushf
inc
mov
add
xor
cmovge
add
jmp
jb
add
xor
xor
add
clc
int3
add
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
enter
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
in
scas
inc
mov
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
in
jge
sub
mov
mov
mov
mov
in
ror
push
scas
mov
fwait
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
call
fcoms
lret
jb
add
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
enter
mov
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
fwait
lret
cmp
call
inc
inc
mov
mov
int3
pushf
add
add
add
clc
int3
inc
add
push
pushf
mov
enter
aas
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
gs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
enter
clc
incl
cmp
pushf
pop
lods
incl
mov
rcrb
test
sbb
add
push
loopne
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
loopne
test
xor
mov
rolb
inc
add
clc
inc
lret
mov
loopne
lret
into
into
scas
dec
mov
sub
cmp
mov
enter
add
xor
xor
lret
mov
inc
add
mov
xor
mov
in
add
bswap
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
fwait
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
call
fcoml
lret
jb
add
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
jmp
ror
or
add
not
adc
inc
push
mov
push
mov
in
sti
sbb
pop
xchg
leave
fwait
add
push
cmp
sqrtps
decl
push
cld
xor
add
push
clc
xor
add
hlt
or
mov
hlt
dec
add
mov
add
leave
push
push
mov
fcoml
inc
xor
iret
cld
lret
loopne
mov
mov
mov
cld
jne
movb
add
test
inc
incl
mov
cld
add
leave
xor
in
mov
inc
add
int3
cld
jne
call
mov
test
je
mov
cld
add
add
fiaddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
ljmp
leave
in
incl
fimull
inc
nop
loopne
ret
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jle
inc
inc
int
inc
sub
add
lret
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
jmp
out
mov
pop
push
cmp
sar
incl
inc
loopne
push
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
xor
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
insl
inc
add
testb
movl
dec
pop
add
mov
in
incl
out
inc
mov
push
jmp
add
out
insb
inc
jmp
addl
mov
outsb
inc
mov
mov
fcos
mov
in
jb
decl
mov
fdivr
out
rclb
mov
std
cmp
jne
mov
in
outsb
pushf
add
incl
incl
jae
add
incl
mov
jl
add
cld
dec
addb
data16
mov
mov
inc
mov
incw
data16
inc
jge
add
lea
add
ljmpw
pushl
lea
shlb
test
incl
test
inc
push
xor
add
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
loop
xchg
aam
out
mov
inc
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
data16
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
movswl
xor
add
xor
xor
decb
mov
pushf
inc
decl
sar
decl
incl
addl
xlat
dec
add
mov
lea
call
inc
rdpmc
add
push
lea
js
add
push
lea
fmuls
jmp
dec
mov
mov
call
dec
inc
mov
push
into
test
call
lea
jmp
inc
jnp
add
incw
mov
inc
add
mov
decl
add
data16
inc
dec
test
cmp
add
mov
incl
mov
ljmp
push
incl
call
decl
mov
inc
mov
mov
add
inc
mov
mov
pop
test
clc
lea
cmp
push
lea
mov
hlt
lahf
push
mov
xor
add
mov
mov
rolb
mov
nop
push
add
mov
in
jge
test
jne
sbb
push
inc
call
add
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
xor
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
rdmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
fwait
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pushf
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
fwait
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
push
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setnp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
decb
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
loopne
cmp
inc
daa
loopne
in
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
in
add
add
and
fs
incl
jle
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
fwait
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
add
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
popa
data16
into
gs
add
ret
add
add
add
cmp
add
into
ret
pop
adc
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
ss
fs
mov
je
xor
mov
ss
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
test
clc
test
cmp
fs
or
add
lret
xor
pushf
mov
ret
pop
dec
mov
push
add
xor
cmp
je
mov
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
cmp
add
lret
lock
clc
inc
lret
cmp
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
fwait
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
fwait
fwait
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
fwait
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
xor
pushf
push
movl
dec
inc
cmpb
pushf
gs
shl
dec
xchg
shr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
xor
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
cmp
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
xor
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
pushf
add
mov
xor
test
clc
dec
inc
xor
pushf
rorb
lea
int3
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
fwait
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
and
and
call
in
jmp
je
call
and
call
and
push
or
pop
mov
and
mov
and
mov
jne
test
decl
sbb
jl
adc
dec
mov
mov
and
xor
or
add
clc
jmp
adc
inc
je
and
je
mov
decl
sbb
add
add
adc
mov
adc
add
add
adc
sub
add
imul
add
ss
add
ss
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
jo
add
pop
adc
push
adc
add
insb
adc
jb
adc
push
aaa
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jge
add
or
add
sub
add
insb
adc
addr16
add
adc
lds
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
adc
clc
cmp
add
pop
adc
mov
adc
add
adc
cmp
shll
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
adc
fwait
pop
adc
jnp
adc
pop
adc
popf
jno
add
inc
adc
sbb
add
cmp
pop
cmp
sbb
inc
add
cmp
and
inc
add
cmp
sub
inc
add
cmp
push
xor
aaa
pop
inc
dec
xor
push
add
xor
pop
inc
push
pop
dec
xor
push
add
cmp
xor
xor
pop
inc
add
dec
cmp
xor
pop
pop
xor
inc
add
inc
pop
cmp
push
inc
xor
xor
inc
inc
inc
cmp
dec
inc
add
push
xor
push
aaa
dec
pop
xor
dec
add
inc
xor
push
pop
push
inc
add
xor
cmp
push
push
push
pop
inc
push
push
add
inc
pop
pop
push
inc
pop
inc
add
cmp
inc
xor
pop
pop
cmp
inc
xor
dec
add
pop
cmp
xor
cmp
dec
dec
cmp
pop
dec
xor
xor
pop
inc
push
inc
inc
add
cmp
push
inc
xor
pop
dec
dec
ss
pop
push
cmp
pop
push
dec
add
inc
cmp
dec
xor
inc
xor
xor
push
add
xor
push
cmp
ss
pop
push
inc
xor
dec
inc
xor
dec
pop
push
add
inc
add
pop
add
add
add
xor
add
add
push
add
xor
add
inc
add
xor
pop
add
add
xor
add
xor
add
push
add
dec
add
push
add
push
add
pop
add
dec
add
push
add
pop
add
add
dec
add
cmp
pop
add
add
add
add
add
push
add
cmp
add
add
push
add
add
add
inc
add
inc
add
push
add
dec
add
add
dec
add
inc
add
dec
add
add
add
push
add
add
push
add
add
pop
add
add
inc
add
add
push
add
add
push
add
dec
add
add
aaa
add
add
pop
add
inc
add
xor
push
add
push
add
add
push
add
add
add
inc
push
test
adc
sub
in
sbb
add
push
cmp
addr16
bound
outsb
pop
je
ja
imul
js
jp
jns
jp
je
jp
jo,pn
bound
