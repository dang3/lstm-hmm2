push
mov
sub
sub
mov
push
add
push
push
movl
cmpl
je
cmpl
jle
jmp
push
push
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
cmpl
je
cmpl
jge
jmp
pushl
push
push
push
push
call
mov
dec
mov
jmp
xor
or
mov
add
xor
mov
mov
mov
sub
sub
mov
or
mov
mov
mov
xor
mov
mov
andl
movl
or
mov
xor
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
pushl
call
jmp
mov
orl
mov
movl
cmpl
je
cmpl
jg
jmp
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbbl
mov
mov
movzbl
xor
mov
jmp
lods
insl
lcall
xchg
add
push
adc
xchg
jnp
jnp
mov
jnp
aam
rcr
fcmove
test
mov
mov
test
orl
xchg
lods
jle
jno
jle
inc
mov
sti
xchg
jle
or
sub
or
rcrb
push
out
cwtl
dec
imul
out
sti
fldcw
cmp
mov
test
jne
sub
inc
sbbb
push
out
arpl
jb
sbb
xchg
insb
mov
xchg
add
imul
xor
sub
xchg
lods
in
mov
stos
sub
and
xchg
cld
xchg
xchg
inc
clc
mov
stc
mov
in
cwtl
je
add
inc
pop
mov
aas
mov
pop
push
idivb
sbb
fs
xchg
add
je
test
outsb
ss
and
insl
inc
pop
mov
bound
test
filds
xchg
lea
test
cwtl
sub
push
addr16
pushf
lods
inc
sub
or
xor
insl
cli
jne
in
nop
aaa
lock
lds
mov
fcomps
jne
push
mov
pop
nop
xor
jo
sbbl
lds
mov
inc
call
cmp
add
jns
cwtl
stos
mov
inc
xor
cwtl
adc
xor
or
cmp
push
ret
fs
pop
gs
fwait
jmp
into
test
sub
sub
pop
icebp
cmp
xchg
mov
jb
lods
inc
outsb
jmp
sahf
pop
or
adc
mov
push
bound
movsb
sub
sbb
cli
hlt
inc
lahf
mov
into
sbb
cmp
loopne
out
push
mov
sub
repnz
push
data16
clc
into
cmc
aad
mov
mov
shl
inc
gs
jp
xchg
shrb
stos
mov
leave
sbb
mov
aam
xor
sbb
xlat
jecxz
aam
push
pusha
dec
and
pop
mov
out
shl
out
adcb
shlb
and
xlat
lret
cmp
lahf
insl
imull
sub
xchg
or
aam
aad
cmp
jle
and
push
inc
sti
xchg
mov
fsqrt
mov
roll
mov
lock
sbb
fistpll
sub
leave
lret
mov
adc
test
fidivs
jl
cmpsl
xorb
push
outsb
xor
addr16
pop
cmp
out
cmc
enter
xchg
imul
pop
je
aas
dec
fisubs
stc
dec
loope
lods
add
ds
mov
sub
cmp
xor
xor
std
sub
xlat
es
dec
test
push
ret
mov
sbb
fcoml
and
and
mov
ret
mov
aas
je
xlat
imul
int3
add
mov
scas
inc
adc
xchg
add
sbb
dec
insl
jb
push
pop
mov
mov
push
inc
or
dec
add
inc
or
xor
cld
sti
cld
sahf
inc
loope
das
xorl
fcoms
out
bound
cwtl
sbb
cwtl
and
sbbb
in
cmp
mov
jnp
into
vxorps
xlat
jne
mov
data16
test
pop
and
sub
ljmp
mov
xor
sbb
pop
adc
sarb
mulb
xchg
iret
push
je
mov
cld
fsts
adc
xor
lods
test
add
int
std
push
xchg
leave
out
aad
adc
xor
inc
or
push
xchg
dec
jle
and
nop
imul
lods
sbb
jp
lret
aad
pop
in
test
mov
mov
out
stc
loopne
repnz
loop
mov
push
mov
sbb
std
cld
sbb
cs
xchg
jns
push
stos
cmc
test
or
pop
and
or
es
mov
call
outsb
mov
repnz
scas
add
push
xchg
cmp
testb
and
inc
or
mov
std
jg
rcl
inc
push
in
mov
push
es
push
mov
xor
sbb
ja
xchg
ss
and
bound
add
sub
outsl
push
push
fcmovnu
not
adc
cmc
mov
xchg
sbb
in
adc
jg
jl
jne
or
int3
and
mov
icebp
or
out
enter
stc
outsb
inc
cmp
sarl
xor
and
aas
lods
fisttpl
outsl
in
jge
push
sbb
and
lret
loop
dec
pop
pop
xchg
or
or
push
sbb
push
sub
sarl
mov
jae
pop
das
loope
sbb
sbb
sub
cmc
push
faddl
fbstp
sti
scas
imul
add
inc
icebp
ljmp
or
xlat
mov
ficoml
or
stos
xchg
pushf
pop
mov
push
into
jle
mov
icebp
lret
lret
jae
push
fwait
lods
mov
loop
fisttpl
cs
sahf
sub
nop
int3
inc
push
adc
sub
add
loop
inc
lcall
sbb
mov
ret
push
pushf
mov
out
roll
xchg
sub
stc
inc
ret
fdivs
mov
jp
loope
inc
mov
mov
dec
icebp
lds
sahf
fcmovu
push
push
hlt
scas
sub
sbb
sbb
jo
push
ftst
dec
mov
xchg
outsb
iret
sbb
inc
pop
je
sbb
fdivp
push
int3
push
outsb
jl
cmp
jns
sub
leave
fdiv
add
js
push
gs
or
mov
test
pop
data16
std
mov
outsb
pusha
loop
iret
into
sub
cmp
inc
shlb
mov
fadd
popa
std
add
push
addl
push
mov
push
pusha
cmc
xchg
outsb
hlt
out
xor
lret
xor
mov
and
int
shlb
push
mov
jecxz
sbb
sbb
xor
fwait
jecxz
xchg
out
xchg
jmp
cltd
cmp
pop
cmpsb
nop
cmp
shll
sub
xor
or
inc
in
pop
jns
cwtl
lret
lock
sub
fisubs
dec
mov
pop
negb
adc
bound
mov
cmp
adc
imul
fstpl
mov
fwait
roll
fs
stos
shlb
cmp
add
out
leave
mov
arpl
popa
fimull
dec
push
push
xchg
pop
inc
sahf
xchg
push
scas
cmp
cmp
jns
inc
pop
outsb
inc
jno
jle
xchg
xchg
ljmp
outsb
cmp
jb
mov
movsl
pop
add
mov
mov
mov
cmp
aad
pusha
lcall
xchg
mov
jp
push
jno
mov
push
das
and
shrl
daa
mov
or
pop
cmp
pop
inc
out
iret
loopne
mov
mov
pushf
mov
imul
imul
sbb
lea
mov
fistl
lret
lods
out
push
fwait
lods
jge
xor
push
cmpsb
hlt
sbb
rol
iret
mov
mov
fcompl
fidivs
test
pop
fists
pop
mov
clc
dec
leave
dec
leave
xchg
dec
roll
popf
sbb
into
mov
fmul
and
dec
test
orb
pushf
stos
cmp
inc
into
pop
jmp
rclb
mov
outsb
fsubl
pop
jne
lcall
les
scas
les
stos
cmp
add
mov
rclb
aad
xchg
cmp
mov
fdivs
dec
mov
fisubrl
mov
add
sbb
fadd
shl
nop
sbb
inc
mov
popa
outsl
sarb
dec
insb
pop
sahf
in
mov
std
add
scas
inc
dec
pop
out
popf
dec
xor
adc
lahf
or
cli
jl
pop
lds
jg
movsb
jbe
mov
mov
jnp
fldl
jo
mov
push
shl
inc
test
int
or
fnstenv
and
push
push
pop
mov
stos
sti
enter
addr16
or
mov
arpl
adc
pop
pop
adc
sbb
andl
push
int
bound
pop
xchg
mov
les
mov
pop
dec
sub
jns
stos
cmp
adc
jmp
xchg
cmp
subb
inc
inc
add
inc
cmp
rcl
sbb
push
sbb
and
dec
enter
in
divb
leave
stc
push
fstps
sub
lcall
stc
push
ja
push
out
sub
punpckhbw
mov
js
xchg
mov
aad
imul
shl
inc
bound
jno
out
pop
ljmp
loope
sub
mov
mov
sbb
push
mov
cltd
jmp
loope
pop
jnp
add
lcall
sub
pop
inc
icebp
subb
cld
push
cwtl
lods
movsb
shl
test
pushf
push
mov
pop
enter
fistpl
add
in
or
out
ficomps
sub
sbb
mov
xchg
jle
out
loope
xor
test
aad
push
das
rcrb
nop
test
mov
or
insl
and
fsubs
dec
xor
into
mov
pusha
bound
inc
jns
ret
jbe
aas
sbb
xchg
inc
push
mov
loopne
lock
jmp
or
sub
jmp
mov
insb
pcmpeqw
pop
aaa
adc
mov
xor
aad
mov
in
add
pop
popf
fbstp
jecxz
push
outsb
lret
sbb
add
push
test
call
test
inc
cmpsb
int
or
iret
movsb
xchg
sbb
out
enter
mov
clc
jo
mov
outsb
and
arpl
and
daa
add
jmp
add
adc
jl
mov
andl
push
or
daa
repz
test
sub
dec
jns
cmp
mov
addr16
rorw
adc
fldt
push
jmp
popa
jmp
ret
sub
aas
pop
loopne
into
ljmp
inc
stos
mov
xlat
decb
in
xor
in
bound
adc
ror
popf
or
cwtl
icebp
adc
pop
jp
push
loop
ret
les
cld
bound
inc
movsl
inc
inc
push
mov
hlt
sbb
out
lock
mov
ss
int
aam
shll
or
loopne
and
sub
pop
test
sub
mov
dec
orb
in
in
iret
insb
mov
out
call
dec
call
pusha
mov
jno
adcb
loope
enter
fwait
mov
insl
or
lea
add
mov
test
std
mov
clc
mov
fiadds
ss
cmpsl
es
lret
cld
or
movsl
insb
dec
dec
repnz
out
sub
and
xor
addr16
xchg
xchg
xchg
mov
std
mov
movhps
push
test
mov
lods
popf
fdivs
push
sbb
test
jns
enter
insb
rorl
jae
dec
imul
and
push
inc
into
dec
xchg
push
sahf
les
test
push
xchg
fiadds
mov
call
push
mov
lcall
fcoms
xor
lea
ss
push
adc
dec
jge
dec
and
int
push
add
adc
test
aaa
lahf
mov
popl
aas
sbb
sahf
in
addl
mov
mov
jp
jg
imul
xlat
push
repz
sub
popf
loope
and
sbb
pop
pushf
ret
add
je
data16
or
testl
cmp
push
icebp
sub
es
push
jae
pop
adc
lock
adc
adc
sbb
mov
jb
sbb
xchg
cli
xor
nop
addr16
cwtl
jg
test
inc
mov
cli
xchg
push
jno
fisttpll
xor
jl
test
xchg
fs
fsubl
leave
mov
test
popa
loope
and
pop
mov
nop
lods
mov
xchg
negl
into
jl
jne
push
out
out
stos
sbb
and
push
std
int3
dec
test
xor
filds
lods
sub
cmpsb
push
jg
inc
lcall
xchg
data16
lds
pop
dec
xchg
lcall
cli
and
cmp
cmp
xorb
hlt
repnz
fldenv
sub
lahf
into
pop
popf
inc
push
mov
xor
test
mov
clc
push
clc
movsl
mov
divb
mov
mov
jle
loope
add
mov
ja
stc
rcll
decb
ss
xchg
adc
or
push
or
mov
push
sbb
add
xor
cmp
pusha
xor
ror
jl
frstor
pop
or
jl
ret
fdivrl
mov
mov
pop
sub
sub
mov
fstpt
sbb
cld
popf
rclb
cmp
add
sbb
icebp
fisubrl
aam
xor
es
fsubrl
fcomps
push
negl
stos
js
pop
inc
popf
pusha
aad
rclb
mov
xchg
adc
enter
inc
dec
xchg
fwait
mov
scas
inc
jmp
aas
mov
loope
hlt
mov
cmp
adc
loop
inc
out
out
pop
pop
mov
mov
fsubrl
sub
or
jns
mov
add
movsb
addr16
aad
dec
bound
scas
shrl
adc
adc
sub
mov
subl
js
shr
loopne
sub
mov
mov
adc
mov
xchg
jns
and
xchg
loop
and
daa
sbb
mov
or
dec
pop
inc
aas
pushf
cmpsl
dec
scas
xor
and
jge
inc
xchg
or
sbb
stc
adc
movsb
xchg
out
push
and
test
dec
mov
imul
and
filds
leave
popa
shll
fwait
dec
nop
lods
pop
aas
xor
imul
gs
jmp
mov
mov
sbb
and
mov
ljmp
dec
xchg
rcrb
cltd
lods
pop
pop
sbb
fmulp
sbb
jecxz
mov
mov
testl
xor
andl
mov
test
test
mov
dec
test
inc
push
mov
data16
fwait
add
mov
push
sub
std
jmp
inc
ja
inc
sti
imul
std
inc
cmp
mov
je
lret
cmp
cmc
into
and
daa
int3
icebp
insl
test
xlat
sub
xchg
mov
jns
shlb
xor
xchg
push
xchg
bound
repnz
cmp
xor
sbb
or
cmp
std
and
lahf
dec
cmpps
mov
sbb
xor
inc
pop
rorl
mov
repnz
lods
les
xor
movsb
inc
shrl
mov
ds
sub
push
and
stc
jg
mov
ret
push
movsb
mov
jg
les
jbe
inc
adcl
ja
in
rcrl
inc
je
mov
mov
in
rorb
mov
out
push
jecxz
mov
fdivrp
shl
add
dec
push
sbb
push
and
test
movl
mov
push
inc
xchg
lahf
mov
mov
das
jno
push
inc
iret
jno
mov
dec
call
pop
ret
imul
jnp
push
mov
popf
js
lret
pop
jl
movb
pop
jb
push
dec
push
int
sti
clc
mov
pop
out
mov
shlb
xchg
test
ja
rcrb
loope
ds
dec
stos
inc
lea
mov
js
xor
cld
sub
add
xor
loope
mov
pop
lock
lea
popl
jno
xorb
sbb
imul
repnz
and
daa
push
xchg
add
fld
xchg
test
cmp
inc
scas
cli
sbb
fwait
jge
lret
mov
mov
shlb
in
test
les
loopne
or
and
orb
and
sub
addr16
mov
jno
outsl
fcomp
jge
cmp
jns
push
repnz
mov
or
fstpl
into
push
cltd
mov
add
rolb
outsl
into
ret
addr16
call
mov
fimuls
insb
jb
insb
mov
pop
push
jb
dec
popf
data16
cmp
pop
xor
sub
jmp
rclb
pop
test
xor
fnsave
push
push
jmp
pop
mov
imulb
in
or
sbb
shr
sub
imul
ss
imul
mov
dec
dec
dec
cmpsl
cmp
out
jnp
lcall
jne
xor
test
jo
cmp
popf
inc
mov
and
xchg
gs
jb
mov
jne
addl
adc
push
mov
stc
xor
and
rorb
or
push
repnz
pushf
lods
jb
and
lahf
rcll
insl
mov
cmp
push
pop
jmp
jle
hlt
out
out
outsb
pop
jo
aad
outsb
mov
push
icebp
dec
movsl
out
ljmp
mov
pop
mov
jo
int
cmpsl
in
push
xchg
or
pop
js
and
push
cmp
ds
sub
mov
sets
xor
test
sub
imul
cs
loop
xor
cmp
cmpsl
pop
mov
dec
push
dec
jno
cmp
adc
lret
icebp
sbb
sub
outsl
cmp
ds
or
ja
hlt
int
pop
out
dec
xor
push
cmp
lret
jp
add
pushf
mov
call
subl
pop
shr
aam
scas
adc
push
cmpsb
sub
stos
insb
mov
imul
pop
daa
out
lahf
leave
sbb
pushf
leave
jne
sbb
icebp
mov
int3
jp
inc
ret
lock
pusha
repnz
loopne
loopne
jo
cltd
ret
bound
fcomps
pop
fisubrs
push
das
bound
fldl
fidivs
insb
push
mulb
mov
cmp
enter
mov
fnstcw
fwait
inc
mov
rcll
iret
bnd
jmp
fsubrp
call
lahf
icebp
daa
loopne
les
pusha
jg
jno
cwtd
fistpll
andb
movl
jno
mov
shl
jo
hlt
sub
aad
fidivl
ret
push
and
mov
call
push
adc
push
push
dec
add
fwait
xor
mov
daa
je
cld
dec
inc
fbld
xchg
hlt
pop
into
pop
cld
pop
lock
mov
cmp
adc
xchg
scas
cs
data16
jg
push
jge
dec
mov
scas
and
sbb
cs
mulb
pop
xchg
pop
lea
and
push
fisubrl
jb
cmp
dec
mov
push
or
subb
jle
daa
or
pop
mov
stos
sub
add
and
dec
movsl
push
lock
lcall
cmp
push
cmpsb
aaa
fwait
push
mov
xchg
imul
sahf
or
xchg
fmuls
lds
incb
fidivl
jp
outsb
aas
repz
nop
jmp
js
mov
adc
xor
jle
sub
jg
mov
mov
aad
mov
sub
xchg
cmp
sbb
xchg
jae
jne
outsl
pop
call
sarl
push
cmpl
loopne
test
cltd
mov
cmp
sarb
das
arpl
mov
mov
cmp
mov
sbb
push
sbb
push
je
nop
cmpsl
mov
int3
outsl
mov
dec
xor
daa
into
and
xchg
inc
jle
and
fbstp
repz
jbe
mov
fsub
mov
mov
push
adcl
push
and
movsl
adc
xchg
pop
addr16
sub
dec
call
aaa
mov
pop
ficompl
sbb
sbbl
out
push
popf
rorb
mov
sbb
jecxz
scas
mov
xor
adc
push
fwait
or
mov
ret
mov
push
insb
pop
dec
cmc
or
and
scas
andl
in
ret
sub
jmp
xchg
in
arpl
jae
pushf
popf
mov
adcl
xlat
int
or
push
fdiv
xchg
adc
jecxz
outsl
aaa
adc
out
mov
push
cmpl
out
inc
js
push
int
xchg
sahf
lahf
cmc
aam
jnp
loop
adc
jmp
ret
cmp
test
adc
xor
jge
insl
cwtl
test
repz
pop
push
dec
insl
cmp
je
adc
fcomip
or
int
mov
adc
lock
jl
or
jmp
mov
aad
jecxz
ds
mov
xchg
test
nop
mov
add
lea
ljmp
add
andb
mov
pop
incl
dec
and
nop
call
jbe
cs
bound
dec
jle
sub
lcall
aad
jecxz
mov
dec
mov
mov
fstl
data16
xchg
mov
dec
stc
mov
xchg
push
into
outsl
aaa
pextrw
and
and
add
loop
sub
subl
and
xlat
lods
cld
out
push
and
pop
pop
mov
test
loop
and
loope
cmp
and
fimull
mov
or
les
lcall
push
rcr
leave
daa
mov
dec
stos
pusha
and
sti
push
xchg
or
fcoms
jo
ret
fimuls
adc
cld
loop
out
push
flds
push
sub
std
mov
xabort
leave
pop
in
out
int3
add
push
cmp
add
negl
xor
jle
enter
daa
push
mov
push
or
lods
sub
pop
jo
jl
out
dec
arpl
pfmin
lock
roll
mov
jmp
cmpl
add
adc
fnsave
push
lret
jl
in
jp
adc
cli
lods
and
xor
fstpl
mov
cli
int
jmp
mov
xor
movsl
pop
xor
lds
sti
and
push
xchg
stc
pushf
std
pop
jge
add
xor
mov
idivl
mov
sub
mov
out
push
sbb
icebp
popf
das
loopne
jecxz
fidivrs
arpl
inc
xor
and
jo
pushf
adc
test
fisttpl
loop
mov
mov
xor
stos
mov
inc
or
xchg
in
loope
xchg
mov
push
lea
scas
inc
lret
push
pop
movsl
fildll
mov
mov
mov
ret
sbb
xchg
cmp
orl
js
sbb
cmpsb
xchg
pop
pop
lret
xlat
aaa
sbb
jmp
sbb
stos
fs
fwait
jg
xchg
ljmp
jb,pt
push
or
or
cld
enter
std
push
adc
or
pop
jmp
sbb
mov
add
shll
sbb
fidivrl
jno
fistpl
mov
pop
pop
jp
xlat
inc
or
push
sbb
xor
add
pop
push
lea
mov
xchg
mov
stos
mov
xor
and
jl
insl
fimuls
mov
fistpll
cmp
lret
jge
jecxz
sbb
aam
dec
enter
dec
in
mov
call
repnz
jp
fdivs
and
cmp
mov
imul
mov
sbb
call
lea
xchg
sahf
testb
xor
inc
lret
popa
imul
loopne
ljmp
mov
add
scas
jnp
push
or
mov
add
addl
in
mov
pusha
jne
fisubrl
push
pusha
push
filds
cmp
sub
push
pop
test
insb
mov
jp
or
pop
stc
mov
lahf
mov
dec
add
jle
and
sub
sub
mov
pop
or
xor
mov
insl
add
das
pop
cld
sub
daa
or
les
jg
push
pop
mov
jl
rorl
dec
in
xorl
loop
movsb
pop
fxch
sbb
out
sub
cwtl
sub
inc
js
inc
xor
mov
sub
sti
int
mov
xchg
xchg
jmp
jno
pop
xor
mov
jecxz
orl
mov
dec
cmpl
lds
add
cs
inc
cmp
mov
nop
popa
int3
xchg
inc
adc
jbe
dec
jne
pop
xchg
scas
mull
adc
inc
and
sub
and
or
mov
and
mov
push
push
dec
out
ret
push
aam
pop
call
cltd
out
pushf
dec
lahf
dec
mov
leave
clc
insl
mov
jnp
popf
jno
xlat
loope
xor
add
pop
in
jmp
adc
jnp
xor
add
xor
in
sub
aaa
out
popa
inc
mov
push
dec
mov
fmull
xchg
and
sub
lock
fs
cmp
dec
sub
into
mov
pop
inc
jmp
sub
icebp
pop
icebp
loop
ret
mov
add
loope
stos
jns
xor
fs
mov
iret
lcall
or
insb
xor
push
mov
loopne
jnp
or
pusha
test
aad
sbb
dec
ds
cmp
sub
nop
movsl
stos
adc
mov
fwait
lret
cltd
and
jp
iret
jno
lea
mov
sub
cmp
into
add
xor
jnp
sahf
cmp
xchg
test
cs
adc
mov
loopne
mov
jo
scas
daa
and
add
mov
dec
nop
ss
shlb
push
pop
or
shll
cmp
lret
fs
mov
sbb
mov
cmp
mov
out
xor
and
andb
ja
fidivrs
xor
mov
cmp
sbb
fimuls
mov
hlt
pop
lret
sbb
dec
dec
mov
or
lcall
push
fcompl
rorl
or
mov
push
jmp
pop
fwait
push
dec
enter
mov
xchg
ljmp
loope
and
lahf
dec
in
test
xchg
push
add
xchg
sbb
sbb
push
rcrb
mov
xchg
dec
xchg
std
decb
fists
lret
je
data16
push
mov
ljmp
mov
std
push
pop
outsb
inc
idivl
cmpsb
insb
xor
ficoml
dec
mov
lret
pop
mov
mov
jbe
imul
xor
enter
stc
and
and
imul
adc
ror
orl
xor
jo
jmp
data16
sub
mov
shll
dec
test
popa
mov
fsts
popa
fisttps
sbb
sbb
cmp
add
stc
ret
leave
faddl
cld
js
mov
mov
sub
cwtl
jge
imul
movsl
ficompl
xchg
insb
mov
test
subl
aas
fadds
testb
dec
xchg
ret
nop
test
dec
in
jecxz
mov
mov
xchg
pop
pop
rcpps
outsl
and
dec
in
addr16
jne
jno
mov
pop
movsl
cmp
in
or
and
adc
push
push
mov
ret
sub
pusha
ja
int3
dec
jno
aaa
mov
sub
lock
xchg
pusha
mov
pop
cltd
loop
aas
push
dec
adc
push
gs
movsb
and
ret
cmpsb
cli
dec
stc
popf
xor
or
sbb
cmp
notl
ss
gs
xor
mov
setle
mov
jo
sbbb
sbb
jl
pop
and
add
aaa
pop
mov
sbb
jmp
pop
clc
sbb
xor
inc
sub
repz
xchg
add
sbb
pop
shll
xchg
xchg
xorb
dec
fmull
arpl
push
adc
lods
nop
push
mov
or
out
subl
das
std
test
jge
mov
scas
or
push
jae
stc
int3
fstps
sbb
jmp
cmp
sub
mov
ret
data16
scas
lahf
in
mov
cmp
ljmp
cmpl
mov
int
repnz
subb
jmp
out
sbb
xor
enter
pop
cmpsl
in
add
iret
or
pop
orb
jns
jnp
adc
or
daa
outsb
ds
pop
lret
sub
imul
sahf
mov
adc
sub
xor
mov
mov
jecxz
fcmovnu
inc
lcall
out
and
lret
adc
jg
xchg
xlat
sbb
cld
mov
and
jmp
je
or
leave
pop
jmp
ret
stos
or
jge
jno
movsl
imul
outsb
leave
ss
adc
sbb
xchg
push
jne
mov
icebp
inc
or
jo
or
or
jbe
js
ret
and
adc
movsb
jb
ss
or
sti
xchg
cltd
dec
nop
enter
pop
iret
xor
dec
pop
movsl
pop
in
les
or
lods
xor
mov
fcoms
mov
sar
test
cmp
into
out
push
jge
xchg
fisubs
int3
add
lcall
cmpsb
aad
loopne
add
cmpsb
lea
pop
cmp
mov
dec
test
sbb
cld
sbb
scas
not
adc
xlat
dec
mov
js
mov
cmp
push
xchg
sbb
push
cwtl
dec
movsl
pop
sub
ljmp
lret
jp
mov
enter
mov
ret
aad
subl
data16
and
pusha
sahf
mov
cld
loopne
dec
adc
dec
lods
mov
push
cwtl
adc
jp
imul
mov
loop
pop
mov
aam
lcall
add
movsl
inc
mov
imul
inc
je
jno
clc
add
sbb
pop
cmp
push
imul
ja
mov
jge
cmp
aad
inc
in
cs
shl
stos
ret
mov
fs
xor
or
cs
pop
inc
pop
pop
pop
mov
stos
daa
mov
ss
cli
fldt
push
dec
repz
and
imul
shlb
fcmovnbe
or
out
push
or
jg
test
mov
mov
xor
xor
pusha
ret
lahf
outsl
lret
push
fisttpl
add
lret
mov
push
ljmp
sbb
dec
cltd
jecxz
test
pop
aam
mov
pop
pushf
imul
jg
pop
sbb
pop
mov
inc
into
jecxz
shl
lahf
jae
repnz
sbbb
leave
lahf
ret
mov
in
cmp
inc
xchg
pop
in
xor
sub
cli
test
inc
xchg
movsl
push
ret
pop
andl
sub
andl
mov
inc
mov
cmpl
jge
jmp
push
push
call
cmpl
jb
add
movl
andl
mov
inc
mov
cmpl
jb
jmp
push
call
cmpl
jb
mov
mov
mov
or
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
orl
mov
movzwl
sub
mov
xor
xorl
add
mov
lea
mov
adc
mov
adcl
xor
sbbl
add
orl
mov
notl
lea
push
adc
mov
orl
xor
orl
add
orl
push
or
mov
push
pushl
call
and
mov
movzbl
sbb
mov
mov
mov
movl
mov
mov
lea
orl
mov
sub
movl
movzwl
sbb
mov
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
addl
sub
movl
mov
movl
mov
mov
movl
mov
cmp
movl
je
mov
mov
xor
xor
lea
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jg
jmp
push
pushl
pushl
push
call
jmp
mov
xor
orl
div
mov
sbbl
mov
andl
xor
xor
sub
movl
cmp
movl
jne
mov
xor
mov
sub
mov
or
mov
xor
xor
sbbl
add
sbbl
add
mov
movl
cmp
jae
xor
lea
mov
mov
xor
add
lea
movl
mov
mov
mov
cmp
movl
jbe
addl
addl
jmp
decl
addl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
pushl
push
call
jmp
mov
xor
adcl
inc
incl
subl
add
cmp
jb
notl
mov
add
mov
adcl
xor
sbbl
mov
sub
add
sub
mov
sbbl
xor
xorl
sub
subl
ror
xor
mov
xor
add
sub
imul
mov
mov
movl
cmpl
je
cmpl
jb
jmp
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
jmp
iret
xor
jne
jns
cmp
mov
lret
and
sahf
jnp
xorl
sti
and
repnz
add
insl
push
rcll
mov
imul
cmpsb
hlt
mov
xchg
pop
xor
push
or
mov
orl
scas
push
test
sub
pop
jne
and
mov
push
aad
xor
pusha
fisttpll
test
xchg
clc
insb
out
jno
mov
cmpsl
jb
iret
call
daa
jp
or
sbb
nop
pop
adc
add
mov
or
sahf
notb
stos
adc
pop
pop
or
pop
lods
adc
mov
pop
jmp
sub
add
test
test
lea
ljmp
add
aam
or
aaa
adc
cld
ror
or
mov
jnp
lds
lods
inc
js
lea
mov
jbe
je
sbb
cmp
iret
sti
push
cmp
out
xchg
ss
int
imul
sbb
sub
nop
push
mov
test
sbb
dec
jnp
stc
repz
fidivs
mov
mov
xor
in
jl
or
inc
repz
jl
jae
loopne
adc
fisubrs
inc
test
mov
sbb
push
push
loop
xchg
ljmp
xchg
pop
pop
add
adc
arpl
or
cmpl
aaa
nop
xchg
ret
pop
in
inc
ljmp
push
inc
inc
jecxz
xor
rorb
inc
pop
rol
xor
stos
jno
mov
or
add
adcb
xor
cmp
dec
pop
in
and
jno
push
cmp
pushf
xor
jecxz
je
or
addl
in
mov
out
or
xor
sbb
das
cmp
push
scas
adc
repz
fdivs
pop
decl
adc
jnp
int
das
pop
push
cltd
mov
cmp
and
insl
adc
cmp
mov
je
lret
enter
loop
add
jo
mov
adc
fs
clc
push
push
jae
sbb
enter
aaa
dec
xlat
mov
pop
das
clc
and
mov
inc
loop
arpl
mov
clc
push
or
cmp
fs
dec
inc
xorb
cmpsb
xor
cmc
push
pop
lea
adc
jo
iret
adc
dec
mov
xchg
lret
popf
push
dec
ss
inc
push
movsb
mov
xor
rep
insl
fnsave
push
or
sbb
push
and
jecxz
int3
test
imul
inc
adc
ss
adc
jne
inc
and
push
cmp
and
add
movsl
xchg
xor
sub
mov
cmc
pop
test
lahf
popa
or
mov
fiaddl
leave
pop
and
mov
sbbl
ret
xor
jne
xchg
rcl
xor
in
test
lahf
sbb
scas
jle
jl
sbb
sbb
or
lret
jecxz
mov
sbb
sbb
xor
popf
out
lods
clc
dec
mov
xor
stc
inc
mov
mov
sub
stos
push
daa
push
lods
insl
jno
dec
xchg
mov
pop
xchg
and
aam
add
sub
inc
adc
movsb
lods
jns
bound
sub
sbb
cmp
jl
push
sar
repz
adc
lret
pusha
call
in
sub
xor
mov
imul
lds
mov
iret
jle
pop
ret
arpl
loopne
aam
loope
sarb
shlb
rorl
aam
inc
fs
push
add
ret
inc
xchg
mov
cmp
outsl
test
mov
pop
divl
adc
movsb
or
dec
bound
and
jbe
icebp
pop
sub
fucomi
add
in
mov
inc
add
inc
ja
pop
adc
sbb
enter
sbb
lea
push
mov
inc
shrb
xchg
cmpb
shrb
fucom
pop
xor
adc
jmp
add
jecxz
lock
and
lret
je
inc
adc
pop
xlat
mov
test
lds
sbb
ret
fdivrs
pop
inc
adc
test
jbe
notl
push
jb
test
inc
dec
js
out
push
insb
gs
fsubr
test
aad
cmp
xchg
sub
aas
cltd
sbb
mov
and
add
fldl2e
mov
sub
and
enter
popf
inc
js
std
inc
je
sti
int
std
inc
ja
add
sub
in
ret
mov
stc
inc
dec
or
std
jmp
dec
cmp
jge
push
add
xlat
xchg
adcb
call
arpl
sub
or
iret
mov
cmc
mov
int3
enter
push
mov
dec
sbbb
mov
shrb
test
jge
into
cmp
fcmove
fnstsw
pop
xor
sahf
sub
gs
aaa
sub
stos
xor
addr16
push
mov
jmp
jmp
fmulp
inc
rolb
xor
mov
lret
movsb
adc
or
mov
hlt
test
mov
pop
gs
xor
xlat
out
push
inc
inc
jecxz
or
pushf
aad
sbb
inc
xor
dec
mov
or
loop
xchg
fisubl
or
fiadds
add
rorl
shrb
lcall
xchg
scas
cmpsb
imul
mov
lahf
dec
adc
xchg
arpl
fs
shll
lods
jnp
add
or
adc
movsb
cld
and
fldt
dec
popf
push
inc
ja
fisttpl
pop
lret
mov
in
add
xor
rcrl
adc
pop
fchs
sti
push
pop
daa
xchg
loop
jp
fsubrl
sub
or
mov
jmp
out
mov
mov
jle
pop
cld
pop
inc
cmp
or
xorl
mov
scas
add
jecxz
cli
mov
cs
decb
test
xorl
popf
jl
int
jle
inc
outsb
dec
jg
sub
mov
or
push
popa
mov
pushf
or
jne
imul
fidivl
pop
sbb
or
push
push
jge
dec
out
test
inc
test
js
inc
sbb
pop
mov
or
pop
or
pop
mov
push
ja
adc
sbb
mov
sub
sub
movsb
orb
mov
cmp
sbb
push
jecxz
cwtl
xchg
movsl
and
sbb
je
mov
dec
in
scas
sbb
cmpsb
out
cmp
hlt
movsb
nop
xor
mov
fs
ljmp
pop
jno
pop
popf
push
or
test
sbb
jne
mov
stc
es
and
adc
fstpt
in
ret
ss
sub
and
shll
or
xchg
mov
das
in
loope
add
mulps
pushf
jg
or
stc
mov
inc
std
das
popa
inc
out
jae
cld
jp
aam
lahf
dec
loopne
sti
xchg
mov
hlt
faddl
mov
inc
bound
idivb
dec
stos
cmpsb
dec
aaa
dec
inc
jno
and
pop
mov
test
cmpsl
push
ret
jne
dec
jns
mov
lods
flds
jo
cld
movsb
jecxz
jae
dec
fdivr
mov
sarl
xchg
and
sbb
and
inc
out
nopl
lods
aas
daa
xchg
dec
in
adc
ds
add
call
aas
cmp
in
movmskps
adc
sarl
test
sub
leave
movsl
mov
sbb
cmc
stos
push
dec
mov
lahf
cs
jnp
inc
xlat
sbb
mov
jg
data16
mov
lods
mov
pop
loop
fisubs
sub
out
push
mov
xor
popf
lcall
in
cwtl
cmp
sub
repz
push
rcl
push
insl
push
mov
xor
mov
dec
or
mov
xchg
fdivrs
and
sbb
rcrl
loope
xorl
stc
fldt
jnp
jnp
roll
xchg
xchg
adc
push
loop
jl
popf
cmc
cli
dec
into
mov
test
jmp
mov
push
les
inc
js
pop
mov
lret
int
pop
movsb
xor
pop
insb
pop
ret
cltd
fistl
jg
add
or
sub
or
jecxz
in
jmp
test
push
iret
sub
inc
cmp
sbb
inc
and
nop
repnz
fdivrs
mov
inc
pop
pop
mov
hlt
fucom
pop
jmp
popa
dec
jne
insl
test
pop
aaa
mov
iret
mov
shlb
fwait
test
in
cld
stc
or
pop
inc
or
inc
adc
imul
jo
add
pop
popf
mov
or
sar
jp
out
ffreep
addl
adc
push
xchg
jmp
jnp
inc
bound
leave
sub
push
xchg
setne
mov
insl
test
pop
pusha
xchg
add
mov
adc
imul
insb
push
xchg
jmp
xchg
ja
outsl
and
and
shrl
add
cli
imul
jecxz
adc
les
out
popa
mov
movsl
sbb
out
into
pop
cmp
test
stos
push
or
mov
test
movsb
test
adc
loope
std
mov
repnz
scas
cs
mov
out
repnz
mov
mov
and
sahf
fadds
cmc
add
pop
je
and
stos
sbb
arpl
jmp
and
ds
xchg
mov
mov
xlat
bound
jg
or
xchg
push
das
xor
mov
xor
dec
adc
cmp
cmp
push
adc
pop
call
xlat
leave
jmp
out
fucomip
or
adc
jbe
push
push
dec
sarb
xchg
pop
pop
les
imul
icebp
shll
push
adc
enter
mov
pop
or
sbb
cmp
pop
js
push
pop
leave
push
pusha
loopne
push
mov
sub
rclb
and
inc
test
cld
jae
lds
jmp
pop
or
lcall
jmp
ds
shll
mov
cmp
mov
je
add
insl
adc
xchg
ss
pop
xor
lea
std
fiaddl
add
stos
je
js
ljmp
lods
cmp
mov
and
add
sbb
das
sbb
push
xlat
outsl
mov
cmc
push
xor
and
idivl
scas
dec
mov
push
jp
imul
inc
jl
push
sti
jle
das
lods
pushf
int
call
mov
fldenv
sub
lods
sbb
loope
sbb
div
jb
xchg
dec
pop
pop
cmp
pusha
pop
mov
xchg
adc
sub
jno
xchg
mov
pop
push
xor
push
mov
xchg
movsb
sub
lods
add
sub
mov
sub
adc
push
or
xchg
pushf
insl
cmp
repz
mov
adcl
push
popf
out
xchg
xchg
cmp
pop
dec
stc
ret
rclb
mov
sub
xchg
sbb
outsl
xchg
xchg
mov
shl
pushf
and
bnd
std
cmp
enter
out
inc
movsb
enter
aas
xor
lret
push
pop
mov
dec
mov
lea
mov
push
sbb
lret
test
sbb
push
jmp
testb
sbbl
shrb
ja
or
pop
cmp
sbb
push
sbbb
inc
pop
mov
push
clc
push
pop
orb
fcoms
ret
inc
je
sub
push
xor
in
sbb
loope
sbb
jbe
xchg
mov
decl
mov
pop
popf
adc
mov
idivl
sub
lock
xlat
jle
jl
sbb
adc
int3
inc
subl
mov
mov
rorl
jmp
lret
pop
mov
call
dec
fmull
dec
fs
push
mov
jbe
pop
lea
insl
push
xchg
sub
xor
pusha
push
mov
xor
faddl
mov
lods
movsl
movsl
aas
mov
push
cmpsb
push
fabs
pop
mov
cltd
enter
popa
pop
pushf
mov
jnp
outsb
push
lock
add
fnstsw
mov
cmp
cmpsl
or
mov
sti
adc
bound
pushl
test
pushf
jns
incb
out
xor
test
lods
jae
nop
push
cmp
or
xchg
cmp
rorl
add
mov
lods
fldt
pop
cltd
mov
push
xchg
jae
dec
mov
add
fucomip
insl
and
cmpsl
pop
call
xorb
fldt
pop
dec
cwtl
mov
lcall
andb
aas
pop
jg
push
gs
xchg
je
pop
aad
movsb
scas
mov
xor
cmp
pop
ds
outsl
mov
sbb
xor
inc
xchg
fcompl
jecxz
arpl
lock
xor
mov
mov
sahf
loopne
and
gs
cwtl
push
mov
lods
jb
aas
dec
stos
gs
jmp
inc
mov
notl
push
jecxz
inc
cmp
rorb
push
rcrb
mov
out
jmp
movsl
and
icebp
test
popf
int3
jecxz
sbb
pop
dec
icebp
jecxz
test
xor
sub
xor
pushf
int3
jge
inc
dec
and
jae
jno
push
faddl
addb
dec
icebp
adc
xor
imul
mov
ror
xchg
push
mul
adc
xchg
cmp
stc
or
dec
jo
or
aad
lock
les
mov
pop
jp
adc
jp
dec
out
xchg
sbb
mov
adc
outsb
ret
addb
test
push
push
jle
mov
roll
fstl
xor
and
xchg
rcr
and
dec
ret
iret
popf
lret
addr16
loopne
out
sbb
mov
ffreep
mov
insb
and
push
das
stc
mov
mov
dec
adc
int
lods
push
mov
sub
hlt
fsub
aam
in
cltd
push
cmp
xchg
les
ljmp
dec
xor
jo
icebp
aad
pop
or
mov
jl
insl
jmp
sbbb
in
cltd
cmp
dec
ja
js
aaa
push
xchg
xor
mov
cld
jns
cmp
je
pop
pop
jecxz
jb
jb
outsb
jnp
lods
mov
adc
dec
dec
jns
daa
jae
lret
movl
cmp
sbb
out
test
out
and
push
fildl
outsl
stos
in
mov
or
inc
mov
fmuls
jnp
dec
and
loope
jo
cmp
loope
arpl
sbb
lock
lret
rol
cmpsb
scas
add
inc
bound
test
in
pop
jne
mov
mov
pop
out
pusha
dec
mov
mov
cmpsl
loope
std
adc
add
xor
aaa
repz
mov
ljmp
jno
je
xorl
mov
repnz
sarb
mov
fcmove
stos
sbbl
loop
and
add
aam
cs
mov
loope
sub
cld
lock
push
jle
ret
stos
push
test
arpl
and
push
scas
lock
dec
fmull
mov
dec
out
sub
shll
aam
dec
cmp
sub
out
lea
je
xchg
push
lds
pop
xchg
insb
or
inc
and
or
jae
out
and
std
scas
shl
xchg
inc
fs
cs
jl
rorb
or
xor
push
in
cmp
sub
das
jecxz
pop
mov
ret
or
mov
lcall
jl
ss
lea
cmp
lods
scas
pusha
push
and
int3
inc
dec
clc
mov
lods
or
in
stc
mov
or
ss
push
mov
movsb
push
fnsave
xor
fwait
out
sub
push
and
repnz
pop
sbb
fnstenv
cltd
adc
sbb
repnz
sbb
add
test
inc
and
add
dec
push
cmpxchg
push
stos
mov
cs
mov
mov
enter
add
xor
dec
add
mov
pop
cmp
clc
cltd
mov
sbb
xchg
xor
insb
jne
xor
adc
inc
pop
add
dec
xor
das
xchg
mov
shll
inc
sub
daa
roll
cmp
sbb
mov
movsl
mov
xor
jge
mov
in
enter
ret
lret
in
mov
lea
in
gs
jns
sbb
test
push
shlb
dec
mov
sbb
mov
sub
pop
pusha
pop
enter
jo
mov
cmpsl
xchg
jne
lret
xor
xchg
fcoml
sub
adc
or
dec
addr16
mov
shlb
in
mov
outsb
cwtl
cmp
push
fucom
jno
pop
push
outsl
mov
mov
idivb
enter
dec
into
cmp
stos
push
das
addr16
shlb
xchg
lret
loope
lahf
data16
scas
xchg
cs
in
mov
loopne
sub
mov
jbe
sub
dec
adc
lds
pop
orb
dec
lods
std
jo
pushf
dec
sbb
add
mov
push
pop
xor
and
jmp
dec
scas
xchg
xchg
out
mov
repz
or
jbe
cmp
xor
jg
jbe
test
or
and
pop
push
cmpsl
addl
xor
xchg
bound
or
pop
ficompl
xor
loopne
mov
xchg
sbb
cmpsl
sbb
adc
sbb
dec
sub
test
out
out
gs
jmp
pop
push
cmovno
in
add
sbb
ficomps
shll
out
popf
dec
dec
push
stc
rcrl
sti
jg
xor
cmpsb
mov
out
in
sbbb
xor
cmpsb
ror
dec
jp
or
loopne
pusha
rcll
mull
push
mov
xchg
cmc
pop
mov
and
sar
xorb
ret
and
jg
pop
test
push
mov
sbb
fisubrl
mov
mov
dec
ret
add
sbb
insl
aaa
and
in
sbb
jmp
fcompl
in
xchg
dec
ja
and
imul
and
clc
rep
xor
jnp
movsl
push
fmull
jb
xor
int3
out
xor
xchg
mov
test
cmpsl
xor
jne
push
loopne
push
jecxz
push
sbb
out
lds
and
or
cmp
sbb
outsb
scas
loopne
mov
mov
sub
jmp
mov
or
xor
in
mov
ja
mull
adc
inc
movsl
inc
pop
gs
decb
pop
lcall
jp
pop
or
inc
les
pop
mov
mov
jnp
add
jg
leave
xor
popf
or
ss
ds
mov
sub
inc
stos
stos
sbb
popf
jbe
jno
xor
stos
jns
lahf
adc
adc
lcall
iret
jl
in
mov
or
push
in
cmp
outsb
mov
mov
mov
add
aad
inc
or
push
xchg
jae
popf
sub
mov
inc
sub
dec
xorb
add
push
xor
inc
and
pusha
outsl
and
mov
push
xor
and
lret
test
adc
ret
add
inc
mov
nop
xchg
push
inc
test
sub
push
pop
cmp
xor
xchg
sub
mov
add
adc
nop
lock
ret
pusha
fldl
adc
js
inc
aas
and
repz
sbb
lods
pusha
cmp
xor
sbb
xchg
shl
rclb
rcll
loop
push
push
pop
adc
cmp
mov
adc
call
and
mov
pop
in
or
pop
pop
fnstsw
lock
cwtl
mov
mov
cmp
mov
cmp
outsl
dec
add
aas
xchg
jo
xchg
push
mov
aad
sahf
add
xchg
aas
push
pop
dec
push
dec
daa
lcall
imul
clc
dec
mov
push
iret
xchg
les
test
xchg
cli
xchg
push
pop
int3
icebp
int3
lret
sahf
and
aad
cmp
push
cmp
adc
pop
shll
jno
inc
cmpsl
icebp
jge
jns
imul
pop
aad
icebp
arpl
mov
and
test
mov
xchg
cmp
push
in
fistpl
sbb
mov
jnp
push
dec
pop
pop
subb
into
nop
jmp
ljmp
push
fadd
push
inc
je
stos
dec
imulb
aaa
mov
mov
mov
pop
push
les
imul
cmp
sub
mov
push
std
imul
or
ret
mov
dec
jbe
xchg
cmc
add
lret
in
rclb
mov
mov
jl
mov
je
xchg
xor
orl
stos
cmp
adc
dec
mov
pusha
iret
ljmp
mov
outsb
push
cmp
lcall
push
cltd
aam
inc
xlat
out
mov
fadd
daa
add
rcr
lods
imul
jg
rcrl
mov
clc
in
shlb
rolb
push
scas
pusha
sub
mov
sahf
daa
mov
pop
adc
sbb
cmpsl
mov
mov
andb
testl
pusha
pop
and
out
jb
xor
dec
pop
fldt
cmp
push
adc
mov
jne
mov
mov
das
and
mov
dec
add
into
test
cmpsb
pop
dec
mov
clc
mov
icebp
aaa
nop
jmp
add
sahf
push
and
pop
push
outsl
jne
xchg
cmp
push
xchg
add
or
call
popf
ljmp
xor
or
adc
mov
cs
add
add
xchg
cmpsb
mov
imul
push
mov
or
push
ss
lods
in
lds
mov
mov
push
ja
pusha
xchg
jmp
push
cltd
jae
inc
push
add
enter
stc
mov
xchg
xor
outsb
imul
iret
push
data16
adc
test
into
sbb
dec
rclb
sub
sub
add
stos
mov
mov
xor
sbb
into
pop
pop
loope
lcall
out
and
adc
aaa
dec
dec
push
push
lcall
mov
rorl
inc
xchg
jb
data16
test
leave
dec
in
cs
mov
add
cmc
pop
mov
jb
xchg
shr
das
xchg
cmp
dec
and
test
iret
inc
out
mov
xor
loopne
jo
mov
dec
jnp
and
in
pop
or
mov
and
or
push
jle
popa
add
lea
cmp
push
adc
in
iret
ja
mov
mov
xchg
xchg
das
int3
mov
inc
daa
adc
shll
aas
and
xchg
pop
lods
jecxz
into
xor
jbe
cmp
and
fcoml
jp
cmc
pop
fdivrs
ret
js
jmp
lcall
mov
pop
push
jl
mov
dec
inc
xchg
push
dec
xor
popf
cli
cmp
lret
jb
or
lret
xor
add
icebp
enter
push
sbb
fsubp
rcr
add
cmpsl
rclb
gs
mov
shlb
push
movsb
aas
dec
jge
loop
xchg
mov
inc
dec
mov
inc
loope
or
addb
sbb
cmpsb
push
xlat
xchg
shl
mov
ror
pop
or
nop
cs
out
int
sbb
sub
mov
cmp
dec
mov
pop
inc
cmp
outsl
cli
fbld
imul
and
fwait
cmp
dec
push
pop
push
pop
out
lret
insb
inc
aad
xchg
add
outsb
sahf
sub
or
cmpsl
add
push
je
mov
push
outsl
lods
lea
jge
movsl
lahf
jno
push
mulb
mov
mov
adc
fs
pop
das
inc
fcom
bound
jmp
icebp
mov
loope
pop
sti
mov
insb
jmp
xor
lods
sahf
add
shrb
aaa
je
loopne
bndldx
mov
dec
scas
mov
imul
fidivrl
mov
mov
fildll
sub
ss
test
mov
movsb
mov
inc
std
nop
jnp
push
imul
adc
push
mov
xorl
push
test
stos
cmpsl
jne
shlb
cs
jb
xchg
push
pop
subl
mov
xchg
xor
jg
lds
and
mov
lcall
hlt
sub
outsb
xor
repnz
gs
das
push
pop
ret
loopne
sub
dec
jecxz
jno
into
xchg
lods
movsb
jae
adc
outsb
inc
xchg
ss
rsqrtps
aas
add
ret
inc
sub
jmp
mov
mov
xor
cmp
pop
cwtl
out
and
add
xchg
sbb
push
mov
aam
and
loope
cmpl
fs
pop
lret
pop
sarb
inc
mov
std
and
adc
jecxz
push
jns
pop
pop
sub
test
mov
popa
outsl
xor
cmp
jb
fimuls
stc
pop
shll
push
jmp
jle
jbe
imul
addl
fdivrl
push
loope
rcr
jp
divl
popa
leave
mov
mov
adc
jle
scas
es
xor
mov
ljmp
fimuls
popf
in
pop
and
iret
xor
xchg
or
dec
sub
xor
mov
mov
sbb
cmp
mov
push
out
sub
pop
test
or
loopne
inc
testb
mov
push
loope
jne
cmpsl
pusha
test
mov
cmc
push
mov
xor
mov
cmpsb
sub
cmp
sbb
in
xor
cli
icebp
add
or
pushf
jnp
inc
mov
jecxz
shl
pop
cwtl
js
sub
mov
sarb
pop
sbb
jmp
mov
push
mov
dec
iret
nop
pop
out
pop
mov
pop
ljmp
ret
inc
push
mov
pop
xchg
je
shl
addr16
call
lcall
das
inc
dec
lret
mov
dec
xchg
sahf
mov
lods
getsec
mov
sub
jo
jp
adc
dec
adc
sub
fsts
mov
push
popa
adc
push
shrl
dec
stos
push
add
es
dec
stc
or
insb
fnsave
mov
adc
out
jne
jl
inc
adc
cld
fcomps
mov
xor
dec
ja
mov
rcll
push
dec
jns
rclb
jae
stos
test
sub
sub
ja
dec
cmp
sub
inc
lods
push
and
mov
and
mov
ljmp
gs
cmp
or
popa
jno
mov
ljmp
ficoml
popa
pop
lea
xor
negb
pop
inc
inc
stos
push
jle
dec
enter
hlt
jb
push
mov
dec
std
push
or
sub
mov
rcll
int
fmulp
das
mov
out
arpl
aas
or
jl
bound
mov
mov
lret
shll
sbb
gs
clc
jg
mov
dec
cmp
and
test
lret
addb
popa
or
and
push
das
jecxz
mov
jl
inc
loope
stc
mov
cmp
repz
fwait
adc
sub
adc
xchg
movsb
sti
cmp
test
les
push
popaw
divl
je
test
aad
push
pop
jl
add
int3
std
xchg
mov
outsl
jmp
push
mov
dec
aam
xchg
fwait
mov
add
int
xchg
xchg
push
sbb
clc
mov
call
sub
mov
stc
cltd
test
or
insl
cli
jno
or
mov
ret
ds
lahf
dec
aad
push
sbb
scas
mov
aaa
dec
int
pop
ss
pop
dec
inc
out
fsubrl
mov
lret
jmp
clc
pop
aas
mov
mov
fcmovbe
stos
sbb
sar
lret
mov
lcall
pop
ret
push
shlb
dec
insl
adc
xorl
icebp
movsl
pop
test
push
dec
pmaxsw
fwait
mov
adc
jo
push
cld
cmp
pop
pop
pop
xorb
sarl
std
jmp
arpl
test
inc
xor
aas
scas
push
dec
mov
inc
mov
ss
inc
or
mov
or
scas
ret
cmp
cs
addr16
in
xchg
adc
push
fimuls
inc
popa
and
ficoml
xorl
popf
inc
shlb
dec
dec
add
xlat
int
ds
and
iret
daa
mov
jmp
jb
push
pushf
mov
and
dec
mov
call
sub
and
and
sbb
inc
pop
les
xchg
les
jnp
mov
mov
aad
lret
icebp
mov
dec
or
popa
lea
stc
ds
sti
push
sbb
cmp
pushf
lock
insl
xor
cld
stc
jg
lods
fwait
sbb
movsb
sub
mov
fnstcw
push
cli
imul
dec
cmp
mov
push
add
popf
std
sti
mov
out
xor
lahf
icebp
xchg
fdivrl
enter
pop
outsl
jo
lcall
pop
pop
mov
cmp
jp
cmpsl
outsb
decl
adc
jmp
dec
outsb
dec
dec
cmpsl
stos
dec
sti
mov
inc
jnp
dec
mov
mov
int3
sbb
push
and
xor
and
push
in
cmc
or
mov
adc
jnp
pop
xchg
repnz
imul
icebp
mov
popa
push
mov
adc
mov
jmp
cmp
add
sub
xchg
add
jge
cwtl
cmp
fwait
mov
lods
sahf
dec
mov
mov
mov
xlat
addr16
inc
ljmp
test
imul
jbe
icebp
mov
int3
add
movb
in
imul
mov
pop
pop
inc
es
repz
je
mov
pop
std
or
rcll
mov
lea
adc
sub
jmp
fistps
loop
test
mov
imul
fs
lahf
xchg
test
ds
lahf
mov
add
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
jmp
add
test
pop
add
push
popf
and
xor
mov
out
sarl
sahf
jnp
pop
adc
enter
loop
fwait
inc
aad
int
or
arpl
das
jb
test
sub
xchg
int
stos
dec
in
cltd
addb
fcomi
and
mov
add
mov
mov
add
mov
dec
imul
in
and
loope
lret
std
in
jmp
cmpsb
and
movb
push
lea
push
xor
insl
hlt
das
jnp
mov
out
cmp
jnp
cld
jnp
ss
lret
shrl
das
xchg
rolb
pop
xchg
pusha
mov
pop
mov
loop
pop
sbb
inc
push
cmpsb
mov
dec
dec
dec
fisubrs
bound
in
xor
or
lahf
cld
fmulp
insb
es
xchg
or
add
jmp
sbb
sahf
xchg
fnstenv
pop
adc
and
test
int3
or
jo
mov
sahf
pop
out
pop
jnp
rcrb
adc
fbld
in
xchg
fldl
fucomp
scas
jno
jle
mov
and
pop
jae
jae
je
fldt
imul
xchg
orb
stos
dec
popf
ret
dec
mov
clc
ja
sahf
pushf
mov
xlat
rcll
fmull
xchg
xchg
push
sarl
sbb
cmc
lahf
fcmovnb
jne
xchg
add
add
les
repnz
mov
jmp
inc
dec
fdivs
shrl
mov
ja
dec
ret
ss
sbb
add
stc
inc
popf
pusha
pop
mov
mov
sub
jb
insb
sbb
add
xor
lods
adc
and
ds
iret
mov
add
adc
call
fsubrs
mov
arpl
ret
cmp
in
jb
cmc
push
push
xchg
jnp
mov
mov
scas
add
mov
aas
mov
fisubrs
ja
cmc
push
std
cli
jecxz
pop
xchg
dec
add
loopne
mov
into
orl
popa
aam
xor
lods
jmp
mov
loop
xchg
pop
sbb
add
mov
and
scas
cmc
mov
fs
mov
xor
in
je
cld
mov
in
jg
or
dec
leave
outsb
cmpsl
mov
pop
imul
test
movsb
popa
sbb
ja
xchg
mov
inc
das
fldenv
js
lock
inc
mov
add
push
mov
inc
sbb
adc
cmpb
xchg
pop
dec
sahf
jge
push
repnz
mov
in
dec
fsts
mov
pushf
leave
test
cld
out
xor
mov
or
jae
ja
lcall
jmp
stos
xchg
cwtl
stos
adc
minps
insl
mov
fidivl
adc
dec
stos
mov
push
cwtl
fldenv
xchg
imul
out
xor
pop
call
mov
ret
cmp
jl
ljmp
jle
adc
cmp
mov
movsb
xor
mov
fnsave
adcl
fnstenv
inc
loop
cltd
loopne
push
jns
push
cmp
and
jns
pushf
mov
cmc
pop
insb
scas
loop
sub
js
std
pop
sbb
pusha
test
sub
dec
adc
sub
and
sbb
sub
xchg
inc
push
ljmp
push
or
jg
push
add
xchg
mov
add
stos
sbb
or
int3
push
orl
sbb
mov
gs
jnp
dec
or
scas
inc
orl
or
push
mov
cmp
xchg
sbb
jg
mov
pushf
adcl
adc
cmp
xchg
shl
xor
popa
and
dec
mov
xchg
push
scas
inc
jge
xlat
fnsave
ss
push
fistpll
mov
and
dec
mov
inc
or
mov
sbb
pop
dec
sbb
xchg
daa
mov
adc
xchg
ret
stc
lods
in
scas
push
sahf
into
je
rorb
fidivrs
and
adc
insb
int
out
adc
add
inc
enter
std
or
mov
outsb
lods
lret
xor
and
jge
cmc
cld
push
gs
int
call
sub
push
xlat
movsl
mov
pushf
imul
pusha
xchg
arpl
adc
stos
in
imulb
mov
daa
push
adc
dec
jecxz
iret
add
aas
cs
sbb
add
pop
pop
push
push
push
pusha
ds
jle
movl
sub
xor
xchg
mov
or
aaa
hlt
test
rol
dec
bnd
xchg
or
cmp
stc
outsb
in
scas
sahf
aad
dec
cmp
mov
int3
cmp
dec
in
out
jns
sub
mov
dec
hlt
xlat
mov
cltd
in
enter
cmp
jecxz
inc
test
dec
sbb
push
lret
sti
outsl
lods
bound
adcb
pop
in
out
sbb
lods
jp
jno
jp
xchg
sub
jmp
ja
push
mov
dec
addr16
mov
sbb
fdivrl
mov
nop
lea
mov
xor
popf
adc
ja
cmpsb
sbb
sahf
call
jecxz
out
clc
xchg
or
adc
push
rcll
in
or
insl
test
fistl
mov
mov
adc
and
mov
xchg
mov
xchg
orb
mov
je
jp
paddusw
adc
mov
sti
push
pop
inc
pop
xchg
push
cmpsl
pusha
xor
push
add
mov
mov
mov
xor
popa
inc
andl
lahf
sbb
das
pop
xchg
dec
inc
cmp
test
sbb
arpl
rclb
fwait
cmp
fsubr
mov
sbb
fbld
mull
or
mov
sub
arpl
sub
push
in
pop
in
flds
in
sbb
mov
aaa
sub
call
hlt
push
rolb
lds
cld
push
lahf
insl
adc
pop
andl
jecxz
mov
dec
movsl
inc
xor
out
inc
pop
das
mov
and
adc
xor
push
or
mov
out
popf
jl
addl
and
fsubrs
xor
xor
adc
outsl
bnd
mov
xchg
outsb
out
adc
or
repz
mov
lods
cltd
mov
ss
dec
jmp
repz
jecxz
cmovne
inc
push
lret
xor
xchg
dec
inc
lock
adc
push
ret
push
adc
shrb
icebp
test
in
out
push
inc
lds
movsb
imul
lahf
lock
jl
push
xchg
dec
shlb
mov
inc
pop
shlb
dec
jmp
xchg
add
and
ret
aad
cli
mov
hlt
int3
xchg
imul
or
into
lret
sub
nop
and
hlt
xor
sub
add
jl
out
notb
xor
dec
add
and
int
mov
dec
jl
aaa
push
mov
fidivs
mov
push
jno
or
ret
lcall
mov
icebp
sbb
into
repnz
scas
xor
pusha
lret
outsl
and
ficoms
mov
loopne
ds
insl
and
mov
mov
dec
adc
push
out
clc
or
dec
inc
inc
stc
mov
std
add
pop
popa
sbbb
push
sub
mov
ret
mov
mov
xor
int3
jno
mov
jne
shll
mov
lods
adc
jmp
cli
lea
jp
sarl
adc
outsl
sub
out
loopne
ret
mov
cmp
mov
adc
call
std
inc
aas
sub
out
dec
push
and
cmp
dec
insb
sub
into
jecxz
ret
out
and
cmpsl
test
fisubl
in
fsubrs
xor
shrb
pop
and
cs
cwtl
dec
loop
jne
and
inc
aad
outsl
mov
ficoml
fdivrl
xor
ret
mov
adc
into
fstpl
sti
xchg
add
ss
push
sbb
push
mov
mov
ret
and
xchg
mov
ficomps
sbb
adc
bound
mov
jne
mov
add
dec
iret
fstpl
stc
mov
sahf
scas
xchg
mov
jno
add
gs
call
pop
push
dec
fldcw
adc
fldcw
inc
push
mov
jbe
sub
sbb
in
xor
dec
jg
fidivrs
dec
push
mov
cmp
mov
push
mov
idivb
outsl
push
mov
int
mov
outsb
cmp
jbe
adc
mov
mov
xchg
in
imul
jmp
add
jle
cmp
dec
rcrb
js
outsb
pusha
push
stc
push
out
jle
daa
insb
mov
jp
xchg
and
push
iret
lods
push
ret
and
negb
loope
xchg
pop
sub
loopne
sbb
stc
stc
out
jnp
jno
iret
xchg
pop
jb
jns
call
inc
das
out
sub
movsl
push
out
cwtl
ds
mov
loopne
ja
inc
les
mov
pop
cmc
xor
aam
ret
sbb
cmp
mov
mov
test
cmp
cs
rcll
lcall
sub
jg
xor
rcrl
push
leave
inc
mov
pop
in
sub
in
es
push
jle
xchg
jecxz
push
xchg
and
inc
out
pop
sbb
testb
xchg
add
xor
lahf
nop
push
mov
cld
shlb
inc
fistpl
notl
cmc
lock
cld
push
shrb
cwtl
stos
push
out
aas
push
popf
mov
add
sub
mov
cvtps2pi
fistpll
or
jns
repnz
hlt
push
add
mov
dec
push
loope
loope
cmp
fisttpl
test
sub
incb
jp
sti
test
pop
movsl
aaa
pop
pushf
roll
inc
icebp
stos
pop
shll
sbb
out
pop
push
fisttpl
mov
clc
cmp
xchg
mov
imul
push
lods
test
aaa
inc
test
lahf
rorb
cmpsb
shlb
xchg
inc
mov
cmpsb
addr16
into
jbe
gs
and
xlat
and
movsl
in
sbb
into
sarl
adc
pusha
test
or
pop
je
inc
bound
and
add
lret
popf
push
or
mov
mov
mov
imul
dec
dec
lods
lds
enter
mov
inc
and
psllw
aad
imul
outsl
js
pushf
test
adc
add
cmp
es
adc
xor
js
adc
add
insb
dec
push
or
outsb
pop
cltd
outsb
and
push
push
adc
je
sbb
xchg
fistpll
xor
pop
dec
fwait
jge
inc
cmp
sahf
dec
inc
test
xorb
mov
mov
jne
jmp
push
lret
and
jp
push
add
and
add
das
mov
push
mov
movsl
vsqrtps
iret
roll
clc
fiaddl
hlt
pop
in
lret
jge
in
jns
test
mov
jg
data16
loop
xchg
shl
dec
xor
fucomp
push
xlat
mov
sbb
push
mov
xlat
mov
pop
push
sub
mov
stos
das
dec
push
sbb
and
jns
ret
scas
fidivrs
xor
dec
movsb
sbb
ds
cmp
loop
pop
mov
xchg
les
mov
shll
sbb
pop
dec
pop
filds
sbb
scas
popa
fstp
ret
fdivrl
jns
mov
xchg
push
jne
pop
iret
in
mov
and
xor
kmovb
ret
push
test
out
xor
mov
pop
and
iret
cwtl
inc
pop
xchg
into
je
mov
xchg
out
fdivrl
ljmp
cmpsb
sub
rcrb
ja
ret
mov
in
pushf
mov
and
in
sarb
into
add
fs
mov
push
cwtl
sarb
add
mov
push
ja
xchg
or
rorb
in
lds
sbb
sbb
dec
int
adc
jnp
lahf
faddp
cwtl
popa
test
repz
inc
mov
mov
roll
push
mov
mov
or
cmpb
add
in
adc
jmp
movsl
into
mov
jle
pop
or
movsl
push
aas
sbb
int3
mov
sbb
out
lret
mov
bnd
inc
and
rcr
and
mov
rcll
rorl
imul
xor
push
dec
es
pop
mov
cmp
dec
insb
imul
push
adc
dec
push
notl
gs
das
cmp
xlat
add
movb
push
push
leave
sti
push
mov
icebp
mov
nop
daa
xlat
mov
add
stos
sbb
adc
xchg
cmp
cmpsl
cmc
jmp
cmpsl
pop
js
mov
imulb
push
add
fs
inc
lret
jns
inc
leave
cltd
fistps
and
mov
lret
mov
scas
jmp
adc
loopne
sub
imul
gs
imul
in
adc
jle
xchg
icebp
loope
add
out
test
cltd
ljmp
or
lock
xchg
cmp
adc
push
in
xchg
lods
insb
dec
cmp
mov
push
lods
rcll
xchg
or
arpl
mov
mov
adc
and
push
fistl
xchg
xor
inc
ret
ss
loop
push
popf
cmp
sbb
add
std
inc
mov
rcrl
adc
push
xor
imul
adc
cmp
cmp
xorl
push
bound
push
psrlw
aaa
lcall
xor
hlt
cmpsl
popa
js
movsl
and
push
lea
mov
xlat
or
xor
lcall
sbb
repnz
add
int3
insb
cmp
popa
call
hlt
loopne
int
pusha
cmp
out
adcb
daa
sub
jnp
iret
popf
mov
xchg
test
add
mov
jae
mov
fs
stos
dec
cmp
cmpsb
push
fs
gs
rcrl
int
dec
scas
inc
addr16
and
pop
cmp
call
mov
or
in
xor
ret
jg
and
sbb
sub
dec
jb
push
fstpt
mov
xor
add
pop
mov
out
test
pop
adc
jp
addr16
cwtl
cltd
push
clc
test
sub
mov
js
mov
cmpsl
sub
daa
mov
int
cmp
and
daa
push
cmp
mov
mov
jmp
sub
mov
jnp
out
imul
lret
sub
sub
mov
out
ss
fstl
or
dec
ret
dec
shll
mov
xchg
icebp
adc
sbb
mov
xor
push
jg
gs
cmp
mov
aam
jmp
ss
loopne
and
lahf
dec
lahf
inc
out
in
ljmp
dec
mov
addr16
aas
fildl
jg
mov
add
xchg
movsl
sbb
jecxz
xchg
and
aad
mov
lds
icebp
out
pop
popa
jge
sbb
cmpsb
mov
enter
push
icebp
mov
lods
aas
xchg
push
pop
lret
icebp
dec
je
aas
adc
movsb
es
mov
and
rolb
bound
pop
stc
cmp
in
push
cld
out
lock
cld
lahf
ret
push
push
xchg
insl
or
cwtl
mov
inc
xchg
lock
push
inc
and
and
add
imul
daa
gs
xchg
jecxz
sbb
lods
mov
cmc
pop
in
mov
enter
test
pop
pop
jb
icebp
cs
add
jl
and
test
addl
lahf
dec
enter
lcall
sub
cs
ret
test
cmp
jp
je
ja
cmp
push
andb
mov
cmp
pop
loopne
adc
aas
into
sbb
dec
ret
repnz
frstor
test
mov
fmul
xchg
jg
hlt
rorl
imul
jle
push
js
jle
mov
push
inc
cltd
cmpsb
fnstenv
pop
or
iret
cltd
mov
mov
sbb
mov
push
pop
test
xorl
cmp
fcoml
sub
test
fwait
stos
dec
xchg
f2xm1
pop
pop
cltd
sub
push
pop
inc
test
ljmp
adc
jbe
fs
and
je
movsl
add
test
adc
jo
call
push
jmp
loope,pt
and
data16
or
aas
push
ret
mov
and
sti
mov
jbe
stos
jl
mov
xchg
mov
xchg
and
sarb
lods
aad
lods
incl
cli
and
das
fsubs
sub
push
cltd
lcall
je
mov
inc
jle
mov
jp
xor
cmpsl
inc
inc
scas
aaa
rcrb
pusha
xor
xchg
xor
test
mov
int3
cld
xchg
mov
imul
adc
inc
xchg
leave
lods
outsl
gs
mov
aam
mov
mov
dec
divb
fists
mov
shr
inc
mov
dec
popa
lret
and
inc
pop
cmp
into
sub
jp
sbb
imul
ja
add
int3
adc
pop
push
mov
mov
pop
push
cld
and
cmp
dec
lods
sbb
mov
cmpsl
xchg
pop
es
and
cmpsl
push
icebp
cmp
push
mov
push
lock
ret
lcall
decb
cltd
fdiv
push
in
nop
or
xchg
mov
or
idiv
ja
xor
jbe
stos
dec
mov
scas
push
repnz
test
stos
xor
mov
popa
and
data16
in
xchg
shlb
out
and
into
add
out
inc
push
out
inc
mov
inc
pop
lret
jg
lods
aad
js
xchg
inc
inc
sahf
lock
dec
and
inc
ljmp
jl
cmpsb
mov
rol
mov
movsb
ret
xchg
outsb
popf
in
mov
dec
mov
xor
and
popa
mov
add
ret
xlat
lret
dec
xor
add
sbb
mov
data16
pop
jp
push
psraw
cmc
push
sarl
jecxz
xchg
mov
adc
push
fstpl
mov
lret
test
xor
pop
jle
sub
or
pop
shlb
ds
fs
test
or
das
xor
lock
insl
cmpsb
call
stos
cmp
ljmp
fcoms
in
inc
pop
adc
mov
and
jl
mov
insl
in
cwtl
fidivrs
repz
leave
out
push
pusha
shl
aad
adc
scas
mov
push
pop
enter
adc
xchg
inc
cmp
ret
xchg
aam
mov
sub
in
add
sti
out
inc
pop
les
push
xchg
leave
push
and
add
das
cmp
sbb
popf
lret
sbb
and
into
adc
xchg
pusha
lcall
mov
fidivl
loop
sahf
je
push
xchg
push
xor
or
and
leave
insl
jl
test
inc
cmp
mov
stos
or
testl
adc
pop
ds
arpl
mov
dec
addl
xchg
imul
dec
push
dec
ja
sbb
sarb
fs
inc
dec
mov
adc
clc
mov
push
mov
push
mov
and
shrl
cli
stos
fsubrl
mov
or
int
outsb
dec
jmp
jmp
cmp
mov
test
add
lret
lcall
push
test
jmp
es
pop
xor
orl
adc
dec
push
lods
cmp
xchg
dec
rol
insl
pop
lds
shrb
aam
sahf
addb
aad
push
xchg
mov
inc
pop
or
arpl
lods
mov
hlt
or
in
add
popa
popa
scas
xor
add
nop
callw
in
sbb
mov
scas
ss
xchg
jno
add
push
pusha
adc
pop
mov
lahf
cmp
mov
xor
jg
ficoms
mov
xor
outsb
jbe
imul
enter
inc
inc
sbb
pushf
fiadds
xor
sti
into
pop
mov
dec
or
test
xchg
and
int3
scas
popa
push
or
push
cmc
mov
mov
mov
fs
out
mov
aad
xchg
movsl
data16
xor
outsl
stos
xor
mov
xchg
test
lret
xor
push
sub
je
sbb
rcrl
mov
imul
rcll
jo
mov
and
jg
and
aas
add
xchg
mov
mov
add
int3
xor
sub
and
gs
cmp
or
and
push
push
cld
add
sub
outsl
mov
out
mov
insl
sahf
push
mov
rcrl
cmp
dec
inc
ficoms
outsl
lcall
jmp
mov
pushf
jne
pushf
pop
mov
mov
and
in
nop
mov
mov
xchg
in
mov
push
and
in
ss
lods
pop
divb
lret
xchg
aam
xchg
into
cltd
in
cmp
icebp
dec
push
addr16
pop
or
scas
insl
inc
outsl
pop
mov
xor
xor
lret
neg
adc
jle
mov
adc
sub
mov
aas
and
popa
cmp
lods
test
mov
sahf
sub
dec
int3
ja
jmp
push
icebp
into
cmp
inc
lock
dec
mov
xor
jae
xor
in
fisttpl
cwtl
pop
out
fldt
xchg
push
sbb
xchg
andl
leave
cmp
xchg
mov
lret
xchg
sbb
cmp
sub
cmp
mov
push
mov
incl
rcrl
sub
sbb
dec
adc
cmpsl
int
loop
add
push
cmc
jb
sbb
adc
jns
imul
ja
mov
inc
lret
ja
add
push
les
andb
sbb
fwait
and
and
stc
roll
sbb
loopne
push
xchg
mov
xchg
filds
jg
pop
sub
fs
int3
sti
roll
jbe
cwtl
xor
pop
dec
mov
daa
jo
test
xchg
mov
lret
ret
jmp
and
adc
push
dec
pop
addb
mov
jbe
add
mov
test
aas
repz
push
aaa
fsubrl
cmp
ss
scas
cmpsl
cmc
add
adc
jbe
jp
add
ss
loope
or
andb
sub
bound
sbb
das
push
lret
outsl
or
mov
push
mov
js
incl
xchg
sbb
pop
jle
fwait
or
or
imul
in
xor
xor
lock
outsb
pop
popa
call
jno
dec
fs
cmp
hlt
mov
movsb
and
fcoml
ja
icebp
xchg
mov
dec
out
push
imul
xor
push
or
push
push
dec
mov
imul
sbb
ljmp
xor
sbb
or
xor
xchg
int
lods
or
outsb
inc
push
mov
push
test
imul
addb
sub
sub
or
aaa
push
mov
mov
daa
jl
or
jle
dec
jne
clc
xchg
mov
adc
test
outsl
jg
imul
cli
mov
mov
sahf
decl
addr16
in
xchg
icebp
sub
xchg
das
pop
push
sbb
xchg
jb
add
aaa
scas
add
mov
fnstsw
sbb
push
pop
loope
stos
outsb
lahf
shlb
stc
fstpl
xchg
cmc
push
fisubs
mov
xchg
shll
fsub
test
fcmovu
add
xchg
dec
pop
xchg
ss
adc
divl
xor
lahf
fsub
je
andnps
int
icebp
icebp
sub
xchg
scas
or
stc
sbbb
cli
insb
and
fidivrs
cli
xchg
pop
xchg
and
movsb
shl
or
mov
inc
js
cwtl
iret
jg
daa
aaa
lds
scas
jle
or
jbe
movsb
sbb
inc
jne
sbb
inc
fucom
mov
in
ror
insb
es
movsl
fidivrl
sub
mov
lret
test
mov
stos
aad
cmp
add
mov
int
leave
lock
insb
mov
sbb
ret
stc
add
fcmovbe
call
cmc
scas
fldcw
mov
jl
lods
push
sar
movups
pop
pop
or
lcall
pop
repnz
into
inc
xor
nop
pop
setle
dec
and
fs
ret
and
adc
dec
mov
sbb
and
aam
and
pusha
fs
mov
inc
clc
xor
push
fwait
xchg
cmpsb
sub
push
and
inc
enter
sbb
sub
cmp
mov
stc
jo
mov
mov
cmp
inc
mov
je
inc
add
push
jnp
fcoml
and
test
and
nop
push
inc
pop
sub
jbe
ret
pop
mov
jmp
sub
adc
xchg
fsubrs
mov
mov
xchg
daa
idivl
arpl
cmp
in
rorb
and
imul
adc
jb
and
loope
jg
push
push
repz
pop
insl
ficompl
insl
shl
adc
pop
iret
in
adc
pusha
jmp
jae
inc
mov
mov
sub
cmp
test
inc
mov
cmpxchg
pop
jmp
rcrl
sub
in
jg
ds
dec
ds
outsl
jl
stos
out
jns
sahf
pop
push
mov
loop
iret
push
xchg
dec
stos
daa
inc
push
lsl
inc
lods
jecxz
or
inc
or
lcall
int
test
mov
addl
notb
jnp
cli
outsl
daa
mov
lret
icebp
adc
rorb
mov
cmp
stos
dec
cwtl
mov
jp
fstpl
divb
sbb
push
pop
dec
cli
addr16
sti
adc
fisttpl
xor
mov
jecxz
inc
jecxz
cmp
adc
jl
cmpsb
test
dec
std
hlt
pop
sbb
fucomi
das
push
dec
test
mov
or
jbe
enter
sbb
inc
ss
inc
mov
jb
add
gs
ljmp
pop
xor
cmpsb
add
jmp
stos
in
cld
fwait
repnz
mov
mov
adc
jmp
mov
pop
xor
data16
dec
sbb
lods
mov
bound
js
or
xchg
rorb
jno
mov
fidivs
in
lahf
imul
jno
mov
jge
sub
sbb
ljmp
xchg
pop
mov
mov
adc
push
ss
das
inc
sub
sbb
je
movsl
jg
clc
lea
add
cmpsb
int3
aam
xchg
dec
test
cmp
add
shl
fwait
mov
dec
shl
xorl
ror
cmp
sub
jno
jno
inc
push
dec
jl
cwtl
mov
test
cmp
jmp
fstpt
hlt
js
inc
movsl
mov
fstpt
repnz
and
or
cli
adc
lea
scas
jne
je
dec
jge
jl
lea
xor
and
xor
cs
cld
push
push
inc
cmpsl
add
pop
jecxz
out
inc
cmpsl
imul
push
mov
outsb
sahf
jecxz
xor
cmp
test
fs
push
and
in
and
and
lods
cwtl
aaa
aaa
loope
push
out
sub
and
mov
aas
sar
xchg
xor
mov
mov
sbb
or
mov
pop
push
call
dec
inc
nop
pusha
lds
in
sbb
ljmp
xchg
mov
nop
mov
sbb
xor
jecxz
inc
fidivrl
repnz
out
aas
jecxz
test
and
push
cld
es
cmp
and
pushf
loope
add
std
and
test
mov
cmpsb
insl
cmp
stos
sub
xchg
pop
in
sbb
fnstcw
shrb
cmpl
aad
ds
cwtl
sahf
gs
bnd
lds
pop
lret
jnp
inc
cmp
cmp
mov
xchg
popa
ds
and
movsl
xlat
cld
lods
xor
ret
adc
push
pop
xchg
or
out
push
fstpl
out
add
fstps
mov
clc
cmpsb
jle
sub
fisttpl
adc
pusha
pop
push
mov
mov
or
inc
notl
pop
mov
lcall
xor
jmp
mov
in
in
jno
jg
xchg
mov
jnp
fbstp
loop
xor
mov
jl
mov
sbb
mov
bnd
enter
icebp
mov
adc
pop
loop
xor
xchg
add
outsb
out
cs
cs
sub
adc
fwait
ret
xchg
dec
jns
cmp
in
xlat
cmp
mov
fwait
add
js
scas
pop
push
xchg
sub
cmp
sti
enter
mov
inc
movsl
fstps
cwtl
out
shlb
stc
or
dec
adc
dec
iret
dec
movsl
xchg
or
jae
in
xchg
mov
or
jnp
cli
xchg
add
loopne
repnz
jmp
out
inc
dec
aas
daa
xor
fsts
test
mov
iret
ljmp
outsl
lods
scas
and
je
stos
int3
jbe
xchg
aas
lock
in
cli
mov
mov
cmpsb
mov
int
xor
push
inc
mov
lods
clc
sub
movsl
or
pop
cmp
dec
test
pop
in
pop
jp
lmsw
cwtl
jo
add
shl
xchg
jb
out
mov
shlb
pop
rol
mov
pop
aam
cmp
nop
pop
addb
loop
inc
movsb
fdivs
add
jge
mov
into
fwait
add
sbb
les
cmpsb
les
ja
push
out
out
outsw
leave
adc
loopne
lahf
int3
mov
jo
add
orl
fnsave
fidivrs
add
lret
rcl
jbe
flds
add
int3
xor
dec
add
xchg
inc
xchg
and
scas
lret
mov
aas
ljmp
inc
sub
int3
out
xor
mov
pop
scas
sbb
popa
fiaddl
push
jo
or
inc
push
sbb
sahf
test
dec
les
sub
mov
movsb
xlat
and
dec
outsb
xchg
push
les
or
divl
xor
sub
mov
jmp
rcrl
mov
ja
insl
shl
cmpsl
leave
insb
push
pop
call
mov
cwtl
ds
ljmp
int
psubd
adc
test
cmc
iret
dec
fdivrl
nop
push
mov
clc
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
sbbl
xor
ret
push
mov
sub
movl
adcl
push
sbbl
movl
addl
mov
subl
push
sub
mov
xor
adcl
push
mov
subl
add
subl
mov
mov
test
je
andl
mov
inc
mov
cmpl
jl
jmp
push
push
call
cmpl
jb
mov
sbbl
mov
mov
and
mov
xor
add
movzbl
sub
mov
mov
sub
mov
xor
orl
add
mov
movl
cmpl
je
cmpl
jb
jmp
push
call
mov
dec
mov
jmp
mov
xor
sub
add
mov
sbb
mov
sub
xor
movl
add
mov
sub
xorl
lea
orl
xor
orl
xor
movl
cmp
je
mov
addl
xor
sbbl
add
cmp
jne
pushl
call
andl
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jb
mov
mov
sbbl
xor
andl
add
cmp
movl
je
xorl
pushl
pushl
xorl
call
mov
mov
sub
mov
sbbl
xor
sbbl
add
movl
cmp
movl
je
movl
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
decl
mov
addl
add
movl
cmpl
je
cmpl
jl
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
addl
add
or
mov
sbb
mov
mov
add
movl
mov
jmp
add
mov
mov
add
mov
mov
and
mov
mov
xor
subl
add
cmp
movl
je
jmp
mov
and
mov
xor
decl
add
movl
cmp
mov
movl
je
andl
mov
xor
add
movl
cmp
movl
je
lea
xorl
push
pushl
sbbl
pushl
call
or
mov
sbb
mov
xorl
xor
sbbl
add
movl
cmp
movl
je
movzwl
mov
movzwl
mov
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
jmp
fbstp
cmp
cmpsl
fnstsw
repnz
jnp
sahf
jnp
dec
cld
xlat
fcoml
lock
push
cli
loopne
xor
stos
and
aas
out
mov
or
ja
push
push
out
enter
cli
jb
into
mov
and
inc
push
pop
adc
repz
mov
sbb
lahf
pusha
ret
pop
add
aam
mov
fwait
jne
out
dec
jp
nop
xchg
loope
push
pusha
push
stos
test
sahf
inc
rep
scas
int
adc
xor
out
int3
aaa
enter
popf
xor
pop
in
sbb
into
push
cmp
jae
mov
movsb
ret
int
mov
leave
jg
mov
daa
mov
repnz
xchg
sub
push
push
out
add
mov
sub
rcrl
jg
flds
stos
iret
mov
fcmovbe
sub
adc
sahf
iret
mov
push
cli
repnz
fs
pop
sub
das
mov
loop
ret
mov
mov
jl
add
sti
ficompl
sbb
daa
jmp
mov
mov
sbb
lret
lret
enter
mov
xlat
in
leave
bound
pop
fldcw
jecxz
cmovae
cmp
std
or
test
jb
push
xor
mov
out
movsl
cmp
pop
push
out
add
movsb
add
cmpsl
nop
lret
pop
add
push
mov
sahf
push
pushf
test
cmp
je
pop
mov
mov
int3
out
ss
lcall
ret
inc
inc
call
js
roll
jp
lods
scas
cmc
inc
out
jge
add
hlt
jo
jmp
xchg
or
or
rorl
dec
pop
push
in
xlat
shlb
fiaddl
push
dec
mov
fsubl
dec
jnp
adc
in
roll
enter
mov
icebp
loopne
int3
dec
test
pusha
jno
lahf
aas
push
add
jbe
dec
mov
pop
inc
std
xor
cli
pop
test
bound
jle
movsl
js
xor
ds
pop
xchg
push
xchg
adc
int
lret
dec
loopne
ja
loop
dec
sbb
mov
and
sub
or
adcb
xchg
out
shrl
inc
adc
push
cltd
dec
xor
gs
loopne
xchg
sbb
mov
loop
mov
jnp
or
loope
fs
and
jne
lcall
cwtl
test
and
lret
cwtl
cmp
or
inc
es
or
xor
lods
jmp
cltd
push
jne
lea
icebp
push
push
xchg
inc
out
mov
sbb
popf
fistpll
aad
adc
lock
sub
inc
lea
mov
repnz
add
sbb
jle
add
mov
rcrl
pop
xchg
rcl
aam
cmpb
orl
aaa
pop
xchg
xlat
sub
dec
outsl
out
cmpb
pusha
lea
mov
pop
mov
push
pop
cwtl
nop
movsb
stc
cmpsb
and
xchg
pusha
pusha
add
mov
cmc
pop
pop
sub
jbe
sarl
loop
cmp
mov
fmull
push
inc
pop
xor
fwait
int
fwait
lret
mov
pop
xchg
popa
mov
pop
pop
dec
std
sbb
pop
lock
outsb
xor
adc
mov
xor
mov
arpl
aas
ja
orb
sti
sti
pop
inc
into
lock
fimull
test
xor
jp
sti
mov
jle
in
and
js
xchg
daa
dec
push
mov
lcall
dec
cld
push
jge
and
js
mov
cmp
dec
cmp
testb
mov
jne
push
ja
subb
clc
jecxz
ss
jg
stos
adc
lods
jmp
bndstx
imul
or
xchg
test
dec
xor
fstl
icebp
stos
test
xchg
fnsave
xchg
add
adc
insb
push
int
jmp
stos
xchg
inc
and
cmp
add
or
pop
mov
dec
mov
cmpsl
or
sub
imul
xchg
push
and
loopne
mov
insb
fcoms
aam
xor
arpl
cld
sub
aaa
lcall
daa
stos
test
out
popf
lahf
jb
loop
jg
lock
sub
hlt
sub
jecxz
cmc
mov
pushf
pop
roll
push
lahf
pop
cmp
popf
add
ficoml
sbb
sub
cmp
jg
sbb
push
mov
pop
push
adc
inc
and
ds
add
outsl
inc
and
out
loopne
stc
or
sti
inc
inc
xchg
jecxz
imul
cld
xchg
xor
fldcw
sub
cli
push
movsb
inc
xor
add
cmpsb
push
and
jae
lds
jge
ret
imul
cmc
mov
sbb
pop
inc
addr16
int
cmpsl
push
cld
cli
out
adc
hlt
ror
iret
ret
cmp
out
inc
jl
int3
mov
push
adc
repnz
mov
pushf
pop
cmp
ljmp
mul
in
leave
push
loopne
push
mov
aam
mov
mov
test
sub
subb
cli
xchg
aad
fnsave
neg
pop
mov
lret
and
push
out
mov
out
fisttps
ficomps
andb
jo
pusha
aam
adc
jb
mov
sub
pop
inc
pop
adc
or
jnp
in
lds
mov
loopne
loop
lcall
lods
sbb
js
xchg
cmp
cmp
test
mov
adc
cmp
xchg
arpl
or
enter
sbb
mov
mov
divb
gs
lods
clc
fists
sub
roll
lea
jns
popa
push
xor
cmp
and
dec
std
imul
add
xchg
or
push
cli
out
jge
cmp
inc
xchg
incb
add
mov
sub
mov
cld
cmp
jo
and
sarl
inc
sub
fdivrl
out
and
ljmp
cltd
stc
fsubr
daa
push
mov
scas
ss
xchg
inc
mov
pop
pushf
sbb
pop
aas
pop
psraw
inc
or
jb
push
mov
and
or
wrmsr
add
mov
add
pop
sub
faddp
pop
and
lock
fldt
fwait
mov
std
in
loope
xor
arpl
mov
lcall
lock
cvtpi2ps
aas
sub
int3
int
inc
hlt
mov
jle
push
aas
and
loop
push
and
faddl
call
aaa
jp
and
inc
push
mov
in
xlat
pushf
test
inc
int
arpl
sub
idivb
cmp
mov
xchg
jl
push
stc
dec
inc
cli
mov
cmp
mov
mov
stos
adc
sub
pop
fcom
sti
inc
lret
jno
mov
inc
decl
in
aaa
push
xchg
jb
sub
inc
push
in
es
push
fucomip
sbb
or
fcomi
aad
mov
or
mov
add
push
loop
mov
mov
sar
adc
jae
lret
sbbb
enter
js
dec
cmp
aas
xor
je
fsubp
cld
iret
add
jmp
inc
inc
xor
loopne
idiv
mov
popf
dec
jns
in
mov
ret
das
into
lea
cmpsl
lods
loope
in
fucomip
mov
inc
lods
mov
xchg
inc
mov
lods
lret
mov
and
imul
inc
mov
repnz
imul
clc
int3
clc
xchg
lods
test
fs
dec
push
clc
je
inc
dec
or
pop
pop
cmp
jp
adc
fdivl
adc
dec
lahf
pusha
pop
mov
scas
loope
in
test
popf
lea
fsubr
sbb
push
daa
push
or
mov
jg
lcall
shrl
jecxz
dec
lock
sbb
je
ss
je
xchg
sahf
shrl
dec
xchg
jno
mov
pop
xchg
in
outsl
mov
pop
pop
lret
mov
sub
jo
inc
cmp
xlat
mov
xchg
aaa
nop
add
sahf
js
dec
stos
imul
mov
lods
in
jmp
loopne
int3
fcmovbe
jno
cs
dec
stos
fidivrs
in
std
stos
jne
add
sub
adc
ss
jmp
scas
mov
mov
out
dec
sbb
inc
pop
or
xorl
lahf
pop
repnz
dec
jo
negl
lods
or
xor
popa
and
in
add
jns
pop
popf
sub
das
aaa
jp
ljmp
jno
push
loopne
daa
jmp
sbb
fists
ljmp
int
mov
mov
inc
and
push
inc
cmp
mov
mov
shr
inc
and
push
ja
sub
mov
lock
mov
into
loope
ret
add
dec
adc
xor
inc
mov
dec
fs
dec
jno
inc
or
movsl
mov
addr16
jmp
scas
rep
in
mov
xchg
cmp
mov
adc
cmp
mov
int
into
jns
cmpsb
adc
dec
loope
repnz
imulb
rclb
jge
ret
fwait
lret
push
mov
pop
adc
in
mov
jbe
lcall
movsb
ffree
xchg
push
adc
or
fidivl
or
sub
jp
rcrb
dec
repz
fldt
ror
and
test
pop
fcomip
inc
inc
cmp
mov
add
hlt
pop
lds
std
sub
imul
aam
lods
in
jecxz
sbb
icebp
mov
jp
orb
dec
data16
std
jmp
jbe
cmp
push
push
or
ljmp
pop
mov
stos
ds
testl
xchg
lods
push
xchg
call
fmull
sbb
int3
push
stos
nop
inc
movsb
jbe
mov
sub
xor
or
ja
insl
sti
xchg
mov
adc
lock
adc
mov
cmpsb
mov
adc
mov
mov
mov
xor
add
mov
xchg
aad
sbbl
outsb
xor
dec
bound
lret
rclb
fdivrl
cmovp
pop
jbe
mov
inc
movl
mov
daa
cltd
jnp
leave
nop
add
xchg
sbb
xchg
adc
loope
add
ds
and
push
fs
pop
add
mov
imul
cltd
jbe
or
inc
cmp
lods
or
mov
push
packuswb
sbb
xor
or
pushf
push
scas
push
pop
cmp
mov
xor
mov
shl
movsl
mov
std
je
out
sbb
fldenv
cmp
andb
or
cmp
inc
shrb
shrl
inc
fstps
stc
xor
fmulp
jg
lret
fisttpll
test
xchg
dec
ss
pop
inc
push
sarl
xchg
popf
xchg
aaa
cmp
mov
push
sub
cmp
ret
mov
xlat
push
aaa
stos
push
cmp
xchg
xchg
scas
xchg
sahf
push
mov
jnp
dec
jp
mov
pop
jbe
nop
shl
sbb
fwait
or
and
xor
imul
mov
sti
in
push
cmp
xor
mov
sbb
out
imul
std
push
int3
mov
leave
pop
jb
cmc
pop
dec
aad
dec
jmp
mov
jmp
fcompl
xor
inc
jnp
ret
stos
cld
and
ret
cmpsb
outsb
xchg
or
stos
sub
insb
or
pusha
cli
sbb
add
add
enter
lods
les
aaa
inc
dec
xchg
mov
lds
daa
mov
jns
adc
outsl
xchg
pop
int
dec
ficomps
sub
add
or
icebp
movsl
xchg
mov
adc
cmp
repz
out
mov
xor
inc
push
mov
in
mov
arpl
lods
jbe
repz
int3
pop
ret
mov
cs
lock
cwtl
xchg
int3
rcll
push
jae
aaa
xor
cmp
jno
stc
lea
mov
push
test
loop
xchg
mov
pop
pop
mov
icebp
cltd
lret
test
cmpsb
pop
pop
push
ror
in
mov
jmp
jecxz
subl
iret
roll
or
roll
je
xchg
add
pop
xlat
push
ja
or
mov
stos
fildll
sub
std
adc
roll
rorb
ficoms
or
mov
das
cmp
mov
xchg
inc
inc
jmp
or
or
fldenv
pop
mov
movsb
xchg
jns
ljmp
aam
mov
jmp
push
repnz
ftst
fwait
outsb
xchg
outsl
mov
lods
or
or
dec
fiadds
xor
fpatan
xor
mov
sahf
mov
out
sub
mov
push
mov
sub
ds
add
inc
test
add
sbb
shr
cmp
lret
adc
xchg
adc
call
sub
clc
pusha
mov
hlt
pop
fisttps
xor
pusha
stos
scas
call
cwtl
jmp
popa
aad
jno,pt
sbb
sbb
shrl
ja
sahf
pop
adc
stos
daa
pop
mov
stos
bound
lock
sub
adc
pop
stos
into
jecxz
aas
daa
outsl
fldenv
inc
pop
mul
push
loop
cmp
jb
jns
push
cmpsl
sbb
shld
dec
iret
push
lods
xchg
dec
cmp
pop
inc
xchg
xchg
cld
ficoml
xchg
lock
xor
hlt
cmpsb
xor
pop
fcmovnbe
lret
sub
into
mov
les
jne
mov
js
mov
mov
mov
lret
dec
pop
cltd
jge
lods
lcall
mov
lret
mov
add
jno
scas
cld
inc
dec
xor
inc
mov
cli
loopne
andb
inc
jb
mov
xchg
insb
mov
sub
enter
inc
in
cmc
jno
pop
dec
dec
popf
cmpsl
testb
outsl
sub
mov
in
cmp
sbb
mov
jb
jle
into
hlt
jg
or
stos
mov
enter
int3
push
cmp
inc
gs
or
jmp
add
out
pop
pop
call
or
stc
fs
adc
jmp
andl
pop
das
mov
mov
test
cmp
ds
in
adc
pop
adc
xor
stc
add
jns
xchg
test
push
leave
cs
mov
add
ss
fstpt
sbb
mov
imul
mov
rorl
lds
loope
hlt
add
push
std
push
subl
jne
adc
jl
xor
fists
cmp
mov
loop
jmp
call
sub
into
ret
xchg
insb
scas
fidivrs
dec
mov
push
or
scas
mov
mov
repnz
rclb
xchg
loopne
iret
xchg
scas
icebp
dec
ljmp
and
sub
xchg
pushf
stc
imul
ljmp
and
mov
xchg
adcb
lahf
mov
adc
sub
lea
and
ss
hlt
je
cmpsb
xchg
or
inc
push
push
push
sbb
pusha
sbb
jp
mov
fistpl
data16
in
mov
in
pushf
or
mov
pop
je
add
pop
xchg
cltd
sti
inc
inc
in
add
sbb
stos
or
push
sbb
mov
pop
out
fs
pushf
dec
push
repz
cmp
fists
movsb
sbb
aad
out
inc
outsl
xchg
push
adc
or
add
push
test
repz
inc
shrb
cmp
jle
cmp
mov
or
stos
dec
inc
jb
rorb
mov
or
xchg
and
sub
je
shrl
and
jo
or
data16
add
sbb
add
cmp
xlat
jns
fst
imul
lret
out
dec
mov
mov
icebp
call
xchg
pop
dec
mov
mov
in
inc
dec
and
cmpb
cmpsb
pop
stos
xchg
cli
or
or
mov
or
iret
xlat
cmp
imul
or
xchg
arpl
hlt
dec
xlat
je
xor
jl
ljmp
mov
ja
js
call
int
cli
inc
sbb
jns
sbb
xchg
xlat
rcr
outsl
dec
shlb
mov
outsb
cs
xchg
adc
lock
inc
jg
mov
mov
insb
and
dec
notb
pop
jb
test
outsb
mov
lods
mov
iret
and
in
pop
out
adc
xchg
cs
xchg
mov
ja
repz
insb
cmpsb
bound
std
jle
and
inc
imul
xchg
jecxz
into
outsl
dec
pop
lds
pop
push
addr16
mov
shrb
ds
push
rep
aaa
dec
out
and
jle
mov
cmpsw
push
inc
aam
sti
insb
clc
lret
sbb
jb
nop
xchg
icebp
sarb
scas
leave
pop
push
test
out
sub
in
repz
add
test
scas
stc
jge
popa
cmp
or
stc
fsubrp
rcrl
add
pop
sub
int
mov
in
adc
hlt
or
xchg
push
jbe
xor
outsb
cltd
andb
pop
stc
dec
aam
xor
inc
popf
ror
sub
cs
add
inc
lods
xor
sbb
loope
pushf
push
sub
daa
push
pop
xlat
push
push
inc
xor
in
repnz
sub
lea
stos
or
repnz
les
add
jge
cmpsl
andb
test
jle
dec
inc
mov
cli
shl
imul
sbb
out
mov
fsubrl
fildll
add
jl
hlt
push
and
mov
std
lea
xchg
aad
int3
out
jae
icebp
pop
scas
adc
outsb
out
cli
xchg
xorl
rolb
jns
lods
lahf
das
outsb
push
mul
lahf
outsl
scas
rol
fdivrl
mov
add
in
leave
icebp
adc
mov
mov
jb
loopne
call
lret
leave
sbb
sbb
pop
test
cmp
and
dec
leave
and
mov
jb
sti
mov
shlb
aam
add
mov
lea
mov
xchg
push
inc
mov
jno
jb
aam
xchg
outsb
subb
jecxz
lret
adc
insl
jns
fistps
and
pop
push
xor
inc
test
das
xchg
inc
out
cmc
push
push
xor
push
sbbb
test
js
or
jae
faddl
push
sub
dec
fstpl
adc
sbb
shrl
push
adc
bound
or
jne
inc
lret
xor
loop
pop
add
rcrl
xchg
dec
jo
push
cmpb
test
xchg
and
xor
sub
jg
jmp
xchg
xchg
inc
imul
stos
adc
jne
push
or
idiv
stc
cmp
movsl
or
movsl
scas
jno
pop
jo
mov
loopne
sub
mov
outsl
jecxz
inc
and
vxorps
clc
mov
sbb
icebp
pop
in
cmp
jl
adc
lock
or
neg
add
psraw
ret
jecxz
out
or
sbb
fbstp
aam
xor
sahf
and
jge
jo
in
test
xchg
mov
sub
mov
sti
lahf
jbe
int
loopne
push
out
ffreep
mov
xlat
sub
xlat
jbe
insl
loop
jle
incb
nop
sarl
inc
adc
sub
cltd
mov
in
jo
arpl
in
aam
mov
and
pop
jbe
pushl
mov
and
dec
test
lock
dec
mov
adc
cltd
adc
cmp
xor
dec
outsl
in
xchg
repnz
sahf
cmp
sub
or
orb
add
or
inc
imul
stos
loope
sarb
mov
xchg
add
clc
jo
out
fmul
jge
outsb
mov
stc
push
enter
sub
lret
push
les
mov
mov
push
and
xor
pushf
in
mov
xorb
xchg
fsts
jns
cmp
in
aad
add
outsb
adcl
pop
push
loope
sarb
mov
mov
jge
popf
mov
aam
lahf
mov
sti
add
push
mov
in
rcll
dec
cli
ret
mov
test
jns
aas
and
fdivr
test
push
push
test
cltd
imul
lahf
aas
rclb
mov
mov
jb
inc
cmpsl
fadds
push
fsubrl
jle
ret
pop
jmp
mov
cli
adc
lcall
add
fs
sub
push
add
pusha
popf
adc
adc
inc
push
and
das
out
inc
jecxz
out
aas
aas
jmp
jl
lds
or
push
sbb
sbb
and
rcr
out
scas
aaa
out
andl
sbb
icebp
push
xchg
mov
mov
adc
test
cwtl
pop
and
xchg
jnp
shl
xor
into
lds
shl
push
mov
cmpsb
pop
mov
mov
jo
loop
mov
pop
pop
mov
sarb
push
push
sbb
jae
cs
pop
mov
lods
jns,pn
xor
mov
xor
mov
out
fs
cmp
lcall
and
repz
adc
add
movsb
adc
add
sbb
inc
xchg
in
mov
add
lret
imul
outsl
inc
jmp
out
notl
lods
adc
or
adc
movl
push
xchg
xlat
mov
mov
mov
aam
inc
pop
and
rorl
cld
mov
fnsave
mov
mov
insb
ljmp
in
fstp
sti
push
xchg
das
mov
mov
out
sbb
movsb
mov
jns
fs
adc
or
jle
fidivrl
loop
or
adc
cmp
shrb
and
cmp
outsl
mov
mov
mov
enter
jno
inc
scas
xchg
mov
popa
dec
or
mov
push
mov
jne
push
mov
pop
and
xor
sbb
imul
je
mov
int
pop
sub
and
int3
rorl
jecxz
lock
jle
enter
hlt
sbb
lock
aaa
lahf
ss
sbbl
sbbb
jae
add
imul
adc
inc
stos
push
jp
rol
insl
adc
jb
xor
sbb
inc
sbb
mov
sbb
cmc
fwait
mov
and
pop
mov
aad
les
sbb
adc
adc
outsb
mov
dec
je
or
mov
xchg
lods
cwtl
repnz
or
je
fwait
cmpsl
mov
xchg
cmp
jae
mov
jp
mov
ficoms
dec
xchg
mov
xchg
jnp
adc
mov
sub
jmp
icebp
push
sbb
ljmp
cmc
daa
std
inc
or
bound
sbb
push
add
movsl
mov
inc
mov
inc
jmp
fbstp
fisubrl
lods
push
mov
psubusb
jae
fsub
ret
cld
mov
ss
push
inc
mov
loop
xchg
data16
cltd
push
sarl
fcomps
cmp
fstpt
mov
add
aam
xchg
and
lods
das
aad
cmpsl
icebp
int3
adc
cmc
mov
add
inc
ljmp
adc
or
jp
xor
sbb
mov
in
dec
push
adc
dec
rcrb
dec
andb
sub
xor
xchg
pop
push
adc
push
inc
rorb
jmp
daa
insb
sub
jle
cltd
pop
das
inc
in
xlat
lret
cld
mov
cs
out
push
xor
and
cmp
inc
mov
add
mov
push
mov
loope
sahf
call
das
sarb
mov
pop
cmc
sbb
xlat
sub
out
aad
sbb
fs
outsl
aam
add
sahf
std
and
cmp
pop
pop
mov
cltd
cmp
cli
enter
imul
incb
pop
pop
cmp
and
xor
or
or
push
mov
movsl
push
mov
rolb
xorb
inc
xor
sbb
xor
mov
cld
aad
sub
pusha
push
out
cli
nop
call
inc
pop
imul
jecxz
sub
fcmovnu
ret
push
sbb
dec
sti
sbb
call
or
xor
mov
fstl
jecxz
insb
dec
outsb
int3
or
in
and
push
nop
xor
cwtl
hlt
pop
jo
test
daa
mov
xchg
adc
loope
dec
into
ljmp
sub
hlt
and
cwtl
and
sbbl
insb
loope
sbbl
stc
mov
push
push
push
movsl
insb
adc
data16
cmp
test
shlb
jl
pushf
jmp
fwait
cmp
cmp
imul
repnz
clc
and
ret
push
popf
pusha
dec
js
mov
fildll
stos
jmp
aas
hlt
pusha
daa
fwait
scas
add
orb
int
lods
cltd
leave
arpl
lret
clc
clc
mov
movsl
scas
xor
or
and
ljmp
jle
pop
cmpsl
mov
pop
mov
mov
xor
mov
xchg
adc
adc
in
out
sub
inc
fisttpll
cld
add
je
add
sub
outsb
jbe
pop
xchg
push
pop
jmp
jge
adc
fnstcw
jge
mov
stc
add
into
ss
add
cmpsb
xor
or
into
jno
xchg
lock
shrb
jbe
inc
jmp
out
shlb
xchg
lret
stos
adc
pop
pop
sahf
or
into
movsl
or
mov
sti
xchg
mov
sub
push
scas
iret
dec
sub
nop
sahf
rep
es
or
mov
sbb
out
add
fstpl
jl
and
lahf
xchg
outsb
cs
std
push
or
or
jne
mov
loope
mov
cmpsb
xchg
fisubs
cs
or
xchg
jae
mov
push
cltd
int3
jne
loop
jmp
mov
push
mov
call
movb
addr16
dec
aas
pushf
mov
push
enter
push
test
ret
fdivr
cmc
add
mov
push
scas
mov
mov
mov
rorb
outsb
int3
dec
scas
sbb
pop
cmpsl
cmp
mulb
mov
shlb
rorb
test
inc
xor
addb
fsubs
and
push
ja
or
pop
xchg
outsb
mov
dec
mov
aam
push
out
testl
or
hlt
mov
pop
mov
and
aas
xor
into
mov
fisttpll
mov
adc
adc
mov
and
cmc
jae
lahf
in
push
pop
out
xor
into
sti
and
aas
sub
cltd
adc
addr16
cmc
fadd
or
shlb
inc
cltd
cwtl
ljmp
xor
jmp
jp
xor
fstp
add
jno
push
pop
dec
push
repz
jmp
rorb
or
repz
xor
xlat
pop
test
cmp
imul
dec
loopne
imull
mov
iret
fs
jne
aam
popa
incl
in
mov
insl
mov
hlt
bound
mov
or
pusha
push
sbb
xor
dec
xchg
cli
addr16
cli
imul
aaa
cltd
pop
int3
mov
mov
xchg
push
and
pop
addr16
cltd
or
mov
mov
ja
push
scas
inc
push
pusha
cmp
in
popf
or
leave
pop
lods
aas
sub
insb
enter
dec
jge
mov
jg
lahf
or
je
pop
loope
jnp
lods
ljmp
push
sti
adc
or
sub
pop
mov
hlt
jnp
test
sarl
mov
out
push
sub
mov
ficoms
cmp
in
sti
dec
dec
xchg
pop
xchg
xlat
ret
lcall
lea
dec
push
jg
jne
add
xor
jo
adc
clc
push
loope
es
dec
jno
dec
adc
jae
cmp
pop
pop
rcrl
sarb
mov
sub
push
or
xor
pushf
and
jae
or
lea
insl
test
mov
sbb
sub
cwtl
es
out
call
ret
inc
aas
cwtl
lcall
and
xorb
aas
lock
jnp
addr16
imull
test
xor
mov
scas
fcmove
icebp
jecxz,pn
mov
jo
adc
sbb
testl
in
and
and
cld
inc
popa
cld
repz
hlt
mov
sub
out
or
fwait
inc
mov
fwait
xchg
pop
cld
push
and
jle
iret
jmp
mov
rcl
jle
div
aam
mov
mov
jbe
and
sub
xchg
mov
stc
mov
push
mov
int
lods
xor
loopne
pop
or
stos
data16
push
aaa
shlb
jle
push
or
push
lods
or
cmp
aam
add
outsb
imul
data16
aaa
cli
out
mov
out
xlat
lahf
xchg
dec
push
and
out
adc
lahf
or
xchg
xor
or
das
mov
int
pop
mov
adc
jle
mov
clc
into
fildll
xchg
push
and
fs
mov
in
flds
jno
daa
push
cwtl
outsb
xchg
inc
cmc
push
add
pop
iret
xor
out
mov
adc
mov
add
lods
adc
xchg
pop
out
xor
jle
lock
test
inc
scas
sarl
inc
xchg
xchg
adc
xchg
add
cmp
ret
mov
mov
arpl
in
call
das
cmp
loope
stos
dec
lock
and
or
mov
dec
lret
aam
lahf
adc
or
jge
fcompl
aam
and
fiaddl
xchg
out
jp
xlat
je
movsb
aas
dec
push
ja
jl
stos
mov
sbb
mov
adc
pop
inc
dec
dec
cltd
or
js
mov
leave
mov
jbe
loopne
fs
cmp
lods
cwtl
int3
out
nop
and
sub
fldt
pop
fs
sbb
and
bswap
cld
leave
pop
cmpsb
pop
jb
sbb
shll
arpl
adc
popf
jnp
test
dec
shl
cmpsb
mov
mov
pop
popa
popa
test
sub
xor
pop
dec
clc
sti
xor
cmp
add
lahf
leave
sbb
pop
jl
leave
cmpsl
mov
dec
mov
xorl
aam
ds
inc
inc
mov
xchg
scas
stos
cwtl
jmp
mov
jnp
ss
mov
imul
add
je
enter
sub
jecxz
in
push
aam
loop
clc
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
jmp
mov
out
fwait
push
xor
lods
shrd
jnp
sahf
jnp
adc
adc
sahf
cld
pop
adc
addr16
and
pop
rcr
inc
inc
jnp
sbb
pop
sbb
outsb
nop
sub
sbbl
sahf
sbb
aad
xchg
inc
push
mov
sub
sub
imul
outsb
pop
xchg
outsb
push
aam
add
push
pop
ret
popa
push
call
dec
adc
mulb
scas
sbb
cld
cmpsl
push
das
pop
jnp
xor
or
test
sbb
rcl
fsubl
cwtl
scas
aam
pushl
sbb
gs
sbb
shlb
push
add
and
testb
inc
jp
std
out
ret
dec
movsb
push
mov
mov
add
push
adc
cs
add
jmp
iret
add
test
jl
push
sub
mov
push
inc
and
mov
inc
push
cmc
mov
mov
push
data16
dec
and
push
mov
adc
dec
or
or
movsl
lods
in
iret
jb
jbe
mov
add
dec
fidivl
push
jbe
pop
mov
pop
fldt
movl
cmpsl
test
sub
mov
gs
pop
mov
mov
mov
rclb
sub
push
inc
sub
lret
imull
push
dec
mov
pop
cmpsl
sub
sbb
dec
and
or
xor
sub
or
aaa
jns
sub
sbb
mov
xchg
cmc
out
add
xor
rcr
cmp
les
mov
loope
cs
test
scas
push
mov
or
sub
jb
loopne
sbb
jbe
or
adc
sahf
test
jb
pop
movsb
push
daa
pop
push
clc
or
push
and
mov
ss
add
sbb
inc
add
movsl
dec
sahf
mov
lock
popa
popf
cld
sub
test
dec
xor
fs
sub
repz
mov
sahf
pushf
arpl
jmp
xchg
or
rclb
pop
sbb
xor
push
hlt
adc
push
lahf
mov
leave
les
and
and
mov
mov
push
mov
jmp
push
sti
xchg
or
stos
fbld
or
dec
popf
xchg
pop
movsl
pop
scas
push
mov
iret
mov
and
ficompl
pop
ja
enter
mov
dec
push
and
add
push
icebp
mov
jno
icebp
jo
add
cltd
pop
jns
mov
sub
leave
pop
das
add
dec
push
int3
stos
dec
cs
or
test
mov
sbb
mov
daa
pop
dec
test
les
lret
push
push
mov
xchg
stos
sub
bound
cltd
mov
lcall
ljmp
out
mov
add
xchg
xor
mov
pop
popl
pusha
mov
hlt
fldl
paddw
out
pop
push
mov
fldlg2
adc
mov
nop
xchg
imul
mov
xchg
push
mov
lret
ficoml
je
pop
jg
sahf
fstp
pop
icebp
jno
sti
addr16
adc
orl
aad
cwtl
cmovbe
mov
pop
and
push
rcll
in
and
adc
add
mov
shll
cmp
or
ror
push
fistpl
push
adc
clc
scas
mull
jo
mov
or
mov
and
imull
mov
mull
sbb
movsl
fwait
jle
fisubl
push
mov
das
adc
cld
das
or
aad
mov
or
sbb
push
ljmp
pop
adcb
mulb
negl
rcl
pop
or
sub
lock
out
jecxz
mov
xor
pop
decl
xor
xor
sub
jecxz
sahf
push
fimull
push
dec
lds
add
out
lahf
and
iret
xor
jae
push
shrl
mov
popa
mov
leave
ret
adc
sbb
lds
aas
mov
pop
push
test
push
sub
mov
js
shr
movsl
jge
cmp
in
sbb
lods
stc
push
and
hlt
insl
arpl
xchg
cmp
inc
or
push
lret
lret
jmp
adc
ds
mov
cmp
andl
gs
mov
push
sbb
sahf
jp
mov
mov
shl
cmp
sub
lock
jl
dec
ret
and
bound
fcomps
fsubrl
xor
nop
lret
mov
aas
aaa
ret
cmp
das
xlat
stos
push
xchg
call
add
jnp
or
popf
mov
push
das
shrl
out
lret
push
jmp
add
rcll
fxch
push
rcl
jecxz
out
cmpsl
xchg
test
fidivrs
sti
add
jmp
inc
pushl
rolb
inc
add
sbb
xchg
adc
subb
mov
nop
nop
jo
test
and
adc
loope
addl
ja
fisttps
jg
pop
dec
les
and
enter
inc
and
fcomi
ja
jg
dec
cmpsl
adc
push
mov
out
jnp
test
pop
out
nop
jno
or
inc
cmp
sbb
out
mov
or
add
jae
dec
mov
sub
adc
or
aam
pop
dec
gs
lahf
aam
pop
dec
mov
fsub
movsb
pop
xchg
mov
sbb
push
sbbb
fsubs
jnp
pop
mov
call
sbb
dec
xchg
jbe
ret
rcrb
sahf
sbb
mov
dec
mov
mov
nop
pop
pop
push
adc
js
and
xchg
adc
sbb
jae
pusha
pop
in
or
jmp
add
in
xchg
repz
cmp
dec
push
movb
and
sbb
dec
jo
subl
cmp
iret
call
cmp
icebp
lcall
and
mov
xchg
das
imul
mulb
push
mov
aas
mov
es
iret
pop
sbb
mov
push
adc
pop
arpl
or
jns
xor
and
xchg
mov
ficomps
push
lcall
adc
pop
xor
add
pop
jecxz
or
fst
clc
and
dec
jmp
das
ret
in
sbb
jbe
inc
cmpsl
push
mov
inc
xor
jno
push
cli
das
test
add
dec
mov
cmpsb
mov
add
push
xchg
out
inc
mov
lods
enter
sub
mov
arpl
sub
sbb
lcall
inc
sbb
dec
sub
outsl
adc
and
sbb
mov
mov
fadds
mov
testb
icebp
loope
jmp
icebp
jmp
arpl
shlb
cli
int
addb
into
jae
inc
jl
sub
outsb
ds
cmp
mov
push
out
sub
sahf
adc
mov
mov
inc
sub
mov
xor
pop
mov
jmp
add
mov
xor
rclb
mulb
ss
imul
jge,pt
mov
dec
cmp
jge
and
inc
fnstenv
lds
aaa
ljmp
jnp
sbb
mov
or
sbb
daa
adc
dec
rcrl
sbb
imul
pop
mov
cld
dec
sub
and
fs
leave
out
add
cmp
jle
das
dec
mov
adc
cld
subb
mov
mov
push
push
in
pop
std
push
ss
mov
fisttps
jo
push
jle
sub
ror
cmc
insl
dec
test
lock
cmpsl
ss
lods
jecxz
addr16
aad
cmpsl
pop
sub
jle
rclb
lea
inc
xchg
faddp
dec
push
hlt
inc
mov
cltd
arpl
dec
xchg
fxch
out
dec
clc
fdivrs
lock
btr
xchg
out
addr16
pop
aaa
lods
mov
enter
mov
aaa
pop
leave
adc
mov
pop
add
fsubrl
mov
cmpsl
lods
insl
mov
push
mov
and
gs
jmp
cmp
int3
popa
in
xor
dec
sub
in
mov
jge
mov
xor
mov
xchg
pop
dec
insb
jb
mov
add
and
mov
sub
daa
xchg
aas
push
rclb
cmpsb
pop
push
cs
add
mov
xchg
sbb
roll
sub
or
ja
dec
mov
aam
cli
sbb
add
popa
inc
add
dec
js
fidivl
xchg
add
fistps
lods
cwtl
adc
push
mov
in
pop
cld
orl
sbb
scas
jno
push
pop
or
and
fiaddl
movsb
imul
popa
shrb
lods
mov
cmp
jo
mov
or
call
cmp
mov
mov
lock
mov
push
iret
xor
add
xor
jg
movb
and
pushf
fistl
lods
xchg
lret
lds
mov
mov
xchg
mov
cmp
stc
pop
or
cmp
aad
inc
inc
ljmp
xchg
mov
stos
sbb
das
xor
fstpt
and
sub
inc
push
mov
jecxz
addl
dec
inc
and
mov
fiaddl
sbb
rclb
mov
pop
fs
dec
gs
into
push
movq
add
sub
sub
daa
test
ficoml
jg
push
enter
aad
adc
fsub
jo
sarl
xchg
dec
add
xchg
sub
icebp
fs
stos
mov
pop
out
cmp
mov
add
dec
leave
adc
mov
or
add
pop
data16
fwait
mov
lret
add
lahf
repnz
jecxz
jne
popa
lahf
inc
add
mov
std
xlat
push
int3
and
inc
sub
or
push
xchg
filds
push
xchg
mov
fcompl
jl
fdivrl
xor
les
sar
xchg
sahf
rcrl
jbe
addb
sbb
jno
push
lods
lcall
inc
mov
sbb
stos
fistpl
mov
jmp
gs
ljmp
mov
xchg
mov
clc
mov
mov
mov
out
gs
leave
dec
int3
faddl
jl
jae
cltd
adc
cmc
scas
xchg
shlb
std
mov
add
mov
mov
mov
adc
lret
imul
adc
rorb
pop
fcomps
out
ljmp
jo
dec
aaa
adc
std
enter
ret
sub
inc
and
pop
fisubl
rcll
mov
sub
or
jo
mov
repnz
test
in
add
andl
imul
adc
sbb
jnp
out
test
cmpsb
cmp
lret
pop
bound
mov
das
cmp
inc
pop
inc
mov
mov
xchg
push
and
cmp
int3
xor
mov
pop
dec
insb
mov
xchg
iret
and
movsb
nop
mov
and
xchg
aam
mov
or
cmp
int
add
xchg
xchg
ficompl
mov
xorl
pop
loopne
loope
imul
cmp
dec
int3
inc
and
dec
and
idiv
stc
mov
insb
ja
mov
and
or
dec
xor
fiadds
cmp
jo,pt
xor
push
adc
std
jbe
adc
fcoml
loopne
insb
fbld
pminsw
arpl
aad
pop
pop
push
cmp
push
mov
shrl
mov
sbb
daa
test
push
js
dec
xchg
shlb
xor
push
insb
mov
addr16
push
aam
cmp
adc
daa
pop
cmpsb
xchg
and
pop
cld
dec
xor
popa
xchg
mov
push
dec
repnz
stc
xchg
cmp
iret
add
outsb
cmp
sub
inc
mov
pop
sti
imul
and
adc
repnz
pop
fwait
xchg
mov
loope
pop
lds
pop
inc
leave
fs
fadds
scas
jne
sbb
into
pop
xchg
or
jl
test
lea
pop
js
adc
or
pop
stos
adc
adc
pop
aaa
mov
mov
in
sbb
push
mov
cmc
xor
out
loope
in
cmc
shlb
xor
cs
ds
lock
xchg
imul
pop
mov
out
or
mov
out
iret
pop
and
jbe
xchg
xchg
pop
jg
out
adc
mov
fdivr
jae
xchg
and
add
popf
stc
xchg
test
cli
bound
sbb
clc
ljmp
sbb
add
arpl
rorl
xor
cld
jns
pop
repnz
pop
push
push
pop
push
lahf
jmp
mov
movsl
clc
dec
xor
xchg
outsb
sbb
push
and
jno
jp
sub
mov
shlb
aas
jo
add
mov
add
ss
fiadds
add
xlat
cwtl
push
out
loope
push
mov
popa
loope
mov
push
pop
push
sbb
addr16
ret
cli
mov
pop
insb
mov
cs
outsb
jne
movsl
bound
push
pop
shll
jge
psubusw
int
or
adc
fisubl
push
adc
adc
pop
cmp
fdivs
cmp
ficoml
or
cmp
aas
cmc
lock
cld
fwait
push
cmp
out
mov
or
dec
push
mov
inc
ret
popa
mov
push
xchg
dec
je
jb
lds
jno
or
divb
dec
cmp
add
mov
lcall
xchg
push
inc
lret
sahf
orl
xchg
mov
push
pop
pop
fldl
movsb
fldcw
aaa
xor
or
cld
in
xchg
rorb
cmp
jmp
mov
and
lock
jb
push
mov
push
sahf
fadd
aaa
lods
in
xor
cmp
fisubrl
adc
in
scas
dec
push
idivl
adc
mov
sti
das
push
push
xchg
adc
sbb
or
das
inc
adc
fiaddl
je
jne
cmp
movsb
scas
ds
js
sarl
jp
call
adc
ss
lds
rcrl
outsb
and
loope
and
jmp
sbb
xchg
inc
addr16
cmp
loopne
ret
pop
pop
pushf
pop
repz
push
xor
jne
jo
aam
mov
jmp
push
xorb
into
aad
fs
pop
mov
xchg
out
shl
imull
call
mov
xchg
pop
xchg
push
icebp
mov
aam
or
outsl
clc
mov
in
fcom
and
mov
xchg
adc
rcll
pop
jg
mov
cli
mov
or
lret
sbb
repz
mov
xchg
sbb
iret
jbe
jns
sub
jle
std
sub
fistpll
stos
cmp
pusha
aas
push
xchg
bt
sbbb
add
add
sub
into
pop
clc
xor
xchg
jne
test
lds
inc
movsb
sbb
mov
xchg
cmpsb
loop
repnz
lcall
xor
fldt
pusha
xchg
pop
sarl
mov
fildll
ficomps
cmp
cmc
or
rcll
mov
sahf
push
in
sbb
repz
pop
jmp
jmp
arpl
xchg
cltd
xchg
imul
fistpl
adc
sub
pop
xor
popa
push
mov
fsts
mov
push
jae
and
push
nop
dec
lahf
jnp
adc
adc
cmp
nop
stos
lods
out
clc
dec
fmul
pop
sbb
nop
xor
ficoml
xchg
cmp
or
mov
inc
push
in
shll
jg
adc
mov
dec
xor
sub
data16
stos
and
loope
add
in
daa
inc
lock
sub
ja
std
sub
stc
xor
xor
inc
xorl
roll
add
ret
mov
mov
sub
xchg
pop
inc
int3
out
adc
ret
or
cmpb
cmpsb
push
mov
lahf
mov
into
shlb
jmp
pop
clc
repz
outsl
mov
xlat
rorl
sbbl
outsl
xchg
cmpsb
dec
das
ds
rolb
cmp
inc
test
out
xor
call
sti
push
repnz
dec
jmp
stos
jmp
xchg
sbb
mov
cmp
outsl
cltd
or
or
clc
das
leave
loopne
add
popa
pop
pop
sbb
imul
adc
movsb
aam
inc
dec
inc
mov
and
cmp
scas
andb
enter
sbb
mov
rclb
rclb
mov
fistpll
mov
push
dec
push
mov
into
cmpl
sub
cld
lcall
inc
inc
mov
jecxz
adc
ljmp
imul
add
cmpsb
push
cld
mul
mov
shrb
addr16
in
sub
faddl
mov
mov
pop
test
test
call
dec
scas
xchg
jl
fwait
lods
inc
cmp
stos
and
add
ret
popa
mov
iret
jg
mov
xchg
dec
push
lahf
shll
arpl
pop
mov
or
cmpsl
ret
or
aam
adc
ret
adc
jg
mov
sbb
pop
xchg
push
pop
repnz
ret
je
mov
or
push
ljmp
dec
hlt
mov
xor
push
fcoms
ret
push
fbld
sbb
mov
push
cmc
cmp
push
out
or
jnp
sub
lahf
push
jl
xor
or
jo
cmp
std
push
add
jle
and
jbe
aas
dec
inc
pop
jg
cmp
stos
inc
pushl
jne
imul
lock
repnz
rclb
push
xor
and
inc
stos
dec
cmp
mov
cmp
pop
lods
adc
daa
nop
jnp,pn
dec
dec
stos
gs
pushf
and
mov
mov
sti
nop
hlt
xchg
xor
xchg
out
xorb
aaa
arpl
push
adcl
mov
inc
in
add
jge
mov
mov
ficompl
dec
mov
ret
push
jne
pushl
or
cltd
jecxz
pusha
shr
add
aas
or
test
lcall
fwait
orl
pop
sbb
out
pop
das
mov
jno
js
push
pop
jmp
jge
mov
jg
sar
shll
mov
push
mov
mov
or
aaa
in
push
rcl
imull
xchg
loope
ret
mov
mov
pop
xchg
or
enter
leave
sbb
jae
lcall
addr16
dec
aad
or
fnstcw
pop
sbb
pusha
idivb
iret
jb
lds
adc
leave
sbb
mov
loopne
outsl
adc
jle
sahf
xor
xchg
mov
lods
ret
pop
cmp
sub
pop
icebp
mov
mov
jge
out
in
and
push
clc
mov
cmc
mov
cmp
fildll
and
jl
mov
ret
out
aad
lds
cltd
cmp
mov
gs
and
inc
xchg
mov
shrb
bound
std
dec
jmp
add
jge
jbe
mov
shlb
outsb
in
pop
insl
add
push
pushf
push
ja
push
sbb
cs
rcll
dec
je
sbb
mov
and
cltd
repz
mov
dec
pop
rorl
push
mov
lods
mov
enter
pop
hlt
xor
push
repz
push
jmp
add
inc
lock
mov
pusha
mov
push
and
ljmp
lahf
lods
ja
push
xor
cmpsl
jp
add
inc
rcll
and
in
stos
popf
cmp
cld
add
loopne
pushf
adc
mov
loopne
popf
xor
test
jnp
mov
out
mov
cmp
dec
jecxz
ret
mov
inc
roll
adc
adc
pushl
addr16
ds
jb
sbb
stos
int
and
out
mov
imul
xchg
lcall
lock
aam
pmulhuw
sbbl
call
call
jecxz
push
inc
mov
jge
ja
push
and
popa
repnz
ja
imul
ret
jnp
pop
ret
cmpsb
clc
inc
sub
ror
inc
sub
sti
or
pop
or
pop
add
xor
fwait
xchg
movsl
cmpsb
decb
pop
lods
xchg
into
push
adcl
push
pop
cmp
cld
push
pusha
aaa
xor
inc
ffreep
ds
sahf
mov
add
jle
mov
and
icebp
adc
or
sub
stos
imul
shl
push
fwait
mov
pop
jecxz
out
addr16
pop
jo
mov
insb
in
mov
pop
lds
test
gs
xchg
mov
inc
notl
daa
in
fldl
push
jb
inc
jnp
cmp
aam
scas
stc
or
cmp
sub
fwait
aad
cmp
mov
loope
or
push
rol
cmpsl
sub
subl
push
pop
cwtl
inc
idiv
dec
push
imull
and
loopne
mov
or
pop
xor
in
add
mov
and
mov
push
out
mov
push
adc
and
in
xchg
dec
xchg
push
push
push
cmp
inc
sbb
jl
or
xor
test
lcall
inc
xchg
pop
jle
and
ss
sbb
adc
js
dec
sub
or
cmp
in
sbb
imul
jns
movsl
dec
jmp
pop
dec
scas
movsb
pop
adc
fistl
pop
sub
fucom
mov
sub
push
mov
ljmp
fmuls
in
or
push
test
push
repnz
ds
mov
mov
xchg
jg
mov
dec
inc
xorl
ficoms
dec
jmp
jge
insb
incl
fbstp
push
out
jnp
bound
scas
adc
in
add
xchg
inc
clc
lcall
or
pop
rcrb
insb
and
in
mov
loop
xchg
ret
adc
add
movsb
pop
xor
push
cmp
cmpsb
stc
pop
xorb
add
jl
outsl
arpl
push
pop
lea
and
mov
rcll
adc
loope
cmp
adc
xor
inc
sbbl
push
pop
daa
xlat
jnp
lret
out
ljmp
loope
add
push
pop
mov
je
cmp
rcrl
sub
dec
adc
inc
sbb
or
or
add
push
add
push
out
sbb
xor
repnz
pop
sbb
push
ret
pop
mov
push
xchg
loope
mov
pop
add
dec
sti
nop
movb
repnz
pushf
es
bound
push
inc
inc
adc
popl
and
sub
cmp
inc
mov
cmp
sbb
out
das
mov
sbb
in
imul
sarl
and
sahf
push
lret
sub
jae
xlat
mov
cmp
sti
loopne
clc
mov
dec
mov
iret
and
or
es
xchg
call
or
adc
test
xor
sub
std
dec
push
fiadds
pop
js
repnz
int3
xor
inc
xchg
popf
lock
sbb
lods
add
sbb
out
jns
daa
je
add
dec
mov
or
jecxz,pt
xchg
or
xchg
ret
inc
pop
fwait
pop
bound
fs
rcr
inc
clc
pop
pop
mov
and
call
jo
or
fs
arpl
es
sbb
out
les
mov
test
lret
adc
cmpsb
pop
out
in
cmp
jp,pt
cltd
push
dec
pop
lds
jno
ss
ficomps
push
mov
sub
es
and
add
cmpsl
sub
sbb
jmp
adc
mov
ljmp
call
push
andb
push
cld
mov
repnz
dec
mov
or
cld
pusha
push
fldt
jmp
daa
add
sbb
lock
jbe
mov
xchg
in
std
lret
jecxz
push
decl
loope
sub
sbbb
loopne
cmp
push
mov
inc
mov
or
iret
sbb
jns
out
dec
loope
mov
xchg
not
cwtl
popf
sbb
fildll
sbb
dec
pop
aad
call
imul
or
lea
cli
pop
data16
jmp
xor
jmp
xchg
sahf
inc
mov
push
sbb
sbb
add
aas
mov
mov
repnz
jae
es
xchg
imul
xchg
adc
testl
shlb
imull
cmpsl
add
cmpsl
mov
adc
test
mov
sbb
jo
mov
dec
mov
enter
dec
sbbl
ds
dec
mov
and
xchg
jl
inc
enter
cmp
test
js
icebp
sub
push
lea
ja
aaa
sub
subl
insb
push
xchg
dec
dec
xor
jp
shll
or
jae
test
fwait
lret
mov
mov
cmpl
je
movsl
adc
add
xchg
sarb
sbb
stos
lcall
cld
cmc
mull
lcall
rcl
in
adc
xor
je
push
scas
int3
sub
and
cmpsb
idivl
xor
outsl
cmp
lret
push
repz
jne
add
sbb
xor
imul
jl
cmp
sub
and
mov
dec
lea
mov
shll
ret
add
jg
adc
xor
ret
or
outsb
mov
xor
pop
cmp
daa
sti
data16
stos
and
mov
sbb
rorb
push
in
mov
nop
ds
or
jbe
nop
addb
nop
addr16
addb
das
jbe
rolb
rcll
pop
xor
lods
cltd
je
xlat
jnp
cs
cmp
or
repnz
and
or
call
push
nop
pusha
xlat
push
repnz
arpl
xlat
pop
xchg
inc
fisttpl
subb
enter
dec
add
mov
pusha
nopl
iret
lods
mov
pop
imul
std
sbb
pop
xor
pusha
add
cmp
sbb
pusha
push
jo
pop
jle
push
xchg
cmp
in
add
sub
jb
stc
test
lcall
std
mov
mul
sub
out
sub
data16
stc
pop
mov
in
loop
js
dec
xchg
es
add
lcall
dec
ds
xlat
jge,pn
mov
xor
leave
shrb
test
xor
cld
xchg
in
xor
fs
pop
jg
sbbl
cmpsl
andl
pusha
leave
lds
xchg
fdivr
cmp
mov
outsl
xchg
repz
pop
into
stos
std
push
push
popa
add
xor
xchg
jb
sub
aam
fsubs
cmpsl
sbb
sub
mov
negl
outsb
fisubrs
inc
daa
mov
in
add
out
jne
cmc
adc
scas
adc
jnp
xchg
and
and
push
push
btc
sub
pushf
rol
mov
sub
add
mov
shrl
xchg
adc
sarl
xchg
or
push
mov
aam
mov
xchg
sub
lods
inc
cmp
jp
mov
inc
das
loopne
mov
mov
jnp
jb
sub
movl
or
xor
in
out
jmp
je
xor
sbb
pop
push
cltd
mov
push
add
fadds
ret
sub
sbb
fcompl
mov
dec
fildll
leave
push
jg
xchg
mov
pop
jnp
cwtl
inc
mov
xor
jo
jne
adc
movsb
mov
dec
out
stos
sub
out
pop
jne
dec
pop
cmp
pop
lret
jge
js
pop
mov
in
int
inc
cld
jmp
movsb
enter
xchg
xlat
scas
incb
imul
cmc
je
insb
pop
mul
lcall
arpl
cmp
mov
add
or
popa
pop
jb
mov
jno
sbb
iret
ret
cli
cmp
sbb
imul
mov
mov
test
outsb
jne
lock
into
or
xchg
xor
outsb
pushl
or
js
push
iret
cmc
cmc
call
les
filds
push
push
cmp
in
outsb
bound
and
mov
cmp
mov
jp
push
je
je
and
iret
sub
or
add
popl
sbb
aas
add
xchg
cmp
ss
sub
call
fmull
jo
mov
clc
sbb
loop
xor
mov
mov
pop
mov
or
in
push
jno
add
inc
jb
and
adc
mov
dec
test
out
es
add
popa
iret
add
nop
adc
sahf
pop
add
push
loop
ljmp
cld
cmp
dec
sar
inc
inc
lock
cmp
cmp
mov
outsb
lret
fisubrs
iret
cmp
sbb
ret
push
out
gs
rcrb
adc
fcomps
push
adc
sub
mov
out
xchg
mov
inc
out
out
outsb
xchg
adc
or
fldt
jnp
adc
or
aaa
popf
add
idivb
cmc
sbb
pop
sub
pop
adc
movsl
xchg
roll
out
xchg
xchg
pop
inc
cmp
aaa
or
mov
call
xor
hlt
pop
inc
sahf
pop
or
mov
push
or
stos
and
aaa
shlb
xor
lcall
adcl
add
fiaddl
inc
cmp
mov
daa
add
fwait
in
arpl
inc
repz
fsubs
inc
pusha
sbb
push
or
jge
mov
adc
cmp
cmp
cmp
ds
popf
xchg
mov
nop
test
clc
jnp
xchg
sbb
shl
pop
lret
adc
inc
sbb
insb
xchg
in
pop
movsb
daa
dec
aaa
int
sub
pushf
push
iret
mov
aaa
mov
and
push
sub
sbb
in
gs
pusha
pop
ds
xchg
in
dec
pop
add
fmull
test
testl
add
mov
mov
lea
cmp
jne
mov
xor
add
mov
mov
add
jmp
iret
jmp
sub
cli
in
xchg
sbb
or
add
sub
sahf
jnp
leave
xor
fiadds
jnp
adc
lds
into
xor
shl
adc
dec
add
data16
adc
dec
adc
mov
add
aas
ret
jmp
inc
movsb
add
mov
xchg
mov
xchg
in
int
js
aad
pop
cmp
jmp
dec
arpl
lods
push
ss
pushf
adc
sub
mov
sbb
cmp
es
sbb
cmp
aas
or
fisubs
fs
ljmp
jl
and
pop
data16
sbb
xor
out
inc
test
or
mov
aam
outsb
xorl
dec
mov
mov
lahf
loopne
faddl
add
mov
jecxz
dec
xchg
aas
aad
sbb
dec
mov
add
inc
in
push
int3
imul
sti
test
push
add
add
push
pop
in
mov
xchg
mov
fidivrs
mov
cwtl
pop
dec
mov
test
push
or
inc
xor
clc
sub
in
fistpl
cli
add
cmp
pop
std
sbb
gs
adc
aaa
lods
xchg
ja
hlt
adc
sub
mov
ds
push
adc
lret
pop
mov
out
jp
dec
call
hlt
ljmp
sti
push
popf
mov
stos
inc
dec
push
std
or
std
lcall
mov
mov
add
lcall
mov
movsl
adc
inc
pop
xor
mov
adc
fsubrl
push
lcall
repnz
fildl
cmc
ljmp
dec
in
arpl
shlb
pop
adc
icebp
push
push
xchg
lods
jbe
mov
cld
push
jns
lret
inc
out
imul
xor
cld
and
incl
xchg
clc
lds
mov
mov
mov
cmp
jno
mov
mov
or
dec
mov
mov
sbb
stos
rorb
enter
pop
aas
fidivrs
ja
xchg
sti
int3
das
in
shrl
subb
or
cld
mov
das
adc
xchg
add
std
sub
shl
or
arpl
movsl
pop
iret
rolw
lds
push
pop
mov
jg
or
jl
lcall
add
pop
xor
je
dec
inc
push
in
test
dec
mov
inc
mov
mov
shlb
inc
lods
mov
je
mov
jle
pusha
mov
fdivrs
scas
cmp
or
popf
fcomip
jae
xor
nop
sbb
sub
push
cmp
sbb
and
add
enter
loopne
dec
popa
repnz
ds
mov
push
mov
aas
mov
sub
lock
dec
or
arpl
add
vpcmov
mov
stc
xchg
inc
push
add
xor
sarb
pop
add
enter
jno
pop
mov
cmc
cmp
stos
fbld
jo
add
mov
ret
aad
adc
xor
jmp
lods
pop
dec
das
leave
out
push
je
push
or
call
push
fisttpl
iret
cli
dec
mov
inc
adc
shr
dec
leave
and
stos
xchg
mov
mov
test
jmp
dec
jne
mov
mov
cmp
and
dec
push
dec
rorb
pop
cmp
sub
add
stc
adc
adc
ja
xor
rorl
xchg
add
jecxz
xor
punpckldq
pop
dec
sub
rclb
insl
cld
stc
push
int
mov
dec
pushf
fsqrt
in
pop
and
mov
aam
out
push
inc
sub
add
in
lea
jg
and
test
and
adcb
mov
pusha
adc
inc
sahf
cmp
fimull
es
sar
add
sbb
ljmp
dec
sub
push
mov
push
repz
pusha
lods
insl
cmp
xchg
sbb
push
scas
push
lcall
jmp
daa
push
test
mov
aas
jge
cmp
mov
cmp
mov
lcall
ds
fstpt
sarl
sbbb
jb
dec
call
nop/reserved
flds
jae
enter
imul
lods
xchg
test
jne
sub
mov
mov
pop
enter
adc
or
cmp
out
rcl
arpl
sub
data16
testb
adcb
jg
popa
xchg
or
mov
add
movb
icebp
mov
inc
xor
jae
mov
popa
mov
push
mov
iret
dec
push
adc
sbb
incb
out
mov
inc
inc
xchg
movsb
scas
mov
icebp
jne
lcall
cmpsb
add
sbb
clc
add
mov
jmp
repnz
sarl
adc
cmpl
cwtl
mov
test
lock
sub
lods
dec
adc
push
ret
xlat
jl
inc
add
sbb
mov
mov
fisttps
fidivrs
nop
lock
jb
test
dec
push
scas
movsl
and
test
add
jo
adc
loop
mov
iret
pop
outsl
jno
add
inc
mov
les
rclb
pop
or
ret
mov
stos
inc
test
and
insb
lcall
les
repnz
xor
push
sbb
movsl
daa
cld
pop
jge
pop
int
adc
ror
int
fwait
push
enter
cmp
popf
pop
push
pusha
aaa
dec
addb
pop
dec
stc
in
test
inc
ret
jl
mov
nop
out
dec
in
fisttpll
cmpsl
iret
pop
int
pushf
test
inc
in
dec
sbb
xchg
push
mov
xchg
jmp
xchg
lods
shrl
fisttpll
push
sbb
inc
call
jmp
push
fwait
out
xchg
mov
pop
lock
les
mov
roll
imul
fmul
dec
sub
lahf
test
and
push
mov
dec
ja
push
adc
or
lcall
ds
mov
mov
dec
outsl
dec
adc
inc
or
outsl
fdivrl
dec
mov
push
aam
out
sti
xchg
out
imul
xor
cmc
jmp
add
rorl
mov
push
or
in
fwait
push
mov
push
cmc
test
movsl
inc
mov
adc
in
jns
movsb
pop
mov
adc
scas
outsb
std
cmp
fsubp
stc
add
mov
lods
cmp
fwait
hlt
insl
sub
rorl
or
ja
mov
mov
fs
fbstp
lds
cmp
dec
repnz
fisubs
shrl
hlt
pop
shr
fstl
das
inc
sbb
into
push
mov
dec
pop
outsl
pop
js
shl
js
out
das
add
xlat
inc
inc
inc
lods
pop
clc
sub
pop
adc
jb
sub
int
sub
lea
pop
push
ljmp
xchg
and
jmp
mov
mov
mov
lods
cmp
cmp
sbb
and
or
into
es
in
or
loope
and
xorl
xor
enter
les
xchg
inc
stc
xchg
cmpsl
fimull
mov
pop
xor
fildll
loop
orb
ret
mov
xor
js
mov
cwtl
push
mov
out
ret
sbb
push
cltd
fistpll
aaa
lods
jecxz
pop
sbb
es
testb
popa
ficoms
cmp
mov
sbb
in
mov
and
pop
in
lret
popf
cmpl
aad
xor
or
loopne
movsb
mov
pushf
dec
push
dec
scas
in
fs
arpl
sub
bound
fucomi
mov
cmp
pop
clc
pop
push
sbb
imul
daa
mov
sbb
es
push
push
loop
inc
mov
clc
out
les
mov
dec
cli
mov
mov
lret
sub
daa
xchg
push
push
mov
cmp
es
lods
das
ljmp
xlat
jb
xor
xor
xor
cli
inc
cmpsb
enter
jae
stos
lcall
mov
xor
jecxz
jno
repz
jmp
imull
bound
insb
sub
shr
jg
loop
pop
leave
add
or
jbe
stos
popf
je
movsl
mov
mov
addr16
push
sbb
add
stc
lods
pop
test
test
jp
push
aaa
jae
or
fistl
mov
imul
mov
loope
aad
pop
stos
and
aas
pop
jae
mov
xor
int
rcl
mov
insb
fstpl
pop
insb
mov
jne
loope
xchg
push
lods
sub
fnsave
adc
mov
decl
ret
jno
jg
call
shl
fwait
pop
hlt
mov
movsb
stos
or
scas
jmp
and
xorl
adc
mov
mov
mov
mov
fdivl
push
dec
addr16
sahf
add
xchg
inc
dec
mov
in
sbb
pop
pop
shrb
mov
add
divb
popf
and
stc
lret
pop
shlb
sbb
je
sub
mov
pop
adcb
hlt
loopne
aas
xchg
mov
sahf
std
stos
bound
fldcw
cmp
dec
and
mov
xor
pop
xor
psllq
jmp
mov
and
adcb
lea
cmp
hlt
dec
sbbl
jg
dec
pop
loop
insl
sbb
sub
push
loope
jns
ja
xchg
and
push
cmc
sub
xchg
out
push
cmp
daa
dec
cmc
dec
push
pop
out
fs
mov
pusha
or
adc
cld
sub
outsb
lret
jo
pop
xor
cmp
pop
pop
pop
inc
mov
mov
les
xchg
inc
dec
sbb
pop
cmp
jmp
stc
insl
lcall
jg
xchg
mov
nop
jp
in
adc
or
lret
inc
shrl
jmp
mov
movsb
scas
mov
pop
mov
jns
sbb
sbb
pop
push
hlt
loop
pop
xor
fdiv
xor
xchg
mov
jns
lahf
push
pop
fiadds
mov
adc
xor
or
pop
and
mov
cs
and
lods
outsb
xchg
popa
ffreep
andb
xor
stos
sub
jmp
lds
sub
out
jl
mov
xor
xor
jnp
repz
push
mov
in
xor
add
push
test
jg
inc
cltd
sbb
notb
loope
lahf
imul
out
sbb
rclb
mov
fidivrs
lock
in
sbb
rcrb
mov
scas
scas
ret
ret
push
dec
adc
cmp
imul
and
je
rcll
imul
jmp
xchg
mov
mov
xchg
ds
std
scas
test
mov
push
xor
push
pcmpgtb
in
lea
xlat
into
xchg
sbb
insl
movsb
inc
shlb
fdivp
dec
fcmovb
dec
add
xchg
mov
sbb
xchg
xchg
dec
ja
into
adc
dec
sub
setno
lahf
xchg
mov
pop
jnp
scas
mov
xchg
add
jno
inc
repnz
pusha
cmp
push
and
mov
hlt
add
mov
stos
es
aaa
shll
lock
inc
sub
jnp
mov
mov
dec
mov
push
cwtl
xchg
rcrb
xorl
lret
test
pop
add
pop
push
scas
outsl
cmpsl
pop
push
clc
hlt
sbb
mov
inc
jb
cmp
dec
iret
dec
nop
mov
repnz
leave
mov
out
cld
jbe
adc
ja
pop
icebp
call
add
add
cltd
mov
push
or
inc
mov
cmpsl
sub
es
jbe
xchg
rcpps
out
jb
or
mov
push
lea
dec
mov
cmp
sahf
jg
mov
xchg
adc
insb
xor
stc
movsb
cwtl
popa
cmp
rorb
push
lret
sar
adc
push
sub
hlt
push
les
add
jmp
jnp
sub
call
jl
xorl
inc
push
pop
lock
ficoml
mov
std
out
rcl
sub
mov
pop
cmp
loope
shlb
sub
fst
push
aas
data16
stos
mov
nop
mov
mov
add
push
pusha
jb
inc
data16
or
and
pushf
jl
cli
or
jp
movsb
mov
lea
push
sub
loope
outsb
xchg
push
stc
loope
repz
cmp
add
outsl
orl
xchg
sub
xchg
jl
xchg
in
fcomp
pushf
outsl
and
cld
int
mov
jmp
out
fistpl
into
shr
aad
movsl
movsl
dec
xor
push
sarb
xchg
xor
mov
cmp
mov
jnp
sub
mov
mov
jle
shrl
repnz
jae
inc
cltd
test
or
sub
xor
add
stc
shlb
add
push
or
xchg
lcall
pop
jae
movsl
mov
imul
cmpsb
mov
sarb
das
or
push
add
add
cwtl
mov
cmp
and
adc
sub
sbb
push
scas
xorb
aad
stos
setle
stos
aam
or
jl
clc
or
dec
mov
jbe
xor
mov
rcl
cmp
test
cmc
cmp
js
in
jl
stc
mov
pop
pop
xlat
cmp
sbb
mov
leave
scas
lods
mov
sub
pop
ret
testl
xchg
cld
aaa
int3
jbe
pop
cmp
dec
fwait
push
mov
and
test
jg
pop
lahf
dec
pop
or
add
pop
push
icebp
stos
ret
cmc
jno
fs
jo
dec
ss
lcall
lock
int3
rcrl
push
adc
lds
cli
cltd
pushf
fsubl
insb
stos
pop
push
jb
pop
or
lods
sti
repz
outsl
test
call
pop
mov
push
pop
pop
enter
cmpsb
or
cmp
jmp
sbb
imulb
clc
adc
int3
adc
popf
out
scas
xchg
movsb
add
jp
idivl
jle
ja
adc
push
sbb
loop
test
jne
cmc
inc
jns
cltd
ja
out
jno
negb
dec
adc
popf
pop
push
lods
xchg
mov
fiaddl
and
movsl
out
jecxz
pop
xchg
dec
int
dec
aaa
in
mov
dec
mov
sbb
sti
fstl
test
inc
ja
mov
mov
pop
nop
shlb
rclb
mov
inc
lods
loope
cltd
fisubl
sub
out
mov
mov
fcom
fisttpll
cs
jmp
mov
pop
push
int3
test
rcr
xor
out
add
ds
jnp
xorb
add
test
pop
jns
push
adc
repnz
pop
and
mov
daa
in
inc
adc
xor
mov
sub
imul
cmpsl
into
mov
icebp
in
sub
mov
mov
jns
and
push
imul
aas
dec
pop
test
xor
ljmp
ss
rorb
leave
or
js
and
fcoml
imul
cmpsl
test
push
imul
xor
mov
cwtl
lods
mov
jbe
shll
imul
or
jle
das
xorb
jno
lea
and
jp
into
icebp
fbld
scas
add
stc
ficoms
xchg
mov
imul
pop
addr16
in
adc
xchg
iret
test
inc
pop
xor
dec
pusha
push
loopne
xcrypt-ofb
cmpsl
sub
sbb
shl
xchg
test
arpl
inc
repnz
ror
add
xor
mov
push
mov
inc
pushf
sbb
and
adc
inc
push
push
js
dec
push
dec
arpl
inc
das
xchg
flds
xchg
push
in
xchg
push
dec
cli
and
mov
mov
jecxz
ret
pusha
sbb
icebp
stc
enter
and
add
inc
jae
xchg
dec
cmpsl
fimull
jecxz
orl
ja
gs
mov
jg
in
xor
dec
hlt
dec
dec
jno
dec
cmpsl
and
enter
test
int3
leave
cld
pushl
jae
and
daa
push
sbb
add
imul
aas
jne
pushf
testl
cld
jmp
push
push
cmp
stc
inc
sub
outsb
dec
push
pop
xchg
clc
jo
jne
lods
cltd
test
jns
stc
and
insl
adc
fucom
xchg
mov
xchg
xchg
imul
cli
mov
xchg
ret
aam
aas
lods
pop
cs
jle
cmpsl
xor
mov
push
jnp
lock
dec
xchg
fcoms
aas
add
xor
fiadds
call
loope
es
mov
aaa
cmpsb
push
addl
scas
pushf
in
repnz
cs
jno
xchg
xlat
jle
fwait
sahf
int3
mov
hlt
inc
cmp
mov
add
testb
dec
xchg
lret
and
movsb
jg
rcrb
xor
cmp
sub
pop
loopne
mov
outsl
or
ja
call
mov
mov
xchg
xchg
sti
jbe
lret
or
test
sub
flds
cmpsl
ljmp
sub
iret
dec
mov
lret
test
scas
add
sbb
push
push
dec
xor
xchg
jmp
mov
ljmp
xchg
mov
xor
test
into
push
mov
lea
pop
inc
adc
arpl
mov
fs
xchg
mov
push
dec
pop
movsl
lods
cmpsb
jbe
xor
adc
sti
xor
adc
movsb
pop
dec
or
and
dec
ljmp
inc
lds
adc
std
insl
cwtl
cwtl
cltd
ret
mov
xchg
xchg
xor
adc
pop
stos
int
mov
cmc
xchg
testl
fidivl
mov
frstpm(287
jmp
sti
or
stos
xor
dec
fdivr
inc
push
jbe
dec
or
loope
enter
xor
or
mov
pop
test
push
aaa
insl
xchg
dec
mov
jecxz
lea
test
jecxz
jg
insl
stos
mov
lret
je
push
ja
mov
adc
jmp
pop
pop
test
cmp
cmp
and
mov
pop
pop
sti
pop
jmp
or
mov
ret
sbbl
imul
stc
jle
paddsb
pop
and
mov
call
std
insl
mov
pop
lds
cmpsb
sub
rol
add
xchg
into
dec
stos
adc
outsl
inc
inc
mov
add
jno
mov
add
xor
jns
xchg
sub
or
mov
push
test
ss
lock
pop
sbb
fbstp
push
cmp
mov
out
mov
sub
lahf
adc
add
in
fmull
aaa
inc
outsb
test
ljmp
dec
into
and
push
sub
mov
pop
outsb
dec
or
je
inc
cltd
loope
inc
xor
js
pop
pop
add
data16
ffreep
gs
or
push
arpl
adc
sbb
cmpsb
enter
dec
mov
jl
jmp
ret
outsl
pop
jecxz
aaa
jge
les
pop
test
sbb
sub
insb
mov
mov
or
lahf
add
adc
std
lock
aam
mov
push
mov
shll
mov
mov
insb
clc
add
js
andl
xchg
and
test
lahf
jbe
lods
outsb
push
std
cwtl
cwtl
cmp
pop
mov
arpl
shll
call
add
dec
mov
bound
and
sub
push
jns,pt
adc
xchg
mov
push
cli
adc
cld
fbstp
mov
xor
jo
sbb
push
shll
dec
sub
inc
mov
hlt
adc
mov
je
dec
pop
fsub
stos
xor
mov
mulb
or
rcll
in
lahf
push
sub
pop
xchg
stos
es
into
dec
jno
add
adcb
data16
mov
test
int3
or
pushf
test
sub
lock
mov
into
bnd
leave
or
push
outsb
std
adc
jo
adc
or
pusha
sub
mov
aaa
jb
sbb
daa
cltd
dec
lcall
push
xor
daa
ds
cmpb
lock
xchg
test
dec
jle
and
add
inc
pop
incb
imul
mov
inc
mov
pop
push
mov
push
cmp
fistpll
jns
data16
and
ja
decl
add
ret
dec
push
push
push
test
insb
test
push
mov
mov
mov
mov
mov
lock
popf
leave
repz
lds
pushf
rcr
or
sub
lods
or
xchg
pop
stos
xor
inc
xor
sti
mov
sub
jl
xchg
fidivl
sarl
ljmp
jns
pop
fsts
push
vmread
sbb
popa
mov
add
sbb
push
fbstp
lcall
cmpsl
pop
cmp
cmp
pushf
pop
mov
jmp
or
fs
inc
js
jge
mov
imul
xchg
xor
xor
repz
jae
cld
or
adc
adc
xor
sbb
jnp
mov
adc
scas
fwait
inc
push
xchg
lock
cmp
test
fbld
push
mov
outsl
jmp
lret
lods
and
rorl
outsl
mov
scas
cld
xor
popa
jmp
int3
lds
insb
iret
lods
push
hlt
inc
orb
stc
stos
cmp
mov
xor
repz
cmpsl
adc
adc
xchg
xor
mov
cmp
inc
insb
mov
cmp
cwtl
sub
pusha
ret
mov
mov
aam
subb
push
push
or
imul
in
ja
packssdw
jno
test
sarb
rorb
int
divb
ret
sbb
hlt
lods
lock
sahf
ja
enter
int3
and
clc
fwait
pop
mov
pop
mov
rol
std
jge
mov
push
sub
lret
pushf
push
or
into
clc
enter
push
push
dec
and
stc
jl
lock
gs
negb
es
icebp
pop
insl
xchg
into
inc
push
aad
push
dec
iret
fstpt
and
jb
xor
iret
xchg
jecxz
cmp
and
pop
sub
xchg
push
dec
sub
inc
cmpsb
div
in
stos
or
jae
fdivs
popa
mov
push
mov
pop
sub
fsubp
pop
mov
bound
mov
loop
mov
lret
add
dec
fidivrl
loope
add
push
push
insl
test
test
cmp
jb
add
stos
rolb
ja
jmp
add
jne
adc
jmp
jnp
cmp
ret
mov
ret
xchg
call
xchg
cmp
in
push
aam
mov
frstor
xchg
iret
test
fisubrl
rclb
push
mov
stc
push
or
rcrl
fnstsw
pop
subb
jge
loop
arpl
pop
cld
jno
jle
fnsetpm(287
ljmp
clc
jecxz
jb
cmc
loop
dec
ja
cmp
aad
popf
jp
into
into
xchg
imul
adc
mov
jns
out
sbb
les
ret
push
inc
push
lret
xchg
loopne
and
pop
fisttpll
dec
jae
sti
cli
imulb
insb
aas
xlat
iret
lahf
pop
cmp
jmp
sbb
pop
xchg
lcall
jmp
pop
jae
mov
pop
add
lahf
add
bsf
popa
jnp
inc
and
int3
xchg
jno
pusha
mov
or
push
aaa
push
adc
adc
fst
xlat
aam
ret
testb
iret
mov
xchg
inc
adc
jnp
jecxz
mov
repz
pop
movsb
mov
sbb
stos
sbb
dec
dec
inc
lret
cwtl
sahf
dec
ret
outsb
push
mov
test
sub
adc
shl
dec
loop
mov
lea
outsl
and
arpl
je
pop
fists
dec
sub
mov
xchg
xor
mov
adc
fcmovnbe
push
push
movsl
inc
adc
or
sub
js
jns
dec
loopne
lcall
insl
mov
es
sub
adc
sbb
popf
hlt
fdivl
gs
testl
inc
icebp
dec
fiaddl
bound
vp4dpwssd
fisttps
mov
mov
idivl
adc
sub
adc
push
repz
rcr
push
in
ret
sub
movsl
pop
cmp
jno
adc
pop
lret
and
mov
mov
push
out
mov
push
mov
pop
dec
ret
mov
mov
and
xchg
xorl
lock
adc
xor
in
mov
test
inc
add
add
imul
ja
outsl
int
push
std
jb
test
fwait
aad
and
mov
mov
jns
in
add
mov
pop
fs
movsb
mov
mov
mov
orl
dec
add
jecxz
sub
mov
jg
xor
pop
popf
pusha
mov
add
fs
mov
pop
cmpsb
imul
je
push
sbb
inc
xor
aaa
and
cmp
movsl
sub
ss
push
xor
jno
cmpl
test
mov
mov
dec
fldl
mov
cld
jl
push
or
repz
and
movsb
sub
insb
imul
inc
push
xchg
xchg
adc
movl
pop
into
pop
xchg
pop
dec
dec
and
popf
add
dec
mov
jae
cmpsl
scas
sbb
adc
ret
mov
std
jne
pusha
add
int3
or
push
outsb
xor
enter
lahf
jl
loopne
sbb
loop
fists
mov
das
jl
jno
adc
jnp
dec
cli
jnp
loop
jae
pop
push
fdivp
aad
add
rolb
lock
sti
out
test
push
jns
xor
and
in
sub
xchg
gs
pop
int3
dec
sbb
adc
rcrl
push
sub
xor
dec
pop
dec
imul
movsl
stc
sti
jnp
xchg
cmp
fwait
xchg
fs
out
ss
cmpl
push
call
das
lret
cmpsl
jno
mov
out
mov
push
popa
in
sbbb
movsl
cmpsb
or
push
adc
xor
shrl
fidivrs
loopne
das
jno
add
notb
scas
sub
jae
jb
movsl
xchg
jp
jo
push
out
test
jp
mov
sbb
shl
sub
pushf
jno
jle
dec
popa
xor
dec
and
int3
add
scas
ljmp
je
aaa
addr16
sub
cmp
adcb
add
arpl
repnz
jns
jle
hlt
sti
xor
xchg
outsl
test
dec
fldt
jnp
sahf
mov
test
shr
insl
jns
push
mov
sahf
add
shrb
fistps
pop
sahf
in
call
fwait
mov
mov
dec
pop
jnp
cmc
ret
cmp
xchg
mov
xchg
and
mov
cmp
fistps
cmp
orl
add
inc
lret
or
dec
pop
je
lock
push
mov
fwait
or
icebp
mov
pushf
push
push
sub
cmp
aam
sub
test
rol
lea
jge
jo
test
ret
pop
cld
dec
adc
pop
mov
adc
stos
dec
lret
mov
mov
clc
aas
sub
xor
sbb
fldl
pusha
sub
test
cmc
push
xor
iret
int
dec
push
loopne
inc
imul
insl
lods
adc
movsl
mov
mov
mov
jns
ss
in
stos
lods
or
mov
roll
inc
fstps
pop
and
subb
js
add
adc
test
data16
pop
pop
mov
out
data16
mov
ds
movsl
test
mov
xchg
dec
inc
inc
popa
lea
jns
scas
out
adcl
shl
movb
dec
arpl
aad
call
mov
push
jb
xlat
mov
cmpsl
adc
adc
push
xchg
dec
pop
push
ret
push
mov
orb
pop
pop
dec
dec
cmpsb
scas
mov
push
jg
arpl
divb
shll
dec
mov
mov
jno
push
mov
xchg
push
push
xchg
rcll
shlb
dec
lds
pop
xchg
sub
stc
stos
cmp
sbb
pop
push
cmp
out
fildll
push
inc
xchg
adc
pushf
xor
inc
fisubrs
nop
popf
jmp
pop
pop
fwait
fwait
and
push
ja
in
popf
lods
dec
cwtl
sbb
jecxz
xor
in
push
sbb
cmpsl
or
adc
add
enter
jb
rcrl
mov
add
xchg
pop
repnz
push
sub
hlt
jmp
xchg
add
xchg
shl
xchg
dec
sub
sub
das
sub
lahf
lods
imul
clc
cmp
icebp
mov
cwtl
xchg
push
push
test
sahf
fcoml
add
push
shlb
jne
decl
push
les
out
and
insb
out
mov
mov
jne
stos
imul
add
arpl
cmc
inc
jge
icebp
inc
fisubs
cmp
call
and
push
inc
sub
sbb
xchg
jns
xor
adc
sub
jb
adc
add
ja
adc
dec
negl
popa
mov
and
gs
jg
push
cld
daa
add
daa
push
test
cmc
negl
push
lahf
fldcw
es
ficomps
fisubl
add
inc
in
inc
xor
adc
jae
icebp
pop
mov
das
cwtl
cli
outsb
sti
dec
push
loope
xchg
push
fldl2e
sbb
or
lcall
ss
ljmp
xchg
sar
mov
pop
inc
fldenv
sbb
mov
push
lods
or
mov
dec
mov
movsb
imul
mov
dec
cmp
lret
jp
pusha
int
lret
fs
xchg
shll
mov
mov
xor
sbb
mov
adc
test
test
test
repnz
test
addl
ror
and
mov
jbe
mov
cmpsb
mov
cmc
std
sub
or
pop
arpl
inc
dec
imul
sbb
sub
movsl
mov
loop
xchg
or
cltd
sub
xor
cmp
cmp
xchg
cltd
shlb
fsubrl
mov
push
fs
dec
shrl
pushf
jmp
sbb
inc
lock
cmp
push
clc
lahf
mov
xchg
jnp
jmp
pop
fdivrs
inc
xlat
sbb
std
pop
loopne
mov
cmc
ret
lods
xchg
sbb
jo
test
cltd
sub
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
xorl
mov
mov
mov
xor
add
mov
mov
xor
orl
push
xor
mov
mov
subl
add
mov
mov
subl
mov
xorl
mov
mov
mov
subl
mov
add
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
sbb
mov
sbbl
xor
and
mov
add
movzwl
xor
mov
movb
andl
mov
inc
mov
cmpl
ja
jmp
push
pushl
pushl
pushl
call
cmpl
jb
lea
mov
movl
cmpl
je
cmpl
jle
jmp
push
pushl
pushl
pushl
push
pushl
call
xor
or
dec
mov
jmp
mov
add
mov
xor
subl
add
sbbl
mov
movl
cmpl
je
cmpl
jl
jmp
push
pushl
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
movl
push
movl
cmpl
je
cmpl
jg
jmp
push
call
xor
or
dec
mov
jmp
movl
mov
push
mov
andl
xor
or
mov
sbbl
push
add
jmp
mov
movl
mov
inc
cmp
movl
jb
not
mov
orl
xor
sbbl
add
movl
jmp
sbb
mov
subl
mov
sbbl
xor
orl
mov
orl
add
movzwl
mov
and
mov
movzwl
addl
xor
add
inc
mov
movl
mov
inc
mov
mov
movl
cmp
jne
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
pushl
push
push
call
jmp
mov
mov
sub
xor
add
neg
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
pushl
push
pushl
push
call
jmp
mov
xor
add
neg
mov
or
movl
movzbl
or
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
xor
mov
adc
mov
adcl
xor
orl
add
mov
mov
mov
je
add
mov
andl
mov
xor
adcl
xor
sub
notl
sub
xor
sub
mov
movl
cmpl
je
cmpl
jg
jmp
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
adc
mov
subl
lea
movl
mov
mov
mov
add
adcl
imul
mov
xor
mov
xorl
mov
movl
add
movl
and
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
jmp
xadd
dec
push
dec
dec
sar
mov
je
imul
xlat
sahf
jnp
push
push
ret
and
lahf
sahf
xchg
xchg
xor
sti
mov
cwtl
clc
pop
addl
jp
push
scas
mov
cltd
dec
mov
dec
cmc
push
hlt
daa
fwait
add
add
arpl
add
lcall
lods
adc
int3
mov
daa
repz
out
lods
enter
push
lret
xchg
jne
incb
frstor
sub
mov
addr16
cltd
add
cli
jp
push
notl
sbb
leave
scas
jb
out
and
les
mov
mov
into
stc
push
inc
sbb
sbb
jmp
pop
mov
lahf
lods
mov
test
xor
xlat
vmovmskps
xlat
cmp
mov
pop
cltd
ss
add
push
xor
mov
ret
in
push
pusha
pop
dec
or
loopne
lcall
fsubrs
jne
notl
nop
addr16
ja
daa
mov
add
push
jb
jmp
das
scas
addb
dec
fwait
pop
arpl
add
inc
mov
mov
xchg
fidivrl
jmp
jb
xchg
push
jae
fstpl
xor
repz
mov
dec
repnz
adc
xchg
jp
sti
or
stc
sbb
lahf
cmp
push
push
es
jge
bound
mov
dec
frstor
test
xchg
stos
jbe
cmp
shll
mov
dec
and
adc
bound
push
ret
xchg
addr16
cs
int3
lcall
sti
pop
mov
aam
adc
pop
jmp
mov
cmp
mov
jp
jle
cmp
xchg
xor
fwait
bnd
lret
js
jmp
cs
cs
jae
hlt
mov
push
jo
dec
lret
inc
rolb
mov
fsubp
jne
sub
fidivs
pop
arpl
sbb
out
cmp
jmp
add
xchg
inc
addr16
or
push
sbb
dec
mov
int3
sahf
pop
and
lods
dec
xchg
sti
mov
repnz
cmp
inc
mov
outsb
loop
daa
sar
inc
sbb
xor
movsb
outsl
adc
or
inc
outsb
movsb
inc
nop
push
fwait
adc
inc
fldenv
jp
mov
or
or
dec
loop
adc
insb
add
jb
das
popf
xchg
call
or
and
pushf
popf
nop
xchg
or
adc
nop
loop
sbb
push
outsl
mov
insb
gs
sahf
fldcw
pop
cmpsb
out
notb
push
inc
xor
insl
lcall
outsb
dec
sahf
in
mov
pop
popa
mov
xchg
cmp
push
xchg
pop
jno
movsl
je
jnp
repz
inc
mov
xor
cmp
mov
mov
rcll
cmp
scas
fstpt
iret
and
test
ret
addr16
jo
fs
sahf
jmp
xor
jmp
lods
xor
jns
mov
push
call
cmp
adc
push
leave
out
test
xchg
xchg
pop
mov
mov
in
xadd
lods
pop
and
incb
leave
xor
dec
fbstp
mov
push
int
sbb
mov
push
pushf
jns
sarb
mov
add
push
add
mov
adc
mov
or
subb
pusha
adc
mov
arpl
in
jp
rclb
imul
shrb
adc
ljmp
push
or
mov
mov
stos
gs
mov
mov
xor
ret
dec
loop
loop
xchg
roll
ja
and
sub
arpl
imul
xor
mov
dec
rclb
rcl
pushl
lahf
aas
sub
sahf
fistps
xchg
data16
dec
push
gs
out
mov
xor
mov
in
outsb
movsl
in
arpl
cmc
fdivs
fistpll
xchg
sbb
fnsave
lods
mov
jp
jmp
fistl
sbb
cmc
mov
xchg
test
loope
mov
test
out
xor
lea
faddp
xor
mov
jg
adcb
idiv
mov
ja
ficompl
pop
push
mov
inc
mov
pushw
sub
call
mov
pop
je
fsubrl
call
testl
cmp
and
jp
mov
int
bound
mov
mov
sbb
lock
test
mov
mov
fistpll
xor
adc
add
xor
xor
dec
in
imull
insl
pop
aad
es
sti
cwtl
iret
mov
rorb
jmp
xchg
fsqrt
aaa
loope
ds
and
mov
data16
adc
xchg
loop
arpl
push
pusha
mov
push
lods
aam
sub
int
lock
les
cmp
fistpll
adc
orb
jbe
push
and
fnstsw
ja
add
or
lcall
add
mov
pop
xor
xchg
mov
sub
nop
and
ficompl
icebp
fidivl
jp
dec
dec
xor
xchg
mov
sub
pop
inc
nop
out
test
and
mov
jae
pop
ficomps
dec
in
fdivs
xchg
sahf
mov
loope
cmc
fsubs
mov
mov
push
dec
sub
sub
mov
mov
adc
in
pop
mov
rorl
xor
popa
stc
fildl
sbb
into
add
jle
jno
mov
adc
das
lret
call
cmp
cmp
js
jno
xlat
ret
mov
mov
in
std
fdivl
xchg
mov
out
push
and
imul
aam
mov
jp
dec
cmpsb
fdivl
movsb
test
fcoml
inc
jns
jl
lds
sbb
ror
add
jne
popf
test
mov
pop
call
pop
jb
xchg
outsl
fs
mov
and
mov
shrb
inc
sbb
xchg
test
gs
dec
cmpsb
xchg
jecxz
std
fidivrs
xor
test
shlb
jae
gs
fbld
hlt
addb
inc
addr16
xor
idiv
push
or
loopne
es
cs
mov
or
adc
dec
or
pop
mov
ret
aas
lcall
pusha
xchg
xchg
aam
sbb
lret
insl
testl
sbb
stos
movsl
xlat
repz
and
jp
les
sbb
es
sarb
xor
cmpb
sarb
cli
mov
loop
sbb
sahf
movsb
test
inc
popa
dec
mov
iret
dec
adc
sub
rolb
fcmove
push
ret
sub
mov
jp
iret
mov
out
out
lock
push
orl
aam
lcall
mov
nop
leave
aam
shrl
idivl
and
lea
jns
jae
dec
sbb
test
cld
push
outsl
xor
xchg
jo
in
push
fists
dec
sarl
mov
sbb
popa
test
addr16
add
sbb
pop
or
lret
xorl
or
iret
push
ljmp
cmc
adc
jl
sbb
jo
xchg
push
pop
leave
icebp
sub
insl
idivb
jmp
jno
mov
sti
hlt
mov
mov
lcall
cmpsb
lcall
pop
pop
in
insl
mov
push
xchg
xlat
shlb
inc
ja
dec
mov
stos
mov
dec
dec
jae
iret
movsl
cmp
lret
mov
aaa
lcall
jnp
xor
imul
mov
cmp
fwait
jae
enterw
movsb
cmp
cmp
aas
lret
shll
mov
ds
scas
mov
adc
enter
or
dec
dec
out
cmp
push
lahf
mov
loope
xlat
mov
aad
js
sub
mov
popa
jg
mov
xor
mov
call
cmovae
cmpsb
jg
cs
adc
adcl
add
daa
in
add
leave
inc
enter
data16
xor
lret
jae
imul
lret
arpl
jo
std
jns
lds
in
inc
lods
hlt
sbb
jp
adc
xor
popf
sub
fldl
push
ret
or
cld
push
sub
stos
push
in
push
xchg
out
xchg
push
leave
cmpsl
lock
sbb
outsb
jns
xor
fildl
xchg
mov
in
add
cmc
inc
xor
adc
mov
outsb
xchg
mov
call
push
out
sbb
pop
lods
aaa
hlt
adc
imull
inc
mov
fcoml
dec
rolb
call
in
push
ror
loopne
dec
aad
mov
rsqrtps
mov
stos
sub
pop
sbb
outsb
pop
jne
aaa
je
xchg
cmp
inc
fmuls
mov
pop
or
out
mov
gs
inc
sbb
and
mov
es
adc
xchg
fbld
mov
daa
sbb
notb
push
es
xlat
inc
outsb
jns
or
add
xchg
push
dec
dec
lds
popa
sti
fs
cmp
orl
mov
or
push
mov
push
inc
or
add
xor
pop
sub
scas
leave
lret
mov
mov
int3
testl
push
stos
sbb
inc
cmp
mov
sar
cmp
pop
cmp
movsb
inc
push
pop
or
aam
sub
cmp
mov
out
in
fisubl
adc
dec
dec
pop
stc
lret
adc
add
inc
repz
cli
mov
scas
jecxz
int
leave
mov
mov
icebp
push
mov
gs
sub
leave
sar
push
das
in
xchg
rol
mov
scas
test
dec
cli
fwait
popa
fwait
sub
lods
dec
mov
dec
push
cltd
fimull
mov
ret
sahf
adc
jb
out
inc
call
cli
xchg
sbb
sahf
loope
mov
hlt
jge
cltd
dec
test
gs
jle
in
or
inc
mov
out
add
lahf
aaa
addl
lret
fcmovu
mov
stc
repz
mov
ret
inc
xchg
popa
mov
ss
shlb
xor
pushl
add
aad
fs
add
mov
ret
dec
push
push
jmp
push
arpl
in
or
cmpsb
adc
sbb
xor
mov
test
xchg
outsl
iret
sbb
sbb
shrl
sbb
aas
clc
addr16
pop
leave
notl
mov
loopne
imul
lcall
push
mov
ja
push
in
orb
cmp
adc
fadds
ss
out
pop
out
push
cli
sub
jae
dec
add
cmp
in
ja
sbb
dec
in
mov
pop
mov
cmp
lahf
sub
mov
push
xor
ljmp
pop
in
fstp
push
imul
sub
xchg
sub
ljmp
pusha
fstpl
fisubrl
gs
inc
scas
lea
hlt
inc
push
cmp
loopne
cmpsb
push
push
cmp
sti
jne
jp
lahf
call
arpl
idiv
imul
aaa
mov
movsl
orb
into
pop
jl
das
fists
xor
lods
popf
inc
mov
out
je
nop
fisubs
lea
and
push
pop
dec
outsl
adc
fisubs
sub
clts
push
add
add
pop
stos
xchg
cmovle
jmp
decl
jg
out
jno
test
cmpsb
pusha
in
pop
sub
shll
mov
xlat
sbb
icebp
pop
inc
imul
call
das
jbe
mov
addr16
aad
aaa
stos
xor
ljmp
adc
xchg
adc
adc
cmc
aaa
xor
test
sarl
sbbb
mov
testb
outsb
push
das
cli
pusha
mov
add
or
mov
in
les
std
pop
fs
and
dec
jg
outsl
movsb
cmpsl
hlt
lcall
xor
popf
lods
adc
leave
in
pop
daa
aas
das
pop
clc
sbb
adc
cmpsl
rorl
outsb
jge
test
shll
inc
sub
jmp
adc
mov
xlat
idivb
xchg
push
aam
sbb
or
mov
fisttpll
cmp
adc
stos
rcr
loope
stc
xorb
popa
mov
aaa
lods
mov
test
lods
loope
or
cmp
mov
pop
lret
out
push
mov
jb
xor
mov
mov
out
and
pop
xor
adc
fs
daa
add
sbb
call
fisubs
add
sub
popa
cs
pop
bound
push
mov
mov
test
ret
add
subb
repz
out
push
loopne
mov
xchg
sarb
stos
xor
fistps
pop
lea
pop
pop
sbb
sbb
xlat
or
push
imul
repz
daa
les
shrl
jle
xchg
outsl
xchg
test
inc
xchg
dec
xchg
adcl
xchg
mov
pop
jmp
mov
jno
mov
lods
repnz
fs
test
mov
cmp
sbb
test
or
lds
fwait
or
jns
xchg
mov
xorb
popf
jne
out
jecxz
push
add
and
pop
aam
into
adc
adc
mov
ljmp
mov
dec
mov
sahf
mov
pop
cmp
cmpsl
call
data16
orl
sahf
cmp
cwtl
shlb
cmp
xchg
stc
xchg
mov
inc
ja,pt
fsubrp
and
xchg
notb
pop
cld
jp
push
sub
fwait
les
pop
and
dec
mov
cmpb
xor
cmp
das
mov
mov
fadds
test
sub
lcall
pushf
das
add
push
sbb
sti
pop
rorb
add
add
adcb
mov
cld
xor
int
inc
jns
mov
nop
lcall
enter
bound
jno
lods
mov
mov
push
arpl
fldenv
sub
mov
aaa
mov
xor
arpl
push
xchg
adc
shlb
or
nop
fidivs
sub
shll
xor
rclb
popa
or
add
push
out
mov
jbe
cmc
ret
push
jp
xchg
mov
jmp
es
xchg
pop
push
push
adcl
gs
mov
dec
shl
mov
cltd
xchg
clc
imul
add
pop
cli
cs
pop
std
fiaddl
pop
lods
cltd
jle
push
popf
pop
mov
sub
aad
mov
add
pop
icebp
mov
mov
mov
mov
xchg
and
sub
adc
out
xlat
movsl
mov
adc
sbb
cmpsb
jae
pop
mov
inc
out
adc
das
rclb
out
mov
push
mov
in
dec
add
xchg
aad
adc
sub
lods
int
nop
xchg
mov
lret
out
push
cmpsl
sub
shll
mov
push
outsl
inc
out
test
in
push
adc
jns
lret
adc
add
scas
pop
pop
dec
xchg
mov
hlt
pop
pushf
ficomps
popa
mov
rolb
sub
dec
xor
or
mov
xchg
inc
pop
mov
stos
lock
cli
mov
sbb
les
jecxz
push
fsubrl
dec
insb
dec
jbe
pop
and
hlt
xor
pop
cmpsl
aad
lret
pop
push
mov
push
jmp
sbb
cltd
dec
push
mov
xchg
pop
ja
leave
pop
sbb
mov
jl
xor
mov
arpl
add
lcall
lahf
lods
cmc
out
movsb
mov
sbb
add
jae
pop
jmp
jle
or
xor
adc
cmpsl
je
stos
into
jbe
xor
or
mov
ficompl
jae
loope
leave
add
popf
lds
cmp
call
nop
xor
js
and
andl
mov
lret
pop
mov
inc
cmp
ja
inc
mov
pushf
mov
jg
ds
jg
push
sbb
sbb
bound
or
ss
xchg
pop
sub
inc
or
sub
inc
jae
je
mov
and
test
dec
mov
cmp
pop
enter
adc
xchg
sub
sti
hlt
sub
push
push
and
ret
lcall
popf
sbb
mov
pop
aad
sti
xor
pop
cli
add
fisttpl
or
push
pop
out
push
clc
cmp
cmpl
push
cmp
xor
rorl
xor
push
jnp
loopne
stos
mov
sub
dec
xchg
push
daa
aaa
mov
lahf
lock
fmuls
dec
xor
jbe
out
mov
loope
lds
stos
roll
jmp
xchg
fcoml
aam
shrb
repnz
mov
add
mov
mov
jmp
sahf
xor
fnsave
movsb
xchg
mov
or
daa
mov
sbb
cmp
jmp
mov
enter
inc
aad
subb
out
pop
inc
lock
push
lock
jae
stos
in
cmp
fadds
popf
int3
inc
sub
jnp
pop
push
pop
add
jp
pop
outsl
mov
add
cmpsb
cmp
scas
ficoms
daa
gs
lahf
decl
inc
add
roll
and
out
aas
push
popf
sar
dec
xor
sub
popa
inc
mov
cmp
and
adc
das
cltd
mov
xlat
shlb
cld
jae
add
jbe
mov
mov
dec
rorl
popf
das
cwtl
jmp
out
ficompl
cltd
push
aaa
es
and
std
sbb
adc
pop
subb
outsl
rol
sub
xchg
fisttpl
xor
jnp
push
sti
mov
gs
test
push
jbe
lcall
in
or
push
lahf
mov
pushf
mov
mov
mov
dec
lea
mov
mov
xchg
int3
mov
and
and
enter
mov
pop
pop
add
daa
mov
inc
pop
mov
mov
sti
xor
dec
gs
inc
lea
popa
or
dec
mov
leave
adc
movsb
inc
rcrl
lods
fwait
push
sbb
mov
mov
or
add
ss
cmp
dec
pushf
sahf
data16
std
jb
pop
sbb
stos
sti
ret
repz
mull
pop
mov
jle
jnp
loope
and
lcall
xchg
mov
jg
cltd
mov
xor
jae
fcoms
inc
mov
inc
cmp
mov
lea
sahf
mov
call
insb
sbbb
cli
in
or
out
lock
clc
dec
pop
int
jae
jge
inc
sub
movb
add
pop
inc
movsl
push
xor
xchg
iret
jp
stc
arpl
fs
daa
xchg
sahf
push
or
fidivs
aam
push
jge
das
shrb
inc
cwtl
sbbb
add
mov
hlt
mov
pop
scas
push
ret
adc
popa
loope
jno
jno
ret
ljmp
and
in
pop
pop
lds
xor
out
in
cwtl
fs
push
pop
imul
lea
xchg
icebp
pop
nop
mov
pop
xor
out
sti
out
arpl
imul
leave
xchg
in
sbb
mov
and
outsb
inc
aad
mov
lods
lret
add
push
ss
in
mov
cmp
mov
mov
daa
scas
test
or
inc
in
cltd
xorb
in
aas
and
xchg
add
sbb
push
movsb
add
ret
lahf
sarb
xchg
fmul
movsl
xchg
fimull
inc
dec
lret
clc
cmpsl
data16
jne
hlt
repz
icebp
add
xchg
mov
int3
sbb
jno
inc
test
pcmpgtb
mov
jns
out
cmp
jbe
push
dec
sbb
aad
mov
icebp
rcrl
xor
mov
leave
and
les
fsub
test
pop
enter
enter
nop
sbbb
sarb
stos
xlat
sbb
sbb
stos
cli
dec
ficomps
test
push
aaa
rorl
iret
pop
inc
or
dec
xor
push
jae
in
add
pop
and
sbb
or
and
movsl
dec
or
jmp
addr16
shrb
scas
cs
scas
mov
jmp
xor
and
shl
sarl
int3
cli
mov
leave
mov
add
jecxz
jbe,pt
shrb
mov
in
jb
push
das
xor
and
and
sub
dec
jns
es
mov
lods
inc
sub
fwait
scas
gs
cmpl
add
ss
push
call
sbb
inc
mov
mov
cmpsb
mov
pop
movups
dec
mov
popa
outsb
ret
enter
lahf
jg
and
cmp
je
call
cmpsl
sbb
addr16
adc
jp
xchg
mov
pushf
in
mov
jnp
or
dec
aas
adc
cli
movsl
jl
dec
out
pop
stc
mov
out
or
dec
add
mov
xchg
fdivrl
pop
dec
inc
adc
das
gs
out
mov
xor
jmp
into
outsb
push
or
mov
and
hlt
bsr
xchg
in
gs
je
inc
int
filds
cmpsb
and
mov
inc
inc
mov
sbb
call
outsb
es
sub
dec
inc
sub
adc
push
fiaddl
popf
cmpsb
mov
xchg
repnz
xlat
push
test
fs
pop
mov
dec
cli
cld
mov
jne
gs
call
sbb
add
aad
push
dec
data16
das
fmull
inc
xor
rorb
mov
shl
int
add
dec
xor
jnp
sub
lcall
mov
xor
movsl
and
outsl
cmp
add
mov
push
movsl
std
xchg
lret
iret
fwait
mov
cmp
scas
sub
fisttpl
in
mov
and
or
jbe
xchg
imulb
sub
call
ret
sub
leave
jnp
inc
fwait
gs
lea
add
jno
sub
ret
dec
jbe
mov
decl
mov
jge
push
ja
hlt
xchg
mov
xchg
sub
mov
inc
xor
jae
lds
push
sbbb
leave
rcll
test
icebp
dec
xor
inc
daa
mov
addr16
xor
addr16
test
ja
cmc
mov
mov
cmp
inc
mov
adc
adc
jbe
jle
call
jns
pop
add
aad
push
xor
dec
add
scas
pop
arpl
pop
lea
cmp
ss
mov
addr16
fstpt
add
or
pop
stc
push
xor
pop
nop
inc
mov
cmpb
in
inc
clc
pop
mov
dec
mov
test
enter
fcmovnb
outsl
aad
xor
and
pop
mov
xor
popa
add
fwait
or
inc
imul
pop
sti
imul
and
std
cmp
ficompl
shll
dec
or
xor
xlat
and
jbe
or
push
mov
adc
in
pop
xorl
push
loopne
sbb
jl
push
orl
fwait
push
sahf
enter
sub
loop
xchg
test
outsl
adc
dec
cli
fcomps
jne
cli
loope
add
cmc
rol
mov
push
ret
imul
cwtl
pop
idivl
lcall
mov
lock
cmp
add
movsb
enter
outsb
xor
cmpsb
or
insb
push
test
inc
fcmovne
ds
push
push
repnz
pusha
sub
adc
test
pop
mov
add
add
sub
dec
lret
loop
in
mov
jl
jae
push
mov
movsb
in
test
pop
dec
sar
pop
cmp
je
sti
cmp
out
jbe
xor
mov
cld
iret
js
fsubl
call
cmpsl
cmp
push
push
into
dec
dec
push
clc
mov
push
fs
xchg
add
out
in
mov
movsb
into
cmp
mov
aas
ds
mov
ret
aaa
dec
inc
push
pop
jge
fbld
inc
inc
divl
pop
or
mov
and
test
cmp
insb
xor
mov
ret
cmp
das
bnd
add
fnstsw
jmp
dec
lret
pop
or
push
adc
cmp
jno
add
jo
arpl
mov
xchg
sbb
cmp
cmp
aaa
push
sub
popf
dec
dec
mov
adc
lods
jnp
adc
nop
xchg
pop
dec
sbb
stc
add
inc
ds
adc
sub
mov
dec
pop
jae
negb
xchg
arpl
outsb
add
add
sub
mov
lret
jl
cmp
pusha
test
pop
or
add
mov
jnp
cmp
and
inc
ljmp
adc
xchg
mov
cmp
cmp
add
sub
ficoml
mov
add
fdivl
ror
test
push
dec
pop
mov
or
cmp
scas
fdivs
aas
je
into
mov
add
aam
dec
dec
xlat
dec
mov
repz
xchg
nop
cs
rclb
rcr
imul
stc
pop
cmpl
in
adc
out
xor
sahf
sbb
xorl
hlt
cmp
push
or
push
iret
sub
nop
push
adc
and
pop
cmp
ret
les
shll
ret
notb
push
or
aam
into
cmp
and
ja
test
cmp
cmp
dec
or
cmpsb
xchg
rorl
divb
sub
scas
loop
adc
mov
repnz
mov
lea
cld
dec
lret
push
cmpsb
mov
dec
push
dec
cli
popa
into
lahf
movsl
mov
lods
rclb
inc
sub
pop
mov
rcrb
pop
cmp
cli
push
bound
mov
fistpll
pushf
jl
or
mov
dec
rol
flds
xchg
push
or
jle
or
cmc
mov
outsl
imul
leave
iret
aam
ret
pop
sub
pop
pop
int
push
push
mov
mov
mov
push
xchg
leave
mov
test
mov
adc
add
dec
mov
arpl
jae
xchg
push
es
icebp
adc
hlt
js
push
mov
movsl
sub
fwait
adc
cli
inc
test
cmp
ja
ret
push
mov
cmpsb
out
orl
inc
inc
xlat
stos
cmp
cmp
test
add
je
fnstsw
or
adc
mov
inc
outsb
stos
out
mov
aas
cmp
lods
into
cli
push
rcrl
mov
pop
and
lcall
lods
inc
and
cmp
add
sub
xchg
xorl
sbb
push
dec
das
inc
ja
pop
sbb
xchg
dec
and
mov
pusha
popf
add
outsb
mov
adc
mov
test
mov
ret
sub
xlat
subb
cs
cmpsl
insb
inc
repnz
xor
push
imul
movsb
fucomp
cs
xlat
mov
test
and
pop
jge
lods
fcoml
fistl
sub
stos
dec
xchg
in
xchg
cltd
inc
stos
adc
adc
in
lods
arpl
test
je
mov
push
scas
popl
inc
mov
or
mov
dec
mov
hlt
lret
jle
mov
and
into
sahf
les
jg
mov
gs
jns
add
aad
int3
popf
sbbb
inc
cmp
sub
sub
dec
cli
cmp
jp
int3
loope
roll
cltd
mov
sbb
movsl
sbb
or
mov
sub
or
in
repnz
jp
dec
adc
shrb
in
inc
add
mov
xchg
pop
push
mov
push
push
mov
add
sub
and
cli
in
test
xchg
dec
mov
fisttps
push
leave
mov
add
xchg
mov
fcomi
bound
out
rolb
ds
daa
movsb
or
adcb
mov
or
and
xor
shr
pop
addr16
call
push
sub
out
lret
adc
cmc
fcom
negl
dec
cmp
outsl
test
sbb
in
mov
lret
sub
jns
mov
mov
fldenv
fstl
mov
in
cwtl
movb
into
mov
mov
add
inc
cli
dec
mov
loopne
dec
add
cmpsb
pop
sub
aaa
cmp
dec
dec
aam
mov
mov
sbb
pop
mov
sub
lock
sti
loope
dec
out
add
leave
push
pmulhw
call
mov
mov
xor
cmc
es
sahf
pop
jl
test
xchg
in
in
cmp
sub
and
inc
outsl
out
xchg
lret
loop
movsl
xor
test
aam
dec
lods
or
ss
loop
loope
sbb
xchg
xchg
inc
test
outsb
sub
out
mov
adc
ficomps
inc
mov
ss
ficoml
inc
pop
aam
ffreep
xor
mov
add
in
out
cmp
pop
insb
test
inc
xor
fst
or
pushl
shrb
out
jg
jne
fadd
push
std
and
insb
imul
cmc
sub
cmp
insb
aam
jl
jp
mov
aaa
pop
fbld
dec
xor
adc
pop
pop
adc
jp
cmp
bound
sbb
pop
hlt
sti
xor
bound
insb
bound
or
sub
lahf
xchg
mov
xor
and
mov
sub
ffreep
add
push
push
and
lods
sahf
rclb
in
pop
shlb
mov
loop
div
imull
idivl
out
lcall
lock
cmpsb
pop
sbb
sbb
enter
out
cld
nop
sahf
or
dec
mov
xchg
adc
rorb
add
ret
popa
in
ret
dec
dec
or
hlt
jae
sub
dec
xor
jecxz
xchg
in
iret
js
mov
cwtl
int
mov
test
sub
subl
sbb
push
fldl
pop
and
shlb
insl
leave
sbb
std
scas
xor
jge
push
out
ss
test
sti
mov
ficomps
and
popf
dec
adc
push
imul
ja
testb
enter
cmp
and
push
mov
inc
loop
aaa
js
push
add
call
movsl
cmp
pop
add
ljmp
stos
dec
xchg
dec
lods
cmp
add
ret
ja
mov
cmp
rcrl
repz
sti
in
into
xchg
dec
xlat
pop
mov
cmp
dec
sub
cmp
jge
xchg
dec
cmp
cwtl
fadd
cmp
pop
sbb
adc
jl
iret
add
pop
sbbl
rol
lods
lea
sbb
jo
push
aaa
shlb
adc
dec
inc
aam
in
push
mov
in
add
stos
xchg
iret
adc
stos
lds
jmp
inc
jp
mov
push
test
shll
cltd
and
popa
bound
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
call
jmp
mov
incl
add
sbbl
or
movl
cmpl
je
cmpl
jle
jmp
pushl
call
mov
dec
mov
jmp
mov
add
mov
movl
cmpl
je
cmpl
jl
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
addl
sub
add
sbb
mov
xor
mov
mov
sub
mov
add
xorl
xor
mov
movzbl
adc
mov
xorl
xor
add
movl
jne
jmp
mov
inc
sub
movzbl
xor
xor
movl
cmpl
je
cmpl
jle
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
xorl
xor
xor
subl
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
jmp
enter
jecxz
dec
push
add
xlat
fucomp
push
push
jb
jnp
sahf
jnp
push
inc
into
jns
sub
fistps
dec
ljmp
popa
orl
xor
mov
rcll
sbb
push
in
pop
ret
cmp
or
cmc
xor
bound
mov
lcall
ds
pop
mov
add
popl
sbb
insb
pop
push
outsb
scas
xlat
cmp
jnp
rcl
out
xor
pop
sub
jo
mov
xchg
cmpsb
pop
sarb
xchg
fisubrs
and
pusha
clc
int3
jns
cmpb
test
or
xor
out
lods
xchg
pop
mov
cli
jmp
cmc
sub
add
shlb
icebp
in
dec
jne
test
mov
dec
xlat
mov
sub
ficomps
pop
lds
movsb
test
inc
jb
adc
sub
mov
test
xchg
les
out
lock
lcall
rclb
jo
or
mov
dec
mov
mov
xorb
mov
jno
inc
sub
jecxz
loopne
int
scas
xchg
inc
or
jmp
fmuls
mov
dec
and
xor
dec
lea
jmp
mov
push
mov
scas
sbb
std
jno
push
mov
bound
into
scas
mov
cmp
in
ja
cmc
push
xor
fldl
lret
mov
jecxz
push
test
lock
adc
add
xchg
cmp
jns
mov
jle
fidivrs
mov
mov
add
lret
loope
mov
jns
clc
mov
aaa
or
dec
out
mov
fadds
sahf
jmp
pop
out
daa
cwtl
pop
outsb
mov
pop
test
push
jae
push
sub
mov
add
xchg
push
xchg
stc
mov
cmp
ret
jp
mov
add
lahf
sbb
sbb
aas
cmp
rorb
addl
jnp
pushf
imul
mov
movb
cmc
push
scas
adc
ficoml
xchg
mov
add
int3
jle
ret
lods
mov
push
mov
lret
dec
or
sbb
sbb
xor
mov
push
push
decb
adc
sub
mov
in
les
push
inc
into
ret
sub
test
fisubl
inc
test
sub
mov
out
or
mov
pop
sbb
repz
sbb
decb
out
in
ret
mov
mov
push
jns
mov
stos
mov
mov
xchg
dec
rcrb
dec
popa
cld
push
sub
aad
mov
xlat
popa
inc
dec
or
pop
scas
outsw
pop
sarb
and
xor
push
pop
xorb
pushf
stc
testb
sbb
mov
cmp
in
or
test
arpl
leave
pop
pushf
push
pushl
fisubs
enter
es
mov
pop
ljmp
sqrtps
sub
pop
mov
adc
pop
xor
ret
rcr
mov
lock
in
cmp
jecxz
dec
rorl
imul
shl
pop
lret
and
ljmp
mov
outsb
xchg
push
and
mov
repnz
stos
inc
mov
dec
push
sti
inc
sahf
pop
sbb
cmp
xor
ret
adc
and
push
xchg
fmul
repnz
mov
lds
sbb
in
fs
jmp
mov
repz
jge
dec
sub
mov
xchg
jg
or
jbe
fcoms
sbb
lds
xchg
ljmp
sub
cmp
or
add
sahf
xchg
push
scas
fs
ss
js
push
sub
sbb
sbb
ret
dec
dec
scas
jmp
rorb
arpl
jnp
sbb
lods
push
inc
incb
pop
inc
daa
mov
and
mov
adc
xor
adc
mov
xor
mov
sbb
pusha
cltd
outsb
push
dec
mov
cmc
cmp
movsl
lea
lret
andl
enter
pandn
ds
andl
or
cmp
and
ljmp
lods
pop
loop
inc
sub
adc
fisttps
popa
pop
sbb
mov
ficomps
icebp
xchg
sbb
daa
xchg
and
in
xchg
dec
or
sti
loop
lret
test
pop
or
pop
cmp
inc
add
cmp
or
popa
ret
or
mov
xchg
fwait
dec
mov
daa
loop
lcall
mov
jbe
dec
push
jns
dec
add
filds
out
inc
insl
push
cld
mov
movsl
subl
pop
cmc
push
inc
and
fildll
divl
xchg
jb
pop
xchg
shl
inc
aam
or
pop
stos
xchg
cmp
dec
pop
cmp
incl
lea
mulb
insb
xor
xor
add
or
mov
push
xor
xor
mov
mov
enter
jle
push
in
imul
cmp
icebp
and
push
gs
mov
cs
xor
shlb
sbb
mov
and
out
lods
mov
adc
cmp
ljmp
inc
inc
cmp
mov
sub
rorl
mov
sbb
lret
add
nop
int3
mov
jge
sbb
xchg
push
loop
and
pop
lret
out
cmp
jne
data16
cmp
jl
addr16
sarb
out
subl
out
mov
xchg
xor
inc
addr16
xchg
lock
sbb
ds
xor
insl
push
mov
ss
push
push
cmc
adc
sti
and
mov
or
pop
repnz
int
inc
add
jb
dec
jmp
lods
mov
or
test
mov
scas
mov
leave
icebp
in
push
cmp
jne
jne
cli
mov
sbb
idivl
xor
xchg
push
dec
dec
insl
and
push
test
sbb
push
or
arpl
pop
add
repz
jge
cmpsl
outsl
lcall
dec
into
add
mov
lret
ss
mov
icebp
das
aas
ret
lods
ret
sti
mov
dec
test
jle
xor
stc
test
aad
aas
or
cmp
or
pushf
jbe
mov
and
and
adc
lret
aam
inc
lea
push
mov
jnp
call
cli
mov
mov
xlat
mov
inc
testl
sbb
notl
xor
and
iret
inc
jg
pop
ds
aad
ficoms
cmp
idivl
or
jge
insl
fnstsw
push
and
jecxz
and
or
mov
or
push
imul
in
mov
jnp
or
lahf
ret
xchg
sahf
cmp
adc
adc
in
les
mov
fsubrs
jg
cld
aam
fistps
add
jne
and
roll
sbb
das
cli
adc
nop
pop
mov
sbb
mov
mov
lods
mov
cs
cmp
shll
or
jecxz
pop
mov
xchg
enter
inc
push
out
xor
dec
mov
pusha
sub
test
mul
ljmp
cwtl
insb
jecxz
aas
and
decl
rep
sbb
mov
aam
nop
mov
cmp
je
test
aas
push
call
hlt
jno
arpl
xor
mov
aam
xchg
mov
sub
sub
cmp
lcall
iret
xchg
lcall
stos
fwait
push
imul
dec
ret
xor
test
insl
mov
mov
popa
ret
fmul
mov
and
loopne
lcall
in
js
push
xor
dec
imul
and
pop
push
cmp
lods
aaa
aad
shlb
sub
arpl
daa
pop
adc
addr16
jl
cmp
cmp
inc
mov
add
cmp
into
mov
inc
push
inc
xlat
gs
roll
out
push
loope
push
scas
mov
push
inc
test
scas
push
or
lcall
in
ljmp
loope
cmc
inc
cmp
push
and
push
mov
push
jo
and
dec
xor
adc
mov
mov
xor
pop
pop
xchg
jae
std
sbb
mov
clc
inc
js
es
ljmp
fidivrs
or
mov
hlt
pushf
repnz
loope
cmpl
inc
and
mov
pop
sbb
jbe
push
cld
cmpsl
and
daa
mov
inc
mov
mov
fnstsw
push
dec
xchg
mov
nop
or
cwtl
mull
sti
dec
jo
and
sti
push
xchg
test
aas
or
sbb
or
aas
cs
sbbb
es
daa
sub
test
lcall
pushf
push
loope
out
sub
dec
inc
jge
inc
jg
or
divb
jo
loop
ljmp
sub
push
and
scas
les
dec
add
bound
int3
adc
adc
jnp
pop
jb
lods
pop
inc
add
jl
dec
aaa
mov
lods
push
hlt
insb
test
sub
xchg
cld
mov
cmp
jae
stc
mov
jnp
and
jl
mov
push
cli
movsb
sub
jg
notl
push
jp
sti
sbb
and
mov
hlt
sub
push
mov
dec
leave
pop
inc
push
lahf
pop
and
shlb
and
sbb
mov
xor
icebp
mov
add
nop
jo
inc
orb
xor
push
adcb
and
lcall
mov
stos
or
xor
jp
ds
xchg
fldl
mov
cmp
addr16
sbb
ret
jl
sbb
out
aaa
xor
or
xor
lret
shll
int
or
test
in
lock
lods
xchg
jg
adc
out
adc
js
sub
out
dec
mov
lods
cmpsb
aas
stc
mov
sub
leave
stos
adc
sub
xlat
les
sar
aad
xor
mov
dec
pop
repz
std
leave
mov
dec
aad
lret
or
pop
fidivl
insl
in
faddl
cwtl
mov
xchg
imul
jl
ss
sub
inc
xor
scas
cmp
ss
cwtl
scas
jnp
add
inc
imul
rorb
sbbb
mov
js
mov
push
lea
mov
clc
jb
add
inc
add
adc
into
sbb
jbe
add
outsb
lds
push
xor
add
jo
mov
shrb
je
int
cmp
mov
mov
std
sub
push
popf
movb
and
xor
sub
fiadds
test
push
or
inc
in
jo
dec
stos
call
jns
pop
vpaddsb
inc
inc
mov
dec
imul
mov
and
fisttpll
cmpsl
pusha
and
test
dec
movsb
adc
cld
sbb
sub
lods
icebp
ret
imul
jmp
pop
gs
scas
addr16
sub
cmp
in
mov
and
cmp
mov
and
xor
insl
mov
stos
ss
sbb
dec
lret
shlb
cwtl
jecxz
into
sub
push
mov
jns
xor
and
fwait
sub
nop
adc
push
fcompl
mov
mov
mov
cwtl
lods
shrb
mov
push
xor
or
mov
stos
add
out
add
jecxz
inc
test
push
jg
fcomps
lret
or
dec
cmpsl
aaa
ss
xchg
vmwrite
add
jno
rclb
jno
call
movsb
lock
adc
add
add
jl
stc
xor
ja
push
stos
fstpt
test
fcmovu
popf
mov
jns
mov
or
shrb
push
outsl
and
sbb
dec
xchg
bound
pop
imul
push
jmp
jne
aaa
fwait
movsb
adc
aaa
dec
adc
sbb
test
int3
cld
cltd
pusha
icebp
or
or
stc
sub
xchg
je
xlat
scas
add
fcoml
add
aad
inc
mov
leave
sub
and
mov
insl
hlt
daa
sub
lcall
adc
imul
mov
inc
adc
push
mov
inc
push
lea
cmc
adc
add
add
sub
xchg
ret
sub
sahf
xchg
jmp
mov
mov
test
and
in
mov
fnsave
je
pop
push
add
lock
cltd
xor
xchg
cmp
repz
cmp
inc
pusha
jle
arpl
ds
repz
or
mov
or
add
sub
mov
mov
call
std
pop
out
gs
daa
ret
push
jo
pop
fistl
sti
repnz
xchg
fs
sbb
mov
jo
xchg
out
pop
xchg
sbb
jecxz
loop
or
xor
in
adc
pop
daa
arpl
add
jo
ljmp
or
push
adc
sbb
movsl
jg
inc
imul
mov
mov
mov
xchg
mov
sbb
jb
cmp
sbb
inc
fidivs
sub
mov
jo
pop
scas
out
sbb
xchg
icebp
mov
cmpsb
cmpsb
stos
push
out
daa
pop
cmp
fnstenv
fscale
inc
cmp
lret
xchg
push
lret
sahf
rolb
dec
xor
lods
sub
sti
les
and
fwait
scas
stos
push
int
jne
push
aaa
rorb
xor
and
mov
pop
sarb
xchg
inc
pop
es
dec
mov
wbinvd
testb
pop
cmp
mov
mov
stos
mov
sti
popf
pop
sti
outsb
sbb
scas
dec
daa
jmp
cmp
mov
nop
xor
sbb
mov
xchg
ret
mov
add
stos
das
sbb
repz
sahf
and
mov
add
xor
add
xchg
jge
cwtl
dec
sbb
lret
in
dec
aad
jns
xchg
jge
test
nop
test
jg
ljmp
out
adc
les
push
sub
call
mov
jmp
or
les
mov
mov
mov
stos
xchg
ss
mov
or
jg
xor
data16
cmp
mov
pop
mov
shll
orl
clc
adc
insb
xor
cmpsl
pusha
sbb
rorl
xor
add
cmpsl
test
lods
dec
cs
and
mov
or
push
out
dec
stc
arpl
in
sbb
js
xor
dec
add
jnp
lods
or
inc
int
movsb
xor
les
sbbb
jp
enter
mov
push
les
add
aam
sahf
jae
lods
pop
push
add
add
sarb
push
adc
and
dec
in
push
push
test
add
mov
mov
aad
and
dec
int
jp
cmc
mov
jnp
sarl
mov
aad
daa
xlat
enter
ret
aad
lds
das
hlt
out
pushf
xor
pushf
inc
pushf
add
xor
or
pop
jbe
jle
jmp
or
mov
mov
fwait
mov
mov
mov
add
pusha
in
fwait
ss
stos
rorb
push
dec
test
add
cwtl
shrl
test
add
dec
imul
js
out
mov
fisttps
mov
pop
jnp
jae
lcall
adc
inc
dec
or
addl
fs
sub
mov
push
ljmp
shll
or
jle
mov
and
mov
and
lods
call
test
mulb
sub
sti
dec
lcall
gs
nop
jno
stc
loopne
mov
das
into
fwait
jecxz
jno
push
je
mov
adc
push
mov
jg
jo
mov
mov
loop
int
adc
sbb
xor
ret
xor
lret
sbb
and
mov
cmpsb
cmp
lea
fidivrl
fnsave
outsl
xlat
mov
xchg
les
out
mov
inc
out
jae
mov
push
fcoms
insl
dec
xor
cs
mov
jge
xchg
stos
call
int
js
jbe
pop
xor
or
ja
mov
fwait
shll
stos
iret
push
movsb
xor
xchg
icebp
lret
pop
mov
cmp
jnp
dec
cli
xchg
cmp
push
sub
fstpt
arpl
ret
mov
cli
pop
mov
pop
test
push
sti
mov
cs
imul
loope
cltd
add
push
mov
jb
inc
inc
sbb
push
cs
out
out
stos
lret
sub
arpl
mov
int
mov
jnp
push
mov
test
and
lock
and
clc
inc
cmp
adc
insl
jnp
add
jmp
repnz
xor
or
sub
push
daa
aas
sub
pop
sub
mov
fists
outsl
mov
adcb
daa
xlat
cwtl
pushw
scas
lods
outsl
xchg
rolb
icebp
xor
test
or
mov
mov
cmpsl
xor
xor
hlt
dec
or
xor
jl
mov
jnp
inc
mov
call
and
dec
or
pushf
aaa
clc
aas
or
fsubrl
aaa
out
jne
cmc
in
cmc
inc
leave
enter
imul
sbb
mov
or
out
xchg
mul
jecxz
out
add
repz
insb
addl
xor
dec
push
jbe
inc
xchg
push
mov
popl
xchg
jp
or
call
rclb
dec
insb
sbb
cmp
movsb
mov
cmpsl
loope
mov
mov
mov
ds
push
mov
add
iret
rcl
mov
dec
mov
or
xor
in
repz
mov
inc
pusha
fistpl
cli
sub
in
pop
mov
movsb
dec
mov
rclb
lea
dec
inc
xor
fsts
mov
cli
popa
mov
push
leave
cmp
and
cltd
fistl
repnz
push
cmp
cmp
inc
rcll
nop
xor
jl
jecxz
push
jl
sbb
aad
mov
mov
jo
call
xor
scas
adc
jno
stos
or
insl
fmull
push
push
orl
add
jge
push
je
or
jl
movsb
mov
sahf
xor
xchg
popa
mov
pop
fistpl
lcall
icebp
inc
and
adc
and
sahf
adc
cmovne
push
jbe
aaa
sbb
mov
mov
movsb
sbb
repz
mov
xchg
sub
inc
stos
add
xchg
dec
xor
test
xor
inc
loope
andb
push
inc
sub
xor
sub
je
mov
pslld
fidivrl
push
jmp
mov
lret
std
in
lds
jl
dec
insb
pop
pushf
loopne
push
adc
mov
fsubl
das
es
scas
adc
nop
fwait
dec
push
sbb
pop
shrl
movsl
test
and
dec
push
xchg
inc
outsb
ss
mov
or
xchg
dec
pusha
cmpsb
cmp
repz
pop
cld
pop
mov
in
sub
adc
aam
or
sahf
cwtl
lcall
rorb
add
loopne
and
sbb
fsubs
sbbl
insl
pop
jb
sub
mov
and
mov
add
cmp
dec
mov
lahf
je
lret
add
dec
jb
push
pop
pop
adc
stos
in
mov
sbb
sarb
xchg
push
inc
std
mov
and
into
adc
mov
jle
jo
or
inc
incb
dec
rcl
add
xor
inc
loope
lcall
fistpl
dec
pop
sti
mov
in
push
inc
lret
mov
testl
xchg
fsub
sbb
mov
movsb
aas
mov
adc
stc
jne
jne
rclb
add
ss
repnz
sahf
xor
call
xchg
ds
fiaddl
lea
cltd
cmp
in
and
scas
cmc
ss
in
mov
and
pop
push
stc
push
and
inc
stc
orb
sub
jmp
add
jno
mov
push
pop
adc
pop
fstl
xchg
mov
inc
xlat
iret
pop
hlt
cmc
xchg
sub
repz
into
imul
xchg
mov
or
or
cmp
or
daa
repz
into
pop
or
shll
cmp
mov
or
mov
sbb
jne
fstl
pushf
insb
adc
int3
xchg
mov
arpl
mov
inc
pop
scas
mov
add
push
pop
jmp
out
sbb
adc
repnz
out
inc
push
pop
pop
inc
jnp
jbe
popa
insb
imul
xchg
andl
nop
pop
xor
xor
cwtl
into
popa
insb
movntq
cmpsl
mov
inc
hlt
adc
push
scas
dec
cmpsl
or
dec
mov
push
or
mov
mov
mov
jmp
add
xor
bound
dec
mov
sbb
push
lods
xor
fildll
mov
xlat
xchg
in
cmp
pop
pop
jecxz
movsl
popa
add
test
cwtl
in
orl
push
leave
push
add
mov
outsb
adc
sbb
mov
repnz
mov
arpl
jae
test
int
gs
mov
dec
pop
ds
xchg
lea
add
stos
fld
mov
or
xchg
and
jno
out
in
or
jo
adc
mov
movsl
push
mov
and
idivb
sub
mov
lea
push
dec
pop
jmp
out
dec
rcrb
sub
mov
je
les
or
lock
fistps
or
jle
lds
fmuls
hlt
xchg
insl
int
pusha
pop
in
outsl
add
ds
xor
sub
mov
and
adcl
pop
in
pop
enter
lods
mov
sbb
pop
or
mov
enter
scas
mov
mov
add
add
xchg
je
fidivrl
aam
cli
mov
dec
or
frstor
inc
sbb
dec
mov
popa
idivl
mov
xchg
nop
dec
mov
mov
fwait
rcll
fdivrs
jp
mov
jb
neg
mov
cmp
cmp
mov
adc
xor
or
inc
add
add
xchg
arpl
push
movsb
pop
sub
sbb
push
inc
mov
scas
mov
push
mov
push
cmpl
movsl
push
mov
pand
push
outsl
pop
arpl
hlt
or
ds
ret
test
mov
mov
push
or
adc
jns
subb
lods
sbb
inc
mov
xor
popf
mov
cmp
mul
das
cwtl
dec
mov
sbb
xor
ret
fnstenv
testl
dec
xchg
imul
pop
pop
sahf
out
ret
clc
sub
xchg
push
push
andb
and
cmp
sbb
fbstp
xor
sbb
scas
daa
sub
push
pop
jmp
test
fwait
out
addr16
stos
in
xor
adc
divb
lea
arpl
sbb
nop
lods
rcrl
jnp
testl
xchg
xchg
mov
push
push
int3
aaa
pop
ja
add
fistl
ret
pop
shlb
jmp
cmp
leave
xor
pop
mov
pusha
jp
sbb
mov
call
shrl
push
mov
adc
lds
push
sub
and
xor
outsb
testb
movsl
loopne
scas
sbb
std
enter
or
fdivrs
bound
jb
dec
mov
push
dec
repz
lret
xor
cli
inc
cmpsl
ficompl
jno
call
adcb
xchg
mov
jbe
inc
mov
mov
dec
lret
movnti
or
pop
add
mov
and
stos
loopne
jb
sbb
sbb
fsubrl
loopne
mov
aas
jns
jp
lods
xor
dec
mov
cwtl
jb
inc
mov
shr
mov
push
dec
pop
lcall
shr
xor
test
inc
dec
sub
pushaw
xlat
jae
out
dec
sub
mov
int3
es
inc
orb
shrb
dec
outsb
js
decb
jmp
jp
daa
stos
push
test
jmp
pop
sub
std
scas
movsl
dec
jmp
push
pop
dec
cmp
pop
cltd
lds
jno
rclb
push
mov
jmp
stos
cmpb
scas
push
loope
pop
dec
pushf
mov
aaa
adc
mov
dec
mov
clc
mov
adc
inc
dec
or
mulb
xchg
mov
and
add
mov
xor
mov
cmp
rcr
jle
or
xor
dec
mov
pop
loope
imul
inc
mov
lods
or
es
call
pop
loopne
shrb
xor
lret
fmull
lret
xchg
les
imul
insl
out
scas
popa
or
jno
pop
ljmp
out
out
inc
mov
mov
les
fs
aas
mov
mov
mov
hlt
push
sahf
sbb
cli
or
scas
aas
sahf
adc
mov
movsb
call
sub
push
mov
dec
js
aad
iret
or
test
insb
jle
orl
loop
push
enter
daa
push
xchg
and
dec
xchg
int3
push
stc
xor
mov
xchg
stos
cmpsl
cmp
test
hlt
mov
xchg
jg
leave
adc
push
imul
jecxz
jmp
jnp
sbb
clc
jl
pop
xlat
pop
dec
xchg
fwait
jmp
fisubs
dec
aam
addl
adc
inc
aaa
xchg
or
test
das
dec
inc
and
sarl
pop
xchg
outsl
sub
xchg
idivb
inc
cmpsb
xchg
or
mov
fmull
adc
mov
popa
movsl
add
jmp
call
in
nop
loop
dec
cmp
mov
ret
int
aaa
push
mov
pop
inc
jnp
sarl
sub
rolb
inc
lock
adcl
add
and
mov
and
xchg
sbb
sahf
mov
xor
push
xor
sub
loop
lret
pop
push
lret
fdiv
inc
mov
or
inc
dec
cmp
out
add
cmp
in
sub
jae
inc
xor
mov
imul
subl
or
faddl
mov
push
lods
jne
cmpsb
popf
add
adc
aam
mov
outsl
int3
pop
mov
enter
stc
sbb
jg
fs
sbb
cmp
sbb
out
mov
push
aas
sbb
add
xchg
sub
out
call
mov
mov
dec
fs
or
lret
jne
mov
push
in
cmp
lret
stc
loope
mov
adc
loop
mov
imul
mov
insb
inc
lret
cmp
and
mov
cwtl
mov
imul
dec
cmpsb
or
sub
xor
faddl
les
xor
cmp
addb
xor
mov
pop
xor
adc
popa
add
sub
mov
int3
aad
inc
mov
adc
mov
add
mov
lret
mov
push
imul
mov
sbb
xor
jbe
adc
std
ljmp
add
push
pop
sub
cmp
cmp
ficomps
int
pushf
lret
js
and
in
inc
mov
addr16
in
test
lods
sarl
enter
lret
jbe
add
sarl
mov
insl
inc
fs
adc
outsb
shl
xor
ret
pop
rorb
ja
push
fmuls
stos
cmp
fnstcw
stc
out
out
dec
mov
dec
movsl
daa
xorb
faddl
cwtl
push
je
testl
sub
andl
fmulp
mov
cmp
call
fmull
xchg
pop
xchg
mov
cmp
push
lock
xchg
sbb
cmp
dec
xlat
mov
xchg
in
cs
int
fs
sbb
mov
pop
cmp
mov
cmp
lods
out
call
xlat
pop
mov
xchg
mov
es
sbb
jle
sbb
jno
adcb
sbb
and
dec
mov
mov
loope
jae
dec
sub
aad
cmc
pop
cmp
mov
xor
nop
cs
jmp
mov
gs
mov
out
push
fdivr
fwait
push
ret
in
adc
lea
or
int3
mov
inc
lds
das
cmp
fistps
fiaddl
jecxz
outsl
in
das
jno
subb
pop
mov
out
mov
aam
ficompl
mov
adc
cs
push
mov
call
loop
mov
js
xchg
cmp
jge
roll
sub
push
mull
jecxz
or
test
fcoml
cmp
scas
out
mov
dec
icebp
mov
div
cmp
and
das
mov
out
pop
mov
ds
jle
loope
xchg
push
inc
xchg
aad
cs
cli
jmp
movsb
xor
call
js
repnz
and
cmp
aas
cmpsb
pop
mov
mull
inc
mov
jae
lods
dec
or
add
sbb
pop
sbb
sbb
mov
sbb
leave
add
cld
lods
mov
mov
out
jecxz
xor
sbbb
sub
mov
cmc
jne
mov
aas
aaa
push
cmp
pop
loope
sub
push
xor
xor
add
cmc
fwait
aad
xor
loop
xlat
add
lods
mov
out
jnp
cwtl
jnp
pop
nop
mov
add
xor
sub
lock
push
in
push
addl
mov
mov
lock
jns
xchg
je
jns
dec
shlb
jne
xchg
xchg
mov
adc
test
imul
adc
mov
sbb
inc
call
into
shrb
add
clc
mov
xchg
add
push
cmpsl
jg
and
repz
mov
fcmovnbe
mov
push
dec
es
arpl
mov
cs
jbe
xchg
ja
data16
mov
push
imul
jl
lods
int
aas
jb
inc
gs
sub
cmp
pop
sbb
lods
dec
fistl
pop
out
or
sbb
mov
add
xchg
mov
daa
repz
rorl
mov
lock
aad
fmul
ljmp
mov
jb
sti
aam
and
xor
inc
xchg
dec
xchg
aas
gs
push
scas
jl
scas
test
rorl
cmp
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
xor
sub
add
push
adc
push
and
mov
mov
add
mov
addl
mov
sub
movl
movl
xor
mov
orl
mov
sub
movl
cmpl
je
cmpl
jb
jmp
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
subl
xorl
mov
neg
mov
sub
mov
orl
addl
mov
adc
mov
add
sub
add
mov
orl
adc
mov
mov
adc
sub
xor
mov
orl
mov
negl
mov
sub
xor
xor
xor
xor
sub
or
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
pushl
push
call
jmp
mov
mov
xor
adcl
mov
andl
add
or
orl
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
jmp
mov
movsl
aas
jns
jns
pop
popw
inc
push
faddl
jnp
sahf
jnp
pop
add
in
fwait
mov
and
out
jmp
clc
loopne
jbe
fdivrs
ds
fists
jge
js
lahf
leave
xor
sub
sub
pusha
stc
out
test
sahf
into
adc
push
loopne
and
xchg
loop
je
pop
imul
adc
sarb
cs
add
push
stos
sbb
or
ja
lods
and
iret
pop
outsl
or
push
lock
fldcw
dec
or
in
mov
dec
int
cmpsb
out
std
xchg
xlat
fcomps
dec
mov
inc
inc
das
lret
rolb
repz
fs
mov
dec
pop
imul
pop
cmp
das
dec
pusha
add
insl
lret
sbb
fisubl
inc
das
lds
popf
dec
push
push
shll
js
pop
arpl
stos
jb
xor
xchg
mov
cmp
and
outsl
add
add
mov
or
mov
ret
mov
cmc
leave
sub
push
push
popl
rol
mov
and
and
sub
push
out
ret
xchg
push
mov
jb
lds
test
jmp
lret
ret
adc
mov
pop
add
icebp
adc
adc
push
out
mov
jae
dec
sarb
pop
sub
cmp
mov
movnti
jbe
jg
lea
add
out
cmc
pop
hlt
scas
push
out
cmp
scas
inc
sub
jae
loope
addr16
fildll
test
xlat
xchg
and
call
fbstp
mov
into
adc
jmp
cmp
adc
popf
lds
add
test
imul
cmp
or
adc
shll
pop
aad
insl
ret
ficoms
pop
leave
push
cmpb
mov
or
dec
add
outsb
sub
and
xor
repnz
aaa
rclb
cmp
mov
das
popa
pusha
add
mov
mov
outsl
cmp
int3
aad
ret
pop
xchg
mov
inc
rcrl
in
fisttps
cltd
xor
dec
fisubrl
aam
movsl
xchg
adc
mov
fisubl
dec
hlt
test
movsl
sar
gs
fwait
or
mov
lret
mov
mov
notl
or
pop
push
add
scas
cvtps2pi
daa
push
cs
sti
arpl
test
cmpsl
inc
cmp
cwtl
inc
cmp
and
pop
out
sbb
loop
mov
test
xor
stos
jnp
mov
push
xchg
jne
fs
jns
test
xlat
loopne
push
pop
scas
daa
adc
push
sub
cwtl
shlb
adc
test
xchg
mov
ss
cmc
push
sub
fistpl
out
sub
push
jge
push
or
stos
mov
pop
adc
xor
dec
cmpl
mov
loop
xchg
test
xor
push
or
jbe
sub
andb
xor
imul
push
fcoms
dec
dec
pushf
mov
les
mov
xor
dec
xlat
xchg
pusha
addb
stos
sbb
xchg
lret
mov
sbb
lods
movb
pop
cmp
pop
sarb
testl
dec
pop
shlb
loop
push
adc
out
popf
out
jmp
test
std
stc
mov
loopne
push
adc
jo
sub
pushf
jge
push
mov
xor
jecxz
sbb
cmp
stos
leave
jle
jmp
gs
inc
nopl
jb
cwtl
bound
and
xchg
std
inc
mov
mov
jg
gs
pop
jg
popa
jmp
xor
fcmove
xor
ljmp
test
jmp
jg
int3
push
sbb
jecxz
adc
sbb
xchg
call
cmpsl
jo
xor
orb
mov
rcrb
sub
lcall
and
imul
fstpt
pop
fwait
lahf
setns
sub
fnstsw
pop
arpl
xchg
loope
les
roll
popf
mov
or
dec
jns
popa
mov
jge
xchg
je
mov
ljmp
mov
jecxz
dec
xchg
aam
fwait
add
push
scas
adc
fsubs
push
aas
add
adc
cmpl
pop
es
repz
loop
out
cmpsb
push
andl
sbb
jae
out
inc
sbb
outsl
mov
jae
arpl
xchg
fcoml
adc
xor
xchg
xorb
jns
jae
push
pop
ljmp
mov
fidivrl
sbb
jg
repz
push
push
dec
pop
jle
hlt
js
sub
xchg
clc
pop
xchg
in
lock
mov
enter
cmp
into
movsl
fyl2x
pop
and
cmc
mov
mov
adc
es
insb
leave
jge
test
xchg
adc
jge
fucomp
lock
pushf
mulb
rclb
std
insl
jnp
hlt
je
push
pop
mov
inc
adc
loope
sub
dec
pushf
movsl
xlat
ja
cmp
out
mov
and
xor
dec
jmp
pop
inc
mov
lods
pop
xor
cmp
and
stos
mov
popf
xor
and
push
and
loope
mov
sbb
daa
sub
int
hlt
push
or
scas
lret
inc
xchg
pop
inc
adc
push
call
mov
fcomip
push
inc
es
js
xchg
sub
jns
mov
dec
mov
cmpsl
pop
cld
aas
icebp
test
jns
lods
mov
cmp
jle
movsb
and
jae
jge
lahf
lods
mov
cmp
push
jmp
popf
in
test
jnp
xchg
xor
and
incb
cmpl
adcl
int3
test
es
in
dec
adcb
push
xchg
inc
lods
iret
fidivs
pop
in
pcmpeqw
adc
inc
push
das
mov
push
bound
andl
jp
jmp
pushf
lock
scas
add
jmp
out
mov
or
lea
cmpsb
inc
lcall
and
ss
mov
push
in
dec
dec
xchg
ret
mov
mov
cmp
std
in
into
orl
lock
push
rolb
and
cmpsl
sub
or
or
push
stos
mov
test
mov
loopne
cli
stos
mov
jne
fbstp
inc
mov
mov
jmp
or
loopne
enter
int
das
adcl
mov
jmp
stos
cmpsb
lcall
jae
mov
push
ja
test
push
stos
or
adc
mov
jns
mov
fstl
sbb
negb
test
int3
scas
movsl
jl
cmpsl
inc
fs
out
movsb
fstp
out
mov
sub
cli
mov
pop
divl
adc
adc
ficoml
sub
js
jle
pushf
mov
adc
xlat
ret
sbb
jo
jmp
or
and
sub
ja
and
mov
cmp
xchg
push
testl
adc
and
pop
or
jge
orb
pop
jns
sub
mov
pop
rclb
rolb
cmpsl
ss
add
out
inc
inc
in
sub
dec
test
fwait
jmp
shlb
cmp
push
decb
lods
shrl
mov
and
mov
push
push
out
mov
dec
sbb
xchg
cs
inc
nop
lods
mov
fistps
mov
subb
fidivl
inc
sbb
fidivrs
clc
and
sbb
push
push
cwtl
push
mov
mov
out
xchg
in
jbe
je
mov
or
fld
pop
leave
mov
add
movsb
add
inc
fdivr
ret
push
inc
shl
bound
sbb
pop
loope
inc
or
mov
push
test
test
adc
lret
sti
cmp
pop
xor
mov
cmp
not
cmc
push
mov
leave
sti
add
add
lret
jle
mov
mov
sub
mov
dec
mov
mov
shrb
scas
mov
cmpsl
cli
mov
popa
ss
push
divl
popf
mov
ja
push
dec
dec
leave
inc
xchg
sbb
mov
movsb
in
dec
sub
mov
sarb
std
jo
adc
mov
in
rcrb
cmp
std
insl
add
lcall
imull
popa
popf
lret
xor
fcoml
into
adc
or
jae
int3
push
jle
push
scas
push
cli
mov
xor
xchg
or
lret
mov
ljmp
cli
mov
scas
lds
push
aam
cmp
push
aas
mov
xchg
test
mov
gs
inc
sub
add
stos
xchg
or
pop
fidivrl
push
mov
xchg
stos
rolb
cmp
push
pop
add
mov
test
lds
cmpsl
and
xchg
mov
orb
pop
icebp
rol
testb
dec
std
hlt
push
jmp
mov
lods
cmp
insl
push
fs
lret
add
sahf
push
divb
call
jo
mov
mov
cmp
fadds
std
out
push
jbe
ljmp
sbb
shrl
fistpll
shrl
pop
int3
dec
sysret
cltd
xorb
lods
jmp
cs
jge
jp
xchg
in
je
fnstsw
pop
add
fstps
lcall
adc
test
aas
jl
jbe
cmp
pusha
rcrl
clts
mov
test
inc
add
sub
sbb
inc
and
sbb
xchg
cld
addr16
cmp
xor
mov
outsl
pop
sbb
ret
dec
inc
cmpsb
jg
arpl
mov
mov
push
mov
adc
and
enter
je
xor
jnp
sar
mov
fwait
lahf
lahf
dec
xchg
mov
xchg
mov
mov
and
out
nop
loop
xor
sbb
arpl
push
push
mov
push
add
cli
pop
dec
mov
xor
out
mov
sub
sbb
sbb
mov
movl
inc
mov
inc
loop
mov
pusha
cmp
in
or
pop
divb
outsl
loope
insb
pop
imul
nop
or
stos
xor
sub
insl
fildl
aad
add
mov
adc
in
dec
pusha
shlb
or
rolb
inc
mov
ret
nop
push
dec
fwait
cwtl
pop
fdivl
jae
or
sarl
ds
aas
bound
mov
mov
ret
sbb
mov
xorb
cmp
mov
and
pop
jb
lods
xorl
movsb
ljmp
mov
dec
loopne
dec
inc
cli
bound
seto
or
out
loop
xchg
mov
add
and
adc
cmpsl
push
cmpsb
jne
push
ret
jno
xlat
out
sub
bsr
lods
ret
icebp
fsubrl
jne
clc
xchg
movsl
rorb
into
add
loope
pop
cmp
adc
push
push
jno
sbb
push
cmc
cmpsl
in
loopne
test
jmp
xchg
xchg
adc
mov
jae
pop
lods
sahf
popf
idiv
xchg
dec
sbbl
push
mov
dec
ret
popf
pop
les
pop
or
and
frstor
add
or
or
aad
in
fmuls
mov
pop
dec
sub
leave
iret
int3
jns
jp
sbb
and
ret
dec
xchg
cmp
int3
add
dec
insl
cmpsl
cwtl
adc
stc
aaa
sub
addr16
int
loopne
xchg
add
mov
dec
lds
mov
mov
lret
or
pop
jmp
out
fnstsw
dec
lods
mov
lods
lret
aaa
popa
test
and
pushf
mov
lea
stos
repz
ret
dec
fdivrl
xchg
ror
push
cmpsb
or
pop
jbe
xchg
jno
aaa
test
mov
ljmp
xlat
data16
roll
sbb
pop
daa
xchg
insb
adc
testb
push
popa
mov
push
dec
je
pushf
adc
inc
daa
xchg
aam
xor
das
fcomip
ljmp
dec
mov
push
movsb
shll
or
sub
aam
mov
lea
mov
fdivrp
sub
jne
pop
add
testb
pop
mov
out
adc
popf
adc
dec
notb
sar
inc
rolb
lret
dec
addr16
jecxz
or
mov
add
ja
or
add
adc
test
xchg
in
icebp
mov
mov
cmpsl
sub
jae
ds
ljmp
dec
mov
cmc
outsb
push
mov
int
dec
loop
lcall
mov
rcl
pop
mov
xchg
or
movsl
push
add
test
mov
push
inc
cmp
outsb
out
jae
mov
pop
adc
test
stos
sub
add
bound
jbe
mov
adc
pop
out
or
loope
dec
std
ss
push
arpl
dec
cwtl
icebp
lahf
xchg
in
lea
mov
scas
je
push
mov
movups
mov
dec
out
mov
mov
jp
sbb
aam
adc
rcrb
and
or
xchg
push
js
xchg
in
insl
xchg
xor
push
pop
jl
loopne
idivl
inc
fcmovu
dec
arpl
pop
dec
mov
lahf
jbe
or
xchg
fsts
rcr
icebp
sbb
mov
dec
rcrb
arpl
in
jo
or
sti
popf
xchg
shrb
jb
and
lods
cmpsl
adc
sub
jg
pop
fistpl
mov
cs
push
mov
outsb
lods
jmp
mov
ja
pop
cmp
popa
ds
test
pop
push
cmp
pop
adc
es
divl
sbb
das
pop
movsl
sahf
out
push
mov
sub
shll
pop
pop
fldt
addr16
lret
aaa
rcrb
sbb
test
movsl
sarb
popf
faddp
pop
rcll
adc
mov
cli
hlt
push
dec
sub
lret
pop
sahf
stos
adc
rcll
dec
mov
dec
fcmovnb
loope
push
push
mov
fimuls
adc
or
aad
add
adc
rcr
and
test
cmpb
mov
mov
imul
push
lods
jl
outsb
lret
jne
xor
add
mov
sub
daa
fcmovnbe
mov
mov
roll
jae
cmp
mov
hlt
mov
pop
popa
mov
dec
sub
aaa
dec
cmp
dec
add
loop
scas
jle
ljmp
dec
xor
nop
lret
xlat
mov
xchg
sbb
xor
addr16
mov
imull
lds
outsb
ret
stc
cli
xchg
dec
rolb
sti
inc
mov
popa
xchg
scas
xchg
sub
lea
lods
mov
aaa
lret
or
gs
jb
inc
ss
xor
fwait
mov
add
adc
mov
sub
sti
repz
jl
movl
dec
out
adc
fidivs
jo
pop
aaa
iret
fcmovnu
mov
push
stos
stc
pop
arpl
push
stc
push
cmc
addr16
les
pop
jle
jle
mov
push
pop
aad
lock
mov
mov
mov
cmpsl
fsubp
je
leave
mov
pop
mov
iret
sbb
cmpsb
loop
jmp
fisttpll
mov
dec
lahf
out
add
fistpl
sahf
mov
jge
pop
dec
sbb
xor
mov
movsl
hlt
aas
add
or
in
cmpsl
or
mov
sbb
and
inc
or
xor
test
sbb
aad
fmuls
cmp
xchg
out
sbb
mov
ja
stos
hlt
xor
in
mov
dec
out
jg
pop
and
push
mov
outsl
dec
mov
gs
lahf
sub
sub
fbstp
sub
mov
mov
cltd
pop
int3
cmp
dec
hlt
add
je
xor
int
sub
mov
jmp
arpl
test
xchg
ljmp
push
int3
fidivl
xor
mov
pusha
fadds
hlt
je
into
lods
imul
jnp
xchg
cmpsb
inc
call
push
movsb
push
mov
pop
jmp
cltd
sub
or
divl
pushf
test
out
in
cmc
into
pop
pushf
dec
pop
lahf
loopne
jnp
dec
mov
xchg
testl
ret
ds
in
pusha
frstor
mov
jp
sub
pop
test
incb
clc
inc
mov
pop
or
je
push
or
in
pop
xchg
lods
jmp
add
call
mov
push
outsl
mov
or
sbb
inc
jmp
loope
inc
and
push
sub
daa
push
test
repz
mov
aad
rcl
push
fistpll
cmc
pop
pop
xor
sbb
iret
ss
pop
clc
pop
mov
mov
aas
adc
xlat
inc
pop
pop
in
mov
sub
mov
nop
in
mov
aad
imul
cmp
push
sbb
adc
mov
jle
pop
clc
insl
xchg
es
inc
in
dec
lock
cmp
loop
sbb
dec
nop
in
cs
xor
mov
mov
popa
adc
fs
jg
add
cld
pop
pop
decl
mov
jo
inc
add
bound
icebp
std
push
jg
push
dec
inc
or
nop
int3
outsl
ss
xchg
xchg
lods
mov
out
andb
mov
xor
adc
push
out
cmp
dec
jbe
imul
adc
aaa
rcl
hlt
xor
xchg
iret
daa
enter
xor
es
dec
shll
rcrb
mov
lods
pushl
loope
inc
adc
push
xor
dec
fdivr
add
pop
add
pop
mov
push
cli
jae
jecxz
sbb
imul
fcmove
pop
xchg
or
mov
nop
and
inc
cmp
fs
inc
xchg
stos
aam
jo
add
dec
scas
and
lret
cli
dec
cmp
and
sub
xchg
movsb
sbb
jnp
lods
mov
mov
call
aad
test
cmp
sbb
adc
fdivrs
dec
fwait
jg
jmp
adc
mov
stc
jbe
inc
sub
stos
add
xchg
adc
or
repnz
jmp
sub
sub
das
imul
mov
mov
sti
sbb
call
jne
in
inc
cltd
add
push
and
test
shr
icebp
push
cmp
pop
int3
aad
push
data16
fincstp
and
into
dec
fdivr
cs
sub
dec
mov
and
push
mov
mov
or
aam
mov
je,pt
aaa
movsb
or
sbb
sbb
cltd
popf
movsl
fwait
inc
xor
ret
adc
pushf
push
ja
ret
inc
test
xchg
jo
clc
cli
int3
dec
cmpsl
cs
adc
mov
out
xchg
inc
icebp
repz
or
xchg
test
add
sbb
cmc
push
push
mov
incl
add
add
cmc
scas
stos
and
lods
mov
cmp
sub
dec
xor
in
push
stos
lds
jns
mov
inc
adc
lock
jo
push
dec
mov
xchg
aaa
push
mov
ret
inc
nop
sub
scas
pop
pushl
test
push
les
mov
dec
leave
popa
lock
out
pop
inc
insb
adc
mov
pop
add
aad
or
insl
sbb
test
repnz
jecxz
pop
cli
loope
jne
and
mov
mov
sbb
jmp
and
pop
cmp
loop
adc
jge
jns
xchg
inc
push
ret
les
iret
mov
mov
ja
adc
in
cwtl
inc
jp
test
ljmp
cmp
jns
imul
nop
cmpsl
test
lret
cmpsb
or
mov
cmp
mov
incl
repz
dec
dec
inc
out
enter
jl
out
andl
mov
push
and
xor
arpl
sub
add
cmp
lahf
imul
adc
test
and
outsb
mov
sar
cmpsb
jb
or
jge
add
in
ljmp
jns
out
cmpsb
adc
or
cmpb
mov
add
jae
sbb
aad
push
xor
pop
or
imul
loope
pop
iret
sub
or
into
cwtl
mov
cld
cmp
daa
scas
jne
dec
icebp
sahf
inc
xchg
dec
push
mov
dec
pop
aam
mov
cli
inc
add
xchg
fdivrs
jb
into
and
sbb
push
pop
lcall
popa
xor
data16
add
mov
mov
daa
xlat
pop
in
dec
inc
push
xor
enter
mov
fidivs
es
lret
into
daa
xor
jl
xchg
sahf
lahf
or
insb
ss
vdivss
or
adc
xor
fsubp
mov
mov
loopne
pop
movsl
aas
test
pop
loopne
sbb
scas
sub
mov
je
pop
xorb
popw
mov
adc
dec
mov
jo
int
popf
xor
loopne
loope
popf
xchg
call
push
scas
roll
rcrb
push
sub
push
xor
out
mov
and
popf
cmp
mov
fbstp
arpl
adc
repnz
fsubrl
subl
pop
pushf
cltd
clc
fdivr
clc
in
lret
mov
push
inc
push
cld
mov
inc
adc
push
popa
testb
fs
xchg
sub
mov
shlb
cmp
cmp
rcl
test
int
push
mov
test
mov
xchg
jp
jmp
sub
sub
in
js
lahf
dec
pop
popf
xor
dec
cwtl
jo
push
inc
stos
jb
pop
cs
outsl
xor
lock
fisubl
xor
scas
inc
sbb
cwtl
das
cmp
pop
cld
ljmp
xlat
sti
loopne
pop
int3
xchg
mov
pop
insl
pop
jns
sbb
add
mov
inc
mov
fsubrl
inc
lock
sbb
test
repz
jmp
jecxz
xchg
mov
xchg
mov
popf
sar
pop
and
pop
gs
int3
pop
sarb
testl
pop
mov
jno
es
and
jle
scas
sub
cmp
repnz
js
push
inc
and
outsl
xor
jae
xor
inc
sub
jmp
test
push
xor
imul
addr16
mull
or
mull
cmp
push
in
fwait
in
jmp
inc
clc
cmpb
sub
dec
mov
out
std
jg
nop
in
insb
loop
or
jl
fstps
cmpb
jle
jg
std
inc
stc
dec
sti
shrl
adc
mov
repz
or
outsb
mov
sar
mov
xchg
sub
scas
mov
cmp
test
fs
sbbb
out
mulb
cmp
sbb
jmp
cmpsl
outsl
mov
fdivs
cld
inc
repz
jecxz
or
lock
push
inc
pop
pop
sti
pop
jbe
mov
xchg
fwait
xor
push
call
fldl
scas
mov
rorb
sub
push
add
lahf
test
hlt
jmp
out
rolb
jnp
or
lea
dec
and
mov
and
sub
mov
cmp
and
xchg
cmc
push
pop
movsl
loop
dec
subl
in
inc
sbb
clc
mov
mov
outsl
push
or
or
adc
jmp
fidivrs
popa
sbb
cld
or
les
test
sbb
xchg
mov
mov
ret
add
addl
or
and
pop
push
adc
int3
add
out
ss
xchg
xor
inc
adc
push
inc
inc
es
repz
je
nop
out
mov
mov
cmp
mov
xchg
cmpsl
je
mov
ljmp
xchg
jg
pop
xchg
movsb
add
test
inc
xchg
lea
repz
inc
scas
sbb
push
aam
push
stos
and
shlb
push
adc
imul
jbe
fnsave
xor
and
ret
in
pop
xchg
add
push
int
xchg
jno
mov
jle
mov
loop
ror
fs
mov
mov
pop
repnz
fistpll
sub
dec
jne
cmp
xor
popa
loopne
mov
jo
addr16
mov
mov
rorb
sub
push
cmp
sub
push
jp
adc
mov
push
fildll
sub
addl
xlat
mov
mov
xchg
mov
adc
ret
ljmp
int3
dec
aaa
sti
adc
cmp
dec
rolb
jecxz
mov
cmpw
jne
mov
aaa
jnp
jae
cld
movsl
call
jle
data16
jns
cmp
repz
les
jmp
cmp
insb
add
outsl
mov
mov
imul
sbb
adc
mov
mov
das
js
cmp
fwait
xchg
cmpb
add
je
xchg
outsb
mulb
mov
inc
aaa
arpl
push
ja
push
aad
dec
pop
xor
pop
in
or
sub
mov
pop
ficomps
je
dec
test
push
xor
lds
sbb
lret
mov
sbb
mov
outsb
outsb
sub
shrb
mov
imul
inc
imul
std
jnp
mov
push
pushf
mov
dec
push
pusha
mov
pop
dec
les
scas
aam
push
adc
pop
ds
shrl
inc
scas
jg
fisttps
sub
dec
cmp
fcmovu
mull
pop
lods
scas
jecxz
pusha
pop
mov
push
js
mov
arpl
in
das
lret
ss
sbb
or
pop
stos
aas
lea
push
icebp
lret
lea
jne
sbb
pop
and
lea
lcall
mov
push
mov
pinsrw
data16
xor
fidivl
popa
inc
mov
push
jns
mov
clc
push
test
fwait
jno
xchg
pushf
aad
call
fcomps
call
jg
jg
fiaddl
out
cmpsb
inc
xchg
add
push
push
mov
inc
shr
sub
ja
mov
cmpb
dec
stos
ja
inc
dec
div
js
inc
mov
outsl
lea
dec
xorl
sbb
imul
aad
push
xchg
adc
xchg
shrl
adc
cmp
aas
xor
faddp
shr
enter
cwtl
and
pop
js
pop
or
fcoms
mov
adc
outsl
stos
lcall
pusha
dec
sub
loope
popf
and
jo
dec
pop
and
scas
sbb
dec
repnz
mov
lret
push
lret
sbbb
mov
mov
dec
fildl
movsl
std
bound
fists
aam
lcall
jnp
dec
jae
aaa
in
in
out
push
outsl
sub
push
adc
imul
mull
adc
scas
sub
test
movsl
shlb
rcr
fisttps
mov
sub
mov
lds
dec
ss
fwait
fs
fsubrl
sahf
outsl
imul
jl
lcall
sbb
mov
xor
xchg
sbb
lock
mov
jle
ficompl
lea
xor
or
insb
shll
mov
sub
jns
icebp
lcall
lea
call
popa
shl
xorb
fstps
or
movsb
nop
sbb
mull
adcl
push
faddl
mov
add
cmp
ds
scas
dec
out
jecxz
push
popf
dec
loop
ljmp
push
xor
or
stc
dec
call
sbb
ret
aaa
jl
sub
les
inc
fwait
imul
dec
adc
aam
xchg
ss
and
lods
leave
mov
jae
lods
sbb
pop
push
fbld
loop
movsb
jmp
mov
decl
aad
into
inc
or
cmpsb
rolb
fisttpll
mov
aas
adc
cmp
cmp
mov
loope
popf
in
scas
in
jnp
test
adc
sbb
mov
sti
lea
incb
jo
push
push
jmp
and
cli
push
xchg
in
and
push
les
ss
daa
xchg
fmul
cmp
or
mov
sbb
jb
scas
jg
pop
mov
adc
js
push
mov
aam
sbb
ret
test
mov
fs
andl
bound
xchg
lret
mov
popf
ds
rcrl
and
sbb
add
imul
jno
outsb
jno
jo
sbb
ljmp
arpl
fstp
stos
and
cmpsb
mov
imul
sub
icebp
adc
lcall
aaa
pop
fstl
xor
xchg
loopne
test
lret
or
mov
add
or
ss
loopne
sbb
and
xchg
leave
mov
cmpsb
fldenv
hlt
inc
add
push
and
inc
xchg
push
cmp
dec
stos
adc
daa
movsb
and
sbb
dec
push
movsl
push
jle
and
xor
sbb
mov
dec
addb
cltd
out
icebp
ret
add
cmp
test
fnstcw
lock
ds
mov
aam
cmp
in
shll
rcr
and
loope
mov
sub
shr
add
in
mov
stc
add
pop
das
mov
jge
arpl
mov
loope
sub
pop
sub
jle
pusha
jmp
mov
clc
shlb
xor
negb
movsb
insl
mov
out
icebp
cmpsb
je
mov
fwait
push
test
mov
cld
mov
ret
shrl
fstps
cld
mov
rorb
test
mov
jbe
mov
push
jp
inc
fildl
sub
std
int
xchg
dec
lahf
mov
sarl
push
dec
mov
sbb
xor
lcall
fisubs
int
out
xchg
loopne
push
shll
mov
jge
and
mov
lods
pop
and
xchg
cmp
cltd
inc
dec
mov
push
mov
int3
hlt
pop
ljmp
ljmp
mov
push
push
mov
mov
ja
loopne
inc
arpl
push
xlat
js
repnz
xchg
mov
insl
and
in
inc
les
pop
imul
cmp
negl
jl
shl
pop
sahf
xchg
or
jb
adc
arpl
push
mov
cmp
roll
fwait
pop
xlat
loopne
imul
aad
adc
lea
push
dec
test
lret
std
dec
stos
cmc
mov
inc
not
mov
clc
mov
xor
mov
sub
add
mov
movl
movl
mov
mov
pushl
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
add
push
push
movzwl
or
push
movl
lea
mov
movl
sub
lea
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
pushl
push
call
jmp
mov
mov
or
mov
xor
decl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
movl
cmpl
je
cmpl
jg
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
mov
sbb
mov
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
push
call
jmp
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
orl
add
movl
cmp
movl
je
mov
movl
jmp
sbb
mov
mov
adc
mov
or
movl
cmp
movl
jne
movl
cmp
movl
jne
movl
push
movl
push
movl
jmp
mov
mov
mov
cmp
movl
jne
cmp
movl
jne
push
movl
push
jmp
mov
mov
mov
cmp
jne
movl
cmp
jne
movl
push
movl
push
movl
jmp
mov
mov
movl
cmp
jne
cmp
movl
jne
movl
push
movl
push
movl
jmp
mov
mov
mov
mov
movl
cmp
movl
jne
cmp
movl
jne
sbb
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
pushl
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
pushl
push
push
push
push
call
jmp
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
mov
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
jmp
sbb
cmp
inc
fst
inc
repnz
jnp
sahf
jnp
call
inc
scas
sub
scas
or
mov
and
push
flds
push
mov
adc
pop
loope,pt
pusha
xlat
push
lcall
dec
push
mov
pop
push
jmp
ret
cmpl
mov
movsl
and
bound
and
dec
popf
test
fisttpll
cmp
cmp
subl
cli
into
mov
mov
cmp
loop
js
dec
sub
xchg
jle
mov
lods
jno
adc
and
cmp
sbb
mov
test
mov
cmp
mov
shr
lock
mov
xor
and
call
ljmp
xchg
inc
lea
xchg
lret
ret
ret
push
je
icebp
pop
stos
mov
insl
mov
dec
cmp
push
push
in
lret
and
sub
pop
leave
addl
fidivrl
cmp
mov
push
adc
ja
jns
cmp
inc
into
in
icebp
push
sbb
nop
mov
or
loope
in
clc
xor
insb
pushf
mov
cmp
mov
fsubrl
inc
es
pop
in
and
jle
and
inc
stc
adc
pop
cmp
xlat
int3
pop
and
sbbl
pop
fs
xor
jmp
insb
xchg
jmp
mov
cli
insl
xchg
push
loopne
shll
loop
iret
roll
xchg
inc
dec
inc
call
lds
arpl
js
sbb
xlat
es
das
and
mov
or
push
stos
scas
xor
sub
sahf
lock
adc
shlb
movsb
mov
popf
adc
minps
xor
xchg
add
mov
decb
in
dec
decl
adc
xchg
setge
out
cmp
sti
sub
imul
pop
sbb
call
js
ficoms
sbb
add
mov
pop
or
xor
jle
jbe
jb
lret
add
lcall
cmp
push
sti
scas
fsts
xchg
dec
rcl
lret
pop
add
mov
lahf
or
sbb
inc
insb
into
out
mov
pop
sti
outsl
sub
out
subl
inc
dec
stos
dec
js
mov
jo
cmp
adc
insb
mov
and
mov
lret
adc
jmp
cltd
xchg
divb
ljmp
add
jns
mov
xor
stc
cmp
js
mov
inc
or
mov
push
mov
stc
js
xchg
arpl
and
sub
sbb
aad
push
or
push
aam
fldcw
int3
in
enter
jge
lds
add
pop
ljmp
push
xlat
mov
add
shrl
dec
cli
movsl
pop
inc
push
mov
jbe
sbb
mov
fisttpll
stos
xchg
cmpl
cmp
jo
jge
xlat
mov
pop
jnp
add
rclb
mov
xor
lret
adc
movsb
sub
fadds
outsl
roll
xchg
push
je
xchg
push
mov
jns
ljmp
mov
insb
fnstenv
mov
xchg
mov
mov
leave
cmp
mov
out
sbb
inc
pop
addr16
lret
mov
insl
adc
data16
ja
cltd
movsl
les
loope
or
fimuls
enter
lods
call
mov
int3
sti
mov
sub
cmp
or
nop
loopne
sbb
jmp
push
push
mov
out
mov
lcall
mov
ret
push
gs
mov
lret
adc
mov
or
mov
fst
mov
adc
inc
test
repnz
pop
or
jb
leave
addr16
and
movl
pop
hlt
std
xchg
mov
push
leave
inc
orb
cmp
into
arpl
cmp
in
sahf
push
enter
xor
push
lods
dec
subl
adc
mov
nop
das
imul
inc
push
jb
aas
in
insl
cmp
bnd
hlt
clc
sub
push
fistps
push
jmp
imul
push
pusha
inc
add
decl
push
inc
bound
lods
sahf
xchg
inc
jp
ret
xchg
bnd
clc
push
xorl
push
mov
lds
rcll
daa
icebp
lret
sbb
jae
cli
mov
fs
gs
xchg
dec
lds
fwait
lea
loope
sbb
mov
shlb
add
test
xor
in
test
je
pusha
repnz
pop
sub
popf
hlt
pop
in
xchg
adc
imul
idivl
scas
stos
mov
shlb
or
push
push
jmp
push
cmp
cwtl
ficomps
mov
out
adc
out
xor
cmp
mov
mov
out
cmpsb
fbstp
std
mov
push
adc
out
add
adc
push
add
push
shlb
push
cli
sub
pop
mov
mov
push
out
stos
pop
mov
mov
sub
jnp
insb
jo
inc
cltd
nop
mov
mov
loopne
adc
nop
into
out
mov
hlt
and
sbb
mov
jne
sbb
dec
icebp
fucomp
pusha
stos
sbb
mov
mov
loope
mov
inc
jg
pop
or
dec
stos
stos
ret
inc
loopne
hlt
loope
icebp
jp
xlat
out
jo
cmp
ret
leave
jge
call
sub
hlt
add
fsubrs
inc
mov
out
fnsave
aam
pop
in
out
push
dec
das
pop
mov
mov
mov
addr16
fidivl
cld
push
or
inc
jo
add
add
xchg
mov
dec
ret
fisttpl
mov
cwtl
inc
ret
shrb
movsb
and
and
xchg
pop
xchg
push
inc
cmp
cwtl
sahf
lock
pop
xor
mov
clc
fsubrl
mov
mov
mov
std
sbb
dec
les
and
push
mov
inc
addb
sti
or
push
movsb
imul
adc
rorb
inc
dec
or
mov
xchg
rol
xor
cmp
pop
or
xchg
lods
in
rcrl
fidivrs
pop
int
insb
aad
out
bound
xor
pushf
sbb
sbbb
test
and
test
push
add
incb
jl
int
ret
sbb
or
sahf
mov
enter
sub
xlat
sub
jp
push
push
jmp
mov
push
pop
or
push
rcrb
adc
stos
jle
test
xlat
or
call
std
call
sahf
out
sub
out
out
sti
cmp
inc
xchg
mov
clc
xchg
cmp
fsubs
out
movsb
jl
pop
adc
mov
ret
cmp
cmpsb
and
cld
lcall
sti
xlat
inc
push
shlb
rcr
outsb
pushl
mov
mov
dec
lahf
dec
std
mov
inc
inc
dec
jecxz
jmp
fsubl
inc
lock
daa
rcl
jnp
mov
lahf
loope
mov
xchg
flds
sub
and
inc
sahf
pop
aad
pusha
daa
leave
inc
sub
mov
jne
sbb
popf
add
xor
dec
icebp
cmp
clc
roll
cli
xchg
sub
mov
les
xor
lods
add
fs
cmp
adc
nop
jnp
add
sub
dec
mov
mov
movsl
add
jmp
dec
mov
jae
xor
push
lds
xchg
add
push
or
pop
jl
sbb
aaa
in
je
sbbl
mov
sbb
sahf
test
ss
push
jnp
pop
add
testb
jae
movsl
test
pop
and
iret
push
push
test
mov
jle
sbb
and
mov
scas
stc
adc
pop
mov
pop
gs
pop
arpl
cwtl
rol
fstpt
add
stos
cmp
dec
les
lds
mov
sti
shll
mov
sbb
mov
add
adc
sub
sahf
shlb
cmpl
fcom
cmp
faddl
aad
fsubr
pushf
mov
jbe
cmpsb
iret
mov
push
mov
test
orl
adc
xor
push
subb
loop
jecxz
iret
mov
xchg
lds
push
pop
adc
mov
mov
fldcw
lods
insb
lahf
xchg
xorl
xchg
icebp
sbb
pop
dec
stc
cld
and
mov
aad
xor
sub
xchg
and
daa
mov
test
pop
fwait
inc
add
sbb
mov
out
or
cwtl
push
push
pop
cmp
scas
repz
pop
pop
jbe
inc
sbb
gs
xor
cmp
add
shll
jnp
mov
xchg
gs
inc
dec
fildl
mov
push
mov
jbe
icebp
shl
xchg
icebp
adc
and
std
push
ret
sbb
jno
jg
popa
cmpl
das
out
mov
sbb
lock
pop
mov
push
jnp
sbb
push
or
jge
inc
nop
xor
pop
in
scas
xchg
xchg
lcall
rolb
mov
movsl
xchg
fsubrl
xor
jp
movsb
sarb
jae
lcall
iret
mov
mov
ja
xchg
sbb
fsts
sahf
or
lods
in
jecxz
call
mov
cltd
mov
stos
sub
pop
out
mov
arpl
mov
cmpb
sub
ljmp
pop
jp
jae
mov
daa
add
xchg
leave
and
mov
fldt
leave
lahf
bound
out
jl
mov
mov
push
leave
or
push
mov
mov
fst
call
in
add
aam
lcall
addr16
adc
xor
xchg
adc
popa
and
in
sub
adc
jmp
inc
xor
scas
mov
mov
xchg
cs
xchg
or
in
pop
push
add
adc
jno
imul
hlt
das
sub
mov
lcall
mov
push
cmc
cwtl
lahf
in
jg
lods
sbb
mov
inc
mov
xor
std
pop
stos
mov
push
test
xor
cs
fbstp
cwtl
jne
cld
pop
jae
stc
ss
mov
arpl
aas
inc
iret
test
in
rorb
sbbb
daa
out
nop
inc
notb
in
xchg
xchg
adc
addr16
sbb
lods
cmp
into
leave
mov
xchg
mov
sbb
and
xchg
inc
cmp
jecxz
sbb
scas
inc
in
cmp
adc
jns
inc
push
and
mov
lcall
out
xchg
lret
and
sub
enter
insl
jg
or
cmp
mov
xchg
leave
cltd
es
jns
pushf
push
dec
push
sbb
nop
mov
or
adc
jp
sub
pop
ja
in
adc
jne
push
jns
xchg
repz
aas
out
mov
fsubr
cmc
test
adc
inc
fstpl
mov
das
in
iret
mov
pop
xlat
popf
add
cmc
xlat
sub
hlt
std
cltd
lds
xor
add
in
addr16
push
std
pop
push
lcall
or
sbb
imulb
sub
les
and
cmp
stos
pop
std
gs
cmpsl
leave
lret
out
or
mov
scas
lock
mov
inc
adc
jmp
sub
mov
cmpsb
cmpsl
mov
cltd
pop
rcrb
jae
dec
xchg
push
xor
push
ss
lock
and
ds
sbbl
jbe
xor
xchg
mov
cmp
leave
bound
sarb
addl
out
fwait
sbb
mov
pop
xorl
scas
xchg
xor
call
hlt
sbb
or
subb
sub
std
xchg
pop
add
inc
push
lret
lahf
aam
push
cltd
mov
ljmp
lcall
mov
xor
mov
test
js
inc
or
push
adc
and
mov
insl
daa
push
mov
jb
in
xchg
inc
mov
sub
sub
pusha
dec
mov
es
test
mov
in
and
mov
movsb
lods
lock
pop
scas
in
and
stos
pop
jbe
jae
les
fsubl
scas
test
aas
jae
lcall
arpl
hlt
cmc
xor
dec
or
insl
xor
mov
ret
jge
mov
mov
add
jl
jl
adc
xor
and
vshufpd
orb
sub
mov
adc
mov
fcoms
cmpsl
cmpsb
sbb
lcall
test
rorb
or
sarb
pop
rcrl
push
jmp
enter
xchg
inc
jp
adc
shll
mov
cmp
cmp
inc
xor
dec
xor
nop
xor
add
arpl
mov
sbb
lcall
cld
inc
movsl
mov
call
out
repz
sub
mov
shr
flds
pusha
push
sarl
rclb
lahf
sbb
add
incb
jp,pn
push
mov
fbld
les
shrb
jns
imul
sbb
push
mov
xorb
push
test
or
dec
xchg
insl
fdivs
test
jae
popf
jb
push
mov
pop
mov
add
fs
inc
add
shl
jno
into
and
sub
scas
xor
add
jbe
xor
jns
cwtl
pop
add
in
inc
jo,pn
inc
js
jp
pop
into
and
mov
fs
lea
je
div
retw
xor
ja
push
or
loopne
in
jae
sub
push
pusha
pushf
fimuls
or
add
aaa
inc
xor
pop
mov
imul
lods
cmp
and
push
inc
icebp
fmuls
xor
pop
repz
adc
cmp
jg
and
mov
pusha
js
pusha
lret
xor
dec
mov
mov
imul
out
mov
cmp
loop
enter
hlt
outsl
imul
dec
add
pop
add
push
pop
cwtl
fldenv
aas
push
imul
inc
and
jp
sbb
rolb
mov
xchg
addl
jae
notb
push
mov
or
aad
mov
adc
icebp
adc
sub
mov
add
out
push
push
adc
test
push
hlt
mov
or
xchg
jge
jae
inc
jl
popa
adc
into
mov
mov
leave
ret
icebp
push
data16
sbb
dec
nop
shll
jmp
lock
loope
mov
ret
and
ret
imul
movsb
sbb
sub
repz
ja
insl
jg
clc
das
sub
xchg
testl
hlt
add
push
cmp
push
sbb
jb
cmp
imul
in
test
shrl
adc
adc
pop
jno
pusha
std
xchg
cmp
int
lret
cmp
dec
mov
stc
pop
sbb
xor
jge
fists
jno
pushf
add
dec
sbb
sahf
mov
push
mov
mov
xor
mov
mov
xchg
mov
sbb
sub
hlt
mov
mov
daa
inc
std
sub
movsl
popf
cmpl
jns
sbb
je,pn
or
popf
repz
xchg
or
into
test
and
mov
lods
sbb
pop
shrb
add
push
ljmp
dec
ret
adc
sti
pop
bound
outsl
sub
sti
ret
aam
dec
mov
out
and
push
mov
addb
cmpl
jno
ffree
xchg
bound
rorb
punpcklbw
sbb
fsubs
cmp
mov
and
lods
insb
aad
lods
xchg
mov
adc
pop
mov
mov
int
jbe
sbb
inc
xor
shlb
test
flds
or
jae
xor
popa
mov
push
mov
jno
jge
js
jmp
jmp
pop
jne
std
mov
ja
insl
nop
addr16
push
push
aam
sub
pop
cli
sub
aad
push
push
test
aas
sbbl
xchg
repz
mov
popa
adc
ds
mov
fsubl
popa
pop
andb
cmp
clc
push
push
xchg
or
pop
dec
xchg
mov
xchg
mov
sub
or
inc
push
xor
lods
xchg
pop
sub
jp
mov
inc
push
loopne
fidivrl
hlt
cld
sbb
sahf
add
pop
dec
in
or
aas
loopne
xorb
sub
sti
shlb
push
in
push
fdivrs
sub
dec
push
scas
rol
outsb
dec
ret
dec
mov
xchg
mov
ljmp
aaa
inc
cmp
jb
dec
jne
sti
in
add
xor
xchg
ds
insl
jp
jecxz
setb
ror
cs
aad
repnz
mov
dec
iret
jb
addr16
arpl
add
movsb
fcomi
fcmove
push
adc
pop
insl
cmp
sti
adc
sub
cmp
sub
mov
inc
stc
cwtl
call
mov
pop
adc
fnstsw
rcrl
imul
adc
mov
xor
adc
addr16
cli
into
mov
mov
ret
mov
mov
inc
subb
lods
imul
les
pop
and
push
mull
mov
jl
fnsave
fiadds
xchg
dec
cmp
mov
pushf
fadd
cmc
push
fistps
outsb
fldl
dec
loopne
sub
fidivrl
inc
in
mov
add
daa
add
pusha
adc
dec
insb
mov
mov
jb
xor
cmp
testl
sahf
lret
enter
cli
and
cmp
mov
lahf
add
adc
nop
push
cmp
bound
mov
ret
mov
push
push
lds
insl
lea
cs
add
jmp
into
enter
ret
fwait
andl
cli
dec
ljmp
cld
shlb
xor
dec
sbb
and
and
rcrl
mov
jge
nop
cli
inc
jne
or
addb
push
sbb
mov
ret
ret
xchg
lret
lret
mov
divb
shl
xor
push
int
inc
and
les
dec
pop
push
pop
sbb
aaa
mov
jbe
test
mov
dec
fiaddl
jl
sbb
sti
leave
pop
and
pop
add
imul
push
pop
add
popa
lret
mov
adc
pop
push
gs
and
adc
es
jns
int3
sbb
adc
and
pop
jnp
das
xchg
nop
and
int3
rorb
not
mov
into
pop
jbe
sarl
push
mov
cld
sub
aaa
pop
test
das
xchg
aam
cltd
mov
xchg
pop
imul
shlb
es
movsb
mov
xchg
xor
push
lock
jnp
ds
clc
mov
lret
push
daa
mov
les
rolb
aam
outsb
mov
std
shl
adc
mov
mov
lock
sub
or
daa
int
aam
xchg
sbb
aas
jbe
notb
mov
inc
dec
jecxz
push
sahf
fstpt
in
repnz
inc
shrb
xchg
jbe
pop
and
lods
or
jl
lret
stos
cwtl
lock
dec
or
cwtl
jb
div
ret
out
iret
jno
jp
jg
in
and
add
lods
sub
inc
jge
dec
mov
ds
xchg
xchg
data16
loopne
iret
aad
xor
sbb
sub
mov
mov
xchg
push
push
idivb
int3
mov
mov
pop
mov
int3
xor
mov
mov
mov
xor
push
sbb
movsb
mov
mov
add
icebp
fisttpll
cli
fsts
imul
dec
sub
dec
lods
xlat
xchg
into
hlt
adc
inc
xchg
ljmp
fs
cmp
cmc
ljmp
sub
stos
xchg
lret
scas
mov
add
sub
cmp
mov
popf
dec
xchg
mov
dec
mov
jb
xchg
push
sarb
hlt
jno
lret
lods
jmp
push
cld
into
int3
cmp
popa
push
jle
adc
daa
cmp
push
inc
or
in
sbb
das
lock
test
cmpsl
repnz
sub
push
adc
mov
imul
cmpsl
xor
test
mov
xchg
push
and
das
pop
add
enter
sarl
jecxz
or
push
aad
push
jne
and
mov
pop
mov
mov
imul
or
push
xor
ror
cmp
pop
aad
mov
shlb
or
out
sub
aam
pushf
lds
inc
ds
jecxz
mov
jp
xchg
xor
ja
daa
dec
xor
lods
inc
jmp
xchg
adc
dec
ret
ss
inc
adc
jle
sbb
mov
sub
mov
sub
in
add
popa
fcoms
les
notb
and
aaa
sahf
outsb
stos
inc
dec
sub
jmp
adc
in
mov
sub
push
das
outsl
add
xor
xlat
xor
or
adc
sahf
pop
lods
incl
out
jmp
and
inc
push
pop
out
dec
mov
pop
pop
mov
mulb
mov
mov
sarl
adc
addl
mov
pop
shlb
cmc
sbb
push
xor
dec
and
adc
or
mov
push
int3
inc
and
insb
arpl
xchg
cmp
inc
xchg
clc
fs
addr16
dec
or
shr
out
xchg
test
mov
movsb
fdivp
mov
mov
push
jbe
push
mov
jecxz
scas
lcall
dec
cltd
shlb
push
mov
je
inc
cmc
dec
xor
cmc
xor
into
mov
sub
pop
push
bnd
jns
xchg
imul
mov
jno
sub
std
adc
and
push
icebp
icebp
daa
jp
inc
fsubs
push
jo
in
sbb
arpl
mov
lret
or
enter
mov
imul
mov
and
push
jae
aas
mov
test
push
leave
or
mov
out
dec
int
mov
push
xor
inc
mov
adc
in
add
mov
aas
sahf
mov
adcl
cmp
nop
mov
in
aaa
inc
jl
xlat
das
or
jae
hlt
and
and
dec
inc
xor
out
jg
xor
push
fsub
jmp
xor
out
insb
adc
dec
pop
or
jbe
ss
pop
lcall
xor
arpl
rcr
xor
testl
icebp
push
in
ret
jg
rcrb
lahf
mov
enter
mov
addb
pop
nop
out
loope
pop
ret
jo
movsb
out
fsubs
ret
mov
and
and
push
std
and
in
aaa
sub
ds
sbb
loope
mov
subb
scas
or
fmull
add
xor
jecxz
repnz
insb
sub
leave
shrl
sbbb
rolb
test
push
mov
movsb
cmp
mov
sbb
adc
sarb
push
ljmp
dec
dec
addr16
xor
mov
jmp
je
and
dec
pop
pop
stc
cmc
sbb
xor
pushl
fiaddl
ja
inc
xchg
mov
pop
leave
scas
scas
fiaddl
inc
in
pop
shll
mov
cmp
in
cmpsb
and
es
inc
into
shlb
and
icebp
push
ficoml
mov
aaa
pop
mov
add
add
test
lock
outsl
jge
cmc
mov
xchg
inc
fsubs
xor
and
cmc
sub
ret
mov
pop
mov
pop
mov
insl
dec
inc
jbe
stc
outsb
into
fs
add
mov
xchg
js
mov
mov
dec
lods
mov
es
jae
and
mov
fiadds
stos
add
shll
xor
loopne
js
pop
cmp
xor
dec
ja
outsb
or
mov
inc
lret
icebp
adc
dec
int3
fcomps
out
adc
cmp
jge
inc
dec
lcall
stos
push
adc
pop
and
leave
incb
dec
dec
xchg
sbb
adc
iret
push
iret
xor
mov
scas
dec
cmp
mov
loopne
cmpsl
pop
mov
pop
jecxz
das
out
ds
adc
test
xor
push
or
cmp
jb
mov
xor
das
jb
mov
push
pop
ficompl
and
dec
and
insb
je
mov
mov
push
ret
incl
movsb
ljmp
sub
cmp
pushf
add
je
pop
test
scas
out
mov
jne
clc
mov
daa
xlat
mov
inc
mov
sarb
leave
cli
or
mov
mov
push
cmp
mov
lea
push
fdivrl
jmp
pushl
sbb
or
inc
sbb
dec
imul
fwait
aad
popf
and
test
and
scas
adc
lds
out
adc
ret
xchg
mov
fcomip
lret
add
popa
mov
cli
xor
mov
out
add
cmp
mov
mov
sbb
xchg
adc
test
imul
xor
jbe
rcl
push
push
out
test
aas
push
mov
lock
and
cmp
call
loopne
mov
mov
mov
pop
ljmp
and
fiaddl
jmp
cmp
mov
loope
js
rorl
and
das
outsb
in
rclb
push
add
sbb
icebp
sbb
add
data16
enter
sti
jl
dec
cmp
jmp
cld
lds
inc
jnp
push
push
mov
jp
mov
popa
add
inc
jge
testb
xor
jle
sbb
rorl
jg
and
sbb
in
add
mov
jo
and
js
mov
adc
pop
or
mov
mov
lods
int3
lret
mov
int3
sarb
inc
rcrb
push
adc
cmpsl
outsl
stc
vpminsw
add
push
sarl
int
inc
jle
inc
sbb
insl
sub
and
lahf
sbb
jne
cld
xchg
dec
shrb
sbb
out
jle
xchg
cmp
dec
mov
pushf
pushf
fprem1
mov
fcomps
loop
sarl
mov
insl
sub
sahf
loopne
cmc
rcll
sbb
lods
inc
and
jp
movsl
bound
add
loop
jae
push
clc
cs
out
add
addb
push
stc
lahf
add
cmpsb
icebp
xor
inc
dec
cs
jnp
jp
sbb
je
scas
and
int
lods
sbb
jno
les
ret
loopne
mov
mov
sub
dec
cmpsb
adc
shr
outsb
pop
push
mov
xchg
add
xchg
jg
xchg
pushf
pop
ss
outsl
mov
fisubrs
push
sbb
test
mov
adc
fwait
into
inc
sub
xchg
add
bound
dec
pop
mov
sahf
stos
outsb
mov
jb
mov
mov
das
mov
in
push
pop
mov
xlat
insl
lods
daa
lret
mov
pop
shll
dec
cwtl
repnz
pop
mov
cmpsb
lret
aad
dec
pop
lods
sbb
test
icebp
imul
inc
pusha
xchg
fldl
or
shll
pop
fstl
pop
sub
out
xlat
push
mov
das
shr
arpl
cwtl
sub
js
mov
pop
movsb
outsl
dec
leave
jne
push
dec
mov
test
push
sub
test
dec
test
jno
xchg
push
loopne
pop
arpl
add
aaa
jo
pop
and
add
add
aas
stos
clc
int3
sti
push
nop
inc
cmp
mov
and
movsb
daa
cli
adc
lahf
mov
inc
movsb
icebp
movsl
push
push
leave
mov
pop
pop
push
mov
repnz
loopne
jns
out
cld
xor
out
dec
pop
cmp
int3
movl
pop
or
pop
fmuls
push
push
mov
push
push
test
inc
dec
adc
gs
xor
sbb
adcb
push
imul
jno
fwait
jp
fsubrs
or
int
push
push
das
cmp
shlb
push
mov
sbb
mov
jns
in
xor
cmc
aad
mov
subl
nop
popf
and
mov
jb
pop
xor
enter
addr16
or
xchg
xor
sbb
ja
push
inc
cmp
popa
xlat
rcrl
shll
cmp
leave
dec
mov
or
fimull
sub
inc
lods
mov
or
mov
inc
add
stos
call
cmp
lret
dec
push
jp
jmp
mov
dec
lret
gs
inc
push
mov
sarb
outsb
in
test
addr16
les
daa
stos
inc
mov
jecxz
out
push
mov
fstps
mov
lods
out
mov
std
pop
insb
repz
js
fisttpl
pop
rcrl
cmp
xchg
push
push
adc
jns
xor
sub
sub
in
mov
and
mov
xchg
sub
cmpsl
ljmp
shll
mov
enter
xchg
sbb
sbb
mov
mov
sahf
xchg
inc
and
mov
pusha
int3
cmp
fisubrs
inc
mov
mov
inc
shl
mov
jno
test
and
add
je
insb
sbb
push
dec
mov
fdivrs
popf
or
sbb
into
call
fnstcw
rclb
push
addr16
enter
dec
fs
or
jp
pusha
adc
wbinvd
pop
mov
les
jo
and
loop
icebp
ss
push
fcomps
push
hlt
ss
shrl
cmpsl
divl
imul
jecxz
rcrb
adc
and
mov
cwtl
int3
test
jns
push
adc
push
xor
adc
fs
lret
jl
dec
imulb
cli
dec
cmpsl
scas
imul
xchg
jno
test
fistps
inc
fsub
test
inc
das
cmp
pushf
push
and
cmp
rol
cmp
sub
mov
add
cmp
mov
mov
jg
jmp
push
bound
jp
xchg
js
dec
pop
mov
jnp
sahf
jnp
test
icebp
stos
dec
ret
push
fisttps
dec
add
mov
or
inc
jp
vpunpckhdq
cmp
ret
pop
push
ds
dec
les
mov
adc
add
pushf
add
push
sbb
cltd
scas
dec
mov
adc
sbb
mov
inc
or
sub
insb
das
cli
or
pop
pop
fs
sbb
mov
and
pop
jno
mov
jo
jmp
or
lret
dec
cmp
cwtl
mov
in
mov
push
cmp
pop
fwait
cs
faddp
cld
or
or
sar
jne
push
rep
int
in
inc
xlat
mov
popf
pop
jmp
add
scas
inc
lret
adc
sub
inc
sub
int3
or
dec
or
cmpsl
xchg
das
lods
je
stos
push
cwtl
cmp
scas
fstp
scas
xor
fwait
sarl
xor
xchg
dec
in
pop
dec
addr16
scas
pop
cwtl
add
aad
hlt
call
xchg
lods
ficompl
jbe
rorl
mov
lock
fmul
ror
jg
out
je
call
xchg
lock
int
jle
and
in
add
lret
and
push
pushf
in
icebp
dec
insb
adc
call
adc
add
mov
out
adc
inc
adc
adc
xor
in
cmp
xchg
jbe
jns
inc
dec
lahf
outsl
sub
mov
mov
sub
push
jb
aaa
fisubs
xchg
add
inc
in
in
les
ds
push
mov
stos
cmpsb
jl
cmpsl
iret
dec
jnp
into
sarb
dec
imul
xor
ret
dec
lcall
fcoms
sbb
pop
push
mov
sbb
inc
incb
dec
and
xchg
mov
cmc
sbb
push
sub
das
jle
mov
push
cmp
jns
push
fldl
xor
cmp
inc
mov
ljmp
scas
push
insl
push
or
xchg
ret
jo
xchg
rcll
stc
mov
jb
sbbl
pop
aaa
adc
jbe
push
xor
xor
popa
dec
mov
jge
mov
imul
sbb
xor
mov
imul
sbbb
and
jmp
les
jno
pop
sbb
jo
ja
pop
jecxz
jge
incl
xchg
xchg
jl
scas
mov
les
pop
out
rcr
loop
pop
ds
push
mov
or
std
mov
call
mov
cmp
pop
sbb
mov
add
push
cwtl
dec
add
lea
jge
xlat
aad
add
insb
enter
test
testl
ljmp
lret
adc
push
dec
adc
out
test
adc
loope
push
xchg
out
mov
adc
les
add
hlt
popa
enter
lret
nop
inc
ljmp
inc
loop
cmpsb
pusha
pop
mov
imul
rolb
gs
push
and
daa
push
add
sti
jp
dec
adc
rcrb
lods
ljmp
loop
cs
pusha
in
loopne
movsl
ds
pusha
cmp
jmp
dec
pop
xchg
cmp
sti
or
int
sub
repnz
adc
cmp
ljmp
sarl
xlat
fstl
or
loopne
fmull
loope
mov
fcomp
jle
insl
or
fwait
pop
jno
daa
or
and
pop
pop
je
mov
xor
loope
xchg
aaa
cld
mov
pop
pop
jno
test
adc
cmc
jge
lret
shl
pop
sbb
adc
sti
inc
hlt
ds
mov
mov
mov
stos
in
sub
loope
push
aas
fldenv
mov
add
mov
insb
fidivrl
lods
jno
orb
arpl
cltd
lret
lock
dec
push
add
mov
mov
push
cs
mov
cld
xor
jg
psubusw
mov
addl
inc
inc
xchg
push
push
jecxz
ret
ret
mov
sub
and
fwait
sti
and
iret
jmp
fs
hlt
enter
or
dec
int
cltd
fbld
fiadds
pop
outsl
mov
divb
jno
cmpsb
test
jbe
adc
jne
lock
add
add
out
pusha
jp
xor
cs
popa
cmp
shrb
fistl
add
inc
dec
dec
cwtl
les
mov
add
add
arpl
sti
add
mov
push
add
jnp
inc
push
mov
mov
add
and
int3
add
test
popa
or
sub
cmp
sbbb
or
adc
cmp
xlat
pop
stos
push
iret
sub
adc
lret
ficomps
ss
enter
and
dec
and
rcrl
push
ja
pop
arpl
insb
push
sbb
sbb
ljmp
sarb
data16
add
arpl
sbb
push
adc
iret
les
shll
fistl
shrl
pop
and
shrl
sub
xor
pop
test
push
lods
jg
fnstsw
push
pusha
inc
aad
orl
imul
and
cltd
pop
mov
into
xor
jl
popa
int
lahf
int3
fcomip
jmp
sub
repz
mov
sub
sub
push
sub
xchg
call
mov
or
mov
cld
addr16
pusha
push
sub
sub
mov
xchg
movsl
sbb
add
loope
cld
lods
test
push
call
repnz
push
dec
and
andb
fnstenv
sub
hlt
or
xchg
pop
add
insb
imul
pop
xor
pop
push
push
xor
mov
dec
xchg
dec
divl
cmpsb
jl
enter
xor
or
out
xchg
push
int3
scas
rclb
dec
imul
jno
add
out
sub
stos
xchg
pop
or
and
cmp
loope
and
push
push
aad
dec
cld
adc
jecxz
cmpsb
daa
and
xchg
adc
cmpsl
test
mov
or
or
dec
scas
cmpsb
sub
mov
xchg
ficompl
sahf
repnz
mov
pop
and
rcrb
mov
fs
mov
into
mov
xor
pop
push
lods
xchg
push
lcall
sbb
loope
jno
mov
cmpb
inc
xchg
in
cmpsb
xor
fidivrs
push
xchg
fsubl
roll
lret
sub
jg
js
jl
xchg
fmulp
adc
out
adc
pop
enter
lahf
ret
out
in
dec
scas
sub
test
addb
lea
adc
mov
and
push
mov
inc
mov
ja
mov
sub
loopne
add
push
mov
push
lods
push
pop
xchg
sbb
cmp
test
frstor
outsl
loop
dec
and
lret
push
scas
mov
push
push
gs
pop
in
xor
dec
push
ret
popa
test
jbe
jno
push
js
push
sub
lret
sub
jns
repnz
arpl
jbe
leave
into
jmp
cmp
pushf
fadds
or
pop
push
inc
ljmp
xor
bound
lret
int3
push
inc
ljmp
addl
mov
dec
mov
sbb
aas
mov
mov
dec
dec
mov
jb
leave
imulb
in
mov
repnz
out
lret
mov
or
adc
and
ret
dec
insl
stos
repz
or
test
jo
pop
int
shrb
dec
ss
inc
pop
mov
test
dec
jae
testb
cmpsl
and
add
push
push
in
cmp
mov
cmp
mov
jb
mov
es
lret
dec
pop
and
mov
sub
dec
jae
imul
in
lret
sbb
mov
ds
adc
loopne
std
sub
mov
shrl
xlat
sub
aaa
test
cmpsb
pop
cmp
int
stos
adc
popa
mov
ljmp
popa
mov
xchg
imul
pop
cmc
cltd
mov
rcl
and
imul
dec
sub
cmpsb
insl
dec
out
sbb
stos
adc
pop
and
sub
int3
sub
add
dec
inc
mov
jnp
xchg
pinsrw
js
mov
leave
dec
call
mov
sub
add
test
mov
fistl
dec
inc
mov
xchg
rorb
adc
mov
xor
xchg
mov
sbb
mov
pop
nop
scas
int
sbb
sub
pop
and
inc
pusha
xor
ja
jno
out
icebp
pop
push
cmp
mov
jno
fisttpll
nop
jbe
jno
in
pop
xchg
inc
xchg
push
pop
mov
imul
mov
inc
dec
xchg
addr16
mov
pop
scas
sub
and
mov
addl
sub
mov
sub
scas
xor
or
test
xchg
sub
pop
test
out
xor
bound
pop
daa
adc
cmp
mov
push
xor
xchg
push
fwait
loopne
jno
push
addr16
mov
enter
pop
dec
pop
fisubrl
cmpb
adc
ret
test
shl
jl
mov
insb
loope
scas
xchg
mov
and
jb
ss
ljmp
cltd
loop
popl
clc
sarl
fldt
mov
cmpsl
mov
mov
fmuls
and
int3
xor
dec
mov
lods
jbe
lret
push
and
xor
js
xchg
add
ret
outsl
dec
sub
or
dec
sub
sbb
mov
mov
clc
and
push
adc
mov
sbb
inc
cli
lock
push
and
add
xchg
push
ja
xor
cltd
or
pop
mov
add
push
dec
in
loop
xchg
sub
mov
lock
aad
jge
bound
int
mov
inc
ja
add
dec
stos
dec
aas
xor
xor
and
clc
jnp
pop
add
xlat
xlat
sub
mov
cs
inc
sbb
xchg
push
jbe
push
mov
js
jno
sub
dec
cmp
jne
int
fwait
addr16
xchg
dec
ret
shrl
pop
stos
and
push
pop
leave
push
inc
pop
cld
rorl
jle
es
xchg
lret
xchg
jmp
inc
fsubr
pop
inc
loope
push
fs
test
insb
jb
xchg
push
xchg
jmp
jecxz
lret
std
mov
jns
mov
adc
ja
xchg
aad
cli
aas
push
push
or
dec
gs
daa
ret
imul
dec
cmp
loope
adc
lret
pusha
shrl
pop
adc
pop
cld
xor
enter
dec
mov
mov
stos
push
inc
ja
jp
mov
add
pop
xor
scas
pop
ror
cmp
enter
mov
scas
mov
out
jo
enter
xor
or
and
aas
ds
nop
mov
cmp
jl
test
test
movsl
das
lods
imul
sbb
xor
add
push
lods
cmp
jg
fucomip
adc
xchg
sbb
xchg
sbb
loope
jge
or
pusha
mov
enter
pop
fwait
cmp
in
aam
clc
pop
insb
mov
sbb
add
push
xor
call
js
shr
or
movsl
out
shl
mov
in
xor
push
sbb
out
stos
cmp
xchg
test
pop
xchg
mov
and
cmc
out
cmp
in
and
insb
pop
mov
jno
cs
or
and
adc
shll
mov
mov
cld
enter
stos
mov
pop
das
xor
mov
movsb
es
mov
arpl
mov
inc
push
sbb
or
mov
adc
out
push
or
insl
insl
add
sub
inc
es
shl
inc
and
pop
loope
cmp
into
int
push
repnz
leave
js
and
add
inc
bound
fnstsw
idivl
or
cs
out
dec
ret
push
adc
adc
call
mov
cmp
sub
add
and
mov
or
pop
xchg
or
inc
sbb
inc
push
mov
out
lcall
push
int
jae
cltd
test
lcall
jl
ljmp
fstpl
outsl
sub
jno
push
hlt
leave
mov
or
dec
mov
mov
out
test
iret
jmp
in
inc
pusha
adc
dec
ret
mov
jbe
sub
push
jmp
rcrl
inc
xor
ds
cmp
pop
fmuls
ja
cmp
ja
jl
fidivrs
mov
xor
mov
jge
inc
mov
test
cmc
test
jbe
mov
jns
shll
nop
sbb
rclb
cwtl
xor
lret
mov
pushf
mov
jno
adc
mov
popa
mov
icebp
mov
ficompl
and
stos
inc
inc
fmuls
int3
out
int
jbe,pn
ficoml
adc
pushf
lcall
jmp
mov
jg
cli
jecxz
xor
popa
fnstenv
jg
or
mov
jp
mov
cmc
fs
inc
cli
inc
test
ja
out
mov
aam
and
fwait
in
jl
cmp
adc
movsb
arpl
arpl
idivb
out
loope
in
test
daa
sbb
mov
test
ret
and
cltd
shrl
cmc
pop
cmp
mov
fistl
adc
dec
add
inc
mov
call
mov
ljmp
mov
and
cmp
xor
jns
mov
fiadds
or
jmp
push
pop
idivb
xchg
xchg
dec
leave
test
pop
pop
rcll
jg
push
je
cmp
loop
enter
inc
and
call
or
xchg
xchg
fidivl
add
sub
ja
je
dec
adc
inc
adc
push
mov
sbb
xor
stc
outsb
jb
or
scas
mov
and
lock
sub
mov
jbe
push
std
outsl
jns
iret
fdivrl
sbb
xchg
popa
shrb
dec
push
frstor
ljmp
insb
mov
pop
and
inc
call
shrb
enter
pop
sub
out
add
jae
sub
ss
lret
inc
xchg
mov
xor
cmp
jne
inc
lods
jecxz
ret
jge
int3
lcall
lret
ja
dec
dec
cld
out
push
out
ucomiss
sti
mov
inc
push
rep
outsb
cmp
mov
jg
test
push
int
scas
imul
dec
pop
jecxz
out
push
fnstenv
adc
and
add
cmpsl
push
rcrb
nop
pusha
pop
fcmovbe
or
out
and
mov
lahf
in
sbb
sbb
adc
lahf
call
int3
xor
mul
movsb
and
divb
pop
ret
pop
arpl
mov
popf
pop
inc
add
sbb
shr
dec
fcoms
xchg
add
and
sbb
dec
adc
int
sti
inc
jmp
adc
mov
repz
cmpsl
jg
push
pop
push
sub
ja
std
test
jmp
repnz
loopne
adc
je,pt
daa
cmp
repnz
iret
mov
pop
and
loope
insl
and
std
sti
imul
jno
push
sub
call
lea
xor
lahf
xchg
loop
xchg
rcll
ret
xchg
inc
lcall
loopne
orl
jge
insl
shlb
jns
add
adc
movsb
add
loope
pushf
dec
nop
cmp
lea
into
and
xchg
int
shll
mov
scas
sub
push
sahf
xlat
sub
xchg
je
xchg
adc
pop
fstpt
pop
je
sbb
jle
daa
shrb
repz
cmp
loopne
fildll
mov
addr16
xchg
inc
shl
push
mov
dec
dec
cmp
and
cmp
pop
iret
sub
test
cmpsb
in
dec
dec
xchg
inc
clc
enter
sub
outsl
mov
int
addr16
sbb
pop
scas
aas
dec
push
fcomps
repz
mov
sub
outsl
and
adc
adc
cmpsl
negb
movsb
out
jmp
xchg
icebp
inc
jmp
mov
popa
cmp
inc
mov
in
sbbb
lret
scas
adc
cmp
add
push
or
outsb
js
and
loopne
push
jns
das
cmc
lea
scas
das
cmp
repnz
dec
pop
add
lret
sbb
pusha
nop
out
cmc
loope
stos
icebp
stc
ret
push
mov
popa
es
std
test
cmp
cltd
dec
or
ss
rclb
sub
and
out
clc
jg
mov
mov
fadds
mov
das
fcomps
jp
scas
mov
xlat
mov
cs
mov
mov
data16
loop
arpl
or
addr16
fs
adc
add
inc
inc
sbb
push
lret
into
jge
mov
and
popa
sub
add
cltd
push
and
call
jbe
lea
dec
fadds
aas
ret
dec
dec
clc
xchg
mov
pmulhuw
cmp
dec
out
add
out
lahf
pop
and
call
pusha
hlt
jp
mov
lds
sbb
pop
negl
mov
sarb
movsb
xlat
ret
rcrb
into
aam
movsl
mov
pop
mov
sbb
stos
and
popa
mov
enter
jnp
sbb
rorb
imul
add
push
lcall
out
xor
xchg
lret
mov
aad
mov
cltd
scas
or
jg
ds
xchg
cmpsb
mov
add
inc
pop
repz
pop
mov
adc
movsl
fs
loopne
sbb
stc
xchg
std
dec
je
loop
xchg
lcall
push
clc
add
sti
and
xor
mov
jmp
mov
jl
cmc
cmpsb
and
jno
cmp
jno
mov
cmp
mov
jae
dec
adc
dec
push
or
and
cmpl
sub
adc
adc
cwtl
xchg
cmp
mov
repz
mov
push
jp
pop
mov
or
add
xchg
inc
sti
sbb
pop
mov
ja
les
dec
or
xlat
mov
lcall
xchg
in
xchg
lods
jp
xor
mov
mov
in
push
sahf
fnsave
pop
cmp
cmpb
cmpsl
lcall
and
xor
popf
lret
jmp
stc
push
das
aas
adc
xor
push
add
push
js
das
mov
mov
pop
sub
pop
nop
inc
dec
cmp
adcl
xchg
cmc
push
test
add
in
movsl
out
test
dec
cltd
xchg
adc
adc
sahf
leave
fisubs
testb
cmp
push
lods
push
xchg
add
mov
lret
jns
xor
test
sbb
sbbb
jae
test
sub
popa
repz
cld
arpl
mov
cmpsl
stos
mov
movsb
mov
or
cli
dec
lods
adc
andb
fisubrs
and
sbb
jno
jo
in
mov
in
pop
pop
push
mov
mov
dec
or
mov
in
sbb
popf
sbb
icebp
test
js
aad
cmp
push
jne
pop
mov
adc
clc
clc
xor
mov
or
mov
popa
insl
pop
jne
jmp
sbb
jmp
int3
sub
jecxz
pop
fldenv
loop
scas
mov
dec
cmp
rorb
jbe
sub
xor
or
test
iret
and
cmp
sbb
pop
rcll
inc
cmpsl
scas
repz
cltd
mov
jmp
subl
xchg
push
adc
sub
adc
pop
rorl
add
mov
rcr
daa
lret
mov
dec
pop
sbb
mov
loopne
or
adc
loop
pmovmskb
jl
rcll
pusha
aam
les
jp
stos
pop
mov
mov
xlat
xor
ljmp
mov
mov
mov
ljmp
loop
cmpsb
xchg
xchg
mov
adc
inc
inc
pop
stc
mov
insl
or
and
call
add
cmc
clc
out
mov
cli
mov
push
mov
jle
push
dec
leave
aaa
jae
jl
lret
push
dec
dec
pop
sbb
notl
pop
nop
sbb
cmpb
movsl
rolb
loopne
or
dec
and
aad
mov
sub
mov
dec
cmpsb
je
xor
jmp
cmp
inc
sbb
cli
fsubrl
mov
rcl
lret
xchg
mov
sbb
pop
jb
cli
sbb
lock
or
xchg
hlt
sbb
cltd
xchg
or
mov
int
js
sahf
mov
stos
loopne
ja
sub
mov
jo
push
sub
mov
mov
and
xchg
cmc
in
aam
or
jne
jecxz
ljmp
or
dec
hlt
dec
dec
cltd
jno
ljmp
cli
cmp
popf
test
cmp
dec
or
sub
shll
jmp
dec
inc
and
dec
xor
mov
inc
mov
push
sub
xchg
sub
fs
adcl
add
or
sub
mov
push
push
jecxz
pop
push
lods
and
push
fnstcw
das
testl
mov
lret
stc
or
mov
lret
pop
xchg
or
add
aas
dec
aad
push
push
sub
aaa
dec
or
jl
sub
sub
inc
jl
outsl
add
mov
jmp
push
mov
dec
xchg
int3
bound
push
adc
iret
cltd
xor
pusha
adc
out
test
sbbb
out
xchg
stos
jo
call
push
jno
fldl
mov
dec
test
shrb
add
movb
push
iret
pop
mov
hlt
pop
jo
jns
sahf
inc
sbb
xor
hlt
push
in
or
push
sbb
pop
jo
mov
sub
dec
iret
xorb
inc
sbb
sbb
fwait
and
jle
mov
mov
aam
fwait
js
test
sahf
dec
dec
mov
xor
in
dec
mov
cmpsb
and
jle
push
push
ret
inc
xor
loope
mov
addr16
mov
faddl
mov
adc
lahf
fs
in
xor
xor
pushf
testb
or
jae
or
mov
push
cmp
ret
sbb
jno
sub
push
mov
mov
sahf
pop
xchg
lcall
lahf
xchg
mov
daa
push
fbstp
outsb
gs
out
dec
out
or
rorb
gs
pop
test
ss
into
push
and
sub
fcoms
mov
push
adc
mov
mov
out
push
paddb
mov
negl
jle
cmpsl
fs
hlt
ds
sarl
in
ja
adc
fisttpl
je
cwtl
push
cmp
les
dec
fstp
cld
or
inc
pusha
scas
jae
aad
xor
iret
mov
dec
jmp
cmpsl
mov
in
lcall
arpl
add
sub
and
divl
test
pop
mov
ja
mov
jno
hlt
jbe
call
or
mov
push
xchg
jmp
je
cmpsl
mov
adc
inc
add
hlt
or
cmpsl
add
xor
repz
stos
inc
or
cli
xchg
repz
and
inc
lock
inc
arpl
jae
or
fistps
aaa
inc
inc
pop
jns
imul
push
dec
push
push
pop
fwait
dec
faddl
cmpsl
mov
fstps
dec
cmc
rcll
or
dec
add
scas
aaa
popf
mov
adc
out
xchg
cmc
push
sub
sbb
and
loop
aam
push
js
pop
lea
cmp
mov
push
cmpb
mov
popf
fdivrs
or
popa
push
aad
pushf
enter
jmp
pop
sti
std
jns
bound
fsubrl
mov
inc
lds
rorl
inc
push
or
pop
push
test
fs
jne
scas
sarb
mov
xor
neg
movsl
jg
xchg
dec
ss
xor
lret
xor
jge
rcrl
gs
sbb
jns
inc
adc
or
add
fidivrs
je
cmp
inc
add
sub
aaa
repnz
xchg
xor
mov
js
inc
cmp
dec
stc
faddl
sub
leave
mov
sub
xchg
out
jmp
push
call
pop
ss
xchg
test
cld
add
jmp
inc
inc
js
inc
ss
cmp
mov
cmc
mov
bound
add
scas
pop
lods
icebp
and
and
and
loop
and
clc
sahf
push
es
push
xchg
adc
or
sbb
addb
aad
ja
adc
adc
dec
insl
sub
clc
sbb
mov
shlb
xchg
fmuls
dec
or
and
xlat
shlb
int
fnstsw
bound
cltd
or
pop
repnz
mov
pop
pop
hlt
ret
cwtl
dec
push
int
sub
sbb
fs
fcoml
inc
mov
fcoml
jno
mov
iret
loope
mov
push
inc
movl
add
sbb
dec
std
jge
jmp
push
in
xchg
sbb
cmc
popf
push
cmp
jbe
fldenv
mov
and
adc
sub
popf
fsubs
popf
mov
in
mov
jo
mov
pop
nop
jmp
outsl
xor
jge
popf
or
inc
imul
addr16
xor
cli
stos
jp
mov
sti
sbb
sbb
xor
ss
sbb
jle
packsswb
stc
ja
mov
scas
mov
jnp
mov
xlat
dec
cmc
sbb
lods
mov
cmp
or
cmpsl
iret
jl
xchg
subb
addr16
cmpl
and
idivb
pop
into
pushl
inc
xor
add
xorl
inc
xchg
mov
add
iret
fs
iret
push
std
inc
lret
mov
mov
rcr
pop
repz
xchg
test
jne
lahf
push
mov
mov
fwait
loope
push
jbe
dec
movsl
aas
jg
ss
ret
adc
test
ljmp
in
pop
std
xor
stc
jg
and
test
pushl
jp
shrl
adc
in
pop
insl
out
sub
cmp
and
and
jne
jg
mov
enter
inc
mov
sub
out
sbb
jns
or
int3
lret
push
stos
dec
fcoms
sbb
dec
or
pop
cli
mov
imul
mov
and
lret
cmp
insl
shlb
mov
jmp
je
enter
das
ret
ja
mov
cmp
sarb
push
cs
clc
cltd
rcl
push
mov
mov
jnp
pop
mov
les
jle
pushf
subb
jbe
lret
jg
inc
aad
push
popf
andl
insb
adc
fdivrl
jne
ljmp
test
xchg
sub
decb
loopne
aam
sub
cli
push
mov
mov
into
mov
or
repnz
mov
repnz
or
xor
das
cmp
shll
dec
inc
pop
mov
inc
hlt
fcmove
dec
jg
ret
push
mov
inc
mov
sub
and
mov
xchg
into
ret
or
icebp
inc
fldz
inc
jbe
lahf
mov
cmpsb
ret
sub
ss
aad
ja
and
mov
mov
add
repnz
xlat
jge
stos
push
stc
or
dec
sub
ret
mov
roll
push
fiaddl
leave
cmp
lahf
cltd
mov
in
js
cmp
pop
mov
divb
leave
pusha
pop
pop
xor
push
xor
or
orl
jge
push
push
fwait
xchg
rcrb
push
xor
xor
loopne
ficompl
fsubl
loope
loop
sbb
jmp
push
add
imul
das
jecxz
pop
test
insb
sub
sbb
jmp
es
repz
jg
inc
xchg
jge
sbb
push
sub
icebp
pop
stos
arpl
mov
xchg
dec
sbb
add
lahf
sub
cli
jno
push
lds
nop
iret
lds
fwait
jecxz
sub
inc
jmp
popl
dec
roll
ret
lods
mov
js
push
loope
pop
popa
dec
and
mov
cli
push
mov
inc
aas
xor
dec
add
push
inc
arpl
ja
loop
cwtl
dec
std
dec
divl
addr16
dec
xchg
je
or
pop
mov
mov
sbb
mov
cmp
ret
and
mov
xchg
xor
or
adc
test
pop
cmp
outsl
enter
mov
jle
adc
cwtl
adc
xchg
sub
xor
jmp
add
jmp
and
add
lret
rcrb
or
arpl
mov
jg
lcall
je
jno
es
xchg
loope
cs
inc
push
into
das
jno
lds
jne
mov
push
xor
lods
add
shrl
cmc
shll
pushf
nop
lret
iret
lahf
fildl
ljmp
mov
call
stc
sub
and
mov
mov
push
cmpsl
fcom
hlt
push
fwait
push
rclb
fsubl
scas
dec
lock
inc
dec
punpckhbw
cli
stos
mov
daa
sub
loope
push
mov
dec
pop
popl
lock
icebp
sub
mov
jp
inc
xor
mov
mov
call
xchg
mov
xchg
sub
pop
xchg
repnz
mov
cmp
mov
cmp
ljmp
cmp
adc
jge
jecxz
cmp
out
sub
fcmovb
clc
divb
add
mov
mov
pop
xor
push
xor
xchg
outsl
mov
push
or
aas
push
jo
in
and
cmpsb
std
push
inc
inc
mov
push
imul
add
pop
hlt
out
gs
insb
add
jmp
mov
mov
xchg
fs
loopne
push
fmull
bound
cmp
mov
sub
aas
fmuls
imul
or
es
je
sti
or
xchg
test
std
ds
push
xchg
mov
je
sahf
mov
add
std
inc
sub
lcall
jge
popf
dec
icebp
cmp
inc
push
sbb
in
aad
adc
mov
mov
push
in
add
dec
mov
adc
mov
jns
in
mov
mov
cmp
sbb
outsb
and
xlat
xor
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
movl
mov
not
movl
mov
mov
mov
and
mov
xor
mov
add
cmp
je
mov
xor
movl
movl
mov
sub
movl
add
movl
mov
mov
mov
xor
add
cmp
jne
mov
jmp
lret
pop
idivb
addr16
push
into
sub
gs
jl
sbb
call
popf
xor
xchg
daa
push
cmc
mov
sarb
psadbw
pushf
mov
and
aas
xor
in
mov
cmpl
xchg
push
cmc
data16
sbb
push
popa
inc
adc
dec
mov
dec
mov
gs
enter
cmp
push
mov
js
mov
add
jmp
sub
test
dec
shrl
in
out
flds
push
jg
cltd
mov
add
aad
loope
bound
inc
das
ret
sbbb
cmp
mov
ljmp
push
ficoml
cmp
jne
cmc
push
dec
cltd
jb
jl
adc
inc
data16
adc
fsubl
mov
in
fabs
lret
jb
sbbb
cmp
cld
int3
jle
pop
lea
xor
outsl
lea
adc
push
mov
subb
and
inc
mov
insl
jl
in
mov
mov
dec
or
into
fsubs
push
xchg
aaa
movsb
sbb
push
cmc
loop
popa
lock
inc
mov
pop
js
jns
xchg
adc
loope
pop
push
in
outsl
mov
cli
ret
pushf
sub
sub
push
mov
cmp
sti
call
inc
push
and
movsl
mull
pop
push
mov
ljmp
pop
mov
lret
mov
inc
xor
mov
ss
addb
bound
sub
pop
mov
cltd
mov
into
loopne
or
mov
jle
mov
sbb
mov
push
mov
insl
cmp
xchg
pop
iret
sub
ja
lea
pop
and
mov
mov
mov
sbb
mov
sbb
popf
pop
adc
mov
or
call
and
xor
jl
fs
outsl
fstpt
mov
out
aaa
jg
insl
divl
cmpsl
add
scas
popa
test
or
test
inc
popa
sub
aas
xchg
jmp
pop
jns
fimuls
sub
fmull
cwtl
cmp
inc
shrb
sti
jns
daa
jecxz
mov
ret
fbstp
pop
cmp
pusha
push
and
sbb
pop
sub
and
cmp
ret
cmp
insb
cmp
xor
dec
les
cld
push
adc
fsts
jnp
mov
test
insl
outsb
xchg
dec
loopne
shl
shlb
shlb
out
test
sub
sub
push
mov
mov
loopne
fs
lret
out
push
and
and
or
das
int
pop
add
dec
outsb
imul
xor
push
sub
fistpl
out
xchg
jae
int
cli
andb
lret
in
adc
jg
cltd
subl
xor
daa
in
and
push
mov
mov
in
movsb
xor
popf
insl
mov
jb
fcmovu
mov
loope
dec
imul
sbbb
stos
cmc
mov
outsb
inc
pop
mov
pop
jae
or
jle
outsl
mov
and
adc
add
leave
push
test
jne
lock
add
xorb
cs
stos
cmp
pop
or
out
daa
xchg
lret
mov
dec
test
lock
xor
sarb
imul
aaa
mov
pushf
xchg
add
pop
sbb
mov
insl
pop
out
testb
adc
cltd
inc
or
sbb
sub
cmp
jbe
xor
fnstenv
les
fs
push
or
sbb
push
imul
test
cmc
mov
icebp
mov
dec
jb
and
jmp
cwtl
orb
in
pop
mov
bound
push
fwait
test
add
sti
or
mov
jno
dec
lods
add
imul
lcall
testl
das
push
sbb
mov
mov
xchg
rcll
sbb
cld
lods
das
fs
mov
adc
popf
mov
fnsave
pop
add
xchg
in
add
adc
add
divl
and
es
jmp
out
int
das
dec
sub
lods
xor
stos
mov
in
lcall
test
mov
sbb
roll
cli
nop
pop
and
mov
push
lret
cltd
mov
shlb
mov
jl
sub
test
out
mov
xchg
cltd
shrb
cmp
xor
add
test
rorl
add
insb
stc
inc
out
sub
add
add
addr16
or
push
int
test
lock
ret
adc
les
or
ret
or
mov
sbb
jl
jbe
nop
sbbb
or
jne
push
pop
mov
lea
jge
jbe
cmp
cli
cs
mov
adcb
fsubrl
imul
dec
out
and
outsl
adc
dec
sbb
and
pusha
fisttps
enter
push
ffree
dec
out
jp
jno
xchg
mov
jae
decl
dec
mov
sbb
ja
negl
mov
daa
cmpsl
push
cmp
stos
mov
out
xor
jle
mov
dec
mov
test
je
jl
lods
pop
push
or
sarb
cmp
inc
jns
sahf
das
ja
lods
sahf
jp
pop
mov
insb
xor
cmp
nop
sub
hlt
aam
push
cmp
jns
iret
decb
fidivrs
jmp
dec
pop
sub
prefetch
int
pusha
adc
sub
scas
mov
mov
pop
cmpsl
pop
loope
xchg
adc
scas
scas
sub
adc
insb
jp
jg
and
dec
ret
add
cmp
out
sbb
add
cmp
loopne
mov
jp
aas
add
out
bound
mov
out
xchg
fsubrs
push
lcall
push
inc
mov
in
xlat
and
and
jb
xor
loopne
insl
adc
mov
mov
iret
mov
adc
cli
mov
sub
jne
push
loopne
xchg
dec
cmpsl
dec
mov
test
pushf
scas
mov
in
xchg
cmp
pop
dec
mov
repnz
movsl
jo
mov
les
cmp
xlat
sub
leave
mov
cmp
mov
and
cmp
cmpsb
int3
mov
dec
mov
leave
mov
in
add
test
cmpsl
add
xchg
jmp
gs
cwtl
insl
out
adc
scas
popa
or
cmovl
sub
lret
negl
push
fwait
and
xchg
fwait
fwait
in
arpl
or
cmp
jne
cmc
adc
dec
cwtl
in
fs
mov
jb
adc
fiaddl
mov
std
notb
cwtl
loop
loope
bound
daa
movsl
mov
rorl
and
add
cmpsb
jnp
ret
sbb
pop
fldl2e
mov
fdivs
adc
iret
out
sahf
sbb
pop
mov
ret
mov
andl
lods
movsb
sub
cmp
stc
pop
repnz
push
fstpl
pop
enter
leave
pop
push
mov
cmp
out
addr16
popa
jb
jmp
xchg
stos
fldt
test
loope
les
nop
loopne
insb
ja
and
dec
pop
subb
enter
push
mov
cmp
mov
ja
add
inc
out
stc
mov
call
addr16
cmp
cmp
ret
adc
psllq
mov
push
and
add
jge
adc
mov
mov
loopne
adcb
cmp
sti
pop
ljmp
pop
xor
xchg
add
lock
mov
xchg
jg
push
mov
mov
push
cmp
sub
mov
sbb
push
mov
xchg
push
push
fwait
mov
loop
lods
adc
mov
mov
dec
out
arpl
xchg
push
inc
push
mov
pop
inc
stos
aaa
repnz
movsb
arpl
lret
jge
cmp
lcall
xchg
daa
mov
popa
rcl
fmuls
sbb
out
cmp
or
inc
int
xor
pop
and
mov
lock
out
cmp
mov
cmpsl
mov
pop
push
cs
and
in
and
push
out
or
js
outsl
mov
push
jo
and
pop
pop
xchg
or
shrl
dec
add
add
popa
xchg
push
dec
sbb
imul
mov
stos
adc
fucomip
cmp
xchg
add
push
test
orb
xchg
sbb
or
sbb
clc
adc
mov
sbb
mov
ja
enter
mov
adc
rcl
ret
les
and
or
dec
dec
mov
mov
loope
mov
js
and
dec
xor
and
mov
lcall
and
ret
dec
std
cmp
add
popa
in
out
mov
xlat
jmp
fsubrl
cmc
xchg
mov
lods
int3
sbb
dec
lods
adc
rclb
lret
lea
testb
add
adcl
push
arpl
cltd
push
repnz
fmul
enter
add
jecxz
pushf
fs
mov
insl
cs
dec
dec
push
andb
mov
mov
xor
sahf
sbbb
mov
fldl2t
and
pop
and
sysenter
push
xlat
pop
inc
jecxz
mov
arpl
shll
sbb
xor
mov
jae
sub
jo
cmp
and
out
pusha
adc
shlb
insb
xchg
sub
lea
push
outsb
adc
dec
cmp
lods
call
call
test
or
mov
fwait
jp
or
add
clc
das
or
imul
ret
pop
sbb
or
adc
call
xchg
test
ret
and
rcl
xchg
xchg
sub
and
shrb
inc
sti
inc
fstpt
sti
ret
pop
add
into
push
pop
aam
mov
fstl
ja
push
jmp
repz
in
jmp
shl
sahf
pop
and
pop
pop
sar
push
xchg
ror
insb
jbe
notb
sti
and
and
int
insb
lret
or
jge
and
xchg
shrb
jno
icebp
mov
es
cmpsl
and
push
jecxz
push
leave
arpl
fs
mov
cmpsb
fs
inc
pop
dec
jns
stc
cmp
loopne
or
ljmp
xchg
outsl
test
fucomip
outsb
inc
or
leave
sbb
call
adc
mov
pop
or
push
loope
sbb
pushf
push
aaa
lea
pop
lret
pop
out
mov
gs
push
mov
int
test
xchg
stos
cs
out
mov
sarb
mov
xlat
imul
aaa
idivb
test
pop
ficoms
jne
lds
int
inc
hlt
jl
lret
movsb
dec
les
in
jns
push
lds
jnp
mov
add
cmpsl
lret
ss
xorb
rcll
xchg
mov
out
pop
shll
and
ret
mov
jg
jge
sarb
out
enter
mov
xchg
cmc
fucomi
pusha
and
loope
popa
cmp
dec
cmp
mov
pop
adc
xor
imull
pushf
sar
into
mov
stc
sbbb
mov
call
bound
jb
jecxz
xchg
mov
or
adc
mov
imul
int3
mov
and
push
scas
rcrl
stos
pop
daa
pop
aas
push
xor
cmpsb
mov
fistpl
sub
xlat
das
cmp
xor
add
mov
cs
loopne
test
mov
jo
int
xchg
mov
ds
inc
mov
out
mov
mov
js
clc
mov
jmp
jle
and
incb
cld
aas
jg
jb
sbb
mov
int3
or
jl
xor
xor
sbb
and
mov
xor
mov
loop
cmp
fisubrs
push
repz
rcll
add
push
das
jp
mov
ror
scas
cmpb
or
jns
xchg
aas
cmp
mov
ljmp
add
xlat
andl
inc
enter
xchg
or
add
jb
inc
pop
xor
ret
leave
mov
mov
or
mov
add
in
decl
shll
mov
jmp
jbe
data16
mov
inc
xchg
and
mov
aaa
aas
ja
pop
or
pop
pop
add
repnz
fsubrs
xlat
sbb
push
mov
sbb
push
ret
insb
les
insl
cli
mov
imul
inc
xor
fwait
mov
sti
sbb
mov
and
push
sub
into
xchg
arpl
out
cmp
cmc
inc
inc
mov
mov
sub
inc
and
ss
repnz
fadd
mov
jno
mov
inc
jnp
mov
or
divb
popf
mov
mov
mov
sar
sbb
cmp
aas
cmp
adc
adc
jmp
or
loope
fists
inc
push
pop
mov
cltd
call
or
xchg
mov
shlb
hlt
test
into
adc
push
cmc
and
loopne
adc
sbb
imulb
aad
jnp
int
adc
jb
int
push
mov
ret
negb
pop
adc
inc
pop
adc
test
outsl
dec
xor
push
dec
js
mov
dec
push
stc
sub
movsb
cmp
mov
and
inc
je
push
jns
sub
push
fldcw
pushf
test
fwait
mov
sbb
sub
xchg
sti
pushf
in
lcall
push
pop
or
test
add
mov
mov
shll
insl
jge
add
sub
jnp
dec
push
sbb
xor
aam
lret
addr16
sbb
mov
push
test
sub
andl
ficoml
inc
movl
in
aaa
lret
daa
mov
jle
push
push
dec
mov
xor
stos
add
shl
bswap
add
pop
cmpb
push
icebp
ljmp
xchg
push
xchg
pop
inc
push
ljmp
pop
fs
sahf
jp
or
sub
cmp
imul
jp
inc
jbe
fistpl
addr16
mov
push
in
jmp
aam
sbb
xor
lock
aaa
jp
jns
pop
mov
fbstp
mov
jp
stos
cmpb
insb
inc
out
imul
cmpsb
jbe
xchg
sbb
mov
xchg
xchg
mov
in
outsb
and
arpl
cmp
mov
jg
ret
outsl
xor
imul
mov
fidivs
or
or
mov
rcr
and
mov
rclb
jle
popa
sbb
aad
ss
mov
mov
jae
daa
mov
inc
pop
mov
dec
adc
xchg
cmc
lods
in
sub
aam
test
iret
call
into
imul
arpl
cmp
popa
insl
mov
dec
jecxz
push
push
mov
pusha
jns
sahf
pusha
mov
fisubrl
outsb
lcall
jle
repz
mov
lock
jae
xchg
mov
jecxz
pushf
cmp
out
mov
or
orb
jae
shlb
cmp
rcrb
fisttpll
mov
repnz
sti
mov
sub
cmp
dec
sub
pop
lcall
arpl
inc
cmp
jae
pop
not
fwait
mov
inc
roll
mov
push
or
jb
mov
push
arpl
bound
movsb
sub
repnz
mov
aaa
adc
mov
or
mov
fistpll
fcoml
mov
test
add
or
cmp
je
test
mov
lods
xchg
xchg
mov
aam
push
mov
gs
test
or
mov
jo
mov
jne
jp
nop
mov
push
cmpl
sbb
nop
repz
movsb
ljmp
mov
adc
ss
adc
hlt
inc
lret
pop
jbe
sub
jecxz
pop
cmp
pop
sub
stos
mov
lahf
pop
mull
test
jo
jl
dec
pop
or
inc
sbb
inc
cwtl
dec
xor
enter
push
fldt
push
cmp
push
mov
imul
and
push
mov
dec
test
mov
push
inc
mov
cs
adc
mov
jnp
cmp
pop
xor
push
xor
jne
aam
mov
test
movsl
add
xchg
mov
mov
xor
mov
inc
adc
into
cli
adc
sbb
xor
xchg
sub
jg
lods
jmp
jnp
add
bound
xor
out
push
insb
shl
jae
ja
jge
test
loopne
jno
sbbb
test
lahf
push
into
dec
xor
mov
mov
bound
scas
or
mov
int3
insl
add
mov
dec
cmc
mov
push
rorb
sub
and
loopne
imul
loopne
lret
nop
sbb
mov
jl
iret
or
push
mov
js
in
and
jmp
cs
xchg
lret
aad
arpl
test
fidivs
sub
imul
in
add
cwtl
add
mov
sub
inc
call
inc
mov
dec
andl
cmpsb
dec
ljmp
pushf
aas
ljmp
pop
sub
jg
sub
dec
adc
adc
loopne
sbb
repz
dec
mov
loop
out
aaa
pop
jns
mov
jmp
stc
sub
pop
lahf
sti
mov
inc
repz
clc
outsl
popf
and
jno
test
lock
std
cmp
mov
jl
cmpsb
push
sar
inc
adc
out
cmp
cmp
pop
mov
mov
and
dec
enter
push
mov
loope
data16
cmp
inc
sbb
cmp
xchg
push
mov
fwait
sbb
cmp
xor
push
test
jae
xchg
daa
jne
add
xchg
add
jl
push
movsl
inc
cmp
mov
dec
call
push
pop
jb
adc
xor
lahf
mov
adc
push
popf
test
fidivrs
inc
std
cmpsl
int3
xchg
jo
js
jo
add
add
lcall
mov
and
sbb
lea
push
adc
mov
hlt
push
push
dec
iret
inc
out
js
push
inc
pop
push
sbb
xchg
fisubrs
mov
pop
popa
aam
int3
mov
mov
mov
push
mov
ds
fnstcw
lea
sub
add
mov
push
add
in
cwtl
mov
loop
mov
lods
ret
mov
pushl
in
pop
mov
xchg
jl
mov
jne
mov
lcall
pop
sbb
cmp
aad
addr16
imul
jl
add
xlat
push
xchg
jae
mov
mov
jne
dec
lock
xor
aaa
xor
scas
fdivrl
das
aas
sub
sub
cli
dec
push
enter
sbb
dec
pop
mov
in
cmp
out
xchg
data16
and
sub
cmp
add
mov
lock
cmp
inc
jmp
add
inc
push
dec
add
cltd
das
jle
inc
enter
lods
cwtl
sbb
inc
daa
add
cmp
mov
mov
lea
xchg
jl
inc
jmp
aas
or
push
pop
ret
mov
stos
out
pop
lea
mov
mov
popf
pop
cmpsl
jge
push
pop
lock
xorb
dec
xor
lods
fcoml
push
fcmove
sub
xchg
bound
test
jmp
jg
jecxz
add
sub
fmull
push
jp
in
cs
ret
xor
push
orl
and
int
jb
das
fmuls
push
int
push
dec
fistps
int
push
mov
pop
cmp
add
repz
or
imul
adc
jnp
xlat
movsb
cwtl
aaa
xor
ss
mov
xor
lock
test
sub
sahf
xlat
push
and
icebp
in
jmp
or
outsl
stc
jp
xchg
notl
test
fs
sbb
pushl
xor
dec
inc
mov
scas
loop
mov
cmp
jne
sbb
stos
xchg
mov
mov
or
xchg
cs
rcrb
push
lock
and
xchg
rolb
xor
call
pop
bound
pop
icebp
mov
xchg
cmp
jo
cld
dec
push
sbb
pop
insl
lods
aaa
dec
add
push
nop
rclb
faddl
lea
nop
xor
outsb
adc
test
lds
dec
or
cmp
push
or
xor
dec
add
movsb
xchg
mov
lcall
and
dec
jae
je
leave
out
js
emms
push
sbb
cmpl
add
dec
call
aam
rol
mov
outsl
cmc
dec
or
loop
rol
icebp
test
out
adc
mov
xor
das
daa
ret
mul
jg
mov
jl
jb
xchg
jecxz
fs
inc
add
or
ds
pop
lret
jne
pop
dec
sub
sbb
push
in
xchg
xchg
stos
in
xchg
cmp
mov
imul
sub
xchg
push
data16
cwtl
mov
in
inc
ret
mov
mov
in
mov
mov
cmp
ds
fadds
je
cmp
dec
add
jne,pt
lret
fnstcw
clc
daa
push
xor
mov
incb
xor
inc
mov
sub
jb
dec
push
jl
mov
mov
xor
dec
inc
popf
mov
shll
sub
in
subl
sar
shl
xlat
mov
mov
adcl
scas
aaa
es
adc
scas
imul
lods
push
test
mov
add
and
mov
enter
cli
mov
ss
push
lahf
into
rcrb
xchg
repnz
pop
out
stos
rol
pop
fidivrl
daa
sahf
imul
dec
jecxz
push
insb
sbb
sbb
dec
pop
mov
lods
push
mov
fwait
out
cmpl
test
fsubrs
mov
mov
xchg
ljmp
inc
insl
outsb
in
stos
cltd
js
out
pop
cmp
aas
incl
xchg
mov
add
jmp
jbe
jp
mov
mov
insb
cwtl
push
inc
mov
mov
xlat
lea
push
xchg
repz
mov
pushf
xchg
imul
sbb
or
or
mov
and
test
pop
lods
adc
or
cmpsl
das
xchg
inc
sub
jmp
or
or
dec
andl
ss
test
pushf
or
xor
jns
out
daa
test
push
cwtl
pop
jg
sub
les
ret
movsb
mov
dec
decl
cmp
jnp
sti
mov
mov
xchg
out
movsb
mov
repnz
jp
mov
sbb
dec
fmuls
repnz
fdivrs
xchg
push
mov
fcompl
popa
repz
lds
inc
push
mov
decb
push
testl
xor
jae
push
xor
pushf
xchg
cltd
adc
mov
cmpsl
adc
jle
add
addl
jmp
mov
adc
lock
add
adc
and
fcmovbe
imul
cmpsb
mov
sbb
ja
push
mov
pop
std
inc
inc
dec
cmp
lods
or
push
add
pop
imul
pop
mov
inc
rorl
mov
movsl
or
push
jne
sbb
push
cmp
jg
xchg
jb
cwtl
aam
idivb
shlb
xchg
fbld
xchg
sbb
and
cmp
das
pop
lods
aaa
or
jbe
cltd
xchg
rolb
lds
push
stos
adc
pop
ret
test
adc
pop
imul
sub
xchg
inc
xchg
fdivl
outsl
lcall
lret
add
xor
addb
imul
pop
inc
push
jb
mov
icebp
pop
sbb
movsl
in
adc
sarl
fs
dec
xorl
nop
xor
xor
das
arpl
xlat
pop
bound
dec
nop
pop
sub
lea
ja
orb
filds
jo
dec
inc
adc
dec
or
ret
push
rsqrtps
test
movb
imul
add
push
jge
cmp
cmp
mov
jg
outsl
cmp
orl
lods
push
pop
push
push
les
call
pop
shll
orb
lret
mov
jb
jno
mov
push
mov
xchg
inc
xrelease
mov
xchg
xor
ror
inc
xlat
mov
mov
mov
pop
push
sbb
and
adc
dec
pop
mov
shr
mov
pop
push
mov
lock
add
mov
pop
sbb
es
adc
sbb
lock
mov
into
push
pop
cmpsl
ret
sub
sti
out
scas
push
add
in
push
mov
inc
sub
stc
scas
pusha
bound
sti
xor
mov
dec
scas
mov
inc
sbb
pop
mov
loopne
jnp
fcoml
daa
sub
xchg
out
insb
pushf
icebp
lahf
and
jg
jmp
pushf
pop
cmp
mov
rolb
ss
les
mov
sahf
das
lahf
or
and
loope
mov
xchg
icebp
adc
push
mov
incl
adc
out
jae
je
or
sbb
sti
mov
mov
movsb
and
or
sbb
cli
std
lock
xor
xor
or
mov
push
inc
pop
inc
add
lock
jl
mov
and
and
sahf
out
xor
or
cmpsl
dec
insb
add
cmp
jmp
lock
mov
cmp
push
jae
dec
test
lods
pushf
into
in
and
clc
loopne
outsb
es
push
sbb
push
xchg
clc
movsl
and
cmp
adc
pop
imul
push
cmp
add
daa
in
and
xchg
adc
cwtl
aad
or
movsl
push
test
jbe
mov
into
lds
jb
aad
dec
jnp
xchg
xchg
xor
in
jb
cmp
push
sub
scas
mov
push
push
xor
loop
adc
or
lcall
dec
cmp
adc
ficoml
cs
or
daa
das
fimuls
fimull
xchg
mov
mov
mov
movsb
cwtl
mov
cmp
outsl
pop
mov
xchg
outsb
mov
movsb
xchg
lea
push
andb
xchg
dec
ja
hlt
outsl
test
imul
flds
repz
xor
movsb
lea
lea
aas
rorb
xchg
aam
adc
sbb
shl
xchg
xlat
xor
cltd
push
xchg
fdivrl
outsb
test
sbb
mov
iret
xorl
enter
fbld
sti
outsb
dec
dec
or
in
daa
push
push
cmp
das
xchg
xchg
mov
outsl
push
es
fwait
push
mov
push
add
lret
sub
mov
xor
into
or
jp
mov
jnp
mov
add
nop
ret
and
mov
xor
test
push
lods
xor
rorb
popf
clc
push
and
lret
jns
and
loop
mov
and
mov
lods
sbb
out
adc
dec
cs
cltd
mov
lea
cld
inc
jnp
add
jecxz
ja
in
pop
mov
xchg
cmp
popf
xor
out
add
test
jp
icebp
in
hlt
mov
idivl
and
dec
leave
popf
push
lods
dec
jmp
insb
pushw
jmp
mov
mov
ficompl
imul
outsb
aam
mov
jl
inc
aad
sti
push
xchg
cmp
jae
mov
jns
inc
lea
adcb
jns
leave
jae
out
or
test
xchg
fnstenv
fdecstp
lcall
push
pop
add
loopne
movsl
mov
repnz
mov
ss
pop
jns
add
sub
mov
mov
mov
dec
in
loope
leave
xchg
push
imul
fcom
add
out
mov
int3
cmp
leave
imul
sbbl
xchg
push
sbb
pop
push
cmovnp
shrl
push
in
push
xchg
cli
lock
push
fs
stc
mov
push
inc
daa
lds
nop
xchg
push
xchg
dec
inc
sub
in
in
scas
fbstp
loope
jmp
inc
fadd
stc
pcmpgtw
sub
mov
sub
xor
int
and
push
cmc
negb
adc
jb
dec
jbe
adc
adc
test
adc
sbb
out
mov
call
mov
pop
addr16
xor
clc
bound
test
dec
test
insb
mov
jmp
rcr
outsb
inc
mov
pop
popa
shrl
jbe
out
push
push
inc
sahf
and
xor
movb
popa
dec
shr
adc
fisubs
push
scas
adc
fincstp
mov
and
in
xchg
pop
mov
cli
mov
push
adc
pop
inc
adc
cs
cld
lds
ret
rcll
bound
sub
and
dec
mov
stos
push
jl
mov
int
int
fbld
xor
loope
jmp
cltd
ja
in
xor
fdivrs
arpl
push
dec
cs
movsl
and
add
into
xchg
fwait
jb
shll
adc
push
pop
icebp
mov
dec
mov
xchg
ret
hlt
or
dec
lds
jmp
sbb
jge
push
pop
in
stc
push
lret
orb
sub
fcoms
add
pop
add
dec
outsb
jecxz
ljmp
pop
mov
sbb
jmp
sbb
xchg
cmp
repnz
pop
aaa
fcoms
out
inc
mov
sti
mov
ss
jle
sbb
test
push
shl
stos
jmp
je
xor
mov
icebp
xor
scas
dec
xor
mov
cmp
in
mov
ret
and
mov
imul
out
push
lock
and
rcr
inc
repz
dec
insl
stos
jae
rorl
mov
out
jne
sub
add
jno
dec
shlb
pop
jge
lods
add
dec
jb
les
loope
cltd
inc
sub
ror
mov
xchg
pop
or
lahf
repnz
out
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
xor
mov
add
cmp
je
mov
add
mov
mov
mov
mov
xor
mov
mov
add
cmp
jne
mov
mov
mov
jmp
pushl
pushl
jmp
mov
mov
cmp
jne
cmp
jne
push
push
jmp
mov
mov
cmp
jne
cmp
jne
push
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
sub
mov
push
movl
push
movl
push
movl
movb
cmp
je
xor
movl
jmp
mov
movl
cmp
jne
mov
push
adcl
push
call
sbbl
test
movl
je
push
andl
push
call
andl
push
subl
lea
adcl
push
xorl
call
add
movl
or
mov
adc
mov
movl
dec
lea
andl
xor
add
inc
mov
cmpl
jle
jmp
push
pushl
push
call
cmpl
jb
mov
adc
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
or
or
mov
mov
mov
movl
cmpl
je
cmpl
jl
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
adc
mov
sub
xor
addl
mov
orl
add
movl
mov
not
mov
cmp
jne
neg
mov
mov
xorl
mov
xor
addl
add
addl
mov
mov
xor
add
mov
mov
subl
xor
add
orl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
pushl
call
jmp
mov
mov
mov
sbbl
mov
movzwl
sub
mov
mov
mov
mov
addl
mov
subl
mov
movl
mov
add
mov
xor
add
jmp
mov
cmp
jne
mov
cmp
movl
jne
push
xorl
push
call
orl
test
movl
je
mov
cmp
movl
jne
movl
mov
movl
cmp
movl
jne
adcl
push
incl
push
call
test
movl
je
sub
mov
sbbl
mov
addl
xor
adcl
lea
push
mov
andl
xor
xorl
lea
push
xor
mov
pushl
xorl
call
xor
xor
mov
sub
sub
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
call
jmp
mov
add
xor
xor
lea
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
andl
xor
xor
add
andl
mov
inc
mov
cmpl
jle
jmp
push
call
cmpl
jb
mov
adcl
xor
movl
lea
movl
mov
movl
cmp
movl
jbe
and
mov
movl
cmpl
je
cmpl
jb
jmp
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
sbb
mov
mov
mov
mov
decl
sub
xor
movl
mov
lea
movl
mov
lea
movl
mov
mov
movl
cmp
jne
mov
movl
cmp
movl
jne
push
sbbl
push
sbbl
call
orl
test
je
movl
mov
cmp
movl
jne
movl
mov
cmp
jne
addl
push
push
call
test
movl
je
mov
cmp
movl
jne
movl
mov
movl
cmp
movl
jne
push
addl
push
call
test
movl
je
mov
movl
cmp
movl
jne
movl
mov
movl
cmp
jne
xorl
push
push
call
orl
test
je
mov
movl
cmp
movl
jne
movl
mov
movl
cmp
jne
xorl
push
push
addl
call
andl
test
je
mov
movl
cmp
jne
movl
mov
movl
cmp
jne
push
push
call
subl
test
je
mov
movl
cmp
movl
jne
movl
mov
cmp
movl
jne
addl
push
sbbl
push
addl
call
test
je
mov
cmp
movl
jne
movl
mov
movl
cmp
movl
jne
sbbl
push
orl
push
adcl
call
adcl
test
movl
je
movl
mov
movl
cmp
movl
jne
mov
movl
cmp
movl
jne
subl
push
push
movl
call
test
je
mov
movl
cmp
movl
jne
mov
movl
cmp
movl
jne
adcl
push
adcl
push
call
subl
test
movl
je
movl
mov
movl
cmp
jne
movl
mov
movl
cmp
movl
jne
push
push
sbbl
call
subl
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
jmp
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
movl
cmpl
je
cmpl
jge
jmp
push
call
mov
dec
mov
jmp
mov
mov
or
movl
sbb
mov
sbb
push
mov
incl
xor
sub
mov
adcl
push
mov
xorl
add
movl
cmp
je
andl
xor
add
inc
mov
cmpl
ja
jmp
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
xor
xor
or
mov
andl
xor
addl
xor
adcl
add
add
adc
andl
xor
xorl
mov
push
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
add
adc
xor
xor
cmp
jmp
pop
popf
cwtl
jo
jp
mov
cmp
nop
and
sahf
jnp
pop
data16
scas
shrb
pop
sahf
push
adc
sub
inc
jp
fdivrs
or
mov
pop
inc
repz
mov
imul
push
inc
lds
rcll
inc
pop
xor
xor
or
add
cmp
mov
dec
add
int
inc
mov
ret
sti
mov
cwtl
jnp
dec
into
les
xor
shlb
sti
into
in
and
push
in
loope
jmp
jmp
scas
movsl
jp
insl
pop
decl
in
pop
jecxz
cltd
mov
inc
cltd
decl
pop
cmp
iret
bound
gs
mov
out
or
cld
ljmp
sbb
cmpb
je
scas
and
mov
jle
js
int
or
mov
cli
repz
and
lret
je
fidivl
dec
int
mull
xlat
pop
jb
js
pop
xor
push
xchg
fcoms
mov
xor
xor
pop
call
jns
mov
jle
inc
movsb
jmp
movsl
shrl
sub
loop
mov
fwait
ja
and
cli
xchg
daa
mov
popa
pop
out
jle
mov
cmpsb
mov
adc
stos
and
out
adc
mull
aas
or
jae
sub
ret
shl
clc
cwtl
rol
ja
fistl
dec
pop
add
xorb
rclb
mov
in
fld
loop
outsb
aad
xchg
and
sbb
test
sbb
adc
ds
test
lods
push
sbb
mov
shufps
inc
mov
or
stos
mov
in
scas
xchg
in
rcrl
add
lds
pop
jle
dec
xchg
push
iret
xor
jnp
fdivrs
in
add
cmp
and
test
mov
xchg
test
mov
imul
jnp
pop
fs
cwtl
mov
leave
sub
mov
add
cmp
out
repnz
test
jecxz
and
or
popf
fwait
dec
pop
test
pop
out
lcall
int3
jno
push
test
lds
or
aaa
pop
jmp
xchg
fcmovnu
fsubs
icebp
in
ficomps
aas
dec
insb
outsl
cmp
sti
cmp
xlat
lods
mov
nop
dec
fisttps
push
fldl2e
mov
test
outsl
inc
test
lret
xchg
adcb
mul
inc
push
push
adc
mov
enter
mov
mov
mov
and
lods
jmp
push
insl
mov
xor
rcrb
pop
dec
stos
mov
shl
inc
ret
scas
dec
mov
mulb
pop
adcb
bswap
xor
popa
jmp
add
fisubs
dec
test
lea
sub
scas
sbb
lods
mov
cmp
in
and
or
jb
daa
call
dec
jg
mov
mov
push
cmpsb
adc
rorl
dec
jmp
pop
pusha
push
lds
sahf
mov
jle
test
sbb
mov
pop
jbe
add
icebp
pop
xchg
mov
in
sub
pop
es
inc
addr16
mov
dec
push
push
jno
jns
inc
cld
notb
call
outsb
sub
xor
gs
xchg
inc
push
sub
stos
cmp
and
mov
xor
movsb
out
xchg
add
mov
arpl
nop
jl
out
sub
or
or
andb
arpl
stc
pop
out
mov
jmp
mov
sub
clc
sahf
xor
cltd
clc
or
pop
mov
jecxz
rcrb
push
inc
popa
mov
out
movsl
pushf
addr16
out
cwtl
std
adc
push
lea
leave
mov
fldz
jbe
aaa
setae
inc
cs
dec
sbb
jl
popa
lret
or
scas
add
adc
stos
stc
movsl
das
loop
nop
in
mov
sbb
pusha
aaa
inc
test
lods
pusha
mov
cmpsl
pusha
sti
inc
jne
sub
push
add
sarb
cmp
test
ret
cmc
lcall
ret
mov
fisubrs
ds
adc
mov
mov
shll
sarb
inc
arpl
sarb
call
sti
lea
lods
adc
adc
shrl
bound
xchg
sahf
adc
push
into
movb
call
out
mov
xchg
and
fwait
or
nop
sti
jg
add
dec
sahf
in
inc
adc
pop
lret
dec
mov
aas
jle
inc
in
pop
add
inc
mov
mov
adc
and
pop
mov
iret
adc
enter
sub
xchg
sbb
fists
jo
out
dec
jmp
inc
xchg
in
jp
movsl
push
insb
mov
cltd
cmp
mov
xor
mov
shrl
adc
pop
test
adc
xchg
js
pop
adc
jp
and
out
shll
test
adc
sbb
test
push
mov
add
jp
jl
jmp
jecxz
adc
push
movlps
fimuls
lahf
int3
jl
call
inc
sarb
mov
loopne
push
stos
jg
and
xor
sbb
fwait
mov
sti
lods
arpl
adcb
inc
jg
insl
sub
icebp
call
sub
sbb
mov
add
cmpb
mov
mov
js
jl
rorl
pushw
sbb
repnz
and
pop
hlt
inc
pop
out
cmpsb
sub
pop
lods
outsl
mov
int
inc
cmpl
pop
jp
and
xlat
xor
push
outsb
cmp
mov
mov
cmp
nop
rolb
ja
and
pop
mov
outsl
push
mov
imul
dec
and
pop
push
lea
clc
push
sbb
icebp
sub
outsl
fbld
mov
sbb
popf
lds
mov
call
out
mov
fadd
push
clc
ret
das
mov
stos
push
add
dec
xchg
pushf
les
adc
sbb
push
and
dec
in
std
mov
jns
insl
dec
xchg
es
xchg
out
mov
sarb
pop
xchg
outsb
iret
jg
add
xor
pop
dec
mov
mov
loope
mov
push
and
push
mov
dec
stos
push
and
or
push
fwait
or
cmpsb
cmpsl
jae
test
jmp
mov
cmp
jmp
test
jbe
inc
loop
push
lret
mov
push
xor
popa
ss
dec
mov
arpl
in
ret
mov
enter
test
into
fnstenv
adc
call
aad
icebp
mov
lret
dec
or
jp
pop
shrl
ret
or
xlat
add
or
cmc
or
jae
insl
testb
inc
xchg
and
dec
gs
imul
hlt
test
inc
insl
or
in
jne
lds
jo
inc
pusha
xor
and
inc
jle
popf
adc
stos
jbe
push
add
jg
add
insl
jle
push
adc
decl
in
inc
ljmp
outsb
repz
mov
aam
mov
adc
call
and
in
sbbl
pushf
repnz
and
inc
fwait
sbb
mov
daa
addr16
sbb
mov
jecxz
hlt
mov
cli
pop
into
sub
scas
xor
cwtl
add
out
lods
push
dec
mov
ds
push
cmp
ljmp
mov
xchg
sbb
ljmp
push
test
mov
pusha
nop
fbstp
push
insb
out
jl
and
cmp
mov
cltd
mov
jecxz
jg
insb
or
das
leave
push
fildl
imul
and
aas
dec
ss
in
jg
jbe
mov
dec
notl
xchg
fwait
call
in
pop
push
xor
rcrb
scas
pop
xor
sub
int3
out
push
mov
jbe
aas
out
leave
inc
js
js
and
fstpt
jg
sbb
imul
aaa
xor
add
add
lcall
cld
dec
adc
je
mov
lahf
incl
mov
ffree
pop
addb
leave
cmp
pop
movsb
out
xlat
mov
cmp
lea
mov
js
xlat
add
mov
aad
or
jp
and
insb
mov
jo
ret
sbbb
xor
adc
mov
and
inc
lahf
insb
fidivl
stos
or
inc
dec
lret
imul
xchg
push
sbb
adc
add
dec
push
pop
enter
inc
inc
adc
fdivrs
jo
pop
pop
imul
cmp
test
aad
sbb
inc
mov
jecxz
or
rcrb
lcall
aam
mov
and
leave
push
mov
cmp
pusha
stos
jne
sbb
mov
test
mov
cmp
stos
push
pop
mov
inc
aaa
int3
or
mov
fadds
cwtl
repnz
lret
mov
scas
pop
lret
jno
or
sahf
ror
fistps
lcall
pop
rclb
sbb
out
insl
mov
out
push
mov
dec
loopne
cmpb
outsl
push
fisubl
xchg
dec
jl
sbb
rcl
leave
loop
jo
out
xor
in
push
jmp
out
xor
ror
cmp
push
daa
mov
xchg
fldt
jg
mov
fisttps
pop
cmp
push
sub
fistl
mov
xlat
jae
sbb
insb
aad
rolb
inc
loop
xor
dec
sahf
jbe
dec
lods
adc
mov
ficomps
pop
mov
jbe
pop
jns
pushf
fistps
icebp
xchg
jbe
pop
sarl
xor
std
xor
xor
repnz
add
jle
pop
lret
dec
lahf
dec
pop
lret
mov
mov
fs
dec
lret
cmp
leave
push
push
mov
sbb
dec
mov
pop
lods
fs
aas
rorb
dec
xchg
cmpb
test
sub
jmp
cmpsb
cmp
test
mov
fwait
inc
outsb
xchg
ss
mov
push
shll
iret
jmp
jle
dec
sub
seto
in
add
xor
mov
sahf
mov
imul
inc
push
shll
fldt
adc
lods
lret
ss
sbb
test
sub
add
into
add
ljmp
jne
inc
xor
push
xor
movl
jbe
jp
push
in
mov
addr16
lea
aam
cmp
adc
push
stc
inc
mov
fsubs
out
xor
mov
and
int3
bound
mov
mov
jmp
imul
adc
xchg
inc
repz
or
or
jno
fwait
loop
aad
lods
insl
lret
fldl
push
mov
jae
xor
nop
cld
inc
xchg
inc
ja
xor
jg
lods
ja
idivb
icebp
cwtl
xchg
cmp
popf
sbb
push
cmp
adc
pop
pop
fmuls
sbb
mov
lea
imul
cmp
repnz
pop
xorb
adc
scas
adc
inc
jae
xor
cmpsb
lret
call
jne
sub
repz
and
dec
in
fs
cli
and
stos
scas
xor
aaa
pop
push
cs
popf
fisubl
sub
or
and
xor
lret
aas
or
push
sub
bound
fucomi
sbb
or
cmpsb
adc
int
rclb
pop
xor
push
mov
xchg
lret
xchg
jecxz
dec
imull
push
inc
cmp
sbb
mov
jl
sbb
xor
pusha
inc
dec
cwtl
rorl
aad
mov
dec
push
push
xchg
push
mov
inc
fisubs
add
cmp
ljmp
jbe
xchg
mov
int3
es
push
outsl
jl
fidivrl
ret
inc
shrl
idivb
icebp
adc
out
clc
dec
insb
push
inc
push
mov
pushf
shlb
xchg
push
mov
shrd
dec
popf
xchg
rcr
jg
add
lret
jp
push
xor
lret
inc
js
pop
mov
xchg
push
int3
call
out
lods
jo
or
jmp
xchg
adc
mov
leave
mov
sub
leave
lods
add
xor
call
dec
jg
mov
xor
inc
clc
hlt
out
mov
out
dec
mov
clc
test
pop
rolb
nop
iret
or
test
jle
inc
fisubrl
lret
mov
or
jno
and
lahf
sbb
add
xor
flds
pop
mov
out
lds
mov
stos
xor
aaa
or
dec
adc
adc
mov
add
push
or
adc
adc
adc
cmp
dec
je
mov
iret
mov
push
js
es
xor
inc
test
inc
aas
leave
cltd
or
stos
dec
mov
inc
mov
jnp
add
xchg
imul
xor
lahf
int
pop
sarb
inc
sbb
add
pop
jnp
push
jo
mov
xor
cmp
add
mov
fcom
cmp
lret
xor
sbb
push
and
xor
pop
sbb
xorl
gs
addr16
sub
test
shlb
cld
nop
sub
sbb
mov
sbb
xor
dec
sub
pop
lods
mov
ret
js
add
cmpsl
mov
mov
jne
xchg
aam
test
jno
inc
pop
movsl
scas
pop
pop
pop
fbstp
arpl
ret
xor
cli
andb
fsts
xor
sbb
push
and
jbe
push
inc
dec
cmp
cltd
mov
push
stos
test
lahf
push
inc
clc
clc
lahf
dec
inc
add
bnd
pop
fldl
dec
imul
push
add
jae
hlt
test
inc
leave
pop
ret
jnp
mov
fildl
push
push
mov
sbb
orb
repz
cmp
out
repnz
adcl
jmp
cmp
stos
and
pop
call
dec
out
popa
mov
inc
xchg
and
mov
and
aad
jbe
and
movsb
xor
test
paddusw
jnp
cmp
push
jle
cmp
mov
imul
push
nop
cmpb
adc
aaa
stos
into
loope
stos
dec
cli
in
pop
mov
pop
stc
sbb
xorb
aad
lods
cmp
test
in
aaa
inc
jne
jmp
cmc
movsb
jmp
mov
int
ror
add
mov
and
out
inc
movsl
out
imul
iret
dec
fnstcw
rcrl
push
mov
in
xchg
bound
xor
or
sbb
dec
addb
sbb
mov
addl
jne
or
mov
js
incl
ret
out
jbe
fcmovbe
cmp
cmpsl
inc
mov
cmpsb
pop
mov
dec
mov
mov
xor
std
sub
shll
in
cmp
enter
mov
jmp
mov
jmp
in
xchg
jecxz
fsubrs
pop
pop
inc
add
pusha
in
push
jns
lods
inc
fadd
add
fsubl
lds
cmc
loopne
pop
cmpsb
out
push
adc
aas
lock
push
mov
mov
clc
sahf
fcmove
jo
cmpsl
ret
ljmp
pop
pusha
jnp
rcll
jg
in
dec
lcall
push
cld
cmc
imul
or
mov
xchg
mov
jno
in
add
sbbb
call
cwtl
adc
pop
lahf
aad
jne
clc
shl
in
aad
in
aam
cltd
sarb
lcall
sbbb
loopne
out
xchg
jg
test
pop
cmp
sahf
addl
mov
lret
cld
or
shll
das
cmp
daa
xor
test
loopne
pop
sbb
fsubrs
adc
xchg
das
add
pop
and
xchg
int3
decb
jle
mov
adc
rolb
pop
mov
add
add
lods
iret
mov
int
insl
and
lahf
xchg
dec
cld
iret
nop
inc
xchg
in
movsb
xor
add
mov
mov
ret
out
jp
jle
and
in
mov
cmp
xor
xor
cmp
dec
addr16
push
xchg
adc
adc
aaa
jg
les
xchg
xchg
sbb
pop
jl
sbb
mov
inc
stos
sub
jg
mov
movsb
cli
test
inc
mov
jne
es
jge
jl
dec
xchg
sbb
mov
or
loop
push
fisubrl
fdivrs
add
inc
mov
jbe
insl
aad
and
jns
aad
test
sub
inc
enter
shll
dec
mov
je
sbb
fadds
js
fistpl
sbb
mov
cmp
mov
and
sti
jbe
pop
jp
jne
cmc
mov
xchg
lcall
xchg
xchg
scas
rorb
jl
mov
insb
adc
mov
dec
aaa
iret
push
xchg
add
ds
test
scas
nop
sbb
les
addr16
clc
xor
sti
pop
inc
ss
jbe
mov
imul
out
mov
add
inc
movsl
shlb
mov
lods
push
sub
mov
pushf
mov
inc
adc
fs
cmpsl
rcrl
mov
fcomi
mov
add
add
adc
xlat
addr16
dec
push
lret
pop
add
insl
or
sbb
sbb
push
mov
faddl
mov
push
xchg
or
and
adc
sub
arpl
cld
sahf
cmp
add
and
mov
add
loopne
fstps
cmp
mov
push
fsubrs
sbb
out
jl
pop
in
adc
movsb
lret
ljmp
dec
cmp
xlat
subl
mov
jbe
pop
outsb
push
mul
mov
lcall
mov
xchg
andb
jae
mov
test
jl
rorb
jbe
push
cmp
cli
mov
jmp
lret
push
fbld
inc
fisttps
jle
leave
test
sbb
call
cmc
sti
lods
aam
mov
leave
mov
stos
sbb
int3
pop
lea
inc
mov
pop
or
call
pop
into
in
jne
aaa
and
ds
or
adc
jb
pop
xchg
pop
xchg
inc
cmc
clc
sub
int
add
add
push
cmp
je
pop
lds
adc
push
incl
adc
fsts
test
lret
mov
leave
xor
cmp
lods
inc
ret
and
cmp
mov
xor
outsb
cmp
and
jg
sbb
jecxz
leave
imul
outsl
dec
push
mov
call
inc
shll
in
adc
push
inc
xor
pop
dec
out
jae
std
pop
test
jo
jp
ret
xchg
int
dec
sbb
test
das
sub
insb
scas
cmpsl
xor
jns
adcl
cmp
pop
xchg
subl
gs
jecxz
push
mov
mov
lret
rcll
mov
movsl
mov
inc
fstpl
stc
test
fdivs
not
xor
push
out
fimull
int3
pop
jmp
in
push
push
popf
notl
hlt
jp
push
mov
add
lods
and
dec
dec
imul
lods
insb
inc
rclb
cwtl
ds
pop
inc
jecxz
dec
fidivl
cmp
and
lock
add
jns
jp
loope
jbe
nop
idivl
mov
dec
sbb
cmp
fstpl
push
movsl
fstl
negb
pushf
test
dec
inc
sub
jns
add
lea
xchg
or
fwait
rorl
nop
dec
xchg
mov
mov
mov
test
aad
stc
push
mov
fistpll
fcoml
outsl
xor
and
lods
adc
mov
jl
clc
loope
enter
arpl
xor
push
xor
jns
and
push
xor
test
xor
mov
pop
leave
in
cmp
fwait
mov
fisubrs
loope
push
fsub
fisubl
pop
in
add
dec
ja
fs
es
or
jp
mov
xchg
dec
out
and
sbb
push
popa
es
xchg
sbb
xchg
mov
cld
mov
mov
sub
in
cli
jno
or
push
add
stc
jmp
mov
push
or
shr
pop
xor
loopne
cmp
shlb
mov
test
add
sbb
push
mov
mov
dec
insl
ss
or
js
rcrb
pushf
dec
xor
iret
push
leave
lcall
ljmp
jno
movsl
mov
or
aas
mov
jnp
push
pop
adc
test
xor
ds
jbe
lea
jns
push
std
mov
rcrl
add
outsl
lea
pop
push
inc
adc
repz
sarb
mov
jbe
insl
cs
or
cmpsl
pop
outsb
mov
cltd
xchg
inc
xchg
mov
sbb
testl
push
push
cmpb
inc
sbb
mov
lret
pop
sahf
and
test
push
xor
arpl
or
adc
scas
hlt
test
push
int
cltd
rolb
or
mov
xor
push
push
push
and
jge
inc
xchg
mov
pop
lea
sbb
add
xor
xor
fptan
inc
sar
fcomi
jns
push
repz
cvtps2pi
ret
jns
sub
or
loopne
je
push
addr16
push
iret
sahf
addr16
push
push
sbb
outsb
adc
mov
sub
lahf
aam
push
sub
stc
cs
xor
sbb
xchg
jl
js
ljmp
xchg
mov
jno
loopne
into
mov
inc
fidivrl
pop
or
fldcw
pusha
jae
dec
pop
pushf
xor
sub
xchg
cmp
mov
cmp
dec
rcrl
push
dec
or
fidivrl
mull
mov
fistpll
and
xchg
inc
daa
mov
outsl
cmp
dec
repnz
dec
js
push
rorb
fistl
ljmp
xlat
adc
adcb
add
mov
fsubrs
fbld
push
push
mov
sub
repnz
mov
aam
fnstsw
shlb
mov
jo
bound
fisttps
jp
movsl
aas
test
xchg
jne
je
mov
dec
adc
mov
mov
mov
add
leave
movsb
or
push
inc
sbb
push
addr16
scas
fdivl
jne
pusha
jl
mov
inc
mov
loope
pop
sti
mov
icebp
loopne
and
mov
cmp
mov
adc
mov
cmp
push
loop
push
fsubrs
dec
outsl
test
mov
xlat
jge
divb
movsl
push
addr16
mov
test
and
dec
stos
test
les
adc
adc
inc
sbb
test
cltd
rol
cmpsb
pop
dec
xchg
push
in
test
gs
stos
sbb
sarl
rcll
lcall
cmc
mov
lock
aaa
jbe
xchg
outsl
out
andb
inc
push
leave
dec
mov
leave
outsb
jge
jl
fistpll
sub
ds
xor
mov
fisubs
pop
pop
push
das
mov
negb
mov
fwait
jne
mov
sahf
fsubrl
mov
dec
fisttpl
test
popf
adc
xor
xor
int3
dec
add
or
mov
or
pop
mov
mov
mov
or
into
and
cmp
or
sbb
and
cmp
xchg
mov
fildll
jno
lahf
call
xor
mov
sbb
ret
push
add
popa
inc
dec
add
jp
out
hlt
ss
cmp
cmp
xor
push
test
xchg
cmpsb
mov
push
cmp
jae
mov
test
test
push
push
pop
adc
leave
push
mov
test
cli
out
nop
outsl
cmp
jne
mov
dec
lods
pop
xor
fstp
pushf
stos
sub
mov
imul
lds
and
fstps
mov
jge
jg
cmpsl
jo
push
insb
stc
xor
or
in
in
es
xor
insb
movsl
adc
lahf
xor
ljmp
lods
add
mov
test
mov
ja
and
jle
push
pop
sub
test
insl
mov
adc
mov
dec
pop
mov
mov
fdivrs
add
fbld
push
push
add
adc
jmp
add
adc
daa
je
inc
enter
fcoms
xor
cmp
scas
mov
subl
lahf
cmc
sahf
in
iret
jbe
cwtl
or
gs
or
out
inc
addr16
mov
lret
cmp
stos
das
mov
test
xor
aad
sahf
out
xchg
cmp
sahf
testl
or
mov
cmp
or
popa
dec
xchg
lret
stc
jge
shlb
mov
roll
mov
test
push
adc
jle
add
pusha
stos
sub
pushf
sarl
out
cmp
adc
jns
shl
jno
js
mov
cltd
pop
repnz
sbb
add
mov
scas
mov
and
es
cltd
outsl
into
pushf
push
shlb
aad
xor
in
add
xor
std
jp
lret
mov
sbb
xlat
jl
std
dec
push
pop
test
jl
sub
stos
push
mov
push
jns
lcall
seto
fisttpll
cmp
test
gs
jbe
xchg
pop
cmpsb
mov
repz
and
fadd
out
cli
lret
cmp
mov
in
into
pop
push
cmp
xchg
mov
cmpb
icebp
fistl
pop
inc
pop
fisubrl
lock
out
out
sti
aas
and
mov
push
jp
cmc
sti
in
popa
ret
and
mov
test
prefetch
pop
aaa
out
scas
pop
shlb
test
iret
aam
decb
or
ret
or
rcrl
sti
lahf
imul
mov
imul
jmp
in
pop
out
aas
xor
call
dec
or
int
scas
les
daa
gs
daa
add
cmp
push
jnp
jb
pusha
adc
inc
xor
sub
xchg
flds
loopne
dec
mov
lock
lds
lcall
inc
pop
mov
sbb
pop
sub
sub
pop
mov
jecxz
jbe
rclb
rcr
pop
jae
lods
xor
inc
or
dec
push
pushl
jnp,pt
jne
xlat
arpl
pop
cld
xchg
cmp
ret
mov
call
out
jge
mov
push
and
xor
fildl
sub
sbb
imul
daa
cmp
repnz
imul
test
pop
or
push
clc
sub
mov
adc
pop
ja
ret
jge
das
daa
fsubl
add
add
inc
shll
mov
scas
jnp
inc
cs
adc
imul
aam
adc
xchg
icebp
ljmp
add
cmp
adcb
rorb
xchg
rcll
sub
je
xchg
fmul
cs
pop
das
nop
xchg
aaa
pop
push
cltd
lods
cmp
mov
pop
mov
inc
jl
out
cmpsl
xchg
test
icebp
test
loopne
adc
in
xlat
cld
jne
mov
sub
not
cwtl
xchg
fnsave
popf
lock
and
mov
pop
out
icebp
mov
pop
jl
or
les
xlat
xor
aaa
and
mov
in
mov
mov
sbb
jae
xor
int3
mov
imul
xor
mov
xchg
pop
mov
in
cmp
mov
or
test
jne
lret
stc
int3
add
xor
jge
addb
shrl
inc
xchg
jl
lods
loope
mov
in
push
movsb
and
jl
inc
stos
cld
inc
jb
xor
arpl
fs
je
int3
pushw
or
imul
inc
les
jo
lods
movsl
or
inc
and
jae
insb
mov
ret
mov
and
dec
cmpsl
cltd
ljmp
sbb
mov
outsl
out
aas
sub
fdivr
jge
leave
sub
add
imul
mov
xor
loop
sbb
cmp
pushf
fs
pop
xchg
ret
orl
fwait
aas
fistpl
add
pop
xchg
adc
stc
aaa
xor
mov
lock
mov
js
jno
mov
ljmp
ss
cmp
xor
cmpsl
cmp
cmp
lahf
push
dec
or
cmp
pop
adc
ret
sbb
fisttps
mov
rorb
imul
xchg
lret
inc
inc
pop
mov
inc
adc
fdivrl
fwait
push
mov
cmp
push
out
jl
and
pop
sar
inc
inc
pop
inc
das
mov
arpl
push
negb
xchg
jno,pn
pop
ficoms
inc
in
or
icebp
sub
and
sub
ja
cmp
mov
jb
js
jp
add
ss
bound
fsts
mov
add
push
pop
xor
out
scas
mov
aam
imul
repz
jb
popa
jmp
jno
and
xor
and
adc
rcl
scas
fistpll
adc
fdivl
inc
cmp
adc
push
mov
in
or
ja
and
ds
orb
mov
sbb
cmp
cmp
dec
dec
xchg
int
mov
enter
and
das
push
daa
or
in
cltd
test
cld
push
sbb
mov
out
dec
sub
sub
mov
icebp
ljmp
inc
jge
jmp
sbb
lds
sbb
lret
ret
iret
jo
sbb
ss
sti
mov
movsb
repnz
arpl
mov
jl
or
fwait
sar
mov
xlat
push
inc
push
ror
out
into
inc
lods
shll
int
dec
test
aad
sbb
sbb
mov
aad
and
test
ret
enter
adc
jecxz
lea
pop
pop
fildll
or
sbb
sti
jns
jno
pop
adc
or
ja
sub
push
outsb
push
jns
xchg
mov
daa
cwtl
scas
clc
mov
pop
outsl
nop
xchg
mov
add
mov
or
inc
data16
ficoms
shll
and
aaa
mov
and
jbe
ss
xchg
rcr
inc
popf
or
xchg
inc
sbbl
mov
stos
inc
data16
adc
jle
flds
mov
fidivl
jmp
push
adc
sbb
inc
sbb
mov
data16
cmpsl
js
pop
sbb
push
xchg
xor
scas
add
add
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
jmp
int
stos
ljmpw
dec
jnp
out
fs
inc
jl
sbb
enter
dec
or
jmp
loope
dec
xor
pop
mov
fisubs
mov
insb
movsl
xchg
dec
stos
into
loop
fldl
ss
add
xchg
cmp
push
jo
push
cmc
pop
or
mov
jae
fdiv
add
js
and
xchg
ret
shrb
adc
pop
shll
mov
mov
mov
dec
adc
cmpsb
std
lret
ret
in
call
adc
roll
push
in
fwait
stos
xchg
ljmp
push
pop
adc
jp
cmp
mull
addb
or
mov
or
out
mov
and
subb
mov
jl
xchg
push
in
xor
pop
popa
aad
adc
call
or
mov
mov
dec
and
outsl
sub
pop
pop
pop
iret
incl
jmp
movsb
cmp
lcall
pop
repz
fnsave
fists
outsb
lcall
xor
mov
push
pop
out
mov
jno
dec
into
int3
jp
mov
jno
push
rol
scas
jle
cwtl
pop
lds
cmp
adc
mov
push
and
mov
stos
movsl
push
shl
ja
scas
cmp
inc
cmc
lret
ss
dec
push
lock
push
xor
add
pop
rcrb
int3
clc
out
inc
adc
xor
call
repz
ror
dec
pop
nop
push
enter
jge
jno
lret
or
sbb
fistps
ret
into
pop
jecxz
stos
mov
cmc
or
add
mov
cmc
shlb
pushf
mov
and
add
push
sub
loope
cmpsl
in
mov
sbb
pushf
dec
fwait
ja
loope
orl
push
mov
icebp
inc
jg
sar
inc
scas
mov
in
ret
cmpsb
and
mov
mov
add
loope
mov
adc
xchg
dec
in
push
fs
push
or
imul
and
lcall
ss
cmp
imul
xor
ss
lods
cmpsb
test
call
xor
gs
loope
pop
sbb
or
pop
fistps
xchg
jbe
daa
pop
cmpsb
out
je
sbbb
mov
cmp
or
jmp
push
dec
sub
pop
adc
or
adc
mov
mov
push
pusha
sub
std
addl
jmp
repz
jle
cld
test
mov
xor
incb
in
add
adc
xor
adc
push
enter
jp
mov
sub
jbe
imul
cmp
int3
aam
ja
dec
push
int3
xchg
ret
xor
fsubl
cmp
fldl
sub
mov
lret
mov
rcl
repnz
sub
push
outsb
add
xlat
push
fnsave
lock
lds
sub
test
pop
out
pop
das
cltd
and
aad
mov
mov
add
repnz
lret
movb
test
xchg
sbbl
ret
or
sbb
mov
mov
push
push
mov
xorps
pop
cmp
xchg
mov
cmpsb
out
push
les
rcl
or
sub
stc
cld
loop
out
sbb
push
pop
jo
es
jl
iret
lds
dec
xchg
notb
mov
mov
pop
adc
inc
in
adc
div
add
fldcw
syscall
aas
popl
push
jno
push
push
mov
fistl
mov
mov
in
ds
js
addr16
mov
sbb
loopne
sbb
std
mov
fidivrl
ja
xchg
pop
shlb
xchg
xor
mov
mov
lcall
icebp
mov
jg
ss
xchg
movl
flds
cltd
push
xor
insl
cs
inc
sub
roll
movb
xchg
fldl
out
mov
in
je
bound
add
jmp
sti
aad
lret
xor
movsb
lret
dec
jb
xchg
jno
push
in
push
arpl
xor
mov
dec
push
push
push
jo
xchg
rcll
mov
ljmp
add
sub
call
std
in
je
cmp
daa
rclb
jge
xchg
aaa
mov
icebp
or
mov
or
push
pop
push
lock
jmp
fwait
cmp
ja
jb
jle
pop
and
lods
dec
xchg
mov
js
sub
loope
mov
test
pushf
popf
sub
shlb
scas
and
pop
xor
into
dec
xor
and
dec
sbb
mov
leave
push
inc
adc
push
fidivs
xlat
jmp
hlt
enter
mov
pop
in
or
cltd
push
cmp
sarl
sbb
repnz
inc
xor
cvtps2pi
sbb
sbb
pop
mov
dec
push
pop
dec
push
cli
sbb
and
sahf
cld
lret
mov
fadd
fcoml
das
add
mov
imul
jo
cwtl
sti
sar
xor
mov
adc
loopne
push
mov
adc
int
mov
dec
scas
orb
cmp
into
scas
fcomip
lret
jecxz
xchg
cmp
pop
push
icebp
push
jmp
test
sub
mov
or
jmp
data16
cmp
adc
aad
in
gs
and
pop
popf
jne
adc
sub
mov
xchg
enter
pop
aaa
pop
add
lret
cmp
push
push
js
es
aaa
test
subb
push
mov
rcll
inc
and
cmpsb
loop
adc
gs
fwait
rorl
sbbl
and
sbb
lret
hlt
adc
pushf
inc
inc
dec
pop
ret
push
dec
std
lea
sbbb
rcrl
push
or
orb
dec
rep
push
fistl
mov
ja
xchg
int
jecxz
sarb
inc
out
mov
fst
sahf
data16
pushf
leave
jno
xor
push
insl
inc
jl
les
mov
or
mov
cmp
mov
xor
sti
je
inc
addr16
aad
mov
cmp
push
jg
fwait
cs
test
sbb
inc
clc
insl
dec
cmpsl
xchg
cli
les
push
jge
das
xor
shll
test
jp
push
push
pop
shr
movsl
test
jge
ficompl
popa
jecxz
mov
xor
ja
and
roll
dec
and
jnp
out
arpl
stos
lret
and
lahf
cmp
popa
sub
clc
mull
dec
xchg
adc
andb
inc
xchg
sub
std
sub
flds
pop
sub
jns
pop
lods
sub
sahf
pop
add
push
xor
jbe
jle
or
fwait
jns
test
subl
cwtl
xchg
bound
rcl
movsl
xrelease
inc
mov
cmpsl
pop
test
iret
das
imul
or
out
lcall
loope
ret
in
testl
in
test
jae
mov
loop
dec
psrld
sub
std
mov
or
sub
or
jp
jmp
insl
mov
jbe
mov
fcmovnbe
fimull
pusha
cmp
fnstcw
fwait
cmpsl
lea
jg
push
test
loop
or
daa
lock
movsb
xchg
scas
xchg
jne
je
push
or
jle
push
fidivs
xor
xor
add
mov
cmp
xchg
dec
jmp
out
repz
lret
or
jecxz
dec
sub
sub
repnz
test
out
jo
sub
int3
mov
into
gs
cmpsb
out
and
subps
adc
in
stos
xchg
dec
jmp
and
lret
adc
repz
and
or
in
imul
or
add
outsl
ds
dec
or
sbb
cmpsb
int
mov
add
pop
push
jbe
cmp
mov
and
xchg
push
lcall
sbb
sahf
jbe
shl
sbb
xchg
jne
add
cmp
xor
out
cltd
xchg
xchg
int3
arpl
imul
in
xlat
mov
sub
and
das
inc
gs
testb
jb
push
imul
and
jbe
shll
loopne
daa
loopne
fwait
ret
ds
mov
imul
fistpll
push
adc
xorl
aas
dec
es
mov
popa
sarl
jl
les
sarb
idivb
popa
fistpl
sub
cmp
aam
lahf
dec
xchg
out
cmp
aad
push
add
inc
lcall
pop
cwtl
div
roll
push
jb
jp
scas
adc
mov
rcrb
shrb
sub
mov
mov
jmp
xchg
int3
sbb
mov
pop
dec
les
fwait
mov
pop
add
inc
sahf
pop
stos
ret
in
or
push
jnp
fldt
mov
ret
ds
fmull
inc
dec
mov
mov
loope
dec
mov
mov
rclb
test
add
in
daa
sti
repz
popf
pop
cmpsl
push
inc
cmp
nop
cld
mov
cmp
mov
cld
test
jmp
mov
aaa
mov
popf
lcall
and
leave
mov
sub
mov
xchg
push
movsb
imul
jecxz
push
insb
mov
jecxz
mov
aam
push
lcall
pop
push
pop
mov
lods
pop
cli
cmpsb
iret
pushf
cs
fwait
jne
mov
push
or
ja
leave
sbb
pop
sti
lods
stos
popf
stos
add
enter
and
outsl
pop
in
sbb
sub
xchg
imul
mov
out
dec
jns
test
movsb
fwait
mov
add
pop
lds
insb
cli
mov
jae
mov
aaa
inc
xchg
lods
out
out
mov
xlat
shll
aas
stos
mov
mov
push
lods
xchg
hlt
adc
arpl
bound
aas
mov
jmp
jp
andl
lret
cmpsl
cmp
in
js
push
mov
xchg
jg
jo
ds
mov
movsl
nop
jmp
out
or
xor
mov
dec
stos
dec
js
pop
mov
sysenter
loope
jecxz
into
imul
and
xchg
fmulp
xchg
push
mov
jne
mov
inc
jecxz
pslld
fs
inc
push
push
jo
cmpsl
shlb
sub
out
mov
pop
ds
inc
scas
adc
cmp
into
cli
pop
fwait
inc
mov
sbb
push
loop
clc
aad
mov
lods
fwait
xchg
dec
inc
push
out
mov
mov
adc
pop
jae
loop
mov
gs
adc
mov
xchg
xor
ror
cmp
ds
fnstcw
jmp
aas
jo
push
pop
lods
add
mov
cmp
in
out
mov
jo
mov
jno
nop
and
and
in
shrl
fistps
mov
repz
movsl
and
pushf
fmulp
lret
sub
xor
cli
leave
divl
push
push
arpl
push
out
sbb
movsl
aad
push
popa
and
shlb
mov
in
test
imul
fs
nop
xor
rcll
xor
adc
push
std
shl
and
ss
iret
ds
mov
push
js
jp
sbb
sub
sahf
push
mov
dec
mov
jno
idivb
sbb
lds
push
add
out
movsb
ljmp
add
xchg
aas
push
or
adc
jl
int3
repz
mov
mov
incb
sub
call
add
leave
adc
or
jle
pop
jne
aas
cmp
int
test
lahf
jnp
lahf
movsb
mov
xor
jnp
loope
jmp
pop
call
pop
rolb
dec
or
inc
iret
fldcw
lret
cwtl
and
xchg
xchg
movsb
mov
shrl
xchg
dec
out
adc
and
or
in
lea
ds
les
sti
pop
cld
xchg
divl
mov
sub
mov
cmp
iret
adc
jmp
sub
std
adc
xorb
push
bound
cmp
int
addr16
adc
repz
lret
lahf
mov
xor
inc
out
jo
and
insb
pop
add
or
clc
outsl
xor
mov
divl
jbe
scas
enter
adc
sti
adc
loop
jae
js
int3
cli
insb
xchg
sub
stos
mov
mov
fstps
jp
mov
lods
cmp
adc
jg
imul
adc
add
lret
xchg
cmpb
rclb
lods
or
add
pop
bnd
jb
out
xchg
idivb
sbb
push
inc
shlb
mov
cmp
ret
mov
jnp
leave
les
dec
fsubl
fs
push
fwait
cmc
pop
sbb
mov
outsb
fs
cld
out
sysenter
fdivrl
ja
xchg
outsb
test
xchg
iret
pop
dec
sub
notrack
xor
neg
mov
andl
sbb
push
shll
out
nop
and
or
sbb
cmpsl
jnp
or
sub
int3
out
pop
sbb
or
rdtsc
data16
das
inc
inc
sbb
shrl
mov
jbe
enter
mov
adc
or
lret
sub
xlat
sbb
jl
add
into
add
loop
jne
loopne
test
out
test
mov
push
mov
jne
fdivrp
mov
into
mov
pop
data16
lahf
in
shl
add
fwait
cmpsb
pushf
pop
mov
push
data16
xchg
jmp
fs
inc
pop
ret
cld
js
pop
jg
inc
dec
repnz
xchg
fwait
jl
adc
sub
xor
adc
stos
imul
inc
jg
pop
xchg
xor
gs
clc
and
push
and
inc
ret
imul
inc
or
xor
inc
rolb
add
ja
push
push
jae
fildll
or
sbb
std
mov
mov
inc
pop
lahf
hlt
lret
inc
test
mov
movsb
push
add
outsb
jnp
add
cwtl
es
fsubs
or
pop
popa
push
call
push
mov
or
sub
sub
scas
into
sub
into
movl
mov
jg
divb
lret
cmp
mov
pmulhrw
or
xchg
fwait
cltd
lret
aad
dec
xchg
daa
cmp
sub
mov
mov
adc
out
lcall
mov
dec
ret
je
sub
icebp
repnz
cmp
ret
mov
dec
and
mov
mov
mov
out
hlt
push
push
cmp
mov
pop
int
jne
clc
sbb
inc
jnp
mov
ljmp
mov
cwtl
rcrl
movsl
pop
pop
add
and
adc
xchg
adc
das
lds
sbb
call
mov
xchg
pop
sub
les
orl
in
cmp
call
mov
cmp
mov
xor
sbb
or
pop
add
lods
xchg
mov
ficompl
jl
fisubrs
jl
negb
in
pop
mov
addr16
call
cli
cmpb
adc
scas
jp
ljmp
cld
xchg
or
jbe
lods
push
dec
inc
mov
push
ficompl
xchg
mov
cli
jae
cltd
fwait
in
jb
push
mov
xor
pop
push
stos
fisttps
cld
jg
mov
add
dec
leave
sbbl
xor
insl
stos
in
daa
adc
adc
jae
sub
fsubrl
movsl
pop
mov
mov
jmp
or
das
and
or
shrl
repz
stos
cmpsl
adc
leave
jb
fdivl
lods
jp
push
ficoms
scas
sub
fcoms
in
aad
insl
fisttps
sahf
and
jb
lods
dec
jne
push
xchg
stos
cmp
lret
sarl
scas
lods
jl
loop
rcrb
mov
xchg
jp
mov
lds
jle
or
mov
inc
sbbl
pop
in
daa
push
movsb
pop
sub
add
and
imul
call
mov
scas
rcrl
aas
mov
cmp
jbe
call
pop
push
hlt
pop
inc
and
xchg
jmp
stos
push
mov
imul
and
mov
push
pop
mov
lret
lcall
sub
sbb
xorb
dec
std
in
sahf
dec
inc
sbb
push
idivb
lahf
sbb
dec
xchg
daa
xchg
sub
pop
call
push
fistl
mov
mov
sub
pusha
jge
jle
xchg
or
movsl
sbb
inc
ljmp
test
loop
lea
popa
call
xor
xor
jecxz
lret
out
das
js
sbb
push
mov
les
sbb
fdivrs
pop
imul
push
xchg
scas
nop
or
adc
jg
dec
sub
dec
mov
ret
flds
ss
mov
enter
lods
mov
lret
rorl
xchg
rcr
xchg
out
adc
fisubs
xor
es
mov
xorb
dec
into
pusha
in
popf
jne
dec
xchg
mov
fisubs
stos
call
inc
in
sbb
out
inc
je
js
jg
leave
adcl
dec
imul
xor
cmp
push
pop
mov
mov
nop
jbe
push
insb
jg
ja
jle
out
test
pop
jl
popf
or
movsl
adc
xor
icebp
and
jns
adc
shll
rorb
mov
mov
lds
call
mov
jo
dec
xchg
dec
popa
jecxz
hlt
imul
cmp
int3
fistl
aad
fwait
push
ret
mov
lcall
cmp
mov
loope
xchg
jno
js
and
xchg
jmp
icebp
aaa
sub
shrb
sbb
ror
add
lea
cltd
fisubl
hlt
cmc
popl
dec
fwait
mov
mov
bound
loop
shl
stos
dec
int3
in
cmp
mov
mov
xchg
out
hlt
pop
mov
xor
mov
inc
or
movsb
mov
lcall
cltd
shlb
movsl
pop
insb
inc
cli
clc
jno
pop
outsb
pop
ja
jecxz
subb
aam
fimull
cmp
fmul
cmpsl
scas
cmp
addr16
jns
push
sbb
in
xchg
fisttps
mov
cmp
mov
clc
xchg
nop
mov
mov
mov
cmp
bound
outsl
xor
cmc
mov
xchg
push
and
in
mov
sbb
in
pop
pushf
pop
out
jle
jp
movsl
scas
mov
insl
out
gs
mov
mov
sbb
push
hlt
out
cld
ja
add
mov
or
ret
jge
sub
inc
int3
cmpsl
faddl
fnsave
push
in
pop
in
les
outsl
mov
mov
int
addr16
clc
paddd
dec
sbb
mov
push
or
inc
jecxz
mov
das
mov
sahf
in
jmp
mov
sub
pop
cmp
mov
cmovbe
sub
xor
or
xor
and
mov
sbb
hlt
stos
cmp
pop
sub
jecxz
mov
pop
fprem
test
sbb
inc
push
pop
jb
mov
test
int
sbb
mov
mov
sbb
mov
mov
sti
int3
sbbl
aad
fs
movsb
or
adc
jmp
inc
pop
push
inc
popf
nop
jmp
lret
jle
bound
inc
sbb
add
dec
outsl
or
iret
dec
xor
dec
hlt
in
fs
mov
push
jo
in
cmpsl
insl
arpl
lcall
gs
jp
mov
cmp
iret
insb
enter
test
rorb
fiadds
in
mov
inc
out
pop
push
popf
jae
ljmp
imulb
xor
je
sub
ds
adc
orb
ljmp
jp
hlt
inc
lcall
cmp
add
mov
adc
lods
cmp
dec
mov
cmp
lds
imul
xchg
push
push
cwtl
fistpll
jp
or
mov
push
push
or
add
fstl
and
push
lahf
roll
scas
mov
stos
sub
add
fistl
leave
dec
sbb
stc
pusha
push
gs
roll
stos
mov
and
mov
mov
adc
aam
faddp
or
in
push
aam
icebp
clc
sub
xor
mov
dec
mov
icebp
adc
mov
mov
loop
mov
stos
mov
and
lods
xchg
pop
mov
popa
cmp
sti
inc
xchg
js,pn
pop
add
sbb
or
pushf
pop
scas
cmp
pushf
in
pushf
in
negl
xchg
stos
fs
loop
xor
out
in
loop
lods
xor
sbb
stc
cmpsl
push
sbb
or
mov
sub
jge
mov
frstor
dec
or
or
loopne
aad
imul
cmp
mov
jae
xorl
cmp
sub
scas
lods
mov
adc
dec
push
stos
push
ja
fildll
out
pop
jne
aam
push
or
lock
fistl
test
pop
imul
call
movd
dec
jno
pop
cld
ret
adc
mov
pusha
aas
iret
lcall
int
jae
imul
mov
test
insb
popa
test
test
and
jnp
push
add
pop
push
cltd
and
imul
lea
aas
cmp
scas
adc
orl
loop
test
adc
loope
movsl
mov
or
rcr
cli
inc
cmc
sete
repnz
dec
pusha
lds
push
into
pop
mov
lcall
mov
ja
push
test
enter
and
cmc
arpl
es
jge
popf
add
lock
cmpsl
movsl
sub
xor
mov
dec
xor
mov
imul
pushf
or
ljmp
repz
aam
mov
pop
mull
sub
jp
orb
jge
mov
test
xchg
fsubrp
bound
ret
push
in
push
movsl
pop
jl
pop
xor
jns
inc
mov
mov
jle
add
fs
jno
pop
cmp
cmp
iret
iret
cs
cmp
dec
imul
repz
push
and
inc
cs
lahf
nop
pop
mov
push
cmp
mov
sbb
jmp
mov
andb
and
repz
xor
mov
popa
xchg
xchg
sbb
cmc
sahf
jmp
mov
adc
or
fsts
ret
arpl
jne
je
inc
or
sub
mov
scas
jne
inc
ja
and
and
in
xchg
rorl
mov
ja
push
push
out
adc
insb
inc
ret
push
fcmovb
shrb
lahf
pop
testl
and
faddl
shlb
and
or
and
rclb
sbb
sbb
les
insb
popa
pop
mull
inc
adc
push
loop
sbb
push
cltd
cmp
ss
mov
out
rcrl
sbb
fwait
cmp
fs
add
xchg
fsts
or
stos
shrb
xchg
ss
cs
push
jae,pn
test
push
mov
out
clc
sarl
or
mov
mov
sub
xor
insl
mov
in
pushf
lret
pop
icebp
sbb
sti
or
jae
jmp
or
push
jae
mov
lea
lret
cmc
repz
sbb
add
add
sub
sbb
stos
jecxz
in
jno
add
cs
cmp
dec
mov
cmpsl
mov
sbb
jnp
add
ret
fdivs
pop
mov
mov
inc
add
repnz
aad
adc
dec
xlat
cmc
jle
cmp
xchg
xchg
mov
pop
jae
pop
cmc
cmpsl
cwtl
jle
pop
and
xor
cld
jecxz
jb
in
push
test
imulb
sbb
cwtl
nop
adc
shlb
push
fs
das
cmp
push
push
movsb
popf
and
pop
add
sbb
ljmp
mov
scas
scas
addr16
in
adcl
mov
push
shlb
leave
xor
daa
jge
sub
test
jg
push
inc
push
in
jp
push
addb
xor
icebp
fwait
xor
fsubrl
push
les
push
cltd
fwait
cmc
mov
aad
out
xchg
cmp
cmp
out
jno
arpl
jb
pop
icebp
mov
sti
and
dec
push
mov
imul
gs
mov
movsl
ja
into
push
pop
push
sbb
dec
push
adc
sub
js
inc
mov
jge
mov
xchg
push
aas
mov
aaa
out
mov
dec
sub
dec
push
jnp
mov
sub
arpl
mov
cmp
xor
aad
adc
imul
imul
into
push
ffreep
cmc
stos
loop
lret
aam
push
sti
int
mov
mov
fisubrl
rclb
rclb
cmp
scas
or
pushf
mov
inc
jb
out
xchg
js
out
aam
sarl
fidivrs
outsl
dec
add
rolb
mov
push
mov
mov
aas
sbb
subl
mov
popa
push
xor
mov
xchg
gs
xor
sub
lock
push
cmpsl
dec
xchg
xchg
pushf
hlt
aas
push
xchg
push
pop
xor
loop
je
scas
mov
sub
out
sbb
jns
sarl
test
imul
xchg
daa
mov
and
in
cld
in
sbb
jo
adc
adc
insb
cld
xchg
rorb
jecxz
xor
dec
stos
adc
adc
fimuls
or
lea
push
movsl
sbb
mov
cmpsl
mov
outsb
sarl
pusha
and
fisttpl
xlat
sub
mov
daa
ss
movsl
inc
test
add
jae
arpl
int3
rolb
orb
mov
jns
arpl
mov
rorl
test
dec
out
fisubrs
jns
mov
sbb
sti
mov
mov
inc
scas
sbb
popa
loope
sbb
dec
or
popf
xlat
addr16
std
lahf
lds
lcall
jne
test
pop
test
xchg
mov
and
popl
ret
lods
ficomps
leave
and
xor
sub
cmpb
push
mov
rolb
sub
insl
sbb
sub
mov
in
in
stc
push
or
rep
mov
jbe
loop
movsl
push
dec
rolb
cmpsb
xcrypt-ctr
jne
leave
jl
jl
in
fisubrs
mov
stos
lea
lods
loopne
inc
add
lret
outsl
and
xor
clc
dec
jge
pop
outsl
sbb
std
das
jns
mov
cld
popl
mov
dec
das
popf
mov
in
testl
out
mov
mov
fimuls
data16
xor
aad
cmp
inc
stos
out
inc
test
lds
jbe
scas
add
mov
push
stc
leave
pop
mov
mov
or
outsl
aam
call
jecxz
jo
leave
jmp
cmp
popa
outsb
add
push
repnz
push
cld
push
xor
cltd
mov
mov
or
orl
sub
mov
sub
subl
and
clc
mov
or
das
xor
std
fs
pop
push
lds
stos
mov
cmp
jne
stos
xchg
dec
xor
push
and
outsl
jle
int
ljmp
nop
cmp
cli
and
xor
insb
je
mov
inc
clc
cmp
xor
jl
add
repnz
popa
push
jbe
out
fnstsw
jno
adc
mov
jge
js
xchg
popl
lea
jne
or
and
jnp
cmp
dec
outsl
add
cmc
call
enter
adc
inc
aaa
pushf
sbb
mov
push
in
lahf
repnz
xor
dec
xor
hlt
aam
dec
and
add
adc
scas
sbb
or
ss
jno
leave
scas
jmp
mov
xor
das
insl
or
bound
ficompl
loop
push
cmpsb
jle
test
sbb
fistps
shld
inc
jmp
orl
inc
hlt
imul
clc
out
push
mov
adc
push
or
pop
lds
std
add
int3
movsl
test
lods
hlt
mov
ja
divb
push
add
iret
fcomps
lcall
shl
loope
adc
loop
cmp
inc
xchg
push
mov
mov
cmp
sbb
dec
push
mov
jno
shl
imul
out
push
cmpsl
jge
xor
xchg
xchg
rolb
push
jl
shll
popa
insl
and
mov
and
cmpsb
fldl
pop
add
xlat
hlt
aad
and
out
inc
and
mov
jb
ja
test
inc
inc
sub
ja
pop
mov
dec
cmp
push
mov
lret
mov
fwait
stc
lods
mov
icebp
out
or
sub
lcall
cltd
and
scas
push
dec
cmpsl
push
out
xor
lcall
jl
adc
std
jbe
mull
test
push
les
cmp
aas
mov
pushf
xchg
xor
add
xchg
mov
ret
push
xor
pop
jge
push
out
inc
jg
jnp
pop
into
add
cmove
adc
sub
stos
imul
mov
add
mov
ss
mov
js
ja
mov
sub
jp
push
shlb
fnstsw
cmpsb
pop
mov
stc
es
inc
jae
div
and
sub
lahf
loopne
push
xchg
mov
xor
call
push
dec
mov
setae
icebp
cmp
sbb
xor
data16
fwait
jg
jp
in
pusha
push
cmp
xchg
and
xchg
push
pop
out
shrb
xchg
sarl
js
mov
dec
add
lret
repz
jb
ss
pop
sbb
pushf
xchg
es
shlb
ss
pushf
mov
jecxz
loopne
mov
mov
adc
jecxz
pop
imulb
add
mov
mov
lea
mov
lahf
lea
out
jbe
or
ds
mov
jmp
cmp
out
aas
adc
leave
add
adc
dec
loop
jl
repz
xchg
mov
xchg
adc
or
int
pop
dec
mov
cmp
js
dec
mov
popf
getsec
sbb
cmpsl
lea
jb
inc
pushl
sub
mov
pop
sub
mov
inc
out
or
pop
sarb
xor
cmp
pushf
xorl
fs
pop
jl
push
ret
mov
pop
dec
adc
xchg
add
mov
cli
insl
sti
test
out
sarb
add
ljmp
nop
mov
pop
ss
cli
xchg
lods
mov
inc
out
and
pop
das
lds
nop
and
sarl
adc
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
movl
and
mov
and
movsbl
sub
mov
xor
add
and
sub
mov
subl
xor
cmp
movl
jne
andl
mov
inc
mov
cmpl
jbe
jmp
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
adc
push
or
mov
movl
cmpl
je
cmpl
jb
jmp
pushl
call
xor
add
dec
mov
jmp
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
pushl
pushl
push
push
call
jmp
mov
xorl
push
movl
cmpl
je
cmpl
ja
jmp
push
push
push
pushl
push
call
mov
dec
mov
jmp
mov
mov
xor
xor
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
iret
lods
mov
add
add
add
add
add
loopne
add
loopne
add
add
add
push
push
inc
push
inc
mov
call
mov
jmp
add
add
inc
cmp
insb
fs
outsl
data16
jb
imul
push
arpl
jb
push
arpl
jae
add
or
add
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
push
mov
mov
mov
push
lea
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
xor
add
push
lea
push
mov
mov
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
mov
mov
movb
mov
movb
mov
movb
mov
movb
mov
mov
movb
push
movb
mov
movb
movl
lea
pop
movzbl
xor
add
mov
inc
dec
jne
movl
lea
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
mov
xor
add
xor
mov
mov
xor
movzwl
add
xor
xor
mov
mov
mov
mov
lea
lea
movl
mov
call
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
lea
push
mov
push
call
mov
lea
lea
mov
call
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
jbe
cli
push
sbb
or
or
cltd
mov
lea
sub
lea
lods
sarb
mov
sarb
mov
mov
mov
sbb
or
push
cld
mov
mov
stos
lods
fistpl
or
mov
mov
mov
mov
mov
sahf
and
shrb
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
add
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
