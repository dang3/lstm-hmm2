push
mov
sub
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
adc
push
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
pushl
pushl
push
call
xor
or
dec
mov
jmp
mov
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
and
mov
sbb
andl
or
movl
xor
or
xor
movl
mov
add
mov
add
xor
add
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
orl
xorl
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
subl
xor
dec
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
addl
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
mov
mov
mov
xor
mov
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
jmp
mov
cmp
ss
dec
clc
in
cmpsb
bound
fstpl
bound
sub
pop
add
pop
jne
adc
jb
jno
into
push
hlt
and
xchg
fbstp
icebp
aaa
movsb
add
mov
in
pop
cmp
pushf
mov
addl
scas
sahf
test
js
iret
mov
test
xlat
rcrb
aam
dec
std
mov
in
fbstp
push
pusha
stc
mov
cmp
cmpsb
loope
ret
push
sub
jmp
pop
or
inc
insb
stos
cltd
aad
dec
pop
xor
test
mov
rcrb
out
pop
idiv
xor
lods
inc
xor
cmc
jne
push
push
xchg
rol
push
sbb
cmpsb
movsb
and
push
shrl
sbb
ret
roll
pop
mov
out
loope
cmp
outsb
inc
repz
mov
imul
nop
outsl
xlat
dec
mov
ficoml
sub
cmp
das
lahf
inc
subl
lcall
sub
cmc
dec
xchg
fisttpll
js
sti
jo
es
push
cltd
nop
movsl
stos
jne
ret
pxor
xlat
rcrb
sub
push
rol
mov
ficoml
xor
dec
inc
sub
cmp
or
jle
mov
cld
data16
add
lock
hlt
dec
and
xchg
add
sub
rol
in
cwtl
pop
add
ds
sbb
cs
in
fldenv
mov
mov
dec
inc
pop
or
push
push
sub
cmpl
mov
mov
stos
pop
rcll
fists
lcall
stos
xchg
int
nop
int
adc
xor
orb
add
xchg
pop
xchg
sahf
test
dec
icebp
mov
or
pslld
xchg
notb
push
loop
mov
mov
sub
inc
mov
adc
insb
xchg
icebp
mov
sbb
pop
mov
jnp
sub
inc
insl
ja
pop
or
enter
push
and
or
pop
insl
xchg
pop
and
mov
inc
mov
adc
rol
jb
and
mov
movsb
cmp
or
pop
imul
lcall
and
xchg
jne
adc
insb
ja
aad
test
fnstcw
test
mov
into
xlat
add
pop
push
pop
or
loopne
movsl
adc
push
mov
mov
mov
sbb
das
jo
shrl
adc
iret
loope
fsubrl
nop
sbb
dec
ds
mov
negl
mov
mov
mov
jle
rcrl
sar
pop
add
pop
int
push
pop
jg
stos
or
pop
rep
fcmovnbe
dec
pop
sbb
das
shrb
lods
imul
shl
inc
stos
flds
mov
add
fstps
pusha
push
sbb
push
fidivs
inc
movsl
out
pop
test
shl
jne
or
cmp
cli
loope
jnp
jge
sub
push
enter
jmp
int3
scas
jnp
out
xlat
jp
push
pop
lahf
or
cmpsl
out
int3
adc
lret
ss
jne
data16
pop
fwait
pop
and
gs
ret
sti
data16
push
sti
mov
testb
mov
sbb
shlb
push
push
lret
mov
pop
push
mov
inc
scas
add
pop
shl
jno
cmp
rcrl
mov
inc
clc
lods
incb
stc
push
enter
jle
mov
pop
arpl
into
mov
popf
adc
sbb
xchg
nop
pop
cmp
xchg
pop
jne
dec
fsubrs
rclb
push
fwait
aaa
repnz
je
in
jl
lret
and
mov
xor
sbb
push
les
test
cmp
adc
xor
pop
aam
sbb
popa
dec
loope
repnz
cmp
mov
xchg
jo
cmc
jno
dec
inc
jecxz
lods
and
pxor
daa
pop
out
push
sub
sbbb
aad
jo
cmpsb
bound
jns
cmp
aaa
cmp
lods
jno
les
add
jl
mov
pop
je
sub
mov
movsb
sbb
incl
fistpll
adc
stos
out
adc
sti
fadd
jo
inc
aad
movsb
jnp
dec
dec
push
push
fsub
sbb
cmp
jnp
js
pop
aad
pop
mov
stos
inc
sahf
push
subl
jle
dec
sub
out
add
mov
es
mov
sub
addl
add
rcr
xchg
popa
iret
out
jge
fisttps
inc
jns
xchg
cli
repz
enter
sub
sbb
cmc
xor
movsb
xorb
imul
jns
push
pop
pop
test
xor
cmp
jle
jae
jo
xor
dec
repnz
jmp
je
jnp
jp
add
dec
bound
popa
mov
mov
sbb
adc
stos
dec
cs
push
mov
lahf
pusha
daa
cwtl
push
movsl
adc
ljmp
lock
mov
dec
cmpsl
dec
sub
in
fisttps
cltd
stc
mov
mov
shlb
xchg
and
jle
push
and
and
mov
test
nop
insb
adc
mov
and
jnp
add
push
inc
inc
js
mov
push
repnz
mov
xchg
dec
xchg
test
dec
cmpsl
dec
cmp
gs
test
adc
dec
hlt
imul
in
inc
inc
in
lahf
jbe
or
cmp
call
mov
pop
leave
ljmp
mov
sbb
out
daa
fsubs
aas
insb
int
jns
pop
ficoml
daa
xchg
jmp
call
mov
mov
and
mov
fs
dec
bound
jle
push
sbb
fucomp
jp
das
dec
aam
test
jp
pusha
push
sbb
jl
jae
or
cs
lret
pop
leave
adc
mov
mov
mov
jb
push
mov
outsb
xchg
jmp
decb
dec
sub
sti
icebp
and
inc
mov
mov
lret
mov
pop
ss
out
ja
jp
mov
stos
dec
mov
push
push
jmp
cwtl
cltd
xchg
outsl
adc
push
xor
fcomps
js
mov
dec
mov
cwtl
lret
mov
mov
mov
cs
inc
fdivl
push
in
xchg
fsubrs
jno
add
outsb
in
dec
imul
xchg
test
sahf
daa
push
and
cmpsl
fsub
test
pop
ret
scas
ds
fdivs
imul
mov
loope
or
call
leave
xchg
pop
out
mov
cmpsb
daa
dec
je
jmp
add
sub
insl
sbb
inc
xchg
rol
push
inc
mov
mov
jnp
mov
cmp
sbb
fdivr
test
push
jnp
enter
call
adc
das
inc
sti
push
sahf
xorb
jnp
and
rcr
dec
imul
stc
or
ret
scas
sub
mov
adc
into
and
inc
fsub
sti
cwtl
lret
mov
or
mov
mov
subl
fsubrs
enter
and
cmpb
mov
sub
add
add
das
arpl
popf
hlt
dec
add
popa
jo
movl
inc
out
and
pop
shll
mov
cltd
imul
imul
imul
and
add
sarl
push
adc
pop
outsl
adc
jl
fsubrp
lcall
into
add
jb
pop
pop
adc
lds
bound
cmpsl
jns
cmc
xchg
lock
or
xchg
jne
sbb
jl
shll
fldt
push
data16
sahf
arpl
jmp
test
das
lods
lcall
paddsw
xlat
sbb
fists
xlat
loop
xor
sbb
add
dec
adc
push
xlat
adc
in
cli
fimuls
mov
push
add
jmp
out
jno
dec
jecxz
pop
aas
push
test
aas
push
cmpsb
dec
cmc
inc
jns
je
sub
icebp
mov
seto
jae
and
mov
xor
mov
std
push
insw
sub
jmp
test
imul
movsb
mov
cwtl
outsl
outsl
mov
fldcw
sbb
std
scas
lea
cmp
test
dec
outsl
icebp
push
mov
sbb
push
cmp
out
push
push
mov
in
pusha
ss
scas
mov
lods
jecxz
sbb
fwait
jmp
vaddss
pop
mov
cmpsl
jnp
cli
xchg
dec
mov
out
movsl
adc
xor
jne
in
mov
andl
ret
or
mov
int3
or
pop
nop
pop
lds
subb
or
in
xor
dec
clc
or
and
js
fdivrp
push
enter
les
pop
fisttpl
mov
insl
fisubs
les
sub
in
sti
add
stc
fildl
imul
mov
cmp
notb
xor
mov
sub
daa
aam
or
adc
jle
pop
add
popf
hlt
xor
push
jp
adc
lcall
or
subl
adc
jo
sets
cmp
int
dec
dec
shrl
imul
andb
xchg
sub
gs
jle
inc
push
shrb
out
push
jge
pop
pop
fdivrs
and
shlb
repnz
sub
mov
cli
aaa
mov
add
jne
aas
stos
jne
out
lea
cld
mov
pop
daa
popa
sbb
insb
test
mov
push
mov
lods
mov
pushf
cli
sub
sti
inc
ds
stc
in
jnp
and
jl
pop
push
jecxz
mov
adc
cmc
subl
mov
mov
adc
inc
jmp
mov
mov
pop
xchg
jge
mov
push
xchg
inc
rorl
sub
mov
adc
orb
in
ret
jo
and
loope
mov
sub
pop
mov
lcall
sbb
inc
add
lret
push
rorl
sub
rclb
mov
fdivrp
subb
bound
lock
out
jns
xor
cmp
imul
je
rorl
ret
fsubrs
jmp
pop
cmp
cmp
mov
lock
jecxz
push
in
sarb
std
mov
test
insb
push
fimuls
sub
sahf
push
xor
inc
das
mov
adc
push
pop
repz
cmc
jnp
scas
or
or
add
mov
jne
xchg
das
jge
mov
cwtl
icebp
mov
jge
fcmove
cmp
popa
mov
sbb
xchg
fwait
cli
push
mov
push
xor
fwait
je
jbe
adcb
shl
mov
stc
shr
aad
aam
inc
out
xor
sbb
mov
sahf
add
sub
jno
stc
jg
stos
popf
int
cmp
pop
inc
jns
stos
rcrl
jl
sub
lods
scas
inc
mov
and
ljmp
xchg
je
sbb
xchg
jl
insb
scas
xlat
insl
pushf
and
ds
sbb
fcomp
pop
xchg
add
ret
jno
aaa
sub
in
movsl
sub
inc
pusha
pop
loop
push
lds
inc
and
out
xlat
mov
fs
jnp
divb
cmpsl
fcmovbe
cmp
xor
loop
shll
xchg
lods
push
pop
js
movsb
lret
lret
or
jl
mov
xor
rolb
adc
xchg
sbb
jmp
mov
xlat
mov
cmp
cs
cmp
in
cmp
add
in
sub
imul
aam
add
push
and
xchg
gs
add
insb
push
dec
stos
jnp
pop
aam
dec
xlat
jmp
int3
xor
das
fistpl
sbb
pop
stos
loope
adc
inc
xlat
lods
xchg
stc
mov
mov
xor
jne
cmp
sbbb
ja
call
loop
jmp
mov
mov
xor
andl
scas
cmpsl
std
cmp
pushf
icebp
dec
ror
bound
nop
dec
cmp
or
mov
or
pop
lods
aam
icebp
and
pop
stos
fucomi
or
push
mov
mov
mov
mov
out
repnz
adc
sub
shlb
iret
fnstcw
push
notb
and
jns
cwtd
movsb
push
filds
nop
mov
inc
xchg
xchg
ret
mov
cmp
pop
je
gs
push
adc
outsl
ror
sub
popa
dec
xor
arpl
xlat
aas
cmpsb
jnp
ja
int
js
pop
punpckldq
sahf
sbb
mov
or
xor
inc
adc
aam
push
xchg
or
stc
mov
outsl
xor
and
fwait
cmpsl
fdivl
imul
imul
sarl
mov
adc
cmp
aam
subb
lahf
inc
push
bound
or
rcr
inc
nop
add
or
test
clc
jmp
push
mov
out
inc
int
fdivs
or
fiaddl
inc
dec
jl
mov
push
mov
mov
jmp
adc
imul
inc
push
iret
insl
cmc
stos
or
pop
mov
push
cmp
sti
in
das
cwtl
test
jg
cmp
mov
mov
xor
and
insl
dec
xor
jnp
add
in
shlb
mov
push
sub
push
sbb
jl
sbb
aaa
mov
mov
ds
daa
lods
push
in
add
push
cmp
lock
pop
push
mov
xchg
inc
push
cli
pop
out
pop
lahf
sub
mov
and
dec
inc
mov
rcrb
xor
fs
leave
xchg
cmp
pop
mov
aas
xor
dec
scas
push
and
dec
adc
xchg
aas
jo
cmp
cmp
jmp
sbb
xor
ljmp
dec
loope
mov
jg
stc
cwtl
xor
rorb
cmc
das
sbb
lods
dec
ret
stos
add
mov
xchg
shlb
xchg
or
dec
sub
push
add
bound
add
sub
enter
xlat
mov
inc
cmp
adc
cmpsl
sarb
sti
outsl
out
hlt
mov
orb
pop
pop
std
cmp
xchg
mov
push
push
sbb
idivl
lods
lods
or
cmp
push
mov
scas
imul
aaa
push
aaa
cmc
popf
stc
xor
mov
and
nop
mov
outsb
jnp
cltd
fs
fwait
in
pop
xor
jo
adc
insl
cwtl
dec
stc
xchg
mov
sti
sbb
dec
pop
push
je
add
mov
mov
ljmp
inc
mov
xchg
mov
cmp
or
pusha
xchg
push
sbb
pusha
cli
mov
mov
fstps
jo
mov
jnp
dec
pop
jp
xchg
lahf
push
imul
fdivr
mov
mov
sub
sub
into
dec
ljmp
nop
inc
call
stos
pop
je
aam
cli
fcoml
add
in
call
mov
and
movsb
jbe
inc
daa
fisubrl
push
push
dec
sbbl
jne
cmpsl
inc
aam
out
inc
sti
fmuls
inc
clc
mov
insl
jae
enter
insl
jnp
out
cwtl
outsb
pop
jge
push
jns
out
mov
imul
movsl
das
rclb
ret
cmp
pushf
mov
lret
adc
push
ds
mov
jne
out
cmp
push
mov
mov
stc
out
push
ds
aaa
mov
mov
sub
gs
fucomi
shrb
aam
sbb
lret
lock
imul
cs
xchg
mov
repnz
push
cltd
mov
inc
sahf
int
adc
push
aaa
arpl
xchg
xchg
dec
in
mov
mov
fidivrl
cmp
jmp
nop
sahf
mov
mov
xor
and
sub
sarb
mov
jno
adc
pusha
jp
cmc
push
jge
repnz
sarb
push
adc
fwait
or
addr16
aas
xchg
test
sbb
pushaw
add
imulb
adc
arpl
mov
push
sti
jae
sub
sbb
pop
inc
rorl
leave
ljmp
sbb
or
shrb
inc
in
in
popf
jle
push
adc
lcall
mov
mov
push
dec
push
movsl
or
cs
push
arpl
adc
repnz
ds
idivb
lret
ljmp
adc
insb
pop
pushf
cli
outsl
jg
xor
jns
clc
sub
cs
push
cmpsb
mov
rcrl
or
xor
jge
push
jmp
leave
push
imul
pop
push
aas
mov
mov
xchg
fidivrs
mov
push
jne
loopne
lcall
pop
push
jo
push
add
daa
sub
fsubrs
pop
mov
dec
int
xor
shrb
enter
push
mov
push
cli
adc
imul
xchg
dec
fsts
push
adcb
adc
stos
jns
or
and
push
push
mov
ret
pop
jg
adc
mov
xor
test
sbb
out
mov
pop
in
mov
fldz
out
js
bnd
aaa
popa
dec
jbe
mov
fisubl
jbe
insb
adc
testb
mov
cmp
xor
xchg
mov
cmp
imul
jg
lods
add
daa
inc
imul
mov
stc
fistl
js
push
rol
cli
insb
ds
es
sbb
fcmovbe
lods
mov
fdivrl
in
movsb
xchg
addb
enter
dec
and
dec
inc
add
cmc
pop
inc
mov
pushf
aam
iret
mov
inc
push
sti
sbb
test
adc
loopne
sub
insl
popa
arpl
ja
or
jno
movhps
push
stos
mov
mov
movsl
adc
add
enter
movsb
pop
ss
popf
push
xor
mov
aas
lds
data16
cmpl
rclb
int3
pop
jae
add
sub
sbb
subl
pop
cmp
jecxz
and
addr16
jne
lret
adc
mov
fwait
push
or
add
ficoml
cwtl
cmpsb
jnp
xchg
cmc
mov
ljmp
decl
dec
es
aaa
xchg
cmp
dec
adc
addr16
pop
cmp
fisttpll
rcl
jns
in
dec
jo
push
jp
mov
mov
add
in
sbb
mov
add
aas
mov
shll
bound
scas
or
pop
lock
ljmp
push
or
pusha
push
cs
rolb
repnz
mov
jecxz
mov
pop
ds
test
mov
push
inc
in
mov
ret
mov
push
sbb
call
push
dec
xor
clc
push
push
or
or
inc
mov
xor
pop
push
dec
popf
xchg
addr16
mov
inc
sbb
and
ret
push
rcrl
or
int3
fadds
mov
xor
add
inc
jne
pop
cltd
jge
pop
daa
mov
pop
sbb
aad
ljmp
cli
mov
mov
lret
mov
mov
dec
mov
ljmp
mov
fs
cli
rolb
jae
aas
ds
sahf
pop
je
ret
sbb
dec
mov
sbb
scas
fistpl
jecxz
stos
add
into
fcom
in
aad
insb
test
xchg
popa
push
in
jle
shll
jp
rolb
inc
push
dec
xor
mov
xor
iret
jle
sub
hlt
addr16
repz
sbb
pop
popf
ss
push
sahf
mov
cmp
xor
shlb
test
mov
test
pop
xchg
dec
out
test
lock
mov
xchg
mov
pushl
in
sbb
pop
jae
add
out
or
in
or
js
jg
imul
mov
or
idivl
mov
in
add
dec
lods
out
cwtl
outsb
fnstenv
xlat
dec
or
mov
iret
mov
in
mov
insl
inc
ret
sub
fnstenv
push
iret
out
cltd
fwait
jno
inc
cld
loop
push
inc
sbb
mov
pop
ss
test
ficompl
mov
mov
xor
js
dec
jae
daa
mov
int3
lret
dec
xlat
ficoml
cld
cld
stos
jns
cld
inc
lea
mov
roll
or
mov
push
dec
stos
popa
popa
repnz
adcl
fwait
rcll
ret
pop
adc
cmp
das
fadd
cwtl
push
push
fsts
setae
fsubrs
stc
xchg
mov
test
in
das
in
out
dec
ret
test
cmc
loope
adc
and
or
sbb
mov
testl
sahf
pop
lret
inc
xchg
js
jecxz
dec
js
fiadds
stc
mov
stos
shrb
cmp
sti
fs
paddsw
sahf
nop
incb
out
gs
sbbl
loopne
call
sahf
mov
xlat
inc
xchg
gs
jo
arpl
sbb
jno
or
stc
mov
xor
sub
jne
fadds
pop
push
loopne
jo
xchg
push
and
push
adc
mov
iret
adc
adc
jl
pop
xchg
fwait
mov
out
pop
test
test
mov
push
ljmp
dec
and
mov
mov
stos
lahf
mov
xchg
sub
jle
pop
ds
frstor
les
sbb
cmpsb
push
jl
outsb
mov
into
adc
mov
shll
enter
pop
ss
sub
out
out
dec
loope
lods
push
mulb
dec
lea
cmpsl
and
pusha
lds
xor
cmp
jg
xor
into
jge
push
in
pop
int3
mov
bound
add
stos
aaa
stos
pop
or
test
sub
daa
jnp
jmp
adc
sub
cmp
jl
cmp
outsb
cld
pop
sbb
inc
inc
mov
test
inc
std
ficoml
or
into
mov
lahf
ss
lahf
or
imul
cltd
mov
pmuludq
in
imul
shll
leave
xor
adc
xor
cmp
inc
rcll
test
jecxz
xchg
sbb
das
repz
js
push
cmp
sub
jo
lock
leave
mov
scas
fptan
adc
lret
leave
loopw
rorl
outsb
ja
test
sub
pushf
stc
cmpsl
xchg
inc
test
cld
stos
pop
lcall
fcoms
call
xchg
ljmp
mov
movhps
repz
clc
push
sub
rclb
jle
fnstcw
lods
cmp
int3
mov
dec
imul
sarl
outsb
xchg
in
sti
incl
jns
add
scas
lock
and
add
loope
ja
mov
push
aam
push
sbb
push
sub
or
lds
js
sarb
rolb
loopne
mov
add
ret
cs
cmc
insl
mov
inc
mov
jmp
movsl
jl
outsb
xor
xor
es
scas
cld
push
mov
cmp
sub
jo
lcall
sub
adc
out
dec
inc
pop
jp
lea
test
pop
movsl
inc
test
mov
andb
clc
fwait
mov
addr16
and
imul
inc
repz
dec
dec
lret
fsubp
jns
mov
mov
jb
incb
xchg
clc
cli
or
test
push
cmp
mov
pop
xchg
imul
decl
lods
xchg
or
movsl
orl
push
ret
mov
ficoms
daa
in
cld
push
fcoms
iret
mov
lahf
cmp
int3
add
jns
in
xchg
inc
imul
lahf
inc
loop
popa
fs
cmp
cld
clc
jb
adc
inc
pop
movsl
pushf
repnz
jb
popf
sbb
pop
jle
loopne
jae
int
inc
add
add
jne
or
jge
mov
and
enter
ljmp
jl
mov
lcall
mov
jl
sbb
shr
rcll
loop
loopne
or
adc
fwait
mov
jnp
shrb
idivb
stc
dec
jp
dec
mov
dec
loopne
pop
insl
sti
std
cmpsb
add
ljmp
sbb
repnz
int3
popa
inc
adc
pusha
jp
xchg
mov
insl
mov
xlat
push
cli
repz
push
or
push
imul
mov
add
sub
lret
jmp
fimuls
push
test
aam
mov
mov
mov
outsl
jecxz
cs
jl
popa
pusha
movsl
lahf
and
and
cmp
leave
imul
lock
jge
inc
cli
push
stos
jmp
pop
stos
push
into
ficomps
xor
mov
cmp
sbbl
daa
test
cmpsl
lcall
fstpl
adc
fistpl
push
std
lea
cmp
xchg
fmulp
mov
push
fdivrs
shlb
jg
pop
mov
imul
shl
cwtl
clc
jns
cld
push
xor
or
cli
lds
xor
incl
jb
fildl
andb
add
ja
lret
xchg
dec
mov
scas
test
in
jo
jmp
rclb
ja
stos
jo
lock
test
sub
cs
xor
xchg
add
mov
call
lds
shrl
ja
pop
xchg
test
push
in
dec
or
popa
lods
lea
int3
push
imul
cltd
cli
mov
dec
mov
lea
inc
stos
pushf
adc
lds
mov
out
mov
pop
xorl
sarb
sub
arpl
movsb
mov
cmpl
cmp
cmp
loope
cli
scas
cmp
hlt
iret
test
lahf
add
out
roll
jmp
inc
arpl
or
lahf
mov
fwait
dec
sbb
mov
push
cmp
cmpsl
loop
jbe
pusha
jl
repnz
lock
cli
cmp
dec
popf
sti
pop
push
xorb
xchg
notl
rclb
push
jge
lock
xor
mov
mov
inc
addps
pop
cmpsl
adc
aaa
icebp
adc
add
in
inc
push
js
mov
out
aaa
inc
subb
les
push
bound
mov
xchg
out
add
shrl
stos
and
push
cs
mov
lcall
outsb
push
sub
mov
pop
sub
in
int
add
ret
xchg
cwtl
jnp
stc
jne
sti
mov
in
or
xchg
push
ret
fidivs
setle
notb
jle
ret
sub
push
add
xchg
sub
insb
xchg
jle
jo
inc
imul
adc
mov
push
push
jge
sti
pop
mov
or
and
mov
cs
push
popa
cmpsl
js
xchg
loope
pop
stos
adc
mov
je
fidivs
pushf
lock
imul
xchg
leave
js
or
fwait
out
int
mov
push
sub
inc
xchg
movl
jnp
mov
shll
ljmp
mov
or
int
adc
insl
fisttpll
cmp
lea
les
add
push
cmp
aas
and
push
filds
jl,pn
clc
lds
jl
pop
inc
jge
push
add
fiadds
or
dec
xor
inc
fcmovne
adc
in
shlb
inc
push
pop
inc
shrb
shlb
and
std
arpl
cmp
bound
in
cmp
sub
and
clc
jp
push
test
pop
xchg
xor
in
ss
bound
je
jb
jg
mov
add
cmpb
xchg
ret
sbb
sub
repnz
or
and
and
nop
jbe
cmpsb
mov
add
inc
ja
mov
mov
into
inc
mov
sub
shlb
movl
inc
sub
jbe
or
push
adc
mov
loope,pn
shll
aam
xchg
xchg
popa
out
cmp
pop
std
jo
dec
dec
dec
idivb
sub
fidivs
or
jl
jo
lret
mov
and
push
sbb
xor
xchg
shrb
mov
xchg
mov
lret
into
ljmp
incl
jl
rorb
popa
fistl
dec
pushf
loope
adc
icebp
mov
and
std
cmp
test
test
inc
imul
lock
loope
aas
setnp
pop
mov
push
mov
cmp
inc
jns
call
rcrb
jnp
rcrl
jb
vpunpckhqdq
pop
loop
inc
add
mov
mov
inc
or
jbe
and
cmp
dec
jne
stc
push
push
arpl
jnp
adc
push
adc
inc
and
lods
or
dec
dec
pop
std
ljmp
jmp
push
andb
subl
inc
mov
test
pop
lods
jge
xchg
cmp
lcall
mov
xchg
lcall
stos
ja
push
ficomps
inc
xor
lods
push
lahf
mov
cmp
xor
aas
and
and
loope
dec
clc
out
sub
dec
imul
iret
lret
bnd
sahf
js
pop
and
pop
jnp
and
sbb
inc
inc
mov
icebp
sar
loop
int
dec
inc
in
push
or
cltd
or
mov
ret
lock
dec
sbbb
popf
fucom
out
out
add
gs
ffreep
aad
loop
dec
cli
call
pop
les
push
stos
mov
outsl
pop
fistpll
popa
orl
mov
mov
push
in
cs
call
fildll
cmp
icebp
and
in
insl
pop
jmp
push
vcvtss2sd
jne
push
lods
mov
test
dec
sub
imul
or
jmp
push
jo
lret
roll
ss
adc
adc
push
nop
push
inc
lods
cmpsl
icebp
bound
adc
jnp
mov
push
lods
cmp
lea
into
pop
push
xchg
pop
dec
or
sub
cli
inc
scas
ret
outsl
jg
mov
jo
and
add
push
ret
mov
test
ja
dec
test
adc
test
addb
adc
jle
adc
xor
mov
les
adc
fistpl
dec
jbe
push
rclb
movsb
js
test
push
icebp
sbb
shll
cmp
add
jl
jle
and
outsl
jbe
add
add
add
call
inc
shlb
movb
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
jmp
lods
mov
ja
mov
fs
inc
fstpl
fstpl
bound
and
ss
loope
testl
or
mov
inc
sbb
iret
mov
mov
jecxz
dec
fildl
cmpl
dec
icebp
and
mov
sbb
fidivrs
adc
mov
pop
dec
mov
fcompl
call
mov
inc
sbb
xchg
aam
cmp
lret
jle
inc
jg
test
mov
mov
xor
push
pushf
sub
rcl
icebp
test
xlat
mov
fisttpll
out
or
adc
pop
cmpsb
enter
inc
repz
xlat
daa
cmp
orb
xor
mov
loop
insl
adc
cli
out
sbb
test
testb
scas
cmp
mov
inc
sti
xchg
cmp
push
xchg
add
push
ljmp
adc
movsl
cltd
pushf
sbb
sbb
push
pop
push
enter
mov
sbb
jl
mov
mov
and
add
hlt
mov
test
jle
fsin
add
aad
mov
mov
mov
push
xor
cmc
xchg
sbb
push
jecxz
adc
mov
cmp
in
das
and
inc
mov
aas
jle
dec
shl
inc
jne
leave
paddq
loopne
mov
mov
sti
sub
sbb
xchg
pusha
gs
dec
adc
inc
notl
jmp
addr16
outsb
jae
and
jae
mov
or
jge
andl
aad
fstpl
pop
adc
loope
push
dec
je
loop
fiaddl
sahf
mov
out
push
lcall
pop
movsb
popa
and
cwtl
cs
loopne
xorb
mov
loop
cmpsb
cmp
pushf
cmp
jne
cmp
je
rcrb
in
dec
popa
shr
add
dec
jo
mov
clc
xchg
cmp
cmpsb
mov
dec
outsl
inc
mov
les
aam
das
fnstsw
dec
sub
push
outsl
pop
mov
or
add
mov
test
xor
sbb
je
movsb
adc
fstpt
jl
insb
mov
out
jl
movsl
cmpsl
cwtl
dec
decl
sub
push
xchg
pushf
cmp
push
add
sahf
test
ret
or
rcrl
pop
push
imul
aaa
mov
jle
gs
in
out
in
sti
insl
cmp
xor
and
imulb
xor
insl
sbb
cld
jae
mov
dec
jnp
mov
and
sbb
mov
imull
push
dec
stc
inc
insl
out
enter
dec
in
int
xchg
cmp
mov
push
adc
les
lahf
mov
inc
clc
and
jg
test
adc
and
ficoml
and
in
cmp
sbb
cmp
xor
xorl
icebp
test
hlt
cmp
cmp
ret
adc
inc
stos
mov
jne
pop
sub
stos
aam
loope
cmp
scas
mov
movsl
sub
repnz
lcall
pop
and
in
ja
dec
lahf
xchg
pop
sub
gs
sbb
or
shll
pop
xlat
in
call
adc
arpl
jo
fimull
mov
cmpsl
dec
roll
sub
xor
cmp
gs
and
stc
adc
jns
xchg
push
mov
pushf
scas
cltd
shll
jmp
xchg
push
out
lret
fildl
loop
or
rol
sub
sahf
mov
dec
jmp
pushf
imul
daa
inc
and
mov
dec
clc
or
mov
notl
int3
pop
icebp
ljmp
ret
mov
mov
adc
or
dec
sub
xchg
out
mov
cmc
mov
test
scas
leave
ja
xchg
test
sbb
lods
ljmp
mov
sbb
out
adc
in
sub
mov
mov
ret
shrl
sahf
jmp
iret
jecxz
and
xor
or
jp
fsubr
loop
xchg
jae
mov
cmp
shrl
cmpsb
inc
fcompl
pop
push
cmp
xlat
rcrb
sub
mov
int
popf
xor
mov
and
ud1
pop
jne
test
adc
inc
jb
mov
jno
adc
mov
jne
bound
mov
sub
xchg
shrb
loope
mov
aas
scas
pushf
lods
inc
cli
or
cmp
pop
cld
aad
stc
dec
dec
aaa
xchg
cld
mov
sti
mov
js
out
int
sub
mov
mov
addb
push
mov
sbb
xorl
jg
mov
lret
mov
xchg
out
push
icebp
in
cltd
xchg
adc
adc
mov
in
mov
cmp
xchg
sub
imul
outsl
sub
shrb
fdivs
and
push
mov
and
xor
mov
lea
inc
jnp,pt
lds
adc
ret
leave
push
out
jle
out
push
or
sbb
or
lret
add
cmp
mov
ja
jne
addr16
dec
test
cmp
jno
lret
lock
gs
pushf
gs
loope,pn
scas
xchg
loop
repz
incb
das
je
pushf
dec
jge
or
lret
stos
jnp
pop
inc
lret
lret
in
inc
stc
stc
push
mov
jns
push
xchg
inc
mov
cmp
xlat
test
repz
add
adc
loopne
xor
repz
mov
popf
xlat
jmp
or
je
mov
push
cld
jge
dec
pop
fwait
xchg
loopne
pop
in
adc
pop
sub
stos
orl
xchg
xlat
push
fwait
adc
roll
fidivl
in
leave
aas
jb
lahf
push
cmpb
adc
xchg
out
sbb
jae
pop
or
loopne
adc
idivb
mov
arpl
jge
leave
mov
mov
sbb
sbb
addr16
xchg
jbe
arpl
das
pushaw
mov
push
adc
jno
jb
js
mov
adc
jbe
popa
aad
and
mov
movsl
lds
out
ss
scas
push
dec
stc
cli
popa
call
adc
pop
enter
das
subl
movsb
xchg
pop
rcl
loope
cmp
imul
arpl
rcrl
jne
cs
inc
jno
call
sub
pop
repnz
mov
adc
sub
jns
xchg
inc
ja
sbb
push
xchg
xchg
sbb
pop
roll
and
and
lds
pop
adc
loop
inc
pushf
push
xlat
add
mov
and
scas
cmp
dec
inc
push
in
fmull
aas
pop
adc
xchg
ds
mov
imull
mov
scas
loope
inc
mov
sub
cs
jbe
icebp
scas
loopne
pop
lods
inc
sbb
sbb
js
stos
pop
ret
ds
imulb
and
imul
movsl
push
test
popa
repnz
pusha
pop
adc
xchg
sbb
mov
mov
xorl
into
sub
loop
andl
fsubl
push
fmuls
xchg
dec
shll
gs
mov
mov
enter
lret
mov
gs
icebp
sbb
sbb
rcll
idiv
jne
and
mov
loopne
jg
fdivl
in
pop
jmp
add
xchg
mov
pop
pop
xor
xchg
ret
cmc
inc
movsl
clc
add
inc
rclb
and
inc
pushf
cmpb
test
leave
sbb
ret
out
push
andl
mov
push
cmp
daa
into
jbe
jle
movups
push
bound
std
and
outsl
adc
sbb
push
fsts
pusha
repnz
pop
rcll
out
leave
inc
and
mov
xor
popf
leave
jbe
jecxz
adc
add
notl
cli
ds
xor
xor
fsubl
mov
adc
jecxz
adcb
mov
mov
inc
xor
pop
push
dec
fs
int3
mov
je
or
mov
xor
clc
xchg
out
test
xor
inc
sbbb
add
push
sub
data16
shll
ss
or
adc
in
jo
insl
inc
ds
add
cmp
sbb
or
mov
outsl
dec
popf
adc
into
sub
cld
push
es
push
ret
std
out
call
or
pushf
cli
mov
jnp
adc
push
jg
add
and
dec
mov
pop
dec
sub
xchg
fs
or
pop
mov
or
stc
and
loopne
shlb
add
out
icebp
int
ret
test
push
insb
and
inc
xor
mov
call
xchg
mov
inc
test
mov
ljmp
and
cmc
sbb
pop
je
jo
or
in
daa
mov
movsl
lret
lods
inc
mov
and
inc
imul
pop
hlt
cmc
dec
outsl
or
mov
adc
loop
cmp
push
sbbb
icebp
or
popa
mov
xor
lea
jg
push
add
andb
dec
int3
in
arpl
nop/reserved
inc
adc
jecxz
sbb
mov
enter
hlt
sbb
jb
fisttps
sahf
gs
divl
cs
sub
inc
shl
mov
push
jno
cmp
call
in
jae
orl
mov
arpl
inc
cmp
push
arpl
push
mov
std
leave
js
mov
push
or
mov
push
movsb
fcomp
out
lods
jmp
push
mov
or
js
aaa
mov
jl
mov
mov
outsb
inc
jle
leave
lock
fs
pop
loopne
pop
ds
add
clc
popa
enter
mov
inc
divb
fimuls
xchg
mov
mov
daa
mov
into
sarb
in
adc
xchg
cmp
sub
and
mov
cmp
daa
cld
push
dec
fisubrl
mov
sub
dec
and
adc
addl
and
cmpsl
mov
push
scas
adc
push
pop
adc
fnstsw
test
subl
cwtl
and
fs
es
pop
xchg
andl
mov
add
jbe,pt
cwtl
jge
fdivrp
pop
int3
call
hlt
fwait
je
je
adcb
fmul
dec
je
xchg
or
pop
mov
nop
aas
jmp
add
aaa
fmuls
aaa
test
sahf
push
xor
push
int
mov
jg
pop
shll
in
jo
mov
enter
push
sub
pop
mov
popf
scas
bnd
test
jg
sbb
mov
divb
mov
outsl
fnstcw
inc
lods
js
sarb
or
aaa
mov
fsubl
sub
and
and
inc
insb
mov
xor
ja
insb
icebp
mov
jns
stos
pop
arpl
pop
popf
clc
lcall
dec
pop
jl
aas
rclb
lds
dec
xchg
negb
jp
pop
in
cs
mov
popf
xchg
cmpsl
scas
ret
sbb
inc
xchg
sub
mov
xchg
cmc
loope
movsl
je
lods
je
fwait
pusha
add
lahf
jne
hlt
aam
mov
sarb
ret
pop
and
icebp
fidivl
iret
cmp
call
add
jb
cmc
jp
shlb
popf
mov
lds
mov
jmp
rcl
add
fs
and
dec
frstor
inc
aam
imul
push
push
sub
jg
cmp
mov
xor
aaa
cltd
add
and
cld
pop
ror
pop
dec
icebp
xchg
dec
jecxz
mov
sbb
lret
mov
xor
mov
in
stc
loope
fwait
sbb
cmp
shl
sti
ret
xor
mov
lahf
add
bound
jge
js
xchg
pop
insl
int
push
fcomip
or
popf
add
repnz
ret
pop
loop
gs
xchg
mov
adc
mov
add
or
mov
enter
sbb
data16
jg
stos
out
xchg
sub
sbb
xchg
mov
jl
arpl
das
inc
xor
mov
mov
pop
pusha
test
xchg
mov
scas
fcmovnb
stos
sbb
inc
in
loopne
push
sub
sbb
jle
dec
push
jne
adc
adc
pusha
aas
les
dec
andl
push
xchg
dec
xor
sbb
clc
cld
inc
scas
mov
loopne
cmpsl
hlt
jnp
jl
pop
aam
push
push
pop
test
fldt
clc
fildll
mov
mov
mov
mov
sub
dec
adc
adc
fnsave
insl
in
testl
stos
lret
icebp
jne
push
sub
loop
ss
popf
mov
pushf
call
mov
adc
inc
cmp
jge
inc
es
sub
rcrb
cmpsl
dec
mov
lods
and
lods
icebp
dec
sub
ret
mov
jns
rorb
cmp
outsb
jb
insb
lcall
dec
out
ljmp
jmp
daa
insb
aad
push
fsts
in
mov
mov
xor
xchg
jmp
mov
lret
sbb
divb
jl
mov
xor
push
out
push
mov
popf
xchg
push
cli
and
out
pop
enter
scas
fwait
iret
int
push
fbstp
inc
sub
cmp
cmp
push
mov
inc
negl
adc
and
jmp
cmpb
dec
dec
mov
test
loopne
mov
or
test
sbb
and
xor
mov
jp
inc
arpl
push
pushf
sub
popf
movsb
das
int
test
arpl
mul
lock
mov
xchg
std
jo
movsb
imul
fsubrs
dec
pusha
aaa
jno
sub
and
dec
popa
mov
les
test
pop
xlat
jmp
scas
jb
jmp
add
gs
js
mov
pop
mov
inc
mov
mov
fildll
addr16
xchg
push
xor
xlat
es
and
adc
push
out
sahf
fdivs
enter
xorl
lret
stc
inc
imull
xor
lods
pop
pop
out
mov
sub
pop
xor
in
sbb
js
scas
and
mov
push
in
mov
sub
rcll
or
or
inc
lods
jno
in
jmp
hlt
lods
movb
inc
xor
add
data16
lds
aas
cmc
jne
clc
loopne
mov
fstl
mov
addr16
dec
shll
xor
inc
mov
mov
fimuls
push
sub
cwtl
pushf
loope
lds
pop
fcoml
lds
dec
ja
lods
arpl
xchg
sti
loope
cmpsb
mov
mov
pushf
int
mov
fld
pushaw
xchg
push
inc
outsb
aaa
and
aam
addr16
mov
xchg
pop
or
cmp
andb
shrb
jo
and
aas
dec
repz
test
loope
pop
push
sub
push
pusha
fisttpll
nop
sbbb
leave
std
addl
sbb
dec
sub
pop
cmc
pop
leave
popa
icebp
xchg
lret
cmp
sub
push
mov
cmpsl
pusha
and
inc
xchg
and
mov
mov
xor
stos
aam
lret
pusha
roll
lds
stos
jae
add
and
aad
cmp
mov
cmpb
add
cs
or
pusha
mov
sbb
sub
and
adc
pop
or
dec
adc
mov
ds
jne
lods
iret
sub
cmp
jns
cmp
adc
push
dec
shrb
fidivrl
aas
enter
or
dec
lods
push
rorb
es
jb
xchg
mov
or
int
iret
fistpll
xchg
mov
adc
sbb
cmp
add
jmp
bound
and
sbb
adc
dec
push
scas
cli
push
mov
push
push
mov
out
hlt
lret
test
xor
xchg
pop
push
lcall
sub
sbb
add
lahf
popf
cld
repnz
pop
aad
mov
sub
dec
clc
lahf
sub
arpl
ror
cltd
dec
test
pop
adc
test
test
and
xor
sub
lock
fisubrl
add
ret
cmp
in
mov
xchg
stc
test
or
sti
or
sub
pop
scas
and
loope
movsb
push
movsl
mov
jnp
pop
and
mov
or
cmp
jae
testl
sbb
lds
dec
rolb
aad
mulb
popf
xchg
popa
sub
clc
jmp
lods
xchg
inc
mov
xor
mov
inc
jne
push
outsb
push
and
sub
mov
popa
fidivl
sbb
pop
pop
cmpsl
ja
jecxz
lea
push
and
clc
mov
jo
mov
shll
sub
stc
int3
out
mov
aam
outsl
or
or
or
ss
cwtl
shlb
push
scas
notb
testb
sub
setle
pop
xchg
push
or
imul
lock
out
inc
aam
fcoms
pop
pop
mov
or
sbb
adc
and
xor
ds
push
sbb
jg
push
lds
iret
int
xchg
mov
xor
pop
push
hlt
fbld
leave
mov
mov
xor
jecxz
shlb
lea
mov
or
xchg
fstl
sahf
push
push
mov
notl
repz
loopne
dec
push
adc
xchg
mov
jecxz
cltd
and
mov
ds
cwtl
shr
ret
cmp
ficoml
stos
push
xor
push
sbb
andl
pushf
jae
arpl
sbb
lahf
dec
mov
mov
push
pop
bound
xchg
hlt
das
orb
cli
sub
pusha
push
jl
mov
lds
mov
rcrl
adc
and
adc
mov
sbb
xor
fxtract
sub
lock
fcmovne
xchg
lahf
cmp
dec
ret
xchg
mov
in
cmpsb
mov
call
inc
mov
icebp
xchg
sbb
sti
mov
push
loopne
mov
sub
test
inc
movsl
xor
sbb
pop
mov
or
adc
dec
cmpsl
and
popf
mov
icebp
rcl
fisubrs
adc
in
sub
pop
lock
daa
movsb
xchg
pop
dec
inc
mov
daa
xor
fsubs
lret
xchg
insb
push
jb
dec
sub
lods
pushl
fsubrl
aas
pop
jne
scas
lret
insl
sbb
pushf
pop
dec
cmp
push
jge
cmp
fistl
mov
sarb
in
xchg
shrl
inc
cmc
into
sbb
push
in
clc
xchg
cmpsb
fnsave
add
cltd
ja
mov
mov
aad
mov
inc
mov
jmp
lods
shlb
add
ss
add
xchg
call
jb
and
or
cmc
cmp
lds
scas
sbb
roll
jns
xchg
cmpsb
stc
cmp
pop
cwtl
push
add
sbb
jle
and
jmp
repz
negl
out
fiaddl
jl
icebp
mov
dec
or
roll
mov
mov
cld
pop
aam
je
jle
pop
pop
add
fdivl
jge
loopne,pt
bswap
subb
stos
rorl
inc
std
xchg
icebp
push
adc
cmp
adc
icebp
aam
xor
xor
add
or
out
and
xor
dec
cmp
bound
lods
mov
push
and
sarb
pusha
pop
cmpsl
xchg
adcb
clc
cmp
lahf
push
pusha
or
cmp
jnp
arpl
xor
or
jg
dec
cmc
xchg
ret
sub
inc
jb
mov
jae
jnp
cmp
xlat
sub
xchg
loop
shl
iret
inc
and
popf
xchg
xchg
sub
cli
scas
inc
adc
enter
and
test
jbe
ror
sti
es
mov
and
stos
adc
aaa
lret
ret
arpl
into
inc
sbb
push
movsl
das
popf
ss
push
repnz
rclb
and
out
jnp
push
test
mov
sbb
repnz
sbb
test
cmp
imul
mov
cmpsl
cmpsl
mov
lret
sarb
xchg
addr16
dec
aad
pop
adc
pop
jmp
mov
mov
push
add
add
lahf
pop
arpl
out
and
out
xor
sub
xor
jnp
dec
cmpl
xchg
sbb
add
jp
stos
pop
sub
pushl
pop
movsl
aaa
pusha
xchg
daa
dec
jmp
repz
add
inc
cli
call
or
sub
xor
outsl
jecxz
mov
lret
mov
imul
std
shrl
imul
repnz
test
test
cmpsl
ja
lock
shl
hlt
pop
jmp
rolb
adcb
decb
adc
jmp
dec
sbb
and
mov
aad
je
aad
sub
mov
ds
push
and
out
cwtl
in
stc
sahf
xlat
pusha
push
leave
pushf
push
je
sbb
sbb
pop
dec
fisubl
or
xchg
ja
mov
xor
test
add
cwtl
sbb
jbe
aam
and
repnz
mov
fsubrs
jl
cmp
stos
out
ja
mov
jno
pcmpgtw
ret
cmp
clc
jne
jp
les
lock
jne
jle
loope
mov
insb
dec
sub
rcr
pop
pop
cmp
insb
mov
movb
rclb
ja
lea
dec
arpl
je
add
cld
test
add
pop
mov
pop
and
fmull
enter
ljmp
mov
dec
bound
pop
push
aam
lea
cmp
pop
mov
mov
mov
sbb
gs
ret
leave
and
iret
xchg
inc
inc
nop
scas
or
sub
mov
mov
push
cmp
popa
out
cltd
xorl
lahf
inc
scas
push
inc
aam
inc
xorl
and
test
inc
arpl
or
arpl
or
lret
jnp
int3
pop
mov
jae
xor
xchg
aas
daa
imul
inc
xchg
jb
pushf
pop
inc
xchg
inc
push
pop
ret
insl
mov
je
out
test
add
iret
add
ss
sbb
mov
fistl
cmp
mov
insb
addr16
mov
cmc
jp
jno
cmc
pop
jno
scas
dec
push
out
cs
and
test
add
mov
xchg
push
pop
imul
rcll
jle
adc
test
outsl
jne
xchg
push
pop
and
xchg
inc
bound
insl
xlat
cs
scas
push
outsb
cmp
popf
repz
out
lods
movsb
cs
sub
cmp
mov
fstl
std
inc
cld
fldt
jecxz
fisubs
scas
cmp
xchg
loop
push
mov
inc
or
mov
pop
cmpsl
sahf
jecxz
arpl
lcall
sub
pop
cwtl
ficompl
pusha
int3
xor
sahf
test
push
add
dec
dec
xchg
fimull
jmp
cli
out
cmpb
push
or
mov
xchg
jg
addr16
test
push
mov
imul
cltd
xchg
pop
out
xor
in
lods
jg
mov
mov
ja
push
popa
movsl
incl
inc
or
insb
mov
into
sbb
jp
xchg
add
movb
sub
inc
push
and
pop
dec
ljmp
mov
out
fidivl
pop
sub
daa
test
mov
repz
ret
es
rolb
in
lock
jp
pushf
and
fistpl
rorl
cmp
xor
push
and
mov
mov
dec
adc
ss
lret
in
or
scas
dec
fidivl
stos
mov
lds
mov
cmpsb
ja
das
mov
mov
mov
and
mov
push
pop
jl
mov
push
adc
add
imul
mov
ljmp
jge
jle
rolb
pop
ljmp
inc
scas
mov
lret
popf
ja
xchg
popa
shr
fldenv
dec
aam
add
add
mov
xor
and
aad
fbld
insl
push
sub
lods
fs
mov
daa
pop
and
in
cmc
or
xchg
xchg
int
pop
ret
adc
loope
nop
xchg
sub
push
and
adc
shll
stos
jmp
in
inc
inc
sub
push
sub
xchg
les
add
cmp
lods
or
xchg
addl
ret
dec
dec
pop
cli
push
mov
aam
out
inc
popf
pushf
loopne
pop
nop
or
daa
mov
dec
ret
dec
mov
push
mov
pop
adcb
add
shrl
fcomps
xor
hlt
inc
ljmp
cmp
in
hlt
out
rorb
cmp
adc
sub
add
stc
push
jne
shll
insl
xor
rorb
inc
jecxz
jl
das
je
add
fisttps
call
sub
pop
pop
mull
cmp
dec
mov
cmp
rorb
test
aaa
cmp
cmpsb
iret
dec
add
push
xchg
sbb
out
movsl
jmp
pop
mov
jo
rolb
xchg
ja
fcompl
lock
inc
adc
mov
ja
shll
stc
sarl
cmp
call
loopne
ss
push
mov
inc
and
pop
aaa
adc
dec
sbb
add
cld
add
clc
and
push
and
pop
jae
mov
add
je
fbld
addr16
push
inc
push
pop
enter
sbb
rclb
push
xor
pop
stc
insl
jb
stos
and
push
mov
les
mov
mov
sub
sub
xchg
sbb
or
xor
fdivrl
scas
adc
xchg
mov
pop
dec
testl
add
roll
in
cmp
das
fmuls
inc
and
dec
xchg
lds
mov
jp
xchg
scas
in
pop
insb
dec
adc
or
inc
sbb
push
jbe
shll
imul
sub
repz
mov
repz
int3
push
lea
add
cmpsb
add
std
fldenv
pusha
popf
ds
insl
bound
cmp
push
add
xchg
dec
mov
dec
adc
inc
std
enter
sbb
fidivrl
cmpsl
cmp
cld
dec
rcrl
push
or
outsb
clc
pop
inc
xor
int3
xchg
xor
in
pop
outsb
sbb
insl
popa
push
repz
mov
ret
imul
rorb
mov
fmull
jle
lock
lahf
jae
mov
cmpsb
ja
insb
sbb
in
push
ret
arpl
pop
sbb
dec
mov
jbe
and
mov
mov
mov
jae
xor
leave
lods
cwtl
mull
mov
dec
xor
mov
pop
push
pushf
inc
xchg
xchg
fwait
xchg
call
bound
out
xchg
dec
shll
cld
int
imulb
jno
pop
das
imul
xchg
push
dec
in
pop
inc
movsb
add
lahf
pop
fsts
sub
add
jo
or
push
pop
sub
js
out
add
outsb
movsb
sub
testb
add
aas
push
enter
inc
fadds
mov
jbe
lods
mov
ja
ljmp
sbb
dec
push
data16
daa
fs
test
pop
hlt
xchg
js
inc
cli
xor
jne
popf
dec
cltd
push
ficomps
loopne
idivb
pop
mov
xchg
cmp
mov
data16
jg
adc
add
loope
or
call
repz
loopne
fmuls
mov
mov
inc
mov
sarl
les
mov
and
or
pop
push
out
or
jo
inc
push
mov
idiv
sub
sub
adc
and
or
ret
sbb
mov
outsb
cmp
pop
aad
loop
aaa
adcl
sbbb
bound
loopne
ret
pop
push
sbb
test
fcmove
dec
or
sub
sbb
cmp
repz
dec
cmpsl
clc
push
cmpsl
push
sub
in
rolb
jg
cmp
cmp
adc
jecxz,pn
mov
cmp
icebp
subb
xor
addb
aas
call
insl
leave
scas
js
out
adc
mov
jo
shlb
mov
and
loop
push
add
and
and
iret
vcvtsi2ssl
or
cs
addl
mov
std
sub
push
dec
fsub
sub
aas
sarb
xchg
test
mov
push
fstpt
int3
imul
movsl
lahf
cmp
fsubrl
popf
fistpll
push
mov
ret
fcmove
pop
jmp
ljmp
adc
in
dec
hlt
rclb
and
shl
inc
xchg
aaa
enter
sub
out
ret
stos
flds
mov
lret
mov
pop
jb
ss
mov
sbb
scas
or
mov
icebp
add
mov
std
pop
push
mov
adc
xchg
mov
roll
dec
push
pushf
adc
scas
dec
mov
ja
cs
fdivrl
mov
add
gs
inc
mov
fstl
push
xchg
in
cmpsl
int3
push
ljmp
ficoml
and
dec
inc
stc
loop
adc
mov
outsl
mov
call
or
data16
xchg
pop
sub
push
jnp
sbb
mov
popl
clc
dec
xorb
imul
mov
popa
dec
ud1
and
lcall
sbbl
mov
add
ret
sti
jmpw
shlb
and
mov
fwait
mov
into
mov
aas
jl
push
pop
cmpsb
lods
sub
adc
xchg
std
lret
add
gs
daa
adc
loope
test
mov
or
leave
add
mov
lds
sti
push
loop
add
scas
mov
cmp
bound
inc
inc
add
mov
lahf
out
rol
mov
jb
stc
pop
popa
jecxz
push
imul
pusha
sti
inc
in
cwtl
mov
xor
clc
rorl
add
pusha
repz
adc
faddl
push
mov
rcrl
mov
jbe
xor
outsb
adc
xor
fidivrs
icebp
test
mov
push
push
push
loope
in
cmp
pop
sbb
fcmovnb
and
mov
add
out
call
dec
mov
rcll
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
addl
push
adcl
push
push
andl
push
lea
push
adcl
push
subl
call
call
andl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
movl
mov
mov
xor
or
mov
add
subl
mov
mov
movl
test
movl
je
subl
mov
mov
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
imul
mov
orl
add
sbbl
xchg
xor
mov
sub
andl
mov
xor
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
sbb
mov
and
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
and
xor
add
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
xor
xor
add
add
mov
adc
mov
xorl
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
pushl
push
pushl
call
cmpl
jb
movzwl
sub
mov
add
mov
sub
lea
xorl
xor
subl
xor
cmp
movl
je
xor
mov
xor
orl
add
cmp
movl
jne
addl
pushl
call
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xor
addl
mov
subl
add
movl
cmp
movl
je
pushl
subl
pushl
andl
call
sub
mov
xor
xor
xor
mov
mov
xor
add
cmp
je
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
push
pushl
push
call
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
mov
xor
mov
mov
addl
add
mov
sub
mov
mov
addl
add
mov
inc
mov
subl
mov
orl
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
jmp
insb
pop
call
xchg
imul
pushf
divl
cmp
adc
bound
aad
sti
cltd
xchg
sub
fisttps
xor
pop
inc
jg
adc
push
andl
sub
mov
pop
repnz
lods
cs
sub
cs
mov
fiaddl
sti
movsb
mov
push
lcall
test
and
scas
adc
xchg
repz
lds
add
adc
mov
add
imul
fisubrs
das
xor
dec
lret
mov
test
sub
xchg
mov
shlb
jno
jp,pn
mov
scas
mov
icebp
notb
dec
and
mov
and
jge
popf
pop
test
add
mov
in
sbb
mov
jle
cmp
push
pushf
aaa
dec
fildll
fists
mov
and
dec
inc
adc
mov
cli
outsl
outsb
mov
ret
js
add
add
mov
lea
lret
push
les
or
mov
insb
pop
std
xchg
adc
jge
xor
push
dec
fwait
and
adcl
cltd
shlb
mov
pop
push
cmp
iret
imul
dec
ffreep
inc
xorb
inc
push
insl
cmp
sti
out
dec
jb
or
cmp
inc
adc
out
mov
test
xchg
sarb
xchg
push
test
outsl
lods
sub
mov
inc
mov
in
arpl
inc
sbb
inc
bound
mov
push
je
fsts
jecxz
test
flds
loope
or
ss
mov
adc
daa
xchg
addr16
adc
pop
xorb
push
jl
outsb
xorl
dec
es
repnz
add
sbb
bound
popa
xlat
pop
hlt
mov
and
jnp
addr16
cmp
je
pop
ljmp
cltd
jnp
arpl
sbb
lcall
xchg
pushf
scas
or
je
mov
or
xchg
pop
test
fistl
stc
orb
mov
or
mov
mov
repnz
jecxz
idivb
in
dec
cmp
and
les
out
mov
xor
dec
cmp
xlat
fstl
and
lea
inc
in
push
outsl
mov
lea
inc
das
out
lea
push
xchg
xchg
jecxz
ss
mov
nop
jge
inc
bnd
xchg
jbe
mov
push
add
out
ds
in
std
add
mov
jecxz
cmpsb
insl
enter
std
xor
test
inc
out
lret
sub
and
or
ds
dec
nop
mov
sldt
or
leave
mov
push
in
fs
std
ljmp
mov
jg
cmp
and
mov
lahf
push
sbb
and
mov
and
in
xchg
pop
or
cmpsb
sti
mov
xchg
ss
stc
les
imul
imul
xchg
cld
test
pop
hlt
mov
negb
test
mov
cmp
pop
sarb
xor
loopne
stos
leave
lods
jmp
int3
push
sub
xor
mov
push
jmp
mov
out
loope
xlat
lahf
mov
jns
cmp
aad
jns
enter
jl
aad
aad
pusha
icebp
and
mov
repnz
cmp
into
pusha
or
sahf
xchg
dec
fnstenv
mov
push
sbb
xchg
and
insb
test
xchg
pop
pop
lock
int3
in
push
call
or
mov
mov
jnp
mov
xchg
adcl
lret
js
push
leave
mov
call
andl
int3
bound
iret
push
push
leave
jmp
jmp
fwait
test
les
ljmp
rorl
fidivl
lods
iret
pop
mov
inc
fadds
imul
mov
jl
dec
scas
scas
out
jl
fwait
iret
xchg
fwait
dec
mov
or
out
loope
pop
ds
hlt
or
pop
sub
sub
or
jbe
sub
push
xor
mov
test
imul
adc
dec
xchg
xchg
int
lahf
out
stos
jne
jle
jns
into
pop
xchg
fstpl
insb
mov
ja
jg
pop
dec
call
mov
scas
enter
repnz
mov
dec
pop
cmp
mov
jle
pop
out
sbb
nop
mov
mov
sub
mov
sbb
xor
into
jae
out
adc
xor
dec
shlb
lods
outsb
inc
lea
rorb
inc
fldt
lods
lahf
loop
popa
and
dec
add
push
shlb
ret
mov
or
ja
inc
hlt
and
and
adc
push
lea
mov
out
testl
repz
mov
or
stc
and
push
fsubrs
sbb
cs
lret
xchg
sub
dec
xchg
sbb
jmp
rolb
scas
cmp
ljmp
add
jl
mov
outsl
fwait
dec
out
cltd
jb
and
push
flds
sbb
stos
popa
dec
stc
icebp
mov
enter
cmp
js
push
arpl
mov
ljmp
loop
pushf
outsl
loope
cmc
out
push
mov
sbb
das
and
sub
xchg
sbb
je
xchg
popf
push
or
or
mov
pop
cmp
insb
aaa
int
lock
xchg
mov
shr
stos
adc
std
xor
cld
repz
push
xchg
jne
xchg
dec
mov
sub
mov
jl
xor
mov
call
call
push
outsb
imul
dec
aaa
xchg
inc
pop
sbb
mov
xor
push
dec
lea
js
mov
xlat
xchg
dec
movsb
sbb
add
sub
and
mov
call
fs
xchg
inc
pop
sarb
mov
lods
lret
cltd
ret
iret
fwait
push
scas
icebp
aas
shrb
cmc
test
hlt
mull
stos
imul
fdivl
imul
xchg
xchg
lea
inc
mov
push
cmp
cmp
movsl
xchg
xor
xor
push
ret
sahf
xor
xchg
clc
xchg
mul
mov
insl
test
xchg
jp
pusha
jl
leave
aam
out
mov
mov
mov
mov
cltd
adc
call
sbb
lcall
push
fsubr
sub
dec
mov
inc
mov
aad
testl
jns
mov
aad
sar
ret
xchg
cli
stos
mov
push
int
cmp
mov
pop
sub
shr
ret
xor
and
ficoml
jle
in
or
adc
pop
fs
push
sbb
jo
addr16
jle
add
push
sbb
mov
xchg
cmp
cltd
fisttps
push
dec
pop
dec
mov
insl
jge
push
add
mov
mov
cmp
mov
aad
and
negl
pop
clc
add
hlt
sahf
add
sub
inc
inc
sub
xor
pop
and
jnp
shll
lods
xor
or
lea
jmp
shl
ss
sub
xchg
out
outsl
xor
sbb
punpckhdq
push
stos
push
outsl
cmpsb
or
into
or
mov
sbb
xchg
dec
fs
loopne
orl
mov
jbe
aam
insl
sub
cmp
enter
cli
loopne
jle
xchg
jae
or
push
andb
lock
lcall
cmc
add
push
loope
pop
arpl
mov
test
mov
outsb
fidivrs
bound
mov
mov
or
mov
je
je
sahf
dec
arpl
shlb
daa
push
cli
loopne
sub
xchg
xor
ss
sbb
inc
and
push
sub
loope
popa
xchg
mov
ret
pop
daa
jnp
insl
out
mov
ljmp
xor
mov
jle
outsl
push
xchg
movsl
cmpsl
mov
nop
mov
ffree
push
cmp
push
push
shrl
repz
jecxz
inc
fmulp
dec
mov
inc
lcall
xor
shll
scas
bound
sbb
outsl
dec
ja
inc
enter
mov
cmp
iret
lods
push
mov
cmpl
mov
outsl
pop
cmp
mov
cmp
inc
movsb
xor
cmp
js
sbb
out
outsl
add
push
push
cmp
xor
sbb
cmp
jb
jp
sbb
jo
xchg
fildll
cmp
sarl
xchg
mov
stos
call
inc
subb
xor
and
mov
lods
push
popf
pop
fs
insb
in
jnp
imul
cmpb
xor
mov
inc
mov
lret
sbbl
pop
jns
cmp
and
into
dec
mov
jno
test
ret
or
call
std
add
xor
ficoms
or
les
and
sbb
ljmp
aas
aas
add
mov
ds
add
mov
fcmovnb
sub
sbb
mov
add
repz
and
sub
pop
mov
push
inc
sub
cltd
xchg
fnstsw
cwtl
loope
mov
ds
jge
sub
fidivs
cli
fwait
or
pop
add
outsb
cmp
sub
pop
jle
dec
lret
dec
fcmovnu
test
push
add
sbb
loope
test
int
mov
inc
mov
mov
and
mov
cmp
adc
push
push
aaa
inc
lahf
fucomi
mov
sahf
test
push
rol
jecxz
rol
adc
outsl
insw
and
mov
jb
add
push
out
mov
and
jnp
adc
and
loopne
fistpll
dec
pop
inc
loopne
mov
jmp
jl,pn
insb
aas
jp
xor
mov
ss
cmpb
jge
xlat
fnstenv
or
mov
loop
hlt
jbe
imul
inc
and
cmp
sub
jbe
mov
push
fsubs
ret
sbb
push
movsl
cmp
test
and
icebp
add
mov
in
stos
and
cwtl
iret
inc
xchg
cs
test
scas
add
jno
and
call
pop
xlat
nop
in
pop
sbb
cmp
lret
dec
out
mov
mov
pop
mov
fsubrp
std
or
arpl
mov
scas
xchg
push
ja
cmp
push
sub
push
mov
shll
imul
mov
xor
out
pop
je
mov
jge
cli
mov
and
shll
notl
jns
hlt
loop
jns
and
or
imul
adc
mov
les
xor
ret
in
adc
mov
test
adc
mov
dec
or
lret
mov
shrb
call
mov
hlt
leave
pop
sbb
xor
sbb
add
fldenv
inc
pop
out
pop
fisubrl
mov
adc
sbb
mov
push
dec
aam
xchg
xchg
cmpb
cmp
insb
mov
fcmovnb
jno
sbb
aas
jnp,pt
dec
loop
cmp
pop
sbb
pop
leave
mov
clc
sbb
incb
mov
addr16
lods
mov
mov
adc
sbb
fistps
xchg
cmp
cltd
sub
cmpsl
ds
popf
fisubs
inc
rolb
cmp
aad
jbe
clc
lea
push
sub
int
sub
insl
repnz
out
pop
ljmp
ficoms
outsb
jb
sbb
push
cmp
out
adc
daa
inc
bound
pop
imul
mov
mov
cmpl
sbb
aaa
lcall
rcr
mov
out
sub
lea
adc
inc
jle
inc
inc
subb
pop
mov
shrl
jecxz
dec
pop
mov
pop
shl
das
notl
cltd
aad
xchg
scas
arpl
mov
test
adc
adc
jne
arpl
mov
xor
mov
ret
sub
push
fisttps
jmp
test
fs
daa
xorl
sbb
gs
sbb
pop
inc
and
inc
sbb
jbe
ljmp
push
xchg
aad
xchg
or
and
sbb
icebp
enter
xor
movsl
mov
pop
ljmp
test
fisubrs
mov
lret
cmp
repnz
cmpsl
dec
jge
jg
inc
movsb
mov
insl
movsl
xor
inc
ret
cmc
lods
sahf
push
xchg
jl
call
inc
addl
sub
dec
adcl
rorl
repnz
ss
inc
xorb
es
or
in
cmpsb
mov
in
pop
fistl
out
jg
adc
pop
daa
iret
dec
adc
orb
fimull
les
mov
mov
test
in
sub
ja
pop
and
xor
and
adc
xchg
xchg
cmp
mov
dec
mov
fnstsw
loop
cltd
ret
cmpsl
mov
loope
or
jo
jmp
mov
jmp
push
outsb
ss
cmp
xorl
in
jle
pop
push
jnp
mov
fdivl
aaa
int
mov
mov
xor
mov
cmp
or
xchg
loop
cli
inc
mov
dec
jecxz
je
mov
btr
outsb
mov
jb
mov
pop
dec
xchg
add
adc
lock
cmc
pop
dec
call
pop
test
loopne
jb
test
hlt
jns
mov
sub
in
fisubrl
insl
mov
dec
push
insl
jecxz
pop
mov
or
sbb
mov
xchg
adc
cmovs
lds
xchg
xchg
sahf
sbb
int
inc
ret
dec
aam
and
jne
scas
xchg
pushf
jecxz
es
ds
loope
adc
dec
mov
push
fs
sub
scas
mov
sub
push
sbb
sti
adc
inc
adc
std
cmp
dec
and
in
cmp
sar
mov
setl
sti
out
mov
pop
incl
xor
xchg
pop
fs
iret
movsl
push
fsubr
add
and
aas
lea
pop
fsubs
adc
jecxz
imul
xor
movsb
push
fadds
hlt
ss
jmp
add
leave
add
jg
add
dec
cmp
dec
cli
sbb
cs
scas
dec
les
sub
fwait
das
cmp
sbb
pop
add
das
cmp
mov
sub
bound
stos
in
sbb
popf
iret
shll
sbb
and
mov
test
add
loope
fwait
test
std
adc
xor
and
test
adcb
addr16
sbb
mov
pop
gs
cltd
les
loopne
push
gs
aaa
and
mov
jno
ss
test
iret
or
negb
sub
movsb
fwait
and
nop
js
jmp
cwtl
test
mov
sbb
xchg
dec
into
cmp
and
inc
ss
jns
out
mul
cmp
inc
pop
sar
sbb
and
arpl
fmuls
lahf
jno
fsubrs
jge
mov
stos
fstpl
stos
push
ljmp
add
push
shlb
and
xchg
mov
xchg
jns
or
and
adc
in
xlat
xchg
push
jo
cmpsl
add
xor
xchg
xchg
cmp
mov
and
inc
xorl
add
mov
pop
inc
fsubs
mov
lock
in
shlb
into
push
jge
fstpl
push
in
ficoml
mov
push
in
pop
nop
dec
sub
jle
mov
adc
mov
mov
es
shlb
xacquire
lret
insb
int
jl
fs
xchg
mov
adcl
ret
cmp
shl
xlat
orb
jle
sbb
aas
push
and
pop
das
fwait
inc
ljmp
xor
mov
icebp
jmp
mov
dec
rorl
pop
pop
ret
cmp
push
mov
xchg
cmc
fadds
stos
or
mov
scas
ja
shlb
lds
jl
cmp
stc
inc
push
xchg
outsl
sub
xor
sub
mov
jl
aas
adc
ds
iret
sbb
shrl
and
aam
xor
test
cmp
cld
cmp
cmp
leave
lahf
cmp
jg
mov
sub
or
sub
sbb
inc
sub
or
lahf
mov
rorl
sbb
dec
ljmp
bound
test
add
jl
enter
mov
push
sub
mov
out
push
xor
in
je
mov
xchg
mov
xor
mov
push
mov
push
out
lret
testb
jge
xor
enter
pop
push
sahf
inc
stc
dec
push
scas
pop
pop
xchg
mulb
loope
xchg
xor
andb
aad
in
xor
mov
in
push
inc
movsb
fwait
jb
sub
mov
cwtl
test
scas
inc
jno
nop
pop
pop
lret
push
hlt
sbb
rcll
into
sbb
and
mov
stos
cmpsl
popa
cmc
add
lods
dec
ret
sbb
aam
je
shll
or
mov
inc
jb
xor
sbb
ret
sbb
lock
stc
jg
pushw
call
pop
fcompl
nop
adc
jmp
cmpsb
cltd
jl
pushf
xor
pop
fnstenv
inc
cwtl
add
xchg
addr16
in
les
mov
jmp
sub
jle
or
cmp
cmp
jl
rorl
aas
add
cwtl
xor
icebp
dec
lahf
jbe
std
mov
mov
test
push
pop
out
fxch
lea
mov
inc
jno
aas
sub
test
int3
mov
push
popf
loope
ror
and
cmpsl
pushf
pop
daa
hlt
or
mov
mov
test
loopne
in
lods
or
outsb
sbb
mov
xchg
or
stos
call
hlt
fbstp
pop
mov
inc
lods
imul
dec
inc
outsb
movsl
add
jne
or
ss
mov
hlt
or
inc
xor
adc
lcall
jge
push
mov
sub
pusha
pushf
pusha
or
sub
js
sub
test
filds
cwtl
rolb
out
jne
aam
aaa
pop
mov
ds
mov
rol
xchg
or
or
fsubl
xor
xchg
add
rolb
xor
cltd
aad
test
mov
out
iret
shrl
xor
add
push
imul
pusha
inc
add
sti
ja
cld
les
or
dec
xor
or
sbb
leave
ret
push
sub
addr16
movsl
dec
shr
shrl
es
sbb
test
mov
lret
js
pop
cwtl
lea
sub
push
mov
das
dec
fldenv
aaa
iret
inc
xor
inc
test
mov
ljmp
mov
mov
mov
mov
repnz
mov
xchg
mov
popf
rclb
std
jp
out
push
jl
cltd
mov
pop
push
insl
push
dec
or
pop
fwait
loope
adc
in
cmp
insl
jnp
lret
sub
lahf
sbb
mov
adc
pop
sbb
xor
andb
cmpsl
popa
insb
dec
dec
cmp
mov
xchg
adc
call
and
push
rcll
fwait
lcall
push
out
ss
jmp
in
mov
lock
pop
jmp
jnp
mov
jnp
cwtl
or
dec
repz
mov
bswap
pop
pop
or
mov
xor
mov
repz
add
and
aaa
or
iret
inc
leave
imull
sbb
push
xchg
pop
push
insl
push
jp
inc
xor
sub
jbe
ljmp
shrb
dec
jae
cmp
pop
mov
jl
ret
inc
or
divl
xchg
div
inc
mov
sbb
sub
lods
mov
inc
mov
add
mov
movsb
add
xchg
add
aas
mov
js
mov
and
dec
cltd
aad
adc
and
sbb
push
pop
inc
ja
mov
sahf
stc
add
push
insb
outsl
mov
frstor
pop
arpl
hlt
js
pop
dec
sar
js
arpl
pop
cmp
notl
pop
dec
jbe
pop
mov
paddsw
push
dec
add
cmpsb
lods
inc
std
std
mov
jo
cld
mov
and
xchg
cmp
lcall
nop
dec
xchg
xchg
cmp
test
push
push
popw
insl
mov
nop
loop
sbb
cmpsb
cmp
inc
repnz
add
dec
test
enter
sub
scas
pop
jnp
adc
sbb
out
jb
fwait
or
jns
sub
xor
mov
test
sbb
fbstp
xorb
jne
imul
mov
loope
dec
fwait
sbb
movsb
loop
outsl
iret
mov
dec
mov
daa
add
and
lods
ror
pop
mov
pop
inc
add
test
pop
pop
ja
pusha
or
cmp
scas
and
sub
push
pop
push
inc
lods
jecxz
jmp
data16
pop
addr16
insl
lahf
jecxz
fistl
les
je
in
adc
bound
pop
pushf
adc
out
ds
js
inc
cmp
in
std
xchg
adc
mov
dec
out
fidivrs
push
insl
std
popf
lods
pop
add
jle
lods
xlat
jg
or
pop
xchg
fs
and
addb
fidivl
push
ret
push
xor
xor
insb
push
adc
cmp
pushf
js
lea
into
and
aad
and
jl
dec
aam
decl
mov
inc
cmp
add
xor
jae
jne
sub
mov
or
fcoml
mov
enter
and
sub
popa
arpl
push
pop
out
pop
sub
mov
xor
arpl
cmp
or
adc
loop
cmpsb
imul
push
std
aaa
xchg
popa
in
jns
xchg
mov
mov
dec
movsl
lret
lods
pop
mov
adc
dec
into
jae
add
jge
ret
sbb
test
xor
jns
je
or
add
stos
cmp
cwtl
mov
inc
xchg
push
int3
push
mov
lret
mov
in
sub
mov
mov
and
insl
icebp
and
ror
pop
enter
mov
or
ljmp
mov
xor
out
div
cmp
decl
fldenv
test
fimull
ss
and
adc
test
test
outsl
and
aaa
mov
mov
clc
inc
int3
leave
mov
sti
jnp
cmp
in
stos
mov
in
adc
fbstp
pop
clc
data16
pushf
aad
push
out
and
pop
lock
gs
jb
pop
xchg
stos
enter
test
in
mov
dec
push
aas
stos
xchg
pop
arpl
lea
and
mov
data16
lods
rcll
cmp
lea
jmp
mov
je
cmp
rolb
sbb
mov
xor
jmp
push
push
cmp
movsl
fnop
les
movsl
cmpsl
mov
sbb
mov
dec
dec
rolb
and
sbb
out
lock
xchg
loope
out
sbb
jnp
movl
pushf
adc
inc
adc
loopne
lods
push
sti
xchg
adc
stc
gs
ret
mov
fwait
aaa
add
cmp
jo
ja
push
cmp
push
aad
dec
test
mov
mov
jno
pop
test
add
mov
adc
insl
dec
add
insl
sub
pop
inc
mov
lcall
inc
adc
xor
dec
mov
inc
test
sbb
mov
and
arpl
pop
cmp
pop
stos
lds
jecxz
neg
xlat
jp
jecxz
push
inc
das
pop
sbb
push
in
scas
pop
movsl
sbb
sub
pop
mov
xorb
repz
or
push
mov
cltd
ret
xchg
pop
push
insb
and
icebp
je
cld
sbb
ja
cli
sti
mov
and
movl
sbb
andl
add
mov
jge
jge
push
jns
cmpsl
fistps
iret
adc
jo
xchg
popf
xchg
insb
pop
popa
bound
fs
pop
popf
dec
bound
push
test
xchg
pop
mov
xor
jb
sub
sbb
pop
cmp
lods
test
add
pop
out
xchg
lret
add
ret
out
outsb
in
mov
call
xor
enter
push
push
cli
sti
ficoml
sti
scas
pop
loopne
xlat
mov
push
fdivl
and
mov
int3
xor
out
add
push
mov
ret
mov
cmp
mov
pop
scas
fisttps
and
out
call
incb
into
xor
lods
mov
jnp
iret
fnsave
pop
and
in
stos
sbbb
push
mov
adc
push
roll
dec
sub
out
rolb
cmp
das
mov
and
mov
imul
sbb
cli
jae
popw
in
mov
pushf
xlat
dec
repnz
xchg
or
subl
adc
nop
mov
fldenv
sbb
inc
inc
mov
inc
jo
fwait
adc
jp
xchg
push
xchg
fstps
or
xchg
sbb
shrb
xor
stc
mov
jbe
movb
fistl
nop
dec
ja
mov
inc
mov
cmpsb
xchg
pop
fnstsw
lcall
les
jns
arpl
sbb
shlb
or
fs
pusha
cmp
js
jp
shl
mov
mov
pop
sub
ljmp
inc
leave
or
fucomp
dec
cmp
cli
xchg
ljmp
outsl
mov
dec
inc
das
int3
jp
pop
xchg
dec
faddl
fs
push
jo
dec
cmp
int3
mov
data16
movsl
mov
scas
repnz
or
imul
jp
icebp
adc
adc
xchg
inc
xor
push
jbe
push
inc
sub
adc
sub
adc
add
out
mov
lret
mov
rorl
mov
js
repz
ret
shl
insl
lret
rcrb
pop
pop
xchg
orb
pop
jns
push
xchg
mov
sub
add
subb
in
mov
xor
jne
andb
lds
dec
adc
test
mov
sub
dec
cmpb
mov
and
dec
cltd
push
xor
data16
jp
mov
or
cmc
cmpsb
cmp
ss
and
xor
cmpsl
mov
lock
fbld
adc
or
cmp
lds
and
shl
cmc
rcrl
jl
sbb
or
push
adc
jo
movsl
pop
fs
cwtl
inc
jns
jno
push
pop
xor
sbb
xchg
pop
lock
cmpnltps
fstpl
cmp
fldcw
in
stos
sbb
int3
scas
cld
xchg
inc
je
repnz
sbb
int3
inc
jbe
cmc
mov
dec
pop
push
je
cmp
or
adc
pop
cmp
inc
and
adc
mov
adc
lea
sbb
popf
add
and
and
xchg
cs
sub
rcrb
jmp
mov
pop
bound
mov
push
clc
add
jp
andl
inc
inc
hlt
insl
xor
mov
add
adc
nop
pop
and
js
mov
shr
jp
inc
and
xor
inc
push
ljmp
popf
add
xchg
and
mov
push
cmp
fnsave
cs
std
jnp
in
sub
sub
jo
sub
stc
icebp
fnstenv
hlt
sbb
js
xchg
adc
ss
sub
rcr
jb
adc
rcrl
or
icebp
cmp
dec
mov
push
ljmp
ds
xlat
lock
testb
sub
push
sbb
mov
in
les
sbb
test
ds
mov
push
mov
leave
pop
pop
lods
and
jmp
int
lods
popa
out
push
mov
mov
push
inc
inc
rol
rolb
mov
xchg
cmpsb
adc
cmp
jns
test
mov
movl
jge
test
stos
or
or
aas
pop
cmp
inc
cli
and
mov
cli
push
cmp
pop
aaa
sbb
repz
or
pop
ja
insl
fisubs
or
inc
jbe
jl
pop
dec
push
jnp
pop
test
lret
dec
dec
jnp
ja
push
das
push
loopne
and
shl
scas
cmp
das
int
push
push
sub
mov
and
pop
lods
rcrl
xor
shll
maxps
and
or
aaa
loop
xor
fstpl
scas
loop
sub
cmc
cmc
fwait
and
ss
imulb
lcall
push
adc
aad
popf
ja
ljmp
adc
push
leave
int3
int
or
dec
lock
imul
mov
out
mov
mov
data16
into
dec
push
xor
hlt
pop
xor
aas
inc
xchg
ffreep
mov
and
aad
movl
lds
jge
pop
cmp
adc
sbb
jnp
adc
cli
cltd
scas
negl
mov
daa
add
xchg
jb
pop
xor
mov
dec
movsl
xchg
cld
sub
sub
aas
in
xchg
xchg
daa
jg
hlt
lea
out
lock
call
aaa
sarb
push
hlt
mov
pop
data16
inc
fnsave
inc
jg
iret
les
add
lret
test
jno
cld
mov
push
call
sbb
adc
pop
mov
loop
mov
jge
dec
pop
aas
adc
mov
fsubl
cmp
mov
adc
sub
adc
add
sbb
outsl
shll
iret
mov
mov
shl
jnp
push
repz
test
jae
popf
push
xlat
xor
push
pop
aas
sub
xchg
mov
out
je
test
into
cmpb
pop
sbb
fcmovbe
push
xchg
lods
fcompl
dec
jbe
dec
mov
inc
cmpb
popa
leave
pop
xor
mov
xchg
jg
push
insl
dec
jle
or
mov
aas
and
inc
movsl
sbb
cmc
jae
mov
bound
pop
xchg
adc
cltd
or
and
add
rcrb
ret
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
jmp
dec
mov
cmpsb
mov
mov
mov
cmpsb
sbb
adc
clc
jns
insl
not
jne
rorl
test
popa
or
jae
ud1
leave
jmp
dec
dec
push
adc
mov
pop
sub
decl
mov
inc
xchg
mov
cwtl
mov
mov
mov
sub
mov
and
fcmovnbe
mov
adc
std
ja
push
xor
loopne
xor
jb
aas
and
stos
sbb
mov
out
cmovb
int
fdiv
xchg
in
test
pop
add
push
jne
jb
jns
andb
imul
ror
fwait
lahf
subl
inc
jge
mov
or
mov
mov
in
addl
loope
ss
popl
push
xchg
fwait
xor
imulb
lcall
add
leave
sbb
or
dec
mov
call
ja
nop
pop
jl
out
imul
xor
hlt
push
add
push
fs
adc
sahf
ljmp
cli
loopne,pn
lret
xlat
mov
shlb
mov
test
jp
loope
inc
dec
or
pusha
mov
jg
jp
fnstsw
pop
adc
mov
testl
in
xor
aad
pushf
mov
mov
and
mov
pop
jo
or
mov
dec
inc
nop
sbb
sti
and
inc
daa
insb
xor
in
pushf
test
jns
clc
sub
outsl
pop
xor
xor
or
int3
mov
push
jge
mov
imul
dec
js
rclb
cwtl
xchg
aas
xchg
neg
mov
iret
mov
mov
pop
inc
jno
shlb
stos
xor
or
sbb
sbb
mov
fistpll
mov
mov
int3
add
mov
imul
jp
loope
icebp
sahf
mov
fnstenv
pop
aad
and
mov
jle
xor
cmp
ret
dec
dec
pusha
xchg
xchg
sarl
aam
into
icebp
mov
sub
lahf
test
ficoml
clc
aad
or
inc
std
mov
sbbl
push
bound
fidivs
and
jg
and
sar
out
xchg
notl
push
adc
leave
mov
sbb
mov
lock
adc
jp
scas
push
sbb
cmp
popf
lret
push
jp
pop
aad
mov
mov
xchg
and
clc
pop
out
xor
sbb
imul
sahf
popf
sbb
into
mov
cwtl
or
push
sub
jb
sub
mov
xchg
movsl
cmp
fwait
push
mov
nop
in
jb
jl
shl
sbb
mov
xchg
push
add
lret
or
mov
movsl
dec
gs
popf
outsl
mov
aas
and
dec
rol
xlat
fstpl
jle
arpl
cmpsl
xor
jle
fwait
cld
les
xor
xchg
ss
mov
add
mov
aam
out
std
rcrl
and
bound
sbb
leave
aaa
jns
repz
ja
mov
or
add
mov
and
sub
jl
inc
test
jnp
in
inc
or
jno
dec
inc
push
gs
xor
xor
test
aaa
inc
pop
push
xor
hlt
cltd
push
stc
mov
xor
xchg
push
sbb
xchg
add
xor
and
or
mov
repnz
mov
out
mov
inc
inc
jne
jo
shl
repz
in
pop
mov
jp
or
rclb
adc
mov
cmp
mov
loop
inc
mov
dec
adc
jle
jecxz
mov
dec
std
fldenv
aam
and
add
fptan
leave
leave
xor
adc
add
js
ljmp
jne
je
xchg
ljmp
aam
pop
dec
dec
pop
fwait
gs
lret
pop
pop
ja
jle
add
or
and
inc
add
repz
mov
or
or
xchg
adc
pop
mov
mov
loop
dec
add
push
test
fwait
sbb
adc
and
stc
sahf
xor
mull
jg
call
mov
jp
mov
insl
std
andb
or
test
inc
and
lods
adc
push
pop
lods
in
iret
xor
mov
addr16
mov
int
jb
loopne
adc
inc
ret
lret
sarl
rolb
inc
jo
call
test
inc
test
mov
or
outsb
aad
call
je
mov
loopne
arpl
mov
mov
inc
xchg
xchg
push
insb
or
mov
mov
push
xor
loopne
xchg
ret
push
xchg
lret
lods
mov
inc
test
dec
push
sahf
inc
mov
lods
fcmovnu
cmp
and
pop
movsb
mov
cmpsb
inc
loopne
and
mov
cld
insb
jge
insb
outsl
add
popa
mov
scas
inc
mov
adc
or
outsb
add
push
jnp
hlt
mov
cwtl
jmp
sub
pop
aam
jg
add
or
test
cli
jo
xor
in
pop
jmp
andb
rorb
push
aad
xchg
lret
pushf
lods
popa
lret
scas
mov
push
adc
out
sarb
icebp
adc
dec
icebp
and
fsubs
ficoml
jno
mov
pop
stc
jae
idivl
cs
fcom
call
push
mov
sbb
xchg
xchg
adc
xor
ss
in
fbstp
pop
push
xchg
aam
pop
dec
and
pop
aaa
andl
push
and
jmp
dec
lahf
pop
out
lea
inc
mov
jecxz
outsb
sbb
imul
cmc
lods
mov
cmp
loopne
or
aas
push
inc
shll
mov
or
mov
lcall
lea
pop
mov
aaa
lahf
cmp
push
inc
jb
inc
or
adcb
jns
rcrl
leave
and
jo
push
add
out
loopne
mov
nop
into
stos
mov
daa
mov
lahf
mov
and
rcrl
test
dec
push
xor
sub
sbb
xchg
icebp
repnz
fcoml
stos
mov
cmpsb
pop
inc
ficomps
xlat
mov
in
out
sbb
out
sarl
out
mov
and
push
xchg
bnd
inc
and
imul
adc
push
repz
xchg
popf
jg
inc
dec
push
jnp
jl
and
sarb
addr16
mov
xchg
jns
in
rcrb
push
add
push
sub
fistpll
push
and
dec
cmp
mov
jns
push
stc
xor
add
insb
fwait
stc
pop
push
pop
mov
ljmp
lods
fistpl
iret
jp
mov
xchg
inc
xor
and
jbe
lds
push
sub
sub
popf
sbbl
adc
adc
fistpll
sarb
add
into
in
ret
enter
mov
cmpsl
push
sbb
sub
and
pop
test
xchg
add
mulb
mov
sbb
sahf
aaa
sub
xlat
scas
int3
in
lcall
daa
sahf
push
mov
and
in
lcall
fnsave
sti
int3
in
cmp
pop
and
mov
fildll
dec
pop
sub
xor
leave
xchg
clc
dec
lods
scas
out
mov
pop
xor
inc
fcom
mov
add
pop
shrl
loopne
out
push
cwtl
dec
jne
push
hlt
and
jmp
shlb
add
dec
imul
jnp
xor
fwait
aad
les
xchg
ret
pop
lods
in
popa
mov
cmp
adc
add
mov
jne
insl
inc
hlt
xchg
in
mov
xor
mov
and
push
jbe
inc
sbb
pop
push
repnz
int
mov
scas
xor
sub
cmp
xchg
pop
jmp
sbb
sub
shll
rcrl
imul
insb
rorb
out
mov
mov
mov
ss
test
and
sbb
xlat
call
push
lret
push
dec
mov
fimull
inc
adc
int3
test
xchg
test
xor
into
int
xchg
xchg
stc
pusha
fs
ret
sub
jmp
mov
cmpsb
cmp
xchg
fdivrl
inc
or
jae
in
aad
loop
xchg
mov
lea
dec
cmp
xor
jecxz
outsb
inc
lcall
cs
stc
inc
lahf
xchg
aaa
add
xor
icebp
outsb
jg
fwait
test
fldt
push
jne
mov
pop
adc
mov
fsubrs
and
cmp
scas
lods
js
iret
stc
inc
sbb
mov
outsl
mov
mov
inc
or
scas
nop
sub
cmc
add
and
out
cltd
adc
lea
xchg
mov
or
push
cmc
xchg
movsl
push
mov
cmp
mov
jmp
xorb
xchg
roll
int3
or
loopne
jns
xchg
mov
roll
aaa
jnp
push
fdivr
jl
and
and
pop
add
xor
in
test
cmc
fwait
repnz
add
mov
jge
pop
fs
enter
or
xor
mov
js
sbb
insb
mov
mov
push
inc
sbb
sub
dec
mov
fcmovnbe
xor
jg
sti
pop
in
push
cmpsl
call
rol
sub
or
sahf
in
adc
cli
cmp
pop
mov
dec
push
mov
sub
mov
std
mov
in
inc
inc
repnz
lahf
fisttps
mov
adcb
clc
shll
sub
push
mul
repz
lahf
aad
jle
lahf
ljmp
mov
mov
in
push
shlb
cmp
jge
mov
ds
gs
jbe
in
xor
xchg
inc
jecxz
int
push
jle
jo
rcrb
mov
cli
fstl
adc
or
insl
int
jb
jp
xchg
adc
movsb
push
mov
push
cld
pop
cmc
rol
inc
jl
mov
pop
sti
and
and
enter
push
clc
je
sti
dec
xor
or
out
push
repz
popf
adc
out
clc
sub
sbb
ret
push
and
xchg
ja
in
pop
imul
push
xchg
repnz
pusha
xchg
data16
cmpsl
fmuls
int
xabort
dec
add
fsts
sub
jecxz
inc
or
sub
lcall
mov
movsb
es
sub
sub
aaa
into
mov
lds
push
push
mov
sbb
scas
mov
sub
or
cmpsb
fadds
or
sbb
mov
mov
mov
xchg
popa
mov
jno
cmpsl
sbb
jge
jge
stos
andl
push
inc
leave
pop
fldenv
cmp
aad
inc
jecxz
out
dec
cmp
rorb
xor
cmpsl
mov
sbb
popa
lret
mov
mov
stos
fdiv
les
cmp
lods
inc
sbb
fimuls
mov
neg
fnstenv
push
sbb
cmp
pop
push
jae
cmp
add
scas
fdiv
gs
mov
jne
pop
inc
fnstcw
adc
pop
ds
lea
push
lods
insb
insl
mov
jg
sub
ficoml
inc
rcrl
repnz
pop
sub
es
nop
or
inc
jl
mov
cmc
mov
fs
in
add
into
and
push
data16
mov
jns,pt
xor
shlb
mov
ss
pop
dec
sahf
push
stos
pop
cmp
pop
cli
mov
int
sbb
mov
jns
jne
sub
cmc
pop
cmp
movsl
mov
mov
rcr
adc
jmp
and
loop
in
repz
gs
ljmp
push
aad
push
or
pop
enter
xor
shr
xchg
jecxz
sbb
jp
je
loope
pusha
out
mov
push
lds
hlt
push
xchg
addl
insl
enter
mov
enter
mov
push
mov
rolb
cmp
mov
addr16
xchg
adc
inc
sub
cmc
mov
adc
dec
lahf
in
add
mov
scas
xor
push
aad
fbstp
out
das
cli
cmpsl
xor
sub
arpl
jl
clc
enter
test
mov
addr16
or
push
ret
jnp
call
push
sar
mov
inc
cmpb
push
int3
pop
jnp
adc
repnz
fdivrl
pop
dec
cmpsb
jecxz
mov
add
add
test
xor
jmp
xorps
push
hlt
pop
inc
mov
repnz
test
sbb
adc
in
add
dec
pusha
jae
lcall
les
int
je
sarb
cld
pop
dec
fcmovb
imul
adc
into
mov
out
dec
mov
scas
repz
mov
mov
les
icebp
sahf
sbb
mov
flds
mul
pop
in
leave
test
pop
cmp
and
jb
mov
fcomi
rcr
ds
mov
lahf
popf
add
and
fnsave
adc
in
sub
xchg
jg
xor
aas
and
nop
cmp
and
cmp
lods
sbb
xchg
subl
dec
sbb
in
cmpsb
scas
lret
sbb
out
es
jge
lds
mov
sub
stos
sbb
cmp
rclb
pop
decb
mov
clc
sbb
inc
mov
jmp
sub
ds
in
int3
subb
ljmp
jne
mov
add
pop
mov
fists
fstpl
pop
dec
or
in
cmp
jecxz
push
inc
scas
cli
mov
inc
jmp
mov
loop
lea
or
ret
fs
mov
and
pushf
rcrl
daa
push
sub
into
jp
sub
xor
push
fcoml
hlt
addl
and
ja
ljmp
mov
lret
ret
add
dec
lock
xchg
and
cmp
add
sbb
jg
or
je
or
add
pushf
lock
or
je
jle
dec
dec
xchg
in
push
pop
push
loope
aas
push
mov
cli
rcl
cmp
cld
daa
pop
stos
test
add
xchg
in
rcll
mov
sbb
aaa
pop
mov
mov
arpl
xchg
pop
jo
adc
pop
adc
test
push
outsl
rcrl
popf
sub
int
push
outsb
ss
pop
lods
mov
mov
loop
int
rol
dec
xchg
neg
jno
xchg
xor
fldl
orb
stos
mov
cld
adc
xchg
sub
xchg
je
fcoms
sub
xlat
clc
mov
out
pop
gs
mov
mov
aam
mov
cmp
xchg
or
int
test
push
popa
insb
jge,pt
inc
push
test
sub
jbe
cmp
in
mov
xor
xchg
test
adc
xor
push
das
pop
sub
mov
sub
and
rol
pop
addr16
movsl
icebp
dec
add
lea
testb
adc
jbe
pop
lea
fsub
sub
outsb
daa
leave
mov
mov
sbb
adc
outsl
test
mov
jno
mov
or
into
push
xchg
mov
aaa
mov
jns
add
pop
cs
dec
cmpsl
lahf
cwtl
dec
std
js
loope
out
or
or
cmpsl
mov
xchg
xor
in
and
shll
lahf
inc
stc
lods
daa
add
xchg
pop
or
lods
sub
fsubrl
cld
mov
ljmp
iret
call
xor
fsts
dec
and
add
ret
ds
in
dec
cltd
jge
cmpsl
cmp
inc
mov
jl
cmp
das
lret
test
std
push
outsb
movsb
mov
sbbl
insl
ss
pushf
loop
sub
jno
mov
cld
jge
out
data16
jnp
adc
lock
push
je
aad
xchg
sbb
scas
xchg
addr16
dec
or
lock
cli
dec
mov
repnz
jo
imul
loop
ret
shl
in
inc
in
in
jge
jo
xor
sub
cs
mov
inc
xchg
je
xchg
std
mov
daa
sub
xchg
jnp
loop
int
cmpsb
aaa
ret
add
inc
pop
push
adc
into
scas
jne
xchg
clc
ret
divl
dec
add
and
rorl
popa
jge
fwait
jp
jg
dec
xor
jmp
xorl
push
mov
lea
cmp
add
subb
stos
test
rol
xchg
scas
outsb
test
stos
xchg
jl
test
inc
sub
stos
or
mov
dec
xor
out
cld
mov
pushf
lahf
ds
mov
outsb
add
push
pop
push
test
or
rcrl
dec
mov
test
add
jnp
rcrb
and
sbb
sahf
pusha
outsl
push
insb
loop
mov
add
jle
out
icebp
push
or
dec
ret
adc
mov
inc
sub
ja
cmp
cmp
ret
jo
fsub
mov
test
cmp
or
dec
cltd
fistpll
scas
mov
imul
int3
dec
mov
push
out
addr16
int3
call
fchs
pmullw
xchg
fidivrl
mov
add
mov
adc
ret
fwait
jb
lcall
inc
das
test
packsswb
sub
fcomps
jmp
cmp
mov
pop
sub
aaa
add
add
jmp
test
mov
jno
hlt
cmc
jl
sub
insl
icebp
aaa
loope
jno
jo
mov
mov
mov
pop
add
das
nop
stc
xor
xor
and
jl
push
dec
mov
clc
ret
test
inc
clc
les
jecxz
xlat
add
jg
xor
xchg
jecxz
mov
cmc
xchg
lods
mov
cmp
sbb
sahf
dec
xchg
jnp
notl
push
mov
shlb
sub
scas
jae
std
mov
mov
xor
shll
dec
ss
adc
adc
int3
jnp
push
lods
das
test
push
cwtl
mov
cli
popf
mov
pop
mov
mov
mov
mov
mov
inc
adc
mov
sub
dec
jno
lcall
std
mov
pop
in
std
ficomps
arpl
cmp
cmpsl
mov
inc
roll
dec
subl
fistpll
jecxz
fmuls
inc
xor
push
or
mov
jmp
adc
aaa
jp
push
lahf
stos
inc
xor
pushf
xchg
leave
icebp
add
loop
iret
dec
in
add
and
fnsave
cld
icebp
cld
daa
lods
lahf
test
lock
shrl
in
jbe
sbb
or
push
pop
xor
or
cmp
shll
mov
out
cld
das
bound
fsub
out
add
cs
pop
xor
mov
cmpsb
push
cmpsl
and
push
test
clc
mov
cwtl
addr16
pop
in
add
popf
inc
and
xor
jbe
xchg
clc
outsl
cmp
ds
add
add
and
cltd
out
movsl
jno
out
jmp
jecxz
hlt
pop
mov
inc
testl
inc
movsw
add
and
sbb
imul
icebp
cmp
push
aaa
stc
scas
xchg
dec
pop
cli
jp
pop
insl
loop
sbb
inc
and
cmpsb
dec
shrb
inc
ljmp
push
out
int
or
not
mov
or
jl
test
mov
add
pop
mov
setle
int
cmp
mov
jge
jno
push
sub
lahf
scas
xchg
in
push
jb
insb
add
mov
push
pop
adc
roll
test
or
mov
shlb
jp
dec
int3
lret
cmpb
mov
jnp
cwtl
pusha
xor
aad
sub
test
leave
sub
sub
hlt
mov
jns
aaa
inc
in
mov
popa
and
cwtl
sti
xor
xchg
adc
dec
mov
lea
sbb
test
push
cmp
or
lahf
loop
subl
or
mov
aaa
pop
jmp
aam
aaa
in
mov
testl
int3
adc
sub
mov
shlb
mov
div
dec
sbb
out
or
xchg
out
ss
fnstenv
cmp
fistl
insl
movsl
push
stos
jmp
xchg
sbb
sbb
push
data16
lock
aad
pop
sbb
push
sub
push
and
jle
insb
movsb
outsl
sbb
jg
rcll
pop
sbb
add
cld
and
push
daa
jb
add
inc
imul
or
jo
pushf
fimuls
jmp
xchg
sub
sub
shlb
cmpsb
incb
std
out
pop
cmp
enter
out
aas
lcall
pop
test
or
gs
fdivrl
jl
push
mov
pop
or
jb
sbb
xchg
mov
push
mov
mov
mov
testb
or
jg
push
and
or
punpcklbw
mov
shr
pop
lret
add
insl
jne
push
add
add
lods
adc
mov
repz
mov
cmp
add
inc
jle
jle
movsl
fs
scas
repnz
pop
push
popa
fisttpll
jecxz
and
adc
sahf
aam
aaa
pusha
mov
nop
rcll
or
call
cmpsl
mov
xor
scas
inc
jle
mov
cmp
rorb
push
test
push
fistl
in
fistps
cmc
out
out
sbb
sub
sbbb
xchg
pop
pop
lock
bnd
sub
and
out
shrb
cwtl
mov
arpl
jle
dec
gs
jge
jle
out
pop
mov
hlt
aaa
mov
pop
pop
sti
mov
sbb
inc
out
lahf
iret
ja
imul
add
add
sarl
mov
xor
mov
sarb
add
stos
jb
outsb
xor
mov
les
int
out
enter
adc
loop
and
pusha
clc
push
icebp
xor
pop
sbb
push
out
cld
hlt
cmp
xor
and
arpl
lods
lea
stos
push
xchg
cli
mov
and
leave
repnz
lods
adc
xchg
push
imul
lret
scas
mov
push
test
lcall
clc
xor
mov
loop
mov
popa
femms
jne
in
jg
jb
stos
cld
cmpsb
inc
xchg
nop
push
popa
outsl
push
shll
adc
mov
pop
sbb
dec
or
mov
or
or
inc
hlt
scas
icebp
pop
imul
xchg
mov
jne
jl
pop
pop
dec
leave
stos
shrb
aam
push
cltd
inc
je
inc
das
aad
push
xchg
fstps
mov
or
jno
neg
pop
xlat
fisubs
sbb
inc
cmpsl
jo
jae
or
inc
inc
xchg
addr16
push
inc
subb
cmpsb
mov
push
sbbl
sahf
pop
jne
mov
xor
sbb
clc
repnz
lahf
sub
mov
out
mov
imulb
lahf
lds
test
xor
dec
shlb
mov
out
or
lock
cli
clc
inc
sub
enter
aad
pop
push
push
mulb
js
sub
aad
jne
je
loope
mov
fldl
cld
shll
pop
icebp
mov
dec
and
cmc
scas
mov
jl
dec
dec
sub
and
fdivrl
pop
xchg
push
xchg
pop
mov
loopne
sub
pop
punpckldq
rcrb
neg
loope
push
fimuls
pop
cmp
inc
dec
cmpl
pop
push
cmp
and
push
push
daa
cmpsl
in
push
js
push
mov
mov
push
jge
jb
int3
scas
xchg
push
inc
stos
dec
sub
repz
xor
rcrl
mov
test
std
aaa
in
in
or
dec
dec
fsubl
sub
and
xor
rorl
fimuls
fiaddl
fimuls
xchg
cmp
push
ret
or
mov
popf
mov
sub
jb
mov
sbbb
je
fnstenv
pop
fwait
xor
push
xlat
mov
roll
sbb
inc
xchg
enter
sub
ficomps
push
adc
jge
xor
stos
push
sub
mov
mov
push
dec
ficomps
add
roll
sbb
cld
add
int3
fcoms
mov
into
fs
test
ret
mov
xor
push
or
es
mov
inc
add
bound
jns
cwtl
test
leave
or
xchg
cmc
imul
rorl
dec
dec
fcomps
or
aas
sbbl
mov
lahf
inc
pushf
fldenv
aaa
xchg
fidivs
std
add
and
pop
pop
add
cwtl
mov
testl
insl
push
xlat
sbb
pop
pop
pop
idivb
mov
call
xchg
add
loopne
sbb
lods
aaa
push
mov
xchg
les
pop
push
rcrl
inc
nop
xchg
xchg
imul
and
add
jbe
jmp
jmp
pop
add
lds
out
pushf
push
imul
mov
inc
push
cmp
imul
or
mov
or
ljmp
cmp
jbe
xchg
push
in
icebp
pop
pop
insb
jnp
mov
fmull
paddsw
pop
mov
fsubs
lea
sbb
lods
cmpsb
popf
bnd
js
mov
mov
jbe
push
pop
jae
cwtl
pop
out
xchg
out
arpl
add
lods
js
andl
sti
or
mov
je
sbb
push
or
xor
f2xm1
inc
mov
shl
jle
cmpsb
mov
pop
inc
pop
aaa
mov
xchg
or
leave
sub
stos
rorl
sub
lret
jno
push
cmp
mov
cmp
push
lret
jg
xchg
mov
sub
ljmp
ror
mov
jg
mov
pop
pop
ficoml
fstpl
cmp
mov
push
fucomi
outsb
or
dec
dec
imul
mov
repz
iret
jnp
mov
pop
jmp
lds
jo
pop
es
gs
dec
sub
and
ljmp
xor
push
shll
mov
negb
add
xchg
mov
push
imul
inc
shl
pop
adc
out
rcrl
pop
popa
jge
add
scas
push
pop
ja
adc
mov
aam
orl
clc
rcrl
pand
mov
xor
es
mov
pop
lods
push
jge
iret
popf
outsl
inc
cmp
dec
jge
repz
mov
into
pop
and
out
inc
sub
lea
dec
and
fnstcw
pop
add
pop
jmp
inc
xchg
dec
and
lcall
repnz
mov
call
addb
jg
mov
test
sahf
push
push
cmp
adc
jg
daa
inc
xor
loope
xor
jnp
in
pop
or
pop
movsb
pop
fwait
in
and
xor
mov
lea
inc
in
in
arpl
lds
push
and
testl
push
dec
sbb
gs
pop
inc
pop
pop
sub
out
mov
imul
movb
pop
xchg
cs
and
nop
inc
cwtl
mov
dec
pop
pop
int
icebp
or
add
pop
rolb
push
add
adc
rcrl
xlat
xor
xor
lahf
jl
jecxz
rclb
xor
mov
cmp
ret
arpl
adc
inc
mov
push
mov
cmp
xchg
xchg
jo
sub
mov
lods
ja
and
stos
movsl
je
in
mov
and
dec
sub
adc
daa
sbb
cmp
push
cmpsl
outsb
sub
dec
adc
pop
les
adc
mov
test
adc
mov
aaa
jns
lcall
lcall
arpl
cli
leave
cld
sbb
mov
dec
inc
or
nop
test
outsb
jae
or
sub
cmp
push
jno
arpl
xchg
stos
push
sbb
adc
arpl
int3
imul
pop
sbb
sti
adc
push
imul
aas
jge
jo
insb
mov
mov
shl
test
es
cmpl
xchg
into
cli
aad
add
mov
push
add
pushf
jecxz
ret
gs
mov
decl
lods
sub
dec
nop
lret
add
inc
push
and
mov
lods
sub
adc
es
das
mov
sbb
lock
sbb
shlb
popa
inc
cmp
add
push
clc
pop
pop
mov
or
jp
in
out
pop
dec
sti
jbe
js
inc
ficompl
nop
mov
mov
mov
sub
cld
incl
xor
pop
lret
lds
lods
push
cmp
and
test
test
mov
jae
data16
add
loop
into
into
rep
out
jae
cmpsl
cmp
in
push
mov
push
or
scas
roll
pop
pop
lahf
clc
inc
cli
out
pop
lock
mov
pop
dec
pop
cltd
adc
in
lea
enter
jae
orb
xor
add
lahf
popf
sbb
imul
jnp
mov
rorb
dec
mov
sbbl
jl
aam
add
xor
sub
out
ret
adc
push
lahf
inc
out
adc
xor
mov
sub
xor
adc
cmpsb
int3
cltd
add
or
jnp
popa
mov
mov
or
jbe
xor
out
and
popa
sbb
sub
jle
in
xor
fisubl
lcall
xlat
and
call
int
adc
rcrb
repnz
insb
xchg
jp
adc
mov
inc
loop
aas
inc
push
pop
jae
mov
jo
out
mov
js
movsb
arpl
pop
nop
mov
sbb
mov
mov
pop
ss
decl
hlt
lock
out
mov
push
inc
sbb
jno
or
loopne
cwtl
inc
jnp
ror
inc
je
mov
inc
push
ljmp
out
imul
pusha
pop
dec
cwtl
lcall
nop
pop
mov
cmpsl
xor
cmp
cwtl
xchg
inc
mov
mov
int3
popa
jecxz
outsb
xor
adc
lock
les
cmp
push
in
ret
aam
push
out
mov
dec
and
adc
pop
adc
xchg
call
push
jns
jno
or
pop
add
mov
outsl
and
fadds
cmc
pop
adc
test
sarl
ret
or
add
mov
imul
mov
xor
mov
lea
jmp
inc
outsl
mov
outsl
rcl
mov
sti
push
hlt
bound
pop
bound
pop
aas
aad
jle
and
push
out
aad
fwait
sbb
bound
cmc
xchg
jno
das
jo
jge
push
cmp
jne
shlb
cmpsl
imul
out
inc
add
hlt
movsl
mov
lret
or
lock
add
jl
popa
popa
or
lret
int3
jle
mov
aas
jo
in
pushf
and
ficoml
jmp
daa
push
cld
jmp
cmp
pushf
add
lds
loopne
dec
push
xor
ficoms
jae
icebp
mov
nop
in
mov
lea
add
fwait
mov
cmp
pop
pop
rcrb
ror
pop
or
inc
aad
lods
mov
jne
loopne
mov
lret
cli
mov
jns
inc
sar
sbb
fcoms
test
je
push
and
fs
add
sbb
push
cmp
inc
nop
outsb
nop
inc
sbb
gs
fsubrp
xchg
lds
push
add
aaa
fs
push
popa
sbb
loope
lahf
mov
and
xchg
nop
mov
mov
xchg
and
stc
cld
jne
cmp
inc
in
lock
xchg
inc
mov
int
nop
lahf
test
aad
repnz
adc
shlb
les
dec
mov
adc
jmp
stc
jg
xor
mov
sbb
pop
jge
repnz
stc
popf
jl
xchg
aam
mov
mov
cmpsl
mov
js
int3
rol
cmc
enter
nop
mov
push
into
mov
xor
push
enter
adc
push
sbb
jmp
sbb
sti
leave
push
out
cmp
inc
add
mov
maxps
jno
leave
rclb
lods
lahf
push
xorb
adc
aaa
and
jbe
or
pop
and
cs
inc
inc
mov
add
lods
lds
sbb
outsb
and
mov
jne
xor
bound
dec
add
out
ss
push
mov
rolb
xor
jb
xchg
gs
or
stos
insb
xorl
mov
mov
sub
xchg
insl
movsl
or
sub
inc
outsl
push
fcomip
rorb
jbe
cmp
jno
sub
lods
add
int
dec
jle
dec
adc
jae
dec
movsl
bound
ss
dec
test
push
in
test
fdivs
pushl
ljmp
flds
roll
dec
or
popa
inc
mov
dec
mov
mov
lods
mov
stc
aaa
test
dec
pop
pop
xor
sarb
test
xchg
mov
lock
out
mov
ret
dec
sbb
jne
dec
mov
sub
dec
cmp
in
jl
xchg
add
out
and
cwtl
arpl
leave
jle
cld
add
std
push
mov
adc
push
jbe
or
push
push
jp
imul
xchg
nop
ret
mov
and
hlt
or
xorb
mov
mov
add
push
or
cli
push
push
xchg
sbbb
push
mov
dec
fildl
incl
sahf
dec
xchg
xchg
jmp
mov
daa
addl
cmpsb
jge
jno
dec
sbb
jns
sbb
loopne
sbb
pop
flds
lahf
daa
subb
in
movsb
xchg
mov
and
call
pop
je
add
cmp
xor
push
inc
jge
ret
ficomps
andb
lea
gs
int3
adc
mov
insl
mov
push
or
dec
cmpsl
sub
lret
fld
scas
stos
mov
mov
scas
mov
cmp
addr16
adc
adc
xor
add
repz
lcall
mov
cltd
in
and
in
pusha
sub
popa
xchg
loop
in
jb
stos
dec
dec
add
aam
clc
mov
frstor
xor
lea
dec
jno
sub
fsubs
inc
jg
cmp
pop
mov
scas
sbb
cmp
pop
in
js
or
negb
push
ja
es
xchg
and
jp
scas
and
mov
inc
stos
add
rclb
sbb
stos
push
cmp
adc
in
jbe
mov
adc
pusha
add
dec
sub
pop
mov
arpl
mov
test
lret
scas
add
or
stos
in
add
mov
jmp
xchg
push
aam
pop
daa
cmpsl
popa
inc
xor
jl
and
sbb
mov
sub
inc
xchg
sti
dec
insl
out
pop
pop
ja
adc
pop
xor
pushf
cwtl
fxch
or
push
lods
imul
dec
orl
cmpsb
xor
or
sbb
or
mov
test
or
rclb
stos
jno
and
enter
aam
sahf
pop
bound
cmp
push
pushw
sbb
pop
rorb
mov
push
sbb
mov
stc
and
mov
xor
in
xchg
ja
add
inc
sub
xchg
mov
mov
jle
xchg
mov
push
push
fisubl
fnstcw
les
pcmpeqd
fwait
xchg
mov
cs
or
aaa
or
sbb
and
inc
cmp
and
sub
ret
cmp
mov
jge
in
imul
xchg
jmp
pushf
or
and
addr16
add
mov
loopne
rcrl
jae
test
jno
fsin
mov
data16
sarb
dec
pusha
jp
call
sub
fistpll
jle
lock
js
aas
sarb
push
adc
mov
roll
cmp
mov
arpl
or
adc
mov
mov
mov
popf
insb
nop
mov
jg
mov
insl
pop
hlt
cmp
push
add
out
add
cmc
sub
xchg
test
test
das
mov
aam
and
pop
sub
jnp
sti
je
lock
lods
sbb
mov
cli
ficoml
enter
and
daa
out
sub
popf
gs
scas
daa
add
test
ja
adc
mov
jmp
ficompl
xchg
icebp
inc
cs
mov
add
cs
or
fcomps
aaa
xor
mov
xchg
or
adc
or
movsl
xchg
ljmp
data16
popa
pop
pop
es
xchg
jle
sub
mov
pushf
out
mov
test
jle
adc
inc
push
or
leave
notb
adc
movsb
orb
xor
xor
lds
and
jns
jle
add
sub
push
and
mov
fwait
popf
loope
add
stos
dec
dec
cmp
cmpsl
frstpm(287
repnz
cld
jl
xlat
neg
stos
mov
inc
popa
fdivl
frstor
in
in
cmp
xor
mov
jge
xchg
jbe
adc
push
cmc
rcrb
movsb
sub
cmp
pop
pop
sbb
mov
shlb
fadd
aad
outsl
movsl
ljmp
gs
cmpsl
rcl
jne
dec
sbb
or
inc
test
mov
bound
sbb
in
outsl
lret
mov
in
pop
insb
cmp
jo
aam
loop
dec
mov
cmc
cltd
dec
cmc
and
jl
dec
sbb
shrb
ja
das
ficoms
shl
lods
dec
imul
inc
inc
pop
xchg
cmpsb
or
je
pusha
adc
xor
cmp
scas
call
loope
lret
pop
inc
lcall
cwtl
xor
or
jbe
push
cwtl
fistpll
xlat
repnz
mov
jmp
cmp
mov
dec
pop
stos
inc
mov
cs
push
not
adcb
movsl
jl
sbb
dec
xor
xor
bswap
rcl
mov
daa
fwait
out
les
push
xchg
inc
push
add
bound
iret
mov
xchg
lods
pop
push
lret
lods
pop
mov
out
push
sub
daa
lcall
sub
pop
clc
sbb
nop
aaa
lret
jge
mov
cltd
fs
push
and
jnp
cli
jl
movsl
jecxz
and
aam
mov
in
cmp
mov
clc
jbe
adc
mov
dec
add
adc
mov
enter
push
in
ja
jns
adc
rorb
and
inc
in
fdivrs
loopne
shlb
xor
cmp
dec
int
pop
aaa
pushf
xchg
cmp
push
aas
inc
cmpsb
aad
jns
or
aam
mov
cmp
arpl
sub
and
push
xor
cld
jo
outsl
movsl
test
xchg
arpl
stc
loope
mov
mov
stos
push
clc
jne
adc
add
cmpsl
push
xlat
pop
jne
mov
mov
add
imul
insl
mov
movsl
out
inc
icebp
sbb
mov
loopne
jne
cmpb
xor
rcl
push
icebp
jnp
jmp
lahf
sub
sbb
push
cltd
sbb
scas
call
data16
icebp
lods
push
sub
in
stos
into
and
lahf
dec
add
jle
shlb
xlat
cmp
shl
rep
push
repz
push
pop
aam
shll
inc
jae
and
insl
shlw
xlat
or
gs
add
pushf
inc
sarb
rol
and
fistpl
js
push
ret
adc
psrad
adc
out
shl
fmull
add
mov
adc
sbb
mov
add
fwait
es
mov
testb
pushf
adc
in
ffreep
pop
mov
lods
ja
lea
mov
cs
mov
negb
mov
repz
mov
sbb
pushl
mov
mulb
jecxz
mov
ljmp
add
cmp
mov
movsl
shrl
add
sub
cmpsb
lahf
mov
and
ret
mov
jae
stc
dec
mov
out
std
xchg
nop
fstpt
fbld
cmp
or
iret
fcmovne
hlt
jle
xchg
push
shlb
psubusb
test
rcrl
clc
pop
scas
mov
cli
mov
xchg
jle
addr16
inc
add
mov
fwait
in
jne
xlat
add
adc
push
jns
xor
add
sub
lcall
mov
jp
adc
stos
std
stos
loope
repz
movsb
cmp
imul
cmp
incb
adc
ss
lods
mov
andl
and
mov
fidivs
shr
rolb
dec
jl
dec
test
fstp
out
jmp
lds
xchg
push
push
adc
outsb
lods
lds
lds
add
add
lahf
cmp
pusha
lods
push
jmp
xchg
mov
push
lds
push
outsl
dec
cmp
iret
call
or
cmp
inc
adc
pop
js
adcb
icebp
aaa
js
mov
xadd
int
xchg
mov
mov
js
add
scas
sti
shll
scas
or
sub
pop
test
or
xor
dec
xchg
jns
mov
xlat
add
adc
and
sub
mov
cmp
jns
dec
inc
pushf
mov
fistpl
and
test
out
test
add
xchg
and
cmpsb
cs
lea
dec
subl
mov
add
int3
sub
xor
cwtl
mov
inc
add
out
dec
dec
xor
and
add
inc
jns
out
and
cwtl
in
mov
inc
pop
imul
dec
dec
sbb
les
cmpsb
aas
sub
pusha
adc
mov
pop
scas
mov
cmp
imull
mov
and
cmp
push
mov
xorl
insl
ljmp
stc
dec
ret
lahf
les
loopne
inc
push
cmpsb
in
orb
dec
rcr
mov
lods
cmp
inc
pop
fsubr
adc
cs
imul
push
popf
repz
or
or
xchg
mov
or
push
lock
xchg
movsl
shl
xchg
loope
inc
sub
xor
rolb
insl
int3
popa
dec
adc
push
hlt
mov
outsb
xor
lods
outsl
sub
xor
cmc
ljmp
fisttps
in
leave
stos
cmp
mov
jl
emms
mov
jecxz
xchg
fidivrs
lods
daa
push
loop
cltd
mov
sub
cmc
mull
lods
aad
cmp
cmp
dec
mov
jb
add
mov
leave
cmp
cmpsl
or
add
ss
out
mulb
outsb
xchg
cwtl
std
out
daa
jmp
popa
es
xchg
sbb
or
inc
or
cli
add
cmpsl
add
pusha
scas
sti
clc
dec
push
push
aam
neg
jg
fisubs
arpl
fdivs
xor
jge
test
and
xor
push
lods
push
jnp
incb
sbb
pushf
clc
push
cmp
mov
loope
rcr
inc
add
cld
pop
mov
int
addr16
xchg
xchg
mov
xchg
test
das
lea
dec
and
insb
ds
icebp
add
arpl
mov
iret
ljmp
shl
xchg
fldl
pop
xor
xor
xor
adc
shlb
jns
inc
or
dec
jne
outsb
mov
mov
dec
cmpsb
pop
fstpt
jns
jle
xor
lods
jnp
testb
mov
idivb
sbb
xchg
pop
sub
fldcw
xchg
sbb
mov
pop
xchg
out
iret
dec
cmp
xor
icebp
test
add
outsw
sbb
imul
pop
shlb
mov
xor
jmp
jne
lret
jbe
jb
dec
inc
scas
xchg
pushl
sub
push
push
pop
pop
inc
jne
sub
or
pop
clc
xor
pop
dec
dec
jp
xor
incl
xor
dec
mov
mov
jo
or
sbb
test
fwait
jmp
fwait
call
in
call
enter
fdivl
pop
and
mov
es
dec
setle
mov
adc
sub
inc
sahf
sahf
add
sti
and
icebp
xchg
xchg
mov
sub
call
or
out
push
movsl
repnz
lods
adc
mov
shrl
push
nop
mov
dec
inc
iret
and
repz
add
and
cltd
sbb
jns
pusha
adc
mov
ss
sub
pushf
ljmp
iret
mulps
mov
aad
sbb
test
ret
add
pop
popl
ror
ja
mov
sbb
outsb
inc
xor
mov
daa
fidivl
aaa
mov
mov
or
outsb
cmp
orl
ror
mov
jmp
bound
jno
xchg
lcall
cmpsl
push
and
insb
out
add
push
sbb
inc
loop
xor
shll
je
fadds
rcll
sti
ds
xor
xor
and
xchg
sbb
push
rcl
out
lods
cmp
ja
mov
mov
sbb
fstpt
xchg
cmp
loop
bound
xorb
jae
xchg
aaa
mov
test
and
fnsave
nop
das
push
xchg
int
jp
cs
inc
sbb
mov
aam
cmc
push
xor
sub
pop
js
loopne
jmp
cmc
cmp
mov
in
jmp
xor
and
addr16
sub
dec
dec
bound
adc
push
fldcw
adc
loopne
dec
add
mov
out
fsubr
jne
fdivrl
rcrl
adc
mov
xchg
add
outsl
mov
adc
call
inc
loop
or
mov
pop
mov
pop
std
add
sub
inc
leave
mov
movsl
fnsave
push
add
pop
pop
and
movsl
cwtl
mov
gs
addl
addr16
cmpsl
pop
stos
xchg
sub
dec
cmp
jo
pop
pop
insb
sub
mov
ret
add
shrb
inc
into
lahf
xchg
sub
pop
fucomip
pop
aaa
mov
adc
push
dec
jmp
mov
jl
add
pop
popf
xchg
pop
in
xchg
dec
fistpl
scas
cltd
xchg
sbb
mov
outsb
and
or
sbb
xchg
mov
fbstp
jecxz
push
mov
and
mov
inc
inc
mov
add
cmp
push
jecxz
outsb
dec
and
xchg
xchg
inc
jmp
iret
adc
call
mov
test
mov
call
adc
daa
push
insl
and
dec
xor
adc
sti
cmp
mov
fst
push
xchg
loop
fildll
push
das
repz
or
imul
orb
push
fistpll
or
push
imul
sub
xor
mov
addb
lds
jnp
sbb
test
lret
and
push
mov
and
add
or
cld
movsb
in
cmp
xchg
fistpll
push
jns
pop
aaa
ffreep
or
cmc
faddl
roll
cltd
pop
test
mov
pusha
shl
and
imul
xchg
ds
push
pop
jp
mov
test
push
mov
xchg
movsb
pop
fisubrs
add
cli
adc
int3
push
lods
xchg
sbb
les
movsb
jge
clc
or
xchg
shlb
mov
pop
outsl
loopne
xchg
fcomps
jne
mov
out
fcmovbe
mov
sub
aad
popf
xchg
mov
in
ret
xchg
add
addl
or
int3
ds
mov
add
pop
jne
dec
in
lret
push
cmpsb
mov
mov
adc
push
loopne
rclb
cmp
pop
gs
mov
pop
add
or
das
pop
push
shrb
and
sub
dec
push
push
insb
dec
mov
jecxz
pop
adc
mov
adc
popa
push
xchg
jae
xor
sahf
jp
sub
addr16
loope
mov
or
add
push
outsb
xor
cwtl
sub
rcrl
sub
pop
jnp
fs
fstps
xchg
sub
xchg
mov
inc
jg
add
lret
lcall
fcomp
fwait
dec
sbb
into
jl
mov
dec
add
inc
pop
mov
cmp
push
or
in
mov
mov
and
sbb
add
in
addr16
cs
insl
mov
dec
cmp
xchg
ss
dec
das
cmc
cmp
insb
cld
out
push
and
shrl
stc
fdivl
fisttpl
push
mov
int3
jnp
mov
xchg
jae
jle
xor
enter
sbb
inc
cld
push
mov
call
mov
loopne
rcrl
orl
ror
iret
icebp
lret
in
sarb
loope
lods
inc
mov
sarl
mov
mov
sbb
or
adc
fs
cld
jp
lock
fcmove
in
movsb
fwait
mov
push
rclb
xor
pop
stos
mov
test
aaa
pushl
stos
in
and
pop
sub
push
aas
jge
xchg
iret
adc
pop
rolb
sti
andl
lods
outsl
bound
stos
mov
push
pusha
sarl
mov
add
mov
cmpsb
sub
dec
lret
loopne
int
fs
into
fists
push
js
jp
cmp
lahf
test
sti
mov
arpl
gs
jo
push
cs
sbb
loopne
jl
test
push
je
mov
int
out
add
out
mov
sub
test
push
cmc
xchg
sub
xor
cmp
push
cmp
inc
clc
jb
push
not
or
jl
xchg
mov
xlat
and
push
stos
das
add
test
dec
aam
loopne
inc
mov
shrb
inc
ljmp
lds
testl
loope
add
pop
fiadds
je
adc
adc
dec
stc
xor
and
sub
imul
das
add
dec
call
cmpsb
inc
xchg
or
loop
push
ss
sbb
js
iret
mov
pop
aas
movsb
loope
lods
inc
sub
aas
stos
xchg
imul
jge
dec
insb
jae
out
jge
sahf
nop
div
jne
adc
pusha
adc
ljmp
scas
mov
xchg
dec
std
pusha
jl
jmp
lcall
mov
pusha
movsb
pusha
xor
lcall
xorb
or
and
cmc
ds
imul
inc
repnz
iret
dec
push
pusha
sbb
jbe
test
push
sbb
jb
iret
iret
push
pop
mov
mov
mov
lds
fsubrl
xor
lret
push
daa
xor
mov
push
ljmp
insb
movsl
aam
mov
mov
pop
mov
fldl
adc
cmpsb
mov
add
cs
inc
stc
lahf
in
or
stos
aad
or
jnp
rorl
mov
xor
pop
test
inc
mov
xchg
push
sub
je
call
je
fsub
cmp
mov
dec
test
pushf
fcoms
in
movsb
fildl
iret
jne
lret
idivb
loop
pusha
lret
inc
push
mov
or
in
mov
mov
xchg
in
mov
je
inc
add
imul
mov
leave
leave
push
xchg
sbb
flds
push
icebp
mov
add
ret
jp
sbb
outsl
fisubl
and
xor
or
or
js
cltd
inc
in
adc
sub
dec
push
lock
inc
jl
clc
inc
ja
xor
xor
or
rorb
out
push
imul
jmp
mov
cmp
fiaddl
and
pop
scas
mov
sbb
imul
mov
outsb
insb
push
in
mov
mov
rcll
aas
aad
push
jp
cmp
iret
das
pop
jae
mov
stc
sbb
mov
or
into
sub
mov
mov
xchg
movsb
daa
sti
int
push
xchg
cs
je
ds
lods
ss
gs
jmp
push
decl
push
dec
mov
pop
xchg
adc
dec
mov
hlt
inc
lahf
jecxz
dec
push
repnz
xchg
into
xchg
repnz
imul
mov
add
stos
out
repz
pusha
and
repz
lahf
inc
test
ds
ret
jbe
aaa
ret
inc
mov
aas
push
das
inc
dec
cli
out
add
les
dec
push
inc
and
mov
sub
dec
xchg
scas
and
cmp
xor
mov
nop
data16
cwtl
shl
pushf
mov
xchg
adc
mov
loope
dec
add
mov
fimull
insl
lea
cmpsb
adc
or
mov
push
or
cmp
cmpsl
mov
pop
mov
fwait
out
pop
cmpsb
orl
ret
xor
ficoms
ljmp
in
add
jno
inc
das
repz
xchg
ja
bound
das
fldcw
mov
push
inc
mov
xchg
movsl
out
in
sbb
jno
jno
pop
test
addl
sahf
mov
mov
popl
and
or
ljmp
lds
jge
cmpsl
jg
jne
xchg
stos
xor
sub
sbb
loope
jae
sub
repnz
cmpb
aam
andb
cmpsb
jecxz
je
xchg
and
lcall
mov
sbb
repnz
scas
sub
pop
loopne
dec
push
xchg
js
data16
adc
lcall
inc
outsl
pop
pop
mov
sbb
cmpsl
cltd
jg
xchg
jns
xor
sub
pop
scas
add
imul
jmp
scas
ds
stos
and
adc
cmp
jl
fld
jns
iret
mov
dec
cli
cli
jo
imul
pushf
shrb
stos
out
movsb
dec
mov
jne
or
leave
jle
notb
push
popl
adcl
scas
mov
dec
push
popa
dec
lcall
test
and
fcoml
pop
loop
ss
arpl
or
or
sub
out
or
xor
xlat
imul
inc
shlb
push
cmp
pop
aam
push
xchg
push
mov
xchg
add
frstpm(287
push
mov
pop
mov
cmp
shr
sub
and
dec
push
imul
xchg
frstor
in
fnstsw
out
daa
mov
inc
inc
mov
hlt
lods
pop
pop
push
jge
mov
and
lods
orb
mov
mov
inc
lock
and
cld
jmp
cwtl
imul
cmpsb
push
jbe
inc
cli
test
jns
pop
mov
fdivrl
out
push
out
std
mov
stc
decb
sub
mov
scas
jo
add
push
inc
push
cmp
pop
add
inc
out
xor
lods
scas
addr16
leave
xorb
push
sub
xor
dec
xor
dec
loop
outsl
jge
aas
shlb
adc
imul
mov
and
dec
sbb
xor
insl
data16
test
cmc
push
add
add
bsr
mov
lea
inc
les
add
shl
loop
push
xor
push
ficompl
push
inc
outsb
mov
cmpsl
jbe
mov
cmp
jmp
inc
repnz
push
mov
push
jge
dec
and
jno
pop
xor
imul
gs
xchg
or
imul
movsl
pop
sbb
adc
cmpsb
xorl
loop
xchg
sarl
xchg
aam
popf
add
inc
ret
xor
sbb
jmp
repnz
pusha
adc
add
lods
sahf
popa
ficoml
fcmovbe
add
sub
adc
and
inc
or
das
mov
das
lds
clc
jbe
fiaddl
movsl
rolb
mov
push
mov
adc
pop
out
mov
mov
in
cmpsl
mov
cmpsl
arpl
inc
sub
jmp
fisubs
xor
sbb
dec
lcall
xor
jns
je
mov
mov
lret
ja
gs
sbb
cmpsb
and
jns
xor
int3
xchg
jnp
sbb
les
jno
mov
jns
pop
jecxz
cmp
jmp
inc
xchg
cmpsl
add
adc
mov
cmp
sbb
mov
pop
dec
adc
mov
pop
jge
aad
cmp
sub
ljmp
test
test
in
arpl
push
add
jg
xlat
inc
cmp
cmp
das
xchg
mov
xchg
mov
add
inc
or
xorl
sti
enter
sbb
pop
add
cmpsb
stos
arpl
adc
jecxz
jo
cwtl
adcl
testb
mov
or
in
lahf
inc
cltd
outsb
arpl
pop
pop
sub
es
into
fnsave
xchg
stos
fistps
xchg
bound
notb
pushf
sub
push
or
mov
repnz
in
and
add
mov
push
adc
lahf
cmpsl
xor
movsl
adc
scas
add
cmp
incl
and
jne
adc
das
mov
dec
call
xchg
leave
sub
lods
cmpb
xor
cmpsl
scas
lds
in
test
loop
cld
or
and
sahf
xor
xor
cmp
mov
inc
call
clc
ljmp
xchg
cmpsb
es
leave
pop
jmp
jne
mov
inc
es
lahf
ja
adc
test
setbe
out
call
aam
rorl
inc
scas
add
cmp
jo
cld
lods
and
xchg
lock
mov
loop
fbstp
sbb
aaa
cmp
sub
mov
push
das
mov
int
mov
push
aad
ljmp
bound
ficoms
in
adc
mov
jo
int
inc
leave
pop
mov
js
std
jno
add
in
push
enter
xor
push
insl
cmpsl
add
imul
adc
lods
dec
addl
xor
adc
mov
jmp
adc
lea
xchg
test
pushf
pusha
insl
adc
daa
push
fs
fcomip
ss
lcall
pop
fwait
bound
pop
iret
pop
xchg
dec
and
addps
add
js,pn
mov
lds
cmpsl
fdivs
lea
repz
sbbl
or
jmp
xchg
mov
pop
mov
test
pushl
or
movsb
xor
xchg
pop
dec
mov
inc
push
cwtl
fucom
daa
mov
or
test
dec
icebp
jbe
xor
pop
xchg
add
xor
fnstenv
adc
push
es
mov
loope
sbb
xor
test
dec
insb
cwtl
nop
insl
dec
or
fdivrs
jmp
iret
inc
jbe
or
cwtl
sub
and
mov
mov
mov
dec
mov
inc
mov
pop
sbb
nop
stc
jnp
inc
ret
cmp
test
int
mov
lea
stos
std
pop
scas
xor
icebp
outsb
push
xorb
jge
sbb
xor
mov
cwtl
mov
cmp
stos
aas
mov
lret
imul
cmp
aas
push
adc
mov
out
and
jbe
push
inc
jnp
and
jle
ret
inc
dec
push
dec
mov
jno
idivl
and
cmp
cmpsb
jmp
jl
dec
inc
mov
int
mull
dec
imul
adc
dec
lock
jg
adc
sti
addb
pushf
dec
mov
push
dec
xor
adc
popf
mov
dec
or
lds
or
xor
andl
lret
adc
int3
lahf
add
push
js
or
fwait
repnz
inc
mov
fldenv
iret
inc
mov
rclb
sbb
ficompl
pop
test
andl
loope
fildll
cmp
jo
aaa
imulb
pop
xor
inc
mov
aaa
sti
pop
xor
or
xorl
imul
and
das
mov
jmp
lret
test
xor
sbb
addr16
jne
jb
pop
rolb
mov
jo
jp
pop
mov
add
inc
pusha
js
repnz
dec
jmp
out
xlat
out
sub
jg
rorb
sahf
ffreep
sub
ljmp
pop
leave
mov
sti
or
popf
orl
xchg
inc
sub
inc
xchg
cmp
jmp
mov
cmp
into
mov
cmp
mov
imul
insl
or
fchs
int
and
fmull
dec
mov
frstor
push
adc
daa
and
lods
push
sbb
enter
outsl
mov
mov
lahf
nop
pop
ljmp
mov
push
add
mov
sub
mov
jp
fisttpl
cmp
cmp
lea
sub
fsubl
movsl
jb
jb
cltd
xor
addl
and
mov
test
add
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
orl
xor
addl
inc
ret
push
mov
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
add
mov
and
cltd
push
mov
add
add
adc
push
push
mov
mov
sub
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
mov
mov
xor
xor
xor
andl
add
adc
xor
xor
cmp
jne
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
jmp
pop
xchg
add
imul
jle
ss
shll
jmp
bound
rcll
divb
repz
push
and
xchg
bnd
test
mov
add
lea
repz
fwait
sbb
mov
cmp
inc
aaa
jnp
pop
and
adcl
and
movsb
enter
jmp
repz
imul
faddp
sbb
or
push
xlat
inc
xchg
test
loop
cli
sub
mov
jmp
lahf
and
mov
stos
mov
testb
sahf
push
in
pusha
jb
ret
ss
push
jl
jno
add
test
les
jnp
add
add
sbb
xor
testl
testl
pop
add
in
dec
mov
mov
push
mov
sbb
adc
pop
jbe
je
cli
std
in
cmp
mov
outsb
pushf
outsl
lods
pop
pop
jge
iret
dec
xchg
loop
in
jp
cmp
cmpsb
or
ljmp
movsb
sti
das
jbe
lahf
mov
fstl
pop
fisttpll
or
dec
nop
and
pop
jl
mov
jb
fcmove
dec
out
stc
push
lahf
push
movsb
and
push
in
sti
test
cmp
flds
enter
and
add
lock
mov
jge
and
popf
js
bound
sbb
add
pop
in
imul
add
xor
jne
stos
mov
add
push
pop
in
ss
adc
xchg
int3
mov
enter
mov
inc
ret
mov
rolb
pop
jne
and
push
lret
inc
push
xchg
popf
fcoml
adc
xchg
sbbl
cmp
mov
jb
dec
add
and
pop
inc
cmp
cmpsb
or
inc
push
pop
or
push
fxch
jo
iret
xor
fst
fst
pop
push
jo
adc
enter
test
jne
fildl
les
xchg
ret
and
sbb
loope
sbb
inc
push
inc
jo
mov
pop
out
add
aaa
and
adc
xor
int
or
jns
push
pusha
test
int
in
test
adc
ret
xchg
fcomip
ja
data16
or
enter
inc
daa
pop
mov
test
xor
xor
xor
xor
loop
xor
iret
cwtl
adc
cmc
pop
or
sbb
and
lcall
fstl
lds
popf
push
jne
shrl
mov
jae
inc
and
jge
dec
shll
out
mov
cmp
pop
jae
xor
cmpsl
pushf
xchg
addl
inc
addr16
bound
andb
xchg
scas
mov
or
push
sbb
xchg
mov
in
movsb
xchg
jbe
test
push
cwtl
xchg
sub
rorb
cmp
xchg
and
adc
xchg
jp
ja
int3
enter
mov
jae
sarl
jl
inc
std
pop
inc
popf
cli
sbb
xor
std
call
lock
lock
jnp
rolb
outsl
cmpsl
lds
mov
gs
sub
mov
xchg
rorl
in
test
adc
mov
xor
in
stc
imul
cmp
sbb
stos
dec
mov
push
rcrb
and
mov
pop
jmp
sti
jmp
push
enter
xchg
addr16
xchg
icebp
pop
test
add
mov
hlt
jmp
push
xchg
add
lods
in
adc
je
inc
loopne
push
out
xchg
in
shll
aaa
jp
jle
lods
fsubrl
pop
jae
sbb
xor
fs
push
bound
movsl
inc
js
mov
mov
xchg
cmpsl
icebp
xlat
cmp
sub
mov
addr16
rorl
cltd
push
jns
aad
xchg
xchg
lock
fldcw
mov
sbb
daa
aas
mov
mov
sbb
pop
pop
xchg
add
inc
lods
mov
xchg
shlb
scas
lahf
xchg
out
jg
sub
sub
into
adc
push
out
inc
pop
pop
fwait
inc
pop
popf
xchg
pop
arpl
adc
cmp
inc
mov
in
sbb
loopne
je
mov
arpl
aaa
pop
add
test
pop
dec
inc
pushf
cmc
ret
adc
pop
cmpsb
fists
adc
cltd
les
movsl
and
or
lods
mov
int3
test
sub
sbb
es
and
jno
xor
add
dec
xchg
cmpsl
sub
ficoms
mov
test
push
test
ret
sub
push
aaa
mov
pop
movsb
daa
xchg
fildll
lea
lock
arpl
test
jne
outsb
rorb
in
lret
in
adc
es
adc
fcomps
pop
mov
mov
cmc
and
fisttps
ffree
mov
mov
mov
stc
inc
xchg
dec
popl
or
dec
in
and
jns
sub
js
mov
lods
cmp
movsb
lods
push
and
push
sbb
rclb
mov
mov
push
inc
data16
jecxz
pop
orb
dec
stc
aad
clc
cld
mov
inc
and
pop
loop
int
adc
fbstp
dec
fsubrl
dec
out
and
dec
inc
orl
aam
jns
movsl
sbb
sbb
push
jno
pop
xchg
mov
icebp
incl
lret
fstps
aad
nop
dec
mov
jae
daa
lods
cld
xchg
test
mulb
mov
mov
jb
or
mov
mov
popf
jle
mov
mov
mov
add
and
pop
sbb
insl
ret
push
cmp
pop
lret
mov
mov
push
mov
push
outsl
jbe
aam
adc
test
out
rcr
fbld
fnclex
lock
mov
popa
jns
lds
push
sbb
popf
add
repnz
call
dec
push
mov
xor
jmp
lds
loope
out
pop
repnz
loop
lods
inc
jno
ja
divb
rcr
fnstsw
call
imul
push
cmc
nop
lods
jae
sub
pushf
push
cs
mov
pop
pop
fldt
add
into
or
hlt
mov
jnp
movsl
icebp
jb
repz
leave
loopne
enter
mov
and
adc
adc
sub
xor
add
sub
test
and
pop
cmc
out
mov
jmp
repnz
pmaddwd
push
push
ds
aad
add
fwait
jb
pop
adc
fdivl
dec
je
mov
icebp
and
mov
out
sbb
enter
xchg
xor
mov
sbb
push
rolb
js
dec
pop
call
mov
cmp
push
pop
leave
lds
fcmovbe
add
or
insb
imul
lock
pop
jbe
xlat
cmpsl
xchg
lret
inc
in
xor
fst
mov
rolb
outsl
sbb
ds
in
lret
lahf
xor
bound
adc
pusha
nop
mov
mov
mov
les
int
sbb
lock
sub
cs
mov
add
jnp
mov
cmpsb
pop
nop
add
adc
and
jmp
sahf
jmp
aam
jg
in
call
insl
mov
fidivs
ffree
and
popf
adc
xchg
aam
lods
cmpsl
inc
dec
sbb
inc
outsb
pushf
stos
rcr
mov
sbb
jb
push
outsb
rorb
jecxz
xchg
adc
decb
ss
and
jg
lock
cwtl
bound
lea
mov
sub
orl
push
clc
out
outsl
jo
out
jns
into
mov
or
mov
lds
aas
or
dec
pop
inc
mov
add
xchg
push
jo
ret
dec
sahf
sbb
test
fsubs
adc
data16
xchg
shlb
divl
xchg
pushf
push
push
movsb
and
insb
dec
cmp
jb
inc
insb
inc
test
xchg
push
xchg
mov
ficoms
sti
js
jb
addb
push
xor
int3
andl
dec
fidivrs
jne
repz
ss
dec
outsb
dec
in
add
test
mov
insl
iret
inc
fstl
add
ds
cli
jnp
dec
outsb
push
icebp
push
jecxz
add
ss
mov
das
mov
push
pop
aam
insb
rcrl
jle
scas
jo
divb
or
cmp
arpl
insb
bnd
jno
pop
inc
mov
in
dec
movsl
or
mov
fisttps
pop
call
stos
orl
inc
or
cmp
loop
push
push
test
cltd
out
push
int
bound
outsb
xor
pop
int3
xlat
sub
shll
xor
mov
adc
xor
js
mov
pop
push
into
test
push
cmpsb
adc
pop
sarl
and
negl
cltd
test
sub
mov
inc
int3
aad
dec
dec
ds
mov
jge
push
pop
icebp
pop
leave
add
cmpl
pop
scas
xchg
mov
xor
cmp
push
cmp
sub
cwtl
fs
in
mov
rclb
or
fdivr
ret
xchg
adc
test
subb
es
pop
dec
adc
repnz
and
out
pop
adc
or
sbb
pop
inc
cs
dec
push
mov
xor
in
sub
cmp
cmpsl
inc
inc
jno
insl
mov
dec
push
mov
loop
inc
add
dec
push
inc
xlat
stc
xor
xor
mov
loope
rorb
xchg
and
sbb
cmpsl
insb
scas
inc
data16
idivl
aam
repz
inc
enter
shlb
push
leave
into
fmuls
pop
dec
rorb
stos
les
repnz
nop
ds
imul
enter
mov
icebp
scas
inc
mov
cld
loope
add
roll
inc
xor
fiaddl
test
pop
cltd
sbb
inc
pop
enter
into
jl
jbe
xor
fcom
je
inc
xlat
repz
sbb
rorl
or
xor
dec
mov
outsb
test
adc
je
imul
dec
repz
xor
dec
dec
sbb
push
fcomps
inc
cmp
das
sbb
add
rorb
dec
sub
cmpsl
iret
fs
pop
in
hlt
push
sti
pop
and
sbb
loope
dec
dec
data16
enter
into
jl
inc
lahf
cwtl
mov
cmp
subl
and
outsl
repnz
sbb
push
xlat
loope
sub
inc
bound
enter
lds
out
adc
clc
inc
fbld
jae
add
hlt
push
aad
inc
xchg
addr16
rolb
outsl
xor
scas
xchg
mov
addr16
and
in
insl
cltd
nop
das
imull
pop
lcall
leave
sbb
rclb
shr
stos
cmp
loop
mov
or
sbb
mov
push
nop
jmp
mov
add
pop
ss
jge
push
sbb
pop
les
fcompl
pop
inc
xlat
pop
push
jns
jb
xchg
inc
mov
shlb
adc
push
jne
jae
imul
mov
jno
popf
mov
test
sub
mov
or
cmp
dec
lret
push
mov
fmull
hlt
ret
mov
outsb
pop
sbb
test
rorl
gs
or
push
mov
out
jae
lret
jmp
int
rcll
xchg
mov
add
repz
jae
repnz
dec
jns
inc
js
pop
cmc
jmp
shlb
push
mov
lock
ja
pop
rorl
movsb
xchg
cs
sub
fucomp
aas
cmp
cmpsb
push
pop
inc
into
fsubrs
ds
into
stos
arpl
dec
dec
push
aas
jae
pop
inc
cs
cld
xchg
jnp
xchg
mov
and
sub
jo
jg
test
lahf
mov
mov
sbb
outsb
sub
repnz
ljmp
test
lret
pusha
nop
ret
push
mov
push
imul
or
aam
jns
shrb
xchg
add
fsubl
push
sub
xchg
mov
sbb
nop
sbb
adc
mov
xlat
mov
mov
mov
jbe
inc
in
rorb
mov
stos
mov
out
add
mov
std
mov
out
pop
mov
popf
mull
push
jo
mov
imul
inc
in
mov
mov
ja
les
push
dec
cld
or
dec
imul
pop
push
in
shll
sub
mov
lret
inc
adc
pushf
adc
pop
enter
push
popl
or
sub
not
cmpsb
aaa
xchg
xchg
cwtl
inc
sahf
jnp
or
int
popa
fildll
mov
mov
jbe
jno
dec
add
stos
sahf
pop
and
and
ja
pusha
cs
or
inc
fs
dec
stos
cmpsb
ljmp
or
mov
pop
stc
jg
dec
jle
dec
xor
xchg
jns
mov
movsb
idivb
rolb
mov
mov
loope
adc
mov
ds
lock
jb
pusha
fcmovne
push
inc
mov
into
aas
or
in
ljmp
dec
fstl
dec
pop
xor
aas
mov
push
cmp
enter
sar
stos
std
dec
inc
aas
xor
aad
jnp
xchg
sub
insl
jns
sbb
in
out
mov
aad
sbb
inc
jo
int3
dec
ss
test
int3
cmc
pusha
arpl
jecxz
rorb
pusha
mov
fdivl
aam
lock
ret
sub
stos
dec
or
push
inc
push
jb
add
shl
mov
inc
enter
into
arpl
push
rclb
sub
xchg
insl
bound
int3
ljmp
mov
insb
test
jbe
jb
std
pushf
sbb
xor
call
add
or
jmp
inc
popa
pop
or
pop
or
aas
push
mov
mov
push
ficoml
aas
inc
sub
cmp
and
outsl
sub
jne
cmc
out
xor
mov
daa
sbb
test
push
cs
lea
and
jg
jnp
clc
inc
ja
nop
mov
mov
mov
pop
inc
imul
std
lods
mov
in
movsb
cmpsb
cmp
js
dec
pop
push
push
jbe
stos
mov
mov
jb
jnp
inc
pop
inc
add
mov
rcr
loope
stc
in
mov
ficompl
std
and
pop
lret
mov
push
push
and
xlat
jae
cmp
lock
jne
scas
and
dec
testl
mov
ljmp
mov
rcrb
add
push
push
mov
lret
daa
xchg
xor
mov
inc
fmuls
not
test
inc
dec
jns
jno
push
lods
adc
pushf
mov
std
cmc
xchg
dec
outsb
sti
mov
daa
popf
mov
jno
pop
pop
mov
stos
adcl
adc
test
xor
jnp
mov
mov
jg
inc
inc
int
mov
xchg
repz
cmp
push
aad
or
lods
jecxz
jns
or
xor
add
sbb
mov
pusha
js
ds
push
adc
leave
adc
cmpsb
orb
repz
aas
rorb
jge
lahf
out
jbe
into
scas
jnp
dec
leave
jae
xor
in
inc
sub
bound
xchg
mov
push
andl
cli
mov
dec
inc
aas
arpl
sahf
mov
aas
in
iret
pop
dec
dec
dec
push
sub
repz
test
inc
idivl
or
mov
fwait
testl
addr16
and
into
mov
inc
inc
xor
stos
sbb
add
neg
sarb
std
add
loope
in
int
adc
scas
outsl
int3
xor
mov
js
enter
or
cmp
inc
clc
lret
in
mov
inc
sub
insl
mov
rcll
lds
repz
sbb
xchg
into
aad
sbb
xchg
mov
mov
movsb
sbb
mov
mov
or
data16
xor
adc
stc
push
hlt
jl
xchg
sbb
lds
addr16
test
test
stos
cmpsb
or
cld
cmp
inc
pop
mov
movsb
push
cwtl
pop
loop
nop
jmp
adc
inc
dec
call
test
jp
es
into
ds
push
cmc
testl
subb
mov
mov
cmpsl
aaa
inc
loop
xchg
jg
mov
adc
loop
pop
add
aas
add
xor
test
cli
aas
sahf
sbb
mov
jecxz
test
pop
cs
cmpsb
movsb
adc
mov
cs
movsb
fstpl
or
rcll
outsb
jp
xchg
xchg
pop
push
mov
push
cmc
push
dec
mov
movsb
inc
jno
shrb
rcr
pusha
jecxz
push
cmp
rcrl
gs
xor
and
or
push
add
xchg
jns
jg
into
mov
inc
jnp
fsubs
add
data16
xorl
das
sbb
mov
sets
sbb
xor
cmc
xchg
fdivrs
mov
insl
sbb
cli
sub
xchg
pop
ficomps
idivl
data16
fsubr
or
cld
pop
cmpsl
adc
add
movsb
lea
inc
sbb
sub
and
add
xlat
jbe
xchg
inc
mov
and
clc
addl
ds
pop
clc
mov
cmp
pop
lds
in
and
sbb
insl
stc
pusha
fsubr
lock
pop
xchg
xor
fidivrl
ud0
mov
mov
sub
cs
cmpsl
call
imul
or
add
cmp
mov
jb
sub
xchg
repz
jle
loope
sbb
pop
push
jge
cmc
fs
cmp
sub
sub
sbb
jp
or
in
dec
sti
dec
jp
mov
sub
xor
and
jno
pusha
sub
cld
xchg
lea
popf
insb
fisttpll
xor
scas
daa
push
es
jg
and
mov
and
or
jno
push
mov
subl
sub
aas
pop
push
movsb
sbb
inc
xorl
scas
daa
pop
jmp
sub
or
jb
mov
adc
in
jne
scas
push
adc
pop
lods
fadds
dec
inc
dec
sahf
nop
jmp
into
enter
call
mov
sub
push
xor
pop
lods
lahf
mov
leave
mov
dec
push
mov
stos
lods
ret
mov
mov
clc
inc
test
push
adcb
ljmp
enter
mov
scas
movsl
inc
icebp
mov
inc
sbb
shl
pop
pop
cs
cmp
outsl
xor
es
add
scas
cmp
mov
mov
shl
adc
in
rol
fnsave
and
fsub
popf
mov
das
mov
dec
aas
gs
fcomi
or
pop
bound
add
dec
mov
dec
addl
push
adc
xlat
add
stos
sar
testl
adc
or
cltd
push
xchg
sub
into
mov
mov
aaa
and
xchg
cmp
sub
xchg
rcr
pop
xchg
test
testl
mov
dec
iret
pusha
add
add
mov
cwtl
inc
mov
int
jg
and
push
pusha
cld
xacquire
sbbl
les
jge
push
push
add
rolb
jecxz
add
rcll
repnz
bound
xchg
into
hlt
fdivs
mov
in
fwait
xchg
jbe
mov
pop
or
clc
jl
dec
arpl
dec
adc
cmp
ss
fwait
push
dec
inc
or
sub
int
je
and
stc
out
fstl
jg
adc
sahf
mov
cli
sti
test
pop
pop
jae
lock
cltd
pop
lcall
xor
xchg
xorl
fimull
dec
xor
jge
imul
add
sbb
mov
sub
loopne
pop
fbstp
icebp
mov
jge
popa
hlt
add
loopne
cmp
pop
adc
test
xor
xchg
mov
xchg
cmpsb
or
repz
movsb
testb
mov
les
cmpsb
into
leave
sub
and
jnp
fidivrs
push
out
ljmp
aas
sbb
inc
pop
sbb
sahf
js
mov
icebp
in
xchg
fstl
fucom
push
add
or
pop
test
cld
cmp
daa
xchg
xchg
mov
hlt
mov
pushf
sbb
sbb
add
adc
or
cmp
xlat
fldcw
cli
pop
jmp
adc
test
adc
xor
test
ja
mov
mov
xor
xorl
inc
sub
push
bound
inc
stc
add
in
in
mov
aas
xor
call
mov
xor
xor
bound
bound
ss
jnp
push
lcall
adc
cmp
inc
lods
jb
xlat
sub
mov
jns
xorb
sbb
lahf
xchg
add
stos
lcall
fabs
scas
cmp
sub
inc
cmpsl
aas
sub
sbb
xor
shl
imul
sub
fiaddl
outsb
andb
inc
inc
inc
imul
imul
inc
sub
sub
mov
ja
push
ret
cli
or
push
sbb
pop
pop
mov
sbb
cmc
lret
mov
sbb
enter
cltd
and
adc
jnp
clc
sbb
push
aad
lods
push
aam
scas
imulb
lcall
push
cltd
loop
mov
push
pop
cs
in
les
shrl
int3
lock
aad
or
xchg
mov
xor
pop
invd
mov
jg
seto
mov
out
add
cli
enter
enter
lods
lock
add
jp
insl
mov
or
lock
in
test
fisttpl
loop
pop
int
jge
in
cmp
xor
inc
xlat
stc
or
orl
les
add
shrb
cmp
mov
inc
xchg
cltd
rcrl
and
ss
jo
in
loopne
call
or
aad
dec
xor
sbb
mov
stc
roll
aam
push
lock
or
aaa
fs
lock
daa
or
in
sub
test
jmp
cmp
sti
xor
mov
jbe
fdivrl
mov
push
mov
cmc
imul
repz
xchg
bound
jo
pop
xor
push
mov
movsl
xchg
sub
lods
cmc
dec
subb
out
pop
mov
and
icebp
shl
aam
iret
in
cwtl
adcl
es
jecxz
in
aam
and
sbb
xor
lods
inc
mov
pusha
fsts
or
mov
jmp
lahf
or
jmp
fnstcw
lds
js
xlat
mov
aas
mov
imul
mov
pop
scas
movsl
pop
pop
xorb
and
or
mov
ja
adcl
das
lea
pop
int
dec
add
rclb
les
xor
pop
adcb
inc
pop
loop
lods
xor
lods
mov
test
shr
icebp
mov
scas
pop
xchg
dec
dec
push
push
adc
xor
aaa
stc
into
repnz
mov
mov
into
out
lret
inc
sti
mov
jg
ret
hlt
sbb
mov
xchg
cwtl
or
aaa
inc
imul
cwtl
add
mov
add
or
pop
fs
loope
push
insl
cmp
inc
xchg
add
cmc
stos
out
sbb
mov
nop
fldcw
push
test
ret
jmp
test
and
dec
sub
aaa
add
inc
mov
test
outsb
lret
add
fbstp
mov
cld
test
cmc
mov
xchg
sub
xor
rcll
push
push
pop
std
or
fists
sbb
pop
orb
fldt
fdivs
mov
inc
add
rol
in
fdivl
mov
das
xor
loope
sbb
inc
xchg
scas
les
pop
imulb
mov
xchg
hlt
mov
in
sub
or
mov
jne
cli
xchg
xor
lock
cmp
inc
nop
call
int3
iret
insb
fsts
shrl
in
mov
fisttpl
subb
mov
shrb
lods
sbb
outsl
push
and
scas
adc
sub
cmp
xchg
push
mov
dec
add
loop
mov
jnp
shlb
dec
mov
cltd
or
insb
cmp
push
pusha
aad
stos
push
dec
lods
xor
bound
fstpt
ret
das
outsl
xchg
out
xchg
fwait
outsl
jecxz
sbb
push
sub
popf
inc
mov
pop
cmp
in
push
cmpsb
adc
lcall
jo
imul
call
xchg
repz
add
insb
mov
and
fs
pop
push
mov
sub
mov
mov
mov
cmp
sti
jmp
daa
int
test
xchg
pop
std
nop
rcrl
call
xchg
cmc
in
ss
fwait
and
and
mov
je
ljmp
push
cmpsl
movsb
ror
sub
or
jns
sub
imul
dec
inc
aaa
jns
mov
push
inc
dec
jne
xchg
pop
or
cltd
dec
je
and
fsubrs
add
pop
jge
xchg
mov
or
aaa
jne
gs
jecxz
xchg
frstor
fmull
cs
out
popf
jb
add
adc
lcall
int3
cmp
outsl
call
in
xchg
adc
xor
in
mov
xchg
hlt
xchg
sub
sbb
xchg
sti
out
pop
pop
jae
ret
sub
adc
call
cld
aas
adc
fnstsw
push
inc
mov
xor
cmp
adc
test
push
and
inc
idivl
dec
and
and
test
in
orl
rorl
mov
or
movsb
in
aaa
push
gs
fdivrp
loope
inc
aam
test
dec
push
pop
repz
push
add
rorl
sti
add
cmpsl
cmp
xchg
cmp
dec
dec
dec
cmp
rclb
les
fildl
pop
xchg
sbb
outsb
inc
mov
int3
pop
inc
add
xchg
lret
xchg
inc
dec
outsl
idivb
testl
push
in
je
or
ficompl
xchg
mov
inc
mov
pop
jp
push
test
sbb
sub
test
fildll
addr16
js
lea
or
mov
cmp
stos
pop
popa
push
sub
or
and
popa
dec
xchg
insb
add
nop
clc
repz
add
inc
add
adcl
dec
cmp
ret
iret
lret
addl
or
add
xor
in
jmp
jne
mov
sub
mov
sahf
pop
es
lds
aas
sarb
outsl
push
or
out
jno
dec
pop
inc
mov
stos
jae
mov
push
dec
pushf
push
push
dec
xor
out
jb
mov
mov
js
jmp
in
ss
fs
lods
lret
ret
movsl
xor
in
scas
jo
out
add
cmp
imulb
push
mov
xor
int
and
xchg
hlt
push
jbe
add
jl
loope
push
cld
push
inc
push
out
lods
cmpsl
stos
cwtl
inc
call
sub
dec
xchg
or
sbb
mov
imul
loopne
mov
inc
lock
inc
mov
mov
jmp
sti
push
jb
or
imul
mov
adcl
pop
xlat
push
popl
mov
mov
xchg
and
nop
sbb
add
inc
andb
ret
mov
test
shlb
lret
je
push
push
pop
xor
jecxz
sub
xchg
jle
mov
add
adc
je
xchg
cmp
cli
pushf
icebp
icebp
jecxz
jecxz
lock
aad
xchg
jmp
push
mov
sub
mov
test
out
cmp
pop
inc
scas
ja
pop
pop
insl
mov
pop
das
adc
xchg
adc
dec
mov
pusha
sub
xchg
push
mov
lods
xchg
lahf
adc
and
test
in
dec
std
adc
xor
test
inc
or
mov
inc
out
inc
adc
pop
pusha
push
mov
dec
and
mov
loope
inc
mov
jo
lahf
fwait
or
adc
shl
sub
dec
or
mov
dec
xor
mov
push
pop
push
out
add
xor
sub
jo
jb
mov
jno
daa
cmp
pop
dec
jbe
sbb
xor
adc
cmpsb
mov
sti
xor
shll
movsb
stos
es
orb
sbb
cmp
sub
push
test
push
or
mov
dec
daa
into
pop
push
add
or
sbb
std
xor
xchg
inc
mov
aam
add
cmp
jb
mov
shl
add
adc
data16
sub
jns
or
adc
mov
mov
fsubrp
pop
inc
stc
lock
push
sbb
cmpsb
int3
out
cld
mov
loopne
cli
jg
mov
fildl
data16
push
cmp
push
test
in
jbe
mov
pop
in
jp
sub
push
pushf
jl
or
sbb
fidivl
ss
shrb
scas
push
jne
xchg
mov
data16
fmuls
ret
inc
push
lods
mov
and
push
test
jb
push
lret
icebp
push
push
lahf
mov
pushf
sub
dec
sysexit
add
mov
xor
popf
sbbl
xchg
mov
cmpsl
jnp
xor
in
pop
out
jbe
out
shll
sarb
jb
adc
lea
push
jmp
mov
push
scas
xchg
xlat
enter
repnz
sbb
pop
iret
lahf
cmp
aaa
imul
push
cwtl
je
push
loopne
pop
in
or
test
fcomps
sti
insb
push
dec
push
mov
inc
loop
adc
movq
pop
sbb
insb
movl
aam
pop
leave
sbb
inc
jg
dec
sbbb
and
mov
add
xlat
or
insb
cmp
mov
cmpsl
dec
pop
cmp
push
sarl
dec
inc
call
jo
mov
and
xor
add
mov
mov
xor
add
jmp
jae
mov
xchg
movsl
jecxz
pop
sbb
dec
mov
bound
pop
bound
pop
les
loope
sub
push
jle
cs
sub
leave
in
xchg
sub
mov
gs
fisubs
movsl
xchg
pop
fistps
dec
idiv
pop
insb
or
push
adc
or
insl
sub
sub
pop
mov
push
xor
xchg
clc
fldl
fwait
ss
aad
aam
pushf
test
test
inc
xchg
push
inc
test
test
jno
jne
push
dec
add
aam
mov
pushf
test
into
sahf
xchg
cmp
pop
push
popf
sub
stos
mov
push
dec
into
mov
add
scas
xchg
or
cmp
sahf
lods
lea
jnp
lahf
sbb
push
sahf
inc
lods
leave
aam
push
jne
es
xor
mov
fnstenv
jb
push
inc
dec
iret
repz
shl
lahf
jns
andl
pop
adc
or
dec
fs
xor
adcb
stc
xor
jl
lahf
push
dec
ds
ss
mov
xchg
or
in
push
frstor
sarl
scas
pop
adc
in
out
out
in
jbe
aam
stos
push
shr
jnp
cmp
inc
fcom
iret
sti
dec
mov
lret
into
sbb
xchg
xchg
mov
ljmp
ja
mov
or
movb
dec
lea
cmp
add
mov
push
adc
jmp
pop
adc
movsb
pop
nop
imul
ret
push
lcall
inc
sub
aam
rol
fptan
fs
cmp
cld
fwait
shlb
push
scas
mov
push
xchg
add
js
mov
stos
aas
dec
xor
lcall
imull
movsb
imull
fldcw
aaa
inc
and
push
lret
ret
pop
lret
pop
jb
lret
add
js
test
adcb
pop
jo
out
leave
je
mov
xor
and
shrl
push
lods
add
sti
push
aas
adc
or
lods
or
imul
sbb
sub
test
mov
mov
or
and
xchg
rcrl
outsl
les
inc
or
mov
lret
outsb
fcoms
xchg
adc
jbe
mov
sub
popf
out
cwtl
outsb
xchg
mov
mov
sbb
ficoms
cwtl
outsb
jb
stos
pop
jno
fs
test
daa
clc
push
test
adc
inc
push
pop
jbe
inc
aaa
cmp
in
pushf
addr16
out
cmp
mov
test
xor
xchg
popa
pushf
inc
inc
ds
mov
test
ljmp
jmp
gs
lds
sbb
lods
cltd
in
lret
mov
cmp
loope
mov
mov
dec
outsb
outsb
sbb
adc
test
dec
nop
inc
dec
dec
dec
lods
xor
inc
testl
dec
leave
int
pusha
dec
call
scas
mov
cltd
and
mov
ret
in
jbe
inc
add
lahf
cmp
jb
imul
inc
lret
cmp
mov
jne
into
mov
xchg
mov
cmpsb
xor
nop
std
psrlq
dec
or
mov
and
shlb
cmp
mov
inc
inc
iret
bound
fistpll
call
clc
pop
inc
fisttpl
adcb
inc
push
ja
out
fisttps
into
sbb
fisubrl
fsubrl
push
ss
jge
or
pop
popf
or
lret
cmp
shlb
pop
pop
adc
test
sarb
sbbb
xlat
rorb
in
adc
aas
ret
bound
pop
arpl
lods
cmc
jl
mov
test
cltd
popf
xor
or
ja
mov
test
insb
and
jg
xor
rorl
add
xchg
dec
out
shrl
test
push
and
and
pushf
in
adc
mov
mov
mov
jne
sahf
fsub
inc
loope
arpl
and
inc
mov
int
xchg
mov
insb
sub
ja
lret
loope
cmc
fnstsw
jae
stos
dec
rcrb
bound
addb
adc
xchg
lods
ja
lods
push
fstpl
jae
aas
test
test
lds
cs
mov
fsubs
stos
dec
jne
push
inc
fwait
sbb
movsl
mov
mov
jae
mov
mov
lds
popf
xor
mov
pop
jge
insl
cmp
dec
stos
mov
insl
mov
decl
ss
push
sbb
adc
bound
mov
sub
mov
loopne
rorl
ja
lret
fcomi
out
lods
mov
jmp
adc
xchg
jnp
mov
mov
cmp
in
push
sbb
fimuls
fisubrs
lock
or
lods
repnz
cmpsb
pop
pop
mov
stc
jecxz
nop
pop
je
mov
test
xor
movsl
dec
push
cld
push
out
lds
cmp
dec
mov
and
dec
gs
outsb
sbb
popa
sub
mov
outsb
jno
out
pop
inc
sub
aas
loopne
insb
xchg
out
jo
push
and
pop
pop
testl
sub
xor
rol
loop
or
jb
sbbb
push
out
pop
sub
scas
cmp
cld
xor
addl
inc
addl
int
loop
mov
mov
in
inc
iret
pushf
mov
jae,pt
jno
fisubrs
or
xchg
pushf
push
pop
dec
lret
push
fmull
mov
rcl
insb
dec
loop
inc
mov
add
ret
or
add
xor
push
pop
adc
ja
hlt
cmp
push
dec
test
adc
adc
call
inc
imul
dec
xor
jmp
inc
cmp
imul
pusha
xchg
icebp
fwait
xchg
addr16
or
jbe
sub
iret
daa
out
leave
in
repz
repz
pusha
sub
jge
inc
stos
mov
or
subb
mov
mov
mov
dec
scas
and
ret
in
ljmp
lahf
testl
popf
sbb
notl
test
int
push
rol
cmp
sti
cltd
xor
cmp
rorl
js
pop
aaa
jno
fldcw
dec
sar
push
in
or
outsl
add
int
pop
mov
jbe
inc
mov
xlat
cltd
and
mov
inc
lods
aas
outsb
insb
nop
jg
mov
out
push
lea
loopne
lods
mov
bound
push
push
cmpsb
cmp
adc
out
jnp
movsl
push
cwtl
out
push
fidivrl
mov
cltd
les
add
inc
and
jbe
jp
jnp
lcall
jae
xor
pop
mov
ss
cli
sbb
jns
push
dec
testb
cs
or
ds
and
cmp
gs
daa
outsl
mov
pop
jbe
xor
mov
xchg
pop
clc
stos
stos
inc
icebp
insb
aam
add
inc
mov
stos
test
cmp
daa
push
stc
mov
popf
out
jp
lock
test
mov
mov
adc
mov
push
shlb
add
xor
push
popa
jnp
cmp
roll
fsubl
addr16
or
adc
js
jge
in
addl
xchg
cmp
jae
sbb
outsl
je
and
or
mov
stos
mov
inc
pop
cli
cli
lcall
xchg
jns
sub
sub
out
movsb
dec
mull
adc
mov
cmc
jnp
stos
jo
rolb
xchg
push
sti
xchg
sahf
cmp
or
popa
fwait
sbb
sbb
sbb
sbb
xchg
addr16
pop
leave
data16
fs
fisttpll
scas
mov
je
cltd
inc
pop
xor
orl
mov
inc
pop
push
ror
cmp
xor
sbb
lds
push
fwait
jno
cld
push
or
out
sub
insb
pop
add
mov
sub
inc
cwtl
out
xor
pusha
scas
or
pop
mov
xor
nop
cmp
cwtl
pop
xchg
in
add
daa
dec
popa
scas
jmp
add
jne
rol
mov
lahf
lret
enter
mov
inc
sub
pop
mov
nop
xchg
fwait
shll
mull
add
pop
pop
iret
sbb
test
or
movsl
orb
lcall
test
movsl
lds
fcompl
xchg
jg
xchg
pop
jg
mov
pop
addr16
call
test
cmc
mov
cld
movsl
xchg
jg
sub
pop
sbb
mov
sub
mov
cltd
sub
in
push
call
jae
or
xor
push
cmpsl
or
xchg
cmc
pop
sbb
cwtl
fldcw
arpl
mov
data16
mov
imul
clc
mov
js
ret
mov
int3
mov
push
bound
cmpsb
or
push
repz
adcl
shll
add
lea
dec
dec
in
je
rolb
pop
jb
cld
ds
mov
or
dec
mov
fnstenv
jne
pop
lcall
mov
inc
push
shrb
out
jecxz
push
cmp
fists
into
mov
inc
push
fcomi
or
cs
subl
mov
scas
ficomps
lahf
in
int
dec
pushf
push
pop
or
lret
faddp
add
ret
imul
sbb
mov
push
lcall
dec
ret
xchg
push
je
dec
ret
mov
out
pop
int
into
stos
call
ljmp
cli
sub
xor
xlat
push
xchg
aad
aaa
inc
je
mov
adc
dec
data16
daa
jnp
imul
pop
fbld
sbb
daa
sub
mov
sub
push
cmp
fcomps
outsb
jmp
addr16
mov
outsl
addr16
cmp
sub
repnz
jle
clc
inc
and
popa
pop
shrl
stc
clc
dec
movd
push
pop
icebp
cmp
test
jae
pushf
movsl
pushf
je
sbbb
cmpl
bound
popf
mov
push
dec
movsl
push
int
add
xchg
inc
pop
fs
mov
mov
jge
cmpb
xor
aam
cmp
cmp
push
icebp
addr16
mov
or
pop
push
pop
xor
stos
push
sbb
xchg
sahf
mov
ret
or
shlb
enter
push
orl
push
ret
inc
xchg
addl
mov
xchg
sbb
mov
int3
iret
push
and
push
sbb
cld
push
push
popa
test
sti
aas
mov
lea
mov
and
push
je
lret
das
or
mov
out
xchg
sbb
sbb
pop
and
in
pop
stc
cli
mov
shl
mov
xor
outsl
jae
fucomi
pushl
ror
rcr
mov
dec
outsb
cmp
mov
adc
push
sub
pop
sbb
lcall
enter
and
pop
clc
repz
aas
sub
imul
out
or
sahf
mov
out
in
mov
mov
in
or
je
mov
ret
push
xchg
mov
shlb
xlat
xchg
loopne
or
sbb
cmpsb
sti
cmpsl
mov
andb
dec
mov
cmp
jb
sbb
lret
mov
fisubl
inc
cmp
xchg
shl
test
push
cmpsb
push
ret
pop
mov
cmpl
in
loope
dec
mov
cmpsl
inc
add
xchg
xchg
je
filds
lods
jl
div
stos
mov
adc
add
lret
jmp
push
pop
ljmp
inc
aad
inc
mov
adc
jp
mov
in
xchg
loop
fimull
stos
xlat
das
mov
lock
jns
xor
lahf
lahf
int
js
int
pop
xchg
mov
pop
pushf
mov
sbb
cmp
ds
dec
or
lcall
inc
shrb
adc
into
aad
mov
xor
cltd
mov
out
sbb
mov
mull
stos
xor
xor
xor
test
scas
sub
mov
stos
mov
int3
or
xchg
mov
out
jl
imulb
gs
push
rcrb
dec
cmp
ljmp
stos
adc
sbb
push
dec
mov
pop
stos
push
rcll
push
jmp
inc
xor
outsl
lret
test
inc
mov
push
addb
add
rolb
inc
mov
mov
add
add
test
iret
mov
mov
jmp
shlb
lret
inc
adc
lods
xor
and
adc
mov
test
push
outsb
cmp
mov
cmp
cld
sbb
int
in
xchg
pusha
sbb
dec
lahf
sub
adc
sbb
pushf
loop
add
sub
or
mov
xor
xchg
mov
jg
jg
cmp
pop
sub
inc
push
stos
ss
pop
out
outsb
mov
out
cs
out
call
scas
adc
shrl
loopne
jo
inc
push
or
pop
setne
lcallw
xacquire
mov
js
das
sub
sub
imul
adc
cmp
sbb
sub
and
sbb
mov
jb
mov
adc
and
adc
inc
sub
pop
cmc
push
shll
popf
clc
jae
push
in
jae
jge
loop
pop
jne
jle
mov
sub
jg
sub
sub
pop
pop
mov
mov
pop
xchg
addr16
icebp
adc
arpl
bound
out
in
leave
ret
mov
mov
aad
jle
mov
decl
popa
clc
and
cwtl
nop
ss
cmp
loope
sbb
sub
mov
inc
inc
shlb
mov
les
push
mov
push
into
jae
push
pop
jb
and
into
jae
lsl
or
jle
insb
mov
iret
outsb
leave
cmpsl
mov
jnp
adc
mov
fdivr
mov
cli
or
mov
lods
xor
aas
xchg
push
mov
xor
test
and
sbb
add
test
dec
das
and
xor
sub
fadds
lahf
lods
hlt
adc
andl
cmp
fldcw
xor
jge
mov
push
add
lcall
bound
inc
xlat
insl
jle
in
jo
rcrl
dec
mov
add
out
pop
in
sahf
mov
and
frstors
or
in
xor
mov
adc
xchg
insb
movsb
mov
ret
in
nop
pop
xchg
add
sbb
fadd
data16
test
dec
dec
or
mov
test
cltd
daa
add
fcompl
sbb
std
stos
jle
les
mov
lret
lret
out
je
daa
out
push
insb
outsb
lahf
jmp
xchg
mov
loopne
jmp
insl
stos
pop
into
mov
xchg
add
cmp
movsb
adc
xchg
mov
insb
jge
xor
jmp
push
outsb
dec
fistl
cmp
and
or
aas
cmpsl
push
push
mov
orl
repz
imul
aas
call
xor
sbb
iret
in
shll
loopne
daa
cmpsl
in
loope
neg
std
pop
lret
push
dec
fdivrs
jl
lods
or
ja
cmpsb
negl
sbb
push
push
push
repnz
mov
add
dec
jb
test
fsubrl
cli
xor
mov
sub
in
and
cwtl
add
aam
repnz
arpl
ds
mov
addr16
insb
stos
add
dec
mov
pop
pop
fwait
mulb
jns
sahf
out
jle
and
xchg
repnz
sbb
bound
push
cmc
arpl
jecxz
jbe
add
icebp
fcomip
sbb
sarb
sub
jg
hlt
mov
ret
jb
pushf
gs
in
sbb
shlb
cmp
jg
pop
mov
scas
and
iret
mov
adc
inc
lret
or
jmp
mov
fisttpl
enter
shll
adc
sti
es
cwtl
add
nop
std
outsb
mov
dec
push
mov
xorps
pop
mov
lds
les
sbb
fsubrl
xor
jl
leave
shll
xor
adc
xchg
xor
adc
add
in
data16
jmp
xchg
repz
xchg
mov
movl
mov
pushf
int3
testl
imul
inc
adc
xor
adc
adc
ja
mov
insb
call
scas
lcall
nop
fldt
lahf
fiadds
jno
add
repnz
dec
push
and
cmp
das
xor
pop
mov
data16
test
mov
and
sarb
push
dec
push
fadd
aam
pop
call
jae
repz
clc
pop
push
cli
je
xor
inc
js
xchg
adc
in
mov
int3
add
jae
faddl
push
cmpl
xchg
gs
subl
mulb
push
test
push
fld
addr16
xchg
stc
push
mov
inc
add
xchg
orl
adc
adcl
popa
imul
mov
cs
test
mov
fnclex
rol
sahf
xchg
xor
pop
ret
into
call
mov
das
ret
push
and
into
fisubrl
stos
je
rorb
fwait
xor
jg
jp
jb
shll
xchg
pop
ret
push
loope
out
fcompl
jbe
push
mov
jmp
mov
mov
push
popf
sbb
jge
mov
call
leave
xchg
dec
dec
inc
fs
mov
shr
ret
jb
pop
xor
mov
mov
iret
es
adc
pop
lret
scas
test
adc
pop
enter
sbb
jl
xchg
xor
add
shrl
pop
ret
jecxz
mov
popa
and
mov
sbb
jbe
pop
inc
cwtl
adc
inc
mov
js
loope
lret
mov
xor
mov
cmpsb
mov
dec
lock
sbb
sub
mov
sarb
cmovp
pop
mov
add
dec
xchg
mov
push
cmp
pop
pop
cmp
adc
call
outsl
imull
jmp
mov
test
out
movsb
imul
pop
iret
push
cltd
sbb
repz
jg
mov
pop
out
stc
sub
push
fadd
mov
inc
popf
mov
sbb
add
mov
out
gs
pop
test
pop
mov
mov
sti
shlb
lock
icebp
xchg
xchg
lods
push
xor
push
xchg
sub
push
mov
daa
mov
lcall
insl
stos
push
add
out
jo
ss
stc
cmpsb
mov
stc
cmp
jns
and
dec
daa
jecxz
or
fimull
jmp
insl
adc
jl
jmp
les
sbb
cmpsl
push
fucomip
mov
jmp
fldcw
jne
and
jnp
or
adc
insl
in
test
iret
add
mov
sahf
jbe
jle
in
imulb
push
and
adc
mov
jne
dec
dec
clc
push
call
test
push
push
or
mov
gs
cmc
xchg
xchg
lahf
pop
icebp
jns
push
or
testb
fld
mov
imul
lds
scas
push
andb
cwtl
rorl
mov
jecxz
add
xchg
enter
in
lds
and
mov
bound
stc
sbb
dec
loop
push
dec
mov
fucomi
push
xchg
xor
stos
popf
add
jno
lret
sub
pop
and
mov
jmp
or
mov
xor
jbe
jbe
and
mov
xchg
outsl
shlb
jns
mov
imul
inc
mov
out
lea
dec
or
ret
andb
iret
hlt
fcmovnb
inc
divl
sub
pop
pop
mov
xchg
jae
insl
add
inc
fldl
push
ja
fmuls
cld
xchg
daa
scas
push
pop
stos
pop
fsts
test
lret
rcrl
cltd
jbe
mov
cmp
and
nop
sbb
inc
jcxz
add
dec
inc
jno
cmp
inc
ret
pop
out
pop
push
cltd
adcb
mov
bound
pop
gs
sbb
jae
ss
pop
sbb
xchg
in
xchg
hlt
inc
push
and
data16
ljmp
das
dec
or
mov
imul
sbb
mov
xor
pusha
inc
mov
add
rcrb
fidivrl
adc
push
loop
pop
cltd
daa
das
jg
fisttpl
sub
cld
loopne
ja
push
lock
push
cwtl
ljmp
and
mov
or
scas
les
mov
stos
data16
test
decl
xchg
pushl
enter
or
inc
in
dec
inc
aad
adc
mov
pop
cwtl
scas
insb
cmp
movsl
test
sub
sbb
fisubl
ret
add
and
mov
ficompl
out
cmp
flds
cmp
push
stos
mov
paddw
jmp
incl
xchg
ljmp
repz
pop
adc
pushl
stos
push
aam
jl
insb
sbb
dec
and
lds
scas
sub
jae
jne
mov
stos
nop
dec
sbb
push
fiadds
popa
ret
add
sub
mov
stc
sbb
scas
js
insb
and
ret
or
orl
or
or
dec
out
mov
jecxz
dec
rcrb
xchg
and
mov
fcomps
sahf
jge
icebp
aam
sub
and
sub
movsb
pop
adc
sub
in
cli
fisubs
popa
push
ret
or
jle
daa
stc
inc
mov
jo
add
sahf
xchg
dec
cwtl
jnp
sar
cmp
insb
xchg
movsl
dec
scas
lret
js
xor
int3
pop
fstps
inc
xor
outsl
int
and
jno
add
ljmp
sbb
sbb
fildll
das
fistl
shlb
callw
mov
outsl
loope
je
les
push
jle
movsl
daa
ret
jbe
pop
jo
pop
je
pop
inc
movsl
in
push
jno,pt
jl
sub
mov
jle
mov
sub
inc
push
mov
mov
shr
stc
jl
push
mov
sbb
xor
push
and
enter
xor
and
inc
xor
dec
mov
xchg
dec
test
or
js
mov
pop
xchg
jnp
sbb
lea
sti
dec
push
push
mov
fnstcw
repz
outsb
mov
fdivp
mov
inc
testl
out
loope
pop
push
mov
adc
mov
jmp
mov
cld
xchg
xchg
movsb
mov
out
call
loopne
neg
sbb
sbb
scas
xor
inc
leave
movsl
sbb
mov
enter
es
iret
stos
push
loopne
ljmp
test
inc
out
lcall
pop
insb
or
gs
pop
cli
int3
pop
push
mov
sarb
or
jle
out
das
ror
lods
loop
ljmp
orb
mov
sbb
mov
hlt
sub
push
sub
cli
jmp
dec
rcr
xor
sub
inc
nop
mov
rolb
push
xchg
sub
sub
jge
je
pxor
push
push
push
dec
cmpb
mov
insb
jne
in
jae
mov
dec
mov
jbe
xchg
pusha
or
cld
cmpl
aaa
stos
or
or
jle
or
lahf
jge
jle
or
xchg
xor
xlat
dec
hlt
out
mov
mov
sub
cmp
lock
and
je
mov
pop
and
xor
push
jne
hlt
aas
mov
and
cmpsl
pop
and
cmp
out
int3
dec
mov
adc
insl
arpl
loopne
jmp
lret
adc
and
ret
push
cli
test
dec
inc
mov
adc
js
arpl
inc
rorb
in
clc
or
xor
sbb
pop
cmc
negl
and
stc
pushf
fdivrl
push
and
adcl
lods
jae
shrb
les
mov
xchg
and
int3
xchg
loopne
jmp
mov
out
nop
mov
mov
adc
lock
pop
dec
pop
fmull
lock
in
fld
decl
ficompl
stc
loopne
sbb
insl
sbb
shr
xor
inc
jecxz
loop
orl
sub
ret
scas
repnz
or
or
movsl
and
mov
ljmp
outsb
mov
lods
out
mov
xor
mov
in
popf
dec
test
xchg
adc
pop
stos
idiv
add
lods
nopl
arpl
jae
insl
and
sub
push
mov
xor
int
jmp
and
cmp
lahf
mov
xor
out
sbb
inc
into
lods
ljmp
outsb
icebp
add
push
rcl
xchg
dec
sub
daa
loopne
fwait
xlat
and
or
iret
xor
test
or
stc
fstp
test
add
in
mov
adc
rclb
outsb
pop
pusha
fldcw
stos
sarb
sub
push
jg
imul
ficomps
jne
cmpsl
iret
mov
and
add
call
sub
pop
push
popa
cmpsb
pop
add
pushf
sbb
movsb
enter
cmc
int
daa
add
movsb
lea
cmp
push
popa
data16
pop
xor
mov
ret
inc
cmpsl
inc
sub
xor
mov
arpl
pop
scas
fnstcw
in
dec
lcall
shll
cmp
popa
push
push
dec
or
jl
push
inc
adc
lea
loop
inc
lcall
imulb
xor
test
fcoml
inc
mov
mov
jne
aaa
imul
mov
movsl
aad
fld
fs
mov
inc
jl
mov
mov
popa
push
xchg
scas
xor
mov
ja
mov
arpl
jae
cmc
pop
test
sub
adc
ds
jle
in
add
sbb
in
pop
daa
xor
jo
add
mov
dec
sub
and
cmpl
dec
dec
fdivrl
xor
add
sbb
xchg
fstpt
insl
clc
rcl
test
sbb
ja
ljmp
test
addr16
jle
ret
inc
inc
popa
jmp
mov
test
inc
mov
popf
aad
jg
pop
sti
cmp
cli
arpl
inc
inc
and
and
adc
adc
cmpb
or
fimull
pop
arpl
xor
mov
js
les
fnsave
pop
mov
shll
jecxz
mov
xor
xor
rclb
or
cmp
dec
stos
mov
mov
ret
xchg
sub
inc
xor
and
stos
ja
leave
pop
pop
jge
in
jp
jnp
leave
adc
aas
icebp
jno
into
jns
das
out
outsb
jne
jo
jnp
rcrl
sub
pop
arpl
push
mov
out
lock
fwait
and
lahf
xchg
dec
add
mov
rcrb
inc
and
push
ja
pop
adc
repnz
es
jg
pop
negb
enter
dec
sbb
mov
lea
aad
ljmp
xchg
imul
mov
mov
cmp
sub
adc
or
or
dec
sbb
jmp
sub
outsb
push
les
push
pop
xchg
lcall
mov
push
int3
sub
xchg
icebp
mov
ret
cmp
ficomps
ljmp
lods
dec
fwait
bound
adcb
push
push
and
out
fildll
rcll
in
lods
pop
pop
push
stos
inc
mov
jl
lret
cmp
shl
mov
insl
mov
mov
inc
jle
mov
xchg
in
repnz
and
cmp
mov
dec
cmp
lahf
sbb
mov
gs
std
movsb
rcl
xchg
pop
dec
mov
testl
mov
push
fsubl
lahf
inc
and
cmp
test
popa
loopne
pop
stos
cmpl
rorb
or
mov
add
lock
cltd
and
cwtl
loopne
add
pop
dec
int
inc
jae
nop
pop
and
into
jmp
jmp
jo
mov
imul
inc
daa
lea
pushf
inc
dec
pop
push
add
dec
iret
sbb
mov
jecxz
ret
jmp
rcrb
in
xor
mov
cs
mov
movsl
outsb
sub
adc
fsubs
sbb
das
mov
mov
pop
xor
in
push
dec
add
pop
shrl
push
mov
cmp
lahf
xor
loope
jae
fcomps
loop
push
jmp
lahf
lahf
cmpsl
inc
call
push
sub
in
adc
jl
dec
mov
dec
outsl
cld
jp
loope
aam
js
sub
jmp
cmc
aam
pop
rep
push
fwait
aad
loope
std
jl
mov
lea
xorl
mov
imul
jecxz
mov
in
fadds
sbb
fwait
push
test
xchg
xor
sub
or
cmp
fldcw
test
cmpsb
lods
push
mov
fcomi
je
jp
dec
jecxz
mov
rcrl
xor
clc
daa
pusha
or
xor
lods
lock
add
in
sbb
cmp
xor
adc
mov
clc
and
out
mov
jbe
or
xorb
push
mov
or
add
add
cmp
in
notl
cmc
pop
jnp
mov
fcomp
cmp
sbb
push
mov
out
rorb
or
leave
sub
in
aaa
pop
leave
jns
xlat
xchg
test
jne
cmp
xchg
ja
aad
inc
jnp
dec
cmp
aas
cmp
movsl
add
loopne
xchg
imul
scas
les
pop
fdivr
fnsave
adc
lret
push
in
arpl
push
das
nop
or
xchg
jle
popa
cmc
test
scas
jecxz
iret
in
das
mov
ret
jmp
xchg
cmp
popf
jle
dec
rcrl
jno
fstpt
and
mov
mov
lret
fstpl
ja
movsb
repz
rolb
loopne
and
or
adc
enter
jae
mov
cmp
out
mov
push
or
popf
mov
sbb
es
insl
aad
fisttpl
pop
xor
add
adc
xor
xor
xor
jmp
pop
push
mov
aam
imul
cmpsl
push
hlt
push
jmp
bound
pop
fiadds
pop
cmp
adc
xchg
sub
sub
outsl
mov
rcll
lret
xacquire
cwtl
imul
arpl
bnd
insb
aas
xor
mov
int
or
xchg
mov
push
pop
idivb
iret
hlt
dec
in
pop
lea
cltd
dec
mov
and
lret
xor
adc
cmp
adc
mov
or
cmp
sbb
rclb
add
mov
lods
ss
dec
out
xchg
adc
xlat
into
int
jp
lahf
shll
adc
mov
jl
ljmp
dec
cmp
inc
addb
test
sbb
sbb
dec
sti
mov
jae
loopne
fwait
lahf
cmpsl
cmp
inc
and
and
notb
add
gs
ficoml
arpl
pop
aaa
incl
mov
movsb
lock
pop
push
or
xor
xor
xchg
jmp
cltd
push
adc
sub
imul
jns
xor
xchg
mov
cmp
jno
mov
push
pop
lcall
rclb
and
les
mov
cwtl
insb
push
imul
lea
jnp
xchg
pushf
push
cwtl
es
je
ror
dec
test
ret
mov
repz
outsl
leave
imul
aaa
in
mov
and
imul
into
pop
cltd
imul
bound
sub
test
movsl
xchg
daa
lret
jp
into
push
inc
push
out
cs
cmp
and
mov
sbb
pop
jbe
mull
sbb
testb
xor
lret
inc
push
adc
in
nop
shrb
xor
cmc
aaa
bound
dec
and
pop
and
and
scas
fbstp
ljmp
int
loope
into
mov
xchg
inc
sub
push
pmaxub
inc
sbb
xor
inc
dec
mov
mov
fwait
arpl
fists
sub
mov
or
mul
shl
jne
dec
fwait
pop
xor
add
iret
mov
pop
mov
outsb
adc
mov
cmc
orb
add
xchg
and
pop
pop
or
push
and
adc
sbb
xchg
and
mov
dec
or
mov
sahf
movsb
xchg
push
int
icebp
std
gs
orl
mov
push
mov
and
and
lahf
stc
push
add
mov
cltd
int3
xor
adc
pop
sti
dec
jns
lcall
stc
sbb
lea
dec
adcl
inc
lcall
ffreep
and
imul
push
mov
jne
pusha
push
add
inc
or
je
and
mov
mov
jmp
add
insl
insl
loop
or
sbb
xchg
push
mov
add
mov
ja
mov
mov
adc
test
movsl
mov
cmp
je
aas
push
test
xchg
xor
fcmove
test
jo
cwtl
sub
push
rorl
shll
xchg
xchg
leave
pop
cmp
shll
repz
sbb
adc
icebp
cld
mov
std
xlat
cmp
fsts
aad
filds
xor
jb
sbb
bsf
jae
popa
ja
mov
lds
jbe
mov
jp
mov
test
scas
aas
pop
arpl
xchg
sub
out
pusha
pop
dec
fwait
decb
or
sbb
sub
outsb
ret
or
jb
aas
mov
scas
mov
mov
loopne
int
cmpsl
sbb
popf
xchg
add
push
fst
enter
sarl
dec
adcb
cwtl
lret
ljmp
aam
xchg
in
popf
sbb
mov
sbb
ret
or
add
mov
push
hlt
andb
jbe
and
inc
mov
test
stos
test
rcr
jp
stos
adc
mov
pop
sbb
xchg
out
sbb
adc
cmp
ret
mov
pop
sbb
mov
pop
pop
out
aad
scas
mov
loope
into
add
xor
cmp
into
movsl
stos
xchg
insl
roll
insb
mov
es
loope
xor
xchg
daa
sbb
test
cmpsl
ficompl
fbld
pop
pop
mov
clc
mov
mov
rcrl
ret
bnd
shlb
repz
push
push
xchg
das
xchg
inc
dec
scas
inc
mov
jo
pop
mov
ljmp
jns
inc
cmc
push
addr16
loop
insl
and
xor
lds
fisubrl
sti
xor
arpl
jae
and
mov
dec
es
imul
dec
adc
mov
outsl
mov
in
rorl
lret
inc
scas
clc
cmp
insb
adc
cmp
nop
inc
test
int3
and
cs
jae
and
ss
add
addl
cld
sub
sub
in
and
leave
sbb
call
push
nop
stos
mov
outsb
orb
cld
dec
mov
mov
aaa
add
mov
xor
push
pop
dec
mov
push
mov
push
pop
xor
aad
mov
lea
cwtl
mov
xor
cmpsb
lcall
cwtl
xchg
les
movsb
push
pop
xlat
pop
ja
std
adc
dec
xchg
cmp
dec
ljmp
fsubr
sub
sub
js
lret
mov
arpl
lods
add
es
xor
mov
outsl
pusha
popa
inc
pop
inc
in
mov
cmp
fbstp
ds
push
pop
bound
push
add
and
repnz
in
aad
add
rcrb
icebp
ss
sub
imul
movsl
incl
out
mov
pop
fbld
mov
sub
mov
push
sbb
jge
cwtl
dec
mov
xchg
sbb
dec
cmpb
inc
cmp
cwtl
xor
fwait
pop
popa
lret
nop
lods
loop
push
sub
inc
push
or
fidivl
std
imul
adcl
mov
mov
sub
out
sbb
sub
movsl
mov
ret
lods
icebp
mov
or
call
jp
sub
mov
cmp
lock
js
jno
inc
jnp
loop
mov
inc
mov
sbb
sub
ret
mov
mov
lods
aam
call
sub
and
and
call
pavgb
icebp
sub
sub
jle
lret
pop
imul
add
movsb
dec
and
int3
or
popa
mov
clc
sub
stc
in
scas
push
cmp
sub
sub
lods
lahf
or
negb
js
ja
jp
cmp
sarb
jp
pushf
imul
xchg
pop
jle
push
adc
fistps
or
rdpmc
jnp
cmp
repz
mov
mov
aas
dec
clc
rcrl
jb
cwtl
test
sub
cmpsl
out
and
sub
sub
mov
inc
lds
cmc
cmp
rcll
das
or
jae
or
mov
jbe
xchg
int
jmp
jl
scas
jl
dec
imul
addr16
pop
xor
iret
adc
daa
adc
lret
xchg
add
dec
adc
mov
cmpsl
fwait
bound
mov
scas
mov
sbb
mov
int
icebp
mov
or
add
xchg
dec
mov
pop
cmp
std
hlt
sub
xchg
rcrb
cmp
enter
cmp
nop
into
andl
mov
ret
hlt
ret
sahf
adc
shl
lcall
xchg
add
adcl
aaa
popa
xor
nop
ret
ds
inc
cwtl
pop
andb
das
lea
pushf
dec
cli
add
pop
in
repnz
test
das
inc
adc
cli
loopne
daa
pop
cmc
lock
popf
xor
jg
leave
insl
sti
xchg
arpl
jnp
or
mov
addr16
jbe
orb
add
inc
aam
jns
xor
or
rcll
cwtl
cmp
gs
adc
shrb
js
movsl
inc
jmp
ss
mov
inc
inc
cltd
fmul
test
sbb
pop
mov
adc
mov
and
aaa
aas
add
jmp
inc
jae
pusha
jmp
pop
aam
inc
test
dec
cs
or
repnz
outsb
mov
js
push
mov
out
or
test
lods
add
mov
sahf
xlat
icebp
adc
insl
fstl
mov
filds
mov
dec
jecxz
push
lcall
mov
dec
lfs
cmpb
xchg
mov
imul
das
add
jb
and
popf
mov
xor
jmp
push
jmp
andl
push
aaa
inc
int
mov
nop
jb
lahf
jl
xchg
jmp
xchg
cmp
jmp
xor
dec
loopne
outsb
idivb
add
mov
adc
enter
jge
jo
enter
dec
sub
test
jae
push
in
mov
cmc
sub
rcrb
imul
loop
icebp
hlt
xor
in
add
arpl
inc
dec
mov
push
cmovle
daa
sbb
push
lods
sbb
sbb
inc
jmp
mov
mov
hlt
jecxz
cmpsb
movsl
sbb
push
lock
cmp
push
adc
out
push
int
repz
or
lahf
adc
jmp
je
fsubr
int3
jg
dec
ja
dec
adc
adc
adc
add
nop
loope
or
cltd
mov
push
into
jp
push
repz
mov
arpl
scas
jl
adc
or
mov
add
add
arpl
dec
sbb
fidivrl
shlb
leave
push
in
mov
cltd
sbb
inc
idivb
adc
addl
add
ja
out
sub
loope
mov
pop
add
leave
pushf
int3
pushf
add
outsb
push
idivl
xchg
sub
jl
lods
testl
jae
xor
push
inc
daa
lock
dec
pusha
jge
xor
pop
gs
aas
addb
jl
fisttps
lods
daa
test
xor
fwait
and
data16
lock
in
mov
push
popa
sbb
push
mov
mov
rcrl
xchg
insb
out
push
fsubl
cwtl
out
pop
or
scas
push
adc
popa
jmp
pop
and
fistpll
sbb
popa
push
or
mov
sub
mov
push
pop
repnz
mov
xchg
xchg
pop
movsl
stos
adc
xlat
lcall
inc
or
mov
push
lahf
mov
pop
into
jns
xor
fidivrs
mov
sub
daa
mov
jae
sbb
outsl
pop
lret
sbb
mov
mov
fisubrl
in
jae
int3
aas
orl
mov
mov
jl
mov
xchg
cli
insl
mov
insb
and
lds
mov
frstor
ds
mov
jmp
jnp
cmp
bound
cmp
push
dec
jbe
pop
pop
adc
or
push
push
cwtl
faddl
xchg
bound
scas
dec
addr16
add
fnstsw
cmp
hlt
cmpb
filds
push
sbbb
xchg
jecxz
add
rcrb
popf
je
cltd
mov
mov
rorb
int3
addr16
cmpsl
sbb
test
inc
sub
mov
mov
frstor
data16
pop
shrl
out
ljmp
addr16
testl
sarl
jle
imul
push
xchg
sbb
xchg
xor
movsl
jae,pn
push
dec
mov
aas
or
loop
lcall
push
fisubrs
es
mov
push
out
les
xlat
sub
popf
aas
or
mov
or
stos
lock
cmc
fistpl
movsb
adc
dec
adc
inc
and
xor
jae
loope
xchg
loop
lea
push
fnstenv
lods
ds
dec
xorb
stos
push
xchg
mov
test
mov
lock
dec
pop
fsubrs
out
dec
xor
mov
add
gs
daa
dec
mov
cmp
xor
repz
imul
cwtl
jno
xchg
fistpl
aas
mov
jl
inc
lret
xchg
lock
mov
sbb
scas
pop
loopne
push
js
lods
add
scas
cld
mov
cmp
cmp
xorl
mov
mov
jmp
jno
xor
mov
push
movsb
pop
jle
sti
push
shrl
lcall
adc
aas
and
lahf
cwtl
repz
out
sub
sbbl
loopne
mov
call
mov
xor
pop
xor
rcr
lds
mul
call
add
or
lret
aaa
rcll
pop
jmp
lods
jbe
das
pop
jl
jge
cmp
aas
je
leave
pusha
cmpsl
jmp
mov
add
lds
mov
iret
stos
aaa
call
dec
jb
sub
xchg
lret
push
pop
adc
iret
dec
pop
push
mov
fs
xchg
in
cs
mov
mov
mov
les
mov
outsl
mov
lods
push
add
and
sarl
cs
and
js
mov
mov
in
jmp
xor
and
mov
sub
lods
inc
fistpll
ja
arpl
cwtl
inc
mov
aam
loope
mov
pop
xor
in
jnp
jns
test
mov
jb
out
test
jle
lret
mov
add
test
mov
mov
pop
scas
cmp
mov
sub
inc
dec
outsl
je
cmp
hlt
pop
cmp
leave
loop
push
sti
xchg
xchg
adc
movsl
push
imul
stos
cmp
cltd
push
idivb
dec
pop
push
hlt
cltd
mov
push
mov
xchg
mull
sbb
les
mov
ss
pushf
add
int
fldcw
mov
push
aas
stc
push
stos
pop
mov
push
clc
testb
sub
xchg
fidivs
push
call
and
xor
xor
in
or
sbb
addr16
jo
je
cwtl
jae
ficomps
dec
or
outsb
push
jge
jmp
or
adc
xor
test
lods
cmp
add
leave
xchg
dec
dec
mov
push
adc
cmc
mov
sbb
adc
lea
pop
mov
xchg
cmpsl
movsbl
enter
sbb
shr
mov
stos
outsl
addb
lock
xchg
int3
jle
test
mov
inc
cli
push
lcall
sub
pop
pusha
repz
xlat
add
jecxz
inc
mov
sbb
xor
mov
inc
outsl
cmp
sbb
jnp
into
divl
movsb
hlt
call
loopne
inc
add
cmp
xchg
xchg
outsl
push
fucomip
popl
fbstp
push
insl
les
int3
cmp
lods
xor
jle
lcall
pop
shlb
pop
imul
mov
add
les
sti
filds
push
aas
mov
in
stos
dec
sbb
ret
dec
pop
adc
jmp
xchg
mov
lock
cmp
sbb
scas
fstl
mov
xchg
or
xchg
negl
scas
push
mov
mov
push
loop
xchg
xor
bound
int3
repnz
sbb
movsl
test
daa
jnp
cltd
push
inc
shll
push
pop
js
adc
or
mov
gs
stos
inc
fs
fmull
push
fsubs
scas
mov
xor
or
dec
inc
mov
fdivs
xchg
pop
pop
repnz
mov
cmpsl
sbb
fcomps
push
clc
aam
testl
cmpb
and
fldcw
mov
mov
fldl
xor
repnz
xchg
sbbb
inc
sub
nop
jb
sub
std
int3
xor
ss
cwtl
das
mov
add
stc
dec
mov
mov
mov
cli
jno
ficomps
pop
lahf
dec
xor
mov
scas
mov
pop
and
repnz
cmp
js
mov
stc
xchg
pop
lea
mov
std
inc
and
arpl
add
lods
push
nop
hlt
sbb
xchg
lock
nop
sub
leave
cmp
adc
cld
push
aas
jb
out
fldl
out
test
cmp
cmpsl
idivb
sub
mov
fsubl
xchg
inc
shrl
pop
lods
and
repz
sarl
and
cmpsl
into
fs
cs
add
xchg
xchg
xchg
ret
jmp
and
sbb
imul
sbb
subb
pushf
fcmovnu
leave
sbb
xchg
lods
push
xor
or
xor
add
test
inc
adcl
inc
movsl
int3
fcmove
and
std
ret
daa
out
sbb
jno
sub
pop
js
pop
fcmove
add
dec
jmp
and
mov
imull
mulb
xchg
xchg
ja
push
bound
sti
aas
lock
loopne
jbe
scas
cmpl
mov
mov
negb
js
loope
sbb
lea
sti
ss
xor
cld
out
cld
sti
and
enter
scas
dec
addr16
mov
or
mov
push
movd
in
push
scas
mov
mov
xchg
mov
aas
and
add
into
or
shll
adc
lods
scas
or
rol
xlat
out
arpl
aam
sbbb
sbb
arpl
sbb
push
jg
jbe
jg
dec
enter
clc
inc
lret
dec
inc
js
ret
call
pop
mov
mov
push
test
or
pop
shlb
and
inc
inc
in
fidivrl
xchg
insl
in
inc
lods
xlat
aam
sti
or
mov
lds
stos
comiss
sub
test
ficompl
mov
out
out
rolb
dec
add
call
or
mov
push
inc
das
cmc
jne
sarb
inc
ret
inc
sbb
cmp
mov
hlt
pusha
lods
add
pop
lods
mov
movsl
and
mov
adc
lock
dec
xchg
jp
or
sahf
inc
cmp
loope
jae
jb
cmp
xchg
sub
push
xchg
dec
int
mov
pop
mov
sub
lahf
mov
xchg
add
push
xchg
addr16
cmpb
aas
lcall
xor
inc
inc
dec
out
xchg
sti
imull
iret
add
adc
sub
in
cld
in
jns
xor
and
inc
ret
lock
insl
pop
cld
pop
out
adc
in
pop
add
xor
push
outsl
out
repz
aas
pop
inc
xchg
pop
adc
daa
sub
or
push
es
imul
mov
stos
sub
mov
dec
decl
mov
adc
int
xchg
arpl
push
cmp
aaa
cmpsl
adc
lods
addr16
adc
cwtl
mov
or
lods
stos
sub
jp
aam
xor
imul
or
or
mov
mov
sbb
jae
adc
std
sub
nop
ret
mov
or
adc
addl
jge
xchg
jns
xchg
ret
push
and
push
js
push
push
lret
and
in
cwtl
mov
das
jl
loop
xlat
sub
mov
in
jmp
cli
push
ret
adc
arpl
adc
mov
adc
jne
call
adc
xor
shl
inc
cmpsl
icebp
xchg
gs
jge
sub
insl
cmpl
cmp
jle
jle
mov
sarl
cli
lret
lcall
popa
jbe
mov
cmpsb
sbb
pusha
dec
push
push
push
fistpll
fcoml
mov
div
loopne
getsec
push
popf
push
les
outsl
mov
jg
xchg
repnz
dec
movsb
ljmp
cmp
push
rcl
sub
pop
mov
mov
and
inc
das
sbb
pop
scas
imul
add
sbb
sub
jbe
lret
dec
xchg
mov
adc
mov
out
addr16
rolb
shrb
or
xor
andl
xchg
test
sub
daa
mov
enter
and
push
mov
cli
scas
pop
and
cmp
out
in
jl
xor
or
ret
shl
push
mov
dec
hlt
or
mov
push
and
mov
or
adc
pushf
cli
mov
lods
popf
jo
pushf
leave
mov
bswap
inc
or
xchg
mov
and
popa
pop
mov
dec
mov
jns
xchg
notl
popa
xor
sarb
lods
jbe
jg
jno
ret
ffree
subl
test
lock
call
xchg
aam
mov
xchg
mov
jb
xchg
mov
or
push
cmpsb
jns
in
out
xor
xchg
in
out
test
mov
jnp
add
push
add
fdivs
mov
xor
in
fucomi
mov
std
sti
cmp
sbb
jae
dec
test
mov
cmp
gs
mov
jo
jns
jmp
test
mov
inc
cmp
lds
jle
stos
mov
adc
or
and
bound
test
das
popf
jp
mov
dec
sub
imull
cmp
mov
cltd
lods
nop
adc
jle
lret
mov
xlat
out
fcomps
push
mov
adc
repz
lods
ror
repz
and
in
pop
pusha
rcr
adc
loop
pop
sub
xor
das
jb
ja
out
sbb
pusha
add
inc
mov
pop
and
push
test
or
call
out
int3
rcrl
add
xor
dec
mov
popf
lods
xor
pop
fwait
cmpsb
cli
jae
pop
mov
inc
lock
push
xchg
mov
push
and
pop
push
sub
mov
mov
xchg
xchg
mov
jbe
sub
loop
mov
iret
jle
mov
shll
data16
or
or
pop
jo
pusha
in
cmp
and
mov
or
inc
pushf
bound
or
shr
movsb
bound
sar
adc
aad
stc
nop
push
dec
orl
je
clc
xor
push
jno
xorl
sub
push
mov
ret
cmp
call
out
js
jns
popf
or
nop
xor
dec
jg
test
in
sbb
inc
lea
cmc
dec
lret
call
sub
pop
jno
xor
hlt
pop
outsl
ds
jb
sbb
test
cs
loope
ds
or
outsb
aam
outsl
cs
inc
js
into
lea
mov
stos
push
aaa
enter
fs
mov
pop
scas
jb
dec
add
ret
mov
pop
iret
inc
adc
pop
call
and
sub
shrl
cwtl
inc
pop
mov
ret
xlat
dec
or
lods
rorl
mov
movsb
out
mov
lods
add
xor
pop
mov
jbe
push
sub
xchg
sbb
test
leave
push
xchg
pusha
testb
stos
xchg
in
stos
and
hlt
cwtl
sbb
mov
outsb
imul
mov
pop
cs
adc
xchg
pop
mov
int3
jle
xchg
push
mov
add
pop
mov
das
and
push
pop
jo
and
repnz
mov
rcll
pcmpeqd
cmp
clc
sub
mov
sbb
std
clc
mov
lds
lock
leave
add
mov
es
jmp
imul
mov
gs
jns
pop
js
cmp
leave
sbb
mov
inc
repz
xor
imul
dec
dec
push
sbb
fwait
out
je
aam
pushf
in
fwait
cmpl
nop
scas
dec
mov
lods
or
dec
js
and
or
scas
outsl
xor
jo
mov
cmp
mov
xchg
aam
test
jb
pop
push
std
xor
add
xor
jl
mov
adc
sub
pop
fs
adc
xor
or
add
lds
outsl
inc
imul
or
je
jno
bound
push
add
dec
or
push
xor
mov
ss
fists
jno
add
jl
cmp
inc
pop
adc
mov
call
roll
fisubrs
lds
inc
lds
fistpll
lret
xchg
popa
jp
fmuls
or
mov
das
scas
and
cmpb
xor
jp
sub
scas
lahf
xor
fsubs
fwait
jle
cmp
fst
nop
lret
mov
addl
dec
ja
pop
iret
fcomp
test
add
fmuls
push
sub
cmc
jecxz
rcll
pop
les
xchg
scas
mov
xchg
mov
lock
add
or
ja
jge
mov
or
sbbl
or
jno
fbld
adc
mov
fistpl
add
notb
inc
enter
fwait
jl
sbb
call
or
shlb
push
mov
cmp
nop
stc
ss
inc
dec
mov
adc
dec
sbb
pop
lock
loope
xor
gs
daa
jmp
xchg
dec
pop
out
loop
mov
test
gs
sbb
addr16
jge
iret
push
add
mov
loopne
sub
cs
out
inc
insl
cmp
mov
pop
adc
jb
stc
mov
lds
mov
js
shll
jl
mov
clc
mov
loop
xchg
shrb
jl
cmp
sbb
push
ss
aad
mov
test
into
ret
pop
mov
sarb
imul
cs
dec
lcall
push
clc
xchg
xchg
inc
mov
bnd
xchg
push
mov
dec
mov
testl
cmp
or
in
icebp
xor
xor
inc
adc
movsb
and
mov
popf
div
fnstsw
testl
mov
fmull
rclb
in
or
mov
rcr
lds
out
fistps
or
fwait
lods
dec
add
insb
outsb
mov
dec
and
enter
xchg
xor
mov
int
dec
and
pop
hlt
adc
call
cmp
outsb
cli
shrl
dec
inc
mov
mov
into
inc
gs
ret
ret
stos
sub
lret
dec
bound
ret
sub
pop
loopne
push
dec
dec
aam
mov
xchg
dec
test
and
fists
outsl
pop
je
fcmovnu
movb
pop
xlat
dec
cltd
arpl
inc
das
daa
sar
and
pusha
rdpmc
out
xchg
sub
adc
loopne
push
out
in
adc
inc
mov
xchg
pop
stc
add
insl
xchg
rorb
out
ror
jo
testb
das
mov
push
sbb
jnp
xor
sbb
inc
fisubs
cmp
out
shll
dec
les
xor
mov
cmc
pop
jne
mov
jmp
fbld
mov
out
rorl
inc
jo
icebp
xor
lods
pop
push
aas
xchg
inc
mov
or
mov
and
and
mov
pop
insl
jmp
ljmp
dec
ret
pushf
shlb
and
sbb
imul
pop
add
out
stc
rolb
inc
xor
sbb
lcall
pop
cmc
cmc
jns
loop
lcall
lods
data16
xor
in
mov
idivb
inc
and
orl
outsb
inc
das
pop
fisubl
cmpsl
das
loopne
xchg
dec
cmpsb
push
mov
dec
xchg
ret
or
xor
fmuls
adc
sbb
jb
mov
inc
push
adc
popa
xchg
outsl
push
jmp
pop
inc
or
xor
push
test
in
cwtl
pop
push
popa
add
test
shrl
std
or
jns
sub
fs
mov
ljmp
mov
push
push
pop
data16
inc
fisttpll
dec
fcompl
popa
popf
adc
out
lret
add
divb
lock
or
jl
sub
movl
iret
outsl
xchg
adc
sub
cld
push
cwtl
or
sub
mov
in
insl
pop
shlb
jl
shll
push
add
jg
cld
adc
notl
shl
xchg
fldt
ja,pt
jmp
lret
adc
push
or
fucomip
movsl
and
cld
ljmp
mov
out
popf
iret
fsubrs
sub
sub
xlat
dec
incl
fld
xchg
inc
nop
mov
xchg
lock
stos
jno
pop
sub
or
push
cltd
adc
add
aaa
stos
xor
cmpsb
push
pop
fcmovne
jmp
jg
jnp
xlat
sbb
ja
pop
mov
sub
sub
movsl
loopne
mov
out
lock
cmpsl
sub
inc
dec
ss
or
sub
movsl
mul
pop
xor
jno
cmpb
cld
xchg
push
jg
mov
loope
or
mov
fisttpl
ss
add
rcl
jb
jp
mov
test
xchg
xchg
dec
mov
sbb
enter
adc
fwait
pop
mov
cmpsl
addr16
push
leave
xor
cltd
sbb
xor
cmp
js
and
mov
sbb
ret
std
push
scas
popa
sub
pop
jb
enter
stos
xor
cmp
ficomps
mov
dec
lret
jmp
mov
ret
mov
cmp
xchg
add
inc
add
data16
inc
imul
xchg
dec
jo
and
inc
ret
loopne
call
or
cmp
xchg
sub
fmul
jmp
push
pop
rorl
imul
or
fxch
lds
pop
adc
pusha
push
adc
mov
rcrl
or
std
mov
in
test
testb
push
outsb
jnp
sbb
sbb
pop
adc
clc
daa
imul
mov
mov
popfw
mov
mov
sarl
pusha
pusha
lds
insl
cmc
push
sub
lret
mov
lahf
mov
push
jp
aad
arpl
ljmp
sub
xchg
dec
stos
inc
xchg
clc
push
xorl
test
mov
sub
mov
es
lret
pop
lock
and
or
pop
ficomps
mov
and
pop
push
into
idivl
sbb
repnz
mov
jp
mov
inc
imull
cmpsb
inc
rcrb
and
mov
loopne
js
mov
jae
cmp
pop
inc
add
jecxz
or
ret
std
and
cmp
jo
sub
aaa
fnstenv
hlt
adc
cmc
push
loope
mov
xchg
test
cs
jge
out
loop
imul
sub
dec
push
adc
iret
sahf
fcmovnb
adc
inc
sub
test
insb
movsl
cld
out
push
xchg
imul
hlt
mov
mov
pop
ds
fsubrs
nop
imul
dec
push
sti
les
add
pop
cmp
adc
sbb
in
xor
cmp
roll
xor
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
pop
ret
push
mov
push
mov
mov
add
movl
mov
adcl
mov
xorl
add
sbbl
xor
movl
cmp
movl
jne
andl
mov
dec
mov
and
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
adcl
movl
mov
mov
and
lea
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
push
pushl
push
call
cmpl
jb
xor
add
adc
mov
lea
dec
mov
mov
adc
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
inc
mov
negl
xor
add
andl
mov
mov
mov
sub
and
mov
incl
mov
andl
mov
andl
add
movzbl
or
push
add
mov
movzwl
sbb
mov
andl
mov
mov
xor
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
sbbl
add
movl
cmp
je
mov
jmp
mov
cmp
jne
movl
push
jmp
mov
mov
mov
cmp
jne
sbb
mov
mov
sbb
mov
xor
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jmp
out
add
outsb
sbbl
hlt
xor
popa
rcrb
jge
packssdw
lock
jmp
pop
loop
daa
out
inc
cld
lahf
push
lret
add
pusha
pop
stc
pop
loop
xor
aaa
pop
dec
lcall
daa
sbb
xchg
std
xor
add
push
addb
dec
testl
xchg
dec
push
dec
data16
mov
inc
mov
xor
fiaddl
incl
push
push
jb
add
clc
repnz
insl
pop
aam
fdiv
add
dec
and
lods
fstl
adc
pop
pop
sbb
xchg
test
cltd
cmp
push
bound
pusha
lret
xchg
lret
ljmp
inc
scas
push
scas
pushf
pusha
hlt
dec
mov
mov
push
inc
push
push
xchg
xor
arpl
cmp
int3
push
xor
cmpsl
iret
pop
js
and
jge
in
jle
fstpt
jnp
ret
adc
je
sbb
adc
mov
mov
fistps
mov
inc
or
and
subb
in
das
fiadds
lcall
mov
test
mov
je
inc
cwtl
pop
lret
pop
push
xchg
mov
xlat
mov
stos
or
xlat
lods
mov
or
iret
fyl2x
jmp
sub
sub
pop
mov
inc
pop
adc
fisubrs
inc
and
mov
aas
inc
ret
mov
int3
adc
pop
js
or
cs
call
mov
adc
sbb
jl
add
cmpsb
mov
das
adc
cmp
jge
or
jmp
nop
cmp
lcall
cmp
cmp
push
rcrl
pop
loope
in
xor
push
cmc
aaa
fadd
add
or
fstl
or
sbb
cwtl
cli
icebp
mov
mov
dec
icebp
ficompl
or
shrb
daa
xor
aad
test
pop
push
movsb
cmp
jnp
jge
aas
enter
jmp
std
jg
sub
pop
notl
test
jp
push
fdivrp
cli
inc
mov
push
test
pop
mov
andb
xor
or
mov
mov
or
std
or
push
inc
bound
cld
adc
popf
or
jge
sub
fwait
cli
int3
fisttps
in
cmp
enter
or
jns
xchg
mov
rorl
dec
sbb
add
out
jg
jge
fisttps
and
js
mov
mov
pop
out
fldcw
std
pushf
mov
add
popf
fcom
pop
push
sbb
bound
add
lock
pusha
shlb
pop
inc
mov
and
mov
add
push
mov
and
pop
xchg
mov
jl
xor
xor
imul
pop
push
mov
jnp
and
mov
mov
push
cwtl
xchg
arpl
cltd
imul
sub
dec
add
repnz
xorl
sbb
mov
int
sub
or
jo
ja
inc
inc
lock
xor
icebp
int
jbe
cltd
daa
xor
pop
adc
cmp
mov
nop
roll
stos
negl
lea
fstps
add
aam
stc
aad
in
sbb
jl
in
xchg
dec
cmpsl
sub
mov
dec
inc
daa
mov
add
pop
lcall
mov
shrb
xor
inc
aaa
shr
lahf
rorb
mov
xor
push
lret
cwtl
outsl
test
testb
adc
xor
in
aad
inc
dec
pushf
int3
outsl
mov
dec
jbe
and
ljmp
sarl
imul
icebp
negl
xchg
cs
mov
or
pop
sahf
movsb
push
frstor
out
arpl
and
jne
mov
pop
push
fmulp
adc
jp
dec
xor
mov
dec
icebp
shlb
inc
cmp
data16
fcoml
leave
adc
jae
sub
mulb
mov
sub
jae
test
lods
jbe
hlt
and
jb
cmc
clc
jne
ffreep
pop
push
jbe
in
mov
dec
fs
xchg
jecxz
inc
lcall
fnstenv
push
push
push
sub
mov
out
les
shll
mov
adc
mov
xchg
imul
mov
sub
ss
and
aam
sub
fsubs
lret
pop
jg
repz
dec
clc
aaa
pop
inc
gs
shll
or
push
repz
jo
dec
mov
and
xor
or
cmp
dec
inc
mov
inc
sti
fs
data16
cmp
mov
and
sub
in
je
jmp
aas
inc
subl
xchg
lods
mov
xchg
scas
out
inc
mov
or
lds
bound
jp
jne
mov
mov
out
jno
fwait
out
xchg
jno
fnsave
stos
cmp
push
lock
shll
mov
or
cli
testl
push
lret
dec
push
inc
adc
fwait
xor
dec
xor
adc
sbb
xchg
sub
push
mov
iret
mov
mov
or
xor
xlat
pusha
pop
inc
ja
xchg
cmp
push
xchg
loopne
inc
lcall
pop
das
stos
outsb
jmp
out
push
or
cltd
push
ja
cmpsb
or
or
pop
gs
faddl
xchg
and
inc
jecxz
jae
jg
repz
or
inc
into
push
out
jno
stc
ljmp
bnd
sub
and
cld
add
push
cmp
inc
mov
jle
fsubrs
xchg
inc
addr16
stc
dec
insb
in
adc
push
bound
fisubl
push
adc
mov
pop
xchg
cmp
adc
pusha
lahf
inc
mov
mov
xor
xchg
imul
inc
addr16
and
sub
or
in
fs
add
mov
xor
mov
jmp
out
dec
wrmsr
fmuls
dec
push
inc
nop
or
inc
insb
jb
pop
xchg
dec
push
xchg
repz
scas
fnstcw
mov
lds
scas
sbb
cwtl
ret
dec
mov
je
and
les
mov
ljmp
ret
cmp
push
lret
inc
dec
cmp
lock
fisubrl
movsl
inc
pop
lahf
dec
sarl
xor
dec
or
cmc
inc
jecxz
jb
jnp
lods
jne
jae
push
inc
fldt
out
push
jno
test
cmp
bound
enter
in
hlt
in
scas
and
cmp
daa
repnz
push
dec
or
add
mov
inc
sub
fwait
rclb
jg
jp
mov
test
call
scas
inc
arpl
adc
jno
or
or
popa
inc
sarb
cli
movb
mov
add
inc
pop
orl
jecxz
cld
in
into
rclb
or
ljmp
call
int3
insb
mov
je
gs
lds
fimuls
jbe
mov
lods
pop
inc
mov
inc
mov
out
mov
sbb
mov
mov
dec
data16
or
and
inc
int
ret
mov
mov
inc
loopne
push
adc
inc
in
mov
sbb
hlt
fadds
int3
movsl
je
lds
test
xchg
push
jnp
pop
xor
bound
sbb
cmp
jle
push
mov
push
push
jne
pop
js
fneni(8087
in
inc
cmpsb
mov
outsl
push
adc
stos
icebp
bound
push
push
cmp
inc
push
cmp
push
mov
pop
xchg
cltd
pop
fidivl
hlt
sub
xchg
sbb
repz
adc
lcall
jp
push
mov
out
mov
dec
or
jo
out
sbb
jnp
mov
rclb
jnp
push
mov
outsl
and
adc
adc
sub
rolb
inc
pusha
fwait
inc
rcrl
lret
fwait
out
sub
mov
or
xchg
fldt
nop
cmc
hlt
addl
or
or
push
sub
xchg
pop
in
cld
vpcomud
test
mov
sti
mov
rolb
mov
cmpsl
xchg
jno
ret
push
xchg
mov
dec
cmpsl
add
xor
xor
mov
mov
jle
mov
push
add
push
lea
les
mulb
in
add
pop
or
movb
fisubs
mov
out
jne
cbtw
sti
push
fisttpll
shrb
call
lret
int
mov
sbb
arpl
scas
mov
add
mov
fbld
jg
movsl
jo
scas
dec
sbb
sahf
push
or
push
jbe
or
inc
sub
ljmp
icebp
fs
cmp
mov
cmpsb
push
or
inc
test
mov
push
adc
lea
loope
dec
stos
jmp
push
xchg
ja
xchg
xor
sub
sub
inc
rcl
lret
and
scas
and
xchg
out
dec
outsb
outsb
inc
dec
add
sahf
jbe
loopne
or
cmp
mov
ds
inc
lahf
inc
jmp
mov
pop
mov
and
cltd
push
mov
loope
dec
ljmp
and
arpl
jne
aaa
jmp
pop
test
dec
xor
cmp
loop
inc
xchg
mov
inc
ret
sbb
aam
push
pop
outsb
dec
jne
dec
mov
out
mov
aad
pop
pop
or
out
dec
or
mov
inc
cs
and
add
sub
pop
inc
call
push
lret
sbb
cmp
cld
push
and
popl
in
rcrl
push
xchg
lret
xor
dec
sahf
mov
pop
xchg
out
push
ret
test
dec
shll
aam
stc
add
in
into
adc
repnz
xchg
inc
imul
ror
sub
lret
lods
mov
push
jecxz
pop
push
add
sbb
in
ret
cwtd
or
jg
in
add
cld
pop
outsl
hlt
dec
das
push
mov
jge
out
movsb
dec
adc
enter
out
add
push
popf
in
dec
mov
xchg
lahf
xlat
aad
stos
aas
out
mov
stos
adc
push
cmp
pusha
pop
sbb
jnp
out
or
xorl
and
mov
mov
cmp
stos
sub
lfs
xchg
push
adc
loopne
scas
or
add
xor
dec
sub
ret
mov
xchg
inc
jb
outsl
and
push
mov
rcl
and
adc
jb
inc
jae
mov
in
lret
clc
inc
xor
stos
mov
lds
mov
xchg
push
imul
enter
mov
mov
movl
xor
jo
repz
lret
arpl
lret
inc
pushf
pop
mov
mov
adc
sbb
je
push
cmp
sub
pop
mull
jno
mov
sub
pop
sub
loop
fnstenv
mov
adc
xchg
add
push
xchg
cmp
stc
cmp
cmp
ret
mov
fnstenv
xchg
imul
adc
hlt
call
mov
gs
push
pop
nop
jb
in
mov
mov
pop
xor
mov
xor
sub
pop
popa
lea
xchg
adc
out
push
in
loope
stos
adc
fmull
jmp
leave
bound
ret
das
lahf
jg
dec
cmp
rclb
aam
cs
clc
mov
push
sti
xchg
jno
fwait
pop
rol
add
xchg
sbb
push
loope
jnp
push
add
sahf
movsl
pop
loope
imulb
add
sub
into
sbb
movsb
arpl
in
cmpsl
insb
clc
add
ja
mov
adc
addr16
loope
mov
pop
int3
and
int
push
sub
mov
mov
jnp
pusha
sbb
inc
inc
push
sti
or
in
out
jbe
add
inc
mov
add
mov
add
pop
pop
inc
rolb
pusha
cld
mov
aam
std
dec
lahf
into
xchg
data16
inc
mov
insl
aaa
push
cmp
ret
cmpl
xor
xlat
test
adc
mov
xlat
mov
push
push
stos
push
lcall
fistps
mov
bound
lods
popf
jmp
addr16
mov
and
ds
add
push
test
xor
sub
xor
push
movsl
mov
push
pop
inc
lds
push
leave
jae
imul
sahf
subb
jne
pusha
loop
imul
mov
sbb
add
mov
daa
jge
ficoml
xorb
xor
push
cli
dec
std
mov
mov
and
test
fisttpl
lock
dec
push
xchg
int
adc
xchg
subl
pop
xchg
daa
add
cli
sub
insl
xchg
jl
add
jo
imul
jp
ret
or
mov
in
mov
jns
fwait
xor
scas
add
sti
mulb
mov
and
inc
xchg
sbb
xchg
lods
fstpl
test
xor
and
mov
loope
mov
aad
pslld
into
lcall
arpl
les
or
mov
inc
mov
or
cmp
sub
in
lock
scas
push
push
or
cmpsl
inc
or
mov
lret
sub
mov
imul
mov
push
out
push
mov
xlat
inc
inc
cli
and
xchg
mov
mov
in
das
add
and
lret
lahf
fbstp
pop
clc
lret
push
push
and
mov
sbb
pop
or
cmpsb
sub
fnstenv
daa
jae
lcall
cld
push
decl
and
jle
xchg
rcr
fmul
pop
mov
mov
cmp
mov
jle
jo
jecxz
jmp
or
je
sbb
adc
ret
in
fmul
xchg
or
aas
adc
mov
jno
push
pop
and
add
dec
mov
in
or
adc
sbb
mov
add
in
roll
mov
sub
xchg
mov
dec
stos
enter
addr16
jle
dec
add
pop
les
jb
dec
movsl
mov
enter
ficoms
push
mov
xchg
fcmovnu
cmp
mov
jecxz
out
dec
daa
movsb
insb
aam
and
sbb
sub
dec
inc
cmp
sbb
ss
dec
imul
xlat
mov
push
imul
xchg
or
push
xchg
clc
lret
ffreep
bound
add
mov
add
mov
jbe,pt
jle
arpl
mov
lea
imul
into
push
jg
mov
in
inc
adc
lahf
jbe
pusha
dec
xor
sub
mov
imul
call
sub
hlt
mov
push
push
imul
imull
outsb
xor
std
rcl
test
xchg
adc
push
and
push
mov
push
sbb
cmp
mull
lahf
sbbl
out
test
nop
sbb
cmp
inc
or
pop
inc
and
mov
nop
andb
inc
push
int
clc
push
aam
add
rorl
sbb
adc
fwait
shrb
sbb
adc
xchg
mov
fcoml
jg
ja
std
nop
fidivl
mov
outsb
add
fisttpll
dec
cmpsl
push
in
rcrb
xor
in
xor
push
cmpsl
cmp
cmpsl
mov
dec
ficoml
pop
sbb
stos
dec
pop
jmp
lgs
cmp
cmp
mov
cld
rorb
pop
sub
fstl
shl
in
xor
std
dec
insl
jmp
pop
dec
xchg
addr16
lods
push
sbb
dec
pop
mov
xor
push
xorb
push
lds
ljmp
movsl
cmp
lret
dec
mov
push
clc
cmp
inc
inc
cmp
cmp
and
fbld
ds
jmp
jg
loopne,pn
dec
mov
jmp
sti
int
and
add
jae
inc
fwait
arpl
rcr
cmp
push
lcall
call
jnp
mov
call
sub
mov
push
fs
push
insl
xchg
orl
or
jg
sub
or
adc
mov
mov
sub
sub
mov
cwtl
pop
andl
mov
in
ficomps
outsl
mov
or
cmp
pop
mov
adc
adc
jnp
aad
out
and
in
xor
mov
sbb
inc
dec
pop
pusha
fisttps
sub
repnz
popa
dec
in
and
aas
in
inc
mov
insl
ljmp
stc
ret
mov
cmc
inc
fcoml
lds
push
in
push
pushf
sbb
lods
adc
mov
loope
fnsave
dec
mov
cli
dec
or
adc
pop
and
ja
sti
popa
dec
xorl
sub
sub
fscale
lret
cmp
out
int3
sbb
jbe
mov
jle
fs
xchg
push
mov
pop
xchg
jmp
mov
scas
pop
mov
fldt
mov
lret
pop
test
xlat
jmp
dec
fcmovne
lret
xor
sbb
jl
clc
iret
or
jb
stc
mov
popf
sti
insl
jmp
push
shl
dec
in
insl
sub
scas
xor
stc
ds
sbb
cwtl
imul
lretw
mov
outsb
mov
insb
sti
cmc
push
test
mov
fisubs
adc
adc
jne
mov
jbe
shl
repz
jnp
cwtl
dec
enter
int
xchg
jbe
push
or
movsl
jns
cmp
dec
push
data16
cld
imul
and
ss
cmp
inc
mov
lret
push
adc
aam
xchg
je
ficompl
aad
sbbb
jl
xchg
out
sti
addr16
sub
mov
cwtl
repz
push
hlt
sahf
sub
stos
and
es
sub
jnp
stc
and
inc
addr16
mov
out
fnstcw
mov
enter
imul
into
ret
add
ret
pop
in
sub
mov
out
mov
push
mov
pop
ljmp
inc
or
dec
fmull
or
mov
pop
adc
inc
pop
push
push
jge
filds
jo
es
fstl
or
ss
pusha
cmp
add
ja
aam
lahf
and
mov
and
mov
in
scas
ja
jge
mov
inc
mov
rorb
call
cmc
rcrb
mov
cltd
add
xor
in
stc
push
sbb
jno
cmp
pop
add
mov
stos
lahf
inc
mov
xchg
mov
dec
mov
xor
ficomps
push
dec
movsl
push
ret
imul
inc
cmc
jp
xlat
cmpsl
push
iret
inc
fs
out
adc
mov
cmpsl
mov
stos
scas
jo
leave
iret
loop
insb
fldenv
in
dec
jns
pop
xchg
inc
or
mov
mov
inc
push
ficoml
inc
lahf
cs
sub
dec
cmp
jno
inc
mov
xchg
notl
jns
and
mov
inc
inc
pop
lret
mov
and
push
jno
pusha
int3
adc
push
add
inc
cmp
jne
hlt
mov
xor
xchg
xlat
mov
adc
lcall
adc
adc
mov
push
xchg
inc
mov
mov
dec
inc
std
pop
pop
sbb
mov
add
or
xor
jns
jo
or
loop
pop
iret
mov
adc
sub
outsb
mov
cld
fs
push
mov
add
inc
popf
pop
out
std
jns
pop
loop
mov
xor
lret
dec
addb
push
mov
xchg
xor
cmp
insl
imul
pop
dec
dec
xor
cmpsb
lock
das
jnp
xor
leave
sahf
aam
jp
push
sbb
pop
lods
daa
sbb
and
mov
xor
cmp
jg
or
out
out
arpl
cltd
sub
dec
lods
xchg
and
push
cmp
mov
mov
lods
adc
ret
ret
jb
jb
ljmp
decb
ljmp
orl
jbe
pop
fidivl
mov
dec
fcmovb
jecxz
lret
sub
mov
pop
sbb
or
in
xchg
es
mov
out
push
aaa
inc
int
push
lods
mov
mov
push
inc
pop
aad
xor
cwtl
stos
sbb
movsl
sbb
adc
pop
add
mov
in
aas
loopne
push
add
xor
arpl
jl
adc
mov
cmp
out
or
jno
push
xchg
clc
stos
pusha
jecxz
gs
aas
mov
or
xchg
into
loope
stos
cmp
orb
dec
mov
jne
negl
stos
xchg
frstor
nop
jg
bound
fisttps
or
test
and
fimuls
cmp
cs
outsb
pusha
psubq
add
out
fstl
and
ss
sbb
xchg
data16
rorl
imul
mov
pusha
ret
loop
lds
inc
xor
enter
lea
pop
adc
lods
xor
mov
cmpsl
shl
push
iret
push
pop
insb
mov
in
mov
mov
mov
vpsubd
icebp
jg
inc
sub
or
inc
int
sbb
xchg
sub
arpl
cmp
add
std
into
push
sarl
add
test
jae
cmpl
cmp
pop
imul
and
sbb
mov
mov
or
jmp
out
cmpl
test
loopne
cmp
or
add
sub
jnp
add
xchg
adc
pop
jp
iret
mov
cmp
mov
sub
adc
sbb
mov
and
in
in
pop
jb
das
mov
xchg
push
outsl
mov
mov
mov
push
cmp
data16
jae
sub
inc
daa
mov
add
mov
cli
out
insb
mov
testb
fisttpl
push
mov
add
adc
and
jae
ret
sub
adc
xorl
insb
lcall
mov
ljmp
leave
scas
mov
push
arpl
je
pop
loope
sbb
xchg
sub
inc
or
sub
push
mov
mov
std
add
aam
ds
sbb
jge
mov
mov
stc
inc
into
cmp
cld
icebp
cmp
pushf
jb
dec
xor
mov
dec
mov
in
pushf
lcall
les
clc
cmp
mov
mov
addb
push
pop
pop
mov
mov
loope
fsts
sbb
add
int3
and
jae
call
outsl
paddusb
xorl
push
les
js
or
ja
subl
aad
iret
jnp
mov
mov
pop
shr
pop
out
in
repz
insb
data16
ja
dec
daa
dec
mov
xchg
lds
jge,pn
inc
push
add
outsl
cmp
das
sub
in
xchg
cmpsb
push
mov
ret
movsb
pop
stos
out
ss
add
mov
test
sahf
bound
in
mov
sbb
movsb
cli
jmp
outsb
inc
lahf
repnz
imul
dec
and
iret
sub
aam
add
and
nop
jb
dec
subl
and
sbb
aam
hlt
mov
mov
pusha
pop
inc
inc
cmp
or
pop
push
shll
bound
sbb
es
add
int
ret
int3
int3
mov
and
sub
add
sub
repnz
in
and
fs
sub
cmp
out
push
insl
scas
in
aaa
fwait
mov
adc
sbb
aad
xor
fwait
xchg
inc
lods
scas
add
repz
pop
cs
mov
mov
cmc
gs
lods
push
movsb
dec
cld
push
jecxz
cld
mov
add
cwtl
andb
test
repnz
popf
cld
dec
std
add
push
xchg
aam
cmp
push
aam
dec
jae
sbb
bound
push
pop
sub
adcb
into
dec
sbb
ror
pop
xchg
pop
sub
mov
lods
in
sub
xor
cltd
ret
fs
dec
xor
mov
xchg
idivb
mov
pop
stos
sarl
mov
cmp
gs
ljmp
gs
push
jae
nop
push
push
adc
hlt
mov
lock
ficompl
cmp
lock
lock
test
int
out
sarb
out
push
fcompl
dec
in
aam
adc
pop
jns
mov
loope
popl
mov
lcall
fistps
sbb
sbb
xor
leave
jnp
repz
fidivrs
pop
iret
inc
aas
dec
sbb
inc
jo
leave
cmpsl
sbb
push
push
add
ret
stos
out
fs
fnstcw
and
xchg
xor
cli
ret
enter
into
jg
das
jne
cmp
in
jb
ljmp
or
sbb
dec
push
dec
and
or
and
pop
jl
out
xchg
mov
jecxz
mov
sahf
jp
clc
adc
jge
mov
dec
cmp
int3
jmp
aas
sbb
pandn
xchg
out
cmpsl
xor
in
fldcw
loopne
dec
ret
jge
stc
inc
fldl
cmp
adc
fadds
adc
lahf
mov
lds
sbb
out
cmp
xchg
push
int3
xchg
leave
lds
das
fs
leave
inc
frstor
sbbb
addl
hlt
fldcw
mov
call
pushf
roll
popf
imul
jp
int
fldpi
add
jb
in
cltd
je
push
add
in
push
inc
inc
inc
mov
hlt
jl
outsl
sub
mov
jns
shll
push
xlat
adc
adc
or
ret
lock
popa
addr16
sbb
mov
cwtl
add
pop
sahf
dec
jno
ret
cmp
addr16
test
cmp
xchg
add
lret
xor
mov
mov
aad
stos
sbb
mov
inc
leave
pop
mov
subb
outsl
or
iret
mov
mov
xchg
jge
pop
shrl
dec
push
inc
in
lret
sub
je
xor
flds
cmpsb
fdivrs
adc
jp
loop
pusha
stc
das
jne
jno
enter
mov
ds
dec
add
inc
pusha
loop
or
and
cmpsl
jge
mov
add
idiv
loop
jb
inc
xlat
dec
test
out
and
push
mov
sbb
arpl
jle
mov
and
sub
stc
les
rclb
sbb
cmpsb
add
std
ret
inc
mov
filds
dec
dec
xchg
mov
subb
jmp
cmpsl
xchg
movsb
inc
je
outsl
loope
mov
fxch
adc
aaa
push
negl
loopne
fisttps
cwtl
iret
fwait
push
dec
sub
push
push
lods
cli
sub
loopne
cmp
movsb
inc
push
jo
xor
dec
mov
xlat
lret
mov
insl
loope
jbe
arpl
xlat
in
mov
call
mov
inc
jb
push
jl
aad
testb
or
add
and
scas
lahf
dec
jbe
out
enter
std
push
dec
adc
wrmsr
mov
test
ja
lahf
out
data16
adc
ljmp
sub
push
jne
and
xchg
push
dec
sbb
inc
inc
je
pushf
shrl
xchg
loope
jl
pop
sbb
sbb
jb,pn
bound
es
dec
es
push
lret
mov
loop
je
sbbl
lea
or
mov
add
das
movsb
out
out
ss
cmp
call
lahf
imul
into
ret
inc
push
push
mov
cmpb
out
sbb
xor
cmpsb
add
adc
cmp
data16
not
sbb
mov
cmp
adc
imul
movb
bnd
xor
mov
jmp
mov
xor
sbb
jge
mov
addb
sub
sub
lea
pop
xor
lret
push
mov
arpl
pop
mov
push
aas
dec
add
mov
cmp
ss
dec
idivb
cmp
loop
es
and
movsl
adc
mov
adc
xor
dec
sbb
or
xor
push
jo
leave
jns
xchg
or
push
mov
call
dec
xchg
pop
mov
addb
add
pop
push
push
enter
lret
mov
xchg
cmp
pop
ljmp
pop
adc
in
mov
xchg
xchg
mov
test
sbb
iret
xlat
push
and
xchg
into
push
out
pushf
rsqrtps
mov
cmp
adc
enter
cmc
xor
pusha
scas
popw
jo
xchg
repz
mov
push
mov
mov
dec
imul
pop
insl
cmp
testb
mov
out
mov
int3
outsb
insb
in
push
fildl
xchg
jnp
mov
mov
and
lock
popa
xor
jno
rcl
sub
xor
or
popf
pop
mov
add
rolb
adc
fsubrs
stos
dec
in
aas
add
lret
sbb
xchg
pop
adc
movsl
mov
and
and
or
insl
repz
and
or
dec
push
adc
push
push
out
insb
push
xor
scas
lea
test
fimull
add
sti
and
mov
cmp
pop
cmp
outsl
les
mov
es
ja
or
dec
sbb
std
int
ljmp
sbb
lea
or
adc
inc
test
in
aas
outsb
rcl
xchg
daa
inc
mov
cmp
nop
jp
test
mov
add
lahf
sahf
adc
jl
xor
es
ffreep
aad
jmp
into
fldl
es
xor
xor
dec
push
sbb
dec
mov
insb
sbb
out
mov
test
or
mov
and
pop
lret
push
fldt
add
xor
mov
les
out
cli
inc
cmpl
xchg
scas
es
sarl
aad
rcll
sub
sarb
xor
iret
imul
inc
fidivrl
mov
jne
lods
inc
inc
sbbb
cmp
dec
jle
cmp
mov
sub
mov
fsts
push
dec
test
cli
out
ss
dec
mov
addb
dec
lret
add
stos
push
or
out
xchg
add
bound
dec
dec
lahf
movsl
iret
fs
inc
out
arpl
mov
shrl
aam
shll
or
mov
fs
rclb
xchg
pop
dec
xlat
fmul
pop
jp
fstpl
inc
jbe
fs
inc
cmp
xor
inc
ror
xlat
addr16
lret
jmp
sahf
jb
dec
popa
ret
jge
ljmp
fadd
xor
push
fdivl
pop
push
pop
test
mov
pop
stos
xor
lret
call
arpl
scas
and
lock
or
incl
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
jmp
fnstenv
xchg
gs
test
sbb
push
test
rcrb
cmp
into
mov
mov
mov
aam
mull
xor
mov
adcl
imul
int
push
push
mov
mov
sbb
cmp
push
insl
loopne
call
push
jae
push
imul
cmp
pop
jns
rolb
cmpsl
sbb
push
or
mov
xchg
or
or
rorl
mov
add
cli
aas
or
push
mov
mov
mov
jnp
push
mov
xchg
jne
xchg
pop
fwait
mov
cmp
push
sbb
negb
sub
test
cmc
sub
push
iret
jle
mov
add
rcll
pusha
neg
mov
ret
sbb
mov
cltd
add
mov
cltd
pop
pop
mov
daa
xor
adc
call
in
out
in
in
pusha
sbb
mov
mov
lds
add
xor
inc
mov
pop
or
mov
insl
xchg
xchg
pop
ds
pusha
negb
adc
pop
jns
jmp
dec
push
sub
es
sbb
adcb
ficompl
inc
or
sbb
mov
je
sbb
insb
inc
insb
xchg
outsl
jmp
stc
add
filds
lcall
inc
adc
sbb
mov
inc
xor
fcoml
ljmp
repnz
add
push
dec
loope
dec
aad
sub
rcll
jl
add
movsb
in
jl
shll
mov
sub
jb
and
lods
cmpb
mull
out
pop
jmp
pop
jb
dec
enter
push
ss
sbb
cmp
pop
enter
insb
rcl
push
or
mov
cwtl
push
mov
jecxz
push
mov
orb
inc
cwtl
stos
mov
mov
cli
and
and
pushf
mov
add
arpl
jbe
xor
dec
in
pop
push
cmp
or
or
cmp
push
hlt
push
dec
ljmp
sbb
jns
call
xor
and
mov
je
xchg
cs
jne
dec
mov
adc
call
sbb
mov
mov
test
push
cmp
cld
add
mov
mov
movsb
adc
std
lret
dec
int3
dec
je
stos
in
hlt
xchg
aad
sbb
adc
pop
xor
fcmovnu
test
sub
mov
ss
inc
mov
ljmp
and
fcompl
cwtl
xor
bound
mov
push
outsb
in
mov
andl
inc
test
inc
push
ljmp
cwtl
push
mov
mov
repnz
xor
mov
inc
pop
bound
enter
pop
ror
lcall
inc
cs
push
das
mov
pushf
shlb
add
mov
push
sbb
cmc
lcall
pop
jmp
rolb
xor
push
into
sub
jecxz
or
mov
inc
loopne
xchg
pop
mov
sbb
sbb
lret
cmp
push
test
repz
inc
lret
cs
mov
and
jp
xchg
loopne
fwait
es
cmpsb
shr
inc
jmp
inc
pop
pop
andl
popa
add
cmp
xchg
imul
out
nop
outsb
sarb
xchg
ret
ror
inc
bound
xchg
xchg
cld
jo
cltd
aad
xlat
or
fs
pop
mov
inc
jb
stc
out
jge
in
rorb
mov
jl
adc
mov
xchg
ss
mov
decb
xchg
xor
mov
sbb
loope
int
mov
sbb
popa
and
pop
std
mov
mov
adc
add
cld
sub
loopne
mov
pop
xchg
in
jg
rclb
cltd
pop
pusha
and
xchg
sub
inc
push
push
scas
leave
dec
call
mov
mov
cmp
xchg
in
sbb
push
pop
js
mov
ljmp
jbe
lret
adc
mov
shlb
int
pop
mov
sbb
xlat
sbb
shr
mov
cmpsl
scas
pop
adc
dec
fs
dec
lret
out
pop
incl
dec
pop
cmp
or
adc
jno
push
aas
or
cmp
movsl
xor
test
sti
out
scas
or
repnz
pop
aad
or
lods
xchg
fwait
rorl
adc
pop
iret
mov
stos
fwait
outsb
mov
adc
mov
cmp
iret
add
icebp
incl
bound
adcb
mov
cs
call
mov
pop
nop
loopne
pop
sub
mov
fs
push
sti
xchg
jmp
fldcw
and
xor
cmc
sub
add
pop
cmpsl
jge
xchg
cmpsl
leave
sub
adc
je
or
cmp
rcl
mov
loop
mov
mov
or
in
mov
adc
pop
push
pop
daa
lret
xor
arpl
out
mov
xchg
cmpsl
ret
dec
out
and
xor
or
push
sub
fs
xchg
gs
jge
jl
mov
pusha
insl
mov
lods
ljmp
xor
cmp
xchg
jmp
and
xor
jecxz
bound
cmpsb
aas
jne
loopne
jmp
jo
ljmp
adc
les
pop
mov
in
mov
popa
fcmovne
cmc
cs
mov
insb
xchg
into
add
ljmp
mov
clc
add
icebp
xor
mov
inc
xadd
push
daa
daa
mov
test
icebp
into
push
add
mov
mov
mov
jae
dec
push
inc
stos
mov
insl
push
mov
lods
xor
push
call
mov
aam
cmp
dec
xchg
das
jb
outsb
outsb
jne
mov
sbb
insl
into
int3
sbb
mov
sub
scas
stos
int3
pop
inc
cli
fstps
adc
in
push
add
sbb
xorb
jle
in
mov
fstl
in
and
or
mov
jno
aas
lods
leave
pop
out
stos
push
lahf
pop
je
pop
pop
into
jnp
jg
mov
xor
pop
pop
fisttpl
mov
stos
push
pop
inc
or
add
dec
jp
popa
adc
pop
jne
inc
lods
icebp
stos
cmpsb
mov
dec
adc
inc
push
mov
ja
sbbb
cs
cmp
jmp
ja
outsl
mov
pop
pushf
fwait
pusha
lret
mov
lcall
jp
sbb
jnp
lods
cmp
iret
andl
ret
stos
xor
lods
aam
sub
xor
out
negl
mov
cmpsl
jl
mov
sub
popf
int
push
lret
imul
pop
stos
inc
xchg
mov
test
push
pop
sub
das
ljmp
insl
lock
addl
js
sarl
add
add
cmpsb
dec
mov
stc
aas
cmp
cmp
push
movsl
sti
mov
cmpsl
out
mov
and
and
and
inc
loopne
mov
addr16
es
add
sbb
mov
sub
push
mov
jge
mov
popf
rorl
inc
dec
out
lock
hlt
and
aam
sub
jecxz
leave
or
out
jnp
icebp
in
cwtl
xchg
not
xchg
in
arpl
jae
add
xchg
fldt
mov
in
scas
add
jbe
mov
cmp
xor
outsb
mov
xchg
call
inc
lret
push
les
mov
je
adc
outsb
sbb
cmp
lods
fisubl
ja
cwtl
xchg
out
jns
jo
dec
ret
sbb
lret
mov
rorl
mov
and
and
jecxz
popf
mov
mov
fildl
push
cwtl
stos
push
stc
and
mov
aam
inc
mov
std
lods
outsl
jecxz
or
sub
sbb
es
and
lods
cmc
or
imul
jo
and
and
jno
adc
add
cltd
fisubrl
cli
dec
cmp
pop
test
cld
rcll
cmp
sub
fcoml
aas
lds
sbb
pop
sbb
repnz
ficomps
and
mov
ficompl
and
repz
shll
jle
iret
mov
sub
mov
and
mov
mov
popa
and
icebp
jecxz
hlt
iret
iret
scas
jge
cmp
cmp
daa
rcrl
pusha
adc
mov
sahf
mov
cmc
jge
push
inc
repz
push
push
sub
test
fs
fisubs
mov
mov
cmpsl
fildl
jmp
mov
xchg
pop
jecxz
mov
lret
xor
jl
and
in
sbb
sub
aam
mov
jnp
inc
js
ficoml
les
clc
jp
adc
hlt
nop
popa
push
or
ljmp
or
ds
cmp
dec
push
jbe
out
jae
adc
daa
insl
stos
push
repz
dec
jae
mov
inc
ret
pop
stos
mov
inc
inc
inc
fsub
sbb
xchg
inc
pushl
sub
cmpsb
pop
pop
xchg
sbbl
jp
repz
xor
inc
addr16
dec
sub
cmpsb
addr16
xorl
aad
xor
adcl
mov
xor
stos
fbstp
lcall
fldl
adc
ss
or
mov
imul
push
cmpsl
subl
cmp
jno
cmp
jmp
pop
scas
in
dec
jo
add
fwait
jo
fsubl
or
outsb
push
cmp
pop
jge
fiadds
ss
pop
sbb
repz
pushf
pushf
mov
fnsave
popf
insl
je
mov
aas
out
insl
dec
cmp
fcomps
scas
or
imul
xchg
push
cmp
repnz
jo
pop
das
cli
aas
mov
push
sbbb
mov
pop
div
xchg
lods
inc
cmpsb
popf
scas
adc
ret
mov
mov
dec
add
imul
xchg
frstor
push
mulb
sbb
jnp
xchg
std
movsb
jecxz
add
adc
out
inc
stos
sub
lret
jmp
xchg
dec
stos
dec
fnstsw
adc
add
test
or
pop
dec
jle
pop
ficoms
popa
sbb
mov
lret
xlat
shrl
adc
add
mov
out
adc
dec
or
dec
push
dec
int
addr16
mov
fsubp
cmc
mov
in
pop
xchg
cli
dec
pop
push
in
cmp
and
in
fidivl
ret
mov
add
or
ret
push
dec
in
mov
dec
xor
shl
xchg
rcll
mov
pop
mov
xor
cli
movsl
out
jmp
mov
fbstp
pop
pop
cmp
ret
in
adcl
jae
div
lahf
into
sub
add
mov
movsl
pusha
jecxz
loope
test
mov
jae
stos
inc
xlat
repnz
add
bound
jmp
ss
pop
dec
or
add
les
mov
sbb
cmp
jbe
mov
in
mov
es
mov
mov
shll
scas
ss
mov
lock
xor
sbb
xor
repz
xchg
mov
cltd
xchg
or
mov
mov
ret
sub
int3
xchg
lea
in
mov
cld
mov
daa
adc
seta
lahf
mov
adc
nop
imul
xlat
dec
sarb
fwait
xor
dec
lds
xor
sub
xchg
xor
inc
and
aaa
icebp
sbb
mov
add
fimull
lods
ds
stos
jno
out
movsl
bound
inc
sbb
xor
into
movsl
out
outsb
dec
xlat
inc
cmpsb
mov
ja
dec
ljmp
imul
fbstp
in
jnp
sub
sub
aas
jecxz
fisttpll
cwtl
sub
test
cmpsl
jp
lahf
lds
or
popa
xlat
jbe
pop
xor
pop
pop
push
or
aam
cmp
in
ds
push
stc
test
cld
dec
push
cmovno
aas
arpl
dec
stos
cltd
adc
xchg
in
cltd
or
dec
jg
jb
adc
loope
sti
cwtl
mov
inc
or
inc
cmpsb
pop
mov
outsl
cmp
lret
outsl
into
xorl
push
mov
insb
xor
sub
mov
rorb
jo
jp
test
add
jo
lret
jns
fsubrl
cwtl
out
add
stos
data16
pop
xor
and
cmp
dec
and
rcl
or
jle
into
mov
in
cli
sbb
and
das
adc
inc
push
into
lcall
mov
adc
sbb
or
cld
dec
stos
xor
sbb
dec
and
adc
push
xor
mov
mov
outsb
loop
mov
scas
js
jne
jns
dec
mov
rcrb
mov
pushf
inc
mov
test
mov
pop
add
insb
xor
loopne
jg
and
jno
test
fs
xor
sub
in
push
xor
jb
or
mov
mov
or
push
std
cltd
xlat
pop
jmp
cld
pop
push
xchg
and
lret
add
xchg
adc
dec
outsb
dec
shl
lahf
push
ss
adc
adc
mov
and
cmp
push
mov
mov
sbb
lea
rorb
and
sbb
es
inc
xchg
xor
mov
push
push
mov
ret
ja
arpl
mov
movsl
ja
jle
xchg
and
test
xor
mov
add
adc
fcoms
in
or
cmp
movsl
pop
dec
push
jg
outsl
and
fnstsw
sub
or
or
imul
repnz
mov
adc
cmp
data16
sub
mov
xchg
dec
pop
xor
jp
and
mov
addr16
icebp
aam
cmpsl
mov
into
pop
add
out
push
repnz
xchg
comiss
lcall
xor
gs
cld
mov
into
push
adc
pop
sbb
call
add
sbb
shrl
cmp
pop
push
call
add
dec
inc
sahf
mov
mov
cld
dec
sub
mov
push
cmpl
imul
mov
jne
push
in
imul
inc
rcrl
das
lahf
daa
inc
out
mov
pop
inc
sahf
hlt
ljmp
lock
and
jb
dec
inc
mov
dec
je
xor
stc
insl
mov
inc
xor
xor
loop
xor
pop
sbb
xchg
repz
test
fs
mov
and
nop
rcl
pop
push
inc
mov
adc
sbbb
adc
jbe
mov
xor
fwait
cltd
xor
jecxz
test
pop
inc
lahf
pop
sub
sub
xor
cmpsl
aas
push
lock
aaa
lret
lds
sti
jecxz
cmp
repz
inc
adc
adc
imull
popa
pop
adc
sbb
es
pop
aaa
sbb
mov
xchg
addr16
imul
pop
dec
cmp
test
inc
jl
mov
xor
loop
ret
xorb
sbb
adc
xlat
cmp
faddl
fiaddl
mov
push
cmp
jle
lcall
jns
fcmovnb
sub
fsubl
enter
jge
addr16
pusha
subl
js
pushf
lret
aaa
shll
dec
sub
dec
fcom
lcall
iret
xchg
out
lods
lret
imul
mull
mov
call
nop
enter
push
xor
push
and
fcoms
test
adc
add
lock
out
adc
push
push
ljmp
mov
fsubr
mov
dec
cmp
pop
add
imul
or
sbbl
cld
or
fdivl
and
mov
push
aam
ret
cmp
and
rclb
dec
xchg
icebp
inc
jno
pop
insb
scas
rcr
add
stc
dec
out
aam
lret
pop
adc
adc
cltd
mov
sti
cmp
aaa
aaa
jecxz
jg
push
mov
cli
inc
dec
push
mov
add
push
jmp
jb
pop
push
out
out
stos
pop
push
lock
pushf
xchg
add
cltd
and
je
adc
lea
cltd
out
jp
scas
insb
ss
aad
mov
ja
sarl
sub
mov
sub
sbb
adc
push
jp
cwtl
outsb
add
mov
jmp
mov
and
jg
ja
fwait
pop
mov
xor
and
push
sbb
mov
addr16
sti
std
nop
xor
jl
mov
fst
mov
loope
out
test
pusha
data16
mov
push
adc
sahf
cmp
xchg
mov
and
sub
ds
aas
sbb
inc
movsl
pop
mov
xchg
xchg
inc
lock
popw
bound
lods
cmpl
nop
cli
jne
or
pop
cwtl
rcr
test
int
cli
or
adc
stc
fldpi
fildll
mov
test
pop
xor
sti
dec
iret
sub
adc
sub
cmp
lods
pusha
xor
movsb
xlat
mov
pop
cwtl
ja
mov
mov
shlb
cmpsb
divb
scas
repz
inc
bound
cltd
cmp
movsl
cltd
dec
mov
insl
jle
push
jmp
jns
mov
inc
movsb
into
daa
mov
mov
lret
sbb
jne
cs
add
jmp
ljmp
pop
sarl
push
rcrb
test
enter
mov
pop
xor
dec
test
push
outsl
jge
lock
enter
xchg
xor
inc
sbb
add
mov
xchg
dec
clc
cmpsl
ljmp
push
mov
mov
jbe
cmp
je
cmp
fs
inc
adc
xor
fcomps
xor
cmp
dec
mov
les
pop
cld
hlt
or
adc
adc
cmpsl
push
sub
cmc
cmp
insb
pop
sub
jno
inc
clc
out
idivl
mov
int
xlat
clc
aam
mov
les
lock
test
aad
out
fwait
lods
ret
sub
ror
scas
outsb
cmpsb
mov
outsl
mov
xor
ret
mov
mov
adc
sbb
sbb
mov
mov
lcall
pusha
lods
sub
sub
push
mov
sahf
jb
fistpll
add
nop
mov
icebp
xchg
cld
jl
xor
mov
pop
ljmp
inc
adc
std
rorb
ret
pusha
adc
mov
outsl
lahf
fldt
xchg
mov
testb
push
stc
pushf
cmc
and
pop
das
popa
inc
aam
push
adc
or
repz
pop
cmp
and
mov
leave
jmp
mov
out
outsb
jae
sbb
call
call
dec
enter
or
push
inc
fwait
cmpsb
ja
adc
push
sbb
out
mov
adc
mov
push
loopne
les
loop
mov
inc
cmp
push
jbe
xchg
cmp
in
mov
outsb
repnz
sbb
insl
dec
rcrl
scas
loop
rorl
imul
jmp
adc
out
loopne
gs
mov
mov
daa
loop
jecxz
fstpl
stc
push
lods
loopne
imul
jle
adc
xor
ret
cmpsl
push
pop
repz
mov
mov
ret
fidivrl
test
jmp
mov
stc
cmp
loope
pushf
sbb
dec
fdivp
fists
cmpsb
cmpsb
mov
xor
mov
out
jle
cld
xchg
push
mov
pusha
das
pusha
sub
idivl
mulb
insl
cmc
je
add
call
das
ss
out
cli
pop
jle
into
loope
inc
outsl
cmp
loope
ds
xchg
adc
sbbb
into
mov
add
cltd
dec
inc
pop
mov
mov
xor
sahf
jmp
sahf
adc
push
sahf
std
fcoml
mov
cmc
push
arpl
dec
jp
and
test
xchg
jg
adc
mov
pop
int3
jp
out
pop
pop
sbb
mov
push
arpl
pop
rclb
rcrb
push
in
pusha
dec
leave
mov
cmpsl
push
out
mov
filds
mov
filds
xchg
pushf
fnstenv
loopne
fisubrs
ds
lock
lret
cli
xor
cmp
sbb
lds
jo
sete
pop
push
sahf
ret
divb
sub
shl
cli
pop
sbb
nop
stos
sbb
mov
jp
pop
in
cmpl
stc
movl
add
subb
and
xchg
and
push
jnp
ss
xor
cld
iret
sbb
fwait
in
notl
xor
mov
fcoml
popf
jge
std
mov
push
lret
flds
jno
adc
sti
ret
imull
or
gs
js
jbe
hlt
aad
insl
sbbb
adc
stos
fidivrs
cmp
xchg
jb
fs
test
lds
cmc
mov
fwait
adc
xchg
ljmp
mov
cmpsb
jmp
mov
mov
pop
mov
in
arpl
mov
jp
xor
push
cmp
lods
dec
xlat
int
fs
out
pop
and
sub
push
sbb
adc
xchg
and
dec
inc
int3
subb
cs
inc
movsb
dec
sti
push
fcompl
pop
inc
push
or
jae
cmc
push
sub
dec
sbb
xor
out
or
mov
xchg
and
sub
dec
leave
and
stos
ret
leave
sub
fwait
ds
mov
dec
pop
sub
inc
addr16
mov
stos
repnz
int
loopne
xor
mov
subb
out
sub
or
add
xchg
push
add
cmpsb
xchg
mov
xor
xchg
out
inc
outsl
xor
xor
cmpsb
or
xchg
or
cmp
ss
dec
js
stos
cld
mov
pop
mov
cmp
in
jg
rclb
cmp
ljmp
push
add
jae
jg
dec
xor
scas
repz
and
insb
mov
inc
clc
int3
test
xchg
in
cmp
sbb
out
fs
lret
ljmp
loope
pop
add
icebp
jb
sti
push
jmp
popa
nop
enter
push
xchg
add
jno
sarl
jecxz
xchg
mov
adc
in
add
jbe
inc
lds
sub
adc
push
mov
inc
cld
cmp
adc
stc
adc
subb
call
adc
push
je
nop
scas
inc
lods
ret
flds
ja
hlt
mov
xlat
inc
inc
inc
lahf
sub
fnstenv
ret
loopne
sbb
cli
mov
jbe
aaa
jnp
fnsave
mov
mov
and
xchg
sbb
movsb
cmp
insl
out
push
outsl
enter
stc
push
aad
jns
aas
loop
pushf
xchg
push
mov
das
aam
push
push
std
mov
sub
pop
mov
jae
mov
out
cmp
inc
repnz
cmp
iret
mov
lods
loopne
stos
inc
pop
sub
dec
das
adc
xchg
bswap
rclb
ds
testl
adc
dec
cld
bound
mov
daa
fmulp
fidivs
icebp
mov
sbb
dec
sub
mov
mov
cmc
jg
pop
xor
test
arpl
mov
aaa
jecxz
adc
sbb
int
mov
xlat
mov
and
add
dec
sub
lcall
int3
dec
outsb
mov
sub
jge
aaa
pop
movsl
or
shrb
dec
icebp
dec
push
xlat
or
add
xor
add
jge
sub
in
xchg
scas
cmc
push
push
lods
xchg
jno
push
scas
mov
jmp
ja
adc
cmp
movsl
mov
arpl
stc
loope
in
push
or
ss
pop
sbb
jl
testl
in
movsl
mov
lahf
dec
pop
inc
cwtl
push
fsts
jl
in
aad
xor
push
or
pop
push
imul
push
daa
sub
rcll
test
aaa
lcall
pop
inc
jmp
add
jbe
xlat
iret
sti
movsb
push
in
fwait
pop
fiadds
insb
imul
gs
cli
pop
xchg
pop
test
jae
mov
sbb
push
add
not
dec
cmc
fwait
lahf
add
mov
repnz
xchg
icebp
xchg
dec
pop
add
cmp
imul
cs
enter
orb
cmp
sub
cs
add
sbb
pop
adc
scas
in
jmp
mov
scas
xor
fwait
outsb
ficoml
pop
push
out
mov
dec
jo
enter
cli
mov
sbb
jb
add
dec
loope
dec
into
imul
dec
rorl
xchg
add
mov
jp
mov
gs
insb
jb
mov
fistps
lea
out
mov
pushf
shll
shl
or
push
jbe
in
push
rolb
popf
ss
adc
jbe
jecxz
push
or
jns
out
daa
mov
jecxz
mov
mov
sbb
shll
mov
inc
lcall
mov
sbb
out
xchg
jno
sub
loopne
test
mov
aas
lret
dec
fsubl
sbb
ds
mov
or
or
mov
xlat
mov
pop
dec
ds
add
xchg
scas
mov
push
and
inc
addl
lahf
mov
xor
push
inc
dec
negb
push
or
outsl
and
sub
dec
sbb
loopnew
sbb
stos
mov
daa
dec
in
jns
int3
sub
dec
sub
pop
in
dec
mov
shrb
xor
lods
xor
into
cltd
xchg
mov
jg
add
jmp
and
es
adc
adcl
or
mov
out
lret
add
xor
call
rcr
pop
xchg
adc
dec
or
jae
dec
push
inc
xor
mov
outsl
out
loope
sbb
repnz
mov
inc
sbb
lods
jmp
pop
jae
in
jbe
mov
push
lret
mov
xor
mov
or
scas
std
xchg
mov
enter
ja
sbb
mov
sbb
mov
pop
sub
fwait
sbb
add
mov
jb
ja
and
mov
data16
sub
cmpsb
or
popf
rcrb
or
in
dec
xchg
adc
imul
clc
sub
movsb
mov
das
mov
shrl
imul
outsb
outsb
adc
popa
popa
inc
jo
pusha
mov
sub
out
jnp
pop
mov
push
mov
mov
mov
inc
push
jp
or
scas
inc
add
orb
xadd
mov
xor
push
repnz
sub
push
adc
call
lock
roll
test
repz
sbb
push
sti
outsl
push
lock
add
jns
jmp
aaa
sti
pop
cli
jo
lds
inc
fsubs
mov
mov
add
ret
mov
xor
mov
and
push
push
mov
sub
pusha
mov
mov
faddl
or
insl
jns
push
aaa
addr16
mov
pop
lret
and
cwtl
inc
jo
mov
mov
dec
int
push
insl
pusha
out
xchg
ficoml
inc
jl
scas
xchg
cltd
cld
stos
imull
jge
sahf
les
test
cmp
pop
cmp
push
push
cs
cs
cmp
daa
icebp
push
mov
or
mov
dec
sbb
outsb
into
and
pop
push
or
mov
mov
out
fldenv
test
mov
ljmp
or
jne
sbb
sbb
dec
aas
cmp
jbe
rorl
aaa
shrl
jg
aaa
push
orl
pop
dec
dec
and
jbe
inc
imul
fs
sub
rcll
inc
mov
jl
pop
inc
dec
mov
mov
fbld
sub
out
xchg
outsb
mov
les
dec
std
xchg
lea
aam
outsb
mov
out
fidivrl
ljmp
push
inc
xchg
or
fsubrp
loop
jnp
push
pushf
int3
cli
push
add
aam
xchg
sub
and
xchg
adc
sbbl
push
sub
mov
pop
shlb
cwtl
aaa
or
pop
mov
lds
cmp
test
fcomps
sub
or
shlb
inc
mov
rolb
xor
mov
pop
pop
lea
jo
mov
fstps
les
cmpsl
inc
add
repnz
je
push
mov
mov
icebp
lds
cltd
sbb
pop
sti
add
push
adc
nop
outsb
nop
jmp
stos
lcall
push
nop
addr16
imul
mov
sub
into
mov
lret
outsb
xchg
xor
aas
xchg
dec
mov
push
cld
pop
loop
popf
popa
xchg
out
mov
popl
push
out
inc
sbbl
and
sti
lcall
scas
inc
aaa
and
cmp
call
arpl
into
inc
xchg
test
push
jae
data16
loopne
jp
pop
addb
daa
dec
cmpb
xchg
xor
xor
fmul
and
push
jno
xorb
mov
dec
fldcw
sbb
push
cwtl
rcr
mov
jae
mov
and
inc
ret
daa
daa
add
std
popa
arpl
push
insl
xlat
mov
push
pusha
test
test
pushf
mov
out
into
hlt
gs
sti
mov
mov
xchg
fsubrl
sub
les
in
imul
mov
mov
je
imul
movsb
or
repz
pushf
dec
cwtl
xor
lret
adc
aad
sbb
imul
cli
ret
cmp
test
adc
jne
arpl
fcomps
inc
imull
xchg
mov
sbb
lock
fnstcw
pop
cs
dec
aam
outsb
mov
cmp
popf
and
addr16
ret
lret
idivl
in
data16
icebp
imul
out
jmp
mov
subl
iret
pop
cwtl
cmc
push
aas
sbb
ret
xchg
push
mov
sbb
out
sbb
shll
add
mov
dec
arpl
adc
in
mov
pushaw
test
andl
mov
and
cltd
xchg
pushf
adc
mov
orl
mov
push
lcall
mov
lds
mov
insb
adc
dec
iret
push
fcompl
push
adc
cmp
sub
icebp
sbb
testb
mov
or
bound
aam
cmp
and
sub
sbb
mov
and
cmp
mov
push
xor
sub
xor
add
pop
xchg
enter
and
mov
das
jl
icebp
xchg
mov
push
out
or
add
fcoms
pop
js
push
ret
scas
cmp
out
jnp
or
push
sbb
sub
and
mov
dec
dec
jmp
das
testl
fwait
in
mov
sarl
ficomps
sbb
and
cmp
out
int3
addb
pusha
push
add
scas
ljmp
xor
enter
and
xchg
arpl
cli
mov
xor
mov
add
imul
jmp
clc
loope
mov
test
mov
mov
pop
popa
rcrb
sahf
mov
push
test
pop
cmp
or
lods
aam
cmpsl
divl
add
ja
pop
pop
push
push
xchg
xor
push
mov
dec
dec
imul
mov
push
push
adc
movsb
or
ret
loope
jmp
dec
cld
xchg
imul
cmp
inc
gs
js
mov
addb
jb
mov
jecxz,pn
aad
fxch
or
push
push
nop
xchg
leave
mov
lods
xchg
outsb
roll
aas
sbb
mov
jecxz
stos
jmp
ret
adc
push
xchg
iret
mov
imul
hlt
cmp
cmp
ret
stos
push
aas
xchg
jl
minps
dec
sub
inc
cltd
add
pop
cmpsl
sbb
mov
sahf
daa
pop
jno
cld
push
popa
int
sub
push
xor
push
pop
mov
xchg
fnsetpm(287
jno
test
aam
lret
fnstsw
mov
pop
and
dec
xchg
mov
xchg
lea
xchg
dec
out
cltd
and
xchg
sub
inc
push
ret
aas
ficoml
gs
or
jo
test
mov
scas
pop
pushf
hlt
inc
adc
jno
cs
inc
push
pop
xor
dec
stos
cmpsb
xchg
insl
mov
fsubrl
insl
insb
out
cmp
jmp
cs
sbb
dec
inc
fwait
in
into
andl
mov
pop
ficoms
je
mov
jno
inc
sub
xor
xchg
or
imul
mov
xor
mov
pop
add
xchg
or
les
test
mov
mov
xor
dec
push
aam
lock
rol
bound
aaa
jne
imul
xorl
in
inc
mov
loope
shr
aas
adcb
cmp
inc
adc
je
pcmpgtb
push
add
das
mov
js
sti
jo
add
ja
ret
mov
adc
cmp
imul
mov
or
inc
out
divb
jb
push
aad
inc
and
push
test
mov
mov
inc
das
int3
int
xchg
pop
mov
leave
mov
push
hlt
sub
sbb
adc
aad
mov
add
mov
aam
ret
in
cld
xchg
pop
mov
or
adc
das
pop
mov
ret
rolb
inc
ljmp
leave
mov
outsb
popa
popa
or
je
sbbl
lahf
in
jg
push
mov
cmp
add
push
cmp
inc
cmpsb
std
xchg
xor
rclb
mov
pop
in
mov
sti
jle
mov
pop
pop
mov
xchg
mov
adc
mov
add
sub
jne
insb
mov
or
movsl
adc
jmp
std
test
shlb
mov
pop
aad
or
push
sbb
ret
xchg
clc
or
xor
cmp
mov
xor
arpl
loopne
cmp
clc
addr16
pusha
mov
push
pop
dec
cmp
idivl
cmp
or
add
and
stos
iret
shl
cmc
mov
out
mov
push
mov
ds
sub
xor
inc
movsl
pop
or
mov
xchg
jecxz
movsl
xor
es
cmpsb
adc
aas
dec
mov
imul
lods
sahf
and
mov
sahf
push
push
pop
inc
pop
push
js
add
out
dec
jg
fdivr
call
pushf
cmpsl
stos
pop
mov
lods
mov
loope
cld
cld
push
addl
pop
cli
incb
push
push
outsb
pop
rclb
fidivrl
mov
jg
cmc
or
jne
out
cld
or
xor
dec
cmp
cld
pusha
sbb
jge
mov
insl
inc
cmp
push
push
fbld
inc
add
adc
sbbl
cmp
pop
jecxz
rcrb
push
jg
sub
mov
pushf
fwait
daa
push
mov
xchg
mov
pop
mov
lods
jecxz
pop
push
inc
aad
and
dec
or
xchg
lods
xchg
fcmovnb
inc
mov
and
cld
mov
aam
les
sub
stc
mov
lock
cmp
mov
lret
mov
pop
lods
mov
inc
or
std
cmp
orl
push
push
jmp
add
movl
jecxz
jg
ret
rcll
cmp
je
xchg
rolb
and
lds
or
dec
nop
fisubrs
or
jle
and
into
inc
hlt
in
dec
repz
nop
push
jb
jnp
inc
sub
imul
xchg
cltd
scas
ret
mov
test
je
push
arpl
push
push
inc
shl
leave
or
mov
or
in
lods
xchg
or
and
lock
shrb
fnsave
fsts
dec
fimull
imul
adcb
cmp
pop
xchg
sub
xlat
jecxz
popf
push
js
fwait
add
repz
cmp
adc
test
shl
mov
xorl
loop
inc
pop
jmp
lods
pop
sub
fmul
or
xchg
add
mov
xchg
jbe
mov
push
imul
mov
cmp
fdiv
cmp
call
mov
xor
xor
and
pop
jl
xchg
arpl
or
jnp
or
in
test
mov
add
mov
jg
xchg
push
dec
cmc
int
inc
movl
stc
xchg
add
bound
pop
sub
je
mov
mov
xor
rclb
inc
pop
push
push
jge
test
adc
aad
push
icebp
shl
cmp
lahf
hlt
fidivrs
lahf
dec
sbb
push
or
aas
sahf
sbb
or
repz
pusha
push
xor
stc
repnz
cmp
or
subl
push
or
jno
shr
rol
addr16
js
popf
iret
rcrl
adc
movsl
loope
jo
cmpsb
mull
inc
incb
fidivs
push
mov
and
sbb
shlb
push
or
add
movsb
inc
frstor
and
and
adc
fildll
sbb
stos
add
gs
repnz
jle
or
xor
mov
movsb
ds
pop
sub
mov
jne
rolb
or
cmp
jge
mov
movsl
inc
xor
xchg
push
dec
es
lahf
dec
bound
adc
push
push
and
frstor
les
mov
mov
out
sbb
shll
mov
mov
push
push
cmp
sub
xor
sbb
jmp
xchg
leave
packuswb
andl
dec
repz
sbb
std
mov
pushl
repz
sub
mov
scas
fsubrl
test
hlt
dec
mov
cwtl
and
gs
add
or
xor
lock
sbb
inc
negl
dec
fldt
outsl
out
scas
inc
xchg
cmpsl
fsubl
pusha
sti
adc
loopne
dec
test
in
push
xchg
loop
push
inc
out
jbe
int
daa
data16
or
mov
stos
cltd
frstor
push
sbb
stos
insb
aad
cmpsb
cmp
in
dec
and
adc
pop
int3
aad
or
fcomps
fnstsw
js
or
sbb
mov
cmp
mov
inc
fisubrl
in
push
dec
hlt
arpl
mov
xchg
jp
dec
popa
jne
pop
int3
movsb
sahf
jno
dec
incb
dec
insl
mov
xor
in
out
push
push
dec
lret
aad
scas
jg
sbb
scas
bound
mov
mov
arpl
xor
push
in
imul
xchg
jp
fisttpll
add
jne
mov
xchg
add
cmp
cwtl
fildll
xchg
sbb
fbld
es
int3
lods
lcall
test
call
cmp
push
jmp
jo
mov
pop
xlat
and
test
xor
fwait
and
push
test
fwait
add
scas
lret
movsl
lret
jecxz
push
or
sub
and
xor
jnp
jns
mov
fs
idivb
cmpl
lcall
dec
adc
ret
cmp
scas
fisubrl
jbe
jmp
test
add
mov
or
dec
cmpsl
cmp
aam
roll
adc
shll
mov
adc
ljmp
ret
aas
inc
jge
shlb
cmpsl
sti
pop
pop
jno
fnstsw
bound
fisubs
pop
and
sub
jp
xor
xor
inc
xchg
and
mov
mov
inc
inc
leave
inc
add
icebp
fwait
pop
outsb
xor
push
pop
sub
jmp
push
sbb
dec
popa
fstpt
jl
or
outsb
movsl
scas
sbb
push
es
pop
rclb
and
jmp
sub
push
mov
test
lcall
xor
jns
imul
insl
pop
or
mov
cltd
mov
ja
inc
dec
int
mov
sub
mov
or
sub
ficoms
int3
cmp
lods
scas
or
push
in
addr16
inc
cmp
in
add
shrl
sbb
cmp
pop
cmp
fdivl
inc
in
sbb
mov
mov
mov
push
or
clc
jmp
xor
mov
mov
sbb
insb
bound
dec
pushf
jmp
lds
dec
iret
adc
loope
xchg
inc
test
adc
daa
jmp
dec
sbb
jmp
pop
mov
xchg
add
leave
test
xor
mov
in
adc
mov
xor
stos
icebp
mov
in
lcall
and
push
pusha
mov
cmp
mov
sahf
pop
imul
inc
pop
clc
cmp
movsl
stc
lcall
stos
jno
fnstcw
addr16
mov
and
xchg
les
push
das
outsb
ds
in
fdivr
or
xchg
sbb
pop
scas
xlat
cwtl
adc
out
test
ja
jne
or
add
lods
mov
jnp
imul
cmp
add
fnstenv
je
sarl
rorb
add
clc
lret
push
jno
mov
stos
pop
push
mov
xorl
movsl
out
push
repz
mov
push
mov
push
ret
cld
or
cmp
or
sarb
dec
outsb
inc
jbe
jo
cltd
or
fldcw
sbb
fcmovnb
sarl
and
and
lret
inc
pusha
fists
out
xor
mov
mov
ja
pushf
inc
and
fsubl
xor
loop
cwtl
xor
mov
repz
push
notl
daa
add
fsubrs
jno
int
xchg
int
mov
xor
and
ret
in
push
int3
jo
inc
add
jnp
cwtl
sub
and
xchg
cmpsb
sub
iret
or
les
sub
jns
inc
push
scas
xchg
inc
cld
pop
cmp
mov
fistps
mov
popa
push
and
dec
push
fidivl
fiadds
lock
gs
push
jae
cmc
mov
lods
fldcw
out
or
ret
xor
mov
pop
inc
cmp
stc
stc
mov
mov
jge
sbb
enter
or
mov
add
rclb
dec
pop
insl
in
mov
imul
ljmp
push
mov
js
and
lds
sub
unpcklps
jno
test
adcl
jno
int3
lods
ds
scas
iret
pop
jae
adcl
ljmp
cmp
loope
sub
adc
xchg
xor
mov
xor
xchg
push
insl
lcall
insb
jmp
cmp
inc
gs
andl
and
out
cmp
xor
sbb
push
fiadds
push
adcl
xrelease
sbb
lods
jmp
mov
jo
rclb
imul
fcmovu
cld
jo
aam
les
pop
or
xchg
mov
add
inc
add
push
xor
cli
das
sbb
xchg
xchg
jb
call
frstor
xor
in
shlb
test
xchg
out
and
mov
notl
mov
inc
sahf
sub
push
cmpb
enter
mov
push
sub
pop
dec
mov
scas
nop
mov
in
sar
das
xchg
ret
xor
pop
inc
xchg
mov
mov
xchg
dec
or
or
sbb
sub
mov
sbb
popl
gs
push
cmp
sahf
mov
daa
loope
jbe
lods
scas
add
cmp
push
shrb
fisttpl
xor
loopne
xchg
fadds
mov
jno
cld
adc
cmp
outsb
xor
cs
mov
lret
mov
std
or
scas
inc
mov
popf
outsl
dec
fs
ss
cltd
and
inc
cltd
stos
inc
cmovae
imul
popf
push
push
and
dec
and
sbb
adc
aam
inc
pop
cwtl
dec
sar
xor
pushl
push
pop
cmp
sbb
cmp
shlb
mov
js
mov
push
sbb
push
mov
jne
arpl
add
stc
jbe
jbe
sub
enter
sbbb
pop
mov
push
inc
mov
and
add
int3
push
mov
stc
add
xchg
mov
lret
popf
jmp
scas
roll
push
xchg
adc
cmp
cmpl
test
cmp
negb
pop
inc
iret
adc
insb
mov
cli
and
call
pop
fwait
int
lds
repz
pop
lods
push
sbb
cmp
testb
dec
xchg
jnp
adc
sub
push
or
push
cmp
movsl
jb
sbb
mov
dec
pop
pop
adc
fisttps
or
sti
add
fcompl
fldl
dec
mov
sarb
pop
xchg
sub
pushf
int
jns
xlat
sub
jle
stos
enter
push
xchg
pop
imul
xchg
ds
sbb
jp
mov
fistpl
imul
leave
out
xchg
sub
adc
rcr
adc
jmp
sub
push
fistpl
jle
lea
or
aam
jl
in
mov
xchg
popf
jge
pop
repnz
or
addr16
fisttps
jae
mov
fcompl
fwait
dec
mov
xchg
in
dec
pop
mov
push
mov
subb
inc
add
gs
or
jne
loope
lret
and
pop
adc
and
shll
scas
or
fistps
dec
imul
xor
fisttpl
fwait
cmc
dec
mov
add
push
imul
mov
mov
cmp
outsl
mov
sbbb
add
or
inc
shlb
test
pop
das
imull
or
enter
push
mov
int
xchg
mov
punpckhwd
popf
cmp
jmp
mov
fsubrl
outsl
xchg
nop
lea
and
jo
callw
cmp
popf
xchg
or
aam
inc
xor
adc
js
jl
mov
push
mov
add
mov
xor
rcrl
cmp
sbb
leave
adc
ss
cmpsb
out
popa
push
dec
enter
fs
cmpsb
cmc
es
pop
mov
icebp
cmp
xor
inc
data16
mov
pop
daa
fdivrl
mov
ret
adc
fs
ret
adc
xchg
dec
mov
leave
mov
mov
xor
icebp
or
and
fisttps
popf
shl
out
int3
fsubp
repz
test
fwait
sub
aas
icebp
pop
push
pop
xor
filds
out
xor
lods
movsl
repz
cwtl
and
mov
pop
cmovnp
fisttpll
mov
pop
repnz
aas
and
jno
movsb
push
mull
mov
xor
call
enter
adc
or
xchg
outsl
hlt
cmp
jge
xor
inc
mov
add
cmp
int
mov
dec
or
aaa
movsb
sbb
aam
or
movsl
shll
stc
mov
scas
or
jmp
push
jns
cmp
jmp
into
icebp
test
sub
cltd
lods
in
sub
mov
inc
sarl
push
ja
and
xchg
adc
mov
stos
mov
or
inc
cld
add
es
sub
xchg
dec
inc
sbb
jbe
js
lret
xchg
mov
cwtl
and
lods
adc
mov
sbb
inc
add
mov
mov
ja
sub
ss
mov
mov
fisttpll
movsl
stos
imul
shlb
hlt
and
pop
faddl
movsb
xor
xchg
inc
xchg
imul
jecxz
daa
js
outsl
sbb
xchg
add
sbb
inc
sbb
pop
adc
cltd
jg
movsb
and
sbb
jne
sbb
fxtract
sbbl
push
in
movsb
jmp
jne
sub
adc
clc
sub
shrl
jnp
or
pop
and
ljmp
pushf
pop
loop
fwait
clc
adc
ljmp
in
cwtl
sarb
cmpsb
cmc
clc
inc
pop
mov
faddl
popf
out
adc
sub
stc
loopne
inc
jno
adc
pop
push
sub
sahf
lret
rorb
test
and
ss
in
shll
mov
push
lock
sub
fimuls
xchg
sub
or
icebp
jo
leave
js
pushf
fistps
aad
and
dec
mov
jg
inc
inc
or
cmp
je
les
xchg
mov
xor
test
push
ret
aad
and
mov
out
ret
int3
out
mov
sub
mov
xchg
adc
push
faddl
mov
adc
hlt
sbb
xor
aaa
sbb
cmp
imul
add
push
jmp
dec
jg
arpl
ljmp
or
pop
int3
inc
push
xchg
and
stos
jno
or
loopne
clc
xchg
xchg
mov
daa
leave
inc
lds
pop
movsb
inc
jne
repz
inc
mov
ja
push
push
out
xor
or
fsubrs
loopne
cltd
cmp
fidivrl
call
mov
int
mov
adc
xchg
divb
popa
adc
inc
movsl
repz
adc
mov
imul
adc
xor
adc
xchg
mov
mov
adc
stos
pop
sahf
sarb
sub
jl
cmpsl
lods
dec
xor
repnz
cmpsb
dec
fnop
and
or
test
xchg
push
xchg
or
ret
xchg
sbbb
xor
hlt
adc
loope
popa
jo
shlb
push
inc
sbb
xorl
movsb
movsb
inc
push
sbb
insl
ds
mov
dec
ret
mov
or
cmpsl
and
xor
dec
push
out
adc
aas
xchg
inc
movsl
dec
leave
mov
sbb
sbb
jo
cwtl
rcrl
fistps
out
stc
dec
jecxz
xlat
stc
xchg
dec
jb
jle
pop
andl
sbb
xchg
jnp
mov
subl
push
stc
cwtl
pusha
ror
int
xchg
movsl
inc
adc
dec
cwtl
cmp
es
imul
movsl
insl
mov
and
lock
push
sub
mov
lcall
das
adc
cmp
fmull
div
sub
adc
ds
sub
fildll
dec
mov
pop
rcr
adc
clc
rorb
ds
push
repz
es
xor
lock
push
xchg
push
xor
hlt
add
adc
dec
mov
sub
or
push
xchg
adc
pop
jp
add
out
dec
jg
mov
subl
mov
push
push
pop
fsubs
adc
xchg
mov
int
loopne
sub
imul
jns
fimuls
mov
sbb
xchg
add
scas
mov
test
xchg
sub
mov
test
adc
xlat
adc
dec
enter
pop
fldt
jbe
dec
dec
les
mov
mov
loope
jp
inc
cmp
ljmp
mov
into
cmp
sub
dec
arpl
movsb
cli
jp
fcmovnbe
sub
mov
imul
push
jl
out
lods
int3
jmp
fmuls
cld
push
mov
jns
inc
in
pop
pop
xor
inc
call
mov
pop
inc
pop
adc
je
and
cmc
cmpsl
xlat
jno
fldz
cmpb
into
add
loope
sahf
adc
adc
dec
hlt
push
aad
mov
loop
and
inc
mov
inc
rcrl
clc
sahf
xor
jns
sub
mov
mov
mov
les
pop
push
addr16
cli
jns
aaa
in
add
sbb
mov
mov
out
and
sub
mov
lahf
jg
loop
add
xchg
divb
xchg
outsl
mov
addr16
fnstsw
push
mov
in
test
test
insl
pop
mov
cmpsb
push
cmp
in
lahf
jns
movb
das
imul
inc
sub
addr16
mov
and
or
xchg
mov
sbb
fwait
loopne
cmc
clc
out
stos
push
fmull
push
hlt
mov
ffree
repz
mov
movsl
lret
dec
lret
push
xor
ss
lea
ljmp
ja
loope
mov
dec
fildl
xchg
cld
leave
je
loopne
jb
push
or
bound
xchg
sub
pop
xchg
jl
test
out
cmp
add
pop
jnp
int
ret
adc
addr16
repz
outsl
add
es
fidivs
fsubp
mov
mov
das
sbb
jg
and
xchg
rcrb
out
loopne
xchg
pop
arpl
adc
outsl
adc
addb
loop
ds
cmp
push
stos
xchg
outsl
pop
pop
pop
jle
inc
cmc
mov
mov
add
or
jge
mull
jno
push
sbb
cmp
pop
orb
repz
cmp
int
lret
les
sbb
lea
out
in
jle
insb
lcall
jmp
xchg
jnp
and
lea
fnstenv
lret
int3
je
xchg
push
mov
div
jno
lods
pop
lahf
outsl
xchg
lcall
sub
cltd
cs
mov
cltd
ds
lock
and
mov
jno
xchg
inc
loope
xor
fadds
jg
sbb
ja
orl
push
pop
popf
dec
cwtl
cltd
dec
push
mov
lock
inc
or
xchg
outsb
pop
dec
lret
roll
cmp
test
je
xor
jb
mov
inc
xchg
mov
or
add
xor
push
adc
fsub
out
inc
mov
fadds
push
lods
in
scas
mov
cmpsb
stos
xchg
xchg
mov
movsb
stos
arpl
fldl
and
in
adc
mov
test
dec
ficoms
mov
jle
imul
jno
add
push
hlt
add
inc
mov
xor
push
xchg
sbb
xchg
sbb
std
popa
xchg
jl
add
in
aam
dec
pusha
test
sub
fcompl
pop
push
push
xchg
cli
inc
adc
adc
js
repz
fcom
push
jg
das
pop
dec
addl
and
mov
mov
jl
push
ss
movsb
int3
jl
bound
push
dec
jno
jne
xor
dec
inc
jg
jp
xor
int3
dec
cmp
icebp
in
loop
maskmovq
negl
adc
and
xor
shll
sarl
xor
xchg
bound
out
jmp
sbb
mov
js
in
leave
pop
xchg
mov
jae
push
xor
cmp
ret
push
cmpsb
lods
mov
inc
fcomps
sti
repnz
sbb
sub
popa
mov
das
ljmp
stos
clc
pusha
lock
xor
lods
fcmovnbe
inc
mov
adc
pop
out
jmp
push
adc
cmc
clc
push
aas
cwtl
sub
pop
adc
xlat
dec
dec
das
fdivr
lret
aas
movsl
adcl
mov
cli
xchg
orl
xor
sbb
fnsave
or
add
leave
pop
iret
rorl
push
push
mov
push
cmp
mov
mov
xlat
ret
arpl
add
xlat
jecxz
mul
inc
or
dec
sub
fwait
popf
pop
jge
iretw
movsl
cmc
mov
push
repz
cs
outsb
adc
fs
popa
lahf
ret
mov
mov
or
clc
and
pop
nop
outsl
mov
into
inc
dec
test
aas
stos
lock
aam
ficompl
push
bound
inc
pop
int
jnp
push
test
or
xor
ret
dec
hlt
lahf
xchg
jmp
shl
jl
mov
add
arpl
jo
in
mov
imul
xor
es
cmp
mov
movsl
add
mov
sarb
push
push
popl
enter
push
push
jb
iret
jno
mov
xor
outsb
dec
sub
pop
mov
inc
mov
call
sahf
xchg
icebp
fldcw
mov
scas
ret
jne
divb
sbb
lods
scas
dec
jle
jb
inc
outsb
mov
movsl
jae
scas
adc
repnz
sub
push
iret
data16
or
int
popa
mov
aam
dec
and
dec
cld
int
sbb
jecxz
jg
mov
push
mov
or
fs
int
in
add
fwait
or
fsubs
mov
jle
or
lods
cmpsl
aas
push
lahf
xchg
cmp
adc
cmp
xor
and
or
add
adc
icebp
lahf
insb
xor
jns,pt
sbb
sbb
jne
sahf
inc
xor
add
movsb
enter
dec
jge
cli
mov
int3
xchg
idivl
add
xchg
pop
icebp
rclb
arpl
les
sub
xor
add
pop
xchg
int
dec
jle
or
mov
int3
push
fwait
cwtl
xchg
ss
ret
addr16
mov
fwait
loopne
sti
add
ror
cltd
mov
push
mov
xchg
je
int3
mov
sub
int
daa
cmpsl
jbe
sbb
xor
add
add
addb
pop
sub
adc
aaa
mov
call
shlb
and
rcrl
cmc
dec
cltd
cmp
popf
out
int
cld
push
cmp
adcb
xor
push
or
mov
mov
mov
dec
jecxz
and
or
dec
mov
pop
mov
xor
popa
icebp
pusha
cmp
sub
sbb
out
fmuls
add
xchg
aaa
arpl
sbb
sahf
sub
loope
cltd
stc
pop
lods
out
and
enter
testb
mov
out
aaa
inc
lea
cmp
xor
lds
mov
out
andl
or
int
ljmp
jmp
push
packsswb
and
in
insb
sub
mov
push
cltd
idivb
dec
inc
roll
cmp
dec
js
push
ret
shl
lcall
cmp
jo
popl
xor
mov
sub
ret
outsl
popa
pop
mov
adc
pop
cmp
hlt
jge
jge
xor
add
leave
fucomi
adc
push
subb
mov
aas
jle
mov
dec
movsb
daa
mov
jns
pop
mov
out
into
orl
jl
int3
cmp
add
sarl
mov
sbb
repnz
mov
movsb
pop
hlt
vshufps
rcrb
int3
popf
pop
in
fstpl
fmuls
outsb
mov
push
inc
pop
movl
bound
repz
sbb
adc
out
mov
mov
test
insb
lahf
add
inc
mov
ja
and
xor
inc
cmp
adc
sbb
push
test
nop
imulb
iret
notb
aam
sub
int
out
adc
loop
sbb
loop
push
dec
xchg
xor
je
xchg
mov
pop
aam
push
pop
cld
mull
mov
insb
or
repnz
flds
mov
int
shr
shrb
inc
cs
pop
arpl
xchg
jge
data16
loopne
test
lods
push
and
test
sbb
xor
and
insl
bound
cs
jne
mov
xchg
clc
jb
js
sbb
sbb
jecxz
and
add
mov
scas
lret
cmp
or
pcmpeqb
leave
fisubs
mov
dec
inc
lock
xchg
or
out
out
mov
les
jl
cmpsl
xchg
push
fistl
fldenv
inc
cltd
cmpb
sbb
dec
repz
movsl
es
dec
adc
sub
add
dec
and
mov
lahf
pop
pop
ret
lods
push
ja
insb
mov
loop
cmpsb
rcl
push
rcl
adc
nop
in
push
mov
mov
pop
lret
rorl
jmp
xchg
jge
insb
dec
test
pop
test
orb
xor
mov
ja
mov
mov
mov
shrb
adc
cmp
sub
sahf
imull
dec
inc
leave
pop
jle
movsb
loopne
mov
mov
pop
xchg
loop
das
fdiv
xchg
mov
sar
gs
xorb
sahf
push
fwait
in
adc
dec
dec
movsb
inc
ljmp
loop
pop
adc
sbb
fwait
hlt
mov
xchg
inc
enter
mov
push
mov
scas
push
inc
adc
push
xchg
mov
loopne
sub
push
test
adc
pop
outsb
push
sub
xor
mov
andl
aad
mov
decb
iret
mov
ret
or
cmp
int
cmp
dec
push
leave
mov
ret
movsl
cmc
pop
sti
loopne
push
daa
mov
inc
jb
outsl
das
pusha
pop
stos
sahf
dec
xchg
inc
cmp
jno
in
and
fwait
xchg
sbb
icebp
jnp
dec
sbb
pop
pop
cmp
push
or
xor
push
mov
stos
add
dec
lcall
push
push
in
push
sarb
insb
xchg
mov
mov
add
cmp
cs
lea
in
adcl
cltd
jecxz
inc
dec
and
cli
incb
fimuls
mov
int3
mov
insl
mov
leave
test
lods
stos
jge
cmp
jg
mov
cltd
sub
cmp
enter
add
jbe
push
pop
inc
jg
hlt
lea
jne
int
cld
out
movsb
jle
cmpsb
or
mov
xor
lret
jg
inc
or
add
movsb
add
xor
lds
push
icebp
dec
pop
aad
pop
xchg
jle
int
das
inc
das
daa
mov
daa
into
xor
xchg
jae
iret
aaa
lods
lods
test
mov
stos
push
mov
pop
out
lahf
mov
mov
pop
daa
aas
pop
hlt
inc
or
std
xor
out
jno
adc
pop
add
cs
adc
mov
stos
jmp
adc
or
jg
add
pop
push
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
movl
mov
mov
sbb
mov
movl
mov
sbbl
xor
addl
add
movl
mov
sbb
mov
xor
inc
push
xor
mov
mov
add
addl
mov
mov
mov
sbb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
push
neg
push
adc
push
or
mov
or
xor
mov
add
subl
mov
mov
mov
and
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
mov
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
movl
mov
xor
add
sbbl
mov
mov
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
mov
decl
push
and
pop
sbbl
sub
xorl
add
movl
adc
mov
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
mov
dec
mov
mov
addl
mov
xorl
xor
add
mov
lea
orl
mov
mov
xorl
xor
xorl
add
andl
mov
andl
lea
adcl
push
movzwl
add
mov
xor
addl
add
subl
push
mov
adcl
push
andl
pushl
addl
call
or
mov
and
mov
subl
mov
sbb
mov
xor
addl
mov
add
jmp
sub
lea
mov
mov
mov
add
sub
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
mov
and
mov
not
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
pushl
push
pushl
call
xor
add
dec
mov
jmp
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
mov
mov
xor
xor
lea
mov
xor
div
mov
xor
add
cmp
mov
mov
jne
xor
add
imul
mov
movzbl
mov
jmp
xor
add
imul
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
push
mov
movl
pop
jmp
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
or
push
movzbl
and
movl
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
andl
push
adcl
mov
mov
xor
mov
and
xor
mov
mov
sbb
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
dec
mov
mov
adcl
push
call
adcl
push
push
sbbl
push
movl
push
andl
push
push
orl
call
orl
push
andl
call
push
call
movzbl
mov
cmp
movl
jne
subl
xor
inc
xor
inc
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
jne
orl
pushl
andl
pushl
addl
pushl
call
mov
mov
mov
mov
movl
inc
movl
cmp
jne
movl
inc
cmp
movl
jne
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
mov
movl
add
lea
xor
xor
add
mov
mov
lea
or
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
mov
xor
or
adc
mov
mov
mov
or
mov
xor
movzbl
adc
mov
mov
addl
add
movl
mov
mov
mov
cmp
movl
jne
or
mov
decl
mov
adc
mov
add
xor
sbb
add
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
and
xor
xor
add
mov
sub
mov
adcl
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
push
call
cmpl
jb
xor
xor
sbb
mov
mov
andl
xor
xor
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
mov
sub
mov
and
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
orl
mov
sub
mov
add
movl
mov
movzwl
add
mov
adc
mov
xor
andl
xor
add
movzbl
and
mov
xor
xorl
xor
sbbl
add
lea
mov
mov
mov
movl
cmp
ja
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
xor
add
dec
mov
jmp
mov
xor
lea
orl
mov
mov
xor
adc
lea
addl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
adc
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
andl
movl
sub
mov
or
mov
xor
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
mov
cmp
jne
mov
cmp
je
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
add
adc
xor
mov
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
lea
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
lea
push
pushl
call
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
je
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
mov
mov
mov
xor
lea
xor
add
adc
xor
mov
xor
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
inc
mov
subl
xor
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
subl
mov
xorl
add
movl
cmpl
je
cmpl
jne
push
push
pushl
push
pushl
push
push
push
call
xor
add
dec
mov
jmp
mov
mov
and
movzwl
xorl
mov
andl
movb
xor
lea
subl
mov
add
mov
and
mov
xor
andl
sub
adcl
mov
add
movl
movl
cmpl
je
cmpl
jne
push
push
pushl
call
xor
add
dec
mov
jmp
sbb
push
sbb
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
push
movzbl
sub
mov
mov
mov
adc
mov
xor
neg
mov
push
add
movl
jmp
movl
mov
movl
mov
inc
movl
cmp
movl
jb
and
mov
sbbl
xor
add
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
orl
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
adcl
mov
addl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movzwl
sub
mov
add
movzwl
mov
mov
subl
movzwl
addl
xor
subl
add
mov
movl
mov
movzbl
inc
mov
cmp
movl
jne
and
mov
mov
addl
xor
add
subl
mov
subl
mov
xor
subl
add
mov
mov
movl
movl
movl
movzwl
mov
mov
movl
jmp
xor
mov
mov
add
mov
xor
xor
sub
sub
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
and
xor
adcl
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
push
push
push
pushl
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
and
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
jmp
mov
enter
imul
fwait
jb
xchg
cld
popa
bound
bound
jo
out
lahf
cmpsb
ret
ljmp
jp
call
imul
sbb
inc
in
jns
aaa
shll
push
jl
mov
pop
adc
mov
je
mov
scas
ljmp
adc
push
jns
mov
ljmp
pop
dec
mov
mov
rcrl
fildll
xchg
sahf
add
mov
loope
scas
js
mov
cmp
scas
ficoms
or
mov
pop
push
popf
jbe
pop
mov
lret
cmpsb
sbb
add
push
out
lahf
bnd
bound
xchg
inc
pop
push
jge
adc
pop
cwtl
add
add
cltd
out
fwait
pop
xor
or
mov
and
mov
lock
dec
cmp
push
addl
cmp
test
jae
jmp
jno
xor
and
icebp
lret
pop
xor
inc
cmp
pop
push
pop
mov
mov
dec
jne
xor
aas
xchg
inc
loop
pushf
dec
adc
lods
and
scas
pop
mov
jp
testl
jae
pop
subl
cmpsb
into
inc
stos
jo
xor
fucom
outsb
jnp
mov
pusha
clc
int3
sub
out
jns
stc
inc
mov
mov
addr16
jnp
aad
xchg
cmp
imul
adc
and
out
sbb
imul
nop
sti
cld
cmp
int3
data16
inc
bound
jl
jbe
mov
dec
sbb
mov
js
sahf
or
push
mov
shl
mov
mov
xor
out
cld
addl
push
and
add
pushf
jnp
stc
or
or
sarl
imul
xor
gs
pop
sbb
mov
mov
mov
adc
sub
add
imul
xchg
mov
jno
inc
xor
or
mov
dec
xchg
xor
arpl
xor
ret
cmpsl
mov
shlb
and
mov
cmp
sub
ljmp
das
jl
sub
mov
leave
mov
pusha
std
sti
insb
inc
sub
inc
cwtl
fs
pop
mulb
and
test
outsl
mov
scas
popf
pop
pop
inc
sbb
dec
in
mov
push
push
pusha
imul
mov
das
add
mov
inc
imull
sahf
push
and
in
sbbb
clc
lret
test
or
pop
out
jle
cmc
xchg
lcall
xor
fsub
das
add
add
xor
xlat
xchg
fistpl
inc
jnp
and
push
add
es
shrb
or
imul
sti
fs
and
or
fidivs
mov
push
push
adc
cs
mov
loopne
mov
je
xchg
enter
pop
sbb
adc
insl
pop
sbb
fiaddl
out
xor
pop
adc
push
and
in
cmp
test
inc
mov
cmp
fsubl
ja
shll
iret
hlt
dec
sbbb
data16
jg
adc
mov
dec
jns
push
fwait
arpl
js
add
jae
scas
scas
test
pusha
xchg
shll
adc
mov
cmpsl
inc
cmp
pop
sub
repnz
inc
and
test
sbb
sub
pusha
mov
add
cwtl
jae
push
js
xchg
fnsave
jle
jo
push
jnp
mov
sbbb
outsb
ret
jbe
mov
das
fsubrl
push
xchg
push
insl
and
xchg
xor
mov
mov
mov
xchg
test
mov
int3
dec
sbb
gs
xlat
pop
repnz
xchg
rol
test
popa
test
outsl
rorl
dec
idiv
jmp
xor
mov
add
arpl
adc
jecxz
bound
shrl
out
scas
nop
andb
shrl
dec
scas
cwtl
push
outsb
nop
add
lock
enter
push
push
outsb
push
and
lcall
data16
repnz
bound
mov
ja
aas
test
dec
into
lret
sbb
mov
out
cli
dec
jnp
addr16
adc
pop
dec
stc
and
sub
stos
push
mov
scas
or
sub
es
pop
mov
and
insb
pop
lods
adc
lret
mov
test
or
lea
into
sbb
adc
mov
mov
push
mov
movd
pop
dec
clc
je
jge
mov
dec
cmp
jb
lcall
leave
iret
ss
loop
fdiv
les
incb
and
pushf
pop
mov
std
mov
pop
popa
push
nop
lock
out
jp
jmp
cwtl
mov
xchg
gs
sti
adc
lods
pop
jb
add
cmpsl
movsl
pop
ficompl
mov
fwait
mov
and
add
push
jge
xchg
cmc
call
arpl
in
in
icebp
add
je
divl
and
int
push
sahf
pop
enter
ss
sbb
mov
ret
aas
dec
adc
shr
lods
add
sbb
lea
xor
pop
std
repz
adc
popa
out
pop
lods
es
push
cmp
test
or
cmpsl
hlt
or
inc
ljmp
icebp
sbb
ljmp
aas
adc
mov
loope
mov
ret
aad
shll
xor
and
inc
fisttpll
lret
ljmp
jae
dec
inc
dec
in
inc
ja
inc
inc
inc
xor
cmp
push
idivl
mov
pop
shrb
mov
out
leave
push
test
mov
push
shll
pop
into
scas
cwtl
ror
inc
jae
push
and
out
xor
xchg
int
and
rclb
test
call
ds
jnp
or
push
or
or
outsl
test
jge
cmpsl
xor
mov
xchg
les
test
push
cmc
in
or
add
adc
add
push
lea
ficoms
cld
push
call
in
fidivrl
xchg
in
bound
jmp
sbbl
or
fsubs
jg
inc
add
and
inc
popa
mov
iret
stc
xchg
jp
dec
sbb
into
daa
cmp
inc
cmp
cld
add
lods
xchg
adcb
xor
sub
sahf
repz
inc
cmpsb
lds
push
mov
test
scas
daa
sbb
push
ret
je
bound
xchg
inc
dec
xchg
jmp
mov
lds
je
sti
adc
outsl
addl
arpl
aaa
ret
push
scas
out
imul
mov
in
mull
in
add
rcr
adc
push
sub
popf
pop
add
inc
jb
jg
into
cwtl
iret
or
mov
mov
lock
shr
cmp
cltd
and
cmp
enter
ja
mov
out
mov
into
mov
cmp
leave
rcll
outsb
sahf
xchg
dec
fcmovne
daa
test
test
out
mov
rcrl
sub
stos
adc
mov
mov
xchg
pop
mov
es
data16
jl
mov
push
xlat
push
or
mov
in
or
repnz
test
cmp
mov
inc
popa
mov
pusha
add
jno
jo
lock
mov
mov
mov
in
pop
cli
out
popa
or
stos
lret
xchg
mov
mov
add
dec
add
cmpsb
xor
hlt
out
xor
adc
jbe
fbld
dec
mov
push
bound
mov
add
xorl
ss
cmp
mov
fisubl
pop
pusha
jne
sbb
in
lcall
fistpl
int3
adc
push
arpl
and
xchg
js
mov
and
test
ljmp
addr16
pushf
or
call
out
stos
cli
and
dec
nop
insl
sub
mov
ja
test
mov
mov
mov
bound
xor
cmpsl
fistl
fcoml
aaa
mov
xor
jne
fs
std
call
popa
or
into
js
stos
lea
pop
push
fisubrs
push
or
inc
add
pop
sbb
mov
ret
jge
sbb
sub
jns
out
inc
dec
jne
shlb
cltd
jl
cmp
stos
add
es
dec
xor
mov
lahf
push
pop
rorl
cltd
inc
or
xor
stos
xor
adc
or
mov
push
ficoms
lods
mov
mov
or
mov
mov
ljmp
dec
mov
bound
mov
lcall
frstor
inc
test
mov
xchg
inc
pusha
pusha
adc
sbb
cmpsb
aas
inc
jp
push
movl
inc
mov
pop
mov
jno
lret
repz
sbbb
push
or
insl
sti
stos
push
mov
sub
rorl
mov
rolb
lcall
imul
lods
dec
call
fdivrl
push
pop
jecxz
sub
mov
fdivs
mov
bound
ss
mov
fisubrl
xor
ds
and
test
cld
arpl
sahf
sub
xchg
add
cmp
filds
dec
out
out
sub
sub
mov
cmp
sbb
pop
adc
mov
and
mov
xlat
cmp
cli
sbb
fnsave
jbe
das
movsl
divb
mov
pushf
sarl
mov
jg
sti
adc
sbb
call
xchg
aad
fs
fcomi
cmp
dec
shll
jno
pop
push
test
cld
and
popa
jb
cltd
mov
mov
or
out
push
adc
adc
cmp
cmc
and
adc
push
cld
movsb
inc
xchg
xchg
push
cmpsb
imul
xlat
and
jle
jge
aam
mov
jb
push
ret
roll
cltd
jns
xchg
push
xor
mov
mov
idivb
add
mov
xor
into
mov
jle
xorl
jp
sarb
rcrb
cltd
add
ss
in
loope
push
lock
cmpsl
dec
lock
sahf
pop
outsb
insl
into
or
neg
pusha
outsl
sbb
mov
mov
dec
arpl
nop
sbb
rol
add
test
fs
shlb
jae
shl
sub
shrb
loope
xchg
mov
jle
xchg
shrl
stos
mov
push
xchg
cmpsl
cltd
les
push
jo
lahf
cwtl
out
arpl
bound
shll
lods
mov
jbe
pop
aad
or
inc
scas
fs
es
out
mov
rcrb
cmpsb
cmp
rorb
rcll
dec
rcrl
andb
dec
std
xchg
cmc
roll
push
rorb
jmp
jo
sbb
into
lds
and
call
insl
pusha
dec
adc
ficoms
and
pop
jns
mov
loop
xchg
pop
out
mov
insb
scas
test
mov
std
out
leave
ret
jecxz
pop
sar
inc
outsl
add
clc
push
stc
ficoms
insb
fwait
sbb
add
out
jno
rcrb
mov
dec
test
xchg
add
mov
fdiv
inc
pushf
daa
cmp
sub
mov
pusha
and
mov
push
cld
mov
popf
adc
xlat
in
aaa
jp
cltd
cmpsl
xor
mov
ljmp
cli
xor
and
rclb
jge
adc
loopne
cmp
insl
mov
adcl
std
mov
mov
lods
std
pop
push
rcr
ss
inc
jbe
test
popa
pop
mov
jo
gs
es
pop
mov
sub
mov
pop
push
gs
or
xlat
loopne
insb
and
fisubl
dec
pusha
fstpt
ficoms
outsb
mov
adc
pop
in
sbb
xor
rcr
mov
inc
inc
cmp
rcr
or
data16
sbb
mov
adc
out
scas
dec
mov
push
inc
push
add
or
sub
mov
add
cwtl
inc
mov
xchg
fcomps
xchg
es
jle
ja
outsl
add
cli
push
xchg
pop
pop
inc
int
or
xlat
pop
out
xchg
add
lret
cmp
mov
mov
push
xchg
lea
std
fwait
pop
ficomps
mov
leave
xchg
jmp
test
enter
in
pop
jnp
gs
ret
sar
adc
rorb
or
xchg
cltd
xchg
test
repz
pop
sahf
cmp
jnp
jo
stos
mov
outsb
inc
add
mov
movb
or
sub
inc
loope
inc
push
sub
jge
pop
cwtl
xor
jmp
ss
gs
arpl
and
dec
mov
imul
mov
sub
in
cmp
das
push
dec
loop
adc
in
lods
or
jle
cli
jle
in
jecxz
sbb
test
gs
mov
lods
adc
scas
arpl
xor
mov
mov
stc
flds
push
lahf
popf
xchg
and
xor
pusha
cwtl
inc
fidivrl
jo
nop
movsl
mov
imul
sbb
fcompl
mov
pop
add
pop
pop
push
fsubl
push
imul
outsl
sbb
out
push
pop
and
inc
ja
imul
mov
pop
lods
jl
sub
ret
xor
mov
add
stos
jl
sbb
or
adc
mov
xchg
jbe
xorl
or
sub
and
push
mov
fneni(8087
xor
pop
mov
or
out
pop
xchg
push
mov
fs
or
push
out
mov
xchg
out
push
repz
shl
push
das
pop
dec
sub
inc
push
es
sti
imul
adc
sahf
push
xchg
ja
cltd
xchg
sahf
pop
repz
cmp
mov
ljmp
add
sub
xchg
out
pop
fmul
mov
xchg
dec
enter
pop
cld
arpl
jl
insl
push
mov
pop
inc
jmp
ret
mov
test
out
adc
fistps
lods
stc
imul
add
adc
rcll
icebp
lods
push
bound
pushf
into
in
and
and
imul
nop
and
into
push
adcl
mov
jb
xor
scas
mov
jl
cld
pop
lret
mov
ret
subl
mov
out
inc
aad
arpl
adc
jl
pop
jge
arpl
push
inc
jae
xor
mov
push
mov
inc
cmc
addr16
icebp
cld
dec
adc
push
stc
sub
dec
lcall
push
mov
popf
jbe
push
xchg
or
popa
cmp
lock
test
pop
adc
sbb
sbb
push
call
push
in
loope
movsl
fbld
sub
or
jg
das
lds
sub
xchg
sub
xlat
pusha
pop
mov
cli
cli
sub
daa
out
cmpsb
clc
inc
jae
inc
xchg
jae
jmp
push
cli
sub
cmp
sbb
adc
arpl
mov
repz
xchg
fsubrp
nop
pop
mov
dec
mov
popf
sbb
or
dec
lods
or
icebp
sbb
cwtl
jns
jp
adc
data16
adc
dec
push
push
mov
aam
mov
dec
mov
and
aam
inc
inc
sbb
add
push
sbb
popa
inc
mov
fidivl
push
and
xchg
xchg
sbb
pop
mov
inc
xchg
test
sbb
sbb
sbb
jl
mov
or
fsubs
int
add
lock
inc
push
xchg
imul
sbb
nop
dec
adc
mov
out
or
mov
mov
mov
lock
push
pop
sub
and
sti
adc
add
cmp
enter
fwait
arpl
inc
shr
iret
push
add
scas
js
outsb
dec
lea
jb
imul
in
stos
jae
mov
outsb
fstpl
cmp
add
dec
or
sub
stos
mov
cwtl
imul
or
sbb
sbb
adc
dec
xor
icebp
mov
fidivl
leave
mov
decb
int3
xor
xor
into
push
jae
xor
push
fcmovbe
and
call
mov
pop
xor
cmp
test
addr16
jno
repz
xor
data16
push
inc
fldl
mov
rep
mov
aas
push
outsb
pushf
push
sbb
sub
and
ret
sub
addl
sti
jnp
aad
adc
fcoms
jle
cmpsl
and
jnp
push
test
xchg
testb
or
inc
jnp
sbb
fstpl
sbb
loopnew
loop
iret
dec
dec
sub
fimuls
push
cmpl
push
movsl
cmp
xchg
or
aaa
movsl
adcb
outsb
xchg
xlat
push
shlb
in
mov
jge
inc
aas
and
or
xor
ds
insl
pop
ret
xchg
pop
mov
xchg
imul
cs
mov
cltd
xor
jecxz
cltd
orb
addr16
or
pop
cltd
lds
sbb
cmp
loopne
xor
cmp
mov
push
das
and
mov
fwait
adc
rclb
add
cli
test
ret
xor
pop
je
mov
sahf
add
lret
jp
xor
mov
outsl
call
sub
pop
mov
push
adc
js
sub
inc
cmp
lea
and
jp
mov
jne
mov
xlat
sbb
xor
cmp
sti
imul
pop
mov
xor
es
cs
push
push
fwait
pop
hlt
into
push
lea
xor
lahf
xor
and
inc
mov
popf
or
cmp
xlat
cmp
jns
in
loop
fdivrp
call
insb
mov
mov
push
push
adc
nop
add
jg
inc
cmp
jns
sbb
mov
xor
dec
leave
jbe
mov
and
cmp
sub
shll
add
jbe
idivl
out
in
ja
and
ficompl
inc
lock
outsb
mov
add
scas
jp
xor
xchg
je
sub
push
lret
data16
aam
cmp
cmp
lcall
push
daa
lret
dec
cwtl
mov
in
test
xchg
xlat
jge
out
fwait
push
jmp
cmc
push
das
mov
mov
push
mov
popa
gs
int
insl
cmp
xchg
cmp
sub
bswap
dec
or
movsl
jmp
int
push
mov
adcl
xchg
pushl
xchg
cmp
mov
les
xor
and
sti
xchg
je
js
pop
cmc
pop
pop
pop
in
loope
push
sub
arpl
sub
std
mov
or
push
pop
pop
push
imul
and
adc
pop
mov
or
pushl
mov
jmp
fidivrl
dec
je
pop
out
push
out
mov
idiv
not
testb
pop
rcpps
ret
mov
sbb
add
in
xor
clc
adcb
pusha
mov
enter
mov
movsb
inc
sub
inc
adc
or
push
jmp
idivl
arpl
popa
daa
pusha
cmpsl
pop
movsb
loope
mov
stos
inc
add
mov
pushf
in
cmp
enter
test
in
mov
mov
andl
xchg
or
stc
sahf
jp
jg
addr16
pusha
or
adc
or
or
addb
push
cmp
cs
and
hlt
xor
test
sub
sbb
scas
mov
lcall
out
sbb
dec
pushf
xchg
push
aas
out
xchg
addl
mov
lcall
dec
scas
xor
mov
outsl
lock
add
add
std
insb
inc
cmpsb
push
pop
clc
scas
in
and
inc
subl
mov
xor
mov
test
fwait
dec
int
sbb
in
jno
aas
daa
nop
adcb
jle
cmp
or
loopne
lret
mov
cmpsl
sub
mov
mov
scas
enter
bnd
loop
jo
movsl
call
sub
push
fildll
push
cmp
cmp
aam
push
mov
dec
mov
cmp
test
jnp
xchg
aad
sub
gs
sbbb
and
lcall
mov
loope
ljmp
add
mov
adc
xchg
aaa
js
fsubp
jns
insl
cwtl
cmp
and
cmp
leave
pop
add
test
shll
sub
push
lods
dec
push
loop
movsb
daa
push
fdivl
cwtl
bound
mov
stos
cmpsl
repnz
xor
pop
leave
shl
call
pop
aas
lods
mov
sbb
mov
mov
int3
arpl
inc
or
lea
daa
mov
push
xchg
xor
dec
push
cmp
mov
lds
movsl
jb
mov
mov
add
xchg
outsb
xchg
dec
loope
mov
add
mov
jmp
sahf
push
loope
xor
lahf
fmull
xor
pushl
fmull
pushf
cs
push
xor
ss
mov
ret
cvttps2pi
pop
jnp
dec
icebp
test
mov
subl
ja
test
add
jle
mov
rorb
lock
lds
ss
fildll
jp
jnp
cmp
cmp
repnz
aam
or
push
lret
outsl
fucomp
in
push
flds
dec
push
mov
push
xchg
cmp
sahf
ss
xchg
push
add
push
out
stos
in
jb
pop
hlt
lock
out
pop
mov
in
cwtl
cmp
xchg
mov
call
sbb
int3
fidivs
dec
and
or
test
lods
mov
enter
pop
mov
out
divb
jns
mov
repz
pop
adcb
pop
inc
das
add
int3
insl
inc
ljmp
and
or
sub
fsub
add
lods
dec
aaa
add
add
into
jp
mov
jae
sub
inc
and
xchg
jae
xchg
xchg
push
arpl
cmp
or
setae
cmpl
popf
pop
push
push
sub
repnz
sub
repz
add
pusha
or
je
nop
mov
in
adc
or
pop
or
jbe
mov
arpl
mov
sbb
and
xor
add
mov
pop
cs
dec
imul
scas
jae
and
inc
cmp
ljmp
push
aaa
ret
ret
adc
sub
adc
jp
push
add
jge
lcall
rorl
clc
add
jle
mov
mov
inc
enter
push
xchg
add
insb
jmp
dec
jg
adc
ja
fwait
xchg
sbbb
mov
inc
dec
mov
mov
mov
push
fcomps
mov
dec
dec
sub
jmp
adc
popf
mov
test
rcl
xlat
xor
repnz
int
push
push
cmc
mov
outsl
pop
jle
cmp
mov
pop
cmp
cli
btr
jp
inc
sub
inc
push
adcl
sbb
into
adc
into
int3
mov
arpl
xchg
xchg
loopne
inc
adc
lret
dec
jmp
or
dec
ss
clc
mov
mov
mov
sub
imul
popf
mov
cld
jb
daa
cmp
ret
decb
mov
out
and
push
sbb
sbb
int
in
xchg
push
add
divb
out
inc
lods
jmp
fcomp
mov
push
fmul
xor
aad
sbb
mov
dec
out
std
loop
jbe
stc
jl
movsl
jmp
mov
xor
jae
icebp
fcmovne
lahf
xchg
sbb
pop
sbb
pop
inc
in
mov
scas
mov
inc
inc
mov
mov
mulb
cltd
pop
lcall
mov
ljmp
mov
mov
cmp
lock
call
fadd
cmpb
sbb
sbb
cs
ljmp
leave
jmp
das
test
jge
add
push
and
scas
int3
outsl
cmp
jbe
mov
jl
lods
mov
xor
fdivrl
loopne
jecxz
lahf
les
out
xor
mov
jnp
jmp
pop
pop
and
mov
jp
sub
sbb
shrb
jge
rorb
loopne
cld
mov
jge
insl
rclb
push
data16
movsl
arpl
pop
pop
lods
out
mov
sbb
cld
push
aam
je
jecxz
mov
mov
ss
mov
and
xchg
lock
loope
jo
push
aas
xchg
cmpsb
mov
les
mov
cmp
outsb
xor
sbb
push
pop
mov
ret
xorl
dec
jge
push
pop
stc
and
cmp
dec
or
popa
les
push
outsb
mov
mov
xor
dec
data16
push
xchg
dec
inc
pushf
sbb
push
add
sub
test
je
push
inc
ffree
mov
test
xlat
or
mov
ret
or
inc
inc
mov
ss
mov
dec
sub
filds
or
ret
mov
outsl
movsl
cmp
pop
int
xor
clc
mov
and
nop
les
pusha
sbb
inc
jmp
fldt
js
loopne
aaa
dec
ss
hlt
mov
fmuls
loop
mov
scas
sbb
scas
xor
es
out
jmp
clc
adc
in
xchg
testl
cli
mov
cmp
push
pusha
movsl
xor
sbb
ss
aas
adc
pop
std
sti
mov
in
insb
mov
outsl
faddl
inc
jnp
daa
mov
xor
sbb
and
xor
pop
sahf
inc
push
xlat
inc
adc
mov
jo
fs
ret
lock
mov
sub
adc
nop
or
push
jmp
add
xchg
mov
adc
and
cld
and
push
sbb
lret
psubsw
mov
jmp
mov
add
insb
test
loope
pop
popa
xlat
mov
fucomip
xchg
pop
xchg
mov
sbb
sub
les
dec
pop
andb
ret
mov
push
inc
and
repz
pop
mov
lret
test
and
mov
add
insl
sbb
push
and
jb
jne
mov
push
aas
xor
rol
push
imul
and
mov
xchg
push
movaps
xchg
mov
clc
cmpxchg
aaa
sbbb
pop
jp
adc
dec
mov
xchg
dec
sbb
insl
insl
je
in
in
aam
jecxz
rorb
adc
xorl
xchg
shrl
dec
test
xchg
lods
xorb
insb
sbb
js
push
mov
stos
jmp
cmpsl
xor
fistl
loope
cmc
stos
lods
lahf
jbe
sahf
imul
dec
arpl
adc
pop
lcall
aaa
mov
ljmp
inc
insl
stc
sbb
es
lock
xor
pop
aam
stos
imul
xor
sbbl
mov
sbb
xlat
mov
fsubrl
out
aas
cwtl
in
cmp
jmp
xor
adc
sbb
pop
jne
jle
cli
lcall
dec
push
cmpsb
lods
fistl
adc
lahf
add
and
jge
repz
loope
and
ss
mov
cmp
outsb
jecxz
jl
mov
mov
scas
and
sub
xchg
push
adc
cmp
xor
scas
leave
mov
mov
inc
adc
aaa
inc
pushf
xchg
inc
ljmp
pop
jmp
add
punpckhbw
sbb
pushf
sbb
adc
inc
dec
stc
mov
xchg
pop
das
mov
je
fdivs
ja
sub
mov
out
sbb
adc
in
iret
sbb
loop
nop
mov
arpl
and
or
cmp
xchg
inc
mov
idivb
mov
mov
lcall
push
or
js
sub
dec
adc
bound
cmp
push
lds
int
out
push
mov
adc
push
aas
fildl
in
pop
sub
out
loope
push
test
push
pop
insl
jb
cmp
add
sub
dec
sbb
jno
jg
adc
mov
pop
adc
push
jne
sbb
sbb
sub
out
and
jae
mov
xor
imul
out
push
fndisi(8087
sbb
add
pop
xchg
mov
repz
adc
lret
fdivs
jl
sbb
jp
mov
icebp
imul
adc
xor
sub
xor
xchg
lret
mov
mov
cld
fiaddl
jae
filds
dec
inc
dec
mov
repnz
dec
repnz
mov
add
test
xchg
cmpsl
jge
into
lds
xchg
add
lods
lea
call
imul
xor
cmp
pop
je
cmp
dec
popf
or
add
cltd
xchg
mov
lea
add
out
pinsrw
adc
es
push
pusha
sbb
xchg
jmp
jne
sbb
dec
addr16
add
nop
in
or
nop
mov
jae
faddp
fisttpll
cmpsb
lea
es
pop
push
cltd
fistps
aad
and
movsb
sub
pop
jle
fnstenv
and
lret
sub
push
leave
loop
xor
or
pop
sti
mov
sub
stos
cmp
loop
dec
out
adc
in
aas
lcall
cltd
push
rcl
lret
mov
adc
add
sti
push
cs
xor
inc
mov
or
push
sbb
jmp
movsb
dec
dec
jg
ja
jmp
sar
jmp
scas
ss
fucomp
sub
or
xor
dec
mov
jge,pt
daa
dec
fnstenv
or
add
shlb
pop
jl
xor
cmpsl
hlt
mov
mov
ror
xchg
jl
sbb
sbb
push
push
jp
fwait
jp
push
fisttpl
sbb
fiaddl
add
or
ljmp
pop
or
icebp
push
mov
and
iret
lcall
ljmp
or
gs
rolb
call
call
pusha
sub
hlt
mov
sbb
test
mov
leave
enter
pop
xchg
cmp
imulb
jnp
lcall
xchg
test
dec
iret
or
sub
and
xor
lcall
jb
icebp
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
jmp
cmpsb
or
imul
sbbl
pop
bound
iret
pop
push
sub
cmpsl
dec
or
fnstsw
push
loope
movsl
jp
and
adc
jnp
xchg
jl
pop
jmp
in
mov
test
xchg
in
sbb
in
xchg
cltd
aad
cltd
jmp
xchg
mov
jno
cs
xchg
sbb
test
cmpsl
add
mov
cmp
pop
mov
push
stc
and
mov
aad
sub
sbb
xor
fstpl
aam
or
cmp
inc
or
push
insl
into
lret
dec
cmp
push
out
cmp
and
sbb
mov
sahf
insl
inc
arpl
add
mov
incb
loope
xor
leave
aas
mov
call
push
push
dec
push
cmp
or
mov
inc
in
adc
xor
sub
outsl
jno
pop
aaa
leave
dec
mov
addl
icebp
cmpb
mov
jmp
fwait
mov
shlb
cld
loop
mov
add
pop
addl
lea
stc
add
inc
cli
pop
ret
dec
popa
imul
jae
and
jp
mov
insl
xchg
pop
insb
dec
imul
cld
pop
push
mov
xlat
loope
out
cs
adc
cmp
pop
xchg
dec
mov
fldenv
mov
inc
and
loope
fnstcw
in
repnz
loope
mov
rol
mov
jae
bound
aas
fmuls
outsl
push
jno
aam
stos
and
push
mov
xor
aas
pop
loope
cltd
or
movsl
jno
call
adc
sub
xor
icebp
decb
pop
ss
repnz
outsl
std
fsubl
movl
add
repz
pop
ss
ss
cmc
das
hlt
sbb
call
rcl
xor
int
lret
jmp
push
and
or
test
fisubs
add
inc
xlat
push
sub
mov
sub
dec
out
jb
add
adc
pop
ffreep
pop
add
fistpll
das
jl
mov
sub
add
pop
ljmp
or
cs
xchg
push
pop
cmpsb
mov
popf
lcall
and
mov
adc
sbb
or
int
out
gs
std
or
add
mul
xchg
fwait
and
add
cmp
cld
pusha
cltd
mov
add
imul
mov
out
cmp
jmp
mov
scas
mov
or
cltd
inc
lcall
in
pushf
sbb
mov
imul
and
arpl
outsb
stos
sbbl
fldt
out
call
jbe
outsl
ret
dec
push
loopne
pop
aaa
outsb
bswap
es
add
jns
push
imul
cmp
mov
xchg
sbb
adc
imul
push
sub
push
push
and
add
mov
sbb
jno
fdivs
sbb
add
ret
popa
lods
out
dec
mov
cmc
jg
cs
gs
sarb
mov
stos
or
xor
nop
xchg
cmp
jno
inc
xchg
stos
popa
pop
adc
pop
xchg
push
shll
push
push
cmpb
mov
mov
mov
arpl
pop
nop
sub
std
mov
std
data16
jmp
je
push
mov
xchg
rcrl
pushf
inc
jo
fxam
inc
shlb
insb
mov
js
vmovups
fdivl
mov
test
lods
adc
push
outsb
mov
rclb
push
jnp
rcr
dec
ljmp
rolb
pop
jmp
inc
jmp
je
inc
in
pop
lds
mov
adc
std
lods
mov
fwait
data16
dec
xor
mov
inc
or
setae
inc
fcoms
js
adc
or
pop
and
scas
in
ss
iret
pop
xor
repnz
cld
addr16
pop
test
push
add
adc
mov
mov
and
test
int3
hlt
mov
ret
mov
mov
ss
or
call
shll
mov
imul
dec
mov
pop
loop
adc
shr
sbb
ljmp
fsubr
movsb
mov
adc
int3
jmp
andl
xchg
ret
movb
inc
pop
mov
test
jb
or
inc
mov
cmpxchg
adc
adc
fcomp
imull
pop
iret
je
pop
mov
or
adc
pusha
push
xor
xchg
test
or
dec
lea
adc
stc
cmp
cmp
pop
sbb
out
pop
push
mov
mov
arpl
std
mov
rclb
adc
adc
jo
ret
dec
sbb
pusha
sarb
imul
std
cwtl
mov
add
dec
cmp
and
jae
mull
mov
mov
mov
pop
fsubrl
mov
enter
jle
xchg
sub
xchg
xchg
dec
pusha
into
mov
imul
xchg
adc
xchg
fsubr
sahf
mov
xor
aam
cmp
push
inc
xchg
adc
and
xlat
hlt
add
inc
ljmp
jecxz
mov
xchg
pop
xchg
mov
push
stc
cmpsb
cmc
xor
xor
xchg
xchg
pop
sub
movsb
fidivl
sar
sub
lods
sub
bound
fimuls
ret
push
and
dec
addr16
push
nop
inc
push
xor
push
jb
and
sahf
clc
outsb
mov
dec
inc
rcrl
daa
pushf
imul
ret
jle
mov
and
fstpl
dec
loopne
cmpsb
cs
and
popa
and
mov
lea
iret
cmc
cmp
insl
movsb
fists
out
cld
jne
test
aaa
cmp
ficompl
stos
dec
repnz
push
xor
lods
jne
aad
sbb
inc
ljmp
jb
loop
cmp
das
jl
jno
push
xor
mov
ficoms
movmskps
test
adc
jmp
and
xchg
dec
xor
add
stos
pushf
insl
mov
gs
aad
insl
pop
push
push
loopne
bound
cmpsl
cli
jge
insb
out
leave
inc
fisttpll
or
dec
out
and
push
mov
push
orb
imul
and
nop
xor
fwait
jnp
fisubrl
jp
idivl
jo
test
sub
fidivrs
xchg
push
call
xchg
or
or
jle
jnp
pop
fnstcw
jae
rolb
push
int
ja
cmpb
outsl
or
int
inc
ficomps
adc
inc
popa
jno
fstpl
mov
and
fdiv
or
test
sti
or
jp
add
mov
xlat
add
cmp
nop
daa
mov
aas
fs
pushf
les
mov
ret
sbb
test
je
mov
test
insl
cmpsl
ljmpw
jne
mov
les
xor
test
push
or
jecxz
or
mov
add
adc
out
mul
xor
xor
adc
lcall
nop
insb
push
inc
add
mov
fsubrp
leave
lea
sbb
mov
dec
cmpl
fisubl
imul
mov
mov
loopne
outsb
mov
mov
shrb
lcall
inc
rolb
daa
and
ja
cwtl
sbb
shll
fwait
test
jae
push
rcrb
clc
mov
ret
jecxz
mov
cld
sbb
in
jp
xchg
or
testl
xor
pop
or
add
ret
stc
mov
popa
inc
pop
jae
movsb
aaa
dec
bound
push
lcall
push
mov
out
sti
xchg
loop
out
dec
sbb
rcll
in
mov
or
cwtl
stc
sub
cmc
mov
je
sbb
adc
fisubrs
pop
pop
call
loopne
sahf
xchg
push
inc
cmc
inc
addb
mov
adc
not
add
les
into
test
js
inc
test
jbe
jae
dec
xor
jle
sub
mov
adc
dec
mov
out
out
sbb
inc
sbb
cld
inc
xor
clc
adc
push
std
jp
inc
movsb
insl
ror
lret
adc
cmp
cltd
pop
imul
sbb
dec
out
dec
push
popf
int3
cmpl
pop
lock
inc
repnz
int3
test
out
bound
fdiv
mov
or
mov
cwtl
imul
xor
jmp
out
pusha
test
jne
and
cmc
out
dec
push
test
insb
jnp
insl
mov
xchg
push
mov
xor
cmpsb
ds
xor
test
xor
adc
xchg
sbb
cmp
ret
inc
mov
sub
push
or
xor
mov
jo
xor
shrb
inc
pushf
dec
cmc
jmp
sbb
adc
ljmp
jl
mov
int
pop
mov
push
and
test
shrb
sub
sub
dec
inc
or
mov
test
fnstsw
popf
jbe
mov
push
shrb
lods
jns
and
call
cmp
out
sbb
stos
loope
xor
inc
sbb
ds
js
fsubs
sbb
mov
decb
adc
push
ror
clc
decb
pop
pop
es
cli
imul
add
std
jecxz
xor
aas
fcmovnbe
mov
jae
push
loopne
cmpsl
aam
aam
sub
out
daa
inc
cmp
sub
mov
xor
std
xor
les
and
mov
dec
xchg
xchg
sub
adc
js
inc
sub
dec
bswap
mov
movsb
pop
or
adc
push
idivl
push
enter
testb
add
jo
and
jl
mov
rol
lcall
mov
add
call
add
or
add
lcall
jno
into
mov
cltd
fs
das
jmp
xchg
divb
rcl
mov
movsl
sub
mov
jg
sbb
pop
inc
adc
cmpsl
push
out
aam
cmpsl
sbbl
xor
or
adc
les
lock
fwait
or
cltd
push
out
in
iret
pop
mov
add
adc
add
orl
repnz
or
or
cmp
test
nop
arpl
sub
shl
out
fisubl
nop
or
out
mov
lret
add
dec
xor
fiadds
add
mov
mov
adc
xchg
cmp
aad
daa
popf
xor
sub
mov
js
push
cld
lea
mov
sbb
pop
jge
popf
dec
ljmp
cwtl
imul
adc
or
jns
sarb
cld
xchg
mov
orl
push
add
xlat
pop
in
lea
xchg
decb
jne
cltd
dec
pusha
scas
add
inc
out
cmp
out
ja
scas
test
inc
push
inc
mov
stos
mov
sbb
xchg
test
shrb
and
aaa
loope
mov
pop
lods
stos
mov
add
push
sub
cmp
cld
mov
faddl
shrb
fsubrs
cwtl
push
out
lcall
push
int3
sahf
fimull
adc
and
sbb
nop
jae
dec
mov
jae
call
paddq
adc
scas
dec
sahf
mov
add
sahf
add
js
dec
std
mov
sbb
or
dec
jl,pn
jge
fs
pusha
ret
lock
andl
aaa
dec
jo
add
xchg
push
jecxz
mov
aaa
add
pop
push
add
faddl
pop
inc
int3
or
ljmp
mov
mov
inc
mov
in
or
clc
loope
ja
jle
mov
int
mov
push
movb
dec
lret
addl
mov
popf
cmp
jns
bswap
cmp
or
loopne
mov
push
mov
ds
ljmp
and
cs
pop
icebp
jmp
enter
push
push
push
pop
test
pop
fcmove
mov
loopne
push
add
out
push
fcmovnb
or
mov
int3
xchg
jp
xor
imul
int3
jmp
push
fisubrs
jb
cwtl
pop
push
sub
mov
jge
movsb
xlat
lcall
push
je
loopne
xor
lahf
jle
mov
add
or
jne
scas
sarl
int
sbb
inc
cwtl
scas
cmp
les
daa
into
cmp
pop
xchg
fs
cmc
cmpsl
divl
cmc
testb
movsb
cwtl
test
mov
mov
nop
xchg
inc
sbb
push
pop
jo
lret
and
push
fstps
gs
repz
lds
cmp
nop
sbb
imul
xor
or
push
pop
push
mov
fisubrs
sbb
mov
lahf
sbb
aad
sbb
dec
add
mov
aaa
js
fnstcw
nop
inc
inc
sbb
or
jne
sbb
mov
mov
push
out
shl
adc
fsubrs
xchg
jmp
add
pop
daa
jbe
ljmp
xchg
sub
push
dec
lea
mov
aas
movsl
mov
fcmovne
add
cs
aad
adc
aas
mov
add
and
insl
shrl
cmp
push
push
insl
sbb
add
out
mov
cmpsl
jae
adc
jmp
or
ja
sub
pop
dec
mov
loop
cmpl
pop
cltd
jno
mov
sub
mov
xchg
sub
icebp
in
int
lret
rorb
push
dec
push
loopne
adc
sub
imul
or
outsb
or
ret
push
aas
pushl
or
scas
ret
movb
xor
or
mov
pmulhuw
mov
stos
and
xchg
popa
test
in
cltd
adc
mov
xor
xchg
xchg
cmc
and
movsl
insb
lods
pop
and
adc
xchg
pop
or
mov
movsl
lds
pop
popf
jl
or
mov
lret
push
out
divb
fs
sub
repnz
inc
pop
aaa
arpl
mov
insl
mov
pop
jle
outsl
sub
imul
minpd
mov
clc
and
fwait
mov
pushf
push
int3
movsl
ja
dec
std
cli
nop
shl
aad
ret
adc
mov
push
xor
shrl
sarb
pop
jle
shr
pusha
and
add
test
call
xchg
pop
arpl
xchg
jg
sub
mov
daa
pop
mov
into
pop
xchg
idivl
testb
divl
popf
and
cmpsb
push
push
xor
ja
insb
dec
dec
lock
test
pusha
push
lea
and
mov
lods
clc
jns
xchg
roll
and
xchg
out
or
inc
inc
stos
ret
push
imul
sub
cmp
push
outsl
push
loop
dec
xchg
clc
mov
ljmp
xor
cs
mov
inc
sub
pop
xor
pusha
sbb
pop
mov
lcall
xor
dec
outsl
xchg
sahf
sti
push
jp
in
sarb
nop
jp
popf
cmp
mov
inc
imul
and
xlat
mov
out
cltd
xchg
dec
xor
out
sahf
std
push
cmp
xor
jecxz
pop
push
cmpsl
fwait
add
xor
xchg
lcall
sub
sub
xchg
push
xor
add
jbe
arpl
shlb
jb
push
ljmp
rcrb
push
les
iret
sbb
inc
lock
mov
enter
sbb
inc
pop
inc
pop
outsb
fs
je
jmp
lret
iret
sub
jmp
mov
movb
fcoml
sub
mov
fisubl
cmp
pop
mov
cmpsl
mov
or
fnstenv
scas
sbb
jge
sub
inc
jg
repz
pop
mov
mov
mov
and
mov
adcl
fmul
outsb
push
std
aaa
lock
lret
jg
mull
push
sti
mov
stos
jp
hlt
mov
push
inc
dec
xor
sub
fstpl
cli
mov
ljmp
and
add
enter
sbb
cmpb
xlat
mov
sub
mov
or
cli
js
sarl
dec
repz
mov
mov
dec
lret
inc
pop
dec
mov
sbb
jb
push
lcall
xor
mov
rclb
and
pop
push
ljmp
mov
insb
xchg
mov
clc
lret
nop
mov
pop
leave
cwtl
jmp
in
adc
cld
mov
or
call
test
or
std
or
cmp
lock
dec
jnp
lds
mov
mov
fbld
imul
in
addr16
xor
movsb
int
xchg
mov
cmp
sub
pop
push
and
and
cmpsb
in
clc
push
cwtl
xchg
aaa
int3
xchg
adc
in
repz
jne
push
nop
out
and
adc
jbe
test
mov
sub
fucomi
inc
push
mov
sbbl
xor
out
cmpsl
jmp
pop
xchg
call
push
dec
aas
push
pop
pop
cld
pop
sbb
mov
test
into
add
loope
int3
mov
sbb
out
mov
lock
sub
xchg
popf
dec
mov
cmpl
mov
loope
xor
fsubr
shlb
adc
jecxz
push
jbe
inc
pop
into
mov
xchg
bound
or
mov
out
push
movsb
inc
cmp
stos
clc
push
fidivrs
pushf
popa
xor
ljmp
repz
lret
std
ja
push
mov
inc
test
xor
xchg
lea
inc
sub
add
sbb
clc
xor
cmpl
incb
test
dec
or
pop
xor
call
test
cmp
xchg
xor
xchg
jl
or
filds
sub
pop
imul
pop
push
cwtl
repz
iret
ret
outsb
loop
xor
pop
dec
dec
pushf
insl
sub
in
lret
loopne
shll
mov
push
sahf
jle
shl
dec
sbb
mov
pop
bound
adc
pop
out
mov
out
push
pusha
push
shl
cmp
cmp
mov
lret
js
sub
leave
jmp
bound
call
mov
or
sbb
add
push
xlat
out
insl
or
repz
inc
cmpsb
shlb
mov
cmp
loop
sbb
mov
cltd
mov
pop
xchg
out
or
adc
and
xchg
orl
mov
xchg
sbb
cmpsb
push
std
mov
push
sub
je
mov
imul
clc
inc
xor
ljmp
and
rorb
xchg
xchg
cs
test
inc
mov
fwait
sub
aam
xchg
mov
xchg
and
add
mov
aad
dec
mov
mov
sbb
jo
cmp
leave
or
pop
insl
cld
mov
fldt
fs
loope
and
push
lods
iret
mov
dec
inc
sahf
fwait
lods
mov
mov
scas
les
sub
inc
jge
xchg
mov
sbb
dec
pop
ret
xchg
mov
idivl
sbb
adc
clc
jg
pushf
enter
xchg
into
inc
pushf
add
jbe
xor
lret
out
cmpsl
cmc
or
sbb
xchg
popa
pop
lret
lret
cmp
push
and
idiv
dec
in
push
inc
jne
jo
and
dec
ja
daa
mov
movsb
mov
ret
xchg
xchg
lods
aam
enter
out
movsl
sbb
sbb
loope
push
ss
jne
push
shrb
and
call
pop
or
test
testb
mov
push
jbe
mov
cli
imul
div
xor
scas
and
icebp
mov
xor
in
repnz
int
jmp
mov
dec
ret
dec
mov
mov
push
pop
inc
cmp
sub
mov
lds
dec
lahf
mov
es
dec
jo
bound
xlat
and
addr16
mov
cmp
inc
test
xchg
xlat
ja
ljmp
pop
cmpsb
push
mov
stc
fmuls
inc
mov
pop
push
aad
and
jo
stos
jo
or
xchg
adc
enter
sub
scas
fnsetpm(287
jns
xor
fdivs
push
lods
and
sub
mov
insl
cmp
in
aaa
xchg
and
mov
fwait
xchg
adc
jno
inc
cwtl
sub
adc
add
mov
enter
or
cmpsb
sbb
add
mov
out
shrl
add
push
push
es
xchg
adc
mov
outsl
cmp
icebp
cltd
and
int
dec
xor
fdivrs
je
jge
sti
inc
push
dec
mov
adc
pop
or
cmp
test
sbb
or
mov
pop
enter
adcb
dec
pop
adc
test
and
pop
mov
icebp
mov
adc
out
lds
jns
pop
mov
push
fdivrp
mov
fcompl
out
inc
int
sub
mov
xchg
mov
mov
sub
or
outsb
cmp
push
cli
sbb
or
rclb
and
bound
mov
mov
mov
pushf
mov
pop
mov
je
aaa
insb
movsb
es
iret
inc
mov
xlat
mov
lock
lsl
test
cmpsl
push
test
add
aad
push
into
mov
mov
cmp
add
cmp
sti
fdivr
jns
push
mov
popf
fwait
shll
xchg
mov
arpl
lahf
fnstenv
sbb
cli
pop
cmc
cli
push
dec
and
ja
loope
add
cmp
ljmp
mov
sub
mov
xor
push
sub
dec
jmp
or
adc
lret
pusha
aam
je
or
fidivs
push
jp
test
jnp
adc
and
inc
call
xchg
gs
jne
jns
adc
mov
mov
sub
fdivl
pop
mov
lds
add
repz
xchg
test
xor
inc
out
ret
jle
lock
daa
xor
sbbl
push
add
sbb
cmc
push
loope
sub
scas
insl
pop
test
mov
repnz
cmc
movsl
je
cmp
popa
mov
pusha
xor
or
fdivl
clc
lahf
js
dec
inc
and
pop
fstpl
push
mov
outsl
shl
cld
inc
jnp
mov
inc
mov
mov
stos
sub
pop
test
jnp
ljmp
imul
mov
cmp
and
push
and
cwtl
ljmp
cmp
pop
psubsw
das
loop
inc
mov
mov
mov
sbb
xchg
scas
mull
mov
cli
dec
pop
jnp
ret
nop
push
dec
jecxz
repz
stos
sarb
inc
rorb
cmp
in
push
scas
mov
movsl
inc
xor
std
xor
insl
into
shl
or
jle
out
fadds
and
fs
push
jg
out
jno
pop
pop
pop
loop
mov
sbb
xchg
xchg
inc
addr16
cmp
loop
je
int
cmp
push
outsb
xchg
add
sub
jle
sub
aaa
int
jnp
fistps
sti
jge
or
lcall
push
lret
lods
fbld
shll
mov
les
dec
in
mov
mov
fsubrl
and
lcall
jmp
push
jge
sbbl
insl
mov
dec
sbb
push
scas
adc
mov
xchg
push
scas
imul
cmp
mov
and
andl
fdivr
loop
xchg
jg
jmp
stos
and
or
rcrb
mov
mov
xchg
mov
fstp
or
mov
sarl
pop
inc
pop
xchg
out
cwtl
roll
in
push
fstl
dec
ss
xor
adc
inc
xchg
es
lock
dec
andb
sbb
xchg
fdivrl
adcl
fildll
cs
inc
mov
dec
xchg
jno
negb
adc
cltd
ljmp
stos
popf
sahf
pusha
add
ja
repz
mov
mov
inc
pop
cli
insb
xchg
sahf
adc
out
mov
imul
out
mov
adcl
pusha
movl
ja
pop
jb
std
pop
lea
shl
sbb
push
push
scas
inc
mov
add
loop
xchg
aad
xchg
xchg
mov
test
jae
and
pop
sarl
push
jae
loope
fldt
push
mov
outsb
popf
orl
jne
xchg
js
invd
cmpl
or
mov
cmp
jl
sbb
lock
roll
mov
or
test
test
scas
xchg
cs
sbb
repz
leave
test
movsb
mov
mov
xchg
mov
lods
aam
mov
fildl
jno
mov
push
dec
jb
or
rorb
mov
mov
jge
push
xchg
data16
rclb
push
negb
adc
popa
adc
stc
out
loop
das
push
mov
and
data16
and
incb
cmp
stos
xor
shrb
out
icebp
or
push
sbb
stos
jp
scas
fistpll
mov
fstpt
xchg
data16
push
sbb
xchg
xor
enter
sub
push
pushl
add
cmpl
or
ljmp
xchg
and
xchg
xchg
mov
icebp
fisubl
push
or
stos
xor
ret
movsl
pop
imul
nop
cmp
mov
sbb
xor
inc
imul
imul
sub
mov
fadds
cs
bound
shl
mov
or
shlb
pop
mov
adc
sti
xchg
cwtl
mov
addr16
popf
daa
repnz
mov
bnd
icebp
push
jecxz
cmp
mov
pop
stos
test
lcall
jl
xchg
pop
into
xor
out
mov
xor
jge
dec
cmc
or
aaa
aad
xchg
js
je
push
push
aaa
mov
in
pop
push
push
jne
clc
xor
addl
jno
dec
xor
sti
mov
pop
aad
pushf
xor
pop
xchg
test
adc
leave
sub
or
out
ret
andl
test
dec
test
gs
xchg
sarw
addb
pusha
lret
inc
sub
sbb
xor
cmpsb
xchg
jnp
dec
add
in
add
adc
mov
in
nop
mov
jecxz
cmp
clc
test
or
les
arpl
insb
leave
js
mov
into
inc
or
pusha
ss
mov
xchg
cmpsl
ds
aas
dec
in
push
xor
into
out
fxch
lea
mov
mov
dec
aad
into
in
outsl
push
jnp
jae
add
lods
loope
or
icebp
cmpsl
mov
loop
cmp
stos
fistl
and
xchg
push
in
test
dec
into
jo
mov
pop
jl
fdivl
mov
jg
icebp
mov
push
pop
ss
xor
dec
pop
faddl
les
xlat
mov
xor
inc
jmp
inc
test
sbb
inc
or
mov
jecxz
in
test
addr16
clc
mov
mov
jl
daa
test
push
popf
or
fisubs
mov
or
adcb
xor
add
lods
xchg
sti
testb
and
sub
sub
adc
sub
ljmp
fistps
sti
xor
ljmp
jmp
jnp
pop
out
mov
inc
iret
fprem
xchg
iret
pop
mov
ljmp
mov
rcr
mov
mov
xchg
and
push
sahf
subl
dec
and
push
xchg
test
push
push
xchg
xor
aas
mov
mov
cmp
leave
mov
call
inc
and
mov
jl
ja
dec
jmp
arpl
or
or
cli
and
mov
addl
aad
push
lret
mov
mov
das
jbe
les
insb
js
ja
out
jmp
pop
cmpsl
pushf
pop
inc
fistpll
int3
xor
ss
push
cmp
sbb
add
jg
test
mov
enter
push
imul
and
jb
flds
push
cmc
mov
cmp
adc
fnsetpm(287
pop
lret
iret
shrl
pop
xchg
inc
mov
and
pop
and
cli
aam
scas
or
push
cmc
mov
sbb
cmpsl
xor
test
ret
push
and
mov
push
xor
xchg
aam
push
ljmp
add
aad
cmp
pop
cmc
mov
xchg
jle
popa
xchg
bound
shlb
cs
mov
push
sub
xor
push
sbb
jle
cld
pop
xchg
je
and
adc
mov
fsts
mov
test
and
and
cwtl
int3
inc
lock
mov
mov
sbb
xor
mov
stos
lahf
jb
cwtl
push
pushf
pop
leave
inc
cmpsl
loope
ljmp
pop
or
shll
lods
adc
stc
out
in
js,pn
movsb
repz
push
pop
jl
insb
out
sbb
dec
mov
in
push
in
jns
mov
xchg
add
mov
xchg
pop
jmp
or
mov
fimull
lret
jg
cmp
mov
adc
loop
and
inc
xor
je
and
mov
xchg
cmp
jne
insb
out
shrl
fisubl
sub
sub
push
cli
push
and
bound
aad
insb
insb
fnstsw
mov
mov
pop
out
loop
cmp
mov
add
xchg
lret
leave
pop
xorb
inc
sub
mov
push
mov
dec
out
pusha
mov
fldl
insl
dec
xor
jp
push
sub
mov
mov
cmpsb
mov
test
and
fsubl
fdivl
mov
movsl
dec
insl
mov
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
pop
or
repz
sti
ja
stos
mov
mov
add
add
add
popf
roll
cmp
xchg
shrb
sub
push
in
loop
hlt
inc
cmp
nop
cmp
out
xlat
add
mov
jmp
push
cmpsb
pop
test
mov
aam
aad
outsb
jne
inc
dec
cmpsb
inc
add
lods
or
cs
cli
push
pop
xor
icebp
sbb
pop
adcb
dec
mov
pop
pop
xchg
mov
out
add
add
add
sub
adc
cmp
out
pop
xchg
push
fxch
add
bound
add
ret
add
inc
xlat
mov
pop
fwait
popf
sbb
dec
in
mov
shll
mov
mov
xor
push
inc
push
ljmp
fxtract
mov
or
xchg
rolb
jl
lret
insb
inc
mov
ret
or
pop
shlb
pop
pop
stos
cld
cli
push
add
add
add
pop
sub
sub
addb
into
add
bound
add
cmp
pusha
into
cmpsb
xchg
adc
in
dec
lea
and
test
or
jno
out
inc
fisubrl
xor
or
xchg
out
inc
dec
js
jae
xchg
sbb
movsl
pop
out
pop
imul
out
lods
daa
sbb
pop
ret
testb
lods
mov
ja
sub
int
add
add
add
and
aam
aam
ljmp
je
fnclex
mov
popf
into
add
bound
add
rcrb
add
and
dec
insb
in
movsl
lret
out
inc
mov
ret
and
orl
mov
mov
mov
xor
pop
pop
mov
jecxz
sbb
mov
cltd
pop
mov
js
mov
out
jns
in
mov
popf
mov
add
add
add
lret
dec
jle
sti
cmpsl
mov
dec
mov
dec
add
bound
add
shlb
cmp
fcompl
mov
imulb
fistpll
pusha
jno
cmp
push
add
shll
xor
insb
out
cmpsb
push
cmp
icebp
and
shlb
dec
faddp
jae
and
aaa
inc
sub
and
cmp
test
add
add
add
out
lods
cmp
stc
stc
lock
add
add
hlt
sbb
cltd
adc
inc
lds
mov
jmp
insb
in
mov
addr16
notl
popf
mov
add
test
insl
dec
test
ja
imulb
insb
sbb
mov
push
xor
pop
repz
dec
pop
int3
add
stos
jge
or
jne
scas
nop
dec
sbb
add
add
add
push
xor
gs
aaa
push
jg
sti
ret
iret
add
bound
add
aaa
push
xor
out
call
xlat
fidivl
mov
subl
data16
mov
push
pmaxub
dec
sub
mov
xchg
lods
add
xor
imul
pop
or
fcmovne
leave
adc
xor
sbb
pop
dec
jnp
cmc
out
rcl
push
jle
dec
mov
sbb
mov
add
dec
inc
sub
das
jle
jg
imul
mov
loop
add
add
add
mov
lahf
mov
jg
push
xchg
lock
clc
insb
cmc
andl
test
mov
outsl
ja
pop
cmp
mov
or
jle
pop
sti
mov
popf
push
jmp
orb
es
test
cs
and
dec
shrl
int3
pop
dec
mov
add
add
addr16
and
mov
mov
call
add
add
and
out
mov
lods
or
lods
sbb
mov
push
enter
cltd
mov
stos
stc
daa
in
neg
cld
ret
scas
add
test
lea
daa
pminub
dec
ret
in
std
fs
cld
cmp
out
leave
mov
in
lods
imul
and
and
add
add
add
ret
or
ret
lods
sub
mov
xor
jecxz
add
add
lret
leave
inc
call
and
daa
xchg
addr16
popa
in
ret
jge
xchg
pop
adc
jo
add
sub
loope
add
inc
push
pop
fisubl
mov
andl
lock
into
loope
jp
fcoms
adc
mov
jnp
jmp
lods
lret
or
add
add
add
ret
pop
iret
fst
enter
or
adc
bound
add
mov
movsl
xor
jae
insb
cmp
or
je
add
fwait
mov
rolb
cmp
inc
xor
aas
mov
mov
test
ret
subb
jno
pop
loope
adc
xor
and
pop
insb
pop
sub
pop
inc
jmp
ret
jp
inc
xor
stos
rcr
cmc
loope
std
sub
add
add
add
popa
pop
lock
out
repz
mov
ret
in
movsl
xor
lcall
add
fs
inc
add
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
insb
jp
jbe
ja
js
jno
inc
inc
push
jno
ja
dec
dec
dec
inc
jno
jae
push
arpl
push
inc
add
push
inc
add
sbb
add
or
dec
xchg
dec
scas
dec
ds
js
cmp
dec
inc
dec
jae
inc
dec
xor
dec
pop
pop
pop
push
cmp
dec
xor
dec
cmp
dec
js
cmp
dec
inc
dec
mov
dec
xor
dec
pop
insl
pop
bound
dec
jns
xor
dec
cmp
dec
mov
dec
inc
dec
pop
jge
jb
subb
xchg
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
lea
outsl
xchg
outsb
xchg
jle
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
popf
pop
xchg
outsl
mov
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
lods
pop
mov
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lahf
dec
cmp
dec
inc
dec
pop
mov
outsb
ret
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lods
dec
cmp
dec
inc
dec
pop
int
ret
outsb
sarl
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
fstpl
outsl
loop
jecxz
repz
aas
dec
lea
dec
lahf
dec
cmp
dec
xor
dec
pop
in
pop
loop
repnz
repz
jns
jle
jns
cmp
jg
xor
dec
xor
dec
cmp
lods
dec
cmp
dec
inc
dec
pop
or
outsb
adc
jns
aas
dec
add
sahf
sbb
xchg
sbb
add
push
inc
add
push
inc
add
inc
add
inc
add
push
inc
add
sbb
add
mov
inc
add
inc
add
inc
add
sbb
inc
add
sbb
add
sbb
add
inc
add
or
andl
or
inc
add
inc
ds
insl
push
inc
imul
in
incb
aas
cli
mov
add
xchg
pushf
clc
mov
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
ljmp
add
add
jbe
mov
pushf
clc
sbb
push
pop
sbb
add
mov
inc
add
or
insb
inc
inc
add
add
add
push
add
push
push
add
push
push
add
add
push
add
add
dec
lahf
dec
mov
dec
movsb
dec
insl
dec
bound
dec
add
cltd
dec
pushf
dec
fwait
dec
insl
dec
bound
dec
scas
dec
lods
dec
lahf
dec
mov
dec
xor
add
dec
test
dec
fwait
dec
xor
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
jae
jo
jno
jbe
ja
je
jne
mov
mov
lods
jge
jge
jns
mov
insl
enter
jb
test
hlt
test
test
fnstenv
mov
push
or
xlat
out
add
scas
adc
jge
fidivs
leave
hlt
cmpsb
cmp
mov
cmpsb
and
and
cmc
enter
inc
inc
add
jp
sbbb
out
inc
add
in
adc
imul
insb
push
imul
push
jp
dec
push
arpl
dec
dec
data16
imul
inc
push
jb
inc
je
inc
jae
dec
gs
dec
dec
pop
jp
jbe
pop
jo
inc
gs
dec
js
inc
js
dec
inc
inc
inc
push
dec
insb
dec
jbe
pop
jbe
inc
fs
push
inc
add
inc
outsb
imul
push
push
push
jne
insl
push
push
jo
addr16
pop
add
push
pop
inc
inc
outsb
popa
imul
jne
dec
je
bound
jns
bound
dec
ja
dec
inc
inc
push
add
outsl
inc
dec
outsl
pop
inc
jb
jns
inc
pop
dec
add
bound
pop
outsl
push
dec
insb
inc
push
inc
jo
add
add
je
insb
jae
inc
insl
je
push
push
addr16
jo
js
pop
dec
push
dec
jns
js
outsb
pop
jae
push
arpl
push
push
je
addr16
dec
inc
insl
inc
inc
inc
arpl
push
inc
popa
push
dec
imul
push
push
imul
dec
jns
push
inc
jo
imul
fs
inc
push
push
ja
fisttpll
mov
js
jecxz
or
add
add
xchg
inc
push
push
jmp
sub
push
xchg
test
dec
cs
xchg
arpl
test
cmpsl
inc
xchg
mov
imulb
add
add
push
sub
or
cltd
and
or
ljmp
adc
stos
pop
aam
out
mov
aas
xchg
lods
sbb
out
lock
cs
sbb
add
add
add
sub
cli
jl
xlat
push
inc
jne
subb
add
add
mov
mov
in
jecxz
jl
mov
mov
jmp
aam
xchg
pop
and
mov
mov
cmpsb
inc
pop
pop
sub
sub
ror
pop
adc
rol
rorl
sbb
insl
mov
and
push
adc
divl
sub
cwtl
aam
fiadds
add
add
add
stos
pushl
xchg
push
out
int
add
bound
add
icebp
les
int
dec
jno
jmp
repz
adc
push
sbb
enter
dec
dec
out
push
push
mov
push
pop
push
add
jle
pop
mov
sbb
mov
arpl
push
cs
out
aas
push
lcall
jnp
mov
fisubl
fistps
loop
xor
add
add
add
cmp
in
fimuls
les
bound
add
call
lock
add
cmp
inc
add
or
xchg
or
fdivr
and
jb
out
cli
or
xorl
jge
and
jle
jmp
ja
jo
inc
mov
loopne
outsb
out
sbb
jle
daa
and
mov
push
outsb
push
push
in
and
insb
add
add
add
fnstenv
std
negb
sub
fwait
divb
add
add
mov
aaa
repnz
dec
fisttpll
sub
mov
pusha
lret
mov
pop
pusha
adc
aam
dec
jo
dec
fwait
inc
scas
xor
push
shr
adc
cwtl
adc
jl
repz
push
loope
mov
dec
dec
js
xor
gs
lcall
test
push
add
add
fidivl
xchg
mov
scas
fbstp
inc
mov
xor
add
bound
add
iret
add
scas
popf
les
lods
push
cmpsl
mov
and
push
mov
pop
sub
lds
xor
lds
and
or
mov
push
ss
stos
ja
adc
cli
mov
push
rclb
push
push
aam
out
bndldx
daa
or
sub
push
xchg
xchg
divl
add
dec
in
fwait
scas
fdiv
pop
sub
mov
bound
add
mov
pop
cmp
fxch
mov
cmp
pop
lret
xor
int3
lret
sub
shll
outsl
outsb
mov
push
ljmp
mov
rcrl
xor
test
in
mov
mov
scas
dec
inc
lcall
insb
dec
in
add
imul
cli
mov
add
add
push
add
xor
jb
insl
xor
and
mov
add
bound
add
xchg
ficoms
inc
xchg
sti
mov
popf
dec
xor
mov
popf
stos
shll
outsl
xchg
sub
sarb
movsb
push
mov
mov
xor
pop
mov
push
and
dec
jmp
xlat
adc
jno
xor
ja
sub
sarl
and
jge
sbb
jae
mov
out
pushf
sub
xlat
dec
leave
testb
add
add
cmp
add
mov
out
aaa
and
sbb
add
bound
add
out
out
inc
stos
cmp
inc
add
jns
push
sub
clc
pop
xor
int
in
push
fdivrs
xor
enter
dec
cltd
dec
lds
sbb
scas
les
add
xchg
dec
ljmp
pop
fs
sub
push
jmp
or
lret
push
jl
jge
pop
xchg
xchg
mov
mov
add
add
jmp
repz
fimull
es
or
jnp
add
bound
add
and
mov
cld
xor
popf
out
sbb
outsl
push
mov
mov
jae
mov
pop
lods
daa
add
or
pop
inc
cmp
push
xor
scas
fisubs
pop
mov
xor
repnz
sub
aas
mov
mov
sub
pushf
pop
cmp
sub
aad
into
int
scas
dec
xor
add
add
add
pop
iret
pop
aad
ss
dec
xchg
add
data16
add
bound
add
imul
outsb
in
xor
and
and
bound
lods
cmp
cmc
cmp
outsl
adc
mov
dec
aam
mov
mov
push
and
insl
add
mov
out
repnz
adc
mov
lods
test
rcl
mov
jg
jge
add
add
add
cld
sti
iret
adc
bound
add
lds
and
mov
lock
leave
xor
adc
lods
out
pop
leave
scas
mov
or
xchg
xchg
lods
mov
sbb
iret
dec
lret
fcomp
mov
xchg
lahf
adc
mov
fwait
lea
sbb
mov
or
and
sub
out
mov
outsb
adc
add
outsb
jae
lret
jle
repz
daa
mov
fildl
add
add
sti
into
cli
mov
add
dec
pop
mov
movsb
mov
add
loopne
out
pop
mov
mov
pushl
int3
mov
and
sub
push
sub
mov
loop
out
jp
test
fistpll
cmpsl
sar
inc
icebp
std
arpl
jmp
sbb
and
mov
add
add
adc
adc
mov
lds
add
add
bound
add
mov
ljmp
jle
int
in
lcall
push
xchg
int
jbe
movsl
add
scas
push
xor
fistps
rolb
jmp
imul
loop
lahf
xchg
in
sbb
mov
sbbb
outsb
popa
sub
or
ret
mov
sub
test
fldl
add
add
add
mov
lock
mov
rolb
out
faddl
add
add
pop
sub
push
std
mov
ja
pop
mov
shlb
jmp
popa
xor
test
sub
xchg
adc
mov
imul
cwtl
inc
mov
in
int3
pop
xlat
pop
mov
sub
lods
fs
clc
js
stos
imul
hlt
and
jnp
jmp
add
add
add
aam
push
lock
cmc
das
sbb
xchg
iret
and
dec
faddl
add
add
pop
sti
add
push
iret
xchg
inc
fistpll
jno
ret
push
mov
mov
loop
imul
ret
aad
push
mov
outsl
pop
dec
jne
sbb
repnz
inc
rol
gs
loop
aaa
jecxz
xchg
xchg
mov
mov
ficomps
add
in
fsincos
ss
mov
cmp
stc
lea
jns
add
add
add
sub
fildll
adc
mov
sub
add
bound
add
mov
out
imul
test
xchg
cli
cmpl
xor
adc
int3
mov
insl
pop
jmp
xorl
jo
cmp
pop
mov
bound
dec
xchg
cs
es
inc
and
fcompl
lea
out
inc
mov
push
and
lock
or
push
movl
add
fs
testl
pop
lret
add
bound
add
or
sahf
test
jne
sbb
or
jl
subl
out
jl
sbb
push
mov
jle
mov
jbe
sahf
xor
out
pmaxsw
adc
xchg
imul
adc
sub
ret
jp
push
sub
add
jle
inc
enter
cmp
xchg
js
add
add
add
push
imul
or
and
bound
add
shrl
dec
pop
ret
pop
pop
mov
hlt
es
xor
push
sarb
adc
or
rclb
subb
lds
nop
mov
jbe
and
and
fidivrl
jle
mov
or
cmp
repz
pop
ja
sahf
in
pop
sub
jae
xor
sbb
mov
or
push
fldl
add
add
add
add
jne
jg
clc
cs
push
and
add
add
mov
aam
cmc
stc
add
sbb
clc
push
aam
xorl
dec
adc
mov
test
mov
dec
insb
xor
movsl
outsb
sti
inc
push
enter
cmpsl
sub
cmp
out
out
xchg
adc
lods
test
push
push
mov
insl
jge
xor
add
add
add
add
or
dec
mov
je
lcall
add
bound
add
inc
ljmp
std
ficoms
scas
int3
sti
lcall
cli
imul
aaa
into
add
inc
adc
fldcw
pop
test
aas
stos
mov
ds
out
not
cli
scas
add
jmp
ds
jae
shr
adc
xchg
add
add
stos
jl
push
jne
add
add
add
push
mov
mov
xchg
adc
mov
add
bound
add
sub
xchg
ret
push
and
push
inc
jb
cmpsb
sbb
cmpsl
mov
sbb
adc
cmovne
into
pop
jge
mov
jp
lods
int3
pop
adc
jmp
inc
dec
push
andb
movsb
stos
shlb
jnp
aad
fldl
add
jmp
pop
mov
lret
aam
jle
mov
add
add
xchg
fcmovu
fisttps
push
dec
push
testb
add
bound
add
xchg
adc
pusha
push
iret
mov
inc
nop
sbb
sub
pmaddwd
daa
out
mov
mov
cmp
andb
notb
leave
test
jecxz
push
mov
mov
popf
or
rcrb
into
mov
dec
fidivs
and
int3
icebp
in
ret
clc
add
add
add
lahf
arpl
std
jle
out
sbb
mov
roll
add
add
sti
cli
rcrl
xor
cmp
es
push
add
and
mov
mov
test
jmp
mov
adc
and
sub
jp
imul
cwtl
mov
bound
aad
xchg
jne
xor
fnstenv
add
xchg
mov
cltd
pop
xor
and
add
add
add
jo
and
cmp
pop
in
psrld
add
add
in
out
repnz
mov
push
lods
fiaddl
es
add
jnp
mov
and
stos
inc
cmp
daa
xchg
pop
shll
iret
add
mov
push
push
jmp
xor
xor
push
push
push
movsl
imul
call
add
xchg
nop
ffree
popf
aam
daa
fdivs
add
bound
add
ret
aad
shlb
dec
jmp
pop
imul
fidivl
shrl
cmp
or
incb
out
fildl
dec
int
push
cpuid
jp
int3
adc
les
sbb
iret
jae
inc
mov
xchg
inc
inc
fisttps
cmpb
std
push
jb
add
add
add
mov
jbe
hlt
mov
and
cmpsb
outsl
sub
rcl
add
bound
add
and
inc
mov
xchg
and
adc
push
pop
fstpt
mov
and
pop
push
mov
lods
cmp
cmpsl
push
mov
rcll
pushf
mov
xchg
mov
push
dec
inc
push
cmp
inc
stos
cwtl
pop
sub
adc
int3
inc
lcall
add
add
add
ror
mov
sub
out
rcll
xor
add
add
cmp
outsl
mov
or
je
pop
mov
xchg
out
jl
dec
jns
ss
mov
xchg
mov
mov
loopne
cmc
jbe
inc
je
inc
mov
lds
mov
subb
lea
fcompl
and
xlat
mov
int
push
add
add
add
fucomi
outsb
and
pop
mov
xchg
roll
add
add
lds
aam
sahf
stos
mov
mov
mov
arpl
sarb
and
cmp
adc
ss
pushf
fimull
jl
int
sahf
aad
push
pop
jmp
outsb
xchg
into
jb
xlat
or
data16
stc
cmp
mov
xchg
mov
dec
mov
and
arpl
rcll
add
add
add
add
mov
and
fdivr
roll
add
add
adc
jae
sub
sub
adcb
lret
inc
push
cmc
jp
jmp
ret
push
add
jbe
dec
jne
cmp
and
or
or
cmpsb
sbb
xchg
rolb
mov
cmpsl
pop
xchg
inc
mov
popa
popa
push
and
das
dec
xor
ss
dec
push
cmp
mov
fldenv
mov
xchg
add
add
add
stc
call
into
inc
mov
hlt
xchg
inc
or
add
bound
add
sbb
xor
lock
or
mov
xchg
movsb
aaa
rcrb
add
lock
pop
push
rorb
and
es
or
in
pop
mov
jo
out
sub
jbe
inc
pop
mov
xchg
mov
add
jg
es
mov
sub
add
add
add
fisubrs
cwtl
sar
repz
mov
add
add
pop
push
sbb
adc
cmc
ret
push
sti
jo
inc
push
sub
push
nop
in
pop
std
mov
movsb
jns
stc
xor
sbb
cmc
je
leave
cmp
subl
dec
add
rol
js
sub
aas
ja
xlat
adc
xchg
shl
data16
or
sbb
add
add
dec
aas
int3
sbb
out
loopne
lods
xor
add
bound
add
pusha
fwait
cs
cli
push
outsb
sarb
pop
arpl
popf
aam
lods
mov
ja
popf
lods
imull
push
sbb
jecxz
push
outsb
sub
lock
pop
lret
pop
xor
adc
call
andb
xchg
sbb
xchg
lods
aaa
lock
add
add
add
push
test
fildll
pop
sub
adc
add
and
jne
push
nop
fstps
xchg
loopne
xchg
jp
pop
mov
mov
int3
add
ss
lock
out
hlt
loop
lret
push
loope
orb
add
iret
inc
jmp
fdivrs
pop
js
sub
xchg
dec
jg
leave
cmpsl
sbb
xchg
int3
add
add
add
fwait
loope
sub
sarb
add
jns
jecxz
add
bound
add
mov
pop
dec
sub
int3
ror
ret
arpl
pop
add
out
dec
push
shrl
mov
lret
xchg
and
rorl
mov
mov
jle
ficoml
add
lahf
inc
inc
xor
subb
inc
lahf
jge
nop
cli
stc
loope
call
shl
cld
xor
xor
or
daa
jecxz
fdiv
add
add
add
or
ja
dec
cmp
dec
pop
stc
fisttpl
inc
add
bound
add
addr16
inc
cwtl
jns
mov
lds
push
shll
in
mov
lea
push
es
cmp
xor
in
push
and
gs
aaa
lret
addr16
sub
mov
aas
sbb
lahf
mov
pop
sbb
pop
adc
or
call
in
addl
add
arpl
jge
mov
daa
or
and
cmpsl
add
bound
add
and
in
out
dec
lods
or
xchg
lock
add
xchg
push
int
mov
sub
sti
jg
pop
xchg
fwait
icebp
or
mov
or
and
dec
xor
fstpl
sub
adc
sbb
popf
loopne
cltd
jo
mov
dec
jle
add
add
add
ss
xor
and
outsb
mov
bound
add
jecxz
sub
test
scas
jbe
adc
push
xchg
xchg
push
out
push
movsb
jae
lret
loope
jge
incb
mov
add
xor
cmp
jecxz
das
and
mov
into
and
lahf
pop
sbb
sbb
sbb
lret
push
or
aaa
mov
jb
out
cmpsl
out
and
cmpsl
mov
add
aaa
out
mul
aaa
cmc
xchg
lcall
mov
add
bound
add
sub
rclb
fsubl
lods
ja
in
push
outsl
mov
xor
movsb
xor
lahf
mov
dec
dec
sbb
and
inc
or
jge
dec
out
inc
cmp
mov
mov
ret
xorb
inc
outsb
adc
orb
add
sbb
outsb
inc
sbb
bound
add
add
add
aad
out
fucomip
ss
cmp
inc
sub
bound
add
lcall
ret
orl
rcrl
in
roll
loopne
pop
sub
mov
rcrl
orb
cmp
fisubs
add
insl
test
lods
mov
jmp
aad
xchg
pop
push
addr16
mov
test
mov
fsts
cmp
test
cmp
lock
add
add
add
outsb
jbe
lret
outsb
negb
xchg
xchg
jne
add
bound
add
pushf
test
add
pushl
jo
insb
inc
lret
xchg
ja
aas
mov
add
mov
mov
pop
and
out
jbe
mov
dec
les
and
mov
jb
fistl
jnp
xchg
cmp
out
cmp
loopne
les
movsb
xor
sbb
repnz
add
add
add
cmp
paddsb
nop
shll
add
bound
add
fmull
inc
adc
pop
mov
imul
lods
incl
xchg
sbbb
into
fwait
insl
or
rcr
pop
lcall
dec
jno
sub
jl
jg
imul
mov
dec
mov
int3
aas
add
std
popa
ret
pop
pop
insl
fsubp
rorb
add
add
jle
call
cli
lcall
add
bound
add
rcl
lcall
fimuls
dec
pusha
ret
mov
xchg
cmp
divb
not
dec
clc
dec
cltd
cmp
outsb
in
icebp
fnstenv
divl
shrl
js
mov
test
aad
inc
or
ror
xlat
in
sub
mov
add
add
add
test
and
pop
dec
dec
arpl
sub
loopne
add
add
ret
ret
hlt
mov
mov
idivl
inc
ljmp
mov
cs
movl
fnstcw
rorb
dec
xlat
lea
jne
pop
loopne
lahf
in
or
mov
scas
or
test
jbe
pop
mov
mov
sahf
and
inc
xchg
add
add
add
outsl
mov
jmp
push
fcmovu
in
lcall
bound
add
in
das
jl
fwait
cld
sub
stos
add
repz
mov
scas
mov
out
loop
push
xchg
sub
push
jbe
and
loop
mov
cli
out
mov
mulb
inc
pop
ss
int
decl
jp
dec
cmp
enter
test
push
pop
push
bound
inc
rol
shll
dec
dec
out
add
add
add
stc
sbb
inc
jecxz
mov
cmpsl
outsb
daa
push
pop
loope
add
add
imulb
daa
jmp
in
inc
or
lds
dec
push
pop
xor
mov
int
jmp
cs
lds
push
mov
les
lret
ja
mov
dec
inc
push
dec
mov
jge
push
dec
jp
test
sbb
pop
loop
sbb
pushf
cmpsl
jne
lds
cmp
add
add
add
mov
icebp
and
pop
insb
shl
add
add
xor
lock
sub
xor
std
daa
fisubrl
cmp
adc
xchg
arpl
and
lret
xchg
mov
or
outsb
sub
icebp
push
mov
aad
and
outsb
dec
outsb
jno
cmp
test
mov
jno
outsb
push
arpl
cmp
add
add
add
xlat
repz
das
cli
fists
dec
es
adc
add
add
xor
inc
mov
push
sar
outsb
aas
add
ret
sti
pop
jge
push
lds
inc
pop
mov
mov
loopne
xchg
push
jnp
mov
mov
sbb
aad
inc
andb
xchg
mov
adc
xor
and
and
mov
mov
test
in
xlat
push
inc
rorb
add
add
add
mov
push
adc
cwtl
out
adcb
test
add
bound
add
push
inc
xchg
and
inc
lods
sbb
xor
std
test
out
adc
or
cmpsb
dec
mov
cmp
mov
shll
xor
arpl
dec
sub
std
pop
sbb
movsb
cli
inc
adc
xchg
or
dec
scas
test
xchg
fwait
movsb
je
add
add
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
inc
cmp
pop
ss
pop
cmp
inc
inc
dec
pop
pop
push
dec
inc
add
xor
cmp
xor
aaa
add
xor
push
inc
dec
push
pop
inc
push
cmp
push
push
inc
xor
xor
add
cmp
dec
cmp
pop
dec
xor
add
xor
pop
inc
dec
pop
pop
xor
pop
inc
xor
inc
dec
cmp
inc
cmp
ss
dec
add
xor
dec
xor
push
add
aaa
pop
push
dec
dec
cmp
inc
xor
pop
pop
dec
push
xor
add
dec
xor
ss
xor
xor
push
push
add
push
pop
push
cmp
xor
pop
dec
dec
push
cmp
dec
xor
xor
xor
pop
add
pop
inc
xor
push
xor
inc
add
xor
xor
pop
dec
dec
xor
add
pop
aaa
push
dec
push
pop
inc
add
dec
pop
inc
dec
xor
xor
push
pop
push
inc
inc
pop
cmp
push
pop
push
inc
add
pop
pop
dec
inc
inc
add
inc
pop
xor
dec
cmp
xor
ss
pop
dec
pop
add
push
xor
pop
xor
pop
xor
xor
push
push
inc
add
push
xor
xor
pop
ss
cmp
pop
xor
xor
push
push
xor
push
pop
inc
xor
push
inc
aaa
inc
add
ss
dec
pop
pop
inc
push
pop
push
dec
inc
add
xor
dec
add
cmp
xor
inc
add
inc
add
add
inc
add
add
add
add
cmp
dec
add
pop
add
push
add
xor
cmp
pop
add
add
inc
add
add
xor
inc
add
push
add
add
add
dec
add
add
add
pop
add
add
add
add
dec
add
add
pop
add
add
add
add
xor
add
add
push
add
cmp
pop
add
add
add
add
inc
add
add
inc
add
push
add
cmp
push
add
pop
add
add
add
add
dec
add
pop
add
add
dec
add
add
add
xor
dec
add
add
add
add
add
dec
add
add
inc
add
push
add
add
add
dec
add
add
push
add
xor
pop
add
add
dec
add
xor
pop
add
add
add
dec
add
xor
pop
add
add
xor
dec
add
add
add
xor
pop
add
add
push
add
add
inc
add
push
add
add
inc
add
pop
add
add
push
add
add
add
add
add
inc
add
addb
addb
addb
addb
addb
addb
addb
addb
addb
add
sbb
add
inc
cmp
add
add
add
add
add
add
add
cmp
add
add
inc
cmp
add
add
dec
cmp
add
add
jb
push
imul
aas
inc
outsb
jne
push
imul
popa
je
outsl
outsb
jae
je
.byte
