add
add
call
add
add
add
add
add
add
add
add
mov
mov
or
dec
add
add
add
movl
cmp
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
pushl
mov
mov
cld
ljmp
mov
add
incl
xlat
lea
inc
ljmp
incl
aaa
add
test
pandn
aas
add
mov
incl
or
mov
xchg
roll
mov
cmp
dec
rorl
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
add
test
ljmp
mov
fcom
add
mov
add
add
addr16
add
push
inc
push
fisttps
test
add
jecxz
roll
inc
jle
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
enter
incl
in
xor
mov
cld
jle
mov
add
mov
decl
add
inc
das
mov
cld
push
mov
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
lds
add
push
cs
add
mov
test
add
incl
jmp
faddl
jge
adc
mov
lahf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
inc
ret
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
jp
add
mov
inc
lret
inc
iret
jb
mov
enter
cmp
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
fadds
xor
mov
clc
enter
mov
test
clc
incl
aas
mov
test
clc
pushf
inc
pushl
cld
pushf
inc
mov
insl
push
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
cmp
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
lahf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
lahf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
lahf
shll
lret
or
add
in
push
mov
popa
add
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
lahf
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
cmp
rolb
clc
popa
jb
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
cmp
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
popa
xor
mov
popa
xor
orl
fsubs
int3
lea
push
cmp
pop
lods
incl
mov
rcrb
test
inc
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
cmp
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
lahf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
lahf
shll
lret
or
add
in
push
mov
popa
add
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
pop
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
lahf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
sar
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
adc
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
rolb
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jle
inc
xchg
mov
mov
or
inc
inc
mov
cld
loop
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
loope
push
push
incl
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
ret
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
jmp
inc
jmp
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
xlat
ss
aas
loope
ret
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shr
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
cmp
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
andl
lret
mov
add
lret
pushf
and
pop
rcr
test
clc
add
cmp
pushf
add
add
inc
push
rcrl
inc
fsts
mov
nop
rolb
mov
add
pop
add
or
mov
add
call
add
add
push
inc
orb
leave
dec
dec
add
call
clc
inc
inc
mov
enter
mov
xor
xor
or
sbbb
int3
test
clc
inc
mov
fmuls
sub
add
leave
cmp
pushf
mov
jl
add
add
or
test
clc
or
cmp
sbb
mov
xchg
pop
add
mov
add
mov
mov
mov
xor
add
inc
jge
mov
xor
add
push
jne
mov
decl
add
cmp
push
inc
inc
add
add
mov
mov
mov
sbb
inc
add
push
clc
add
mov
jne
mov
add
add
lea
lea
xor
ret
mov
add
push
inc
inc
add
test
jne
mov
mov
push
pop
inc
decl
rclb
xor
addl
mov
push
jbe
mov
ret
dec
inc
jmp
mov
cld
push
mov
add
push
push
inc
jmp
add
add
inc
ret
mov
mov
sub
mov
mov
rolb
inc
add
inc
add
clc
inc
ljmp
xor
add
mov
mov
inc
fdivs
loop
add
add
ljmp
add
add
add
mov
dec
incl
test
sbb
add
mov
add
and
dec
mov
dec
call
inc
add
cmp
inc
add
jb
mov
cmp
lret
mov
test
andnps
decl
inc
add
mov
inc
hlt
mov
xchg
add
xor
add
mov
mov
mov
push
push
inc
mov
call
inc
adc
decl
aam
push
add
xor
lcall
cmp
test
clc
inc
and
mov
cmp
je
mov
add
sbb
dec
dec
mov
mov
add
add
jne
mov
cmp
jb
mov
mov
mov
inc
je
push
add
push
mov
in
shlb
test
call
inc
inc
rorb
jmp
mov
mov
loopne
sbb
inc
inc
push
lea
lea
or
js
mov
incl
call
inc
add
decl
test
mov
add
add
incl
data16
push
rorb
incl
inc
add
decl
mov
add
add
xor
cmp
jbe
lea
mov
jae
mov
decl
add
call
add
mov
jb
incl
mov
sbb
push
je
incl
data16
test
lea
cmpsl
movw
mov
lea
js
incl
mov
pop
jmp
add
out
pusha
out
call
jmp
inc
add
in
mov
addl
mov
data16
addl
push
in
dec
inc
add
mov
in
incl
sub
incl
jle
leave
add
test
push
addl
outsl
in
add
test
ljmp
data16
inc
inc
xlat
cmp
jle
leave
icebp
inc
add
mov
fdivp
mov
in
test
inc
inc
mov
cld
inc
out
rclb
inc
mov
mov
sub
jne
movl
int3
inc
add
lea
xor
add
inc
adc
test
add
movb
jl
add
mov
mov
sbb
add
loopne
adc
or
inc
loop
xor
or
jle
inc
add
adc
repnz
xorb
adc
dec
repnz
mov
adc
call
adc
inc
push
flds
mov
fcmovnb
xor
sbb
addl
inc
mov
sbb
xorb
add
decl
add
incl
mov
lret
enter
inc
jne
mov
mov
mov
mov
ud2
xchg
xor
dec
mov
sbb
cmp
push
pop
adc
andb
mov
push
mov
adc
loope
inc
inc
fildll
mov
inc
subb
ljmp
lea
xor
mov
stos
mov
push
test
mov
push
ret
mov
sbb
rcl
inc
inc
int3
mov
cwtl
movl
ljmp
jmp
inc
or
rol
dec
adc
incl
add
push
push
add
test
or
jmp
pushl
add
push
loope
jae
jmp
andl
mov
sbb
addb
mov
incl
push
pop
clc
mov
orb
mov
lea
inc
ljmp
pop
inc
mov
mov
rclb
incw
lea
stos
add
mov
adc
pushl
decl
dec
push
loop
adc
call
mov
sbb
loopne
cmp
dec
mov
sub
inc
mov
xor
test
decl
add
push
add
mov
jbe
test
inc
push
addl
pop
add
ret
decl
mov
mov
cwtl
mov
test
rorb
lea
mov
push
decl
pushl
call
lea
mov
mov
mov
inc
dec
mov
xor
decl
call
lea
incw
cmp
decl
jmp
inc
jmp
dec
lea
jge
mov
lock
mov
mov
roll
push
str
xor
add
add
inc
rdpmc
mov
dec
inc
add
mov
data16
jne
push
adc
jne
ljmp
call
or
mov
mov
addl
mov
add
push
xor
dec
mov
mov
jl
push
mov
rcl
mov
mov
push
ret
push
pop
leavew
inc
sbb
in
xchg
push
shl
addl
mov
cwtl
or
setl
inc
add
test
xor
add
xor
mov
test
movb
adc
add
roll
mov
incl
ljmp
adc
jne
call
mov
push
sbb
inc
test
dec
add
dec
inc
mov
add
add
adc
and
jp
sysret
pop
add
cmp
sub
dec
mov
ret
clc
mov
addl
jnp
pop
add
xorl
adc
jge
mov
cld
test
add
add
negb
add
pop
add
add
inc
test
mov
fisttpl
mov
push
add
test
add
add
mov
add
add
mov
call
or
dec
or
inc
dec
addl
scas
dec
add
lock
mov
call
rclb
xor
adc
mov
mov
nop
rolb
mov
push
or
xor
sti
cmp
dec
test
or
ret
or
pop
add
xor
inc
mov
push
inc
mov
or
sti
dec
sub
cld
mov
mov
add
jne
cmp
jns
pop
jge
cmp
cld
inc
iret
or
jae
xor
jmp
mov
lea
mov
in
testb
jge
add
mov
cmp
hlt
adc
jl
clc
js
pushl
mov
clc
add
mov
call
inc
popa
jge
cmp
xor
rcrb
push
or
push
sub
in
add
fistl
sbb
test
inc
mov
cld
je
cmp
rorb
adc
mov
sbb
push
inc
mov
add
or
cld
mov
jge
xor
mov
hlt
iret
pop
inc
jbe
cmp
adc
push
add
dec
divl
sbb
mov
test
je
mov
or
cmp
jbe
mov
or
jg
add
dec
add
je
mov
mov
mov
adc
jmp
xor
pop
rcrb
ret
cmp
push
cmp
cld
xor
cmp
pushf
or
add
pop
mov
push
add
push
adc
push
xor
mov
in
dec
add
nop
iret
add
push
dec
lahf
mov
add
add
cmp
je
add
mov
pop
mov
lahf
fbstp
add
pop
pushf
mov
xor
ud0
add
add
or
dec
inc
mov
xor
mov
mov
fdivs
push
or
inc
imul
loopne
sbb
jg
inc
jne
mov
adc
fiadds
jne
mov
clc
test
xor
xor
mov
cld
jb
add
adc
rcr
add
add
pmaxub
dec
decl
xor
add
cmp
hlt
mov
faddl
xor
add
cmp
clts
jp
decl
xor
add
jne
mov
xor
lea
jb
add
add
add
add
adc
pop
mov
hlt
add
jmp
incl
xor
in
push
inc
mov
hlt
add
orl
mov
fcompl
enter
add
mov
in
and
mov
mov
cld
pushf
dec
lahf
xor
add
mov
cld
add
xor
pop
mov
cld
sbb
dec
mov
jne
mov
fadds
mov
push
fdivs
decl
lcall
inc
inc
xor
add
cmp
mov
fadds
mov
test
lahf
push
xor
out
mov
or
in
sbb
add
jne
mov
mov
cld
test
lahf
fbstp
ret
call
xor
add
mov
cld
dec
mov
cltd
inc
inc
mov
cld
lea
xor
add
inc
je
mov
cwtl
movb
add
sub
lock
mov
aam
ljmp
mov
in
inc
mov
cld
jmp
rorl
mov
fadds
add
xor
add
pop
hlt
pop
push
ret
mov
mov
cmp
fadd
test
jne
decl
mov
xor
add
clc
jne
add
xor
lea
add
jb
add
inc
jne
add
or
inc
scas
aas
mov
jne
mov
or
icebp
lahf
shll
mov
lsl
cmp
cltd
mov
add
mov
call
jge
sub
xor
jge
xor
add
mov
xor
add
jne
xor
jmp
mov
cld
mov
clc
leave
xchg
or
push
mov
cld
in
icebp
jnp
add
jae
sub
inc
call
pop
call
xor
add
ret
xor
inc
loopne
jne
mov
push
jge
xor
in
test
add
mov
xor
xor
add
cmp
mov
xor
add
cmp
mov
add
add
or
ja
mov
cld
pop
stc
mov
in
jge
mov
or
icebp
add
jae
add
push
jne
mov
repnz
cmp
xor
clc
pop
repnz
out
pop
testl
pop
add
pop
jge
xor
add
cmp
fdiv
test
clc
mov
rcll
stc
or
mov
in
lahf
jne
mov
or
lahf
xor
add
mov
mov
lock
push
inc
jne
mov
in
mov
clc
repnz
decb
mov
cmpl
clc
call
hlt
add
clc
inc
jne
mov
clc
test
xor
mov
in
xchg
roll
sbb
cld
clc
pop
add
add
mov
mov
or
add
test
add
mov
sbb
rclb
add
add
mov
and
cmp
pushf
or
rcrl
xor
mov
add
inc
inc
mov
add
cmp
inc
push
mov
mov
lock
xor
mov
cmp
cmp
clc
ret
dec
inc
xor
inc
add
add
dec
mov
cld
mov
cmp
pushf
dec
mov
xor
mov
cmp
push
mov
add
incl
mov
in
inc
or
rclb
add
push
inc
call
leave
push
add
mov
or
jo
cmp
add
add
mov
or
mov
cmp
roll
mov
dec
dec
sbb
cld
mov
test
cmovne
test
add
into
xor
add
mov
faddl
mov
nop
into
add
mov
mov
invd
mov
mov
mov
push
push
cmp
fmuls
call
rcl
rcl
call
inc
jne
jmp
sbb
dec
or
mov
sbb
dec
and
push
add
cmp
je
push
and
add
or
inc
adc
inc
and
push
push
sub
push
mov
sbb
dec
mov
add
jge
add
mov
mov
cmovne
xor
xor
or
roll
dec
add
dec
jbe
mov
cld
mov
bswap
push
lret
xor
mov
and
or
daa
xchg
push
push
adcl
push
xor
add
decl
sbb
rolb
and
mov
enter
mov
push
add
add
addl
mov
rorl
mov
inc
dec
mov
inc
mov
call
or
mov
inc
push
mov
into
mov
mov
lea
mov
push
xor
mov
sub
mov
loopne
lret
push
dec
mov
lods
xor
add
mov
xlat
dec
sarb
jne
mov
fsub
add
xor
in
mov
hlt
mov
mov
in
jb
push
inc
push
jle
leave
cmove
lods
add
mov
or
xor
mov
orl
into
in
lret
xchg
gs
add
mov
fsubs
inc
lea
push
lea
fadds
mov
inc
add
mov
fmul
rorb
add
inc
inc
je
mov
sbb
add
add
jmpw
or
lret
jne
mov
in
add
lret
mov
sbb
inc
call
and
and
inc
test
add
rorb
data16
call
ret
test
inc
orb
sub
stc
test
mov
lea
call
pop
add
xchg
add
add
push
cmp
fdivs
add
lea
test
je
mov
decl
push
add
inc
sbb
push
or
mov
cmp
mov
inc
pop
add
add
push
decl
or
adcl
push
jno
add
push
clc
sar
xchg
add
jne
mov
mov
sub
rolb
loopne
dec
mov
mov
call
add
add
add
add
jmp
xor
pop
lcall
ret
mov
mov
add
push
and
adc
add
dec
or
sbb
cmp
pop
push
add
mov
and
xchg
add
add
cli
loope
shlb
dec
ret
sub
pushf
inc
mov
or
test
clc
incl
cmp
pushf
jb
add
add
mov
hlt
inc
data16
mov
jmp
mov
or
inc
add
mov
mov
mov
add
sbb
jne
sub
lahf
mov
and
add
lock
test
add
push
inc
in
mov
ret
push
test
add
inc
shlb
pop
add
loopne
inc
pop
xor
mov
fdivrp
pop
mov
hlt
addl
cmp
lock
add
add
push
or
add
data16
lock
jge
mov
test
data16
add
andl
mov
jne
mov
inc
or
lock
mov
mov
in
or
mov
call
sbb
push
mov
lock
pop
jne
mov
retw
minpd
str
jne
xor
mov
cld
add
add
sar
mov
mov
lock
es
mov
clc
jne
jge
mov
or
add
push
xor
add
add
mov
or
mov
add
mov
mov
or
fisttps
clc
ja
mov
or
lahf
sti
add
add
fbld
pop
mov
or
mov
hlt
add
mov
or
mov
or
mov
mov
adc
stc
mov
mov
or
mov
or
add
cmp
mov
xor
mov
add
jge
mov
pop
clc
cmp
data16
mov
xor
pop
jge
mov
lock
jge
ltr
add
hsubpd
data16
jge
mov
dec
xor
minpd
data16
jmp
mov
sarw
mov
jb
add
pop
mov
clc
jne
data16
jnp
pop
inc
add
data16
data16
add
pop
icebp
sbb
jne
mov
call
mov
in
data16
repnz
xor
inc
mov
call
add
ret
jge
mov
mov
add
data16
mov
add
mov
add
data16
pop
test
pushf
add
into
fistps
push
mov
mov
mov
push
repnz
lock
jne
mov
cld
mov
xor
mov
mov
push
sub
mov
mov
add
dec
cmp
jne
mov
mov
stc
jge
data16
xor
data16
lock
inc
data16
pop
add
rorb
inc
mov
in
sarl
pop
or
push
mov
mov
or
cmp
je
mov
mov
add
push
mov
mov
pushf
sub
add
xor
dec
str
cmp
int
mov
xor
mov
xor
lret
push
add
push
add
cmp
sti
mov
mov
cld
add
data16
roll
mov
lret
in
add
pop
lret
ret
enter
pop
movl
pushf
call
add
in
add
mov
clc
xor
mov
cmp
je
push
pop
sysenter
leave
dec
popa
jle
popa
mov
int
mov
lret
add
jne
lea
add
ret
inc
xlat
add
add
or
ret
add
jne
lea
add
lret
mov
add
mov
cmp
repz
xorb
inc
inc
add
cmp
pushf
push
je
xor
mov
andl
add
in
push
mov
add
mov
clc
mov
or
ret
or
or
lret
add
mov
adc
iret
mov
add
dec
push
mov
add
rcrb
add
ret
jne
mov
xor
mov
test
clc
fs
mov
pop
sub
add
xor
xor
add
cmp
jne
cmp
clc
pushf
pop
mov
push
xor
mov
psubsb
icebp
lea
testb
sarl
xor
mov
adcl
add
inc
sub
mov
addl
orl
cmp
mov
decl
dec
mov
mov
mov
xor
mov
push
leave
mov
push
test
lahf
in
xor
mov
clc
test
cmp
pushf
dec
mov
in
mov
push
icebp
add
roll
add
roll
cmp
pushf
dec
movl
clc
or
xor
pop
dec
dec
lea
add
dec
inc
sub
orl
cld
adc
scas
or
pop
xadd
jb
add
inc
sub
mov
lock
icebp
add
clc
pop
mov
data16
add
xor
add
lea
add
add
inc
adc
dec
mov
mov
mov
lea
add
inc
in
incl
leave
add
push
roll
sbbl
sarb
jbe
mov
or
push
mov
mov
jne
jmp
mov
push
pop
mov
add
xor
sub
mov
inc
inc
mov
dec
lahf
xorl
orl
leave
jbe
mov
in
inc
in
mov
or
dec
inc
data16
pushf
mov
mov
cld
test
push
inc
mov
lahf
pop
xor
mov
inc
or
sar
dec
lea
in
decl
mov
cld
inc
inc
inc
mov
jmp
mov
mov
push
lahf
xor
add
inc
cmp
pushf
std
xor
inc
fadds
inc
mov
inc
lahf
xorl
cmp
mov
clc
sub
inc
call
pop
inc
lahf
pushl
adc
std
dec
decl
inc
push
call
add
xor
add
add
inc
cld
add
mov
orl
test
clc
inc
inc
mov
mov
inc
or
shlb
jne
xor
pop
add
ret
je
push
mov
mov
mov
in
inc
orl
pop
test
xor
mov
add
add
mov
or
add
xor
inc
inc
add
xor
add
mov
sub
lret
mov
jae
lea
xor
jne
or
or
pushw
jne
cmpxchg8b
mov
add
data16
call
cmovge
xor
add
sub
or
add
inc
cmp
mov
subl
enterw
shlb
pop
or
mov
dec
inc
data16
push
jb
jmp
incl
mov
or
jo
test
jmp
incl
mov
pop
lock
push
dec
mov
dec
ror
rolb
dec
lock
pop
in
cmp
clc
xchg
cmp
jne
xor
jmp
mov
jne
call
mov
add
inc
jne
mov
mov
mov
add
stos
add
mov
les
xchg
iret
add
inc
jle
out
cld
add
xchg
add
push
pop
add
paddq
xchg
add
adc
test
incl
incl
rorb
decl
inc
inc
incl
data16
rclb
mov
lock
jle
mov
mov
jge
mov
adc
enter
dec
or
mov
lods
ja
mov
pop
lea
inc
clc
inc
outsb
lea
push
inc
mov
pop
mov
jae
cmp
adc
pop
inc
sbb
mov
or
cmp
mov
cld
xchg
add
add
lea
adc
or
faddl
push
add
push
inc
add
push
adc
mov
fdivr
cli
dec
add
add
add
xor
cmp
mov
lock
rcl
pop
add
pop
dec
cmp
mov
add
push
dec
in
mov
push
pop
mov
add
add
add
inc
mov
hlt
push
decl
push
add
pop
or
jns
ret
jmp
mov
in
jge
sysexit
cmp
cmp
sbb
pop
add
jae
mov
lcall
mov
mov
fdivs
xor
movl
add
push
ret
mov
jne
mov
faddl
xor
push
or
icebp
incl
rolb
inc
stc
mov
lock
add
dec
add
mov
call
sbb
mov
pop
jge
lea
add
or
leave
fadds
dec
add
xchg
add
mov
mov
or
dec
pop
mov
ljmp
add
inc
or
dec
add
test
push
ret
lea
pushl
mov
sub
add
clc
mov
add
dec
push
xor
xor
in
add
inc
jmp
xor
mov
adc
xor
jne
mov
mov
hlt
pop
add
in
push
in
dec
push
xor
pop
pushf
dec
mov
mov
in
dec
addb
add
mov
test
dec
push
mov
mov
clc
into
dec
lret
lock
test
push
jge
push
enter
dec
cld
jmp
pushf
inc
mov
sub
int
mov
mov
adc
enter
jmp
xor
mov
or
call
ds
or
rorb
push
inc
in
mov
or
lock
test
clc
rolb
cmp
add
mov
xor
xor
sub
jmp
mov
lock
mov
push
icebp
xor
mov
enter
add
cld
scas
add
dec
mov
xor
xor
add
add
test
mov
adc
je
xor
xor
add
add
rorl
enter
icebp
or
lock
enter
lret
or
mov
cld
bswap
pop
mov
in
hlt
pop
jne
xor
xor
jbe
mov
clc
pop
mov
mov
clc
mov
adcl
inc
in
cmp
add
inc
cld
cmp
hlt
inc
test
clc
hlt
inc
test
clc
pushf
push
push
inc
inc
fdivrs
xlat
pushf
mov
mov
xor
mov
xor
add
pavgb
test
dec
inc
mov
cld
xlat
enter
lret
add
leave
jne
mov
enter
lret
scas
out
jmp
mov
cld
add
xor
jmp
xor
add
rorl
dec
mov
cld
lea
mov
mov
xor
enter
stc
add
call
pop
xor
sub
enter
inc
in
xor
clc
cmp
cmp
pushf
call
mov
loopne
inc
test
clc
add
push
mov
push
inc
push
mov
mov
mov
xor
mov
sbb
ljmp
mov
mov
xor
xor
mov
hlt
bswap
roll
xor
mov
xor
call
enter
mov
lock
inc
mov
inc
inc
enter
inc
mov
mov
roll
add
push
into
in
movb
dec
or
xorb
add
add
in
push
inc
mov
adc
push
xchg
popa
iret
dec
lahf
mov
clc
add
cmp
jne
addl
or
or
push
dec
jnp
dec
xlat
mov
call
lsl
cld
sti
lahf
mov
mov
clc
iret
dec
lret
xor
lea
dec
inc
mov
mov
int
sub
lock
mov
in
cmp
xor
jne
mov
in
dec
mov
nop
add
pop
mov
mov
ret
mov
mov
mov
dec
add
jo
push
inc
jne
mov
push
pop
ret
push
inc
xor
add
jnp
jg
ljmp
inc
mov
push
cmp
dec
xor
cmp
jne
orl
jmp
mov
push
add
add
add
cmp
mov
sbb
mov
xor
mov
cmp
cmp
adc
test
cmp
pushf
sbb
add
add
dec
jnp
mov
rolb
iret
or
cmp
xor
or
xor
add
mov
inc
inc
mov
mov
mov
cmp
dec
decl
inc
mov
or
sbb
inc
inc
mov
or
dec
push
dec
inc
rclb
push
inc
decl
rolb
inc
inc
mov
sbb
inc
push
xor
lea
cmc
xor
add
mov
inc
inc
mov
ret
inc
add
adc
test
clc
inc
inc
mov
push
adc
test
mov
sbb
dec
ret
sub
add
xor
lea
lods
jb
add
sar
cmp
pushf
add
add
mov
test
clc
inc
inc
cmp
mov
or
bound
clc
lea
xor
lea
mov
or
dec
imul
incl
inc
add
pavgb
movl
clc
iret
inc
lock
lret
fmull
mov
test
mov
loopne
inc
loopne
inc
loopne
xbegin
adc
jb
mov
inc
inc
push
mov
incl
mov
loopne
rol
test
dec
push
decl
push
mov
add
cmp
add
call
clc
test
cmp
pushf
mov
or
iret
test
mov
in
pop
dec
add
add
dec
mov
in
dec
or
iret
add
testl
test
add
add
mov
or
add
cmp
add
mov
mov
lock
dec
test
dec
add
cmp
or
mov
dec
push
lea
lods
mov
clc
cli
or
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
clc
rorb
iret
rorl
inc
mov
iret
add
xor
mov
or
dec
shll
cmp
in
add
add
mov
in
mov
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
cli
or
cmp
je
mov
ret
or
lock
add
mov
add
cmp
mov
xor
mov
add
roll
cmp
lock
rorl
jb
add
ja
sbb
xchg
enter
inc
decl
loopne
jb
add
dec
adc
add
inc
rcll
mov
xor
jb
add
jne
decl
add
repnz
inc
mov
mov
shll
mov
movsb
add
push
adc
inc
pushl
mov
add
mov
test
inc
mov
lret
mov
sbb
inc
mov
xor
enter
inc
add
cld
test
lahf
jne
mov
fsubrs
decl
hlt
xor
sbb
call
pop
or
dec
adc
push
add
cmp
je
mov
or
pushf
ret
mov
lea
clc
or
push
inc
or
pop
call
test
jne
mov
movsb
xlat
inc
push
push
or
push
decl
dec
adc
roll
sbb
dec
je
push
call
test
inc
iret
add
clc
jmp
mov
test
or
add
inc
mov
mov
and
push
mov
rolb
iret
orl
push
clc
jmp
add
mov
jmp
addl
pop
inc
pop
sbb
inc
add
clc
and
mov
and
mov
and
mov
and
xor
pop
mov
xor
mov
mov
mov
push
add
mov
cmp
mov
dec
add
push
adc
push
cmp
and
mov
and
xor
jb
add
inc
and
lea
and
push
jmp
cli
and
clc
and
call
jmp
dec
ds
cmp
bswap
mov
add
and
mov
mov
or
inc
jmp
addl
push
inc
sbb
dec
test
movb
aas
add
aas
add
jne
incl
clc
add
inc
jne
call
fadds
mov
add
add
add
incl
push
and
roll
inc
adcl
inc
adc
inc
lcall
je
sbb
lea
je
sub
je
and
mov
clc
and
and
add
and
add
cmp
or
pop
push
mov
sub
xor
mov
mov
mov
orl
mov
movl
mov
and
movl
mov
xorl
push
push
andl
push
mov
xor
addl
mov
orl
add
mov
movzwl
and
movl
dec
movl
movl
add
jmp
xlat
mov
and
mov
cmp
jle
jle
fidivrl
jle
cmp
fld
ja
or
push
or
cmp
enter
pop
mov
or
rol
or
dec
add
push
in
outsl
add
pushf
jo
dec
mov
cmp
xorb
jbe
fisttpl
jecxz
and
xchg
dec
incl
mov
sub
jae
lret
lcall
mov
loop
cmp
fs
sub
or
sbb
and
add
fisttpll
popl
shll
movb
pop
rcll
jns
mov
daa
add
fstpt
dec
loopne
xchg
and
rclb
nop
xchg
xorl
sbb
das
mov
sbb
cmpsb
cmpsl
adc
js
ja
mov
lcall
jge
daa
sbb
pop
push
and
xor
xchg
dec
pop
fnstenv
insb
loope
insb
sbb
or
sahf
arpl
sbb
xorb
rorl
inc
cmp
imul
sti
scas
sbb
shrb
lock
sarb
aaa
push
cmc
pusha
aaa
ficompl
xchg
xchg
pop
mov
rcll
push
pop
pop
xchg
pop
push
sbb
cmpsb
cmpl
cld
repnz
lret
clc
repnz
inc
test
sbb
push
jle
add
movb
mov
je
add
fstl
cltd
loope
jns
and
scas
pop
addr16
mov
jle
jg
jle
xchg
lods
add
scas
aam
lods
jmp
push
adc
dec
xchg
push
scas
or
mov
inc
inc
inc
test
mov
movsb
jmp
jge
ret
inc
orb
adc
aad
mov
ss
cmp
in
hlt
icebp
and
push
loopne
jno
imul
sbb
xor
es
push
fdivr
xchg
mov
jp
nop
mov
pop
push
shlb
fnsave
in
cmc
repnz
xor
fidivl
dec
xor
rorl
sahf
fxch
cmc
jo
mov
aaa
fildl
lahf
xchg
arpl
jge
ds
pop
fadds
pop
rorl
dec
test
out
fs
loope
js
popa
loopne
mov
xchg
sub
imul
push
shrl
xchg
pop
jo
les
xchg
cltd
test
cmp
inc
xor
jae
push
jl
pusha
mov
cmp
mov
pop
lds
jno
push
cmp
fs
vaddss
push
jmp
push
into
mov
inc
stos
push
and
std
cli
std
es
add
mov
cmpsb
test
jns
lahf
jae
xor
adc
fdivs
ret
ljmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
subl
movl
movb
sub
mov
xor
andl
add
mov
mov
xor
adcl
add
andl
push
dec
mov
xor
andl
add
xorl
push
andl
mov
jmp
push
mov
xchg
push
mov
cmp
jle
fidivrl
jle
cli
lods
outsb
idivl
popf
mov
clc
movsl
add
adc
in
sub
imull
ret
add
das
out
mov
int
inc
iret
mov
jns
add
or
outsl
outsb
cmp
test
mov
cmp
filds
loop
subb
test
sub
add
aas
cltd
in
push
lods
adc
xor
xor
xor
scas
imul
and
cld
inc
lds
shlb
and
jns
loope
mov
xchg
sti
rcll
fprem
daa
lret
jecxz
popaw
mov
rcll
sbb
ret
fwait
loope
ds
adc
ret
mov
dec
lret
lods
sub
mov
in
push
mov
lcall
in
lods
add
pop
add
jbe
clc
in
mov
xor
pop
xchg
cli
je
and
add
cmpsb
push
test
jp
mov
lods
and
push
orl
testb
std
fwait
cmc
and
or
pop
test
nop
cmc
push
inc
cmc
fwait
xchg
or
xor
icebp
imul
lods
jno
imul
cs
repnz
add
negl
add
xorl
push
lea
push
movl
pushl
subl
pushl
subl
call
incl
test
movl
je
subl
lea
negl
push
add
mov
andl
xor
add
andl
push
mov
add
push
andl
mov
subl
mov
pushl
addl
call
movl
mov
movl
cmpl
notl
lea
mov
je
lea
jmp
ja
je
je
test
push
outsl
jne
inc
dec
mov
jb
jle
jg
jle
repnz
loopne
repnz
sbb
xchg
inc
xor
mov
fcmovne
clc
mov
dec
and
push
cmc
cmc
cs
add
rcrl
scas
es
inc
xchg
ffreep
test
sbb
sub
sbb
jo
cmp
out
add
cmp
and
iret
mov
pop
imul
lret
fs
jle
xor
iret
repnz
jb
mov
cmc
jno
mov
sub
in
movsl
test
xchg
dec
lock
aam
sti
aam
push
dec
insl
xchg
mov
jp
stc
imul
jbe
mov
shl
mov
and
popf
mov
pop
shrl
scas
mov
inc
in
mov
sub
mov
sub
fidivl
add
out
scas
and
xor
icebp
push
sbb
in
punpckhdq
dec
jge
loope
lcall
cmp
xor
mov
lock
push
aad
sbb
adc
gs
sbb
mov
fsubrs
pop
cld
mov
into
cmpsl
out
inc
xchg
sti
or
lds
lret
jns
lods
inc
inc
mov
adc
and
add
add
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
inc
mov
adcl
xor
add
andl
jmp
adc
imull
mov
and
out
jae
jle
jg
jle
or
or
std
data16
mov
cld
cmc
adc
inc
andb
bnd
xchg
dec
push
pop
inc
orb
das
jmp
dec
idivb
shll
inc
xchg
jle
sbb
imul
jge
clc
xchg
jo
push
fdivl
adc
xchg
mov
cmp
jbe
or
in
sarb
jae
mov
rcrl
dec
mov
into
push
shll
out
mov
cmp
mov
xchg
cmc
xchg
out
stc
cltd
or
lahf
movsl
loop
gs
sub
dec
es
stc
mov
xor
inc
imul
cltd
inc
xlat
add
mov
shlb
sub
mov
les
push
aaa
shlb
dec
imul
and
mov
cmc
mov
mov
sbb
fldenv
jae
sahf
repnz
mov
dec
sub
inc
sbb
lods
dec
push
mov
out
in
rol
aam
add
addl
leave
in
jmp
xchg
addb
int
dec
cld
sbbl
call
jg
push
mov
clc
out
sub
push
in
and
mov
push
out
aas
insb
mov
pop
and
adc
add
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
add
jmp
sbb
clc
and
fldcw
in
test
fidivrl
jle
fwait
mov
fwait
pop
dec
enter
adc
std
mov
push
lods
xchg
mov
cmpsb
mov
cmpsb
out
or
mov
jne
inc
int
loop
and
adc
idivb
out
and
nop
inc
push
and
jne
jl
push
adc
cmp
int
mov
pop
ja
das
mov
pop
pop
inc
and
fdivr
std
and
arpl
sbb
insl
push
cs
ret
fisubrs
sbbb
insb
xchg
xlat
or
bound
adc
dec
add
je
or
decl
mov
or
pushf
inc
add
push
inc
cmc
sbb
cltd
pop
bound
repnz
push
push
push
sbb
xchg
cli
xchg
inc
fisttpll
sahf
in
dec
movsl
daa
fildll
mov
or
cmpsl
add
flds
stos
sub
dec
call
jle
dec
or
insl
subb
fidivs
cmp
lcall
sete
adc
jmp
and
aas
push
jge
scas
dec
inc
push
in
sbb
dec
into
mov
enter
mov
enter
sub
ret
sub
xchg
scas
lods
pop
jge
push
pushl
lea
push
pushl
pushl
jmp
loop
cli
cs
cli
cli
ret
cmpsb
push
cli
add
fidivrl
jle
mov
sub
and
shll
iret
incl
add
mov
imul
lea
dec
dec
add
leave
lret
mov
pop
fst
push
mov
and
clc
repnz
jge
inc
dec
fldl
std
xchg
xchg
je
cmc
adc
push
pushf
dec
es
add
pop
fnsave
cmp
fbstp
sahf
mov
xor
lahf
mov
jmp
mov
and
mov
or
ljmp
mov
add
sub
add
pop
dec
mov
add
sbb
repz
movsb
data16
aaa
mov
shll
jcxz
lods
cmp
in
ror
mov
sub
or
call
scas
dec
add
dec
mov
cmpsb
inc
aam
sbb
stc
std
xor
cmp
andps
and
or
or
int
clc
mov
dec
cli
popf
add
jnp
sahf
loopne
out
push
xbegin
fwait
bound
push
pop
add
mov
insl
or
pop
push
inc
xchg
inc
xor
pop
cmc
push
push
test
loop
pushl
bnd
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
jmp
lahf
icebp
shll
icebp
addl
jno
bnd
jle
jg
jle
pop
inc
push
or
push
lds
out
imul
je
push
push
pop
decb
inc
pop
xlat
push
sbb
jo
ret
icebp
xlat
mov
cmp
aad
cmp
sbb
add
dec
movsb
cmpsb
iret
mov
sarb
lret
int
push
xor
std
cltd
mov
add
stc
cltd
sti
fcomps
insb
lcall
rolb
ds
in
idivl
add
lcall
sub
lds
inc
sbb
pop
jae
ljmp
fcomps
ds
xchg
into
int3
add
jle
leave
test
or
into
andb
xor
inc
push
aad
cmc
pop
ss
xor
cmpb
xchg
adc
repnz
movsb
divb
xor
mov
add
mov
adc
pop
hlt
jmp
adc
int
fs
push
lcall
mov
or
pop
inc
daa
ret
out
mov
loopne
adc
adc
insl
inc
xorb
cmpsb
push
push
repz
ja
lret
shl
out
or
lret
mov
or
inc
pop
sbb
add
add
clc
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
jmp
mov
in
stc
andb
cmp
dec
or
pop
je
jle
jg
jle
loop
leave
dec
cmpl
stc
cmpsl
filds
sub
dec
xor
add
xchg
data16
mov
mov
xor
or
insl
sbb
and
jae
es
cld
mov
sarl
cmp
sub
adc
jecxz
cmpb
ret
stos
sbb
sbb
jns
mov
and
ds
out
push
xlat
push
push
test
into
and
aas
mov
out
adc
sbb
test
mov
cmp
mov
ljmp
pop
out
and
push
shrb
or
xchg
mov
sub
xchg
sbb
movsb
sbb
push
jbe
mov
shr
addps
dec
insl
cwtl
loopne
inc
xchg
aaa
jp
sbb
hlt
pop
xor
mov
or
jns
lods
mov
pop
add
enter
fsub
pop
dec
out
insl
in
in
iret
aam
mov
push
lods
loopne
pop
loope
idivb
push
cwtl
sti
mov
arpl
rcrl
or
aam
out
mov
push
repz
test
test
stos
pop
mov
mov
imul
aaa
push
mov
push
das
mov
sbb
mov
push
pop
cld
mov
dec
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
call
mov
jmp
mov
fidivl
or
stos
xor
cmp
jle
fidivrl
jle
ja
cmp
pusha
ret
sub
insl
imul
les
xchg
std
loopne
or
shll
push
xlat
adc
lcall
scas
lcall
jg
imul
call
add
xor
repnz
loopne
adc
and
int
lock
mov
or
repnz
mov
add
sub
xor
js
push
aad
xlat
movsl
xor
sbb
aam
pop
dec
insl
inc
adc
ficompl
fidivl
add
lea
ret
inc
jg
jne
test
dec
mov
inc
fwait
cmc
ret
mov
dec
cmp
push
je
mov
sbb
pop
imul
fidivs
fsubrl
pop
mov
mov
jns
adc
jae
jns
dec
pushf
pop
xchg
leave
dec
es
inc
adc
xchg
jle
fcomps
xchg
or
pop
mov
sub
scas
ljmp
xlat
ja
daa
mov
repz
dec
dec
mov
cmp
jae
inc
pop
or
js
mov
in
jae
scas
xlat
dec
xchg
sbb
popf
idivl
mov
mov
lret
push
imul
inc
cmp
xchg
mov
or
add
pop
pop
pop
leave
ret
push
mov
sub
push
sub
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
push
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
orl
movl
xor
add
and
movl
mov
mov
mov
xor
adc
mov
movzwl
sbb
add
addl
mov
jmp
mov
cmp
mov
lahf
or
and
jle
fisttps
arpl
andb
les
sbb
insl
or
lcall
mov
ret
cltd
jb
cmp
sbb
cmp
push
stos
xor
lahf
test
std
fldenv
arpl
lds
dec
js
fdivl
jl
cltd
push
arpl
xorb
out
mov
inc
dec
sahf
mov
ret
sbb
mov
test
sbb
push
or
rclb
enter
add
int
push
mov
cmp
clc
dec
adc
push
jge
and
inc
lock
sbb
push
xor
adc
test
dec
mov
ja
imul
je
mov
mov
ljmp
mov
sbbl
inc
or
xchg
dec
leave
cmp
shlb
nop
sar
add
push
adc
sbb
mov
fwait
adc
and
mov
sahf
and
xchg
jle
push
lret
dec
repz
and
imul
movsb
push
push
jle
int3
jge
push
or
add
add
add
sldt
add
decl
cmp
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
xor
add
jmp
xchg
lcall
pop
jb
sbb
mov
jle
and
jle
cli
inc
push
out
jo
fildll
enter
out
std
dec
clc
fisttps
xchg
xor
add
or
cmp
mov
xchg
daa
mov
movsl
xchg
stos
or
call
pop
pop
push
pop
shl
outsb
jp
mov
mov
shlb
cltd
loopne,pt
int
fsts
std
bound
or
lahf
xor
sub
push
mov
js
ljmp
fwait
mov
inc
imul
cmp
inc
rcll
sub
repnz
cmp
mov
ljmp
xchg
setns
cld
inc
jo
sbb
and
xor
icebp
cmpsl
aas
nop
mov
push
mov
add
mov
mov
jb
xchg
out
lcall
jbe
stos
push
jo
inc
push
scas
icebp
mov
mov
sbb
ror
lods
xchg
bound
dec
in
push
ret
mov
in
and
lods
lret
mov
loopne
or
mov
dec
mov
mov
mov
mov
jmp
or
mov
or
inc
mov
jle
and
jle
add
sub
lcall
adcb
out
data16
dec
mov
mull
xchg
sub
adc
aam
mov
jle
je
rolb
test
mov
push
and
lods
fs
cs
sbb
outsl
outsb
xor
lods
cmp
cli
jecxz
cmpb
sti
pop
in
mov
add
popf
add
lods
pop
xor
pop
rclb
mov
repz
jo
rorl
lds
mov
sbb
cmp
and
shl
stos
jno
dec
or
xor
in
inc
rorl
add
ljmp
fwait
testl
fcomps
cmp
adc
jmp
or
sub
jae
or
in
dec
add
mov
addr16
idivb
pop
fisubrl
sbb
ja
mov
lea
shlb
adc
mov
mov
xor
popf
dec
xchg
pop
call
rorb
pop
sbb
pusha
or
fadds
xor
adc
mov
movl
movl
adc
movl
or
movl
movl
cmpl
je
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
movl
andl
movl
orl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
sub
xor
mov
add
cmp
movl
je
movl
jmp
lock
jns
mov
jmp
shlb
movd
jg
jle
test
xchg
mov
push
dec
fistpll
jge
jae
xor
xchg
jo
xchg
xor
frstor
and
mov
fst
mov
mov
loope
adc
xor
inc
jp
lahf
out
mov
jae
dec
movsl
popf
ret
dec
fs
lds
sbb
aaa
push
test
fimuls
jg
test
repz
outsl
sahf
aad
int
stc
movsb
jp
or
and
xchg
and
jecxz
cli
xchg
add
ds
add
andl
ret
test
and
mov
xchg
inc
lods
hlt
jl
cmovp
mov
mov
fwait
and
jecxz
mov
push
imul
push
inc
in
adcb
out
mov
ljmp
xor
cmp
flds
adc
pop
movsl
mov
mov
push
cmp
iret
mov
pop
adc
add
sbb
mov
scas
lahf
jp
fmul
dec
andb
fists
sbb
and
shrl
jmp
mov
mov
xor
lock
inc
pop
leave
pop
or
test
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
adc
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
mov
dec
mov
jmp
mov
orl
sub
adc
mov
adcl
xor
sbbl
add
movl
cmp
movl
jb
mov
sbb
mov
mov
or
xor
xor
movl
add
dec
add
dec
imul
sbbl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
sbb
mov
incl
sub
movl
cmp
movl
ja
mov
movl
xor
addl
add
movl
jmp
mov
sbbl
mov
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
jmp
add
mov
inc
popf
imul
ljmp
jle
insl
dec
pushf
aad
hlt
dec
jge
mov
insb
ret
pushl
cmp
lret
and
push
jno
aas
adc
out
int
mov
jmp
mov
fdivrl
inc
shrl
sub
ret
pop
jp
mov
pop
inc
js
sahf
push
mov
and
clc
jb
push
iret
stos
outsl
sbb
mov
push
pop
sbb
pop
xchg
xchg
pusha
pop
lods
aas
and
pop
mov
push
pop
stos
xchg
fmulp
out
xor
out
cmp
add
mov
loop
in
in
mov
jnp
inc
shl
mov
ss
sub
cwtl
mov
lret
adc
aas
mov
enter
fwait
add
dec
sub
sbbl
mov
xor
test
frstor
sahf
cmp
fists
cld
push
mov
sahf
inc
cmpsb
add
and
arpl
sbb
mov
aas
test
mov
fstp
cmp
inc
into
xor
dec
add
dec
into
rorb
and
enter
mov
add
cmp
out
push
test
xor
add
add
imul
mov
jmp
jbe
xchg
call
adc
inc
jae
or
jle
mov
and
shll
inc
xor
scas
cmp
aaa
lock
xchg
insl
ja
jns
and
mov
fdivp
inc
orb
icebp
jge
cs
pop
cs
adc
add
lock
and
inc
imul
pop
and
fldl
cmp
mov
jmp
mov
or
and
in
sub
mov
rcrb
dec
mov
cmpsb
sub
out
pop
cmp
xor
jb
push
push
cmpsb
dec
push
pushf
push
insl
pop
inc
test
out
cmp
leave
jae
jo
loop
movsb
mov
pop
mov
mov
in
leave
pop
movsl
popf
sub
stc
and
loopne
in
ljmp
jmp
add
cs
fnsave
in
test
aaa
cmc
sub
cmp
jae
mov
dec
add
xchg
sub
or
fimuls
mov
mov
jg
subb
aam
pop
inc
sub
mov
loop
test
mov
sbb
mov
adc
jb
cmpsb
out
lods
call
fistpll
fimull
xchg
add
add
add
add
cld
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
jmp
lock
xchg
mov
and
aad
les
inc
add
and
jle
addr16
ret
loopne
rol
or
mov
icebp
ret
fsubs
mov
aaa
jp
scas
rclb
out
push
xor
in
jp
lcall
add
push
xchg
lock
jne
push
xchg
and
lds
pop
sub
test
or
pop
lret
cmp
jnp
loope
mov
mov
jne
cmp
lret
push
xor
nop
sbb
and
mov
orl
xor
cmpsb
mov
mov
mov
addl
js
xchg
aad
imul
xchg
idivl
adc
imul
aaa
lret
and
subl
pop
push
movsl
push
add
cltd
dec
push
jp
repnz
fst
fdivrs
rclb
add
decb
sarb
cmc
mov
push
sbb
and
adc
ret
mov
inc
in
mov
lcall
adc
sbb
mov
leave
fistpl
cmp
inc
inc
or
mov
mov
call
movl
mov
movl
movl
mov
jmp
daa
mov
in
dec
push
push
cmp
icebp
jne
jne
jle
and
jle
addr16
subb
and
adc
mov
jg
call
or
test
xchg
jp
test
loopne
xchg
lock
xor
or
xchg
dec
push
dec
cmpsl
imul
aam
push
mov
pop
aaa
mov
jmp
shll
out
jmp
xlat
cmp
fstpt
data16
sti
jo
sbb
shll
jnp
sub
jg
xlat
es
mov
mov
and
add
addr16
scas
or
dec
ds
cwtl
push
sbb
jl
rcrb
dec
pusha
mov
jbe
ss
jno
sub
sbb
mov
je
mov
and
and
sub
aad
xor
loope
sti
imul
ficoml
or
in
cmpsl
sarb
mov
xor
scas
shll
int
scas
fisubrs
cmp
movsl
stc
addb
jmp
or
sub
xchg
sub
ficoms
mov
mov
sti
lock
in
inc
push
shrb
push
sub
mov
rcrl
ficoml
outsb
insb
jae
or
lahf
lock
jmp
int
mov
stc
repnz
mov
jle
jg
jle
pop
cmp
push
add
push
cltd
adc
jmp
push
mov
clc
push
sbb
movsb
xchg
loope
outsb
jp
jle
loop
cmc
or
push
add
cwtl
test
inc
cmp
sbb
ds
mov
and
push
std
push
in
mov
jnp
fisubs
inc
xchg
push
addr16
jbe
jg
lcall
lock
sub
jmp
loope
outsb
aas
in
repnz
xchg
dec
out
shrb
pop
scas
pop
pop
inc
pop
lods
adc
dec
stc
and
mov
into
pop
rolb
loope
scas
inc
mov
push
cmp
aaa
fmulp
sbb
sub
mov
pop
out
sbb
stos
mov
dec
scas
testl
cmpsl
mov
scas
mov
pop
imul
lcall
add
mov
in
dec
or
cmp
fstps
insl
je
and
imull
in
mov
xchg
aas
dec
dec
jbe
inc
pusha
lahf
fnstenv
fcoms
inc
mov
mov
mov
int
xchg
fbstp
push
mov
mov
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
jmp
mov
scas
pop
popa
cmp
xor
jecxz
jle
and
jle
jnp
rol
xor
mov
nop
in
and
push
or
mov
dec
push
popa
loopne
dec
adc
lret
lahf
cltd
mov
divl
push
xchg
enter
sar
cmp
add
sbb
aaa
push
lea
sahf
sbb
cwtl
lods
push
rolb
inc
pushf
jae
shll
movsb
push
das
pop
ss
xchg
pushf
and
inc
jmp
imul
nop
xchg
sub
call
adc
int
push
lods
jle
xchg
jne
inc
or
repnz
adc
mov
cmp
mov
inc
leave
sahf
push
leave
mov
out
adc
daa
inc
lcall
ss
out
jle
pop
add
xchg
test
sub
cli
icebp
xchg
mov
int
sub
stos
dec
pop
test
mov
repz
jg
sub
cmpsb
mov
dec
bound
fcoml
and
jbe
and
jo
je
in
dec
jns
xchg
in
shrb
jo
sarl
xor
cmp
push
or
hlt
xor
add
mov
jmp
stos
out
pop
sbb
test
leave
ss
test
xchg
pop
jle
and
jle
rcll
inc
movsb
daa
cmpsl
mov
sub
lock
out
jno
fs
lods
sbb
push
data16
icebp
mov
out
jecxz
dec
add
lahf
stos
lret
test
scas
xor
mov
outsb
lods
enter
stos
aam
sbb
fcmovu
out
dec
fsubs
mov
test
or
jo
call
dec
or
mov
stos
jg
pop
rcr
js
push
roll
pop
les
ret
xchg
mov
movsl
pop
lods
adc
xchg
das
push
test
mov
aaa
jne
add
fsubrs
mov
jb
lcall
add
add
test
movsb
pop
or
inc
imul
loope
mov
lret
add
insl
vmread
scas
outsb
stos
mov
cli
sarb
xor
inc
pop
ds
adc
add
lock
jle
into
test
lahf
insl
adc
cmp
or
mov
stos
ss
in
and
popa
adc
push
xchg
cmp
out
addr16
mov
pop
lahf
jb
add
dec
add
add
mov
dec
js
movsl
mov
lods
pop
jge
cld
pop
add
jle
jg
jle
add
adc
sahf
mov
add
ret
and
xor
cmovs
iret
mov
insl
hlt
inc
aam
jg
out
sti
mov
jmp
stos
clc
jo
add
std
clc
mov
mov
sbb
leave
sub
jae
fists
pushf
xchg
cs
xchg
sub
fcomip
inc
jl
mov
aas
and
js
fsubs
fwait
or
cli
cli
dec
cli
jb
xchg
xchg
pop
add
scas
pop
sub
call
push
out
loope
pop
icebp
push
xor
faddl
movaps
mov
adc
pop
add
out
movzwl
imul
xor
mov
sbb
ljmp
es
inc
cmpsb
ret
leave
jae
mov
stos
mov
insl
xchg
and
sbb
lock
lds
fdivp
lcall
repnz
cmp
adc
sub
and
out
lret
outsl
jmp
in
outsl
insb
inc
add
mov
jge
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
jmp
hlt
jae
pop
mov
pushf
sbb
xchg
mov
fildl
sbb
and
jle
dec
mov
add
cmpsl
addr16
mov
out
push
adcl
pop
mov
sub
fldt
sub
mov
sub
push
mov
movsl
xor
andb
xlat
lret
sub
xor
lcall
cmp
lret
mov
pop
fwait
punpckhwd
in
xchg
mov
lds
add
mov
xchg
mov
adc
mov
icebp
inc
pop
cmp
pop
mov
inc
in
cmp
mov
scas
sbb
shlb
mov
insl
test
ja
scas
xor
bound
out
ljmp
cmp
dec
shll
pushf
fwait
aad
jecxz
push
insb
add
outsl
adc
int3
sahf
mov
movzbl
mov
mov
lret
aaa
sub
cwtl
sbb
jmp
insl
movsl
inc
ljmp
mov
sub
mov
adc
jns
rcll
xlat
mov
lea
mov
mov
xor
mov
sub
add
jmp
sub
jmp
sub
sub
jle
and
jle
gs
mov
xor
in
enter
les
hlt
outsb
push
cmc
ds
insl
xchg
xchg
loope
out
inc
xchg
sub
jecxz
mov
sub
cmc
fwait
or
aaa
inc
and
pop
jno
and
jecxz
insb
jbe
cmp
test
rorb
lret
jle
cmp
cltd
xchg
or
sahf
fsubl
cmp
mov
or
fnsave
and
nop
leave
out
fcoml
add
js
xchg
ficomps
dec
mov
pop
adc
arpl
sub
mov
inc
lcall
mov
rolb
iret
and
aad
mov
cld
jae
pop
cmpsb
pop
mov
int3
data16
popa
nop
xchg
sbb
cmpb
pop
lods
lock
movsb
sarl
fldenv
dec
cmpsb
mov
divl
jp
lahf
ficompl
push
sub
int3
dec
xor
xchg
lea
pop
inc
sbb
rcl
sub
push
jb
lcall
inc
adc
test
cmp
daa
sbb
xchg
pop
xlat
xor
and
mov
mov
xor
add
imul
cmp
jbe
pop
jmp
push
cld
dec
or
jp
adc
xchg
leave
clc
sbb
and
jle
xor
int
sbb
jae
shlb
xchg
movsl
cmpb
lahf
xlat
inc
pop
in
xchg
lds
jle
addr16
push
push
je
out
imul
xchg
and
and
fldt
push
jecxz
ror
adc
xor
in
fbld
cmp
push
or
sbb
fs
cmp
ss
sti
sub
fs
scas
push
scas
test
sub
cmpsl
mov
pop
jl
pop
mov
pop
js
inc
insl
sub
fistps
mov
jle
jne
adc
mov
mov
subb
jg,pn
or
sub
imul
nop
hlt
sbbl
sub
pop
js
arpl
mov
ficompl
xor
inc
das
inc
push
xchg
pop
sbb
testb
add
cmp
push
inc
cwtl
xor
lret
pop
fnstenv
addr16
int3
mov
pop
add
adcb
push
nop
sbb
and
mov
fwait
push
jne
pusha
add
cld
ljmp
orl
dec
imul
or
push
mov
jmp
jb
test
adc
mov
lods
sbb
jmp
mov
fsubl
pop
mull
sbb
divb
pusha
jecxz
mov
xor
imul
push
xor
mov
insb
mov
and
popf
enter
data16
cli
sub
jno
pop
sbb
xchg
lds
jne
cmpsl
stos
jb
push
dec
mov
outsl
jp
push
xlat
sub
jp
or
movups
push
fidivrl
insb
mov
adc
rcr
xor
sbb
test
jne
into
aad
and
cmc
popa
inc
push
xlat
adc
int3
push
test
int3
mov
fs
push
lret
test
test
jg
jmp
adc
add
dec
adc
xor
xchg
adc
xchg
mov
in
push
jmp
ret
dec
add
test
lcall
loop
jbe
divb
pop
mov
xchg
das
mov
jecxz
push
jbe
enter
cmp
sbb
push
mov
pop
pushf
sub
andb
popl
ja
nop
push
imul
sbb
and
ret
fcmovnbe
movsb
stos
insb
or
bound
cmp
dec
js
mov
push
pop
mov
jae
outsl
mov
fimull
pop
xor
movsb
cli
push
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
call
jmp
xorl
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
movl
mov
push
adc
mov
xor
mov
push
mov
add
cmp
jmp
iret
in
push
adc
jns
int
les
or
sbb
jle
jmp
mov
aam
push
pop
in
inc
inc
movsb
jae
adc
lds
rclb
fcoms
les
push
call
jle
mov
cmp
lock
in
mov
fmul
fst
addr16
bound
daa
rolb
mov
mov
fndisi(8087
and
xchg
push
pop
insb
jge
ficoml
inc
ret
jnp
jecxz
dec
test
and
enter
pop
or
loop
pop
ljmp
ss
push
mov
jg
imul
movsb
fdivrl
xchg
mov
xorl
or
bound
cs
xchg
jnp
sub
xor
out
cs
scas
pop
cmp
pop
adc
sbb
inc
mov
cmp
xor
insl
inc
test
inc
dec
sub
fs
test
outsl
aad
das
add
fstps
iret
aaa
int3
shlb
xor
call
jae
push
mov
pop
mov
push
cmp
push
jecxz
orl
sarb
int
xchg
inc
xlat
test
pushf
in
lret
xchg
jl
push
xlat
inc
testb
pop
jmp
ss
in
test
add
cmp
dec
jge
ret
and
dec
jge
push
daa
cmpsl
fisttps
test
xchg
add
in
pop
jg
cmpsl
insl
in
imul
sbb
jle
jg
jle
mov
xchg
shrl
xlat
xchg
ljmp
adc
xchg
ficomps
inc
ds
xor
aas
hlt
mov
pop
js
aad
movsl
jnp
cltd
inc
mov
in
stos
dec
fsubl
repz
lahf
iret
sbb
inc
leave
inc
int
xchg
lret
into
push
xchg
xlat
outsl
aas
and
pop
cwtl
adc
mov
inc
xchg
mov
clc
or
add
notl
xor
hlt
mov
inc
xchg
and
mov
jecxz
xchg
mov
stc
sbb
test
pop
bound
or
les
dec
shll
push
out
mov
push
pusha
pop
xchg
push
jg
and
lds
push
push
subb
outsl
xlat
mov
xor
mov
ret
jno
mov
in
out
mov
fsubrs
mov
rorb
outsb
inc
into
outsb
testl
pop
sub
ja
add
cmovp
imul
jmp
je
ds
rolb
loopne
add
xlat
inc
divb
sub
mov
mov
das
mov
pop
ljmp
outsb
lret
ret
push
adc
ljmp
xor
dec
pop
movsl
sub
inc
jnp
mov
push
clc
mov
xor
mov
sub
jmp
les
add
gs
dec
hlt
sbbb
shl
adc
jmp
rolb
addr16
xchg
stos
daa
jg
mov
repnz
jne
or
fadd
aaa
rcll
shl
mov
and
pop
mov
stc
sub
and
mov
mov
jmp
sbb
in
xor
mov
fcmove
xchg
jecxz
sub
inc
sbb
enter
or
rcll
inc
loop
stos
mov
mov
cs
inc
mov
test
or
dec
pop
adc
imul
test
xchg
scas
test
jl
gs
fwait
ret
or
adc
or
int3
scas
inc
inc
xchg
call
stos
sub
and
in
pop
push
inc
mov
mov
cltd
add
sub
scas
pop
int
dec
jae
xchg
cmpsl
negb
xor
fmul
out
inc
inc
cmpxchg
int
rcrb
cmc
stos
movsb
into
mov
jbe
cmp
ja
jne
mov
jbe
xchg
adc
inc
pop
in
jmp
mov
push
in
sbb
fdivl
repnz
jl
jl
xchg
cwtl
inc
xchg
sbb
inc
pop
stos
aad
fisttps
call
xor
pusha
mov
daa
cmpsl
call
sbb
mov
scas
int
sbb
fldt
sub
imul
shrl
push
leave
stos
push
in
cmc
icebp
into
addb
inc
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
sub
mov
andl
push
andl
pushl
pop
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
xor
mov
xor
jmp
xchg
bound
pusha
ljmp
dec
jmp
jg
jle
fs
dec
lea
sbb
repz
or
add
mov
pop
hlt
adc
out
jp
jbe
pop
movsb
sub
xchg
inc
stos
add
jle
jne
pop
pop
jl
adc
push
cli
jl
arpl
xchg
loope
sarb
outsl
or
mov
ficompl
cmp
adc
shrb
dec
mov
push
inc
lds
les
gs
xor
addr16
dec
ljmp
jae
xchg
faddl
jg
inc
add
lods
sub
lock
xor
or
dec
and
and
xor
pop
lods
mov
dec
mov
lds
insl
push
mov
sub
fdivl
cmp
lahf
ja
lods
into
push
inc
pop
pushf
sub
gs
outsl
rcl
pop
adc
and
add
aas
push
adc
mov
mov
rol
outsl
push
push
jecxz
xor
inc
jecxz
and
loope
mov
pop
imul
push
nop
xchg
stos
or
push
and
aas
mov
and
addr16
jg
mov
mov
inc
aaa
push
movsb
in
les
mov
mov
frstor
lahf
mov
mov
push
xchg
lret
sub
add
aad
add
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
jmp
icebp
mov
mov
cmp
or
jle
jg
jle
adc
and
and
clc
pop
inc
sub
pop
fists
test
das
int3
jle
ja
outsb
adc
mov
aaa
adcb
and
into
test
ret
adc
movsb
mov
sbb
cltd
lods
loop
sbb
mov
push
popf
fwait
mov
cld
jmp
push
jge
sbb
adc
xor
xchg
stos
push
pop
mov
cmp
call
ret
push
les
pop
add
imul
jbe
ja
pushf
div
stc
sahf
cmpsb
sti
je
jp
dec
xchg
repnz
mov
out
outsb
xor
mov
pop
mov
pop
das
sbb
test
pop
iret
lcall
jbe
fisttps
jne
mov
stos
test
in
out
mov
fsubrp
inc
mov
inc
ret
push
inc
mov
mov
icebp
test
inc
shll
aas
enter
inc
aaa
push
dec
jo
les
scas
push
push
fwait
rorb
jno
sahf
nop
cmpsl
jp
iret
xor
hlt
sbb
xor
gs
dec
mov
inc
icebp
inc
mov
in
call
data16
aam
cwtl
cmc
adc
cli
dec
fisubrl
int3
mov
les
cmp
add
gs
mov
mov
mov
jmp
and
pop
xchg
adc
arpl
aam
aaa
push
push
jle
fdivrl
jle
arpl
sbb
addl
cli
stc
stos
mov
jmp
stos
outsb
iret
insl
sbb
mov
cmp
xchg
je
mov
ret
int3
xchg
sbb
rcrl
aaa
inc
xor
adc
popa
lock
jge
xchg
inc
shlb
xor
fmuls
inc
adc
aad
xchg
mov
inc
push
filds
cwtl
mov
in
sub
or
fwait
movsb
daa
stos
xor
lock
jp
add
or
xor
mov
jecxz
jno
push
mull
adc
cmp
ss
test
push
lret
loopne
inc
daa
adc
add
push
mov
loopne
sbb
dec
test
enter
inc
mov
daa
lea
aam
push
punpckhbw
shl
mov
mov
mov
lcall
pop
fidivs
add
cli
pop
dec
mov
and
lods
jbe
in
mov
aaa
mov
pop
out
je
mov
jno
imul
xor
xchg
sub
fmuls
pop
jg
sbb
sub
lock
and
femms
imul
pop
in
out
insb
hlt
mov
ret
inc
add
mov
add
mov
jmp
push
gs
movsb
es
dec
push
adcl
jle
jg
jle
mov
lret
lods
ljmp
push
loope
mov
ja
mov
adc
aam
sbb
or
pushf
cmpsb
icebp
pop
das
mov
dec
sub
dec
and
pop
jl
test
jmp
sbb
dec
or
or
sti
xor
adc
pop
mov
xorl
xchg
int
mov
add
xchg
xor
lock
sub
sub
sbb
sbb
pop
adc
cmpsl
lea
divl
inc
loopne
fidivs
jl
outsb
sbb
mov
inc
decb
test
push
inc
pop
ljmp
test
jl
mov
aaa
pop
adc
shl
jp
imul
dec
adc
push
int3
cmp
test
inc
push
inc
adc
or
mov
gs
dec
hlt
loopne
in
mov
sar
stc
xchg
jmp
and
xchg
push
rolb
push
jmp
scas
outsl
dec
stc
scas
ds
js
stc
or
fisttpll
and
loopne
cmp
push
subb
push
fwait
adc
or
dec
ds
cmp
ret
jmp
imul
int
in
in
sarb
inc
pop
or
dec
inc
add
mov
add
pop
pop
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
incl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
sub
mov
subl
jmp
dec
pushf
push
in
imul
mov
adc
jle
jg
jle
xlat
pop
iret
popf
cmp
mov
daa
xchg
mov
test
inc
mov
iret
pop
popf
push
sti
rclb
jno
dec
add
sti
mov
xchg
push
push
push
ret
arpl
fbstp
cmpsb
cmp
jne
push
insl
shrl
mov
ficompl
cmp
pushf
jno
pop
pop
push
cmp
mov
adc
push
nop
pop
adc
iret
mov
cmp
popf
adc
adc
add
xor
in
jecxz
icebp
adc
add
mov
and
int3
jb
mov
subl
adc
xchg
movsl
mov
mov
jb
popa
jbe
or
pusha
push
push
ja
cltd
mov
and
loopne
scas
imul
stc
sbb
inc
mov
rcl
movsl
sub
mov
mov
mov
repz
test
ficompl
xor
jmp
dec
xor
mov
notl
add
mov
or
mov
jmp
sub
xchg
jns
jns
or
xor
jle
jg
jle
pop
sti
fdivrs
addr16
stos
sub
push
sbb
out
loop
fiadds
clc
mov
mov
repnz
orl
in
add
xchg
mov
fdivl
repz
int3
xchg
scas
inc
int
div
loopne
sti
mov
popa
push
addr16
pop
out
sbb
mov
or
fisubl
std
pop
lock
adc
je
adc
lret
jnp
stc
imul
mov
mov
fwait
inc
dec
sbb
cmpl
shlb
in
jp
xchg
mov
mov
data16
dec
sub
inc
shll
subl
shr
xor
or
fidivs
call
test
scas
inc
inc
imul
nopl
adc
shlb
ror
js
pushf
adc
xchg
dec
in
jg
ficomps
pop
lret
dec
mov
and
dec
push
les
imul
int3
mov
lcall
or
daa
adc
push
fbstp
or
mov
movb
lea
and
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
neg
mov
xor
orl
sub
mov
xor
jmp
adc
fs
jmp
ficoml
call
or
jle
or
jle
imul
fldenv
repnz
sub
inc
pop
repz
out
mov
dec
push
xchg
test
mov
addb
rcrl
stos
inc
add
pop
sbb
lods
cmp
xchg
out
mov
or
imull
je
cmpsb
dec
mov
sub
fcmovnb
mov
mov
sbb
sub
pop
adc
popa
mov
push
aam
fdivs
bound
out
mov
into
pop
ss
fistps
and
cld
inc
xorb
ret
int
cld
rorb
fsubl
fwait
jg
mov
jne
hlt
add
pop
aad
fwait
rol
sahf
sbb
dec
repnz
cld
add
fadds
int
jnp
jo
xchg
xor
roll
push
inc
jl
pop
std
int
jle
push
loopne
sbb
jle
nop
arpl
clc
mov
lods
icebp
pmaddwd
sbb
sbb
cmp
and
bound
mov
out
insl
lods
mov
sbb
imul
pushf
clc
adcl
movl
mov
xor
add
sbb
mov
addl
push
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
push
push
push
push
pushl
push
pushl
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
jmp
sub
fwait
and
sbb
addb
jle
jecxz
add
jecxz
xor
cmpsl
jb
jg
fisttpl
push
fldt
pusha
mov
inc
or
sub
inc
notb
pop
out
pop
test
popa
das
or
and
jle
jg
and
int3
xchg
popa
sub
xchg
and
movl
cmp
lock
popf
cld
xor
adc
in
lcall
dec
cmp
or
sub
add
push
xor
imul
dec
das
xchg
mov
adc
dec
adc
or
shl
aam
cmc
mov
test
xor
jo
clc
movsl
push
jmp
shlb
daa
in
mov
sub
je
sbb
add
int
mov
test
lods
cld
push
and
ret
push
hlt
call
sub
mov
roll
cmp
je
jmp
xor
cltd
js
popa
cmp
sbb
fs
adc
jle
or
jle
rcrl
pop
ss
jae
movsb
out
xlat
pop
imul
in
rcr
or
xor
push
ficompl
and
inc
push
stos
or
or
xchg
fwait
shrb
cld
cmp
adc
sub
push
add
je
cmp
sbb
lea
ja
insb
ja
jle
popf
jnp
rcrl
rorl
add
hlt
adc
push
push
pop
sahf
sub
pop
mov
call
push
sub
aas
out
push
mov
pushf
xchg
push
add
aas
mov
stc
test
insb
xchg
je
cmp
mov
cli
data16
push
std
dec
xor
cmp
jp
adc
xlat
lea
push
mulb
inc
or
leave
nop
adc
cltd
icebp
outsb
cmpsl
pop
or
mov
or
lods
inc
mov
movsb
mull
lea
push
mov
dec
jl
stos
mov
mov
push
push
mov
mov
xor
mov
add
movzwl
mov
mov
jmp
fcoms
sub
clc
fcomps
sbb
mov
jle,pn
or
jle
pop
imul
xchg
and
add
addr16
inc
dec
imul
lds
test
cmp
test
pavgb
add
clc
xor
pop
xor
daa
sub
and
mov
iret
andl
dec
or
sbb
popf
jae
icebp
stos
xor
lahf
stos
gs
sub
mov
dec
xlat
ljmp
icebp
xor
push
fidivs
orl
adc
jbe
cltd
das
jg
fnstsw
xor
adc
sub
cmp
jae
dec
push
mov
fdivr
sbb
xor
addr16
mov
xchg
popa
pusha
push
jecxz
fsubl
aas
std
popf
andl
cmpl
out
mov
add
xor
lcall
xchg
pushf
pop
into
movsb
dec
xchg
imul
pop
xchg
movsb
sbb
cmp
and
popa
sahf
xchg
lds
mov
inc
pusha
addl
std
in
add
aam
dec
mov
mov
nop
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
jmp
inc
jno
icebp
stc
js
xchg
insb
lret
fcoms
or
jle
mov
mov
arpl
sub
cld
dec
aas
jb
jb
or
jge
adc
xor
push
xchg
and
dec
pop
out
ds
jge
sub
jge
dec
lea
fildl
mov
int
cs
push
pusha
cmp
cwtl
sub
in
popf
mov
inc
nop
movb
inc
insl
add
shr
icebp
jb
out
and
fsts
ss
repnz
mov
inc
es
add
mov
mov
rolb
dec
add
push
inc
mov
sub
adc
mov
jbe
pop
and
mov
aaa
in
inc
and
xchg
ss
jecxz
jcxz
test
dec
idivb
xchg
bound
outsl
test
outsb
fs
es
or
mov
popf
ds
fdivl
movsl
sub
dec
stos
cmp
out
mov
sbb
dec
xchg
ret
lods
add
mov
jmp
dec
sub
lock
mov
jle
jg
jle
xchg
rorb
out
jns
sti
pop
mov
dec
dec
in
xchg
loop
adc
jg
and
lods
push
inc
pop
stc
xchg
add
pusha
negl
push
aad
decl
sub
jle
adc
cli
shrb
loop
xor
inc
roll
in
data16
push
pop
pop
aad
add
mov
stc
int
mov
mov
cmp
and
int
fdivrl
or
ja
inc
repz
push
mov
lock
es
out
mov
jns
imul
cmp
or
movl
into
pop
sub
dec
add
inc
inc
adc
hlt
push
cmc
loopne
jne
inc
mov
fsubrl
mov
or
enter
mov
jb
clc
outsl
mov
jmp
mov
jle
add
imul
pop
cmp
jae
scas
jecxz
inc
add
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
jmp
jmp
loopne
mov
jmp
sete
sub
jle
mov
pop
sbb
or
push
sti
arpl
mov
pop
andl
popa
inc
cld
and
test
jns
pusha
jnp
outsl
fscale
mov
sub
es
xchg
xchg
mov
xchg
sub
jnp
add
aad
xor
mov
test
pop
cltd
inc
not
xchg
daa
es
push
fistps
cld
cmp
ret
icebp
cli
ret
jle
jnp
addl
rorb
lcall
outsl
outsl
push
js
push
mov
loope
jecxz
or
loope
mov
push
enter
fiadds
mov
sub
fsubrl
test
mov
test
pop
ljmp
xchg
cmpsb
cmc
shrl
xchg
mov
mov
dec
add
iret
and
icebp
push
pushf
jge
inc
shlb
pop
into
clc
js
jnp
adc
nop
dec
xchg
mov
mov
push
inc
push
insl
dec
adc
mov
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
jmp
lods
lock
sbb
daa
jmp
jns
frstor
jle
or
jle
mov
out
out
cmp
icebp
enter
dec
jne
aam
inc
cs
mov
js
ljmp
out
mov
inc
loop
fdivrs
int
test
insl
lea
or
add
loop
in
pop
dec
jecxz
pop
mov
inc
add
aad
fbld
xor
out
test
pop
pop
mov
jge
out
test
fwait
loopne
inc
and
lods
mov
into
xchg
pop
test
rorb
pop
iret
jb
gs
inc
cltd
adcl
roll
dec
jle
fucomip
fsubl
test
es
jnp
push
xchg
rcrb
pop
scas
inc
fsubs
aam
mov
bound
arpl
fs
dec
fistpll
mov
jb
and
pop
fs
movsb
adc
inc
sti
pop
sahf
out
cwtl
aas
divl
mov
jl
mov
jae
inc
add
jno
xchg
sbb
push
push
ffree
ret
mov
lea
mov
incl
jmp
mov
xor
jmp
or
stc
lock
jmp
jg
jle
sub
lahf
cmpsb
loope
pushf
cli
outsl
stos
stos
mov
ja
fcoml
std
xchg
loopne
xchg
cmp
mov
dec
or
or
repz
push
push
insl
lods
negb
idiv
stos
sbb
xchg
dec
ljmp
mov
lahf
push
sahf
hlt
cmc
cld
mov
leave
inc
xchg
xlat
sbb
cmpsb
dec
adc
pop
push
outsb
and
call
jae
inc
xchg
mov
les
pop
mov
cltd
jecxz
stos
mov
jnp
jnp
sti
call
sbbl
or
push
call
cld
roll
jns
xchg
shll
aaa
xor
call
fldt
push
cwtl
jo
xchg
jnp
dec
cmp
jns
rcrb
imul
push
dec
je
dec
add
pop
mov
ficompl
or
dec
cmp
xchg
mov
adc
xor
xchg
ret
xor
cmp
pop
lea
adc
mov
pop
leave
ret
push
mov
push
not
movl
mov
mov
add
mov
adcl
xor
add
andl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
sub
xor
adc
push
add
mov
mov
add
xorl
mov
mov
mov
sub
xor
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
mov
mov
mov
jmp
andb
xchg
xchg
mov
xchg
xor
in
jle
cmpb
adc
aaa
lret
jmp
in
push
cmp
xchg
mov
enter
and
mov
clc
stos
cwtl
jno
jge
and
popa
xrelease
add
int3
lods
into
dec
xchg
jno
clc
adc
repnz
pop
lods
and
js
pop
jae
cmpsb
aas
icebp
and
imull
sub
jno
repnz
and
ds
xchg
adc
add
jnp
sub
add
scas
cmc
inc
adc
sbb
popa
sbb
daa
addl
mov
mov
mov
mov
jmp
es
mov
les
xor
sub
and
cmpb
rorb
sub
sbb
xor
das
jmp
jae
xchg
in
push
std
nop
dec
aam
enter
xor
sbb
mov
ficomps
add
adc
ret
movsl
cmpsb
in
pop
and
popf
fsubs
lahf
rolb
pusha
adc
mov
loop
jp
neg
sbb
in
add
sub
movsb
lea
sbb
mov
add
repnz
push
dec
inc
pop
testl
add
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
jmp
test
pusha
test
cmp
ja
jg
and
push
jg
jle
popf
andb
sub
add
out
push
and
pop
mov
jns
repz
stc
push
inc
nop
sub
cmp
xchg
cld
or
jge
fs
jle
adc
cmc
xor
out
jmp
and
push
sub
add
jb
ljmp
cli
xor
push
repz
in
cmp
and
xchg
mov
inc
lock
mov
cltd
shlb
or
or
aad
dec
in
jecxz
les
stos
cltd
movsb
or
dec
nop
mov
push
jl
push
ds
sub
out
subb
das
stc
out
and
mov
push
lret
rclb
lods
pop
inc
sub
cltd
inc
adcl
push
mov
mov
in
nop
xchg
addl
repz
lcall
and
out
fmuls
fbld
cmpsl
sbb
aas
add
sub
lods
mov
cmp
rol
inc
cld
cmp
pushf
clc
or
mov
orl
mov
movzwl
adc
mov
subl
xor
adcl
add
movl
mov
xor
jmp
push
xlat
lcall
jl
shll
lods
ret
jle
push
jg
jle
repz
fsubs
iret
xchg
lret
push
xor
enter
out
test
stos
cmp
insb
mov
or
clc
pop
mov
sbb
xchg
pop
mov
jb
fcom
xor
leave
add
sub
inc
popa
sub
cmc
pop
clc
repnz
jmp
xor
std
bound
xchg
fcoms
mov
in
lods
sub
mov
leave
adc
mov
pop
imul
fabs
pusha
push
outsb
cmpsl
jl
fwait
mov
mov
idiv
stos
cmp
sbb
mov
add
or
pop
xchg
xor
push
and
cmp
adc
fs
mov
sub
xchg
mov
inc
mov
mov
mov
mov
sbb
push
push
jl
or
xor
cltd
outsb
mov
mov
test
adc
cmpsb
xchg
out
sbb
inc
mov
sbb
cld
and
push
push
lock
xchg
mov
hlt
mov
inc
nop
push
outsb
xchg
dec
dec
jns
inc
fucomip
inc
fists
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
mov
mov
jmp
add
cmp
jns
gs
movsb
or
or
jle
push
jg
jle
push
jae
fisttpll
pop
jecxz
sub
inc
popa
add
xor
mov
push
dec
les
hlt
outsb
cltd
pop
push
or
sbb
addb
out
mov
mov
cmp
into
mov
lds
repz
lock
fldt
mov
rcr
push
inc
pop
mov
inc
mov
adcb
sahf
add
fldt
ljmp
xor
in
data16
xchg
movl
mov
daa
sub
cwtl
into
aaa
mov
scas
sub
roll
stos
stos
adc
imul
cmc
mov
sahf
fidivs
outsb
cwtl
push
jge
xchg
pop
pop
ss
fldl
icebp
mov
mov
clc
out
xor
mov
mov
jg
std
js
icebp
sub
dec
fiaddl
xchg
mov
jle
mov
push
and
xor
int
cmp
jbe
mov
add
or
pop
movsl
mov
popl
insb
daa
or
out
test
xchg
cs
mov
cli
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
leave
ret
push
mov
sub
orl
push
incl
push
mov
subl
push
push
xor
adcl
push
adcl
mov
xorl
call
cmp
je
xor
jmp
push
mov
mov
push
adcl
push
andl
push
andl
lea
mov
andl
push
negl
call
adcl
mov
mov
test
movl
je
notl
pushl
adcl
call
addl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
xor
shll
and
inc
mov
imul
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
add
or
mov
movl
mov
cmp
movl
jne
movl
inc
movl
cmp
jb
andl
push
subl
call
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
shll
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
and
mov
inc
imul
mov
mov
xor
mov
or
movl
mov
mov
mov
cmp
jne
inc
movl
cmp
jb
xor
sbb
shll
and
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
mov
xor
imul
mov
sub
mov
and
or
mov
mov
movl
cmp
jne
movl
inc
cmp
movl
jb
xor
andl
xor
add
inc
mov
cmpl
jne
pushl
call
cmpl
jb
addl
shll
and
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
push
push
push
call
jmp
mov
imul
mov
or
mov
mov
movl
cmp
movl
jne
inc
cmp
movl
jb
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
push
call
mov
dec
mov
jmp
mov
mov
sub
imul
xor
shll
and
or
mov
xor
imul
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adcl
mov
or
or
mov
mov
mov
movl
cmp
jne
movl
inc
movl
cmp
jb
xor
orl
shll
and
and
mov
adcl
imul
adc
mov
xor
or
xor
or
mov
mov
movl
cmp
jne
movl
inc
movl
cmp
movl
jb
sbb
xor
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
shll
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
neg
and
mov
neg
imul
xor
mov
adc
or
mov
mov
mov
movl
cmp
movl
jne
inc
cmp
movl
jb
xor
shll
and
mov
imul
mov
or
mov
mov
cmp
jne
inc
cmp
jb
inc
cmp
jb
mov
mov
movl
lea
mov
lea
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
cmp
mov
je
mov
xor
add
imul
mov
jmp
xor
jmp
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
or
movl
add
mov
mov
addl
add
sbbl
xor
cmp
movl
jne
mov
mov
add
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sub
push
sub
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
sub
movl
jmp
jmp
aam
push
pop
jnp
fwait
jne
or
jle
lds
jle
popf
adc
test
aaa
add
inc
cmp
push
ja
mov
dec
rep
or
popa
movsb
xchg
sbb
or
mov
mov
cmpsb
push
pop
sub
adc
dec
hlt
das
sbb
out
rorb
stc
insl
add
add
add
inc
loope
in
and
push
bound
xlat
cmp
aam
mul
push
insb
icebp
xchg
lret
jl
xor
mull
inc
in
sub
cmc
sbb
imull
fs
lods
mov
mov
pop
add
not
icebp
mov
imul
pop
add
sbb
add
iret
repnz
stos
mov
push
popa
test
jmp
loopne
int
jge
adc
je
ret
sbb
inc
lds
and
push
add
add
cmp
mov
notl
cli
lret
nop
adc
inc
cmp
sub
jp
push
ja
adc
fwait
ljmp
fistl
pop
call
clc
cmc
repz
iret
popf
mov
inc
push
jns
and
or
xor
add
pop
or
lods
add
inc
enter
cld
push
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
call
cmpl
jb
mov
xor
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
jmp
addr16
mov
jl
arpl
or
jle
lds
jle
fcmovne
jbe
ret
mov
fstps
mov
mov
mov
popf
sbb
jge
inc
inc
xchg
lahf
or
push
dec
or
mov
push
das
push
test
sub
data16
cmpl
imul
add
clc
les
in
nop
pop
js
enter
jne
cmp
lret
or
loop
dec
outsb
push
daa
dec
dec
jmp
in
pop
lcall
loopne
mov
sbb
ud2
test
cmp
and
test
fbld
push
icebp
sub
into
jns
and
inc
sub
inc
adc
arpl
add
out
xor
jae
xor
out
adc
inc
cwtl
jmp
out
sub
sbb
rcrl
movsl
push
lea
mov
mov
push
add
fldl2e
pop
loope
mov
clc
lcall
loop
xor
fwait
leave
and
lds
mov
fidivl
outsl
jne
out
mov
inc
mov
add
lds
pop
cmpsb
stc
imul
shr
add
add
add
jns
cmp
aaa
sbb
jle
lds
jle
scas
mov
xor
out
test
js
hlt
stc
or
imul
sub
mov
scas
frstor
hlt
sahf
test
sbb
jp
nop
xor
lods
pop
dec
imul
adc
sub
jp
bound
add
adc
push
movsl
movsb
push
push
push
jnp
and
pop
out
mov
mov
sub
xor
ss
mov
movsb
scas
or
movsl
mov
add
adc
jne
rcrl
cld
int3
pop
in
xlat
cs
inc
jns
sub
mov
mov
and
xchg
dec
adc
aam
adc
cmpl
jae
inc
and
add
cmc
push
inc
jne
jle
dec
shrl
loop
movsl
push
fcomp
data16
movsb
leave
xor
push
sbbb
aas
xor
aad
test
insb
fsub
xchg
cmpsl
ret
in
or
sub
cmp
or
mov
push
int
or
stos
adc
mov
int
inc
insb
mov
mov
es
fwait
inc
xlat
cmp
mov
push
ret
addr16
ret
scas
jp
leave
or
mov
and
dec
dec
add
icebp
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
jmp
push
mov
sub
cmc
sub
rcll
cmp
lds
jle
test
xchg
pop
test
cmp
cmp
ret
and
sbbb
mov
cltd
or
jb
inc
pop
jae
jmp
pop
mov
shll
sub
pop
cmpsl
out
or
addl
mov
out
jo
push
push
mov
les
or
daa
test
mov
int3
xchg
rcrl
sub
cmp
je
or
sub
sarl
addr16
popa
test
cmp
xchg
push
not
jb
xchg
lods
je
popf
cs
shrb
arpl
inc
pop
pop
roll
roll
enter
pop
push
testb
dec
popf
int3
cmpsl
insb
fs
sub
popa
sbb
xchg
fsubrl
test
repnz
xchg
cld
insb
add
xor
push
loopne
or
out
push
cmp
insl
pop
popa
sarb
add
jp
mov
test
mov
sbb
push
add
fcmovne
mov
or
inc
sbb
in
inc
push
add
xchg
sahf
pusha
pop
imul
in
cmp
mov
pusha
cmpb
push
stc
repnz
mov
sti
inc
sbb
and
icebp
insb
pop
push
clc
mov
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
addl
movl
movl
decl
mov
push
mov
xor
xor
jmp
je
jg
addr16
test
and
icebp
jle,pt
mov
jle
inc
and
adc
push
out
mov
pop
cmpsl
imul
ret
or
sub
rcll
lea
jns
inc
jbe
inc
cmp
std
pop
rcrb
repz
addl
test
xor
push
inc
arpl
mov
ret
int3
mov
inc
stos
xor
lods
push
adc
adc
shll
adc
int
daa
cwtl
inc
xchg
js
dec
add
xorb
or
push
jno
lcall
dec
test
xor
lea
sbb
lahf
rcll
ljmp
int
dec
insl
push
xchg
mov
pop
pop
dec
popf
notb
mov
clc
mov
add
andl
mov
movl
mov
addl
push
push
orl
test
je
mov
mov
mov
movzbl
and
imul
sub
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
or
mov
mov
movl
xchg
mov
mov
or
sub
and
xor
adc
mov
mov
add
mov
and
jmp
scas
mov
imul
pop
pusha
fisttps
jp
cltd
leave
aas
jle
mov
jle
sbbl
cmp
dec
and
lods
loope
lds
xchg
cmpsb
or
call
cmp
pop
fwait
mov
inc
es
lret
jns
sbb
add
daa
frstor
jno
sbb
mov
inc
dec
cmp
mov
outsb
sbb
outsb
mov
out
pop
ss
push
clc
cmp
mov
add
loop
or
xchg
push
ret
sub
andl
push
ss
push
imulb
popf
lahf
popf
loopne
stos
mov
dec
sub
ret
ret
xchg
inc
push
add
mov
sbb
negb
cmp
xchg
add
stc
clc
das
adc
pop
sbb
es
pop
sbb
adc
stos
xchg
or
and
jmp
mov
stos
popa
jns
in
mov
nop
outsl
xchg
cmp
jle
jle
jle
mov
cmpsb
and
fwait
mov
lcall
jmp
sbb
loop
and
mov
loope
scas
sbb
push
add
dec
movsb
rcrb
outsl
pop
outsl
sub
xlat
daa
sarb
adc
push
lds
push
stc
rcrb
jns
loope
cmpb
xchg
insl
stos
repnz
lds
xchg
leave
or
cmp
pop
push
lods
aas
or
push
push
mov
or
pop
or
xchg
cmc
xchg
das
mov
xor
cmp
les
aaa
insl
cmp
pusha
jmp
xchg
fisttpl
ret
or
stc
jle
int3
mov
dec
leave
pop
icebp
jmp
cs
pop
and
sub
fisubrl
xor
or
add
not
mov
mov
je
mov
xor
mov
xor
andl
add
movl
cmp
jmp
push
pop
popf
aam
fs
test
jl
bound
jle
mov
jle
add
xchg
fwait
nop
cld
and
xchg
jle
stos
adc
test
pop
fimuls
lcall
popf
or
dec
push
adcl
pop
adc
sub
push
aad
pop
loopne
push
add
movsl
xor
and
pop
sti
cmc
call
xchg
xchg
xchg
outsl
pop
jmp
aam
aam
mov
mov
fistpll
ljmp
enter
imul
adc
adc
cmp
out
mov
inc
jbe
or
jo
ja
icebp
stc
inc
adc
dec
scas
dec
xor
push
xlat
sbb
icebp
sub
mov
inc
shll
hlt
sub
mov
mov
outsl
cmp
testl
fnstcw
add
pushl
movl
call
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
pushl
pushl
push
pushl
call
xor
or
dec
mov
jmp
sbb
mov
mov
not
mov
xor
subl
add
cmp
jmp
add
or
in
loope
js
dec
inc
scas
aad
cwtl
xchg
cmp
jle
and
xor
pop
aas
cmp
mov
gs
loopne
mov
and
dec
pushf
cmp
add
sbb
cmpsb
repz
test
pop
and
cmp
mov
inc
dec
jecxz
and
aas
cmp
lods
sub
lcall
lret
jg
jp
icebp
or
cmpb
lods
cwtl
jo
fdivs
fdivrs
mov
mov
arpl
adc
into
pop
mov
dec
sub
movsb
repz
outsb
mov
ljmp
data16
popf
lds
out
ljmp
jmp
dec
cwtl
inc
sti
shrb
sbb
flds
pop
shll
decb
test
add
sbbl
pushl
jmp
sti
loopne
lock
cltd
sti
jns
cmpsb
pop
out
repz
jle
jle
and
adc
push
adc
mov
arpl
lods
xchg
xchg
scas
xlat
pusha
mov
ret
ds
dec
ret
push
js
popl
mov
inc
shlb
loopne
adcl
rcrb
cwtl
add
int3
imul
ret
xor
je
cltd
mov
dec
insl
or
dec
mov
cli
stos
jnp
xor
dec
inc
sbb
adc
popw
lahf
sbb
inc
sbb
sub
data16
dec
out
xor
ret
xchg
xor
or
and
lea
cmpsl
stc
cmp
or
mov
sub
pushf
test
in
es
jg
into
jno
insb
xor
out
repnz
call
or
mov
mov
adc
mov
adcl
xor
add
movl
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
push
push
call
cmpl
jb
mov
mov
movzbl
sbb
mov
xor
or
xor
xor
sub
sub
mov
subl
mov
addl
add
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
add
jmp
mov
or
pop
pop
aas
mov
jl
and
jle
mov
jle
cmp
jne
roll
jbe
mov
sti
insb
and
push
or
or
rcl
out
sub
fisttps
aad
mov
pop
jmp
repnz
sahf
cmc
aam
ret
dec
jp
adc
bound
bnd
out
xchg
add
inc
fsubrs
cmp
outsb
xchg
adc
or
sub
cmp
pop
repz
lret
adc
push
pop
push
jle
das
std
mov
xor
xchg
or
aam
fildll
mov
mov
pop
fs
bnd
pop
aam
xchg
inc
in
cmp
pop
jno
cmp
dec
jge
aas
into
or
add
into
ds
and
xor
or
testl
add
xor
mov
mov
mov
add
jmp
pop
pusha
pop
movsb
jns
out
cmpsb
push
jg
fbld
fldl
xor
mov
jle
stc
testb
push
add
fcomps
cltd
iret
and
sarl
jne
fisubl
xor
lahf
jb
lods
adc
lret
pop
es
mov
sbb
adc
repnz
cmc
or
mov
cmc
mov
out
xlat
sbb
lds
lea
shll
push
pop
mov
aad
dec
dec
repz
scas
pop
push
cli
in
stos
sub
shlb
dec
cs
les
mov
mov
test
cwtl
enter
fcmovb
data16
xor
outsb
fsubp
pop
push
cld
mov
je
and
lret
mov
lock
test
mul
rolb
in
mov
sbb
mov
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
jmp
test
scas
pop
cmpsb
jns
and
lock
xor
jle
jle
loopne
push
in
cltd
scas
xchg
pop
sub
int
and
dec
mov
je
mov
lods
dec
iret
push
scas
daa
or
ficoml
insl
xchg
mov
movsb
pop
xchg
cmpsl
rol
sub
jle
dec
dec
sbb
fbld
dec
push
popa
sarb
cmpsl
mov
stc
neg
jnp
sbb
and
adc
add
fstps
and
mov
dec
je
mov
fcoms
stc
adcl
dec
and
pop
test
je
adc
push
push
inc
das
lock
xchg
push
mov
fsubl
and
sub
dec
pop
pop
imul
add
arpl
or
clc
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
jmp
pop
imul
mov
jnp
push
pop
and
and
xor
mov
jle
shl
movsb
sub
jmp
cmpsb
cltd
mov
cli
push
adc
iret
cs
jge
mov
test
push
cmp
repnz
pop
jbe
sub
add
insl
fisubl
out
mov
fistpll
rcll
mov
stos
js
sbb
sub
xor
fcmovb
xchg
jno
inc
stos
mov
orb
fldenv
in
pushf
and
nop
and
fst
mov
std
nop
int
ret
fildl
imul
and
sub
xchg
stos
adc
aaa
inc
mov
dec
pop
in
cmp
mov
int3
inc
or
out
test
or
mov
cld
jge
inc
xchg
mov
jle
xchg
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
jmp
xchg
adcl
mov
insl
jge
mov
shll
jle
jle
jle
sbb
dec
push
outsl
fildll
imul
inc
fstp
js
or
loop
rcrb
out
imul
xor
stc
sbb
aaa
cmc
ret
sub
das
mov
insl
inc
pop
mov
mov
or
nop
sub
jg
mov
repz
jns
mov
fsubl
inc
leave
or
xchg
loop
pop
lret
clc
sbb
repnz
test
sub
sub
jmp
or
cmc
aas
repz
pop
in
mov
test
jbe
fistps
jecxz
jno
icebp
cmpsl
outsl
fimull
or
shll
cmp
fwait
dec
and
movsb
xchg
insb
sbb
fbstp
incl
mov
cwtl
jbe
pop
js
cli
and
ds
mov
add
mov
mov
xor
add
mov
jmp
decl
xchg
aam
mov
sbb
jle
mov
jle
sti
clc
jb
gs
loope
adc
outsb
fs
push
mov
xor
pop
nop
add
scas
mov
scas
sbb
js
js
aad
std
stc
repz
pusha
push
call
repnz
push
sbb
cmpsb
pop
pop
aaa
pop
mov
in
adc
mov
inc
inc
inc
lcall
sub
inc
add
leave
add
sarb
into
sbb
lret
adc
iret
movsb
gs
pop
pop
enter
loopne
ja
mov
pop
getsec
insl
sbb
cli
xor
stc
mov
ret
xchg
ss
adcb
jnp
cmp
sbbb
pusha
inc
aad
add
cmc
insb
mov
ja
inc
imul
jmp
inc
loop
xchg
imul
outsb
push
aaa
jle
mov
jle
pushf
mov
jae
cltd
in
mov
jp
fwait
and
test
mov
stc
pop
popf
cli
and
lea
add
fbld
push
cmp
int
mov
pop
xor
dec
pop
add
mov
mov
sub
or
mov
xor
inc
jg
rcrb
sub
push
or
je
mov
push
dec
dec
or
xchg
lods
cmp
mov
call
mov
xor
fstpl
mov
mov
dec
dec
fcoms
mov
les
push
stos
mov
lock
shrb
pop
popa
add
xor
push
mov
xor
mov
cmpsb
sahf
push
push
cld
xor
mov
lea
cmp
je
mov
mov
mov
mov
jmp
pop
sub
sub
jne
stos
push
popa
sahf
jmp
mov
jle
test
push
sbb
aaa
ja
cmp
push
add
lret
sti
jae
lock
jecxz
push
stc
ret
jmp
inc
push
push
and
adc
xor
into
loope
pop
rcpps
or
sbb
xchg
dec
adc
sbbb
dec
dec
enter
push
imul
xchg
mov
fwait
mov
add
ficomps
popf
fdivrl
sbb
movsl
jns
inc
not
and
cmp
mov
flds
mov
lea
orb
lcall
push
stos
jge
in
dec
mov
cmp
and
dec
xor
sub
fldl
popa
dec
out
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
jmp
mov
pop
mov
xchg
out
jg
loope
jle
mov
jle
addr16
and
push
sbb
mov
test
popa
pop
xor
push
lds
cmp
and
dec
pop
fs
sti
pusha
inc
call
mov
sbb
pop
in
push
nop
dec
std
and
es
lahf
decl
pop
mov
test
add
stos
stos
cwtl
in
int
orb
xor
mov
lea
xchg
push
lock
xor
pop
add
cmp
ret
xchg
mov
clc
push
xchg
sbb
and
icebp
xor
sbb
sbb
js
cwtl
cltd
push
sub
push
lret
xchg
jno
je
jbe
sbb
cld
mov
pusha
addb
or
enter
std
decl
add
mov
jmp
mov
or
leave
jns
or
cmp
jle
mov
jle
or
jae
rorb
int
push
jbe
jle
dec
lea
or
mov
fdivs
or
gs
cmp
ret
bnd
or
dec
mov
push
in
adc
pop
andl
push
shll
aaa
sti
push
adc
aad
popf
fidivs
push
or
les
xor
push
jne
clc
inc
dec
lea
fs
push
les
and
aam
pop
lods
sub
mov
dec
fs
mov
add
movsl
sbb
out
stos
mov
bnd
mov
add
cmp
mov
int
es
or
mov
out
xlat
jns
cmpsl
repnz
mov
inc
cld
xor
add
mov
xor
lea
add
jmp
sbb
cmp
pop
inc
and
gs
mov
adc
mov
jle
jb
insl
push
pop
test
and
jmp
sbb
pop
push
lods
cmpl
add
repz
fistl
pop
lds
cs
in
pusha
repz
mov
and
mov
adc
mov
movsb
push
bound
jle
sub
adc
ljmp
movsb
stc
fcompl
popa
orb
jne
push
not
lods
jo
aaa
rclb
fwait
mov
lea
inc
popf
push
div
adc
addr16
push
loopne
pop
inc
repz
ret
jp
push
sbb
notb
test
xchg
lods
testl
xchg
pop
jl
jg
inc
cmp
ja
in
inc
inc
mov
bnd
mov
mov
into
sub
shll
fucomi
loopne
add
popa
jno
jnp
jnp
or
pop
sub
dec
lret
jle
mov
jle
js
outsl
jae
insb
fisttps
and
aam
mov
mov
xor
sub
pop
and
push
movl
and
lea
aas
pop
xchg
push
sbb
lock
jno
sub
sbb
pop
inc
jg
arpl
mov
push
test
rcrl
shrl
or
and
nop
cmp
cltd
repnz
xchg
ljmp
cmp
ss
fwait
jg
add
mov
cmp
pop
pop
fwait
inc
das
loopne
cltd
jg
repz
std
roll
outsb
lcall
imul
jne
stos
outsl
test
in
mov
sbb
inc
cmp
jmp
test
xchg
push
stos
push
push
gs
adc
or
jle
or
hlt
imul
mov
roll
fs
xor
jp
pop
mov
cmp
xchg
or
mov
clc
cmpb
cltd
jne
jecxz
jnp
inc
mov
pop
mov
mov
or
incb
insl
into
dec
mov
sti
lahf
repz
mov
cltd
into
das
inc
jmp
sbb
sahf
sbb
jae
sbbl
push
cld
push
cmp
cmp
pop
cmp
and
dec
fadd
inc
das
pop
fst
add
out
sahf
loop
dec
data16
loope
ljmp
mov
mov
shrl
fsts
outsl
out
sub
cmp
or
sbbl
call
test
add
add
add
inc
xchg
sub
xchg
jmp
xchg
out
jnp
jns
add
call
fxch
jle
mov
jle
subl
cmpsl
or
clc
xor
in
push
cwtl
cwtl
cmc
pusha
push
push
or
mov
push
xlat
push
imul
mov
loop
int
jg
adc
mov
data16
dec
mov
subb
lret
in
test
bound
sub
inc
jns
pop
mov
arpl
add
enter
push
sub
sbb
jno
mov
jb
mov
fnstenv
icebp
add
lea
mov
cwtl
sbb
out
sbb
lds
rclb
xchg
xchg
cwtl
sti
ret
leave
jmp
sti
sbb
and
outsl
in
arpl
add
dec
jge
and
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
