push
mov
sub
mov
adc
mov
mov
or
mov
sub
push
movl
mov
mov
mov
sbb
mov
and
mov
orl
mov
mov
add
orl
mov
add
mov
jmp
iret
inc
loopne
push
adc
fmuls
mov
ja
sbbl
xchg
mov
jmp
xlat
sahf
repz
in
mov
adc
ss
data16
mov
dec
inc
movsl
mov
pop
inc
xchg
mov
fdiv
ret
orl
adc
movsb
jge
dec
mov
and
cwtl
clc
pusha
lds
popf
mov
inc
push
mov
cli
imul
loop
push
stos
xor
notb
out
mov
cmp
xor
sub
jae
jp
call
jle
push
push
jl
adc
or
cmp
lret
xor
mov
aam
jne
push
ret
movsl
sbb
pop
push
mov
test
das
mov
xchg
xchg
cmc
bnd
push
mov
pop
cli
sub
lods
shrl
mov
enter
xchg
or
std
cmp
loopne
add
adc
mov
mov
sbb
ret
mov
cmc
subl
cmpsb
sbb
jnp
dec
stos
or
std
sub
jmp
stc
mov
xchg
cltd
mov
sbb
lods
jle
das
and
aaa
sub
ret
stc
mov
lods
in
and
mov
stos
fdivs
fcompl
adc
rclb
jg
inc
or
xchg
push
push
leave
hlt
imul
dec
mov
adc
ljmp
fwait
cmpsl
sub
xor
movsb
add
fisttps
arpl
fdivs
or
xor
push
push
and
xor
pusha
loop
mov
push
jne
adcl
insl
enter
mov
stc
cmp
lahf
jbe
add
or
cld
xchg
jmp
in
call
call
outsl
dec
mov
mov
push
lahf
ds
in
xor
cmp
sub
jae
nop
mov
cltd
ror
ret
movsl
mov
or
sbb
testl
leave
dec
std
pop
arpl
fs
mov
aaa
jae
icebp
fucomi
ret
cwtl
data16
std
xchg
imul
fwait
inc
pop
push
inc
cwtl
cld
and
int
test
ds
bound
shrb
pop
sbb
pushf
aam
scas
ret
jne
jmp
lret
lea
dec
cmp
lret
arpl
jbe
mov
jbe
popf
mov
stos
mov
les
mov
sti
mov
mov
lcall
sbb
xchg
cli
cmp
cmc
or
jmp
pusha
sbb
sbb
idivb
in
sub
insl
mov
xor
fs
pop
aad
cld
pop
test
bound
cmp
js
or
popa
dec
dec
mov
dec
shll
test
jns,pn
mov
lea
cwtl
mov
xchg
lods
incb
nop
sahf
push
sahf
outsb
into
lods
int3
enter
jns
div
shll
xchg
mov
dec
dec
or
shl
and
divl
std
or
mov
daa
xor
js
and
mov
pusha
movsb
adc
nop
and
lods
cli
out
addr16
icebp
xchg
fdivs
push
popa
sbb
rorb
sbb
inc
mov
xchg
bound
push
daa
dec
call
push
imul
mov
jmp
loop
outsb
cli
lcall
mov
mov
push
lock
test
jnp
xchg
cmpsl
or
fucomi
mov
pop
out
xchg
pop
mov
jbe
inc
ds
add
cmpsl
lock
xor
inc
xchg
subl
inc
pop
mov
out
scas
mov
lret
loope
stos
loopne
pop
mov
add
xchg
out
mov
pusha
aad
std
sarl
or
dec
mov
in
popf
mov
xchg
out
xor
jl
xor
add
sub
dec
lods
dec
in
rorb
and
adc
mov
cli
rcll
xchg
mov
inc
pop
xor
leave
xlat
scas
adc
addr16
push
call
dec
push
jns
ret
insb
mov
dec
and
or
xchg
and
or
mov
imul
sti
std
sub
jmp
mov
sub
lahf
scas
pop
arpl
test
ret
or
xchg
pushf
push
icebp
es
fnstenv
jns
and
push
clc
mov
aas
ficoml
mov
std
stc
cwtl
jecxz
nop
scas
loop
loop
sbb
add
jbe
xorl
fimuls
fildll
add
lods
push
jl
push
int3
cwtl
bound
jo
mov
in
pushf
rcrl
add
int3
mov
cli
sbb
repz
and
andl
cmp
in
push
fldenv
adc
jns
pushf
iret
jg
cmp
jl
push
inc
push
lcall
jg
rcrl
adc
add
push
cmpsl
cmc
movsb
xchg
xchg
mov
push
mov
insl
jno
ljmp
fildll
push
shll
negl
scas
rclb
and
pusha
pop
rcr
xchg
das
fdivrl
imul
fwait
mov
xchg
scas
mov
test
add
ja
pop
mov
cmp
or
outsb
inc
cmc
sbbl
cld
shll
outsb
jnp
mov
movsl
fnstenv
outsb
dec
into
lods
adc
rcrb
sub
sahf
icebp
ljmp
mov
loopne
outsb
xchg
xchg
dec
cmp
and
lahf
or
aam
push
xlat
and
jmp
sub
or
test
cmp
stc
gs
call
scas
imul
pop
mov
inc
xchg
sbb
lret
jcxz
sub
adc
fyl2x
and
push
push
sbb
mov
lea
mov
pusha
dec
imul
int3
xor
aaa
fsubs
in
rcrl
clc
decb
ja
dec
push
leave
push
rcll
add
sub
mov
int
add
lds
cld
pop
lea
sub
cmpb
mov
sarl
leave
fs
jne
lcall
loopne
xchg
ret
enter
outsl
inc
pop
and
in
dec
arpl
push
loop
ja
mov
mov
xor
dec
inc
je
mov
test
inc
dec
nop
ret
mov
pop
es
inc
inc
fs
orl
lahf
inc
iret
in
dec
cmp
mov
test
dec
mov
mov
adc
fwait
xchg
pop
std
je
dec
ds
pop
pop
cmp
arpl
lret
js
dec
nop
lcall
dec
psrld
mov
add
cwtl
ret
sahf
jb
sub
push
movsb
push
adc
push
jbe
adc
outsb
pop
lahf
dec
popf
icebp
loope
test
mov
test
push
jmp
pop
xchg
jg
cmp
dec
xor
cmp
xchg
enter
add
insb
and
sbb
das
popf
jo,pn
push
mov
inc
mov
mov
mov
addl
sub
notl
mov
movl
sbb
add
mov
not
orl
orl
cmpl
movl
mov
jmp
mov
jg
pushl
pushl
call
sbb
sbb
sub
or
orl
lea
adc
mov
or
mov
and
mov
xorl
mov
adc
add
mov
dec
mov
mov
adc
jmp
mov
xor
js
dec
mov
ja
ficoml
push
jo
pop
xchg
lcall
loopne
js
out
and
sbb
or
jb
jg
jp,pn
fadd
and
into
lcall
jb
sbb
or
add
fistpl
test
dec
add
inc
out
and
sub
lods
jge
adc
repz
mov
jb
and
call
aaa
sub
pushf
mov
sbb
lea
aaa
xchg
mov
movsl
push
mov
insb
jns
dec
push
mov
dec
mov
xchg
testl
cmp
icebp
das
or
mov
jo
xor
mov
or
push
sub
cmp
jbe
rcrb
lock
lea
push
cld
cs
orb
sbb
sbb
jle
jnp
nop
rorb
push
jnp
cmp
dec
add
mov
icebp
rorb
jecxz
and
call
fcomps
jle
cmpsb
icebp
push
rclb
bound
xchg
dec
cld
lea
pop
loop
jae
icebp
sbb
stc
or
push
fisttps
cmpsl
push
call
cmp
iret
push
cli
lock
insb
cwtl
xlat
sbb
cmp
dec
mov
cmp
flds
sahf
mov
ja
lret
call
ss
insb
repnz
pusha
mov
js
stos
cmp
jg
lds
imul
sti
outsl
push
push
cmp
push
shlb
inc
xchg
cs
xchg
push
movsb
dec
pop
int
lea
jg
xchg
sub
out
sub
and
mov
pop
cwtl
testb
je
cli
and
scas
inc
and
fisttpl
jae
dec
ds
fsubrs
fists
addr16
aad
in
lcall
repz
imul
ja
movsb
dec
jnp
fdivl
adc
fistpl
xor
test
fdivrs
in
mov
std
sbb
out
push
aad
mov
pop
xchg
andb
jae
or
in
scas
sub
ds
pop
imul
mov
scas
dec
inc
or
mov
lods
mov
push
pop
or
iret
inc
cwtl
scas
imul
insb
js
cmp
fxch
xor
dec
popf
dec
or
sahf
and
clc
xor
ljmp
pop
pusha
stos
xchg
or
inc
int
mov
scas
in
js
pop
sbb
movsb
adc
mov
xor
dec
sbb
jno
rcl
xchg
ret
in
sbb
scas
orl
test
adc
insb
mov
rorb
pop
andb
movsl
push
popf
and
popa
and
mov
push
dec
xor
mov
xor
out
jp
outsl
mov
in
sbb
mov
into
lods
xchg
fwait
daa
jmp
sti
fimuls
and
xchg
jg
rcl
into
cmp
loopne
mov
stos
mov
mov
dec
or
out
xchg
and
jle
notb
xchg
mov
inc
jno
inc
xchg
ds
mov
lea
sbb
and
cmp
jb
adc
sub
cltd
es
outsb
adc
add
in
xchg
push
adc
add
push
cmp
mov
fnstenv
xchg
lcall
adcl
inc
rcrb
adc
sahf
fcom
mov
xlat
rcll
adc
adc
enter
lahf
fidivrl
jbe
rcrb
dec
clc
mov
scas
movsb
jo
divb
flds
fnsave
push
xor
mov
mov
xor
mov
es
roll
shl
cmp
inc
bound
dec
mov
mov
je
jg
aam
mov
pop
lahf
xchg
sbb
push
roll
enter
in
or
pop
rcl
roll
lock
fiadds
in
lods
in
repz
push
icebp
fwait
jne
mov
fidivrs
loope
cmp
xchg
out
adc
cs
mov
inc
cmp
dec
ret
jg
cmp
test
pusha
mov
mov
ss
ja
sbb
inc
push
adc
addl
into
xchg
jne
or
cld
lds
xor
mov
je
push
ss
js
not
ret
sub
mov
xchg
sub
int
test
pushf
mov
nop
cmpsb
pusha
repnz
in
dec
xchg
out
mov
repnz
stc
xchg
fimull
mov
jmp
jo
repz
or
xor
sub
sarb
lods
cmc
xorl
sarb
push
pop
xchg
cmp
loopne
js
test
in
push
add
loop
sbb
movsl
out
mov
mov
out
xchg
imul
cli
cmp
add
stc
movsl
mov
dec
out
add
popa
pop
adc
lock
add
mov
out
cltd
test
xor
cmpsl
test
std
lret
sub
push
dec
and
push
cmp
pushf
gs
cltd
psubq
cli
call
jo
inc
lcall
sub
cmp
cld
test
inc
lea
adc
fs
cmp
adc
dec
cld
mov
jae
frstor
push
xlat
lea
mov
inc
nop
sahf
add
popf
addr16
dec
xchg
or
mov
gs
rorb
and
xor
enter
push
ret
dec
add
mov
xrelease
xchg
add
sbb
or
shl
xchg
lods
adc
dec
pop
adc
outsl
mov
movsb
inc
inc
pop
xchg
les
repnz
add
xlat
mov
pop
xchg
cmp
inc
add
es
cld
daa
push
jmp
mov
jl
adc
mov
leave
adc
rcrb
add
adc
pop
adc
jbe
dec
test
out
xor
sbb
or
scas
mov
rclb
sbb
mov
sbb
push
push
lret
sarb
push
inc
jg
movsl
subb
bound
xor
jp
outsb
xchg
inc
push
cld
in
jbe
mov
mov
push
filds
pop
aas
push
pushf
push
jg
fldlg2
cmc
inc
xchg
or
push
dec
sub
stos
jns
lods
lret
adc
jae
or
or
push
in
aam
dec
stos
xor
jnp
out
ja
push
jae
sbb
gs
in
lods
daa
xchg
pop
mov
mov
out
xor
out
jnp
sbb
jg
add
push
xorl
push
mov
mov
pushf
jmp
adc
pop
push
je
xchg
jnp
sbb
xchg
out
sub
or
loopne
in
or
addb
adc
scas
dec
js
jae
mov
add
pop
inc
outsb
pop
cmp
pop
mov
mull
clc
push
adc
cmp
add
aam
test
icebp
stc
push
pop
lock
jecxz
adc
cmpl
xchg
and
loope
mov
cmc
dec
clc
fldcw
je
lods
insl
lock
push
nop
dec
addr16
xor
into
clc
jmp
mov
in
ds
mov
shrd
adc
shr
mov
jmp
mov
lock
popf
mov
ret
dec
and
ja
in
push
mov
loope
jo
mov
push
adc
push
or
mov
das
dec
shlb
cmp
aam
jl
stos
ret
lret
dec
fnstsw
lods
jne
add
inc
push
pop
xchg
or
and
jecxz
jl
fisubrl
xchg
and
push
imulb
xchg
addr16
and
push
pop
mov
sahf
bound
xor
pop
push
push
movsl
pop
hlt
inc
jne
imul
or
ja
pop
sub
test
pop
and
imul
loope
pusha
hlt
cmp
xor
loopw
pop
enter
popa
or
ljmp
xor
jmp
xor
xlat
add
in
sbb
lcall
addr16
cmp
cmpsl
pop
dec
shll
ds
add
jb
mov
stc
insl
loop
js
mov
je
push
cwtl
cli
jp
and
cwtl
lock
mov
or
into
lock
ret
xor
mov
push
or
add
and
das
add
adcl
pushf
inc
mov
subb
mov
xchg
dec
push
lret
in
xor
sbb
add
jle
sbb
inc
jns
adc
mov
test
clc
mov
not
cli
ret
repz
push
pop
loope
dec
cmpb
ljmp
push
lahf
xchg
push
cmp
sub
pop
aam
xchg
stos
loope
or
xor
jbe
sub
ret
xchg
iret
out
test
jns
js
sub
cli
daa
in
push
hlt
dec
mov
inc
push
xchg
rcl
lods
add
cmp
subb
sbb
inc
fldenv
sbb
ret
mov
dec
outsl
pop
adc
jp
lret
nop
xor
adc
mov
adc
lock
insl
or
xor
push
dec
sbb
in
mov
cmc
dec
xlat
sbb
jmp
mov
sbb
jmp
cmp
sub
push
enter
lcall
jo
jae
cld
ljmp
xor
pusha
push
pop
add
cltd
fs
insl
mov
ds
pop
fdivs
mov
mov
int
fdivl
testb
shl
mov
daa
vcomiss
dec
clc
fsubrs
adc
cld
mov
cmp
call
or
mov
data16
or
sbb
gs
lea
roll
add
adc
in
or
jg
sub
adc
fcoms
mov
idiv
cltd
mov
lods
xor
call
mov
mov
or
or
imul
adc
adc
sbb
mov
insl
xor
add
test
addr16
pop
scas
jmp
mov
in
inc
mov
jns
shlb
negl
add
lods
test
stos
cmp
rolb
lock
daa
in
adc
hlt
push
push
mov
push
sub
test
lock
in
mov
pop
ret
in
xchg
loopne
cmp
sub
movsl
mov
xlat
cmpsb
dec
fwait
sti
jo
in
xor
cmpsl
or
movsl
stos
or
mov
or
fistps
push
sahf
repz
jmp
inc
das
or
arpl
jae
loop
insl
push
aas
pushf
sub
jecxz
sub
testl
xchg
sti
mov
xchg
ret
mov
mov
adc
cmp
inc
or
adc
dec
jo
lret
pop
out
pushf
mov
jl
xor
push
ds
jo
insb
inc
xchg
clc
addr16
jo
cmc
cs
xchg
pop
adc
aam
mov
repz
insl
cmpsl
dec
adc
mov
cli
and
mov
push
jp
xchg
dec
rorl
jge
incb
mov
jae
pop
xlat
ret
sbb
mov
fsubp
in
sub
cmpb
mov
aaa
ja
pop
pop
jno
push
sub
ror
mov
cs
ret
inc
jp
sbb
jp
pop
lea
xchg
stc
jno
movaps
sbb
cmp
sub
mov
daa
pop
add
popa
add
cmp
xchg
mov
out
aad
clc
cmp
sub
nop
fcoml
push
xlat
add
lcall
arpl
inc
adc
out
les
lret
in
stos
loope
mov
loop
repz
lahf
sub
cmp
mov
jmp
gs
fwait
ss
cmp
fdivrs
clc
cld
mov
lret
jle
jecxz
mov
xor
add
rol
push
cli
lods
les
push
imul
add
scas
test
ja
push
std
adc
push
insl
outsb
incl
outsb
in
mov
and
adc
loopne
clc
pop
fninit
aas
mov
mov
jbe
out
add
sbb
and
fidivs
and
outsl
gs
and
cmp
std
dec
mov
test
iret
out
pop
in
cld
shlb
orb
dec
cmp
jle
push
fists
adc
cmp
inc
push
js
data16
inc
pop
dec
and
ret
push
xor
sbb
dec
cli
and
mov
cmp
xchg
in
sbb
in
jge
mov
sbb
out
mov
leave
or
data16
arpl
jle
lds
lock
in
dec
pop
pop
lret
xchg
in
xchg
imull
cmp
lret
add
ret
hlt
jecxz
ja
mov
pop
or
dec
push
adc
mov
clc
pop
flds
leave
loop
dec
hlt
int
push
test
cmp
mov
add
js
xor
lds
push
mov
jno
mov
mov
fdivs
adc
cli
stos
add
shlb
xchg
inc
push
movsb
int
adc
mov
js
push
cmpsl
and
mov
arpl
pop
and
cmp
fldl
inc
rcll
popf
dec
leave
xlat
push
data16
xlat
stos
out
jl
mov
leave
xor
cmp
cmp
pop
test
mov
inc
ret
jne
stos
or
dec
mov
gs
sbb
cmpsl
mov
test
or
xlat
mov
adc
fsubs
jno
adc
mov
ret
dec
push
xchg
ja
sub
add
ficompl
in
xor
fimuls
mov
data16
orb
mov
cwtl
out
xchg
icebp
push
add
test
fnstenv
in
dec
inc
jns
inc
lret
pop
push
and
add
pusha
dec
mov
stos
cltd
mov
pop
add
scas
xchg
hlt
popf
inc
out
test
push
aaa
inc
add
add
xor
adcl
xor
or
cmpl
movl
movl
movl
jmp
movl
not
jg
pushl
push
push
push
pushl
push
pushl
call
sub
xorl
andl
andl
addl
addl
adcl
movzbl
adc
jmp
sti
loopne
stos
dec
or
xor
lods
jnp
mov
add
xchg
pop
nopl
stc
int3
or
push
sub
mov
insb
jbe
sbb
xor
cmc
dec
push
mov
mov
cmp
ret
jo
aam
or
push
in
push
icebp
sbb
sub
das
in
sbb
cmp
clc
pop
mov
movsb
cmp
lods
leave
iret
and
xchg
mov
inc
sub
lahf
ja
dec
cmp
repnz
and
mov
adc
fmull
mov
and
sub
mov
test
fldt
mov
hlt
adc
xchg
subb
pop
jmp
mov
push
lret
pop
and
inc
sbb
in
mov
or
pop
sub
xchg
pop
hlt
and
sub
shrb
inc
mov
dec
sbb
mov
mov
add
jo
dec
mov
or
dec
inc
xor
and
push
data16
sub
imul
mov
push
out
aam
das
aad
ljmp
loopne
push
xor
and
lcall
mov
mov
jg
in
or
jae
push
out
push
adcl
dec
pop
call
mov
pop
mov
aas
loopne,pt
sbb
in
inc
insb
sahf
mov
mov
add
enter
lret
cwtl
xchg
les
hlt
sbb
mov
adcb
adc
dec
mov
ljmp
or
or
and
ljmp
mov
jecxz
jle
jnp
in
shll
int3
xor
dec
cltd
popa
fmull
jge
and
shll
fneni(8087
adc
jb
outsb
xor
sahf
in
sbb
aad
icebp
xchg
aas
movb
push
js
cmp
xchg
fwait
stc
out
add
pushf
cmp
dec
inc
leave
arpl
fidivrl
sti
and
add
pop
mov
pop
loop
stc
xor
enter
cmpsb
aam
sti
inc
sarb
test
inc
and
fwait
cwtl
mov
shll
addr16
addl
mov
push
inc
dec
or
xchg
xchg
sub
sbb
stos
aad
sbb
stos
test
lcall
lock
mov
jle
push
insb
push
xor
mov
sbb
repnz
enter
sub
mov
fmull
rorl
div
cs
mov
cmp
sti
mov
mov
jg
or
ljmp
lea
dec
mov
fisttps
mov
gs
test
stos
inc
stos
sarl
and
loop
popa
fcoml
fldcw
ss
ss
fcomps
mov
pop
xchg
cmp
out
jl
pop
jo
inc
clc
addr16
lahf
sbb
and
adc
divl
clc
cmc
inc
add
adc
fmull
shr
pop
jle
out
mov
aam
inc
pop
cmp
inc
mov
xor
lret
test
movsb
pop
mov
fbld
fsub
jno
testl
adc
cmp
cmpsb
leave
sti
add
adc
mov
jbe
test
jecxz
sarl
js
cli
hlt
push
add
mov
ja
shr
std
mov
ficoms
cltd
xor
inc
stos
inc
rcrb
push
adc
dec
dec
push
aad
jmp
in
mov
out
cmp
aaa
mov
shlb
stos
sbb
lahf
loope
jns
mov
sub
mov
fwait
call
lret
push
rcrl
rcrl
outsb
pop
push
shr
sub
jnp
sbb
in
jmp
movsl
sub
popl
fdivrl
es
lods
mov
add
cmpsl
mov
jo
jle
aas
imul
fistps
push
mov
data16
test
andb
fmull
pop
inc
jns
mov
pusha
adc
fldl
and
mov
pop
loop
fldt
clc
and
push
stos
lds
in
imul
adc
jg
xor
aam
inc
xchg
cltd
subb
inc
dec
and
into
xor
outsl
scas
jmp
mov
sbb
pushf
or
and
and
mulb
es
push
mov
out
jecxz
xor
mov
push
cmpl
stos
lods
cmpsl
dec
scas
cmp
fistps
fcoml
dec
out
push
pusha
popf
dec
jae
subb
sbb
xchg
sahf
push
pop
in
pop
add
jo
mov
out
xchg
push
in
aas
mov
fiadds
xchg
jo
push
movsb
add
push
insl
mov
sbb
inc
xor
xchg
pusha
shr
fcompl
nop
test
mov
cltd
add
jecxz
aad
pop
loop
rcr
pop
pop
cld
cmpsl
dec
lcall
jmp
add
sbb
mov
add
in
hlt
add
shlb
dec
push
fisttpl
out
repz
sti
xchg
aaa
imul
sub
pop
or
add
enter
sub
les
iret
imul
jl
add
outsl
insl
ret
sbb
popl
inc
sar
pop
push
pop
lret
mov
push
mov
into
push
out
dec
cmp
shlb
mov
hlt
mov
push
daa
or
xlat
aad
push
sbb
cmp
mov
cltd
push
and
rcrl
jae
dec
pop
subb
int
pop
loop
fs
lahf
in
mov
orb
sbb
pop
push
les
jmp
mov
mov
sbb
fidivrl
icebp
push
fisubrl
pop
orb
das
addr16
cli
mov
jmp
ficoml
popa
les
xchg
cmp
adc
inc
lret
pop
sub
leave
push
push
xor
sub
or
xchg
cmp
frstor
cs
push
test
pop
scas
scas
sub
fwait
icebp
cmp
sub
sub
or
mov
sbb
incl
sub
pop
mov
ss
mov
test
aad
pop
lcall
fdivr
xor
fwait
xchg
shlb
xor
repz
mov
popf
mov
icebp
or
insl
scas
pop
hlt
out
inc
leave
cwtl
sub
icebp
mov
aad
cmc
divb
shrl
cli
pop
data16
jp
fwait
and
in
or
pcmpeqw
iret
test
test
jne
hlt
bound
and
pop
xor
les
cmpsb
fldt
jb
fidivrl
cmc
xchg
stos
sub
in
mov
out
cltd
adc
imul
or
sbb
aaa
clc
gs
fcomps
and
sub
pop
xchg
in
push
sarb
inc
lret
mov
popa
int
cmp
pop
sub
imul
sub
inc
or
cmp
push
les
adc
movl
movl
sub
movl
movl
and
movl
movl
movl
xor
or
adc
movl
cmpl
movl
mov
jmp
not
jl
push
pushl
pushl
push
call
add
sbbl
add
sbbl
xorl
sbbl
notl
or
movl
addl
movl
movl
movl
mov
or
mov
movl
dec
movl
movl
cmpl
movl
movl
movl
movl
jmp
mov
jge
push
call
movl
orl
orl
add
xorl
xorl
xorl
and
movl
cmpl
movl
mov
jmp
mov
mov
jb
push
pushl
push
push
pushl
push
pushl
push
push
pushl
pushl
call
orl
sbbl
adc
addl
movl
sbbl
movl
add
movl
jmp
and
jnp
sub
mov
out
pusha
push
das
aam
ja
jo
pop
test
fcoml
and
movsb
fbld
movsb
mov
push
stos
xchg
xor
mov
push
or
in
imul
insb
and
sub
dec
cwtl
sti
dec
out
inc
add
mov
sub
js
mov
mov
fsubl
fs
bound
roll
rcl
ds
dec
movsb
pop
imul
mov
mov
adc
xchg
add
xchg
aam
repnz
and
and
xor
adc
jo
dec
xchg
xor
pop
idivb
xchg
insb
test
ret
outsl
mov
fwait
and
jbe
adc
jmp
sbb
icebp
jne
adc
aaa
repnz
add
je
or
clc
inc
push
lahf
inc
mov
mov
mov
sarl
dec
jp
nop
cmp
daa
ret
inc
and
jno
hlt
sub
mov
lock
or
inc
es
add
xchg
das
rcll
sub
mov
mov
nop
adc
scas
aam
pushf
add
xor
aam
je
fdivs
popa
and
xor
jae
mov
popa
jge
in
mov
push
dec
ror
xlat
shlb
call
pop
sub
push
sbb
jo
fistl
arpl
mov
lock
jecxz
xlat
cwtl
add
mov
or
xor
pop
popa
sbb
jno,pt
push
inc
dec
sbb
rorb
fcmovu
cmc
mov
cmp
fisubrs
mov
push
dec
inc
addr16
stc
je
mov
cmp
mov
shrl
jns
and
cmp
mov
lea
push
lea
xor
lahf
push
lea
xchg
loope
add
sbb
or
ja
adc
js
pushf
fidivrl
idiv
and
fdivl
sti
push
jne
int
push
push
cmp
int
and
cmp
mov
add
fcoms
shlb
fyl2xp1
mov
fdivrl
dec
inc
inc
push
mov
dec
jo
inc
pusha
out
xchg
jge
addr16
icebp
dec
mov
int3
cmp
mov
mov
in
xchg
dec
mov
out
sbb
jb
cmp
pop
aam
sahf
ja
loop
pop
sbb
cmp
lret
rcr
sahf
insb
daa
lret
cltd
dec
inc
fwait
xchg
shl
stos
out
dec
pusha
mov
testl
pop
mov
push
dec
fistpll
movsb
andb
sub
sarb
scas
std
pop
movsl
mov
cmp
inc
push
mov
sub
repz
push
in
aaa
sub
sahf
xchg
sbb
fs
in
lea
dec
pop
add
inc
sbb
xor
cmp
fiadds
jecxz
cmpsl
pop
lret
inc
cmp
jnp
jecxz
and
dec
ds
dec
xchg
lret
jae
xacquire
cwtl
fistps
sub
push
mov
lcall
sub
mov
cli
pop
lcall
adc
iret
jp
pop
into
add
hlt
jg
cmp
popa
inc
mov
orl
mov
fidivs
or
push
frndint
jns
in
lret
fisttps
fdivs
xorl
aas
popa
cld
pop
lea
inc
or
xchg
movsl
or
mov
imul
inc
lods
pusha
sub
lods
inc
jbe
mov
pop
cmp
test
jmp
cmc
push
cwtl
jne
push
add
in
jp
xchg
mov
xchg
gs
in
mov
rcrl
idiv
xchg
scas
mov
ret
push
les
xor
mov
arpl
cmp
push
jne
xchg
and
insb
movsb
cmpsb
orb
xchg
xor
fs
sarl
jns
mov
dec
pop
xchg
roll
push
mov
push
les
adc
mov
sub
cld
cli
mov
fidivrs
xor
cmp
add
out
stc
inc
xchg
clc
js
scas
adc
fdivrl
xchg
sub
fldl
xor
shlb
or
stc
or
lahf
adc
enter
test
call
sub
pop
pop
push
push
divb
cli
std
inc
lret
xor
lret
add
je
mov
js
add
xor
inc
movsl
mov
mov
movsb
and
rorb
stos
inc
ds
jae
call
cmp
in
jmp
scas
pop
inc
cli
iret
xchg
ret
pop
xchg
shlb
xor
pop
sub
lods
ficoms
inc
xor
clc
pushf
push
sbb
ret
adc
ret
pushf
lahf
out
xchg
stc
mov
cmpsl
jns
aad
out
sti
add
push
testl
mov
sarb
repz
or
adc
mov
mov
fildll
nop
clc
ja
mov
mov
push
add
push
mov
daa
and
lock
lret
mov
inc
jecxz
outsb
ror
and
add
es
aam
sub
jge
add
cld
flds
lock
mov
add
adc
fdivr
pusha
pop
and
and
call
inc
mov
jg
jae
adc
add
mov
jae
mov
sub
inc
ret
mov
ds
ret
adc
cmp
jmp
dec
rorl
sub
imul
shrb
xchg
jl
pop
sbb
leave
fdivr
cltd
cltd
lock
test
das
mov
adc
inc
jle
and
leave
mov
bnd
ret
pop
cmp
xchg
mov
push
push
mov
cmpsl
idiv
mov
and
pusha
ffreep
fstp
sbb
aam
or
int3
jns
call
inc
sbb
add
int3
into
jle
out
in
sub
fstl
push
aam
xor
popa
stc
xlat
or
push
xor
pusha
rolb
pushf
int3
mov
int
push
dec
mov
push
insl
loope
add
dec
jp
push
pop
add
clc
stos
sub
mov
and
xor
imul
inc
shrl
das
dec
adc
in
sub
out
decb
mov
cs
popa
cmpsb
xor
les
sbbl
mov
add
insb
test
or
xor
xchg
lock
jbe
fs
std
xchg
jnp,pt
xor
scas
orb
mov
out
xlat
jns
inc
mov
in
repz
adc
and
dec
mov
cwtl
xchg
xor
addr16
push
imul
icebp
ret
sbb
dec
or
stos
mov
enter
adc
stc
call
setne
incl
int3
movb
scas
jb
jbe
or
pop
push
add
inc
movl
xorl
movl
mov
xor
movl
not
movl
mov
addl
jmp
in
outsl
dec
gs
notb
inc
test
cmpsl
les
ja
ret
movsl
push
lock
adcb
lcall
lret
hlt
lods
pop
icebp
sub
xchg
outsb
outsb
mov
push
sbb
adc
daa
in
imul
pop
push
mov
mov
pop
aam
popf
pop
lods
iret
pop
pop
test
pop
sub
icebp
sbb
mov
aad
fcmovb
in
mov
mov
dec
sbb
sbb
lea
mov
push
popf
xchg
cmc
jne
aad
ja
insb
fistpl
dec
pop
jbe
mov
fimull
xlat
cmp
mov
test
cmp
push
jecxz
js
jae
mov
push
sbb
ja
addr16
mov
mov
sub
popf
test
jns
dec
lea
adc
push
and
cmp
shrb
cmp
xchg
xlat
xor
or
in
stc
or
mov
or
dec
aam
inc
int3
mull
int3
hlt
call
cli
repz
push
daa
in
scas
ret
push
and
mov
and
fsubs
push
sti
repnz
test
inc
sbb
mov
hlt
lret
aam
push
ljmp
and
fnsetpm(287
idivb
mov
add
mov
mov
mov
in
cmp
sbb
xchg
and
mov
lret
xchg
mov
stos
and
jns
mov
loopne
movsl
fisubl
and
or
and
sbb
hlt
dec
sarb
dec
pop
add
pop
adc
push
cld
sbb
shrb
int
mov
std
sbbl
movsb
or
dec
add
inc
int
mov
cltd
out
lds
insl
icebp
cmpsl
aaa
dec
cld
mov
lock
push
daa
loope
fcoms
dec
in
lds
jo
and
std
movsb
add
insl
rolb
lods
movsl
add
sub
loope
mov
pandn
and
pop
xor
enter
inc
or
dec
pusha
pop
or
mov
cmp
and
push
aad
div
and
cltd
mov
mul
sahf
dec
push
pop
cmp
cmp
insl
sahf
pushw
retw
xchg
dec
sub
fidivl
add
stos
or
cmc
enter
jno
jnp
fstps
push
insl
stos
nop
push
movsl
adc
cwtl
iret
insb
cmp
shl
imul
mov
inc
lea
xchg
outsl
pop
dec
xchg
and
in
hlt
aam
lods
lret
mov
sbb
or
loope
xchg
mov
pop
cs
jns
push
rclb
or
inc
outsb
jg
fstpt
push
lahf
dec
mov
iret
ret
jp
adcb
mov
hlt
mov
in
jbe
sub
inc
sti
arpl
lret
lcall
mov
scas
dec
mov
mov
pop
mov
push
dec
hlt
andb
fs
shrb
jecxz
mov
mov
imulb
push
les
loope
xchg
add
call
fdivs
adc
in
cs
push
sub
imul
xor
fcmovne
bound
inc
push
mov
ds
sbb
add
sub
sbb
and
sub
dec
xchg
mov
dec
sub
add
icebp
or
mov
addr16
jns
pop
push
push
mov
push
push
xchg
test
mov
pop
cmp
icebp
mov
je
fistl
nop
cmp
mov
adc
call
jg
push
stos
and
ds
mov
popf
js
sbb
clc
jl
int
cmc
pop
xlat
das
mov
pmulhw
int
sub
and
aam
stos
mov
imul
inc
pop
into
mov
inc
push
js
cld
pop
sahf
sbb
sahf
scas
jmp
data16
adc
fsts
dec
dec
into
jmp
adc
mov
and
push
scas
cld
stos
jg
ret
test
pop
or
adc
pop
xchg
sbb
test
mov
adc
and
cmpsb
or
jnp
popf
and
cmpsb
inc
out
rcll
xchg
nop
mov
mov
inc
fwait
inc
or
gs
insl
adc
jb
jl
sub
sub
faddl
pop
inc
sub
rcl
das
mov
mov
lea
jne
arpl
ljmp
xor
loopne
or
sbb
test
mov
hlt
mov
cmp
enter
jle
sbb
add
add
jmp
inc
push
int3
cld
inc
mov
dec
xchg
xorl
aaa
cmp
add
bound
push
lds
bound
jns
movsl
fidivrl
cwtl
jne
in
dec
add
push
das
insb
iret
outsb
inc
jge
loope
sub
incl
mov
push
in
mov
inc
jl
cmpsb
jnp
enter
and
sub
addr16
mov
mov
dec
daa
ss
add
pop
aam
xchg
mov
sub
sub
add
adc
jecxz
loop
test
es
mov
fidivrs
into
inc
scas
lret
gs
out
aad
or
in
cmp
pusha
ret
fstpl
imul
xchg
je
xchg
aam
clc
mov
add
enter
test
imul
insb
arpl
popf
cmp
ss
xor
clc
mov
fistpl
imul
gs
jmp
jno
mov
push
xlat
pusha
movsb
mov
jle
insl
xchg
in
ds
push
adc
bound
or
or
dec
pop
sbbl
sbb
out
sbb
out
pop
xchg
sub
mov
jns
fildl
std
and
sbb
jne
sbb
xchg
insl
fidivrl
sub
dec
test
push
bound
dec
pusha
mov
pop
mov
pop
imul
imul
in
in
jno
mov
jecxz
gs
cmp
aam
pushf
movsl
add
fisttpll
out
ret
ret
je
adc
pop
or
aam
enter
into
sbb
scas
and
jmp
mov
test
push
test
pusha
xchg
je
lods
pop
push
jo
ret
jns
aas
imul
mov
out
shrb
and
jmp
daa
mov
xor
bound
iret
add
push
test
stos
cmpsl
push
or
inc
ret
fucomip
lods
dec
pop
lret
push
push
mov
pop
pop
sbb
je
fdivp
nop
xchg
je
arpl
mov
mov
fdivs
testl
lret
adcb
pop
int3
xchg
in
inc
gs
movsb
fistpl
mov
xchg
dec
cmp
popa
mov
test
push
out
pop
rep
mov
push
ficomps
scas
cmpsl
jge
or
insb
jp
mov
and
inc
pop
jmp
in
pop
or
test
invd
xchg
adc
jbe
mov
pop
jmp
popa
lret
jo
cwtl
pop
xor
mov
orl
push
adcl
push
andl
push
push
adcl
call
adc
mov
subl
mov
xor
mov
sub
mov
movl
jmp
mov
daa
xchg
gs
or
mov
ja
inc
mov
jge
xor
sbb
pop
les
enter
enter
lock
stc
cld
xchg
fld1
je
pusha
js
push
fs
ss
inc
sbb
fwait
enter
push
dec
cmp
mov
enter
orb
addr16
ss
push
mov
jnp
ss
jecxz
stos
and
imul
hlt
mov
repz
or
mov
popf
push
cwtl
sub
loope
cmc
dec
jge
sbb
and
outsl
or
jg
mov
add
push
pop
imul
add
mov
sub
adc
insl
pushf
sbb
test
test
pop
shll
mov
dec
cs
adc
in
or
and
ret
shrl
aas
jae
fildll
repnz
lods
fcomip
push
cwtl
push
mov
pop
test
dec
mov
mov
mov
dec
pushf
push
gs
jo
ret
into
int
jle
and
jmp
inc
jns
or
roll
rclb
test
dec
test
mov
xor
repz
int3
pop
push
ret
or
adc
scas
lcall
push
jb
ljmp
mov
test
ret
add
jmp
xchg
fiadds
popf
and
loopne
xlat
sti
pop
int
mov
xchg
nop
scas
mov
jns
jns
mov
mov
xor
shll
pop
push
or
and
bound
pop
xlat
aaa
out
mov
lret
adc
xor
lds
repz
xchg
mov
pop
sbb
push
ss
sub
cltd
pop
movsl
imul
mov
movsl
icebp
fisubrs
lcall
add
cmp
sbb
push
inc
sbb
mov
adc
mov
jp
pop
rcrb
jnp
push
popa
outsb
adc
fsts
cmp
test
push
je
lret
dec
jmp
sub
fdivrs
mov
ja
xorb
aam
out
movsl
enter
roll
je
add
dec
addr16
mov
stc
shrb
popa
call
outsl
lcall
mov
cmp
adcb
and
and
add
outsb
dec
loopne
movsb
lahf
mov
sahf
jg
test
adc
test
cld
stos
sbb
std
add
jne
jnp
push
imul
xor
jb
pop
sub
lock
pop
cmp
movsb
adc
shll
shrb
leave
pushf
push
cmpsb
jp
call
cmpsw
xor
int3
push
ret
mov
jns
loop
in
pop
cltd
jb,pt
out
shlb
xorb
loopne
jle
pop
pusha
mov
jnp
out
or
and
jno
push
in
arpl
insl
mov
mov
stos
mov
jmp
lods
insb
push
pop
adc
xchg
push
inc
adc
bound
adc
sbb
mov
jno
xor
add
inc
loopne
popa
pop
leave
mov
cs
cltd
or
jo
cmp
ds
lret
shlb
cmpsb
mov
push
cltd
dec
mov
into
movsl
lcall
aam
pop
fnstsw
jbe
push
dec
mov
sbb
fiaddl
mov
mov
cmp
push
or
in
mov
add
fimull
mov
and
mov
test
push
daa
push
mov
das
movsl
sbb
xor
clc
cmp
push
leave
mov
mov
xlat
hlt
dec
mov
mov
inc
sbb
clc
push
push
mov
push
adc
imul
or
sub
or
add
push
or
aad
sub
xchg
mov
xor
adcl
cmc
addr16
fwait
inc
stos
sub
rcll
cmp
shrb
sti
push
scas
mov
mov
inc
sbb
cmpsl
rcll
sub
lods
sub
ljmp
pop
cmp
mov
test
arpl
fiaddl
and
add
jbe
push
std
rolb
rcll
pop
stos
sbb
adcl
add
rol
adc
call
ret
cmpsl
mov
xchg
xchg
add
into
xchg
adc
add
inc
pop
jle
test
jns
xchg
icebp
xor
jne
push
xchg
cmp
rclb
jle
rcl
or
jnp
push
fs
jo
xchg
mov
stc
push
sbb
test
aam
jmp
scas
xchg
aad
mov
mov
inc
rcrb
sub
jb
mov
lods
outsl
pop
sub
mov
ret
sbb
push
push
mov
clc
popf
push
lahf
enter
mov
xor
aad
vprotb
mov
dec
cwtl
xor
daa
push
adc
icebp
sbb
nop
idivb
mov
or
mov
popl
inc
mov
cli
lret
mov
jg
iret
addr16
mov
sub
scas
jnp
jmp
xchg
lods
rol
cli
jae
aad
xor
mov
lods
xchg
scas
mov
sbb
push
mov
shl
sahf
or
or
loopne
cs
loopne
pop
enter
pop
test
pop
mov
adc
jmp
scas
lods
jge
dec
cltd
jmp
inc
jo
int3
cmp
jnp
clc
adc
cmp
ficompl
cltd
movsb
es
push
ds
and
jbe
pushf
incl
imul
mov
sarb
mov
hlt
out
xchg
inc
dec
xchg
pusha
pop
sbb
mov
in
xchg
enter
push
cli
cli
hlt
xor
ret
inc
test
sub
sub
dec
sbb
xor
lahf
push
mov
imull
fs
add
xor
loope
jp
sub
dec
lret
or
lcall
lods
ret
enter
cmpsb
pusha
in
cltd
pop
test
xchg
data16
cmp
sahf
push
data16
inc
iret
stos
xchg
pop
aad
push
dec
mov
push
inc
imul
xchg
outsl
outsb
leave
cmp
outsl
loopne
push
addr16
cmp
inc
cli
jnp
int
or
pop
sub
xchg
mulb
dec
rcll
cli
push
movsl
xor
lock
sub
cmp
mov
cltd
cmpsl
mov
clc
cmpsl
sbb
dec
aad
fstl
fstsw
testl
mov
sbb
test
sub
push
scas
cmp
adc
jge
and
daa
loope
push
inc
xor
dec
jb
xchg
inc
xor
xor
or
mov
in
cmp
std
jmp
sbb
unpcklps
data16
hlt
daa
imul
jg
add
lahf
inc
fsubrs
or
fcoms
cmp
dec
clc
dec
pushf
dec
xor
cmp
scas
in
and
iret
sbb
rorl
adcl
lea
mov
mov
or
subl
and
mov
or
adcl
xor
movl
cmp
movl
jne
mov
and
mov
shrd
adcl
shr
adc
mov
mov
orl
shl
xor
andl
jmp
sub
sub
sub
adc
xchg
mov
movsb
ja
lahf
lds
mov
test
scas
xor
xchg
popa
in
xor
sti
dec
in
das
adc
insl
mov
jmp
mov
xor
dec
je
push
fldln2
xchg
mov
rolb
cltd
and
mov
xor
repnz
mov
lea
hlt
mov
pusha
inc
sub
xchg
roll
iret
insb
mov
xlat
pop
pop
xchg
push
in
jne
pop
lcall
aad
out
xor
and
push
pop
es
inc
xor
mov
or
mov
jg
or
adc
dec
xchg
stos
pop
mov
add
inc
movsb
nop
insb
push
lret
ja
jns
dec
scas
sbbl
dec
cmp
in
mov
rcrb
dec
shll
mov
dec
es
ret
mov
bound
mov
int3
in
into
mov
repnz
inc
sub
aaa
es
jp
mov
add
cltd
dec
inc
popf
add
je
std
repz
nop
xor
dec
movsl
push
push
sbb
or
ds
mov
xchg
mov
cmc
add
fwait
ljmp
inc
ja
pop
fists
fidivl
cmp
adc
fnstcw
call
les
xchg
cli
cmpsl
scas
jl
out
push
iret
xor
push
pop
cs
xor
loopne
lea
mov
movb
ret
sbb
cmp
sub
inc
inc
mov
xlat
jecxz
sbb
clc
push
mov
sbb
dec
aaa
insb
mov
inc
sbb
fs
push
out
incb
inc
arpl
or
lea
stc
jecxz
lods
sub
xor
jmp
jle
cltd
scas
ret
sub
in
cli
jo
mov
sub
dec
clc
sbb
sub
ljmp
push
test
mov
sbb
push
jp
mov
mov
rcll
jmp
call
xor
rorb
out
sub
cmpsb
outsb
mov
inc
add
das
je
xchg
insl
add
xchg
test
pop
insl
shll
jl
mov
jns
movsb
sub
pop
adc
das
test
jno
xchg
cwtl
fcomi
nop
mov
xchg
adc
popa
cwtl
mov
insl
push
sub
in
imul
xchg
and
fcoms
or
mov
imul
addr16
shll
cmp
xor
lods
jne
mov
adc
dec
int3
cmp
test
pushf
or
cmp
adc
adc
in
fimull
aam
cmc
pop
mov
mov
lcall
mov
push
lcall
add
push
aam
push
insb
les
aad
loope
jb
scas
and
bound
adc
jnp
push
mov
dec
xchg
mov
xor
xor
aas
loope
loopne
insl
es
in
into
xchg
les
clc
out
dec
out
test
mov
or
shrl
pusha
push
mov
cmp
fildl
mov
mov
sbb
daa
ja
negl
jle
mov
stos
jbe
mov
mov
lret
pop
aas
cmp
pop
enter
xchg
push
xchg
pop
mov
cmp
jbe
cmpsl
pop
aas
stc
popf
dec
dec
negl
inc
cld
mov
dec
cmp
push
mov
mov
mov
cmpl
je
jae
test
lods
cmp
cmpl
sbb
and
pusha
and
fsubrs
cmp
jae
lret
ljmp
jbe
nop
mov
xchg
mov
insb
jg
fldenv
dec
push
ret
adc
cwtl
imul
add
outsb
mov
out
pxor
cwtl
push
fdivl
lret
dec
imul
lahf
out
pop
jbe
pop
test
jnp
and
sbb
xchg
imull
lds
je
movsb
inc
mov
les
outsl
loop
aaa
jbe
in
or
cltd
inc
gs
lods
jno
cmpsb
xor
dec
and
xor
or
xchg
subb
cmp
je
pop
adc
sahf
std
mov
inc
jne
pop
fiaddl
nop
xchg
jne
mov
jb
out
repz
rorb
lods
inc
aaa
mov
cmpsb
mov
add
push
mov
scas
ret
mov
jbe
adc
jbe
jle
aad
inc
mov
leave
imulb
add
jno
daa
aas
pop
scas
adc
jmp
mov
sub
inc
js
cli
jo
push
ss
cmp
inc
dec
mov
mov
movsl
ror
clc
sti
jo
bound
push
jae
lea
pop
jle
inc
das
push
lods
xor
mov
lods
enter
dec
in
es
pop
lret
xchg
inc
cli
cli
lods
sahf
sub
enter
outsb
jae,pt
test
jge
push
pop
stos
or
js
scas
fists
ss
and
std
stos
aas
jns
lret
pusha
test
xor
mov
xchg
jb
mov
aaa
dec
in
sub
dec
sbb
xor
lds
or
jge
cli
xor
aas
adc
lcall
xchg
sahf
test
mov
ljmp
popa
movsb
cmp
mov
leave
out
pop
dec
fs
in
shrb
xor
mov
mov
pusha
inc
ret
xchg
mov
push
mov
xchg
mov
add
data16
mov
aam
mov
fs
enter
jp
pusha
out
repnz
dec
jge
add
xchg
jle
mov
aas
repz
xor
rol
sahf
in
cwtl
hlt
or
mov
stc
add
rcl
jp
cmp
pop
dec
push
hlt
lods
jle
pop
adc
popa
daa
pop
fdivrp
push
xor
mov
add
mov
out
mov
les
mov
dec
sbb
mov
js
pop
dec
repz
fnstenv
shl
vcvtsd2si
shlb
fs
insb
xchg
test
sbb
sbb
mov
rolb
ja
xor
xor
add
sbb
jae
add
repz
xchg
das
inc
push
lods
roll
inc
cltd
sub
mov
inc
add
mov
loop
jmp
test
or
xchg
mov
ret
orl
in
jbe
adc
lock
pop
movsl
ds
pop
aad
adc
adc
mov
add
loope
mov
jne
lret
aaa
xchg
or
test
xchg
push
mov
aad
scas
movsw
mov
cmpsb
inc
cli
out
push
subb
pop
mov
out
out
das
sbb
jp
enter
les
dec
add
inc
mov
dec
sbb
xchg
dec
int
sahf
aam
cld
fcompl
iret
push
inc
lock
add
or
add
or
das
movsb
add
fsubr
lahf
pop
out
mov
or
mov
movl
cmp
jne
notl
mov
mov
xor
cmpl
mov
movl
mov
jmp
mov
movl
jl
push
call
xor
or
movl
movzbl
xor
and
mov
xor
mov
xorl
mov
jmp
daa
mov
or
sub
mov
xchg
xchg
push
mov
in
test
dec
jno
sub
inc
out
pop
sub
data16
imul
movsb
dec
data16
xchg
hlt
cmp
mov
pop
push
rcrl
test
and
fdivrp
push
outsb
mov
movsb
jge
push
cltd
jle
fld
xchg
test
lcall
adc
fbstp
mov
cmpsb
and
xchg
cmp
stos
dec
xchg
cmpsl
jge
daa
pop
nop
es
lea
xlat
jns
mov
nop
lods
scas
imulb
ret
jne
sub
add
push
fwait
pop
sbb
xchg
mov
jne
cs
into
mov
fmuls
cmovae
push
andps
sbbb
sysenter
cmpsb
xchg
xchg
adc
test
mov
inc
daa
mov
inc
stos
enter
and
xchg
nop
sub
push
xchg
add
mov
add
in
push
out
pop
hlt
in
add
cmp
dec
loope
js
mov
pop
xor
test
push
mov
xorb
nop
push
fwait
inc
pop
inc
or
pop
adc
clc
mov
loop
xchg
mov
jg
ret
lods
jge
mov
add
push
xor
sub
out
add
dec
fisubs
int3
jno
xorl
cld
out
push
loope
adc
outsl
mov
mov
push
push
scas
ss
sbb
test
pop
jle
dec
cmpsb
xchg
adc
jg
dec
insb
pop
sarb
cmp
dec
mov
in
testl
call
xchg
xchg
icebp
sbb
xor
or
mov
iret
mov
in
aas
in
out
mov
mov
push
pop
sub
push
cmpsl
pop
out
stos
add
fsubrp
xor
sub
mov
cmp
ss
roll
inc
or
jb
sub
cmp
pushf
fsubr
mov
mov
xor
pop
repz
mov
sbb
add
enter
add
lret
test
clc
daa
or
lcall
into
jns
cmp
sbb
lds
jmp
xchg
stos
lock
fcoml
lahf
jmp
or
mov
lahf
cltd
lods
pop
jmp
xchg
jno
mov
push
call
lret
dec
movsl
inc
push
stc
jb
mov
sbb
nop
stos
and
test
mov
sbb
or
inc
cmpsb
adc
dec
addl
hlt
xchg
insl
and
filds
jnp
mov
jmp
xchg
inc
push
int
bound
mov
push
push
in
lds
ret
lods
cmp
pop
cmpsb
push
lods
push
mov
jo
cld
pop
hlt
adc
rolb
mov
pop
scas
dec
and
push
sub
sbb
mov
pop
fdivrl
scas
std
mov
jmp
xor
mov
outsb
popa
add
int3
cli
mov
or
xor
lret
mov
jg
sub
stos
sub
and
xor
js
mov
xlat
and
mov
pop
ss
xor
adc
or
in
in
dec
lret
sbb
cmpsl
outsl
outsl
inc
fcomp
jge
lock
mov
push
hlt
popf
and
nop
rcrb
jg
mov
push
roll
jb
mov
xlat
clc
lods
mov
in
adc
sub
xchg
sbbl
aaa
in
mov
and
sub
cmpsl
xor
xor
push
and
das
add
jne
insb
stos
and
mov
icebp
adc
cwtl
test
pop
aaa
mov
jle
and
shrl
jl
mov
xchg
dec
fldt
dec
sbb
js
insb
jo
dec
jnp
std
ret
jno
inc
leave
add
mov
push
subl
cmp
es
sti
loope
inc
mov
gs
loopne
lcall
xchg
test
adc
mov
xor
cwtl
push
fs
out
jb
cmp
filds
addb
dec
sti
sbb
jl
fdivrs
push
or
orb
xchg
sbb
notl
push
sbb
aad
mov
rorl
aaa
push
movb
xchg
mov
scas
stos
fmull
pop
push
nop
incl
or
jb
lods
shl
mov
xchg
notb
adc
fnstenv
mov
pop
stos
push
push
fnstenv
push
push
lahf
and
push
push
jbe
or
mov
jae
cmp
cwtl
sbb
jnp
jbe
push
jl
cmp
mov
bound
out
into
cmp
adc
arpl
push
xchg
xor
mov
adc
shll
popa
out
sub
outsl
add
sbb
push
popa
lods
xchg
loopne
dec
mov
shll
push
xchg
adc
pop
and
cmp
fstps
clc
mov
cld
mov
pop
out
sub
xchg
mov
mov
pop
in
fwait
mov
mov
push
hlt
cmp
in
fidivl
rcrb
imul
push
xchg
jno
or
xrelease
insb
rorl
fdivrs
sbb
clc
mov
or
ljmp
mov
or
push
dec
mov
daa
mov
mov
test
sbb
xor
fdiv
sub
mov
ret
push
scas
sub
bnd
dec
repz
dec
sti
ret
mov
sar
sbb
jmp
lret
mov
pushf
jns
jmp
fldcw
or
xchg
cmp
aas
mov
shr
xor
mov
jb,pt
jb
mov
adc
adc
inc
cmpsl
dec
push
cmc
enter
inc
ret
cmp
into
test
and
push
mov
mov
mov
fcoml
push
sbb
push
popf
mov
ss
adc
fmull
push
lock
sar
and
mov
imul
aam
imul
movsl
or
lret
sbb
mov
xchg
cltd
xor
xchg
jle
lea
and
arpl
xor
cmp
jae
iret
repz
sub
cld
rcll
hlt
lcall
stc
fcmovne
aam
push
dec
ljmp
mov
movsl
in
mov
repz
inc
popf
or
mov
js
pop
dec
jb
or
pop
scas
cmpb
or
bound
hlt
shl
shll
out
hlt
loop
sbb
cmp
add
xchg
sbb
sbb
pop
and
mov
sbb
jb
mov
lea
cmp
cwtl
fildl
mov
adc
stos
fs
jge
xchg
push
bound
cmc
sub
pop
mov
shrd
andl
mov
cmpl
movl
mov
jmp
movl
movl
jne
push
push
push
push
push
pushl
push
push
call
orl
or
xor
xor
xor
add
adc
adc
sub
add
mov
xor
xorl
shr
xorl
mov
orl
xor
or
movl
shl
cmpl
movzwl
movl
jmp
movl
movl
jle
push
call
not
or
sub
sub
sbb
sub
mov
mov
sub
imul
mov
cmpl
not
movl
jmp
mov
jne
push
pushl
pushl
push
push
call
sbb
adc
neg
subl
adc
mov
mov
not
add
mov
mov
mov
shrd
shr
adcl
mov
mov
xor
add
shl
incl
xor
jmp
jle
jl
dec
mov
push
fsubrs
mov
xchg
xorb
rol
enter
test
jmp
adc
sbb
mov
aad
xor
int
loope
je
add
jle
push
ror
addr16
jns
adc
jle
and
fsubs
adc
icebp
dec
pop
sbb
jmp
js
ret
mov
jno
or
xor
sub
ljmp
aam
xchg
or
inc
aas
scas
jae
out
dec
sbb
jae
in
jmp
dec
shll
cwtl
inc
lea
lret
shlb
aam
sti
inc
push
imul
cld
sub
sti
sub
adc
or
enter
or
mov
pop
jg
jecxz
jmp
loop
dec
mov
lahf
aaa
mov
sti
push
pop
and
sub
add
jns
mov
dec
mov
cmpsb
lret
rcll
and
out
jg
and
jns
and
pushf
fcmovu
xor
aad
jg
adc
xchg
push
icebp
out
xor
icebp
mov
push
dec
out
push
mov
shll
push
inc
les
int3
dec
sub
mov
mov
xchg
stos
daa
mov
pop
addr16
sub
out
out
imul
mov
movsb
lret
sarl
dec
pop
and
rolb
mov
in
test
std
test
adc
arpl
xor
or
lock
sub
jge
jae
or
into
mov
call
fnsave
in
xor
dec
stos
mov
ss
inc
inc
xchg
add
jle
add
cmp
jge
mov
mov
in
jecxz
fimuls
mov
shlb
lret
pushf
mov
test
add
inc
ret
test
gs
std
sub
mov
jns
add
andb
bound
mov
popa
mov
push
jmp
jo
mov
pop
dec
or
repz
sub
jns
movsl
adc
ljmp
test
scas
push
xchg
cmp
or
jp
sti
sti
push
sahf
loop
scas
mov
push
rolb
mov
out
rcr
pop
outsb
out
cs
divb
lock
lock
cmp
or
sub
in
pop
ret
cmp
stc
xlat
and
or
popf
outsl
cmp
jo
sub
into
arpl
stos
cwtl
inc
xchg
sub
syscall
push
add
push
mov
adc
sub
bound
lea
mov
sub
pusha
movaps
xor
mov
fwait
cmp
bound
pop
push
and
inc
pop
jbe
imul
sub
ds
pop
fldl
movsl
cwtl
cld
in
faddl
add
movsl
fildl
xchg
cmp
mov
dec
xchg
les
enter
stos
adc
mov
lret
shrb
decl
sbb
xchg
mov
es
ss
cmp
xchg
and
aaa
bound
call
push
mov
lock
xor
loopne
jb
pop
inc
aad
rorb
daa
in
hlt
xor
lods
xchg
cli
inc
jmp
mulb
imul
dec
movsl
dec
xorl
test
push
ja
pop
mov
sub
push
cmp
sub
es
dec
int
cmpsb
push
rolb
mov
shll
add
xor
fcom
int3
push
rcl
dec
push
xchg
jecxz
xor
push
fmull
lret
pop
and
or
call
adc
call
popa
jnp
lcall
adc
insb
jge
lock
mov
lret
lret
std
sahf
faddp
sbb
outsb
add
sahf
sub
sub
aaa
out
aas
ds
jnp
std
pop
adc
adc
pop
sbb
dec
jbe
lret
dec
mov
jmp
mov
lret
push
pushf
fs
mov
rolb
clc
aas
imul
faddl
dec
icebp
mov
out
cmc
push
mov
dec
jg
rolb
stc
inc
xor
fistl
mov
or
std
jmp
push
aas
pop
and
in
aaa
cmp
push
jnp
push
fisttpll
push
push
jge
fldenv
fidivrs
adc
cmp
xor
add
xor
sbb
daa
fcmovnb
xor
lds
cmc
inc
out
scas
fistpll
lea
sub
mov
add
cltd
jns
jle
test
mov
adc
add
sbb
inc
xchg
repz
add
scas
mov
mov
adc
pop
mov
fldenv
leave
xor
or
cmp
test
xor
movsl
imull
jbe
les
jnp
mov
mov
xor
lahf
push
imul
jge
daa
mov
test
and
jg
add
cmc
icebp
into
or
mov
sbb
shll
test
dec
sub
mov
cmp
mov
mov
cmp
xchg
sub
mov
inc
and
add
scas
ljmp
test
jle
lea
jnp
into
mov
clc
jne
loop
push
test
aam
mov
pusha
jecxz
xor
mov
mov
xchg
push
push
cmp
push
dec
sahf
xor
and
lret
movsl
cmpb
mov
and
repnz
dec
js
sub
shlb
adc
cmpsb
xor
nop
sbb
mov
mov
or
in
enter
lock
aaa
mov
add
lods
cld
mov
shll
xchg
push
inc
outsb
out
in
push
mov
imul
mov
push
arpl
daa
ja
or
push
bound
inc
jmp
and
test
gs
fdivrs
mov
sbb
sub
inc
leave
add
icebp
movsl
and
jnp
jge
les
lahf
sub
scas
cwtl
cmpsb
aam
popl
stc
aaa
push
push
test
test
lea
fisubrs
or
ret
ret
jb
nop
mov
aas
lods
clc
push
cmp
fisttpll
in
pop
jge
pop
stos
ret
jl
sbb
xor
lahf
das
inc
xchg
and
out
mov
cld
jbe
rol
xchg
push
jnp
stos
stos
add
shrb
int
insl
bswap
jo
fbstp
push
mov
sbb
inc
add
insb
mov
aam
xchg
cmp
lods
es
incb
repnz
mov
subb
ljmp
xchg
aas
mov
jnp
int
pop
leave
push
gs
orb
xor
or
out
adc
lcall
xchg
or
jae
inc
xchg
imul
pop
es
roll
add
mov
jmp
movl
movl
jae
pushl
push
push
call
xor
or
mov
sub
sub
mov
xor
or
sub
xor
and
xor
or
sbb
mov
mov
add
mov
mov
sbb
mov
mov
incl
shrd
subl
shr
adcl
mov
add
mov
cmpl
not
mov
jmp
not
jne
push
push
push
call
mov
sbb
and
andl
and
orl
sub
or
sbb
jmp
pop
and
push
adc
mov
push
ja
mov
mov
pop
or
and
popf
sti
mov
or
repnz
les
sbb
fwait
stc
dec
mov
mov
and
and
cld
push
pushf
xchg
cwtl
jns
xor
sbb
movsl
loop
dec
mov
xchg
shlb
ficoml
sub
nop
aad
pop
pop
mov
dec
call
jno
adc
push
jbe
inc
jno
mov
push
mov
xchg
hlt
fbld
je
adc
inc
xor
xchg
scas
xor
xchg
xchg
push
lds
sub
adc
jmp
in
imul
mov
negb
xchg
ds
and
rol
test
mov
mov
mov
lret
fs
adc
sub
test
jae
cmpsl
add
xchg
fistps
filds
ljmp
or
xor
jp
add
sub
movsl
xor
imul
lcall
sub
xor
jge
pop
push
leave
jg
fldt
adc
lods
clc
sub
out
push
jns
sbb
mov
and
jg
pop
sti
mov
jae
adc
or
outsl
and
mov
sbb
jge
loope
out
test
adc
fisttpll
ret
sbb
xor
dec
xlat
mov
aas
and
mov
or
cmpsl
or
ds
lret
shrl
sub
mov
jnp
sub
mov
dec
pushf
sub
adcl
mov
dec
ficomps
fcmovnu
xor
sbb
xchg
roll
test
dec
aam
jns
jne
sub
push
jns
jl
and
popf
into
jae
fadd
in
mov
mov
aaa
das
iret
pop
iret
fisttpll
out
mov
ret
pop
cwtl
cs
addl
xor
in
hlt
xchg
punpcklbw
mov
arpl
add
cmpsl
or
fwait
push
bnd
ret
push
adc
sbb
mov
cmp
cs
ficoms
lret
std
add
stos
xor
data16
in
and
mov
outsl
jne
cs
jnp
in
xchg
jno
sbb
daa
xlat
mov
sbb
repz
jp
imul
xchg
icebp
push
adc
sti
mov
cmpsl
ret
sub
aad
and
adc
and
jo
push
stos
loopne
aam
xor
lret
xlat
pop
sbb
insl
out
sti
push
mov
test
iret
movsl
and
aad
enter
push
call
sub
pop
ret
xchg
int3
ret
loopne
sub
pop
xchg
out
adc
add
pop
jg
roll
mov
scas
dec
iret
or
in
dec
dec
push
dec
das
and
mov
push
sbb
xlat
mov
mov
or
ret
stos
pop
scas
dec
pop
inc
mov
xchg
mov
push
fs
cmp
ja
dec
cmp
jmp
mov
jns
ds
mov
lahf
arpl
movsl
and
sahf
mov
pop
movsb
insl
mov
dec
loope
idiv
aam
cmpsb
je
ret
mov
adc
out
cmpsb
pusha
call
push
xor
dec
mov
sub
arpl
xchg
push
sub
jp
es
stos
stc
out
fsts
sub
jae
in
lahf
pop
mov
sahf
lock
popa
jne
mov
adc
imul
sahf
push
push
stc
sub
arpl
jnp
xchg
mov
xor
jecxz
xor
jnp
jb
jnp
fwait
sarb
sbb
sub
sub
push
fistl
int3
stos
xor
dec
xchg
outsl
out
sbb
xchg
mov
xchg
cli
sbb
negb
mov
and
push
pop
test
sahf
aaa
push
mov
adcb
shll
pop
arpl
test
jns
jle
xlat
and
or
imul
mov
lds
or
fsubl
pop
cmp
sub
sbb
inc
lock
mov
test
push
pop
in
mov
out
mov
js
sub
cmp
shrb
out
lock
xchg
pushf
ja
mov
lea
and
das
xchg
lea
lret
aaa
cwtl
insl
xchg
leave
cmp
in
addl
lea
outsb
leave
and
cld
insb
mov
nop
gs
loope
mov
mov
mov
cmp
fldenv
jge
mov
jne
jbe
dec
or
mov
cmc
ljmp
sub
sub
jne
jno
loop
orl
jge
in
dec
mov
shlb
xlat
lods
or
xchg
push
fs
shlb
std
cmp
cmp
imul
pushl
pop
push
stos
loopne
popf
adc
fcmove
dec
xchg
popf
mov
fidivrl
jp
outsl
pop
mov
stc
xor
pop
push
stos
rcrl
pop
insb
movsl
add
mov
mov
cli
shlb
and
xchg
sbb
ja
enter
pop
enter
xchg
sbb
cs
and
mov
insl
xchg
pushf
cmpsb
add
int3
mov
sti
scas
pop
dec
fwait
mov
in
pusha
pop
xor
negl
fmuls
int3
out
and
fistpll
pusha
cmp
aaa
inc
sbb
pushf
in
lcall
outsb
imul
mov
mov
jne
jae
adc
xchg
inc
pop
sub
pop
mov
aaa
mov
mov
cmpsl
iret
scas
nop
lods
push
pop
cmp
test
push
popf
aas
insl
outsb
push
jns
lods
int
pop
push
loop
pop
xor
mov
mov
mov
push
lcall
mov
ljmp
paddusb
stos
dec
les
pusha
stc
iret
push
clc
ja
adc
xor
push
gs
repz
jo
push
outsb
stos
mov
test
aam
xchg
fucompp
adc
mov
xor
lea
cltd
or
hlt
or
add
int
loop
jmp
pop
and
mov
ds
leave
outsl
ret
inc
cmp
lahf
cmp
xchg
sub
add
jmp
imul
popa
fldt
lods
dec
and
push
jbe
in
mov
insl
movsb
imul
repnz
sub
iret
or
push
int
jae
jne
xor
pop
xor
mov
sbb
mov
cmc
jbe
xor
lea
into
jo
insb
sbb
mov
js
push
mov
rolb
pop
dec
mov
lret
outsl
xchg
or
loop
push
mov
jle
inc
leave
stos
cwtl
pusha
cmp
xchg
pop
push
js
sti
icebp
cmp
cli
push
cmp
xchg
mov
xor
xor
subl
or
andl
shl
sbbl
lea
sub
mov
cmpl
mov
mov
mov
mov
jmp
movl
jg
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
pushl
pushl
push
call
xorl
movzbl
adc
movzbl
add
or
add
movzwl
sub
mov
shrd
shr
cmpl
mov
mov
mov
jmp
mov
jbe
push
call
andl
mov
adc
sbb
movl
mov
mov
or
not
mov
mov
sub
mov
add
jmp
rcrl
cmp
and
and
scas
dec
or
fcomps
ja
popf
inc
mov
cmp
fisttpl
push
pop
inc
pusha
imulb
inc
clc
add
cli
repnz
inc
add
test
add
sbb
sbb
jmp
je
out
shll
movsb
jge
hlt
lcall
ret
xor
js
inc
jo
andl
dec
pushf
xor
shlb
mov
push
dec
cmp
gs
add
int
leave
sub
fcoml
mov
ja
sub
add
xchg
pop
jl
pusha
sub
cmp
lahf
es
hlt
xor
in
popf
cwtl
bound
rol
xlat
adc
mov
inc
inc
test
jae
test
clc
pop
inc
out
sbbb
iret
pop
cmpsl
out
dec
jo
jl
fistl
leave
shlb
mov
xchg
cmpsb
pop
cmpsl
push
sub
popf
mov
lret
enter
in
mov
sub
sarb
lods
xchg
aam
or
mov
sti
sbb
orb
ficoms
push
add
pop
addr16
mov
cs
sub
mov
mov
les
pmaxub
mov
ret
xlat
int
inc
mov
jnp
fmull
iret
sub
cmc
jge
or
inc
inc
jb
roll
mov
out
sbb
mov
and
push
adc
clc
or
stos
and
fldenv
hlt
sub
enter
lcall
out
lret
xchg
icebp
mov
push
enter
pop
lcall
mov
call
inc
divl
and
xor
add
jg
xchg
les
les
sbb
loope
pop
cltd
loope
aam
mov
jle
jne
jl
jp
mov
mov
push
pop
mov
lock
push
xchg
rcl
leave
mov
add
push
xchg
push
inc
mov
dec
sbb
add
int3
lods
add
bswap
sarl
pushf
inc
xchg
stos
pop
aaa
mov
fsts
pop
int
in
xchg
fimuls
mov
cmp
dec
aam
jns
xchg
or
addr16
outsb
in
andb
imul
pop
jns
adc
jl
sbb
sahf
in
aaa
dec
out
fildl
iret
mov
add
or
int3
push
xor
fidivs
cmp
or
call
inc
sub
pop
incl
pop
push
mov
adc
loop
jns
data16
std
dec
daa
les
cltd
lock
stos
inc
xchg
or
and
sub
lds
push
icebp
out
adc
push
mov
jp
mov
mov
fmuls
xor
add
test
pop
xchg
push
pusha
mov
adc
xchg
test
inc
movsb
and
jecxz
aaa
sahf
cmp
push
mov
faddl
fcmovnu
mov
into
mov
arpl
mov
sbb
xchg
outsb
or
pushf
ja
xchg
sub
popf
pop
data16
ja
lret
ljmp
cmc
sub
loop
cmpsl
mov
xchg
lret
xchg
aas
stc
cmp
bound
je
lods
test
sub
xor
mov
pop
inc
out
push
xor
adc
add
add
fsubs
aas
inc
push
jp
cmpsb
ret
cli
in
inc
test
into
push
cs
push
cmp
fisubrl
sti
rorl
jnp
test
fistl
ja
push
xchg
hlt
xchg
or
inc
pop
cmp
cmp
dec
adc
add
pop
sahf
repnz
sub
test
inc
idivl
pop
cmpsb
ds
mov
hlt
adcb
gs
mov
and
add
call
test
cmpsl
cltd
jg
cmpl
mov
lods
inc
jle,pn
ficomps
fwait
dec
jns
mov
jo
aaa
dec
orl
jno
negb
divb
push
outsb
data16
xchg
push
out
std
inc
or
jg
enter
jecxz
rclb
mov
outsb
xchg
jecxz
push
ret
roll
mov
lcall
test
lahf
repz
sbb
sbb
imulb
push
xorb
addl
call
push
mov
loop
lods
adc
or
jmp
lea
push
mov
xchg
mov
orb
xchg
mov
fisubrl
inc
out
inc
dec
cmpl
imul
mov
sub
fldt
push
js
sub
add
jae
andl
mov
adc
stos
shlb
pop
pop
inc
mov
fcom
push
lret
jp
cs
sar
mov
mov
insb
xchg
dec
adc
sahf
mov
sub
in
in
sbb
ja
inc
xorl
in
aas
lds
sub
xchg
test
repnz
daa
jmp
adc
cld
sub
test
xchg
pop
xlat
scas
loope
adc
ja
je
push
mov
ds
xor
add
sbb
cld
data16
mov
inc
in
push
mov
frstor
dec
jns
imul
leave
pop
jbe
and
fwait
xchg
mov
mov
dec
lods
je
arpl
pusha
imul
dec
and
sub
pop
add
push
inc
pop
push
cmpsl
pop
imul
hlt
in
shll
xchg
sub
cs
clc
rcrl
in
or
das
imul
sbb
dec
xor
dec
in
clc
in
inc
in
fnstsw
push
pop
das
xchg
insb
dec
out
movsb
mov
nop
insl
push
and
jmp
sbb
kmovw
cmp
mov
mov
and
or
lret
cmpsl
mov
gs
jl
adc
pop
pop
scas
ret
int3
std
cli
outsl
sbb
in
lret
xor
push
jp
stc
cmpsl
mov
leave
push
xor
mov
jno
faddl
sbb
jo
dec
addr16
clc
fldl
pop
push
or
xchg
push
div
sbb
adc
jg
loopne
dec
sub
in
bound
mov
int3
cmp
jge
pusha
lcall
jbe
mov
movsb
sbb
dec
push
add
ret
dec
mov
in
cld
fisttpll
in
jae
leave
out
ja
dec
lret
ret
fisttps
imul
and
test
jp
stc
fsts
call
stos
ds
gs
popf
cmc
hlt
rcr
cmp
mov
cs
cmpsl
inc
dec
pop
fwait
loop
jp
mov
mov
cmpsb
sub
rcl
insl
cmp
xor
add
cmp
scas
out
jle
adc
jp
das
xor
push
cmp
hlt
loop
push
push
sbb
dec
jl
shll
cmpsl
and
push
ljmp
xor
leave
xchg
imul
xchg
jge
pop
push
iret
rcr
scas
push
xchg
xor
add
cld
getsec
mov
cmc
jo
add
adc
popf
push
shll
mov
xor
adcl
or
shl
movzbl
or
imul
mov
mov
xorl
shrd
xorl
mov
mov
xor
shr
mov
and
mov
sbbl
xor
orl
or
sbbl
shl
adcl
sub
mov
mov
cmp
mov
mov
jg
xor
add
mov
sub
and
mov
cmpl
movl
movl
jmp
mov
mov
jb
push
push
call
xor
mov
sub
sbb
movzbl
and
mov
jmp
les
cmp
push
mov
mov
movsb
js
insl
xor
outsl
dec
ja
pop
sub
inc
mov
ja
arpl
ljmp
adc
mov
dec
inc
or
les
sub
test
mov
add
sub
sbb
lret
xor
pushf
fisttpl
fxch
mov
dec
ds
ret
cmp
push
jne
lret
aaa
mov
fdivrs
mov
and
mov
ret
push
mov
dec
imulb
popa
pop
adc
cmp
mov
ja
inc
mov
jno
adc
adc
adc
cmp
push
sbb
lcall
sub
lret
jnp
shlb
sbb
pop
inc
in
jno
mov
sbb
insb
test
mov
negl
sbb
cmp
sub
sahf
cmp
std
push
inc
dec
out
jae
fdivl
cmp
scas
xlat
mov
sbb
push
fldl
cmpsb
mov
or
insl
dec
int
cltd
aas
mov
jle
rcrb
addr16
das
sub
jno
stc
xor
mov
sar
test
ja
jle
dec
add
loopne
pusha
popa
cmp
push
sub
or
sbb
mov
stc
outsl
bound
fdivrs
adc
and
cmp
test
ret
leave
pushf
sub
xor
fs
push
sub
popa
xchg
repnz
jmp
into
sbbl
loope,pt
push
and
jl
ss
mov
jno
jecxz
sbb
dec
stc
stos
imul
ret
orb
ss
pop
stos
xchg
jecxz
dec
testb
loop
lods
xor
inc
popf
mov
movsl
mov
cwtl
sub
lea
repz
pop
push
mov
or
mov
pop
or
nop
in
lods
inc
cmp
jl
xchg
imul
pop
icebp
out
adc
pushf
les
cmpl
mov
cmp
ret
add
nop
bound
fbstp
add
ss
insl
mov
mov
xlat
movsb
dec
pop
rorb
sar
scas
mov
ljmp
or
js
loopne
loope
mov
jmp
pop
sbb
dec
jo
mov
lcall
or
mov
pushf
or
mov
inc
mov
lods
inc
cld
jbe
loopne
cmp
xor
lea
jns
ja
test
lret
sahf
mov
jo
mov
mov
into
xor
cmp
push
adc
dec
push
movsb
dec
or
addl
je
mull
adc
adc
jns
loopne
mov
mov
js
iret
inc
loopne
push
aad
frstor
inc
daa
cmp
cld
mov
sbb
xor
sbb
mulb
pop
pop
sahf
xchg
scas
std
std
pcmpgtw
cmpsb
add
lahf
lock
mov
mov
xor
std
or
unpcklps
movsl
jmp
shrb
xor
add
jnp
and
and
call
jl
adc
ja
cmp
pusha
xchg
add
out
push
push
jns
mov
ret
mov
jg
mov
xchg
mov
mov
push
push
es
sbbl
xchg
push
rcrl
mov
scas
fcmovu
out
add
pushf
inc
push
int
insb
push
popf
ret
das
lods
fsubs
push
cmc
imul
xchg
pushf
mov
sahf
cltd
cmp
aam
pushf
iret
mov
mov
xlat
sbb
push
lds
or
cmc
cmp
push
daa
ja
mov
test
mov
push
popa
cmp
imulb
cmp
cmp
jmp
mov
arpl
div
in
pop
mov
sub
xor
pop
pop
cmp
rolb
adc
std
ljmp
shl
lock
inc
js
push
mov
pushf
fistps
iret
adc
dec
or
mov
xor
and
mov
push
ss
xchg
pop
sahf
cs
add
icebp
mov
out
xor
lock
jp
pop
pop
mov
dec
push
fstps
mov
cmp
je
cwtl
sahf
dec
mov
push
push
push
jne
pop
hlt
scas
enter
cmpb
or
xor
mov
dec
das
scas
loopne
push
xchg
mov
adc
xchg
aad
cmp
jb
sub
aad
mov
mov
xor
jns
jmp
or
xchg
pop
sti
fdivrl
xor
xor
jbe
inc
jnp
scas
mov
jbe
data16
inc
jb
push
push
mov
sbb
cmpsl
or
cld
out
and
sub
jl
adc
jle
daa
mov
mov
xor
pop
shl
fwait
std
fcomip
movsb
and
pop
jmp
lock
js
loop
sbb
adc
push
fisttpl
jmp
adc
xlat
int3
jno
cmp
test
jmp
inc
mov
cld
jmp
cmp
xorl
lock
sbb
mov
and
iret
mov
mov
ret
mov
fistps
or
lcall
mov
cmc
repz
rol
jnp
jge
mov
mov
in
sbb
aam
stc
or
in
loop
out
fs
sbb
outsl
test
add
out
add
pop
dec
out
das
mov
orl
ret
out
jg
shll
pop
cmp
pop
js
in
push
fs
xchg
movsl
and
divl
pop
inc
mov
push
and
clc
lret
fwait
shrb
fcmovnu
inc
ret
fxch
fnstsw
dec
push
and
and
mov
mov
add
push
or
adc
test
jle
xor
loopne
mov
adc
clc
incb
xchg
hlt
inc
inc
ficoms
push
in
jg
jae
pop
mov
das
out
mov
mov
out
and
xchg
or
jg
or
push
jge
mov
dec
mov
push
ljmp
mov
cwtl
jnp
lret
inc
in
in
mov
sbb
cmp
incb
inc
xchg
mov
lods
sbb
add
fildll
int3
pop
test
adc
sbb
bound
pop
ret
mov
mov
sub
jle
in
pop
lods
jp
movl
adc
push
push
inc
sbb
mov
mov
xor
stos
dec
loop
outsb
pop
mov
insb
test
lock
jbe
pop
fstl
and
fcompp
or
cltd
outsl
pop
rclb
mov
push
rorl
cld
xchg
xchg
adc
push
sti
dec
outsl
dec
xchg
push
movsb
pop
sbb
jl
sub
adc
ss
and
jmp
mov
lret
test
sbb
inc
imull
xlat
sub
int3
mov
push
in
and
add
and
stos
aaa
inc
add
lods
roll
mov
movzwl
or
mov
adcl
xor
andl
shl
orl
xor
adcl
or
sbbl
shr
and
mov
jmp
mov
mov
pop
xchg
lret
cmp
ja
push
mov
cwtl
aad
mov
sub
and
imull
enter
aaa
les
fists
push
dec
test
imul
mov
pop
and
punpckhwd
idivl
pop
leave
mov
ljmp
jo
mov
xchg
popa
decb
pop
add
or
mov
xchg
pop
and
dec
imul
sarb
loop
rorl
sbb
jae
ja
xchg
movsb
pop
sbbl
add
imul
cltd
mov
fcoml
pop
pop
jae
sub
dec
addl
push
pop
bound
cltd
mov
lods
jecxz
pop
orl
pop
or
lods
mov
pop
aad
in
aam
daa
into
sub
inc
sub
mov
adc
push
mov
mov
push
xchg
cli
sub
pushf
into
cmc
push
sahf
pop
xchg
pop
ja
fidivrs
sbb
dec
lahf
cs
lea
fsubrl
in
outsl
loop
test
xchg
lods
or
mov
mov
or
je
sbb
add
imul
sbb
jb
mov
addl
popf
adc
jecxz
xchg
mov
cmp
or
pop
dec
mov
adc
mov
mov
cmp
xor
inc
dec
out
shrb
mov
lret
pop
mov
in
sub
stos
or
xor
and
imul
xchg
ror
fmul
add
fidivrs
pop
add
adcl
sub
jmp
mov
xchg
ret
mov
cmp
push
or
lcall
pop
dec
jg
das
adc
cli
xlat
dec
js
and
mov
xchg
pop
mov
out
or
add
add
fnsetpm(287
in
fadd
iret
pop
mov
or
je
sti
clc
aam
or
jne
ret
cmp
mov
mov
sbb
mov
xlat
aas
sbb
xchg
add
or
dec
ret
and
out
minps
clc
aaa
imul
in
cltd
test
lcall
dec
and
enter
shlb
push
aaa
or
clc
and
addr16
mov
in
pop
and
scas
stos
xchg
cltd
cmc
test
jmp
leave
jle
ds
or
cld
inc
push
movsb
cmpsl
das
rolb
xor
aad
das
in
fdivs
sbb
int
cltd
and
xlat
inc
fs
dec
pop
mov
sbb
mov
arpl
dec
adc
imul
ucomiss
xor
lods
imul
jl
xor
or
ret
jnp
dec
es
add
mov
ljmp
jp
outsb
and
xor
imul
in
xchg
rcrl
pop
dec
mov
xchg
or
mov
test
jbe
mov
xorl
jmp
inc
mov
stc
sbb
pop
adc
and
loopne
sbb
mov
cmp
sub
incl
add
sbb
lods
mull
mov
gs
dec
jmp
and
lret
les
cwtl
call
jnp
pop
add
cmovb
adc
je
xlat
xchg
insb
and
cwtl
push
cmp
inc
icebp
pusha
push
jns
loop
pop
shlb
aad
stc
dec
mov
jne
mov
rorl
push
jle
lods
in
mov
stos
les
inc
push
jbe
mov
bound
rcrb
push
jle
add
jmpw
shl
stos
cmc
fists
cmp
popf
mov
fists
icebp
sub
push
lcall
sti
fmul
cmovne
and
icebp
lock
mov
jp
leave
fxam
pop
pop
or
cmp
pushf
sbb
fwait
int3
xchg
fwait
xchg
cmp
cmpsl
push
out
or
outsb
rol
js
cs
cwtl
aas
jne
push
adc
cmp
pop
add
out
and
fisubrs
mov
and
loopne
outsl
mov
lea
cmp
adc
dec
pop
dec
faddl
popl
dec
dec
sub
or
xor
pop
ret
divps
pop
jno
jl
push
mov
mov
adcl
int3
stos
call
lds
sysenter
mov
mov
stos
or
and
fstp
inc
add
inc
or
ret
xor
add
push
mov
mov
jno
cmpsl
mov
mov
sub
mov
push
das
arpl
loopne
lock
lea
jno,pt
mov
xchg
pop
cmp
and
out
inc
xor
mov
mov
es
sbb
adcb
arpl
and
xor
insb
loop
shrl
push
hlt
mov
fisubl
ds
pop
sbb
test
jmp
aam
mov
fcompl
mov
cmpl
sti
sub
jo
shlb
mov
xchg
inc
ss
jmp
push
ja
mov
dec
push
mov
insb
cmp
enter
adc
cmpsb
bound
pop
fdivs
lods
gs
or
int3
in
fcmovbe
imul
fldt
push
jns
xchg
sbb
lahf
sbb
out
pusha
and
inc
int3
in
xchg
mov
mov
adc
js
fists
js
pop
ja
xor
adc
or
lods
cmp
jbe
push
aam
es
adc
ja
jb
and
in
mov
popf
lods
push
or
xchg
aas
add
cmpsl
sahf
mov
sub
divb
jle
jle
xor
mov
inc
lods
add
in
add
jmp
mov
lahf
mov
stc
das
sbbb
mov
xchg
lret
pop
ljmp
je
adc
hlt
cmp
inc
decl
jo
fldenv
faddl
sbb
or
jo
enter
out
jbe
imul
mov
popf
mov
mov
je
imul
movsb
sbb
xchg
pop
lret
in
jne
jle
inc
dec
add
pop
cmp
inc
inc
bound
mov
push
lods
mov
add
aaa
in
sahf
movsl
ss
push
outsl
push
or
xor
xchg
popa
add
xor
das
das
inc
xor
mov
stc
fldenv
dec
in
inc
jbe
sbb
push
add
add
movsl
ss
daa
sbb
insb
mov
push
int
add
cmc
jge,pn
or
mov
and
xchg
mov
pop
aaa
add
scas
pop
sub
aam
fs
push
int
insb
clc
dec
ja
insl
mov
xchg
xchg
mov
sbb
mov
push
or
push
mov
mov
mov
or
mov
mov
mov
add
mov
andl
shrd
sbbl
shr
mov
mov
inc
jmp
shll
adc
push
scas
xchg
xor
sub
ja
xor
mov
cmp
cmc
and
cmpsb
mov
adc
call
pusha
ds
push
fnstenv
cmc
pop
rdrand
or
lcall
inc
push
or
jbe
das
in
fnsave
dec
xchg
add
inc
inc
cmp
mov
aas
rcrb
call
mov
inc
push
cmpsl
mov
fwait
mov
rcl
andps
aad
arpl
xchg
lea
sub
loope
mov
lock
divb
jns
sub
mov
cmpsb
mov
xchg
mov
mov
popa
lcall
xor
cli
scas
cltd
dec
movsb
cmc
dec
mov
fcomps
das
pop
and
data16
xchg
in
xor
jnp
lret
add
push
sbb
lahf
call
mov
in
lods
jge
pop
repnz
push
xor
popf
lret
aam
jbe
pop
jle
and
int3
inc
jmp
aam
mov
and
inc
or
push
out
sti
sbb
xor
in
xlat
movsl
mov
daa
and
loopne
cs
pop
push
add
inc
ljmp
rolb
iret
sahf
jns
jo
sub
shl
lods
mov
cmp
cltd
xor
sub
add
mov
leave
add
movsb
leave
adc
jns
adc
ss
push
mov
in
mov
es
cmp
adc
xchg
ss
mov
add
in
rcl
sarl
adc
inc
adc
das
lock
mov
sbb
push
xchg
filds
pop
push
daa
add
jne
cmp
xlat
lcall
clc
mov
jge
imul
sbb
ljmp
daa
das
call
aam
cltd
mov
pop
sub
enter
aam
imul
nop
dec
ljmp
cmpl
movsl
nop
jbe
or
push
jl
xchg
inc
jmp
fsubrl
cli
cmp
mov
fstps
loopne
hlt
lock
shll
dec
add
sub
js
out
cmp
into
out
add
fstpt
push
loop
pusha
sub
dec
cmpsl
sbb
int
mov
test
or
inc
in
or
and
ja
jg
aaa
sarb
pop
jge
add
hlt
ret
xchg
mov
or
in
iret
or
cmp
stc
adcb
dec
jle
add
fcoml
mov
jbe
push
cld
scas
mov
in
into
push
out
or
stc
xlat
pop
dec
idivb
and
jnp
nop
or
out
dec
addr16
adc
lahf
xor
xchg
add
mov
mov
push
mov
lret
jo
and
inc
xchg
xchg
xlat
aas
pop
insl
hlt
inc
jg
jbe
jbe
mov
mul
scas
in
rcrb
pusha
fmul
pop
shlb
cmpsb
mov
mov
dec
loope
daa
pushf
xor
sbb
add
ljmp
mov
pop
sbb
push
push
mov
leave
sbb
dec
loopne
jne
int
sbb
loop
pop
mov
add
mov
mov
pop
or
sub
lds
jge
adc
popl
mov
mov
mov
repz
xchg
dec
int3
xor
clc
mov
xchg
mov
call
jg
inc
xor
popa
dec
lock
insl
or
idivl
popf
push
lods
icebp
bound
inc
aaa
lods
addr16
outsb
das
insl
js
pop
mov
mov
dec
fildl
inc
mov
mov
inc
dec
sbb
and
std
mov
stos
push
pop
outsb
push
fsubs
lods
pop
out
insb
lcall
mov
mov
dec
out
xchg
addr16
adc
test
outsl
cmp
ss
xchg
ss
xchg
inc
inc
xor
rcr
xchg
sbbb
aad
fdivs
or
mov
stc
ljmp
push
movsl
inc
test
add
jg
xor
sbb
mov
adc
out
scas
push
popa
outsl
jmp
sub
jmp
pop
fbld
std
loope
cmp
mov
fwait
jge
mov
mov
and
cmp
dec
lods
dec
aas
push
pop
lock
inc
mov
ret
jle
or
jae
popf
mov
or
mov
mov
pop
lock
sub
jbe
out
inc
push
loopne
ficompl
roll
push
addr16
sbb
xor
roll
xlat
idivb
out
aam
out
cmp
es
lcall
pop
and
andl
in
push
jmp
xchg
es
lret
push
idivl
adc
test
push
stc
mov
dec
dec
mov
out
adc
enter
jae
push
js
mov
inc
cs
sahf
xchg
push
mov
mov
mov
ljmp
cmp
shr
mov
dec
dec
cld
push
or
out
repnz
push
loope
popf
mov
shr
and
out
cs
imul
jmp
jnp
push
stc
dec
addr16
cmc
lcall
sub
jp
fdivrl
and
adc
cmp
movsb
lds
xchg
xchg
mov
pop
mov
sbb
push
and
icebp
leave
ja
pop
hlt
stc
rorl
imul
iret
sub
mov
push
jmp
into
das
mov
add
push
mov
scas
inc
push
pop
aas
sub
rcrb
das
or
xor
rorl
fwait
nop
pusha
cmpsb
ret
dec
jbe
or
mov
or
icebp
pushf
xor
cmp
jle
xchg
loopne
or
iret
mov
jb
jbe
sub
inc
push
movsl
repnz
lea
aas
mov
ret
xchg
sub
callw
mov
lret
leave
shrl
inc
cmp
sbb
xchg
push
jg
adc
mov
pop
xchg
jl
lret
fwait
shll
push
and
out
xchg
adc
movsb
mov
mov
add
mov
mov
mov
inc
sub
scas
pop
aad
cs
cmp
xchg
xor
sbb
sbb
mov
rorb
shlb
shll
daa
stos
pop
and
je
pop
in
push
jmp
and
out
in
jl
fs
outsl
fmul
lods
pushf
mov
sbb
jne
mov
push
lcall
mov
ss
clc
je
adc
push
sbb
mov
add
test
cmpsl
sahf
jbe
sub
xor
mov
nop
or
add
pop
mov
lods
cmpsl
test
int3
loopne
ljmp
push
sbb
xor
cmp
add
jge
subl
jmp
scas
popa
inc
jge
sbb
cs
mov
movsb
js
sbb
ja
dec
repz
pop
inc
in
stos
loope
aam
jg
mov
pop
stos
mov
outsl
sahf
mov
inc
mov
aaa
inc
cltd
mov
xchg
in
add
lahf
adc
mov
in
popl
stos
mov
loope
xor
jnp
add
sbb
jmp
mov
loope
and
fwait
or
dec
inc
pop
jnp
mov
xchg
das
data16
inc
adc
fwait
jge
aaa
dec
cmp
loop
test
and
mov
inc
gs
pop
push
fdivrp
sub
pushf
add
or
cld
mov
xchg
sbb
daa
lret
pop
inc
cmpsl
movsl
pop
push
and
jno
cmpsb
mov
jb
stos
fmuls
test
lods
js
xchg
mov
popa
sbb
mov
test
dec
psubw
mov
add
ret
scas
push
les
aad
pop
cmp
out
push
sbb
mov
dec
add
shlb
lret
sub
out
std
test
mov
sub
mov
jmp
xor
jmp
xchg
shrb
test
mov
mov
cmpl
adc
or
sbb
fdiv
or
mov
push
jbe
xor
pop
add
cmpsl
and
icebp
int
lcall
scas
aad
mov
les
add
add
movsl
jmp
cltd
jnp
aad
and
or
adc
xchg
mov
js
into
inc
filds
jl
xchg
pushf
sahf
stos
enter
pop
push
cmp
jl
out
lea
add
or
pushf
fcmovbe
je
and
enter
loopne
aas
sbb
xor
jae
mov
jbe
lcall
add
and
add
add
and
jo
add
cmpl
push
mov
push
and
fs
ret
nop
aam
push
jae
dec
sbb
sbbb
cmc
movsb
xchg
int
and
and
mov
ja
clc
in
cmp
fstpt
gs
cwtl
filds
and
mov
test
jge
cmp
jge
push
iret
lods
out
outsl
jb
add
jno
andl
cmpl
int3
fisttpl
in
enter
outsb
jg
cld
and
aad
sub
sbb
jbe
dec
fnstsw
sbb
xor
shrb
imul
int
ljmp
and
xor
jle
mov
es
filds
adc
popf
repnz
das
loope
lods
mov
add
mov
js
in
adc
test
pop
push
or
ds
sahf
xchg
in
pop
mov
mov
into
push
jle
cld
cmp
jl
mov
imul
inc
add
mov
cmpsl
jno
ret
fistpll
xchg
xor
inc
test
mov
sahf
xchg
cli
pop
xor
dec
je
dec
jp
adc
out
or
sub
mov
sub
mov
mov
push
dec
aad
fcomi
and
sbb
out
flds
leave
add
push
xchg
fnstsw
xor
shll
mov
xor
xor
sub
push
mov
scas
call
and
addr16
js
xchg
mov
mov
pop
enter
shr
and
icebp
fs
mul
push
or
popf
cmp
fwait
sub
sub
test
push
or
sub
in
mov
xor
sbb
mov
cmp
jno
dec
jnp
insl
scas
sub
aam
pusha
repnz
xor
mov
and
inc
jo
dec
add
jmp
lahf
jg
and
jne
adc
xor
xlat
mov
sarb
xlat
in
shl
lahf
rclb
loope
cwtl
aam
lret
xchg
imul
add
push
loopne
jl
push
xor
jle
rorb
sbb
in
xor
push
shrl
out
xor
mov
out
add
repz
add
push
js
pop
shrb
cli
hlt
addr16
jae
and
les
pop
aaa
dec
fcomi
jns
inc
xchg
inc
push
sub
cmp
cmp
pop
mov
push
popa
test
sarl
data16
sub
cmp
mov
inc
ficoml
mov
gs
aas
int3
imul
cwtl
out
mov
push
push
push
dec
dec
repnz
or
and
push
xor
push
hlt
or
test
pop
cmp
jmp
pop
mov
clc
mov
or
int
movsl
push
hlt
pop
pop
lods
add
mov
fildl
jbe
das
loopne
out
mov
js
pop
dec
fiaddl
lret
iret
mov
aad
jge
nop
mov
add
fwait
push
xor
mov
pushf
jecxz
call
cmp
testb
fs
notl
cmp
bound
mov
sarb
imul
pop
lcall
jb
clc
sbb
pop
cltd
jle
test
aaa
pop
sub
xor
pop
add
mov
out
in
rorl
test
pop
out
cmpsb
test
in
ljmp
jl
lock
xor
or
and
lock
mov
in
addr16
and
cld
rcll
pop
icebp
push
push
xchg
pop
xchg
in
call
jae
mov
adc
jge
sub
xor
push
iret
test
push
xor
sub
rcl
sar
sbb
mov
sub
xor
idivl
mov
inc
mov
gs
pop
mov
pop
or
or
test
iret
movsb
es
inc
inc
lods
dec
jp
push
scas
aam
icebp
jbe
rolb
mov
aam
or
aaa
aam
imul
movsb
or
inc
sbb
aad
jmp
adc
add
std
in
jo
mov
xor
xor
push
jge
xchg
dec
daa
mov
popf
cld
adc
and
imul
xchg
popf
xchg
ret
dec
jmp
inc
les
and
or
movsb
jnp
shl
aaa
in
and
mov
jbe
mov
push
add
lahf
fwait
lahf
pop
fnstsw
aaa
adc
enter
bound
sub
adc
adc
lock
stc
push
push
inc
icebp
xchg
les
cmpsl
jno
movsb
add
xchg
ds
adc
shrb
or
icebp
dec
jo
mov
mov
sub
lcall
pop
icebp
fdiv
or
jbe
int
fistpll
sahf
inc
test
add
pop
xor
adc
or
andl
mov
clc
dec
sbb
dec
add
jmp
cmp
push
out
dec
lret
xor
jbe
fwait
cmp
in
addr16
dec
cmp
xor
rorb
push
in
add
sub
inc
add
loope
imul
jmp
add
or
or
adc
mov
xchg
insl
mov
rcll
enter
ljmp
addr16
add
dec
in
fs
out
out
cmp
xor
mov
sahf
add
out
dec
dec
cli
fstl
jle
icebp
dec
mov
shl
outsl
sahf
popa
push
and
push
jecxz
or
daa
mov
cmp
lret
mov
xchg
clc
cli
lods
pop
or
sbb
pusha
and
jge
cmp
mov
sbbb
stc
sub
das
push
cmp
sub
inc
push
arpl
mov
or
fwait
mov
cmp
and
dec
and
daa
sbb
sahf
insl
pop
and
mov
cld
inc
lods
mov
jbe
dec
pop
stc
add
cwtl
xor
ss
lods
xor
repz
addps
push
or
inc
dec
fsub
push
enter
rcll
les
pop
push
out
adc
test
loopne
je
inc
in
jl
inc
fildl
ss
xchg
in
bt
adc
je
sub
out
leave
hlt
repnz
divps
out
dec
sbb
ss
add
xchg
xor
out
push
add
jge
pusha
cmp
jo
sub
sbbb
ja
or
loope
pop
mov
std
hlt
insl
or
inc
push
movsl
xchg
pusha
xchg
out
rolb
stos
inc
lods
jae
fcoms
xor
inc
adc
movsb
fwait
xor
and
push
cmpsb
lods
mov
out
aam
xor
sbb
dec
cmp
adc
cmp
jecxz
mov
dec
xchg
sbb
pop
mov
cs
mov
jmp
adc
shlb
add
sub
push
xor
insb
test
and
jge
inc
iret
test
xor
sbb
jp
push
cmp
adc
xor
fwait
lcall
push
add
cmpsb
loope
lret
jns
aam
lea
test
jmp
mov
lds
daa
test
fs
xchg
arpl
js
outsl
pop
add
dec
imul
mov
sbb
outsl
xchg
mov
push
jge
and
out
lret
test
mov
aas
in
jnp
ja
sbb
mov
in
pop
stc
icebp
cmp
mov
mov
jmp
in
rorb
or
js
adc
sbb
push
lea
enter
adc
adc
cmpsl
pushf
repnz
je
xlat
leave
or
inc
int
cli
loopne
jo
dec
nop
xchg
rcll
pop
gs
lods
mov
inc
mov
aad
push
jp
rorb
outsb
pop
movsb
pop
sarl
inc
mov
out
sub
cmp
out
inc
mov
lret
push
lret
add
push
add
out
and
insb
xchg
mov
jb
xchg
sbb
test
mov
pop
fiadds
das
leave
test
aam
loopne
fwait
sbb
fdivrl
mov
bound
or
cmp
mov
cli
jno
xlat
out
xchg
mov
data16
in
ret
and
roll
or
jmp
cld
test
or
add
xchg
cmp
sub
popa
or
pop
cmp
mov
fildll
daa
shll
in
leave
fcoml
jecxz
je
test
fsub
jne
fmuls
imul
outsb
cld
sub
sbb
insl
mov
add
jp
mov
movsb
and
icebp
pop
adc
xchg
mov
xlat
cwtl
mov
xchg
lcall
and
ret
add
inc
lea
xorl
mov
cmpsl
mov
popa
std
in
and
mov
push
cmpl
aam
xor
mulb
adc
add
aad
add
imul
stc
add
xchg
iret
je
add
mov
out
test
adc
cmp
rorl
push
ss
and
inc
mov
mov
or
inc
push
call
fstpt
pop
mov
mov
cmpsl
mov
inc
push
aaa
mov
das
adc
stos
lcall
mov
js
repnz
and
mov
cvtpi2ps
and
ficoms
mov
fmulp
push
cmp
in
or
pop
or
and
cs
in
push
pop
mov
add
loopne
mov
and
adc
jbe
mov
sbb
cltd
and
inc
cld
pop
repnz
ja
add
shlb
mov
out
xchg
scas
int
mov
gs
inc
jmp
repnz
bound
dec
les
jp
fnstsw
or
push
adc
out
pusha
movsl
ja
je
push
push
and
stos
lea
xor
xchg
jo
test
int3
sbb
stc
cmpsb
lret
mov
jae
imul
and
cmp
int
loopne
test
fildl
mov
cmpsl
dec
das
mov
sbb
addl
outsb
add
mov
mov
in
call
xor
gs
lahf
push
aaa
and
push
f2xm1
into
out
movsb
mov
jbe
hlt
dec
imul
jb
mov
insb
cld
jmp
stos
xchg
notl
mov
xchg
outsb
sub
stos
fldt
testb
bound
pushf
bound
ds
lods
dec
int
and
mov
cmp
jbe
out
movsl
xchg
add
sarl
xor
inc
add
jnp
gs
jge
call
adc
jns
mov
sbb
lea
fnstcw
popf
and
into
lds
ljmp
repz
lea
nop
in
imul
pusha
mov
cmpsl
cmp
dec
push
pop
push
sub
mov
push
cmp
or
cmp
and
in
pop
mov
jmp
inc
inc
aaa
sbb
pusha
mov
add
sbb
jb
and
xchg
arpl
inc
fistpl
or
and
jmp
cmp
std
lret
test
mov
push
push
mov
jecxz
xchg
mov
mov
pop
pop
mov
inc
outsl
je
or
nop
mov
push
xchg
cmc
scas
xorb
arpl
or
mov
out
pop
jmp
dec
sbb
aam
sub
mov
addb
sub
xor
or
sbb
jo
mov
rcrl
into
outsl
jmp
push
sarl
pop
fdivrs
mov
mov
test
je
jle
jbe
sub
add
mov
leave
clc
idivl
cmp
ret
jecxz
subb
mov
icebp
fiadds
out
aam
dec
lret
fdivrl
icebp
push
bswap
lea
cmp
xchg
fdivrl
mov
fisubl
adc
jnp
in
mov
icebp
pop
inc
cmp
adc
add
subl
or
add
add
mov
movl
movl
mov
jmp
movl
jle
push
pushl
call
andl
adc
xor
xor
mov
sub
and
not
and
movzwl
adc
cmpl
mov
movl
movzbl
mov
jmp
movl
movl
jbe
push
push
push
pushl
call
add
sbb
sbb
xor
add
mov
mov
shrd
adcl
mov
or
mov
addl
jmp
inc
or
add
cltd
or
fistpll
js
decb
ja
pop
add
mov
add
inc
and
je
mov
mov
xchg
or
lock
subb
hlt
pop
adcb
icebp
bound
inc
cmpsb
sbb
std
and
call
scas
mov
mov
sub
out
rolb
sbb
popf
leave
sti
ss
xorb
enter
jbe
mov
dec
mov
fcomps
rolb
jecxz
or
test
pop
and
sub
mov
add
mov
jp
and
int
mov
sub
lds
push
push
lahf
push
mov
or
out
cld
sbb
in
and
mov
stc
xlat
in
cmp
add
lret
mov
loopne,pn
out
sub
cmp
mov
inc
repnz
xor
aaa
jle
or
mov
pushf
fnstsw
mov
imul
adc
out
sub
mov
mov
jle
adc
gs
and
and
mov
lret
xchg
jb
stc
fists
push
or
out
out
push
inc
inc
outsb
addr16
iret
add
ljmp
and
lret
push
dec
loope
out
imul
mov
fwait
push
push
sbb
das
call
jmp
dec
jge
xor
jb
popa
push
xor
ds
pop
or
lods
stos
sbb
stos
cmc
data16
mov
mov
lret
pop
adc
sbb
btr
jp
popf
lahf
dec
xor
and
ret
pop
popf
inc
out
xor
pop
mov
cli
in
and
leave
or
sbb
clc
icebp
cmp
sub
cmpsl
jmp
fldt
enter
cmpsb
test
fcomps
inc
or
fimull
lea
popa
sbb
movntq
cmp
xchg
add
test
into
xor
daa
mov
dec
push
sbb
hlt
inc
inc
call
xor
sti
cmp
into
setnp
push
add
ja
rolb
mov
iret
imul
push
pusha
loop
fwait
mov
xor
and
or
das
pusha
push
lcall
xor
sub
popa
mov
pop
or
xor
in
xor
inc
lods
pop
xchg
jg
scas
iret
mov
inc
jmp
or
add
std
mov
fsubrs
into
data16
mov
rep
dec
ret
pushf
aad
bound
gs
call
xchg
aaa
jge
xor
in
fs
sbbl
in
cmp
sub
mov
jnp
scas
lret
and
inc
shrl
mov
push
arpl
test
xchg
movsb
jae
out
xchg
and
pop
shlb
dec
sbb
sbb
cltd
fisttpll
and
lret
push
dec
mov
sbb
sub
add
push
inc
or
xor
mov
cld
dec
mov
jb
mov
pop
sbb
sub
pop
mov
arpl
gs
je
push
and
sbb
lds
mov
inc
fmull
fucomi
push
xor
divb
mov
and
push
xor
jmp
arpl
mov
cmp
mov
std
je
fistpll
or
jne
or
pushf
mov
imul
add
cmp
cmc
jmp
repz
pusha
cmp
xchg
popf
scas
mov
rcrb
flds
push
sbb
adc
xor
cmc
jne
xor
clc
aaa
adc
mov
es
xchg
jle
push
cmpsb
lods
scas
scas
or
mov
mov
cli
insb
fwait
hlt
inc
sbb
sbb
in
clc
lea
jne
ss
insl
cltd
into
pop
ja
pop
aaa
mov
shl
push
imul
cmpb
insb
sti
xor
mov
lods
sbb
or
ss
rorl
pusha
in
pusha
xsaveopt
cmp
stc
jmp
cwtl
pop
cwtl
popa
inc
mov
clc
xor
adc
test
xchg
mov
push
add
xchg
lret
pop
mov
mov
insb
call
fldenv
shll
and
jne
repz
ret
std
std
enter
ljmp
xlat
call
shlb
inc
call
scas
popf
xchg
add
push
dec
loopne
sahf
adc
fidivs
cmp
out
aad
inc
mov
sub
mov
sbb
inc
adc
mov
js
mov
mull
test
mov
idivb
mov
scas
dec
test
rorb
mov
lds
dec
into
adc
sbb
mov
push
jae
cwtl
lods
scas
stc
pmulhuw
sahf
xor
scas
fdivrs
or
push
pop
xchg
inc
dec
adc
inc
mov
popa
ret
fcomps
mov
gs
movsb
mov
mov
xchg
out
inc
lods
stos
adcb
pop
lds
dec
push
scas
sbb
daa
cmp
lcall
xchg
js
test
loope
cmp
movsb
lret
xchg
sub
sbb
xchg
out
mov
movsb
dec
ret
mov
aas
dec
in
loop
mov
stc
inc
mov
dec
js
push
in
scas
pop
add
mov
test
sub
dec
jb
lahf
std
in
xchg
cmp
dec
out
scas
xor
sarl
das
cmp
jbe
push
pop
push
and
popf
loope
push
mov
popf
ljmp
dec
jp
sub
mov
cmp
dec
mov
push
sbb
imul
ljmp
sub
paddsw
sbb
push
or
in
int
xlat
fwait
mov
jle
mov
and
lods
and
jle
mov
push
push
jecxz
clc
out
leave
les
stos
mov
rolb
xchg
jnp
out
sti
jge
pop
in
outsl
add
mov
xchg
adc
fstp
jg
cmp
pop
ljmp
push
pop
mov
movsl
stos
repnz
xbegin
sub
dec
scas
adc
loopne
pop
add
xlat
paddusb
addl
lcall
fimull
sbb
fisttpll
jp
ss
push
or
lods
inc
cmp
jns
or
call
xchg
jl
add
xchg
jge
das
stc
mov
jo
repz
xor
mov
repnz
or
pop
out
and
inc
stos
jmp
call
stos
mov
dec
xor
push
jb
add
add
test
fnsave
cmp
pop
js
shll
mov
push
rep
inc
lcall
cwtl
inc
jns
mov
outsb
mov
and
cmc
jns
fdivl
pop
sub
jge
shl
xor
movl
or
shr
mov
subl
mov
mov
addl
mov
adcl
shrd
shr
mov
cmpl
not
mov
movl
mov
jmp
mov
mov
jb
pushl
pushl
pushl
pushl
push
pushl
call
or
adcl
movl
sub
and
subl
subl
mov
mov
xor
xor
adcl
or
adcl
shl
add
add
add
mov
mov
adc
mov
and
shrd
cmpl
movl
not
mov
mov
jmp
movl
movl
jge
pushl
pushl
push
pushl
push
push
call
sbb
add
or
or
xor
or
add
mov
movl
cmpl
mov
movl
mov
jmp
movl
movl
jg
push
push
pushl
call
add
sbbl
mov
adc
mov
xor
mov
addl
sub
shr
movl
mov
or
mov
addl
xor
shl
cmpl
movl
mov
not
jmp
movl
ja
pushl
push
push
push
call
xorl
xor
incl
xorl
subl
sub
xor
mov
sub
or
cmpl
mov
mov
movl
jmp
mov
jl
push
call
addl
adc
xor
neg
mov
mov
add
sbb
and
mov
movl
mov
and
mov
movl
mov
add
movl
mov
mov
adc
jmp
ret
mov
dec
rcrl
mov
xchg
mov
mov
iret
push
repnz
jmp
ja
xchg
insl
sbb
or
dec
ret
mov
or
ljmp
pop
rorb
out
push
cs
les
sub
sbb
imul
test
addr16
push
xlat
and
inc
inc
mov
or
loop
in
jno
xlat
mov
loopne
xchg
daa
push
shlb
int3
and
icebp
dec
cwtl
inc
fcoml
push
pop
divl
pusha
and
xor
std
dec
movb
sub
in
andl
push
repz
cmp
xor
pop
fldz
or
push
icebp
dec
adc
fistl
rorl
test
lods
loopne
cs
sbb
ret
lods
dec
outsl
fcmovnbe
push
cmp
cmp
jecxz
jne
pop
jno
lahf
pop
fmull
inc
jp
add
lods
pop
mov
xor
sub
sub
sbb
movsb
loopne
mov
dec
push
and
xchg
jb
movsb
call
out
loop
pop
add
testl
cmc
dec
enter
sub
dec
pushf
jp
xor
vdivsd
sar
inc
dec
out
cmpb
iret
sti
les
fmuls
les
dec
loope
push
push
mov
lds
adc
imul
popl
xchg
arpl
fwait
imul
jns
dec
aad
push
mov
lods
fdivp
das
mov
fcomip
in
or
inc
mov
jge
scas
rcl
push
scas
test
popa
adc
pop
test
cmp
xor
leave
scas
movsb
push
xchg
jbe
inc
imul
dec
fs
stc
inc
lock
sar
out
popa
dec
sbb
pop
bound
pop
mov
sbbl
sti
std
cmp
sub
pop
and
pop
repz
push
mov
sbb
jmp
mov
leave
sbb
test
or
lret
sbb
jno
push
inc
aam
adc
addl
push
push
loop
and
stos
pop
jle
xchg
mov
and
mov
inc
idivb
sub
stc
mov
mov
sub
lcall
adc
inc
mov
lock
mov
imul
call
popf
imul
mov
es
xor
xchg
outsb
cmc
mov
pop
arpl
cmpsb
push
or
ficoml
jae
mov
pop
aad
das
in
or
mov
loope
fucomp
inc
mov
ss
jge
cld
scas
scas
xchg
mov
lods
mov
pop
dec
adcb
ljmp
pop
cli
nop
gs
loop
sub
aaa
cmp
test
fistpll
dec
out
mov
adc
jle
push
mov
ljmp
shrl
imul
sti
outsl
adc
sti
push
ret
stc
pop
or
xchg
out
mov
adc
fisubrs
mov
loop
int
loopne
sub
mov
test
mov
sbbb
aaa
iret
clc
jbe
popa
jp
out
and
ffreep
sub
aad
test
push
lods
daa
fwait
das
jo
repnz
test
mov
das
and
imul
xlat
or
rorl
lahf
or
fistps
sub
sti
jecxz
je
std
jle
pusha
cmp
sbb
out
xchg
gs
or
or
jne
stc
adcb
xor
sbb
or
test
mov
jl
lods
jl
mov
je
aas
inc
cmp
jne
and
adc
ret
pop
push
xlat
inc
pusha
inc
ficoms
hlt
dec
xchg
xor
leave
pusha
test
xchg
xor
xlat
aas
push
mov
lods
cmpsb
jbe
cmp
mov
mov
outsb
pushf
rcl
shr
xchg
test
cmp
sbb
mov
lods
xor
mov
jmp
push
dec
call
dec
lret
das
mov
add
shlb
mov
or
mov
stos
call
mov
popa
stc
pop
shr
jb
or
ljmp
insb
adc
adc
jns
sub
ja
out
in
incl
jecxz
xor
xor
das
pop
ljmp
jge
mov
repz
inc
fdivrs
leave
sbb
or
stos
dec
je
mov
and
icebp
repnz
mov
mov
pop
mov
fwait
mov
je
in
fs
push
mov
add
test
dec
mov
das
sub
daa
or
xlat
push
xchg
fwait
std
and
lea
push
cmp
daa
and
imul
fildll
push
outsl
mov
data16
notb
into
aad
aam
outsl
cli
fisttpl
mov
or
es
movsb
aam
or
ficoml
pusha
jnp
jnp
scas
xchg
add
rclb
sbb
cmpsb
xor
mov
movsb
cmpsb
addr16
scas
sbb
push
pop
mov
jge
or
mov
das
std
dec
adc
ss
loope
lahf
push
lahf
or
fadds
sub
in
and
nop
rcll
scas
dec
fcomip
inc
mov
mov
andl
aam
xchg
xor
xchg
test
mov
mov
pop
hlt
shlb
in
pop
outsl
or
pop
repz
sbb
sub
test
cmpsb
popa
cmpsl
and
ja
dec
daa
adc
icebp
ds
mov
ja
in
mov
clc
add
inc
mov
shll
pop
enter
js
xor
leave
xor
in
rol
lret
add
push
pop
pop
lret
or
test
imul
enter
clc
xchg
and
jle
inc
jmp
adc
ja
cmpb
insb
lods
xchg
xchg
pop
xor
dec
mov
mov
popa
jo
call
pushf
jbe
adc
inc
gs
pop
mov
addr16
pop
nop
xor
int3
xor
push
jg
sub
aam
cmp
sahf
add
sub
mov
daa
fcomps
mov
aad
adc
cmp
sahf
dec
rep
pop
popa
pop
pop
sub
adc
insl
test
sub
les
ret
push
lods
stc
ss
loop
enter
jns
js
jl
mov
jp
jb
push
rcrb
enter
sub
andl
xor
pop
jge
jl
add
jb
shlb
mov
nop
in
movsb
xchg
push
rcrb
sbb
jmp
out
adc
push
dec
jl
sub
cli
imul
loopne
mov
push
adc
or
pop
das
rorb
sahf
pop
mov
push
aaa
xor
dec
rcll
add
movsl
sbb
sbb
cmp
rcrb
mov
mov
mov
or
dec
aad
xor
and
and
dec
xchg
mov
mov
mov
out
adc
dec
pop
shll
push
fs
or
dec
dec
push
stc
sbb
sub
push
sbb
ficomps
outsl
push
sub
daa
push
sbb
cs
mov
arpl
cmc
out
add
into
movsl
mov
div
and
inc
mov
jmp
lods
jp
scas
adc
xchg
mov
pop
fisttpl
ja
mov
cltd
push
shl
jmp
jle
cmpb
insb
pop
das
sarl
adc
cmpsb
xor
mov
repz
hlt
mov
dec
sbb
dec
lahf
shrl
jnp
div
aaa
adc
arpl
in
add
test
xor
clc
lret
out
popa
adcb
sub
sub
fwait
stos
adc
lock
add
pushf
cmovl
inc
xchg
pop
push
sbb
movsb
push
subl
cmp
dec
out
lock
lock
fsubp
les
jns
adc
pop
mov
and
fwait
jns
daa
cli
sarb
inc
jb
mov
dec
mov
xchg
les
rclb
adc
not
lret
subb
loope
fwait
enter
mov
jmp
scas
test
push
icebp
pop
and
lds
lretw
ret
es
sub
out
out
jns
enter
cmp
dec
mov
sub
inc
loope
lods
sahf
xor
or
movsb
sti
outsb
mov
addr16
xor
shl
cmp
sub
cmp
test
rcrb
mov
xadd
outsl
xchg
mov
jle
dec
mov
sub
mov
rclb
stc
pop
push
fdivrl
aam
lret
mov
cmpsl
roll
mov
jmp
dec
add
sbb
clc
mov
cmp
gs
movb
sub
inc
mov
pop
es
jne
leave
add
sub
xchg
dec
cmpb
call
mov
scas
fistpll
sahf
loopne
push
int3
pop
cltd
xchg
and
or
xchg
ss
test
pop
movsl
jb
mov
stos
sti
int3
xchg
lock
dec
repnz
and
inc
xorl
mov
push
lret
push
mov
pop
in
xchg
in
ror
sbb
sub
lods
popa
negl
imul
imul
mov
pusha
mov
mov
ret
pop
add
negb
aam
lahf
mov
jle
adc
arpl
aaa
adc
imul
jbe
jnp
fcoml
loope
jmp
and
xor
sub
adc
push
popf
and
sbb
push
loop
aam
call
hlt
pop
cs
out
in
jmp
mov
repnz
mov
inc
fnstcw
dec
add
stos
sti
and
andb
xor
out
pop
shlb
orl
push
push
xchg
jge
cmpsb
add
push
pop
push
pop
adc
mov
dec
in
int
das
jnp
pop
adc
xchg
insb
dec
xchg
imul
leave
ljmp
dec
jbe
test
imul
scas
or
jno
push
andb
movsb
xlat
mov
mov
inc
xor
mov
jecxz
out
pushf
rol
cmpsl
addr16
inc
cs
sahf
cwtl
xchg
daa
mov
pop
push
push
cmpsb
sub
mov
xor
movsl
imul
jnp
in
sbb
lods
inc
mov
scas
mov
jnp
mov
addb
sarb
movsl
jecxz
movsl
and
mov
lret
xchg
push
dec
sbb
cmp
sub
in
sbb
mov
xor
pop
add
call
pop
stc
pushf
pop
push
sbb
repnz
mov
cmp
add
pop
nop
jg
mov
jo
or
mov
xor
pop
sbb
cmp
lahf
xchg
xorl
xchg
jp
push
add
adc
sbb
notb
inc
stos
lods
cmp
js
push
push
call
stos
xchg
das
ljmp
jge
jg
in
stos
mov
out
jmp
add
inc
push
push
fwait
repz
repnz
mov
fiaddl
or
xorl
xchg
rolb
push
ds
sbb
inc
test
scas
sti
mov
in
dec
mov
mov
sbb
pop
and
test
jmp
or
ret
repz
lods
jmp
fst
fs
stos
add
add
jge
scas
or
pop
pop
aas
out
movsl
scas
xchg
adc
out
out
jbe,pn
cld
xor
ljmp
xchg
nop
mov
cs
push
rcll
addr16
inc
call
jle
pop
into
in
das
or
xor
insl
mov
inc
push
in
insl
sub
loop
int3
bound
push
movsl
or
sub
repz
sub
movsl
dec
popf
dec
das
and
mov
rolb
adc
add
int
movsl
cmpl
fwait
cwtl
sbb
inc
sub
dec
mov
lods
jnp
in
je
mov
inc
pop
leave
rcrb
mov
iret
mov
or
push
outsl
daa
pop
push
inc
sbb
cmpsl
cmpsl
xchg
sub
pop
cmp
xor
push
fisubrs
outsl
adc
adc
mov
jmp
callw
push
pop
or
test
jo
je
lds
das
mov
push
pop
ss
stos
fisttpll
loopne
insb
inc
fdivrs
scas
pop
sbb
aas
cmpsb
std
and
fbld
lcall
add
gs
out
das
cmp
outsl
sbb
and
jo
xchg
mov
xor
movsb
shufps
ret
sbb
mov
jns
xchg
ret
jne
mov
lahf
not
aad
shrl
dec
pusha
sbb
inc
outsb
addr16
inc
dec
addr16
test
pop
add
inc
lea
mov
popa
jmp
ljmp
pop
nop
or
lds
mov
jl
jge
adc
aas
inc
insl
ret
pop
push
hlt
dec
lcall
sbb
call
movsl
push
scas
dec
arpl
mov
je
arpl
popf
xchg
add
mov
adc
leave
jmp
in
lcall
add
mov
dec
mov
dec
sbb
fidivrs
movaps
mov
data16
xor
push
rcll
or
dec
dec
sub
add
mov
ljmp
xlat
insb
push
fisttpll
mov
jp
adc
jo
fisttpll
add
rolb
dec
loop
mov
pop
popa
push
ja
jmp
push
mov
orb
inc
loope
pop
stos
add
push
jg
pushf
lret
popf
mul
aad
adc
lock
sbbl
push
jne
roll
and
das
test
add
inc
outsl
cmp
mov
loop
xchg
cs
xchg
xor
aam
adc
bound
pusha
xor
repnz
pusha
test
cmp
push
pop
test
ret
pop
ss
test
jns
fimuls
movsb
mov
jo
idiv
jle
pop
mov
cmpsb
inc
aad
shrb
mov
inc
sbb
adc
mov
mov
xor
inc
lcall
xchg
out
push
movb
adc
mov
mov
mov
shrd
jmp
add
dec
push
adc
call
outsl
lods
xchg
scas
lret
pfnacc
or
pop
imul
xchg
or
addr16
dec
pop
inc
and
mov
sbb
add
cld
in
insl
jae
daa
insl
addb
dec
test
test
dec
sbb
cmp
lods
mov
js
mov
mov
jo
cld
push
nop
xor
insl
dec
in
mov
mov
mov
filds
and
or
mov
jle
lds
in
xchg
cs
outsb
jo
mov
jae
jns
repnz
stos
popf
mov
sub
into
jmp
std
or
jnp
sbb
pop
mov
mov
outsl
in
mov
or
push
lahf
lahf
call
or
sub
sub
xor
jnp
adc
xor
int
and
dec
pop
and
aas
mov
popa
shlb
ficompl
mov
orb
mov
sti
pop
jge
lods
fisubrl
gs
andb
aaa
inc
xchg
pop
das
cmp
je
incl
mov
push
ja
sub
andl
jo
jle
lret
or
push
sbbb
mov
and
pop
and
mov
xor
mov
scas
enter
dec
pop
jo
add
cld
out
dec
push
loope
mov
sub
xchg
mov
std
mov
mov
aam
into
pop
stc
xor
sub
push
daa
and
cmpsl
and
shlb
dec
iret
test
div
or
repz
pop
adc
xchg
xor
flds
mov
jp
dec
movsb
fs
std
adc
test
shrl
sarl
inc
xchg
adc
adc
lods
jne
out
mov
xchg
mov
lods
std
pop
push
mov
test
jns
test
adc
cmp
mov
cmp
ds
mov
daa
loope
mov
dec
sub
test
cli
lcall
ret
mov
dec
dec
dec
sahf
inc
pop
imul
dec
add
mov
sahf
push
fstps
push
and
dec
stos
fnstenv
add
movzbl
icebp
aam
dec
mov
inc
lret
adcb
movsb
lock
pop
fisttpl
inc
js
outsl
fsts
pop
dec
iret
inc
and
push
or
fneni(8087
out
xchg
mov
push
sbb
cmpsb
push
or
aad
sbb
pop
pop
rorb
xchg
mov
mov
movsb
mov
adc
xor
jmp
dec
pop
into
xor
xlat
lds
cmp
or
insl
adcb
test
ret
pop
mov
andl
xchg
cmpsb
sbb
scas
loopne
fwait
jmp
bound
cli
push
adc
jnp
mov
mov
cmc
fwait
xor
dec
jns
jmp
fistpl
out
cmp
loop
inc
aam
jno
ss
lcall
sbb
fistl
bnd
sbb
out
sub
or
test
orl
cmp
xchg
les
shlb
sbb
aam
cmp
mov
inc
adc
jbe
jecxz
lret
sahf
fistps
push
clc
lods
shrl
cltd
iret
mov
int3
cmc
sbb
addr16
pop
xor
notb
and
cmpsb
test
dec
push
mov
nop
pop
mov
or
and
xlat
dec
mov
mov
xchg
sbb
jo
movsb
and
or
popf
cld
mov
loope
mov
mov
das
pop
ja
lock
xchg
jecxz
mov
xlat
lds
addl
aaa
icebp
inc
movsl
enter
jo
jbe
xchg
stos
dec
fsubrl
int3
nop
cld
cli
cwtl
pop
ss
xchg
mov
push
stos
pushf
ljmp
and
add
or
push
test
lea
nop
xor
popa
out
movsb
mov
xlat
jecxz
mov
btc
adcl
outsl
mov
push
movb
push
fsubs
jmp
push
iret
fcomps
dec
icebp
lret
test
dec
push
jl
repnz
or
cmpsl
das
sbb
mov
mov
loopne
sbbl
push
cltd
mov
cmp
add
sahf
pop
lret
jno
cmp
sti
pop
shrl
dec
adc
or
sbb
push
pop
out
adcl
insb
jl
lods
es
mov
add
mov
adc
mov
mov
or
sahf
out
mov
xchg
pop
or
fwait
jo
mov
shl
mov
pop
aaa
xchg
mov
jnp
int
pop
jae
adc
into
fisubl
mov
in
inc
punpckhwd
stc
sub
push
jae
jecxz
sahf
push
dec
dec
inc
shlb
mov
aaa
lods
inc
add
clc
movsb
adc
mov
les
jne
mov
das
adc
or
push
cmpsb
enter
sahf
push
add
or
mov
lahf
rclb
or
loop
mov
imull
sbb
fildl
mov
movsl
sbb
push
mov
shl
xchg
lea
push
xchg
and
ljmp
mov
xchg
sbb
and
orl
jecxz
xchg
js
push
add
rclb
cmp
inc
lds
je
inc
jb
jp
inc
insl
leave
sbb
lods
push
add
jmp
pop
cmp
je
or
cmp
adc
mov
stc
js
fidivs
push
dec
lcall
and
cwtl
fisubrs
push
xor
xchg
cmpsl
sub
rol
fiadds
mov
cltd
scas
adc
xor
inc
jp
xchg
and
mov
adc
pop
pop
mov
mov
mov
pop
or
out
mov
sbb
addr16
sbb
add
jge
pushf
sbb
lock
es
or
xchg
cmp
inc
sti
repnz
mov
jnp
adc
fs
inc
sarl
and
aam
js
add
sbb
mov
mov
jle
xchg
gs
mov
sti
dec
sbb
dec
pop
sbb
fdivs
xor
lea
jns
mov
cwtl
push
loopne
fadds
xor
xchg
mov
xchg
mov
or
insb
fwait
into
je
icebp
jmp
es
inc
repnz
mov
mov
loope
and
inc
or
jnp
shlb
inc
push
jo
push
dec
cs
cmc
push
mov
icebp
pop
in
sbb
inc
test
imul
das
xor
jmp
lods
out
xchg
jge
dec
fisubl
sbb
push
mov
or
and
ret
jmp
add
je
mov
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
jmp
in
in
data16
push
sbb
cs
ja
pop
lds
repz
jae
cmp
lods
xchg
test
sbbb
sahf
jp
jp
sub
fisttpl
loopne
or
mov
sub
out
jmp
sbb
or
aas
or
mov
sbb
push
lea
push
cmpl
std
movsl
repnz
and
mov
ficompl
in
and
mov
dec
dec
xor
cmpsb
testl
inc
jns
lods
push
imul
lods
jne
mov
mov
cmpl
fs
arpl
pop
pop
jae
sub
popf
jbe
lcall
mov
out
adcb
call
out
fwait
adc
mov
push
pushf
stos
adc
in
lds
fsubrs
scas
rorl
mov
aam
xchg
push
sbb
loopne
xor
call
loop
add
repz
xchg
push
jp
cmpxchg
xor
cwtl
ret
outsb
mov
cltd
pop
jge
or
dec
out
imul
negb
sti
mov
sub
js
nop
fimuls
push
mov
cmp
jnp
lret
mov
fmull
test
jl
addr16
jnp
ret
xchg
int3
movsl
inc
cld
push
es
out
mov
and
rclb
inc
lret
mov
cltd
add
decb
movsl
fcmovbe
push
cmp
pushf
mov
popf
repnz
subl
mov
ret
xchg
jb
mov
inc
in
inc
insb
inc
jecxz
fdiv
adc
inc
sub
fwait
call
enter
and
fildll
pop
and
daa
loope
rclb
mov
jnp
stos
xchg
xchg
jg
fcompl
stos
jne
or
movsb
mov
mov
pop
jbe
and
sti
cli
cmpl
sarl
mov
scas
add
jl
into
out
in
mov
mov
gs
mov
icebp
pop
data16
cmp
icebp
and
aam
xchg
or
pop
jo
xchg
stos
mov
dec
jo
call
add
jmp
push
lods
stc
fwait
sbb
iret
jnp
sub
adc
sub
push
int
fwait
mov
test
mov
ja
lret
push
sub
inc
in
mov
ja,pn
popa
sahf
mov
imull
mov
push
inc
mov
ds
jge
mov
cmp
out
mov
les
mov
iret
ret
adc
sub
addb
or
adc
push
xor
daa
js
xor
mov
cmp
lea
les
add
and
push
hlt
fldl
or
jmp
sbb
xchg
cmp
imul
or
adc
cmovp
push
popf
adc
xor
add
gs
push
idiv
sarl
jg
pop
or
fdivrs
mov
push
jo
in
mov
xchg
lahf
repz
lahf
mov
lods
aaa
scas
adc
pop
dec
aad
sbb
xchg
or
add
call
pop
or
sub
idivb
dec
je
arpl
jns
jg
addr16
mov
call
rcrb
push
xchg
push
and
imul
lahf
xchg
jnp
mov
aam
sti
inc
std
mov
je
or
test
out
xchg
xchg
scas
xor
cmpsl
ficompl
inc
xor
mov
or
lret
pusha
popf
addb
lods
mov
cld
mov
xor
shlb
sbb
fisttpl
cmp
arpl
add
push
aad
push
arpl
push
jnp
popa
sbb
iret
push
pop
jecxz
add
xchg
cmp
rolb
hlt
call
mov
mov
ss
dec
repnz
push
in
decl
pop
lods
ljmp
xchg
sub
imul
popf
aam
cmp
fucomi
push
and
cmp
pop
call
mov
test
sub
push
or
mov
push
iret
stc
and
in
push
mov
jp
sahf
sahf
je
cmp
mov
mov
movsl
mov
loope
call
push
mov
pop
pop
adc
lods
adc
dec
aad
cs
add
cmpsb
cwtl
loop
std
outsb
jne
adc
pushf
fiadds
je
xchg
mov
gs
mov
leave
iret
cli
pop
sbb
fdivrs
dec
ljmp
in
test
shll
add
sbb
cwtl
cmp
mov
add
lods
ljmp
adc
xorb
sub
aas
cmpl
and
xchg
mov
pop
or
pop
ljmp
dec
insl
les
pop
dec
xor
dec
pop
ss
sahf
fidivl
mov
pop
jg
sarb
sub
nop
iret
adc
aaa
inc
ret
and
fldenv
sub
mov
outsb
ljmp
sub
mov
mov
xchg
sbbb
mov
insb
or
dec
loopne
sbb
repnz
outsb
add
les
mov
xor
adcl
jnp
cltd
das
test
and
ds
dec
lret
fdivr
or
ret
mov
cmc
rorb
lds
lods
sbb
push
and
or
sbb
pop
push
into
jp
xchg
mov
pusha
xor
push
pop
jmp
inc
jecxz
jle
sbb
inc
dec
jmp
add
dec
sub
cs
xchg
inc
cwtl
adc
xchg
adc
lret
testl
pop
lea
fsub
inc
lret
xchg
dec
jbe
sub
addr16
sub
pop
and
stc
mov
rorb
fbld
cmp
xchg
mov
shrl
jecxz
sti
out
add
mov
sub
mov
scas
aad
sbb
mov
int
pop
sbb
push
inc
enter
mov
and
bound
inc
mov
push
cld
fisubrs
or
movsl
out
mov
mov
mov
adc
push
sub
mov
mov
xchg
push
xor
idivl
pop
out
mov
das
and
jnp
xor
mov
or
outsl
sbb
and
cmp
test
mov
push
inc
gs
mov
out
jns
jns
push
jg
mov
mov
fwait
xchg
or
js
sub
cmp
loopne
inc
pushf
iret
scas
mov
jae
cmp
jb
es
sub
adc
in
xor
into
add
mov
xor
mov
repz
sub
div
push
push
es
and
push
mov
ljmp
lcall
ss
mov
dec
rorb
push
mov
xor
xor
or
mov
mov
xor
jmp
outsb
hlt
xorl
in
mov
ja
push
pop
mov
and
lods
or
sbb
mov
fisttps
call
pushf
fimull
mov
das
pop
stc
pop
cmp
je
sbb
xchg
push
or
ret
outsb
jo
push
pop
shrl
or
push
xchg
ljmp
inc
mov
mov
push
es
and
call
je
popw
lret
in
adc
sbb
mov
add
cld
scas
shll
call
cmp
int3
mov
loopne
add
xchg
out
mov
mov
xor
push
movlps
mov
adc
jno
rcrl
shrb
mov
ret
cmp
cmp
clc
push
push
xchg
pop
inc
mov
mov
dec
inc
push
pop
xchg
sbb
inc
lds
push
dec
xor
pop
ljmp
adc
js
dec
push
pop
cmp
ret
xor
das
sbb
bound
out
pop
bound
jl
lods
add
mov
cwtl
lods
subl
cmc
je
je
jne
adc
mov
out
jo
mov
add
adc
cld
movsb
test
lea
insl
push
pushf
cmpsl
in
and
xchg
fldl2t
pusha
xchg
fsubr
into
ds
sub
adc
jns
mov
mov
jge
mov
or
test
mov
sbb
dec
lods
negl
inc
insl
mov
adc
lock
lret
and
sti
cmp
out
push
inc
into
pop
loop
mov
mov
pop
nop
cmp
xchg
inc
or
xor
popa
mov
movsl
inc
repnz
inc
push
sbb
xchg
fwait
push
xlat
mov
mov
mov
hlt
push
test
adc
mov
out
xor
jo
cmp
adc
testb
sub
xor
into
out
adc
dec
in
mov
pop
add
out
ret
jecxz
int
pop
jno
dec
in
push
stos
into
mov
test
fsubl
pop
xchg
sbb
stos
add
xchg
jle
ficomps
inc
xor
jae
xchg
pop
outsb
sub
movl
gs
adc
mov
and
pop
fcoml
mov
xchg
mov
dec
jne
cmp
ret
loope
xor
fildll
cmp
lret
adc
add
xlat
sahf
mov
fs
push
cmpsb
addr16
lcall
inc
add
rorl
add
mov
sbb
mov
or
lock
xchg
xchg
cmp
xchg
cwtl
pop
in
sti
fimull
movsb
cmp
mov
push
inc
hlt
jmp
cltd
mov
loope
icebp
jge
dec
das
sub
sbb
xchg
and
je
icebp
cmc
pop
aad
or
jb
in
xchg
jge
cs
sbbb
push
xchg
push
ds
jae
add
mov
roll
mov
nop
mov
ds
insl
lret
xor
cmp
inc
push
shl
mov
int3
mov
cmp
adc
xchg
lds
nop
and
sbb
push
mov
ret
ret
fdivs
and
aad
cmc
cld
and
lret
mov
aam
mov
or
pop
cmp
sub
scas
sub
and
nop
push
inc
in
pop
sbbb
jecxz
into
jp
lods
repz
push
lods
aaa
mov
shrl
pop
scas
or
inc
dec
push
pop
shl
dec
je
push
scas
mov
pop
adc
jno
mov
sbb
xchg
aaa
or
iret
popa
testl
imul
mov
pop
jp
inc
fbld
sub
invd
push
ret
stc
and
outsb
adc
mov
pop
push
push
pop
inc
sub
cmc
add
mov
enter
add
fsts
mov
ljmp
add
push
jb
push
xchg
and
outsl
mov
mov
int3
shl
lods
push
cmp
mov
mov
test
mov
add
jecxz
inc
sbbb
sahf
es
fstpt
fadd
jns
push
and
inc
and
dec
pusha
push
add
dec
es
push
jns
xchg
lcall
fidivrs
dec
aas
bound
push
xor
movb
in
adc
repz
adc
sbbl
xor
mov
out
sbb
hlt
repz
rcr
mov
push
inc
cmp
nop
dec
cmp
jne
jnp
out
fdivp
pushf
daa
mov
and
into
aam
adc
repz
je
add
jge
fldl
lds
fdivs
pushf
lods
lds
pop
inc
popa
outsb
sbb
mov
sub
out
clc
arpl
mov
aaa
jge
clc
dec
dec
arpl
gs
leave
dec
pusha
orl
xor
jns
mov
iret
dec
xchg
repnz
mov
es
add
and
cmp
or
mov
movl
xchg
dec
inc
dec
in
sub
imulb
add
je
fildll
inc
daa
push
add
sub
pop
shll
push
fmuls
rcl
mov
sub
popa
stc
pusha
subl
pop
lds
pcmpeqb
or
mov
sbb
addr16
pop
leave
stos
mov
pop
dec
xor
stc
push
lret
mov
jg
mov
mov
sahf
adc
pop
les
mov
xchg
sub
fildll
addr16
mov
out
std
les
xor
push
xchg
adc
daa
into
data16
jmp
sub
dec
popa
in
mov
mov
adc
inc
js
sbb
cmp
clc
push
adc
fs
or
push
ljmp
mov
fisubl
lock
mov
push
out
push
movsb
sbb
fimull
leave
push
aas
dec
pop
mov
int
clc
sbb
or
cmp
imul
jg
les
pop
sbbl
sbb
mov
popf
push
dec
js
cmp
repnz
pop
xchg
dec
pop
xchg
dec
add
push
icebp
movsl
lcall
xchg
mov
mov
pop
es
lock
in
mov
stos
ss
sbb
sbb
addr16
mov
pop
pop
push
popa
cmp
and
jne
pop
jae
mov
push
ja
arpl
push
fs
addr16
pop
push
lods
scas
aam
mov
loop
mov
insb
add
jg
movsl
aam
inc
xchg
sti
jns
xchg
xor
inc
inc
jecxz
movsb
push
jmp
les
sbb
adc
sbb
xchg
cli
gs
ss
inc
xor
push
movsb
push
in
imul
push
dec
adc
bound
ret
je
xor
adc
std
or
and
xor
inc
loopne
dec
in
lods
enter
add
in
mov
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
jmp
add
mov
inc
xchg
mov
xchg
les
loopne
xor
pop
daa
ss
add
inc
xor
popa
push
jnp
and
hlt
lods
scas
clc
dec
dec
sub
sbb
pop
pop
xor
roll
jnp
and
mov
pop
xor
push
outsl
jmp
sti
dec
aad
jle
mov
jae
adc
xchg
pop
cld
pushf
mov
push
arpl
and
xlat
adc
mov
notl
adc
mov
jnp
xchg
xchg
sub
stc
out
mov
test
mov
mov
xor
cmpsl
jne
movl
scas
lock
jl
cmpsb
or
orl
dec
push
imul
ds
xor
cmp
and
les
out
xor
fldln2
jmp
test
pop
gs
js
push
mov
jnp
loop
jnp
lea
insl
jns
pusha
jle
sbb
fldenv
adc
jmp
push
inc
add
aas
jns
xor
insb
mov
and
push
sub
rolb
scas
in
out
ret
xor
cltd
les
push
scas
inc
sbb
fbstp
je
addr16
pop
xor
mov
orb
dec
pop
jp
cltd
bound
mov
push
jns
dec
push
sbb
call
test
clc
les
ds
shlb
pushf
mov
cmpsl
imul
jg
push
cmpsb
add
ljmp
insl
test
idivb
mov
mov
inc
inc
stos
mov
pop
sbb
repnz
mov
xchg
cmpsl
mov
inc
pop
ss
out
aad
scas
fs
and
repz
ss
sub
imul
sbb
or
ljmp
enter
sbb
fcomp
pop
outsb
cmp
dec
cltd
scas
cltd
mov
xor
leave
push
push
xlat
push
lods
sub
add
inc
arpl
pushf
inc
push
sub
frstor
push
pop
test
and
fmuls
or
jmp
xorl
ficomps
or
roll
gs
ret
adc
loopne
dec
mov
leave
mov
stos
cvttps2pi
or
pop
fidivl
mov
lret
fldl2e
ja
add
inc
mov
lods
sub
xchg
or
cmpsl
xchg
lock
rorb
ret
xor
nop
push
inc
aam
dec
mov
adc
mov
in
popf
xchg
imul
cmpsb
mov
es
mov
insl
dec
mov
add
scas
repz
repz
out
shl
inc
and
jg
xchg
pop
xchg
mov
cmp
or
push
adcl
out
dec
outsb
scas
fsubs
pop
jmp
aas
cltd
sahf
inc
dec
jp
pop
xchg
xchg
sahf
fstl
sub
jo
cmp
cmpsb
loope
test
je
ficomps
addr16
inc
mov
inc
cmp
sub
fs
es
sub
mov
dec
xor
pop
mov
inc
jge
cmpsl
or
pop
push
and
icebp
js
xchg
cwtl
lods
mov
sbb
sub
push
inc
push
insb
pop
imul
inc
mov
inc
aam
in
test
jp
xlat
xchg
or
repz
inc
cmp
fcomp
andb
repnz
adc
mov
out
iret
test
js
sub
dec
add
push
xor
xor
outsb
and
xchg
xor
clc
push
shrl
aam
push
into
mov
neg
push
lcall
mov
xchg
inc
fcomip
int
jge
mov
xchg
pusha
or
cmc
ret
jno
mov
xor
lret
shrb
inc
rcl
outsl
mov
out
icebp
ljmp
inc
mov
xchg
mov
push
sbb
outsl
aaa
and
cs
inc
pushf
or
mov
sub
into
into
mov
pop
js
andl
mov
add
fnstsw
lret
cs
jle
std
addr16
cmp
xchg
jl
jmp
dec
add
pusha
rclb
les
enter
or
mov
xchg
xlat
lret
or
sbbb
minps
enter
pop
inc
aaa
inc
ret
pop
int3
pop
mov
lahf
xchg
popl
scas
xchg
and
and
aas
mov
mov
sub
and
and
lret
shrl
out
emms
popf
mov
cmp
lret
jae
out
arpl
inc
jmp
mov
stos
aaa
test
push
sub
push
sbb
arpl
adc
jae
es
jae
popf
imul
mov
ljmp
lock
stos
rolb
fildl
or
pop
inc
call
mov
cld
cmp
movsl
jo
xor
cmpsb
adc
pop
mov
js
pop
mov
outsb
jne
and
cmp
aad
cld
cli
test
loope
jg
adc
cmp
outsl
jne
push
mov
mov
dec
sahf
nop
mul
pop
nop
aam
loop
sub
adcl
andl
xor
insb
cld
ficompl
sbb
mov
movswl
movb
fnsave
out
shl
jge
cmp
inc
xchg
cwtl
xor
cmp
mov
and
ljmp
cmp
lock
dec
gs
call
adc
jle
adc
adc
cmpsl
xor
das
mov
es
or
aad
xlat
mov
adc
jmp
and
movq
shll
xor
stc
push
fdivp
inc
loope
mov
pop
cltd
adc
in
mov
push
add
aas
in
adc
jecxz
loope
je
xchg
loop
pop
adc
xorl
push
pop
mov
and
cli
fcmovu
mov
pop
out
xor
inc
push
mov
int
insb
add
fistpll
in
in
aaa
or
cs
and
jae
adc
pop
in
out
imul
mov
jne
mov
add
pop
or
jo
movsb
jmp
in
xor
test
mov
xchg
jle
dec
add
ret
xchg
push
out
test
jmp
addr16
add
or
mov
mov
leave
fstl
data16
std
push
fmul
int
call
push
cmpsl
fsubrs
mov
push
out
xor
stos
ret
push
add
lock
sub
test
ret
dec
in
mov
push
andb
std
dec
adc
mov
add
pop
in
pop
sti
loope
movsl
dec
jecxz
sub
or
repnz
pop
cmp
jge
jo
stos
jno
jno
and
pop
aad
xchg
mov
fcomp
inc
jecxz
ret
cwtl
ret
or
and
jne
call
stos
mov
jns
in
adc
jl
dec
test
fdivp
data16
lret
xchg
adc
inc
dec
fcoml
out
mov
notl
jo
out
sub
dec
ljmp
call
lods
enter
add
hlt
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
jmp
orl
push
cmpb
aam
mov
iret
mov
bound
ret
xchg
jbe
jo
test
cmp
push
and
pop
div
add
je
jb
std
lret
out
jmp
adc
dec
addr16
out
add
popf
lret
or
sub
in
repz
ja
addb
mov
fldl
xchg
test
cli
scas
pmulhuw
inc
push
sub
cs
lcall
mov
cmp
sti
pop
pop
mov
mov
shlb
movsb
xor
cmp
xchg
ds
cmp
jmp
cs
hlt
jg
popa
jmp
ja
sub
movsb
scas
repz
movsl
dec
mov
sub
jmp
fisubs
dec
or
jle
ret
dec
std
out
and
add
unpckhps
adc
pop
fcoms
adc
xor
pmulhuw
jle
inc
jnp
sbb
inc
cmp
jo
mov
push
lret
mov
sbb
push
cmp
stos
es
cmp
call
roll
xchg
sub
add
lcall
xchg
imul
mov
mov
iret
lods
mov
loop
lea
add
mov
pushf
insb
vmovntdq
mov
fs
bound
and
ss
and
mov
or
leave
repnz
loop
pop
mov
xchg
jl
cmp
cmp
adcb
pop
push
dec
xchg
or
sub
arpl
insb
sarl
cli
mov
jmp
pop
outsl
mov
dec
mov
add
and
inc
add
push
aas
push
out
sub
pop
and
rcrl
adc
jmp
and
xchg
dec
push
jns
inc
je
lods
std
ja
mov
out
in
lcall
imul
push
adc
test
or
pop
mov
lods
jmp
xchg
mov
fstl
sub
pusha
jbe
mov
decb
cmpsl
and
sbb
in
xchg
sbb
cmp
cld
mov
cmpsl
pushf
dec
adc
in
arpl
push
repnz
or
cmc
mov
push
cwtl
ret
add
lods
rcrl
mov
fidivs
or
mov
rcr
test
or
xchg
mov
jmp
fucom
jp
mov
inc
ror
mov
inc
mov
popa
jecxz
mov
ja
mov
jmp
pushf
pop
jl
dec
and
out
mov
dec
mov
sub
sbb
xrelease
cs
in
dec
inc
enter
cwtl
adc
lods
mov
jl
loope
xor
stc
push
imul
xor
sbb
leave
ret
lds
sub
lcall
dec
loop
pop
and
pop
cmp
sti
jge
repz
movsb
imulb
mov
je
mov
enter
cmp
sahf
lods
ficompl
mov
sub
sub
push
xlat
hlt
js
push
inc
cmpsl
andl
fsubr
or
push
pop
or
nop
or
or
or
int3
dec
loope
shl
pop
out
inc
leave
fbstp
ret
push
imul
inc
pop
xor
xlat
cmp
or
push
movsl
xor
test
out
dec
jae,pt
jp
push
sub
lock
mov
fsubs
sub
jae
push
outsl
insb
ss
int
ds
mov
jecxz
cmp
mov
dec
stos
lods
test
add
mov
mov
pop
sbb
lcall
or
mov
adc
lret
mov
subl
jl
mov
mov
repnz
loope
mov
stos
mov
adc
mov
pop
rorl
fisubl
inc
pop
icebp
loopne
pop
popf
out
cmp
lcall
movsl
push
iret
int
rorl
aad
ja
xor
rcll
dec
mov
add
sub
inc
push
insb
mov
jle
out
jo
sti
jns
leave
out
jle
outsb
sbb
sub
sub
mov
dec
mull
js
mov
jbe
cmp
add
dec
enter
sbb
icebp
push
lds
roll
add
sbb
jp
or
push
inc
add
inc
daa
insb
repnz
insb
cmp
test
or
jg
into
es
aad
mov
mov
movsb
lcall
daa
mov
add
sub
mov
jp
ljmp
mov
std
mov
cmp
lret
and
sbb
sub
iret
insb
add
pop
pop
xchg
das
fiaddl
adc
push
xor
popa
jmp
cmpsb
test
xor
fldenv
fs
dec
dec
dec
test
fidivl
xchg
sub
lcall
push
jp
pusha
fimuls
and
test
pop
adc
punpckldq
pop
dec
dec
in
icebp
das
and
sbb
das
mov
sahf
lret
cs
in
xlat
adc
pop
mov
out
mov
jnp
mov
aam
add
fdivs
dec
fnstcw
mov
or
or
and
sbb
add
adc
into
adc
dec
xor
aaa
loopne
loope
hlt
cmpsl
adc
jg
loope
mov
cli
into
jbe
adcb
sar
outsl
adc
lds
xchg
in
loop
and
sqrtps
rol
mov
aaa
loop
or
push
mov
imul
call
rcrb
mov
xor
cmc
mov
pop
movsl
adc
mov
sarb
mov
fstpl
xor
mov
cli
cmp
mov
pop
lock
push
cld
out
mov
scas
adc
mov
in
sti
inc
add
or
lock
lods
std
sbb
xor
jmp
jno
mov
popa
leave
cmp
xorl
mov
pop
cmpsb
jnp
lret
mov
mov
das
mov
divb
out
rclb
insl
divl
mov
pushf
ret
jne
xor
adc
push
xchg
ret
lea
push
jecxz
incb
inc
xchg
testl
mov
ficomps
or
xor
pmuludq
push
pop
int
jo
out
fnstcw
xor
mov
ds
std
sbb
sub
push
fadds
push
jmp
je
sub
aaa
lret
dec
sbb
aad
pop
jbe
sub
fstp
loope
dec
out
in
pop
cmpsl
adc
lret
dec
mov
pop
pop
push
in
adc
jae
sub
repz
and
outsl
xor
adc
movl
mov
adc
jns
insl
aad
xchg
sub
sahf
lds
loop
xchg
mov
mov
pop
mov
pop
lahf
mov
or
xor
pop
out
or
adc
or
push
data16
add
push
cli
mov
cwtl
popa
cmpsb
push
cmp
shrb
shrl
mov
mov
cltd
or
add
imul
xor
div
cmp
dec
lock
in
lods
sub
loope
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
jmp
mov
and
setns
dec
insb
adc
js
xchg
ja
push
out
scas
and
int
xlat
lods
test
arpl
jl
xor
repnz
fxch
mov
outsl
cltd
lret
clc
mov
stc
cmp
cmp
out
pop
roll
mov
mov
adc
jns
fs
add
das
out
mov
inc
pop
mov
pushf
int3
daa
call
cmp
mov
in
cmp
js
mov
repz
bound
hlt
mov
sbb
orl
inc
jae
jg
add
iret
xchg
out
cwtl
or
ja
add
jne
jo
cli
inc
adc
mov
and
mov
cmp
sbb
stc
jge
fstpt
and
jg
pop
jecxz
xlat
mov
pop
orl
sbbl
les
mov
bound
in
mov
insl
int
inc
cld
das
fdivl
mov
jmp
xchg
xchg
add
gs
fwait
imul
mov
and
mov
frstor
push
or
sbb
aad
or
xchg
insb
mov
or
das
sbb
sti
insb
xor
jge
mov
mov
mov
xchg
fstpt
add
pop
mov
fmuls
ss
test
or
ret
mov
inc
pop
mov
sub
in
movb
jg
and
scas
push
js
fmuls
adc
and
inc
movsl
ret
dec
sbb
shlb
mov
or
inc
mov
xchg
cld
stos
arpl
or
fbstp
pop
push
out
out
movsl
lret
outsb
in
and
sbb
div
out
pop
adc
sar
scas
xchg
les
shlb
out
push
sarb
aas
jbe
int
inc
add
mov
adc
clc
arpl
jo
cmp
mov
pop
fists
icebp
inc
int
fsub
das
mov
inc
xchg
inc
push
push
mov
out
cmp
mov
in
movsb
rcll
sub
or
jno
inc
xor
movsb
fldcw
into
iret
adc
pop
loop
mov
jge
aam
sub
in
pusha
xchg
scas
sbb
jno
xchg
es
and
ficoms
push
cmpb
cmp
jbe
jns
and
jg
popa
jmp
mov
popl
fildl
jl
inc
pop
fsubrs
sub
jb
test
sahf
int3
push
sub
int
addr16
ljmp
sub
repnz
dec
mov
xlat
mov
cmp
sub
xchg
xorb
pop
sbb
mov
mov
mov
mov
mov
sbb
dec
fs
test
xchg
shlb
loopne
mov
mov
cmp
or
jl
pushf
mov
ss
mov
push
mov
jecxz
adc
out
jmp
outsb
ja
mov
push
jge
je
clc
into
adc
sbb
shl
loop
testl
xor
loop
shrl
je
lcall
lock
test
pop
add
mov
xor
inc
es
fs
fwait
lock
push
add
int
adc
mov
vpmaxsw
lods
jne
pop
faddl
push
xchg
femms
pop
shrl
leave
cmp
add
push
int
aas
adc
loopne
dec
fs
mov
out
test
lock
outsb
jo
push
xor
xchg
sbb
push
adc
lods
rcl
sysret
sbb
outsb
dec
movsb
enter
aad
and
cmp
addb
and
adc
sub
ret
shll
pop
add
loopne
add
xchg
add
jecxz
bound
loope
or
gs
mov
lods
les
jb
hlt
xor
loope
daa
inc
mov
andl
dec
dec
or
out
aaa
sahf
inc
insl
test
or
inc
inc
arpl
shrb
inc
loopne
jo
adc
inc
adc
les
sahf
jge
inc
lea
cmp
clc
cmp
mov
xlat
test
fucom
dec
pop
sub
call
push
daa
xchg
pop
and
sub
iret
std
sub
mov
push
fwait
enter
cli
ss
jno
pop
mov
daa
mov
jne
jle
mov
sub
stc
xchg
mov
mov
into
push
lret
js
push
push
sub
jle
dec
lods
jnp
mov
dec
scas
sub
cmp
ret
lea
push
roll
inc
sbb
xchg
pop
pop
push
cmp
pop
or
rorl
cmpsb
nop
mov
mov
mov
lods
jl
js
mov
cmp
jnp
pop
xchg
stos
fidivl
addr16
xlat
cld
lds
fiaddl
mov
fldt
and
push
je
sbb
mov
and
cmp
mov
test
mov
push
movsb
pop
jle
aam
jecxz
mov
icebp
xlat
mov
xor
test
mov
mov
fidivrl
inc
mov
popf
or
pop
lods
test
xchg
gs
jmp
clc
jle
das
push
test
xchg
xchg
mov
insl
jb
dec
pop
sti
lods
mov
sbb
mov
push
inc
lcall
xchg
icebp
nop
insb
fdivs
sbb
shrb
cmp
cmpb
sbb
sub
imulb
stc
ret
pop
jp
and
lret
sbb
cmc
add
aam
jecxz
out
dec
xchg
sub
fisubl
inc
inc
pop
add
jle
nopl
scas
pusha
mov
mov
push
mov
sbbb
stos
out
cmp
rcr
stc
mov
dec
jge
pusha
dec
ret
mov
dec
push
loope
fs
popa
pop
out
inc
jae
ja
sub
lahf
stos
ffree
dec
jmp
aas
scas
iret
mov
in
cmp
push
xor
fucomi
jecxz
fcomps
dec
sbb
inc
lods
loopne
stc
pop
jbe
adc
scas
jle
xlat
or
test
push
push
and
xlat
mov
cmp
aam
mov
test
or
sbb
outsl
pushf
and
ss
orb
mov
xchg
repnz
adc
cmp
stc
dec
out
es
push
or
ds
fstpt
frstor
add
push
or
outsl
pop
or
mov
xor
in
scas
mov
in
mov
aad
in
notl
push
sar
jl
push
pop
xchg
inc
in
jnp
jecxz
push
xchg
push
or
mov
jmp
fs
lcall
inc
adc
xor
inc
adc
jmp
mov
cmpb
xchg
pushf
and
push
lret
pop
jne
lock
bound
pop
in
imul
inc
push
or
inc
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
jmp
ret
fwait
mov
and
cs
push
loopne
ja
and
shlb
js
cmpsl
xchg
push
gs
shrb
pushl
cmp
cmc
xchg
push
inc
out
mov
jne
pop
or
outsb
and
cmp
pop
mov
inc
mov
push
test
lock
fstpl
jne
xchg
outsb
cmp
lcall
shlb
ret
push
mov
sub
cli
lcall
xor
lret
roll
cmc
imul
aad
js
inc
es
push
mov
inc
adc
push
cli
cmp
jmp
pop
sub
and
addl
jg,pn
dec
loopne
inc
mov
fidivrs
mov
or
sti
leave
jge
inc
fnsave
xchg
loope
shll
scas
cmp
movsb
pop
shrb
outsb
push
sti
jo
aaa
sub
mov
jb
adc
add
or
mov
fdivrs
int
mov
mov
mov
lcall
jne
mov
cmp
or
shrb
pop
push
mov
sbb
and
dec
and
jle
test
mov
xchg
mov
push
mov
scas
dec
add
dec
movsb
movsb
out
dec
push
jno
mov
sub
xchg
mov
pop
adc
push
add
push
lds
cmp
inc
lds
push
jge
push
les
aas
mov
xchg
lods
mov
push
test
leave
nop
mov
lds
out
mov
icebp
mov
xchg
sbb
inc
test
jecxz
pop
sub
xor
ljmp
test
adc
push
mov
and
sahf
mov
shrb
test
push
pop
out
pushf
out
loopne
leave
leave
xchg
adc
mov
push
inc
mov
shlb
sahf
dec
sbb
inc
jo
mov
xchg
or
loop
mov
out
std
mov
scas
add
pop
pusha
inc
popf
fistpl
jl
xchg
cmp
sbb
adc
and
and
clc
mov
xor
clc
subb
gs
mov
filds
pop
xor
lahf
jno
in
jno
jge
ret
cli
dec
mov
push
mov
call
and
push
repz
cmp
xlat
inc
xchg
jg
mov
jnp
add
jl
mov
insl
cltd
sub
jne
movsb
in
add
popa
repnz
and
fisubrs
cs
mov
ret
clc
repz
mov
jae
test
and
dec
popf
and
mov
adc
and
scas
adc
outsl
jno
fisubrl
ror
insb
mov
cmpb
je
es
dec
pop
mov
lea
in
cwtl
xchg
inc
lea
test
fidivrs
push
fnstenv
jbe
and
leave
addb
dec
xor
dec
rcrl
dec
add
inc
jae
and
inc
jnp
repz
and
lea
sarb
cmp
mov
frstor
mov
mov
out
jge
adc
dec
jnp
mov
gs
fistl
xchg
push
repnz
fwait
xor
jl
jns
repnz
stos
pusha
arpl
inc
psrlw
fildll
mov
ret
hlt
inc
mov
cmp
mov
stos
jne
pop
mov
cmp
in
jns
sub
loope
jno
sbb
mov
inc
xor
inc
or
sti
jecxz
into
lret
imul
mov
test
mov
test
repz
push
dec
sub
dec
xchg
mov
sbb
adc
pop
adc
bswap
mov
and
mov
sub
mov
mul
mov
fstl
pop
push
jp
adc
add
push
push
or
mov
jnp
ds
jne
lds
sub
adc
jl
mov
ds
out
int
fcmovnbe
jb
and
or
mov
das
arpl
mov
or
test
xor
mov
xor
in
stos
test
data16
cvttps2pi
xchg
pop
std
push
jge
xchg
divb
jecxz
divb
lock
sbb
stos
out
cs
jo
ret
add
dec
or
test
mov
insb
ret
movsl
insb
dec
mov
xor
pop
nop
pop
popf
push
loopne
cmc
sti
mov
inc
sbb
ja
dec
sub
lret
addb
int3
pop
xchg
sarl
insl
cmp
rorb
mov
aas
rolb
lcall
std
test
pop
movsb
ret
xchg
pop
cmp
mov
orl
scas
or
incb
fwait
or
xchg
ja
xchg
mov
jbe
jge
inc
into
cmp
cmp
adc
int
mov
jb
stc
lds
daa
aaa
cld
iret
sub
in
stc
addb
stc
enter
pop
and
and
out
sahf
jge
mov
shrl
aaa
pop
pop
or
scas
and
or
push
push
mov
inc
dec
pop
bound
test
popl
call
or
pushl
out
lret
ret
fs
scas
pop
test
pop
aad
dec
int
fimull
bound
xor
fsts
mov
mov
dec
int3
loop
in
sbb
pusha
push
jmp
je
pop
jnp
aam
add
xchg
pop
gs
mov
cmp
insb
mov
sti
js
mov
clc
xchg
inc
dec
das
gs
sahf
dec
cld
aaa
mov
push
push
fcoml
cmp
inc
daa
pop
sub
push
push
push
imul
mov
fs
aam
loopne
mov
or
and
xlat
testb
mov
pop
cmp
jae
jno
es
lret
xchg
push
push
gs
movsb
sbb
int
adc
bswap
cmpsb
and
push
out
lock
fimuls
imul
lds
scas
clc
mov
iret
mov
inc
mov
js
pop
xor
pop
mov
pushf
popl
in
call
xchg
push
int3
sub
movsl
ss
addb
xor
pop
sub
add
fimuls
adc
outsb
dec
pop
jle
in
adc
jle
sub
jl
orb
push
pop
ret
sbb
or
xchg
std
adc
cltd
faddp
sbb
cmpsb
lahf
imul
scas
stos
sbb
test
jp
stos
scas
mov
mov
fisubrl
popa
dec
pushf
push
dec
mov
lock
nop
fisubrl
outsb
xchg
jnp
push
je
jb
fsubrs
xchg
lock
pushf
out
rcrl
mov
shrl
out
das
fwait
push
mov
fadds
mov
cld
pop
sub
add
cmp
imul
cmp
push
into
sub
mov
rorb
icebp
cmp
dec
daa
cmp
cld
fldenv
test
xor
sub
pusha
xchg
mov
mov
mov
jmp
aam
inc
test
addr16
add
xchg
rclb
ja
dec
pop
popa
xchg
loopne
push
fisubrl
gs
xchg
pusha
pop
cld
ret
mov
int
in
jae
dec
push
or
mov
sub
lods
pop
out
inc
mov
in
arpl
jo,pt
pop
cvtps2pi
xchg
shrb
les
lock
and
pop
lret
cmpsb
push
push
mov
ljmp
aas
cmp
lds
fsubp
cld
fcompl
or
mov
cmc
mov
mov
mov
js
inc
cmpsl
cltd
mov
aas
jmp
xchg
pusha
sbb
int
call
cmp
dec
adc
ljmp
stc
mov
sbb
in
lahf
xlat
lods
rclb
and
inc
hlt
mov
pop
mov
stc
sahf
xchg
das
xor
sbb
subb
rclb
sbb
sbb
adc
imul
arpl
sub
xchg
clc
sub
adc
sbb
cmpb
and
ljmp
shlb
cmpsl
jmp
repnz
mov
xor
sbb
cld
inc
lahf
cmp
fldcw
add
push
je
pusha
adc
lods
stos
mov
sahf
xchg
test
lret
fisttpll
adc
and
mov
jnp
jne
ret
ds
ljmp
imul
dec
sbb
adc
pop
fistpll
dec
cmpb
jo
rorb
loop
iret
cmpsl
loope
test
stos
pusha
push
mov
aad
cwtl
xor
mov
sub
outsb
inc
sbb
aas
stos
popa
push
xor
lea
shlb
jge
sbb
das
shrl
ret
pop
mov
xchg
call
loop
push
rcll
push
fmull
roll
or
gs
push
les
addr16
lods
xor
mov
mov
dec
push
call
arpl
fwait
add
mov
inc
mov
bound
movsl
outsl
cmpsb
adc
and
inc
movsb
push
cmp
mov
jo
fildll
mov
push
jns
leave
and
insb
test
add
adc
push
cmp
aas
jge
inc
cs
fs
in
push
and
push
jge
aad
pop
fcmovu
dec
dec
lods
inc
fldl
push
icebp
cltd
fsts
push
movsb
cmpsb
mov
shl
bound
test
mov
pop
out
and
inc
daa
xlat
outsl
nop
xchg
ret
xchg
mov
xor
dec
les
mov
out
inc
pop
adc
in
jo
cmc
icebp
loope
and
imul
aam
sbb
cmp
sbb
cltd
fiaddl
sbb
lcall
push
dec
inc
cmp
mov
xchg
cmpl
mov
fbstp
mov
jns
adc
stos
popf
inc
mov
insl
cli
lock
insl
cmp
cli
and
insl
dec
dec
fcmovu
cmpsl
adc
lcall
mov
in
push
push
xor
in
push
push
pop
lods
cmp
in
inc
mov
movsb
cmpsl
jmp
imul
cmp
push
into
les
push
cmp
cmc
stos
imul
mov
jae
cltd
daa
mov
pop
lds
mov
movsb
lgs
jl
adc
outsl
sub
pop
sbb
xor
popa
cmpsl
and
xor
lea
repnz
adc
sub
lcall
sub
insb
add
in
test
imul
sbb
push
sbb
inc
mov
cmp
fdiv
adc
push
bound
jnp
push
arpl
dec
mov
cwtl
push
sbb
push
les
mov
push
jo
inc
push
lret
xchg
fimull
ds
incb
outsb
adc
cli
push
mov
test
jmp
loopne
loopne
sbb
test
scas
daa
stc
adc
sub
jecxz
cmp
inc
out
dec
mov
pop
xchg
lea
sbb
or
xchg
or
jle
aaa
dec
adc
ret
jecxz
inc
ljmp
sar
sub
inc
push
mov
movl
in
cmpsb
repz
cmp
mov
loop
divl
sbb
aas
cmp
enter
mov
adc
mov
out
cmpsl
cs
jbe
jl
push
or
xor
stc
mov
inc
js
xchg
dec
or
push
cwtl
pusha
repz
iret
lret
movsl
cli
mov
in
jp
push
lret
or
add
xor
lret
pop
shlb
jp
adc
lahf
xchg
and
in
hlt
movsl
fcomp
iret
xchg
mov
push
mov
insb
adc
imul
mov
or
cmp
mov
cmpsb
sub
pop
ja
inc
les
mov
xchg
aam
mov
sbb
in
jge
cwtl
dec
cwtl
add
push
or
test
mov
mov
and
jle
jb
stos
in
add
push
inc
push
jae
sbb
ret
jl
push
cld
cmp
out
pop
pop
mov
in
mov
pushf
dec
pop
and
stos
je
iret
mull
out
push
aad
jmp
push
ss
sbb
in
imull
xlat
mov
mov
fwait
sbb
ss
jl
sar
dec
movsb
push
int
mov
xor
adc
sub
imul
mov
in
sti
in
push
fildl
or
inc
out
fadds
push
or
xlat
xchg
fidivs
sbb
xor
jp
es
inc
mov
in
sub
iret
scas
push
mov
xor
inc
jbe
inc
lret
jno
lock
sbb
jnp
add
inc
jmp
test
inc
adc
mov
inc
pusha
push
lods
sbb
lods
repnz
insb
mov
clc
fiaddl
into
jne
cwtl
rol
jb
mov
fcmovnb
fcmovb
fs
pop
cli
outsl
push
rorl
xchg
testb
dec
nop
jo
jno
pop
mov
fs
aas
jbe
loop
scas
xlat
bound
or
jne
cmp
test
jbe
lds
movsb
sub
adcl
add
xchg
in
cmpsl
fisttpll
fwait
decb
push
jg
call
das
jo
mov
popf
xor
in
movsb
add
sahf
push
add
pusha
mov
fistps
out
inc
filds
push
insl
mov
shrl
jbe
pop
ja
mov
out
jo
sub
cs
jae
cmpl
jnp
fs
scas
shll
imul
stos
std
push
jg
popa
sub
stc
mov
jg
mov
iret
dec
push
repnz
mov
add
push
pop
idivb
lds
repnz
mov
into
iret
ss
es
aas
sbb
loope
pop
fmul
cmp
fistl
int
jb
xchg
mov
leave
mov
inc
adc
jg
stos
enter
push
xor
dec
or
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
jmp
adc
cmp
ret
aam
mov
or
lock
ja
inc
mov
jae
iret
out
scas
je
dec
lock
out
cs
cmpl
int
sub
test
or
mov
stos
mov
imul
dec
int
call
pop
stc
push
idivb
lea
fs
sbb
scas
xchg
pushf
cld
test
sub
adc
jns
xlat
sahf
adc
sbb
cli
arpl
xchg
les
mov
sub
pusha
fiaddl
test
mov
daa
mov
and
das
xchg
cmp
jns
add
sbb
dec
xor
sahf
cs
stos
pop
int3
ss
lods
lahf
jp
jo
aam
mov
lahf
mov
movsb
lock
jecxz
mov
ds
dec
sbb
jg
lret
ds
mov
addl
hlt
cmpb
cmp
orb
addr16
aam
xchg
xor
xchg
pusha
sarl
cmp
ret
dec
push
fimull
lcall
cli
nopl
enter
pop
sub
fdiv
inc
or
sub
add
ss
cwtl
xor
dec
leave
adc
cld
cli
neg
and
xor
shl
or
push
mov
std
outsb
jp
ljmp
push
lds
mov
fwait
mov
or
mov
in
in
fnstsw
out
push
test
sub
rcrb
and
imul
adc
imul
fdivrl
lods
add
and
sbb
add
cmc
mov
cld
lahf
dec
aaa
in
mov
insb
and
loop
mov
xor
das
and
mov
cmp
mov
in
sbb
and
mov
aaa
inc
clc
jbe
test
test
pop
pop
mov
lock
xor
out
imul
sti
mov
adc
inc
in
rclb
xor
pop
fsubr
push
xor
mov
jmp
or
dec
sub
xchg
mov
or
lods
sbb
mov
movsb
pop
out
lock
and
adcb
inc
ret
movsb
fisttpll
add
in
mov
enter
lods
movsl
movsb
sbb
jecxz
je
xchg
xorl
dec
jb
push
fcoms
les
or
lret
mov
movsb
sub
jbe
js
jo
je
in
mov
and
mov
addr16
mov
ret
std
inc
shlb
enter
push
pop
js
movsb
idiv
nop
push
shll
add
add
loopne
xor
cs
mov
ss
in
mov
fwait
jo
mov
xchg
inc
mov
xor
pop
pop
jno
push
aad
ja
and
xor
inc
lret
movsl
lcall
push
fcmovu
xchg
cwtl
sub
xor
in
icebp
push
dec
cmpsb
inc
idivb
lret
fdivrs
jo
stc
cwtl
sbb
mov
jp
dec
aas
sbbb
lock
arpl
jmp
outsl
mov
push
add
rorl
call
jmp
das
add
add
mov
mov
dec
imul
in
shl
pop
mov
cld
sbb
mov
add
pop
or
scas
dec
mov
ficoms
mov
cwtl
dec
out
ret
cld
add
adc
dec
xchg
xor
pop
fnstenv
add
out
std
push
dec
push
pop
pusha
dec
loope
fs
mov
ret
adc
test
aas
andb
clc
add
mov
in
cmp
push
scas
push
repnz
xchg
sub
jae
lods
or
int3
lods
inc
in
icebp
aas
mov
sbb
bswap
stos
adc
cmpsb
into
pop
cmpb
cld
ljmp
xchg
push
pop
out
repnz
sub
pop
or
test
sarb
push
jae
cmp
jmp
jne
xchg
or
xlat
and
inc
push
ret
std
mov
loopne
pop
inc
cmc
imul
pop
shll
xor
out
mov
out
sbb
cltd
fs
cli
or
jg
mov
test
sub
repnz
ja
xlat
fs
insl
mov
icebp
push
pop
fcomps
test
jle
fxtract
cs
rclb
pop
prefetcht0
iret
das
bswap
iret
jmp
mov
vpshab
inc
push
adc
xlat
nop
fistps
mov
adc
or
jns
ja
cmp
jg
mov
xor
inc
or
push
push
mov
sarl
cmc
imul
out
or
adc
into
mov
jle
test
fsqrt
out
ficoms
divb
dec
out
fs
mov
mov
into
stc
sub
mov
jg
cmp
aaa
inc
popa
ss
jb
or
jle
mov
mov
cmp
adc
dec
mov
cmpsl
aaa
cmpsl
ljmp
cld
add
cmpsb
fs
jecxz
in
mov
lret
jnp
mov
icebp
mov
cmp
xchg
dec
je
mov
jbe
push
ja
popf
mov
pop
subb
dec
stos
jbe
sub
jo
xchg
std
iret
scas
sub
out
adc
adc
js
mov
aad
add
or
and
or
mov
mov
mov
cwtl
mov
daa
mov
fstpl
jle
mov
add
push
push
sub
jp
pop
or
loope
mov
or
ss
xchg
sub
ret
pop
ss
mov
aam
ljmp
int
vucomiss
sbb
dec
loop
js
subb
jbe
js
js
push
lret
xchg
test
cmc
lret
cs
xchg
pop
mov
pop
push
cmp
xor
dec
sti
jb
mov
das
jb
xor
mov
mov
out
subb
ja
xlat
stc
push
mov
jmp
dec
jb
cmp
test
xchg
les
jg
and
xchg
test
add
add
je
mov
imul
pusha
addr16
xchg
icebp
adc
push
push
adc
sbb
dec
inc
pusha
and
ljmp
outsl
pusha
lret
gs
xchg
fwait
dec
jl
stc
or
mov
pop
mov
xor
jnp
and
sub
push
or
movsl
test
in
or
or
vpsubusw
outsb
dec
and
pop
iret
test
sahf
insb
mov
rclb
lds
movl
add
cmc
add
and
sub
inc
or
sbbl
jg
loope
add
jne
dec
jb
add
mov
sbbb
sub
cmc
cltd
inc
imul
mov
ss
shlb
shr
or
cmpsb
jg
fstpl
movsl
push
test
inc
add
mov
popa
sbbb
mov
jno
sahf
pop
mov
dec
leave
dec
inc
jle
nop
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
jmp
sbb
and
aam
cmp
push
add
dec
xchg
jle
push
xchg
push
or
sub
xchg
movsb
mov
xchg
dec
inc
add
and
pcmpgtb
sarb
adc
test
xchg
es
mov
stos
fisttpl
fdivrs
lret
mov
adc
sub
jle
mov
sbbb
xlat
loopne
mov
xor
movl
outsl
shr
mov
push
pop
popa
cli
cwtl
dec
loop
sbb
sti
pop
std
dec
loope
jns
mov
xchg
mov
xor
jb
dec
xorb
add
in
inc
sub
stc
cmp
or
aam
jae
sub
xchg
inc
test
in
xchg
inc
jg
mov
out
enter
xor
dec
out
in
sub
mov
mov
push
mov
pop
mov
or
pop
inc
jbe
in
test
das
in
es
movsl
les
and
ret
repnz
inc
das
arpl
bound
sbb
loop
xor
push
push
cmp
int3
shl
cmpsl
sub
adc
adc
lds
mov
cmpsb
mov
cmpsl
ss
outsb
push
xor
aaa
into
fcoml
xchg
das
xor
or
and
popa
ftst
adc
xor
inc
push
jmp
pop
sub
mov
sbb
std
mov
add
test
lds
xor
mov
imul
or
neg
cmp
std
inc
ds
mov
imul
loop
std
out
ficoml
scas
sbb
jb
jnp
dec
or
repnz
hlt
xor
or
dec
pop
xchg
mov
sub
pop
jecxz
lahf
jbe
xchg
and
fsts
push
cwtl
cmpb
je
dec
xchg
mov
mov
aad
xchg
ljmp
mov
mov
xor
imul
ss
adcb
mov
jae
xor
shrb
push
fidivl
repnz
notb
cmpsl
or
pop
sbb
mov
xor
xor
xchg
sbb
ja
xorl
mov
bound
in
sub
mov
jno
inc
pop
jmp
inc
lcall
pop
mov
or
in
cmp
outsl
pop
cmp
pushf
xchg
or
dec
or
sti
sarb
xor
or
mov
sub
sub
mov
add
pop
cmpl
jns
push
push
ljmp
mov
pop
sub
andb
dec
sub
std
les
pusha
imul
push
clc
mov
sub
add
mov
sub
sbb
pop
or
or
cmp
fcmovne
fadds
test
insl
outsl
or
cltd
shlb
fadds
push
rcrb
push
jp
mov
inc
in
faddl
sub
popl
jge
mov
pusha
rcll
fwait
leave
mov
mov
mov
loop
or
and
mov
popf
loopne
mov
insl
scas
inc
push
and
jnp
cmp
or
cltd
and
aad
xchg
daa
mov
loope
pushf
std
pop
jne
clc
push
inc
cmp
iret
insl
pop
scas
scas
push
add
adc
push
leave
xor
inc
mov
das
ds
data16
cmpsl
shr
jle
pop
xchg
add
mov
lret
out
sbb
jns
push
dec
adc
pop
xor
pop
nop
xchg
lret
out
inc
aam
and
out
sub
sahf
pop
mov
push
jg
sti
mov
or
and
or
mov
and
scas
nop
and
inc
sbb
dec
or
dec
insl
notb
cmpsl
pop
loopne
loop
push
sbb
adc
aaa
into
daa
fbld
push
mov
mov
outsb
push
jbe
lds
jmp
fwait
out
add
mov
shrl
push
js
lcall
filds
in
fimull
aaa
dec
bound
out
mov
cltd
in
lds
sub
jmp
sahf
stos
add
and
imul
cwtl
xor
adc
mov
insl
inc
stc
dec
or
lahf
mov
es
lea
sbbb
xchg
mov
mov
daa
hlt
loopne
or
inc
nop
cmc
sub
stos
aad
lods
dec
dec
hlt
subl
mov
sub
test
jno
mov
imul
mov
gs
mov
or
or
jae
clc
inc
sahf
std
cmp
cwtl
xchg
xchg
clc
inc
shll
movsl
or
add
fcompl
xor
mov
bound
push
and
adc
in
sub
cli
push
loop
mov
int
sbb
xchg
xchg
xchg
sbb
loopne
mov
mov
pop
pop
adc
in
je
ss
jg
jo
jecxz
das
iret
cmp
cmp
xchg
scas
aam
dec
pusha
in
dec
stc
sbb
test
mov
cmp
mov
add
mov
int
out
or
fcmovu
clc
inc
lods
xchg
ret
sahf
add
adc
jl
popa
popf
cli
clc
adc
dec
aaa
push
cmp
adc
dec
jae
cmc
orl
shrb
add
pop
push
adcl
cli
repnz
mov
int3
xor
adc
lods
push
loope
das
sti
jb
fucom
sahf
mov
sub
imulb
or
jp
pop
push
adc
inc
ret
jecxz
dec
mov
lds
daa
xlat
cmpsl
mov
mov
cmp
push
enter
and
pop
in
adc
sbb
pop
pop
xor
xchg
xor
ficoms
jecxz
xor
imul
sbb
push
cmpsb
cmp
push
xchg
andb
pop
mov
jns
sbb
stc
clc
inc
out
dec
cmpsl
pop
ret
in
shr
pop
jmp
out
int
in
mov
dec
imul
sub
out
out
dec
push
mov
mov
fdivrs
sbb
lret
mov
mov
push
fcmove
xchg
cmp
pop
lods
push
fstpl
xchg
imull
adc
push
pop
pop
ss
scas
mov
movsl
incb
jge
stos
dec
pop
jnp
xor
andl
dec
push
sti
jb
mov
mov
hlt
pop
in
lds
jp
cmpsl
adc
je
shlb
lret
mov
loop
movsl
fcmove
lcall
cmp
testb
pusha
das
fstps
scas
outsb
dec
sub
cmpb
cmp
cld
ss
xchg
jb
jmp
ficomps
add
je
mov
adc
jmp
dec
or
in
inc
xchg
sti
into
lea
add
ss
push
inc
jbe
pop
gs
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
jmp
sti
test
sbbl
lods
mov
dec
aas
ja
lahf
aaa
pop
inc
jno
shrb
cmp
sub
sbb
inc
mov
or
fisubs
jge
dec
xor
push
ficomps
pop
and
outsb
mov
push
add
push
divb
test
mov
leave
enter
dec
lods
lods
mov
test
arpl
jae
test
sub
nop
movsb
xchg
sbb
adc
hlt
mov
call
fwait
int
add
jbe
adc
pop
xor
loopne
loope
mov
xor
bound
rol
push
mov
pop
pop
icebp
add
push
jnp
lock
adc
enter
jecxz
jnp
xchg
add
jge
ret
push
fildl
jbe
adc
cs
call
movsb
lret
ret
sbb
iret
int3
mov
or
mov
fcmovnu
ficoml
imull
push
inc
mov
incb
add
cli
add
sub
cli
mov
jmp
pop
sub
sub
sbb
loope
ficoms
sbb
imul
sub
jo
ljmp
sarb
fwait
out
out
je
sbb
inc
dec
movsl
pop
in
mov
mov
jb
pop
xchg
cmpsb
loope
dec
shr
sbb
inc
and
push
test
imul
addr16
sahf
inc
jo
jno
push
fs
fmuls
mov
push
fwait
scas
sbb
adc
mov
test
and
mov
jbe
nop
mov
pop
cmpsl
in
in
mov
fcmovbe
movsl
incl
enter
pusha
loope
data16
cwtd
dec
pop
lret
test
test
rorl
xchg
pop
xor
xor
inc
aad
stos
add
rcll
inc
jne
leave
fucomp
pop
pop
inc
pop
sbb
pop
xor
push
psrlw
stos
inc
mov
mov
lret
push
clc
out
mov
repnz
add
xor
stos
loopne
call
xchg
push
icebp
add
pop
dec
test
jmp
lock
lret
daa
int3
mov
push
xchg
fsts
xchg
jl
popf
fcomip
shlb
in
push
sbb
das
xchg
push
lret
shlb
pusha
loop
test
adc
movsb
mov
sub
mov
sarl
divb
jo
inc
pop
cwtl
adc
fisubs
xchg
jo
mov
bound
jne
jp
dec
aas
xchg
pusha
loopne
xlat
cs
out
fadds
jae
adc
pop
loop
cmp
xchg
test
push
add
cli
test
imul
dec
jb
scas
push
ds
out
je
iret
xlat
dec
outsl
mov
sbbb
mov
ja
add
sti
addb
and
mov
pop
ret
sub
fistps
leave
xchg
cmpsl
cmp
shrb
fsubrs
mov
or
das
adc
pop
add
popa
cwtl
nop
push
inc
pop
leave
js
ret
jge
aad
paddw
xor
add
pusha
sbb
fmul
movsl
test
loope
mov
xchg
scas
in
cmp
insl
movb
mov
mov
push
sarb
icebp
icebp
inc
xchg
lods
bound
and
repz
shlb
sub
mov
enter
mov
das
popf
mov
xor
negb
cs
mov
mov
lds
jnp
sbb
mov
jne
mov
jns
and
popf
lods
rcrl
sbb
test
jle
dec
in
int3
shl
fistpll
or
jge
test
fmul
sbb
hlt
dec
rol
insb
sub
mov
xlat
shrl
sbb
sub
lock
push
icebp
leave
sub
mov
cmp
or
icebp
and
test
out
test
cld
xor
add
jmp
xchg
ficoml
lss
sbbb
mov
pop
repnz
call
lcall
mov
mov
dec
stos
shll
pushf
aad
pop
push
pushf
inc
jo
mov
inc
or
jmp
jns
repz
add
cmp
or
rorb
mov
mov
jge
cwtl
addb
adcb
adc
jp
arpl
ret
mov
aad
gs
fsubl
xchg
clc
pop
push
mov
lods
xchg
cli
cmp
shll
mov
rorb
ljmp
mov
jle
aad
sub
movsb
mov
sbb
inc
stc
icebp
and
sub
stc
ret
pop
mov
inc
jns
and
clc
iret
dec
mov
push
lods
movsl
cmc
jge
cmp
test
dec
push
adc
pusha
stos
cld
cld
icebp
lock
mov
lods
outsb
fildl
insb
cs
cmp
dec
lods
mov
dec
xor
mov
bound
rol
inc
lcall
cmpsl
test
mov
pop
decl
push
repnz
arpl
dec
cmp
xchg
adc
sbb
pop
data16
mov
mov
cli
out
cmp
test
pop
and
rolb
add
mov
into
sbb
aas
aas
sub
rcl
jge
mov
pop
pusha
imul
fldl
sub
fbld
or
mov
call
int
dec
xor
jmp
adc
adc
mov
lret
sbb
and
ljmp
stos
out
push
pop
ds
xchg
inc
hlt
pop
jno
or
dec
repz
cmp
fxch
jbe
mov
inc
sti
cmp
loopne
inc
out
lea
sbb
lds
jae
mov
mov
cli
adc
js
mov
push
xchg
andl
dec
and
mov
sub
push
mov
push
fsts
xor
in
cmpsb
ljmp
dec
sub
dec
push
jbe
fwait
arpl
in
insl
movsl
mov
out
pop
mov
inc
jmp
icebp
xor
xchg
rorl
inc
push
fidivrl
jl
and
icebp
pushf
std
cmpsb
out
or
jae
add
addr16
testb
les
fldl
and
out
mov
inc
push
mov
fwait
sbb
ds
pop
insl
mov
mov
inc
sub
cmp
pop
inc
rdpmc
add
jge
scas
sub
test
scas
mov
push
fistl
push
mov
imul
xchg
mov
sbb
in
jl
movsl
ret
adc
push
ljmp
test
pushf
and
cs
mov
les
dec
mov
xchg
std
push
fcomp
xor
jl
or
ret
outsl
mov
xchg
cmp
push
cli
ret
cwtl
fdivl
jl
push
add
arpl
test
ljmp
inc
nop
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
jmp
nop
loope
pop
dec
gs
int
xlat
sub
loop
xchg
ja
loopne
mov
mov
lock
mov
out
out
cmp
dec
push
cmp
and
dec
je
dec
xchg
mov
inc
andb
sub
xor
add
adc
sub
movb
xor
mov
stc
test
mov
daa
jnp
addl
mov
xor
clc
sbb
sub
mov
sti
movl
xchg
shlb
pop
ret
push
popa
ss
std
mov
out
add
mov
jae
imul
and
sbb
dec
movb
test
add
mov
mov
sub
cmp
push
or
shr
clc
mov
xchg
lods
insl
xchg
test
aad
or
push
mov
pop
cmc
pop
jl
je
dec
mov
idivb
dec
daa
jno
outsl
cmp
idiv
mov
push
fdivr
in
mov
push
ret
mov
adc
xor
push
mov
cmpsb
pop
call
dec
cmp
sbb
lcall
cs
outsl
inc
inc
jmp
in
movsb
pop
nop
out
outsl
mov
mov
pop
shll
push
sub
inc
xor
push
and
fs
inc
sub
sub
add
js
push
pop
repz
and
test
insb
popf
and
xor
addb
pop
cmpsb
pop
mov
loope
call
lahf
dec
in
movsl
cmp
mov
std
mov
mov
mulb
sub
icebp
add
iret
inc
ds
push
adc
punpcklbw
push
out
shl
sbb
xor
aam
cmp
mov
xlat
dec
xor
mov
sub
movsl
addr16
pop
pop
or
rclb
cmp
iret
orl
sub
sbb
imul
sarl
loop
enter
xchg
inc
fmull
pop
mov
pop
mov
mov
jmp
sbb
sahf
jno
das
test
mov
pop
adc
sbb
nop
add
mov
cli
ror
mov
insb
call
xor
mov
and
sub
aad
das
xlat
inc
cli
dec
cmp
loop
xor
push
sbb
cmp
add
fdivrs
cld
in
sti
jns
leave
cvtdq2ps
inc
add
and
inc
insl
in
jne
jmp
cmp
scas
lea
loopne
inc
mov
jge
sbb
or
or
cmp
les
jae
fsts
stos
pop
out
jg
pop
orl
mov
call
cmpsb
push
mov
inc
or
mov
or
jo
popf
xlat
mov
dec
xchg
addr16
repnz
popf
lds
or
out
jmp
sub
or
pop
add
fsubs
loop
stc
push
les
sub
xor
push
mov
adc
cmp
push
cwtl
pop
pop
sahf
mov
sbb
adc
cmp
xor
mov
fwait
rcll
push
das
mov
xlat
fwait
int
mov
push
sbbb
push
pop
pop
movsb
push
dec
jnp
pop
cld
mov
cmpsl
and
mov
aad
int
pop
mov
sbb
sahf
lds
pop
iret
loope
mov
arpl
outsb
pop
nop
inc
outsl
xchg
pop
out
pop
sti
enter
jmp
cltd
les
ret
and
in
or
mov
add
pop
andl
dec
fldenv
lahf
dec
sub
push
xchg
pop
sbb
ljmp
xor
sub
or
loop
sub
jmp
sub
inc
dec
movsb
cwtl
or
pushf
or
adc
sahf
aad
dec
jmp
cmpsb
orps
testb
add
aad
cs
push
and
nop
orl
sahf
push
les
mov
push
or
decl
repnz
js
sbb
clc
out
into
rcr
pop
adc
push
scas
mov
add
jne
add
or
subb
inc
imul
inc
fldcw
shlb
cmp
push
mov
sub
fnsave
hlt
cmpl
in
div
loope
out
add
and
jbe
sbb
sti
pop
cld
pop
data16
rorb
repz
push
inc
pop
mov
jg
cmp
pop
adc
fldcw
int
insl
dec
aam
pop
and
pop
es
pushf
jge
fldcw
fstl
push
add
arpl
insl
mov
dec
dec
jge
jno
fdivs
mov
testl
inc
inc
xor
outsl
pop
cltd
pop
pop
cld
jns
out
repnz
leave
jbe
test
xchg
push
into
bound
out
movsl
cld
inc
xor
lret
inc
jg
cmp
lods
push
push
adc
testl
add
or
sbbl
arpl
mov
and
mov
sbb
les
cmp
and
iret
je
or
push
lret
jge
ja
fcoml
mov
mov
sbb
fdivp
aaa
fwait
lods
jl
fisubl
pop
mov
inc
scas
cmp
add
adc
mov
jae
in
jb,pn
mov
sbb
imul
stc
das
cmp
cmp
xchg
aam
data16
movsl
and
mov
ljmp
xor
jle
outsl
outsb
pop
lods
xchg
inc
push
enter
dec
inc
cmp
aas
sbb
mov
push
andb
lret
push
addr16
push
pop
jb
dec
dec
out
sub
callw
add
jo
sbb
aaa
cmp
test
push
hlt
rcll
pop
cmp
sbb
je
sub
xlat
pushf
arpl
outsl
cmpl
inc
jg
sub
push
repnz
cmpsl
int3
in
les
aaa
aaa
mov
sbb
gs
sbb
rcr
inc
xor
dec
imul
fldl
jnp
ja
pop
push
jecxz
xchg
xor
or
addr16
hlt
cld
add
js
movsb
add
je
divl
adc
pop
pop
xor
push
leave
lock
mov
shr
inc
push
out
bound
xchg
cmp
test
loop
or
or
movsb
adc
mov
add
popl
cmp
mov
mov
nop
lcall
mov
sbb
mov
jl
adc
popf
lods
sbb
xchg
lret
mov
or
out
mov
out
jp
cmpl
cmc
mov
adc
adc
mov
das
add
sub
mov
leave
dec
mov
xlat
or
dec
popa
lcall
gs
pop
or
iret
or
cmovnp
jmp
loopne
push
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
jmp
dec
loope
lret
sbb
or
mov
adc
psrad
mov
mov
repz
jecxz
roll
and
push
lcall
sub
and
scas
jmp
mov
push
xchg
ja
in
mov
cld
xlat
mov
int
pop
inc
and
jp
test
aad
cld
and
mov
pop
dec
and
dec
jns
pop
call
inc
xchg
ja
add
mov
ret
aaa
mov
jbe
dec
and
mov
movsb
pop
cmp
xchg
sbb
dec
in
xchg
or
add
loopne
ljmp
scas
pop
rcrb
pop
xor
out
rcl
jns
aad
in
aad
lods
int
scas
sub
js
shlb
pushf
pop
sbbb
aaa
pop
loop
ja
test
mov
lock
xchg
mov
in
out
push
fldt
pop
pop
xchg
mov
pop
imul
pop
inc
inc
cmc
stos
and
add
or
bound
jno
inc
decb
scas
int3
sbb
movhps
fs
add
out
hlt
mov
mov
add
mov
enter
and
or
lock
hlt
push
sub
call
sahf
cld
ret
add
mov
test
xor
push
lods
das
push
jnp
in
push
jle
aad
dec
xor
adc
ror
out
lods
inc
xlat
sar
cmpsb
cmp
call
stos
std
inc
js
dec
jecxz
add
adc
push
jge
pop
pop
jae
xor
jl
test
sub
fcoml
imul
push
inc
fadd
jnp
int3
loopne
or
popf
popa
and
pop
inc
and
push
lea
mov
cmp
notb
mov
into
testb
fs
loopne
test
adc
adc
pop
loopne
sub
je
or
lcall
xor
cmpb
incl
push
divb
sahf
mov
daa
and
cli
mov
lock
lds
in
sub
pushf
aas
cmp
cld
mov
cmp
scas
mov
mov
scas
or
std
lea
mov
inc
xchg
jle
pusha
aad
fcoms
out
lret
inc
int3
pop
popf
and
arpl
andl
lods
sub
ficompl
rorl
mov
dec
mull
outsl
ror
inc
std
xor
mov
lea
and
push
loopne
sub
inc
lods
fldenv
or
fists
inc
popf
add
outsl
xchg
mov
mov
ss
fistps
arpl
xchg
dec
fcompl
push
mov
or
or
loop
adc
lods
xchg
sub
cs
ret
mov
dec
sti
rcll
and
cld
popa
leave
xchg
mov
fstpl
jge
ret
adc
xchg
push
sbbl
cmp
xchg
fwait
and
pop
xchg
addl
mov
inc
sbb
lret
or
lcall
lcall
std
insb
mov
aam
push
cwtl
dec
outsl
imul
inc
xchg
and
outsb
into
daa
dec
popa
adc
mov
push
lret
and
bound
xlat
fwait
testb
add
cli
rcr
add
inc
ret
pusha
jnp
jbe
movsb
loope
inc
clc
mov
or
jmp
adc
dec
loope
mov
mov
sbb
jl
bound
fiaddl
enter
mov
ret
jns
and
add
fstl
cmp
cltd
data16
pop
and
xchg
je
les
add
inc
sbb
sti
sub
out
mov
arpl
lfs
in
jbe
dec
pop
lods
es
jg
and
or
add
mov
bound
fiaddl
push
adc
insb
aad
movsb
loope
je
sub
inc
dec
cwtl
outsl
lahf
push
movsb
rol
mov
sahf
leave
lds
bnd
mov
mov
mov
lods
add
nop
xor
mov
xchg
shl
jl
pop
cmp
and
and
out
pusha
ss
pop
dec
xor
filds
test
sub
shl
pop
sub
int
call
mov
jo
ljmp
mov
jmp
cli
xchg
fisttpl
pop
out
mov
push
mov
das
fidivrl
sbb
mov
lock
shrl
jecxz
inc
jns
rclb
cli
outsl
out
add
inc
sub
adc
pop
scas
mov
loopne
mov
add
mov
aaa
int
fwait
shll
push
adc
sub
repnz
xor
push
test
adc
or
faddl
and
mov
push
xor
add
leave
das
ret
repnz
fwait
mov
addl
push
add
push
mov
into
xor
sub
jb
adc
repnz
mov
or
dec
bound
punpckldq
sbb
push
push
lods
inc
jge
into
dec
vprotw
xchg
xor
push
das
cmp
sub
fs
gs
mov
leave
inc
lock
xchg
mov
pop
xor
das
fwait
cs
sbb
sub
aaa
notl
push
lcall
das
ja
xor
hlt
dec
pop
dec
cmp
push
inc
mov
push
sti
fldl
cmpb
test
sbb
mov
mov
sti
je
push
sbb
fcoms
mov
push
push
adc
cmp
test
in
xchg
lock
stos
test
ror
dec
cmp
push
push
mov
sti
lds
adc
dec
mov
enter
sbb
je
mov
nop
das
fldcw
sti
mov
jecxz
out
mov
add
hlt
push
fucomip
movsb
loopne
push
rcll
mov
out
lea
sub
dec
mov
int
inc
fidivl
gs
add
jp
jmp
jno
jne
mov
inc
push
jmp
loope
mov
movsb
sbb
fwait
jb
shll
push
push
je
sbb
push
outsl
jle
add
out
cmp
xchg
test
or
xor
lret
jne
dec
in
and
push
test
flds
jbe
ss
and
fnstsw
fs
int3
jmp
xor
negl
cli
jg
mov
sbb
and
fdivp
out
sub
dec
subb
inc
imul
leave
jl
xchg
ss
icebp
dec
ljmp
leave
cmp
dec
push
add
mov
push
xor
incb
mov
ret
outsb
sbb
push
movl
out
xchg
rcrw
push
inc
enter
ds
mov
cmpsb
movsb
or
or
subl
jno
mov
mov
lret
xor
sarb
jmp
inc
xchg
xchg
mov
or
and
xor
mov
sarl
and
dec
out
ljmp
test
or
ret
sub
das
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
jmp
cltd
push
in
sub
jno
cmc
cmp
mov
imul
mov
lods
xchg
or
aas
jmp
xchg
in
cld
lods
xchg
jl
push
xchg
or
or
sbb
mov
leave
cmp
and
mov
scas
lods
dec
std
jl
sub
push
or
aad
inc
xor
mov
enter
popf
aam
push
jnp
inc
mov
push
nop
or
add
in
out
xchg
hlt
mov
xor
push
loopne
aaa
arpl
dec
jp
mov
iret
cli
mov
jmp
rcrb
push
cmc
adc
lods
jb
scas
popf
xchg
mov
jbe
fsubrp
xchg
xor
or
jmp
and
testl
cmp
xchg
cmp
addb
pop
outsl
ret
icebp
fadds
das
push
jecxz
sti
adc
xchg
adc
sub
and
push
dec
loop
cmp
lahf
es
pop
dec
and
in
pop
aad
stc
mov
stc
gs
fwait
fwait
or
cmpsl
adc
andl
in
sbb
bound
mov
sbb
in
pop
ds
aas
adc
clc
lret
jge
mov
cmp
rcrl
mov
repnz
lock
cltd
addl
or
test
mov
sbb
je
je
daa
int
adc
enter
int3
sbb
rclb
add
jg
or
hlt
push
dec
aaa
adcb
xchg
adc
and
fs
cmpsb
inc
jecxz
dec
inc
into
mov
mov
fst
sub
mov
andb
push
sbb
or
arpl
test
pop
into
jmp
sahf
das
and
lret
ja
inc
xchg
nop
mov
jne
push
push
hlt
inc
aas
jmp
cmp
push
aas
xlat
fwait
cmpsl
repz
inc
jge
mov
jge
xchg
ret
loopne
mov
fcoml
insl
gs
mov
jb
outsl
push
push
movsl
mov
arpl
mov
inc
popa
mov
cltd
jecxz
pushf
xchg
push
xchg
ss
mov
int
jnp
jmp
jns
dec
nop
xor
into
out
jg
mov
cli
adc
or
add
jecxz
push
stos
loop
in
add
into
cwtl
cmp
jo
push
stos
push
loop
pop
adc
inc
mov
dec
xchg
les
push
xchg
inc
xor
pop
ret
sar
push
outsl
sub
lcall
mov
rolb
aas
sub
mov
sbb
sbb
lods
leave
pop
lea
adc
cmpsl
xchg
sbb
mov
in
add
push
call
sbb
ss
imul
lret
inc
mov
pop
push
mov
add
leave
xlat
out
aam
mov
cmp
pop
xlat
aam
or
cmc
cld
lods
aaa
aam
movsb
ret
sbbl
scas
aad
repnz
loopne
xchg
inc
enter
jl
cmp
int3
sub
aaa
int
dec
sti
in
mov
lods
pusha
jmp
xor
and
mov
jecxz
inc
lods
jl
roll
repz
lock
popf
add
lock
xchg
stos
mov
cwtl
xchg
orb
pop
add
push
mov
push
into
sbb
dec
pop
cmpsb
push
lcall
mov
ljmp
pusha
xor
je
rcrb
inc
insb
mov
pop
imul
repnz
inc
testl
repnz
pop
faddl
repz
dec
pusha
cmpsb
dec
int
push
push
flds
dec
stos
sbb
lock
loope
push
or
sub
xor
sahf
cmpsb
adc
and
inc
adc
pop
pop
mov
dec
ljmp
xchg
mov
add
repnz
jecxz
bound
and
pop
adc
daa
cltd
mov
call
popf
fwait
enter
fsubrs
ficoml
and
inc
ja
fwait
jge
sbb
cmp
jb
shl
clc
and
pop
add
leave
mov
sub
test
adc
sub
xchg
shlb
pushf
lret
dec
xor
add
mov
mov
in
test
addr16
jae
jmp
clc
enter
mov
mov
inc
das
enter
push
dec
out
mov
xchg
addr16
and
stos
jb
ffreep
xchg
std
mov
sahf
mov
loop
inc
xor
xor
dec
popa
sbb
not
mov
pop
ljmp
cmp
inc
scas
enter
and
jg
xor
insl
ret
lcall
dec
xchg
daa
jge
repnz
dec
cmp
jno
out
xchg
out
scas
movsb
filds
inc
ret
call
mov
ja
lcall
xchg
jmp
in
mov
jp
je
jne
fnsave
pop
cmp
loopne
and
movsb
mov
negb
lods
daa
mov
out
add
pop
fmull
lea
ret
adc
mov
push
mov
fistl
and
mov
xor
hlt
je
lods
ljmp
sub
cld
lea
cmpb
mov
aaa
xchg
adc
out
into
repnz
lock
xchg
js
imul
test
mov
jne
fidivs
dec
stos
sbbl
or
cmp
subb
push
push
dec
or
ja
loopne
and
mov
pop
mulb
int3
xchg
outsb
movb
xchg
mov
shl
jbe
in
int3
js
mov
mov
pop
stos
jmp
sub
pop
lcall
mov
subl
push
push
call
mov
or
jp
movsl
lret
dec
or
stos
movsb
adc
push
or
sub
sub
sahf
or
repz
cmp
pop
cltd
test
dec
imul
mov
dec
jge
pop
xchg
int3
inc
mov
ret
jo
outsb
movsb
pop
inc
xor
popa
scas
aad
inc
call
test
cld
lock
mov
xchg
mov
out
mov
ds
jg
push
jl
adc
fildl
xchg
and
roll
bound
xchg
pop
jns
into
fildl
push
js
bound
push
fcoml
mov
out
int3
in
mov
scas
popf
push
fsts
aad
sub
lret
jg
test
arpl
mov
lahf
cmp
mov
xor
add
iret
inc
jmp
push
dec
repnz
enter
pop
stc
xchg
jecxz
push
jno
dec
rorb
out
and
lock
mov
test
push
into
icebp
fisttpll
xchg
out
mov
adc
jle
nop
mov
int
iret
jb
imul
jle
arpl
mov
rol
xor
jno
mov
lret
push
outsb
sti
sub
jo
icebp
xor
pop
inc
inc
outsl
sub
xor
add
jle
jnp
push
jne
inc
sbb
fwait
xor
daa
sub
loopne
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
jmp
push
mov
adc
xchg
icebp
pop
add
ja
test
add
repnz
xchg
lret
lahf
inc
in
push
add
mov
fcomps
lods
leave
lea
repz
and
mov
outsl
mov
ss
cmpsl
pop
push
pop
mov
call
mov
iret
xor
dec
push
test
adc
sbb
arpl
mov
pop
pop
aaa
mov
je
or
add
push
clc
fisubl
jae
or
test
in
int3
xchg
jl
loop
push
sub
inc
mov
fwait
outsb
nop
jmp
cmpsb
jge
popf
jl
js
dec
push
ja
push
stos
xchg
popa
stc
push
adc
inc
addl
in
popf
stos
out
jl
movlps
mov
loop
cmp
stc
pop
movsb
jle
mov
push
xor
loop
cmp
add
adc
fstpl
pop
lret
scas
add
lea
jne
cmp
pop
lcall
sarl
imul
dec
imul
arpl
or
jle
xor
pop
inc
dec
xchg
mov
popf
mov
cs
loopne
mov
jecxz
int3
sub
stos
adc
dec
lahf
pop
pop
push
add
movsl
in
lret
shl
inc
leave
rcrl
xor
repnz
or
ret
outsb
jg
aad
jbe
nop
jo
insl
aam
dec
int
iret
popf
add
sbb
outsl
inc
shll
jmp
pop
out
jb
rclb
call
dec
and
jmp
xchg
cmc
dec
mov
inc
insb
fscale
and
int3
ja
cwtl
dec
cmp
push
lahf
sbb
cmpsl
jg
cltd
or
adc
popf
test
mov
pop
dec
out
test
les
mov
mov
aaa
mov
mov
lret
mov
mov
mov
hlt
xor
call
aad
adc
lret
xor
cmp
mov
mov
outsb
lea
cmp
sub
jmp
dec
scas
xchg
jno
ja
sub
lods
hlt
cmp
nop
xor
pusha
add
pop
pop
mov
cmpsl
jp
cs
repz
add
mov
and
popf
inc
fisttps
mov
dec
stos
in
mov
cmp
xchg
maxps
mov
setge
sti
jne
xor
and
xorb
adc
ror
rclb
xchg
sbb
pop
push
inc
add
and
adc
xchg
xlat
sbb
shlb
filds
movsl
push
into
lods
dec
icebp
mov
xor
push
fnstsw
out
stos
pop
outsl
xchg
aaa
scas
out
adc
jp
inc
add
cs
pushw
dec
mov
or
iret
xchg
fisubrs
ds
xchg
nop
fists
jecxz
mov
and
mov
jo
out
push
inc
jbe
mov
aas
sbb
inc
cmp
push
adc
cmp
aaa
imul
inc
xchg
mov
ds
pop
jle
sbb
xchg
ljmp
pop
cmp
xor
add
std
add
inc
inc
pop
inc
xor
or
cmc
cld
jp
fsub
ljmp
lret
orl
repz
ds
push
mov
test
pop
or
sub
or
arpl
add
pop
xor
pushf
push
mov
test
sti
jo
push
test
and
or
mov
jno
out
shr
mov
xchg
push
push
pusha
clc
dec
std
idivl
pop
adc
xchg
push
shll
and
push
imul
inc
inc
or
daa
adc
testb
sub
jnp,pn
adc
pop
pop
jbe
mov
xchg
or
js
mov
pop
int3
xchg
pop
cmp
cmp
divl
sbb
stc
sbb
add
cld
ret
push
out
and
sbb
jg
jmp
cmpsl
fdiv
mov
add
jns
jo
ljmp
pop
fcomip
sbb
push
and
bound
xor
popa
mov
daa
insl
and
xor
repnz
iret
ds
bound
xor
aas
adc
add
into
mov
sub
dec
incl
add
xor
mov
ss
je
pop
ret
mov
mov
mov
push
mov
negl
sbb
loope
arpl
add
data16
adc
fisubrl
sub
mov
ljmp
aad
in
jb
sub
mov
adc
or
test
mov
jmp
je
push
sbb
mov
sbb
cmp
add
mov
mov
icebp
test
adc
sbb
dec
cmova
xchg
mov
into
add
addb
test
std
jne
roll
imul
insl
or
and
daa
dec
iret
pop
dec
arpl
mov
jne
cli
sbb
push
leave
mov
mov
push
pop
push
das
or
scas
jg
mov
jg
out
push
inc
jbe
nop
sbb
cmc
jge
push
pop
jb
call
push
iret
lock
jae
sbb
inc
out
pop
aaa
sbb
adc
cli
and
std
movd
push
cmp
xchg
repz
dec
mov
push
sbb
mov
nop
mov
xor
dec
push
pushf
or
pop
movsb
jae
jmp
push
mov
aaa
sahf
aam
fidivl
mov
in
pop
scas
dec
mov
mov
pop
pop
mov
xchg
mov
dec
rcll
or
notl
jns
sub
mov
icebp
xor
xor
movsb
xlat
or
jb
and
pushf
xor
aas
mov
mov
lds
jb
adc
cmp
sub
add
mov
mov
xchg
fnstcw
ss
inc
pusha
mov
sarb
pop
cmp
scas
pop
dec
xor
rcrl
dec
xchg
shrl
addr16
cmpsl
mov
push
xchg
and
and
sti
leave
je
ret
rcll
inc
cmpsl
lret
jnp
mov
pusha
popa
mov
dec
data16
movsl
jbe
ljmp
xchg
mov
loopne
sbb
xor
mov
popf
inc
cmp
icebp
shlb
xor
pop
inc
mov
add
xchg
or
jl
xchg
test
wbinvd
xorl
xchg
in
mov
add
out
inc
sbb
dec
mov
pop
xchg
pop
sub
cmp
das
fdivs
dec
jg
daa
jmp
push
out
sbb
jns
pop
xor
jno
xor
data16
out
cmp
add
push
mov
loopne
cli
xchg
dec
mov
xchg
pop
mov
adc
fwait
aaa
push
gs
enter
pushf
sub
sbb
movsb
lcall
mov
jg
rcll
nop
push
pop
mov
gs
sarb
sbb
testb
dec
and
cs
dec
add
inc
loope
out
xorb
sub
movsb
loopne
mov
push
pop
jecxz
mov
sub
jmp
cmp
adc
mov
test
xchg
repz
xchg
xchg
popa
les
leave
add
cmp
scas
repnz
movsl
fsubs
in
jmp
outsl
aad
movsw
cmp
push
push
push
je
dec
je
push
pop
in
stc
jge
add
fmulp
imul
mov
jo
cwtl
dec
jle
les
xlat
bound
xor
inc
xor
sarl
push
lahf
fcoml
dec
in
fstl
xor
es
out
dec
xor
lods
xchg
jl
sub
xchg
mov
mov
pop
loopne
out
xor
in
mov
arpl
xchg
pop
jno
push
lock
dec
push
stc
sbbb
adc
and
cmpsb
sub
outsb
mov
icebp
xor
mov
cmp
sub
scas
subl
out
insb
insb
xchg
cli
pushaw
and
adc
testl
xchg
dec
xor
aas
loope
es
test
adc
inc
adc
mov
repnz
mov
jns
idiv
xchg
cmp
cmp
outsl
jge
sub
into
test
adc
inc
cmp
xor
sub
cwtl
add
jg
and
mov
mov
dec
mov
sahf
sub
push
pop
push
push
or
xlat
adc
sub
adc
mov
lea
int3
es
fbstp
pop
inc
cmp
jmp
lods
ret
dec
testb
rol
lret
in
pop
lahf
xchg
or
clc
pop
push
adc
dec
jmp
into
sub
mov
cmpsl
sbb
jne
push
incl
imull
dec
cmp
lret
in
sbb
cmp
mov
faddl
ret
xor
jne
or
mov
ds
sub
xor
dec
nop
xchg
inc
ficompl
and
push
nop
jle
pop
add
sbb
cmpsl
sbb
cltd
lea
dec
pop
scas
pop
xor
cs
fisubrs
cld
jg
cltd
scas
aas
dec
addb
sub
push
mov
movsl
addr16
cld
jbe
or
repz
aam
lret
sti
xor
rcrl
sub
and
jnp
ss
push
insl
pop
mov
cmc
fst
sub
inc
ret
or
inc
lret
shll
leave
push
cmp
test
push
nop
rcrb
imul
ljmp
or
mov
insb
or
mov
lcall
popf
outsl
ret
push
pop
sbb
sbb
js
pop
xchg
ds
or
inc
adc
test
fwait
stos
jns
sbb
out
jnp
inc
add
fs
adc
imul
repnz
cld
push
call
ja
dec
inc
lods
cwtl
jg
inc
mov
and
jle
das
inc
fsts
jae
xorb
mov
push
cmp
sub
mov
push
mov
sub
nop
inc
xchg
dec
cmp
fadds
aas
jp
sub
jno
add
es
dec
aad
ret
in
jmp
xor
lea
out
xor
and
cltd
or
mov
xor
mov
stos
or
movaps
jo
mov
es
ficoms
js
and
mov
pop
and
subb
jb
fisttpll
inc
sub
push
xor
lret
aas
push
nop
andb
daa
shll
les
ret
sbb
mov
jle
and
xlat
insb
xchg
jbe
cs
scas
dec
xchg
outsb
mov
call
int
je
leave
in
adc
and
addr16
adc
inc
mov
jno
call
bound
bound
arpl
pushf
ret
jp
jmp
or
xor
sti
adc
addl
mov
cmc
jbe
pop
iret
sbb
aam
pop
xorl
cmp
mov
out
jmp
mov
not
sub
mov
addr16
int3
push
ds
pop
adc
jg
hlt
iret
mov
jb
insb
dec
push
jg
stos
mov
insb
mov
dec
cli
jns
xchg
lea
jp
mov
jge
pop
jno
xor
rorb
dec
outsb
jge
pop
push
inc
pop
mov
mov
cmpsb
aaa
repnz
mov
mov
insl
dec
jge
dec
enter
push
sub
adc
mov
dec
mov
xchg
call
lahf
cmp
push
xor
std
sub
dec
mov
into
adc
add
je
push
rcll
and
out
xor
push
aam
mov
cmovo
aam
jg
ret
cld
shl
scas
fs
mov
jmp
inc
movsl
lret
sti
fcoms
mov
in
or
insl
hlt
add
clc
mov
addl
hlt
pushf
insb
mov
xchg
sbb
cmc
loope
add
push
scas
and
out
ljmp
lret
xchg
pop
aas
jp
and
ljmp
and
ret
xchg
into
or
xchg
add
jae
pop
add
add
sub
pop
sub
dec
pop
decl
popa
nop
xchg
mov
out
ja
inc
sbbl
dec
daa
xchg
les
scas
enter
das
scas
test
mov
cmp
inc
dec
adc
xor
xor
push
add
mov
inc
inc
inc
dec
ja
mov
lret
push
imul
push
cmp
inc
dec
mov
std
movsb
pavgw
mov
or
stos
xor
nop
jo
or
lods
inc
pop
mov
cmp
jmp
outsb
roll
cmp
hlt
outsb
lret
je
mov
pandn
cmovno
push
sbb
fisubs
in
cltd
arpl
rolb
xor
imul
movsb
in
jmp
into
mov
mov
cli
xacquire
cmpsl
or
mov
aam
push
stos
ss
out
int
movsl
leave
pop
cltd
add
movl
das
mov
addr16
bound
jnp
roll
mov
lea
mov
clc
out
xchg
push
in
push
cltd
mov
pop
mov
or
in
xchg
movsl
xchg
cmp
xchg
test
dec
mov
jae
sbb
pop
insl
cwtl
mov
adc
stos
jnp
mov
cmp
adc
rcrl
sub
imul
and
out
popf
fiadds
popf
jmp
icebp
repnz
or
lods
and
loopne
roll
mov
test
jns
outsb
mov
sub
push
shrl
lret
aaa
loopne
dec
ja
lods
aam
push
jmp
mov
inc
ret
mulb
dec
sahf
aaa
and
xor
mov
scas
pusha
leave
xor
mov
into
push
or
jae
aad
xor
mov
shll
mov
ret
add
int
fldcw
aas
cmc
clc
cmp
lret
mov
jnp
loope
pop
movsl
cmc
inc
sahf
iret
jne
jl
sub
xchg
mov
mov
sbb
das
inc
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
jmp
cmpsl
icebp
cmp
pop
dec
arpl
xor
adc
xchg
mov
loop
inc
mov
pop
lret
mov
mov
popa
jge
fcmovnu
pushf
loopne
push
jp
pop
cs
xchg
push
insb
sbb
jne
sti
int3
adc
lock
or
or
push
xchg
repnz
fdivl
add
stc
in
int
jmp
add
and
leave
push
in
cmpsb
leave
shr
and
pop
lds
sub
insb
push
fisttps
cltd
pop
rclb
leave
into
mov
sub
xor
xor
insb
mov
icebp
jne
ret
cmp
mov
pop
orb
test
addr16
loope
cmpsl
dec
arpl
push
es
loope
sub
or
or
xchg
scas
cmc
jns
push
push
dec
mov
into
shll
pop
mov
sub
fwait
xchg
in
jmp
fdivrl
sbb
adcb
fsts
stc
fistps
push
mov
in
lcall
xchg
mov
push
pop
push
mov
push
dec
fistl
dec
jl
ljmp
nop
cs
jle
push
jp
sub
push
popf
aaa
push
inc
jae
xor
add
stc
cmp
and
mov
jno
test
lahf
xor
push
nopl
xorw
lods
mov
sbb
test
add
mov
clc
mov
in
lret
lret
test
test
jecxz
loope
into
mov
mov
fwait
iret
jp
push
mov
scas
mov
push
pop
lret
mov
or
lret
imul
sti
and
adcb
fmuls
adc
jb
lret
insb
mov
call
cmpsb
cmp
sub
mov
arpl
sub
dec
mov
das
or
rorb
mov
or
and
outsl
and
and
dec
lock
xchg
dec
je
cmp
mov
lock
inc
jl
xor
adc
outsb
sub
stos
mov
idiv
sub
xchg
stos
push
mov
mov
push
mov
mov
into
cmp
adc
scas
inc
xor
pop
orb
dec
adc
pop
cli
push
dec
paddusb
fsubrs
call
out
aam
cmp
xor
movsl
dec
push
filds
scas
repnz
or
push
into
lret
jb
xchg
fnstsw
lahf
push
pop
std
lret
ds
and
test
sub
cwtl
cmp
mov
and
fs
jmp
aaa
push
fs
mov
repz
sbb
push
out
jmp
adc
mov
jmp
jnp
and
dec
ljmp
fsubrs
in
loopne
mov
xchg
xchg
xchg
and
lret
fs
pop
inc
mov
cmp
jmp
mov
lock
push
repnz
or
clc
call
in
scas
and
inc
cltd
cld
aam
repz
test
loop
mov
sbb
adc
push
imul
pop
xor
push
jge
shlb
mov
add
dec
pop
loop
push
clc
pop
loop
fdivr
imul
in
sbb
pop
mov
test
inc
cmp
int3
fmull
jo
push
ret
push
mov
mov
aam
xchg
sbbb
repnz
jae
add
jo
add
stc
push
push
lods
or
add
pushf
sub
jne
stos
xor
cmpsl
shrb
xor
inc
inc
loop
adc
shl
dec
pop
xor
jl
test
or
pop
es
mov
ds
or
fistpll
pop
xchg
aaa
mov
or
ss
pusha
fsubl
dec
loop
fcoml
cmp
dec
xor
pushf
loop
repnz
and
jl
xchg
pop
push
xor
das
lea
inc
into
jg
add
cmp
inc
jo
test
into
sti
mov
or
add
insb
xchg
subb
mov
mov
shlb
sbb
movl
pop
jg
outsb
into
cmpb
test
xchg
ds
jo
pop
push
cltd
cmpl
loopne
mov
rol
lcall
add
into
xor
outsb
scas
jae
push
outsl
sbb
inc
bound
xor
int3
xor
or
int
aad
jae
inc
mov
mov
scas
push
push
scas
ja
sub
je
aas
aaa
pushf
pop
inc
mov
xchg
imul
stos
pop
sub
jle
jecxz
icebp
in
cmp
dec
pop
xchg
or
jb
cs
jns
dec
mov
or
add
xor
rorb
mov
push
je
lret
mov
lret
in
or
jmp
mov
xchg
cmp
sub
sub
cmp
loopne
daa
mov
or
fcmovu
fbstp
iret
jp
test
sti
adc
enter
push
sub
cmp
xor
inc
mov
add
push
xor
loop
and
jbe
cwtl
fmul
mov
shlb
mov
jnp
ret
cmp
xor
inc
arpl
xlat
sub
cli
int
or
outsb
std
jno
mov
sub
cmpl
daa
inc
dec
jnp
dec
ss
in
pop
repz
js
daa
test
fs
lock
stos
aas
in
arpl
movsb
imul
mov
mov
and
inc
cld
push
push
mov
xor
ds
or
sub
mov
dec
ds
mov
xorl
sub
lods
decl
test
inc
dec
inc
mov
jg
adcl
cltd
mov
pop
and
push
js
pop
iret
mov
inc
and
out
iret
bound
shll
fucom
cmc
aas
cmp
lahf
jno
jae
cmp
jns
rclb
arpl
or
test
in
popl
push
jmp
test
test
sahf
inc
jg
xor
out
lods
in
push
pop
or
in
cli
test
sbb
loop,pn
jb
aam
add
fsts
dec
dec
cwtl
popa
mov
pop
icebp
into
sub
dec
push
fnstenv
popa
in
jb
es
xlat
adc
mov
and
sahf
xor
mov
cli
outsb
out
bound
sti
inc
cmp
sbb
add
pop
adc
imul
int
aad
lock
sub
xor
xchg
lret
cltd
cli
arpl
outsb
jp
aas
pop
or
jmp
aaa
insb
stos
xor
sub
test
jecxz
mov
dec
mov
orl
sahf
and
lds
mov
mov
mov
outsl
int3
mov
lret
js
xchg
push
jno
aas
cmp
jge
inc
push
and
movsl
dec
aaa
frstor
es
sub
xchg
lret
sarl
test
push
push
add
pop
mov
cmp
xchg
mov
ret
pop
mov
xor
testl
mov
popf
lret
negb
test
jge
fstpl
popa
aad
adc
das
xor
cmp
cwtl
out
and
jmp
ljmp
sub
push
aam
push
test
adc
xchg
fwait
pop
outsb
or
sarl
in
stc
cwtl
pop
dec
add
mov
ja
ljmp
or
mov
xchg
ljmp
leave
dec
mov
xchg
aad
push
mov
aad
cwtl
bound
loopne
mov
nop
bound
jbe
mov
adc
jnp
out
cmpsl
sub
sbb
jecxz
lcall
loope
dec
leave
dec
cli
fstpt
test
inc
inc
jo
fiaddl
jbe
cs
pop
and
out
decb
mov
xor
iret
inc
sbb
or
mov
arpl
jg
lret
dec
pop
sub
adc
add
sub
stc
out
dec
sub
fs
xchg
mov
mov
movsb
imul
dec
imul
sti
adc
or
dec
subl
mull
subb
in
xor
pop
fisubrl
mov
lods
push
pop
push
mov
cmp
insl
int3
mov
xlat
daa
mov
sbb
gs
arpl
stos
fildl
push
notb
iret
aas
bound
dec
and
cmp
shrl
push
sarl
sbb
cmp
mov
push
jl
aam
and
addr16
sbb
jmp
rcl
sbb
pop
sub
xor
pop
jne
outsb
xchg
stos
jnp
fbstp
ret
pop
call
adc
xchg
icebp
sbb
icebp
xchg
xor
jb
jo
cmc
sbb
inc
into
jl
dec
jmp
flds
push
sbb
adc
pop
dec
fdivr
jns
mov
lods
cmpsl
je
jo
sub
push
sub
outsl
fsubrl
insb
hlt
scas
inc
cmc
outsb
test
xchg
push
repz
dec
cs
je
mov
mov
fnstsw
lods
call
dec
cli
repnz
loope
icebp
stos
add
insb
adc
or
pop
fildl
daa
repnz
aas
adc
or
clc
leave
jbe
cmp
aas
movsl
push
movsb
mov
jne
gs
fistps
and
add
test
xor
insl
mov
dec
testb
xchg
sbb
data16
jne
inc
test
jo
aas
fcoml
out
jno
push
lods
ss
push
sbb
lcall
fadds
test
mov
fcomps
jb
orl
adc
and
xchg
sti
imul
call
mov
dec
or
add
add
fsubp
xor
xchg
imul
dec
aaa
imul
pop
push
in
pop
jge
loop
js
sub
cmp
or
or
push
test
jl
lret
gs
jo
dec
add
shrl
imul
inc
out
ja
sbb
mov
add
cmp
andl
scas
push
push
mov
mov
dec
aaa
cld
rclb
je
sbb
scas
and
mov
orl
pop
cmpb
and
mov
ja
inc
aam
jl
cwtl
jg
sahf
lcall
cmp
lcall
aad
pusha
mov
mov
fcmovbe
sbb
inc
add
jb
imul
dec
rcrl
push
mov
ljmp
out
mov
sub
int
insl
sbb
out
sub
mov
add
ja
roll
lahf
repnz
dec
mov
xchg
lret
xchg
lea
cli
cmc
or
push
xlat
adc
mov
out
pop
sbb
and
xchg
mov
or
sub
xor
addr16
adc
jg
mov
faddl
dec
in
mov
push
cmpsl
cli
fbstp
add
nop
mov
stos
arpl
mov
or
fcompl
test
adc
lods
dec
mov
xchg
push
dec
call
inc
mov
sahf
cltd
or
in
out
pop
aam
mov
aas
aad
outsl
xor
cwtl
jno
aaa
ret
arpl
xchg
jmp
push
pop
in
fs
lret
loopne
xlat
aad
jp
xor
mov
pop
xlat
cltd
adc
nop
push
movsl
sbb
je
das
into
stos
or
or
scas
xchg
in
push
pop
repz
enter
push
mov
int
add
out
decb
outsb
out
in
fwait
orb
call
mov
out
jmp
in
jae
sub
std
stc
movsb
mov
leave
outsb
cmp
sbb
stc
negl
jns
cmp
imul
movsb
lea
jg
pop
shrl
hlt
or
jmp
or
sub
mov
adc
lahf
jmp
adc
dec
mov
call
test
lods
fs
sbb
int
rolb
neg
insl
jmp
mov
int
sarl
mov
jno
lock
fbld
xor
shl
fsubrs
test
fbstp
daa
stos
mov
in
and
cli
lahf
xor
aad
add
push
xchg
lock
mov
shr
out
xchg
jecxz
outsb
add
scas
inc
push
sbb
xchg
imull
or
dec
or
lret
sub
mov
orb
inc
jl
cltd
shll
popa
outsl
das
sbb
mov
cld
pop
sti
and
mov
decl
pop
dec
pop
ror
mov
pop
popf
insb
cs
jle
test
mov
adc
adc
pop
rol
or
push
out
jecxz
cmp
mov
outsb
in
outsl
mov
icebp
testl
pop
mov
pop
sbb
xchg
mov
into
mov
jmp
mov
mov
or
mov
repnz
aad
gs
fistps
inc
lret
inc
jno
lods
pop
jnp
mov
stos
pop
in
adc
adc
adc
xchg
sti
dec
cld
mov
xchg
xor
xor
cltd
and
pop
and
test
cmp
cmp
rcrl
aaa
pop
pop
add
sbb
or
movsb
adc
and
fists
mov
add
and
push
xchg
loope
pop
pop
xchg
push
pop
cmp
jns
imul
dec
mov
ret
adc
mov
andl
pusha
cmp
lods
fsub
xor
mov
jno
dec
inc
push
pop
mov
ret
add
out
inc
in
iret
add
jns
es
mov
xlat
add
sbb
cltd
mov
mov
xchg
mov
mov
stos
dec
testb
mov
repnz
aam
push
aam
cld
icebp
xchg
pusha
cld
aaa
aaa
mov
dec
outsb
xchg
or
sub
or
cltd
in
add
mov
lret
or
std
fs
int3
stos
lods
in
notb
push
int3
mov
idivb
cmp
imul
mov
jle
stc
scas
sbb
sbb
insb
pop
jecxz
lret
jecxz
and
stos
dec
sub
cmp
push
out
sbb
xchg
adc
stos
stos
fwait
out
push
sbb
or
call
mov
jmp
push
rcrb
and
inc
outsb
xchg
add
push
ja
xor
scas
mov
mov
sbb
fidivrl
sbb
mov
sbb
aam
mov
imul
imull
push
out
cmp
or
or
in
sbb
inc
cmp
mov
aaa
add
icebp
popf
aam
xchg
gs
cmp
ljmp
cmpsb
mov
clc
shll
jl
inc
xor
mov
ljmp
ljmp
lds
loopne
mov
adc
rcll
add
sti
lds
push
xor
mov
pop
mov
push
clc
cmpl
scas
fucomip
stos
jl
mov
dec
mov
loope
scas
int3
push
mov
notl
lods
mov
insl
inc
sbb
push
pusha
rorl
adc
add
xor
and
lds
mov
or
cld
sbb
cs
into
xorl
xor
sub
and
imulb
sbb
dec
je
aas
push
outsl
test
add
and
pop
jge
dec
sbb
xor
mov
insb
cmp
test
push
fistl
nop
sarb
cmp
out
repnz
stc
dec
es
ja
and
hlt
dec
fisubl
jl
inc
xchg
nop
ljmp
jg
cmp
and
jae
jb
xor
or
cmp
ss
push
cmp
adc
push
lods
rcrl
inc
aas
xor
pop
pushf
test
add
icebp
and
in
xchg
shll
push
shrl
out
inc
or
sbb
mov
dec
ljmp
add
stos
sbb
jae
mov
out
daa
in
fstpl
mov
xor
pop
mov
xor
cmp
orb
fnstenv
mov
mov
mov
rcrl
xchg
cmp
xchg
int
adcb
sbb
popf
rolb
js
push
bound
in
mov
movsl
rcll
pop
lock
xor
sub
pop
arpl
bound
sub
lds
xchg
and
ds
fistpll
jmp
dec
or
adc
ffreep
call
mov
mov
sub
imul
xchg
adc
and
ja
js
in
jl
and
xor
fldl
jne
and
push
inc
push
pusha
cmp
cmpl
jno
push
or
and
stos
mov
je
repz
pop
cmp
bound
pop
cmp
lock
test
adc
push
and
dec
jp
mov
stc
mov
push
sar
mov
sub
cmp
pushf
repz
sahf
sbb
lcall
testb
push
cmp
sahf
sarb
xlat
mov
push
xchg
scas
jecxz
imul
push
scas
les
int
aam
out
inc
mov
repz
and
mov
pushf
test
sub
jg
lods
test
movups
jecxz
xchg
std
xchg
scas
arpl
cs
or
cmpsl
stc
jne
mov
std
add
push
inc
gs
and
jle
cmp
add
iret
mov
sub
test
mov
out
aaa
mov
pusha
sahf
es
hlt
and
les
push
xchg
out
cmp
pusha
faddl
push
shl
push
mov
stc
push
push
cwtl
mov
shrb
inc
jle
push
lock
into
ret
push
xchg
mov
push
sarb
lahf
out
shl
add
xchg
loop
test
cmc
ret
lahf
inc
sub
add
dec
jmp
shlb
mov
jl
lret
or
fsubs
pop
or
fnsave
push
addl
hlt
xor
push
nop
in
lods
repz
mov
data16
and
in
pop
dec
vcvtps2dq
mov
in
add
push
pop
out
sahf
jne
in
movb
emms
nop
loop
cmp
ds
sti
or
ret
fisubs
test
sbb
adc
pop
or
popf
test
daa
add
pop
push
push
adcl
mov
mov
gs
ja
scas
lcall
or
aam
xchg
lods
pop
scas
data16
adc
mov
xchg
cmp
cmp
mov
inc
andb
icebp
fstps
pop
test
aaa
xchg
xor
in
std
in
lock
iret
mov
test
jecxz
adc
mov
dec
jbe
inc
dec
mov
jne
popf
and
xor
jne
out
mov
add
dec
push
xor
cmp
jae
sarl
outsl
and
or
orl
ds
jo
lock
repnz
mov
cmp
add
stos
pop
shlb
mov
mov
push
stos
pop
fisttpl
xchg
mov
adc
jecxz
mov
fnstenv
and
aas
outsb
mov
sub
mov
dec
or
dec
iret
repz
stos
pop
inc
cmc
test
mov
lahf
repnz
xor
jns
pop
shrb
mov
pop
pop
cwtl
xor
mov
jp
cli
push
or
jmp
mov
arpl
inc
or
mov
mov
cltd
stc
jbe
or
sarb
jb
orl
push
imul
xchg
aaa
and
mov
push
lahf
mov
inc
mov
adc
push
dec
shll
mov
inc
lahf
pop
cmpsl
popf
shll
test
cmp
call
cmp
jecxz
push
mov
cltd
sub
adc
jno
lret
mov
es
dec
inc
rcll
mov
aad
push
in
inc
std
mov
xor
ss
sbb
jp
test
or
jbe
sub
mov
sub
fisubl
dec
and
enter
jl
xchg
xchg
fwait
dec
push
xor
inc
cmp
lret
call
adc
mov
pop
mov
repnz
outsb
and
imul
xchg
mov
ficompl
cwtl
push
test
enter
xor
stc
shrb
pop
inc
and
push
jns
enter
add
sub
je
in
push
add
pusha
test
mov
xchg
ret
push
or
pop
into
xor
mov
jb
lds
sbb
jl
xchg
inc
inc
cmc
mov
es
pop
fisubl
outsb
mov
adc
cmp
sub
lahf
mov
or
in
push
sub
xor
mov
fistps
daa
in
ror
fnstsw
jp
rcl
pop
mov
shrd
shr
shr
jmp
imul
scas
sbb
xor
cmp
stos
adc
xchg
push
bound
aam
outsb
mov
cmpsb
std
mov
stc
mov
mov
fiadds
dec
and
mov
jae
inc
inc
xlat
xchg
loop
sub
testb
mov
sub
mov
icebp
lods
es
in
mov
lods
lds
pop
xor
clc
add
jge
popf
adc
repz
cs
jbe
mov
pop
mov
outsl
xlat
jg
ss
shll
int
aad
int
ljmp
inc
pop
je
bnd
pop
cmp
or
lea
jo
sbb
in
pop
imul
mov
in
mov
jae
in
aaa
cmc
movsb
add
push
out
adc
xchg
sbb
in
sbb
mov
adc
es
jb
aas
pop
pop
inc
inc
jmp
inc
push
ja
mov
ss
pop
insb
jmp
mov
movsl
leave
jne
mov
mov
imul
mov
xchg
loope
jl
sbb
cmp
push
mov
adc
cmp
lods
shrl
lods
pop
repnz
int3
into
sub
clc
adc
insl
dec
mov
mov
aaa
lcall
jbe
mov
pop
mov
dec
pop
lods
xchg
xchg
lea
sbb
in
lds
clc
test
lods
dec
push
aas
movsl
fcoml
mov
mov
mov
int
aam
and
mov
sbb
mov
mov
imul
dec
xchg
push
dec
xchg
js
push
and
movsl
incb
or
mov
and
add
aad
scas
repnz
fists
jecxz
dec
insl
pop
stos
push
sets
sbb
in
addb
cwtl
mov
imul
xchg
xor
movsb
fwait
xchg
mov
ljmp
lret
lret
in
scas
lret
sti
in
dec
sub
test
dec
xchg
fdivs
jae
movsb
dec
lcall
jle
cmp
lock
sarl
mov
test
inc
xlat
or
hlt
mov
in
stos
mov
and
xor
inc
insb
sbb
std
call
dec
movsb
in
out
shlb
push
dec
mov
les
sbb
xchg
cld
cld
out
ja
jbe
jle
bound
hlt
jo
adc
mov
lret
mov
xchg
cmp
adc
add
test
jg
cmp
lock
xchg
jbe
out
inc
int3
aaa
xorb
fcoml
xchg
lock
icebp
mov
stos
mov
ja
xchg
xchg
mov
push
xchg
mov
jge
dec
sbbl
inc
adc
jnp
cmp
jp
sarb
sbb
cmp
jne
les
icebp
je
int3
push
jae
sbb
xchg
aam
push
ret
data16
mov
sahf
and
shlb
mov
dec
or
fnsave
push
in
push
jo
cmp
js
mov
sti
sbb
dec
dec
aaa
addl
lds
scas
xchg
xorb
xor
sbb
out
stos
aam
dec
mov
pop
xlat
cmpsl
outsl
insl
cwtl
jne
mov
rorl
test
mov
fidivs
cs
push
loop
scas
inc
popa
pop
fwait
inc
and
stos
sahf
sahf
fbld
mov
cltd
push
pop
popa
jg
jbe
xchg
add
lock
test
mov
push
pop
call
icebp
mov
xor
sbb
cmpsb
aaa
mov
mov
scas
movsb
fmulp
imulb
push
outsb
mov
rorl
mov
ret
es
imul
out
push
xchg
in
aas
cmpsl
int
popa
jne
xor
rolb
jae
cmp
data16
ret
sub
test
add
sbb
jl
push
inc
lods
mov
out
push
push
iret
mov
fadds
retw
xchg
push
inc
test
mov
jl
push
mov
daa
adc
call
repnz
mov
lahf
lea
mov
xor
mov
in
add
push
movl
mov
dec
mov
out
mov
dec
mov
cltd
and
mov
push
xchg
sbb
fmuls
xorb
fidivrl
add
aam
sub
adcl
or
mov
flds
mov
pop
xchg
in
xor
lds
ret
pop
push
lahf
mov
es
mov
pop
inc
aad
xlat
inc
jecxz
or
mov
xchg
xor
test
outsl
shl
adc
xorl
xchg
and
aam
dec
pop
jb
outsb
jb
jmp
sbb
cli
pop
pop
dec
xorl
negl
dec
mov
adc
xor
aaa
call
fs
lea
scas
pop
ffreep
jmp
adc
add
lods
inc
xchg
out
jb
aas
mov
andl
lret
fnstenv
or
sbb
popf
sarl
add
les
aad
sahf
pop
sbb
jge
xor
pop
jle
test
ret
mulb
gs
xorl
dec
test
sahf
xchg
pop
cmp
xor
sub
push
inc
lock
cmpsl
lods
incl
std
mov
pop
and
stc
lock
pop
loop
push
push
popf
addr16
idiv
mov
daa
dec
outsb
stc
mov
sbbl
and
mov
aaa
mov
in
jge
pop
xchg
in
cmp
inc
mov
xlat
lock
dec
std
cmp
divb
push
cmp
jmp
or
adc
testl
std
mov
jge
popa
sub
mov
and
out
call
or
ja
cltd
cmp
inc
push
fldt
loope
pusha
test
hlt
cltd
xlat
sahf
jno
out
popf
add
and
add
pop
decl
mov
xchg
cmp
add
xlat
sahf
and
push
sbb
mov
cmp
mov
jle
sarl
push
jmp
mov
lock
mov
rolb
popf
push
xor
stc
or
xchg
xchg
int3
push
xor
sub
dec
fsts
ffree
mov
and
fs
inc
cmc
inc
sbb
cli
cld
ja
jmp
sbb
and
mov
or
jge
xchg
or
adc
adc
dec
push
testb
inc
mov
push
fwait
push
xor
and
adc
dec
add
cltd
mov
orb
in
and
repnz
loopne
or
pop
dec
rorl
jne
sub
data16
push
and
jp
mov
outsb
aad
repz
test
es
icebp
es
lods
out
sub
lds
lds
call
xor
pusha
ja
shrb
xchg
sbb
dec
cmpsb
mov
add
icebp
push
mov
mov
mov
mov
push
push
jmp
push
xchg
stos
les
ret
je
out
push
lcall
cltd
into
aaa
pop
mov
movsb
inc
add
or
jl
sub
and
inc
xchg
fidivrs
lcall
mov
sbb
ja
dec
out
push
iret
loope
pop
movlps
negl
lcall
andb
pop
pop
icebp
push
dec
shll
rclb
adc
cld
lds
je
mov
xchg
nop
mov
dec
xchg
dec
and
adc
pop
aad
xor
fisttpl
mov
or
xchg
xor
out
mov
pop
mov
mov
lds
cmp
addr16
cmpsb
int3
xor
mov
sarl
mov
push
xchg
fdivrl
mov
fimull
pop
push
pop
shll
mov
repnz
aam
shll
xor
stos
mov
jle
fadd
xor
jecxz
pop
mov
iret
sbbl
or
cmp
push
mov
pop
outsb
cmp
testb
pop
test
rcll
repnz
mov
int3
int
aas
inc
sub
mov
xchg
sub
pop
mov
jle
pop
daa
push
in
rorb
dec
popa
push
in
les
pop
pusha
hlt
test
xchg
repz
shlb
and
test
outsl
and
jle
cmpsl
cmp
in
fsqrt
xor
shll
test
inc
loopne
scas
mov
and
cmc
pop
imul
push
xchg
cmp
icebp
add
jo
and
jl
out
push
pop
inc
andb
sub
mov
jmp
loope
pusha
jnp
inc
push
sbb
xlat
call
into
nop
dec
mov
inc
inc
jle
int
add
outsb
mov
or
repz
jae
ja
scas
into
lds
push
imulb
inc
push
dec
lods
adc
adc
loopne
mov
pop
mov
or
jg
mov
sbb
adc
and
leave
push
sub
stos
aas
add
test
xor
add
xor
mov
and
pop
ret
call
xorb
cwtl
lcall
add
add
sub
mov
xchg
sub
pop
inc
aas
out
xchg
insl
ror
cmpsl
jle
xlat
in
cmpsb
je
xor
icebp
popf
inc
ss
adcb
movsb
int3
fisttpl
jb
sub
push
sub
pop
scas
loope
mov
test
push
add
test
mov
mov
sbb
test
or
sub
lea
adcl
and
lea
mov
xor
jmp
imul
xlat
or
mov
sbb
jge
inc
inc
jo
xlat
jno
mov
pop
out
cld
std
cmp
scas
loope
cs
ret
out
mov
sti
adc
std
pop
cmp
notl
cmp
add
ficoml
test
mov
movsl
dec
jnp
cmp
mov
sbb
jge
in
mov
imul
sbb
mov
data16
aas
jne
fsubrl
and
aaa
test
jns
bnd
in
lcall
mov
xchg
mov
mov
sbb
lret
fbld
repnz
push
inc
lods
sub
in
or
mov
xchg
mov
push
daa
call
daa
pushf
flds
xchg
std
xor
mov
add
add
enter
outsb
add
lret
sti
add
lret
aad
xchg
inc
xchg
xor
repnz
cltd
repnz
add
repz
adc
pop
jbe
mov
ret
cmp
lcall
sti
sub
decl
xor
xor
jae
lcall
cmp
mov
in
add
fiadds
in
pop
adc
and
fisubs
aaa
lods
pop
loope
push
sub
sbb
pusha
and
in
pop
push
mov
sub
xchg
xlat
inc
inc
negl
sarl
sti
add
in
loop
pop
aam
or
pop
push
cmc
and
fucom
push
fidivrs
cli
shlb
or
pusha
jge
cmp
push
call
mov
pop
iret
pushf
cmp
or
xchg
out
or
loopne
and
lods
clc
or
test
scas
xchg
lahf
xchg
sbb
int
repnz
sub
push
test
not
pop
outsb
jbe
stos
lahf
add
jns
adc
fisubrl
out
aaa
push
cmp
xlat
inc
orl
push
mov
pop
iret
or
xor
mov
aaa
push
andb
push
shll
loope
divb
cltd
aam
and
in
repnz
xor
stos
aaa
pop
push
add
and
repz
out
lcall
dec
ljmp
mov
mov
inc
call
lcall
ret
jmp
loope
test
adc
or
daa
lret
sub
je
sub
rcll
pushf
add
ret
cld
pop
andl
mov
int3
push
jns
icebp
test
add
fsubp
arpl
int3
test
popf
addb
cmp
pop
jnp
fisubrs
push
rolb
leave
add
dec
jbe
rcrb
mov
xlat
arpl
pop
mov
imul
icebp
sbb
xchg
subb
xchg
imul
adc
sbbb
mov
and
loopne,pn
sub
outsb
movsb
jo
cmp
mov
jne
popf
xchg
inc
movsb
dec
shll
jb
jg
lds
cli
insb
es
scas
scas
daa
ljmp
cmpsb
sub
lret
mov
sbbl
stc
adc
mov
adc
jae
mov
pop
fdiv
divb
push
ja
inc
fsub
dec
ret
push
mov
cwtl
xor
inc
mov
xor
or
push
nop
rorb
sub
mov
xlat
pop
mov
jecxz,pn
fcom
popa
out
test
icebp
jb
mov
or
loopne
std
insb
mov
gs
or
jecxz
outsb
outsl
repz
jle
lret
in
enter
mov
ljmp
gs
in
hlt
xor
leave
pop
aam
popf
ds
call
loopne
xchg
in
fidivrl
daa
insb
inc
divb
jmp
aam
sbb
push
pop
xor
pop
mov
mov
push
cmp
and
adc
ss
icebp
pop
mov
xchg
lock
pushf
stc
pop
jmp
popa
repz
les
dec
push
icebp
xor
daa
mov
insb
inc
call
mov
mov
or
sbb
test
cmpsb
adc
subb
jne
pushf
les
popf
jns
pushf
add
add
mov
xchg
xchg
mov
jmp
addr16
mov
shll
ret
and
popa
js
add
movsb
ret
lret
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
jmp
pop
jge
lds
hlt
inc
ficompl
mov
xchg
jne
dec
incl
push
fadd
cs
dec
jge
inc
pop
arpl
fcompp
jecxz
sbb
sar
jns
xchg
dec
ret
testl
divl
repz
mov
sahf
shll
cwtl
jae
inc
add
mov
xchg
adc
push
sbb
shlb
pop
xor
sbb
adc
fwait
mov
add
and
inc
or
loop
or
imul
sahf
dec
popf
jecxz
shl
movsl
jp
cmp
decl
mov
jbe
mov
jb
xlat
aam
sarl
sti
pushf
cmp
sub
lods
pop
rcrl
stc
outsl
outsb
imul
fdivrl
cmp
sbb
adc
dec
dec
mov
add
dec
mov
add
add
push
dec
dec
adc
dec
cmp
mov
or
inc
adc
dec
jge
js
add
xchg
adc
jecxz
xchg
mov
mov
adc
loope
rol
mov
mov
push
fistl
aas
je
call
mov
out
jp
xor
sub
hlt
jge
addr16
pop
xlat
add
nop
and
push
add
lods
fsub
mov
hlt
ljmp
push
pop
xorl
out
inc
jne
out
xchg
jp
add
in
cmp
mov
sbb
rclb
cs
and
mov
mov
mov
and
mov
dec
jl
out
and
add
mov
cmp
push
inc
cmc
clc
pop
pop
dec
std
movsl
dec
push
stc
addr16
and
lea
sbb
lahf
xchg
pushf
dec
out
xor
fcomps
bound
push
lock
adc
ljmp
lret
les
inc
ret
add
and
inc
jae
ja
leave
ret
sub
adc
cmp
jmp
cmc
mov
aam
aam
pop
cld
and
lahf
je
pop
rcrb
add
sbb
push
divb
sbb
mov
mov
arpl
push
es
aad
dec
jne
mov
or
rol
jns
add
arpl
pushl
lcall
cmc
repz
lcall
aam
lret
jle
ffree
and
dec
movsl
in
cmp
mov
jne
out
inc
mov
mov
adc
and
sub
popf
push
mov
lret
dec
inc
mov
in
and
inc
mov
sbb
imul
iret
ds
mov
fnsave
pop
xchg
dec
pop
outsl
imul
fwait
lcall
aaa
lret
leave
rorb
inc
inc
push
mov
repz
pop
push
popa
std
repnz
stc
gs
js
sbb
arpl
push
pop
jae
jns
in
out
icebp
adcl
dec
cmp
fildll
rcr
cmp
scas
dec
jns
cltd
cmp
pop
jle
mov
int
subb
pop
sti
es
repnz
add
push
rolb
movsl
adc
lods
jg
sbb
clc
mov
std
fldt
cmp
bound
mov
jmp
sarb
push
dec
cld
lds
dec
mov
pop
mov
and
test
lock
shrb
negb
xchg
jmp
xor
mov
mov
dec
repz
mov
jp
pop
xchg
add
mov
aaa
and
xchg
mov
imul
dec
test
hlt
push
push
xchg
pop
dec
inc
and
cmp
add
xchg
daa
cmpsl
das
push
dec
loope
inc
dec
in
ror
push
xlat
xchg
pop
lahf
adc
mov
loop
push
push
or
mov
sub
adc
aad
addr16
and
out
jmp
notl
iret
mov
xchg
test
sub
popf
hlt
sbb
push
movsl
mov
jo
lcall
mov
ja
lock
mov
pusha
movsl
add
adc
bound
push
mov
mov
sub
stos
fwait
mov
jae
push
lahf
adc
scas
xchg
insb
dec
and
push
or
repz
xchg
push
loope
adc
or
sub
mov
push
sarl
dec
scas
ret
inc
mov
hlt
push
xor
cwtl
stos
popl
dec
cltd
mov
repnz
jp
mov
mov
xchg
cmpl
fwait
adc
push
scas
stc
jmp
xor
cli
and
inc
mov
cmp
movsb
add
mov
add
cmp
mov
sub
xchg
insl
fists
lea
lret
cmp
jns
fildl
pop
adc
jecxz
cmpsb
enter
repnz
cmp
sbb
enter
aam
ds
pop
mov
and
mov
or
jle
loop
jl
jmp
and
aas
test
outsl
jmp
pop
cmp
pop
dec
outsb
imul
ret
lds
xchg
and
push
push
jb
sbb
xchg
xlat
sarl
popa
or
popa
lcall
sarl
in
loopne
imul
sbb
dec
mov
dec
xchg
jmp
lds
out
cmp
imul
ss
add
cs
sbb
addb
sub
push
out
mov
data16
jnp
pop
call
ljmp
ret
mov
push
aam
xor
outsl
and
sub
sub
or
cld
mull
lahf
mov
fs
mov
hlt
xor
pop
and
xlat
cmp
shll
jo
sub
adc
in
fs
xor
rol
cmpsb
sbb
or
dec
fimull
je
mov
push
int
jo
jns
orb
pop
pop
sub
pop
stc
mov
sti
dec
jo
pause
std
adc
cwtl
cmpsb
push
sbb
mov
lea
fidivl
fwait
or
xchg
adc
add
mov
into
add
sub
add
push
sub
aas
pop
mov
out
bound
xchg
mov
push
adc
adc
and
ret
mov
cmp
shl
cmpl
mov
xchg
fistpl
dec
sub
sub
xchg
mov
ljmp
insl
addr16
cmp
or
fistl
jecxz
lea
cltd
inc
cltd
and
cmp
bound
jecxz
adc
xchg
xchg
lods
fisubs
jl
mov
leave
stc
mov
mov
xchg
sub
push
lret
push
push
daa
xor
loope
inc
push
push
in
jmp
cli
mov
repz
push
mov
outsb
rolb
call
outsl
mov
lds
mov
mov
pop
dec
or
mov
lods
enter
add
fadds
add
and
add
loop
es
pop
js
sub
adc
xchg
lea
and
push
pop
and
jg
push
mov
aam
fdivrl
or
jno
xlat
mov
hlt
arpl
push
leave
inc
sarl
pop
dec
mov
lock
in
jo
push
sbb
jp
or
jb
lea
mov
add
int3
jns
cs
fdecstp
sbb
mulb
fs
xchg
popl
pop
sub
lea
aam
xor
mov
sbb
add
loope
movsb
dec
pushf
stos
das
subl
call
xchg
lret
int
mov
mov
addr16
adc
in
popa
or
push
mov
out
sbbl
push
cmp
mov
imul
repnz
and
jp
cmp
and
and
stos
pusha
stc
jb
mov
lds
cltd
dec
outsl
shll
pop
ss
insb
push
enter
stc
jno
xchg
clc
out
hlt
sbb
jo
cwtl
int3
fdiv
stc
xlat
lret
mov
jmp
iret
shlb
and
xchg
or
les
xor
jl
fs
mov
sbb
pop
inc
das
imul
push
pop
inc
xchg
imul
sub
pop
inc
pop
adc
fsubs
lahf
push
lock
xchg
cmp
outsl
inc
lea
insl
lea
and
add
jp
sbb
sbb
sbb
jecxz
insl
adc
lods
int
add
xchg
mov
mov
cmp
pop
dec
mov
xlat
cwtl
mov
push
xchg
mov
scas
fsubrs
add
push
lahf
mov
lock
pusha
push
pop
mov
push
insb
es
xor
pop
adc
ljmp
cltd
mov
hlt
sbb
lods
imul
push
mov
add
hlt
test
fistpll
jp
fcoml
das
sbb
mov
dec
dec
xchg
pop
push
add
out
hlt
push
push
mov
push
sub
dec
in
inc
mov
sub
repz
push
or
jb
aam
mov
mov
dec
sbb
arpl
or
in
cmc
dec
pop
in
out
xchg
into
cltd
jns
mov
loope
push
push
mov
fnstcw
jmp
push
xchg
pop
add
outsl
push
popa
inc
adc
inc
lods
aam
out
sarb
and
ret
fwait
daa
outsb
lret
lahf
sbb
push
push
add
in
pop
mov
jle
sub
mov
adc
lock
mov
cltd
icebp
and
flds
mov
imul
enter
pop
out
in
jb
push
ss
aas
or
lret
andb
dec
push
pop
inc
nop
dec
lret
ret
test
mov
movsb
mov
and
imul
and
fsubs
ds
dec
das
dec
pop
cmc
xchg
test
pop
arpl
mov
in
out
cmp
or
push
rolb
int
pop
xor
inc
test
cwtl
aad
nop
and
or
jo
push
repz
and
std
inc
sub
and
loop
add
arpl
push
arpl
sbb
shll
out
fsub
sti
mov
mov
scas
addr16
lret
lods
mov
loope
popf
mov
test
fcompl
adcb
sub
xor
dec
xchg
add
jl
in
inc
shl
mov
push
outsl
mov
pop
movsl
aad
cmpsl
jge
fs
daa
push
add
out
cmp
or
gs
movsl
jnp
loope
xchg
and
loope
pop
adc
hlt
add
sub
mov
outsl
xor
sub
imul
test
fs
into
and
in
sub
stc
in
push
insl
mov
call
mov
push
inc
inc
xchg
mov
mov
jl
clc
pop
lret
jmp
aam
cmp
pop
inc
std
dec
push
jae
imul
mov
lods
loop
test
clc
mov
xchg
aas
mov
test
sbb
jne
push
xchg
in
out
and
pop
idiv
jnp
aas
jecxz
jge
cltd
pop
rolb
pop
or
push
sbb
out
mov
cmp
jecxz
inc
lock
xchg
outsb
mov
mov
loopne
inc
mov
incl
lock
fcmovnu
jae
xchg
sub
loop
pop
push
insl
bnd
mov
inc
in
xchg
mov
popf
adcl
cmp
gs
adc
xchg
and
shrb
dec
xchg
mov
int3
fwait
pop
test
imul
shr
arpl
mov
ss
and
fisttpll
add
inc
xor
cli
sub
lods
adc
lods
test
add
loopne
pop
aas
push
push
jmp
cmc
adc
or
cmpsl
outsb
cwtl
pop
cmpsl
mov
scas
pusha
out
add
loop
popa
cwtl
pop
pop
dec
repnz
jnp
dec
jnp
sbb
ret
mov
insl
dec
fwait
std
jbe
stos
jmp
add
jge
cmp
mov
dec
sub
lret
mov
sbb
cmp
out
arpl
push
mov
insl
in
push
fstpl
mov
subl
lcall
dec
repnz
cmp
cmp
scas
jle
cmp
mov
xchg
data16
sahf
push
jmp
insl
lahf
in
dec
mov
cmpsb
xor
pop
mov
mov
popa
jmp
ja
rcll
popf
out
pop
fiaddl
cli
jns
enter
lahf
mov
add
hlt
xorb
movsl
push
lret
repz
call
mov
adc
test
repz
xor
xor
cmp
and
addl
stos
xchg
insb
cs
xchg
mov
mov
out
cmp
shr
dec
sub
mov
pop
push
inc
cmp
mov
xor
les
js
jnp
pop
jg
sbb
aad
sbb
cmp
dec
sti
cmp
inc
dec
daa
add
test
jge
movsb
test
xchg
sub
mov
out
fmull
aas
outsb
jle
outsl
jns
test
mov
shlb
jns
adc
sbb
outsl
sub
sub
sub
shll
xchg
push
mov
movsl
pop
add
inc
pop
jecxz
test
push
div
sbb
xor
nop
js
sub
mov
dec
pop
int
dec
js
int
cmc
jno
std
leave
mov
sub
lcall
xor
xchg
pop
data16
sar
xorb
jno
jne
inc
mov
in
hlt
in
stos
add
push
mov
ss
add
push
fistpl
adc
into
fwait
and
mov
cwtl
loop
pop
je
sahf
aaa
loopne
mov
add
push
lea
or
mov
fldenv
sub
xlat
in
sub
xchg
jle
inc
and
jns
fld
add
mov
jl
pop
cmpsl
inc
fistps
sub
dec
or
shl
xor
or
jmp
aam
mov
xor
push
mov
adc
xchg
hlt
scas
leave
push
xchg
jnp
incb
jmp
mov
jp
mov
pop
popa
loop
sti
jnp
or
jmp
jmp
les
fwait
jle
movsb
or
sub
xor
ja
mov
movsb
loope
mov
test
cltd
adc
and
lahf
out
mov
dec
pop
and
das
mov
xchg
sbb
insb
stos
jns
scas
adc
lahf
shrl
jle
jp
aam
hlt
hlt
cmpsb
sub
jae
scas
adc
and
inc
xor
mov
mov
xlat
jbe
out
sarl
cli
sub
adc
adc
jl
fwait
or
push
mov
cld
sub
mov
pop
rcrl
pop
adc
xchg
xchg
cld
call
xor
in
inc
addr16
xchg
xchg
repnz
stc
movsl
repz
inc
inc
jb
pop
in
mov
insl
jns
xor
imul
mov
jb
sbb
lahf
pop
inc
and
lods
out
rolb
sbb
adcb
lret
in
mov
adc
sub
loopne
decl
cmc
int
xor
jno
sbb
sarb
imul
cmc
and
xlat
mov
inc
cmp
outsl
xor
xor
sbb
and
sbb
push
lcall
mov
pop
cmpsl
test
mov
cmpsb
jbe
push
xchg
pop
mov
mov
scas
pop
mov
in
aam
in
mov
push
dec
xchg
loop
jp
pop
int
push
mov
lock
sbb
jecxz
fstpt
xchg
outsl
or
arpl
mov
or
mov
dec
inc
adc
cmpsl
mov
sbb
and
scas
clc
pop
sbb
mov
or
test
sub
dec
xlat
push
mov
inc
push
adc
cmpsb
push
push
sub
rcll
fwait
push
mov
mov
sub
xor
inc
cmp
lret
sub
push
out
cmpl
addr16
lods
fldln2
mov
call
xchg
jae
in
ljmp
lcall
push
sarb
or
jne
fsubs
rorb
push
fistps
jae
fcompl
mov
pop
out
pop
dec
jg
outsb
pop
hlt
loope
xor
out
mov
sbbb
mov
shrb
jge
es
fimull
cmp
jb
adc
insl
out
mov
shll
inc
cmp
scas
test
add
aad
xchg
outsb
jb
xchg
sub
jmp
loopne
xchg
cmpsb
xchg
jo
mov
dec
nop
clc
push
or
insb
adc
mov
xchg
fisubrs
std
popf
ss
and
pop
fbld
cmpsl
mov
mov
mov
xchg
pop
add
repnz
jg
popa
xchg
pop
dec
push
ret
adc
shlb
in
cmp
inc
add
xor
icebp
mov
push
shld
popf
pushl
inc
inc
dec
test
cmpb
jno
push
repz
aas
nop
ds
out
clc
xchg
or
dec
subl
inc
aas
and
jne
pop
ljmp
push
cmpsb
cmp
pushf
adcl
jb
ss
dec
aas
inc
in
sbb
push
lods
ja
sbb
sarl
inc
jmp
sti
jb
pop
aam
sbb
ret
bound
push
mov
mov
push
je
xor
lret
stos
xchg
cmp
mov
xor
mov
into
fimull
xor
ss
or
shrb
mov
scas
rorl
int3
test
adc
add
cmp
lahf
outsb
ja
mov
adc
jns
dec
dec
sarb
enter
repz
sub
pop
gs
pop
mov
dec
lahf
xchg
push
xchg
arpl
xchg
test
out
gs
cwtl
lret
cmpsl
es
cltd
push
test
cmp
mov
lahf
mov
int3
pop
popl
clc
mov
scas
and
repz
cmpb
fs
push
into
xor
rcrl
cltd
lahf
xor
les
stos
lcall
fs
sub
repnz
xchg
std
xchg
mov
je
mov
add
cld
popf
push
mov
cli
icebp
sbb
adc
sub
xchg
lahf
mov
outsl
shlb
addr16
mov
in
fdiv
stos
and
pop
adc
fucomp
adc
push
std
mov
pop
add
add
js
fcompl
xchg
push
cmp
scas
mov
ja
sbb
xor
aam
dec
or
lret
push
in
lret
sbb
jge
aad
loop
das
xchg
jbe
cld
xor
movsl
push
mov
enter
pop
inc
bound
pop
pop
ja
fwait
jns
into
add
popf
adc
jmp
cmp
lods
lock
aas
leave
xchg
js
aas
lret
loope
sysenter
xchg
jmp
clc
jae
cmp
and
mov
pop
xchg
aaa
imul
mov
push
iret
call
inc
cltd
xor
and
scas
pushf
jle
jg
push
push
enter
into
rcr
jno
mov
ret
dec
sahf
jg
icebp
cmpsl
scas
add
push
stos
test
lret
jecxz
jnp
mov
out
mov
xchg
inc
pop
nop
pop
stc
sarb
jge
scas
mov
jl
aaa
adc
gs
lods
rclb
fstp
stos
mov
test
pop
jae
jno
inc
rolb
data16
adc
mov
mov
mov
test
cmp
mov
cmp
pop
in
and
sar
lods
cltd
sub
push
cmp
cmpsl
movl
lea
jecxz
xchg
cmpsb
gs
mov
sub
enter
bound
xor
mov
int
xor
dec
gs
pop
mov
and
pop
scas
aad
xchg
fs
cli
out
inc
jg
dec
idivb
dec
outsb
shlb
mov
adc
dec
xor
fisttps
outsl
inc
inc
dec
jecxz
cmp
mov
mov
popf
xor
sbb
jns
in
imull
push
sbb
test
mov
sbb
div
imul
popf
cmc
mov
aaa
cmp
bound
mov
fdiv
jge
jb
jb
jbe
movsl
int
adcb
sbb
cmpsl
xlat
loopne
bswap
fisubrl
mov
mov
inc
xchg
leave
adc
fsubrs
fwait
pop
loope
test
pop
repnz
bound
and
cld
pop
lock
lret
hlt
dec
or
push
mov
cmpsb
mov
adc
js
adc
insb
mov
arpl
fwait
xor
nop
or
out
mov
mov
xchg
mov
dec
fstl
or
add
mov
mov
mov
or
mov
push
scas
adc
and
push
dec
inc
jg
imulb
push
test
aaa
mov
xchg
and
mov
jmp
sub
lea
sub
cmp
pop
mov
jmp
or
pop
inc
or
and
jo
adc
xchg
rorl
pop
std
adc
push
fdivl
pop
cmp
jnp
push
bound
adc
iret
xchg
shrl
popa
and
addb
pusha
inc
mov
icebp
xorb
xchg
ret
mov
push
jae
xchg
out
gs
cmp
cmp
pop
jp
xor
pushf
xchg
out
mov
enter
out
cwtl
arpl
xor
andb
jg
dec
jg
add
loop
dec
jmp
jo
pop
ret
inc
pop
es
mov
xchg
clc
dec
fsubs
mov
inc
inc
jp
testl
cli
movsl
and
int
add
pop
xchg
pop
cltd
lods
sub
xor
insl
adc
lods
jg
loope
jge
adc
fimuls
fdivs
and
xor
or
xor
mov
lret
dec
fimull
mov
cwtl
sahf
and
or
in
lods
mov
cld
mov
je
movl
sub
leave
jp
or
jb
lcall
push
cmpsl
mov
bound
call
mov
sub
xor
arpl
loope
test
mov
cmp
bound
insl
add
lds
mov
aaa
cmp
xor
cltd
stos
mov
retw
or
enter
nop
xlat
dec
sbb
xor
pop
mov
idivl
lahf
and
iret
pop
add
shrb
pop
pop
push
ret
rcll
push
xchg
scas
or
mov
mov
or
call
or
push
lea
sub
addr16
ret
call
mov
push
jp
inc
in
sub
pop
mov
push
dec
adc
test
int3
sub
inc
inc
sbb
mov
test
adc
jecxz
orl
sub
mov
scas
gs
insb
xchg
pop
add
mov
add
push
dec
mov
cmp
stos
lea
and
jae
inc
in
push
push
adc
jmp
mov
jbe
or
xor
cmp
and
adc
fdivl
mov
mov
xchg
inc
or
mov
in
xor
xor
mov
and
dec
mov
fwait
ja
scas
push
outsl
adc
in
stc
inc
pop
cmp
in
jmp
sbb
arpl
clc
hlt
pusha
or
ffreep
and
roll
ja
cmpsl
icebp
pop
rcll
testb
std
in
shl
dec
push
fidivs
jo
xchg
sahf
movsl
mov
sbb
mov
and
cmp
xchg
rolb
pop
lcall
add
notl
mov
repnz
imul
mov
adc
jo
repz
test
jae
pop
decb
inc
pushf
pop
mov
add
iret
dec
rorb
std
fimull
inc
repz
sub
mov
mov
test
sub
mov
divl
dec
push
jne
insb
cmp
dec
mov
push
push
hlt
shll
inc
or
into
cwtl
pop
and
lock
scas
and
push
mov
testl
test
pop
jp
dec
fisttpll
rcr
pop
sbb
pop
clc
mov
sub
aad
cmc
jl
cmp
lods
cmp
dec
and
adc
rorl
push
dec
xchg
mov
lods
mov
add
push
aaa
imulb
inc
cmp
mov
repnz
fmul
loopne
jbe
es
repnz
inc
icebp
cmpsb
push
add
xor
pushf
mov
call
stos
addr16
jnp
jb
andb
clc
nop
add
bound
mov
aam
mov
stos
fimull
cmp
add
adc
push
scas
popa
cmp
mov
in
mov
jl
scas
adc
imul
mov
fsubrl
insl
push
and
xchg
pop
jae
mov
or
dec
roll
inc
fidivrl
and
push
dec
mov
stos
repnz
fwait
aaa
ret
adc
rcl
leave
mov
add
pop
hlt
rol
sbb
and
jecxz
lret
shll
push
fucom
stos
xchg
mov
jg
or
and
xor
aaa
xor
cmp
mov
jmp
xchg
dec
jb
pop
xchg
sub
and
lods
insb
push
mov
mov
lcall
dec
in
or
loopne
xchg
rorb
loopne
cwtl
sub
sub
stos
xorb
inc
push
arpl
add
xor
movsl
xchg
lahf
ficompl
in
mov
or
popf
cltd
repz
out
shll
cmpsb
addr16
and
cltd
xorb
int
stos
out
dec
cltd
aas
sbb
pop
add
push
imul
sub
sbb
xchg
push
scas
cld
jns
cmp
mov
dec
xor
getsec
fwait
ret
add
xchg
mov
mov
adc
scas
jg
aam
pusha
mov
repnz
cmpsl
fnstsw
lods
mov
cmpb
in
inc
sbb
insl
mov
div
jmp
out
xchg
mov
imul
pusha
adc
jae
fcmovnbe
sbb
and
out
lahf
push
mov
push
adc
lahf
sub
pop
and
sahf
cmp
mov
enter
imul
icebp
lret
sbb
call
aas
push
add
movsl
pop
mov
addr16
fs
mov
add
idivb
bswap
pop
int3
cmpsl
lcall
sub
ds
push
push
jns,pt
shl
mov
xchg
pusha
mov
cwtd
repz
xor
outsb
js
fmuls
repnz
push
adc
dec
pop
sbb
cmp
mov
dec
movsl
sarb
fidivrl
or
xchg
pushf
and
popa
rcll
sub
iret
out
inc
cs
add
ss
sub
rorb
gs
jle
scas
pop
add
lock
repz
mov
sarl
dec
pop
popf
xlat
mov
dec
jb
popa
jecxz
adc
adc
cmp
push
cmpsb
pushl
jo
mov
cmp
xlat
add
xor
or
add
daa
in
pop
sub
insl
jbe
and
or
lahf
loop
push
or
jge
fcmovu
sub
out
sbbb
cmpsb
ret
mov
jbe
lcall
dec
fadd
sbb
shll
and
mov
sub
add
rclb
jg
add
stc
or
add
test
or
dec
mov
mov
stos
mov
mov
lds
dec
pop
daa
iret
mulb
adc
mov
movsb
daa
ss
addb
xor
jns
mov
stos
jns
xor
lret
int3
adc
inc
adc
fadds
add
std
sti
sbb
sbb
mov
out
adc
xchg
movsb
popa
push
jne
cmp
mov
ret
enter
arpl
jb
or
fdivrs
in
inc
js
lret
jns
in
inc
push
ds
stos
xchg
repz
sti
push
fs
sbb
jb
push
mov
or
mov
aaa
sub
sbb
or
and
jle
dec
int
or
xchg
rorl
insl
popf
adc
fsubrl
clc
pop
repz
in
and
and
lea
scas
pop
sbb
fwait
pop
xor
and
scas
mov
sub
xchg
rcl
aad
das
inc
mov
mov
in
push
jmp
dec
bound
xor
insl
bound
push
pop
xchg
adc
add
bound
ja
sub
shll
add
xor
pushf
imul
sub
js
cli
dec
dec
lahf
flds
xor
mov
in
mov
aaa
mov
movb
dec
push
rcr
subl
pop
rcr
cmc
iret
sbb
add
ror
daa
daa
sbb
movsl
cmp
mov
jl
popa
sti
xchg
push
mov
push
pop
in
dec
in
pop
mov
jne
cmp
pop
sbb
adc
imul
and
add
andl
pop
hlt
sahf
mov
sahf
pop
mov
push
bound
hlt
or
fwait
adc
adc
daa
pop
daa
fwait
push
jo
pop
xchg
mov
cmpsb
mov
pop
dec
push
sbb
imul
ret
sbbl
sbb
mov
adc
mov
incl
pop
xor
std
idivb
mov
movsl
cli
add
mov
dec
out
jb
enter
push
lret
xor
and
pop
pop
xchg
into
dec
jbe
dec
dec
movsb
or
push
xchg
mov
xor
adcb
cmp
loope
jmp
push
xchg
dec
pop
aad
push
aaa
movsl
inc
leave
adc
sbb
scas
add
sub
or
rcr
xor
lods
adc
mov
ret
sub
int
xlat
int3
inc
mov
adc
xchg
jns
mov
xchg
rorb
mov
mov
out
mov
sbbb
sahf
lock
negl
sub
xor
add
push
lret
mov
test
ret
or
mov
sbb
and
and
stos
cwtl
out
sbb
inc
dec
shrb
xchg
pop
pop
push
fs
and
add
loope
mov
pop
jmp
mov
mov
repnz
mov
jae
xchg
pop
andl
fmuls
fistl
movb
out
movsb
rolb
test
pop
mov
aad
pop
jns
movsl
es
inc
sub
aad
insb
scas
lods
pop
std
in
mov
roll
test
add
aaa
sub
mov
mov
or
mov
adc
mov
mov
sub
jp
pop
lret
out
jnp
xchg
push
pop
movsl
std
mov
inc
frstor
faddl
sub
push
sub
push
addr16
in
call
in
imul
push
dec
cmp
xchg
into
jno
es
lock
lret
pop
push
sbb
out
loope
mov
sbbl
lret
xlat
pop
nop
cmc
push
repz
inc
fists
inc
xchg
push
pusha
inc
inc
int3
ss
push
daa
fimull
sar
andb
lods
add
push
mov
cmp
aam
cs
sti
in
stos
and
std
lret
subb
shrl
lods
xor
inc
adc
dec
stos
inc
mov
sbb
add
dec
popf
sub
push
sti
pop
adc
xchg
xchg
xchg
bswap
in
jp
and
cltd
ficoms
lods
add
sub
xchg
sbb
outsb
iret
jne
mov
xor
dec
cmpsl
je
pop
sub
cli
push
dec
movsl
cmpsl
dec
insl
xchg
pop
jbe
sbb
push
ror
fstps
lock
and
push
pop
pop
pop
pop
sub
mov
fwait
ret
sub
out
add
dec
int3
cmpb
mov
out
mov
sbb
rcrl
test
push
add
dec
testb
into
je
mov
push
mov
dec
mov
jae
lods
out
and
outsb
rcll
stos
jge
pusha
movsb
jg
push
sbb
jns
mov
mov
xor
lret
cmpsl
das
mov
sub
push
div
out
push
adc
out
cmp
fwait
loope
aad
aas
jecxz
or
mov
mov
xlat
mov
filds
add
pop
stos
leave
loope
xchg
mov
adc
and
inc
and
pop
jae
jns
test
ja
jecxz
enter
cmp
jge
jno
insl
and
jmp
lret
push
lcall
int3
or
loop
cmp
ss
aas
or
pminsw
lret
jae
add
call
add
push
out
add
inc
jge
inc
nop
pop
imul
and
sbb
pusha
or
jne
fs
xor
aas
test
pop
xchg
or
sbb
push
adc
stos
or
xor
or
mov
sub
inc
mov
test
out
jle
sbb
addb
fcomp
subl
add
pop
inc
clc
pop
push
stos
movsl
movsb
xor
push
or
test
sub
jmp
pop
mov
pop
test
int3
xor
xor
jae
ljmp
jge
in
aaa
adc
scas
or
popf
stos
jp
es
jmp
fists
in
hlt
and
aaa
pop
test
jecxz
sbb
add
lcall
pop
fwait
mov
push
lcall
xor
cli
fadds
mov
lahf
sub
fadds
mov
loopne
adc
mov
js
cmp
xchg
leave
jae
repnz
cmp
xchg
loopne
ss
or
lea
push
or
mov
bound
adc
inc
sub
out
ss
mov
lret
pop
stc
push
popf
and
ss
insl
inc
jb
pop
cli
push
outsb
andb
mov
hlt
jl
ljmp
push
xchg
popf
pop
push
jo
xchg
xor
sub
inc
jmp
mov
ds
nop
push
pop
xor
cmp
add
add
das
and
and
sub
inc
pushf
or
sub
mov
add
pop
sub
sub
pop
nop
push
out
or
add
lret
stos
pop
push
cmc
lods
fcmovb
push
lods
negl
cmp
addr16
and
and
dec
sbb
xchg
clc
mov
mov
adc
call
xchg
lcall
mov
mov
shrd
shr
mov
mov
xor
shl
jmp
xlat
mov
iret
or
push
mov
js
jl
jg
adc
xchg
push
pop
add
dec
cmc
mov
jno
out
jns
jp
jecxz
pop
push
in
jle
dec
add
out
jge
dec
dec
insb
outsl
fcoms
ret
out
mov
das
jbe
jnp
mov
inc
mov
scas
pop
xchg
and
mov
pop
cmc
outsb
jecxz
or
jne
imul
sub
inc
mov
jg
insb
mov
sub
jb
pop
pop
ret
call
stos
sub
jbe
fnstcw
dec
sbb
sub
cs
shll
fisubrl
jge
iret
ror
mov
test
and
pop
ja
sbb
in
xor
inc
adcl
mov
xchg
outsb
cmc
xchg
movsb
cld
rcll
pushf
add
push
xchg
cli
jno
inc
cli
pop
cmp
jecxz
xchg
loop
mov
pop
and
jbe
outsl
rcll
sub
and
push
or
les
xchg
sub
mov
jns
das
mov
cmpsl
in
adc
repz
lret
mov
sbb
fstl
lods
xchg
mov
movsl
out
mov
cltd
add
outsw
mov
mov
cld
sbb
aam
and
ds
in
jecxz
stc
sub
sub
xchg
dec
dec
inc
inc
ret
inc
dec
mov
sub
gs
shl
repz
pop
sub
inc
lcall
xchg
int3
mov
mov
add
mov
cmp
xor
or
push
or
aaa
mov
testb
mov
sub
mov
popa
imul
fisubrs
je
mov
movsl
das
lcall
xlat
sub
push
push
push
xor
xorb
push
adc
mulb
stos
mov
insl
divb
mov
lea
fwait
xor
adc
mov
cli
cmp
lds
and
mov
sbb
and
ror
xor
cmp
adc
emms
dec
fs
mov
int3
mov
cwtl
add
sbbl
and
adc
cltd
mov
hlt
push
stc
jnp
sti
cli
mov
jecxz
rcll
xrelease
sahf
out
mov
mov
loop
or
add
jge
sar
cmp
push
push
aas
xchg
test
test
aaa
leave
jne
in
xor
imul
adc
add
shll
dec
dec
cltd
jbe
or
mov
inc
mov
movsl
mov
insb
and
xchg
push
das
icebp
test
mov
jno
mov
dec
in
mov
mov
add
add
test
xor
push
mov
or
imul
add
inc
fstl
loop
mov
repz
in
mov
jp
add
jmp
and
inc
jecxz
adc
pop
int3
fidivs
pop
sub
push
jle
lret
mov
loopne
pop
sub
mov
cmc
clc
sbb
mov
adc
xchg
and
adc
inc
movsl
push
mov
insb
fsts
movsl
pop
jb
decb
push
sbb
test
ret
gs
cltd
dec
popa
test
std
imul
pop
cmpsl
push
inc
mov
and
cld
and
aam
or
pop
push
inc
inc
bnd
popa
aas
mov
sbb
pushf
mov
push
mov
fidivl
fadds
stos
fstl
pmaddwd
jmp
sarl
stos
mov
xchg
xor
xor
and
data16
dec
xchg
jmp
cmp
mov
sub
incb
xor
inc
adc
fbstp
test
sahf
out
je
addb
adc
add
sbb
adc
mov
jmp
pop
and
inc
pop
mov
aad
jb
test
mov
int
xchg
adc
inc
mov
inc
adc
test
inc
arpl
in
pop
xchg
push
insb
or
gs
sti
cmc
js
sbb
jbe
push
cmpsw
imul
dec
sbb
cmp
push
jecxz
dec
cmpsl
mov
mov
dec
adcb
xor
aad
bound
pushf
xchg
adc
mov
int
insb
mov
pop
xor
mov
inc
dec
xor
gs
mov
insl
jg
aam
jno
push
negb
fimuls
out
mov
pop
jne
push
mov
cmp
ja
dec
xor
ret
in
cmpsb
cmp
ss
aas
movsl
aaa
inc
push
rclb
cmp
mov
cmc
xchg
test
adc
insb
push
rcll
les
pop
div
hlt
repnz
pushaw
andl
jg
icebp
mov
and
imul
std
dec
or
pop
mov
loope
lock
daa
ret
add
adc
and
sbb
push
add
lock
xchg
inc
and
in
es
and
inc
lret
jno
push
cmc
or
pop
loopne
fidivrl
jo
stc
add
sub
aas
shrb
mov
and
icebp
mov
cli
dec
mov
les
mov
ljmp
mov
xor
xor
push
pop
push
jae
lret
leave
sbb
and
mov
sbb
in
push
cltd
mov
js
sbb
clc
push
pop
popa
adc
sbb
mov
cltd
inc
addl
add
cmc
sti
enter
in
int3
mov
popf
mov
mov
je
and
pop
adc
jnp
aad
cld
test
push
cmp
push
inc
jnp
lret
int
pop
lea
jle
gs
xchg
adc
jbe
rorb
repz
xor
std
fdivrl
fisttpll
dec
dec
and
jns
and
add
sbb
add
lret
push
fcmovbe
jl
iret
mov
pop
movswl
jmp
sub
call
pop
es
push
orl
sub
push
jmp
push
xchg
cmp
and
or
test
inc
movsb
jmp
mov
in
cmp
cmpsl
imul
je
enter
shlb
mov
rolb
cmp
adc
cmpsl
popf
lock
mov
xorb
adc
mov
xor
pop
add
and
xchg
std
pop
fwait
movsl
lret
testb
adc
xchg
mov
xorb
add
jae
or
push
ss
bts
mov
mov
pop
mov
stos
jge
test
data16
fdivp
sbb
inc
icebp
faddl
cmp
mov
mov
dec
pop
loope
adc
jp
lods
lods
das
push
xorb
jg
lods
mov
jb
xor
sbb
out
inc
jbe
je
mov
std
sbb
int3
aaa
into
out
dec
mov
popf
js
dec
aam
jge
push
test
push
arpl
repz
jmp
rcrl
and
scas
and
dec
lret
dec
ss
shl
and
in
test
mov
add
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
jmp
mov
outsb
arpl
xchg
and
xchg
inc
mov
adc
xchg
sti
push
outsl
loop
pop
dec
or
cmp
sub
sub
roll
sub
mov
sbb
sbb
or
push
mov
in
pushf
and
push
push
cmp
arpl
scas
cmp
addr16
cmpsl
inc
cld
wrmsr
jne
jle
movsb
fs
into
shlb
xchg
push
outsl
pop
mov
iret
jno
cli
ja
cld
mov
cmc
jns
scas
xchg
fiaddl
out
adc
orl
dec
xchg
inc
xchg
inc
out
xchg
pop
loope
sahf
std
out
mov
add
inc
fisubrl
pop
push
ss
jns
lock
inc
dec
pop
pop
xchg
or
or
mov
adc
inc
nop
enter
xchg
int
insl
jmp
pushf
jl
adc
pop
and
xor
mov
aam
pop
ljmp
xchg
cmc
shlb
cmpsl
paddw
mov
filds
push
inc
test
cmpsb
jl
sahf
lret
mov
cld
pop
xor
test
icebp
cltd
subl
lret
sbb
addr16
xor
sbb
and
jnp
mov
arpl
aad
inc
or
sahf
orl
xorl
lds
jo
or
xchg
xlat
cmpsl
dec
mov
mov
or
outsb
mov
imulb
fistps
dec
scas
imul
dec
push
pop
xchg
test
or
xor
mov
cltd
ljmp
cmp
mov
and
sub
mov
add
and
out
mov
push
and
sti
out
cld
fstl
mov
push
sub
stos
fwait
rcl
fldcw
or
repz
mov
xor
push
arpl
fistps
repz
repz
or
mov
fsubr
xchg
xor
call
xor
ret
enter
dec
out
adc
in
mov
in
cld
stos
xchg
and
mov
pop
dec
dec
setns
and
stc
addr16
enter
shlb
and
xchg
or
cs
inc
and
dec
in
ja
test
call
inc
xchg
int3
xchg
shll
dec
or
out
mov
mov
pop
notl
das
add
adc
inc
xor
mov
rcr
jae
pop
adc
into
and
or
ret
andb
int3
sbb
std
cltd
mov
mov
jmp
jge
nop
testb
ja
adc
cmpsb
jg
loopne
out
push
lret
clc
sbb
out
mov
das
jge
bound
movsb
hlt
fs
addr16
repz
fnstenv
mov
aam
xchg
push
es
sbb
push
fwait
out
nop
dec
mov
cmp
fcomi
pop
sub
and
aas
lds
sbb
sub
inc
push
pop
and
repz
ds
int3
xchg
loopne
lret
or
dec
xchg
jno
iret
adc
push
jp
push
aad
push
inc
xor
sti
aam
mov
xor
mov
ljmp
mov
sub
outsb
sub
mov
pushf
lods
dec
sbb
daa
lret
jne
js
addr16
add
xchg
xchg
adc
fsubrp
jmp
mov
xchg
xor
aad
frstpm(287
mov
sbb
mov
fs
or
inc
pop
cmp
xor
into
cltd
in
imul
lcall
or
dec
fs
dec
sbb
stos
cmp
sbb
stos
jns
ljmp
pop
cmpsl
es
push
sahf
ljmp
movsl
and
mov
aaa
xor
push
fs
fnstsw
inc
push
cmp
rolb
mov
inc
mov
pusha
dec
pushf
cmpb
stc
roll
lahf
inc
aas
inc
sbb
push
add
mov
add
sub
ret
inc
mov
cmp
push
mov
test
adc
rclb
jb
sti
lods
or
cld
lret
add
adc
sbbl
push
in
mov
insb
or
lods
sub
movsl
ja
rolb
out
xor
sbb
xor
add
mov
add
lea
jecxz
cs
jbe
inc
fwait
daa
mov
add
cmpsl
xchg
sub
icebp
jno
pop
popf
mov
mov
dec
xchg
in
in
sbb
mov
imul
imull
iret
jb
call
ja
sbb
lock
out
push
sub
subb
or
gs
mov
inc
xor
push
or
divb
stos
push
lea
lock
rcll
pop
fmul
mov
cli
bnd
out
clc
test
cmp
pop
and
ljmp
lcall
xor
sti
jle
mov
jle
pushf
xchg
ror
cs
fnstenv
cmp
data16
or
push
or
lahf
scas
pop
xchg
or
jnp
in
int3
sti
arpl
add
iret
int3
mov
cmp
shrb
jae
ljmp
sbb
in
dec
jl
inc
jnp
cmp
pop
test
and
es
add
addl
sub
je
cmp
call
pop
mov
fisubs
je
xor
fdivrs
dec
pop
mov
xchg
pop
flds
push
test
push
subl
call
jo
mov
in
repz
or
sub
insl
xor
adc
ja
vxorps
adc
cli
cmpb
jmp
cmp
sbb
jne
int3
push
inc
cmp
jl
sbb
push
push
ja
imul
jns
sbb
adc
shlb
sub
movl
pusha
jbe
insb
mov
inc
scas
test
repz
inc
ret
pop
hlt
out
cmp
aam
dec
inc
fistpl
cmp
ja
popa
xchg
loop
fistpll
sbb
push
daa
mov
cmpsl
dec
cmp
std
sbb
cli
shlb
push
push
jns
mov
jb
mov
fcmove
idivl
ss
imul
jne
sbb
data16
add
inc
xchg
push
loopne
js
sarb
sbb
add
pop
inc
jmp
fwait
lcall
jo
stos
testl
xchg
sbb
fwait
jp,pt
mov
clc
outsl
push
adc
inc
addr16
popf
pop
or
stos
arpl
add
icebp
lahf
inc
icebp
push
xchg
pop
jo
jecxz
popa
rclb
dec
lds
jbe
out
jl
fisubrs
inc
aas
and
sbb
mov
and
bound
dec
lea
ss
xor
pop
mov
lcall
rcrb
movsl
add
ja
js
into
ficoml
pop
push
ret
dec
xchg
or
pop
ljmp
push
adc
sub
push
xor
sti
js
gs
mov
testb
shll
jle
jnp
pop
rorb
insb
mov
test
incl
push
xchg
inc
cld
push
daa
add
mov
mov
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
jmp
fnsave
push
adc
adcb
adc
xchg
loopne
ds
or
inc
and
test
addb
push
add
call
stos
clc
pop
lock
push
mov
jge
push
xor
pop
lods
sbb
push
mov
mov
pop
adc
scas
jae
inc
idivb
cmp
inc
in
dec
lods
mov
repnz
mov
dec
jg
jne
xor
movsb
mov
and
xchg
add
dec
std
int
jmp
xchg
xchg
mov
pop
andb
das
xlat
cmpsb
js
add
scas
mov
xchg
cltd
jmp
sahf
andb
insl
out
xchg
xor
pushf
mov
jl
ds
jae
test
mov
fdivl
add
shrb
dec
mov
pop
sub
shrl
mov
inc
into
in
push
pop
shrb
jbe
and
jecxz
mov
or
inc
sub
aad
inc
jge
push
inc
test
jnp
cmp
or
sbb
mov
hlt
sub
cli
push
fldcw
call
mov
addl
out
xchg
aaa
push
stc
mov
pop
aam
rcl
inc
outsb
xor
dec
xlat
push
xor
mov
stc
jne
lds
pop
mov
std
bound
sbb
lods
std
mov
cmp
jb
jb
ljmp
test
pop
dec
inc
cmpl
adc
dec
adc
jle
cmp
dec
mov
push
or
ret
hlt
int3
and
ljmp
xchg
in
mov
js
shll
sbb
add
sti
or
push
aas
scas
lea
xor
jns
pop
jecxz
push
stos
lods
cld
repz
in
xchg
std
sbb
cmpsb
rcrb
add
push
or
shll
cwtl
add
add
xor
pushf
xor
mov
mov
adc
test
aas
lret
xchg
imul
aad
push
dec
test
adc
stc
inc
mov
xor
jo
xchg
ja
xor
cld
cmpsb
cmc
push
movsl
mov
sbb
adc
out
pop
scas
add
cmp
and
pop
testb
xchg
jo
cmp
in
mov
fldcw
cmp
ljmp
sti
mov
jo
scas
lahf
cmc
pop
shrb
push
cli
mov
cmp
rclb
push
movsl
outsl
das
aaa
mov
or
repnz
adc
insl
inc
daa
aaa
xlat
fisttpl
mov
fcmove
mov
push
push
test
ja
aam
adc
jecxz
mov
inc
adc
in
jecxz
loopne
int3
dec
pop
xor
imul
int
shlb
sub
jno
es
jg
mov
mov
push
loop
xchg
mov
mov
hlt
lods
cwtl
lcall
or
fmuls
fcmovne
decb
push
mull
add
dec
mov
xchg
cli
inc
bound
mov
dec
fldl
inc
add
scas
test
rcll
mov
xor
jecxz
mov
andl
cmp
sub
sub
test
movsb
pop
or
leave
dec
stos
mov
imul
mov
aaa
push
mov
clc
mov
or
add
pop
hlt
dec
fistpl
out
daa
les
push
mov
lcall
loop
and
mov
lcall
mov
or
add
or
addr16
fisubrl
lea
nop
xor
sti
sbb
sahf
push
adc
andl
sub
pop
pop
and
pop
test
mov
imulb
xchg
in
fidivl
in
sub
incb
imul
jb
gs
scas
push
lods
dec
adcl
les
dec
fs
and
popf
push
imul
in
xor
mov
fldl
add
lret
add
hlt
push
test
lock
or
loopne
pop
dec
punpckhbw
cmpb
bound
dec
pusha
js
pop
mov
loop
sbb
push
mov
stos
ljmp
sbb
add
dec
out
test
fdivl
in
bound
sub
icebp
mov
or
mov
nop
and
cmpsl
mov
adc
xchg
sti
cli
xchg
add
nop
lods
xchg
cmp
add
xor
jns
adc
jb
pop
add
int3
jnp
fld
mov
dec
pop
xchg
ret
add
movsl
cmpsl
add
ror
inc
cmp
enter
cwtl
adc
jne
and
ds
inc
cmp
mov
push
dec
pop
inc
pusha
pop
cmp
imul
fsubs
and
push
jmp
and
sti
cmpsl
mov
xor
ja
test
cmp
or
ljmp
hlt
push
jb
lahf
pop
test
leave
push
jg
mov
mov
test
sbb
or
sahf
test
adc
fdivl
jnp
imul
jp
inc
and
dec
sti
fimuls
fisttpl
and
push
push
or
scas
mov
loop
xor
xchg
jb
sbbb
aaa
pop
xor
test
push
lret
mov
icebp
outsb
loopne
xlat
mov
iret
cli
push
adc
or
mov
push
mov
xchg
stc
shl
pushf
inc
aam
repz
mov
or
cmp
stc
ret
cli
mov
push
or
pop
icebp
jnp
repz
outsl
popa
mov
push
das
fsubr
idivl
je
mov
pop
dec
es
scas
xchg
test
icebp
cltd
movd
icebp
mov
int
cmc
pop
das
repnz
push
push
push
jecxz
movsb
push
jmp
push
fisttpll
mov
mov
lods
jno
fistl
or
lock
xchg
xor
sub
fists
jmp
rorl
mov
out
fbld
incl
sub
mov
adcl
cmpsl
mov
add
movsb
ds
loop
movsl
shrl
fwait
jns
mov
pop
loope
lock
lret
shrl
pop
add
popf
rorb
mov
popf
cmp
pop
adc
mov
ljmp
cwtl
mov
inc
fiaddl
lret
stos
add
out
into
xlat
adc
xlat
pop
shl
dec
adc
jle
ficompl
jns
out
out
insl
sub
lock
xor
cwtl
or
int3
stos
jbe
sub
adc
or
mov
jge
test
fildll
aaa
sub
loope
xor
jo
jg
icebp
sbb
xlat
aas
es
inc
sub
adc
ja
mov
jo
mov
stos
adc
dec
sub
test
divb
ret
sbb
mov
jmp
sub
or
shl
shl
mov
mov
jmp
test
fcoms
mov
or
ja
mov
out
mov
arpl
jns
xchg
pop
or
fdiv
enter
mov
sub
mov
sarl
add
out
mov
out
cmp
fsts
mov
movsl
bound
pop
notl
mov
cmp
sub
push
ret
mov
lcall
jbe
subb
and
xchg
mov
sahf
mov
or
xchg
or
mov
sbbb
mov
sbb
or
leave
adc
je
jns
rcl
sbb
mov
aam
incb
xchg
and
mov
push
adc
mov
jae
repnz
mov
aam
mov
cli
sbb
ret
fsubp
outsl
mov
shlb
mov
addb
dec
popa
lret
add
adc
lret
fcoml
mov
div
xchg
dec
and
imul
rolb
sub
shl
jb
sbb
jne
jp
pop
xor
add
xor
inc
repz
dec
imul
jge
push
sub
dec
and
or
add
mov
fwait
scas
in
in
pop
mov
sbb
xchg
adc
mov
jecxz
adc
dec
lea
mov
int
push
dec
xchg
pop
or
stos
fstpl
arpl
outsl
push
leave
adc
in
cmpsl
jns
xchg
lret
fadds
repz
add
into
cwtl
add
pop
jl
lret
push
popa
sbb
das
pop
xor
mov
call
test
dec
mov
aam
mov
cli
sub
icebp
jp
mov
xchg
call
stos
xlat
fwait
sub
mov
push
cmp
xor
movsb
dec
push
push
shr
sti
loope
data16
mov
dec
aas
arpl
xorl
jg
push
xorb
cmp
out
les
fs
add
pop
mov
shll
dec
pop
cmp
xor
dec
add
int3
jg
push
shlb
jae
cmp
inc
cmp
cmpsl
and
xchg
sbb
daa
xchg
dec
out
dec
push
jb
cmp
and
sub
rorl
cltd
inc
push
pop
jo
jns
pop
mov
jnp
jmp
sbb
push
popa
es
insb
add
je
or
sbb
fs
repz
cmp
cmpsl
insl
loope
stc
lret
pop
jb
cmp
testb
push
pop
sbb
mov
and
lods
sti
mov
mov
popf
test
xchg
std
lret
cmp
mov
out
or
lea
cmp
jb
mov
mov
push
js
sub
movsl
mov
mov
jg
jmp
xorb
inc
and
sub
out
dec
jmp
into
inc
pop
pop
mov
xor
xor
dec
insl
outsb
mov
add
ss
xchg
adc
enter
std
mov
popl
std
sbb
xor
cmp
xor
daa
psrlq
nop
cs
jbe
push
inc
ss
loop
dec
mov
fcmovb
cmp
xchg
movsb
insb
or
in
pop
mov
mov
jecxz
dec
dec
pushf
nop
sub
add
sbb
or
jg
vpsrlw
loopne
lahf
hlt
ds
cltd
pop
sbb
popa
or
pop
aam
repnz
repnz
dec
adc
inc
int
outsl
cwtl
adc
or
jge
rorl
pop
xor
xchg
fs
popa
loopne
mov
pop
push
xor
loopne
cmp
je
xorl
cmpsl
push
add
fs
lds
jae
fdivrs
xlat
popa
dec
mov
sub
jnp
jb
sbb
inc
adc
scas
fmull
mov
adc
icebp
dec
xor
cmp
inc
cmpsl
stos
daa
out
movsb
or
jae
imul
push
adc
xchg
pop
mov
xorl
mov
pop
rep
ja
stos
or
mov
xchg
mov
adc
scas
or
sti
addr16
xor
mov
sub
iret
mov
fsubs
in
les
push
cmpsb
push
dec
cmc
xor
jle
fnstsw
flds
icebp
pop
cmpsb
divb
jbe
dec
lds
dec
daa
inc
out
scas
imul
mov
sub
pop
es
sahf
je
in
push
pop
leave
inc
stos
lahf
xlat
push
jb
mov
sub
fwait
daa
mov
jmp
cmp
movsl
stos
lret
mov
stc
sbb
pop
push
xor
lcall
sbb
fisubl
icebp
pop
jne
push
sahf
pop
mov
js
in
clc
or
sti
or
fdivl
mov
push
jl
mov
sub
mov
arpl
lahf
jmp
nop
test
add
adc
pusha
shlb
or
xlat
cli
add
inc
or
sbb
add
and
lods
push
jmp
bound
inc
in
push
dec
mov
pushf
mov
jge
dec
nop
scas
stc
xor
cmp
push
insl
sbb
in
mov
dec
push
sarl
outsb
pop
add
js
orl
xor
ss
pop
mov
adc
ret
aam
jmp
ret
mov
xor
loopne
sub
hlt
fs
imul
fstpt
out
add
adc
cltd
sbb
enter
icebp
cld
movsl
pop
jge
jne
fidivrl
push
lock
jns
pop
nop
fildll
sub
add
cmpsl
sbbl
add
push
mov
sbb
push
fnstsw
mov
push
cld
jnp
iret
dec
fbstp
and
dec
push
cmp
xor
arpl
out
push
jecxz
addl
inc
pop
xchg
in
lcall
scas
insb
xor
pusha
pop
roll
mov
lods
lods
in
mov
xor
in
rcrb
testl
mov
aam
pop
repz
pop
xorl
repnz
lahf
leave
pop
fs
scas
add
notb
mov
xor
repnz
dec
mov
mov
out
clc
cmp
test
xor
and
jns
add
push
pushf
mov
das
add
in
jae
std
leave
pop
movsl
push
push
mov
outsb
xchg
xchg
and
xchg
lea
add
inc
cmp
mov
or
loope
dec
inc
popf
adcl
orl
fwait
fwait
dec
add
xorl
movsl
fs
scas
mov
cltd
test
mov
push
jle
cli
sbb
mov
daa
int
xor
out
aad
mov
or
hlt
sbb
lea
dec
xlat
shll
cmp
les
and
sarl
sbb
fsubs
cli
sub
popf
ds
pushf
or
std
repnz
dec
int
popf
ds
pop
push
cmpsb
aam
jns
lods
ret
mov
fs
sub
xor
mov
test
ljmp
mov
mov
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
jmp
sti
icebp
lods
mov
outsb
fs
dec
add
testl
pop
jns
cmpsl
push
mov
xchg
ret
inc
divl
xchg
add
neg
jbe
inc
fwait
call
xchg
fidivrl
adc
ds
lret
arpl
xor
ljmp
cmpsl
mov
adc
pop
and
out
mov
arpl
mov
mov
les
cmovl
mov
int
adc
push
in
aam
popf
subb
fs
jle
ds
cmp
mov
push
test
lret
push
cli
in
out
adc
scas
icebp
push
push
jo
das
pop
dec
je
mov
or
or
add
cmpsb
inc
mov
ret
aas
and
jmp
ljmp
cmp
ror
xchg
pusha
cmpsb
adc
and
out
aas
aam
pop
imul
into
xor
mov
fs
jae
mov
push
sub
pop
push
pop
inc
in
cmc
push
dec
loope
mov
mov
xor
lcall
into
xchg
add
xchg
repnz
xchg
loope
sbb
int3
jno
jnp
sub
dec
and
mov
pusha
pusha
or
rcrb
insl
xlat
push
lods
or
jmp
lret
mov
adc
test
mov
cli
jge
push
push
push
dec
faddl
mov
repz
cmp
loopne
push
ret
outsb
jmp
jnp
mov
hlt
add
lret
fmul
fbstp
sarl
fwait
lods
ret
bnd
cmp
in
mov
xchg
lods
loope
stos
jmp
push
fnstenv
push
dec
sbb
mov
aam
rcll
or
mov
stos
mov
xchg
pusha
outsb
xchg
test
mov
roll
fadds
stc
sbb
data16
jnp
add
sar
into
mov
cmc
or
stos
call
mov
push
cmc
mov
add
jle
dec
sub
pop
test
lret
fisubs
xor
jo
les
xchg
jns
in
gs
xor
sub
es
loope
push
jo
adc
enter
xchg
sarb
lahf
adc
nop
adc
dec
rolb
or
xchg
in
scas
lcall
mov
ret
loop
int3
xchg
push
jecxz
leave
mov
stc
cmp
aad
mov
shlb
insb
lcall
sbb
mov
cwtl
xchg
bound
lods
pop
nop
push
inc
xchg
jle
cs
lock
mov
popa
cs
rorb
dec
hlt
insb
mov
aad
loopne
jl
xor
dec
scas
std
add
js
xchg
lds
add
je
jl
cbtw
cmp
mov
xchg
push
sub
dec
rcr
icebp
pop
out
lcall
aaa
sub
inc
out
add
test
icebp
mov
add
push
push
mov
iret
mov
push
test
jne
xchg
fxch
sbb
std
add
pusha
shrl
out
lds
pop
adc
mov
or
sarl
pop
shll
add
add
mov
loopne
or
jg
inc
testb
cld
lahf
sbb
add
add
mov
jmp
sbb
and
xor
dec
ja
cltd
les
stc
stos
xchg
ret
cmp
loope
in
loopne
cmp
xchg
loopne
mov
xchg
cmpsl
and
xchg
lahf
mov
mov
loope
sti
xor
sti
sub
inc
push
fucomi
out
sbb
orl
cld
adc
ret
mov
jno
loop
enter
scas
fwait
add
dec
or
mov
insb
mov
push
push
daa
mov
addr16
and
mov
sbbl
clc
sub
ds
fsubs
add
out
and
jge
sbb
jge
hlt
jp
inc
and
xchg
adcb
push
mov
xorb
adc
ss
les
xor
ret
xor
mov
cmc
dec
sub
rolb
outsl
xlat
imull
push
or
loopne
fmul
in
sub
mov
repz
push
dec
popa
popf
pop
fisttpll
clc
push
fstpl
loope
test
loope
mov
loopne
mov
insb
or
adc
out
ret
lahf
inc
xchg
movhps
out
or
inc
mov
pushf
jmp
iret
sbb
cli
mov
aam
fs
cmp
adc
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
cmp
movl
jae
cmp
jae
xorl
shrd
movl
shr
ret
adcl
mov
xorl
xor
sbbl
and
shr
ret
xor
xor
ret
push
mov
sub
cmpl
movl
movl
jmp
movl
notl
jle
push
pushl
call
notl
andl
andl
sbbl
adcl
movl
mov
incl
mov
adcl
movl
mov
movb
sbbl
movb
and
movb
adc
movzbl
andl
mov
sbbl
sub
addl
imul
movzbl
andl
push
and
andl
mov
addl
movb
movb
andl
movb
movb
negl
mov
mov
negl
add
adcl
imul
sbbl
mov
subl
or
mov
sbbl
and
mov
movl
cmp
ja
mov
mov
mov
or
mov
mov
cmpl
not
mov
movl
jmp
movl
jb
push
push
call
dec
xor
add
mov
add
adc
xorl
xor
adc
mov
movzwl
addl
movzwl
sbbl
shr
notl
or
sub
mov
subl
movb
notl
movb
mov
orl
mov
xor
xorl
add
mov
or
mov
movzbl
and
cltd
sub
push
cmpl
not
mov
mov
jmp
mov
je
push
push
call
mov
adc
xor
neg
adcl
or
adc
pop
adcl
idiv
mov
addl
movb
addl
movb
xorl
mov
mov
negl
add
movzbl
movzbl
xorl
cltd
idiv
mov
movl
cmp
jae
movl
movl
mov
mov
push
push
push
push
call
xor
xor
or
or
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
shl
push
pop
mov
mov
mov
mov
mov
sub
movzwl
mov
movzwl
cltd
idiv
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
imul
mov
sub
mov
add
mov
cmp
jbe
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
sub
mov
and
xor
imul
mov
push
sub
push
movl
movl
movl
movl
movl
mov
xor
add
mov
or
sub
mov
mov
and
or
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
xor
or
xor
mov
imul
lea
mov
mov
imul
mov
mov
or
xor
div
mov
and
add
cmp
jb
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
lea
add
movl
movl
movl
movl
movl
movl
mov
mov
sub
add
mov
imul
mov
mov
xor
mov
xor
mov
mov
add
xor
sub
mov
mov
mov
mov
mov
sub
mov
imul
mov
or
sub
mov
xor
add
mov
xor
mov
sub
add
cmp
jbe
xor
inc
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
xor
div
mov
xor
mov
mov
div
mov
xor
div
mov
sub
mov
and
imul
and
xor
cmp
je
push
movl
movl
movl
movl
movl
mov
mov
imul
xor
add
mov
and
sub
mov
mov
add
xor
mov
mov
and
sub
mov
mov
mov
mov
mov
xor
or
imul
or
mov
imul
xor
mov
div
add
mov
and
imul
and
xor
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
movl
movl
movl
mov
mov
add
xor
mov
lea
mov
add
mov
movl
movl
mov
mov
add
xor
div
mov
xor
push
sub
imul
xor
lea
mov
movl
movl
movl
mov
mov
shr
sub
mov
imul
div
xor
or
xor
mov
movl
movl
movl
mov
mov
or
sub
or
mov
lea
mov
movl
movl
mov
mov
add
imul
xor
and
mov
movl
movl
mov
mov
and
sub
add
mov
movl
movl
mov
add
pop
div
mov
sub
add
imul
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
add
mov
adc
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
sub
mov
imul
mov
sub
imul
xor
add
xor
push
mov
add
imul
mov
div
mov
lea
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
sub
and
xor
mov
mov
lea
push
mov
push
pop
xor
div
mov
sub
add
and
lea
call
mov
mov
imul
mov
sub
add
mov
xor
sub
cmp
jne
mov
mov
sub
mov
sub
add
xor
xor
lea
mov
push
mov
and
xor
imul
mov
div
push
mov
add
push
mov
mov
imul
and
mov
imul
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
or
add
adc
push
push
push
push
call
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
imul
mov
mov
xor
mov
mov
xor
mov
mov
and
xor
mov
sub
mov
sub
mov
imul
sub
mov
movl
movl
mov
mov
or
mov
imul
mov
movl
movl
movl
mov
mov
or
xor
div
mov
mov
sub
mov
xor
div
mov
xor
pop
mov
movl
movl
movl
mov
mov
sub
mov
div
mov
or
mov
sub
mov
mov
movl
movl
mov
mov
xor
lea
xor
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
and
and
sub
mov
sbb
mov
add
adc
or
mov
mov
mov
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
or
add
adc
xor
xor
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jne
mov
add
imul
xor
mov
div
mov
xor
push
push
xor
add
xor
mov
mov
sub
mov
and
div
mov
mov
and
sub
imul
add
xor
and
mov
add
mov
add
mov
xor
or
xor
add
mov
add
mov
mov
mov
mov
xor
xor
add
adc
push
push
call
push
push
push
push
call
mov
add
adc
xor
cmp
jne
cmp
jne
mov
mov
imul
mov
or
sub
mov
lea
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
push
push
push
call
add
adc
shld
shl
mov
mov
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
push
push
push
call
add
adc
shr
xor
or
or
xor
mov
push
xor
mov
mov
mov
push
push
push
call
mov
mov
mov
add
mov
adc
mov
and
and
add
mov
adc
add
mov
adc
push
mov
mov
mov
push
push
push
call
push
push
push
push
call
mov
mov
mov
or
mov
mov
shl
mov
or
mov
xor
xor
call
add
mov
mov
push
push
adc
push
push
xor
xor
call
push
push
push
push
call
mov
mov
mov
or
mov
or
or
or
xor
xor
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
or
xor
mov
xor
mov
push
push
push
push
call
push
push
push
push
call
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
and
and
or
mov
sub
mov
mov
sub
add
add
mov
xor
cmp
jne
mov
mov
xor
div
push
push
push
xor
mov
mov
mov
mov
mov
imul
mov
div
mov
sub
xor
shl
imul
sub
xor
mov
mov
add
mov
add
mov
mov
mov
xor
and
mov
imul
mov
sub
or
mov
pop
xor
pop
pop
cmp
je
mov
jmp
mov
mov
sub
or
imul
add
jmp
movl
movl
movl
mov
mov
add
imul
mov
or
xor
mov
div
xor
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
xor
mov
xor
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
xor
sub
mov
sub
add
mov
mov
and
xor
div
mov
mov
imul
sub
add
cmp
ja
push
movl
movl
movl
mov
mov
add
xor
div
mov
mov
imul
imul
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
imul
lea
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
mov
sub
mov
sub
add
mov
mov
and
xor
div
mov
imul
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
and
push
cmpl
not
mov
not
not
jmp
movl
movzbl
je
push
pushl
pushl
push
pushl
call
sbb
adc
adc
subl
add
push
adc
mov
cmpl
mov
mov
mov
jmp
mov
movl
ja
pushl
push
pushl
push
push
call
sbb
adc
xor
mov
mov
sub
sub
xor
add
xor
or
sub
and
addl
addl
sbb
mov
shrd
shr
cmpl
movl
mov
movl
mov
jmp
mov
mov
jae
push
push
push
push
pushl
call
addl
orl
mov
add
mov
add
mov
sub
mov
mov
mov
sub
sub
xor
movzwl
sbb
mov
neg
xor
sub
or
mov
mov
cmpl
mov
mov
jmp
movl
mov
jne
call
dec
addl
xor
sub
inc
andl
mov
mov
adc
shl
cmpl
mov
movl
movl
jmp
mov
movzbl
jle
push
push
call
mov
adc
mov
adc
xor
inc
xor
or
or
notl
add
movl
mov
cmpl
mov
mov
jmp
mov
jge
pushl
push
pushl
pushl
call
andl
or
add
xor
or
shrd
xor
orl
shr
xorl
mov
and
mov
xor
or
or
cmpl
not
mov
mov
movzwl
jmp
mov
mov
jge
push
pushl
call
movzwl
xor
movzwl
add
mov
or
mov
sub
or
addl
xor
mov
mov
and
mov
mov
mov
mov
inc
mov
xor
mov
mov
mov
mov
cmpl
mov
movl
jmp
movl
movl
jle
pushl
push
pushl
pushl
call
not
andl
adc
sub
xor
shl
orl
xor
and
shld
sub
shl
inc
mov
orl
xor
addl
xor
movl
movl
movl
movl
movl
cmp
movl
jne
movl
cmp
je
cmpl
movl
movl
not
jmp
mov
movzwl
jle
push
push
push
call
sub
adc
or
sbb
adcl
sbbl
xor
adc
mov
mov
mov
and
mov
xor
shld
sbbl
shl
xor
xor
cmp
jne
movl
cmp
movl
je
cmpl
mov
movl
jmp
mov
not
jbe
push
pushl
push
pushl
call
xor
mov
add
adc
and
adc
not
mov
subl
mov
cmpl
mov
movl
mov
jmp
movl
mov
jg
pushl
pushl
pushl
call
subl
mov
add
add
add
xor
shl
mov
xorl
xor
shr
adcl
or
mov
mov
movzwl
or
mov
mov
and
mov
mov
cmpl
movl
movl
movl
jmp
movl
ja
pushl
push
call
and
orl
subl
subl
sbbl
orl
and
cmpl
movl
movl
movl
movl
jmp
movl
je
push
call
sbbl
movl
orl
andl
adcl
sbbl
xor
subl
cmpl
movl
movl
movl
jmp
movl
not
jb
pushl
pushl
call
xorl
sbb
add
addl
subl
movl
and
push
pop
sbbl
sub
mov
add
mov
lea
mov
mov
mov
sub
and
mov
xor
or
xor
mov
xorl
xor
xorl
shr
subl
shl
or
add
mov
cmpl
movl
mov
jmp
mov
mov
jae
push
call
add
sbb
or
movl
and
movl
add
mov
mov
andl
xor
movl
shr
shl
adcl
or
push
orl
lea
adcl
push
adcl
lea
push
call
cmpl
mov
movl
jmp
movzbl
jbe
push
push
pushl
pushl
pushl
pushl
call
orl
addl
movzwl
sub
mov
movzwl
sub
mov
sub
movl
sub
mov
mov
subl
xor
subl
shr
mov
xor
shl
or
cmpl
mov
mov
mov
jmp
movl
mov
jne
call
add
sub
add
adcl
mov
or
movzwl
or
push
lea
sub
push
or
mov
mov
sbb
shrd
sbb
shr
xor
add
xor
or
sub
imul
mov
notl
mov
xor
addl
xor
or
xorl
lea
adcl
push
adcl
shl
subl
call
mov
mov
xor
shl
cmpl
mov
movl
mov
jmp
movl
jne
push
push
call
xorl
xorl
add
orl
and
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
push
call
mov
mov
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
add
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
mov
rol
mov
xor
mov
cmp
je
movl
mov
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
shld
shl
xor
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
or
mov
sub
mov
adcl
or
movl
mov
jne
sub
mov
adcl
mul
ret
push
mul
cmpl
movzbl
movl
push
pop
jmp
mov
mov
je
push
push
pushl
push
push
push
pushl
call
mov
sbb
mov
not
movzwl
adc
mov
mov
add
mov
xorl
sbb
mov
adc
mov
xorl
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
sub
and
sub
push
movl
movl
movl
movl
mov
mov
imul
mov
imul
xor
div
mov
mov
push
shr
and
xor
mov
sub
mov
mov
mov
and
imul
mov
imul
add
mov
sub
mov
mov
add
xor
pop
div
mov
push
and
sub
xor
add
mov
mov
and
imul
mov
imul
or
xor
pop
sub
mov
mov
or
mov
or
mov
add
or
mov
or
lea
cmp
jbe
pop
leave
ret
push
mov
and
sub
push
push
push
mov
pushl
call
test
jg
movl
movl
movl
push
dec
movl
mov
xor
mov
andl
push
notl
push
orl
push
call
sbbl
push
andl
push
and
and
push
subl
push
andl
call
cmpl
mov
movzwl
notl
movl
jmp
movl
jbe
push
push
pushl
call
neg
subl
dec
sbb
subl
xor
or
mov
sub
or
mov
mov
xor
or
cmpl
movl
not
jmp
mov
jg
push
push
push
push
call
sbbl
xor
movzwl
and
orl
xor
mov
xor
or
mov
movl
movl
or
movl
sbb
movl
mov
xor
or
sub
add
movl
cmpl
mov
mov
jmp
mov
movl
jg
push
push
pushl
call
dec
xor
inc
adc
movl
xor
add
xor
mov
adcl
movl
cmpl
mov
movl
jmp
mov
mov
jg
push
push
call
addl
mov
sbb
sbbl
mov
mov
sub
xor
xor
or
xor
movl
or
sub
sbb
mov
cmpl
mov
movl
notl
jmp
mov
movzbl
jg
pushl
call
xor
movzbl
sub
mov
mov
sub
add
adc
xor
mov
mov
mov
andl
or
or
mov
or
mov
sub
mov
mov
sbb
or
mov
xor
subl
xor
addl
and
adcl
and
cmp
movl
jne
cmp
jne
movl
decl
movl
xor
movl
adc
movl
xor
or
mov
sub
xor
movl
mov
and
mov
sub
adc
mov
orl
imul
subl
and
notl
imul
mov
xorl
pushl
or
imul
adc
xor
mov
movl
div
mov
xor
cmpl
movl
notl
mov
jmp
movl
je
pushl
pushl
push
pushl
push
call
sbb
adcl
or
mov
sbb
mov
add
cmpl
mov
mov
not
jmp
mov
jb
pushl
push
call
neg
mov
mov
xor
sbb
sub
sbb
cmpl
movzwl
mov
movl
jmp
movl
jl
pushl
call
sbb
or
addl
and
sub
xor
add
mov
sub
dec
mov
sbbl
sub
addl
or
xor
adcl
pushl
pushl
addl
call
addl
pushl
call
movl
cmpl
mov
movl
not
jmp
mov
mov
jge
pushl
call
and
add
adc
xor
movl
adc
movl
xorl
movl
movl
movl
mov
mov
xor
mov
mov
subl
add
movzwl
mov
adc
add
mov
add
adc
and
xorl
mov
orl
and
mov
movl
movl
subl
movl
orl
movl
dec
cmp
jne
and
movl
mov
xorl
mov
subl
movl
mov
subl
call
andl
lea
mov
cmpl
movl
movzbl
jmp
movl
jb
push
call
adc
sub
and
andl
mov
xor
add
sub
imul
xor
sub
lea
mov
sub
mov
sbb
mov
add
mov
mov
decl
xor
shl
and
shr
movl
or
mov
or
mov
mov
cmpl
movl
mov
movl
jmp
mov
movl
ja
pushl
push
push
pushl
call
and
xorl
add
sub
addl
addl
cmpl
not
mov
jmp
not
jae
push
call
adc
subl
and
xor
add
adc
and
mov
cmpl
not
mov
jmp
movl
movl
jbe
push
pushl
call
or
andl
and
sub
adc
mov
and
mov
mov
mov
shrd
shr
and
mov
not
mov
movl
xor
xor
andl
or
mov
sbb
mov
mov
orl
push
addl
pushl
subl
lea
andl
push
adcl
shl
orl
call
addl
lea
addl
push
mov
mov
sbbl
lea
orl
push
mov
orl
lea
adcl
mov
adcl
mov
mov
push
call
subl
push
andl
push
pushl
xorl
call
andl
mov
or
mov
and
mov
cmpl
mov
movl
mov
jmp
mov
jg
push
pushl
push
push
push
call
sbb
xor
or
mov
adc
xor
adc
mov
shr
not
shl
or
sub
mov
or
xor
mov
notl
lea
xor
mov
lea
movzbl
or
mov
cmpl
mov
movl
movl
mov
jmp
movl
movl
je
push
call
or
add
mov
or
mov
xor
inc
add
not
mov
mov
and
mov
cmpl
mov
mov
mov
jmp
movl
mov
jne
push
call
or
sbb
addl
add
orl
mov
mov
sub
sub
movzwl
sbb
mov
and
sub
cmpl
movzbl
mov
movl
jmp
movl
jae
pushl
call
add
add
movzbl
add
add
movl
add
lea
andl
xor
cmpl
mov
mov
movl
jmp
mov
jg
push
pushl
pushl
push
push
call
or
adc
xor
mov
adc
mov
movl
movl
movl
cmpl
movl
not
jmp
movl
not
jle
push
call
subl
not
orl
and
and
mov
or
mov
movl
mov
mov
add
mov
not
mov
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
xor
shld
shl
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
shr
or
or
mov
mov
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
xor
inc
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
movl
movl
cmpl
movl
mov
movl
jmp
movl
jbe
push
pushl
push
pushl
push
call
adcl
sbb
sub
adc
mov
xor
mov
mov
mov
sub
xor
movl
cmpl
mov
movl
movl
jmp
mov
mov
jle
push
push
pushl
pushl
call
adcl
notl
dec
add
subl
sbb
not
sub
movl
mov
subl
mov
xor
xor
mov
xor
and
adc
mov
sub
xor
or
and
cmpl
mov
mov
not
jmp
mov
jl
push
push
call
inc
xorl
and
sub
sub
add
mov
add
xor
mov
or
movl
movl
mov
sbb
mov
add
xor
sub
adcl
mov
or
imul
adc
xor
mov
or
div
subl
sub
and
mov
movl
sub
movl
movl
mov
mov
adc
movl
cmpl
movl
mov
movzbl
jmp
mov
movzbl
jg
pushl
push
push
push
call
or
xor
or
or
mov
sub
add
inc
movl
mov
sbb
mov
movl
movl
mov
xor
mov
imul
adc
add
xorl
and
adc
sub
cmpl
mov
movl
mov
mov
jmp
mov
je
pushl
push
push
call
add
adc
neg
and
not
mov
sub
or
mov
mov
cmpl
mov
movl
mov
movl
jmp
movl
jne
push
pushl
push
call
inc
or
dec
sub
adc
adc
or
add
sub
add
mov
xor
adcl
div
not
mov
sub
and
mov
add
addl
mov
cmpl
mov
mov
mov
jmp
mov
mov
jle
push
push
call
add
add
sbbl
subl
xorl
movl
movl
dec
movl
cmpl
movzbl
mov
jmp
mov
jne
pushl
pushl
pushl
push
call
sbb
orl
movzwl
adc
add
mov
mov
add
mov
xor
add
mov
andl
xor
movl
div
add
and
mov
or
cmpl
movl
mov
jmp
movl
movl
jg
push
push
push
call
mov
sbb
mov
add
mov
movzbl
sub
subl
decl
adc
cmpl
not
mov
jmp
mov
movl
jae
push
push
push
push
call
xor
sbbl
mov
sbb
mov
inc
mov
mov
sub
sbbl
cmpl
mov
movl
mov
jmp
mov
movl
jg
pushl
call
mov
adc
mov
mov
adc
mov
mov
xor
xor
or
mov
sub
sub
adcl
mov
and
movl
movl
movl
and
movl
mov
sub
mov
orl
xor
sbb
xor
push
xor
pop
orl
div
mov
andl
xor
div
mov
or
sub
xor
mov
xor
movl
inc
mov
movzwl
sbb
mov
xor
div
imul
adcl
xor
xor
sub
imul
xor
dec
mov
adc
movl
cmpl
movzwl
movl
mov
jmp
movl
mov
jg
pushl
push
pushl
pushl
pushl
pushl
push
push
pushl
push
push
call
adc
xor
mov
adc
mov
mov
xor
mov
xor
or
xor
mov
movzwl
sub
or
or
movl
movl
cmpl
mov
movl
movzwl
jmp
mov
movl
ja
pushl
call
xor
dec
adc
movzbl
sbb
xorl
mov
and
mov
xor
subl
div
mov
sub
mov
orl
imul
xor
add
mov
or
add
xor
sbb
mov
sub
movzbl
or
mov
mov
movl
cmpl
notl
mov
mov
mov
jmp
notl
mov
jg
pushl
call
notl
adc
adc
sbb
movl
mov
or
and
notl
and
or
xor
cmpl
mov
mov
movl
jmp
movzwl
mov
jg
pushl
push
pushl
call
movzbl
sbb
add
negl
sub
dec
mov
movl
movl
movl
cmpl
movl
movl
movl
mov
jmp
mov
jb
pushl
push
push
call
mov
and
mov
neg
xor
andl
and
movl
mov
xor
and
add
xor
add
or
or
cmpl
notl
movl
mov
movl
jmp
movl
jle
push
pushl
push
push
pushl
pushl
pushl
push
call
adc
mov
add
or
sub
neg
sbb
sub
mov
inc
movl
cmpl
mov
movl
mov
jmp
mov
mov
jne
push
pushl
call
decl
decl
sbbl
and
movl
movl
movl
xor
mov
shr
xorl
sub
cmpl
movl
mov
mov
mov
jmp
mov
movl
jbe
pushl
pushl
call
add
xorl
mov
sbb
and
adc
or
xor
mov
lea
sbbl
push
adcl
call
addl
mov
adc
or
cmpl
mov
mov
jmp
movl
movl
jbe
push
pushl
call
sub
mov
xor
or
sub
imul
negl
sbbl
and
mov
orl
or
xor
and
lea
adc
mov
movl
movzwl
xor
movl
movl
xor
xor
or
movl
movl
and
movl
cmpl
mov
not
movl
movl
jmp
mov
notl
jg
push
call
sbb
orl
xorl
add
xor
xorl
xor
xor
xor
mov
sub
or
movl
sbbl
movl
mov
mov
mov
sub
xor
mov
sub
and
cmpl
movzbl
movl
jmp
movl
movl
je
push
push
push
push
push
call
sub
or
notl
sub
xor
add
add
mov
sbb
sub
and
sub
or
mov
sbb
lea
mov
mov
add
mov
add
mov
mov
imul
sbbl
and
cmpl
mov
mov
mov
movzbl
jmp
notl
mov
jbe
pushl
pushl
pushl
push
pushl
pushl
call
xorl
add
movzbl
adc
not
or
imul
mov
lea
mov
addl
movl
movl
movl
movl
mov
sbb
mov
or
mov
movl
xor
andl
xor
sbbl
mov
call
cmpl
movl
movl
movzbl
movzwl
jmp
movl
movl
jb
call
sub
and
and
add
adc
subl
sub
sbbl
mov
mov
sub
mov
mov
adcl
xor
xor
mov
call
xorl
or
or
sub
mov
or
mov
andl
xor
xorl
xor
mov
call
mov
cmpl
movl
mov
movl
jmp
movl
jbe
call
or
xor
inc
or
andl
cmpl
notl
mov
jmp
mov
movl
je
push
pushl
call
mov
mov
and
sbb
not
mov
sub
sbb
or
and
mov
movl
mov
mov
xor
xorl
xor
addl
mov
mov
xor
mov
xor
or
mov
sub
mov
movl
mov
mov
movl
call
cmpl
mov
movl
mov
jmp
movl
movl
ja
push
push
call
and
addl
adcl
movzbl
xor
or
mov
adcl
or
mov
or
subl
push
push
subl
push
andl
push
orl
call
movzbl
mov
cmp
movl
jne
mov
sub
mov
mov
xorl
mov
subl
xor
xorl
xor
mov
call
adc
mov
add
mov
xor
mov
mov
incl
xor
addl
xor
xorl
mov
xorl
call
or
and
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
mov
sub
mov
xor
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
add
mov
sub
xor
push
pop
div
mov
xor
add
mov
xor
mov
xor
div
or
mov
xor
mov
sub
mov
mov
sub
mov
xor
mov
div
mov
xor
div
mov
sub
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
mov
or
mov
xor
div
mov
xor
div
mov
lea
mov
mov
sub
mov
xor
mov
div
mov
imul
add
xor
mov
add
mov
and
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
imul
imul
mov
imul
mov
sub
add
mov
and
mov
sub
imul
mov
mov
or
sub
xor
mov
div
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
movl
movl
notl
jmp
movl
mov
jle
pushl
push
push
pushl
call
negl
addl
orl
adc
sbbl
sbbl
not
push
push
not
mov
or
movl
jne
cmpl
movl
mov
mov
jmp
mov
jl
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
sbb
and
or
xor
xor
mov
sub
add
add
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
movl
cmpl
je
add
mov
mov
pop
pop
movl
pop
leave
ret
movl
cmp
movl
jae
movl
cmp
movl
jae
shld
shl
ret
xor
mov
addl
xor
and
shl
ret
xor
xor
ret
