push
mov
sub
sbb
mov
mov
mov
add
mov
decl
mov
sbbl
push
push
sub
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
xor
push
mov
mov
sub
imul
mov
adcl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
or
jmp
test
push
movsb
jb
jl
pop
or
pmulhw
jle
mov
jle
into
xlat
cmp
pop
add
push
dec
or
xor
int3
and
sbb
inc
fs
out
mov
es
test
call
add
dec
stos
push
sub
sarb
mov
stos
push
rcl
test
pushf
mov
dec
out
dec
call
mov
and
jnp
ret
xchg
sub
loopne
cld
ljmp
sub
add
sbb
outsl
insl
add
cmp
jno
ds
or
adc
jge
inc
dec
aaa
adc
ja
sbb
ds
hlt
leave
mov
sbb
mov
cmc
stos
pop
mov
xchg
iret
rcrl
pop
in
mov
lea
iret
cmpsb
sbb
addr16
sub
fwait
clc
jmp
in
sub
daa
mov
bound
loop
push
pop
mov
adc
shll
inc
xchg
jne
jp
push
push
jge
xor
aam
test
data16
jae
rol
int3
push
mov
dec
mov
adc
pop
sti
xchg
xchg
shrb
and
mov
outsb
push
dec
sub
aam
mov
push
sahf
sbb
stos
push
mov
mov
inc
movb
out
hlt
cmpsb
mov
ret
popa
int3
leave
daa
lcall
dec
clc
inc
cld
jno,pt
aas
sub
and
pop
mov
gs
pop
lods
test
push
mov
imul
ss
cmp
clc
mov
enter
fldcw
add
add
jg
inc
add
push
add
mov
adc
mov
orl
mov
xor
xor
neg
add
mov
movl
lea
sbb
mov
mov
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
xor
add
mov
decl
mov
mov
mov
sbbl
mov
adcl
mov
xorl
movzwl
add
mov
jmp
fisubl
addb
lods
gs
aam
dec
xchg
fsubrl
mov
jle
aad
mov
mov
mov
aas
or
inc
shrl
int3
fnsave
ds
dec
sahf
iret
sbb
in
mov
pop
jb
cmp
xor
mov
sub
xchg
cld
mov
push
js
aas
xchg
dec
xchg
test
xor
jmp
out
xor
mov
xchg
dec
mov
and
pop
push
test
adc
mov
int3
push
dec
sub
push
sarb
fsub
mov
or
or
push
sbb
shrl
mov
inc
xchg
dec
mov
shl
int
sbb
xor
dec
xchg
pop
jno
push
aaa
ja
xor
or
iret
shll
bound
mov
mov
dec
nop
popa
std
pop
sub
mov
sbb
push
ficoms
xor
adc
icebp
out
sbb
mov
jl
jbe
daa
mov
fimuls
fsts
xchg
inc
ljmp
sahf
dec
jmp
sbb
cli
repz
mov
scas
lahf
ror
popa
movsb
fsubs
inc
lret
lock
mov
loopne
insb
dec
mov
fcmovnb
xchg
xor
nop
or
sbb
and
xchg
sub
ss
and
cmpb
into
push
mov
mov
stos
notb
and
ret
adc
mov
inc
add
cld
call
les
in
enter
inc
fildl
sub
fstpt
lret
test
mov
leave
loopne
inc
jge
xchg
xchg
ljmp
lret
push
inc
sti
dec
das
lahf
sbb
leave
imul
lds
lds
mov
fcmovnb
sbb
cltd
loopne
adc
mov
mov
and
mov
xor
addl
add
movl
cmp
movl
jne
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
or
mov
sub
and
mov
mov
addl
xor
orl
add
movl
cmp
jmp
cmp
sub
mov
out
test
in
jns
jle
jg
jle
loop
push
mov
add
xor
fsubp
jne
cld
outsl
fsubp
mov
adc
rcll
mov
out
jb
iret
mov
sti
pop
mov
jp
cmc
movsb
add
in
je
xchg
or
mov
stc
jl
mov
jae
jo
xchg
popf
int
leave
lahf
pop
and
push
jns
decl
mov
gs
inc
mov
das
das
xchg
and
jg
fisttpll
mov
pop
xchg
mov
fadds
ljmp
push
sub
adc
xor
mov
outsl
dec
pop
cmpsl
mov
lcall
sub
push
xor
mov
sbb
adc
repnz
fcmovbe
jb
xchg
nop
cmp
es
and
lods
movsl
xor
pusha
in
loop
test
push
xchg
dec
xchg
push
int
push
sub
sarl
xchg
sti
add
mov
cltd
movsb
subb
leave
mov
push
ljmp
loop
in
jl
pop
jnp
cmp
mov
cwtl
fnstsw
cmp
sbb
aaa
lods
xchg
gs
rol
test
sahf
fcmovnu
push
xor
lds
mov
gs
sbb
sahf
out
lods
test
pop
pop
cwtl
adc
or
sub
jecxz
pop
sub
popf
cmpb
in
sub
sbb
pop
jmp
jae
jl
push
fistps
mov
das
iret
cmp
movsb
pop
outsb
mov
and
fisttpl
fdivrs
pop
jle
test
add
add
add
or
jmp
or
popa
sbb
shl
sbb
jle
jg
jle
xchg
push
dec
out
push
in
inc
mov
inc
jne
and
push
push
pusha
aad
lock
sti
and
dec
arpl
or
ret
mov
dec
cmpsb
lods
sahf
add
or
jl
cmp
ret
xchg
xor
xchg
cld
inc
ljmp
mov
xor
xor
fwait
aaa
dec
outsb
nop
lea
cmp
cmp
insb
test
inc
sub
fsubr
pop
mov
mov
mov
les
scas
hlt
outsb
int
aad
push
dec
sarl
xchg
push
mov
push
cld
xchg
push
movsl
cmc
test
cmc
out
popf
scas
cld
add
ss
push
fstps
cld
je
mov
push
dec
push
out
shll
xchg
notl
cmp
sbb
movsl
stos
iret
mov
xchg
jecxz
outsl
ret
cmp
xchg
inc
int3
popa
pop
push
sub
fdivs
push
cmp
pushf
push
dec
or
push
popa
in
imul
add
adcl
lds
and
inc
vmovd
in
sub
or
pop
movsl
cwtl
pusha
mov
pushf
pop
inc
popf
popl
dec
movsl
push
jo
jno
jo
fldenv
xorb
shrl
dec
sbbb
add
cmc
jnp
push
pop
out
xor
mov
pop
mov
pop
sub
xor
repz
ds
cltd
pop
xor
push
test
lods
xorl
addr16
repz
add
or
fldt
add
pusha
stos
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
xor
add
mov
mov
mov
xor
mov
sub
add
jmp
icebp
jmp
imul
sbb
jle
jg
jle
xchg
push
call
xchg
sti
xchg
js
cmp
sub
mov
sbb
xchg
stc
add
ret
clc
mov
pop
mov
mov
pop
cltd
mov
lcall
leave
scas
sub
stos
insb
inc
pop
call
mov
cmp
mov
cmp
bound
mov
dec
mov
and
popa
xlat
movsb
jmp
mov
xor
and
ret
inc
out
cmp
push
sbb
std
ljmp
lods
aad
cmpl
insl
jl
pop
mov
ja
aaa
add
fs
sub
add
scas
jecxz
out
lret
in
cmc
rolb
jae
push
jns
popa
loop
cmc
inc
in
mov
cmc
jp
je
repnz
pop
fistpll
leave
push
nop
xor
in
subb
inc
and
xchg
aas
mov
push
in
shrb
mov
inc
cmp
cmp
push
dec
andl
frstor
mov
stos
sub
sbb
shrb
and
pop
arpl
sbb
push
mov
jo
scas
dec
cmpsl
cmp
dec
ret
or
lcall
sub
lock
and
dec
lock
xor
sahf
lret
and
mov
push
or
mov
push
in
or
call
inc
xchg
int3
xchg
mov
sbb
andb
jp
xor
add
imul
repz
mov
add
push
lret
insl
sbb
mov
sahf
ljmp
dec
mov
sub
jge
jbe
std
les
fs
lcall
add
cld
movzwl
add
jmp
push
mov
test
rcrb
jle
jg
jle
insl
jmp
icebp
aaa
push
cmp
push
dec
enter
sbb
insb
iret
dec
cs
cmc
idivb
pusha
data16
or
jbe
and
push
push
cmp
adc
dec
stc
xchg
bound
mov
aaa
ds
and
fstpt
adc
xchg
xchg
aam
std
and
xchg
or
int
pop
jnp
addl
mov
pop
sbbl
sbb
sahf
pop
mov
mov
lahf
dec
cmp
and
and
stos
jnp
cwtl
xchg
push
xchg
mov
pop
inc
pop
out
mov
ret
dec
sbb
aam
xchg
and
and
adc
sbb
mov
mov
aam
inc
inc
pop
push
mov
pop
cmp
enter
fstps
xor
adc
mov
or
in
mov
stos
mov
out
cmp
push
daa
cwtl
dec
dec
push
fidivs
mov
xor
xor
push
mov
and
cwtl
jno
ret
mov
aas
mov
add
bound
xchg
add
cmp
mov
mov
mov
movb
jecxz
sbb
lods
cltd
adc
inc
adc
xlat
jne
and
add
lret
adc
lret
cmp
xchg
xor
sub
or
mov
adc
fisubs
mov
pop
sbb
jnp
stos
jno
shll
loopne
and
xor
cmpsl
sub
mov
push
in
pushf
leave
dec
xchg
mov
test
jmp
sarl
cltd
xchg
xchg
sub
cli
test
dec
call
dec
or
movb
xor
sub
jmp
xchg
sahf
loopne
icebp
jo
popa
mov
cmp
cmp
out
add
mov
jle
popa
iret
push
sub
nop
mov
add
mov
pop
pop
add
mov
push
arpl
jg
subl
sti
and
xchg
xchg
stos
inc
stc
sbb
inc
jmp
sar
les
cmc
fdiv
sub
je
mov
or
sarl
add
pop
cmpb
add
add
in
lea
pop
fs
mov
dec
dec
lea
ret
xchg
test
jg
ds
mov
fadd
inc
push
js
lahf
mov
fstpl
mov
cs
movsb
mov
outsb
mov
xchg
cld
cld
mov
or
jecxz
int3
or
mov
add
in
out
jecxz
cmp
pop
xor
jbe
mov
das
popw
xchg
pushl
pop
bound
lea
add
nop
jg
les
ds
movsl
call
daa
push
rorl
lods
sbb
xor
jne
sbb
movsb
pop
stc
shll
stos
cmpsl
enter
lahf
fcomip
mov
arpl
xor
push
adc
mov
cmpsb
rcll
adc
pusha
aaa
out
fisttpl
pop
addr16
int
xor
addr16
cmp
vcomisd
adc
add
and
in
hlt
adc
cmpsl
mov
stos
leave
xor
lods
fisttpll
jecxz
jecxz
rclb
push
or
pop
fdivrl
dec
insl
cs
jmp
mov
xor
cmp
cmp
imul
das
cmc
sti
call
sub
push
inc
jge
mov
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
jmp
pop
sbb
cmp
push
popa
movsb
insl
std
and
add
mov
jle
sti
xor
leave
out
andl
sti
in
mov
testl
push
test
insb
fsubl
jecxz
lods
sbb
inc
ret
jecxz
es
push
sub
pusha
or
adc
xchg
clc
mov
mov
jae
insl
clc
out
push
mov
cmc
lea
cmpsl
cld
adc
xchg
push
loope
sub
ss
mov
push
andl
bound
cmp
pushf
in
inc
cmpb
add
mov
lahf
jp
icebp
mov
loop
cmp
push
jo
pusha
xor
stos
push
ss
es
test
pop
shlb
movsb
mov
test
leave
int
lods
and
js
dec
mov
xorl
in
xchg
nop
insl
addr16
lahf
push
jns
xchg
popf
aas
imul
mov
and
insl
sti
sahf
lock
pop
pop
andl
shrl
fistl
mov
cmp
mov
call
push
sbb
xlat
xchg
lods
lcall
jae
inc
imul
testl
out
subl
test
sub
jbe
jp
out
sbb
pop
mov
mov
jmp
jbe
xchg
sbb
adc
mov
popf
fsubrs
je
dec
xchg
in
cmc
shll
fisubl
dec
adcb
adc
xor
sub
enter
ffree
xchg
mov
adc
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
jmp
je
int3
xchg
int
jne
jae
push
orl
jg
jle
lret
mov
adc
jbe
loopne
xor
dec
loop
xor
or
xor
mov
and
mov
inc
ja
leave
sub
lods
lds
idivl
and
xchg
sub
cmp
mov
in
xor
aaa
and
push
push
in
fs
scas
pop
lcall
pop
sub
pop
stos
dec
push
sub
shlb
xlat
ljmp
and
cmpsb
lds
outsb
mov
ja
mov
imul
mov
adcb
xchg
dec
imul
jl
shll
rcrb
sbb
clc
rcll
jbe
cwtl
mov
ja
js
mov
xor
js
addr16
in
out
popa
pop
shll
add
es
clc
scas
push
sub
pop
pop
mov
hlt
mov
jns
push
into
pop
cltd
jnp
mov
mov
dec
jl
lods
push
shlb
cmp
rcr
outsl
xor
push
movsl
cs
cmpsb
mov
into
mov
stc
das
pop
insb
dec
adc
mov
cmp
add
rcrl
push
shr
bound
cmc
jge
pushf
cmp
mov
idivb
mov
mov
mov
in
fisubrs
fimuls
push
jmp
jle
iret
dec
cltd
mov
mov
pop
data16
out
scas
sarl
cmc
fcomps
test
jns
icebp
faddl
xor
mov
jns
push
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
jmp
xor
inc
pop
pop
jge
arpl
outsb
dec
or
in
or
jle
or
xchg
jle
xor
dec
leave
cld
popa
inc
adc
pop
subl
mov
mov
mov
add
mov
mov
cld
dec
scas
jno
mov
pop
repz
gs
add
out
mov
pop
or
add
sub
and
pop
stc
outsl
popf
jge
adc
stc
fcomps
sbb
repz
push
jmp
add
aaa
jae
mov
in
add
inc
inc
mov
fimull
mov
dec
mov
xchg
leave
fwait
push
xchg
xorb
inc
dec
or
mov
es
cmp
aad
enter
mov
je
sbb
cmpsb
arpl
or
jb
jmp
mov
sbb
jns
mov
enter
mov
xchg
popf
repz
testl
push
jnp
or
aad
loop
dec
inc
inc
loop
arpl
aam
repz
test
lea
jp
pop
nop
enter
test
xchg
inc
xchg
cli
clc
jmp
shrl
cli
cwtl
push
pop
icebp
fs
les
rol
cmpsb
orb
and
and
xchg
pcmpeqd
adc
xor
jbe
hlt
inc
lock
sub
lcall
xor
xor
popf
fdiv
outsb
pop
cmp
mov
adc
xchg
loop
addl
les
test
lret
out
xchg
mov
incl
dec
ljmp
outsl
push
data16
lea
or
ljmp
dec
loopne
inc
loopne
dec
clc
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
jmp
insb
jo
arpl
jge
jno
adc
mov
push
in
and
jle
mov
jle
ret
hlt
hlt
pop
mov
mov
or
xlat
aaa
sub
sub
les
adc
mov
mov
aas
sub
adc
stos
cmp
cmp
std
and
adc
cmp
mov
loop
mov
xchg
test
pop
push
iret
loope
sub
add
adc
insb
sbb
or
or
cmp
hlt
icebp
jne
fadd
ret
je
sbb
out
sbb
insl
in
add
sti
lock
adc
adc
add
jb
mov
stos
mov
scas
cmpsb
lods
cmp
fstpt
pushf
sti
mov
lcall
stc
push
lds
jb
jae
sub
xlat
cmc
mov
pusha
hlt
imul
mov
out
sub
aaa
xchg
aad
les
xchg
daa
js
cli
lea
loope
das
cmpsb
or
shll
cmpsb
out
rcr
lods
add
pop
rcl
movsb
out
or
sub
rorb
inc
rorl
insb
lods
xor
cmp
jmp
scas
daa
out
jnp
fdivl
xor
mov
mov
imull
stos
or
dec
or
inc
inc
push
clc
mov
lret
or
test
int
daa
mov
push
cmp
les
ret
repnz
fstpl
pushf
cmp
rclb
aad
ljmp
in
scas
cmp
mov
push
jl
stos
cmp
sub
add
pop
mov
cmp
fsubl
scas
or
and
add
xorl
jmp
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
jmp
sbb
jge
fidivrl
in
add
jle
push
jg
jle
ss
add
mov
scas
adc
xor
jmp
shll
jl
test
push
js
sbb
rcrb
hlt
xor
and
shl
mov
icebp
movsb
jne
outsl
pop
pop
or
and
dec
xor
in
mov
mov
mov
mov
lcall
fs
sbb
popf
rcr
cs
fisubl
pop
adc
pop
cli
outsb
ss
cmp
push
sbb
xchg
add
pop
or
push
adc
enter
mov
outsb
dec
dec
mov
cmp
pop
into
ret
stc
mov
dec
sub
mov
jne
inc
in
movl
test
add
in
movb
push
push
xchg
cmp
push
jae
mov
jbe
push
mov
or
int3
std
ret
flds
outsb
sbb
jbe
jne
jecxz
test
xor
imul
xchg
fs
idiv
fcomps
sbb
int
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
jmp
xorl
push
sbb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
add
movl
mov
push
mov
or
mov
xor
mov
push
add
mov
sbbl
jmp
pop
imul
fwait
int3
mov
jae
jle
push
jg
jle
add
iret
rcll
cmpsl
nop
cmp
dec
mov
dec
dec
jbe
stc
arpl
lods
mov
out
push
cmp
jbe
test
jecxz
dec
popa
js
loope
xor
rol
aad
cmpb
adcb
jbe
mov
sub
jbe
pop
cmp
nop
push
pop
ficomps
or
pop
repnz
jbe
adc
popa
or
dec
jp
sbb
out
inc
bound
mov
rol
sbb
cmp
sub
mov
stos
mov
out
addr16
jno
push
mov
test
mov
cld
or
test
xchg
or
inc
mov
add
xor
popf
pop
pop
sbb
pop
cld
rorl
mov
push
mov
and
js
test
lcall
movsb
mov
sbb
divb
adc
mov
test
or
jne
insb
jb
mov
sub
rclb
jbe
or
shll
je
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
mov
mov
xor
mov
xorl
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
xor
add
mov
imul
jmp
push
nop
outsb
stos
jae
push
jo
sub
lods
mov
xchg
adc
jle
push
jg
jle
ds
aaa
arpl
addb
ret
mov
fcomi
lock
jae
jo
repnz
mov
mov
mov
cmpsb
aam
push
push
in
or
mov
cmpsl
stos
jne
cmp
mov
das
mov
icebp
xor
push
fistps
lds
sub
cwtl
fstpt
pop
and
sbb
sbb
scas
dec
and
cmp
in
fldl
mov
pop
inc
or
sahf
mov
inc
aaa
push
jae
cmp
sbb
stos
icebp
sbb
test
adcb
cli
jge
xor
push
out
inc
mov
test
std
in
jbe
int3
push
mov
dec
mov
sub
adc
xchg
loop
xor
dec
jecxz
jno
mov
arpl
outsl
outsb
cwtl
aad
mov
fadds
cmp
add
cmc
repnz
out
dec
cwtl
push
xchg
subb
sbb
test
push
or
mov
jae
mov
out
adc
mov
fimuls
test
or
lock
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
sub
and
mov
jmp
inc
dec
fwait
imul
add
adc
jle
jns
jle
add
xor
xchg
adc
dec
mov
scas
add
sbb
ret
mov
insb
mov
mov
or
inc
sub
push
mov
je
icebp
arpl
fsubrl
mov
xchg
ret
aas
sub
cmpsb
and
icebp
xor
decl
daa
cld
pop
call
pop
add
mov
mov
inc
cmpsl
inc
aad
adc
rclb
bnd
outsb
aaa
xchg
test
or
pusha
pusha
mov
dec
insb
xchg
sbb
lcall
mov
icebp
lret
dec
pusha
lahf
aaa
add
or
cs
fildl
out
push
inc
cmp
mov
div
idiv
clc
aam
repz
mov
fdivl
fisttps
fwait
xchg
repz
mov
fs
xor
out
mov
and
jns
in
xlat
jl
je
pop
fadds
fwait
cmpb
push
fnstcw
cmp
ficoms
mov
sbb
scas
mov
bound
mov
add
lret
push
test
ja
jge
movsl
mov
sub
insb
gs
lahf
pusha
push
leave
imul
fstl
mov
inc
mov
repnz
or
test
roll
gs
mov
neg
pop
mov
fisttpll
sbb
test
jo
repnz
inc
out
dec
mov
jecxz
dec
mov
adc
out
xchg
mov
loop
add
std
mov
pop
mov
push
push
mov
nop
mov
fimuls
inc
inc
outsl
jp
jp
push
rcr
daa
xorb
cmpsl
into
xchg
lods
pop
push
testl
je
xor
mov
cld
mov
xchg
fildl
sbb
jnp
imul
stos
jl
int
xor
push
adc
lahf
add
mov
cs
mov
aaa
pop
or
and
or
insl
push
mov
xchg
imul
add
sbb
adc
ret
fisttps
lea
mov
ljmp
aad
mov
and
pop
int
pop
and
mov
xor
inc
call
jge
xor
mov
je
fistl
xchg
mov
or
push
lahf
xor
push
mov
cmp
scas
repz
jmp
enter
or
sbbb
lock
dec
mov
inc
dec
inc
in
add
int3
repnz
enter
lret
inc
cmp
mov
push
repz
lcall
nop
push
aad
imul
cli
add
fs
lahf
fs
inc
or
or
and
xchg
mov
xchg
jmp
cmp
jmp
xchg
mov
jg
adc
jl
sub
mov
repz
fistpll
and
sub
test
orl
push
cmp
and
je
les
jno
add
out
add
psrlq
mov
cld
sub
cwtl
jmp
sub
out
jecxz
sbb
gs
xchg
test
adc
lods
arpl
lock
outsb
dec
shlb
jmp
in
sub
popf
jb
lods
fs
xor
and
call
sahf
rclb
cmc
xchg
test
pop
jae
dec
adc
sbb
jae
inc
mov
cwtl
lds
stos
in
sub
sub
push
push
int3
cmp
mov
pop
bound
dec
xchg
inc
cmp
mov
and
or
cmp
inc
and
andl
add
mov
xor
mov
movzwl
mov
xor
mov
mov
sbb
mov
movb
lea
orl
mov
and
jmp
jo
inc
xchg
jo
jne
xchg
or
adc
push
jns
jle
out
xchg
pop
dec
imull
imul
xchg
out
cmp
xor
out
ret
stos
pop
je
sbb
cmp
loop
push
mov
arpl
addb
fxch
aaa
das
out
insl
movsl
out
xorl
pop
dec
and
test
adc
pop
lods
jl
mov
das
pop
adc
ss
xor
idiv
xor
popl
lret
mov
in
int3
es
jg
sbb
inc
inc
add
incl
imul
xchg
aam
loop
data16
addr16
dec
int3
int
mov
hlt
fwait
repnz
pop
push
addr16
adc
xor
scas
inc
mov
or
lock
cs
dec
aam
adc
arpl
ficomps
or
jle
ja
outsb
dec
stc
mov
add
inc
push
xchg
sub
decl
push
sbb
imul
jb
xchg
fsubp
and
sbb
sbb
mov
jo
or
fcompl
cwtl
push
xchg
pop
aaa
and
imul
jp
repz
mov
arpl
je
enter
loopne
pushw
dec
jmp
aas
push
sbb
icebp
inc
loop
cwtl
or
and
push
lods
stc
cli
inc
stos
aam
dec
xlat
xchg
daa
or
fimull
pop
mov
push
mov
jns
adc
in
xor
xor
jae
icebp
test
cmp
xor
mov
jns
data16
add
pop
out
in
rcr
dec
pop
xchg
cmpsb
fsub
push
pop
add
movsl
adc
call
add
enter
scas
cmp
mov
push
loope
pusha
push
mov
or
iret
jbe
jl
pop
push
pusha
jne
ror
orl
int
cltd
inc
push
out
add
lock
pop
enter
sbb
cli
or
and
pop
orb
in
cmp
pop
icebp
mov
push
fnstenv
mov
lock
imul
or
imul
inc
jnp
in
mov
dec
sub
mov
lahf
pushl
inc
stc
out
and
std
fdivl
repnz
mov
mov
lahf
dec
leave
cmpsb
addb
pop
mov
xchg
stc
enter
shll
sub
sub
jg
sbb
sub
cmp
test
pusha
mov
adc
jb
in
jg
add
sbb
dec
mov
popf
push
push
aam
push
sbb
add
mov
dec
sub
sti
or
mov
ja
pop
sbb
sub
bound
xor
sbb
jnp
ret
in
mov
push
lret
addr16
hlt
ret
idiv
mov
gs
dec
popf
or
mov
data16
in
inc
push
adc
outsb
outsb
outsb
dec
dec
dec
mov
add
push
icebp
sub
fisubrl
shl
inc
pop
jo
sbb
xchg
mov
fisttpll
add
xchg
pop
xor
adc
ds
lcall
xchg
sub
and
mov
clc
push
pop
pop
jle
inc
jae
lds
jecxz
cmp
mov
outsb
cwtl
jo
push
and
pusha
fmull
xor
pop
inc
jno
jno
push
fcomps
adc
test
loopne
xor
or
jo
iret
add
mov
dec
dec
jae
mov
stos
and
pop
sbb
imul
inc
testl
sbb
mov
mov
sbbl
xor
addl
sub
orl
mov
xor
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
movl
adc
mov
mov
push
adc
xor
incl
mov
subl
add
jmp
notl
mov
mov
movl
inc
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
xor
mov
jmp
sbbl
jae
out
xchg
push
int
push
arpl
jle
push
jns
jle
or
mov
orb
sbb
dec
sub
sub
fmul
push
jecxz
dec
ret
dec
sbb
aaa
scas
enter
fmuls
repnz
int3
add
hlt
cmpsb
and
rolb
mov
mov
orl
lods
jns
into
std
mov
and
sahf
test
orl
mov
push
inc
mov
inc
sub
pop
cwtl
lret
fldenv
insb
xor
xchg
inc
xor
in
cmp
lock
lea
mov
cmpsb
frstor
hlt
in
cwtl
jg
fmuls
xchg
test
out
ljmp
cmpsl
scas
xor
push
push
out
jmp
daa
movsb
test
sti
xchg
cltd
leave
mov
cmp
dec
or
aad
je
jae
ja
dec
push
or
push
insb
jl
and
popf
mov
inc
in
iret
inc
jmp
insb
pop
test
fs
xchg
in
rorb
adc
nop
frstor
sbb
movsb
xchg
leave
lcall
mov
in
lea
shrl
popf
cmp
mov
shll
ret
loope
push
call
push
inc
push
loop
lret
lods
mov
inc
lret
outsb
aaa
sarl
dec
mov
lods
lods
jmp
xor
addr16
jmpw
push
pop
sub
xor
das
and
push
repz
push
mov
ficoml
outsb
stos
sbb
fiaddl
sbb
and
inc
popa
adc
xchg
or
lock
test
nop
xlat
push
lahf
jno
out
inc
imul
lea
push
insl
inc
adc
in
lea
mov
lret
inc
add
lcall
inc
testl
xchg
mov
cmpsb
pop
add
jecxz
iret
mov
pusha
cs
loopne
push
ret
insb
cmpsl
faddl
xchg
pop
push
mov
aam
lods
cmp
ret
push
int
aam
mov
mov
jg
adc
mov
addr16
pop
mov
push
mov
ljmp
sbb
fildll
jmp
lock
jle
or
adc
daa
cld
or
cmp
cs
std
aad
pusha
das
lods
sbb
dec
loopne
test
fldcw
popa
push
or
xchg
sbb
xor
mov
push
mov
inc
ret
adcl
rcll
push
xchg
cmp
pop
and
add
adc
hlt
in
cld
sbb
repz
aad
test
sbb
xor
fdivl
lahf
adc
pop
in
dec
or
xorl
call
xchg
mov
test
sbb
inc
jns
sbb
lcall
imul
popa
stos
fisubs
cmp
sbb
pop
aad
stos
outsl
mov
inc
lcall
mov
xor
push
leave
orl
xor
ret
cmpsl
mov
or
lock
ds
pop
sahf
push
scas
popa
or
aas
mov
jecxz
xchg
and
mov
adc
popf
movsl
sub
sub
fwait
add
xlat
mov
sbb
mov
int3
insb
mov
mov
popa
adc
decl
testb
enter
cli
pop
loopne
xchg
aas
sldt
xor
mov
inc
scas
dec
clc
inc
enter
loope
add
jecxz
jo
pop
sub
mov
jno
arpl
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
jmp
mov
or
push
jge
inc
xchg
add
mov
jns
jle
std
sub
test
mov
lahf
movsb
rcrl
out
xchg
insb
push
testb
jnp
push
or
dec
lcall
cmp
rcrb
adc
addb
add
push
mov
stc
pop
andl
inc
sub
mov
fsub
xor
push
cmp
cld
jno
repz
clc
rcl
push
sbb
fisttpl
inc
sub
ja
lock
ljmp
cld
pop
jp
lret
or
jb
add
cmpb
cmc
out
lret
lods
mov
in
fs
mov
lret
lea
adcb
xchg
xor
into
in
jecxz
mov
xor
inc
and
xchg
imul
cs
and
jnp
pop
dec
push
push
xchg
insb
mov
lods
and
aaa
dec
pop
test
mov
fidivs
lea
roll
xor
mov
add
mov
fucomp
and
sahf
mov
jg
int3
sti
andb
outsl
fwait
in
into
jp
inc
push
fldcw
inc
negb
repnz
lahf
repnz
cwtl
push
pop
mov
mulb
cmp
pop
cmpsl
hlt
mov
ret
sub
imul
mov
stc
sarb
xchg
lahf
pop
cli
xchg
lahf
outsb
jnp
mov
cmc
mov
ret
frstor
in
pushf
sbbb
cmpsb
jo
lcall
xor
add
loop
mov
sti
lahf
lods
sbb
sbb
jns
adc
mov
xchg
or
aaa
mov
rcrb
into
ficoms
insb
add
ds
lahf
xor
and
aaa
testb
rcl
stc
mov
mov
cwtl
adc
sub
cmpsl
sub
hlt
cltd
add
cwtl
addb
push
loope
xchg
data16
pop
mov
adc
fldenv
mov
movsb
cmp
fxch
aad
lcall
sub
inc
push
xchg
pop
clc
cmp
push
icebp
das
cli
cmp
cmp
cld
les
jbe
rorl
stos
addr16
sbb
imul
in
and
mov
xchg
repz
pop
lock
jns
test
add
in
loop
pop
mov
dec
xchg
mov
pop
in
fisttps
stos
mov
mov
dec
bound
leave
cmp
ljmp
orb
stc
add
fwait
xchg
aaa
jae
xchg
adc
jecxz
hlt
cs
out
cmp
dec
mov
push
adc
push
shlb
inc
push
xor
out
enter
jmp
push
cmp
mov
push
out
and
xor
xchg
mov
int3
mov
xor
ljmp
lds
mov
mov
out
add
jae
xor
leave
rolb
pop
mov
cld
jl
sub
mov
sbb
notl
or
add
cmp
add
mov
push
sub
iret
xchg
and
inc
sti
dec
dec
inc
cmpsl
and
lock
xor
hlt
lock
loop
fnstcw
incl
push
pop
arpl
enter
stos
clc
fimuls
cmp
jne
loope
in
in
push
jmp
add
jecxz
popa
fs
mov
xchg
pop
xor
jmp
movsl
push
mov
add
pop
neg
sub
xchg
mov
sti
mov
mov
subl
mov
mov
addr16
roll
mov
mov
jmp
pop
ret
jge
insb
jae
test
add
jns
jle
xchg
arpl
push
sub
mov
out
inc
les
dec
or
and
mov
out
fsubrl
clc
dec
test
sbb
jg,pn
mov
rolb
fcmovu
sbb
shlb
cmp
pop
mov
mov
shrl
push
xchg
push
xchg
jmp
cmc
int
dec
push
stc
dec
lock
lea
popf
inc
dec
insl
cmpsl
cmpsb
mov
scas
pop
shll
mov
repz
cs
addb
xlat
addr16
mov
hlt
popf
push
fnstenv
inc
lds
clc
adc
dec
mov
and
mov
push
shl
sbb
adc
sub
call
rorl
out
mov
imul
mov
jmp
fistpll
fadd
mov
sbb
test
jne
push
mov
pop
add
mov
pop
push
test
lods
inc
sarb
and
and
das
arpl
std
mov
sub
lcall
mov
testl
xor
fistl
rcrl
mov
nop
jns
adc
mov
pop
push
into
lcall
cmpb
push
jg
loope
sub
out
mov
lret
icebp
mov
sbb
arpl
lods
fldl
push
fcomip
cmc
orb
push
loopne
push
mov
scas
cmp
dec
push
cmpsl
jl
pop
shr
mov
test
outsb
imul
imul
bound
sbb
popa
clc
sbb
push
clc
int
mov
in
dec
inc
ret
push
jno
cwtl
dec
cs
fisttpll
adc
or
adc
fdivrs
pop
lea
and
int
cltd
mov
jge
in
stos
add
lock
pop
dec
iret
xchg
bound
adc
lret
pushf
push
daa
jp
xlat
cmpsl
sbb
and
and
fmuls
push
es
imul
push
mov
jl
lret
aad
cmc
shrb
dec
inc
test
pop
xorl
gs
sbb
mov
xchg
adc
out
mov
pop
out
and
dec
add
loopne
sbb
push
mov
sub
xchg
jb
insl
mov
pop
adc
cs
jae
fnsave
and
pop
xor
adc
mov
or
cli
cmp
xchg
pusha
cmp
lods
jge
dec
dec
pop
mov
sbb
rcpps
data16
inc
jmp
jo
leave
cmp
rorb
pop
fcoms
add
xor
mov
adc
in
mov
data16
icebp
jge
mov
mov
pop
scas
into
test
sub
std
in
clc
cmp
jnp
aad
outsb
pop
adc
decb
stos
aam
inc
jp
xor
pusha
or
pusha
mov
pop
aas
lods
fwait
xor
pop
and
xor
jp
inc
stos
outsl
jecxz
xchg
jo
xor
mov
inc
and
push
fcomi
sub
loopne
lods
ja
lds
sub
les
xchg
loope
xor
mov
xchg
scas
push
cmp
add
push
call
sahf
loope
xor
movsl
in
lret
call
in
fmuls
jb
pop
fcmovne
dec
in
insb
pop
out
push
push
int3
or
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
jmp
enter
cmc
jne
mov
pop
or
cltd
jmp
jle
push
jns
jle
mov
jnp
mov
scas
aad
xor
cli
clc
inc
inc
push
test
mov
sub
cmp
cld
push
cmp
out
out
mov
inc
and
push
or
jmp
cmp
mov
cwtl
lea
sub
sbb
ljmp
cmp
mov
xor
pop
push
xor
mov
into
divb
fdivl
imul
int
sbb
loopne
push
rol
sahf
cmp
lahf
cs
fdivrl
rcrl
lock
fadds
pop
lcall
leave
lret
mov
and
fstp
adc
or
fsubr
imul
cmpsl
into
mov
pushf
inc
add
xorl
cmpsl
push
stos
rcr
jge
les
das
or
std
jg
cltd
xchg
push
fidivrs
jnp
lods
in
fwait
mov
loope
enter
cmp
movsl
add
fwait
sbb
out
mov
roll
cmpsl
jle
mov
sbb
popa
mov
mov
mov
jb
enter
lcall
fcompl
jge
stc
xlat
mov
lock
xchg
into
mov
lods
lods
mov
sbb
lods
xor
push
dec
int
in
sbb
dec
mov
push
js
push
push
xchg
bound
scas
cmc
add
lods
push
mov
xor
icebp
xchg
and
sahf
scas
mov
inc
in
out
cltd
sub
ja
or
stos
jge
push
loop
xchg
cmpsl
lods
ficomps
cmp
jae
mov
fstl
lcall
mov
xor
aam
dec
arpl
xor
rorl
dec
mov
and
xor
and
sub
lea
and
sahf
scas
sbb
gs
notl
cwtl
jnp
fwait
pop
pusha
sbbb
cmp
jg
cwtl
sbb
add
xchg
and
sbb
popf
jb
add
fsubs
into
dec
clc
pop
outsb
stc
fwait
mov
push
mov
mov
jne
mov
sbb
out
dec
xchg
clc
mov
cwtl
cmpl
js
popa
fucomip
jne
adcl
add
or
inc
inc
or
dec
add
mov
sbb
jle
clc
sbb
jo
movsl
adc
cmp
inc
rolb
cmpsb
cmp
sbb
pop
xor
dec
mov
repnz
inc
dec
test
xor
out
pop
jle
mov
add
jb
xlat
inc
xor
push
xchg
shll
lahf
mov
stos
les
lods
lcall
push
push
cmpb
mov
mov
aad
test
outsb
mov
jb
pop
push
sbb
shl
dec
imul
jge
adc
test
divl
push
fisubrl
cmp
ret
adc
mov
mov
push
daa
in
xchg
sub
or
push
ja
and
mov
std
or
ds
aad
jns
into
fistpl
add
fcmovu
out
lods
mov
cwtl
loop
jne
cmp
hlt
xchg
sti
jp
ljmp
hlt
mov
scas
dec
inc
clc
mov
pop
rcr
xchg
ss
mov
rorl
and
je
enter
out
lcall
adc
ret
cs
test
xor
scas
leave
pop
test
test
xchg
mov
jmp
or
xor
add
cmp
je
movl
lea
mov
jmp
push
fdivp
imul
mov
xchg
loopne
ret
and
push
jns
jle
es
xchg
mov
xchg
cmp
mov
lcall
test
outsb
mov
mov
jne
xlat
inc
loop
in
ret
lahf
or
xor
rclb
jmp
xchg
sub
pop
sub
scas
insb
xchg
jg
std
lods
hlt
cwtl
sbb
clc
sahf
cmpsl
movsb
andl
pop
incl
sub
push
stos
push
mov
loope
sbb
stc
mov
xor
push
loope
dec
xchg
pop
iret
dec
push
xor
stos
shll
sahf
inc
mov
push
test
inc
cmpl
sbb
ljmp
xchg
add
loope
pop
cwtl
xchg
sub
and
leave
movsl
es
sub
inc
xor
cmp
jns
psubsw
test
mov
sub
mov
aam
loopne
mov
lock
or
xchg
mov
cmp
mov
popf
sbb
sbb
cmp
iret
adc
jo
shlb
mov
addr16
stc
ds
pop
pop
movsb
xor
jb
pop
stos
mov
mov
bound
lock
loope
dec
inc
add
mov
lret
lret
imul
mov
je
mov
arpl
sahf
dec
in
arpl
nop
sbb
aad
sbb
pop
addr16
test
xor
and
xor
cmpl
jns
int
sub
pop
mov
adc
movsb
fdivrl
lea
hlt
lahf
pop
and
mov
sbb
xor
arpl
mov
sbb
mov
xchg
mov
jmp
sahf
adc
mov
adc
mov
inc
in
movsl
dec
xchg
shr
cli
adcb
and
add
test
lock
and
cmp
inc
mov
or
cld
outsl
jge
mov
sbb
xchg
and
fistps
xchg
push
push
fimull
gs
mov
jmp
cmp
lods
data16
adc
imul
dec
pushf
cmpsb
jne
cmp
jmp
mov
pop
inc
movsb
fisttpl
emms
pop
dec
xor
mov
subb
or
loope
or
jp
std
leave
es
into
stos
or
testb
shll
pop
xor
leave
test
dec
lea
mov
xor
fisubrs
popf
lea
xor
xor
aaa
push
mov
fisttps
xchg
fists
sub
orl
outsw
push
pusha
push
loope
jae
pop
dec
pop
jmp
stos
xchg
mov
pushf
ds
cmp
pop
mov
fwait
insb
out
scas
mov
repnz
inc
lahf
dec
test
lods
xor
inc
lds
in
push
mov
or
push
mov
aaa
adc
mov
imul
push
cltd
jl
in
lret
pop
xor
push
xor
aad
hlt
loopne
mov
mov
push
dec
ja
pop
fwait
jo
cmp
pop
mov
js
push
xchg
sub
or
xor
outsl
xchg
and
xchg
or
dec
mov
push
pop
jecxz
jg
test
mov
testl
xor
data16
pop
add
into
jnp
ja
cmp
sbb
jge
test
jns
adc
jns
aaa
sahf
xlat
test
scas
sbb
fwait
idivl
push
rorb
cmp
or
out
xor
sub
imul
inc
sub
pop
mov
test
std
mov
xor
jno
inc
xchg
dec
loope
rorl
aaa
addr16
cmp
cmp
outsb
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
sub
jmp
pop
mov
and
jno
dec
call
mov
jle
das
jle
pop
jg
jle
fdivrl
jle
lcall
imulb
sbbb
cli
mov
cmpsb
push
repnz
pop
or
jle
call
and
xchg
mov
push
int3
movsb
stos
in
je
jnp
sbb
mov
shrl
addb
mov
iret
aaa
scas
pusha
mov
sti
mov
fdivs
arpl
mov
imul
mov
jne
aam
dec
lea
and
lea
ror
nop
xchg
repz
sbb
data16
or
sub
cmpsb
scas
dec
sub
out
inc
je
das
or
lods
xchg
mov
inc
xchg
lods
insl
fisubrs
add
insl
icebp
xor
lret
movsb
sti
dec
test
shll
inc
push
rcll
dec
inc
inc
dec
icebp
pusha
xchg
add
rclb
stc
lea
sbb
xchg
psrld
jg
jbe
popa
nop
mov
dec
into
divb
pop
sbb
popa
dec
js
data16
in
mov
and
mov
aas
mov
and
movsb
or
cmp
mov
xchg
outsb
fldt
movsl
inc
aas
sahf
lds
or
adc
je
push
imul
sbb
jg
or
pop
xchg
cmpsl
cwtl
jge
loopne
xchg
fneni(8087
cltd
cmp
cli
pop
or
add
cmp
inc
aaa
lahf
ss
in
mov
add
dec
mov
and
hlt
pop
ret
lea
rorl
fstpt
sbb
cmp
cltd
adc
sbb
dec
pop
cs
in
cld
daa
dec
or
into
sbb
fcomps
les
scas
pop
add
and
or
xchg
jb
mov
mov
sahf
cmp
adc
jle
push
or
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
push
pushl
call
mov
dec
mov
jmp
movl
mov
xor
push
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jb
inc
mov
incl
mov
xor
xor
mov
add
xorl
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
jmp
imul
jge
push
pop
loopne
insb
je
push
pop
jg
jle
loope
test
enter
lds
jnp
sub
repz
pop
addr16
cs
add
sbb
outsb
mov
cli
sti
into
inc
or
pop
xor
fcmovnbe
mov
cld
pop
xor
out
dec
mov
jo
sub
sti
push
cmp
xchg
mov
out
mov
jne
stc
mov
lea
cmpsl
rcrb
lods
cmpsl
pop
push
sbb
jp
push
incl
xchg
int
pushf
push
jne
mov
adc
insb
xchg
inc
divl
and
inc
fistpl
loope
nop
sbb
repnz
rorb
movsl
pop
in
cld
dec
inc
or
xor
dec
cli
out
push
sub
cmp
xor
or
mov
dec
mov
dec
fisttpl
sbb
mov
outsb
add
mov
insl
das
mov
xor
xchg
push
mov
movl
imul
ficompl
or
mov
imull
sbb
mov
rcr
xchg
nop
xchg
jmp
or
mov
dec
dec
sahf
sbb
push
and
hlt
pop
dec
mov
or
cmp
sbb
shr
xchg
sahf
pop
jb
mov
scas
stos
jbe
lea
sbb
bsr
stc
fdivs
shr
add
add
jae
adc
stos
sbb
pushf
add
mov
test
sarb
insl
cmpsb
jo
inc
inc
mov
mov
repz
mov
cmp
das
imul
enter
pop
out
jns
lret
cmp
mov
sbb
addr16
lock
xchg
mov
call
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
jmp
sahf
jb
push
pop
jl
jb
ret
mov
inc
pop
sub
les
jle
insl
mov
sbb
out
out
push
psadbw
and
clc
movsl
scas
mov
ja
popf
dec
push
loopne
dec
pop
push
xorb
dec
jl
fadds
adc
push
flds
jg
cmp
mov
push
ret
js
js
icebp
mov
fadd
mov
cli
sub
repnz
mov
pop
insl
test
in
mov
cmp
lcall
pop
adc
lret
or
add
adc
and
mov
call
fnsave
mov
into
je
jb
xchg
fmull
lahf
fs
pop
or
mov
popf
xchg
fwait
pop
sbb
mov
out
jae
xchg
pop
xchg
mov
scas
sbb
js
xchg
pop
inc
popa
dec
push
in
es
sbb
mov
js
fnstcw
pop
pop
jg
pop
jns
andl
or
pop
stos
push
jne
jge
imul
and
sbb
stos
push
mov
repnz
or
jp
add
dec
xor
in
int3
rcrl
movsl
ret
xor
adc
das
cmc
mov
ljmp
sahf
stc
sti
into
aam
cli
jo
ljmp
lahf
in
push
or
pop
sti
dec
mov
test
lret
add
ret
aam
ds
dec
xadd
add
push
push
pop
aad
scas
call
add
adc
mov
fs
add
loopne
jne
or
xlat
lret
dec
cmpsb
and
std
xchg
sub
fdivrl
stc
movsl
inc
arpl
jg
jg
pop
adc
cmp
cmp
jo
subb
mov
out
sbb
mov
add
stc
mov
das
jp
js
xchg
inc
into
cli
push
bndstx
push
popa
pop
xchg
push
push
hlt
stos
sbb
js
jmp
adc
mov
and
arpl
mov
mov
pop
xor
cmc
movsb
xor
pop
inc
pop
stc
lret
and
mov
adc
or
into
xrelease
movsl
sahf
sub
lahf
adc
gs
push
std
lods
xchg
movsb
or
in
enter
adc
add
pushl
jecxz
jmp
adc
stos
and
jno
xor
mov
push
cld
mov
enter
arpl
out
add
xchg
aaa
pop
jns
xor
cmp
or
test
add
loopne
mov
inc
xor
xchg
adc
jne
xchg
xor
stos
pushf
mov
mulb
pusha
pop
out
inc
xlat
iret
pop
out
scas
mov
sub
lods
xchg
orl
loope
lds
fcmovb
sbb
cmp
xchg
jno
push
out
fsubr
cmp
mov
jl
add
shlb
cli
xlat
call
rcrb
js
add
sbb
scas
and
bound
mov
xchg
adc
jnp
insl
add
push
mov
mov
movl
mov
jmp
xchg
jb
jg
dec
mov
cs
outsl
testb
jns
jle
stc
fstps
mov
jno
pop
xchg
xchg
push
inc
lea
pop
sub
or
call
lret
dec
icebp
inc
loop
push
push
cmp
dec
push
mov
mov
cmp
adc
sub
movsl
mov
lea
das
sbb
es
or
test
and
ret
call
mov
lret
lahf
lahf
cmp
cmp
mov
out
popf
adc
cli
xor
xor
sar
decb
mov
dec
mov
mov
dec
data16
pop
repz
hlt
mov
dec
stc
test
fs
leave
je
scas
dec
data16
push
pop
dec
sub
xchg
add
icebp
sbb
push
jl
mov
lods
mov
cmpsb
das
jne
adc
rclb
adc
xor
loope
push
cmc
call
lods
mov
nop
push
and
mov
xchg
push
stos
test
add
pop
inc
aad
test
add
inc
cld
jecxz
fsubr
mov
dec
sub
push
push
inc
inc
lahf
adcb
inc
faddl
loopne
inc
adc
addr16
or
xchg
cld
inc
das
outsb
mov
mov
aam
pop
xlat
adc
jns
je
cmp
mov
jne
mov
push
mov
pop
mov
fs
scas
gs
cmp
rcr
push
js
add
leave
daa
test
jmp
mov
xor
sub
out
fildl
mov
iret
scas
mov
into
jnp
test
jmp
pusha
pop
mov
inc
add
aam
mov
out
pop
cwtl
mov
repz
and
xchg
lods
inc
jp
mov
dec
ret
mov
fcomp
xor
cmp
sub
xor
add
pop
outsl
push
push
lods
aas
test
das
test
loopne
push
subb
fucomp
lods
sbb
insb
add
jmp
cltd
push
in
sub
mov
icebp
gs
dec
cld
data16
fistpll
pusha
div
jb
fmul
jne
scas
cmpb
pop
in
imul
je
in
and
or
dec
les
jl
adc
and
lret
js
cmp
push
sbb
fnstenv
push
aas
inc
add
mov
test
cwtl
cmp
mov
fistpll
idivb
loope
sbb
pop
je
xor
stos
lods
jmp
adc
ja
cwtl
test
push
imul
repz
aas
adc
adc
je
jne
lods
dec
jle
xlat
mov
xchg
hlt
jmp
dec
out
imul
dec
bound
jb
lock
mov
dec
sub
mov
xor
add
xchg
jmp
jecxz
pop
cli
fcmovbe
pop
std
push
pop
fbstp
iret
mov
repnz
fldl
inc
clc
cmp
add
add
dec
and
add
pop
add
add
pop
arpl
mov
jle
les
jle
mov
xchg
addr16
jle
and
jecxz
jle
dec
add
ret
repnz
and
jg
out
xchg
mov
bound
cmp
dec
jno
sub
cmp
pop
ss
mov
pop
rorl
int
sbbl
inc
je
push
xchg
sub
andb
or
nop
mov
loop
xor
loope
fld
in
shr
mov
mov
mov
push
sbb
mov
xchg
jge
cltd
cmpsl
adc
fstpt
test
dec
pop
or
leave
inc
stc
sahf
push
sbb
cmp
pop
dec
push
push
mov
std
out
sbb
mov
jo
cli
ds
mov
outsl
out
add
cmpsb
inc
pop
pop
pop
mov
pop
dec
xchg
jp
aaa
in
fildll
mov
bound
xchg
cltd
sti
xchg
decl
arpl
aaa
push
mov
sahf
iret
mov
gs
mov
sub
xor
fwait
push
and
ds
push
daa
dec
movsl
or
adc
bnd
xchg
sub
lcall
lock
push
or
test
rcr
mov
jmp
pop
nop
xor
mov
enter
mov
jne
or
add
int
sub
and
es
cmc
cmp
sbb
ja
add
loop
loop
inc
fldcw
and
scas
inc
pusha
aad
push
or
fildll
movsb
dec
lcall
fnstcw
insb
jge
fisubs
and
add
xor
inc
mov
push
mov
lea
aaa
mov
mov
sbb
cmp
mov
and
xchg
in
jae
popf
loopne
cmp
fiadds
dec
mov
jno
push
adc
xor
mov
aam
sub
outsl
ds
out
xchg
jne
or
in
test
adc
xchg
into
or
test
jb
or
iret
enter
orb
cmp
imul
cmp
std
ljmp
sub
fwait
ret
jecxz
inc
aam
xor
inc
pop
jns
outsb
and
sub
push
mov
dec
push
nop
fistpl
xchg
scas
cmp
or
test
sarb
add
jle
mov
dec
daa
xchg
insb
fcoml
xor
xchg
mov
dec
push
cmc
out
jne
call
fwait
sbb
and
iret
dec
pop
fdivs
jecxz
outsb
jecxz
popa
popf
xor
jae
je
mov
pop
nop
jg
and
mov
xor
mov
push
xchg
xor
test
pop
int
int
repz
ds
jb
sti
rcll
fs
out
pushf
xchg
fs
insb
jno
jns
lds
mov
ja
adc
jno
mov
add
outsl
pop
mov
enter
add
add
adc
mov
andl
mov
subl
xor
or
mov
andl
add
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
jmp
movsb
jb
push
cld
pop
gs
call
dec
or
les
jle
xchg
lea
outsl
push
movsb
pop
xor
and
outsb
sbb
mov
jne
aas
lods
or
xchg
and
and
sub
mov
ljmp
adcl
inc
mov
loopne
dec
dec
mov
and
stc
dec
fdivrs
orl
cmp
mov
pop
mov
fisttpl
clc
shl
push
jle
lods
orps
lret
popf
stc
sbb
pop
icebp
lock
cld
roll
fsubrl
add
xchg
fmull
cltd
xor
dec
shr
jbe
xor
and
repnz
pop
notl
mov
cmp
xchg
leave
in
lea
push
cmpl
rcrl
adc
cmp
mov
and
push
std
xchg
iret
or
push
je
cmc
rclb
pop
inc
mov
fcoml
out
sub
insl
ja
in
pusha
push
mov
shrl
aas
in
lcall
sub
adc
addb
push
pop
daa
mov
fldcw
lock
push
shlb
mov
xor
lods
xchg
repz
loope
sarb
push
push
inc
xchg
jnp
dec
sub
testl
inc
out
addr16
shlb
bound
push
jge
ja
sub
daa
inc
icebp
ljmp
push
out
lcall
iret
das
imul
push
inc
hlt
jmp
ss
arpl
adc
inc
test
test
mov
cmpsl
xchg
jnp
insl
pop
mov
adc
rcrl
fcmovb
sbb
push
stos
int
inc
subb
and
jge
imul
jg
out
or
js
mov
ficompl
or
ds
adc
push
enter
inc
adc
jno
outsl
fcomps
sbb
cwtl
pop
fcomps
in
or
jmp
inc
in
mov
adc
and
cmp
dec
pop
repz
pop
jecxz
lahf
mov
pop
fimull
std
add
fwait
sbb
mov
mov
mov
int3
xchg
pop
es
xor
inc
dec
add
sbb
mov
adc
inc
loope
pop
xor
in
incb
repnz
ud0
mov
inc
call
pusha
mov
sbb
pop
cs
rclb
push
lea
cmp
fcom
rorb
adc
sub
scas
ret
sbb
xchg
js
adc
inc
xchg
or
sub
jne
dec
in
cmp
imul
cmpsl
inc
fidivrs
fsincos
or
pop
fsubs
sub
xchg
adc
jecxz
push
lods
in
xchg
insb
and
pop
in
mov
inc
ss
jns
je
imul
mov
jl
ds
arpl
out
out
clc
sbb
imul
add
adc
adc
bound
test
ret
push
mov
sub
movl
movl
mov
mov
sub
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
jmp
and
ss
cmc
lock
sahf
rol
inc
push
jle
dec
jns
jle
scas
push
fnstenv
dec
mov
fcoml
cmp
sub
inc
push
mov
cld
shl
add
and
push
out
and
imul
mov
ret
mov
and
cmp
push
incb
push
mov
xchg
into
cmc
jns
popf
lcall
movl
lahf
add
cmpsb
xchg
out
add
cmp
push
sbb
dec
xor
addr16
pop
inc
rcrl
dec
xor
mov
mov
mov
push
sar
push
pop
ja
mov
mov
push
push
ret
add
adc
ret
xor
lods
lods
push
and
mov
push
add
jne
stc
aas
and
xlat
cmp
sahf
sbb
cmp
or
gs
push
xor
inc
inc
lcall
out
xchg
mov
jg
push
dec
mov
ficomps
sub
out
lock
xchg
lret
dec
or
lret
mov
pop
pusha
aad
cmpsl
sti
mov
je
shrl
fisttps
pop
xchg
cmpsl
add
sbb
inc
decb
push
cwtl
jl
xchg
jg
xchg
xor
sub
scas
shll
mov
rclb
stc
fwait
push
sub
jns
mov
sbb
rolb
ja
test
jne
mov
mov
fwait
daa
decb
sti
ss
call
test
mov
mov
call
lahf
shll
shl
mov
cmpsl
mov
push
inc
shr
push
out
add
push
mov
jnp
mov
lock
into
ja
jbe
or
movd
ja
mov
flds
sbb
sub
lahf
lods
jns
leave
lods
das
adc
int
adc
rolb
cmpsl
cwtl
xchg
xchg
jbe
inc
lret
and
push
inc
fidivrs
test
xor
sub
lahf
or
das
jae
sbb
shr
das
adcb
lret
aam
xor
jmp
lret
xor
mov
shlb
imul
fdivrs
leave
lahf
adc
xchg
movl
xchg
and
lea
mov
ror
sbb
mov
iret
add
subb
mov
xchg
scas
dec
cmp
mov
addb
jge
flds
callw
dec
pop
inc
jecxz
mov
int3
pop
in
imul
dec
and
xchg
mov
jns
repnz
sbb
xor
icebp
icebp
and
icebp
in
sarl
sub
or
mov
int
mov
mov
cs
fstl
mov
xor
jg
and
jae
or
jne
inc
movsl
aas
ja
xchg
fs
sbb
push
push
in
adc
jae
push
lock
mov
cmp
je
sahf
in
sub
and
stc
imul
mov
fisttps
push
sbb
shlb
xchg
imul
fs
out
out
loop
frstor
inc
fstpt
xchg
push
cmp
cld
into
xchg
mov
cmp
fistpll
pop
ljmp
lret
mov
add
je
jp
cmp
jns
out
andl
mov
mov
test
sbb
jl
jne
or
ror
sub
pop
xchg
movsb
push
lret
ficomps
or
testb
jl
cli
scas
test
mov
or
and
mov
mov
adc
mov
sbb
mov
push
sub
lea
mov
xor
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
jmp
call
mov
dec
mov
push
inc
test
dec
fisttps
jle
jns
jle
enter
cwtl
lods
pop
scas
cmc
inc
adc
scas
pop
pop
fsubr
in
sbb
in
gs
popa
daa
add
lahf
aas
cmpsl
daa
xchg
popl
out
imul
call
adc
clc
in
in
movsl
mov
cltd
pop
out
pop
aad
xlat
sahf
sbb
add
ja
dec
shl
mov
loopne
jnp
aam
lea
mov
fadds
cmc
push
imul
cltd
xchg
out
in
popa
mov
out
inc
push
divb
nop
xor
push
outsb
mov
in
mov
jg
loopne
rol
gs
ljmp
dec
es
xlat
lcall
add
insl
pop
inc
pop
fisttps
inc
add
xchg
push
test
ficoms
mov
cli
or
jle
fcoml
push
rorl
mov
dec
cmp
scas
pusha
add
fimuls
rcrb
popf
xorl
lahf
push
lock
insl
and
or
in
push
loopne
mov
inc
cmc
pusha
lret
jno
lods
cmp
jle
push
sahf
sbb
movsb
pop
cs
out
pop
shll
mov
push
repz
cmp
xchg
repz
inc
js
js
test
ret
test
ror
enter
inc
es
jp
fcomip
sub
jnp
pop
jecxz
jl
or
shrb
jnp
fs
push
add
adc
mov
add
dec
mov
inc
filds
out
xor
sahf
lret
pop
pop
inc
fmulp
cmp
mov
arpl
movsb
rcrl
add
sahf
sbb
mov
daa
jnp
xchg
idivb
js
sbb
testl
or
dec
in
repnz
repnz
lods
ds
cli
rclb
sbbl
jg
je
cmp
test
daa
bnd
das
addb
cli
pop
xchg
push
stos
lret
xorl
out
int
xchg
call
or
dec
pop
jg
icebp
mov
xchg
stc
dec
clc
repz
push
adc
sub
divps
jae
aaa
mov
or
pop
dec
xchg
jg
add
andnps
push
outsl
sbb
test
push
and
test
cmpsl
xor
out
jecxz
pop
jg
pop
lods
mov
mov
ret
lcall
icebp
sbb
ljmp
cmpsl
aas
mov
mov
xchg
dec
das
mov
iret
mov
out
jno
xchg
pop
dec
push
js
jl
sbb
test
ja
cmpsl
add
mov
jle
push
dec
or
insl
popa
mov
cltd
adc
imul
mov
sub
ss
push
rcll
incl
add
aas
jp
xor
out
add
or
sbb
fildl
loop
dec
insb
rcrl
pusha
pop
push
loop
arpl
pop
in
fildll
xchg
mov
xor
sub
fwait
mov
out
out
ret
xchg
lea
xchg
subl
enter
mov
sub
inc
jp
inc
mov
and
imul
cmp
shrl
mov
sub
popf
cmp
mov
adc
outsb
sub
fsubl
push
pop
fwait
out
add
jne
les
xchg
test
hlt
repnz
inc
aaa
dec
test
addr16
jne
cmp
ds
xor
js
dec
lret
dec
push
imul
sub
xchg
neg
int3
push
push
xor
mov
mov
mov
mov
xor
mov
xor
sbb
mov
xor
addl
xor
add
sbbl
add
div
mov
jmp
inc
push
sti
sbbl
mov
mov
jns
jle
pop
push
pop
hlt
inc
pop
mov
xor
insb
fistpl
jns
adc
or
fcomps
roll
in
or
cmp
pop
popa
and
sarl
push
pop
push
sbb
dec
mov
loopne
js,pt
rorl
mov
mov
inc
jp
mov
jb
ret
mov
in
cmc
xor
addr16
idivl
mov
andb
shlb
fsubrl
pop
pushf
and
jecxz
loop
and
frstor
dec
aas
jle
cmp
cwtl
inc
notl
pop
mov
les
pop
cli
push
mov
jge
cmp
ljmp
test
in
cmp
xchg
in
push
rclb
int
js
dec
leave
fdivl
xchg
cmp
loopne
inc
loop
mov
daa
dec
mov
inc
mov
fidivrs
cmp
fidivrl
mov
jg
push
out
aas
dec
pop
sub
testb
fbld
cwtl
enter
adc
cmp
push
hlt
jl
or
and
mulb
xchg
rclb
mov
loope
push
rclb
sbb
sub
jge
fadd
push
loop
scas
jecxz
push
cmp
or
rcr
pop
fisttpll
mov
sbb
lea
or
das
mov
jb
xchg
stc
fsubrl
push
cmp
gs
cmpsb
jmp
mov
xor
mov
mov
scas
sbb
aaa
jl
mov
jae
mov
data16
outsb
inc
scas
jb
movsl
fildl
push
mov
icebp
leave
in
or
enter
and
xor
popa
adc
fcmovu
js
mov
jmp
push
cmpsl
in
xlat
pop
mov
int3
cld
or
xor
pop
add
jg
mov
jmp
jmp
out
add
aad
sti
sub
or
mov
testb
imul
call
cmp
or
fs
in
push
sub
shlb
fnstcw
movsb
or
ja
mov
add
lds
daa
insb
mov
popa
and
call
adc
xor
mov
cmpl
insl
jge
rorl
and
adc
test
mov
mov
sub
inc
out
xlat
les
jo
in
movups
add
outsb
sbb
push
or
inc
xchg
popf
pop
sahf
es
mov
sbb
pushf
mov
repnz
mov
mull
or
and
and
scas
cmpsb
aaa
lock
enter
xchg
jecxz
jbe
mov
cmpsl
mov
push
scas
mov
js
lret
push
ja
cmpsl
pop
xor
fwait
insl
je
loopne
fistl
xor
pop
loope
add
aam
inc
push
shll
xor
stos
add
mov
xorl
pop
pop
or
cmpsl
add
popf
xchg
incl
in
in
push
mov
scas
lahf
fisubrl
jp
aaa
mov
mov
adc
aaa
outsb
dec
sub
jmp
xchg
ret
loopne
insl
stc
aaa
sbb
aas
xor
or
pop
jbe
out
xor
or
jmp
call
sbb
cli
inc
out
mov
fstpt
and
push
xchg
fcomp
mov
jl
mov
ss
adc
cmp
into
inc
mov
movl
jmp
xchg
mov
jae
popf
cld
ja
or
out
ret
jle
dec
jns
jle
jno
xor
xchg
fidivrl
mov
mov
stos
fs
xchg
jl
aas
pop
xor
inc
rcrb
cwtl
aaa
aad
jae
adc
inc
jp
fyl2xp1
shlb
mov
pop
roll
les
mov
mov
loop
push
pop
lods
into
jne
add
inc
adc
add
sub
imul
enter
add
mov
dec
mov
inc
adc
aam
cwtl
rclb
jo
cli
jge
popa
xchg
dec
mov
ffree
hlt
aaa
jne
adc
xor
or
push
cmp
adc
imul
push
imul
call
mov
fisubrs
call
cli
loop
jno
sub
add
jmp
ret
mov
jno
test
jns
and
pop
into
out
add
popa
pop
inc
jmp
sbb
push
sub
mov
repnz
ds
xor
hlt
xor
inc
or
push
mov
sbb
scas
adc
popa
mov
sarb
dec
rcll
pushf
icebp
lock
movsl
lock
jbe
adc
cld
mov
mov
fcoms
pop
xchg
test
imul
xchg
jge
cmp
push
stc
sub
dec
inc
fists
xor
sbb
test
dec
ret
sub
mov
xchg
out
cmp
or
mov
scas
mov
mov
xchg
or
mov
or
sub
gs
inc
sbb
adc
pop
sub
stos
add
add
xchg
in
ja
push
fistl
not
dec
mov
cmp
pop
jno
or
cmp
addr16
pushf
lret
jbe
cmp
movsl
mov
xor
in
sub
mov
jbe
mov
fidivs
xchg
push
pusha
sub
ret
sbb
stos
and
outsb
mov
cmp
sub
clc
notb
jne
lcall
adc
cs
jmp
and
shrl
repz
dec
mov
cld
pop
xchg
mov
push
mov
mov
test
int3
push
sub
or
mov
arpl
insl
in
rorl
movsb
add
pop
aas
loope
cmpsb
ja
mov
mov
dec
fwait
add
fmul
icebp
mov
ficomps
jbe
push
out
jmp
ret
xchg
lcall
loop
sbb
mov
in
sub
cmp
mov
jecxz
data16
mov
and
fisubrs
ret
mov
je
mov
adc
cmp
clc
cltd
hlt
mov
es
outsb
xchg
rcr
jb
cmpsl
or
pop
or
inc
mov
lahf
or
sti
cmp
lea
push
xchg
add
add
adc
iret
xor
and
shl
jo
cltd
push
jp
aas
sbb
push
outsb
mov
cmp
mov
std
adc
inc
in
aam
lods
jle
js
pop
pop
sahf
push
mov
mov
test
xchg
xchg
mov
jmp
add
mov
icebp
adc
cltd
jle
xchg
mov
adc
sbb
imul
iret
pop
cld
pop
push
mov
cmp
fnstcw
sahf
and
addr16
sti
pop
jmp
jns
enter
pop
sub
dec
pop
mov
pop
xor
sarl
add
movl
cmp
movl
je
movl
lea
addl
mov
xor
mov
not
mov
orl
imul
movl
mov
movl
mov
cmp
je
mov
mov
sub
sub
mov
orl
mov
xor
add
pop
pop
jmp
pop
add
or
add
pushf
sbb
iret
jle
dec
jns
jle
xor
jno
fstps
sbb
and
aaa
push
ret
sub
ljmp
pushf
sub
adc
pop
xchg
out
aam
mov
shr
xor
scas
insl
mov
cmpsb
inc
pop
or
pop
mov
mov
cwtl
inc
sbb
mov
or
push
jecxz
inc
ja
sarl
cmp
cmp
shlb
es
lds
cmp
int3
push
pop
or
movsl
stos
int
ja
mov
sub
xor
jns
andl
in
arpl
aaa
ret
scas
mov
adc
sbb
cmpsb
push
lahf
lret
pop
dec
mov
popf
psubsb
push
xchg
ss
inc
inc
roll
clc
loopne
xchg
outsb
pusha
and
xchg
xchg
jae
lret
adc
jecxz
data16
mov
popf
mov
and
pop
dec
outsl
xchg
rorb
and
pop
lods
addr16
into
push
ljmp
repnz
popa
mov
pop
sbb
mov
cmp
hlt
in
pop
lcall
mov
movsl
insl
mov
jmp
stos
dec
movsl
mov
lahf
mov
pop
popf
mov
mov
fimull
loope
mov
cltd
mov
add
jo
jecxz
sub
push
ss
add
mov
push
pop
int
xchg
mov
mov
pusha
mov
cmc
out
cmpl
add
jge
sbbb
sbb
lahf
mov
inc
and
fsts
sbb
iret
andb
mov
mov
mov
imul
push
sbb
sub
cltd
adc
mov
scas
sbb
lcall
fstpt
addr16
xchg
jg
sbb
xor
out
pop
les
out
xor
pop
mov
fimuls
cmpsl
cwtl
sbb
rcll
adc
adc
insb
and
dec
xchg
mov
gs
rcr
insb
adc
sbb
xchg
jmp
lock
jo
inc
adc
out
pop
mul
sbb
xchg
js
sub
in
and
out
jle
ja
jle
cmp
adc
aaa
stos
mov
ss
imul
adc
inc
ds
xchg
push
std
cs
ds
vpavgb
movsb
bswap
mov
das
fwait
and
rcrl
andl
int
test
sbb
repz
sbb
loope
xor
dec
lods
jb
adc
push
mov
xor
jg
jle
lret
in
pop
or
iret
aaa
add
jecxz
mov
or
or
test
ret
mov
cmpsl
test
cmp
lcall
aad
into
xchg
cmp
in
inc
sti
xchg
push
data16
inc
shrl
fisttpl
lock
jns
cmpb
ds
and
xor
out
or
loopne
and
dec
add
aad
cmp
pusha
adc
sub
js
push
sbb
sbb
inc
das
adc
mov
dec
insl
add
mov
inc
ret
dec
pop
cmpsl
push
rclb
and
cmp
cmp
dec
mov
pushf
pop
mov
dec
adc
fcomps
paddw
sub
test
nop
mov
fimull
lea
call
int
pusha
sbb
xor
ss
mov
idivl
in
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
jmp
ret
or
insl
pop
jmp
pop
sbb
or
jle
dec
jns
jle
pop
jle
pop
data16
shll
in
mov
outsb
call
std
xchg
rorb
cwtl
push
mov
cmc
mov
cltd
pop
inc
movsb
cmp
outsb
mov
ret
inc
popa
pop
adc
lock
insb
mov
enter
jecxz
mov
xchg
movsb
addr16
fistpll
push
push
in
aam
andl
jbe
pop
pop
cmc
out
jne
cmp
or
jno
mov
xchg
mov
cmp
pop
ret
arpl
and
call
mov
sub
rcrl
popa
add
shr
outsb
insl
lahf
fnstenv
add
bound
popf
ds
jbe
push
rcll
loopne
adc
mov
cmp
lret
push
or
and
pop
push
das
cmpsl
arpl
xor
jg
pop
mov
hlt
xchg
mov
xchg
mov
mov
push
in
xchg
stc
outsl
mov
fs
jecxz
xchg
insl
test
xlat
jge
mov
outsl
dec
js
les
dec
movsl
clc
mov
jb
xchg
and
int
insb
sub
stos
xchg
dec
add
mov
adc
dec
pop
das
daa
push
xchg
inc
imul
xor
push
bswap
repz
add
push
in
dec
loope
xor
mov
inc
stc
pop
out
stc
mov
lds
mov
push
sub
pop
mov
loopne
or
call
sbb
cmp
xor
cmc
xchg
dec
ret
sbb
imul
jecxz
inc
lea
notb
mov
test
lds
sti
cmp
inc
mull
pop
xchg
sti
xor
push
sahf
mov
outsl
or
cmp
stc
cmc
pushf
mov
sbb
and
scas
jns
push
or
mov
push
icebp
test
mov
dec
ja
push
adc
jmp
roll
insl
cmpsb
mov
sbb
and
push
rolb
ret
dec
subb
imul
xchg
bound
call
adc
jnp
mov
mov
daa
pop
mov
std
push
mov
mov
fmuls
out
enter
and
pop
sbb
out
sbb
adc
adc
ret
pop
adc
cmp
xor
shrl
scas
mov
hlt
fs
cmp
not
fdivrl
ret
mov
xchg
cmp
sub
fadds
testb
into
test
xchg
cmc
mov
adc
insl
xchg
ljmp
mov
std
or
dec
add
stc
in
incl
add
inc
mov
add
jb
xor
push
out
call
mov
jno
aam
pop
scas
aam
shrl
aaa
test
lea
out
rcll
das
jl
mov
ds
arpl
loop
dec
push
jecxz
hlt
pop
movsb
jnp
outsb
adc
jb
aas
or
popf
daa
or
xlat
mov
jg
gs
movsb
test
sarb
movsl
add
pop
lahf
sbb
cmpsb
xor
push
and
leave
out
mov
jecxz
testb
inc
xchg
mov
insl
int
xor
or
mov
lock
pop
add
xor
les
push
pop
test
mov
ljmp
dec
jmp
sub
and
xor
fs
xchg
pop
mov
xorl
jmp
mov
mov
mov
mov
xor
mov
add
jmp
int
adc
push
pop
dec
xchg
leave
mulb
xor
pop
jle
dec
jns
jle
push
cmpsb
add
repz
inc
mov
aaa
fsts
cmp
test
int
mov
jne
es
stc
stos
push
decb
or
mov
and
inc
and
pop
cmp
mov
jge
mov
in
mov
add
loop
adc
push
pop
cwtl
pop
inc
in
int
push
add
cmp
xchg
mov
jg
jbe
pop
fsubrp
lods
jnp
cmpsl
and
xor
add
inc
inc
jecxz
out
inc
adc
je
stos
mov
push
sbb
pop
pop
and
sti
shll
push
nop
inc
push
push
mov
or
ret
adc
lods
push
xchg
or
and
lahf
cli
mull
pop
daa
cli
mov
sub
and
add
push
add
out
cltd
and
xor
sbb
call
jge
test
mul
add
add
or
pop
test
push
mov
xchg
arpl
pusha
jg
cmp
or
sbb
inc
std
inc
pop
adc
daa
int3
add
fiadds
lea
pop
lock
add
fs
sbb
mov
add
push
jbe
das
adc
push
stos
push
in
in
out
jae
in
mov
sbb
sub
neg
iret
xchg
add
in
jmp
lods
pop
arpl
xchg
hlt
fildl
push
and
movsb
popaw
jge
adc
fdivrs
push
pop
out
int
rolb
rcrl
push
dec
cmp
adc
addr16
jno
sti
outsb
fstps
clc
cmpsl
push
addl
jp
adc
xchg
mov
fcompl
and
lods
imul
jbe
icebp
sub
sub
lret
sarl
sbb
fcompl
fimuls
jecxz
jl
jp
je
jns
int
pop
add
stos
ret
xor
rol
repz
test
cmp
mov
add
push
push
stc
pop
lcall
xlat
das
pop
cmp
aad
test
cmc
inc
ss
jo
mov
sbb
test
and
mov
mov
mov
cmp
jmp
mov
stc
jle
jmp
push
push
lea
xor
aas
xchg
mov
stos
sbb
ja
loope
xor
mov
lcall
inc
dec
sti
in
lret
hlt
outsb
adc
xchg
rorb
xchg
in
ss
sub
xchg
xor
fiaddl
mov
testl
or
fistps
lret
aas
cs
cmpsb
in
psubusb
push
push
pop
js
xchg
push
int3
fnstenv
jnp
in
andb
mov
jg
sbb
out
nop
jge
outsb
adc
inc
mov
ffree
add
nop
push
sub
inc
dec
cmp
cmp
fistps
lea
js
sbb
adc
push
int3
xchg
xchg
push
lahf
or
mov
mov
add
jle
fsubl
mov
fwait
xlat
js
mov
sti
popa
inc
add
scas
cmc
testl
and
inc
int3
mov
jo
leave
xlat
xor
sti
outsl
out
push
cmp
xchg
scas
push
mov
pop
mov
dec
test
mov
lods
xor
bound
inc
imul
test
lods
jns
mov
jge
jmp
out
shll
mov
pop
cs
outsb
inc
fxch
and
lods
loopne
es
jmp
mov
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
jmp
fadd
test
rorb
insl
pop
jl
outsl
addr16
stos
sarb
dec
jns
jle
xor
xlat
push
sbb
push
adc
add
jns
int3
inc
popf
xor
inc
xor
in
mov
mov
jnp
shrb
xchg
sti
push
push
add
push
adc
jae
vmulsd
mov
inc
xlat
and
outsl
gs
loope
icebp
bound
add
out
cs
div
aas
test
and
rorl
clc
mov
lahf
das
jle
mov
ror
mov
mov
fwait
shlb
jecxz
pop
stos
outsb
ljmp
dec
adc
sub
add
lea
shl
sbb
xor
lods
xchg
in
cs
stos
pop
add
lock
add
xchg
outsb
imul
lret
cmpsl
inc
lods
dec
and
fcompl
scas
pop
push
nop
sub
cmp
push
aas
jl
ja
sbb
aad
inc
adc
xor
pop
mov
gs
or
out
pop
dec
or
sub
sub
ds
test
bound
pushf
sbb
jp
icebp
sbb
pusha
pushf
fidivrl
sub
popa
push
jo
dec
jo
test
imul
jmp
xor
cltd
push
push
mov
mov
jge
sahf
negl
xchg
dec
daa
lcall
test
xchg
into
pop
xor
cmp
jne
ror
ljmp
movswl
int
out
rorl
pop
sub
test
loopne
xchg
and
scas
add
lcall
enter
cmp
mov
lods
out
jns
dec
push
scas
pop
mov
cli
ficomps
repz
mov
js
out
cmp
mulb
push
imul
data16
xor
addr16
xchg
ss
out
jle
movsl
sub
or
sub
mull
push
dec
js
ljmp
xlat
cmpsb
mov
lret
test
jg
daa
sub
rcrb
fs
lods
inc
pop
imul
lea
mov
loopne
lret
xchg
add
adcb
stos
movsb
jge
outsl
scas
jp
mov
dec
pop
in
jb
in
cmp
jl
mov
insl
fiadds
in
fnstenv
cli
test
push
shlb
xchg
pusha
xor
lock
nop
shlb
gs
xor
test
std
andl
aas
sti
jmp
pop
adc
aam
fcmovne
pop
aaa
lcall
dec
stos
mov
aaa
fs
sbb
push
adc
xchg
faddl
cli
enter
xchg
cmp
inc
sub
adc
inc
inc
mov
xor
btc
and
fbstp
cltd
add
adc
jecxz
movsl
xchg
cld
mov
aam
stos
xchg
mov
pop
aaa
jns
push
push
lcall
daa
fisttpll
movsl
lcall
sbb
xor
adc
ljmp
pop
adc
or
and
lret
clc
popa
xchg
xchg
cmp
push
mov
push
imul
inc
inc
cmp
loopne
and
pop
or
mov
lods
cli
xlat
mov
das
fdivs
and
out
sub
popf
int3
cmpb
xor
es
or
out
fisubrs
fiadds
repz
pusha
jecxz
sub
in
push
jecxz
dec
sarb
imul
add
outsb
insl
push
mov
fwait
bound
pop
aad
push
stos
lock
jp
xchg
or
add
mov
filds
mov
xchg
notl
inc
lret
mov
movsb
mov
jecxz
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
movl
cmpl
je
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movzbl
sbb
mov
sbbl
push
xor
or
sbb
push
jmp
jmp
lahf
xchg
mov
sbb
call
fidivrs
loope
jle
jne
insl
int
push
loop
xchg
repnz
in
cmp
divb
movb
cmp
push
in
push
fisttpl
jle
jne
or
xor
and
sub
mov
cmp
push
inc
mov
sub
addr16
jb
push
pop
or
or
fdivl
leave
sub
add
aam
inc
sub
or
repnz
inc
mov
inc
stos
ret
sub
push
test
mov
jnp
fldt
ret
inc
ja
adc
push
mov
test
nop
leave
lahf
insb
js
jbe
bound
mov
shlb
repnz
push
stos
decl
mov
xor
xchg
and
push
jecxz
adc
test
packssdw
scas
jo
lret
lea
outsl
test
std
sub
shll
cltd
xor
or
xor
pop
mov
dec
pop
inc
ret
call
insb
push
mov
jle
jbe
push
fcomip
adc
pop
fs
orl
dec
test
imul
pop
out
mov
pop
scas
xor
mov
pop
xchg
scas
subl
outsl
cmc
push
cltd
mov
mov
stc
fwait
inc
insl
int
rcrb
nop
mov
in
inc
xor
insl
mov
mov
or
imul
int
and
out
mov
jmp
insl
or
es
mov
cmpsl
je
xor
mov
inc
add
ljmp
or
ljmp
jno
pushf
dec
mov
sahf
lods
aam
loopne
adc
inc
sbb
aam
jl
push
inc
dec
add
insl
arpl
out
xchg
test
addb
bswap
pop
sbb
xchg
test
pop
pop
or
push
shrl
sub
dec
xlat
addr16
ja
aas
into
and
sti
jmp
mov
sbb
dec
sub
insl
sahf
inc
ss
jge
adc
int
pop
in
xchg
aas
mov
out
mov
ficompl
enter
push
aas
and
je
rorl
xor
shlb
pop
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
xor
or
mov
add
push
sub
mov
xor
jmp
push
ja
push
aaa
push
jo
mov
adc
fdivrs
loope
jle
fstps
add
sub
push
jmp
arpl
adcb
lret
jno
lcall
cmp
xlat
imul
rcrl
push
call
add
int3
mov
gs
clc
dec
jmp
mov
inc
imul
jge
dec
loop
cltd
les
ret
mov
mov
bound
mov
sbb
repnz
loop
sub
mov
xchg
add
popf
cmp
adc
addr16
cwtl
mov
xchg
jle
fbstp
in
fisubs
xchg
and
stc
in
ss
mov
push
ds
pop
aas
adc
repnz
ss
mov
push
aas
fwait
dec
sbb
aam
lock
jbe
sbb
push
jbe
fcmovu
cmp
jg
push
jns
cwtl
sti
into
pop
push
rol
mov
movhlps
dec
or
jb
inc
cmp
jecxz
into
pop
add
aad
mov
jge
sbb
dec
lcall
adc
fcmovu
std
jp
js
jl
imul
and
loope
jp
nop
or
jl
xor
jae
lret
shll
mov
dec
lahf
mov
popf
lcall
mov
jg
jecxz
jp
stos
iret
ret
fstpl
popf
adc
sbb
insb
mov
loope
loope
ljmp
jno
imul
repnz
xor
pusha
movl
addr16
jg
or
rcrl
and
mov
shrb
adc
and
in
jo
fmulp
into
addr16
fimull
insl
lret
mov
orb
dec
nop
xor
inc
orb
out
xor
dec
dec
scas
add
rorl
pop
pop
mov
mov
repz
pop
inc
and
shrl
and
sub
lods
and
sbb
ja
loope
ret
cli
lods
adcb
rclb
mov
mov
or
lods
ror
add
test
xchg
fisubrs
imul
mov
mov
or
icebp
jnp
sarl
imul
inc
add
inc
hlt
testb
xchg
or
add
add
add
xchg
xor
mov
pop
adc
and
jl
rcr
jle
loope
jle
fldcw
stos
stc
subl
inc
inc
outsb
sub
pusha
push
inc
ror
clc
xor
lahf
sarl
stos
fnstsw
adc
add
sub
and
dec
sbb
adc
jl
push
lea
push
aad
add
xchg
xrelease
xchg
adc
rol
or
inc
jecxz
fxch
add
jl
xor
xor
pop
sub
jg
mov
sahf
mov
or
dec
add
jmp
aam
movsbl
and
inc
adc
jmp
cmp
movsb
mov
xchg
ret
xor
hlt
inc
stos
and
das
mov
sub
mov
int
mov
or
or
icebp
lret
fs
mov
out
jbe
mov
mov
xchg
mov
pusha
cwtl
dec
adc
jo
jnp
mov
mov
shlb
mov
adc
push
mov
imul
or
xor
xchg
mov
enter
popa
hlt
inc
mov
out
aam
addr16
sbb
pop
lods
mov
bnd
lods
xchg
pop
in
stc
nop
test
jae
mov
andb
out
clc
pushf
mov
jo
sar
fisttpll
repnz
xlat
call
inc
mov
pop
stos
out
and
outsl
popf
out
adc
adc
scas
addr16
lahf
jge
pusha
add
fpatan
xchg
ret
dec
loope
shl
inc
mov
jne
sub
jl
dec
movsb
mov
sbb
adc
and
out
push
ret
sub
mov
ret
add
cwtl
or
outsl
rolb
cltd
stos
pushf
cmpsb
lret
jae
pop
iret
cmp
orb
mov
roll
cmpsb
stos
xchg
or
dec
repz
insb
jnp
hlt
pop
stos
mov
fsts
das
add
idivb
mov
mov
and
test
pop
shll
mov
test
loopne
and
push
sub
jnp,pn
dec
push
lahf
mov
ret
xor
lret
out
loope
jp
sbb
push
call
imul
pop
push
jmp
shrb
mov
or
test
lcall
inc
add
add
mov
movl
mov
mov
movl
mov
movl
mov
movl
jmp
movl
cmp
movl
jne
jmp
call
je
fnsave
inc
leave
mov
lock
jle
js
jle
xor
sahf
pop
push
cs
pop
pop
int
mov
and
dec
xor
rorl
xchg
dec
ja
cmp
scas
in
pop
in
push
popf
test
cmc
jno
dec
lahf
add
push
sub
pop
sbb
add
popa
xlat
dec
rol
push
sti
rcrb
jb
lret
aad
pop
dec
test
pop
inc
mov
sub
andb
aad
mov
mov
rclb
data16
xor
add
iret
cmp
dec
pop
push
mov
aam
in
xchg
mov
or
xchg
mov
in
lret
stc
xchg
xor
aaa
mulb
or
jbe
rclb
push
mov
nop
adc
pushf
popf
cmc
mov
imulb
push
pop
js
imul
imul
popa
sbb
xchg
and
add
btc
inc
in
idivb
mov
js
shrb
sbb
lret
js
fidivl
adc
cwtl
xchg
push
popa
lods
push
inc
nop
cmc
xchg
aam
cmp
icebp
jge
or
shlb
push
fstpt
hlt
cmp
shrl
js
cmpsb
jb
xor
orl
xchg
sbbl
mov
ljmp
jmp
movsb
shlb
aas
add
sbb
idiv
jb
lret
mov
in
mov
sbb
mov
clc
sub
subb
and
idiv
pop
sub
jecxz
mov
xor
in
sbb
sub
fadds
sbb
lock
pop
lock
xchg
aas
imull
xor
mov
mov
divw
mov
shl
adc
icebp
ficoms
dec
sbbl
jl
jo
mov
ret
loop
mov
gs
test
in
ret
ret
jmp
in
orl
jno
icebp
xchg
push
sbb
jg
dec
out
pushf
jecxz
cmp
add
insl
daa
xor
negl
int
push
ljmp
mov
xor
lahf
pop
shlb
into
push
bound
or
mov
orl
sub
push
mov
or
mov
addl
add
subl
push
decl
call
movl
incl
cmpl
movl
jb
jmp
cmp
jne
movl
mov
mov
mov
mov
mov
jmp
mov
xchg
jno
jno
out
fisttpl
das
loopne
jle
js
jle
sbb
sbb
pop
pop
jp,pn
pusha
sbb
add
push
xchg
outsl
xchg
mov
cli
fiadds
xchg
std
or
sub
push
imul
cld
mov
mov
repnz
imull
mov
inc
adc
rcrb
jne
lock
sub
xor
insl
pop
mov
push
add
movsb
xchg
dec
outsb
sti
outsl
cmpsb
inc
jno
stos
or
sub
push
mov
jno
xchg
add
movsb
andb
inc
fs
imul
mov
jno
mov
xchg
cwtl
lock
cmp
rorb
nop
xlat
loopne
mov
inc
mov
sub
popa
push
xor
xchg
mov
xchg
push
out
fidivs
leave
rcr
stos
cmpsb
int3
das
mov
aaa
xor
pop
orl
add
fwait
xor
pop
xor
aaa
movsbl
daa
aam
fwait
push
jmp
repz
xchg
xchg
mov
sbb
rolb
mov
jge
hlt
ud1
pop
stc
push
pop
sbb
jp
inc
xchg
mov
in
pushf
jnp
lods
cmpsl
fcomps
lcall
orb
xchg
cmpsb
sub
pop
das
mov
dec
mov
mov
mov
add
fs
movsl
dec
aas
in
addr16
mov
cltd
imul
jl
mov
jno
mov
pop
lcall
lcall
pop
pop
lcall
inc
or
notb
sbb
and
nop
xor
mov
or
lods
add
and
pop
lods
pop
popa
push
movsl
push
out
inc
int3
rclb
jo
xor
fists
xchg
clc
int3
ror
paddw
daa
dec
mov
test
mov
outsl
sbb
rcrb
xlat
push
sbb
mov
incb
sbb
dec
mov
pop
push
jmp
sub
mov
push
out
sar
lock
je
xor
mov
ljmp
dec
fmul
imul
inc
in
inc
mov
inc
mov
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jne
mov
pop
xor
pop
add
pop
leave
ret
push
mov
sub
push
adc
mov
mov
andl
jmp
jns
out
std
jge
or
clc
or
add
jo
jle
lods
and
iret
xchg
sub
pusha
out
cmp
popf
fstpt
in
cmpsb
aad
xor
js
in
jno
and
and
or
outsb
stc
or
fcmovu
jmp
fdivrs
iret
in
xor
and
test
outsl
mov
mov
int3
inc
cmpsl
shrl
lahf
sbb
mov
imul
fmuls
inc
sbb
inc
mov
inc
cli
pop
dec
popf
xchg
ret
cwtl
sub
imul
lods
ss
jbe
or
sahf
mov
xor
cli
push
inc
add
nop
adc
push
fidivrl
mov
fnstsw
test
push
pop
stos
jmp
popf
inc
dec
mov
je
xor
inc
fstpt
xor
std
push
pop
mov
cmpsb
mov
pushf
popf
imul
test
cmpsl
das
lea
mov
xor
dec
add
push
xor
jns
into
aad
pusha
hlt
pop
push
repz
into
fdivrl
adc
add
fldenv
std
add
cld
or
leave
unpckhps
lahf
add
jb
int3
icebp
mov
inc
jmp
dec
jbe
inc
lea
push
ret
lea
fwait
insb
cltd
cmp
cmp
push
mov
push
pusha
call
subl
jne
xor
mov
cmp
sbbb
xchg
notl
in
test
push
into
cmp
inc
jae
jecxz
add
mov
adc
mov
ds
shlb
scas
jo
aaa
fadd
jae
cmp
pop
imul
xor
cltd
cmp
pop
mov
sbb
or
push
inc
lret
push
out
into
lret
out
jne
xlat
sbb
out
test
je
cmp
ficomps
cmpsb
out
mov
xchg
flds
daa
push
jns
lods
ja
adc
add
mov
lock
cmp
push
fisubrl
sub
sbb
inc
add
add
js
sub
sti
pop
sbb
mov
into
cltd
mov
cmpsl
pop
nop
notl
ret
mov
jg
mov
call
shl
mov
add
push
scas
xchg
stos
out
sub
outsl
outsb
inc
lret
data16
pop
arpl
fwait
adc
testb
xchg
outsb
adc
sahf
jl
jge
push
or
es
mov
inc
inc
popa
sahf
mov
movsb
fimull
sub
mov
and
lds
out
mov
jg
aaa
pop
movsl
mov
outsl
push
mov
fdivrs
and
rclb
or
and
push
xor
mov
mov
xorl
shl
and
ljmp
ljmp
sbb
out
ret
dec
and
cmp
dec
lcall
bswap
mov
loop
call
lods
mov
pop
loope
push
sub
push
xor
push
test
xchg
aam
fs
sub
ret
inc
clc
icebp
add
outsl
or
jecxz
mov
inc
and
daa
icebp
or
push
mov
ja
mov
jl
adc
das
in
stos
adc
aam
sbb
out
add
xor
or
repz
cmpb
iret
cmc
pop
jb
xor
pop
sub
xchg
cmp
test
add
enter
je
adc
jbe
repz
add
movsb
adc
and
fadd
hlt
imul
xor
dec
out
fnstsw
aad
adc
xor
aad
fldenv
adc
jge
inc
imull
test
div
iret
push
mov
test
mov
pop
push
mov
or
add
cmp
movl
xor
movl
movzwl
add
mov
mov
jmp
jmp
or
std
fdiv
sbb
xor
call
jle
jns
jle
test
bound
lcall
aaa
mov
jno
adc
icebp
dec
cltd
or
fnsave
and
xchg
pop
aam
in
lret
std
jae
xlat
or
idiv
jg
pop
jl
stc
cs
pusha
stos
jge
in
arpl
subb
jl
nop
sbb
and
sub
jge
std
clc
in
in
jne
sbb
hlt
repnz
jae
inc
insb
jl
sbb
xchg
shrl
xor
mov
aad
mov
cwtl
ds
sbb
or
jmp
test
or
xor
rcrl
mov
loope
jnp
adc
pushw
ret
aas
inc
mov
fs
inc
sub
inc
test
pop
push
ljmp
stc
mov
popa
ljmp
fidivrl
add
mov
jbe
and
mov
push
add
call
hlt
mov
loopne
scas
jl
cmp
cs
cmp
mov
and
popa
sbb
xchg
adc
test
test
cmp
pop
xor
cmp
sbb
mov
xchg
mov
pop
stos
loope
push
jae
int
xchg
sub
xor
outsb
imul
sbb
rorb
inc
jo
mov
inc
test
dec
mov
insb
push
scas
imulb
out
in
pop
inc
fs
jg
ja
repnz
mov
lods
jge
pop
push
lods
push
aam
loop
pop
aas
jecxz
inc
loop
cs
insb
xor
lods
push
add
sub
push
dec
shlb
inc
pop
cmp
push
pop
cmp
call
cmp
cld
pop
ds
fidivrs
hlt
xor
sbbb
push
sub
and
lret
sub
add
dec
pop
push
xchg
push
pop
pusha
aam
xchg
xchg
test
mov
test
cwtl
into
popf
jnp
push
frstor
inc
mov
out
js
pop
or
pusha
add
cmc
mov
mov
and
mov
dec
xchg
das
fisubl
adc
dec
jmp
lahf
je
pop
imul
pop
pop
or
aam
pop
xor
mov
dec
or
inc
gs
lret
ret
lock
pop
jbe
stos
or
out
mov
popa
push
cmp
enter
fdivr
hlt
inc
adc
sub
inc
push
push
mov
addr16
adc
dec
out
lcall
add
fstl
add
xor
or
test
shrb
and
orl
mov
pop
add
push
xchg
testl
cwtl
cmp
aam
das
xor
xor
nop
repnz
cmp
cli
shll
add
and
jp
scas
repnz
and
ss
cmp
das
ja
xchg
mul
jo
stos
leave
int
enter
pop
pop
push
aam
int
xchg
lret
push
test
fsts
xor
xchg
xchg
aad
xorl
sbbb
movsl
imul
xor
push
imul
mov
fimull
cmp
fstp
jnp
dec
lea
ds
in
adc
cmc
icebp
pushf
push
jne
and
test
aaa
scas
fistpl
sbb
enter
jns
dec
pop
test
pushf
dec
sub
imul
mov
popf
dec
rcr
push
adc
mov
pop
push
sub
aaa
fmulp
inc
or
or
mov
or
sub
push
int
mov
and
scas
jns
xor
insb
push
int
sti
outsl
movsl
cmc
mov
pop
aam
cmp
xlat
xchg
cmp
cmp
icebp
push
pop
sbbb
hlt
movsl
sub
mov
mov
mov
sub
mov
mov
or
xor
xor
add
xor
mov
add
mov
inc
mov
xor
add
mov
movl
mov
mov
sub
add
jmp
xor
xchg
mov
stos
cs
cmp
pop
stos
mov
jle
jo
jle
cs
xor
dec
pop
leave
mov
dec
push
gs
cmp
and
dec
lods
or
cmpsb
push
xchg
loop
out
rol
mov
in
push
and
xchg
aad
cmp
in
jl
mov
xchg
rorb
jns
fsubp
in
sub
je
icebp
adc
add
push
je
dec
gs
jns
in
std
or
mul
dec
ret
jle
cs
dec
lcall
push
jg
ss
out
insl
out
cmp
dec
push
repnz
push
cltd
insb
hlt
data16
rorb
out
call
pop
js
popf
cmp
jno
fcomps
gs
dec
push
sbb
and
daa
or
pop
dec
inc
call
dec
movsb
std
enter
mov
ss
xchg
sbb
pop
dec
or
popa
stos
int3
in
push
mov
sub
repz
lcall
inc
dec
data16
ds
repz
xchg
jne
stos
dec
cmc
sub
not
mov
adc
in
ljmp
inc
pop
out
jae
fnclex
pop
mov
outsb
jns
pop
loop
test
rcrb
mov
xor
lds
setne
movsl
scas
mov
jg
push
movsb
and
imul
loopne
or
movsb
clc
test
adc
pusha
add
jae
adc
mov
jmp
repnz
sbb
and
loop
es
or
push
jbe
int3
repz
cmp
daa
pop
daa
aam
js
lret
adc
jae
in
ds
movsl
hlt
cmp
in
test
sub
sbb
sub
jo
fistl
jmp
dec
push
add
jmp
push
test
dec
cld
sti
and
mov
jmp
data16
ds
out
add
push
test
loop
jb
xchg
insl
jle
test
in
fstpt
push
and
fstpl
sbb
add
jle
inc
and
pop
lahf
dec
push
jno
mov
cmp
addl
popf
sbb
in
adc
dec
sti
int
adc
popf
sbbl
and
outsb
ja
dec
jae
test
shlb
or
scas
inc
adcb
add
pop
outsb
ja
inc
adc
lcall
push
int
push
ficomps
push
insb
lret
pop
mov
adc
xlat
popa
pop
mov
adc
repz
out
cmp
cmpsl
fnstenv
leave
nop
fiadds
sbb
icebp
xchg
loopne
stc
xor
adc
sub
cmp
hlt
cmp
xor
ljmp
insl
call
inc
push
push
fnstcw
jbe
cbtw
and
xchg
adc
lcall
fucomip
stos
sbb
adc
push
and
movsl
xor
imul
mov
pop
pop
test
in
imul
rep
fdivrl
fmull
cmp
mov
scas
push
xor
cmp
mov
popf
pop
lods
lods
in
sub
mov
jbe
sbb
inc
mov
popf
ja
sbb
sbb
fsubrl
mov
sub
testb
jmp
iret
stos
add
lret
and
scas
fcmovne
daa
std
test
imul
cmp
insb
cmp
sbb
subl
and
rcrl
in
loop
mov
fmulp
ja
inc
and
adc
xchg
das
dec
fucomip
dec
lcall
inc
inc
mov
xchg
movsb
enter
sbb
sbb
in
lret
je
sahf
xchg
mov
movsl
insb
inc
leave
push
pop
out
std
subb
pop
lds
fdivrs
test
add
add
in
cld
popf
popa
imul
push
flds
idivb
jo
jle
pop
mov
aam
xor
insl
mov
sub
jl
mov
imul
dec
adc
pop
mov
push
stos
push
xchg
or
fsubr
pop
inc
jle
cmp
mov
add
stos
lods
sub
inc
daa
mov
ja
sahf
aam
and
imul
jne
daa
xor
or
and
out
mov
xor
fucomi
loop
fwait
push
ficoms
loopne
push
push
dec
mov
push
out
repnz
push
add
jl
xor
add
das
xchg
shll
inc
in
rcll
xchg
jne
adc
mov
lods
or
das
lret
fisubrs
pop
cmpsb
arpl
cmc
and
cmpsb
stos
cmc
popa
dec
sub
mov
jecxz
xchg
lock
xor
jecxz
fidivrl
mov
test
mov
punpckhdq
jb
mov
sub
jbe
inc
push
je
cmp
xchg
cmp
xor
subb
pop
bnd
and
jb
mov
rorl
sub
ss
pushf
dec
in
aaa
arpl
or
rcr
lcall
int
imul
rcrb
jle
cmp
and
bound
repz
frstor
push
push
fmul
cmp
jmp
push
fs
dec
int3
push
push
test
movsl
pop
jle
scas
mov
inc
cmc
add
outsb
xlat
cmp
and
cmp
or
and
mov
jno
jne
lcall
mov
sub
loope
aam
dec
ret
scas
push
mov
mov
add
push
jmp
mov
cli
jecxz
push
push
mov
rcrb
pop
xor
insb
jle
das
mov
sub
insl
pop
and
add
popf
fwait
xchg
push
inc
push
call
gs
push
jns
ljmp
jmp
and
push
jmp
dec
mov
movsl
int3
sti
dec
sbb
mov
or
sbb
xchg
std
in
es
idivl
mov
adcl
outsl
add
push
or
mov
mov
jb
out
push
xchg
in
sub
popf
pop
push
xor
or
pop
jo
and
push
xchg
mov
or
hlt
lods
xchg
push
push
pop
fstps
js
cmp
jb
pop
adc
push
add
sarb
sub
mov
popa
movsb
pusha
out
jmp
dec
sbb
aad
or
loope
sahf
inc
add
mov
xor
rorl
or
push
xchg
sbb
lea
daa
mov
sub
mov
push
push
cmpsl
outsb
dec
inc
popa
shrb
repnz
mov
subb
mov
std
mov
aaa
shl
sub
jge
pop
xchg
sub
stos
leave
cld
loop
push
lret
cld
and
mov
mov
jb
into
sub
xlat
test
or
ja
sbb
push
inc
and
cmpxchg
push
outsb
subb
cltd
jb
jae
insl
int
sub
jb
cltd
mov
push
cmp
jmp
jle
addr16
aad
lods
inc
jge
jmp
gs
test
pop
jg
movsb
shll
mov
pop
int
mov
cmp
clc
mov
jl
lret
call
sldt
outsb
dec
mov
and
mov
ret
mov
push
js
cmp
push
adc
xor
mov
pop
leave
test
flds
mov
push
mov
fisubrl
test
cmp
sarb
test
int3
cmp
cmp
movl
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
pushl
push
call
cmpl
jb
or
movl
sbb
mov
xor
sub
mov
orl
add
cmp
je
movl
push
jmp
xorl
mov
add
mov
addl
sub
movl
mov
andl
xor
addl
add
movl
cmp
movl
jb
mov
mov
sub
xor
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
inc
xor
sbb
add
or
add
imul
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
and
mov
sub
cmp
movl
ja
xor
add
add
mov
orl
jmp
xchg
dec
in
in
test
out
push
scas
push
icebp
cli
bnd
jo
jle
add
jle
call
nop
sub
icebp
insl
xchg
jns
rcll
push
add
mov
pop
and
adcb
mov
lret
push
and
pushf
sub
addl
cmp
out
cmp
dec
ss
addr16
adc
mov
movb
nop
shrl
dec
jecxz
adc
out
cmp
cwtl
jb
sub
imul
pop
arpl
pop
xor
mov
dec
sbb
cmp
mov
push
ret
leave
addr16
jo
mov
ret
adc
pop
nop
loop
inc
xor
add
out
ljmp
sbb
mov
incl
shlb
mov
jp
cmp
lahf
ljmp
push
cmp
sar
add
mov
dec
inc
cwtl
adc
into
test
subb
negb
xchg
out
pop
ss
and
cmp
xchg
dec
sub
imul
lock
xor
mov
gs
cwtl
inc
fwait
mov
jb
xchg
testl
fisubl
sbb
int
ljmp
add
mov
mov
aas
jle
mov
sub
test
xchg
lret
push
fstl
mov
enter
aad
mov
mov
mov
pop
cli
or
dec
outsb
pop
push
arpl
test
out
push
imul
cld
inc
outsl
enter
or
outsl
lcall
add
aam
into
cltd
xlat
cmp
pop
mov
mov
ret
push
test
lea
cmp
sbb
lret
out
mov
enter
jl
dec
mov
dec
test
pop
dec
movsl
sarb
push
outsl
mov
enter
int3
xlat
outsb
and
xchg
mov
inc
into
add
mov
ja
jp
mov
ds
icebp
fs
call
mov
scas
xchg
addl
or
sub
mov
push
lret
xor
push
xchg
pop
dec
lret
inc
aas
inc
xchg
ds
fadd
and
subb
jp
loopne
mov
inc
xor
mov
pop
fadds
lds
add
mov
repz
xor
mov
push
jno
arpl
lcall
enter
and
notb
push
ljmp
xchg
repz
ljmp
mov
add
mov
xor
repz
popf
mov
fidivrl
sti
dec
mov
jno
mov
inc
into
cmp
mov
adcb
cmc
or
xchg
mov
stos
pop
loopne
adcl
mov
push
call
rorl
mov
cmp
push
sbb
ss
cmp
push
xchg
test
add
popf
imul
pop
sub
mov
pushf
imul
adc
pushf
je
xor
cmp
lea
aas
cmpl
or
rcrl
sbb
ljmp
int
test
mov
or
pop
mov
rorb
push
mov
jno
stos
jl
jle
cmpsl
je
add
add
movsb
cwtl
adc
mov
mov
xor
jo
shll
and
stos
mov
loope
stc
pop
dec
rclb
insb
addr16
xor
push
add
xor
mov
repz
loopne
add
pop
cld
mov
enter
mov
ret
in
or
add
inc
mov
scas
out
lret
pop
jns
xorl
jnp
xor
adcl
add
jmp
mov
subl
mov
mov
sub
mov
xor
xor
or
add
adc
jmp
test
jne
xchg
in
in
jecxz
lahf
lahf
cld
jle
jo
jle
sbb
xchg
xor
dec
pop
stos
ljmp
or
jbe
cmp
int3
cwtl
push
xchg
mov
lcall
inc
leave
ficoml
int3
shll
dec
add
incl
lcall
test
lret
fcmove
into
push
aam
or
xor
sub
and
hlt
in
mov
fnstsw
insl
rclb
mov
jg
push
mov
dec
mov
out
aaa
pushf
subb
mov
pop
repnz
dec
iret
enter
ljmp
out
lods
pop
jp
lods
mov
pop
daa
add
dec
test
mov
test
dec
les
add
add
cmpb
mov
jg
mov
jg
popa
or
arpl
mov
popf
out
mov
lea
xchg
adc
add
imul
inc
xor
fiaddl
out
xchg
lahf
xor
popf
aad
dec
dec
int
imul
xlat
inc
dec
adc
das
ljmp
fcoms
out
lods
hlt
mov
int
push
je
dec
cmpsl
and
inc
lahf
insb
xchg
cld
lret
imul
pushf
xchg
and
addr16
mov
add
sti
xor
jno
aaa
in
mov
add
jb
pop
cltd
push
lahf
fisttpl
es
dec
shrb
bound
cmp
mov
xchg
inc
in
push
inc
xor
push
fldl
fwait
stos
rolb
test
or
pusha
jbe
pop
les
pop
in
aaa
clc
out
test
sub
push
and
fwait
inc
es
cwtl
cld
imul
sbb
sbb
loopne
dec
cs
cltd
xor
movsb
mov
push
pop
add
sbb
cmp
xchg
lret
gs
fs
pop
cli
adc
addr16
mov
push
jmp
and
mov
jp
pop
call
insb
gs
imul
xlat
adc
jae
lea
fs
xor
and
mov
cmp
aaa
cli
pop
dec
push
or
and
xor
jbe
ret
adc
rolb
sbbl
clc
mov
xchg
push
ret
leave
xor
push
aad
rorl
pop
mov
ficoms
pushf
insb
jmp
in
inc
sbbb
out
repnz
pop
xor
cli
pop
aas
inc
cmp
rclb
sbb
add
sbb
inc
popa
push
ret
stos
outsl
push
mov
shl
jb
xchg
sbb
xchg
and
lds
sub
sub
int
inc
out
mov
jp
xor
movsb
mov
push
mov
push
repnz
fistps
pop
and
cltd
cmpsl
xor
xor
hlt
pop
xchg
nop
mov
xchg
xor
lea
push
fstpl
notl
sbb
cmp
hlt
pop
popf
pop
std
in
dec
xchg
into
push
imul
sbb
pop
enter
xchg
xchg
mov
mov
loopne
push
mov
jae
lcall
mov
inc
sarb
push
loope
ja
xchg
lcall
push
inc
pop
xorl
clc
rorb
mov
inc
cmc
sub
sbb
popf
jne
and
hlt
mov
pop
cmp
adcl
test
adc
aam
and
mov
adc
stc
or
adc
pop
pop
in
movsl
sub
aad
daa
mov
adc
xchg
xor
sbb
and
pushf
sub
rorl
scas
xlat
xor
mov
mov
xorl
sub
movl
cmp
movl
ja
mov
mov
movl
jmp
sub
mov
add
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
call
jmp
xor
xor
xor
add
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
push
call
cmpl
jb
add
imul
mov
mov
jmp
aas
andl
push
repnz
pusha
mov
add
jle
jns
jle
pop
push
add
push
in
add
fstpl
ss
xor
dec
jmp
cmp
pop
mov
mov
in
pop
xor
mov
icebp
insl
inc
aaa
push
call
xlat
je
dec
insb
test
stos
adc
mov
pushf
shl
add
insl
jo
fadd
pop
lret
jno
fs
jb
push
mov
out
std
fucomip
lret
fwait
cmpsl
mov
push
aaa
fmull
lret
cmp
in
dec
xchg
test
cmp
arpl
jecxz
nop
scas
bound
pop
es
enter
jmp
pop
mov
sub
xor
and
add
hlt
nop
mov
addl
repnz
xchg
cld
test
or
daa
xor
in
xchg
sub
jg
setne
lret
mov
scas
jae
cmc
jb
sub
adc
cmp
fistpll
lock
ss
or
xchg
shll
adc
xlat
nop
in
dec
aad
lcall
icebp
jo
sub
mov
inc
adc
mov
lahf
icebp
push
test
cmp
mov
xchg
dec
and
cmpb
mov
adc
mov
js
mov
xchg
das
cmp
iret
jmp
inc
rcr
lret
clc
jg
jmp
into
push
repz
cld
test
and
orb
sbb
or
enter
jbe
cmp
sti
dec
add
push
pusha
js
test
pop
mov
push
sub
xchg
sbb
push
xorb
lahf
aad
ret
iret
push
mov
xor
arpl
xchg
rorb
or
sbb
call
out
es
or
je
mov
dec
cmpsb
shll
pusha
mov
in
or
mov
inc
roll
inc
mov
inc
rclb
cmp
cmp
arpl
push
mov
mov
lcall
nop
dec
fcmovnb
pop
movsb
sbbl
sbb
jmp
out
jmp
xor
jae
movsl
outsl
scas
sahf
inc
xchg
jo
adc
lret
or
cmp
cmpsb
mov
add
and
outsl
roll
cmp
out
cmp
cmpsb
jp
cmp
cmc
or
test
in
mov
pop
jp
jns
mov
sbb
ljmp
mov
leave
mov
or
pusha
leave
out
addb
xor
imul
std
sbb
andl
mov
in
adc
dec
aad
shl
seta
add
fiaddl
popa
mov
mov
jo
and
das
leave
arpl
stc
call
pop
movaps
in
lret
rolb
fwait
ljmp
cmp
adc
dec
cmp
jmp
and
push
pop
pop
cmpsl
jecxz
inc
insl
or
aam
repz
xor
jg
ret
les
shll
test
push
lahf
ror
sbb
test
mov
xor
fwait
aad
sbb
cli
xor
sub
cld
and
test
ret
hlt
xor
push
pop
loope
sbb
call
insl
in
mov
jno
jmp
jb
sbb
les
jg
xchg
rorl
sub
push
mov
gs
or
cmp
mov
aad
push
push
or
and
ja
xchg
rclb
cs
dec
lcall
pop
add
out
add
cmpb
bound
fidivs
add
cltd
add
mov
sbb
add
push
ja
mov
jmp
jmp
rorl
aam
pop
rcll
xchg
mov
jg
or
xchg
jo
jle
das
test
ljmp
ret
or
push
lret
daa
pop
je
lcall
cmpsl
dec
push
pusha
sub
in
mov
sbb
dec
push
mov
push
pop
lea
enter
jb
mov
pop
mov
in
ds
ds
add
pop
inc
cmp
scas
sub
insl
mov
repnz
imul
xor
jmp
movsb
pop
mov
insb
in
mov
rorl
pop
jae
jecxz
fists
adc
mov
movsl
mov
xor
sub
rorl
push
add
rorb
scas
out
pop
cmp
mov
mov
repz
shrl
inc
cmpsl
add
rcrb
fldt
adc
icebp
filds
fsubs
fwait
cld
in
xchg
loop
outsl
ror
mov
dec
cs
ret
mov
sbb
mov
xor
sahf
loope
pop
mov
cmpsl
xlat
pop
add
cs
push
xchg
loop
imul
jb
lcall
push
dec
adc
cmc
fsub
xor
lret
push
xor
jge
cmpl
cmp
dec
sahf
and
mov
sbb
aas
mov
fs
repz
mov
test
sbb
adc
pop
mov
bound
xor
data16
in
mov
push
lret
push
dec
rcrb
roll
mov
in
imul
xor
jge
popa
push
sub
mov
jp
push
call
inc
neg
inc
sub
cmp
gs
pop
xchg
push
aam
lea
stc
sub
pop
arpl
cli
and
fists
pop
mov
pusha
push
mov
lods
loop
scas
sbb
mov
push
pop
fcomip
dec
jb
pop
mov
aas
aaa
test
sbbl
cli
std
imul
mov
add
test
and
test
ret
subl
cmp
cwtl
mov
xor
push
jno
js
pusha
insb
jbe
int
sbb
push
cmpsl
cmpsb
push
sbb
insl
or
mov
xor
scas
popa
sti
push
xor
push
imul
cltd
add
xor
insb
les
mov
mov
xchg
mov
lods
fsubs
fwait
cmpsb
ja
push
or
xor
adc
xchg
lds
dec
cmp
push
push
mov
push
insb
xor
lea
xchg
out
xor
cwtl
sar
sub
fadd
lcall
adc
jno
xor
dec
in
xchg
lcall
repnz
lock
bswap
arpl
pushf
adc
mov
pop
lcall
mov
inc
mov
paddq
sub
xchg
xchg
sbb
rcll
mov
adc
mov
add
cmpsl
cwtl
cmp
and
rcr
les
nop
mov
mov
and
dec
cmp
or
icebp
rcl
mov
fstl
push
jle
mov
fsubs
pusha
outsb
movd
or
cld
sbb
dec
cmp
fisubrl
in
inc
lahf
jmp
or
push
orl
inc
lea
cmpsb
pop
xchg
jo
xchg
repnz
mov
mov
and
std
jge
bound
xor
shrb
adc
insl
aad
lods
loopne
mov
mov
or
movsb
fsubrs
ret
out
cmp
orb
repz
mov
pusha
mov
mov
shll
cmc
jp
adc
fidivrl
xor
push
lcall
inc
loope
pop
arpl
dec
popa
jae
ds
sti
cmpsl
pushf
inc
xchg
mov
in
xor
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
jmp
xor
outsl
jne
std
inc
sbbl
jl
jge
loop
jle
jo
jle
es
mov
je
xchg
test
adc
add
jae
repz
lcall
sub
adc
jl
mov
mov
mov
dec
add
cmp
jmp
movsl
jnp
cld
mov
sub
leave
aam
push
loop
sahf
repz
stos
cwtl
mov
push
aam
adc
jle
negl
insl
les
cli
pop
xor
sub
xor
je
dec
pop
mov
cs
inc
sub
cmpb
sbb
adc
push
push
das
mov
sbb
and
mov
sub
pop
cmp
sub
int3
inc
mov
xchg
mov
jo
lret
inc
std
mov
pop
lods
fcomi
repnz
dec
gs
idiv
pusha
aaa
mov
hlt
test
and
das
push
out
psadbw
ljmp
inc
adc
cs
jmp
inc
inc
orl
clc
or
js
daa
sbb
mov
mov
mov
les
push
test
cwtl
mov
add
test
clc
das
iret
sbb
dec
repnz
sti
pop
push
nop
lret
cmp
movl
jo
dec
aam
cwtl
insl
ret
out
push
push
push
xchg
scas
loop
fstpl
sbb
and
push
lds
out
fstps
test
dec
xlat
or
cltd
and
and
jge
sub
xor
int3
add
popa
daa
mov
xchg
fstpt
xchg
subb
mov
push
push
int
testb
or
cmp
jp
inc
enter
mov
icebp
mov
or
lret
jne
loopne
es
push
pop
sub
cltd
add
sub
jo
jle
xchg
mov
sub
dec
jmp
cld
in
push
pop
addb
add
clc
or
cmp
pop
cmpl
pop
bound
dec
hlt
or
fs
add
jg
mov
push
add
ret
dec
jg
cmp
fisubrs
jp
fsubp
das
rcl
insl
cld
sbb
stc
or
push
pop
test
xchg
aas
ljmp
xchg
jno
test
lock
ljmp
or
jge
negl
pop
sub
lret
bt
xor
inc
ljmp
cltd
xor
test
push
daa
mov
mov
lcall
xchg
dec
rolb
movsl
dec
jle
mov
cli
je
int
xor
or
fisubrl
mov
test
nop
xchg
out
leave
cmc
stc
mov
sbb
test
inc
fnstcw
cmp
prefetch
or
adc
cmpsb
dec
inc
sub
test
xchg
cmpsl
ss
mov
xor
test
adcl
xor
popf
mov
clc
dec
mov
cmpsb
icebp
leave
cwtl
sub
push
pop
movsl
add
data16
loop
and
cltd
sub
outsb
inc
or
xchg
repz
push
sub
mov
fadds
loopne
dec
outsl
or
sub
or
push
hlt
xchg
gs
in
ja
pop
mov
or
pop
push
mov
mov
clc
sti
daa
sti
push
cltd
in
and
aaa
cmp
jae
incl
dec
mov
loopne
nop
aam
inc
push
xor
adc
push
sub
and
orl
mov
nop
adc
mov
imul
mov
xchg
out
popf
adc
jbe
mov
dec
inc
int
cmp
pushf
pop
cmp
fistpll
fimull
add
add
mov
mov
xor
xor
jmp
test
rolb
dec
pop
repz
mov
lret
mov
jo
jle
test
or
jg
push
jge
rorl
popf
mov
dec
adc
loopne
repnz
xchg
push
mov
sbb
jg
sarl
mov
in
cmp
dec
sti
lods
mov
cs
je
xchg
sbb
add
cmp
popf
or
and
lret
push
icebp
sub
fisttpll
sub
dec
or
test
cmp
mov
popa
lahf
scas
aaa
mov
cwtl
pextrw
jo
movsb
xchg
je
and
mov
cmp
or
data16
lret
dec
aad
test
hlt
push
fcoml
cmp
xorl
orb
sahf
cli
iret
out
jp
xor
ss
repnz
roll
insl
sub
pop
mov
cwtl
add
movsb
cmp
push
push
arpl
inc
test
test
test
jle
xlat
fmull
aas
pop
call
das
mov
mov
jg
inc
ja
sbb
pop
adc
xchg
sub
repnz
sbb
dec
add
stc
and
mov
mov
cmp
popa
pop
mov
mov
cmp
xor
out
xchg
std
push
fdivrp
shrl
aam
pop
lds
adc
mov
ret
inc
push
dec
or
scas
mov
mov
jmp
js
gs
fldl
mov
out
mov
inc
mov
fwait
out
stos
sub
in
xchg
das
call
in
add
inc
mov
mov
add
pushf
xchg
dec
xchg
cltd
mov
fwait
pop
addl
xor
push
xchg
inc
or
push
imul
call
inc
mov
incl
and
push
jmp
aas
out
pop
dec
add
or
iret
aad
add
push
ljmp
jae
cli
and
push
lea
and
pop
inc
leave
outsl
dec
lret
xchg
pop
push
std
aad
stc
jne
js
sbb
or
sbb
add
xchg
ret
sub
lods
int3
rclb
pop
jo
pop
out
hlt
xchg
inc
inc
inc
mov
push
mov
jne
scas
lcall
cs
add
push
movsb
jo
shll
hlt
push
repnz
add
nop
out
mov
cmp
hlt
jecxz
jb
add
aas
test
jle
sahf
jbe
insb
mov
test
shrl
xor
cmp
jmp
inc
add
push
mov
adc
inc
aas
mov
xchg
out
dec
loop
mov
int
xor
lock
jnp
xorl
push
in
sub
push
arpl
push
in
test
ret
or
lods
pop
mov
das
xchg
dec
mov
aas
ljmp
cld
sub
jbe
pshufw
cwtl
dec
inc
call
sbb
out
rcll
cltd
mov
bound
pop
rcrb
mov
mov
push
pop
mov
fdivrs
or
pop
mov
clc
ds
mov
aam
jp
mov
sub
dec
ja,pn
lock
mov
ds
or
scas
lahf
jb
xchg
fdivs
in
xchg
jmp
int3
test
push
in
mov
and
shll
dec
add
aad
push
sub
xor
gs
ds
ret
mov
sbb
bound
rcrl
adc
and
or
call
jnp
scas
lods
sbb
cmp
pop
push
mov
mov
je
mov
cmp
xor
shlb
sub
clc
inc
out
adcb
shr
adc
add
dec
mov
rcrb
test
jo
jle
fs
sub
es
inc
aam
inc
cmpsb
xchg
sbb
and
in
push
inc
fcoml
js
sbb
dec
and
aaa
imul
das
popf
mov
stos
iret
movsb
add
out
lods
cmp
mov
sub
dec
mov
aad
cmc
and
movsl
mov
push
daa
inc
dec
jle
repz
adc
hlt
xchg
and
push
mov
cmp
and
mov
and
shl
cmpsb
popa
jg
sub
ss
inc
mov
negl
inc
loop
insl
test
and
ret
push
jb
aam
arpl
pop
scas
mov
dec
push
xor
jmp
mov
shr
fiaddl
sub
adc
adc
add
mov
ja
call
shr
rcrl
mov
sub
mov
add
pop
fistpll
cmp
imul
mov
ja
xor
mov
lret
adc
adc
xchg
stc
jge
cwtl
xor
cmp
into
adc
pop
jne
xor
or
inc
add
movsl
xchg
outsl
sarb
sub
dec
add
sahf
les
sahf
jmp
jnp
dec
pop
loope
in
adc
sub
and
pushf
jmp
sub
mov
mov
xorl
out
jp
fwait
jl
jg
pop
xchg
xchg
or
or
addr16
test
out
int
add
xchg
pop
add
stc
or
mov
and
orb
pushf
mov
cmp
jae
mov
clc
push
popa
mov
sbb
inc
shl
stos
stos
push
nop
xchg
jecxz
push
sub
ds
xchg
fs
and
mov
fs
aaa
out
in
scas
push
inc
adc
jecxz
cs
mov
lds
adcb
mov
jno
mov
xor
ljmp
popf
arpl
and
dec
movsl
mov
adc
es
mov
call
insb
cwtl
std
lahf
repnz
adcl
sub
inc
adc
daa
jno
and
lahf
add
in
or
out
mov
xlat
mov
xchg
scas
or
mov
or
inc
pusha
fcmovnb
pop
insl
inc
xor
xchg
fisubs
and
add
xor
repz
scas
shl
mov
inc
xor
inc
ljmp
fldenv
stos
clc
out
sbb
testl
and
add
xchg
test
xor
cmp
shr
ret
int
cmp
aad
jecxz
adc
inc
cltd
jle
push
loop
repnz
xor
jg
cmp
lds
sbb
push
leave
or
daa
jl
mov
lret
mov
stos
sbb
test
xchg
inc
xchg
dec
xchg
popa
ljmp
dec
dec
inc
xor
and
xchg
push
push
inc
mov
jnp
dec
loopne
cmp
mov
mov
out
lea
sbb
fisttpl
sti
pop
out
jmp
ret
icebp
in
add
stos
mov
out
sub
out
push
mov
cltd
insl
cmp
push
stc
ret
pushf
insl
js
dec
mov
dec
dec
mov
in
sarb
push
or
popf
cmp
test
hlt
inc
sbb
mov
add
xchg
mov
mov
test
jl
fisubrl
mov
pop
imul
cmp
daa
dec
stos
arpl
nop
xor
pop
cmpsb
nop
sub
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
jmp
sub
inc
dec
idivl
imul
rclb
jle
fdiv
add
or
jl
rcr
mov
fs
sbb
dec
lock
lret
sbb
cmpsb
rorb
inc
pop
xchg
test
clc
in
js
push
fstpl
jne
xchg
dec
iret
sbb
addr16
fldcw
mov
pop
int3
inc
ret
out
mov
call
lods
fistpll
sbb
pop
pop
ret
fcoms
push
mov
ret
and
cwtl
jae
dec
push
sub
iret
sub
repz
sbb
lret
jne
cmpsl
aam
push
push
into
mov
xchg
in
pusha
and
pop
fstpl
cmp
jg
mov
push
lret
push
jne
mov
fldenv
jno
inc
ja
dec
daa
dec
add
jne
adc
dec
scas
shlb
sub
sub
xchg
fs
test
cltd
pop
shr
jno
pop
test
sarb
mov
lahf
lods
in
rolb
jae
push
clc
pushf
sahf
and
or
pusha
cmp
das
or
sub
je
sbb
dec
addl
cmpl
iret
push
fnstcw
jle
xor
xor
jns
pop
mov
ret
test
jno
loopne
and
jne
imul
out
push
addl
in
xor
outsl
mov
jo
jl
inc
stos
dec
push
xlat
xchg
js
pop
add
fidivs
subl
mov
adc
xor
cld
jge
adc
cwtl
ja
push
dec
ffree
shl
in
xchg
cwtl
dec
ret
push
jb
add
pop
mov
ret
out
lret
daa
pop
loop
stc
xchg
pop
pop
push
es
inc
push
or
iret
pop
insl
mov
test
int
cltd
loopne
pop
aas
divb
testb
inc
jecxz
jg
jbe
int
or
popf
push
mov
cli
xor
outsb
mov
out
mov
add
outsl
or
mov
and
cs
xchg
mov
jns
xor
mov
les
inc
lcall
push
jmp
mov
jle
jo
out
xchg
mov
rolb
or
into
test
jg
je
add
repnz
stc
and
lods
dec
xchg
jno
enter
adc
add
mov
fdivr
aam
ficomps
ja
sbbb
outsl
xchg
shlb
addb
std
xor
popf
xor
mov
lods
mov
repz
cmp
sbb
fcompl
pop
push
xchg
mov
sub
lahf
lea
add
push
imul
test
or
or
dec
decb
push
fcompl
movsb
nop
fsubrp
sub
out
roll
outsb
mov
roll
sarl
mov
mov
push
lds
arpl
ljmp
xor
in
sbb
mov
cmp
xchg
mov
pop
inc
lea
mov
mov
cmc
scas
popa
mov
mov
or
stos
loope
in
sbb
cmc
inc
fdivs
mov
loop
mov
mov
aas
mov
ror
sub
pusha
push
jp
insb
mov
insl
pop
mov
inc
fnstsw
push
out
xchg
pop
popa
xor
into
aaa
inc
mov
fimuls
add
aad
mov
pop
jge
xor
sahf
scas
loop
or
mov
xor
mov
mov
mov
leave
cmpsb
jecxz
inc
mov
fiadds
and
xchg
out
mov
in
cli
ds
mov
or
xchg
or
ds
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
jmp
and
mov
mov
jne
punpckhwd
xchg
cmp
xchg
jle
jo
jle
lret
adcl
idiv
test
imul
fists
cwtl
mov
cmp
rolb
lods
sub
fnstcw
testb
sarb
divb
pop
ret
mov
clc
pop
and
push
jo
adc
scas
stos
and
mov
pop
jbe
aam
fmull
int3
add
popf
push
mov
mov
xor
inc
ljmp
hlt
lods
jnp
inc
cli
jo
nop
in
ljmp
sbb
jmp
inc
push
sub
aaa
jl
jae
cmpsb
mov
test
jnp
jg
mov
lock
sub
mov
jg
or
jp
push
dec
mov
jg
in
mov
push
mov
fcomp
pop
das
dec
xor
jb
inc
clc
aad
xchg
jge
out
push
sbb
sbb
mov
stos
dec
rclb
add
and
xchg
push
jno
mov
mov
dec
inc
pop
dec
add
fsubrs
sub
xchg
lock
sub
repnz
das
les
jne
ss
or
cmp
sbb
jp
xchg
dec
jle
mov
push
hlt
adc
xchg
imul
mov
xor
ja
jo
daa
xor
inc
push
add
data16
push
pop
stc
test
mov
cmp
inc
insl
mov
jno
jecxz
std
xlat
cmp
push
adc
lock
shlb
scas
push
adc
xchg
or
fnsave
or
xor
pop
pop
and
adc
repz
lock
mov
mov
dec
lock
in
mov
mov
xchg
mov
cmp
nop
cltd
adc
enter
mov
addr16
jne
fisubrl
sbb
sub
insl
mov
in
mov
xchg
inc
fmull
and
movl
int3
push
loope
bound
nop
sub
cmp
xchg
out
divl
pop
je
sub
test
jbe
insb
cmp
ja
popa
dec
add
adc
pop
push
ficoms
aaa
lret
mov
pop
out
and
and
aam
push
call
mov
xlat
insb
mov
fwait
pop
jns
adc
in
dec
pop
jns
nop
and
dec
int3
xchg
and
sbb
and
fdivp
cmp
push
in
adc
mov
loope
stc
mov
mov
lods
or
insb
cmpsb
mov
test
mov
or
icebp
xor
ret
inc
cmp
js
cmc
add
mov
fcomps
out
dec
pop
sti
pop
mov
fsubl
aaa
arpl
xchg
jl
xchg
dec
sbb
xchg
stos
jae
or
dec
inc
mov
je
repz
jne
dec
cmc
jecxz
into
jmp
ljmp
sbb
xor
adcb
cmc
mov
fsubl
inc
in
rclb
lods
test
aaa
inc
pop
cmpsl
jp
cmpsl
xchg
sbb
inc
jp
fisubrl
daa
cmp
das
stos
cmp
mov
cmp
gs
ds
or
jle
in
bts
cmpsl
mov
pop
mov
aaa
jne
inc
xor
das
mov
xor
mov
sahf
aaa
test
leave
push
sbb
inc
jne
jae
rcr
pop
mov
js
add
mov
mov
jge
lret
dec
mov
or
mov
clc
dec
or
or
mov
mov
and
dec
inc
test
cmp
nop
bound
hlt
sub
rolb
cmp
insl
adc
push
mov
pop
or
inc
xchg
jno
sub
xor
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
jmp
push
and
jl
jge
movsl
sbb
inc
xchg
jle
jns
jle
and
pusha
pushf
xchg
push
mov
scas
lret
data16
xlat
ds
lods
adc
movsl
imul
mov
mov
sub
imul
out
aam
or
xor
xchg
roll
ja
pop
mov
push
pop
repz
lret
sahf
call
xchg
cwtl
insl
dec
jmp
movsl
jmp
jge
iret
cmc
push
jbe
push
dec
and
pop
pop
jae
sub
stos
aas
jns
xchg
rcrb
rcl
add
jne
and
pop
sbb
sbb
mov
cld
pop
xchg
movsb
mov
rcl
call
mov
xchg
xor
jnp
mov
lahf
movsb
jecxz
sbb
int3
jne
sbb
push
popa
bound
rclb
outsl
mov
orb
inc
leave
sbb
pop
inc
mov
fwait
xor
cltd
hlt
sbb
and
test
mov
cmp
out
nop
arpl
push
sahf
cwtl
pushf
movsb
push
bound
mov
pop
lret
cmp
add
jo
mov
pop
enter
mov
or
fiaddl
rolb
xchg
fucomi
and
popa
xlat
pop
dec
mov
inc
iret
adc
adc
push
mov
lds
jg
mov
out
pop
mulb
jg
sbb
pop
jbe
cli
stos
xor
packsswb
cmc
ljmp
cmpl
mov
out
xor
sahf
jmp
div
push
in
push
test
fnstenv
mov
subl
inc
repnz
mov
add
jae
test
or
insl
out
nop
data16
mov
scas
cmp
inc
add
fmul
test
cmp
jnp
jb
pop
arpl
sbb
mov
push
fiadds
ret
fwait
imul
mov
inc
inc
mov
pusha
or
xchg
mov
sub
hlt
xor
mov
dec
stos
test
mov
ret
cmpsb
mov
das
mov
scas
lret
lcall
sbb
cmp
pop
pushw
xchg
mov
loope
nop
cmp
das
push
sbb
adc
mulb
icebp
rorb
sub
mov
and
xor
cli
add
int
mulb
jl
sub
fwait
jmp
push
dec
outsl
nop
push
cmp
jecxz
dec
lret
stc
insl
and
cld
ret
xchg
jns
stc
dec
jo
cli
cmp
ret
xor
enter
mov
mov
adc
pop
sbb
pusha
push
into
add
pop
sbb
mov
cwtl
stos
out
sahf
xor
or
pop
movsb
fs
shl
in
push
scas
push
jg
call
rorl
or
inc
inc
xor
cltd
xchg
test
xchg
xorb
ss
xchg
orl
or
cltd
nop
xor
mov
shll
inc
mov
sti
aaa
lock
inc
ljmp
stc
fprem
arpl
or
adc
add
movsl
jae
vcvttsd2si
or
xchg
push
and
mov
fs
lods
push
sub
js
cwtl
ror
sbb
pop
je
fcompl
push
inc
pop
mov
or
fmuls
mov
fwait
jge
pop
test
icebp
stc
mov
fcomi
test
adc
or
xor
mov
fstp
dec
rcrb
test
outsb
adc
cli
pop
mov
fistl
repnz
loopne
stos
je
loop
addr16
mov
enter
vpmovsxbd
repnz
push
and
rolb
rorl
scas
xlat
mov
xor
sub
mov
mov
xor
add
imul
mov
jmp
pop
in
add
insb
xor
fcmovb
or
jle
jo
jle
call
dec
scas
jno
mov
les
xor
mov
and
js
mov
out
out
xlat
ss
mov
mov
leave
dec
js,pt
ret
and
sub
jecxz
jo,pt
ret
negl
call
xchg
sahf
loop
add
mov
popa
iret
adc
hlt
jg
dec
lea
or
sub
out
pop
push
xor
pushl
inc
dec
shl
inc
pop
and
mov
ret
cmpsl
mov
mov
pop
push
fs
flds
lret
repz
cmpsl
subl
fwait
mov
icebp
lds
subl
pop
lret
jbe
std
movsl
enter
and
je
idivb
dec
sbb
mov
mov
outsl
cld
xlat
ja
scas
xor
push
inc
add
outsb
movsl
add
lds
jmp
pop
outsb
inc
cmp
fisttpll
add
ret
je
sub
loopne
push
sbb
iret
xchg
fisttpl
ds
dec
fwait
insb
push
mov
mov
iret
clc
jae
insl
push
cmp
fldcw
fisttps
xchg
pop
test
mov
push
jae
or
dec
xchg
pop
into
sub
je
add
cltd
add
push
movsl
ljmp
icebp
hlt
mov
xor
pop
sbb
ja
mov
cmp
cmp
in
and
les
mov
in
mov
push
jno
pop
xor
ljmp
mov
mov
sub
daa
fldt
mov
cwtl
fdivr
nop
repz
ljmp
data16
mov
not
or
add
int
mov
push
arpl
mov
xor
mov
rcl
mov
test
ss
jae
pop
sar
jno
cld
sub
lret
xor
out
rcr
cmp
imul
pop
iret
adc
adc
in
adc
mov
fildl
das
add
mov
out
mov
jnp
fwait
push
fnstsw
scas
add
inc
jle
cld
mov
test
inc
and
jge
ljmp
jg
inc
sbb
stos
sub
stos
jb
andl
inc
pop
movl
repz
xchg
loop
out
cmp
cmp
xor
adc
aas
mov
pop
sbb
mov
inc
lahf
imul
mov
adc
sub
mov
adc
push
sbb
lea
push
mov
pop
insb
sub
out
aaa
arpl
stos
into
push
mov
mov
dec
bound
pop
cmpsb
jge
xlat
adc
mov
cmpsl
dec
cwtl
cmp
ret
or
xor
cwtl
dec
ss
cwtl
mov
loope
imull
lds
mov
stos
cmp
jbe
cmp
lods
inc
mov
ret
fsubs
xor
or
add
xor
inc
mov
dec
jns
push
jge
xchg
push
sub
imul
inc
inc
sub
aam
lret
out
rcll
in
repz
mov
xchg
sub
nop
push
add
call
xor
cs
dec
in
mov
andl
lods
sub
xor
xor
outsl
lods
pushf
gs
sbb
in
jbe,pt
and
stos
mull
and
mov
push
jno
push
jnp
jbe
adc
nop
cltd
push
or
add
jle
es
js
sub
push
cwtl
ljmp
fildll
xchg
mov
clc
inc
dec
cmc
mov
test
jno
mov
pop
adc
push
mov
xchg
xchg
sub
pop
inc
lahf
sbbb
rorl
xor
cmp
jbe
mov
mov
xor
add
imul
mov
jmp
pusha
jecxz
jge
icebp
insb
fwait
mov
sub
cmpsb
jle
jo
jle
mov
shlb
mov
aam
jbe
sub
xchg
stos
or
imul
dec
rorl
movsl
push
in
es
out
sahf
inc
and
mov
push
dec
fisttpll
movsb
loop
inc
stos
dec
mov
scas
sbb
or
xchg
inc
pop
adcl
mov
sub
adc
loop
cmpb
pop
pop
pop
shlb
or
mov
mov
xor
js
outsb
xor
outsb
jg
iret
dec
xchg
add
jb
add
jg
shrb
mov
call
xor
adc
cwtl
ljmp
push
orb
xchg
inc
adc
rclb
fwait
xor
rcrl
cs
adc
ss
inc
stc
mov
addr16
dec
mov
fsubl
inc
movsl
sub
repnz
jecxz
mov
cli
mov
mov
ret
mov
sub
pop
pop
repnz
sbb
mov
arpl
adc
out
adc
movsb
in
or
shl
hlt
popf
fs
adc
mov
jmp
aam
pop
jge
into
pop
and
jmp
adc
jnp
jnp
add
mov
jecxz
cmp
into
fsts
negb
dec
pusha
cmp
dec
sub
div
adc
nop
pusha
shrb
je
fst
adc
mov
adc
frstor
pushf
je
pop
xchg
dec
popf
test
mov
or
pop
xor
cmp
xor
fstpl
add
dec
sbb
mov
pop
mov
lret
repnz
sub
aas
xor
mov
adc
add
arpl
iret
incl
scas
push
ret
sbb
idivl
lods
or
adc
jle
mov
or
mov
insb
cmpb
ffreep
gs
repz
scas
or
ss
scas
push
sub
lock
push
fwait
insb
addr16
pop
lds
and
dec
outsb
cmp
shr
add
ljmp
repnz
ja
stos
test
inc
mov
adc
or
mov
outsb
mov
and
repnz
pusha
roll
mov
fcomps
xchg
jge
jle
lods
in
mov
mov
insl
xchg
dec
dec
pop
clc
sarb
jno
push
icebp
mov
jnp
not
jno
mov
pop
cmp
xchg
add
adc
sbb
adc
pop
mov
xlat
sbb
inc
inc
pop
ficomps
xlat
test
mov
xor
mov
outsl
mov
inc
sti
and
sub
in
fs
gs
inc
push
pop
data16
rorb
and
adc
and
jo
cwtl
or
cli
fisubrl
push
xchg
je
sbb
add
out
hlt
cmp
out
xchg
pop
ss
mov
xor
das
ret
sti
mov
and
mov
sbb
xchg
cmpb
bound
jb
outsb
ljmp
mov
xchg
cs
push
sbb
sbb
and
cvtps2pi
pusha
jo
push
xchg
jg,pt
outsb
fiadds
ret
xrelease
popf
push
dec
test
imul
ret
and
sarl
cmp
mov
push
jmp
mov
imull
lret
stos
mov
inc
dec
out
push
sbb
clc
add
mov
lea
jmp
outsb
xlat
shlb
mov
pop
out
pop
cmp
mov
jle
cmp
mulb
aas
lods
ret
adc
xor
sub
adc
push
loop
jle
cli
iret
in
ror
rorl
test
les
push
lret
ds
frstor
fcmovu
cmc
dec
adc
xor
sub
jns
fnstsw
pop
leave
out
mov
lcall
jo
divl
jae
or
es
jp
stos
stc
pushf
pop
mul
jg
xchg
addr16
dec
mov
lods
xchg
mov
pop
pop
sti
repnz
add
pop
pop
xor
mov
data16
scas
ja
int
sti
inc
xlat
mov
or
roll
dec
test
inc
outsl
fists
in
cmp
mov
push
mov
daa
sbb
sbb
push
cs
mov
add
pop
dec
fs
push
xchg
xor
mov
imul
iret
jbe
mov
out
jo
mov
inc
in
jnp
lds
ljmp
cld
rorb
sub
and
fidivrs
lods
dec
and
mov
jb
push
jl
adc
or
push
sub
cs
jmp
jns
jae
xor
push
out
push
shrl
sahf
mov
test
nop
andb
cmc
inc
adc
dec
lods
ja
push
into
mov
lret
lret
addb
call
or
pop
mov
aad
popf
ret
aad
push
and
int3
orl
xchg
jbe
push
pop
add
dec
xchg
pop
xor
add
ficoml
lcall
mov
sahf
sbb
dec
dec
repnz
inc
mov
mov
call
test
sub
mov
jecxz
ja
or
add
jnp
xor
jae
loopne
jo
nop
xchg
sahf
jmp
cmpsl
dec
lds
adc
aas
sub
mov
inc
cmpsb
outsb
xchg
pop
stc
movsb
xor
in
jge
inc
das
int
je
loopne
dec
adc
mov
dec
cwtl
sarl
pop
std
mov
add
scas
gs
jmp
daa
xchg
movsb
loop
mov
mov
rcrl
out
test
das
mov
and
or
push
push
outsl
mov
stos
cltd
clc
inc
lods
and
push
mov
cmp
fnstcw
out
inc
sub
jmp
xor
gs
sbb
xchg
and
mov
or
hlt
cwtl
xor
adc
pop
shl
mov
push
aad
das
or
mov
shll
or
aam
push
in
leave
bound
ss
push
movsl
std
mulb
mov
pop
mov
mov
add
int
and
xlat
int
and
int
insl
cmp
or
pop
xchg
push
imul
sahf
adc
lcall
xor
and
push
mov
inc
idiv
call
sbb
push
and
mov
imul
lret
stos
pop
or
mov
jns
dec
lcall
cmc
scas
inc
adc
mov
and
lcall
notb
adc
hlt
and
imul
push
cmp
test
xchg
fwait
push
or
xor
or
scas
add
jmp
mov
ds
enter
test
int
jb
push
in
dec
cld
or
arpl
mov
and
inc
push
lahf
out
jle
push
xchg
mov
aas
mov
mov
xor
mov
jmp
sahf
lcall
adc
and
adc
mov
xor
jle
jo
jle
xchg
aam
push
sub
xlat
sub
or
stc
cmpsl
dec
push
inc
adcb
scas
cmp
xchg
add
outsb
test
mov
mov
push
and
inc
mov
shlb
fcmovb
cmpsb
jnp
sti
test
xchg
adc
push
je
push
sbb
ds
aad
dec
or
jo
and
sub
popf
and
lock
mov
aaa
xor
cmp
xor
nop
insb
std
add
and
pop
push
leave
or
loopne
mov
imul
pop
gs
enter
out
out
pop
pushf
leave
xor
mov
jnp
loope
data16
addb
dec
pop
out
cs
mov
lock
pop
cwtl
pop
dec
pop
mov
popf
test
push
push
leave
lods
cwtl
cltd
cmp
aaa
mov
inc
jecxz
mov
jbe
cmp
scas
sti
mov
xor
mov
insb
arpl
in
xchg
push
push
sub
lea
loopne
inc
lds
add
andl
jle
adc
inc
cmp
jnp
or
aas
mov
adc
mov
push
mov
sub
xor
aad
mov
aas
add
hlt
or
or
xchg
cmp
push
test
push
xor
push
dec
daa
pop
mov
mov
push
xor
inc
out
and
cwtl
pushf
push
pop
std
dec
adcb
jno
sub
inc
shr
fwait
xchg
notl
not
imul
inc
or
sti
es
orb
inc
dec
sbb
add
cmp
stos
mov
adcb
mov
ret
add
fstl
and
insb
stos
pop
dec
mov
adc
or
iret
xor
dec
and
test
sar
cld
dec
ds
push
sub
fucomp
xor
fcmovnbe
aas
idivb
mov
push
jb
neg
repz
fnstcw
lods
jle
pop
sahf
add
sub
outsb
mov
rorl
cwtl
push
fmuls
aam
sub
xchg
or
cltd
mov
mov
mov
and
mov
je
sub
gs
bound
jecxz
or
push
inc
lds
sub
nop
sahf
adc
pop
stc
xor
bnd
jp
scas
push
inc
dec
into
movsb
pop
and
sbb
push
mov
xchg
adc
jg
inc
fwait
mov
outsl
and
inc
or
cmp
mov
add
mov
jge
jle
dec
out
mov
lret
or
xor
movsb
sbb
jae
cmpsl
dec
lcall
xor
stos
push
sbb
fldenv
int
adc
jo
das
pop
sbbb
lds
jno
into
rcrl
ljmp
mov
test
aam
add
sbb
jmp
mov
sti
jmp
fs
ret
push
dec
mov
ret
jne
pop
divb
mov
push
insl
push
cltd
xchg
cld
jnp
jbe
lds
sub
pop
iret
adc
lea
sub
test
push
lods
push
gs
xchg
gs
push
rorl
bound
lcall
mov
jecxz
adc
test
negl
cmp
or
testl
cmp
outsb
inc
mov
xor
shl
mov
in
push
shrl
arpl
push
sub
xchg
hlt
mov
push
or
or
inc
and
in
pop
lock
lea
inc
add
mov
dec
inc
xor
push
arpl
and
fcmovb
dec
mov
ss
jp
mov
cli
add
mov
mov
xor
add
imul
cmp
jbe
pop
jmp
mov
xchg
imul
jg
mov
jo
jle
nop
aas
loope
adc
dec
sub
sbb
dec
xchg
cltd
sbb
negb
dec
out
adc
aaa
lock
or
js
std
xor
mov
scas
or
push
lcall
or
in
fstl
sbb
in
rorb
imul
rolb
arpl
mov
inc
stos
sub
xlat
push
push
pusha
nop
ror
mov
arpl
sbb
pop
fcmovu
pushf
mov
nop
jp
arpl
adc
scas
lods
mov
cmp
jne
push
sti
in
fsubr
clc
add
push
cmc
clc
popf
lock
repz
mov
out
mov
mov
roll
xchg
sbb
popa
out
scas
and
xor
inc
pop
dec
hlt
mov
dec
cmp
sub
test
dec
xor
in
insb
outsb
aas
push
xor
xchg
cmp
and
add
push
jo
inc
push
pusha
mov
xchg
xchg
dec
je
sub
pop
xchg
rcl
mov
cs
push
cs
push
inc
sub
cmpsl
cmpsb
ret
add
bound
loopne
xor
add
push
sbb
add
hlt
clc
pop
iret
scas
cmp
movsb
hlt
stos
int3
or
xchg
repz
faddl
adc
cmc
sub
xor
sbb
das
fxch
stos
push
add
xchg
push
sahf
ret
push
out
ret
sub
sub
loopne
pop
mov
ret
add
jbe
dec
bound
lahf
dec
jle
pop
clc
inc
in
dec
jecxz
cli
imul
dec
icebp
xchg
fcompl
adc
push
mov
outsl
xchg
jo
push
jg
xor
mov
push
mov
icebp
dec
inc
pushf
mov
sub
xorb
aaa
sti
ss
in
xor
leave
mov
push
outsb
orl
mov
lock
scas
in
sbb
jns
fcoml
lret
and
jo
es
xor
movsl
add
movsb
mov
leave
cmp
cwtl
inc
add
jmp
xchg
les
xor
adcb
divl
sub
mov
cmp
stc
outsl
mov
mov
out
push
mov
test
into
std
lods
clc
adc
sbb
mov
cli
xor
ljmp
dec
mov
push
or
mov
rolb
mov
cmp
mov
insb
popf
loopne
cmpb
leave
cli
call
out
xor
pop
cmpsl
cmpsl
imul
out
inc
ja
push
scas
adc
loopne
hlt
inc
cmp
adc
arpl
push
out
es
xchg
int3
push
enter
mov
jg
in
jno
leave
stos
pop
faddl
push
mov
cmp
ja
pop
mov
add
scas
dec
lods
jge
sbb
xchg
mov
pop
ret
outsb
add
in
in
outsl
adc
and
add
pop
push
inc
pop
xchg
and
sbb
out
sub
pop
push
pop
and
loopne
cmc
mov
jg
in
push
xchg
inc
mov
mov
mov
inc
pop
cmp
cmp
shrl
pop
dec
mov
pop
rclb
ljmp
sub
mov
loopne
or
imul
or
cmp
in
mov
hlt
insl
xchg
in
call
test
insl
mov
cmp
add
or
jnp
xchg
mov
push
fwait
ds
push
mov
xor
cli
push
push
xchg
loop
xor
mov
out
dec
sbb
shrb
mov
mov
mov
xor
lea
repnz
push
leave
cld
into
pop
adc
add
in
sub
sbbl
push
sbbl
push
incl
push
andl
push
adcl
call
test
movl
je
adcl
xor
inc
movl
jmp
add
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
sub
movl
sbbl
lea
movzbl
and
mov
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
sub
lea
mov
adc
mov
mov
xor
or
sub
or
mov
mov
mov
sub
mov
mov
or
mov
mov
andl
xor
sbb
mov
xor
add
mov
mov
movzwl
cmp
mov
movzbl
mov
je
sub
mov
xor
add
sbbl
imul
movl
mov
movl
jmp
addl
xor
sbbl
add
mov
movzbl
sub
mov
xor
adc
add
not
mov
mov
mov
xor
xorl
add
movl
cmp
jne
sbbl
push
movl
pushl
sbbl
pushl
adcl
call
and
mov
mov
and
mov
sub
mov
neg
mov
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
jmp
xor
or
sbb
mov
mov
mov
or
movl
or
mov
movl
xor
mov
and
mov
and
mov
orl
xor
subl
xor
adcl
add
mov
adcl
xor
xor
adcl
add
movl
lea
movl
mov
movl
cmp
movl
ja
jmp
adc
mov
addl
mov
xor
xorl
lea
push
andl
xor
or
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movzbl
adc
mov
mov
xor
movl
lea
subl
push
and
mov
adcl
pushl
call
mov
mov
mov
or
xor
lea
mov
or
mov
subl
xor
xorl
xor
add
mov
andl
xor
movl
lea
movl
mov
movl
cmp
movl
jbe
movl
mov
add
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
add
mov
inc
mov
subl
pushl
orl
sub
subl
pushl
adcl
xor
mov
pushl
call
sub
adc
xor
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
pushl
push
call
mov
dec
mov
jmp
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
mov
mov
mov
mov
movl
movl
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
repz
jae
hlt
aaa
scas
aad
or
jb
mov
jle
jns
jle
les
jmp
jns
hlt
jl
and
xor
mov
arpl
rorb
shrl
mov
pop
dec
out
mov
mov
adc
mov
jo
pop
xchg
gs
jne
lock
loop
fsubl
fcos
xchg
mov
sbb
push
insb
inc
js
aas
repz
test
pop
repnz
adc
jno
xor
pop
ja
push
cmp
lea
cmpsb
ja
cld
and
dec
xchg
inc
icebp
mov
cmp
outsl
pop
test
lcall
mov
xchg
je
clc
xchg
or
icebp
pusha
sbb
xor
int3
lret
addb
in
dec
bound
xchg
push
adc
mov
aas
push
cmp
mov
sar
push
sub
xchg
mov
gs
jecxz
rcr
or
mov
stc
mov
and
pop
inc
arpl
dec
push
int3
xor
cs
daa
ja
or
stc
negb
fbld
rcrl
stc
daa
or
mov
ret
push
gs
fchs
inc
lock
xchg
inc
fistpl
rolb
pushf
imul
shll
xchg
outsb
sbb
ljmp
in
fcomps
pusha
ret
rcl
xor
imul
xlat
pop
xor
in
test
clc
dec
and
lods
sub
in
pop
inc
sub
subl
outsl
dec
fsub
mov
into
outsl
in
mov
test
fmul
psadbw
shll
sub
push
cltd
lret
mov
push
out
inc
xor
adcb
outsb
pop
mov
inc
pusha
ret
mov
mov
insb
je
sub
std
push
sub
ret
les
in
cmpsb
js
mov
dec
add
inc
jno
mov
sbb
dec
mov
sbb
add
out
mov
cmp
jae
pop
xchg
xchg
mov
sub
mov
inc
jg
fbstp
push
jecxz
mov
mov
scas
lea
sbb
loop,pt
div
aaa
dec
and
and
push
jae
cmp
xchg
and
in
xchg
fdivrs
push
sahf
sbb
shrl
es
inc
in
jmp
iret
dec
add
push
testl
ret
adc
add
in
aas
cltd
xor
pop
sbb
adc
or
std
ja
dec
add
sub
stos
inc
and
cmc
out
push
popf
inc
out
and
mov
fisubrl
jecxz,pn
push
pop
nop
cmc
arpl
pop
adc
lea
mov
mov
int3
dec
dec
pushf
pop
test
jecxz
jg
mov
push
pop
xlat
jnp,pt
incb
push
cltd
daa
mov
mov
pushf
jl
jmp
jmp
jle
xchg
mov
and
icebp
adc
cmp
push
repz
xchg
outsb
pop
push
jg
adc
mov
push
shll
jge
xor
punpcklwd
int3
inc
roll
xor
shll
test
test
inc
add
mov
mov
mov
movl
push
movl
mov
movl
mov
movl
cmp
je
or
jmp
cmc
pop
inc
gs
jge
pop
push
add
daa
movsl
mov
mov
jle
jns
jle
add
outsl
jmp
xchg
inc
sub
fs
pop
push
sar
movsb
mov
fnstenv
int3
xchg
sub
jmp
repz
test
or
mov
pinsrw
pushf
xchg
xor
dec
int
das
sbb
out
sbb
enter
imull
leave
lcall
dec
inc
jae
repz
add
insl
popa
jp
les
aaa
mov
lahf
push
insb
pop
inc
and
push
pop
sbb
xor
xchg
int
and
std
dec
out
or
jmp
lods
sub
pop
rcrl
pusha
xlat
movsl
shll
xor
clc
and
xor
lea
rsm
cmp
ret
movb
push
cmp
xor
push
inc
lret
cli
cmpsb
inc
pop
mov
sbb
or
pop
es
jno
ret
fstl
cmp
inc
stos
lock
cmp
mov
test
jp
mov
scas
inc
aas
test
js
sbb
sbb
cltd
mov
mov
sbb
inc
int
inc
or
in
fmul
xor
mov
js
imul
sbb
shll
and
in
test
jns
daa
mov
push
add
dec
lods
inc
lret
je
sub
mov
aaa
dec
cmc
jbe
pop
stos
shll
ljmp
lock
or
popf
insl
clc
sbb
sub
shl
and
ss
out
arpl
scas
or
dec
sub
xchg
cli
jne
jle
and
jb
sahf
jp
mov
mov
and
shll
or
andl
xchg
push
iret
data16
fbld
adc
xchg
lret
push
mov
mov
cltd
lahf
stos
imul
sbb
mov
das
ret
and
jbe
xchg
repz
inc
add
pop
push
pop
and
popa
jne
ret
mov
insb
push
dec
adc
mov
hlt
rorl
filds
repnz
pop
imulb
cmpsb
inc
xchg
rcrl
insb
mov
lock
or
out
xchg
add
mov
orl
xchg
call
clc
push
cwtl
or
call
ret
lea
push
les
mov
sbb
outsb
cmp
add
pop
push
sub
inc
imul
rorl
rclb
xchg
mov
ficoms
mov
xchg
rolb
xchg
add
stos
jg
addr16
add
cs
aam
adc
sub
mov
sbb
sbb
sbb
add
inc
cltd
push
push
or
mov
popa
mov
out
sbb
push
aad
clc
fprem1
nop
pop
push
xlat
loop
cmp
rol
sahf
cmpsl
inc
movsl
jle
fmulp
test
mov
fnstcw
cwtl
mov
imul
aam
movl
js
mov
shrl
dec
or
and
xor
xor
adc
and
in
insb
ret
xchg
lods
sahf
dec
fnstenv
or
imul
mov
mov
xorl
xor
add
movl
cmp
movl
je
and
mov
mov
xor
xor
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
and
add
push
pushl
pushl
mov
jmp
pop
pop
cld
sub
mov
push
in
xor
mov
hlt
jns
jle
fwait
or
in
and
data16
jmp
imul
adc
pushf
sbb
mov
sbb
in
ljmp
fisubrl
jp
pop
mov
xchg
dec
into
scas
mov
sbb
out
sbb
pop
fcmovb
sub
loope
ret
pop
pop
jp
dec
dec
cld
jle
add
orl
mov
inc
add
cli
mov
imul
fs
repnz
les
mov
mov
pop
iret
sub
mov
xor
mov
sub
lahf
repz
ss
popa
xchg
stos
inc
mov
int
xor
leave
push
popa
jns
scas
pop
divl
repz
inc
jle
push
jb
jno
and
push
mov
popa
lcall
or
pop
sub
dec
xchg
mov
adc
lock
cmp
loop
out
and
and
sbb
dec
ljmp
xchg
call
inc
xor
mov
lods
xor
adc
cld
fldl2t
pop
or
js
and
call
mov
or
iret
pop
inc
and
cmp
mov
lahf
mov
push
aad
call
xor
in
push
andl
pop
loopne
lods
fwait
mov
xor
inc
and
lock
test
hlt
sbb
pushf
add
lods
pusha
in
jo
cs
mov
adc
mov
ret
lods
push
mov
jae
cltd
cs
stos
dec
ljmp
fiaddl
dec
cmpsl
mov
pop
out
aas
xchg
pcmpeqd
es
xchg
or
and
insb
test
push
lds
mov
pop
rorl
movsb
out
mov
fisttpl
dec
dec
imul
ret
rorl
sbbb
sbbl
aad
sbb
in
inc
aam
push
mov
fs
loop
mov
cmp
nop
jns
daa
ficoml
jbe
or
adc
rcrl
sbb
scas
jnp
loopne
pop
inc
xor
adc
add
pop
test
dec
in
popf
and
pop
adc
loope
mov
pop
mov
lods
sbb
sbb
lea
or
mov
mov
or
mov
stos
shlb
aad
adc
out
mov
lret
mov
imulb
aaa
mov
jnp
mulb
xchg
leave
in
loopne
add
mov
ret
daa
pop
jge
mov
push
aad
push
push
test
push
mov
inc
movsb
es
mov
lods
out
mov
push
pop
in
fistpll
ljmp
add
xchg
pop
add
mov
rcr
scas
xchg
sbb
stos
adc
cmp
in
sbb
add
mov
mov
mov
aad
mov
mov
and
or
mov
and
sbb
test
pop
cmp
or
test
outsl
jmp
sbb
sbb
mov
cmp
adcb
xchg
cltd
sub
insl
dec
scas
into
mov
es
jb
sbb
dec
popf
cmp
and
cmp
daa
inc
std
cmp
fidivrs
add
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
pushl
pushl
call
jmp
in
ss
xor
icebp
add
ficomps
jle
hlt
jns
jle
mov
sbbl
in
daa
inc
xor
fsubp
fists
or
mov
adc
aad
push
orb
iret
or
dec
addr16
test
xchg
lret
data16
shll
mov
inc
jge
mulb
push
test
in
in
push
jnp
pop
in
xchg
push
jg
sbb
in
mov
sbb
sti
pop
push
xchg
mov
jno
ss
out
stos
jne
icebp
adcb
fmuls
movsl
sbb
icebp
sbb
fiadds
xchg
aam
imull
xchg
test
movsl
inc
xor
or
andl
pop
push
leave
jae
mov
inc
dec
fcmovnbe
sub
push
push
xchg
test
push
and
int3
int
gs
add
ljmp
jmp
push
xchg
pop
push
jo
and
cmp
test
xor
addr16
not
sub
cltd
jmp
pop
inc
sub
cmp
mov
aam
jno
push
nop
or
sub
sti
rol
xor
lret
sahf
arpl
stc
loope
jno
cltd
push
dec
adc
pop
repz
cmpsl
addr16
pop
fisttps
sub
and
sahf
mov
mov
stos
fdivs
lret
aas
xor
das
dec
loop
push
fsubrs
cltd
jg
test
pop
adc
push
jns
push
mov
pusha
ja
mov
movsl
sub
stos
invlpg
in
mov
sub
test
movsl
fcmovne
adcl
mov
xlat
shll
jge
cmpsb
aad
inc
dec
ret
pop
fwait
or
xor
fldt
ljmp
push
add
ror
nop
lret
sbb
mov
cmp
gs
mov
pop
daa
push
inc
lahf
int3
mov
ds
test
rclb
mov
jo
into
adc
mov
or
xchg
pop
jl
cmp
mov
outsb
mov
or
dec
mov
imul
mov
pop
add
mov
dec
pop
or
sub
dec
imul
repnz
aad
inc
xchg
xchg
pop
or
test
sub
movsl
mov
or
pop
ret
cs
ja
and
xor
sub
mov
andb
dec
lock
ret
cli
mov
jno
adc
dec
ss
mov
pop
sub
mov
inc
mov
sahf
dec
adc
call
int3
ficoml
or
lcall
popf
jg
sti
jne
lcall
cmpsb
mov
fcmove
lret
pop
shlb
leavew
decl
jge
shrb
aad
or
enter
jbe
jmp
sub
mov
inc
or
add
xchg
shrl
mov
adc
stc
jae
lea
push
addr16
cmp
pusha
jp
lahf
pop
pop
mov
xchg
xor
out
mov
or
jg
leave
sub
in
out
lods
dec
mov
fcmovu
jmp
fsubs
pinsrw
xor
cmp
pop
fsubrl
push
and
adc
and
js
mov
jns
push
mov
xor
pop
jmp
push
clc
clc
mov
test
adc
aas
cmc
int
inc
jle
hlt
jns
jle
cmp
or
mov
push
xchg
xchg
jne
scas
sub
inc
insl
push
add
pop
add
pop
mov
ret
mov
lea
and
jae
jno
jge
in
lea
push
into
lods
push
xchg
std
dec
fs
add
ret
push
mov
push
and
mov
out
das
lcall
rorb
jae
sub
pop
jb
fdivr
and
inc
ljmp
jle
adc
out
mov
inc
jae
lods
pop
cmpsl
adc
fiaddl
or
lret
ficomps
mov
push
jne
out
xorl
test
add
nop
repnz
std
push
stos
mov
mov
xor
inc
xor
mov
std
out
stc
test
in
and
mov
push
xor
sub
js
fiadds
mov
je
push
adc
xor
outsb
pop
or
pop
sbb
sub
jae
mov
push
nop
mov
inc
pop
mov
add
jmp
in
sub
daa
xchg
xchg
jle
add
xchg
aaa
repz
pusha
or
lret
stos
rcrl
dec
cmc
ds
xchg
imul
adc
push
mov
add
mov
mov
mov
sub
ror
mov
mov
xchg
into
add
imul
push
xor
add
push
xchg
scas
cmp
jnp
loop
loope
ficomps
push
mov
cmp
lea
mov
and
leave
into
or
or
mov
mov
imul
push
adc
scas
call
xor
fsubrs
mov
dec
repnz
fildl
pop
mov
pop
add
ljmp
jge
sbb
mov
cmpw
xchg
push
bound
pop
iret
shll
dec
pop
lods
mov
mov
scas
jnp
js
lods
wbinvd
xor
jno
cmp
jnp
mov
cmp
mov
pop
xor
cmp
cmp
sbb
pop
shrl
rcrb
jle
xor
stos
lret
outsl
scas
and
mov
and
push
adc
pop
in
outsb
shl
inc
scas
mov
sbb
add
sti
les
cmpl
or
cmp
and
data16
lcall
outsb
outsb
mov
hlt
adc
xchg
cmp
testl
popa
ret
cmp
push
sbb
fs
add
xchg
fs
in
out
sahf
popf
outsl
adc
xchg
outsb
mov
inc
out
mov
mov
mov
sbb
aam
or
aad
jno
into
ret
pop
xchg
ret
mov
mov
jmp
dec
cmp
adc
cmp
pop
aaa
pop
dec
adc
ret
push
cmpsb
push
mov
pop
arpl
xor
lds
add
xchg
mov
sahf
stos
sbb
xchg
push
lahf
or
inc
fs
cmp
or
shlb
xchg
sbb
test
push
cmpsl
mov
shrl
add
fisttpl
mov
mov
push
ret
push
mov
push
movl
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
xor
mov
andl
mov
add
xor
cmp
movl
jne
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
add
mov
mov
mov
xor
push
jmp
mov
jae
mov
sub
mov
daa
dec
testb
pushf
jg
jle
adc
ret
into
or
jl
push
adc
inc
adc
fdivrl
xlat
jne
test
jle
test
pop
mov
int
insl
push
shl
cmp
and
out
pop
xlat
jns
xchg
mov
xchg
out
lds
inc
mov
jne
xor
call
in
push
aaa
mull
sbb
fists
push
xchg
xchg
sub
mov
cmp
sbb
push
lcall
neg
ret
push
xor
shr
cltd
jmp
push
test
out
lcall
cmp
cld
sti
rorb
fcoml
push
mov
push
addb
push
outsb
scas
xchg
mov
add
clc
fldcw
pushf
popa
cmpb
jns
cmpsb
pop
sbbb
aad
out
inc
or
stos
xchg
lret
jnp
inc
fidivs
dec
inc
cmp
popa
aaa
iret
push
aam
and
movsb
jbe
adc
push
dec
filds
nop
lds
push
cmc
add
and
cmp
std
adc
mov
sub
cmc
cmc
sub
mov
jmp
jns
jo
dec
call
loopne
add
je
cmp
push
lock
call
push
pop
les
ret
js
add
cmp
loopne
test
sub
popf
xchg
and
cmp
notb
rolb
sti
sahf
add
imull
dec
mul
paddb
mov
in
push
popf
add
std
aam
mov
mov
jmp
cmc
mov
enter
cmpsl
mov
dec
sbb
fwait
adc
jle
pushf
jg
jle
mov
dec
sbb
sbb
sbb
pop
push
sahf
out
sbb
shufps
int
mov
mov
adc
pop
mulb
cmp
sbb
cld
or
popf
pop
jne
iret
lret
xor
pop
adc
sti
arpl
imul
push
in
adc
loopne
jne
sub
daa
inc
ljmp
and
nop
sub
enter
test
dec
dec
in
mov
movb
mov
cmp
mov
adcb
and
mov
push
xlat
sbb
mov
jo
out
fiaddl
jle
mov
and
aam
mov
xchg
mov
mov
jo
inc
loop
in
outsl
test
mov
sbbl
or
ja
sub
inc
mov
in
into
sbb
fidivl
fisubl
lods
jmp
imul
cmp
jno
es
movsb
add
mulb
xor
add
enter
aaa
ja
loop
mov
or
xchg
inc
insb
lods
inc
cmpsb
jno
roll
sbb
lret
jg
pop
sub
stc
pop
outsb
pusha
and
xor
add
jns
sub
mov
mov
xlat
xor
jbe
jbe
xor
cld
mov
cmp
pop
mov
subl
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzbl
adc
mov
andl
xor
add
movl
jmp
cmp
arpl
mov
arpl
sub
and
js
jle
xchg
pop
sbb
cld
add
dec
cmp
push
xor
mov
push
lock
mov
push
int3
sub
sbbb
aas
mov
leave
cmp
push
rcr
jl
or
test
cmc
iret
neg
jbe
and
xor
jge
pop
jmp
mov
imul
adc
cli
push
cmpsl
lods
mov
pop
push
dec
pop
imull
inc
loope
pop
repnz
sbb
aam
call
jmp
pop
add
das
pushw
out
imul
xchg
jns
mov
and
sub
loope
mov
sti
scas
mov
cs
pop
xor
sarb
lods
pop
jnp
insl
lods
jne
xor
lret
adc
lds
in
mov
ja
stc
cmp
rolb
xor
loopne
gs
jmp
stos
imul
pop
mov
mov
pop
inc
dec
mov
xchg
and
insb
pusha
push
sbb
jb
rol
shll
adc
das
or
xor
push
int3
xor
inc
mov
push
sub
fwait
add
stc
out
adc
push
ja
push
aad
pop
mov
adc
mov
push
jnp
adc
mov
leave
repnz
leave
xchg
mov
rol
jl
sbb
call
aaa
and
dec
in
push
fstl
insb
mov
xchg
dec
outsb
cmp
dec
sbb
and
jne
sub
icebp
and
fnstenv
ret
mov
addr16
cwtl
xor
fnstcw
arpl
add
dec
mov
dec
insb
ljmp
sbb
inc
loope
pop
pop
clc
cmpsl
pop
xchg
push
mov
or
push
and
mov
xchg
incl
lret
dec
lret
sub
add
xrelease
cld
adc
xor
out
dec
hlt
dec
lds
xor
mov
daa
addl
loope
movsl
arpl
lahf
cmc
jg
sti
and
inc
decb
daa
orl
sti
push
cmp
dec
cmp
sbb
testl
xor
test
cmpl
mov
push
jg
adc
xchg
lods
pop
inc
mov
stc
scas
out
pop
movsl
mov
notl
inc
loopne
fs
push
pop
jl
call
and
mul
mov
jns
repnz
loope
fcmovnb
out
inc
inc
and
cmpsl
mov
mov
mov
movl
movl
mov
mov
push
movl
mov
mov
cmp
movl
je
mov
xor
subl
xor
xorl
lea
xor
cmp
jne
movl
jmp
jmp
inc
lods
xchg
addr16
mov
leave
dec
jle
popf
js
jle
mov
mov
ror
pop
or
push
cld
bound
xchg
mov
js
pop
cmp
dec
jp
aam
cmc
in
mov
adc
jb
mov
mov
jle
js
adc
lock
xchg
ljmp
inc
int
outsl
or
imul
pop
pop
shr
pop
stos
mov
nop
mov
jo
xor
xchg
enter
in
cmpsb
and
cmp
sbb
or
cmc
dec
sbb
test
ss
sub
xrelease
jns
push
loop
fwait
imul
mov
pop
add
les
cmp
xchg
jp
cmp
dec
cmp
mov
push
sbbb
mov
sbb
aas
push
jg
fisttpl
xor
mov
arpl
in
dec
lods
mov
cmpl
jle
mov
in
add
or
sbb
ret
or
dec
push
fwait
scas
jno
adc
scas
and
stc
or
das
in
pushf
lock
enter
aas
cwtl
leave
and
sbb
xchg
ja
scas
cmpsl
mov
mov
cltd
lock
jbe
adc
add
xchg
repnz
lods
out
fmuls
test
pop
mov
stc
push
lock
mov
ret
imul
aaa
pusha
addb
pop
shl
or
sti
pop
jae
and
out
mov
xchg
out
pop
push
addr16
popf
inc
imul
pop
jne
pusha
rolb
mov
adc
incl
cmpsb
call
adc
add
fdivrl
dec
add
or
stos
je
jnp
xchg
pop
push
lcall
or
add
repnz
jg
dec
mov
pop
push
bound
add
out
movb
fchs
mov
int
mov
shlb
sbb
dec
xor
loope
cld
test
xor
dec
shll
in
in
sbb
sbb
testl
add
mov
les
mov
loopne
and
dec
xchg
dec
enter
rorb
and
add
jl
mov
push
jecxz
mov
ret
adc
hlt
jp
pop
cmp
sbb
in
pop
andl
lret
adc
cmpsl
xchg
mov
in
push
inc
jnp
sub
pop
lsl
adc
int
mov
xor
add
mov
mov
xor
jmp
jo
rsqrtps
pop
jge
pop
mov
sbb
jle
popf
js
jle
dec
scas
addr16
shlb
sbb
adc
sbb
je
adc
push
pop
add
jp
xor
pop
mov
push
fmul
cmp
mov
and
in
and
dec
aad
and
pop
scas
fwait
cmp
fistl
movb
sbbb
cwtl
dec
pop
call
in
clc
pop
pop
in
adc
jno
sbb
lock
mov
shll
rcll
lea
adc
pop
test
aaa
xor
xchg
xor
in
jns
adc
je
out
push
ss
movsl
dec
jge
sbb
lahf
jg
and
jnp
js
xchg
ljmp
shr
cmp
in
sub
jae
outsl
orl
mov
jne
add
repnz
imul
movsl
out
fdivrs
test
push
pop
pop
jp
enter
xor
push
mov
push
faddl
jne
enter
cmpsl
aad
out
bound
xor
stos
sub
cmpsb
bound
mov
ret
or
add
dec
and
insl
lods
iret
in
push
outsb
mov
add
and
icebp
testl
pop
stos
mov
cmp
and
jmp
scas
in
rorl
scas
adc
mov
push
shll
pop
xchg
mov
jno
fs
jno
leave
dec
jns
std
sarb
push
mov
sbb
dec
fnstsw
call
inc
sub
inc
adc
repnz
fisttpl
loop
mov
out
pop
lret
cmp
dec
xchg
xchg
inc
mov
outsb
stc
and
xor
adc
push
mov
push
or
imul
xchg
fwait
push
loope
adc
fistpl
cmpl
int3
jl
dec
adc
lahf
push
push
mov
cwtl
mov
adc
in
adc
ljmp
scas
push
lock
ss
int
xchg
cmp
js
mov
add
sub
mov
push
jns
xor
jmp
shlb
test
jmp
testb
fwait
leave
xchg
sbb
sahf
ret
out
std
cmpsb
jp
mov
ljmp
call
sbb
mov
adc
test
loope
cmpsb
cli
push
lahf
call
call
mov
cmpsb
popa
fsubs
in
mov
shrl
bt
adcb
inc
cmp
inc
or
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
call
jmp
mov
leave
ret
push
mov
sub
movl
mov
xor
movl
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adcl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
push
mov
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
adc
mov
xorl
add
orl
mov
sbb
mov
xorl
push
movl
push
sbbl
test
je
mov
sbb
mov
andl
xor
or
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
adc
imul
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
add
jmp
roll
std
mov
xchg
inc
jg
mov
pop
jg
jle
cmc
inc
test
std
adc
out
nop
repnz
jb,pt
pop
data16
push
clc
in
sbb
popf
add
pop
das
mov
repz
aad
arpl
adc
pushf
dec
pop
outsl
jb
jns
bound
std
add
dec
jle
mov
rcrb
std
fnstcw
movsl
ljmp
pop
jmp
hlt
ds
mov
xor
movsl
xor
sti
pop
aam
insb
out
cmp
jb
cmpsb
add
push
sti
dec
mov
aaa
pop
inc
out
shr
push
or
cli
dec
mov
das
bound
dec
out
je
adc
in
in
lahf
aas
push
and
lods
fbstp
xchg
xor
or
test
cld
add
leave
mov
cli
shll
lcall
xor
mov
enter
mov
cli
xchg
lret
add
push
mov
movsl
pop
ja
jg
xor
shll
mov
inc
lahf
nop
or
pop
icebp
idivl
mov
outsb
adc
push
inc
push
imul
add
mov
xor
and
push
leave
cmpsb
ljmp
aas
mov
xchg
pop
or
cmp
cmpl
mov
roll
push
xchg
ljmp
xchg
mov
insl
push
insl
movsl
push
push
xchg
int3
cmp
jp
dec
fwait
imul
or
or
div
jecxz
mov
ret
mov
ljmp
into
in
faddl
pop
outsl
and
mull
int3
adc
clc
test
xor
mov
rorb
bound
mov
mov
inc
test
add
or
mov
jmp
lret
outsl
dec
jne
stos
movsb
loope
lods
inc
jb
js
push
jle
pop
jg
jle
data16
cmp
ret
and
out
flds
xchg
imul
mov
jne
dec
rcll
jp
test
jnp
popa
sti
fildl
fwait
jae
ret
rorl
inc
dec
aas
shl
divl
lds
inc
lahf
and
ret
ret
dec
clc
dec
pop
std
push
pop
xchg
leave
cmpsl
sub
mov
fdivrl
mov
lret
jno
fbstp
sahf
push
clc
jo
ret
aas
sbb
loopne
insb
pop
jp
push
mov
jg
dec
dec
adc
push
xchg
mov
xlat
imul
mov
mov
inc
inc
call
test
mov
inc
add
cmpsl
mov
dec
mov
mov
ljmp
xor
and
sbb
fwait
sub
fimull
adc
test
push
not
sub
jb
mov
sbb
fldl
adc
js
dec
push
bound
dec
push
out
jl
adc
or
addr16
adc
xor
mov
and
sub
jecxz
inc
pop
sbb
cmpsb
icebp
mov
adc
mov
rorl
lods
ljmp
sub
shll
mov
or
sahf
pop
inc
sub
insb
or
jae
arpl
push
mov
inc
in
and
cmp
gs
loope
es
lea
pop
cmp
jns
xchg
jns
or
cmp
gs
imul
fildl
test
pop
loopne
jmp
shrb
cltd
and
mov
mov
or
js
fldenv
cli
jl
push
rcl
cmp
and
add
dec
cmp
add
lock
xchg
sub
xor
xor
adc
mov
mov
decl
mov
mov
mov
addl
xor
xor
add
mov
mov
mov
movl
je
adcl
mov
adcl
xor
orl
add
movl
cmp
jne
sbbl
pushl
orl
call
and
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
xor
add
cmp
je
orl
pushl
pushl
subl
call
movzwl
and
mov
mov
movl
cmpl
je
cmpl
jne
push
push
call
xor
or
dec
mov
jmp
add
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
call
mov
dec
mov
jmp
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
mov
jmp
scas
repz
add
push
out
sub
jecxz
sub
aad
jle
pop
jg
jle
dec
jp
xlat
adc
xchg
fisttpll
enter
popf
cmp
enter
jae
movsb
dec
fsub
xchg
sub
cmc
mov
add
loope
push
cmpsb
jecxz
or
xchg
lahf
les
bswap
addr16
aaa
push
push
sub
test
cs
loop
mov
daa
jnp
cld
adc
mov
push
mov
xor
shll
push
push
arpl
dec
stos
sub
sub
pushl
sbb
test
jb
addr16
cld
outsb
adc
and
jmp
inc
push
mov
and
into
dec
cltd
movl
daa
lea
stos
mov
xor
je
cmc
std
jne
std
cltd
int3
inc
xor
in
xchg
push
scas
push
icebp
adc
pushf
sbbl
adc
arpl
fnstcw
es
ret
inc
mov
inc
movsb
xchg
push
int3
insl
arpl
mov
add
jge
mov
mov
lahf
add
bnd
ret
jp
sub
insb
daa
ret
and
and
add
inc
jbe
cld
xchg
inc
leave
cmpl
das
add
out
test
adc
out
mov
out
inc
pop
push
cmp
pop
ljmp
cmpsl
jg
sbb
outsb
and
xor
adc
or
or
int
sub
push
inc
adc
scas
mov
fnsave
in
call
setbe
push
ret
cmp
adc
dec
imul
mov
or
pop
shll
jmp
gs
push
push
popa
push
cli
popaw
int3
pop
mov
into
mov
mov
jae
xor
pop
idivb
notl
jl
ljmp
out
lods
sbb
dec
push
rolb
add
dec
add
lea
mov
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
jmp
lret
dec
add
je
jge
or
in
xor
jle
jg
jle
aad
pusha
sbb
incl
mov
outsb
inc
in
push
sub
push
or
mov
ficompl
out
testl
enter
jmp
mov
nop
dec
mov
sbb
add
mov
sahf
sarl
xchg
or
mov
shlb
les
push
repz
in
mov
lods
mov
hlt
orl
pop
dec
jmp
inc
js
sbb
xchg
xor
push
out
push
addl
loop
sbb
dec
and
shl
pop
inc
test
je
xor
cmp
pop
sub
icebp
cwtl
loopne
ret
dec
pop
aas
int3
dec
lds
adc
stos
loopne
pop
pop
fldcw
push
mov
dec
ds
push
wrmsr
inc
dec
adc
daa
cmp
imul
mov
mov
fldl
outsb
testb
das
test
dec
mov
movsb
or
lea
rolb
test
dec
daa
mov
cwtl
decl
xchg
xchg
out
mov
out
jecxz
xor
sub
add
popf
scas
jbe
sbb
or
jnp
pop
idivl
xchg
jp
sub
xchg
push
lock
xchg
cmp
dec
mov
jns
pop
shlb
xchg
dec
cmp
insb
inc
pusha
mov
xchg
test
mov
fists
pop
in
and
mov
fstps
lds
inc
lods
popa
arpl
adc
inc
or
ss
jp
aam
sbb
adc
sbb
add
mov
xor
xchg
pop
push
dec
xchg
add
or
enter
aas
xor
repnz
xor
mov
add
jmp
dec
mov
mov
jmp
cmp
jne
xchg
mov
popa
add
jle
pop
jg
jle
in
mov
lds
mov
cltd
in
push
ljmp
divl
sbb
lea
add
push
or
mov
int3
daa
inc
push
pop
jae
jne
lret
xor
inc
in
xor
call
mov
or
mov
movsb
pop
insl
push
or
mov
add
jle
daa
out
loopne
dec
xor
xor
jle
mov
loop
pushl
rolb
cltd
cmc
push
lret
push
sub
add
sub
push
ret
cmp
imul
lret
dec
add
xlat
push
sub
mov
and
push
lahf
jo
aas
popf
fldcw
mov
jecxz
lahf
adc
incl
fisubs
pop
aas
movsb
adc
sub
jnp
shlb
sahf
cmp
push
add
jecxz
aam
sub
out
xorl
push
mov
xor
lcall
cmc
jp
fninit
sub
jb
cs
adc
testb
add
sbb
sbb
xor
mov
ss
shlb
jne
inc
imul
inc
pop
and
in
or
fistpll
jp
int
inc
mov
mov
popl
daa
and
das
dec
ret
push
add
lcall
inc
adc
adc
rolb
push
neg
cld
inc
cmp
out
cmp
fcoml
cmp
ljmp
push
rcrb
ljmp
inc
pop
in
leave
add
cmp
clc
sbb
inc
add
push
push
xlat
xlat
and
mov
pop
nop
pop
sbb
or
pop
loop
jae
popa
add
pop
sbb
lods
rolb
cmp
pop
push
mov
adc
cmp
xor
mov
inc
cld
mov
xor
add
cmp
jne
mov
xor
jmp
mov
jmp
xchg
aam
jne
xchg
in
sub
data16
jle
pop
jg
jle
lret
dec
pop
jle
inc
outsb
adc
and
fdivrs
mov
test
inc
outsl
imul
fs
mov
stos
sbb
mov
scas
mov
push
sub
jle
loopne
xor
test
sbb
pop
pop
mov
sbb
daa
pop
loopne
int3
pop
sbb
lahf
sub
sub
fs
cmp
lock
fdivs
aam
pusha
movb
ja
jne
sahf
dec
xchg
push
push
adc
pop
sbbb
das
in
push
fwait
outsl
stc
rol
mov
pusha
addr16
dec
mov
adc
bound
in
mov
pop
pop
pop
sar
int
lcall
xlat
sub
cmc
nop
popa
jmp
fwait
sub
and
or
push
jl
xor
and
add
into
lds
rorl
das
bound
add
test
inc
ds
and
and
ja
aas
jno
xor
and
push
sti
imul
xchg
sti
cmp
mov
push
jbe
add
xor
gs
outsl
rcrl
loop
pop
lods
jle
pop
xor
movsl
or
add
push
cmpl
leave
popl
cmp
mov
lds
inc
jo
cmp
and
fstps
mov
mov
vmovhps
das
movaps
shll
cmc
adc
mov
cmp
pop
mov
nop
add
jns
outsb
in
mov
dec
inc
cld
xor
cmp
pop
movsb
decb
fs
jne
mov
xchg
mov
test
pop
ret
xor
push
pop
add
inc
or
in
rorb
lret
add
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
jmp
inc
mov
pop
push
outsb
outsl
stos
or
sub
jle
pop
jg
jle
shlb
mov
or
leave
cltd
xor
mov
xor
lcall
or
adc
out
mov
clc
dec
mov
mov
dec
lock
movsb
xor
lock
orb
repnz
push
ficompl
popf
jbe
jp
cmp
lret
out
insl
imull
jbe
mov
mov
insb
outsl
andb
mov
add
xlat
push
or
rcrb
imul
fs
lea
aas
dec
stc
sub
push
xchg
push
insb
jl
fwait
mov
inc
jg
fwait
lret
js
pop
sbb
or
ss
or
mov
in
ret
mov
add
or
cmpsl
mov
xor
push
sbb
mov
insb
and
lods
and
movsl
xchg
add
fcompl
add
sahf
sti
lcall
xchg
test
inc
sbbb
or
add
jo
orl
lds
mov
test
jns
dec
lock
daa
xor
mov
or
pushf
repnz
and
pop
fisubl
xor
adc
pop
out
xchg
cvtdq2ps
in
push
or
mov
inc
jle
cwtl
sbb
test
mov
pushf
cmpl
rorb
sbb
or
rclb
out
ja
daa
arpl
shll
sub
test
fisttps
mov
pop
rcl
mov
or
aad
jp
out
rcll
and
pusha
out
xor
insl
add
jmp
add
pop
add
sbb
loopne
mov
xchg
xor
jmp
aaa
cmp
cltd
int
jno
ja
loope
and
test
jle
jg
jle
and
imul
dec
jbe
jo
ja
mov
push
lahf
scas
subb
inc
sub
and
sub
jmp
and
loopne
mov
ss
push
sub
mov
xor
push
adc
add
lods
aad
aas
cmp
pop
push
aas
inc
bound
scas
lret
cld
popa
es
jae
rcll
mov
jmp
xorl
add
mov
inc
dec
lahf
mov
jae
cmc
jecxz
or
adc
cmp
lcall
fsubrs
adc
sbb
movsl
cmc
fwait
jb
or
xor
popf
dec
paddq
xchg
pop
cmpsb
xchg
daa
popf
lret
sub
inc
dec
inc
cmp
xchg
aad
ret
imul
mov
aas
idiv
data16
or
aaa
jecxz
andl
pushf
nop
push
aas
push
add
cmp
imul
stos
mov
jp
imul
pop
lds
and
imul
mov
loope
or
je
idiv
adc
sbb
adc
xchg
adc
sub
pop
imul
mov
js
loope
ja
inc
lods
jo
rcrl
pop
xchg
into
adc
mov
rorl
addr16
jp
pop
jg
jg
or
cltd
sub
sbb
imul
push
scas
gs
shlb
cltd
icebp
dec
xchg
dec
test
repz
mov
jl
out
jae
mov
outsl
mov
jmp
std
push
jae
jge
sub
mov
inc
mov
pop
add
xchg
filds
mov
pop
xchg
jb
shrb
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
jmp
ljmp
popa
cmc
xchg
fmuls
pop
jle
pop
jg
jle
inc
cltd
jns
and
in
mov
cmp
fcmovb
xor
jmp
loopne
cmpsb
sub
mov
inc
mov
andl
loopne
inc
int
cmp
out
xor
orl
cwtl
and
xor
push
adc
push
addr16
ja
gs
ljmp
push
mov
les
popa
mov
int3
pop
jg
push
cwtl
pusha
aam
rcr
mov
jmp
fldl
mov
push
sub
mov
call
stos
xchg
add
ffree
mov
mov
jbe
adc
fbld
inc
xor
in
pushf
xor
sbb
or
mov
and
mov
dec
cli
mov
mov
in
mov
mov
aaa
or
in
adc
xor
lods
sbb
adc
in
mov
ret
inc
icebp
mov
sub
mov
push
inc
cmc
in
cmpsl
jns
push
mov
ret
fisttps
jne
testl
jl
xchg
or
mov
pop
sbb
mov
dec
shll
pop
out
hlt
nop
out
imul
sub
or
lds
jne
xor
je
cmpsl
out
mov
mov
mov
cld
xchg
pop
or
add
imul
mov
popa
scas
add
in
pop
loopne
or
mov
inc
pop
addr16
adc
xlat
jg
arpl
into
xor
and
gs
adc
mov
pop
sub
cmpsl
aam
arpl
les
xchg
xor
sub
xor
ret
jo
mov
cli
nop
aam
lods
stc
in
jecxz
xchg
shrl
mov
pop
cli
mov
loop
jmp
lds
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
xor
add
inc
cmp
add
add
add
add
push
add
jl
add
xchg
add
xchg
cmp
add
add
mov
add
les
add
into
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
xor
add
cmp
add
dec
cmp
add
add
pop
cmp
add
add
add
test
add
mov
add
cwtl
cmp
add
cmp
add
add
enter
fdivrl
add
out
add
repnz
add
cmp
add
cmp
add
cmp
add
add
add
cmp
add
add
pop
cmp
add
add
je
add
nop
cmp
add
add
int3
cmp
add
cmp
add
cmp
add
cmp
add
add
sbb
add
cmp
add
cmp
add
add
pop
cmp
add
add
js
add
xchg
cmp
add
add
ret
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
sub
add
cmp
add
pop
cmp
add
cmpb
add
cmp
add
ljmp
add
add
sbb
add
sub
add
cmp
add
dec
add
pop
add
insb
add
jl
add
mov
add
cwtl
add
lods
add
mov
add
fidivrl
add
lock
add
push
aas
add
sbb
add
sub
add
cmp
add
dec
aas
add
bound
add
outsb
aas
add
js
add
xchg
add
xchg
aas
add
movsb
aas
add
mov
add
enter
fidivrl
add
in
aas
add
clc
aas
add
or
add
inc
add
xor
add
dec
inc
add
pop
inc
add
fs
add
je
add
addb
cwtl
inc
add
lods
inc
add
mov
inc
add
loopne
add
lock
add
or
add
inc
add
sub
add
inc
add
inc
inc
add
push
inc
add
pusha
inc
add
jo
add
test
add
inc
add
scas
inc
add
mov
inc
add
call
inc
add
push
inc
add
sbb
add
inc
add
cmp
add
add
pusha
inc
add
add
add
addb
cwtl
inc
add
scas
inc
add
mov
inc
add
faddl
add
inc
add
clc
inc
add
push
inc
add
sbb
add
add
xor
add
add
push
inc
add
pop
inc
add
outsb
inc
add
test
add
add
mov
inc
add
fiaddl
add
inc
add
clc
inc
add
or
adc
add
and
xor
add
inc
inc
add
pop
inc
add
inc
add
jbe
add
mov
sahf
inc
add
scas
inc
add
movb
inc
add
in
inc
add
clc
inc
add
or
add
inc
add
sub
add
inc
add
inc
inc
add
dec
inc
add
pop
inc
add
add
add
jbe
add
mov
add
inc
add
lret
add
inc
add
in
inc
add
add
add
inc
add
sub
add
inc
add
dec
inc
add
pusha
inc
add
insb
inc
add
addb
xchg
inc
add
mov
inc
add
ret
add
inc
add
call
inc
add
incb
add
inc
add
and
add
cmp
add
add
add
push
add
jle
add
xchg
inc
add
mov
inc
add
int3
inc
add
faddl
add
inc
add
push
dec
add
sbb
add
dec
add
cmp
add
add
push
dec
add
outsb
dec
add
mov
add
dec
add
mov
add
rorb
dec
add
add
add
lock
add
decb
add
dec
add
push
dec
add
cs
add
add
add
push
dec
add
stos
inc
push
dec
add
add
add
add
cmp
dec
add
ret
cmp
add
add
add
add
add
add
add
add
add
add
pop
xor
add
add
fs
add
sub
add
add
add
jb
insl
pop
dec
outsl
imul
ja
imul
fs
gs
outsl
popa
jb
dec
gs
inc
pop
inc
pop
inc
cmp
add
add
add
xor
add
add
add
and
add
add
add
aam
add
je
add
mov
add
nop
aaa
add
insb
inc
add
jo
add
dec
cmp
add
dec
add
sub
add
adc
add
inc
dec
add
hlt
xor
add
add
bound
add
add
xor
add
inc
cmp
add
add
add
add
push
add
jl
add
xchg
add
xchg
cmp
add
add
mov
add
les
add
into
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
xor
add
cmp
add
dec
cmp
add
add
pop
cmp
add
add
add
test
add
mov
add
cwtl
cmp
add
cmp
add
add
enter
fdivrl
add
out
add
repnz
add
cmp
add
cmp
add
cmp
add
add
add
cmp
add
add
pop
cmp
add
add
je
add
nop
cmp
add
add
int3
cmp
add
cmp
add
cmp
add
cmp
add
add
sbb
add
cmp
add
cmp
add
add
pop
cmp
add
add
js
add
xchg
cmp
add
add
ret
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
sub
add
cmp
add
pop
cmp
add
cmpb
add
cmp
add
ljmp
add
add
sbb
add
sub
add
cmp
add
dec
add
pop
add
insb
add
jl
add
mov
add
cwtl
add
lods
add
mov
add
fidivrl
add
lock
add
push
aas
add
sbb
add
sub
add
cmp
add
dec
aas
add
bound
add
outsb
aas
add
js
add
xchg
add
xchg
aas
add
movsb
aas
add
mov
add
enter
fidivrl
add
in
aas
add
clc
aas
add
or
add
inc
add
xor
add
dec
inc
add
pop
inc
add
fs
add
je
add
addb
cwtl
inc
add
lods
inc
add
mov
inc
add
loopne
add
lock
add
or
add
inc
add
sub
add
inc
add
inc
inc
add
push
inc
add
pusha
inc
add
jo
add
test
add
inc
add
scas
inc
add
mov
inc
add
call
inc
add
push
inc
add
sbb
add
inc
add
cmp
add
add
pusha
inc
add
add
add
addb
cwtl
inc
add
scas
inc
add
mov
inc
add
faddl
add
inc
add
clc
inc
add
push
inc
add
sbb
add
add
xor
add
add
push
inc
add
pop
inc
add
outsb
inc
add
test
add
add
mov
inc
add
fiaddl
add
inc
add
clc
inc
add
or
adc
add
and
xor
add
inc
inc
add
pop
inc
add
inc
add
jbe
add
mov
sahf
inc
add
scas
inc
add
movb
inc
add
in
inc
add
clc
inc
add
or
add
inc
add
sub
add
inc
add
inc
inc
add
dec
inc
add
pop
inc
add
add
add
jbe
add
mov
add
inc
add
lret
add
inc
add
in
inc
add
add
add
inc
add
sub
add
inc
add
dec
inc
add
pusha
inc
add
insb
inc
add
addb
xchg
inc
add
mov
inc
add
ret
add
inc
add
call
inc
add
incb
add
inc
add
and
add
cmp
add
add
add
push
add
jle
add
xchg
inc
add
mov
inc
add
int3
inc
add
faddl
add
inc
add
push
dec
add
sbb
add
dec
add
cmp
add
add
push
dec
add
outsb
dec
add
mov
add
dec
add
mov
add
rorb
dec
add
add
add
lock
add
decb
add
dec
add
push
dec
add
cs
add
add
add
push
dec
add
add
add
cmc
add
outsl
outsb
je
outsl
insb
data16
add
arpl
insb
outsl
arpl
add
data16
outsl
outsl
jb
push
add
arpl
push
add
outsl
ja
outsl
ja
jb
add
gs
popa
jo
pop
je
jo
add
in
jae
jb
push
add
jo
pop
insw
outsl
fs
int3
add
outsl
jb
add
js
imul
imul
popa
add
fwait
add
jo
pop
arpl
insl
outsl
fs
sub
arpl
arpl
add
data16
add
or
je
ja
jo
gs
add
data16
je
add
outsb
jbe
add
arpl
imul
add
jo
imul
add
je
push
add
je
add
mov
outsl
ja
add
test
jae
popa
arpl
add
add
outsl
insb
outsl
ja
jb
fildl
pop
popa
insl
jae
pop
gs
je
add
add
imul
add
outsb
imul
add
jae
bound
gs
add
push
add
arpl
inc
imul
jae
jb
arpl
add
add
insl
outsl
jbe
add
cld
add
jb
outsl
insb
add
and
insb
outsb
add
and
pop
gs
je
call
js
je
add
jo
arpl
call
arpl
add
mov
pop
pop
jae
je
jae
jb
popa
je
gs
add
repnz
jb
arpl
add
imul
add
ja
je
jo
add
mov
insl
popa
insb
insb
outsl
arpl
add
pop
pop
addr16
popa
imul
add
ja
arpl
data16
push
inc
push
push
cs
insb
add
xor
dec
outsb
jne
je
insl
dec
outsb
outsw
push
add
sub
inc
gs
popa
jae
inc
arpl
gs
outsl
jo
jo
add
add
outsb
fs
imul
inc
add
dec
imul
add
inc
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
add
jne
insb
push
arpl
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
add
imul
ja
jb
insl
push
outsl
imul
push
imul
ja
add
fs
outsb
jne
add
add
popa
bound
arpl
insb
insb
inc
popa
jb
xor
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
add
add
outsb
fs
imul
rolb
dec
gs
popa
addr16
outsl
js
js
add
outsb
fs
gs
popa
addr16
add
outsb
imul
push
outsl
imul
inc
gs
imul
add
outsl
ja
arpl
insb
insb
inc
popa
jb
mov
dec
outsl
popa
fs
insl
popa
addr16
add
cltd
add
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
inc
add
add
jo
imul
gs
add
sbb
push
gs
outsl
jbe
push
jb
jo
add
gs
jo
popa
je
push
outsb
add
add
push
imul
popa
jae
inc
add
add
je
insb
addr16
je
insl
push
gs
inc
add
ja
outsb
jne
popa
jb
sub
inc
gs
outsb
jne
repnz
jae
dec
gs
popa
addr16
add
push
add
je
insb
addr16
je
insb
dec
inc
add
mov
push
imul
push
arpl
push
add
sbb
inc
gs
arpl
dec
outsb
outsw
add
add
jo
imul
imul
inc
push
js
push
add
add
outsb
fs
gs
popa
addr16
imul
add
add
popa
jb
outsl
ja
jb
jne
push
add
insl
add
je
imul
outsb
addr16
add
mov
push
popa
imul
jne
dec
fs
add
movl
imul
gs
js
add
cmp
arpl
popa
imul
outsb
add
add
outsl
ja
gs
outsl
jb
addr16
jne
fs
imul
into
add
jae
popa
addr16
outsl
js
add
add
je
gs
popa
addr16
add
push
gs
outsb
jne
gs
jne
je
je
insl
add
aad
dec
gs
popa
addr16
outsl
js
add
add
je
outsb
jne
je
imul
add
fs
outsb
jne
add
gs
jns
je
insl
dec
gs
imul
push
outsb
fs
gs
popa
addr16
add
aaa
add
je
outsb
jne
je
je
add
mov
inc
jb
ja
arpl
add
xchg
add
je
outsl
jns
jne
jae
jb
add
inc
fs
jae
push
imul
arpl
pop
add
je
jns
inc
outsl
insb
outsl
jb
jle
dec
imul
jne
je
insl
add
or
inc
jo
outsb
fs
outsb
jne
add
inc
push
outsb
jne
popa
imul
add
push
je
imul
push
arpl
insb
insb
push
imul
xor
inc
push
gs
add
push
gs
jns
inc
outsl
insb
outsl
jb
add
sgdtl
je
insb
addr16
je
insl
add
dec
add
je
outsb
jne
je
insl
inc
imul
or
inc
gs
gs
je
jo
imul
inc
add
je
popa
jb
outsb
je
movb
outsb
fs
popa
jae
add
inc
jb
popa
je
dec
outsb
jne
add
add
je
popa
jb
je
outsl
jae
sub
push
outsb
fs
gs
popa
addr16
add
test
dec
outsb
jae
jb
dec
outsb
jne
je
insl
push
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
inc
add
je
outsl
outsb
imul
push
add
add
jo
imul
gs
add
out
inc
jb
insl
gs
arpl
add
popa
bound
outsb
jne
je
insl
add
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
mov
outsl
ja
jb
insl
push
outsl
imul
jb
ja
outsb
imul
arpl
and
push
arpl
insb
insb
push
imul
add
pop
add
je
arpl
add
je
insb
addr16
je
insl
dec
outsb
je
or
imul
add
pop
add
gs
je
dec
arpl
dec
outsb
imul
dec
add
je
outsb
jne
je
insl
dec
outsb
outsw
push
add
pop
add
je
arpl
insb
insb
dec
outsb
outsw
add
add
popa
jb
outsl
dec
gs
inc
add
sub
fs
outsl
je
data16
gs
popa
addr16
add
sti
add
je
insb
popa
jae
dec
popa
insl
gs
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
push
push
jb
outsl
jb
add
push
gs
imul
js
inc
add
add
popa
jb
outsl
ja
jb
add
xchg
dec
outsb
jae
jb
dec
outsb
jne
add
add
jo
outsb
fs
outsb
jne
add
inc
gs
imul
add
push
gs
arpl
jo
jns
add
inc
gs
jns
inc
outsl
insb
outsl
jb
jb
jae
add
jg
push
push
outsb
outsl
ja
add
inc
push
dec
outsb
jne
add
add
insl
push
outsl
inc
push
add
push
jo
popa
push
add
xchg
push
jns
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
push
add
imul
popa
jae
push
add
addb
push
outsb
outsl
ja
jae
outsb
arpl
mov
jb
outsb
je
inc
add
push
gs
imul
outsb
addr16
add
test
push
ja
je
push
imul
ja
add
add
jo
imul
add
inc
imul
jae
popa
addr16
add
daa
add
je
gs
outsl
popa
jb
push
jns
gs
add
jne
inc
push
imul
add
inc
push
xor
cs
insb
add
lods
add
gs
je
push
arpl
outsb
dec
outsb
imul
add
gs
je
inc
jb
jae
dec
outsb
imul
add
push
imul
iret
add
insb
arpl
insb
gs
add
popa
je
inc
dec
inc
imul
add
jae
jp
push
popa
insb
gs
add
gs
outsl
inc
js
add
popa
je
inc
outsl
outsb
je
outsb
imul
mov
imul
inc
gs
gs
inc
inc
add
aad
inc
js
push
gs
dec
jne
push
add
popa
je
inc
imul
add
arpl
jae
bound
int
inc
jae
popa
jo
add
faddl
push
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
jae
je
imul
dec
jb
inc
js
and
inc
gs
imul
jae
mov
inc
gs
gs
dec
bound
arpl
mov
popa
je
dec
popa
je
push
push
inc
jb
popa
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
addl
imul
add
add
je
imul
jae
lods
add
insb
jns
gs
gs
add
add
je
bound
je
jb
arpl
add
jae
je
outsb
add
push
imul
add
popa
je
push
outsl
insb
imul
add
push
gs
dec
gs
imul
inc
gs
popa
insb
gs
gs
outsb
je
imul
jb
popa
je
dec
inc
push
add
add
insb
arpl
imul
add
je
imul
outsb
jae
outsl
outsb
inc
js
add
add
je
jb
jae
dec
jb
inc
js
into
add
insb
arpl
push
arpl
addl
gs
gs
inc
js
outsb
je
outsl
imul
xlat
add
insb
insb
push
outsb
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
je
imul
add
je
je
arpl
bound
arpl
cmp
inc
gs
jne
jb
outsb
je
bound
arpl
jno
inc
gs
dec
push
xor
stos
add
gs
je
push
arpl
outsb
add
push
je
jb
inc
outsl
arpl
jbe
inc
imul
add
imul
mov
insb
imul
je
add
inc
inc
dec
xor
cs
insb
add
inc
imul
je
imul
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
add
inc
gs
gs
inc
imul
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
insb
dec
popa
insl
gs
imul
add
gs
jb
outsl
jb
outsl
fs
pop
add
je
gs
jo
imul
add
cmc
add
gs
je
push
popa
imul
insl
gs
add
pop
add
outsb
fs
imul
gs
add
test
dec
gs
jo
outsl
arpl
add
jbe
inc
imul
jns
add
rolb
inc
jb
popa
je
inc
imul
outsb
addr16
add
adc
dec
outsl
arpl
push
imul
gs
push
popa
je
dec
popa
insl
gs
add
dec
outsl
fs
gs
popa
outsb
fs
gs
add
mov
je
inc
imul
outsl
bound
push
imul
inc
jb
popa
je
push
gs
popa
jo
outsl
jb
push
add
jmp
inc
gs
imul
bound
gs
js
add
mov
gs
jbe
outsb
je
add
push
insb
gs
js
int3
add
jae
jb
jo
outsb
push
add
add
gs
je
inc
jbe
outsb
je
add
push
add
je
jns
je
insl
inc
imul
jns
add
push
gs
gs
outsl
outsb
imul
imul
add
fs
imul
js
add
pop
add
insb
jae
gs
popa
insb
jne
add
add
inc
popa
fs
gs
fs
je
add
inc
add
je
push
popa
je
dec
popa
insl
gs
add
gs
jae
jb
gs
jne
je
popa
outsb
addr16
inc
add
adc
dec
outsl
arpl
dec
outsl
arpl
mov
jbe
jb
inc
gs
jne
je
outsl
arpl
add
incb
inc
gs
outsl
arpl
gs
outsb
outsw
inc
add
loopne
inc
jb
popa
je
dec
jne
gs
add
adc
inc
imul
outsl
dec
inc
dec
add
xor
inc
jae
popa
jo
inc
outsl
insl
insl
inc
jne
arpl
outsb
add
ss
gs
push
inc
outsl
outsb
je
js
add
sub
dec
outsl
jbe
inc
imul
add
je
push
dec
outsl
arpl
add
push
outsb
insb
outsl
arpl
imul
fs
je
insl
push
add
push
add
je
jns
je
insl
push
imul
jae
insl
outsb
je
mov
popa
imul
je
jo
gs
bound
arpl
add
inc
gs
gs
jo
popa
je
inc
add
out
add
je
imul
movb
je
arpl
imul
outsl
bound
inc
jb
add
roll
inc
jb
popa
je
inc
imul
outsb
addr16
add
cmp
dec
jo
outsb
inc
imul
dec
inc
dec
xor
cs
insb
add
push
add
imul
js
add
add
addr16
gs
jo
insb
addr16
add
add
outsl
outsl
jae
inc
outsl
insb
outsl
jb
add
or
inc
gs
imul
push
add
add
je
popa
jbe
inc
imul
add
arpl
fs
xor
cs
insb
add
inc
add
je
inc
imul
jae
add
dec
push
inc
push
dec
cs
insb
add
push
dec
push
jne
mov
inc
add
dec
inc
add
or
dec
ja
cmp
dec
jb
xor
dec
ss
jnp
sub
dec
sub
push
pop
push
xor
dec
cmp
dec
cmp
dec
jb
xor
dec
ss
popa
dec
sub
dec
sub
bound
arpl
dec
jno
cmp
dec
cmp
dec
dec
dec
xor
cmp
dec
push
jb
jae
addl
jo
jno
aas
dec
jbe
cmp
dec
ds
dec
dec
xor
dec
xor
dec
push
sbbb
setae
nop
jo
jno
aas
dec
jbe
cmp
dec
ds
dec
dec
xor
dec
xor
dec
push
xchg
pop
xchg
bt
mov
aas
dec
pusha
dec
cmp
dec
cmp
dec
dec
dec
xor
cmp
dec
push
mov
add
aas
dec
pusha
dec
cmp
dec
cmp
dec
pop
dec
xor
dec
xor
mov
ret
add
jo
jno
aas
dec
pusha
dec
cmp
dec
cmp
dec
dec
dec
xor
cmp
dec
push
ret
psrlq
shlb
jno
aas
dec
pusha
dec
cmp
dec
cmp
dec
dec
dec
xor
cmp
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
insl
dec
cmp
dec
cmp
dec
cmp
dec
push
loop
jecxz
repz
jo
jno
jo
jno
ds
jg
cmp
dec
cmp
push
ds
dec
dec
xor
dec
xor
add
adc
adc
jno
aas
dec
add
xchg
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
mov
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
test
mov
add
or
inc
add
fstp
inc
inc
add
inc
inc
mov
jne
mov
incb
mov
dec
inc
add
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
ds
pushf
clc
and
pushf
clc
ljmp
add
imul
pushf
clc
popf
jmp
add
jbe
inc
add
adc
fsubs
inc
add
add
add
inc
add
add
dec
add
dec
add
add
add
add
inc
add
add
dec
add
inc
add
add
dec
add
add
jae
insb
popa
imul
dec
dec
inc
inc
insb
imul
imul
insb
jae
push
insb
imul
imul
imul
jae
imul
imul
dec
dec
inc
inc
push
outsl
imul
push
fs
imul
insb
imul
push
jne
jns
imul
jne
fs
push
data16
add
add
add
xor
inc
add
pop
dec
dec
dec
dec
dec
pop
dec
push
dec
or
dec
add
push
dec
pop
dec
push
dec
or
dec
dec
dec
dec
dec
pop
dec
dec
dec
or
dec
add
dec
dec
push
dec
push
dec
inc
dec
pop
dec
dec
dec
push
dec
cmp
add
add
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jno
mov
outsb
jae
bound
add
mov
mov
inc
aaa
inc
jle
jno
mov
imul
inc
xlat
leave
xchg
inc
adc
jge
faddp
leave
xchg
fs
dec
leave
sbb
jno
rorb
add
shlb
xor
inc
push
outsl
push
push
inc
add
dec
inc
add
add
imul
pop
outsb
jbe
jns
push
imul
je
jp
arpl
push
imul
push
imul
push
jb
add
insb
pop
ja
je
bound
in
jnp
jnp
cmc
pushl
sar
fldcw
ficomps
cmc
add
add
xor
rep
xchg
in
aas
stc
mov
xchg
imul
fisttpll
cltd
mov
xor
add
outsl
cmp
mov
jae
jp
int3
mov
fstpl
push
sti
mov
jecxz
adc
rclb
shl
pop
push
aaa
jo
dec
rcrl
out
cmp
push
and
pop
add
stos
xchg
push
inc
add
lahf
sub
jmp
ret
fadds
push
addl
adc
dec
push
or
cli
mov
lock
and
and
mov
mov
stc
icebp
push
popf
mov
in
dec
and
lea
dec
and
mov
jg
fcoms
lcall
out
clc
inc
mov
push
mov
mov
add
or
and
notl
cwtl
dec
add
add
push
pusha
in
jle
cs
pop
ret
xor
and
add
xchg
fistpll
fbld
mov
arpl
mov
or
aam
das
cmc
outsl
in
inc
mov
adc
jmp
outsl
cmc
stos
in
test
lods
dec
inc
lret
jae
mov
pop
pop
in
jb
pop
cmp
push
fiaddl
addr16
imul
xor
out
mov
xchg
cli
xchg
xor
and
gs
fwait
cmp
lods
popf
or
sbb
jmp
icebp
ja
add
rcrl
imul
out
aam
bound
cld
stos
fildl
pop
or
out
or
insl
pop
loop
sbb
add
jmp
jbe
cmp
mov
cmp
cmp
mov
out
cmp
mov
add
fiadds
add
add
add
adc
cmp
out
add
add
add
jns
hlt
pop
cmpsl
sub
fldenv
inc
data16
ja
stos
inc
je
dec
mov
mov
xchg
scas
pusha
mov
mov
adcb
cmp
jp
aam
add
mov
mov
mov
push
xor
test
cli
nop
inc
cld
xor
test
push
xor
ret
and
add
cmp
xchg
inc
mov
hlt
add
daa
fmuls
arpl
mov
test
xchg
cmp
enter
and
sbb
int
xor
adcb
mov
xchg
pop
mov
fstp
sub
jge
mov
arpl
imul
sbb
fnstenv
fsubl
mov
add
add
subl
stos
dec
out
aaa
lahf
jp
imul
add
add
add
scas
mov
jmp
xchg
mov
mov
sub
fdivl
add
xchg
push
xchg
and
repz
idivb
mov
lock
cltd
inc
fwait
jle
imul
test
jecxz
xchg
xchg
aad
push
roll
ficoml
push
sbb
adc
mov
xchg
scas
and
jo
xor
scas
adc
sbb
or
popf
mov
fildl
stos
in
les
cmp
aad
movsb
mov
or
or
ja
shll
leave
or
mov
fstp
or
mov
inc
sub
lret
or
mov
and
inc
fsts
jge
mov
add
dec
push
pop
lcall
movsb
loopne
or
jp
enter
fmuls
daa
imul
xchg
add
add
inc
or
leave
bnd
xchg
add
cmc
add
add
shl
mov
add
popf
mov
into
cmpsl
mov
rcrl
ret
divb
pop
mov
pop
jmp
xchg
sub
mov
fnsave
inc
mov
addr16
jne
push
cmp
popf
test
not
dec
jnp
pop
jecxz
inc
bound
test
scas
dec
loopne
lods
mov
andb
orb
sub
push
cmpsb
movsb
mov
ret
or
mov
repnz
andb
cmp
pop
cld
or
shrb
sub
enter
icebp
int
es
dec
rorl
outsl
lds
cli
lds
mov
xor
add
mov
push
imul
pop
outsl
pusha
clc
lock
push
in
pop
movsl
pop
inc
aad
cli
ss
sub
movsb
xchg
cmp
test
sbb
jg
cmc
insl
cmc
out
lcall
sub
push
mov
movsb
push
ljmp
aaa
popa
cmp
sbb
push
aam
hlt
rep
mov
ret
dec
popf
mov
xchg
mov
enter
sbb
and
sbb
cmp
or
sbb
repnz
add
mov
and
adc
add
xchg
jbe
push
dec
mov
pop
jbe
xor
imul
rcrl
xchg
add
mov
outsl
das
dec
adc
mov
pushf
ss
cltd
pushf
test
jns
push
ficoml
test
pop
sbb
mov
popa
or
jno
push
inc
add
jecxz
in
xchg
insl
fldenv
scas
cmp
fmuls
xlat
cmp
sub
out
xchg
mov
fidivs
js
sub
dec
addr16
pop
ja
loope
or
out
sub
iret
push
mov
shll
xchg
or
or
test
mov
add
add
outsl
jle
dec
xchg
call
push
dec
jmp
add
add
add
xchg
and
fnstenv
repz
cmp
cmp
lea
stos
ds
mov
sub
scas
nop
mov
cmp
ret
xchg
or
push
shl
pushf
mov
das
das
loopne
mov
pop
scas
orl
cmp
fcomps
mov
scas
xor
lods
neg
in
outsl
mov
ja
inc
out
jo
icebp
andl
fstl
jle
hlt
es
or
sub
insb
xor
notb
xchg
int3
out
pop
aaa
pop
mov
fidivrl
sbb
fbld
push
out
mov
mov
leave
shll
aad
out
inc
and
cmc
mov
hlt
inc
outsb
mov
cwtl
fsubl
addr16
imul
lock
jnp
mov
cmp
pop
pop
or
rcr
mov
jns
lea
inc
xorb
aaa
stos
ret
test
dec
outsb
filds
add
or
and
scas
sti
jle
inc
sbb
test
in
add
cmc
add
add
sub
stos
ror
sub
icebp
or
and
xlat
loop
mov
int
and
dec
xorl
pop
jnp
leave
lods
lret
loopne
dec
aam
sbb
lcall
imul
adc
lea
daa
xorl
js
add
std
pop
mov
sbb
push
dec
jb
aad
repz
test
out
jne
bound
imul
insb
in
cs
push
or
clc
add
cmp
sbb
js
sbb
shlb
mov
add
decl
jo
or
mov
xor
movsl
rorl
mov
mov
stos
stc
mov
push
jg,pt
idivl
or
mov
jbe
xor
jle
jae
mov
cld
lds
push
into
and
add
negl
lahf
ret
and
add
fwait
rcrl
pop
cli
jecxz
dec
sbb
xor
test
sahf
and
add
lock
mov
cmp
mov
adc
stc
cwtl
inc
mov
in
cli
lods
fwait
and
mov
xchg
fistpll
and
or
sub
shll
mov
es
aad
into
pop
popa
mov
pop
enter
repnz
sub
pop
xchg
jne
mov
ljmp
mov
out
fwait
xor
adc
cmp
aaa
add
push
push
push
outsb
hlt
xchg
insb
xchg
call
or
pop
add
xchg
shlb
mov
mov
cmp
fdivrl
adc
rolb
pop
adc
pop
lcall
mov
call
test
dec
daa
call
cld
and
add
xor
push
jl
jle
insb
pop
decl
xchg
loop
push
cmc
add
add
xchg
inc
out
sub
sub
mov
aaa
pop
mov
xlat
lds
cli
test
sub
adc
dec
pushf
mov
and
test
inc
sub
mov
mov
push
xchg
mov
inc
les
maxps
gs
xchg
sub
popf
xchg
mov
jnp
les
xlat
in
repz
push
push
shl
test
push
jno
loope
push
or
hlt
addr16
mov
cmp
jle
addb
mov
mov
es
mov
test
mov
loopne
jo
roll
lahf
leave
push
call
cmpsb
xor
ret
add
lods
aaa
cmpsb
and
jg
movsb
push
sarb
sbb
daa
lret
push
popa
sub
xchg
lods
std
movnti
rcr
add
add
add
fwait
mov
pop
ljmp
push
out
add
cmc
add
add
mov
or
icebp
and
pop
out
lock
jle
pusha
mov
mov
syscall
add
and
imul
in
mov
adc
lahf
jo
or
iret
sbb
scas
mov
dec
stc
repnz
bound
lods
stos
out
xchg
push
pop
sub
sub
jne
sbb
mov
pop
xor
in
leave
sti
add
sbb
push
mov
sub
stc
sbb
ds
into
and
mov
push
shl
jge
push
in
pop
test
cs
lods
ret
ret
cli
push
cld
and
mov
fwait
add
ss
aad
and
scas
in
test
and
ds
lds
out
cmp
mov
out
mov
int
ret
jl
lahf
mov
pop
vmovdqa
in
jp
rcrl
push
lahf
sbb
add
aaa
data16
jne
mov
decl
add
cmc
add
add
mov
std
push
pop
std
pop
mov
enter
add
add
lock
es
push
ljmp
daa
in
xchg
adc
pop
outsl
xchg
mov
pop
dec
mov
pop
push
adc
push
push
js
jge
cld
mov
jge
push
icebp
or
pop
adc
shl
int3
xor
push
out
mov
fdivs
daa
cmpsb
jmp
pop
rcr
inc
mov
cmp
jecxz
dec
mov
dec
sub
add
jge
inc
lock
mov
pop
outsl
pop
lock
mov
mov
push
icebp
popa
pop
fwait
push
add
lods
xchg
cltd
dec
das
inc
xlat
ret
xlat
imul
ljmp
testl
shll
jo
jecxz
movsb
addr16
stos
imul
push
inc
jg
shll
ret
add
inc
in
jns
or
push
repz
aas
aam
push
mov
add
add
add
jnp
sti
xchg
rol
imul
jae
or
add
cmc
add
add
xchg
xlat
call
stos
xchg
or
mov
shll
inc
adc
dec
push
rclb
or
xchg
mov
js
and
mov
mov
bound
mov
jg
jle
inc
pop
lods
mov
cmpsl
xlat
outsb
ss
aad
imul
test
in
pop
mov
lret
xor
daa
pop
and
scas
fisubs
hlt
icebp
rolb
push
pop
loopne
mov
and
mov
inc
jge
dec
xchg
push
add
xor
mov
pop
and
push
mov
hlt
sbb
fs
iret
std
xor
imul
mov
and
lea
add
mov
xor
in
jmp
xor
js
daa
cmp
test
add
add
pop
sarl
test
sub
icebp
add
cmc
add
add
leave
mov
adc
call
enter
and
inc
ss
sbb
rol
mov
mov
sar
mov
fsubl
fcompl
out
mov
pusha
pop
mov
fsubs
lret
enter
cltd
mov
mov
push
into
push
and
mov
adc
in
push
mull
inc
aad
in
mov
xor
jmp
jmp
aam
inc
imull
gs
pop
or
test
lods
in
push
xor
xchg
cli
pushf
dec
dec
xchg
adc
testw
xlat
iret
jp
push
mov
addr16
in
add
jo
push
mov
cmp
ds
inc
mov
sub
and
addl
mov
out
pop
jb
das
cld
jo
aam
into
cmp
fnsave
pushf
adc
scas
push
add
insl
lock
std
repz
xchg
scas
mov
shl
repnz
cmc
add
add
mull
movsl
lock
sbb
cmp
mov
lds
jl
inc
push
js
dec
xchg
mov
push
sub
cld
xor
xchg
lods
mov
sbb
mov
dec
or
fcmovnb
ds
cld
mov
jo
jns
push
and
xchg
xor
pop
pop
xor
pushl
out
sub
cmp
dec
and
fdivrs
cmc
je
mov
fs
cmp
mov
aaa
dec
mov
cmp
adc
jl
cmove
pop
jmp
inc
lea
test
mov
pop
sub
out
cmp
inc
scas
insl
cmp
push
push
mov
jns
nop
mov
stos
mov
inc
xlat
daa
inc
adc
sub
jle
and
shrl
push
jbe
fstps
in
sub
cmp
or
fcomps
add
cmc
add
add
add
pop
jns
orb
or
mov
pop
leave
aas
inc
xchg
jne
pop
stos
mov
stos
xor
dec
adcl
test
mov
push
mov
ret
inc
xchg
jmp
sbb
mov
xchg
scas
jg
pushf
and
sbb
and
xchg
daa
mov
mov
rolb
test
or
fmul
sbb
push
inc
jo
es
das
push
push
lcall
push
in
sarb
mov
xchg
aam
je
and
decl
pop
mov
xorb
push
iret
xor
add
xor
and
inc
mov
testl
add
les
mov
insl
jmp
pop
xor
test
mov
add
add
mov
mov
sub
inc
mov
cmc
add
add
ret
cwtl
pop
mov
nop
or
fadds
mov
adc
dec
sbb
cmp
inc
arpl
mov
pop
test
popa
cli
int3
addb
orl
mov
mov
mov
insl
sbb
daa
mov
inc
rolb
hlt
cwtl
std
jg
adc
notb
negl
jl
mov
inc
mov
scas
adc
insl
out
addr16
jge
outsb
dec
inc
add
push
ret
pop
push
push
cmp
aas
push
popf
es
shlb
sub
cli
loopne
cmp
xchg
and
inc
call
xchg
cltd
jge
inc
mov
adc
jns
jg
mov
insb
notb
mov
hlt
cmp
cmp
dec
jnp
hlt
mov
add
ljmp
push
cld
and
xchg
or
push
in
stos
xchg
mov
gs
fldl
add
lret
xchg
in
mov
pushl
comiss
dec
cltd
shl
add
cmc
add
add
arpl
sbb
fwait
lods
inc
outsb
xchg
inc
inc
jbe
jae
fs
repz
popa
cmpsl
add
add
or
cmp
sub
je
mov
clc
adc
mov
push
test
sub
pop
dec
rcll
jecxz
xor
in
sbb
std
idivb
fidivl
and
or
popf
imul
mov
popa
lcall
daa
and
shll
dec
scas
adc
cltd
cmp
mov
jp
les
add
mov
cmp
mov
adc
ss
jne
test
fisubl
popa
cmpsl
je
dec
pop
xchg
pop
js
repnz
add
dec
aad
es
dec
loope
mov
addb
repnz
imul
push
mov
inc
ds
sbb
jmp
adc
mov
mov
mov
add
add
sub
in
negl
push
inc
push
xor
lods
cld
testb
cmc
add
add
out
sub
mull
mov
lods
aam
fisttps
stos
jae
daa
lods
xchg
inc
mov
sti
in
mov
and
pop
in
and
push
jne
or
lea
mov
fistps
pushl
mov
aam
sub
in
adc
js
mov
hlt
enter
jae
sahf
in
jb
and
pusha
scas
adc
aad
or
aad
adc
scas
xor
mov
lock
mov
and
pusha
mov
xor
jge
pop
add
push
cli
mov
mov
sub
test
jg
or
add
ss
lods
stos
imul
sub
loop
pusha
daa
mov
pop
int3
lods
sbb
dec
jnp
push
shrb
mov
jge
sub
xor
sbb
sbb
xchg
jb
xchg
dec
adc
aad
xlat
std
jp
inc
add
add
mov
nop
fmull
jp
testl
add
call
xlat
gs
sbb
mov
push
sahf
push
ss
jmp
mov
dec
in
out
es
add
sub
inc
ja
pop
dec
ficomps
fwait
leave
loope
mov
out
cmc
cltd
std
xchg
lds
dec
lods
insb
into
sbb
adc
js
ja
dec
test
cmc
lods
fsubrl
loop
imul
jo
mov
and
test
je
xchg
jae
rcrl
sub
icebp
fst
scas
xor
push
sbb
cmp
sbb
mov
add
cmp
and
je
insb
jnp,pt
xor
loop
mov
aam
out
lock
dec
cmp
mov
jge
mov
fs
push
mov
sti
ja
cmp
push
rorb
loope
call
out
and
lods
add
add
adc
push
add
adc
xlat
adc
add
add
inc
lea
xor
lock
mov
cmp
mov
fldt
mov
jnp
jne
pop
xor
scas
jmp
jmp
std
xchg
or
bound
ret
sbbb
insb
cmp
xor
dec
pop
push
xor
ret
xor
mov
pop
xchg
sub
xor
dec
icebp
push
pop
gs
sub
in
mov
push
xchg
cmpsl
loope
push
popf
add
inc
outsb
aas
pushf
cwtl
insb
aam
xor
fnstsw
and
inc
mov
cmp
mov
push
hlt
out
sbb
adc
loope
dec
shlb
popf
stos
int
pop
ds
jle
popa
popa
fmull
clc
pop
xor
divb
xchg
in
xor
in
mov
jns
cmp
adc
sti
mov
popl
xchg
pop
orb
lods
xchg
fcmovnu
push
or
adcb
lret
add
out
repnz
add
pop
inc
xchg
pusha
push
movsl
stc
add
cmc
add
add
fwait
in
in
xchg
mov
xor
xor
xor
mov
inc
pop
mov
dec
popf
aaa
sub
xor
call
inc
mov
jne
repz
pop
push
jp
adc
cmc
cld
add
jnp
pop
pop
pop
cmpsl
shrl
div
xor
jo
xchg
ss
rcll
addr16
xchg
dec
icebp
cmpsb
imull
repz
mov
je
and
nop
adc
ret
inc
pusha
addr16
sbb
push
mov
inc
mov
or
pop
pop
xchg
incl
xorb
loop
icebp
mov
jno
data16
test
out
mov
shlb
aaa
orl
dec
faddl
sub
cmpsb
cmp
sub
aas
incl
pop
sbb
mov
aaa
and
popf
pop
outsl
cmc
pop
lock
cmc
inc
adc
iret
sti
xor
add
mov
push
decl
pop
clc
rcll
add
cmc
add
add
dec
cmp
jle
mov
mov
and
cmp
fisttps
out
inc
aam
or
push
cmp
test
ret
inc
out
and
push
dec
fwait
hlt
mull
jg
or
dec
push
adc
aad
push
gs
and
xor
sarl
cmp
mov
shlb
ljmp
movsl
rclb
ret
pop
push
xchg
cli
aad
popa
cltd
pop
int3
inc
and
daa
rclb
mov
inc
iret
cmp
cmpsb
movsl
jmp
mov
cmp
mov
xchg
mov
mov
or
fs
xchg
dec
cmc
mov
test
roll
mov
dec
js
xchg
add
jae
movsb
popa
lods
adc
int
lret
dec
loope
inc
shl
call
arpl
add
and
cmp
sti
fsubp
decl
ret
subl
inc
sti
add
cmc
add
add
inc
imul
and
dec
filds
je
dec
nop
dec
cmp
iret
adc
xchg
lds
or
adc
and
loope
pop
pop
scas
pop
push
push
ret
or
dec
pushf
stos
dec
xlat
push
xor
cmc
or
mov
fisubl
push
fdivs
jg
cmpsb
pushf
cs
outsl
or
loope
sub
cmp
cmc
nop
and
xor
fcmovu
mov
sbb
push
insb
lret
and
mov
mov
andb
jle
test
pusha
sbb
jmp
loop
mov
cmp
scas
shlb
addl
and
les
dec
mov
or
movups
popa
or
and
push
imul
imul
loopne
xchg
loope
mov
add
add
outsb
xor
or
data16
xor
add
cmc
add
add
cs
adc
cmp
pop
lds
scas
in
in
mov
adc
sub
xor
addr16
adc
or
pusha
lods
shl
loopne
push
in
outsl
stos
js
loopne
push
push
cmp
mov
sti
cmp
xor
aaa
fildl
cmpsl
mov
cmp
int3
mov
pop
cld
in
cmp
hlt
loopne
orl
sbb
nop
xchg
hlt
push
ljmp
aaa
addr16
push
sbbb
add
test
mov
das
mov
mov
sub
out
das
nop
rorl
and
jl
jb
mov
fcmovne
add
jno
sbb
cli
mov
sti
and
ret
lock
out
mov
sub
mov
scas
lret
mov
ljmp
arpl
pop
add
add
inc
ror
lock
jnp
jmp
sbb
dec
sub
jns
add
cmc
add
add
mov
mov
adc
mov
xor
xor
inc
mov
mov
cmp
out
pusha
add
fld
shl
mov
stos
lds
sub
ja
inc
mov
mov
push
xchg
push
int
loopne
push
test
fstps
mov
sub
and
imul
adc
and
outsb
or
hlt
in
pop
imul
sahf
push
jbe
jnp
fidivrs
mov
stos
cmp
cmpsl
pop
or
add
xchg
scas
jbe
dec
add
rcrb
sti
in
cmp
adc
lock
addl
loop
ret
outsl
pop
cld
and
sahf
jo
mulb
jb
xchg
jae,pt
jne
call
and
inc
dec
mov
imul
arpl
lock
lods
jmp
sub
and
repz
fimuls
mov
sbb
add
add
add
xor
into
cmova
add
iret
int
or
int
cmp
imul
sbb
mov
inc
sub
sub
push
pop
mov
cld
mov
mov
cmpsb
jl
mov
mov
ficompl
rorl
pop
mov
ret
add
addr16
xchg
xlat
sbb
stos
and
sub
faddp
punpckldq
jb
inc
mov
stos
mov
xchg
and
jecxz
push
jbe
adc
push
js
mov
leave
ss
cmp
insl
insl
xchg
aas
fwait
and
inc
subl
stos
in
sbb
fucom
leave
sub
lods
repz
outsb
mov
jae
xor
adc
xor
scas
icebp
add
sarb
sahf
fcomi
push
sbb
sbb
js
xor
fisubl
insl
dec
nop
outsl
or
lret
test
fbld
add
out
xchg
jns
iret
mov
add
cmc
add
add
add
lahf
push
je
fnsave
or
sbb
aam
sub
dec
mov
movsb
jo
roll
in
inc
mov
mov
scas
rol
jno
cmpsl
sbb
insl
inc
sbb
fs
cmpsb
mov
fsubrs
add
dec
pop
mov
adc
cmp
ret
insl
pop
sub
or
mov
and
sbb
enter
popa
outsb
push
lock
js
and
movsl
inc
flds
mov
adc
inc
int3
faddl
pop
ljmp
iret
push
insl
jae
xchg
ss
cmpsb
mov
pusha
xor
daa
movups
pop
orl
mov
shlb
jae
adc
lea
add
jno
cs
mov
and
jns
enter
idivl
push
cmp
bound
ficoml
sub
mov
loop
add
add
scas
push
repz
cmc
scas
mov
jo
lret
add
cmc
add
add
cltd
loope
imul
xor
fmull
dec
mov
fimuls
inc
int
or
or
rcrb
xchg
lret
mov
imul
xchg
pop
xor
in
pushf
xchg
cs
ljmp
test
out
in
ss
daa
pushf
cmp
enter
dec
mov
cmpsb
popf
push
mov
sbb
jp
popa
mov
sbb
and
vpsubusw
mov
mov
and
div
loopne
fadds
xor
jno
daa
repz
pop
xchg
jo
imul
xor
mov
movsb
out
scas
jp
jp
imul
cltd
pop
sbb
lock
and
loopne
push
pop
inc
push
leave
loop
pop
iret
addl
scas
fisubs
push
arpl
sbb
mov
pop
add
add
pusha
rorb
lea
pop
in
dec
add
add
add
add
push
push
xchg
lds
xorl
clc
or
inc
xor
out
push
and
pop
fcomps
xchg
mov
incb
xchg
adcl
pop
mov
fcoms
stos
add
lea
div
popa
adc
shrl
jae,pn
dec
jnp
mov
dec
cmp
outsb
xor
pop
mov
pop
or
dec
scas
icebp
mov
aam
leave
jecxz
xchg
adc
sub
lds
sahf
ds
jnp
scas
lahf
in
pusha
dec
adc
add
ljmp
ja
xchg
and
xchg
add
mov
sbb
jo
push
jle
sbb
inc
pop
mov
push
dec
popa
sbbl
add
arpl
sub
xchg
movsl
mov
leave
pop
mov
fisttpll
frstor
xor
add
add
inc
or
inc
popf
add
add
gs
testl
ja
mov
add
cmc
add
add
mov
cmp
jg
iret
fidivrs
fidivs
cmp
sub
mov
adc
or
arpl
inc
adc
mov
sbb
pop
cmp
mov
call
adc
popf
push
pop
cmp
aad
dec
add
std
lock
adc
enter
xlat
lods
add
enter
lcall
mov
pop
ljmp
out
mov
out
mov
out
cld
cmc
fsubrs
xchg
imul
imul
push
ja
fcmovne
adc
inc
les
mov
fmuls
jl
leave
les
jge
xorb
mov
jge
sub
mov
fdivrl
xor
lret
sti
pop
sub
mov
or
pop
out
sbb
inc
adc
xor
xchg
sub
mov
xor
add
and
daa
lahf
jle
sbb
mov
aaa
add
add
add
add
mov
add
movsb
pop
and
gs
je
data16
add
ja
leave
mov
popa
bound
sbb
lds
shlb
mov
loopne
aaa
fstl
data16
add
pop
or
ljmp
pop
test
mov
scas
mov
ret
inc
adc
aad
ror
lods
push
jge
jne
hlt
ja
in
in
cmp
stos
cld
js
xchg
mov
cmp
mov
adc
jl
int
inc
xor
lea
jno
inc
jp,pn
shl
daa
sub
dec
ja
xchg
inc
xchg
mov
adc
pop
mov
ret
mov
cmp
push
in
sbb
adc
das
add
daa
or
notb
pop
lea
movsb
out
xor
add
add
xlat
aam
jg
fwait
cmp
add
cmc
add
add
stos
ds
push
movsb
xchg
mov
sbb
es
sti
lcall
mov
push
xor
in
jp
mov
mov
sahf
ja
xchg
add
stc
mov
aam
xor
fldenv
movsb
xchg
adc
cltd
jle
jb
push
and
shll
sbb
sbb
push
hlt
test
rcr
mov
inc
jmp
leave
bound
insb
xor
out
das
fwait
push
inc
cmp
jle
scas
cli
in
loopne
jg
cli
hlt
and
icebp
arpl
int3
push
loopne
outsl
imul
push
fmuls
cmp
push
and
jb
mov
jmp
mov
lea
jl
jl
stos
mov
es
sub
sbb
mov
add
push
add
add
push
inc
pop
jns
aas
fisttpl
inc
push
test
xor
add
add
add
and
aad
adc
and
ja
cltd
push
dec
mov
mov
sub
dec
adc
pop
mov
daa
into
mov
clc
mov
hlt
dec
push
hlt
and
inc
pop
pop
in
loopne
out
arpl
lcall
adc
test
add
xchg
xchg
cmc
push
mov
push
sbb
xor
or
cmp
cmp
shlb
ja
add
push
bound
dec
movsl
aam
test
inc
dec
sbb
fbld
in
pop
xor
and
xor
dec
adc
xor
lret
xchg
rolb
adc
xorb
push
cld
mov
testl
pop
cmp
pop
dec
push
push
mov
les
fcmove
fwait
ljmp
mov
cmp
mov
cmp
pop
sti
enter
cli
dec
mov
cmp
std
arpl
adc
dec
xchg
xchg
mov
add
cmpsb
sbb
jnp
mov
dec
add
cmc
add
add
repz
xchg
fdivrl
xor
sbb
sbb
mov
addl
and
arpl
es
sub
or
inc
dec
inc
sarl
addr16
aam
es
push
shll
fwait
and
lret
inc
cld
add
inc
jo
and
popa
pop
call
sub
push
sbb
pop
push
popa
push
fwait
addl
mov
notl
add
insb
fdivrl
xchg
movsb
mov
imul
jle
push
mov
aam
mov
dec
es
fcoms
std
cmc
stos
sbb
fmuls
mov
ja
or
inc
mov
xchg
aaa
push
movsl
popa
cmpsb
stos
fistl
pop
or
ja
and
sbb
imulb
daa
mov
add
les
add
add
xlat
pop
xlat
jg
mov
adc
push
add
add
add
and
nop
push
ret
fcmove
sub
pop
sbb
pop
out
sub
fmull
jp
lods
mov
ror
mov
punpckhdq
cmp
movsl
push
ss
data16
ret
int3
xchg
jns
and
ja
sahf
call
pop
ficompl
adc
cltd
dec
cmp
mov
adc
ss
push
push
inc
sub
jl
inc
insb
out
movsl
mov
cmp
dec
pop
loope
aam
stc
cs
dec
adc
jb
imul
out
data16
dec
adc
xchg
adc
stos
jp
in
pop
push
mov
and
xor
adc
add
lahf
push
adc
lret
cmp
bound
add
arpl
lahf
outsl
mov
add
pusha
jg
in
loopne
ljmp
or
xor
inc
pushf
mov
jo
test
add
xchg
mov
idivl
mov
or
add
add
add
ss
inc
sub
lea
pop
out
cltd
nop
jne
xchg
loopne
js
pop
je
es
or
out
inc
push
iret
imul
aad
push
arpl
add
insl
ret
push
shlb
int3
lret
fwait
arpl
iret
aam
pop
cltd
fwait
mov
repnz
mov
popa
mov
mov
sub
push
lret
pop
inc
xor
aad
cmp
bound
ffreep
mov
inc
pop
dec
add
mov
xchg
mov
cmp
stos
lock
mov
aad
add
xor
repz
ja
xchg
outsl
pop
or
fwait
cmp
mov
cmp
mov
ret
push
pop
adc
sbb
fsubrl
xchg
pop
aam
aad
ljmp
ret
lret
push
jb
add
in
push
dec
enter
dec
mov
add
test
mov
stc
push
add
cmc
add
add
enter
dec
and
fidivrs
fs
mov
cmp
mov
adc
pop
pop
cmc
lods
in
cwtl
xchg
cmp
lahf
sbb
cmp
dec
insb
dec
nop
and
pop
dec
in
imul
mov
pop
out
sarl
mov
flds
movsl
in
inc
imul
mov
ret
pop
push
cmpsb
mov
xchg
xor
lock
outsb
fcoml
in
movsl
push
insl
dec
pushf
adc
lret
jp
sbb
sub
pop
push
sbb
lcall
add
xchg
je
cmp
movsl
mov
and
dec
scas
mov
movsl
ret
stc
xchg
aaa
stos
xor
ret
xor
cli
xor
lods
xlat
xor
inc
mov
mov
and
mov
sar
mov
imul
or
add
push
pop
push
jmp
sub
mov
in
or
add
add
add
dec
leave
push
xor
insb
andb
outsb
stos
add
push
fisttps
repnz
dec
inc
mov
iret
push
jns
inc
or
sub
rcrl
sub
inc
sub
mov
lret
push
lock
lahf
dec
add
mov
xorb
test
xor
cld
push
fdivrl
hlt
and
loope
movsb
das
rcr
inc
add
out
pop
jg
insl
sti
cmpsl
add
clc
jns
popf
mov
adc
jnp
iret
insb
sub
repz
hlt
add
mov
mov
lahf
push
cmc
jecxz
cmp
xor
test
rcll
fisttpll
inc
xor
sbb
mov
add
pop
mov
scas
lahf
inc
inc
insl
mov
cs
or
lds
inc
mov
dec
aas
mov
ret
lods
push
xchg
faddl
add
pop
inc
pop
lods
pop
cli
cmc
inc
mov
dec
fisttps
add
cmc
add
add
pop
mov
test
cmp
push
cld
cmp
push
daa
and
or
sbb
pop
mov
dec
dec
push
mov
stos
jp
mov
in
sub
jo
addr16
mov
inc
push
fbld
int3
aam
push
pop
movsl
xor
imul
sub
xor
stos
nop
push
sbb
sub
daa
jge
arpl
cld
out
cs
icebp
xchg
jnp
aad
xchg
cmp
fidivs
mov
pop
movsb
mov
dec
mov
gs
test
add
add
cltd
dec
cmp
mov
sub
gs
in
xchg
adcl
mov
jg
add
jge
sbb
cmc
inc
xchg
xor
lret
add
add
add
stos
cltd
inc
popf
jae
out
inc
dec
clc
xchg
fdivrs
aam
add
cmc
add
add
mov
inc
movsl
inc
fs
push
hlt
push
imul
and
lds
fsub
shl
js
repz
imul
mov
pop
mov
cmc
inc
dec
popa
sbb
ja
bound
aam
in
fimuls
iret
jg
add
dec
ljmp
test
sbb
in
jmp
aas
cltd
pop
xchg
insb
inc
sbb
rcr
in
adcb
xor
js
lcall
pop
xchg
data16
popa
or
and
pop
sbb
fildl
imul
sbb
or
ret
clc
mov
int3
inc
mov
inc
stos
leave
add
lds
mov
mov
cmpsl
jmp
dec
sub
cld
repz
fnsave
mov
cmp
andb
leave
cli
jge
into
push
cmp
add
mov
nop
test
aam
int
xchg
clc
bound
add
cmc
add
add
lea
incl
xchg
outsl
or
add
enter
out
les
in
and
mov
mov
shll
add
mov
das
push
pop
and
push
push
adc
ret
sbb
jno
add
xchg
mov
xchg
test
ret
sbb
inc
mov
int
aaa
or
jmp
negb
int
inc
aas
lods
jp
push
jge
jg
mov
ds
pop
and
add
out
out
and
outsl
mov
in
out
fists
mov
push
in
dec
dec
repnz
add
cmpsb
lds
out
je
mov
imul
cmc
xor
and
adc
cli
insb
pop
and
ret
pop
dec
adc
sarl
les
roll
lods
inc
push
xor
mov
pop
arpl
addr16
inc
jmp
jne
or
add
jle
into
cmpsl
and
repz
xlat
inc
sbb
sbbb
and
pushf
scas
outsl
ret
pop
sti
fs
lds
sub
push
lods
or
aam
lcall
jne
add
lods
in
pushf
popf
cmpsb
cld
es
mov
sub
cmp
jle
dec
sub
and
mov
fwait
shrb
iret
jae
loope
les
aad
xlat
out
repz
nop
xorb
add
add
pop
jecxz
dec
jp
add
push
xchg
jno
hlt
mov
or
sti
mov
jo
push
outsl
sub
mov
xlat
mov
xchg
jb
jns
mov
adc
mov
inc
repz
xchg
subl
mov
push
or
sbb
and
cmp
aas
add
add
out
out
pushl
jecxz
push
inc
fdivrl
mov
add
cmc
add
add
push
xchg
add
out
and
adc
in
dec
sbb
cld
dec
fcomip
pop
mov
in
xor
cld
xor
mov
xor
mov
pop
push
mov
and
je
test
scas
and
out
sahf
mov
xchg
test
pop
lahf
push
inc
push
cmp
in
cmpsb
shll
push
mov
repz
les
and
in
stc
xchg
pop
stos
dec
xchg
push
add
and
aaa
sbbb
inc
xchg
cmpsl
inc
mov
push
fbld
pop
mov
and
test
push
xchg
sahf
mov
sti
js
shrb
jb
aam
loope
jp
mov
or
lcall
cmc
mov
jbe
add
jne
shlb
push
cmc
xor
iret
push
dec
imul
sar
pushf
push
sbb
jno
mov
xor
add
test
push
scas
out
mov
sarb
sgdtl
cmc
add
add
mov
sub
xor
div
aas
sbb
rcl
sbb
jmp
pop
ret
sub
fisttpll
push
outsb
xor
jecxz
dec
adc
jmp
sti
jle
ret
popa
add
lds
jne
test
push
and
iret
xchg
out
pop
sub
sbbb
stc
cmp
out
test
xchg
push
out
inc
test
dec
xchg
scas
or
sarb
inc
lcall
mov
sub
and
lahf
xlat
cs
lods
std
push
sub
cwtl
pop
jno
mov
inc
push
test
cltd
ficomps
pop
and
adc
sbb
add
movsl
fistps
movsb
fwait
movsl
fdivrs
in
les
iret
cli
add
mov
fcomip
ljmp
addr16
jl
lret
sub
add
add
xchg
and
movsl
mov
mov
cmp
scas
inc
mov
add
cmc
add
add
mov
or
add
pop
dec
into
pop
movsl
ret
subb
aad
mov
out
push
push
xor
aaa
negb
xchg
mov
jnp
cmp
xchg
pop
aas
call
out
arpl
lea
lcall
adc
mov
inc
and
movsl
movsb
adc
sbb
xchg
subl
xorb
adc
mov
sub
inc
lods
mov
adc
and
ret
push
cwtl
in
xor
jg
fldt
pop
lcall
loop
aas
cltd
cwtl
push
push
subb
clc
adc
xchg
pop
push
aas
sbb
jnp
jns
out
mov
xchg
jmp
sti
lret
dec
mov
jmp
xchg
test
cmp
testb
push
cs
push
shrl
xor
jecxz
inc
add
add
mov
push
jg
mov
imul
add
stos
mov
ret
rcl
jnp
mov
mov
cmp
fwait
in
or
mov
or
lret
pop
mov
aas
mov
and
and
or
jae
sar
jb
mov
cltd
mov
dec
xchg
xchg
pop
fbstp
jmp
sub
mov
push
cmp
test
push
lcall
adc
leave
loop
stos
push
leave
add
cmp
sbb
or
dec
popa
mov
and
fldenv
stos
fsubrl
ss
jg
testb
call
pusha
in
subl
scas
pop
xchg
xchg
add
mov
outsl
adc
cmp
imul
jbe
into
imul
mov
cmp
xor
xchg
ljmp
push
push
lahf
dec
jg
inc
lods
call
add
inc
stc
mov
mov
fidivrs
fadd
push
filds
add
add
mov
and
cmc
xor
lods
sbb
stc
repnz
cmp
sbbl
mov
cmp
inc
mov
ja
stos
mov
sbb
add
inc
pusha
fcoms
clc
jno
jae
sbb
ret
inc
lea
cld
jbe
sub
fdivrl
push
sub
add
cmpsl
pusha
sbb
and
push
addr16
lock
dec
imul
cmp
out
test
mov
dec
mov
shrb
cmp
incb
mov
jl
adc
pop
ret
mov
jno
fists
push
imul
adc
mov
xchg
push
cmpsl
idiv
fisttps
fisttpl
popa
or
pop
cmp
push
and
push
mov
cmpsb
aad
cmp
lea
jg
jno
push
jns
add
xchg
sub
scas
jbe
or
jl
add
cmc
add
add
js
cmp
pop
lea
in
jge
pop
lock
inc
fisubs
pop
xor
and
jne
add
stos
sub
mov
dec
out
mov
adc
cmp
mov
pop
sbb
popa
jmp
aaa
jle
inc
mov
sub
mov
cltd
scas
jmp
mov
and
pusha
dec
mov
not
xor
call
push
test
xor
cltd
lea
adc
push
dec
sub
fdivrs
das
imul
lcall
sbb
push
cld
repnz
inc
cli
inc
aad
push
xchg
xor
and
mov
fs
xchg
insb
ljmp
jae
pop
dec
sub
pop
xor
mov
and
adc
jno
jae
adc
ret
sub
cmpsl
mov
ss
jp
dec
cmp
xchg
mov
add
add
hlt
fists
adc
dec
jno
add
cmc
add
add
xchg
js
inc
aas
sbb
insl
push
andl
adc
call
sub
fwait
cmp
jmp
pop
popf
les
int3
popf
daa
inc
sub
hlt
inc
gs
lahf
addb
and
aad
aas
in
fidivrs
je
enter
ret
and
or
stos
cmp
out
fwait
ds
mov
dec
mov
cs
ret
and
cli
rcll
mov
insb
and
mov
or
insl
call
mov
mov
loopne
cltd
testb
push
and
mov
or
adc
into
gs
sbbl
add
arpl
cltd
or
das
or
jg
aad
or
out
inc
cmpl
mov
push
jmp
mov
in
and
dec
jge
inc
lds
add
cmpsb
dec
xchg
es
add
add
add
into
fwait
testb
or
pop
ljmp
add
scas
mov
repnz
mov
loop
cmp
into
or
arpl
in
in
jp
addr16
xchg
stos
cmp
push
fidivrl
movups
jle
add
ljmp
mov
sub
in
push
pop
test
mov
imul
mov
sbb
ds
inc
jbe
mov
xor
xchg
mov
fisubrl
lods
je
inc
das
loopne
test
aam
add
imul
arpl
repnz
jmp
push
aam
movsl
ja
pop
pop
pop
test
mov
push
pop
xor
test
adc
idivl
push
popf
jbe
into
sbb
testb
mov
orl
push
loop
fidivrl
push
sbb
test
pop
and
scas
xchg
lods
es
inc
cmp
add
add
xor
mov
pop
mov
cltd
movsb
mov
add
cmc
add
add
repnz
fdivrs
in
jns
jb
sbb
cmpsl
ja
sbb
or
cmp
or
ror
popf
xor
dec
outsb
imul
mov
movsb
enter
mov
or
adc
xchg
mov
pop
cmp
icebp
sbb
mov
out
cmp
in
int
fs
sbb
lcall
push
daa
shrb
lret
dec
aaa
sbb
inc
adc
rcrb
loop
cwtl
mulb
pop
sub
lcall
sbb
in
xor
mov
and
pusha
in
ss
xor
enter
or
loope
sub
sbb
pop
fisubrl
xchg
sarl
fstp
iret
adc
push
mov
pushf
lods
mov
inc
in
pushf
sbb
movsb
fdivrp
sbb
mov
cwtl
xor
add
sti
inc
out
aas
mov
sub
mov
pop
add
cmc
add
add
aas
fimuls
pop
aas
out
mov
sub
mov
jle
pop
popf
push
fwait
mov
push
mov
nop
mov
and
out
mov
stc
mov
mov
daa
aaa
pop
int3
and
or
and
rorl
or
frstor
mov
adc
dec
mov
sti
push
adcb
pop
jo
repz
pushf
xchg
mov
js
mov
stos
pop
int
cmp
jp
dec
xor
push
xchg
fbstp
push
cli
dec
fmull
cwtl
shlb
dec
pop
loope
mov
test
mov
jp
fmull
inc
cmp
jg
jae
jge
mov
cli
xchg
mov
mov
mov
pop
fs
jb
adc
dec
adcb
add
push
bnd
jp
xchg
inc
pop
sti
or
sbb
add
add
add
mov
cmpsl
imul
cmc
aas
insl
pop
mov
pusha
mov
subb
ljmp
mov
sub
les
lods
mov
cs
mov
cmp
xchg
adc
xor
call
insb
inc
cmc
stos
push
adc
ja
hlt
xchg
sub
shl
adc
test
into
xchg
js
pop
add
sub
xchg
or
popa
in
xchg
sti
fchs
mov
fsts
jne
sbb
andb
dec
or
sub
lock
add
test
xchg
inc
pop
jno
sbb
dec
and
dec
gs
sub
or
gs
sbb
loope
mov
enter
call
scas
jns
jg
hlt
jge
adc
loopne
dec
cmpsl
cmp
sub
jae
xchg
xchg
mov
add
in
out
ja
fbstp
xchg
cmp
cmc
add
add
fisttps
mov
fcmovnbe
test
cld
ja
fcmove
shll
or
xlat
into
mov
adc
pop
lahf
icebp
jecxz
xchg
lods
xchg
mov
mov
adc
aad
mov
mov
add
pop
das
lret
jnp
dec
cmp
outsb
notb
outsl
push
fwait
xor
rcrl
test
rorl
mov
xchg
mov
inc
jle
jp
mov
add
outsl
sbb
add
sbb
add
jmp
aaa
incb
add
rsm
inc
ficompl
or
shr
loop
xor
jnp
movb
icebp
out
sbb
fmuls
cmp
ret
jge
jnp
push
push
scas
or
push
sub
adc
imull
in
jnp
xor
mov
jp
out
xor
add
add
pop
in
or
add
add
add
int3
xchg
mov
push
sbb
sub
jp
ret
in
rcrl
and
repnz
xchg
mov
xor
lret
lods
push
out
mov
xchg
lods
lds
adc
jle
mov
push
or
insb
out
jg
and
std
add
jle
sbb
fs
add
fs
inc
aas
mov
sub
shll
xchg
jo
pop
push
and
sti
push
and
icebp
jecxz
in
push
xor
cmp
imul
loopne
sbb
daa
lcall
loop
in
fcomps
rorb
xchg
test
pop
push
repz
mov
into
push
loop
leave
ljmp
stc
filds
stc
sarl
mov
repnz
and
push
push
scas
arpl
and
mov
jg
imull
push
notb
test
cmc
add
add
inc
push
inc
jl
call
add
push
inc
jne
push
dec
idiv
cli
nop
inc
jno
cli
xor
mov
pop
adc
mov
repnz
mov
dec
popf
push
out
subb
je
outsb
mov
call
inc
push
sub
outsb
mov
cs
sub
das
in
mov
pop
mov
jp
mov
jl
or
stos
jle
dec
ljmp
push
subb
fsub
cld
loop
jns
stc
or
imul
dec
ret
pop
and
dec
int
mov
push
sub
andl
gs
rcll
or
cmp
cli
jge
inc
das
mov
es
inc
out
add
nop
enter
out
movsl
stos
jnp
cltd
pop
xchg
or
add
sti
jg
and
lea
outsl
sbb
add
add
add
or
imul
je
stc
mov
popf
fs
pop
cltd
pop
sbb
lds
or
adc
enter
fsubl
scas
add
mov
push
pop
jmp
popa
inc
jl
add
ljmp
out
leave
and
xchg
jno
push
int
pop
pop
lret
sbb
cmpsb
pop
cmp
aad
mov
fsubrl
jmp
aam
mov
mov
cmpsl
cmp
int3
pusha
decb
cmp
sbb
cmp
loope,pn
adc
test
jnp
pop
mov
cmp
adc
mov
pop
sbb
and
ja
mov
ljmp
add
mov
out
dec
jbe
je
cmp
enter
sub
dec
jns
mov
push
xchg
cwtl
lahf
sbbl
mov
scas
aam
jnp
fldl
fcomp
rorl
sbb
add
xor
xor
jno
jae
ljmp
pop
sub
mov
ret
push
or
pop
mov
out
les
daa
out
and
jp
fstps
mov
jo
inc
xor
aaa
insl
mov
mov
or
cld
scas
aad
xor
ret
mov
insb
daa
jl
cmp
adc
aad
ret
popf
mov
push
add
push
add
or
sbb
mov
je
lods
loop
mov
mov
lods
shll
mov
lds
loopne
ss
insb
cld
mov
call
jns
lea
mov
loopne
and
xchg
sub
fwait
mov
pop
daa
or
sub
icebp
testb
dec
scas
xor
add
xor
mov
movsl
xchg
add
mov
jno
std
outsl
mov
xchg
pop
cltd
mov
int3
cmp
add
add
cmc
add
add
push
cwtl
repnz
add
fwait
cmp
xchg
pop
adc
je
ja
adc
enter
push
lea
out
xlat
mov
je
push
pop
mov
jmp
add
pop
in
mov
neg
out
gs
sub
int3
cmp
movsl
jle
sub
adc
mov
adc
in
call
in
or
inc
pop
push
ja
sub
sbb
imull
inc
decl
incl
sbb
fwait
mov
adc
std
pop
shrl
cmp
sbbl
jmp
adc
outsb
xorb
je
nop
sub
mov
mov
bound
shrb
pop
sub
inc
xorb
sbbb
aaa
mov
dec
outsl
dec
daa
fs
sbb
lahf
add
add
jmp
loop
test
add
cmc
add
add
roll
and
pop
sbb
mov
ret
popa
inc
add
and
jp
cmp
mov
jbe
mov
leave
push
ja
or
fistl
inc
fisttpll
in
jnp
xor
sbb
inc
out
ja
mov
pop
pusha
jbe
lods
nop
adc
push
dec
xor
outsb
das
mov
fadds
adc
mov
negb
cltd
push
push
pop
aas
cmpsl
or
pop
scas
jnp
xor
pop
imul
xchg
call
xchg
adc
mov
push
xor
test
mov
push
jge
adc
add
inc
ficoml
mov
mov
aas
ret
bound
lods
vmovddup
inc
xchg
popa
add
add
xor
idivl
dec
int3
clc
in
pop
add
cmc
add
add
inc
fisttpll
loopne
cmpsl
fisttpl
push
xor
inc
in
std
dec
sbb
mov
shlb
ret
pop
shlb
cli
mov
into
and
shll
dec
cmp
inc
lret
xchg
incl
mov
xor
sti
pop
xchg
mov
int3
sbb
std
in
int
lret
cmc
push
dec
xchg
jg
in
leave
test
xchg
adc
stc
les
fcomi
and
scas
outsl
les
and
in
outsb
dec
adc
xchg
cmp
push
fistl
mov
lds
pop
jge
ss
inc
push
dec
and
pop
xchg
lods
xor
push
and
aas
jle
add
imul
or
jbe
lahf
pop
shrl
imul
mov
push
xor
es
movsb
xor
fnsave
dec
cli
inc
jg
int
pop
sbb
ljmp
cmc
add
add
jmp
out
jp
call
mov
sub
out
mov
addr16
out
loop
es
aas
out
repnz
stc
push
adc
roll
mov
aam
and
push
jbe
mov
sub
mov
scas
mov
nop
fcom
xchg
xlat
sub
outsb
sbb
outsb
xor
sti
sbb
push
cvttps2pi
loop
adc
pop
hlt
insl
sub
pushl
add
pop
push
jae,pn
cmpb
push
dec
clc
aas
es
inc
adc
sbb
addr16
loopne
add
dec
ja
rcrb
out
cmp
inc
test
out
jns
sahf
sbb
adcb
xor
cmp
xor
cmp
lahf
fldenv
adc
les
das
sti
mov
push
mov
mov
dec
jg
mov
ficoml
add
add
xchg
std
cmp
jle
fisttps
cmp
xchg
and
add
add
add
dec
sub
dec
fxch
pop
lret
into
ret
xor
cmp
jbe
cmp
sub
push
mov
xchg
rcrb
inc
fstpl
mov
lds
je
jecxz
fucom
ficomps
mov
sahf
pslld
cmpsb
mov
jbe
mov
cmp
aaa
pop
clc
movd
push
xor
pop
push
sub
rorl
mov
xor
jns
jmp
pop
mov
inc
pop
pop
je
hlt
push
ja
stos
cmpsl
pusha
fsubrp
or
sbb
sbb
shll
fistpll
xor
or
inc
push
sbb
mov
jbe
pop
mov
or
fcompl
cmp
movl
adc
jae
cwtl
cmp
pop
jle
add
cld
xchg
cmp
mov
addr16
mov
nop
push
add
add
iret
xlat
ficoml
jae
lret
add
cmc
add
add
xor
call
push
test
and
out
ja
push
mov
je
sbb
xchg
test
loopne
jb
pop
or
adc
mov
dec
cltd
scas
mov
fs
or
inc
mov
scas
rcl
fidivrl
fdivs
mov
or
iret
ror
pop
adc
or
jge
sub
lcall
sub
inc
jne
mov
jne
icebp
push
outsl
call
or
aas
mov
outsl
lods
cmp
jl
add
mov
dec
and
xchg
mov
xchg
or
in
dec
or
fcoms
fsubp
jp
cmpsb
jle
mov
rol
js
jl
or
add
lret
jp
dec
pushf
clc
dec
aas
sbb
and
xchg
mov
mov
mov
mov
lret
dec
add
add
sub
iret
outsb
jmp
rcll
in
xchg
shll
add
add
add
movsl
jnp
push
mov
xor
mov
push
lret
pop
sub
inc
int3
inc
outsl
inc
mov
fs
test
fndisi(8087
mov
icebp
inc
lock
loope
test
cmp
push
inc
shl
fistpl
cmpsb
push
iret
mov
jp
xor
push
adc
push
test
pop
xor
mov
std
rolb
mov
mov
dec
je
jne
pop
xchg
mov
xchg
mov
subb
mov
jl
cmp
ljmp
pop
movsb
movsb
push
mov
es
sbb
add
push
bound
xchg
jmp
repz
data16
lea
jno
adc
push
pop
outsb
mov
hlt
and
cmpb
fiadds
jns
in
aaa
pop
sbb
xchg
pop
mov
dec
shlb
out
inc
jp
add
sbb
std
sbb
stc
cld
or
js
mov
add
add
add
lcall
pop
mov
call
mov
mov
testb
hlt
mov
sbb
shrl
inc
ret
sbbl
xchg
push
xchg
mov
xchg
rol
adc
mov
scas
in
adc
das
arpl
lea
inc
mov
int
in
mov
cmp
stc
fsubr
loop
rolb
insl
add
push
cmp
arpl
sbb
fidivrs
push
dec
jne
mull
mov
xor
dec
and
mov
jl
xor
aad
and
sub
mov
adc
cmp
test
addl
aam
xor
imul
test
in
mov
pop
xchg
and
std
cbtw
dec
test
cmc
sub
mov
add
negl
adc
out
jl
mov
and
add
push
sub
gs
popf
dec
mov
inc
sbb
orl
outsl
lret
cmp
sbb
in
out
addr16
nop
dec
lahf
ss
repz
mov
dec
js
dec
mov
out
addb
iret
js
out
xor
xor
mov
sub
aas
mov
out
mov
dec
xchg
fwait
inc
cmc
add
inc
loopne
out
pusha
cmp
shrb
shlb
test
cld
out
in
or
push
sbb
js
cmpb
stos
adc
mov
imul
mov
xorl
xchg
push
jbe
les
lods
int3
push
xchg
sub
cmc
inc
pushl
inc
popf
jae
jno
jno
or
out
push
fwait
sbb
pushf
fiadds
and
xor
push
cmp
dec
xchg
lds
cwtl
push
or
movsb
dec
in
adc
add
mov
dec
pushl
js
fsubr
mov
add
add
sub
pop
rolb
test
std
jge
lds
fcomps
mov
xor
push
adc
sbb
cmp
daa
mov
ss
faddp
mov
sub
jge
mov
jmp
daa
int
mov
sbb
mov
jecxz
push
mov
pop
mov
loope
movsb
je
inc
inc
pop
mov
pop
mov
popf
or
mov
clc
scas
bound
dec
loopne
xchg
mov
sahf
mov
test
jmp
insb
mov
mov
jb
fbstp
imul
cmc
push
push
pop
shl
mov
movsl
mov
dec
inc
xor
and
aaa
pop
add
xor
int3
daa
and
or
mov
push
into
pop
loop
cld
cmp
or
sbb
in
dec
pop
sarb
divb
das
bts
xlat
add
add
inc
ja
pop
aas
pop
pop
inc
adc
mov
mov
daa
add
cmc
add
add
pop
fldl
mov
push
xchg
xchg
xlat
xchg
dec
scas
rorl
lods
sti
fisttps
stos
cmpsl
sub
inc
test
scas
cmp
and
scas
cmpsb
cs
shll
das
stos
mov
in
mov
xor
cmp
call
add
mov
in
jle
add
iret
je
loop
push
nop
loope
fldl
xor
sti
cmp
add
xchg
icebp
pop
cld
enter
aaa
xor
dec
mov
lds
stos
xchg
mov
xchg
test
xchg
adc
or
adc
scas
pop
test
aam
in
test
xchg
jge
bswap
mov
mov
xor
xor
cmpsl
sub
arpl
loopne
xchg
sub
jae
sub
addr16
xchg
nop
negl
add
aad
pop
sub
sti
clc
xchg
xor
inc
jle
aas
je
aaa
popa
add
add
xchg
jae
ja
div
dec
lods
push
mov
pop
hlt
nop
mov
add
cmc
add
add
test
sbb
inc
xchg
xchg
lret
mov
adc
sbb
mov
dec
add
insl
shlb
hlt
shl
fdiv
cmp
lds
ret
xor
and
lods
pop
inc
sahf
popf
push
jae
add
stos
in
rorb
lods
cld
cmp
testw
fwait
test
and
jecxz
adc
in
cmp
or
mov
add
sti
test
jne
xchg
jo
aaa
sar
jne
mov
mov
in
stos
push
ds
sub
inc
lea
lret
xchg
lcall
xchg
jb
mov
outsb
mov
or
test
lock
aaa
dec
fsubrp
cmp
in
aam
mov
mov
dec
push
sub
lods
and
scas
je
jae
cmpsb
push
xchg
inc
mov
add
xor
cli
std
jg
into
jno
fstpl
jg
add
cmc
add
add
aad
jecxz
inc
push
test
cmp
jge
pop
mov
push
adc
dec
in
stos
ja
push
repnz
out
jne
cltd
push
sub
in
aad
push
jb
push
jns
sub
push
repnz
pop
pop
int
movsl
es
add
mov
out
push
pop
cmc
or
imulb
or
movsl
repz
stos
sub
cmpsl
pop
movsl
jns
insl
rcrl
fdiv
push
cwtl
mov
push
jp
xor
dec
out
fs
cmc
out
cmp
sahf
lret
test
outsl
test
movb
iret
iret
sub
add
mov
int3
add
dec
loopne
inc
cmp
fcoms
sub
jg
jne
dec
mov
sub
inc
mov
out
test
jns
das
mov
jae
pop
dec
cmp
inc
and
add
add
mov
std
incl
sub
pop
push
mov
xorl
cmc
add
add
into
mov
sbb
in
pop
cmpsb
sbb
data16
test
add
adc
mov
cmpsl
int3
ja
subl
dec
das
clc
inc
or
sahf
mov
addr16
in
dec
jns
adc
insb
adc
test
pop
mov
lea
jp
ret
jbe
ja
incb
xchg
cmp
mov
mov
test
add
movsl
out
xorl
xchg
fwait
mov
int3
lods
xchg
data16
sti
sub
dec
jno
push
xchg
repz
in
mov
cwtl
lods
mov
rcr
cmp
lcall
mov
adc
pop
iret
rcrl
cmp
pushf
add
mov
jg
mov
arpl
pop
ret
stc
rol
test
daa
sbb
sbb
pushf
sbb
add
add
es
jg
pop
xorl
inc
jo
pop
imul
add
cli
dec
sub
movsb
hlt
ja
pop
inc
dec
mov
sub
scas
and
jb
adc
out
mov
aas
xor
fsubrl
inc
mov
adc
jmp
xor
ss
test
pop
popf
ficompl
ret
sub
add
shlb
int3
pop
repz
jge
xor
jae
or
jecxz
push
out
lret
mov
or
adc
and
add
cmp
shrb
jle
and
cld
sarl
pop
xchg
fldt
jl
mov
inc
gs
scas
push
cmp
jno
out
push
jecxz
popl
add
outsl
pop
clc
stc
mov
jmp
mov
inc
data16
push
test
mov
in
cmpsb
aas
lods
in
mov
push
cli
cmp
lret
xchg
xchg
arpl
and
mov
sbb
add
add
or
cmp
mov
add
add
add
mov
jns
push
pop
push
cli
ret
dec
adc
test
in
sti
cmpsb
cwtl
mov
test
js
dec
clc
push
mov
test
bndldx
xchg
or
in
xor
and
das
cmp
stos
adc
jg
add
stos
fstp
rorb
pop
daa
loopew,pt
leave
fdivrl
lret
pushf
xchg
nop
and
sub
dec
push
addb
cli
xor
jno
add
dec
outsl
fwait
dec
lods
mov
jne
mov
xor
mov
scas
popa
sbb
xor
and
icebp
jnp
mov
mov
js
cmp
add
movsl
pusha
hlt
and
dec
jo
mov
dec
insl
cli
mov
and
xorl
mov
aas
test
xchg
test
aaa
je
add
sub
fs
imul
loopne
add
add
stc
lods
xor
ja
cmovg
push
sub
add
out
jp
mov
push
push
xchg
pop
inc
sti
lods
stos
fs
pop
enter
andb
mov
sub
xor
dec
stos
add
adc
arpl
cmc
add
testl
sub
rcrb
pop
lret
pop
jns
fdivs
pop
pop
mov
mov
sub
adc
in
add
pop
xchg
xchg
rcll
or
pop
mov
or
mov
stos
mov
dec
iret
shr
jmp
outsb
scas
lcall
ss
lods
iret
int
adc
push
cmpsb
and
movsl
pop
xor
clc
test
imul
xorb
lods
cmp
jns
adc
lret
and
push
mov
mov
push
xor
xor
pop
repnz
or
andl
xor
ud2
and
into
lods
scas
pop
mov
loope
fmuls
add
ficoms
stos
sbb
ljmp
sub
sub
add
cmc
add
add
lock
and
xchg
jbe
sub
jo
je
push
cmp
or
cmp
mov
xchg
cs
and
dec
add
repz
mov
xchg
or
add
pushf
adc
rorb
rolb
lret
xor
pop
jmp
inc
xor
popf
adc
fld
adc
adc
fwait
sbb
cwtl
repnz
xor
dec
jge
push
in
inc
push
sub
push
jg
jle
adc
sbb
int
and
xor
adc
cmpsl
pop
pop
int3
movsl
cs
and
push
test
stos
shrb
jo
pusha
pusha
add
sub
vpaddsb
hlt
lods
insl
stos
mov
jbe
fists
sarl
das
adcb
psrld
lds
pusha
lret
or
push
fbstp
and
xchg
push
aas
je
jle
push
dec
mov
lods
cmpsb
jmp
and
adc
test
add
mov
out
sbbb
sbb
cmp
add
add
aad
and
dec
cwtl
sbb
sarb
dec
jl
sub
mov
xor
ja
xchg
mov
lods
mov
xor
sub
and
je
xchg
outsl
sbbb
bound
aam
sbb
xchg
loopne
xor
stos
mov
das
push
dec
add
test
pop
adc
push
cltd
enter
arpl
ss
jns
and
cmpsb
jo
adc
pop
push
jge
sti
cmp
pop
xchg
outsl
mov
push
add
cmp
push
xchg
stc
cmp
dec
dec
cmp
sub
jp
lock
jno
mov
outsl
fwait
in
jno
jno
push
enter
mov
notl
add
push
cld
xchg
jnp
les
and
int
pop
imul
add
add
sbb
out
aad
jo
or
out
xor
add
cmc
add
add
sub
lret
inc
lahf
mov
push
sub
sbb
lret
sahf
cli
insl
jno
out
push
sti
lcall
jg
mov
cmpsb
mov
ret
jns
inc
loop
fstpl
jae
mov
cmp
cmp
sti
daa
push
call
sub
pop
xor
dec
pop
sub
dec
in
sar
loopne
aas
out
jg
lock
stos
das
test
sbb
out
or
inc
mov
je
popa
cmpsw
xchg
inc
vcvtps2pd
cmp
cmp
xlat
xchg
adc
jle
adc
cmp
cmpsl
push
pop
xchg
mov
and
sub
repz
outsl
into
dec
lahf
call
mov
daa
js
bound
adc
pop
fists
xchg
out
ret
in
mov
xchg
xor
add
ljmp
rcll
add
into
cmp
add
add
in
add
cmp
out
dec
lret
fstpt
daa
xor
add
add
add
inc
pop
in
orb
sbb
iret
cmpb
jns
xor
or
mov
xorl
imul
xor
enter
gs
in
jno
in
mov
adc
push
hlt
mov
inc
pop
jbe
fdivl
subb
test
sbb
test
push
inc
ljmp
jmp
les
lods
pop
mov
xchg
mov
jle
test
mov
cmp
pop
fistpll
pusha
in
cmpb
sbb
rcll
setg
stos
or
loop
mov
mov
inc
dec
ret
mov
jg
inc
testb
pop
popf
dec
xor
out
es
stos
in
test
lea
push
mov
jo
dec
hlt
pop
mov
fcomps
or
xchg
mov
add
add
lods
jg
add
lods
dec
call
add
cmc
add
add
push
adcb
cli
xchg
jle
cmp
and
stos
xchg
and
ss
xchg
mov
inc
jb
sbb
jo
adc
mov
cmpl
cwtl
xor
and
or
mov
out
rorl
outsl
mov
or
loope
lcall
mov
xor
push
sub
add
lock
js
mov
loop
cs
ss
mov
orb
dec
mov
lods
frstor
fldl
lods
add
sbb
in
or
call
mov
fs
div
repz
mov
into
jnp
popf
jp
imul
les
adc
add
leave
jb
inc
movsb
je
inc
mov
cmp
std
into
ds
cmpsl
mov
mov
xchg
rcll
add
mov
dec
idivl
cld
add
adc
xchg
adc
add
cmc
add
add
push
mov
pop
dec
and
jmp
sti
dec
loop
rclb
dec
pop
adc
lret
insl
dec
pop
testl
adc
or
lds
adc
xor
int3
and
jg
mov
adc
inc
xchg
pop
stos
orb
dec
out
std
or
out
loope
adc
imul
pop
jo
add
daa
pop
mov
pop
arpl
cmp
add
insl
and
iret
into
ficompl
jl
call
push
lea
stc
mov
pop
mov
xchg
les
loopne
add
inc
jae
xchg
adc
les
xchg
pop
arpl
add
push
cmp
jo
stos
fadd
mov
scas
xchg
fwait
push
adc
lock
aam
repz
mov
jle
and
add
ret
mov
iret
mov
fucomip
scas
pushf
push
xor
add
add
add
fisubl
add
dec
scas
popf
push
loop
push
pop
cmp
inc
das
sbb
inc
stos
scas
xchg
lock
lock
or
das
test
iret
mov
or
jns
and
dec
lret
xchg
xlat
sbb
ret
shl
sub
push
jns
std
daa
aad
into
adc
call
das
pop
pop
jmp
add
add
adc
fistpl
stos
arpl
outsb
xor
out
push
stos
pop
aam
xor
fdivrp
adc
push
pop
xchg
stc
sub
dec
and
scas
das
repnz
pop
in
and
push
out
insb
std
je
ss
aas
cs
test
fdivl
sub
jns
dec
cmp
in
in
dec
or
mov
hlt
pop
insl
rcrb
cld
xchg
cld
mov
or
and
pop
scas
mov
insl
imul
add
or
sbb
dec
sbb
add
add
add
mov
push
lds
push
lock
ds
aaa
insl
fcoms
mov
cmp
dec
ds
mov
jne
sub
fimuls
dec
sbbb
mov
pop
pusha
mov
xor
xor
out
jne
jg
into
adc
pop
and
mov
push
outsl
xcrypt-cbc
cmpsl
push
push
mov
movsb
fisubrl
cmp
loop
cmp
push
pop
dec
dec
inc
add
or
sbb
loopne
imul
lret
add
movsl
dec
out
or
sub
jle
ret
xlat
xor
ss
adc
int
ficomps
aaa
xchg
mov
loope
mov
lcall
loopne
cld
add
pop
mov
notl
loope
jb
ds
stos
cmp
test
or
pop
pop
or
dec
ljmp
shlb
cli
clc
cli
clc
sarb
repnz
inc
aam
stos
sti
lock
add
xchg
pop
enter
std
cmp
push
sbb
push
mov
aaa
scas
je
popf
push
adc
dec
and
in
mov
or
sbb
pop
sbb
mov
das
xor
xchg
loope
loopw
cltd
cmp
pop
push
std
pop
lods
add
mov
push
push
or
cld
out
adc
fs
mov
dec
ret
test
in
lods
in
lcall
and
cmp
adc
int3
cmp
cmp
jae
sbb
sbb
xlat
jl
jp
das
mov
xor
or
jmp
xchg
sub
fdivrl
rcll
mov
repz
pop
and
cltd
push
inc
push
jo
fstps
sub
mov
sarb
sbb
cld
mov
jg
int3
cld
mov
mov
out
lods
icebp
push
shrb
aas
inc
popa
mov
add
jnp
out
push
lcall
in
add
cmc
add
add
add
xor
jns,pn
movsl
jns
mov
mov
sub
push
push
fdivrl
in
out
mov
dec
jle
jno,pn
cld
add
data16
ret
pop
std
cmp
jbe
xchg
ljmp
mov
push
cmp
fmull
cld
popa
or
or
cmp
jb
ljmp
and
cmp
adc
or
mov
enter
xchg
in
xor
xorl
jns
fstps
sbb
movsl
cwtl
aaa
daa
sbb
xor
sbb
iret
pop
lea
test
imul
add
sub
push
fdivr
mov
adc
aas
jns
push
xchg
sub
stos
lret
jmp
sbb
jb
movsl
lret
js
hlt
mov
jecxz
xchg
in
cmpsb
sar
fisttps
adc
cmpsl
mov
add
fs
es
data16
cmc
jle
dec
mov
insb
fidivl
add
cmc
add
add
push
push
push
mov
jecxz
fadds
jo
js
dec
test
cmp
dec
lea
enter
stos
push
mov
xchg
imul
add
dec
cmp
sbb
dec
fwait
inc
bnd
sbbb
mov
roll
das
dec
pop
in
push
adc
jmp
xor
adc
adc
dec
jg
popf
dec
inc
mov
lea
pop
jbe
orb
ret
mov
xchg
int3
repz
sahf
adc
push
xor
std
inc
ja
int3
into
popa
xchg
out
dec
outsl
cmp
in
idiv
add
cmp
adc
jb
dec
adc
mov
shrd
push
mov
fldln2
in
outsb
adc
pusha
and
js
gs
xchg
push
pop
sarb
sub
inc
adc
rcl
sbb
jp
test
mov
add
add
dec
mov
imul
adc
iret
cmp
add
add
add
mov
pop
rcrb
jb
jne
push
xchg
jmp
dec
scas
mov
addl
inc
sub
shrb
sub
sbb
data16
cmp
add
insl
jo
pop
stos
ss
pop
lret
jno
and
xchg
sahf
mov
cmp
add
cmp
scas
daa
inc
aas
xor
fwait
pushl
in
fildl
lods
and
jae
lret
sbb
in
xlat
sbb
mov
outsb
push
mov
rcr
or
pop
push
test
lret
cmp
popa
inc
jns
push
popa
pop
xlat
dec
cmp
sbb
sbb
lahf
lahf
imul
shlb
sub
mov
add
cmp
mov
cmova
pop
push
into
add
add
and
push
sti
cmpsl
pop
push
jo
addr16
push
les
add
cmc
add
add
dec
movsb
add
pusha
dec
push
mull
rcrl
cmp
stc
cmp
scas
inc
les
or
bndstx
mov
adc
pop
or
imul
sub
and
mov
clc
sub
inc
imul
jne
mov
mul
pop
mov
scas
sbb
jp
outsb
shlb
daa
add
sbb
adc
dec
or
mov
clc
stos
xchg
pop
stos
outsb
xor
cltd
addr16
sbb
inc
dec
in
int
arpl
jle
lea
icebp
out
mov
mov
outsb
push
loope
enter
fisttpl
sahf
add
sub
into
adc
inc
repz
in
lcall
mov
adc
push
les
insl
xor
imul
adc
xor
mov
addr16
mov
push
and
std
cmp
out
into
mov
add
add
jns
jmp
push
push
insl
scas
js
push
add
adc
cmpsb
ret
xchg
mov
pop
lret
xchg
push
cmp
sbb
rcrb
inc
out
lcall
cwtl
adc
fisttpl
mov
mov
push
sbb
loope
mov
cmp
cmp
movsl
in
add
test
ds
jb
cmpl
dec
icebp
jg
ja
push
sbb
inc
or
out
pop
pop
mov
aas
push
rcr
pop
push
jbe
pop
xchg
aad
or
lods
mov
sub
jno
in
mov
js
aaa
or
and
dec
mov
pop
les
icebp
ljmp
mov
push
sti
negb
push
sbb
stos
movb
and
out
cwtl
fnstenv
lds
fs
push
pop
jo
lcall
mov
ror
test
add
lds
xchg
and
push
or
scas
cmp
add
add
add
aam
rcrl
outsl
out
cmp
and
lret
cmpsb
xor
imul
test
repz
das
out
adc
push
cmpsb
pop
xabort
pop
sahf
testb
scas
add
lret
int3
repnz
test
mov
popl
rorb
outsb
mov
and
int
add
xor
mov
pop
mov
sub
sti
test
cltd
push
insb
mov
sbb
cmp
mov
jl
or
aas
xor
cmp
cmp
push
outsl
add
fstl
sbb
movsl
or
mov
in
imul
pop
xor
into
adc
mov
lock
sbb
adc
outsl
loopne
pushl
lahf
adc
out
aam
and
scas
or
inc
adc
out
insl
push
inc
sbb
in
sar
arpl
fiaddl
ret
ficomps
push
and
mov
add
add
imulb
arpl
cs
xlat
jl
dec
lahf
pop
sbb
xchg
fucomip
inc
lret
sahf
and
dec
addr16
mov
jb
ret
pop
mov
nop
pop
movsb
sub
sarl
push
call
jg
lea
dec
mov
lahf
imul
mov
mov
test
mov
and
xchg
jle
and
in
loopne
dec
int3
loope
mov
or
lahf
sbb
rorb
cltd
call
aaa
pop
lahf
xchg
cs
mov
sub
pop
enter
pushf
or
jnp
dec
stos
inc
jb
sar
sub
das
xor
jbe
cwtl
add
lds
daa
div
int
dec
sbb
in
js
aad
mov
clc
test
cltd
bound
in
xchg
mov
inc
mov
add
add
lods
xor
mov
pop
add
add
cmc
add
add
xchg
out
aas
popf
jb
fs
sbb
es
out
popa
fisubs
pop
shr
jmp
addr16
cli
xchg
out
or
xor
or
aad
leave
sbb
popf
pushf
ljmp
mov
jmp
jge
inc
fwait
mov
popa
test
cmp
cli
out
fadd
add
lret
sti
inc
cmp
xchg
jp
les
jmp
ret
std
daa
aam
icebp
sbb
movsb
aam
iret
jge
out
nop
xchg
adc
mov
sbb
xchg
xchg
movb
dec
leave
mov
movl
repnz
xchg
or
rcrb
mov
rcrb
adc
subb
shl
aam
arpl
call
sahf
push
lcall
cmp
push
sbb
dec
fwait
sbb
mov
stc
push
jecxz
repz
shll
add
add
lret
mov
cwtl
sbb
sbb
add
add
stc
mov
es
repnz
jge
lds
jg
jns
mov
enter
fistps
push
xor
lods
jns
push
rcrl
out
orl
lea
mov
ljmp
shrl
jns
ja
or
push
inc
ret
sub
mov
out
enter
adc
and
ret
in
cmp
in
lds
mov
push
push
pop
leave
pop
data16
xchg
dec
mov
pop
mov
xor
sti
aas
jg
repnz
int3
xor
push
or
imul
std
out
cltd
or
inc
mov
mov
jecxz
push
in
adc
push
test
add
adc
xchg
aaa
aas
into
pop
add
sbb
mov
lret
cmp
xor
aad
sbb
decl
xchg
shl
add
add
sti
pop
jge
div
cmp
andl
cmc
add
add
lret
fcompl
mov
aad
mov
xorl
daa
ljmp
int
push
imul
int
call
in
jae
mov
mov
repnz
in
xchg
add
into
cmp
xchg
dec
pop
fwait
cld
cld
popa
add
std
pop
jb
push
rcr
lods
jg
xor
cmp
push
dec
call
and
in
dec
out
aaa
xchg
outsb
jo
jmp
imul
ss
stos
push
pushf
xchg
dec
push
out
dec
jae
push
jae
and
jae
adcb
sbb
jg
inc
test
sbb
mov
outsb
in
scas
xchg
add
movsl
daa
sarl
jno,pn
mov
loope
inc
pusha
inc
testl
mov
inc
hlt
add
add
fsub
std
in
popf
jle
es
ds
mov
cmc
add
add
sbb
pusha
dec
into
cli
fwait
pop
pop
cmp
jb
mov
xor
dec
or
mov
push
xor
popa
int3
jmp
fdivs
lret
jecxz
push
push
cmp
fbld
cltd
aad
fsubr
loope
nop
inc
std
push
popf
int3
adc
outsl
loop
mov
inc
sbb
mov
outsb
sti
push
aas
ds
cmp
sahf
inc
lret
scas
jmp
push
loopne
lret
push
xchg
add
add
push
add
fmull
stos
mov
xor
push
xchg
imul
and
shrb
xchg
fwait
aaa
or
lcall
lret
rcll
xchg
xchg
pop
movsl
xor
icebp
pushf
sub
lock
pxor
fidivs
popa
adc
mov
sub
sbb
xchg
xor
lds
push
sub
xor
movsl
and
xor
add
jp
jnp
sti
xchg
jle
popf
loopne
mov
add
add
add
push
mov
and
and
shlb
push
jae
mov
mov
je
jb
fs
xchg
and
sbb
cmc
add
mov
lods
insl
mov
in
jp
pop
les
sbb
aas
lods
inc
add
and
mov
aaa
xchg
xchg
in
sbb
aad
shrl
imul
je
pop
out
insb
popa
into
sbb
adcl
je
jne
cmpsb
ds
inc
shlb
or
out
in
pop
ret
loop
dec
rclb
in
xchg
mov
and
outsb
aam
fildl
cmpsl
jmp
lea
movsl
std
and
cmpsb
dec
jge
inc
xchg
sbb
jle
cltd
xor
out
mov
test
pop
sti
cmp
movsb
push
popa
arpl
adc
adc
and
push
ds
add
mov
push
sti
loopne
cmp
stc
mov
popa
inc
add
cmc
add
add
cmp
rclb
xrelease
cmpsb
dec
push
inc
jne
xchg
roll
sub
dec
aaa
sbb
xor
xchg
mov
test
lcall
cmp
mov
sarl
into
or
lahf
and
int3
sub
stc
mov
xor
push
adc
and
mov
das
sub
mov
cmpsl
sahf
or
mov
clc
shlb
addr16
addl
mov
shr
jne
fcomi
cwtl
pop
lret
cmpb
push
xor
inc
adc
fs
xchg
aad
jl
lds
cmpsb
insb
subl
std
icebp
adc
call
cwtl
lods
bound
inc
and
push
fisubrs
lock
call
mov
sbb
pop
xor
popf
outsb
pushf
das
jns
jge
inc
daa
add
push
lds
mov
add
add
cmp
and
push
dec
les
xor
cmc
add
add
jno
les
add
dec
pop
movsb
test
inc
mov
mov
mov
mov
arpl
mov
xchg
les
movl
ja
and
xor
pop
xorl
dec
loop
stos
data16
adc
icebp
orb
repnz
pop
add
add
mov
mov
test
xor
loopne
pop
fstl
mov
add
movsb
add
out
pop
in
jmp
cmpsl
or
std
iret
xor
es
add
movsb
pop
mov
xor
pop
ljmp
cmp
push
xor
repz
mov
jge
dec
inc
pop
cli
out
mov
xor
stos
incb
xor
ret
xchg
arpl
pop
cmp
outsb
sbb
cli
lods
sbb
les
adc
rclb
sub
shll
inc
cld
data16
pushf
mov
cmp
add
incb
ljmp
scas
pop
data16
dec
inc
add
cmc
add
add
fcompl
lea
and
adc
add
loop
cwtl
test
or
xchg
and
jge
das
jecxz
dec
mov
ror
rcr
sbb
mov
add
jae
iret
aaa
inc
scas
jge
addr16
jmp
pop
fidivrl
movsb
cmp
xchg
repnz
inc
fadd
push
jns
jbe
mov
pop
jle
xchg
mov
ja
mov
lods
mov
cmp
test
push
mov
imul
mov
cmpsl
sub
loop
pop
push
ret
icebp
out
insl
push
and
cmp
inc
test
jb
les
in
out
stc
or
cli
stos
dec
add
int3
jp
inc
dec
pop
jmp
inc
or
sub
pop
push
or
or
daa
add
add
rclb
mov
inc
bound
add
cmc
add
add
cwtl
add
loope
loop
xchg
sub
inc
push
cmp
push
clc
mov
in
or
jp
mov
adc
sbb
enter
jl
imul
fisttps
jbe
fsubrs
outsb
xchg
pusha
push
fdivrp
test
cmp
mov
and
mov
imul
cs
and
loopne
add
addr16
fsts
jbe
pusha
outsb
pop
dec
imul
push
push
mov
dec
cmp
push
fistpl
divl
and
sbb
stos
sbb
jns
ss
sti
daa
lcall
rorl
mov
adc
push
std
pop
xor
xor
jge
mov
xchg
xlat
cmp
push
adc
jg
jnp
sub
mov
inc
in
add
mov
addr16
xchg
movsl
subb
add
add
jbe
idivl
ss
repz
dec
xor
add
add
retw
cmp
and
es
sub
in
ds
or
xor
add
icebp
mov
out
add
popa
aaa
rorb
and
or
push
pop
out
lods
aas
fwait
push
test
push
cmp
mov
mov
sbb
rcrb
push
je
fdivs
adc
mov
repnz
or
es
pushf
fimull
dec
cmc
fdivs
dec
lock
scas
cmp
lahf
subl
mov
loopne
and
and
sbb
mov
fmulp
cmp
xorb
dec
jmp
lea
int3
push
dec
pop
xchg
ret
sbb
clc
fisubrl
data16
imul
int
mov
mov
cmp
lods
pop
incb
fwait
aas
dec
jge
xchg
dec
hlt
sbb
add
add
outsb
sub
stos
fs
cmp
xor
sub
add
add
add
loopne
jp
mulb
aas
stos
push
incb
int
sub
outsb
cli
lahf
cmp
xchg
pop
xchg
test
inc
sub
outsb
mov
or
add
fwait
loope
push
push
mov
std
aas
cmpsb
leave
mov
adc
fwait
inc
jg
aas
or
jbe
fstpt
movsl
fnstcw
ds
lock
or
add
sbb
xchg
in
push
nop
jg
in
arpl
adcb
jg
inc
or
clc
lock
test
sbb
sbb
push
int3
xor
and
and
cmc
sub
or
sub
adc
push
jbe
inc
std
sbb
add
mov
leave
or
popa
adc
xchg
sti
push
xor
sub
imul
cltd
mov
xchg
and
dec
fdivs
shl
in
dec
push
movl
add
les
scas
fistpll
loop
xor
dec
add
cmc
add
add
mov
pop
dec
xlat
lds
sti
mov
insl
pop
push
xchg
xchg
bound
mov
sub
push
lret
or
insl
fidivrl
sub
out
mov
std
push
mov
mov
subb
movsl
aam
sar
gs
mov
into
out
leave
jnp
fs
cmp
pop
xor
push
sbb
daa
jmp
iret
xchg
inc
enter
mov
rcrl
addr16
jecxz
inc
mov
cmp
loop
jne
jle
rcrl
mull
scas
push
sbb
mov
lcall
fsubrl
test
dec
xchg
in
jb
in
cmp
or
es
and
mov
lds
mov
push
or
cmp
pop
cltd
jnp
aas
enter
add
add
cmp
les
fstl
loope
adc
add
cmc
add
add
pop
sbb
adc
in
push
lods
sub
or
inc
test
in
pop
out
data16
cmp
repnz
mov
jnp
addr16
test
cmc
or
mov
cltd
cmp
push
mov
ja
out
push
mov
out
mov
out
out
loopne,pn
dec
ljmp
and
test
stc
movsb
lahf
out
and
sbb
std
leave
mov
pushf
lods
xchg
dec
int
mov
ja
sahf
mov
pop
jno
xchg
sbb
sbb
push
mov
mov
testl
cltd
fs
inc
int3
dec
add
cmp
pop
std
cmp
ret
inc
addb
or
pushf
fmull
xor
loop
fiaddl
or
lods
xchg
ds
mov
pop
stos
fildl
nop
ljmp
add
add
adc
incl
arpl
mov
jo
or
add
add
add
xchg
ret
inc
mov
dec
lea
loop
sub
cld
dec
addl
in
jle
mov
iret
nop
jmp
xlat
aas
add
and
les
or
das
ljmp
into
pop
cmp
jno
leave
clc
mov
pusha
mov
cmp
and
push
and
mov
mov
in
mov
mov
fbstp
adc
xor
mov
arpl
xor
add
mov
lret
jbe
xor
je
in
dec
pushf
fnstenv
jle
mov
xor
push
cmpsb
in
xchg
loop
add
sbb
cmp
and
lea
loop
aad
mov
dec
lock
daa
das
mov
movsb
cld
imul
mov
jo
add
and
das
cmp
lods
repz
in
pusha
out
into
jl
clc
decb
add
add
add
lods
jo
mov
dec
int3
jo
in
lcall
imul
lret
mov
rolb
lret
add
or
fstl
adc
mov
cmp
bound
inc
mov
cli
push
add
inc
and
push
arpl
jl
pop
sti
enter
cltd
loop
jb
pushf
inc
loop
fldenv
cltd
push
push
fstpl
push
cld
xor
jbe
aaa
insl
add
lods
ja
into
mov
xchg
in
push
xchg
pusha
lods
mov
daa
push
aad
out
int
mov
out
dec
dec
loop
testl
in
sbb
jae
and
stc
test
mov
fcmovnu
jns
jmp
jge
mov
mov
out
lock
push
cmpsb
dec
fidivs
sbb
lea
es
fcmovnbe
cld
rclb
add
add
aas
daa
push
cld
push
std
jmp
push
jg
push
fdivr
pop
cmp
dec
add
cmc
add
add
cmp
mov
sub
lret
mov
data16
int3
xchg
movsb
cltd
sub
pop
mov
pop
mov
call
orb
pop
test
loope
xchg
dec
loopne
adc
mov
xchg
jb
cld
dec
aam
sbb
jp
lds
push
nop
popf
aas
push
push
enter
push
sbb
xchg
test
cmp
jle
or
sbb
add
mov
sub
cmpsl
in
movsl
pop
pop
call
mov
sti
fcoml
mov
sbb
mov
jnp
mov
lret
fisubs
dec
push
imul
enter
pusha
mov
adc
fimull
jg
lock
xor
mov
stos
imul
pop
cwtl
movsb
dec
push
leave
fsts
and
out
inc
and
out
mov
cwtl
xchg
gs
jg
xchg
add
add
add
sbb
dec
push
cwtl
adc
insl
xchg
pushf
call
add
add
cmp
shl
mov
dec
loope
mov
movsl
cmp
jge
data16
xchg
cmpsl
xchg
push
ret
sub
jmp
int
sub
adc
lea
add
pop
jno
int
fwait
mov
inc
pop
out
cmpsb
mov
out
push
jo
loop
cmp
out
xchg
lahf
sbb
pusha
inc
xlat
sub
cs
es
aad
fs
add
out
xchg
and
je
pop
mov
out
add
mov
in
test
shrb
loop
xchg
fnstcw
jnp
dec
je
lahf
movsl
repz
hlt
dec
xor
popa
bnd
test
push
fcmovnb
pop
jge
push
cmc
xor
int3
popa
incl
outsb
mov
shlb
inc
push
mov
inc
inc
mov
xchg
mov
push
add
pop
lock
jmp
cltd
leave
xchg
cs
add
add
idivl
mov
dec
add
cmc
add
add
lods
jl
mov
pop
loope
daa
ds
scas
in
xor
fwait
into
mov
testl
repnz
flds
sub
add
repnz
mov
mov
and
sbb
mov
shlb
call
xor
xchg
xchg
pop
cld
insl
and
ljmp
dec
out
in
or
mov
in
jp
cmp
addl
out
and
adc
out
bound
push
mov
fs
fwait
push
dec
mov
out
push
fidivrl
aad
add
int
cmp
scas
lcall
mov
pop
mov
test
cmp
push
dec
popf
xor
dec
jns
cltd
mov
push
bound
loopne
je
xchg
mov
add
jg
xchg
lcall
adc
dec
add
cmc
add
add
adc
clc
loope
ret
sahf
ud0
add
fwait
xchg
cmp
in
and
sbb
pop
adc
incl
push
mov
in
shll
jmp
inc
jmp
imul
jmp
jbe
dec
add
sbb
push
pop
div
jbe
mov
shlb
in
jp
lret
mov
lret
insl
mov
jbe
push
mov
add
dec
ret
dec
xchg
not
outsb
fsub
lret
mov
jnp
xchg
push
add
nop
jle
adc
addb
out
gs
push
or
xorl
cmc
and
pop
repz
push
insl
inc
push
lods
mov
dec
ss
test
sub
daa
lahf
mov
mov
pop
xlat
into
rclb
pop
outsb
add
cli
or
roll
add
and
dec
lret
jmp
imul
xchg
aad
mov
add
add
add
scas
int3
fidivl
inc
sub
lret
xor
out
push
sub
lds
cmp
movsb
cmp
out
andb
inc
add
lahf
imull
push
lods
aad
js
push
out
fisttpll
sub
fidivrl
test
mov
popf
dec
ret
arpl
roll
mov
movsb
sar
into
je
fisubrl
mov
dec
adc
sbb
imul
adc
dec
outsb
inc
test
ss
jnp
and
fcoms
movsl
aam
loope
mov
loopne
shr
cmp
push
loop
shrl
decl
or
inc
cli
push
inc
xor
sbb
es
bound
dec
pop
push
jle
adc
jnp
mov
mov
bound
test
mov
mov
xchg
add
dec
xor
subl
mov
cmp
jge
add
lds
cmc
cwtl
and
sbbl
add
cmc
add
add
xor
punpcklbw
repz
and
je
jl
repz
sahf
aad
nop
daa
jno
ja
add
js
sub
xor
and
pushl
add
or
cmp
sub
jge
into
push
lods
loopne
push
fdivrs
loop
inc
mov
mov
fists
enter
lcall
ss
fsubrs
scas
cs
jge
cmp
cwtl
pop
ljmp
popa
xchg
dec
bound
into
bound
rclb
mov
mov
repz
in
cmp
dec
adc
add
and
shll
cmp
pop
je
pop
mov
in
sub
and
xor
jmp
test
mov
add
in
paddusb
xor
repz
xchg
hlt
aad
push
mov
and
aas
ds
daa
add
add
jns
clc
mov
cmc
mov
cmp
cmc
add
add
add
jne
sbb
lods
out
iret
lods
shll
fnstsw
ss
xor
inc
fs
inc
pop
lret
popf
pop
xchg
xchg
mov
xchg
icebp
mull
cwtl
add
sub
mov
rorl
add
cltd
hlt
cmp
loopne
sub
push
jns
loopne
arpl
dec
jbe
xchg
sub
jg
sti
jne
sub
inc
jmp
aam
sub
enter
lret
sahf
mov
jg
sbb
clc
inc
sbb
stc
sti
jb
call
outsb
add
aad
mov
iret
sti
add
inc
repz
pop
les
decl
enter
inc
std
mov
shll
cmp
imul
daa
pop
mov
or
push
notl
int3
in
fistps
cmpsl
mov
jae
in
insb
cmpsl
adc
dec
enter
push
je
in
iret
add
add
ret
jg
mov
sbb
add
cmc
add
add
push
jge
mov
popf
sbb
or
inc
cmp
push
jmp
cmpsb
popf
mov
daa
xchg
pop
sbb
xchg
loop
cmp
mov
cs
dec
adc
aad
stos
dec
leave
aaa
add
stos
outsl
xor
sbb
bound
enter
aas
jl
push
hlt
aas
out
pop
push
push
sar
imul
mov
lods
addl
daa
xor
andl
fnstcw
test
sbb
mov
test
mov
pop
mov
lock
dec
mov
dec
and
aam
xchg
test
test
push
aaa
test
jmp
sbb
loopne
sub
jae
mov
sbb
pusha
push
sar
pop
dec
pushf
mov
insl
ret
xor
xor
add
push
or
js
cmp
movsl
adc
add
add
add
das
mov
cwtl
out
daa
int3
idiv
fwait
push
add
cmc
add
add
inc
mov
and
jecxz
dec
pushf
loope
ja
shll
scas
clc
iret
pop
mov
jnp
fcoml
add
in
sbb
lahf
aam
or
mov
cmpb
in
cmp
fstps
lcall
mov
fwait
adc
pop
sub
fidivl
arpl
nop
jecxz
push
xchg
push
fdivr
inc
dec
insb
mov
xor
stos
sbb
call
pop
cmc
sub
push
std
ljmp
or
sbb
inc
mov
pop
fildl
ret
dec
shl
dec
push
jne
inc
and
pop
xchg
inc
mov
loopne
sbb
shll
cmp
jns
daa
add
pop
jecxz
mov
inc
push
sahf
arpl
cs
jne
pushf
xor
jl
dec
sbb
jl
pop
ja
adc
lahf
ljmp
lea
les
xchg
pop
dec
leave
ret
add
inc
icebp
hlt
gs
push
sub
inc
arpl
add
add
inc
sub
fdivs
test
fstl
and
in
movsl
aaa
movsl
test
cwtl
testl
mov
push
jg
inc
jne
sbb
mov
int3
enter
test
push
add
and
cmp
jecxz
lea
jbe
xchg
jo
sar
xor
loop
and
push
mov
jbe
inc
and
out
inc
mov
ret
push
cld
adc
in
icebp
dec
dec
adc
fidivs
jmp
or
adc
pop
adc
cmpsb
clc
mov
and
push
shrb
sbb
fmull
mov
fisubrl
rcl
aaa
or
cli
sub
jnp
cli
mov
mov
int
pop
popa
add
mov
dec
iret
pop
in
add
ficompl
ret
sti
push
pop
and
sbb
lock
mov
cmp
add
add
aas
gs
repnz
and
stos
pop
nop
jne
push
add
cmc
add
add
decl
cmpsl
call
sub
xchg
xchg
jo
pop
inc
jle
movsb
xor
push
jne
add
jp
pop
sbb
cmp
cli
mov
ja
inc
sub
mov
cmp
pusha
stos
scas
jp
or
pusha
rcrb
xchg
jae
mov
add
orl
stc
mov
add
dec
loopne
xchg
add
rcrl
inc
pop
inc
in
cmp
in
pop
sahf
push
repnz
jle
outsl
xchg
xchg
mov
loop
mov
inc
xor
mov
insb
xor
add
aam
adc
mov
and
scas
fs
ss
mov
loop
adc
out
ja
push
mov
test
push
test
and
cmp
hlt
scas
add
add
out
fisttpll
mov
jp
add
cmc
add
add
cwtl
push
pop
mov
pop
lea
xchg
cltd
ljmp
inc
xor
nop
dec
adc
jmp
pop
mov
mov
mov
xchg
jns
fisubs
inc
into
int
arpl
sbb
mov
mov
daa
cmpsl
xor
fdivr
rorl
push
xchg
hlt
sub
sti
mov
les
push
inc
aad
xorb
adc
inc
test
jae
or
inc
in
push
xlat
sbb
loopne
sub
xchg
les
jl
pusha
sbb
nop
cmp
xor
ret
shll
mov
cs
push
loope
jecxz
sahf
sbb
addr16
cmpsb
js
hlt
xchg
mov
sub
xor
fucomp
pushf
jge
pop
xor
mov
add
add
mov
arpl
outsl
push
add
cmc
add
add
fdivrl
cmp
mov
std
scas
aam
test
inc
push
jg
out
adc
xchg
daa
rorl
rol
cmp
rcl
shll
loope
js
adc
ds
adc
jecxz
lods
ja
xchg
int
sbb
add
out
pushf
push
push
call
adc
fldl
jne
xor
cmp
stos
icebp
and
dec
mov
sbb
mov
cmp
enter
pop
loope
lcall
fldl
test
sub
test
cmp
std
pop
jge
dec
add
jo
scas
movsl
inc
push
fisttps
cmpsb
fcompl
insb
sti
lret
add
and
mov
mov
mov
ds
push
or
test
dec
jo
add
sbb
test
stos
cmp
inc
lcall
neg
pop
pusha
push
into
push
cmp
add
push
sbb
jmpw
fnstcw
mov
aad
fs
add
cmc
add
add
lret
repnz
aas
int3
int
jg
sbb
cmp
sub
je
jns,pn
adc
xchg
mov
xor
sahf
rcll
cli
mov
pusha
cmp
shrl
jbe
jo
jge
std
imul
xchg
sub
cmc
xor
lcall
sub
ljmp
fwait
mov
jmp
adcl
scas
insb
add
and
mov
rcrl
sbb
rorl
mov
dec
into
inc
mov
aad
icebp
cli
ljmp
dec
sub
sub
push
mov
sub
clc
or
fisubs
xor
add
sbb
jae
push
sbb
xchg
test
or
fsts
adc
and
mov
add
cmp
imul
out
mov
arpl
jp
pop
pop
add
cmc
add
add
aas
loope
xchg
push
jecxz
xlat
mov
test
push
cmp
popf
push
mov
add
cmpsb
call
mov
or
mov
push
sbb
out
mov
or
inc
dec
dec
jmp
cmp
les
lods
sahf
movsl
jecxz
lock
and
fs
sbb
or
inc
fstpt
jb
pop
lods
add
mov
popf
sarb
loop
xor
push
xchg
mov
lods
mov
and
loope
ljmp
pop
mov
jo
sub
gs
daa
test
pop
adc
mov
outsb
int
lea
push
stos
test
xchg
or
rclb
in
xchg
shl
stos
or
out
sbb
sarl
and
sbb
adc
ljmp
out
mov
mov
je
push
and
push
insb
stc
add
add
add
dec
stc
mov
clc
add
loopne
add
add
add
add
cltd
nop
mov
imul
les
daa
jecxz
cmpsl
add
movsb
sub
xor
mov
jmp
outsb
add
fwait
leave
popf
ret
psrlq
pop
iret
mov
lods
cwtl
int3
test
icebp
mov
fsubp
inc
in
scas
mov
scas
imul
adc
xchg
cmp
dec
jnp
xchg
ficoml
inc
lahf
sbb
and
pop
negl
sub
or
lret
mov
sbbl
ret
or
sbb
mov
imul
outsb
es
dec
leave
pop
sub
mov
popa
rcrl
and
test
andl
jge
jnp
push
lcall
and
jmp
loope
lret
repz
cmp
push
rclb
pop
pushl
push
lcall
in
and
jns
adc
pop
repnz
add
add
jg
cld
jo
hlt
leave
jns
ret
mov
cmc
add
add
and
jp
imul
icebp
pop
sbb
mov
inc
in
lcall
mov
imull
mov
mov
dec
fistpl
mov
movsb
push
sub
divb
cmpsb
adc
mov
lods
loop
lret
inc
and
add
gs
test
in
adcl
mov
sub
test
imul
sahf
ja
and
push
xor
in
pop
or
arpl
adc
fnsave
nop
cmp
and
xchg
push
mov
add
xor
inc
cmp
mov
and
sub
stos
inc
cmc
cmp
mov
jo
cmp
aaa
lret
mov
fdiv
fwait
inc
jmp
paddq
sbb
or
adc
and
mov
push
cmpsb
jne
push
push
fcomps
insl
rcr
jge
dec
sub
sbb
add
mov
xchg
mov
mov
pop
add
pop
add
cmc
add
add
ja
jl
test
rcll
sub
fwait
cwtl
sub
mov
mov
xchg
push
jb
mov
frstor
jg
push
push
ja
cmp
pop
jmp
adc
cmc
mov
and
inc
pop
scas
pop
jge
cmpsb
stos
mov
jg
push
pop
sbb
xchg
mov
mov
xor
jae
in
movb
std
stos
xchg
xor
rcrl
int
out
lret
outsb
cmp
mov
fbstp
adc
ficoms
bound
test
xchg
cmp
in
xorl
lahf
iret
bound
movsb
mov
insb
cwtl
jl
nop
popf
sub
orb
incl
call
shrl
lea
nop
stos
push
add
and
xor
xor
out
pop
push
fcmovu
xchg
das
inc
sub
pop
subb
or
lcall
add
or
mov
rcrb
inc
sub
add
add
fs
fisttps
push
shl
sub
add
aam
or
mov
idivb
pusha
imul
push
fdivrl
callw
push
jl
ss
add
and
pop
and
sti
jle
mov
outsb
lret
gs
sub
xchg
jb
mov
mov
mov
xor
sti
mov
fwait
sub
jns
inc
arpl
xor
lods
subb
or
jb
lret
ss
dec
dec
insb
sub
insb
idivl
outsb
out
or
outsl
notb
xchg
aad
loop
pop
cmp
fistps
fbstp
push
notl
imul
pop
lods
and
fists
mov
jo
dec
fists
in
push
loopne
popa
notb
push
dec
sbb
pop
mov
enter
push
add
add
sub
cmp
dec
push
lock
and
add
add
add
lea
std
aam
imul
out
cwtl
mov
movsl
je
mov
and
dec
pop
jne
insb
and
and
test
mov
ret
int
orl
imul
insb
pusha
ret
out
xchg
adc
in
sahf
mov
lods
mov
test
dec
cld
test
xchg
push
ss
insb
mull
pop
push
daa
mov
mov
sahf
xchg
xor
into
sub
clc
scas
push
ds
push
push
stos
jo
sarb
xchg
addl
sbb
repnz
addr16
jnp
jg
insl
xor
or
cmc
and
fs
lods
out
and
mov
sahf
cmp
mov
inc
or
aad
nop
test
js
js
fistpll
rolb
jne
mov
lret
xlat
add
add
or
push
shll
out
xchg
inc
push
pop
pop
add
cmc
add
add
inc
mov
das
sbb
int
cmp
adc
mov
mov
mov
mov
test
sbb
mov
clc
insl
xchg
les
and
ljmp
jecxz
scas
adc
push
outsl
dec
lods
mov
or
lock
into
popa
jle
gs
fsts
mov
test
daa
mov
dec
cmp
pop
pop
push
xor
aaa
jo,pn
shrb
sbb
lcall
xor
xchg
mov
lahf
and
xchg
dec
jge
ret
int
sub
testl
lock
in
push
ja
mov
jp
push
mov
lods
into
call
xchg
xchg
scas
dec
sub
das
pop
jp
bound
pop
fsubrl
fsubl
mov
and
add
stos
push
lcall
inc
and
fwait
andb
or
add
cmc
add
add
ja
aam
jbe
iret
cmpsb
repz
sub
pop
mov
dec
pop
push
ffree
fstps
mov
push
cmp
pop
ja
fistl
fisubl
mov
sub
adc
inc
sub
and
sarl
neg
je
sub
out
fisubrl
push
push
xor
jg
call
sub
imul
sarl
call
leave
sub
xchg
or
in
mov
data16
jle
sub
in
xor
jecxz
dec
or
xor
std
jno
inc
roll
sti
jnp
lahf
cmpsl
in
add
insl
cli
sub
mov
mov
jg
jbe
shlb
imull
mov
mov
jl
pop
stc
les
push
movsb
push
lea
insb
mov
mov
add
jbe
idiv
imul
or
mov
cmc
add
add
xchg
inc
xchg
lods
arpl
lea
mov
int3
popa
cmpl
pop
push
shrl
cmpsb
cmp
dec
shl
dec
inc
mov
push
out
shl
sub
sub
and
adc
cs
or
ds
lods
mov
rclb
mov
notb
pop
mov
add
xchg
and
mov
das
mov
jns
insb
mov
sbb
adc
icebp
sbb
sbb
iret
xchg
lahf
test
call
adc
insb
and
popf
jl
fcmovnbe
cmp
mov
add
int
shlb
adc
adc
sub
mov
push
cmp
sahf
and
mov
fwait
inc
iret
movsb
inc
xor
jnp
and
add
imul
sub
jge
inc
pop
xchg
cmp
xchg
in
add
add
fwait
cmp
dec
data16
xor
aas
mulb
add
add
add
fadds
out
pop
aas
jmp
push
test
imul
inc
fimull
mov
pop
test
xchg
xlat
mov
jo
jne
lds
cld
xchg
jbe
mov
ficoml
pop
cwtl
mov
scas
mov
das
mov
add
xchg
insl
xor
or
fwait
scas
dec
hlt
fldenv
sbb
negb
jmp
int
mov
dec
cmpsl
inc
pop
fcoms
mov
les
pop
mov
xor
dec
ficoms
ljmpw
lret
dec
mov
cli
jns
pop
sbb
dec
push
lea
int
sbb
sub
mov
mov
dec
orps
aad
pop
in
mov
mov
sub
mov
mov
out
icebp
orb
pop
mov
repz
sbb
pop
inc
mov
inc
push
clc
mov
or
cs
push
jmp
add
cmc
add
add
in
cmp
sub
add
les
cld
dec
inc
push
in
jno
lret
addr16
or
repnz
cmp
scas
rolb
in
cltd
ret
add
js
mov
dec
xor
jmp
out
dec
aad
das
push
loop
or
or
xor
popa
lock
lret
iret
xchg
insl
int3
lock
into
push
sub
and
insl
lock
sbbb
dec
jmp
push
outsl
jmp
into
cli
cmpsl
mov
xlat
pop
movd
cltd
or
repz
aas
out
scas
sar
mov
mov
dec
dec
repz
fnsave
lds
and
pop
fcompl
imulb
test
pop
stos
cwtl
aad
push
push
add
and
pop
popa
sub
dec
out
jnp
pop
daa
into
inc
mov
and
and
add
add
shr
mov
sahf
arpl
add
add
add
add
out
data16
aas
jp
lds
cli
jg
pop
mov
mov
pop
pop
mov
fsubl
fwait
adc
movsb
dec
fisubl
cmp
and
rcr
in
and
lock
xchg
cli
jbe
cmp
push
cmp
je
lock
jmp
mov
lds
mov
sbb
dec
or
es
shll
sub
ss
xlat
mov
cmp
adc
cs
arpl
je
or
orb
mov
sbb
xor
out
es
dec
ljmp
daa
push
xchg
cmp
push
int3
push
xor
pop
insl
dec
loopne
add
loopne
mov
push
jg
sarb
pop
or
lock
vmovntps
xchg
pusha
mov
inc
jg
sub
adc
incl
lock
sub
add
test
or
fdivs
pop
ja
lcall
add
outsb
or
mov
lret
push
add
iret
sub
add
push
jg
add
push
mov
in
fisubs
add
sarl
iret
xor
aad
stos
cs
out
jle
subb
jae
daa
dec
adc
sub
mov
lahf
dec
sbb
adc
cwtl
inc
or
fdivs
loop
stc
push
adc
int
popf
in
or
arpl
pop
push
leave
gs
test
lahf
mov
sbb
jb
out
fildl
dec
int
enter
add
mov
enter
or
mov
sbb
sub
dec
xchg
mov
inc
push
test
push
inc
dec
rolb
fmuls
divl
dec
xchg
inc
pop
xor
movsl
test
pushf
mov
pop
pusha
adcl
data16
xor
jnp
push
int
add
mov
and
das
lret
cmp
out
and
add
cmc
add
add
repz
vfnmsubpd
adc
jle
or
jb
or
data16
int
mov
outsb
shll
adc
or
mov
pop
jecxz
add
and
lahf
out
sti
orb
lret
xchg
push
inc
dec
sbb
push
mov
inc
xorl
mov
inc
call
std
or
mov
and
sbb
pusha
mov
hlt
pop
movl
add
cmpsb
adc
cmp
mov
aad
outsb
cmp
fdivrs
movsb
mov
mov
jp
cmpsl
cmp
or
stc
das
adc
bound
int
mov
ficomps
push
jne
pop
aad
cmp
inc
push
mov
loop
and
dec
jne
loopne
or
pop
repnz
dec
lcall
fsubl
mov
lods
push
adc
add
cmc
add
add
adc
std
loop
mov
sub
inc
rcr
mov
xchg
repz
xor
out
mov
mov
out
xchg
add
stos
mov
cmp
pop
xor
mov
dec
iret
xor
lcall
ds
cli
int
pop
inc
movsl
or
shrb
mov
aaa
or
adc
mov
movsb
and
leave
sbb
out
pop
jb
addb
xorl
icebp
test
push
clc
sbbb
scas
sub
cs
fildll
test
rorl
sbb
mov
adc
dec
int
lahf
mov
jmp
adc
cmp
dec
hlt
scas
inc
push
xor
sahf
sub
test
cli
dec
cmp
jl
cs
adc
cwtl
lea
in
inc
outsl
adc
je
fisttpl
mov
in
imul
call
enter
add
fbstp
scas
adc
lahf
mov
and
mov
add
cmc
add
add
jb
mov
xchg
daa
data16
mov
into
cmp
std
add
hlt
xor
mov
repz
and
add
jnp
popa
mov
lahf
aam
mov
push
out
cs
adc
je
mov
int3
push
dec
js
lods
das
ljmp
lret
stos
push
cs
adcl
inc
outsb
push
dec
pushf
repnz
xor
mov
lcall
fldz
inc
fwait
pushf
jmp
jnp
es
aam
dec
fildl
jl
idivb
jns
cwtl
lahf
shrl
cmp
jno
pop
movsb
mov
xchg
jbe
fcos
dec
lret
mov
and
push
lret
ds
sbb
popf
xacquire
mov
cmp
add
mov
mov
sub
lahf
cld
test
add
add
xor
rcr
push
es
imul
dec
popf
sbb
push
xor
cmc
mov
push
mov
cmp
pop
or
fcomip
and
push
sub
sbb
mov
mov
addr16
mov
cmp
ficoms
jnp
int3
cmp
jl
ret
les
das
mov
jg
andb
fs
sub
mov
add
in
bound
daa
popa
setp
inc
insb
scas
ret
fs
out
popf
repz
sbb
inc
in
or
xor
inc
ja
sbb
push
jns
cmpsl
aad
stos
es
jae
inc
inc
jmp
and
movsb
xor
jp
gs
int
add
mov
pusha
inc
mov
insl
scas
enter
rclb
sbb
inc
or
fidivl
dec
pop
out
add
out
into
push
cmp
sub
int
ret
imul
add
or
cltd
loopne
and
lahf
add
push
push
pop
hlt
shlb
leave
inc
roll
push
inc
add
add
jnp
lret
lods
out
test
out
mov
fcoml
inc
loope
jle
std
sub
mov
xorl
in
pop
xchg
push
repz
fs
in
out
aaa
test
pop
imul
jg
xchg
cmpsb
insb
sub
jp
jl
ficompl
add
mov
mov
fucomp
and
add
movsl
or
shl
xchg
mov
xchg
xchg
repz
push
or
and
cmp
loop
sub
sub
jo
dec
nop
pop
add
xor
xor
dec
mov
outsb
outsl
cmpsl
and
ffree
movsl
ret
push
fnstenv
mov
int
pop
fldcw
je
mov
adc
mov
jo
dec
xor
cli
out
inc
sub
dec
mov
add
add
xchg
inc
shl
xlat
mov
fisttps
jo
dec
jl
xchg
push
add
add
add
mov
dec
movsb
adc
adc
insl
or
movl
xchg
loope
lcall
les
daa
fdivrp
out
cmp
arpl
lods
rorb
leave
inc
pop
sub
insb
shlb
clc
shrb
xchg
push
cmc
sub
loop
cs
mov
mov
mov
mov
imul
adc
das
xchg
iret
push
sti
xor
adc
dec
arpl
push
imul
sahf
dec
int
shrb
int
repnz
mov
dec
mov
xor
cltd
mov
jecxz
daa
xor
cld
into
lcall
dec
mov
notb
jne
test
mov
adc
pushf
fucomi
lods
test
enter
jecxz
mov
daa
push
inc
not
addb
pushf
lret
imul
add
lahf
pop
bnd
mov
mov
add
add
add
iret
adc
or
xchg
mov
pop
push
jmp
push
xor
pop
or
adc
loope
test
mov
push
insb
mov
lret
dec
fdivrl
or
jae
pop
lret
push
leavew
cmp
jns
sbb
pop
sbb
mov
popf
cld
ja
shr
mov
inc
and
int3
cmp
and
jge
xchg
jno
stos
into
dec
mov
leave
fisubl
es
cmpsl
imul
adc
test
xorl
push
jnp
sbb
pop
sub
sub
ret
jbe
push
xorl
stos
aas
outsb
in
fs
ss
mov
push
aaa
pop
jl
sub
sub
cltd
shrb
shl
icebp
clc
stos
cmpsb
in
sbb
pop
push
or
cmp
add
add
idiv
jg
data16
aad
fdivl
jge
add
cmc
add
add
popa
lret
iret
xor
sti
cmp
jns
dec
outsl
push
jnp
xlat
test
aad
adc
push
or
loop
cltd
add
xchg
push
push
push
mov
mov
jle
imul
cld
dec
dec
fldl
jmp
ss
sub
sub
int3
add
xor
dec
push
cmp
mov
sbb
je
iret
out
in
shrb
xchg
lret
adc
test
fwait
bound
or
push
loope
scas
pop
inc
faddp
cli
repz
cmp
lock
cmc
xor
inc
xchg
xchg
sbb
pop
cmc
dec
add
jne
sbb
loope
jle
out
jo
mov
arpl
inc
movb
adc
das
js
push
add
call
cmp
jne
cmpl
call
xlat
push
add
bts
fdivs
scas
call
add
add
pop
mov
movsb
inc
gs
es
mov
add
cmc
add
add
push
jecxz
and
out
pop
sbb
rcll
cwtl
fidivrs
leave
push
xchg
aaa
lods
std
or
ja
inc
jecxz
dec
stos
repnz
dec
pop
push
das
filds
jae
out
shll
int
lret
test
or
fneni(8087
fnsave
jle
dec
lret
fwait
mov
sarl
insl
jne
sub
adc
lock
pushf
mov
fcomps
push
push
jb
outsl
sub
lock
inc
or
jecxz
cmp
pop
gs
in
sar
andl
jge
mov
in
push
mov
lcall
dec
pop
inc
xor
pop
je
lret
mov
cmp
ds
mov
xor
cmpsb
mov
int
loop
adc
sub
loope
adc
push
dec
pop
and
lock
repnz
movsb
jle
mov
jge
outsb
add
cmc
add
add
push
dec
icebp
repz
mov
loop
insl
xor
pop
xchg
cltd
xchg
add
stos
icebp
jo
cmpl
pop
pop
cmp
jecxz
ds
adc
outsb
push
out
in
lahf
fwait
je
int3
adc
sahf
add
shl
pop
in
imul
stos
inc
xor
add
adc
cltd
jecxz
inc
sbbb
sbb
sahf
inc
stos
ds
add
and
imul
in
mov
cmp
xchg
fldcw
mov
cld
gs
sub
shll
and
and
adc
mov
cmp
adc
mov
sbb
jl
jl
mov
in
cs
lea
pop
pop
or
pop
stc
das
dec
jge
jb
insl
mov
ss
int
imul
andl
pop
mov
out
xchg
lcall
mov
jmp
add
add
jmp
sub
and
test
pop
outsl
add
cmc
add
add
xor
inc
je
aad
mov
inc
jp
mov
fiaddl
sarl
mov
push
stos
adcb
imul
lock
xchg
mov
inc
stos
mov
jecxz
add
pop
xchg
inc
inc
adc
xchg
inc
and
inc
or
xchg
mov
push
and
sub
mov
lods
jmp
dec
cmp
pop
gs
xor
fdivs
decl
jo
dec
mov
outsb
sbbl
push
cmp
or
paddd
cmc
mov
xchg
decl
loope
cmp
sub
loopne
mov
inc
sahf
inc
out
cmpsl
pop
insl
arpl
push
mov
or
mov
pop
jl
int
adc
adc
sbb
push
inc
pop
jge
bound
in
add
shll
fnstenv
xchg
or
outsl
push
jo
add
add
add
cmp
jge
push
mov
movsb
shrl
jno
rcr
xchg
pop
inc
push
sub
out
cmp
sti
xchg
imul
cmp
jecxz
xchg
xchg
ds
les
icebp
add
enter
or
bound
push
xlat
mov
jbe
sub
sti
xor
mov
adc
pop
xchg
nop
mov
mov
cwtl
loope
push
kmovw
mov
ljmp
je
mov
or
daa
jmp
lea
pop
lahf
dec
iret
loope
ds
push
lret
or
push
fisubs
mov
sub
cs
or
xor
ljmp
movsb
leave
decb
mov
bound
jge
sbb
pop
imul
fdivrl
jnp
aas
stos
add
int
nop
xor
into
push
cltd
lods
adc
add
cld
je
jbe
jmp
lea
xchg
push
mov
mov
cmc
add
add
mov
jb
push
mov
mov
xchg
es
insl
jnp
jle
jle
mov
popa
insb
sti
ds
rclb
xchg
movsb
push
addr16
and
pusha
jae
divl
jbe
aam
lret
xchg
jp
bound
mov
xor
sti
add
ss
xchg
pop
jae
fs
jg
loop
cmp
jne
scas
mov
cmp
loopne
imul
pushf
lret
outsl
das
lods
and
push
jb
out
daa
jp
rol
hlt
out
push
jl
fnstenv
loop
scas
incl
lahf
mov
push
in
and
pushf
repnz
inc
arpl
xchg
in
mov
jle
mov
out
sub
xor
or
adc
add
mov
xchg
mov
dec
xor
data16
or
pop
inc
and
pusha
xlat
dec
aam
add
add
cltd
jmp
fcmovnbe
cld
xor
lock
add
cmc
add
add
outsb
fnsave
clc
add
or
mov
subb
xlat
setbe
cmpsb
inc
dec
xchg
cmp
fdivrs
dec
out
movsb
and
or
imul
mov
mov
shlb
jl
lds
mov
jne
sbb
or
fisubrl
jge
mov
mov
add
jno
or
sub
fmull
test
jnp
ret
jge
add
pop
sbb
xchg
mov
sub
mov
mov
jns,pt
push
out
xor
int
out
pop
adc
jb
add
gs
sahf
push
or
pop
adc
mov
jo
sub
sbb
aas
insl
push
or
pop
clc
mov
bound
dec
cmp
ficoml
imul
mov
push
icebp
pop
scas
add
add
push
jg
pop
jne
jge
repnz
add
add
add
adc
sahf
lret
mov
xor
div
out
cmp
add
push
jp
jecxz
pop
pop
enter
js
lods
imul
lea
push
lret
sti
sahf
out
fcoms
add
xorb
mov
push
cmp
loope
adc
sbb
pop
sub
rcll
imulb
imul
dec
push
daa
fisubrl
sahf
jge
inc
pop
das
js
or
cmp
mov
push
push
int3
cmc
jg
sub
jae
inc
das
lock
fwait
mov
insb
hlt
lret
dec
mov
lock
scas
testl
push
sbb
dec
and
xchg
jbe
test
aam
leave
pop
popa
rcrb
mov
pop
inc
or
jns
lods
push
or
mov
mov
dec
jg
jecxz
push
das
push
sbb
cld
pop
push
and
outsl
add
add
mov
fucomip
addr16
sbb
add
add
add
jecxz
insl
mov
and
movsb
add
dec
inc
jns
fstpt
outsl
xchg
popa
xor
int
cmp
pop
mov
nop
adc
sbb
inc
mov
push
out
ljmp
xchg
jl
mov
stos
ret
cmp
xlat
adc
xchg
cltd
mov
das
arpl
xor
daa
paddb
call
stos
xor
push
jp
mov
jecxz
outsl
mov
stos
mov
pop
adc
popa
in
stos
enter
and
int3
in
aaa
push
jo
imul
sti
insl
jbe
sbb
or
flds
fisubrl
mov
lahf
adc
loope
xor
jno
cli
incb
mov
dec
push
jl
into
adc
dec
mov
push
in
jbe
xor
insl
call
lock
pop
dec
sbb
add
add
dec
out
iret
jmp
cmpsb
add
data16
jne
add
add
add
sbb
push
in
add
scas
sti
gs
cli
cmpsb
out
sbb
out
pop
std
dec
sbb
shrl
cmc
inc
lea
mov
ret
jbe
fs
or
dec
fsubl
mov
mov
mov
outsb
outsb
jnp
add
xlat
mov
fisttpl
adc
push
and
jnp
loopne
adc
les
mov
mov
scas
ret
or
cmp
test
ret
nop
mov
fcoml
jg
sub
scas
stos
inc
mov
push
xor
fildll
test
popa
aaa
mov
cli
mov
cmp
stc
sub
mov
das
mov
jb
insl
fcompl
out
fisubrl
jo
push
nop
mov
xchg
inc
mov
sti
xor
dec
in
fwait
dec
orb
and
mov
add
cmpsb
push
jnp
std
cmpsb
pop
lods
jne
xchg
xor
ljmp
add
add
dec
sub
imul
add
ds
aas
xor
xor
jge
in
inc
das
outsl
outsb
xchg
mull
test
sahf
inc
adc
repz
sbb
popf
adc
or
push
lods
xchg
pop
lret
jb
mov
test
lahf
xor
add
xor
pop
jge
pop
pop
cli
int
push
leave
aas
mov
insl
mov
push
scas
shrb
xlat
push
stc
sahf
btc
popf
xchg
jno
inc
pop
test
xor
jo
push
or
xchg
mov
and
daa
popa
pop
cmova
sbb
push
add
mul
xlat
rcr
cmpsb
or
adc
or
cs
mov
in
or
rcl
stc
inc
pop
loopne
pop
sub
jbe
test
fimull
mov
cltd
pop
push
fisttpl
sub
fisttps
int
dec
shl
lods
loope
add
add
neg
std
stc
idivl
jne
ja
add
add
add
mov
cmp
sub
mov
mov
pop
inc
jo
jp
orl
test
push
sub
sbb
jl
bound
je
lea
sbb
aas
fcoml
cld
repnz
mov
sti
and
fwait
pop
dec
pop
adc
xchg
in
mov
shrl
xor
pushf
mov
dec
cmp
hlt
mov
dec
dec
jo
shl
int3
cld
dec
mov
mov
jo
adc
out
fdivr
lods
int
insb
test
mov
out
aas
xor
pop
ret
std
decl
popa
and
jnp
push
push
clc
xlat
xor
inc
xchg
test
dec
ret
adc
test
sbb
push
mov
push
inc
rcll
outsl
insb
das
push
xor
jge
out
add
mov
addr16
add
add
cs
mov
ss
ja
add
add
add
or
push
jmp
cwtl
pop
cld
mov
fs
es
add
sub
pop
jmp
hlt
imul
cmc
cmpsl
push
cmpsb
push
imul
shrl
out
xchg
xchg
inc
fs
or
cmp
push
mov
push
cmp
lods
jns
adc
sbb
mov
outsl
fs
push
inc
jle
xchg
inc
jmp
xchg
insl
lds
mov
dec
and
jne
in
push
fisubrs
jns
or
out
jno
outsl
xchg
and
test
cmp
push
mov
jg
push
and
mov
add
cmp
push
sbb
mov
xor
and
adc
icebp
stos
stos
mov
movsl
lea
loopne
inc
push
sbb
aaa
sahf
xchg
inc
mov
repnz
popf
mov
adc
addb
add
lcall
out
dec
jg
aad
lea
out
js
add
add
add
xlat
popa
sub
pop
bound
ret
mov
in
leave
js
rcll
mov
repnz
jo
bound
xor
mov
pop
ss
mov
insb
fisttpll
and
push
cmp
dec
jecxz
or
ret
inc
mov
cld
sub
adc
push
insb
mov
pop
jb
xor
movsb
dec
sbb
jb
jns
sub
loopne
push
or
scas
jl
add
in
dec
pop
xorb
ficompl
push
sti
xchg
xor
dec
cmp
push
into
pop
sbb
adc
stos
mov
push
movsb
mov
dec
jno
mov
mov
mov
lahf
clc
aam
sbb
lahf
cmp
dec
daa
push
inc
jbe
inc
out
xor
arpl
inc
mov
xchg
pusha
lahf
loopne
shl
push
push
push
orl
mov
test
aas
or
fsubl
add
daa
sub
ja
mov
paddq
pop
inc
outsb
jecxz
add
cmc
add
add
mov
cmp
xchg
mov
jnp
push
sub
aaa
bound
enter
jae
adc
pop
pop
incb
mov
lods
cmc
filds
xor
jmp
mov
popa
mov
test
pop
aad
call
push
subb
sahf
insb
add
imul
cltd
mov
out
pop
xor
sbb
cli
imul
inc
fidivs
rcrb
adc
pop
popa
adc
and
xlat
push
repz
pop
call
xchg
push
int3
jg
or
pop
test
sbb
popf
outsb
xor
sbb
jle
cmpsb
repz
mov
adc
jne
fidivs
mov
pop
jb
insb
sub
and
xchg
insl
ror
mov
jle
addr16
ss
leave
mov
into
jne
cli
mov
xor
movl
add
int
mov
jnp
jge
xchg
out
xchg
fdivrs
add
add
add
andb
roll
adc
xchg
aam
das
dec
loope
xor
out
pusha
cli
mov
das
enter
addr16
xchg
adcl
adcl
mov
rep
or
push
mov
mov
cmp
xchg
xor
bound
inc
es
outsb
jecxz
cmp
mov
sbb
mov
dec
or
les
outsb
pop
mov
ds
mov
mov
cmpsb
daa
stos
add
int
fidivl
movsb
cli
mov
outsl
cmp
rcrl
push
xchg
pop
sub
lret
pop
xor
pusha
dec
arpl
push
je
and
and
push
xchg
lcall
cmpsb
push
xchg
movsb
shr
push
add
cmp
cmpsb
mov
adc
sub
mov
add
cli
xchg
jle
mov
mov
add
add
add
cmp
insl
push
mov
or
jno
fstpl
dec
dec
fsubl
scas
xor
arpl
inc
dec
das
pushf
mov
rorb
mov
xlat
aad
sahf
lea
push
adc
ja
sbb
cmp
fisttpl
mov
and
cmc
fidivrs
jno
imul
int3
arpl
xchg
xchg
cltd
mov
cld
cmp
xor
out
arpl
scas
jp
fwait
enter
mov
jecxz
mov
lcall
lods
add
dec
pop
ljmp
sbb
sbb
movl
std
sbb
jns
or
push
jne
dec
sbb
out
test
pusha
pop
aam
and
mov
in
adc
adc
sub
cltd
stc
xor
mov
sbb
push
pop
sub
mov
fnstcw
fwait
aas
iret
or
inc
aaa
dec
fwait
jnp
aad
gs
into
add
test
add
add
add
loopne
xchg
mov
add
inc
lods
mov
mov
and
mov
cmp
mov
inc
mov
sbb
push
mov
gs
or
movl
rclb
addr16
push
push
jnp
mov
inc
sbb
lret
sub
popa
mov
loope
push
lods
push
or
dec
icebp
or
ds
mov
pop
cmpsb
adc
lea
push
jb
popa
mov
dec
jae
cmp
hlt
aas
adc
scas
mov
xor
sub
lret
lds
lea
sbb
repz
push
mov
ficoms
rorl
enter
dec
lret
dec
dec
lahf
aas
aad
mov
push
cmp
adc
mov
inc
and
lods
jle
test
call
pop
xchg
cltd
adc
adc
mov
std
mov
enter
mov
cmc
add
add
xor
test
lea
aad
sbb
sti
inc
sbb
scas
nop
push
adc
push
mov
jmp
pop
fmul
mov
movsl
subb
xchg
jnp
add
sbb
daa
sub
fwait
test
mov
jmp
sti
mov
inc
dec
push
shrb
and
jo
jl
inc
cmp
push
subl
fnsave
pusha
add
fnstsw
pop
into
testl
je
cmp
shll
loop
mov
fwait
mov
jg
test
adc
pop
cmpsb
ds
mov
scas
xor
add
jmp
popa
inc
pop
nop
jno
inc
or
mov
imul
ja
mov
mov
ja
mov
mov
add
adcl
xchg
ffreep
dec
imul
outsl
sub
lods
jle
add
add
add
mov
jno
or
arpl
js
nop
pop
or
aam
inc
mov
popf
mov
inc
sbb
push
aas
imul
hlt
test
popf
aaa
inc
scas
fnsave
js
xor
je
divl
or
jl
push
popw
das
cwtl
dec
int
cltd
lahf
aam
mov
xor
inc
test
cmpsl
mov
hlt
daa
xor
jo
aad
incb
push
jg
pop
mov
mov
in
scas
ds
xchg
mov
adc
lods
std
in
insb
mov
and
out
sub
mov
lock
ss
clc
mov
cs
loop
lods
inc
ss
sub
or
mov
loope
sub
ss
mov
shrl
cmp
ja
adc
jg
ss
lret
out
mov
add
das
pop
ss
add
xchg
add
add
inc
in
mov
mov
out
in
pop
test
les
add
add
add
adc
jb
notb
jecxz
adc
testb
pop
mov
in
mov
inc
xor
dec
mov
stos
out
stc
stos
subl
mov
sub
adc
add
vpsubb
jbe
mov
cmp
fs
stos
xchg
out
jmp
imul
inc
inc
mov
mov
xlat
sub
or
jno
filds
test
clc
xor
sbb
popf
insl
sub
jle
cltd
mov
iret
xchg
dec
loop
add
sbb
dec
int3
sti
fimuls
push
cmpl
fs
inc
ljmp
jbe
jmp
sub
inc
imul
ret
and
lea
idivb
push
repnz
mov
dec
pop
mov
pop
add
push
lret
mov
sti
pop
jmp
pop
inc
call
jns
divl
bound
orb
addb
cmc
add
add
push
mov
out
adc
sarl
lahf
cmp
or
cmp
add
push
and
or
fsubrp
xchg
xchg
cmp
cli
sahf
scas
sbb
or
mov
in
sbb
push
pushf
mov
push
clc
sbb
cmp
pop
push
int3
roll
ret
cmp
das
xchg
mov
sub
fiadds
insb
fwait
sti
adc
or
pop
push
inc
shl
mov
sub
xor
xchg
mov
mov
cld
adc
xchg
mov
stos
filds
imul
xchg
push
cwtl
mov
add
xchg
imul
lds
mov
mov
in
addr16
and
mov
mov
inc
leave
or
jbe
ljmp
inc
xor
repnz
add
fisubs
mov
push
mov
and
mov
add
mov
int
test
pushf
cmp
int
mov
cwtl
xchg
push
test
mov
add
dec
pop
add
insb
lds
dec
add
dec
jnp
mov
xchg
fwait
in
xchg
push
adc
movsl
mov
ret
mov
movsl
popf
xlat
mov
frstor
dec
and
fcomp
jge
push
in
sub
or
jnp
push
pusha
loopne
mov
fldl
fdiv
sub
stos
xchg
inc
add
movsl
std
loope
stos
std
or
pusha
push
rol
inc
test
repz
imul
mov
add
sbb
cmp
in
ret
push
mov
cmp
adc
push
nop
jno
addr16
loopne
stos
loope
in
ror
and
mov
cmpsl
jg
mov
out
push
das
add
add
mov
outsl
jne
ljmp
sbbl
cmc
add
add
mov
xlat
jl
and
popa
jno
addr16
add
and
inc
xchg
jns
cltd
repz
push
or
fcmovnb
sub
mov
loope
out
ror
sbb
cmpsl
lea
and
movsl
inc
sbb
mov
lret
rorb
jg
push
xor
push
arpl
leave
mov
popf
leave
ret
sbb
adc
sbb
xor
fnstcw
and
insb
movsb
or
inc
push
pop
gs
lahf
and
xor
loope
push
mov
jge
cld
inc
mull
pop
mov
test
call
jl
test
pusha
addr16
and
mov
mov
loopne
arpl
popa
sti
iret
ja
sbb
int
mov
leave
jns
xchg
mov
fwait
pop
jo
mov
push
cmp
jg
mov
add
orb
jle
insb
xor
or
inc
jne
add
cmc
add
add
add
mov
dec
jb
push
mov
mov
mov
and
jg
sub
xor
or
pop
dec
adc
nop
push
and
in
dec
and
loopne
pop
sti
ficoml
pop
dec
std
xor
sbb
mov
bound
xor
lods
jg
jp
mov
call
imul
cmp
sub
xchg
xor
testl
jmp
sub
ret
push
mov
jns
xchg
ret
or
rorb
gs
sub
imul
andl
popa
repz
pop
popf
pop
scas
mov
mov
pop
loopne
mov
lea
addr16
inc
dec
ja
fistpl
cmpsl
cmc
sti
out
pop
or
mov
inc
repnz
add
xor
jo
ja
std
stos
lods
and
fucom
in
mov
push
add
cmc
add
add
mov
imul
bound
xor
ret
pop
push
ds
repz
xchg
inc
sub
insl
jbe
ljmp
inc
fcomi
and
adc
mov
bound
addl
rorl
pop
sbb
add
gs
pusha
std
xchg
push
push
sub
xchg
mov
lret
add
jne
cltd
jnp
jnp
mov
cs
xor
inc
aad
mov
imul
repz
outsl
fcoms
xchg
push
or
jne
xchg
mov
in
js
adc
push
pop
cwtl
aam
xchg
in
ss
inc
insl
arpl
nop
sub
jb
xor
inc
icebp
aas
pop
sub
lods
loope
ret
xchg
les
fdivp
nop
or
jns
sahf
clc
add
add
cmpsb
arpl
je
and
push
pop
test
add
add
add
pop
rclb
cltd
push
das
std
xor
push
popa
inc
jmp
and
outsb
jle
or
outsb
jno
daa
sahf
xorl
add
sbb
sub
jo
push
cltd
or
inc
shlb
mov
mov
push
mov
testb
orb
inc
imul
in
cmp
fcoml
mov
and
dec
cmp
pop
mov
add
xchg
fs
icebp
mov
dec
adc
bnd
sub
enter
or
push
and
sar
cs
das
mov
inc
add
push
es
mov
clc
jmp
ror
in
dec
dec
cmpl
mov
in
sub
les
notl
cmp
and
mov
sbb
add
add
cmp
cli
mov
jge
adc
add
add
add
fnstcw
loope,pt
jl
xor
mov
mov
pop
xchg
sub
notb
adc
sti
into
push
or
loopne
mov
inc
fcmovnu
jecxz
xchg
pop
stc
cltd
popf
add
pop
mov
dec
dec
or
movsl
in
pop
jp
cmovns
leave
jmp
jo
iret
cmp
push
cli
add
push
in
movsl
sub
pushf
cmp
xchg
sbb
fldt
cmp
dec
pop
out
mov
push
push
inc
jne
cmpsb
xlat
inc
ret
inc
hlt
adc
sbb
adc
pusha
xchg
bound
loop
push
lcall
bound
data16
inc
jne
aaa
loop
jmp
in
and
daa
or
ret
push
jno
mov
jmp
into
lcall
and
add
add
test
ljmp
mov
add
add
add
out
sahf
fstpt
testl
fcmovnu
jg
add
sbb
mov
inc
cmp
es
ss
inc
ja
mov
and
mov
lcall
arpl
xchg
adc
push
hlt
xchg
sahf
sub
inc
vcmpps
push
outsl
xor
add
loopne
out
push
jp
call
pop
in
push
decl
dec
sub
cmp
lret
and
cmpb
mov
pop
push
es
bound
outsl
adc
loope
jb
sbb
insb
push
push
insl
push
in
pop
testl
stos
aaa
repz
mov
int
std
sub
hlt
sbb
iret
sarl
mov
cmp
cli
out
xchg
into
out
push
insb
xchg
sbb
xchg
movl
jl
in
dec
xor
push
inc
jne
add
testb
test
push
iret
mov
add
add
add
push
jno
enter
arpl
int3
jecxz
mov
mov
pushf
cmp
sbb
xor
mov
push
inc
js
test
adc
popf
jo
mov
add
mov
pop
repnz
mov
add
mov
and
inc
lea
mov
and
jecxz
mov
jmp
cmp
clc
inc
data16
les
push
and
mov
arpl
lods
add
mov
cmp
xchg
loop
adc
jecxz
mov
loopne
push
into
add
push
mov
xlat
mov
pop
lret
scas
test
and
pushl
pop
jns
push
mov
xchg
test
aad
data16
xor
inc
pop
push
ds
mov
add
out
mov
shrb
xor
and
hlt
bnd
mov
cmp
add
add
lcall
scas
mov
jns
mov
add
add
add
push
subl
mov
jle
inc
xor
xor
imul
iret
fcom
lret
cltd
add
inc
sub
movsb
sarl
stc
ljmp
outsb
idivl
xchg
push
xchg
pusha
jns
xor
or
inc
leave
cmp
ret
dec
dec
fdivrs
aam
pop
push
lock
cmp
lret
dec
int3
scas
pusha
mov
aaa
jmp
ffreep
mov
mov
mov
dec
outsl
adc
in
and
int
dec
pop
xchg
out
repnz
xor
xor
andl
test
push
sbb
movsb
push
cmpsl
xchg
pop
popa
or
pop
scas
loopne
mov
loope
rolb
cmp
pop
dec
add
icebp
xor
outsb
pop
push
jle
jo
sub
jp
ret
dec
push
jae
aad
sub
add
add
add
mov
idiv
fst
inc
sahf
pop
out
cmpl
cmc
add
add
push
lods
repnz
sub
push
mov
push
lret
in
mov
mov
add
cltd
std
or
arpl
or
dec
jmp
stos
inc
repnz
addr16
jmp
xchg
stos
andl
inc
loopne
insb
in
clc
test
cs
adcb
dec
loopne
jae
movsl
mov
cltd
test
jp
pop
push
popa
adc
push
andl
inc
adc
xor
inc
icebp
inc
or
mov
pop
sahf
je
mov
push
push
push
addw
pop
clc
rolb
fxch
xor
out
lds
popf
fbld
ret
dec
xchg
push
aaa
aaa
pusha
xor
inc
stos
inc
push
aad
mov
sbb
jo
lret
mov
subb
sub
sub
adc
mov
or
adc
dec
jp
or
shl
cmp
ljmp
add
call
and
inc
or
add
add
add
adc
fidivs
add
jbe
lahf
fs
out
adc
enter
into
fnsave
push
and
jg
sbb
sub
xchg
iret
push
sub
int3
out
jne
add
mov
test
sub
enter
fstpl
out
lds
test
sub
pop
rclb
pusha
pop
aaa
pop
nop
sbb
and
sbb
adc
stos
lcall
hlt
loope
sub
cltd
incb
stos
and
cltd
movsl
xchg
xor
ja
jbe
jl
xor
sbb
push
ret
sti
jae
loopne
sub
fdivrs
adc
lahf
jecxz
dec
pop
shr
fistpl
mov
xlat
cmp
call
add
stos
lea
jmp
out
add
stos
push
mov
mov
cmp
add
add
sti
iret
and
repnz
popf
cmp
mov
add
add
add
jae
inc
scas
xlat
mov
sbb
nop
jmp
out
pop
inc
push
lds
mov
push
pop
int
insl
cltd
cmp
cmp
push
xlat
push
cmp
arpl
add
add
loopne
xchg
jge
pop
int3
jmp
cmpsb
lock
sub
mulb
inc
bound
cmp
aad
es
dec
ds
cmova
xchg
aad
mov
jne
mov
cmpsb
testb
push
adc
sti
and
and
mov
or
in
mov
xor
jno
aad
insl
scas
xor
push
pop
mov
ljmp
fs
pop
lea
stc
adc
adc
adc
fs
mov
aas
scas
gs
pop
enter
jg
cmpsb
mov
push
popa
insl
cmp
cmp
add
add
outsl
xchg
inc
lahf
sti
hlt
out
cmp
loop
lods
sbb
daa
pop
lea
add
add
add
in
adc
nop
mov
inc
jnp
es
pop
mov
mov
movsb
mov
push
sbb
je
aad
add
sbb
dec
arpl
ret
pop
std
and
cmp
lcall
adc
cld
xor
xchg
sbb
xor
aaa
data16
inc
iret
jae
inc
adc
aaa
sbb
icebp
dec
xchg
stos
repz
lds
mov
dec
add
inc
dec
push
pusha
and
push
std
insl
push
je
jp
flds
sbb
call
jno
rcrb
mov
xor
mov
cmc
icebp
in
add
cmp
cltd
sub
inc
push
xchg
clc
scas
sub
js
xor
push
jg
sub
out
lea
cmp
out
call
iret
adc
aam
and
add
mov
mov
into
aam
pushf
cwtl
cld
lea
add
add
add
mov
pop
xchg
push
jno
jmp
arpl
mov
xchg
outsb
ss
sub
jmp
stos
gs
jl
arpl
pop
cld
rcl
mov
popf
pop
aas
rcrl
loop
push
mov
rcll
or
cs
xchg
push
dec
inc
pushf
aaa
mov
std
imulb
in
sbb
leave
je
std
pop
xchg
mov
mul
sbb
hlt
adc
in
pusha
aad
addr16
inc
hlt
clc
push
push
cmp
adc
stos
cmp
popf
popa
dec
and
inc
shrl
mov
shlb
outsb
sbb
leave
hlt
push
icebp
sbb
inc
rcrl
loopne
adc
inc
repnz
jge
mov
int3
pusha
xor
inc
and
rolb
pusha
arpl
inc
sbb
fiaddl
out
sbb
or
sbb
add
and
out
ljmp
jp
cmp
stc
lret
icebp
mov
add
add
add
nop
insb
cs
cmp
pop
push
sub
xor
sub
enter
imul
or
push
xchg
sbb
push
add
inc
cmp
repz
pop
stos
stos
dec
shll
push
ljmp
add
pop
inc
das
lods
test
hlt
sbb
dec
jge
push
dec
sbb
movsb
mov
inc
mov
jae
push
push
sub
test
jmp
mov
popf
mov
sbb
ret
fstpl
mov
mov
sti
std
popf
not
pop
xor
enter
scas
push
jge
dec
xchg
out
loop
addr16
bswap
cld
add
mov
mov
leave
enter
adcb
arpl
xor
push
inc
sub
loope
dec
sbb
lods
out
and
daa
loop
into
add
int
rclb
add
arpl
jnp
sbb
xchg
sub
push
jl
out
add
cmc
add
add
mov
ret
popa
or
adc
mov
ret
mov
lahf
aad
mov
aam
mov
jl
in
in
into
ret
daa
fcmovnu
lret
scas
call
fwait
pop
cmp
cmpb
movsb
xor
in
in
in
sub
mov
lea
into
cmp
cld
sarb
insl
xchg
mov
lds
idivb
and
sbb
xlat
fnstcw
stos
push
xor
adc
lds
insb
xchg
xchg
cmp
dec
xorl
pusha
dec
dec
mov
dec
pop
xor
cmpl
das
jne
push
push
jb
cld
jns
mov
mov
dec
mov
popf
mov
cmp
pop
push
pop
mov
fsubl
cli
mov
dec
or
push
sbb
incl
add
push
aas
or
mov
mov
nop
add
cmc
add
add
imul
shl
pop
movb
or
stos
lret
ds
add
cmp
stos
xchg
int
push
fs
lahf
xor
sub
jae
adc
sti
pusha
add
dec
push
je
add
jecxz
pop
ds
dec
dec
popa
arpl
sbb
enter
push
mov
dec
or
xchg
fbstp
or
sbb
lods
mov
pop
cwtl
push
pop
mov
test
and
gs
inc
xchg
loopne
idivb
pop
and
sub
adc
cs
shll
pop
push
mov
jp
push
sub
clc
jae
sbb
mov
fnstsw
jle
fwait
iret
mov
mov
and
and
lcall
lcall
push
shrl
insb
fidivl
cli
sub
lcall
add
cmc
add
add
cmp
stc
add
push
xchg
enter
test
mov
xchg
iret
cmp
xchg
es
mov
les
cmp
shl
in
mov
mov
or
bound
andb
std
pop
cmp
std
fistpl
rcr
test
inc
in
jp
bound
adc
in
rolb
iret
add
fadd
out
aam
ret
or
pop
or
push
or
or
mov
bound
jb
les
jmp
inc
xor
daa
lea
mov
and
pop
cmp
js
sbb
adc
xorl
insl
lret
cs
add
or
dec
mov
dec
add
insl
mov
ret
jge
inc
rolb
jle
and
pop
cmpsb
sub
push
cs
adc
add
call
add
cmp
mov
in
push
sbb
add
cmc
add
add
mov
inc
or
adc
insb
rclb
clc
mov
stos
sbbl
faddl
and
sarl
incl
xchg
sbb
dec
or
xchg
xor
sub
mov
or
xchg
mov
jno
loopne
push
push
adc
cmp
pop
mull
mov
adc
push
adc
lds
pop
cld
jge
loope
cmp
sarl
add
mov
add
mov
mov
insl
push
push
hlt
mov
incb
push
cld
xor
add
xor
sbb
jno
lods
push
loope
cmp
sbb
subl
mov
or
jns
shlb
outsb
shll
fmul
movsl
sub
add
in
inc
into
adc
mov
inc
fildll
or
lret
jb
push
in
fnstcw
sbb
add
add
int
fstp
iret
push
lock
jmp
pushf
sti
xor
cmc
add
add
cmpsl
inc
hlt
mov
mov
push
xchg
out
push
rcr
pop
leave
and
imul
test
xor
xlat
je
rolb
inc
or
push
pushf
jo
mov
jp
and
mov
fwait
decl
jo
jl
adc
adc
inc
test
add
mov
dec
aam
mov
notb
mov
es
int3
cmp
inc
jp
and
lods
or
xchg
imul
fadds
xchg
sbb
mov
mov
mov
xchg
fiadds
pop
out
fnstenv
scas
dec
arpl
bound
aaa
mov
aaa
xor
std
sub
fwait
pop
stos
fwait
and
fiadds
jecxz
sarl
mov
hlt
push
imul
mov
lcall
and
or
add
mov
sub
out
mov
fs
bound
jno
add
add
adc
std
sub
pop
mov
scas
xchg
add
cmc
add
add
sub
cmp
out
mov
arpl
push
imul
and
sbb
cmpsl
in
int3
or
fisttps
popf
sti
pop
pop
push
pop
outsl
and
pop
mov
test
int3
sub
xchg
lea
adc
push
jno
ljmp
movsl
push
xchg
cwtl
pushf
repz
dec
xchg
cld
test
push
divb
push
stos
or
sbb
rclb
insl
xchg
ds
in
iret
add
call
sbb
out
push
pop
into
lods
sbb
cmp
cli
insl
push
cmp
sti
lret
mov
xchg
popf
adc
repz
xor
xchg
test
xchg
lret
testl
std
es
fcoms
sbb
and
inc
push
loopne
sbb
and
push
xchg
mov
andl
lret
popa
add
add
mov
push
inc
add
movsb
xchg
add
cmc
add
add
xor
xor
mov
inc
xchg
ds
mov
popa
fldlg2
outsb
sahf
bound
rcrl
jo
popf
stos
pop
mov
test
add
mov
xor
arpl
and
pushf
xchg
sar
mov
lret
imul
aam
pop
and
aaa
pop
in
rorl
lahf
inc
mov
cmpsb
rcl
hlt
and
jne
pop
jo
adc
fsubrs
shlb
jecxz
mov
imul
jo
mov
sub
je
stos
loope
add
cmpsb
sbb
sbb
cmp
mov
mov
outsb
int
mov
pop
cs
adc
mov
iret
cs
out
outsb
push
fsub
sahf
pop
data16
and
aad
xchg
insb
movb
adc
lahf
mov
add
add
les
mov
insb
out
adc
add
add
pinsrw
out
imul
push
out
and
add
fisttpll
xor
inc
dec
add
xlat
test
jle
mov
adc
or
fcoms
ja
loopne
mov
push
into
xchg
shl
pop
push
cmp
sahf
sbb
pop
movsb
inc
fcompl
pop
jmp
aad
ss
cmpsl
dec
bound
inc
daa
mov
addr16
jmp
iret
adc
jg
or
push
mov
in
push
mov
jbe
into
pop
sahf
mov
and
std
in
push
movsb
sub
jo
sbbb
pop
mov
cwtl
outsb
scas
sbb
js
je
test
add
push
adc
xchg
out
add
rcr
xchg
imul
add
into
jns
cmp
popa
scas
adcb
mov
jb
add
ljmp
loop
dec
pop
adc
scas
outsb
mov
add
inc
push
rclb
stc
inc
mov
dec
sti
pop
rol
aam
xchg
mov
decb
add
test
mov
int
test
mov
bound
arpl
and
sub
pop
and
adc
sbb
push
cmpsb
int3
inc
mov
arpl
xchg
jo
dec
movl
push
fildl
and
sub
mov
pop
mov
sub
jnp
sbb
jecxz
fs
bound
sbb
dec
fmul
outsb
sbb
push
rcrb
push
lods
xor
into
cmp
mov
or
stos
loop
loop
sub
adc
shll
stc
sub
and
outsb
dec
add
dec
cmp
pop
test
iret
lds
repnz
xor
mov
jmp
jae
cld
addr16
cmpsl
push
das
divl
mov
jg
insl
mov
jb
add
aaa
shlb
cmc
div
rcl
inc
pop
lock
xor
cwtl
add
cmc
add
add
stos
mov
sub
mov
stc
adc
adc
inc
loope
cltd
xlat
pop
sbb
pop
mov
popl
mov
fwait
outsb
adc
adc
dec
sbb
popa
inc
scas
ret
push
add
fstp
test
sub
test
push
jbe
mov
cmp
mov
lahf
ds
jno
sbb
std
arpl
lcall
icebp
cwtl
rcll
fwait
dec
pushf
push
les
jo
out
cli
lds
sbb
stc
push
frstor
inc
push
add
lock
inc
mov
push
jecxz
data16
iret
cltd
scas
dec
iret
or
daa
loop
leave
jno
cmp
ds
out
nop
adc
outsl
dec
repnz
mov
out
or
push
ds
cmp
mov
xchg
pop
mov
push
push
iret
adc
cs
enter
mov
sbb
sub
add
add
push
sahf
rcr
pop
test
loope
cltd
add
cmc
add
add
add
insl
mov
mov
stc
aad
inc
loopne
xchg
push
inc
lret
sub
ret
and
mov
pop
and
sbb
je
in
inc
adc
ds
add
mov
inc
or
cwtl
jo
stc
or
mov
lock
mov
jne
mov
xchg
sarl
out
inc
jl
jmp
jge
aas
jmp
arpl
cmc
pop
pop
push
scas
dec
icebp
dec
popa
stos
mov
dec
push
push
dec
jns
inc
in
mov
leave
out
mov
cli
lret
mov
dec
popf
mov
test
mulb
adc
nop
call
pop
jns
inc
aad
jo
mov
lods
ljmp
in
loope
dec
push
lret
jnp
pop
and
rclb
sbb
enter
faddl
mov
mov
data16
fisubrl
and
das
pop
mov
andb
add
shll
cmpsb
jcxz
jne
push
inc
ror
xlat
insl
lcall
pusha
sub
push
insb
xor
sbb
inc
xorb
int3
jmp
jae
mov
jne
add
cmp
mov
jl
movsl
rcrb
mov
sbb
daa
dec
adc
mov
lret
mov
mov
mov
not
aam
pop
shll
inc
ror
sahf
cmp
add
mov
adc
fsub
stos
popf
hlt
push
insb
cmp
fwait
xchg
repnz
adc
mov
cmp
dec
lock
cwtl
sbb
fisubl
aad
cltd
push
mov
pusha
daa
and
sbb
imul
fcompl
jae
add
mov
push
cmp
dec
nop
mov
xchg
jo
in
les
push
hlt
add
add
imul
lods
and
outsl
ljmp
insb
mov
push
cmp
sarl
xor
aad
dec
sub
icebp
sub
add
clc
jnp
jg
in
cli
cwtl
inc
mov
adc
pusha
icebp
bound
add
dec
xchg
inc
mov
and
dec
js
lret
pop
sub
cmpsl
test
cmp
insl
out
mov
adc
inc
int
addr16
aas
and
jae
or
leave
jecxz
cmp
cmp
out
pop
cwtl
push
cmc
pop
xchg
adc
mov
cmpl
gs
pusha
push
or
stc
js
frstor
dec
adc
add
push
fwait
pop
inc
rorb
and
jnp
sub
pop
ffreep
mov
daa
jo
hlt
bound
lods
orb
lods
xor
xor
ret
call
fsubp
lret
popa
push
xor
xor
mov
lret
dec
and
pop
sbb
outsb
mov
push
hlt
pop
call
mov
fwait
add
push
outsl
mov
pop
rclb
pop
jno
sbb
xchg
xchg
sbb
cmc
sbb
pop
add
add
lods
faddl
fbstp
cld
inc
push
cltd
das
inc
inc
push
push
pushf
add
cmc
add
add
cmp
pmullw
loopne
ror
stos
cmpsb
int3
insb
shlb
xchg
jmp
mov
push
mov
pop
cwtl
mov
mov
push
dec
xor
lods
cltd
bound
mov
or
jne
mov
insl
daa
sub
dec
xchg
out
adc
repnz
iret
pop
mov
lret
in
pop
cwtl
das
shl
fldenv
in
pop
mov
inc
ret
iret
jl
ljmp
icebp
imulb
mov
cli
notb
xchg
sbb
idivl
add
sub
cmp
rcll
dec
sub
add
mov
loopne
ret
lret
sbb
jae
dec
jne
shr
xchg
pop
push
xorl
leave
adc
xor
pop
adcb
add
sarl
icebp
mov
or
sbb
lret
add
jl
sar
std
jle
loop
lock
inc
dec
popf
add
cmc
add
add
enter
jl
dec
je
sbb
or
test
leave
lret
xor
sub
and
sbb
or
scas
or
add
scas
add
mov
add
mov
icebp
xor
xchg
notl
cmp
repz
jns
push
or
inc
ss
add
lods
jmp
push
add
dec
dec
add
sbb
sbb
push
sbb
push
stos
inc
or
lret
fs
sub
imul
cwtl
cmp
repz
adc
pop
adc
inc
addr16
or
test
dec
aam
fwait
jge
or
daa
mov
xchg
daa
jg
les
shl
jmp
cs
pop
dec
loop
xor
out
fs
aas
or
jmp
sub
test
or
or
sbb
sldt
add
cwtl
or
stos
xchg
cmp
pop
rcrb
add
cmc
add
add
inc
inc
clc
pop
pop
mov
or
into
leave
ret
rorb
jno
xchg
inc
jmp
xchg
or
sub
mov
xchg
or
gs
add
stc
pop
push
cmp
mov
test
cmp
cwtl
int3
mov
jecxz
decb
outsb
aad
mov
jo
pop
lahf
inc
out
mov
rorb
mov
movsb
push
add
jo
aam
into
pop
nop
std
test
push
out
dec
inc
stos
inc
mov
inc
cltd
mov
gs
pusha
add
loopne
mov
iret
in
cmp
sahf
mov
mov
scas
testl
stos
mov
es
push
jmp
shll
or
lcall
das
xor
lahf
and
icebp
sub
vpshufb
fwait
and
popa
mov
aad
aam
xor
cmp
lahf
add
cmc
add
add
fcmovbe
jno
lahf
sub
daa
sbb
pop
loope
scas
fistpl
das
popf
out
jnp
into
adc
add
adc
and
aam
lods
int3
mov
lret
cld
pop
test
and
aas
loop
lea
mov
std
clc
cmp
mov
add
outsb
pop
in
scas
repnz
cmp
popf
adc
repz
xor
repz
mov
push
fbstp
jno
daa
gs
xchg
repnz
rorb
sbb
mov
pushf
test
repnz
jo
clc
adc
dec
cmp
pop
push
lods
xor
scas
cld
pop
es
jl
push
aad
pop
jb
lahf
fiadds
jl
loope
cmc
insb
sbb
out
add
adc
dec
sbb
pause
pusha
jmp
aad
out
imul
mov
push
mov
xchg
mov
add
add
dec
std
out
xlat
aas
jle
ds
sub
add
insb
xchg
filds
cli
loopne
imul
jns
ffree
mov
pop
pop
pop
mov
clc
mov
adc
adc
ror
inc
stc
test
imul
das
fdecstp
pop
shl
inc
jb
mov
adc
lods
mov
inc
mov
cmpsl
add
adc
mov
sbb
movsl
cmp
popf
cmp
jb
inc
xorb
enter
lds
rclb
stc
je
xchg
push
daa
mov
imul
dec
ds
aaa
repnz
xlat
test
xor
test
inc
repz
mov
or
pop
add
mov
pop
adc
in
add
cltd
ja,pt
arpl
lret
sbb
cli
mov
ror
loope
adc
cmpsl
push
xor
sub
cmp
mov
jb
imul
add
imul
outsl
popl
push
imul
mov
add
push
stos
push
adc
outsb
imul
xchg
bound
into
repnz
pop
pushf
data16
mov
cmpsl
arpl
adc
jmp
dec
add
xor
dec
mov
cmc
mov
lds
test
fstl
sbb
push
aam
clc
popf
and
scas
xchg
mov
stos
aad
loope
aam
test
mov
rol
movsl
testb
mov
sbb
mov
mov
mov
test
mov
or
in
aam
das
test
ret
ja
ret
xchg
push
lock
aaa
cmp
push
jno
mov
jge
sub
bound
jg
movsb
pop
fldl
popf
sbb
or
es
stc
in
and
sub
into
cmpsb
pop
popf
ror
or
test
cmpsl
test
add
mov
leave
mov
testl
add
adc
sbbl
mov
inc
dec
fists
add
add
imul
loope
js
inc
sub
mul
adc
and
pop
sbb
mov
jbe
adc
xchg
enter
cmc
mov
sub
ss
pop
pushf
addl
inc
pop
pusha
mov
add
test
aaa
mov
xchg
sub
xor
fldt
es
ret
mov
mov
out
lea
adc
out
pushf
and
fidivrl
sub
jecxz
insl
ror
ret
push
or
testb
outsb
push
or
xchg
lods
mov
push
cmpl
mov
or
rcrl
jns
fildl
jmp
jnp
dec
dec
stos
xor
add
pop
test
adc
jl
jnp
push
fidivrl
test
out
int3
jle
sar
bound
jnp
in
test
ljmp
aad
lock
mov
imul
and
or
add
cmpsb
or
add
pop
and
out
fbld
xchg
je
enter
fmull
xchg
mov
jle
mov
mov
dec
mov
sbb
outsb
subl
push
cs
js
pop
cmpps
cmp
popa
jno
jg
dec
cmpsl
shlb
xchg
cmpsb
fsubrs
imul
das
lret
lahf
dec
add
gs
lret
jo
sbb
dec
leave
lret
mov
xchg
popa
sbbl
addl
xchg
sti
add
mov
pop
or
lods
jns
fprem1
cmp
jb
sar
dec
insl
mov
push
mov
push
lock
mov
int
xor
pop
and
dec
bound
jmp
or
paddw
lds
sbb
fiadds
sbb
push
insl
movsb
pop
movsl
mov
or
inc
rorl
out
add
mov
jge
jg
decl
xchg
mov
mov
add
add
xchg
mov
jecxz
xor
jbe
jbe
int
sbb
sub
mov
popa
xor
xchg
mov
sbb
push
mov
xor
push
cld
xor
stos
inc
mov
out
testb
or
in
push
or
cmp
rcrl
mov
stos
jae
push
jno
jb
xchg
out
jle
xchg
jo
pop
and
js
xchg
dec
sbb
mov
or
xchg
js
xor
dec
in
lock
dec
xor
xor
lcall
je
stc
sub
std
stos
lock
push
cmc
xchg
add
mov
xchg
in
sti
xchg
jecxz
fisttpll
mov
pushf
loop
mov
dec
add
mov
jecxz
fidivs
push
out
push
lea
push
mov
push
imul
add
add
ja
out
das
mov
aam
adc
cmc
add
add
loop
shlb
pushf
and
xor
pop
sbb
in
aad
mov
pop
inc
test
aad
ficoml
in
sub
pop
fsubs
xchg
cmp
push
mov
pop
cmp
das
jne
inc
daa
push
ret
cli
into
fcoml
sub
push
mov
test
or
xor
sub
mov
mov
push
mov
fimull
jno
ret
cmp
out
imul
sbb
fwait
pusha
adc
iret
loopne
adc
in
xchg
mov
push
push
pop
sarl
add
xor
jae
addr16
imul
push
rorb
jg
pop
cwtl
icebp
jno
mov
push
and
mov
insl
fstps
jb
lods
inc
shrb
jmp
cmp
sub
add
add
pusha
test
mov
dec
cmp
cmc
add
add
adc
idivl
sub
aaa
xchg
pop
sbb
arpl
ret
movsl
clc
aaa
call
cwtl
jnp
push
jns
push
aaa
sbb
loopne
jnp
mov
jno
imulb
stos
pushf
fdiv
insl
std
icebp
pop
pop
lea
cmpsl
xchg
sub
outsb
jp
mov
clc
loope
arpl
movsb
adc
jge
cs
or
lods
sub
and
bound
jp
push
sbb
stos
mov
dec
push
cwtl
scas
sub
sub
cld
icebp
in
in
scas
cmc
fisubrl
hlt
adc
xchg
jnp
mov
adc
sbb
stos
hlt
in
aam
jb
lods
cwtl
insl
scas
mov
popa
ret
jl
insb
movsl
inc
dec
cmpsl
fisttpl
pop
mov
push
int3
cmc
adc
cmp
mov
insl
mov
and
add
add
mov
repz
repz
jbe
pop
fisubs
add
or
pop
push
cwtl
mov
dec
int3
int3
lcall
add
cld
and
or
and
push
dec
and
std
imul
jnp
shr
xor
inc
dec
mov
xchg
xchg
add
add
sub
cltd
mov
cmpsl
pop
inc
aad
ja
repnz
dec
sar
push
loop
sub
or
add
mulb
cmpsl
mov
jno
rorb
sbb
xor
jmp
fisttpll
mov
sbbl
push
xor
in
xor
movsb
inc
sbb
push
xor
mov
movsl
mov
add
or
jo
sbb
inc
ljmp
mov
lods
push
xor
sub
pushl
push
push
fs
ret
scas
lahf
rcrl
xor
popf
fadds
cltd
and
jecxz
pop
mov
fiaddl
add
mov
mov
cmp
add
mov
add
add
add
mov
xor
aaa
lds
mov
mov
sub
push
mov
cmpsl
jg
push
mov
imul
data16
loop
lea
int3
pop
pop
stc
xchg
push
fnstsw
ret
insb
pop
sub
inc
decb
adc
pop
mov
jb
sub
popa
adc
mov
inc
inc
sub
loope
clc
pop
in
mov
mov
mov
lcall
adc
push
scas
jne
xor
test
int
add
jb
aaa
mov
xchg
insl
scas
fbld
ljmp
pop
add
sahf
lret
lahf
fsubl
inc
js
pusha
hlt
xor
les
faddl
add
cmpl
sbb
push
jnp
out
xor
gs
or
jl
add
or
sbb
mov
xchg
mov
ljmp
add
lret
loop
sub
cmp
mov
jbe
fists
out
lret
dec
insb
sbb
neg
fnstcw
dec
xor
push
mov
out
cmpsb
cmp
fiadds
or
xchg
push
xor
or
lods
pop
lret
pop
lahf
ja
lock
int3
out
or
into
jg
mov
out
cld
iret
mov
push
xchg
jne
inc
or
icebp
xor
dec
scas
xor
cs
cwtl
popa
lret
fisubl
data16
push
loop,pt
es
int3
xchg
adc
es
xchg
mov
mov
push
bound
mov
data16
lods
lock
sarb
out
int3
dec
dec
xchg
push
push
pop
addl
aas
xchg
pop
xchg
aam
and
xlat
xor
pop
sbbl
test
mull
imul
ljmp
pop
movsl
inc
add
mov
add
push
inc
fdivl
stos
push
imul
add
dec
pop
mov
cmp
or
pushf
jno
xchg
mov
adc
push
subl
cwtl
xchg
push
imul
inc
push
je
push
jl
inc
lss
and
xchg
push
xchg
scas
icebp
fnstcw
or
lods
cmp
cmp
in
ds
and
cmp
pop
out
test
mov
inc
loop
pop
push
aam
jg
stc
jp
dec
mov
sbb
sbb
popf
xchg
sbb
jne
dec
push
inc
out
cwtl
mov
test
inc
inc
add
or
les
inc
jl
subb
jbe
or
xchg
test
imull
dec
pop
insl
ret
ljmp
or
imul
out
into
pushf
jne
add
in
or
in
add
in
jnp
ljmp
pop
add
add
sbb
mov
pusha
inc
pop
mov
mov
add
cmc
add
add
in
aam
pop
mov
inc
mov
fldcw
mov
out
mov
and
xchg
outsl
sbb
and
cmp
out
lock
out
mov
dec
push
movsl
mov
dec
adcb
stos
ds
adcl
rcpps
mov
xchg
test
je
enter
or
adc
pop
je
arpl
fwait
xchg
inc
mov
push
movsb
pop
addr16
inc
stc
push
repz
iret
mov
pop
adc
sub
mov
jno
dec
clc
inc
pusha
std
insb
xchg
mov
loop
les
dec
ss
jmp
lret
popa
lret
mov
pop
cld
les
pop
mov
lea
jg
push
icebp
loop
mov
cmp
sub
xchg
mov
push
sub
cld
or
jb
add
add
stos
hlt
jmp
ljmp
test
add
cmc
add
add
add
adc
test
nop
imull
dec
scas
or
icebp
pushf
out
or
fisttpll
pop
pop
lahf
icebp
jl
icebp
sub
lahf
and
push
iret
std
xchg
gs
or
imul
sbb
int
jns
mov
push
cld
adc
aaa
test
sub
pop
mov
imul
xorl
jl
inc
shll
xchg
xchg
insb
test
bound
mov
push
dec
jbe
push
jmp
bound
cwtl
lods
or
mov
aas
jp
mov
lods
pop
xor
mov
ss
pop
std
gs
loop,pn
mov
movsl
je
stos
push
out
mov
fdivrs
inc
xchg
test
inc
sti
push
inc
test
add
out
xlat
out
jg
dec
cmp
shll
in
lods
add
cmc
add
add
adcl
in
int
dec
xor
mov
xor
push
ljmp
push
jne
sbb
cmp
test
mov
jne
cmp
lret
sbb
add
jle
movsb
js
rclb
test
inc
sarl
insb
jecxz
inc
mov
xchg
aaa
mov
sub
push
rcrl
out
dec
push
ss
sbb
mov
cmpsb
lods
hlt
push
fs
adc
xor
js
pop
es
fisttpl
mov
xchg
stos
cmp
iret
jb
loopne
divb
aam
insl
inc
xor
or
arpl
fimull
xor
rcr
test
call
jb
syscall
cld
cld
repnz
or
jp
cmpsl
subl
mov
sbb
pop
fbstp
mov
push
add
add
add
or
inc
xor
clc
rorb
mov
inc
fnstcw
cmp
push
insb
pop
lret
adc
adc
rolb
outsl
ss
int3
dec
repz
push
fwait
jmp
and
push
xchg
xor
ficoms
inc
add
push
ja
mov
mov
push
push
cli
movsb
div
lcall
aas
test
inc
inc
push
jecxz
fadds
repnz
pushf
sbb
adc
daa
movsw
mov
roll
jns
pcmpgtw
loopne
mov
lods
jl
inc
mov
sbb
in
jle
inc
jnp
jbe
add
jp
and
mov
push
cmp
add
addl
sub
add
sarl
mov
pop
xor
leave
andl
push
jmp
pop
stc
mov
add
lcall
std
clc
jns
ljmp
add
cmc
add
add
mov
mov
cwtl
shll
xchg
jae
mov
pop
movsl
bound
adc
inc
or
nop
js
stos
or
adc
int
xchg
cmp
pop
shll
loope
fnstcw
in
mov
gs
rcll
loopne
outsb
xchg
gs
rclb
xlat
pop
add
lods
stos
popl
and
test
push
dec
jg
xchg
ret
or
movsb
cmpsb
dec
ret
lods
test
bound
lock
scas
mov
or
or
es
nop
pop
jo
test
cmpsl
loopne
loope
fdivrs
notl
outsl
test
xchg
or
inc
out
jne
or
dec
sub
sub
sub
push
rol
push
jo
cltd
and
xor
loop
dec
and
pop
int3
imul
add
lret
jnp
sti
jmp
xchg
sub
mov
jnp
add
cmc
add
add
call
out
lds
lods
mov
test
sbb
adc
or
gs
add
push
or
pop
cmp
not
andl
xchg
and
add
mov
mov
cltd
cmp
xchg
jecxz
outsl
add
cmp
push
xor
xor
mov
pop
push
dec
push
push
shll
jg
jns
push
sbb
pop
xor
push
jne
daa
or
std
pop
sbb
mov
es
sub
xor
xchg
loopne
dec
xchg
push
ret
sub
prefetcht0
add
xor
adc
or
mov
test
jge
int
sub
sahf
loopne
aam
adc
mov
mov
leave
mov
out
add
rcl
scas
test
jl
repnz
add
add
jecxz
lock
scas
sbb
cmc
add
add
adcb
cld
mov
movsb
into
bound
leave
movsb
cmp
xor
push
mov
sti
adc
or
sbb
out
adcb
lret
fnsave
ljmp
out
pusha
out
xor
ljmp
jno
cs
pop
cli
sub
dec
lcall
rol
add
pop
mov
sbb
push
xchg
pop
xchg
dec
std
sbb
fisttps
popa
loop
jg
sub
scas
push
push
and
jle
push
fildll
mov
aad
imul
fs
and
les
shrb
cmpsl
out
push
adc
cs
hlt
push
cmp
inc
out
add
fisubrs
sbb
syscall
sub
xor
es
aas
dec
nop
jbe
cmpsb
rorb
mov
or
cmp
pop
popf
movsl
add
add
cld
mov
test
gs
add
add
add
and
push
push
dec
es
push
adcl
push
adc
pop
mov
and
js
xchg
push
adc
mov
mov
addb
jae
xor
test
cmp
jle
lret
and
dec
jle
cmp
push
dec
repnz
pop
or
push
jp
pop
insb
push
or
inc
aad
in
mov
and
mov
loop
adc
loopne
dec
sahf
cmc
adc
mov
jmp
dec
imul
enter
mov
rol
insl
sub
mov
out
xor
pop
ds
imul
pop
push
cli
xchg
mov
sbb
pop
adc
dec
cmp
cwtl
and
aaa
lods
dec
decl
mov
mov
cmp
cmp
inc
pusha
cmpsb
jecxz
xchg
push
or
add
mov
dec
das
pop
out
cmc
mov
imul
add
cmc
add
add
or
push
sub
fstpt
jmp
add
repz
andb
jp
sub
ret
jge
imul
adc
add
and
inc
cmp
cmpsb
jle
out
inc
push
pop
notl
mov
sbb
cmp
jns
cmp
out
mov
mov
jbe
fcomi
jl
daa
lret
insl
sbb
test
mov
scas
enter
add
lea
call
mov
fisubrs
out
cmpl
pop
icebp
mov
and
mov
jle
or
sbb
ljmp
popf
pushf
xchg
outsb
sbb
enter
xchg
inc
leave
inc
adc
sbb
inc
pop
clc
xchg
push
repz
hlt
jecxz
dec
pushf
gs
mov
inc
insb
lcall
shlb
push
test
adc
add
add
out
std
dec
std
pop
mov
cmp
mov
mov
add
add
add
add
insb
std
stos
pop
mov
es
and
cwtl
add
dec
adc
dec
jb
fadds
call
pushf
out
push
pop
xchg
sbb
dec
xor
fxch
dec
rolb
pop
sub
int
xor
jae
dec
lret
sbb
stc
loop
sarb
push
adc
mov
mov
ljmp
cmc
xor
adc
dec
aaa
sbb
loope
xor
dec
icebp
adc
mov
hlt
or
mov
xchg
loop
out
inc
xor
fidivrs
push
dec
scas
and
fisubrs
dec
and
hlt
pop
dec
lds
aaa
test
jbe
ss
cmc
mov
pop
out
aam
je
inc
clc
and
notl
jmp
jb
or
scas
xchg
clc
dec
inc
pop
sbb
sub
shll
stos
push
rcl
popf
pop
aam
xchg
add
add
fidivs
loop
ljmp
stos
inc
jmp
add
add
add
das
adc
fdivrl
add
fs
xchg
loope
mov
xorb
bound
data16
jno
cltd
sbb
xor
in
pop
or
dec
aas
jne
add
inc
adc
or
pop
jmp
insb
xorb
aad
lret
xchg
scas
adc
inc
loope
adc
inc
mov
sbb
jmp
fstps
xlat
inc
stos
leave
xchg
jmp
ret
js
push
push
dec
aas
mov
mov
xor
cmc
clc
sub
mov
mov
add
mov
loope
test
push
mov
sbb
loopne
sti
sbb
mov
adc
mov
mov
aaa
mov
mov
xor
call
mov
ja
inc
mov
cli
js
shrd
pop
into
lret
sbb
push
ds
push
ret
iret
pop
scas
xchg
add
push
xchg
jg
jmp
std
jge
in
xchg
pop
fstl
nop
cmp
add
test
or
pop
inc
jmp
lea
out
lods
in
jecxz
lahf
add
mov
jnp
insl
sub
push
push
xor
pop
fwait
inc
lods
ficoml
lds
out
cmpsb
or
ret
xor
lock
xchg
and
pop
mov
rcrl
iret
pop
cwtl
mov
adc
subl
es
outsl
cmpsl
sti
pop
and
mov
shrb
xchg
mov
imul
mov
ret
jb
scas
sbb
jne
sbb
cmp
popa
repnz
mov
aad
mov
rcr
xlat
insb
test
scas
push
push
adc
mov
sbb
inc
dec
scas
push
inc
sub
ja
mov
mov
push
lahf
mov
sbb
inc
out
cmc
sub
in
xchg
push
fs
pop
jmp
lret
sub
mov
add
add
xor
std
cmp
fldcw
cmc
add
add
sub
dec
mov
flds
aad
scas
addb
or
push
pusha
fs
and
pop
inc
pop
inc
out
fldl
call
enter
adcb
jge
cmc
and
xchg
pop
lahf
dec
test
pop
shl
or
dec
mov
sub
enter
out
mov
stc
xchg
inc
mov
scas
jg
cmpsb
in
enter
mov
add
dec
hlt
imul
lods
mov
or
xor
pop
and
push
dec
cmp
sbb
jg
push
cltd
push
xchg
dec
cmpb
dec
cmc
pop
mov
cmp
xchg
enter
repz
mov
push
push
in
xor
cmp
and
into
pop
jp
jge
sahf
push
jl
jns
les
hlt
jl
mov
loop
fwait
jg
add
add
xor
cmp
ficoml
push
popa
and
add
dec
inc
xlat
aad
and
add
and
push
daa
dec
cs
je
dec
adc
out
push
sub
sbb
rol
hlt
fidivs
sub
ja
ds
in
inc
aad
and
push
ficoml
arpl
sub
xchg
and
mov
inc
std
std
push
mov
push
ret
inc
fisttpl
addr16
push
stos
je
dec
rorl
dec
and
mov
and
mov
sbb
pusha
push
mov
outsl
ja
pop
mov
fnsave
aad
movsl
cmp
in
mov
or
sti
or
push
add
mov
xchg
in
aaa
add
sbb
sti
fsubs
mov
jmp
nop
and
dec
mov
js
push
into
or
add
add
jp
les
mov
push
push
adc
add
and
cmc
add
add
insb
mov
loopne
sbb
mov
dec
icebp
subl
movsl
push
dec
hlt
lahf
inc
mov
xor
and
aam
leave
frstor
into
cs
adcb
xchg
shrl
in
ljmp
jp
pushf
dec
das
sub
cmp
clc
and
fidivl
mov
mov
push
mov
jle
sub
leave
cmp
les
xor
insb
js
repnz
sarl
in
aas
jb
and
cld
mov
lds
fsts
jecxz
mov
in
fcmovnb
xor
inc
shlb
cmp
pop
push
xchg
jo
lret
pop
xor
mov
sbb
stc
out
xor
nop
cmp
mov
jge
ss
dec
popa
outsl
pop
sub
push
mov
outsl
jge
roll
mov
sbb
jnp
xor
adc
jo
je
add
add
clc
pop
stc
out
push
insb
xchg
cld
sub
out
xor
add
add
add
call
add
adc
mov
pop
add
and
dec
ret
cltd
dec
es
int3
les
es
lcall
mov
leave
fnstsw
cs
leave
adcb
xor
mov
or
sub
or
mov
and
or
pop
mov
push
daa
icebp
pushf
or
dec
jecxz
lret
inc
xor
push
pop
xchg
sbb
fdivrl
cwtl
push
xchg
jb
cwtl
and
mov
into
scas
xlat
mov
test
mov
int3
fs
clc
jae
jno
xchg
mov
lock
cmpsb
jp
lret
lods
fisttpll
push
jbe
aaa
push
adc
inc
ja
stos
dec
sar
jl
pushf
adcb
and
push
push
jbe
int3
inc
lock
mov
pop
sahf
das
repz
rclb
mov
fmulp
xor
pop
inc
add
add
add
push
mov
lcall
ret
repz
add
add
in
jne
add
or
insl
stos
es
push
mov
pushf
je
bound
cmpsb
dec
xchg
xlat
pushf
cmpsb
daa
loope
icebp
xlat
daa
add
sar
push
out
aas
les
sbb
test
lea
outsl
pop
pop
xor
into
pop
cwtl
aaa
adc
mov
dec
in
fwait
xchg
mov
loop
enter
idivl
dec
pusha
sub
pusha
jb
aaa
jmp
push
pop
fstps
mov
rclb
sbb
jle
mov
aad
bound
push
jb
test
mov
jl
fwait
int3
mov
sub
push
andb
cltd
notb
test
mov
inc
mov
xchg
imul
test
jne
es
bound
xor
sub
sbb
cmc
mov
mov
testl
mov
scas
xor
cmovl
add
ret
fwait
xor
add
add
jne
mov
xlat
insb
scas
shlb
test
cmc
add
add
insb
and
jmp
fimuls
orb
push
aam
lods
adc
test
fisttps
jnp
pop
cmp
jle
xchg
sbb
lahf
or
add
jno
dec
ds
xchg
cmp
push
jp
add
mov
daa
test
ds
popa
outsb
ret
add
lds
sbb
loopne
xchg
inc
mov
lods
and
inc
push
mov
mov
shrl
or
mov
sbb
cmp
sbb
mov
push
or
icebp
xchg
jns
lds
pop
xchg
cld
aaa
jo
lahf
loope
pop
mov
sarl
push
xchg
movsl
xchg
iret
lods
xorl
and
outsb
sbbl
lcall
pop
mov
mov
out
dec
mov
cmp
jnp
inc
repz
or
lods
loopne
lds
fisttps
or
add
add
pop
sbbl
fstpl
or
in
mov
add
sub
mov
and
and
inc
cmovnp
mov
outsb
out
test
or
jecxz
insb
sub
adc
std
andl
sbb
pop
cmc
lret
fdiv
dec
std
jg
xchg
push
xor
mov
mov
fs
or
hlt
test
mov
ret
and
out
pop
adc
xor
shrb
insl
ret
test
lcall
mov
fs
xchg
test
xorl
fwait
movsl
scas
push
pop
jp
clc
lret
lods
pop
mov
pop
jl
lea
mov
dec
push
test
lds
pop
or
outsb
or
adc
xchg
mov
test
repnz
dec
sub
jb
incl
jmp
push
pop
jge
mov
fldt
arpl
pusha
push
in
cmp
jg
mov
fnstsw
outsb
stos
dec
add
add
in
mov
jecxz
out
sub
pushf
sub
mov
add
ds
cld
ret
pop
pop
jnp
lcall
sub
cmp
shr
or
mov
pop
xchg
stos
in
sahf
popf
dec
out
cmp
imul
jp
repz
xchg
btr
std
and
xor
imul
xchg
outsb
xchg
push
ja
cmpb
pop
pop
add
cmpsl
jmp
push
dec
sub
test
and
adc
add
push
popa
iret
loopne
scas
jl
mov
inc
push
mov
add
mov
out
stos
enter
dec
cmp
movsl
and
add
rolb
cld
sub
xor
ja
fldenv
mov
xchg
inc
xor
jae
mov
push
xchg
mov
int
mov
mov
mov
decl
or
sub
cmp
addr16
push
add
fldl
add
push
xchg
test
jg
jbe
movsb
pop
dec
stos
push
mov
add
mov
mov
out
xchg
pusha
sbb
in
mov
lods
or
jp
and
insb
outsl
fs
dec
stos
xchg
xchg
lock
cmpsb
lods
es
insb
jbe
cs
or
nop
iret
sub
sbb
sub
ljmp
add
sbb
inc
pop
xchg
in
cld
cwtl
adc
js
imul
mov
sub
dec
jmp
sub
sbb
imul
ret
and
jo
aad
xchg
mov
mulb
dec
and
dec
sbb
ror
testb
mov
out
pop
adc
fists
mov
aas
es
dec
push
inc
mov
inc
sbb
int
leave
pop
fstps
cmp
stc
les
dec
inc
pop
loope
adc
out
in
adc
mov
xchg
stos
push
into
in
cli
or
pop
mov
shrb
add
add
adc
in
lcall
xor
add
lret
mov
add
mov
aad
dec
loope
lods
outsl
adc
mov
sub
mov
mov
movsb
rep
enter
ss
in
shrb
out
int
jg
jnp
std
or
in
scas
dec
cmp
pop
xchg
xor
sbb
aam
jbe
ror
xor
sub
pop
int
shll
hlt
test
out
jl
cld
pusha
cmp
rcrb
hlt
pusha
mov
cltd
mov
cmpsl
and
xor
les
fwait
stc
inc
xor
in
fldl
lcall
add
sbbl
scas
lods
mov
sbb
or
pop
aad
in
sbb
mov
pcmpgtw
out
test
std
and
add
sub
out
repnz
popa
decl
xor
ljmp
fistpl
mov
aas
xor
add
add
sub
jg,pt
stos
dec
push
jo
xchg
mov
mov
add
push
outsl
inc
mov
pusha
sub
fs
or
fs
or
inc
icebp
xor
ret
clc
jb
add
mov
pop
dec
ud0
pop
and
das
mov
fidivs
jg
cmpsl
mov
movsb
mov
notl
mov
loopne
add
mov
mov
jbe
cs
into
imul
lock
add
lcall
sbb
fistps
mov
ss
or
cmp
hlt
dec
add
inc
les
rcrb
mov
repnz
ljmp
lds
add
test
test
mov
out
mov
push
or
dec
rorb
add
mov
jno
mov
fisubrs
xchg
inc
adc
jl
xor
pop
jae
cld
scas
jle
pop
roll
add
out
idiv
outsl
mov
cld
dec
mov
add
add
add
jg
xchg
mov
and
rol
push
leave
dec
add
adc
dec
dec
or
sub
fnsave
test
repz
xlat
xor
cltd
and
push
add
in
lret
xchg
and
fcoml
addr16
lret
pop
dec
mov
jecxz
call
dec
sub
test
push
cmp
jne
orb
mov
dec
arpl
xor
add
lock
dec
lcall
pop
movsb
in
sub
add
xlat
add
cmp
test
xchg
mov
sub
in
ret
roll
das
push
sbb
les
or
mov
dec
xchg
sbb
mov
int3
into
xchg
lret
clc
into
imul
cli
adc
orl
cld
lcall
rclb
mov
dec
int3
jmp
mov
into
dec
push
mov
add
inc
fbld
mov
cltd
repz
roll
cmc
add
add
jge
and
push
pop
std
xchg
adc
in
inc
jb
pop
jg
ja
out
xor
sub
and
jbe
jno,pt
sbb
pop
sbb
cld
xor
push
and
add
outsl
adc
mov
inc
daa
hlt
mov
aaa
sub
jge
sahf
push
lret
and
out
hlt
and
inc
mov
fisubrs
lea
loop
xorb
scas
outsb
ja
inc
ficomps
test
pop
adc
shl
lods
fsubr
pop
push
mov
pop
aam
cmp
cmp
aad
repz
add
sub
stos
gs
mov
repnz
and
sub
mov
xchg
les
push
and
outsb
nop
dec
out
add
test
adc
inc
push
and
scas
add
inc
insl
mov
bound
int
add
push
push
call
adc
aad
lahf
ret
cmc
add
add
mov
push
and
mov
ds
movntps
addr16
loop
jp
subl
inc
movhps
mov
pop
mov
fistl
sbb
pop
repnz
add
roll
dec
jb
daa
adc
cli
fidivrs
adc
xchg
ja
sti
mov
fbld
icebp
adc
faddl
mov
cmpsb
sbbl
or
xor
jl
jmp
add
dec
sub
mov
int
mov
cmpl
xor
sub
jl
or
pusha
fs
in
loop,pt
push
cmp
sub
xor
xor
push
cmp
jnp
and
or
andl
fwait
mov
cs
in
push
loop
adc
inc
scas
adc
into
std
sti
leave
sti
iret
ljmp
fsubl
hlt
adc
ret
add
cmc
add
add
popf
jp
mov
cmpl
jb
jp
std
daa
mov
in
adc
dec
fsubl
scas
in
es
test
jp
adc
and
xor
sub
push
pop
movb
mov
imull
and
aaa
addb
add
outsl
rorl
sbb
mov
scas
out
mov
scas
mov
or
jle
imul
dec
dec
jmp
and
loopne
inc
mov
mov
dec
add
stos
xchg
lds
add
adc
cmc
addr16
cmp
push
mov
icebp
mov
mov
shr
popf
and
aaa
pop
xchg
sbb
cmp
lret
je
sub
mov
test
jecxz
clc
lret
fsubrp
inc
adc
scas
add
xchg
add
dec
jno
adc
push
shll
icebp
pushf
cmp
jns
xlat
stos
std
add
add
mov
es
lds
add
cmc
add
add
xor
sbb
das
mov
addr16
mov
cwtl
aas
add
push
mov
mov
or
pand
dec
mov
jecxz
jle
mov
out
dec
and
add
ja
cmp
adc
aad
or
jl
push
mov
and
mov
enter
xor
imul
inc
push
loop
sti
dec
mov
lock
sub
cmpsb
movb
mov
add
shrb
cmpsb
arpl
test
aad
lahf
ss
adc
rorl
cmp
pop
push
sub
jo
inc
mov
adc
xorl
xchg
imul
hlt
loopw
add
xor
lock
in
lods
dec
stc
xor
jg
mov
ficoms
xchg
fstl
xor
add
add
jg
mov
sub
movhps
add
cmc
add
add
adcb
inc
test
mov
adc
pop
cmpsl
fs
and
mov
adc
mov
xchg
lret
xchg
inc
scas
cltd
ja
mov
mov
lret
mov
sub
clc
stos
xchg
int3
lret
cmp
mov
jns
call
arpl
or
adc
push
enter
ficoms
xchg
add
mov
cmp
pop
shrb
xchg
call
cmp
aas
adc
das
jle
lods
daa
mov
enter
fs
dec
daa
mov
push
lret
gs
xchg
cmpsb
imul
push
outsl
push
ret
fistps
pop
push
lods
jnp
pop
addb
add
gs
stos
cltd
sahf
in
mov
xchg
pop
rcl
daa
add
lcall
jg,pn
inc
pop
iret
push
sbb
rcr
aad
sahf
aas
pop
fldl
add
xor
push
cld
pushl
out
adc
sarl
add
add
add
cmp
push
or
cmpsl
js
cwtl
mov
sbb
pushf
sbb
xlat
and
mov
stc
pop
sub
cltd
push
add
mov
out
pushf
or
sahf
inc
mov
icebp
and
push
sbb
inc
idivl
lretw
push
xchg
or
mov
jno
pop
lahf
adc
sub
push
adc
xchg
push
shlb
jl
lds
sbb
fdivrp
xor
pop
mov
nop
rcll
int
push
cmpsl
cmp
fcom
pushf
mov
jg
out
or
lahf
cmp
adc
aas
sub
out
lock
adc
jle
and
or
ss
mov
inc
mov
and
or
xchg
sbb
push
movsb
cwtl
mov
xor
pop
scas
mov
mov
jge
mov
or
adc
dec
push
or
add
add
pushf
shrb
jb
ret
xlat
popf
push
add
add
and
jo
inc
icebp
cwtl
aad
mov
imul
mov
ret
fsubl
std
mov
push
pop
mov
scas
lcall
pop
sub
push
sahf
push
pop
dec
mov
xchg
fs
adc
mov
orb
out
std
imul
fwait
jae
lahf
or
mov
cmp
push
adc
sar
nop
mov
in
inc
bound
push
xchg
ja
ret
roll
imul
add
mov
xorl
aaa
leave
bndstx
cmp
xchg
ljmp
adc
idivb
in
in
mov
aam
ja,pt
push
adc
std
adc
jl
cmp
rorl
mov
iret
jl
jg
cmp
loop
add
add
test
mov
xchg
push
outsl
rcrl
adc
add
cmc
add
add
out
fstpl
rcrb
sbbb
pusha
test
or
inc
mov
cld
les
xchg
dec
leave
sbb
sub
and
mov
aam
add
cltd
jg
xor
fimuls
push
aas
dec
loopne
fisttpll
add
in
cld
xor
sub
lcall
call
bound
xchg
xor
frstor
mov
cmpsb
mov
loop
or
xor
ljmp
pop
aam
lods
fdiv
mov
jle
push
sub
mov
add
jo
mov
out
enter
push
bound
sbb
into
lret
add
cmp
iret
xor
sub
loopne
sarl
pop
adc
out
xor
fmull
add
mov
ret
lcall
mov
aad
sahf
push
add
add
jne
jne
jg
out
and
rcrb
add
add
add
fucomip
jg
fwait
insl
cld
inc
jecxz
inc
clc
cmp
popl
cmp
ja
adc
and
sbb
xor
pushf
ret
mov
adc
mov
daa
fdivrs
clc
lahf
mov
sbb
mov
leave
jnp
add
jmp
mov
ret
lret
stos
stc
popa
fldt
test
movsb
andl
lret
mov
aaa
mov
xor
iret
sub
shrb
sub
imul
frstor
cmpsb
jno
arpl
stos
xchg
jge
mov
out
or
stc
mov
cmp
mov
scas
mov
jmp
mov
test
aam
lds
outsl
xchg
jno
and
mov
sub
sbb
adc
dec
jbe,pt
popa
out
out
mov
fidivrs
push
repnz
cmpsl
gs
push
rolb
add
sbb
mov
cmpsb
fstpl
je
cs
inc
lret
cmc
add
add
imul
std
mov
fistl
cld
movb
inc
sti
orl
pop
sbb
into
lcall
stos
add
jne
repz
adc
ficompl
mov
xlat
xchg
xchg
sub
les
xchg
xor
cmp
popf
into
push
ret
xchg
in
dec
pop
pop
popa
pop
dec
cmpsb
dec
fnstenv
rcrb
test
adc
jne
cmc
inc
cmp
scas
cmp
cs
fidivl
mov
test
fstpt
xlat
cltd
xchg
fisubs
or
and
pop
jmp
mov
xor
sub
loop
enter
jne
addb
mov
icebp
pop
outsb
push
gs
jmp
pop
add
cs
or
jg
adc
pop
add
adc
out
jecxz
fisubrs
lds
add
and
outsb
jle
lods
not
mov
add
lds
cmc
add
add
aam
enter
push
pop
dec
or
xchg
jbe
mov
pop
movsb
into
scas
add
outsl
and
xchg
repnz
lahf
mov
in
xor
xor
xlat
lods
mov
mov
xor
and
movsb
notl
or
jae
jle
cmp
sbb
lods
arpl
jge
mov
sub
orb
jl
pop
movsb
cli
inc
mov
push
or
pop
jb
fcmovnb
xor
mov
scas
sbbb
push
inc
pop
or
repz
jmp
outsb
idivb
cmpsl
jne
scas
adc
and
or
mov
fcom
sub
sbb
add
ficoml
mov
pop
lret
leave
adc
fidivrs
pop
outsb
in
mov
cmpsb
cmc
jb
sbb
and
shl
add
jbe
add
js
push
rol
orl
mov
mov
push
xor
xchg
xor
add
cmc
add
add
rolb
fs
and
clc
movsl
adc
dec
push
or
fwait
iret
lods
movsl
ret
xor
push
mov
insl
lods
ficoml
mov
and
ja
pop
roll
jp
cmp
add
addl
mov
sub
test
cmc
in
pop
popf
cs
test
sahf
orl
inc
imul
jbe
cwtl
int
fiadds
sbb
or
push
xchg
pop
mov
pop
pop
in
movsb
mov
sub
pop
mov
cmpsl
nop
push
lods
nop
clc
push
mov
out
xor
adc
lret
push
add
inc
lods
add
test
xor
pop
and
or
sub
or
xor
mov
lods
leave
or
cmp
ljmp
test
orl
shrb
aaa
push
mov
test
sbb
xlat
ss
inc
movsb
test
xor
es
add
add
add
das
mov
data16
in
out
push
push
mov
inc
mov
mov
rcrl
pop
ret
lcall
daa
hlt
and
jmp
stos
clc
push
pop
add
popl
enter
bound
adc
mov
or
jle
test
pusha
mov
pushf
xorb
faddl
inc
jmp
loope
xorl
fwait
jl
pop
sub
cli
mov
xor
mov
mov
xchg
sbb
mov
jb
js
test
inc
fwait
bound
push
dec
xor
ljmp
cmpsl
int
push
pop
mov
push
leave
outsl
rorl
pop
pusha
push
call
lods
jnp
std
or
gs
into
push
ljmp
sahf
jb
fdivrp
xchg
in
das
js
mov
mov
inc
add
pop
add
add
push
sub
cmp
jg
cmp
cwtl
test
into
add
cmc
add
add
icebp
push
mov
jecxz
push
xchg
mov
push
mov
in
fcompl
in
arpl
mov
cmp
sub
cmp
push
xchg
repz
dec
push
add
mov
dec
push
xor
sbb
cmpb
pop
decb
loopne
stc
xchg
test
cld
sahf
ficoml
xchg
hlt
sbb
dec
push
push
or
and
mov
sub
and
cld
ret
stos
xchg
in
inc
or
inc
shr
sbb
clc
xchg
call
xchg
push
or
mov
bound
mov
and
mov
and
iret
test
inc
stc
pop
stos
pop
in
aam
push
xchg
gs
cmp
inc
daa
call
movsl
cwtl
or
inc
mov
jle
or
scas
fistl
mov
repnz
dec
pop
daa
add
add
xor
fistpll
out
repz
aam
xchg
or
adc
add
cmc
add
add
shlb
or
test
enter
xchg
inc
fwait
adc
cmp
jb
jmp
mov
leave
int3
dec
or
dec
cltd
push
cmp
adc
rdmsr
jmp
sti
in
sbb
fisttpl
shl
adc
int3
ja
rcll
stos
lods
hlt
lret
add
mov
mov
push
test
mov
mov
gs
xor
jnp
int3
mov
lahf
or
push
scas
sti
or
cmp
cwtl
sub
call
adc
fs
inc
mov
cmp
mov
dec
inc
dec
mov
cmp
cmc
mov
dec
mov
xchg
dec
fcmovb
inc
out
push
and
lock
push
sahf
fisttps
add
in
inc
data16
imul
stos
bound
adc
mov
daa
add
fimull
or
test
add
mov
mov
jne
adc
inc
push
rolb
add
add
add
push
jecxz
imul
xchg
js
sbb
xchg
mov
sub
dec
fistps
push
xor
jmp
fwait
inc
imul
jne
aad
insl
out
cmp
fdivrs
add
stos
fs
dec
aaa
in
mov
dec
sub
jbe
imul
and
lcall
dec
lret
xor
or
sub
fwait
cs
add
jecxz
xchg
insl
sub
jns
cltd
divb
push
fistpll
fcoms
fstps
sub
aaa
or
push
cmp
testb
imul
add
mov
sub
lahf
mov
mov
mov
mov
js
or
leave
cmpsb
mov
jne
sub
jbe
pop
shl
cmp
nop
or
jmp
jg
dec
adc
add
stc
enter
in
out
mov
dec
mov
jne
cli
rolb
add
add
add
jns
imul
or
stos
lods
mov
arpl
daa
cmp
inc
dec
xor
ret
fwait
jg
xor
lcall
fidivl
jae
fists
cmp
out
loopne
cmp
lods
and
dec
lcall
scas
lret
or
push
sahf
cmp
test
ljmp
fwait
iret
insl
push
mov
dec
mov
in
push
adc
loop
xchg
mov
mov
push
repz
jnp
pop
jl
mov
daa
xchg
test
out
loopne
mov
cmpsb
add
stos
pop
fs
divb
adc
jnp
dec
pusha
bound
iret
push
jb
loope
fstps
notl
imul
cli
pusha
or
push
mov
adc
sbb
sbbl
jne
imul
cmc
call
lret
add
roll
add
add
add
push
inc
fcoms
in
cmp
xchg
das
inc
push
ja
sbb
xlat
sub
lcall
int3
bound
das
pop
push
in
mov
lcall
add
stos
pop
xchg
mov
outsl
jge
ja
push
cs
es
add
sbb
jecxz
push
lahf
dec
scas
imul
fsubrl
hlt
sub
fdiv
or
movl
mov
lds
mov
or
jl
sbb
scas
in
xchg
inc
sbb
xor
lods
adcb
out
popl
or
test
das
loope
test
xchg
push
push
and
jmp
mov
cmc
lock
mov
mov
out
sbb
sbb
movsb
fmull
or
adc
mov
pop
lock
imul
jmp
adc
repnz
movsl
shlb
sbb
add
add
ja
iret
xchg
xor
mov
or
rolb
add
add
add
je
jmp
loope
outsb
cltd
sub
mul
sub
mov
enter
adcl
in
jg
icebp
fbld
push
mov
ret
fbstp
mov
es
sbb
xchg
dec
iret
sbb
mov
inc
jmp
stos
js
add
mov
adc
inc
not
cmpsb
mov
repnz
ja
pop
lret
mov
test
mov
mov
pop
push
das
jmp
xor
or
popa
shlb
inc
orb
test
adc
mov
jl
inc
dec
ljmp
inc
sub
iret
cwtl
outsl
bound
push
test
pop
pusha
hlt
ds
daa
xchg
jl
notl
adc
pop
ljmp
decl
movsl
and
in
les
dec
mov
loop
rorb
add
add
out
into
gs
fsts
xor
add
add
add
es
aad
jecxz
rorl
jb
out
mov
push
nop
cmp
into
and
mov
xchg
mov
mov
mov
sub
jecxz
fisubl
test
int3
mov
push
in
addr16
int
movsb
mov
dec
into
mov
bound
scas
sbb
outsl
and
inc
fldl
popa
add
and
xor
cmp
lret
fcmovu
ja
pop
cmpsl
shrl
xlat
arpl
mov
push
sbb
dec
mov
call
mov
and
push
push
inc
add
notb
fs
insl
mov
xorps
aad
xor
and
jo
ret
clc
xchg
push
icebp
les
in
mov
cld
dec
mov
cmp
je
mov
repnz
or
dec
shll
idivl
fstpl
loope
ror
fistpl
add
add
xchg
and
je
out
mov
aas
test
xor
aam
add
add
add
sub
and
cmp
pop
cmp
cmc
enter
and
jns
out
and
mov
mov
cmp
daa
mov
adc
dec
mov
adc
mov
pushf
ja
and
jbe
test
int3
test
bound
mov
cmp
repz
mov
in
pop
sub
pop
adc
cmc
addb
mov
dec
pop
push
cmpsl
dec
pop
fisttpll
or
lea
loope
loop
xor
inc
adc
mov
test
inc
iret
xchg
jg
fidivrl
shll
dec
mov
sub
nop
sti
lock
mov
sbb
stos
pop
arpl
sbb
pusha
mov
icebp
dec
adc
movsb
add
jne
adc
and
sarb
mov
cmp
sub
xchg
loope
cmp
mov
sbb
in
add
add
dec
daa
dec
das
outsb
imul
enter
mov
ret
aad
add
add
add
add
dec
dec
xchg
or
sahf
gs
dec
clc
pop
scas
and
cwtl
in
stc
insl
push
out
daa
mov
add
mov
inc
inc
xchg
icebp
sbb
cs
mov
fcmovbe
je
cmpsl
dec
jl
cltd
mov
or
stc
add
push
mov
jns
sbb
mov
in
inc
dec
sbb
cmp
subl
dec
or
in
add
outsl
repnz
add
cld
inc
loopne
loopne,pt
cli
cvtps2pi
cmp
popa
add
xchg
xchg
adc
test
fsubrp
test
dec
or
xchg
test
stos
dec
imul
pop
imul
fildll
mov
repnz
mov
mov
mov
mov
pushf
sarl
mov
mov
or
xor
rorl
int3
pop
mov
pop
je
movsl
mov
sbb
add
add
popf
mov
lahf
or
fdivs
mov
add
add
pop
mov
out
gs
add
insl
push
and
ljmp
xchg
mov
sbbb
loop
cmp
add
jg
mov
lret
xchg
outsb
mov
inc
inc
dec
mov
in
push
or
popf
dec
sub
xor
inc
sbb
pop
sahf
mov
ficomps
ja
mov
push
mov
mov
popa
sbb
leave
sub
ret
mov
and
mov
cmpsb
mov
inc
call
test
and
movsb
cmp
mov
les
lcall
aam
repnz
mov
insb
xor
outsb
inc
mov
pop
loop
popa
dec
and
mov
xor
idivb
in
push
ss
mov
jmp
test
imul
mov
sub
pop
pop
mov
inc
xchg
test
sbb
inc
add
add
neg
outsl
mov
push
and
lret
mov
add
add
sbb
push
or
sbb
and
xchg
or
icebp
sub
lods
cli
imul
push
arpl
cmpsb
aad
mov
mov
mov
push
adc
lret
jmp
add
cmpsb
jl
pop
add
popf
das
cmp
or
je
lds
movsl
mov
loope
in
sub
jno
dec
xlat
jle
xchg
pop
aad
add
mov
dec
mov
xchg
stc
jne
and
cs
xchg
and
cmp
daa
xchg
and
dec
mov
inc
dec
dec
movsl
jns
dec
lock
ljmp
xchg
jp
sub
jns
xlat
imul
or
lock
movsb
aaa
jmp
mov
int
scas
lret
xor
lock
rcrl
movsb
jnp
and
rcrb
pop
stos
adc
add
add
add
sbb
sbb
or
add
cmc
add
add
out
jg
inc
or
dec
inc
inc
je
inc
xor
js
push
cmp
mov
adc
scas
jle
movsb
les
sbbl
jmp
lods
orb
dec
xchg
les
in
xlat
int
mov
test
inc
call
jnp
push
jnp
mov
mov
pop
lret
and
jnp
dec
clc
test
mov
xchg
cmp
fs
lods
out
mov
dec
into
dec
pop
icebp
dec
or
imul
mov
je
mov
cld
and
jmp
push
clc
xor
jge
shufps
mov
lea
xchg
je
lcall
add
shl
out
in
jae
mov
cmp
je
or
mov
jmp
test
add
mov
pushf
adc
ds
sub
push
iret
xchg
flds
add
add
add
cmpsb
or
sbb
imul
cli
movb
rcrl
fwait
jge
test
shlb
adc
jo
loopne
loope
pusha
lods
pop
lret
xchg
pushf
dec
add
jbe
adc
xchg
andb
sub
xchg
icebp
push
push
push
push
adc
push
fiadds
or
lea
mov
or
inc
and
mov
cmp
jns
repz
lods
xchg
nop
rolb
ja
xor
dec
xchg
mov
mov
cld
mov
push
cmc
or
lock
pop
mov
cmp
adc
adc
add
or
pop
nop
sub
cmpsl
cmc
cmp
sbb
jecxz
push
pop
call
xor
pop
fdivs
repz
cs
iret
xchg
nop
in
cmp
and
incl
add
xchg
and
idiv
lahf
insl
mov
jle
dec
mov
add
cmc
add
add
aaa
fwait
imul
mov
inc
add
iret
inc
jae
orb
push
xorl
push
jnp
or
popa
test
lods
xchg
fnstsw
xchg
fwait
dec
negl
adc
iret
out
orb
lret
loopne
or
mov
push
push
inc
dec
daa
add
add
cs
push
aaa
in
mov
jns
and
decl
dec
dec
push
enter
mov
push
xchg
lods
add
pop
sbb
cmp
fcos
pop
mov
push
test
shrb
es
jp
sbb
adc
loope
mov
ss
aaa
mov
push
ss
dec
mov
add
push
jnp
out
int3
xchg
xchg
fisttpl
nop
mov
gs
mov
faddp
pop
test
cmp
jo
or
outsb
push
mov
movl
cmp
jg
loope
cs
rcr
popl
add
add
jmp
pop
fwait
hlt
inc
inc
rolb
inc
push
mov
xor
fisttps
sahf
pop
ret
orl
pop
movsl
mull
aam
pop
xchg
cld
or
daa
jns
in
mov
xchg
or
das
and
mov
stos
movsl
sbb
fbld
pop
inc
nop
daa
sub
sub
cmp
jae
add
lock
mov
lcall
inc
pop
xchg
mov
mov
test
xchg
inc
shrl
in
xor
sbb
popf
xchg
cwtl
mov
lahf
xchg
outsl
inc
aad
nop
dec
add
jmp
sbb
dec
cltd
or
test
fwait
adc
in
shr
pop
jecxz
adc
jno
adc
jbe
aaa
cli
in
sbb
pusha
adc
fdivp
dec
mov
mov
loope
fcmovne
cmp
aad
lods
imul
add
imul
xor
dec
jbe
add
cmc
add
add
aam
pop
and
pop
lret
cmp
mov
adc
cltd
mov
movsb
insl
sahf
cs
sbbb
aam
loopne
lods
fisttpll
add
and
cltd
test
or
sbb
out
aas
pop
mov
xchg
scas
xchg
cmp
loopne
orb
sub
enter
jbe
bound
mov
das
rcrl
loope
pop
push
insl
clc
xorb
pop
fs
das
jnp
sahf
sbbb
dec
sub
adc
inc
cld
movsb
lds
int
nop
xor
test
mov
push
adc
inc
lea
sbb
mov
mov
and
mov
repz
pop
jecxz
cmp
adc
cs
mov
xor
loop
in
in
add
add
psubusw
push
xchg
fsubrs
dec
daa
inc
mov
fldl
add
add
add
stos
das
loopne
fnstcw
mov
sbb
cmpsl
or
loopne
aas
clc
mov
in
mov
addr16
push
or
mov
fsubs
outsb
nop
or
in
jmp
les
out
pop
lret
jl
push
outsb
ret
mov
pop
mov
sbb
mov
push
jbe
jns
inc
push
push
or
lret
mov
dec
cmp
jmp
dec
ljmp
mov
lds
adcb
dec
sub
adc
insl
repnz
sahf
mov
cld
lahf
xchg
xchg
fisubl
dec
insb
inc
sub
mov
movsb
lahf
dec
mov
ret
outsl
clc
xlat
inc
jecxz
test
gs
ljmp
push
sahf
aas
lods
and
nop
test
adc
cmp
push
fistps
cld
aaa
add
add
sbb
sahf
cmc
fsubrp
jnp
mov
jno
pusha
fiadds
add
add
add
cmpsl
mov
dec
call
adcb
cld
roll
call
and
mov
ljmp
adc
mov
cltd
adc
incl
iret
jp
mov
or
dec
mov
in
pop
imul
clc
adcb
jbe
sub
loop
and
xor
mov
add
jo
lock
xor
daa
adc
jno
scas
push
adc
cmp
pusha
mov
jl
addr16
aaa
enter
adc
sub
in
adc
mov
pop
push
mov
jle
xor
jge
sti
fldenv
stos
lods
lret
cmpsb
sub
or
js
test
push
test
lods
pop
je
lret
cld
not
insl
fisttpl
or
jmp
cltd
xchg
xor
sub
insb
jnp
add
pop
dec
jle
jg
std
fldt
cmp
xor
add
cmc
add
add
and
inc
xor
lea
movsl
and
test
incl
inc
outsl
mov
insb
jecxz
inc
ja
test
xor
pop
adc
lret
sub
je
jnp
pop
imul
inc
repz
jmp
adc
mov
xchg
in
jg
or
cmp
inc
xorb
or
mov
sti
psubusb
cmp
cwtl
fmuls
mov
clc
dec
mov
pop
mov
cmpsl
mov
clc
dec
jo
mov
jmp
fsubs
outsb
fistpl
mov
adc
pop
out
fwait
inc
daa
mov
cwtl
test
inc
pop
push
mov
xchg
sbb
sbb
inc
push
aaa
fsubs
push
in
mov
cmp
fs
push
inc
hlt
loopne
ja
cmp
sar
adc
mov
stc
mulb
xchg
push
mov
aam
lahf
inc
mov
movsb
add
add
mov
sti
idiv
lods
jne
adc
inc
cwtl
lret
loopne
add
add
add
adc
push
aad
xor
lahf
push
dec
xor
pusha
test
icebp
in
cmpsb
jno
and
mov
inc
jo
std
dec
inc
and
xchg
xchg
push
test
push
fs
or
pushf
add
andl
or
xor
test
mov
insl
dec
cld
jnp
aad
aas
jbe
mov
jmp
push
mov
inc
outsb
xor
and
pop
cmp
mov
sti
add
daa
push
je
je
andl
sbb
dec
aam
cmp
cltd
jg
les
pop
stc
mov
addr16
inc
or
pop
int
cmp
push
jp
in
out
inc
and
push
mov
pushw
cmpsb
popf
dec
out
movb
jecxz
inc
mov
and
in
imul
idiv
xor
test
add
add
sbb
jmp
mov
stc
xor
cmc
add
add
cwtl
xchg
ret
jnp
mov
out
repz
ja
and
addr16
push
push
dec
mov
fidivrs
push
lea
sti
jge
lahf
inc
add
dec
pop
test
fistl
lcall
sub
stc
cmc
or
xchg
rcrl
mov
inc
enter
out
jnp
cmpsb
imul
movsl
add
or
mov
pop
popa
fs
pop
cltd
imul
pop
aas
sbb
repnz
inc
add
jb
sti
int
lock
xor
xchg
mov
in
rclb
loope
jns
jmp
pop
shrl
sub
bound
inc
pop
das
fidivs
movsl
dec
mov
in
mov
sbb
dec
out
popa
mov
leave
out
adc
pop
mov
mov
daa
lahf
mov
inc
mov
rorl
cld
aad
dec
mov
imul
add
add
push
out
jp
dec
imul
add
add
add
add
sbbb
xchg
inc
cmpsl
stos
fisubs
sub
inc
aas
loop
sbb
cld
sti
cmpsl
mov
xor
mov
pop
imul
and
xor
mov
pop
leave
sbb
stos
enter
dec
js
ljmp
mov
add
mov
jg
sti
ds
mov
mov
jg
and
js
pop
stos
mov
add
xchg
jp
int
sub
pop
xchg
dec
dec
add
xchg
adc
or
int
xchg
adc
mov
sbb
xchg
movl
mov
push
sub
dec
push
dec
orl
and
jmp
call
imul
mov
shrl
pop
dec
mov
pop
or
out
and
notb
aas
dec
icebp
add
add
mov
lcall
mov
xor
jecxz
add
add
add
insb
and
fiadds
and
jae
jae
inc
cmp
push
orb
loop
sub
and
in
adc
or
mov
aas
xor
dec
dec
aad
ret
lock
in
data16
loopne
repz
mov
pop
push
popl
or
imul
mov
pop
mov
fistpll
out
adc
lock
imul
mull
mov
pop
sbb
xor
out
lods
idivl
popa
xchg
inc
push
mov
or
aas
fiaddl
test
and
adc
sub
sbb
add
std
and
pop
sub
sbb
fbstp
dec
fsubr
xchg
int3
sbb
xchg
imul
dec
add
jge
lds
xchg
dec
fistpl
jg
out
flds
add
sbb
jns
daa
data16
push
in
add
add
add
scas
or
push
js
push
push
in
add
sbb
pop
or
cmp
mov
scas
leave
jne
nop
dec
bnd
lea
mov
shl
xchg
sub
enter
mov
daa
imul
or
jg
pushf
jbe
jg
iret
mov
add
insb
cmc
aaa
lods
out
iret
push
jne
mov
das
enter
data16
mov
cmpsb
insb
mov
pusha
fnstcw
mov
call
dec
test
inc
out
xor
inc
push
repz
das
scas
cltd
sub
mov
jg
jne
sahf
in
orb
or
xor
shlb
sbb
lahf
data16
outsl
in
jae
pop
jg
push
inc
xchg
lcall
movsl
in
pop
mov
fistpl
push
or
int3
xchg
inc
int3
aam
popa
in
xor
push
cld
push
inc
rclb
add
fadd
fsubp
jnp
push
xor
and
in
add
add
add
inc
icebp
mov
jecxz
or
and
push
pop
lods
es
sbb
clc
jnp
push
cmpsb
std
mov
outsl
bound
push
mov
mov
cmp
sbb
adc
inc
outsb
xchg
wrmsr
fsubrs
add
mov
mov
popf
sub
shlb
cmp
ret
loope
rorb
sbb
call
cmp
lods
orb
cli
rcl
fisubs
inc
jae
mov
xor
mov
sbb
into
sub
mov
xchg
fsts
out
push
and
in
push
ja
lret
test
repz
cmp
fucomip
popf
cli
dec
scas
pop
cld
cmp
mov
fisubl
or
mov
sbb
clc
adc
leave
icebp
xor
jb
mov
insb
or
add
add
sub
cld
cli
jle
addb
or
add
cmc
add
add
iret
cmp
mov
icebp
scas
out
jp
jg
daa
jnp
insl
inc
push
mov
mov
lods
popf
cmp
shr
or
xor
pop
cvtdq2ps
push
sub
mov
xchg
or
mov
dec
push
popf
add
dec
lret
mov
ljmp
sbb
addr16
sbb
cmp
insl
mov
lea
bound
push
xor
mov
cli
rcr
or
call
fdivrl
aaa
out
rclb
js
cmp
je
inc
pushf
ds
xor
xor
adc
ss
mov
lock
mov
jle
push
push
sbb
idivb
jp
fs
or
movsb
xor
sbb
in
lock
xorl
test
jmp
out
inc
mov
mov
and
in
imul
add
ja
sti
dec
push
sbb
scas
std
out
add
add
add
pop
and
xchg
sbb
fsubrs
in
or
add
fcoml
sbb
push
lock
lds
into
cmp
subb
testl
into
pop
jnp
mov
cltd
push
leave
cmp
sbb
mov
lds
mov
xor
in
xchg
inc
pfsubr
adc
dec
lds
cmp
pop
pop
jb
lcall
loop
mul
lods
cmp
pop
icebp
mov
xchg
mov
or
pop
mov
nop
fcomip
mov
inc
addr16
push
xchg
cmpsl
loope
jge
push
jle
adc
loopne
push
push
in
stc
stos
push
jmp
xchg
jl
mov
sbb
mov
lret
leave
lea
popf
cmpsb
xchg
inc
inc
jns
aaa
adc
xor
inc
lods
std
mov
cmp
mov
lret
jp
add
add
into
arpl
inc
push
cmc
or
out
add
add
add
add
movsl
pop
dec
out
add
adc
mov
inc
or
cmc
cs
cltd
xchg
inc
cmp
jge
subl
in
adcb
inc
fbstp
inc
pop
lods
adc
mov
leave
jb
xor
out
inc
and
dec
xor
sbb
js
int
xor
add
test
push
dec
and
push
lods
popf
loopne
adc
jo
xor
subb
or
mov
jae
sub
xorb
adc
mov
sub
sub
das
mov
sbb
inc
pushf
cmp
insl
xchg
mov
dec
push
scas
or
repz
test
add
jb
stc
in
scas
xchg
shll
sbb
cmpsl
fisttpl
pop
cld
cmp
popf
mov
inc
mov
and
pusha
ret
nop
jnp
mov
pop
mov
add
add
ja
decl
jecxz
mov
out
add
cmc
add
add
dec
js
pop
cmp
pop
das
pop
cs
inc
out
cmpsb
dec
cltd
pushf
jno
sarb
enter
inc
gs
and
cmp
outsb
mov
inc
mov
mov
mov
aas
push
aad
and
out
out
gs
cmpsb
mov
aad
lret
enter
sub
test
mov
pop
mov
loopne
stc
mov
mov
fsts
sti
rolb
sub
or
jns
mov
sbb
jbe
pusha
dec
inc
nop
xor
shrb
dec
xchg
fldcw
out
lahf
push
repnz
push
mov
icebp
push
fwait
push
xchg
es
mov
movsl
shlb
cmpsb
mov
rorl
dec
out
add
mov
pop
mov
int3
cmpsl
shll
repnz
sub
hlt
xor
add
add
add
lock
jg
mov
inc
add
fsubr
add
cmc
add
add
mov
scas
mov
loop
push
icebp
sti
pop
jne
insb
xor
jge
popf
jne
lock
rclb
cs
repnz
xchg
inc
push
cltd
mov
and
icebp
sbb
sub
movsb
outsb
and
inc
cmc
std
into
adc
sar
call
outsb
aad
insb
rcrl
iret
pop
sbb
mov
pop
lea
jmp
jns
sub
inc
push
xor
mov
stos
mov
jle
mov
xor
lds
jmp
mov
in
jge
jae
jp
sub
push
test
aam
arpl
mov
jae
int3
sbb
push
fimull
popf
bnd
sti
sub
inc
push
test
lds
lods
xlat
cmp
fimuls
lods
scas
lock
xor
sbb
sbb
in
lahf
movsl
mov
pop
cmp
dec
xor
add
xchg
fwait
cwtl
pop
popf
pop
xlat
fisttpl
loopne
jno
ljmp
cli
js
or
repnz
fidivrl
daa
adc
imul
sub
fildl
cmc
in
adc
scas
in
mov
mov
mov
pop
mov
insl
stc
bswap
cltd
xor
mov
jecxz
sub
mov
and
out
adc
cmp
mov
icebp
std
xchg
cli
ret
cmp
inc
movsl
aad
xlat
insb
mov
lods
mov
and
push
mov
xor
jmp
xorl
inc
out
cli
jmp
sbb
cmp
xchg
divl
xchg
adc
push
pop
scas
loopne
jbe
xor
push
ret
test
inc
mov
pop
xor
jo
xchg
mov
dec
cmp
lods
push
int
faddl
lods
xor
int3
cmp
mov
insb
faddl
cli
mov
push
and
fildl
add
stc
mov
dec
js
stc
mov
push
nop
aad
ret
hlt
hlt
jmp
add
add
add
pop
inc
sbb
xchg
mov
sub
popa
test
aaa
mov
cmp
out
push
imulb
xchg
ret
add
push
ficoms
push
dec
dec
lret
lods
sarb
lret
jae
dec
push
movsl
jp
lahf
dec
mov
push
xor
push
or
mov
pop
fnstcw
adc
test
cmp
mov
mov
mov
loopne
das
adc
inc
mov
adc
pop
cmp
mov
imulb
sub
notl
enter
cmp
push
in
outsb
loope
inc
sbb
int3
xor
cmpsl
je
cltd
and
add
dec
lahf
mov
cmp
xchg
test
dec
cmp
mov
fdiv
inc
push
cmp
jae
in
cmp
or
or
mov
or
jno
sub
add
add
insl
repz
add
out
test
mov
add
add
jp
mov
fwait
xchg
es
out
lea
jmp
insl
and
mov
aas
unpcklps
adc
insl
or
push
mov
adc
xchg
mov
xor
into
stos
jne
loopne
insl
and
xchg
mov
and
push
repz
inc
xchg
ljmp
or
frstor
push
imul
test
arpl
stos
pop
pushf
aaa
adc
outsl
pop
mov
fdivs
push
dec
mov
lcall
mov
sub
bound
stos
push
jo,pt
inc
and
and
cmpsb
imul
pop
inc
and
cmpsb
int
dec
dec
rcll
sti
movups
repnz
cs
lods
ja
or
sbb
sub
jno
mov
out
xor
les
pushf
mov
mov
add
cmp
jnp
sbb
cmp
add
add
mov
fldt
out
addl
movsl
jo
cmpb
mov
popf
and
and
fsubs
out
roll
push
jnp
shll
vpaddsb
xchg
adc
and
test
in
mov
pop
test
push
mov
fbld
mov
fld
cs
adc
aas
xchg
pop
dec
and
dec
dec
bound
xchg
mov
ret
mov
dec
arpl
xor
out
dec
lret
mov
cmp
movsl
std
xor
ja
sub
jnp
je
je
xchg
mov
push
adc
xchg
pop
dec
mov
shr
rcrb
jle
enter
bound
cmp
bound
mov
xor
arpl
push
add
out
dec
xor
jl
ja
push
mov
pop
add
add
subb
jmp
popa
test
movsl
out
add
cmc
add
add
les
in
lret
out
add
loope
cli
hlt
inc
xchg
pushf
lea
movsb
fdivrp
out
jge
sbb
add
movsb
lock
sub
mov
dec
data16
sti
xchg
sti
fbstp
jl
loope
dec
scas
fnsave
push
mov
inc
pop
push
or
imul
push
out
stos
or
pop
mov
sbb
mov
pop
je
pop
cli
insb
leave
xchg
adc
xor
pop
adc
or
sti
stc
cwtl
iret
mov
push
push
sub
pop
iret
scas
xchg
repnz
pusha
adc
adc
mov
popf
and
pop
pop
mov
dec
sbb
jae
jge
push
hlt
adc
dec
cmpsl
inc
sbb
enter
rclb
shrb
pop
bnd
rclb
leave
rcl
mov
pushf
adc
gs
add
add
jb
scas
cmp
int3
repnz
push
test
cmc
add
add
xchg
loope
rclb
nop
adc
pop
jb
mov
xchg
or
lock
mov
repz
loope
pop
sbb
sbb
sbb
loopne
test
in
shr
jnp
xlat
or
out
cld
pop
ja
jbe
das
sbb
test
stc
fidivs
leave
xor
or
test
movsb
jle
cwtl
pop
xchg
jecxz
sub
add
out
sahf
stos
push
push
jp
push
sbb
or
insl
js
hlt
popa
into
addr16
mov
insl
inc
xchg
filds
fdivr
and
movhps
adcb
xor
adc
hlt
jo
addl
pop
xor
inc
js
jecxz
cs
hlt
bound
sub
pop
das
outsb
dec
jmp
sub
test
ret
ja
inc
mov
push
imul
mov
cmpsb
scas
out
cmpsl
ja
add
mov
xlat
mov
bound
inc
ret
lock
cmc
add
add
xchg
adc
out
add
bound
sub
cmc
jbe
outsb
add
lds
out
push
clc
rorb
mov
xchg
add
inc
push
pop
int
lret
and
rorl
pop
xorb
mov
and
jb
inc
jns
rclb
movsb
xchg
mov
aaa
xchg
in
jl
outsb
sub
xchg
adc
jmp
dec
sbb
repz
icebp
sub
xchg
pop
cmp
movsl
xchg
xchg
push
aad
add
inc
roll
fisubrs
cmpb
sub
mov
jle
push
push
inc
jo
mov
icebp
adc
inc
rorl
pusha
pop
mov
mov
test
hlt
mov
out
jbe
mov
je
fiadds
test
popa
cmpsb
enter
cwtl
lods
push
sub
sbb
cmp
lahf
dec
imul
add
mov
aas
jp
int3
icebp
pop
cmp
cmp
add
mov
inc
dec
lcall
push
nop
push
notl
mov
shr
int
pop
mov
ret
jmp
int
int
leave
pop
pop
popa
adc
push
xor
sub
cmp
dec
aam
rorl
das
notl
dec
add
imul
jg
mov
ja
es
sub
in
inc
adc
xor
out
add
lods
ja
lods
in
push
dec
repz
stos
inc
push
clc
and
push
cmp
cmp
aas
ret
insl
lret
push
ljmp
scas
icebp
stos
dec
dec
xchg
add
scas
and
cmp
cmp
clc
cmpsb
add
pop
inc
mov
xor
movsl
add
iret
imul
rorb
or
outsl
ss
jecxz
mov
mov
add
add
mov
sti
mov
and
sub
jns
add
cmc
add
add
pop
inc
jne
pop
push
and
andb
and
push
sbb
inc
push
xchg
xchg
push
push
mov
mov
adc
je
xchg
dec
loope
shll
popf
xchg
dec
fmul
cltd
outsb
dec
adc
mov
xchg
inc
iret
and
pop
sbb
cmp
pusha
pop
dec
mov
mov
mov
cmp
mov
dec
xchg
cwtl
mov
sti
fildll
inc
pop
add
pop
ffreep
mov
push
and
in
add
int3
popa
js
pop
adc
push
dec
xor
dec
stos
cmpsl
push
mov
mov
xchg
and
xor
iret
sub
ljmp
jnp
fnstcw
roll
rolb
sbb
incb
push
jo
mov
add
add
into
adc
neg
jge
push
xchg
sub
outsb
repz
cmc
add
add
movsb
cwtl
push
xlat
ds
imul
jg
pop
in
pusha
push
lea
cmpsb
loope
push
push
test
shlb
mov
xchg
call
cmc
push
rcr
repnz
jb
imul
andl
iret
pop
pop
scas
stos
lret
ljmp
repnz
mov
or
xchg
cld
in
cmp
sti
hlt
lock
loop
pop
inc
cmpsl
xchg
test
adcb
xor
adc
adc
das
pop
xor
jecxz
repz
cmp
jp
xor
enter
lods
or
mov
fldcw
dec
mov
enter
mov
popa
dec
lea
add
mov
outsb
push
pop
test
mov
jb
push
sbb
adc
or
fldl
push
sub
mov
inc
push
cld
jnp
fs
jecxz
add
pop
cmp
outsl
jg
jg
mov
xor
sub
data16
add
cmc
add
add
pop
push
je
in
mov
jge
xor
add
popf
insb
fisubrl
movsl
or
mov
divl
xchg
shr
movsb
jnp
dec
movsl
rcr
cs
fistpll
scas
ljmp
lods
push
cwtl
outsl
push
pop
movsb
fsubrp
adc
int
test
sub
popf
pusha
add
inc
shlb
push
fldl
into
xchg
dec
ja
mov
pushf
shl
sub
das
pop
sti
fisttpl
mov
dec
xor
cmp
out
ds
jmp
lcall
fcmovne
add
pop
push
std
dec
dec
js
dec
or
pop
jecxz
cmp
out
mov
insb
mov
mov
imul
pop
mov
pop
jne
mov
lret
xor
fistpll
xchg
shr
fwait
lds
inc
mov
inc
mov
pop
pusha
mov
jns
inc
push
jbe
xor
andl
add
ret
ja
and
aaa
negl
filds
pop
cmc
add
cmc
add
add
test
pushf
adc
jg
pop
push
mov
jle
sbb
sbb
ds
sbb
fs
pandn
pop
mov
fmuls
or
adcl
std
xchg
inc
lahf
fwait
push
adc
or
pop
in
sub
inc
sarb
or
pop
into
fidivrl
and
cmc
adc
int
jl
push
dec
push
inc
pop
xor
mov
adcb
aas
aam
push
pop
pop
lret
jp
pop
lds
mov
cmp
outsb
outsl
shrl
es
movq
pop
pop
xchg
jb
das
sarb
pop
push
shlb
and
xchg
iret
outsb
aad
cmp
mov
jp
jbe
int
push
xchg
scas
jl
std
xchg
dec
sbb
mov
jno
ljmp
popf
and
push
fistpl
pop
pop
inc
xchg
add
in
xchg
jecxz
jmp
mov
mov
testb
cmc
add
add
ss
fsubl
push
mov
xchg
inc
jbe
mov
dec
sub
jae
mov
sbb
cmp
push
pop
mov
movsb
push
xor
jb
cmp
add
ljmp
popf
or
sbb
sbb
jns
fwait
scas
andb
pushl
cmp
jmp
xchg
cmp
stos
pop
iret
inc
clc
mov
popa
or
nop
push
jmp
ss
jbe
inc
pop
mov
sbb
cmp
ja
sbb
jge
mov
rcrl
mov
in
repnz
push
rcl
fbld
or
aam
mov
push
imul
movsl
cltd
scas
movsb
xlat
cmp
mov
mov
adc
and
repz
out
pop
jp
sti
outsl
pop
inc
xor
or
pop
jl
add
jle
jne
cmp
pop
pop
mov
add
add
add
jnp
insb
jns
jno
shl
mov
pop
add
cmpsb
push
sub
mov
rorb
jbe
jmp
or
pushf
cmp
imul
push
sbb
jb
iret
icebp
xlat
call
adc
lock
add
jnp
push
shrb
xchg
lcall
in
inc
push
jne
lret
jbe
outsb
pop
push
sbb
mov
paddd
cmpsb
push
xor
inc
clc
mov
dec
xor
in
inc
adc
call
out
add
out
scas
int3
in
ds
rclb
jmp
aad
pop
leave
fucomip
data16
fincstp
loop
test
and
sub
xchg
or
mov
xchg
push
jmp
ds
xchg
pop
add
lcall
mov
jo
and
cmp
add
sub
scas
fdivr
fnstcw
cmpl
aaa
clc
add
cmc
add
add
test
int3
pop
xchg
xorb
sub
idiv
mov
es
rclb
fcoml
je
xchg
mov
jmp
jecxz
jmp
jnp
fst
cmpsb
dec
and
adc
mov
fcomps
call
ffreep
push
sbb
icebp
std
and
lea
cs
or
dec
cmp
popf
stos
aam
shlb
inc
fwait
cmp
jne
dec
xor
sub
and
stc
dec
dec
dec
xchg
or
or
lods
in
loop
pop
or
sbb
lea
mov
cmovae
add
addb
jns
nop
mov
mov
fstpt
jecxz
outsb
sub
pop
aas
je
lods
jnp
rolb
fcomps
adc
pop
out
aam
cmp
cmp
xor
inc
scas
scas
ja
and
in
sub
pop
iret
test
cmpsl
mov
mov
add
add
add
xor
xchg
fwait
bound
fldcw
add
cmc
add
add
mov
data16
imul
call
cmp
mov
iret
xchg
pop
fsubrs
sbb
fwait
xchg
add
cmpsb
cli
dec
adc
fs
gs
out
psrlq
or
xor
and
insb
or
imull
mov
mov
cmp
out
pushf
xchg
mov
push
lea
push
jnp
push
lea
aad
dec
xchg
imul
dec
cmp
fidivs
cmp
xor
and
mov
push
mov
and
jns
push
icebp
imul
scas
pop
sbb
fwait
out
lret
call
shrl
or
outsl
jb
inc
iret
out
mov
jnp
rcl
cmp
mov
push
mov
dec
cld
dec
push
xchg
ret
push
rcrb
mov
and
push
xchg
testb
mov
add
add
ds
in
idivl
pushl
lods
cs
and
add
cmc
add
add
orb
jb
shrl
arpl
mov
fsub
gs
cmc
fcoml
mov
cld
adc
jne
cltd
xor
and
mov
cmpsl
push
cmp
in
dec
fisttpll
add
push
addr16
bound
fbstp
ret
xchg
xor
mov
push
or
mov
mov
loope
stc
push
adc
mov
sub
cmp
sbbl
aaa
mov
push
and
push
sbb
mov
mov
movsb
aam
fs
je
orl
ds
or
sbb
sarl
insl
pop
xchg
repz
xchg
lcall
cli
cwtl
scas
mov
out
daa
mov
mov
into
and
hlt
add
shlb
mov
mov
jae
inc
out
scas
faddp
sub
sbb
push
xchg
je
jl
add
add
jecxz
inc
cli
aas
push
ljmp
push
sti
add
cmc
add
add
mov
hlt
adc
mov
cltd
jno
inc
pop
in
insb
pop
iret
mov
icebp
adc
test
pop
loopne
jecxz
sub
aad
aad
lods
add
fldcw
or
mov
leave
sti
xor
call
xchg
std
xor
and
mov
pop
pop
push
imul
mov
mov
sbb
pop
sbb
lock
jle
and
inc
sbb
cmpsl
lock
hlt
push
xor
ss
mov
arpl
lret
stos
push
dec
arpl
out
xchg
outsb
test
push
sbb
xchg
fs
dec
dec
lahf
int3
push
mov
stos
gs
ss
mov
jnp
xchg
dec
cmp
rorb
push
mov
or
jnp
jle
and
cmp
adc
out
or
popf
enter
add
mov
lcall
cmc
jl
xor
cld
add
cmc
add
add
ja
jle
xorb
mov
scas
xchg
sbb
xor
or
mov
outsb
aad
xchg
jp
dec
xlat
cmp
inc
cmpsl
orl
fstpt
shrl
mov
mov
lds
fildll
mov
movsb
jb
mov
insl
addr16
fsubrp
push
repz
fnstenv
loop
inc
mov
fs
jbe
xor
cltd
mov
or
outsl
cs
mov
jmp
mov
jne
ja
push
mov
mov
adc
jl
cld
pop
pop
dec
bound
dec
adc
int
arpl
jp
ja
mov
push
jne
cmp
push
cmpsb
lds
arpl
mov
movsl
ja
push
iret
mul
xchg
jae
jb
loope
push
ficoms
in
lret
in
movsl
jg
pop
xlat
arpl
aaa
jae
cltd
dec
mov
fs
add
cmc
add
add
jl
sub
mov
mov
in
inc
jp
xchg
adc
ret
ds
test
or
aas
mov
jle
mov
ss
dec
cs
jecxz
insb
enter
movsb
push
ljmp
xor
popa
outsl
lds
dec
cltd
ja
xchg
stos
lock
jns
cmpsb
imul
fbstp
pop
lahf
ja
dec
cmp
lock
rorb
fcoml
leave
add
insb
xchg
pop
jo
mov
push
push
pop
sub
lahf
imul
out
lcall
notb
outsl
les
cmpsb
pop
cmp
mov
std
sub
adc
pop
mov
jmp
xchg
fwait
inc
out
mov
or
aas
popa
mov
ret
cmpsl
cmp
sub
mov
in
dec
cmp
sti
sub
out
outsb
inc
and
out
jmp
add
add
push
into
nop
out
cwtl
jle
xlat
movsb
add
aad
cmc
std
add
cmc
add
add
test
adc
jp
loop
negl
mov
inc
xor
cmp
sub
fidivrs
cwtl
xor
out
and
ljmp
dec
insl
push
adc
mov
in
aam
js
mov
rcll
popa
and
pop
mov
adc
stc
enter
cmp
rcrl
lock
dec
scas
xchg
std
or
dec
shll
lock
xor
adc
push
or
cmpsl
int3
pusha
inc
xor
adc
cmp
inc
jge
jle
or
push
add
push
and
cmpsb
loope
adc
push
cld
pop
dec
xchg
iret
cld
mov
jg
stos
scas
pushf
imul
or
push
adc
xor
fisttpll
lods
pushf
mov
arpl
int3
loope
add
jno
test
jg
xor
or
rcrb
cmc
add
add
add
jl
mov
fs
pop
jne
push
es
scas
mov
xchg
xchg
subb
pop
dec
mov
cld
cld
push
jnp
ficoms
lock
dec
push
rcrl
mov
push
push
cmp
push
aaa
out
out
stc
cmp
mov
push
or
fiaddl
fadds
insl
jmp
jne
xor
mov
test
and
imul
cmp
sbb
lods
pop
jl
cmp
std
add
add
push
and
in
movsb
fimuls
dec
cmp
mov
imul
pop
pop
ror
sub
pusha
jecxz
les
and
pop
ljmp
pop
loopne
jl
cmp
sub
das
jg
sahf
sbb
sar
enter
xor
inc
ret
adc
rolb
dec
std
dec
sub
cmpsl
fcomps
pop
jl
add
adc
movsb
push
in
cmc
jne
pop
adc
mov
incl
add
add
add
dec
mov
mov
push
pushf
out
lret
mov
jae
cmp
mov
lcall
shll
sub
inc
push
jp
and
mov
pop
inc
xchg
movsb
repz
mov
ss
mov
xor
lods
mov
and
mov
push
push
or
mov
in
iret
xor
and
dec
push
sub
subb
bound
xor
ds
fnstcw
lock
add
push
mov
xchg
mov
pop
inc
sub
inc
pop
sbb
cwtl
fmuls
inc
mov
aaa
bnd
ret
mov
cli
sbbl
enter
das
mov
lret
xor
loope
popa
sub
repz
xorl
aas
iret
in
mov
mov
in
aas
rcl
mov
rol
add
sbb
into
cmp
les
jecxz
adc
add
add
out
shlb
aas
out
fwait
aaa
call
pop
aam
add
cmc
add
add
clc
fs
and
dec
mov
mov
data16
ljmp
cmpb
sbbl
add
jecxz
aas
add
ljmp
fyl2x
xor
in
sub
out
popa
sbb
out
loop
out
inc
in
popf
out
mov
adc
add
and
adc
dec
jp
lahf
call
dec
lret
mov
sbb
dec
adc
jecxz
shrb
mov
incl
pop
jb
fwait
mov
lahf
pop
inc
cmp
imul
js
lea
push
aas
fsubs
adc
loopne
test
popf
js
cmp
xorb
sbb
shlb
jo
mov
xlat
cmp
inc
out
inc
call
icebp
lcall
dec
lret
mov
lods
lods
push
movsb
or
add
add
mov
lcall
insl
add
add
add
add
add
cwtl
imul
ds
int
mov
scas
in
mov
push
adc
roll
xor
jp
sbb
pop
cmp
cmpsb
push
outsb
scas
xchg
push
mov
call
loope
loopne
clc
xor
cmp
repnz
jmp
sbb
inc
sbb
movsl
and
push
stos
ret
adc
int3
loop
inc
bound
and
mov
bound
lret
out
in
jne
jne
jae
mov
jne
js
adc
xchg
cmpsl
std
sbb
inc
loop
mov
or
cmp
notb
add
jl
test
lea
mov
lock
mov
dec
out
loopne
mov
or
xlat
lret
dec
mov
xchg
repz
cli
cmp
jl
popa
cwtl
ss
icebp
cmp
popf
pop
int
dec
add
and
nop
mov
dec
rol
lret
clc
rorb
cltd
jl
mov
add
cmc
add
add
pop
mov
jae
call
nop
inc
repnz
jne
test
jp
mov
inc
mov
bound
out
icebp
das
xor
ret
lds
push
pushw
mov
dec
add
or
call
inc
jnp
hlt
adc
pusha
and
pop
fs
sub
push
adc
insb
ficompl
pop
negl
push
popf
or
sbb
addl
ja
jne
mov
imul
rcrl
fsubs
xor
dec
jo
jno,pn
leave
inc
jne
in
fildl
pop
pop
stos
aaa
push
mov
jno
xchg
pop
jecxz
jo
sti
push
cmp
pop
jae
pop
sub
stos
decb
inc
out
dec
xchg
sahf
mov
add
push
sbb
pop
cwtl
sub
mov
movsl
cltd
jae
mov
add
add
std
aaa
mov
lret
jne
or
divb
add
add
adcl
sbb
pop
xchg
fldcw
gs
xchg
xchg
jnp
xor
xchg
push
xchg
test
std
rcrb
imull
ja
scas
mov
mov
leave
mov
sbb
adc
mov
add
jno
adc
push
inc
push
mov
iret
popf
dec
adc
jnp
shll
jle
cmp
lds
xchg
lret
inc
sub
mov
cmp
loope
cmp
mov
inc
inc
mov
pop
inc
fmuls
push
mov
dec
xor
mov
mov
inc
sub
dec
and
inc
jne
pop
adc
or
dec
jecxz
and
in
js
loop
hlt
inc
inc
pop
jns
mov
fwait
ljmp
jle
add
nop
dec
icebp
ss
outsb
subl
daa
movl
xchg
loop
dec
pop
add
add
insl
aam
mov
fs
xor
add
add
add
adc
jo
pop
loopne
idivb
add
xor
inc
sbb
xchg
unpckhps
xor
pushl
pop
test
add
mov
mov
or
dec
add
add
add
movl
add
lret
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
cltd
mov
xor
add
mov
mov
xor
lret
ret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
ljmp
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
fs
decl
mov
test
add
xor
add
mov
or
inc
mov
popa
mov
cld
inc
cmp
lea
and
incl
mov
cld
add
xchg
sar
inc
incl
mov
xor
add
nop
inc
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
test
inc
aas
inc
lea
inc
mov
mov
call
out
fisttps
jecxz
call
lea
call
add
add
test
wrmsr
jae
add
mov
add
add
mov
addl
mov
mov
dec
nop
mov
fadds
add
lea
pusha
push
incl
call
mov
mov
cld
mov
add
cmp
mov
mov
push
nop
incl
cld
add
mov
cld
push
nop
inc
add
add
ljmp
movntq
movl
test
jmp
int
sub
add
filds
cmp
je
movl
jne
mov
cld
jle
cmp
inc
call
add
add
add
xor
inc
add
mov
add
fmuls
cld
call
decl
add
push
es
inc
mov
decl
mov
call
inc
mov
add
mov
cld
mov
call
sub
cld
movb
xor
push
inc
mov
in
inc
lea
dec
cltd
mov
or
rorl
call
add
jge
mov
cld
lea
call
push
incl
mov
xor
add
cmp
jne
movl
add
mov
cld
test
mov
xor
test
mov
mov
mov
add
add
mov
add
addr16
je
mov
cld
sarb
pcmpeqw
xor
lea
add
cmp
mov
test
clc
pushl
lea
int3
inc
call
jne
xor
jmp
mov
mov
incl
pushl
aaa
mov
jmp
mov
mov
cld
clc
ret
test
pop
xchg
add
inc
decl
and
add
push
jbe
mov
or
inc
enter
inc
mov
int3
add
ss
rorb
inc
add
fadd
rolb
inc
fmull
inc
test
cltd
clc
xor
inc
cmp
pushf
mov
test
clc
dec
inc
mov
or
test
clc
testl
enter
ss
pushf
inc
decl
push
xabort
add
mov
mov
les
adc
dec
add
mov
lock
clc
inc
add
jge
xor
cmp
paddb
mov
test
dec
test
pop
xor
add
add
psraw
sub
mov
lock
shl
rolb
movl
jmp
pushf
inc
mov
xor
add
mov
enter
xor
add
sub
cmp
mov
test
cmp
pushf
xor
add
inc
dec
cmp
sarl
inc
jmp
mov
dec
xor
add
add
dec
test
out
rolb
add
dec
mov
mov
ret
xor
add
add
dec
inc
mov
ror
add
scas
mov
xor
xor
add
mov
clc
rol
mov
mov
dec
jbe
mov
call
rdpmc
roll
add
inc
rorb
jmp
inc
inc
mov
clc
test
clc
lret
inc
into
mov
clc
enter
sub
ret
mov
addr16
clc
add
loopne
dec
into
mov
or
inc
push
mov
in
cmp
ja
mov
inc
cltd
mov
clc
mov
xlat
lret
inc
into
mov
in
scas
lret
mov
mov
sub
mov
mov
clc
loopne
push
lret
mov
adc
jb
add
in
sub
cmp
mov
mov
add
mov
in
into
dec
xor
roll
xor
sub
add
mov
inc
xor
add
inc
xor
sub
test
clc
enter
incl
jmp
mov
inc
mov
cltd
lret
xor
mov
lea
xor
add
inc
dec
mov
addr16
inc
sub
inc
xor
push
mov
add
inc
decl
add
inc
mov
cltd
add
add
pushl
int3
xor
add
mov
call
mov
add
mov
in
ret
iret
enter
in
or
adc
push
dec
inc
mov
jb
mov
cld
scas
orb
movb
push
push
xor
mov
call
mov
in
jge
mov
int3
add
xor
dec
pushf
xor
add
mov
test
cltd
add
jmp
mov
add
mov
jmp
mov
rolb
add
xor
rorl
jb
add
clc
inc
jb
mov
mov
ret
xor
add
ss
inc
adc
inc
test
mov
cld
orl
jbe
mov
dec
mov
mov
mov
or
dec
int3
xor
add
mov
xor
add
adcb
add
inc
mov
xor
dec
mov
hlt
add
push
inc
dec
call
in
lret
mov
adc
inc
and
cmpl
cmpb
mov
cmp
jne
mov
mov
rcrb
or
dec
inc
add
or
test
xchg
mov
movsl
inc
cmp
pushf
orl
mov
into
decl
push
lret
inc
into
decl
push
into
call
lret
add
add
mov
clc
inc
inc
mov
push
push
add
mov
cld
mov
into
rorb
xor
jne
call
mov
mov
call
add
rolb
add
add
inc
push
cmp
mov
test
clc
test
addb
jmp
in
or
xor
hlt
mov
xor
add
inc
adc
pushf
inc
add
movsl
test
clc
incl
cmp
push
movsb
jne
push
clc
test
cmp
les
inc
push
aas
sbb
dec
add
inc
add
enter
add
add
out
sbb
dec
mov
sub
mov
add
cmp
or
incl
mov
mov
lret
inc
into
mov
int3
scas
push
mov
call
sub
mov
mov
ss
pushf
mov
faddl
test
mov
in
ret
add
add
mov
in
ret
mov
in
inc
rol
sar
or
add
add
test
clc
lret
inc
into
cmp
pushf
scas
mov
inc
cmp
pushf
mov
mov
clc
mov
mov
in
lret
ret
into
mov
scas
cmp
add
jmp
mov
mov
inc
enter
xor
add
cmp
shufps
add
dec
sub
cmp
ja
mov
lods
mov
inc
dec
mov
lret
rol
or
inc
scas
xor
add
add
inc
mov
inc
lret
mov
clc
lret
scas
ret
mov
hlt
push
scas
sub
mov
add
mov
movsb
inc
dec
xor
inc
rcrl
sar
rolb
xor
jmp
mov
xor
mov
rolb
test
cltd
shll
mov
xor
add
mov
add
inc
xor
rdpmc
roll
loopne
push
in
mov
adc
jb
add
jmp
mov
test
dec
dec
xor
add
dec
mov
dec
in
xor
xor
add
jbe
mov
test
dec
mov
loopne
inc
add
rol
scas
mov
mov
hlt
dec
inc
mov
loopne
lret
test
clc
scas
inc
mov
fdiv
roll
cltd
cmp
pushf
cmp
inc
mov
inc
dec
xor
add
loopne
dec
rorl
add
lock
ret
xor
mov
rolb
xor
call
enter
mov
fmul
push
dec
xor
ret
xor
dec
jne
mov
cld
loopne
push
add
incl
incl
mov
lock
lret
add
xor
inc
scas
mov
shl
inc
decl
call
ud0
adc
inc
xor
lock
add
ud0
sbb
xor
sub
push
add
mov
cld
inc
nop
mov
xabort
icebp
mov
lret
or
dec
pop
or
jb
add
inc
mov
fadd
ret
add
int
sub
add
inc
inc
mov
cld
mov
mov
clc
push
pushl
movb
int3
or
lea
insb
incl
push
movb
leave
les
in
call
inc
cld
mov
cld
xor
std
mov
clc
test
je
mov
cld
add
add
fiaddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
ljmp
leave
jmp
mov
jle
inc
nop
in
inc
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jle
inc
inc
leave
add
and
inc
jne
add
lret
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
jmp
jge
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
cmc
or
out
mov
pop
push
cmp
sar
incl
inc
in
jle
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
mov
mov
push
insb
push
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
ss
lea
mov
fadd
dec
lds
out
inc
lea
inc
dec
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
jmp
addb
mov
sub
add
js
data16
idiv
inc
fadd
mov
andl
flds
pop
push
jmp
push
jmp
addl
mov
inc
out
add
mov
outsb
inc
jle
idivb
mov
orl
jb
decl
mov
test
inc
rorb
adc
mov
mov
cmp
test
pushl
mov
add
jmp
pushf
decl
add
data16
add
add
test
inc
mov
mov
inc
cmpb
mov
add
push
mov
call
mov
data16
test
out
lea
test
inc
ljmp
decl
test
incl
test
rclb
test
inc
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
std
mov
ret
adcb
add
mov
ret
or
lea
loop
xchg
aam
out
mov
inc
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
cwtd
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
jmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
inc
test
decl
xor
add
inc
xorl
mov
lea
inc
lcall
pushf
roll
add
add
test
decw
mov
add
lea
push
rolb
xor
lea
test
decl
mov
dec
clc
call
lea
lea
test
popf
push
add
xor
cltd
mov
incl
push
push
inc
shlb
lea
call
test
incl
clc
call
jmp
inc
jae
add
mov
mov
data16
inc
lea
test
inc
dec
test
pushl
jnp
mov
mov
lcall
incl
pop
mov
mov
decl
mov
mov
test
incb
incl
ss
pushf
inc
mov
hlt
test
cmp
lock
test
clc
mov
lahf
lret
mov
add
add
rorb
mov
incl
cld
mov
add
jge
test
sbb
xchg
call
push
inc
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
cmp
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
cld
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
cltd
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
out
adc
jne
mov
fcomps
add
incl
mov
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
add
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
cmpl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pop
jmp
mov
xor
lea
ss
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
cltd
pushf
xor
jne
mov
icebp
icebp
shl
mov
inc
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
cmp
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
testb
dec
mov
mov
xor
mov
in
jge
mov
dec
inc
xor
inc
hlt
ss
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
ss
fdivl
test
push
add
cmp
setns
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
jne
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
push
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
in
and
or
in
xchg
add
add
push
inc
xor
add
push
push
inc
jmp
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
rol
call
jne
mov
inc
and
fs
bswap
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
cmp
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
idivb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
data16
pushf
inc
mov
hlt
test
mov
cmp
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
sti
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
cltd
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
data16
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
data16
add
data16
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
jle
popa
data16
into
addr16
add
cmp
add
cld
add
cmp
pop
or
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
xor
pop
mov
je
xor
mov
xor
pop
cmp
jne
mov
cld
push
pop
inc
stc
aaa
test
clc
test
xor
fs
or
decb
lret
aaa
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
data16
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
push
add
add
add
lret
lock
lret
cmp
pushf
jge
aaa
cld
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
cmp
add
mov
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
cmp
add
data16
dec
fisttps
add
ret
lea
add
ss
call
clc
inc
shll
cltd
push
xor
inc
cmp
jbe
mov
or
inc
test
cmp
in
hlt
push
push
push
push
mov
cltd
cltd
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
cmp
pushf
jb
add
inc
daa
inc
inc
xor
dec
cltd
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
cmp
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
ss
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
std
lock
inc
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
ss
pushf
pop
mov
call
in
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
incb
cmp
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
ss
pushf
push
movl
inc
cmpb
pushf
addr16
shl
dec
xchg
jmp
aam
test
mov
or
add
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
ss
pushf
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
clc
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
dec
pushf
mov
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
mov
push
ret
call
call
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
cmp
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
pushf
add
mov
xor
test
clc
dec
inc
xor
setl
lret
rol
dec
test
inc
lea
lea
mov
xor
bswap
rorb
roll
add
cmp
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
cltd
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
cmp
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
leave
call
call
in
jmp
and
call
pushf
inc
mov
pop
push
in
ret
and
mov
and
mov
or
lcall
or
decl
jl
adc
dec
cmp
mov
and
xor
test
jge
push
jmp
adc
dec
pop
ret
push
jmp
mov
add
adc
or
add
add
adc
std
dec
adc
outsb
adc
sahf
xor
add
adc
fs
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
adc
adc
add
push
adc
roll
int
adc
aaa
inc
inc
add
inc
inc
add
inc
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
push
adc
sbb
adc
mov
dec
adc
inc
or
add
adc
mov
inc
inc
add
inc
add
inc
add
inc
inc
add
inc
inc
add
push
add
imul
sahf
push
adc
jle
adc
jbe
adc
cmp
add
adc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
adc
dec
dec
adc
dec
popa
adc
adc
add
push
adc
hlt
pop
adc
dec
pop
adc
testl
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
xor
cmp
push
add
push
xor
xor
push
add
inc
pop
dec
push
push
add
pop
aaa
xor
xor
inc
pop
add
cmp
push
cmp
add
cmp
cmp
pop
inc
dec
inc
push
add
xor
xor
inc
xor
xor
xor
dec
xor
add
inc
pop
ss
pop
inc
push
dec
add
push
pop
inc
push
push
push
dec
add
inc
pop
xor
push
pop
pop
xor
push
push
pop
xor
push
dec
xor
xor
xor
inc
pop
pop
xor
push
dec
push
xor
pop
push
xor
inc
add
push
cmp
pop
inc
xor
aaa
xor
pop
inc
cmp
dec
pop
dec
add
pop
push
push
aaa
dec
pop
xor
dec
dec
add
xor
push
pop
push
inc
inc
inc
add
inc
cmp
push
push
pop
dec
inc
push
pop
inc
add
inc
pop
push
inc
pop
inc
ss
push
inc
dec
inc
add
inc
xor
dec
pop
cmp
cmp
push
pop
push
pop
dec
push
dec
dec
inc
pop
dec
xor
push
inc
pop
xor
add
push
pop
inc
push
dec
xor
pop
dec
xor
inc
inc
dec
pop
push
dec
xor
dec
ss
aaa
aaa
dec
dec
add
ss
inc
inc
xor
dec
ss
pop
dec
dec
inc
inc
dec
xor
xor
add
add
add
add
inc
add
dec
add
add
inc
add
add
xor
xor
pop
add
xor
dec
add
pop
add
add
dec
add
add
dec
add
dec
add
xor
xor
pop
add
inc
add
add
push
add
add
pop
add
xor
add
add
dec
add
add
pop
add
pop
add
add
add
add
xor
xor
pop
add
pop
add
pop
add
add
add
dec
add
add
add
push
add
pop
add
xor
inc
add
add
add
add
cmp
push
add
add
dec
add
add
dec
add
inc
add
add
xor
pop
add
add
add
add
add
push
add
xor
pop
add
inc
add
add
push
add
add
xor
xor
xor
xor
pop
add
add
add
inc
add
add
dec
add
add
add
add
add
add
cmp
dec
add
add
pop
add
dec
add
add
dec
add
dec
add
add
inc
push
in
dec
shlb
mov
sbb
sbb
add
push
cmp
jne
insl
dec
jb
pop
bound
gs
arpl
js
je
jno
jno
bound
jo
bound
