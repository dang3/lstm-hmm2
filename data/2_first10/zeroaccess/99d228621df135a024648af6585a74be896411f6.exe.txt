push
mov
sub
mov
adc
mov
mov
or
mov
sub
push
movl
mov
mov
mov
sbb
mov
and
mov
orl
mov
mov
add
orl
mov
add
mov
jmp
iret
inc
loopne
push
adc
fmuls
ret
ja
dec
inc
pop
xchg
mov
jmp
xlat
sahf
adc
in
mov
adc
ss
data16
mov
dec
inc
movsl
mov
pop
inc
xchg
mov
fdiv
ret
orl
adc
movsb
jge
dec
mov
and
cwtl
clc
pusha
lds
popf
mov
inc
push
mov
cli
imul
loop
push
stos
xor
notb
out
mov
cmp
xor
sub
jae
jp
call
jle
push
push
jl
adc
or
cmp
lret
xor
mov
aam
jne
push
ret
xchg
sbb
pop
cwtl
mov
test
xchg
in
mov
pop
sbb
pop
jbe
lds
lret
adc
lock
add
adc
aam
stos
jae
sub
sub
adc
and
xor
inc
imul
push
mov
push
dec
jae
xchg
outsl
shl
sbb
enter
and
shll
fmull
cli
scas
sbb
out
out
jle
push
jecxz
push
mov
out
xchg
rcl
push
push
loopne
xlat
leave
aas
push
call
xchg
adc
test
shlb
or
inc
or
loop
fadd
xchg
in
insb
lret
sub
dec
outsb
mov
xchg
mov
loop
mov
mov
lcall
cmp
xchg
jp
push
pop
lahf
lock
inc
rolb
mov
popa
mov
add
and
mov
mov
rolb
jp
aaa
ljmp
mov
leave
in
push
iret
mov
and
sbb
lret
mov
mov
out
sti
sbbb
in
in
in
xchg
cwtl
js
imulb
imul
mov
mov
jg
in
testl
mov
rcrb
loopne
cli
push
cmp
push
je
into
mov
sbb
fldl
dec
into
xor
jns
dec
mov
pop
es
insl
add
int3
xor
or
insb
inc
bswap
push
lahf
or
repz
or
gs
mov
dec
sbb
adc
scas
aaa
add
mov
lock
xorl
jae
jae
dec
scas
cmp
sti
scas
mov
popf
out
cmpsb
xchg
cmc
insl
add
dec
or
das
sbb
mov
mov
or
ret
mov
shlb
nop
or
or
fld
testl
pop
mov
inc
add
lcall
add
mov
adc
mov
cmp
mov
sti
shl
sti
inc
xor
js
sub
pop
xchg
adc
xchg
inc
cmpb
cmp
add
sti
icebp
loope
and
rcrl
xor
cmpsl
dec
push
add
testb
jb
insl
cli
xchg
mov
mov
dec
dec
stos
jmp
aad
imul
arpl
adc
sbb
cmpb
fcompl
stc
jmp
fisubl
mov
or
dec
jno
js
cmp
push
insb
add
fistps
hlt
fwait
das
jno
mov
or
inc
int
lods
mov
and
xchg
mov
lret
decb
pop
or
xlat
or
loopne
int3
std
jo
movsl
sub
test
lods
stos
xchg
jo
mov
ja
adc
add
xor
pop
fidivs
dec
jno
mov
xor
jne
outsl
xchg
sbb
roll
and
and
sub
dec
sub
cwtl
pop
pop
inc
inc
lock
xchg
cld
aad
pop
leave
sub
mov
add
cmpsb
mov
je
cmp
das
push
sahf
or
int3
lods
fisubl
mov
icebp
pop
repz
mov
xor
in
sbb
ds
mov
mov
mov
test
cmc
adc
jmp
pop
inc
and
xchg
mov
imul
sarl
pusha
sahf
aad
roll
cmpl
jae
cwtl
mov
icebp
clc
jo
adc
fcmovne
hlt
test
std
mov
jp
aas
movsl
and
jge
dec
jge
add
lds
mov
loop
bound
xchg
or
adcl
jl
adc
icebp
inc
cltd
cmpsb
in
ja
jle
jle
insl
outsb
sbb
stos
xacquire
inc
and
dec
xchg
dec
mov
in
test
xor
icebp
lock
mov
fs
popa
sbb
fwait
jge
clc
jge
out
and
fisttps
and
subl
push
mov
popa
rcl
push
int
aaa
iret
movsb
push
cmp
ss
push
xchg
add
or
in
or
js
cmc
adc
stc
call
add
xchg
sub
push
add
mov
fwait
js
push
mov
std
adc
lcall
add
call
inc
cwtl
cmp
add
or
addr16
pop
dec
inc
mov
jl
shrb
pop
pop
mov
xor
cs
in
pop
jl
filds
aaa
lahf
lds
jmp
rcrl
mov
add
sub
in
fcomps
insl
mov
gs
push
out
pusha
out
dec
pop
push
lea
xor
in
xchg
leave
mov
push
and
lret
mov
or
movsl
mov
loop
out
mov
lea
pop
and
add
roll
subl
jmp
outsl
imull
and
or
jmp
lret
mov
test
jbe
aam
stc
xor
popa
mov
mov
add
mov
xor
aaa
dec
sbb
data16
loop
sbb
or
sbb
int3
enter
das
dec
xor
cwtl
or
enter
sbb
call
cmpsl
push
mov
xor
aam
inc
or
jnp
push
push
scas
daa
adc
cwtl
mov
adc
cmp
aam
imulb
jmp
loopne
sub
add
dec
ret
and
in
cmp
addr16
pop
mov
pop
sub
mov
inc
out
adc
clc
add
xor
insl
fidivrs
arpl
imull
fcmovnb
mov
scas
call
test
sti
push
sub
es
dec
aad
ss
or
int3
mov
mov
xchg
or
sub
adc
dec
arpl
imul
mov
cli
pop
test
ret
sbb
cmc
jl
loopne
dec
in
cmp
ss
out
in
dec
lods
jmp
outsb
jnp
jle
mov
mov
or
rolb
pop
push
dec
jge
mov
out
add
aaa
fisttpl
enter
cmp
dec
and
inc
add
call
repz
into
fadds
cmpsl
leave
test
js
mov
in
aam
adc
jbe
fwait
es
daa
xchg
js
inc
scas
mov
inc
data16
mov
lret
jmp
outsb
in
cmpsl
lds
outsl
rclb
fndisi(8087
cmp
lret
das
xchg
xchg
shll
test
dec
lods
mov
mov
addl
sub
notl
mov
movl
sbb
add
mov
not
orl
orl
cmpl
movl
mov
jmp
mov
jg
pushl
pushl
call
sbb
sbb
sub
or
orl
lea
adc
mov
or
mov
and
mov
xorl
mov
adc
add
mov
dec
mov
mov
adc
jmp
mov
xor
js
mov
ja
sbb
dec
cmp
xor
push
ss
arpl
and
lret
shl
mov
xor
testl
sbb
inc
xchg
addr16
outsl
sbb
repz
outsl
push
xor
cmp
lods
ficoms
ffreep
push
andb
mov
mov
test
or
jne
ds
cmpsl
outsb
adc
insl
popa
ret
inc
jl
cmp
sub
push
mov
pop
adc
sub
sub
push
pop
pop
cli
clc
scas
gs
lods
mov
das
cmpsb
mov
sub
jg
xchg
fmuls
pop
push
mov
repnz
in
stos
pop
ljmp
je
xor
inc
test
push
in
insb
sti
add
popa
fdiv
das
scas
mov
sti
dec
and
pushl
pusha
cld
fldl
pop
insb
pusha
add
int
or
jae
jbe
sub
insl
xlat
mov
xor
jne
subl
adc
outsl
outsb
inc
in
mov
stos
inc
popa
sub
cwtl
inc
xor
fs
in
xchg
cmp
lock
pop
lods
jle
sub
sub
jge
in
jecxz
cmp
pusha
outsl
and
mov
and
ds
lret
xchg
js
jo
imul
cmp
add
sbb
jbe
dec
or
sbb
mov
mov
fistl
inc
jl
outsl
xor
fcoms
scas
inc
rcr
pop
xlat
adc
js
mov
ja
dec
int
stc
xchg
dec
cmp
lcall
out
mov
pop
inc
bound
xor
and
add
sbbb
lock
mov
aas
aas
cltd
mov
sub
pop
cmp
popa
outsb
xor
add
scas
ror
jle
bound
sbb
cmp
and
push
int
lock
pushf
push
jl
insb
fs
push
call
xor
popa
and
jne
add
xchg
rcrl
add
out
jnp
fs
xor
mov
scas
lret
das
push
bound
out
push
bound
push
fwait
es
pop
sbb
mov
mov
lcall
dec
xchg
andb
in
and
xor
xor
inc
clc
jl
mov
push
inc
call
add
pop
xor
shll
fiadds
dec
mov
loope
xor
jl
adc
loope
push
push
pop
sub
lds
jl
inc
icebp
pushf
lods
pop
andl
and
push
mov
jp
fcom
popa
inc
add
add
mov
mov
mov
mov
ret
clc
add
mov
inc
ret
jne
in
xchg
cmpsl
les
inc
popf
and
inc
ss
popa
nop
aaa
frstor
mov
pop
sub
inc
mov
sarb
push
push
mov
das
cmovae
out
roll
inc
sub
out
push
mov
pop
mov
addr16
cmp
imul
pop
push
or
add
popf
insl
fimuls
pop
outsb
jbe
push
dec
mov
lods
psubb
sahf
cld
jbe
aas
xchg
and
mov
push
sarb
push
dec
jno
jo
movsl
scas
mov
fwait
je
test
mov
mov
out
sti
lea
out
roll
ror
push
push
and
repz
call
or
mov
mov
lds
mov
xchg
mov
inc
clc
mov
and
ds
mov
push
out
arpl
mov
cmp
insl
mov
lcall
xchg
bound
adc
cmc
insb
cmp
push
lcall
loopne
pop
dec
dec
xchg
push
pop
xchg
enter
sbb
lahf
inc
pop
je
cld
xor
imul
push
int3
pop
and
fildl
push
mov
je
cmp
jne
stos
mov
insb
jmp
aas
sub
movsb
inc
js
jg
aas
std
ljmp
inc
sarb
cmpsb
sti
add
mov
jecxz
iret
sub
lea
push
xchg
xlat
insl
mov
int
pop
sbb
rcrl
jmp
or
sub
sub
mov
mov
cmp
dec
icebp
adc
jle
add
cmp
aaa
inc
mov
cltd
sbb
into
or
sub
call
fldl
les
shll
nop
clc
or
or
mov
les
and
inc
pop
lock
add
ficoml
loopne
mov
push
insb
xchg
dec
lea
dec
lahf
je
xor
mov
mov
dec
xchg
lods
jbe
inc
and
mov
push
dec
bound
adcl
ret
stc
pop
psubb
sbb
xor
setno
adc
xchg
inc
add
sbb
push
xchg
push
pushl
hlt
xor
or
int3
mov
mov
xchg
lods
xor
cltd
sbb
dec
sbb
and
jp
out
ret
lea
xlat
out
and
scas
scas
mov
ret
jbe
inc
cwtl
mov
clc
ljmp
mov
stos
cs
pop
push
add
pop
jae
popf
jecxz
aam
mov
fmul
cmc
ds
push
daa
popa
dec
mov
and
or
int3
and
cmp
sub
jmp
jg
mov
mov
jb
adc
js
mulb
sbb
sub
inc
das
int3
push
and
int
stos
or
test
inc
xor
push
and
mov
sbb
or
sub
shrl
shrl
inc
xchg
divl
dec
sub
sbb
or
jl
push
incb
pop
insb
xor
jle
push
pop
xor
fs
jl
repz
divl
aas
lea
subl
pop
xchg
cmp
pmulhuw
jp
stc
add
and
scas
pop
adc
push
mov
add
cs
shl
and
mov
jno
fbstp
cmp
icebp
xor
push
xor
aaa
add
and
arpl
fcoml
and
jae
addl
inc
in
jp
test
jno
in
jnp
negb
sub
add
mov
pop
scas
int
push
ss
ja
scas
pop
jae
repz
sub
adcl
lret
mov
mov
inc
mov
int3
xchg
clc
lret
out
xor
test
dec
lds
xchg
jecxz
rcll
push
xchg
vmovss
adc
dec
sahf
push
or
enter
add
or
jo
cwtl
rcll
rclb
movsb
lods
pop
xchg
ret
mov
aad
or
insb
int3
rorb
jl
ret
jb
out
and
jg
mov
sub
pop
aaa
push
adc
mov
shrd
adc
shr
mov
jmp
mov
lock
popf
mov
scas
testw
mov
test
push
hlt
sub
jnp
or
in
xor
xchg
inc
les
jne
xchg
xchg
push
sbb
cmp
sbb
aas
mov
push
daa
add
jnp
inc
dec
mov
pop
mov
lret
sarl
test
add
lock
sub
clc
mov
ss
mov
mov
lcall
push
sub
filds
dec
in
and
and
sbb
adc
sub
pop
lea
push
mov
loop
in
mov
adc
fsubl
stc
test
adcl
mov
inc
adc
movsl
fsubrs
fbld
jb
into
mov
sti
inc
sbb
or
pop
out
mov
in
pop
inc
lods
push
xor
push
xor
and
ljmp
xor
ret
pop
mov
pop
xor
sbb
mov
arpl
inc
shl
mov
push
xchg
dec
jge
push
sti
xlat
mov
popa
fmuls
and
out
mov
xor
popf
jmp
cwtl
pop
push
pop
lock
pop
gs
inc
dec
and
pop
mov
sub
repz
mov
stos
sbb
jnp
jmp
mov
bound
or
ret
insb
leave
testb
cmpsl
lock
xchg
or
notl
popl
call
shlb
mov
outsb
jno
loopne
jb
imul
fisubrs
xlat
mov
sub
inc
cwtl
inc
xchg
inc
call
insb
add
xor
sarl
je
adc
or
pop
mov
loop
mov
dec
push
mov
jb
jnp
pop
lock
movsl
shlb
lret
cmp
rcll
lods
jmp
leave
lret
and
js
mov
call
sub
scas
lods
mull
cli
cs
rcll
repz
aad
loopne
lret
mov
adc
mov
cmp
dec
push
fwait
out
add
and
mov
xchg
mov
cld
cmp
out
mov
mov
xor
pop
xor
mov
add
inc
rcl
jno
cmp
pop
andb
xor
ljmp
jnp
jge
inc
xchg
mov
dec
xchg
xchg
subb
das
shl
mov
test
lahf
je
hlt
inc
and
and
sub
lods
repz
jl
sbb
daa
xchg
ja
mov
icebp
scas
or
lds
mov
pop
ljmp
sub
cmp
inc
fisubrl
mov
icebp
mov
outsl
inc
jle
fiaddl
out
bound
inc
mov
inc
stc
addr16
sbb
pushf
and
push
js
jno
syscall
and
mov
test
leave
imul
cmp
and
js
sbb
push
cld
push
shrb
test
cmpsl
das
fdivl
gs
inc
call
fs
outsb
mov
jnp
cs
adc
testb
iret
xor
in
pop
outsb
movsb
mov
lret
or
adc
adc
nop
or
dec
dec
outsl
add
loop
repz
fisttpll
push
xor
inc
pop
shl
fimull
jle
test
jno
sbb
jbe
adc
xor
push
adc
out
jb
stos
mov
inc
cli
xchg
sub
cs
or
loop
nop
shll
inc
pushf
push
and
push
add
push
aas
sub
or
adc
mov
dec
icebp
sbb
adc
lea
xchg
dec
mov
imul
mov
push
push
add
je
jl
fildll
stc
addr16
fwait
ret
sub
cmp
bound
lret
mov
and
pusha
adc
jo
rclb
lods
jne
dec
mov
mov
pop
into
jae
es
sub
pop
pusha
pop
out
sub
out
jne
or
sbb
movsl
loopne
fnstenv
int3
cbtw
pop
mov
cmpsl
and
adc
bound
call
jne
and
jb
sti
scas
negl
mov
inc
mov
pop
push
mov
imul
aaa
daa
mov
mov
mov
xor
mov
sbb
add
xor
add
fldlg2
in
adc
cmpsb
dec
sub
movsl
jg
repz
test
imul
pop
push
lods
test
push
sub
add
lods
inc
lods
inc
xchg
mov
repz
xor
pop
sar
sub
shll
pushf
jbe
xor
jecxz
sub
cmp
sub
mov
cmp
cmpsb
xor
pushf
xor
data16
cmpsl
cmp
fcmovnb
dec
push
and
imul
cwtl
in
cmp
repnz
lock
cli
cmp
cmpsb
xchg
pop
xchg
xchg
jae
addr16
and
test
testl
sbb
sbb
clc
xor
add
pop
sub
je
sahf
lds
hlt
add
repnz
cmp
mov
int3
lret
or
jl
xchg
xchg
add
jg
add
sub
in
xor
inc
xor
xchg
pop
adc
xchg
gs
inc
mov
movsb
int
push
mov
lret
sbb
jge
inc
sub
mov
daa
addr16
out
mov
push
mov
cmp
pop
or
mov
int3
mov
int3
push
lcall
xor
push
adc
push
divb
fcom
ret
lcall
mov
push
movl
dec
aas
add
mov
mov
lea
push
sub
or
cmp
push
sub
sub
mov
mov
push
out
sub
fnstsw
lret
xor
sbb
dec
push
enter
shr
dec
fists
or
test
jne
cmp
mov
icebp
pop
mov
out
sub
es
aaa
jecxz
adc
or
gs
add
or
pop
pushf
sub
mov
cmp
loopne
dec
jl
xor
pop
sub
pop
mov
mov
or
inc
mov
xorb
xchg
mov
fdivrs
aaa
imul
es
popa
cwtl
or
cwtl
mov
fsubl
adc
mov
dec
arpl
sub
push
fisubrl
cld
jae
or
iret
fbld
lods
icebp
shlb
shll
cli
xchg
cmpsb
lods
stc
xor
add
sbb
jne
loop
push
sub
mov
jl
dec
add
std
add
ds
fcmovbe
and
xchg
popa
sbb
test
pusha
clc
out
pop
scas
mov
nop
lret
mov
addr16
pop
dec
push
mov
fadd
and
jne
mov
andl
xor
adcl
xor
or
cmpl
movl
movl
movl
jmp
movl
not
jg
pushl
push
push
push
pushl
push
pushl
call
sub
xorl
andl
andl
addl
addl
adcl
movzbl
adc
jmp
sti
loopne
stos
dec
or
xor
hlt
adc
ja
adc
bound
push
lds
popa
les
dec
inc
insb
loope
pop
insb
or
addb
cli
push
jmp
in
mov
gs
addr16
hlt
pop
fs
dec
sbb
shll
fsubrs
lods
pop
jecxz
in
and
add
cld
dec
push
push
push
mov
xor
mov
sbb
flds
or
xor
jge
mov
bound
and
push
dec
xor
imul
js
int
pop
movb
lds
out
test
push
dec
mov
or
sub
loopne
outsb
sbb
sub
push
outsl
test
mov
pop
inc
addl
ds
push
mov
rcrb
bound
aad
fisubrs
insb
insb
mov
fmull
cs
outsl
xchg
sub
jl
mov
imul
mov
in
andb
das
fnstenv
fildll
aad
loope
loop
push
dec
mov
orl
fimull
pop
inc
sbb
in
xor
loopne
icebp
pop
rclb
or
add
repz
out
pop
mov
lods
push
push
pop
jg
pop
xor
pop
pop
xchg
xchg
mov
pop
aam
scas
cmpsb
je
lret
ret
es
sub
mov
cltd
sub
adc
or
gs
scas
pop
call
adc
pop
jmp
mov
jb
and
lea
dec
mov
or
pop
and
mov
dec
int
push
shrl
aas
adc
movsb
mov
out
mov
loopne
mov
pop
es
xchg
orb
mov
xchg
xor
pusha
test
rclb
push
xchg
iret
pop
call
adc
imul
jmp
popa
lahf
jp
aas
mov
insb
mov
movsbl
into
adc
ja
jbe
dec
aad
lock
mov
xchg
mov
cmp
jae
hlt
ficomps
loop
push
test
push
mov
in
sar
and
add
jb
push
pushf
inc
in
xor
fwait
je
shll
es
les
jle
cli
dec
gs
pop
mov
jecxz
jl
add
call
dec
sbb
pop
scas
outsb
in
jecxz
mov
stc
xchg
fdivrs
dec
outsb
pop
jge
shl
in
inc
pop
data16
mov
add
stos
je
lods
dec
mov
add
mov
mov
daa
rclb
push
mov
in
and
fldl
add
out
shlb
ds
mov
cs
push
jmp
lret
push
stos
mov
icebp
inc
std
mov
mov
sub
xchg
mov
xor
call
lret
jns
mov
inc
inc
or
aad
sub
popa
sti
lcall
xchg
sbb
inc
cmp
je
pushf
stc
push
movsb
mov
cmp
cmp
dec
and
pop
inc
jmp
inc
movsb
dec
aas
and
xchg
mov
mov
iret
lret
jbe
mov
jnp
frstor
add
sti
push
insb
stos
pop
push
push
in
inc
mov
or
sub
lock
not
rcrb
mov
mov
jo
mov
cmpl
sbb
mov
xchg
add
repnz
lret
pop
cltd
repz
jg
lods
pop
mov
mulb
clc
inc
inc
aaa
adc
jo
repz
fnstcw
sti
fcmovnbe
or
adc
push
inc
pop
sbb
loop
lock
add
mov
xchg
xchg
push
rcl
dec
pusha
arpl
jecxz
mov
movsl
mov
sub
rcr
jl
cld
add
movsl
aam
adc
cmp
jle
test
jle
xchg
hlt
inc
mov
cmp
int3
les
jg
mov
cs
sbb
and
cmpl
pop
push
mov
mov
idivb
loopne
test
pop
pop
je
cmpsl
out
xor
or
adc
inc
cmpsl
repnz
mov
xor
dec
cmpb
or
inc
hlt
sbb
repnz
push
xchg
xlat
loopne
mov
cmp
shl
cli
xchg
sarl
adcb
xchg
pop
jnp
rclb
aaa
mov
pop
dec
fisttps
add
in
fbld
cmp
xor
push
inc
clc
cmp
pop
adc
jae
fisubrs
push
cwtl
pop
gs
xchg
inc
mov
or
mov
stos
and
pop
pop
notb
dec
mov
stc
adc
loop
push
sahf
pop
mov
ja
nop
add
enter
aam
aaa
pop
cmpsl
in
cld
xor
mov
pop
cmp
mov
xchg
in
add
mulb
and
jl
and
cmp
je
xor
adc
ds
jge
divb
in
lock
sahf
fmull
leave
jle
jo
add
ds
mov
or
fucomp
ljmp
cmp
mov
orb
sub
cltd
fwait
cmpsb
lods
mov
fidivrs
movsb
bound
push
mull
xor
mov
inc
pop
loopne
sub
repnz
aam
push
jecxz
sub
and
lods
xor
insb
mov
sbb
js
sbb
inc
push
or
or
xchg
repnz
and
mov
aaa
es
jo
je
inc
ret
loope
and
push
pop
sbb
sarb
icebp
psadbw
mov
dec
or
test
or
imul
leave
pop
punpckhwd
adc
leave
je
pop
inc
or
jp
pop
inc
dec
push
les
xchg
or
lcall
dec
rcll
mov
jl
les
xlat
mov
clc
sbb
mov
test
jp
sbbl
xor
pop
inc
cmp
or
jle
jne
xor
lds
sbb
enter
pop
cmp
push
fbstp
jno
xor
pop
dec
pop
sub
xchg
pop
xor
xchg
mov
icebp
push
cs
lcall
and
fdivl
and
lock
mov
pop
add
cmpsl
xor
into
fsubr
mov
sahf
xchg
cwtl
out
neg
fcomp
leave
sbb
stc
or
fld1
shrl
mov
pop
or
adc
xchg
rcll
inc
jns
loope
dec
or
xchg
cli
adc
cmp
xor
xchg
dec
inc
add
orl
cli
cmpsb
iret
lcall
daa
cmp
in
cmp
inc
sti
std
or
out
push
or
jns
ficompl
call
ret
xor
les
mov
shlb
mov
std
les
and
sbb
mov
aad
sti
cs
mov
add
rolb
mov
adc
leave
int
push
lods
repz
xchg
stos
mov
icebp
imul
popf
ds
js
or
mov
jne
dec
inc
dec
jle
inc
mov
or
movl
movl
sub
movl
movl
and
movl
movl
movl
xor
or
adc
movl
cmpl
movl
mov
jmp
not
jl
push
pushl
pushl
push
call
add
sbbl
add
sbbl
xorl
sbbl
notl
or
movl
addl
movl
movl
movl
mov
or
mov
movl
dec
movl
movl
cmpl
movl
movl
movl
movl
jmp
mov
jge
push
call
movl
orl
orl
add
xorl
xorl
xorl
and
movl
cmpl
movl
mov
jmp
mov
mov
jb
push
pushl
push
push
pushl
push
pushl
push
push
pushl
pushl
call
orl
sbbl
adc
addl
movl
sbbl
movl
add
movl
jmp
and
jnp
sub
mov
xor
aam
ja
bound
add
mov
mov
ljmp
mov
sbb
mov
clc
xorl
or
cwtl
mov
cwtl
loop
cltd
in
mov
xor
sub
rclb
xor
cli
pop
xchg
pop
inc
pop
pop
mov
sub
jae
mov
push
movsb
mov
mov
xorb
repnz
test
mov
call
fnstcw
inc
cmpb
ds
xor
divl
or
mov
pop
andl
jbe
xor
std
inc
sub
pop
movsb
jg
jg
into
pushf
xor
xchg
outsl
sbb
out
out
clc
xchg
lret
inc
out
jp
cmpsl
dec
fdiv
lahf
popa
lods
jno
and
lods
and
call
sbb
cli
cs
mov
inc
insl
jl
pop
adc
push
fwait
lahf
shll
xchg
daa
into
addr16
and
push
ljmp
cltd
mov
mov
push
mov
in
iret
stos
ret
pop
inc
stos
icebp
mov
call
cwtl
lcall
cwtl
adc
pushf
ss
data16
sub
icebp
lods
js
in
in
push
mov
sub
fsubl
rcrl
mov
push
arpl
pusha
xchg
pop
fcompp
mov
adc
jg
ja
pop
arpl
leave
outsl
movsl
lock
insb
lods
pop
loopne
sbb
popa
xor
or
fiadds
jp
sbb
adc
pop
inc
test
adc
cltd
mov
or
pop
fsts
dec
scas
fnsave
sahf
push
movsb
jl
inc
or
stos
lea
jbe
cmp
jmp
test
dec
lcall
xchg
insb
lcall
jno
cmpsl
lock
cld
outsl
sub
push
stos
popf
jle
std
add
lcall
or
push
test
pop
fidivl
js
adc
loope
gs
sub
repnz
sbb
lock
adc
out
mov
ret
cmp
jno
adc
push
or
inc
pushf
scas
in
jbe
fmuls
cmp
in
and
mov
push
add
xchg
aam
jbe
cmp
inc
stos
push
sub
ss
ret
pusha
mov
mov
das
dec
mov
add
das
and
fidivrs
dec
insb
fwait
xchg
sbb
lcall
xchg
stos
push
je
movsb
test
pusha
pop
push
mov
sbb
daa
inc
arpl
mov
pop
test
pop
repz
jl
jns
xchg
test
lods
outsl
aaa
jae
inc
je
addr16
mov
xor
lods
xchg
ja
imul
movsl
movb
sub
xor
cmp
jo
pop
push
sbb
sbb
jbe
daa
cld
lahf
addr16
dec
jg
in
lods
pop
jb
cmp
loop
xor
jae
sbb
and
sbb
insb
clc
add
addr16
arpl
mov
mov
sub
xchg
fildl
arpl
movsb
pop
mov
xchg
or
scas
insl
jo
add
std
shrl
jns
push
inc
xchg
mov
mov
js
cmp
sbb
mov
mov
xor
mov
rorl
add
notl
loop
in
and
cmp
inc
mov
jb
adc
aaa
and
fsts
mov
push
jge
in
je
out
aas
daa
inc
lahf
aad
push
or
push
int3
push
xchg
pop
das
je
scas
add
loopne
cmc
jno
call
mov
push
addl
mov
into
mov
ss
cmp
js
loopne
adc
jno
into
shlb
ja
dec
mov
les
out
mov
sub
pop
pop
xor
push
mov
cmp
adc
dec
pop
and
movsb
imul
push
mov
push
jb
push
lcall
push
mov
mov
xchg
mov
cwtl
mov
cmc
jno
jg
mov
out
or
inc
push
sarl
lcall
ud1
mov
imul
jns
sbb
lahf
sub
or
movsl
xchg
test
dec
dec
sub
inc
or
cmp
shll
fmul
xchg
pop
mov
in
in
cmp
jg
dec
sub
inc
push
cltd
cmp
arpl
mov
push
les
mov
dec
mov
data16
stos
and
dec
xlat
jno
aad
push
sahf
insb
test
push
push
daa
dec
outsb
in
mov
dec
stc
rol
lcall
in
shlb
sub
jnp
mov
jl
mov
adc
movsl
pusha
sbb
cwtl
add
inc
pushf
jmp
pop
add
call
loopne
sbb
mov
enter
xchg
aas
pop
fisttpll
jbe
int
test
iret
and
shll
out
std
lahf
pop
aaa
out
aas
pop
stc
pop
aas
in
xchg
lods
outsl
je
jae
movsb
bound
and
push
mov
sub
aas
mov
js
aaa
sbb
and
xchg
xlat
std
shll
mov
dec
jns
js
xchg
pushf
and
cli
frstor
shl
and
andb
jge
aaa
and
xchg
dec
adc
stos
jl
xchg
test
pop
rcl
pop
xor
das
ja
sub
xor
xchg
repz
push
and
pop
pop
roll
call
add
in
loopne
jg
cmp
pop
jb
xchg
arpl
gs
or
aas
pop
fwait
pop
cwtl
mov
jge
iret
and
jp
pop
fdivp
or
push
push
ret
and
mov
and
fbld
sub
sub
dec
mov
and
repnz
in
fistps
cmpsb
or
lods
sub
das
sbb
les
aas
in
xor
jmp
xchg
mov
das
rorb
sbb
cmp
xchg
mov
pop
leave
inc
out
imul
outsb
sbb
adc
mov
xchg
bound
xor
cwtl
adc
lds
xchg
ret
ficoms
pop
xchg
sub
push
and
dec
cmp
and
cmc
test
out
mov
or
xchg
sbb
imul
std
dec
in
add
mov
in
pop
add
jb
cmpsb
lods
cs
outsb
mov
icebp
inc
in
xor
hlt
hlt
jl
inc
jns
xor
push
push
jp
je
test
pop
inc
adc
iret
jbe
pop
repnz
push
out
in
xchg
cs
sahf
pop
push
popa
mov
fcompl
jno
std
add
add
inc
lahf
aaa
out
es
push
xchg
popa
push
fwait
shr
inc
ljmp
push
aaa
push
fimull
mov
jnp
je
js
mov
das
shr
add
mov
jo
das
dec
or
inc
or
push
inc
push
in
imul
sbb
stc
insl
ficomps
sbb
sbb
bound
push
cld
inc
lret
out
test
aam
push
add
inc
movl
xorl
movl
mov
xor
movl
not
movl
mov
addl
jmp
in
outsl
dec
gs
notb
inc
test
cmpsl
les
ja
or
pusha
dec
ret
fucomp
sub
cmpsl
adc
test
into
mov
and
mov
popa
dec
mov
es
ret
rorb
mov
lret
push
loope
mov
fidivl
je
pop
into
movsb
or
push
ds
mov
scas
and
sahf
sub
testl
push
loopne
and
mov
pop
adc
pushl
inc
in
ficompl
lret
fnstenv
sub
lret
shrb
sub
sbb
dec
adc
pop
arpl
loope
cld
sub
adc
xchg
sub
call
adc
mov
outsl
aad
add
mov
mov
mov
or
in
loope
and
mov
stos
push
into
dec
mov
in
push
loopne
int
pop
xchg
or
dec
lock
add
clc
cmpsb
in
jnp
sbb
fs
ja
lret
adc
pop
or
mov
cwtl
nop
dec
inc
jae
mov
pop
dec
pop
cmp
dec
jns
push
cwtl
mov
mov
xchg
fcomi
sub
adc
in
loop
mov
aaa
mov
repnz
stos
pop
idivl
fwait
xchg
lret
cmpsl
out
adc
or
subl
sub
mov
inc
icebp
and
dec
push
shrl
lock
add
ret
sbb
js
stos
add
pop
mov
rcrb
in
and
sbb
xchg
push
out
ljmp
lret
hlt
ret
xor
sub
add
pop
jno
lods
leave
jbe
loope
xchg
popa
sbb
sub
mov
adc
cmp
sbbb
sub
or
mov
stos
lds
cmp
fistps
lret
and
mov
xchg
push
outsb
cld
stos
fcmovnbe
jne
push
mov
xchg
out
and
imul
sub
cmpsl
add
push
pushf
sub
shl
jnp
mov
scas
fisttpll
inc
mull
bound
repnz
hlt
mov
mov
fisttpll
cwtl
mov
cmp
cld
and
ss
pushl
mov
mov
sub
adc
call
push
in
push
push
pop
sbb
js
daa
lret
or
jge
pushf
mov
test
pop
gs
repz
push
loop
lret
subl
xor
xlat
mov
push
cs
daa
adc
or
dec
shrb
stc
push
iret
pop
notb
add
dec
cmp
aas
inc
inc
stos
push
mov
mov
ja
jecxz
ret
cmp
or
jle
mov
adc
mov
andb
mov
scas
inc
xchg
lods
xchg
aad
or
insb
sbb
cmp
and
mov
lds
mov
inc
rolb
or
xlat
stc
or
scas
daa
jne
out
and
xor
xchg
push
xor
iret
cmp
sbb
fwait
and
into
push
fistps
ja
addr16
ret
fldenv
incl
and
pop
scas
inc
loope
out
and
repz
xor
fdivrs
out
adc
fidivrl
outsl
push
bound
sbb
insb
insb
lcall
sahf
jnp
fstpl
jns
repnz
mulb
mov
adc
or
sbbl
xor
out
mov
inc
subb
hlt
push
cwtl
cmp
aaa
sub
imul
cmpsl
dec
call
dec
rcrl
jg
add
and
xor
and
xchg
int
aad
adc
mov
movsl
jge
test
and
mov
and
pop
cs
lcall
sbb
dec
ret
hlt
adc
pop
mov
jbe
add
test
mov
jg
dec
mov
inc
sahf
or
rorb
or
loop
mov
cmp
call
cwtl
fstps
mov
adc
das
cmpsl
out
test
mov
lea
xchg
cmp
inc
xor
in
cld
mov
dec
adc
lea
push
and
sub
stc
test
push
in
xchg
fnsave
inc
dec
jle
add
fdivl
jmp
cmp
mov
adc
enter
mov
sub
jns
sub
cmp
jmp
cmp
push
mov
or
scas
mov
shrb
xchg
push
dec
cmc
xchg
out
adc
ljmp
fs
pop
andl
add
mov
pop
call
data16
pop
movl
dec
add
xor
in
and
data16
scas
scas
lahf
data16
dec
adc
lea
int
sub
inc
loop
sti
or
rolb
cld
imul
pusha
lret
pop
je
ljmp
icebp
sub
lods
push
ds
mov
or
jle
scas
data16
dec
mov
mov
lods
inc
lods
cmp
pop
cmp
xchg
sahf
push
mov
lret
stos
dec
int3
inc
add
jp
shrl
and
dec
mov
popf
lods
cmpsb
lea
cmpsb
dec
pop
repz
insl
and
je
cmc
or
sbb
ret
inc
out
mov
fcoms
dec
stos
mov
or
int
jle
dec
push
imul
cmp
mov
sbb
cltd
push
pop
jnp
push
mov
fldt
push
dec
dec
mov
push
and
int3
mov
mov
mov
enter
sahf
stos
add
popa
popf
mov
leave
or
repz
lock
pop
mov
jp
xor
pop
pop
inc
das
dec
add
div
pop
cmp
insl
imul
push
cltd
leave
mov
adc
pop
test
jno
fisubs
push
mov
aaa
pop
dec
xor
inc
or
push
pop
shl
rorb
sbb
add
mov
mov
dec
push
inc
fidivrl
out
sahf
mov
fcmovu
sbb
inc
push
cmp
leave
into
mov
test
mov
pop
jbe
mov
mov
push
pop
sbb
pop
push
cmpsl
pop
stos
fcmovnb
sub
pop
add
inc
add
jp
ss
dec
loopne
ss
fwait
aaa
repnz
mov
lea
in
xchg
dec
sub
sahf
lahf
cli
daa
add
adc
es
sub
xchg
add
jbe
xchg
pop
arpl
xor
jo
cmpb
adc
jnp
int
iret
fucompp
and
pop
test
test
sbb
pop
and
mov
mov
push
stos
pop
fidivl
test
imul
xor
stos
mov
call
rorl
into
sub
pop
jns
inc
orl
jbe
pop
inc
pop
loop
pusha
cltd
ss
xchg
xorb
rcrb
mov
mov
orl
push
adcl
push
andl
push
push
adcl
call
adc
mov
subl
mov
xor
mov
sub
mov
movl
jmp
mov
daa
xchg
gs
or
mov
mov
ja
clc
cmp
fcmovu
data16
adc
lods
les
mov
and
and
clc
cmp
repz
inc
arpl
out
push
cmp
aaa
adc
leave
bound
inc
jle
xlat
jmp
pop
andl
xchg
mov
loop
ret
xchg
faddl
add
pop
test
int
jb
jl
mov
fadds
add
cmp
daa
dec
mov
lahf
pop
pop
jmp
pusha
jmp
mov
fisttpl
mov
jle
cmc
cltd
stos
movsb
inc
sarb
test
mov
add
adc
push
scas
test
jns
adc
push
jmp
test
das
inc
fxch
jge
jnp
or
aaa
cmp
imul
xchg
dec
call
xchg
cmp
add
jno
xchg
ret
adc
roll
sub
lods
pusha
imul
fiadds
lret
cmp
shrb
mov
jp
adc
dec
mov
pop
add
out
push
sub
cmp
in
subl
aad
pop
and
jg
fsubs
mov
xchg
sbb
in
inc
popa
pushf
add
push
cld
ret
cmpsl
mov
aad
cmpsb
cmp
cmp
jg
sub
dec
push
jmp
ret
lret
push
hlt
sub
mov
mov
leave
lds
cs
push
jp
xchg
lea
mov
cld
stc
clc
sub
add
cmp
cmc
scas
cmpsb
mov
sub
xchg
jmp
jmp
add
mov
aas
pop
inc
push
popa
inc
adc
cmc
and
sub
xor
mov
fs
in
pop
jo
scas
pop
icebp
mov
xchg
mov
cmp
jle
push
lcall
add
or
sub
fbld
xlat
outsb
jg
xchg
out
jns
pusha
std
mov
pop
rolb
pop
add
mov
scas
test
cs
jmp
movsb
into
mov
in
rclb
sub
bound
jno
fcmovnbe
lock
lds
adc
jae
mov
insb
xchg
bound
inc
mov
mov
push
jp
push
lretw
or
in
mov
xlat
sti
stc
repnz
daa
popa
jbe
loope
xor
ljmp
js
or
mov
xchg
jbe
cmpl
cmp
dec
popf
pop
scas
or
lcall
std
mov
ds
insb
les
sti
sbb
test
mov
in
push
mov
pop
aaa
push
jns
cmp
fistpl
call
hlt
cmpsb
xor
leave
popf
xor
and
lret
mov
pusha
fsts
jnp
cs
or
aad
add
ljmp
fdivrl
or
nop
mov
es
xchg
xor
fwait
cmpl
cld
sbb
xchg
stos
jne
outsb
mov
mov
cmp
inc
aas
lods
jae
jge
sbb
dec
setg
test
jnp
sub
cmc
int
jmp
mov
scas
pusha
fisubrs
scas
jae
xor
push
lret
popf
xor
jnp
dec
movsb
jo
std
rcll
cmpsb
jge
mov
stos
xchg
mov
loop
clc
or
or
movsl
xor
js
lds
push
mov
adc
inc
mov
add
mov
loope
dec
mov
out
mov
nop
xor
pop
pop
mov
mov
jae
dec
xchg
imul
mov
mov
arpl
das
add
sahf
addb
jb
rcrb
xchg
and
test
and
add
mov
xchg
xchg
scas
js
push
ljmp
add
push
xor
scas
ficoms
xchg
mov
jbe
pop
inc
jnp
inc
popf
ret
xchg
xchg
push
hlt
ljmp
push
repz
or
xchg
ucomiss
repnz
lods
inc
stc
push
aas
adc
xor
jge
sarb
push
fmull
out
cmp
cmp
mov
xchg
sbb
jmp
or
jp
arpl
jae
cmp
repnz
sbb
fcmovu
fdivrl
sbb
loopne
sbb
popf
dec
nop
mov
les
loope
pop
xchg
mov
test
push
mov
flds
mov
xlat
jnp
popf
sbb
cli
aas
add
lret
xor
push
mov
ret
jl
fcmovb
push
bound
js
std
fbstp
cmp
pop
xchg
and
and
pop
adc
mov
sub
adc
mov
pusha
fs
lret
pop
adc
xor
outsb
adc
jge
scas
inc
mov
jb
test
add
das
inc
cmpsl
pop
addr16
lret
mov
mov
and
imul
fistpll
cmpsb
ljmp
stc
into
mov
push
mov
pop
into
lods
fstl
jno
sahf
stos
add
clc
jl
ret
jns
jecxz
cmpsb
dec
test
jns
push
scas
ljmp
or
stos
fldl
pop
mov
mov
mov
jno
xchg
test
and
rorb
and
sbb
sbbl
scas
push
pop
sub
inc
cld
pop
ja
call
daa
pop
xchg
sbb
stos
mov
lret
lahf
push
xchg
fdivs
or
mov
iret
inc
fistpll
pop
pop
cmp
push
stos
out
pushf
pop
xchg
cmp
mov
jb
aaa
popf
lods
xchg
adc
jle
popf
loopne
mov
dec
shlb
loope
jl
add
adc
lret
outsb
mov
jl
add
adc
and
fimull
loop
inc
fnsave
in
dec
popa
cmp
inc
shrl
or
sbbb
movsl
movsl
iret
lods
add
sbb
mov
sbb
mov
in
in
inc
das
ljmp
shrl
cmp
jo
stc
sub
add
add
mov
loopne
out
inc
div
mov
in
and
pushf
pop
xor
adc
insb
imul
dec
mov
ret
mov
and
adc
push
push
je
adcl
pop
mov
dec
jl
lock
push
mov
or
int
into
push
inc
js
mov
push
mov
xlat
push
inc
xchg
data16
iret
leave
sub
ret
rcll
inc
ds
lock
or
scas
pushf
push
ret
aam
rdtsc
mov
sbb
lods
xchg
shrb
arpl
mov
or
ficoms
cmpsb
das
jne
in
cmp
push
dec
mov
dec
lahf
cmp
xor
clc
push
lods
lret
dec
inc
jl
pop
sbb
addr16
pop
cld
cmpsl
cmp
sbb
jbe
dec
inc
lcall
mov
or
imul
mov
pop
pop
push
or
fisttps
mov
add
add
add
add
decl
aam
leave
add
add
add
lret
int3
or
adcl
xor
movl
cmp
movl
jne
mov
and
mov
shrd
adcl
shr
adc
mov
mov
orl
shl
xor
andl
jmp
sub
sub
sub
adc
xchg
or
sbb
movsb
ja
into
xorps
loope
pop
push
fbld
push
movsl
cld
sub
cwtl
inc
pop
inc
call
and
pop
cli
bound
xor
cmc
push
into
push
jge
loop
mov
dec
les
imul
aaa
or
xchg
shlb
test
cmp
rcrb
test
cmpsl
push
testb
cmp
in
pop
ds
add
xchg
test
adc
inc
pop
push
fnstsw
or
xchg
inc
cwtl
push
or
mov
jp
popf
popf
sbb
pop
jmp
xor
sub
dec
addr16
inc
sbb
or
data16
das
sbb
mov
xchg
mov
xchg
fdivrp
mov
mov
jecxz
xchg
adc
jecxz
pop
push
test
scas
dec
lods
jmp
fsts
std
jnp
add
lret
mov
add
mov
es
or
cmp
push
fdivp
add
jp
sub
lret
jne
dec
lds
dec
sub
mov
imul
repnz
pop
dec
mov
loop
insl
xchg
push
daa
cmp
stos
cmp
cltd
xchg
push
sub
inc
push
cmp
adc
sbb
jnp
inc
movsl
popa
adc
or
cli
inc
in
ret
fdivs
cmp
jnp
out
xchg
stos
lcall
rcl
insb
testb
dec
jl
loopne
dec
xor
pop
sahf
lock
dec
out
in
mulb
push
arpl
jne
jge
lods
fisttpl
test
hlt
cli
repz
inc
sub
lods
imul
xchg
je
inc
jl
xchg
mov
jecxz
push
aaa
jns
mov
mov
add
test
ja
adc
iret
divl
push
repz
shlb
insl
xor
ss
sbb
cltd
xor
jo
das
mov
hlt
jae
adc
push
outsl
and
pusha
inc
rolb
mov
fists
push
or
mov
xchg
push
das
inc
lahf
mov
add
je
inc
and
pop
xchg
inc
and
pusha
loope
sub
out
cmc
enter
add
pop
ret
inc
jle
gs
mov
adc
jmp
jo
or
imul
and
lret
mov
xor
test
stos
mov
cltd
loop
or
js
int3
sti
inc
jns
pop
test
icebp
aaa
push
scas
inc
fxch
mov
mov
jne
pop
into
mov
addr16
stc
dec
les
lock
push
in
mov
test
movsb
cmp
xchg
in
loope
push
out
stc
xchg
push
cltd
fdivl
popf
dec
inc
rcrl
dec
mov
jns
cmp
test
and
add
fnstsw
in
mov
inc
shlb
daa
pushf
pop
inc
dec
add
out
xchg
shld
fimuls
mov
loop
sub
sbb
js
movsb
push
xchg
push
jmp
adc
fwait
or
and
aad
cmpsl
xchg
mov
aam
aad
mov
mov
imul
insb
mov
and
lret
mov
mov
pusha
and
test
mov
jno,pn
xor
call
stos
or
cmp
stc
pop
je
and
dec
push
sbb
das
das
add
mov
out
popa
dec
and
jbe
out
pop
lods
call
pushf
and
sbb
cmp
xchg
adc
call
lods
in
xchg
sub
movsl
and
sub
or
cmp
fcoml
xor
xchg
loopne
jae
mov
pusha
sub
lret
ds
add
out
cmp
fcompl
mov
push
repnz
shl
mov
dec
cmpsb
cmp
push
sub
out
mov
les
xchg
pop
jae
aad
in
iret
jmp
sti
es
cld
dec
adc
adc
mov
sub
pop
sub
or
xor
mov
rolb
loop
push
pop
dec
outsl
jl
sub
scas
xorb
inc
insl
aam
addl
inc
ljmp
addl
push
enter
clc
sub
mov
and
and
das
shll
jge
fldcw
sub
or
pop
xor
mov
and
ficoml
or
aad
lret
push
dec
shl
mov
leave
inc
or
pusha
dec
and
jmp
repnz
jb
rol
jge
push
arpl
xchg
ds
dec
es
cli
mov
in
dec
mov
mov
out
dec
rcl
mov
push
daa
div
fnstcw
pop
mov
pop
and
fisubs
add
data16
inc
add
je
rcll
add
addr16
adc
mov
ja
and
test
mov
lds
outsb
mov
insb
mov
pushf
push
pop
pushf
lds
outsb
insb
mov
fwait
imul
inc
cmp
jp
or
or
xor
mov
pop
iret
mov
jecxz
sbb
dec
sbb
out
movsb
stos
leave
insl
or
int3
std
enter
es
push
popa
popf
fisttps
mov
imul
sub
pop
xchg
xor
out
popf
fstpl
mov
inc
out
lahf
lret
lds
stos
push
inc
out
out
mov
mov
pop
push
jne
mov
xchg
jp
ss
movsl
insl
js
jmp
in
mov
sub
fildll
movsb
cs
lahf
xchg
inc
mov
mov
cmp
sbb
cmpsb
mov
ja
daa
cli
int
lahf
mov
gs
jmp
sbb
fdivrs
pop
ds
sbbb
push
out
mov
rcll
pop
pushf
dec
xlat
repnz
jmp
aaa
mov
add
mov
push
pop
ds
or
pop
mov
xor
stos
mov
xchg
arpl
cmpsl
stc
hlt
add
push
push
test
mov
ds
adc
aad
lods
mov
inc
and
je
xor
xor
xchg
push
inc
cmp
and
idivl
sub
push
sub
stc
mov
or
mov
sub
in
and
cmc
xchg
jl
rolb
int3
insb
test
cmpsl
mov
pop
push
outsl
sub
insl
js
sub
repnz
rorl
in
cmpsl
xchg
jb
push
fst
insl
imul
inc
inc
and
mov
test
jne
jecxz
push
lahf
jne
cmp
cld
mov
and
push
cltd
aam
push
or
in
repz
mov
sub
rcll
sub
xor
and
push
cli
pushf
push
jge
test
mov
or
imul
inc
pop
aad
fsubl
fs
mov
mov
push
mull
push
out
arpl
dec
divl
test
fistps
fnsave
ljmp
lds
enter
push
inc
mov
aad
jnp
cltd
jge
sub
xor
pop
push
movsl
adc
cmp
mov
cli
mov
sbb
pushf
xchg
xor
or
mov
movl
cmp
jne
notl
mov
mov
xor
cmpl
mov
movl
mov
jmp
mov
movl
jl
push
call
xor
or
movl
movzbl
xor
and
mov
xor
mov
xorl
mov
jmp
daa
mov
or
es
icebp
dec
mov
ja
mov
mov
scas
jl
rclb
test
ffreep
xor
shlb
jo
xor
mov
push
push
xor
in
inc
fnsave
xor
add
add
jbe
xchg
pop
lahf
ret
ss
jl
mov
adc
or
fldenv
into
ret
jmp
or
cmpsl
and
fisttpl
lods
jl
jmp
mov
or
pop
fsubl
adc
repnz
xor
inc
mov
mov
jns
stc
cli
mov
xchg
outsb
pop
cld
ljmpw
cmp
ss
repz
shl
push
sbbb
mov
jecxz
jecxz
and
out
adc
test
mov
and
jg
insb
mov
mov
loopne
add
xchg
cmp
loope
add
movsb
dec
loope
jl
nop
mov
ss
xchg
inc
fwait
dec
testl
repnz
add
fldt
cltd
inc
pop
pop
mov
js
test
cltd
ret
imul
scas
fldt
int3
out
mov
fmul
jne
adc
push
jns
fcmovbe
stos
lret
fs
pop
int
mov
pop
lret
push
leave
adc
ljmp
pop
adc
movsb
push
rcr
inc
je
mov
inc
insb
divl
xor
shlb
push
testw
cmp
pop
mov
lcall
sti
sbb
mov
mov
outsl
inc
daa
cmp
outsb
xchg
shlb
cmp
rdpmc
and
mov
cmc
inc
push
lret
dec
add
push
lret
xlat
fistpl
pop
jo
in
mov
lock
aam
outsl
and
sub
push
add
into
in
xor
rorb
inc
and
gs
sub
or
jo
cmp
sbb
mov
dec
and
lods
sub
cwtl
inc
jne
fidivl
std
in
jecxz
cwtl
sub
add
xor
mov
sbb
ss
sub
sahf
ret
notb
cltd
mov
pop
rclb
mov
jno
mov
ja
xor
les
fiaddl
imul
push
ss
or
insl
cmc
lcall
push
pop
ja
or
push
cmp
xor
cmp
and
outsb
pop
ret
cmpsl
sub
dec
js
cmp
push
mov
iret
xor
lret
inc
fcomps
sbb
mov
and
mov
lret
sub
lcall
jns
shll
fcomi
mov
mov
leave
and
fldcw
xlat
sub
xchg
addps
and
pop
dec
xor
enter
movsb
adc
jecxz
add
xchg
das
shlb
stos
mov
rorl
inc
faddl
call
pop
enter
and
das
sub
jg
adc
daa
lret
xchg
jg
cmpsl
jnp
sub
jmp
int
mov
push
pop
movsl
lret
xchg
push
lea
dec
or
mov
fldl2e
mov
pop
sbb
rcll
ret
push
or
lahf
andl
or
add
ss
push
cwtl
shlb
fnstcw
lods
ret
xor
in
ja
mov
adc
cwtl
cmpsl
repz
insb
mov
pop
fdiv
pop
stc
jne
jle
xor
ss
push
mov
mov
ss
cwtl
cmpsl
mov
mov
xor
mov
push
das
cmp
into
sarl
cmp
jp
ss
mov
mov
lds
ljmp
outsl
and
inc
out
or
sub
sub
icebp
mov
xchg
cmp
adc
inc
push
jo
jns
js
mov
mov
pop
jp
movsb
insl
ljmp
iret
in
xchg
dec
clc
xor
pushf
or
pop
and
sahf
sub
mov
lcall
and
xchg
sbb
sbb
push
xchg
push
inc
test
dec
jmp
outsl
push
push
in
negl
sub
fnsave
push
xor
pop
jbe
lods
or
enter
out
and
mov
cs
ja
pop
mov
jbe
imull
and
xchg
mov
jmp
int
iret
iret
rorl
jnp
xor
jae
rcr
dec
outsb
push
jne
in
xchg
aad
in
sahf
out
fistpll
test
rcr
dec
bound
xor
xor
int3
scas
aam
arpl
mov
xchg
mov
jl
inc
lret
or
jmp
sahf
sbb
add
adc
aam
inc
pop
jp
test
inc
ds
test
ss
or
add
in
repnz
enter
mov
lret
in
popf
push
xor
mov
lahf
out
mov
mov
pop
or
loopne
cmc
mov
cmp
stc
test
mov
insb
dec
shrl
lret
gs
xchg
jns
xchg
stos
cs
jl
mov
xor
pop
cmpsl
xor
clc
inc
cmc
test
mov
mov
in
shl
ljmp
insb
inc
and
inc
enter
mov
push
push
adc
and
imul
lahf
xchg
push
mov
sub
mov
hlt
dec
jmp
jno
jb
mov
adc
mov
cwtl
or
mov
jne
cmp
and
test
inc
iret
xor
mov
jl
xor
mov
jecxz
mov
xchg
mov
xchg
cmp
sbb
jge
lods
sbb
aaa
fs
sbb
out
push
pusha
stos
fsubl
xchg
mov
enter
mov
addr16
mov
bound
adc
sti
incl
jbe
fdivrs
test
push
lcall
popf
pop
mov
inc
pop
cmp
leave
dec
and
mov
mov
add
fstpl
aas
dec
bound
popa
xchg
mov
ja
inc
das
mov
dec
nop
scas
fnsave
mov
jmp
push
sbb
rorb
leave
add
push
ljmp
in
pop
les
mov
pop
in
jmp
inc
stos
xchg
xor
andb
jmp
loopne
popa
and
cs
push
hlt
push
cmp
insl
mov
loope
xlat
movsl
test
inc
cmp
ss
inc
xor
fiadds
sahf
rclb
movsb
mov
sub
sub
repz
int
jecxz
scas
add
jo
adc
and
mov
addr16
dec
mov
add
adc
inc
pop
mulb
rcll
or
popa
cmc
adc
adc
arpl
pop
xchg
jmp
ret
jae
insb
pop
out
mov
lcall
aas
js
mov
out
ja
mov
out
or
xchg
notb
xor
lock
jecxz
data16
fucomp
inc
lea
pop
int3
bound
push
mov
dec
cli
mov
pop
push
icebp
pop
sub
or
mov
lds
andl
mov
cmpl
movl
mov
jmp
movl
movl
jne
push
push
push
push
push
pushl
push
push
call
orl
or
xor
xor
xor
add
adc
adc
sub
add
mov
xor
xorl
shr
xorl
mov
orl
xor
or
movl
shl
cmpl
movzwl
movl
jmp
movl
movl
jle
push
call
not
or
sub
sub
sbb
sub
mov
mov
sub
imul
mov
cmpl
not
movl
jmp
mov
jne
push
pushl
pushl
push
push
call
sbb
adc
neg
subl
adc
mov
mov
not
add
mov
mov
mov
shrd
shr
adcl
mov
mov
xor
add
shl
incl
xor
jmp
jle
jl
dec
mov
push
pop
dec
mov
xchg
ret
mov
adc
call
test
xchg
jge
repz
mov
adc
mov
clc
ljmp
pop
mov
mov
mov
lds
jns
cmp
pop
decb
cwtl
dec
cmc
push
pushf
mov
test
jnp
push
aas
inc
fidivrs
or
pop
iret
add
jg
test
pop
fistps
jo
pop
sar
in
frstor
sahf
pinsrw
in
jl
dec
lods
jmp
fadd
add
shlb
lds
cmp
mov
test
add
dec
outsl
call
outsb
inc
cmp
sbbb
dec
lret
jmp
sti
das
ret
sarb
cmpsb
mov
mov
scas
je
sub
sub
pop
inc
aas
sbbb
push
cwtl
dec
shlb
clc
mov
cmpl
jl
pop
call
mov
repnz
pop
adc
scas
das
fsub
movsb
call
jp
cmp
out
scas
outsb
mov
cwtl
fsubp
arpl
and
mov
movsb
fldt
movsb
sbb
shr
imulb
and
cwtl
movsl
mov
mov
sbb
xor
or
jbe
inc
or
divl
mov
movb
movsb
or
mull
neg
or
movsl
xchg
or
loop
mov
or
test
subl
ljmp
add
iret
sub
out
sub
xor
or
lea
gs
rep
stos
or
push
gs
scas
mov
push
imul
enter
mov
xorb
scas
cmp
push
fs
fwait
xchg
inc
fisttpll
lock
jae
js
je
xor
adc
push
mov
sub
xchg
adc
sarl
adc
and
mov
ja
and
push
push
mov
dec
adcb
jb
ret
leave
xor
xchg
cmpsb
rorb
pop
sub
daa
mov
addl
xchg
lds
js
and
orb
fcoml
mov
adc
xchg
jbe
les
fsubl
mov
dec
bound
cmpsb
jb
push
lods
add
xlat
adc
add
aas
push
pop
imul
outsl
sbb
jae
cmp
xchg
push
mov
dec
stos
pop
or
cli
loope
add
push
push
adc
movsl
div
mov
sub
and
insb
ret
cs
lcall
add
jno
mov
into
cli
xchg
lret
xor
cs
in
test
dec
push
jl
pop
add
jp
jp
pop
cmpsb
dec
ds
stos
test
xchg
repnz
xchg
add
jmp
inc
mov
push
xchg
lods
insl
pop
out
mov
std
in
and
cli
loope
xor
jecxz
xchg
push
jge
push
mov
cmpsl
fisubrl
es
jnp
loopne
adc
jno
pusha
dec
push
inc
aam
fisubrl
js
push
test
xlat
dec
ss
jae
mov
xchg
popf
pop
lahf
cmp
xchg
int3
pop
xchg
adc
xchg
bound
jmp
xchg
pop
lret
fcmovne
xor
push
lahf
cmp
mov
mov
push
cltd
push
mov
loop
sbbb
inc
mov
mov
jg
outsb
push
push
jl
xor
push
and
out
out
lcall
mov
in
inc
push
sbb
pop
stos
lret
rorl
cli
inc
mov
inc
jnp
inc
mov
es
push
push
dec
imul
ficomps
sub
clc
sub
in
pop
sbb
and
add
call
inc
sub
inc
pop
jle
mov
xor
outsb
stos
mov
in
inc
jbe
mov
jg
cmpsb
sarl
add
xchg
inc
loope
mov
das
daa
pop
repz
push
pusha
xchg
xchg
loope
jnp
cmpsl
insb
inc
cmp
mov
stos
cmp
cmp
dec
out
cltd
adc
push
or
pop
sbb
scas
push
jmp
data16
sbb
jle
out
xchg
sahf
mov
cmpsl
iret
push
punpcklwd
add
addr16
sub
pop
loope
lods
nop
clc
iret
xor
adc
jecxz
xchg
cmp
mov
xor
pop
sti
dec
roll
mov
and
mov
stc
icebp
cmp
xor
loopne
lea
out
inc
push
push
push
nop
inc
dec
inc
cwtl
adc
pop
jne
xor
xchg
or
jg
mov
repnz
mov
mov
xchg
or
jns
es
fstpt
xchg
fsub
adc
sub
mov
orl
jbe
cld
and
mov
fldt
ret
sub
xor
std
imul
add
cmpsl
pop
xchg
cld
inc
mov
or
add
mov
mov
test
stos
mov
outsb
jmp
jl
into
sub
adc
mov
mov
stc
sbb
dec
dec
adc
mov
out
scas
rdpmc
sub
push
andb
xlat
outsl
loopne
push
jmp
addr16
push
dec
es
fsubr
fisubs
mov
outsb
cli
dec
push
or
pop
popa
inc
jo
sbb
cwtl
sbb
mov
mov
ret
je
sub
movsb
into
lock
push
in
and
mov
xchg
jp
lret
in
pop
mov
push
mov
in
or
test
xchg
and
ss
mov
daa
vfmaddsd
lods
dec
push
fsubr
popf
add
xlat
or
shl
pop
aaa
cmpsb
insb
es
cmp
jno
push
out
loope
ret
xchg
sbb
mov
int3
xchg
jb
dec
pop
movsl
pop
push
mov
cwtl
js
insl
mov
dec
add
mov
pushf
or
or
inc
or
cld
lods
andps
add
mov
loop
jge
pop
cmp
not
loop
inc
sbb
test
repnz
int3
in
sarl
mov
mov
xlat
lret
xor
jle
test
roll
dec
fistpll
aaa
sarb
lea
arpl
lcall
lret
ja
leave
mov
lods
int3
jge
jg
pusha
inc
xchg
pop
xchg
das
add
or
add
jnp
mov
aam
jmp
push
dec
jbe
imul
out
mov
je
sbb
cmpsl
and
popa
jno
mov
lret
dec
dec
or
idivl
jmp
add
aas
dec
push
cmp
cmp
mov
cli
enter
push
sarb
es
insl
movsl
mov
or
ds
lret
ret
lret
push
movsl
inc
dec
js
mov
ja
stos
mov
lret
xchg
push
ret
xchg
gs
mov
mov
int3
daa
dec
rorl
rorl
shlb
jnp
sbb
or
xchg
inc
pop
and
ret
mov
dec
xchg
inc
test
jo
ss
jno
test
lcall
decb
mov
cltd
mov
xor
pop
cmp
push
dec
shrl
or
cmpl
mov
mov
jmp
movl
movl
jae
pushl
push
push
call
xor
or
mov
sub
sub
mov
xor
or
sub
xor
and
xor
or
sbb
mov
mov
add
mov
mov
sbb
mov
mov
incl
shrd
subl
shr
adcl
mov
add
mov
cmpl
not
mov
jmp
not
jne
push
push
push
call
mov
sbb
and
andl
and
orl
sub
or
sbb
jmp
pop
and
push
adc
jae
add
pusha
push
ja
jno
mov
or
push
pop
inc
dec
pop
fmulp
push
or
sti
inc
imul
ja
in
test
cwtl
negb
inc
push
fdivp
cmp
sbb
mov
out
push
repz
sub
push
push
icebp
mov
xchg
addb
cwtl
inc
ret
xchg
pop
mov
div
sar
outsb
push
pusha
cmc
xor
lods
mov
cmp
pop
test
lods
mov
fldl
in
popf
cmc
lods
fs
cltd
cltd
in
add
sub
mov
xor
and
or
cld
jp
imul
iret
push
push
int3
out
jo
addl
cmp
adc
scas
je
xchg
pop
in
inc
jg
insl
sub
mov
add
mov
push
push
loope
cmpsl
jl
xchg
insb
sbb
pop
adc
jge
jp
xor
out
pop
std
popa
and
push
jl
lret
jl
mov
sahf
fnstenv
in
stc
inc
push
popf
repnz
nop
stos
out
lcall
pusha
stc
inc
test
test
pop
lods
cmpsb
fs
aas
mov
cmp
nop
push
jge
xchg
insl
bound
sbbb
push
inc
mov
mov
sub
in
xchg
in
popa
add
cmc
pop
shlb
dec
xor
icebp
dec
xor
iret
add
add
rcrb
js
jle
daa
pop
iret
imul
int3
into
sbb
xchg
add
sub
and
mov
pop
inc
add
cmp
movsl
ds
xchg
sub
lret
fistl
xor
dec
mov
jg
stos
lcall
sti
pop
xchg
test
inc
mov
xor
test
pop
fsts
xchg
aaa
sar
add
mov
mov
sti
xor
sbb
in
pushl
cmp
xchg
jbe
cmpsl
dec
jmp
mov
and
test
sar
push
std
push
inc
mov
mov
notb
mov
xchg
arpl
jne
push
sbb
mov
mov
jns
repnz
movsl
lods
stos
xchg
shlb
inc
add
or
fsubrl
fidivrl
pop
adc
inc
cwtl
and
dec
imul
subl
cltd
lret
imul
adc
hlt
xchg
jbe
jge
subl
stos
sbb
loopne
cmp
rolb
movsl
adc
or
or
inc
mov
and
cmp
mov
ds
sbb
jae
mov
out
enter
adc
stc
and
adc
cltd
in
pop
mov
gs
inc
sarb
mov
ja
loopne
lods
jmp
xchg
cmp
sbb
out
jae
call
mov
or
insb
sbb
jnp
mov
punpckhbw
sub
pop
iret
sbb
data16
ss
imul
push
cltd
or
mov
inc
scas
cld
adc
mov
and
insl
add
mov
les
dec
pop
cmp
cli
enter
mov
das
lret
and
dec
shr
dec
inc
inc
mov
lds
inc
es
sub
fiadds
xor
je
jno
outsb
push
cmp
out
gs
push
push
fnstenv
mov
int3
lds
xor
or
or
push
sahf
pop
mov
jl
and
out
es
clc
xchg
mul
les
fisubl
jp
dec
xor
inc
test
lods
sbb
in
push
dec
fdivp
jo
sub
push
push
jle
insb
cmp
das
xchg
fmuls
imul
xchg
push
popf
add
std
fisubs
gs
mov
cmc
ficompl
jmp
out
loopne
inc
rcrb
sub
stos
push
cmpsb
cbtw
mov
out
sub
in
adcl
push
push
xor
or
cmp
int
pusha
les
je
mov
jp
in
jmp
or
mov
in
fisubrl
pop
cmp
lret
jb
pop
xor
pop
adc
je
shlb
inc
jae
pop
lret
jne
ljmp
cmpsl
popa
or
movsl
xchg
call
iret
stos
adc
pushf
push
push
ret
loope
sarl
testl
hlt
cmp
rcl
iret
sti
aaa
or
adc
iret
jmp
sti
sub
stos
mov
jns
dec
insb
dec
repz
add
sahf
cwtl
and
mov
jge
lcall
jmp
pop
jl
push
mov
notb
lea
fldcw
int
divl
xchg
out
in
push
cs
sbb
test
fnstenv
adc
ret
mov
es
shl
movsb
out
pop
jge
dec
out
ret
cli
divb
adcl
shr
jmp
xchg
shll
adcb
scas
xchg
xor
lea
ret
loopne
test
in
jnp
daa
iret
xor
insl
or
mov
lret
fwait
inc
dec
xchg
mov
and
push
sub
add
dec
stc
in
movsb
in
add
imul
mov
push
stos
sub
bound
mov
popf
in
rcrb
sbb
lahf
lock
rolb
fstl
ja
std
jl
stos
pusha
cmp
mov
lds
xchg
pushf
fwait
push
mov
cli
pop
sbb
imul
lods
or
sbb
sarb
mov
inc
pop
xor
testb
pop
xor
hlt
push
xor
cmp
stos
or
dec
jo
xchg
enter
xchg
insb
fdivrs
pop
movsb
sbb
push
scas
mov
stc
push
pop
mov
xchg
insb
and
push
push
jae
push
cltd
sahf
xor
jp
xchg
ret
xchg
sbb
push
adcl
data16
xchg
cmp
fsts
pushf
fldenv
push
clc
inc
xchg
test
cltd
sub
pushf
faddl
mov
inc
inc
int3
dec
enter
shll
push
or
popa
shll
inc
cmp
pusha
mov
inc
repnz
shrb
dec
call
or
orl
outsb
mov
test
call
and
aas
dec
or
lods
popf
or
gs
push
mov
pop
call
jecxz
xchg
xor
push
mov
dec
dec
movsb
pop
es
out
push
cmp
repz
xor
ds
imulb
inc
jl
stos
hlt
jmp
push
ret
shl
add
xor
cltd
or
les
and
add
jp
test
sub
cmpsb
shll
sti
imul
and
adc
ljmp
int3
sbb
pop
test
add
cltd
push
mov
adc
xchg
lea
jge
xor
subl
or
andl
shl
sbbl
lea
sub
mov
cmpl
mov
mov
mov
mov
jmp
movl
jg
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
pushl
pushl
push
call
xorl
movzbl
adc
movzbl
add
or
add
movzwl
sub
mov
shrd
shr
cmpl
mov
mov
mov
jmp
mov
jbe
push
call
andl
mov
adc
sbb
movl
mov
mov
or
not
mov
mov
sub
mov
add
jmp
rcrl
cmp
and
and
scas
dec
or
fcomps
ja
mov
and
mov
xchg
into
out
mov
sub
fldt
mov
mov
add
cmpl
negl
jg
lock
inc
imul
mov
pushf
cmc
mov
mov
cmp
std
sub
cmp
loop
insb
or
cmp
cmc
aam
pop
sub
cltd
or
inc
and
out
scas
stc
dec
int
mov
test
or
lods
fildll
lods
mov
movsl
sbb
xchg
imul
jb
imul
mov
or
dec
and
js
sbb
or
cmpsl
push
jb
es
outsb
ja
rorl
and
test
adc
sbb
pop
inc
jle
pop
push
push
jl
pop
outsb
add
sbb
jecxz
ret
loop
adc
mov
cltd
adc
dec
sbb
add
adc
nop
sub
bound
lret
repz
push
mov
xchg
jecxz
sub
xchg
adc
arpl
cmc
ret
or
inc
in
pop
add
das
cmpsl
mov
js
aam
fisubrs
and
rorl
mov
pop
cltd
cmp
cmp
lcall
in
outsb
aaa
sub
das
jno
push
pop
adc
iret
sarb
mov
push
sbb
mov
out
mov
mov
dec
push
int3
pop
mov
mov
xor
orb
sbb
mov
add
fidivrl
scas
test
or
xchg
arpl
dec
testl
mov
xchg
xor
ret
jbe
sbbb
or
je
into
ret
cmpsb
mov
dec
xlat
mov
leave
mov
push
jns
popa
insb
push
adc
insl
jno
pop
pop
enter
bound
cs
pop
cmpsb
pop
ret
mov
and
pop
push
addl
addb
loopne
dec
cli
sub
aam
fdivrl
jbe
jno
nop
cwtl
pop
sub
loop
sarl
mov
push
or
adc
jnp
or
jb
movsb
adc
pop
sub
call
test
mov
mov
popw
std
pop
popf
stos
aaa
out
and
out
daa
enter
aam
int
jno
scas
mov
adc
or
pop
xchg
inc
repnz
xchg
mov
loop
push
or
xchg
adc
push
dec
ss
bound
sti
and
daa
sub
adc
mov
outsl
insb
dec
pop
jg
xchg
aas
rorl
or
ljmp
lock
rorb
add
push
add
arpl
sbb
subb
pusha
out
xor
sti
out
push
gs
xchg
and
in
idivl
pushf
or
xorb
int
mov
jp
xor
mov
inc
jmp
mov
jno
sbb
mov
enter
lahf
testb
xchg
pop
or
and
and
xchg
aas
xor
mov
and
ficoml
and
pop
push
frstor
cltd
lret
sub
in
mov
or
test
dec
ljmp
loopne
cld
jg
sbb
fwait
xchg
gs
push
and
out
and
add
jp
inc
fldt
push
lcall
fmul
inc
nop
mov
sahf
sbb
or
and
mov
lcall
inc
cwtl
cmp
fs
fidivs
jnp
fnstcw
pusha
dec
int3
push
repz
mov
jbe
sbb
call
mov
jmp
pop
xchg
xor
mov
inc
inc
push
pop
in
push
fwait
mov
std
imul
mov
sub
shl
outsl
xlat
call
in
sbb
fucomi
loope
les
cld
loopne
rcrl
inc
dec
mov
push
push
movsb
enter
inc
cmpsl
or
lds
fdivrl
cmp
jge
lahf
xchg
push
jae
imul
xor
adc
cmpl
push
pop
loope
pop
mov
lret
or
movswl
aam
cli
jns
mov
push
arpl
in
xor
pusha
and
loop
cwtl
rorl
mov
aaa
fs
xor
ljmpw
nop
lret
pop
ljmp
aam
out
int
fcoml
push
out
mov
xchg
icebp
sahf
jns
pop
test
mov
pop
iret
jb
xor
sub
pop
addr16
cmp
popa
pop
cmp
cmc
pop
xchg
lret
mov
pop
jae
cmp
sbb
lahf
ja
fucom
test
in
xor
stc
inc
sub
jmp
scas
sbb
adc
or
and
mov
sbb
test
in
fdivl
add
xchg
mov
rclb
adc
push
and
aas
xor
xor
dec
mov
fstl
ffree
sub
test
adc
push
jle
mov
jbe
fsubp
mov
or
stos
inc
std
xor
loopne
dec
xchg
test
in
lret
daa
mov
push
mov
mov
sub
pop
inc
and
enter
xor
subl
fildll
sbb
ret
pushf
icebp
ds
shlb
push
outsb
jmp
pop
push
jb
inc
mov
jp
sbb
push
movsb
int
cs
sarl
pop
aas
push
divl
sti
mov
push
stos
jno
call
adc
in
fwait
insb
add
jb
stos
mov
mov
push
push
mov
jl
xor
add
xchg
push
dec
repnz
pop
push
add
pop
sub
jb
mov
sti
dec
add
subb
mov
mov
jno
cmpsb
sub
pop
jge
stc
pop
xor
jb
test
loope
addr16
push
test
out
xchg
pop
shll
out
out
mov
lock
fistl
in
je
mov
outsl
inc
push
and
add
or
fwait
pop
mov
jnp
add
das
pop
pop
mov
rclb
or
sub
xor
add
int
cs
scas
and
push
imul
cmp
loope
lods
xchg
xchg
fs
sbb
imul
rcr
adc
lock
adc
das
test
scas
outsl
push
call
dec
popa
ret
out
add
jp
cmp
xchg
jge
dec
andb
cmp
cs
mov
outsl
xor
lahf
mov
in
das
daa
mov
insl
inc
mov
aad
in
push
add
ret
andb
push
movsb
add
cmpb
in
shlb
rolb
icebp
pop
add
or
shl
movzbl
or
imul
mov
mov
xorl
shrd
xorl
mov
mov
xor
shr
mov
and
mov
sbbl
xor
orl
or
sbbl
shl
adcl
sub
mov
mov
cmp
mov
mov
jg
xor
add
mov
sub
and
mov
cmpl
movl
movl
jmp
mov
mov
jb
push
push
call
xor
mov
sub
sbb
movzbl
and
mov
jmp
les
cmp
push
mov
mov
movsb
js
lea
outsl
dec
ja
fstpt
xor
pop
sub
mov
in
sub
sbb
xor
sbb
cmp
ret
jmp
xor
mov
cmc
aas
jg
add
divl
fdiv
lds
andb
jb
push
cmp
cmpsl
testb
outsb
orpd
fists
mov
inc
mov
je
pop
lahf
jnp
cmp
dec
stc
rcl
cwtl
nop
je
or
xchg
lea
movb
shr
iret
mov
icebp
push
movsl
mov
test
mov
rcrl
mov
sub
movsl
xrelease
jmp
std
lret
arpl
outsb
inc
and
ja
push
inc
jmp
sub
push
add
cmpsb
adc
lret
dec
mov
lods
jnp
mov
dec
cmp
add
fwait
inc
sarl
jb
mov
lret
xorb
fwait
outsl
dec
int
and
ljmp
add
lret
or
and
mov
test
jnp
sarb
pmulhw
jecxz
and
or
mov
lcall
leave
add
lahf
fwait
ret
mov
sbb
inc
ds
imul
xchg
ret
push
int3
imul
sub
pop
cmp
or
inc
push
fimull
inc
or
sbb
jp
xchg
and
fidivrs
fnstenv
push
insb
dec
push
sbb
jg
pop
out
add
jge
mov
fildll
cmp
inc
or
pop
js
and
mov
icebp
rcr
push
ljmp
jp
mov
lahf
dec
pop
cmpsb
cmp
cmp
lcall
popf
sbb
jl
add
sub
ret
pushl
mov
mov
lds
pop
pop
adc
les
dec
pop
das
inc
aad
loope
add
enter
shll
or
inc
pop
cmc
and
jnp
out
inc
push
int
push
sub
int
movb
addb
push
pop
jb
push
outsl
mov
arpl
mov
cmp
jb
out
movsb
popf
and
and
dec
test
andb
addr16
rcl
mov
sub
sub
imul
xlat
add
mov
or
xchg
mov
mov
xor
pop
test
dec
sub
into
outsl
add
cltd
lock
xchg
cmpl
dec
mull
lea
jne
jecxz
mov
outsb
mov
sub
push
into
outsb
mov
add
mov
sbb
mov
das
or
dec
mov
xchg
xlat
mov
jmpw
mov
jecxz
mov
jne
inc
sub
inc
sahf
xchg
fldl
fwait
loop
popf
add
jge
mov
mov
sub
not
rorl
mov
popa
xor
cmp
leave
fldcw
fsubs
push
push
repnz
nop
hlt
mov
cs
call
insl
int
fsts
adc
in
push
lds
in
or
mov
into
stos
cli
rol
outsl
jnp
sub
inc
xchg
imulb
and
dec
int
push
mov
xchg
add
scas
push
divb
dec
in
loopne
stos
inc
fwait
outsl
sti
xchg
iret
cmpsl
add
clc
pop
jns
and
fcmovnu
into
pop
std
das
and
aaa
mov
ret
fiaddl
std
cltd
test
dec
cmc
repz
jmp
inc
push
test
mov
jo
cwtl
sti
arpl
sarb
mov
dec
push
popf
cmp
sti
sub
add
mov
dec
fwait
pop
insl
sub
jmp
cmp
mov
ja
mov
pop
xchg
das
push
xchg
inc
pop
movsb
mov
jb
scas
movntps
dec
ret
leave
mov
das
sub
mov
fwait
jns
fs
nop
xor
pop
test
stos
xchg
cld
pop
pop
mov
cmpsb
pop
in
inc
xlat
in
adc
lahf
cmp
mov
adc
pop
cmpsl
enter
lfs
mov
fsubs
push
and
jg
ljmp
stc
mov
fwait
nop
dec
orl
ret
push
mov
in
pusha
xlat
xor
scas
mov
loopne
sub
inc
mov
mov
div
aas
test
adc
mov
sbb
nop
movl
daa
adc
mov
push
cmp
outsl
stos
not
dec
aas
jnp
sbb
mov
jbe
mov
push
gs
xchg
sbb
xor
mov
fldpi
lock
xchg
sbb
or
add
inc
cmp
iret
sbb
fcoml
out
std
jns
hlt
mov
pop
xchg
push
push
push
and
pop
xchg
ret
pop
stc
les
and
mov
nop
loopne
sub
jmp
lea
insl
sub
mov
scas
sahf
and
mov
cmpsb
push
mov
mov
jne
js
mov
mov
std
stos
xchg
push
dec
inc
adc
out
mov
mov
mov
in
adc
push
sbb
pop
and
dec
xchg
sbbl
xchg
sub
aad
es
daa
sbb
sub
cwtl
xchg
popf
jp
mov
push
stc
stos
jnp
mov
lock
std
ret
and
shlb
mov
test
dec
shl
lods
gs
and
lahf
repnz
jae
sbb
fidivs
les
loope
mov
lods
rorb
pop
push
xchg
inc
sbb
lahf
sti
pop
shlb
mov
dec
push
lock
sub
les
dec
subb
push
ja
xchg
adc
int
inc
pop
jno
xor
pop
int
xchg
stos
jo
fstp
popf
mulb
test
dec
repz
out
xor
push
xor
iret
loope
dec
mov
imul
add
fsubrs
in
mov
mov
dec
leave
and
cmpsb
lods
roll
ficomps
arpl
repnz
leavew
fdivr
lahf
adc
and
das
xor
fsub
cmp
je
mov
xor
xchg
push
jp
pop
fcmovnbe
movsb
xchg
hlt
mov
dec
inc
jmp
cmp
cmpsb
sub
icebp
push
pop
push
push
mov
or
test
enter
inc
or
lret
jno
iret
cmp
dec
mov
cs
add
inc
mov
iret
jle
mov
xor
inc
push
xor
sbb
test
pop
cmpsb
add
cmp
cmp
aaa
mov
add
adcl
shll
pop
je
pop
lods
mov
test
add
cli
jge
and
loopne
push
pop
pop
push
cwtl
ss
ret
sbb
push
sub
lret
pop
and
cmp
daa
xchg
push
pop
sbb
push
idivb
ds
xor
mov
push
add
fwait
mov
loopne
mov
add
and
stos
inc
inc
add
lods
roll
mov
movzwl
or
mov
adcl
xor
andl
shl
orl
xor
adcl
or
sbbl
shr
and
mov
jmp
mov
mov
mov
cmp
ja
jg
popa
sub
mov
mov
and
jecxz
imul
lea
jge
or
stos
in
in
mov
push
nop
popa
sahf
pmaxsw
mov
js
sbb
ja
testb
or
push
cmp
sbb
pop
fs
fcomp
iret
fsubs
mov
je
leave
sub
rep
sbbl
repz
sub
sub
inc
or
sbb
sbb
sbbl
xchg
pop
sbb
jns
arpl
pop
fmull
bound
ror
xor
mov
mov
jno
daa
adc
push
jne
cmp
adc
repnz
and
lds
movsl
mov
sub
int
adcl
insl
outsb
test
add
lods
or
test
out
fisubrl
cmpsb
pop
mov
inc
xchg
inc
or
jp
or
dec
jo
add
sbb
mov
add
mov
test
ja
jle
sbb
xlat
pop
jae
jae
mov
push
les
and
cmpb
and
outsl
int3
in
push
or
pop
enter
js
sbb
orb
cmp
mov
mov
jno
ret
pushf
enter
clc
popa
outsl
sub
iret
cmpsl
xlat
jg
fnstcw
jp
bound
adc
or
scas
xor
inc
daa
out
dec
data16
ret
sub
sub
mov
and
adcl
dec
push
xor
sbbb
jns
popa
sbb
pushf
int3
aad
arpl
dec
and
jbe
rcl
mull
repnz
mov
xor
xor
fsubrl
dec
out
arpl
mov
sbb
push
popa
xor
jns
lcall
add
sbb
adc
je
and
add
fs
dec
call
xor
dec
les
ds
in
xor
sub
add
cmp
aas
dec
or
mov
int3
mov
loope
xor
fwait
gs
fsubs
mov
bnd
leave
or
cmp
ss
pop
int3
arpl
mov
xchg
testb
jle
mov
jb
outsl
jne
mov
sbb
ds
jbe
clc
xlat
iret
inc
rcrl
test
dec
popf
insb
adc
cs
pop
push
xor
xchg
xor
dec
negl
popa
test
pop
push
enter
dec
iret
aam
mov
xchg
hlt
repnz
cld
mov
xchg
push
sahf
cmp
inc
mov
add
outsl
add
std
lods
mov
push
jl
xchg
test
je
sbb
int3
fdiv
adc
nop
dec
rorb
stos
xchg
pushf
inc
xlat
out
popf
sbbl
pop
test
xchg
in
xchg
mov
mov
adc
push
dec
imul
pop
or
pop
into
jl
push
out
xchg
stc
movsl
test
or
mov
test
xor
ret
clc
in
xlat
aam
adc
and
nop
mov
stos
test
scas
xor
lods
mov
subl
ud1
cmp
add
sub
or
hlt
in
dec
xor
dec
sbb
add
push
inc
mov
dec
add
xor
fs
pop
or
popf
push
imul
fnsave
sub
jle
mov
stos
test
mov
leave
and
add
gs
stc
cmc
sub
add
jp
and
cltd
roll
mov
ja
sahf
fldln2
adc
push
sbb
cmpsb
in
push
cmpsb
xor
sbb
pop
pop
push
jmp
lds
inc
ret
fildl
aad
or
jns
xlat
adc
fisttpll
adc
or
or
push
ja
inc
pop
fldcw
clc
lock
sub
adc
ss
pop
push
rclb
mov
add
insl
push
push
fidivrl
loope
dec
les
mov
enter
xchg
cltd
and
test
mov
cwtl
ss
mov
mov
lahf
stc
sub
mov
stc
lock
imul
inc
cmp
repz
cmpsb
arpl
popf
sub
loopne
and
jmp
out
sahf
sub
dec
ret
insb
test
scas
and
fdivrl
mov
mov
adc
dec
push
js
mov
test
adc
inc
js
rcl
jecxz
mov
pop
inc
rcrl
push
aas
sti
sub
and
incl
xor
adc
in
jbe
xor
mov
sbb
cli
sbb
xor
subl
popa
inc
je
jns
insl
mov
pop
jns
sbb
push
xchg
jnp
or
pop
ljmp
mov
mov
xor
neg
rolb
sub
adc
jmp
dec
lock
cmp
aas
mov
les
pop
sub
fdiv
dec
and
or
sub
dec
sub
sbb
adcl
subl
mov
repnz
add
cmp
adc
popf
sti
mov
lds
pusha
icebp
xchg
inc
cmp
repz
xchg
push
fbstp
lahf
cmp
or
inc
sbb
repz
lea
push
pop
fmuls
jecxz
mov
into
pop
mov
mov
test
fcoms
xor
nop
jbe
andl
sbbl
mov
inc
stc
in
pop
push
popf
adc
mov
lock
mov
cmp
data16
ds
lcall
repz
or
mov
cmp
in
gs
movsl
int
inc
fiadds
ja
inc
push
cld
cli
cmpsb
testb
lret
xor
stc
and
mov
loope
xor
ss
fcos
xchg
xchg
dec
xor
xor
call
es
xchg
jmp
lods
cli
std
and
subl
mov
in
out
mov
movsl
mov
pop
xorl
fwait
inc
pop
dec
lret
jo
into
popa
and
arpl
mov
adcb
cwtl
pop
sub
movsb
pop
add
inc
jno
andb
lret
jbe
mov
test
ljmp
add
imul
xchg
loopne
mov
mov
int3
fimull
cmp
xlat
cmp
idivb
ss
pop
outsl
inc
pop
mov
push
mov
or
fisttpll
fsubl
push
int3
bound
lds
outsb
scas
daa
sbb
int
push
out
call
loopne
inc
cmp
and
icebp
test
pushf
adc
lods
mov
repz
xor
jae
fisubrs
cmp
cmpsl
test
mov
lods
aaa
pop
xchg
sub
mov
aas
aam
inc
shll
mov
sub
les
push
or
icebp
shr
mov
inc
popf
xchg
push
in
sbb
pushf
movsb
sbb
cmp
fidivrl
mov
or
mov
mov
mov
add
mov
andl
shrd
sbbl
shr
mov
mov
inc
jmp
shll
adc
push
scas
xchg
push
mov
xchg
subb
ja
mov
fdivp
or
out
xchg
jg
fdivrl
stos
int3
xchg
sub
outsb
pop
add
mov
pusha
jge
add
out
fstpl
fidivrl
fldln2
add
cmp
scas
sub
mov
orb
fwait
sar
cmp
jp
inc
jne
mov
mov
xor
xor
icebp
dec
push
std
pop
mov
push
inc
pop
aad
aad
pop
daa
fcomps
jne
shl
sub
lret
mov
push
out
popa
in
pop
add
jno
xchg
or
mov
sbb
xchg
rolb
sbb
pop
ficompl
jecxz
xchg
dec
test
and
push
aaa
adc
dec
jge
and
xchg
dec
test
fsubrl
testl
cmp
cltd
pop
lret
xchg
outsb
stos
mov
shl
cmp
xlat
stc
lock
and
je
es
test
mov
fs
xorl
pop
adc
lods
pushf
dec
fdivr
ljmp
or
stc
sub
sbb
mov
sbb
or
mov
cli
xchg
adc
adc
fildl
mov
jbe
and
xchg
mov
xor
std
add
gs
popa
sbb
into
or
xor
ret
int
aam
mov
mov
and
cmp
pop
pop
xchg
xchg
cmp
movsl
in
jno
js
adc
scas
add
and
xor
sub
lea
jp
in
das
sbb
adc
fnstcw
mov
pop
inc
adc
cmp
mov
rorb
adc
and
adc
jg
ret
cs
movsb
and
or
mov
push
fneni(8087
imul
mov
fs
push
push
es
dec
out
pop
mov
mov
js
jge
sub
or
jg
dec
xchg
dec
shll
fstps
and
loope
fistl
rolb
push
in
push
ficoml
movsb
cmp
in
loope
jne
rcll
adc
cltd
sub
rorl
out
pop
mov
or
je
cmpsb
xor
fprem
cmc
xlat
xchg
je
push
out
outsl
mov
mov
imul
dec
pushl
and
jb
movsb
test
xor
pop
sub
cmp
or
push
mov
jmp
pmaxub
jns
pop
xor
xor
push
pop
push
enter
cmc
lds
and
imul
stos
and
adc
lods
sarl
fistpll
ljmp
pop
shrb
imull
data16
pop
adc
inc
cmpsl
sub
jl
es
jmp
mov
mov
pop
add
push
adc
dec
inc
mov
aas
dec
mov
popf
lret
cli
dec
in
hlt
mov
addr16
adc
mov
daa
je
lret
popf
fmuls
cmpsl
xor
mov
imul
and
scas
aas
in
dec
and
or
roll
repnz
ljmp
xor
adc
mov
fbstp
mov
jnp
sub
testl
mov
mov
fnstsw
mov
jno
mov
cmc
jg
and
insl
pop
movl
in
cmp
es
or
cmp
add
xchg
fcmove
fisubrs
adc
push
into
into
xchg
aaa
cmp
cmpsl
fidivrl
sti
cmpsl
add
pusha
mov
icebp
xor
cld
inc
dec
stc
cmp
cmp
ljmp
enter
rcll
cmpsl
cmp
pop
imul
mov
mov
sub
lahf
cmpsb
sti
adc
int3
daa
mov
mov
mov
fiadds
mov
imul
sti
sbb
pop
stos
mov
or
ja
ds
ds
xchg
jle
or
clc
lods
es
sub
xor
sti
cwtl
xsetbv
push
add
jnp,pn
ficomps
aas
lods
sbb
lock
in
popf
pop
imul
xor
jp
mov
pop
jmp
inc
pop
dec
sahf
data16
adc
cmp
lcall
xlat
jb
aas
test
mov
push
add
and
cli
roll
or
and
pusha
shl
js
cmpsb
xor
push
push
mov
cmp
addr16
or
or
pop
ljmp
or
adc
stos
repz
orb
mov
outsl
imul
in
push
out
push
push
leave
mov
xchg
jg
insl
jnp
daa
aaa
lret
into
stos
cmp
adc
lds
test
xor
pop
movsb
xchg
mov
outsl
insl
jg
and
insb
push
cmp
jns
mov
scas
decl
hlt
xchg
fldenv
movsl
mov
and
popa
pop
and
mov
or
sub
cmp
shr
inc
gs
movsb
jg
mov
cwtl
ret
popf
mov
sub
mov
ja
xchg
xchg
push
sbb
aas
mull
mov
fwait
loop
xchg
fs
jp
and
mov
and
icebp
loopne
lret
adc
push
filds
mov
fldl
cwtl
sbbb
push
pop
je
repnz
sub
lret
add
idiv
test
or
xor
fnsave
xchg
xchg
jb
pop
sbb
add
pusha
dec
adc
pop
add
lea
inc
mov
push
add
jg
shlb
mov
dec
repz
mov
xorl
rcrb
repnz
adc
cltd
push
stc
movb
cmpsl
scas
int
push
negb
lahf
cmp
sbbb
dec
push
xor
jmp
mov
fldcw
mov
push
imul
in
sbb
sbb
into
xlat
ret
cmc
adc
ret
jb
ret
cmp
call
xchg
add
shr
and
dec
cmp
ret
xlat
shll
inc
cmc
sub
popa
and
sub
cmpsb
outsl
in
xor
jecxz
scas
cld
pop
fs
jecxz
stc
aam
and
pushf
int
imul
fists
ffree
cmp
sub
or
xchg
mov
xor
inc
in
mov
add
or
ret
dec
mov
lds
jge
pop
or
sbbl
loop
data16
push
sub
fs
jbe
rol
subl
push
mov
mov
call
daa
ljmp
sub
or
inc
xchg
sbb
adc
push
xchg
fcom
push
je
idivl
dec
jne
test
xchg
iret
flds
ficoms
and
inc
clc
mov
int3
jo
out
outsb
dec
mov
sarb
mov
test
in
mov
call
mov
push
add
out
rol
push
jne
addr16
xchg
lock
mov
xorl
xor
subl
jmp
scas
popa
inc
jge
sbb
cs
jg
xchg
mov
xchg
lods
mov
push
mov
xor
lret
out
and
mov
push
arpl
sbb
or
lds
pop
ret
fisttpll
insb
dec
add
aaa
cmpsl
mov
fwait
fwait
jno
and
mov
lret
loop
sub
adc
mov
movsl
sbb
daa
mov
cmp
mov
or
in
sbb
xchg
cmp
dec
enter
or
jb
sub
sub
inc
mov
adc
inc
sub
sbb
mov
rolb
mov
xchg
pushf
inc
xchg
sbb
inc
in
outsl
jbe
cmp
jmp
scas
pop
out
lea
stos
xchg
mov
push
outsl
add
mov
add
clc
fnsave
sub
das
fstpt
sti
xor
ret
enter
fdivl
movsl
sti
push
test
sarb
bnd
xchg
push
lds
fucom
jae
loope
cmp
ds
xor
or
loopne
jecxz
data16
push
add
loopne
adc
mov
cmp
jge
and
pop
sub
xor
or
mov
cmp
out
shlb
inc
push
fmull
lock
and
iret
popa
fmulp
mov
mov
stos
dec
repz
outsb
jne
test
jo
and
mov
loopne
and
xor
push
popf
lret
xchg
out
shrl
lock
mov
nop
add
and
jle
scas
add
cwtl
push
repnz
fmuls
add
dec
add
xchg
in
push
outsb
in
mov
sub
mov
or
jno
jo
adc
mov
adcl
cs
insl
mov
sbb
pop
jbe
xor
jg
push
in
inc
flds
xchg
push
leave
add
xlat
xor
mov
sbb
jo
nop
pop
fsub
cli
shlb
loopne
enter
stos
push
repnz
jnp
mov
cmp
push
push
mov
lahf
shl
sti
lcall
das
lea
pop
push
inc
mov
leave
jmp
cmpsb
inc
nop
imul
cld
push
mov
xchg
das
bound
push
fcom
adc
sbb
fwait
jp
mov
pop
jo
cld
push
add
arpl
data16
movmskps
dec
xor
dec
sub
cmp
mov
imul
fs
es
into
ret
movsl
sbb
adc
mov
mov
push
pushf
cwtl
jne
shll
xlat
adc
adc
add
pop
mov
stc
call
mov
push
cmp
out
sub
mov
icebp
insl
xorb
inc
andb
dec
popa
stc
sbbb
es
sub
stos
inc
enter
gs
jecxz
sahf
xchg
dec
cmc
pop
in
or
push
in
sub
xor
shll
jnp
jg
adc
jb
dec
scas
jbe
xchg
push
inc
stos
mov
cld
shlb
bound
fidivrl
jp
nop
push
in
pop
cs
inc
push
and
mov
mov
dec
std
stc
into
xor
ficomps
dec
stos
or
nop
paddusw
sub
mov
lcall
ja
lcall
mov
nop
lcall
fucomp
jg
mov
pop
mov
pop
dec
shl
pop
push
cli
sbb
jl
add
adc
inc
test
enter
stos
out
add
adc
add
sub
jmp
js
cmc
mov
jle
sarl
mov
stos
cmp
adc
fisubrl
roll
vpaddsw
inc
repz
fdivl
filds
aaa
jb
pop
xor
ljmp
push
mov
cltd
xchg
cmp
jae
xor
clc
int
dec
es
test
mov
sbb
ljmp
dec
push
sbb
xor
in
sub
inc
jo
iret
sar
lea
ljmp
test
fs
stc
xlat
bswap
mov
adc
test
inc
orb
or
in
add
lods
sti
mov
inc
sahf
fisubs
sti
fidivrs
jge
or
inc
fs
inc
test
test
jb
jecxz
ljmp
decl
xor
jb
pop
pushf
shll
ficompl
cwtl
fnstenv
sbb
enter
leave
scas
mov
movsb
insl
clc
sbb
fwait
mov
push
arpl
lea
mov
mov
stos
orl
cmp
pusha
or
out
sahf
test
fwait
cmp
xchg
pop
add
dec
and
push
bound
lock
push
pop
iret
pushf
cmp
test
fisubrs
mov
xlat
mov
mov
jne
fsts
mov
call
jle
pusha
add
inc
dec
pop
into
je
icebp
fstl
push
fwait
inc
xlat
imul
inc
arpl
cwtl
cli
and
jmp
js
scas
push
ret
popa
mov
rol
ljmp
clc
dec
popf
cmp
data16
and
fdivs
stc
add
out
jmp
notl
into
fmul
cltd
jp
pop
cmp
roll
scas
inc
mov
inc
shlb
jle
adc
arpl
in
sti
mov
and
pop
out
mov
je
mov
out
mov
pop
xchg
mov
pop
add
xor
jp
imul
pop
jb
dec
jl
int3
cmpsb
rolb
adc
lock
inc
roll
sbb
inc
xor
jb
or
mov
jg
outsl
test
pop
das
push
push
fildll
jle
into
in
pop
sub
sub
je
push
pop
mov
push
addr16
dec
test
inc
sbb
sbb
aad
mov
sub
ss
int
inc
call
cltd
repz
imul
fsubrl
mov
movsl
in
out
pop
xor
and
ror
or
fisubl
adc
pusha
mov
clc
sub
call
dec
xlat
leave
pusha
adc
imull
sub
lea
pop
and
in
cltd
repnz
jl
and
mov
call
in
out
bound
in
enter
adc
ficomps
pop
jg
rcll
xchg
xor
iret
inc
adc
mov
out
mov
or
dec
and
pop
repnz
pshufw
int3
push
fiaddl
dec
popl
rclb
int3
cltd
pusha
sub
imulb
mov
jae
cmp
pop
mov
sub
stc
cmpl
outsb
insl
xor
stos
jp
push
out
fildll
xorl
movl
dec
fisttps
and
mov
sub
mov
fsubrl
sarl
jne
mov
data16
clc
subl
sbb
jns
mov
mov
cwtl
mov
dec
and
xor
les
cli
mov
mov
fnsave
test
in
xchg
push
in
add
sub
add
loope
imul
jmp
add
or
or
adc
dec
push
ja
in
pop
push
push
jne
popf
mov
push
stos
out
mov
jne
ja
lret
xchg
inc
jle
sub
xchg
adc
jp
cmp
mov
test
pop
stos
or
xchg
sbb
lods
adc
cld
test
push
mov
test
mov
into
movsl
dec
fcmovnu
ds
lret
push
insb
or
mov
lods
stos
sub
xchg
cld
std
pop
lret
ret
lock
outsl
jg
add
inc
je
push
mov
cs
jb
stos
gs
ss
ret
push
in
mull
jecxz
push
pop
or
subb
and
jecxz
call
into
xchg
hlt
xchg
cmpl
mov
pop
test
stos
mulb
lret
aad
gs
rol
pop
std
mov
fsub
and
inc
xchg
sub
inc
adc
ja
je
jl
loopne
cmp
xor
xor
inc
cwtl
cmpsb
sahf
aad
lcall
arpl
andl
pop
fiaddl
cmp
mov
and
xchg
aaa
ds
int3
pop
dec
mov
fimull
mov
mov
adc
dec
and
inc
loopne
dec
add
and
ret
push
ficompl
jb
inc
adc
jl
loop
cmp
jbe
out
sahf
je
jg
shrl
scas
cmc
in
mov
sub
dec
push
testb
mov
push
xor
pop
add
xchg
lds
dec
pop
insl
push
push
inc
xor
cmp
sbb
inc
mov
xchg
dec
dec
and
adc
xorl
mov
dec
mov
or
inc
mov
mov
inc
std
pop
das
rorb
in
incb
ret
xor
push
pushf
test
insb
les
lds
mov
mov
pop
out
jno
into
rcrl
test
sbb
push
cmpsl
test
lods
mov
mov
aam
js
and
pop
inc
cmp
pop
and
sub
dec
mov
sbb
dec
sbb
and
lock
stc
por
and
push
or
or
and
sbb
inc
pushf
ds
jecxz
xchg
mov
fwait
xor
mov
xchg
dec
jb
cmp
adc
in
daa
lahf
lds
loopne
fmuls
iret
pop
sbb
mov
clc
lcall
pop
pop
lahf
outsb
subb
cld
loopne
arpl
mov
sbb
les
ror
jl
inc
dec
not
mov
push
push
mov
icebp
jb
lcall
shrb
testb
mov
or
mov
aaa
sbb
andb
orb
sub
idiv
addb
push
pop
dec
mov
out
lods
adc
adc
stos
inc
popa
pop
stos
fwait
cmp
sub
in
jno
fsubr
dec
cmp
cmp
imull
call
lods
bnd
or
inc
mov
push
mov
xorl
out
sub
push
sbb
jp
inc
xor
in
cld
lret
js
xchg
cmpsl
aad
mov
arpl
xchg
aam
and
and
push
dec
in
xor
cmp
ljmp
push
popa
out
imul
push
repz
mov
xchg
jne
mov
std
dec
cmp
incb
fiadds
inc
in
push
xchg
cwtl
loop
or
push
mov
addr16
repz
roll
ret
sub
daa
lret
mov
in
js
test
add
testb
ds
int
insl
ret
cmpsl
adc
in
data16
inc
mov
jb
inc
ret
mov
repz
adc
mov
movsl
cmc
add
push
mov
push
xor
mov
xor
cmp
dec
dec
inc
int3
cltd
cmp
cmpsl
inc
sbb
and
xchg
add
jne
sub
pusha
pop
dec
jmp
int3
mov
addr16
in
in
lods
cmp
xchg
pop
leave
pusha
jle
enter
pushf
js
popa
push
pop
adc
fwait
push
lds
retw
inc
pop
or
adc
stos
xlat
repnz
scas
lahf
xor
push
and
insb
addl
sbb
out
imul
cmp
mov
fs
sub
mov
inc
inc
ja
dec
jbe
cmp
mov
es
ret
adc
xchg
push
or
pushf
je
cmp
mov
jge
in
es
lods
fmull
insl
les
sbbl
xchg
cmp
or
out
int
popa
xchg
test
test
orb
and
in
mov
add
out
in
jmp
lcall
fisubrs
or
xor
mov
adc
scas
cmc
or
jmp
xor
insl
lret
mov
loope
loopne
insl
test
xor
hlt
adc
fnsave
insb
sub
mov
sarb
lret
pop
mov
jge
jmp
push
stos
mov
pop
gs
mov
mov
fwait
movsl
shrl
fisttps
fbld
adc
add
xor
gs
repz
fadd
dec
sbb
repnz
jp
fidivrs
aas
adc
in
mov
mov
xchg
sub
jae
inc
and
dec
fadds
es
cwtl
mul
sub
js
pop
push
add
pop
xor
jge
add
aas
shlb
inc
adc
loope
fs
xchg
int3
dec
add
mov
xchg
mov
aas
cmp
aas
cmc
test
in
out
test
orb
cld
icebp
movsl
or
mov
stc
xor
pop
xor
mov
and
or
jge
jno
mov
cmc
insb
lock
and
and
jmp
les
dec
fsubr
push
lcall
imul
test
imul
adc
adc
adc
xchg
or
sbb
mov
jae
jnp
pop
xchg
loopne
into
xor
addl
mov
jle
push
sti
pop
mov
and
aad
stos
cld
xor
pop
inc
ja
imul
shrb
or
addr16
cmc
sbb
jae
cwtl
pop
in
jmp
insb
insb
ljmp
test
mov
inc
pop
and
sbb
test
movb
cmp
adc
mov
or
test
outsb
fsub
mov
stc
and
bound
addl
out
and
aad
jge
nop
lods
xor
mov
adc
jno
push
imul
jge
ret
pop
adc
sbb
xor
and
loopne
push
adc
jmp
repnz
sub
sub
ljmp
ljmp
imull
jo
inc
pcmpeqd
sub
movl
jmp
cmpl
mov
movl
movl
mov
jmp
movl
jle
push
pushl
call
andl
adc
xor
xor
mov
sub
and
not
and
movzwl
adc
cmpl
mov
movl
movzbl
mov
jmp
movl
movl
jbe
push
push
push
pushl
call
add
sbb
sbb
xor
add
mov
mov
shrd
adcl
mov
or
mov
addl
jmp
inc
or
add
cltd
or
arpl
ja
adc
cwtl
mov
jbe
shlw
fwait
cld
dec
rorl
add
lret
out
cmp
int3
and
icebp
add
jle
mov
mov
jnp
push
sahf
xchg
pop
sub
nop
cmp
mov
dec
jo
daa
sti
xor
cmp
jae
ljmp
shll
scas
int3
fldt
xor
rol
mov
rolb
pop
lcall
popf
jecxz
dec
and
in
push
jnp
pusha
lcall
jb
aad
push
push
dec
or
pop
sub
jnp
xchg
into
imul
mov
je
push
out
lods
adc
pop
inc
inc
lahf
mov
nop
dec
lods
or
iret
push
xor
leave
and
mov
cld
pop
ss
xor
rorl
push
ficoml
pop
imul
arpl
les
shrl
inc
shr
std
push
jg
xchg
mov
xor
mov
or
in
ja
cmp
and
pop
push
mov
xchg
stc
adcb
sub
insl
mov
mov
add
xor
daa
mov
repz
dec
dec
insl
mov
mov
adc
cs
sbb
mov
xor
popf
orl
lret
stos
xchg
push
pop
push
sbb
pop
ret
sbb
inc
pop
fsubr
or
sbb
xor
mov
add
sbb
cmp
lret
je
mov
mov
cmp
iret
movl
push
mov
sub
cmp
cmp
shrb
xor
mov
jmp
pop
js
shll
das
call
pusha
test
cmp
mov
or
lods
jmp
push
movsb
dec
int3
bound
fs
jns
dec
test
mov
ret
and
cmpsl
cmp
nop
shlb
rcll
add
pop
loop
sahf
mov
dec
outsl
mov
pop
mov
sahf
call
movl
jecxz
int3
adc
out
mov
xchg
shrl
xchg
xchg
cmpsl
or
cmp
mov
cmp
mov
popa
rcrl
pop
jg
je
sbbb
push
out
push
inc
pop
mov
std
aad
loopne
subl
shlb
lds
mov
sub
fstps
imul
xchg
lret
xlat
jmp
mov
outsl
xchg
jg
aad
xor
ds
aaa
js
mov
xor
int3
jae
jne
loope
lods
or
sub
mov
mov
xor
imul
cmp
int
repz
mov
sbb
inc
int3
cmp
fisubl
dec
sub
sub
jo
dec
jl
push
jae
adc
mov
xor
callw
dec
inc
push
pop
pusha
dec
loop
jae
push
aaa
popa
mov
stos
pop
jmp
mov
push
and
scas
popf
scas
add
sub
xor
sbb
icebp
in
and
filds
js
mov
inc
pop
testb
mov
je
mov
jno
mov
pushf
push
adc
push
sub
nop
int
dec
lea
leave
mov
aad
sub
dec
je
fwait
ret
insb
ja
mov
jno
xchg
movsl
xchg
lods
and
bound
xchg
mov
inc
jl
out
js
or
js
push
jge
shl
in
cmpsb
push
jmp
ds
push
pusha
mov
outsl
orl
xchg
mov
mov
stos
in
mov
pop
cs
fstpl
sbb
lea
lods
clc
cmp
mov
cmp
sub
fistl
lods
jmp
sub
pop
fisttps
mov
addr16
iret
not
dec
mov
enter
sbb
cmpsl
mov
xlat
fs
mov
cltd
pusha
dec
mov
pop
push
aaa
jl
mov
and
mov
ljmp
xchg
inc
cli
mov
jns
adc
sbb
xchg
lods
lcall
jg
sub
push
and
cltd
mov
icebp
mov
cwtl
mov
jmp
adc
pop
mov
loop
push
inc
adc
sub
inc
aam
insl
loop
movl
repnz
dec
mul
dec
dec
xchg
fwait
jns
mov
shl
xor
stos
dec
cmp
out
cmp
fists
repz
in
push
inc
and
insb
lea
mov
mulb
pop
jo
movsb
das
cltd
mov
add
pop
dec
dec
imul
stc
ud2
in
pop
ficoms
jnp
std
ffreep
lret
ja
loope
sbb
mov
mov
lahf
lods
xchg
or
jae
ret
out
lea
xchg
jne
dec
mov
lods
scas
or
pop
cmp
xor
arpl
pushf
and
int3
js
es
adc
cwtl
and
mov
mov
in
insb
add
xchg
mov
adc
and
add
jo
add
add
stos
jne
loope
mov
movsb
sti
xchg
push
jp
mov
dec
fsub
arpl
lods
cmpl
mov
sbbl
js
adc
jnp
pop
mov
xchg
jns
sub
sarb
lods
aas
inc
push
jb
sub
adc
test
dec
andl
push
inc
mov
xor
rol
in
scas
mov
push
js
push
fwait
cmp
cmpsb
mov
inc
cmp
fdivrl
arpl
adc
mov
or
popa
ljmp
mov
dec
xchg
les
ja
sub
inc
push
arpl
push
inc
cs
movsl
addr16
ja
fsubrs
pusha
cs
leave
mulb
cmp
out
lock
sub
and
xor
xchg
adc
lock
lahf
add
outsb
pop
mov
xor
out
pop
aaa
dec
dec
dec
es
push
push
sub
test
icebp
ja
adc
fcmovnbe
aas
cmpsb
and
or
test
aaa
mov
push
push
arpl
xchg
pop
insb
vunpcklps
hlt
lock
cld
jmp
aaa
outsl
sub
sbb
push
roll
or
cmp
loopne
mov
push
xor
cmp
xlat
sbb
mov
xor
test
cmc
ret
sti
repz
cmp
dec
jmp
dec
scas
arpl
mov
adc
test
mov
adc
dec
adc
das
mov
clc
aas
daa
mov
jnp
and
out
dec
xchg
dec
stos
arpl
adc
mov
imul
add
push
mov
mov
add
cmp
imul
mov
js
sub
cmp
ds
insb
lea
fsubl
repnz
pop
dec
das
adc
mov
sbb
or
mov
push
aad
jle
xor
shl
xor
movl
or
shr
mov
subl
mov
mov
addl
mov
adcl
shrd
shr
mov
cmpl
not
mov
movl
mov
jmp
mov
mov
jb
pushl
pushl
pushl
pushl
push
pushl
call
or
adcl
movl
sub
and
subl
subl
mov
mov
xor
xor
adcl
or
adcl
shl
add
add
add
mov
mov
adc
mov
and
shrd
cmpl
movl
not
mov
mov
jmp
movl
movl
jge
pushl
pushl
push
pushl
push
push
call
sbb
add
or
or
xor
or
add
mov
movl
cmpl
mov
movl
mov
jmp
movl
movl
jg
push
push
pushl
call
add
sbbl
mov
adc
mov
xor
mov
addl
sub
shr
movl
mov
or
mov
addl
xor
shl
cmpl
movl
mov
not
jmp
movl
ja
pushl
push
push
push
call
xorl
xor
incl
xorl
subl
sub
xor
mov
sub
or
cmpl
mov
mov
movl
jmp
mov
jl
push
call
addl
adc
xor
neg
mov
mov
add
sbb
and
mov
movl
mov
and
mov
movl
mov
add
movl
mov
mov
adc
jmp
ret
mov
dec
rcrl
xchg
mov
add
fsubl
xor
idiv
mov
dec
call
pop
pop
xlat
sub
mov
jecxz
iret
shlb
fdivl
cltd
jmp
jns
fists
in
pop
jne
fsts
xor
into
cmp
hlt
jb
cmp
loopne
jne
mov
mov
push
cmp
out
pslld
shrb
xchg
xlat
mov
orb
push
shrb
into
pusha
adc
push
dec
sub
in
sti
xor
js
xchg
outsl
jno
xchg
mov
sub
inc
out
pushf
cmp
mov
inc
inc
jo
jbe
or
sbb
test
nop
dec
mov
mov
xor
cwtl
jmp
and
lahf
fists
dec
add
dec
jnp
sub
outsb
mov
sbb
add
loope
lcall
jl
test
pop
jnp
inc
outsl
or
cli
or
js
xchg
les
cmp
xchg
sbb
aad
adc
cmp
push
adcl
pxor
in
push
pop
inc
jne
shrl
push
imul
sbb
les
les
jl
fnsave
out
xchg
lcall
movb
cmpsl
into
xchg
xchg
mov
sbb
icebp
aas
lds
push
lods
mov
push
dec
jbe
shr
repnz
jle
popa
sbb
inc
inc
or
pusha
pop
adc
pop
enter
mov
and
fists
stos
addl
pushl
sbb
popf
adc
sub
mov
sbb
loop
cmp
sbb
int3
xlat
mov
jle
stos
fld
push
imulb
filds
add
mov
jo
cwtl
jns
push
cmpsb
pop
push
jb
inc
adc
mov
test
and
inc
sarl
in
adc
ret
jle
pop
jge
sti
inc
mov
xlat
je
push
call
scas
jl
xchg
sbb
mov
add
inc
mov
insl
add
jecxz
jle
fidivs
push
sub
jg
out
jae
hlt
and
inc
push
adc
test
movsl
push
icebp
push
jb
mov
mov
mov
mov
xchg
mov
jae
test
fisubrs
add
lret
fisubrs
cmp
push
adc
cwtl
inc
loope
cld
mov
movsl
out
mov
mov
inc
cmp
lret
and
in
int
test
ds
push
outsl
adcl
insl
jl
jbe
cmp
call
flds
pop
adc
addr16
sub
sub
sti
test
shl
pop
pop
mov
jo
insb
xchg
insl
movsb
dec
push
push
cs
sti
ret
mov
push
add
inc
icebp
push
cltd
notl
mov
divb
inc
test
sahf
aaa
add
addr16
loop
fisubrs
push
push
cld
pop
ljmp
and
or
movsl
mov
repz
test
popf
and
je
in
mov
fbld
push
ja
test
jmp
inc
cmp
lahf
shll
and
sub
push
lret
das
lea
inc
aam
xor
lock
pop
popl
pop
dec
adc
jp
sub
push
adc
lods
outsl
and
push
xchg
lods
in
int3
add
sbb
mov
xlat
xchg
call
mov
fstps
push
inc
mov
or
xor
lods
mov
xchg
mov
dec
cmp
cwtl
sub
push
repnz
xchg
fnsave
jl
hlt
dec
std
test
mov
nop
imul
test
push
daa
cld
dec
pop
cltd
in
xlat
jae
xlat
inc
sbb
lret
dec
pop
and
push
enter
sub
adc
lret
jb
xor
dec
mov
stc
mov
lods
insl
or
pop
je
mov
fdivrl
dec
push
cli
sub
div
iret
addb
mov
mov
push
mov
test
push
push
pop
das
push
scas
cli
faddl
test
in
nop
imul
jle
les
cmp
sti
mov
push
inc
adc
mov
adc
das
mov
jle,pt
and
clc
lock
call
mov
push
les
mov
lods
repz
xor
int3
std
popf
ficompl
or
divb
test
icebp
mov
lods
enter
push
xor
adcb
incl
pusha
enter
stos
pop
testb
xchg
gs
loope
inc
ret
push
movsb
and
mov
dec
aad
pop
xchg
stc
push
cld
xlat
push
lret
adc
mov
inc
inc
adc
push
mov
jmp
mov
jmp
repnz
lea
cmp
mov
les
jl
jo
lock
push
inc
pop
pushl
shr
pop
cld
add
inc
mov
cli
rorl
lahf
mov
sbb
ficompl
icebp
cld
mov
jno
out
mov
aaa
cmc
lahf
nop
stos
sub
xchg
mov
sbb
xor
mov
ret
jnp
xchg
sub
in
jle
push
xlat
sbb
lahf
pop
scas
and
movlps
push
int
lret
loopne
dec
leave
pop
aaa
adc
outsl
jecxz
lods
push
sbb
ret
repz
insb
js
mov
inc
in
pop
xor
leave
mov
push
gs
sahf
fistl
mov
test
push
ret
sbb
lds
out
or
mov
test
in
and
mov
les
aas
inc
es
jmp
das
andb
das
test
fimull
add
mov
ss
notb
cwtl
xor
inc
jle
pop
xchg
jl
adc
lret
fisubrs
push
insb
and
cmpsb
jb
or
inc
dec
lahf
imul
fwait
es
or
jns
cmp
xchg
lock
sub
gs
and
add
fsubs
mov
or
or
cmp
out
and
icebp
jle
arpl
ret
dec
mov
push
xchg
jne
out
pop
sub
xchg
in
pop
test
mov
sbb
adc
sahf
pop
mov
jae
nop
add
adc
mov
xor
leave
test
movsb
or
insl
clc
xchg
frstor
sbb
pop
sbb
mov
test
push
clc
dec
sub
insl
jg
and
cmp
push
or
aad
and
shll
pop
mov
inc
pop
xor
jle
cli
adc
int3
ret
lea
ret
fisubrl
add
mov
out
xchg
shll
out
push
xchg
divb
out
bound
mov
push
push
jmp
insb
daa
icebp
pop
in
inc
adc
int
mov
jnp
test
adc
mov
pop
mov
pop
leave
fadds
idivl
inc
hlt
movl
jmp
lods
jp
scas
adc
xchg
mov
pop
fisttpl
ja
xchg
jnp
dec
negb
push
sub
aam
jg
mov
mov
adc
cmp
jae
stos
xor
or
mov
add
mov
cltd
andl
add
sub
aaa
xchg
add
les
lods
mov
adc
adc
lret
ret
aas
jne
cmc
int
cli
sahf
lods
sbb
mov
inc
fisttpl
test
inc
sahf
or
mov
cmp
cmpb
mov
dec
cmc
lods
xor
xchg
pop
mov
dec
cmp
pop
push
test
ret
daa
mov
sbb
nop
iret
push
lea
mov
mov
sti
aas
rorl
jb
or
pop
sbb
orl
fcmovne
ret
and
mov
movl
jp
sbb
xchg
mov
dec
pop
js
push
add
pop
jbe
filds
mov
std
insl
pop
in
mov
lretw
mulb
idivl
adc
inc
and
and
mov
mov
jno
dec
clc
movsl
and
push
mov
cmp
or
aam
jns
mov
push
cwtl
sub
test
rol
xchg
sbb
sbb
inc
xorl
cmovg
sub
decb
push
test
jecxz
xor
sub
jg
leave
sahf
cmc
cmp
div
pop
mov
push
or
jo
sti
mov
cmp
jecxz
bound
xlat
mov
inc
fisttps
mov
sbb
jne
or
popa
mov
jle
or
adc
pop
mov
inc
fsubl
push
loop
jecxz
lret
mov
divl
adc
dec
dec
test
repz
mov
cli
mov
rorb
sbb
and
sbb
bswap
out
cmp
rorl
pushf
cmp
sub
rcrl
das
and
rcr
lcall
out
pop
lock
pop
and
cmpsb
fcomp
test
pop
mov
jbe
loopne
adc
stc
jne
cmp
arpl
sbb
jo
pop
test
cmp
fcompl
js
jb
cmpps
imul
cmpsb
sar
inc
sbb
jo
lods
fisubs
push
jo
mov
sbb
cwtl
ret
jle
sbb
movsl
jle
popa
push
xchg
cwtl
sbb
rcl
or
or
xchg
scas
adc
shr
dec
mov
aaa
or
jb
cli
push
adc
jmp
movsl
dec
clc
mov
mov
pushl
ja
fisubl
decb
lret
fxch
sub
jg
or
dec
pop
jae
xor
dec
outsb
ret
out
push
pop
add
xchg
push
add
and
cmp
daa
clc
stos
xlat
inc
mov
dec
xchg
mov
cmp
push
rcrl
xor
dec
xchg
inc
fbld
cmp
mov
cmp
pop
push
mov
xchg
data16
jae
loope
scas
and
add
cmpsl
xchg
and
dec
jecxz
jg
fwait
jle
mov
cmpsb
pop
inc
cmp
aam
icebp
rcrb
dec
ja
lods
mov
seto
xor
mov
sub
push
int
push
push
sub
bound
mov
xchg
pusha
push
mov
fsts
pop
and
push
mulb
aad
out
sbb
xor
inc
jg
xchg
fs
mov
jns
add
push
idivb
in
sbb
stos
jle
or
js
xor
jbe
or
mov
adc
in
mov
rcl
andl
xlat
jbe
push
mov
add
jno
dec
ljmp
mov
cmp
or
leave
insb
sbb
sbb
sub
aam
jb
or
scas
xchg
lock
mov
mov
lahf
lds
repz
bound
and
dec
out
aaa
ficoml
mulps
aad
xlat
or
jge
leave
jae
mov
cltd
incl
xchg
adc
insl
out
xor
push
mov
mov
icebp
sbb
shll
andl
jae
add
pop
mov
pcmpgtw
xchg
lcall
jmp
into
cmp
sbb
xchg
mov
and
fsts
inc
in
push
shrb
lds
mov
mov
je
mov
jge
jp
mov
add
popa
dec
pop
xor
jmp
and
xor
subl
inc
cmp
shll
adc
popf
test
lock
sbb
push
adc
push
repnz
xchg
sub
fstpt
mov
test
cli
xlat
sub
mov
loopne
push
xchg
bound
dec
pop
jmp
pop
sub
decl
cmp
dec
ficoml
sahf
out
pop
inc
jo
scas
jno
flds
loop
jp
rolb
push
inc
icebp
loope
adc
ficoms
rcrl
aas
jno
les
mov
push
sbb
dec
adc
or
fwait
xor
or
les
icebp
pusha
add
movsl
push
aad
pop
dec
mov
and
sub
push
stc
insl
sbb
jl
enter
nop
or
insl
das
lods
add
clc
lea
pop
pop
push
jo
aas
jl
dec
pushl
imul
ds
hlt
xor
fwait
mov
inc
push
mov
jb
test
or
ds
fcom
inc
push
dec
push
in
inc
mov
pop
lret
jmp
add
addl
lret
lds
or
fstl
call
shrl
repz
fildl
mov
sbb
shrb
bound
lahf
sbb
aaa
pop
shrb
sub
call
inc
push
lods
mov
out
flds
cs
js
ds
mov
xchg
pop
push
cmp
mov
add
sbb
idivl
ds
or
jns
mov
xchg
cmpsb
mov
xchg
jb
xchg
lds
lock
pop
dec
xor
js
jecxz
sbb
push
pop
js
adc
mov
out
pop
or
lret
fcmovb
icebp
or
sbb
push
mov
and
sub
out
jnp
push
push
shll
dec
sbb
daa
dec
cmpsl
cmp
dec
mov
cmpl
mov
add
add
adc
gs
xor
sarl
icebp
sbb
lds
jb
je
inc
xchg
lds
jo
stos
movsb
ja
out
pop
dec
movsl
imul
clc
mov
mov
inc
add
movsb
xor
xchg
xchg
or
int3
in
lock
push
jns
push
lret
add
arpl
out
or
into
repnz
in
push
inc
pop
push
ss
hlt
out
mov
mov
mov
shrd
jmp
add
dec
push
adc
call
shlb
xchg
add
pushf
xchg
xchg
jo
jecxz
lock
sbb
sbb
js
subl
jnp
mov
xchg
ret
push
dec
and
jae
mov
dec
out
sbb
mov
mov
movsl
insl
or
sub
outsb
dec
xor
mov
icebp
test
push
xor
xor
movsb
mov
insl
inc
iret
xchg
dec
jle
int3
pop
sub
insl
lea
loop
mov
add
or
test
fwait
sub
repnz
cmp
sbb
rolb
xor
pop
dec
je
mov
dec
mov
mov
xchg
push
jnp
adc
cmpsl
mov
mov
or
inc
inc
sti
xor
sti
push
cmpsb
data16
out
lret
or
mov
inc
fidivrl
mov
pop
and
nop
ljmp
lret
test
clc
pop
xchg
int3
xchg
jmp
mov
addr16
mov
dec
lds
insl
xchg
lret
nop
fisttps
dec
lods
shr
das
mov
outsb
in
or
stos
mull
pop
sbb
push
sbb
push
and
mov
cltd
sub
push
or
push
inc
data16
fsubrl
cmp
jb
lock
das
or
and
gs
pop
or
sbb
inc
inc
in
pop
adc
push
mov
es
loop
xchg
mov
stos
mov
jecxz,pt
and
pop
ljmp
pop
pop
ret
stos
jge
or
push
dec
andb
int3
pop
mov
pop
xchg
and
into
xor
inc
cmp
popf
cmp
sbb
int
movsb
xchg
adc
sti
out
push
testb
adc
cmp
push
xlat
roll
or
or
test
jmp
shll
aaa
mov
adc
xchg
adc
js
add
cmp
mov
inc
xchg
xchg
sub
or
sbb
jl
in
inc
in
and
sub
xchg
and
adcb
push
xor
inc
inc
add
sbb
inc
adc
push
hlt
sub
addb
mov
jmp
add
mov
pop
mov
xlat
mov
mov
or
test
or
int
js
js
dec
loope
inc
and
iret
jge
fnsave
stos
mov
lods
lock
movsl
adc
dec
add
decl
sbb
xor
loop
mov
out
push
mov
or
iret
pop
or
sbb
int
imul
sti
adc
mul
clc
mov
lea
add
pushf
sub
cmp
lahf
orl
imul
ljmp
xor
cmp
sbb
test
mov
shlb
shrl
pop
jg
push
or
push
mov
adc
lahf
addl
jge
sub
jg
mov
int3
or
fsubs
push
into
fcmovb
pop
cld
adc
mov
ret
sub
push
xchg
shrl
fiadds
mov
in
je
enter
gs
int
mov
je
xchg
sbbb
movsb
ds
repz
mov
idiv
push
xor
or
mov
dec
xchg
xchg
cmp
or
cmc
insl
sbb
enter
jmp
xchg
push
ret
push
cmpsb
cmpb
popa
rclb
and
xchg
leave
cmp
movsb
loopne
pop
imull
in
xlat
sbb
pop
dec
scas
faddl
push
mov
jecxz
push
jp
popw
inc
mov
lcall
sbb
pusha
fwait
mov
add
out
fcmovbe
push
and
dec
shlb
pop
iret
loope
sub
push
lret
jae
rcrb
mov
in
into
xlat
cmp
addb
das
int
das
sbb
das
imul
les
mov
inc
or
iret
jle
aaa
int
ja
pop
lcall
test
cmpsl
in
stc
idivl
lock
mov
dec
mov
adc
popa
xor
rolb
xchg
mov
shr
mov
push
pop
loopne
imul
pop
xchg
cli
mov
sub
int
out
cmp
test
mulb
cmp
cmp
dec
shlb
dec
pop
scas
and
pop
sahf
jno
icebp
ffree
pop
clc
roll
mov
mov
push
popf
lret
negl
ja
aaa
and
mov
push
xchg
mov
push
aad
xchg
sub
repz
or
adc
and
fnsave
imul
xchg
inc
mov
das
lret
jecxz
outsb
cmp
mov
aam
inc
ds
ja
loop
xor
dec
push
imul
and
mov
sub
testl
ss
xor
ja
mov
push
fistpl
popa
fmull
fnsave
or
push
movsl
jecxz
push
cmc
insl
pop
addr16
popa
push
lea
idivl
movsb
pop
cmp
aas
or
insb
fs
test
out
or
ret
movsl
jle
xchg
sub
sbb
imul
and
add
add
inc
pop
out
mov
outsb
pusha
sahf
jp
push
add
cmp
das
sub
icebp
jl
xchg
loopne
fists
push
adc
cmp
cmp
sub
xchg
push
lock
loope
out
insb
mov
mov
push
mov
push
xchg
pushf
pop
hlt
mov
pop
lods
lret
jne
daa
jmp
xor
sbb
mov
jae
cmp
and
shrb
icebp
pop
fstpl
dec
lods
mov
dec
cs
mov
mov
xor
gs
rcll
movsb
xchg
mov
push
fldcw
repnz
and
notl
pop
nop
cmp
out
and
lret
das
push
add
out
cmp
xor
ret
adc
sti
cli
and
xchg
push
in
lcall
lcall
das
int3
mov
cmp
jns
xor
leave
cmp
pop
push
sub
scas
imul
inc
dec
int
dec
adc
jbe
inc
out
lock
mov
int
lret
ja
mov
mov
nop
out
lret
pop
push
imul
imul
push
out
sti
pop
adc
xor
ret
xchg
pop
dec
inc
push
jg
cmp
fwait
test
movsl
sbb
push
daa
out
cli
dec
lret
je
hlt
aaa
lret
lods
pop
push
lods
xor
pop
mov
xchg
dec
xchg
in
int
pop
nop
test
push
loop
sahf
mov
fs
repz
push
mov
addr16
jl
out
sub
ret
imul
and
popf
add
test
cld
aaa
into
mov
lahf
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
jmp
in
in
data16
push
sbb
sti
rclb
movups
bound
ljmp
repz
pop
xor
add
out
pop
sahf
sub
nop
lcall
xor
aam
mov
jp
jge
xor
out
jbe
push
scas
cmp
popf
cmp
lahf
or
nop
pop
sarl
lods
xor
test
insb
les
cmc
out
jne
mov
mov
mov
call
jle
fcompl
add
cli
pop
pop
dec
cmpsb
or
insb
rcrb
xchg
adc
mov
das
jecxz
add
jmp
pop
xor
pop
das
and
jb
dec
pop
test
fucomi
sub
rcrb
push
jmp
iret
popa
je
mov
fbstp
lcall
idivl
sbb
cmp
xor
mov
pop
cld
mov
pop
jp
rclb
add
jp
rcl
xchg
xor
and
add
test
mov
int3
call
loop
enter
int
mov
xchg
fldcw
insl
and
gs
pop
mov
icebp
fmull
cmp
pop
int3
mov
and
scas
mov
inc
push
dec
sbb
adc
jnp
sbb
sbb
js
mov
ret
js
icebp
jno
ds
stc
mov
add
xacquire
push
mov
stos
pop
mov
cmpsl
sub
int3
add
jmp
inc
sub
xchg
xchg
fimuls
daa
leave
push
mov
inc
xchg
in
add
ds
inc
cmp
lea
jmp
lds
scas
dec
lock
mov
movsb
pop
jg
outsb
jle
jl
inc
fs
jb
imul
mov
pushf
mov
lret
sbb
mov
sbb
adc
inc
push
pop
push
xor
lcall
xor
dec
test
xor
or
mov
push
int
popf
sbb
testl
sbb
dec
repz
mov
in
mov
enter
icebp
mov
cmp
inc
push
jge
inc
cmp
push
and
mov
lods
mov
pop
pop
pop
cmp
cmp
mov
imul
inc
jle
subb
add
lods
or
pushf
shrl
mov
cmp
int3
lcall
mov
loopne
test
aad
je
mov
inc
das
mov
out
stos
call
xor
mov
or
push
fucomp
jne
cmpsl
mov
inc
xor
mov
cmp
test
mov
pop
in
negl
out
xchg
fwait
push
cmp
les
cmpsl
xor
test
sub
cs
ret
in
pop
add
jae
push
fcmovnb
ret
mov
xor
imul
cltd
jge
cmp
jae
jg
xorl
mov
mov
jle
sub
scas
pop
bound
inc
mov
jle
or
fists
jl
push
iret
dec
je
push
add
int3
icebp
loopne
sub
mov
adc
add
sub
push
add
xchg
leave
inc
jge,pt
scas
stos
pop
sbb
nop
lcall
ja
fldt
jg
cmp
cld
lds
cmp
fs
dec
cltd
stc
push
stos
xchg
les
mov
sub
cmpsb
nop
mov
pop
pusha
jmp
mov
mov
xchg
in
repz
push
into
adc
sub
xlat
xchg
stos
cmp
lock
mov
pop
adc
dec
movsl
xor
inc
icebp
mov
aam
sbb
fcmovu
test
inc
adc
std
es
mov
andb
and
call
xchg
sbb
mov
and
test
nop
data16
loope
ret
push
adc
mov
adc
cwtl
sti
cmp
cmp
mov
cmp
fsubl
mov
mov
ret
sbb
or
or
pop
sub
pop
and
imul
xchg
mov
or
fiadds
mov
dec
add
call
and
pop
mov
lea
adc
stos
imul
mov
jno
fildll
mov
or
mov
xchg
adc
cmp
pop
test
repnz
cld
insb
roll
mov
inc
xor
adcl
dec
ficoml
adc
xchg
mov
lods
jmp
push
imul
and
dec
js
cld
xor
outsl
xor
sbb
popa
jo
jns
arpl
jp
pushl
nop
mov
push
pop
enter
or
dec
scas
lahf
xor
dec
repz
icebp
jo
mov
out
negb
jge
addr16
repnz
add
clc
inc
lock
aas
adc
fs
pop
xchg
addr16
mov
adc
xor
and
xchg
popf
outsl
aad
stc
xor
pushf
fwait
xchg
ss
fdivr
ja
dec
push
adc
pop
enter
scas
pop
ja
shl
aaa
cltd
or
xchg
mov
fldcw
lea
aad
push
sub
ja
inc
imull
pusha
add
fnsave
pop
lock
movsl
push
bound
popa
inc
dec
dec
mov
pop
pop
insl
daa
out
mov
loopne
xrelease
repz
push
mov
xchg
mov
ja
fcoms
pop
sti
sub
and
pop
fmul
shrb
fists
div
fimull
cmp
rolb
notl
daa
mov
mov
imul
cmpsl
xor
fisttps
xchg
mov
rcll
insb
imul
ficoml
mov
jle
fcmove
jno
ds
cmp
add
sbbl
adc
fadd
fsub
daa
dec
mov
rcrl
sbb
movsl
dec
sbb
pop
push
cmpsb
nop
sub
movsb
mov
mov
arpl
xchg
ficompl
adc
cmpl
into
xchg
push
add
lods
sub
push
fsubl
jbe
mov
mov
shl
and
mov
mov
mov
xchg
in
cmp
push
mov
and
inc
out
int
ja
xchg
mov
jmp
dec
lods
mov
cmp
mov
add
jbe
das
and
out
lret
lock
cld
mov
sti
bound
mov
movsl
imul
or
leave
jb
inc
sbb
xchg
jns
push
pop
mov
sbbb
xchg
jl
xchg
cmp
js
push
leave
ficoml
loopne
lods
mov
fstpt
call
mov
stos
cmc
test
stos
cltd
icebp
push
sub
lods
xor
cmpsb
in
in
or
pop
pop
fs
mov
push
hlt
cs
xchg
or
mov
sub
jge
dec
jmp
fldl
in
inc
aam
hlt
fldenv
sbb
xchg
mov
and
sub
inc
repnz
aam
loope
mov
xor
xor
or
mov
mov
xor
jmp
outsb
hlt
xorl
jb
push
shrb
cmovns
dec
inc
and
xor
and
shll
rorb
jbe
jno
jg
stc
jbe
aas
adc
push
inc
mov
shll
mov
ret
lods
lcall
gs
and
xchg
testb
mov
test
pop
push
jo
js
pop
mov
shl
outsl
push
mov
mov
pushf
push
in
cmc
insl
out
shr
ficoms
ja
xor
add
dec
adc
ljmp
pusha
jno
jl
jno
mov
pushf
ja
dec
lds
add
adc
pushf
punpckhwd
gs
xchg
fwait
add
enter
sti
std
addr16
out
fadd
dec
add
in
insl
popa
and
call
pop
jnp
dec
lret
test
shrl
mov
aad
sbb
outsl
outsb
jns
and
bound
xor
mov
add
in
inc
loop
add
roll
jae
lcall
cmpsl
sbb
pop
mov
es
lret
cs
jmp
mov
enter
mov
gs
cmpsb
movsb
imul
aam
test
cmpsl
xchg
xchg
push
pop
aas
sbb
in
test
loope
lock
inc
mov
scas
dec
cmp
test
clc
xchg
nop
sub
dec
lcall
sub
leave
mov
es
xchg
jbe
aas
jno
jge
cld
adc
leave
subb
outsl
push
cmc
imul
and
sbb
add
xchg
cmc
lret
sub
scas
add
xchg
fwait
cmp
mov
jo
mov
in
loop
aaa
pop
and
test
adcb
das
adc
jl
dec
cmp
dec
cs
test
pop
ret
dec
fstl
mov
out
or
or
sub
dec
pop
mov
pop
sbb
aas
and
mov
push
mov
in
fildll
dec
push
outsl
movsb
mov
test
sub
out
and
subl
out
sub
sub
sbb
into
vpsubb
sbb
xlat
push
outsb
push
aaa
fcoms
fucom
or
or
dec
xchg
or
adc
push
enter
decl
jmp
xor
adc
lods
pop
shl
repz
cmp
sub
mov
imul
xor
xor
sub
mov
mov
mov
xchg
pushf
cmp
movl
sub
outsb
mov
add
je
das
iret
ss
fdivrp
and
pop
int3
outsb
popw
mov
dec
or
cmp
jecxz
dec
or
xchg
mov
inc
pushf
jbe
pop
fbstp
xchg
xor
int
cwtl
push
lret
repz
popa
or
shlb
ja
pop
cmp
shll
neg
mov
out
std
sti
repnz
mov
xchg
cmp
adc
movsl
rolb
add
pushf
dec
xor
lret
pop
mov
add
push
fiadds
out
cmp
imul
jl
pushf
cltd
mov
xor
dec
xor
ja
mov
jbe
xchg
sti
pop
into
fwait
or
je
pop
pop
xor
xor
aam
fnstenv
sub
into
push
int
push
pop
mov
jmp
ja
imul
mulb
cmp
xchg
sbb
iret
cltd
in
mov
inc
scas
cwtl
push
testb
jns
sbb
insb
push
pop
in
aas
mov
push
aas
shr
and
lahf
scas
mov
pop
mov
xchg
jno
sub
cmc
repnz
jl
or
mov
scas
lods
stos
adc
dec
pop
mov
xor
fs
adc
fstl
std
jns
pusha
outsl
push
jbe
mov
sbb
sub
outsb
shr
jl
out
mov
sahf
lret
fsubs
ret
add
jecxz
jne
sbb
sub
in
mov
sbb
mov
jle
mov
movsb
imul
push
adc
dec
sbb
sbb
sbbl
pop
and
cmp
mov
dec
pop
dec
loope
cvtdq2ps
xchg
int
jnp
in
inc
jbe
dec
or
xlat
daa
scas
xchg
loopne
push
pop
nop
dec
push
xchg
mov
jmp
push
ljmp
fistpll
aad
stc
xlat
jmp
shlb
ret
mov
add
jmp
jns
jge
fbstp
xlat
xchg
mov
ss
pushf
orb
xchg
aas
out
lret
mov
pop
sub
fs
pushf
jp
lods
into
lret
and
pop
add
dec
lret
sbb
scas
ret
pop
test
xor
xor
sub
mov
mov
or
cmp
in
ret
cmc
cmp
dec
loop
shll
push
scas
fcomps
jne
movl
shl
dec
mov
push
shrl
xchg
xor
push
push
fists
es
or
xorb
push
leave
je
dec
popa
jle
pop
push
movsl
scas
or
pop
outsl
fmuls
aaa
adc
repz
in
adc
fisubrs
jae
aas
loop
dec
sbb
mov
je
fdivrs
daa
push
adc
test
xlat
ja
inc
aas
mov
or
lods
lock
sbb
pop
xchg
mov
pop
add
out
call
xchg
cmpsb
popf
push
sbb
mov
dec
inc
adc
adc
and
movsb
jns
pop
mov
xchg
inc
fsubl
mov
jmp
mov
push
cmp
mov
and
or
push
je
in
pop
or
insl
adc
jecxz
mov
and
push
push
lock
pusha
sbb
inc
into
xor
imul
icebp
lds
xor
xchg
loop
mov
repnz
xchg
fs
in
pop
frstor
notl
fldcw
lahf
push
xchg
insl
mull
xchg
insb
shll
push
jbe
mov
xor
inc
jo
jo
sub
cs
push
fidivl
testb
inc
in
jp
scas
fcoml
jl
jne
jno
sbb
int3
adc
popa
xchg
push
xchg
hlt
sub
aas
add
jns
mov
insl
cmpsl
mov
add
mov
cwtl
clc
and
pop
or
mov
pop
pop
shrl
imulb
loop
testl
xchg
aad
int3
imul
sbb
push
push
xor
push
xchg
add
ret
inc
and
loop
lods
repnz
popa
dec
push
xor
mov
adcb
push
imul
sarb
cld
sarb
xchg
fwait
nop
sub
lds
jno
prefetch
in
pop
pop
pushf
inc
jns
add
xlat
dec
push
cwtl
mov
pop
repz
xlat
shr
shrb
addr16
sub
rclb
push
inc
xor
jg
mov
jmp
inc
les
mov
pop
jecxz
pop
pop
jo
loop
movsb
pop
pushf
test
add
aam
jns
imul
dec
in
lods
enter
add
in
mov
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
jmp
add
mov
inc
and
push
aaa
mov
ja
leave
push
scas
xchg
gs
bound
jecxz
xchg
xor
mov
les
inc
or
mov
ss
insb
lds
ret
ret
movsb
in
pop
leave
incb
sahf
repz
jecxz
data16
sub
sbb
jbe
stos
mov
ds
aad
aaa
cmpsl
add
mov
or
sub
adc
pop
orb
jl
xchg
mov
lcall
sub
push
mov
enter
iret
test
rcrb
insb
push
sbb
mov
mov
mov
xor
jne
cltd
cmp
jno
add
add
pop
or
mov
xor
fucomip
sarl
or
bound
xor
arpl
cmpsl
popa
sbb
arpl
fsts
sub
mov
cmp
test
aam
cmp
dec
int3
in
cmp
push
out
jg
xchg
imul
push
stos
stos
call
mov
xchg
push
cmp
test
or
inc
sahf
aas
cmp
js
inc
push
ds
int
jb
scas
outsl
roll
imul
xchg
test
movsb
xchg
lods
std
lcall
dec
cwtl
jecxz
cmp
and
adc
das
add
mov
stc
xor
mov
call
mov
mov
and
inc
arpl
dec
shrb
popa
sub
push
in
fsub
xorl
lods
cmpsl
and
pop
jle
in
mov
push
cmpsl
jbe
adc
lahf
pop
mov
sti
jecxz
cli
pusha
push
mov
imul
xor
sbb
push
mov
filds
test
mov
mov
das
in
fnstsw
push
and
ds
mov
add
rolb
out
mov
arpl
mov
aas
fidivrs
loope
and
das
in
xchg
lret
pop
lods
add
daa
scas
adc
mov
mov
fs
push
add
loopne
out
mov
pop
stos
shrb
sub
inc
dec
leave
sahf
popf
xor
cmp
lret
into
inc
sbb
pop
push
in
and
popa
mov
jp
adc
rclb
xchg
daa
dec
cmpsb
js
out
sub
pop
aam
mov
fisubs
dec
cmp
ret
cmp
sub
sub
adc
pop
xchg
pop
loopne
cmp
into
or
push
mov
sbb
cmp
add
push
popa
mov
jmp
add
testl
incb
jae
jbe
lret
aas
or
insb
xlat
xor
pop
popf
jmp
je
pop
scas
mov
into
xchg
adc
dec
sbb
iret
jnp
movsl
outsl
sarb
mov
cmc
push
es
push
xor
inc
test
pop
mov
fbstp
aad
fmull
xlat
mov
rdmsr
inc
push
mov
dec
dec
jp
dec
aad
dec
mov
dec
rcll
xchg
jmp
mov
inc
test
clc
or
or
std
sbb
in
out
sbb
stc
push
inc
movsl
mov
xlat
sub
lods
data16
in
jmp
filds
inc
add
xlat
inc
negl
push
push
jmp
leave
subl
lahf
repz
cmp
cld
pop
dec
test
pop
jecxz
inc
ficompl
mov
sub
mov
rolb
test
dec
loope
neg
fnstcw
push
mov
int3
fcoml
in
jle
jne
xchg
shl
and
xchg
sbb
out
pop
ljmp
lret
ficomps
hlt
push
stc
stos
push
adc
cmp
mov
and
popa
pop
mov
fwait
dec
sbb
xchg
mov
lods
xor
mov
inc
inc
add
mov
insb
jl
or
xchg
gs
sti
xor
xchg
xor
ss
add
sbb
xchg
ret
xchg
in
sub
add
mov
mov
xor
add
and
pushf
clc
jge
mov
scas
aas
lahf
outsl
push
inc
movsl
out
cltd
ds
and
neg
dec
pop
aas
orb
les
cwtl
iret
pusha
leave
stc
sbb
xchg
adc
inc
mov
pop
push
repz
lock
xchg
scas
nop
cli
sbb
subb
out
lods
fwait
popa
jg
xchg
and
and
push
cld
mov
cmc
inc
adc
cmp
ds
push
or
dec
loope
dec
jl
stos
in
aas
pop
ficomps
and
sbb
mov
andb
jl
movsl
clc
xchg
dec
or
or
mov
mov
mov
inc
test
pusha
test
mov
bound
decl
test
dec
fisubrs
mov
jno
fisttpl
repz
dec
xor
fdivrl
je
xchg
cmpsb
lea
lds
scas
dec
or
fsubrs
and
rorl
repz
push
lock
push
inc
iret
lods
cld
sub
pusha
dec
pop
cltd
xchg
lods
call
pop
fcom
inc
incb
das
fs
jae
or
add
stc
push
inc
popf
and
sbb
fstl
jno
push
push
jmp
xor
lock
ffreep
sub
insl
out
dec
xchg
sbbl
clc
in
imul
sub
aam
sbbl
test
inc
and
and
add
mov
xchg
sahf
add
mov
jge
lods
sti
call
inc
dec
outsl
sbb
cltd
push
fdivs
jl
in
pop
jge
push
pop
dec
jecxz
ss
mov
insb
and
out
dec
pop
mov
lock
xchg
pop
jl
shlb
aas
bound
gs
lret
fxch
lret
fs
xchg
loop
fadd
and
stc
pusha
inc
jl
out
test
adc
stos
xchg
mov
aas
pop
mov
imull
xchg
mov
sub
jns
dec
jg
aam
mov
out
lcall
hlt
arpl
push
xchg
lret
cli
pushf
mov
stc
int3
nop
mov
jmp
jns
cli
js
addr16
adc
fists
pop
in
xor
repnz
sub
xor
jp
cmp
inc
and
and
inc
push
dec
test
adc
aas
ret
add
xor
shrl
add
fst
jle
testl
addr16
adc
jge
test
jge
pop
std
inc
lret
jge
and
push
test
fiaddl
loopne
out
clc
movsl
stos
loopne
xchg
nop
insb
imul
xor
inc
add
push
mov
pop
cmp
test
loope
fistps
test
inc
xchg
das
or
loope
adc
adc
jp
sbb
mov
jl
shlb
cmp
mov
jp
add
xor
into
cmp
inc
shrb
sub
movsl
cld
jbe
aas
xchg
bound
sahf
test
adc
jno
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
jmp
orl
push
cmpb
dec
pushf
aam
iret
mov
nopl
mov
push
sbb
mov
rol
push
jg
cmp
repnz
in
out
hlt
mov
fcompl
push
mov
mov
and
push
jecxz
std
pop
shl
mov
xchg
cli
inc
pop
mov
ja
lock
sbb
lock
mov
mov
nop
and
and
es
pusha
dec
push
stos
sbb
sub
insb
inc
aaa
xchg
push
lret
push
stos
xor
mov
inc
movsb
mov
jns
mov
xor
enter
and
and
call
lea
lahf
ds
ficoms
inc
icebp
or
inc
cli
jle
inc
push
sub
mov
shrl
mov
mov
lods
mov
ret
mov
in
push
stc
lret
xchg
xor
adc
mov
cmpsb
push
aas
xchg
and
mov
dec
call
sbb
repz
adc
sub
lock
jns
sub
repnz
test
sahf
mov
notl
addb
sub
push
or
imul
ret
outsb
and
jecxz
dec
aad
add
or
rcrl
sbb
mov
dec
cmp
lods
scas
aam
pop
fcmove
sbbb
inc
flds
xchg
jg
sub
test
xor
stos
lods
loopne
mov
imul
int
inc
cmp
aam
inc
lret
imul
loopne
pushf
test
mov
xchg
test
popa
push
enter
xchg
mov
xchg
jmp
and
cmp
add
lock
iret
and
mov
push
xchg
sarb
frstor
sahf
clc
fildll
push
ljmp
mov
add
inc
jl
div
inc
or
jb
add
stc
sub
jnp
and
lret
push
test
cmp
and
stos
ret
out
mov
inc
lret
push
and
push
mov
xchg
in
push
mov
adc
pop
or
data16
imul
mov
fs
rcl
push
xor
shll
insl
jns
sub
inc
stos
inc
rolb
cli
cld
xor
in
or
out
nop
addl
mov
jg
adcb
mov
adc
cmp
push
mov
icebp
push
adc
rol
repnz
xchg
mov
cmp
push
xor
in
mov
ja
sbb
mov
outsb
or
inc
or
aas
xchg
push
mov
or
or
gs
adc
dec
add
pusha
cmp
rorl
sub
pop
mov
sbb
inc
ret
mov
mov
push
aaa
sbb
movsl
data16
push
arpl
push
sahf
or
test
in
inc
jg
sarb
and
insl
in
cltd
repz
mov
mov
dec
call
cltd
aam
jns
or
fisttpll
rclb
js
jecxz
idivb
fldcw
mov
fsts
xchg
test
loop
sbb
repz
out
pusha
dec
fildl
and
mov
fcomps
shl
sbb
inc
mov
jecxz
aad
sbb
push
insb
sbb
xchg
adcl
and
insb
xchg
cmp
cmpsl
fiadds
lods
dec
scas
mov
cmp
mov
pop
or
mov
repz
jmp
sub
mov
in
adc
push
fldenv
cmpsl
aaa
mov
mov
ffreep
mov
mov
gs
push
push
outsl
push
or
pop
and
add
out
addr16
js
xchg
adc
cmpsb
test
notl
decb
hlt
add
mov
popf
cli
leave
push
daa
insb
mov
sbb
popa
imul
xchg
sbb
scas
test
mov
jl
jecxz
sbb
pop
pop
lds
push
in
fimull
mov
out
data16
je
adc
test
and
push
and
add
mov
and
cwtl
daa
dec
sbb
loope
push
xchg
aad
popa
xchg
clc
shlb
dec
push
clc
add
inc
cmp
pop
fldt
ss
lods
scas
push
and
dec
cmp
cli
adc
cs
sbb
pop
scas
out
ljmp
inc
lods
popa
sbb
leave
sbb
shrb
aaa
arpl
addl
aam
lock
sbb
mov
inc
in
mov
xorl
jno
jecxz
push
sub
sti
mov
push
aaa
repnz
fwait
divb
cld
ret
mov
mov
es
aas
rclb
rcl
jb
xchg
pop
lds
mov
les
inc
std
imul
sbb
mov
and
jae
stc
dec
sub
aaa
fcomps
pop
iret
jns
xadd
xchg
decb
mov
mov
fwait
rorl
jp
inc
xor
sbb
dec
jl
les
ret
fmull
lods
clc
adc
test
add
lock
in
xor
xchg
stos
push
adc
jle
cmp
and
dec
xor
add
jnp
ss
lock
jno
dec
das
add
sub
cs
jl
xor
adc
cmp
imul
pushf
shl
cmpsl
popa
dec
mov
xchg
cmp
fidivl
int3
dec
mov
sbb
sub
cmp
rcrl
fdivrs
je
popf
lds
stos
in
adc
pop
adc
sbb
mov
popa
jae
fwait
cld
jmp
into
dec
fbld
clc
dec
mov
sti
aas
jno
cmp
cwtl
xor
push
push
scas
inc
cmc
jo
pushf
loopne
push
or
xchg
dec
mov
imul
aam
sbb
icebp
je
orb
std
add
sbb
mov
push
ss
sub
add
fsubr
fwait
lds
fnstenv
mov
cwtl
lret
dec
dec
test
fst
or
push
inc
adc
adc
mov
fcom
xchg
test
pop
xchg
pusha
push
hlt
mov
dec
inc
pop
mov
mov
xor
push
xor
movsb
add
pop
sbb
aam
movsl
out
dec
cmpsl
pop
mov
dec
in
lds
lret
and
popa
popf
sub
gs
cmp
dec
sbb
shlb
xchg
insb
pop
dec
push
mov
in
imul
les
ljmp
adc
sbb
pop
outsb
xchg
and
jns
sbb
xchg
out
xor
aad
ss
popa
inc
xor
ss
into
lds
mov
sbb
daa
mov
cltd
cmpsl
shll
mov
test
mov
cmp
dec
cwtl
cs
out
add
rorl
adcb
insl
xor
cmp
pop
int
fcmovnbe
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
jmp
mov
and
setns
dec
xchg
ljmp
xchg
pusha
mov
ss
or
ljmp
push
jb
orl
hlt
out
jb
jp
dec
sbb
pop
scas
sub
inc
cmp
popf
xor
and
je
jno
or
movsl
xchg
mov
or
inc
mov
dec
fcmovu
and
adc
inc
dec
dec
outsl
dec
mov
or
push
rcrl
pop
push
push
dec
dec
lret
dec
pop
scas
scas
adc
mov
push
and
mov
adc
aam
push
pop
xchg
ja
insl
cmc
scas
mov
fsubr
pop
sbb
sbb
stos
cmc
cmpsl
fucomp
cmpsl
andb
out
nopl
imul
lret
gs
jle
mov
lods
mov
push
clc
sub
mov
ret
rol
add
pop
or
leave
xchg
push
sub
mov
lds
and
cmp
xchg
mov
mov
push
sbb
fsub
or
fucomp
rcl
jne
jl
dec
xor
mov
shl
inc
ret
mov
pop
nop
pop
xorb
lret
pop
xchg
add
fadd
adcb
inc
out
loop
push
mov
shlb
and
sub
inc
adc
jl
clc
push
das
dec
cmpsl
or
cmc
rolb
jo
fs
ficompl
push
std
jl
mov
push
or
mov
enter
outsl
stos
xchg
cmp
into
push
add
gs
cwtl
addr16
fisubl
je
jns
mov
fcomps
jb
dec
std
icebp
bound
in
jg
and
push
insl
dec
pushf
dec
push
mov
ljmp
jns
rolb
orl
nop
int
addr16
mov
sub
divl
dec
dec
test
mov
out
sbb
and
mov
in
fwait
popa
inc
push
std
loop
pop
cmp
dec
cmp
mov
xor
jmp
pop
shll
mov
aaa
imul
jno
fcoml
push
jnp
adcb
add
adc
add
das
movsb
outsb
push
mov
cmpsb
push
adc
cmp
or
xor
das
aad
cmpsl
pop
jo
xor
dec
imulb
mov
enter
pop
mov
xchg
gs
push
jns
mov
test
adc
movsl
dec
mov
adc
repnz
test
dec
mov
xor
pop
lahf
inc
fisubs
js
lcall
icebp
or
push
lea
or
imul
lcall
es
cli
push
cwtl
cs
push
jg
ja
nop
push
std
ds
mov
cmpsb
gs
xor
mov
test
dec
out
inc
xchg
insl
adc
mov
push
stc
repnz
sbb
lds
or
roll
clc
daa
loopne
scas
xor
jns
adc
into
xor
xor
push
jp
jecxz
or
scas
in
cmp
add
test
loope
sbb
cmp
aas
or
dec
add
test
movsl
pop
fimull
pop
das
xor
cmc
mov
ret
nop
lds
mov
imul
in
pop
dec
filds
ss
mov
jo
into
adc
inc
incl
popf
aad
add
inc
rcll
jecxz
mov
mov
sub
and
aam
or
out
into
jne
sbb
and
xorl
mov
lea
mov
or
movsl
mov
mov
jg
mov
add
testb
dec
cmp
adc
pop
cwtl
ret
lods
incl
push
jge
mov
lcall
rcr
in
xchg
xchg
jg
in
add
leave
pusha
sbb
and
jne
sub
push
and
faddl
stos
and
push
sbb
inc
sub
pop
imul
sahf
xor
lahf
ret
aaa
pop
inc
add
fisttpll
dec
nop
cmp
push
mov
loopne
jecxz
mov
repnz
sub
mov
xor
lret
mov
dec
iret
lea
mov
push
add
insb
inc
je
inc
inc
sarl
pop
pop
jge
loope
dec
mov
lret
push
mov
dec
rcll
lahf
inc
cmp
adc
or
cmpsb
mov
icebp
xor
push
nop
add
lea
stos
and
mov
ljmp
cmpl
mov
xchg
in
pop
lds
bound
mov
xchg
stc
pop
dec
push
mov
fstl
xor
pop
data16
xorl
cmp
xor
iret
mov
push
ss
or
rorl
and
adc
xchg
popa
push
xchg
mov
cmpsl
dec
pop
push
xor
inc
mov
xor
rolb
loop
lds
xchg
aas
leave
out
mov
sub
cld
ds
cmc
test
xor
jmp
sub
mov
lahf
add
fsub
xchg
cli
inc
fs
cld
cmp
mov
xor
xchg
rcll
lahf
mov
stos
xor
adc
add
cmp
mov
cmp
jp
adc
dec
pop
testl
push
and
inc
mov
test
outsb
ror
jnp
sti
push
cs
das
fwait
pushf
shll
pop
xor
adc
xor
lcall
pusha
in
xchg
or
dec
femms
cmc
lods
outsl
outsb
cmpsb
fs
sub
sub
jmp
gs
idiv
outsb
fldenv
or
and
pop
xchg
hlt
jns
out
add
jns
pop
mov
or
les
andl
or
in
cmp
lret
divps
leave
cmc
mov
push
cltd
adc
sbb
inc
cmp
xorb
cmp
divl
mov
xor
mov
push
sub
loope
imul
or
test
xor
adc
add
cmpl
cmp
dec
xchg
loope
sahf
orb
test
movsl
in
mov
inc
inc
out
pop
shlb
cmp
xor
push
mov
gs
adc
scas
int3
inc
lds
inc
js
xlat
dec
inc
mov
cmpsb
fbstp
cmp
xor
push
adc
mov
cmp
sub
repnz
ds
inc
jge
in
dec
mov
or
lock
pushf
add
or
push
cmp
mov
mov
repz
push
cs
xor
mov
les
dec
lret
add
je
cmpsb
push
sub
loope
sbb
cmp
fwait
xorl
imul
mov
shlb
out
jae
push
aad
inc
outsb
cmp
js
xlat
xor
dec
inc
cmp
jno
xchg
push
pop
sub
xchg
push
ret
sbb
sbb
jl
jo
insb
add
sub
mov
cmp
mov
xor
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
jmp
ret
fwait
mov
and
das
jno
loopne
ja
mov
inc
les
cmp
mov
adc
gs
ds
pop
mov
cmp
xchg
inc
jbe
hlt
push
sbb
push
xor
cmp
scas
rorl
mov
sahf
push
inc
rorb
aaa
add
jge
cwtl
and
stos
lods
cmp
cmp
mov
mov
mov
and
xchg
inc
ret
and
mov
movb
test
cmp
divl
lods
dec
test
mov
bound
cmpsl
mov
negl
imul
popa
xchg
push
or
push
xor
jle
idivl
lret
aad
shll
jp
outsb
iret
mov
aas
or
cmp
lea
or
push
inc
pop
pop
push
push
sub
jbe
dec
aaa
dec
dec
adc
inc
dec
jo
mov
mov
xchg
dec
je
outsb
ja
imul
inc
mov
push
push
sbb
pop
dec
xchg
fisttps
ret
add
out
cmpsl
jp
pop
mov
xor
cmp
pop
rorb
lds
push
push
pop
xchg
bnd
inc
test
inc
dec
int3
cmovae
xchg
xor
xor
jns
aas
movsl
pop
push
repnz
in
xchg
add
dec
out
cmp
ja
sahf
mov
xchg
fldt
gs
pushf
inc
jg
in
push
lcall
cmp
pop
xor
ja
das
add
mov
and
repz
js
sahf
and
jmp
pop
icebp
push
cmpsb
daa
inc
aad
pop
popf
push
hlt
jl
mov
push
ficoml
mov
pop
mov
stos
hlt
scas
call
inc
push
andb
push
xchg
jp
xor
pop
ret
cmp
cltd
dec
mov
lods
movsb
imul
mov
inc
and
outsl
xor
call
lds
adc
faddl
mov
out
push
aad
lock
fcmovnu
xchg
mov
adc
pop
test
dec
mov
mov
pop
das
adcb
xor
shrl
clc
mov
inc
fistps
loop
movsl
lea
cmp
inc
cmp
adc
add
loope
and
mov
mov
mov
ds
lret
push
and
leave
xor
addr16
jmp
stos
xchg
test
pusha
xor
pop
inc
xchg
shlb
movsl
cltd
imul
jno
gs
mov
pushf
xlat
jns
test
inc
jle
or
jno
out
mov
inc
inc
lret
xchg
adcb
pop
push
loope
and
aaa
jle
push
pusha
adc
sbb
mov
pop
nop
clc
cmpsl
aaa
nop
lods
mov
mov
addr16
icebp
inc
and
push
dec
xchg
bound
cmp
cmp
jg
xchg
mov
icebp
mov
xchg
lret
pop
outsl
loope
inc
stos
cs
adc
les
cmpsl
or
icebp
pop
loop
jnp
mov
pop
nop
inc
js
xchg
jmp
xchg
fsubs
sbb
in
mov
cmp
mov
cs
rorl
add
data16
jp
insb
fldl
popa
repnz
ret
mov
icebp
out
and
and
movsl
cmp
int
loop
rorb
shr
xchg
ds
fists
adc
sbb
and
sbb
popf
dec
sbb
lret
or
outsl
push
mov
std
mov
sbb
push
testl
sarl
adc
cli
rcrb
pop
mov
mov
shrl
addb
inc
stc
xor
in
ds
fisttpl
cwtl
imul
rcr
pop
add
cmp
sahf
jp
cli
cmpsl
inc
xchg
mov
mov
test
and
das
mov
or
movsl
jmp
out
addr16
outsb
jne
sti
or
rcrb
in
fcomps
hlt
pushf
aad
ja
fwait
popa
stos
iret
aad
stos
shrb
xchg
and
jns
leave
shrl
and
mov
sbb
jne
jnp
sub
repnz
insb
inc
inc
mov
cmp
add
or
jge
mov
jbe
xchg
or
and
sbb
out
push
push
sahf
shl
xor
or
in
in
shl
insb
pop
push
jl
pop
fldln2
mov
insl
call
mov
pop
xchg
xchg
or
popa
fwait
ret
popa
ss
cmp
cmp
xchg
cmc
sub
xchg
sub
fcomps
mov
jg
and
jb
pop
inc
sahf
mov
xor
fs
cmpsb
mov
imul
add
mov
and
negl
iret
jb
push
lods
loopne
rcrl
mov
ret
iret
dec
mov
neg
out
movsl
mov
movsl
xchg
and
testl
push
or
push
repz
adc
xor
pop
int
mov
and
lret
or
sbb
add
cmc
scas
pushl
test
xchg
mov
mov
sbb
movsbl
addr16
jo
xchg
mov
sahf
int
movsl
mov
addr16
arpl
bound
mov
ficomps
sub
rcll
xor
scas
loopne
hlt
xor
mov
sub
xchg
imul
insl
cmpsl
jne
pusha
push
sbb
les
adc
adcl
dec
xchg
rcrl
or
adc
pop
push
pop
inc
cwtl
int3
push
add
fwait
mov
push
xchg
filds
inc
hlt
xchg
dec
lods
mov
push
mov
clc
aas
xchg
ljmp
movsb
push
jno
inc
cmp
pop
popf
test
xor
addr16
cmp
ficomps
icebp
mov
mov
jb
rolb
dec
sbb
flds
cmp
inc
mov
loop
rorl
jo
push
push
lahf
xor
mov
xor
out
xor
outsl
jne
aad
push
sti
sub
or
and
pop
out
imul
cmp
cmp
xchg
and
movb
jl
jnp
out
xlat
sbb
dec
loope
xlat
pop
outsl
and
out
or
xchg
test
dec
mov
mov
test
and
imul
xlat
mov
push
xlat
mov
pop
and
or
repz
mov
pop
stos
pushl
dec
push
dec
hlt
push
pmullw
or
sub
cld
int3
loop
ret
dec
int
hlt
scas
sarl
cmp
inc
fmuls
sub
jbe
add
stc
or
push
int3
push
dec
sub
jbe
ret
and
addr16
test
enter
scas
test
lret
push
call
jo
lret
mov
jl
je
test
bound
ret
sbb
jno
xchg
aaa
push
test
dec
mov
lahf
mov
fisttpll
xlat
mov
dec
xchg
leave
add
jns
rorl
loop
pop
cltd
or
dec
mov
rcll
jmp
or
mov
lret
xor
xchg
les
testb
gs
orb
mov
jmp
aam
inc
test
addr16
add
pop
sub
outsl
ja
cmp
push
lods
mov
push
jo
cld
jecxz
or
imul
pop
pop
in
dec
sub
lret
test
call
mov
adc
ja
movsb
fdivr
out
push
and
ja
push
inc
jg
mov
or
dec
push
addr16
orb
mov
mov
cli
add
sub
mov
dec
cmpl
repz
pop
jns
jo
aad
enter
mov
or
sub
jo
push
sbbl
cmp
mov
imul
fbstp
and
lret
mov
das
mov
hlt
xor
or
pop
das
mov
cli
addr16
pop
lahf
scas
sbb
cmpl
jb
adc
incl
jp
aam
out
inc
pushf
loop
inc
lret
adc
fnstenv
or
mov
out
stos
or
jp
ror
dec
fcomip
and
scas
push
xchg
push
clc
or
loopne
dec
mov
cmp
mov
or
jbe
pusha
jg
mov
mov
stc
insl
sub
mov
fs
cmp
nop
mov
test
cmpsl
sub
outsb
shrb
sub
dec
lret
cli
ret
jle
mov
xchg
jl
mov
jmp
jl
dec
push
cmp
inc
mov
hlt
push
subb
add
shl
sub
dec
cmp
fiaddl
das
pop
jg
dec
xorl
int3
cmc
add
mov
sub
dec
sub
and
je
rorb
add
pop
cmp
cmp
mov
adc
cmp
and
stc
push
jmp
mov
in
ja
xchg
movsl
xchg
jae
das
fldln2
js
out
test
add
nop
adc
xor
dec
into
lods
pop
adc
test
xlat
dec
inc
call
lock
xor
out
sarb
push
cmp
add
dec
mov
cmpsl
lret
adc
into
jg
inc
pop
nop
dec
mov
repz
and
pop
sahf
sbb
push
lea
dec
ja
ficoml
sbb
gs
ja
clc
cmpl
jns
clc
jmp
jo
addr16
repnz
xchg
inc
mov
or
sub
sub
dec
pop
cmp
push
push
out
and
mov
std
lds
movsl
push
jbe
or
xchg
jae
out
or
movsw
xchg
fiaddl
mov
and
fcmovbe
push
push
stos
jmp
repnz
mov
stos
jg
rolb
sub
mov
xchg
mov
jecxz
mov
aam
xlat
bound
jmp
stc
lds
mov
xor
push
repnz
xchg
lods
popf
sbb
or
cmp
mov
mov
dec
shl
cmc
mov
sub
push
test
notl
stos
mov
dec
lcall
sub
xchg
cmpsb
ss
mov
push
fdivl
out
sub
lahf
sarl
jbe
jmp
inc
mov
insl
mov
bound
mov
mov
or
cld
xor
mov
jns
repnz
movsb
iret
rcll
out
adc
cmc
mov
ds
repnz
add
cli
outsb
daa
movsl
xor
lods
jb,pt
jo
test
mov
mov
pop
xor
movsb
mov
cmp
out
insl
mov
or
add
push
mov
lds
shll
sbb
and
pop
aad
inc
push
lret
mov
repz
sub
cld
jns
lret
mov
cmp
call
inc
sbb
jp
out
fsubl
fstl
nop
and
add
xchg
add
es
push
and
or
and
int
je
nop
imul
pop
pushf
sbb
fsubrp
or
cltd
out
call
mov
lahf
dec
pop
test
dec
stc
imul
icebp
sub
pop
test
in
and
jo
inc
sub
loopne
outsl
mov
fs
repz
xchg
mov
add
js
cmpsl
adcl
mov
jmp
mov
stc
jge
jne
movups
cmpsl
fmull
outsl
stos
lock
in
divb
cmpsl
movb
sbb
mov
inc
xlat
enter
ds
movsl
adc
push
sbb
daa
jp
je
push
fdivs
mov
sub
sarl
and
test
cmp
outsl
lea
mov
xchg
pop
outsl
mov
ret
xchg
popl
lcall
lcall
mov
mov
jl
scas
pop
sbb
sbb
add
fcomi
xchg
mov
jae
pop
insl
jecxz
andl
and
insl
mov
mov
stos
dec
sbb
ss
adc
jb
testl
push
lahf
jl
add
jmp
or
push
cwtl
dec
sub
sub
loop
mov
mov
js
push
cwtl
sbbb
cld
pop
rclb
jne
pushf
aas
lret
push
scas
shll
test
movl
ret
gs
lock
scas
mov
hlt
mov
or
mov
jne
ss
cmp
xchg
test
mov
jae
test
jnp
aad
int3
enter
lret
mov
mov
adc
aaa
cmp
jecxz
das
pop
in
arpl
and
pop
mov
jne
test
idivl
dec
mov
mov
pop
cmp
or
popf
ficoms
cmp
int3
sbb
ljmp
sub
or
mov
cmp
lea
stos
cmp
xor
mov
cmp
daa
icebp
lret
mov
cmp
outsb
into
push
in
jae
jno
mov
mov
aam
pop
mov
sbb
mov
push
pop
pop
shrb
add
lcall
sti
repnz
inc
mov
xchg
sar
in
stos
shrl
jg
mov
jno
sub
movsl
push
loope
mov
jns
inc
lods
mov
test
inc
dec
ljmp
out
pop
mov
add
adc
add
arpl
or
ds
ja
mov
jp
into
jns
scas
into
mov
xchg
aas
adc
cmpsb
sub
inc
adc
push
mov
xor
jl
pop
rcrb
outsb
pop
adc
pop
js
aaa
idivb
inc
mov
or
push
mov
rcrl
fcmovne
imul
push
enter
loopne
insl
addl
in
pop
and
insb
outsb
hlt
mov
cmp
test
push
sub
pop
cmp
call
mov
mov
push
inc
mov
js
bound
add
lods
pop
call
adc
sbb
dec
xchg
cmp
or
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
jmp
adc
cmp
ret
aam
mov
orb
xchg
mov
mull
lcall
pop
xor
cli
mov
mov
sar
into
sbb
jo
adc
pop
push
addr16
sub
lret
loope
sbb
sarb
sti
ds
or
push
jp
sub
out
and
loop
xchg
fs
lds
add
aad
pop
push
mov
mov
clc
outsl
and
add
push
cmp
je
or
jp
lret
subb
adc
pop
movsb
pop
mov
lahf
lock
and
popa
inc
ds
jp
add
lahf
adc
push
fdivl
mov
fnsave
lock
sub
mov
jl
dec
or
inc
jmp
push
imul
movsl
sbb
sub
aam
fcompl
shrd
out
xor
aaa
test
xchg
mov
jle
ja
call
dec
imul
std
sub
aad
dec
lock
inc
xor
and
movsl
pop
ret
inc
sub
icebp
hlt
mov
repnz
ds
or
pop
fcoml
in
mov
adc
pushf
push
test
cld
pop
cmc
mov
loopne
pop
faddl
jecxz
inc
xor
loope
dec
rolb
mov
and
lods
adc
dec
ds
sbb
xchg
hlt
jb
mov
pop
pop
dec
or
adc
scas
ret
ja
call
lds
int3
scas
mov
lods
mov
loop
pop
call
adc
mov
cmpsl
lods
imul
cwtl
cmc
lods
sbb
cld
lods
cmp
outsl
lock
cli
cld
and
std
mov
andl
les
xor
movsb
mov
fs
inc
sahf
lahf
jle
jb
es
or
xor
add
shrl
mov
inc
lock
out
ss
hlt
mov
enter
push
lahf
ud2
push
stos
pop
popf
outsb
imul
and
or
movb
adc
xchg
cmpsb
inc
enter
inc
add
jnp
call
inc
int3
scas
add
pop
rorl
lods
out
pop
push
popa
mov
xchg
hlt
insb
fdivl
es
add
mov
jmp
and
xchg
pop
stc
and
jne
push
jle
enter
sahf
shl
jbe
or
add
and
mov
jnp
imul
cmp
or
vmread
stos
and
mov
hlt
jne
nop
push
xchg
out
popa
out
xchg
aaa
mov
xchg
adc
add
pop
sahf
das
and
adc
inc
dec
push
xchg
imul
movsl
imul
pushf
cwtl
cmpsl
fs
cmp
in
dec
lcall
cmp
xchg
or
push
mov
faddl
dec
sub
dec
mov
dec
dec
add
mov
dec
jnp
push
xor
lds
sub
cmp
push
xchg
push
inc
arpl
es
idivb
iret
inc
cmc
data16
and
mov
data16
std
or
pop
push
push
adc
stc
mov
xor
xchg
cwtl
mov
stc
adc
push
or
mov
xorl
aaa
xchg
lahf
aas
int3
push
loop
push
loop
jle
xor
jb
movsb
jne
pop
inc
enter
out
enter
cmpxchg
int3
rcl
mov
mov
test
outsl
sbb
cmp
lods
xor
test
pop
lret
subl
jbe
pushf
jmp
enter
aad
add
int3
pusha
sti
scas
and
repnz
fsts
cltd
scas
test
jmp
add
push
push
test
push
xchg
lea
lea
xchg
dec
mov
out
int3
mov
aas
add
jo
int3
rcrb
insl
movsb
bound
pop
mov
test
or
hlt
mov
mov
xor
sub
lock
data16
or
xchg
pop
daa
mov
enter
dec
notl
repz
pusha
adc
data16
enter
or
dec
es
dec
xchg
cmpsl
or
mov
scas
mov
icebp
pop
mov
daa
sub
fsubr
fildl
js
rorl
cli
mov
addb
add
stos
scas
jg
stc
and
cmp
out
fimuls
pushf
data16
ret
xchg
inc
movsb
outsl
js
aas
jnp
rcrl
push
in
and
cmpsl
add
xchg
mov
cmp
xchg
lods
inc
inc
sahf
mov
test
pop
xchg
fmull
and
cli
ss
lret
dec
outsl
rcrb
movsb
pop
and
jno
inc
mov
ja
xor
pop
mov
fidivrs
pop
daa
mov
mov
outsb
lods
mov
lods
push
dec
out
push
mov
add
stc
add
sub
cltd
xchg
pop
loop
cli
xchg
mov
xor
fucomi
add
push
mov
add
push
adc
mov
or
or
rclb
sahf
cmp
sti
jno
mov
push
cltd
pop
mov
push
mov
mov
adc
pop
or
out
repz
mov
pop
mov
cmp
jle
inc
push
outsb
dec
lret
sbb
add
mov
repz
rcl
addr16
dec
mov
jecxz
sbb
push
aad
or
sbb
stc
sbb
xor
pusha
sub
cmp
mov
in
es
mov
pop
fsubrs
xor
cli
int3
pusha
data16
pushf
cmpsl
jge
pusha
pop
add
add
push
icebp
push
sub
loope
rolb
mov
push
xchg
and
xlat
mov
xchg
xorl
pop
lahf
adc
push
lods
adc
insb
jg
stc
and
cmc
popf
divl
out
add
inc
fsubrl
out
pop
sub
test
jmp
outsb
pop
dec
push
pop
xchg
ret
pop
int
cmp
xchg
jmp
dec
pushf
orb
xchg
xor
in
popf
movsb
pop
sbb
jecxz
jle
sbb
and
xor
enter
repz
pop
push
cmc
and
push
test
mov
aaa
xchg
push
lcall
cltd
pop
sti
pop
dec
pop
je
insl
les
dec
inc
mov
or
xchg
outsl
xchg
sbb
cmpsb
loope
xlat
in
mov
mov
aas
cli
push
loope
mov
imul
lret
or
xor
add
ds
pop
lds
dec
xchg
gs
cmp
add
jno
mov
mov
jl
jge
jb
nop
popf
imul
hlt
sahf
pop
xor
push
mov
cmp
mov
and
fisubrl
in
mov
leave
add
push
xlat
test
sti
add
mov
xor
scas
jne
sub
test
loopne
je
rorl
cld
lcall
lcall
and
or
jne
pop
stos
repnz
mov
cltd
jne
loopne
test
sub
sbb
mov
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
jmp
sbb
and
pop
and
ja
leave
cs
hlt
mov
jbe
dec
and
cltd
pusha
and
sub
hlt
sbb
pusha
das
fs
test
rcll
mov
cs
or
inc
pushf
xchg
iret
out
mov
jle
mov
shlb
aas
adc
cmp
inc
fldenv
inc
xor
sub
push
pop
clc
mov
adcb
les
shrb
cmp
adc
lret
imul
mov
push
sub
dec
push
pushf
push
lahf
jp
jecxz
jnp
jp
iret
mov
sti
aaa
loopne
push
dec
inc
inc
and
pushf
lods
nop
pop
dec
mov
punpcklwd
xchg
inc
push
cmp
mov
inc
push
in
stos
lret
insl
add
js
cmp
popa
pop
sbb
cmc
mov
popf
pop
jmp
inc
lret
jns
fistpl
lds
sub
dec
shr
inc
sbbb
dec
gs
fistpl
xchg
mov
divl
xor
cmp
cmp
outsl
mov
fnsave
lret
xchg
imul
pop
pop
sub
cmp
mov
and
pushf
popf
ret
sub
mov
stos
les
sbbb
sub
sbb
int
fistpl
inc
xor
or
loope
mov
jns
jbe
adc
dec
aam
test
test
shll
pop
mov
jno
dec
mov
insl
divb
mov
sbb
dec
adc
and
mov
icebp
pop
sub
fstpt
push
add
sub
mov
push
adc
dec
fiadds
ret
repnz
dec
loope
les
shrb
xchg
cmc
ja
ficomps
movsl
je
mov
mov
fstpt
test
ljmp
mov
pop
test
pop
ret
adc
data16
add
mov
in
sub
stc
dec
mov
push
mov
out
lds
ds
jbe
test
in
arpl
dec
inc
rdtsc
push
jmp
es
jge
aam
shrb
stos
sbb
in
ret
out
outsb
cmpl
mov
pop
cmp
out
fwait
mov
test
inc
mov
push
jle
and
sahf
xchg
xchg
lods
call
push
ljmp
pop
std
lock
arpl
jle
push
jg
cmp
add
jae
xchg
adc
icebp
sub
push
mov
mov
insb
push
sub
aaa
jbe
adc
inc
adc
das
or
add
lods
mov
mov
jg
add
test
mov
dec
sub
xchg
inc
cmp
rorb
push
fcmovnu
movsl
jg
aad
in
pushf
sti
movsl
cmp
mov
jl
inc
push
repnz
dec
aam
nop
cmp
xchg
out
jnp
sub
rclw
mov
and
xchg
inc
fbstp
or
ljmp
movsw
sub
push
mov
add
aam
pop
sub
xor
test
inc
in
cmp
add
jbe
mov
scas
pop
push
rclb
xchg
inc
cwtl
imull
fistl
mull
mov
cmp
ffreep
in
sub
inc
dec
xor
in
decb
test
in
jo
mov
mov
clc
push
and
test
cmc
jns
dec
shrb
adc
add
xchg
bound
stc
fmull
or
jle
bound
insb
mov
sbb
aad
test
sub
icebp
xchg
cmp
xchg
push
pop
filds
pop
fstpl
and
dec
push
repz
push
and
stos
jmp
and
int
mov
adc
jle
sub
ret
sahf
mov
jp
jl
out
mov
stos
and
repz
loopne
pop
stc
xor
out
dec
out
int3
xchg
scas
dec
pop
fs
adc
out
mov
cs
into
pop
mov
inc
xor
cmp
and
dec
scas
fwait
sub
cmpsl
clc
mov
sbb
ss
jbe
fstpl
mov
sub
adc
push
stos
sti
and
sub
adcb
outsl
dec
or
mov
fneni(8087
pop
mov
xor
mov
out
std
jo
xchg
jo
mov
out
dec
int3
sub
add
cmp
pop
lahf
ret
fpatan
jl
shrb
cwtl
fs
jmp
cmpsb
xor
test
add
in
test
imul
mov
mov
cmp
and
add
mov
lods
or
vmovntps
fnsave
adc
adc
lock
subb
aad
dec
xor
shlb
shl
add
ret
sbb
sahf
stos
inc
jo
jp
aas
jecxz
int
repz
sub
xor
dec
or
in
sti
mov
in
shlb
mov
inc
mov
sub
rol
in
adc
das
adc
pop
imul
ret
ljmp
mov
pushf
nop
push
inc
clc
mov
inc
mov
sbb
std
sahf
mov
add
cli
outsl
ds
push
push
mov
sbb
inc
enter
mov
dec
je
cltd
enter
fprem1
mov
sbb
lret
push
ficompl
pop
and
in
int
int
pop
fdivr
insl
jns
sub
xchg
notb
sub
cmpb
cmp
bound
push
cmpsl
jmp
pop
cmpsl
fldl
fnstenv
scas
or
push
mov
mov
mov
mov
pop
add
aam
gs
loop
mov
stc
push
clc
pop
out
les
push
lods
ret
movsb
ficoms
add
adc
aaa
mov
arpl
cmp
or
mov
adc
dec
mov
inc
and
and
and
jne
inc
xchg
push
lahf
sti
jg
inc
mov
leave
push
and
aad
int3
stos
test
movsb
mov
test
lock
loop
fiaddl
push
cmp
fsts
add
sbb
fs
aam
pop
les
push
test
add
xlat
xchg
icebp
ret
insl
mov
xchg
push
test
in
inc
sbb
fldt
enter
cmc
outsl
sbb
or
mov
xor
notl
fwait
mov
add
aaa
shll
clts
mov
pushf
mov
add
dec
js
outsb
sub
movsl
popa
mov
push
pop
and
aad
neg
xor
jl
cwtl
xchg
outsl
jae
dec
adc
mov
out
cmpsl
loop
jl
in
shll
call
inc
add
cmp
push
xor
decb
lds
je
mov
xchg
or
xor
test
or
adc
push
arpl
jbe
pop
ss
int
pop
out
aas
mov
bnd
xchg
aad
and
fcmove
mov
mov
inc
stc
cmc
push
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
jmp
sti
test
sbbl
mov
jbe
aas
ja
jo
scas
nop
fcmovnb
push
fwait
add
test
sarl
push
or
cmc
in
lret
scas
ja
imul
jno
in
mov
in
xchg
fs
or
or
in
adc
pop
push
sub
in
and
push
inc
mov
je
inc
stc
mov
xchg
test
dec
outsl
stos
lret
push
jge
mov
fdiv
cmpsb
lods
imul
push
fidivrl
mov
lods
inc
and
mov
and
out
aad
mov
popa
jle
out
pop
cli
movsl
ud2
push
dec
popa
stos
leave
lret
push
sbbl
subb
pop
sub
scas
stos
loopne
lods
push
popa
mov
stos
cmc
cmp
add
adc
jl
push
mov
xor
rorl
ss
or
jo
andb
inc
xchg
xchg
jp
xchg
push
mov
mov
jl
and
movsl
xchg
push
cmp
sbb
lret
mov
imul
stos
loopne
xor
pop
pop
es
or
pusha
xor
mov
or
sti
into
stos
push
popf
imul
push
mov
notl
or
dec
adc
mov
mov
int3
pusha
push
lahf
hlt
popa
push
aaa
xchg
out
inc
lock
cmpsl
test
popl
mov
mov
aam
testl
rolb
lahf
jle
xchg
sbb
mov
xchg
lahf
dec
xchg
lret
lcall
dec
shlb
sub
in
cmp
out
ss
xchg
add
daa
mov
imul
stos
and
mov
rcr
movsbl
jbe
movsb
push
daa
mov
mov
sarl
xor
push
pop
mov
sub
mov
pushf
adc
int3
js
out
lods
push
push
mov
adc
sti
aad
dec
pop
push
ret
inc
ja
lcall
outsb
imul
add
push
cmp
pop
mov
sbb
push
into
sub
lds
loop
in
xchg
adc
jge
fldenv
call
sub
sbb
ds
leave
dec
mov
xchg
and
jmp
xchg
and
popl
std
push
cmp
inc
inc
popf
add
add
addl
lret
mov
repz
negb
inc
or
push
sub
mov
js
mov
lret
add
enter
outsb
adcl
push
aad
shlb
iret
mov
addr16
add
icebp
int
fdivrs
sti
inc
inc
loope
mov
xor
add
int
xor
rorl
pop
roll
sub
add
inc
hlt
and
sub
push
pushf
jp
push
out
xor
xor
sbbl
movsb
out
adc
stos
xor
cmp
pop
lods
mov
inc
ret
pop
xchg
shl
sbb
roll
repz
test
adcl
out
xor
rorb
pushf
or
lds
enter
aas
bound
loope
enter
stos
das
xor
xor
sub
andl
xor
mov
jl
es
adc
xlat
inc
inc
shll
leave
adc
sub
xchg
inc
xor
clc
incl
lock
sbb
add
sub
sti
cmp
pop
sbb
test
jecxz
movsl
jge
ss
xchg
xlat
cmp
adc
lret
push
push
lds
fmull
aas
mov
jmp
stos
je
inc
aad
fs
sbb
mov
stos
mov
int
leave
pushf
rcll
dec
fisubrl
popa
xor
aam
jle
fdivr
fsub
xor
add
push
imul
sub
pop
ss
enter
sub
in
xor
jle
stos
dec
jg
cmp
mov
bound
movsl
xchg
ss
outsl
cmp
popa
test
lret
fistpll
jno
mov
xor
jmp
scas
push
ja
or
in
xor
pop
jecxz
mov
das
ret
add
sahf
lods
pop
mov
mov
pop
scas
mov
push
rcrl
mov
or
stos
inc
mov
add
xor
leave
inc
xchg
in
dec
push
inc
sbb
clc
lods
jno
or
scas
sub
out
insb
addr16
sbb
repz
ljmp
fwait
mov
xor
mov
movl
inc
lcall
add
gs
rolb
outsb
int
fistpl
stos
xor
pop
call
jns
pop
sbb
dec
add
push
lods
fsubrs
test
ret
fwait
cmpsb
cmp
push
cli
es
pop
jg
push
sti
pop
sub
inc
and
std
mov
mov
and
mov
add
or
stc
mov
mov
mov
insb
iret
push
ss
pop
xchg
mov
decl
sub
out
mov
mov
sahf
xor
pop
mov
lods
xor
adc
mov
jecxz
insl
test
or
xchg
cmp
jae
das
dec
loope
sti
sbb
leave
stos
notb
fwait
pushf
pushf
pop
adc
mov
cwtl
xchg
jbe
rcrb
fstpl
adc
inc
inc
imul
and
sub
imul
adc
lret
fsubrl
jne
adc
add
and
jnp
int
je
je
push
xchg
adc
sub
lret
xchg
movsl
push
inc
lcall
leave
icebp
call
enter
cld
mov
frstor
mov
jae
xchg
push
mov
loop
fmul
fstpl
push
xor
movsl
jmp
sar
scas
leave
shll
inc
aam
push
sub
xchg
sub
inc
lods
dec
adc
and
mov
jmp
push
jmp
rorb
cltd
jmp
pop
xchg
out
pop
lock
mov
les
adc
pop
pop
sbb
mov
aam
shll
fidivl
scas
push
cmp
aaa
jns
js
add
inc
outsb
cmp
mov
jns
adc
or
test
xlat
mov
sub
xchg
sub
pop
mov
mov
scas
push
push
movsl
pop
mov
push
ljmp
mov
aaa
mov
int
jo
dec
cltd
mov
cmc
pusha
in
addr16
jnp
fdivp
pop
cwtl
or
mov
sti
and
cmp
insl
sub
leave
arpl
jae
sbb
outsl
test
in
dec
cld
repz
les
gs
out
inc
add
lds
jg
adc
movsl
and
push
push
movsl
mov
fmulp
mov
iret
push
int3
fbstp
js
jl
mov
out
in
jecxz
outsb
xchg
fsts
cmpsb
test
jp
sub
es
xor
push
aaa
pushf
jae
sbb
insl
jns
xchg
testl
jecxz
ja
pop
sub
xchg
mov
test
ljmp
inc
nop
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
jmp
nop
loope
pop
dec
gs
int
xlat
sub
mov
ja
sub
in
push
adc
rolb
jne
add
add
movsb
xchg
sub
mov
test
mov
sub
pop
int
push
mov
xchg
aam
or
dec
ds
bound
stos
outsl
sti
lahf
shll
pop
les
mov
mov
ret
js
and
js
outsb
add
ds
dec
daa
aam
test
xchg
pop
dec
icebp
imul
negb
or
cmc
adc
jno
mov
inc
mov
hlt
shl
call
jb
add
xor
in
or
jo
dec
push
into
xor
pop
xchg
sbb
loop
aas
rcrl
push
sub
cmp
inc
cld
inc
divl
add
shll
push
scas
jl
xchg
mov
dec
insl
pusha
pop
xor
sub
into
jns
push
sub
fwait
xchg
ret
fmull
call
pop
rcr
pop
sbb
sbb
mov
repz
insb
push
insl
push
popa
push
pop
stc
adc
int3
fimull
ss
repz
lea
out
add
std
pop
rorb
lds
into
aas
sbb
cmovg
mov
test
and
ljmp
adc
lret
fcmovnu
adcb
mov
pop
shll
sub
cs
je
jno
xchg
sbb
push
pop
scas
jge
jmp
mov
xor
mov
popl
push
sbb
arpl
push
roll
insl
push
fnstcw
clc
mov
test
movsl
sbb
arpl
testl
jmp
sbb
popf
xchg
ljmp
jno
cs
fmull
mov
lock
xor
jnp
fucomip
and
ss
sbb
stos
xchg
cld
jg
insb
rcr
mov
js,pt
fcoms
dec
push
inc
adcl
xchg
jg
sbbb
add
lcall
mov
sbb
lcall
int
inc
movsl
push
xor
or
mov
cmp
mov
test
loop
movsb
sub
push
jmp
sbb
push
rcrl
xchg
jecxz
gs
xchg
lcall
cmp
je
orb
mov
dec
cmp
cmp
jne
ja
loop
aaa
jmp
jle
dec
mov
sbb
leave
adc
in
pop
sbb
in
bound
shrl
jle
pop
sarl
scas
sti
push
mov
lahf
pop
lds
lea
iret
addb
push
mov
inc
shlb
rcr
inc
push
shll
cmp
and
mov
mov
in
mov
shrl
jb
sub
ret
and
icebp
stos
or
nop
mov
roll
jns
movsb
adc
movl
mov
dec
or
adc
cmp
sbb
add
inc
jmp
inc
push
and
xchg
push
mov
push
imul
sub
or
jnp
inc
das
loopne
adc
mov
inc
adc
cs
sub
scas
mov
mov
subb
and
popf
in
push
pop
mov
jae
rcrl
fiadds
xor
mov
cmp
xor
cmc
shlb
rcr
js
aad
mov
in
dec
dec
cmp
inc
adc
push
xor
jo
nop
dec
sahf
les
mov
daa
cmp
pop
mov
sub
jb
mov
or
pop
add
into
lahf
movsb
cld
in
iret
rclb
cli
cli
xor
xlat
and
fwait
dec
popf
jb
out
std
push
xlat
arpl
movb
mov
xlat
insl
and
pop
pushf
push
add
int3
inc
stos
mov
add
inc
std
in
ds
insb
pop
cmp
in
cmp
gs
xchg
or
mov
jle
adc
push
xlat
fwait
repz
out
adc
fcom
dec
pusha
sub
les
test
mov
cmp
sub
repz
xchg
jg
and
fstl
mov
jns
cmp
in
mov
lret
jle
mov
out
jb
iret
outsl
fidivrs
das
faddl
mov
aas
or
fldt
mov
jecxz
cmpsl
mov
mov
jg
fwait
cmpsl
and
loop
mov
dec
dec
mov
dec
sarl
push
xor
pop
adc
sbb
xor
jecxz
rorl
inc
ret
jp
sti
imul
das
sub
orb
jecxz
shlb
lock
cmpsb
xor
cmp
and
mov
pop
xchg
lcall
mov
pop
pop
ds
add
push
in
lods
cmpsb
xchg
repnz
inc
push
aaa
or
aad
dec
insb
bound
rclb
push
inc
outsl
xor
pop
call
les
or
les
mov
jp
or
je
fisttps
iret
ja
xlat
jns
jle
or
jb
jno
dec
outsl
cmc
jno
cmpsl
jb
repz
dec
insb
xor
xor
icebp
cltd
stos
arpl
lods
das
outsb
stos
mov
jns
dec
data16
mov
adc
push
mov
and
cwtl
iret
xchg
neg
xor
dec
mov
sub
cltd
loop
cmpsl
mov
sub
dec
push
sti
lods
adc
pop
mov
mov
mov
aam
pushf
xor
fnstcw
arpl
sbb
cmp
loopne
and
outsl
outsl
test
mov
adc
sub
mov
add
or
xchg
fidivs
cmpsb
scas
add
sbb
xor
cld
pusha
cmp
dec
xor
mov
cld
aaa
jbe
inc
adc
mov
push
scas
icebp
sub
cltd
mov
imul
jno
mov
xor
out
cmp
jge
ja
inc
fnstsw
mov
pop
xor
lret
cmpsl
leave
adc
lret
faddl
jbe
rcr
out
cltd
in
shrl
sbb
jg
call
and
dec
xor
push
sarb
inc
popf
sbb
pop
iret
xchg
fidivs
jno
jge
mov
push
mov
and
jg
jbe
push
ret
mov
aad
and
xor
or
jge
sbb
push
mov
repnz
mov
sahf
pop
inc
mov
rcll
push
fisubl
lret
fcom
inc
int3
in
stos
stos
imul
pusha
adc
inc
shl
inc
aam
inc
jle
aas
es
pop
dec
in
mov
add
inc
testb
jb
xchg
mov
imul
dec
lret
push
neg
movsb
cmpsb
sub
dec
lock
cmp
ss
and
pop
mov
push
add
inc
int
test
loopne
aam
pop
mov
cmp
mov
jbe
mov
mov
test
lahf
inc
add
test
repnz
pop
lea
div
loop
stc
xchg
add
roll
dec
loope
add
mov
dec
sbb
or
hlt
and
add
ror
mov
jg
mov
dec
adc
test
ljmp
add
inc
adc
ljmp
or
mov
mov
mov
jmp
dec
loope
lret
sbb
or
mov
adc
bswap
int
scas
xor
xor
aam
cs
cltd
dec
add
out
nop
clc
adc
lret
mov
mov
xchg
cmp
jl
xor
mov
mov
outsb
add
dec
pop
cmpsb
ljmp
sub
mov
popf
pushf
xor
pop
fwait
and
ss
sti
ljmp
mov
scas
sub
pop
mov
ds
lods
lcall
fs
jle
cmp
xchg
jnp
inc
xchg
pop
dec
subb
mov
aam
dec
mov
cmp
push
and
movsl
xor
loopne
inc
sbb
pop
xor
fiaddl
popf
lds
cmpsb
sahf
rcr
inc
fsub
andnps
jge
xchg
add
sbb
stc
orb
lods
mov
jno
xchg
xchg
push
fdivrl
lahf
addb
adc
jge
pop
xor
repz
test
das
xor
loop
jmp
cmp
cmpb
cmp
cmpsl
mov
sbb
xchg
pop
adc
add
mov
mov
xchg
femms
les
pop
nop
pusha
or
sub
and
enter
xchg
fcmovu
cmpsb
cmc
cmc
xchg
sub
add
flds
xor
out
shlb
je
scas
movsb
or
add
push
lds
add
push
in
adc
and
xchg
pop
ljmp
arpl
out
shrb
sahf
xor
sbb
cmp
bound
mov
mov
adc
aas
call
aad
pop
push
stc
fisubrl
shl
push
cmp
mov
roll
lcall
dec
into
ds
or
jnp
lcall
xlat
mov
popf
xor
lea
dec
scas
ds
jne
lods
xchg
sbb
sub
dec
dec
loope
xlat
out
and
jae
xchg
loope
xlat
add
xlat
icebp
outsl
adc
dec
jle
push
lahf
daa
das
lea
xchg
fsubrs
movsl
scas
push
pop
fcmovne
pop
mov
aaa
jo
cmp
adc
loopne
fs
pop
lds
cmpsb
inc
sub
cmp
aad
sub
dec
jge,pt
mov
add
dec
ds
js
test
sbb
and
jns
decb
lock
lock
les
imul
test
mov
iret
leave
adc
flds
mov
in
shll
scas
lods
mov
mov
rclb
test
js
xor
jns
mov
pop
jb
pushf
gs
xchg
mov
add
nop
mov
push
mov
lods
lret
mov
stos
and
dec
subl
and
out
push
xor
mov
and
jb
std
shrb
enter
mov
and
or
call
inc
mov
mov
push
push
idivb
cmp
mov
les
dec
xchg
pop
in
mov
add
sbb
xchg
or
sub
int
adc
push
sub
xchg
xor
sub
addr16
leave
loop
xor
and
ljmp
lock
popf
or
imull
sub
lret
xchg
neg
cmpsb
add
pop
shll
inc
and
bound
jle
xchg
enter
jl
inc
inc
push
fsubl
in
fs
mov
cmp
mov
std
aad
xor
mov
outsl
xor
icebp
out
int3
mov
std
jo
xchg
push
jo
icebp
push
in
imul
mov
cmp
jl
lahf
incb
xchg
push
xchg
mov
scas
pop
adc
xchg
mov
xor
jae
test
notb
mov
pcmpeqw
sub
jmp
jnp
cmp
fisttps
xchg
and
inc
lret
jp
mov
mov
es
sbb
push
mov
and
jo
bswap
jg
sub
cmp
sti
pop
xchg
adc
sub
push
mov
add
jns
ret
imul
and
sub
loopne
adc
popf
adc
inc
and
jno
sbb
cs
fwait
out
add
clc
jge
adc
outsl
cmp
mov
and
rcl
stos
inc
jg
outsl
out
mov
xchg
xor
cli
jne
xor
rcll
outsl
xor
jg
xchg
add
repz
lds
and
lds
or
hlt
mov
lret
jg
push
in
mov
cmpsl
mov
out
mov
repnz
jb
mov
push
push
inc
test
in
cld
adcl
xchg
push
push
jo
insb
dec
jno
cmpsl
ffree
pushf
mov
stos
insb
out
or
nop
pop
and
mov
in
out
mov
sub
push
jns
outsb
insb
mov
inc
sub
cmpsb
aad
sub
lahf
and
loope
xchg
pop
cmp
dec
pmovmskb
xor
sbb
or
or
sti
rorl
mov
jle
out
out
add
fsubs
js
rcr
cmp
sub
sahf
jg
fists
repnz
cld
sub
std
sub
cltd
scas
jo
out
pop
fwait
sbb
sbb
dec
mov
test
sub
bnd
xchg
mov
les
jnp
inc
mov
lret
xchg
push
incb
pop
push
insb
scas
fildl
adc
push
mov
push
pusha
inc
insl
mov
cmp
scas
loop
cmc
lds
dec
adc
inc
dec
out
scas
dec
fiaddl
cs
dec
out
andb
call
pop
xchg
jle
mov
dec
mov
mov
test
fbstp
push
xor
psrlq
inc
mov
cmp
pop
clc
jb
pop
jns
sbb
stos
sahf
cmpsl
je
sub
add
ja
icebp
push
xchg
pop
dec
stos
in
rorl
cmp
adc
lret
inc
sub
lret
push
xchg
sti
test
mov
inc
insl
dec
xchg
out
mov
fwait
call
inc
cmp
fistl
pop
mov
nop
push
mov
jae
push
rcr
mov
addr16
xchg
test
movb
adc
mov
stos
aam
cmpsl
shll
mov
mov
sbb
cmp
cmp
cld
mov
sahf
mov
jmp
idivl
dec
in
jle
test
mov
lea
pop
dec
push
aaa
stc
adc
push
ss
push
push
ret
sbb
dec
dec
ret
push
sarl
jp
pop
add
jne
setbe
pop
lods
rol
outsb
cmp
je
cmp
sbb
fstl
imul
sub
fdivr
lahf
pop
adc
xor
popa
xchg
sti
push
cld
mov
ds
bound
sbb
mov
insl
adc
stos
mov
xchg
fstl
mov
pop
mov
movhps
inc
cwtl
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
jmp
cltd
push
in
sub
jno
popf
or
xchg
add
sahf
xchg
mov
cmp
or
jp
shrl
mov
mov
outsw
lds
mov
nop
cmp
int3
cmpsb
out
lods
mov
cli
pop
dec
insl
mov
stos
or
movsb
aam
out
lea
popf
mov
add
or
sbb
jmp
pop
test
hlt
mov
fildl
cmp
loop
in
or
hlt
cwtl
mov
out
push
add
xchg
mov
jae
test
sbb
data16
std
pop
sbb
scas
push
aaa
cli
scas
jmp
fwait
inc
cmpsl
loope
mov
push
mov
push
pop
mov
add
js
andb
iret
xor
int
inc
and
jg
lods
enter
das
sub
js
sub
jge
aas
jmp
push
adc
xchg
mov
mov
xchg
test
add
into
pop
push
vcvtpd2dq
loop
imul
movsl
loop
clc
jb
cmpb
pop
dec
push
add
addr16
xchg
cmp
mov
or
insb
cmc
rcrb
stc
ljmp
sahf
sbb
add
dec
adc
mov
adc
loopne
mov
aad
cwtl
pop
or
add
dec
or
add
das
mov
aam
inc
adcl
mov
cmp
fsub
adc
mov
loop
xchg
inc
sub
push
jle
mov
enter
nop
jbe
mov
pop
leave
popa
jp
jl
dec
idivl
mov
xor
cmp
and
jno
xlat
jo
inc
xchg
push
stos
js
pop
jno
lret
insb
lahf
lcall
push
loope
mov
mov
wrmsr
int
cmp
jne
outsl
jne
ja
mov
jle
popf
lock
ljmp
out
popf
jle
jae
jne
je
lcall
stc
sub
std
shll
dec
mov
lcall
out
dec
mov
and
mov
loopne
outsl
cli
inc
call
jno
pop
push
lret
xchg
es
ljmp
test
jg
clc
and
mov
mov
mov
fcomp
loopne
int
aaa
pop
fisttpll
sbb
inc
mov
push
ret
ja
sti
cmp
lahf
dec
les
mov
in
loopne
push
pop
pop
jb
cmp
jne
mov
adc
mov
xor
sbb
add
loop
std
jecxz
xchg
out
inc
adcb
ds
mov
mov
jmp
pop
cmp
sub
pop
cwtl
int
scas
inc
and
push
shll
fidivs
movsl
inc
xor
aaa
lods
jge
mov
mov
icebp
push
outsb
imul
mov
loopne
inc
testb
xchg
icebp
out
lock
ret
dec
lea
and
loop
bound
sbb
cmc
mov
mov
sbb
cmp
ljmp
jmp
call
leave
sbb
in
fistl
and
or
lret
ret
xor
je
mov
add
jnp
adc
adc
rorl
cli
cwtl
js
pop
movl
outsl
sar
test
call
cmp
sbb
cmpb
movsb
dec
pop
scas
or
idiv
xchg
xchg
in
sbb
jae
sub
test
cwtl
push
cltd
or
fmull
ret
and
jl
insb
test
popf
arpl
ficoms
les
dec
test
int3
lods
aam
xchg
push
push
mov
pusha
sbb
sub
fxtract
sarb
jp
xor
dec
mov
and
dec
sahf
pop
scas
in
cmc
or
and
sub
arpl
int3
lret
mov
xor
repz
mov
cmpsl
data16
sbb
scas
pop
stos
xchg
popa
aaa
push
xor
out
jmp
and
lods
and
in
xor
inc
es
sahf
mov
iret
stc
sti
cmp
or
mov
mov
roll
sar
repz
inc
js
popf
lock
pop
xchg
xchg
outsb
clc
data16
lret
pop
push
ja
push
out
jmp
mov
in
clc
jb
pop
xchg
mov
mov
idivl
loope
sub
sbb
int3
jne
pop
or
test
inc
scas
shr
sub
popl
hlt
or
inc
mov
jmp
lods
lods
imul
or
fdivrp
popa
add
jg
or
mov
push
enter
in
mov
cltd
inc
int3
jmp
stos
outsl
data16
sbb
xchg
and
or
arpl
js
bswap
mov
test
lcall
dec
nop
add
xor
int3
andb
or
push
sbb
push
push
push
adc
test
sub
bswap
stos
sub
int
out
cmpxchg
xor
dec
cmpsl
dec
push
out
xchg
sub
xor
sub
sub
scas
out
in
inc
jnp
scas
dec
aad
inc
jle
out
iret
fidivrl
std
and
push
pushf
enter
add
xor
sub
jb
cltd
xchg
cltd
loope
mov
add
mov
pop
movsb
rcll
sarb
sub
inc
push
fmull
push
jl
xchg
stos
rorb
ja
mov
xchg
pop
mov
imul
stos
inc
mov
pop
pop
cmp
dec
sbb
jge
cmovg
xor
inc
rol
pushf
int
xor
enter
mov
loopne
and
cmp
jl
mov
mov
or
or
jnp
sub
pop
lods
jle
popf
mov
cmp
lock
and
xchg
sub
xchg
in
inc
movsb
xchg
imul
adc
mov
sarl
in
hlt
or
mov
psubsb
pop
sbb
push
out
mov
add
push
and
cmpsb
sub
inc
bound
xchg
scas
outsl
stc
mov
pushf
mov
jne
out
push
pop
es
movsl
imul
add
xchg
aad
cwtl
mov
sbb
mov
in
add
mov
cmp
hlt
mov
sti
xorl
push
mov
dec
sbb
or
pandn
jge
xchg
lcall
cmp
aam
outsb
pop
mov
jno,pn
lds
das
cmp
sub
xor
movsl
loopne
xlat
add
ret
xchg
pushf
push
adc
idivl
push
pop
fdivp
call
mov
pop
cmp
push
frndint
mov
aam
xchg
cld
addr16
xchg
mov
push
enter
jbe
pop
cli
negb
cmpsb
rorl
xchg
adc
test
cmpl
push
push
or
adc
ret
nop
fsubl
imul
lea
mov
fsts
aad
gs
imul
xchg
pop
popf
push
in
notl
ret
sbb
repz
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
jmp
push
mov
adc
xchg
lods
test
xchg
addr16
adc
cmp
add
in
mov
icebp
lods
mov
test
mov
loopne
push
outsl
push
aam
outsl
mov
inc
cs
mov
sub
jge
sub
inc
in
out
cmc
mov
stc
into
aas
xchg
xchg
mov
dec
js
or
pusha
repz
repz
xchg
push
stos
mov
iret
sbb
jno
push
hlt
push
test
lcall
cld
pop
mov
aam
mov
movsl
data16
xchg
mov
adc
jno
lds
popf
adc
or
test
in
in
cltd
mov
push
cmpsl
xorl
lds
jp
mov
mov
jb
xchg
shl
and
fistl
mov
xlat
push
cs
sbb
das
pusha
pop
add
pop
cmp
out
pop
add
and
aad
jns
ret
es
leave
pop
pop
xchg
pop
into
int3
gs
pop
xchg
push
mov
ficoms
dec
cmp
pop
and
fnstcw
leave
js
leave
push
cmp
sbb
and
add
inc
xor
inc
dec
sbb
fs
sub
orb
xchg
addr16
cmp
inc
xlat
dec
pop
dec
xchg
mov
mov
push
out
push
aam
push
aam
pop
mov
dec
mov
inc
xor
arpl
xchg
jae
jg
jbe
dec
jnp
jns
jbe
iret
or
outsb
test
pop
movsl
jle
popa
push
aas
xchg
andb
adc
pop
cs
push
outsl
pop
sub
fcmovnb
dec
iret
mov
sbb
add
stos
shrl
dec
test
mov
push
jo
je
mov
cmpl
aad
cmp
dec
frstor
ljmp
scas
dec
ficoms
repz
inc
jecxz
loope
rclb
xchg
and
and
fs
mulb
pop
dec
cmc
enter
inc
roll
dec
out
or
xchg
adc
add
call
int3
ret
push
adc
hlt
test
mov
pop
maskmovq
testl
loop
push
mov
loope
bound
imul
dec
cld
cmpsl
std
xchg
push
xor
adc
dec
cltd
or
inc
mov
in
ficomps
and
push
inc
hlt
loopne
xor
jns
and
push
fnsave
lret
and
dec
out
and
dec
mov
imul
cmp
jge
mov
ds
test
adc
inc
jge
fidivl
sub
sarl
pop
xchg
cmc
mov
dec
push
stos
shl
xor
jmp
gs
mov
lret
out
push
mov
mov
stc
rolb
inc
aaa
aas
pop
or
xchg
mov
lods
inc
sbb
sbb
decl
xor
mov
clc
inc
enter
cld
push
aad
outsb
cmc
fstl
pop
mov
xchg
lret
pop
out
sub
bound
mov
jo
insl
xor
xchg
js
int
push
sub
cmp
dec
jo
sarb
jb
sub
insb
and
mov
aaa
add
pop
dec
jb
leave
sbb
cmp
daa
pop
add
jae
push
fsub
pushw
imul
push
lret
cli
sarb
adc
jge
sub
scas
or
pop
jno
dec
xchg
pop
in
imul
add
xchg
sub
ret
mov
in
add
rcrl
out
cmp
pop
adc
inc
jbe
mov
xchg
sub
adc
mov
sub
xor
inc
push
shrl
call
fidivrs
jb
jns
inc
xchg
shll
xlat
jb
pop
rcrl
cmp
xchg
and
pop
in
mov
std
mov
stos
mov
and
or
test
lods
xchg
and
jb
sbb
insb
fnsave
cmp
bound
lret
lods
xchg
out
in
test
jp
add
mov
cmp
jae
fistps
mov
xchg
mov
repz
addl
adc
xchg
test
sbb
outsb
loopne
imul
mul
fisubrs
addr16
mov
popa
divb
add
mov
dec
mov
xchg
fwait
cmp
push
dec
cmp
lods
loope
je
out
insl
orl
lock
test
push
enter
in
addl
xor
sbb
lahf
test
xor
xorb
mov
lahf
popf
cmp
push
mov
cltd
sub
test
not
xchg
dec
scas
pushf
jne
ss
in
sub
cmp
bt
mov
fimuls
repz
sub
jno
xchg
xchg
xlat
xchg
mov
shlb
mov
in
and
pusha
push
xchg
rclb
dec
movsl
popf
mov
adc
fmuls
fisttpl
cwtl
mov
adc
xchg
cs
adc
lahf
push
out
aad
sar
out
fwait
xchg
aaa
mov
clc
sub
clc
xor
out
movsb
inc
add
and
dec
fdivrp
cmp
pop
test
popa
lahf
sbb
sahf
adc
dec
insb
xor
jmp
ss
fnstsw
mov
in
lahf
ljmp
and
outsb
inc
outsb
fwait
cld
xchg
insl
mov
jg
inc
imul
aaa
sub
mov
push
loop
mov
mov
cmp
pop
push
hlt
test
jo
das
insl
fstl
pop
gs
into
cmp
add
mov
mov
mov
jno
int
xchg
data16
or
lods
pop
cmp
cmp
hlt
stc
cli
jp
mov
pop
mov
push
pop
push
cmp
imul
mov
or
push
mov
push
fildll
cltd
sub
shrb
fcomi
cmpl
test
insl
or
add
sar
xlat
cmp
or
rcr
pop
roll
jo
arpl
push
fcoml
scas
repz
mov
lret
aad
js
push
xchg
cltd
push
idivb
sub
std
sbb
hlt
movsb
mov
push
aas
push
orb
mov
add
popa
test
push
sbb
push
mov
xchg
fadds
ret
aam
inc
dec
ja
test
ss
or
sbb
les
ss
cltd
pop
cmp
mov
enter
das
cmp
adc
stc
pop
dec
pop
jne
xor
add
mov
or
cli
in
xchg
loop
clc
pop
jb
aaa
or
int
push
popa
jl
fs
fbld
ds
xor
xchg
mov
jle
lea
cwtl
in
dec
dec
cld
lcall
addl
cwtl
out
gs
jae
push
pop
mov
add
jns
mov
pop
push
sub
mov
sti
push
or
pop
xchg
mov
xor
sbb
fadds
add
cmp
adc
mov
test
xchg
repz
xchg
or
xchg
cwtl
arpl
test
or
cmp
jnp
int3
inc
imul
and
sbb
mov
scas
insb
dec
je
fidivrs
inc
inc
pop
cltd
arpl
scas
push
and
int
lds
fsubp
jb
dec
mov
subl
lret
adc
xchg
sti
mov
mov
pop
cltd
xlat
add
imul
add
aad
fcompl
jecxz
repz
sbb
xor
sub
jl
sbb
pop
or
imul
mov
mov
rolb
sbbl
incl
cmp
xor
lods
ss
insb
mov
mov
fildl
cmpsl
pop
cltd
scas
fiaddl
cld
push
popf
adc
faddl
movsl
sbb
and
dec
popf
lds
enter
xor
fnstenv
mull
in
jle
and
std
popf
ret
popf
push
test
pop
xchg
or
shll
fwait
inc
inc
andb
dec
sbb
jp
cld
push
jbe
std
xchg
push
inc
cmp
or
cmp
mov
and
jmp
dec
insl
ret
mov
aaa
insl
insl
mov
repnz
lret
xor
adc
sub
iret
test
push
and
icebp
mov
push
mov
or
into
cmp
fldcw
andl
jne
insl
fldt
loop,pn
in
pop
fsubrl
pop
cmpsb
shrl
fdivl
and
call
or
sub
jnp
mov
popf
push
cmpsl
mov
push
jge
scas
cmp
stos
xlat
stos
test
add
scas
push
jnp
push
add
xchg
mov
mov
push
loop
icebp
xchg
lds
sub
push
ja
mov
cmp
push
ss
test
push
push
mov
adc
add
negl
mov
std
sti
jno
xor
pop
inc
scas
leave
dec
lock
mov
mov
rorb
mov
mov
mov
xchg
add
test
push
mov
mov
mov
push
dec
in
add
mov
jns
dec
imul
das
daa
fsub
xlat
fsubr
mov
lods
push
js
cmpsb
add
dec
or
cmp
jle
pop
in
nop
dec
leave
mov
scas
mov
ds
icebp
adc
xlat
std
gs
jnp
xchg
dec
loopne
xor
into
ja
mov
test
aad
cltd
loopne
push
addb
or
sbb
mov
inc
mov
pop
pusha
hlt
int3
lock
jns
sub
adc
push
dec
and
pop
adc
sbbb
out
outsl
stc
sbb
fxch
in
inc
das
xor
mov
sub
sbb
xchg
stos
and
push
mov
and
shr
out
inc
aas
stos
jnp
pop
icebp
xchg
cmpsl
out
out
std
mov
adc
or
sti
bound
jmp
sbb
or
je
test
leave
lcall
mov
sbb
and
pop
mov
lea
je
notb
xchg
negl
xor
mov
fcomip
dec
es
sbb
fisubrl
mov
add
jmp
push
adc
or
cmp
int
lret
mov
aam
aam
push
out
add
adc
dec
jl
mov
mov
mov
push
loope
and
scas
jo
or
lds
outsb
fs
pop
imul
jnp
in
cwtl
sbb
cmp
adc
xchg
sbb
fcoml
jae
adc
and
in
xor
lds
data16
jl
hlt
pop
mov
jne
outsb
xchg
pop
dec
testl
push
sarl
mov
scas
sbb
hlt
xor
fcoms
popa
sbb
ja
pop
dec
xchg
scas
xchg
xor
jecxz
jne
sub
andb
mov
testl
mov
jno
clc
jmp
jne
cmc
push
jb
inc
xchg
xchg
push
sarb
cs
xor
jae
stos
jnp
lret
out
ret
and
popf
es
iret
push
or
out
push
sbb
fimull
cmc
into
test
jmp
or
xor
mov
scas
fisttpll
inc
dec
or
loope
mov
enter
dec
adc
clc
jns
js
mov
add
or
fsubs
rcll
fcoms
imul
sub
inc
stc
sarb
sub
dec
xchg
xchg
out
mov
pop
in
cli
mov
sbb
jge
test
in
or
bound
cld
mov
lcall
cs
out
jns
mov
adc
add
jge
sarl
jl
mov
fnstcw
push
sbb
fs
dec
fldenv
cld
jb
arpl
cmpsb
xchg
cwtl
stos
popa
adc
jge
js
xchg
insb
fiadds
imul
aaa
adc
aas
test
mov
mov
shr
push
mov
xor
imul
cmpsl
sti
xor
mov
shr
mull
adc
jmp
push
and
orl
xor
pop
xchg
mov
orl
sbb
jle
cmc
push
cmp
add
fstl
sbb
pop
ja
in
dec
sub
std
imul
ss
sbb
sti
mov
mov
in
mov
out
push
fstps
sbb
dec
dec
jnp
hlt
out
mov
xor
sbb
in
xor
test
sti
or
dec
popf
fs
loope
push
mov
mov
mov
push
sti
sbb
mov
xor
ja
aas
lods
ds
cli
cmpsb
push
out
aad
out
add
xchg
jb
pop
loop
sbb
stos
dec
push
aaa
add
mov
fidivrl
rsqrtps
jge
jge
pop
mov
xor
mov
aad
ljmp
jb
xchg
mov
fcomps
outsl
adc
sbb
pop
gs
testl
iret
popf
incb
pop
dec
jo
xor
scas
std
cmp
mov
in
insb
xchg
inc
jnp
int
and
xor
mov
mov
adc
cmpsl
push
movl
ret
ss
es
xor
lock
cld
adc
imul
daa
insb
mov
sub
hlt
bound
lock
cmp
fsub
cmpl
nop
xchg
enter
in
mov
mov
fistpll
fisubs
jge
and
pusha
cmpsl
test
addr16
arpl
sbb
fwait
ja
push
shlb
add
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
jmp
cmpsl
icebp
cmp
pop
dec
arpl
xor
adc
xchg
push
mov
jnp
jae
push
fsubs
repnz
das
addr16
adc
pop
in
push
fsubp
jmp
outsb
stos
sub
xchg
dec
pushf
in
loopne
bsr
inc
leave
pop
repz
sbb
dec
jmp
pusha
in
cmp
xchg
outsl
les
lods
stos
cmpsl
jmp
push
pop
leave
mov
jae
out
add
adc
mov
adc
mov
add
movsb
in
into
imul
push
pop
shl
loopne
mov
sub
mov
sub
popf
push
repnz
push
shrl
xor
pop
les
pop
cs
xchg
fcmovnu
pop
xor
idivl
push
and
out
jecxz
movsl
pusha
stos
jmp
enter
in
fnsave
or
add
clc
pop
sbb
pusha
inc
jecxz
cmp
test
scas
fsubl
inc
or
dec
ds
xor
jbe
mov
cld
jbe
xchg
aad
sub
push
add
push
fs
jns
sbb
and
cmpsl
mov
fiadds
mov
push
adc
lahf
pop
shrb
or
add
orl
push
cmc
scas
xchg
lods
mov
sub
hlt
pop
pop
rclb
sub
arpl
mov
and
stos
dec
test
mov
adc
cli
ficomps
ss
fimuls
xor
ja
pop
clc
daa
outsb
xchg
jno
outsb
inc
inc
push
jmp
push
outsb
jp
cmp
lret
in
xchg
mov
jp
mov
inc
mov
fcmove
leave
ja
mov
subb
jmp
in
test
mov
push
cmovo
sahf
cltd
icebp
lahf
aam
sbb
bound
xchg
xchg
jno
mov
mov
dec
lods
imul
sub
push
mov
pop
mov
mov
in
cli
js
mov
adc
push
mov
int3
jge
jecxz
test
push
jb
ja
in
int3
pop
es
popf
jne
cs
ds
xchg
pop
outsb
test
xchg
push
shrb
bound
outsb
cmpsb
out
mov
sub
dec
or
and
jbe
enter
lea
pop
fnsave
or
mov
dec
and
adc
cmp
mov
and
add
fiadds
bound
cmpsl
jle
insb
ds
mov
mov
lods
call
xchg
movsl
inc
dec
int3
test
shll
movsl
ljmp
sbb
dec
mov
inc
fnsave
sbb
arpl
mov
rcl
imul
cmp
sbb
mov
les
pop
push
out
push
mov
push
cwtl
stos
push
ret
or
mov
xor
cmp
shl
mov
pop
sarb
pusha
pop
les
ret
sbb
dec
imul
xor
sbb
sar
sub
daa
dec
rcr
mov
rcrl
cmp
xchg
push
jne
xchg
mov
cs
push
movsl
sub
pop
pop
jae
ret
cld
pop
xchg
jae
daa
enter
mov
pop
xor
pop
int3
stos
sub
and
and
cmp
xor
add
divl
pop
movsl
ja
mov
inc
pop
push
pop
cmpsb
add
adc
jnp
mov
sahf
call
insb
hlt
sbb
xor
inc
xchg
inc
dec
out
outsl
jbe
and
jecxz
fs
xchg
negl
mov
iret
sub
movsb
push
ja
loop
enter
push
mov
xor
jae
mov
fcoms
in
adc
imul
lret
xchg
cmpsb
add
xchg
adc
shrb
loopne
xchg
adc
sub
sub
loope
push
inc
jbe
mov
mov
test
sub
pop
pop
inc
lods
ljmp
mov
outsl
xchg
test
negl
mov
jb
adc
ljmp
in
dec
subl
cmc
dec
adc
aam
aam
or
jb
or
lock
xor
sub
subb
adc
sarl
popa
mov
mov
dec
ret
ds
xor
sub
inc
dec
scas
aad
loop
lods
mov
pushf
push
push
out
add
arpl
jo
vpcmpeqw
add
xchg
je
xor
mov
push
push
adc
xor
in
insb
xor
into
lock
test
das
lret
add
mov
xlat
pop
mov
fcomps
dec
sub
addb
cmp
cwtl
les
sti
test
cmpsl
nop
mov
inc
aad
gs
test
out
xchg
es
jmp
sarl
sti
pop
xor
dec
mov
dec
arpl
lret
inc
mov
jo
jmp
jecxz
out
icebp
add
stc
xchg
mov
lret
jmp
or
mov
adc
adc
sub
insl
movsb
dec
shll
jge
pop
sti
xor
xchg
cmpsb
es
xor
scas
xchg
out
dec
push
xchg
subb
xor
into
andl
repz
or
inc
loop
inc
hlt
mov
dec
into
cmp
stos
push
ja
mov
ret
xor
lock
xchg
insb
adc
or
add
pop
fsubrl
sub
stos
lcall
jecxz
xchg
jecxz
inc
jg
int3
pop
sbb
test
cmpsb
adc
scas
sbb
inc
repnz
sbb
or
adc
cltd
in
pop
aam
in
mov
or
xor
pop
sub
popa
or
mov
fdivs
fimull
popf
jne
push
pop
ret
push
ja
out
adc
inc
sub
aas
push
push
js
testb
in
pop
inc
jb
or
ja
sub
lret
gs
pop
cmp
xchg
fldt
popf
roll
push
jo
inc
es
jns
xchg
cwtl
xor
xchg
cmp
mov
stos
push
and
es
cmpsb
fsubrs
sbb
stc
xchg
cli
mov
jns
das
sti
xor
movsl
push
xor
sub
loope
sbb
sbb
test
lock
insl
subl
pop
xcrypt-ctr
cmpsl
fildl
jno
mov
inc
push
adc
ja
cld
sub
adc
pop
lods
lods
jmp
loope
aas
rorb
das
loop
stc
rolb
add
and
loopne
sbb
xorl
ds
scas
xchg
test
mov
adc
lret
jne
jbe
xchg
loopne
cli
push
add
pop
mov
lods
sbb
out
scas
subb
jcxz
lcall
push
sbb
leave
insl
or
daa
pop
or
cmp
pop
icebp
rolb
mov
inc
mov
mov
adc
sub
lds
cmp
inc
lds
and
jmp
adc
or
pop
add
ljmp
sub
push
jae
xchg
test
adc
xchg
leave
pusha
dec
mov
ficoms
pop
in
xlat
aam
xchg
add
jmp
inc
mulb
rorb
ljmp
xchg
mov
push
dec
movsl
adc
lds
int
mov
or
inc
je
jl
xchg
popf
stc
out
ds
rorb
in
push
adc
fcomip
por
cmp
sbb
xchg
aaa
add
in
add
or
cmp
add
test
jp
rclb
mov
or
mov
push
xchg
movsb
fs
addl
test
add
push
gs
scas
add
sarb
sub
jmp
pusha
adc
jbe
xchg
xchg
inc
test
mov
xchg
mov
or
repz
xchg
ds
pop
xchg
fnsave
scas
insl
test
or
aam
cli
cmp
aas
jmp
push
sub
sub
int
imul
sub
out
les
push
inc
loope
out
rcll
or
ss
push
cld
shlb
rclb
cmp
xchg
repnz
das
cmp
and
or
sahf
adc
add
xchg
loope
je
icebp
sbb
or
movsl
push
pop
mov
push
in
outsl
push
xchg
cmp
pop
loop
dec
shlb
xchg
test
icebp
lcall
inc
jbe
adc
jne
add
imul
and
inc
loope
jo
inc
hlt
daa
std
jbe
push
adc
sub
out
or
xchg
cmp
je
loop
iret
out
shrb
mov
in
sub
sub
ja
push
sub
xor
inc
xor
loopne
xchg
loopne
stos
mov
insb
repnz
fwait
adc
repnz
in
add
leave
add
das
pop
ret
dec
and
pop
stc
push
or
add
dec
mov
out
idivb
sub
test
mov
mov
data16
add
subb
xor
inc
mov
adc
fs
js
loop
pop
mov
add
into
ja
pop
fucomi
das
ss
push
xchg
sub
insl
shrb
pop
cmp
mov
les
xchg
pushf
jl
aad
jle
mov
inc
rorl
icebp
stc
fstp
xor
outsl
xchg
popa
lahf
inc
pusha
or
das
scas
test
add
hlt
idivb
sub
xor
jmp
jbe
jne
push
cltd
movsb
loopnew
dec
negl
stc
pushf
cmp
dec
cmpsb
or
push
xlat
inc
leave
insb
ja,pn
pop
test
cwtl
int3
faddp
cli
mov
adc
mov
inc
inc
adc
xor
sub
in
inc
loopne
jp
fs
pop
movsb
sub
mov
mov
push
sbb
rcrb
and
mov
movb
sub
nop
ficomps
and
fdivrs
addr16
daa
xchg
mov
xchg
dec
test
jl
sub
lds
pop
jmp
jmp
sub
push
lock
fwait
mov
and
adc
sbb
test
in
cld
mov
jae
ja
adc
and
lds
lods
xchg
pop
nop
or
nop
mov
jns
inc
dec
mov
int
adcb
lret
insl
cmp
sar
cwtl
jno
call
cmpsb
mov
sub
cmpb
pop
hlt
lret
cmp
jb
or
inc
call
jns
sub
lret
loope
call
adc
cltd
scas
fwait
cli
leave
mov
into
and
out
pop
pop
testb
jb
int
push
pop
cmpl
cmp
outsl
jge
cli
mov
fcmovb
icebp
add
cwtl
jp
or
repz
push
xor
mov
pop
lods
lcall
xor
add
mov
xchg
dec
sub
cmpsb
sub
popa
cmp
adc
loopne
jecxz
cmp
sbb
push
mov
mov
mov
push
ficoms
repz
stos
jle
loopne
ret
dec
sahf
jmp
pop
lahf
mov
js
push
mov
popa
or
inc
ljmp
loope
push
pop
scas
inc
data16
add
loope
fwait
add
sub
sub
ja
xor
adc
cmpsl
jns
inc
mov
clc
or
iret
dec
int
jp
cltd
lds
call
mov
dec
cltd
outsl
inc
fcoms
inc
scas
mov
lret
mov
test
popa
imul
pop
xchg
std
xchg
pushf
ljmp
fbstp
imul
dec
xchg
test
mov
push
call
or
fidivl
in
fwait
loopne
pop
clc
mov
xchg
fcmovne
mov
scas
pop
mov
scas
xor
pop
mov
inc
mov
das
cld
les
outsl
imul
shl
iret
cmp
jb
jb
int
dec
inc
xchg
push
loope
cli
mov
mov
scas
enter
xor
jo
test
fdivrs
cltd
inc
outsb
mov
xchg
cmp
mov
sbb
outsb
dec
shll
icebp
cltd
pop
outsb
cmp
mov
cmp
jne
add
sub
mov
into
jle
stc
jg
inc
jge
cmp
lahf
imul
aam
mov
mov
add
mov
push
adc
cmp
xor
sub
adc
imul
adc
dec
jp
pop
adc
rcrb
data16
mov
mov
filds
push
test
mov
add
sar
and
push
cmp
subl
flds
js
rcr
popf
into
jp
sub
mov
sub
push
ds
mov
sti
pop
pushf
push
shrb
mov
data16
jmp
fnstsw
or
ror
idivl
push
add
out
cmpsl
xchg
loop
sub
jecxz
gs
mov
dec
bswap
dec
lret
out
and
add
andl
js
ret
cmp
cmc
xor
addr16
mov
rcrb
inc
sbb
sub
cld
into
lret
loope
adc
lods
fstpt
testb
or
mov
cmp
jmp
push
and
rol
mulw
ds
lcall
in
cmpsb
add
mov
sbb
adc
jb
pop
notl
inc
enter
repnz
pop
lock
test
push
addr16
repnz
in
xchg
mov
pop
ljmp
push
xchg
mov
lods
ret
adc
push
or
cs
test
sarb
or
mov
sbb
xor
push
xchg
sahf
sub
adc
stos
popf
xor
lret
xchg
leave
cwtl
add
jp
in
adc
inc
jae
loopne
or
push
fisttpll
or
daa
imul
addr16
aad
test
fisubs
lret
pop
sbb
int3
push
mov
test
inc
outsl
fists
dec
loopne
test
pushl
push
push
call
mov
jmp
push
rcrb
and
inc
outsb
xchg
shl
dec
mov
xchg
ret
mov
and
cli
movsb
cld
jg
jecxz
jl
push
js
cmpsl
or
jge
push
push
mov
popf
shll
idivl
push
or
repnz
js
sub
or
test
pop
xchg
jecxz
int3
push
pop
mov
in
rclb
xchg
push
mov
fiadds
fbstp
or
int3
sbb
dec
es
push
rorb
mov
push
or
inc
push
mov
mull
mov
inc
ljmp
lock
stc
push
std
divb
out
loop
xchg
jb
and
and
push
jg
inc
int3
or
pop
pop
scas
or
push
test
sub
out
or
fisubrs
js
xchg
mov
mov
pop
mov
fnstcw
cmpsl
les
push
push
pop
fidivrl
push
mov
pop
add
jnp
pop
and
sub
pop
mov
hlt
loope
jnp
fildll
add
ficoml
push
jge
mov
shr
xor
outsb
sub
pop
mov
cltd
sbb
inc
fsub
sbb
push
jmp
insl
scas
push
icebp
sbb
mov
cmp
dec
leave
xchg
cmpsl
aaa
xor
pop
mov
ret
adc
in
mov
push
bound
pop
ds
mov
fisubrl
add
sbb
cltd
mov
mov
call
dec
inc
jb
lods
test
inc
pop
pop
xchg
repnz
inc
imul
repnz
pop
repz
lea
add
je
repz
xor
jmp
sbb
jmp
add
stos
outsb
imul
cmc
es
fcmovu
movsb
insb
xchg
out
ja
pusha
addl
orb
dec
add
push
mov
pop
sbbl
xchg
pop
arpl
jnp
repnz
jo
inc
push
xlat
xor
fwait
jmp
aad
imul
mov
in
rolb
movl
dec
loope
out
iret
leave
test
sbb
mov
cltd
pop
lds
jmp
es
pop
push
mov
mov
shlb
xchg
mov
movsb
sbb
sbbl
rcrb
stos
addr16
pop
sbb
das
in
xor
jle
rcr
or
and
pushf
ret
adc
xchg
dec
xor
sbb
pop
jmp
dec
add
bnd
xor
xor
out
and
push
adc
dec
pusha
mov
dec
cmp
push
pop
cmp
imul
sbb
and
mov
cmp
jbe
dec
mov
jns
loopne
lcall
mov
jnp
call
jb
sahf
repz
push
cwtl
sub
dec
mov
dec
shll
mov
xor
xchg
adc
jp
add
int3
sbb
xchg
insb
cmp
out
je
jmp
sub
push
add
lods
jle
aam
dec
mov
jnp
xor
fistpl
mov
popf
outsb
and
push
andb
fsts
sub
sub
jno
xchg
scas
push
lret
movsb
ss
dec
cli
lds
stos
fbstp
int
lock
or
icebp
mov
push
aad
or
aad
rorl
mov
dec
lea
lahf
add
aaa
or
orl
out
cmpb
imul
or
cmp
sti
adc
and
push
push
inc
out
fimuls
push
lods
jo
fisttpll
sub
loope
dec
mov
pop
pusha
aas
lea
das
es
loop
dec
fld
cmp
pop
inc
outsl
mov
fisubrs
outsl
ja
xchg
enter
adc
or
ds
push
xchg
fwait
xchg
adc
dec
mov
mov
inc
lcall
or
adc
xor
pop
mov
inc
pop
sub
xor
or
adc
pop
add
and
inc
pusha
adc
je
insl
push
inc
xchg
or
out
adcl
mov
aam
ret
sbb
cmpsl
push
inc
lds
or
xchg
jmp
sti
xor
test
jecxz
adc
mov
ror
dec
insb
out
cld
fsubrs
orl
lret
shll
push
lods
lahf
data16
imull
popf
mov
out
mov
xchg
mov
andb
add
cmp
dec
aaa
jmp
cli
popa
jno
arpl
xchg
mov
mov
mov
jns
addr16
rclb
jnp
test
xchg
movsb
mov
mov
push
pop
sahf
push
pop
ds
imul
jp
and
in
jp
int3
je
imul
add
inc
jmp
loopne
outsl
or
mov
rcl
inc
cmp
pop
test
jo
mov
fidivrs
movsl
push
ljmp
jae
mov
sahf
nop
mov
xor
hlt
lock
jg
xlat
sub
push
imul
fs
inc
pop
cltd
out
push
cmpsl
sub
mov
pop
jno
push
xchg
add
arpl
bnd
xchg
sarl
add
add
jg
cmpsb
int
adc
push
cmp
test
adc
icebp
sub
jge
mov
ja
add
insl
or
test
inc
push
dec
inc
in
lcall
subl
dec
and
cmc
mov
push
cs
mov
ljmp
push
sbb
or
lods
and
adc
sub
pop
pop
mov
ljmp
xchg
mov
fsub
inc
jp
out
xlat
ljmp
scas
cmpsb
imul
sti
inc
xor
inc
cmp
test
add
xor
cmp
adc
push
mov
push
push
roll
pop
and
pop
aad
rolb
jmp
inc
js
lea
inc
cld
and
or
addl
jno
sub
mov
ficoms
mov
mov
inc
cmp
jno
xor
bound
xchg
lods
lea
sbb
cmpsl
rcrb
in
inc
andb
cmp
lds
and
and
es
leave
in
xor
ja
mov
sub
ja
add
jmp
and
lods
fwait
lcall
in
dec
hlt
mov
sti
mov
imul
xor
and
jp
ja
loope
cmp
bound
daa
aad
pop
lock
xchg
movsb
mov
shll
push
push
vpcmov
jno
mov
ret
sbb
shll
xor
adc
iret
int
mov
repz
call
xchg
fiaddl
push
in
scas
mov
mov
repnz
insl
aam
into
test
sti
sub
mov
sub
dec
repnz
mov
aaa
pop
push
inc
loop
dec
out
lock
cmpsl
push
fcompl
sbb
inc
mov
add
lods
enter
add
ljmp
imul
scas
sbb
xor
lret
dec
cs
mov
adc
xchg
push
mov
loop
xor
mov
scas
push
mov
dec
int3
mov
mov
sbb
xchg
shrl
mov
mov
cmp
fwait
and
pop
sub
addb
jo
push
or
cwtl
pop
mov
pusha
add
add
jp
mov
pop
gs
sub
stos
mov
adc
mov
sti
int
je
pushf
jno
mov
out
inc
adc
cmp
and
dec
inc
mov
rclb
popf
push
and
stc
xchg
test
jmp
arpl
cwtl
out
aam
lods
jne
sbb
xchg
dec
outsl
push
xor
push
ret
pop
nop
out
mov
sbb
sub
adcb
and
xchg
cmpsb
lock
push
cli
mov
pop
mov
pop
add
dec
mov
pop
dec
sub
subb
xor
cmp
jb
out
jno
cld
mov
dec
rcr
mov
fisubrl
fisttpl
vpperm
mov
scas
add
push
movb
ret
repnz
push
data16
lcall
sub
jae
inc
mov
cmp
mov
sub
or
add
sub
jne
jecxz
pushf
imul
into
adc
mov
or
cmp
xchg
mov
add
lcall
lahf
sbb
or
sbbb
lods
mov
jnp
stos
mov
sbb
pop
bound
pop
add
in
loopne
rcll
sbb
cmp
lock
insl
stos
xchg
jno
mov
movsb
mov
cmpsl
jl
ret
sub
imul
mov
push
add
mov
pop
sbb
rcll
dec
sub
fmull
rcr
and
lret
cmovbe
mov
addr16
call
rep
std
inc
adc
sub
push
sub
in
mov
mov
mov
cld
lods
add
push
push
out
adc
clc
jmp
aam
sbb
cmpb
xor
inc
dec
mov
cmp
sub
mul
pop
fisttps
jmp
scas
repnz
or
xchg
sub
or
fsubrs
mov
orl
fidivrl
push
repz
sub
out
cmp
push
ret
push
es
insb
cmp
sti
int
rcrb
aam
negb
out
lcall
fisttps
inc
subb
pop
pushf
xor
imul
stos
aam
jle
push
gs
movsl
or
xchg
loopne
subl
mov
sub
test
cmp
jno
pop
sahf
div
aam
push
xchg
into
xchg
mov
test
push
jg
stos
inc
jno
cltd
je
add
pop
mov
ret
add
dec
xchg
scas
jecxz
dec
xor
inc
rorl
dec
cmp
int3
nop
jp
jge
and
jbe
cmpsb
cmp
lcall
and
push
mov
cmp
mov
dec
cs
push
inc
pushf
in
clc
scas
dec
jecxz
inc
shrb
sahf
xor
outsb
sub
jmp
in
xchg
into
mov
push
stc
jmp
bnd
sub
cli
ljmp
dec
ja
fstpt
gs
dec
call
je
loopne
scas
and
aad
sti
jle
fmul
mov
call
cld
push
inc
aad
outsl
or
test
mov
xlat
out
cli
stos
jge
pusha
jecxz
pushl
ds
mov
sbb
call
int3
into
daa
pop
movsl
xor
adc
out
fwait
jns
movl
mov
mov
or
repnz
sub
cltd
imul
adc
es
pop
xlat
std
jb
add
pop
out
dec
push
js
pop
push
mov
in
insb
lock
nop
xchg
adc
and
popa
adc
in
stos
jne
out
sub
jle
in
je
pop
and
inc
int
ljmp
push
pop
cmp
xchg
jecxz
sub
and
scas
dec
stc
push
cmp
mov
mov
int3
or
xor
push
pushf
mov
decl
adc
jae
and
mov
mov
adc
ja
mov
lret
repnz
adc
jg
and
sbb
dec
adc
ret
out
and
pop
sahf
cmp
add
xchg
int3
clc
xlat
outsl
daa
inc
push
pop
arpl
sbb
popa
inc
xchg
xor
push
cmc
cmp
fistpll
and
jmp
push
jmp
call
push
aas
cmc
mov
andl
push
mov
ficomps
dec
popf
lcall
sbb
pop
sbb
daa
or
test
test
pushf
mov
xor
out
movsb
repnz
pop
insl
adc
outsb
sub
stc
inc
stos
cmp
jae
stos
and
ljmp
or
int
and
add
mov
out
fstps
mov
stc
adc
push
mov
jo
popf
mov
orl
rcl
outsb
and
daa
std
addr16
out
imul
fs
or
jns
mov
mov
hlt
addr16
sbb
xor
mov
push
jecxz
cmp
clc
jb
push
inc
mov
add
stc
sub
out
pop
xchg
inc
lahf
jnp
aad
mov
adc
sub
out
xor
ret
ret
cmpsl
jecxz
les
jns
dec
xor
lds
cmp
and
xor
stc
push
cmp
call
adc
or
or
sbb
pop
sbb
xchg
jb
dec
push
das
rolb
jnp
fs
mov
std
adcl
push
loop
pushf
jl
mov
pop
sbb
add
jge
mov
jae
pop
lods
test
sub
and
pop
inc
sti
mov
cmc
push
insb
xor
or
out
xor
insb
cmp
loop
mov
jmp
loopne
decl
push
cmpsl
iret
insb
inc
in
push
adc
add
xlat
ljmp
in
sub
fwait
and
fcmovbe
cli
rcrb
lock
cltd
shr
lea
psllq
movaps
sarb
rol
cmp
ja
mov
mov
andl
pop
pop
push
lds
push
out
sbb
dec
push
mov
xchg
shl
mov
push
sub
test
repz
inc
cmp
add
cli
fwait
cld
ret
mov
and
out
xchg
cmp
popf
mov
ljmp
mov
int3
jmp
icebp
loopne
sub
daa
jne
mov
out
xchg
dec
js
iret
pop
jecxz,pt
int3
rolb
cmc
fucomi
roll
cs
push
add
inc
xor
add
sub
repnz
push
sbb
jle
in
mov
add
push
inc
sub
movsb
push
shrb
and
or
xchg
mov
dec
sbb
push
add
pop
jns
shlb
dec
out
inc
xor
push
xor
mov
mov
mov
push
push
jmp
push
xchg
stos
les
ret
lahf
in
insb
xchg
push
lcall
sub
pusha
stos
cltd
adc
or
push
sbb
stos
cltd
outsl
bnd
pop
xlat
stos
stc
daa
sbb
dec
xchg
daa
jle
lahf
sbb
incl
inc
negb
push
dec
jns
sbb
and
inc
pop
mov
gs
xlat
dec
test
adc
out
into
outsb
xor
repz
add
xor
or
xorl
jmp
xchg
ss
es
dec
jno
push
cmpsl
pop
fdiv
dec
jne
mov
mov
xchg
mov
ret
rcrb
out
in
pop
lds
pop
fwait
gs
or
test
mov
cmp
sbb
orb
mov
mov
xchg
sub
jmp
cmc
fiaddl
dec
mov
cmc
ffree
adc
cmpsl
jne
rorb
dec
xchg
std
sar
inc
mov
inc
movsb
insl
or
xor
stos
mov
adc
sbbb
mov
xchg
leave
ja
push
pushf
push
inc
outsb
push
loope
out
cmp
lods
sbbl
std
lahf
push
fwait
mov
mov
xlat
cmp
ss
gs
dec
fdivr
in
std
test
cmp
mov
loop
pop
lock
jp
mov
jne
add
cmc
aam
add
out
mov
aas
test
orb
adc
xchg
cmp
loop
mov
js
subl
pop
je
sbb
push
mov
dec
jbe
dec
aas
out
cmc
outsl
jns
std
add
negb
fldl
fcmove
out
fistpl
popf
xchg
adc
lcall
int3
sahf
lods
pushf
or
sub
pop
add
push
imul
faddl
cld
es
pop
ja
xor
add
imul
lods
in
fsubr
movsl
arpl
push
and
mov
push
push
sub
mov
jbe
jmp
mov
push
repnz
ret
dec
pop
mov
das
mov
xor
pop
pop
xchg
fistps
fxsave
mov
push
jle
jne
jmp
push
ds
test
and
idiv
or
das
inc
adc
test
pop
mov
jmp
pop
jae
pop
mov
push
lret
push
lds
pop
xchg
insb
lret
xor
movsl
mov
add
xor
dec
jno
shll
cltd
fdivrl
fwait
mov
push
sbb
shll
xor
inc
out
testl
cli
cli
add
lret
inc
enter
xor
insl
popa
mov
negb
jl
mov
jns
popa
and
dec
es
and
adc
jo
enter
push
mov
mov
dec
mov
pushf
sti
fldcw
dec
xlat
sbb
sbb
mov
fbld
inc
cmp
push
xor
sub
xchg
cli
imul
mov
mov
adc
push
sub
int3
adcl
and
clc
mov
decb
ds
mov
andb
dec
and
inc
add
mov
pop
sbb
test
jns
fwait
mov
cmpb
jecxz
or
popf
mov
inc
cli
xchg
cmpsb
mov
push
pop
fldcw
jl
iret
adc
je
sbb
cmpsb
sbb
xchg
lahf
ja
dec
mov
push
stos
pop
xor
mov
ss
js
clc
adc
jmp
cwtl
pop
faddp
add
adc
sbbl
lcall
dec
and
loop
xor
test
xchg
mov
ja
testb
cwtl
xor
fdivs
cmp
push
pop
xor
sbb
hlt
bound
std
jmp
adc
rcrl
push
and
fs
cmp
imul
xchg
jb
iret
dec
ret
test
add
push
push
cmpsl
add
xchg
je
in
mov
lret
adc
stc
jle
pop
pop
push
xor
xchg
mov
cmp
mov
bound
orb
repz
inc
stc
mov
jmp
fmull
mov
movsb
test
sarb
shr
push
aad
icebp
sbb
xchg
lret
shll
pop
push
outsl
pop
ret
inc
aaa
out
enter
scas
mov
pop
or
cli
inc
inc
push
push
mov
out
icebp
je
test
js
icebp
rolb
mov
mov
popf
mov
mov
test
push
jne
push
in
lahf
mov
loope
movsb
sub
push
sub
movsb
arpl
in
inc
sub
lds
cmpl
mov
sarb
imul
xor
fs
cmpb
cmp
nop
lea
jmp
push
loope
imul
sub
test
movsl
lock
jp
push
lds
cld
shrl
cmc
mov
in
dec
sbb
adcb
xor
and
fistpl
xor
mov
mov
pop
cli
movsl
mov
ds
jge
mov
sbb
cmp
outsb
or
imulb
mov
pop
shl
bound
adc
jmp
push
add
clc
cmc
push
push
je
in
and
test
mov
push
cmp
xor
pop
cwtl
fcmovnbe
xchg
jmp
add
or
cmpb
adc
inc
lcall
stc
fnstenv
mov
jbe
adc
in
jo
push
icebp
cwtl
xchg
paddsb
sub
int
shll
xlat
or
pop
xlat
aaa
pop
cmp
insb
push
push
mov
or
mov
xor
push
cwtl
cmpsl
jmp
or
and
inc
inc
out
and
adc
mov
iret
je
leave
mov
sahf
mov
test
jecxz
aas
mov
das
push
add
jge
jae
mov
ficoml
jb
imull
test
sub
dec
add
imul
sahf
mov
jnp
iret
sbb
gs
lsl
in
ds
dec
shll
xor
jbe
test
mov
sbb
xchg
das
and
test
dec
sbb
punpckhwd
xrelease
mov
cmp
lock
stos
aad
movsl
fld
frstor
mov
outsb
xchg
push
bound
cmp
ljmp
popf
jnp
cs
bound
ret
aaa
pushf
sub
xor
inc
mov
sub
call
jg
ret
cwtl
call
mov
inc
inc
xor
inc
xor
mov
push
jmp
call
push
mov
cmpsb
mov
orb
fstl
add
xor
fisubl
bound
gs
in
jb
sti
dec
push
out
out
mov
ret
push
clc
jge
daa
and
out
dec
sub
in
inc
fsubp
sub
dec
mov
scas
jae
jmp
mov
mov
movsb
sbb
inc
or
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
jmp
pop
jge
lds
hlt
inc
sbb
mov
ja
cmp
pop
jl
and
pop
xor
adc
push
in
mov
js
xor
cld
ret
les
ljmp
mov
arpl
push
pop
sub
or
fcomps
jge
lds
sbb
cltd
movsb
mov
ds
out
mov
jl
rcr
jmp
mov
sbb
mov
mov
pop
je
mov
mov
scas
pop
inc
sub
cmpsl
cmc
jle
cli
pusha
nop
jne
aad
pushw
stos
mov
out
mov
rolb
ret
fwait
push
xchg
xor
ljmp
pop
mov
mov
mov
adc
or
or
adc
lods
sahf
mov
sub
push
es
ror
pop
add
sub
mov
mov
jnp
adc
cmp
call
jo
push
inc
jne
mov
jbe
mov
popa
jae
mov
sbb
sub
xlat
mov
push
sbb
ss
out
daa
push
mov
fcomps
jb
xchg
aam
mov
jmp
jl
pop
inc
movsb
push
jb
xlat
xor
inc
iret
jno
add
mov
cmp
sub
imul
xor
dec
lock
pop
dec
xor
pop
mov
jnp
pop
and
mov
rcrl
movsl
mov
sub
sbb
xchg
push
les
dec
jmp
std
sub
mov
push
sub
mov
mov
or
subl
stos
shl
mov
scas
stc
inc
push
mov
dec
ret
jecxz
sbbb
mov
pop
outsb
jb
loop
cld
xchg
lods
dec
mov
out
inc
sub
xchg
stc
cmpsl
mov
int3
xor
xlat
dec
jb
imul
and
aam
je
mov
and
xchg
jno
push
push
xchg
adc
dec
xor
ss
pop
push
mov
popa
leave
in
scas
fmuls
or
sar
inc
movsb
cltd
or
or
push
fs
lea
repnz
aad
fwait
test
cmp
or
push
ret
lret
mul
in
paddsw
in
mov
push
sub
rcll
inc
insb
jo
push
aas
pop
call
mov
rorl
jl
loope
push
jne
add
xchg
iret
sub
jae
xlat
mov
in
cmpsb
push
xchg
pop
or
xchg
adc
js
ja
sub
inc
enter
pop
mov
mov
cltd
or
addr16
add
inc
pop
mov
and
mov
fdivs
or
mov
jne
mov
xor
dec
lods
inc
negl
mov
repz
enter
and
sbb
adc
jnp
gs
cmpsb
xchg
sbb
sub
cmp
mov
pop
pop
xor
addr16
pop
mov
enter
sbbl
xor
lret
mov
imul
jno
subb
sub
and
jecxz
in
call
inc
aad
iret
mov
jne
js
jg
nop
out
aaa
pop
ret
stos
jmp
loope
rcrl
fldcw
or
cmp
cs
pop
andb
out
clc
aam
int3
inc
aad
pop
ret
mov
xchg
outsb
fs
xor
inc
lea
lods
pop
pusha
jecxz
ss
ret
push
dec
jne
inc
mov
dec
xchg
insl
test
cmpsl
sbb
pop
jb
xchg
xchg
aaa
jecxz
stos
shrb
js
dec
xchg
xchg
je
sahf
cmc
bound
fildll
outsl
pop
or
in
rcrl
adc
mov
mov
aaa
cltd
and
sub
jns
push
sub
ret
xchg
cmp
clc
jne
xchg
or
dec
rorb
lcall
jle
cmc
fstpl
sti
jbe
sahf
int3
into
or
repz
leave
frstor
adc
cmp
xor
push
mov
scas
das
inc
mov
mov
sahf
fistl
jg
inc
pop
popa
lcall
mov
mov
insl
cmpb
cmp
or
xchg
adc
leave
lock
sub
jo
repz
pop
out
scas
sbb
add
jae
cs
push
push
mov
push
sbb
or
dec
mov
push
out
test
ficomps
cli
data16
es
insl
xchg
xchg
adc
jg
and
imul
mov
rcrl
out
imul
mov
sub
call
push
int
pop
mov
push
mov
xor
mov
jne
mov
call
call
les
sarb
repz
leave
push
out
sbb
xor
dec
mov
jge
add
cltd
dec
xchg
in
testl
inc
ds
or
pop
out
adc
mov
pop
out
adc
icebp
insl
ror
pop
pop
not
mov
notb
out
add
aaa
dec
jbe
push
mov
xchg
mov
shl
mov
lock
sub
je
dec
loope
add
outsl
or
or
sub
pushf
int
aad
push
mov
fcompl
xchg
or
sbb
mov
repnz
outsl
pop
les
push
inc
jg
lret
repnz
xor
mov
lret
jns
fsubl
popf
dec
bound
xor
in
je
scas
inc
adc
je
sbb
fisttps
push
jae
xlat
fisubl
and
fadd
cwtl
push
pop
test
repz
dec
mov
pop
cmp
dec
lods
mov
aas
pop
lods
xlat
pop
in
out
or
mov
jp
mov
scas
das
pusha
popa
inc
clc
cmp
add
push
jl
push
imul
or
mov
or
ret
ljmp
mov
ret
cli
xor
sti
test
xor
jecxz
shlb
cmpsb
aam
cwtl
jmp
pop
lea
xchg
dec
cltd
mov
ja
mov
addr16
xchg
or
testb
in
fcompl
sbb
push
nop
and
rorb
jne
jecxz
addr16
mov
or
test
repz
popa
inc
lret
sub
mov
mov
out
lea
es
jmp
jle
movsb
jmp
leave
dec
scas
stos
inc
sub
pop
mov
sahf
sbb
mov
icebp
in
stos
popa
out
mov
xlat
cmp
sub
mov
aaa
pop
out
notb
lock
add
dec
iret
in
fmull
in
in
cmp
mov
jge
adc
test
aad
movsb
sbb
lret
add
not
push
push
lock
mov
std
xchg
std
and
rcrb
dec
fistpl
clc
pop
lods
mov
mov
add
in
mov
cmp
or
bound
cmp
xor
cmpsl
xor
push
icebp
mov
and
rcrl
and
rorl
popf
jg
xchg
adc
pop
fidivs
outsl
pop
repz
push
mov
dec
dec
dec
fiadds
pop
popa
nop
test
cwtl
cmp
mov
inc
and
pop
fmull
lods
enter
add
fadds
add
and
add
loop
es
pop
js
sbb
pop
js
ja
pusha
aad
cwtl
and
rcl
jp
xchg
movsb
pop
mov
cmp
les
pop
dec
add
jnp
mov
push
mov
xor
adc
jae
xor
lds
jnp
lahf
pop
repnz
inc
icebp
mov
jo
mov
frndint
and
sbb
inc
test
bound
push
sbb
data16
ss
test
and
stos
and
or
aam
jo
movsl
fchs
pop
mov
sbb
shl
rcrl
movsb
mov
xor
push
idivb
inc
xor
sbb
mov
and
stos
inc
xchg
lea
inc
adc
inc
or
scas
ja
flds
xchg
pop
mov
jno
jp
sbb
fidivrl
xor
sbb
inc
lds
xor
push
repz
push
push
sub
enter
push
stos
mov
shlb
xchg
flds
test
add
cld
addr16
into
in
dec
out
dec
loopne
sub
mov
sub
lea
jae
inc
pop
ds
ds
outsl
stos
adc
imul
adc
decl
dec
add
push
icebp
jecxz
dec
fisubrs
xor
mov
mov
mov
lods
test
mov
push
in
lret
adc
mov
push
sub
js
sub
push
push
js,pn
fidivl
fs
test
push
jp
jle
sbb
add
out
ss
jp
push
stos
mov
lock
test
xchg
out
add
and
cmp
iret
imul
sub
dec
fs
push
mov
lret
mov
cmp
ds
dec
add
stos
and
and
push
and
loop
sti
inc
call
cli
pop
mov
add
sub
jmp
mov
sbb
sti
sub
clc
mov
jno
mov
imul
inc
dec
gs
dec
push
scas
add
fisttps
adc
adc
notb
adc
sub
insb
fmuls
sbbb
xor
sub
js
fists
fnstenv
mov
mov
lret
fxch
cmp
out
lods
mov
out
shr
loopne
cltd
and
aam
xchg
jg
pop
aas
cmp
inc
jb
xchg
jg
out
xchg
stos
jp
inc
movsl
sbb
ja
add
dec
div
cmp
call
cwtl
and
shl
ret
add
pop
or
inc
ret
fdivrl
dec
xor
pop
cmp
sbb
sbb
sub
test
jo
fucomi
shll
frstor
cmp
aas
nop
pop
int3
ja
jno
xlat
outsb
push
mov
fisttpl
sub
or
lods
insl
xchg
roll
pop
xchg
push
test
aad
repz
fdivl
mov
cmc
lret
scas
lret
ret
fidivrs
insl
loopne
popa
cld
inc
and
add
cmpsl
setge
je
dec
test
in
popa
mov
nop
roll
ds
cmp
je
dec
lds
daa
xchg
rorb
jg
pop
xchg
ret
fisubrs
test
mov
sbb
lret
xchg
js
sbb
int3
inc
mov
push
inc
repz
sahf
out
pop
and
ljmp
imulb
out
jp
lods
or
fldcw
fs
test
out
daa
sub
js
sarb
fs
mov
mov
cvtdq2ps
daa
iret
add
arpl
push
push
add
sbb
and
subb
inc
push
push
fisttps
outsl
aas
addr16
imul
addr16
sbb
popa
pop
cmp
loope
mov
rcrl
sub
icebp
shll
dec
sub
in
xchg
stos
mov
into
jge
cmp
and
dec
dec
jno
mov
rcr
jno
sahf
test
add
movsl
mov
or
repz
jne
stos
xchg
jb
jno
or
mov
ljmp
sti
xor
xchg
sbb
dec
in
jb
mov
jecxz
pop
es
enter
in
fdivl
mov
mov
addb
xchg
loope
dec
js
mov
cmp
and
ja
push
ljmp
push
sub
add
mov
aam
arpl
cmp
ds
lds
mov
xor
sub
sub
decl
sbb
mov
inc
int
or
push
loopne
push
and
sti
jecxz
cwtl
mov
fdivrp
add
inc
or
rclb
and
mov
jl
or
add
jecxz
bound
inc
mov
jbe
jp
sub
adc
mov
or
sbb
aad
test
and
adc
add
repnz
nop
test
bound
roll
aad
jae
shrb
xchg
xchg
inc
nop
mov
arpl
mov
push
insb
push
ss
test
popf
lea
xor
jecxz
xchg
mull
pop
or
ljmp
mov
mov
bnd
lods
xlat
cli
jl
je
test
push
bound
mov
fsubr
insl
dec
ss
xor
ret
push
fdivs
dec
mov
je
les
xor
cmp
or
rcrl
mov
jge
insl
data16
addr16
rorl
push
mov
adc
adc
ljmp
andnps
and
js
ret
addr16
sbbb
mov
pop
stos
xor
sub
test
sub
or
or
cld
aaa
lods
cmp
ljmp
loope
into
pop
or
sbb
cmc
push
sub
sub
inc
stos
lahf
lret
movsl
xchg
xor
gs
movsl
in
stos
add
add
mov
aad
inc
dec
sbb
insb
sbb
data16
fcmovnbe
push
and
or
inc
pushf
push
mov
and
popa
sub
lret
ja
xchg
fnstenv
push
add
and
xor
and
cmp
cltd
sbb
bound
aas
rol
das
mov
inc
adc
fs
scas
jmp
into
xor
mov
pop
adc
pop
faddl
xchg
sbb
mov
cmp
loope
test
xor
jb
pop
inc
or
je
lds
int
mulb
jl
push
scas
sbb
push
push
repz
dec
adc
pusha
popa
sbb
sbb
inc
and
out
aas
pop
mov
sub
adc
ja
mov
pop
sub
jb
rol
adc
sub
xchg
push
mov
addl
decb
jge
cmp
cmp
and
mov
add
jae
sbb
xchg
jbe
dec
daa
jp
mov
mov
xor
shl
xor
or
jmp
aam
mov
xor
push
in
mov
xlat
push
movq
fsubl
jle
es
push
aaa
cwtl
rcrb
pop
push
mov
push
arpl
jae
jb
aas
sub
dec
inc
mov
sbb
loopne
negl
hlt
push
cmpsl
mov
data16
mov
popa
or
xchg
movsb
mov
jae
mov
mul
push
add
sbb
insb
outsb
cmp
pushf
mov
push
int3
icebp
adc
dec
jle
fs
or
rclb
int
in
in
xchg
icebp
sbb
push
shl
lahf
inc
inc
nop
hlt
push
or
imul
jmp
mov
jge
push
lods
data16
inc
cmp
out
aad
test
and
fisttpl
push
xor
pop
cwtl
movsl
dec
insb
out
rorl
out
jno
push
sub
dec
das
adc
push
fistpl
int
or
jmp
in
testb
or
cs
nop
into
jge
mov
cmpsb
fistl
int3
xchg
pop
aam
rclb
dec
push
push
xchg
inc
ja
scas
cmc
lret
sti
int
jno
lret
test
mov
push
stos
mov
mov
fwait
mov
or
lods
mov
add
imul
push
adc
cmp
jg
sbb
scas
xor
mov
push
sarl
mov
ds
mov
cmp
xchg
mov
push
lahf
jae
mov
and
addr16
mov
ljmp
dec
cmc
test
rcl
and
push
aas
mov
mov
dec
iret
sti
lcall
adc
test
mov
cmp
xlat
aaa
mov
iret
lods
adc
out
cmp
inc
ror
ljmp
cld
je
test
xchg
mov
xchg
pop
or
add
and
arpl
inc
sub
xchg
icebp
or
xchg
rorl
xchg
mov
pop
sub
or
pop
jb
inc
lods
xor
imulb
lcall
int3
imul
clc
adc
subl
fadd
push
dec
icebp
xor
pop
jl
ss
push
fcmovnu
jno
add
inc
insl
xchg
mov
testb
cwtl
jle
loope
xchg
js
cmp
scas
sbb
xor
mov
push
lret
mov
adc
test
dec
out
mov
xchg
pusha
add
stos
sahf
adc
cmpsl
jmp
rcrb
jl
adc
call
and
les
shr
lahf
shr
cld
add
es
fisubl
sbb
xor
iret
xor
xchg
add
mov
xchg
add
cmp
cmp
popf
cld
in
sarb
xor
arpl
sti
dec
mov
clc
arpl
fneni(8087
add
cld
inc
dec
mov
add
lea
mov
test
test
mov
and
test
lock
les
addr16
aaa
jg
cltd
pop
push
pop
in
mov
mov
mov
out
lods
pop
jne
or
mov
out
sub
xchg
jmp
sahf
movsb
gs
adc
cmp
scas
iret
mov
xchg
and
scas
adc
in
aam
cmpsl
jbe
cmp
xchg
sbb
loopne
or
sarb
sbb
mov
pop
jae
call
cmp
dec
test
cmp
cmp
fnsave
cmp
add
lock
adc
inc
into
lods
arpl
fcom
push
jo
rep
fdivs
inc
test
insb
std
subl
xchg
insb
ljmp
dec
ds
lret
dec
aas
je
sbb
jecxz
addl
cmp
add
cmp
cli
jmp
mov
add
adc
jb
push
scas
add
cmp
scas
daa
stos
dec
lahf
stos
xchg
aad
fcomps
adc
or
sbb
sbb
enter
or
aas
xchg
pushf
inc
sub
sahf
popf
cmp
mov
leave
popl
inc
jge
sarl
test
je
mov
insl
lock
sub
dec
add
add
sbb
vmovlps
mov
adc
sbbb
sahf
lock
xchg
popf
mov
jno
ds
xchg
or
adc
loopne
mov
mov
clc
lock
and
and
ret
push
pop
add
sub
adc
lea
in
enter
ret
daa
je
cmp
loope
pop
mov
outsl
sbb
sbb
or
push
test
aam
mov
ret
rolb
mov
add
jnp
cmp
sub
decl
or
mov
sub
mul
loopne
lret
push
call
and
sbb
push
xchg
dec
xchg
rcl
xchg
es
sbb
mov
mov
sti
cmp
inc
mov
cmpb
adc
test
push
fisubrl
nop
mov
into
ds
aaa
loop
adc
dec
sbbl
jae
outsl
pop
cmp
cmc
je
pop
adc
aas
sub
pop
xor
inc
rcrb
in
out
data16
call
stos
out
lret
test
fsubrs
xchg
mov
cmp
insb
push
dec
jo
mov
rclb
repz
sarl
push
in
dec
adcl
xor
cmpsl
xchg
scas
loop
aam
sub
and
sub
xor
outsl
push
sbb
adc
mov
mov
xor
jno
mov
push
mov
and
jp
mov
clc
xor
sti
fwait
dec
adc
pop
lcall
mov
enter
add
mov
aas
insl
test
notl
sbb
push
mov
pop
ret
int
or
mov
jo
xor
cld
cmp
fcomps
lods
hlt
add
jl
and
hlt
sub
push
bound
xchg
lds
adc
add
scas
xchg
aad
dec
cmp
lret
pop
xchg
mov
inc
and
pop
mov
mov
adcb
push
cmpsb
dec
add
mov
add
sbb
mov
add
mov
add
in
and
popf
jbe
add
scas
push
sti
inc
mov
cmp
and
pop
mov
xorb
cmp
hlt
xchg
imul
shrl
fidivl
mov
dec
sub
pop
ficoml
sbb
adc
fistps
xchg
push
mov
movsb
call
cmp
push
mov
jb
movsl
mov
cmpsl
xor
xchg
je
ss
mov
pop
ror
and
xchg
dec
out
pop
jg
clc
out
or
lcall
jb
jno
pop
fcomps
pop
inc
and
push
cmpsl
cmpb
neg
xor
lcall
xchg
in
add
mov
mov
loop
mov
pop
and
ja
dec
add
add
or
pop
inc
or
and
jo
adc
xchg
mov
neg
into
je
das
hlt
pop
mov
gs
sbb
xchg
stos
cld
cmp
push
ret
call
push
sbb
push
aam
cwtl
jl
je
or
mov
xchg
xchg
cmpsl
inc
cld
pop
addr16
cmp
mov
inc
add
or
mov
fdivrs
leave
jae
and
add
cltd
cli
stos
nop
shll
mov
adc
aad
cmpsl
and
jae
jne
lcall
cmc
cmp
and
and
hlt
addr16
push
in
sub
ss
mov
stos
or
cmpsb
aaa
or
pop
inc
dec
orl
push
adc
cmp
sarl
hlt
out
das
mov
ret
dec
xlat
jns
xor
sbb
addb
popa
fnsave
inc
in
cmp
nop
pop
jl
rcrl
jbe
shlb
fcoml
shrl
jg
ljmp
int
cwtl
imul
aaa
loop
push
out
in
es
call
jbe
jge
sub
cmpl
pop
pop
xor
jnp
ret
sbb
shll
out
cmp
sbb
cmp
jmp
lea
mov
mov
and
clc
sub
shl
movsb
aad
mov
mov
mov
stc
sarl
stc
into
ljmp
sub
jnp
icebp
push
push
mov
mov
xchg
inc
and
jecxz
shrb
mov
add
iret
loope
cs
pop
ss
je
pop
sahf
fcoms
dec
arpl
push
rcrl
inc
out
and
or
cmpsb
mov
xchg
or
or
mov
mov
fisubl
cmp
imul
insb
test
add
push
xchg
push
pop
jmp
lret
iret
mov
cld
cmp
xchg
xchg
pop
cmp
mov
mov
inc
lods
int3
les
xchg
mov
rcll
inc
mov
add
xor
push
std
repz
add
mov
jnp
or
jno
jg
repnz
push
in
cli
scas
pop
mov
mov
stc
out
xor
inc
jecxz
inc
dec
sub
arpl
push
dec
daa
leave
dec
ret
scas
sub
mov
into
cltd
stos
sbb
push
jnp
add
xor
call
mov
insb
or
sub
test
mov
inc
bnd
fbstp
jo
or
jge
and
mov
cmp
xchg
mov
les
jle,pt
aaa
je
mov
insb
loop
orl
inc
pop
lahf
and
and
out
sbb
in
test
enter
mov
rclb
pop
dec
mov
ret
stos
mov
fdivrl
push
dec
fisttpll
pop
outsb
fsubrp
dec
and
call
and
rol
mov
inc
push
adc
insb
test
and
push
inc
push
sub
dec
jnp
xor
sbb
xor
pop
rclb
inc
jg
fwait
pop
mov
stc
mov
adc
test
test
ds
fwait
lea
xchg
sub
movsb
and
mov
in
lret
std
test
andb
int
insb
sub
push
jmp
sbb
inc
sarl
push
mov
adc
mov
movsb
int
int
lret
movsb
inc
sbb
fdiv
in
adc
sar
xor
fdiv
dec
nop
shl
push
add
aas
dec
jnp
std
adc
mov
jecxz
jecxz
pop
xor
pop
in
stc
ja
xor
sbb
arpl
push
mov
and
scas
mov
stos
mov
mov
sub
in
call
rcrb
jb
lds
sbb
pop
pop
aaa
dec
mov
rcrb
jl
jle
mov
imul
ds
in
cmc
and
adc
mov
mov
adcl
outsl
pop
sbb
mov
xchg
sbb
jecxz
xchg
xchg
lret
jmp
inc
xor
adc
aas
ja
les
or
cwtl
mov
sbb
pop
cmp
in
and
fdivl
fdivrp
inc
inc
jle
imul
xlat
push
test
ret
fnstenv
popf
or
sar
cmc
sbb
jmp
scas
out
jbe
jle
and
jg
fwait
cwtl
std
inc
mov
arpl
scas
aas
add
jecxz
pop
lahf
pop
cld
aad
test
pop
mov
and
rcpps
stos
cmpsl
sub
std
shrl
nop
push
sbbb
pop
dec
int
pop
dec
jno
pop
add
orb
aaa
pop
fwait
pop
dec
in
stos
cmp
xchg
js
cmp
arpl
pop
aas
push
insb
in
inc
in
xor
imul
mov
inc
icebp
movsl
int3
aad
jl
cmp
lock
mov
xchg
inc
and
and
mov
movsb
xchg
sbb
in
adc
xchg
clc
lods
movsl
and
and
mov
bound
xchg
mov
add
cs
cmp
mov
pop
fsubrs
popa
enter
or
sbb
push
pop
mov
scas
repnz
xchg
fsubrs
jecxz
outsb
dec
sub
sti
pop
dec
aaa
clc
in
sub
mov
push
push
and
aaa
add
cmp
push
mov
add
add
xor
repz
cwtl
mov
mov
aam
repz
pop
loopne
xchg
out
and
je
adc
mov
and
into
lds
xchg
sub
lret
mov
leave
lods
pop
aam
adc
lea
ljmp
shl
fldcw
xor
pop
loope
fcoms
je
imul
inc
xor
insl
repz
sbb
fistpll
sub
push
imul
mov
push
or
mov
mov
daa
test
add
cmp
pop
mov
loop
repnz
xor
or
and
dec
sub
lahf
xchg
or
mov
inc
daa
movsb
mov
dec
adc
sub
push
sub
sub
testb
xchg
xlat
mov
cs
arpl
ret
cmp
or
pop
mov
jmp
and
mov
and
sub
jns
aad
push
nop
shrl
test
xchg
lds
mov
iret
inc
gs
rorb
or
movsb
mov
sti
or
pop
jo
sub
inc
sbb
or
inc
inc
pop
inc
and
or
mov
jge
incl
jmp
rcll
mov
mov
xchg
movsb
andb
adc
or
andl
inc
outsb
jg
push
sub
pop
xchg
dec
cmpsb
fwait
repz
mov
ret
mov
and
pop
add
std
sti
sbb
sbb
mov
out
adc
xchg
arpl
fdivl
or
in
and
jb
movsl
in
sbb
cwtl
insb
js
ret
push
dec
fisubl
mov
cld
imul
mov
mov
jle
inc
cmp
jmp
pop
addb
xorl
lock
dec
fnstenv
xor
daa
lods
mov
lret
aas
dec
add
idiv
loopne
mov
push
addr16
test
or
cmp
std
sahf
mov
call
call
xor
clc
sub
mov
sub
inc
mov
popa
or
sbb
mov
leave
cmp
adc
aam
test
xchg
mov
ljmp
popf
in
cmc
jl
add
dec
out
mov
xor
push
jae
hlt
imul
in
jb
imul
ljmp
shrl
adc
icebp
jnp
or
mov
dec
adc
dec
movsl
ss
mov
pop
add
stos
cmp
lock
push
xor
iret
or
loop
dec
xor
pop
mov
push
and
mulb
sub
addr16
pop
add
call
fsts
mov
adc
test
mov
mov
shrb
es
xor
xchg
sbb
pop
mov
lea
in
int3
push
push
add
mov
cmp
aad
cli
insl
inc
dec
xchg
lds
dec
fldt
data16
test
jb
fwait
xchg
stc
sbb
pop
imulb
test
push
xchg
in
faddl
sub
dec
loop
push
or
dec
ret
shll
das
xor
adc
xlat
cld
les
mov
or
inc
inc
scas
rolb
stos
das
push
sub
insb
dec
adc
and
pop
inc
jno
out
push
cli
jp
add
notb
or
mov
mov
xor
push
xchg
in
xor
pop
scas
rol
popf
jo
dec
sub
test
xlat
pop
cmp
aam
rcll
pop
pop
rcrl
popf
lock
cmc
or
repz
xchg
and
scas
cld
scas
daa
push
jb
out
sbb
xchg
mov
hlt
push
clc
ret
or
scas
loopne
nop
pop
dec
or
cmp
or
jl
push
out
shll
mov
in
dec
gs
call
push
inc
stos
jo,pt
mov
pcmpgtd
orl
push
push
call
mov
mov
insb
sub
push
push
and
or
outsb
add
movsl
sub
mov
scas
ret
adcl
jmp
mov
and
jecxz
mov
mov
cmp
adc
test
repnz
movsl
pop
xchg
stos
xchg
fistps
xor
out
cltd
jp
scas
rorb
sarb
mov
mov
jmp
mov
xchg
fs
testl
cmp
cmp
lret
pop
fimull
or
or
push
pop
icebp
or
out
adc
push
pop
mov
sti
addr16
js
gs
aam
pop
aaa
cld
xchg
inc
test
mov
xor
pop
pop
shlb
out
ret
lds
cli
aam
mov
and
in
or
lret
mov
jecxz
fs
sub
mov
shll
out
cmpsb
cmp
mov
adc
mov
lret
sub
outsl
pop
mov
mov
fwait
jg
cwtl
lods
xor
icebp
and
movsl
testl
xor
jmp
xchg
aaa
fists
xor
jno
in
xor
cmp
or
sbb
jl
dec
pop
push
imul
add
jl
std
enter
push
in
icebp
into
xchg
cmp
or
stos
scas
clc
dec
push
push
aam
jl
cmp
mov
lods
subl
push
fisubrl
fwait
call
ret
fstl
shrb
arpl
out
or
scas
ret
or
pushf
pusha
mov
ficoms
popf
push
lock
iret
loope
movsl
scas
pop
jo
ret
ror
xchg
adc
ljmp
jne
into
daa
cmpsb
mov
cmc
les
loopne
add
clc
sub
out
test
inc
add
dec
test
jmp
dec
xchg
pop
jmp
aas
mov
imul
add
adc
lods
inc
mov
scas
and
mov
fcoml
sub
inc
cwtl
lods
push
and
xchg
pop
and
inc
or
jae
and
sarl
mov
add
cmp
std
sti
mov
stos
pop
dec
aaa
mov
xor
push
or
scas
dec
fsubs
das
fists
lock
shlb
jmp
rcl
or
xor
cmpsb
cmp
arpl
xchg
push
inc
int3
cmpl
push
or
push
cmc
popa
aam
gs
or
sub
xor
adc
push
add
and
fmull
xor
push
in
dec
dec
cmp
jo
js
mov
in
cmp
and
or
loopne
add
fwait
mov
and
insl
scas
push
dec
mov
dec
sbb
ret
push
cbtw
out
fcmovnbe
lcall
add
aad
and
sbb
add
dec
lret
aad
or
int3
dec
movsl
and
in
cs
aas
xor
hlt
xchg
cmpsb
fcomi
adc
mov
inc
cli
and
jbe
inc
inc
clc
negl
push
aas
dec
mov
add
xchg
ja
xlat
pusha
shlb
test
test
std
bsf
sub
adc
pop
sub
lock
cli
pop
inc
cwtl
in
cmp
jg
imul
in
push
pop
inc
fimull
jecxz
jecxz
sbb
dec
mov
sbb
and
ret
push
loop
loopne
and
xchg
push
sarb
pusha
pushf
adc
popf
mov
and
or
jo
stos
xchg
test
add
jg
mov
inc
fsubrl
repz
iret
lds
stc
jns
es
cmp
js
mov
stos
gs
push
rcl
adc
pop
mov
sbb
xchg
add
jns
pop
dec
cld
xchg
movsl
or
xchg
dec
fstps
cmp
insb
cmpsl
aaa
mov
sbb
stos
push
ss
mov
mov
and
aad
xchg
enter
lods
pop
jne
pop
iret
mov
lock
mov
xchg
push
lret
and
popf
push
jno
xor
xchg
jl
xchg
mov
fists
stc
ds
lea
sbb
dec
bnd
orb
stos
add
xor
inc
sbb
or
inc
int
add
outsb
test
push
mov
pop
pop
rolb
add
mov
in
cmp
cli
loop
pop
and
jae
sbb
outsb
adc
std
or
lods
daa
xchg
xor
mov
mov
shrd
shr
mov
mov
xor
shl
jmp
xlat
mov
iret
or
push
mov
cs
out
jg
adc
xchg
add
into
popa
sbbb
shlb
lock
fs
nop
xor
jg
mov
mov
jbe
adc
mov
add
dec
popf
pop
ja
and
test
fldl
mov
or
mov
xchg
pop
cmp
jg
stos
xchg
adc
dec
jne
push
shlb
adc
pop
adc
dec
dec
xor
inc
iret
and
xor
dec
add
dec
jl
push
nop
fadd
inc
repnz
lret
sbb
cmp
inc
movsb
pop
stos
push
inc
mov
lret
or
cltd
sub
jl
enter
push
jl
insb
dec
testb
loope
lret
xor
pop
push
nop
push
jmp
mov
xor
and
add
mov
jns
pop
xchg
hlt
or
cmp
loope
mov
xor
or
sahf
push
dec
jp
icebp
push
mov
movsl
testb
mov
leave
pop
jo
sti
mov
fnstenv
inc
push
nop
jg
sbb
popa
pop
cld
inc
jg
adc
push
imul
movsb
in
inc
jmp
or
mov
out
ret
cmp
xor
es
aam
sti
imul
pop
loop
push
pop
sarl
mov
test
in
and
dec
push
outsb
xor
xchg
mov
in
mov
or
or
std
mov
loopne
mov
int3
cmpsb
dec
cmc
and
mov
dec
lret
cs
pop
cmp
mov
imul
sub
outsb
gs
ret
jnp
iret
inc
cltd
sbb
jb
pop
jge
aaa
mov
hlt
outsb
or
or
out
mov
movsb
sahf
cmc
sub
subps
or
das
cmp
and
inc
jno
fidivrl
xchg
test
and
lahf
cmc
mov
push
ret
adc
jb
adcl
adc
fstps
and
in
xchg
shlb
inc
jle
jmp
inc
insl
or
bound
mov
std
aam
ja
mov
jle
repz
inc
adcl
js
cwtl
fisttpll
ss
push
mov
lods
push
mov
xchg
dec
inc
jle
sbb
lock
and
inc
pop
les
jns
out
adc
xchg
mov
ljmp
add
fimuls
stc
sbb
mov
movsl
fsts
push
aad
jge
lahf
jns
pop
lahf
adc
js
push
pop
pop
lock
or
dec
cwtl
ds
jmp
ss
or
ljmp
push
push
sbb
add
sbb
dec
jmp
call
jbe
jg
test
add
pop
sahf
shrl
movsb
fxch
or
or
xor
arpl
mov
js
pop
fidivrl
adcl
js
stos
xor
jl
mov
jmp
ret
fisttpll
cld
repnz
aam
jp
sub
jae
mov
stos
push
ss
push
sbb
imul
sti
sub
imul
inc
mov
xor
inc
clc
aaa
xchg
xor
ja
pop
shll
or
test
fimull
movsb
in
pop
test
roll
sahf
cmpsl
mov
mov
or
lock
pop
sarl
notl
jp
xor
cmp
xchg
ror
sahf
inc
cmp
push
stos
scas
lcall
nop
gs
mov
fsub
test
inc
mov
mov
inc
pop
icebp
cwtl
fcomps
mov
sub
push
jl
mov
push
daa
hlt
lock
fwait
push
sbb
gs
mov
pop
dec
imul
or
insl
add
and
ljmp
cli
test
fsub
stos
xor
outsl
popa
mov
dec
decl
push
mov
in
xchg
push
movsl
clc
aas
sub
addb
sub
sub
add
clc
push
adc
and
cmp
in
aam
loopne
sub
xor
testl
mov
dec
jmp
rclb
inc
inc
cmp
xchg
and
xor
xorb
sbb
fldt
and
or
pop
mov
cmp
cwtl
pusha
ja
cmp
lods
or
cmpsb
sahf
pop
imul
orb
xor
mov
add
jmp
ficomps
fwait
mov
enter
outsl
push
test
mov
pop
dec
out
jmp
and
adc
stos
pop
mov
adc
mov
dec
pushw
pop
xchg
dec
dec
ljmp
insl
sub
notb
lret
dec
repnz
sarb
dec
aad
add
add
jecxz
pop
push
fs
mov
fsubrs
int3
std
xchg
and
loope
push
icebp
jae
std
push
aas
popa
clc
imul
inc
call
sbb
mov
add
jbe
out
lret
add
push
mov
adc
imul
rorl
fwait
ss
and
sub
cmp
jp,pn
xchg
pop
jo
sti
jp
push
les
push
adc
out
dec
sub
push
or
adc
sbb
push
pop
mov
into
jb
dec
push
lahf
inc
ljmp
leave
je
sbb
popa
mov
cli
push
push
repnz
mov
outsb
add
cmc
xchg
jg
dec
jle
lea
stos
call
addl
lret
add
cwtl
rcrl
xlat
lods
in
pop
mov
into
scas
mov
push
cmp
mov
dec
enter
stos
mov
dec
adc
add
scas
xchg
pop
loope
and
mov
push
out
inc
inc
sbb
clc
xchg
mov
and
cltd
dec
shlb
adc
xor
sub
sbb
into
ss
in
pusha
sbb
mov
cmpsb
aam
daa
cmc
jp
and
popl
lods
pushf
and
mov
gs
outsb
rcr
add
call
out
roll
test
leave
xchg
add
ljmp
sbb
data16
push
add
cmp
cwtl
pop
test
or
xchg
shlb
mov
mov
arpl
mov
dec
mov
fs
jl
cmp
jnp
into
mov
inc
fcomi
push
and
rcr
xlat
test
mov
bound
addr16
jne
or
cwtl
and
shl
push
jnp
test
jg
addb
add
jecxz
out
cs
aas
push
loop
add
cmpsl
fnstsw
sub
into
dec
xchg
fwait
ret
pop
mov
cmc
xchg
dec
cmc
dec
xchg
inc
xchg
jo
xor
pmaxsw
cmove
or
cltd
dec
xor
arpl
out
fildll
cld
divl
sub
mov
push
adc
fcmovnbe
fwait
sbb
or
push
cltd
rolb
sbb
fnstenv
movsb
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
jmp
mov
outsb
arpl
xchg
and
xchg
inc
mov
adc
xchg
add
sub
xchg
lahf
and
push
mov
fs
cli
in
xor
stc
dec
pop
cmp
xchg
int
cld
push
dec
cmp
pop
lret
shll
test
scas
fld
stos
aaa
push
mov
cld
dec
sbb
add
adc
in
xchg
mov
std
fistpl
mov
inc
mov
cltd
movsl
sbb
add
mov
sbb
imul
fucom
pop
icebp
jge
jo
movb
xchg
xor
aaa
popa
loope
orb
adc
add
stos
lahf
call
or
dec
scas
cmp
push
pop
and
pop
std
ljmp
imulb
pop
testb
cmp
mov
mov
js
pop
sbb
mov
and
pop
add
and
mov
adc
icebp
shl
dec
dec
sbb
int
mov
xor
push
jle
enter
mov
xchg
popa
cwtl
icebp
mov
ret
loopne
fstps
jb
repz
push
test
pop
in
repnz
xor
fidivrs
lock
xor
jnp
andb
insb
xlat
or
call
fld
pop
inc
mov
sbb
or
mov
fwait
pop
cmp
stc
dec
adc
jecxz
daa
dec
ficomps
add
xor
clc
push
adc
or
fwait
jg
sub
lea
out
jns
cmc
inc
xchg
pop
xor
mov
shl
pop
leave
sub
or
jnp
bound
inc
or
cmpb
sbb
loopne
add
xchg
xchg
pop
xor
push
pop
ror
mov
cltd
xor
pop
mulb
adc
fmuls
fistpl
or
xlat
ss
popa
clc
iret
dec
xchg
test
mov
mov
fcom
inc
into
xor
xchg
gs
xor
xchg
sbb
push
popf
sbb
mov
cmpsb
enter
pop
add
jecxz
push
bound
repnz
rcl
movsl
jmp
mov
lods
mov
dec
push
jno
shll
in
inc
sub
jmp
pop
cmp
pop
cwtl
enter
cmp
adc
add
cmp
insb
adc
xor
out
je
pushf
push
mov
ficoml
pop
je
dec
push
outsb
es
pop
ja
ljmp
xchg
jmp
scas
ja
xchg
adc
lods
and
pusha
add
pusha
and
mov
push
mov
dec
inc
pextrw
sub
sub
pop
xorl
jp
inc
outsl
das
fldl
inc
insl
mov
es
mov
jg
lods
inc
lahf
xchg
loopw
xor
stos
jge
insb
adc
and
push
sbb
pop
sub
fs
fiaddl
pop
lds
mov
lcall
aam
ja
ficomps
xchg
inc
testb
jnp
je
rcrl
add
and
scas
and
out
inc
dec
lahf
xchg
stos
xor
pop
rcrb
shrl
pop
push
out
sar
sti
out
jno
add
mov
loopne
test
xchg
data16
or
sti
pop
js
iret
pop
xor
lcall
push
mov
and
aaa
or
dec
movsb
xchg
mov
movsl
insb
les
ja
mov
add
lods
pop
cli
enter
lcall
cmc
jg
outsb
mov
ss
adc
cli
fistps
std
jns
pushf
insb
jmp
fs
fnsave
mov
stos
pop
dec
adc
fstpt
mov
inc
sbb
popa
mov
and
or
ds
lcall
pxor
rorl
jmp
push
mov
mov
sub
adc
outsl
mov
insl
dec
stos
stos
dec
or
adc
pop
sbb
leave
add
andb
ljmp
jecxz
xor
lods
loopne
jl
pop
cmp
cmp
mov
subl
push
repnz
in
cmpsl
mov
pop
divl
loope
mov
push
xor
cmp
mov
mov
jl
paddusb
cmp
loop
xchg
dec
bound
and
pop
fstps
adc
add
or
fstl
mov
xor
insl
cmc
mov
out
push
icebp
push
xor
leave
mov
addl
imul
pop
sbb
cmp
addl
or
pop
pop
cmpsl
je
stos
and
dec
dec
adc
xor
enter
outsb
mov
bound
bnd
cltd
push
push
xchg
inc
xchg
xchg
sahf
cmc
mov
cmp
test
hlt
cmp
dec
call
and
lcall
push
lock
sarl
cmp
sub
adc
xchg
xchg
in
add
nop
aam
cmp
cmpsl
insl
fwait
lock
jl
out
rorb
test
add
lods
daa
mov
sbb
push
sub
add
pusha
in
cmpl
mov
add
inc
push
cmp
enter
fcmovu
dec
mov
leave
adcb
ficomps
fsubrl
jbe
aam
mov
mov
cmc
sbb
adcb
sub
push
das
cmc
cmp
sub
lcall
inc
subl
dec
rclb
mov
push
cld
js
jns
dec
lock
jne
adc
imul
xor
fidivrs
std
out
inc
fadd
fdivl
outsb
jl
jp
mov
mov
push
pop
mov
out
dec
imul
lahf
jnp
lret
cmp
cmpsb
insl
dec
sbb
adc
test
mov
mov
and
mov
sarl
frstor
mov
test
sbb
pushf
adc
push
shll
in
sub
pop
popa
mov
mov
push
fisubrl
fdivp
dec
and
outsb
nop
pop
scas
leave
insb
fcmovnb
dec
movsl
cld
cltd
dec
lcall
movsb
lock
dec
mov
dec
xchg
stos
lods
inc
fcoms
jno
mov
dec
cmp
cmpsb
inc
add
rcll
rorl
cmp
sbb
cmpsb
adc
pop
mov
mov
add
xchg
push
js
and
mov
fmull
pop
and
pusha
arpl
jae
fldl
inc
movsl
sbb
fwait
cmp
lock
cmp
adcb
nop
adc
cltd
pushf
popf
fdivs
mov
dec
fidivs
les
push
dec
daa
push
fnstcw
push
jno
pop
mov
dec
pop
inc
push
add
mov
dec
popf
pop
out
sbb
pop
jne
push
sub
adc
movl
mov
jle
lock
mov
sbb
cmp
in
call
ss
lsl
pop
ret
rcl
add
and
in
add
cs
dec
das
jo
cmp
hlt
jne
popf
mov
dec
sbb
pop
icebp
mov
jmp
cltd
sbb
mov
mov
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
jmp
fnsave
push
adc
adcb
adc
xchg
pop
popa
shll
outsb
mov
ss
xor
mov
movsl
or
xchg
jo
ljmp
xlat
outsl
popa
mov
jge
fisttpl
push
or
dec
outsl
int3
lds
mov
lret
imul
hlt
js
rolb
iret
jno
and
pop
loope
mov
ljmp
push
test
lods
lcall
jmp
popf
sti
xor
imul
cmp
int3
data16
or
push
cmp
icebp
mov
xchg
jne
or
icebp
lods
ja
mov
pop
cmp
mov
jmp
push
test
vmread
add
inc
arpl
or
adc
shlb
arpl
pop
cmp
pop
pop
fdivs
out
inc
mov
cmp
add
scas
and
jo
mov
movsb
push
mov
push
shlb
xor
mov
push
bnd
pop
sub
cmp
xor
jno
insb
jbe
inc
in
sarb
rol
cmc
or
das
dec
popa
fmul
or
mov
or
and
mov
inc
test
mov
movsl
cmp
sbb
adc
push
dec
aas
data16
outsb
cmp
sub
lahf
sub
sub
out
mov
ds
cmpsb
cmp
addl
mov
pop
push
test
inc
out
xor
inc
lods
cmp
cs
xor
xchg
jne
xchg
add
mov
sahf
fldt
mov
mov
lods
pcmpgtw
mov
aam
xchg
mov
ret
aam
lcall
jno
or
lahf
adc
sbb
inc
popf
inc
mov
cs
out
and
popa
mov
and
mov
call
and
inc
aam
stos
mov
add
out
pop
or
stos
jb
int3
pop
xchg
pusha
cwtl
inc
inc
and
push
icebp
mov
xchg
test
mov
rorb
loop
jle
pop
ficoms
jnp
inc
mov
out
mov
xchg
std
push
ljmp
mov
dec
xor
shll
out
call
add
push
adc
cli
cmp
push
mov
aas
mov
sbb
mov
mov
movsl
int
inc
sub
mov
lods
movsb
loopne
insb
xor
fbstp
cmp
pop
mov
aam
pavgw
in
jns
int
bound
xor
movsb
scas
lods
mov
adc
gs
push
xor
ret
pop
and
mov
inc
inc
or
sub
rcr
pop
xor
das
mov
fs
mov
inc
mov
movsb
imul
test
or
or
dec
lock
nop
mov
insb
lret
or
jae
xlat
inc
bnd
sbb
ljmp
sti
add
sbb
inc
imul
ljmp
mov
add
sbb
push
add
and
fistpll
popw
dec
mov
scas
inc
inc
fsubr
cmp
lret
stos
nop
jb
xchg
dec
pusha
add
xor
fdivr
adc
push
pop
pushf
stos
mov
cltd
call
xchg
in
inc
leave
sub
mul
fidivs
pop
xor
xchg
scas
daa
inc
idivb
sbb
jne
lret
movaps
in
or
or
bound
insb
pop
icebp
adc
mov
dec
inc
enter
fisubs
sbb
and
sub
fcmovne
and
cltd
ss
cmpb
aaa
mov
sub
orb
out
add
hlt
orb
lret
stc
pusha
add
and
pop
or
popa
popa
aad
push
mov
imul
push
negb
cld
mov
xchg
dec
mov
add
popa
or
mov
inc
xlat
adc
std
bnd
sub
mov
or
sti
insl
mov
jae
sahf
loope
stos
adc
adc
inc
icebp
xchg
lea
cmc
mov
outsl
ret
or
fdivs
daa
xor
dec
mov
mov
scas
xor
movsl
shlb
mov
cmp
add
scas
rcrb
dec
insl
jp
sub
gs
cli
xchg
pop
ss
and
fcmovnbe
sar
stos
cmp
cmpsl
mov
ret
mov
pop
ljmp
cmp
mov
cmp
in
cwtl
ljmp
push
mov
lret
shl
cmp
icebp
arpl
test
lret
sbb
mov
shr
or
push
pushf
mov
cli
inc
loopne
ljmp
jns
sub
jle
lahf
xchg
adc
sub
mov
outsl
xchg
push
mov
loopne
sub
shlb
loopne
sti
enter
and
mov
mov
enter
adc
mov
scas
mov
test
xor
mov
movsl
adc
mov
aad
jecxz
push
shll
icebp
adc
jns
push
popf
aad
inc
icebp
mov
mov
pop
aad
mov
cmp
push
jne
sbb
insl
sbb
aam
push
sahf
loopne
mov
add
or
pusha
push
mov
ss
sbb
repnz
jo
inc
outsl
xor
sbb
data16
inc
jo
mov
sbb
insb
mov
push
mov
out
popf
dec
in
mov
pushf
push
xor
and
icebp
sub
imul
sbb
mov
push
cmp
out
adc
cs
daa
sub
push
add
mov
and
in
xlat
mov
xchg
mov
and
or
test
sub
lret
pop
add
inc
mov
enter
leave
dec
pop
hlt
out
cli
push
cs
sti
sti
jo
addr16
aas
out
int
jbe
jl
mov
cld
lods
test
sub
cmc
aad
inc
loopne
nop
daa
stos
pop
jae
pushf
stos
sub
jnp
fwait
xchg
cmp
add
pop
sahf
xchg
pop
xchg
adc
jb
lods
push
aam
cmpsl
out
push
mov
jo
cmp
pop
mov
jmp
inc
pop
mov
and
lods
cwtl
sub
out
mov
addr16
scas
shrl
adc
pop
push
pop
push
das
aaa
mov
loop
xor
jb
int3
outsb
pushf
or
inc
inc
push
je
mov
xchg
xchg
add
jg
cmp
push
jge
mov
dec
push
cltd
call
addb
call
pop
lret
subl
in
inc
dec
icebp
mull
cmp
and
mov
mov
adc
std
lds
sub
and
leave
mov
jmp
sbb
xchg
clc
das
ds
addl
cmpsb
pop
cmp
mov
cmpsl
push
fcmovu
dec
fnstcw
jmp
xchg
jge
jo
and
cli
movsl
testb
cmp
adc
lahf
imul
mov
mov
dec
stos
out
jbe
out
jle
jecxz
push
addb
in
jmp
lar
in
add
mov
push
inc
stc
or
or
shl
shl
mov
mov
jmp
test
fcoms
push
lcall
xchg
and
mov
push
xchg
fists
inc
mov
rol
xor
pop
fucomp
inc
pop
jl
cmp
mov
into
adc
int
les
xchg
mov
mov
dec
inc
lcall
mov
push
mov
movsb
aad
xchg
push
les
push
pop
pop
cmp
jns
aad
push
push
icebp
add
jg
xchg
in
lcall
testl
fadds
xor
fdivr
sbb
adc
and
xchg
fcompl
push
dec
fwait
adc
adc
les
lahf
lds
jae
outsl
push
mov
push
jo
mov
stos
fdivl
adc
js
aaa
sbb
scas
mov
test
push
sbb
or
fwait
aad
and
out
inc
je
rcrb
push
mov
jmp
mov
mov
pushf
push
dec
and
xor
imul
lea
aaa
aas
jle
jg
es
loopne
daa
mov
adc
shrl
roll
out
inc
add
add
stos
bound
adc
pop
adc
adc
push
idivb
jb
je
push
jne
pop
sbb
sbb
xchg
mov
es
out
nop
in
loope
add
push
pop
mov
out
lock
out
int
sbb
push
mov
loope
sbb
les
out
add
xor
mov
jg
inc
sbb
xor
add
loop
in
mov
xchg
mov
int
mov
mov
cmc
cmpsl
out
push
cmp
outsb
cmc
icebp
mov
shlb
lods
mov
mov
sub
push
mov
pusha
inc
jb
sbb
add
je
sbb
adcb
pusha
jp
and
shll
mov
movsb
in
iret
imul
and
cmp
sub
and
sub
xchg
popf
adc
ret
gs
inc
in
pop
mov
sahf
mov
loope
push
cmp
lea
xlat
mov
mov
or
fisttps
ja
stc
inc
xchg
mov
push
enter
mov
std
inc
pop
mov
ja
adc
outsl
test
rcrb
les
pop
addr16
lock
outsb
dec
push
jnp
jae
mov
and
and
stc
sub
push
mov
es
lahf
and
jecxz
rol
cmpsl
mov
fwait
arpl
and
insl
lahf
jbe
pop
push
cmp
xor
add
mov
mov
and
mov
sbb
sbb
es
mov
cmp
sbb
fxch
daa
movsl
jecxz
mov
push
dec
in
adc
rcl
in
sbb
jne
jge
sbb
or
int3
mov
int
dec
cltd
xor
je
test
add
arpl
adc
clc
jl
xor
push
jecxz
inc
hlt
std
add
push
in
test
je
jmp
dec
push
test
in
je
inc
repnz
add
or
adc
fcmovu
or
shlb
and
or
notl
fdivr
dec
pop
loopne
outsb
sbb
push
rol
popf
pushf
orl
outsl
xor
sbbl
mov
push
sbb
popa
lds
pop
sub
fldenv
jne
pop
dec
adc
cmc
sbb
cltd
sbb
mov
sti
int3
fcompl
push
hlt
adc
pop
jae
jo
inc
and
inc
inc
mov
sub
sbb
and
mov
rorl
adc
es
movsl
frstor
rcll
out
mov
mov
imul
jae
cld
repz
adc
iret
add
ret
mov
fstpt
out
aaa
pushf
push
mov
into
pop
xor
jnp
popf
pushf
stos
cmp
sbb
inc
fildll
cmp
lcall
ss
lret
and
popa
stos
nop
xor
mov
aam
or
inc
and
movsl
adc
inc
fidivs
dec
bound
adc
outsl
push
sub
daa
sti
sub
mov
bswap
shlb
xchg
mov
hlt
jne
cmpl
mov
lahf
inc
inc
jo
dec
lahf
dec
out
mov
mov
cli
adc
adc
dec
cmc
rorl
adc
push
mov
mov
jb
fimuls
cmp
sub
nop
outsb
mov
push
aaa
pushf
xchg
jo
fistpl
test
xchg
or
call
xorl
dec
call
cmc
adc
cwtl
push
aaa
cmp
roll
ror
mov
testb
cld
imull
jge
jmp
stos
xor
push
ret
jbe
das
repz
je
aam
repz
push
sub
jno
ret
lret
pop
xcrypt-ecb
cmpsl
dec
in
popa
inc
push
hlt
mov
outsb
xchg
inc
lods
or
fisubrs
inc
lret
mov
enter
and
data16
cwtl
test
pop
sbb
or
iret
jb
xlat
cmpl
lods
aam
rcl
jo
mov
test
aas
sub
scas
stc
mov
inc
sbb
push
pop
movsb
inc
adcl
stos
xor
in
push
push
sbb
ret
sub
test
mov
pop
push
dec
repz
jnp
jb
add
pusha
sbb
js
xor
fisubs
arpl
fmulp
sbb
daa
mov
mov
xchg
loopne
lods
inc
inc
fs
inc
fisubl
test
mov
push
js
and
and
pop
dec
pop
sarb
push
lret
out
rcrb
js
mov
pop
rol
repz
lods
sub
lcall
daa
cli
and
in
faddl
sbb
mov
jecxz
and
fcomip
test
stos
fisubrl
sub
imul
or
fwait
pop
js,pt
dec
xchg
das
sbb
fisttpl
xchg
and
es
jge
fistps
sub
fimuls
loope
xor
cld
sub
stos
imul
loop
pop
and
ss
inc
aam
pop
cs
sahf
nop
mov
test
xchg
cmp
sub
adc
inc
mov
cld
sub
sub
push
push
xlat
pop
sbb
std
cmp
push
out
pusha
xchg
test
and
xor
add
mov
in
int3
xchg
andl
fdivs
dec
out
push
hlt
shll
inc
adc
mov
imul
movsb
es
cli
xchg
call
and
and
imul
or
aad
pop
gs
aam
xor
pop
sbb
jmp
xchg
das
lods
stos
sbb
andl
vphadduwq
jmp
iret
xchg
fcomip
mov
xor
dec
loope
lcall
xchg
xchg
jns
in
mov
mov
mov
fmuls
mov
lahf
pop
jl
pop
xor
mov
mov
xor
xor
mov
mov
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
jmp
sti
icebp
lods
mov
outsb
fs
jnp
xchg
lahf
cld
adc
pop
testl
bound
pop
stos
stos
pop
xor
lcall
call
mov
push
adc
jne
stos
sub
cmpsl
or
out
cmc
icebp
mov
test
cmp
dec
cmpsl
sub
shll
sub
mov
lcall
push
or
jmp
dec
push
aas
mov
and
in
pop
and
pop
xor
cltd
or
ss
mov
add
insl
cmp
mov
ret
insb
cmp
iret
pop
xor
dec
enter
cmpsl
adc
pop
sbb
fidivl
inc
fnstsw
ja
and
mov
adc
ret
cmp
test
les
fnstcw
sub
fdivrp
and
dec
in
inc
push
inc
icebp
test
inc
mov
enter
ss
loope
jle
iret
fisubrs
adc
jg
push
aaa
push
shrb
pop
cmp
in
mov
mov
cld
repnz
loopne
int
test
xchg
cmpl
push
xor
dec
in
loop
mov
fldcw
push
inc
dec
jp
arpl
outsb
in
pushf
imul
push
sahf
das
cwtl
add
sub
in
loopne
aad
sbb
decl
fldt
or
cwtl
cmp
out
push
dec
inc
cmp
mov
add
jbe
pop
ja
inc
mov
loope
shlb
outsb
mov
mov
fstpl
inc
adc
cld
add
daa
lods
test
pop
data16
lret
cmpsb
decl
int
lods
adc
mov
pushf
sbb
out
and
xchg
pushf
adc
mull
xor
ja
push
push
inc
loop
inc
adc
push
dec
sbb
aaa
mov
mov
adc
xchg
inc
ss
mov
sbb
sub
mov
mov
int
hlt
sub
sarl
in
pop
cmpsb
mov
lret
mov
dec
scas
mov
jle
or
or
addb
adc
and
inc
push
insl
es
hlt
cmpsb
in
icebp
push
sub
rorl
xor
aas
push
push
dec
stos
out
mov
adcl
jnp
lahf
fisttpll
pop
int
jle
test
dec
pop
and
jnp
ret
xor
pop
testl
fdivl
mov
xchg
mov
xchg
xor
cmp
xor
ret
repnz
mov
sbb
cmpsb
push
incb
jno
cld
test
mov
mov
xchg
es
in
sub
push
int3
xchg
jmp
ja
rep
fs
xchg
xor
sar
test
add
mov
loope
xchg
les
movsb
je
dec
pop
mov
dec
mov
inc
jo
insb
out
call
cmp
test
pop
xor
ss
stc
jg
popa
xor
lds
addr16
pop
lahf
xchg
repz
jp
ds
popf
push
inc
icebp
mov
pop
cmp
pop
cmp
push
xchg
ljmp
mov
ss
mov
in
jle
push
mov
and
addr16
xor
fucom
ficomps
and
inc
mov
dec
fdivl
mov
push
mov
and
fcmovb
mov
movsl
push
mov
fcmovne
cmp
xchg
dec
jbe
fidivrl
stc
and
addr16
lods
imul
divb
sbb
pushf
mov
lods
sti
in
adc
scas
mov
pop
cmp
adc
dec
shlb
sbb
daa
es
inc
test
sbb
lds
lret
and
rcrb
xchg
cli
xchg
rorl
xor
inc
xchg
inc
mov
jmp
mov
les
cmp
push
insb
jmp
jb
mov
add
imul
dec
ja
cld
cmp
xor
mov
rcrb
xor
dec
insb
or
in
pop
pop
xchg
aaa
xor
into
lock
mov
iret
in
int3
ljmp
pop
es
jmp
repnz
or
fimull
cmp
btr
cmc
sub
inc
data16
fldcw
gs
sub
adc
repz
lret
pop
shlb
loop
add
xor
push
scas
or
ss
out
adc
arpl
adc
xchg
and
leave
dec
pop
adc
lods
sahf
or
adc
cld
mov
rol
testl
add
push
adc
push
add
arpl
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
cmp
movl
jae
cmp
jae
xorl
shrd
movl
shr
ret
adcl
mov
xorl
xor
sbbl
and
shr
ret
xor
xor
ret
push
mov
sub
cmpl
movl
movl
jmp
movl
notl
jle
push
pushl
call
notl
andl
andl
sbbl
adcl
movl
mov
incl
mov
adcl
movl
mov
movb
sbbl
movb
and
movb
adc
movzbl
andl
mov
sbbl
sub
addl
imul
movzbl
andl
push
and
andl
mov
addl
movb
movb
andl
movb
movb
negl
mov
mov
negl
add
adcl
imul
sbbl
mov
subl
or
mov
sbbl
and
mov
movl
cmp
ja
mov
mov
mov
or
mov
mov
cmpl
not
mov
movl
jmp
movl
jb
push
push
call
dec
xor
add
mov
add
adc
xorl
xor
adc
mov
movzwl
addl
movzwl
sbbl
shr
notl
or
sub
mov
subl
movb
notl
movb
mov
orl
mov
xor
xorl
add
mov
or
mov
movzbl
and
cltd
sub
push
cmpl
not
mov
mov
jmp
mov
je
push
push
call
mov
adc
xor
neg
adcl
or
adc
pop
adcl
idiv
mov
addl
movb
addl
movb
xorl
mov
mov
negl
add
movzbl
movzbl
xorl
cltd
idiv
mov
movl
cmp
jae
movl
movl
mov
mov
push
push
push
push
call
xor
xor
or
or
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
shl
push
pop
mov
mov
mov
mov
mov
sub
movzwl
mov
movzwl
cltd
idiv
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
imul
mov
sub
mov
add
mov
cmp
jbe
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
sub
mov
and
xor
imul
mov
push
sub
push
movl
movl
movl
movl
movl
mov
xor
add
mov
or
sub
mov
mov
and
or
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
xor
or
xor
mov
imul
lea
mov
mov
imul
mov
mov
or
xor
div
mov
and
add
cmp
jb
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
lea
add
movl
movl
movl
movl
movl
movl
mov
mov
sub
add
mov
imul
mov
mov
xor
mov
xor
mov
mov
add
xor
sub
mov
mov
mov
mov
mov
sub
mov
imul
mov
or
sub
mov
xor
add
mov
xor
mov
sub
add
cmp
jbe
xor
inc
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
xor
div
mov
xor
mov
mov
div
mov
xor
div
mov
sub
mov
and
imul
and
xor
cmp
je
push
movl
movl
movl
movl
movl
mov
mov
imul
xor
add
mov
and
sub
mov
mov
add
xor
mov
mov
and
sub
mov
mov
mov
mov
mov
xor
or
imul
or
mov
imul
xor
mov
div
add
mov
and
imul
and
xor
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
movl
movl
movl
mov
mov
add
xor
mov
lea
mov
add
mov
movl
movl
mov
mov
add
xor
div
mov
xor
push
sub
imul
xor
lea
mov
movl
movl
movl
mov
mov
shr
sub
mov
imul
div
xor
or
xor
mov
movl
movl
movl
mov
mov
or
sub
or
mov
lea
mov
movl
movl
mov
mov
add
imul
xor
and
mov
movl
movl
mov
mov
and
sub
add
mov
movl
movl
mov
add
pop
div
mov
sub
add
imul
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
add
mov
adc
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
sub
mov
imul
mov
sub
imul
xor
add
xor
push
mov
add
imul
mov
div
mov
lea
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
sub
and
xor
mov
mov
lea
push
mov
push
pop
xor
div
mov
sub
add
and
lea
call
mov
mov
imul
mov
sub
add
mov
xor
sub
cmp
jne
mov
mov
sub
mov
sub
add
xor
xor
lea
mov
push
mov
and
xor
imul
mov
div
push
mov
add
push
mov
mov
imul
and
mov
imul
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
or
add
adc
push
push
push
push
call
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
imul
mov
mov
xor
mov
mov
xor
mov
mov
and
xor
mov
sub
mov
sub
mov
imul
sub
mov
movl
movl
mov
mov
or
mov
imul
mov
movl
movl
movl
mov
mov
or
xor
div
mov
mov
sub
mov
xor
div
mov
xor
pop
mov
movl
movl
movl
mov
mov
sub
mov
div
mov
or
mov
sub
mov
mov
movl
movl
mov
mov
xor
lea
xor
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
and
and
sub
mov
sbb
mov
add
adc
or
mov
mov
mov
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
or
add
adc
xor
xor
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jne
mov
add
imul
xor
mov
div
mov
xor
push
push
xor
add
xor
mov
mov
sub
mov
and
div
mov
mov
and
sub
imul
add
xor
and
mov
add
mov
add
mov
xor
or
xor
add
mov
add
mov
mov
mov
mov
xor
xor
add
adc
push
push
call
push
push
push
push
call
mov
add
adc
xor
cmp
jne
cmp
jne
mov
mov
imul
mov
or
sub
mov
lea
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
push
push
push
call
add
adc
shld
shl
mov
mov
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
push
push
push
call
add
adc
shr
xor
or
or
xor
mov
push
xor
mov
mov
mov
push
push
push
call
mov
mov
mov
add
mov
adc
mov
and
and
add
mov
adc
add
mov
adc
push
mov
mov
mov
push
push
push
call
push
push
push
push
call
mov
mov
mov
or
mov
mov
shl
mov
or
mov
xor
xor
call
add
mov
mov
push
push
adc
push
push
xor
xor
call
push
push
push
push
call
mov
mov
mov
or
mov
or
or
or
xor
xor
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
or
xor
mov
xor
mov
push
push
push
push
call
push
push
push
push
call
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
and
and
or
mov
sub
mov
mov
sub
add
add
mov
xor
cmp
jne
mov
mov
xor
div
push
push
push
xor
mov
mov
mov
mov
mov
imul
mov
div
mov
sub
xor
shl
imul
sub
xor
mov
mov
add
mov
add
mov
mov
mov
xor
and
mov
imul
mov
sub
or
mov
pop
xor
pop
pop
cmp
je
mov
jmp
mov
mov
sub
or
imul
add
jmp
movl
movl
movl
mov
mov
add
imul
mov
or
xor
mov
div
xor
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
xor
mov
xor
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
xor
sub
mov
sub
add
mov
mov
and
xor
div
mov
mov
imul
sub
add
cmp
ja
push
movl
movl
movl
mov
mov
add
xor
div
mov
mov
imul
imul
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
imul
lea
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
mov
sub
mov
sub
add
mov
mov
and
xor
div
mov
imul
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
and
push
cmpl
not
mov
not
not
jmp
movl
movzbl
je
push
pushl
pushl
push
pushl
call
sbb
adc
adc
subl
add
push
adc
mov
cmpl
mov
mov
mov
jmp
mov
movl
ja
pushl
push
pushl
push
push
call
sbb
adc
xor
mov
mov
sub
sub
xor
add
xor
or
sub
and
addl
addl
sbb
mov
shrd
shr
cmpl
movl
mov
movl
mov
jmp
mov
mov
jae
push
push
push
push
pushl
call
addl
orl
mov
add
mov
add
mov
sub
mov
mov
mov
sub
sub
xor
movzwl
sbb
mov
neg
xor
sub
or
mov
mov
cmpl
mov
mov
jmp
movl
mov
jne
call
dec
addl
xor
sub
inc
andl
mov
mov
adc
shl
cmpl
mov
movl
movl
jmp
mov
movzbl
jle
push
push
call
mov
adc
mov
adc
xor
inc
xor
or
or
notl
add
movl
mov
cmpl
mov
mov
jmp
mov
jge
pushl
push
pushl
pushl
call
andl
or
add
xor
or
shrd
xor
orl
shr
xorl
mov
and
mov
xor
or
or
cmpl
not
mov
mov
movzwl
jmp
mov
mov
jge
push
pushl
call
movzwl
xor
movzwl
add
mov
or
mov
sub
or
addl
xor
mov
mov
and
mov
mov
mov
mov
inc
mov
xor
mov
mov
mov
mov
cmpl
mov
movl
jmp
movl
movl
jle
pushl
push
pushl
pushl
call
not
andl
adc
sub
xor
shl
orl
xor
and
shld
sub
shl
inc
mov
orl
xor
addl
xor
movl
movl
movl
movl
movl
cmp
movl
jne
movl
cmp
je
cmpl
movl
movl
not
jmp
mov
movzwl
jle
push
push
push
call
sub
adc
or
sbb
adcl
sbbl
xor
adc
mov
mov
mov
and
mov
xor
shld
sbbl
shl
xor
xor
cmp
jne
movl
cmp
movl
je
cmpl
mov
movl
jmp
mov
not
jbe
push
pushl
push
pushl
call
xor
mov
add
adc
and
adc
not
mov
subl
mov
cmpl
mov
movl
mov
jmp
movl
mov
jg
pushl
pushl
pushl
call
subl
mov
add
add
add
xor
shl
mov
xorl
xor
shr
adcl
or
mov
mov
movzwl
or
mov
mov
and
mov
mov
cmpl
movl
movl
movl
jmp
movl
ja
pushl
push
call
and
orl
subl
subl
sbbl
orl
and
cmpl
movl
movl
movl
movl
jmp
movl
je
push
call
sbbl
movl
orl
andl
adcl
sbbl
xor
subl
cmpl
movl
movl
movl
jmp
movl
not
jb
pushl
pushl
call
xorl
sbb
add
addl
subl
movl
and
push
pop
sbbl
sub
mov
add
mov
lea
mov
mov
mov
sub
and
mov
xor
or
xor
mov
xorl
xor
xorl
shr
subl
shl
or
add
mov
cmpl
movl
mov
jmp
mov
mov
jae
push
call
add
sbb
or
movl
and
movl
add
mov
mov
andl
xor
movl
shr
shl
adcl
or
push
orl
lea
adcl
push
adcl
lea
push
call
cmpl
mov
movl
jmp
movzbl
jbe
push
push
pushl
pushl
pushl
pushl
call
orl
addl
movzwl
sub
mov
movzwl
sub
mov
sub
movl
sub
mov
mov
subl
xor
subl
shr
mov
xor
shl
or
cmpl
mov
mov
mov
jmp
movl
mov
jne
call
add
sub
add
adcl
mov
or
movzwl
or
push
lea
sub
push
or
mov
mov
sbb
shrd
sbb
shr
xor
add
xor
or
sub
imul
mov
notl
mov
xor
addl
xor
or
xorl
lea
adcl
push
adcl
shl
subl
call
mov
mov
xor
shl
cmpl
mov
movl
mov
jmp
movl
jne
push
push
call
xorl
xorl
add
orl
and
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
push
call
mov
mov
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
add
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
mov
rol
mov
xor
mov
cmp
je
movl
mov
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
shld
shl
xor
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
or
mov
sub
mov
adcl
or
movl
mov
jne
sub
mov
adcl
mul
ret
push
mul
cmpl
movzbl
movl
push
pop
jmp
mov
mov
je
push
push
pushl
push
push
push
pushl
call
mov
sbb
mov
not
movzwl
adc
mov
mov
add
mov
xorl
sbb
mov
adc
mov
xorl
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
sub
and
sub
push
movl
movl
movl
movl
mov
mov
imul
mov
imul
xor
div
mov
mov
push
shr
and
xor
mov
sub
mov
mov
mov
and
imul
mov
imul
add
mov
sub
mov
mov
add
xor
pop
div
mov
push
and
sub
xor
add
mov
mov
and
imul
mov
imul
or
xor
pop
sub
mov
mov
or
mov
or
mov
add
or
mov
or
lea
cmp
jbe
pop
leave
ret
push
mov
and
sub
push
push
push
mov
pushl
call
test
jg
movl
movl
movl
push
dec
movl
mov
xor
mov
andl
push
notl
push
orl
push
call
sbbl
push
andl
push
and
and
push
subl
push
andl
call
cmpl
mov
movzwl
notl
movl
jmp
movl
jbe
push
push
pushl
call
neg
subl
dec
sbb
subl
xor
or
mov
sub
or
mov
mov
xor
or
cmpl
movl
not
jmp
mov
jg
push
push
push
push
call
sbbl
xor
movzwl
and
orl
xor
mov
xor
or
mov
movl
movl
or
movl
sbb
movl
mov
xor
or
sub
add
movl
cmpl
mov
mov
jmp
mov
movl
jg
push
push
pushl
call
dec
xor
inc
adc
movl
xor
add
xor
mov
adcl
movl
cmpl
mov
movl
jmp
mov
mov
jg
push
push
call
addl
mov
sbb
sbbl
mov
mov
sub
xor
xor
or
xor
movl
or
sub
sbb
mov
cmpl
mov
movl
notl
jmp
mov
movzbl
jg
pushl
call
xor
movzbl
sub
mov
mov
sub
add
adc
xor
mov
mov
mov
andl
or
or
mov
or
mov
sub
mov
mov
sbb
or
mov
xor
subl
xor
addl
and
adcl
and
cmp
movl
jne
cmp
jne
movl
decl
movl
xor
movl
adc
movl
xor
or
mov
sub
xor
movl
mov
and
mov
sub
adc
mov
orl
imul
subl
and
notl
imul
mov
xorl
pushl
or
imul
adc
xor
mov
movl
div
mov
xor
cmpl
movl
notl
mov
jmp
movl
je
pushl
pushl
push
pushl
push
call
sbb
adcl
or
mov
sbb
mov
add
cmpl
mov
mov
not
jmp
mov
jb
pushl
push
call
neg
mov
mov
xor
sbb
sub
sbb
cmpl
movzwl
mov
movl
jmp
movl
jl
pushl
call
sbb
or
addl
and
sub
xor
add
mov
sub
dec
mov
sbbl
sub
addl
or
xor
adcl
pushl
pushl
addl
call
addl
pushl
call
movl
cmpl
mov
movl
not
jmp
mov
mov
jge
pushl
call
and
add
adc
xor
movl
adc
movl
xorl
movl
movl
movl
mov
mov
xor
mov
mov
subl
add
movzwl
mov
adc
add
mov
add
adc
and
xorl
mov
orl
and
mov
movl
movl
subl
movl
orl
movl
dec
cmp
jne
and
movl
mov
xorl
mov
subl
movl
mov
subl
call
andl
lea
mov
cmpl
movl
movzbl
jmp
movl
jb
push
call
adc
sub
and
andl
mov
xor
add
sub
imul
xor
sub
lea
mov
sub
mov
sbb
mov
add
mov
mov
decl
xor
shl
and
shr
movl
or
mov
or
mov
mov
cmpl
movl
mov
movl
jmp
mov
movl
ja
pushl
push
push
pushl
call
and
xorl
add
sub
addl
addl
cmpl
not
mov
jmp
not
jae
push
call
adc
subl
and
xor
add
adc
and
mov
cmpl
not
mov
jmp
movl
movl
jbe
push
pushl
call
or
andl
and
sub
adc
mov
and
mov
mov
mov
shrd
shr
and
mov
not
mov
movl
xor
xor
andl
or
mov
sbb
mov
mov
orl
push
addl
pushl
subl
lea
andl
push
adcl
shl
orl
call
addl
lea
addl
push
mov
mov
sbbl
lea
orl
push
mov
orl
lea
adcl
mov
adcl
mov
mov
push
call
subl
push
andl
push
pushl
xorl
call
andl
mov
or
mov
and
mov
cmpl
mov
movl
mov
jmp
mov
jg
push
pushl
push
push
push
call
sbb
xor
or
mov
adc
xor
adc
mov
shr
not
shl
or
sub
mov
or
xor
mov
notl
lea
xor
mov
lea
movzbl
or
mov
cmpl
mov
movl
movl
mov
jmp
movl
movl
je
push
call
or
add
mov
or
mov
xor
inc
add
not
mov
mov
and
mov
cmpl
mov
mov
mov
jmp
movl
mov
jne
push
call
or
sbb
addl
add
orl
mov
mov
sub
sub
movzwl
sbb
mov
and
sub
cmpl
movzbl
mov
movl
jmp
movl
jae
pushl
call
add
add
movzbl
add
add
movl
add
lea
andl
xor
cmpl
mov
mov
movl
jmp
mov
jg
push
pushl
pushl
push
push
call
or
adc
xor
mov
adc
mov
movl
movl
movl
cmpl
movl
not
jmp
movl
not
jle
push
call
subl
not
orl
and
and
mov
or
mov
movl
mov
mov
add
mov
not
mov
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
xor
shld
shl
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
shr
or
or
mov
mov
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
xor
inc
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
movl
movl
cmpl
movl
mov
movl
jmp
movl
jbe
push
pushl
push
pushl
push
call
adcl
sbb
sub
adc
mov
xor
mov
mov
mov
sub
xor
movl
cmpl
mov
movl
movl
jmp
mov
mov
jle
push
push
pushl
pushl
call
adcl
notl
dec
add
subl
sbb
not
sub
movl
mov
subl
mov
xor
xor
mov
xor
and
adc
mov
sub
xor
or
and
cmpl
mov
mov
not
jmp
mov
jl
push
push
call
inc
xorl
and
sub
sub
add
mov
add
xor
mov
or
movl
movl
mov
sbb
mov
add
xor
sub
adcl
mov
or
imul
adc
xor
mov
or
div
subl
sub
and
mov
movl
sub
movl
movl
mov
mov
adc
movl
cmpl
movl
mov
movzbl
jmp
mov
movzbl
jg
pushl
push
push
push
call
or
xor
or
or
mov
sub
add
inc
movl
mov
sbb
mov
movl
movl
mov
xor
mov
imul
adc
add
xorl
and
adc
sub
cmpl
mov
movl
mov
mov
jmp
mov
je
pushl
push
push
call
add
adc
neg
and
not
mov
sub
or
mov
mov
cmpl
mov
movl
mov
movl
jmp
movl
jne
push
pushl
push
call
inc
or
dec
sub
adc
adc
or
add
sub
add
mov
xor
adcl
div
not
mov
sub
and
mov
add
addl
mov
cmpl
mov
mov
mov
jmp
mov
mov
jle
push
push
call
add
add
sbbl
subl
xorl
movl
movl
dec
movl
cmpl
movzbl
mov
jmp
mov
jne
pushl
pushl
pushl
push
call
sbb
orl
movzwl
adc
add
mov
mov
add
mov
xor
add
mov
andl
xor
movl
div
add
and
mov
or
cmpl
movl
mov
jmp
movl
movl
jg
push
push
push
call
mov
sbb
mov
add
mov
movzbl
sub
subl
decl
adc
cmpl
not
mov
jmp
mov
movl
jae
push
push
push
push
call
xor
sbbl
mov
sbb
mov
inc
mov
mov
sub
sbbl
cmpl
mov
movl
mov
jmp
mov
movl
jg
pushl
call
mov
adc
mov
mov
adc
mov
mov
xor
xor
or
mov
sub
sub
adcl
mov
and
movl
movl
movl
and
movl
mov
sub
mov
orl
xor
sbb
xor
push
xor
pop
orl
div
mov
andl
xor
div
mov
or
sub
xor
mov
xor
movl
inc
mov
movzwl
sbb
mov
xor
div
imul
adcl
xor
xor
sub
imul
xor
dec
mov
adc
movl
cmpl
movzwl
movl
mov
jmp
movl
mov
jg
pushl
push
pushl
pushl
pushl
pushl
push
push
pushl
push
push
call
adc
xor
mov
adc
mov
mov
xor
mov
xor
or
xor
mov
movzwl
sub
or
or
movl
movl
cmpl
mov
movl
movzwl
jmp
mov
movl
ja
pushl
call
xor
dec
adc
movzbl
sbb
xorl
mov
and
mov
xor
subl
div
mov
sub
mov
orl
imul
xor
add
mov
or
add
xor
sbb
mov
sub
movzbl
or
mov
mov
movl
cmpl
notl
mov
mov
mov
jmp
notl
mov
jg
pushl
call
notl
adc
adc
sbb
movl
mov
or
and
notl
and
or
xor
cmpl
mov
mov
movl
jmp
movzwl
mov
jg
pushl
push
pushl
call
movzbl
sbb
add
negl
sub
dec
mov
movl
movl
movl
cmpl
movl
movl
movl
mov
jmp
mov
jb
pushl
push
push
call
mov
and
mov
neg
xor
andl
and
movl
mov
xor
and
add
xor
add
or
or
cmpl
notl
movl
mov
movl
jmp
movl
jle
push
pushl
push
push
pushl
pushl
pushl
push
call
adc
mov
add
or
sub
neg
sbb
sub
mov
inc
movl
cmpl
mov
movl
mov
jmp
mov
mov
jne
push
pushl
call
decl
decl
sbbl
and
movl
movl
movl
xor
mov
shr
xorl
sub
cmpl
movl
mov
mov
mov
jmp
mov
movl
jbe
pushl
pushl
call
add
xorl
mov
sbb
and
adc
or
xor
mov
lea
sbbl
push
adcl
call
addl
mov
adc
or
cmpl
mov
mov
jmp
movl
movl
jbe
push
pushl
call
sub
mov
xor
or
sub
imul
negl
sbbl
and
mov
orl
or
xor
and
lea
adc
mov
movl
movzwl
xor
movl
movl
xor
xor
or
movl
movl
and
movl
cmpl
mov
not
movl
movl
jmp
mov
notl
jg
push
call
sbb
orl
xorl
add
xor
xorl
xor
xor
xor
mov
sub
or
movl
sbbl
movl
mov
mov
mov
sub
xor
mov
sub
and
cmpl
movzbl
movl
jmp
movl
movl
je
push
push
push
push
push
call
sub
or
notl
sub
xor
add
add
mov
sbb
sub
and
sub
or
mov
sbb
lea
mov
mov
add
mov
add
mov
mov
imul
sbbl
and
cmpl
mov
mov
mov
movzbl
jmp
notl
mov
jbe
pushl
pushl
pushl
push
pushl
pushl
call
xorl
add
movzbl
adc
not
or
imul
mov
lea
mov
addl
movl
movl
movl
movl
mov
sbb
mov
or
mov
movl
xor
andl
xor
sbbl
mov
call
cmpl
movl
movl
movzbl
movzwl
jmp
movl
movl
jb
call
sub
and
and
add
adc
subl
sub
sbbl
mov
mov
sub
mov
mov
adcl
xor
xor
mov
call
xorl
or
or
sub
mov
or
mov
andl
xor
xorl
xor
mov
call
mov
cmpl
movl
mov
movl
jmp
movl
jbe
call
or
xor
inc
or
andl
cmpl
notl
mov
jmp
mov
movl
je
push
pushl
call
mov
mov
and
sbb
not
mov
sub
sbb
or
and
mov
movl
mov
mov
xor
xorl
xor
addl
mov
mov
xor
mov
xor
or
mov
sub
mov
movl
mov
mov
movl
call
cmpl
mov
movl
mov
jmp
movl
movl
ja
push
push
call
and
addl
adcl
movzbl
xor
or
mov
adcl
or
mov
or
subl
push
push
subl
push
andl
push
orl
call
movzbl
mov
cmp
movl
jne
mov
sub
mov
mov
xorl
mov
subl
xor
xorl
xor
mov
call
adc
mov
add
mov
xor
mov
mov
incl
xor
addl
xor
xorl
mov
xorl
call
or
and
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
mov
sub
mov
xor
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
add
mov
sub
xor
push
pop
div
mov
xor
add
mov
xor
mov
xor
div
or
mov
xor
mov
sub
mov
mov
sub
mov
xor
mov
div
mov
xor
div
mov
sub
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
mov
or
mov
xor
div
mov
xor
div
mov
lea
mov
mov
sub
mov
xor
mov
div
mov
imul
add
xor
mov
add
mov
and
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
imul
imul
mov
imul
mov
sub
add
mov
and
mov
sub
imul
mov
mov
or
sub
xor
mov
div
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
movl
movl
notl
jmp
movl
mov
jle
pushl
push
push
pushl
call
negl
addl
orl
adc
sbbl
sbbl
not
push
push
not
mov
or
movl
jne
cmpl
movl
mov
mov
jmp
mov
jl
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
sbb
and
or
xor
xor
mov
sub
add
add
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
movl
cmpl
je
add
mov
mov
pop
pop
movl
pop
leave
ret
movl
cmp
movl
jae
movl
cmp
movl
jae
shld
shl
ret
xor
mov
addl
xor
and
shl
ret
xor
xor
ret
