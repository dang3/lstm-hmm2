push
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
or
mov
orl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
incl
add
movzwl
adc
mov
mov
mov
sub
movb
and
lea
sbb
mov
xor
xor
adc
mov
mov
mov
sub
mov
xor
xorl
sub
mov
adcl
movl
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
sub
push
and
movl
mov
push
mov
or
xor
andl
mov
subl
push
andl
add
jmp
mov
mov
inc
movl
cmp
movl
jb
mov
xor
add
movl
jmp
adc
mov
sbb
mov
subl
xor
xor
mov
andl
add
addl
movzwl
sbbl
mov
subl
mov
xorl
movzwl
orl
xor
sbbl
add
mov
mov
mov
movzbl
inc
mov
movl
cmp
movl
jne
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
push
pushl
call
mov
dec
mov
jmp
xorl
mov
addl
xor
orl
add
mov
sbbl
mov
xor
add
mov
movl
movl
movl
mov
mov
movl
jmp
movzbl
sbb
mov
xor
xor
or
mov
mov
xor
movl
xor
addl
sub
subl
sub
xor
or
sub
xor
mov
mov
mov
lea
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
and
mov
or
mov
sbbl
lea
inc
mov
mov
mov
subl
lea
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
xorl
lea
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
mov
mov
lea
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
or
mov
andl
mov
lea
mov
xor
mov
xor
add
jne
movl
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
orl
mov
orl
xor
addl
xor
sub
sub
xor
movl
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
jmp
cmpsl
js
movsb
mov
je
stos
iret
add
bound
pop
bound
xor
cmp
jns
jne
mov
sub
sar
push
jae
inc
mov
scas
inc
push
cmp
loop
inc
push
jg
insb
mov
mov
jbe
loop
jg
icebp
and
or
xchg
xor
fsub
jno
sbb
out
loop
add
adc
jae
movsl
or
mov
cmc
push
xor
aam
in
loop
mov
xchg
mov
jmp
and
adc
xor
sub
dec
sti
scas
xchg
xor
xchg
dec
clc
pop
dec
push
adc
jmp
sbb
fcompl
inc
loope
inc
mov
pop
or
xlat
lea
aad
dec
or
mov
xchg
mov
dec
cmc
in
or
mov
push
fwait
push
jbe
sub
fcoml
pop
das
mov
cmp
inc
add
sub
aam
jns
lea
xchg
mov
fsubp
jne
shlb
sbb
fs
insb
lock
cmp
push
mov
outsb
inc
mov
jns
loop
add
dec
or
mov
adc
mov
and
test
mov
lods
inc
or
lock
cltd
dec
jns
cld
fdivr
cltd
push
aad
ds
dec
and
pop
mov
mov
lret
mov
inc
mov
mov
jle
pop
and
and
shll
cmp
sbb
lods
mov
add
xchg
mov
pushf
push
xlat
mov
mov
push
mov
les
mov
sub
arpl
movsl
out
jae
sub
negl
outsw
imul
lea
or
dec
cmpsb
fisttps
xchg
sbb
test
fistpll
add
push
push
jnp
lret
cmp
ljmp
and
mov
das
stos
out
adc
mov
in
jb
dec
jb
or
mov
or
and
ret
cltd
loop,pt
mov
cwtl
mov
jecxz
les
das
push
fdivrl
mov
cli
cs
mov
jge
incl
fstl
cmp
mov
push
shll
mov
pop
nop
stos
jnp
adcl
das
dec
adc
js
popf
mov
xchg
clc
sub
pop
add
push
shrl
ret
pop
pushf
jbe
push
fwait
adc
cmp
cmpsl
inc
sub
jo
pop
mov
arpl
jge
xchg
test
pop
jmp
push
jbe
mov
mov
pusha
adc
jge
sub
push
adc
imul
jp
push
cld
adc
rcrb
cmpsl
jg
outsb
or
pop
hlt
das
mov
pop
lret
xor
pop
sub
out
repz
lock
dec
cmpsl
cmp
arpl
fnsave
inc
ljmp
loopne
xor
mov
add
aas
push
or
pop
dec
data16
jbe
arpl
sbb
sub
mov
xchg
mov
xchg
subb
adcb
fcompl
mov
mov
dec
add
and
lds
sub
xchg
sub
or
xchg
pop
jg,pt
jno
mov
sbb
dec
popa
push
dec
mov
cmp
adc
and
cld
and
push
mov
add
xchg
movsl
or
xor
cltd
shll
mov
jne
aam
xor
and
xchg
les
cmc
push
mov
arpl
mov
aam
andl
pop
jo
outsb
sub
dec
push
pop
sbb
aaa
ljmp
pushf
and
sbb
dec
repnz
incb
dec
loopne
dec
testl
sub
cltd
adc
or
icebp
xor
adc
lcall
fmull
insl
inc
dec
pushf
adc
ficoml
push
mov
lahf
pushf
xchg
mov
inc
push
add
sbb
or
dec
and
int
mov
dec
js
mov
jg
xchg
pop
punpckhbw
add
push
or
push
and
ss
mov
ds
outsl
mov
push
pop
fmull
pop
stos
dec
or
adc
mov
push
jnp
mov
push
jmp
mov
gs
aas
xor
in
xchg
pop
push
xor
push
sbb
gs
outsb
arpl
xchg
cmpsl
adc
add
ljmp
mov
or
test
add
mov
cld
and
cmp
out
xchg
shlb
xchg
xor
test
mull
jb
aad
and
and
es
loopne
addr16
lret
repz
in
clc
inc
mov
push
hlt
jno
leave
mov
lods
and
imul
outsb
push
test
fcomip
addr16
je
cmp
clc
test
sub
push
fcoml
mov
cmp
add
mov
add
xor
sbb
cmp
out
push
test
xchg
testl
cld
fwait
test
ret
rcll
cmp
xor
test
xchg
pop
mov
lret
je
sub
mov
mov
mov
lods
mov
inc
or
inc
push
xor
scas
fdiv
add
ficoml
mov
loop
adc
shlb
dec
inc
jg
jmp
mov
pushf
jp
inc
stc
leave
fxch
jge
out
cltd
adc
addr16
fs
mov
leave
cli
dec
lret
cmc
ljmp
loopne
and
pop
push
dec
subl
add
mov
mov
or
xchg
xchg
lds
push
mov
xchg
call
and
hlt
mov
movl
imull
divb
inc
jo
loopne
pop
mov
fisubrl
or
adc
repnz
fcomi
aas
or
fcom
nop
testl
into
mov
test
dec
ljmp
icebp
jno
sub
int3
cmp
cli
ret
xor
enter
dec
ljmp
push
jae
adc
movsb
les
insb
movsb
fwait
not
data16
mov
ja
dec
xor
and
or
clc
pop
jl
js
popa
xchg
js
push
push
insb
xor
cmp
add
pop
cli
cwtl
sarl
enter
push
mov
shll
jmp
or
pop
icebp
movsl
mov
sti
dec
xchg
pop
loopne
push
in
bound
xor
imul
fldenv
jecxz
and
insl
inc
popf
jnp
loope
pop
xor
adc
sub
fdivs
cmpsb
andb
inc
les
out
xchg
jb
sub
cmpsb
xchg
pop
sub
jmp
add
adc
leave
mov
aad
mov
jns
and
dec
mov
fisubrl
subl
das
das
and
std
out
jbe
in
lds
inc
ds
mov
aaa
or
loopne
pop
add
cli
aaa
push
repz
cmp
aad
jg
sub
pop
push
add
aad
into
inc
loope
cmp
shld
cmpsl
sbbl
jo
jns
cmpb
mov
adc
push
mov
xorb
adc
push
and
mov
push
xorl
add
popf
cmc
sbb
enter
hlt
sahf
mov
jnp
popa
std
mov
jmp
cmp
pop
dec
mov
lcall
jle
scas
mov
cmp
arpl
stc
stos
push
fisttpll
aam
sahf
fldl
dec
mov
repnz
mov
aad
inc
movsl
int
lahf
or
pop
cwtl
lods
jg
lods
aad
xlat
insl
jno
and
outsl
add
add
mov
inc
pop
dec
mov
inc
and
sub
cmp
scas
push
mov
mov
adc
mov
test
inc
int
inc
cli
fwait
mov
or
out
leave
enter
xchg
mov
in
xor
cmp
lahf
loop
insb
adc
insl
fisttpll
fiadds
pusha
shll
sbb
test
mov
jecxz
lret
inc
cs
pop
xlat
andb
les
mov
dec
jle
hlt
mov
incb
pop
adc
mov
jecxz
pop
adc
or
mov
mov
or
jae
dec
rorl
out
mov
cmp
mov
scas
or
setl
mov
mov
pop
inc
xchg
cmp
or
ret
rclb
xor
or
out
lods
mov
xchg
hlt
stc
and
mov
insl
cmp
cmp
repnz
xor
inc
fucom
dec
jnp
leave
popa
sub
dec
imulb
cli
sbb
ret
imul
in
mov
gs
ljmp
insb
and
mov
test
xchg
push
movsb
mov
add
rcll
shll
repnz
xlat
or
mov
insb
inc
aaa
inc
jno
daa
inc
shrl
mov
insl
lods
popa
aam
xchg
movsl
popf
ret
mov
push
xor
push
arpl
jge
push
rcr
scas
mov
cmp
jb
loope
push
lahf
push
push
aam
mov
lahf
add
loope
mov
or
fisubs
mov
xchg
adc
bound
fstl
movsl
add
call
ret
lods
dec
sbb
sbb
and
pop
mov
movsb
mov
mov
sbb
xlat
pop
outsb
or
movsb
inc
adc
addb
mov
fdiv
jo
xchg
sub
js
inc
push
dec
lahf
add
add
xchg
imul
repnz
xor
add
in
int3
das
add
sub
jge
mov
cmpsl
pop
clc
or
out
cwtl
jmp
into
xorps
add
jl
push
vmovsd
adc
mov
cld
cwtl
mov
pop
sbb
and
aas
mov
add
sub
ret
mov
cmpsl
in
sbb
cli
gs
add
out
inc
push
in
setae
add
mov
sbb
mov
test
insb
pop
je
sbb
adc
popa
cli
jo
popf
cmp
in
repnz
sbb
testb
es
js
test
pop
jbe
sbb
xchg
mov
aad
mov
adc
clc
jg
sbb
sub
daa
mov
mov
mov
aas
in
pop
iret
jns
stc
push
jnp
call
mov
enter
cwtl
jb
testb
push
fiaddl
popa
mov
adc
mov
cmp
ja
sti
lds
jnp
mov
jns
aaa
fsub
scas
in
stos
sub
push
insl
add
aam
ljmp
cmp
add
scas
fwait
lahf
and
movsb
aad
dec
mov
and
mov
add
and
rcl
sarb
out
sbb
mov
xor
mov
out
imul
addl
stos
mov
leave
xchg
es
call
aaa
push
xchg
nop
vpavgb
pushl
stc
adc
mov
dec
out
pop
in
lea
lahf
pop
out
ret
cmpsl
popf
xlat
jno
in
cltd
inc
mov
cmp
cmp
or
lcall
and
jnp
lcall
daa
mov
push
sahf
mov
test
mov
xor
pop
sbb
cld
out
mov
ss
or
stc
out
mov
cwtl
sub
addr16
dec
add
dec
insl
cmp
dec
push
in
std
aam
adc
dec
cmp
sbb
fists
cmpsl
jno
add
lock
push
jle
movsl
out
sub
inc
fdivrs
sub
mov
push
mov
ljmp
mov
in
mov
push
shlb
jge
and
adc
xor
cmpsl
mov
add
mov
adc
lods
fsubr
outsl
adc
enter
outsl
lock
mov
xor
xor
push
sub
sub
mov
adcl
push
aaa
mov
call
cmp
sbb
mov
pop
cmp
dec
mov
push
sub
adc
jnp
jo
gs
push
ljmp
aad
dec
cmp
xchg
push
loope
lods
or
dec
mov
pop
inc
leave
shll
jbe
cld
xor
dec
jb
shrb
lea
mov
pop
mov
pop
jmp
ja
cwtl
jnp
andb
lods
cmp
or
sbb
push
cmc
add
lock
xchg
fstp
sbb
add
cmp
jb
inc
and
add
stos
arpl
je
lods
das
mov
adc
in
fwait
fwait
popa
es
add
stos
lock
in
rclb
and
stos
cmp
ror
jmp
mov
fdivr
inc
lret
fnstsw
jns
mov
push
jae
jb
ficomps
add
add
mov
cli
cmpsl
xchg
and
les
into
mov
mov
cli
adc
clc
lcall
xlat
cmc
and
call
repnz
mov
sahf
mov
xor
or
cli
stos
push
idiv
cmp
add
fs
cmp
aam
mov
push
inc
inc
and
pushf
jecxz
fcomps
aam
nop
inc
pusha
mov
pop
vmovdqa
mov
bound
push
lret
pop
mov
mov
xor
fdivs
push
mov
jmp
int3
repz
pusha
mov
sarb
cs
cld
push
or
inc
mov
aas
pushf
xchg
pushl
sbb
dec
fwait
jmp
jae
inc
mov
fnclex
xor
clc
call
jmp
cli
cmc
pop
and
pop
adc
dec
sbb
and
push
mov
and
addr16
test
rclb
mov
fs
data16
dec
push
popa
movsl
iret
push
pop
xor
aaa
mov
divb
sar
sub
fldenv
cmp
jne
pushf
imul
hlt
outsb
inc
orl
mov
pop
add
lahf
loopne
cmp
out
in
add
ss
ret
stc
push
mov
rolb
aam
pop
xor
fbstp
adc
pop
xor
in
adc
dec
pop
or
mov
mov
push
jge
mov
sahf
xchg
sarl
or
aam
mov
cmp
pop
xchg
xchg
mov
push
mov
pop
mov
fprem1
cmp
adc
xor
insb
dec
mov
dec
dec
pop
outsl
testl
inc
mov
pop
lret
mov
sbbl
jmp
decl
sbb
rcrl
xlat
lret
jnp
sbbb
inc
loopne
cltd
dec
ds
out
mov
cmp
dec
dec
sub
adc
daa
rcr
sbb
and
fwait
aam
dec
sub
and
xchg
mov
repz
xor
fwait
gs
movsl
icebp
mov
int3
adc
xor
mov
stos
int
add
shr
mov
daa
adc
jmp
test
jns
cmp
push
mov
xor
mov
lahf
lret
out
ficoml
sbb
xchg
es
mov
pop
out
aaa
xor
stc
and
mov
les
popf
lock
mov
sbb
aaa
call
cmp
inc
xor
icebp
jl
cmp
xchg
out
and
xchg
mov
in
aaa
in
xchg
xchg
jb
dec
rolb
mov
mov
or
addr16
jecxz
jp
push
mov
fisttpl
and
sbb
fildll
add
mov
daa
ficoml
cmpsb
insl
jo
mov
cmp
int
push
mov
lahf
outsl
popaw
js
pop
push
jge
cs
test
pushf
fisubl
xor
iret
add
adc
int3
pusha
jb
imul
in
mov
loope
xchg
add
mov
xchg
in
in
cmpsl
mov
jle
stos
movzbl
sar
sbb
in
pop
mov
das
inc
inc
jmp
je
cmpl
adc
ret
insb
mov
out
pop
and
mov
cmpsb
xor
int
mov
test
xchg
push
je
dec
clc
dec
and
inc
mov
cwtl
rcll
icebp
push
ret
push
xchg
aaa
adc
jecxz
mov
es
insl
fnstcw
dec
mov
xorl
fisttps
dec
cmp
pop
xchg
mov
and
cmc
jl
test
int
popf
scas
scas
repz
xchg
mov
push
adc
xlat
inc
scas
movsb
sahf
xor
frstor
mov
popa
xchg
sbb
movsb
mov
outsl
mov
mov
push
mov
jg
sbb
lea
sbb
add
and
jnp
imul
sbb
inc
add
ds
adc
in
cltd
xor
and
lret
out
mov
enter
nop
pop
lods
xor
cmpsl
mov
jecxz
pop
pushf
pop
dec
rorb
sub
xlat
fstps
scas
int
mov
leave
and
sahf
leave
cmp
and
push
rcrb
add
mov
sub
mov
out
mov
stos
mov
lahf
movsw
pop
cli
ja
dec
mov
decl
out
in
cmpsb
mov
pop
pop
mov
mov
ljmp
in
lcall
jmp
pop
scas
popa
mov
jbe
pushf
mov
and
clc
insl
mov
leave
pop
push
test
and
xchg
mov
aam
dec
imul
push
xchg
lds
mov
sbb
aad
mov
fimull
sub
lcall
or
scas
adc
cmc
mov
das
jp
iret
call
lret
mov
adc
and
imul
cld
loop
std
imul
jmp
xchg
jne
int
jmp
cs
subps
mov
xor
cld
aad
add
fs
in
xchg
cmpsb
sbb
pop
loopne
movsb
repnz
dec
mov
pop
imul
in
leave
cmpsb
lock
and
mov
pop
inc
mov
mov
mov
mov
fdivrs
popf
jbe
gs
add
mov
flds
sbb
xchg
mov
mov
jge
cmp
or
les
lret
sbb
and
xchg
div
jle
lret
int
in
jo
xor
and
rcrl
nop
shrl
ret
ret
and
pushf
sub
dec
incl
cmp
add
sbb
xchg
inc
orl
aad
or
push
popf
sub
and
push
xchg
flds
inc
mov
add
ss
xchg
dec
cmpsl
sbb
testb
and
cwtl
outsl
cmp
sti
test
test
test
nop
ljmp
xchg
jne
push
lods
jnp
inc
dec
pop
sub
cmpb
jno
mov
in
out
sahf
add
jnp
push
stos
subl
add
loope
mov
pop
sarl
fsubrs
aam
nop
testl
dec
mov
lea
gs
pop
idivl
and
or
add
and
jb
inc
push
leave
movsb
pushf
add
cmpsb
or
pop
cmpsb
mov
mov
and
dec
push
and
movsb
or
ss
dec
mov
lcall
ljmp
xchg
push
xchg
or
test
nop
xor
insl
xlat
js
daa
dec
fs
repnz
sbb
dec
sub
inc
imul
pop
lret
push
jg
or
jbe
mov
test
cmpsb
dec
hlt
or
sub
xor
dec
ljmp
dec
inc
in
jb
out
pushf
rep
shll
cmp
adc
or
sbb
in
dec
aaa
and
push
push
sti
add
fists
ja
icebp
dec
fcomps
xchg
loopne
adc
push
outsl
int
mov
xchg
xchg
aad
stos
and
loop
addb
push
add
clc
lcall
jb
repnz
sti
dec
push
outsl
les
mov
andb
insb
xlat
or
roll
and
pop
sahf
lds
ja
xor
mov
in
xchg
stos
adc
sbb
jno
data16
cmovp
adcb
hlt
repz
mov
jl
jbe
daa
pop
and
fcoms
pop
adc
pop
xchg
mov
aad
fistps
das
push
out
enter
xor
orb
push
add
fsubr
movsl
and
repz
push
sahf
leave
test
push
xchg
mov
push
fiaddl
push
mov
cmpsb
rcll
push
xchg
mov
pop
pop
cmpsb
or
and
xchg
jmp
dec
sub
sbb
inc
adc
lods
inc
mov
out
in
jmp
cmp
add
les
fnstsw
push
call
sbb
mov
mov
insl
adc
aas
clc
fdivl
test
stos
in
jmp
adc
in
dec
xchg
mov
outsb
das
jge
inc
inc
or
sahf
or
ret
xchg
mov
arpl
pminub
mov
push
push
xchg
inc
ret
aam
lea
pusha
inc
cmp
mov
mov
add
add
inc
sahf
mov
cmc
adc
ss
pop
movsb
sbb
xchg
jae
fidivrs
dec
cwtl
or
and
xchg
dec
jns
inc
popa
push
xor
jno
mov
icebp
lcall
pushf
push
out
cli
insb
inc
sti
mov
add
pop
mov
and
sbb
loopne
xchg
mov
mov
push
cltd
inc
sbb
push
push
ja
out
mov
enter
cmpsl
aas
xchg
inc
mov
daa
lcall
cmc
outsb
mov
loopne
dec
push
mov
call
cmp
testb
jbe
loop
cmp
push
pushf
daa
dec
lods
shll
jge
cmp
add
es
fxch
lods
call
lret
enter
fistps
fsubr
dec
mov
pop
xchg
in
test
leave
mov
ss
and
lret
push
push
xchg
sbb
push
sbb
icebp
push
inc
pop
xchg
push
mov
imul
fsubrs
dec
mov
sbb
sahf
pop
int3
leave
pop
add
cmpsl
shl
sub
or
cbtw
pusha
jae
add
push
dec
loope
push
xchg
fsts
xchg
mov
aas
cmpsb
mov
cwtl
ret
ds
push
sbb
addr16
or
add
enter
scas
test
inc
iret
popa
test
cs
add
les
sbb
pop
add
repnz
inc
mov
imul
mov
xor
mov
add
or
add
push
shlb
sar
iret
xchg
and
push
in
out
cmp
insb
sub
xor
push
dec
lock
pop
clc
xchg
test
dec
sbb
pusha
lds
outsl
loopne
imul
sbb
test
sbb
xor
js
push
push
aaa
hlt
test
test
test
mov
xchg
lret
testl
add
js
dec
scas
push
push
inc
lock
imul
lea
push
iret
pop
stc
roll
bound
inc
testl
sbb
or
cwtl
pop
sbb
addps
sub
lods
imul
sahf
inc
in
shlb
scas
add
test
cmc
pusha
cmp
push
push
mov
pop
mov
popa
dec
fildl
pop
and
in
or
lods
lahf
out
dec
addb
push
inc
mov
xor
imul
and
inc
inc
lea
mov
popa
lea
ret
aad
push
xchg
adc
inc
lahf
rol
and
movsb
lea
xchg
xchg
stc
ss
mov
xchg
mov
pop
sbb
inc
cli
ret
fcompl
int
adc
ja
enter
addr16
or
or
sahf
or
push
aas
clc
cmp
mov
fsubrl
push
mov
das
sahf
push
sbbb
sbb
jae
loop
sbb
movsb
iret
cmpsb
sbb
or
pop
dec
insl
adc
xlat
gs
aam
pusha
jle
out
or
pop
clc
shrb
xor
cmc
lods
adc
outsb
mov
movsb
pop
xor
push
dec
mov
mov
mov
ljmp
dec
mov
jo
lock
les
inc
fsubrs
in
and
inc
add
movsb
pop
test
and
pop
mov
add
push
add
mov
sbb
push
jle
adc
xor
fwait
mov
inc
loop
sbb
roll
dec
push
insl
add
sbbb
inc
or
sub
stos
shlb
gs
adc
mov
inc
sub
mov
jl
push
movsb
push
lock
out
sarl
adc
ljmp
jb
mov
cmc
mov
mov
pusha
jecxz
adc
add
adc
or
xchg
inc
xchg
inc
test
jne
inc
pop
insb
jecxz
ss
push
xor
das
ja
jge
push
dec
cmp
cmpsb
pushf
in
mov
cmp
jbe
adc
cmp
mov
sub
mov
fldl
mov
jge
mov
adc
dec
scas
jp
enter
mov
or
add
leave
add
or
pop
imul
sti
lds
mov
pop
cs
xor
mov
pop
xor
iret
les
mov
xlat
mov
rcll
leave
arpl
add
pushf
fcmovnbe
leave
dec
fisttps
mov
repz
mov
push
stos
inc
fwait
inc
mov
fwait
xlat
sahf
cld
add
xchg
fcmovnu
add
sub
push
pushf
mov
sub
xor
dec
imul
test
sub
fbld
xor
xor
xchg
xchg
sbbb
rcrb
sub
and
ja
and
cmp
stos
jns
popf
xchg
push
dec
loop
or
or
push
and
xor
insb
xor
pop
popa
adc
dec
icebp
mov
test
sub
in
imull
inc
js
jae
sbb
ret
fdivl
adc
or
cmpsb
ljmp
scas
mov
cmpb
jne
inc
xchg
jge
jmp
in
pushf
push
mov
lds
push
mov
imul
mov
jg
push
push
xor
mov
or
lret
pop
sub
inc
addr16
or
cmp
cli
jb
shrl
adc
hlt
loopne
nop
cmpsb
cmp
fmuls
lds
pop
or
pop
das
cli
pop
inc
mov
lea
cmp
nop
ss
sub
pop
outsl
add
mov
mov
adc
mov
das
imull
pop
mov
sbb
ljmp
es
ret
movl
dec
sbb
xchg
jge
movb
stos
adc
inc
fidivl
loop
cmp
sahf
jp
pop
std
cld
inc
sbb
outsl
xor
mov
push
cmp
push
cmp
xchg
out
dec
mov
push
push
push
decb
daa
movsb
pop
lods
pop
fcmovnb
jmp
dec
push
scas
or
jge
rolb
icebp
ret
mov
loopne
out
in
ds
leave
subb
mov
lods
pop
lods
or
jp
push
daa
hlt
es
rclb
or
rorl
add
std
inc
jnp
repz
daa
lds
xor
in
outsl
mov
bound
repnz
cmp
das
outsl
mov
jecxz
jae
in
call
xor
adc
gs
jg
cmc
cmp
shll
out
ja
cmc
negb
pop
dec
mov
or
movsl
pushf
inc
or
in
dec
push
add
push
rcrb
pop
clc
adc
inc
lcall
dec
aam
xchg
add
icebp
leave
jle
clc
push
sbbl
xor
push
js
xchg
xor
sub
out
inc
scas
xor
pop
addr16
jne
jo
dec
dec
int3
sub
clc
xchg
mov
add
add
inc
roll
divb
rcll
ret
jge
insb
inc
sbb
sbb
xchg
call
adc
testb
mov
mov
das
adc
jp
out
adc
ja
mov
int
sub
push
jge
and
lods
pop
out
sub
fmul
ja
sub
inc
mov
pusha
rcr
or
or
xlat
sub
mov
std
xor
and
daa
decb
and
pop
pop
cli
push
repz
test
jo
and
imul
in
shl
sbb
and
add
jno
femms
adc
xchg
sbb
jb
stc
clc
xchg
hlt
sub
pop
cmp
fdivs
divb
add
or
sbb
pop
movsb
hlt
outsb
pop
iret
adc
pop
jo
cmpl
jp
adc
testb
std
pusha
push
sbb
cmp
pop
xchg
test
out
inc
or
pop
in
out
mov
lods
or
test
adc
pushf
mov
and
in
in
cmp
testb
adc
repnz
adc
repz
fisubrl
dec
les
push
push
jge
insl
sarb
movsl
aaa
adc
or
lock
imull
rorl
dec
leave
sahf
sbb
or
dec
rclb
mov
pop
mov
pop
divl
sub
and
adc
inc
or
sbb
cmpl
pop
mov
out
push
stc
sub
lahf
insb
or
sti
xchg
cmp
mov
subb
dec
and
jg
mov
push
lds
int3
jnp
test
or
jns
dec
outsl
xorb
decb
fstps
pusha
icebp
adc
jb
or
mov
cli
xor
imul
mov
mov
lahf
cmpsb
test
dec
jge
inc
xlat
call
imul
js
cmp
aaa
jle
xorb
xor
cmp
test
aaa
fwait
notl
and
mov
push
push
dec
or
adc
es
or
inc
or
negb
shll
cmp
daa
jle
out
pop
xor
mov
lcall
xor
mov
xchg
sub
aad
xchg
push
and
dec
aaa
xor
hlt
lea
sar
sbb
jmp
inc
pushf
xchg
sub
icebp
pop
mov
out
mov
push
cmp
xlat
and
out
push
cltd
fidivrs
ret
dec
loop
xchg
nop
and
xor
jl
dec
lcall
sub
lret
push
ret
pusha
sbb
push
or
roll
mov
inc
cmp
cmp
xchg
ljmp
cmp
scas
inc
out
push
out
jl
mov
cs
xor
cmc
popf
lods
mull
clc
push
push
sbb
cmp
pop
mov
push
scas
mov
cmc
sub
mov
push
xchg
add
lods
inc
lea
ja
fldcw
dec
or
or
enter
or
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
movl
pop
movl
jmp
sbb
mov
ret
push
mov
sub
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
mov
dec
mov
jmp
xorl
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
mov
adc
push
or
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzbl
sub
xor
mov
push
sbb
mov
add
movl
cmp
movl
je
mov
sub
mov
xor
xor
add
add
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
sub
adcl
push
push
push
push
subl
lea
sbbl
push
addl
push
subl
call
push
andl
call
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
pushl
push
push
push
call
cmpl
jb
add
movl
movl
orl
mov
adc
mov
xor
xor
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
adcl
test
movl
je
mov
mov
mov
mov
imul
orl
mov
sbbl
add
xchg
or
mov
sub
xor
mov
xorl
xor
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
sbbl
add
mov
sbb
mov
sub
mov
movl
xor
add
mov
mov
sbb
mov
xor
movl
cmpl
je
cmpl
jne
push
push
pushl
call
xor
add
dec
mov
jmp
neg
add
adc
mov
orl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
xor
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
sub
mov
orl
sub
jmp
div
and
xchg
lods
mov
data16
sbb
bound
pop
bound
test
test
xchg
lods
test
out
cli
js
ss
leave
add
sahf
outsl
out
mov
pop
xchg
xchg
push
mov
jg
add
adc
jne
imul
test
or
sub
fstpt
aas
mov
xor
or
push
cmp
adc
inc
xchg
xor
in
push
daa
sbb
inc
in
imul
hlt
rclb
push
std
jg
pop
mov
mov
xchg
adc
add
loop
mov
cmc
bound
fwait
outsl
dec
stos
cs
lock
fdivrl
stc
dec
dec
xchg
pop
icebp
jbe
xchg
xchg
jo
xchg
mov
jo
pop
shll
aad
fsubrl
mov
loopne
xchg
and
fldl
sbb
fdivl
cwtl
lcall
mov
test
ja
or
jle
nop
std
les
xchg
iret
pop
push
or
cwtl
add
or
hlt
pop
xor
in
push
jbe
and
add
inc
sub
pop
out
lret
jmp
sbb
jno
mov
cmp
xor
mov
stos
cmc
jno
cld
mov
sub
pusha
xchg
jg
mov
insl
out
stos
lods
jno
cmp
popa
pop
jno
insb
mov
inc
lcall
xor
sbb
inc
mov
out
jle
iret
cs
cwtl
mov
mov
gs
stos
xchg
xchg
in
sahf
sbb
mov
lahf
pop
mov
fwait
mov
adc
icebp
icebp
and
push
jo
mov
xchg
divl
test
outsb
pop
mov
xor
inc
xor
pushf
jno
in
push
stc
cmp
mov
push
cli
pop
pop
aaa
stos
addl
mov
fbstp
sbb
inc
mov
inc
lret
ret
jg
inc
insb
pop
shl
mov
jne
ffree
std
mov
cmpsl
sub
fcoml
cltd
pushf
call
xchg
shufps
dec
mov
jg
inc
jle
and
dec
mov
cmp
outsb
in
inc
push
imul
lds
fdivl
xlat
test
call
cld
pop
adc
jns
int
cwtl
dec
in
cmc
cs
sub
les
rcrl
loope
and
xor
add
loop
push
addr16
lahf
pop
sub
inc
fidivs
fnstcw
and
outsb
mov
sub
out
inc
fs
jns
xchg
xchg
mov
lcall
or
sbb
xchg
pusha
pushf
sbb
sub
push
sub
push
bound
int3
inc
movsb
sbb
in
fbstp
push
ss
cmp
shrb
fstps
inc
xor
adc
and
lock
out
insl
hlt
xor
sub
sbb
adc
loope
stc
rcl
inc
cmp
inc
in
enter
lock
xchg
mov
lret
xor
shll
outsb
test
insb
pop
pushf
jo
mov
das
fcoms
jnp
adc
mov
pop
ror
cmp
xchg
sbb
std
push
jp
lret
aas
sub
cltd
enter
or
sbb
aas
lret
mov
mov
cmp
fcompl
adc
int
dec
cmp
push
rcr
iret
cltd
and
dec
jl
dec
and
xor
xor
sub
jns
cltd
mov
mov
in
cltd
stos
mov
xor
mov
jl
xor
dec
jecxz
test
inc
clc
rcll
ret
push
mov
xlat
cmp
push
cmpl
repz
push
jl
mov
fisttpl
mov
cwtl
or
cmp
mov
jo
dec
stc
inc
or
mov
jne
sbb
scas
imul
lock
into
mov
jno
fsubr
bound
pusha
or
pop
daa
rclb
add
sub
in
into
fildl
popa
mov
sub
sar
mov
rorb
cwtl
pop
fmulp
movsl
xchg
xchg
mov
adc
insl
fdivr
arpl
cld
or
ds
push
jmp
jbe
add
mov
xor
fs
out
mov
cmp
aas
data16
jl
jne
mov
sub
fnstsw
dec
xor
mov
ljmp
pand
cmc
lds
push
xor
mov
ss
push
jmp
aam
in
mov
inc
adc
fistl
jnp
sbb
into
mov
xchg
add
adc
pop
int3
std
icebp
pop
std
mov
fidivs
cltd
in
mov
cmp
add
imul
xchg
dec
ret
or
movsb
jae
mov
mulb
divb
push
lea
into
fwait
jnp
xor
out
scas
inc
sbb
dec
cmp
or
dec
or
call
stos
fdivs
xchg
push
int3
jbe
dec
es
out
into
xor
mov
pop
dec
pop
xchg
sahf
sbb
adc
pop
cmpsb
dec
adc
fldcw
push
outsl
out
orb
mov
fisttpll
mov
cld
in
lock
mov
negl
lock
dec
outsb
addr16
and
leave
das
aaa
mov
jo
orb
scas
cli
lods
aam
mov
mov
nop
ja
es
jne
and
iret
push
hlt
lret
lds
shll
push
ror
jg
ret
ret
fcompl
leave
popa
adc
push
sub
pop
push
ficoms
dec
loope
jl
push
dec
enter
cli
mov
dec
icebp
ret
clc
jge
cli
rcl
sub
cmpl
mov
or
pushl
jae
dec
mov
in
andl
jecxz
mov
cmc
div
pop
push
inc
push
mov
idiv
sub
cltd
shll
jle
inc
repz
add
mov
incl
jae
mul
or
shr
enter
pusha
lret
cmc
mov
inc
push
mov
addb
dec
sbb
popf
std
nop
es
ljmp
mov
mov
icebp
mov
out
leave
popf
cli
xchg
in
dec
test
push
or
adc
cmp
out
test
xor
rcrl
jae
loopne
mov
sbb
sub
clc
xor
fbld
ret
sarb
fwait
jns
jmp
test
add
mov
lods
pop
test
or
sub
push
sbb
adc
lret
je
test
inc
loopne
mov
or
xor
call
mov
inc
mov
xor
mov
and
pop
inc
bnd
into
out
jbe
jmp
mov
inc
imul
out
cmp
je
dec
sbb
jne
call
imul
dec
les
gs
jae
dec
mov
cli
mov
xchg
adc
jo
sbb
shl
gs
jmp
push
xor
fildll
je
rolb
sub
dec
dec
loope
xor
sub
sbb
stos
sbb
insb
cwtl
lahf
stos
in
jp
sbb
es
imul
cmp
adc
mov
jl
pop
mov
cmpsb
cli
ss
sub
inc
movsl
testb
decb
lret
jmp
mov
mov
in
movsl
in
pop
add
imul
loop
cmpsl
pop
or
jg
loope
stc
lea
shrl
add
jns
inc
add
repz
loop
mov
add
loope
push
mov
loope
mov
andb
das
fildll
mov
and
sbb
mov
mov
sahf
lea
ret
call
lods
lods
ljmp
cmp
cmpsl
ljmp
push
push
sub
fildl
in
pop
sub
mov
in
or
push
pop
fwait
cmp
daa
aaa
loope
clc
inc
jbe
iret
imul
cmp
adc
jg
movsl
inc
aad
pop
clc
jmp
dec
and
adc
pop
xchg
mov
pop
xchg
push
hlt
imul
jae
lods
mov
rorl
rorb
and
and
daa
icebp
push
insl
sbb
loope
popa
dec
fdivr
cwtl
pop
mov
mov
adc
mov
ret
fwait
popf
lret
shlb
lret
pop
pushf
iret
sbb
and
sub
subl
cld
stos
mov
add
mov
daa
xchg
stc
inc
test
or
sbb
inc
mov
adc
cwtl
jo
cli
test
xor
test
outsl
or
mov
inc
mov
and
bnd
push
mull
xchg
or
sahf
pop
sbb
popf
daa
sti
xchg
out
dec
ja
addb
mov
fmuls
push
mov
popa
mov
mov
pop
dec
int3
dec
push
cmp
sbb
cmpsb
call
dec
mov
xor
xchg
xor
ret
scas
mov
mov
test
lods
xor
jge
adc
xchg
mov
add
xor
mov
scas
jno
mov
mov
jae
add
dec
mov
faddl
mov
mov
mov
sub
scas
gs
inc
out
int
mov
lea
rcrb
stc
pop
std
cmc
and
mov
or
aas
xorl
jl
out
pop
xlat
cs
sbb
das
mov
dec
scas
and
pusha
leave
jge
or
jge
fldt
push
xor
jl
hlt
sbb
or
jl
mov
icebp
in
jne
mov
lret
pop
repz
mov
jg
int
push
fbstp
rorb
orb
push
mov
inc
jns
addr16
shld
jp
mov
popa
sub
test
shlb
rolb
arpl
das
jmp
inc
out
xchg
mov
jae
scas
mov
into
data16
stos
xor
add
imul
adc
xchg
push
xor
out
add
ja
cmc
cs
mov
sbb
pushf
jl
pop
pop
fsub
xchg
adc
add
clc
push
out
xchg
pop
dec
adc
lods
cmp
mov
push
ret
push
fmull
lret
mov
cmc
repz
push
mov
dec
mov
mov
add
outsb
sub
bound
fsubrs
inc
xchg
sub
inc
dec
nop
nop
dec
cmp
pop
clc
xchg
mov
stc
pop
sub
add
sbb
and
inc
xchg
testl
or
adc
push
ljmp
and
push
ds
add
sbb
cltd
fcmovb
push
in
xchg
add
ds
addl
jbe
or
cmc
lcall
dec
mov
xchg
pop
insl
inc
xchg
dec
xchg
mov
addr16
in
xlat
loop
mov
iret
stc
stc
negb
xchg
cmpl
mov
out
and
and
ljmp
or
test
inc
scas
rorl
xchg
inc
pop
xchg
int3
cmc
das
ret
sahf
jge
repz
and
loope
mov
dec
insl
push
push
push
mov
push
ss
mov
adc
dec
xchg
arpl
cli
xchg
out
and
add
cmp
lock
dec
adc
xchg
vandnps
subl
xor
mov
cmpsb
in
add
imul
push
sbb
int3
repz
jle
popf
daa
hlt
jge
mov
lcall
mov
mov
xchg
and
jge
cwtl
cmpsb
mov
dec
cmpsl
imul
lock
roll
pushf
outsl
jg
inc
daa
inc
pop
push
xchg
jbe
adc
add
out
mov
cmpl
aas
pop
shl
lcall
mov
cmp
scas
xchg
push
or
pop
adc
fidivs
cmc
hlt
sbb
inc
sbb
push
jb
and
xor
cmp
mov
xor
mov
xchg
test
in
leave
inc
and
push
mov
lcall
ds
lahf
nop
jle
arpl
jno
cmp
out
push
jne
dec
or
mov
push
sti
or
mov
mov
and
inc
mov
cli
add
mov
jge
push
imull
or
loopne
not
pop
add
aam
xchg
mov
dec
add
pop
mov
mov
inc
stc
inc
neg
fistps
xchg
mov
jo
test
push
dec
or
les
cmp
mov
int3
addr16
scas
pop
and
outsb
jg
aad
sti
sarb
mov
out
jmp
xchg
mov
ljmp
jns
shrl
popf
das
test
in
pusha
rorl
shlb
jns
dec
mov
dec
mov
dec
pop
jl
and
ja
out
or
pop
loopne
add
out
mov
mov
cld
pushf
scas
inc
push
shll
or
es
and
mov
sahf
out
mov
inc
dec
popf
addb
pop
inc
jbe
fisttpl
flds
add
sarb
dec
sbb
push
in
hlt
push
daa
in
pusha
cmp
lds
addl
ja
scas
popa
adc
and
jnp
fisubl
mov
arpl
mov
dec
push
stos
sub
sarl
jb
insl
sbb
cmp
ror
out
rcl
fnstenv
sbb
lds
xor
int
aam
bound
scas
push
dec
dec
add
sbb
movsb
in
cld
lods
rcr
adc
imul
adc
xchg
jle
fdivs
lock
lods
sub
cmp
mov
cmpsl
js
call
int
mov
imul
icebp
in
lcall
mov
cmp
pop
xchg
pop
repz
mov
adc
clc
sub
cmp
mov
mov
or
jne
in
pop
push
stos
push
dec
pop
in
and
mov
sbb
lock
xchg
adc
inc
cmc
fwait
repnz
dec
mov
mov
add
or
mov
jae
dec
push
lea
repz
ret
mov
mov
scas
sub
jmp
aad
push
mov
or
nop
int3
test
dec
dec
dec
add
les
jnp
mov
stc
out
adc
fmuls
mov
std
shlb
pop
xchg
loop
xor
push
sub
loop
inc
inc
cmp
pushf
test
xchg
and
pop
mov
out
dec
and
repnz
cmp
xchg
inc
xchg
cmp
ffree
in
adc
mov
push
fstpt
lds
cs
rcrl
insl
sub
dec
lret
es
push
loopne
jae
insb
fbld
adc
dec
push
inc
jne
push
loop
pop
inc
lods
mov
js
fucomp
dec
mov
mov
pop
into
leave
pop
sub
push
je
pop
icebp
das
fildll
in
cld
lods
xlat
jnp
ljmp
lds
rcl
or
jb
sbb
rcll
push
xchg
sub
ret
stos
call
mov
sbb
adc
sahf
dec
fwait
mov
adc
xchg
popf
cmp
push
lcall
dec
lahf
adc
aas
or
pop
jp
xchg
outsl
xchg
cli
fsubrs
jl
and
addr16
addr16
arpl
mov
cwtl
cmp
jae
daa
push
or
sbb
bound
inc
and
cmp
in
add
into
push
inc
lret
xorb
jp
cmpb
xor
rcl
nop
fucomi
clc
push
jg
fldcw
cmp
mov
lods
pop
stos
sub
jo
int
std
or
jecxz
je
push
sub
push
inc
test
out
nop
cltd
sub
aas
jbe
loopne
or
sahf
subb
stos
pop
movsb
outsl
sub
push
mov
cmp
push
fsubl
sub
push
push
dec
mov
jle
cltd
scas
popa
fnstenv
pop
scas
mov
leave
or
jne
int
daa
stc
test
dec
clc
rorb
mov
fidivrs
inc
addb
jmp
jo
adc
aaa
mov
stc
gs
loopne
xchg
sbb
call
out
xor
push
js
sbb
mov
in
sub
or
xchg
sub
push
cmpsl
mov
mov
add
xchg
out
sub
xchg
shr
and
out
adc
xchg
jge
pop
mov
push
sbb
add
sub
ss
xor
popa
sbb
outsb
fsubl
jmp
push
xor
adc
mov
mov
fldl
mov
ret
aaa
subl
sarb
testb
dec
dec
cmp
aaa
mov
out
cmp
cli
dec
and
push
pop
cli
add
movsb
pop
mov
movzwl
mov
dec
and
mov
cmpsl
pop
ds
leave
call
out
aad
xchg
bound
jne
and
ja
add
mov
cvtpi2ps
shl
cmp
xor
popa
sub
xor
arpl
repnz
pop
dec
shlb
hlt
inc
pop
pop
adc
add
stos
or
add
jmp
mov
ficomps
add
fnstenv
in
or
or
lret
and
adc
mov
arpl
pop
test
jp
rorb
pushf
mov
in
adc
xorl
das
arpl
addl
shll
outsl
ljmp
inc
push
mov
iret
dec
outsb
jbe,pn
push
es
inc
imul
adc
imul
mov
mov
xlat
dec
fdivrs
gs
lcall
cwtl
mov
mov
and
cmp
mov
pop
sbb
inc
xchg
out
scas
pop
push
popf
xlat
scas
outsb
xor
cwtl
insb
stos
pusha
lock
or
shlb
dec
leave
aas
daa
sbb
sub
loop
das
xchg
push
rcll
push
fistps
pop
scas
lret
sti
dec
cmp
add
jle
rolb
add
lock
out
push
repnz
outsl
pop
js
push
nop
orb
mov
stc
and
das
ret
rorl
or
loop
cmp
sub
lret
sub
outsb
mov
inc
jl
mov
iret
and
call
les
and
pop
mov
outsl
testl
shr
xchg
push
sbb
pop
sbb
bound
lahf
shrb
push
push
das
push
nop
lcall
dec
and
out
imul
aas
cmp
sub
add
call
add
xchg
push
cmp
inc
out
stos
rorb
inc
js
nop
mov
cmp
dec
out
into
into
fcom
sub
cmpl
jl
cs
leave
dec
shlb
mov
dec
xorb
rcll
jnp
hlt
pop
cwtl
fs
cli
setle
pop
mov
sub
leave
jl
lods
test
call
dec
mov
fistpl
xor
mov
aam
gs
movsb
fsubs
stos
cmpsl
mov
xchg
dec
and
add
cmp
dec
jp
pop
jbe
dec
or
jnp
outsb
sbb
xchg
imul
mov
imull
inc
stos
out
jno
mov
cmpsb
out
lods
inc
xchg
es
in
add
test
les
ds
mov
dec
sbb
sub
mov
std
add
scas
int3
jmp
mov
sub
xor
or
sub
aaa
stos
lods
and
pop
out
scas
scas
push
lcall
loope
dec
addb
adcb
push
repz
cmp
outsl
lock
mov
add
jl
pop
xchg
xchg
add
cmc
cmp
jge
dec
mov
loop
outsb
push
push
sub
adc
je
mov
cbtw
or
add
push
insb
push
adc
pushf
jmp
xchg
push
mov
in
xor
xor
popf
cmpb
and
pushf
mov
popf
shrb
push
xchg
or
lret
mov
push
xchg
adc
mov
mov
loope
mov
dec
scas
add
ret
sbbl
mov
mov
andnps
lods
sahf
xchg
lahf
dec
jae
das
shlb
stc
outsb
sti
push
in
mov
cmp
out
mov
pop
xchg
push
add
popa
not
cs
adc
sbb
pop
add
mov
jno
xor
xchg
push
je
push
insl
lret
cld
cmp
mov
daa
add
jg
dec
jns
cwtl
inc
xchg
bound
mov
xchg
jl
pushf
out
negl
xor
movsl
imul
int3
xchg
out
lcall
into
inc
add
pop
push
dec
add
fsts
xor
adc
enter
gs
push
aaa
mov
ja
mov
jne
mov
shr
mov
or
decb
dec
jl
xchg
in
leave
les
mov
jnp
push
lahf
insl
push
std
mov
sbb
dec
mov
lcall
or
mov
leave
sub
push
leave
push
shrl
jecxz
pop
jbe
dec
ds
or
data16
mov
popf
lret
scas
lcall
sub
test
inc
sbb
pop
insl
insl
push
cmpsb
xchg
repz
loop
cli
inc
and
and
int
sbb
pop
mov
add
lds
lret
ficoml
stos
fs
iret
lds
cmp
lods
movsb
push
loopne
ret
repnz
es
fcompl
jae
mov
fmul
fimull
outsb
xchg
and
mov
inc
mov
paddq
push
dec
dec
insb
aaa
mov
mov
jnp
popa
dec
xchg
lcall
adc
xor
and
mov
lahf
lds
cmpsb
jecxz
inc
out
push
enter
sbb
cmp
sub
dec
inc
mov
xor
mov
add
dec
sbb
jl
imul
jnp
in
jno
in
push
push
ss
and
and
and
push
notb
mov
js
icebp
ss
loopne
pop
and
xchg
lret
or
inc
cli
sub
lock
repz
call
pop
adc
lea
insl
sub
test
inc
pop
xchg
pop
pop
pop
push
xchg
mov
pop
jo
stos
ljmp
mov
xor
mov
frstor
jne
aam
adc
xor
dec
roll
mov
jmp
xchg
pop
pop
mov
mov
xchg
dec
or
into
add
mov
into
pop
addr16
push
popf
cmp
arpl
dec
push
sub
ljmp
aam
cltd
pop
aam
pop
in
mov
and
ror
lods
cltd
cmp
fstp
pop
pop
shlb
fcoml
inc
and
mov
mov
std
jp
outsl
xor
lret
xchg
pop
xchg
and
movsb
fcomps
xor
fdiv
add
stc
xlat
push
aas
mov
lret
popa
nop
jns
ljmp
pop
pop
sub
sub
repnz
xor
mov
and
or
bound
jge
hlt
push
mov
inc
inc
xor
std
subl
push
mov
xlat
push
mov
cmp
mov
cli
popa
xor
insb
and
aad
xchg
movsb
inc
and
insl
cmp
out
outsl
and
cld
cltd
cmp
and
lcall
shlb
pop
pop
inc
arpl
jns
jle
int3
ljmp
iret
fs
xchg
fldenv
jge
push
jge
ja
lea
xchg
out
xor
jg
and
imul
sbb
cmp
mov
cmp
sbb
adcl
addr16
inc
lods
fs
adc
add
int
mov
incl
or
loop
cmp
les
xchg
mov
sbb
mov
adc
sahf
xchg
sub
fdivs
shll
xor
cmpb
mov
fdivl
or
movsl
or
sbb
add
xchg
mov
mov
push
add
lahf
xchg
xor
add
fisttpll
mov
or
sub
sub
std
mov
aaa
popf
pop
mov
push
dec
sub
inc
cmp
clc
jl
mov
mov
cmc
les
call
pop
jno
daa
sbb
std
stos
push
outsb
xchg
sub
push
cwtl
fstpl
and
jp
dec
mov
cwtl
push
mov
jno
repnz
cmp
jmp
sbb
sbb
scas
fldl
aaa
stos
fdivl
inc
jmp
fisubrl
push
mov
test
pusha
push
ja
lods
cmp
dec
xchg
notb
cmc
shll
dec
aad
cmp
scas
lret
js
inc
stos
movb
push
sahf
jp
test
push
sbb
push
in
sub
xchg
sti
mov
inc
cwtl
mov
push
lock
sub
mov
int
imul
sti
push
mov
jmp
sarb
mov
jno
inc
shrl
in
insb
ja
xor
inc
dec
jnp
dec
jp
and
sbb
xor
push
adc
orl
lcall
jne
adc
pop
sub
sbb
fcompl
adc
cld
aad
mov
mov
mov
mov
cs
mov
and
jp
or
adc
in
push
stos
xor
mov
mov
push
ror
mov
rcll
mov
dec
sbb
ficoml
mov
js
std
pop
and
mov
test
xchg
xchg
push
repz
jo
dec
arpl
std
shlb
lret
mov
sub
and
je
jg
push
add
add
adc
xchg
je
adc
and
outsb
jnp
jbe
mov
xor
adc
push
pop
mov
mov
fidivrs
sub
sbb
xchg
add
mov
lock
sbb
fdivrl
mov
sahf
pop
jmp
and
push
inc
cli
mov
scas
cmovl
push
cmp
out
in
cmp
rcrb
movd
add
sub
mov
mov
mov
repnz
inc
jne
push
fcmovnu
jae
sarb
fsub
inc
shr
xchg
add
xor
cmpsb
imul
lret
cwtl
es
push
sbb
cld
xor
cmc
dec
add
push
lock
movsl
or
mov
in
mov
mov
pop
mov
sbb
cmp
addr16
sbb
leave
mov
insl
mov
addl
add
popf
dec
jbe
and
adc
jb
sub
lods
popa
enter
and
loope
stos
sub
add
jb
xchg
inc
dec
cmp
jo
fnsave
je
xor
adcl
ss
pop
sbb
out
insl
xor
adc
shr
stos
jbe
xchg
lret
lock
icebp
into
fcomps
mov
jp
sti
test
gs
or
inc
inc
leave
lcall
sbb
out
jne
addr16
mov
push
push
and
xorl
test
mov
adc
sub
mov
add
jns
mov
dec
fcoml
sti
xchg
shll
jge
aaa
and
push
or
mov
mov
aas
aas
sub
push
xchg
pusha
xchg
leave
or
insl
jnp
aad
rorl
sbb
adc
inc
push
pushl
mov
or
popf
std
and
sub
int
dec
or
bound
xchg
pop
mov
jl
dec
sub
idivb
aad
je
jo
mov
leave
sbb
pop
mov
add
jl
mov
cs
movsb
clc
shll
sub
ja
les
add
xor
add
ret
push
pop
lea
xchg
adc
pop
inc
lods
sti
popf
xchg
aad
lock
enter
addb
sub
xor
test
sbb
cld
es
gs
sbb
inc
lds
movb
jg
jnp
or
adc
and
aaa
xchg
xlat
arpl
call
call
mov
jge
dec
mov
inc
mov
pop
in
add
repnz
push
je
push
scas
dec
mov
jecxz
test
add
cmpsl
add
notl
daa
movsl
mov
mov
mov
push
mov
mov
data16
push
movsl
jmp
xchg
push
push
ficoms
gs
out
cs
push
sub
fidivrl
ljmp
mov
fcoms
outsl
les
jl
test
ss
cmp
push
add
push
sbb
jno
sub
push
lcall
mov
rolb
ss
sbb
xor
push
std
in
cmp
jg
mov
icebp
or
adc
lret
pop
pop
sub
mov
and
jg
rcll
mov
pop
jge
fmull
arpl
repnz
pop
cwtl
imul
mov
mov
repnz
rcll
and
dec
add
and
sbb
pop
jmp
aam
mov
fisttpll
call
rcrb
dec
xchg
xchg
mov
add
bound
add
loopne
sbbl
jae
push
pushf
push
and
imul
push
dec
push
mov
sbb
lret
cmpsb
fisttpll
iret
cltd
ja
mov
loope
adc
jae
xchg
mov
sbb
mov
mov
es
mov
add
mov
dec
xchg
sahf
push
xchg
push
mov
sub
jns
aaa
and
je
push
jl
mov
dec
mov
or
pop
nop
jmp
pop
add
pop
enter
rcrb
mov
cmpsl
jle
cld
mov
fcompl
imul
icebp
sbb
jle
xor
or
or
inc
jo
fnstenv
xchg
or
dec
lods
ss
roll
xor
jg
lcall
fisttpl
xor
xchg
lea
out
pop
pop
dec
xor
mov
outsl
xchg
out
xchg
ja
std
test
mov
mov
dec
fwait
jae
mov
mov
pop
sahf
mov
dec
sub
ret
push
xchg
or
in
push
pop
fsubrs
pop
pop
jae
mul
pusha
pop
push
rcll
push
outsl
scas
mov
scas
or
cmp
ret
mov
imull
inc
push
sbb
pop
push
ss
lods
loopne
xor
mov
repnz
pusha
mov
gs
push
ljmp
lahf
xchg
leave
cwtl
cmp
sbb
jl
jecxz
xchg
cld
pop
leave
call
add
adc
and
ficoml
or
mov
and
fcoml
out
iret
sahf
inc
sbb
and
pusha
mov
ljmp
xchg
fs
imul
jmp
add
testl
fisubrl
add
js
push
mov
lock
inc
xor
lea
sbbl
xor
xorl
xor
movl
cmp
movl
je
mov
xor
adcl
add
cmp
jne
pushl
call
mov
mov
and
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
sub
add
mov
xor
mov
add
movl
cmp
je
sbbl
pushl
pushl
call
sbb
mov
dec
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
sbb
mov
xorl
xor
subl
add
cmp
movl
je
mov
mov
mov
or
mov
mov
mov
add
mov
and
mov
and
mov
adcl
add
movzwl
sbb
mov
mov
or
mov
mov
sbbl
add
not
mov
mov
jmp
movzbl
add
mov
mov
xor
mov
andl
add
inc
mov
sub
mov
sbbl
mov
xor
decl
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jmp
into
mov
adc
shll
testb
pop
bound
jnp
ret
call
in
pop
orb
fsubrs
mov
and
stc
ljmp
aas
mov
and
and
ds
mov
adc
negl
popa
out
icebp
daa
cmpsl
pop
jg
sub
in
push
fmull
fbstp
test
or
push
sbbb
mov
in
das
mov
ja
xor
ss
addr16
cmp
pusha
mov
push
xchg
dec
jbe
shrb
or
sbbb
xchg
push
xchg
int
pop
es
mov
xlat
add
rcl
nop
hlt
add
fistpl
jp
jnp
xor
add
xchg
inc
push
dec
aam
mov
adc
loopne
rcr
push
inc
dec
push
lahf
cmc
push
push
or
mov
mov
test
sbb
and
outsl
pop
sub
adc
jb
lods
jb
adc
test
fists
aas
stc
xor
and
fnstsw
adc
push
push
lods
les
cmp
lock
push
ret
cmp
in
push
mov
in
iret
mov
jp
mov
test
leave
sbb
cmpsb
mov
lods
jle
or
cwtl
test
dec
dec
push
mov
xor
inc
or
mov
lahf
popf
xor
int
add
mov
lret
pop
add
add
inc
es
les
in
push
inc
pop
sub
pop
lods
push
mov
pop
mov
push
arpl
mov
mov
addl
sahf
scas
out
in
aad
repz
test
dec
xchg
orl
sti
cmp
rorl
scas
stos
data16
notb
sbb
loopne
cmp
out
adc
mov
in
jl
sbbl
das
xchg
gs
in
add
or
addr16
scas
lahf
test
in
addl
push
popf
out
mov
leave
sahf
or
shrb
xchg
push
jnp
in
cmp
mov
cmpsb
dec
inc
sbb
or
xlat
mov
sub
fists
ficoml
push
test
test
sub
lret
lods
movsl
daa
jl
sarb
test
roll
lods
pop
jmp
sub
cmp
aad
lret
out
cs
mov
jg
pop
pop
mov
cltd
stos
or
orl
sbb
cmpsl
jl
jno
push
cwtl
out
je
icebp
imul
adc
pop
in
fisubl
pop
mov
inc
mov
ja
cwtl
leave
push
hlt
cmc
or
cmpsl
mov
inc
ja
dec
imul
add
fwait
lods
sbb
enter
dec
xlat
jb
lds
mov
push
adc
push
xor
sbb
inc
add
cmc
xchg
cli
icebp
das
jle
test
xchg
ja
inc
and
hlt
push
mov
add
addr16
dec
ret
pop
aam
pop
aaa
adc
pop
jb
dec
push
call
pop
pusha
int
popa
cmp
mov
xchg
inc
in
int3
mov
jnp
cmpsl
jecxz
jo
lock
dec
sti
movsb
add
lock
js
orb
adc
fnstenv
leave
ret
sbb
lds
lock
mov
push
xchg
loope
push
stos
out
in
xchg
mov
mov
lock
adc
les
pop
adc
cmp
enter
loope
test
ret
pop
lock
sbb
sbb
js
mov
push
lahf
outsb
cmpsb
push
addr16
push
test
imul
movsl
int
mov
test
jne
mov
push
fdivr
int3
cmpsb
insl
int3
aam
xchg
jmp
rclb
push
xchg
ffreep
xchg
mov
adc
mov
xor
bound
dec
fsub
mov
or
pop
mov
pushf
fmul
jo
dec
adc
xor
cmp
sbb
push
hlt
mov
bound
lods
shrb
jnp
lcall
pop
rcll
lds
decb
pop
aam
push
and
shll
arpl
add
and
fadds
out
mov
shr
stos
pushf
out
xchg
ss
fsubrl
jg
into
sbb
lret
movnti
rcl
enter
shrb
sub
mov
inc
pop
xchg
and
dec
xor
shrl
mov
and
pop
mov
ds
cmp
pop
decb
push
fistpll
xor
das
or
sbb
popf
or
call
in
mov
jmp
rol
ss
mov
or
adc
lret
stos
fstp
push
in
lret
ljmp
adc
daa
lods
push
mov
or
pop
mov
inc
fdivrs
pop
mov
push
bound
cs
int
repnz
pushf
ja
or
cmpsb
mov
repnz
and
imul
jns
mov
or
cmpsl
imul
mov
out
lods
xchg
push
aaa
cld
ja
and
mov
frstor
push
loopne
inc
mov
or
pusha
cmc
and
xor
sbbb
je
out
push
add
repz
stos
jmp
cmp
insb
orl
xchg
mov
mov
mov
out
arpl
les
mov
negl
clc
scas
pop
outsb
fists
lea
loope
scas
mov
je
mov
loop
cwtl
dec
mov
nop
dec
or
xor
jge
or
jbe
das
mov
addr16
xor
clc
add
pushf
add
imul
jle
dec
scas
sti
loop
mov
enter
mov
xor
frstor
or
stos
nop
or
cs
inc
inc
out
mov
pop
push
test
pop
sbb
and
cmc
ljmp
pop
cli
dec
xor
ret
dec
mov
mov
das
lret
shll
test
das
pop
mov
dec
inc
mov
dec
lods
mov
jnp
inc
mov
or
ficoms
cmpsb
cmpsl
sbb
lods
adc
insb
or
shlb
xchg
out
fcomps
rolb
aaa
stos
jo
or
jbe
pusha
lret
push
xor
into
add
outsb
adc
cmp
in
popf
or
into
jecxz
xor
xor
lahf
repnz
aaa
and
xorb
js
call
into
fs
lds
cmc
push
ja
shlb
pop
enter
push
push
inc
xchg
and
sbb
cmp
cli
imul
adc
pop
shlb
add
pop
jb
ret
pop
inc
push
sbb
fists
and
insb
xchg
cmc
out
arpl
and
add
cli
inc
jecxz
push
scas
pop
rcrl
sbb
mov
sub
mov
lea
pop
sbb
lcall
xchg
mov
push
insb
jmp
jle
mov
adcl
xor
int
clc
or
rcrb
outsl
lcall
orl
out
addr16
in
or
mov
sbb
adc
out
pop
xchg
mov
pop
xlat
decb
lock
addr16
push
or
scas
push
call
sub
mov
fdivl
das
push
xchg
lahf
jno
mov
add
jno
push
adc
adc
iret
fisubs
inc
test
loopne
call
dec
xchg
add
lret
sbb
sub
fisubl
sbb
js
mov
sbb
dec
aad
mov
fidivrl
imul
in
clc
and
pop
inc
cwtl
mov
outsb
adc
out
mov
pop
mov
mov
cld
mov
aas
push
scas
add
xchg
iret
xlat
and
test
jbe
push
pusha
mov
imul
addr16
popa
popf
cmp
push
jnp
or
mov
pop
notb
push
ja
jmp
insl
sub
or
test
cmpsb
les
mov
or
xchg
stos
mov
pusha
sub
mov
xchg
xchg
cmpsb
sbb
lods
fld
xchg
and
xchg
fdivr
mov
cli
or
ljmp
xor
pushf
inc
adc
mov
pop
stos
scas
mov
push
mov
cmp
ss
push
mov
lahf
ja
xchg
cmpsl
popa
mov
jno
mov
mov
sbb
shl
pushf
adc
ret
or
std
dec
sbb
sbb
dec
sbb
adc
ljmp
cmc
sbb
mov
push
xchg
xor
mov
test
pop
xchg
mov
mov
inc
or
sbb
shl
push
mov
xor
adc
arpl
xchg
mov
lahf
out
test
out
std
mov
adc
std
out
jp
jns
test
push
mov
adc
push
xchg
adc
dec
lret
lret
shll
push
nop
push
cmpl
jno
test
jbe
lods
jmp
enter
mov
les
and
jbe
sbb
adc
inc
je
sub
cs
test
leave
mov
mov
fnstenv
imul
leave
outsl
aad
outsl
jmp
mov
and
dec
in
push
adc
aaa
cli
mov
mov
mov
cmp
xchg
ret
mov
aam
cmp
dec
aad
in
call
in
adc
fcompl
mov
xchg
xchg
mov
out
cbtw
arpl
popa
repnz
lcall
push
daa
mov
adc
pop
fcompl
js
fwait
push
pop
jecxz
ljmp
pop
mov
dec
cmc
pop
andb
loop
mov
orl
add
or
ljmp
orl
cs
xchg
mov
scas
jge
cmpsl
mov
shl
add
mov
arpl
push
hlt
pop
sub
cmpl
push
popa
lret
xchg
add
sbbl
shll
cmp
lret
jbe
testl
xchg
clc
insb
xchg
cli
and
mov
fnsave
call
sub
add
sub
int3
fidivrs
jl
mov
repnz
adc
fs
inc
arpl
sub
fidivrl
shl
fildll
and
test
in
cmpsl
push
inc
addr16
scas
xlat
imulb
popf
stos
in
ljmp
sbb
xor
pop
lock
push
sbb
sbb
imul
jbe
mov
in
xchg
inc
ds
mov
loop
ljmp
imul
in
in
insb
int3
pop
ss
add
int
mov
scas
sub
adc
sti
xchg
out
daa
pop
lds
ret
jp
adc
add
mov
push
mov
pop
sub
ret
addr16
aaa
xor
fiadds
lret
iret
das
dec
mov
in
fldt
mov
jp
cli
adc
adc
add
mov
divl
mov
lret
imul
adc
add
pop
mov
arpl
fistl
lret
cmp
sub
enter
mov
xor
je
dec
mov
sub
jmp
inc
cs
std
lahf
cmp
lds
imul
cli
notl
cltd
cs
into
cmp
loope
cmp
sub
add
mov
push
sahf
repz
mov
out
push
mov
sbb
mov
xor
test
pop
repnz
movsl
sub
sub
int3
sbb
test
xor
lock
in
scas
test
dec
xor
mov
pusha
add
ss
cltd
icebp
dec
and
sub
cmp
sbb
xor
mov
das
repnz
inc
jns
inc
jb
add
ret
xor
das
inc
sub
dec
shlb
pusha
repz
scas
adc
inc
push
lods
mov
fs
xchg
sub
mov
sub
js
lock
repz
repz
mov
xor
jg
popa
fnsave
sbb
sarl
xor
jmp
mov
mov
js
call
ljmp
dec
pusha
aad
dec
mov
cwtl
pop
repz
mov
adc
cmp
xchg
mov
mov
jbe
inc
js
call
and
xor
jns
jg
lods
add
jo
fs
or
cs
adc
push
push
stc
sub
sbb
push
mov
xor
xchg
outsl
int
xlat
imull
xor
push
xchg
xlat
push
fistps
mov
cmc
mov
cmp
push
lret
movsb
std
xlat
sar
adc
mov
xor
pop
loop
or
addr16
adc
push
pop
lds
iret
or
mov
dec
sti
or
mov
cmpsl
mov
sbb
fs
xchg
push
pusha
out
not
or
jnp
notl
xlat
push
das
dec
hlt
test
or
jns
mov
jmp
xor
loope
hlt
testb
mov
xchg
int
ret
sbb
jle
ror
std
fdivrl
stc
dec
aas
add
pusha
ret
addr16
xor
pusha
mov
and
test
jl
push
fdivl
repz
cli
jno
jno
cmp
push
popf
loop
mov
pop
dec
dec
cli
iret
sbb
int3
cli
mov
inc
stos
pop
jg
ja
mov
mov
cltd
fisttpl
pushf
mov
scas
iret
rol
jne
mov
mov
ja
or
insb
xchg
mov
insb
xor
loopne,pt
jns
lret
pop
je
mov
int
rcll
mov
xchg
aad
add
mov
por
rcr
mov
std
lcall
cmp
les
xorb
xchg
cld
leave
jg
mov
mov
xor
pop
repnz
push
inc
fwait
sbb
xchg
pop
ljmp
int
xor
ror
test
xchg
or
push
fstps
push
pop
cmp
cld
mov
mov
sbb
pushf
add
fmul
xorl
ljmp
addr16
mov
mov
xchg
dec
inc
leave
xchg
insb
xchg
sub
mov
mov
pop
out
outsb
add
movb
pop
pop
xor
jmp
fdivs
sarl
and
xchg
loop
cmpb
rcrl
popa
mov
fsubrp
clc
idivl
sar
lods
dec
rcl
push
aaa
cli
sub
push
fsts
ja
hlt
pop
adc
mov
adc
pop
sbb
rcll
xlat
shrb
adc
and
out
pop
sbb
cmpsl
aam
xor
push
cmp
push
xchg
imul
inc
push
out
out
cmp
cmpsb
fsubrs
aaa
add
in
in
cmp
jmp
mov
ja
sub
cli
mov
cltd
scas
fbld
pop
xchg
cmp
ds
push
inc
sbb
inc
and
hlt
mov
bound
clc
sbb
xor
hlt
push
or
adc
sahf
fldl
int
add
pop
out
mov
and
jmp
hlt
js
jb
pop
push
push
imul
sbb
cmp
cld
xor
mov
test
xor
icebp
lds
xchg
fldt
fstps
js
cmp
enter
xor
jmp
lds
inc
sbb
enter
hlt
hlt
mov
pop
xchg
lcall
clc
dec
dec
les
pop
jae
pop
and
out
mov
lock
loop
lods
pop
xor
sbb
in
xchg
or
scas
xchg
insl
fldcw
xchg
mov
js
and
in
dec
xchg
inc
mov
test
iret
mov
push
adc
adc
and
test
mov
push
test
or
or
mov
in
sbb
mov
push
shll
jp
fcoms
movsb
aam
mov
push
ja
sti
out
ret
mov
and
aad
fcmovbe
pop
add
shll
popa
cld
nop
cmp
mov
es
jo
mov
orb
mov
sub
mov
aas
test
fsubrp
enter
sub
les
or
jl
push
mov
arpl
daa
push
and
int3
mov
in
sub
inc
jmp
adc
pop
sti
sbb
es
jbe
mov
fstps
loopne
int3
out
int3
fsubrs
inc
clc
fistpll
aaa
shll
inc
or
out
mov
sbb
mov
out
jle
push
out
adc
clc
pop
filds
bound
aaa
adc
addr16
std
mov
sub
dec
xor
dec
jnp
dec
mov
enter
lcall
mov
or
xor
mov
push
out
sha1rnds4
ret
xlat
inc
inc
add
pusha
icebp
pop
das
pop
pop
jl
fdivrs
xchg
ljmp
in
adc
stos
repnz
mov
sahf
pop
pop
push
std
sub
adc
out
int
repz
pop
clc
int3
cmp
into
lods
repnz
iret
xchg
mov
clc
adc
nop
lea
sbb
push
aam
cld
in
decl
lock
aaa
push
lahf
cld
and
inc
nop
dec
push
add
push
sarl
mov
xchg
outsl
xor
jp
lock
sub
repz
push
mov
inc
enter
xchg
std
mov
pop
inc
xchg
jg
int3
addb
lahf
rorl
and
sbb
jns,pt
movsl
daa
call
inc
nop
xchg
add
or
cmp
arpl
and
or
outsl
and
sbb
outsl
aaa
xchg
sub
clc
push
adc
sbb
xchg
lea
loope
add
jns
mov
mull
sub
shr
ss
ret
adc
ficompl
jbe
jg
test
popf
dec
addr16
rcrb
cld
lahf
scas
imul
ret
nop
mov
mov
adc
popf
setno
adc
pop
xchg
pop
mov
sarl
jno
jae
fisubl
sbb
xchg
push
loopne
xor
ret
out
push
xchg
xor
adc
xchg
rcll
add
cmp
add
sbb
inc
cmp
aad
xchg
fs
and
loopne
mov
inc
hlt
jecxz
mov
xchg
cmp
cltd
jnp,pt
stc
fcoml
mov
sbb
in
sub
daa
push
add
jge
lock
aaa
cli
lret
cmc
or
jb
sti
gs
shll
adc
mov
adc
fsubrl
cmp
sub
and
ret
imul
outsl
insl
fldl
scas
xor
movsl
movsb
negl
in
fwait
dec
iret
fdivrp
sti
sbb
sub
push
mov
mov
out
ret
push
iret
sbb
cwtl
xlat
mov
shrl
setnp
push
cmpsl
cmc
mov
dec
push
push
xchg
mov
cli
xchg
in
es
outsl
add
mov
xor
add
cmp
cmp
cmp
test
jp
pop
xor
sahf
jo
rcrb
and
push
mov
stc
pop
loopne
repnz
add
jmp
pop
test
xchg
inc
rol
pusha
pop
dec
iret
dec
ja
rolb
lcall
out
pop
push
mov
ja
xor
xchg
cmpsl
stc
sub
cmpsl
xor
int3
jbe
lret
scas
in
sarl
or
jl
adc
movsl
jno
jecxz
mov
dec
add
add
or
mov
push
dec
inc
or
dec
arpl
cmp
inc
cmp
and
into
or
stos
loopne
and
push
mov
mov
in
pushf
mov
leave
adc
inc
xor
mov
and
lods
ss
or
mov
mov
cmpsl
mov
cmp
adcl
push
ret
push
ret
xchg
dec
push
nop
push
rcll
pop
mov
adc
in
mov
dec
rcpps
mov
enter
adc
hlt
idivb
iret
testb
add
jno
jb
jecxz
test
fwait
ljmp
sub
push
jb
jb
repnz
add
popl
std
shlb
push
mov
dec
push
sub
sbb
js
lds
cmp
leave
pop
lret
cmp
mov
nop
out
loope
xchg
data16
andnps
lods
pop
pop
nop
shrl
stc
pop
adc
sahf
add
sub
shrb
and
rolb
adcl
cmp
das
popa
mov
sbb
adc
aaa
fisubl
adc
sbb
mulps
sbbl
dec
mov
rcrl
cld
ja
inc
out
cltd
xchg
fcmovnb
dec
in
gs
imul
dec
stos
dec
xchg
ljmp
scas
pusha
inc
outsl
pop
push
outsb
sub
jno
es
xor
jecxz
cmp
ret
fwait
mov
push
xor
inc
dec
lock
addr16
fs
sarb
xor
fldenv
cs
mov
loop
sahf
scas
hlt
lret
add
pop
mov
in
add
lret
into
test
xchg
leave
icebp
in
pop
fistpll
sahf
dec
out
mov
dec
fidivl
test
xchg
int
loopne
and
mov
inc
inc
sbbb
add
inc
sbb
jg
fbld
leave
jg
mov
and
outsb
test
dec
jo
repz
mov
cmp
jb
add
out
repnz
sbb
lret
jae
rcrl
adc
adc
sbb
arpl
mov
popf
ja
add
mov
movsb
pop
addl
push
mov
imul
inc
mov
addl
jno
add
out
fcoml
cli
mov
mov
pop
aaa
cmp
popf
test
inc
cmp
jb
and
cmp
pop
pushf
lret
cmpsb
inc
and
lock
cs
inc
out
mov
aas
jle
dec
divb
sbb
pop
ljmp
jge
mov
mov
lods
imul
and
rclb
adc
push
sub
pop
adcl
lahf
jle
add
jp
mov
scas
push
int
and
imul
hlt
cmp
xor
negb
pop
lea
xchg
add
shll
ret
pop
clc
push
jne
movsb
rorb
pop
cmc
push
or
cmp
or
mov
addr16
lret
dec
mov
shlb
cmc
orl
pop
je
rcrl
xchg
fiadds
add
notl
push
or
mov
fistps
add
sub
ret
cmp
pushf
and
mov
scas
xor
fidivrs
add
sbb
incb
mov
pop
ret
dec
mov
add
ret
xchg
push
inc
mov
dec
add
in
xchg
dec
sub
pop
movsb
sbb
or
out
fwait
js
dec
mov
bound
pop
sub
add
push
cld
and
mov
fdivrl
push
and
test
mov
sbb
push
std
aas
dec
jle
xor
dec
pop
dec
sub
mov
stos
inc
dec
into
and
adc
fwait
inc
xchg
addr16
outsb
in
jge
xor
out
bnd
sbb
cwtl
je
loope
cmp
pop
addl
mov
out
in
call
inc
add
add
inc
mov
mov
jae
sub
push
in
adc
imul
repnz
inc
nop
push
push
pop
nop
lock
into
fwait
push
push
jl
fs
push
mov
sbb
pop
mov
cmp
cmpsl
stos
jns
call
mov
add
mov
inc
sbb
xchg
cli
mov
cld
cmp
xchg
jmp
xor
test
daa
mov
and
cwtl
repz
dec
call
outsl
mov
shll
and
lods
popa
in
lret
sub
fisubrl
adc
xor
iret
dec
enter
int
ss
xor
lcall
inc
aas
leave
sub
ljmp
stos
pushf
ja
xchg
jbe
pop
incl
test
jae
sbb
jno
lcall
fistps
push
jge
test
inc
call
mov
pusha
ljmp
xchg
orb
jns
and
inc
push
test
jae
dec
cmp
lds
mov
aas
sbb
js
mov
xchg
jns
lret
movsl
leave
in
fsubl
and
push
ljmp
pushf
ja
enter
mov
xchg
mov
icebp
jecxz
sti
pop
aas
pop
mov
jmp
mov
mov
pop
inc
jg
inc
mov
daa
cwtl
inc
push
cmp
add
xchg
inc
adc
jl
cwtl
in
cmp
jo
cwtl
inc
cmpsb
sbb
dec
lret
fwait
rcrb
sub
jno
lret
xor
mov
and
cmc
sbb
mov
ss
orl
mov
das
ss
mov
mov
adc
divb
lcall
pop
inc
decl
lods
or
ds
sub
and
jbe
lahf
mov
loope
shll
inc
jl
rorb
lock
loop
pop
int3
nop
mov
sub
clc
inc
adc
dec
xchg
out
sub
mov
aas
aad
into
xchg
inc
mov
mov
and
lds
push
add
and
icebp
or
ja
hlt
mov
and
repz
push
mov
add
jne
mov
rorl
rorb
rorl
mov
dec
fs
mov
lock
mov
mov
out
cmp
jge
add
test
inc
fs
lods
inc
mov
add
enter
out
push
add
adc
insb
ret
push
aas
outsl
pop
inc
jno
aaa
out
xchg
lret
jle
and
pop
testb
roll
mov
cmp
sbb
imul
cmp
xor
ljmp
jnp
mov
xor
lods
xchg
ret
add
aaa
aaa
pusha
das
aam
fwait
push
sbb
cmp
fstpt
loop
mov
inc
stos
cltd
xchg
lods
jmp
cmpsl
mov
hlt
push
test
jne
ljmp
pop
jmp
inc
add
mov
adc
arpl
mov
out
add
in
pop
loope
in
data16
xlat
inc
mov
pop
mov
jne
or
adcl
inc
fucom
mov
pop
xchg
and
ret
pop
adc
out
aam
test
insb
out
or
pop
dec
in
fcompl
xchg
xcrypt-cfb
cmpsl
and
fidivrl
data16
rcll
lds
adc
sbbl
mov
in
push
sbbb
int3
cmp
mov
or
or
pushf
repnz
cwtl
testl
sub
dec
lahf
mov
push
outsb
or
jl
stos
jne
mov
cltd
fmul
rorl
fisubs
fsub
cltd
inc
jns
fildl
mov
cmc
and
push
les
ss
clc
out
mov
sub
sbb
dec
pop
jbe
jnp
ljmp
imul
iret
jecxz
xor
xchg
leave
lahf
pusha
incl
adc
push
push
sub
inc
push
ljmp
jmp
enter
clc
in
sub
pop
pusha
out
sub
cli
or
mov
jnp
add
add
jb
cld
and
pop
gs
negb
pop
sbb
jae
push
sti
shrb
out
adcb
add
cmpsb
xor
mov
inc
enter
xor
xor
fldenv
pop
jg
lds
aad
movsb
popa
pop
fimull
pop
add
in
sti
popf
test
adc
or
cmp
negb
adc
inc
das
or
cs
mov
mov
mov
ret
cmp
in
fs
mov
mov
pop
ja
insl
mov
movsb
inc
lcall
jbe
cs
and
jmp
shll
das
aaa
daa
sahf
push
xor
mov
dec
sbb
and
and
push
clc
jmp
out
add
add
lcall
fcomps
clc
icebp
loope
dec
mov
out
orl
xchg
cwtl
movsb
ljmp
mov
xor
push
imul
xchg
fiaddl
data16
and
aam
ret
push
out
in
dec
ret
adcb
test
imul
in
mov
pop
imul
cmp
adc
sahf
adcl
cmp
sbb
xor
push
rol
in
inc
nop
xchg
call
push
mov
fisttpll
or
je
loope
hlt
mov
ror
imul
sub
sub
ljmp
mov
fsubrp
decl
cld
adc
xchg
daa
sti
xor
aad
int3
and
xchg
pop
xchg
shll
xlat
loop
mov
mov
pop
leave
jns
dec
adc
push
ljmp
clc
or
cmp
inc
pop
jns
mov
mov
aaa
testl
sti
or
sub
sub
test
xchg
out
adc
jne
mov
cmp
movsl
ret
cmp
sbbl
sub
mov
test
pop
popa
mov
jnp,pn
cli
mov
sti
xchg
pop
out
pop
xchg
inc
push
or
push
xor
lds
outsb
ret
ss
push
scas
loope
les
and
and
jae
sub
dec
xor
xchg
inc
inc
sahf
lahf
pop
dec
jo
cmpsb
jns
sbb
mov
dec
outsl
xchg
xchg
or
out
imul
sub
xlat
mov
insb
lret
jbe
rcrl
jle
jno
mov
idivl
fldcw
push
inc
insb
pop
lret
push
mov
mov
sub
es
test
mull
jle
es
inc
call
push
xchg
jecxz
enter
icebp
shl
dec
jns
or
test
sahf
icebp
adc
int
cli
mov
and
fistps
pop
cmp
jns
dec
loopne
jecxz
movsb
mov
outsb
push
cmpsb
xor
add
shr
cltd
inc
ss
mov
leave
js
fs
andl
hlt
lock
push
out
mov
rolb
out
mov
mov
repz
rolb
or
scas
scas
aam
cmp
jne
adc
data16
mov
or
jle
cs
filds
fwait
jno
or
js
out
insb
inc
orb
mov
out
xchg
pop
fucom
add
or
std
add
xchg
cs
hlt
insl
js
lahf
cmc
mov
mov
jp
push
sbb
sbb
out
sub
shl
adc
sub
and
imul
cmp
in
mov
sbb
dec
xchg
add
push
int
scas
pop
faddp
rcll
xlat
and
enter
mov
loopne
pop
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
xor
xor
and
movl
mov
sub
mov
and
mov
xor
add
mov
movl
mov
sbbl
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
xor
push
mov
mov
add
mov
mov
mov
mov
jmp
push
add
mov
add
repnz
mov
bound
pop
bound
pop
pushf
dec
or
and
lret
bound
leave
fsubrs
cmp
fdivrs
sahf
test
mov
nop
std
cmp
imul
mov
in
or
xchg
pop
push
mov
push
and
in
xor
mov
xor
in
into
mov
or
xor
sbb
ret
outsb
sub
fstps
aam
push
push
mov
cltd
jno
jl
jae
push
fldt
incb
push
mov
adc
jb
insb
mov
mov
jo
cmpsb
lcall
repz
stos
pop
dec
jmp
mov
mov
in
enter
out
clc
je
cld
ja
push
fstpl
scas
jp
test
mov
sbb
xor
fsubl
loop
push
cmpsb
mov
outsl
mov
mov
fwait
fwait
and
test
dec
push
dec
mov
aaa
cmp
sub
scas
jo
xchg
cmp
rolb
inc
stc
dec
dec
push
je
mov
dec
jle
pop
dec
push
cmp
sub
inc
pusha
inc
dec
mov
add
into
std
pop
xorb
out
in
mov
lret
mov
rcrb
jne
ss
mov
pop
lcall
shlb
mov
jl
imul
iret
dec
fstl
fiaddl
in
adcb
push
scas
mov
imul
adc
adc
out
into
sub
xchg
int
stos
push
adc
imul
push
movsb
or
push
xchg
xor
fwait
aam
mov
call
bound
mov
push
add
rcll
mov
push
mov
idiv
scas
mov
xchg
push
lcall
push
movsb
dec
ss
cmp
fstl
mov
xchg
pushl
aam
sub
or
inc
lret
inc
fwait
mov
cwtl
add
dec
lret
cmp
add
push
or
jae
dec
sbb
ficoml
int3
sbb
mov
add
std
stc
movb
sbb
in
dec
mov
or
mov
adc
xlat
lock
fcompp
pop
lods
xchg
iret
adc
cli
ret
xchg
int3
sub
shll
or
enter
push
mov
sub
push
pop
testl
orb
frstor
mov
aad
cmovns
lret
dec
decl
dec
icebp
dec
sub
xlat
mov
adcl
inc
std
dec
mov
and
sub
mov
addr16
sbbl
add
fdivl
add
mov
inc
enter
movb
and
dec
cmp
js
jb
fidivrs
dec
nop
cltd
push
iret
daa
and
add
pop
loop
decb
push
mov
cmpl
pop
dec
mov
sub
bound
dec
adc
jbe
pop
adc
loopne
or
sbb
lock
movsl
shl
gs
fisubrl
movsb
fs
sub
fstps
popa
xchg
lahf
mov
push
xor
movsl
mov
loopne
dec
outsb
lea
jge
test
loop
dec
push
or
dec
in
popa
lahf
cwtl
faddl
cld
sbbb
bound
cltd
cmp
test
push
xchg
jbe
aad
adc
bound
push
lahf
mov
sbb
and
jbe
fs
pop
push
dec
push
cmp
leave
cmc
dec
sub
mov
xlat
scas
adc
and
mov
xchg
push
lret
fadds
clc
sub
adc
xor
loop
push
frstor
jb
push
sbb
pop
xchg
stos
push
sub
lds
pop
fisttpll
and
aad
cmp
sbb
pushf
arpl
jp
mov
xor
mov
sarl
mov
je
dec
mov
mov
movb
sbb
out
jne
lcall
add
rcrl
outsl
lods
filds
inc
mov
sbb
mov
inc
mov
mov
notb
shrb
test
xchg
cmpsl
jnp
fdivl
jle
negb
mov
cwtl
inc
fwait
jle
sub
xchg
call
pop
pop
mov
aam
js
das
mov
sbb
insl
jae
xchg
mov
andb
out
mov
pop
dec
add
sbb
fdivrs
lahf
push
mov
and
mov
jg
stos
cmc
xchg
ret
jg
mov
adc
mov
loopne
scas
mov
inc
xor
test
cmpsb
or
mov
xchg
inc
cmp
or
hlt
and
or
adc
pusha
dec
cmp
sbb
push
clc
mov
cmp
inc
pop
xor
arpl
popa
mov
call
iret
lret
cmp
push
xchg
push
in
ljmp
inc
lahf
inc
xlat
and
pop
inc
mov
adcb
jecxz
je
xor
ljmp
adc
cmp
xchg
mov
in
ret
enter
daa
test
mull
jae
jmp
test
jo
or
mov
icebp
xor
ss
inc
add
shr
les
repnz
into
jp
push
cmp
sub
dec
pop
ret
fs
das
dec
sub
sub
xlat
imul
ret
pop
or
sub
jbe
imul
cli
add
ljmp
or
mov
int
mov
mov
jnp
loop
call
xchg
xor
fwait
mov
pop
rcrb
push
jmp
xorb
or
movsl
and
stos
aaa
shll
push
roll
pushf
jae
adc
je
outsb
cmpsb
hlt
mov
jle
out
mov
addl
fs
push
inc
ret
leave
lods
jmp
test
in
cwtl
ljmp
jno
xlat
push
inc
call
dec
sti
sub
push
push
add
mov
movsb
or
and
pop
xchg
jp
sbb
enter
add
fimuls
xchg
jae
ds
mov
shll
rcr
aam
add
sub
fdivr
pop
gs
outsb
dec
aaa
dec
adcb
xchg
movsl
aam
cmp
outsb
shrb
cmp
sbb
inc
es
fwait
loop
push
ret
nop
adc
sahf
shll
int
shll
test
mov
adc
cmp
jp
cmpsb
cmp
daa
scas
std
jle
fwait
in
mov
xor
and
jae
dec
sbb
mov
mov
les
inc
inc
xlat
daa
sub
jmp
out
lret
sub
push
dec
pop
push
jecxz
or
popf
loop
lea
jle
cmp
jb
adc
push
fistps
xchg
mov
cwtl
pop
aas
or
mov
aam
push
pop
cli
jecxz
outsl
mov
xchg
xchg
dec
outsl
arpl
xlat
call
arpl
test
mov
pop
ffree
mov
xchg
nop
lahf
enter
test
std
add
mov
enter
stos
and
inc
lcall
and
dec
clc
ret
call
lods
gs
or
cmp
fsts
sbb
mov
sub
ret
or
xor
jl
stos
jmp
mov
jb
scas
icebp
mov
xchg
xor
pop
adc
mov
gs
xor
push
push
fistps
sbbl
add
sahf
lcall
stos
mov
jo
sub
jmp
jmp
push
and
xchg
in
cmp
mov
dec
push
cmpxchg
jb
mov
push
call
jl
push
sub
mov
push
nop
xchg
xchg
divb
in
mov
loopne
jne
outsl
jle
vpor
dec
add
adc
cltd
shrl
in
lock
inc
xlat
sahf
mov
gs
mov
add
sub
mov
sahf
or
imul
stos
inc
fnstsw
negb
pop
insb
outsb
mov
mov
dec
mov
mov
es
dec
mov
js
dec
ds
outsb
mov
out
jle
jg
cmp
xchg
cmp
lods
push
xchg
mov
add
jge
popf
jo
ja
std
cld
and
cmp
or
xchg
outsb
adc
adc
ds
mov
inc
cli
inc
insb
pop
pop
cmp
aaa
imul
mov
shl
and
icebp
add
or
mov
insb
arpl
push
outsb
out
dec
in
dec
cmpsb
setnp
adc
mov
dec
xchg
lcall
sti
dec
sub
jns
icebp
adc
hlt
cmc
outsl
cmp
jo
adc
lock
mov
jg
lods
fsubl
sbb
pop
imul
addr16
popf
push
insl
pusha
outsb
orl
or
sub
mov
icebp
jp
mov
mov
inc
cs
xchg
sarl
add
ret
xlat
aaa
aad
nop
das
and
aad
mov
mov
adc
clc
inc
lock
xlat
gs
lret
adc
roll
or
sub
ss
or
test
aad
pusha
call
pop
inc
into
cmp
scas
call
outsb
pushf
adc
mov
mov
std
jecxz
rclb
xor
cltd
lea
bound
fcompl
rorl
add
jecxz
subb
icebp
out
push
sbb
pop
fildll
mov
jne
jnp
test
fisubrl
mov
dec
dec
decb
xchg
out
push
jb
lahf
or
int3
jne
mov
push
mov
cmp
push
cmp
ret
mov
enter
cwtl
lods
jo
stos
dec
out
rcll
sub
or
pushf
mov
cmp
pop
jnp
imul
movsb
sbb
dec
out
cs
inc
stc
mov
or
ror
mov
and
cmp
orl
mov
repnz
sbb
je
mov
xlat
pusha
sbb
call
inc
adc
pushf
cmpsb
dec
shlb
add
fldlg2
enter
and
xchg
aaa
testb
aad
stos
inc
sbb
hlt
mov
daa
fdivrs
icebp
pushf
dec
add
stc
mov
or
or
sbb
out
add
cmp
mov
pop
shl
cld
mov
fwait
daa
imul
xchg
jne
adc
adc
mov
inc
mov
mov
cmpsl
mov
into
xor
xchg
hlt
push
jge
fsubrs
test
cmp
xchg
jnp
dec
lock
mov
adc
rorl
jns
push
push
movsb
and
jg
outsl
std
das
xchg
xor
push
push
push
jp
movsl
push
xorb
in
data16
or
loop
ret
push
mov
cmc
subl
clts
loopne
fstl
in
jp
cli
fistpll
out
insl
push
ret
shlb
aam
jns
out
xchg
pop
sub
xchg
lcall
mov
mov
fisttpll
lods
idiv
or
inc
js
leave
add
aad
or
scas
imul
mov
inc
mov
adc
insl
sbb
shl
mov
rolb
ljmp
inc
imul
sbb
lahf
jg,pn
add
pusha
seto
out
icebp
cmp
mov
or
mov
xchg
imul
jge
je
mov
mov
fs
pop
cmp
pop
enter
pop
jne
or
push
bound
cs
push
push
sbb
sub
int
divl
fldenv
scas
sbb
push
push
lret
dec
sbb
cmp
pop
jge
fwait
stc
fimuls
or
pop
int3
test
in
std
std
inc
adc
sbb
repnz
ud1
and
jo
test
iret
movd
lock
mov
pop
rorb
stc
setne
iret
xchg
cwtl
movsl
in
jo
add
cmpsl
mov
push
lret
in
dec
adc
and
outsb
sub
dec
jmp
test
test
iret
or
andb
mov
ss
fists
ds
xchg
add
inc
pop
xchg
fcompl
jns
push
xorb
xchg
pop
out
nop
fst
loopne
lock
movhps
mov
scas
test
cmp
lahf
jecxz
data16
divl
lods
loope
xchg
xlat
sbb
inc
fsubrp
xchg
inc
xor
out
lods
out
add
loopne
addb
lea
jnp
in
inc
dec
js
mov
push
push
test
and
mov
arpl
sub
ret
xlat
aas
xchg
lds
call
jae
inc
movsb
and
add
sbb
add
cli
insl
cmp
pushf
cmpsb
out
jbe
pop
adc
mov
or
shrb
shll
sbb
sahf
in
movsl
or
lret
bswap
sbb
mov
loopne
rorl
and
in
or
push
sti
std
or
fmul
xor
pop
and
mov
es
rcl
mov
xchg
arpl
sub
loope
mov
pop
rolb
pop
xchg
xor
push
lock
push
out
movsl
or
inc
daa
adc
cli
jno
inc
mov
or
pop
ret
mov
xchg
into
icebp
gs
stc
and
int
mov
dec
notl
mov
push
jle
nop
xlat
xchg
mov
imul
or
dec
mov
adc
mov
sub
mov
les
push
push
dec
sbb
fistps
inc
lds
inc
mov
lods
lods
adc
cmp
push
push
xchg
jnp
outsl
or
pop
jnp
cmc
cmp
adc
cmpsl
pop
outsb
jno
jg
aaa
scas
call
adc
and
mov
add
cmc
xchg
xchg
cmp
mov
test
dec
adc
stos
pop
pop
inc
dec
inc
add
loopne
lds
movsl
push
mov
loop
js
pop
cwtl
jecxz
add
mov
aaa
push
popf
mov
xchg
sub
and
inc
jecxz
fcoms
pop
adc
mov
divl
ljmp
or
lods
mov
add
lret
inc
ja
inc
mov
lods
add
xchg
add
dec
sub
insl
lcall
pop
or
cli
pop
fwait
push
test
jecxz
pop
pop
test
xchg
pusha
into
shl
adc
jp
cltd
jne
adc
jle
imulb
inc
fdivs
or
xor
cmpsb
in
nop
jl
nopl
lahf
pop
dec
push
fs
es
dec
push
push
stos
invd
shrb
sbb
scas
arpl
cmpb
or
lods
or
sbb
aad
ljmp
or
cmp
pop
adc
mov
nop
cmpsb
sbb
mov
dec
enter
xor
test
pop
and
or
cwtl
and
and
sahf
out
stos
adc
push
xchg
outsb
and
xchg
jg
adc
pop
mov
lcall
cs
ss
dec
lods
xor
mov
jge
xchg
mov
stc
jge
inc
jb
push
out
and
jg
jae
dec
imul
fwait
ljmp
inc
addr16
jbe
push
mov
shrb
cli
mov
dec
cmp
mov
xor
int3
add
pop
imul
mov
fsubrl
lock
cwtl
dec
ja
adcl
ret
lock
movsl
js
je
int
dec
out
xor
mov
inc
test
lahf
sarb
cmpsb
cmp
dec
out
stos
clc
popf
adc
out
movsb
inc
dec
in
dec
sti
lahf
xor
dec
cltd
cmp
push
dec
push
pop
leave
jge
pop
jl
jmp
inc
in
xor
ret
shlb
mov
clc
movsl
out
in
sbb
cmp
cwtl
stc
cmp
mov
or
push
adc
je
lret
xor
fisttps
sub
repnz
lods
cmp
rclb
les
aad
add
cmp
sub
adc
bnd
cltd
lds
lods
mov
and
push
stc
fldenv
mov
push
imul
sahf
stos
jecxz
fmull
sbb
jnp
or
outsl
xchg
cmpl
mov
pop
add
mov
cmp
xchg
inc
and
adc
es
mulb
sub
dec
jb
out
xlat
xor
dec
mov
pop
sbb
aas
clc
rorl
sahf
or
ja
mov
lods
pop
inc
sarl
jae
inc
sbb
and
shlb
and
mov
sbb
movsb
mov
and
subl
sti
jg
pusha
mov
inc
or
jns
daa
adcl
add
out
repnz
je
push
dec
pusha
bound
push
addr16
push
cmpsl
pop
add
andl
mov
scas
xchg
repz
xchg
in
dec
pop
mov
lcall
ret
sub
mov
dec
inc
xor
stos
popa
xlat
incb
jl
das
push
xor
add
insl
push
sbb
inc
pop
mov
dec
dec
sub
js
clc
ja
jle
sbb
sarb
nop
pop
daa
or
in
or
pop
cmp
xchg
mov
inc
jnp
mov
les
adc
cli
jmp
popl
pop
push
andl
push
inc
out
divb
loope
fists
roll
or
shrb
lods
adc
int
push
fwait
inc
mov
das
add
xchg
xor
jge
cmovnp
add
push
dec
pop
lods
cmp
sub
xchg
pop
sbb
sbb
mov
lret
xor
sub
xchg
or
sbb
or
adc
sub
pop
add
lea
fcmovnbe
lret
and
jne
push
jmp
inc
ds
inc
jae
enter
int3
aad
addl
testb
pop
sbb
cwtl
or
out
xor
jns
insb
cmpsb
inc
ljmp
lea
adc
cli
dec
and
into
scas
ss
push
sbbl
push
jg
pop
jge
in
xor
pop
frstor
dec
fs
inc
es
out
jmp
das
mov
in
lahf
inc
lcall
mov
cwtl
das
out
sbb
loope
fidivl
std
repz
jne
lods
pop
hlt
sub
ljmp
fcoml
mov
fwait
lock
inc
mov
push
orl
leave
pusha
shll
test
pop
call
sub
mov
int3
rolb
imul
sbb
pop
lods
lds
or
xchg
sbb
mov
dec
mov
push
jb
rcll
lds
aas
xorl
lret
lods
in
add
out
repz
mov
divl
or
sbbb
push
mov
ud0
sbb
out
mov
cmpsl
adc
sbb
loopne
xchg
insb
mul
movsl
adc
cmp
popa
ficoml
movsb
dec
jmp
stc
call
pop
sbb
cwtl
call
and
lret
aaa
dec
sub
dec
pop
daa
or
cmp
lods
xor
or
cld
mov
stos
and
dec
test
mov
aaa
dec
sbb
xor
fmuls
insb
hlt
jns
repnz
shl
lds
pop
inc
push
mov
cli
mov
rclb
add
pop
lds
mov
insl
inc
in
rcrb
imul
aaa
std
loope
inc
sbb
fs
adc
pushf
insl
pop
mov
out
jecxz
mov
pop
xlat
addr16
push
notl
and
or
xchg
jne
xchg
mov
mov
pusha
jb
repz
jecxz
cmp
inc
lods
in
xor
jmp
dec
in
or
adc
lcall
shlb
idivb
fisubs
loopne
pop
pop
movsl
mov
fcomps
aad
dec
addr16
sub
stc
pop
outsb
mov
add
popa
sub
sub
cmpsl
or
test
pop
xchg
mov
inc
cltd
sub
fldcw
scas
and
pop
int
push
xchg
call
lea
inc
in
and
ds
or
addr16
aam
pop
and
cmpsb
jle
push
clc
jge
and
int
loopne
inc
dec
inc
inc
lret
and
lock
push
and
movsb
or
pop
loop
sub
jmp
pop
ret
es
cwtl
das
dec
cmp
fsubl
je
sub
mov
es
inc
mov
mov
mov
jae
sbb
or
push
mov
or
arpl
and
sbb
pop
test
leave
ret
dec
ljmp
or
mov
push
jno
enter
fs
dec
ret
add
inc
cmp
sbb
sub
dec
xor
mov
mov
out
mov
and
fsts
dec
mov
outsb
lret
cmpb
lds
test
js
bound
mov
xor
andb
mov
dec
cmp
repz
bound
mov
in
or
ss
xchg
insb
ja
or
ja
xor
xchg
xchg
push
cmpsb
sbb
dec
pop
push
push
xor
in
in
xchg
jbe
cmpsl
pop
fsubrl
out
or
xchg
add
or
mov
cmp
and
sbb
sub
andl
push
fsts
jno
cmp
xor
push
fwait
mov
jo
inc
add
or
rol
jnp
adc
pop
push
jae
je
adc
iret
mov
pop
jecxz
sbb
pop
les
pop
insl
mov
imul
push
mov
int3
xchg
mov
mov
das
mov
sbb
jmp
mov
test
dec
in
inc
in
xchg
inc
xchg
sbb
cltd
pop
sbb
inc
mov
dec
sbb
lcall
movsl
lods
mov
cmp
and
add
fidivl
lcall
push
test
cmp
add
in
push
fs
cs
or
test
fucom
aas
iret
pop
xchg
and
rclb
shll
out
jmp
mull
or
stos
mov
hlt
add
out
pop
jmp
fs
negb
mov
push
fcmovnb
and
ret
xchg
jbe
gs
xor
mov
push
mov
test
sub
sahf
inc
fwait
mov
or
sbb
loope
stos
loope
pop
mov
leave
in
sarl
adc
rcll
or
add
ljmp
ja
inc
dec
inc
jl
push
fadd
mov
dec
movb
sbb
loop
push
jp
fisttps
nop
fcomi
sub
cltd
scas
push
jge
jo
test
lret
inc
add
add
les
dec
cmp
xchg
mov
test
ror
mov
jg
sub
sarl
jge
icebp
test
shll
mov
cmc
in
dec
data16
lock
mov
out
imul
loop
push
ret
add
mov
fbstp
sti
xor
sbb
sbb
xchg
pop
or
dec
int3
lahf
or
cmp
xor
ret
inc
arpl
test
int
repz
sub
cmpsb
out
pusha
cmc
int3
mov
cmp
adc
add
sbb
arpl
and
xlat
adc
repnz
inc
int
inc
test
push
inc
shrb
outsb
loopne
cltd
push
hlt
push
mov
mov
popf
pusha
push
icebp
popa
mov
sub
push
xlat
xor
and
pop
imul
dec
call
jns
mov
mov
scas
jb
jbe
jmp
mov
adc
mov
aad
test
fmul
out
push
lods
inc
inc
jns
aaa
add
jp
popf
mov
pop
and
stc
adc
es
and
bound
xchg
mov
outsl
bound
push
pop
mov
cmp
xchg
scas
insb
and
inc
adc
mov
lods
xor
sub
into
mov
cltd
mov
cmp
jno
pop
iret
in
jno
hlt
fisubrl
es
outsb
scas
push
pop
pop
push
pop
jns
int3
es
gs
ror
mov
sbb
mov
popa
cmp
xor
add
and
addl
push
mov
pop
dec
pop
adc
jecxz
popf
mov
out
cmp
mov
stos
xchg
xor
push
jp
leave
xor
pushf
std
mov
mov
push
xor
fcompl
in
inc
lea
sbb
ljmp
shl
adc
fimull
fstpl
das
out
jle
pushl
xchg
mov
iret
nop
icebp
aad
ret
xchg
in
fiadds
ds
outsl
pop
or
cltd
sar
hlt
pop
scas
call
insl
daa
cs
enter
mov
std
xor
xchg
adc
and
push
inc
mov
cmp
mov
dec
lock
dec
mov
stos
outsl
jg
loope
xchg
fimuls
adc
out
mov
addr16
rclb
lea
test
adc
mov
and
cltd
aaa
ss
les
or
mov
push
xor
sbb
xchg
pop
outsb
inc
xorl
fisubrs
test
enter
mov
xchg
jg
adc
movsb
lret
je
and
jns
push
lahf
jo
rcll
push
mov
enter
add
cmp
xchg
inc
pop
pop
mov
repnz
pop
cmpsl
shlb
jnp
sbb
stos
ja
add
sub
outsb
push
in
pop
cmc
jo
cmp
mov
int3
sub
unpcklps
fsts
pop
or
cmp
in
in
subl
lahf
ret
outsl
mov
test
dec
sarb
jmp
leave
dec
mov
jmp
dec
ret
cmpsb
cmpsb
shll
xor
mov
sub
sbb
and
inc
fstps
js
push
xor
rclb
mov
jge
loopne
adc
rcr
and
mov
jg
dec
lret
rclb
mov
jmp
ss
mov
outsb
rcrb
js
gs
lds
push
jo
rcrb
adc
pop
enter
jp
xchg
test
push
sarl
pop
fdivrl
in
mov
arpl
or
cld
imul
es
push
adc
adc
mov
insb
mov
xchg
pcmpgtw
dec
dec
lods
outsb
outsb
pop
ljmp
xchg
test
cmp
or
mov
jmp
sbb
idivl
faddl
test
clc
jg
sbb
repnz
nop
dec
mov
das
cmp
sub
dec
lock
in
cmpl
test
iret
inc
push
andl
inc
push
sahf
xorb
testl
cmpsb
jno
dec
pop
fnstenv
adc
fs
inc
sbb
push
insl
ljmpw
test
out
mov
sahf
ds
jl
pusha
fcomps
sub
push
popa
jmp
jnp
jecxz
imul
mov
and
push
mov
inc
jg
nop
or
sbb
pop
mov
cmpsl
pusha
clc
fstl
mov
fldenv
sti
fcom
fisubs
push
mov
mov
sarb
out
add
enter
push
mov
roll
pop
lret
popa
notl
mov
stos
add
mov
jnp
popa
lock
mov
out
sbb
mov
sbbb
cmpsl
jmp
ss
stos
mov
rclb
jmp
fcomps
xchg
or
cmpsl
mov
pop
xchg
dec
jmp
dec
loope
or
in
sub
std
jp
call
mov
mov
pop
jb
sub
jb
in
and
aam
pop
jbe
adcb
add
pop
fbld
jnp
xchg
xor
loope
aam
ret
idivl
imul
xor
pop
mov
jl
dec
inc
cmpsl
jns
std
push
lock
loope
in
ret
std
das
sahf
jb
fdivrl
mov
js
jne
mov
pop
mov
sbb
mov
cmpsl
ss
addl
imul
std
jbe
inc
dec
inc
loope
pop
adc
insb
push
aam
cmp
cmc
adc
insb
nop
sub
adc
push
cmc
jmp
sbb
mov
cmp
jl
adc
cld
add
and
loop
mov
push
stos
inc
sbbl
jnp
lret
xor
jns
push
adc
sbb
pop
jecxz
mov
mov
lock
fcoms
and
adc
out
mov
pop
cmp
mov
loope
movsb
lods
int3
sub
in
jns
push
cltd
inc
sbb
je
adc
ss
shr
or
and
add
scas
std
fwait
fs
lret
cmc
dec
mov
sub
cmp
and
jmp
inc
shlb
cs
leave
mov
cmp
sbb
sub
shll
mov
add
movsb
scas
inc
adc
aas
push
lods
and
sarl
push
icebp
mov
mov
inc
xor
mov
imul
xchg
xchg
fs
mov
xor
in
call
mov
dec
loop
imul
xor
enter
dec
mov
jae
add
in
dec
mov
jno
cmp
add
and
mov
mov
fmull
gs
cmp
fidivs
sahf
fidivrl
mov
add
leave
test
repnz
xor
out
data16
pop
sbb
notl
mov
ficoml
fsts
pop
xchg
mov
dec
sbb
scas
inc
cmp
or
jg
loopne
fstpt
dec
imulb
ja
ja
out
cs
int3
aaa
and
rol
adc
xchg
and
inc
xchg
push
addr16
pop
out
jge
mov
jp
insb
and
mulb
out
sbb
mov
cli
mov
or
add
jge
push
imul
mov
or
push
and
imul
cmpl
lods
je
jl
jns
xor
lods
stos
addb
inc
add
fisubl
and
aas
out
pop
or
mov
push
xor
or
lea
push
pop
sbb
adc
lcall
jge
mov
popf
cmp
mov
fdiv
rcpps
hlt
imul
setp
into
cld
cld
test
insl
cmp
cmpsl
xor
jo
sti
mov
lock
movsb
add
cli
add
lret
mov
or
repnz
outsl
pop
cmp
push
inc
add
pop
jbe
data16
pop
jecxz
cmpsl
stos
mov
lock
mov
add
and
popf
idiv
cmpsb
arpl
out
push
aad
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
mov
sub
mov
mov
subl
cltd
sub
push
add
mov
add
inc
adc
push
push
mov
movl
mov
mov
mov
xor
xor
orl
xor
adcl
add
movl
adc
xorl
xor
xorl
xor
movl
cmp
movl
jne
movl
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
orl
mov
orl
mov
mov
orl
xor
adcl
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
pop
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movzbl
sub
push
or
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
mov
and
mov
sub
mov
mov
andl
movl
addl
movl
andl
mov
xorl
mov
sub
xor
mov
mov
sub
sub
mov
orl
add
mov
xor
mov
or
xor
mov
addl
sub
mov
mov
xor
adc
mov
notl
addl
mov
mov
sub
and
mov
mov
xor
and
mov
addl
mov
mov
xor
andl
mov
mov
mov
sub
xor
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
mov
negl
xor
mov
add
xor
mov
sbbl
mov
xor
mov
sub
and
mov
addl
xor
mov
add
movzbl
movzbl
adcl
sub
mov
movzbl
xor
mov
or
mov
xor
add
andl
mov
andl
lea
adcl
mov
adcl
lea
mov
sbbl
lea
mov
orl
lea
andl
mov
adc
mov
sbbl
xor
add
andl
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
lea
neg
mov
push
sbb
mov
mov
lea
add
mov
sub
mov
dec
mov
and
mov
orl
xor
add
subl
mov
xorl
mov
mov
mov
xor
mov
mov
andl
add
movl
cmpl
je
cmpl
jne
push
call
xor
add
dec
mov
jmp
push
mov
sub
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
mov
addl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
adcl
xor
mov
mov
and
mov
add
movl
cmp
je
movl
mov
movl
jmp
mov
mov
cmp
jne
movl
push
jmp
mov
notl
mov
movl
cmp
movl
jne
or
mov
add
xor
addl
add
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
adc
mov
mov
orl
xor
add
xorl
imul
mov
sbbl
xor
addl
add
cmp
jmp
jl
lret
mov
test
rcl
ljmp
bound
pop
bound
fucomp
or
xor
cmp
cwtl
sub
loop
je
imul
or
mov
cmp
lcall
loopne
push
mov
lock
cltd
jns
fwait
mov
inc
xchg
lock
ja
enter
into
jecxz
pop
iret
inc
into
test
xchg
mov
mov
aad
push
sub
xor
cli
rcrl
jne
cmp
and
jl
popf
or
adc
mov
dec
sbb
xlat
mov
cmp
out
in
push
mov
jle
mov
hlt
leave
sub
into
pop
and
inc
dec
test
adc
push
lods
xchg
mov
sbb
negl
mov
or
cli
orb
xchg
lahf
mov
mov
aaa
das
and
loope
adc
mov
inc
cmpsb
lods
notl
arpl
enter
lds
adc
pop
mov
lahf
sbb
popf
mov
sbb
mov
sahf
ficoml
scas
xchg
lea
icebp
push
cwtl
and
mov
and
lods
orb
iret
stos
nop
sbb
add
sub
das
ja
push
xchg
je
or
sub
ljmp
jl
aas
rorl
add
stos
cs
pushf
shr
in
cli
adc
xor
push
adc
inc
dec
cmpsl
add
cwtl
rcrb
sbb
pushf
cmp
dec
fs
sub
rclb
adc
aas
push
nop
jle
sti
mov
test
mov
test
mov
and
mov
bound
imul
fistpll
test
in
rclb
popf
xor
cmpsb
in
ljmp
xchg
scas
out
pop
pop
push
adcb
ss
pusha
push
dec
push
test
loope
or
dec
xor
hlt
push
aad
push
push
cmpsw
repz
sub
scas
aas
rorb
scas
sub
ljmp
mov
and
mov
icebp
push
sub
pop
pop
int
cmp
sbb
fwait
jl
cmp
out
mov
das
js
or
pop
add
pop
add
jmp
inc
cmp
sbb
negl
mov
sub
movl
inc
test
lods
jl
mov
sub
nop
rorb
mov
sub
xor
or
sarl
hlt
xlat
std
faddl
xchg
and
adc
jl
sbb
cwtl
cmp
mov
cs
lahf
filds
push
push
sahf
dec
ret
adc
adc
icebp
xchg
push
push
and
or
data16
rolb
sub
imul
adc
mov
xchg
out
ljmp
in
add
jle
out
mov
dec
test
call
push
daa
push
pop
arpl
outsb
cld
mov
or
into
or
gs
adc
mov
xchg
call
mov
arpl
and
dec
ljmp
mov
into
int
sbb
push
in
in
in
lcall
adc
std
and
rcrl
inc
mov
test
pusha
mov
or
data16
adc
jnp
ss
repz
xor
push
dec
stos
and
pop
lea
enter
xchg
adc
push
inc
addr16
pop
xor
aaa
fadds
ficoms
xor
scas
out
xchg
popl
rol
mov
xchg
out
sub
sub
insb
mov
in
xchg
jl
leave
outsb
or
mov
int
cwtl
ljmp
les
imul
fcomp
cmpsl
insl
cli
sub
mov
xor
scas
add
in
out
out
or
or
andb
mov
add
sub
fidivs
lds
lcall
push
pop
dec
lcall
jno
mov
mov
or
sub
in
jno
and
mov
je
test
out
lea
ret
xchg
mov
add
repnz
je
testb
or
jno
mov
or
push
daa
xor
jno
pop
jecxz
aaa
inc
adc
pop
sbb
ss
in
dec
xchg
push
jecxz
sub
dec
xchg
inc
cmpsl
mov
mov
dec
inc
pushf
sbb
dec
pop
cltd
mov
push
inc
sub
imul
int3
mov
aad
cmp
sahf
push
inc
inc
pop
int3
pushf
in
jmp
int3
sub
cmp
sub
out
loop
mov
loopne
cmc
dec
in
adc
push
sub
mov
sbb
add
push
mov
fsubrl
aam
or
sbb
mov
enter
arpl
bound
imul
sbb
rcl
push
shrl
repnz
fadds
in
or
mov
femms
push
mov
sub
cmpsb
in
popa
cld
leave
pop
lods
cwtl
mov
ljmp
aaa
sub
stos
and
or
xor
or
mov
add
pop
int
mov
pop
out
scas
test
push
mov
insb
test
jle
push
adc
cmp
sub
fwait
orl
push
imul
comiss
dec
jno
add
or
pop
test
in
or
cmpsl
push
data16
stc
and
daa
or
mov
addr16
cmp
mov
push
sti
mov
addr16
jg
mov
pop
add
push
sbb
jecxz
mov
push
stos
mov
xor
lahf
mov
cmp
lret
pop
push
and
mov
cwtl
enter
in
sarb
push
ret
xchg
lds
push
pop
int3
test
inc
cli
pop
xchg
int3
and
imul
insl
push
in
mov
jnp
stos
xchg
in
cltd
loope
outsl
enter
aad
aam
ficompl
repz
lret
and
repz
ss
lcall
inc
push
out
jne
movsb
and
and
pusha
in
cld
in
jg
push
xor
enter
cmp
popf
test
movsb
add
xor
adc
jmp
dec
jl
pslld
push
inc
cmp
push
loope
movsb
mov
aad
add
imul
gs
xor
jmp
pop
nop
cli
int
lcall
sarb
mov
jns
jb
inc
scas
out
mov
addr16
ss
aad
in
arpl
xchg
sbb
and
pop
ljmp
pop
inc
adc
rolb
leave
jb
rorl
test
mov
stos
sbb
sti
dec
rorb
push
mov
int3
movsl
sub
std
cwtl
ret
rcrl
js
das
mov
loopne
popa
ret
aad
imul
imul
jbe
and
inc
sahf
xchg
cmpsb
mov
or
sbb
rorl
sub
adc
dec
pusha
mov
int3
sahf
pop
outsb
lcall
add
out
push
inc
jge
or
mov
and
jmp
jns
jecxz
je
pop
add
sub
stos
jl
push
inc
mov
and
sub
push
cmp
lds
cli
push
dec
inc
cmp
rcrb
lds
jae
loopne
push
lods
cmpsl
and
sarb
push
cs
and
sub
outsb
push
adc
mov
push
or
outsl
out
push
shrb
xchg
mov
dec
dec
stos
add
icebp
movsl
dec
fcoms
in
arpl
pop
mov
adc
add
dec
nop
ljmp
sbb
or
mov
jnp
stos
stos
xorl
adc
roll
cmpsb
imul
jg
sub
cli
test
out
mov
jle
xor
fstpt
fisttpl
es
ss
sub
sbb
cmp
adc
ljmp
movsb
mov
repz
jne
jp
xor
addr16
and
dec
flds
sbb
push
push
adc
sti
inc
mov
fwait
xchg
aad
sub
push
call
add
dec
inc
fcomps
xor
add
jne
xchg
inc
jmp
cli
pop
loopne
out
push
sbb
mov
xchg
aaa
jle
xor
jb
mov
jo
pop
test
jno
push
cmp
testb
stc
fs
pop
std
cmp
mov
xchg
mov
in
pop
inc
out
mov
out
fisubs
in
shlb
mov
mov
insb
mov
pop
sbb
mov
push
sbb
jmp
sbb
js
arpl
outsl
stc
sbb
mov
pop
icebp
in
pop
pop
test
leave
arpl
fiadds
jg
test
mov
and
js
inc
ss
cli
or
xchg
sti
sar
ror
imul
inc
cli
je
push
int3
imul
or
lock
hlt
push
cmpsl
jl
lods
cmp
testb
inc
rorb
sub
out
xchg
test
jl
cmp
sub
sbb
sbb
jmp
mov
xchg
cmp
shl
ljmp
enter
jge
scas
mov
ja
xor
leave
outsb
cmpsl
sub
dec
inc
ja
data16
fdivs
in
push
and
jo
or
or
out
insl
push
stos
mov
inc
out
fistps
mov
adcl
add
fisubl
ds
stos
mov
adc
in
mov
pop
sbb
movsb
sbb
insb
cmpsb
movsb
mov
dec
xchg
mov
jno
xor
sub
pop
add
push
jl
mov
jl
xchg
push
jg
push
mov
cmp
filds
mov
jg
dec
loop
sub
sub
pslld
xor
arpl
stos
lods
mov
mov
xor
outsb
mov
hlt
int3
or
mov
fnsave
inc
xor
mov
pushf
mov
hlt
lods
mov
inc
sub
push
pop
jns
xor
sbb
in
sbb
xor
mov
in
or
lret
dec
insb
xor
dec
aas
fmull
add
mov
inc
fmull
inc
xor
dec
or
orb
fdivrl
cwtl
subl
sub
les
pop
xor
adc
bound
bound
outsb
mov
fnstsw
int
or
aam
stos
arpl
std
sbb
push
cmc
push
dec
inc
dec
sub
clc
xor
repnz
push
and
cmpsl
and
xchg
jo
add
dec
fcomp
scas
jle
sbbb
push
test
pop
psubsb
in
lret
scas
fsubp
call
test
jle
mov
scas
add
cli
movsl
jo
insl
scas
inc
sub
xlat
in
movsb
roll
xchg
in
push
add
popf
push
fwait
mov
test
inc
int
lods
xor
mov
sbbb
shlb
mov
jnp
je
xor
push
hlt
loopne
lock
push
mov
test
movl
sub
lret
mov
push
push
push
dec
out
ja
sub
das
pop
mov
sbb
es
or
out
fs
movsl
adc
aad
cs
test
insb
mov
je
rolb
sub
pop
out
push
movsl
rolb
test
pusha
jmp
mov
sbb
push
loop
cmpsb
ja
clc
and
push
push
push
pop
movl
in
ret
push
stc
mov
ret
mov
pop
push
nop
push
push
sub
lret
jmp
int3
loope
fwait
aad
xchg
or
mov
xor
xor
fs
psrld
xchg
data16
and
xchg
mov
in
jl
jp
cltd
insl
aaa
dec
fcompl
push
mov
adc
xor
mov
push
leave
imul
gs
scas
cmp
mov
push
mov
int
cmpsl
pop
mov
cmovno
fildl
jns
addr16
je
cmp
sarl
movsb
dec
rcrb
fs
push
testb
mov
jnp
xor
lea
pop
dec
add
rol
xchg
std
fstl
fwait
jb
inc
lret
sbb
push
inc
xchg
loop
test
out
xchg
outsl
roll
xor
aad
pushf
shlb
and
faddl
mov
mov
lock
in
add
push
push
sbb
xor
jmp
mov
xor
sub
test
cli
adc
icebp
ljmp
icebp
movsl
shrb
xchg
adc
pop
jp
lds
push
pop
int3
mov
jmp
std
rorl
movsb
and
mov
clc
rcl
xor
fldenv
xor
jb
jg
imul
lods
sti
fcmove
repnz
inc
xor
jae
mov
bound
pop
orb
in
testl
pushf
imul
stos
adc
frstor
ficoms
cmp
cmpb
cmp
or
lods
cld
pop
lcall
ds
icebp
inc
sub
sub
jb
inc
and
in
mov
cltd
push
push
add
or
mov
pop
cmpsb
cwtl
xchg
in
mov
cmp
jae
xchg
mov
jns
les
cld
mov
cs
pop
xchg
add
ret
aas
mov
in
jnp
test
xor
sub
jmp
jecxz
and
sub
daa
sbb
push
dec
in
sti
repz
sub
loope
cli
mov
mov
xchg
int3
xor
loopne
outsb
push
lahf
scas
adc
popf
mov
mov
imull
and
lods
push
xlat
dec
dec
adc
sub
push
hlt
lcall
or
adc
cmpb
ja
mov
gs
and
insb
or
sbb
rcl
rclb
enter
pop
push
lock
pop
mov
add
pop
dec
fimull
add
dec
xor
movsl
push
cmp
sar
dec
sub
lods
and
jne
shl
push
jb
cmc
ret
cmpsb
lret
jnp
enter
pop
dec
mov
int
mov
outsb
rorl
sub
inc
fisubrl
push
mov
jbe
jmp
xlat
iret
push
icebp
ss
dec
sbb
loope
dec
das
ljmp
arpl
jb
xchg
ds
mov
xchg
cmp
adc
jg
stc
pop
aaa
cltd
push
inc
lea
mov
rol
xchg
or
pushf
mov
lea
adc
sub
jnp
xchg
cli
imul
push
call
and
ret
inc
aad
fcomip
or
outsb
sbbb
jo
dec
or
pop
pop
scas
lahf
aaa
mov
scas
dec
push
addr16
mov
imul
rolb
and
into
xor
pop
in
pop
mov
jg
movsb
dec
adc
lret
lock
sbb
into
roll
fistpl
xchg
loope
push
mov
rorb
mov
xchg
cwtl
stos
cld
dec
movsb
sbb
fs
filds
mov
fmull
cltd
roll
push
mov
pushf
pop
hlt
test
lds
out
push
es
pop
or
hlt
add
cs
add
push
push
iret
fcom
lret
cmpsl
sti
mov
les
mov
pop
mov
mov
loopne
inc
dec
cmpsb
ds
daa
push
dec
out
sbb
jb
push
ljmp
ret
popl
pop
jmp
lahf
mov
aam
ja
fidivs
outsb
les
mov
sub
mov
push
mov
mov
rcrb
dec
sbb
sub
xor
mov
leave
aaa
orl
insl
adc
jg
push
or
jl
inc
test
addr16
mov
pop
xchg
out
mov
call
lock
pop
add
ja
aad
out
fsubrs
push
mov
nop
mov
adc
jae
and
or
mov
push
jo
in
rolb
repnz
test
push
xor
pop
mov
in
inc
xchg
sbb
ja
cwtl
hlt
inc
arpl
daa
xor
pop
jnp
cli
mov
ret
jge
and
test
lods
stos
jo
jge
sbbl
xor
and
or
lahf
aad
rorl
insb
or
jne
repnz
jp
jle
dec
cs
jns
es
mov
dec
mov
stos
ret
cli
sub
mov
out
and
fcmovbe
clc
stc
xor
sbb
adc
scas
mov
pop
test
movsl
and
cltd
mov
mov
testb
rcr
sub
and
jb
mov
dec
or
mov
pushf
jg
jecxz
out
mov
jecxz
movsb
xor
es
adc
mov
imul
jae
cmpsb
outsl
cmpl
jg
adc
cs
mov
jae
nop
cmp
add
adc
je
push
ret
mov
imulb
xchg
mov
fwait
stc
or
in
sub
push
cmpsb
das
mov
aam
jp
add
sub
cmpl
subb
jmp
in
rclb
mov
xchg
aad
ja
jbe
mov
insb
dec
mov
jae
ja
adc
or
cmpsl
frstor
add
push
pop
jmp
inc
popa
mov
add
mov
or
xchg
sahf
fisttps
pop
enter
in
pop
inc
ret
sub
sub
fs
adc
cmp
lahf
stos
jno
lret
cmp
outsb
jecxz
cwtl
shl
sub
and
fcmovu
jnp
push
jge
lret
inc
movsb
jle
subl
jnp
repnz
mov
hlt
ljmp
mov
push
dec
push
dec
push
cmp
mov
sbbl
add
mov
cmpsl
aaa
cmpsb
dec
adc
js
aaa
fs
imul
adc
loope
sbb
mov
adc
pop
push
leave
inc
test
xchg
mov
ss
lcall
icebp
scas
dec
in
divl
not
cmc
loope
cmp
insl
push
xor
lret
xor
mov
dec
cli
push
in
pop
std
jne
sub
mov
shrl
shrl
into
sbb
mov
adc
insb
ljmp
xchg
and
dec
enter
imul
sete
mov
pop
add
pop
cmp
jns
enter
pushw
push
lcall
cmp
bound
loope
inc
adc
out
sub
or
addl
movsl
cmp
jae
ja
mov
out
lahf
or
movsb
add
push
push
xor
rolb
stos
mov
mov
adc
mov
push
leave
mov
loopne
div
repnz
push
outsl
mov
movsb
pop
dec
xchg
adc
lahf
sbb
mov
pop
fistps
lods
inc
mov
shrb
cmc
lret
xor
test
ja
mov
xor
xlat
jo
into
sub
ljmp
dec
jl
push
mov
fisttps
ret
aaa
push
jo
and
cmpsl
cmpsl
adc
arpl
mov
cmp
push
es
test
jl
jmp
and
xor
mov
scas
jp
sarl
mov
or
push
jge
fiadds
bound
mov
push
push
notl
leave
pushf
xlat
xlat
xor
movsl
push
hlt
mov
addr16
andb
fstl
push
sti
stos
in
lods
lret
imul
xor
xor
fidivrs
lock
dec
xchg
out
xor
test
jle
jns
cmc
testb
xor
mov
fistpll
loop
cmp
divl
mov
cmp
subb
add
jle
inc
mov
adc
push
jae
xor
xchg
xchg
scas
cmc
test
jb
xor
inc
lea
or
sbb
mov
subl
push
cltd
add
js
mov
lds
add
fistps
mov
fldenv
mov
icebp
push
stc
test
pop
add
add
sbb
std
loop
sti
mov
xor
mov
adc
cld
mov
pop
outsb
lea
shll
cmp
loopne
dec
mov
mul
sbbb
stc
std
scas
mov
popf
insl
sbb
lret
insb
scas
loope
mov
aad
xchg
pop
sbb
aad
outsb
or
test
aaa
sbb
pushf
sub
loope
jo
push
cmpl
pop
push
fadd
mov
dec
cmc
push
mov
in
push
push
cmpl
mov
nop
js
push
push
jns
icebp
cmp
cmp
xor
aam
sbb
idivl
sbb
xlat
xchg
and
mov
jecxz
add
in
mov
push
fadds
lret
cmp
mov
dec
xor
fadd
jb
dec
insb
cli
aam
cmpsb
into
cmpsb
rcrb
orl
push
aaa
out
sbb
outsl
mov
pop
fistpl
mov
fdivr
mov
mov
lret
enter
fistpll
inc
adc
and
jno
loop
cmp
cmp
or
stos
addr16
int
shl
movntq
or
xchg
pop
or
out
jo
add
andb
push
pop
mov
dec
gs
jmp
jp
mov
pop
jb
push
lods
or
cmp
mov
das
cmp
cmpsb
push
call
or
and
mov
mov
pop
ja
shrl
scas
fisttpll
sbb
mov
js
mov
jb
sti
scas
adc
sbb
inc
adc
inc
pop
sbb
fwait
push
imul
jge
stos
xchg
mov
jl
sahf
xchg
push
lds
sti
mov
pop
lock
dec
mov
inc
rcrb
mov
xchg
xchg
adc
lret
in
iret
push
leave
push
mov
call
fildl
daa
insl
inc
push
sub
push
popf
jge
lock
mov
lahf
cli
xor
and
fwait
test
jle
dec
std
push
push
sbb
add
and
xor
icebp
je
push
add
or
push
sub
inc
jmp
xor
dec
mov
imul
sub
pop
xchg
ss
lds
mov
mov
adc
xchg
jae
push
loop
or
fildll
mov
movsl
mov
or
int
popf
ja
popf
jns
dec
push
rolb
dec
sti
scas
xor
mov
in
jb
cmp
push
out
dec
cld
jl
jl
aas
hlt
push
push
or
cld
rolb
xlat
lcall
sub
push
std
jno
push
mov
push
pusha
hlt
sarl
mov
mov
xor
add
xorl
jno
add
daa
nop
test
mov
and
daa
dec
cld
cmpsl
cmpsl
ds
mov
push
mov
loop
ja
into
fadd
fidivs
jecxz
aaa
pop
add
aad
push
pop
push
loopne
xor
jbe
sbb
fidivrs
jno
cmp
and
cmp
icebp
dec
lock
rorb
arpl
jbe
xchg
lds
xchg
rcll
mov
mov
icebp
in
ds
sbb
fdivs
daa
mov
sbb
insb
pop
pop
jae
xchg
adc
mov
adc
es
sbb
lock
repnz
push
mov
xor
sub
repz
loopew
push
hlt
cmpl
fnstenv
and
jle
out
test
xor
int
scas
pop
xorl
mov
sub
out
lock
lcall
addb
mov
jno
cmpsb
dec
mov
jb
cmp
mov
mov
mov
push
clc
stc
push
mov
inc
push
loope
mov
out
ja
or
xchg
jno
push
pop
into
cmpsl
ljmp
xchg
mov
addr16
mov
mov
in
fcom
or
mov
stos
mov
jne
jne
add
ret
pop
pop
mov
insl
jg
in
jle
hlt
call
orb
sti
push
popf
ret
or
lock
call
and
inc
and
xchg
push
lods
cmpsl
cmc
std
ffreep
pop
mov
sti
push
mov
adcl
loope
in
shrb
cmp
loop
adc
nop
testb
addb
or
repz
jle
repz
lea
addl
xchg
je
mov
add
fcoms
cmp
sbb
fldt
ret
lods
cmp
bound
sbb
icebp
sub
cmp
sbb
cmp
dec
or
and
adc
xchg
jecxz
ret
pop
hlt
pop
cltd
inc
daa
fimull
inc
sahf
imul
jg
dec
adc
jnp
dec
push
jbe
sbb
sub
mov
mov
lret
xchg
cs
ljmp
jo
ds
ret
fnclex
repnz
ret
mov
sbb
das
cwtl
and
and
adc
loop
add
stos
gs
xchg
jo
cmpsb
outsb
mov
clc
andb
pop
lock
push
cmp
sahf
fstpt
adc
jns
xor
push
fisttpll
xor
jmp
sbb
shlb
cmp
test
sbb
xchg
daa
or
jo
movsb
xchg
paddb
test
sti
cmp
or
mov
xchg
loop
leave
sub
cmc
xchg
out
add
jnp
in
cltd
int3
nop
pop
out
sarl
lock
cmpsb
ljmp
lods
cmp
add
sbb
cs
les
es
daa
insb
sbb
lods
outsl
mov
pop
pop
inc
or
jnp
lcall
in
cmpl
push
insb
loopne
es
xor
adc
lds
enter
inc
dec
arpl
rorb
pop
sub
add
add
ret
inc
push
repnz
add
aam
xorb
pop
mov
lahf
test
jae
dec
xlat
mov
ret
roll
pop
jb
imul
cltd
mov
mov
mov
jns
pop
cmc
xlat
sub
mov
jb
xchg
and
lock
mov
lock
cmp
mov
repz
pop
adc
dec
push
adc
pop
mov
dec
mov
pop
lret
cwtl
cmc
addl
xor
cmp
sbb
pop
push
jmp
aam
clc
pop
dec
outsb
adc
mov
dec
mov
push
adc
mov
rclb
jno
adc
fsubs
pop
sub
loopne
sahf
outsb
std
adc
push
mov
aaa
lret
push
popf
pop
push
push
xor
adc
movsb
es
in
inc
adc
mov
sahf
cwtl
movsl
xchg
xchg
push
ficoml
push
sub
push
daa
push
xor
fnstcw
es
xor
cmp
enter
das
jle
data16
jmp
mov
xor
std
adc
xor
jecxz
movsb
jo
dec
jo
testb
or
in
movsb
pushf
rcrb
adc
pop
arpl
jp
jge
aaa
sar
pop
rcll
in
int
cmp
jmp
mul
fxch
pop
cmp
mov
xor
aaa
js
and
adc
insl
mov
and
jnp
pusha
movsl
leave
daa
adc
push
and
jle
rolb
stos
test
pop
movnti
xchg
pop
lea
jo
jle
fdivl
xor
std
insb
clc
pop
idiv
fsubrl
adc
addr16
push
pop
aas
inc
pop
scas
insb
lcall
scas
and
sbb
fmull
fisttpl
or
jno
cmp
fdivrp
or
fimull
or
mov
stc
or
cmp
aaa
inc
or
jb
ret
loope
lods
mov
popf
xchg
test
cltd
or
jle
mov
lret
std
mov
outsl
adc
iret
adc
cmp
and
xchg
pusha
ret
cmpsl
sub
shlb
jmp
dec
push
out
jbe
lock
dec
fwait
cmp
push
insb
pop
cmp
cmpsl
dec
and
imul
stos
clc
mov
jns
and
push
iret
int3
sub
sub
negb
and
rolb
test
xlat
dec
hlt
adc
adc
push
mov
mov
fisttpl
out
mov
dec
outsl
aas
cld
xor
push
testl
cwtl
inc
sub
lds
mov
sbb
sbb
rcll
in
adc
notl
ret
test
mov
sahf
hlt
inc
mov
xchg
cmpsl
dec
xor
cltd
addr16
in
jo
aad
push
testb
pop
add
dec
cmc
mov
js
out
push
mov
jno
push
pop
rorb
insb
cmpsb
cmp
test
hlt
je
and
jmp
gs
into
outsl
cwtl
mov
inc
sahf
mov
ror
mov
add
ret
enter
mov
std
sarb
dec
aaa
inc
imul
out
push
xchg
mov
testb
das
test
in
and
xor
movq
push
imul
mov
cld
aaa
dec
je
push
mov
in
call
jno
imul
inc
out
shlw
push
mov
int
cmp
pop
call
testl
in
mov
mov
jmp
in
and
inc
rclb
out
cld
notl
ficoml
inc
cmp
and
rolb
mov
mov
sbb
lret
mov
fildll
lcall
call
and
add
xor
cmp
xor
loop
push
loop
xor
jns
pop
aam
enter
add
jae
gs
nop
jbe
push
movsl
mul
inc
or
repz
addr16
or
mov
insb
hlt
sub
sbb
or
lret
ja
mov
jecxz
scas
jnp
jmp
fwait
mov
decl
lods
inc
out
div
jmp
in
std
inc
jne
and
nop
xchg
mov
addr16
inc
cmp
insl
xchg
mov
xchg
rorb
out
sbb
test
rol
addr16
in
jns
rorb
stos
push
adc
jb
add
push
inc
xlat
pop
shll
mov
cmpsb
mov
and
xor
dec
iret
add
mov
into
repz
or
repnz
pop
stos
add
adc
in
cmpsb
outsb
inc
enter
daa
mov
popa
pop
ja
cmp
inc
icebp
fldt
mov
fldt
fcoms
aas
jmp
cmp
xchg
jecxz
scas
jne
out
js
mov
stos
test
sub
int
cmp
mov
inc
jmp
push
and
fidivl
pop
or
clc
dec
pop
out
stos
jg,pt
push
mov
push
movl
je
or
mov
movl
add
mov
xor
or
or
mov
decl
xor
add
subl
imul
movl
mov
jmp
subl
mov
xor
sub
mov
andl
mov
add
xor
or
mov
decl
mov
sub
add
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
jmp
jge
xor
xor
add
mov
mov
cwtl
mov
hlt
pop
bound
xor
sahf
incb
data16
rorb
mov
data16
jge
jg
or
or
movsl
mov
xor
inc
stc
cmpl
push
jne
cli
adc
and
js
cs
xchg
aaa
sub
cli
jmp
aam
add
sub
sub
dec
cmp
dec
sub
jae
or
ret
movsb
mov
adc
pop
lahf
sahf
mov
sbb
jge
ja
rorb
cwtl
mov
cmpsb
repz
cli
inc
push
roll
mov
test
std
popf
xchg
cltd
in
sbb
xchg
test
dec
mov
and
rorb
ds
jno
push
mov
xor
mov
filds
icebp
push
rep
leave
cld
cmp
outsl
lahf
cmp
sahf
outsb
loope
mov
xor
cs
push
sub
loope
insb
imul
pop
pop
sbb
out
scas
popf
sub
movsl
imul
push
jno
xor
gs
mov
jmp
aaa
fidivl
adc
jle
push
inc
xor
popa
movsl
inc
daa
test
inc
gs
aaa
lods
ja
push
pop
je
ljmp
jp
jl
and
scas
call
pop
enter
mov
cld
mov
aaa
and
out
mov
xchg
sub
movl
jbe
adc
andb
shl
adc
stc
add
es
and
cli
shl
jae
cmp
cmpsl
stos
add
cmp
push
and
or
mov
fcomi
dec
cltd
mov
xor
insb
popf
cmp
pusha
mov
icebp
cmp
dec
pcmpgtw
inc
aaa
icebp
fbld
jo,pn
push
out
lock
pop
cld
pusha
int3
jne
inc
xchg
pop
mov
and
xchg
into
xor
mov
les
aas
jae
xchg
mov
insb
sbb
push
movsl
jno
in
pushf
jmp
inc
hlt
add
pop
pop
test
mov
inc
cwtl
push
es
sbb
int3
lret
mulb
mov
add
push
out
push
daa
ret
out
pusha
and
daa
aad
arpl
xor
cs
jge
push
xchg
nop
cmp
pushf
mov
push
inc
adc
sub
roll
inc
mov
or
repz
shr
push
push
icebp
xchg
loope
and
imul
cmpsl
or
dec
jbe
push
stos
insb
adc
call
mov
or
lods
out
xor
lods
out
es
or
cld
mov
sahf
fstpt
aaa
mov
fdivr
mov
outsl
dec
outsb
jecxz
mov
ret
enter
pop
int3
mov
fimuls
pop
inc
rcll
iret
and
sub
test
aad
mul
jmp
add
pop
lock
jnp
lods
push
or
cmpsl
lods
and
jb
push
roll
or
outsl
cmp
shrl
mov
xchg
leave
push
push
clc
icebp
sbb
adc
fmulp
xlat
test
xorl
loope
mov
fiadds
or
shll
cmc
inc
xor
mov
mov
imul
jo
xor
outsl
jno
lahf
or
insb
and
out
sbb
into
loope
icebp
cmpsl
sbb
psllw
stos
ret
pop
cltd
pop
jp
pop
clc
xchg
ja
daa
push
ret
bound
pop
sbb
pop
cli
cld
lahf
inc
xchg
cs
hlt
shlb
sbb
lds
mov
aaa
pop
push
popl
xchg
push
or
sub
sub
pop
push
pop
xchg
mov
mov
orb
fs
xor
int
mov
pop
sub
lahf
gs
cmp
pushf
sahf
das
test
pop
inc
xchg
xor
lret
sbb
ret
je
or
mov
xchg
push
inc
pop
mov
inc
scas
cmp
in
stc
and
lock
sbb
scas
jmp
push
test
jbe
inc
xchg
js
sub
test
pop
insb
or
faddl
movsl
adc
shlb
incl
jno
cmpsb
aas
sub
sub
sbb
sub
lret
dec
jb
popf
cmpsl
roll
cltd
shl
jo
or
mov
and
cmp
xchg
push
insl
inc
cli
js
fs
lock
gs
fld
cmpsb
add
add
mov
cmc
loopne
push
les
movsb
icebp
jnp
neg
add
movhps
xchg
xchg
or
imul
inc
or
sbb
jno
in
test
push
shrl
fld
mov
pop
jbe
sub
mov
mov
push
xchg
sub
repz
inc
pop
mov
push
lds
mov
pop
ljmp
out
es
orb
sub
pop
add
xchg
xchg
insb
pop
popf
insb
pop
mov
lret
adc
fsubrl
and
sbb
ret
mov
inc
test
sbb
mov
faddl
inc
push
push
dec
and
sbb
pushf
clc
mov
jle
cmpsb
roll
insb
test
sub
aam
lahf
mov
adc
inc
mov
adc
mov
mov
lods
in
jg
in
icebp
daa
icebp
es
inc
scas
pop
add
and
imul
cmp
cltd
jl
imul
mov
ss
mov
mov
roll
sbb
pop
and
into
dec
xor
sar
pushf
sti
push
adc
inc
inc
mov
stc
cltd
add
ja
pop
push
mov
xchg
pop
fdivl
lods
and
repz
push
adc
pop
fisubrs
push
push
or
pop
xchg
xchg
mov
adc
jbe
fisttpll
movsl
push
mov
or
cmpsb
aaa
sbb
sbb
push
xorb
inc
mov
lcall
jp
lahf
pop
popa
rol
and
jo
add
addb
xchg
mov
push
sub
sbb
movsl
xchg
inc
jns
stos
mov
jge
mov
iret
daa
ljmp
mov
inc
inc
in
pop
xchg
push
in
or
cwtl
in
cmpsb
mov
cmc
in
scas
jl
mov
mov
sarl
adc
fmull
push
jl
xchg
sbb
cmp
or
das
clc
fwait
inc
xor
jmp
mov
pop
inc
lods
push
push
nop
movsb
lret
add
mov
xor
repz
mov
pop
cmp
pop
cmp
push
xchg
in
dec
adc
movsl
pop
nop
dec
adc
inc
lods
mov
fwait
pop
sub
rorb
add
lods
xchg
ret
dec
push
jnp
rcr
dec
mov
and
addr16
mov
out
ret
mov
xchg
xchg
cli
dec
adc
or
rolb
inc
outsl
out
xor
ss
pushw
and
inc
add
jne
in
imull
sbb
mov
jge
xor
jo
insb
dec
push
xchg
jo
mov
xchg
mov
lret
je
sbb
in
aam
or
push
imul
fwait
or
dec
jecxz
cmp
cmp
inc
push
fwait
insl
push
add
sti
pop
cmp
repnz
jae
mov
mov
scas
stc
imul
clc
mov
stos
adcl
popf
xchg
jbe
aaa
inc
or
fists
std
fisubrs
push
lret
jle
stos
rcll
call
pop
iret
pusha
fstl
repnz
daa
sub
and
repz
lcall
xchg
movsb
imul
mov
mov
sub
adc
cltd
aaa
adc
jnp
out
out
lods
lock
clc
sarl
out
xchg
sbb
and
jns
xor
ret
roll
shl
popa
insl
test
lahf
dec
add
mov
mov
pushf
aaa
lods
dec
fs
xchg
or
repnz
rcll
jno
mov
push
push
call
push
cmp
jno
adc
sahf
or
and
mov
mov
and
pushf
mov
jo
mov
notl
cmp
sub
adc
cmp
pop
add
jecxz
lret
xor
in
mov
insb
pop
mov
aas
insl
cmp
rol
mov
divb
repz
loop
pop
fsubrs
popa
dec
cmp
es
sbb
pop
sub
sub
jmp
push
stos
mov
daa
sub
les
bound
sub
out
sbbl
and
dec
xor
pop
daa
mov
sti
loopne
xchg
mov
mov
sub
outsl
bound
hlt
movsw
outsb
sub
jns
clc
jle
andl
push
out
lahf
dec
adc
push
adc
mov
xchg
lret
sbb
aas
dec
shrb
mov
lret
lds
lahf
mov
imul
pop
cmp
push
cmpsb
mov
int3
push
add
aam
out
xor
rcll
andb
sbb
sbb
sbb
idivb
rorl
arpl
lods
inc
cmp
loope
inc
dec
push
jne
lods
xorb
sbb
jnp
stc
lds
inc
jbe
fdivl
ret
fstps
fisubrs
push
cli
or
pop
fidivs
mov
pop
mov
addl
push
push
pushf
pusha
mov
inc
lret
dec
inc
aas
adc
out
mov
xchg
fwait
ss
shll
push
cmp
scas
cmp
lahf
sbb
or
jnp
cmp
notb
sbb
mov
fbstp
mov
lcall
inc
mov
xchg
jmp
push
out
fldt
pop
inc
sbb
rcrl
cmc
inc
les
aam
add
test
test
cli
divb
adc
mov
xor
xor
add
xchg
sub
testl
daa
je
pop
jns
insb
clc
push
ljmp
cmp
xchg
mov
cmp
xor
cmp
test
popl
lods
jp
mov
sbb
fisubrs
push
or
push
ja
das
adc
int3
add
lods
es
push
jne
fisttpll
xor
lcall
aaa
shll
adc
test
mov
sub
test
jae
cli
pop
inc
cmp
movsl
xor
cs
xor
mulb
stos
out
or
add
and
add
xchg
pusha
push
adc
and
push
pop
push
push
movsb
in
push
dec
push
gs
rcl
or
inc
jp
sub
lret
push
cmpb
jle
push
aam
fwait
dec
repz
dec
repz
scas
push
cmp
adc
add
adc
mov
imul
insb
ret
xor
adc
push
mov
aad
mov
sbb
daa
inc
in
stos
aas
loopne
dec
les
test
adc
jbe
mov
movsb
pop
les
mov
in
sub
scas
fdivs
push
mov
das
stc
popf
popf
pop
stos
out
std
outsl
movsb
dec
xchg
mov
and
ret
gs
test
js
mov
push
push
sbb
fcmovu
cwtl
dec
jo
pop
int
sbb
push
sbb
and
jle
out
add
cwtl
cmp
rol
xchg
sub
sub
or
xorb
int3
jg
fdivrl
mov
sbb
arpl
filds
clc
mov
dec
add
dec
or
outsb
inc
jle
mov
mov
dec
call
xor
jmp
scas
push
and
push
movsb
sti
ja
das
add
jns
out
in
jae
jmp
ljmp
mov
rcrl
xchg
pusha
mov
pop
sbb
fldenv
pop
leave
mov
dec
sub
add
scas
jp
mov
pop
iret
cmp
sbb
mul
popa
cmp
mov
nop
mov
mov
or
or
adc
mov
sbb
or
cmp
cltd
push
inc
insb
js
xor
xchg
cmc
inc
mov
fistpll
push
or
clc
or
xor
mov
and
fiaddl
popa
push
imul
xrelease
movsb
fcompl
mov
mov
rcrl
hlt
add
loope
sbb
lds
je
mov
mov
stos
mov
add
in
pop
add
jp
outsb
sahf
pop
test
dec
call
mov
fs
leave
cmpsb
mov
sub
or
das
add
outsl
imul
gs
xchg
sarl
sbb
out
mulb
incb
int
mov
iret
jp
data16
sbb
mov
aad
mov
subb
mov
xor
call
into
pop
cmp
hlt
scas
xchg
ficoms
lret
in
xor
jne
push
sbb
mov
adc
mov
inc
jae
and
in
in
loope
push
jp
popa
out
mov
rcrb
push
shlb
ja
addb
add
out
imul
xor
orl
js
sbb
movsb
into
cmp
sub
push
movsb
push
inc
inc
imul
add
push
in
xchg
stos
dec
xchg
push
xchg
add
pop
fistpl
jb
mov
dec
das
sahf
sub
ret
mov
incb
popa
popa
mov
mov
cmp
push
push
loope
sub
push
cli
xor
cltd
idivl
ljmp
jg
mov
mov
loope
push
mov
mov
xchg
pusha
ret
popa
pop
mov
jae
shrb
xchg
test
test
movsl
aaa
push
test
mov
cmp
fidivl
shll
xor
es
cmp
aad
mov
outsb
idivl
sub
or
data16
leave
clc
popf
sti
mov
jl
pop
test
dec
inc
stos
divl
jecxz
adc
pop
int3
dec
add
cli
jo
jmp
mov
and
xor
inc
test
inc
cmp
or
inc
and
mov
inc
movsl
insb
test
in
mov
mov
ja
aaa
fsubs
xchg
popa
dec
icebp
xor
into
sub
adc
movsb
and
out
mov
add
mov
mov
cmp
jmp
gs
mov
aam
dec
insb
movsb
movsl
inc
cmp
xchg
jmp
xchg
lret
shrl
inc
aam
bound
roll
adc
xchg
adc
sub
stos
rcrb
mov
std
daa
push
add
pop
dec
xor
test
sbb
scas
dec
jno
shrl
cmp
mov
add
inc
push
fwait
out
cmc
add
js
sti
mov
shl
dec
bound
xor
ret
pop
mov
insb
pop
adc
pop
cmp
es
mov
pop
add
jmp
xchg
shlb
push
pop
mov
in
push
icebp
sbb
div
movsb
jno
push
cmpsl
lret
repz
xor
mov
mov
clc
loop
mov
pop
jp
inc
sti
stos
jl
add
in
mul
and
out
loop
or
js
ret
push
sbb
pop
and
call
lods
aas
inc
fisubrl
test
lods
call
leave
sahf
fmull
stos
shl
sub
dec
or
test
inc
sbb
sub
xacquire
scas
cmpsl
add
js
lods
xor
stc
stos
lock
mov
mov
out
nop
add
decl
sar
inc
mov
mov
jecxz
inc
dec
cwtl
adc
es
push
cmpsb
aaa
and
popa
cld
sub
lret
shl
repnz
in
or
jl
test
in
push
jle
mov
enter
cwtl
repz
jne
std
push
scas
jbe
mov
mov
or
arpl
das
or
daa
lods
repz
pop
es
jbe
sub
sbb
xchg
xchg
xor
jne
das
or
mov
adc
cmpsl
lods
mov
ljmp
mov
cwtl
xchg
xchg
scas
mov
cmc
jo
xor
jae
add
dec
outsl
dec
xchg
push
add
sbb
in
push
push
xchg
enter
xchg
cli
and
loope
in
cmp
sbb
int3
jge
inc
fsubp
in
cmp
cmp
xorl
call
and
les
sbb
repnz
ljmp
aad
aas
dec
in
add
xor
add
pop
call
and
leave
cwtl
stos
sar
add
insl
cmp
loop
fidivrs
idivl
xlat
mov
cmp
cwtl
sub
or
push
std
lods
or
lods
fdiv
jo
push
sbbb
in
xchg
pop
sbb
lcall
out
in
clc
out
arpl
dec
repz
xor
clc
mov
mov
jae
mov
jecxz
and
pop
idiv
mov
mov
ss
rorb
mov
jnp
mov
sub
idivl
leave
or
xchg
sbb
iret
ss
sub
adc
fcoms
and
int3
ror
es
inc
jl
mov
sub
bound
mov
dec
fcmovb
mov
test
or
adc
inc
jnp
outsl
sub
sub
push
mov
lcall
mov
jp
mov
dec
push
fwait
in
xchg
lock
pop
lea
add
repnz
adc
ds
les
mov
fisubl
aaa
and
xchg
clc
sub
jp
push
lcall
fmuls
out
aad
xchg
xchg
out
in
pop
daa
mov
inc
xor
xor
pop
jecxz
or
mov
lds
sbb
lea
gs
nop
bound
inc
push
lds
mov
sub
shrl
mov
subl
lods
mov
add
sbb
push
testl
inc
add
sub
int3
aaa
jecxz
clc
jl
rcrl
sbb
inc
mov
pop
imul
sub
fidivrs
add
xchg
aad
nop
das
movsl
into
scas
fcmovu
and
push
fidivs
and
or
pop
daa
sbb
test
push
adc
mov
imul
cltd
add
xor
aas
mov
pop
dec
scas
xchg
mov
jne
aas
jno
xchg
push
jns
out
cmp
sahf
jo
lods
adc
inc
xchg
cmp
xchg
es
ret
mov
hlt
pop
dec
xchg
sbb
in
dec
jp
lea
push
enter
push
xchg
int3
out
lahf
cmp
and
add
pop
ja
icebp
mov
cmp
push
lods
test
push
pop
sbb
sub
sar
sahf
stc
fldcw
ja
aam
jb
sahf
js
xor
xchg
xchg
insb
aad
cmp
jb
or
and
cmpsl
loopne
clc
mov
sbb
lcall
add
out
add
arpl
mov
ret
js
movsb
or
lds
aam
sub
mov
mov
adc
cmp
push
shll
dec
js
std
shll
add
sar
mov
or
cli
mov
pop
les
pop
or
jecxz,pn
cmp
cmp
lea
pop
sub
mov
fidivrs
rol
imul
xchg
js
and
js
xlat
pusha
push
gs
out
or
imul
inc
cli
bound
or
arpl
mov
mov
sub
rorl
ja
mov
cmp
mov
test
push
inc
jmp
and
faddl
test
adc
sbb
adc
das
mov
pushf
xor
fs
adc
lcall
jbe
xchg
jg
pop
sti
sbb
xor
in
imul
pop
js
in
lahf
fnstenv
pop
cmpsl
imul
mov
pusha
xchg
lret
cmpsb
xchg
stos
out
mov
and
lods
scas
nop
xor
push
xchg
test
cli
imulb
ss
pop
dec
mov
fmull
mov
push
bound
pusha
jp
mov
xchg
push
pop
or
cmpsb
sbb
mov
or
xor
mov
les
xchg
xor
lret
scas
cmp
sti
dec
out
lcall
push
inc
pop
std
mov
add
addb
cs
xchg
mov
jmp
inc
insb
dec
xchg
cmpsb
or
mov
cmp
sti
in
cli
sbb
fwait
lcall
or
mov
push
xor
xchg
mov
sbbl
and
add
adc
inc
dec
xchg
adc
xor
fs
jp
fs
adc
sti
pop
xor
xor
loop
lahf
adc
fildl
mov
or
sbb
lret
xor
adc
repnz
push
sub
dec
sbb
xor
xor
mov
inc
imul
ja
int
and
ret
inc
ret
dec
lea
or
out
jecxz
pushf
pop
mov
dec
inc
nop
pop
out
clc
das
movsb
or
in
xchg
xchg
pop
in
xor
jle
sub
jno
xor
pop
jg
mov
sahf
add
addr16
out
push
lds
add
lcall
loop
out
js
mov
in
mov
sub
pop
push
movsl
jp
pushf
push
sub
xchg
mov
mov
into
stc
dec
push
adc
mov
add
jp
pop
out
inc
ret
in
add
sahf
mov
or
aad
fimuls
cmp
mov
add
movsb
sub
dec
icebp
dec
out
stos
mov
mov
stos
test
lcall
cmp
jmp
into
inc
sti
ds
nop
out
dec
add
outsl
addr16
mov
xorl
mov
lret
inc
outsb
arpl
sbb
mov
or
dec
mov
ds
sbb
mov
xchg
je
fwait
adc
pop
lcall
dec
push
pop
push
pusha
sub
add
mov
dec
jns
jge
pop
cmpsb
mov
or
or
push
or
popf
sub
lock
in
mov
out
dec
mulb
ljmp
popa
jl
shll
cmp
push
xchg
push
negb
sbb
and
cmpsl
fisubrs
mov
pop
sub
cmp
pop
pop
gs
xor
fs
push
inc
fsubs
dec
int
daa
push
pusha
icebp
iret
fs
sahf
adc
ja
or
cmpsl
mov
add
pop
cmp
lahf
xor
clc
adc
or
loope
out
in
sahf
lea
adc
out
fst
ds
cmp
lods
cmpsl
xor
jle
mov
sub
push
xchg
adcl
xchg
jnp
insb
inc
int
fdivl
jle
sub
testl
stos
and
idivb
outsl
repnz
mov
lahf
dec
adcb
jnp
test
movsb
push
scas
cli
ficoml
mov
pop
xor
lret
in
pop
pop
xchg
push
loope
imul
mov
cmp
pop
mov
mov
xorl
cltd
mov
adc
mov
xor
jae
dec
divb
and
pop
mov
out
jns
stc
mov
ja,pn
sbb
aas
xchg
fbld
rorb
xchg
fistpll
jae
test
icebp
aas
pop
sarl
inc
jo
jg
inc
cmc
mov
test
jp
xor
cmp
mov
stos
mov
push
pop
shll
mov
xchg
push
mov
sub
je
dec
test
pop
cmpsl
hlt
outsl
mov
iret
ret
dec
adc
insl
loope
or
aam
js
add
mov
cmp
dec
cli
mov
clc
dec
into
out
test
pop
lret
das
icebp
add
jae
cld
out
lret
sti
mov
mov
mov
stos
mov
xor
sbb
adc
aas
aam
rclb
push
jae
repz
aad
repnz
in
sub
mov
pop
fidivrs
loope
jmp
pop
jl
adc
xchg
ret
jg
fdivl
xchg
mov
insl
or
or
dec
not
pop
pop
or
daa
daa
inc
sub
xlat
pop
jg
es
iret
dec
add
jge
stc
pusha
leave
stc
imul
cmp
pop
mov
cltd
repnz
add
mov
jp
int
nop
adc
es
lods
jle
jb
sti
cltd
andb
sbb
jbe
sub
gs
stos
loop,pt
repz
into
add
sub
add
punpckhbw
inc
cmp
xor
lock
push
or
fdivl
push
push
imul
pop
mov
iret
leave
cmp
scas
cmp
push
inc
sbb
adc
stos
and
sbb
mov
test
push
or
dec
pop
jmp
shll
sub
popa
xchg
pop
cli
cmp
mov
jo
mov
fs
inc
mov
cmpsb
dec
arpl
cmpsl
cs
cmpl
mov
dec
inc
roll
addl
call
ds
add
lock
jbe
or
jbe
movsl
xchg
mov
sub
or
mov
int3
mov
adc
xchg
ss
and
imul
jo,pn
push
fdivp
mov
test
test
cs
adc
sub
push
mov
pop
mov
push
in
or
push
pop
int
add
int
sub
sub
cli
incl
push
dec
ficompl
xchg
or
xor
movsb
jnp
data16
push
insb
and
mov
daa
xor
int
cmp
js
addr16
xor
and
push
repnz
sahf
and
push
in
nop
push
mov
add
push
aas
test
ds
cs
lea
or
test
dec
push
jns
inc
or
cmpsb
lret
lock
lret
xor
mov
push
mov
xchg
subl
imul
pop
pop
push
mov
fisttpl
and
xchg
in
movsb
popf
gs
xchg
out
pop
and
repz
imul
sarb
pop
in
mov
dec
into
xlat
and
sub
and
cmc
jle
and
mov
push
stc
push
jae
push
jnp
dec
xor
or
aam
in
ret
ficompl
ficomps
push
and
jnp
inc
neg
mov
lods
jecxz
sbb
jbe
leave
adc
add
stos
test
int
xchg
jmp
out
ficoms
and
inc
add
stc
jb
jbe
jmp
pushf
jp
bound
cmc
sub
jno
xor
loop
in
outsb
cwtl
fstps
and
jmp
or
sbb
pop
insb
sbb
push
es
lods
and
xor
adc
das
push
test
data16
add
cmp
mov
jb
lret
repz
cmp
popf
inc
add
xlat
pop
dec
add
adc
insb
nop
and
or
int3
add
xchg
fwait
push
add
mov
inc
inc
mov
lret
xchg
mov
push
pop
or
mov
xchg
mov
xchg
mull
rcl
fiadds
imul
inc
sarb
cld
and
or
dec
mov
sbb
cwtl
add
lods
mov
mov
dec
daa
imul
and
imul
enter
call
or
pop
sub
and
inc
adc
cmp
lea
lret
insl
mov
pop
mov
lcall
ljmp
add
xor
pop
add
xchg
arpl
pop
xor
das
xchg
xabort
sti
mov
fisubrs
xchg
pop
loope
sbbb
mov
cmpl
repnz
fwait
popa
dec
or
mulb
cmp
mov
mov
cmp
push
xchg
popa
int
dec
inc
frstor
jne
jmp
std
arpl
sub
jbe
mov
lret
std
or
cmpl
je
je
push
jns
push
jg
mov
xchg
push
jg
sub
sub
sub
xor
cmp
push
or
cmp
test
sbb
das
pop
pop
inc
into
mov
sub
popf
cld
ffreep
push
imul
mov
mov
sbb
jbe
mov
push
xchg
out
or
jo
lret
pop
scas
or
pop
test
sub
ror
test
stos
fwait
aam
aas
jmp
sbb
mov
lock
xchg
mov
addr16
mov
lret
dec
push
jmp
mov
or
out
xor
negb
mov
push
gs
stos
push
mov
jge
sahf
arpl
adc
dec
and
and
into
and
insb
cwtl
xor
add
xor
int3
adc
and
repz
loope
hlt
imul
inc
sbb
scas
dec
sub
add
icebp
adc
sub
jo
pop
mov
sub
push
mov
lret
add
in
pop
fisubl
aas
inc
fsubr
sub
sub
stos
scas
fwait
push
dec
in
jecxz
clc
int
inc
cmp
in
or
jno
dec
in
cmpsb
inc
inc
mov
aas
pop
out
out
inc
mov
lock
ret
mov
cltd
repnz
cwtl
int
sbb
arpl
lea
mov
xchg
sbb
loop
scas
nop
cmp
add
dec
sbb
loop
outsl
test
or
cmp
mov
cmp
inc
sbb
xchg
sub
add
or
dec
and
xor
aas
jle
mov
sub
adc
je
xchg
lahf
test
mov
mov
movq
push
pushf
adc
mov
push
jbe
ljmp
arpl
pop
inc
in
arpl
mov
scas
jnp
sbb
scas
fistpll
int3
sbb
test
adc
xchg
mov
imul
jo
addb
jle
orb
xor
xchg
aaa
pushf
cmpsb
test
jno
or
push
jp
jg
sub
xchg
jb
xlat
mov
sub
push
pop
js
add
popa
jo
cmp
and
fs
jecxz
xor
dec
xchg
or
dec
push
mov
aad
mov
xchg
cmp
sub
xor
mov
pop
mov
sbb
idivb
mov
rcr
mov
daa
xchg
pop
or
lret
push
add
dec
mov
je
fstl
jbe
hlt
dec
sub
pop
std
lods
mov
adc
das
lcall
cltd
fs
adc
ja
and
push
cmpsb
push
and
in
jbe
xchg
mov
mov
pusha
xlat
pop
push
mov
inc
cmp
es
test
push
scas
test
in
repnz
ja
roll
jl
js
sbb
and
pop
dec
jne
out
mov
loop
add
test
ja
in
jae
les
or
data16
mov
lahf
lahf
dec
inc
xor
mov
movsl
movb
mov
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
push
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
movzwl
sub
mov
push
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
pushl
pushl
push
pushl
push
push
call
jmp
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
or
mov
push
and
mov
add
pop
addl
push
call
push
andl
push
adcl
push
xorl
push
push
addl
push
push
call
xorl
push
addl
push
andl
push
notl
push
orl
push
push
call
dec
movl
jne
mov
mov
mov
cmp
movl
jne
orl
movl
addl
pushl
sbbl
pushl
pushl
call
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
push
push
pushl
call
cmpl
jb
mov
sub
mov
and
mov
or
mov
movl
lea
xor
mov
sbb
lea
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
and
mov
sub
mov
mov
mov
not
mov
xor
movzbl
add
mov
adcl
add
movl
mov
mov
mov
movl
cmp
jne
andl
xor
or
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
lea
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
push
mov
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
lea
push
pushl
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
or
push
push
and
push
inc
mov
xor
mov
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
push
call
jmp
mov
sub
mov
sbb
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
inc
mov
mov
movl
sbbl
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xor
andl
add
mov
sbb
mov
sbbl
mov
add
mov
mov
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
and
push
pop
sub
add
movl
mov
movl
or
mov
xorl
mov
sbbl
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
mov
orl
xor
add
mov
lea
mov
xorl
mov
xorl
xor
add
adcl
mov
lea
adcl
push
adcl
mov
subl
xor
addl
add
xorl
push
movl
mov
andl
push
pushl
call
sub
mov
adc
mov
xorl
mov
mov
adcl
xor
addl
mov
add
movl
jmp
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
adc
lea
sbbl
mov
mov
mov
sub
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
sub
xor
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
sbb
mov
or
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
jmp
cli
jl
popa
fs
repz
push
and
inc
push
mov
int
bound
push
push
mov
or
pop
mov
and
dec
sub
cmp
dec
add
out
cmpsb
jnp
lret
mov
jo
and
je
hlt
adc
mov
inc
ja
mov
mov
test
or
ss
call
pop
adcl
ja
shll
stos
pop
test
out
fldl
addr16
or
pop
popf
rorl
mov
mov
add
mov
sbb
das
dec
popf
cmp
mov
sbb
add
cmc
les
add
jo
repz
jae
rcrl
xchg
lds
jp
mov
outsb
xor
cmc
insb
sub
jno
sub
mov
nop
inc
pop
push
lock
movsb
and
pop
pop
inc
pop
push
cltd
jle
out
xor
ficomps
mov
jmp
inc
add
repz
sti
push
paddw
arpl
xor
adc
mov
mov
jl
dec
adc
xor
aam
into
pushf
pop
xor
add
mov
popa
mov
sbb
stos
aam
or
push
popf
das
jge
jge
stc
ljmp
mov
fsubr
insl
aaa
cwtl
ret
push
inc
test
xchg
mov
pop
mov
mov
loope
bound
xchg
xchg
pop
xchg
cmc
clc
aaa
or
icebp
pop
fisttpll
push
cmp
fabs
sahf
pop
sub
sbb
jbe
inc
pop
imul
jbe
out
subl
adc
subb
sahf
inc
decl
adc
xor
xchg
popa
adc
sbb
out
dec
inc
pop
int3
rcll
shrb
negl
mov
ss
sbb
inc
addl
cmc
outsl
push
cli
mov
aas
lds
fs
les
scas
xor
push
das
xlat
sbb
aaa
pop
test
add
add
sbb
mov
push
test
adc
popf
ds
outsb
mov
addr16
cmp
and
pop
adc
cmp
push
xchg
mov
xor
dec
hlt
mov
inc
add
in
sbb
mov
mov
in
rcr
adc
xchg
mov
adc
adc
ljmp
in
xchg
stc
jb
jae
rep
out
call
mov
add
loope
xchg
fadd
mov
mov
jmp
sbb
popf
xor
fadds
fsubr
loop
outsb
inc
dec
dec
push
mul
pop
inc
data16
ss
fcomi
std
pop
push
mov
pop
and
cmp
fimuls
nop
das
or
gs
scas
add
je
mov
mov
iret
adc
jge
lret
lahf
jl
popl
jp
sbb
pop
jno
adc
loope
pushf
mov
pop
inc
scas
mov
pushf
pop
push
push
jno
or
inc
int3
mov
ds
add
xor
or
pop
pop
lods
decl
jg
inc
clc
ss
dec
ficoml
cmp
add
dec
sbb
int3
add
cmp
mov
jno
ljmp
dec
cmpsl
add
inc
jne
vpunpckhbw
dec
or
add
aaa
insb
sbb
out
test
jl
cltd
add
in
add
push
or
aam
movsl
sub
pop
divl
inc
jne
divb
or
js
lret
bound
out
cmp
ds
push
loopne
add
push
xchg
xor
jne
xchg
and
dec
ss
sbb
jb
inc
mov
mov
xor
push
fucomip
popa
lds
sahf
mov
sub
outsb
aad
pop
test
cmc
dec
adc
fwait
pusha
and
stos
xor
fisttpll
mov
out
sbb
mov
je
or
sbb
testl
mov
sbb
fcmovnbe
pushf
fidivrs
adc
imul
pop
mov
into
push
loope
jmp
mov
dec
ret
fs
pop
or
cmc
and
push
loope
stos
fbstp
loopne
jge
sub
sti
divl
add
lock
addl
popf
lret
push
pop
div
fnstenv
push
jo
xchg
mov
ss
adc
adc
inc
js
das
aad
test
cmp
out
push
inc
data16
xor
jp
ret
xchg
mov
ss
das
push
add
mov
and
xchg
outsb
mov
pop
ret
push
xor
jp
jp
dec
xorb
iret
or
jno
and
mov
push
xor
call
lods
mov
pop
rclb
xor
inc
xlat
inc
xor
push
pop
jl
mov
adc
daa
hlt
cwtl
iretw
adc
mov
std
sub
xor
in
mov
push
lock
lret
pop
mov
jne
mov
mov
add
aad
push
iret
into
push
cltd
ret
daa
nop
cmp
aad
cmp
lds
xchg
les
mov
enter
and
sub
jp
aad
std
rcll
jp
xor
jmp
mov
daa
push
xor
dec
scas
ret
inc
lods
fidivs
jge
dec
outsl
jge
inc
add
sbb
xor
sbb
lds
out
xchg
push
mov
test
pop
lds
cmp
imul
cs
or
stc
cwtl
arpl
xor
cmp
dec
lods
pop
mov
cli
out
std
stc
dec
pop
stos
cmp
and
aas
mulb
xlat
add
cmpsb
stc
mov
mov
into
mov
fdivrp
adc
lahf
lahf
aam
cmc
mov
xchg
out
xor
roll
ljmp
rorl
mov
jne
cli
mov
scas
lock
rclb
in
repnz
call
call
cltd
outsb
clc
lahf
mov
cmp
in
out
iret
movsb
sarl
mov
add
and
sub
movsb
mov
rcl
mov
imul
jg
inc
std
cmpsl
mov
sbb
cltd
jno
ret
mov
int3
mov
in
inc
cmp
push
popf
arpl
jl
jns
sub
dec
jnp
movsb
push
pop
add
orb
sub
loope
repnz
out
mov
adc
xlat
orb
ja
cmp
add
dec
ds
push
add
cwtl
jge
fidivs
lcall
scas
and
lahf
sbb
mov
jbe
ret
or
clc
xchg
ficompl
cmp
add
mov
xchg
sarl
sahf
repz
and
jo
fstl
jecxz
cmc
sar
pop
inc
pop
push
int
mov
and
ss
and
enter
lahf
out
push
dec
push
into
or
push
stc
inc
or
popa
xchg
mov
push
out
or
pusha
stos
pop
add
imul
subl
sub
xlat
xchg
adc
adc
data16
cmp
jno
test
or
pop
pop
jmp
inc
test
outsb
pop
cmp
mov
sbb
inc
idivl
imul
mov
xchg
jae
or
cmp
inc
dec
cmc
mov
mov
or
sub
add
arpl
pop
mov
sbb
lock
push
pusha
xchg
pop
cmpl
xchg
jns
add
dec
loop
xchg
cmp
daa
add
xor
cltd
or
mov
sub
push
jle
lret
in
push
cwtl
dec
aam
mov
jg
sbb
insb
movl
pushf
sbb
mov
imull
pop
or
in
jne
mov
push
outsb
pop
or
jg
popa
xchg
sbb
iret
popf
jl
int
push
xor
and
xor
pop
jnp
jp
dec
mov
cmpsl
aam
das
push
adc
imul
pop
xlat
mov
cmpsl
inc
test
lock
jmp
loopne
iret
pop
push
mov
mov
mulb
adc
push
mov
out
add
sub
lea
test
xchg
push
outsb
test
lea
pop
repz
jb
fld
rcl
mov
subb
xor
sbb
test
xchg
pop
cmp
stos
mov
or
in
jmp
sbb
imul
pop
mov
add
inc
dec
das
pop
xor
push
idivb
xchg
roll
mov
lret
and
andb
loope
push
dec
mov
out
movsl
pop
xor
mov
mov
and
xchg
leave
mov
pusha
add
cmc
add
repz
cmpl
mov
hlt
lcall
or
xchg
and
ja,pn
cmp
dec
push
add
lret
adcb
sub
pop
or
add
cmpl
sbb
lds
dec
jnp
or
mov
dec
push
ss
repz
leave
adc
imulb
mov
insb
and
scas
ret
cld
in
pusha
arpl
mov
add
stos
in
fld
mov
mov
shr
data16
jae
out
enter
xchg
xor
shlb
in
mov
movsl
xor
push
jbe
mov
les
andl
scas
scas
adc
pop
xchg
es
rol
imul
insb
xor
dec
and
imul
jecxz
push
push
leave
lcall
xchg
dec
jne
shll
aaa
sahf
hlt
mov
nop
xor
pop
xor
mov
xor
xchg
std
movsb
adc
cmp
jl
dec
sub
cs
cmp
lcall
push
loopne
mov
adc
jg
dec
hlt
mov
adc
movsl
sarb
inc
inc
or
ret
dec
leave
sub
pop
sub
fs
ja
jbe
test
jo
fldcw
inc
stos
pushf
mov
jmp
mov
fdivrl
jns
lahf
fstps
int
mov
xchg
sahf
test
sbb
out
mov
xchg
mov
lods
jne
fisubrl
js
hlt
cmp
inc
ss
ret
fwait
push
stc
aam
pop
mov
out
and
cld
sbb
xor
fmuls
aas
pop
pop
dec
daa
mov
add
out
mov
and
repnz
into
rcrl
jmp
adc
and
fs
outsb
outsb
rolb
cmc
gs
push
aad
xchg
push
test
aas
jnp
es
sbb
cmp
lret
add
imul
pop
mov
fldt
mov
cmp
and
in
jl
cli
mov
xchg
test
sub
sub
mov
js
inc
rorl
push
sub
dec
jns
xor
push
dec
dec
addr16
sub
daa
stos
daa
and
mov
dec
xchg
test
roll
sub
mov
pop
mov
mov
add
fcom
mov
sub
xchg
jbe
sahf
cmp
push
and
push
mov
push
stc
xrelease
rclb
xchg
lods
mov
sub
sbb
xchg
cmp
adc
inc
jge
aam
push
int3
or
pop
pushf
cltd
mov
or
repnz
and
fstp
cmp
pop
jg
push
mov
lret
cmp
into
shlb
mov
push
test
add
mov
addr16
loope
lods
xchg
fcmovu
xchg
lahf
enter
ret
pop
and
push
sub
xchg
in
sub
pop
pop
outsl
sbb
dec
fistpl
aaa
popf
mov
addr16
sti
mov
test
jecxz
jne
mov
addr16
adc
or
lods
test
out
popa
cld
sbb
adc
out
fldl
cmp
ret
xchg
inc
xchg
jb
popa
mov
rcrb
scas
mov
lret
out
out
mov
dec
fdivrs
xchg
imul
or
adc
bt
clc
xor
adc
adc
jmp
adc
lods
dec
sbb
dec
in
and
xchg
imul
dec
lahf
add
aaa
sub
sub
jns
out
mov
movsb
mov
ja
cmp
enter
push
cmc
jecxz
dec
push
mov
sbbb
xor
sbb
ret
mov
inc
cmpb
mov
insb
or
jo
mov
mov
adc
jge
js
mov
push
add
xor
pop
mov
data16
fwait
push
adc
push
ja
and
das
and
fsubrs
dec
and
pushf
icebp
repz
xchg
lcall
push
movsl
ljmp
data16
mov
scas
mov
je
cmp
jns
push
cmc
mov
fbstp
xor
xchg
ret
aaa
fstps
push
xor
add
sub
stos
out
jp
mov
ficomps
mov
scas
insb
iret
sub
pop
or
icebp
lret
cs
fucom
fdivl
push
sbb
pop
fsubrl
and
push
imul
enter
rcrb
jno
xor
insl
stos
aaa
inc
bound
xor
popf
loop
imul
add
mov
pop
cmp
jmp
cmp
lock
faddl
add
sub
adc
movsl
mov
and
xor
pop
pop
pop
pusha
xor
sbb
cmp
in
bound
xchg
sbb
push
cltd
add
or
mov
push
mov
inc
adc
mov
xlat
hlt
jns
movsb
into
cmp
jb
in
cmp
imul
rorl
or
push
mov
popa
ljmp
push
and
lods
add
dec
dec
ret
in
fsubr
ret
loop
push
push
js
mov
mov
and
dec
andl
and
hlt
cmp
pushf
dec
out
sbb
in
cmp
sub
push
mov
mov
aaa
and
ret
xchg
leave
divps
sub
xchg
ljmp
adc
cld
rorb
lret
dec
decb
fbstp
sbb
and
jno
addr16
sti
dec
xchg
aam
cld
sub
push
xor
dec
mov
inc
pop
and
push
mov
and
and
repnz
les
out
repnz
mov
ds
jl
mov
popa
leave
mov
fsubrs
mov
push
movsl
mov
repnz
mov
sbb
imul
addr16
push
js
push
cli
xchg
lods
push
mov
jmp
insl
cmp
lea
outsl
push
jno
or
nop
lret
gs
jecxz
dec
in
sbb
in
and
mov
mov
xor
adc
cmp
mov
inc
sub
dec
es
xor
pop
sbb
pusha
dec
jmp
scas
stos
pop
gs
js
jo
in
aaa
incl
insb
leave
test
mov
sbb
inc
rcrl
cltd
imul
push
js
scas
dec
jl
scas
imul
push
int
jnp
sub
test
add
cwtl
jl
mov
dec
xor
shll
xchg
mov
and
push
mov
push
loop
sbb
xor
out
mov
lret
ret
int3
pop
push
aad
mov
xchg
in
push
pop
push
adc
andb
sarb
pop
movsb
xor
push
int3
lods
jg
or
xchg
add
mov
in
lds
cmpsb
bound
adc
push
adc
fistpll
xchg
lods
mov
sar
inc
xor
push
xchg
and
and
pop
pop
cmp
in
int3
cmc
cmp
pop
jo
pop
xor
sub
imul
notl
fstpt
test
and
push
pop
inc
adc
pop
es
incb
xor
xchg
cmp
adc
fldcw
insb
jl
pop
mov
sbb
ja
stc
outsb
pop
aaa
out
jno
pop
pop
cmpsl
mov
stos
sub
push
sbb
pop
das
pop
outsl
ja
loope
xorl
mov
push
popa
adc
or
sbb
jge
in
inc
jle
pop
push
outsb
das
imul
js
cmp
gs
ja
pushf
xchg
pusha
sbb
sub
lahf
ret
aaa
push
cmp
stos
inc
or
pop
push
clc
dec
xchg
or
or
shr
test
dec
add
data16
jne
mov
jns
cmp
dec
jbe
push
mov
ds
ljmp
aaa
mov
arpl
pushf
js
xchg
out
ret
push
out
ljmp
add
dec
xchg
repz
push
mov
pop
mov
ror
mov
out
push
jecxz
or
fmulp
cmpsb
cvtps2pd
imul
cmpxchg
xor
dec
lret
fmull
and
or
pushf
aaa
add
test
lret
pop
outsb
mov
mov
lret
cs
stos
dec
dec
xlat
cmpsl
xchg
xbegin
jbe
das
not
icebp
idivl
push
aas
leave
push
or
lret
xchg
stc
inc
xor
xlat
scas
je
cltd
mov
scas
mov
jmp
or
pop
aad
xor
sub
xor
shrl
cmp
loopne
pop
popf
push
mov
cmp
repz
scas
adc
fisubrl
lea
jmp
aam
sub
mov
outsl
testl
xchg
mov
dec
xchg
adc
lcall
add
and
imul
repz
lcall
aaa
xor
cli
cli
fsubrl
jb
sarl
adc
imul
jne
inc
jg
je
out
insb
xor
or
xchg
pop
dec
mov
into
or
sub
add
psubw
int
jl
les
xchg
jecxz
mov
pop
or
cmpsb
add
fldenv
and
insb
dec
or
mov
mov
in
out
sub
or
outsb
repz
cmc
leave
data16
shrb
xor
mov
sub
scas
test
in
js
dec
pop
insl
sbb
inc
nop
leave
sub
mov
stos
sbb
test
pushf
push
and
or
xchg
pop
imul
jb
mov
loop
fdivp
xchg
add
ret
popa
pop
lock
lods
xchg
lahf
adc
jmp
jge
subl
add
jbe
test
out
cmp
scas
and
out
mov
das
adc
add
push
mov
xchg
scas
ljmp
dec
inc
lods
cmc
and
dec
mov
xor
jp
mov
cmpsl
dec
popa
or
pop
or
push
sbb
xor
daa
sub
push
aas
xor
and
mov
les
rol
fstps
inc
sbbb
addb
fdivl
xor
shl
jns
pop
or
mov
mov
pop
sbb
and
inc
cmp
add
int
xchg
test
jle
insb
add
or
xchg
hlt
test
fs
add
xchg
dec
movsb
dec
cmpsb
or
adcb
push
out
out
loopne
fidivs
or
movsl
enter
xchg
inc
scas
mov
mov
call
in
rcrb
push
test
je
movsl
mull
lcall
inc
mov
inc
faddp
fwait
xor
jno
mov
sbbl
out
inc
mov
dec
or
mov
jmp
loop
aaa
push
sahf
stc
push
imul
dec
cwtl
add
xchg
jno
inc
addb
bound
cmp
dec
push
mov
sarl
std
adc
testl
in
enter
mov
test
nop
cmpsl
and
jecxz
leave
std
shrl
sahf
dec
or
dec
mov
mov
mov
sub
add
inc
test
inc
mov
js
addb
xchg
jns
lods
mov
daa
jl
add
and
rcll
sbb
cmp
fisttpl
sub
cltd
fcoms
js
sub
inc
stos
pop
dec
push
out
aam
mov
das
stos
pop
ret
notl
or
mov
mov
and
jg
push
fwait
mov
mov
daa
sub
fs
lods
adc
sub
rcrb
imul
cmp
add
push
push
rorl
addl
mov
mov
jg
cmp
dec
sarb
pop
test
inc
xlat
ds
or
cli
call
orl
lahf
roll
pusha
rcrl
aam
sub
gs
out
negl
sub
sub
sbb
sub
loopne
push
outsb
or
inc
mov
xchg
xchg
add
xchg
aas
push
aad
fcoml
mov
add
mov
gs
pushf
shlb
je
inc
cmp
icebp
mov
lds
mov
inc
sbb
int3
cwtl
xchg
mov
adc
jl
and
fisttps
xchg
pop
dec
or
and
aad
daa
mov
call
jecxz
sub
inc
jo
pusha
shl
scas
xor
mov
mov
xor
into
push
in
mov
pop
add
mov
xchg
jnp
icebp
and
sahf
fisubrl
xor
cli
test
cld
mov
and
out
inc
pop
out
lds
pop
dec
mov
ret
dec
lds
jb
xor
mov
mov
movsb
push
pop
jmp
lahf
leave
jge
xlat
loop
ja
dec
lods
sub
in
scas
and
in
mov
in
fs
in
ret
mov
add
dec
mov
sub
into
and
imul
add
add
cmp
inc
jnp
dec
fnstenv
add
sbb
jmp
push
xchg
xor
push
xlat
pop
sub
adc
lds
push
mov
int
pop
sbb
shrl
out
jno
or
cmpsl
mov
pop
fstpt
pop
sub
inc
and
sub
scas
pop
mov
insb
es
cld
imul
popf
adc
mov
jle
adcb
pop
cltd
pushf
xchg
int
jp
inc
arpl
fisubs
mov
fmul
inc
mov
push
mov
sarb
leave
lea
pop
and
psubsb
aaa
inc
and
loop
movsb
aaa
call
outsb
push
inc
sbb
std
xor
adc
rcrl
dec
test
in
mov
jl
pop
pop
popf
scas
jge
icebp
and
dec
or
loopne
mov
xor
xchg
sbb
sbb
frstor
popf
xor
dec
adc
mov
cs
xlat
xor
in
enter
std
fidivs
mov
push
mov
sbb
push
idivb
int
mov
cmp
mulb
out
add
push
mov
in
dec
add
jp
cmpsl
sbb
cmpsl
pop
cmpsl
outsb
call
outsb
mov
shl
sbb
stos
inc
xor
gs
add
rcrl
push
frstor
lcall
popa
jg
cmp
lahf
movsl
add
jl
jo
xor
mov
jmp
xlat
scas
bound
adc
push
scas
inc
pop
lods
adc
pop
dec
into
pop
clc
fcmovnu
cmp
call
and
push
jnp
mov
scas
outsl
or
pop
mov
push
or
add
in
data16
jno
xchg
call
ret
dec
dec
lea
dec
pusha
icebp
and
lds
out
dec
mov
lds
jge
push
sub
lods
add
fisubrs
mov
divl
mov
lods
pop
iret
adc
push
mov
subl
pop
sti
jg
iret
movsb
rclb
push
lods
or
and
stos
jmp
iret
out
dec
loop
jb
jmp
enter
sbb
cmp
scas
cmc
aam
add
sub
xchg
mov
aaa
dec
sbb
aaa
mov
cli
or
jno
aad
xchg
pop
in
adc
push
dec
sub
incb
or
aam
mov
nop
cmp
mov
mov
fcompl
rcll
jae
jg
fisubs
dec
jl
xchg
sub
mov
rcrl
mov
mov
and
mov
les
sarl
pusha
aad
xor
xlat
inc
lock
xor
cltd
push
lahf
mov
mov
inc
out
shrl
xchg
ss
pop
cmpsb
push
test
hlt
mov
inc
ret
mov
rorb
xchg
jno
inc
into
roll
sbbb
sbb
push
push
sbb
int3
adc
pop
imulb
xor
mov
push
test
fsts
pop
xor
lds
pop
or
fidivs
or
out
enter
xor
or
call
mov
inc
out
das
adc
lea
sub
adc
testb
sub
lock
data16
fldt
cmp
addl
add
repnz
adc
add
dec
orl
pop
adc
repz
pop
pop
push
pop
in
stos
jmp
or
test
dec
inc
mov
out
jl
iret
test
adc
cwtl
or
dec
addr16
push
jecxz
arpl
sub
pop
ds
imul
sahf
cs
lods
movsl
xor
mov
insl
inc
jnp
aam
into
fidivrs
push
sub
or
xchg
jne
mov
imul
leave
pop
cmp
add
mov
rcll
mov
insb
jb
push
cwtl
xchg
fidivs
nop
jle
inc
movsb
add
mov
pop
pop
int
clc
popf
ret
xchg
push
jmp
sbb
gs
push
dec
mov
sbb
aad
jecxz
cmp
mov
test
pop
mov
xchg
push
shrb
movsl
cmp
mov
lahf
xchg
pusha
pop
xchg
sbb
push
mov
cltd
cmp
or
shlb
mull
push
loopne
in
adc
jnp
scas
cli
xchg
pop
in
imul
jbe
or
cmp
outsl
adc
daa
dec
mov
push
or
xchg
or
aas
pop
sti
or
clc
push
xor
lret
fcoms
fwait
cmp
leave
mov
sbb
pop
sub
jne
dec
into
and
test
pop
mov
push
add
aad
cmp
pop
cmp
adcl
ret
sbb
xorl
sbb
ds
nop
pushw
outsb
lds
dec
dec
mov
fdiv
push
sbb
pop
push
decb
or
addr16
arpl
or
dec
daa
sbb
insb
pop
aas
ficompl
shlb
scas
pusha
xorb
call
outsw
push
pop
repnz
fildl
mov
inc
mov
leave
mov
push
xchg
rorl
or
xor
movups
mov
mov
mov
push
lret
stos
test
mov
xchg
adc
dec
stc
adc
xor
add
pusha
orl
xchg
or
jbe
adcl
dec
subb
and
mov
push
dec
cmp
gs
sub
imul
testl
cmpb
out
test
sub
dec
or
mov
xchg
jns
rorl
or
inc
out
imul
inc
es
fidivrl
movsb
xchg
xchg
int3
lock
scas
cmp
pop
imul
cmpsl
xchg
add
pop
sub
pop
sub
cmp
fistpl
inc
loop
je
dec
sbb
push
xor
lock
es
inc
mov
stos
pop
cmp
rcrl
push
sbb
jne
cmpsl
xlat
loop
scas
add
and
push
adc
repnz
movsl
lret
mov
xchg
sbb
das
pop
lahf
cs
divb
mov
cmp
outsb
add
mov
mov
or
sbb
push
sub
xchg
fnsave
in
test
lds
gs
dec
pop
rcrb
cmpsl
adc
pushf
neg
and
gs
cmp
fdivl
inc
fstpt
jge
lds
int3
sbb
negb
fwait
outsl
insb
gs
imul
dec
cwtl
mov
push
jge
sahf
pusha
shll
stc
mov
movsl
shrl
addr16
pop
dec
push
insl
fisttps
push
dec
pop
ds
aam
fcmovu
adc
lret
lret
sbbl
jmp
lcall
jbe
and
ret
pop
xor
sbb
punpcklbw
jg
arpl
cmp
loopne
or
cmpl
lods
mov
sub
or
add
je
clc
lret
push
subl
or
adc
enter
loop
jmp
dec
rolb
push
mov
mov
adc
jb
test
cmp
add
dec
mov
lds
or
cli
mov
cmp
loop
pusha
and
pop
ja
clc
mov
insl
fsubrl
xchg
dec
idivl
jg
add
sbb
sbb
and
shrb
cmp
jbe
mov
dec
pop
fdivrs
sub
mov
mov
in
movb
sub
jne
push
cmc
fwait
push
push
outsl
jecxz
aad
mov
and
lahf
pop
and
sahf
fcomip
push
push
lods
cmp
pop
cmp
sbb
adc
repnz
loope
mov
pop
dec
daa
lods
mov
adc
int
cli
sbb
ficoms
cmp
cmp
in
out
cmp
out
rorl
cld
decb
sub
jl
xchg
and
and
bound
or
push
jecxz
subl
fsubrs
clc
into
out
into
push
pop
jl
push
dec
mov
sbb
jp
push
addr16
push
jg
cmpsb
in
dec
icebp
insb
mov
pop
cmp
lret
jns
inc
push
ja
les
test
icebp
jmp
adc
cmp
cmp
add
pop
rorl
int3
pop
cltd
sub
cmpl
add
int
sbb
mov
mov
fildl
arpl
xchg
test
aaa
mov
xchg
dec
mov
sbb
fmull
sub
subb
lcall
in
movb
test
mov
cwtl
jnp
cld
and
push
sbb
dec
fwait
in
push
loopne
popa
jb
jl
push
xchg
pop
adc
mov
in
fldenv
add
mov
mov
hlt
adc
test
ficompl
out
mov
movsb
mov
xor
stos
sbb
cli
push
push
or
lods
stos
aaa
sahf
pop
jb
sub
jmp
mov
call
xor
mov
pop
jp
daa
call
js
mov
mov
sbb
and
lahf
pop
enter
daa
mov
xor
sub
and
in
push
insl
movsb
repnz
dec
lret
aas
mov
push
cli
cmp
clc
inc
sub
fbld
push
lock
inc
inc
sbb
es
divb
hlt
dec
lods
mov
add
adc
out
push
push
pop
shll
daa
loopnew
mov
pop
aam
lcall
lcall
outsl
add
sub
ja
filds
test
addr16
and
addr16
xchg
xor
and
loope
imul
or
sub
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
jmp
xlat
repz
xchg
mov
mov
pop
sbb
mov
pop
bound
sub
inc
pop
in
push
sbb
dec
fsts
repz
js
inc
loop
iret
loop
dec
inc
inc
cmpsb
pop
xor
push
fcompl
mov
outsb
fcmovne
in
mov
leave
xor
jmp
and
sarl
jl
add
and
mov
mov
rcrb
sub
sarb
cwtl
adc
pop
cmp
mov
js
incl
aaa
sub
mov
xchg
jb
mov
inc
stos
sub
pop
out
push
nop
push
dec
imul
cmp
and
iret
aaa
mov
cltd
bound
test
dec
insb
loope
or
add
or
lods
dec
addb
insl
adc
pop
sub
xchg
leave
inc
inc
dec
mov
or
or
data16
pop
daa
lock
mov
das
loope
mov
jne
les
loop
jo
test
xor
jg
xchg
repz
ficomps
pop
xor
outsl
xchg
mov
clc
imul
movl
or
push
lods
sbb
xor
rclb
xlat
sub
xor
gs
cmc
imul
test
fsub
je
add
push
sbb
fucomip
inc
lock
mov
test
pop
lods
cmc
sub
stc
sub
mov
dec
jne
cmpsl
in
cltd
in
push
push
fs
movsb
test
pushl
jecxz
mov
cltd
iret
push
icebp
fsubrs
dec
cmpsb
fsub
jl
xchg
fstpl
mov
test
mov
mov
test
insl
lods
sbb
jmp
fsubl
fisubrs
loop
ljmp
sti
mov
pop
outsl
in
movsl
adc
aam
leave
les
mov
in
sub
in
movsl
sub
or
les
xchg
pop
xor
xchg
push
lret
add
sarb
fcmove
iret
nop
mov
cmp
jb
push
cli
fidivrs
cli
ret
jp
jge
orl
xchg
arpl
push
push
mov
cmpl
adc
jne
push
enter
imul
scas
jp
pop
xchg
jns
mov
iret
sti
cld
cld
outsl
dec
mov
ljmp
push
mov
sbb
aaa
in
xchg
mov
inc
outsl
push
cld
mov
imul
push
loop
add
xchg
mov
sarl
cmpsl
cs
sbb
lahf
shl
sbb
and
testb
leave
jp
push
lret
ja
mov
adc
bound
cmp
insl
and
xor
jbe
sub
push
scas
xor
imul
mov
int3
mov
mov
lds
lret
pop
or
xor
sti
mov
test
and
lahf
hlt
sbb
sahf
dec
adc
int3
mov
rol
mov
mov
inc
fsub
or
loope
dec
pop
adc
push
sahf
jecxz
in
ficompl
in
and
mov
sub
call
leave
push
mov
ret
rcrl
ds
das
leave
mov
ss
cmp
adc
adc
adc
xor
pop
xor
repz
imul
lods
xchg
incb
pop
jbe
sbb
mov
add
pushf
repnz
pop
in
add
test
call
sub
test
push
aad
mov
das
cmpsb
daa
push
push
pop
or
pop
fisubrl
enter
xchg
push
into
and
pop
mov
lods
sbb
hlt
xor
mov
jae
sub
leave
mov
in
test
aas
push
jg
cmp
es
mul
mov
ss
cmc
jbe
cs
adc
imulb
fld1
or
mov
ljmp
fs
inc
test
cld
out
jne
dec
in
jecxz
stc
outsl
lock
rorl
pop
sti
sub
push
pusha
xor
mov
adc
filds
mov
mov
inc
addr16
repnz
or
adc
push
mov
aas
cli
jmp
rorl
jp
nop
push
jl
shrl
sbb
and
loop
jno
mov
inc
scas
into
and
inc
subb
jmp
jg
out
mov
dec
ja
xlat
inc
push
fmul
xchg
test
sti
jbe
aad
arpl
cmp
jg
push
loopne
pop
movsl
mov
xchg
xor
pop
xor
lahf
sub
mov
and
pop
scas
mov
call
push
daa
mov
xchg
sub
jge
mov
or
dec
inc
inc
aas
cwtl
addr16
cmc
add
filds
dec
jbe
fsubs
fildll
cmpsl
shlb
mov
cld
leave
pop
sti
pop
movsb
fimuls
jp
mov
cmc
push
fadds
cmpsl
rcl
lret
jnp
sti
pop
adc
outsl
mov
mov
lret
std
insb
mov
out
xchg
out
mov
js
push
xor
inc
loope
ljmp
insl
and
dec
and
mov
nop
mov
xchg
sub
in
movsb
repz
shlb
or
adc
mov
ja
enter
dec
push
jmp
outsl
fnstenv
xor
inc
jne
mov
mov
inc
jg
icebp
jb
lock
push
stos
int
lea
mov
sbb
sbb
push
fwait
sbb
pop
push
insb
clc
and
lods
mov
bnd
lret
in
daa
gs
mov
sti
xlat
cmpsb
push
shlb
in
ret
lahf
jl
dec
les
daa
mov
jns
aad
cld
mov
aas
rcll
adc
sbb
test
shlb
adc
add
aam
dec
add
jbe
in
icebp
xchg
test
call
lret
cmp
lcall
out
push
loope
xor
sbb
jae
mov
mov
or
push
and
adc
psrad
pop
gs
adc
mov
add
into
lahf
pop
outsl
enter
dec
rcrb
aas
dec
or
sarb
add
cmc
shrl
scas
adc
or
dec
pushf
xchg
inc
fmul
mov
jnp
rorl
push
aas
mov
pushl
sub
xor
ja
out
or
xor
ss
ljmp
repz
loope
scas
push
xchg
and
xlat
lret
and
push
sti
cmc
sti
call
jge
add
sbb
sub
cmp
leave
push
out
sbb
xchg
lds
and
or
mov
popa
push
arpl
and
into
je
and
push
lock
call
test
cmp
dec
fcoml
or
clc
jno
daa
mov
and
pop
mov
or
pop
pop
xor
adc
pop
mov
repnz
jb
add
sub
cli
pop
mov
xchg
gs
mov
jg
roll
dec
mov
cmp
movsb
sarl
daa
mov
mov
sbbb
inc
or
add
inc
adc
dec
loope
xchg
adc
ds
or
pop
mov
jge
jne
adc
adc
fs
loop
xor
xchg
sbb
or
sbb
aas
fdivrl
inc
insb
jbe
mov
cs
pop
into
add
rcll
xchg
insb
push
xorb
jne
out
ljmp
xor
sahf
pop
imul
les
mov
push
js
gs
mov
inc
test
add
push
test
es
xchg
int
in
sub
shlb
mov
push
data16
pop
and
fidivrs
aad
mov
bound
lock
sbb
fidivl
and
push
lods
or
lods
repz
mov
leave
lock
xchg
pusha
lret
pop
mov
fcmovnb
testb
inc
mov
inc
and
and
ljmp
nop
and
divl
sub
xchg
icebp
inc
sub
xchg
imul
add
mov
scas
cs
inc
mov
cli
dec
enter
ja
xchg
pop
mov
and
movsb
cli
jecxz
ret
orps
mov
stos
hlt
in
and
sub
mov
and
sbb
test
out
push
ja
or
push
test
adc
inc
push
mov
sbb
jge
sbbb
aam
shr
in
shlb
test
and
in
xor
jne
outsb
sbb
les
js
dec
jge
sub
ret
fnstenv
push
mov
stos
daa
push
int3
xchg
lods
popa
adc
sbb
mov
daa
repz
adc
movsb
or
or
std
cmp
cltd
int3
jmp
pop
lret
push
add
out
ds
xchg
add
dec
stos
out
add
pop
adc
jp
mov
lock
mov
mov
lcall
testb
popa
out
push
lret
bnd
sub
dec
jmp
stc
add
sbb
push
inc
lock
out
inc
dec
frstor
ja
sbbb
push
add
arpl
int
sub
fisttpl
cmc
push
cmpsl
adc
mov
pop
shll
es
mov
push
push
pop
out
adc
jge
fistl
push
aas
lock
test
mov
jne
pusha
add
subl
in
sub
bswap
dec
add
dec
push
or
mov
sub
data16
rcrl
out
ja
or
xchg
jp
scas
into
aam
int
mov
stc
pop
arpl
xchg
mov
pop
fistps
pop
mov
adc
push
ficomps
push
lock
or
out
aas
inc
push
mov
enter
loopne
jge
clc
add
inc
push
xchg
lods
test
into
fisttpll
inc
aaa
hlt
pop
outsl
pusha
and
mov
xor
adc
mov
xchg
in
jmp
cwtl
out
add
jno
pusha
mov
sub
cmp
aam
jl
fstpl
insb
sub
lahf
xchg
cmp
sub
and
out
test
jle
inc
ret
negl
push
cs
loop
mov
push
mov
jg
xchg
adc
push
adc
fninit
stc
mov
xor
mov
icebp
jbe
sbbl
adc
lods
and
cmc
push
popl
mov
cld
sbb
mov
cmp
mov
out
add
pushf
push
int
jbe
popl
dec
scas
lcall
das
dec
jecxz
mov
push
push
ret
cmpsb
sbb
adc
out
arpl
mov
add
mov
jno
xchg
fcoml
arpl
mov
dec
sub
ja
push
cltd
mov
and
mov
sar
dec
add
mov
adc
jge
sub
fdivs
push
rcr
inc
mov
mov
popa
lret
hlt
fmull
loope
add
ljmp
jecxz
jle
ds
sub
jecxz
mov
arpl
pop
mov
daa
pusha
dec
mov
push
sub
pop
add
xchg
divl
stos
add
rcll
iret
fdivl
push
jg
cmp
fsubrs
out
lahf
sub
push
xor
cmp
in
xchg
fucomp
push
adc
mov
mov
xlat
dec
movsb
mov
ss
cltd
mov
xchg
ja
ljmp
mov
inc
insl
or
and
adc
and
stos
jl
fwait
cmp
push
lret
and
mov
or
xchg
push
adc
aaa
pop
in
cli
insb
negl
imul
jns
cmp
xlat
xorl
cmp
add
out
fisubl
pop
rol
pop
dec
mov
and
stos
mov
mov
scas
test
jne
inc
push
push
xchg
xchg
movsb
arpl
or
inc
fdivrs
add
or
cmpsb
cmp
pusha
int3
lahf
mov
aam
dec
push
ds
lcall
lcall
mov
mov
pop
sti
pop
jo
iret
and
imul
loop
adc
xchg
mov
rcrl
or
push
aad
je
cvtpi2ps
aaa
fdivrs
mov
stos
add
xchg
xchg
xorb
popa
scas
in
testl
xchg
or
jle
pusha
aad
pop
test
notb
mov
sub
sbb
sub
test
test
cltd
push
xor
stos
adc
add
pop
lods
imul
test
stos
cmpsl
outsb
cwtl
icebp
popa
aam
mov
push
out
inc
adc
insl
scas
add
aas
pop
ds
add
xorl
ficomps
outsb
shlb
inc
mov
jl
jmp
dec
movsb
test
add
inc
int
adc
mov
or
jns
xchg
dec
dec
loopne
or
mov
dec
dec
cmp
daa
cmp
sub
jmp
cld
xor
leave
bound
jns
lcall
stc
dec
and
add
push
fs
mov
or
out
gs
xchg
shll
dec
adc
mov
and
push
mov
out
pop
hlt
loope
cmp
ds
jge
adc
rorb
adc
inc
sbb
es
cmpsl
rclb
faddl
call
leave
lret
jns
dec
outsl
inc
dec
je
sti
repz
pop
dec
adc
dec
ljmp
sub
mov
test
sbb
sub
in
mov
jns
sub
lahf
or
out
es
inc
add
mov
or
inc
mov
cmp
push
lods
inc
sti
mov
lret
or
mov
scas
imul
aas
sahf
push
mov
dec
movb
cld
ffreep
int
xchg
pop
add
adc
mov
sub
in
jb
repnz
dec
mov
cmpsb
xor
xor
inc
cmp
gs
xchg
and
ret
in
bound
in
sub
mov
hlt
pop
cmp
data16
or
in
pop
mov
nop
shll
mov
rcr
shlb
cmp
pop
fcmovb
or
test
jle
out
jnp
push
inc
lea
into
sbb
mov
lcall
daa
xor
cltd
aad
sub
sub
mov
lret
sbb
xchg
sub
fcmovne
cmc
pop
ds
jo
addl
mov
push
xchg
pop
aam
adc
cmp
fstpt
movsb
xchg
lods
cmp
aam
popf
bound
mov
lret
jle
js
pop
scas
sti
push
mov
mov
pop
lret
fcmovnb
mov
adc
js
test
into
adc
enter
xchg
pop
mov
cld
jle
push
mov
jge
cmp
jno
pop
cli
shrb
sbb
push
int
mov
out
loope
cmpsb
in
inc
xchg
pop
in
jmp
pop
and
mov
int
jg
daa
mov
std
lea
add
inc
iret
repz
je
fdiv
cmp
and
fidivl
dec
push
mov
xor
test
nop
aaa
js
je
inc
out
test
into
stos
jg
shll
hlt
and
dec
in
dec
scas
xor
call
pop
jecxz
rcll
movb
adc
ljmp
add
adc
sbb
mov
lahf
ss
enter
pop
ficoml
push
sti
popf
or
leave
into
xor
push
shlb
pop
add
xchg
jnp
movsb
aad
je
lret
sbb
call
dec
hlt
lods
dec
bound
loop
enter
adc
cmp
stos
in
enter
dec
push
or
ret
lahf
xor
fimuls
dec
sahf
or
jp
and
repz
loop
call
in
mov
pusha
adc
pop
pusha
cmp
pop
test
into
inc
stos
mov
mov
mov
xchg
cmc
fsubrl
jns
adc
rclb
lods
out
sti
outsl
adc
add
inc
fcoml
in
pop
sbb
dec
inc
movsb
mov
mov
add
lods
rcl
jae
repnz
adc
mov
fisubrl
inc
mov
dec
ljmp
adc
es
pop
ja
mov
cli
into
mov
adc
inc
pop
pushf
mov
xchg
test
xchg
repnz
cmpl
inc
pusha
inc
dec
pop
mov
in
push
push
out
push
int3
adc
sub
mov
dec
pop
mov
mov
clc
je
xlat
addr16
and
jp
sub
cmpsb
out
lods
rorl
test
jp
inc
stos
xor
dec
clc
ja
jmp
add
aam
cmc
add
inc
jg
mov
add
popa
cmp
cmpsb
dec
aad
push
addr16
xchg
push
jmp
popa
out
pop
xchg
cmpsl
mov
jmp
xchg
movsl
cli
adc
fcmovbe
xlat
xchg
iret
jmp
fnop
inc
inc
popa
pop
xchg
insl
lods
jecxz
mov
sbb
mov
insb
stos
push
adc
dec
cmp
xchg
add
ds
jle
cmp
ret
xlat
mov
enter
loope
and
xchg
and
xchg
inc
rol
aas
jmp
sub
pop
scas
fdivrs
jae
stos
sub
cmpsb
test
lock
mov
mov
stos
xor
das
mov
pusha
cmp
daa
fidivl
and
add
sbb
add
jecxz
ljmp
jge
mov
sub
aaa
mov
xlat
pusha
bound
jge
sub
add
aaa
jno
lods
adc
in
mov
stc
and
jle
inc
mov
faddl
pop
movsl
fistpl
fisubrl
fisubrl
adc
jns
addr16
pop
ljmp
mov
sahf
add
push
rclb
push
dec
sbb
jne
dec
insl
fs
stc
mov
jo
add
fisubrl
aaa
fmuls
and
out
add
lods
cmp
push
and
out
jb
sbb
aas
leave
stos
jo
push
add
mov
add
push
or
xor
mov
popa
sub
adc
inc
push
cld
push
jmp
lcall
pushf
push
std
jmp
mov
adc
movsb
daa
dec
sbb
jmp
or
pop
insb
imul
pop
jbe
mov
add
aas
loop
cmp
xlat
push
sbb
iret
xchg
in
iret
nop
add
shl
neg
push
mov
arpl
push
and
hlt
xchg
jmp
lds
push
push
ror
outsb
ret
repz
push
cs
iret
je
add
repz
jb
pop
add
mov
inc
inc
stos
je
dec
ljmp
lods
in
arpl
push
or
push
mov
cld
test
push
push
mov
mov
mov
loop
stos
out
cmp
divl
add
cmp
in
or
pop
fisttpll
sahf
fadds
xchg
lahf
sbb
adc
mov
in
push
daa
insl
nop
lods
dec
clc
pop
movsb
int
sahf
arpl
aas
pop
aaa
cli
out
cmp
xchg
pop
test
outsb
inc
xchg
stos
jp
or
jg
inc
adc
data16
ljmp
pop
int3
jbe
hlt
or
mov
jecxz
sub
fwait
and
cmp
add
mov
cmpsb
or
xchg
dec
insl
je
sbb
push
inc
jae
rcll
js
mov
out
in
fwait
dec
add
iret
ss
imul
adc
mov
or
leave
push
pop
jb
jns
insl
fidivs
lods
sbb
pop
cli
rolb
jae
xor
adc
shl
enter
xchg
jbe,pt
mov
and
jno
out
pop
add
xor
sub
or
mov
xorl
pop
jae
or
rol
shll
inc
dec
jg
test
mov
sahf
rorl
cltd
dec
sub
and
int
lret
cmovb
cmp
jle
cmp
or
mov
sti
decl
push
lahf
js
add
jmp
enter
mov
test
scas
jae
xor
push
mov
mov
mov
rcll
pop
xrelease
push
imul
sub
jo
lds
jo
or
lcall
jp
sub
mov
sti
sahf
jno
lahf
mov
mov
notl
in
xchg
bnd
adc
mov
clc
pop
cmp
xchg
jae
mov
lret
popf
lahf
add
nop
mov
pusha
pop
insl
dec
xor
and
pop
ror
aam
cmp
mov
leave
push
pop
cld
xchg
movsl
mov
adc
cmp
jle
fistl
cld
xchg
fs
pusha
lahf
imul
cmp
add
adc
jecxz
or
es
jl
or
sbb
push
fbstp
jb
scas
call
and
or
sarl
xchg
ljmp
inc
in
sub
pop
out
mov
sti
mov
insb
adc
cmc
cwtl
jmp
js
sti
es
mov
cmp
fidivl
push
push
aaa
das
fcoms
xchg
adc
cmp
test
insb
pop
mov
xor
cmpb
cmp
inc
add
xchg
popa
add
dec
jp
sbb
lods
cli
stc
mov
imul
lds
mulb
popa
inc
add
mov
mov
cld
push
test
push
dec
jno
cli
sub
in
ret
pop
sbb
out
push
arpl
cmp
jnp
push
ficompl
les
lock
mov
pop
sahf
cmp
adcl
push
mov
mov
sub
daa
or
lods
mull
dec
out
push
pop
pcmpeqw
mov
cltd
xchg
pop
insl
xchg
pop
lock
mov
cmp
cld
xor
lds
hlt
inc
pop
movsb
jbe
mov
add
and
mov
xor
iret
lds
lahf
lods
mov
sbb
cmc
push
inc
fidivrl
mov
int
sub
loop
popa
ss
ret
jb
mov
les
pop
add
push
test
jge
in
jge
dec
dec
jecxz
lock
jge
or
pop
pusha
outsl
cwtl
inc
xchg
popa
jae
sbb
jnp
and
je
jmp
and
and
mov
xchg
dec
adc
cmpb
rcr
ret
fsubr
inc
clc
lret
jbe
mov
mov
out
mov
adc
mov
cmp
jae
pop
mov
mov
xor
jp
adc
jmp
mov
shll
pop
out
insb
ret
iret
jb
in
sbb
js
js
pop
xchg
fistl
ds
mov
xchg
fmulp
cmp
aam
rclb
into
and
pusha
jecxz
and
add
imul
mov
sbb
pusha
mov
lods
push
pop
mov
dec
pop
sub
in
movsb
das
nop
ja
scas
dec
pop
or
adc
insl
mov
xor
outsb
loopne
fldt
bswap
mov
andb
inc
lods
notl
push
fs
mov
fucomp
jae
mov
push
lcall
lahf
adc
sub
fwait
adc
lods
lods
or
mov
or
push
jge
mov
loop
subl
mov
jbe
test
call
scas
test
cmp
or
push
sahf
negl
mov
add
or
mov
adc
push
aaa
inc
xchg
mov
xchg
cmp
in
xchg
push
push
mov
cmp
pop
mov
dec
cltd
adc
dec
call
fisttpl
sbb
movsb
sti
ret
jp
repnz
in
add
or
cmp
imul
xor
or
mov
aas
xlat
or
in
and
and
jnp
and
dec
cld
jmp
or
shrl
xor
in
call
cpuid
push
jecxz,pt
fnstsw
inc
pop
push
loop
mov
cmc
popf
test
data16
and
and
xorl
pusha
cwtl
gs
data16
push
pop
lock
dec
iret
mov
or
pop
push
jecxz
cmpsl
dec
js
xchg
jl
cmc
add
fstpt
push
sub
inc
repz
sub
mov
jl
pop
or
js
loopne
and
adc
or
xor
scas
xor
jbe
jbe
leave
popf
pop
xchg
xchg
daa
in
pop
aam
cmc
imul
xor
les
testb
jo
inc
jbe
sub
addr16
mov
inc
xchg
fsubrs
push
cmpl
mov
aad
jge
pop
jmp
repz
push
sbbb
test
fs
cmp
xchg
pop
cmp
sub
jmp
mov
xor
fdivrl
ljmp
cli
scas
nop
cmp
shl
or
add
dec
fs
xchg
jne
xor
data16
popf
dec
xchg
stc
pop
pop
pop
cmpsb
xor
xorl
sub
push
ja
push
or
add
andb
sub
movsb
mov
inc
mov
js
fidivs
aas
adc
lcall
stc
xor
dec
fidivrl
push
imul
xchg
dec
fsubs
xor
cli
ret
mov
lahf
xor
hlt
pushf
cmpsb
dec
inc
xchg
cwtl
loop
aas
mov
js
cwtl
inc
lods
ficomps
pop
dec
mov
cmc
inc
sub
iret
or
jnp
nop
rcr
enter
pop
push
cwtl
jae
mov
dec
mov
hlt
lods
int
add
adc
sub
mov
fs
jb
imul
ror
pop
pop
mov
cmp
sub
jg
lret
repz
sarb
outsl
xchg
pushf
mov
add
inc
dec
xor
pop
shlb
popa
lods
sti
andl
les
cmp
pop
stos
add
inc
add
lds
pusha
mov
lods
out
cwtl
mov
mov
push
sarl
out
pusha
jl
jo
outsl
push
jbe
or
and
pushl
xor
lods
fistps
push
dec
sbb
scas
and
fwait
dec
popf
and
sbb
jno
es
outsb
sub
inc
or
push
mov
push
mov
loope
stos
pop
cmpsl
push
mov
jp
mov
cld
mov
add
out
lret
pop
pop
jp
notb
test
aas
sbb
fldl
aad
push
add
jecxz
iret
dec
add
lods
pusha
bound
xchg
mov
pop
fwait
out
mov
test
or
and
dec
sbb
push
test
adc
sar
out
inc
mov
or
mov
mov
mov
jle
jo
call
addl
frstor
dec
popf
xchg
inc
sub
mov
in
cmc
sub
iret
mov
cmpsb
imul
adc
sub
adc
in
jp
js
sbb
cmp
push
ljmp
lods
scas
inc
pop
je
cmpsb
dec
lds
mov
jbe
popf
rclb
or
dec
or
iret
popf
test
lods
shrl
movsb
fcoml
icebp
cmp
or
js
jecxz
arpl
leave
fadds
dec
mov
dec
imul
shlb
jl
jo
int3
sub
pop
iret
xchg
jge
inc
inc
add
fsubl
in
cmp
fs
xchg
mov
inc
cmp
shlb
mov
xchg
test
mov
int
xchg
adc
push
int
sub
stos
inc
inc
loop
es
push
xchg
push
cmp
pop
imul
add
hlt
incb
lcall
mov
inc
dec
call
sahf
es
sbb
hlt
mov
inc
and
xchg
adc
mov
loopne
test
loopne
aas
cmp
mov
pushl
sub
call
lock
mov
or
insl
or
aas
or
sub
add
push
repz
out
or
cmp
mov
ds
jae
fsubrs
mov
aad
push
xor
adc
pop
push
sub
aas
sub
adc
xlat
push
xchg
push
pop
sbb
mov
mov
aad
jl
movsl
mov
jl
push
ret
pop
cmp
aaa
mov
inc
in
mov
mov
insb
imul
mov
cmp
cmpl
pop
imul
fmull
scas
mov
ss
lods
gs
jae
lret
cmp
mov
adc
sub
negl
in
lret
and
pop
fstps
inc
dec
xchg
adc
mov
std
icebp
imul
int3
fadds
fcmovu
data16
push
scas
je
imul
cmpb
cs
mov
stos
lods
cmpsl
dec
lahf
lods
shl
hlt
arpl
faddl
jb
mov
dec
mov
mov
xchg
xlat
out
lock
and
fld
inc
inc
nop
sbb
les
insl
aas
lods
repnz
mov
scas
pushf
fisttpll
jns
mov
mov
push
inc
shrb
dec
cli
in
add
outsl
fldt
outsb
pop
andb
jg
je
mov
xchg
mov
adc
in
push
into
and
dec
cli
cmp
jb
add
or
in
inc
test
dec
cwtl
imul
test
out
daa
fisttpl
xlat
mov
jmp
push
loop
pop
push
movsl
lret
push
and
psadbw
js
cltd
push
lds
cmc
add
xchg
push
cmc
ss
cmpsl
ror
inc
insb
addr16
add
fs
outsl
in
xor
lcall
mov
and
cmp
sbb
fistps
call
out
add
cmc
xor
push
je
mov
adc
jg
shl
inc
ds
popa
jnp
int3
repz
mov
fstpt
mov
je
popa
fdivr
movsb
cwtl
int
fwait
sbb
arpl
cld
jmp
imul
xchg
mov
push
push
enter
frstpm(287
jnp
adc
dec
or
push
push
mov
sbb
bound
ja
mov
addr16
xor
inc
add
idivl
scas
data16
xchg
movsb
jmp
push
scas
imulb
outsl
jl
inc
xchg
dec
aaa
and
clc
mov
fstps
mov
in
sub
push
adc
int3
imul
sbb
mov
mov
pop
pop
arpl
mov
jge
dec
mov
fbstp
push
imulb
push
or
adc
imulb
fdivr
push
or
add
push
sbb
or
fsubp
mov
sarl
sbb
and
adc
bound
sub
mov
loopne
sub
add
insl
mov
cli
adc
xor
add
insb
jne
xlat
mov
xchg
cmpsb
cmpl
mov
shr
mov
mov
test
sub
mov
mov
lret
or
or
lahf
inc
push
enter
add
mov
or
sbb
negl
sbb
inc
cmp
jg
sbb
decl
fnstsw
fildll
in
add
sbb
and
lds
inc
adc
xor
sub
xchg
insl
mov
scas
das
testl
in
aas
or
dec
dec
fists
pop
jb
add
sub
push
adc
je
add
leave
adc
cmpsb
or
sub
sarb
out
cwtl
jg
push
pop
movsb
std
xchg
test
or
hlt
fistl
add
jl
lcall
jnp
push
cmp
sbbb
push
xor
mov
iret
lret
push
sub
int
iret
jg
hlt
loop
das
push
rorb
and
jp
ja
loope
push
or
mov
mov
xor
add
pop
pop
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
pushl
push
pushl
push
push
push
pushl
call
jmp
movl
adc
mov
addl
jmp
into
or
jg
fildll
dec
mov
loop
or
pop
bound
mov
dec
cltd
cmp
or
dec
mov
add
imul
sti
add
out
call
push
cld
push
fs
lret
cmp
stos
mov
daa
xchg
sub
loop
popf
out
lods
adc
or
cmp
rcrl
mov
jnp
dec
scas
stos
jne
mov
shlb
push
mov
in
jecxz
jo
and
mov
mov
xchg
inc
loopne
fldenv
push
sbb
xor
jb
mov
jecxz
pushf
je
ror
neg
clc
mov
inc
mov
mov
inc
pop
nop
or
xchg
cli
xor
cmp
rorl
ds
or
push
or
lcall
ljmp
sti
mov
repnz
sub
outsb
dec
sahf
repz
mov
fisttpll
sbb
pushf
incl
inc
cli
bound
ret
mov
out
pop
movsl
push
fiaddl
jne
add
push
cmp
inc
xor
incl
cmp
xchg
lret
and
cwtl
mov
cmpsl
jp
adc
and
ror
loopne
ds
push
pop
mov
xor
mov
mov
in
xchg
pop
aas
je
out
jae
out
mov
cmp
cld
pop
ud1
in
out
out
push
add
cmc
mov
out
nop
aas
mov
xchg
ret
int
jle
sub
jge
push
rcr
jecxz
push
adc
and
cmp
neg
ficoml
cli
pop
or
outsl
jmp
xchg
cli
pop
scas
popa
mov
das
mov
mov
dec
std
dec
cmpsl
jns
add
sbb
call
sahf
imul
push
or
mov
adc
out
xchg
adc
int3
arpl
gs
lock
sbb
jle
gs
jl
sub
jbe
mov
cmpsb
xor
fstpl
jo
lcall
jnp
cwtl
shlb
dec
mov
add
dec
jnp
or
or
dec
mov
in
jmp
aaa
stos
mov
inc
outsl
mov
imul
loop
aad
push
or
push
enter
xchg
xlat
mov
iret
in
iret
cltd
cmpsl
add
xor
and
push
fdivrl
mov
enter
cmp
test
push
pop
push
or
dec
jns
je
loop
fsubl
push
ficoml
push
cltd
xchg
aad
ljmp
std
cmpsl
lds
fimull
fdivrp
adc
inc
or
cmp
and
push
mov
sahf
loope
cmp
jb
popa
les
test
fldcw
and
jmp
mov
jnp
in
es
adc
bt
jmp
fwait
notb
pop
aas
jl
sti
jnp
arpl
inc
push
jp
sbb
andb
rclb
jge
cmp
lcall
or
sti
mov
sbb
notl
outsb
pop
loopne
call
mov
dec
xchg
sub
loop
push
scas
js
stos
sub
or
add
pop
vpslld
addl
je
push
fnsave
pop
inc
and
imul
psrlq
jno
mov
mov
dec
lcall
push
pushf
mov
dec
pusha
mov
or
inc
sarb
pop
sub
addb
sbb
mov
xchg
adc
sbb
lret
rcrb
cmp
test
inc
js
lods
xchg
fsubs
jae
and
sub
int3
xchg
add
pop
push
push
pop
insb
lahf
addr16
scas
jae
outsl
pop
aam
pushf
xor
rol
incl
outsb
fidivrl
subb
dec
cmp
int
cltd
dec
sub
and
pop
xchg
adc
push
stos
je
mov
add
push
fwait
out
dec
and
stos
pop
mov
mov
xor
xor
scas
lods
adc
btr
mov
sub
rorb
jmp
shll
movsb
scas
add
mov
jge
int
or
test
mov
dec
cmpsl
jle
xchg
cmp
lahf
mov
leave
repnz
push
inc
outsb
cmp
and
add
push
rorb
inc
ret
es
stos
pop
push
cli
pusha
mov
cld
cmp
mov
xor
fcompl
inc
lret
ss
pop
aaa
jmp
jmp
fdivrl
jns
inc
push
insb
pop
dec
out
pusha
pop
idiv
pushl
mov
ficoml
fstps
mov
push
xchg
fisubs
dec
and
inc
mov
mov
inc
mov
aas
aad
scas
and
popf
cli
js
adc
dec
adc
push
fs
xor
aad
out
or
or
push
or
popf
adc
fisttpll
lods
mov
fists
mull
js
inc
icebp
sbb
test
sar
iret
mov
mov
lret
in
std
pop
pop
test
int3
fistpll
or
jge
cmp
sahf
xor
push
push
jo
push
fsubr
mov
arpl
mov
and
insb
enter
decb
cmp
xchg
cmp
xchg
mov
mov
idivb
hlt
cld
rorl
fnstcw
into
and
pop
mov
dec
in
push
add
mov
test
stos
repz
leave
mov
inc
jae
lahf
jge
push
xlat
bswap
xchg
insl
fisttps
ds
sbb
adc
cmp
push
daa
stc
call
jns
inc
inc
enter
out
jg
cmp
nop
out
nop
cmc
xchg
ret
icebp
test
mov
jae
loop,pn
mov
mov
xchg
adc
mov
push
xchg
cmp
scas
imul
fwait
js
mov
mov
mov
inc
insb
ficoms
sub
mov
andb
jns
jge
fisubl
ds
fdivrl
lea
add
cmp
push
imul
cmp
mov
sbb
rolb
divl
and
stc
lods
shll
nop
mov
xor
dec
mov
mov
jnp
jo
cs
clc
jns
in
mov
mov
das
dec
and
push
aam
jmp
in
mov
adc
movsl
jne
or
mov
fwait
jmp
sub
je
xchg
xlat
lcall
mov
sbb
mov
inc
dec
lret
fnstenv
popa
push
xor
popf
xchg
stc
mull
stc
fistpll
jle
cmpsl
mov
sub
sti
cwtl
scas
test
fidivl
and
xor
lods
adc
jle
mov
nop
cmpsb
jl
leave
sbb
cmpb
sub
imul
das
jno
xchg
pop
push
jns
and
xor
cmp
int
push
lock
xor
imul
es
data16
ss
jl
sub
mov
into
shrl
movsl
je
add
daa
js
push
fdivr
or
sbb
les
cli
adc
adc
mov
push
xchg
popa
lock
cmpsl
and
mov
mul
aad
xor
and
or
jmp
mov
scas
and
rcll
orl
sbb
push
jb
mul
mov
fdivrl
inc
shl
add
jp
cmp
xchg
outsb
adc
inc
mov
ret
movb
dec
lret
scas
or
dec
ds
insl
and
insb
icebp
push
into
xchg
cmp
hlt
arpl
sub
fsubs
shrb
daa
loope
je
out
xor
sarb
sbb
int
mov
decl
jp
mov
hlt
pop
repz
pushw
cmp
pop
pop
mov
in
jge
iret
push
imul
mov
enter
cmp
inc
jnp
mov
push
sbb
lds
lret
jl
ljmp
push
dec
adc
arpl
cmp
sbb
jno
mov
xchg
sbb
aaa
fdivl
add
je
int3
sub
pop
pop
dec
sti
pop
sbb
or
jp
das
testl
pop
mov
mov
aam
mov
orb
psubsb
aam
fdiv
mov
jnp
js
pop
mov
ret
imul
insl
cmp
pop
mov
push
icebp
cwtl
fldenv
pop
outsb
pop
fwait
in
ljmp
in
fidivrs
cs
je
lock
idivb
inc
add
push
dec
adc
es
aad
mov
pop
insb
pop
push
xor
out
fldcw
dec
push
sub
mov
jbe
sub
inc
scas
pop
push
inc
mov
imul
fcompl
inc
call
repnz
mov
xchg
push
sub
sub
lret
ret
outsl
mov
or
pop
inc
bsr
xlat
push
or
fs
pop
mov
pop
je
sub
inc
and
repnz
mov
jge
sti
mov
mov
fists
xchg
fisubrs
push
dec
popa
daa
dec
and
orl
or
or
jl
aad
shlb
push
pusha
and
dec
push
fisubs
loopne
or
test
pop
aaa
in
jbe
push
setl
andl
es
in
fnstenv
pop
call
movsb
sarb
das
or
jmp
push
jae
mov
and
fs
mov
ficompl
mov
pop
ficompl
dec
sub
shll
mov
stc
dec
movsb
stos
into
loope
aas
jl
pop
push
cmpsb
pop
xor
outsb
daa
stc
bound
ljmp
xor
cmp
pusha
js
cmp
imul
dec
and
mov
insl
sahf
in
insl
pop
adc
inc
jb
ljmp
xchg
jecxz
das
dec
aam
push
dec
pop
mov
inc
adc
shr
lcall
jg
xor
push
xor
in
sub
inc
dec
xchg
add
fmulp
into
inc
jmp
lret
in
scas
fdiv
sbb
jbe
cli
fiadds
push
dec
imul
inc
pop
sbb
imul
inc
cmpsl
lds
test
movsl
popa
mov
scas
inc
sub
push
mov
push
jle
jne
frstor
ja
pop
outsl
ljmp
sbb
std
sarb
ret
out
pcmpeqb
mov
movsb
mov
cltd
sbb
lods
rol
data16
or
jecxz
push
pusha
cmc
pop
inc
lods
sub
or
dec
std
xchg
hlt
call
in
pop
xor
jecxz
cmpsl
or
loopne
sbb
xor
or
push
sbb
pop
push
push
dec
pop
mov
adc
xor
in
xor
and
scas
push
dec
and
popa
adc
jp
push
xor
test
outsl
stc
out
jb
nop
sub
mov
mov
sub
or
mov
push
adc
mov
mov
clc
xor
cmp
inc
dec
imul
xor
stc
bound
das
sub
lea
sahf
cmp
xchg
ja
rolb
icebp
adc
sbb
inc
enter
outsb
jge
das
adc
adc
je
or
cmp
pop
icebp
cmp
xchg
jb
pop
ret
pop
or
cmc
mov
inc
lds
aam
jb
jnp
cltd
mov
gs
out
push
fwait
and
fwait
jne
mov
sti
jl
imul
mov
push
mov
xlat
xchg
or
mov
add
jg
ret
jle
shll
inc
pop
add
fnstsw
xchg
int
pop
rol
notl
xchg
mov
int
sbb
imul
sbb
xlat
push
lods
imul
mov
imul
mov
xor
cmp
fcompl
jl
adc
xor
pop
inc
mov
sub
dec
popf
in
loope
fwait
adc
mov
sub
test
insl
imul
das
pop
sub
pushf
cld
xorb
push
into
stos
mov
mov
jp,pt
lock
aas
fimull
pop
loope
scas
or
lds
inc
iret
lcall
jecxz
inc
fidivl
dec
xchg
stos
inc
and
sub
sub
xchg
inc
aam
aaa
shr
aam
or
mov
add
mov
push
mov
mov
loope
mov
xchg
lcall
jnp
lret
cmp
mov
fstl
out
lret
sub
lock
int3
xor
xlat
scas
aas
xchg
repnz
insb
out
es
xor
or
ror
loop
imull
pop
into
clc
push
pop
inc
icebp
or
mov
ja
nop
add
mov
mov
inc
cmpsl
push
lds
cmc
ds
adc
in
jmp
test
xchg
add
pop
loopne
popf
pushf
mov
xor
dec
mov
aaa
jns
cmpsb
in
lahf
jno
xchg
sub
jmp
adc
mov
in
push
dec
es
hlt
pop
cmp
pop
pop
repz
and
xor
lahf
and
shlb
das
test
lcall
push
roll
mov
arpl
and
jle
xor
pusha
push
push
push
mov
popf
into
inc
mov
xlat
pop
jge
repz
add
lret
lods
mov
push
cmp
push
xchg
iret
sub
sbb
pop
pusha
xlat
and
lds
adc
push
mov
cmp
mov
sbb
lods
stos
push
je
dec
jns
cmp
push
inc
imul
nop
dec
pop
push
mov
pusha
testl
aaa
lahf
scas
mov
in
jae
test
lock
rorb
les
ffree
xor
and
call
pushf
push
add
mov
negb
mov
jg
mov
adc
push
andb
scas
sub
push
push
test
jecxz
lods
jmp
ret
push
and
pusha
mov
test
mov
xlat
outsb
repnz
rclb
movsl
mov
add
inc
loop
ret
data16
sbb
rcrl
inc
out
push
shlb
mov
mov
mov
iret
nop
dec
imul
je,pt
pop
or
sub
fsubrp
xchg
mov
out
cmp
mov
mov
push
cmpb
jle
or
test
stos
jge
out
adc
in
push
fdivrl
cmp
js
pop
adc
ret
lret
fs
xchg
jo
imul
ss
aas
aad
xchg
add
push
cld
or
push
ljmp
aam
dec
push
ret
mov
jne
mov
xor
cwtl
mulb
aas
and
cmp
int
jb
add
jno
push
jle
jp
int3
adc
or
mov
add
and
mov
popl
inc
inc
cmpsb
shrb
cmp
add
or
aad
cmpsl
push
fsubp
inc
xchg
adc
or
dec
mov
rclb
lods
lcall
push
jno
loopne
pop
subl
std
jbe
test
sbb
mov
lret
ficomps
dec
clc
mov
cmp
mov
rcrl
mov
adc
inc
imul
sahf
jl
pop
mov
ret
adc
std
xor
js
mov
cmpps
fistl
int3
sub
and
sbb
jne
cmp
mov
bound
sbb
mov
xchg
mov
stc
mov
mov
mov
fs
loope
xchg
out
into
js
jo
xchg
jns
push
lahf
enter
xchg
adc
pop
iret
add
sbb
test
add
sub
sbb
mov
out
imul
jae
cmp
mov
lahf
cmp
testl
fs
arpl
stc
bound
inc
lret
fcmovbe
inc
mov
test
pop
pusha
or
roll
sahf
popf
mov
cmpsb
dec
xor
frstor
enter
cmc
inc
sbb
push
cmp
roll
dec
int3
dec
add
andl
inc
add
push
push
and
mov
call
mov
dec
loopne
shr
fmuls
mov
cmp
into
fcmove
push
mov
dec
and
jo
jmp
or
jne
mov
ret
lea
test
sub
inc
pop
cmp
scas
xor
in
or
out
or
cmpsb
or
push
mov
and
int
inc
add
jge
daa
mov
orl
movsl
jg
test
gs
cmp
or
lods
mov
xchg
pop
in
xchg
push
ds
sub
xchg
push
xor
stc
es
mov
lcall
or
je
in
popa
jne
loopne
stc
test
and
add
xor
inc
jb
ret
or
test
fisttpll
adc
shll
push
push
mov
rol
call
sub
call
mov
mov
add
inc
mov
out
int
adc
jns
cmp
push
aaa
sub
add
int
int3
jb
fs
dec
pop
push
popa
mov
push
sub
add
cmp
ds
imul
dec
rol
jno
jmp
push
xchg
lock
mov
sbb
dec
test
sbb
ljmp
aas
mov
adc
nop
push
dec
mov
fsubl
xchg
sbbb
jg
shrl
popa
js
in
test
fsubrs
lods
out
ss
hlt
push
bound
pop
shlb
clc
jmp
adc
lods
cwtl
pop
pop
pop
xor
adc
push
inc
lods
mov
pop
and
ret
fnstenv
mov
fsubl
mov
sbbl
pop
sub
xor
insl
pop
xor
pop
cmp
jg
mov
push
mov
je
push
inc
movsl
jg
and
xchg
jne
inc
sub
push
aaa
fcmovnu
jns
ret
and
cltd
ficoms
sbb
out
or
add
pop
rorb
xchg
adc
xor
ret
mov
scas
push
push
jae
sub
cmpsl
scas
cmp
stos
pop
and
pop
fsubrp
das
sbb
notb
sub
dec
negl
push
inc
adc
pop
adc
pop
mov
insl
jecxz
imul
fisttps
js
push
dec
jmp
and
insb
repnz
sub
push
push
mov
cmp
int3
inc
mov
and
mov
and
loopne
cwtl
ljmp
das
add
pop
shl
shlb
mov
lds
cmp
lret
popf
int3
push
shrl
js
clc
or
dec
leave
xchg
fistpll
xchg
andl
xor
pop
out
ljmp
mov
shlb
ss
les
adc
data16
jae
sub
in
enter
and
nop
xor
mov
pop
sub
push
or
fistpl
push
pushf
push
popf
testb
cmp
push
mov
imul
faddl
and
cmp
pop
xor
or
cmp
pop
jae
or
into
ret
inc
adc
cmpb
push
pop
push
out
dec
mov
jb
or
jge
aaa
inc
sbbl
insb
jnp
sbb
sub
sbb
jns
subl
rcll
push
dec
insl
or
ss
xor
loope
xor
mov
mov
mov
dec
aad
cmp
push
pop
ficoms
xchg
xchg
in
int3
sti
out
negb
sbb
hlt
adc
or
or
out
aas
fcompl
push
ljmp
fs
adc
js
shlb
imull
pop
movsb
mov
fcomp
mov
sar
test
mov
sbb
mov
xor
pushf
out
mov
leave
push
dec
call
xchg
orl
das
dec
stos
loope
mov
jns
cwtl
mov
ljmp
lret
test
pop
daa
add
mov
icebp
mov
xchg
in
dec
xor
jbe
loopne
js
daa
ljmp
push
out
movsb
test
rcll
lret
add
ss
and
xchg
adc
inc
push
cmp
jnp
repnz
sarb
ja
ja
js
sbb
xlat
push
mov
or
or
pop
sub
mov
lock
lea
mov
push
stc
lods
inc
mov
aad
pusha
nop
int3
and
pushf
mov
subl
push
in
ret
je
push
call
cmp
cwtl
push
fcomps
les
mov
test
out
mov
das
cmpsb
hlt
cwtl
fsubrp
out
mov
lea
lahf
stos
or
xchg
jb
pop
scas
jns
push
ds
dec
pop
xchg
cmp
xor
mov
jns
mulb
insb
cli
push
lds
insb
xor
sbb
and
cmp
cli
es
xor
lods
sbb
repnz
mov
mov
adc
les
int
and
scas
lods
enter
and
inc
mov
xchg
ja
cmpsl
sbb
test
cmpl
push
loope
outsb
je
xor
xorb
mov
aas
mov
mulb
in
lds
xchg
push
dec
sub
std
adc
in
mov
lahf
lds
loop
jb
sbb
jne
lahf
adc
in
push
lods
mov
insb
cmp
inc
xchg
mov
popa
les
sub
dec
ja
in
cmp
and
push
jge
fsubp
daa
movsb
sbb
cmpsb
or
loope
aas
je
mov
mov
js
sbb
popf
cmpsb
dec
orl
stos
mov
add
sti
mov
xor
fsubl
push
cmpsl
call
scas
les
push
clc
mov
sub
adc
das
mov
jnp
pop
mov
cld
sub
mov
and
icebp
insb
lcall
mov
shr
popa
mov
adc
pop
add
sub
mov
fadds
inc
and
mov
in
cwtl
pushf
or
pop
popl
mov
out
js
jne
fisttpll
xchg
add
lret
lds
daa
out
jns
ror
cs
adc
pushf
mov
and
lcall
inc
mov
ljmp
pushf
and
cli
loope
dec
rorl
sbb
dec
loope
rolb
cwtl
push
push
je
cmp
mov
mul
vpslld
mov
out
xchg
sub
push
inc
sub
mov
mov
xchg
sub
jne
adc
jne
fwait
jp
sbb
jnp
inc
xchg
push
xchg
adc
mov
mov
cmp
fst
pusha
or
pop
lahf
sbb
inc
inc
cs
lds
dec
ret
jbe
pop
out
jge
mov
call
pop
mov
jecxz
adc
add
sbb
jo
cld
push
mov
jmp
and
xchg
sub
push
enter
mov
mov
sarl
dec
pop
add
adc
orl
shll
pop
shll
inc
lret
insb
mov
sbb
popa
sub
imul
xchg
loop
or
xor
stc
sbb
lcall
mov
xor
cmp
outsl
cmp
repnz
adc
loopne
pop
mov
jp
fsts
push
jmp
pop
cli
and
inc
out
jg
push
mov
sbb
cmpsl
ret
clc
push
cmp
aas
les
fnstenv
xor
dec
sbb
adc
int
push
out
sub
pop
sub
enter
shl
out
mov
adc
loopne
pop
cmc
sbb
pop
inc
movsb
repnz
pop
jecxz
shll
xchg
test
je
movl
pop
xchg
adc
in
bound
subl
add
icebp
in
stc
or
jge
ja
adc
jp
andb
iret
test
push
sbb
cmp
lret
repnz
jl
push
jns
popa
je
pop
xchg
int
ds
adc
bound
fnsave
adc
push
inc
repz
in
stos
pusha
xacquire
xor
jnp
inc
arpl
sub
sbb
pop
push
movsb
jbe
sti
and
xor
subl
sbbb
xor
mov
roll
sbb
lea
cli
jl
cmp
pushf
mov
ss
and
sub
sbb
repnz
cmp
xchg
stos
fidivrs
mov
jo
insb
dec
frstor
mov
mov
rsqrtps
xlat
loop
idivl
jp
mov
andb
pop
ja
xchg
test
aaa
aas
out
dec
es
outsl
adc
mov
lcall
pop
mov
in
jecxz
cmp
jge
cmp
adc
inc
ret
out
xor
stos
es
sub
push
insl
add
lret
mov
sbb
fstl
sub
pop
nop
push
cmpsl
in
push
inc
xchg
les
jp
push
sub
aad
arpl
pop
and
rcr
push
jb
test
push
rol
std
aam
mov
mov
jo
out
push
cmpb
xchg
out
imul
leave
jecxz
xchg
xchg
aam
data16
scas
std
cld
jle
fyl2x
repz
in
lsl
sub
sti
xor
jbe
aam
sarl
and
pop
ljmp
xlat
add
jb,pt
insb
test
repnz
stos
arpl
int3
ss
cli
lahf
int
lds
sub
out
cwtl
xchg
js
xor
or
stos
aas
das
cwtl
cltd
enter
xchg
xchg
jp
shrb
push
push
push
xchg
icebp
inc
jmpw
mov
pop
mov
xorb
push
popa
sbb
rol
adc
xor
inc
std
jl
or
push
and
pop
pop
rcll
pop
push
daa
dec
stos
xchg
mov
loope
dec
sbb
jmp
cld
unpcklps
lcall
hlt
pushf
sub
in
out
clc
adc
js
fcomps
add
subb
push
xchg
inc
jb
mov
jp
sub
xchg
outsl
and
mov
dec
arpl
in
fisubs
jbe
js
mov
xchg
loopne
pop
shrb
jle
push
arpl
fs
inc
outsl
push
and
inc
or
fbld
aam
push
arpl
jne
dec
dec
je
les
repnz
cwtl
fisubrs
pop
int
stos
lcall
test
movsl
mov
add
leave
mov
mov
les
fadd
cmc
movl
cmpsb
add
out
das
and
out
aas
mov
inc
inc
push
and
mov
or
in
and
pop
jg
jmp
fildl
mov
sti
fs
pusha
add
loop
loop
cmp
fisubl
sarl
jecxz
mov
mov
test
jge
and
inc
inc
mov
sub
outsl
add
popa
ds
adc
or
jge
stos
mov
scas
adc
push
jne
pop
xor
dec
adc
push
fsubrl
popf
jecxz
dec
sbb
pop
xor
je
call
lods
out
loope
cmpsb
les
cmp
dec
inc
push
push
rclb
jmp
aam
mov
mov
or
push
roll
adc
test
mov
test
icebp
mov
or
or
mov
or
sbb
jb
lock
mov
adc
pop
jmp
repz
repz
shl
xlat
rcl
ja
popf
inc
adc
es
lret
cmp
push
xchg
jecxz
add
mov
add
ss
popf
mov
xor
sbb
dec
dec
shll
mov
andb
pop
adc
xor
insl
mov
inc
sbb
lods
out
xor
jl
sbb
mov
push
mov
xchg
mov
or
jns
xchg
inc
lock
pop
dec
pushl
push
imul
lcall
gs
sub
int3
lret
jns
sbb
add
adc
subb
popf
iret
xchg
mov
lock
sbbb
jg
jecxz
push
mov
repnz
pop
les
outsl
rcr
pop
ja
sub
mov
enter
pop
ds
lods
cmc
fs
hlt
xchg
nop
rcll
jo
negb
dec
popf
xlat
jno
fsub
dec
dec
in
mov
mov
std
lcall
xor
fistpll
cld
fmul
lea
in
sbb
and
test
jb
ret
cld
lea
mov
fstpl
pop
pop
or
cmpsl
lret
xor
mov
mov
mov
dec
out
add
add
or
shlb
dec
in
inc
mov
outsb
int
data16
inc
out
jns
adc
addr16
cmpsl
or
adc
push
xchg
cmpsb
cmp
enter
aad
adcb
or
inc
or
pusha
sahf
pop
aaa
loop
lods
dec
pop
insl
push
cmp
dec
or
adc
movsb
xor
outsb
sub
mov
sub
jl
mov
in
dec
fwait
push
and
popf
sub
push
add
adc
xor
adc
push
mov
out
jp
jno
movsl
xchg
xchg
mov
mov
pop
mov
nop
in
js
in
xor
shlb
iret
sub
test
pop
sbbl
inc
mov
aaa
jecxz
lcall
adc
jnp
in
or
rcl
xchg
mov
cmp
lds
push
stos
jbe
push
movsb
sub
add
insb
scas
das
in
sbb
jecxz
add
out
std
dec
sub
adc
pop
ret
xchg
mov
gs
shrl
repz
negb
adc
inc
arpl
movsl
sub
sti
daa
dec
faddl
fsubs
fwait
cwtl
pop
push
fisubrl
movsb
rclb
jp
lds
add
lods
shrb
ret
mov
in
mov
or
push
pop
sbb
int
push
ds
mov
pop
adc
mov
icebp
dec
inc
fstps
test
pop
inc
shrl
xchg
dec
inc
push
jno
jmp
mov
aaa
sub
js
mov
sarb
mov
jne
stc
sbb
fisttps
push
or
jne
fildl
jg
mov
cmpsb
mov
arpl
inc
inc
jo
push
mov
stos
push
and
fistps
jl
arpl
xchg
pushf
adc
aaa
sbb
adc
inc
adc
push
incl
and
cwtl
push
sahf
dec
imul
jae
arpl
arpl
xor
repnz
sub
shlb
movsb
mov
pop
arpl
cmpsb
loop
xchg
inc
inc
inc
push
aas
mov
out
sbb
push
imul
in
fs
loopne
xchg
sbb
adc
lret
xor
fs
aam
mov
mov
mov
add
add
add
add
xorl
xor
movl
cmp
jne
mov
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
push
movl
cmpl
je
cmpl
jne
pushl
push
push
call
xor
add
dec
mov
jmp
movl
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
movl
mov
add
push
mov
xor
add
sub
and
mov
addl
mov
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
jmp
mov
subl
mov
and
and
int
bound
add
cwtl
jg
pusha
cltd
out
pop
cmp
jle
xchg
mov
leave
loopne
addl
or
sub
cmpsl
stos
mov
or
jns
push
lcall
push
nop
or
out
sub
les
dec
add
mov
push
mov
rorl
imul
lahf
push
test
daa
dec
out
repz
jae
or
js
mov
xchg
rorb
add
mov
std
cwtl
jne
sahf
js
test
add
aam
ljmp
std
push
inc
mov
or
cmp
push
xchg
or
cmp
sbb
imul
neg
cli
push
lods
mulb
or
insl
leave
inc
jge
xor
mov
fisttpl
pop
adc
push
mov
lea
inc
dec
out
dec
cwtl
outsl
mov
jmp
and
loopne
adc
fiaddl
into
std
adc
mov
add
push
jno
out
mov
out
in
push
jns
cs
jnp
mov
dec
call
ret
push
pop
bound
add
ds
sub
cwtl
mov
fsubl
or
lods
mov
pusha
movsb
ds
mov
pop
insl
add
push
and
leave
ja
pop
orl
loope
mov
sbb
jmp
in
mov
pop
dec
cmp
push
int3
jp
jns
cli
mov
pop
pop
pop
xchg
mov
sub
cmpsl
lds
mov
rcr
lods
push
dec
pop
mov
jae
push
or
xchg
adcb
and
mov
xor
addb
out
test
loope
cmp
cmp
and
fistps
and
out
mov
xchg
mov
sub
test
out
jb
and
inc
mov
sbb
in
and
sti
and
repz
sbb
jmp
mov
aas
and
push
lret
add
push
mov
xor
out
jge
inc
inc
adc
test
movsl
test
or
jnp
dec
notb
fsubs
in
xor
subl
ret
fsubl
mov
cmpsl
cmp
or
lock
lock
xor
jb
jmp
je
or
dec
mov
cmp
fsubs
sub
cmovo
mov
xor
jl
orl
pop
xchg
mov
inc
or
add
repnz
xor
pushf
shll
and
inc
sub
imul
fs
pop
imul
xchg
in
jl
cli
insb
push
pop
sahf
icebp
in
xlat
mov
out
push
outsl
lahf
mov
mov
mov
rol
aam
mov
mov
lea
cmp
adc
add
pop
or
xor
test
mov
push
sub
and
nop
sbb
test
sub
sub
adc
xchg
xor
sub
negl
imul
add
adc
jmp
xor
push
int3
aam
and
or
xlat
sub
fsubrs
inc
mov
dec
mov
add
push
ds
ljmp
sub
cltd
push
scas
sub
dec
les
sub
fxch
icebp
scas
mov
push
adc
pop
cmpsl
incl
movsl
out
test
sub
pop
aas
test
fwait
out
fdiv
lds
sub
inc
mov
hlt
clc
adc
xchg
ja
jmp
test
inc
gs
dec
rcrb
stos
push
sub
mov
cs
and
mov
dec
fldl
les
dec
lea
dec
xchg
mov
js
ja
insl
out
movsl
lock
lods
imul
leave
mov
fmul
iret
ss
dec
out
add
in
test
sbb
pop
in
dec
cmpsl
mov
jmp
jno
push
cmp
dec
push
xor
loope
jp
out
xor
repnz
dec
push
mov
clc
xor
lods
aad
pusha
sub
xor
stc
stos
scas
jo
push
lods
pop
stos
adc
mov
mov
sbb
cld
cltd
icebp
mov
rolb
call
lock
sub
rolb
prefetch
aam
push
or
xchg
sub
sti
mov
inc
mov
sbb
jg
sub
movsl
in
push
push
in
or
ret
mov
push
insb
push
mov
xchg
stc
imul
xchg
mov
inc
mov
adc
fsub
or
mov
cmp
adc
and
sub
xlat
fwait
inc
std
data16
mov
es
outsl
mov
adc
shrb
popf
push
inc
ja
push
js
jecxz
cli
sahf
mov
scas
pop
sarl
test
test
lea
cld
xchg
pop
ljmp
stc
mov
gs
int3
lcall
arpl
push
add
stos
jbe
aas
cs
mov
popa
les
cmpsb
add
jl
xchg
imul
repz
cmp
fisubl
pop
ret
loop
push
es
cmp
mov
xchg
pop
out
push
ds
ret
inc
stos
mov
nop
push
inc
mov
aaa
push
movsl
ja
movsb
test
or
mov
sub
mov
fldt
imul
adc
fcomps
mov
mov
rorb
ret
cmp
push
mov
push
pushw
jge
pop
scas
jbe
adc
ret
ljmp
pushf
mov
or
and
out
sub
pop
cmp
arpl
jb
mov
and
or
pop
scas
push
sub
inc
rclb
test
jo
cltd
bound
add
cmp
addr16
push
dec
lods
loop
ret
fldenv
out
and
int3
inc
fisttps
pop
outsl
push
xor
cmpsb
pop
xor
call
stos
fstpt
fld
sbb
mov
rclb
dec
add
pushf
sub
jge
ss
mov
pushl
scas
js
push
and
cmpsb
cli
xchg
push
jo
pop
sbb
repnz
movsb
incl
push
adc
div
test
inc
xor
outsl
pushf
adc
sub
mov
and
decl
jmp
and
xor
or
jge
jbe
and
stos
dec
leave
mov
push
or
push
mov
movsl
scas
iret
sub
or
sub
es
mov
fisubrl
lock
lahf
orl
clc
arpl
or
test
cmpsb
mov
mov
repz
mov
aad
js
xchg
xor
adc
cmp
fucom
push
leave
in
dec
shl
int3
insb
ss
shll
xchg
mov
xchg
sti
push
hlt
push
xor
push
jae
inc
push
fisubs
push
sub
sbb
mov
scas
fldcw
cmp
jo
lahf
xor
inc
push
mov
xlat
out
and
fmul
mov
ret
sbb
outsl
pop
inc
adc
push
pop
in
or
pop
sbb
arpl
xor
jbe
or
cmpb
mov
test
xorl
mov
rcr
mov
fbstp
jle
fs
xor
mov
adc
cli
pushl
test
pop
mov
xchg
mov
mov
xchg
fiadds
adc
mov
jo
dec
xchg
xchg
inc
push
ja
add
push
adc
insb
push
shlb
sub
cltd
xchg
and
push
out
mov
and
pop
sbb
or
xchg
push
jp
decb
sub
in
xchg
jns
shrb
mov
setbe
inc
jmp
mov
mov
sbb
stos
icebp
cmc
int3
jl
jmp
int3
sti
pop
xchg
popl
mov
mov
icebp
ds
sub
repnz
sarl
xor
aam
lret
jns
adcl
mov
dec
outsb
mov
or
hlt
xchg
jno
dec
mov
ljmp
aad
push
inc
xchg
push
pop
sub
xor
pop
ja
sbb
jne
mov
jb
cmp
pop
dec
mull
out
dec
inc
add
xchg
cmp
in
or
jge
xchg
add
scas
std
ja
mov
out
cmc
fnstsw
cmp
js
ficoml
mov
fcompl
clc
mov
icebp
push
adc
cmpsl
dec
loope
mov
xchg
lcall
stos
clc
mov
xchg
lock
cmpsb
jb
sbb
or
je
outsb
sbb
inc
mov
repnz
push
sub
jnp
sti
unpcklps
sub
out
xor
lods
xchg
movsb
out
mov
mov
sti
mov
test
cli
and
insb
mov
or
imul
or
add
dec
sahf
mov
loopne
mov
xor
jno
insl
insl
adc
enter
daa
pmaxub
or
adc
rorb
pop
sbbb
xchg
cmp
movhps
insl
pop
popf
sti
jbe
cli
jl
dec
jecxz
daa
or
push
lahf
sbb
in
fisttpl
add
popf
mov
sub
fs
movsl
mov
clc
jne
ds
sbb
or
test
jl
ror
mov
mov
lds
cmc
dec
and
lret
loopne
out
cltd
dec
adc
int
cs
ja
push
mov
icebp
adc
and
push
mov
insb
xor
sbb
fstps
insb
pop
sti
sarb
fbstp
xchg
fdivrl
fdivrs
inc
testb
push
sub
jne
xchg
fsts
imul
push
loop
inc
clc
fdivrs
pop
aad
xor
jo
call
add
in
jg
add
daa
and
arpl
in
xor
icebp
push
pop
sub
imul
jno
mov
push
jl
out
dec
insl
cmpl
lock
push
lods
pop
fisubrl
testl
cs
mov
mov
scas
inc
add
mov
add
jl
cmc
lods
ja
mov
ljmp
out
imul
sub
cmp
pop
leave
mov
fistps
or
fdivr
xchg
or
cwtl
mov
sub
aas
ffree
jp
stos
or
sbb
movsb
mov
and
jg
aad
scas
dec
jo
cmp
push
stos
lret
cltd
adc
outsb
loop
fistpl
flds
jmp
xchg
mov
xor
xchg
mov
or
fcomps
call
mov
imul
xchg
mov
pop
xchg
xlat
aas
pop
rol
xchg
add
lcall
jmp
pop
or
das
js
mov
cmp
outsb
or
mov
stos
xor
xchg
fsubrs
jae
hlt
mov
jns
fstp
xchg
hlt
jle
aaa
idiv
leave
fs
lret
shl
bound
daa
xchg
nop
pop
es
push
sti
sbb
add
or
sub
data16
and
dec
xchg
pop
addr16
cmp
fistpll
lret
ljmp
rcl
and
mov
xchg
xchg
add
aas
mov
negl
outsl
inc
stc
movsb
xor
popf
enter
pusha
jne
mov
push
int3
cmc
testl
and
and
ret
inc
xor
jg
mov
xchg
cmp
lahf
push
inc
data16
ret
adc
sub
popa
add
inc
ja
lods
test
rcr
loop
jae
bound
mov
clc
call
cmpsb
jl
jg
fsubr
pop
pop
jno
fmull
inc
sti
inc
mov
sti
int3
dec
ss
push
icebp
in
add
push
cli
mov
icebp
rclb
push
fisubrl
xchg
xor
pop
sub
lret
sub
out
js
popf
pushf
fisubs
inc
ljmp
sub
insl
sbb
push
sbb
adc
mov
mov
shrb
cli
imul
sbb
xor
movsl
add
xchg
fistpl
xorl
inc
ds
sbb
xor
cmpsl
test
lcall
pop
push
cld
mov
repz
testl
push
lds
scas
xchg
push
sbbb
sbb
pop
test
jbe
dec
sbb
lods
sub
jb
pop
inc
pop
imul
ret
int3
push
mov
ljmp
imul
rcrl
add
cmp
and
sbb
and
test
je
xor
sbb
xchg
and
test
push
mov
lcall
xchg
leave
adc
and
jb
pop
fdivl
popf
push
jl
add
dec
cmp
push
test
add
dec
jle
sub
sarb
xor
stos
inc
add
pop
xchg
gs
xchg
mov
mov
jle
cli
cmp
xor
mov
mov
jne
enter
dec
push
mov
daa
icebp
cmp
lret
cmp
and
daa
cmpl
scas
xchg
push
rorb
insl
icebp
fisubl
mov
fs
cmc
outsb
push
mov
xchg
fsubrp
xchg
aad
subl
ficoms
outsl
mov
iret
push
xchg
pop
mov
in
in
stos
loope
nop
add
ja
rdtsc
loop
adc
jb
fistl
mov
negl
jb
pop
dec
jge
cwtl
dec
pop
outsl
xchg
orb
imul
outsb
xorb
mov
fs
or
jge
fmull
push
mov
inc
sub
in
mov
aad
aaa
aam
out
testl
add
ret
push
xchg
cmp
dec
mov
fabs
fcomps
fucom
jb
jo
dec
ds
test
xchg
mov
mov
lret
and
inc
jmp
loope
mov
loope
bound
inc
fists
sub
jno
push
push
sti
sub
shl
gs
cmp
lods
dec
lods
jmp
push
jne
jmp
lods
test
push
mov
mov
pop
or
repz
mov
inc
mov
mov
mov
test
cmp
mov
loop
insb
orb
inc
jns
rcrl
pop
and
loopne
mov
cld
hlt
jecxz
fs
loope
xor
mov
jle
hlt
dec
add
ds
shll
push
dec
lcall
and
leave
hlt
ljmp
int3
sub
jbe
inc
ficompl
orl
inc
cmp
scas
cmp
int
sbb
xlat
mov
pop
mov
pop
adc
sub
jge
jmp
and
movsb
test
add
cmpsl
test
je
inc
fistl
or
mov
in
pmulhuw
mov
outsl
push
jns
mov
das
adc
or
testb
dec
movsb
lret
pop
sub
inc
cli
pop
ficomps
aam
movsb
imul
mov
mov
xchg
inc
mov
cmp
aas
pop
aaa
xor
stos
and
mov
gs
cld
xor
push
and
in
push
cmpl
jbe
sbb
mov
mov
int
pop
stos
dec
push
sbb
xor
mov
dec
mov
xchg
sbb
dec
imul
in
sub
mov
jmp
lods
mov
sti
xchg
sbb
dec
stos
mov
mov
push
mov
fcoml
jne
rclb
aam
cmp
adc
xchg
pop
ds
movl
and
arpl
dec
cltd
rclb
pop
add
mov
or
mov
icebp
hlt
mov
cmpsl
pop
cmp
sbbb
pop
shr
test
lods
icebp
sub
sti
aaa
sub
ljmp
pop
aaa
push
out
dec
mov
and
inc
sbbb
pop
adc
divl
add
aaa
or
pop
ljmp
jl
add
pop
pushf
mov
dec
xchg
cmp
jbe
mov
mov
or
cld
dec
xor
cmp
rcl
aad
inc
push
nop
add
inc
xchg
jle
push
data16
push
gs
je
test
test
and
out
mov
pop
mov
sbb
and
add
cs
int3
out
aam
icebp
inc
sbb
pop
xchg
jo
inc
leave
das
lret
xacquire
inc
dec
in
sbb
jecxz
in
inc
shlb
dec
jmp
sahf
lods
jo
icebp
sbb
xchg
lahf
popf
cmp
sub
pop
jb
push
fidivs
jge
sbb
inc
out
loop
shlb
bnd
or
aam
mov
xchg
adc
mov
fcoml
dec
mov
dec
jno
sub
pushf
mov
fwait
popl
dec
insl
pop
fs
daa
jg
sub
or
mov
adc
scas
jbe
aas
mov
sub
mov
xchg
insl
mov
insl
push
pop
sahf
aam
lcall
leave
pop
push
add
ret
je
fmul
aaa
and
lcall
leave
loopne
sbb
ficoms
adc
pop
cs
jnp
mov
dec
cmp
dec
sub
cli
mov
lea
jb
push
mov
test
out
ds
cwtl
leave
inc
xor
jo
sub
jbe
mov
das
jle
mov
loope
repnz
dec
cmp
xor
jl
test
sbb
mov
outsb
inc
xchg
adc
ljmp
lret
mov
mov
sub
mov
and
mov
inc
mov
inc
dec
cmpsl
jle
daa
sbbl
push
sbb
sbb
adc
jnp
incb
dec
cld
dec
jo
fldl
pop
paddsw
adcl
test
and
dec
pop
inc
or
repnz
inc
mov
out
push
lret
icebp
insl
xchg
movsb
or
outsl
inc
mov
lahf
xlat
loope
cmp
xorb
xor
mov
sbb
sbb
int3
xor
nop
mov
mov
popf
push
push
lods
mov
gs
sti
mov
push
xor
mov
xchg
pop
pop
into
push
outsl
into
lea
jge
int
and
push
in
xor
cmp
xchg
inc
dec
xchg
cmc
mov
cs
pop
loop
cli
popa
add
mov
loop
pop
jnp
scas
test
loope
out
stc
pop
ja
mov
pop
xchg
fisubs
xor
das
mov
push
pop
add
mov
pop
repnz
dec
outsb
xchg
fsubrs
shlb
mov
mov
lcall
dec
test
push
andl
and
xchg
mov
or
daa
rclb
and
test
mov
jne
and
mov
out
pop
arpl
popf
cli
inc
sbb
mull
or
jle
sbb
sbb
and
sbb
mov
dec
pop
clc
lret
lods
scas
fs
roll
cmp
or
xor
mov
cwtl
push
inc
mov
mov
cli
sub
and
outsb
in
cld
dec
xchg
shll
lret
adcl
add
adc
std
push
ljmp
into
adc
xchg
inc
jl
xor
fimuls
xor
jb
jp
jecxz
mov
leave
mov
test
cmp
push
jl
push
shrb
or
outsb
and
cs
jno
int
cwtl
adc
dec
sub
sbbl
fistl
cli
mov
jecxz
adc
outsb
xlat
jl
adc
test
ror
cli
imul
ljmp
int3
daa
nop
jle
ljmp
add
cwtl
cmp
call
xchg
nop
pop
gs
jle
outsl
pop
push
cmp
std
in
scas
xchg
mov
mov
cmp
push
ss
shlb
psubb
or
push
xchg
push
int
pop
xor
xor
mov
test
out
sub
xor
xchg
lods
jge
pop
test
aas
fdivl
das
fmull
daa
cmp
push
out
mov
cmp
mov
cmp
lret
ds
int3
xchg
ret
cmp
out
mov
fsubrs
ja
xchg
cmp
int3
mov
xchg
outsb
repz
out
push
sub
rcll
ds
or
add
push
pop
lcall
add
pop
and
pop
int3
mov
jnp
outsl
pop
xor
repz
ret
je
cmp
adc
stc
aas
sub
repnz
push
mov
push
inc
gs
movsb
sub
arpl
imul
xchg
jno
arpl
nop
jbe
arpl
enter
les
and
cmp
leave
in
lret
push
jbe
cmc
lahf
adc
cmc
push
gs
out
push
or
jg
leave
push
pop
in
insb
sub
push
xchg
dec
mov
lods
inc
out
pop
dec
sub
mov
dec
dec
aad
or
loop
xchg
jb
loope
ljmp
nop
and
mov
cwtl
pushf
xor
or
dec
in
cmp
sarl
dec
mov
in
add
adc
stc
xor
push
lock
or
cmp
jnp
add
and
add
and
nop
test
icebp
adc
xor
out
sub
in
pop
and
int
or
out
dec
aam
icebp
mov
sarb
aam
jnp
adc
lods
dec
sub
imul
in
inc
and
jb
mov
mov
addl
sub
cs
mov
push
int3
loop
fildll
and
cmp
loopne
xcrypt-cfb
cmpsl
cmpsl
add
and
pop
add
aaa
inc
popl
sbb
aaa
hlt
shrd
subl
gs
pushf
dec
mov
outsl
jle
adc
rolb
scas
lods
sbb
scas
mov
pushf
adc
test
pop
sub
or
out
out
pushf
or
jnp
stc
inc
sahf
xchg
jnp
push
jl
add
cli
mov
test
xchg
mov
fldcw
aam
add
aas
ja
xor
icebp
and
out
mov
andb
aad
in
inc
sub
mov
rcrl
xor
mov
pop
mov
pop
mov
aas
mov
jl
mov
incl
vpmaxub
loope
pop
fiaddl
mov
or
or
out
or
adc
mov
push
pop
orl
push
cmp
cmp
push
jecxz
dec
subl
mov
stc
fwait
or
fisttpll
pusha
mov
jnp
mov
jle
xor
sub
gs
addl
inc
dec
push
in
jne
pop
out
call
addr16
stos
inc
inc
sub
xor
and
adc
sub
xchg
xchg
fidivl
cmp
test
inc
xor
or
add
lahf
add
sub
les
in
lods
out
adc
lods
or
push
test
fs
mov
pop
mov
test
jecxz
insl
xchg
aam
leave
xchg
stc
daa
stc
sahf
sbb
cltd
out
xorl
push
inc
jmp
aam
push
and
int
out
jmp
ljmp
add
jae
sub
mov
out
jb
in
enter
dec
jbe
mov
pusha
push
insb
cmc
ljmp
lret
cmpsl
lret
add
aas
lock
loop
movsl
or
cmp
pop
and
loopne
or
sub
lods
lods
bound
sub
add
push
xchg
sbb
jg
lahf
jns
std
fsub
sbb
inc
push
loopne
xchg
aas
push
fisubl
call
push
mov
sub
add
adc
mov
pop
loopne
push
or
push
mov
pop
testb
push
scas
dec
repnz
pop
syscall
or
jecxz
mov
xchg
dec
cmp
fldcw
mov
pushf
stos
aam
or
or
sub
push
push
cmp
ljmp
push
adc
mov
int
mov
test
pop
repnz
inc
aaa
mov
and
repz
pop
push
adc
out
in
mov
imul
mov
cs
mov
mov
xchg
sbb
stc
mov
enter
int
mov
mov
loopne
movb
call
in
pop
adc
mov
je
adc
lret
and
pushf
xor
add
aam
rclb
cmp
push
pop
add
adc
dec
inc
lods
fwait
adc
mov
add
sbb
pop
push
add
cmpl
jl
or
sub
pusha
movsb
xchg
pushf
jo
mov
cs
in
les
fwait
cmp
jae
jl
inc
pop
dec
fnsave
sub
adc
test
add
aas
add
out
ljmp
insb
jecxz
das
mov
into
mov
add
inc
mov
sub
push
and
fsubrl
inc
or
mov
cltd
push
fistl
fst
inc
out
int3
aad
movsb
testl
push
divl
ficoms
xor
nop
popf
out
or
pop
mov
popa
stc
cmp
cmpsb
xor
add
mov
mov
pop
je
cmp
cld
xchg
add
test
rcll
movsl
and
xor
xchg
dec
pop
ds
mov
loop
mov
inc
movsb
adc
das
pop
jbe
sbb
clc
subb
sbb
add
mov
cmpsb
ja
and
mov
mov
je
adc
dec
sub
mov
adc
roll
pop
xchg
push
xor
xor
test
xchg
mov
aas
add
or
jecxz
jbe
jp
dec
xlat
test
popa
dec
mov
sbb
subl
push
pushf
jmp
add
or
int
scas
das
push
fdivs
mov
loope
push
int3
cmp
pop
sahf
movsb
mov
mov
or
test
sbb
pop
or
ret
imul
aad
aas
fcompl
mov
ja
dec
loope
fnstenv
lret
sbb
xchg
mov
ror
push
xchg
stos
pushf
cmpsb
add
or
jo
sbb
popa
cmp
and
js
mov
gs
sbb
add
or
call
mov
fstpl
loopne
adc
push
push
jnp
jnp
xchg
pop
mov
inc
push
fldt
jbe
pop
inc
loop
nop
hlt
shr
mov
inc
frstor
dec
jp
pop
fdivs
clc
inc
lea
push
inc
xchg
pop
cwtl
sbb
dec
imul
insb
hlt
ffree
jnp
pop
push
je
dec
adc
inc
mov
cmp
sub
movsl
push
inc
push
out
xor
clc
aaa
dec
decb
imul
ficompl
fcoms
stos
mov
mov
std
addl
dec
dec
out
mov
sub
pop
inc
inc
jmp
cmp
sub
or
push
cmc
je
ds
jns
xor
fdivrs
das
aas
inc
addb
iret
jno
dec
cmpsl
clc
or
fsubrp
mov
imul
les
and
push
decb
sbb
in
aam
mov
dec
les
fsts
mov
cmc
mov
or
outsb
jno,pn
mov
mov
jns
fcompl
mov
cmc
jns
cld
xchg
jo
dec
dec
fisttpl
orl
fimuls
add
loopne
mov
fidivs
shrl
push
inc
cwtl
inc
mov
jb
or
xchg
adc
ja
jg
shll
popa
sbb
ret
movsl
ds
das
jo
and
or
stos
push
jle
cmp
sub
xor
xchg
lcall
sbb
mov
pop
out
imul
ret
xor
xchg
ret
sbb
push
mov
scas
mov
aam
mov
sbb
mov
shll
pop
jl
inc
dec
inc
dec
xchg
jns
mov
ds
cwtl
lahf
xor
dec
idiv
push
xchg
fwait
sti
imul
shlb
out
or
test
push
fmull
cmc
and
jnp
xchg
pop
and
cmpsl
xlat
mov
mov
mov
fisttpll
jbe
sbb
mov
xchg
and
and
push
fidivrl
adc
call
push
ds
inc
loopne
sbb
mov
xchg
ds
movsb
xchg
mov
daa
and
lock
mov
sub
lock
fisubs
test
ja
xor
xor
mov
outsl
ljmp
xchg
stos
roll
sti
dec
lret
adcb
mov
stc
fcmovnu
mov
sbb
std
movsl
fadds
pop
enter
jg
inc
push
pop
pop
fucomip
ret
daa
shll
sub
scas
hlt
mov
or
popa
aas
cli
xor
pushf
outsb
out
pop
inc
jno
xchg
jecxz
adc
mov
dec
jge
dec
sub
add
loop
push
push
idiv
sahf
push
int
out
jmp
pop
lret
loopne
cmp
scas
test
push
out
mov
inc
shll
gs
inc
pop
adc
loopne
pop
aam
dec
frstor
inc
adc
stc
xor
stos
or
mov
xchg
add
xor
mov
dec
cltd
icebp
xor
jp
ret
lods
pop
xlat
xchg
popl
sbb
int3
jb
push
push
xor
fistps
insl
js
insl
into
scas
ja
cmp
push
ret
or
sub
sub
jne
jle
jge
sub
mov
in
out
xchg
sbb
push
hlt
icebp
dec
shlb
test
call
int3
mov
nop
push
jb
dec
movsb
daa
adc
pop
xor
cmp
bound
ret
or
pop
xchg
push
sahf
imul
fwait
cwtl
test
sub
cmp
pusha
iret
faddp
dec
jp
daa
inc
mov
scas
out
imull
insl
data16
mov
lret
dec
rcll
cmp
test
pop
in
imul
jge
test
or
pop
cmp
popf
mov
push
mov
add
rcrb
jno
lea
roll
mov
add
icebp
pop
push
and
jbe
in
rclb
mov
add
add
je
mov
jle
sub
add
push
out
incl
shrd
aaa
mov
ret
fwait
inc
jmp
cmp
xchg
push
test
or
addr16
jne
cltd
test
jnp
sub
and
or
push
cmp
inc
mov
or
ja
insb
daa
test
pusha
sub
fninit
dec
adc
sar
jns
push
inc
sbb
mulb
arpl
ds
dec
stc
jo
adc
aaa
sahf
es
mov
movsb
out
loopne
jmp
and
mov
and
and
test
sub
inc
je
jle
jg
mov
inc
mov
in
ret
jg
jno
sbb
and
mov
cmc
jp
push
sub
dec
dec
and
loopne
stos
add
mov
repnz
sub
aad
mov
mov
in
repz
pusha
sbb
inc
ficoms
mov
pop
iret
xlat
adc
mov
fmuls
out
or
js
loopne
mov
adc
add
sub
lock
movsb
xchg
adc
push
fcmovbe
lea
adc
mov
xchg
rcl
and
aaa
pop
and
fs
subl
repnz
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
jmp
aaa
dec
cmpsl
sbb
xchg
and
push
dec
add
int
bound
sbb
divb
fwait
xchg
cmc
pop
push
inc
mov
aaa
push
roll
repz
add
mov
scas
in
push
and
fcomp
jecxz
dec
stos
push
push
arpl
aas
cmp
lret
int3
sbb
pop
sbb
jl
inc
pushf
pop
mov
add
imul
sub
lret
or
mov
ljmp
jl
push
xchg
loop
mov
lcall
std
add
mov
push
or
push
mov
pushf
sbb
or
hlt
outsl
rorl
lret
pop
pop
lret
fdivs
pop
addl
or
movsb
push
pop
lahf
xor
mov
or
xchg
in
dec
inc
mov
mov
add
test
cmpsl
cmp
pushf
jecxz
adc
jae
inc
inc
mov
stc
into
aaa
jne
jns
jns
subb
add
dec
iret
xor
mov
xchg
in
mov
repz
inc
aam
mov
mov
xchg
dec
or
ret
mov
test
push
mov
lret
xor
fildll
pop
inc
rcrb
pop
int
roll
cli
clc
mov
adc
lea
stos
cld
in
xor
mov
inc
in
rcll
loopne
hlt
push
push
cli
shlb
sahf
movsb
dec
pushf
inc
xchg
test
xor
in
clc
and
mov
int3
or
lods
in
adc
cmp
bound
mov
test
mov
xchg
or
fcmovne
and
daa
push
pop
data16
arpl
add
repz
dec
lods
aad
lock
cli
sbb
ja
fcmovnb
add
clc
mov
add
or
add
mov
cltd
sti
mov
xchg
imul
dec
sbb
add
roll
and
cmp
fimull
sbb
mov
mov
push
cmpsb
mov
popa
adc
test
sbb
sub
adc
cs
cmp
cmp
in
inc
nop
push
mov
dec
outsl
repz
ljmp
push
daa
or
addb
out
cmc
pusha
cmp
jno
adc
xchg
push
lea
ret
inc
andb
dec
sub
fisttpl
ja
xchg
mov
or
scas
aas
sti
mov
int3
fistps
push
sub
clc
jb
out
test
fwait
or
outsb
fcmovnu
sub
jo
sub
inc
xor
jmp
aas
pop
test
ret
decb
gs
sti
push
aad
mov
ret
push
adc
sbb
add
xchg
icebp
inc
jle
insl
jmp
out
dec
dec
push
and
mov
push
mov
adc
or
loop
bound
fsts
and
std
outsl
sbb
sub
loop
xor
ljmp
lods
pusha
shll
adc
add
xchg
and
daa
adc
dec
or
cmovp
mov
and
jno
push
incb
mov
inc
sub
push
inc
pop
inc
sbb
ja
pusha
fs
and
pushf
xchg
adc
jecxz
stos
mov
adc
xor
int3
sbbl
jae
mov
icebp
sahf
xchg
cmp
jne
xchg
jne,pn
cwtl
int
fnstenv
push
mov
cmp
cli
sub
test
xchg
sbb
repz
or
sub
sti
dec
daa
loop
into
arpl
nop
push
stos
xlat
mov
jmp
jmp
lds
xchg
aam
mov
in
popa
pop
or
or
jmp
ljmp
push
andb
movsl
mov
jecxz
aaa
ja
pop
push
es
mov
imul
scas
imul
js
sti
add
sub
pop
aas
dec
ds
push
jmp
xor
call
mov
and
fisubrs
loop
faddl
pusha
icebp
jne
mov
pop
fs
sbb
mov
in
dec
cmp
pop
pusha
xchg
loop
xchg
or
jecxz,pn
mov
popf
stos
pop
and
add
jb
scas
cmp
into
dec
scas
cmp
jg
notb
jne
xor
dec
outsb
mov
push
gs
cmp
xchg
stos
fcmovne
ljmp
mov
cmpsb
cmp
decb
xchg
push
mov
mov
or
bound
imul
xor
mov
mov
shrb
jge
aam
jge
mov
xchg
cltd
fisubs
imul
inc
bound
push
aas
enter
sbb
pop
out
fldl
js
push
ds
loope
mov
std
dec
pop
in
lea
or
lds
xchg
jne
mov
out
mov
popf
or
into
mov
xlat
mov
push
xor
xchg
popf
jle
cwtl
outsb
and
jno
sbbl
mov
es
mov
adcl
mov
sub
cs
ljmp
jle
push
mov
add
dec
xchg
push
ja
pop
sbb
hlt
insl
jbe
inc
rol
lock
lea
inc
fldt
es
xor
fsub
mov
pop
aam
add
test
loope
data16
das
stc
push
scas
xor
and
mov
mov
pop
loopne
stos
cmp
icebp
fnsave
push
in
xor
mov
jmp
push
addb
and
and
notl
lods
mov
and
and
out
movsl
jne
jno
push
jno
mov
and
mov
mov
mov
fsts
adc
out
jb
popa
mov
add
add
pop
mov
xor
sarb
or
pop
xor
les
lcall
jle
sarl
push
add
jl
push
ss
cmp
lea
in
enter
cmpsb
inc
int3
call
push
call
push
das
and
mov
push
movsl
inc
jmp
fistpll
jb
out
push
outsb
sbb
xor
or
xchg
out
stos
lret
sbb
jle
push
jbe
test
test
jge
and
dec
orl
pop
enter
sbb
movsl
sti
mov
push
push
xlat
cmpsl
repz
push
or
cli
pop
mov
jmp
jp
insb
bound
sbb
sbb
inc
out
ljmp
fwait
ja
lock
sbb
in
popa
repz
sub
out
push
pop
leave
aam
bound
mov
les
test
or
scas
pop
pop
and
pop
movsl
fcoms
adc
mov
cmp
mov
popf
push
cltd
les
jo
nop
rol
xor
xchg
xchg
inc
stos
inc
hlt
ret
movsl
dec
fdivl
int3
movsb
and
mov
ret
repnz
imul
xchg
inc
popa
dec
es
loop
add
out
dec
sarl
cs
dec
rcrl
cli
addr16
jno
sbb
jl
pop
and
std
das
xor
test
repnz
cmc
xor
fildl
int3
es
sbb
sarb
push
sahf
stos
sbb
xorb
or
aas
rolb
adc
pusha
dec
or
insb
rep
sbb
sti
cwtl
sbb
jl
mov
data16
xchg
int
add
mov
lods
sub
pop
add
es
xor
jle
jmp
rcrl
addr16
repnz
cltd
outsl
dec
inc
and
xor
fwait
addr16
test
sub
lods
and
std
jecxz
imul
shlb
jp
cwtl
and
pushf
sbb
xor
fldcw
out
sahf
pop
mov
iret
mov
stc
pop
lock
xchg
bound
movsb
add
lea
les
lods
lea
or
popf
cmp
aam
xchg
sbb
out
xor
lods
add
jg
popa
je
inc
decl
mov
jp
mov
movsb
jle
pop
subl
jecxz
dec
adc
jnp
sbb
divb
loop
dec
xchg
data16
cmpsl
int
lods
int3
cmc
aad
movsl
jo
stc
jo
jno
popa
dec
jns
cwtl
mov
mov
push
add
xchg
add
pop
arpl
xacquire
mov
xchg
dec
rcll
repz
and
loopne
add
lods
std
shll
pop
inc
sub
aam
sbb
divl
mov
daa
sbbl
lods
lret
and
fadds
std
repnz
popa
ffree
orl
xchg
js
xlat
push
in
mov
std
test
sarb
sbb
mov
inc
out
xor
xchg
xchg
outsb
xchg
cmp
xchg
xchg
cmp
jg
cs
sahf
popf
dec
mov
pop
mov
cli
xchg
xchg
sub
into
cltd
repnz
mov
dec
pop
lret
in
or
fwait
es
sbb
jo
push
cmp
dec
lcall
sbb
jp
repnz
and
mov
adc
cmp
out
ret
jg
adc
sahf
add
cmp
pop
sbb
outsb
xchg
int3
mov
loop
mov
or
mov
jecxz
dec
xchg
ja
addr16
mov
roll
xchg
mov
leave
movsl
shrb
mov
mov
fldcw
add
repz
loope
cmpsb
sub
sub
pusha
or
stos
movsl
loop
dec
mov
mov
rcrb
or
push
test
cmpb
xchg
xchg
fsubrl
orl
mov
jl
push
orb
call
scas
sub
aaa
dec
mov
cmpl
jge
adc
aad
or
out
fs
jp
in
and
sbb
lret
les
and
test
into
data16
mov
add
aaa
inc
xchg
dec
push
je
inc
stos
addr16
lods
dec
jge
loop
pop
add
mov
dec
int
lea
aad
cld
push
cmp
subl
add
mov
xchg
rcl
inc
xchg
jbe
rcrl
pop
ret
sub
adc
cmc
or
dec
imul
jno
es
dec
mov
xchg
xor
outsb
sub
mov
or
add
jge
push
cwtl
inc
loope
pop
fwait
adc
imul
pop
leave
push
and
sbb
sti
jae
pushf
jmp
sbb
cwtl
cmpl
stc
add
mov
xchg
fidivl
sub
lret
pop
es
mov
testb
arpl
rep
pusha
jbe
adc
dec
cltd
adc
pop
mov
mov
fs
xchg
inc
dec
lds
push
adc
jmp
jle
mov
sbb
pusha
adc
mov
repz
mov
daa
iret
and
cmpsl
adc
test
jecxz
add
lret
ret
sub
loopne
jmp
or
xchg
insl
int
xchg
lcall
pushl
clc
inc
ja
sbb
rolb
and
das
popa
adc
jp
jo
outsb
jne
xchg
shrl
or
js
fmull
pop
std
push
prefetch
xchg
adc
jbe
jmp
lcall
pushl
pop
xor
xchg
dec
repnz
pop
scas
aas
call
sbb
lahf
xor
mov
cs
lods
cmp
hlt
out
and
fs
scas
xor
push
mov
adc
test
pop
push
cmp
mov
loopne
mov
mov
xlat
cmp
adc
pop
or
pop
pop
jbe
js
sarl
js
sub
xor
mov
and
notb
xchg
pop
andl
pop
fdivrl
adc
jge
inc
es
insb
inc
xchg
imul
sbbl
sub
fisubrl
push
in
loope
mov
ds
push
shll
out
sbb
fiaddl
stos
mov
nop
mov
sub
ret
xorl
les
mov
dec
xchg
mov
xor
and
jns
push
popf
push
inc
and
decb
pop
cwtl
mov
enter
pop
adc
mov
mov
mov
xchg
outsl
lret
das
xchg
mov
sbb
jo
sahf
std
daa
push
shr
mov
fwait
sub
repnz
pop
inc
lods
and
mov
jecxz
inc
bound
ds
push
xchg
arpl
sub
sbb
in
in
test
push
mov
xchg
mov
cmp
cs
insb
push
pshufw
popa
in
lock
dec
imul
aad
ds
cld
mov
cmc
lods
mov
mov
jp
mov
sbb
mov
mov
gs
lret
pusha
jnp
xor
test
pusha
std
jg
add
daa
xchg
js
in
sbb
or
push
xor
mov
imul
add
cmp
jge
nop
cmc
arpl
sub
mov
es
push
inc
or
adcb
pop
loopne
aas
sbb
pop
sbb
mov
test
mov
ja
loop
out
dec
cmp
inc
loop
shl
mov
mov
pop
aad
jp
dec
test
sub
push
xor
aas
mov
inc
push
divl
sub
andb
jmp
sbb
test
mov
cmp
push
in
push
jbe
adc
sbb
fdivl
dec
lahf
lret
pop
scas
clc
add
loop
mov
jnp
lock
fnstcw
add
test
cli
pop
push
push
dec
iret
pop
std
push
jb
jb
sub
cmp
push
mov
mov
jle
mov
std
ljmp
mov
sub
cltd
fisttpll
shl
cmp
mov
inc
and
or
or
inc
lret
sub
loopne
pop
dec
xchg
ss
mov
call
sbb
adc
adc
and
hlt
das
in
mov
mov
cmpsb
cmp
jmp
add
pop
and
addr16
jp
mov
orb
sbb
sbb
sti
xchg
sub
push
loop
ss
xchg
stos
insb
and
jae
insb
vmwrite
cmp
inc
mov
outsb
aam
mov
lea
xchg
push
mov
ss
fsubrs
fadds
add
mov
rcrb
insl
adc
test
les
push
push
xchg
incl
fdivp
jmp
lcall
hlt
dec
sti
imul
jnp
mov
cmpsb
or
dec
call
clc
mov
jmp
out
inc
mov
ret
jmp
mov
xchg
clc
jg
es
dec
pop
jg
mov
out
rorl
pop
adc
jle
mov
and
dec
mov
in
push
xor
mov
mov
xor
mov
xor
adc
imul
pop
jg
cmpsb
rorb
push
pushf
mov
xchg
pop
pop
out
mov
addr16
shll
pop
fsub
inc
pop
pop
add
cmp
aam
push
push
jns
fsub
movsb
mov
aaa
inc
push
cmc
sub
pop
bound
push
mov
mov
sarl
imul
fsub
dec
divl
rorb
aad
cmp
sub
sub
enter
push
test
xor
movsb
jno
adc
test
xchg
mov
mov
and
js
fists
add
inc
jae
sti
mov
pop
gs
loop
les
stos
ss
stos
icebp
xchg
lods
dec
mov
fisubrl
outsl
int3
xor
hlt
adc
xchg
mov
ja
push
cmpsl
adc
roll
insb
jmp
stos
test
mov
fists
xchg
daa
xor
mov
cmp
test
mov
jle
cmp
sbb
jle
pop
mov
outsl
inc
jg
popf
push
dec
adc
jae
cmp
fcmovne
xor
xchg
xor
adc
sbb
inc
mov
xchg
pop
fldl
mov
mov
mov
loop
mov
mov
cmpb
imul
fwait
es
mov
mov
mov
sbb
push
xchg
fwait
rclb
stc
mov
pusha
pop
mov
cld
mov
jmp
jo
pusha
push
loopne
push
xchg
lret
and
jno
ds
test
lds
cs
mov
sbbb
pop
mov
xlat
jnp
into
in
xchg
in
cld
pop
pop
js
cmp
dec
mov
cmp
arpl
xchg
sbb
shlb
jge
push
adc
xchg
rolb
push
dec
push
cltd
and
clc
or
cltd
and
mov
leave
rcrl
or
pop
loop
sbb
sub
andb
push
mov
filds
pop
or
add
insb
pushf
sub
fisttpl
shl
icebp
das
xchg
push
add
cmp
cltd
rol
cmp
xor
xor
test
sahf
push
cmp
stos
out
xchg
scas
xchg
mov
fcoml
xchg
leave
mov
fsubrp
push
mov
shr
mov
call
ljmp
pop
ss
jg
mov
dec
aad
scas
mov
loope
test
jnp
pop
nop
hlt
lret
push
or
sub
xchg
lods
stos
push
xchg
dec
xchg
mov
push
adc
xchg
icebp
or
or
adc
loope
mov
faddl
fs
call
pop
icebp
gs
loop
sub
add
roll
decb
fstpt
jl
jb
testb
xlat
movsl
adc
dec
or
das
xchg
jp
mov
mov
aam
mov
push
mov
fnsave
nop
fcompl
dec
shrl
mov
mov
je
push
or
mov
push
or
test
insl
out
adc
sbb
out
out
ds
stos
notl
imul
std
out
dec
push
inc
idivb
ja
dec
sub
pop
cmp
xor
mov
pusha
dec
fwait
pop
xor
xor
add
cmp
shlb
mov
adc
ret
mov
mov
mov
adc
jne
xor
fidivrs
imul
cmp
cmp
gs
add
in
dec
add
notl
orl
xchg
arpl
jae
shll
and
test
pop
and
ja
push
adcl
jno
and
out
mov
sbb
mov
add
sahf
test
fisubrl
mov
xor
jg
or
lods
pop
ss
lret
imul
fistpl
dec
push
ss
jnp
roll
mov
jecxz
and
in
mov
dec
add
push
xor
rcl
movsb
insb
subl
mov
in
dec
lret
shrl
insb
cli
push
cwtl
outsb
cmp
insl
xor
xor
and
mov
lea
stos
or
push
mov
aas
inc
jb
mov
jno
jl
adc
inc
std
push
sbb
scas
mov
adc
xor
pusha
pushf
pop
loop
add
sbb
orl
out
out
or
aam
test
lea
add
mov
sahf
cmp
call
mov
cli
mov
call
icebp
xchg
mov
sysret
aam
mov
mov
icebp
in
xchg
in
hlt
sbb
mov
lock
xchg
ds
fs
push
pop
mov
add
push
std
into
sbb
cld
cli
adc
pop
mov
shrl
mov
rcl
inc
fdivs
mov
push
or
mov
stc
mov
je
mov
lret
push
idivb
mov
das
insb
inc
mov
inc
inc
xor
rcll
jge
sub
dec
out
pop
ja
cltd
xchg
xchg
movsb
cmp
orb
sbb
mov
xor
out
and
popa
ret
in
inc
jl
test
jmp
cmpsb
add
aas
pop
rep
xor
bound
sub
xor
inc
jle
mov
pop
mov
mov
imul
sbb
mov
loope
es
and
ficompl
and
mov
dec
addr16
mov
adc
or
int
les
jl
sbb
test
clc
loope
out
pop
loopne
mov
in
les
sbb
ret
jnp
and
lock
insl
or
stos
jmp
nop
push
xchg
insb
push
add
stc
out
jp
mov
pop
push
push
cmp
lahf
cld
jge
push
mov
cmpsb
sub
xor
je
adc
push
into
sub
mov
outsb
movb
inc
popa
divl
adc
lahf
mov
stos
mov
std
subb
repnz
div
inc
add
out
add
cmp
fisubs
sub
call
add
stos
sbb
mov
pop
repz
mov
xchg
mov
add
rol
adc
sbb
nop
adc
iret
mov
xlat
ret
adc
dec
mov
push
pop
loop
stc
pop
push
decl
ljmp
pop
xchg
sbb
stc
in
lcall
mov
xchg
push
xor
les
arpl
iret
rol
xor
or
cld
std
hlt
mov
xor
add
push
jp
push
dec
jp
cmpsb
and
mov
popf
xchg
inc
dec
lods
or
addr16
add
adc
push
sub
gs
fisubs
ja
pextrw
mov
add
mov
jmp
xchg
add
sub
jmp
fwait
je
pop
pop
cltd
mov
leave
mov
cmc
popa
mov
ja
popf
push
int3
xor
mov
fwait
shl
lods
or
mov
jmp
cmp
jmp
ficomps
jmp
or
jbe
xchg
mov
jne
hlt
inc
repnz
cltd
pop
pop
sub
xor
mov
sbb
flds
stc
mov
sub
xor
pop
pop
or
push
push
adc
bound
outsb
dec
adc
repz
sub
lods
xchg
inc
sub
scas
jmp
es
pop
jns
ljmp
inc
mov
enter
hlt
mov
es
pushl
xor
push
mov
cltd
insb
add
or
mov
clc
pop
xchg
inc
aam
mov
imulb
dec
leave
loop
bound
add
fxch
pop
nop
in
test
mov
popf
adc
stos
arpl
push
xchg
rorl
push
cmpsl
mov
mov
fchs
loop
mul
repz
nop
sti
add
or
push
ret
fsubr
inc
sub
imul
shll
push
addl
jns
and
xor
fs
dec
fmull
lock
lret
pop
mov
jae
mov
jecxz
adc
loopne
mov
movsl
add
xor
aam
mov
fiadds
rcrb
cwtl
repnz
sub
test
cs
popa
fists
fcoms
or
cmp
xchg
add
dec
inc
adc
call
rorl
idivb
dec
repnz
in
pop
fsin
and
divl
sbb
jae
pop
dec
roll
and
stos
scas
xchg
jmp
or
jnp
loope
mov
out
shll
stos
xchg
xchg
xorb
pop
dec
jns
popa
ret
jbe
add
xor
sub
and
mov
js
add
jmp
mov
lahf
sub
and
dec
mov
pop
cmp
or
cmp
cmp
jecxz
in
inc
mov
js
in
lock
ret
push
dec
scas
aam
ret
mov
add
loope
and
pop
cmp
inc
lods
scas
rclb
cmpsl
data16
scas
cmp
mov
je
out
scas
cs
subl
sbb
insl
jle
sbb
pusha
xchg
test
inc
mov
scas
push
test
cs
cmpsl
mov
and
mov
sub
leave
pop
fnstenv
leave
call
fs
icebp
insl
iret
mov
inc
add
mov
inc
mov
xor
das
insl
push
push
out
das
rol
fiadds
in
push
cmp
push
jb
aam
aas
outsl
mov
sub
lock
jge
xchg
push
jnp
sbb
cmpsl
adc
xlat
lea
sbb
push
fcoms
stc
stos
fstpl
test
lods
sbb
adc
lods
sub
inc
adc
scas
cmp
jno
or
or
mov
in
cmpsb
and
sub
aad
ret
nop
mov
aad
add
fdivrl
cmc
jno
das
lret
das
dec
adc
mov
fdivl
stos
lea
jecxz
inc
or
out
xchg
into
orb
dec
mov
push
mov
jne
cmc
and
pusha
jo
cmp
dec
jp
mov
xor
mov
pop
in
xor
cli
mov
and
cmpsb
out
stc
fs
or
std
xchg
popf
pop
mov
pop
dec
lcall
push
dec
pop
dec
mov
jns
xor
popf
adc
mov
stc
mov
cmp
ds
pop
pop
loope
sub
jle
popf
arpl
xor
add
jb
aad
mov
sub
cmc
fidivs
sub
dec
inc
or
out
js
dec
aaa
rclb
jno
xchg
inc
out
cmp
out
jne
or
lods
push
ja
es
out
xchg
lret
rclb
inc
jns
fisttpl
push
push
cmp
bnd
push
push
fldt
rcll
adc
or
lods
aam
and
addl
and
push
mov
cmp
mov
jg
daa
cli
fsubrp
std
test
les
shll
mov
inc
add
xchg
push
jbe
popf
in
mov
popa
add
xchg
xor
jmp
inc
dec
fsubs
aad
lds
hlt
bnd
scas
dec
int3
push
xor
adcb
aaa
ret
cld
test
dec
pop
lcall
push
cmpsb
cs
movsb
xchg
enter
cmp
or
out
repnz
or
cmp
fcomps
mov
cmpsl
pop
xchg
cmp
rorb
repnz
sub
xchg
lods
cli
arpl
ds
popa
cmpsl
and
mov
ja
pop
fistpll
dec
pop
jne
lcall
dec
pushf
pop
ret
repz
xor
les
arpl
pushf
cltd
xor
sub
loope
push
in
push
std
int
ljmp
call
scas
mov
cmp
jle
xchg
daa
pusha
loop
mov
cmp
mov
xchg
mov
mov
ret
jecxz
push
enter
add
inc
dec
cmpsb
jp
jo
mov
sbb
daa
mull
idivl
ret
jo
out
xchg
cwtl
xor
cmp
xchg
lds
popa
inc
mov
inc
aas
ljmp
sbb
jmp
popf
fwait
popf
lret
test
mov
pop
imul
adc
mov
nop
cmc
xchg
in
and
cmpl
nop
lret
inc
jb
sbb
test
sbb
fistps
in
mov
scas
push
fidivs
je
and
lock
scas
xchg
sbb
dec
fsts
xchg
dec
sub
popf
shrb
sbbb
pop
in
mov
push
jecxz
dec
push
and
ret
cs
cmp
pop
xchg
lret
add
mov
int3
mov
add
mov
cmp
mov
xchg
pop
adc
sub
jmp
mov
sbb
test
lahf
jb
adc
push
punpckldq
das
mov
xor
xchg
pop
pushf
insl
mov
xor
xor
stc
out
addr16
notb
pop
xor
jl
pop
movsl
pop
shll
imul
inc
mov
xchg
xlat
fwait
aam
ljmp
push
sbb
ss
mov
cs
lret
xchg
mov
and
shl
xlat
inc
cltd
and
clc
setbe
lods
out
sbb
popf
test
ret
mov
sub
sbb
andl
hlt
stos
mov
cmpsb
cmpsb
into
mov
bound
mov
pop
jo
rcrb
mov
cltd
dec
in
nop
add
into
sbb
fnstcw
cltd
aam
shlb
ja
and
ss
pop
ror
mov
ret
cltd
imul
push
xorb
sbb
outsb
fcmovne
lahf
jae
mov
lcall
and
in
fsubrl
rsm
rol
inc
popf
dec
fbstp
xchg
sbb
mov
or
jp
dec
cmove
js
shl
sahf
cmpsl
sbb
xchg
clc
jo
loopne
jnp
rorb
ror
xchg
movsb
inc
lods
das
outsl
repz
xor
xchg
test
ljmp
in
cld
jnp
in
adc
imul
sub
fdivrl
test
fsincos
and
pushf
add
loopne
sub
pusha
jp
cmp
clc
jne
out
repnz
pop
das
xchg
rcrl
cmp
ficompl
jo
sub
push
sub
xor
jno
or
mov
andl
add
mov
jae
pop
ljmp
xorb
pop
bound
push
pop
mov
sbb
mov
enter
test
imul
lcall
inc
loopne
faddl
add
lds
or
aas
mov
lcall
add
ficomps
mov
shlb
test
or
bound
std
lcall
pop
jecxz
jmp
lods
and
lcall
jne
push
fldenv
mov
fwait
dec
lock
int
sti
outsl
or
or
cltd
loopne
out
mov
dec
xchg
in
ss
jl
jp
sbb
sbbb
je
sbbl
sub
dec
jnp
lods
out
push
hlt
jge
cs
xchg
cmp
xchg
lahf
mov
in
mov
mov
mov
or
out
cmpb
test
mov
sti
xor
pusha
data16
jae
pushf
jno
test
add
and
ss
mov
jmp
pop
sub
mov
gs
mov
jno
rolb
add
lds
mov
dec
add
les
push
cwtl
xchg
cmp
aas
ret
mov
push
inc
lods
pop
inc
lods
and
cmp
in
xchg
adc
push
pushf
jecxz
mov
inc
push
insb
pop
aas
sub
mov
mov
stos
adc
xchg
cmp
incb
adc
adc
pop
or
push
fsubl
lods
mov
frstor
sub
ja
pop
mov
clc
mov
mov
insl
adc
mov
cli
jp
sarl
sub
les
out
xchg
lods
pusha
sub
dec
rorl
sbb
in
push
scas
jmp
ja
cwtl
addb
adc
xchg
and
jae
inc
push
stc
fisubs
jne
inc
jno
jae
lea
iret
xorb
aad
cmp
add
fdivl
mov
loope
iret
je
lods
mov
sub
lahf
dec
push
movsl
adc
xchg
movsl
xchg
fwait
sub
fdivrs
int
rorl
add
mov
mov
pop
leave
ret
pop
or
repz
sti
ja
stos
mov
mov
add
add
add
sbb
push
cmp
and
sub
pop
adc
jbe
push
fstp
inc
call
test
aaa
adc
cmp
sahf
cmpsb
testl
adc
lea
or
mov
ljmp
mov
dec
pop
and
xor
dec
fdivl
imul
jg
inc
dec
pushf
mov
movsb
arpl
pop
lret
xchg
xor
or
shll
bound
test
push
fistpll
push
nop
push
pop
sbb
pushl
pop
rcll
and
push
pop
sbb
dec
jmp
xlat
cmp
jecxz
call
pop
fnstenv
rcll
inc
adc
xchg
cli
push
inc
or
adc
xchg
push
cmp
push
cli
loope
mov
jl
xchg
dec
dec
cmpsl
sub
push
sahf
jg
jecxz
inc
jns
ret
test
out
dec
or
pop
mov
loope
mov
mov
inc
jnp
cmpsl
mov
xlat
imull
rorb
fbstp
sub
pop
loop
dec
inc
stos
push
mov
jle
inc
jns
out
out
cld
lock
xor
add
ret
jb
fiaddl
frstor
fs
cmpsb
sub
fcompl
push
pop
insl
nop
cmp
idivl
cmpsb
test
sbb
fisubrl
loop
push
sub
push
add
out
int
dec
mov
adc
xchg
lcall
mov
clc
jmp
iret
aam
xchg
fsubrs
mov
fwait
jns
faddl
imul
mov
cmp
outsb
fidivs
jae
enter
cmp
push
xor
in
and
xor
pop
mov
shrl
adc
cmp
out
pop
xchg
push
xchg
xchg
add
add
add
mov
mov
cltd
int
xor
add
cld
outsl
int
fs
add
outsl
push
pop
mov
mov
dec
icebp
loopw
jnp,pt
scas
mov
add
push
cltd
imul
enter
xchg
cmc
flds
decb
loope
mov
pop
xchg
inc
cmp
loope
jo
jp
mov
dec
ficoml
std
jae
fsts
aas
out
inc
or
outsl
xor
cmp
adc
mov
xchg
fcomp
jbe
div
jmp
test
iret
add
pop
lock
nop
adcl
sbb
jbe
arpl
hlt
mul
jb
test
es
mov
icebp
mov
or
into
insb
stos
fists
jne
cltd
ljmp
mov
jg
bound
aam
mov
cmp
call
push
arpl
mov
pop
pop
out
insl
inc
into
testl
xchg
jge
imull
sub
sbb
bound
jle
mov
fsubs
out
mov
sbb
std
fwait
xchg
in
push
clc
je
push
jle
mov
xor
wrmsr
aaa
jmp
lock
sub
fxch
and
test
fwait
in
and
sub
sub
and
mov
xor
jo
sbb
mov
mov
rcll
xor
imul
add
movsb
out
in
lret
rorb
es
mov
loope
int
cmp
cmp
sbb
cmc
lcall
subb
sbb
pushf
arpl
push
lcall
xor
fucomi
cmc
xor
dec
enter
js
add
hlt
jb
and
cmc
je
sahf
add
sub
sub
addb
mov
add
add
add
js
aam
and
lret
pusha
mov
jno
and
fldenv
fs
dec
push
push
test
out
arpl
gs
mov
stos
lahf
pop
dec
ss
mov
fisubrl
orb
mov
movsb
jmp
inc
iret
into
sub
sbb
add
mov
push
ffreep
dec
lea
mov
ds
daa
ss
fildl
inc
ja
pop
or
push
xor
jecxz
cwtl
daa
stc
stos
and
xor
cmp
sbb
dec
add
out
add
sub
adc
add
xchg
xchg
test
ja
addb
dec
cld
int3
push
inc
aam
cmpl
sub
push
loopne
xor
lcall
cmp
pop
nop
or
in
inc
and
testl
sbb
mov
jmp
popa
bound
cmpsl
dec
mov
fstps
fstp
lret
popa
mov
or
pop
out
mov
lea
cmp
stos
scas
mov
sbb
ds
loopne
stc
jmp
repz
and
dec
mov
mov
mov
jmp
rcr
push
inc
or
jne
adc
lret
xor
insl
in
cwtl
and
adc
mov
ss
add
in
xchg
rcrl
test
jp
mov
orb
cld
and
nop
xor
lahf
xor
arpl
inc
lock
jle
test
and
push
and
xchg
icebp
inc
mov
push
rcrl
mov
daa
rolb
scas
push
and
dec
rolb
add
dec
or
sbbb
mov
sub
inc
loope
das
and
aam
aam
ljmp
je
sbb
push
ja
mov
add
add
add
xchg
movsb
enter
iret
scas
xchg
mov
out
adc
dec
pop
mov
jne
sub
or
jne
push
xor
and
fildl
or
cmpsl
leave
int3
lcall
jle
sub
jo
pushf
add
into
xchg
repz
mov
sbb
fadd
mov
xor
fcoms
es
scas
mov
jp
insl
pop
lahf
pop
mov
pop
std
sbb
mov
mov
pusha
iret
pop
xor
je
clc
jbe
lret
rcl
dec
adc
in
insb
cmpsl
inc
icebp
jle
push
pop
mov
or
dec
in
jg
mov
imul
cli
cmp
popl
push
loop
clc
int
cli
divb
pop
xchg
scas
cmp
cli
cmp
leave
out
add
dec
cmp
das
roll
call
sahf
mov
pop
push
das
jge
sub
dec
lods
xor
inc
or
inc
scas
cmp
cwtl
mov
push
cltd
sub
lock
or
inc
ljmp
hlt
jno
cmpsb
int3
mov
mov
fmuls
dec
arpl
push
scas
clc
jno
scas
jae
mov
ja
dec
repnz
mov
mov
nop
repnz
dec
mov
jmp
pop
imul
sbb
jmp
lds
jge
dec
and
jle
fnstsw
dec
or
or
ja
cwtl
jmp
sub
adc
and
leave
sahf
cs
insb
dec
push
adc
lods
test
mov
dec
mov
add
outsl
movsl
jecxz
sub
push
jl
fwait
mov
xor
fimull
mov
or
sarb
add
mov
sti
cmpsl
mov
dec
mov
dec
lea
add
add
add
sub
mov
pop
cld
sbb
scas
pop
cmp
pop
cwtl
imul
sar
and
jp
jle
mov
icebp
sub
test
dec
xchg
mov
adc
lock
add
adcb
enter
int3
dec
pop
jno
jb
cmpsb
mov
xchg
xor
mov
hlt
cli
lret
ficompl
xor
mov
mov
xor
mov
add
std
add
mov
or
dec
ljmp
cmpsb
imul
add
pop
mov
inc
int
out
fildll
or
xor
sbb
adc
jge
loopne
aam
or
cmp
mov
xchg
pop
cmp
sbb
push
mov
push
in
jp
in
pop
in
das
lahf
sub
mov
test
pop
outsl
lcall
aam
lahf
je
xchg
in
ret
bound
add
lret
and
add
adc
iret
arpl
shr
inc
rorl
insb
data16
fisttpll
fbstp
sbb
rcrl
dec
addr16
push
push
adc
or
adc
adc
push
push
xor
inc
sahf
cmp
sbb
inc
xchg
jne
sub
jle
xchg
mov
inc
mov
push
sub
int
xor
add
jnp
mov
xor
sub
mov
mov
jo
jp
rcrl
xchg
mov
pop
push
invd
stos
lret
mov
sahf
add
cmp
mov
sarl
xor
and
fwait
push
test
push
cmp
jle
mov
lods
cmp
stc
stc
sub
add
out
add
or
out
and
adc
das
dec
fisubrl
stos
and
xor
sub
cmp
mov
xchg
fistps
push
mov
inc
adc
add
and
rcll
orl
inc
xor
sahf
cli
mov
xor
mov
jmp
js
push
adc
inc
ljmp
les
outsl
aam
sub
and
mov
inc
jbe
movsl
cmp
in
into
sub
dec
xchg
nop
hlt
adc
or
data16
icebp
sbb
fwait
mov
dec
in
pop
pop
jb
test
out
and
mov
aas
outsl
jmp
repz
dec
jmp
sahf
repnz
cld
lahf
pop
sub
nop
xchg
fwait
dec
ss
push
stos
cs
xchg
push
or
aas
add
imul
push
mov
sbb
dec
sbb
leave
shlb
pushf
add
jno
inc
and
fsts
dec
mov
lods
xor
in
adc
rcrl
and
out
scas
iret
cmpl
pusha
stos
outsl
sbb
in
scas
push
addr16
adc
pop
jmp
mov
inc
pop
mov
ja
pop
adc
adc
xchg
bound
imul
jl
enter
sbb
aam
mov
decl
jbe
imul
in
lods
add
fsubl
xchg
loop
sbb
es
mov
out
stc
sahf
lret
cmp
jle
or
add
xor
fdivrp
lret
mov
xchg
jnp
insl
push
pop
cltd
adc
jnp
xor
hlt
and
fnsave
insb
mov
push
mov
jg
pop
inc
xchg
std
and
dec
aas
movsb
sub
inc
gs
aaa
push
fisttpll
xchg
add
out
add
pop
cmpsb
daa
add
out
idiv
cmp
insl
adc
iret
movsl
ljmp
pop
mov
scas
sbb
bound
enter
adc
mov
mov
pop
jne
cmpsl
adc
mov
fisubrl
dec
add
jp
aad
mov
mov
or
jo
dec
push
and
leave
clc
out
jno
ja
add
into
xchg
mov
inc
outsl
jb
push
nop
pop
jb
and
int3
dec
sub
in
pusha
xchg
repz
call
or
ret
sub
aad
jb
xlat
mov
cmpsb
mov
mov
int3
dec
fldenv
ficoms
adc
jne
insb
test
push
notl
repz
push
adc
outsb
enter
bound
pop
cmc
enter
in
push
test
pushf
pop
jo
sbb
out
lcall
sub
push
pop
push
dec
aas
insl
inc
fwait
sbb
jle
inc
sbbb
popf
mov
ljmp
loope
jae
jns
loope
fsts
sahf
shlb
fxch
pop
mov
inc
mov
mov
enter
and
xlat
pop
and
sbb
daa
adc
clc
fdivl
dec
mov
dec
cmpsb
hlt
cmp
orb
nop
fstpl
lret
cmpsb
add
test
jnp
test
mov
dec
lods
imul
repnz
pop
mov
ret
add
xlat
xchg
std
fisubs
push
mov
mov
ss
inc
mov
xchg
ss
push
push
stos
inc
stos
sti
stos
fisttpl
sub
rcl
xchg
and
adc
jae
push
or
xchg
jmp
dec
lea
push
mov
adc
push
adc
cwtl
out
or
js
push
out
add
out
add
in
adc
jecxz
pop
nop
paddb
out
pop
mov
ja
std
orb
pop
inc
dec
repz
dec
mov
mov
mov
cmp
adcl
pusha
loopne
push
cld
dec
pop
fists
je
adc
bound
xchg
insb
in
and
xchg
cmpsb
sub
enter
aaa
leave
clc
testb
push
in
stc
jbe
lahf
repz
dec
stos
fsubs
jg
rolb
sub
paddd
mov
sub
add
iret
rorl
mov
push
mov
ljmp
sarl
fists
jb
ds
sub
jmp
dec
imul
sbb
jl
mov
dec
pop
dec
sbb
mov
or
enter
mov
add
xchg
out
mov
cmp
adc
pop
cltd
sbb
push
sbb
jo
push
les
xchg
pop
pop
into
lea
xor
ss
dec
out
rcl
lods
sbb
or
lret
sub
add
adc
aaa
cmp
and
mov
clc
add
cltd
xchg
notb
loopne
push
jecxz
inc
push
xchg
in
jnp
fcoml
jbe
in
mov
ret
xor
dec
shr
cmp
adc
or
and
dec
js
repnz
push
mov
cmp
pop
mov
cs
mov
mov
jge
popf
adc
ds
xchg
jecxz
xor
mov
sub
in
sti
leave
push
xchg
pop
mov
outsb
je
call
test
lahf
ficoms
xlat
push
pop
fistpl
fnstcw
cmp
mov
std
imul
xchg
lcall
outsb
ljmp
jle
jg
imul
push
lock
out
add
sub
pop
fldt
pop
cs
lret
adc
jns
pushf
mov
inc
mov
in
push
cmp
sbb
iret
ficoml
adc
push
push
dec
mov
inc
add
orl
pusha
jb
push
add
xor
jb
sbb
jle
dec
and
jae
mov
cli
sti
xorl
sub
xchg
add
mov
dec
sub
jne
cwtl
push
jge
xor
push
nop
adc
dec
or
in
ss
sahf
inc
cmpsb
je
inc
inc
mov
cmp
xchg
add
jo
cmpb
xchg
xchg
stos
jge
enter
and
jo
pop
lock
xchg
jmp
stos
jle
push
repnz
dec
outsb
sub
lret
fists
and
inc
sti
popa
test
cmp
pop
and
into
jns
pusha
sahf
loop
std
stos
and
cwtl
jmp
jle
sbb
dec
or
inc
mov
jae
das
lods
sbb
sbb
xlat
shlb
orb
pop
arpl
sti
push
cli
inc
or
cmpsb
sar
mov
stos
call
adc
aaa
sbb
pop
mov
les
mov
addr16
jae
outsb
mov
cmp
loope
ja
mov
outsb
mov
fwait
push
mov
add
pushf
push
adc
push
lret
ja
fcoms
add
shr
arpl
sahf
mov
xor
jl
xchg
xchg
inc
loopne
mov
or
test
and
out
loop
int3
add
je
cmpsl
punpckhdq
and
xor
xor
loope
xchg
mov
push
in
flds
sbb
cmp
jae
fsubl
in
jle
test
nop
add
and
mov
mov
fbstp
add
add
dec
imul
mov
jae
push
mov
cmp
sub
dec
mov
cmp
pop
mov
sbb
mov
or
icebp
jae
mov
cmp
sbb
lods
inc
adc
lcall
or
pusha
add
repnz
leave
pop
mov
mov
insb
mov
shufps
hlt
aaa
adc
or
adc
sbb
clc
repz
xor
out
pushf
shr
je
jo
loope
inc
jno
push
inc
jns
xor
mov
sbbb
push
test
cmp
push
jae
ret
and
xchg
and
jge
pop
mov
jbe
gs
fiadds
fprem1
cld
je
push
les
fidivrs
sbb
pop
loopne
lcall
mov
jns
icebp
sub
push
addr16
rclb
iret
out
adc
lods
mov
mov
xchg
jp
rorb
subb
xchg
lea
inc
cs
movsl
push
sahf
inc
cmp
adc
adc
cmp
arpl
clc
fwait
int3
shlb
sbb
fidivs
leave
fisttpll
movsl
shrl
ljmp
sbb
loopne
adc
pop
xchg
jecxz
iret
xchg
test
mov
ds
lret
inc
pmuludq
shrl
mov
pushf
lret
pop
aaa
push
ss
popl
and
je
push
in
inc
xor
sti
pushf
inc
rorl
loope
xor
fistpll
movsl
dec
jbe
fcoms
dec
faddp
in
jns
shll
mov
push
xchg
adc
popf
mov
je
lods
dec
xchg
add
jl
fs
outsl
push
pop
sarl
movsb
add
stos
out
pop
inc
mov
sbb
xor
lsl
js
xor
pop
jge
lods
add
or
ret
lods
sub
mov
jns
hlt
add
out
add
dec
jl
nop
cmp
push
mov
scas
aas
pop
addr16
pop
icebp
int
adc
mov
cmp
inc
mov
cli
mull
dec
inc
lods
int
ljmp
ds
arpl
or
adc
es
jecxz
push
fs
xchg
mov
aad
inc
iret
sbb
ja
cmp
icebp
fsubrl
xor
cmp
inc
dec
cmp
daa
pusha
jp
push
and
pop
inc
jb
inc
mov
mov
int
cld
pop
jnp
mov
jg
scas
xor
cltd
dec
out
movsb
mov
shl
js
cld
stos
jmp
adc
inc
sub
cmp
loope
imul
adc
pop
or
test
jns
sahf
dec
and
sub
dec
adc
xchg
inc
scas
cld
ds
lods
xchg
outsb
adc
adc
out
rorl
cmp
mov
push
addr16
movups
mov
sub
sub
ret
loopne
pushf
push
and
into
ss
jbe
sbb
mov
rcrb
xchg
pop
in
sbb
icebp
rcll
incb
cmpsl
inc
xchg
pop
mov
pop
add
stos
insl
mov
std
ficomps
int
ret
add
or
adc
push
sar
out
aas
mov
mov
push
fnstsw
scas
pop
sbb
jg
enter
test
test
mov
ss
mov
je
pop
loop
popf
push
fbstp
adc
ss
mov
lcall
in
sbb
ja
cwtl
jecxz,pt
ja
jno
xor
push
sub
mov
dec
mov
pop
xchg
inc
add
xlat
test
adc
jo,pn
pusha
cmp
fld
add
ror
outsl
clc
sarb
test
in
cmc
add
xlat
add
add
dec
mov
jne
jg
mov
mov
cmp
mov
or
stos
in
jno
mov
in
mov
lcall
ds
int
ret
stos
aaa
ret
test
mov
in
ficomps
mov
popf
mov
dec
inc
jge
int3
movsl
cmpsl
enter
and
mov
pusha
enter
pop
jbe
dec
shrb
ret
pushf
or
xlat
insl
lock
enter
inc
mov
sbb
ret
mov
dec
rcrb
rcll
pop
loope
push
dec
dec
jl
dec
inc
adc
ljmp
sbb
jge
popa
decb
adc
popa
je
mov
rorb
das
nop
jp
mov
inc
jnp
arpl
mov
inc
leave
xchg
int3
and
xchg
xchg
mov
dec
sbb
cld
xor
scas
xor
jae
inc
in
cmp
jl
lods
scas
in
push
xchg
adc
jo
mov
cld
inc
push
mov
mov
jne
inc
xor
rcl
dec
jl
cmp
andl
xchg
insl
mov
xor
jmp
insb
dec
hlt
cmp
xor
insl
es
mov
mov
mov
nop
clc
scas
push
jmp
adc
repnz
push
lods
scas
shlb
mov
in
pushf
incb
push
mov
mov
add
data16
push
sbb
jnp
mov
xchg
repz
cmp
imul
fdivrl
lret
mov
inc
test
jmp
pop
flds
push
adc
cmp
sti
jecxz
jb
jge
mov
mov
fnop
mov
push
add
add
inc
add
inc
add
add
or
inc
add
add
adc
inc
add
add
sbb
inc
add
adc
add
inc
add
adc
or
inc
add
adc
adc
inc
add
adc
sbb
inc
add
and
add
inc
add
and
or
inc
add
and
adc
inc
add
and
sbb
inc
add
insb
jp
jbe
ja
js
jno
arpl
inc
dec
outsl
pop
inc
jb
jns
inc
pop
dec
add
add
lods
in
add
inc
add
or
dec
xchg
dec
scas
dec
ds
js
cmp
dec
inc
dec
jae
inc
dec
xor
dec
pop
pop
pop
push
cmp
dec
xor
dec
cmp
dec
js
cmp
dec
inc
dec
mov
dec
xor
dec
pop
insl
pop
bound
dec
jns
xor
dec
cmp
dec
mov
dec
inc
dec
pop
jge
jb
subb
xchg
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
lea
outsl
xchg
outsb
xchg
jle
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
popf
pop
xchg
outsl
mov
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
lods
pop
mov
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lahf
dec
cmp
dec
inc
dec
pop
mov
outsb
ret
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lods
dec
cmp
dec
inc
dec
pop
int
ret
outsb
sarl
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
fstpl
outsl
loop
jecxz
repz
aas
dec
lea
dec
lahf
dec
cmp
dec
xor
dec
pop
in
pop
loop
repnz
repz
jns
jle
jns
cmp
jg
xor
dec
xor
dec
cmp
lods
dec
cmp
dec
inc
dec
pop
or
outsb
adc
jns
aas
dec
add
xor
inc
add
jecxz
add
jecxz
add
in
add
jecxz
add
inc
add
inc
add
mov
inc
add
jecxz
add
jecxz
add
jecxz
add
inc
add
add
loope
add
inc
add
pushf
clc
sbb
pop
cmpl
sbb
orl
add
cmp
ds
add
inc
imul
in
incb
aas
cli
mov
add
xchg
pushf
clc
mov
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
ljmp
add
jbe
mov
pushf
clc
sbb
push
pop
es
add
and
inc
add
or
mov
pushf
clc
addr16
addr16
pushw
push
es
inc
add
dec
cmpsb
dec
lahf
dec
movsb
dec
insl
dec
bound
dec
add
cltd
dec
pushf
dec
fwait
dec
insl
dec
bound
dec
scas
dec
lods
dec
lahf
dec
mov
dec
xor
add
dec
test
dec
fwait
dec
xor
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
jae
jo
jno
jbe
ja
je
jne
mov
mov
lods
jge
jge
jns
mov
insl
enter
jb
test
hlt
test
test
fnstenv
mov
push
or
xlat
out
add
scas
adc
jge
fidivs
leave
hlt
cmpsb
cmp
mov
cmpsb
and
and
cmc
enter
mov
add
jp
sbb
inc
add
add
in
adc
imul
insb
push
imul
push
insb
inc
push
inc
jo
dec
dec
pop
jp
jbe
pop
jo
inc
push
jb
inc
je
inc
jae
dec
gs
inc
push
jno
ja
dec
dec
dec
inc
jno
jae
dec
inc
inc
inc
push
dec
insb
dec
jbe
pop
jbe
inc
fs
push
inc
add
inc
outsb
imul
push
push
push
jne
insl
push
push
jo
addr16
pop
add
push
pop
inc
inc
outsb
popa
imul
jne
dec
add
bound
dec
ja
dec
inc
inc
push
add
je
bound
dec
bound
pop
outsl
push
inc
gs
dec
js
inc
js
arpl
add
add
add
jb
outsl
pop
dec
push
dec
jns
js
outsb
pop
jae
push
arpl
push
push
je
addr16
dec
inc
insl
inc
inc
inc
arpl
push
inc
popa
push
dec
imul
push
push
imul
dec
jns
push
inc
jo
imul
fs
inc
push
push
ja
jp
push
arpl
dec
dec
data16
imul
dec
cmp
dec
lods
out
mov
js
inc
addr16
ds
add
add
add
adc
xlat
pop
out
movsl
int3
loope
imul
mov
push
ljmp
test
and
cmpsl
dec
inc
jae
in
movsb
mov
clc
inc
mov
pusha
xor
mov
and
mov
or
cmp
jne
in
mov
pushf
ds
xchg
and
shrd
pop
or
daa
repnz
lret
mov
popa
inc
dec
cmpsb
inc
add
inc
test
popf
adc
and
mov
push
mov
mov
in
dec
xchg
les
shlb
ss
lea
fidivrs
inc
sarb
sub
sub
mov
mov
ss
cmp
sarl
cmpsb
cli
ror
addb
filds
stc
movsb
aad
insl
lret
daa
insb
cld
pusha
pop
mul
pop
push
inc
sti
lret
sti
popf
pop
cmp
std
mov
es
movsb
shrl
mov
out
inc
xor
pop
iret
lods
aam
fwait
mov
in
in
jle
lods
pop
sub
cmp
xchg
jnp
mov
scas
cmpsl
test
push
pop
addb
or
cmp
mov
cmp
and
push
lock
popf
mov
and
popa
or
cmp
in
xor
push
or
push
cs
push
mov
push
dec
xor
lods
cmp
mov
hlt
call
shl
inc
jmp
jbe
xchg
adc
sarb
jmp
cmp
lea
test
pop
pop
or
xchg
push
and
rorl
stos
loope
sub
inc
and
enter
ss
mov
dec
int
jbe
lods
sarb
test
adc
int3
sbb
sbb
hlt
pop
adc
sub
movsl
push
mov
xlat
push
divl
scas
lcall
add
dec
in
xor
pop
sbb
pop
and
mov
rcrb
hlt
pop
xchg
ja
lcall
inc
pushf
cmc
xchg
int3
mov
outsl
out
sbb
mov
movsl
adc
pop
enter
add
mov
mov
mov
pusha
fisubrl
sub
sub
jl
lahf
aam
push
adcl
pusha
sbb
or
mov
stos
sbbb
mov
outsl
int
xchg
repz
mov
add
outsb
mov
fwait
lret
lds
push
stos
les
enter
setnp
lods
jp
clc
lretw
popa
repnz
sub
fs
addr16
mov
inc
aaa
hlt
jge
mov
sub
dec
add
mov
pop
dec
aaa
and
sahf
sbb
adc
push
inc
aam
mov
and
cmpb
jo
aaa
jp
jp
cmp
sbb
test
addr16
imul
ja
jae
jp
sbb
sub
adc
xchg
dec
testb
stos
xchg
sub
lock
cmp
dec
sub
sti
insb
int3
pop
jbe
cmp
jge
or
jbe
rcll
push
adcl
fucompp
shlb
subl
add
push
cmp
lret
cs
lds
jns
xchg
fs
sbb
rcrb
addr16
je
cmpsb
dec
test
cmp
daa
dec
push
icebp
xor
inc
mov
pop
xor
pop
fisttpll
dec
int
xchg
inc
push
jns
sbb
mov
jb
jno
xchg
pop
out
lds
lcall
push
in
dec
shlb
xor
pop
xchg
mov
xor
testb
jg
ljmp
push
dec
or
add
out
add
popf
loop
add
sub
pop
pop
hlt
inc
int
mov
daa
xor
leave
xchg
sbb
push
mov
mov
push
fiadds
push
inc
or
fcmove
movhps
leave
in
dec
dec
fld1
divb
sbb
scas
push
lods
jb
rorb
gs
sub
out
lods
cmp
pop
sub
movsb
insl
call
cmpsb
push
inc
decl
stos
repnz
dec
inc
inc
cmpsl
fs
aas
mov
add
insl
ljmp
loopne
mov
mov
add
add
inc
mov
popf
push
sub
cmpsl
dec
add
mov
mov
push
arpl
inc
push
in
pop
enter
mov
subl
outsb
sahf
lcall
and
jns
mov
adc
or
dec
fcmovb
out
in
mov
mov
iret
push
and
lret
mov
mov
xchg
std
rcr
xchg
popaw
sarb
add
mov
pop
pop
aaa
cmp
add
scas
push
add
mov
pop
inc
or
scas
loop
sahf
ds
inc
arpl
mov
push
pop
push
insl
pslld
test
fwait
inc
loop
mov
les
fcomps
aad
outsl
ja
pop
adcb
test
sbb
in
out
jmp
mov
into
inc
jb
adc
pop
test
adc
dec
or
mov
shrl
ss
mov
lds
push
les
shl
xchg
loope
dec
cli
cwtl
std
icebp
jg
pop
xchg
xchg
fnstcw
inc
push
pop
jge
fcomi
cs
addr16
ja
mov
cmp
cmp
in
fimuls
inc
mov
add
add
add
rcll
xor
cmp
jp
mov
loope
lods
jge
scas
movsb
insb
mov
pop
fdivr
movsl
inc
lret
or
mov
es
xor
xchg
insb
sti
and
push
ret
nop
xchg
cli
loop
cmpsl
and
xor
and
lods
jecxz
jnp
mov
inc
ficoms
xchg
call
and
stc
mov
mov
sub
jns
fs
and
inc
sub
push
inc
rorl
lea
lods
or
jns
jne
filds
add
mov
xchg
jp
jle
bound
push
in
mov
sarb
shll
mov
test
add
insb
mov
mov
jbe
mov
pop
mov
mov
inc
inc
mov
arpl
ficoml
sahf
leave
xchg
ret
jb,pt
les
add
cmp
popa
xchg
in
jle
inc
inc
lock
lods
and
cmpsb
inc
or
mov
push
stos
jmp
jno
sbb
adc
dec
loop
or
fwait
subb
xchg
lods
fildll
sub
test
inc
clc
push
pop
ljmp
pop
call
mov
mov
jbe
sub
or
add
rorb
dec
xlat
mov
dec
push
stos
push
cmp
mov
decl
cmpsb
je
push
outsl
aas
mov
pop
dec
mov
and
sahf
pop
xchg
dec
xor
jle
jae
cmp
rcll
repz
push
ljmp
les
sub
mov
ljmp
and
inc
ret
lea
cmp
jne
sbb
dec
addr16
mov
pop
addb
fnstenv
std
negb
sub
lods
or
push
fidivrl
add
xchg
scas
mov
aam
std
or
int
mov
sub
lret
xor
lcall
mov
popf
xor
dec
xor
mov
out
insl
jno
xchg
hlt
cwtl
cmp
inc
adc
xchg
xchg
ss
int3
arpl
xchg
or
adc
std
xor
in
sahf
mov
lock
loopne
xor
cwtl
jl
test
push
mov
dec
sbb
popa
push
dec
test
xor
scas
jno
xchg
inc
mov
lret
aas
sbbl
pop
in
sti
aaa
xor
in
jae
jno
test
inc
add
ds
jge
ja
pop
lock
sub
in
mov
das
mov
mov
jb
mov
push
mov
inc
push
mov
into
or
rcr
push
inc
or
jle
adc
out
cmp
aam
push
es
mov
sbb
ret
sbb
imul
repnz
iret
in
add
pop
clc
in
lock
shl
inc
cmc
push
pop
hlt
mov
xchg
adc
xor
movsl
mov
add
xor
vhaddpd
add
sti
cld
adc
mov
lods
xchg
in
pop
ss
cmpsl
cwtl
push
test
shl
ds
test
out
loopne
test
add
inc
dec
lret
mov
jne
push
dec
pmaxub
cltd
dec
or
lea
cmc
and
jb
shr
cmp
jmp
rorl
sub
ljmp
inc
aas
adcb
mov
loopne
leave
ljmp
pop
adc
dec
jno
jle
sbb
mov
inc
les
subl
fidivl
xchg
mov
scas
fbstp
inc
mov
adc
mov
add
repnz
jae
insb
mov
adc
daa
iret
mov
pop
aam
ret
cmc
jo
cwtl
enter
notl
shlb
addr16
push
negl
push
arpl
dec
pop
in
loop
popa
scas
push
je
fwait
arpl
dec
rclb
mov
xchg
sbb
jecxz
aam
lret
cmc
mov
ret
inc
ret
insl
sub
std
push
outsb
dec
push
dec
call
or
and
or
lcall
dec
mov
testl
add
dec
add
push
out
in
das
nop
inc
incb
adc
xor
out
std
nop
fcoms
cmp
mov
jg
jno
mov
xor
movsl
pop
sbb
ss
sub
mov
test
jmp
scas
mov
iret
mov
mov
inc
in
mov
mov
aaa
add
icebp
das
cmp
and
sti
pusha
dec
out
inc
insl
jbe
push
mov
push
xchg
mov
push
gs
addr16
sbb
sar
adc
js
fstpt
push
sbb
xchg
or
push
imul
push
test
mov
ret
ficompl
push
push
add
jp
add
decl
pop
int
dec
inc
or
leave
inc
repz
and
pop
addr16
xchg
arpl
sub
ret
hlt
lods
adc
add
sbb
inc
xchg
fdivl
cmpsl
cwtl
sub
or
jle
push
adc
and
out
xlat
pop
stos
sub
insl
cmp
jmp
push
rcrb
xor
add
adc
adc
jne
dec
in
fwait
scas
fdiv
pop
sub
ret
add
out
add
jae
sbb
lods
enter
daa
lock
sub
lock
and
mov
jne
out
fcomps
lret
cmpsb
mov
shlb
mov
lea
cmpsb
mov
mov
xchg
scas
insb
fisubl
mulb
xor
xchg
xor
push
sbb
lret
mov
imul
mov
pop
mov
sbb
sbb
xchg
aaa
cmpsb
std
call
es
xor
lds
sbb
and
js
dec
or
dec
jb
les
lea
push
sbb
xor
mov
mov
enter
cmp
lretw
pop
xor
insb
shl
mov
imul
lret
xlat
in
and
xor
lahf
shlb
dec
fnstcw
sub
jmp
cmpsb
dec
mov
jae
jl
ds
mov
cmp
xor
push
daa
jns
pop
cwtl
fcmovnu
adc
iret
xlat
push
fucomip
inc
push
xchg
imul
or
int3
dec
cmc
mov
lds
lret
cs
mov
out
dec
xchg
out
clc
pusha
out
arpl
mov
xchg
outsl
xor
mov
fdivr
adc
in
nop
ljmp
nop
inc
ret
test
popf
push
push
std
cs
fiadds
cmp
jle
and
bound
jp
add
mov
pop
push
jecxz
mov
inc
mov
add
xchg
mov
shr
inc
fadds
ds
insb
and
shlb
pop
loope
inc
dec
shlb
sbb
adc
loopne
jno
jle
insb
divb
out
les
mov
adc
jae
sub
and
add
mov
aam
xor
and
pop
add
out
add
cmp
ret
cs
mov
pushf
cs
inc
cltd
xchg
cli
fwait
popa
cmp
sti
pop
aad
movsl
cmp
es
xor
out
mov
loop
xor
inc
lods
jmp
fdivl
jecxz
xor
stos
sahf
popl
jns
lcall
mov
lods
shrl
push
xchg
out
dec
push
and
mov
rcrb
inc
repz
push
shrl
mov
pop
fdivp
imul
sub
inc
int3
xor
and
or
xchg
inc
rolb
push
jge
add
mov
mov
pop
cmc
mov
xor
iret
pop
mov
inc
adc
sub
xchg
cmp
push
loopne
adc
cmpsb
fdivrs
fsts
and
add
testl
inc
pop
pop
jl
popf
add
lcall
mov
pushl
jbe
fidivrl
jne
cmp
add
mov
inc
dec
addb
out
mov
xor
mov
jno
pop
add
int3
out
mov
inc
jecxz
sub
adc
jns
jne
nop
mov
stc
inc
nop
dec
cmp
inc
xchg
and
fwait
lss
imull
mov
jecxz
dec
xor
sahf
xchg
aaa
pop
cltd
sub
roll
dec
mov
adc
rorl
dec
cmpsb
out
aad
scas
push
sub
inc
test
test
xchg
dec
push
cmp
mov
add
cld
xor
jl
ror
sbb
mov
aaa
pop
pop
outsb
cld
mov
cli
insb
xchg
les
push
pop
sbb
mov
cmp
and
push
add
mov
out
lea
insb
jbe
add
out
add
ds
sarb
inc
sbbb
mov
sub
xchg
or
es
out
neg
lahf
sbb
push
add
push
sub
push
cmp
iret
cmp
lods
daa
dec
lock
jecxz
mov
inc
cli
or
addl
mov
mov
push
imul
add
mov
addb
adc
jp
lea
inc
imul
dec
aas
clc
jge
sub
jbe
lahf
scas
jnp
pop
xlat
into
jl
push
push
adc
fwait
repnz
arpl
int3
stc
icebp
popa
movsl
pop
add
dec
leave
pop
pop
fucomp
xor
mov
adc
ljmp
in
fcmovb
cltd
jbe
jbe
cld
adcb
inc
push
in
cs
insb
sub
lcall
sti
cmp
xor
call
pop
push
movsl
cmp
into
popa
vmovlpd
cmp
jnp
les
movsl
je
adc
test
testb
xlat
loop
push
insb
ljmp
cwtl
js
xchg
jnp
mov
dec
jae
jmp
lcall
pop
jle
cmp
fiaddl
adcb
pop
int
jae
xor
mov
lret
inc
adc
imul
xor
adc
add
mov
addr16
push
movsl
sbb
xchg
adc
mov
lret
sub
enter
cli
sbb
cmp
adc
mov
popa
dec
lcall
fcmove
mov
ret
xchg
mov
jne
lods
aad
dec
movsl
filds
mov
test
cld
dec
cmp
jmp
repz
fimull
repz
ret
add
out
add
jecxz
push
inc
popa
cli
ficomps
out
push
pop
cmp
mov
not
and
out
pop
add
dec
loopne
je
inc
pop
inc
xor
test
pop
pop
orb
shlb
rorl
cmovl
cmpsb
rcll
push
mov
push
mov
in
cmpsl
add
sub
sub
add
inc
fucomi
add
add
hlt
sub
ficoms
nop
insb
mov
xchg
and
sahf
sub
test
in
test
dec
mov
addr16
xor
adc
mov
mov
jg
sbb
xchg
and
iret
lret
repnz
js
fistl
lcall
xor
cmp
leave
or
sub
mov
sahf
and
xor
push
fnstsw
xlat
mov
pushf
jmp
sbb
and
data16
sub
or
mov
test
pop
xchg
add
ds
cli
fcmovnu
pop
push
mov
repz
rcll
aam
in
mov
pop
jmp
cmp
dec
or
in
fcmovnu
inc
xchg
add
in
aam
lods
frstor
push
shll
mov
pop
sti
cmc
adc
lret
stc
orb
and
xchg
dec
fsts
lea
mov
xlat
mov
insl
add
les
push
negb
repnz
loop
addr16
add
enter
imul
adc
cld
out
inc
pop
xchg
mov
sbbl
push
cmc
adc
outsl
and
mov
fdivp
fnstsw
loop
sub
js
aas
push
xor
test
cmpsl
push
mov
dec
sub
lcall
push
dec
mov
mov
icebp
and
pop
aad
ss
dec
js
sub
add
add
add
popa
mov
cmpsb
adc
adc
int3
pop
mov
or
mov
ret
insl
movzwl
aaa
dec
les
fucom
ret
fstpt
push
daa
aas
nop
jno
divb
fidivs
outsl
pop
es
or
dec
pop
ret
cld
xor
leave
out
mov
push
stc
mov
sbb
stos
pop
lret
scas
jne
jne
sub
sti
int3
mov
leave
daa
in
movsb
pop
inc
or
fs
pop
inc
xchg
xchg
lret
mov
cmp
mov
ror
sub
push
lock
arpl
testb
shr
dec
dec
mov
adc
lahf
sub
clc
mov
fildll
pushf
sahf
out
cmp
pop
mov
test
cmp
xchg
repz
out
jl
dec
xchg
outsb
lcall
push
aas
stc
mov
inc
enter
push
push
and
filds
xchg
mov
pushf
mov
ret
pop
call
xorl
hlt
jbe
repz
add
and
jl
adc
add
idivb
dec
push
in
call
sbb
vmovups
jae
mov
cmp
imul
and
pop
clc
push
xor
out
inc
mov
int3
or
xlat
insb
or
mov
xchg
push
xor
je
nop
lds
int
sub
jo
mov
adc
xor
adc
lret
mov
jbe
jo
jmp
add
jno
out
dec
scas
cmp
test
mov
dec
in
xchg
push
or
je
mov
ja
popa
shrl
mov
ljmp
adc
arpl
add
movsl
xlat
clc
mov
gs
cld
adc
adc
out
add
pushf
sbbl
ss
int
shll
dec
xor
jb
pop
xchg
aaa
ret
aad
repnz
sub
popf
jnp
lea
mov
mov
movl
push
mov
mov
mov
sub
lds
cmp
jle
insl
sbb
and
addl
movsl
mov
cmc
adc
popf
sub
mov
xorl
mov
das
lahf
jge
aaa
in
setl
imul
ljmp
jae
cmp
push
sub
pop
mov
xorb
push
fadd
jno
push
xor
pop
cmc
stos
xchg
jo
mov
mov
mov
scas
movsl
mov
subl
adc
xchg
jl
lds
sbb
push
inc
popa
dec
pop
rcr
pop
mov
sub
jp
pop
leave
mov
cmc
lcall
fldenv
sub
in
fbstp
mov
pop
fxch
mov
aad
idiv
lds
mov
mov
xor
in
push
jnp
xchg
and
xchg
pop
test
mov
fst
icebp
or
es
in
sub
lods
cmp
mov
ror
xchg
popa
xlat
lcall
pop
cmp
xlat
xchg
mov
and
int3
mov
lret
cmpsl
sti
arpl
sti
push
push
and
call
mov
and
inc
inc
ficoms
adc
cmp
je
sub
fcom
sub
lods
mov
cmp
jo
xlat
in
testl
xchg
xor
adc
fisttpll
in
pop
in
inc
out
inc
std
mov
jge
cmp
clc
ss
and
outsl
mov
lret
jle
repz
mov
int3
add
out
add
scas
xchg
lret
mov
scas
sbb
jae
mov
push
lret
mov
loop
out
clc
xchg
dec
inc
dec
cmp
add
cld
xchg
dec
xchg
dec
pop
jl
inc
push
dec
dec
icebp
push
adc
xor
das
test
pop
fsubrs
xor
push
repnz
call
sub
movsb
or
mov
mov
dec
aad
cmp
xchg
scas
ss
imul
cltd
pop
and
dec
xor
pop
pop
mov
repnz
fsubrs
xor
sub
inc
sub
jg
lds
out
data16
adc
dec
adc
cmp
aad
cwtl
test
sub
ja
fsubl
inc
mov
lret
popf
cli
mov
mov
dec
or
out
test
or
out
mov
daa
mov
cmpsl
pop
sbb
lret
lahf
addr16
sub
xchg
ljmp
sub
mov
enterw
mov
push
jmp
mov
mov
movsl
sub
idiv
lret
fcoms
pop
cmp
das
hlt
imul
sbb
les
sbbb
xchg
cmp
adc
mov
mov
loopne
ret
shl
cli
inc
push
arpl
xchg
icebp
scas
sub
or
stos
test
adc
mov
sub
stc
mov
rorl
lods
xchg
aad
xchg
shrb
pushf
pop
jo
faddl
int3
jns
out
cld
mov
xor
stc
cli
aad
out
pop
push
loop
loope
ret
jp
rcrb
mov
inc
js
pop
mov
dec
fsubs
mov
cmp
iret
mov
es
clc
mov
bound
cs
mov
mov
fnstenv
outsb
fsubl
scas
pop
mov
sub
inc
jg
inc
jo
inc
mov
add
int3
add
adc
adc
mov
lds
stc
int
add
add
add
hlt
repz
mov
rorb
fmul
adc
cmp
jbe
adc
pop
cltd
in
mov
jge
xchg
jge
sub
cmp
jnp
cmp
mov
xor
in
out
sub
mov
clc
mov
loop
hlt
pop
test
repz
mov
xor
aam
icebp
mov
mov
cmp
jg
jno
out
jnp
adc
cmp
jo
jle
iret
jp
pop
mov
add
mov
adc
xor
incl
fbld
xor
push
jl
inc
and
mov
js
jl
or
jmp
outsb
mov
fsub
jge
inc
pop
repnz
test
mov
imul
je
and
fadds
fwait
pop
jno
loopne
jne
sbb
movsb
mov
lret
push
sarb
sbbl
call
and
mov
xchg
sbb
bound
dec
mov
xor
xchg
add
sub
inc
pusha
shrb
mov
jns
leave
cld
sub
lds
or
lods
xor
adc
jnp
sub
das
push
jo
dec
xor
loop
clc
gs
test
sbb
xlat
dec
notb
dec
push
xlat
push
call
shl
inc
cmp
enter
pop
fs
fwait
jecxz
enter
jle
les
add
hlt
pop
push
fbstp
iret
stos
jne
das
xchg
test
dec
xchg
test
dec
mov
mov
add
xor
xlat
dec
fstl
adc
cmp
sub
lea
shll
psrlq
sarb
mov
lock
mov
shlb
imul
add
or
mov
cmpsb
sub
out
loopne
push
push
aad
fildll
rcrb
int
adc
push
lcall
add
loope
jle
ljmp
std
sbb
repnz
popf
subb
bnd
sbb
sbb
iret
jne
fstp
sbb
and
out
fldenv
imul
jns
or
add
pop
divps
aam
jp
sbb
rcr
xor
cmc
ja
int
inc
sbb
test
pop
cltd
push
mov
aas
lret
pop
mov
das
loop
out
push
cmp
pusha
sahf
and
pop
push
fcmovnb
or
fldt
push
orb
inc
cmpb
jno
aad
rorb
hlt
jbe
lcall
adc
cs
mov
test
aad
fisttpl
fisttps
ss
sti
ret
shrb
jmp
in
or
leave
roll
les
sahf
jp
pop
loope
mov
fimuls
into
cmp
mov
cld
push
sti
jns
movsl
dec
jae
fdivrl
pop
mov
mov
sti
mov
or
mov
test
pop
in
xchg
xor
fidivs
push
les
dec
dec
cmp
sbb
les
popf
subl
jbe
xchg
mov
push
mov
nop
ret
imul
lea
or
movsl
adc
push
inc
ret
rclb
xlat
inc
stc
rclb
out
test
aam
jo
sbb
and
out
pop
cmp
gs
pop
jno
jne
popf
in
sahf
xchg
imul
mov
jmp
xor
lret
xor
loope
pusha
addr16
pop
es
sqrtps
cmc
das
sbb
xchg
iret
loop
pop
mov
out
add
cld
push
mov
into
adc
mov
and
ret
lds
jbe
sbb
inc
ret
pop
in
shrl
mov
and
adc
lods
orb
xchg
mov
sbbl
jge
adc
pop
outsl
and
mov
sub
movsb
sub
mov
pop
hlt
mov
mov
gs
cmpsl
sub
mov
push
sub
fisttps
lods
in
pop
add
sbb
dec
fstpl
test
inc
ja
lcall
popa
lret
stos
and
inc
xor
mov
shrb
dec
mov
pushf
cmpsb
cmp
js
ret
in
cmp
cmp
adc
addb
popf
cmc
add
insb
push
call
loope
sbb
lret
jno
lods
stc
aas
flds
int3
popf
cmp
sub
push
mov
in
xchg
out
bnd
outsb
adc
mov
not
movsb
mov
xor
sub
out
mov
and
mov
pop
xor
jmp
adc
add
sub
in
loope
sub
ljmp
mov
cmc
movsb
addb
movsb
in
xchg
push
inc
push
push
sub
subb
stc
dec
nop
gs
lret
or
stos
pop
jecxz
ror
cwtl
jecxz
arpl
mov
cld
ret
loopne
jmp
mov
cmpsl
jmp
jge
fcmovb
lds
cli
adc
out
dec
bound
stos
out
push
dec
fxch
popa
adc
cmp
sub
mov
inc
negb
rcl
enter
iret
mov
jns
sti
lretw
outsl
cmpsl
lret
cmpl
cmp
lds
mov
pop
pop
mov
add
sub
fildll
dec
loopne
aam
roll
add
add
add
pushl
mov
fadds
xchg
dec
mov
mov
adc
decl
aam
adcb
mov
mov
stos
and
addr16
mov
mov
andb
sbb
inc
sub
and
jp
ja
and
repnz
inc
ss
popa
int
pop
inc
cmpsl
aam
add
je
inc
add
pop
mov
add
push
sub
push
inc
push
pop
repz
cmp
inc
mov
xchg
mov
mov
aas
cltd
xchg
mov
inc
popl
lahf
push
lcall
sub
sub
rclb
dec
out
cltd
and
pop
sbb
dec
xchg
fsub
repnz
sbb
sti
and
mov
push
in
xchg
loopne
adc
iretw
loope
sbbl
ja
dec
test
shll
dec
clc
mov
cld
in
lock
fcmove
cmc
mov
sub
add
dec
cmp
inc
cwtl
or
fxch
inc
loop
loop
aad
push
and
xchg
or
dec
cmp
clc
rolb
jecxz
sub
sub
pusha
mov
cmp
add
popf
popa
ss
pop
or
push
xlat
mov
les
sti
xlat
mov
cmp
enter
lret
or
jmp
stc
inc
cmp
out
xor
ret
aad
push
push
lods
stos
fwait
cmp
adcl
pop
mov
jnp
pop
std
xchg
incb
sub
xor
add
pop
iret
pop
out
or
iret
or
loopne
movsl
cwtd
or
fimuls
lcall
negl
lds
sub
sahf
mov
dec
mov
int3
mov
and
outsb
iret
mov
adc
or
lds
lea
add
fs
testl
hlt
jnp
aad
add
add
add
add
cmp
or
adc
ss
pop
cmp
inc
fsubs
or
rclb
leave
imul
or
mov
adc
pop
mov
lds
or
ficoml
out
dec
fcoml
jl
in
dec
jle
jno
xchg
leave
mov
aad
popa
hlt
inc
mov
add
out
mov
das
rcrl
faddl
movsl
cmp
mov
ret
pop
sub
in
adc
pop
icebp
mov
inc
pop
cmpsl
inc
stos
dec
inc
dec
xor
sbb
bound
jg
stos
jns
cmp
jg
mov
add
push
mov
adcl
std
fisttpll
jbe
pop
cmc
dec
inc
pop
and
xchg
mov
out
aas
xorl
sub
icebp
incl
sbb
dec
xchg
and
add
insb
cwtl
xchg
and
push
fwait
mov
jg
cltd
pop
or
cli
and
mov
cmp
shrl
mov
and
jmp
ret
ret
dec
jmp
sar
daa
sarl
cmp
mov
cli
rorl
je
inc
inc
mov
pop
mov
xchg
insb
test
sub
pop
cmc
and
inc
adc
inc
cmpsl
add
out
fnstsw
pop
pusha
inc
sub
push
add
push
sub
es
sbb
iret
xor
inc
pop
mov
inc
mov
or
xor
sbb
scas
jecxz
pop
xlat
cmp
push
or
or
ret
out
mov
add
add
mov
call
test
lock
jnp
add
add
jne
jg
clc
cs
push
add
add
xor
push
lcall
mov
mov
loopne
aad
outsb
push
loop
jbe
mov
pop
lock
mov
iret
dec
bound
clc
fsts
insl
jg
pushf
dec
fdivs
shl
in
xor
or
lods
fstpt
dec
out
push
cmp
lock
outsb
mov
leave
scas
mov
mov
xor
dec
std
cmc
mull
sub
inc
inc
sbb
fistpll
mov
adc
xor
fisttpll
clc
jmp
pop
xchg
out
xchg
test
in
lock
pop
mov
repz
push
inc
inc
lock
repnz
cs
mov
cmp
aam
xor
daa
cli
jo
into
daa
jmp
orl
inc
xlat
jo
sbb
test
and
cli
dec
inc
adc
xor
sub
cmp
addr16
pop
mov
hlt
in
mov
inc
adc
xlat
fcmovne
push
ret
hlt
xabort
icebp
mov
lock
mov
and
or
pop
mov
cmp
dec
bound
hlt
ret
aam
pop
sub
hlt
xor
cmp
addr16
pop
inc
repnz
jne
dec
xor
iret
inc
lahf
mov
int3
adc
out
dec
push
popa
jecxz
dec
int
mov
dec
xor
pop
push
das
std
es
popa
mov
jnp
dec
shrl
std
or
pop
push
mov
arpl
xor
fistpll
outsb
mov
jge
ss
jmp
movsl
inc
out
sbbb
les
cld
ja
mov
cmp
add
and
jns
lock
gs
jmp
into
xor
mov
and
je
pop
lret
stos
in
jle
inc
or
lea
int3
lcall
cltd
mov
in
je
adc
ljmp
sti
dec
mov
je
lcall
add
out
add
loope
mov
or
mov
popf
jl
icebp
je
ret
sti
ds
test
xlat
es
dec
pop
dec
cmpsb
test
stos
or
jae
out
fadd
nop
out
imul
sbb
mov
cmp
jne
call
pop
inc
out
and
ret
outsl
mov
xor
add
inc
dec
sbb
cli
jno
repnz
push
xor
das
cmpsl
mov
loope
outsl
adc
xchg
inc
leave
dec
leave
dec
andl
lahf
iret
jnp
in
jo
nop
mov
sbb
jp
mov
inc
cmp
xor
lods
stos
mov
xor
or
std
push
mov
xor
idivb
lret
fwait
test
lret
ret
out
mov
pop
nop
jbe
fldenv
mul
cvttps2pi
das
mov
cmp
push
inc
xor
adc
dec
xchg
dec
cmc
pop
sbb
dec
ror
jns
xchg
mov
xchg
aam
pop
repz
sahf
frstor
shrl
notb
add
sti
adc
or
je
call
xchg
cmp
adc
lock
pop
jle
mov
add
in
inc
add
out
lret
repz
adc
inc
roll
das
fstpl
lea
movsb
push
rclb
popf
pusha
jbe
and
fistpll
out
mov
leave
ds
sbb
movsb
test
mov
fmuls
mov
pop
aas
jecxz
cmp
mov
out
xor
cvtps2pd
out
sbb
mov
mov
jge
mov
inc
and
or
fimull
nop
push
push
stos
mov
daa
test
cltd
scas
mov
push
int3
inc
ljmp
cmp
cmp
jg
cmp
fists
dec
mov
xchg
adc
ret
into
xchg
add
out
add
push
aas
xchg
insl
push
scas
mov
adc
lahf
fwait
cmp
je
and
pop
cmp
mov
les
xchg
sahf
ds
out
ficoms
cs
or
clc
sti
pop
dec
cmpl
pop
mov
xor
in
mov
loop
jmp
adc
sub
pop
cmp
push
or
pusha
dec
cli
xchg
jg
mov
stc
xchg
imul
or
shrb
jo
leave
js
in
push
cmp
cld
icebp
jle
mov
dec
and
test
aam
fsubs
ds
mov
dec
fisttpll
cmp
pushf
xchg
dec
and
jo
insl
xchg
outsl
ret
or
and
inc
stos
inc
inc
lcall
psrad
fstps
mov
outsb
dec
fldt
pop
jns
jae
add
sti
fiadds
dec
cmp
mov
bound
jo
inc
add
cmpsb
pop
sub
in
xor
ss
adc
fldenv
fistpl
movsb
outsl
out
xor
cltd
lds
repnz
and
xchg
adc
push
lods
lea
popf
scas
xchg
mov
in
icebp
out
push
push
addr16
hlt
aaa
xchg
imul
fsubl
in
dec
xchg
test
push
test
hlt
or
jecxz,pt
pushf
jo
lea
pop
out
data16
xchg
sahf
test
faddl
push
rcrl
icebp
js
pop
push
cmpsl
push
and
int3
mov
sub
loopne
rorb
jns
stos
pop
pushf
push
leave
push
adc
sub
xor
cld
push
aad
push
sahf
cld
iret
das
lret
fcmovbe
xor
and
pop
jge
in
sub
pop
in
cmp
daa
pop
jae
in
dec
in
scas
cs
dec
outsb
loope
mov
rorb
xchg
fcmovu
fisttps
push
sub
imul
cwtl
add
out
add
inc
cmp
pushf
hlt
push
mov
mov
sbb
and
xlat
dec
xor
cmp
fstpt
sbb
mov
iret
jno
ds
or
cmp
pop
nop
jecxz
inc
popa
push
hlt
lods
in
xor
sbb
sub
cmpsl
pop
inc
dec
rol
fistl
fsubrl
fidivs
adc
or
fsubp
mov
jno
cmp
and
sbb
in
shll
mov
fisubrs
xor
pop
push
mov
iret
mov
mov
add
lret
mov
mov
jae
pusha
divps
xchg
lret
sub
or
inc
push
pop
cmp
adc
mov
scas
andb
cmpsb
ss
cmp
aad
subl
jp
mov
cmc
jge
in
imul
and
mov
int
test
dec
sub
inc
test
imul
mov
leave
leave
inc
lcall
ror
cmp
fsubl
movsb
les
mov
xchg
push
xor
xor
inc
jns
add
loopne
hlt
loopne
adc
stos
xor
lock
mov
jnp
add
cli
inc
in
fwait
cmp
dec
pop
mov
daa
adc
xchg
stc
sub
cmp
push
icebp
stc
adc
testl
jg
movsb
lds
mov
cmp
mov
add
stc
xchg
fsubr
shlb
xor
pop
enter
repnz
mov
mov
inc
mov
cmpsb
sub
iret
cmovb
dec
mov
fsubs
sub
lds
sub
push
inc
sbb
lea
fcomip
mov
add
jle
out
sbb
mov
lcall
mov
outsb
lea
lcall
loopne
loop
mov
mov
pop
in
stos
jae
sbb
xchg
rorl
sub
inc
mov
push
cmp
or
stos
addr16
in
add
adc
aas
mov
mov
stos
push
cmp
je
ds
push
xor
xchg
mov
cmpsb
or
mov
call
push
xor
and
out
inc
add
jl
xor
xor
and
mov
and
and
adc
inc
mov
push
inc
sbb
cmp
jp
pop
xchg
int
ds
outsl
sbb
inc
mov
jge
or
jne
and
xchg
sti
mov
sbb
sbb
sti
xlat
orb
or
daa
sahf
out
sbb
ss
mov
lds
out
int3
insl
repz
sub
leave
decl
jle
sbb
add
jge
jle
or
sarb
xor
xor
sahf
or
jno
mov
jne
mov
stc
fcomip
mov
imull
dec
mov
lds
cmc
aad
mov
push
jle
jae
icebp
xchg
test
loop
jae,pn
xchg
fnsave
and
ret
loopne
pop
out
xchg
cmpsl
dec
loopne
outsb
jno
cld
movsb
or
cli
mov
or
shlb
pushf
orb
jns
add
push
jno
sarl
lret
inc
cmpsl
push
and
outsl
mov
cs
out
test
mov
pop
lcall
mov
cmp
sub
sbb
sub
mov
shrb
movsl
jle
es
mov
ja
push
add
and
cmp
mov
xchg
sbbl
push
idivl
mov
test
roll
or
clc
mov
cs
test
iret
cmp
clc
adc
lods
push
testb
dec
add
daa
and
icebp
cmp
cwtl
add
enter
push
scas
inc
repz
aaa
push
bound
stos
mov
xor
movsl
and
les
lcall
mov
mov
and
scas
divl
jle
dec
add
xor
es
jl
mov
pop
mov
jbe
cmp
movsb
fsqrt
test
cmpsl
cmp
scas
fnsetpm(287
stc
push
mov
arpl
mov
in
sub
adc
mov
and
scas
loopne
and
cmp
xchg
dec
psubw
xchg
insl
rolb
inc
dec
sbb
stos
sahf
andl
cltd
jmp
inc
mov
jge
in
inc
pop
fmull
stc
push
mov
jno
push
mov
nop
scas
pop
mov
add
add
jmp
enter
sahf
sub
out
xor
aam
stos
pop
lret
xchg
gs
adc
mov
xor
add
push
push
cmp
inc
ss
push
outsb
lret
pshufw
ljmp
mov
jbe
cli
push
or
icebp
xchg
mov
mov
mov
repz
push
xlat
dec
cwtl
mov
push
insb
sub
xlat
pop
fiaddl
xor
jns
int
loopne
ljmp
cs
andl
es
cmp
and
pop
or
mov
jbe
lret
shrl
and
hlt
and
ffree
popf
aam
xchg
out
lea
add
out
add
insb
lret
gs
outsb
push
in
loop
xchg
inc
or
repnz
push
ds
minps
test
mov
push
dec
jge
bound
stc
and
call
and
icebp
add
jno
das
add
dec
gs
cwtl
out
add
rorb
mov
mov
jb
sarl
inc
sti
sarb
cmc
jmp
lea
and
cwtl
lods
pop
movsl
aaa
mov
adc
push
aad
lcall
pop
mov
add
sbb
xchg
jae
outsb
arpl
ret
fucomp
jnp
or
fadds
scas
and
jnp
push
ss
in
sub
push
and
cwtl
pop
in
mov
cwtl
xlat
mov
call
notl
movsl
dec
popa
mov
sub
mov
mov
fwait
adc
push
mov
ret
push
lret
dec
ret
cli
sub
cmp
sub
add
cmp
mov
out
add
and
mov
push
negl
pop
or
mov
fwait
xchg
dec
push
fisubs
inc
jb
inc
xor
adc
and
in
mov
jo
test
or
xchg
in
imul
shll
xchg
push
cli
xchg
push
daa
mov
sub
dec
mov
cmp
pop
shr
sub
cmp
cmp
add
xor
jnp
adc
add
lcall
loopne
or
push
jle
out
sub
add
cmp
sbb
mov
stos
sub
or
enter
decl
sbbl
cmp
enter
sub
cmp
in
popa
inc
xchg
jnp
xor
push
add
mov
jbe
hlt
mov
and
cmpsb
sub
push
mov
add
stos
add
mov
xor
shufps
ret
aas
fwait
xchg
xchg
push
sarl
xchg
pop
dec
je
in
test
insb
jno
pcmpeqb
shl
pop
cmpb
stc
les
or
lock
adc
sbb
add
sub
xor
mov
add
daa
out
mov
popa
out
arpl
pop
fs
call
sbb
jmp
or
hlt
mov
mov
sbbb
push
orl
mov
push
insl
std
xchg
das
jne
enter
sub
sbb
inc
mov
sub
stos
fcompl
sbb
and
ss
mov
or
loop
mov
jmp
sub
je
dec
imul
add
jecxz
out
jno
mov
cwtl
sbb
xor
out
das
enter
repnz
inc
mov
xlat
jp
ret
aad
std
xchg
xchg
pop
mov
ds
outsl
cmp
les
jb
xchg
adcl
bound
test
jmp
aam
inc
clc
and
sti
push
or
xor
pop
pop
mov
movb
mov
push
fsub
cltd
mov
adc
cwtl
imul
fsubrl
mov
sub
xchg
pop
and
or
mov
sahf
adc
cwtl
sti
cmpb
adc
push
stc
ficomps
rorb
aas
xor
or
push
out
mov
jg
and
imulb
mov
add
fisttpl
nop
out
adc
loope
out
cld
movsb
test
pop
xor
mov
xchg
fstl
push
shl
pop
adc
xchg
negl
add
in
sub
dec
xchg
cmp
xor
into
mov
sub
out
dec
shlb
mov
add
mov
inc
call
pop
or
dec
loopew
mov
cltd
push
mov
cmpb
insb
inc
dec
cltd
ret
push
std
fiadds
jl
push
lahf
sub
sub
add
adc
test
push
sahf
aas
test
mov
add
xchg
push
push
ja
hlt
jae
ficoml
shll
dec
arpl
call
or
sub
adc
mov
test
cmp
xlat
mov
adc
call
dec
sbbb
xchg
in
push
test
push
repz
mov
mov
inc
nop
pop
sbb
ljmp
fdivrs
dec
or
and
sbb
add
in
mov
leave
push
hlt
inc
shrb
das
movsb
cmpsb
adc
mov
insl
fcmove
les
cli
push
sbb
ret
and
outsb
push
and
push
jno
sub
cs
jg
sub
in
add
loopne
arpl
mov
popa
and
ljmp
push
lahf
xchg
or
jge
fwait
test
test
pop
popa
mov
js
sub
jne
clc
shlb
jb
jp
arpl
cmpsb
lahf
xchg
mov
jnp
add
mov
daa
mov
add
pop
mov
repz
and
addr16
sbb
mov
xor
push
inc
inc
mov
xchg
ja
sub
sbb
mov
lock
movsl
cmpl
add
dec
and
aam
cmp
mov
das
sahf
mov
jle
aaa
pop
cmp
rorb
shlb
add
int
je
sub
dec
add
in
outsb
and
pop
mov
pop
movsb
add
out
add
mov
mov
out
pop
jne
jmp
lods
mov
enter
and
fs
fldt
test
push
cld
imul
imul
mov
dec
inc
or
sbb
es
ret
jmp
es
mov
pop
scas
out
data16
pop
dec
and
movsl
dec
push
js
mov
dec
mov
rcrb
push
in
sti
outsb
icebp
mov
fisubrs
call
pop
sub
cmp
xlat
push
sub
arpl
dec
inc
imul
shll
in
imul
push
les
cmp
lock
icebp
lea
inc
pop
or
xor
lea
xchg
jg
insb
ljmp
mov
cmp
add
lcall
push
cmpsb
jbe
push
add
in
fcomps
lcall
pusha
mov
stos
clc
je
mov
mov
add
int
jmp
andl
in
pop
pusha
dec
or
inc
dec
and
subl
clc
sbb
jp
xchg
xchg
mov
or
pop
sti
push
cmp
sub
nop
mov
sarl
add
xor
shrl
lock
shrb
sub
push
and
ret
imul
mov
ficompl
mov
in
jno
repz
push
jl
ds
sub
fisttpl
mov
ret
sub
ficompl
out
outsb
mov
sbb
fadds
sbb
leave
sarb
lods
test
mov
push
xchg
add
mov
and
lock
cmpsb
add
out
add
sub
add
roll
adc
and
call
into
push
pop
sub
cwtl
subl
lods
outsb
test
jge
xchg
mov
and
out
in
movl
imul
mov
dec
xor
es
into
outsl
or
ja
xor
ret
jno
cmp
push
jno
loope
and
or
ficoms
shll
inc
or
scas
dec
adc
lret
cmp
ss
and
dec
xchg
push
nop
inc
push
cmp
cmp
test
jnp
movb
sub
sahf
or
or
je
mov
loope
push
mov
and
mov
ss
js
jge
fistps
call
xchg
fwait
mov
xor
out
rclb
fsubl
pop
cmc
imul
mov
nop
aam
inc
dec
jmp
popa
sti
nop
out
in
sub
cld
pop
lock
das
cld
cmp
loopne
mov
call
mov
jl
into
movsb
mov
jl
cmc
jl
imul
repz
dec
fwait
call
jo
pop
ret
sub
out
jnp
mov
xchg
fidivl
fstl
test
pop
aas
inc
jg
pop
pusha
ret
ja
rorl
bound
hlt
movsl
jl
ss
das
in
es
cmp
pop
push
mov
pop
mov
jmp
push
sub
cltd
jno
lret
jae
jbe
ret
push
jb
cmp
sub
ljmp
mov
push
sub
sub
lret
pop
repz
cmp
es
loope
xchg
shlb
sti
dec
leave
mov
sub
and
imul
mov
xchg
rcr
dec
cmp
push
mov
and
jg
call
into
inc
mov
or
ja
cmpsl
add
out
add
adc
clc
jns
xor
dec
mov
mov
movsl
hlt
mov
jecxz
mov
mov
cwtl
ds
arpl
addr16
mov
or
push
aas
sub
xchg
pop
ss
adc
push
dec
adc
test
mov
test
hlt
popf
fwait
jmp
in
nop
das
in
inc
jnp
lahf
push
pop
dec
aaa
shrb
xor
mov
sbb
mov
jmp
xor
mov
scas
ss
sti
cmp
add
icebp
decb
cltd
test
lds
jo
rolb
pop
out
ss
fs
inc
inc
enter
jg
mov
out
int
inc
inc
ret
push
sbb
das
icebp
es
addr16
pop
dec
rcrl
cmp
jecxz
mov
and
sub
pop
dec
lds
xor
repnz
jno
mov
or
cmp
imul
int3
test
icebp
pop
cmp
mov
xchg
aaa
xchg
dec
push
int
xor
clc
jle
inc
jmp
clc
insb
push
sub
and
dec
js
cwtl
xlat
pop
clc
jbe
aas
jns
ss
xor
jl
jbe
mov
push
outsl
arpl
aaa
push
sub
dec
mov
popa
add
adc
add
dec
inc
inc
mov
addb
xchg
mov
add
mov
pop
mov
data16
nop
mov
xlat
cltd
xchg
cmp
cmpsb
xlat
mov
gs
lock
stos
inc
jne
dec
inc
inc
mov
inc
lods
imul
lcall
sti
loope
insb
out
mov
mov
inc
scas
xor
sti
mov
inc
testl
xor
popa
enter
xchg
mov
adc
out
test
fisubrs
cwtl
sar
repz
js
pop
xchg
aam
add
out
add
fldl
ret
popf
mov
mov
xor
push
mov
xchg
add
mov
jbe
test
enter
lods
pop
gs
mov
out
pop
das
dec
push
lahf
fstpt
and
bound
cld
movsl
and
xchg
shll
xchg
xchg
ss
lods
pop
repz
xchg
mov
mov
mov
cltd
test
loope
mov
jg
dec
lods
mov
je
fucomip
adc
mov
mov
pop
and
adc
fwait
iret
ss
mov
xchg
pop
inc
xlat
cs
fiaddl
adc
dec
xchg
dec
lods
jns
bound
insb
mov
lods
iret
jmp
inc
inc
imul
js
mov
je
cmp
and
pop
or
jmp
aad
inc
sti
sbb
fdivs
dec
movsl
sti
push
xor
pop
dec
je
xlat
call
std
add
es
push
jo
cltd
jg
pop
out
fidivrl
int3
mov
arpl
add
mov
enter
lock
sub
jns
fldenv
mov
jne
mov
out
cmp
jg
fisttpll
mov
les
mov
test
lret
lods
adc
inc
and
data16
xor
inc
cwtl
clc
and
add
in
push
lret
adc
xlat
mov
aad
xchg
cli
cmp
mov
fiadds
arpl
jg
pop
push
int
aas
mov
sbb
inc
sbb
jno
imulb
xchg
std
push
push
jg
and
aad
ds
stos
shrb
je
inc
orps
push
mov
and
cs
add
inc
sub
mov
mov
insb
leave
out
popf
enter
aas
int3
sbb
out
loopne
lods
popa
in
andl
add
mov
lods
dec
xchg
sahf
addr16
fwait
push
call
mov
enter
ds
insb
insb
icebp
rol
in
imul
add
loope
mov
mov
and
cmp
xchg
enter
push
or
jnp
insb
and
xlat
inc
and
test
mov
in
pop
jae
xchg
fldcw
mov
sbbb
fisttpl
and
fildll
js
pop
pusha
int
out
pop
insb
xor
pop
pop
and
cmpsb
outsb
mov
inc
in
jns
push
stos
xchg
das
clc
inc
jg
out
sub
pop
leave
repz
std
mov
add
pop
aad
dec
xchg
sahf
std
clc
jp
inc
inc
popf
pop
subb
mov
mov
pop
ljmp
pop
test
xchg
add
xor
clc
push
mov
gs
scas
xchg
je
push
fistl
pusha
popf
jb
adc
outsb
cmpsb
sbb
push
imul
in
mov
mov
fdivs
push
and
or
lcall
mov
lods
cmpsl
std
and
in
psubusw
jae
inc
lcall
es
mov
lds
arpl
subb
jle
cltd
cmc
fcompl
lahf
push
fsubrs
scas
mov
outsl
sahf
gs
mov
out
mov
adcb
popf
pop
xor
repnz
push
inc
pop
clc
mov
inc
pop
cld
mov
js
test
sahf
jl
sub
cmp
sub
enter
sub
pop
sub
lahf
icebp
xor
dec
adc
shl
and
add
add
ljmp
test
pop
sti
mov
add
test
fildll
stos
andb
out
add
xor
mov
sbb
js
mov
sbb
lret
mov
pslld
and
ljmp
sbb
cmp
insl
addr16
or
add
jmp
jge
stos
fs
mov
sbb
xor
adc
xorb
mov
fidivs
mov
mov
dec
incl
rorb
add
test
lods
stos
les
push
popa
push
mov
icebp
repnz
roll
lcall
imul
xchg
insb
insl
or
outsb
test
xchg
pop
mov
adc
test
ss
pusha
add
scas
mov
adc
or
xchg
inc
mov
and
xlat
xchg
xchg
cmc
xchg
cld
add
cmp
out
xchg
psubsw
jne
arpl
je
repnz
xor
aam
loop
ret
cmp
push
std
push
inc
or
jg
test
mov
sbb
inc
push
push
cmpsb
push
dec
mov
lock
lcall
jb
pop
jle
mov
stos
push
or
cmp
psrlq
aas
mov
sbb
movsb
dec
inc
jnp
push
or
sub
mov
cmp
movsl
loop
push
cmpsl
jns
in
push
sbb
test
jnp
leave
and
stos
push
fistl
les
jle
cmpl
movsb
subb
add
fmul
push
shld
push
mov
push
cwtl
mov
in
aas
mov
jo
loopne
jge
mov
or
stc
mov
inc
lret
jg
shl
test
pop
test
xchg
and
or
jg
in
fs
sbb
add
lods
fcomi
sarb
add
scas
add
out
add
stos
push
xor
mov
js
mov
xchg
sub
dec
jp
inc
imul
mov
dec
or
xor
and
push
mov
push
loopne
push
cltd
scas
movsl
mov
and
rolb
xlat
mov
xchg
fadd
jecxz
dec
add
mov
pop
jge
sbb
neg
lahf
aad
je
jle
dec
idivb
repz
lds
cwtl
push
shl
sahf
stc
cs
cmp
sbb
enter
inc
push
push
push
xor
mov
cld
or
ds
lds
loop
sahf
rcrb
inc
jle
test
jge
fldt
dec
scas
hlt
fldcw
mov
adcb
and
in
add
stc
pop
fistpl
jb
push
push
xchg
and
popa
xor
movsb
jns
adc
lds
in
push
lret
sub
idivl
dec
cmp
daa
push
jmp
ret
and
clc
push
inc
pop
add
inc
jecxz
dec
repz
cmp
iret
popf
vmovapd
iret
ja
add
or
icebp
or
mov
add
repz
fnstenv
fldl2t
cmpsl
push
cs
popa
rorb
icebp
mov
adc
mov
lods
dec
das
shlb
es
xchg
dec
sbb
sub
and
mov
or
cld
dec
jbe
push
pop
dec
ljmp
xchg
push
xchg
inc
cld
cltd
xchg
leave
mov
mov
mov
jne
cmp
adc
xchg
mull
imul
sbb
fstpl
add
mov
push
add
filds
andl
add
mov
add
divl
dec
cmp
dec
mov
mov
add
add
add
sub
dec
fstpl
push
xor
jmp
inc
insl
pop
call
data16
fimull
xor
imul
cli
scas
sbb
dec
arpl
xor
lods
jl
pop
mov
dec
js
jbe
or
or
add
in
pop
lea
mov
push
pop
and
xorl
loopne
mov
insl
pop
xchg
test
out
out
sbb
pop
movsb
sub
cmc
adc
jmp
das
inc
lods
push
loope
pop
sahf
xor
dec
adc
iret
in
xchg
loopne
mov
push
iret
or
mov
inc
cli
leave
mov
inc
cmp
pop
xchg
push
clc
mov
sub
sub
in
cmp
jno
bound
shll
movsl
cmp
pop
xchg
test
icebp
mov
mov
sbb
dec
mov
jmp
insb
jno
jmp
adc
dec
and
pop
mov
pop
cmp
cltd
enter
jnp
xor
mov
mov
sti
mov
pop
and
push
lods
aad
cmp
sbb
fwait
jecxz
and
pop
adcl
notl
or
inc
add
out
outsb
mov
pop
cmpsb
enter
xlat
push
push
mull
mov
mov
outsb
js
xor
fidivl
pop
iret
lcall
std
dec
pop
inc
xchg
adc
out
jne
sbb
sbb
in
xor
and
stos
or
aad
add
mov
cmp
loope
dec
inc
fwait
mov
jge
negl
or
pop
jno
add
push
out
js
daa
jo
cwtl
xor
add
out
add
or
lock
mov
add
dec
repz
add
fcmovnu
inc
dec
sarb
push
int3
rcll
xchg
test
dec
xlat
push
pop
push
dec
pop
lret
push
xor
cmp
inc
sub
add
call
mov
push
mov
inc
out
and
jecxz
xor
es
add
jae
xor
sbbl
jge
ret
and
mov
or
jb
test
mov
jnp
nop
mov
call
cs
cmp
sbb
sbb
leave
inc
stc
std
outsl
fsubrp
leave
leave
clc
imul
xchg
cmp
add
repnz
std
pop
fadds
popf
xor
scas
cmp
mov
leave
add
sbb
mov
adc
stos
xor
pop
mov
adc
mov
clc
sub
add
insb
push
test
pop
ljmp
repnz
adc
out
ja
das
pop
cltd
push
adc
test
into
lock
ror
cld
insl
pop
jnp
cmpsl
mov
mov
cs
test
jge
inc
into
dec
pusha
call
dec
inc
sub
scas
lock
aas
int
dec
outsl
and
aas
shll
xor
mov
jg
loop
cmc
jmp
lret
icebp
lcall
xchg
in
lods
push
int
std
cwtl
push
jae
ret
mov
pop
adcb
fidivrs
mov
pop
jbe
dec
insb
ljmp
xchg
mov
test
dec
test
sub
adc
mov
ja
testl
adc
sub
sbbb
cmpsb
jp
arpl
daa
push
imul
and
add
out
add
push
in
lea
fisubrs
repnz
addr16
push
ffree
adc
daa
xchg
inc
imul
popf
stos
or
mov
cmp
push
pop
cmp
arpl
pop
int
mov
jge
pop
jae
sahf
nop
jl
fdivrl
daa
in
xchg
stc
mov
stc
shrb
loop
in
lods
cmpsb
insl
test
sbbl
xor
out
cmp
fs
mov
sbb
cmc
shrl
ret
xor
inc
add
sub
lds
and
test
sti
outsb
psrad
out
dec
and
pop
jnp
loopne
sub
and
aas
outsb
aaa
fs
jg
sbb
jae
fcmovnb
and
ja
cmp
and
imul
add
mov
imul
sub
icebp
cltd
adc
mov
sbb
xlat
push
and
std
popf
xchg
jp
outsb
jb
dec
mov
xchg
notl
xchg
inc
dec
leave
mov
dec
push
int
push
shl
pop
rolb
test
mov
imul
push
mov
cli
inc
mov
aad
push
inc
or
lcall
addr16
aas
in
xor
cs
aam
cmc
repz
ss
xchg
inc
sub
pop
cmc
lcall
jno
icebp
loopne
push
jle
in
cmpsb
bound
push
mov
dec
ror
or
xor
out
scas
imul
sub
xor
scas
cmp
je
cmp
enter
mov
sbb
push
aaa
jmp
mov
mov
sbbl
data16
xchg
hlt
pop
sbb
mov
sarb
xor
jne
add
ss
xor
and
xor
flds
add
add
add
and
pop
rolb
testb
iret
sbb
dec
insb
cmp
fst
lock
or
test
push
icebp
cmc
jbe
aad
sbb
dec
ror
jnp
dec
aad
test
push
xor
stos
cld
sbb
xchg
or
jne
lret
scas
and
sbb
stos
or
pop
inc
inc
jmp
popf
inc
sub
inc
mov
xlat
xlat
mov
test
out
je
in
out
cli
pop
iret
mov
stos
stos
test
jne
inc
pcmpgtw
mov
mov
xchg
clc
xor
inc
stos
lods
lods
push
sub
adc
mov
xor
sysenter
or
cmp
sbb
fdivrs
mov
addr16
adc
gs
cmp
push
call
aam
sbb
lock
jge
or
pop
leave
sbb
loopne
aaa
or
xchg
sub
pushf
sbb
mov
xor
mov
xor
rorb
mov
adc
xor
in
push
aaa
mov
insl
push
lcall
fistl
test
lock
cmpl
cmpb
mov
xchg
inc
jns
lret
mov
cltd
mov
rcrb
push
push
scas
adc
sbb
pusha
jp
loopne
xchg
jecxz
sahf
inc
and
testb
pop
mov
aas
mov
in
jae
fsub
ds
push
es
jbe
and
arpl
loop
shrl
insl
pop
cmpsb
push
dec
das
ss
aas
sub
cmp
inc
fcmovb
orb
or
xorb
pushf
sbbl
jp
sbb
lock
xchg
test
insl
sbb
aaa
out
mul
aaa
cmc
xchg
lcall
dec
fildl
add
add
add
cmp
xchg
inc
dec
int3
call
clc
outsb
push
adc
mov
out
sub
push
add
sbb
add
in
mov
cmpsl
ret
aad
dec
loopne
push
gs
pop
lods
push
sub
push
roll
mov
add
lea
stos
mov
mov
enter
pop
in
test
xchg
popf
sub
xor
cli
stc
fcomps
clc
mov
xchg
or
cltd
jl
pop
fwait
adcb
inc
int
and
je
test
mov
popa
mov
fsubrp
sbb
daa
mov
or
dec
xor
jno
je
imul
hlt
xor
dec
iret
lea
jmp
bound
dec
scas
jnp
cmp
or
pop
mov
cli
aam
ret
xor
adc
pop
clc
fildll
xor
xor
andl
outsl
cmpsl
fisubl
loope
mov
fwait
mov
das
pop
and
sbb
inc
mov
lea
mov
loop
fwait
mov
adc
cmp
dec
push
add
push
sub
and
orb
js
jmp
sbbb
cwtl
add
jne
pop
push
movaps
and
sbb
add
popf
pop
les
push
fs
mov
dec
jmp
lret
test
push
and
jnp
loope
adc
jne
pop
jbe
pop
mov
in
add
cmp
mov
dec
mov
dec
imul
xor
ss
in
push
test
xor
maxps
cli
cwtl
add
push
bnd
aam
push
add
add
aad
out
fucomip
ss
cmp
lea
out
add
mov
push
ljmp
pop
sbb
ja
or
push
inc
xor
mov
mov
aad
add
roll
pop
pop
repz
ficoml
cmpsl
setbe
dec
int3
imul
dec
add
dec
sahf
mov
les
mov
cmovs
mov
add
push
adc
cmc
mov
js
push
outsb
leave
stos
out
pushf
rcll
scas
cmp
popf
or
psubusb
adc
loop
jmp
dec
adc
gs
aam
add
fnsave
int3
insl
cmc
icebp
out
dec
pop
mov
test
jae
cwtl
mov
xchg
jp
mov
pop
stc
pop
ret
hlt
jecxz
imul
mov
xor
imul
lock
xor
mov
jne
hlt
jecxz
push
stos
push
push
xlat
pop
jecxz
add
lret
pop
sub
or
insb
adcb
xchg
jne
pop
or
xchg
nop
push
sarb
xchg
mov
mov
add
add
in
xchg
inc
sbb
ret
mov
out
orb
movsb
ficomps
sbb
jb
jg
and
jo
mov
push
cmpb
pop
jmp
adcb
mov
adc
into
xchg
mov
and
jne
pushf
imul
mov
adc
dec
outsl
xor
push
pop
fistpll
movb
adc
pop
imul
loop
aaa
sar
in
mov
popf
xchg
divl
roll
mov
jo
mov
test
add
test
orb
cmp
mov
mov
push
or
push
dec
mov
dec
inc
mov
jbe
lret
outsb
negb
xchg
xchg
sbb
add
out
add
mov
mov
lahf
cmp
sti
sar
or
sahf
pop
mov
push
cmp
xchg
dec
insl
test
fisubrs
pop
sub
jno
mov
jp
dec
rcrb
jp
sbb
cmp
das
xor
into
movsl
jle
inc
sub
adc
mov
sub
aad
mov
hlt
or
cmp
mov
jmp
or
or
sub
jle
dec
mov
cmp
push
cld
vshufps
jno
xor
into
cmp
sub
das
mov
leave
inc
cmpsb
in
sbb
test
popf
lcall
mov
mov
fcomps
xlat
or
cmp
movb
movsb
test
rcrb
movsl
mov
out
hlt
cmp
les
imul
pop
ret
leave
mov
xor
mov
jae
adc
es
add
xchg
ret
pop
lock
pushf
fildll
push
cs
lret
adc
pop
push
sub
mov
and
fistps
inc
jp
into
cld
rclb
loop
ja
xor
add
xchg
stc
sbb
inc
mov
in
aas
outsb
sbb
mov
bsf
sub
ret
add
jp
mov
mov
mov
ja
fwait
add
fcoms
sbb
int
cld
negb
sti
push
flds
pusha
cmc
shll
shll
xchg
push
je
cmp
paddd
movsl
test
cltd
loop
jecxz
je
mov
push
sub
and
and
pop
lcall
out
add
add
push
les
in
lahf
sti
ja
rcll
sar
add
out
add
mov
jb
sub
or
mov
xchg
mov
nop
mov
jmp
stos
mov
ljmp
and
inc
rorl
arpl
in
xchg
xchg
push
or
lea
fwait
gs
jle
push
stc
mov
clc
mov
mov
and
je
mov
jb
shl
jl
pop
bound
push
imul
inc
ljmp
xchg
or
sbbl
aaa
push
jae
and
xchg
stos
cmc
mov
imul
mov
and
fimuls
push
mov
cmpb
mov
add
js
adc
pop
lret
popa
stos
add
jns
jg
mov
rol
shrb
dec
aad
xchg
insl
addr16
cltd
jo
dec
es
pop
jp
cmp
inc
xchg
adc
data16
dec
mov
ds
fnstsw
or
push
inc
sub
mov
in
mov
push
and
sub
sub
lcall
cltd
jns
cmpsl
or
imul
aad
lcall
jecxz
and
pop
jmp
out
insl
jo
lret
sbb
dec
lret
iret
sbb
mov
sti
ret
and
cmp
repz
dec
jl
pop
xchg
or
fistpl
lcall
dec
jno
cmp
xor
add
pop
mov
adc
icebp
jg,pt
ror
lea
mov
and
pushf
arpl
xchg
stos
sarb
sbb
adc
out
pop
sub
cmp
sbb
loope
push
inc
adc
cwtl
inc
daa
inc
or
xchg
cmpl
push
loopne
lcall
add
out
add
push
push
out
sub
mov
lods
bound
jb
mov
leave
mov
mov
ret
pop
jp
hlt
iret
sub
or
xlat
xor
adc
iret
das
dec
out
inc
xor
insl
orb
movsl
or
and
mov
test
xchg
aas
pushf
cmp
mov
rcr
xor
jbe
push
popf
ret
add
pop
fisttpll
fmull
js
xchg
add
xchg
push
adc
pop
cmp
jns
xchg
mov
adc
inc
push
cmp
push
iret
ds
sbb
cmpsl
cs
push
mov
or
cwtl
mov
loop
int3
iret
cmc
lock
sbb
inc
mov
aas
clc
test
cmpsl
int3
xlat
mov
add
xor
fldt
lret
pop
dec
sub
test
and
or
test
xchg
aad
nop
add
mov
mov
adc
sahf
clc
xchg
pop
lret
sub
es
sahf
sub
mov
mov
adc
dec
and
iret
adc
shll
test
dec
inc
xor
and
pop
add
into
cmpsb
inc
xchg
or
mov
cmpsl
push
mov
dec
sti
enter
pop
repz
cmp
pop
movsl
or
adc
xchg
mov
lods
push
add
cmp
dec
aad
jbe
mov
js
sub
or
out
mov
add
pop
fdiv
and
xor
cwtl
test
aad
jo
sbb
dec
cmp
mov
xchg
dec
inc
mov
das
mov
and
push
popf
xchg
cmp
test
mov
or
push
inc
adc
mov
mov
sub
aad
in
fcomps
test
and
pop
dec
cs
jecxz
int
add
out
add
push
mov
xchg
adc
scas
imul
int3
push
adcb
xor
jbe
sbbl
lcall
pop
xor
jge
das
jg
and
shll
test
scas
pusha
es
fcoms
adc
test
or
cmp
push
int3
sbb
aam
in
ljmp
push
insl
push
fisubs
sbb
and
call
adc
mov
mov
dec
insb
fldcw
cli
pop
pop
or
cmp
stc
rolb
aaa
mov
out
mov
mov
xchg
sub
jo
nop
loope
addr16
aas
shr
cli
shl
aad
dec
mov
add
jp
daa
inc
mov
hlt
cmpsb
mov
leave
xor
nop
adc
ret
push
ds
add
enter
sbb
adc
xchg
sbb
fidivl
lcall
pusha
adc
lds
pop
pop
andl
leave
sbb
xor
ja
push
mov
xor
dec
sti
lds
mov
in
in
mov
cmp
sub
cltd
dec
jns
leave
lds
loop
mov
sub
dec
fisttpl
fidivrl
test
jbe
jg
and
sub
test
push
inc
pusha
mov
xor
ret
jp
pop
and
mov
inc
aas
hlt
imul
pop
popf
jle
push
je
aaa
inc
pop
xrelease
sbb
xchg
pop
mov
jbe
and
cs
jge
rcrl
pushf
test
mov
or
cmp
jmp
xchg
scas
or
ficompl
xchg
pop
out
push
push
insl
mov
outsl
mov
jmp
push
fcmovu
in
push
jge
out
add
add
add
fs
xlat
cmp
and
sbb
mov
dec
shrb
mov
cmp
pop
and
pop
push
outsb
pop
mov
ret
add
icebp
shlb
cmp
sub
lea
fwait
lea
mov
lea
cmp
mov
jge
push
mov
rcr
inc
mov
stc
inc
cmpsl
iret
jmp
push
sbb
add
pop
clc
cmp
loop
scas
loope
and
imulb
fwait
and
sbb
scas
clc
jp
cmp
mov
adc
xor
fnstsw
sub
inc
pop
in
loope
packsswb
fs
and
jne
mov
add
jge
mov
jbe
adc
pusha
clc
sbb
cs
mov
mov
inc
pop
in
mov
jb
push
adc
or
lahf
pusha
mov
call
xchg
aaa
or
add
jge
push
and
icebp
mov
imul
rolb
or
pop
cmp
xor
outsb
adc
xchg
cmp
mov
sbb
mov
xor
cmpsb
repz
test
or
mov
inc
jb
addr16
shr
xor
shll
icebp
in
push
inc
pushf
mov
mov
xchg
test
jb
inc
negl
dec
stc
aad
or
mov
pusha
adc
das
lods
sub
fs
pop
mov
int3
adc
or
enter
lcall
mov
pop
aas
popa
repz
sbb
lock
inc
xor
and
mov
xchg
aas
cmp
loope
inc
movsb
dec
fstpl
out
mov
subb
mov
pop
adc
rclb
ds
xchg
enter
inc
scas
or
xchg
add
cmp
push
and
push
add
sbb
inc
jecxz
mov
mov
sub
fwait
call
add
loopne
mov
rorl
xchg
ret
dec
mov
ret
or
add
xor
push
pop
or
cmp
in
sarl
out
mov
out
lods
mov
jl
and
mov
mov
add
lea
inc
clc
jl
leave
xchg
and
xchg
popf
stc
jg
fldcw
aaa
inc
cs
xchg
fs
nop
mov
xor
jg
in
mov
pop
jne
sarl
pop
lods
into
or
mov
pop
cmp
lahf
cld
sub
jl
pop
loopne
dec
pop
jg
outsl
jl
cwtl
lret
and
jns
dec
insl
inc
ss
cmpsl
xor
pop
sti
mov
mov
push
subb
das
repz
adc
and
lods
lock
imul
popa
jae
lods
sub
lcall
test
stos
negw
nop
xor
xchg
sbb
loop
in
push
xor
lret
mov
gs
dec
int3
mov
sbb
dec
cmp
lods
sbb
push
sbb
imull
pop
push
mov
dec
mov
addr16
fbstp
imul
in
sub
fwait
test
aam
mov
out
jo
into
jb
dec
xor
test
pop
or
xor
in
mov
inc
inc
aad
mov
or
or
push
ret
loopne
mov
repnz
mov
mov
add
imul
mov
push
out
in
lock
xchg
in
fldenv
jl
fs
popl
ret
fucomp
cwtl
stos
fmul
aam
dec
mov
lcall
dec
mov
push
js
cmp
scas
jp
pop
jae
out
fldl
inc
xchg
xchg
rorl
mov
mov
icebp
and
jp
sub
add
add
add
std
dec
repnz
mov
out
xchg
mov
test
sub
fwait
cmp
ficoml
xor
xor
dec
inc
xlat
aad
mov
push
fdivrs
into
jmp
adc
into
adc
test
jnp
jecxz
imul
inc
divb
addr16
pop
mov
xor
push
shlb
sub
adc
jne
mov
add
popa
or
mov
sbb
jbe
icebp
xchg
addl
xlat
icebp
push
cmc
nop
cltd
adc
ret
cld
adc
repnz
add
sub
loop
sahf
add
mov
sahf
jg
fs
mov
iret
xchg
sbb
xor
imul
mov
inc
mov
out
adc
adc
mov
data16
mov
mov
rol
cmp
inc
icebp
sub
popf
repnz
sahf
stos
adc
inc
dec
cmp
cwtl
push
push
ss
jmp
mov
fadd
popa
sbb
jecxz
ja
xor
pop
dec
jo
pop
in
dec
sahf
xchg
ljmp
rcr
mov
pop
xor
int3
inc
cld
xor
push
out
mov
cmp
push
lret
inc
inc
outsb
rorl
adc
push
cmc
ret
ja
mov
and
fstpt
mov
xchg
mov
jnp
dec
and
add
mov
pushf
test
iret
lods
jno
aas
dec
inc
rol
cli
js
out
dec
jg
sbbl
inc
add
cmp
push
sub
cmp
sub
mov
cltd
xlat
pop
adc
jae
xchg
outsl
jl
addl
xor
and
ds
adc
mov
hlt
js
cmp
adc
repz
das
cli
fists
dec
es
pop
scas
push
add
add
add
pop
and
loopne
sbb
sub
sbb
cmpsb
fildl
andl
ljmp
xchg
popf
inc
jle
and
out
dec
cmp
lock
imul
jge
dec
mov
jge
daa
dec
xchg
repnz
into
or
and
xchg
int3
push
fnstcw
in
jge
aam
dec
pop
outsl
mov
icebp
inc
pop
push
add
sarl
jne
sub
inc
cmp
mov
sub
ret
mov
cli
sub
sub
push
xor
std
mov
jge
mov
cwtl
inc
sub
mov
inc
cli
sbb
in
jg
scas
mov
sbb
xor
push
xchg
insb
ret
fucomip
gs
repnz
lret
aas
adcl
std
retw
jae
jo
cmp
mov
insb
cmp
pop
adc
sub
mov
rcrl
cli
mov
je
push
test
loop
jecxz
inc
or
pop
cmovg
adc
call
loop
mov
aaa
cmp
test
mov
ja
push
push
je
add
mov
daa
lods
cltd
xor
arpl
cmpl
xlat
sub
xchg
jns
fwait
push
daa
arpl
fmuls
in
pop
adc
jle
iret
mov
insb
mov
lea
out
mov
inc
and
mov
mov
test
or
jle
cmp
je
pop
add
mov
jmp
fsubp
xchg
leave
sbb
jecxz
mov
iret
lret
arpl
jecxz
sbb
aaa
in
push
sub
mov
mov
aam
adc
add
xor
add
inc
add
xor
or
inc
add
xor
adc
inc
add
xor
sbb
inc
add
dec
pop
pop
dec
inc
xor
push
push
inc
cmp
pop
ss
pop
add
inc
pop
inc
pop
push
dec
inc
pop
cmp
dec
add
cmp
xor
aaa
inc
inc
pop
xor
pop
push
push
inc
push
cmp
push
push
inc
xor
xor
add
cmp
dec
cmp
pop
dec
xor
add
xor
pop
inc
dec
pop
pop
xor
pop
inc
xor
inc
dec
cmp
inc
cmp
ss
dec
add
xor
dec
xor
push
add
aaa
pop
push
dec
dec
cmp
inc
xor
add
pop
add
dec
add
xor
pop
add
add
push
add
dec
add
add
inc
add
add
xor
pop
add
xor
dec
add
push
add
add
cmp
push
add
push
add
add
add
add
add
dec
add
push
add
add
add
add
add
dec
add
add
pop
add
add
push
add
add
pop
add
xor
xor
push
add
add
add
add
inc
add
xor
cmp
add
add
inc
add
inc
add
lock
add
inc
add
lock
add
inc
add
lock
add
inc
add
lock
add
inc
add
lock
add
lcall
add
add
add
add
add
add
add
inc
add
nop
inc
add
fdivrl
add
add
jb
push
imul
aas
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
imul
