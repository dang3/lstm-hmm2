push
mov
sub
mov
jmp
incl
shlb
fs
cmc
jle
jle
cwtl
jg
jle
xlat
cmp
ror
pop
add
bsf
rdpmc
xadd
adc
mov
push
out
mov
es
lods
fiadds
data16
outsl
or
pushf
js
inc
stos
push
sub
mov
stos
push
roll
jmp
mov
dec
out
inc
call
mov
and
jnp
ret
xchg
and
jmp
ret
lock
and
add
adc
xor
or
fisttpll
ds
or
fst
or
pop
fstps
jno
inc
dec
aaa
adc
sarl
dec
call
mov
mov
jns
jge
out
iret
xor
fsubrs
stos
test
jmp
lods
subl
pusha
lret
cmp
faddl
pop
pop
push
shl
and
mov
imul
je
test
add
fstpl
or
data16
and
xor
out
xchg
push
call
jp
sahf
icebp
adc
mov
add
stos
popf
push
and
jne
mov
dec
xchg
or
push
imul
in
cmp
add
adc
push
sub
mov
cltd
mov
fwait
pop
jb
repnz
clc
pusha
in
jns
lods
or
or
mov
stos
sbb
imul
xor
arpl
movb
cwtl
sub
out
dec
push
dec
sub
adc
xlat
mov
mov
mov
movl
cmp
jne
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
push
pushl
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
jmp
out
sub
xor
imul
and
adc
cwtl
jg
jle
jg
jle
ljmp
bound
pop
leave
xor
dec
subl
loope
fcmove
push
xor
mov
insb
xchg
pop
and
adc
outsb
sbb
push
ljmp
or
mov
push
push
fs
cmp
insb
cmp
orl
iret
imul
std
xor
xchg
cmp
cmp
inc
or
test
lock
popf
mov
add
cmp
cmp
push
sub
inc
xchg
inc
add
jmp
std
pop
leave
stc
cltd
jns
cltd
push
pop
leave
int
mov
xchg
or
aas
lea
inc
cld
dec
xchg
nop
jge
or
lret
xlat
cltd
addb
out
adc
xor
outsl
jns
adc
inc
repnz
scas
ss
xchg
cli
iret
jno
add
sbbb
fisubl
sub
out
test
out
enter
hlt
ja
fistpl
les
fldl
sbb
test
push
sahf
dec
cs
xor
adc
out
mov
push
mov
sbb
jns
outsl
nop
mov
mov
mov
je
int3
call
xchg
mov
add
sbb
mov
cmp
insb
negb
fcoml
out
push
fsub
jb
pop
jae
insl
popf
and
popa
jle
pop
ret
mov
xchg
xchg
vmovaps
xor
cmp
sti
lret
daa
inc
mov
sub
mov
lahf
jns
push
sbb
leave
lods
mov
sub
ficompl
mov
adcl
xor
movzwl
or
mov
jmp
adc
insl
xchg
jo
or
or
jle
jg
jle
jne
pop
loopne
mov
sub
xchg
int
push
fucomi
aaa
mov
test
mov
mov
roll
imulb
sub
mov
cmp
push
pop
and
cmc
dec
pop
js
out
nop
arpl
outsb
xlat
cmc
outsl
rorl
xchg
mov
or
push
xchg
sbb
sahf
xor
outsb
cmp
fidivrs
lret
sbb
rorl
xor
pop
cmp
sub
lcall
lret
or
test
fidivl
cmpb
lahf
push
orb
ret
imul
jmp
xchg
testb
daa
add
in
mov
fidivrl
jbe
jno
test
dec
cmp
inc
fwait
outsl
push
or
mov
fsubrl
cli
adcl
xor
xchg
cmp
xlat
push
mov
arpl
mov
xor
js
pop
inc
js
inc
pop
mov
xchg
dec
sub
mov
shlb
stos
popa
dec
fcompl
push
sbb
lods
xchg
adc
popa
xor
stos
xchg
lock
lock
idiv
cmp
out
je
mov
sbb
enter
add
pop
addb
iret
jnp
imul
ret
rcl
push
mov
fiadds
leave
xchg
sub
fcomi
xor
repz
add
aad
jns
xchg
ds
jo
jge
out
sbb
sbb
add
cltd
xor
mov
fs
jle
sbbl
mov
push
into
jns
sbb
and
xchg
call
notl
xor
imul
jmp
push
and
pop
xor
jno
cmpsl
cmp
sbb
subb
cwtl
jg
jle
adc
stc
dec
outsb
arpl
mov
mov
xchg
sbb
mov
sbb
xor
adc
lock
lock
cli
add
enter
sub
jl
inc
xor
leave
rclb
mov
pop
mov
or
xor
cmc
data16
xchg
sahf
jb
mov
cli
mov
in
loope
and
subb
xor
or
or
dec
in
mov
incl
mov
push
xchg
fistl
push
dec
or
pop
pop
loop
mov
jp
adc
loopne
xchg
or
jae
xchg
push
cmpsl
cs
sbb
dec
xchg
sti
movnti
cmp
pop
add
jge
mov
mov
xchg
sbb
sarb
jnp
pop
std
mov
xor
lsl
xor
popa
dec
xor
pushf
pop
inc
sbb
sub
jnp
sbb
stos
hlt
adc
dec
sbb
cmp
iret
xor
add
add
cmc
push
sub
mov
aaa
cmp
notb
mov
pop
jns
adc
repz
pusha
push
call
and
jmp
mov
pop
js
bound
cltd
mov
int
push
and
jbe
icebp
push
xor
gs
mov
add
inc
or
pop
dec
pop
lods
xchg
or
mov
xchg
int
or
add
div
es
cltd
jmp
stos
mov
add
movl
movzwl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
sbb
not
and
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
sbb
mov
push
andl
xor
or
inc
mov
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jb
mov
movzwl
mov
mov
mov
movl
movl
mov
mov
lea
mov
mov
mov
lea
mov
mov
movl
mov
mov
xor
xor
xor
add
add
div
mov
cmp
je
movl
jmp
movl
popa
movsl
ja
and
xchg
js
jle
jg
jle
push
cld
outsl
fisttpl
push
dec
je
mov
sbb
cmp
repz
mov
fisubs
adc
call
sub
and
out
mov
mov
jle
xchg
iret
stc
std
in
xor
bound
mov
cmp
test
jno
xor
mov
pop
pusha
mov
leave
push
cmp
insb
bound
cltd
outsl
enter
lahf
sub
pop
push
imul
int3
jns
jge
add
and
mov
movsb
pop
xor
ror
jl,pt
push
cwtl
cltd
int3
push
sub
dec
sbb
fsub
cmp
xor
jle
jmp
inc
mov
sub
mov
dec
jno
xor
je
cmp
push
sub
fwait
repz
sub
sbbb
mov
jmp
adc
sahf
lds
cmpsb
pusha
lea
add
jmp
pop
loop
xor
xor
pop
or
into
xchg
loop
push
xchg
mov
ret
fldl
ror
movsb
fsubs
cs
std
scas
push
jbe
push
xchg
cmp
lods
push
shll
imulb
lock
add
faddl
fcmovb
les
dec
add
or
lds
jge
fbld
xchg
fistpl
and
fs
pop
jns
mov
dec
push
pop
push
loopne
sbb
es
adc
xchg
and
sbb
das
xchg
test
push
orl
and
xchg
hlt
mov
mov
mov
imul
mov
mov
cmp
je
mov
orl
jmp
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
jmp
das
adc
inc
icebp
inc
mov
test
and
mov
push
jle
cwtl
jg
jle
xor
sahf
inc
out
aas
repz
int3
dec
pop
jecxz
fisubrl
lret
jge
or
pop
push
or
sarb
and
mov
sbb
in
cmpsb
cmp
lods
ja
jb
lahf
mov
or
push
popf
into
test
push
test
push
push
inc
jge
xor
dec
or
js
jmp
cli
arpl
arpl
and
sbb
push
mov
ja
and
lods
test
and
and
inc
cmp
inc
sub
sub
fiadds
daa
frstor
mul
pop
call
adc
xchg
inc
mov
les
dec
xchg
stos
outsb
pop
push
and
or
sbb
cli
push
sbb
pop
imul
add
sbb
shlb
sbb
insb
jecxz
xor
in
ljmp
or
sub
jecxz
xchg
test
icebp
sbb
lods
pop
js
xor
loop
dec
push
je
mov
test
cmp
add
fs
jmp
in
sbb
daa
inc
xchg
pop
and
mov
test
test
cltd
mov
movsl
rcl
stc
inc
inc
adc
into
hlt
pop
rcr
js
inc
mov
cmpsl
cwtl
add
jecxz
push
fildl
movsl
loopne
or
fadd
daa
pop
mov
out
ds
cmp
sbb
cmp
push
fstl
pop
lret
into
into
shlb
mov
xor
je
xor
push
add
add
inc
cld
mov
xor
mov
mov
add
cmp
je
mov
xor
jmp
mov
lcall
xchg
or
jle
jg
jle
scas
lds
jbe
fwait
pop
inc
cli
adc
mov
in
fsubs
lcall
cmp
out
les
push
cli
mov
or
cmc
cmp
add
add
aad
pop
gs
mov
cmpsl
insl
or
mov
scas
popf
cmpsl
clc
in
fildl
jge
das
mov
cmc
fbld
sbb
jl
jmp
xchg
xor
jns
pop
xor
push
icebp
scas
inc
sbb
lcall
pop
sbbb
mov
cs
out
add
adc
outsl
push
cmp
sub
push
adc
aad
cmp
ret
imul
sbb
xchg
cli
popa
cmpsl
insl
xlat
cmp
lods
jne
or
dec
lods
inc
jne
xlat
jl,pt
hlt
pop
roll
or
jle
xlat
xchg
das
add
or
aaa
fisubrl
push
xor
negb
xchg
push
and
lret
cmp
adc
push
out
mov
cmp
out
cwtl
outsb
and
mov
outsb
push
and
sub
xor
mov
movsl
insb
xor
scas
into
movsb
add
scas
lds
or
mov
sbb
dec
adc
jle
inc
pop
repz
mov
mov
shll
bound
sbb
outsb
push
shrl
cmp
test
hlt
mov
lret
inc
push
pop
adc
jno
ljmp
mov
mov
mov
mov
xor
mov
add
movzwl
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmpl
jne
mov
xor
add
test
jne
xorl
jmp
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
jmp
outsb
jecxz
mov
jne
add
imul
jo
add
jle
aam
test
adc
aas
loop
push
xchg
and
cmp
xor
push
sbb
fcmove
jp
push
mov
cmp
xchg
dec
lock
fcoml
outsl
out
xor
jp
push
and
lea
and
sbb
mov
push
insb
jmp
dec
lods
push
xchg
loop
loopne
cmpsb
les
dec
out
inc
arpl
bound
jl
ja
jge
xor
jecxz
inc
out
mov
fstpl
xchg
jno
xchg
popa
inc
mov
xor
push
dec
out
jo
or
push
mov
sbb
notl
and
inc
ret
xchg
cmpsb
inc
push
xchg
gs
sbb
cmpsb
fldl
imul
sbb
pop
xchg
mov
mov
nop
jb
mov
loop
aam
out
dec
popa
fidivrs
mov
out
jp
adc
test
and
cmp
shlb
mov
or
cmp
cmp
sbb
lods
cmp
popa
push
and
cmc
or
xor
pushl
xchg
pop
dec
fmull
clc
dec
and
push
jnp
mov
and
out
cwtl
dec
out
push
add
jmp
mov
or
jmp
xchg
mov
cmp
push
dec
mov
sbb
xchg
out
or
iret
jns
jnp
add
xchg
ret
in
lahf
clc
std
sbb
fdivl
sbb
sbb
out
pop
push
dec
mov
imul
sub
movsb
push
loopne
ret
cmpb
cld
sbb
sub
mov
push
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
adc
jmp
je,pt
cltd
mov
out
sub
mov
xchg
mov
jle
push
jg
jle
inc
out
inc
jp
ljmp
into
add
ljmp
lret
inc
sub
push
pop
arpl
data16
pushf
fcmovnb
jo
int
jmp
orl
push
or
int
stos
or
jnp
hlt
and
test
pop
out
pop
incl
leave
push
adc
sti
xor
xor
dec
and
aaa
mov
push
lock
ret
adc
rcll
loope
sub
and
mov
int3
sub
xor
and
enter
mov
fsubs
addl
pop
stos
mov
lret
jl
ret
bound
jge
mov
roll
sbb
data16
sbb
aas
js
mov
jl
imul
mov
adc
and
mov
cmp
js
or
stos
dec
mul
loopne
jge
scas
aaa
inc
imul
or
inc
jae
xchg
sub
shlb
add
pop
gs
enter
xor
mov
and
mov
in
repz
fmuls
xor
push
outsb
andl
mov
pop
sarl
adcb
jmp
lcall
mov
mov
xor
add
outsb
cmpsl
push
cltd
dec
mov
and
cld
mov
push
pop
sbb
scas
pop
in
dec
jbe
mov
fnstenv
iret
icebp
adcb
push
xcrypt-cfb
cmpsl
out
mov
cmp
test
pop
mov
fcoms
fcomp
insb
pop
fstpt
test
xor
test
sub
xchg
sub
mov
pushf
repnz
daa
push
fisttps
sub
and
cmp
add
mov
movzwl
xor
mov
mov
xor
movl
mov
addl
push
mov
xor
or
and
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
jmp
lock
xchg
aaa
insl
fs
lods
or
push
jg
jle
xchg
scas
xchg
arpl
xlat
fnstcw
dec
dec
dec
mov
or
mov
aaa
out
add
jno
jle
pop
test
cmp
sub
aas
lea
jnp
jmp
jae
or
es
gs
in
push
mov
sub
push
cmp
stos
add
das
fdivr
push
cmpsb
or
stc
mov
fsts
push
xor
xor
adc
and
adc
mov
enter
jbe
std
and
je
out
pop
sbb
adc
inc
inc
adc
cmpsl
inc
hlt
inc
repnz
outsb
popf
leave
pop
sub
inc
sub
sti
adc
out
mov
js
int3
gs
ljmp
stos
sub
int
xchg
adc
imul
loope
imul
sbb
pop
out
mov
shrb
push
hlt
popw
jge,pt
ljmp
xlat
push
add
mov
pop
loop
xchg
ja
fdivrl
jmp
mov
repz
sbb
ja
adc
cmp
shl
nop
mov
or
imul
jle
dec
mov
popa
in
add
aas
nop
roll
imul
jns
loopne
cs
push
into
mov
enter
pop
mov
lea
daa
lods
enter
jnp
push
xchg
and
mov
push
sub
dec
cmp
leave
rcll
nop
popa
mov
mov
frstor
faddl
and
jns
stos
xor
dec
cld
pop
imul
andl
mov
out
js
push
sbb
xor
scas
aas
mov
mov
inc
push
dec
or
push
mov
add
cmp
je
mov
mov
xor
mov
sub
jmp
insb
cmp
arpl
push
xor
push
add
adc
jg
jle
jo
adc
push
xor
ss
ja
loop
sahf
xor
xor
stos
cmp
cmp
mov
xorl
lret
imul
cli
push
lock
or
pop
movl
loop
stos
shll
mov
xor
repnz
fnsave
push
movsb
imul
sbb
rorb
dec
adc
int
push
lret
pop
data16
cmp
movsb
add
lahf
and
gs
mov
mov
sahf
inc
add
and
ss
adc
cmpsl
cmp
fs
adc
out
adc
cmp
pop
mov
mov
ret
pusha
xchg
push
stos
jae
das
ror
cs
insb
dec
xchg
test
or
sub
clc
pushf
add
jecxz
js
push
imul
xchg
add
adc
or
xor
js
jg
fs
insb
mov
sub
jmp
inc
enter
into
jb
sub
pop
rcll
enter
pop
addr16
push
pop
dec
test
cs
subl
int3
stos
ret
test
out
mov
mov
xor
cwtl
pop
add
pushf
sbb
push
add
cmpsl
pop
divl
aaa
sbb
adc
pop
iret
or
daa
mov
cmc
int3
xchg
jno
lods
mov
add
push
pop
add
imul
movsb
push
mov
adc
or
mov
ja
inc
add
roll
mov
sarb
cmp
mov
notb
xor
add
jge
xor
add
cmp
ja
push
jmp
mov
mov
mov
jmp
lock
xor
jo
repnz
pop
mov
cli
push
jg
jle
or
ret
ja
loop
xchg
jno
xlat
aam
mov
xchg
into
repz
push
and
push
inc
add
cmpsb
and
mov
pop
push
rcl
dec
inc
pop
dec
mov
and
aaa
dec
fcoml
mov
push
insb
push
add
sahf
push
jo
mulb
cmp
scas
into
aas
push
test
sbb
mov
out
sub
pusha
lods
repz
ret
push
mov
mov
mov
out
push
pop
mov
pusha
pop
inc
push
xchg
mov
mov
iret
inc
repnz
mov
out
mov
rorb
test
mov
sbb
loopne
test
mov
sbb
push
aaa
xchg
and
insb
pop
jae
vcvtdq2ps
mov
add
and
cltd
into
outsb
push
fdivrl
lcall
xchg
jbe
lods
pop
add
push
les
lea
pop
shrl
push
mov
cwtl
inc
pop
test
aad
sbb
push
loopne
cs
add
mov
mov
push
push
mov
mov
xchg
lret
aad
cmpsb
js
loopne
mulb
push
pop
insl
pop
xor
mov
mov
test
adc
aad
test
daa
mov
mov
xor
mov
cmp
mov
test
imul
jno
and
push
pop
mov
addr16
out
cmp
aaa
push
lods
mov
pop
jg
aad
aaa
sahf
jbe
insl
jns
push
lods
xchg
jg
mov
pop
adc
scas
shl
and
mov
xchg
adc
les
insb
mov
xchg
cmpsl
lea
data16
push
stos
push
cltd
xchg
sbb
cwtl
les
stc
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
jmp
outsb
add
and
add
mov
sbb
stos
dec
or
push
jg
jle
lds
adc
dec
mov
mov
popf
fidivrs
push
inc
lds
push
jl
and
pusha
inc
in
arpl
imul
push
into
push
out
lcall
and
adc
test
in
mov
pop
stc
adc
xchg
push
cmp
jnp
and
adc
or
cmpsl
jle
add
mov
popl
mov
inc
pop
or
lds
addb
rcrl
push
push
dec
xor
in
cli
dec
cltd
inc
popf
and
mov
mov
cld
hlt
dec
push
popa
lods
pusha
insb
sub
mov
icebp
sti
les
scas
adc
cmpsb
cmp
je
mov
add
sbb
cs
and
sub
test
scas
mov
outsl
xorb
sub
pop
aam
add
movsl
fnsave
js
sub
adc
stos
push
dec
inc
inc
lea
cmp
mov
mov
jno
movsl
fldt
mov
out
xor
inc
mov
sbb
xchg
cmpsl
out
xchg
in
push
bound
loope
call
das
xor
mov
lock
lock
sahf
andl
xor
test
add
rcrb
mov
popa
or
xor
out
in
fcmovu
dec
add
lds
std
sarl
xchg
dec
pop
sbb
test
jmp
sbb
popf
aad
jnp
inc
adc
test
jb
je
popf
insl
movsl
inc
fs
aaa
ret
ja
test
imul
pop
jne
and
fisubl
roll
push
gs
movsl
pop
add
jbe
pop
mov
pop
pop
leave
ret
push
mov
sub
mov
mov
xor
mov
add
or
movzwl
mov
xor
mov
mov
movb
sub
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
add
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
mov
add
mov
movl
xor
sub
orl
mov
not
jmp
loop
fcoms
popf
mov
movsl
cmpsl
sbb
or
scas
jg
jle
dec
sbb
xchg
sahf
lcall
shll
sarb
cmpl
inc
sbb
xchg
sarb
adcb
mov
mov
mov
repz
xor
jmp
daa
and
pusha
mulb
mov
ja
mov
mov
inc
add
push
xchg
mov
jmp
pop
xchg
push
shlb
pop
sti
mov
cmp
fwait
sub
daa
bound
loopne
dec
jmp
xor
add
shl
cmp
inc
iret
cmp
ret
push
fimull
push
stc
push
push
loopne
lods
inc
mov
inc
inc
rorb
lahf
adc
fistl
sub
cmpl
mov
mov
cmp
sub
ret
ficoms
divl
out
dec
jno
xor
or
push
mov
mov
xor
rolb
call
push
out
sbb
aad
cmc
jae
out
fnstenv
xor
xchg
lret
dec
dec
xchg
dec
jp
fs
outsb
inc
push
and
mul
sub
lods
je
or
push
dec
ficoml
xchg
fimull
out
xchg
jl
add
or
data16
adc
mov
cmp
mov
add
pop
jecxz
or
xchg
mov
sub
into
cs
lock
repnz
cmp
xor
iret
in
mov
cmpl
mov
leave
jle
sbb
movl
movl
or
mov
movzwl
adc
mov
subl
push
xor
andl
jmp
inc
jp
cs
mov
jno
pop
mov
mov
jle
jg
jle
nop
cmc
push
push
push
cli
leave
adc
nop
add
mov
jg
mov
cmpsb
jp
call
pop
pop
out
cltd
lods
mov
dec
pop
flds
adc
cmp
mov
sbb
xchg
sar
adc
mov
jg
mov
mov
dec
test
test
popf
push
cltd
fwait
imul
xchg
mov
punpckhwd
test
or
and
cmpsl
xor
clc
push
ret
xor
popf
pop
mov
sub
pusha
mov
jb
inc
jnp
mov
arpl
ss
sub
ficoms
aam
bound
imul
or
mov
pop
mov
daa
sbb
mov
push
fcomps
sbb
jb
xor
xor
mov
sbb
cmp
sbb
push
inc
inc
popf
pop
sub
mov
loopne
notb
enter
push
xchg
mov
dec
or
ret
dec
jecxz
bound
push
xor
movsl
fdivp
adc
ficomps
std
fs
jl
daa
sahf
lods
jb
ror
daa
pop
mov
int
lea
dec
xchg
negb
sti
jge
insb
xor
fisttpl
cs
cmpsl
cmc
xchg
pop
mov
sar
adc
sub
test
xor
xchg
jmp
jne
add
adc
xchg
cmp
mov
push
in
lds
adc
inc
push
pop
dec
lcall
sahf
outsl
shll
xor
negl
add
jmp
mov
mov
inc
cmp
jb
mov
mov
jmp
mov
andl
popf
push
xchg
mov
adc
jle
jg
jle
sub
dec
lock
pop
or
jge
pop
add
jle
pop
add
outsl
pmulhuw
push
in
mov
lcall
xchg
cwtl
mov
push
je
and
das
or
xor
jg
test
imul
insb
mov
fs
leave
int3
push
cmp
stc
clc
ret
inc
add
js
fsubrl
or
test
mov
sbb
mov
fidivrl
pop
sbb
icebp
int3
lret
aam
cmp
and
insb
xchg
mov
cwtl
andl
mov
push
addr16
popa
test
out
dec
jne
movsb
xlat
fwait
jge
leave
pop
dec
push
pop
mov
aad
and
mov
cmp
mov
pop
fcomi
inc
push
mov
add
daa
pusha
inc
je
add
lods
jo
mov
jmp
sub
jle
and
sarb
int3
lea
imull
in
scas
fdiv
fs
sbb
cmpl
and
mov
pop
int3
sub
mov
mov
xchg
add
aas
fsubs
fistpll
xor
clc
rclb
cwtl
dec
vpcomw
sub
mov
pop
enter
xchg
push
dec
mov
fwait
jecxz
ss
fs
loopne
aaa
pushf
jns
sarl
aaa
test
out
add
loopne
sbb
inc
loope
lods
mov
inc
rclb
and
jno
inc
and
js
cmpsl
nop
lods
xor
add
cmp
je
push
push
mov
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
jmp
jo
add
mov
jg
lss
jle
out
sbb
rolb
ljmp
fidivs
into
mov
jg
mov
sub
imul
mov
hlt
push
mov
call
ljmp
sub
push
arpl
xor
stc
xchg
insb
cli
push
jbe
mov
and
push
sub
popf
loop
enter
inc
jle
jno
jecxz
fucompp
jg
or
mov
adc
pop
outsb
fstps
je
xor
mov
sub
cmp
adc
adc
jle
and
and
mov
arpl
jb
add
rclb
dec
sbb
jne
xor
jbe
inc
enterw
fs
test
sti
loopne
mov
andb
aam
dec
xor
sub
mov
mov
imul
fsubl
rolb
add
pop
in
shl
inc
fwait
jno
xchg
jmp
or
inc
test
sub
cltd
pop
das
dec
push
cmp
dec
xchg
xchg
ret
sub
push
pop
in
out
leave
pushf
and
xchg
mov
and
dec
push
enter
inc
dec
push
pop
sub
jmp
hlt
push
mov
push
cmp
loop
inc
jl
pushf
push
jae
xchg
shrb
jmp
xchg
or
or
pop
aaa
pop
sub
fsubr
fiadds
jle
faddp
fsubr
push
je
dec
loopne
xor
inc
popa
test
sti
mov
test
or
clc
ror
hlt
les
cmp
xor
add
jmp
jl
mov
mov
jge
fldl
call
inc
loop
jle
scas
jg
jle
movsb
movsl
jo
mov
or
jl
movsl
cmpsb
subb
add
nop
add
xor
mov
fldcw
dec
in
add
leave
add
jp
and
idivb
add
arpl
inc
mov
imul
lock
lods
pop
popa
dec
mov
xor
sahf
movsl
pop
adc
push
lods
cltd
je
inc
and
sbb
lock
lcall
cwtl
inc
inc
scas
mov
lret
push
jo
in
and
rcll
push
mov
jns
cmp
xchg
and
sbb
push
mov
mov
stos
mov
incb
push
push
jno
mov
dec
ret
repz
jb
aas
push
or
daa
loop
xchg
mov
in
jb
fnsave
adc
aam
adc
push
xor
ret
pop
dec
adc
scas
push
mov
cld
sbb
inc
inc
inc
cmp
push
ror
fwait
test
cmpsb
pop
or
xchg
ret
pusha
ret
pop
adcb
push
xchg
xchg
dec
mov
pop
ljmp
scas
mov
lret
or
cmpsb
daa
aaa
xchg
gs
out
stos
or
sbb
mov
inc
inc
cmpb
xor
repz
scas
xor
fdivrl
scas
call
call
bound
xor
and
andb
mov
pop
dec
in
jae
mov
repz
xchg
dec
mov
stos
and
push
push
mov
ds
out
in
loope
jmp
and
mov
pop
les
add
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
jmp
lret
int3
push
push
mov
push
mov
adc
jle
scas
jg
jle
sbb
mov
mov
jo
es
pop
shll
mov
add
sbb
xchg
push
sti
jl
fstpl
mov
roll
lds
pop
lods
icebp
lods
or
mov
inc
scas
jle
aas
mov
xlat
or
js
pop
add
add
or
insl
mov
dec
pop
iret
jb
fcom
lcall
mov
sub
dec
sbbb
sarb
pushf
xorl
sub
std
adc
add
aas
jle
fs
add
push
jb
sub
sbb
cwtl
lods
xchg
push
push
std
mov
pop
or
cmp
push
loope
insb
cmpl
fcmovnb
out
aaa
or
inc
cmp
pop
jnp
negl
jbe
jbe
sahf
nop
out
mov
dec
daa
push
inc
std
cmpsl
in
lret
sbb
lahf
test
push
inc
xor
out
testl
push
enter
push
addr16
test
out
dec
mov
push
mov
clc
cmpsl
shr
adc
test
icebp
xchg
lds
sub
adc
xchg
jle
insl
mov
das
dec
cmp
es
pop
jo
jg
mov
mov
pop
enter
adc
test
jmp
hlt
xchg
shrb
shlb
or
call
pop
dec
jnp
sub
or
xor
call
push
pop
pushf
jae
mov
push
xchg
or
insl
dec
je
movl
jmp
scas
or
xor
mov
jp
cli
inc
push
jle
scas
jg
jle
ss
nop
rcll
bound
mov
pop
frstor
ret
xchg
imul
nop
cmp
imul
fists
mov
mov
inc
add
lret
and
cld
gs
push
lret
xor
mov
adc
and
es
jo
inc
adc
std
xchg
out
push
stc
adc
lods
lods
adc
imul
inc
push
and
test
sbb
push
jno
inc
iret
movsb
pop
adc
out
push
ja
cmc
mov
xchg
xchg
jp
aaa
cmc
sbb
jl
jmp
scas
outsl
jae
push
adc
lock
mov
mov
lods
dec
push
cmp
xchg
shr
pusha
fsubrs
mov
lcall
insl
and
sbb
add
lock
pop
dec
xor
cltd
push
xchg
lcall
icebp
loopne
and
fnsave
or
mov
ja
sbbb
add
fistl
dec
jge
rorl
bound
enter
in
frndint
arpl
int3
inc
mov
cs
push
out
test
mov
lods
sbb
fisttpl
enter
xor
cs
loop
cwtl
and
aad
push
push
mov
repnz
xchg
dec
dec
cmp
aaa
sbb
jmp
xchg
sbb
pop
sbb
clc
repz
add
in
mov
mov
scas
outsb
mov
dec
push
mov
xlat
out
mov
scas
push
mov
xor
jecxz
push
jbe
jbe
jl
inc
mov
mov
jae
scas
lea
mov
mov
addl
jmp
mov
inc
push
push
jb
andl
scas
jg
jle
cmpsl
pop
sub
or
push
aad
add
push
push
sbb
mov
add
xor
movsl
pop
cwtl
jecxz
mov
or
push
fcmove
cmp
daa
cmp
call
cmc
lea
xchg
cld
sub
add
fisttpll
or
mov
addl
mov
sub
jp
ss
push
dec
dec
inc
lds
inc
bound
dec
jo
lds
pop
mov
mov
and
dec
ljmp
xor
idivl
fsubs
push
loopne
xchg
aad
jnp
fnstsw
fwait
imul
or
mov
pop
insl
mov
pop
cmp
xchg
flds
mov
test
xchg
add
subl
repz
incl
pop
mov
push
repnz
push
addr16
sub
popf
in
mov
or
iret
jnp
and
push
fsubr
inc
mov
popa
inc
cld
sbb
jge
lods
mov
mov
dec
int
cld
sub
mov
add
add
iret
lds
pushf
arpl
repnz
mov
mov
stos
aad
inc
sbb
cmpsb
lret
dec
jmp
push
dec
mov
dec
out
arpl
jnp
aam
adc
scas
sub
lret
cmp
fwait
out
xchg
push
mov
ljmp
xor
add
imulb
iret
outsl
mov
add
ret
mov
pusha
pop
sahf
jbe
movsl
call
jmp
adc
mov
mov
xor
jmp
pop
sub
dec
insl
dec
imul
and
pushf
cmp
sbb
scas
jg
jle
push
test
cltd
add
das
into
testl
aad
pushf
mov
xchg
lds
xorl
pop
sbb
inc
add
push
mov
cmpb
out
push
ret
pushf
mov
pop
sbb
jns
fsub
fs
dec
xor
jb
jb
aas
xlat
lods
mov
sbb
xor
push
sub
add
mov
mov
push
cmp
push
or
and
mov
subb
in
sahf
adc
mov
fists
into
sarl
pop
xchg
adc
jno
repz
mov
data16
pop
jo
jns
lcall
add
decb
loop
cmpsb
fcomps
andl
repz
in
fisubrl
cmpsl
loop
outsl
jbe
add
and
test
idivl
cmpsb
paddd
jno
lret
and
and
mov
lcall
hlt
out
adc
jae
inc
fiadds
xor
push
lock
or
pop
jo
mov
dec
movsb
aas
fcomps
call
notb
cli
pusha
pushaw
mov
out
repnz
sbb
jne
test
or
repnz
dec
cmpsb
insl
xchg
push
push
and
pop
xor
mov
xor
inc
jne
jb
aad
outsl
jp
insl
dec
imul
inc
test
out
lock
xor
lock
mov
mov
out
lds
sbb
xchg
cmp
dec
mov
mov
sub
aad
dec
out
mov
sub
cld
repz
aaa
clc
mov
pop
into
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
push
movl
jmp
lcall
mov
ja
pop
cwtl
insl
cld
push
push
sbb
cltd
jg
jle
push
xchg
in
or
adc
outsb
mov
xlat
dec
stc
dec
xchg
dec
out
pop
inc
aaa
in
add
and
aas
xor
clc
xor
mov
sub
adc
nop
inc
inc
and
dec
dec
mov
clc
cmpl
and
xchg
call
dec
mov
out
cltd
popf
mov
fisttps
repz
jbe
lock
nop
jecxz
mov
lds
push
add
fstl
or
imul
in
pop
fstl
in
jle
aaa
dec
xor
mov
xchg
cltd
mov
push
dec
pop
jnp
jae
aam
lret
mov
push
in
imul
bnd
adc
mov
shl
pop
mov
insb
xchg
sub
or
adc
imul
mov
mov
lods
jne
push
jae
decb
sub
push
adc
rol
lods
addr16
mov
and
insb
dec
or
sbb
inc
xchg
xorb
inc
pop
ret
scas
fisttpl
data16
sub
fisttpl
push
push
mov
stc
xadd
popf
sub
xor
sub
sbb
scas
jb
mov
xchg
push
sub
jae
clc
std
xchg
std
fisubrl
ror
sub
incb
mov
xlat
add
and
mov
pop
repnz
mov
push
std
and
mull
lret
scas
pop
push
mov
in
sahf
push
into
fldt
jg
ror
ret
repz
pop
movl
mov
push
orl
mov
and
mov
orl
xor
addl
xor
mov
orl
add
add
subl
imul
mov
mov
cmp
jne
mov
mov
xorl
xor
andl
xor
xorl
jmp
jbe
cmpsl
adc
sahf
es
push
sbb
cltd
jg
jle
push
push
nop
mov
adc
not
dec
mov
loope
arpl
movsb
test
fisubs
inc
pop
mov
adc
sar
iret
mov
mov
out
and
or
int3
shl
xchg
sbbb
lcall
add
sarb
popa
pop
lods
inc
loopne
or
movsl
int
shll
jge
leave
jp
leave
add
mov
xorb
xchg
hlt
dec
pop
lret
cmp
sti
test
pop
sbb
jns
fsts
sbb
xchg
mov
lods
xchg
bound
or
inc
or
push
ja
int
outsb
arpl
mov
fildl
push
into
stc
aas
pop
imul
or
cmp
xor
pop
stos
jbe
mov
fs
bswap
jne
xchg
pusha
shlb
or
xchg
ret
push
jae,pt
or
idivb
test
gs
cld
icebp
jecxz
dec
mov
ds
xchg
loope
dec
mov
loop
xor
call
mov
mov
cli
ret
fidivl
inc
enter
imul
insb
mov
pop
push
es
cli
clc
adc
loope
in
jno
sbb
push
mov
mov
adc
jbe
xor
jb
fstpl
mov
das
add
push
cs
inc
sbb
adc
xchg
adc
dec
xchg
cmp
hlt
cli
cli
jnp
dec
fistl
or
fmull
add
lahf
dec
movsb
jns
pop
sbb
in
fdivs
mov
inc
data16
roll
imul
movl
jmp
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
movl
movl
mov
mov
mov
sbbl
xor
subl
add
jmp
fnstenv
loop
jb
jno
in
jne
stos
pushf
daa
jle
xchg
jl
jle
push
sbb
mov
movsl
pop
lds
sti
sbb
fldcw
ja
mov
out
and
dec
cltd
xor
mov
mov
mov
nop
std
cmp
add
sbb
popl
lcall
xchg
lret
and
and
xor
jbe
call
inc
in
mov
int
ret
and
push
mov
cmp
push
insb
adc
jmp
push
xorl
es
cmp
push
xchg
sub
dec
andl
inc
jg
add
arpl
ss
imul
ja
dec
push
es
pop
into
mov
test
aaa
xchg
pop
jmp
outsl
mov
inc
add
jp
cli
add
loop
sub
sub
jne
sti
dec
call
in
outsl
lods
mov
pcmpgtw
adc
lcall
loop
jg
sbb
leave
testb
and
and
push
pusha
insl
inc
cltd
test
mov
sub
mov
dec
push
sbbl
call
adc
mov
jmp
pop
fcmovu
aas
xchg
cli
scas
lods
jmp
cmc
adc
in
rclw
and
popf
call
sbb
or
roll
popf
test
or
dec
jmp
das
inc
mov
nop
inc
lret
int3
int
jne
pop
stc
sbb
push
jge
lods
popf
sbb
fdivs
sbb
inc
stos
and
mov
nop
add
addb
push
movsl
cmpsb
adc
adc
xor
xlat
add
mov
stos
mull
xchg
out
mov
mov
add
xchg
mul
mull
and
addl
loop
cs
mov
leave
lret
dec
pop
lea
fsub
inc
lcall
test
adc
cmpsl
ficomps
inc
lods
aam
cmpsl
push
xor
insl
mov
mov
aad
mov
notb
pop
dec
ljmp
fnsave
decb
sahf
repnz
dec
out
cli
into
loopne
cmpsl
jns
aad
testl
pop
cs
adc
and
xor
xlat
outsb
sub
fcomip
lods
pop
leave
mov
js
push
xchg
jb
cltd
sbb
int3
ret
mov
xor
fldt
out
add
add
add
shlb
adc
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
xor
xor
push
mov
addl
mov
sbbl
add
addl
mov
adc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
mov
xor
mov
jmp
xor
loope
loope
icebp
pop
mov
dec
fsubrl
or
jle
xchg
jl
jle
clc
jbe
arpl
xchg
stos
jae
xor
push
cmp
mov
fidivrs
xor
mov
in
hlt
sub
faddl
shll
inc
jmp
rcrl
adc
test
mov
adc
mov
and
jae
sbb
dec
sbbl
stc
mov
jns
mov
inc
fcompl
nop
rcrb
cltd
cwtl
push
pop
in
sti
mov
sub
jmp
mov
mov
sbb
xor
sbb
mov
mov
push
dec
cmpl
lcall
js
lods
xchg
mov
imul
jl
dec
out
push
roll
xchg
xchg
in
cmpsl
push
ret
int
cmpsb
jo
mov
push
cmc
cmc
enter
xchg
iret
lea
sub
int3
add
xor
icebp
cmpl
push
inc
in
lods
jle
insl
fildl
sub
mov
mov
fmull
and
xchg
xchg
dec
inc
stos
enter
data16
lret
roll
aaa
mov
int3
es
lods
aas
dec
lock
mov
test
clc
enter
test
bound
sbb
data16
notl
add
push
mov
pop
ljmp
inc
cltd
into
xor
push
ficoml
in
sbb
push
ror
mov
in
rorl
xchg
mov
int
jbe
mov
xchg
mov
lods
popa
dec
scas
inc
mov
push
stos
sbb
arpl
mov
movsl
in
mov
les
push
push
xchg
repz
fdivs
mov
inc
in
pusha
scas
or
xor
add
or
sbb
test
movsb
nop
mov
sbbb
test
xchg
adc
loope
scas
addr16
mov
sub
lret
dec
cmp
and
dec
add
push
icebp
xor
stos
xchg
popf
add
pop
gs
bswap
mov
push
add
xchg
xor
fscale
insl
jg
test
push
and
int3
pop
add
insb
insb
push
lock
lock
mov
cltd
clc
inc
mov
jecxz
mov
shll
add
lods
pushf
repz
sbb
icebp
mov
and
or
mov
pop
ret
push
mov
jmp
pop
iret
xchg
cmp
jno
das
insb
xchg
mov
out
jle
outsb
jg
jle
js
and
out
mov
push
test
adc
adc
mov
cld
jbe
jmp
stc
lock
xchg
mov
shlb
mov
inc
cmp
shl
push
cmp
jne
loopne
pop
pop
mov
mov
mov
dec
push
lock
cmp
push
rorl
sbb
out
push
push
mov
push
push
inc
mov
setle
lahf
test
movsb
sbb
adc
pop
arpl
int3
stos
iret
cmp
fxch
imul
or
push
mov
cmp
sbb
sbb
adc
fdiv
in
mov
out
mov
add
ja
pop
pop
out
push
jne
push
data16
fnstenv
and
jecxz
jp
outsb
fcomps
adc
loopne
cmp
movsb
adc
xchg
mov
mov
in
shll
xchg
std
and
dec
or
or
lcall
add
xor
inc
je
dec
outsb
dec
pop
jbe
xchg
jmp
insb
xchg
std
jge
sub
jno
mov
sub
shlb
ja
insl
xor
sbb
ja
stos
ss
lcall
xchg
loope
adc
lahf
dec
lds
add
gs
sbb
outsl
xchg
dec
sub
xchg
jge
adc
jl
or
inc
xlat
inc
mov
xchg
das
lret
mov
dec
cmp
adc
dec
addr16
pop
movsl
sub
inc
xchg
popf
dec
xor
jae
cltd
add
or
jecxz
daa
cmp
mov
pushl
mov
pop
movsb
sbb
adcl
aas
movsb
sub
fwait
pop
push
div
xor
sbb
pop
testb
cmp
sbb
loopne
dec
pop
mov
andl
xchg
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
mov
xor
mov
movl
mov
mov
sub
and
mov
movzwl
sub
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
jmp
inc
jo
xor
jo
jo
shlb
outsb
mov
mov
jle
jg
jle
test
jb
mov
bound
xlat
xor
sub
insb
inc
cmp
std
mov
or
xor
sarb
neg
nop
ret
mov
mov
rdpmc
aam
xlat
sub
test
aad
lret
clc
addr16
mov
testl
adc
scas
add
lods
dec
dec
mov
lret
mov
pop
out
sbb
jne
fsubr
mov
xor
cmp
in
nop
shll
pop
pop
adc
xor
fnstsw
bound
pusha
clc
xchg
mov
push
and
adc
xchg
lods
rcl
cmp
pushf
cli
into
pop
adc
cmpsl
cmp
dec
cmpsb
sbb
jp
in
lahf
dec
mov
or
mov
adc
mov
mov
jecxz
lret
sarl
pop
ja
iret
testb
or
hlt
mov
outsb
pop
inc
and
mov
mov
scas
pop
dec
add
repz
pop
int3
jne
lock
add
jmp
popa
pop
jg
jge
inc
fcompl
fwait
mov
scas
mov
pop
xor
push
pop
mov
mov
cmc
loope
sbb
mov
enter
xor
push
shlb
add
push
pop
sti
xchg
dec
and
dec
dec
mov
mov
xchg
fwait
dec
inc
ficoml
push
sbb
in
sti
mov
pop
movsb
imul
in
loop
mov
aad
rcrb
stos
and
or
out
pop
adc
jo
notl
pop
sub
dec
mov
dec
shr
and
and
push
push
jg
mov
xchg
push
out
pushf
sbb
sbb
jge
ficomps
adc
fldcw
mov
sub
push
or
xor
add
mov
mov
mov
mov
mov
mov
jmp
sarl
push
mov
icebp
mov
push
xorb
sub
jle
jg
jle
push
jg
in
mov
pop
into
into
sub
jns
or
push
and
dec
cmp
cli
mov
jle
cwtl
loope
inc
sub
dec
inc
adc
jecxz
ja
or
sub
mov
pop
sbb
scas
dec
dec
outsb
push
aaa
xchg
sbb
aam
addr16
adc
movsl
mov
mov
inc
sub
mov
outsb
and
jnp
jl
and
jb
cmp
push
imul
pop
cmpsl
leave
mov
mov
pop
iret
mov
std
adc
pop
fnstsw
push
xchg
cmc
jl
sbb
fldcw
dec
mov
dec
mov
sbb
pop
mov
test
cmp
or
stos
imul
enter
in
jecxz
sbb
sbb
imul
jge
xor
xlat
jb
ret
loop
adc
push
sarl
pusha
add
adc
xchg
jnp
adc
push
in
das
xor
mov
test
jbe
inc
fs
pop
or
cmp
push
sbb
je
sub
push
and
xchg
sub
adc
cwtl
jmp
sub
inc
fcomps
fsubrl
frstor
fstps
jae
sbb
incb
mov
mov
div
fisttps
out
hlt
cmp
sbb
jnp
out
lret
in
stos
loope
lds
xchg
imul
lahf
shrb
xchg
mov
or
jg
fwait
sbb
lds
adc
lcall
ljmp
lea
in
out
scas
xchg
mov
adc
push
cmp
xor
movsbl
rcrb
or
dec
ja
test
mov
aas
jp
and
add
aad
xlat
mov
inc
sbb
push
adc
and
adc
test
mov
jne
mov
xor
add
leave
ret
push
mov
sub
mov
mov
mov
mov
movl
movl
mov
sbb
mov
xorl
push
push
push
orl
mov
xor
mov
add
orl
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
or
jmp
jl
inc
movsb
jecxz
popa
xor
sbb
jle
push
jg
jle
insl
stos
popa
lods
repz
push
rclb
ss
or
xchg
xchg
mov
xchg
dec
dec
or
xchg
mov
jmp
or
ds
pop
sub
ds
jae
std
dec
out
xor
and
or
lock
mov
sarb
mov
mov
sbb
sbb
mov
xchg
mov
add
jae
shr
filds
sbb
lahf
mov
add
bnd
mov
mov
xlat
or
outsb
inc
cmc
es
lret
and
rcr
rcrl
sub
hlt
negl
cmpsb
xor
mov
xchg
sbb
push
cmp
push
sub
lods
movsb
push
adc
ds
cmp
out
cmp
cmp
push
dec
lds
add
das
loop
pop
xor
cwtl
fsubp
cld
xchg
cmp
cs
xchg
sbb
out
cltd
sbb
dec
xchg
xor
xor
pop
and
push
pop
shrb
decl
jecxz
add
jge
ret
xacquire
lahf
dec
mov
cld
loop
scas
mov
jnp
mov
std
xor
mov
in
test
mov
cmp
push
les
test
push
or
sarb
insl
aad
pop
test
dec
mulb
cld
xchg
xchg
sbb
cmp
movsb
call
push
push
add
mov
and
das
cmp
lock
call
sti
inc
repz
mov
and
mov
fidivl
int3
inc
out
pop
push
and
or
and
cmp
mov
jecxz
mov
push
int
xor
fsubl
pop
dec
and
addr16
out
mov
int3
xor
fucomi
inc
add
add
add
add
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
neg
movl
mov
or
movl
mov
andl
xor
add
mov
sbbl
movl
sub
movb
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
xor
add
mov
mov
sbbl
xor
sbbl
add
incl
push
xor
xor
xor
mov
subl
xor
orl
add
push
or
mov
orl
xor
notl
add
adcl
push
sbbl
lea
push
decl
pushl
subl
pushl
andl
call
test
je
lea
sbbl
push
movzbl
sbb
mov
jmp
xor
sbb
repnz
out
push
insb
or
jg
jle
int
inc
inc
sbb
sbb
insb
xchg
inc
sbb
sbb
mov
xor
push
pop
xor
leave
rcll
movb
ret
imul
and
lods
aaa
adcb
lret
jle
xor
push
stc
add
lods
mov
fcompl
adc
push
mov
stos
cld
scas
mov
shr
daa
call
pop
cmc
sbb
gs
mov
daa
push
out
pop
icebp
adc
add
push
inc
jecxz
outsb
in
adc
sbb
out
mov
sbb
fdiv
mov
mov
xor
fdivs
mov
pop
sbb
mov
lcall
xor
in
sub
sahf
push
lock
in
jp
pop
shll
in
mov
xchg
sub
test
pop
popaw
mov
push
or
inc
imulb
mov
test
xlat
lret
das
mov
cmpsb
inc
nop
push
add
sbb
out
push
mov
pop
mov
outsl
adc
ljmp
push
pop
cwtl
fdivrl
xor
push
mov
faddl
sbb
repz
add
test
popf
icebp
loopne
sub
sub
loope
jmp
dec
sbb
or
sti
test
das
sbb
jbe
pushf
lcall
or
fildl
out
cmpsb
cmc
jecxz
cmp
push
inc
scas
and
insl
popf
push
cmc
ljmp
cld
mov
jle
xchg
sub
or
movsb
mov
cmpsb
dec
jae
rorb
enterw
push
and
imul
subb
add
xor
xchg
mov
add
in
xor
add
push
mov
add
push
jmp
jne
adc
flds
mov
lcall
jle
jg
jle
push
fdivrl
outsl
andb
icebp
sti
pop
mov
loope
ja
xchg
cmp
out
lock
push
add
insb
mov
scas
mov
cmp
dec
dec
xchg
mov
dec
inc
pop
jecxz
xchg
ret
repnz
stc
jmp
aad
cltd
ret
mov
xor
jle
popf
xlat
jmp
filds
pushf
sbb
out
icebp
lahf
mov
pop
sub
shll
push
mov
mov
add
mov
cmp
sbb
adc
loop
or
scas
sub
cmovb
jp
cmp
dec
push
shl
test
push
idiv
mov
rcrb
jmp
popa
dec
cmpsl
daa
repz
xchg
cmp
fwait
ret
dec
cmp
andb
pop
iret
mov
sbb
sbb
stos
push
mov
push
cmp
xor
push
pop
mov
sub
insb
cmp
popf
stos
xor
decb
sarb
adc
das
and
stc
adc
mov
cs
jo
fiaddl
ret
lret
inc
outsb
leave
pop
inc
jns
jo
mov
stc
mov
xlat
decl
dec
rep
fucomi
mov
push
sbb
or
fdivl
rcll
add
sub
inc
sbb
daa
cli
movsl
sarl
fstps
xchg
cmpsb
in
adc
jno
and
or
inc
adc
mov
ds
into
stos
fistpl
fst
or
mov
or
jl
lret
push
or
mov
shrl
mov
xchg
rcl
js
in
sbb
push
out
jp
subl
and
and
inc
lock
pushl
call
mov
cmpl
lea
jmp
xchg
leave
rorl
mov
xchg
jnp
inc
aaa
jle
push
jg
jle
xchg
push
jl
jmp
cmp
adc
mov
sub
mov
push
stc
jmp
xor
adc
repz
scas
adc
mov
dec
jno
outsl
xchg
dec
jecxz
mov
pop
mov
fmuls
mov
mov
cmc
rorb
ret
adc
sarl
insl
mov
notb
mov
out
mov
dec
dec
jmp
repz
pop
push
ds
andb
dec
fbld
fstpt
std
fs
or
cmp
push
mov
pop
lret
mov
xor
je
mov
test
jns
mov
data16
jb
fmuls
fnstsw
int3
sub
mov
popl
inc
mov
data16
push
xlat
repnz
sbb
dec
pop
fstps
insb
test
dec
mov
jbe
push
pop
rcrb
rcll
out
cmpsl
mov
or
cmpsl
dec
xchg
inc
lret
jbe
mov
hlt
aad
repnz
pop
jmp
inc
pop
add
fcoml
mov
lcall
fmull
arpl
orl
aam
mov
pop
xchg
movsl
stc
iret
lods
movsb
rcrl
mov
pop
mov
ja
xorb
inc
ljmp
push
popf
sub
sub
jg
jg
add
rcrb
dec
shrl
mov
outsl
fistl
test
mov
std
fbld
insl
xchg
leave
call
add
cmc
jp
mov
aam
dec
nop
clc
cmp
sub
cltd
mov
mov
cmp
mov
mov
jb
js
sbb
cmp
jae
mov
mov
je
jmp
jmp
pushf
dec
mov
inc
and
and
jle
jg
jle
xor
mov
sub
jo
jns
xchg
lods
mov
mov
push
adc
lret
pop
loope
scas
enter
jp
icebp
gs
pop
xlat
shrb
insl
jb
mov
push
adc
dec
xor
add
xchg
dec
lret
add
mov
cmp
cmpl
in
fstps
addr16
arpl
mov
cmp
sub
mov
fistps
sub
int3
xor
sahf
jnp
arpl
int3
jae
sbbb
out
and
add
aaa
bound
and
add
jo
adc
and
xor
lock
pusha
stos
or
cwtl
mov
adc
bnd
xchg
xor
xor
jmp
leave
jmp
rolb
call
push
jg
in
sahf
lcall
add
das
stos
mov
jno
xchg
sub
loop
shr
adc
lcall
repnz
cld
gs
sub
lods
sbb
mov
or
sahf
fwait
or
mov
jno
imul
xchg
xchg
popf
outsl
add
fildll
mov
daa
push
cmp
dec
and
test
addr16
mov
fldcw
pop
mov
push
mov
add
popf
in
in
jns
push
xor
dec
dec
mov
add
cmp
dec
push
ljmp
dec
pushf
lock
push
mov
stc
adc
or
sub
and
ja
int3
pop
mov
inc
jne
push
mov
sub
popa
mov
pop
jnp
add
stc
int
lock
inc
int3
cmp
sbbl
call
xor
add
push
mov
xor
add
push
pushl
lea
push
jmp
cmp
loope
jno
dec
add
adc
jle
push
jg
jle
pushf
sub
or
and
mov
cmp
mov
js
push
in
push
iret
shl
lods
lret
leave
stos
dec
or
lock
xor
cli
and
dec
add
rorb
jge
sub
jmp
jge
inc
imul
cmc
ss
pushf
cmp
in
inc
push
data16
cltd
mov
inc
ret
dec
loop
aas
cmp
sarb
fs
xor
or
mov
arpl
rolb
out
pop
icebp
out
jge
ja
mov
push
dec
sub
add
sbb
add
xor
xchg
cmp
out
mov
clc
jmp
js
ljmp
or
dec
call
mov
fdivrl
scas
shlb
data16
lcall
lds
mov
or
jl
test
xchg
jp
bound
sbb
jmp
xlat
mov
adc
icebp
mov
rcrb
xorb
rolb
cmp
enter
cmp
outsl
stc
daa
das
jno
js
test
pop
cmp
ret
add
addr16
or
mov
es
daa
pop
mov
inc
jl
fs
iret
cli
aas
xchg
sbb
cmp
movsb
pusha
cmpsl
cmc
push
adc
lfs
dec
mov
fdivrl
adcb
mov
in
cld
mov
mov
gs
jl
adc
sbb
mov
jmp
lea
cmp
xchg
add
emms
stos
add
fisttpll
pop
jne
and
sbb
pop
movsb
mov
mov
pop
mov
into
push
inc
cs
testb
div
out
inc
xlat
pushl
pushl
jmp
push
mov
dec
sub
enter
sub
aam
jle
push
jg
jle
shll
jp
fisttpl
add
mov
cltd
out
aaa
pushl
push
out
int3
jl
xchg
inc
jns
pop
lds
ja
xchg
push
icebp
cltd
adc
push
inc
and
data16
scas
jne
lds
push
sub
lret
data16
xchg
pusha
mov
int
push
mov
fnsave
xor
mov
leave
adcl
jmp
cmp
gs
xchg
xor
inc
aad
out
mov
shlb
test
push
push
mov
cmp
addb
mov
sarl
xor
adc
pusha
lret
aas
add
cwtl
mov
outsb
ljmp
in
fisttpl
jns
icebp
mov
mov
adc
lret
inc
orl
add
stc
scas
jne
mov
mov
push
icebp
outsb
push
insl
cmp
out
sti
dec
mov
lods
mov
test
mov
insl
jo
dec
hlt
and
nop
aaa
lcall
jne
push
movsb
xor
insl
test
sbb
jge
push
clc
ja
fs
pushf
push
dec
rolb
sbbl
jecxz
xlat
loopne
cwtl
mov
and
movsb
dec
std
mov
xorl
cmp
jne
push
pop
rorb
adc
ljmp
loopne
mov
pop
les
xor
xor
push
jmp
sub
sti
addb
rorb
xchg
inc
xchg
xchg
ss
pop
scas
add
add
xor
lret
dec
fbstp
push
stc
cmp
call
push
test
lods
inc
push
inc
cmp
scas
jecxz
and
in
enter
out
incl
add
add
inc
in
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
jmp
fwait
imul
shlb
jae
sbb
sub
jle
push
jg
jle
inc
pop
push
stc
inc
lret
lods
int3
xchg
dec
out
addr16
sub
jbe
cmp
pusha
mov
test
call
in
push
mov
pop
add
dec
enter
adc
adcb
iret
ret
lds
loopne
ja
pusha
sub
sti
cld
sarl
xchg
sub
adc
lcall
repz
repz
push
and
shrl
cmp
jb
daa
stos
lods
jmp
daa
testl
lret
jno
cmp
adc
jecxz
iret
mov
sbb
pop
add
sub
adc
stos
test
hlt
insl
loope
xchg
cmp
xor
lea
jb
ljmp
aas
aad
push
lahf
jg
mov
aam
dec
push
push
dec
cmp
jb
or
es
in
icebp
or
repnz
pop
addr16
lds
xchg
les
arpl
fs
lds
xchg
sarb
add
outsb
push
das
push
in
xor
pop
das
in
inc
out
clc
inc
xchg
stos
enter
xor
mov
sbb
cli
sbb
cld
add
sbb
xchg
xor
mov
jo
fs
enter
xchg
arpl
pop
lret
negl
inc
mov
inc
inc
cld
mov
push
ret
stc
cmp
inc
mov
cmpsl
loope
mov
jecxz
lods
pop
call
test
push
dec
mov
in
icebp
jge
sub
repnz
cmp
push
lods
std
sbb
adc
mov
scas
imul
lods
jle
insl
push
out
sbb
ljmp
inc
cwtl
cmpl
mov
insl
fisubl
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
jmp
xchg
lods
sbb
mov
ljmp
push
cmp
jle
jle
and
stos
in
ss
ret
stos
in
jo
out
mov
mov
loopne
sbb
daa
fdivrl
scas
testb
xor
or
lods
add
popf
dec
imul
aad
inc
insb
jl
cmpsl
stos
roll
fiaddl
cmpb
push
sar
movsb
adc
cmp
lock
inc
push
cltd
inc
aad
inc
stos
push
les
add
aad
std
mov
fwait
ret
bound
pop
lahf
xor
sbb
push
jmp
ficoms
mov
push
scas
incb
jle
scas
mov
and
mov
adc
xchg
loope
mov
xor
mov
add
lea
adc
imul
push
subb
lahf
cmpsl
leave
aaa
adcb
pop
mov
sub
inc
aad
stc
mov
push
popf
inc
mov
dec
and
mov
xchg
push
sub
scas
in
adc
les
hlt
pop
or
shll
mov
xor
inc
in
pop
push
adc
repz
adc
sbb
jg
mov
jp
rorl
and
inc
mov
jg
and
sub
dec
cmp
mov
sti
hlt
sahf
popa
out
or
push
mov
or
mov
ss
mov
fcompl
ja
es
jle
data16
lods
cwtl
mov
push
cli
cmpsl
negl
fwait
pop
mov
cmp
loop
inc
push
imul
jp
sbb
ljmp
sbb
repz
xlat
pop
cmp
out
addr16
test
jmp
xchg
cwtl
xchg
aam
inc
in
fcomps
test
push
add
and
inc
add
or
pop
leave
ret
push
mov
sub
push
movl
cmpl
je
cmpl
jne
pushl
pushl
call
xor
add
dec
mov
jmp
movzbl
xor
mov
mov
and
mov
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
push
pushl
call
cmpl
jb
or
movl
movl
cmpl
je
cmpl
jne
call
xor
xor
dec
mov
jmp
sub
movl
mov
sbb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
push
call
jmp
xor
xor
xor
add
mov
movzwl
and
mov
jmp
cld
ss
je
inc
mov
mov
jne
cmp
mov
jle
mov
jmp
repz
cmp
xor
jmp
push
repnz
push
and
or
pushf
add
loop
jbe
xchg
insl
frstor
add
mov
adc
hlt
dec
xchg
mov
sub
int
scas
aas
aas
or
push
out
dec
jg
lds
mov
stos
pushfw
icebp
cwtl
adc
pop
popf
xchg
mov
xchg
out
push
sbb
sub
pop
fidivrs
hlt
jl
or
js
pusha
push
shl
in
movsb
mov
dec
inc
pop
fldt
mov
movsb
stos
mov
mov
xorl
fdivrs
mov
cmp
or
fiadds
popa
std
arpl
shlb
lods
jne
idivb
int3
lock
shlb
pop
sbb
xor
adc
mov
cltd
pop
lret
stos
outsl
andl
pop
lret
in
js
jge
cwtl
aad
push
dec
adc
scas
dec
push
jge
outsl
pop
testl
push
pop
mov
adc
scas
cmpsb
aad
xlat
arpl
mov
cltd
xchg
fs
js
cmp
in
fiaddl
mov
mov
lea
xchg
mov
jae
fbld
arpl
out
jo
push
mov
fisttpl
push
push
jle
sbb
iret
aad
inc
les
mov
je
lods
enter
nop
sub
add
push
dec
stc
lea
add
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
xor
jmp
xchg
sahf
icebp
jno
arpl
ljmp
mov
jle
or
movsb
push
enter
mov
jp
or
fsubrl
lods
testl
mov
int
movsl
ljmp
out
out
jecxz
fs
scas
and
jae
rcll
add
xchg
repnz
cmpsl
aas
lret
out
pop
xchg
or
std
jl
and
jmp
clc
cmovbe
or
jge
faddl
and
xor
pushf
push
sbbl
movsl
fwait
in
ss
hlt
insl
mov
inc
mov
jl
cmp
popa
cli
fcomps
inc
mov
jnp
sahf
sub
pop
pop
sbbl
fxtract
popa
jl
lahf
adc
adc
les
jmp
pop
inc
jg
and
mov
lret
inc
mov
push
jmp
lahf
pop
sbb
mov
mov
adc
jl
mov
hlt
mov
in
shlb
ret
iret
stos
jecxz
dec
loop
push
rcr
xor
stc
add
add
adc
stos
pop
add
fcoml
pop
aad
push
pop
fidivs
add
jnp
or
sub
xchg
lea
cmp
add
or
pushf
icebp
aaa
cmp
ljmp
enter
xchg
fsubl
ficompl
mov
rcll
outsb
add
stos
hlt
add
lea
cmp
clc
cmp
dec
xor
dec
xchg
push
mulb
in
jbe
xchg
xchg
scas
xor
pop
movsl
jecxz
lahf
mov
add
cmp
mov
mov
xor
xor
add
xor
jmp
sub
fnstsw
fucomp
sub
cmp
jecxz
or
jg
jle
push
ljmp
popa
push
sbb
inc
dec
js
cmp
mov
aad
xchg
shll
sbb
lea
mov
cmpb
frstor
cwtl
aaa
jns
and
push
repnz
pop
cmp
out
adc
sub
jmp
jns
or
pop
pushl
xor
gs
iret
repz
mov
sub
and
shl
and
test
mov
adc
movl
pop
ret
sbb
lcall
test
push
sub
and
iret
test
and
inc
inc
addr16
aad
mov
or
decb
inc
lea
push
lret
xor
push
push
cmc
push
mov
and
inc
xchg
dec
pop
imul
ficompl
jno
cmpsb
mov
idivb
mov
es
mov
inc
xchg
leave
sbb
cmp
fadds
lods
sbb
mov
hlt
idivb
aam
loop
cli
fdivrs
mov
sub
lods
stc
cmpsl
or
inc
sbb
jmp
ret
sub
add
pop
push
inc
movsl
xchg
dec
hlt
mov
add
dec
or
xchg
jo
and
add
js
lods
in
dec
enter
cmc
cmp
nop
mov
outsl
int3
or
aam
cmc
add
test
push
xor
cmp
rorb
jg
inc
out
mov
mov
test
insl
stos
and
push
or
and
add
add
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
and
movl
adc
movl
movl
movl
andl
mov
inc
mov
cmpl
jne
push
pushl
push
push
pushl
push
pushl
pushl
pushl
push
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
movl
movl
mov
xor
add
or
jmp
mov
icebp
inc
jno
mov
popa
sbbb
jle
imul
dec
mov
sbb
daa
ret
std
js
inc
sub
push
and
pushl
ja
out
pop
fnstcw
xchg
jl
std
inc
lds
ret
push
notb
popf
out
stos
mov
mulb
xor
xchg
sbb
pop
lahf
inc
xor
dec
mov
dec
cmp
xlat
cmpsl
mov
lcall
loopne
jle
push
cmpsb
dec
mov
or
adc
mov
push
pop
xchg
and
jb
cmp
cltd
cmp
pushf
push
movsb
cmp
js
fidivs
jge
jmp
ret
jl
fs
lock
jns
mov
xchg
loop
xchg
push
out
ds
dec
ret
je
jae
faddp
add
inc
or
popf
hlt
movsl
xor
int3
iret
push
or
inc
xor
push
ret
jecxz
scas
inc
cmp
cmpsb
push
sbb
sub
into
aad
adc
push
xor
test
outsl
jmp
cmpsl
pushw
aas
out
adc
dec
js
in
sahf
aad
jg
ds
lds
imul
and
shl
lods
push
or
insb
mov
pop
jecxz
movsl
int
push
test
mov
test
hlt
xor
test
xchg
add
shlb
xor
lcall
push
aaa
jl
nop
add
or
lcall
addr16
sub
mov
inc
lcall
fbstp
rorb
xlat
add
add
rol
add
dec
pop
add
cmp
movl
jmp
notl
push
jb
out
or
sbb
xor
jg
jle
and
into
outsl
call
jmp
jmp
jo
pop
dec
rsqrtps
das
push
subl
rcr
shrl
push
leave
push
cmp
sub
subl
xchg
jb
mov
mov
mov
js
stos
pop
shlb
scas
gs
js
inc
adc
lcall
loope
setl
movsl
ja
inc
das
lea
std
ud0
leave
insl
adc
push
into
fstl
jno
in
cmp
inc
mov
mov
cmovp
in
loope
sbb
mov
test
in
and
and
jb
and
xchg
pop
cli
movsl
jbe
mov
or
test
sti
dec
repz
enter
dec
ror
xor
push
iret
jecxz
call
scas
sub
inc
xchg
cmpl
sbb
cmp
outsb
bound
int3
data16
mov
cli
por
hlt
roll
mov
or
loope
cmc
or
mov
shr
lahf
test
jns
popa
testl
shrl
pop
enter
lret
cltd
lahf
cmp
mov
outsl
push
gs
mov
shlb
inc
or
aad
mull
push
cmc
mov
push
cs
mov
lretw
jle
sbb
sbb
or
push
mov
fdivp
stos
xor
insl
dec
sub
popf
lods
movsl
nopl
or
test
sbb
add
pop
pop
add
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
mov
sub
jmp
or
icebp
jno
out
jns
fistpl
jle
mov
jle
jnp
cmp
mov
push
lahf
dec
push
shll
insb
movsb
push
mov
imul
das
lret
fwait
loop
popa
mov
sub
mov
ret
test
dec
inc
mov
sub
pop
dec
sahf
in
xor
call
jbe
in
sbb
leave
loope
lahf
cmc
jmp
inc
mov
push
loope
mov
in
dec
adc
adc
mov
cmc
rorl
pop
iret
adc
das
dec
xor
insb
imul
lahf
jnp
leave
push
out
pop
jnp
loopne
sbb
dec
push
out
dec
sbb
shll
insb
pushf
mov
inc
add
fxch
test
dec
out
jae
pop
daa
out
dec
addl
frstor
fs
inc
adc
adc
mov
imul
fnsave
mov
add
lea
shlb
rclb
rolb
mov
cmc
cmp
mov
xor
sub
or
xchg
or
shl
daa
mov
fdivs
stc
iret
push
arpl
push
rorb
inc
repnz
adc
mov
lret
and
lods
ss
jl
mov
cmp
mov
aas
inc
lea
and
iret
cmpsb
pop
cmp
stos
add
cmc
inc
pop
dec
xchg
stos
fs
jne
adc
and
sbb
jmp
push
out
inc
xor
cld
adcl
xor
add
cmp
movl
jb
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
inc
mov
mov
xor
xor
sub
add
add
andl
xor
or
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jb
imul
mov
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
ret
movsl
shll
dec
cld
testl
mov
jle
xor
mov
sbb
xchg
imul
adcb
adc
ss
les
test
stos
sti
xor
mov
scas
loope
sub
mov
inc
js
aam
and
xchg
and
mov
rclb
add
sbb
dec
sub
lcall
push
xor
pop
push
xchg
add
xchg
pop
out
out
jnp
andb
add
add
mul
aam
test
sub
lahf
sbb
adc
push
movsl
jne,pt
std
xor
push
mov
xchg
push
sti
or
inc
testl
iret
jp
mov
test
das
rclb
call
xor
inc
mov
pop
fnstenv
popa
test
idivb
mov
mov
mov
jecxz
gs
test
repnz
sbb
cmpsl
mov
js
xchg
and
shll
mull
add
jno
clc
cli
scas
clc
cmp
xchg
push
cmp
mov
sarb
pop
sub
loope
iret
sbb
aas
cmp
es
and
dec
cld
sahf
lods
and
fs
mov
pop
push
cmp
push
ret
adc
into
arpl
push
enter
gs
sbb
push
mov
push
shrl
mov
leave
ljmp
jmp
rol
xor
xchg
sti
mov
sbb
lock
cmp
ja
mov
jmp
mov
mov
jmp
mov
dec
jno
les
icebp
imul
jle
orb
lcall
mov
cld
mov
cwtl
aaa
sbb
jl
insb
add
cmpsl
push
mov
sbb
or
addr16
sub
addr16
sbb
stos
sbb
test
mov
mov
loop
jecxz
push
jmp
pop
add
xor
pop
lock
rcrl
inc
fucomp
les
into
je
mov
jno
or
addr16
sti
or
or
pop
lds
nop
inc
lds
xor
xchg
mov
jo
push
stc
xchg
cltd
mov
push
fwait
dec
adc
jne
popf
push
sbb
xorb
gs
push
mov
cs
push
adc
loop
xchg
mov
mov
mov
cltd
call
adc
xchg
in
into
pop
fwait
int
and
filds
mov
lds
jne
inc
jnp
mov
pop
or
mov
popf
xor
je
jo
sub
inc
sub
bound
cwtl
inc
sub
std
adc
add
push
xchg
sbb
aas
mov
test
inc
jecxz
bound
es
lods
cwtl
add
stos
aas
inc
lea
adc
fs
push
sub
dec
pop
out
push
xchg
cmc
and
ds
mov
jb
aas
roll
jmp
push
lods
cltd
sub
jne
sub
and
neg
or
jmp
mov
in
mov
cmp
js
das
insb
in
mov
add
add
imul
mov
mov
sub
cmp
jmp
imul
mov
jno
loopne
cmp
test
jle
mov
jle
sbb
sbb
mov
jb
aam
xchg
xor
bound
pop
jmp
test
in
mov
sub
or
push
or
in
sbb
sub
dec
mov
ret
popa
mov
ficompl
xchg
xchg
mov
jp
icebp
jl
lret
das
mov
mov
sub
hlt
inc
mov
enter
pop
cli
or
jmp
push
push
pushf
add
imul
pop
sub
cmpsb
inc
xchg
fists
and
ror
adc
aad
loop
adc
or
push
xchg
ss
cltd
mov
or
hlt
iret
arpl
test
sbbl
rclb
inc
lcall
cmp
stc
and
loop
jae
xor
inc
pop
add
cltd
xchg
inc
mov
out
and
stos
test
sahf
cwtl
pusha
mov
sbb
les
add
scas
push
mov
xor
xor
out
sub
push
fbld
pop
pop
sub
inc
mov
test
mov
xor
push
xchg
jg
decl
jl
mov
sbb
mov
mov
xor
push
mov
inc
add
jne
insl
pop
in
in
add
scas
pusha
ret
push
jno
mov
mov
rcll
mov
hlt
dec
pop
pop
xor
mov
pop
pop
xchg
xchg
jno
xor
sbbb
xor
push
adc
push
xchg
jecxz
ja
mov
jmp
mov
mov
xor
xor
jmp
in
test
call
push
lahf
test
adc
jle
mov
jle
popf
pop
dec
or
fsubl
incl
daa
imul
ficoml
jns
and
loope
lret
in
mov
mov
add
xchg
int
jne
or
mov
cmp
ds
lock
jo
loope
or
data16
pop
add
scas
mov
data16
out
dec
and
nop
cmpsb
sub
call
subl
icebp
jmp
wrmsr
shlb
repz
out
out
pop
subl
xchg
popf
out
icebp
fs
jmp
scas
pushf
cmp
dec
jecxz
inc
push
ret
flds
cwtl
loopne
ret
std
popf
das
sbb
mov
xchg
or
xchg
inc
ljmp
or
test
repnz
testl
enter
popf
lret
pop
fcomps
mov
outsl
lcall
or
jb
cmpsb
dec
pop
cli
push
adc
dec
scas
repnz
mov
xorb
cs
cmp
xchg
mov
xchg
push
inc
push
shrb
mov
xchg
or
fiaddl
incl
sbbb
mov
mov
iret
into
xchg
clc
mov
lock
movsl
loop
out
push
inc
out
sbb
add
xchg
add
xchg
cmp
jl
jne
imul
add
lret
cmp
jne
mov
inc
adc
adc
aaa
jecxz
cmp
mov
sub
lahf
sbb
jne
push
mov
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
jmp
jmp
push
mov
mov
lret
mov
jle
pop
ds
fstl
repz
cmp
out
insb
stc
mov
dec
inc
lock
xchg
iret
adc
das
popa
cmp
sbb
push
inc
inc
fdivr
pusha
arpl
mov
push
pushf
adc
xor
daa
lods
mov
repnz
dec
outsb
pop
iret
cmp
ja
ja
push
lret
enter
xchg
repnz
pop
pop
iret
imul
mov
mov
adc
dec
popa
pushf
frstor
jl
mov
cmc
hlt
cmp
jmp
dec
add
mov
mov
repnz
or
add
out
bound
xchg
mov
add
jno
or
mov
or
jb
dec
arpl
mov
data16
sub
lahf
lret
fstps
cld
push
stos
std
sub
mov
cmpsb
jge
xchg
and
dec
cli
and
mov
aam
fcmovbe
xchg
insb
shrl
mov
mov
cmp
mov
cmp
mov
out
loope
or
add
ret
mov
mov
mov
mov
cs
lods
jb
lds
test
xchg
push
mov
jmp
mov
push
int3
and
nop
add
fwait
cmp
sbb
adc
cltd
pop
add
scas
jl
xor
sahf
push
jb
in
mov
rolb
jmp
dec
adc
add
push
push
jl
ljmp
enter
jg
jle
adc
int3
popf
mov
dec
mov
sbb
call
xchg
pop
inc
lcall
repz
adc
sub
fisttps
test
jecxz
loope
fisubrl
xchg
imull
pop
pop
xlat
jae
cmp
fcomps
pop
or
scas
jmp
dec
aas
mov
int3
cltd
movsb
rclb
jl
sbb
ljmp
mov
and
lret
or
cltd
stos
cld
or
nop
mov
jne
sbb
push
lret
sbb
stos
inc
sbb
ret
mov
mov
lret
adc
fistpll
dec
jmp
mov
idivw
add
adc
dec
shlb
pushf
pop
xchg
inc
dec
lret
add
fwait
and
lods
pop
jnp
cmpsb
rcrl
in
int
push
mov
fstl
gs
pop
outsb
sbb
in
cmc
call
popf
add
js
adc
std
nop
adc
xorl
movsl
mov
cmp
iret
push
test
and
neg
and
xor
mov
add
rclb
arpl
pop
movsb
sub
cmpsl
outsl
push
mov
les
jnp
sbb
out
std
mov
pushf
sbb
mov
and
setbe
ret
add
in
jb
add
adcb
mov
push
xchg
fildll
stc
xchg
insl
inc
roll
addr16
push
mov
imul
lds
fmull
scas
xlat
mov
mov
sub
jmp
and
xor
iret
fcoml
xchg
push
leave
jle
mov
jle
pop
mov
inc
jl
xor
adc
xchg
jo
std
adc
or
push
mov
repnz
mov
cs
pop
popf
psrlw
xchg
xor
rolb
in
sahf
ja
adc
jo
sub
pop
inc
jmp
adc
inc
int
jge
inc
sub
aas
int3
adc
inc
repz
xor
cld
cmc
fucomp
jp
push
fnstenv
jno
push
lcall
push
xor
xchg
jo
hlt
fxch
sar
clc
xlat
outsb
mov
push
or
jge
dec
and
mov
pusha
jb
dec
iret
call
xor
cmp
popa
ljmp
push
scas
ret
imul
mov
lcall
or
ljmp
mov
sub
mov
shrb
mov
jmp
and
xchg
icebp
mov
mov
xor
mov
and
mov
xchg
out
sbb
cmp
sbb
hlt
sbb
cwtl
scas
cmp
push
lods
outsb
cld
lds
xor
in
cmpsl
orl
test
mov
add
xchg
jecxz
test
mov
and
scas
cmpsl
lods
mov
dec
pop
out
push
mov
mov
push
fcoml
stos
lds
add
jno
push
loop
lret
shll
xchg
mov
movsb
pop
mov
inc
sti
jge
fimull
xchg
add
add
add
add
cld
xor
xor
add
add
imul
mov
mov
sub
jmp
add
jne
mov
mov
jle
jg
jle
lret
fstl
mov
sti
pop
mov
adc
add
and
les
and
sahf
aad
in
out
pop
in
sbb
inc
mov
adc
imul
and
dec
out
xchg
push
loopne
out
out
xor
js
xchg
test
mov
sti
in
or
sub
push
cmp
xor
cmp
into
mov
dec
rcrl
mov
cmpb
mov
dec
test
jns
mov
jmp
xor
pop
repnz
jns
xor
stc
insb
loopne
ds
dec
mov
push
fucomip
outsl
xlat
push
pop
mov
aam
dec
lods
mov
jg
lahf
loopne
push
repz
xchg
push
fldcw
mov
push
sbb
sahf
jb
xor
stc
repz
sbb
or
push
dec
pop
mov
cmpsl
stos
and
loop
sbb
or
addr16
aad
jns
xchg
out
and
pop
test
int3
je
cmp
in
lds
test
xor
cmp
fiadds
dec
mov
enter
pop
jl
jns
int
mov
or
add
jo
xchg
cwtl
daa
aaa
adc
lods
xchg
mov
bound
ret
in
fdivs
popa
xchg
rorb
inc
out
inc
mov
out
sub
movsb
jo
or
mov
int3
dec
mov
loop
out
ljmp
push
mov
fimull
add
add
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
jmp
mov
je
jmp
sahf
loop
jecxz
aad
jle
jg
jle
jns
les
loop
mov
push
leave
repnz
pusha
sbb
push
out
leave
iret
cli
enter
add
adc
iret
xlat
or
popf
cmc
notb
data16
and
pushf
jno
jecxz
out
and
mov
hlt
bnd
ficoml
cmp
dec
inc
mov
sahf
cmp
ds
dec
jp
sti
cmp
ss
into
ret
inc
aaa
into
push
xor
ja
or
push
mov
add
popf
jnp
and
hlt
sub
out
insb
cmp
jo
pop
add
push
and
fisubrl
shll
mov
in
in
jns
orl
sbb
push
xchg
fs
test
adc
iret
mov
divl
lahf
inc
adc
jae
push
icebp
les
mov
sub
cmp
fidivs
div
js
mov
test
fnstenv
or
fwait
enter
xor
daa
cld
or
sti
pop
xor
mov
sub
xlat
sbb
gs
xchg
jg
xchg
mov
xchg
rcl
jno
fcmovnbe
arpl
das
lock
pop
push
dec
scas
jge
test
stos
xorl
jo
pop
add
ds
sbb
mov
insb
jo
in
jbe
adc
mov
xor
pop
js
idivl
jmp
push
test
jo
incl
pop
loop
pop
pop
jno
fdivrp
stos
add
out
lahf
fwait
push
inc
mov
xchg
in
jb
jae
sbb
stc
imul
mov
xor
sub
jmp
decl
xor
xchg
lea
mov
jle
mov
jle
pop
call
enter
imull
add
lods
cmp
fsts
lds
mov
pavgw
fdivp
push
adc
mov
dec
push
aam
inc
insl
shlb
pop
mov
cmp
cmp
sub
mov
fcmove
cmp
in
shrl
fcoms
sub
mov
call
aas
jg
jmp
cs
push
int
mov
or
fcomip
sti
enter
xchg
jne
call
add
inc
mov
jle
cmpl
mov
adc
add
daa
jno
loopne
movsb
adc
div
mov
dec
ret
ljmp
inc
dec
or
dec
cli
loope
and
push
xor
jbe
push
push
mov
inc
jo
or
dec
lahf
lcall
dec
push
pop
push
add
adc
hlt
cwtl
outsb
sub
cs
mov
mov
shl
mov
cmc
cmpsb
dec
xchg
jbe
adc
or
dec
ffreep
out
testb
cwtl
add
xor
jecxz
push
dec
dec
push
pop
sub
orb
push
dec
icebp
dec
jbe
add
fimuls
or
xchg
xor
sub
jno
jle
dec
mov
popf
gs
pop
inc
popa
mov
mov
stos
sub
add
add
inc
sbb
mov
add
cli
jbe
mov
mov
xor
add
imul
mov
xor
jmp
and
inc
xor
ret
das
mov
sarb
mov
jle
shlb
test
in
ljmp
fs
cmp
push
stos
mov
xchg
push
test
and
int
lret
push
jg
jl
and
faddp
sbb
nop
add
xchg
fucom
pushf
or
mov
inc
aas
or
js
pop
push
mov
push
lds
sbb
inc
mov
mov
adc
gs
xor
xor
aas
shlb
lret
mov
inc
scas
cltd
fcoml
jle
call
aaa
mov
xchg
inc
mov
dec
mov
mov
push
inc
fdivrp
int3
push
sub
mov
aad
pop
add
jl
sbb
dec
andl
fstpl
daa
mov
dec
jns
das
sub
jp
popa
pushw
stos
xchg
into
in
in
out
sub
xchg
jl
mov
addr16
std
cmc
out
adc
mov
es
leave
fmul
push
xchg
das
clc
or
test
pop
adc
hlt
test
int
pop
add
stos
xor
clc
mov
inc
sahf
jb
fistpll
rcrb
dec
scas
inc
sarl
sbb
mov
out
mov
xor
jmp
xchg
push
addr16
mov
js
das
lea
jecxz
out
xor
push
jmp
movsl
je
sub
dec
dec
xorl
dec
aas
mov
push
pushl
jl
pushf
jecxz
cmpsb
mull
or
cs
cld
imul
sbb
sub
mov
xlat
mov
lea
mov
mov
xor
mov
sub
add
mov
jmp
adc
das
test
xor
mov
stos
testl
test
xor
lds
lds
rol
test
test
push
outsb
xchg
mov
add
iret
scas
scas
popf
cmp
dec
inc
lret
add
pop
lods
test
arpl
cs
mov
pop
and
jnp
add
add
xchg
in
scas
sbb
mov
movsl
xor
sub
mov
mov
ja
xor
inc
cld
cmp
jns
cli
pop
xchg
cmpsb
inc
cmc
cmpl
xchg
xor
fnsave
loope
and
cmpsl
inc
push
outsl
jl
xor
iret
ss
xor
jle
push
jno
push
or
mov
test
dec
jnp
jmp
xchg
out
and
pop
fwait
aad
adc
pop
les
sbb
push
adc
cltd
fisubrs
out
test
pop
or
in
stc
inc
out
jb
push
sti
add
inc
xchg
lret
nop
aas
hlt
mov
xchg
and
dec
jne
xchg
imul
and
in
mov
cmp
sbb
mov
and
loopne
mov
xorb
or
xchg
imul
imul
or
or
and
scas
mov
pop
jmp
and
or
push
xchg
sub
mov
shll
xchg
imul
mov
sahf
into
je
lea
std
sub
scas
jg
sbb
in
cmp
and
jmp
or
addr16
jne
mov
mov
dec
dec
jne
int
jle
mov
jle
mov
outsl
dec
sbb
sbb
adc
pushf
mov
sub
rcl
call
lods
jns
subb
pop
push
jnp
pop
mov
pop
xor
mov
cmpsl
mull
cltd
mov
or
inc
daa
cmc
pmulhw
outsb
xchg
push
and
xchg
addr16
or
outsl
arpl
js
push
fsubrl
pop
and
nop
outsl
cmpsb
nop
stc
adc
mov
sub
insb
leave
add
loop
je
ss
push
out
int
push
sub
jb
pop
inc
push
mov
mov
cmp
xchg
in
mov
push
inc
imul
sbb
dec
ret
outsl
push
mov
clc
sub
dec
pop
ja
and
fwait
aad
push
fcompl
packuswb
push
or
pop
push
adc
divl
jno
cmp
repz
pushf
mov
loopne
popf
test
xchg
sub
sbb
lret
jge
or
aaa
lods
mov
es
dec
fisttpll
insb
test
sub
cli
mov
bound
push
jg
pushf
in
mov
mov
adc
and
push
loope
pop
in
sti
jmp
mov
out
cmpsb
mov
pop
jbe
scas
pop
shl
inc
sbb
xor
test
pop
dec
mov
rcrl
stos
push
iret
cmp
xor
in
int
ljmp
mov
rorl
scas
sarl
xlat
jbe
pop
pop
leave
ret
push
mov
sub
call
andl
xor
movl
cmp
movl
jne
cmp
movl
jne
push
call
sbbl
push
orl
call
adcl
test
je
movl
push
xorl
push
orl
call
push
mov
mov
and
mov
movl
adc
lea
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
subl
mov
lea
mov
mov
sbb
mov
mov
mov
mov
mov
and
mov
orl
push
add
mov
adcl
xor
orl
push
neg
mov
subl
add
movl
mov
mov
mov
cmp
mov
movl
je
and
mov
addl
xor
add
orl
imul
mov
jmp
push
call
adcl
test
je
xor
movl
jmp
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
or
add
mov
mov
adc
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
notl
mov
xor
add
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
xor
addl
add
movl
cmp
movl
jne
sbbl
pushl
pushl
sbbl
call
movl
cmpl
je
cmpl
jne
push
pushl
push
call
mov
dec
mov
jmp
mov
mov
sub
add
mov
mov
xorl
mov
sub
mov
mov
xor
mov
mov
add
mov
mov
mov
movl
andl
xor
or
inc
mov
cmpl
jne
push
pushl
push
pushl
pushl
push
push
push
call
cmpl
jb
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
push
call
cmpl
jb
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
push
push
push
call
mov
dec
mov
jmp
mov
or
mov
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
mov
xorl
push
push
mov
xor
xor
push
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
addl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
or
jmp
pop
push
lods
sahf
mov
push
push
insb
lret
lret
fdivrl
jge,pn
jle
xorl
sub
out
push
stos
xor
xor
mov
pop
pop
adc
popf
sbb
imul
rcl
jge
outsl
pop
sahf
jb
dec
fildl
fsubs
test
addr16
addb
popa
cltd
loop
ds
xor
mov
aaa
push
loop
push
outsb
fwait
jmp
cmpsb
ja
lods
sbb
cmp
insl
ljmp
in
lds
imul
sub
int
inc
sbb
insl
orb
cmp
mov
test
adc
adc
leave
add
dec
mov
cs
or
lret
repnz
jae
mov
and
sbb
push
jecxz
push
mov
das
push
sbb
mov
or
clc
pop
aam
out
mov
push
mov
sub
add
mov
cmpsb
jbe
jne
movsb
in
fnstenv
xor
jnp
adc
mov
les
addb
inc
mov
jg
rcrb
outsb
les
in
sti
imul
jl
jge
repnz
sub
xchg
pop
sbb
and
mov
mov
jnp
mov
and
test
pop
cmp
jbe
movsl
outsb
enter
out
pop
jp
jbe
push
inc
inc
cmpsl
dec
clc
lods
cli
bound
jge
xor
sbb
push
mov
in
sbb
adc
sbb
adc
push
add
lds
xchg
int3
add
fimuls
lock
out
icebp
adc
ret
jo
sti
xchg
les
cmp
cmp
shl
jb
cmp
xchg
lds
adc
lahf
push
lret
sbb
movsb
mov
lret
call
iret
sub
and
pop
outsb
movsb
dec
clc
test
mov
add
xor
add
lds
lods
jmp
mov
cmp
pop
add
lea
mov
xchg
dec
rolb
in
or
dec
sub
mov
push
les
out
add
inc
cmpsb
or
data16
push
psubsb
sarb
dec
lret
push
pop
and
mov
stc
outsl
in
cmp
notb
push
mov
lock
aad
sbb
inc
push
cmc
jge
test
mov
outsl
inc
and
std
pop
dec
loop
daa
push
adc
push
xor
daa
sbb
pusha
shr
test
repnz
pop
cmc
ret
push
and
xchg
lret
push
push
call
mov
inc
out
pop
jmp
jmp
enter
push
repnz
dec
dec
rep
movsb
cmp
or
aam
call
inc
adc
mov
jbe
out
pop
or
jno
jp
mov
nop
mov
jle
sub
mov
fs
push
mov
mov
xor
and
inc
dec
jecxz
mov
mov
add
mov
mov
addl
lea
sub
mov
movzwl
and
mov
addl
mov
jmp
scas
mov
push
jb
add
jle
jge,pn
jle
cmp
mov
fldl
fstl
inc
mov
xchg
rclb
push
shll
test
adc
sub
cwtl
xchg
das
xor
add
insl
sub
adc
mov
xchg
cs
ja
lret
pop
and
out
mov
popa
ret
and
jno
out
jecxz
add
lods
sbbb
xchg
fs
cltd
shlb
lods
lret
stos
test
pop
mov
sahf
les
mov
jb
or
adc
movsl
adc
ja
inc
aad
push
idiv
fnstenv
add
aas
cmp
aas
and
cmp
push
loope
insl
adc
pop
push
repnz
fstl
push
xchg
adc
mov
shr
xchg
jb
adc
je
out
adc
mov
push
pop
adc
jae
adc
sahf
pcmpeqb
fcmove
testb
mov
scas
pop
adc
pusha
es
cltd
cmp
rcrb
outsl
mov
mov
call
mov
dec
dec
mov
xorl
mov
inc
sbb
xlat
pop
jbe
adcl
pop
sub
mov
imull
jecxz
push
pop
xchg
jb
in
fsubl
and
and
or
movsl
mov
aas
aaa
mull
adc
out
mov
iret
xchg
mov
mov
xchg
popf
push
out
jecxz
mov
out
sub
inc
pop
sbbb
pop
jae
inc
mov
pusha
mov
aas
inc
lret
pop
push
popa
scas
adc
rclb
adc
xor
lods
lock
cmp
pop
sub
jno
and
and
mov
jl
sbb
scas
ret
movsl
cmp
aam
mov
cltd
lea
xchg
jg
dec
lahf
inc
das
push
pop
push
lods
pop
xchg
aam
inc
mov
fstl
rorl
pop
sub
pop
inc
mov
cmpsb
cmpb
fwait
pushf
mov
xchg
cs
test
mov
add
xor
mov
ret
cli
es
add
fcomps
push
lcall
xchg
jae
ret
mov
rclb
inc
jno
xchg
add
sub
imul
test
call
in
push
jl
jmp
xlat
subb
loop
mov
leave
cmpb
sarb
aas
jb
add
lock
mov
xchg
test
es
into
push
movsl
xor
mov
mov
fidivrl
inc
jmp
xchg
push
shrb
in
out
or
adc
mov
out
adcb
push
adc
das
std
xchg
inc
dec
outsl
add
flds
pop
add
imul
cmpsb
cltd
fwait
outsb
arpl
movsb
and
cmpsb
xchg
test
xlat
lea
adc
jle
inc
pop
roll
rclb
enter
cmp
pop
mov
lcall
push
sub
inc
xor
sbb
jmp
push
or
int3
popa
hlt
jno
jae
and
lret
inc
jae
cmp
jle
jge,pn
jle
inc
pop
jb
ljmp
insb
xor
mov
add
mov
jg
adc
dec
mov
or
pop
movsb
shlb
lea
jle
loope
punpcklwd
test
adc
mov
add
jae
push
mov
adc
cmpsb
rcrb
sub
mov
xchg
cmp
outsb
mov
sub
mov
jns
dec
ljmp
rcrl
fadd
add
mov
inc
int3
sub
dec
mov
aas
add
mov
xchg
xchg
leave
pop
ljmp
and
fadds
mov
xor
push
ljmp
sub
mov
outsb
and
and
stos
loope
push
lods
stos
adcb
test
inc
sti
inc
ficomps
std
xchg
les
xchg
movntq
out
mov
pop
dec
mov
fistps
adc
js
xlat
ret
add
adc
pop
sbb
push
add
lahf
fsub
pause
push
cli
jmp
lcall
add
xor
scas
mov
mov
push
icebp
and
lcall
enter
movsl
loop
dec
lods
or
pop
dec
push
popa
imul
mov
cmc
cs
sub
divb
pusha
adc
iret
scas
xchg
cmpsb
pushf
negb
xor
push
sub
sti
in
stos
pop
xor
stc
push
add
lds
inc
shll
mov
ficomps
mov
inc
add
in
xor
test
cld
sub
repnz
test
stos
cmp
jno
stos
dec
mov
js
push
pushf
ret
add
or
js
push
daa
sbb
dec
jne
ja
and
cmp
shr
inc
cwtl
inc
mov
adc
pop
jge
sbb
jle
dec
jnp
ret
fiaddl
sahf
popa
pop
pop
add
or
xor
lret
xchg
adcb
sbb
pop
dec
in
xor
jns
std
test
xor
imul
push
xchg
mov
std
leave
xchg
hlt
mov
jno
add
icebp
or
outsl
push
sahf
dec
cmp
out
in
lret
mov
pop
pop
addr16
cwtl
rcrl
imul
loop
ror
aad
imul
dec
clc
dec
xchg
and
call
dec
or
dec
je
xchg
push
xchg
in
js
fs
add
cmp
mov
aam
les
lock
add
icebp
adc
pop
xlat
in
mull
mov
shrb
aas
mov
xchg
xchg
adc
mov
sub
andl
leave
jo
xor
pusha
mov
pop
aad
das
repnz
stc
mov
and
sbb
lods
lods
out
dec
sahf
out
jle
jno
call
lcall
rclb
popa
jle
xor
movl
add
fisttpl
sbb
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
movl
sub
jmp
shrb
mov
xor
jne
ss
loop
jle
jge
jle
mov
inc
clc
cmc
aam
dec
in
leave
iret
scas
stos
xchg
push
popa
out
loop
cmp
loopne
pop
xchg
imul
adc
xor
inc
mov
insl
sbb
or
adc
sar
popa
add
pop
mov
push
xor
mov
sub
xchg
aad
xchg
pushf
movsl
movsl
rclb
insb
pop
add
or
sub
add
lcall
jp
mov
xorl
pop
mov
into
pop
dec
fiadds
jno
je
rolb
inc
iret
insb
cmp
in
sub
mov
incl
iret
inc
pop
aaa
bound
cmc
notb
fiadds
jo
pop
cmpsl
push
out
pop
dec
pop
movups
jle
lea
or
mov
dec
arpl
addr16
out
fwait
outsl
sbb
xor
jns
add
push
arpl
stos
adc
cmc
sbb
inc
cmp
adc
imul
pop
mov
scas
mov
ljmp
stos
xchg
xchg
andb
pop
jb
div
mov
call
jne
shll
xchg
lock
dec
jo
fcompl
xchg
mov
cmpsl
in
mov
test
nop
adc
aad
fs
jo
jo
pop
stos
rcrl
in
inc
push
iret
mov
adc
sub
xchg
mov
iret
sahf
xchg
adc
push
scas
or
cmp
ss
inc
fwait
cltd
fldl
loopne
insl
sub
sub
cmp
push
sub
push
ds
adc
mov
or
jl
je
xchg
inc
lea
ficoms
in
aad
sbb
mov
mov
mov
in
and
mov
int3
add
cmpsb
test
mov
hlt
jb
adc
es
fisubrs
mov
sahf
add
mov
add
aaa
mov
add
pop
ror
mov
cli
mov
rcll
mov
pop
imul
fisubrs
mov
mov
add
repnz
lahf
adc
adc
js
inc
adc
add
add
add
add
mov
fnsave
stos
inc
popf
out
inc
push
xor
mov
add
mov
sub
push
scas
mov
inc
adc
adc
inc
out
or
or
fisubl
mov
xchg
pusha
and
int
data16
dec
pop
or
inc
inc
cmp
scas
or
sbb
adc
cwtl
jae
sub
inc
sbb
pop
cmp
push
stos
or
cmc
mov
cmp
mov
movsb
dec
dec
jle
dec
add
lret
int
mov
add
sbb
adcl
ret
push
cmp
test
adc
inc
je
xor
or
sub
sub
in
lea
mov
xorl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
and
mov
xor
addl
add
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
fsubrl
or
pop
or
cwtd
loope
jle
jge
jle
mov
bound
jb
or
push
dec
sbbb
repnz
cmc
stc
sub
adc
jle
out
fisubrs
outsb
nop
pop
sahf
test
je
adc
out
push
xor
loope
fwait
arpl
jno
cmp
in
int3
in
call
push
cmp
pop
test
inc
mull
pop
push
mov
test
adc
outsl
loopne
add
sub
mov
sarb
push
into
or
jg
mov
inc
mov
aaa
add
bound
cld
jnp
sbb
sbb
pop
push
lcall
pushf
cmp
outsb
arpl
cmp
add
and
cmp
addl
adc
scas
lahf
mov
roll
sub
push
lds
loope
push
cs
nop
jns
cmp
test
arpl
lock
ret
cmp
sbb
fbstp
fmull
inc
cmp
xchg
or
in
in
xlat
sbb
imulb
test
push
pop
cmp
xor
adc
push
mov
jno
mov
sets
mov
adc
out
sbbb
hlt
and
cmpsl
sub
push
outsl
sbb
pop
push
arpl
add
test
sbb
mov
push
xchg
mov
cmp
scas
jmp
push
in
mov
mov
xor
cmp
out
and
and
in
xchg
push
sub
or
push
aad
fstpt
daa
adc
inc
xchg
outsl
shrl
push
push
cmp
fidivs
push
xor
xorl
pop
dec
inc
xor
and
push
aam
xor
pop
das
adc
shll
lret
mov
cmp
movsl
mov
loope
sub
rcr
mov
jp
lcall
jmp
fsubrl
mov
icebp
sbb
or
mov
clc
adc
mov
push
das
cmpsb
push
lret
test
les
aaa
mov
dec
jne
mov
sbb
fsubs
clc
jge
mov
push
mov
inc
push
cmpsb
icebp
xchg
leave
pop
popa
fnstsw
pop
jnp
mov
jl
cmpsl
jmp
push
out
imul
mov
jecxz
xlat
mov
out
jle
xlat
jl
inc
in
push
data16
push
adc
mov
mov
inc
in
mov
xor
ljmp
rorb
cmp
loopne
jle
aas
lahf
ret
movsl
or
sarl
mov
adc
adc
pusha
xchg
outsl
sbb
andb
or
or
push
iret
nop
jge
cmp
xchg
lea
es
or
stc
lods
aam
hlt
lea
and
mov
jmp
leave
inc
mov
inc
xor
icebp
pushf
mov
in
jle
jge,pn
jle
ss
jb
xchg
je
dec
negb
inc
mov
fiadds
cmc
imul
insb
mov
scas
inc
lret
add
push
cmp
hlt
adc
cltd
lahf
and
xor
sahf
inc
imul
push
inc
arpl
in
iret
loop
lret
cmp
ficoms
push
clc
pop
ljmp
movsl
ret
dec
jge
clc
mov
mov
dec
loope
fcomps
cmp
push
and
fmuls
aad
or
test
sbb
xchg
int3
pop
push
and
gs
scas
inc
lds
aaa
sbb
xchg
mov
std
mov
nop
xor
jae
or
pop
js
imul
cld
ljmp
out
fnstsw
dec
subl
cmp
subb
test
sub
movsl
push
cmp
mov
mov
imul
xchg
pop
or
shll
cli
fildl
adc
lods
xchg
dec
cmpsb
rcrb
jne
jg
hlt
inc
negb
rcll
lock
gs
mov
dec
jp
ret
xchg
shlb
sub
nop
sbb
pop
fsts
out
ret
xchg
test
test
pop
outsl
jbe
lods
or
mov
jnp
gs
jae
inc
adc
test
jge
adcb
jae
in
ljmp
mov
or
mov
icebp
jne
gs
sbb
dec
movsb
out
bound
push
jae
xchg
fstpl
xlat
fisubrs
ss
xor
xchg
adc
adc
mov
mov
data16
fisubrl
fists
adc
int3
mov
jmp
adc
hlt
shlb
pushf
stc
and
into
outsl
cmp
movsl
or
mov
ficoms
ror
aas
xor
ret
mov
xchg
sub
fmuls
rclb
mulb
pop
push
iret
test
fimuls
push
mov
aaa
inc
pushf
sbb
inc
std
cmp
jno
xchg
int
cmp
cmpsb
xchg
dec
push
jns
int
adc
fs
mov
dec
jmp
stos
or
fsubl
or
fdivr
sub
pusha
stos
pop
insb
sbb
and
lcall
push
insl
xor
sub
pop
cld
inc
dec
rcr
xor
lahf
mov
mov
inc
add
pop
mov
push
mov
rclb
xchg
shl
sub
adc
div
push
or
sarl
adc
in
in
imul
add
out
jb
cmp
fbld
fnstcw
shl
push
xor
in
push
or
sbbl
into
mov
out
cld
lret
call
test
mov
mov
mov
mov
movzwl
add
movl
mov
jmp
js
adc
jae
loopne
lfs
or
mov
jns
jle
jge,pn
jle
adc
popf
fldcw
pop
pop
cmpsb
test
mov
movsb
jle
xchg
lds
lret
adc
sbb
push
lret
scas
sub
xor
popa
popa
pop
pop
fimull
dec
pop
ror
pop
js
pop
fnsave
push
cltd
pop
mov
pop
xor
stos
pop
loope
pop
enter
jno
pop
je
cltd
sub
shrb
test
sub
ljmp
jle
ret
shl
mov
sbb
rolb
mov
cld
mov
es
das
aaa
cmpsl
mov
push
and
mov
movsl
cld
jnp,pn
xchg
or
in
push
std
adc
stc
lcall
ljmp
pop
mov
dec
pop
adc
in
pop
aaa
xchg
inc
mov
cld
negb
fldl
xor
sbb
pop
sub
add
out
lds
and
xor
bound
jp
sbb
ror
outsl
rdtsc
fninit
aam
jae
into
xchg
inc
push
in
mov
sbb
inc
cltd
subb
xchg
push
lock
or
mov
add
pop
jmp
fistl
push
push
insl
pop
or
jle
adc
inc
xchg
mov
jb
outsb
and
mov
mov
call
out
out
fdivr
lsl
push
sub
mov
les
jmp
popa
pop
cmc
jmp
inc
push
ret
std
cmp
mov
loopne
scas
fimull
mov
push
jbe
test
pop
jbe
stc
movl
pusha
lcall
jge
in
lods
in
fidivl
mov
sbb
repnz
dec
scas
out
jns
cmp
mov
sarb
add
andb
fisubl
es
pop
push
xor
jecxz
insb
pop
cld
stos
dec
repz
mov
jbe
repz
pop
outsb
mov
fdivl
sbb
adc
cmp
movsb
insl
outsl
pop
jmp
mov
inc
insb
xor
test
inc
pop
xchg
out
mov
pop
repnz
pop
mov
je
pop
in
scas
and
ret
out
mov
cmp
adc
push
popa
je
iret
xchg
mov
lock
mov
pop
xchg
outsl
divb
testb
cmp
dec
icebp
icebp
mov
ror
rolb
mov
jp
pop
vmovaps
sahf
mov
sub
sbb
mov
fmull
pop
gs
sub
dec
or
in
iret
push
mov
hlt
xchg
imul
aas
roll
mov
xchg
or
cs
mov
xor
xor
cmp
fisubrs
or
aas
popl
gs
adc
mov
mov
stc
mov
ss
leave
jns
jge
pop
mov
or
cbtw
mov
popl
cwtl
sub
fnstcw
fbld
lea
pop
push
cli
mov
add
mov
inc
or
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
mov
jmp
cmp
pop
dec
push
aam
int3
cwtl
dec
loope
sub
jle
jge,pn
jle
xchg
ror
mov
in
inc
mov
inc
clc
ret
gs
fistl
cmpsl
lret
mov
adc
push
enter
jnp
xor
jge
or
std
iret
fcoms
xor
stos
jg
cld
ja
out
icebp
pop
add
dec
stos
xchg
lds
xlat
lahf
clc
addr16
pop
mov
pop
je
imulb
xchg
fcompl
test
fisubl
and
lcall
push
sbb
insl
jecxz
cmp
iret
repnz
enter
jae,pn
adc
sub
fldenv
nop
mov
jae
mov
pop
add
shrb
jns
movsl
aam
cmp
jae
pushf
fxch
jge
pop
xchg
adc
in
fwait
mov
sub
mov
jmp
out
out
fdivrs
out
adc
out
cmp
add
sub
test
push
or
jge
and
add
pop
out
sub
movl
and
das
js
mov
or
pop
mov
mov
jl
test
push
push
xor
andb
cmp
add
nop
in
das
jg
movsl
push
aad
push
fs
inc
cmp
sub
jns
scas
inc
cltd
dec
sub
hlt
imul
pop
popa
lock
popl
cli
data16
jecxz
imul
mov
or
xchg
cmp
and
sub
bound
movsl
mov
sub
orb
pop
dec
mov
sub
je
cmpsb
or
pop
adc
inc
cmpsb
sbb
fisttpl
mov
mov
ljmp
out
lock
je
enter
mov
rcrl
std
mov
mov
fcmovb
fs
add
inc
in
adc
std
popf
xchg
mov
sti
sbb
mov
sbb
jo
imul
outsb
xchg
lret
xchg
mov
sarl
ss
cmp
cltd
ljmp
jnp
dec
dec
xchg
filds
sub
and
ret
sub
cmp
mov
pxor
xchg
adc
xor
xchg
fnstsw
adc
rol
inc
add
popf
add
mov
xor
xchg
mov
xor
push
pop
xchg
sbb
pop
and
inc
jecxz
pop
ret
fwait
pop
cld
cltd
jle
pusha
leave
inc
push
pop
cltd
pop
aam
mov
sbb
repnz
mov
mov
sub
and
fisubrl
shrb
sbb
adc
mov
mov
jmp
or
push
stos
mov
movsl
push
mov
dec
ja
fmulp
ljmp
mov
test
xor
test
mov
scas
push
cwtl
inc
clc
or
adc
rorl
addb
xor
mov
dec
in
xor
mov
sub
add
mov
mov
jmp
mov
jns
xchg
xor
mov
cli
sbbb
jge
jle
aam
pusha
pushf
jno
xchg
lds
test
cmp
pop
cmpsl
jmp
inc
loope
mov
xor
dec
es
mov
imul
and
rcl
out
rcr
cmp
fsubrs
cmp
mov
cltd
je
add
ds
movsb
sub
outsl
inc
sub
imul
xchg
mov
loop
jl
pushf
ret
push
mov
stos
fdivrs
xor
push
xor
ss
push
jecxz
inc
sbb
in
inc
pop
addr16
xor
xor
and
push
dec
lea
cmc
fdivrs
sahf
clc
cmpsl
aam
jae
mov
mov
movsl
mul
xchg
push
sub
mov
mov
insl
mov
loop
jns
insb
jne
gs
fsubrl
lds
ljmp
popa
push
dec
pop
lret
adc
outsb
pop
mov
mov
jle
lock
stos
pop
xchg
movsl
mov
dec
scas
cwtl
add
lret
mov
mov
subb
and
mov
adc
nop
lcall
mov
aas
ljmp
push
jge
mov
sbb
sbb
inc
push
aaa
loop
sub
imul
mov
fs
shl
dec
adc
add
aas
scas
mov
xor
mov
sbb
mov
cmp
jae
pop
mov
shlb
and
push
aas
repz
jmp
jmp
outsb
std
jle
iret
push
pop
push
aas
aad
cmpsl
lcall
dec
popa
xor
lahf
imul
xchg
movsl
testb
repz
cmp
cltd
lahf
dec
push
xor
cs
jno
push
inc
loope
jle
xor
xchg
gs
leave
push
push
mov
mov
cld
push
mov
aas
push
loop
cmc
or
or
and
lcall
inc
jb
jns
loop
mov
lea
jge
and
andb
cwtl
dec
xor
movsb
rolb
jmp
mov
scas
dec
lret
or
sub
or
lea
xor
inc
jae
test
out
out
push
lcall
loope
dec
push
pop
cs
das
imul
js
mov
mov
loop
inc
dec
or
leave
or
cmc
mov
inc
adc
cld
mov
fldt
mov
ret
push
xchg
ucomiss
jnp
xor
mov
inc
pop
popf
push
xchg
pop
mov
sub
cs
pop
lods
jbe
xchg
jmp
lret
imul
push
xchg
test
repz
mov
pop
mov
push
mov
loop
loope
adc
out
and
sbb
lea
hlt
repz
sbb
lahf
out
push
lcall
je
sub
and
mov
mov
pop
xchg
mov
movzwl
add
mov
mov
jmp
jae
push
lahf
jae
jae
pop
dec
scas
in
push
aaa
cmc
jo
icebp
jle
jge,pn
jle
cli
adc
jo
fsubl
imul
mov
sti
addr16
call
mov
not
lret
cmp
inc
imul
mov
int
mov
sub
imul
pop
adc
repnz
and
popf
dec
add
out
out
mov
cmp
rol
movsb
push
cwtl
or
or
sub
sub
test
lcall
movsl
cltd
jnp
cwtl
mov
dec
fisttpll
adc
mov
mov
jmp
out
inc
xchg
and
stos
in
ljmp
cwtl
sbb
out
inc
jmp
and
cmc
dec
cwtl
inc
jns
out
pop
sub
out
cmpsl
mov
mov
sub
xchg
cmp
xlat
js
xor
pop
jb
and
jne
add
repnz
mov
mov
fldenv
sub
inc
lcall
sbb
dec
mov
std
js
adc
inc
pop
jmp
push
cwtl
int3
pop
ss
aas
call
mov
and
xchg
push
rcll
mov
jmp
das
dec
and
inc
add
lret
mov
aam
and
pop
adc
sub
es
jae
cmpsb
frstpm(287
out
call
fcmovnbe
clc
cmpsl
adc
sub
and
dec
xchg
jbe
dec
sbb
jle
fmuls
mov
ss
hlt
hlt
push
and
stc
cli
out
insl
ds
lahf
jbe
cltd
movsl
loopne
mov
push
xchg
in
inc
sbb
popf
sarb
xchg
push
jb
jge
adc
and
xchg
add
sub
notl
adc
jp
cmpsl
mov
dec
nop
cmp
movsl
and
xlat
repnz
insl
mov
jae
adc
push
mov
xor
movsl
xchg
std
dec
adc
scas
enter
xor
test
or
mov
push
insl
cmp
fwait
insl
fdivl
jbe
movsl
adc
xor
xchg
push
cmp
daa
clc
jb
mov
xor
imul
negl
outsl
sti
adc
call
repnz
mov
pop
cmc
mov
inc
xchg
jmp
xchg
es
iret
movb
ljmp
cs
sti
inc
dec
push
xchg
jg
cmpsb
call
inc
xchg
sti
push
mov
xor
mov
movsl
mov
jne
lock
xor
fdiv
jge
mov
out
lods
cmp
cli
cmpsb
or
scas
mov
jne
cwtl
cld
imul
in
xor
outsb
in
sbb
fisubl
je
inc
js
ds
shll
movsl
adc
xchg
les
test
sbb
adc
push
lcall
mov
imul
push
mov
loope
dec
pop
int
xlat
ds
movsb
cltd
imul
jns
push
dec
sub
mov
xchg
aam
lahf
aam
mov
xor
add
xor
jmp
pushl
outsl
jno
mov
repnz
jle
jge
jle
or
inc
mov
dec
or
imul
lods
xchg
mov
add
test
push
fisubl
sub
repz
int3
xor
sar
aam
adc
dec
or
movsl
fidivs
pushf
pop
dec
push
sub
sarb
lods
jb
cmp
jge
mov
out
pop
jmp
out
mov
sub
add
xchg
push
and
cld
push
inc
mov
je
scas
test
repz
or
lds
popf
fcmovnbe
js
sub
test
imul
repnz
imul
xchg
into
xor
inc
pop
test
xor
dec
aaa
or
pop
and
jle
push
push
stos
mov
stos
adc
push
push
xor
js
cmpsb
mov
lret
arpl
xlat
jmp
mov
aaa
sub
sub
fwait
ret
fnstenv
add
insl
in
cwtl
sbbb
sub
mov
adc
out
insb
sbb
insb
stos
fs
int3
loop
jge
fmulp
dec
imul
aad
xlat
xchg
dec
sub
mov
dec
inc
xor
pop
rol
dec
inc
sbb
mov
das
jmp
push
sub
pop
mov
sbb
push
or
add
int
xchg
lret
dec
push
fs
daa
outsl
adc
dec
fsts
inc
sub
popf
fwait
imul
outsl
sub
ja
and
imul
mov
mov
rclb
popf
cmp
push
and
mov
inc
xchg
pop
mov
push
push
sarb
mov
icebp
and
jl
jmp
cmp
push
movsl
dec
sti
mov
pop
pop
adc
mov
xchg
sub
pop
push
mov
aaa
icebp
pop
scas
cld
mov
xor
mov
int3
loopne
mov
sbb
pop
nop
scas
popl
lds
cmp
in
test
sub
out
mov
ljmp
in
js
pop
pusha
adcb
loope
imul
aad
ficomps
dec
inc
lea
sbb
lahf
mov
or
and
hlt
cmp
jns
fsubrl
clc
hlt
push
inc
and
or
dec
cmp
push
cltd
fdivrl
fnstsw
add
pop
clc
clc
clc
add
mov
adc
xlat
push
rol
jno
stos
dec
aaa
jp
push
jg
test
sub
movsl
je
fs
sbb
imul
push
xchg
mov
fs
jbe
inc
hlt
insb
andl
mov
inc
fbstp
std
add
inc
push
ss
mov
fs
popf
addr16
xchg
mov
repz
lcall
insl
pop
es
insl
test
outsb
inc
icebp
push
cltd
aad
and
or
mov
std
arpl
mov
push
int
jae
les
sub
in
lock
ljmp
enter
cld
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
jmp
nop
push
in
shr
jno
push
mov
int3
jp
or
jle
jge,pn
jle
xor
inc
fistps
lods
shrb
xchg
sub
in
aaa
mov
fucomp
mov
cmp
sbb
dec
aam
mov
insl
mov
or
in
aaa
push
nop
sub
es
sarb
int
enter
gs
dec
shr
dec
test
xchg
push
sahf
pushw
repz
std
adcl
jno
mov
sbbl
sbb
inc
incl
mov
jg
stos
out
inc
xchg
or
inc
lods
adc
cltd
imul
sbb
fcmovbe
mov
enter
inc
jns
lret
in
inc
adc
ret
out
mov
push
push
mov
ljmp
fucomip
or
pop
mov
add
pop
in
out
push
push
arpl
adc
lock
adcl
push
inc
xchg
movsb
mov
cmp
js
add
nop
jne
insl
adc
outsl
cmpsl
push
sti
mov
jae
pusha
aam
mov
fisubs
cmp
jbe
and
imul
adc
pop
sub
lods
mov
xchg
in
es
pop
push
filds
cmp
pusha
and
bound
repnz
dec
fdivs
pop
sbb
push
push
jp
stos
cli
ret
movsb
les
scas
pop
int3
enter
inc
inc
jp
roll
je
push
mov
push
jb
mov
mov
add
test
addr16
push
cmp
adc
ljmp
iret
add
jne
mov
test
std
lods
and
cmc
not
loopne
mov
pop
sbb
and
mov
cmp
data16
data16
js
jns
stos
in
jl
scas
fbstp
cmp
sub
enter
cmpsb
lods
imul
outsl
push
cltd
add
mov
inc
sbb
out
pop
mov
loopne
cmp
pop
dec
adc
push
dec
jle
dec
add
bound
jno
xchg
push
mov
gs
mov
shll
popf
pop
adc
xor
xor
fnstcw
mov
pop
push
es
mov
dec
andb
dec
or
hlt
fcoml
insb
push
xchg
pop
idivb
js
loope
fistps
in
pusha
push
xchg
jae
xchg
adc
and
mov
call
xor
inc
adc
pop
mov
fwait
sbb
cmp
mov
das
inc
pop
loop
sbb
ficoms
movl
vpand
negl
bound
lea
sbb
pop
mov
fimuls
pusha
test
out
out
mov
mov
mov
mov
lock
clc
fistps
mov
pop
cs
shr
dec
sbb
outsb
inc
cs
out
cmpsl
sahf
call
outsb
xor
inc
xlat
dec
lds
loopne
mov
sub
push
mov
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
jmp
ffree
les
xchg
sub
push
addr16
sbb
jle
jbe
jle
sarb
stos
js
xor
call
sub
dec
inc
xorb
adc
test
dec
cmp
aas
jmp
push
cmp
adc
inc
pop
sub
mov
ror
jbe
mov
sub
je
je
fdivp
jp
popa
mov
sbb
notb
loope
daa
sub
pop
clc
sub
adc
jno
or
lods
pop
add
push
in
outsb
jbe
iret
leave
popf
xor
sbb
add
push
mov
lret
pop
mov
push
and
in
sub
movsl
add
dec
gs
inc
cmp
xchg
mov
push
mov
das
hlt
cmpsl
dec
jl
lret
jne
jno
sub
jnp
lret
push
sbbb
fisubrl
call
push
cwtl
push
jb
pop
inc
mov
pop
fs
out
fbstp
push
movsb
popf
cmp
or
cmpsb
addr16
jp
lods
insl
out
test
push
sti
ds
loope
in
loopne
lea
sbb
jo
into
pop
movsb
pop
sbb
les
mov
pop
ljmp
lret
xor
dec
jns
std
xor
and
je
lcall
mov
mov
into
jnp
mov
mov
xchg
repnz
mov
sbb
mov
pop
out
jae
aaa
xchg
xchg
repnz
mov
jl
pop
sub
sub
adc
sub
bound
cmpsl
scas
push
xchg
mov
inc
ljmp
loope
xor
mov
aas
push
fcmovnb
push
inc
cmp
pushl
jbe
cmp
int
lret
ja
jle
push
sub
inc
cmp
cmp
sbb
xchg
orl
lret
hlt
rcrb
add
xchg
es
shll
pop
mov
out
and
jb
mov
pop
hlt
sbb
xor
pop
dec
sub
fwait
xchg
mov
test
out
pop
push
push
mov
lahf
sbb
repnz
pop
xchg
lcall
ja
inc
mov
adc
add
adc
test
inc
jmp
iret
xor
dec
cwtl
sub
add
dec
pop
addr16
sbb
cmc
data16
cmp
pop
std
bound
rcrb
iret
sahf
outsb
add
push
test
push
pop
int3
scas
int3
lret
enter
fistl
pop
std
jns
ljmp
jns
icebp
stc
cmp
jge
sbb
into
adc
jl
add
push
out
lret
out
popa
mov
cmc
shll
and
adc
ljmp
ret
inc
push
aam
push
or
sub
mov
jbe
xchg
xchg
scas
add
loop
mov
push
xor
sahf
xchg
ret
insb
add
mov
scas
mov
movsb
pop
and
movsb
ja
inc
lods
cmpsb
inc
mov
mov
mov
mov
mov
xor
add
mov
mov
jmp
mov
inc
inc
orb
data16
mov
ror
jle
jge,pn
jle
popa
cmpsb
fsubl
xchg
mov
lock
jb
jbe
stc
mov
je
push
dec
mov
dec
imul
xor
sahf
sub
aad
push
in
dec
jns
loope
ss
or
ret
in
cltd
inc
inc
popf
mov
les
arpl
push
or
or
add
movsl
rcrl
jg
icebp
lahf
adc
xchg
ljmp
sub
stos
inc
loop
mov
dec
jno
ficompl
mov
jae
or
mov
adc
and
mov
push
imul
sbb
mov
mov
xor
and
jne
lods
in
stos
push
xchg
jae
sbb
jecxz
xor
jns
mov
repnz
add
pop
mov
scas
jb
jno
push
insl
inc
movsl
add
xor
cld
clc
jecxz
dec
out
call
and
lods
jno
mov
jae
or
pusha
and
lret
add
loopne
and
loop
sti
sub
dec
xchg
fmull
inc
dec
lods
cld
mov
mov
or
arpl
jmp
lret
fwait
inc
in
outsl
mov
gs
cmc
mov
xchg
cwtl
cmp
add
dec
and
add
adc
push
dec
push
lcall
push
fwait
pop
mov
pusha
gs
enter
cmp
imul
mov
cltd
mov
adc
loope
cmp
xor
dec
icebp
scas
call
adc
movsb
jo
pop
jge
mov
jo
push
lahf
call
jnp
fsubrp
icebp
and
push
jns
jge
lahf
adcb
ror
shrl
in
jmp
popa
inc
bound
mov
mov
andb
mov
jno
sti
imul
lds
pop
das
xor
popf
loope
popf
push
mov
imul
ficomps
or
filds
push
leave
mov
adc
ja
push
out
sub
clc
push
cmpsb
in
ja
fdiv
push
shlb
push
clc
aas
fistl
popa
iret
lcall
int
add
sbb
cmp
adc
pop
cwtl
cld
jo
mov
pop
add
bswap
sbb
fidivrl
jo
cltd
shr
dec
repnz
push
inc
rorl
ja
mov
mov
and
pop
cmp
add
pop
pushf
js
aaa
sahf
xor
cmp
cltd
insl
popf
bound
out
pusha
jno
cmpl
xchg
rorl
inc
xchg
pop
or
insb
repz
lea
loopne
mov
insl
push
leave
lea
int3
lret
add
test
mov
lret
push
fimull
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
push
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
push
pushl
pushl
pushl
call
cmpl
jb
mov
mov
add
xor
cmp
jne
mov
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
mov
mov
sub
mov
push
inc
mov
orl
xor
cmp
movl
je
mov
mov
sub
imul
mov
and
mov
sub
sbbl
xor
movl
cmp
movl
jne
mov
xorl
add
movl
jmp
sbb
mov
adcl
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
sbb
movl
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
adcl
movl
mov
subl
push
adc
mov
xor
add
mov
add
mov
and
mov
subl
push
push
test
movl
je
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
push
pushl
push
pushl
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
xorl
mov
movzbl
sbb
mov
imul
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
add
add
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jb
mov
mov
sub
mov
xchg
mov
xor
sub
xor
movzwl
or
mov
or
mov
sbb
mov
or
mov
mov
xor
mov
xor
xorl
xor
movzbl
or
jmp
adc
addr16
clc
jno
inc
xor
xor
scas
cmp
cmpl
mov
push
sbb
jle
mov
test
push
jmp
push
stos
fmul
dec
adc
cmc
pushf
insb
cmp
mov
pop
cmp
jo
adc
loope
roll
mov
loop
dec
pusha
jbe
sbb
dec
iret
jb
pop
add
jnp
movsb
sub
cmovbe
mov
mov
push
sahf
add
lret
insb
dec
aam
sbb
xor
fldenv
add
sbb
jbe
mov
fildll
addl
jecxz
lret
xor
sub
andl
insb
mov
outsb
xlat
fisubrl
pop
mov
pop
aaa
sahf
shll
dec
ljmp
adc
pop
jne
pop
and
xchg
adc
xorl
aad
and
push
rcrl
data16
scas
pop
push
xchg
push
mov
push
out
lock
pop
aaa
int3
and
ljmp
add
sbb
sbb
test
xchg
pushf
mov
adc
mov
ds
mov
adc
xchg
dec
int
lret
mov
mov
mov
je
mov
andl
xor
orl
add
movl
cmp
movl
jne
pushl
subl
call
mov
add
mov
add
mov
mov
mov
mov
and
mov
subl
xor
add
movl
cmp
movl
je
sbbl
pushl
pushl
movl
call
xorl
mov
orl
mov
adcl
mov
addl
xor
add
movl
cmp
je
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jb
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
mov
add
lea
mov
push
pushl
jmp
add
in
jecxz
icebp
adc
push
pop
js
lods
mov
and
jle
add
lods
pop
sbb
stos
lcall
ret
nop
jp
or
and
leave
loope
cmp
fsubr
jg
fildl
mov
mov
and
cmp
lods
push
testb
jo
pand
xchg
jmp
or
xorl
and
andnps
sbb
adc
repz
adc
inc
insl
sbb
xchg
dec
push
lods
mov
and
loop
rcrb
cmpb
test
jae
pop
adc
outsl
lods
ret
or
adc
mov
in
jmp
lret
loope
cli
in
out
xor
stos
ss
shrl
cltd
cmc
fsubp
cmpsl
lods
loopne
add
xchg
xchg
and
xchg
cmp
push
inc
outsl
stos
and
dec
xchg
leave
test
mov
out
filds
test
push
jecxz
das
bound
jmp
or
icebp
data16
xor
dec
mov
lods
loope
es
jmp
stos
aas
or
dec
inc
lea
xchg
fsubl
into
lds
or
sbb
decl
clc
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
jmp
aad
fstps
push
fsin
jne
push
xor
jle
and
jle
adc
and
jnp
pop
xor
ret
fwait
loope
scas
dec
mov
in
pop
arpl
out
mov
sub
mov
fstp
stos
inc
das
insb
and
sarl
cli
adc
xchg
ret
push
dec
daa
jb
mov
and
push
lret
rcrl
subl
mov
popl
loopne
lcall
enter
cmp
or
and
stc
mov
imul
xchg
add
mov
inc
stos
sub
ret
pop
imull
jge
int
pop
cmp
pop
ja
pop
popf
sbb
lcall
scas
add
cli
inc
and
icebp
dec
dec
adc
test
int3
mov
sub
ljmp
push
in
sbb
sti
divb
imul
inc
mov
int
pop
popa
jle
xchg
sbb
cld
mov
add
sbb
jl
xlat
push
mov
sbb
add
adc
cld
stc
sbb
stos
loopne
pusha
push
frstor
hlt
fisubl
pop
stos
sti
call
xlat
les
inc
cld
xor
jmp
mov
add
mov
mov
test
je
mov
push
jmp
dec
xchg
mov
jae
out
push
mov
lea
and
jle
fucomip
aaa
sbb
push
cmp
cltd
add
pop
and
inc
and
movsb
xor
mov
add
push
mov
inc
std
xchg
xchg
jo
push
aad
add
movsb
xor
sbb
and
or
cs
data16
inc
mov
mov
inc
shrb
fsubl
cs
xchg
jecxz
loop
adc
add
cmp
arpl
aas
cltd
push
cltd
cwtl
lock
jmp
or
iret
pop
inc
loope
xorb
xchg
cmc
fstp
int3
imul
lods
cld
dec
loop
and
aas
mov
leave
in
iret
sbb
into
fstpl
sbb
fsubrl
xchg
insl
pop
gs
iret
mov
add
std
cmc
push
insl
or
repnz
cmp
push
daa
xchg
outsb
cld
into
sbb
fs
in
subb
fsubr
push
dec
lock
ja
inc
andb
bound
jecxz
sub
mov
jl
adc
mov
pop
xor
es
add
loop
ret
ds
push
dec
pop
xchg
sub
jmp
adc
jae
jno
je
adc
push
shl
jb
mov
and
jle
out
out
xlat
dec
cld
push
out
push
sub
xchg
cmp
test
add
inc
mov
imul
mov
push
fldl
sbb
cmpsl
daa
aaa
mov
sbb
jl
fs
ss
add
loop
imul
cli
xorps
mov
push
dec
mov
push
fdivr
jge
adc
pushf
add
jmp
push
rcl
dec
js
sahf
push
fcmove
sbb
sub
loopne
xor
xor
sbb
add
pop
lods
mov
mov
xchg
push
push
sbb
jno
and
jmp
ret
mov
pop
sbb
jmp
and
cmp
ljmp
cmp
pop
ljmp
push
push
or
mov
cs
sahf
les
dec
in
sub
add
ss
xchg
or
mov
sbb
dec
adc
cmp
cmp
inc
psubsw
mov
adc
mov
pop
hlt
shlb
mov
sbb
cmc
cmp
pop
scas
mov
imul
lret
jmp
mov
jo
mov
gs
jle
fisttpll
jle
cmp
mov
jne
inc
jo
icebp
xor
arpl
pop
mov
dec
es
insb
ficomps
mov
fwait
out
in
out
loop
std
into
inc
jns
pusha
add
ja
pop
mov
pop
loopne
mov
pop
mov
add
pop
call
mov
fiaddl
xchg
aad
sub
into
fmuls
stos
enter
ja
cltd
adc
mov
out
push
test
lods
fldt
add
pop
pop
adc
iret
ret
jns
add
insl
test
je
mov
aam
jno
xchg
mov
rcrl
push
add
sub
lret
add
sub
leave
cmc
dec
push
add
mov
dec
into
xor
xchg
adc
lahf
scas
imul
cmpsb
cmp
fidivs
sub
jle
sbb
push
cwtl
or
repnz
rcll
sub
push
pop
jp
adc
mov
ss
mov
aam
cli
js
mov
push
mov
mov
sarb
orl
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
jmp
fsubs
imul
pop
inc
orl
or
dec
scas
aas
aad
mov
out
idivl
shl
or
pop
mov
xor
xchg
ja
jo
outsl
mov
add
push
xlat
insl
adc
xchg
push
pop
jp
pop
andl
mov
mov
lcall
shll
insb
popa
push
pop
dec
sub
pop
push
test
or
loopne
out
fldl
out
dec
pushf
out
cmp
push
xor
out
inc
jp
add
in
xor
add
pop
pop
dec
addr16
mov
cli
mov
imul
lahf
bound
daa
stos
sbb
jle
test
cmpl
push
je
or
imul
sarb
roll
cmp
movsw
mov
xchg
ljmp
cmc
dec
shll
jl
loop
leave
fucomi
mov
lret
adc
dec
imul
das
xor
xchg
xchg
mov
out
sub
scas
in
add
sub
mov
lcall
aam
or
ds
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
jmp
cmpsl
scas
and
stos
jp
mov
jbe
or
and
jle
loope
push
mov
ret
popf
xchg
xorb
mov
ds
aaa
clc
syscall
jge
mov
sbb
jns
and
mov
scas
mov
in
xor
xor
jl
and
ret
mov
aad
frstor
mov
repnz
notl
jecxz
rorb
test
aam
cmp
cmp
rcrl
test
out
mov
out
sub
xchg
xor
pop
pop
mov
fmul
mov
cmp
cmp
sti
mov
jmp
ret
adc
dec
pop
adc
mov
movsl
cltd
pop
jno
movl
jae
push
adc
divl
jmp
cmp
mov
aad
sub
nop
or
bound
repz
inc
jae
add
jge
push
cltd
cmp
adc
inc
mov
xor
out
fisttps
addr16
mov
aad
fcos
cmp
gs
push
mov
int
js
pop
shll
mov
mov
or
adc
roll
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
jmp
lcall
jno
insl
add
pop
xchg
jle
and
jle
ss
popa
sahf
pop
movsl
enter
xor
stos
nop
sti
inc
xchg
jmp
stc
dec
and
or
mov
mov
dec
mov
adc
iret
or
shll
loop
sub
mov
out
sub
in
jae
call
mov
lds
add
shl
or
ret
sub
pop
in
dec
adc
dec
pop
stc
inc
push
popf
mov
xchg
fiadds
andl
push
test
add
add
jg
gs
hlt
imul
xchg
pop
outsb
sarl
jnp
ret
loope
sbb
sub
sub
pop
fcmovnb
jo
into
arpl
orb
aaa
sahf
mov
pop
adc
push
xchg
lret
pop
int
out
cs
into
jle
cmp
mov
mov
xchg
dec
sbb
das
mov
xchg
inc
into
dec
jae
loope
jl
dec
rorb
cmp
or
cld
jmp
sub
data16
jbe
xor
cmp
mov
push
adc
xchg
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
loop
inc
out
fisttps
jecxz
in
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
cld
add
test
loop
ljmp
fsub
add
mov
add
add
mov
inc
push
fisttps
test
out
shlb
jmp
fildl
inc
jle
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
rorb
add
add
xor
mov
cld
jle
or
add
push
add
mov
decl
add
inc
orb
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
push
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
fwait
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
das
mov
mov
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
lret
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
enter
xor
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
mov
test
clc
pushf
inc
cmp
pushf
inc
mov
lock
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
fwait
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
fwait
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
in
push
mov
gs
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
fwait
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
gs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
int3
lea
push
cmp
pushf
pop
lods
incl
mov
rcrb
test
inc
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
fwait
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
in
push
mov
gs
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
scas
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
fwait
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
and
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
fiaddl
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jle
inc
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
jmp
inc
push
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
lret
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
loope
sub
inc
loope
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
out
inc
aas
jmp
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shl
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
pushf
add
rcr
inc
add
add
out
inc
inc
sub
dec
sub
inc
fnstcw
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
ss
add
add
add
add
movb
or
dec
lea
or
movsl
fiadds
jae
or
in
fwait
inc
xor
pop
inc
shl
inc
sub
inc
add
add
out
clc
inc
ret
inc
mov
leave
and
add
mov
sbb
sbb
stc
test
lea
mov
dec
sarb
add
inc
ljmp
or
jge
mov
clc
enter
lea
mov
mov
in
cmovne
jmp
inc
mov
sbb
mov
add
in
add
sub
add
jle
leave
movl
inc
add
inc
out
stc
int3
jb
xor
or
dec
mov
movb
loopne
inc
lea
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
test
jne
orl
jmp
inc
jne
mov
mov
shlb
push
mov
gs
add
inc
dec
int3
mov
jl
add
inc
mov
add
add
inc
or
inc
in
fsub
inc
add
add
call
pop
test
dec
jmp
pushl
loopne
movl
push
incl
mov
cwtl
movl
sbb
rorb
inc
rorb
test
add
add
push
add
mov
incw
add
xor
push
cli
popw
push
xchg
sbb
test
callw
adcl
mov
mov
push
fsubl
dec
inc
mov
lret
fistl
call
mov
jmp
in
lock
mov
xor
add
stos
data16
incl
data16
inc
shlb
add
addl
mov
add
push
lea
addb
jge
mov
rol
mov
rorb
orb
test
push
mov
orb
push
xor
aam
test
cmp
data16
dec
test
xor
lahf
mov
mov
data16
sbb
dec
mov
mov
add
jne
test
jne
sti
sbb
cld
jmp
inc
mov
data16
push
incl
test
sbb
lock
pushl
xorb
add
xor
movw
mov
sbb
mov
add
add
xor
inc
add
add
inc
jmp
addl
or
jmp
push
in
test
xor
mov
mov
push
add
decl
add
decl
movsl
add
add
push
xor
xor
mov
push
push
jne
mov
sbb
jne
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
sbb
sbb
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
call
add
orb
ret
incl
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
cld
or
dec
incl
push
add
mov
orl
add
push
xor
inc
mov
push
incl
inc
add
addb
mov
lea
je
decl
call
mov
hlt
call
mov
cwtl
mov
mov
addl
mov
inc
jmp
ljmp
mov
and
cmp
pushf
pushl
mov
add
enter
add
adc
add
mov
xor
jmp
mov
in
inc
or
decl
jne
mov
mov
lock
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
sub
push
lea
jne
incl
jnp
mov
fs
sbb
out
or
ret
inc
decl
test
clc
lcall
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
sbb
addb
call
xor
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
xor
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
rdmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
fwait
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pushf
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
fwait
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
push
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setnp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
decb
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
loopne
cmp
inc
daa
loopne
in
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
in
add
add
and
fs
incl
jle
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
fwait
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
add
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
popa
data16
into
gs
add
ret
add
add
add
cmp
add
into
ret
pop
adc
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
ss
fs
mov
je
xor
mov
ss
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
test
clc
test
cmp
fs
or
add
lret
xor
pushf
mov
ret
pop
dec
mov
push
add
xor
cmp
je
mov
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
cmp
add
lret
lock
clc
inc
lret
cmp
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
fwait
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
fwait
fwait
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
fwait
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
sub
test
clc
inc
add
hlt
leave
test
clc
inc
push
cmp
rorl
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
pushf
xchg
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
pushf
mov
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
fwait
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
pushf
popa
push
dec
inc
mov
clc
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
rcll
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
subl
mov
xor
pushf
mov
clc
add
mov
adc
inc
xor
jmp
mov
loopne
inc
mov
mov
nop
roll
mov
mov
dec
push
mov
xor
mov
mov
iret
xor
add
mov
dec
mov
mov
mov
mov
xor
mov
clc
enter
mov
lock
mov
cmp
rol
enter
inc
adc
inc
clc
xor
add
mov
roll
add
push
mov
fsubr
inc
mov
adc
add
inc
test
cmp
pushf
nop
movl
clc
add
add
or
dec
ret
push
inc
dec
mov
mov
jne
mov
call
mov
mov
clc
mov
xor
adcl
inc
push
mov
clc
incl
mov
clc
rolb
je
mov
jne
lea
mulb
decl
fadds
inc
jmp
mov
roll
mov
lock
dec
ret
mov
mov
mov
fadd
enter
inc
cld
mov
xor
add
sub
xor
pushf
add
or
jne
clc
mov
call
jmp
mov
xor
xor
enter
clc
inc
inc
cmp
pushf
jne
mov
clc
dec
out
dec
mov
lea
cmp
lea
mov
cld
iret
mov
jmp
test
je
mov
fdivr
movl
lock
inc
lock
lret
imul
testl
dec
mov
fmuls
fmuls
enter
inc
dec
xor
add
mov
inc
inc
push
mov
lock
mov
fadds
rol
test
dec
push
decl
push
mov
add
cmp
add
loopne
add
dec
xor
pushf
mov
cld
iret
test
mov
in
dec
add
add
dec
mov
fmull
add
testl
test
add
add
mov
cld
mov
hlt
mov
add
cmp
add
mov
mov
call
dec
add
cmp
cld
iret
mov
dec
push
lea
mov
call
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
lock
iret
rorl
inc
mov
iret
add
xor
mov
or
dec
shll
cmp
fmull
test
dec
dec
xor
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
sti
or
cmp
je
mov
ret
or
call
add
mov
add
cmp
mov
xor
mov
add
roll
cmp
call
add
mov
xor
sbb
cwtl
enter
inc
decl
fadds
rorl
inc
xor
mov
or
inc
rcll
mov
xor
jb
add
shll
mov
xor
add
repz
inc
mov
xor
inc
mov
mov
jne
mov
test
inc
mov
mov
lea
xor
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
push
xor
enter
inc
add
cld
test
fwait
inc
xor
pop
push
incl
in
mov
push
inc
cmpsl
mov
or
add
add
add
icebp
je
mov
cld
rol
ret
add
lea
cwtl
jne
clc
or
incl
cmp
incl
lcall
or
push
mov
test
inc
mov
imul
dec
mov
push
dec
push
xor
add
push
incl
lods
inc
inc
mov
xchg
or
call
adc
orb
inc
inc
add
mov
call
push
push
dec
jo
push
dec
mov
cmp
cmovne
call
mov
lcall
leave
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
fwait
mov
jge
decl
