push
mov
sub
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
or
mov
mov
subl
mov
sub
mov
xor
movl
add
movl
sbb
mov
push
movzbl
sbb
mov
push
mov
xor
push
or
mov
add
andl
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
mov
sub
add
movl
movl
movl
orl
movl
mov
subl
xor
add
mov
sbbl
movl
movb
mov
xorl
xor
add
jmp
jb
fsubs
lock
push
in
or
jle
jle
jg
jle
xlat
cmp
rol
pop
add
add
add
xor
rcrb
adc
mov
push
out
mov
es
lods
fiadds
data16
outsl
or
pushf
js
inc
stos
push
sub
mov
stos
push
roll
jmp
mov
dec
out
inc
call
mov
and
jnp
ret
xchg
and
jmp
ret
lock
and
add
adc
xor
or
fisttpll
ds
or
fst
or
pop
fstps
jno
inc
dec
aaa
adc
sarl
dec
call
lret
shl
or
punpcklbw
and
pop
jo
push
popa
xchg
sub
popf
push
popl
pushf
xchg
aaa
jb
arpl
fbld
out
sbb
dec
cmp
sub
jb
sahf
stos
rolb
or
pop
mov
jns
addb
or
addr16
jns
in
lret
and
add
xchg
in
jbe
sub
out
orl
pop
cs
pop
jbe
rcr
dec
fs
jle
call
push
fdivrs
jp
dec
jnp
xor
out
in
and
cmp
inc
dec
in
add
mov
imul
fwait
mov
jp
pop
leave
out
push
push
cli
pop
jne
xor
test
inc
nop
or
fnsave
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
orl
jmp
dec
push
push
push
xor
int
cli
jg
jle
jg
jle
inc
loope
jne
insb
inc
mov
lods
pop
mov
push
rcrl
adc
mov
call
inc
push
nop
scas
jnp
xlat
sbb
outsb
cwtl
sbb
out
or
cltd
push
and
dec
pop
adcb
xor
jl
repz
xor
xchg
sarl
dec
scas
fstpt
jecxz
pop
je
jge
cmpsl
imul
xor
fsubrs
ror
notb
push
dec
cli
xor
repz
dec
repz
in
cmp
mulb
sbb
es
imul
mov
daa
lea
shll
fcoml
push
in
xor
pop
xor
jb
decb
cs
mov
mov
push
mov
mov
scas
adc
xor
into
push
pop
or
divb
push
sbb
mov
mov
push
inc
sti
ret
jo,pt
in
int
sti
sbb
pop
inc
int
cld
add
movw
adc
iret
aam
mov
sub
sti
testb
add
push
into
pop
movsl
inc
int
adc
mov
inc
cmpl
out
lock
cli
cmpsl
jns
mov
cmp
mov
cwtl
mov
aaa
pop
fisttpll
arpl
adcl
mov
andb
inc
sbb
xor
xor
neg
jmp
cli
fcompl
jno
cmp
jne
jge
jle
jg
jle
into
shrb
insl
xchg
stc
out
imul
andb
mov
shll
call
nop
pop
mov
mov
cmp
int
add
into
and
ret
add
test
fdivl
bound
push
jnp
cmc
shlb
lea
ja
movsl
fidivs
cmovs
into
jnp
or
cmpsb
cmp
cmc
cmp
jae
fidivs
leave
pop
xor
idivb
shl
icebp
rcrb
xchg
pushf
fstpl
pop
and
arpl
popa
sub
movsl
mov
adc
add
xor
pop
xor
jg
push
les
sub
iret
push
int3
in
jns
pop
mov
jge
fdiv
mov
outsl
fidivs
loope
shl
jl
fdivrl
push
fs
data16
mov
add
sub
repz
sub
insb
and
lcall
mov
and
in
loop
test
push
lcall
dec
loop
test
data16
sbb
lahf
pop
js
jmp
negb
jnp
shl
mov
jp
adc
sub
rcl
xchg
cmpsl
test
or
mov
mov
cmpsb
in
dec
pop
dec
mov
loope
inc
and
aaa
xorl
push
rcl
sub
repnz
imul
idivb
int
mov
mov
xor
sbb
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
xor
sbbl
add
decl
mov
lea
mov
movzwl
and
mov
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
xor
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
jmp
or
out
jecxz
icebp
int
add
add
cmpb
cli
jg
jle
adc
mov
pushf
jno
pop
test
dec
fldenv
aas
add
push
std
sbb
pop
sbb
inc
lods
arpl
scas
cmp
dec
stos
daa
in
in
push
add
lods
xor
cmpsb
fidivrs
jmp
popf
push
pop
daa
push
jp
push
mov
fcoms
outsl
dec
fistpll
mov
faddl
in
mov
mov
mov
sarb
bnd
shlb
subb
xlat
scas
outsl
int3
aas
icebp
xor
imul
fdivp
cmp
cmp
vpmacsdql
add
mov
xchg
icebp
fwait
adc
lret
cld
push
pop
push
data16
leave
sbb
not
and
mov
jg
mov
popf
clc
jmp
inc
xor
movsb
ret
repnz
pop
xor
and
addr16
and
je
and
dec
adc
push
xchg
dec
xor
mov
mov
stc
xor
xchg
and
pop
adc
pop
xlat
add
das
jge
inc
hlt
scas
sarl
rclb
aas
outsb
fs
inc
xlat
inc
push
and
xor
inc
out
mov
divb
ss
dec
sbb
repz
xchg
jl
jns
dec
mov
fsubr
push
gs
push
pushf
repnz
das
add
adc
and
and
pop
push
push
jg
jl
or
and
push
sub
add
add
jmp
push
dec
and
fs
js
jle
jg
jle
push
push
and
arpl
das
sbb
icebp
jle
cld
inc
mov
sbb
dec
mov
iret
movsb
cmp
mov
rep
pop
xchg
imul
pop
imul
sub
push
mov
cmpsl
xor
fistps
ret
push
cld
push
inc
popa
jo
sti
mov
rclb
negb
mov
add
ror
clc
ljmp
mov
pop
inc
dec
cmp
mov
sub
push
jl
shr
cld
push
xchg
fcomp
dec
add
je
mov
aam
xor
ja
rorb
fs
scas
xchg
std
imul
rcll
push
stc
pop
sub
cld
cmpsb
stos
fs
mov
test
aam
dec
mov
stos
test
popf
or
jne
add
xchg
enter
cmp
filds
cmp
inc
repnz
in
ja
aad
fnstenv
pusha
je
xchg
pmuludq
and
push
mov
add
or
fnstenv
adc
repz
sub
add
fucomip
clc
pop
scas
fcomps
dec
push
mov
je
je
icebp
cmp
flds
jg
cmp
leave
add
jl
out
ret
iret
or
sub
sub
inc
pcmpgtw
inc
mov
clc
outsl
negl
pop
mov
mov
xor
add
mov
mov
mov
xor
jmp
pop
xor
mov
mov
mov
lahf
cmc
xchg
adc
jle
cli
jg
jle
mov
test
movsb
sbb
push
enter
xchg
cli
mov
xor
fidivl
cmpb
inc
add
pop
xor
jl
jmp
inc
cmp
mov
je
add
jp
or
scas
call
ds
loopne
push
adc
sub
jo
xchg
arpl
ja
popf
add
xor
mov
imul
sub
ja
mov
cmp
add
and
stc
sbb
adc
xchg
xor
mov
push
or
mov
dec
add
dec
mov
mov
mov
shlb
push
hlt
out
jle
mov
test
pop
mov
add
mov
pop
jae
jns
adc
jg
scas
lods
mov
into
sub
xchg
cmp
mov
jbe
loopne
push
arpl
in
inc
mov
out
jp
pop
out
jecxz
jg
dec
scas
or
xorl
sub
inc
loop
dec
jnp
pop
pop
outsb
cmpsb
xchg
sbb
sub
mov
or
push
fidivl
test
cwtl
pop
sub
or
push
fisttpl
iret
stos
sub
pushf
adc
xchg
aaa
or
movsl
in
mull
push
push
call
nop
lret
mov
into
and
lret
test
jns
clc
nop
je
sub
xor
lock
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
jmp
mov
les
loopne
mov
xor
and
pop
jle
cli
jg
jle
push
cmp
int3
add
fistl
inc
ljmp
jp
inc
and
outsb
xchg
in
push
int
aad
test
ror
jl
xchg
shll
bnd
leave
out
inc
ss
and
aas
movsb
jb
dec
xchg
leave
push
outsl
pop
cmpsb
fnsave
mov
clc
inc
fcoms
push
into
jge
xlat
in
mov
repnz
insl
pop
popf
push
sub
hlt
cli
xor
xor
lret
fsubl
add
in
xchg
cmc
repz
sti
inc
inc
adc
ret
outsl
mov
rcrl
sar
into
jge
mov
je
xchg
rorl
mov
mov
pop
and
enter
push
fisttps
outsb
jo
add
rorb
cmc
sbb
jne
add
jnp
inc
mov
aas
sbb
add
sti
loopne
sbb
adc
sub
push
push
nop
mov
cmc
sti
or
mov
cs
xchg
stos
cmp
repz
pop
adc
ljmp
sub
sbb
lret
xchg
cmp
lea
sbb
test
sahf
int3
testb
lods
push
cmpsb
mov
lret
gs
arpl
arpl
push
test
pop
sarl
jno
xchg
dec
and
fs
pop
push
shl
in
test
or
mov
sub
push
je
lea
push
mov
xor
add
jmp
pop
and
aas
jno
imul
xchg
add
jle
jg
jle
cmp
xor
push
mov
inc
push
or
in
faddp
fnstsw
lds
sbb
iret
adc
insb
xor
adc
inc
fs
lock
aam
sub
push
in
xchg
sahf
jl
dec
jbe
and
xor
pop
jae
ja
out
ja
fdivrl
mov
int
loopne
movsl
mov
push
loopne
pop
and
in
and
sbb
push
pop
and
daa
nop
aaa
pop
cmp
and
jl
cmp
dec
into
jg
pushf
lea
cmp
enter
jmp
push
inc
sbb
xchg
mov
loopne
sbb
mov
mov
sbb
fistl
test
sbb
cltd
xor
mov
inc
fucomip
fimull
fcmovbe
call
pop
pop
orl
sbb
mov
cmp
scas
mov
mov
shl
mov
or
push
jecxz
out
jmp
stc
aad
push
jmp
shll
pushf
jg
mov
mov
push
xor
faddp
nop
stos
je
clc
sub
inc
arpl
bnd
sub
popa
cwtl
jnp
sbb
cmc
mov
mov
pushl
in
lock
lods
cmp
dec
mov
pop
stc
jae
imul
call
add
pushf
add
add
dec
and
jno
push
mov
sub
js
push
add
cli
jg
jle
aam
mull
jmp
ja
and
mov
leave
adc
push
xor
lea
dec
repz
leave
bnd
fnstsw
stos
pop
push
in
subb
jb
nop
lods
push
decl
xchg
or
cmp
pop
frstor
lods
addr16
outsl
dec
xchg
test
lahf
adc
pop
mov
sub
push
mov
fsubrl
ljmp
and
cld
scas
sbb
sbb
and
ffreep
or
in
ret
je
mov
lret
in
hlt
mov
cs
sbb
outsb
lds
mov
test
pop
mov
arpl
add
pop
jg
dec
hlt
daa
in
jnp
push
mov
mov
popa
mov
adc
std
dec
cmp
imul
inc
mov
or
aaa
loopne
cmp
mov
inc
push
cli
mov
mov
mov
sbb
dec
dec
mov
arpl
adc
fdivl
mov
push
xor
adc
out
scas
lds
and
scas
or
xchg
inc
inc
imul
sbb
movsb
lahf
push
les
stos
movups
xchg
shrl
leave
add
xchg
pop
add
xchg
xchg
pop
sub
es
insl
mov
outsl
mov
xor
adc
pop
pop
cmovbe
inc
call
add
pushl
call
mov
cmpl
lea
mov
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
jmp
mov
bound
fadds
cli
out
sbb
lcall
jle
pop
adc
mov
ds
push
das
dec
daa
inc
les
popf
mov
aaa
jno
outsl
add
xchg
cmpl
rorb
jns
or
sbb
in
popa
jne
adc
mov
mov
inc
ret
les
or
cld
clc
add
movsb
or
addb
or
ljmp
leave
movsb
fcoms
cmc
push
cmpsl
xor
xor
sub
mov
test
negb
jb
ja
push
repz
mov
xor
xor
mov
repz
add
outsl
popf
adc
push
ss
sbb
lret
lret
lods
inc
push
clc
jge
lahf
cwtl
dec
cli
arpl
ljmp
pop
mov
mov
stos
mov
add
int
dec
call
sbb
jg
arpl
pop
or
cmp
sbb
inc
cmpl
add
mov
std
jge
push
cmp
mov
ficoms
mov
push
cmpsl
push
push
pop
inc
sarl
and
hlt
lret
loopne
jl
xchg
test
ret
roll
dec
test
mov
loop
xchg
and
sahf
xchg
imul
sahf
test
pushf
inc
orl
lcall
mov
push
push
push
out
sub
cmpsb
cmpsl
stc
aad
push
push
mov
mov
mov
mov
mov
mov
mov
jmp
push
shlb
push
stos
rol
lret
xor
add
cli
jg
jle
lds
fnstcw
inc
adc
icebp
and
subb
rcl
sbb
cmp
pusha
pushf
and
push
push
jb
and
fsub
ds
mov
lock
cmpsb
ret
sub
xchg
fnstcw
dec
jae
fs
dec
add
xchg
fldt
sti
jp
popf
into
xchg
ret
cmp
fwait
inc
lock
fyl2xp1
fiadds
fstpt
xchg
data16
push
push
mov
jne
lret
dec
mov
jae
and
lea
sub
pop
es
in
or
xor
push
mov
call
and
into
xchg
enter
das
jne
jecxz
lahf
hlt
push
fiaddl
push
sub
fcoms
iret
fsubrs
shlb
inc
jno
adc
fnsave
gs
fdivrl
sbb
divb
call
dec
jo
mov
pop
mov
pop
addl
push
push
sbb
iret
scas
pop
pop
enter
inc
and
and
lcall
in
in
stos
lret
mov
dec
fwait
insl
pop
mov
push
xchg
add
cmpsb
mov
adc
cmp
dec
mov
pop
add
push
insl
sub
xchg
mov
dec
cmp
pop
inc
sti
mov
push
into
or
std
fmull
push
inc
movsl
lods
adc
adc
fimuls
ljmp
cmp
sbb
movb
add
clc
mov
mov
mov
mov
mov
mov
mov
jmp
les
rorl
gs
fsubrs
push
jle
cli
jg
jle
fidivrs
jb
sahf
aaa
je
mov
sub
out
and
mov
repz
pop
aas
pushf
sbbl
and
jmp
lock
pop
hlt
mov
cwtl
ret
pop
es
cmp
xchg
lods
cmp
hlt
fisttpll
add
sbb
pushf
push
jne
shrb
int
rcrl
and
and
ss
pop
sub
xor
mov
jno
jg
mov
repnz
insb
fisttpl
cwtl
sub
push
or
add
jno
cmpsl
xor
insl
cmpb
enter
xchg
push
and
sahf
jle
stc
adc
fsts
or
jb
stc
mov
and
stos
mov
aam
add
addr16
pop
sbb
sbb
xor
in
adc
loopne
push
aam
mov
push
mov
daa
xor
addr16
or
mov
mov
les
lock
fs
mov
ret
inc
mov
subb
mov
push
adc
add
je
pop
les
dec
pop
sti
fldcw
ljmp
xor
shlb
fdivl
jbe
sbb
xor
add
fistpl
dec
in
aas
int
rolb
xor
sbb
add
sub
inc
mov
mov
mov
mov
mov
test
jmp
inc
push
jnp
or
push
adc
nop
dec
daa
sbb
xchg
cs
jle
jg
jle
jg
push
inc
inc
pushl
xchg
or
das
cmpsl
adc
pop
into
cmpsl
into
or
add
sub
in
xor
ljmp
lods
or
aad
sbb
fcoml
or
mov
inc
inc
adc
pusha
sarl
cmp
cmp
sub
pop
and
cwtl
cwtl
add
sub
sub
aam
mov
mov
loopne
das
lods
mov
ret
outsb
test
inc
jno
fcoms
les
lds
mov
out
inc
call
cmc
shll
call
push
mov
jg
popa
int3
sbb
inc
movsb
inc
adc
pop
lret
test
ljmp
out
adc
rcrl
test
xchg
cmp
jge
push
mov
pop
jb
cs
push
push
mov
aad
ficompl
dec
repnz
sarb
adcl
push
push
jge
lock
outsl
fs
cld
push
int
ss
push
xchg
mov
push
cwtl
or
rcrb
adc
ss
sbb
mov
add
push
cltd
lods
cmpsl
pop
mov
call
nop
fxch
inc
pusha
adc
out
ficomps
inc
xchg
sub
dec
and
clc
subb
outsw
fisubs
lea
cmp
or
test
ljmp
inc
xchg
push
dec
jo
dec
jo
xlat
jno
dec
pop
mov
cmp
int
mov
aad
dec
mov
inc
aam
test
add
add
add
jmp
or
lret
jecxz
jecxz
icebp
loop
mov
mov
lahf
out
stos
or
jle
insb
sub
adc
or
dec
inc
test
sti
test
mov
cmp
popf
punpckhwd
arpl
outsl
or
jns
movsb
adc
cmc
dec
add
mov
lock
lahf
sub
jmp
jmp
mov
mov
inc
lods
push
fisubl
cmp
mov
repnz
push
adc
aad
inc
inc
push
add
addr16
mov
dec
push
pop
mov
out
sub
or
icebp
xor
stc
cmp
lcall
lea
loop
fnstenv
repnz
push
inc
mov
bound
cmp
test
pop
loop
sub
lcall
arpl
lods
lea
dec
out
cmpb
mov
aad
stc
insb
outsl
stc
push
jl
and
mov
dec
testl
fmull
and
mov
je
jb
fdivrs
inc
lahf
std
push
jne
jbe
popf
xor
cmp
mov
mov
fstps
push
adc
popa
dec
jns
les
sub
push
lret
movsl
mov
or
nop
or
ja
jmp
sub
pop
xchg
push
add
movsl
sub
fs
mov
jle
lods
jae
cmp
stc
sub
mov
inc
pop
pop
dec
pop
jae
shl
xchg
xor
clc
loop
sbb
xlat
xlat
stc
cmp
dec
push
dec
addl
add
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
jmp
add
inc
dec
aas
cmp
out
andb
or
cli
jg
jle
jl
pop
shl
xor
or
cmp
in
into
add
fisubrs
or
lcall
cmc
aas
xchg
inc
out
sbb
push
jns
enter
lods
fmul
in
adc
imul
pop
push
js
mov
aad
cmp
aaa
popa
andb
fstps
xor
mov
add
fsubr
sub
aas
mov
in
xor
and
or
jns
das
insl
and
inc
xchg
mov
fimull
cmp
jb
jno
fildl
sarb
adc
sti
iret
mov
jg
inc
test
clc
int3
xchg
mov
insb
and
mov
int3
or
cmp
jmp
jne
push
xchg
inc
data16
fisttpll
or
and
lret
hlt
inc
cs
dec
daa
fwait
mov
cmp
adc
sub
sbb
int
sub
lahf
xchg
mov
std
xor
jp
xor
pop
sbb
dec
cli
push
ret
jne
int
mov
jne
and
in
jecxz
and
push
dec
dec
pop
mov
aam
js
mov
push
aaa
adc
push
loopne
call
outsl
cld
sarl
jle
into
out
je
pop
loopne
jb
cmpsb
stos
cmpb
and
ret
pushf
pop
rolb
les
popf
mov
inc
cld
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
jmp
jmp
xchg
push
arpl
nop
push
rorb
je
mov
jle
cli
jg
jle
dec
hlt
jl
test
lods
in
jne
bound
popf
loope
out
mov
imul
dec
pop
sbb
and
cmp
jl
cld
sahf
hlt
sbb
jp
cli
cmp
les
loope
aam
out
aaa
in
adc
mov
mov
outsb
dec
shrb
jo
inc
mov
ja
cmpsl
imul
popf
testb
mov
in
jl
push
call
cmp
out
sahf
dec
fs
or
fdivs
mov
adc
fidivl
add
push
outsb
push
and
cmp
jo
mov
aam
push
dec
mov
push
lds
sbb
adc
sar
ds
shll
out
outsb
js
adcl
scas
mov
iret
lahf
adc
cmp
push
sti
aaa
push
pusha
lcall
icebp
stos
jne
in
loopne
pusha
aaa
dec
faddl
jns
push
jns
sti
fwait
sub
sub
popf
jle
fs
jnp
incl
adc
sub
inc
fbstp
adc
icebp
sbb
adc
leave
in
stos
sbb
fisttpll
pop
jge
and
dec
aam
imul
inc
sahf
dec
scas
outsb
popa
std
pushf
adc
jns
add
mov
in
movsb
push
mov
dec
popf
add
sbbb
mov
xchg
push
xchg
push
outsb
dec
aam
inc
popa
fdivl
or
iret
push
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
push
pop
jmp
cmc
mov
icebp
insl
sbb
xchg
sub
push
jle
cli
jg
jle
xchg
in
in
shrb
cwtl
cmpsb
jnp
fdivrs
imul
push
mov
mov
or
add
pop
pop
add
leave
ljmp
pop
nop
push
dec
push
shrl
jno
mov
sub
xorb
enter
xor
sbb
push
lea
inc
imul
out
flds
ret
scas
push
mov
xchg
add
pop
pop
cmp
adcb
jle
push
mov
outsb
push
rclb
pop
sahf
cmp
mov
mov
jno
xorb
fistpl
hlt
mov
ret
test
jae
sti
incl
fsubl
dec
push
aad
mov
mov
gs
dec
dec
jecxz
dec
push
lods
mov
and
mov
repz
dec
xor
je
push
xor
std
test
pop
sbb
enter
scas
jno
pop
inc
repz
inc
jo
add
or
sbb
jb
fistpll
add
sub
push
stc
sub
imul
jmp
mov
inc
push
and
or
sub
mov
push
int3
insl
xchg
add
fdiv
xchg
push
xor
mov
out
pop
hlt
and
cs
xor
bound
aam
call
mov
mov
add
pop
jmp
add
mov
adcb
jb
pop
jle
cli
jg
jle
push
sub
clc
fcoml
and
pop
out
ja
scas
stc
sbb
out
ror
sbb
into
movl
xor
es
xchg
lods
clc
aas
mov
sbb
mov
jnp
loopne,pt
mov
and
repnz
jnp
das
xor
scas
lock
push
push
jmp
ljmp
dec
cltd
mov
mov
add
lods
rcrb
repnz
jmp
xor
imul
mov
dec
inc
add
mov
xor
jns
sbb
add
inc
xchg
shl
xchg
push
imul
jns
aad
ds
add
inc
ja
push
popa
push
xchg
sbb
xchg
in
add
test
or
rolb
cld
add
imul
pop
adc
das
mov
or
int3
sarl
mov
movsl
scas
push
rcll
stos
push
pop
jp
jne
lods
sar
inc
push
fld
jbe
hlt
arpl
adc
scas
movl
cmpsl
inc
scas
stos
sub
loope
pushf
xchg
icebp
test
loopne
jae
jae
shll
or
or
test
push
mov
mov
js
or
dec
imul
or
adc
xor
fadd
pop
call
dec
mov
pop
leave
ret
push
mov
sub
leave
ret
push
mov
sub
push
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
not
mov
xorl
mov
sbbl
movl
mov
add
movl
xor
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
decl
mov
xor
mov
mov
sub
imul
mov
add
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
and
mov
mov
sbbl
xor
add
not
mov
not
movl
movl
mov
adc
movl
adc
movl
movl
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
and
jmp
sbb
add
lock
icebp
mov
das
inc
adc
jle
imul
popa
mov
cmc
and
incl
mov
ja
add
movsb
ds
popa
adc
sti
inc
sub
inc
xchg
movsb
inc
test
icebp
jb
push
out
pop
aas
frstor
inc
mov
mov
mov
inc
cmp
and
in
lods
dec
je
inc
mov
imull
add
scas
scas
mov
xchg
lcall
add
lret
push
int3
mov
xor
jnp
mov
jne
sbb
push
icebp
jge
movsb
bound
adc
pop
cwtl
test
add
xchg
dec
xor
xchg
cmp
cli
dec
rorb
inc
sarl
cli
or
clc
mov
bound
push
mov
repz
lcall
je
pop
jne
test
mov
iret
repnz
ret
aam
shrb
jnp
dec
mov
in
add
into
inc
mov
pop
pusha
je
rcrl
add
and
inc
add
clc
fwait
mov
push
and
cld
loope
xor
pop
jle
dec
shlb
or
cmpsb
pop
or
xorl
jae
rclb
inc
jg
push
pop
xchg
jo
or
xor
mov
outsb
repnz
lock
lods
testb
xor
pop
sbb
mov
inc
addb
cmp
push
leave
cltd
push
aaa
scas
punpckhbw
int
push
subl
insl
cmpsb
ljmp
pop
push
jo
pop
mov
lret
les
push
imul
adc
cli
jg
dec
aas
cmpsl
jns
lock
add
outsb
push
stos
jo
fst
aaa
es
jns
sti
ret
test
repz
cmc
add
and
in
jg
jns
fistpl
pop
rcrl
sbb
xchg
ja
lods
or
pop
add
mov
stos
pop
mov
xchg
inc
xchg
mulb
jb
in
push
xlat
mov
mov
xchg
cwtl
push
mov
jns
std
sbb
xchg
out
in
mov
push
adc
data16
lea
inc
cltd
mov
repnz
cmp
sbb
mov
notl
aaa
jb
push
outsb
sbb
mov
jg
clc
cmp
test
push
out
fnstsw
stc
movsb
aas
mov
movsb
aas
mov
cwtl
out
push
xchg
ja
mov
inc
xchg
lret
inc
roll
sub
mov
iret
daa
addr16
xchg
gs
adc
xor
rcrl
shl
xchg
imul
or
stc
inc
fisubl
pop
mov
sub
lods
and
jg
adc
dec
adc
push
movsl
mov
cmp
sti
xor
or
cmp
xor
andl
xor
add
inc
mov
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
subl
add
movl
cmp
movl
je
movl
push
jmp
xorl
mov
sub
mov
sub
xor
mov
xorl
xor
movl
add
cmp
jb
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
mov
sub
mov
mov
xor
movl
cmpl
je
cmpl
jne
pushl
call
xor
xor
dec
mov
jmp
negl
xor
andl
xor
or
inc
mov
cmpl
jne
push
call
cmpl
jb
add
add
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
imul
mov
and
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
pop
cli
mov
jno
gs
or
scas
loopne
inc
mov
adc
pop
jl
jle
adc
ja
push
js
loope
and
loopne
sub
andb
xor
sub
call
arpl
iret
mov
ljmp
pop
lds
jbe
mov
mov
push
outsl
push
mov
dec
cmp
out
pop
out
sub
sub
jg
push
int
jmp
mov
in
or
add
mov
pusha
fcompl
enter
push
cmpsb
push
xchg
in
lcall
out
inc
popf
mov
iret
xor
add
loop
icebp
sbb
stc
pop
shll
lret
popa
int3
inc
daa
mov
fisubrs
ja
inc
add
pop
mov
mov
xchg
cmp
cmpsb
movsl
dec
aam
popf
cmp
shll
jnp
mov
ficoms
fistps
int
xchg
sbbl
jbe
bound
aaa
outsl
pop
subb
icebp
lods
les
int3
mov
adc
jle
mov
sub
fldcw
cmpsb
repnz
mov
std
add
jge
cmp
adc
pop
test
roll
push
sub
push
addr16
push
sbb
andb
pop
roll
fs
filds
das
aas
roll
pusha
fdivs
fcoml
dec
cltd
push
pop
mov
sub
xlat
or
dec
or
js
inc
pusha
push
adc
cltd
jecxz
jo
jle
push
push
mov
xchg
and
hlt
adc
insl
lahf
xor
and
inc
inc
lods
dec
xor
xlat
jo
xchg
cmp
in
mov
mov
dec
test
loopne
xchg
dec
xchg
mov
sub
jo
hlt
call
outsb
xchg
outsl
lds
jb
ljmp
inc
xor
pusha
std
sbb
mov
sti
popa
inc
into
pinsrw
and
rorb
enter
lret
test
sub
mov
fwait
cmp
jmp
adc
stos
xchg
mov
orb
push
cs
or
lret
movsb
cmp
into
fldl
or
inc
pushf
lds
add
lea
mul
into
mov
pop
jbe
pop
xor
repz
repnz
aaa
push
divl
push
or
idivl
mov
push
rol
mov
rcll
addb
add
fwait
or
add
arpl
andl
xchg
out
xor
cmp
cmpsl
dec
in
xchg
mov
call
dec
mov
or
mov
mov
push
insb
movsl
pop
jg
out
or
orl
lahf
daa
clc
imul
mov
fistpll
fimull
xchg
add
add
add
add
cld
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
jmp
mov
xchg
xorb
jno
cs
push
jle
pop
jl
jle
xchg
mov
mov
sub
sbb
mov
xchg
and
xor
adc
pusha
push
cld
cwtl
outsb
push
and
scas
ror
dec
sub
cmp
fistl
mov
push
faddl
xor
xchg
inc
jmp
or
sub
sbb
mov
jo
dec
out
pusha
int3
nop
push
mov
sub
add
push
gs
bound
dec
push
push
mov
repz
push
lods
in
add
mov
out
aad
mov
push
inc
call
shrb
sbb
adcb
pusha
adc
dec
pusha
or
adc
fidivl
rcl
push
xchg
jp
insl
pop
imul
mov
sub
iret
sbb
jg
outsb
rclb
js
mov
dec
pop
ja
es
push
js
dec
fidivl
xchg
mov
and
int3
mov
xor
jmp
xchg
sub
pop
les
ja
or
pop
push
outsb
lock
cwtl
movsb
mov
jecxz
scas
sbb
and
es
lret
cmp
data16
subl
dec
mov
outsl
popa
jmp
sbb
cmp
cmp
inc
repnz
ret
jle
pushf
call
adc
rorb
arpl
xor
insb
mov
mov
jb
sub
xchg
add
jecxz
mov
jae
test
cs
cmp
cltd
ljmp
xor
sub
dec
jmp
hlt
stos
xchg
mov
fidivrl
xlat
enter
es
xchg
pop
mov
mov
cld
xor
pop
outsb
sub
xchg
lret
add
sbb
cld
pop
out
arpl
lea
stos
ret
ret
xchg
jecxz
dec
push
cmp
data16
adc
mov
cmp
repz
fwait
push
enter
pop
adc
in
psrld
lea
cmpsl
daa
addr16
and
gs
add
adc
insb
and
xlat
xor
xchg
and
out
sarb
pop
rcrl
in
cmp
cs
cmc
mov
into
inc
xchg
in
ljmp
hlt
pop
inc
sbb
pop
popf
mov
mov
jg
xchg
sti
out
jecxz
inc
pop
pushf
aas
addb
popa
sbb
xchg
imul
sbb
jecxz
imul
aas
insl
inc
jmp
dec
dec
pop
add
or
xor
cmpsl
dec
es
pop
sbbl
sbb
pop
mov
pop
xchg
mov
dec
cmp
or
hlt
and
shl
in
les
inc
xchg
out
enter
scas
push
push
arpl
cmp
mov
jbe
mov
mov
jmp
mov
aaa
or
mov
subl
xor
lods
leave
je
jle
pop
jl
jle
lea
in
jns
daa
mov
pusha
ljmp
sbb
pop
in
jp
and
cltd
mov
add
push
push
dec
and
pop
adc
sahf
mov
iret
fbstp
push
mov
and
sti
adc
mov
je
or
adc
stc
shrb
ds
sub
pop
dec
mov
bound
or
push
lcall
inc
loope
js
rorl
fs
rorb
das
shll
inc
stos
out
inc
in
addr16
xor
int3
stos
cmpb
add
mov
sahf
cltd
fdiv
xor
in
out
mov
pop
xchg
fwait
sbb
pop
push
dec
adc
pop
nop
and
mov
lods
das
stos
push
jecxz
sub
adc
call
dec
shlb
std
mov
dec
mov
inc
add
cmp
add
lret
jb
iret
push
jne
add
les
xlat
jge
pop
insl
xor
fadds
inc
adc
jecxz
fiadds
mov
mov
and
adc
sub
cmp
scas
addl
mov
retw
popa
mov
mov
add
mov
push
inc
fwait
popa
push
mov
sbb
mov
mov
jae
sub
leave
jae
pop
inc
xor
aaa
out
push
and
xor
call
int
add
out
pop
scas
or
push
xchg
rcll
adc
inc
xchg
mov
sahf
jns
inc
pop
push
enter
fs
shrl
leave
xlat
pushf
xor
cmp
mov
jnp
dec
push
fidivs
xchg
cwtl
xchg
and
cmp
jle
ja
ljmp
push
int
iret
hlt
mov
out
push
xlat
addb
dec
sarl
ret
lea
and
cmc
mov
xor
stc
inc
jb,pt
arpl
loopne
cmpsb
les
jle
dec
pop
sbb
push
add
cmpsb
push
lods
pushf
fnstcw
add
js
insb
pcmpgtd
jmp
fnstcw
aam
mov
jbe
xchg
cmpsb
pop
or
sub
mov
ret
outsl
inc
mov
push
ret
das
mov
pop
icebp
jne
pop
loopne
in
aaa
push
cmpsb
stc
ror
xor
daa
data16
das
mov
clc
repz
lcall
test
jo
test
mov
dec
fsubl
pop
aaa
pusha
int3
jmp
nop
iret
sbb
adc
cmp
mov
jo
out
mov
fucomip
adc
dec
push
jg
test
cmp
or
dec
push
push
fiadds
aad
jmp
and
add
add
pop
inc
dec
popa
jno
jne
xor
jle
fistpl
pop
sbb
pop
jl
jle
fnstenv
fs
push
xor
jmp
movsl
push
jp
insl
mov
sbb
push
loop
mov
pusha
insb
jp
leave
decb
add
imul
rolb
xor
in
inc
jmp
dec
and
mov
xchg
aam
fmuls
mov
repnz
shr
jne,pt
push
mov
pop
enter
xchg
call
jl
pcmpeqb
scas
cltd
push
orl
sub
or
sub
test
cmp
inc
mov
int
or
sub
shll
and
jb
pop
repnz
jnp
pusha
adc
cmp
dec
loope
inc
cmpsl
jp
ja
jmp
add
inc
pop
mov
lcall
lret
pop
aad
andl
add
mov
movsl
fdivrl
shrb
mov
adc
jns
insl
leave
mov
mov
xchg
dec
and
lods
data16
ficompl
and
push
or
xlat
push
dec
cmp
rol
cwtl
in
pop
add
cmpsb
stos
dec
outsl
cli
cmp
lea
cmp
inc
jmp
std
mov
jmp
sahf
mov
je
jp
sahf
pop
inc
subb
arpl
ja
mov
cmp
popa
adc
aam
add
fldl
clc
push
inc
add
subl
xchg
ja
xor
std
insl
andb
test
sub
int
out
mov
push
out
push
rcrl
ret
popa
aaa
scas
fdivrl
mov
cmp
inc
cmc
dec
xchg
loop
mov
into
cmp
das
mov
adc
int
xchg
xchg
jecxz
xor
rol
mov
cmp
scas
aam
push
push
xchg
inc
sub
pop
inc
addl
xor
mov
mov
dec
imul
adc
cmc
jp
js
mov
data16
popa
cld
adc
lods
mov
popa
mov
xchg
or
and
pop
sbb
sub
dec
mov
push
inc
jne
call
sbbl
mov
mov
adc
xchg
lret
dec
ret
ljmp
rcr
adc
test
jo
pusha
movsl
jb
icebp
cmp
shrb
or
stos
iret
pop
jle
mov
or
lea
jl
mov
shll
loope
dec
es
adc
stc
dec
aas
mov
sub
push
mov
push
mov
and
add
add
imul
mov
mov
mov
mov
add
movl
mov
jmp
sub
test
ret
and
jle
jl
jle
add
push
push
insb
add
mov
repnz
dec
xor
leave
lcall
jnp
mov
push
pop
jp
and
fmuls
test
push
vpinsrb
add
mov
jg
cs
mov
jl
xlat
aad
xor
lods
push
or
movsb
push
push
inc
inc
popf
xor
pop
outsl
shlb
sub
fdivl
mov
cli
fsubrl
mov
push
fists
xlat
pop
ss
in
out
dec
dec
xor
push
cmpsl
pop
inc
hlt
fidivl
sbb
and
in
cmp
mov
inc
rcr
in
inc
dec
rolb
movq
sbb
lock
roll
dec
out
mov
mov
mov
pop
cli
add
inc
jecxz
into
jle
mov
fidivl
inc
or
cmp
rclb
mov
mov
lahf
ss
mov
ds
add
lahf
inc
pop
push
xor
jne
cmovae
movsb
movsl
loop
cmp
lock
std
js
mov
int3
pop
les
lret
cmpl
xor
lea
stos
out
sbb
mov
adc
add
sub
std
pop
inc
iret
cmp
cmp
xor
aam
lock
in
mov
fisttpll
xchg
movsb
push
pop
sbb
xchg
mov
out
pop
out
fs
cltd
sbb
cmp
jns
mov
sub
sub
jecxz
mov
adc
leave
push
push
jl
stos
sahf
mov
daa
xor
jge
insl
mov
and
dec
divl
imul
mov
pushf
or
mov
inc
mov
into
inc
sub
in
xor
enter
outsl
mov
shrb
xchg
cmp
ficompl
xchg
jne
sub
adcl
mov
adc
and
mov
rcll
adc
shll
add
or
inc
mov
mov
mov
test
stc
cmp
loope
jl
sub
or
in
pop
xchg
in
ss
cmp
rcr
mov
xor
popa
jno
mov
sahf
icebp
movsl
fs
scas
stos
imul
or
pop
outsb
mov
adc
jo
xchg
mov
pop
adc
add
cltd
loope
mov
lcall
in
aam
popf
pop
push
insl
inc
lcall
xchg
add
movl
ror
adc
stos
sbb
and
cmpsb
jg
sub
add
xor
imul
pop
push
clc
ljmp
test
test
rolb
shr
imul
add
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
jmp
xor
adc
shl
icebp
repz
out
insb
jb
and
pop
jl
jle
cmpsb
fbstp
js
sbb
cmc
in
es
test
jmp
xor
cwtl
sub
lock
jbe
test
shll
add
ss
imul
inc
fwait
sahf
sub
mov
scas
dec
push
fldcw
sub
int3
pop
cld
push
fldcw
loope
cmc
mov
jp
in
push
sahf
push
loope
pushf
add
and
cmp
dec
test
push
icebp
imul
aas
mov
jno
xor
jns
mov
add
in
fcomi
mov
jbe
test
and
jns
sbb
clc
inc
pop
jns
movsl
mov
sub
cld
sub
lret
dec
hlt
fldt
jo
scas
adc
sarb
shlb
loopne
imul
repnz
sub
loop
push
imul
xor
mov
inc
ss
and
add
jb
notb
xchg
test
inc
sub
ja
outsl
mov
pop
xchg
dec
sahf
pop
adc
gs
shlb
inc
mov
xchg
imul
insb
inc
out
in
push
xchg
lock
in
sti
or
push
sbb
mov
mov
lods
push
sbb
sbb
push
lock
push
int
inc
inc
not
mov
mov
mov
adc
and
lret
mov
pusha
push
pop
jmp
test
std
adc
cld
incb
into
js
and
sahf
xchg
mov
pop
aas
test
push
lods
cltd
sub
fnstsw
add
sbb
aaa
stos
and
mov
les
cmp
dec
cmovb
sti
and
int
out
bnd
mov
add
jp
sub
sub
dec
arpl
sub
mov
cltd
cmp
ret
ds
lock
mov
pop
out
jno
mov
leave
in
sub
mov
cmp
adc
mov
and
and
icebp
decl
sub
stc
cli
xor
iret
jg
xchg
xlat
es
data16
movsl
dec
dec
bound
lea
pop
sbb
insb
sub
hlt
subb
data16
cmpsb
add
stos
out
movsl
xchg
imul
xor
cld
or
pop
jno
ljmp
adc
std
inc
sbb
mov
lock
mov
shll
insb
ss
mov
leave
cmp
es
mov
inc
push
jle
mov
xchg
xlat
popf
push
ljmp
outsb
loopne
stos
sbb
jae
xlat
xchg
cld
cmpsb
add
scas
add
pop
fcomp
arpl
stc
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
jmp
xlat
pop
mov
jno
stc
hlt
jb
test
mov
and
pop
jl
jle
fcmovnbe
sub
jl
pop
mov
pop
dec
sti
adc
cmc
ret
ja
pop
mov
lahf
fwait
imulb
xor
andl
adcl
addr16
cld
sbb
mov
mov
gs
and
dec
mov
out
adc
or
adc
adc
test
mov
dec
cltd
adc
dec
xor
jb
cmp
push
jle
lahf
or
or
pop
pusha
divl
scas
add
out
popf
jmp
mov
ss
xchg
out
xor
pop
or
and
lock
sub
dec
jge
insb
pusha
cmp
xor
fsubrs
cmp
stc
cmp
push
cmp
sbb
int
and
and
daa
jp
pop
pusha
iret
inc
xchg
andl
cmpsl
mov
leave
xor
ss
jnp
lret
mov
cmpsb
adc
lea
lret
movsl
std
pop
ret
mov
xlat
rcrb
xchg
les
pop
fldt
inc
fwait
push
fidivs
add
push
stos
call
and
push
adc
leave
push
test
aam
int3
push
subl
adc
inc
jno
sub
add
sbbb
fmuls
add
jmp
pop
mov
jecxz
loopne
and
test
fld
dec
sbb
pop
and
rorl
pop
lcall
out
cli
sbb
lret
push
pop
in
sbb
mov
test
test
iret
dec
xchg
mov
pop
subb
cmp
imul
push
push
add
adc
les
mov
mov
scas
outsl
xor
out
test
xor
add
cwtl
cmpsl
inc
xchg
cmp
sahf
pop
xor
push
pop
outsb
jno
sbb
out
pop
mov
popa
pop
hlt
cwtl
addr16
or
mov
push
sbb
jnp
add
mov
push
lea
pop
and
mov
jnp
pushf
js
inc
into
and
cli
xchg
popa
jno
xchg
scas
add
insl
ret
jne
lods
push
jae
subb
add
xor
dec
xor
rcrb
repnz
dec
in
imul
cmp
loopne
shr
xor
idivb
xchg
push
jbe
mov
add
push
js
mov
or
jge
adc
out
mov
mov
call
outsb
popa
dec
iret
aad
mov
mov
rclb
repz
adc
mov
xchg
cwtl
mov
mov
add
pop
adcb
cmc
lret
sbb
ss
mov
xor
sub
lea
jmp
pusha
das
sti
pop
push
push
out
fidivs
jle
pop
jl
jle
sbb
mov
pusha
stc
outsb
mov
jle
add
loopne
lret
movsb
mov
aad
popa
aam
ficoml
sbb
shll
mov
aam
mov
sub
pop
inc
inc
pop
xchg
imul
pop
mov
cmp
sbb
scas
call
je
iret
out
stc
mov
or
pop
mov
sub
into
push
and
hlt
rclb
or
inc
jmp
mov
or
add
mov
jae
addb
mov
bound
add
mov
arpl
push
loopew
mov
xchg
jbe
shr
xchg
add
mov
jae
test
jmp
add
mov
sti
mov
add
pusha
insb
shrb
ds
enter
stos
sbb
mov
lahf
lret
jo
out
cmc
aaa
fld
push
icebp
xor
jle
dec
pop
push
pop
jae
pop
xor
shll
sti
or
cmpsb
aad
out
lcall
inc
and
mov
jl
mov
sti
mov
dec
pop
fcoms
int
jnp
bound
clc
jg
addb
jb
cli
hlt
jge
xchg
jp
push
jge
ficompl
push
pop
mov
mov
inc
dec
ljmp
ffree
ret
jg
cli
lods
sub
jp
mov
stc
xchg
imul
mov
mov
lret
sarb
out
loop
inc
js
loop
mov
scas
ljmp
and
adc
cmp
pop
shlb
jmp
loopne
icebp
adc
jmp
test
xchg
movsb
lods
adc
loope
xor
testb
mov
add
or
fstps
push
cmp
pop
dec
mov
inc
in
jp
cwtl
mov
cltd
imul
and
push
int3
dec
enter
repz
inc
std
dec
ret
pop
iret
mov
dec
adc
push
xlat
ficoms
in
cmc
xchg
ret
maskmovq
testl
addl
push
in
dec
in
ror
cmp
sbb
cmp
mov
add
lock
jmp
daa
test
xchg
jbe
mov
repnz
jnp
pop
test
daa
rorb
je
rclb
cmpsb
out
negb
mov
jnp
sbb
iret
popa
xlat
pop
push
adc
fidivrl
in
rcl
hlt
fwait
aaa
jle
aaa
aam
or
stos
cmpsl
push
insb
cltd
popa
addr16
jae
pop
mov
xchg
push
addl
push
addr16
push
cmpsl
das
sbb
idiv
hlt
mov
ss
mov
cmp
jbe
mov
mov
jmp
outsl
fisttpll
pop
fmull
xor
jle
jl
jle
jmp
ds
push
filds
pop
jns
cmp
pop
orb
outsb
add
and
repz
sub
mov
sub
shr
pusha
mov
sub
mov
stos
or
jnp
lahf
mov
mov
lret
nop
dec
test
xor
fsubs
shlb
adc
mov
xor
repz
fnsave
inc
aas
push
cltd
rclb
cltd
mov
int
scas
pop
cli
and
inc
inc
andb
incb
daa
dec
fwait
mov
adc
mov
loope
xchg
mov
cli
out
cld
push
push
test
test
mov
mov
movsb
mov
fstps
lret
mov
cmpsl
mov
lea
mov
sbb
cmp
mov
mov
idivb
je
ss
push
rolb
sub
out
push
pop
hlt
dec
sub
pushf
imul
dec
lahf
inc
das
xchg
insl
lds
ret
and
mov
decl
mov
pop
add
and
add
mov
lahf
jle
mov
inc
rcrl
fsubs
lcall
mov
sub
pop
mov
lret
insb
sti
in
subl
sbb
mov
cwtl
sub
mov
push
inc
jno
mov
sub
and
push
std
and
imul
or
stos
loopne
add
sbb
inc
cmc
shll
sbb
pop
xchg
xor
pop
mov
sbb
loop
cmp
into
mov
xchg
xor
lds
pop
mov
push
add
mov
fstp
mov
adc
das
adc
mov
out
lret
push
testl
add
push
jp
dec
outsl
shll
iret
inc
lret
and
adc
arpl
out
sub
mov
xchg
scas
hlt
lock
stos
cli
mov
xor
jmp
in
xor
pop
push
js
repz
out
lock
es
sbb
jae
pop
dec
pop
outsl
js
in
add
pop
in
adc
pop
jmp
mov
pop
adc
dec
and
fsubrl
sti
adc
outsb
inc
mov
pop
arpl
ja
or
xchg
cmpsb
stos
cmp
sbb
pop
xor
pop
movsb
repnz
imul
mov
testl
or
push
mov
je
pop
jbe
cli
xchg
orl
lods
jle
xchg
mov
jnp
push
lret
lret
mov
mov
divl
rolb
rorl
scas
xlat
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
mov
and
mov
xorl
xor
notl
add
jmp
scas
incb
jne
lods
jbe
loopne
mov
enter
ss
sub
jle
dec
sbb
xchg
fidivrs
add
mov
xchg
pop
push
fnstcw
pushf
mov
pop
std
inc
push
fisttps
add
shld
mov
pop
test
jbe
pop
popf
xor
inc
inc
push
inc
cmp
add
sbb
scas
fwait
dec
jle
and
insb
add
sahf
mov
daa
cli
ret
push
movl
sub
adc
sbb
scas
mov
jno
xchg
cmp
xchg
or
sbb
das
clc
lcall
mov
les
mov
push
push
out
sub
out
jmp
stos
cli
add
mov
jbe
adc
push
adc
int
mov
dec
cmp
mov
sbb
inc
imul
gs
or
mov
jge
and
dec
and
aaa
icebp
jne
ret
loope
mov
in
repnz
popa
movsb
dec
xchg
arpl
rcrb
jbe
andb
xor
fs
dec
mov
test
sbb
out
js
movb
xchg
jg
pop
pop
popf
in
add
call
mov
ds
dec
les
adc
xchg
cmpsb
pop
je
ds
xlat
arpl
fimull
sti
shrl
pop
out
fimull
add
or
sbb
in
inc
jb
repnz
idivl
inc
clc
xchg
aaa
and
or
adc
add
or
pop
and
mov
dec
shlb
dec
mov
cli
xchg
or
stc
xor
in
ret
jle
fisubrs
stos
lahf
dec
rcrb
sbb
pushf
pop
jmp
in
xchg
hlt
mov
xor
out
lahf
adc
out
push
mov
stc
outsb
and
test
or
pop
cwtl
cmp
mov
jo
out
push
jb
xchg
rclb
iret
xor
xor
cmc
dec
and
or
xor
cwtl
xchg
push
repnz
scas
aad
in
xchg
icebp
loop
insb
push
sahf
pop
sbb
int
jo
shlb
adc
mov
and
sub
mov
or
push
mov
push
xchg
test
sbb
testb
pushf
lcall
stc
mov
insl
and
mov
adc
cld
repz
jae
insl
cmp
rclb
in
lcall
aas
daa
or
lcall
cmp
xlat
sub
mov
or
movsb
mov
push
sarb
dec
or
mov
jb
sbb
mov
dec
sub
sbb
daa
jns
pop
sub
jle
fwait
insl
and
sti
sbb
mov
adcb
and
inc
jg
xor
pop
mov
push
dec
mov
sar
sbb
dec
adc
movl
movl
mov
push
mov
movl
mov
cmp
je
mov
xor
xorl
xor
lea
xor
cmp
jne
movl
jmp
add
mov
xor
add
movl
mov
mov
movl
jmp
jmp
fldcw
les
adc
call
jge
jle
lock
hlt
jmp
cmp
enter
incl
add
fdivrl
jo
gs
je
in
xchg
repz
sub
dec
out
cmpsb
mov
jg
mov
cmpsb
flds
jp
xlat
or
pop
mov
iret
fisttpll
jnp
mov
popl
sbb
mov
shlb
add
shlb
xchg
jmp
pop
xchg
repz
jne
xchg
dec
shll
mov
xor
adc
shl
ds
xchg
or
ficoms
mov
stos
add
out
leave
cmp
pop
popa
inc
ret
add
test
insb
jmp
adc
les
and
insl
shr
sbb
sub
pop
jecxz
repnz
fcmovu
push
loopne
faddp
dec
std
dec
sbb
int
cmp
inc
hlt
fsubrs
mov
pop
icebp
pop
push
rcrl
pop
pusha
mov
inc
arpl
mov
mov
cmc
mov
jbe
shl
fstpt
mov
cmc
lea
and
call
cmp
fnstenv
in
icebp
add
push
leave
adc
cmp
psadbw
ss
cmpsl
lret
iret
loop
iret
jns
daa
test
stos
out
cmpl
fcoms
test
mov
aam
add
jne
out
ds
push
shlb
sbbb
nop
mov
lods
loop
outsb
mov
jl
aas
adc
popf
rcrb
test
mov
xchg
testl
mov
cmp
adc
jge
insl
pushf
pop
outsb
push
cmp
mov
dec
cmp
or
cmpsb
or
icebp
cmpb
dec
add
mov
movsl
fs
jp
xchg
in
mov
pop
push
pop
xor
dec
test
shrb
lods
mov
adc
test
imul
and
cmp
in
inc
aaa
aad
shll
add
sbb
into
mov
out
sbb
mov
fiaddl
lea
rol
adc
push
lods
jg
negb
or
in
push
sbb
addb
mov
add
mov
jg
push
divl
scas
imul
repnz
jne
sbb
push
push
bound
adc
les
mov
ja
insl
mov
jne
fisubs
int
shll
fistl
nop
add
loop
pop
call
outsb
sub
or
cwtl
int
mov
scas
movsb
mov
outsl
dec
ljmp
cs
inc
mov
mov
imul
cmp
push
sub
xchg
mov
and
je
ret
js
stc
cmp
mov
lock
popf
or
xor
neg
jmp
jne
sub
test
test
mov
xor
sub
jle
test
es
in
mov
fxch
fstpt
push
xor
pop
out
adc
aam
fildl
repnz
sub
test
in
pop
js
js
mov
adc
adc
or
mov
mov
pop
add
int
sub
add
movsl
lahf
stc
sbb
repz
sarb
test
mov
neg
dec
imul
or
test
call
ficomps
cmpsb
std
xlat
mov
push
pop
cmp
dec
pop
or
imul
jnp
js
sbb
lock
mov
mov
out
es
dec
pop
jp
testb
mov
jbe
and
and
jl
cltd
or
subl
fsubs
inc
xchg
rorl
xor
movsb
dec
pushf
insb
in
mov
xor
mov
jo
cmc
mov
popf
lahf
mov
add
fdivrs
mov
push
mov
inc
jl
leave
inc
mov
cs
adc
sbbb
mov
cmc
sub
adc
das
mov
push
lcall
or
dec
add
lds
cmp
fisubl
push
xor
fsubrs
fs
addl
jb
xor
popf
push
pop
mov
inc
outsb
pop
in
sub
icebp
aam
sbb
les
inc
fsubrs
mov
test
mov
movsl
push
sti
or
setnp
loopne
sub
aaa
dec
xchg
xor
shrb
ficompl
mov
sbb
ret
popf
movsb
or
ficompl
in
stos
aad
in
in
lret
aas
or
jmp
mov
pop
seta
cmp
dec
cltd
cli
push
mov
jae
jb
or
dec
mov
xlat
inc
cmp
push
sbb
stc
lret
sub
ficomps
push
nop
ss
or
xchg
jae
xchg
push
add
sub
fisttpl
xor
xchg
scas
pop
test
arpl
ljmp
mov
add
jmp
out
rorl
das
fstpt
loopne
sub
test
xor
pop
in
pop
fistps
xor
out
xchg
lret
pop
cmp
les
inc
in
fisubs
mov
iret
cmpsb
icebp
scas
call
fmul
push
outsl
xor
sub
pusha
sbb
push
xchg
jbe
lret
jle
pop
std
pop
inc
adc
outsb
cmp
sahf
js
sar
in
cmp
jecxz
push
scas
inc
and
les
leave
mov
sarb
cmp
mov
xchg
sub
cmp
aam
pop
jmp
or
idiv
sbb
or
fcmovne
mov
pop
jns
pop
rolb
add
dec
sbb
push
roll
mov
clc
pop
out
into
mov
repnz
test
pop
and
jg
jecxz
adc
xchg
iret
mov
movsb
push
sub
xchg
lea
sub
push
scas
fildl
popf
ret
cld
or
out
pop
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
jmp
lahf
cmp
push
pop
fcomps
cmc
lahf
icebp
and
push
aas
jle
sub
jle
leave
fsubrl
xchg
mov
imul
test
es
pop
pop
decl
add
aas
mov
dec
cmp
dec
mov
adc
aam
insl
cs
pop
and
pop
icebp
jae
jge
pop
mov
jb
nop
testl
clc
popa
lcall
add
jne
enter
jl
jae
mov
sbb
add
out
fisttps
jg
xchg
mov
das
js
cmp
popf
pop
sbb
or
jmp
lock
xchg
jecxz
cmp
and
andb
push
repnz
jg
divb
lret
cli
jae
xor
in
aaa
cmp
mov
lds
pop
xchg
clc
sub
mov
ret
insb
cmpsb
clc
repz
jecxz
in
fdivl
int3
imul
outsb
pop
ficoml
pop
stos
jg
inc
loopne
inc
int3
testl
xchg
xor
fs
pusha
stc
lret
jb
ret
mov
int
inc
sbb
inc
imul
popw
test
aas
filds
sahf
inc
push
dec
mov
xchg
into
jb
mov
xchg
outsl
fsubl
inc
push
xchg
pop
movsb
cmpb
sbb
out
int
int3
xchg
stos
cmp
xchg
xchg
jbe
loope
mov
inc
dec
repz
pop
imul
jae
adcb
das
pop
mov
movsb
xor
test
popa
xchg
mov
mov
or
aas
mov
bound
pop
cmp
jne
inc
mov
dec
or
pop
adc
jge
das
mov
jne
das
shrl
popf
sarb
xor
dec
mov
mov
lods
test
ret
jecxz
sub
push
dec
mov
or
out
mov
add
std
xchg
pop
popf
cld
pusha
or
adc
push
in
mov
push
pop
in
pushf
lods
cmpsb
jno
pusha
mov
cwtl
dec
add
xor
mov
add
xor
mov
int
xchg
pop
jns
idivl
cmp
lahf
cmp
ss
pop
lret
push
mov
xor
shlb
adc
inc
jnp
inc
sub
int3
push
mov
fimull
cmp
sub
sbb
mov
rcrl
iret
iret
js
enter
add
mov
and
and
pop
mov
pop
shr
pusha
loopne
lret
jmp
sbbl
push
test
mov
add
stos
cmc
jb
fidivl
jp
xor
xor
hlt
xchg
add
cmp
mov
mov
mov
dec
cmpsl
inc
stos
xchg
bound
mov
or
stos
mov
mov
iret
insl
in
sbb
sbb
mov
adc
lods
js
push
pop
adc
aam
in
shl
xor
fs
add
or
fs
adc
sub
shr
add
add
mov
leave
ret
push
mov
sub
push
call
movl
cmpw
jne
push
call
movl
cmpb
movl
jne
movl
movl
lea
mov
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
movzwl
and
mov
mov
adc
mov
sbb
mov
mov
sub
mov
push
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
mov
subl
xor
adcl
push
mov
add
mov
mov
mov
cmp
mov
mov
je
or
mov
sbbl
xor
add
sbbl
imul
mov
movl
jmp
or
xor
and
add
xor
add
and
mov
mov
or
mov
addl
xor
and
add
mov
sub
mov
sbb
mov
and
mov
sbbl
xor
adcl
add
cmp
movl
jne
subl
push
orl
pushl
pushl
call
mov
mov
andl
mov
mov
mov
orl
mov
subl
mov
subl
movl
andl
mov
decl
movl
mov
adcl
xor
add
jmp
notl
mov
xor
lea
push
mov
xor
lea
push
adcl
mov
xorl
pushl
call
mov
add
xor
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
adc
mov
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
jmp
push
call
xor
leave
ret
push
mov
push
movl
push
mov
mov
mov
mov
movl
movl
movl
cmp
jne
or
mov
sbb
mov
movl
jmp
cwtl
sahf
inc
mov
ja
mov
movl
xor
cmp
mov
hlt
gs
push
ret
mov
pop
and
nop
inc
iret
mov
sbb
xor
ret
fstl
sub
mov
or
je
daa
nop
enter
sbb
xchg
test
cmpsb
or
test
mov
sbb
sub
les
xor
sub
pushf
rcll
jo
xor
arpl
jno
sbb
xchg
jae
or
aam
std
mov
mov
jns
push
fistl
call
cmp
cmc
inc
lods
sbb
idivl
adc
xchg
out
lods
jge
pusha
add
lods
fdivs
jns
pusha
dec
arpl
bound
push
mov
enter
std
js
bound
push
or
xchg
shld
or
jnp
dec
or
aad
cli
ss
fcoml
sahf
mov
pop
mov
pop
fidivrs
lds
das
fs
add
dec
fidivl
ljmp
popf
addr16
ss
mov
and
fcmovnu
pop
xchg
jp
dec
test
push
cmp
daa
pop
loopne
int3
mov
xlat
fsubr
or
cmp
mov
call
lahf
xor
mov
mov
in
dec
addr16
stc
mov
mov
and
jecxz
jae
cltd
adc
shl
fdivs
pop
popf
sbb
dec
scas
pop
or
inc
outsl
lds
push
mov
js
les
sti
rclb
dec
mov
adc
mov
nop
and
scas
jne
psubusw
pop
lds
out
mov
in
jmp
xchg
aas
xor
mov
sbbl
add
addl
mov
movzwl
sbbl
jmp
cmp
es
repz
movsl
pop
xor
lret
mov
cmp
mov
into
pusha
rcr
jne
insb
or
das
dec
mov
mov
push
movb
int
mov
jbe
jl
jbe
jnp
gs
lods
imul
jecxz
cmp
pusha
stos
pop
add
sti
lahf
scas
mov
mov
xor
push
repz
push
fnstcw
inc
jno
mov
xor
mov
push
sub
jecxz
imul
in
mov
dec
cmp
test
loope
rcrl
push
push
push
xchg
sti
aas
int3
int
push
popa
popf
and
push
pop
xorb
ss
scas
mov
jl
jecxz
daa
enter
adc
cmpsb
loope
icebp
pop
inc
inc
inc
mov
jo
mov
and
daa
jg
and
xchg
mov
filds
jle
in
jbe
lcall
jns
jns
fisttpl
add
cmpsl
push
dec
xlat
cmp
and
push
push
lds
out
and
xor
xchg
int3
in
jbe
xor
push
jb
loopne
jae
mov
sar
xor
int
sarl
je
jg
push
test
ljmp
adc
mov
jg
push
sbb
movsb
push
arpl
add
test
fistps
mov
cmp
mov
pushf
lahf
xchg
mov
xor
insb
repnz
in
cmp
add
addr16
ret
jg
subl
aam
popf
sbb
mov
mov
repnz
xchg
cmp
mov
gs
std
dec
mov
mov
lds
add
test
popf
ja
rolb
add
inc
add
add
jmp
xorl
mov
jmp
dec
rcrb
mov
push
loope
sahf
adc
mov
jle
mov
addr16
inc
lret
dec
xor
xchg
cmc
lock
jb
mov
sbb
int
mov
ret
repz
xrelease
inc
sub
mov
sub
fisubl
sarb
push
push
orb
add
in
test
dec
dec
dec
mov
mov
aas
call
dec
int3
ss
movhps
push
movl
cmp
leave
aad
test
test
pusha
sub
adc
dec
xor
push
shlb
mov
ss
push
pop
loope
cld
xchg
fs
int
outsb
pop
in
sbbl
xorb
movsl
mov
sub
lret
add
popa
mov
rolb
cld
cli
push
xor
in
movsb
xchg
pop
sbb
jp
iret
cmc
and
imul
repnz
ds
xor
aas
into
repz
imul
clc
loop
psadbw
mov
push
cltd
xchg
sbbl
mov
popa
gs
imul
jecxz
repz
and
out
iret
push
mov
and
pop
loope
or
or
iret
inc
sbb
mov
js
mov
sub
dec
xchg
scas
inc
push
movsl
ljmp
add
div
push
out
pop
into
jno
std
and
aam
imul
adc
sti
pop
mov
dec
movb
fst
inc
negl
sub
sti
insb
ljmp
xor
mov
jbe
add
jmp
add
test
jmp
and
in
popa
push
lret
xchg
loopne
jmp
jle
jg
jle
mov
or
rcll
int3
test
std
jmp
in
adc
jbe
adc
or
mov
mov
push
sbb
popf
insl
imul
mov
aad
popf
sub
fldt
pop
outsb
lret
jb
push
sub
push
jbe
stos
inc
pop
sbb
addr16
enter
add
mov
dec
test
popf
and
popa
in
fistpl
push
lods
mov
and
jl
xlat
pop
stos
mov
out
scas
xchg
cmc
mov
cltd
inc
int3
lcall
lock
cld
cmp
insb
inc
fwait
nop
cmpsb
repnz
je
std
data16
clc
mov
mov
mov
xor
into
push
icebp
in
adc
inc
out
dec
icebp
pusha
sbb
out
jae
sub
add
mov
or
lret
lahf
movsl
sub
jge
inc
into
mov
stos
sbb
les
call
cmp
out
and
add
ds
sbb
mov
ret
fstps
test
mov
sbb
sbb
movl
mov
push
sbb
hlt
mov
xlat
mov
scas
xor
movsb
scas
mov
pop
add
cmp
std
fistl
lss
out
jecxz
loope
test
mov
fbld
call
push
or
pop
xor
xor
and
mov
mov
push
add
aaa
and
mov
jno
inc
dec
mov
repz
push
leave
lock
jmp
inc
je
leave
ret
push
mov
sub
andl
movl
mov
or
jmp
pop
cmp
inc
pop
arpl
js
push
loope
mov
or
jle
add
movsb
fsubrs
outsb
popa
fisubl
arpl
insb
leave
stc
int
jno
pop
es
test
cltd
cs
xor
xor
push
xlat
lret
push
mov
dec
repz
gs
int
push
adc
pusha
jg
outsl
loopne
inc
add
pop
xor
dec
cld
dec
push
push
pop
jle
inc
bnd
push
add
push
inc
pop
or
lahf
test
cmc
jg
addb
push
pop
loop
loopne
add
test
out
mov
aaa
bound
xor
inc
add
xor
test
and
mov
lock
xlat
inc
mov
stos
call
mov
lret
call
or
imul
data16
or
iret
push
inc
outsl
sub
jae
add
mov
dec
or
add
decb
rcrb
jne
shlb
in
mov
rcll
xor
es
mov
ja
addr16
adc
adc
xchg
pop
outsb
lcall
inc
stos
mov
lea
inc
cmp
xadd
in
dec
dec
dec
pop
int3
inc
xchg
test
popf
mov
icebp
push
jo
cli
sar
iret
fsubp
xchg
mov
inc
pop
xchg
mov
xor
xor
mov
inc
adc
enter
sub
or
imull
push
and
mov
push
iret
cmova
xchg
jmp
and
inc
jbe
cmp
xchg
icebp
or
sti
xor
cld
movsl
pop
lods
jmp
insl
stc
jno
hlt
out
xor
popa
fiaddl
inc
xchg
loope
cwtl
enter
push
or
sbb
mov
sub
mov
jno
push
adc
popf
scas
popa
lds
int3
fdivrl
sbb
call
test
add
mov
sub
mov
and
lea
sub
mov
mov
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
pushl
call
jmp
xor
push
lea
mov
mov
jmp
aad
shlb
dec
js
js
lds
push
aad
sarb
jl
jle
adc
fldcw
lret
repnz
out
cltd
fldl
cmpl
pop
pop
imul
mov
lret
or
push
xchg
shlb
ret
icebp
imul
mov
cmp
add
popf
add
mov
xchg
jno
jo
push
aad
cwtl
sahf
mov
subl
out
cli
adcb
fldt
cld
loop
cltd
mov
xor
psubb
sub
in
rclb
and
pop
adc
cmp
imul
fistpll
loop
adc
add
lret
cmp
imul
dec
xorl
adc
jl
pop
mov
adc
mov
inc
push
inc
cwtl
jl
dec
jae
les
lods
push
lea
adc
lahf
fisttps
cmp
outsl
imul
and
mov
popa
fcmovu
sub
pop
dec
test
lahf
push
xchg
cmp
sbb
mov
sub
xchg
aad
or
mov
in
xchg
ds
leave
subb
movsl
push
dec
mov
and
gs
pop
ret
mov
and
imul
xor
mov
add
mov
inc
stos
xor
mov
push
in
push
dec
fsubrl
and
mov
xor
dec
sub
inc
pop
leave
and
and
push
pop
inc
ds
ss
rcll
add
decb
xor
stc
repnz
inc
addr16
jecxz
sahf
jne
adc
push
cmp
mov
mov
orl
popf
mov
xchg
mov
call
inc
enter
and
ja
xchg
mov
lret
xchg
jo
dec
push
ret
xor
inc
mov
ds
pop
or
out
sub
mov
push
mov
repz
sahf
cld
push
sub
push
mov
xorl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
mov
neg
jmp
loopne
test
cmp
pop
out
mov
push
and
jle
add
roll
js
mov
enter
inc
inc
movsb
jl
repz
adc
mov
xchg
stc
cltd
ds
std
and
gs
inc
sti
das
movsb
mov
jmp
mov
lret
jae
psubq
adc
addl
mov
mov
lcall
cmp
in
and
inc
imul
sub
movsl
fldcw
jg
fcomps
adc
sbb
aas
or
ss
dec
push
sub
or
sarb
xchg
add
scas
mov
lds
js
les
ret
addr16
push
mov
out
push
and
or
dec
xor
pop
add
adc
mov
test
sub
and
push
iret
icebp
cld
stos
jecxz
sbb
xchg
mov
and
js
jg
data16
xchg
ret
sub
das
andb
shrl
cmp
inc
mov
js
aas
rorl
mov
jno
mov
orb
dec
fadds
inc
inc
es
mov
loop
hlt
xchg
dec
hlt
adc
xchg
sbb
jmp
cmpb
popf
fisttpll
mov
sub
adc
jno
dec
cmpsl
call
sbb
push
mov
int
movsb
inc
sub
inc
xor
mov
fwait
jne
cmc
shrl
mov
aad
mov
xchg
addr16
jo
xor
dec
inc
loop
inc
test
adc
and
sub
lret
jecxz
cltd
xor
jno
jno
adc
jmp
gs
pusha
in
in
mov
lahf
xor
ret
popf
nop
shl
enter
push
or
push
jg
push
inc
and
mov
icebp
pop
cmpsl
out
stc
or
inc
insb
adc
mov
roll
outsb
sbb
add
movl
xor
addl
xor
andl
add
negl
add
incl
div
mov
movl
movl
movl
cmp
je
movl
movl
andl
lea
xor
mov
and
mov
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
imul
jmp
and
out
je
inc
adc
sbb
ja
mov
sub
jle
add
lods
sti
cmpsb
movl
stos
scas
jo
imul
int3
inc
jmp
jb
jmp
sbb
xchg
repz
test
out
xchg
dec
iret
je
push
rolb
adc
leave
sbb
movsl
cmc
fs
gs
in
mov
and
xchg
inc
jne
push
popf
enter
mov
jae
ja
lret
push
or
adc
adc
or
mov
or
jne
mov
mov
dec
jne
je
jno
xor
aaa
xchg
and
sub
fwait
jg
sub
or
cmp
fadd
and
and
inc
popa
in
aaa
sub
pop
ss
inc
ror
ds
pop
push
into
repnz
int
or
and
in
cs
pop
imul
out
adc
sbb
popl
movsb
mov
jge
stos
sub
mov
clc
add
adc
sub
jae
fists
gs
lds
xor
stos
sub
dec
mov
sub
mov
adc
jo
leave
pop
xor
adc
mov
push
mov
movsb
sbb
jae
data16
dec
dec
daa
jo
push
cmc
ljmp
mov
sbbb
mov
push
inc
out
aas
inc
sub
sub
pusha
stos
imul
gs
xor
cmp
shlb
push
ficompl
ja
movsl
je
mov
sbb
jg
pushf
jl
mov
jns
inc
fistps
cld
add
pop
adc
jbe
clc
mov
sahf
aas
sub
lock
hlt
imul
ret
mov
dec
pop
xchg
sbbl
test
cmpb
out
in
scas
into
ficompl
insl
or
fadds
js
repz
nop
lret
adc
sbbl
mov
mov
cmp
je
mov
orl
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
adc
mov
mov
movzbl
or
mov
orl
mov
mov
orl
push
xor
xor
sub
push
mov
sub
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
push
neg
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
sub
add
mov
addl
lea
not
mov
mov
mov
and
mov
andl
xor
add
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
lea
jmp
ss
lods
jmp
push
mov
jle
lret
and
jle
pushf
mov
shll
inc
fbstp
nop
mov
mov
jl
cmc
loope
and
push
frstor
adc
inc
int
add
push
mov
sti
xor
or
fiadds
aas
jno
sub
gs
jo
and
lock
mov
out
pop
pop
shr
jnp
sub
mov
add
adcl
outsb
int3
scas
mov
mov
mov
insl
insb
jno
dec
adc
pusha
mov
testb
cmp
cld
nop
pushf
fwait
cltd
std
dec
ret
cmp
ja
lcall
outsl
popa
cwtl
cld
les
or
insb
lds
pop
loope
mov
les
xchg
ret
jb
stos
jbe
out
ja
add
push
mov
sbb
xchg
mov
dec
mov
inc
orl
stc
xchg
add
icebp
jbe
cmpsl
repnz
repz
mov
xchg
push
aam
adc
push
cld
mov
ret
cwtl
mov
js
icebp
jae
scas
pop
add
add
add
scas
ja
cs
fbstp
scas
orl
sbb
clc
add
sub
in
test
fs
xchg
imul
dec
dec
mov
nop
or
sbb
jns
dec
pop
pop
dec
dec
mov
pop
cmp
mov
lcall
mov
push
jo
pop
insb
scas
pop
es
or
gs
fldenv
xchg
jno
hlt
imul
pop
push
pop
dec
inc
pop
es
xchg
push
mov
sub
fisubrl
inc
mov
jbe
lret
xchg
js
xchg
push
out
dec
cmc
jmp
sti
jl
pop
mov
adc
inc
test
arpl
out
mov
mov
in
les
mov
adc
lea
repz
shll
pop
ja
adc
jb
push
shrl
pop
loopne
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
inc
mov
orl
mov
xor
xor
add
add
xor
mov
mov
adc
jmp
xchg
inc
in
mov
das
mov
push
in
jle
and
jle
push
jge
lret
cmpsb
push
mov
mov
mov
lcall
stos
ficomps
push
mov
aas
ja
mov
js
fcmovu
es
dec
cmp
cmpb
mov
sti
dec
xchg
and
xchg
enter
sbb
jle
mov
and
stos
inc
adc
js
add
stos
into
push
nop
or
push
or
out
pop
cmp
enter
jno
insl
je
movsb
xchg
leave
sub
rcll
stos
fiadds
addr16
insb
cwtl
dec
mov
outsl
dec
add
xor
jbe
mov
cltd
fdivl
xchg
fimull
push
cwtl
and
daa
mov
mov
and
orb
sbb
loop
sbb
divb
jb
push
xchg
jnp
sub
in
fwait
mov
fstl
std
inc
cmc
mov
or
shrb
lahf
cmc
and
adc
fidivs
push
xchg
xor
fimuls
pusha
arpl
jae
testb
aas
and
cld
jno
push
pop
cli
mov
xchg
in
add
cld
sub
dec
pop
jl
leave
ror
cmc
mov
addr16
ret
les
xor
mov
adc
cld
int3
iret
mov
mov
mov
lods
pop
or
mulb
sbb
push
cmpsl
data16
add
repnz
sbb
test
jnp
scas
push
xchg
add
cmpl
fninit
les
mov
xchg
cmp
sti
push
out
leave
push
jle
cmc
adc
add
cld
test
jbe
cmpsb
enter
addr16
adc
mov
push
sub
rorb
dec
daa
cmp
std
js
mov
or
mov
mov
into
jae
dec
sbb
int
les
enter
push
xchg
cli
cld
loopne
lret
movsb
arpl
lret
bnd
mov
mov
daa
js
add
adcl
mov
sbbl
jmp
pop
push
jg
xor
add
cmp
jle
and
jle
int
add
pop
and
movsb
cmc
sarl
int
test
popa
aam
jle
sbbl
dec
inc
cmpsl
test
and
in
gs
jle
xchg
xor
out
mov
push
mov
inc
jnp
ficoml
daa
ficompl
addr16
iret
cmp
cmc
sub
sbb
jecxz
mov
jo
subb
sbb
push
aaa
pop
mov
jmp
push
inc
and
lods
fcmovu
jne
mov
ss
sub
data16
shlb
xor
fsub
xor
or
aam
aad
sbb
xor
mov
adc
xor
pop
movsl
test
push
jl
push
and
adc
and
push
into
pop
cli
std
sub
scas
cmpb
adc
push
je
mov
inc
add
fistps
mov
ficoms
aad
mov
cli
mov
faddl
lret
in
mov
cltd
clc
add
xor
jle
push
push
cmp
rol
fsubs
jg
and
or
int3
inc
adc
and
mov
shl
add
dec
push
shl
movsl
jb
stos
pop
and
mov
adc
cwtl
sub
mov
popf
inc
sub
mov
mov
mov
cmp
repnz
pop
xchg
pop
mov
add
pop
xchg
cmp
out
push
data16
pop
into
jg
mov
xchg
repnz
movsl
gs
xchg
popf
jae
push
jbe
sbb
xchg
push
mov
gs
cmp
add
pop
dec
mov
cmc
out
jae
aam
pop
pop
pop
aam
dec
push
mov
ficoms
sbb
imul
movsl
sti
mov
ljmp
jae
add
fiaddl
out
xchg
pushf
xchg
or
nop
inc
fcoms
mov
adc
pop
lock
leave
aaa
push
push
inc
add
das
int
mov
imul
clc
adc
es
add
ss
add
jl
add
dec
cld
adcl
movzwl
xorl
add
notl
mov
mov
or
mov
xor
add
cmp
jne
dec
mov
mov
xor
add
cmp
jmp
stos
adc
inc
jno
stos
icebp
jl
and
loopne
aam
jle
jl
jle
mov
jl
cmpsb
pop
iret
inc
cld
pop
shlb
daa
push
mov
inc
test
int3
test
xchg
lds
dec
loope
adc
insb
xchg
jo
inc
testl
mov
and
mov
sbb
xor
or
loop
fistpll
push
aad
daa
dec
and
cmp
repnz
and
inc
mov
jnp
data16
xlat
cmc
and
xchg
xchg
pop
sahf
pop
test
fcompl
test
das
inc
loope
or
jmp
sub
out
das
mov
pop
sbb
mov
adc
mov
dec
repz
jg
mov
inc
add
add
mov
pushl
jecxz
pusha
mov
pop
fcom
loopne
das
jp,pt
lcall
xor
int3
cwtl
arpl
xlat
nop
dec
mov
pop
cmpsb
cwtl
push
rcr
lret
ds
inc
dec
push
push
loope
pop
push
jbe
push
xchg
dec
fadds
ret
xor
or
ret
and
test
lods
mov
cltd
aad
cmp
pusha
in
dec
jg
scas
loop
scas
out
imul
pop
pushf
or
and
mov
mov
dec
or
mov
movsl
inc
mov
insl
xlat
jns
and
cli
add
in
sbb
loope
lods
js
mov
sub
push
cmpsb
cmp
adc
lock
sahf
les
mov
ja
movsl
pusha
xor
test
lock
iret
mov
push
jp
dec
jl
loop
add
mov
imul
aas
enter
sub
fs
ljmp
inc
or
stos
jnp
push
xor
mov
inc
xchg
dec
ret
xchg
inc
lahf
movsb
repz
xchg
mov
adc
sub
push
shlb
sahf
sbb
and
inc
or
cmc
out
scas
mov
test
orb
inc
jne
mov
mov
xor
add
mov
mov
mov
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
add
xor
sub
jmp
xchg
or
jmp
dec
jno
xchg
data16
and
jle
bnd
sub
dec
or
adc
cltd
je,pn
iret
xchg
stos
neg
mov
iret
mov
aam
aaa
sub
inc
cs
es
cld
loope
das
int
or
or
sub
add
mov
loop
lcall
cmpsl
rorl
popf
loope
rolb
xor
pop
jbe
pop
ja
fidivl
in
cmp
inc
icebp
fistl
cld
mov
inc
popf
adc
adc
stc
mov
or
sub
adc
push
dec
jns
dec
mov
xchg
cmp
scas
in
sbbb
dec
push
lods
ja
or
insl
xchg
mov
xor
dec
lahf
out
xor
imul
sbbl
icebp
lods
mov
mov
movsb
mov
ds
data16
jnp
aam
out
out
jne
stos
cmp
out
icebp
adcl
aad
xor
push
push
xchg
cmp
mulb
sub
sub
lret
stos
push
dec
xor
out
mov
cmp
add
test
cltd
push
xchg
lods
xor
xchg
fmuls
ret
inc
clc
outsl
lcall
xchg
icebp
mov
lods
clc
dec
fs
inc
push
mov
pop
xor
stos
sub
cltd
and
out
dec
xor
jge
add
lea
add
test
pop
mov
mov
pop
scas
push
inc
mov
imul
xor
mov
mov
push
std
dec
outsl
xor
popa
mov
imul
mov
lods
jg
mov
test
imul
shlb
xchg
mov
roll
aam
push
rorb
dec
cmp
ficoml
adc
jmp
rcl
sbb
xchg
nop
popf
push
lret
mov
mov
dec
cs
xchg
xchg
popf
mov
data16
lret
adc
inc
pop
mov
xchg
or
push
adc
pop
mov
jne
and
fimuls
hlt
stc
lret
insb
shrb
ja
mov
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
jmp
sbb
aam
je
and
adc
or
jle
and
jle
test
or
outsl
and
pop
mov
fsubrs
dec
enter
push
dec
mov
push
out
xchg
pop
fwait
xchg
jnp
movnti
arpl
inc
pushf
mov
aam
jg
xchg
add
movsl
cmpsb
inc
iret
xor
dec
xchg
mov
push
pop
shlb
xchg
mov
lods
push
cltd
insb
loop
jle
js
inc
scas
mov
inc
mov
test
addb
pop
mov
iret
jmp
and
icebp
push
or
clc
sub
adc
push
sbbl
dec
scas
adc
cmp
jge
in
push
out
lahf
call
shl
xchg
enter
adc
outsb
shl
add
enter
add
add
les
mov
out
clc
loopne
bound
test
repnz
stc
xchg
in
lods
pop
xchg
mov
fsubrp
mov
sub
inc
sti
je
xchg
mov
pop
adc
dec
ret
mov
push
push
decb
xor
mov
roll
mov
xor
pop
shlb
in
and
xchg
xchg
jp
or
pop
push
adcl
leave
imul
mov
xor
inc
cmpsl
mov
push
xor
test
popf
shl
sbb
add
loope
lods
pop
mov
push
scas
jp
aad
sub
loope
mov
mov
pop
xor
or
xchg
lret
pushf
adc
test
shlb
fisubrs
das
jp
push
inc
lret
xor
xchg
add
jl
and
push
dec
lret
dec
push
xchg
std
stos
cmpsb
das
push
lcall
in
jmp
cmp
fs
pushf
mov
dec
sub
lock
push
pop
mov
or
sub
imul
push
sub
lds
test
and
xor
inc
stos
dec
hlt
or
mov
repnz
jge
repz
push
push
xlat
inc
mov
movb
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
jmp
sbb
outsl
jno
out
jne
mov
inc
pusha
fnsave
fistpll
and
jle
adc
and
mov
push
jnp
popf
push
insb
jae
fbld
cmp
sub
mov
ja
movsb
notl
mov
cs
inc
or
mov
sbb
push
hlt
int3
push
or
dec
push
adc
jne
stos
push
or
stos
sarb
and
out
clc
test
xor
xchg
push
xor
xchg
fisubs
lret
std
or
mov
xchg
lcall
xchg
icebp
imul
jo
test
sbb
jge
aad
fs
mov
sub
xchg
or
loopne
test
pop
push
cmp
orb
mov
pop
test
insb
mov
in
shrb
or
aam
pop
sub
jmp
insl
and
aas
idivb
xchg
sub
pushf
test
or
mov
jo
popa
aad
cltd
inc
xor
enter
mov
sti
xchg
mov
inc
adc
push
in
mov
and
lock
jecxz
dec
mov
test
jne
js
mov
outsl
pushf
in
jno
sub
loop
imul
mov
imul
mov
mov
xchg
out
mov
stos
ret
addb
stos
in
push
adc
add
test
xchg
rorl
repnz
pop
lahf
adc
into
shlb
xchg
mov
xor
sti
dec
mov
mov
lods
xchg
popl
dec
clc
loope
adc
inc
mov
insb
mov
ss
adcl
push
fs
mov
xor
aam
in
lods
repz
adc
pushf
push
jnp
cli
popf
mov
xchg
mov
loope
mov
pop
adc
sbb
jno
in
pop
pop
push
ret
pop
hlt
cmp
lock
adc
inc
push
push
das
clc
pop
mov
aad
enter
test
in
jne
add
lods
pop
call
mov
mov
mov
pushl
jmp
lods
mov
outsb
xorl
pop
test
fninit
fcomp
jle
and
jle
cmpb
popa
push
push
mov
int
jg
add
shl
sbb
inc
je
push
test
stos
lahf
push
ja
adc
lret
adc
movsb
inc
pop
movsb
leave
xchg
adc
xchg
andb
add
mov
sub
enter
cwtl
psllw
xchg
jecxz
push
jne
mov
ljmp
xor
adc
mov
leave
and
cmp
push
in
push
mov
adc
xchg
lods
scas
push
sti
adc
mov
fst
mov
lcall
push
pop
mov
xor
sbb
je
fidivrs
shll
outsb
xlat
mov
cmp
push
or
xchg
inc
pusha
es
fldt
pusha
mov
adc
ret
mov
xchg
leave
xor
movsb
jp
dec
sub
and
loope
mov
xchg
loope
lea
mov
pop
bsf
fucomp
or
js
and
mov
xor
mov
imul
testb
adc
fwait
lret
enter
add
fdivs
mov
bnd
sub
sbb
dec
out
sbb
jge
jns
jle
cmp
adc
iret
or
mov
jbe
test
push
jne
data16
jo
std
out
push
jge
pop
push
enter
inc
mov
pop
pop
cld
cmp
out
jmp
mov
mov
in
js
out
ret
mov
aad
in
insb
test
ljmp
xchg
addl
stos
insb
aad
loop
fisubs
or
lods
jmp
clc
pop
cmp
rolb
pop
data16
jmp
cld
cmp
aas
pop
rol
mov
xchg
stos
arpl
dec
test
xchg
incl
loop
xor
jle
sub
jp
sub
das
push
out
mov
add
adc
loope
cmp
jmp
loope
ljmp
clc
ljmp
fstpt
and
jle
cld
mov
push
pushaw
jp
sub
nop
das
aam
sbb
lods
clc
and
or
cmp
pop
xor
ljmp
jne
jmp
rorw
mov
std
nop
lcall
ja
dec
and
push
sub
je
cmp
in
push
aaa
push
mov
sbb
mov
mov
mov
adcb
movsl
scas
cltd
scas
sub
mov
loope
jo
push
scas
data16
mov
je
cld
or
pop
cmp
popa
frstpm(287
loope
or
insb
into
rclb
inc
je
sub
xchg
jb
insl
das
push
movsl
pushf
in
sub
cmp
push
xchg
push
lcall
sahf
fists
push
mov
js
jle
fcoms
inc
pop
cmpsw
lret
lahf
scas
lcall
addr16
add
push
insl
sub
lcall
jns
pusha
imul
hlt
and
xchg
adc
sub
out
xchg
sub
xor
push
outsb
jmp
mov
sbb
and
imul
jne
inc
cld
rcll
xchg
xchg
or
enter
subl
clc
ljmp
psubusb
and
lds
mov
xchg
lcall
sbb
push
xchg
push
fildl
xor
jmp
cmp
dec
fcompl
pusha
xlat
popf
push
insb
xchg
push
hlt
inc
aaa
test
cmp
outsl
mov
test
sbb
lock
fidivl
mov
data16
and
push
sub
cmp
mov
js
faddl
mov
jecxz
pop
jo
adc
call
inc
ja
sub
lret
ret
je
out
mov
movsb
inc
and
lret
mov
lock
aas
push
jbe
test
out
fldl
cmpsb
jg
inc
setge
in
mov
dec
aam
xor
jg
js
pushf
scas
cmp
lret
fiaddl
hlt
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
add
movl
xor
xor
xor
mov
push
sub
mov
addl
xor
mov
add
orl
mov
mov
sub
mov
jmp
shrl
stos
fadd
cwtl
pushf
mov
push
xor
jle
mov
or
cld
mov
mov
sarb
mov
inc
stos
pusha
dec
int3
adc
fildl
mov
ror
pushf
out
ret
fldl
adc
xchg
xlat
loope
in
lret
insl
popa
dec
dec
in
lea
out
sbb
xchg
lds
xor
push
jne
loop
push
jmp
inc
inc
js
mov
xlat
cmp
dec
imul
hlt
test
dec
std
sarb
mov
mov
ds
pop
lods
pop
out
inc
push
pop
popf
bound
sbb
add
loop
test
popf
cwtl
mov
sbb
imul
adc
cld
push
or
test
jno
enter
jg
loop
push
movsl
lret
sub
pop
pushf
adc
inc
test
stc
mov
xchg
push
cmp
lea
jo
lret
stos
jmp
sub
enter
outsb
add
movsl
push
xchg
mov
inc
shlb
test
mov
inc
inc
pusha
jno
out
cmp
int
movsb
push
mov
pop
xchg
push
fwait
cmp
sti
push
icebp
daa
xlat
test
mov
push
lahf
and
ret
nop
bound
les
ss
sub
enter
pop
mov
lea
pushf
jmp
sti
fnstenv
fists
mov
pop
jl
pop
cmp
shlb
stc
cmp
stos
jge
call
jge
inc
sub
or
loope
out
cmpb
mov
inc
jne
mov
sub
enter
stos
xor
hlt
in
cmp
inc
aaa
inc
or
mov
int3
adc
mov
aam
stos
add
clc
mov
push
ss
xor
pop
inc
imul
seto
flds
xchg
rcll
cmp
xor
sub
cli
mov
pop
lahf
push
xor
fidivs
dec
mov
xchg
out
jle
daa
mov
dec
lret
dec
inc
mov
lret
cltd
sbb
sbb
push
ss
add
pop
add
add
cmpsl
lods
shrb
mov
fisttpll
sarb
jle
jl
jle
xor
xchg
and
dec
loop
or
xor
into
add
shrb
xchg
jns
push
sub
jge
adcl
dec
lcall
mov
push
and
jge
stos
or
add
pop
cltd
dec
testb
xor
xchg
dec
mov
fldt
push
jns
out
cmpsl
sub
push
sub
pushf
xchg
inc
loope
nop
sti
add
jecxz
fcomps
xor
insb
fs
popa
lcall
mov
sbb
insb
inc
xor
aad
rcrb
test
pop
mov
dec
dec
testb
push
shrl
jg
lock
mov
mov
cs
mov
stos
daa
mov
ficoms
lods
std
cmpsb
sarl
inc
hlt
mov
jne
adc
jecxz
add
in
sarl
or
lods
jp
and
adc
psrlw
repz
pop
cs
jg
push
push
out
lcall
test
mov
add
roll
pop
inc
ds
fdivl
bndstx
out
cld
scas
fwait
sub
mov
roll
inc
scas
jnp
ret
mov
inc
pop
shlb
pusha
cmp
push
jge
test
negl
lods
mov
stos
add
notb
push
fcom
daa
or
pop
subb
or
fisttpll
lock
iret
push
xchg
aas
mov
pop
inc
mov
cmpb
movsb
adc
or
push
add
mov
pop
in
xor
add
inc
adc
scas
add
fadd
xor
mov
shr
popf
out
inc
data16
mov
mov
lock
and
sbb
cmp
mov
outsl
arpl
inc
das
push
ds
in
pop
lock
xchg
jb
mov
cltd
and
loopne
in
data16
inc
xchg
mov
dec
int3
dec
push
jne
mov
adc
mov
repz
daa
fwait
sbb
sbb
jmp
xor
jl
add
repnz
les
add
out
add
je
mov
mov
sub
mov
mov
or
jmp
push
lcall
cmpsl
or
inc
pop
pop
pop
mov
jle
jl
jle
xchg
mov
jnp
iret
sbb
shrl
out
and
pushf
cmp
push
add
sub
cmp
push
ret
cmp
das
mov
mov
gs
into
out
cltd
in
dec
lods
or
neg
mov
mov
iret
push
jge
in
xchg
bound
fisttpl
or
adc
add
decb
lahf
xchg
dec
and
pop
das
jecxz
adc
sub
adc
iret
mov
fsubrl
sub
lds
jecxz
pop
pop
jne
pop
fsubrl
cmp
mov
jle
aas
jg
jno
or
test
or
or
icebp
push
pop
in
and
xchg
inc
es
mov
mov
hlt
mov
push
gs
pop
outsb
loop
mov
andl
daa
hlt
fbstp
js
mov
repz
xchg
xchg
add
lds
loopne
pop
pop
fwait
ljmp
jg
dec
jb
sbb
daa
sti
mov
inc
pop
lret
scas
in
inc
call
sahf
sbb
ja
and
repz
movsl
sahf
rcrl
and
add
add
cmpsb
mul
gs
xchg
dec
call
pop
or
xor
cmp
dec
xor
sub
rclb
jl
jmp
pop
sub
xchg
mov
outsl
les
push
cs
cmc
jp
inc
shlb
lret
xor
hlt
in
jge
ss
inc
imul
or
push
jb
jp
inc
mov
jne
sub
add
push
insb
bound
mov
mov
add
fwait
aas
mov
lods
cmp
push
mov
lds
shr
xchg
repnz
xchg
cmpl
out
adc
sub
pop
int
ret
xchg
fwait
mov
pushf
mov
mov
push
sbb
xchg
xchg
out
dec
loop
adc
sbb
push
jb
iret
xchg
xor
dec
mov
jne
scas
adc
add
rcl
jb
repz
mov
arpl
sub
je
push
dec
enter
scas
sarb
mov
sbb
add
mov
mov
xchg
adc
sub
and
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
mov
mov
sub
mov
mov
orl
mov
jmp
mov
data16
gs
jmp
fiaddl
mov
jl
jle
test
adc
cmp
xor
or
pop
aas
sbb
andb
sbb
jb
add
or
xor
adc
mov
push
adc
mov
shll
test
dec
add
add
or
aad
test
and
ret
adc
neg
mov
xchg
mull
clc
imul
dec
xor
sbb
mov
xor
mov
mov
adc
jno
xor
xchg
mov
sub
js
jecxz
jo
add
popa
popf
push
pop
mov
imul
jae
xchg
jnp
int3
sti
mov
jmp
mov
sbb
jbe
imul
int3
in
in
xor
ja
into
sti
mov
pop
inc
test
xchg
or
add
fs
fs
adc
push
or
adc
and
and
xor
lahf
inc
sub
fdivrs
push
jmp
test
push
push
push
pop
std
mov
xchg
inc
icebp
xchg
sub
pop
push
inc
sub
xor
xchg
lret
cltd
sbb
mov
xor
sahf
retw
ds
mov
cmp
sub
fadds
insl
jg
xor
lret
push
mov
fsts
or
pop
shrl
xor
je
outsl
fldt
push
fsubs
arpl
jge
mov
mov
pushf
cmp
sub
add
cwtl
subl
mov
xchg
or
xchg
out
pop
imul
and
inc
fmulp
flds
or
or
pushf
in
mov
adc
sbb
mov
arpl
mov
pop
push
push
into
mov
jnp
scas
insb
ret
pop
cmpsb
pop
jge
inc
jo
push
enter
notb
inc
push
cltd
std
repz
fnsetpm(287
xchg
sub
inc
cmp
lret
mov
je
mov
bound
ror
mov
jb
dec
call
sti
xor
add
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
push
pushl
push
push
call
jmp
xor
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
or
add
movl
mov
mov
mov
je
mov
xor
sbbl
add
movl
jmp
imul
jno
dec
test
pusha
mov
out
jle
cmp
ret
or
jg
cwtl
inc
jle
sbb
aas
mov
dec
call
das
adc
test
idivl
icebp
cmp
sub
mov
or
loope
out
push
push
xchg
cmovg
xchg
into
movsl
cwtl
lea
addr16
mov
roll
mov
jnp
fistpll
sbb
jp
mov
mov
pop
leave
outsl
pop
adc
test
mov
push
lods
dec
mov
fsubrp
inc
fdivrs
push
cmc
lahf
sbb
sahf
xchg
pop
push
loop
pop
ret
lods
inc
lret
out
out
inc
push
cmp
pop
ret
lock
rolb
fdivrl
mov
cwtl
pop
dec
cmp
xor
xor
xchg
push
sub
sub
loopne
mov
adc
adc
adc
adc
dec
aam
mov
xor
sub
cmp
mov
adc
ss
pop
sahf
ja
jns
outsb
and
in
test
push
call
insl
or
les
add
sbb
shll
call
into
push
adc
xchg
lahf
std
jns
and
adc
mov
aam
in
shrl
dec
js
into
mov
mov
xchg
setbe
sub
sbb
sub
xchg
ss
add
je
dec
jp
add
dec
sbb
xor
jnp
jg
cmpsb
nop
imul
insl
cmpsl
adc
pop
sbb
dec
test
push
rclb
mov
aam
or
xchg
adc
lret
xchg
in
xchg
aaa
or
adc
jo
leave
pushf
dec
jmp
sub
inc
rclb
das
xchg
add
bound
inc
mov
jl
sbb
flds
inc
mov
aaa
mov
cwtl
add
test
add
mov
stc
push
ret
or
inc
addb
cld
jo
fistl
lea
or
xchg
out
pop
rorb
sbb
inc
insb
push
mov
jle
jnp
jge
std
syscall
inc
sub
lahf
push
push
out
mov
clc
movl
jne
adcl
pushl
addl
call
sbb
mov
mov
xor
xor
or
mov
mov
xor
addl
add
movl
cmp
movl
je
addl
pushl
xorl
pushl
decl
call
movzwl
sub
jmp
or
and
loopne
shl
sti
and
xor
in
jle
cmp
rorl
lcall
popa
xchg
aaa
in
cli
dec
push
and
aaa
jmp
pushf
mov
sub
aaa
sub
dec
mov
shll
jb
mov
jmp
shl
mov
mov
and
outsl
ffree
insl
jp
mov
mov
dec
icebp
lock
mov
loopne
and
pop
lods
nop
loopne
lea
stos
cmpb
add
stos
cmc
jb
scas
negl
mov
xchg
jl
and
cli
mov
lods
mov
dec
mov
sbb
inc
mov
cltd
movsl
inc
ret
ret
arpl
cs
loope
mov
gs
shl
mov
push
add
mov
or
adc
jge,pt
push
bound
loope
lods
pop
int3
fimuls
jno
cmpsl
sbb
sbb
mov
hlt
add
xor
mov
adc
daa
xchg
ret
add
pushf
int3
xlat
aam
inc
inc
push
stos
idivl
push
cmpsb
cli
sbb
pop
cmc
bound
enter
dec
push
into
dec
xlat
popa
mov
xchg
cmp
mov
dec
call
xchg
push
mov
push
adc
inc
out
adc
push
movsl
pop
nop
dec
pop
aas
xor
or
sbb
cmp
mov
mov
or
push
adc
and
mov
pop
pop
loop
leave
ss
inc
les
push
jp
icebp
repz
lods
push
push
mov
cmp
lds
arpl
test
cltd
adc
loopne
arpl
cs
hlt
scas
mov
or
out
xchg
cmp
int3
xchg
jmp
add
sbb
inc
je
bound
imul
lods
test
imull
xor
addl
ret
mov
int3
clc
movsb
adc
add
repz
jl
jb
roll
pusha
mov
push
sub
mov
xor
or
jecxz
clc
add
xchg
and
out
in
shrd
and
mov
fisttpl
cmc
popf
std
orb
xor
mov
xor
adcl
add
movl
jmp
dec
ret
xchg
push
nop
push
dec
ret
mov
dec
adc
cmp
dec
ret
xor
imul
call
in
arpl
jnp
fdivr
push
mov
add
pop
push
pop
cmp
xlat
std
jmp
js
adc
daa
mov
sbb
stos
and
lret
outsb
push
ret
out
add
inc
lret
ljmp
add
or
add
lods
lods
int
and
cmpsl
adc
push
sbb
adc
jg
loop
rcrb
cmpsb
add
xchg
pop
jnp
addr16
outsl
hlt
test
mov
bnd
in
and
jo
jnp
inc
addr16
out
sahf
pusha
shrl
sub
out
test
push
jle
push
mov
mov
daa
pop
cmpsl
xchg
mov
jecxz
fcoms
stos
mov
mov
inc
aad
sbb
std
inc
out
fsin
cwtl
mov
int3
mov
mov
scas
sti
mov
pop
outsb
aas
mov
and
add
jl
stc
jbe
ss
adc
dec
and
rcr
inc
jge
sbb
clc
mov
sbb
pop
stos
jae
dec
das
shll
repnz
push
loop
or
repz
adc
loope
outsb
add
push
inc
inc
clc
les
jae
dec
xchg
mull
ret
push
ffree
push
movsl
adc
cltd
sub
mov
mov
sub
mov
add
outsl
pop
es
pop
cmp
rol
or
mov
movsl
push
push
cwtl
in
bound
inc
push
insb
dec
pop
nop
bound
adc
pop
xchg
jle
add
addl
mov
sbb
sub
mov
sarb
push
rcrb
and
push
test
subl
shll
lret
andb
mov
mov
cmp
les
bound
test
jo
comiss
pop
dec
xor
push
or
insl
add
lcall
sbbb
jnp
push
inc
jp
nop
cmp
repz
adc
cmp
clc
cmp
test
add
sbbl
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
adcl
jmp
stos
adc
imul
adc
lcall
jle
cs
call
or
xchg
sti
and
inc
xchg
push
dec
loop
mov
ret
bound
mov
into
pop
mov
adc
and
and
sarb
rorb
std
fidivrs
and
xor
inc
popf
out
pop
shll
les
cmc
or
xor
dec
cmp
cmp
inc
mov
aas
mov
das
mov
mov
mov
xor
and
inc
push
stos
sub
rcr
clc
dec
mov
dec
out
arpl
or
mov
xorb
adc
daa
aam
mov
cmp
scas
lcall
xorl
xchg
loopne
push
or
or
or
mov
cmp
jo
aaa
mov
fcmovnu
xlat
rcll
pop
push
lea
pop
inc
xor
cmp
pop
push
push
ret
in
gs
add
dec
inc
pop
adcb
xor
jae
dec
cmp
fldl
idiv
dec
dec
dec
lcall
cmpl
sub
xlat
adc
sbb
fimuls
inc
mov
cmp
sub
cmp
fiaddl
cmp
lret
shll
jge
cmp
aad
push
push
mov
das
sub
insl
adc
iret
into
cmpb
sbb
xor
inc
cmp
arpl
jns
and
in
pop
imull
xchg
xchg
mov
movsl
std
test
test
push
fnstcw
iret
dec
xchg
ljmp
push
jl
ss
jbe
mov
sub
lds
xchg
mov
in
cmp
dec
dec
mov
sbb
and
fstpl
loope
xlat
sbb
mov
sbb
aad
mov
jbe
xchg
adc
sub
mov
sub
mov
and
popa
pop
mov
fildll
imul
sahf
sahf
adc
xchg
mov
dec
shll
jbe
jbe
fsubp
sub
pop
movsb
iret
push
mov
cli
cmpsl
rorb
push
sub
lcall
xchg
push
cmp
mov
or
mov
mov
mov
notl
add
movzbl
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xorl
jmp
push
fsubrs
push
rclb
idivl
cmp
jo
js
push
cltd
stc
inc
mov
and
leave
enter
jp
sub
mov
loop
in
cmpsl
outsl
cmp
add
sub
cmpsb
sarl
xor
pop
mov
pop
hlt
xchg
cld
fldenv
outsb
stos
dec
xchg
ss
sbb
xchg
jbe
roll
mov
inc
sti
xchg
mov
xor
or
out
sub
sbb
xchg
popa
shll
outsl
lods
dec
dec
movsb
adc
shll
adc
sub
inc
adc
mov
sbb
fists
push
not
sbb
pop
push
mov
mov
repz
or
lods
push
mov
xor
push
sub
cli
aam
xchg
adc
jo
mov
cmpsl
sub
imul
xor
scas
rclb
scas
xchg
pop
ja
jl
mov
das
dec
sbb
add
mov
or
xchg
lcall
lcall
nop
or
imul
leave
push
subb
leave
or
add
nop
inc
xchg
leave
inc
arpl
xor
incb
in
jnp
movsb
leave
ret
into
mov
lds
mov
ret
lods
pop
stos
mov
sbb
or
add
add
pushf
testl
jae
sub
add
repnz
or
leave
cs
insb
insb
aam
nop
jbe
cli
loop
mov
jge
aam
adc
nop
jmp
or
fidivrl
mov
jle
mov
pop
sub
out
jnp
incb
lods
rcl
mov
and
pop
xchg
decb
fdivr
pop
js
lcall
xchg
loopne
lahf
inc
out
out
mov
adcl
push
sbb
sub
jge
stc
popa
testb
pop
sahf
movsb
push
daa
aad
dec
pop
fisttps
dec
or
dec
and
pop
add
add
push
clc
jno
jno
pop
repz
push
inc
bnd
cmp
pop
popa
jae
cwtl
mov
or
lea
cmp
lods
cmpsl
mov
sbb
leave
mov
sti
xlat
hlt
sbb
into
clc
cs
in
pop
xor
mov
inc
insb
jle
lock
sarb
hlt
pop
dec
fnsave
dec
jle
jg
test
pop
std
test
cmp
cmp
cld
mov
lret
dec
cmp
jp
mov
jle
jns
loopne
in
cmp
pop
push
rolb
sbb
mov
or
clc
pop
rol
adc
mov
adc
bound
inc
cmp
push
push
in
hlt
jno
or
xlat
xor
or
add
cmp
dec
fsubl
fisttpll
in
pushf
xchg
aas
arpl
fidivrs
pop
dec
dec
lcall
int
push
loop
mov
mov
bound
xchg
icebp
and
pop
xchg
pop
add
cmp
fidivl
inc
es
test
cltd
sub
inc
xor
or
shrb
xlat
push
jns
mov
mov
xchg
push
and
inc
or
xor
or
shlb
mov
in
inc
cmp
insb
in
cmp
xor
pop
cmp
xchg
in
addr16
bound
sahf
cmpsl
aas
shll
popa
jg
mov
ds
lret
es
lcall
ficomps
fimuls
idivl
inc
faddl
fmuls
dec
mov
outsl
cmpsl
fistpll
dec
es
out
out
or
sub
or
mov
adc
loop
xor
add
movsl
adc
pop
mov
pushf
mov
imul
ficompl
sbbb
loop
push
xor
in
sub
lcall
xchg
mov
cmp
testb
std
sbb
scas
jecxz
pop
cmp
in
push
pop
pop
std
jl
scas
jo
in
xchg
lea
mov
jns
ror
jns
ficompl
push
shlb
pop
add
sahf
cmp
decl
cs
mov
dec
aam
inc
in
mov
add
xor
mov
mov
mov
add
lea
mov
push
jmp
pop
pop
sub
imul
inc
jecxz
inc
call
jl
jle
in
and
sbbb
push
in
insl
shrl
jno,pt
jne
dec
jge
aaa
or
loope
out
rcl
xor
xchg
test
mov
les
adc
pop
inc
gs
imul
mov
mov
repz
sti
fnsave
or
mov
push
out
cli
ss
mull
loop
add
mov
sahf
ficoml
hlt
or
xchg
inc
aad
xchg
adc
push
stos
out
push
cltd
mov
sbb
dec
adc
lret
jl
pop
xchg
inc
out
mov
and
dec
push
ljmp
test
mov
push
add
test
and
fdivp
cld
xchg
andb
mov
addr16
and
test
jne
lcall
movsl
mov
and
jecxz
xlat
lds
mov
outsl
pop
jecxz
scas
pushf
nop
jno
movsb
mov
add
insl
sbb
mov
es
and
imul
ljmp
mov
pop
cltd
xor
scas
add
mov
ficompl
inc
sarb
mov
inc
lods
pop
in
enter
cmc
jmp
fiaddl
push
mov
or
inc
mov
lods
notb
push
push
sbb
mov
fistl
jmp
fsubs
shrb
lret
mov
into
arpl
sub
in
add
outsb
xor
clc
inc
push
outsb
mov
jmp
movsb
inc
and
pushf
cmc
or
sbb
ret
movsb
adc
sub
ret
or
xor
jle
cmc
imul
mov
out
stc
rorb
or
out
fsubr
cmpsl
test
int
lods
int3
fdivl
fcoms
fistpl
sub
rolb
fstpt
sub
xor
or
cmp
pop
mov
enter
out
ljmp
fwait
push
stc
push
pop
aas
xchg
fisubs
mov
es
cs
xor
pop
mov
jge
ja
nop
ret
into
lds
pushl
pushl
call
mov
mov
xor
add
cmp
jne
jmp
mov
jo
das
pushf
dec
je
stos
xchg
rclb
cmp
fwait
mov
ja
pop
pop
cs
stos
push
xchg
mov
add
push
iret
mov
add
adc
jecxz
add
idivb
nop
push
rcrl
inc
inc
push
les
std
mov
pop
mov
rcl
dec
fs
shll
pop
aam
add
ds
push
arpl
pop
call
or
inc
mov
push
pop
aas
es
cmp
loop
aad
je
jno
jo
adc
lahf
or
ljmp
and
add
pop
idiv
mov
decb
fildll
pop
adc
decb
es
push
inc
push
call
sub
xor
into
in
in
jo
hlt
dec
rol
dec
jg
push
inc
push
test
or
daa
lods
sub
push
std
cmp
lods
dec
imul
stos
test
pop
push
cltd
fldt
cs
lds
dec
jg
mov
js
or
dec
ds
in
lcall
std
lahf
mov
ljmp
jns
movl
or
jecxz
idivb
pop
dec
jnp
push
dec
dec
cli
idivl
mov
test
mov
int3
loop
or
out
mov
int3
fmul
jo
ljmp
out
pop
mov
sbb
stos
or
mov
jns
push
sbb
int3
imul
and
jge
insl
sub
and
mov
xor
test
fstpl
push
call
pop
mov
push
add
xor
adc
insb
lea
negb
out
cmp
mov
pop
insb
add
mov
or
xor
push
out
aaa
jb
lea
adc
sbb
faddl
xchg
mov
bound
cmp
imul
mov
rcll
push
push
or
cmp
sbb
xchg
int
fwait
mov
aas
mov
les
imul
std
dec
dec
aas
pop
and
scas
punpcklwd
loopne
cmp
jb
jmp
mov
xor
add
jmp
mov
jmp
test
popa
lahf
jno
inc
xor
sbb
cmp
sub
scas
mov
scas
sbbb
sub
xor
adc
div
and
test
movsb
mov
adc
popa
fstpl
mov
sar
ret
push
popa
add
mov
stos
jae
das
xchg
cmc
movsl
or
fwait
mov
cs
xchg
xchg
cltd
jbe
mov
push
add
jns
or
fbld
jae
pusha
xchg
pop
and
rorb
inc
mov
or
and
mov
mov
lods
testb
loop
shrl
or
clc
leave
mov
mov
mov
sbb
cs
hlt
or
mov
and
into
sbb
and
xchg
shlb
insb
popa
leave
into
enter
fistpl
sbb
cwtl
inc
inc
lahf
push
flds
push
out
mov
jge
cld
jae
xchg
adc
out
mov
sub
or
je
jae
cmp
pop
jecxz
add
loope
jl
pusha
mov
outsb
adc
or
in
xor
mov
or
test
inc
daa
cmpsb
adc
andb
sti
leave
stos
adc
push
push
adc
in
pusha
jmp
mov
into
push
pop
push
push
clc
sbb
mov
ss
pusha
enter
in
mov
imul
push
mov
push
lret
add
push
dec
jle
dec
negl
ss
sub
sbb
fisubrl
pop
insb
divl
daa
mov
in
inc
iret
xchg
js
jg
xchg
arpl
pop
and
jb
mov
mov
outsl
mov
fs
pop
je
xchg
dec
ret
nop
xchg
mov
pop
mov
jle
dec
pop
and
pushf
movsl
sbb
iret
cmpsl
xor
imul
aas
negl
add
and
push
adc
mov
push
jbe
jae
insl
cltd
adc
aaa
add
cmp
jg
popf
out
aam
fimuls
mov
jbe
xchg
sbb
test
push
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
jmp
into
mov
shlb
stos
mov
and
xchg
sti
jle
cmp
mov
pop
mov
ds
xchg
in
hlt
dec
sbb
or
sbb
popa
jae
pop
or
mov
repz
je
mov
xchg
mov
fmul
andl
push
cld
mov
hlt
push
inc
sahf
sarb
sub
inc
arpl
inc
call
int3
sbb
pop
jo
xor
sub
loop
lods
pop
dec
les
in
ret
push
jne
push
push
or
add
lea
sub
lods
xlat
out
mov
mov
cmp
xor
pop
cli
psadbw
jg
pop
inc
xor
imul
mov
out
fldl
fstl
inc
push
movsb
or
ret
rorb
lods
fidivs
jmp
adc
pushf
inc
je
inc
adc
loope
ja
imul
fstpt
push
jo
inc
xor
and
xor
lret
repnz
sub
scas
or
in
sbb
or
adc
inc
mov
push
push
mov
cs
ljmp
pop
sarb
cmp
sbb
lds
mov
push
enter
mov
jecxz
ds
inc
adc
ja
xchg
mov
push
popa
clc
pusha
inc
xchg
stos
pop
movsl
add
dec
iret
xor
mov
push
mov
cli
mov
shll
subb
mov
fcoml
fbstp
xor
out
int3
lock
ds
std
adc
jbe
lock
shl
aas
loopne
mov
push
ret
jo
jb
out
sbbb
test
hlt
mov
jbe
shll
adc
cmp
cmp
push
mov
jne
cmp
js
ficompl
push
int
lret
and
xchg
lahf
push
xchg
lret
fs
xchg
ja
sub
xchg
add
push
inc
dec
enter
jp
mov
sti
cmpb
mov
sarl
cmp
sub
pop
enter
ficoms
loope
jb
loop
add
inc
sbb
stc
ret
xlat
add
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
jmp
pop
jbe
push
scas
or
filds
jl
jle
roll
sub
push
daa
push
lret
icebp
fisubrl
jecxz
mov
out
sub
adc
xchg
cmp
outsl
xchg
pop
ja
outsl
jle
adc
mov
push
jl
jbe
jge
imul
adc
lock
int
xchg
mov
aas
test
adc
inc
imul
lds
cmp
dec
xchg
mov
cmc
jns
adc
xchg
pop
lods
stos
pop
and
jge
andb
das
inc
mov
out
and
xchg
aas
mov
cmp
imul
inc
outsl
shlb
dec
enter
fildll
clc
mov
xchg
outsb
sarl
mov
jmp
xchg
push
cmp
out
mov
lahf
ficoml
or
test
testl
adc
cli
pop
jo
push
movsb
jl
fwait
mov
ljmp
out
test
dec
or
out
adc
xchg
repz
and
jecxz
aas
fs
in
pop
adc
adcl
mov
icebp
lahf
push
pop
mov
iret
pop
or
dec
shlb
adc
sub
notb
or
outsb
jnp
push
xchg
mov
pop
into
lods
and
mov
jne
and
dec
pushf
push
insl
dec
sbbl
fldl
sub
outsb
sub
mov
popa
xchg
pushf
sbb
push
or
test
add
jae
dec
iret
outsb
es
stos
fmull
jo
cmp
rcr
xor
and
insl
out
in
push
mov
mov
dec
mov
cmp
inc
push
jns
xchg
dec
sbbl
sub
push
leave
in
cmp
lods
call
divb
xchg
roll
hlt
andb
leave
xchg
add
adc
or
mov
das
mov
adc
add
jo
mov
cwtl
or
mov
inc
cltd
cmp
out
mov
mov
xchg
fwait
push
mov
fldl
lods
sahf
adc
leave
inc
inc
adc
pop
sbb
dec
mov
imul
sub
mov
jmp
dec
loop
lds
push
jo
mov
sub
jno
mov
cmp
or
ret
ds
inc
lret
xchg
pop
xchg
push
inc
fs
or
pushl
mov
fcmovnb
sub
mov
cmp
movsb
push
push
xchg
scas
jno
sub
and
leave
movsl
adc
adc
mov
pop
les
popa
jecxz
nop
xchg
and
notb
call
jle
xchg
push
pop
xor
pop
push
out
jo
mov
test
xlat
dec
lret
lods
push
inc
xchg
adc
js
cmp
mov
shr
daa
sub
jmp
push
xchg
cmp
inc
icebp
sbb
cmp
sub
test
nop
mov
enter
inc
out
test
mul
mov
xor
fbld
jmp
std
mov
stos
push
sub
notl
lahf
mov
mov
es
dec
mov
inc
adc
cmp
movsl
int3
and
arpl
movsb
aad
mov
cmp
mov
cld
js
mov
fldl
test
mov
xchg
mov
out
imul
int
pop
xlat
pop
lods
nop
mov
adc
data16
sahf
push
lds
sub
notb
test
movsb
xor
test
lods
jg
sbb
lds
pop
daa
push
iret
fwait
out
push
or
imull
jp
lock
inc
add
out
xchg
mov
addr16
mov
cli
dec
xlat
aaa
xor
ds
inc
jnp
fs
pop
stos
pop
clc
sub
add
std
add
inc
addr16
cmp
aas
and
push
add
int
xchg
mov
pop
inc
dec
test
lahf
mov
inc
and
mov
cltd
sub
ja
pop
std
xchg
or
in
insl
idivb
xor
repz
cmp
mov
sbb
mov
sbb
pfcmpgt
push
pop
pop
lret
jl
mov
das
jle
fistl
xchg
jl
pushf
inc
cmp
pusha
pop
lods
xor
repz
in
or
hlt
test
add
inc
pop
pop
scas
pop
mov
test
push
or
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
jmp
dec
scas
push
pop
cmc
arpl
pop
clc
push
roll
jle
cmp
mov
cmp
xor
insb
cmp
repnz
jne
mov
adc
mulb
jp
cli
out
mov
leave
push
or
push
fsts
mov
ret
sub
in
and
ret
cltd
ja
jle
pop
pop
mov
inc
mov
push
clc
mov
mov
xchg
mov
push
pop
mov
and
ds
xchg
and
sub
out
xor
jle
jmp
sub
sbbb
jb
incl
in
sbbb
outsb
jbe
dec
out
dec
rcrl
movsl
xor
xchg
testb
inc
pop
int
push
xchg
xor
push
xor
cld
std
lds
test
xchg
hlt
bound
jo
cld
jp
pop
lea
enter
mov
inc
pop
rol
push
test
jp
cmp
adc
add
push
outsl
aaa
pushf
fwait
sbb
sbb
in
push
mov
mov
jmp
das
add
jb
sbb
mov
push
add
into
out
jle
out
aam
add
push
and
push
sub
cmp
sbb
les
mov
sub
aaa
dec
push
pop
stc
roll
cs
or
orb
and
jb
or
sti
mov
push
std
or
xchg
imul
xchg
leave
pop
xor
cmp
inc
sub
cmp
scas
rol
jge
into
lret
xchg
add
icebp
dec
mov
into
daa
popa
ret
jl
inc
out
sti
xchg
mov
push
dec
or
frstor
inc
xor
popf
testl
sub
lock
cld
push
mov
jno
add
insb
popf
clc
out
int
sbb
shll
xchg
push
orb
loope
xorl
faddl
mov
add
shrl
and
dec
stos
fstpt
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
jmp
leave
adc
cmp
xor
push
fcmovu
cmpb
jl
jle
leave
in
pop
mov
xor
ja
xor
dec
or
incb
dec
pop
cmc
int
sahf
or
pop
ret
rolb
push
push
xchg
adc
mov
push
movsb
and
inc
mov
lds
into
inc
jne
mov
adc
push
mov
out
xorl
fwait
pop
lods
lret
imul
xchg
jge
daa
repnz
inc
hlt
inc
fimuls
inc
je
rcrl
mov
iret
imul
cmp
stos
dec
mov
lock
pusha
stos
lea
jg
cs
cmp
mov
mov
sub
das
inc
mov
push
xchg
push
push
leave
cmp
xlat
inc
xorb
xchg
mov
fsubrl
repnz
mov
mov
stos
pop
enter
and
or
adc
mov
repz
addr16
and
cli
adc
lea
mov
jnp
adc
shll
flds
xchg
movsb
pop
mov
cmp
xchg
jo
mov
push
and
push
xchg
in
sub
push
ljmp
sbb
pop
movsl
pop
in
arpl
mov
out
xchg
and
rorb
sbb
stos
adc
mov
rcll
out
jmp
jecxz
xchg
dec
test
and
jnp
jecxz
cltd
std
mov
cli
inc
adc
shrb
push
push
cmp
loope
jne
sub
mov
pop
stc
add
jecxz
jno
and
mov
gs
jb
xor
arpl
incb
popa
sbb
insl
push
and
insb
test
pop
repz
xor
in
scas
jns
jge
out
jmp
cmpb
subb
popf
add
sub
adc
and
sub
adc
dec
inc
fcomps
mov
shrb
dec
std
hlt
cld
mov
je
sbb
test
mov
fsin
lock
adc
scas
out
pop
int
adc
sub
cli
jle
repnz
cmp
addr16
sub
mov
xor
jmp
pop
mov
cwtl
mov
mov
cmp
cli
stos
cwtl
mov
cmp
push
insl
loop
jle
iret
lcall
mov
xchg
cwtl
or
pusha
lcall
leave
sub
pop
adc
das
mov
lcall
outsl
or
cld
test
inc
icebp
je
stos
pop
or
int
rol
and
xchg
subb
dec
cwtl
or
pop
xor
inc
ljmp
and
fstp
mov
pop
dec
stos
out
sar
xchg
es
into
xchg
sbb
in
cmpsb
int3
adc
mov
enter
xlat
dec
jl
fists
xchg
imul
repnz
aas
dec
dec
cltd
adc
pushf
or
int
xor
cmp
test
push
jno
sbb
mov
mov
mov
jnp
idivl
jge
ds
mov
sarb
outsl
sbb
popa
cli
jle
push
gs
shrb
xchg
adc
jo
push
loop
and
adcl
sti
jge
pop
imul
and
adc
fstpl
inc
mov
sbbb
push
push
xor
cmpsl
in
mov
test
cli
outsb
sub
lcall
les
pop
xchg
push
adc
xorb
and
pushf
inc
sub
cld
mov
lods
and
loop
pushf
ret
movb
int
int3
clc
xchg
cwtl
jmp
pop
popa
ret
hlt
das
pop
std
data16
inc
arpl
jmp
aas
sbb
jp
iret
pop
in
or
dec
dec
nop
hlt
xchg
aaa
jecxz
adcl
sub
in
pop
add
lods
sub
mov
xor
pop
push
mov
mov
das
int
sbb
mov
sti
fstps
out
xor
and
mov
pop
pusha
and
pop
iret
lds
test
fidivl
aad
adc
loopne
sbb
popf
adc
or
and
repnz
mov
sub
inc
cli
push
add
cmp
sub
mov
add
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
jmp
imul
push
int3
xor
test
bound
jle
xchg
dec
add
cmp
inc
ds
mov
inc
lret
push
in
inc
push
inc
or
int3
sbb
in
sub
fimuls
sbb
mov
xor
aad
jno
in
push
pushf
nop
es
xchg
sarb
scas
jmp
push
or
adc
sub
cmp
ret
in
sub
xor
dec
dec
jl
sbb
jle
test
cmp
jge
scas
xlat
cltd
inc
ret
sahf
lds
adc
pop
add
push
jno
cwtl
lods
pusha
sub
xor
xor
jmp
mov
mov
int3
pop
arpl
sub
sbb
xchg
jmp
add
popa
mov
stos
pop
inc
rclb
call
jmp
sub
es
popf
mov
or
ret
nop
test
mov
jl
pop
les
cmp
nop
mov
lret
insb
lret
and
push
sub
fcomps
or
cmpsl
xorb
pop
insb
imul
fildll
push
cmp
gs
or
es
lahf
push
sbb
mov
mov
pop
pop
fiaddl
jne
mov
cltd
inc
xor
popf
add
stos
ja,pt
dec
mov
mov
jb
and
adc
shl
subl
dec
outsb
movsl
sub
cltd
fmuls
lock
addl
cmpsb
ss
sub
out
je
fs
pop
mov
mov
mov
movsb
rolb
cwtl
sbb
cs
jp
mov
lock
and
popa
std
cmp
inc
daa
in
fidivl
and
insl
loopne
sbb
sub
jne
outsb
sbb
mov
and
fsubr
xchg
lods
out
cmp
dec
jecxz
xchg
test
sbb
lcall
lock
inc
xor
dec
adc
testb
mov
int
fs
mov
leave
les
xchg
sbbl
sub
xchg
jmp
push
std
dec
sahf
push
push
add
divb
out
sub
jle
cmp
jmp
call
or
sbb
pop
lods
mov
adc
cmp
inc
rcrl
pop
int
add
xor
test
push
mov
fldcw
dec
les
mov
mov
add
arpl
inc
adc
popa
arpl
ret
inc
adc
sbb
rol
cmp
jle
adc
ss
mov
push
scas
xchg
popa
stc
in
jle
cltd
jae
in
jl
jg
subb
loope
pusha
jns
pop
mov
inc
sub
jl
cmp
fwait
pusha
aas
cwtl
cmpl
inc
mov
adc
sbb
mov
jp
xor
mov
mov
out
xlat
fsubs
bnd
push
daa
fsqrt
and
out
in
js
out
push
inc
jl
std
movsl
inc
cmp
repnz
test
lret
std
movsl
in
lcall
cmp
sub
out
test
inc
fdivr
fsubs
mov
jmp
and
aas
sbb
cli
push
fsts
push
aad
les
pcmpeqb
sub
push
idiv
pop
cmc
aaa
stc
cmp
scas
xor
movsb
mov
fcmovnu
jmp
pop
lods
fwait
pop
loop
lahf
cli
movsl
add
mov
roll
dec
shll
inc
jg
inc
push
movsb
rcr
mov
dec
mov
aas
pushf
ret
xor
lcall
aas
stos
pushf
or
sub
outsl
gs
jmp
adc
mov
daa
or
cwtl
mov
in
push
pushf
les
cmp
xchg
test
aam
sub
mov
mov
test
adcl
cli
inc
repnz
sub
flds
outsb
push
or
scas
mov
mov
push
cmp
ds
mov
lds
mov
movups
xchg
stos
adc
mov
mov
sbb
push
mov
dec
inc
dec
es
jns
mov
or
imul
add
xchg
jmp
sahf
testb
push
repz
jae
ficoms
jae
xchg
cmp
movsb
or
ss
pop
data16
jb
push
cmpsl
popf
mov
and
pop
xchg
sub
fidivrl
in
cmp
sbb
jae
addr16
mov
mov
cmp
sbb
outsl
out
mov
cs
inc
int3
ficomps
adc
cmp
adc
maskmovq
push
jg
mov
xchg
jecxz
sub
enter
mov
pop
aaa
jg
popa
or
int
aas
mov
out
popf
out
pop
pop
jb
testl
fbstp
inc
out
mov
adcb
lahf
scas
inc
cmp
cs
push
aaa
push
lea
xchg
fs
into
or
mov
pop
jae
mov
repz
mov
clc
mov
loope
pusha
mov
sub
pushf
cmc
push
xchg
daa
jns
fisubrl
shrl
movsb
das
sub
xor
lods
inc
cmp
iret
push
jne
sti
lcall
sub
test
inc
and
sbb
add
push
mov
sbb
jp
into
mov
jp
lret
pop
inc
inc
jo
bndstx
mov
out
lret
outsl
jge
dec
cmc
sub
in
mov
call
or
and
jge
adc
jg
mov
lret
and
and
sbb
jp
jmp
xorl
jb
jne
outsb
mov
cmc
addl
fldl
popf
mov
adc
es
and
sarl
sbb
lds
or
mov
inc
fldcw
rcl
inc
xchg
inc
iret
imull
mov
iret
adc
and
sub
insl
jecxz
sbb
add
daa
lea
ficompl
push
jg
add
sub
jmp
int3
shlb
scas
shrl
mov
mov
and
and
cmp
cld
rorl
fldcw
cmp
dec
in
sub
add
test
and
push
xor
mov
dec
jmp
fwait
push
mov
mov
mov
pop
call
xchg
jle
cmp
dec
aaa
shrl
inc
cwtl
arpl
push
ret
xor
negb
or
outsb
shr
adc
aas
rcrl
jl
dec
or
pushf
pushf
cmpsb
inc
es
xor
aaa
adc
and
nop
mov
cmpsl
outsb
mov
int3
fwait
je
roll
dec
setle
and
or
mov
adc
fmull
test
ja
mov
les
pop
ret
sub
xchg
idivb
sarb
mov
push
pushf
lds
push
mov
sub
pop
mov
pop
or
add
pop
setae
sarb
jmp
jns
into
orl
inc
lods
in
xchg
push
pop
xor
push
pop
mov
xchg
test
jmp
in
dec
xor
adc
mov
xlat
xchg
lea
movsl
imul
xchg
roll
push
jb
adc
push
dec
adc
pop
sub
stc
mov
xchg
test
fcoml
mov
ds
sbb
mov
ret
xchg
imul
jl
adc
pop
fists
jle
cmp
out
jmp
lock
push
dec
xchg
ljmp
xorl
dec
inc
sub
cmpsb
jns
fnstsw
xchg
cmpsb
add
testl
imul
push
jo
popa
adc
jp
pusha
jle
mov
int3
clc
lahf
dec
sub
lret
xor
mov
mov
dec
roll
adc
xchg
imul
lods
fsubl
scas
or
out
cmp
jle
jae
cmp
jae
dec
and
cmp
push
test
pop
arpl
cmp
sbb
arpl
jb
pop
xchg
push
push
push
repnz
fisubl
jo
xor
push
mov
lret
mov
xchg
ja
rorb
popf
mov
aaa
jno
adcl
pop
shl
mov
sub
mov
dec
lds
pop
sub
push
test
jne
jne
sarb
xorb
out
int
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
not
push
mov
mov
movl
mov
push
movl
mov
movl
mov
push
not
mov
notl
mov
movl
cmp
movl
je
mov
mov
subl
xor
add
movl
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
movzbl
add
mov
mov
xor
add
push
pushl
pushl
mov
call
mov
mov
jmp
mov
jo
adc
mov
jp
jle
jl,pt
jle
xor
push
sbb
mov
int3
mov
mov
add
xchg
in
shlb
inc
aaa
mov
loope
loop
std
sahf
sub
filds
pop
loop
mov
push
pop
mov
int
ljmp
mov
stc
sub
std
jnp
rcl
sbb
and
hlt
add
sub
inc
dec
inc
lods
and
sub
sahf
rorl
mov
push
push
loope
iret
dec
popf
dec
sbb
nop
sbb
mov
aaa
inc
inc
int3
and
mov
jo
test
ljmp
mov
dec
mov
lock
inc
inc
xorl
vprotw
cmp
or
jae
mov
sti
clc
negl
hlt
int3
out
mov
cmpsl
mov
mov
sbb
aad
push
iret
idivb
mov
mov
adc
shll
fcmovne
xchg
jg
adc
insl
add
inc
jl
adc
fidivl
mov
dec
cltd
xchg
mov
leave
stc
and
lahf
dec
mov
fldt
mov
adc
lods
shll
ficomps
jecxz
mov
pop
mov
out
xor
das
add
sahf
xchg
inc
sub
pop
enter
das
pop
cmp
mov
push
pop
out
in
out
xlat
jns
ja
sub
lcall
jl
inc
push
andl
out
test
dec
movsl
ficoms
sub
xchg
lahf
shrb
out
inc
fisttpl
add
dec
andl
xchg
roll
dec
mov
fsubl
pushf
mov
das
xchg
pop
fwait
or
add
inc
cmp
inc
jns
fnsave
addb
push
jb
pop
int3
lock
movsl
dec
mov
or
imul
and
xchg
ss
inc
xor
lret
and
ja
fwait
imul
icebp
mov
mov
imul
pop
dec
popa
and
push
repz
mov
and
sub
or
shlb
pushf
pop
and
mov
mov
jmp
mov
mov
xor
add
jmp
orl
imul
inc
cmp
cmp
jle
adc
mov
aas
shlb
push
jno
push
inc
sub
jge
shrb
repz
out
inc
fdivs
lea
sub
and
jmp
inc
dec
or
xor
insb
xchg
bound
jbe
mov
cmc
mov
cmpsl
inc
lahf
shrb
mov
pop
pop
xchg
xchg
and
push
adc
add
xlat
dec
ss
fstl
add
xor
out
push
cmpsl
pop
and
sti
daa
push
cmp
gs
fisttpll
or
outsl
enter
adcl
ret
inc
jne
jae
leave
fwait
pop
or
xchg
sti
push
in
inc
iret
insl
js
aas
pop
xchg
sub
or
xchg
fucomp
ds
xchg
out
xlat
dec
xchg
and
mov
repz
je
mov
mov
sahf
mov
push
loop
jle
lock
mov
int3
sti
mov
cld
mov
inc
cld
and
pop
inc
mov
mov
aam
push
mov
cmpsl
aad
in
orl
mov
pop
sbb
and
jb
fs
jno
cmp
cmpsl
loopne
sub
dec
sarl
mov
push
into
leave
adc
mov
outsb
test
idiv
pop
mov
and
je
cmc
dec
repnz
in
xchg
xchg
aaa
jl
mov
push
and
or
dec
mov
iret
out
adc
jmp
mov
int
push
aad
insb
repnz
aaa
out
fs
jge
es
test
fldt
xchg
jb
arpl
je
mov
push
outsl
adc
popa
and
lahf
push
mov
mov
nop
outsb
jle
adc
mov
pop
fisubrs
push
adc
cwtl
push
sbb
dec
ds
ljmp
shlb
repz
or
popa
or
shrb
and
enter
jmp
subb
xchg
cmp
sbb
mull
push
mov
rorl
addb
add
jmp
mov
loopne
adcl
sahf
jle
jl,pt
jle
inc
dec
ss
push
aaa
imul
push
dec
jmp
lret
pop
in
lret
mov
pop
loop
add
es
cmp
dec
in
push
bound
mov
sbb
mov
je
outsl
lds
into
dec
pusha
movsl
lods
and
arpl
jg
repnz
lds
xchg
xor
mov
lods
imull
xlat
and
test
jb
testl
mov
ja
or
std
inc
mov
aad
or
mov
bound
jecxz
imul
scas
repz
xor
xlat
jo
pop
lret
jne
inc
dec
loop
popf
push
jl
mov
aam
or
cwtl
and
ret
dec
test
out
mov
pop
mov
cs
adc
adc
push
out
jbe
bound
jae
add
mov
icebp
lret
int3
lock
enter
lods
hlt
fs
lret
out
fstpt
add
int3
ret
jle
test
scas
ss
aaa
push
shrb
aam
jbe
fs
mov
fnstenv
fdivrl
mov
hlt
push
test
add
cltd
xchg
inc
cmp
cli
insl
fnstcw
movl
cmpsl
call
out
pop
xchg
add
cmp
dec
into
cld
mov
fisubrs
lret
test
cmc
jmp
mov
sbb
idivb
test
xchg
imul
jnp
scas
mov
sbb
sti
lret
mov
sbb
and
adc
push
clc
or
mov
mov
sub
stos
stos
sub
pop
sub
fstps
jle
out
xchg
jb
stos
jb
add
aad
push
jmp
cmp
cmp
push
or
sarb
js
xchg
dec
fadd
into
mov
jb
out
mov
xchg
mov
mov
int3
jp
cmp
andb
outsb
adc
mov
xor
cmpsl
mov
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xorl
jmp
push
inc
jb
jb
icebp
fisubrs
into
mull
mov
lods
mov
jg
jle
push
repnz
xor
push
rolb
inc
out
xchg
movsb
lret
mov
incb
cltd
pop
xor
pop
in
inc
push
jp
jae
mov
lock
sub
test
aad
and
push
pop
into
xor
cld
dec
pop
push
fs
cmp
jg
mov
js
repz
sbb
fcoml
adc
pop
inc
fnclex
iret
pop
sub
fwait
pop
repz
pop
in
mov
decl
popa
add
mov
into
sahf
mov
dec
imul
mov
loop
repz
test
ret
pushf
sbb
in
leave
lods
fdiv
dec
scas
push
sub
jp
cli
popa
fiaddl
inc
cmpsb
mull
add
mov
in
mov
int3
test
ja
cwtl
or
push
daa
cmp
sti
adc
hlt
in
jb
xchg
mov
add
mov
add
pusha
xor
inc
push
pusha
sub
inc
xchg
push
and
adc
pushf
arpl
cmc
das
mov
subl
push
subl
push
or
mov
jmp
cmp
shll
xor
stos
xlat
jp
popa
pop
popf
jle
adc
jle
repnz
dec
adc
nop
mov
lock
outsb
inc
jnp
idivb
ja
sbb
leave
jae
adc
aaa
mov
sbb
movsl
stos
mov
sub
cmp
jecxz
fwait
lods
cmpsb
push
stc
ret
repnz
jp
jo
and
mov
aad
pop
mov
movsl
sub
add
cwtl
or
add
push
push
pop
andb
les
js
sti
orb
sahf
jo
fsincos
mov
or
sub
sbb
ljmp
sahf
add
lahf
inc
cmpsb
aas
jo
es
jge
and
imulb
jnp
cmp
pusha
lret
data16
stc
mov
psubd
ljmp
inc
or
cmp
cmp
int3
arpl
cltd
fcoms
mov
xchg
sub
es
dec
out
testb
or
data16
inc
std
or
cmp
mov
or
mov
fcmovnb
jne
push
and
push
xor
adcl
mov
xorl
add
push
jmp
pop
jecxz
call
and
out
gs
and
jle
adc
jle
jo
dec
test
pop
inc
mov
pop
inc
fcmovnu
ret
rorb
adc
cltd
stos
and
xor
mov
xor
aam
outsb
es
xor
and
das
ret
lods
repnz
push
mov
addl
jmp
sub
jae
negl
clc
daa
psubusb
xchg
nop
mov
lahf
mov
stos
cmp
xor
dec
nop
add
scas
jae
cmpsl
sbb
fs
out
xor
pop
inc
push
mov
outsb
stos
fcoml
xchg
cs
mov
mov
xor
xchg
mov
rolb
sub
mov
push
cmp
and
in
push
icebp
mov
sub
adc
cmp
push
mov
xchg
or
cmp
mov
icebp
mov
sbbl
repz
dec
push
mov
mov
or
nop
xchg
mov
pop
bound
pop
mov
out
dec
lods
mov
iret
scas
sub
mov
mov
incl
xor
addl
movl
movl
decl
add
movl
jmp
cmp
jne
movzbl
mov
mov
movl
mov
movl
mov
movl
mov
movl
mov
movl
jmp
movl
cmp
movl
jne
xorl
andl
mov
addl
sub
xorl
push
sbbl
mov
movl
add
push
call
movl
incl
cmpl
movl
jb
movl
jmp
movl
cmp
movl
jne
movzbl
and
movl
addl
mov
mov
mov
mov
and
jmp
test
test
mov
jo
stc
ret
incl
jle
adc
jle
add
xlat
rcrl
movsl
in
inc
add
int
fisttpll
mov
sbb
repnz
ja
mov
jne
inc
mov
gs
lcall
xor
inc
imul
mov
mov
int
adc
lahf
cmp
xor
sbb
andl
es
xchg
sub
pop
in
cmp
or
clc
mov
in
adc
mov
push
fs
or
adc
inc
orb
sbb
push
ja
add
sbb
sub
mov
mov
fmul
inc
mov
out
scas
or
cmp
mov
sub
jnp
dec
sbb
jmp
mov
es
jns
inc
and
mov
mull
sbb
mov
adc
fsincos
cmp
mov
orl
xor
add
sbbl
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
jmp
shlb
sub
xor
adc
jle
pop
xor
jbe
adc
pop
aam
inc
mov
and
idivl
sahf
ret
dec
inc
sub
outsb
jle
addr16
sbb
xor
xorb
les
add
mov
out
jg
fst
add
mov
sbb
xlat
xor
cs
mov
pop
loopne
daa
adc
xchg
mov
and
inc
fnstcw
and
jecxz
inc
adc
xor
jge
fimull
xchg
lret
mov
popa
ret
sbb
xor
push
popf
stos
rcrl
dec
add
jmp
inc
sub
ret
aam
shrl
and
xor
sbb
adc
push
es
adc
repnz
mov
and
js
mov
sbb
rcrl
pop
push
shr
push
rcll
jne
sbb
xor
or
and
inc
notb
sub
cld
pop
add
add
in
jmp
jb
lods
ljmp
mov
into
cmpsb
jle
adc
jle
call
jmp
sbb
mov
mov
ds
fstl
or
mov
out
mov
sarb
pop
xchg
rorl
xlat
lahf
inc
in
shrl
mov
call
add
jle
pop
cmpl
add
outsb
insl
rcll
mov
repz
cmpsb
aas
push
fistps
call
cmp
jle
call
jp
and
jbe
data16
add
out
ja
dec
out
iret
ret
adc
sarl
jmp
imul
jnp
shrl
and
test
sub
xchg
mov
dec
xor
imull
and
ss
adc
push
mov
int
outsb
mov
lods
outsb
mov
into
je
sbb
and
mov
je
shll
push
pop
jnp
jae
iret
aaa
mov
fldl
and
aas
xchg
pop
dec
test
sbb
in
and
sub
jno
mov
pushf
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jmp
xor
xchg
das
push
jne
loope
jecxz
loope
dec
sti
out
cmpsl
jle
adc
jle
data16
jecxz,pn
sub
pusha
lods
jmp
stos
in
xor
dec
xchg
in
outsb
push
aas
idivl
scas
fadds
dec
in
fsubp
test
push
mov
mov
clc
mov
fbld
inc
bound
jmp
jns
int
lds
sub
aas
mov
mov
sbb
stos
call
lds
mov
mov
pop
inc
shll
push
or
int3
sahf
and
sar
cwtl
sbb
clc
hlt
aas
iret
xchg
repnz
into
loop
test
adc
sub
xorb
addr16
js
pop
inc
sbb
mov
ss
fwait
decb
popf
sbb
lea
loop
pop
lret
dec
xchg
xchg
push
adc
leave
sbb
push
push
jp
in
sub
das
cmp
inc
dec
xchg
push
test
mov
sbb
cmp
and
lret
mov
fs
cltd
mov
in
dec
sbb
test
stc
decl
pop
jmp
movsl
sbb
loope
icebp
mov
jns
add
jb
movsb
jle
adc
jle
cli
dec
and
int3
clc
jg
pop
ja
lea
jns
mov
inc
icebp
mov
adc
add
xchg
pop
jmp
lds
cmp
adc
movsl
cwtl
movsl
psubsb
fistpll
push
xchg
inc
cmpb
stos
loopne
cwtl
aam
jge
mov
iret
sbb
add
cmp
fmul
adc
fidivrs
dec
shl
je
add
rclb
xchg
add
popf
lods
mov
jle
or
push
cmc
mov
pop
or
call
add
rcll
adc
outsb
mov
jle
daa
or
mov
sub
stos
mov
dec
mov
shl
and
inc
aaa
jb
fists
out
pop
fcoml
imul
stc
adc
xor
inc
std
mov
leave
incl
test
cmc
rcrl
adc
pop
lea
xor
frstpm(287
insb
jno
mov
leave
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
movl
push
movl
sbb
movl
mov
push
add
mov
adc
mov
jmp
imul
mov
jecxz
sbb
and
fstpl
jg
jle
xor
pop
rcrb
mov
push
repnz
cmc
or
pop
add
mov
insl
pop
sub
jb
xor
loope
dec
enter
into
cmp
jnp
daa
js
test
out
jmp
dec
cmpsb
xchg
jp
movsl
mov
dec
dec
cltd
outsb
das
add
xchg
xor
std
cli
stc
xor
add
pop
jge
xor
sub
mov
in
lods
inc
pop
mov
fwait
inc
mov
icebp
jno
adc
fbld
rcrb
movsb
xor
stos
test
and
push
leave
leave
shrb
decl
cs
fidivs
mov
repz
fdivrl
out
jecxz
xor
mov
inc
hlt
mov
cmp
mov
rcrl
pop
cwtl
and
cltd
mov
sbb
movsl
mov
inc
xchg
mov
mov
add
lea
lea
imul
cmp
clc
into
adc
add
test
cmp
imul
and
lahf
add
inc
xchg
roll
scas
dec
sbbb
and
sti
pop
out
or
xor
es
xchg
xor
jns
jne
std
jbe
pop
lods
mov
cmp
out
mov
loopne
repz
or
xor
xor
cli
add
sbb
mov
adc
das
pop
mov
roll
pop
add
sub
cwtl
push
loop
inc
pop
ficomps
jecxz
ss
fcoml
movl
popf
or
std
sbb
xor
sub
xor
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
push
call
mov
dec
mov
jmp
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
jmp
mov
push
jno
mov
ja
sbb
lock
jle
addr16
pushl
mov
ss
fwait
pop
add
aam
push
insl
push
jl
es
adcb
fwait
outsb
gs
rolb
sbb
pop
cmc
cmp
int3
jecxz
cmp
es
mov
mov
dec
cmc
lret
jae
add
int3
lods
xor
xchg
test
adc
cs
repz
fcmovbe
shll
sub
inc
rcr
mov
or
lcall
cs
cmpl
sub
xchg
into
outsl
mov
dec
shlb
jp,pn
mov
sub
hlt
cltd
jle
or
sub
mov
fcomip
xchg
or
mov
fs
mov
imul
repz
clc
mov
sbb
lcall
shlb
inc
mov
sub
arpl
dec
in
or
out
xor
push
or
fistl
movsb
mov
sbb
cmpsl
xor
xchg
xor
out
adc
cmp
cmp
dec
pop
mov
sub
leave
ss
mov
nop
sbb
nop
xchg
sbb
pop
dec
fsubr
popa
jae
je
inc
popa
clc
std
push
das
les
scas
push
and
sbbl
cmp
cltd
xchg
xchg
cmpb
sub
popf
ds
dec
push
pushf
push
mov
xorb
loope
inc
add
xlat
xor
int3
lods
sti
push
out
fs
out
ds
fsubl
test
and
loopne
into
mov
pop
mov
pushf
adc
mov
js
push
lret
lods
cmp
adc
out
jge
repz
mov
fnstcw
jno
js
nop
cld
lcall
push
lahf
lds
mov
pop
leave
ret
push
mov
push
push
incl
jmp
inc
iret
scas
mov
jno
sub
add
mov
jle
in
test
jno
inc
mov
and
inc
mov
rcl
push
rcr
sub
inc
aas
jnp
aam
repnz
mov
mov
pushf
push
mov
ljmp
xchg
inc
push
ja
xchg
jge
cmc
addr16
out
xchg
dec
adc
xor
das
in
dec
call
popa
aas
and
test
jmp
icebp
and
xchg
or
jnp
dec
popf
imul
fs
sbb
jns
mov
mov
addl
out
or
jno
aad
scas
sbbl
mov
data16
and
jbe
xor
sbb
js
je
xchg
xchg
push
mov
cld
jb
mov
and
or
aaa
out
dec
aas
movsl
daa
lret
sub
or
pop
aam
pop
imul
mov
xor
sub
lretw
or
lahf
addl
adc
aam
hlt
outsl
jle
nop
data16
mov
adcl
adc
and
xlat
jae
je
push
mov
arpl
sti
scas
cs
xorl
aaa
cmp
lret
lea
add
xchg
mov
dec
inc
insl
sub
loopne,pn
scas
add
les
mov
and
mov
int3
int3
ret
or
pop
daa
fildll
xchg
mov
notl
std
jg
sti
pop
addr16
inc
bound
and
flds
xchg
sbb
pop
xorb
mov
orb
stos
in
mov
and
pop
pop
dec
mov
mov
xchg
mov
cmp
data16
fisubrl
xchg
jecxz
xlat
sbb
dec
call
jle
add
dec
xchg
cli
xchg
cmp
shrl
cmc
cmp
nop
inc
and
pop
mov
dec
inc
negb
es
jg
mov
inc
and
movsb
pusha
divb
sub
mov
cltd
cwtl
out
mov
mov
pop
pop
push
into
leave
bound
or
mov
inc
repz
cmc
and
and
orl
pop
mov
sahf
out
xor
mov
ret
insl
and
scas
scas
mov
les
inc
dec
adc
sbb
cmovne
aam
les
xor
inc
jbe
dec
cmp
mov
mov
fcmovnu
movl
xor
imulb
mov
add
or
test
add
inc
adc
push
pop
xor
cmc
push
into
in
sbb
aad
sbb
cld
aaa
lahf
xchg
pop
sub
int3
mov
int3
inc
lock
or
je
xor
jecxz
test
ss
std
xor
push
hlt
cs
repnz
cmp
gs
xor
daa
aaa
inc
add
add
add
leave
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
sub
sub
mov
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jb
mov
adc
movl
mov
push
mov
xor
mov
push
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
jmp
and
sbb
push
jo
dec
add
cmp
lods
jle
jl
jle
scas
insb
xlat
and
inc
mov
or
movb
dec
xor
dec
inc
mov
fmulp
clc
jecxz
ret
movsl
sub
xor
jae
and
adc
cmp
test
in
imul
xlat
sti
loope
sub
test
pop
dec
negb
sub
cmp
test
jbe
ret
out
movsb
cs
insl
out
fcmovb
mov
cmp
jmp
fwait
push
pop
into
jmp
fidivs
imul
cld
sarb
rolb
push
sbb
push
mov
and
mov
ds
mov
or
adc
sbb
fisttpl
push
outsl
inc
bound
xchg
inc
jnp
jmp
lock
jg
adc
xchg
add
movsb
add
fisubl
lods
lods
mov
inc
nop
rcrl
sub
rorb
movsl
int
push
int
ljmp
push
mov
or
fst
cld
loopne
das
gs
imul
ficoml
adc
dec
inc
and
enter
xchg
adcl
cmp
push
push
rorl
ds
dec
jb
jl
adc
sub
inc
loop
loopne
sbb
mov
cmc
and
jge
je
mov
pop
ret
xor
sbb
and
daa
xchg
xor
cmp
and
iret
nop
sbb
push
rorl
out
jno
lahf
pop
lds
jb
cld
mov
imul
push
mov
fcomps
and
mov
iret
fs
xor
jl
out
rolb
push
test
inc
adc
cld
xor
dec
mov
dec
add
mov
or
add
lahf
lods
jno
xor
mov
movsl
ror
lcall
pop
fs
jle
xor
daa
mov
push
xchg
mov
cmp
xchg
rolb
popf
dec
push
mov
iret
xchg
je
pop
add
sbb
int
repnz
xchg
jnp
clc
or
sub
push
fucomp
das
stos
or
sub
push
pop
das
daa
out
sti
and
dec
cmp
movsb
lret
push
inc
aad
fs
mov
adc
cmp
mov
movb
fsqrt
sub
jecxz
inc
repz
shlb
outsb
dec
mov
in
xchg
jp
or
mov
xor
jp
mov
dec
std
cld
ja
and
push
sub
dec
enter
mov
xchg
xchg
cltd
dec
in
push
xchg
dec
aas
fldt
mov
jecxz
fwait
or
jmp
pop
and
sub
push
pop
mov
inc
add
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jmp
andb
in
loope
arpl
adc
jg
stos
jle
jl
jle
cmp
addr16
out
in
push
or
shl
push
call
inc
ljmp
test
jb
adc
aam
fst
and
lret
jle
pop
mov
jmp
iret
adc
xor
lock
lock
push
pop
pop
nop
loopne
lahf
and
inc
lods
dec
mov
pop
add
popf
jle
push
xor
test
sub
sub
cmp
xorb
je
mov
adc
fisttps
aad
test
dec
jp
inc
inc
test
notb
cmp
loop
test
cmp
or
cmp
addr16
pop
rolb
cmp
or
push
outsb
mov
movsb
adc
mov
mov
dec
xchg
pushf
bound
mov
hlt
xchg
cmp
cltd
ret
pop
pop
lret
mov
xchg
popa
dec
fs
insb
cmp
push
cmp
jl
inc
aaa
sbb
fisubs
sbb
pop
andb
lds
arpl
jne
aad
into
or
xchg
inc
cltd
nop
pusha
cmc
jl
jno
call
mov
insb
out
xchg
les
jg
int3
aaa
and
scas
ja
lret
mov
in
movsb
sub
arpl
adc
stos
aad
movsl
mov
jno
adc
push
mov
inc
adc
test
out
add
flds
xor
divl
or
add
push
lea
inc
ja
outsb
sub
sbb
cli
nop
lea
out
fcomp
fnstsw
cmp
loopne
int
or
mov
jno
add
mov
testl
fstpl
dec
push
adc
mov
rorl
leave
xor
mov
nop
movsl
or
lods
call
xchg
sbb
pop
jne
call
repz
mov
jae
jae
faddl
pop
xchg
jae
lods
ror
adc
nop
push
stos
stc
xchg
fcom
or
mov
sub
rolb
aaa
rcrb
jg
les
push
mov
inc
cs
push
push
jecxz
out
adcb
nop
repz
loopne
mov
shll
and
mov
dec
fnstenv
cmpb
pop
jno
dec
and
int3
mov
into
jecxz
adc
insb
or
pop
mov
sub
or
iret
das
popf
mov
adc
jmp
dec
movsl
adc
outsb
jecxz
sbb
repnz
bnd
dec
stos
addr16
fmuls
ja
adc
sbbb
xorb
into
test
xor
cltd
mov
pop
jb
xor
xor
push
jb
scas
dec
ret
repnz
fwait
push
fistps
jbe
pop
mov
pop
pop
leave
ret
push
mov
jmp
shll
jno
aad
xor
jo
shlb
jle
in
shlb
movsb
repnz
xchg
pop
jecxz
sbb
jg
mov
add
lcall
jae
sbb
ja
ficoms
cli
cltd
xchg
sub
xchg
lret
loop
je
test
push
test
sahf
nop
ss
mov
mov
lret
xor
dec
push
inc
mov
pop
xchg
mov
sbb
sub
stos
fwait
aas
js,pn
pop
insl
mov
lret
fwait
inc
push
outsb
lock
xor
lods
fisubs
pop
adc
outsl
ret
test
cmp
fdivr
rclb
pop
ficoms
or
inc
push
into
pop
inc
mov
push
dec
ljmp
push
dec
lods
popa
in
das
jge
inc
sub
das
shr
inc
mov
mov
in
sub
insl
cmp
pop
add
jl
je
mov
pusha
mov
test
mov
out
jb
out
nop
das
inc
gs
lods
ljmp
stos
xchg
loopne
sbb
lods
nop
push
sub
mov
adc
xchg
jmp
xor
std
int
add
iret
aad
mov
jecxz
shrb
int
daa
adc
cmp
addr16
mov
xchg
inc
lock
out
lret
mov
sar
cmp
rorl
and
ret
int
movsl
pop
addr16
pushf
clc
push
or
mov
xchg
fiaddl
mov
cmp
enter
mov
mov
sbb
jne
or
ret
jmp
cmpsb
cltd
cmp
inc
xor
sbb
xchg
int
fs
sar
in
mov
aas
or
or
jbe
jns
mov
aas
aaa
adc
mov
cmp
or
xchg
mov
xlat
int3
mov
and
mov
es
fimuls
mov
stos
ja
xlat
fwait
cs
outsb
lock
fisubrs
dec
repnz
pop
and
hlt
mov
sub
cmpsl
cmc
mov
shll
js
or
push
xor
out
cld
jo
arpl
pop
and
dec
xchg
loop
cli
pop
les
fwait
or
add
cmp
mov
adc
inc
gs
lret
jecxz
or
test
xchg
outsl
mov
pop
cmp
mov
cmpsb
sbb
inc
adc
xor
xchg
xor
xchg
mov
jne
dec
mov
jl,pn
pop
push
test
repz
jns
ret
loop
jle
or
aad
lods
mov
inc
in
in
mov
jmp
mov
lret
or
leave
fsubrl
cwtl
scas
adc
dec
mov
int
stc
int
out
jge
sub
bound
loopne
push
sub
inc
or
sarb
jmp
or
pop
jno
xchg
add
pop
fidivs
jle
mov
iret
or
mov
pusha
cmpsb
dec
dec
mov
cwtl
mov
cmpsl
mov
sbb
fstps
cmp
mov
fistpl
outsl
rolb
mov
mov
test
mov
push
pop
mov
and
add
int
mov
push
sub
or
shll
xor
sbb
mov
add
lock
bnd
loope
xor
in
dec
xchg
dec
cld
cmp
dec
jle
mov
jb
clc
inc
sbb
in
xlat
popa
clc
ret
adc
stos
xchg
mov
test
jb
push
adc
cmc
cmpsb
outsb
cmp
push
scas
mov
mov
xchg
mov
jecxz
ljmp
adc
test
dec
mov
aad
pusha
and
lret
scas
icebp
pop
cmp
jb
fdivrl
jge
mov
stos
outsb
pop
dec
orb
fistps
pushf
or
mov
gs
pop
ja
popf
dec
xchg
jmp
and
hlt
mov
pop
pop
pop
xor
and
out
ja
and
mov
mov
jge
pusha
out
mov
cltd
test
xchg
xchg
pop
outsl
sbb
out
out
pop
xchg
aaa
push
jne
cmp
or
mov
mov
push
sbb
int
mov
inc
xchg
xchg
loop
movsb
or
fisttps
sahf
pusha
out
movsl
das
in
ss
test
and
scas
out
xchg
mov
sti
jecxz
mov
mov
subb
jo
sbbb
xchg
jns
and
stc
xchg
adc
rorb
push
mov
jecxz,pt
repnz
sub
outsl
and
sub
scas
sti
pop
sbb
aas
add
aad
iret
cwtl
out
ss
dec
out
jge
sub
mov
adc
aas
fmull
pop
jge
clc
mov
push
xchg
imul
cmp
iret
inc
cld
rorl
gs
arpl
sahf
jno
cmc
shll
repz
das
pushf
out
pushf
data16
aaa
repnz
sub
cmpsl
insb
jae
push
repnz
shrl
and
xorb
sbb
pop
jo
notl
fdivrs
nop
xlat
xchg
sti
or
repz
lods
dec
cmp
addr16
outsb
cmp
xbegin
shl
mov
pop
jge
adc
dec
xchg
into
jno
les
mov
cmp
imul
mov
xchg
dec
in
pushf
push
or
push
push
int3
and
inc
aaa
pop
cmpw
dec
and
add
mov
cmp
add
push
out
ret
dec
xchg
and
in
adc
nop
add
loop
pop
pop
inc
cmp
dec
popl
or
icebp
mov
and
or
mov
pop
ret
push
mov
sub
mov
adc
mov
and
mov
xor
sub
mov
orl
add
xorl
movzwl
and
mov
xor
xor
or
movb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
sbb
lea
mov
mov
mov
subl
xor
xorl
sub
mov
movzwl
sub
movl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
adc
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
sub
mov
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
jmp
cltd
outsb
mov
outsl
or
push
out
mov
insb
fdivl
jle
out
mov
mov
fisubl
push
adc
in
add
pop
or
xor
ss
lret
pop
mulb
pop
imul
fistpl
lea
bound
inc
sbb
adc
push
jb
and
push
mov
or
mov
lcall
out
sbb
sub
ret
in
mov
fistpl
test
adc
push
loope
push
pop
mov
xor
in
scas
mov
adc
das
ljmp
mov
nop
pushf
adc
ja
aad
jae
ret
aam
inc
mov
cmp
dec
jo
out
push
ja,pn
lea
hlt
mov
imul
jl
add
mov
push
loopne
fwait
popf
ljmp
xor
sti
xchg
mov
ret
iret
mov
cli
jmp
mov
iret
in
cmp
pusha
lcall
arpl
pop
cmp
push
jb
fnsave
dec
pushf
int3
imul
stos
xor
fimull
fs
sbb
adc
in
jmp
xchg
sar
shll
xorb
mov
outsb
dec
jle
adc
jbe
mov
cmpsb
xor
xchg
jbe
repz
xchg
pop
jnp
stos
pusha
orl
jae
cmp
daa
sbb
lret
cwtl
popf
or
mov
mov
dec
mov
out
test
dec
dec
pop
xchg
pop
sub
out
imul
cmpsb
les
cmp
test
ret
aad
add
hlt
mov
cmpsb
or
inc
movsb
rolb
cmp
xchg
lock
dec
push
add
lods
push
lcall
add
in
jge
aaa
outsb
aas
push
popa
and
add
jnp
cmp
ret
sub
xchg
push
lret
shlb
mov
cmpsl
sti
adc
in
cmp
out
faddl
sbb
mov
sub
inc
and
mov
adc
sbb
hlt
mov
cmpsb
test
mov
mov
sbb
mov
ret
insb
xchg
jp
adc
fucom
aad
adc
push
sbb
mov
clc
ds
fsub
enter
jbe
xlat
ja
sub
sbb
popf
icebp
dec
pop
dec
aas
mov
lock
lret
xlat
jp
sbb
xchg
fisttpl
cmp
or
insb
mov
jno
hlt
pop
xchg
das
fstl
xchg
xchg
mov
inc
cmp
jne
pop
pop
mov
mov
xor
jmp
mov
icebp
mov
and
or
jl
jle
mov
negb
dec
stos
xor
in
repnz
outsl
shll
shlb
fldl
mov
rcrl
enter
sbb
pop
cmc
pop
or
subb
dec
dec
xchg
imul
dec
notb
pop
mov
sbb
jmp
cmc
ljmp
inc
divl
jg
test
out
fnsave
and
xchg
mov
ret
leave
fst
push
add
jo
test
cmp
leave
outsb
dec
loop
fcmovu
sbb
ss
in
jnp
cmp
mov
les
js
mov
aam
cli
mov
mov
jo
mov
inc
or
mov
sbb
mov
mov
in
dec
mov
scas
xchg
mov
fs
lcall
ljmp
mov
dec
and
sub
call
jae
xchg
leave
mov
xchg
jno
cli
test
dec
mov
or
mov
movsl
dec
inc
fidivl
cmp
ss
cld
lcall
pop
daa
mov
cwtl
movsl
jb
sub
mov
in
test
or
cltd
adc
cld
dec
xchg
mov
and
dec
pop
jl
pop
and
add
xchg
add
aaa
pop
ds
pop
fldenv
iret
outsl
pop
push
loop
push
jg
insl
adc
insl
mov
push
dec
add
xor
jmp
add
jge
repnz
xorb
and
xor
call
dec
jo
or
in
cmpsb
dec
add
imul
int3
or
loope
lds
shrl
mov
in
cli
sub
data16
js
jae
jno
jns
jae
leave
cli
out
lret
xchg
cli
xor
xor
mov
jle
jg
and
mov
push
mov
lcall
scas
loop
ret
inc
mov
popf
jl
cmp
addb
or
sti
mov
imulb
and
and
sbb
les
fldl
sbb
clc
out
xchg
jmp
xchg
jbe
lret
js
push
js,pt
push
pop
jl
icebp
inc
es
inc
cmc
pop
insb
adc
testl
push
mov
stos
imul
inc
lret
fstpt
mov
pop
pop
in
lahf
insb
ss
popa
push
sub
scas
sub
leave
add
add
xor
push
xchg
pop
pop
mov
jle
scas
jl
jle
sub
dec
test
loope
shll
cltd
inc
lret
not
sti
jmp
rcr
and
mov
pop
pop
pop
popa
dec
xor
out
leave
popf
add
out
pop
or
mov
sub
fimuls
xchg
inc
ds
das
ljmp
icebp
pop
fidivs
int
add
xchg
jl
mov
pop
mov
sub
sub
into
lock
lea
std
jb
mov
jecxz
test
cs
mov
adc
mov
pop
bnd
pusha
mov
push
cmp
xchg
imul
sbb
sub
push
cld
insb
pop
fstpt
pusha
ljmp
cld
or
xchg
xchg
add
jbe
ss
push
sub
daa
and
cmp
data16
xchg
xor
push
or
mov
sbb
cmp
dec
out
sbb
and
sub
mov
inc
fwait
movsl
mov
xor
jecxz
insb
push
dec
test
push
xor
js
mov
adc
or
sarb
jne
xchg
mov
mov
xchg
mov
aas
pop
dec
mov
push
adcb
ljmp
outsb
jnp
je
cmp
mov
mov
in
daa
cmpsb
xchg
sbb
lcall
mov
bound
dec
mov
jle
sub
jp
jg
xor
lods
lahf
mov
push
pop
out
out
push
fwait
icebp
mov
ds
mov
jecxz
arpl
jmp
xchg
push
jmp
jecxz
add
lcall
jnp
pop
cmc
mov
int3
mov
bound
test
addr16
aas
fisttpl
pop
les
xchg
jmp
inc
fnstsw
push
ret
aad
fists
int
cld
xchg
jp
imul
int
filds
sar
mov
aaa
pusha
mul
jl
loopne
lods
add
dec
sbb
test
add
sub
scas
fwait
sahf
in
xor
xchg
xlat
jge
mov
fwait
and
arpl
insl
jns
push
or
xor
mov
leave
scas
call
pop
fmuls
fstpl
insb
mov
inc
lret
pop
pop
ret
jbe
jmpw
rorb
jge
push
add
add
add
push
push
lock
outsb
dec
mov
mov
scas
jl
jle
cmpsb
mov
inc
pop
cmp
xor
xlat
xchg
notb
mov
lea
push
jmp
push
lods
repnz
in
xchg
adc
xor
or
mov
mov
jo
push
mov
jns
sti
push
pop
mov
lahf
adcl
ja
shlb
aad
fsubrp
enter
dec
adc
lods
test
loope
xor
int3
hlt
cli
outsb
sub
dec
and
nop
sbb
sub
mov
inc
jb
test
fisubrl
pop
movsl
jecxz
xchg
dec
loopne
bound
pusha
jns
shl
pushf
mov
fwait
xor
jmp
pop
cs
push
je
cmp
inc
cmp
mov
mov
and
mov
jae
frstor
repnz
fimuls
lret
sub
pushl
mov
xchg
xor
push
in
loope
jp
jp
mov
pop
or
pop
and
in
cmc
pop
or
sarb
push
cmpsl
ljmp
jl
ss
adc
pushf
sub
and
push
xor
push
pusha
in
mov
inc
ret
pusha
jno
repnz
sti
cld
push
sbb
out
adc
xchg
mov
or
daa
jp
aad
xchg
sub
outsb
pop
pop
jo
mov
xchg
andb
test
sbb
cmp
loopne
xlat
in
pop
xor
out
mov
mov
sar
cmp
cld
insl
stos
in
lret
inc
and
negb
pop
jge
xchg
ret
icebp
jns
inc
jl
int
ret
sub
nop
ljmp
mov
mov
add
push
cld
jmp
fadd
fistpl
outsb
xor
mov
and
ja
cmpsl
push
lret
mov
cmpsl
insl
aas
stos
adc
out
adc
mov
movsl
cmc
and
gs
rol
das
add
dec
imul
jl
jb
faddl
add
mov
ret
pop
loopne
sub
jge
lods
dec
fwait
xchg
andb
pop
jae
cld
mov
sub
add
add
fldt
fdiv
add
xchg
inc
int3
imul
repnz
sub
sbb
ss
jb
dec
cs
hlt
xor
test
mov
lahf
roll
jnp
cmp
push
fsts
pop
sbb
nop
jmp
in
lcall
stos
test
xor
cwtl
andl
fimuls
hlt
in
pop
sti
mov
xchg
aaa
dec
mov
jmp
je
jmp
loopew
or
cld
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
jmp
jmp
push
dec
push
imul
and
loope
lahf
pusha
inc
sbb
jle
jl
jle
mov
mov
sti
jbe
pushf
repnz
repz
in
jecxz
push
cmpsl
push
jl
dec
adc
xchg
cmpsb
stos
mov
xchg
movsb
iret
dec
inc
lods
mov
outsb
xor
jmp
xlat
clc
push
push
dec
dec
sub
jecxz
push
sbb
pop
mov
aad
mov
ja
pop
xor
testb
jno
loop
xchg
sbbl
outsl
dec
movsb
psubsw
and
push
pop
push
mov
int3
xchg
mov
pop
xchg
sbb
mov
push
ljmp
xor
cmp
pop
adc
ss
out
jns
outsb
rorl
ret
test
jg
sahf
cmpxchg
addr16
push
jle
adc
add
stc
fcmovu
outsb
xchg
aaa
fcomps
ret
and
in
lods
pop
mov
mov
cmp
jmp
stc
inc
xchg
dec
cmp
jle
and
loope
mov
into
and
je
sbb
nop
xor
dec
add
and
cli
ja
xchg
and
imul
jecxz
shlb
mov
mov
test
loope
out
xchg
cmp
je
xchg
lcall
iret
into
add
loop
jmp
lds
mov
xchg
jecxz
push
mov
out
fldcw
mov
cs
mov
add
mov
inc
sti
int
xor
rorb
cmpsl
ds
out
loopne
and
popa
inc
pushf
and
mov
imul
adc
jo
pop
push
aam
stos
sbb
sbb
je
into
cs
lcall
and
jo
lock
nop
outsb
lock
icebp
test
sbb
dec
les
mov
bound
bound
inc
cmp
xlat
mov
add
cs
pop
popa
aad
loope
sbb
divb
cmp
addb
outsl
icebp
fcoml
cs
popf
push
mov
mov
popf
mov
add
stc
sbb
aas
xchg
push
lahf
out
push
pusha
loop
inc
loope
mov
and
xchg
dec
rolb
cmp
enter
frstor
pushf
mov
out
shl
nop
into
mov
nop
sub
dec
and
call
lret
pop
jae
and
mov
jle
adc
and
popl
mov
insl
test
sub
and
aad
add
push
cmp
fsubrp
mov
incb
add
movl
lea
mov
mov
addl
mov
jmp
sub
or
lock
inc
mov
cmp
dec
inc
jle
scas
jl
jle
jmp
cwtl
shll
mov
repz
dec
or
fyl2x
cmpsb
add
dec
sbb
jl
js
adc
sbb
pop
leave
and
test
hlt
fildll
aad
push
test
and
jecxz
fadd
mov
and
daa
mov
loop
aad
xor
push
fwait
mov
fldl
adc
mov
pop
imul
mov
popf
add
fdivrs
lret
outsl
pop
loope
ja
dec
lahf
hlt
sub
in
call
xlat
sub
ja
aaa
fcom
mov
pop
jns
movsl
xchg
sbb
fnstenv
hlt
jae
mov
push
cli
jae
jo
loop
scas
xor
push
shl
stos
dec
push
mov
rorl
push
dec
xor
xor
xor
dec
call
push
not
inc
push
inc
pop
jmp
xchg
movsb
jne
out
outsl
jmp
inc
push
dec
hlt
js
xchg
daa
ret
jg
fs
adc
dec
out
dec
ret
mov
xchg
psubusw
enter
outsb
xor
shrb
dec
mov
fdivrl
movsb
stos
jns
repnz
stos
mull
addr16
xchg
inc
sub
out
mov
xchg
repz
negl
dec
out
jecxz
mov
loope
xor
sub
jl
scas
clc
frstor
mov
or
andl
ret
out
sub
repz
mov
mov
outsb
adc
pop
add
pushf
es
cmpsl
aad
xchg
ret
mov
aad
out
das
add
push
cmp
js
cwtl
jne
in
xlat
pop
into
adc
jno
cmp
test
add
sub
lods
test
in
out
fwait
lods
icebp
mov
jecxz
add
jmp
repz
iret
jno
inc
and
or
xchg
jno
mov
cltd
push
inc
fwait
test
xchg
ret
hlt
add
jp
pop
loopne
cmp
mov
pause
or
rclb
inc
leave
leave
pop
add
cltd
enter
hlt
les
jnp
in
test
mov
jb
pop
insb
fisubrl
push
loope
and
jmp
cmp
setg
ds
cwtl
sti
sbb
sbb
cmp
shrl
arpl
adc
adc
cmp
repz
mov
cmp
cli
and
adc
int3
arpl
pop
movsb
jg
rolb
repz
popf
dec
out
outsl
gs
popa
cmp
rorl
add
or
sti
stc
decl
mov
add
mov
pop
leave
ret
push
mov
push
movl
jmp
mov
xor
in
leave
outsl
mov
dec
xchg
jle
jg
jle
std
or
inc
loope
into
sub
gs
out
add
cmpsl
int3
add
stos
out
pop
in
inc
cmp
imul
mov
movsb
sub
sarb
mov
hlt
loope
loop
mov
push
out
jp
dec
enter
or
pushf
dec
fildl
mov
je
add
out
mov
outsl
jmp
icebp
and
cmp
mov
daa
fistl
or
shrb
and
ljmp
inc
ds
xchg
sbb
aaa
call
ret
movl
popf
and
jb
mov
fdiv
repnz
lcall
push
cs
dec
jg
dec
mov
or
jne
sub
mov
cmp
dec
lahf
outsl
mov
push
aam
movb
jno
pop
iret
fisubl
adc
pop
movsl
mov
pop
or
jl
or
stos
jbe
sub
scas
mov
push
fwait
test
sbb
stos
mov
arpl
std
dec
cltd
ret
ret
jp
adc
mov
ret
push
or
gs
cmpsl
aam
stos
icebp
aam
sbb
sub
push
in
test
pop
lea
adc
inc
adc
sbb
sbb
jno
ror
cli
sbb
fs
inc
xchg
ret
add
sbb
addr16
fcomps
sbb
and
xor
push
dec
dec
adc
fstpl
les
mov
jbe
cmc
mov
lcall
andb
pusha
jg
mov
lret
dec
mul
adc
xor
mov
movl
mov
subl
add
xorl
xor
movl
cmp
jne
and
mov
mov
add
andl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
pushl
pushl
pushl
push
pushl
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
jmp
mov
gs
stos
rol
enter
jle
jg
jle
cmp
pop
mov
rcr
push
outsb
into
lock
and
adc
add
mov
jbe
jae
inc
insl
fwait
rorb
hlt
mov
mov
lcall
jmp
loope
cltd
push
out
mov
gs
aam
sbb
jo
inc
cmp
pusha
pop
inc
xor
jg
out
ds
inc
sub
stc
loope
mov
lcall
scas
pop
xor
mov
outsl
push
or
add
aas
add
dec
inc
mov
adc
ret
push
in
adc
mov
mov
mov
jecxz
out
mov
mov
pop
sbb
xchg
mov
das
leave
into
mov
fcmove
pop
pop
lods
jmp
mov
sti
push
jecxz
push
sbb
xchg
loopne
adc
dec
xchg
lods
push
inc
sahf
or
stc
mov
mov
jle
jo
sbb
inc
mov
inc
inc
cmp
fs
fsubl
mov
outsl
nop
filds
dec
sub
pop
and
in
outsb
andb
mov
pop
faddl
add
jae
roll
fldcw
mov
sbb
jno
or
enter
out
jl
inc
mov
adc
out
mov
jecxz
pop
test
aaa
fstpl
dec
pop
sahf
add
add
ret
cld
adc
shrl
xor
jp
or
rcr
inc
outsl
aam
subl
xor
dec
outsb
or
sub
mov
cli
add
or
inc
cld
xor
add
leave
ret
sub
add
sub
add
add
dec
sub
add
add
bound
add
insb
sub
add
add
mov
add
xchg
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
add
dec
sub
add
add
sub
add
add
js
add
xchg
add
nop
sub
add
sub
add
add
shrb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
add
inc
sub
add
add
sub
add
add
nop
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
bound
add
add
test
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
dec
sub
add
je
add
subb
add
sub
add
shrb
add
imulb
add
adc
add
and
add
sub
add
ds
dec
add
pop
add
jo
add
jle
add
mov
add
lcall
add
add
aam
add
fisubrs
add
in
add
add
or
add
and
add
ss
add
dec
das
add
push
das
add
fs
add
js
add
mov
add
pushf
das
add
test
add
mov
das
add
fisubrs
add
repnz
add
das
add
or
add
push
xor
add
xor
add
xor
add
add
bound
add
outsb
xor
add
xor
add
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
dec
xor
add
add
push
add
js
add
xchg
xor
add
add
shlb
add
in
add
cld
xor
add
xor
add
add
add
add
inc
xor
add
add
outsb
xor
add
xor
add
add
add
add
out
add
cli
xor
add
xor
add
xor
add
xor
add
add
add
pop
xor
add
add
je
add
xorb
add
add
ret
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
pop
xor
add
add
xchg
add
add
mov
add
enter
fidivl
add
xor
add
xor
add
add
push
xor
add
dec
xor
add
xor
je
add
mov
add
add
add
mov
xor
add
in
xor
add
adc
add
sub
add
ds
dec
add
pusha
add
insb
add
xorb
add
add
lret
add
add
out
add
add
adc
add
and
add
xor
add
inc
aaa
add
push
aaa
add
pusha
aaa
add
outsb
aaa
add
js
add
mov
add
xchg
aaa
add
test
add
mov
aaa
add
ljmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
jo
add
jle
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
popf
dec
dec
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
and
add
add
add
lock
add
add
add
outsb
push
popa
addr16
push
js
outsl
ss
je
jo
aas
inc
outsb
gs
je
push
gs
push
inc
inc
pop
inc
push
inc
dec
pop
dec
cmp
add
add
sbb
add
adc
add
add
add
shlb
add
add
add
and
add
mov
add
test
add
scas
xor
add
add
mov
add
add
add
add
and
add
add
add
cmp
add
and
add
mov
add
add
add
sub
add
sub
add
add
dec
sub
add
add
bound
add
insb
sub
add
add
mov
add
xchg
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
add
dec
sub
add
add
sub
add
add
js
add
xchg
add
nop
sub
add
sub
add
add
shrb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
add
inc
sub
add
add
sub
add
add
nop
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
bound
add
add
test
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
dec
sub
add
je
add
subb
add
sub
add
shrb
add
imulb
add
adc
add
and
add
sub
add
ds
dec
add
pop
add
jo
add
jle
add
mov
add
lcall
add
add
aam
add
fisubrs
add
in
add
add
or
add
and
add
ss
add
dec
das
add
push
das
add
fs
add
js
add
mov
add
pushf
das
add
test
add
mov
das
add
fisubrs
add
repnz
add
das
add
or
add
push
xor
add
xor
add
xor
add
add
bound
add
outsb
xor
add
xor
add
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
dec
xor
add
add
push
add
js
add
xchg
xor
add
add
shlb
add
in
add
cld
xor
add
xor
add
add
add
add
inc
xor
add
add
outsb
xor
add
xor
add
add
add
add
out
add
cli
xor
add
xor
add
xor
add
xor
add
add
add
pop
xor
add
add
je
add
xorb
add
add
ret
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
pop
xor
add
add
xchg
add
add
mov
add
enter
fidivl
add
xor
add
xor
add
add
push
xor
add
dec
xor
add
xor
je
add
mov
add
add
add
mov
xor
add
in
xor
add
adc
add
sub
add
ds
dec
add
pusha
add
insb
add
xorb
add
add
lret
add
add
out
add
add
adc
add
and
add
xor
add
inc
aaa
add
push
aaa
add
pusha
aaa
add
outsb
aaa
add
js
add
mov
add
xchg
aaa
add
test
add
mov
aaa
add
ljmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
jo
add
jle
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
add
add
xchg
add
imul
ja
jae
insl
jo
add
add
outsl
outsb
je
outsl
insb
data16
add
outsb
jbe
add
jb
push
jae
jb
arpl
add
add
jb
jo
add
mov
pop
pop
jae
je
popa
jo
pop
je
jo
add
lds
jo
imul
add
outsl
jb
add
data16
outsl
outsl
jb
lods
add
js
imul
add
jo
pop
insw
outsl
fs
xor
je
insb
add
or
je
ja
jo
gs
add
add
jb
arpl
add
pop
pop
arpl
insl
outsl
fs
push
add
imul
addr16
add
xor
arpl
outsl
imul
test
jae
popa
arpl
add
js
imul
pop
popa
insl
jae
pop
gs
je
add
add
arpl
jo
add
xchg
pop
imul
insl
add
outsb
jne
add
add
jb
bound
add
insl
bound
gs
add
sbb
jae
jo
imul
data16
add
pop
pop
arpl
inc
imul
ja
jae
arpl
add
add
js
je
imul
jae
add
call
js
je
add
add
je
add
fadds
jae
je
outsl
arpl
add
gs
jae
jb
popa
je
gs
add
mov
data16
imul
gs
outsl
jb
add
popa
je
insb
add
jb
pop
pop
addr16
popa
imul
sub
arpl
arpl
add
add
insl
outsl
jbe
add
dec
push
push
inc
push
push
cs
insb
add
mov
imul
outsl
ja
jo
popa
je
add
nop
add
arpl
outsl
jo
jo
outsb
jne
add
add
je
jne
jae
jb
mov
imul
popa
bound
add
outsb
fs
gs
popa
addr16
js
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
adc
inc
gs
outsl
jne
insb
gs
insb
imul
add
mov
imul
jae
bound
mov
dec
outsl
popa
fs
arpl
push
add
bound
jbe
outsb
je
test
fs
imul
add
je
arpl
add
outsb
fs
imul
inc
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
fs
outsb
jo
je
cltd
add
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
inc
add
jb
outsb
je
inc
add
imul
je
insb
popa
jae
dec
outsl
outsb
addr16
add
outsl
outsb
imul
gs
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
ja
arpl
add
jmp
outsb
dec
outsb
jo
je
gs
je
jo
add
add
je
insb
imul
jb
movsb
add
pop
outsl
outsl
insl
gs
roll
outsb
popa
bound
imul
sub
inc
push
ja
jb
jne
push
add
inc
add
imul
arpl
outsb
add
add
inc
fs
jae
push
imul
arpl
add
icebp
add
jae
dec
gs
popa
addr16
add
out
add
imul
jae
addr16
add
dec
add
je
jb
jo
add
inc
add
outsl
jae
inc
gs
je
jo
add
add
jo
imul
imul
push
imul
popa
jae
inc
add
mov
dec
jae
push
jo
popa
dec
jne
gs
arpl
mov
dec
outsl
popa
fs
insl
popa
addr16
add
sahf
add
push
arpl
jo
jns
mov
push
outsl
push
outsb
imul
add
add
je
gs
popa
addr16
js
jb
dec
outsb
outsw
add
inc
gs
popa
jb
outsb
je
bound
inc
jb
popa
je
push
imul
inc
add
popa
insb
imul
je
add
push
gs
imul
outsb
addr16
add
adc
gs
jae
inc
inc
add
inc
push
dec
outsb
jne
add
add
arpl
outsb
jne
je
insl
add
add
outsb
dec
arpl
add
mov
imul
imul
add
jae
popa
addr16
outsl
js
add
ja
outsb
jne
popa
jb
inc
add
je
outsl
jb
addr16
jne
fs
imul
add
jae
jb
outsb
je
push
add
mov
imul
push
add
je
arpl
insb
insb
push
outsl
jae
add
add
je
jae
outsb
arpl
jns
je
je
add
or
inc
imul
jae
push
outsb
imul
jo
popa
je
push
imul
or
inc
gs
inc
inc
js
stos
add
fs
jne
jae
jb
add
gs
arpl
insb
insb
push
popa
outsb
add
cmp
inc
push
jo
jb
add
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
push
add
je
arpl
insb
insb
push
popa
outsb
add
insl
add
je
imul
outsb
addr16
add
addb
outsb
data16
popa
je
push
arpl
add
insl
outsl
jbe
dec
outsb
jne
add
ja
outsb
imul
arpl
das
add
je
arpl
gs
imul
add
insb
outsl
addr16
outsl
js
popa
jb
insl
inc
add
add
popa
insl
gs
arpl
add
inc
imul
jae
popa
addr16
add
xor
inc
push
gs
add
inc
outsl
jb
addr16
jne
fs
imul
add
imul
jne
dec
fs
add
push
add
je
jb
jo
add
dec
add
je
outsb
jne
scas
add
fs
jne
jae
jb
add
push
gs
jns
inc
outsl
insb
outsl
jb
add
xchg
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
push
imul
outsl
arpl
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
push
add
je
popa
jb
outsb
je
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
gs
imul
sub
inc
push
ja
jb
add
out
add
imul
jae
addr16
add
jne
inc
gs
imul
js
inc
add
add
je
gs
popa
addr16
add
jb
gs
push
add
push
je
imul
push
push
outsb
outsl
ja
jae
outsb
arpl
add
popa
jb
jo
gs
add
sti
add
dec
outsb
push
arpl
sbb
inc
popa
insb
insb
push
imul
outsl
arpl
lahf
add
jo
je
push
popa
addr16
add
mov
push
popa
bound
fs
gs
dec
jne
push
add
sub
push
outsb
fs
gs
popa
addr16
add
add
je
jo
popa
je
push
outsb
add
mov
ja
je
je
push
add
sub
dec
outsb
jne
push
popa
jb
inc
imul
outsb
jae
add
fs
je
imul
push
gs
arpl
jo
jns
add
inc
jb
popa
je
inc
imul
imul
jb
insl
push
add
cmp
inc
push
jo
jb
jne
push
add
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
xor
jb
outsl
dec
gs
push
add
dec
add
je
outsb
jne
gs
jne
je
je
insl
add
push
push
inc
push
xor
cs
insb
add
push
add
popa
addr16
imul
dec
arpl
push
imul
insl
popa
addr16
imul
je
add
dec
insl
popa
addr16
imul
insb
popa
arpl
arpl
add
add
popa
addr16
imul
ja
add
add
gs
je
push
jb
jo
jb
jns
push
popa
addr16
add
pop
add
outsl
jo
jb
jns
push
add
inc
dec
dec
inc
push
dec
xor
cs
insb
add
mov
inc
jb
popa
je
inc
outsl
insl
jo
je
bound
imul
add
gs
je
push
popa
insb
gs
add
gs
arpl
imul
into
add
insb
arpl
push
arpl
jp
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
popa
je
inc
jb
jae
dec
outsb
imul
add
je
popa
jo
outsl
fs
pop
add
je
popa
jns
jne
add
add
je
imul
add
jbe
inc
inc
add
pop
add
je
popa
jo
outsl
fs
mov
popa
je
dec
inc
push
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
gs
je
inc
outsl
outsb
je
add
outsb
jae
popa
je
inc
push
je
outsb
outsw
add
out
add
je
popa
insb
gs
gs
outsb
je
imul
gs
imul
outsb
jae
outsl
outsb
inc
js
add
add
jb
je
push
add
je
inc
imul
bound
imul
inc
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
gs
outsl
add
clc
add
je
gs
inc
insb
imul
push
popa
je
insb
je
add
inc
imul
test
inc
jb
popa
je
push
outsb
dec
outsb
imul
add
je
gs
inc
js
outsb
je
outsl
imul
aam
push
gs
imul
outsl
jb
add
add
je
dec
push
xor
stos
add
gs
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
xchg
inc
gs
gs
inc
js
outsb
je
outsl
imul
push
gs
imul
addr16
js
add
popa
je
push
outsb
add
push
imul
dec
jb
inc
js
add
add
arpl
add
mov
push
outsl
insb
jns
outsl
outsb
add
popa
je
push
arpl
outsb
add
gs
inc
js
outsb
je
outsl
imul
jo
inc
fs
outsl
outsb
je
gs
jne
arpl
add
inc
add
je
gs
arpl
popa
jo
add
inc
gs
imul
add
je
gs
dec
jne
push
add
popa
je
push
popa
je
gs
inc
jb
jae
add
into
add
arpl
gs
insb
imul
lds
inc
outsb
jne
inc
outsl
outsb
je
popa
insl
imul
inc
dec
xor
cs
insb
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
sbb
dec
popa
outsb
fs
gs
outsl
jne
je
add
add
outsb
inc
imul
jb
popa
je
push
popa
imul
insl
gs
add
and
dec
popa
jo
imul
insb
add
push
gs
push
push
jb
outsl
jb
je
add
bound
inc
gs
je
insl
dec
popa
insl
gs
add
lret
add
inc
popa
fs
gs
fs
je
add
or
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
inc
imul
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
inc
add
outsb
fs
gs
inc
push
dec
outsl
je
imul
outsl
outsb
add
xor
push
push
inc
data16
dec
popa
jae
add
add
je
jb
outsl
jb
je
inc
insb
popa
jae
add
sti
add
je
popa
jae
inc
jb
outsl
jb
add
add
imul
add
lret
add
je
jne
jb
outsb
je
imul
jns
add
mov
inc
jb
inc
imul
dec
push
dec
add
dec
popa
imul
outsw
add
add
gs
je
inc
jbe
outsb
je
add
outsb
add
outsb
fs
gs
jne
arpl
js
add
push
gs
fs
imul
gs
gs
jo
popa
je
inc
add
mov
inc
insb
outsl
bound
inc
insb
insb
outsl
arpl
xchg
add
imul
bound
inc
gs
gs
jo
popa
je
push
add
rolb
inc
jb
popa
je
inc
imul
gs
push
dec
outsl
arpl
add
add
jne
push
gs
jne
arpl
popa
insl
gs
add
repz
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
push
add
insb
gs
imul
jae
gs
push
imul
inc
jb
popa
je
push
gs
outsl
je
push
push
add
jns
inc
gs
gs
imul
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
je
outsl
fs
gs
imul
add
dec
add
jne
jo
outsb
fs
push
add
add
jae
jb
jo
outsb
push
add
add
je
popa
outsb
fs
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
or
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
inc
gs
push
inc
outsl
outsb
je
js
add
ret
add
insb
push
outsb
ja
outsb
add
je
insl
dec
popa
insl
gs
add
ljmp
insb
gs
je
jb
bound
gs
js
add
inc
add
je
push
popa
je
dec
popa
insl
gs
add
add
popa
jb
push
inc
add
push
gs
imul
jne
push
imul
add
insl
outsl
jbe
inc
imul
jns
add
ret
add
jae
jb
insl
jo
add
dec
add
insb
gs
imul
arpl
inc
imul
cmpsb
add
outsb
arpl
push
popa
imul
insl
gs
dec
inc
push
dec
inc
dec
xor
cs
insb
add
inc
add
je
inc
imul
outsb
jae
outsl
outsb
inc
add
inc
add
je
inc
imul
outsb
jae
outsl
outsb
push
add
push
dec
dec
push
inc
push
dec
cs
insb
add
addr16
pop
dec
popa
jns
push
imul
je
inc
push
insb
pop
add
add
or
inc
add
inc
add
cmp
call
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
add
dec
ret
dec
push
push
pop
push
cmp
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
imul
dec
push
bound
arpl
dec
jns
ret
dec
cmp
dec
dec
dec
xor
ret
dec
push
jb
jae
orl
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
sbbb
setae
nop
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
mov
aas
dec
push
dec
cmp
dec
push
dec
xor
ret
dec
push
mov
or
aas
dec
push
dec
cmp
dec
pop
dec
cmp
dec
xor
mov
ret
or
js
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
ret
psrlq
sarb
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
insl
dec
ret
dec
cmp
dec
ret
dec
push
loop
jecxz
repz
js
jns
js
jns
ds
jg
ret
dec
cmp
jb
ds
dec
dec
cmp
dec
xor
add
adc
adc
jns
aas
dec
add
mov
cmp
mov
ds
add
add
ds
add
cmp
add
inc
add
cmp
add
mov
inc
add
cmp
inc
add
inc
add
inc
add
cmp
mov
cmp
add
cmp
sbb
inc
add
test
sarb
add
or
inc
add
xor
inc
inc
cli
jne
in
incb
mov
cmp
xor
pushf
clc
xor
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
in
stc
add
cmp
je
inc
add
imul
pushf
clc
sahf
jmp
add
lods
cmp
pushf
or
addr16
add
adc
add
add
inc
add
imul
dec
add
add
add
inc
add
imul
add
dec
add
add
imul
jo
outsl
add
insl
add
add
insb
add
data16
imul
add
imul
outsl
add
add
push
add
add
add
add
inc
add
dec
add
imul
add
dec
add
add
insb
add
insb
add
add
dec
add
inc
add
imul
push
add
imul
add
add
imul
add
imul
add
add
dec
inc
dec
dec
push
fs
dec
dec
imul
push
inc
outsl
imul
data16
push
imul
add
add
add
add
inc
add
pop
dec
dec
dec
push
dec
pop
dec
push
dec
or
dec
add
pop
dec
pop
dec
pop
dec
or
dec
dec
dec
dec
dec
pop
dec
dec
dec
or
dec
add
dec
dec
pop
dec
push
dec
dec
dec
arpl
dec
pop
dec
ret
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jns
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
inc
xlat
rcll
rcr
leave
xchg
fs
push
rcrl
shll
add
add
or
add
shll
and
inc
push
outsl
push
mov
cmp
add
add
add
popa
push
push
push
dec
je
push
jne
popa
jns
pop
je
push
jp
jp
js
imul
push
dec
dec
outsb
push
pop
dec
dec
dec
dec
je
add
add
insl
push
dec
jne
outsb
imul
pop
outsb
jbe
jns
dec
je
bound
push
arpl
push
imul
add
inc
jne
push
outsl
push
inc
inc
push
imul
push
jb
add
insb
jb
inc
push
push
inc
insb
inc
inc
jae
dec
inc
jo
data16
jp
insb
je
jns
popa
push
push
push
dec
imul
inc
jp
pop
inc
jae
dec
dec
gs
jne
add
cmc
jnp
jnp
cmc
lcall
and
divl
add
add
add
std
mov
pop
mov
sub
dec
pushf
cmp
int
bound
icebp
add
inc
fbstp
jl
movsl
shrb
inc
lock
rolb
adc
or
stos
mov
mov
inc
mov
push
lret
xchg
mov
rolb
bound
pop
cltd
je
xor
popa
sahf
cmp
pop
pushf
jl
dec
mov
jmp
dec
or
fidivs
and
test
nop
xchg
sbb
xchg
xor
push
fstpt
aam
aaa
cwtl
jl
xchg
int
shlb
int
inc
mov
cmp
mov
xchg
arpl
jno
inc
stos
movsl
test
mov
add
lret
jae
dec
enter
and
xchg
inc
sub
jnp
sahf
pop
aam
fdivrs
mov
xchg
mov
mov
jo
mov
xchg
mov
add
add
push
pusha
in
jle
lcall
dec
loopne
add
add
add
scas
cmp
mov
jg
scas
pusha
mov
out
dec
mov
hlt
dec
sub
fcoms
push
aam
ss
pop
jl
mov
arpl
push
mul
std
popa
dec
mov
pop
pop
add
into
xor
inc
jecxz
fldenv
jmp
xchg
mov
mov
sbb
add
pop
fdivr
cmp
insl
test
hlt
xor
stos
mov
xor
xchg
dec
jl
int
enter
enter
testb
mov
and
stos
jo
or
loop
scas
cli
pop
xchg
adc
insb
or
test
bound
mov
xchg
and
add
sbb
ljmp
adc
in
mov
xor
inc
dec
xor
imul
fsubrs
bound
prefetch
gs
mov
jge
jb
push
sub
xchg
imul
aaa
add
cmpsl
add
add
mov
push
mov
roll
add
add
sbb
mov
sub
mov
xchg
mov
or
sahf
das
xor
mov
inc
or
out
orb
cmpsl
in
cmpsb
popa
or
jae
mov
xchg
xchg
out
cli
xchg
stos
inc
loopne
repz
leave
popa
lahf
test
pushf
push
or
mov
imul
adc
orb
mov
insb
pushf
iret
insl
and
test
jecxz
cli
and
lds
in
adc
xchg
or
sti
stos
xchg
xchg
jge
cmp
mov
mov
jl
push
inc
aaa
fst
add
pop
movsb
push
scas
mov
popa
adc
xlat
imul
testb
cwtl
je
scas
aaa
ljmp
xchg
das
nop
lret
adc
xlat
jmp
cmp
sbb
ljmp
lcall
mov
iret
cmp
mov
add
mov
roll
cmp
cltd
call
add
add
mov
mov
cwtl
pop
and
jb
mov
pop
dec
adcb
fisubl
sbbb
or
push
test
rorl
sar
mov
cwtl
pop
push
shll
cmp
mov
iret
pop
mov
push
cltd
push
pushw
lods
lods
xor
jns
inc
mov
mov
mov
adc
push
sbb
out
or
scas
cli
inc
ja
inc
iret
pop
ficomps
dec
push
and
int
push
cmp
and
mov
sub
xchg
loope
jne
jmp
aas
outsl
cli
jo
in
pushf
xchg
adc
repnz
cwtl
cld
add
cmp
pop
xchg
lock
incb
sub
cmp
movsl
xchg
jmp
push
cli
test
lods
sbb
repz
repz
sbb
dec
jg
popl
sahf
pop
mov
fldl
add
add
inc
or
pop
dec
or
popa
imulb
in
aad
add
add
or
push
mov
cmpb
popf
sub
jnp
xchg
movsb
mov
mov
pop
adc
mov
rolb
lahf
and
in
dec
test
ljmp
nop
push
scas
mov
jmp
iret
jo
add
adc
jmp
ss
jnp
adc
pop
mov
inc
int3
and
pop
fidivs
push
mov
fsubrs
lahf
jb
xchg
ds
adc
out
mov
insl
cmp
mov
xchg
mov
test
in
lods
movsb
xchg
add
iret
arpl
adc
adc
je
or
enter
xor
mov
pop
add
je
mov
adc
movsb
push
sub
cltd
out
test
fidivs
daa
sbb
inc
in
stos
stc
stos
mov
mov
int
out
xchg
mov
xorb
mov
pop
sub
inc
cmp
add
add
cmc
insl
cmc
out
lcall
enter
sub
lock
add
add
add
push
add
aaa
dec
push
sbb
push
imulb
lahf
mov
and
mov
jno
cs
jns
or
cmp
mov
or
enter
cmp
sub
sahf
mov
clc
mov
fmul
sahf
adc
add
in
enter
addl
aad
or
dec
dec
lahf
jne
push
xchg
sub
out
ret
push
mov
loope
imul
subb
pop
insl
aas
or
ss
ret
popl
cmp
in
dec
cmp
push
sbb
push
cwtl
movsl
push
push
sbb
shll
jmp
and
int3
lock
pop
push
lods
and
mov
inc
jae
push
mov
out
and
mov
test
push
jbe
mov
mov
sahf
dec
jnp
call
dec
aas
enter
push
mov
out
ds
jle
add
outsl
jle
aas
mov
cmp
hlt
xlat
add
add
add
test
jle
mov
adc
pop
sbb
and
out
out
andl
sub
std
mov
lock
dec
nop
xor
xor
in
mov
adc
out
shrl
outsb
lcall
insb
push
cmp
mov
mov
insb
cmp
sub
sub
push
mov
sbb
mov
das
adcb
inc
inc
jmp
shlb
cmpsl
jbe
dec
and
stc
popa
nop
sbb
push
cmp
andl
and
nop
in
mov
bound
cmp
mov
adc
and
sub
add
sti
shlb
mov
push
push
cs
mov
leave
out
popa
addr16
xor
je
lcall
cmp
dec
xor
inc
stos
push
mov
pop
outsl
mov
faddl
add
add
jle
and
scas
sti
jle
pop
push
pop
das
out
ljmp
add
add
pop
xchg
push
pop
mov
xchg
and
cli
shl
lahf
and
loop
mov
lahf
faddp
pop
and
jge
hlt
push
cmp
mov
lret
fstps
push
cmp
lea
fstps
xor
push
mov
pusha
mov
push
add
mov
mov
aaa
or
adc
jp
xor
add
pop
add
dec
xor
dec
or
jge
adc
scas
cld
dec
xchg
adc
and
or
xchg
popl
sbb
movsl
inc
rcll
adc
jg
inc
adc
testl
fisubrl
inc
inc
cli
das
push
xchg
jnp
pop
ret
or
fildll
test
in
pop
idivb
sbb
pop
lret
cwtl
subb
out
sub
push
aaa
sub
out
mov
dec
add
aas
repz
dec
mov
jmp
not
aam
hlt
push
lret
add
lahf
fnstcw
ss
lahf
stc
bound
and
cld
flds
add
add
iret
push
test
push
add
jnp
jg
jne
ja
in
add
int3
cwtl
mov
lahf
mov
mov
lahf
ljmp
push
data16
movsl
inc
xor
loop
push
dec
add
inc
jo
or
mov
adc
jmp
mov
adc
mov
inc
insb
inc
add
xchg
jge
pop
xor
scas
xchg
pop
mov
lcall
les
sbb
enter
sets
add
push
push
pop
jp
pop
nop
dec
sub
push
rolb
inc
loop
adc
jnp
or
jb
cmp
daa
mov
out
jg
lock
cld
push
out
leave
dec
enter
jmp
push
test
imull
sbb
call
push
aas
inc
stos
pop
add
in
xor
sarl
xor
adc
xchg
jne
jb
mov
cs
xchg
sbb
add
add
push
jl
jle
insb
out
adc
add
add
add
stos
pop
mov
nop
popf
cmpsb
fimull
and
xchg
mov
or
leave
fildl
bound
nop
push
cmp
add
and
jb
jo
adc
fbld
pop
mov
and
das
and
xor
cld
roll
ss
nop
ret
shr
int3
test
movsl
insl
out
std
adc
add
ss
mov
jne
scas
mov
imul
jae
pop
xchg
mov
lcall
out
sub
adc
out
insl
loop
fcoms
mov
inc
lds
stc
xchg
and
neg
mov
shlb
lock
lods
test
out
lcall
test
sbb
test
push
sub
jno
cmpsl
mov
aaa
xchg
sbb
imul
mov
mov
iret
andb
clc
in
lods
and
fiadds
push
add
mov
adc
in
xor
adc
add
add
add
add
dec
out
addl
adc
add
pop
lcall
cmc
xor
pop
push
xor
ja
pop
xchg
dec
shll
xchg
cs
mov
stc
out
inc
xor
popf
push
lock
orb
add
inc
aas
cmpsb
out
stos
xchg
pushl
push
shll
sbb
or
dec
arpl
pop
sahf
lret
mov
outsl
cmp
loopne
adc
dec
xchg
jge
jne,pn
rorl
xchg
ja
les
fsts
aas
mov
jge
lea
mov
ror
ljmp
stc
inc
cli
mov
lret
cmp
ss
jae
jne
stos
sub
je
push
add
iret
xchg
push
xor
jle
push
xchg
repz
lahf
xor
lret
or
aaa
jo
and
mov
dec
inc
mov
fnstcw
sbb
in
test
jns
fcmovb
je
inc
in
inc
daa
test
and
add
add
data16
jne
mov
lcall
add
add
add
jmp
lds
pop
or
push
cmp
mov
pop
lret
sub
test
cwtl
xor
jecxz
fwait
push
pop
fcomi
mov
ja
fstpt
cld
sbb
sub
movsb
sbb
pop
mov
xchg
push
pop
sub
test
repnz
mov
fdivrs
sbb
xchg
lods
xchg
lcall
mov
sub
add
das
pop
adc
xchg
stc
lahf
es
mov
xchg
and
pop
xor
ret
data16
ljmp
or
xor
scas
pop
xchg
shrb
pop
imul
mov
xchg
je
arpl
and
mov
and
xchg
scas
push
inc
rcr
sbb
push
xor
mov
mov
addr16
dec
repnz
ljmp
push
test
xor
xchg
jns
loopne
jg
int
jb
or
jne
pop
icebp
loopne
xchg
or
jnp
add
jnp
sti
xchg
lahf
mov
scas
testb
add
add
sub
xchg
mov
in
lock
pop
lock
in
lret
int
dec
outsl
mov
out
dec
fs
ljmp
and
ss
add
mov
pop
mov
mov
jg
insl
loope
lahf
push
dec
cmpsb
fwait
popa
inc
or
fmulp
je
jbe
sbbl
sbb
adc
mov
ret
movsb
movsb
xor
mov
cltd
cmp
fidivs
add
outsl
mov
mov
xchg
faddp
or
dec
insl
fs
add
insb
adc
stos
adc
inc
pop
sub
call
or
cltd
mov
pop
test
mov
lea
test
and
sbb
jo
sub
icebp
pusha
push
icebp
mov
imul
jg
fcoms
mov
ja
pop
mov
ds
sahf
shl
add
and
sahf
cmc
jecxz
pop
sub
sub
pop
sarl
mov
xor
filds
add
add
or
cli
push
pop
sub
jl
jno
pushf
fldl
or
or
ret
es
scas
sub
into
push
jo
inc
bound
and
push
std
mov
loope
sarb
push
adc
xchg
pop
cwtl
out
ljmp
push
std
sbb
mov
or
sub
sbb
addr16
push
inc
xchg
xor
and
inc
pop
fistl
call
fdivl
pushf
mov
xor
push
or
outsl
ficompl
or
das
movsb
mov
pop
lret
push
in
mov
or
fistpll
mov
rorl
push
pop
enter
jne
sub
cmpsb
push
lret
mov
mov
sbb
xor
sbb
rclb
push
std
cmc
mov
dec
rcrl
leave
leave
xorb
sti
inc
das
insl
lock
std
repz
push
stos
sbb
add
add
or
jp
jmp
fistl
mov
cmpsl
xor
mov
imull
test
imul
adc
pop
push
repz
or
push
cld
out
hlt
dec
dec
xor
loop
dec
add
add
and
fildll
cwtl
addl
popf
mov
pop
dec
jecxz
xchg
repnz
aam
inc
push
xchg
pop
shll
test
cmp
pop
pop
pop
addr16
int3
cmp
arpl
testl
das
nop
mov
adc
add
cmc
jmp
shll
icebp
or
in
cmpb
xchg
adc
push
xor
lea
leave
fucom
xchg
mov
mov
jbe
add
cmp
and
push
jmp
push
mov
loop
mov
push
adc
add
mov
scas
cmc
dec
outsl
int3
imul
flds
or
in
sub
cmp
arpl
je
ljmp
add
add
add
lret
repnz
ljmp
lret
push
inc
fidivrl
jae
popa
and
pop
xchg
mov
dec
pushf
mov
jecxz
fisttpl
insl
fsts
jo
dec
xchg
fldenv
out
repz
cmp
mov
insb
fidivrl
mov
pop
lcall
repnz
les
sbb
loop
mov
inc
or
push
inc
mov
mov
jmp
pop
jg
jns
fsts
adc
faddl
push
or
ret
or
dec
mov
daa
sbb
movsb
icebp
mov
adc
xchg
adc
or
add
int
out
loop
cmp
repnz
ret
mov
jmp
jns
inc
retw
out
cli
sbb
mov
mov
cmp
test
js
cmpsl
cwtl
icebp
mov
mov
in
jl
xchg
mov
inc
cmp
jle
loopne
adc
pop
mov
dec
insl
lcall
mov
inc
sub
sbb
sbb
loop
add
add
mov
in
ljmp
adc
adc
adc
xchg
mov
in
inc
or
sahf
adc
shlb
add
daa
or
xor
sbb
push
test
add
mov
mov
lcall
out
add
in
cld
fldl
out
ja
les
push
rcll
mov
xchg
cwtl
mov
inc
cwtl
sub
imul
outsb
ds
cmp
add
std
lods
sbb
xor
cmpl
dec
xchg
or
cs
push
pop
loop
dec
call
fstpl
icebp
mov
and
lret
jne
jb
inc
xor
inc
ja
sbb
lods
rcrl
mov
xor
mov
out
xchg
mov
add
xchg
in
mov
incl
sarl
pop
or
add
add
xchg
sbb
push
fnsave
xlat
inc
pop
pop
scas
inc
mov
cmp
push
cld
xor
ljmp
sbb
mov
js
in
out
adc
mov
xor
or
sub
cmp
imul
imul
pop
lcall
xchg
adc
andl
arpl
aas
int3
jne
add
or
movb
iret
lds
lods
mov
xchg
es
mov
dec
cmp
jle
stos
mov
iret
lret
or
pop
mov
inc
or
jae
pop
fdivl
cmp
cltd
addl
cld
stos
dec
xchg
or
push
inc
loopne
in
repnz
inc
jle
pop
mov
mov
jae
lea
jg
mov
rolb
insb
lods
insl
movsb
jo
xor
push
push
jge
mov
mov
movsl
sahf
lds
leave
sbb
push
shll
popa
test
mov
adc
inc
mov
in
negl
sub
movsb
sbb
xchg
add
add
cld
add
or
lahf
fwait
dec
rorb
leave
sbb
adc
fisubrs
jae
add
loop
clc
in
jb
popf
outsb
rorl
lods
shrl
and
popa
mov
or
jne
movsl
ret
aaa
push
cwtl
int
bound
inc
insl
idivb
add
xor
push
test
aaa
daa
mov
fidivrs
jne
fcoms
fsubr
push
mov
aam
mov
std
push
or
inc
repz
xchg
fcomip
xchg
inc
scas
mov
cmp
xchg
pusha
adc
sbb
lcall
pop
movb
jge
mov
sbb
aaa
outsl
call
or
inc
cmp
push
popf
xchg
fstpt
stos
loopne
popa
or
aaa
rclb
push
mov
sti
xor
ficompl
pop
jmp
imul
mov
adc
mov
mov
popf
imul
mov
fistpll
stc
dec
push
fcompl
in
add
add
dec
mov
cmpsb
jns
or
mov
cmc
dec
arpl
pop
jbe
cmpsb
outsb
mov
flds
fldenv
pop
mov
fcomp
in
test
inc
js
inc
pop
leave
mov
jo
dec
sub
icebp
push
and
dec
scas
sbb
jo
repnz
sub
mov
enter
arpl
inc
xor
push
adc
fimuls
push
adc
aad
pop
sbb
aas
dec
jmp
outsl
xchg
add
fwait
iret
sub
jmp
cmp
fldl
jno
sbb
or
jnp
or
fstp
mov
xor
push
into
es
xor
xchg
imul
sahf
cmp
pop
aaa
or
pop
push
xor
mov
shr
es
push
add
or
jbe
ret
inc
addr16
cmp
stos
xchg
dec
aaa
lods
hlt
xor
out
jbe
rcll
cmpsb
leave
lret
cltd
addb
add
cmp
mov
push
push
push
mov
sub
out
add
add
shl
mov
gs
mov
imull
stos
jb
xchg
sub
stc
imul
nop
adc
and
mov
dec
das
mov
insl
sbb
arpl
fsubrp
and
jns
xor
dec
aaa
mov
mov
mov
fildll
cwtl
test
mov
push
adc
call
xchg
pushf
adc
mov
decl
sub
and
adcb
adc
inc
push
inc
inc
jge
push
cmp
aad
mov
cmp
popf
jp
sub
iret
aam
std
xchg
fimuls
sbb
inc
add
iret
enter
cmp
push
out
aam
sub
xchg
fidivrl
test
mov
out
cmc
mov
loop
jl
iret
xchg
pop
aad
sbb
sub
xor
cmp
mov
mov
loope
xchg
add
push
mov
xor
lret
xor
push
ja
add
add
repnz
add
pop
lcall
les
inc
in
push
xor
add
add
add
pop
stc
movsb
push
dec
aaa
pop
int
pop
cs
push
xchg
dec
xchg
xor
or
fisubrs
test
cltd
push
bound
dec
xchg
push
dec
jecxz
dec
popf
rcll
leave
xchg
cld
mov
push
mov
pop
outsb
xchg
out
or
lods
add
add
xchg
dec
out
call
ja
cld
push
xor
arpl
and
aaa
hlt
aad
jne
inc
push
and
mov
or
cs
inc
xchg
fs
jne
negb
push
cmpsb
sahf
mov
jbe
xor
pop
mov
pop
xor
adc
aad
and
in
addr16
pop
mov
cmpsl
loop
jne
lock
les
subl
gs
mov
ljmp
imull
dec
insb
int
cwtl
mov
jmp
xor
shl
dec
popf
cmc
outsb
lods
cld
mov
inc
jmp
jb
fadds
add
add
mov
push
decl
iret
pusha
jnp
xor
add
add
add
fwait
loop
mov
xchg
cld
mov
and
dec
stos
or
iret
shl
lret
int
xchg
cmpsb
inc
int3
inc
push
in
xor
jbe
push
je
ret
push
in
daa
imul
xchg
filds
push
ret
inc
out
or
cwtl
mov
mov
push
mov
dec
mov
lret
dec
arpl
or
adc
inc
jp
fcmove
jg
push
mov
sub
inc
pop
xchg
push
int3
outsb
repz
xlat
sbb
or
xchg
cmp
fcomip
and
rcr
pop
fisubl
lcall
inc
jno
jl
out
mov
and
negl
adcl
sahf
and
rcrb
rorb
add
lahf
jae
loope
mov
in
push
or
xchg
lock
mov
xchg
in
clc
sahf
pop
stc
and
sahf
cltd
mov
cmp
movsl
in
and
cmp
sti
fsubp
inc
push
sub
dec
cmp
add
add
add
dec
enter
pop
lock
mov
sub
bound
add
xchg
ja
push
aas
daa
jmp
cmp
dec
ss
sub
sbb
sbb
cmp
and
repz
movsl
add
cs
add
or
test
out
adc
or
ds
push
or
lret
push
inc
and
mov
mov
jmp
jge
jb
mov
mov
dec
aaa
imul
mov
jae
movl
pop
hlt
lret
lcall
in
les
xor
inc
leave
cmp
pop
cmc
call
jnp
xor
jecxz
lcall
jns
xchg
jb
cmpb
movsl
xor
loop
cs
shlb
or
jno
movsl
mov
jge
sub
xor
push
imul
sbb
adc
sub
add
add
outsb
xor
mov
lcall
ljmp
mov
pusha
pop
cli
or
xor
jae
das
int
fwait
lea
out
mov
pusha
int3
push
push
sahf
xor
imul
lret
add
mov
xor
xor
out
js
or
rolb
mov
inc
shlb
sub
dec
cmp
lock
scas
lods
mov
pop
xchg
int
adc
cmp
mov
mov
dec
cmp
mov
roll
out
pop
sub
or
dec
xchg
mov
in
sbb
clc
dec
in
cld
test
adc
jl
lock
push
iret
sub
jl
xor
pop
aam
aas
or
inc
and
cmpsb
mov
rcl
jae
insb
rcrb
xor
ljmp
mov
dec
mov
xchg
adc
cmp
xor
mov
adc
jno
addb
add
repz
ror
lock
jnp
xor
xchg
mov
jno
inc
jmp
add
add
jp
fs
lock
int
sbb
or
icebp
jnp
adc
mov
cmpsl
das
mov
add
ret
in
popf
xchg
sbb
mov
and
xchg
xlat
mov
mov
xor
mov
jle
leave
adcl
pop
push
cmp
addr16
addb
fsubr
sbb
fmuls
add
adc
and
lret
cmpsl
test
jmp
xchg
sbb
mov
dec
sub
xchg
jno
or
or
mov
dec
sub
enter
pop
gs
push
cltd
xor
flds
push
jno
das
xor
mov
adc
loope
pop
sbb
lock
pand
sbb
adc
pop
inc
sbb
into
ret
jmp
aas
adc
sahf
enter
dec
mov
push
add
add
dec
scas
and
repz
fisubs
push
rorb
add
add
divl
loope
xor
loopne
fwait
cmp
adc
mov
rcrb
aad
popf
scas
mov
jb
mov
faddp
je
adc
mov
lret
fs
dec
sbb
xlat
dec
dec
out
sti
sub
enter
jbe
mov
or
enter
push
add
push
bound
ret
out
fcompl
movsb
lock
adc
and
in
pop
dec
sti
inc
mov
sti
icebp
or
test
call
mov
push
sub
lods
sub
adc
xor
jne
add
jle
mov
cmp
out
cld
xchg
or
sub
sub
fbld
push
and
std
imulb
push
mov
out
cmp
loopne
jns
rcll
mov
dec
sti
xchg
nop
lcall
outsb
call
cmp
or
jl
lret
add
add
out
sbb
xchg
insb
inc
jno
in
add
add
add
add
loopne
fsubl
std
imul
dec
pusha
xchg
nop
push
push
sub
outsb
cmp
adc
xchg
push
fadd
cs
ret
mov
or
xor
stc
out
lock
cmp
icebp
cmpb
or
dec
push
adc
or
inc
xor
inc
cmpb
and
inc
leave
pop
add
aam
xor
cmp
push
out
std
sbb
inc
sub
lret
stos
mov
ret
insl
sbb
cmp
notb
sbb
mov
stos
lcall
cmpsl
pop
mov
inc
push
cs
insl
mov
cmp
aam
adc
xchg
aas
mov
mov
outsl
icebp
std
fidivl
xchg
scas
sbb
gs
sub
imul
adc
inc
adc
imul
fdivs
shrl
cmc
scas
sub
mov
dec
out
add
add
add
idivl
sub
dec
test
insb
cmp
xchg
and
out
add
mov
cld
sbb
sbb
adc
lods
test
jbe
dec
sub
rolb
mov
sub
mov
out
xlat
jle
pop
bnd
add
jge
loope
hlt
movsl
jo
ss
test
test
mov
jmp
fistl
cld
dec
insl
subl
cld
scas
sub
jb
div
inc
push
mov
inc
jle
add
bound
daa
cmpsb
or
testb
mov
scas
and
les
and
adc
mov
xchg
sti
mov
daa
test
jbe
push
dec
cmp
push
shrb
push
pop
xchg
in
cld
insl
cld
adc
lea
add
aad
lahf
bound
scas
sub
add
add
pusha
rorb
cmpsb
mov
int
push
out
add
add
add
outsl
xchg
imul
push
xchg
sbb
lret
jo
jb,pt
push
sbbb
sbb
lret
stos
lods
es
mov
out
cwtl
or
cmpsb
sub
out
cmpsl
rcrb
lret
pusha
xchg
cmp
mov
bound
jge
push
cld
add
cmp
push
jg
outsb
or
je
mov
push
sbbl
sub
sbb
jmp
dec
stos
je
mov
shl
push
jns
out
push
dec
ds
pop
outsl
jae
mov
mov
daa
mov
xchg
cmp
arpl
out
xchg
adc
pop
cs
add
fcoml
pop
sbb
lods
add
cmpsl
mov
cmp
jle
push
jl
sub
aad
push
adc
mov
sub
shlb
clc
mov
or
adc
inc
imul
outsl
pop
int
adc
ja
mov
sbb
add
add
gs
testl
mov
in
lock
add
add
es
mov
mov
test
mov
imulb
out
add
sub
dec
or
in
adc
inc
and
jno
popa
pop
insb
into
jge
add
loope
ja
ljmp
and
mov
lret
movsl
mov
es
push
dec
aaa
or
sub
wbinvd
inc
dec
cmpsl
push
imul
lods
out
pop
pop
sub
sbb
cmp
mov
dec
mov
mov
mov
mov
ljmp
mov
adc
fwait
bnd
fisubl
and
xchg
sbb
int3
mov
stc
imul
mov
push
add
jecxz
push
cli
or
xor
les
pop
xor
xor
or
fldenv
dec
mov
out
mov
outsb
pop
hlt
and
lret
das
sti
inc
add
inc
pop
cli
mov
add
add
xchg
mov
mov
pop
das
sar
in
pop
icebp
add
add
add
adcb
adc
icebp
push
cwtl
out
xchg
push
or
jl
stc
jp
push
or
mov
push
loopne
sub
dec
ljmp
pop
xor
cli
pop
loop
ret
dec
fs
andb
add
scas
movsb
cmc
jno
inc
adc
cmc
stos
lods
jo
in
aad
leave
add
icebp
gs
xor
sub
or
push
ret
mov
mov
mov
push
cmp
jo
pop
fsubs
stos
sbb
std
xchg
loop
call
inc
jne
mov
stos
pop
dec
sbb
mov
jne
les
jnp
pushf
ds
popa
leave
loop
lea
arpl
sbb
icebp
pop
rcll
fs
sub
insb
mov
sub
inc
adc
push
mov
pusha
mov
loope
xchg
ret
popf
sub
sbb
je
pop
rcl
jle
adcb
cmp
or
mov
fucomi
xor
adc
add
add
mov
inc
cmpsl
xchg
repnz
lret
xchg
lret
stos
add
push
xor
sarl
jnp
das
cmp
enter
in
ss
pop
inc
out
mov
push
lea
and
outsb
sahf
hlt
inc
push
ret
jae
mov
pop
sahf
mov
scas
pop
ds
scas
sbb
stc
pusha
xchg
inc
scas
mov
imul
outsb
aas
mov
mov
cmp
loop
repnz
outsb
out
stos
in
in
lahf
pop
jbe
mov
test
das
mov
adc
arpl
call
dec
pop
fbstp
xchg
stc
std
movsl
add
fisttpll
jb
sarb
loop
jg
push
lea
fnstenv
cmpsb
je
out
into
lods
lahf
push
fwait
fs
ja,pt
cmp
ret
icebp
push
xchg
mov
lea
nop
insl
fsubrl
mov
loope
mov
mov
and
jbe
push
inc
pop
jns
aas
loopne
sub
repz
add
add
int
add
int
sti
fwait
mov
jnp
mov
mov
cmp
xchg
sbb
and
xor
loopne
lret
dec
dec
pop
adc
filds
cmpsl
ja
xor
iret
xchg
dec
popa
sbb
sbb
add
lock
mov
adc
add
mov
rol
fcomp
jmp
xchg
jecxz
inc
aad
dec
pop
push
dec
mov
mov
ret
mov
mov
adc
lods
outsb
repnz
cs
cmp
xchg
loopne
std
fiadds
sbb
cmp
dec
inc
xor
pop
inc
and
push
and
popf
inc
movsl
xchg
stc
dec
fninit
rorb
mov
gs
insb
outsb
loopne
xchg
sarb
cmpsl
incb
pop
jge
fs
mov
jne
outsl
ret
mov
popa
pop
cmp
dec
sub
sub
cld
dec
repnz
stc
int
cmpsb
sbb
jnp
mov
fldl
clc
fs
add
add
add
inc
jo
cmpsb
pushl
pop
mov
push
rcrl
push
or
in
int3
lock
jns
mov
xor
cmp
add
lods
ficoms
push
sbb
lahf
lcall
or
cmp
out
pop
push
jle
lock
mov
mov
jnp
or
movsb
adc
enter
loope
xchg
pusha
jne
stc
add
lods
pop
push
fsts
sub
mov
add
dec
inc
lret
or
mov
inc
dec
mov
cltd
arpl
xchg
jae
cmpsl
mov
xchg
dec
addl
mov
xor
scas
scas
jns
sbb
aas
scas
and
sub
loop
out
jbe
pop
test
sbb
lahf
xchg
xor
test
inc
sbb
mov
repz
int
pop
or
cmp
add
add
xlat
pop
xlat
jg
mov
adc
test
push
add
add
mov
jno
outsl
inc
rcrl
outsl
mov
mov
pop
pop
push
cmc
xchg
jns
enter
and
mov
pop
jo
push
shrl
dec
mov
and
add
repz
call
xchg
add
cmp
add
clc
adc
aas
imul
cmpsb
or
sub
lds
loope
lret
loope
dec
adc
out
jle
cs
aaa
lcall
shlb
adc
adc
mov
mov
xchg
or
fists
data16
lcall
adc
add
jle
cmp
dec
mov
jbe
out
lret
icebp
flds
mov
clc
mov
call
cld
mov
mov
insb
adc
test
loop
divl
jg
xchg
mov
adc
cmpsl
jge
dec
pop
stos
stos
cwtl
jp
add
add
fdiv
mov
mov
xor
insb
testb
add
add
xchg
shll
or
pop
ret
mov
add
loope
lock
fisttpll
adc
add
lods
les
lahf
ret
lret
dec
cmc
ss
mov
mov
lock
push
mov
popf
ss
sahf
inc
push
cs
stos
mov
lcall
lahf
lock
jo
cmp
orl
std
jnp
add
shl
test
push
mov
or
in
add
jae
int3
jae
fwait
lea
jb
daa
adc
call
test
pop
test
in
enter
push
pop
leave
cmp
jb
and
cmp
cmp
scas
xchg
lds
je
mov
cmp
jo
out
jae
inc
nop
push
push
jo
push
addr16
and
jns
xor
cmpsb
adc
cld
aaa
sbb
mov
fldt
sub
cwtl
movsb
pop
data16
pop
inc
sub
inc
inc
dec
repnz
pop
xchg
addb
add
test
mov
ficoml
xorl
add
add
xchg
jbe
cwtl
mov
sahf
test
fs
push
sub
add
pop
sub
push
pop
std
negl
or
pop
roll
sahf
jnp
int3
sbb
loope
sahf
jmp
shlb
pop
mov
push
cltd
jmp
ljmp
divb
imul
clc
xchg
pop
lock
jecxz
adcl
dec
inc
jnp
sub
enter
jmp
mov
xor
dec
pop
mov
pop
adc
xor
jnp
sbb
inc
fisubs
inc
test
shlb
cmp
js
lds
xor
sti
ret
xor
mov
xchg
and
shrb
jg
stc
fiadds
xor
cwtl
dec
add
insl
sbb
lret
xor
sbb
loopw
daa
dec
nop
jg
aas
repz
sbbl
sub
jmp
imul
lahf
repnz
jle
shll
add
add
jno
out
sbb
or
mov
gs
mov
jb
jbe
int3
aam
aad
xchg
xchg
sbb
adc
gs
cld
clc
int
adc
shlb
pop
mov
inc
inc
mov
jle
js
or
int3
or
lcall
cmp
push
adc
andl
inc
or
pop
mull
stc
insb
or
ljmp
andl
mov
aas
iret
inc
mov
xor
jle
dec
sub
iret
out
inc
enter
add
pop
and
push
ss
dec
aas
negb
mov
push
shl
mov
pop
int3
lret
pop
push
nopl
fidivrs
in
dec
fidivl
push
push
xlat
mov
push
sub
sub
loop
mov
insb
jecxz
mov
mov
jle
and
out
adc
add
pop
lods
pop
cli
cmc
cmpsb
lret
cld
inc
mov
add
add
cmpsl
in
dec
insb
sub
fldenv
test
push
loope
mov
mov
sub
aad
pop
inc
mov
cmp
test
pop
mov
mov
pop
lahf
mov
mov
in
out
pop
add
mov
pop
push
imul
or
stc
mov
mov
out
aad
ret
cmp
ja
xor
das
out
mov
fidivs
adcb
mov
rcrl
fdivs
mov
testb
jbe
jo
and
jo
addr16
jle
ds
jle
idivl
arpl
xor
imul
dec
cwtl
push
add
std
dec
fs
ret
xchg
pop
dec
das
enter
dec
or
enter
es
orl
ja
lahf
xor
pop
test
dec
push
dec
shll
aam
mov
das
stos
cltd
inc
popf
jae
out
xor
jl
add
add
add
lret
bound
packuswb
pop
adc
pop
adc
jnp
xor
repnz
sbbb
dec
daa
push
mov
nop
imul
stos
es
sbb
mov
divb
and
lea
xlat
cwtl
xor
lret
adc
out
cmpsb
cmpb
sti
es
ja
mov
sbb
push
adc
mov
and
jbe
add
pushf
loopne
cmp
sbb
in
mov
sbb
test
icebp
or
shlb
mov
mov
aaa
loope
jns
call
adc
es
pop
fwait
cmc
and
sahf
sub
mov
ja
push
icebp
inc
bound
dec
and
int3
icebp
push
repnz
xchg
addr16
fistps
or
dec
fnstcw
jae
addr16
cmp
icebp
call
sub
iret
stos
mulb
loope
push
lcall
in
mov
add
aam
int
aaa
das
aam
sar
cmp
add
add
and
push
mov
lods
fisttps
fldenvs
or
adc
movsl
lods
sti
sbb
mov
fwait
pop
mov
fistps
data16
mov
fwait
clc
jle
ret
xor
cmp
mov
rcll
push
jg
xor
add
ss
mov
aas
out
cmp
outsb
add
xchg
out
sahf
out
mov
inc
sub
sub
ljmp
popa
mov
cmc
or
stos
jbe
push
ret
mov
mov
and
notb
adc
cs
fisubl
mov
aad
push
mov
lock
xor
cmp
xchg
imul
jbe
test
mov
out
xor
icebp
push
loope
pushf
add
adc
scas
clc
xchg
xchg
mov
lret
cltd
out
and
xor
lock
fldenv
adc
xchg
pop
push
inc
pop
and
mov
aad
pop
arpl
addr16
sub
sub
add
add
add
xchg
sbb
mov
out
lret
push
mov
jmp
addr16
or
je
push
xor
filds
das
cs
or
cmpsb
sub
jb
pop
clc
cmp
mov
pop
cmp
addr16
out
adc
or
sbb
daa
fisttpl
adc
cmp
xchg
pop
mov
mov
cli
stos
xor
jne
dec
jmp
add
inc
jno
lods
inc
out
or
jmp
adc
xor
sub
mov
inc
push
and
xor
mov
lret
pop
mov
pop
jae
xor
fwait
mov
add
mov
popa
jbe
push
xor
add
loop
les
adc
inc
pop
inc
mov
loop
in
add
stos
inc
and
std
pop
sub
rorb
outsl
inc
fsubr
xchg
mov
lcall
dec
push
push
sti
je
dec
pop
xchg
hlt
jne
and
out
cmp
cmp
pushl
xchg
xor
sub
add
add
add
jge
dec
xchg
pop
js
jb
mov
and
aam
dec
mov
pop
aas
lcall
pop
iret
mov
sti
cmp
mov
mov
and
and
test
addl
inc
mov
push
jb
adc
fildll
pop
inc
pop
imul
add
push
arpl
jbe
adc
inc
fidivrs
push
ror
push
xchg
fsubl
adc
and
mov
aad
int
adc
dec
push
mov
lret
add
push
mov
add
xor
xchg
cwtl
mov
xchg
xchg
cmp
cmc
and
in
je
inc
lea
ror
xchg
in
das
mov
fucomi
enter
and
bound
mov
mov
add
sbb
in
xchg
mov
dec
push
or
shrl
lds
fnstenv
repnz
push
test
and
add
add
push
scas
mov
addr16
mov
add
add
add
jo
movsb
lcall
std
sbb
xchg
aaa
insb
cmpsl
aaa
dec
jmp
movsb
fisubrs
out
scas
adcl
mov
add
sbb
xor
test
dec
jg
sarl
stc
sahf
or
jns
leave
jle
adc
loopne
and
out
mov
push
xchg
dec
fsubl
or
out
push
sti
fldcw
enter
and
xor
inc
movsb
pushf
cs
mov
mov
push
cmpl
int3
shlb
pusha
filds
pop
fs
mov
bound
fwait
cmp
dec
icebp
stos
jl
mov
xorl
pop
rorb
and
fyl2x
dec
scas
mov
xchg
sbb
sar
cmp
xor
push
pop
mov
cmp
add
pop
cmp
cmp
std
jns
andb
mov
insl
pop
daa
ret
xchg
aad
js
orl
add
add
xchg
and
movsl
mov
mov
mov
mov
nop
incl
add
add
loope
lret
mov
ror
pop
sbb
imul
jecxz
xchg
sub
jnp
push
mov
dec
ret
repnz
jnp
incb
cvtps2pi
hlt
pop
or
xor
scas
sahf
xchg
add
fistpll
jb
inc
popa
pop
pop
aam
jecxz
jmp
mov
pop
push
cmp
outsl
ss
mov
fstpl
out
jmp
push
cmp
inc
pop
cld
xor
xor
mov
and
push
lret
dec
mov
lods
add
xor
iret
fwait
in
out
stc
fisubl
popa
pop
xor
pop
or
mov
and
test
loopne
push
mov
out
roll
and
lock
xor
fdiv
jecxz
xlat
out
pop
rol
adc
mov
and
mov
xchg
addl
out
rol
push
inc
xor
in
add
adc
fdivl
mov
scas
lods
lret
add
add
add
push
mov
loope
hlt
mov
push
jbe
mov
outsb
call
or
xchg
lahf
pop
xchg
lea
mov
xor
sub
pop
sub
lret
or
lods
mov
dec
xchg
pop
ja
imul
insb
repnz
test
and
jmp
jb
dec
leave
sub
mov
jo
sub
push
xchg
cmp
sahf
dec
and
pop
jns
add
test
dec
and
push
push
iret
xchg
ret
mov
dec
lahf
mov
mov
adcb
mov
mov
pop
mov
and
xor
sub
mov
xchg
imulb
mov
sub
xchg
or
loopne
mov
inc
sahf
add
lahf
mov
or
or
popa
jp
sub
lea
cmc
jecxz
dec
fbld
mov
mov
and
sub
mov
inc
stc
mov
mov
lods
imul
fisttpl
push
jae
add
add
add
cmp
les
lods
jbe
sbb
out
shll
rcll
lds
ljmp
cmp
loop
rolb
cmp
add
loopne
icebp
mov
pop
arpl
push
cmp
inc
mov
test
fst
aam
pop
lahf
rcll
mov
sarl
push
pop
dec
pop
daa
pop
test
cwtl
lahf
adc
lret
mov
dec
test
and
rcll
pop
jmp
fimuls
sbb
sub
sti
lahf
mov
cmc
push
sub
add
jo
push
fidivl
or
cmp
cmp
xchg
or
dec
mov
jp
imul
pop
or
and
cmp
scas
and
cli
std
cmp
clc
not
push
push
mov
mov
xor
test
frstor
les
xchg
add
sub
add
mov
cmp
mov
add
add
add
ret
xchg
cmp
imul
movsb
push
dec
sbb
push
mov
clc
and
dec
arpl
xor
test
nop
int3
pop
xor
loop
pop
lret
xor
or
xor
loope
cmp
pop
inc
out
mov
je
stos
xchg
icebp
dec
mov
sbb
and
mov
xchg
mov
jns
sub
jge
and
and
pop
into
mov
push
mov
add
pushf
ds
mov
int
movsl
stos
es
rolb
scas
ja
pop
fbld
test
lods
cmp
push
sub
rclb
in
int3
fnsave
mov
inc
mov
sub
pop
test
nop
out
fmul
cmp
cmp
roll
test
dec
sbb
lds
daa
or
jecxz
add
imul
lds
jae
enter
fdivp
ja
mov
insl
push
fldl
add
add
hlt
fbld
neg
dec
mov
add
add
inc
mov
xor
rolb
in
clc
cmp
cmp
jge
cld
repnz
imulb
aas
jl
sub
cmp
lods
test
sbb
cltd
inc
scas
lcall
pop
dec
cmp
mov
and
sbb
out
add
loopne
or
mov
hlt
adc
add
ljmp
jle
inc
mov
inc
daa
adc
fcomip
lods
jge
jg
dec
push
lds
xchg
dec
xchg
out
adc
adc
inc
mov
xchg
shl
pop
pop
out
add
jg
or
adc
ja
cmp
ret
jnp
fistps
dec
push
aaa
jne
dec
ficoms
dec
mov
add
mov
dec
mov
lret
sti
roll
not
push
jp
lods
jo
or
scas
lea
xchg
scas
enter
xchg
dec
lret
mov
fisttps
jae
inc
dec
cmpsb
iret
mov
into
fwait
add
mov
inc
movsb
add
add
add
mov
push
xor
mov
pop
movsb
mov
xchg
mov
das
gs
clc
lahf
push
hlt
fsubrs
aas
fsubrs
push
mov
adc
lea
mov
addl
pop
aam
xchg
pop
stc
aas
push
push
lahf
and
or
leave
mov
mov
scas
out
lods
cld
jb
ss
lahf
addr16
repnz
hlt
mov
cmp
or
push
mov
push
mov
jle
sbb
cmp
xor
mov
sub
in
lahf
mov
push
push
loopne
cmp
xchg
ljmp
das
xlat
dec
test
xor
sub
push
test
out
mov
xor
popa
imul
xlat
rcr
js
or
jae
mov
cwtl
fsubrs
nop
shrl
mov
jns
push
mov
xchg
not
call
add
add
xor
mov
pop
sarb
in
inc
movsl
stos
test
add
add
add
adc
sub
sahf
and
and
loope
pop
add
int
insl
mov
hlt
mov
mov
mov
call
xchg
mov
dec
adc
pop
mov
in
test
mov
nop
mov
mov
stos
sahf
xor
clc
adc
fstpl
inc
xor
and
mov
es
dec
cmp
not
push
nop
sub
mov
pop
inc
negl
and
push
cmc
out
roll
jb
dec
aam
test
inc
mov
repz
xchg
repz
out
add
ja
adc
pop
pushf
mov
lahf
repnz
call
jge
mov
inc
push
sbb
lahf
xchg
jno
pop
and
sub
dec
mov
rolb
xor
adc
jmp
fiaddl
add
sti
inc
out
aas
mov
rorb
push
add
add
add
pop
lea
insb
inc
pop
jno
adc
xorb
sbbb
enter
jne
gs
pop
add
clc
repnz
mov
inc
scas
ljmp
sub
push
hlt
aaa
jg
ljmp
adc
and
jo
lods
inc
pop
pop
cs
xchg
xor
or
mov
into
pop
stc
xchg
sbb
ss
inc
addr16
lock
jnp
inc
fmuls
mov
mov
sub
nop
or
idivb
xor
testl
es
or
mov
addr16
gs
add
in
enter
mov
sbb
and
testl
loop
lods
test
test
pusha
push
or
push
cmp
jae
mov
mov
dec
mov
inc
pop
cmc
mov
push
dec
inc
cmpsl
add
cmpsb
fidivs
sahf
jmp
inc
mov
xchg
push
bnd
dec
leave
and
sub
add
add
add
daa
xchg
pop
rcrb
es
xor
sub
dec
sbb
addl
test
mulb
icebp
sbb
scas
js
push
sarb
cmc
adc
hlt
mov
dec
aam
clc
fwait
jno
add
xchg
sub
in
push
sub
sub
test
dec
imul
pushf
es
xchg
idivb
adc
mov
push
rcr
inc
std
enter
inc
mov
movsb
or
mov
fstl
sub
fisubl
xor
lea
add
push
pop
or
fxch
add
mov
gs
xchg
push
sub
rclb
bound
dec
xchg
les
xchg
mov
sarl
std
jbe
ss
mov
jp
mov
stos
adc
arpl
gs
mov
or
jb
xor
sbb
in
out
ja
filds
mov
mov
add
add
adc
test
in
mov
insl
test
loope
push
push
xor
lcall
shll
push
cmpsl
adc
or
imul
pop
adc
aaa
xchg
or
adc
movsb
jne
inc
leave
rolb
mov
movsl
jl
xor
jl
jns
cmp
and
addr16
push
out
addr16
jbe
clc
movsl
insb
addb
xlat
mov
shrl
je
jge
jle
cld
rcrl
imul
and
icebp
repz
lods
call
push
xor
mov
jne
mov
js
push
mov
stc
outsb
cmp
push
xor
fistpll
push
rcl
push
int3
popa
ret
add
jnp
xor
or
dec
ljmp
ds
push
lods
push
arpl
push
imul
scas
test
in
inc
push
or
mov
pop
mov
add
add
adc
cmp
in
movsl
out
cmp
cmp
outsb
mulb
pop
and
cld
jmp
and
mov
int
sub
lahf
mulb
push
bound
sbb
and
jg
call
mov
push
mov
loop
add
pop
mov
sbb
pop
mov
pop
mov
clc
into
dec
mov
jo
mov
into
sbb
jmp
decb
inc
push
ds
inc
pop
sahf
movsb
push
sub
dec
out
arpl
xchg
sbb
xchg
mov
sti
leave
inc
in
xor
and
jmp
imul
jne
mov
cmc
inc
call
pop
jbe
push
dec
adc
sbb
add
sbb
mov
jp
fs
out
mov
add
out
dec
dec
push
jno
stos
or
roll
push
jge
sbb
xor
clc
jns
pop
cld
mov
jg
neg
pop
daa
inc
or
in
mov
add
add
nop
lahf
cmp
xchg
pop
cli
stos
insl
je
fstpt
cmp
movsb
mov
mov
adc
lea
inc
cmp
inc
mov
adc
test
lahf
jb
pop
mov
pop
xor
ds
testb
jns
dec
and
test
int3
lret
pop
cltd
xor
movsl
push
rclb
jne,pn
cmp
aad
icebp
xor
pop
vmovntps
das
jecxz
pop
sbb
out
push
mov
dec
sub
mov
sub
jl
sbb
enter
movb
mov
lods
xchg
bound
mov
and
nop
cmpb
pop
movsl
xorl
xchg
lea
and
movsb
xchg
iret
outsl
inc
fwait
and
jb
push
xor
or
popa
pop
dec
mov
adc
adc
sahf
add
into
jg
roll
and
cmp
sbb
movsb
dec
add
add
add
sti
jg
cmp
je
dec
cltd
frstor
add
add
adc
inc
mov
xlat
sub
cmc
mov
pop
inc
xor
jmp
inc
jnp
leave
push
mov
sbb
out
jae
push
mov
loope
test
inc
pop
pop
pop
xchg
add
lock
add
sub
mov
int3
outsl
outsl
dec
adc
dec
gs
cmpsl
ja
clc
fidivs
sti
enter
fimull
hlt
or
mov
inc
aad
sub
adc
imul
or
je
lret
pop
shll
pop
or
lds
movsl
and
in
inc
jo
fnstenv
cmp
lock
cmpsl
call
into
js
jecxz
push
sahf
push
enter
pop
cld
add
shlb
push
fdivl
mov
fimuls
and
pop
into
test
ror
push
push
inc
adc
or
mov
push
push
push
or
int
jle
add
add
scas
aam
jnp
fstp
fcompl
mov
test
les
add
add
lret
cltd
lahf
push
clc
and
add
push
jecxz
pop
xlat
rclb
push
filds
pop
fidivl
xor
cwtl
pop
jmp
imul
andb
dec
fildll
xchg
xlat
std
jp
pop
or
aaa
sub
or
and
fadd
test
imul
push
aad
int
andb
arpl
sub
stos
push
mov
add
mov
cmp
add
mov
leave
test
cmp
adc
ja
jnp
js
dec
mov
sub
push
pop
js
ds
push
pop
xor
mov
push
inc
and
xchg
mov
mov
sub
out
pushf
loope
divl
jg
pop
std
pop
inc
lahf
imul
jbe
push
daa
je
lock
pop
or
cli
or
fs
xlat
xor
and
mov
add
add
outsl
mov
add
mov
add
add
add
cld
ds
jge
ds
and
sarb
or
lock
or
push
rol
push
mov
and
sbb
lods
inc
stc
orl
je
shrl
push
int3
outsb
ja
rcr
sahf
cmp
push
aaa
xchg
mov
std
lock
loope
rcll
add
fwait
ljmp
dec
mov
outsl
cmc
cmp
push
add
cmp
dec
fldenv
and
xor
add
push
inc
bound
mov
int
adc
std
jp
or
mov
push
loopne
test
fmuls
pop
nop
xchg
and
lahf
mov
mov
nop
adc
lods
push
dec
jbe
push
loopne
mov
xchg
xchg
scas
insb
dec
lahf
lahf
decl
ror
pop
adc
or
mov
lret
pop
decb
aas
bnd
ja
push
or
pushf
jge
lcall
scas
or
add
add
jmp
fstl
push
adc
push
add
add
add
bound
outsb
mov
std
stc
mov
xchg
add
sub
pop
or
inc
pop
push
xor
fldcw
call
mov
into
cwtl
pop
sub
dec
pop
mov
xor
rorb
push
cmp
icebp
mov
mov
push
or
lea
mov
push
xor
ja
jl
movsl
add
and
je
orb
popa
cmpsl
sarb
xchg
mov
push
lret
mov
inc
dec
or
fdivs
mov
fdivl
jecxz
push
fwait
clc
outsl
push
or
xchg
int3
inc
cmp
cmpsb
adc
movsl
cmp
lret
inc
push
hlt
push
jmp
adc
arpl
mov
stc
dec
mov
and
repnz
push
mov
sub
sub
cld
cmp
jmp
sbb
push
pusha
push
in
and
gs
das
orb
sub
add
aas
clc
add
mov
xchg
dec
push
push
pop
xor
xchg
lds
rcll
repnz
add
add
add
ljmp
pushf
dec
xor
lcall
dec
int3
cmp
subb
sahf
adc
xchg
sub
sub
or
outsb
sbb
icebp
jl
mov
sub
out
flds
js
xchg
in
fwait
fs
shlb
mov
mov
xchg
xor
inc
xchg
out
int3
lret
insb
add
cld
dec
mov
xor
sub
cmp
dec
ss
mov
in
aaa
jle
clc
adc
mov
rcl
lods
dec
push
lcall
fcompl
imul
aam
stos
and
test
daa
xchg
lds
and
clc
lock
cmp
rol
sti
inc
mov
movsl
mov
sub
lods
mov
jns
in
fistpl
cli
aas
inc
xchg
pushf
and
cwtl
add
ss
jl
in
mov
int3
mov
pop
jle
sbb
or
lds
ja
dec
das
mov
lret
mov
dec
cli
inc
jg
int
xchg
lods
or
leave
pushf
stc
aam
add
add
add
mov
pop
sub
xchg
call
unpcklps
movsl
lods
ds
adc
js
sub
loopne
sbb
ret
dec
dec
inc
cmp
mov
pop
inc
dec
dec
rcrl
out
push
pop
jnp
and
std
mov
pop
test
cltd
fdivs
ss
mov
in
fdiv
stos
subb
push
loop
outsl
addb
popa
insb
pop
mov
xor
cmp
sbb
ss
push
cmpsl
mov
into
mov
imul
insb
inc
dec
push
movb
shll
movsl
push
xchg
xchg
stc
pushl
loopne
add
ret
imul
jb
adc
mov
jne
or
jle
push
jge
add
cwtl
divb
push
mov
std
aam
cmp
scas
ljmp
or
popa
push
fstp
mov
test
xchg
and
sub
add
xchg
std
cmp
jle
fistpll
fidivrl
stos
pop
fcoms
add
add
add
cmp
fistps
adc
pop
cmp
cmp
xor
jno
enter
jnp
insb
pop
and
xor
pop
divl
mov
cmp
in
mov
pop
inc
neg
xchg
out
mov
clc
mov
xchg
xor
and
ret
cmp
xchg
loop
outsl
mov
push
dec
cmc
mov
push
ljmp
pop
mov
mov
push
loopne
in
mov
out
aam
push
fcmove
popa
out
fs
fstpl
rcl
cmp
mov
cs
lret
mov
in
xorb
mov
cmpsl
and
fstpl
es
fiadds
jl
jns
xlat
xor
inc
das
xchg
int3
cmc
leave
lock
mov
xchg
adc
inc
and
icebp
sbb
mov
fyl2xp1
push
loop
pop
pop
inc
hlt
pop
repz
cli
xor
pop
mov
xchg
pop
lds
xlat
ficompl
inc
xlat
lock
aas
fcoml
add
add
add
idivl
arpl
arpl
jg
xchg
dec
or
cmp
inc
push
sub
ret
push
jae
sub
lcall
faddp
inc
xor
adc
dec
fidivrl
or
popa
or
outsb
dec
ds
cs
jo
sub
mov
sbb
and
iret
push
inc
mull
data16
adc
cmp
sbb
xchg
mov
add
outsb
mov
cli
add
iret
fsubp
xchg
adc
orl
mov
xchg
dec
xlat
adc
hlt
xor
dec
movsb
roll
aam
push
dec
lcall
jge
fs
in
cmpsb
pop
lock
dec
pop
mov
jp
and
cmpsb
sti
test
sarw
xchg
xchg
cmp
ljmp
adc
jns
insl
es
xchg
hlt
cli
repz
jge
sti
and
lods
fcomps
gs
push
in
or
cwtl
or
add
dec
jmp
dec
scas
iret
outsb
jmp
push
test
jbe
aam
adc
add
add
je
or
sub
aad
in
xchg
dec
xor
inc
pushf
fsubrp
shld
push
mov
loop
pop
jg
fistpl
push
daa
xor
loope
inc
cmp
mov
pop
mov
lcall
dec
cli
mov
mov
lods
or
bound
adc
lods
stos
lcall
dec
iret
test
shll
clc
rcrb
jnp
outsl
dec
mov
movsb
test
sub
push
dec
pop
push
dec
stos
loopne
das
inc
js
cmpsb
pushf
xchg
out
ret
loopne
loope
mov
and
stos
xor
push
je
mov
cmp
shll
xchg
sub
in
jle
xchg
mov
push
rclb
mov
addr16
aas
testb
rcrb
in
and
or
lret
mov
lcall
xchg
pop
insb
lahf
sub
jmp
insl
ret
mov
dec
roll
add
add
std
sbb
stc
cld
or
jmp
adc
add
add
lea
in
popa
add
flds
addb
mov
fildll
push
fcoml
test
enter
add
pusha
jns
xor
mov
bound
push
fidivl
sbb
push
mov
jge
mov
cmp
popf
jp
rol
lock
pop
xlat
jo
sbb
and
xor
jmp
push
and
clc
bound
arpl
test
dec
and
lock
cmp
xchg
or
in
jl
and
or
insb
in
aam
jmp
dec
xchg
mov
push
out
lock
out
outsb
sub
loope
js
push
or
mov
pop
sti
into
cmp
or
adc
incl
flds
lcall
stc
test
inc
cltd
push
sbb
fidivs
dec
sub
push
jmp
sbb
adc
test
negl
adc
pop
xchg
cmpsb
mov
adc
add
lds
adc
mov
inc
and
addr16
int3
mov
loop
dec
icebp
rcll
shll
push
push
adc
es
ja
mov
ss
inc
xchg
mov
std
xor
cld
out
xor
add
les
test
test
cmc
mov
lods
fwait
loop
sbb
imul
sub
stmxcsr
addb
fidivrl
mov
mov
mov
aam
leave
int
ss
in
in
data16
rcll
dec
cmpsb
fsubs
arpl
xlat
push
mov
fcomps
fwait
sti
mov
add
and
pop
pop
in
jae
iret
pop
std
pop
xchg
push
movb
iret
int
dec
mov
dec
mov
cmp
shrl
test
mov
jae
mov
hlt
mov
divb
in
pop
dec
loope
cmpsb
xor
add
add
dec
pushl
lcall
add
add
mov
jle
call
xor
and
xor
lret
mov
xor
mov
mov
pop
insl
xchg
jl
pop
mov
dec
sarl
inc
in
mov
stc
jmp
mov
mov
rol
lcall
dec
push
aad
test
es
shrl
orl
test
xor
orl
in
push
dec
lret
push
add
repnz
push
xchg
aam
test
cmp
mov
or
pushf
mov
imul
or
lcall
nop
and
dec
mov
into
out
inc
rclb
cmp
adc
addr16
jge
in
das
ret
stos
hlt
jnp
or
add
cmpsb
mov
push
aad
mov
stos
adc
pop
out
dec
adc
aas
stc
icebp
pop
dec
ret
inc
push
or
sti
or
jle
inc
xchg
loop
lahf
iret
xchg
pushf
outsb
adc
pop
sub
inc
ja
pop
aas
dec
push
movsb
dec
lock
add
add
add
push
mov
insl
xchg
adc
rclb
fsts
sub
testl
bnd
and
jl
out
loopne
rolb
xor
popa
or
ficompl
popf
or
inc
add
stos
jno
dec
lcall
cmpsb
lahf
dec
jl
and
add
or
mov
jecxz
inc
data16
cmp
pusha
rcrb
pop
jecxz
dec
xchg
sub
fs
dec
out
mov
or
and
add
arpl
mov
xlat
lahf
rclb
scas
sbb
push
ds
add
pop
mov
lods
mov
mov
je
fnsave
je
xor
in
int
cmc
or
mov
lret
sbb
ja
mov
mov
push
cs
jae
out
xor
imul
adc
pop
lods
push
es
mov
push
sub
addr16
add
repz
jae
ja
div
mov
jmp
out
sbb
add
add
xor
divl
sbb
xlat
inc
fildll
in
cmpsb
dec
mov
push
xor
cmpl
fstps
pop
mov
sub
js
mov
or
push
xchg
shll
jg
nop
cmp
leave
push
movsb
ret
cmp
popa
mov
mov
dec
pushf
out
jns
dec
adc
adc
sbb
sub
jle
pop
fwait
or
sub
pop
push
cmpsb
cli
clc
or
enter
inc
dec
jb,pt
std
jo
vmwrite
out
cwtl
int3
popf
jmp
hlt
lods
sbb
fildl
shrb
jmp
add
or
stc
jg
int3
xchg
fs
add
and
iret
inc
or
dec
out
jl
jb
push
dec
and
or
aas
lods
xorl
mov
out
clc
mov
mov
test
data16
sti
adc
scas
fisttpl
add
add
cli
std
jg
push
pushf
dec
mov
add
add
lods
add
rcrl
jmp
inc
mov
xchg
push
push
cmp
addr16
sub
add
dec
pop
or
push
fdivrs
inc
mov
pushf
pop
pop
aam
imul
sbb
cmp
aam
sbb
in
mov
cli
cltd
xor
jg
inc
popf
and
fdivs
into
cmc
jbe
repz
xor
add
test
mov
scas
sub
arpl
ret
xchg
cli
and
xchg
stos
sbb
adc
xrelease
sub
enter
pop
repnz
clc
ret
lods
push
pop
and
fstps
cli
loope
lret
nop
cmp
sbb
jecxz
call
jge
shlb
je
xchg
inc
sahf
clc
cld
push
mov
xor
lahf
insb
and
dec
cmpb
cltd
mov
aam
cmpsl
cmp
test
pop
enter
add
testl
incl
sbb
jl
pop
dec
cld
sbb
add
add
fidivl
imul
add
lret
mov
inc
mov
dec
mov
enter
sbb
ret
fidivs
in
adc
loop
js
push
aas
imul
mov
cmp
outsl
xchg
add
mov
mov
xor
xchg
cs
cmp
popa
cmp
mov
enter
xor
add
mov
xchg
jmp
cmc
jg
mov
aam
clc
movsb
push
data16
pop
adc
adc
mov
arpl
dec
adc
jmp
lcall
inc
adc
test
xor
push
adc
jecxz
jmp
test
inc
out
xchg
loope
outsl
mov
scas
fisubs
or
xor
stc
push
ljmp
subl
xchg
cmp
mov
test
adc
xchg
dec
rcr
inc
sub
addr16
pop
cmp
mov
add
add
es
jg
pop
or
xor
xor
add
add
cmp
aaa
test
sbb
dec
cmpsb
test
xor
shr
and
movsl
sub
and
popa
pop
fnsave
cltd
les
mov
xchg
lret
add
lods
or
cmc
mov
into
dec
jnp
repz
loop
dec
pop
jne
fisubrl
sti
or
jmp
mov
movsb
mov
ljmp
add
sub
lcall
adc
sub
dec
push
add
lods
fistl
sub
popf
add
cli
mov
jb
lret
dec
into
bound
xor
inc
and
lret
cmpsl
xchg
sbb
enter
hlt
scas
push
jg
pushf
dec
js
add
sub
push
mov
adc
shll
inc
lock
or
cld
push
dec
cmc
into
xor
repz
or
jmp
pop
xor
pop
adc
mov
inc
out
aaa
and
add
add
or
dec
push
cmp
sbb
add
jl
filds
push
push
jae
out
test
xlat
pusha
jnp
dec
cwtl
inc
or
cld
jnp
out
pop
xchg
shll
add
imul
jl
pop
xchg
js
call
loop
fldl
lock
mov
hlt
insb
pop
mov
dec
arpl
into
jp
idivb
in
int
lds
jb
push
enter
push
lea
fsubp
out
movsl
insb
mov
shll
movsb
inc
mov
popa
cwtl
out
jne
addr16
jecxz
and
lahf
push
insb
das
and
sti
and
imul
jbe
movsl
or
push
inc
dec
cmp
sub
sub
ss
stos
add
lret
stc
dec
imul
cmc
mov
mov
push
sbb
xchg
dec
and
rolb
cli
frndint
ds
pop
sbb
sub
add
pop
inc
js
mov
xchg
stc
add
sahf
jmp
and
bound
inc
sti
mov
int3
xor
mov
push
movsb
or
add
add
add
fisttpl
cmp
mov
mov
add
shlb
cvtps2pi
ja
icebp
push
popl
add
lahf
cmpsb
movsl
sar
inc
test
jnp
dec
push
cli
loopw
stos
test
sbb
insl
sbb
aad
and
movsl
fistpll
jno
insl
stos
sahf
add
filds
mov
cwtl
xor
xchg
enter
push
sub
cmp
jo
mov
cli
mov
xlat
xor
dec
lcall
sarl
push
pop
pop
mov
pop
xorb
sub
jl
mov
int3
cwtl
repz
and
or
dec
enter
in
jge
add
sub
jne
rolb
jecxz
dec
int
lea
fcompl
sbb
jmp
inc
mov
mov
in
jle
push
lret
scas
bound
xchg
fmull
xchg
stos
add
aas
push
cmp
jae
adc
jge
not
mov
nop
imul
add
add
ficoms
stos
sbb
call
mov
or
add
add
add
sbb
add
jbe
jmp
out
mov
lahf
xlat
out
mov
xchg
cmp
mov
or
mov
jge
rclb
xor
out
pop
mov
xchg
popa
cmp
jmp
inc
lds
out
push
cltd
je
add
mov
sub
out
inc
lea
out
faddp
cltd
int
push
push
fisubl
xorb
and
mov
jle
add
cli
xchg
lods
mov
inc
dec
daa
pop
pop
pop
push
lods
insb
jmp
mov
ds
sbb
inc
dec
sub
imull
aas
xchg
xchg
mov
cltd
scas
sub
jnp
or
pop
xchg
roll
pop
dec
icebp
inc
push
pop
daa
jbe
divl
xchg
ficompl
icebp
leave
stos
dec
out
daa
add
jnp
sub
ja
mov
mov
in
lahf
int
inc
out
fwait
push
loope
fnstenv
data16
cli
insb
pop
sbb
icebp
sub
stc
jns
call
adc
mov
out
stos
jge
or
fwait
stos
ljmp
add
cmp
out
sub
mov
je
mov
pop
fcompl
cmp
jno
mov
outsb
pushf
bound
push
jbe
gs
xchg
test
lock
jo
scas
mov
mov
mov
insb
mov
dec
sbb
loope
rdtsc
sbb
push
or
popa
pusha
in
push
sub
jmp
outsl
bound
mov
fiaddl
popf
pop
cmp
out
mov
stos
loop
lea
ds
mov
dec
loope
pop
leave
testb
repz
leave
stos
andb
daa
push
or
int
adc
mov
pop
das
cmp
push
pop
xchg
lods
hlt
sub
movsb
or
lret
ja
pop
loopne
ds
divb
or
cmp
pop
movsb
inc
dec
imul
add
add
sbb
out
xchg
iret
push
aas
rclb
or
and
add
add
je
jnp
adc
xchg
fldt
and
add
scas
imul
mov
push
test
shll
mov
fs
mov
mov
sub
iret
xchg
push
lock
sbb
jmp
dec
shrb
push
imulb
ljmp
adc
testb
mov
cmpb
xchg
add
lock
or
pop
insl
mov
repz
adc
fwait
and
jg
adc
xor
mov
and
mov
setb
lods
insl
adc
ljmp
inc
test
jns
mov
xlat
pop
mov
adc
mov
dec
cld
mov
popa
lods
scas
sub
sbb
popa
cmpsb
sbb
inc
pop
or
or
cmp
cmpsb
imul
lds
add
add
in
add
cmp
out
loope
jns
dec
xchg
ja
sbb
add
add
add
pop
xlat
cld
sarl
cmp
ss
sub
dec
popa
repz
in
jl
xchg
push
popa
dec
je
jne
mov
cmpl
in
mull
xchg
pop
adc
shlb
sub
add
ss
ret
and
push
call
and
insb
or
adc
mov
cmc
lods
inc
data16
jle
xor
ds
out
pop
mov
pop
add
xchg
orl
and
fsubp
push
lret
or
push
enter
imul
jmp
jno
jg
clc
push
sbb
xor
aas
dec
xor
sub
outsb
push
imul
cld
dec
push
rorl
movsl
jp
testb
push
cmpsb
mov
or
jl
or
std
divb
mov
or
scas
insb
pusha
xor
fnstsw
jbe
inc
shlb
add
lods
jg
push
mov
cwtl
adc
mov
add
add
dec
out
xor
lahf
sub
sub
daa
jno
xor
push
jne
stos
jp
lea
lahf
popa
aad
jmp
jmp
out
les
adc
inc
outsb
adcb
inc
sti
arpl
subl
shll
test
jnp
sub
stos
inc
sub
xor
mov
xchg
mov
mov
mov
lock
outsl
incb
xorb
adc
xchg
mov
adc
mov
jae
scas
mov
or
mov
aas
or
outsb
pop
add
lea
les
sub
cmpsl
inc
js
cwtl
adc
mov
lret
jp
xor
aam
pop
pop
jnp
inc
jb
jb
inc
loop
lods
xchg
inc
lods
fcmovne
movd
mov
ficompl
mov
in
outsl
cmp
inc
push
inc
rcr
jecxz
fwait
adc
add
add
jg
cld
ret
add
pop
sar
and
add
add
or
xor
scas
add
mov
ljmp
sub
std
jg
mov
xor
mov
call
sub
lods
xor
dec
jle
lret
fldl
mov
mov
lcall
mov
jp
xchg
inc
ficoms
sbb
cmp
push
inc
or
orb
mov
testb
test
scas
int3
dec
mov
fwait
push
test
xor
xorb
mov
and
movsb
jnp
into
call
das
fstps
fimuls
mov
mov
cmp
mov
push
inc
not
mov
push
jnp
lret
mov
push
dec
stos
in
sti
mov
pop
sub
pop
mov
pop
jg
jg
dec
xchg
pop
pop
dec
int
in
sub
hlt
dec
or
mov
aam
jge
popa
xor
loopne
dec
xchg
dec
test
das
into
xor
mov
aaa
push
cltd
shll
repnz
add
ret
mov
iret
mov
inc
mov
add
add
add
loope
cmp
out
sbb
mov
cwtl
jp
inc
gs
sub
fstpt
clc
lret
jl
cmpsl
test
scas
mov
rcrb
sub
push
adc
addr16
cwtl
divl
int3
test
fidivs
pusha
mov
pop
sub
jne
stos
inc
lret
aad
fsubrs
adcb
inc
ja
pop
sar
stos
mov
xor
scas
xchg
lds
lds
pmaxsw
out
arpl
mov
enter
pop
in
sbb
mov
or
jnp
aad
lds
jne
jbe
pop
pop
stos
cmp
pusha
rcrb
pop
out
jnp
cmp
movsl
lods
mov
imul
orl
outsb
outsl
push
andl
add
inc
mov
je
cmpsl
sub
cli
bound
fcoml
imul
daa
push
es
pusha
nop
dec
push
into
insb
adc
sbb
in
iret
outsl
ffreep
in
scas
ret
adc
or
jg
arpl
insl
sub
add
add
add
xchg
gs
xchg
mov
push
push
call
xor
pop
mov
stos
mov
add
dec
mov
scas
xchg
mov
and
adc
xchg
inc
out
pop
mov
cld
sbb
dec
dec
lret
push
mov
sbb
and
in
sahf
xor
mov
inc
cmp
in
repz
xlat
xchg
inc
push
ss
out
cmp
sbb
outsl
xor
adc
sti
addr16
push
pushf
bound
mov
orl
mov
out
dec
pop
aad
pop
scas
xor
in
mov
adc
cmp
xor
push
movsl
dec
lcall
jp
ds
xor
ror
inc
popf
out
jmp
lret
jb
mov
xchg
or
mov
roll
das
xchg
push
ja
movsl
aas
and
bnd
mov
jecxz
ds
test
add
mov
shlb
cli
clc
cli
clc
sarb
sti
mov
mov
add
add
xor
dec
push
stos
mov
pusha
scas
fdivrl
cmp
into
pop
punpckhwd
sarl
push
in
cmc
shr
mov
insl
adc
xchg
pop
mov
fisubs
movsl
out
in
lahf
inc
mov
inc
jle
int
push
adc
fwait
jo
jp
push
fcompl
xor
jns
push
ljmp
shll
es
cmp
push
xchg
std
inc
mov
lret
movb
inc
xchg
out
lock
push
flds
aas
mov
sarb
out
jbe
cmc
imul
fmuls
pop
pop
push
loope
arpl
xchg
mov
cmp
mov
shlb
cmpsb
popf
dec
or
mov
mov
sti
aad
loope
mov
fsts
shrb
add
imul
mov
mov
or
mov
lcall
add
test
imul
mov
shlb
add
add
mov
and
adc
jl
sarl
push
push
cmp
hlt
push
dec
mov
loop
pop
add
or
cmp
ret
add
mov
push
mov
xchg
rol
call
out
ficomps
cmp
push
pop
pop
xchg
test
enter
imul
fld
jb
xor
ret
popa
lahf
loope
repz
lcall
mov
inc
adc
stc
iret
lea
sub
repnz
mov
shll
sarb
mov
jmp
xchg
pop
je
imul
sbb
mov
aam
sti
xor
push
in
cwtl
int3
nop
aad
jl
nop
subl
pop
jne
mov
or
stos
ret
pop
pop
jb
mov
insb
shrb
cli
jne
addb
push
repnz
sub
push
fstpl
add
repz
notb
xchg
push
jb
xor
roll
push
dec
mov
mov
dec
rolb
dec
in
or
jb
add
add
es
data16
insb
daa
mov
imul
sbb
add
add
add
clc
jge
push
int3
sub
sub
lret
and
shl
in
cmpsb
cs
xor
in
add
int
call
out
iret
sub
hlt
xchg
push
into
ficoml
sbb
das
adc
jecxz
data16
dec
jle,pt
mov
xchg
sub
insl
add
aam
ret
push
out
mov
imull
out
xchg
insb
in
bound
lret
iret
jle
mov
pop
subl
inc
adc
mov
sbb
xor
mov
jecxz
cld
shrb
xchg
ljmp
fwait
cmpsl
sub
xchg
xorl
adc
in
daa
mov
jnp
pop
icebp
add
mov
mov
pop
adc
scas
cmp
push
popa
imul
cmp
mov
inc
push
scas
mov
mov
mov
cmp
sahf
or
mov
sub
clc
mov
fldcw
add
stc
cmp
add
add
add
test
push
and
popf
fidivrl
jns
ds
sub
sbb
leave
fdivp
mov
fildll
lock
in
sahf
jmp
sbb
mov
mov
adc
ja
mov
mov
cmp
std
ds
xchg
jp
cltd
lcall
sbb
shrb
xlat
mov
pop
pop
adc
bound
cmp
sarl
jae
adc
pop
ret
xchg
dec
std
mov
enter
dec
outsl
push
fidivrl
sub
adc
lea
mov
pop
pusha
mov
pop
inc
push
sbb
inc
ret
xchg
and
insl
lret
or
adc
xchg
or
scas
mov
push
add
daa
dec
call
jp
add
dec
rolb
jecxz
pop
icebp
push
lods
enter
and
mov
xchg
addr16
lods
insl
mov
bound
repz
push
sti
cmpsl
enter
or
add
add
add
adc
rolb
mov
in
cmp
inc
movsl
inc
iret
lock
pop
or
lcall
push
pavgw
into
sti
loopne
stos
push
lods
test
sbb
and
xchg
int
out
jb
jne
mov
xchg
pop
ss
loope
cmp
adc
in
jmp
lea
sti
lods
sub
pushf
mov
mov
dec
leave
rcll
dec
mov
insl
mov
popa
mov
xchg
xorb
pusha
sub
rorb
xor
popa
mov
ja
sub
in
jl
xor
or
lahf
loopne
std
aam
shl
mov
out
pop
testb
mov
lods
jmp
in
aaa
mov
repz
stos
stos
ljmp
je
inc
loopne
cmovae
xlat
pop
or
btr
cmp
mov
insb
sub
pop
sahf
das
in
les
add
push
and
std
mov
dec
push
mov
shrb
add
add
cmpsb
or
pop
lods
inc
cmp
adc
and
sub
xlat
bound
mov
repz
std
imul
enter
mov
outsb
adc
jae
roll
cmp
sti
add
sbb
dec
mov
mov
add
cmp
dec
fisttpl
jle
stc
pop
push
les
icebp
mov
out
mov
pop
dec
add
push
push
or
cmpsl
loope
xorb
jb
daa
adc
out
cmp
sahf
rorl
sbb
sub
mov
rorb
xor
push
xchg
pop
psllq
lahf
icebp
push
mov
jg
jecxz
leave
cmc
jmp
mov
cmc
mov
cmc
push
and
ret
mov
js
cmp
out
xchg
sbb
ja
mov
stos
or
xchg
dec
adc
push
or
fidivl
pop
xchg
mov
push
sub
sbb
fs
sbb
mov
js
test
add
add
and
jecxz
and
lcall
add
add
add
sub
pop
fiaddl
iret
cmp
mov
sub
add
xchg
aam
cli
lock
mov
fcoms
addr16
cmc
nop
fidivs
add
mov
push
push
out
inc
xor
add
shll
sub
push
jnp
hlt
mov
aam
fistps
and
insb
sub
inc
sbb
sbb
fbstp
and
ljmp
ret
shlb
sbb
in
jmp
or
and
adc
clc
fldl
add
and
cmc
ja
loopne
gs
mov
scas
add
test
mov
push
xor
push
lds
jne
insl
sahf
pop
cmp
jae
insb
pushf
mov
loop
clc
out
sub
xor
inc
insl
adc
outsb
push
sub
imul
xor
or
push
xchg
pop
add
cmp
add
add
xchg
ficomps
cmp
lahf
pop
rclb
dec
add
add
add
aam
pop
inc
popa
mov
aaa
xor
add
mov
imul
inc
cmpb
das
lret
push
in
out
icebp
mov
xchg
divl
mov
fcoml
pop
in
pop
dec
xchg
xor
mov
stc
aaa
or
pop
mov
inc
mov
cmp
lods
sbb
fiadds
mov
push
aas
or
jbe
cwtl
mov
adc
xor
jno
out
or
add
xchg
loope
adc
insb
sbbb
cltd
insl
shlb
jge
je
xchg
je
pop
pop
add
mov
cmp
and
mov
scas
lahf
mov
sub
jb
mov
or
lahf
jp
loopne
jp
in
cld
orb
dec
cmp
mov
xor
lret
in
leave
scas
xor
mov
stos
hlt
cmp
popa
or
sahf
mov
add
add
lods
xor
mov
cmp
sbb
das
add
add
add
divb
push
int3
rolb
dec
xchg
clc
aad
out
test
ret
shr
xor
test
or
jb
aaa
fwait
xor
lea
into
ret
das
pushf
sub
sbb
aas
ljmp
add
lcall
mov
sti
ror
mov
mov
and
orb
mov
gs
cmpsl
insl
jnp
sbb
inc
insb
out
or
mov
inc
push
vmovupd
fmulp
push
or
data16
aas
pop
ljmp
sub
out
ror
insb
addr16
dec
push
int
out
and
add
mov
mov
inc
cmp
sti
xchg
dec
inc
sbb
fs
dec
daa
lods
and
arpl
push
sbbb
lea
and
test
jmp
in
push
hlt
cli
lds
push
sub
push
frstor
adc
inc
cmp
adc
jbe
cmpsl
xor
shrl
lock
mov
or
xchg
lods
xorb
add
add
add
mov
and
test
inc
adc
xchg
push
stos
jb
fst
sub
jo
ret
add
dec
pop
mov
push
js
mov
in
push
fnstsw
popf
push
int
pushf
lods
ja
or
loop
fsubl
jecxz,pn
cli
mov
mov
sbb
sub
leave
mov
mov
gs
das
pushf
add
out
enter
ljmp
xor
add
leave
jb
mov
pop
xchg
and
mov
push
fsubrl
mov
mov
scas
mov
xlat
push
mov
int3
fdivr
jnp
adc
jae
sbb
mov
mov
xor
jns
inc
pop
int
pop
jns
sbb
sahf
and
or
jo
mov
sbb
sub
repz
scas
jl
mov
rol
rol
repz
pop
cltd
ret
mov
stos
imul
mov
bound
cmp
add
sti
pop
jge
neg
hlt
add
add
xor
add
add
cwtl
inc
pop
lcall
sub
mov
out
dec
insl
out
cmp
ja
or
and
fisubrs
mov
movsb
loope
jne
lods
mov
jl
scas
mov
jbe
scas
or
dec
cmc
int3
push
test
jg
push
stos
ret
fsubl
dec
xchg
cmp
pusha
jmp
call
sub
or
clc
mov
mov
adc
leave
lods
inc
lcall
dec
push
push
rcll
sbb
stos
xlat
insl
stc
inc
mov
fcmovne
fwait
adcl
xchg
popl
cs
pop
test
orl
jmp
mov
pop
adc
xlat
cmpsb
push
sti
sbb
jecxz
ret
cwtl
out
js
fldenv
dec
and
int3
out
jbe
mov
pop
fsubs
sarb
out
nop
jmp
mov
test
cld
xor
add
xchg
pusha
cltd
fsub
std
in
popf
in
stc
jmp
in
jae
jb
xor
add
add
pop
mull
push
sub
cmpsl
jae
push
push
add
fstl
std
pop
adc
cmp
xchg
pop
popa
inc
das
sbb
data16
je
mov
bswap
add
pusha
shr
es
cmp
xchg
cmp
rolb
push
lcall
ds
push
mov
insl
xchg
pop
lods
out
cmp
mov
sub
add
xor
mov
mov
fsubrs
movsl
leave
and
aad
jp
lret
outsl
iret
cmp
mov
pop
es
and
fwait
lret
fiaddl
push
fcmovbe
bound
js
fimuls
dec
aaa
adc
jne
dec
sti
add
sahf
outsb
jae
pop
lahf
xchg
clc
cwtl
imul
pop
xchg
rorl
jns
mov
jno
insl
sbb
enter
dec
bound
or
pop
jp
jnp
sti
xchg
jle
jp
lods
int
addr16
pop
xor
add
add
inc
xor
ud2
test
lret
fsubrp
lods
out
imul
loop
jo
xor
shlb
popf
mov
xchg
push
imul
dec
lods
ret
xchg
mov
xor
pusha
cmpsl
push
fstps
add
push
cmpl
fnsave
mov
shl
xchg
sub
pop
jg
pop
sbb
add
ljmp
mov
or
lret
shrl
lcall
or
xor
sarb
mov
mov
push
cmc
push
test
xor
aaa
cli
jmp
jmp
mov
cmpb
int
fcmovbe
out
iret
jo
jmp
enter
incl
jg
mov
jbe
xorl
mov
and
imul
lret
insb
and
scas
pop
push
pop
outsl
pushf
lea
mov
fnsave
jecxz
add
add
push
sti
decb
mov
das
pusha
xor
add
add
rolb
lcall
loopne
jnp
push
sbb
in
jmp
xchg
js
jp
adc
lahf
jns
dec
data16
adc
xlat
xchg
sbb
cmp
mov
mov
xor
mov
lret
das
std
push
adc
sete
insl
push
pop
mov
xor
dec
lahf
test
lock
mov
fistpll
mov
xchg
out
or
gs
dec
popf
aam
xchg
lock
xor
xor
xchg
and
xchg
shrb
jle
inc
out
and
test
scas
sahf
subl
lds
hlt
je
pop
add
and
mov
lret
outsb
scas
push
ret
adc
es
xchg
add
push
insl
mov
cmp
or
and
and
leave
jmp
and
mov
lods
push
push
inc
jns
mov
hlt
adc
lea
add
add
cmp
xor
hlt
push
movsl
cltd
cmpsb
fs
add
add
pop
aas
pop
lods
pusha
insb
push
add
dec
and
stos
aad
inc
mov
cmp
mov
negl
test
xchg
je
lcall
fwait
xchg
mov
fwait
shrb
mov
jge
sarb
notb
in
clc
out
sahf
xlat
out
mov
mov
hlt
pop
in
xchg
inc
xchg
dec
inc
or
out
jbe
xchg
out
inc
loopne
inc
and
xlat
gs
sbb
popf
or
xchg
sbb
cmp
and
xchg
jns
lret
stc
enter
inc
shll
xchg
fidivs
aam
inc
jns
sub
push
fistl
repnz
bound
inc
pop
insb
in
sbb
cmp
rcl
adc
mov
and
push
imul
jbe
jle
in
xchg
inc
sub
jae
pop
stos
xlat
cmp
mov
xchg
inc
pop
arpl
incb
ljmp
cmpsb
inc
inc
iret
push
add
add
popl
push
or
repnz
mov
nop
std
add
mov
and
xor
pop
mov
xchg
inc
dec
sub
fldt
loope
and
fistl
nop
or
hlt
inc
xchg
xor
dec
stc
aaa
jecxz
mov
aaa
lea
mov
cmp
push
in
mov
divb
iret
imul
ret
push
xor
imul
push
movsb
in
jne
and
cmpsl
pop
jnp
rolb
aad
lea
cmp
add
and
enter
add
ja
arpl
cmp
mov
lret
xchg
aad
mov
mov
cltd
push
cwtl
repz
nop
lds
lods
insl
stos
sub
lret
xchg
sub
icebp
bound
hlt
sbb
and
aaa
aas
and
jmp
jno
cltd
add
pop
lods
push
test
mov
adc
jle
mov
add
addb
push
in
divb
rclb
nop
lcall
aaa
add
add
add
sub
movsb
data16
fmull
or
ds
stos
xor
pop
dec
es
push
mov
cs
cltd
jb
arpl
push
add
fwait
in
mov
iret
inc
add
mov
push
lods
cmp
xor
push
and
cmp
int3
fs
pop
stc
rcll
in
dec
inc
call
fidivrs
mov
inc
inc
or
or
jne
add
pop
pop
add
sahf
insl
mov
push
xor
movsb
hlt
pop
mov
lock
addr16
or
lods
adc
sbb
rorl
imul
mov
insb
test
or
sub
inc
adc
sub
mov
testb
sbb
clc
sbbl
inc
add
cmp
sub
push
xchg
sti
out
jge
in
faddl
mov
in
or
cmp
pop
add
test
jno
outsl
add
mov
add
add
jbe
idivl
or
repnz
cmp
add
add
pop
push
sub
popa
lret
js
dec
jp
shlb
loope
push
adc
mov
mov
cmp
nop
out
push
dec
fldt
sub
stc
hlt
push
dec
ret
xor
sahf
jg
lret
lds
loop
call
xchg
adc
inc
cmc
adcl
xor
in
push
subl
jbe
xor
lock
push
les
pop
cmp
adc
int
insl
xchg
addb
mov
xchg
ljmp
jl
rcl
dec
in
inc
daa
scas
and
pusha
daa
icebp
xchg
es
subl
xor
mov
lods
in
cwtl
add
push
add
ficoml
pop
aaa
or
addr16
mov
outsl
leave
addr16
addr16
sti
sub
jp
push
icebp
fsubrl
cs
test
lods
les
stos
jne
dec
shl
xor
add
outsb
sub
stos
fs
jmp
leave
aas
sbb
add
add
add
pop
sbb
jb
sub
in
add
lods
cmp
xor
mov
jb
adc
sub
jbe
or
jg
mov
push
rolb
sub
mov
jbe
mov
or
test
repnz
iret
mov
dec
je
fisubrl
inc
ljmp
clc
push
dec
sub
or
inc
stos
or
inc
out
popf
subl
jnp
mov
cs
xor
cmpsl
aad
mov
dec
lods
dec
andb
inc
subb
scas
xchg
pop
push
or
fs
sbb
mov
mov
inc
add
loop
enter
fmuls
iret
xchg
lods
dec
mov
daa
cmpb
mov
pop
or
mov
mov
out
push
cld
jnp
pusha
xor
sub
cmpps
loopne
jnp
stos
iret
lds
cmc
bound
sahf
mov
das
gs
js
add
add
insb
pop
pushf
scas
fistpll
outsl
gs
das
dec
js
add
add
add
lret
sub
in
dec
imul
jo
cmp
insl
or
mov
jae
mov
outsl
jno
xor
mov
lahf
popf
mov
pop
out
ss
mov
dec
out
jl
sbb
xchg
jl
test
adc
add
jmp
shlb
xor
xor
inc
push
mov
and
insb
stos
arpl
outsb
mov
jge
out
pop
sub
add
jno
pop
pop
daa
shrb
mov
sbb
mov
jno
test
sbb
std
push
push
mov
mov
xchg
sar
clc
jb
in
out
shlb
mov
scas
mov
andl
sbb
sub
inc
out
mov
outsb
cmp
popa
jp
imul
in
ja
adc
xchg
movsl
ss
sbb
out
clc
movsl
dec
dec
outsl
xchg
adc
sbb
jnp
jnp
cmp
movsb
push
sbb
adc
and
add
add
fisubl
mov
push
pop
rcrl
movsl
mov
pop
jo
sub
jo
cmp
mov
mov
and
xchg
xlat
pusha
and
mov
pusha
imul
xchg
sub
jmp
call
xchg
jg
andb
and
adc
pop
xor
sbb
sahf
scas
sbb
cld
dec
cmpsl
addb
pop
push
pop
insl
loopne
push
insl
loop
and
xor
ja
adc
sub
push
sub
adcb
mov
sahf
add
outsb
push
dec
test
adc
add
mov
jbe
shll
push
mov
push
add
es
sub
bound
stos
jae
das
cmp
mov
cwtl
icebp
mov
inc
lcall
movsl
lock
insl
in
pop
mov
cmpsl
adc
das
pop
in
push
mov
aad
std
cmp
mov
mov
push
inc
out
sti
mov
add
loop
outsl
lret
mov
out
jmp
push
add
cmpb
add
add
jmp
cmc
ss
jp
push
movsl
xor
pop
das
lods
inc
addl
mov
xchg
mov
push
imul
bound
mov
mov
loope
ret
out
gs
xor
lea
sbb
mov
outsb
inc
xchg
mov
inc
xor
mov
in
cmp
lods
mov
dec
adcl
mov
inc
pop
jbe
cmpsl
outsb
stc
xchg
and
arpl
in
mov
xchg
jb
outsl
roll
mov
js
icebp
scas
ret
mov
std
or
xchg
rorb
scas
and
cld
outsb
into
sbb
mov
xchg
inc
test
mov
adc
sub
fadd
xor
test
in
mov
fucom
mov
inc
cmpsl
xchg
insb
or
xchg
sbb
test
aas
arpl
mov
lods
icebp
mov
loopne
cltd
imul
add
repz
cmp
lods
repz
mov
sbb
shr
cmp
add
jbe
cmp
ss
mov
push
std
movsl
aaa
xchg
xchg
jo
stos
xchg
xor
mov
adc
icebp
je
imul
mov
lahf
xlat
pushf
es
add
pop
outsl
daa
inc
popa
sbb
fistps
movl
repz
imul
lret
mov
xor
add
jne
or
adc
dec
cltd
sbb
cmp
lahf
test
adc
push
lretw
fmull
cmp
out
movsl
je
fs
jl
mov
jo
and
mov
sbb
fiaddl
adc
out
push
push
aaa
arpl
nop
sub
ss
icebp
int
roll
into
inc
jg
mov
es
cmpsb
movsb
cmp
adc
je
jg
sbb
mov
cmp
and
movsl
xchg
xor
rclb
dec
mov
sbb
icebp
das
jae
add
add
daa
push
cld
push
std
jmp
dec
push
sub
add
add
cmp
aaa
imul
ss
mov
and
pop
sub
loope
scas
push
adc
sbb
loop
int3
sub
jp
xor
ljmp
aad
pop
lock
mov
out
add
hlt
es
andb
or
mov
sub
fs
stos
mov
std
add
aas
gs
int
sub
test
lods
fmull
daa
mov
icebp
jo
add
imul
aad
adc
dec
push
sub
cmc
dec
pop
mov
adc
mov
shll
cltd
mov
adc
sahf
push
xchg
fs
lret
dec
repnz
jmp
cmp
ret
mov
out
cmp
or
adc
dec
jge
adc
mov
xor
sub
sub
or
xchg
jb
mov
rol
push
imul
shrl
mov
add
add
sbb
dec
push
out
aad
iret
popa
mov
add
add
into
ss
lods
movsl
pop
inc
imul
mov
pop
jecxz
aam
out
insl
in
mov
xchg
push
mov
jg
sub
enter
loopne
aas
ret
push
lds
in
decl
adc
xchg
jmp
mov
adc
out
mov
mov
or
push
inc
xchg
movsl
cmp
jecxz
and
or
stc
pop
xchg
cs
pop
add
push
shrb
sub
outsl
jecxz
adc
and
jns
sub
mov
and
dec
test
gs
and
sbb
cmpsl
xlat
xor
inc
cwtl
cmp
jns
shl
jecxz
ja
ds
sub
or
cs
xor
xor
inc
mov
add
jmp
pop
sahf
les
clc
lahf
sbb
jbe
dec
int3
cmp
push
dec
dec
sub
sbbl
add
idivl
or
imul
add
dec
mov
push
adc
cmp
pop
je
xchg
and
mov
das
je
mov
hlt
cltd
mov
lds
mov
enter
fwait
pusha
pushf
addb
dec
and
jecxz
cmp
and
add
cltd
iret
or
sub
idiv
pop
push
fisubl
lret
push
loopne
mov
rclb
in
aaa
movsl
sub
pop
mov
lret
popf
out
jno
jge
jg
push
jae
iret
fnstcw
dec
mov
fmull
cli
out
dec
fldpi
mov
stc
out
ljmp
jg
int3
ficompl
lds
cmp
test
inc
and
imul
mov
jae
jo
imul
or
fwait
and
nop
stc
dec
ret
push
aam
out
pop
pushl
dec
fimuls
push
movsl
jp
gs
into
sbb
mov
inc
xor
adc
inc
xchg
test
test
adc
lods
mov
ja
jg
xchg
orl
test
add
and
mov
xor
psadbw
test
dec
mov
push
lret
push
cmp
cld
jl
push
subl
lcall
jno
ror
loop
dec
pusha
sub
sbb
mov
add
mov
adc
xchg
test
js
int
mov
dec
ret
aaa
push
fs
dec
sbb
xlat
lea
xor
xchg
jg
or
pop
add
sbb
jne
cmp
jmp
das
fisubl
movzwl
push
dec
fstps
mov
push
dec
jne
scas
ret
pop
lahf
or
leave
ljmp
sahf
adc
dec
ds
fcmovne
xchg
loopnew
test
pop
ret
imul
sbb
mov
incl
xor
xchg
shrb
rcl
inc
xor
fdiv
sub
jmp
xor
lock
cwtl
imul
jmp
cmp
cmpsb
inc
std
mov
mov
jo
mov
arpl
and
dec
lret
jmp
imul
aaa
je
inc
adc
add
add
int3
push
lcall
jg
ret
jmp
sbb
sti
mov
call
and
push
mov
sbb
icebp
shrl
into
xor
jo
adc
push
and
xchg
scas
sub
mov
pop
jbe
xor
cmp
push
sbb
test
cmp
repz
mov
test
lea
xor
or
cmp
xchg
ds
cld
bound
test
add
push
ret
fs
int
iret
popf
inc
push
mov
push
int
push
mov
jno
cmp
push
xor
push
stc
jmp
add
pop
ror
pop
les
jmp
sbb
out
loopne
mov
xor
and
inc
add
xor
pop
cmpsl
jmp
addr16
out
aad
mov
push
sarb
sahf
test
loopne
wrmsr
dec
jne
aad
mov
jle
pop
lds
cmc
cwtl
xchg
push
sub
sahf
jnp
pushf
inc
add
add
add
fldt
incl
add
fisttpll
add
gs
inc
fidivrl
xor
mov
stc
jne
fmulp
in
and
frstor
add
fnstsw
push
sarb
shrl
insb
loop
add
into
repnz
cli
mov
or
jmp
lea
lods
je
cs
push
and
push
mov
push
mov
aad
ficoml
jb
cwtl
clc
and
pop
or
push
je
cmc
cmpsb
andb
jae
inc
idiv
pusha
xlat
sub
lret
int
fldt
xchg
cmp
pop
sbb
sti
movsb
xchg
cs
fsub
mov
ret
cmp
das
subl
xor
ret
pop
fucom
inc
sbb
popaw
cmp
push
test
pushf
mov
pop
jecxz
xchg
jmp
add
sahf
mov
stc
add
mov
sbb
jne
repz
sub
jns
xor
jg
testl
add
add
add
mov
lahf
sbb
push
clc
lcall
ljmp
shrl
push
inc
xchg
sub
popa
ds
inc
aaa
frstor
push
lds
popl
sbb
fisttpll
mov
jbe
jbe
jb
loope
in
adc
lret
cmp
and
lock
xchg
push
xor
into
insl
cmp
in
mov
xchg
or
inc
xor
sbb
jecxz
test
jbe
rcr
push
sahf
cmp
into
mov
iret
je
inc
cmp
inc
ja
sub
mov
sbb
push
jo
cld
xchg
cwtl
pop
aas
shlb
movsl
fisubs
cmp
and
bound
sub
imulb
ds
mov
jmp
or
mov
sbb
scas
in
stos
stc
addb
inc
js
ret
jg
decl
rol
sub
add
add
add
sub
mov
xchg
push
and
insb
cmp
jno
cmp
ljmp
or
sub
mov
lds
jge
mov
aas
ror
imul
mov
sti
lret
imul
repz
or
xchg
test
pusha
lea
icebp
lods
sbb
pop
rorb
js
adc
xchg
push
adc
sub
imul
rolb
mov
sub
sbb
jno
dec
test
sub
fiadds
movsb
xor
cltd
enter
add
stc
jb
add
mov
xor
aad
clc
dec
mov
or
jecxz
subb
out
dec
das
sub
lods
enter
cmp
loope
fisttpl
js
mov
jecxz
repz
dec
dec
mov
jge
mov
out
mov
jg
pop
sub
add
add
das
mov
out
aad
jg
enter
add
add
flds
in
cli
movsb
test
mov
xchg
pop
mov
in
popf
and
outsl
mov
push
sbb
adc
rol
sbb
fwait
in
lret
fcompl
testl
add
pushl
xchg
or
dec
adc
pop
xor
imul
fcmovb
or
mov
xchg
add
mov
std
cmpsb
dec
mov
xor
ss
dec
shlb
or
fldenv
push
xchg
push
add
out
sbb
cmp
sub
or
leave
std
je
mov
jno
shrb
arpl
sbb
mov
xchg
xor
mov
sub
or
sbb
lahf
clc
sub
xor
cmp
mov
and
fiadds
cmc
adc
mov
scas
sbb
inc
aad
cmp
clc
incb
adc
aaa
add
mov
dec
aas
icebp
imul
add
inc
icebp
hlt
gs
dec
adc
loope
lods
inc
add
add
add
xorl
leave
leave
iret
inc
shrb
cmp
pushf
xor
daa
mov
jns
fcmovnu
sbb
jne
iret
dec
and
jge
mov
push
leave
pop
aaa
pop
ds
imul
push
enter
ja
pop
dec
aaa
into
xchg
push
pusha
xor
pushl
adc
push
add
mov
mov
scas
les
sbb
mov
mov
push
mov
add
cmpsl
sbb
xor
lea
mov
cs
bound
adc
and
mov
jb
ret
std
pop
movsb
js
mov
xor
jbe
scas
mov
fs
paddusw
fimuls
xchg
in
add
cmp
test
fnstsw
mov
pop
movsl
mov
adc
jecxz
out
aas
lds
js
jnp
insb
lds
dec
mov
cltd
jecxz
push
mov
insl
mul
jno
xor
jl
aaa
add
aas
gs
pop
repnz
dec
add
add
add
push
cmp
lods
gs
or
jmp
inc
xor
je
jg
fadd
rcl
iret
lds
jge
inc
in
xchg
xor
xchg
inc
or
sbb
xor
mov
pop
leave
mov
cmp
jbe
filds
push
hlt
mov
mov
incl
or
in
sub
jp
add
jmp
push
lods
mov
mov
sahf
lcall
and
xor
cmp
push
mov
imul
mov
pop
sbb
mov
popa
mov
clc
and
fdivl
mov
pop
xchg
sti
mov
shr
bnd
push
push
mov
cmpsl
mov
sbb
popf
sbb
xchg
lds
into
mov
xchg
mov
mov
and
lret
mov
rcr
rcll
lods
lea
mov
into
pop
daa
xchg
pop
std
mov
mov
add
out
fisttpll
lock
clc
jb
dec
add
add
add
aad
cmc
xchg
xor
dec
pop
xorb
and
xchg
fwait
les
dec
sbb
cmp
mov
ja
inc
push
mov
inc
jmp
pop
out
push
jp
lods
or
jle
imul
or
push
pop
xchg
call
and
hlt
sti
inc
mov
adc
test
mov
mov
or
push
mov
mov
pop
jp
mov
cmpb
dec
mov
bound
in
jns
push
push
cli
popf
out
jnp
aaa
add
and
cltd
ss
xor
mov
popa
in
pop
push
pushf
push
sbb
mov
mov
jnp
cli
dec
sub
test
adc
cld
sub
jns
jne
mov
cmp
xor
or
adc
out
inc
add
out
inc
cmovp
adcl
dec
mov
dec
sbbb
add
mov
ljmp
add
add
add
xor
idivl
test
mov
lret
lret
xchg
mov
sub
stc
popf
cmp
fisttps
sbb
orb
sar
sarb
inc
add
lods
xchg
inc
xor
fwait
add
xchg
scas
dec
lret
scas
call
scas
stos
or
lods
mov
xchg
lock
insb
testb
stos
in
mov
shl
leave
aam
push
jns
adc
testb
mov
daa
sbb
test
out
mov
dec
push
pop
dec
orb
fwait
push
add
ljmpw
mov
fisubrl
ficompl
lret
popf
je
mov
dec
icebp
shr
mov
mov
addr16
push
je
shrl
sub
int3
les
push
sub
into
lret
in
adc
xchg
xor
ds
rolb
pop
dec
fldenv
mov
add
fldt
sbb
movsb
mov
repnz
jns
push
sbb
jmpw
fnstcw
jo
sahf
jb
call
add
add
add
sub
pop
aad
leave
std
repnz
adc
popa
xor
push
xchg
jo
xor
mov
and
repnz
dec
xchg
loopne
jno
add
into
aaa
cli
adc
xchg
fimuls
mov
mov
xor
jae
mov
daa
int3
xlat
sub
pop
or
fs
shlb
in
mov
mov
std
lret
adc
jl
iret
call
jae
pop
loopne
aaa
xchg
pop
popl
adc
shlb
lea
aas
loop
cmc
repz
cs
lock
lds
pop
and
cmpsb
and
aas
sti
mov
xchg
or
ljmp
mov
xchg
push
sets
shll
fcoml
adc
sub
mov
repnz
mov
scas
inc
shlb
jge
push
push
push
push
movsl
cmpl
add
add
imul
out
mov
mov
ret
imul
add
add
add
mov
and
scas
daa
stos
mov
stos
call
cmp
jo
mov
jge
mov
or
and
popa
sarb
int
or
mov
xorl
inc
test
add
cmp
dec
sub
cltd
pop
daa
inc
add
lock
je
pop
pop
sbb
or
pushf
sub
fisubrl
inc
sub
jo
push
aam
mov
adc
stos
movsb
shrb
fbstp
push
imul
dec
out
and
pop
inc
inc
das
sub
push
lea
pop
adc
mov
bound
loopne
rcll
mov
pop
push
data16
adc
iret
mov
jle
mov
movsb
out
es
mov
and
into
push
test
outsb
mov
pusha
xor
clc
push
je
cli
mov
out
inc
test
dec
cmp
or
sarl
sub
jp
nop
fwait
jnp
xor
popa
push
push
imul
mov
test
subb
add
add
add
dec
stc
mov
ljmp
les
add
add
adc
pop
push
mov
ljmp
xor
lahf
mov
mov
push
or
inc
cmp
xchg
inc
into
mov
cli
mov
fstpl
mov
cmp
adc
pusha
push
cmp
bswap
or
push
xchg
pop
shl
push
imul
leave
or
xchg
imul
lds
loopne
aam
inc
cmp
mov
xchg
xorl
jl
dec
push
add
push
dec
aaa
dec
sbb
out
pop
sbb
push
jns
fwait
shll
xchg
sti
jle
insl
push
jbe
and
bound
push
imul
cmpsl
mov
arpl
jnp
or
outsl
into
nop
stc
notb
push
repz
sbb
gs
mov
fimuls
lret
mov
ds
mov
push
into
jno
mov
add
xchg
cmp
jle
jg
cld
lcall
xchg
enter
add
add
call
adc
scas
inc
xor
enter
rolb
es
out
insl
hlt
stc
rorb
iret
cmp
cltd
cli
and
out
je
jp
jp
lahf
cltd
imul
push
data16
mov
mov
ret
mov
lcall
jge
xchg
xor
in
inc
mov
ss
adcb
ficoml
push
call
cltd
pop
or
mov
rcrb
pop
mov
pop
jge
in
mov
orl
addr16
sti
je
xor
dec
sub
sbb
cmc
xchg
andb
jns
sub
nop
jmp
nop
fldenv
repnz
xchg
mov
jbe
cli
imul
popf
jmp
pop
xchg
fnstsw
lock
adc
dec
push
mov
jo
pusha
rcrl
rclb
pop
cmp
sub
add
add
xchg
mov
pop
loop
and
int3
dec
add
add
add
movsb
mov
jae
into
mov
das
jae
cmp
ret
and
inc
xchg
ljmp
cmp
xchg
aas
lods
dec
mov
jo
jno
insl
scas
cmpsl
push
push
mov
lcall
push
xchg
mov
cmpsb
jge
or
dec
outsl
xor
jo
push
es
mov
fnstcw
test
cmp
leave
cmp
mov
das
dec
pusha
and
ret
and
adc
push
mov
push
std
hlt
push
sbb
orl
subb
add
push
inc
xchg
loop
test
cs
xor
inc
test
in
adcb
cmpsb
ss
jns
cmp
into
cmp
movsb
push
aam
sti
test
add
cmp
sbb
cmp
cwtl
les
push
adc
dec
loopnew
pop
js
mov
push
pop
mov
add
add
inc
mov
push
push
jmp
push
mov
ret
add
add
add
fwait
sub
xchg
sahf
mov
lds
jne
xchg
ret
jmp
xor
pop
call
in
cmp
outsl
cmp
orl
push
cltd
sub
aas
loopne
addr16
cmpsb
iret
std
popf
scas
negb
sub
cld
stos
mov
in
into
stc
sub
fwait
and
push
pop
or
rclb
test
inc
movsb
and
or
test
push
dec
sub
dec
fwait
pop
scas
je
mov
shll
and
cmc
lret
inc
inc
shlb
fcom
and
movsl
pop
adc
call
arpl
int3
push
xchg
imul
popf
cmpl
in
arpl
int
mov
mov
sbb
iret
mov
aas
mov
fmull
or
test
fwait
dec
mov
adc
xchg
push
movsb
jne
ficoms
and
test
movsb
insl
fldenv
dec
and
roll
add
fsubrl
mov
out
cmp
ret
or
dec
add
add
add
jns
jne
inc
pop
push
adc
adc
push
std
mov
mov
ret
mov
mov
mov
lock
bound
jl
bound
arpl
popf
jg
outsl
test
lods
mov
cmpsb
add
movsb
outsb
push
adc
js
cmc
pop
loopne
cltd
or
push
xchg
pusha
jl
sahf
rcrl
cld
aas
mov
ret
cmp
fisubrs
aam
adc
loope
adc
rcll
pop
push
dec
in
dec
cwtl
mov
and
xchg
xchg
mov
in
xlat
aas
push
idivb
fisttps
insb
stos
add
shll
pop
call
pop
xor
into
sarb
insl
sbb
addr16
xor
inc
and
sub
insl
imul
outsl
mov
mov
jg
dec
xor
add
mov
inc
cld
inc
imul
push
loope
and
mov
sbb
ja
push
test
or
push
shll
out
pop
pop
pushf
push
cmp
fdivrl
add
add
imul
mov
xor
sub
roll
and
jno
push
jp
enter
dec
lret
in
mov
adc
in
inc
sbb
lods
mov
sarl
xchg
dec
pop
fiadds
stos
jne
pop
cmp
ja
mov
jne
push
out
rorl
sub
pop
dec
xor
cmp
and
test
ds
jae
cmc
popf
out
mov
lea
xchg
push
jp
sub
and
mov
mov
xchg
ds
cmpsb
mov
sub
dec
cmp
pop
push
fucomi
adc
pop
out
push
into
in
mov
lock
inc
pop
dec
lds
in
js
cld
adc
cmpsl
push
es
lea
jl
jge
shld
xor
test
add
xor
xor
add
test
aaa
ret
fiadds
jb
or
cmc
cmc
sti
cmpsb
mov
lret
and
cmp
aad
adc
test
stos
push
lcall
hlt
mov
dec
and
fcoml
add
add
push
jecxz
xor
dec
loop
jns
repnz
jns
dec
sbb
mov
lahf
aaa
test
scas
mov
fildll
inc
jmp
xor
jnp
xorb
in
xor
into
mov
enter
scas
push
or
in
inc
iret
and
lcall
mov
add
insl
or
clc
addr16
dec
pop
xchg
ljmp
aam
bound
cmc
cld
xchg
mov
add
scas
xchg
jnp
cmp
xchg
mov
sbb
in
mov
fwait
inc
xchg
je
cmp
jb
or
inc
cmp
cs
inc
jns
out
je
cli
enter
hlt
scas
adc
push
cmp
ja
jne
sub
das
shll
mov
sbb
stc
pop
sub
mov
or
lds
cltd
sbb
pushf
clc
jo
or
push
lods
aam
cmpsl
out
or
mov
push
and
dec
fstps
std
pop
sbb
mov
add
add
jbe
idiv
imul
pop
dec
loopne
add
add
add
xchg
dec
pop
lea
leave
mov
ret
adc
ret
push
test
popf
push
sti
lret
mov
mov
scas
clc
pop
inc
mov
pop
and
repz
xor
jmp
hlt
lret
mov
lods
push
cmpl
andb
inc
push
adc
jp
xchg
sbb
in
mov
add
clc
jae
aam
adc
dec
lods
sub
shll
mov
imul
in
inc
mov
pop
fdivs
mov
or
sti
ss
pushf
aaa
mov
sub
cwtl
inc
stos
or
pushf
fldl
jbe
xchg
mov
cmc
shrl
je
jmp
push
cmp
stos
repz
sub
movsl
xchg
and
xchg
divb
sbb
pop
adc
cmp
mov
outsb
mov
jmp
xchg
xor
in
jp
test
add
fwait
cmp
stos
sarb
in
add
add
add
and
jge
sbb
rcrb
jns
clc
and
lahf
lret
div
pop
fwait
pop
subl
xlat
out
and
pusha
or
test
pop
or
cmp
cmp
int
mov
or
and
and
lcall
imul
push
xor
cmpsl
push
sub
es
dec
push
je
ds
adc
cmpl
pop
pop
fs
sub
mov
mov
out
nop
enter
pop
sbb
aas
pop
dec
pusha
xchg
dec
ds
jge
jb
mov
stos
mov
arpl
scas
pop
mov
faddl
lods
xor
mov
mov
pop
push
mov
xchg
dec
mov
mov
out
out
pop
call
xor
push
pop
cmp
dec
jle
fnsave
cmp
ret
or
cld
inc
and
jl
add
add
clc
mov
and
hlt
shll
xor
push
add
add
add
mov
jmp
inc
pop
insb
sbb
shrl
mov
mov
push
mov
jge
nop
mov
dec
push
pop
pop
jmp
adc
ret
cltd
leave
rcll
sahf
mov
inc
jl
out
test
jecxz
in
adc
punpcklwd
ljmp
mov
into
mov
add
or
mov
imul
push
push
push
sbb
ss
pop
ljmp
insl
fsubl
xor
mov
sub
adc
mov
inc
inc
fcmovnu
adc
repnz
fwait
adc
arpl
lahf
jns
outsb
jg
xor
andb
pop
cltd
pusha
imul
fwait
jbe
adc
inc
push
addr16
bound
test
pop
pusha
and
sti
out
and
stos
loop
sub
jg
mov
scas
xchg
push
adc
out
mov
mov
sbb
add
add
add
aam
arpl
ljmp
mov
inc
or
test
lock
int
arpl
xchg
sbb
add
pop
inc
jne
xor
xchg
jnp
imul
sti
loopne
aad
mov
pop
popa
repnz
rclb
xchg
pushf
adc
dec
inc
xor
push
fidivs
insb
gs
into
call
fisttpl
ficoms
inc
mov
dec
les
mov
dec
and
add
flds
lret
out
ss
les
repz
jb
int
in
inc
pop
sti
fldenv
gs
sub
push
pop
add
cmpb
test
loopne
mov
pop
ja
outsl
mov
dec
call
mov
add
gs
push
jle
mov
in
pop
mov
xchg
cmp
mov
xchg
push
pop
pop
xchg
in
out
mov
lods
jbe
inc
and
int3
push
push
dec
jae
dec
adc
test
or
fdivs
jno
mov
add
add
jge
add
add
negl
popa
lds
or
stos
clc
daa
nop
das
add
iret
cld
inc
jae
pop
inc
push
iret
xor
into
cs
arpl
hlt
sbb
mov
out
mov
les
sub
icebp
lods
push
mov
sti
into
fcomps
fsubr
xchg
popa
cmp
fcomps
xor
fisttpl
loope
rcrl
xorb
daa
lea
mov
clc
mull
inc
mov
sub
xchg
shrd
bound
or
lret
in
sub
adc
popf
in
bnd
or
xor
rep
shll
jg
mov
or
jne
dec
pop
cmp
dec
insl
mov
mov
cmc
sub
cmpsb
sahf
mov
inc
movsb
ficomps
scas
or
pop
std
repnz
repz
scas
lods
sti
fcompl
mov
and
das
cmp
pusha
push
pop
add
add
add
sub
dec
pushf
lret
sub
cli
ret
or
test
int3
ds
mov
or
xchg
and
addr16
mov
jmp
or
inc
xlat
sbb
aaa
sti
cld
sbb
sbb
cmpb
popf
mulb
mov
inc
mov
fisttpl
fwait
lahf
or
sub
popf
icebp
nop
xor
movsl
mov
xchg
xor
jne
ret
lea
pxor
dec
inc
test
insl
int
push
sahf
cmp
add
movsl
or
jns
push
pop
leave
scas
cmp
jmp
xor
jl
insb
xor
sbb
sub
lahf
mov
sbb
mov
mov
dec
cmp
and
or
push
xchg
pusha
fisubrl
cmp
xchg
in
push
cmpsb
mov
rcl
and
add
xchg
mov
and
shll
in
mov
rclb
adc
add
add
movsb
jae
jnp
mov
ja
mov
cmpsl
inc
ret
add
add
add
jle
sbb
xor
ljmp
sti
inc
add
les
test
leave
pusha
adc
shl
adc
enter
pop
xlat
pop
je
adc
call
xchg
sub
mov
hlt
push
and
in
leave
sbb
movsl
aas
jae
aad
inc
lock
dec
dec
fmul
shr
clc
xchg
add
sbb
cmp
js
mov
mov
subl
push
cwtl
fdivr
inc
adcb
jbe
sub
add
xchg
jne
inc
dec
mov
and
add
fcoml
push
xchg
std
test
sub
pop
dec
xchg
xor
icebp
pop
dec
fcom
cld
push
shll
push
cmp
shlb
repnz
pop
fldl
pop
in
orb
lods
popf
push
test
in
mov
icebp
push
aaa
push
mov
loopne
cltd
push
pushf
push
fstpt
insb
rcrb
and
add
fbstp
scas
adc
lahf
xlat
out
cld
xchg
aad
dec
cld
pop
add
add
add
fstpt
sub
dec
xor
cmp
xchg
adc
negl
repnz
test
jbe
sub
xor
shrb
pop
add
cmpsl
and
std
pushf
stc
outsb
adc
imull
mov
stos
pop
stos
and
rorb
push
insb
nop
push
mov
mulb
subb
xor
lea
and
std
scas
lods
mov
dec
out
mov
icebp
sbb
dec
iret
test
xor
psllq
xor
rorl
adc
adc
mov
jl
push
xor
pop
and
or
scas
fsubrs
bound
sti
loop
push
divl
inc
fwait
sub
es
mov
mov
mov
push
mov
jnp
push
outsb
rorb
imul
scas
outsl
out
out
add
mov
mov
inc
xchg
cmpsl
pop
mov
mov
in
inc
sbb
add
add
data16
jnp
xorb
jbe
lea
xchg
pop
syscall
cld
jne
adc
adc
pop
pop
and
addb
inc
out
clc
cmp
fsts
mov
shrl
int
inc
popf
call
rcl
adc
or
sub
subl
xchg
sbb
adc
mov
std
or
xchg
xchg
loopne
xchg
mov
rclb
daa
mov
je
or
movsb
stos
xchg
jl
mov
jmp
dec
sbb
fnstsw
inc
sbb
xchg
push
add
scas
pop
sbb
iret
pop
stos
es
icebp
in
inc
daa
cmp
out
fisubrl
push
mov
push
decb
in
ret
sub
fistpll
or
adc
nop
xchg
mov
in
mov
test
push
jnp
iret
test
adc
data16
sub
cli
shrd
arpl
pop
mov
mov
add
add
push
into
push
push
inc
lahf
mov
add
add
add
add
hlt
dec
mov
add
adc
jl
push
or
rclb
ds
mov
fwait
sub
jnp
pop
sub
bsr
xor
dec
sub
aaa
mov
mov
inc
xor
js
sbb
out
aaa
daa
xor
rorl
mov
in
lods
pop
or
data16
clc
lret
mov
fstps
cli
cmp
sub
cmp
cld
push
adc
movsb
sbb
repnz
pusha
inc
inc
idivb
sub
mov
ficomps
push
ja
dec
sub
scas
je
or
ja
sub
mov
addb
cmpsl
test
cmp
add
jmp
pop
test
test
and
sbb
mov
stc
out
jno
test
jns
iret
mov
mov
cld
or
loopne
mov
push
ljmp
lods
xorb
lret
cmp
add
and
mov
jg
or
or
add
add
sub
and
loope
or
sub
rcrb
adc
leave
lahf
adc
push
icebp
jg
cmp
jns
lret
movsb
xchg
xchg
out
ljmp
enter
sbb
movsl
add
repz
lea
icebp
clc
sub
sar
or
and
cltd
shl
sub
mov
adc
movsb
jl
adc
or
push
add
adc
add
inc
aas
cwtl
ss
or
pop
xchg
mov
rcrb
std
clc
mov
shl
out
push
test
cmpb
das
bound
or
inc
xlat
and
push
ret
aaa
xchg
dec
mov
pop
mov
push
jo
push
adc
hlt
pop
inc
je
std
out
loopne
adc
mov
lods
pop
movl
mov
sub
lahf
mov
imul
scas
mov
add
add
lahf
pop
cmpsl
jne
mov
pusha
add
add
add
jge
add
arpl
sub
andl
stos
aam
inc
out
imul
push
dec
pop
int3
ss
jecxz
jecxz
out
nop
neg
cmp
aam
and
rol
mov
fcomps
pop
hlt
pop
push
sub
push
push
dec
aaa
imul
cltd
js
xlat
ljmp
sbb
test
rorw
sarb
mov
int3
aas
jb
xchg
lret
jbe
sub
xor
stos
movsb
sti
xchg
sub
adc
pop
inc
add
mov
dec
xchg
cmp
push
imul
flds
xchg
sti
xchg
insb
xor
adc
mov
inc
cmp
adc
gs
inc
es
inc
test
or
pop
clc
mov
iret
pop
fisttps
xchg
push
jbe
mov
loopne
js
push
fs
cmp
and
pop
and
sti
incb
add
add
idiv
jg
sub
jle
adc
add
add
es
int
fiadds
jg
insb
ds
daa
dec
ljmp
mov
pop
out
js
lea
cli
pop
scas
cli
sbbl
xchg
shr
pop
repnz
jne
jge
and
imul
mov
sub
testb
bound
inc
xchg
xor
dec
sbb
mov
lds
lcall
dec
fs
push
xor
sbb
and
das
loop
add
adc
add
repnz
jmp
mov
aam
hlt
jmp
loopne
jp
ret
std
addr16
push
sbb
cmpsl
adc
sbb
cs
adc
pop
cld
inc
xchg
rolb
in
jle
jl
ss
xchg
cmc
push
sbb
fs
pop
insb
iret
push
jns
xlat
xchg
jle
cmp
mov
xchg
fwait
jne
dec
sbb
cltd
cld
mov
fisttps
mov
xor
test
and
add
inc
pop
mov
fstps
xchg
sbb
add
add
add
mov
mov
rclb
mov
pushf
shl
mov
pop
xchg
mov
out
xchg
lret
shrb
addr16
sbb
notl
push
jbe
dec
fnsave
leave
lret
out
movsb
cmp
sub
xor
sbb
pop
js
daa
adc
mov
cmp
add
addr16
pop
rcr
test
inc
xchg
adc
cmc
sub
jl
mov
dec
outsl
mov
int3
or
xor
insb
js
pop
cs
lea
jl
sti
inc
orb
jnp
fcompl
cmp
loope
adc
sbb
fwait
mov
repz
cmp
orl
push
pop
mov
cmp
sub
fwait
std
push
push
and
jmp
pop
sub
jecxz
push
lock
ret
push
xor
or
dec
movl
add
repnz
movsb
jle
arpl
ss
sbb
add
add
xchg
pop
in
and
cli
jle
xor
data16
lahf
fildl
pop
ret
mov
loop
mull
jo
push
out
push
les
out
adc
xchg
mov
fnstsw
dec
orl
test
imul
leave
sbb
pop
lret
inc
mov
std
mov
xor
rcr
mov
aas
xor
insb
adc
dec
mov
js
lret
jmp
dec
mov
addl
mov
adc
jbe
add
aas
mov
mov
sbb
cmp
jo
cmp
adc
mov
sbb
subb
sarl
daa
dec
sub
xchg
test
mov
cwtl
test
sbb
mov
push
push
or
mov
arpl
add
stos
sub
stos
out
jmp
sub
or
add
add
add
cmp
adc
in
or
test
cld
xchg
mov
jnp
xchg
mov
arpl
scas
mov
stc
stos
daa
dec
cld
aad
inc
loop
mov
lods
insl
roll
fwait
jecxz
aad
or
add
xor
cmc
or
push
out
stos
ret
xor
dec
mov
sub
pop
test
jl
insb
inc
xchg
imul
test
divl
push
aas
mov
fsubrl
cmpb
and
jg
jecxz
rorl
and
mov
insb
sub
sahf
nop
xchg
shrd
aad
cmp
xchg
jmp
push
inc
inc
sub
jle
sbb
lret
outsl
scas
or
aam
std
daa
push
jb
jge,pn
and
mov
in
pop
in
xchg
dec
hlt
loope
add
inc
outsb
sbb
repz
shll
fnstenv
mov
add
add
add
subl
sbb
lds
shlb
add
sub
jns
shl
lods
in
ljmp
push
pop
jns
mov
call
add
cmp
jl
jge
arpl
jae
into
sbb
sub
cltd
jmp
mov
insb
mov
daa
pop
xchg
sahf
out
cmp
test
mov
and
fstpt
xchg
lock
call
cmpsb
bound
add
xchg
add
pop
pop
jg
das
movsb
int
sbb
imul
adc
cs
lahf
pop
and
cmp
jmp
jne
fcmovnu
repz
dec
xor
jmp
lods
ja
fiadds
xchg
insl
jl
insl
mov
testl
ds
cli
add
ds
jb
idivl
push
xchg
inc
div
ret
aam
push
in
in
test
stos
mov
or
push
enter
add
cld
je
jbe
jns
sbb
mov
cmp
add
add
add
ljmp
mov
loope
insb
imul
mov
inc
pop
lock
cmpl
lds
pushf
cmp
aas
pop
sahf
mov
push
dec
hlt
xor
jb
add
sar
dec
mov
inc
adc
push
loopne
in
mov
pop
int3
roll
lds
negb
cmp
push
out
mov
sahf
imul
mov
gs
and
jp
and
jp
ss
fs
or
dec
out
je
movsl
cmpb
sub
insl
scas
rcrb
jae
mov
dec
loope
sti
mov
daa
xchg
push
mov
ljmp
sub
sbb
in
xor
fisubrs
fsubl
test
or
shlb
or
in
dec
pop
cltd
fisttps
outsl
push
mov
ret
scas
or
in
inc
cwtl
jp
sub
test
push
cltd
jmp
fildl
or
or
fildll
add
add
add
pop
stos
pop
loop
outsl
and
pop
fsubr
jns
lret
mov
addr16
pop
pop
pop
mov
hlt
scas
out
lahf
loop
push
insl
test
fidivrs
xor
sub
sti
into
push
push
into
sub
jp
mov
in
add
push
jl
into
jbe
pusha
cmp
int
pop
outsl
add
mov
shll
push
adc
pop
daa
es
cs
fnstcw
push
dec
pop
call
aam
xchg
pop
js
mov
aad
bound
call
es
int3
mov
sbb
lahf
mov
or
and
push
rcrb
mov
sub
mov
cs
jns
xorl
fcoms
sub
jecxz
aam
iret
shrl
xor
mov
sub
mov
and
les
push
sub
pop
and
adc
out
ljmp
les
fucom
mov
add
add
push
jg
dec
xchg
dec
popf
push
aam
sub
add
add
add
popf
pop
push
push
sub
mov
inc
mov
dec
arpl
mov
imul
push
and
stos
cmp
add
mov
movsl
sub
arpl
lcall
push
ja
outsb
sub
or
mov
mov
mov
rcll
jns
fmuls
outsb
jmp
movsb
pusha
arpl
jp
mov
push
repz
out
out
sti
movsl
push
ds
sbb
jle
daa
roll
cmpsl
jmp
inc
iret
mov
pop
push
or
std
jnp
addr16
shrb
or
out
in
sub
iret
sti
iret
mov
ja
fs
add
sub
bound
mov
xchg
clc
or
dec
xchg
mov
push
into
mov
inc
inc
mov
inc
popa
jno
pop
arpl
mov
aas
sbb
sti
mov
je
inc
adc
add
add
mov
fucomip
push
insb
xor
fwait
in
mov
xor
add
add
ss
inc
jnp
imul
idivl
enter
pop
mov
imul
mull
push
nop
in
jp
xor
shr
mov
lret
rcll
inc
xchg
repz
xor
jmp
lcall
jne
test
mov
push
xlat
jno
scas
xchg
adc
mov
rolb
int
fwait
dec
cmp
sbb
scas
shll
push
fldenv
jmp
mov
mov
sti
scas
ja
fcmovbe
ljmp
aaa
daa
imull
bound
out
mov
push
xchg
lock
mov
sbb
mov
jbe
xchg
addb
xchg
inc
push
fimull
lods
or
negl
mov
add
les
iret
mov
and
jne
adc
mov
iret
push
push
push
fiadds
xor
add
dec
out
iret
jmp
aas
in
push
data16
sub
add
add
adc
cmp
fbld
aam
dec
inc
fcmovnu
jbe
mov
ret
mov
cmpsb
jae
call
or
leave
fsubrl
mov
cli
lret
pop
call
lods
out
es
iretw
arpl
mov
mov
aad
fldt
pushf
sbb
mov
adc
outsl
dec
inc
cmp
pop
insb
adc
shrb
leave
das
sbb
mov
rcll
adcb
xor
cmp
test
and
out
push
or
dec
jne
clc
mov
rcll
stos
or
push
push
jnp
fcmovnu
adc
jmp
adc
inc
popf
es
cmp
test
rcrl
loopne
push
fnsave
shrb
xchg
out
mov
pop
leave
or
les
mov
push
loope
xchg
jle
addb
ljmp
jge
js
cmp
mov
mov
shll
mov
add
cmpsb
push
jnp
std
cmpsb
pop
dec
sub
sub
loope
cmp
add
add
repz
call
jecxz
pop
xchg
lds
dec
ret
cmpsl
shll
xlat
dec
sub
shll
mov
or
mov
cmp
sti
sbb
inc
mov
adc
imul
lcall
push
pop
add
into
je
scas
mov
pop
or
and
and
adcb
ret
paddsb
push
or
movsb
ret
mov
fadd
cmpsl
and
ja
xchg
sbb
sub
lods
pushf
into
mov
pop
push
js
fs
dec
mov
lods
aam
push
and
mov
push
jecxz
std
in
and
nop
pop
lret
mov
std
add
sbb
mov
add
inc
aad
popa
and
loop
loopne
insb
dec
dec
sbbl
call
sbb
and
push
jo
adcb
insb
into
fistpl
mov
mov
leave
fwait
add
add
inc
inc
sub
cmpl
add
in
lods
imul
neg
std
sub
dec
in
inc
popf
jl
insb
add
add
add
repz
vpunpckhwd
aas
shll
mov
push
aam
mov
cmpsb
pop
jp
sub
enter
jae
je
cmp
dec
call
xor
dec
negb
xchg
pusha
shll
pop
les
push
test
mov
push
daa
ret
sahf
imul
xor
lcall
cmp
fbld
inc
cmp
cli
mov
jnp
js
mov
lods
dec
push
pusha
cltd
sub
lahf
jl
daa
ret
pusha
add
sbb
aad
adc
mov
movsl
add
movsb
repz
cli
jnp
repz
sub
mov
ja
mov
repz
or
jae
fiaddl
inc
mov
xchg
cmc
fcmove
sub
loope
xor
outsb
cmpsb
data16
in
jg
mov
dec
and
out
pop
push
into
int3
push
subb
in
push
mov
xchg
sarl
pop
inc
insl
add
add
add
xlat
cli
pop
scas
mov
lds
mov
mov
je
inc
dec
inc
push
addb
and
fidivl
sub
or
mov
adc
adc
push
sti
mov
js
call
fisttpl
inc
mov
xchg
xor
jge,pn
movsl
add
mov
pop
movl
mov
int3
pop
stc
dec
movsl
push
out
idivb
xchg
cmp
aam
pop
sbb
sub
cmp
leave
adcb
jnp
vpmaxub
hlt
shlb
mov
cli
and
xchg
orl
das
sahf
jle
pop
sub
pop
adc
fidivrl
loope
or
mov
jne
cmpsl
or
popf
ret
test
cli
es
jno
push
stos
mulb
arpl
insl
sbb
mov
pop
mov
in
fwait
mov
inc
pusha
outsb
pop
mov
jmp
push
lcall
out
sbb
sti
jne
outsb
add
add
add
or
sbb
repz
mov
xor
mov
xchg
jmp
inc
pop
ja
xchg
jb
cli
std
ret
scas
xchg
gs
fcmovne
out
out
mov
jne
push
repnz
fidivrs
das
std
cltd
jnp
adc
testb
mov
push
icebp
outsl
mov
jecxz
sub
test
cmp
jl
fsubrs
sti
push
test
js
pop
out
lret
aad
xor
les
mov
jb
xor
jp
or
or
mov
into
jg
cmp
clc
sub
shlb
jl
cltd
xor
test
in
and
out
cmp
divl
xchg
or
push
mov
cmp
or
sbb
push
lcall
add
stos
icebp
in
scas
jbe
jecxz
jl
dec
or
mov
mov
scas
mov
pop
pop
movsl
mov
xchg
cli
lret
add
daa
sub
ja
mov
sub
add
add
adc
sbb
std
mov
mov
dec
and
adc
or
mov
das
adc
pop
ds
int3
xor
scas
out
shrb
lcall
outsb
add
inc
adc
inc
xchg
add
mov
or
or
xchg
shrb
rorl
popa
xchg
cli
inc
adc
jnp
ja
lcall
lods
clc
add
test
add
std
push
xor
push
pop
push
es
pop
fsubl
scas
cmpsl
jle
icebp
jmp
popa
dec
jge
and
arpl
movsb
dec
and
push
inc
pop
arpl
push
add
cmpb
and
cwtl
or
push
bound
mov
jmp
pop
es
aas
mov
popa
push
fcoml
mov
pop
out
mov
sbb
xor
fdiv
push
out
push
push
push
lahf
or
add
add
cmp
jnp
outsl
cmpsb
loopne
movsb
pop
xor
add
add
pop
mov
and
sbb
add
cmp
nop
and
ss
sbb
dec
pop
cli
push
daa
dec
cmp
orb
push
dec
or
inc
mov
sbb
push
push
into
push
adc
cmp
mov
jbe
sbb
push
mov
dec
aas
pop
std
out
bswap
mov
test
pop
cmp
mov
or
rclb
mov
inc
add
gs
adc
cmp
ljmp
inc
enter
mov
js
sub
jns
pusha
in
jge
cwtl
dec
je
ljmp
decb
push
into
push
shl
mov
sbb
test
xlat
icebp
les
push
sub
add
out
aas
mov
movsl
cld
or
gs
xor
pushf
mov
ss
repnz
or
jnp
cmp
movsb
fs
or
inc
cmp
scas
jb
push
add
fcoms
xchg
jle
cld
flds
add
add
cli
xchg
jle
push
je
pop
adc
push
jno
add
add
pop
or
xchg
xchg
jge
mul
sbb
lea
or
xchg
leave
dec
xchg
xchg
push
xchg
movsl
and
mov
pusha
hlt
cmp
push
inc
xchg
ljmp
inc
jae
out
lods
pop
lods
pop
and
lret
mov
fwait
xor
xlat
xchg
insl
andb
adc
das
daa
mov
mov
xchg
mov
movsl
push
push
cmp
adc
sub
in
xchg
cmc
jb
mov
ja
pop
ja
shrb
das
out
int3
push
scas
sub
jle
ja
sbb
xlat
frndint
ds
fdivs
jnp
out
int
push
xchg
inc
pop
lret
jbe
mov
out
outsl
addr16
daa
xchg
je,pt
xor
loope
popa
aas
adc
or
cmp
dec
cltd
and
cmp
sub
push
pop
fidivl
pop
lds
orl
test
mov
mov
pop
jmp
add
add
fwait
jnp
aad
sbb
sarb
jb
add
add
and
mov
push
cmpsb
dec
popa
in
enter
xor
insb
sbb
fs
or
sti
lock
pop
lea
aam
xchg
int
or
dec
mov
addl
push
sti
popf
mov
push
xor
div
dec
scas
or
adc
pop
das
cmc
cmpsl
jb
and
outsl
add
pop
cmp
stos
call
fwait
lock
adc
xchg
lret
cmp
dec
call
sbb
psubq
divl
and
mov
adc
xchg
xlat
fists
push
loop
fcompl
dec
pop
outsb
lods
je
jae
sub
mov
dec
sbb
mov
dec
push
call
out
add
add
pop
inc
jecxz
push
repz
mov
mov
lock
fmull
pop
fldt
pop
hlt
push
or
jae
mov
mov
movsb
lahf
cmp
cmp
add
add
std
mov
sub
loope
pop
jae
add
add
sbb
or
add
aas
xor
test
movsb
loope
mov
adc
orb
and
je
mov
jnp
lahf
pop
int
push
sarl
lods
and
xor
push
decl
cmpl
cltd
xchg
xor
mov
xor
mov
pop
fstl
scas
push
add
lods
pop
mov
adc
fsubs
and
adc
int
addr16
and
aaa
lahf
pop
inc
es
inc
enter
adcb
jg
jg
mov
aad
or
jae
push
xchg
mov
mov
push
ss
movsl
xchg
shll
addr16
push
pop
push
fwait
adc
cmp
adc
xchg
xchg
dec
in
mov
push
and
adc
xchg
repnz
popf
fsubrs
lock
fidivrl
add
add
fstl
lret
cmp
add
add
outsb
out
sahf
loope
aaa
out
cltd
mov
mov
std
adc
pop
lret
sub
mov
loope
cmpb
cmp
mov
inc
sub
sub
aad
shlb
ss
fsts
ja
push
jns
cmp
pop
jnp
sub
push
xor
xchg
or
gs
sub
pop
inc
mov
lahf
sbb
jmp
mov
mov
mov
fstps
pop
push
dec
inc
xchg
mov
xchg
jnp
inc
aad
mov
fldt
dec
sub
mov
or
jle
mov
sbb
xchg
into
enter
cwtl
jp
pop
dec
std
rorl
popf
mov
out
in
adc
jno
outsb
sarl
inc
cmpl
jae
mov
push
jge
fmull
jb
ret
daa
pop
popa
xchg
inc
rol
xor
lret
and
jo
shl
punpckhbw
jg
sbb
sbb
add
add
add
bound
sub
sbb
jne
add
add
mov
sbb
lods
jp
sbb
cld
mov
mov
mov
fsub
xor
xor
push
orl
xor
xchg
loop
push
incl
push
pop
leave
xor
mov
mov
imul
or
and
sub
and
ret
and
xchg
ja
inc
adc
push
inc
dec
adc
outsl
repz
xorb
sub
push
lret
stc
jnp
mov
mov
dec
pop
xchg
xchg
out
test
xor
mov
cmc
jno
lret
decl
jg
cltd
or
loope
inc
pop
jne
les
mov
popa
xor
xchg
enter
lcall
mov
test
ss
ljmp
pop
enter
mov
movsb
pop
cmp
shrb
pop
mov
out
notl
scas
and
sub
in
add
jns
divl
in
sub
fs
add
add
repz
jp
inc
push
fwait
mov
mov
sarb
push
testl
push
sbb
xchg
pusha
fsubrs
leave
loop
mov
mov
sub
or
xor
fiaddl
repz
mov
xchg
mov
inc
push
push
xchg
xor
stc
mov
fldenv
repz
cmpsb
pop
lcall
testl
or
arpl
out
lods
sbb
rcll
outsl
cmpsl
pop
sbb
and
in
test
lcall
mov
std
lea
sbbl
dec
setge
cmp
and
pop
sbb
sub
jp
sub
sahf
scas
and
std
sbb
mov
fs
sahf
xchg
les
or
adc
out
xchg
add
add
cli
jp
cmp
xchg
loop
dec
aam
jl,pn
and
pop
clc
fisubs
mov
mov
ficompl
add
add
jge
mov
fcompl
pusha
cltd
popa
movsb
cmpsl
leave
sub
cmp
dec
inc
xchg
or
dec
mov
mov
jle
xor
inc
in
and
dec
and
enter
jecxz
imul
dec
cmp
popa
cmpsl
dec
test
aad
push
dec
mov
sbb
icebp
push
lds
clc
pop
inc
cmp
cld
stos
xchg
cmp
mov
leave
mov
cmp
mov
cmpsb
shlb
xor
xor
js
xchg
jb
adc
mov
fistpl
mov
push
popf
inc
test
or
jns
jne
lods
pop
pop
mov
inc
fisubrs
sbb
mov
imul
push
inc
inc
xchg
out
dec
mov
in
dec
hlt
pop
sbb
cmp
jp
outsl
mov
pop
leave
inc
adc
mov
mov
sbb
mov
sub
stos
out
jg
shlb
mov
add
and
add
add
shlb
jl
cmpsb
sbb
mov
or
jle
jno
lret
filds
loope
dec
jp
aam
xor
jo
mov
add
mov
es
int3
adc
jns
jns
lcall
jbe
or
mov
jl
jecxz
cmp
push
inc
pop
push
leave
xchg
pop
testl
repz
mov
sub
sbb
add
xor
lret
repz
mov
jge
rol
jne
loop
xchg
enter
pop
scas
mov
adc
mov
das
and
jb
pop
xor
daa
add
jmp
pusha
lock
dec
add
mov
mov
xchg
loope
bound
negl
enter
hlt
sub
sti
adc
lret
sub
mov
add
add
dec
cli
je
jnp
inc
adc
movsl
call
imul
add
orb
ljmp
jl
fwait
dec
fiadds
add
add
pop
mov
in
xchg
popf
mov
push
in
jmp
jne
mov
jp
stos
xor
outsb
and
xlat
mov
cmp
add
cmp
fs
cltd
mov
out
inc
sbb
lret
add
cli
les
inc
xchg
xchg
adc
push
ret
mov
int
push
mov
dec
push
movsb
std
lret
jecxz
iret
lret
ss
jb
daa
adc
inc
xchg
inc
dec
cli
sbb
pop
xor
and
int
sbb
gs
lods
stc
movsb
xchg
inc
lret
cld
das
mov
test
std
xor
adc
ljmp
jmp
adc
xchg
test
sbb
rorl
dec
push
jno
jb
jns,pn
adcb
adc
lods
or
fwait
mov
daa
dec
mov
sub
loopne
lds
and
imul
adc
mov
mov
sbb
fwait
jp
pop
xor
jo
ja
std
stos
sbb
ljmp
add
add
add
push
addr16
stc
sbb
test
ja
scas
xchg
sbb
iret
mov
adc
push
mov
shrl
negl
dec
hlt
rcrl
rolb
cmpsb
jno
pop
and
jb
inc
push
pushf
ss
mov
adc
jmp
mov
mov
jg
xor
popa
movsb
jnp
cs
movlps
mov
sub
into
sbb
pop
arpl
xchg
imul
xchg
icebp
fsubrl
jbe
adc
mov
mov
jge
mov
sbb
adc
test
pop
addr16
push
lcall
out
sbb
inc
xor
faddl
pop
xor
dec
not
xchg
adc
jae
repnz
cmp
cmpsl
sub
hlt
mov
sub
cmp
imul
pop
fcoml
cmp
add
add
cmpsb
push
sbb
mov
add
add
hlt
and
cmc
adc
ret
jle
in
ss
push
movsl
in
rcr
mov
mov
ljmp
jbe
in
adc
fsub
sbb
mov
mov
ljmp
shll
rcll
mov
cmp
cmp
xor
daa
leave
inc
int
dec
sub
imul
ret
pushf
xchg
and
xorl
pop
inc
mov
ljmp
mov
pop
aam
cli
in
and
push
xchg
aas
shlb
leave
test
mov
pushf
aad
cwtl
enter
or
jns
or
fidivl
cmp
fstpl
dec
ret
das
jmp
pop
xchg
bnd
iret
jne
sub
das
mov
adc
das
sub
cld
fsubs
pop
sbb
sbb
jge
jle
push
dec
bound
fwait
inc
push
fiadds
pmulhw
pop
ja
iret
fiadds
adc
xor
cli
mov
stc
jle
mov
add
add
pop
xor
push
mov
push
repz
mov
ret
adcb
jb
out
daa
shr
lock
sbb
jmp
jp
jnp
call
xchg
xlat
xchg
sbb
inc
add
and
lock
jl
fstpl
insl
inc
and
cmp
mov
push
fsin
mov
inc
aad
hlt
fwait
sti
test
xchg
xlat
mov
loop
lods
stos
xor
ret
push
ja
xchg
sub
jne
xchg
xor
pushf
pop
mov
sbb
jnp
loopne
cmc
sub
push
cmp
or
es
jns
xchg
mov
lea
mov
mov
jg
int
in
xor
push
mov
jns
xchg
jmp
push
in
andl
cmp
movsb
add
repz
out
into
mov
jbe
adc
or
add
mov
inc
or
test
std
test
lcall
dec
ret
imul
addl
shll
sub
pop
and
add
ret
fwait
adc
sub
in
jo
mov
fistpll
in
pop
xchg
outsl
lods
imul
sub
pop
push
arpl
lea
std
scas
xchg
ljmp
jae
push
scas
ljmp
enter
daa
mov
add
push
mov
shr
add
jl
movsl
and
insl
cmc
xor
es
add
push
mov
orb
out
testb
aas
mul
aaa
aas
xchg
dec
sti
push
int3
xchg
sub
scas
insl
std
insl
and
pop
in
inc
daa
add
cmp
xchg
pop
in
inc
mov
nop
shrl
add
lret
fcmovne
jmp
mov
push
and
jmp
push
xchg
pop
jmp
sub
lcall
add
add
xchg
xchg
jns
jmp
mov
in
test
add
add
jnp
push
adc
mov
mov
xchg
nop
cmp
xor
jb
cmpsb
les
xchg
arpl
aam
pusha
and
xchg
adc
xor
incb
and
inc
mov
push
mov
leave
or
out
out
inc
push
push
sbb
push
ret
adc
push
inc
repz
add
fsubr
or
sbb
cmp
insb
repz
pop
lea
cmp
lods
mov
inc
jbe
pop
repnz
mov
or
cmp
in
adc
push
je
sub
pop
loope
aas
jb
lods
sarb
xchg
jmp
xor
mov
mov
out
cmpl
shlb
pop
rolb
clc
inc
lret
push
inc
dec
std
adc
push
sub
fdivl
outsb
ret
lds
push
adc
fwait
jecxz
les
lcall
leave
imul
mov
adc
dec
int
imul
scas
lcall
adc
sbb
fildl
push
pop
mov
add
add
call
shrb
sub
das
mov
xor
sbbb
out
hlt
cmc
inc
ja
lret
test
aam
cmp
pop
sbb
jbe
pop
in
jl
mov
inc
push
sbb
pop
out
fisubl
sarb
xor
leave
js
inc
fdiv
ja
adc
call
insb
adc
rcll
scas
mov
mov
int3
jae
test
dec
lcall
imul
push
sbb
mov
pop
nop
pop
fcomp
xor
push
sub
rorb
or
popa
push
sub
xlat
pop
cmpsl
pop
ss
jmp
mov
mov
fistpl
ficoml
lea
repnz
cld
inc
xchg
mov
ret
in
pop
xchg
cmpsl
mov
std
rclb
add
int
or
jmp
inc
push
stos
cli
pop
push
and
mov
addr16
cld
mov
jl
cs
idiv
jne
iret
adc
xor
add
xlat
push
or
xchg
xchg
stos
gs
push
or
and
loope
xor
sbb
loope
jl
pop
pushf
sbb
repz
dec
fnstcw
and
sub
and
xor
fcomp
sub
and
insb
jo
dec
cmp
mov
cs
loopne
test
sbb
cmc
cmp
mov
scas
movsb
mov
lea
dec
push
ficoms
xchg
mov
pop
pop
outsb
lret
jo
test
xor
lret
cs
rcrl
dec
outsl
in
xchg
mov
nop
push
testb
add
mov
pop
push
repnz
adc
push
leave
lret
insl
dec
repnz
adc
mov
inc
push
rcll
ja
cmpsb
icebp
or
pushf
pushf
add
cmp
sti
push
mov
push
jnp
int
test
and
in
xlat
inc
dec
and
or
insl
mov
xchg
in
in
enter
xor
and
xchg
pushl
sub
add
addl
add
mov
test
pusha
scas
push
mov
les
or
jmp
andb
cmpl
pop
insl
and
mov
fwait
pusha
mov
leave
push
adc
sub
cmp
scas
sub
xlat
lret
or
add
out
mov
popa
inc
xchg
rcr
pop
push
push
fadds
js
stos
push
hlt
jno
sub
enter
test
out
ds
push
gs
sti
push
sub
fs
cmp
jg
mov
testb
sbbl
jns
add
inc
shlb
das
mov
mov
push
lods
ret
ss
mov
mov
sti
lock
sbb
dec
out
fwait
bound
sbb
mov
filds
pop
lock
testb
ja
cmp
lahf
xchg
pushf
in
call
cmp
or
pop
not
jbe
into
mov
mov
jge
std
sti
iret
ss
push
jno
dec
pop
lret
add
add
add
xor
clc
repz
mov
sahf
andnps
repnz
jbe,pt
jp
fimuls
lea
addr16
lret
fldenv
cmp
sub
cs
mov
xchg
pop
jno
negl
cs
xchg
dec
push
repz
fnstcw
into
lds
mov
cmp
sti
push
aaa
and
lds
xlat
leave
mov
xor
loop
pop
cmp
and
mov
xchg
mov
cmp
das
and
in
lods
mov
pop
jb
insb
jecxz
inc
xchg
inc
js
xchg
mov
shlb
aad
fists
jae
sbb
push
loop
xchg
es
stos
add
sub
aaa
sub
pop
jnp
ja
mov
faddl
in
inc
add
hlt
xchg
adc
add
andl
inc
add
loopne
xchg
inc
lahf
sti
hlt
out
dec
roll
lock
cwtl
addl
add
add
cmp
test
stc
or
cs
je
dec
mov
out
rclb
xor
adc
popa
nop
adc
cs
jnp
data16
xchg
sbbl
xor
outsb
jge
add
addr16
into
stos
lret
cs
push
pop
fistps
xlat
push
shrb
push
xor
leave
pop
and
std
les
dec
out
mov
imul
psllw
xchg
fadds
fadds
sbb
imul
lcall
test
fs
clc
and
sahf
mov
and
pop
add
ret
outsb
adc
jne
aam
sbb
sbb
cmp
lret
into
push
mov
jp
insb
addb
outsb
pop
push
mov
sub
das
rclb
inc
xchg
sbb
dec
out
xchg
hlt
mov
aam
fisttpl
mov
mov
add
add
mov
mov
movsl
test
pushf
test
add
add
and
daa
cld
sbb
icebp
lea
mov
negb
and
pop
fs
lds
stos
repnz
fbstp
andb
inc
mov
cmp
xor
pop
push
jmp
mov
xchg
mov
mov
or
divl
lcall
neg
out
dec
aas
ss
xor
pusha
pop
stos
dec
lahf
repnz
push
mov
xchg
mov
movb
adc
lret
xchg
push
scas
xchg
ja
mov
xchg
enter
clc
loope
int
fisubl
inc
stos
xor
loopne
jl
xor
fcompl
scas
dec
ret
mov
sub
fs
mov
addr16
fcoms
sub
adc
movsl
mov
cwtl
push
ret
jp
int
push
les
ror
and
imul
mov
add
pop
test
ljmp
lock
xchg
sarb
mov
add
add
cltd
pop
stos
je
xchg
cmpsb
sbb
mov
sbb
dec
sti
push
enter
mov
add
cltd
push
or
mov
pop
js
fists
je
mov
jmp
mov
addr16
cmp
mov
in
cmp
aaa
cltd
loope
mov
in
push
jns
adc
sbb
mov
ss
andb
sbb
pop
mov
adc
mov
cltd
jnp
pop
in
cs
cmc
cmp
inc
ds
fistps
loopne
mov
test
or
add
inc
cmpsl
mov
mov
in
sbb
aad
mov
sahf
loop
pop
fnstenv
xor
lret
test
mov
clc
push
pop
fnstsw
and
subb
inc
std
add
mov
jecxz
stos
iret
ret
cmp
inc
sub
sbb
testb
imul
push
jnp
sbb
push
xor
xchg
add
add
out
outsb
cmp
pop
inc
js
push
ret
aam
xor
inc
jne
mov
mov
sbb
test
push
cmp
cmp
iret
and
push
lods
sub
xchg
or
adc
sarl
push
push
jl
loopne
pop
push
aam
subb
js
imul
pop
jae
mov
xor
arpl
in
bound
adc
popf
ss
dec
xorb
dec
les
cmpsl
push
je
inc
out
dec
mov
testl
lret
or
outsl
adc
inc
jae
push
divl
fmuls
adc
inc
pop
inc
int
sbb
jnp
jg
enter
cmc
lret
xchg
push
loopne
pop
addb
lcall
sub
push
adc
repnz
arpl
ret
pop
or
cmp
imul
jecxz
add
push
aas
or
mov
or
dec
mov
add
add
xchg
jge
jle
dec
inc
gs
daa
xchg
movsb
inc
stos
mov
cmp
pop
pop
hlt
popf
xchg
les
mov
sbb
sbbl
jns
push
arpl
xchg
sbb
ds
push
lea
xorb
hlt
pop
std
scas
sbb
fistpll
jp
addr16
or
rcrl
cmp
imul
sub
loopne
nop
addr16
in
mov
xchg
test
leave
sbb
mov
xor
jae
lret
popf
cmp
in
sub
mov
hlt
addb
ss
pop
sbb
sbb
fwait
jp
push
mov
adc
mov
es
push
adcb
repz
outsb
and
mov
lret
inc
fisubrl
test
mov
mov
pop
ljmp
into
test
movsl
scas
js
movb
loopne
mov
bound
mov
or
sbb
cli
imul
insb
fidivl
bound
mull
mov
add
add
sbb
movsb
cmpl
sar
cmp
cmp
add
pop
pop
lcall
repz
adc
push
cltd
xorl
cmp
jnp
lret
sub
sbb
call
jg
mov
dec
sub
aas
pop
push
xor
rcrb
inc
bound
adc
pop
push
loop
cwtl
scas
mov
js
lds
in
lret
in
or
lods
inc
and
dec
push
fsubrl
call
fstpt
dec
adc
jl
sub
pop
std
shll
inc
push
mov
jl
sti
pop
mov
cmpl
lret
pop
push
popa
xchg
and
loope
mov
xor
push
jae
into
fcompl
mov
cmp
inc
lds
xchg
push
pushf
cmp
xchg
inc
sbb
inc
loop
or
sbb
fisttpl
push
sahf
imul
cmp
mov
jns
mov
add
add
add
adc
mov
addb
dec
repnz
pop
mov
out
mov
pop
sub
sbb
into
in
aad
cmp
movsl
sub
push
and
imul
arpl
jns
cmpl
inc
repnz
dec
mov
push
or
sti
add
sbb
push
popf
insl
sbb
sub
cli
mov
int3
jecxz
xchg
push
sbb
gs
push
std
fs
int3
imul
mov
push
rorl
in
jge
insb
filds
or
ja
filds
jno
mov
add
data16
adc
outsb
cmp
mov
rcrl
insb
out
mov
data16
out
push
imul
popf
sbb
xchg
mov
js
dec
mov
inc
movsb
dec
popa
inc
scas
sbb
cmpsl
int3
roll
and
mov
add
add
int
fstp
iret
push
cmpsb
fadd
dec
lods
fistl
mov
add
add
add
push
push
pusha
or
mov
xchg
mov
cld
mov
xor
rcrb
mov
lret
xchg
mov
adc
mov
stos
test
shll
stc
test
das
or
repz
decl
pop
xorb
push
sar
pop
pushf
or
ss
inc
sar
cli
fwait
adc
jle
cmpsl
xor
js
xchg
mov
mov
ds
mov
std
negl
cs
les
sub
frstor
adc
and
test
or
dec
inc
jmp
xor
int3
xor
push
adc
popa
jns
fists
sbb
adc
das
inc
xchg
jae
dec
and
cmpsb
mov
lods
mov
jge
in
dec
shlb
inc
xchg
or
add
stos
push
aas
or
fistpll
cmp
mov
cld
jno
xor
ret
add
ficoms
lahf
and
scas
std
out
ljmp
mov
add
add
call
iret
sbb
adc
add
enter
loopne
adc
insl
leave
and
pushf
pop
fs
mov
repnz
sti
rcll
mov
xor
mov
mov
jo
mov
xchg
in
push
fistpll
arpl
lret
mov
mov
sbb
adc
pop
fdivp
movsb
adcb
bound
rcl
push
xor
or
test
mov
out
or
dec
add
mov
and
aad
xchg
push
mov
mov
mov
out
push
addr16
movsb
adc
hlt
cmp
rolb
inc
fistpll
lea
divl
sbb
push
mov
jns
jbe
mov
fldcw
loopne
mov
rorl
andnps
jge
clc
cmp
or
cmp
out
lods
les
jnp
mov
icebp
stos
cltd
xor
mov
add
add
jns
xchg
jmp
out
lret
popf
sub
lcall
xor
xor
mov
lock
fadd
or
mov
xchg
mov
or
add
cmp
mov
push
push
lahf
pop
adc
sbb
clc
dec
pop
ss
testl
popf
leave
mov
dec
in
lods
sbb
xor
lret
dec
adc
cmpsl
mov
rorb
fwait
out
sarb
or
xchg
inc
pop
xor
fnstenv
ljmp
xchg
out
stos
adc
mov
ret
mov
lods
rolb
jbe
dec
sub
pushl
addr16
mov
and
popa
shll
add
in
into
add
add
mov
cli
xor
stc
mov
sbb
pop
sub
mov
push
inc
or
test
fcomps
add
lcall
add
add
mov
lods
je
fcompl
mov
inc
addr16
mov
mov
cli
pop
daa
mov
insl
in
fs
ret
in
dec
fnstcw
scas
push
fisttpll
lcall
ljmp
loop
scas
cld
jmp
cltd
and
popf
testl
xchg
arpl
cld
pop
sbb
cmpsl
orb
test
fwait
enter
cs
bound
adc
dec
mov
adc
je
push
inc
adc
repz
rolb
cmpsb
cmp
sbb
scas
add
lods
mov
into
xchg
icebp
leave
xor
dec
int3
and
imull
jno
decl
xchg
les
leave
fmull
mov
or
dec
cs
jg
jns
sbb
sar
push
subb
adc
enter
lcall
pop
and
sub
lock
add
ljmp
dec
mov
cli
ljmp
add
xchg
pop
adc
aad
fucompp
nop
sub
leave
push
or
addr16
or
call
or
mov
push
enter
call
fcoms
mov
fisubrl
adc
call
push
sbb
or
in
mov
repnz
shrb
insb
push
add
movsl
lods
mov
mov
shr
xchg
pop
popf
adc
pop
int
nop
add
popa
lahf
inc
fadd
loope
pop
push
int
popa
fists
adc
fcmovnu
or
dec
mov
or
mov
push
lea
icebp
sbb
in
inc
pop
stos
cmc
fwait
aad
mov
fwait
icebp
adc
mov
and
test
imul
nop
or
pop
jns
mov
inc
and
cmp
fbstp
test
sub
cli
or
in
adc
faddl
fucomp
pusha
scas
rclb
pop
pop
and
dec
test
je
adc
stos
aaa
shlb
cmc
div
testl
jg
popl
add
add
test
push
push
in
cli
adc
lret
mov
repnz
in
xchg
test
cmp
adc
inc
push
loopne
movsl
cs
fwait
mov
fists
and
out
push
inc
outsb
outsl
loop
sti
and
dec
inc
aas
sub
mov
icebp
xlat
je
mov
or
nop
xor
jl
test
cmp
mov
shll
or
sub
pop
sub
mov
push
inc
imul
repnz
cmp
mov
add
dec
jmp
cmp
push
and
mov
push
sub
xchg
aas
or
out
xor
pop
mov
dec
mov
pop
test
les
mov
mov
test
push
dec
enter
cld
loop
lods
repnz
fsub
dec
orl
inc
lods
lods
leave
bound
loop
add
add
push
sahf
rcr
pop
adcb
arpl
int3
nop
add
add
add
fmuls
shrl
pop
out
push
mov
inc
aaa
lods
cltd
cmp
out
mov
dec
sub
std
mov
cmp
and
adc
push
int3
in
cmpsb
nop
xor
mov
xchg
lock
push
pop
push
dec
mov
pop
jae
mov
adc
xlat
jb
push
jno
pop
ficompl
iret
jne
in
add
xchg
cmpsl
ds
jbe
jmp
add
dec
jnp
mov
enter
xor
shrl
inc
pop
sbb
cli
xor
sbb
addl
mov
aas
cmp
xor
insl
mov
or
jno
cmovb
and
lret
dec
xchg
cs
jns
pop
adc
fcmove
push
enter
fsubr
js
notl
mov
sbb
fistl
jmp
sub
cltd
mov
inc
xchg
hlt
push
in
jnp
aas
pop
mov
mov
shll
cmpsb
jcxz
fimull
rclb
add
daa
sub
xor
inc
nop
and
jb
xchg
cmp
mov
dec
sbb
popa
pop
stc
scas
pop
xchg
pusha
adc
mov
loopne
push
sbb
dec
mov
cld
fdiv
ret
mov
leave
inc
sbb
fwait
and
mov
sub
dec
iret
cwtl
xor
popf
mov
scas
js
out
bnd
inc
and
sbb
mov
adc
inc
je
cmpsl
cs
addr16
cmp
push
lcall
fwait
sub
mov
out
popf
jo
mov
lret
cs
sbb
push
xchg
dec
cld
pop
mov
filds
mov
stos
xlat
outsb
jne
xchg
pop
dec
jb
not
les
jnp
ficoms
xorl
imul
int3
and
lods
jnp
sub
das
dec
dec
push
lods
xchg
dec
pop
jns
into
daa
jbe
in
loop
scas
mov
clc
and
subl
movsl
pusha
pop
clc
jnp
jg
in
cli
enter
mov
add
add
add
pop
shrl
imul
push
test
icebp
jle
rcrl
scas
lods
clc
ljmp
sbb
pop
lods
lahf
or
and
jmp
mov
pop
or
repz
mov
dec
jmp
insl
sbb
jnp
pop
movsl
outsb
xchg
mov
mov
addb
jmp
inc
dec
adc
or
cmpsb
test
jmp
push
in
fs
scas
mov
push
inc
rcrb
or
bswap
loope
pop
imul
adc
jmp
sub
jo
aad
mov
jae
add
imul
or
xchg
or
adc
stos
adc
sub
mov
js
dec
pop
xchg
leave
or
fisubs
inc
jecxz
ljmp
pop
in
add
lods
cmp
lcall
xor
outsl
cmc
lret
out
leave
rorl
add
add
lods
faddl
fbstp
cld
gs
mov
fcoms
add
stc
jmp
adc
ja
mov
and
js
jo
aam
sub
je
int
out
jecxz
addr16
pop
insb
test
cwtl
in
xchg
out
aad
mov
cmp
pop
sti
out
inc
das
in
rorl
sub
pop
shl
movsb
adc
sbb
out
or
xor
imul
add
mov
push
imul
push
xchg
xchg
fdivr
sahf
popa
arpl
pusha
bound
jae
add
pop
cmp
pop
adc
call
dec
fisttps
dec
cmp
or
mov
xchg
shrb
push
and
mov
repz
insl
lea
mov
jge
sub
or
popf
jne
mov
mov
fwait
testb
jl
sti
xchg
in
mov
jo
rdpmc
cld
pop
ret
sahf
mov
xchg
mov
lods
lcall
push
push
insl
mov
roll
add
add
jl
sar
std
jle
pop
popf
scas
stc
mul
pop
fcoml
add
aas
mov
push
xor
mov
jmp
call
and
pop
inc
jne
and
push
push
popa
sbb
adc
sarl
mov
mov
subl
xchg
mov
and
jmp
jnp
scas
push
mov
fsubr
stos
and
lea
hlt
xchg
stc
mov
mov
je
fstpt
and
pushf
pop
adc
push
daa
mov
lock
inc
push
add
fistpl
or
dec
icebp
or
outsl
sbb
mov
xchg
add
xchg
mov
and
cltd
clc
addl
clc
jae
mov
pop
jae
es
pop
add
fcoms
pop
mov
test
jmp
sub
lock
and
pop
inc
scas
rorl
push
add
stc
fmull
pop
or
sbb
popf
push
pop
imul
js
add
add
cwtl
or
stos
xchg
cmp
in
inc
push
jge
loopne
add
add
add
or
xchg
aam
aad
pop
pop
mov
leave
adc
repnz
fbld
mov
xchg
mov
addl
add
enter
jle
inc
mov
dec
imulb
pop
mov
test
cmp
dec
sub
inc
roll
push
cmp
add
dec
pushf
adc
mov
out
and
aas
stos
jo
and
arpl
xchg
cld
mov
pop
rcll
js
mov
ror
xchg
xchg
and
inc
push
sbb
dec
jl
xor
loope
add
sub
daa
mov
pushf
bound
into
cmc
add
lret
insb
sbb
adc
or
into
jns
push
orb
mov
dec
adc
xchg
jg
add
insl
xorl
mov
jae
push
mov
mov
mov
jo
mov
adc
pop
lcall
cmp
jns
add
popf
adc
repnz
mov
das
ljmp
add
fwait
and
popa
mov
xorl
in
add
add
add
mov
adc
inc
call
xchg
mov
mov
das
insb
lods
inc
and
jmp
out
push
aaa
xlat
je
fwait
mov
hlt
out
cmp
jbe
dec
pop
fdivs
cs
push
sbb
arpl
or
adc
hlt
pusha
cmp
mov
pop
add
xchg
pop
mov
or
pop
inc
mov
fwait
or
sub
sub
push
inc
out
mov
mov
lret
mov
gs
pusha
pop
cltd
xor
and
lods
daa
loop
dec
mov
repnz
lods
cmp
sahf
mov
lahf
push
ret
jno
stos
enter
fsubrl
mov
push
pop
and
add
add
stos
int
jg
mov
aaa
and
push
sub
xor
pop
pop
pop
mov
dec
cs
jg
jp
cmp
lods
push
and
xlat
aas
dec
sbb
or
call
add
add
ja
aam
or
movb
test
or
xchg
sbb
and
js
dec
lods
push
xchg
xchg
dec
adc
in
das
bound
dec
test
cmp
mov
mov
scas
pop
inc
xchg
or
lods
cld
into
lcall
and
xorl
mov
jno
mov
mov
pop
xchg
popl
mov
jne
mov
push
fnstsw
pushf
cmpsl
adc
nop
out
shl
divl
inc
pusha
mov
push
aaa
push
shll
dec
xor
sub
std
out
xchg
pop
rclb
xor
xor
mov
pop
add
pop
jl
dec
adc
and
jne
inc
jmp
add
cmp
push
lods
mov
fwait
dec
in
add
jmp
cwtl
ss
imul
outsl
vmwrite
jne
cwtl
add
add
add
out
xor
popa
or
push
cmc
pop
xchg
push
daa
leave
xor
push
and
sub
jbe
aas
dec
addb
call
pop
mov
cmpsl
ss
dec
lret
pop
xchg
cmpsb
popa
add
in
mov
push
pusha
sbb
ljmp
aad
xor
test
mov
inc
mov
add
pop
outsb
ret
cmp
movsb
push
lds
jp
imul
cmp
out
data16
fstpl
dec
outsl
sub
lods
mov
lods
and
inc
xchg
stc
out
push
mov
cmp
ret
xor
dec
jmp
pop
pop
mov
xor
inc
add
mov
ror
pop
stos
mov
pop
js
enter
jae
xchg
fdivs
ds
sub
add
in
sbb
stc
sbb
testl
xchg
faddl
add
add
lret
sbbl
popl
add
lock
add
add
add
pop
lods
and
push
push
into
ret
mov
testb
mov
jge
pop
xchg
cmp
mov
inc
pop
cmp
popa
push
bound
stos
cli
jbe
sub
and
add
ja
sahf
and
ss
out
add
aad
cmp
xchg
les
aas
pop
mov
call
mov
dec
add
mov
into
jno
add
repnz
stos
dec
hlt
inc
in
lcall
imul
je
ds
into
insb
push
pop
or
sti
xorb
mov
mov
dec
mov
jae
xchg
enter
into
sbb
mov
push
leave
cld
and
test
rclw
jnp
xor
push
addr16
adc
push
xchg
icebp
fiadds
inc
push
cmpsb
sbb
sarl
xor
addr16
sbb
add
add
imul
movsb
and
hlt
test
add
add
inc
inc
outsb
test
mov
repz
ror
and
ret
cmp
inc
fstps
mov
add
add
pop
icebp
int
push
int3
xchg
sub
push
cmp
int
pop
pop
adc
loope
push
mov
pop
lds
mov
mov
test
push
sub
add
or
rorl
ds
aam
mov
fnstcw
cs
stos
lahf
jnp
xchg
add
call
push
aaa
ds
in
xor
out
test
orb
out
stos
add
in
adc
les
and
stc
xlat
test
push
or
sub
dec
dec
aas
inc
loopne
mov
stos
sbb
in
lahf
or
xchg
push
push
mov
mov
mov
fdivs
in
and
xor
out
xor
lahf
and
imul
outsb
jae
and
aaa
sbb
aas
sti
sub
dec
push
add
add
mov
sub
lahf
mov
mov
add
add
add
cmp
addl
push
in
or
scas
fwait
jp
cmp
cmp
push
sti
dec
lahf
push
push
ret
loop
or
jp
fnstenv
int
fcomip
repnz
idivb
aad
cmovae
or
xor
das
stc
or
or
mov
adc
aad
push
mov
js
and
push
push
jmp
push
fdivs
sbb
loopne
stos
ja
decl
sub
cmp
jns
stc
sbb
in
in
mov
outsl
jge
xchg
add
mov
cmp
dec
les
xor
in
sbb
hlt
sub
mov
dec
dec
call
decb
mov
or
jne
xchg
pop
push
je
pusha
and
sbb
adc
sbb
cmp
repnz
and
pop
jns
adc
sub
push
jo
cmp
scas
jmp
imul
add
cltd
sub
out
inc
sub
or
out
cld
pushf
add
add
add
arpl
ja
les
pushf
push
xchg
stos
decb
and
popf
lods
or
into
loopne
fsubl
rcr
push
int
test
adc
add
mov
lods
mov
jnp
inc
inc
ds
inc
fwait
lahf
or
add
push
ljmp
mov
dec
cmp
mov
inc
pop
mov
inc
ljmp
inc
repnz
loopne
in
add
and
mov
cwtl
shlb
aas
and
arpl
mov
orb
add
stos
mov
mov
jl
and
jae
sbb
add
mov
mov
mov
fstp
in
cwtl
xor
cmpsb
xchg
dec
out
outsl
iret
ss
cmp
or
and
insl
push
das
lret
dec
mov
nop
jo
das
add
sbb
jle
mov
ss
cli
loop
test
mov
cld
mov
add
add
leave
lahf
pop
inc
jns
sub
xchg
subl
ljmp
mov
jg
cmp
loopne
cmp
xchg
lret
pop
cmp
in
lods
fistps
int
aad
int3
sub
and
add
scas
aam
mov
rcrl
and
and
and
pop
add
jne
push
fstp
lret
and
pop
xor
and
pushf
xlat
or
inc
rcll
iret
stos
aaa
inc
cmpsl
sub
and
jbe
sbb
ffreep
mov
cmpsb
add
jmp
sbbb
scas
jge
notb
subb
adc
xor
ret
sti
mov
xchg
pop
jno
mov
ficoml
xor
fisttpl
cmp
out
jns
enter
jl
jmp
adc
adc
or
xchg
sbb
inc
and
dec
lods
inc
bound
push
add
mov
repz
repz
mov
fadds
add
add
add
cs
sbb
and
cmp
ss
out
pushf
push
mov
push
mov
loopne
jne
lcall
sub
mov
xchg
mov
push
aaa
fdiv
lods
add
sub
xor
ljmp
inc
popa
fs
es
ljmp
sub
stc
mov
mov
push
cmp
out
dec
insb
inc
mov
pop
iret
mov
cmp
mov
ljmp
lret
test
outsl
jo
xchg
popa
xchg
sub
jmp
popf
mov
mov
xorb
es
rolb
hlt
icebp
lds
mov
mov
dec
je
ss
repz
and
je
scas
test
ds
pop
rcrb
scas
mov
and
mov
fstpl
popf
pop
in
push
mov
push
xchg
mov
dec
mov
cltd
sub
sbb
lods
jns
cmp
insl
dec
or
inc
jbe
and
mov
jo
sahf
ret
add
add
mov
inc
inc
add
mov
add
add
movsb
dec
fwait
bound
out
or
leavew
xchg
clc
xchg
mov
pop
rol
repz
ret
pushf
scas
outsl
adc
pop
mov
movsl
aaa
xchg
jg
mov
lods
jl
push
je
dec
or
je
nop
sub
loopne
les
mov
inc
repz
push
inc
out
jno
pop
jo
mov
xchg
adc
inc
push
fldt
mov
adc
xor
out
dec
pop
push
ds
dec
mov
icebp
jb
out
xor
subb
sub
push
inc
mov
shll
dec
cwtl
xor
mov
imul
xchg
andb
jp
mov
into
push
xchg
lods
adc
mov
jg
es
fdivs
popa
out
sbb
jp
cs
pop
cld
icebp
testl
lcall
dec
and
lahf
icebp
out
and
cmp
or
sbb
inc
mov
pop
xor
mov
add
and
jnp
mov
push
iret
fdivs
shlb
repnz
sbb
lods
fcompl
adc
js
rcrb
add
push
movsb
lret
shll
cs
out
sub
xchg
repnz
cmp
mov
leave
dec
cld
cmp
mov
xchg
outsb
es
mov
out
fs
push
and
ja
popa
scas
jge
and
je
push
or
sbb
xchg
adc
aam
dec
out
mov
sub
aaa
in
shr
ljmp
or
pop
jno
xchg
adc
xor
aas
nop
dec
je
dec
sti
sub
in
lock
or
mov
xor
cwtl
in
inc
sbb
jg
jns
sbb
mov
std
xor
xchg
loop
out
out
xchg
ds
or
mov
data16
in
imul
add
add
inc
fdivl
push
dec
mov
adc
add
jle
push
adc
outsl
mov
clc
stos
lock
xchg
lret
cmp
sbb
inc
adc
aas
scas
mov
mov
pop
sbb
dec
lahf
insl
scas
mov
cltd
sbb
mov
in
xchg
cwtl
push
nop
jo
flds
mov
inc
movsl
add
mov
sub
notl
scas
cmpsl
sub
adc
insl
psubd
sbb
sbb
jnp
and
sbb
negl
or
fistl
stos
ficoml
test
adc
cmpsb
and
adc
pop
mov
xchg
mov
adc
or
scas
add
add
ja
shrl
aam
sti
mov
pop
jb
incb
xchg
sub
aad
and
xchg
push
inc
lock
add
adc
repz
xchg
dec
push
sbb
enter
cmc
inc
fisubrs
xor
sbb
inc
stos
aad
adc
mov
sbb
mov
add
repnz
in
aaa
cwtl
dec
xor
and
adcl
outsb
sub
nop
inc
aad
lahf
fst
icebp
sbb
rclb
enter
mov
out
ret
jle
inc
pop
xor
dec
cmp
sar
sub
inc
loopne
adc
rcll
inc
xchg
mov
les
jge
dec
add
dec
lahf
fimull
ds
xchg
mov
test
mov
mov
adc
fldenv
sub
sub
xor
jge
insb
jecxz
shrl
loop,pt
xchg
shll
out
jecxz
jb
dec
jno
adc
and
out
cld
mov
add
cmp
jmp
bound
in
iret
dec
and
jp
add
mov
sbb
gs
jle
inc
cmp
push
mov
fiaddl
push
aaa
mov
rorl
insb
nop
cmc
lds
mov
xchg
xor
hlt
xor
pop
test
stos
hlt
jmp
cmp
jbe
sbb
sahf
outsb
sbb
add
cmpsb
mov
ret
dec
hlt
sarl
pop
adc
cmpsb
xchg
xor
xchg
inc
repnz
gs
sub
mov
ret
cmp
mov
cli
mov
andb
test
stc
pop
jb
cwtl
mov
push
lock
lahf
push
fs
jo
sub
test
test
iret
pop
cwtl
sbb
cmpsl
add
arpl
pop
addr16
inc
jle
cmp
adc
xchg
fldenv
pop
mov
add
pop
xchg
cmc
push
adc
enter
fdivs
int
scas
xchg
mov
pop
mov
mov
aad
push
sbbl
cmp
adc
cs
movsb
push
imul
sarb
inc
inc
mov
fidivrl
dec
jno
lret
xor
mov
enter
push
mov
jno
insl
iretw
xchg
cs
loopne
std
jb
mov
lret
andl
leave
jg
ja
stos
sbb
call
add
add
out
xlat
out
jg
in
xor
fstps
movsl
add
add
add
mov
jecxz
dec
adc
fisubrl
pop
add
jno
std
repnz
xchg
aaa
jl
repz
test
inc
scas
xor
xor
rolb
in
repnz
jmp
rol
sub
inc
xchg
popa
pop
repnz
xor
cmp
xorl
mov
ret
es
pop
mov
fcoms
ljmp
pop
mulb
shll
cmp
jle
adc
push
pop
hlt
cmp
jecxz
inc
jo
popa
shrl
inc
rorl
cmpsl
push
xlat
jge
xchg
inc
enter
or
mov
pop
sub
jne
aam
dec
pop
aam
rclb
into
mov
nop
sub
jae
out
daa
leave
jns
or
lods
xlat
cmp
xor
or
rcl
loop
sbb
xchg
sbbb
sbb
inc
out
and
sbb
nop
ret
ja
pop
pop
sub
shr
ffree
pop
sub
gs
fcmove
iret
or
aas
dec
rcl
sbb
pop
fbstp
fldl2e
lret
pop
xor
add
add
fdivrs
pop
addl
cli
into
xchg
xor
jns
jnp
inc
mov
inc
pop
jle
mov
push
inc
mov
sub
subl
cmp
insb
push
adc
jge
mov
aad
adc
pop
adc
dec
popf
push
and
and
mov
adc
int
or
roll
jne
add
out
clc
xchg
sub
popa
pop
stos
adc
sub
sub
daa
cmp
cmc
mov
and
dec
lret
aas
scas
cmpsb
loop
sub
fimull
imul
hlt
insb
loopne
xchg
lock
lock
dec
pop
leave
mov
repz
add
mov
ret
sti
les
scas
es
dec
inc
push
push
fiadds
add
fdivr
xchg
push
cmp
push
cmpb
xchg
in
into
push
add
jbe
sti
es
in
inc
push
jns
test
call
xor
flds
add
add
mov
fadds
and
add
add
add
sbb
in
int
pop
aam
mov
cli
outsl
adc
sub
mov
sbb
shr
inc
por
add
mov
mov
push
ds
rolb
js
lret
rcll
jmp
lea
andl
je
cmpsb
mov
outsl
pop
mov
adc
xor
cmp
insb
addps
pushf
push
sbb
fsubrs
inc
pushf
addr16
adc
loopne
jnp
push
pop
jp
cmpsl
in
scas
xchg
xor
adc
jno
enter
in
xchg
mov
scas
out
cmc
adc
cs
sahf
cmp
pop
ret
sub
stc
dec
dec
pushf
xor
aaa
jecxz
fdiv
dec
nop
mov
sbb
pop
dec
jmp
cmpl
fs
loop
mov
movsb
int
ss
sub
xchg
ja
xchg
sub
dec
bnd
push
fdiv
call
or
mov
mov
mov
xchg
lret
jnp
sti
jmp
push
mov
imulb
test
add
add
push
loop
dec
out
movsl
popa
dec
insb
jge
ljmp
inc
sub
rolb
push
insl
mov
out
jle
inc
xor
sbb
lahf
mov
or
xor
xchg
sarl
lret
das
fnstenv
inc
jg
mov
xor
and
mov
xchg
int
mov
outsb
scas
repz
sub
orl
subb
test
add
lods
or
dec
mov
push
jp
popl
sbb
leave
testb
dec
dec
cmpsb
adc
mov
jo
adc
jmp
push
movsl
subb
pop
fdivrs
mov
movsl
dec
pop
or
cmp
mov
scas
push
push
pusha
sub
jne
lds
or
rcr
add
sbb
lea
enter
xchg
jb
cwtl
inc
and
jmp
lahf
fld1
cmp
xchg
push
inc
mov
test
lahf
mov
das
mov
mov
mov
mov
jecxz
lock
jns
sub
add
add
add
int
cmp
mov
cmp
or
push
mov
test
cmpsl
xlat
cltd
jns
push
cli
test
push
sub
andl
push
sti
sahf
and
pop
cmp
mov
std
or
sub
iret
out
xor
stos
and
sbb
repnz
sbbl
xor
or
scas
lret
inc
mov
iret
mov
adc
imul
mov
mov
mov
pop
jecxz
cmp
test
mov
xorb
pop
insl
mov
inc
js
insl
lock
or
es
mov
repz
adc
outsl
lahf
xor
push
mov
loop
xor
xchg
ret
cltd
mov
mov
push
in
jmp
insl
ror
xor
enter
mov
subb
or
pop
js
into
loop
scas
mov
cld
mov
leave
shlb
lret
aad
stos
add
add
add
adc
mov
pop
mov
movsl
popa
call
jno
adc
or
sub
or
dec
lods
inc
dec
xor
jae
icebp
adc
and
sbb
jae
sub
enter
adc
mov
add
push
outsl
jno
outsl
push
xchg
les
sarl
scas
out
jbe
dec
dec
mov
mov
pop
loop
xchg
lahf
and
mul
divl
das
push
inc
addb
mov
repz
lods
sahf
adc
dec
iret
and
dec
or
xor
and
ret
notl
lods
test
mov
ror
jle
adc
dec
out
test
xlat
test
dec
cmp
pop
mov
cmp
div
rcll
mov
push
jno
sti
jecxz
or
mov
push
mov
xchg
dec
pop
or
dec
cmc
shrb
loope
inc
popf
jle
bswap
or
mov
dec
das
pop
out
cmc
mov
lcall
add
add
fdivl
inc
ja
ret
ds
push
ret
sahf
fistpl
or
jne
gs
ror
bound
repz
cld
test
orl
push
les
outsl
rorl
jo
mov
push
dec
push
les
jnp
imul
mov
mov
fldt
dec
bnd
sbb
push
lcall
aaa
lcall
aam
mov
dec
and
push
enter
int
ret
out
cmc
mov
sbb
std
dec
jne
test
mov
daa
hlt
pop
xchg
imul
xchg
xchg
cmc
lock
inc
xor
loope
jmp
xor
pop
inc
adc
lea
pop
adc
pop
add
dec
sub
adc
test
xchg
mov
nop
adc
and
scas
int3
cmp
scas
movsl
cwtl
data16
clc
sbb
or
mov
jno
fwait
cmp
fucomip
std
dec
std
pop
lcall
xchg
pop
push
lock
mulb
cmp
add
jmp
mov
xor
mov
xchg
sbb
sbb
jecxz
ficompl
popf
test
ja
lock
mov
cmp
std
adcb
and
and
nop
sub
dec
leave
cmp
fiadds
xchg
mov
stos
cmp
pop
push
cmp
push
dec
or
jns
inc
arpl
sub
and
lea
jb
inc
cli
mov
imul
adc
addl
call
xchg
stos
and
loopne
setl
mov
xchg
mov
adc
sub
ficoms
stos
repnz
dec
mov
push
loopne
sbb
push
loopne
jb
mov
scas
pop
shll
aam
mov
cmp
mov
lcall
out
cmp
mov
out
rorl
mov
dec
lds
scas
out
add
dec
je
lret
sbbl
mov
add
add
fidivs
loop
ljmp
scas
mov
add
add
add
pop
lea
sub
sub
pop
andb
out
mov
loope
dec
hlt
mov
xchg
in
cmp
mov
loope
std
call
pusha
push
cmc
test
or
ljmp
or
and
push
jnp
aad
jne
aam
or
scas
ljmp
repnz
ret
mov
outsl
or
xor
cmp
cltd
int3
pop
and
sub
jnp
insb
ret
xor
xchg
jbe
mov
js
fists
cmp
xchg
mov
inc
das
or
xchg
cmc
ficomps
inc
pop
int
sahf
das
sub
aam
sub
out
xor
xchg
xchg
mov
pop
mov
test
push
sbb
lods
mov
outsl
cwtl
lods
not
mov
in
leave
ret
add
pop
dec
xor
push
jmp
inc
iretw
aas
mov
divl
sbb
clc
outsl
mov
push
xchg
jg
jmp
std
mov
add
scas
add
add
add
sbb
pop
add
mov
mov
sbb
popa
and
cmp
dec
jmp
fcmovnb
arpl
fmuls
pusha
mov
pop
jg
push
xor
push
das
imul
lock
sbb
inc
insb
jecxz
call
xchg
inc
pop
ja
imul
xchg
repnz
add
add
jmp
aam
loope
lock
and
sbb
push
push
dec
add
jb
dec
stos
add
shrb
jbe
jo
out
dec
jge
ficoml
lds
das
mov
sarb
push
adc
mov
jno
addl
shrb
dec
arpl
cmp
mov
pop
ja
adc
int3
loope
lods
mov
pop
jle
leave
std
cmp
xchg
mov
xor
hlt
jbe
cmp
xchg
mov
insl
dec
sbb
sbb
push
divb
inc
mov
xor
add
add
inc
testl
ret
push
sbb
add
loop
cli
sarl
out
jp
fcompl
fcompl
js
sub
je
sbb
lea
stos
rclb
cmp
fimull
aad
call
sbb
inc
fiaddl
inc
add
das
push
mov
rcr
push
pop
cld
or
in
add
leave
mov
fs
and
inc
xchg
insl
mov
bts
lret
jo
jo
aam
mov
xchg
pcmpgtw
sub
add
mov
xchg
pop
leave
js
dec
divb
cli
lcall
jb
mov
jo
pop
inc
outsl
xlat
stc
or
jns
pop
mov
xchg
imul
pop
mov
cmp
out
mov
int3
dec
or
inc
jl
inc
movsl
int
int3
nop
xchg
gs
fmulp
shlb
mov
xchg
fidivs
sub
xchg
dec
mov
mov
push
pop
xor
cmp
inc
call
mov
add
add
add
pop
push
loopne
lahf
and
push
jo
rcrb
or
sbb
xor
bound
aas
sti
pop
pusha
mov
push
inc
sarb
dec
pop
loop
pop
scas
add
jns
cmpsb
inc
mov
ror
aad
cmpsl
dec
mov
sti
repnz
sti
clc
test
call
jnp
push
int3
ljmp
cmpsb
ja
fistps
ret
jb
fcoms
fsubrs
sub
adc
xchg
mov
xor
sub
sub
mov
test
sbb
mov
and
cwtl
cmp
mov
mov
sub
jp
cld
cmp
and
fcomps
call
add
ficoms
cmpsl
loope
jbe
pop
mov
sbb
cmpsb
sbb
call
mov
pop
sub
xchg
mov
push
out
les
and
mov
stc
push
adc
xchg
and
add
add
jp
les
mov
arpl
push
jns
mov
add
add
mov
movsb
adc
jmp
in
sbb
push
jo
mov
or
sub
cmp
sbb
and
lcall
sbb
jns
xchg
arpl
loop
mov
cmp
xchg
pushf
test
lret
xorl
je
push
mov
out
lea
popf
leave
sub
xor
jno
in
into
mov
pop
mov
int3
and
xor
std
pop
das
mov
ret
mov
jle
leave
fs
lock
loopne
test
scas
loope
pop
cmp
js
adc
pop
add
push
xor
int
inc
push
aam
cmp
sahf
jbe
push
dec
sub
lcall
shrl
fs
xchg
xor
gs
jb
or
ret
push
out
rcrb
das
mov
mov
xchg
rcl
in
xor
dec
popa
stc
or
jns
jmp
int3
dec
in
into
cmp
js
add
add
clc
pop
stc
out
push
pop
bound
push
push
mov
add
add
cli
xchg
and
inc
in
xchg
inc
test
ja
aam
xchg
and
mov
mov
sub
mov
sbb
inc
int3
divb
jl,pn
in
sbb
xchg
insl
mov
nop
push
call
mov
sti
sub
inc
movl
mov
dec
pop
data16
or
cmp
repz
pop
and
add
fcompl
jg
shrb
outsb
insl
mov
push
inc
pop
cmpl
nop
fsubs
orl
dec
fists
mov
les
jge
call
xor
decl
lret
inc
jne
and
cli
lret
xchg
aam
lret
fcomps
sar
mov
dec
sti
push
idiv
jmp
push
shl
xchg
arpl
std
fildll
mov
test
insl
lret
jns
mov
mov
in
movsb
jmp
mov
add
add
lds
cli
lcall
push
push
mov
add
add
inc
lcall
and
mov
mov
scas
dec
pop
add
jle
pop
enter
icebp
xlat
and
outsl
xor
lret
sub
push
popa
cmp
movsb
push
shl
shrl
ret
pop
jbe
in
ret
js
gs
and
cli
xchg
ror
jge
lock
push
mov
mov
rol
and
ficompl
push
gs
in
imul
nop
mov
div
push
sarl
pop
fdivl
xchg
mov
inc
cli
mov
mov
inc
js
test
aad
or
and
pop
dec
jl
fadd
out
lahf
pop
cltd
ror
push
lods
nop
mov
cmp
inc
test
pop
cwtl
rorb
fistl
mov
fcmovne
jnp
and
cmp
gs
fistpll
outsl
loop
imul
xor
inc
push
jge
insl
ljmp
mov
add
xorl
insb
lret
idivb
mov
add
add
orb
xlat
mov
call
jge
adc
fistpl
xlat
mov
fwait
sub
sbb
js
notb
cmp
out
loope
inc
dec
mov
fsubrp
add
lods
xchg
jbe
iret
test
in
std
out
nop
movsl
add
adc
in
cmc
dec
ds
in
lock
rclb
sahf
jge
adc
pushf
fcomp
call
mov
inc
add
xor
push
mov
sti
aad
sub
xchg
or
mov
stos
scas
dec
jmp
je
or
xchg
call
sub
ljmp
ret
jmp
xor
adc
xchg
mov
mov
mov
jo
shlb
xchg
out
add
inc
outsl
mov
inc
inc
divl
nop
mov
dec
pop
into
sub
imul
jl
js
or
data16
jne
cwtl
pop
sub
add
add
pop
sbbl
fstp
rorl
ljmp
add
add
packuswb
pop
loopne
lods
adc
rorl
sub
addr16
cld
pop
pop
je
pop
pop
imul
lock
in
dec
sub
adc
push
pop
cld
mov
cmp
sub
leave
stos
push
sub
dec
inc
int3
add
int
cld
cmp
inc
ja
data16
push
repz
sub
or
nop
lahf
sbb
lcall
jmp
sarl
in
mov
aad
movsl
cltd
add
je
es
orb
cld
arpl
sbb
dec
xor
push
fstl
cltd
adc
cmp
repz
into
mov
add
enter
mov
bound
lods
mov
ljmp
push
sti
add
cli
dec
dec
pop
scas
pushf
and
xor
ljmp
jns
dec
es
pop
cmp
insb
push
mov
insb
addl
call
dec
push
loope
mov
jecxz
out
mov
fyl2xp1
mov
add
add
add
cmpsb
loop
sbb
and
pushf
lret
xchg
sbbb
fstps
push
lods
push
test
fldcw
aad
in
lock
mov
aam
out
int
push
add
jl
js
xchg
nop
in
sbb
push
fs
xchg
aaa
jae
mov
out
frstor
mov
sub
sub
mov
sbb
int
push
hlt
jns
adc
call
rcrb
cmp
jne
ss
xchg
inc
cmp
iret
leave
insl
adc
stc
js
jmp
out
in
imul
out
push
movsb
pop
adc
cltd
jbe
repz
sbb
pop
js
or
lock
orl
jmp
push
or
sbb
xchg
leave
sbb
pop
jp
sbb
mov
lahf
or
push
sti
div
lret
and
push
stos
dec
imul
add
push
xchg
test
jg
into
lret
orl
add
add
or
sbb
icebp
sbb
rolb
int
orl
testb
add
shll
jb
jns
das
js
sub
mov
sub
dec
out
popf
nop
lea
lock
adc
mov
sbb
rcrb
aaa
pop
lds
outsl
fcom
orb
sbbl
int
int
or
inc
pop
mov
dec
scas
fimuls
in
sahf
pop
les
lret
mov
stc
xor
test
jmp
std
imul
gs
les
pop
or
push
xor
insb
xorl
fidivrl
imul
sbbb
out
push
push
lret
cmp
repz
jae
ret
sbb
movsb
jno
push
mov
sbb
scas
sbb
dec
repnz
xlat
push
ret
jno
in
lcall
lock
in
lcall
jae
dec
mov
cmp
add
add
mov
pop
jle
mov
std
sbb
fidivl
jne
sub
push
jo
xchg
ds
je
xor
out
push
loopne
call
arpl
lret
push
jg
sbb
mov
cmp
mov
add
imul
insb
ds
mov
pop
xchg
iret
or
sub
xorb
fidivl
test
loopne
incl
sbb
pop
mov
mov
mov
mov
or
xor
mov
das
cmpsb
sub
inc
sbb
cmp
sub
les
and
stos
arpl
imul
je
outsl
pop
pop
add
xchg
dec
jle
cmpsb
xor
mov
subl
cwtl
pop
std
cmp
lods
mov
mov
push
lods
data16
stc
gs
outsb
icebp
in
nop
inc
push
enter
jge
ffreep
ljmp
add
add
sub
jg,pt
dec
arpl
insb
mov
add
hlt
es
out
inc
jl
loopne
mov
push
xor
loopne
outsl
scas
xor
hlt
ds
adc
sub
xchg
push
jle
cmp
pop
shlb
xlat
and
sub
or
stos
cwtl
je
push
loopne
hlt
jno
in
movsl
fwait
pusha
aam
lock
in
jmp
mov
push
das
inc
mov
hlt
sbb
xchg
jnp
sbb
pop
inc
pop
lea
adc
nop
and
arpl
insl
out
dec
or
loope
out
mov
lret
icebp
in
push
mov
or
sbb
cld
nop
pop
ficomps
mov
sbb
popf
sbb
ret
in
sub
fildll
sbb
out
push
jne
push
cmp
sbb
sub
pop
lahf
shrl
and
xchg
cmpsb
clc
mov
sbb
mov
pop
ret
xor
push
idiv
stc
aaa
add
sub
jmp
add
out
idiv
outsl
mov
clc
mov
add
add
inc
fists
inc
lods
push
int
icebp
pop
mov
icebp
test
xchg
pusha
xrelease
out
lret
mov
mov
pop
rcll
js
mov
pop
outsl
adc
lea
cmp
lods
scas
out
mov
add
fiaddl
mov
or
aas
test
pop
jle
addl
push
ret
imul
inc
xor
and
rol
int
jno
or
imul
scas
jmp
call
pop
lods
xchg
mov
pushf
sub
pop
shll
fcmovnu
ror
or
mov
je
dec
ja
cwtl
add
ret
pop
addb
mov
or
movaps
sbb
test
and
flds
mov
es
sahf
push
adc
adc
fldt
test
scas
push
dec
mov
std
pop
aad
add
add
inc
fbld
mov
pop
dec
mov
ljmp
add
sub
inc
cld
xchg
xchg
mov
out
das
mov
cmc
test
mov
icebp
push
xor
in
pop
aaa
imul
mov
sub
test
fisubl
xor
jo
pop
xor
lahf
push
ret
jg
pop
fisubs
in
fwait
xor
cmp
cmpsw
lret
shrb
jb
mov
xorb
repnz
mov
pusha
or
dec
xchg
ja
or
outsb
adc
pop
jmp
jecxz
jb
pop
es
jbe
pop
shll
jmp
jg
inc
mov
sar
jge
fsubrl
xchg
add
xchg
xchg
push
adc
jge
orb
fmuls
pop
daa
push
fldt
mov
rcll
jmp
cmc
call
cli
adc
push
pop
mov
push
icebp
jmp
adc
sub
or
add
push
push
call
jmp
mov
add
jno
xchg
push
enter
pop
stc
push
add
movsb
mov
rcll
inc
adc
fsub
pop
sub
add
cmpsb
imul
lea
fnstenv
cli
pop
pop
ret
outsb
and
and
aad
mov
js
leave
call
ss
cli
or
popa
in
dec
xor
dec
jbe
xchg
rorl
jns
xor
pop
stos
bswap
je
scas
leave
int
inc
and
movaps
pusha
mov
jp
adc
call
pop
jl
mov
js
adc
fwait
jmp
or
push
clc
add
xorb
imul
and
rcrl
jns
jae
xchg
setbe
lods
out
cwtl
mov
mov
sbb
dec
push
mov
cld
xor
dec
cltd
es
decb
les
xchg
outsl
xchg
mov
xor
nop
xchg
xchg
mov
add
std
sti
leave
sti
iret
jmp
lea
insl
jl
add
add
add
test
es
sub
sub
dec
cmp
clc
std
jmp
mov
rorl
lds
mov
cld
ret
cltd
push
xor
orb
pop
sarb
ds
lcall
mov
pop
mov
rcrb
flds
lahf
addl
adc
nop
xchg
fisttpll
aad
not
inc
pusha
repz
sub
mov
mov
push
and
fcomps
call
rolb
push
insb
and
std
call
fadd
in
cmp
jns
push
pop
push
loope
pop
add
xchg
int
test
out
jbe
or
inc
shrb
lods
test
sub
pop
insb
pop
into
int3
std
jle
inc
in
push
ret
int
xchg
inc
inc
out
xlat
push
es
es
cmp
aam
jp
dec
jge
fldl
movsl
and
push
push
icebp
outsl
or
or
adc
xor
mov
add
add
mov
xor
add
add
add
lods
mov
mov
mov
inc
lock
lret
mulb
adc
mov
insb
imul
mov
jmp
lea
fmull
add
fsts
sbb
or
fmul
or
mov
dec
leave
mov
lods
sbb
or
dec
or
dec
mov
cld
mov
frstor
ss
pop
sbb
mov
jmp
and
les
xchg
ret
ret
inc
scas
cmpsb
sub
pop
addl
nop
push
jl
pop
xchg
and
daa
or
fstpl
iret
ss
dec
out
movsl
jmp
push
daa
jmp
leave
dec
popa
adc
jp
xchg
lcall
lahf
jmp
int3
sbb
aaa
cmpsb
sub
inc
xchg
lret
sbb
outsb
scas
sub
rcrl
test
cmp
mov
dec
push
mov
push
cmovne
in
add
mov
add
add
jg
mov
sahf
loop
xchg
add
add
add
push
inc
jecxz
movb
subb
mov
cmp
mov
pop
pop
xor
jbe
cmp
movsb
ja
out
mov
cmpsb
mov
lret
jbe
aam
sub
and
mov
pop
in
ret
xor
jne
xor
sub
mov
lods
adc
mov
mov
out
daa
jmp
hlt
mov
iret
pop
push
jb
fsts
cmp
sbb
pop
mov
adc
and
push
mov
xchg
iret
inc
jmp
lea
outsb
popa
mov
out
leave
daa
jmp
inc
sub
mov
insl
and
aas
daa
lods
insl
push
push
or
out
pop
push
jle
cmp
fs
xchg
xchg
or
imul
sub
pop
or
adc
sahf
out
pop
dec
cmp
test
out
xor
push
cld
pushl
cld
sbb
mov
add
add
add
xor
arpl
out
imul
lods
sub
out
jo
lods
std
movsb
push
push
cld
dec
std
jl
mov
push
sbb
sbbl
sahf
push
ret
add
rclb
pop
pop
cmp
test
mov
xchg
fistpl
stc
test
rcll
and
fisttps
mov
adc
lods
and
xor
shrb
or
sub
xchg
inc
jmp
inc
jbe
push
pop
mov
mov
push
repz
adc
cmp
js
clc
or
insb
lcall
inc
insl
gs
add
xchg
cmp
inc
push
mov
jle
jecxz
jns
mov
loop
xchg
pop
or
push
mov
dec
mov
sbb
add
push
and
pop
or
in
or
lretw
pop
cwtl
mov
adc
mov
lea
data16
dec
pusha
xlat
pushf
shrb
lcall
fidivrl
add
add
add
push
push
shrb
jne
mov
aas
test
mov
sti
ret
mov
enter
inc
nop
ljmp
loopne
idivb
add
and
pop
mov
pop
in
jb
cmpsb
cltd
rolb
fnstenv
mov
cld
sbb
sarl
popa
jmp
lahf
pop
cmp
into
lods
mov
cmpsl
cli
lods
and
pop
pop
fildll
mulb
sti
cwtl
sbb
loop
repz
fwait
mov
xchg
stc
and
pop
jnp
mov
or
test
cli
imul
inc
pop
addl
cwtl
adcl
xor
xor
cmp
push
lods
fs
push
push
fst
daa
clc
sbb
mov
lods
pop
xchg
push
imul
cmp
sub
mov
int3
js
or
sub
mov
lock
shl
mov
add
add
test
mov
aas
scas
fsts
in
nop
ret
add
add
es
mov
mov
popf
xchg
sbb
test
pop
ret
add
out
in
adc
push
stos
inc
inc
data16
cmpsb
xor
rorb
jp
fistl
cld
es
and
jbe
test
adc
fidivs
xor
adc
cmpsb
lret
xor
sub
add
mov
push
mov
out
pushf
or
inc
mov
fisubl
fwait
mov
add
jmp
fidivrs
or
add
add
pop
sbb
and
mov
xchg
jns
pop
jg
lahf
jnp
lahf
in
cli
int
inc
fdivl
je
xor
rol
stos
sub
int3
and
mov
xor
sub
insl
push
sti
push
pushf
xor
mov
mov
push
lcall
adcl
push
test
movsb
or
adc
out
mov
adc
xchg
jp
imul
add
add
jne
jne
jg
loop
mov
das
xchg
ret
add
add
add
je
sbb
push
outsb
loope
loope
shlb
xor
pop
jae
push
add
and
cmp
xor
scas
pop
loopne
or
mull
or
push
sti
fcoml
jmp
jnp
aaa
xor
xchg
push
push
ljmp
mov
call
mov
push
jno
add
and
stos
add
nop
cmpsl
ret
fistl
xor
repnz
mov
mov
add
lret
jns
mov
nop
int
orl
in
inc
dec
sti
jg
fldl
sahf
test
sahf
xchg
fistl
xor
or
push
inc
pop
mov
mov
hlt
mov
and
decl
cmp
mov
insb
scas
mov
sub
lcall
jecxz
out
clc
loopne
mov
arpl
sbb
dec
push
aam
mov
sbb
mov
cmc
mov
ret
add
add
add
mulb
mov
jmp
in
enter
push
sub
mov
push
push
iret
cmp
jl
arpl
adc
in
iret
arpl
jb
xchg
stos
pop
test
push
loope
hlt
mov
sub
or
das
mov
out
test
pushf
rorb
inc
int
mov
cmpsb
sbb
pop
mov
dec
pop
jmp
gs
pmuludq
and
pop
sbb
lahf
mov
test
sub
xor
cli
in
movsb
aaa
cmp
scas
cmp
push
mov
mov
int
out
mov
xor
movsb
adc
xchg
insl
mul
test
out
inc
xor
ficoms
jmp
fsts
sub
arpl
mov
loopne
pop
xchg
dec
push
and
dec
inc
sub
xor
notl
pop
push
fs
mov
cmp
or
cmpb
add
and
outsb
jle
lods
testl
lds
add
add
fs
popf
pop
mov
dec
aaa
jo
or
push
dec
xor
or
loop
mov
mov
cltd
mov
loope
ds
xchg
jecxz
cmpl
xor
and
mov
ljmp
insb
aam
in
stc
outsl
adc
xorl
mov
sbb
mov
repz
or
dec
stos
insl
insl
pop
icebp
mov
cmp
inc
pop
pusha
mov
inc
cmp
push
pop
jle
lds
lea
dec
addr16
inc
out
add
imul
shrb
adc
inc
and
int3
inc
imul
into
fisttps
jecxz
mov
and
pop
xor
pop
gs
fiaddl
push
test
mov
enter
ds
sbb
sbb
cmp
loopne
xchg
xchg
and
cs
das
cltd
adc
int3
scas
bound
add
leave
pop
add
pop
or
add
mov
xchg
insb
cmp
movb
add
add
fucomp
and
enter
inc
or
sub
xchg
mov
push
lahf
test
mov
loopne
jne
mov
add
sarl
cmp
or
pop
inc
ret
insl
or
mov
in
push
les
imul
sbb
test
cmp
inc
jbe
push
sbb
dec
jae
dec
sub
out
and
fsubr
jo
mov
or
pop
adc
in
push
jnp
add
sbb
rcrl
popa
jle
jge
mov
dec
adc
aam
pop
sub
xor
push
leave
imul
adc
inc
ja
dec
aam
adc
ds
in
into
add
pop
and
sahf
xchg
pop
push
test
lods
ret
cld
xchg
loop
mov
or
dec
mov
ret
mov
inc
aam
xchg
jb
aaa
jl
and
js
mov
jae
lcall
add
out
sti
xlat
in
aad
test
pusha
movsb
movl
add
clc
pop
jle
push
rorl
aam
daa
xor
add
jp
nop
sbb
and
pop
lret
fwait
jns
xorb
xchg
pusha
loop
into
vpavgb
lods
ror
xchg
repz
xchg
cmc
xchg
pop
movsb
push
mov
iret
mov
adc
test
or
push
das
lret
push
add
in
rcrl
jge
sub
mov
push
xchg
mov
pop
mov
xor
add
cmpsl
and
pop
mov
lods
cmp
jl
testb
xor
cmpsl
inc
mov
cli
mov
and
sarl
notb
ss
push
sti
popa
sub
fadd
and
dec
in
jb
clc
pop
sbb
test
mov
mov
or
repnz
shll
xchg
imul
push
in
mov
loop
mov
cmp
sbb
add
push
sub
cmp
jg
and
mov
and
mov
add
add
fwait
xchg
cmp
hlt
ds
push
mov
or
jmp
call
ds
dec
mov
mov
jp
add
bound
mov
mov
lock
xor
out
pop
sub
mov
mov
xor
dec
jae
lods
pop
add
lock
and
in
or
and
or
stc
inc
lock
insb
fsubl
add
jmp
sub
repnz
and
out
dec
add
aas
mov
push
sub
subb
mov
push
shlb
mov
loope
gs
inc
fnstenv
cmp
sahf
dec
add
ja
mov
xor
fists
iret
dec
scas
lods
adc
dec
push
les
mov
imul
mov
stc
outsb
inc
bound
sub
cmp
cmpsb
mov
jmp
ds
repz
fcoms
dec
dec
lods
lods
leave
add
add
add
jl
lret
sub
lods
mov
mov
movsb
sub
push
ret
test
outsb
sahf
xchg
je
sub
jnp
cmp
movsl
jae
repnz
inc
sahf
scas
mov
repnz
xchg
mov
cmp
icebp
fisttps
or
out
dec
leave
das
dec
adc
fistl
mov
xchg
xchg
cmpsl
les
daa
test
xor
cltd
ret
push
retw
mov
ds
dec
mov
nop
les
and
xchg
gs
dec
or
sub
movsl
sub
jmp
cltd
dec
mov
pop
aad
jl
inc
rcll
jb
enter
repz
cs
or
and
sbb
jb
mov
imul
push
mov
je
mov
or
jno
int
cs
adc
shrl
jg
ja
out
dec
mov
xor
ret
cmp
xor
adc
mov
mov
mov
adc
add
add
add
insb
cmp
test
add
fwait
in
je
or
push
ds
or
push
lret
idivl
jge
imul
xorb
cld
push
imul
xchg
iret
sub
pop
sbb
popf
xchg
arpl
push
lcall
push
cwtl
jae
mov
mov
iret
mov
fdivrl
roll
cmp
xchg
aam
fdivl
add
inc
xchg
jno
pop
ret
or
outsl
rclb
xor
fcoms
jmp
xchg
int
aaa
jb
pop
jbe
ret
int3
stc
sub
pop
inc
pop
xlat
dec
loope
decl
mov
pushf
mov
repz
in
orb
negl
clc
test
or
or
dec
inc
and
dec
sub
idiv
mov
fidivrs
mov
xchg
and
addr16
ljmp
xlat
xor
or
xchg
roll
stc
enter
in
sbb
push
inc
mov
add
add
add
inc
bnd
in
imul
movd
movl
addr16
in
mov
sbb
inc
sbb
scas
adc
lods
push
and
jb
push
loopne
in
pop
adcl
test
fstp
popa
cwtl
pop
mov
rorb
mov
in
sbb
push
sub
mov
mov
xchg
mov
shll
mov
out
push
mov
xor
mov
sub
mov
insb
pop
loope
or
adc
and
movsl
sbbl
mov
jp
pop
or
test
movsb
push
in
jnp
push
repz
mov
mov
cld
mov
push
je
sti
jno
fistpll
cmp
stos
push
es
fdiv
dec
testb
and
inc
jno
mov
xor
xchg
push
stc
xchg
dec
jne
imul
cmc
call
inc
push
popa
sub
mov
mov
add
add
lods
jl
movsl
or
pop
lret
add
xchg
fwait
sub
xor
sbb
test
test
mov
clc
push
cmp
add
cmp
out
or
aaa
push
aad
inc
fidivrl
dec
rolb
addr16
fs
add
cld
jo
scas
xchg
repnz
cwtl
pop
mov
mov
enter
push
insl
jecxz
roll
add
or
dec
mov
ror
dec
xchg
mov
imul
mov
out
jb
xlat
mov
pop
inc
mov
sahf
arpl
bound
or
adc
cmp
jp
aam
jmp
repnz
fcomps
shlb
push
pop
mov
ds
cmp
outsb
ds
cwtl
outsb
sub
incl
jle
rorl
xor
pop
lock
icebp
dec
inc
add
ret
add
movsl
mov
iret
sub
xor
add
add
add
push
push
jae
fidivl
div
jp
js
jg
ss
mov
add
mov
fwait
orb
test
jns
arpl
lds
dec
pusha
pop
mov
int
sub
or
sub
ss
adc
das
and
out
jge
pop
je
fisubl
mov
mov
ss
scas
out
in
sub
sti
ja
pop
inc
sbb
lods
xor
test
je
cs
add
fwait
das
add
sbb
ret
repnz
mov
pop
pmulhw
test
push
mov
sbb
scas
jbe
xlat
dec
mov
in
ljmp
addr16
dec
inc
idivb
jle
daa
popf
int
mov
push
int
lods
mov
and
lcall
addr16
push
fwait
aam
aam
leave
fisttpl
out
push
mov
call
jnp
xor
add
out
into
gs
cld
test
mov
or
into
add
add
add
jg
inc
mov
cld
notl
pop
jnp
sbb
insl
cmpl
rol
pop
insb
popf
scas
fisubs
pop
test
jbe
fistps
fs
mov
inc
fmull
mov
scas
out
das
repnz
cli
stc
sbb
int3
pop
mov
or
call
scas
data16
lock
mov
aam
in
or
jg
scas
adc
incl
mov
fisttps
or
jb
mov
inc
cli
inc
fistps
xchg
sub
mov
pop
push
cmp
add
xchg
push
fadd
push
pop
iret
addb
aam
fisubrl
push
shr
je
outsl
pop
nop
lock
sahf
stos
iret
add
pop
fldl
mov
clc
int3
stos
pop
mov
movsl
pop
test
imul
lret
mov
jl
dec
sahf
sarl
mov
loopne
sahf
or
arpl
add
add
xchg
and
je
out
mov
test
add
add
inc
sub
shlb
adc
cs
aad
arpl
sbb
pop
jecxz
adc
xor
xchg
mov
xor
fsubrs
cmp
mov
push
xor
cmp
cmc
les
jae
js,pt
pop
std
mov
rcll
add
xor
pop
scas
pop
test
mov
add
arpl
gs
in
out
cmp
cmp
iret
mov
cltd
lods
jmp
pop
add
and
xchg
fmuls
add
jge
in
dec
loop
dec
lret
lcall
push
clc
dec
push
popa
cmp
std
sub
jnp
addr16
cmp
fisttpl
lcall
dec
lahf
leave
xor
sub
cmp
adc
sbb
das
mov
sbb
leave
sbb
cmp
test
rep
sub
adc
pushf
cmp
dec
lea
add
add
dec
daa
dec
das
outsb
imul
push
xchg
inc
and
mov
add
add
adc
cmp
shl
mov
insb
dec
jmpw
inc
xlat
aad
pusha
mov
mul
icebp
cmp
lods
xor
push
aad
mov
jae
xchg
push
add
test
xbegin
jmp
sbb
hlt
xor
pop
aam
out
adcb
pop
sub
cmpsl
dec
movsb
into
pop
cmp
pop
mov
xchg
jno
sub
sub
and
sbb
pusha
les
dec
out
push
cld
lcall
pushf
mul
outsl
push
add
clc
inc
or
lea
push
iret
dec
jg
sub
cmp
pusha
pop
in
jne
mov
xchg
add
ja
int3
in
mov
das
scas
loopne
clc
js
xor
insl
inc
xchg
mov
dec
stc
xchg
fs
push
xlat
cmpsb
push
fcoms
loop
aas
adc
imul
jne
pushf
repz
scas
and
mov
js
les
cmp
add
call
out
lahf
ret
or
xchg
dec
int3
roll
add
add
and
lods
aad
xchg
daa
xor
aad
test
in
mov
repz
scas
xchg
push
shr
inc
or
subl
push
cli
adc
leave
sbb
adc
std
sbbl
jbe
adc
push
ds
insl
data16
in
insl
rolb
inc
mov
outsl
fwait
pop
sahf
out
loopne
add
scas
jge
pop
xor
testl
add
jge
mov
lret
pushf
jns
push
and
mov
bswap
and
addr16
loop
adc
mov
push
adc
push
addr16
test
test
cmp
cmp
scas
divb
mov
mov
push
xchg
call
insl
cmpl
mov
int3
sbb
sbb
imull
daa
dec
inc
add
repz
test
add
pop
pop
cltd
push
setb
add
pop
cli
inc
aaa
shrl
push
mov
mov
mov
pop
xchg
or
xchg
rcl
add
add
add
xchg
cwtl
scas
out
push
jnp
push
arpl
mov
xchg
sub
xchg
mov
pop
pop
sahf
dec
subl
jl
ljmp
shll
xlat
ljmp
stos
out
cmp
lock
sbb
cmp
sarl
jns
lea
mov
jnp
cmp
call
xchg
mov
jle
enter
pop
jecxz
sub
sbb
push
sub
mov
out
xchg
pop
lods
push
ljmp
push
adc
mov
insb
sub
jns
push
dec
push
xchg
fldenv
test
mov
xor
add
mov
jmp
in
loope
push
data16
clc
mov
mov
addr16
push
fldcw
mov
mov
fwait
leave
call
sahf
sbb
aaa
push
gs
loope
xchg
sbb
xchg
xor
add
sbb
sub
dec
adc
xchg
add
add
mov
loope
repnz
mov
xor
stos
stos
cs
or
jg
jg
xlat
pusha
fmull
xor
mov
lret
cld
mov
xor
fs
ret
and
push
jno
add
mov
add
mov
sti
outsb
pushw
sbb
xor
jge
nop
popa
mov
adc
orl
mov
ret
pop
xchg
sub
vmovdqa
cmc
xchg
stos
mov
cmp
pop
inc
jno
cmpsb
pusha
cwtl
out
cwtl
xchg
cmpb
adc
cmp
sbb
out
mov
clc
push
stos
push
xor
inc
xchg
xchg
repz
xchg
or
test
jnp
adc
adc
outsl
les
fldcw
pop
push
jne
scas
and
pusha
pop
jp
inc
mov
pop
ret
decb
xor
lock
mov
fbld
pop
rcrl
iret
cld
mov
inc
in
inc
mov
pushf
adc
ds
jae
sub
sbb
add
add
xchg
mov
inc
jns
jecxz
shl
mov
and
xchg
stos
lea
xchg
cld
lahf
mov
or
inc
stos
ss
sbb
ljmp
adc
xchg
jbe
add
test
aad
push
mov
sub
les
xchg
pop
divl
jns
adc
push
mov
pop
scas
jnp
jnp
pop
xchg
je
and
cmp
leave
sti
out
fnsave
jnp
sbb
ret
shll
mov
sbb
insl
das
mov
xor
rolb
jecxz
xchg
int
sub
push
inc
pop
lock
and
pop
popa
push
fldt
fs
jae
repz
pop
or
test
inc
mov
cmp
fcompl
scas
xchg
mov
in
out
fisttpll
cmp
mov
leave
xor
sbb
test
dec
in
mov
add
lcall
jnp
xor
add
add
add
adc
lods
push
in
add
sbb
nop
dec
ret
lea
jno
je
imul
sub
scas
hlt
stos
outsl
push
sbb
sahf
xor
sub
test
icebp
or
imul
sbb
fwait
xchg
lea
pop
scas
or
clc
call
addr16
sbbb
test
xchg
sbb
scas
aam
lods
cs
mov
ja
popa
int3
daa
loope
dec
out
jle
jbe
ret
fldenv
sub
xor
ret
dec
push
movsb
jl
insb
rcrl
sbb
xor
ds
pop
cmpsl
sti
leave
iret
clc
xlat
sahf
es
jge
push
test
std
lock
xchg
gs
lret
out
cltd
lret
inc
jge
xor
fs
inc
scas
jns
push
adc
sub
fnsave
pushaw
and
cmp
add
add
xchg
ja
push
jg
leave
or
jo
inc
loopne
add
add
add
fsubrl
cwtl
xchg
movsb
jne
inc
mov
xchg
loope
fwait
lret
xor
add
or
xor
cwtl
subb
xorb
lahf
push
pop
sbb
adc
jge
push
or
mov
mov
flds
mov
add
lret
cmp
movsl
ret
cmc
mov
clc
ficoml
xor
xchg
cs
and
jne
mov
rcrl
aad
xor
adc
xchg
dec
jne
push
cmp
sub
bound
push
xchg
push
daa
jbe
ds
outsb
pop
jb
inc
cmpsb
push
cmpsl
jnp
mov
pop
push
push
inc
lea
jp
xor
mov
jnp
std
mov
ret
dec
mov
icebp
sub
outsb
ljmp
pusha
xor
add
lret
in
fstpl
lahf
xchg
stos
push
nop
fstpl
leave
jnp
in
loopne
leave
fildll
mov
lods
imul
xchg
movsb
mov
xlat
add
add
add
push
add
jne
pmovmskb
testb
int
xchg
inc
mov
xor
adc
in
nop
pop
inc
orb
imul
enter
xchg
dec
jbe
and
stos
mov
mov
mov
mov
dec
sub
adc
fistpll
pop
jo
xchg
cmc
sbb
les
ja
shlb
xchg
loopne
mov
jecxz
mov
and
mov
push
mov
cmp
movsb
sub
or
pop
cmp
out
mov
outsb
lcall
daa
jp
adc
mov
in
cltd
ds
call
out
popl
push
jo
mov
subl
pop
cmpsl
sbb
push
popa
sti
gs
stos
cld
and
shll
addl
pop
arpl
call
cmp
and
out
add
mov
push
inc
dec
scas
mov
add
add
psubusw
push
in
sub
xchg
fadds
add
add
jae
daa
inc
inc
push
fwait
mov
mov
leave
ss
daa
repnz
ret
dec
cwtl
popa
into
lret
cltd
rcrl
cmp
push
in
hlt
cli
jmp
lds
enter
stos
fs
inc
js
jne
rcll
add
sbb
xchg
outsl
int
aaa
adc
sub
mov
or
adc
add
sbb
test
outsb
mov
filds
add
lock
mov
adc
and
adc
cs
sbb
adc
dec
fs
push
sub
stos
push
mov
loopne
sbb
jne
test
jns
inc
fmull
lds
add
je
jno
data16
jnp
cmp
sbb
xor
lock
jl
clc
out
jmp
mov
adc
mov
add
bound
push
test
sbb
pop
test
or
in
sbb
sahf
cmc
fsubrp
jnp
sti
enter
jno
in
flds
add
add
mov
icebp
xor
mov
add
dec
mov
repnz
imul
int
mov
jns
pop
aas
and
pop
lcall
lods
xor
inc
shll
sub
push
je
push
adc
test
fildl
ret
pop
movsl
mov
icebp
ret
cmp
xchg
std
add
inc
lret
fisttpll
test
stc
loop
shrl
pop
adc
inc
shrb
mov
inc
push
sbb
lods
cwtl
and
mov
sti
mov
imul
mov
ret
lods
fwait
push
mov
xchg
sub
adc
fdivrs
pop
ljmp
call
sub
insl
adc
cmp
test
aas
sub
push
sbb
mov
loopne
mov
fildll
inc
xor
ds
and
pusha
adc
or
mov
add
pop
dec
jle
jg
std
fstpt
sahf
push
stos
lock
add
add
lods
in
add
scas
lds
scas
fidivl
mov
dec
call
orl
stos
ljmp
in
xchg
cld
sahf
cmp
cmp
mov
cmp
add
sahf
mov
or
add
inc
rcll
andb
and
sub
fimuls
mov
stos
cmp
icebp
pop
sub
mov
xor
andb
inc
out
sub
cs
fdivl
cmp
push
mov
pushf
popf
fcoml
xchg
mov
cwtl
dec
scas
ja
out
mov
mov
fs
jmp
cmpsb
pop
fstpt
mov
popf
sub
int3
mov
lcall
rolb
orb
dec
or
xor
aad
adc
mov
fwait
sar
call
xor
xor
popf
in
inc
hlt
mov
cmp
ljmp
jl
pop
xchg
hlt
fildl
add
add
cmp
jecxz
mov
xchg
jge
jl
inc
faddl
jp
ja
sub
sbb
sub
adc
push
mov
pop
stos
mov
sub
les
push
fsubs
lret
shlb
push
sub
js
test
sti
orl
adc
dec
jo
jne
lds
nop
shlb
test
insb
inc
adc
pop
push
inc
pop
cli
xchg
inc
repnz
sbb
xchg
sub
test
in
sti
mov
mov
jns
dec
jl
mov
outsl
es
dec
rcr
daa
in
movsl
inc
inc
out
sbb
aaa
adc
les
sbb
pop
stc
mov
lea
dec
daa
popa
and
fwait
data16
call
dec
jge
jno
mov
add
mov
adc
xor
mov
jp
mov
outsl
insb
adc
sub
cmpsb
fcomip
dec
or
lods
mov
mov
xlat
imul
adc
leave
jmp
scas
inc
call
clc
faddl
add
add
ret
push
dec
rolb
push
subb
iret
xchg
outsl
out
xchg
add
pop
xchg
inc
xchg
sub
addb
dec
test
ja
das
out
cmpsl
mov
push
or
aad
and
leave
mov
or
icebp
pop
int
mov
lcall
jae
jmp
movsb
enter
aam
dec
jecxz
mov
int
aaa
loop
fistps
stc
ljmp
pop
movsb
jae
inc
jno
shll
cmpsl
push
mov
or
sub
or
mov
mov
or
mov
add
test
nop
lock
sbb
es
or
or
aaa
jnp
pop
in
push
xchg
push
add
inc
sbb
aas
xchg
xchg
repnz
mov
sbb
push
insb
scas
push
inc
fnsave
cmpsl
repz
add
cmpsl
fimull
faddl
inc
inc
cld
fldl
add
add
ss
mov
test
outsl
dec
add
adc
in
popf
test
into
out
test
cli
sub
in
add
test
popf
imul
xor
daa
inc
imul
mov
pop
push
cmc
sbb
pop
sahf
pop
popa
out
add
dec
insl
out
adc
pop
out
aaa
scas
addb
adc
mov
hlt
rcl
jp
xor
scas
push
repz
repnz
stos
push
add
mov
xchg
pop
or
sti
xchg
sahf
xor
sbb
out
std
or
sub
test
and
mov
inc
xor
shll
and
nop
mov
add
push
sarb
test
sub
pop
cltd
pop
mov
xor
mov
jmp
cwtl
mov
dec
cmp
jge
push
push
pop
inc
pop
mov
cwtl
movsl
mov
add
add
mov
lcall
fisttps
or
add
add
add
add
add
call
out
sub
xchg
inc
cmp
mov
and
dec
xchg
js
fnstenv
ficoms
sahf
dec
aas
mov
shll
movsl
sahf
out
or
jns
inc
loopne
insl
mov
push
lret
mov
orl
pop
push
xchg
imul
roll
mov
nop
mov
es
push
fs
sbb
mov
mov
in
insb
xchg
pop
lds
lahf
cli
in
fstpt
sub
jp
jecxz
fcmovnbe
mov
icebp
sahf
lahf
ja
xor
push
call
push
cmp
nop
add
int
fs
mov
and
xor
and
scas
fwait
sbb
cmp
je
jg
xchg
fcomi
arpl
movsl
jnp
lcall
lret
and
out
sbb
stos
pop
and
fwait
test
dec
mov
adc
into
sub
add
mov
jns
xchg
xchg
mov
cmc
insl
adc
loopne
add
add
push
inc
stc
ljmp
cli
imul
clc
mov
xchg
ret
adc
pop
pop
mov
ljmp
cmp
push
push
loopne
dec
jae
dec
sbb
ss
popf
aad
std
aam
lret
ret
out
pop
imul
mov
xor
inc
jne
outsb
pop
push
cmpsl
push
adc
sub
in
sahf
xchg
dec
notl
test
push
add
xchg
or
movsl
inc
cmp
xor
into
imul
clc
push
dec
mov
cli
stc
mov
ret
xor
insl
int
and
mov
icebp
leave
dec
sub
dec
xchg
enter
xchg
daa
orl
mov
fidivrs
leave
ret
jg
in
cmc
dec
inc
xchg
fisubrs
repz
mov
aam
push
push
or
test
outsb
sbb
pushf
xchg
out
pop
stc
jge
fwait
push
sbb
xchg
cmp
sub
add
jae
fadd
fsubp
jnp
or
cld
les
pop
ss
loope
add
add
mov
inc
test
test
negl
mov
jmp
mov
pop
loope
popf
aas
rcll
insb
jecxz
xchg
mov
ss
loop
into
pop
xlat
fldt
testb
repz
add
pop
cmp
jecxz
cmpsb
lods
adc
test
and
ret
mov
ljmp
sub
pop
pop
push
into
cwtl
sarb
cmc
xchg
inc
xchg
cwtl
add
dec
and
test
or
and
pop
out
int
aas
cmp
in
into
lea
into
fwait
sub
inc
mov
add
push
push
lds
or
movsl
mov
pop
or
jns
insb
xor
movsb
or
adc
daa
lock
shlb
les
rclb
test
mov
push
push
sarl
xor
dec
mov
ds
stos
inc
cmp
add
add
sub
cld
cli
jle
dec
nop
xor
loop
add
add
push
addr16
xchg
jnp
dec
adc
xchg
cs
leave
add
pop
xchg
xor
mov
pop
add
inc
subl
and
cli
dec
push
or
jns
hlt
pop
sbb
push
adc
mov
loope
dec
inc
cli
adc
mov
js
jb
and
jae
cmp
mov
inc
leave
jle
dec
mov
fsub
mov
sbb
cltd
repnz
rolb
and
pop
jnp
jl
mov
pmuludq
fbld
shr
stc
mov
mov
aas
dec
in
sahf
cmp
cli
and
mov
push
push
sbb
gs
daa
insb
fnsave
scas
push
dec
jnp
push
mov
pop
popa
ss
inc
cmpsb
ljmp
jg
jo
pop
cmc
int3
lods
and
mov
add
cmp
outsb
es
jmp
movsb
in
add
imul
aaa
xor
sub
dec
lea
pop
jbe
ja
sti
aaa
out
ja
sub
adc
add
add
add
push
push
inc
inc
xor
cmp
and
dec
pushf
or
lret
stos
out
orb
sahf
pop
sbb
mov
das
popa
lods
fdivs
push
lea
sbb
sub
and
movsl
idivb
test
aam
mov
and
sbb
and
sahf
push
dec
cmp
sub
scas
in
pop
mov
or
imul
sub
enter
mov
and
cmpsl
sbb
push
jne
int
mov
into
les
je
push
notl
test
das
add
icebp
dec
mov
xorl
lahf
push
pop
aam
push
mov
jg
data16
cmc
sub
jl
cltd
pushf
movsb
shll
mov
inc
out
inc
xchg
repnz
push
bound
lcall
sbb
clc
push
out
push
pop
sti
mov
pop
and
shll
es
xchg
rolb
add
add
into
arpl
pop
xchg
aaa
pushf
jno
gs
add
add
jb
out
push
nop
icebp
add
mov
inc
outsb
movsl
push
lret
int3
aad
xor
mov
mov
jge
fwait
mov
xor
stos
or
pusha
add
lret
add
call
mov
emms
sbb
adc
mov
test
lds
scas
lods
jecxz
jecxz
xor
pop
dec
or
ffree
push
clc
bound
es
pushf
pusha
gs
xor
jg
sub
bound
jae
mov
push
in
mov
movsb
pop
jle
mov
mov
cltd
push
xor
adc
stos
jmp
sub
xor
dec
cmp
push
dec
loope
movsb
aad
inc
loope
push
jp
aaa
int
ljmp
mov
fnstenv
and
shlb
cmpl
lea
inc
test
ds
fidivrl
adc
xchg
lcall
push
dec
or
add
add
ja
lcall
mov
mov
in
add
add
mov
xor
jo
add
lcall
push
jl,pt
or
mov
scas
sub
dec
test
adc
add
aas
jl
ljmp
sbb
add
dec
out
dec
fcomps
jle
fmuls
movsbl
jge
cmpsb
mov
mov
test
dec
mov
mov
out
scas
scas
sub
int3
call
inc
lods
sub
stos
fnstenv
dec
xchg
push
push
dec
lods
xor
xchg
push
dec
iret
xor
outsl
sub
mov
jnp
xlat
jp
movsl
mov
mov
iret
and
sub
sbb
jmp
ljmp
out
xor
push
fsubrl
mov
ret
mov
shlb
push
shrb
enter
mov
imull
and
test
mov
repz
lock
jg
in
and
mov
in
out
add
add
ss
fisubrs
mov
loope
nop
push
mov
xchg
mov
mov
sub
adc
out
push
jb
jb
fs
dec
inc
inc
mov
mov
xchg
outsl
push
addl
push
adc
push
xchg
cmp
jbe,pn
push
push
ret
scas
pop
mov
fcomps
loope
sbb
lea
xchg
or
or
cmp
mov
outsl
jp
imul
arpl
fdivl
call
pop
sub
xorl
push
enter
lods
cwtl
aad
or
jo
fiaddl
movsb
sub
mov
ficoml
addr16
adcl
insl
out
out
ljmp
xchg
adc
sbb
and
jb
mov
divl
mulb
jecxz
xchg
rorb
xchg
sbb
lds
add
xchg
fwait
cwtl
pop
popf
pop
xlat
fistpl
movsb
sbb
out
add
add
xchg
sarb
mov
scas
data16
or
xor
fs
xor
addr16
mov
inc
lret
sbb
mov
rclb
int
sbb
xchg
push
dec
stos
push
add
js
arpl
mov
cmpsl
push
or
lcall
ds
fcom
cmp
xor
adc
inc
dec
imul
clc
cwtl
mov
dec
jle
aad
jecxz
cs
cmc
ja
test
mov
bnd
mov
aaa
push
push
push
pushf
mov
out
push
mov
inc
and
push
xor
jecxz
and
xor
add
call
rolb
outsl
hlt
int
lret
xchg
repnz
lds
lea
mov
loope
dec
cli
cmp
inc
out
mov
adc
icebp
push
mov
ljmp
jge
aam
add
add
mov
dec
js
stc
mov
dec
int
push
and
add
add
test
jnp
adc
sub
mov
add
inc
jp
jbe
fst
push
xchg
add
jecxz
sbb
pop
es
rcrl
and
xlat
add
fsubr
sub
pop
jno
jle
jns
sub
shlb
pop
cs
insl
rcrl
aad
packssdw
mov
paddb
das
icebp
and
mov
rorl
pop
lds
pusha
dec
inc
push
enter
pop
clc
lcall
push
pop
movsb
in
movsb
mov
sti
jb
test
fcomps
push
cmpsb
imul
sahf
pop
arpl
jno
stos
sub
mov
mov
in
es
cltd
sub
test
mov
repz
hlt
sub
lods
int
scas
dec
fwait
shll
mov
shlb
nop
gs
cmp
sub
jecxz
push
mov
xchg
xor
add
add
insl
repz
fwait
jns
jns
pop
fiaddl
jmp
add
gs
or
jmp
dec
nop
mov
stos
nop
adc
mov
add
mov
xchg
loopne
dec
mov
gs
test
lcall
and
insl
add
stos
dec
push
scas
jo
pop
mov
mov
push
add
clc
mov
popf
loope
push
hlt
pand
cli
or
into
lods
sub
jne
enter
sbb
mov
dec
call
cli
fstl
push
aaa
xchg
decb
or
inc
and
dec
jnp
mov
fwait
outsl
pop
or
jb
fwait
outsb
mov
aaa
lret
or
jp
es
pop
lods
repnz
testl
push
mov
cwtl
inc
mov
dec
and
ret
jge
adc
out
push
loope
sahf
pop
scas
je
pusha
mov
xlat
mov
shl
jae
cli
mov
subb
jmp
add
jne
testb
add
cmp
jnp
adc
jne
repz
sub
add
add
add
scas
push
jne
sub
outsl
popf
in
lea
add
dec
xchg
pop
xchg
aad
cmp
xor
cmpsl
xchg
push
push
fsubrs
sub
hlt
push
inc
xchg
cmp
pop
sub
stc
pop
pop
inc
ret
lds
cmp
cmc
xchg
stc
xchg
out
xchg
mov
sahf
xlat
cmp
jmp
xorb
pop
sub
dec
lret
or
gs
pop
lods
or
or
xchg
sbb
cmc
outsl
nop
out
and
mov
shl
xchg
xlat
out
xor
and
xchg
ficoms
vfrczsd
adc
out
or
jmp
cwtl
ret
lahf
cmp
ret
cld
mov
iret
cmp
nop
aam
outsb
adcb
xor
sub
jnp
and
mov
add
aas
dec
xor
pop
xchg
adc
mov
out
lods
xor
aas
xlat
fistl
das
inc
xchg
pushf
mov
jmp
add
add
mov
in
or
jp
js
xrelease
or
mov
and
sbb
std
fsubr
pop
arpl
jnp
pop
ret
rcr
imul
mov
cmp
hlt
shll
pop
js
fs
ja
ja
frstor
mov
xchg
sbb
jae
jb
test
fisubl
aam
test
movsb
fnstcw
inc
mov
inc
xlat
sbb
mov
dec
stos
insb
pop
push
iret
xchg
push
mov
sbb
aas
xlat
pop
popa
push
jns
pop
pop
fs
pushf
xchg
scas
movsl
inc
dec
mov
adc
push
cmp
sti
cli
jmp
ss
ret
jmp
outsb
stc
xchg
xchg
in
stos
pop
xchg
jle
mov
adc
xchg
js,pn
stos
pop
lods
push
cmp
stos
movsl
stos
popl
add
dec
xchg
fdivs
iret
lds
int
add
pop
mov
push
lret
in
push
out
aam
lret
mov
add
add
jb
scas
decb
fisttps
jecxz
add
add
add
add
sbb
jbe
cli
mov
mov
fwait
icebp
xchg
push
sbb
lret
push
sti
mov
cmp
jne
rcr
lods
sbb
cli
test
inc
push
xchg
aas
ret
push
pop
dec
xor
daa
xchg
cmpsl
xor
lods
iret
and
orl
inc
cli
pop
xchg
int
mov
stos
cmp
push
dec
cwtl
dec
aas
pop
movsl
leave
fsts
mov
mov
leave
mov
pop
inc
dec
jmp
fwait
jnp
out
cli
jae
mov
jg
push
cmp
pop
jnp
ljmp
roll
adc
outsl
or
add
inc
fisubrs
lea
pop
jns
mov
dec
lret
cmpsb
add
repnz
mov
jne
xchg
push
loopne
sub
mov
jp
jnp
push
ja
adc
cmpsl
push
xlat
or
sbbl
pop
mov
cltd
pop
sbb
mov
xlat
mov
xchg
dec
jle
cmp
add
add
add
push
push
mov
xchg
bound
bound
xchg
push
mov
pop
mov
inc
pop
repnz
pop
pop
movsl
mov
iret
daa
cmovno
fildl
sbb
xor
or
lea
inc
lcall
mov
push
jbe
cmp
dec
stc
orl
fisubl
aas
outsl
hlt
cmpsl
or
or
pusha
iret
lds
lods
push
fstl
mov
inc
cmpsl
jge
hlt
mov
shll
push
stos
ljmp
dec
mov
enter
lret
pop
mov
fldcw
push
aam
cld
adc
mov
fsubrl
pop
inc
or
stos
sub
out
jns
mov
xchg
ja
cmp
pop
and
gs
push
cltd
inc
data16
out
lret
int3
sbb
loopne
pop
jo
stos
dec
fwait
dec
dec
xchg
div
in
aaa
pop
ret
jp
inc
jb
xchg
xlat
ret
xchg
push
ss
dec
push
mov
mov
jo
lods
cmp
lods
aas
mov
mov
add
add
push
iret
aad
movsb
pop
rcrl
push
push
scas
sbb
xor
outsb
pop
jne
test
xchg
jl
ret
movsb
sbb
push
notb
mov
add
dec
xor
aam
lcall
push
mov
mov
es
xor
sbb
ja
fiaddl
add
cltd
test
xlat
shrl
outsb
sbbl
lret
cli
pop
push
pusha
jb
cmp
and
adc
xor
and
into
enter
xor
jo
in
cld
dec
dec
add
dec
ljmp
sub
adc
in
pop
imul
clc
mov
leave
mov
xor
pushf
sbb
pop
xor
aam
inc
push
js
pop
loop
cld
adc
pop
test
mov
jecxz
in
ja
xor
xchg
pop
ja
lea
dec
xchg
sub
xchg
mov
test
add
add
mov
sti
mov
xchg
daa
pop
gs
out
add
add
add
push
cmpsl
cmp
fildl
fs
icebp
push
and
enter
and
les
add
xor
aam
inc
inc
fcoms
sub
pop
or
add
fs
cmp
stc
mov
dec
push
cmpl
and
inc
popa
loope
and
xor
outsl
cwtl
adc
jmp
test
mov
movsb
popf
or
imul
out
push
je
and
pushf
aaa
scas
adc
lret
xchg
int
neg
dec
cmp
lahf
pop
les
cmpsb
pop
add
push
or
iret
push
add
pop
insb
ja
xchg
adc
into
push
loop
cmp
mov
pop
and
pop
jbe
lock
and
inc
pop
scas
scas
rcrb
push
in
rcrb
mov
sbb
inc
sub
or
adc
dec
xor
xor
dec
lods
pop
lock
cmpsl
sub
push
pop
push
cmp
adc
neg
jge
xchg
jns
dec
dec
ljmp
add
add
loop
mul
mov
test
rorl
repz
es
xor
ja
jb
add
pop
in
mov
or
outsb
mov
mov
sbb
inc
ret
pop
cmp
stos
cmp
nop
mov
pop
aad
xchg
ret
fsubs
pop
test
adc
int3
sub
inc
push
out
and
fs
sub
incl
popf
jnp
aaa
dec
pop
cwtl
cmc
mov
or
pop
inc
pop
pushf
pop
or
stc
pop
into
push
mov
push
loop
enter
movsb
add
cmpsl
push
sub
in
cmpsl
stos
idivb
adcb
into
jno
dec
hlt
test
repz
jno
adc
in
jle
push
jle
leave
mov
sub
iret
xor
clc
push
lret
pop
inc
adc
inc
ss
pop
mov
rclb
nop
ljmp
call
add
dec
sub
sub
ficompl
add
add
add
das
adc
inc
sbb
xor
js
les
push
dec
adc
call
xchg
or
jecxz
fstl
or
ljmp
xchg
cmp
push
mov
push
stos
mov
mov
daa
cltd
pop
mov
es
negb
dec
sbb
rcrl
add
lods
jbe
repnz
fidivs
push
dec
dec
std
int3
arpl
xor
std
pop
test
mov
mov
adc
bnd
xchg
dec
mov
into
fwait
enter
insl
loop
repnz
sbb
xchg
roll
fdivrl
xor
xor
mov
loopne
xlat
jge
sub
or
dec
and
fs
stos
daa
in
adc
pop
or
xchg
cwtl
or
and
push
mov
dec
xor
and
dec
rcrl
iret
out
jo
add
mov
ds
lahf
xor
or
mov
ret
ja
and
aaa
divl
in
sbb
add
add
cs
jno
insb
mov
imul
inc
mov
adc
nop
push
sbb
addr16
mov
xchg
xchg
adc
jle
cmp
sti
jb
rcrb
faddl
jmp
xchg
jnp
push
adc
ss
loopne
and
orb
cmp
mov
adc
mov
or
lcall
inc
dec
lcall
push
sarb
jl
xchg
jg
jno
movsl
mov
and
jle
cli
mov
mov
push
out
push
pop
scas
rclb
sbb
xor
pop
aaa
mov
mov
in
stc
add
fsts
mov
pop
gs
jle
repnz
pop
jb
mov
into
push
icebp
ds
shlb
imul
fs
jne
adc
and
mov
jnp
mov
mov
xchg
in
in
xchg
jecxz
jmp
mov
fwait
aaa
cld
and
add
add
add
sub
dec
rclb
pop
pop
fucom
push
jmp
enter
mov
pop
iret
lahf
arpl
js
addr16
cs
loop
xchg
rcl
inc
jns
cli
les
pop
lds
sub
and
sbb
iret
jae
pusha
cwtl
dec
dec
jge
cs
jb
pop
and
cmpsb
sub
fmul
mov
aad
pop
aaa
push
and
fs
xchg
push
push
inc
sub
add
sub
jle
insb
bound
xchg
push
mov
xchg
pop
lahf
push
adc
xchg
or
sti
adc
xor
xor
mov
pop
inc
arpl
add
xor
and
or
stos
jnp
out
nop
xor
cmp
scas
jno
loopne
pushf
sti
sbb
mov
sub
cwtl
lods
cmp
inc
xchg
jge
inc
mov
mov
xchg
mov
decl
rolb
add
add
jne
pusha
popf
pop
orl
add
mov
and
mov
cvttps2pi
fdivs
mov
aaa
jbe
pop
pushf
pusha
aaa
sbb
cmpsl
push
sub
leave
jmp
or
addr16
daa
push
push
or
pop
fildl
out
div
fdivr
add
push
out
pushf
xor
faddl
leave
jl
cmp
sbb
pop
xlat
stc
jge
jne
mov
dec
and
aam
decb
orl
loopne
out
inc
ja
lea
out
dec
xor
jne
and
es
cmp
dec
push
mov
aad
pop
cmp
xor
mov
push
cmp
add
arpl
daa
mov
ret
outsb
jno
xor
fdivl
jbe
xor
ds
lods
out
test
fnstsw
push
movsl
jg
out
jp
push
mov
out
cwtl
imul
loop
cmp
pop
lds
add
xorl
add
imulb
mul
xor
mov
add
add
in
test
mov
int
pushf
push
in
insl
lcall
aam
dec
and
pushf
mov
push
testb
sub
jbe
aad
or
push
cwtl
jp
add
fwait
scas
or
cld
pusha
test
arpl
test
xor
stos
bnd
inc
fcoms
push
jge
sbb
loopne
mov
pop
dec
inc
push
insb
ja
ret
xor
inc
lcall
push
loopne
cli
xchg
out
xlat
xor
rorb
lods
rcrb
loopne
xor
push
out
loop
or
xorl
sbb
xor
cli
imul
pop
or
push
add
adc
and
push
xchg
add
or
jb
mov
xor
mov
scas
adcb
and
add
arpl
pop
mov
arpl
leave
xlat
stos
mov
sbb
mov
xorb
add
add
add
xor
jb
jae
shll
jnp
testb
add
add
roll
xchg
jb
cltd
aad
mov
mov
ret
inc
push
popa
or
movsb
in
popa
test
pop
mov
pop
pushf
pop
jae
sahf
and
xor
xor
mov
xchg
mov
shl
cmp
mov
cmp
cmpsb
jecxz
scas
inc
lods
adcl
cmpsl
mov
lock
aad
cmovae
cwtl
xor
lahf
ds
mov
fwait
push
add
or
stc
dec
push
mov
add
pop
popa
push
xchg
jecxz
fucomip
mov
movsl
or
lret
mov
wbinvd
cmpsb
mov
insb
mov
insb
push
loope
cmp
push
test
fwait
mov
fsts
sti
cmc
scas
cli
mov
dec
lds
fcompl
inc
mov
daa
xor
test
mov
ficompl
push
dec
push
jne
mov
lcall
jb
or
and
push
daa
enter
and
cmp
xor
add
ds
in
idivl
js
mov
jb
jno
pusha
testl
add
sahf
sbb
push
fdivp
divb
cmpsl
and
cmp
mov
enter
das
push
js
push
sub
pop
jmp
cmp
sub
ss
cli
dec
push
jecxz
cmpsl
outsl
out
js
mov
shrl
stc
jno
dec
bound
and
or
xor
das
push
and
out
pop
push
pop
outsb
or
ds
xchg
cmp
mov
push
sub
pop
popa
shlb
arpl
pop
and
mov
fs
cmp
mov
adc
add
aad
es
pop
pop
jmp
adc
jns
adc
dec
jg
shl
jl
inc
sbb
cmp
jge
test
xchg
mov
xchg
push
pop
loopne
fs
dec
push
stc
push
test
pop
jmp
mov
mov
mov
inc
fs
mov
outsb
adc
stos
pop
roll
enter
lret
pushf
addr16
test
add
push
pusha
add
add
add
jecxz
inc
cli
aas
into
lret
daa
mov
mov
add
add
bound
gs
dec
cmpl
lret
adc
divl
and
sahf
pop
maskmovq
xor
movsb
jge
mov
hlt
int3
or
sar
xlat
cmp
cs
frstor
xor
mov
inc
test
ljmp
cmp
xchg
fistpl
mov
jg
out
or
push
mov
mov
movsl
in
in
scas
fistpl
lea
dec
dec
pop
out
stos
lods
test
cld
xchg
and
call
mov
mov
mov
jl
fistps
lea
loop
cmp
pop
lods
push
sbbb
mov
int
mov
negb
hlt
in
lret
sub
and
icebp
xchg
push
push
ja
mov
loope
shl
pop
jl
cmp
add
cltd
jle
stos
lahf
push
mov
inc
rcl
mov
xor
cs
add
mov
lcall
test
gs
push
add
add
das
jmp
gs
push
daa
cmp
xor
or
jbe
push
push
jecxz
and
in
mov
xchg
cli
das
cld
cmp
push
mov
xor
sub
movb
sti
mov
and
andl
push
mov
mov
ret
fisubrl
gs
mov
mov
sbb
hlt
xchg
imul
movsl
outsb
push
pop
dec
int3
mov
mov
sti
sbb
loop
add
fs
pop
mov
sahf
pop
in
rcll
sbb
test
incl
gs
jae
dec
xor
push
jmp
mov
in
xchg
push
mov
test
jecxz
mov
mov
aas
dec
mov
dec
xchg
and
sbb
jns
push
rolb
push
pop
push
sahf
and
mov
mov
in
push
addb
pop
repz
inc
push
xorb
out
std
loop
and
insb
hlt
add
rcll
xchg
push
pop
mov
add
jae
cltd
dec
mov
jno
xchg
mov
or
add
add
inc
bound
lods
push
das
mov
cmp
cmp
fwait
push
cmp
pusha
mov
stc
jmp
ficoms
ss
adc
pop
xor
ret
lock
sub
clc
mov
xor
cmp
std
les
push
js
or
push
fisubl
jl
mov
add
lret
enter
cltd
mov
lea
aam
clc
repz
sbb
arpl
loope
adc
jne
adc
notl
cmp
in
add
es
dec
rolb
and
dec
fidivrl
lahf
dec
jb
ficoms
test
inc
aad
ficoml
les
movsl
fcompp
gs
pop
xor
pushf
sahf
and
or
or
mov
inc
enter
stos
adc
loop
or
rol
jg
add
data16
movsb
sarl
outsl
inc
and
mov
loopne
mov
push
mov
or
jmp
outsl
sub
inc
ds
into
nop
out
cwtl
jle
push
sub
dec
into
sbb
jo
add
add
add
dec
mov
fwait
add
imul
mov
aaa
xor
dec
add
shll
inc
insb
mov
aas
gs
jl
lret
rcrb
push
mov
xchg
dec
nop
ret
sbb
add
scas
xor
push
pop
fcomi
mov
cmpsb
sbb
and
pop
movsb
push
mov
jle
lret
iret
aaa
jge
ja
sub
in
pusha
lock
sahf
cmpsb
mov
jo
jmp
mov
sub
sub
addr16
cwtl
scas
cmpsl
mov
sahf
ret
int3
jns
push
xchg
xchg
call
outsl
fisttps
movsl
push
cwtl
xchg
lds
aad
iret
fsubp
in
xchg
out
sub
mov
call
xchg
mov
hlt
xor
addl
fldt
outsb
stc
add
xchg
mov
mov
sbb
inc
pop
fsubrp
mov
outsl
fcom
and
jge
pop
jno
test
jg
push
pop
push
mov
je
add
add
add
outsb
sbb
push
adc
inc
mov
into
cmp
lret
faddp
jmpw
and
rcrb
insl
test
dec
jle
or
mov
repnz
jae
or
push
je
jecxz
or
or
jno
lods
orb
arpl
in
jo
mov
sub
pushl
adc
sbb
xchg
cmp
nop
cwtl
ja
repz
xor
lock
adc
pop
dec
fisttpll
fidivrl
dec
ret
rorb
mov
xchg
call
mov
lcall
into
sbb
sbb
fbstp
cmpsb
pop
dec
test
mov
jge
mov
icebp
jmp
out
test
jg
xchg
sub
xchg
mov
stos
pop
push
rcrb
mov
aas
gs
out
fsts
out
stc
mov
inc
pop
push
xchg
js
add
sbb
outsb
outsb
outsb
enter
in
adc
movsb
push
in
cmc
jne
sbb
js
push
scas
popf
js
add
add
add
inc
fwait
repnz
pop
leave
jne
and
fldcw
outsb
jmp
mov
xchg
in
popf
lret
push
mov
push
push
rorl
and
mov
cmc
mov
inc
pop
mov
leave
int3
inc
aas
xor
jo
sti
fcoms
xchg
out
sub
loop
dec
orb
aas
iret
xchg
cmp
lret
xor
pusha
push
push
cmpsb
pminub
jmp
adc
add
mov
movsl
dec
inc
xchg
mov
mov
mov
jo
and
jae
cmp
or
aaa
lret
shrl
int3
mov
pop
call
int3
call
out
dec
leave
and
push
es
push
fiadds
pop
inc
sbb
cmc
or
push
rcrl
addr16
psraw
cmp
cs
mov
xchg
pop
and
insl
inc
stos
mov
xchg
mov
gs
add
add
out
shlb
aas
out
int3
mov
or
add
add
add
test
sub
cltd
sbb
lret
aaa
cmpsl
xchg
into
push
mov
stc
add
popa
loope
inc
xlat
jbe
addr16
loopne
outsb
in
and
fidivs
push
sub
sbb
lcall
fstps
dec
push
sbb
mov
sti
pop
sub
xor
adc
push
add
ljmp
das
xor
addl
inc
push
push
xchg
pop
lds
mov
ss
stos
or
outsb
push
pop
fcoms
inc
sub
aas
psadbw
leave
rcll
pop
clc
xchg
xchg
xor
hlt
pop
mov
out
repz
in
mov
int
adc
mov
inc
or
sub
fcmove
mov
rorw
mov
popa
in
jne
fs
fcom
outsl
add
clc
sbb
add
mov
pop
sbb
jge
or
mov
and
incl
add
add
scas
jg
mov
cmpsl
clc
jb
xor
lods
icebp
xchg
sub
jecxz
aaa
or
cmp
pop
pop
aam
dec
pop
call
xchg
cld
mov
leave
xor
xchg
jae
inc
pop
sbb
sbb
bound
lret
jmp
pop
sub
inc
faddl
fstps
daa
in
cmc
pop
out
xchg
jecxz
dec
and
divl
adc
xchg
sub
sbb
mov
repnz
leave
rolb
xchg
cltd
dec
adc
sub
jnp
cs
xchg
outsl
fisubs
out
sbb
jmp
arpl
sbb
cmp
xor
jne
lret
scas
ljmp
hlt
xor
jno
nop
push
push
mov
dec
loop
push
jae
xor
fimuls
stos
js
push
and
xchg
sbb
xchg
roll
cmp
inc
mov
cltd
rorb
mov
decl
mov
push
mov
dec
rol
lret
clc
cmc
inc
stos
repz
jns
test
add
add
add
mov
dec
adc
or
pop
fwait
add
xor
cmp
ja
daa
jg
xchg
aad
cli
hlt
push
call
cmpsb
sub
ja
aaa
je
mov
insl
jl
shlb
and
insl
jge
inc
mov
cmp
jo
and
movsb
mov
mov
std
add
fcomi
out
cltd
pushf
xchg
mov
xchg
pusha
test
loop
iret
jmp
je
cltd
push
sarb
adc
imul
stos
and
mov
stos
call
mov
fmul
ret
shrb
sbbb
pop
lret
add
cmpl
cli
push
clc
sti
outsl
fcoms
out
pop
xchg
jo
imul
or
aam
out
push
push
jno
xchg
and
jecxz
ja
mov
scas
mov
xchg
inc
aas
aas
leave
xchg
or
rorb
mov
mov
xchg
sarl
add
add
std
aaa
mov
shll
adc
add
add
testl
inc
push
xor
adc
adc
ret
dec
ret
daa
cmpsb
mov
pop
pop
and
loopne
out
call
in
cmp
mov
repnz
dec
popa
add
and
adc
sbb
loope
ret
cmp
jg
add
push
enter
stos
push
repnz
xchg
dec
aas
push
enter
cmp
out
ja
jg
insb
cmp
add
andl
sbb
push
rcr
jp
das
fcomps
test
and
mov
pop
je
outsb
fs
jmp
movsb
sbb
rolb
jne
cmp
sbb
outsb
push
jbe
or
inc
mov
in
mov
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
fwait
mov
xor
add
mov
mov
xor
lret
lret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
call
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
push
decl
mov
test
add
xor
add
mov
or
inc
mov
arpl
sub
incl
lea
or
incl
mov
cld
add
xchg
fdivr
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
loop
inc
out
fisttps
jecxz
in
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
add
push
decl
push
mov
call
mov
cld
add
test
loop
ljmp
fsub
add
mov
add
add
adc
add
push
inc
push
fisttps
test
out
shlb
jmp
fildl
inc
jle
test
call
out
test
in
mov
mov
add
call
rorb
add
add
xor
mov
cld
jle
add
add
inc
inc
mov
decl
add
inc
fmull
inc
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
fsub
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
jb
add
push
fildl
mov
inc
add
or
inc
call
jge
adc
mov
fwait
mov
lea
xor
call
call
jne
xor
add
pushl
call
enter
mov
xor
add
xchg
call
mov
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
loopne
sub
int
sub
inc
push
cmp
movaps
cld
faddl
jne
push
loopne
inc
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
daa
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
int3
inc
inc
add
add
xor
pushf
lea
add
inc
mov
xor
add
mov
fmull
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
mov
test
clc
pushf
inc
cmp
pushf
inc
mov
add
xor
cmovge
add
jmp
jb
add
xor
xor
add
clc
int3
add
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
enter
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
in
scas
inc
mov
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
in
jge
sub
mov
mov
mov
mov
in
ror
push
scas
mov
fwait
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
call
fcoms
lret
jb
add
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
enter
mov
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
fwait
lret
cmp
call
inc
inc
mov
mov
int3
pushf
add
add
add
clc
int3
inc
add
push
pushf
mov
enter
aas
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
gs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
enter
clc
incl
cmp
pushf
pop
lods
incl
mov
rcrb
test
sbb
add
push
loopne
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
loopne
test
xor
mov
rolb
inc
add
clc
inc
lret
mov
loopne
lret
into
into
scas
dec
mov
sub
cmp
mov
enter
add
xor
xor
lret
mov
inc
add
mov
xor
mov
in
add
bswap
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
fwait
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
call
fcoml
lret
jb
add
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
jmp
ror
or
add
not
adc
inc
push
mov
push
mov
in
sti
sbb
pop
xchg
leave
fwait
add
push
cmp
sqrtps
decl
push
cld
xor
add
push
clc
xor
add
hlt
or
mov
hlt
dec
add
mov
add
leave
push
push
mov
fcoml
inc
xor
iret
cld
lret
loopne
mov
mov
mov
cld
jne
movb
add
test
inc
incl
mov
cld
add
leave
xor
in
mov
inc
add
int3
cld
jne
call
mov
test
je
mov
cld
add
add
fiaddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
ljmp
leave
in
incl
fimull
inc
nop
loopne
ret
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jle
inc
inc
int
inc
sub
add
lret
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
jmp
out
mov
pop
push
cmp
sar
incl
inc
loopne
push
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
xor
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
insl
inc
add
testb
movl
dec
pop
add
mov
in
incl
out
inc
mov
push
jmp
add
out
insb
inc
jmp
addl
mov
outsb
inc
mov
mov
fcos
mov
in
jb
decl
mov
fdivr
out
rclb
mov
std
cmp
jne
mov
in
outsb
pushf
add
incl
incl
jae
add
incl
mov
jl
add
cld
dec
addb
data16
mov
mov
inc
mov
incw
data16
inc
jge
add
lea
add
ljmpw
pushl
lea
shlb
test
incl
test
inc
push
xor
add
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
loop
xchg
aam
out
mov
inc
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
data16
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
movswl
xor
add
xor
xor
decb
mov
pushf
inc
decl
sar
decl
incl
addl
xlat
dec
add
mov
lea
call
inc
rdpmc
add
push
lea
js
add
push
lea
fmuls
jmp
dec
mov
mov
call
dec
inc
mov
push
into
test
call
lea
jmp
inc
jnp
add
incw
mov
inc
add
mov
decl
add
data16
inc
dec
test
cmp
add
mov
incl
mov
ljmp
push
incl
call
decl
mov
inc
mov
mov
add
inc
mov
mov
pop
test
clc
lea
cmp
push
lea
mov
hlt
lahf
push
mov
xor
add
mov
mov
rolb
mov
nop
push
add
mov
in
jge
test
jne
sbb
push
inc
call
add
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
xor
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
rdmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
fwait
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pushf
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
fwait
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
push
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setnp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
decb
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
loopne
cmp
inc
daa
loopne
in
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
in
add
add
and
fs
incl
jle
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
fwait
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
add
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
popa
data16
into
gs
add
ret
add
add
add
cmp
add
into
ret
pop
adc
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
ss
fs
mov
je
xor
mov
ss
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
test
clc
test
cmp
fs
or
add
lret
xor
pushf
mov
ret
pop
dec
mov
push
add
xor
cmp
je
mov
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
cmp
add
lret
lock
clc
inc
lret
cmp
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
fwait
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
fwait
fwait
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
fwait
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
xor
pushf
push
movl
dec
inc
cmpb
pushf
gs
shl
dec
xchg
shr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
xor
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
cmp
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
xor
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
pushf
add
mov
xor
test
clc
dec
inc
xor
pushf
rorb
lea
int3
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
fwait
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
and
and
call
in
jmp
je
call
and
call
and
push
or
pop
mov
and
mov
and
mov
jne
test
decl
sbb
jl
adc
dec
mov
mov
and
xor
or
add
clc
jmp
adc
inc
je
and
je
mov
decl
sbb
add
add
adc
mov
adc
add
add
adc
sub
add
imul
add
xor
inc
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
jo
add
pop
adc
push
adc
add
insb
adc
jb
adc
push
ss
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jge
add
or
add
sub
add
insb
adc
addr16
add
adc
lds
add
ss
add
ss
add
ss
add
ss
add
adc
clc
cmp
add
pop
adc
mov
adc
add
adc
cmp
shll
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
adc
fwait
pop
adc
jnp
adc
pop
adc
popf
jno
add
inc
adc
sbb
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
pop
inc
dec
xor
push
add
xor
pop
inc
push
pop
dec
xor
push
add
cmp
xor
xor
pop
inc
add
dec
cmp
xor
pop
pop
xor
inc
add
inc
pop
cmp
push
inc
xor
xor
inc
inc
inc
cmp
dec
inc
add
push
xor
push
aaa
dec
pop
xor
dec
add
inc
xor
push
pop
push
inc
add
xor
cmp
push
push
push
pop
inc
push
push
add
inc
pop
pop
push
inc
pop
inc
add
cmp
inc
xor
pop
pop
cmp
inc
xor
dec
add
pop
cmp
xor
cmp
dec
dec
cmp
pop
dec
xor
xor
pop
inc
push
inc
inc
add
cmp
push
inc
xor
pop
dec
dec
ss
pop
push
cmp
pop
push
dec
add
inc
cmp
dec
xor
inc
xor
xor
push
add
xor
push
cmp
ss
pop
push
inc
xor
dec
inc
xor
dec
pop
push
add
inc
add
pop
add
add
add
xor
add
add
push
add
xor
add
inc
add
xor
pop
add
add
xor
add
xor
add
push
add
dec
add
push
add
push
add
pop
add
dec
add
push
add
pop
add
add
dec
add
cmp
pop
add
add
add
add
add
push
add
cmp
add
add
push
add
add
add
inc
add
inc
add
push
add
dec
add
add
dec
add
inc
add
dec
add
add
add
push
add
add
push
add
add
pop
add
add
inc
add
add
push
add
add
push
add
dec
add
add
aaa
add
add
pop
add
inc
add
xor
push
add
push
add
add
push
add
add
add
inc
push
lcall
inc
mov
or
mov
push
cmp
addr16
bound
outsb
pop
je
ja
imul
js
jp
jns
jp
je
jp
jo,pn
bound
