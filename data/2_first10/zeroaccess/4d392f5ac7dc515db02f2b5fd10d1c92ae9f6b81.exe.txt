push
mov
sub
mov
movl
mov
mov
movl
movl
movl
cmp
movl
jne
mov
push
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
movl
xor
addl
mov
xor
push
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
mov
xor
add
addl
movzwl
add
not
or
and
movzwl
xor
mov
sub
mov
adc
mov
sbb
mov
sbbl
push
or
mov
dec
movzwl
mov
sub
mov
mov
xor
or
add
movl
movl
mov
orl
mov
movzbl
or
lea
mov
mov
mov
addl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
movl
mov
mov
andl
xor
xor
andl
xor
andl
add
movl
add
div
movl
mov
movl
cmp
movl
je
movl
lea
sbb
mov
mov
jmp
popa
xchg
mov
mov
mov
daa
or
jg
jo
xlat
cmp
rol
pop
push
add
jns
rdpmc
cmpps
adc
mov
add
mov
sbb
lods
sarb
or
sahf
jp
inc
lods
push
sub
mov
stos
js
roll
jmp
mov
dec
fcomps
pop
test
sub
mov
pusha
nop
mov
and
jmp
out
repnz
xchg
xor
jbe
xlat
and
add
adc
xor
or
fldl
xor
pop
push
or
pop
fstps
jno
mov
ja
sbb
xor
into
cmpsb
cs
fs
cmpsb
dec
iret
jae
lock
repnz
lock
push
push
xchg
aaa
mov
mov
adc
cs
dec
out
cmp
in
clc
cmp
pop
sbb
xchg
jecxz
aaa
xor
fcomp
rcrl
shrb
popa
insl
cmpsl
push
dec
mov
movl
icebp
cmc
test
jmp
push
je
lods
ficoml
push
iret
gs
mov
mov
gs
addb
sbb
scas
mov
adc
inc
cli
dec
bound
daa
leave
add
and
push
pop
jge
sbb
jno
adc
out
inc
out
jnp
cmp
out
daa
mov
push
pop
cmc
repz
mov
adc
in
test
mov
cmp
jmp
push
fcmovnb
mov
xlat
les
test
cmp
jo
jg
jo
mov
scas
outsl
lea
adc
rorl
in
sbbl
jl
orb
leave
cmpsb
adc
ret
adc
cwtl
push
add
sti
mov
es
outsl
imul
mov
mov
cmp
iret
xorl
movsb
xchg
or
fidivrs
repz
and
outsl
ljmp
or
testb
bound
mov
pop
addb
movsb
lea
inc
jmp
xor
mov
pop
mov
xchg
scas
cmpsl
jl
sahf
add
pop
clc
ret
in
adc
pop
dec
fildll
pop
or
push
scas
adc
adc
pop
fidivrs
or
mov
cmp
mov
mov
jmp
cmp
add
sti
xchg
mov
pop
jno
and
xor
or
test
mov
and
pop
inc
call
cmp
xchg
xchg
psubq
popa
jno
scas
mov
add
and
push
inc
lret
cs
xor
dec
int3
push
add
in
adc
inc
mov
mov
cmc
in
mov
sub
add
mov
orl
jmp
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
xor
mov
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
mov
add
jmp
clc
repnz
icebp
pusha
xchg
rcll
jbe
dec
jle
jo
jg
jo
fisubrs
cmp
mov
pop
sub
fs
lahf
xchg
jl
gs
cmpsl
rcll
jge
into
mov
cmp
shrb
ret
cmc
cs
push
mov
push
lods
dec
xor
sahf
lock
fldt
fcomp
mov
call
es
scas
mov
jecxz
xchg
sbb
cli
push
cmpsl
dec
mov
pop
push
aam
xchg
fwait
loope
sub
stos
fistpl
je
add
fadds
or
sbb
jmp
loopne
sbb
sbb
xor
jbe
pusha
je
sbbb
adc
ds
pop
mov
cmp
int
je
pop
sub
fsts
inc
js
push
xchg
imul
pop
pop
pop
inc
xor
adc
mov
ss
cmp
xor
mov
cmpsl
dec
jecxz
sub
pop
add
push
sub
lds
insl
je
dec
push
xchg
imul
pop
adc
loope
pop
repnz
in
cmp
add
add
lahf
ja
cli
dec
das
pop
push
inc
iret
add
cmc
jle
aam
ss
push
das
outsl
and
jo
out
adc
dec
mov
mov
mov
xchg
in
jge
pop
scas
call
pop
test
pop
lcall
mov
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
jmp
pop
arpl
out
xchg
imul
jae
mov
jl
jo
jg
jo
and
inc
push
sbb
mov
or
xchg
js
or
inc
es
or
push
lret
es
add
dec
jge
inc
sub
push
push
push
push
outsl
test
ja
int3
jnp
adc
mov
cmp
mov
jb
cltd
lds
leave
bound
sahf
inc
jmp
paddd
xorl
or
adc
fildll
lock
int3
mov
add
jge
roll
es
inc
pusha
sub
and
and
pop
mov
mov
mov
clc
enter
adc
adcb
enter
fidivs
stos
dec
sti
clc
test
aas
and
add
fistps
mov
mov
jne
rcrl
push
roll
out
add
insl
out
and
inc
jb
mov
addl
push
movb
sub
repz
lcall
sarl
rcrl
dec
aam
lds
scas
mov
dec
mov
movsl
cmp
mov
mov
and
jle
add
xor
push
sbb
adc
xchg
outsl
or
sub
or
ret
or
add
mov
addl
jmp
mov
cmpl
jne
mov
xor
add
test
jne
xorl
jmp
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
jmp
addr16
movsl
insl
jne
out
cmp
mov
movsb
jnp
jo
jge
jo
jge
xor
and
adc
loopne
cmc
int3
jnp
jbe
xor
fsubp
lret
jbe
pop
dec
fadds
push
rcrl
mov
rclb
icebp
mov
mov
xchg
lahf
or
mov
js
imul
mov
stos
inc
xor
mov
ficoml
push
cltd
js
dec
dec
xor
movl
sti
int
adc
lods
and
fbstp
fdivs
or
cmp
aam
cmp
cmpsl
movsb
int
jge
lea
mov
jge
sub
xchg
enter
sbb
dec
inc
fisubs
xchg
test
pop
sub
push
fdivrs
cltd
xorl
cmp
add
cmp
rcrl
xchg
or
lock
dec
pop
xor
fs
cld
adc
add
xchg
jecxz
xchg
xchg
xor
adc
xor
jmp
lahf
push
outsl
add
stos
push
push
mul
cmc
pop
sarl
or
out
push
xchg
je
sahf
in
cmpb
out
sti
sub
add
pop
pop
cmp
pop
xor
mov
loopne
stos
adc
insl
add
lods
popf
in
or
pop
gs
shll
fs
lods
xor
pop
repnz
jo
into
add
lods
arpl
mov
pop
fidivs
pop
ret
cmc
lret
xchg
fs
inc
rorb
xchg
nopl
mov
movsb
push
adc
mov
ljmp
xlat
push
fcompl
push
sub
cmpps
xor
dec
bound
das
inc
push
jl
add
sub
in
jp
cmp
push
dec
xchg
mov
insb
ja
pop
dec
clc
popa
cmovns
aas
lcall
adc
add
cmp
hlt
imul
scas
mov
push
inc
inc
ja
sti
dec
and
mov
ss
js
loope
inc
loope
bnd
cs
data16
lret
add
mov
pop
mov
std
insl
dec
mov
aas
xchg
aaa
int
pop
test
inc
push
sbb
jb
call
sub
lds
pop
in
loop
or
mov
sarb
mov
jo
dec
das
adc
and
jmp
cmpsb
scas
sub
das
cwtl
push
pop
push
and
mov
push
add
xchg
sub
dec
leave
ror
test
test
jno
lret
jle
test
sbb
pop
ja
cld
xchg
or
xor
data16
popf
ds
in
lods
jns
inc
nop
mov
push
stos
add
cmp
ror
nop
adc
inc
imul
push
lock
pushf
sub
in
mov
and
imul
ds
dec
sub
bound
andl
js
cli
ds
fists
sub
idiv
mov
push
mov
pusha
dec
jnp
cmp
pop
adc
mov
inc
sbb
sbb
push
dec
rcrb
mov
outsl
adc
leave
lock
mov
out
imul
mov
xor
sbb
jbe
pop
out
push
jmp
mov
dec
xlat
cmc
adc
mov
lock
push
into
mov
inc
push
mov
sub
aam
mov
dec
pop
fsqrt
inc
fadds
inc
inc
add
sub
mov
sbbl
jmp
add
arpl
pop
push
cmp
jo
xchg
jge
jo
dec
inc
pusha
xor
sbb
cmp
arpl
iret
mov
push
ds
test
mov
daa
xchg
dec
cmpsb
aam
dec
sbb
insl
daa
repnz
fidivrl
push
sub
dec
hlt
sbb
stos
xchg
pop
lods
cli
lret
jge
and
cld
jle
inc
popa
data16
or
cmpsb
ljmp
out
test
fsubp
nop
enter
push
jge
adc
das
mov
cmc
pusha
orl
dec
daa
scas
mov
jo
lahf
inc
iret
mov
lcall
sti
popf
out
cmp
cmp
aad
pusha
mov
jle
push
jmp
leave
jmp
movl
sti
test
push
out
sub
push
inc
rcr
test
sbb
xor
push
imul
adc
mov
add
data16
negb
movsb
es
in
dec
fcmovnb
xor
mov
enter
push
in
and
add
dec
rolb
das
xor
fimull
fwait
scas
mov
out
pushf
adc
fnsave
mov
in
or
sub
ss
out
cmpl
aaa
add
ret
je
sti
xchg
test
xor
lret
lods
adc
cmpsl
out
and
mov
enter
or
dec
enter
int3
jl
je
push
adc
jecxz
sti
mull
mov
sub
in
push
je
cmp
fcmove
sahf
cmp
mov
fisubs
mov
aam
or
lea
mov
sahf
dec
ljmp
jae
push
jne
jle
xlat
sbb
js
popf
stc
or
repnz
xchg
adc
dec
nop
or
test
jge
sbb
push
push
call
sbb
mov
mov
cmp
shrb
mov
pop
mov
inc
cvttps2pi
and
sub
rolb
popf
and
call
mov
ljmp
or
into
jmp
pushf
xor
mov
shlb
imul
pop
fs
sbbl
adc
push
cmc
xchg
pop
jnp
jl
pop
f2xm1
pop
sbb
mov
lcall
dec
sbb
dec
pop
xor
out
mov
out
shrl
das
jno
jb
aad
xchg
fsubr
cmp
push
cli
stos
mov
xor
fmulp
lcall
out
lret
test
dec
pusha
in
xchg
lods
push
push
in
ret
sub
icebp
mov
pop
aaa
cltd
or
nop
in
push
test
rcll
jmp
jae
add
mov
loope
test
mov
out
mov
push
mov
jno
xchg
ficoms
hlt
test
push
xchg
jmp
xchg
cld
sub
cmpsl
test
test
sti
imul
outsb
aam
je
pop
add
stos
jns
cmp
push
sbb
mov
stos
ficoml
dec
mov
sti
xorb
sahf
cld
adc
aaa
jmp
aam
add
sbb
aaa
test
jge
gs
cmp
shrb
jbe
sbb
cmpl
mov
pusha
adc
popa
adc
adc
pusha
jge
cmp
lahf
mov
pop
pop
rcrb
movl
mov
mov
sbb
jmp
in
lock
mov
push
scas
int3
cmpsl
jnp
nop
jecxz
add
jo
jge
jo
xchg
jp
xchg
insl
mov
std
lahf
pop
std
inc
std
sti
pop
cmp
lret
or
xlat
das
mov
jne
imul
lahf
aaa
ret
xchg
aaa
jo
test
insl
mov
add
call
int3
sub
fs
xor
jg
es
lahf
aam
push
mov
mov
popf
pop
std
jns
sbb
push
adc
mov
xchg
adc
inc
or
mov
lcallw
aad
sub
sti
jl
add
add
sbb
js
jl
dec
push
cmp
inc
cs
lds
scas
mov
inc
sbb
out
imul
repz
adc
insl
jae
loope
in
pushf
add
add
xor
icebp
dec
inc
je
lods
jo
xchg
js
inc
cld
push
movsl
dec
fstl
test
mov
mov
pop
pop
fisubl
dec
sub
sub
or
outsb
push
cmc
adc
or
pop
and
negl
outsl
jle
adc
scas
ret
mov
lea
mov
and
cmp
inc
imul
ror
and
jns
sbb
lcall
push
clc
daa
lahf
loopne
fnstenv
lock
pop
adc
adc
hlt
mov
xor
popf
mov
je
pop
add
pop
stos
mov
inc
xor
lds
sbb
je
addr16
dec
popa
adc
mov
lea
push
repnz
add
rolb
in
or
shlb
xor
popf
clc
dec
sti
pop
rcll
and
int
push
insl
aaa
lock
mov
sbb
mov
and
inc
bound
xor
out
add
jo
xor
mov
cmpsb
sbb
call
xchg
xor
sti
lods
ss
xchg
ja
adc
xchg
pop
and
and
mov
xchg
mov
nop
decl
xchg
fists
adc
mov
lods
mov
imul
mov
push
rorl
mov
sub
ret
pop
add
out
repz
dec
pop
cs
inc
rcr
push
aad
jecxz
mov
icebp
pop
sarl
rcrb
nop
push
or
lea
pushf
divl
jmp
pop
loopne
stc
xor
push
mov
pop
andnps
xor
stos
sub
das
shl
pop
loope
leave
gs
adc
mov
and
mov
insl
push
or
in
imul
cmp
cwtl
setb
sbbb
int3
jae
sbb
mov
cmp
lcall
je
addr16
and
fisubs
inc
adc
cmpsb
mov
out
add
jne
mov
push
dec
adc
imul
pushf
fisttps
mov
xchg
mov
popf
jl
adc
jae
out
pop
mov
pushf
fs
mov
sbb
adc
bound
pop
inc
movsl
mov
jp
aad
xor
pop
push
mov
int3
fmull
repz
jae
jb
cwtl
xor
pop
push
ljmp
fwait
add
push
add
popa
shlb
stos
jg
pop
stos
test
adc
inc
imul
arpl
dec
icebp
sbb
pop
scas
mov
sub
push
add
mov
xor
and
mov
push
mov
addl
add
jmp
mov
cltd
or
or
add
pop
aad
add
xchg
jge
jo
fwait
inc
and
int3
jl
mov
ret
repnz
xchg
incb
mov
and
sbb
dec
movl
std
adc
enter
push
cmp
lea
push
adc
mov
cli
jecxz
xchg
dec
add
fs
and
insl
outsl
test
repz
sbb
xor
mov
and
in
lret
push
xchg
cmp
xorl
jecxz
fcompl
cmp
pop
mov
lahf
xchg
cmp
scas
rcrl
push
std
test
inc
mov
aaa
xor
add
mov
gs
mov
arpl
icebp
pop
sub
jnp
or
int
mov
outsb
adc
das
lret
popf
add
insl
jno
dec
popa
sbb
push
lret
dec
clc
pop
mov
add
or
dec
test
adc
lret
mull
rcrb
cmp
lea
add
rolb
out
or
ret
mov
cmpl
pop
pop
dec
dec
in
int3
std
xchg
mov
je
pop
cmpsb
sub
xchg
adc
or
xor
jge
dec
sub
cli
add
pop
cli
loope
dec
ds
jle
jb
cmpsl
cmp
mov
call
imull
mov
rol
dec
cltd
ds
lret
xchg
repnz
xchg
in
mov
cmpsb
insl
adc
idiv
lret
push
hlt
jne
ret
test
mov
lsl
xor
mov
mov
adc
mov
mov
add
sub
lcall
roll
inc
jae
imul
cs
mov
pop
mov
shll
scas
mov
shrl
push
add
sub
fildl
add
bound
sub
pop
mov
push
sbb
cltd
adc
add
push
add
ficoms
ljmp
loope
mov
push
repz
dec
popa
jp
jae
scas
lock
cmpsb
jp
xchg
add
aas
popa
dec
adc
mov
into
out
in
push
inc
shrl
pop
scas
push
jb
mov
jle
daa
xchg
mov
jge
xchg
pushf
jb
ret
ljmp
dec
xchg
insl
fcmove
std
mov
mov
pushf
enter
pop
js
adc
jb
sbb
mov
dec
or
outsb
mov
xor
ljmp
test
loop
sbb
jle
push
and
outsl
in
in
fldcw
lret
shll
outsb
mov
xor
or
or
scas
jb
in
in
adc
ljmpw
rcrl
into
clc
fadds
and
loope
push
test
dec
lret
dec
sbb
loop
pop
mov
mov
popf
nop
cmp
rcll
adc
fldcw
push
and
loop
cmc
inc
es
dec
and
and
inc
stos
sub
lds
push
inc
cmp
lret
pop
add
cli
stos
xchg
mov
adcb
adc
shrb
clc
xchg
cmpsl
lods
xchg
adc
cmp
jns
jmp
aaa
xchg
lahf
pop
outsb
push
sti
cmp
stos
outsb
xchg
bound
add
cli
movl
je
and
mov
sbbl
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
pushl
push
call
jmp
mov
sub
add
xor
adcl
add
movl
cmp
ja
push
jmp
mov
mov
jmp
mov
in
inc
sub
pop
mov
or
jo
jge
jo
xor
test
gs
arpl
pop
xchg
cs
outsb
mov
xor
cmpsb
xchg
test
pop
bound
repnz
aaa
int3
repz
or
aad
xor
xor
xchg
or
push
pop
pusha
lahf
popa
dec
jle
popa
lods
stos
jne
cmp
cmpb
mov
out
es
leave
cwtl
pop
pop
sbb
mov
push
xchg
sub
sub
push
pop
in
and
cmp
dec
mov
nop
js
stos
hlt
rcll
xchg
scas
call
call
jns
rclb
ds
sbb
popf
ja
lahf
push
rcrl
mov
dec
call
push
fnsave
cwtl
mov
or
push
mov
push
jae
mov
adc
or
jo
test
ja
mov
les
dec
adc
int3
pop
pop
es
inc
pop
jle
test
sbb
in
pop
fwait
cwtl
cltd
sub
fisubrs
es
hlt
out
add
pop
insl
rcrb
dec
cli
pop
mov
out
and
mov
mov
mulb
sbb
mov
mov
movsb
mov
les
xchg
call
icebp
out
loopne
call
scas
mov
loopne
and
push
dec
xor
into
dec
jns
inc
jg
sub
mov
jb
out
lret
push
shlb
inc
out
cmc
mov
ss
test
dec
xchg
mov
pushf
test
adc
pop
inc
adc
push
or
leave
cmpl
cwtl
scas
pop
fcompl
jg
aad
fdivrl
aam
push
xchg
out
loopne
inc
repz
lahf
xlat
pop
jo
mov
std
int3
cs
outsl
sub
dec
std
inc
push
dec
sbb
iret
jmp
and
orl
stos
mov
sarb
xor
and
add
xchg
sub
push
jle
xchg
sub
or
in
fsubrs
mov
jecxz
mov
add
jno
jp
mov
sbb
xchg
mov
push
add
scas
sbb
and
enter
xchg
push
mov
insb
jp
in
mov
movsb
cmpsb
pop
daa
arpl
mov
stos
in
xchg
stc
mov
out
push
rcrl
mov
add
inc
lods
jbe
fsubrl
fidivl
sub
adc
push
neg
cli
pop
xchg
xchg
stc
push
push
xor
popf
jge
sub
pop
sub
jl
cmovnp
xor
cltd
inc
adcl
xor
movsb
sahf
lcall
lods
inc
in
xchg
test
leave
push
inc
push
xor
mov
stos
in
xor
push
push
movswl
test
hlt
add
or
in
aas
mov
add
in
outsb
sub
bound
inc
cmp
mov
dec
aad
loopne
insb
test
lcall
xor
sub
mov
mov
bound
sbb
lret
test
insl
outsb
stos
loope,pt
repz
ljmp
aad
dec
jg
or
ja
sbb
cmpsb
add
jbe
aas
push
or
push
xor
scas
xor
jmp
mulb
push
mov
jmp
cs
loopne
in
jnp
jmp
xorl
jo
jge
jo
or
sub
adc
add
xchg
pop
mov
mov
cwtl
pop
bound
pop
push
sbb
aad
lods
arpl
sbb
jno
out
das
in
dec
jg
jecxz
jns
es
pop
iret
inc
aaa
hlt
nop
aas
icebp
repnz
inc
jmp
lcall
stos
in
test
les
xorb
jecxz
loope
pop
iret
cmp
xchg
pop
inc
fistpll
or
lods
jo
mov
int
cmp
es
stos
int3
xchg
jg
out
ss
xchg
pop
nop
cmp
mull
cmp
cmp
push
and
push
lea
addr16
cmp
xchg
dec
xor
pop
push
loope
xchg
fcmovbe
out
mov
jno
push
sbb
dec
push
icebp
outsb
sbb
push
shlb
inc
sahf
inc
cmp
int3
jnp
mov
and
lahf
or
sbb
repz
stos
in
lods
cli
pusha
dec
cld
inc
ret
dec
bound
out
idiv
test
andb
pop
sub
cmpsb
xchg
loopne
popf
lret
inc
sub
cmp
cli
out
insl
test
lea
sbb
pop
pop
aaa
push
pop
push
out
xor
xor
out
sbb
arpl
add
add
xor
mov
aaa
pop
dec
and
xor
or
jg
inc
fsts
mov
inc
js
mov
xchg
repnz
xor
mov
adc
or
xor
pop
lock
ds
pop
cmp
cmp
inc
outsb
cmp
mov
in
jle
fwait
jp
loope
pop
mov
xor
lret
fildl
mov
out
pop
loop
out
add
daa
ret
push
das
adc
xchg
push
mov
cmpsl
jb
or
in
inc
mov
test
sti
les
test
out
mov
xchg
xchg
pop
or
fcompl
add
pusha
and
out
xor
movsl
pop
outsl
mov
cmp
out
and
jg
push
add
jbe
loope
mov
push
or
neg
xor
fsubrs
and
jnp
aam
push
and
je
das
ficomps
pop
add
out
nop
pop
dec
movsb
aad
lahf
in
mov
inc
cmp
xor
xorb
xor
push
dec
inc
xchg
ret
test
sbb
push
mov
mov
js
pop
jno
inc
pop
je
out
sbb
enter
push
lea
jmp
rcr
movsl
mov
fistps
ds
add
insb
into
mov
das
add
pop
lds
xor
push
aam
xlat
rcrb
cmp
mov
js
aad
aas
inc
jle
jle
stc
push
lret
ds
jo
xchg
leave
iret
or
ret
test
push
loop
cmp
pop
lahf
stos
dec
xchg
cmp
mov
jg
scas
ret
or
les
add
inc
xchg
mov
mov
imul
dec
pop
faddl
push
xchg
jns
pop
sub
or
pop
cmpl
rclb
mov
fimull
pop
dec
sar
mov
xchg
adc
push
mov
mov
decl
push
inc
outsb
dec
mov
jmp
data16
in
int3
jne
popa
jno
imul
idivl
adc
jo
loope
pop
popa
pop
in
mov
cld
repz
in
arpl
pop
xchg
push
pop
sti
mov
cmpsb
xchg
push
xchg
pop
sbb
pusha
lahf
jno
adc
lods
mov
lret
cmp
stos
std
and
xchg
out
shll
pop
sarb
cmpsl
incb
iret
adc
cmp
inc
jp
pop
inc
push
lahf
cld
cld
add
adc
xchg
mov
dec
xchg
cmp
inc
xlat
pop
ficoml
xchg
dec
rcll
aad
pop
in
xor
daa
repz
xchg
jle
aaa
lock
cmp
fildll
cmp
sub
dec
lahf
cmp
mov
dec
xchg
xchg
movsb
cs
ss
fidivs
je
insb
push
popf
ja
sbb
repnz
sub
call
inc
pop
inc
sbbl
and
pop
jecxz
movsb
call
inc
push
int
jmp
cmp
jno
loop
mov
outsl
gs
or
pop
sub
mov
cli
pop
inc
loope
pop
cmpsb
and
fisttpl
daa
ss
push
hlt
and
out
clc
test
daa
mov
int3
sbb
ffreep
insl
sub
es
es
stos
test
fs
shl
cs
call
cmp
fcmovne
sbb
push
mov
jl
icebp
xor
inc
sbb
mov
mov
mov
shrl
jns
shrl
inc
popl
cltd
adc
xchg
mov
orb
fbld
adc
or
ror
cmpsl
jb
je
sub
mov
push
ja
les
or
test
jmp
jb
loope
push
adc
or
pop
mov
call
or
pop
xchg
movl
fs
clc
mov
in
dec
std
dec
sbb
pop
sti
iret
sbb
ficoml
movsb
dec
cmp
mov
push
push
mov
test
repz
mov
mov
test
and
outsb
test
movsb
scas
mov
xchg
and
mov
lea
into
and
cmp
hlt
mov
into
dec
xchg
sub
lcall
repz
xlat
out
xorl
stos
xchg
push
dec
xor
pop
fistl
lds
test
mov
dec
out
push
pop
jmp
jae
ret
aam
cmp
sub
push
adc
lcall
jb
jle
shlb
adc
es
mov
jb
xor
xchg
loope
dec
jg
daa
push
inc
stos
test
test
sbb
mov
push
dec
clc
jmp
das
sbb
ds
lods
test
pop
xlat
pop
mov
cmpsb
push
lret
add
or
cmpsl
insb
pop
rol
rcrb
cltd
mov
rol
mov
mov
xor
xchg
dec
adc
aad
cmpsb
fidivl
dec
jp
les
add
aad
icebp
add
enter
lock
inc
xchg
cmp
insl
mov
scas
aam
bnd
nop
mov
fwait
or
and
dec
fcomps
dec
inc
pcmpgtw
rolb
rorb
sbb
cli
test
in
mov
in
fisttps
and
add
mov
imul
mov
jmp
jle
mov
xchg
icebp
repz
sahf
push
mov
jo
xchg
jge
jo
in
cltd
and
loope
fcomip
sbb
inc
jb
push
push
and
rclb
ja
into
hlt
aad
inc
inc
jnp
sbbb
pop
ffree
out
fcomps
push
push
movsb
mov
fwait
cmp
mov
adc
icebp
lods
push
sub
sub
int
cmp
add
mull
push
inc
loop
or
xbegin
out
test
jecxz
shrl
outsl
inc
mov
pop
inc
mov
sub
ret
sub
pop
les
push
aad
dec
iret
imul
ja
inc
push
sub
std
repz
loopne
mov
or
loopne
pusha
cmp
sub
cltd
in
push
bound
movsl
adc
mov
je
adc
jp
popa
loope
dec
mov
jb
fimuls
add
data16
out
jp
ficomps
push
dec
loope
mov
pop
inc
sbb
lret
fxch
arpl
aas
and
cmpsl
mov
mov
sahf
adc
xchg
call
pop
mov
pop
push
testl
xor
mov
popa
lahf
pop
idivl
mov
daa
mov
ret
mov
push
imul
add
xchg
xor
jg
cmpsl
inc
cmp
rclb
pop
dec
in
hlt
sbb
xchg
xchg
mov
sub
in
sub
js
mov
es
cli
xchg
into
sub
out
jle
mov
and
daa
cmc
movsl
jbe
lods
push
sahf
shlb
jnp
or
dec
data16
push
sub
jbe
loope
xor
shll
sbb
gs
add
or
push
out
add
jnp
aam
mov
jnp
cwtl
mov
jmp
or
into
out
rol
xor
mov
inc
or
add
mov
scas
push
imul
jae
inc
ds
in
mov
add
mov
ss
std
lods
cmpsl
dec
into
inc
cmp
stc
data16
adc
add
cli
pop
pop
xchg
jle
mov
int
mov
or
pop
ret
xor
clc
jns
push
bound
adc
xor
pop
out
fnstenv
es
mov
int
test
ret
inc
pusha
dec
rcll
arpl
pop
or
pop
aam
jne
and
outsl
push
cmp
mov
cmp
xchg
jl
je
lds
push
cwtl
fcom
xlat
ret
adc
out
adc
sbb
ds
dec
fs
cli
cmp
fidivl
sahf
shll
lahf
lods
xchg
test
cmpsl
dec
cmp
dec
or
add
addb
dec
and
jbe
mov
stc
push
pop
out
push
xor
add
dec
fildll
or
mov
pop
cmp
adc
nop
ds
mov
jp
sbb
mov
out
call
ljmp
insl
adc
inc
pushf
dec
lea
je
xor
sti
lods
mulw
adc
dec
mov
movsb
cmp
lahf
sub
in
mov
push
push
jo
ret
push
push
sbb
inc
pop
xchg
mov
movsl
mov
push
mov
mov
and
in
push
mov
andl
insb
xchg
adc
roll
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
sub
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
mov
add
mov
xor
mov
adcl
add
movzbl
sub
movzwl
adc
mov
and
movb
xor
or
xor
mov
lea
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
call
mov
dec
mov
jmp
mov
mov
adc
mov
xor
sub
andl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
and
movl
movl
add
mov
or
mov
jmp
and
pop
icebp
jae
lods
imul
mov
and
sbb
jo
fprem
fistpl
lods
bound
sub
mov
pcmpgtb
arpl
adc
addl
push
dec
ja
or
jmp
iret
scas
jecxz
jbe
cmp
cmp
xchg
cmpsb
jo
or
cwtl
push
ficoms
cmp
and
outsb
xchg
daa
movsl
aaa
xor
sbb
dec
cltd
data16
xchg
hlt
push
lods
jns
sbb
arpl
ljmp
stos
add
dec
push
xor
jecxz
fisubs
mov
enter
fsubs
jns
data16
scas
push
mov
in
fsubs
xorb
mov
shll
jmp
orb
pop
and
stc
adc
mov
xchg
add
pop
mov
xchg
cld
xor
and
or
sar
jne
loope
arpl
pop
and
mov
lret
xchg
lods
mov
pop
mov
add
push
stc
and
in
outsb
sbb
addr16
hlt
lcall
mov
sbbl
add
movl
jmp
movl
mov
mov
inc
cmp
jmp
sbb
movsb
scas
xchg
sub
sub
mov
xchg
sbb
jo
add
cld
ds
mov
insl
xchg
jnp
jge
xchg
adc
iret
inc
rorb
ds
out
xor
mov
ficompl
cmp
sbb
dec
jnp
je
push
test
cmp
xor
stc
inc
xor
xor
push
jns
jo
adc
push
ret
push
push
push
ja
cmp
mov
les
adc
adc
test
movsl
sarb
int3
dec
inc
jge
cs
pop
stos
and
or
inc
sarb
or
sub
xchg
or
xchg
xchg
push
stos
fimull
adc
outsl
test
int
cld
xchg
adc
adc
shlb
es
and
lods
and
scas
and
push
std
popa
fsubrl
sbb
enter
rclb
dec
push
cmpsl
es
push
pop
and
iret
pop
insl
inc
test
or
addr16
push
jp
jg
adc
xchg
pushf
lods
add
mov
out
add
addl
mov
dec
aam
jmp
decl
lcall
add
push
add
add
rolb
lcall
inc
inc
add
add
jae
cmpl
jne
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xor
add
cmp
jmp
inc
sub
xorb
jmp
inc
mov
push
aad
sarb
jo
dec
int3
js
inc
pop
xorb
stos
cwtl
mov
call
jns
fdivrs
ret
cmp
insl
jne
js
out
and
mov
add
xchg
push
movsl
pusha
lds
push
xchg
shl
mov
imul
sbb
jne
ret
orb
mov
and
dec
shll
mov
mov
insl
into
or
shrb
jecxz
mov
xchg
or
lret
and
pop
ds
cmpsb
inc
jmp
iret
daa
fcmovnu
add
mov
or
or
mov
push
adc
pop
lcall
adc
push
clc
ja
dec
dec
jnp
subl
pop
pushf
arpl
rorl
repz
cmp
sahf
mov
and
adc
mov
sti
or
mov
loope
cltd
mov
jae
pusha
mov
aad
push
movb
rorl
jge
jbe
jecxz
adc
jno
fisubl
mov
je
push
push
mov
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
jmp
cmpsb
fisubrl
jmp
lds
shll
jo
jg
jo
rcll
mov
mov
lcall
pop
dec
xor
test
jb
imul
cmpsb
je
or
js
daa
add
fwait
rolb
into
mov
std
mov
scas
dec
les
popf
insb
ret
fldt
inc
mov
les
cmpsb
nop
dec
fidivs
stos
stc
sbb
sub
lret
and
inc
cmc
mov
mov
nop
mov
mov
mov
lods
mov
push
imul
fldcw
dec
call
sarl
outsl
jno
cltd
insl
or
mov
dec
pop
test
lods
xchg
cmp
ret
push
push
dec
xor
aaa
inc
sub
scas
stos
gs
repz
cli
repz
cmpsb
fs
test
push
in
mov
sub
cmp
sub
mov
cmp
jmp
inc
fbld
cmp
loop
fstpt
or
and
mov
pop
mov
mov
jmp
aaa
insl
pop
int3
push
jb
jno
pop
imul
sbb
sbb
jo
adc
stc
xor
pop
xor
popf
sub
repnz
jnp
add
cli
cmpsb
cmp
and
or
lods
cld
fcmovnu
pop
popa
pop
enter
cld
mov
or
push
xor
adc
push
mov
aas
sbb
in
fistpl
sub
pop
mov
je
xchg
mov
xchg
xchg
jns
xor
and
and
inc
nop
iret
sarl
jne
scas
sbb
cmpl
fs
outsl
and
sbb
jb
test
ljmp
mov
cmc
scas
scas
cmp
mov
pushf
out
dec
insl
insb
jae
jmp
sbb
cmp
mov
mov
loope
push
or
in
sub
mov
mov
dec
cwtl
jecxz
mov
inc
or
pop
std
adc
adc
scas
icebp
xchg
push
fs
lretw
les
test
mov
inc
pusha
lods
sub
push
push
or
lea
in
jecxz
repz
aad
cmp
lret
roll
aam
xor
add
mov
mov
xor
add
jmp
ffree
adcb
mov
or
jo
sbb
jo
pop
dec
ja
add
daa
xor
jns
xor
mov
in
mov
lret
int3
and
mov
outsl
push
test
xchg
data16
stos
test
fmull
pop
jecxz
fnstenv
or
push
cmp
fninit
or
lods
push
lods
daa
stos
pop
subl
rol
inc
int
jnp
xchg
in
lds
fs
push
push
lock
push
inc
or
push
add
fstpt
or
popa
scas
bound
lret
or
call
scas
xor
sbb
or
xor
lret
in
pop
jp
mov
pminsw
test
sbb
inc
imul
dec
cwtl
stos
mov
inc
aam
sub
jmp
cmpsb
insb
test
or
jnp
sub
gs
jbe
sub
es
stc
sarb
test
fs
cmp
sbb
loop
pop
add
adcb
pop
adc
xor
int
cmp
leave
mov
mov
mov
mov
cmp
je
mov
mov
jmp
scas
or
repz
test
shll
push
daa
jo
sbb
jo
in
sbb
dec
push
int3
in
jnp
test
jle
sub
inc
add
push
inc
dec
jg
shll
adcl
popf
pop
adc
xchg
mov
mov
and
out
rcrl
mov
imul
fnstsw
popa
rclb
leave
arpl
mov
inc
push
sub
adc
and
stos
fisubrl
cmp
stos
mov
jmp
mov
mov
ja
inc
sub
mov
sub
daa
mov
push
mov
ds
or
les
push
es
dec
inc
or
mov
cmp
loope
sar
inc
or
xchg
xchg
or
lods
cmp
mov
loope
sub
dec
roll
lds
xchg
push
sbb
push
sbb
sub
leave
out
and
int
mov
xor
dec
fldl
xchg
add
pusha
repnz
lock
and
cltd
add
mov
int3
xchg
push
mov
pop
and
jle
test
push
jae
xchg
jmp
push
pusha
sbb
jne
mov
jmp
dec
push
test
xor
popa
jns
fnstcw
sbb
jo
insl
jl
push
cltd
xor
lahf
push
fistl
out
out
lods
pop
gs
mov
pushf
mov
leave
lret
stos
testb
out
lcall
xor
pop
cmp
xchg
aaa
sahf
jns
aas
push
cmc
jmp
insb
dec
mov
cmpsl
inc
nop
sahf
movsl
dec
jg
cs
adc
xor
pop
mov
and
lds
dec
cmp
outsl
jo
enter
adc
sbb
rcl
pop
sbbl
frstor
inc
lcall
scas
mov
mov
sub
imul
add
xchg
das
dec
sub
es
fcomip
or
pop
faddl
je
rclb
shll
test
mov
cvtdq2ps
repz
add
dec
stos
shlb
outsl
push
cwtl
enter
cmp
dec
mov
popf
test
xchg
push
pop
clc
xchg
into
push
xchg
cmp
cmp
xlat
lret
les
ds
mov
or
jne
js
jle
test
mov
movsbl
xor
add
cmp
jmp
mov
gs
nop
sbb
mov
lods
and
jo
jg
jmp
popa
adc
push
cmp
andl
imul
xor
testl
push
inc
lds
adc
cltd
inc
and
xchg
cmp
imul
rclb
xchg
push
ret
and
in
xchg
xchg
or
imul
push
andl
mov
sbb
sbb
je
pop
out
ljmp
push
xor
cmp
push
xchg
fcoml
addr16
or
mov
sahf
adc
mov
jns
sahf
jae
dec
inc
fldcw
mov
adc
mov
scas
inc
xchg
ja
jg
inc
movsb
and
repz
sub
mov
xor
nop
call
pop
push
push
cmc
cmpb
sbb
jae
lret
push
cmp
iret
lock
add
fs
lods
xlat
sbb
push
outsl
or
pop
cmp
test
ljmp
cmpsb
imul
push
je
movl
jmp
aaa
dec
rcrl
jno
repz
enter
mov
jo
sbb
jo
enter
mov
std
out
push
add
dec
mov
das
pop
ja
sbb
lock
sub
xor
ffree
push
cltd
mov
outsb
push
fisubl
clc
push
jne
repnz
cmpsl
aaa
cmp
ljmp
add
or
outsb
test
pop
mov
sbb
xchg
orl
fbstp
lds
add
das
lods
int
xor
das
lods
rcrb
mov
call
rcr
cmpsb
icebp
jae
mov
or
aad
shll
cli
out
repz
shll
ficoml
mov
and
mov
iret
jmp
movsl
push
add
dec
cmp
movsl
pop
dec
lods
sbb
xor
ja
imul
std
mov
or
adc
fldcw
cltd
ljmp
fwait
in
sub
push
aad
scas
movsb
stc
dec
out
pop
cs
xor
and
imul
inc
push
gs
dec
scas
ljmp
jnp
hlt
insb
pusha
fidivrs
nop
lea
mov
mov
addl
mov
mov
xor
lea
mov
jmp
mov
addl
jecxz
or
jl
jo
sbb
jo
fiaddl
add
fmul
push
sub
ret
faddl
mov
lods
lods
push
pop
icebp
cwtl
out
in
inc
pushf
idivl
int3
addr16
test
sbb
popl
pop
movntps
pop
adc
ret
incl
ds
sahf
and
pop
int3
mov
jno
out
test
subl
out
push
in
push
test
dec
outsb
dec
popf
call
outsb
jl
cs
mov
cld
cmp
pop
test
imul
in
loopne
mov
std
aas
push
inc
sbb
jle
call
sub
rcrb
int3
inc
push
add
in
es
orl
xchg
adc
xchg
cmp
dec
sbb
pop
mov
jns
or
lds
leave
sub
jmp
mov
or
xor
push
call
mov
adcl
adc
je,pt
jo
push
mov
sub
sub
xchg
push
xorl
or
add
push
adc
push
sub
xchg
jp
cmp
dec
hlt
mov
ds
jmp
cmp
xor
sarl
cld
test
xchg
and
jo
sbb
jo
iret
xor
mov
jecxz
cwtl
repz
psubd
push
mov
je
icebp
jge
cli
test
fcompp
adc
jb
les
jb
rcrl
jns
add
stos
sahf
mov
clc
in
lret
xchg
testb
push
aas
pushf
lds
and
icebp
leave
mov
stc
and
and
loop
shrb
mov
andl
jge
xor
mov
movsb
nop
pop
pop
sbb
xchg
lahf
psllq
cmp
sub
out
and
sbb
mov
adc
in
add
cmp
nop
clc
jbe
jmp
and
mov
hlt
rorb
mov
jle
xor
push
dec
inc
clc
sbb
push
mov
data16
and
cmp
xchg
bound
sub
add
fwait
add
and
jb
imul
pop
and
xchg
int
xchg
rorl
aam
repz
pop
repz
sub
xor
in
mov
xor
mov
add
jmp
pop
adc
mov
es
xor
int3
and
sbb
jo
shlb
and
dec
mov
cltd
xor
loope
andl
stos
inc
cmc
pop
xor
or
pusha
dec
adc
or
shll
sbb
push
mov
das
add
push
push
pop
and
loopne
xchg
add
insl
pop
sub
mov
and
add
scas
enter
dec
sbb
push
cmpsl
sub
cmp
pop
mov
ffreep
pop
inc
pop
jl
dec
push
mov
pop
or
mov
pop
xchg
push
and
into
and
cmp
leave
movsb
xor
xchg
arpl
jecxz
movsb
push
dec
out
stos
repnz
clc
clc
dec
jnp
je
loopne
iret
cmp
or
pop
ret
shlb
les
into
mov
push
fwait
jno
cmp
repnz
sbbb
push
enter
repz
jecxz
adc
outsb
mov
adc
pop
add
add
lret
cltd
ficoms
sbb
addr16
cmp
jg,pn
pop
add
cmp
fmuls
popa
mov
aam
out
sbb
add
ret
push
mov
push
push
subl
movl
movl
andl
xor
add
inc
mov
cmpl
jne
pushl
pushl
push
push
pushl
push
push
pushl
pushl
push
push
push
pushl
call
cmpl
jb
neg
mov
push
xor
mov
mov
xor
xor
mov
adcl
jmp
popa
sahf
cmpsl
mov
jno
mov
ljmp
fnstcw
jo
push
cmpb
add
lock
popa
or
sub
cmp
cmp
fldenv
arpl
mov
stos
cmp
xor
pushf
pop
push
clc
fwait
push
pop
cmpsb
jns
lcall
adc
ljmp
adc
gs
lds
mov
sahf
inc
lret
loope
mov
and
addb
adc
les
sbb
ret
adc
push
pop
mov
fs
xor
cli
dec
add
add
xor
inc
sti
dec
daa
iret
and
pushl
mov
push
sbbb
inc
jp
add
insb
shlb
push
inc
or
lret
or
lods
movsb
leave
mov
in
xor
popf
fcomp
out
push
xor
push
int3
roll
test
jg
sbb
jb
mov
imul
mov
dec
push
mov
js
aas
pop
jne
mov
inc
mov
cmp
xor
ficoms
jl
dec
push
loopne
adc
jnp
cmp
mov
mov
lea
mov
jg
mov
cld
push
jl
arpl
jg
out
and
je
sub
leave
mov
cmc
orb
imul
insl
es
sbb
adc
sub
or
xchg
pusha
loope
lds
dec
sti
cmp
insb
jb
push
test
leave
xchg
in
in
dec
dec
sbb
enter
addr16
cli
dec
cs
add
adc
dec
test
and
sbb
int
shr
jbe
or
xor
pop
test
cmp
test
add
pop
lret
or
and
scas
popf
das
stos
mov
stos
inc
dec
jne
mov
and
xor
or
ss
inc
in
dec
pop
faddl
mov
dec
sub
jmp
sbb
out
push
add
clc
cmp
ret
xchg
fidivrl
xchg
clc
in
cmp
xlat
jp
orl
mov
loopne
leave
lds
cli
mov
pop
inc
fwait
pause
push
stos
cwtl
cld
pop
jae
aam
sbb
mov
movsl
lods
pop
push
pop
sarl
leave
and
insb
imul
xorl
add
imul
movl
mov
movl
cmp
movl
jne
mov
mov
xor
jmp
test
cmp
push
popa
andl
adc
adc
pop
sub
jo
xchg
pop
int
mov
mov
out
inc
add
fisubrs
sbb
mov
push
add
mov
arpl
ss
pop
in
sub
aam
xor
dec
rorl
cs
mov
pop
jb
loop
rorb
jae
sbb
ds
mov
pushf
data16
cmp
scas
fadds
out
out
lods
jae
loopne
das
aad
ja
xchg
cwtl
stos
inc
inc
popa
in
out
rcll
ret
or
adc
ja
xor
jno
andb
pushf
in
mov
jbe
lahf
dec
rol
inc
jmp
out
sbb
lea
sbb
inc
mov
xor
mov
adc
aaa
mov
jmp
leave
mov
stos
inc
sub
xor
mov
cli
xchg
jb
push
pop
inc
stos
fs
lods
bndldx
scas
ret
mov
imull
ja
xorl
mov
std
add
popa
pop
leave
repz
imulb
dec
add
in
sbb
pushf
js
shrb
jge
test
mov
cmc
daa
mov
pop
pop
insb
or
sbb
imul
jbe
aad
les
dec
cwtl
mov
xor
in
insb
repz
jle
adc
aas
xor
mov
das
xchg
jo
stos
daa
cmp
and
lods
dec
mov
into
and
push
push
clc
stos
mov
out
push
into
xlat
neg
adc
aas
xchg
mov
dec
or
subb
inc
in
xchg
sarb
repz
decl
fdivs
add
cmp
pop
adc
xchg
sub
xchg
sbb
add
push
xchg
dec
mov
lods
mov
ret
int
jnp
push
mov
les
call
cltd
jecxz
sbb
or
sub
dec
or
ret
lea
lea
mov
xchg
pop
add
mov
nop
or
sar
data16
cmpsl
scas
fbstp
lahf
push
lock
dec
enter
aaa
or
jle
cs
or
sub
into
ret
aas
pop
inc
jb
dec
lahf
jecxz
pop
popa
rol
lds
xlat
in
lahf
and
cmp
jns
pop
aam
and
sub
mov
repnz
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
jmp
shll
add
ret
loope
and
xchg
pop
sub
fnstcw
jo
mov
sbb
addr16
mov
mov
jg
es
sarb
fbstp
inc
or
aas
cmp
addr16
mov
push
aas
xor
sbbl
sbb
insb
sarl
es
xlat
pop
inc
pop
adc
leave
xchg
leave
dec
dec
stos
jno
shll
les
pop
xchg
lea
cmpsb
dec
hlt
jae
jo
cltd
mov
ljmp
fcmovnu
lret
mov
adc
mov
lods
movb
les
mov
dec
cmp
mov
mov
aad
dec
arpl
cmc
push
xor
dec
add
mov
out
pop
ds
pop
or
cmp
jno
mov
out
push
jb
xchg
cmpsl
adc
dec
enter
mov
pop
pop
adc
pop
aaa
mov
dec
and
les
in
lods
movsb
aam
dec
sbb
cmp
mov
mov
or
xor
ror
mov
ja
nop
mov
pop
scas
fdivr
adc
out
mov
mov
in
and
inc
or
cmp
xchg
push
and
jne
mov
dec
or
jmp
sarb
sub
insl
imul
jmp
jge
mov
add
shr
aam
out
push
cmpsb
add
or
repz
push
mov
add
xorl
es
sbb
test
iret
pop
xor
das
jmp
fistpl
outsb
sbb
pop
es
les
jl
xchg
negl
fwait
and
push
aaa
inc
push
jmp
sarw
inc
popa
ficompl
movsl
sbb
fildl
mov
adc
mov
lods
xchg
pushf
xor
sbb
jnp
xor
push
jmp
add
mov
sub
push
pop
pop
in
or
fwait
xor
es
mov
xchg
mov
push
loope
and
pop
orb
movsb
out
scas
dec
xor
jl
add
icebp
in
call
xchg
xor
xor
movsb
sbb
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
movl
mov
mov
mov
adcl
xor
add
andl
mov
mov
mov
sub
xor
mov
dec
xor
dec
jmp
loope
xchg
fdivs
jno
addl
ss
sub
les
jo
repnz
inc
adc
push
fnstsw
pop
jl
mov
mov
adc
add
aas
repnz
pop
push
sbb
adcb
jl
std
mov
and
stos
mov
mov
xor
and
pushf
rep
mov
imul
cs
sbbb
xor
and
sbb
aad
jp
mov
mov
repz
mov
mov
aaa
push
xchg
mov
pop
mov
mov
ret
pusha
mov
mov
lods
cs
push
dec
and
lahf
pop
rcrb
gs
out
jbe
add
mov
jnp
lret
xchg
push
icebp
dec
jle
icebp
mov
cmc
mov
jl
iret
adc
cmp
out
push
call
jg
je
fnstsw
or
in
pop
push
or
loopne
sub
or
lahf
sbb
inc
push
psubd
push
gs
push
cmp
scas
adc
cmpsb
ja
rcll
jle
mov
test
mov
sbb
pop
jb
xor
cmp
push
pop
call
lcall
inc
mov
notb
push
inc
movsl
jle
test
sbb
push
push
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
mov
adcl
add
mov
movzbl
and
mov
mov
movl
mov
xorl
mov
mov
mov
mov
mov
mov
mov
mov
jmp
hlt
and
arpl
jno
scas
mov
pushf
sti
xchg
jae
jo
les
jo
faddl
and
jns
xor
dec
xchg
or
dec
cltd
xor
movsl
inc
sbb
and
adc
dec
addr16
out
jmp
enter
int3
and
fwait
push
dec
dec
and
push
out
fcomip
and
cmp
ret
pusha
mov
adc
mov
out
mov
insb
push
inc
mov
push
test
test
jno
cmp
mov
sub
push
mov
inc
jb
push
lock
stos
mov
add
popa
pop
pop
addb
and
es
inc
add
outsb
ss
cmpsl
jbe
add
push
xchg
xor
inc
lock
jle
stos
inc
inc
repnz
push
or
out
loope
ret
push
sar
jae
mov
iret
test
ret
dec
mov
pusha
ss
or
sbbl
jae
jp
pushf
lock
fs
out
stos
icebp
adc
xchg
clc
ficomps
sub
int3
jb
jbe
inc
pop
aas
es
jg
aad
pop
jnp
sub
dec
or
xchg
inc
pop
push
xchg
mov
xor
add
pop
leave
ret
push
mov
mov
xor
jmp
cmpsl
sub
mov
mov
mov
les
jo
xchg
xor
es
idiv
xor
mov
sbb
inc
cmpsb
lds
ljmp
addl
or
cmc
jo
int
jl
xchg
mov
jae
mov
xor
inc
mov
sub
mov
push
or
insl
test
cltd
es
xor
and
iret
inc
out
adc
neg
xor
mov
icebp
cmp
cmovg
rclb
or
mov
pushf
scas
jae
int3
lods
clc
mov
xor
into
jmp
repnz
fisubs
xchg
sub
mov
inc
sbb
sbb
sbb
insl
mov
lahf
adc
es
jge
jo
and
xor
js
in
xlat
pop
mov
rol
shr
call
rolb
adc
mov
scas
lock
pop
and
jl
or
pusha
and
int
push
mov
pop
jp
out
xchg
ja
in
xchg
shrl
push
int
pop
push
inc
loopne
addr16
es
dec
inc
mov
ss
imul
sbb
ljmp
inc
add
lret
sub
xchg
mov
imul
or
addr16
jge
jg
test
icebp
mov
and
or
mov
pop
ret
push
mov
push
movl
add
mov
mov
mov
mov
add
mov
xor
subl
add
xorl
mov
incl
mov
subl
mov
mov
mov
mov
adcl
mov
mov
mov
subl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
leave
ret
push
mov
sub
add
mov
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
adcl
mov
mov
mov
adc
movl
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
push
push
push
pushl
push
push
push
push
push
call
jmp
sbbl
mov
push
sbbl
push
push
mov
andl
jmp
mov
jmp
sub
sub
out
nop
mov
jo
jge
jo
outsl
sti
and
arpl
jno
add
imul
xor
pop
fdivrs
sub
or
fisubrs
mov
mov
les
xchg
inc
sub
cmp
fidivrs
minps
repnz
mov
jmp
outsl
in
aaa
pushf
aam
arpl
aas
pop
mov
cmp
or
xor
fwait
jge
adc
and
loope
add
push
fstps
std
sub
mov
loope
inc
fnstsw
int
jnp
dec
jmp
fsubrs
inc
jo
mov
imul
jle
aam
adc
fistps
orl
sbb
pop
mov
pop
daa
jmp
in
xorl
fbstp
inc
int3
call
in
xchg
adc
scas
lods
push
and
add
xor
and
lret
mov
xor
adc
mov
sbb
jae
in
out
fiaddl
stc
test
imul
cwtl
fwait
add
jg
push
scas
stos
xor
shlb
jb
mov
jmp
mov
es
movl
call
ja
in
or
sub
mov
aad
push
iret
pop
sbb
mov
and
sbb
scas
repz
mov
jbe
cs
cmp
inc
sbb
shll
test
or
add
mov
cmp
sub
jp
mov
cmp
sbb
je
stos
fldcw
daa
ss
sbb
and
inc
inc
mov
dec
jge
mov
mov
aas
mov
lretw
jle
inc
mov
adc
fwait
mov
sbb
sti
add
iret
repz
mov
ljmp
les
rorl
cwtl
jmp
push
adc
add
sbb
cmp
jg
insb
jns
adc
stos
or
test
int3
mov
or
sub
int3
cmp
push
mov
ds
cltd
mov
mov
xchg
jno
xor
dec
call
jle
xlat
pushf
movsb
call
jae
dec
out
xor
dec
mov
rcrb
das
into
imul
into
push
or
mov
lgs
mov
lahf
sbb
call
out
and
cmp
mov
mov
push
xor
das
xchg
in
testb
push
ret
mov
fcmovne
clc
in
repnz
pushf
aad
das
ljmp
in
rcl
or
movsb
sbb
in
push
rcl
xchg
sub
jmp
movsb
test
push
jle
cltd
les
sub
inc
xchg
jg
mov
mov
fdivr
test
jbe
jns
repz
shlb
nop
mov
xchg
scas
loop
mov
push
lods
xor
add
mov
andl
add
jmp
xchg
test
xchg
jno
xchg
js
sub
cmp
mov
jge
jo
mov
jl
test
int3
rol
mov
dec
loope
xchg
popa
mov
inc
xchg
jo
ljmp
pop
movsb
mov
add
mov
or
inc
inc
jns
sbb
dec
nop
aaa
xchg
xchg
mov
out
adc
ljmp
repnz
cmp
pop
in
std
repnz
mov
lcall
and
scas
outsl
imul
xchg
shlb
imull
mov
dec
repnz
lock
test
sarb
push
push
aaa
icebp
popa
scas
push
stos
or
mov
out
in
dec
or
popa
repz
pop
mov
movsl
out
in
adc
sub
int
les
xchg
test
or
movsb
out
adc
push
into
and
and
jp
scas
sub
loopne
add
jg
outsl
add
addr16
jg
shl
iret
mov
sbb
rcll
outsb
cmpsl
sbb
mov
loop
hlt
cmp
xchg
add
mov
fstl
sti
dec
push
pop
xchg
jle
mov
push
dec
pop
rclb
push
sbb
push
push
jno
jle
xchg
fcomps
cmp
and
fistpll
sbb
adc
out
in
add
sti
cs
jp
sbb
mov
mov
repz
push
frstpm(287
push
xor
push
sbb
and
loope
shr
jecxz
push
out
mov
dec
adcb
out
and
xchg
popf
stos
pusha
inc
call
lea
in
ljmp
pop
xchg
mov
movsb
hlt
dec
lret
in
cmp
imul
js
xchg
lret
inc
out
mov
out
es
gs
jmp
sbb
mov
xchg
shlb
lods
sbb
inc
mov
push
dec
bnd
arpl
das
sub
jp
inc
mov
dec
push
rorb
jge
xchg
stos
aad
jge
adc
insb
std
pop
cwtl
mov
or
sbb
sbb
fsub
mov
push
mov
movsb
sarb
pop
jge
and
push
les
sti
xor
rdmsr
sbb
pusha
repz
fcomi
mov
aam
and
pushf
lcall
stos
lret
sub
popa
xor
push
test
test
push
xchg
and
outsb
aaa
sarb
adc
dec
mov
dec
adc
into
mov
popf
aam
jle
aas
push
jmp
adcb
lret
shl
test
mov
xchg
mov
jae
mov
cmp
ss
test
cmp
int
mov
aaa
xor
push
sbb
cmp
or
push
mov
test
cmpsl
clc
out
je
push
jne
push
loop
mov
xor
xchg
stc
push
xchg
xchg
pop
cli
cld
add
ds
push
dec
in
loope
xchg
mov
mov
inc
mov
adc
ja
movsl
dec
jp
jecxz
sub
or
xorl
movl
movl
movl
xor
movl
xor
mov
subl
xor
addl
add
adcl
mov
movl
sbb
movb
or
mov
xor
add
mov
neg
mov
sbbl
xor
add
subl
push
sbb
mov
subl
xor
adcl
add
push
add
mov
addl
xor
add
addl
push
lea
push
pushl
adcl
pushl
call
subl
jmp
test
xor
mov
test
push
fcmovb
fbstp
jo,pt
and
jo
mov
lret
out
push
fisubrs
popf
and
push
int3
cmp
aaa
test
movsb
mov
adc
cmp
notl
js
pop
lret
pop
jp
xlat
scas
sbb
pop
add
push
lods
mov
scas
mov
ficoml
ja
pop
xchg
daa
fisubl
push
cmp
arpl
int
cmpsl
shr
stos
jmp
mov
ret
dec
addb
xchg
aad
xor
shll
mov
push
aaa
push
inc
inc
insb
mov
les
fisubl
sub
enter
enter
hlt
jns
pop
lret
add
shlb
gs
daa
movsb
lahf
sub
scas
cwtl
xchg
out
dec
mov
dec
jecxz
sahf
adc
mov
jns
xlat
push
pusha
jns
cmp
imul
out
jb
fmuls
add
xor
mov
jmp
addr16
dec
jnp
lret
xchg
fwait
sahf
pop
mov
cmp
jnp
pop
roll
shll
mov
faddl
out
or
test
mov
mov
call
insl
xchg
subb
mov
cs
push
movsb
or
fstpt
mov
sahf
pop
jl
push
mov
test
out
pop
xchg
push
in
div
sbb
jnp
push
hlt
daa
mov
mov
sbb
xor
jb
cmp
call
dec
lcall
push
jno
dec
jne
insb
jp
add
mov
pop
cli
fisttpll
and
loope
sub
or
pop
push
cltd
idivl
cmc
inc
jo
hlt
outsl
jg
sar
mov
xchg
leave
mov
scas
aaa
je
fists
ds
pop
sub
and
ds
std
jl,pn
xor
add
sbb
inc
insb
in
mov
into
movb
fcomip
pop
pop
sbb
push
icebp
mov
push
cltd
inc
xlat
enter
add
out
loope
cwtl
aam
je
jl
lods
es
mov
enter
movsl
in
push
cmp
pop
or
mov
adc
cwtl
or
jo
in
mov
leave
insb
sbb
rol
gs
icebp
sahf
and
jo
mov
mov
inc
roll
int3
or
pmaxub
xor
lret
sbb
mov
outsl
daa
icebp
sub
sbb
sub
dec
adc
outsl
jnp
adc
incl
inc
or
xchg
xor
dec
leave
and
int3
push
pop
into
xor
inc
jo
cmp
mov
xor
lock
jo
aaa
aam
xor
repz
fidivl
fwait
jmp
mov
pop
ror
rcrl
pop
fnstsw
aas
pop
xor
mov
clc
imul
and
add
idivb
add
jns
je
sbb
mov
jecxz
mov
movl
je
lea
sbbl
push
sbbl
mov
andl
xor
add
push
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
add
push
mov
mov
pushl
call
mov
cmpl
lea
mov
je
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
jmp
mov
add
mov
aaa
pushf
sbb
jo
jge
jo
pusha
int3
and
dec
inc
mov
mov
sti
sti
out
stos
jbe
cmpsb
dec
sub
aaa
xchg
adc
mov
orb
mov
jl
pop
cmpsl
and
mov
mov
xchg
aaa
lcall
cld
sbb
xchg
lret
mov
mov
mov
js
sbb
push
cli
push
ja
or
adc
mov
pusha
mov
or
mov
sahf
pop
mov
test
insb
testb
inc
negl
jbe
loop
push
stos
cltd
mov
sarb
mov
sahf
inc
xor
nop
or
fcompl
ret
imul
subb
inc
mov
or
mov
dec
dec
je
adc
test
je
cmp
lods
fs
daa
jg
xor
push
cmp
stos
xchg
les
inc
mov
shl
xchg
fwait
call
out
and
clc
icebp
mov
sbb
jnp
addb
outsl
or
cltd
lcall
std
sbb
or
lcall
xor
out
popf
dec
jbe
lods
xchg
or
jp
int3
sbb
ret
ljmp
jae
fcomip
mov
sbb
out
shll
add
dec
xor
shr
inc
dec
dec
out
popf
xchg
jnp
xchg
push
inc
cmpsl
or
int3
lods
in
adc
test
add
adc
aam
loop
adc
push
data16
mov
xor
adc
mov
fidivl
pop
aam
push
and
in
push
xlat
sub
pusha
popa
orl
pop
jo
sbb
xchg
bound
pop
mov
daa
mov
test
dec
pop
jge
pusha
sbb
clc
mov
aad
mov
es
xchg
fmuls
xchg
jge
pop
jbe
and
jno
mov
and
bound
movsl
and
pop
sub
mov
pop
push
mov
jns
sub
mov
cmp
addl
dec
fs
pop
jge
pop
push
jae
jno
neg
pushf
jl
xchg
fstps
pop
push
into
mov
mov
ss
dec
jno
jle
or
jecxz
enter
mov
inc
in
daa
push
aam
aam
xchg
cmpsl
fldt
dec
jno
stos
and
pop
sub
mov
rorl
mov
adc
idiv
and
xchg
dec
sub
add
adc
add
xchg
mov
dec
sub
sbb
or
fimuls
in
pop
xor
pop
lods
mov
cmp
ja
imul
int3
mov
int3
push
fldcw
int
fnstsw
dec
js
dec
jecxz
pop
mov
in
sahf
fcmove
mov
mov
pop
mov
icebp
stc
or
jae
jne
pushl
call
test
je
lea
jmp
enter
outsb
bound
adc
popf
int3
lret
jo
and
jo
mov
test
mov
add
insl
mov
sub
push
inc
in
bound
mov
adc
sub
pop
xor
in
mov
mov
orl
push
sub
scas
scas
inc
adc
pop
inc
jnp
test
cmp
hlt
and
xchg
mov
das
xor
or
push
frstor
bound
inc
adc
jns
js
cmp
aam
xor
out
cmp
aaa
repnz
mov
xor
enter
xchg
call
mov
icebp
adc
push
mov
jno
dec
popf
arpl
mov
pop
test
push
popa
lods
lds
fstl
pop
pushf
inc
out
or
gs
mov
stos
loopne
test
scas
repz
and
cli
jnp
decl
and
and
into
inc
jg
mov
mov
cmc
inc
outsb
ljmp
fsts
and
popf
sahf
imul
push
mov
jl
push
mov
mov
dec
mov
jle
mov
daa
sub
xchg
pop
nop
add
or
push
inc
out
push
mov
insl
rorl
or
pop
jae
sub
sbb
dec
pop
jecxz
add
addb
aam
push
leave
pop
hlt
jae
popa
mov
hlt
scas
leave
jle
test
outsl
cltd
cwtl
lret
sbb
enter
pop
cmc
sahf
push
rcrl
mov
mov
in
mov
sbb
es
das
pop
lods
rorl
mov
or
lret
mov
orb
mov
mov
mov
cwtl
orl
in
push
jne
test
test
mov
stos
mov
das
xchg
std
fwait
pusha
inc
mov
addr16
inc
jne
hlt
ret
inc
push
jnp
repz
jmp
rcrl
jle
filds
sar
push
or
pop
loope
or
incl
push
pop
mov
inc
cmp
xchg
dec
lea
movsl
shll
ljmp
les
aam
shl
cli
ljmp
adc
dec
js
adc
les
and
aad
js
xchg
cmpsb
rorb
ret
mov
hlt
jge
jb
adc
xchg
pop
dec
xchg
or
dec
xrelease
into
les
sbb
movlps
dec
std
mov
push
adc
shl
and
jge
cltd
pop
sbb
push
cmp
jnp
push
lret
cmpsl
imul
mov
cwtl
stos
sbb
outsl
icebp
add
js
ss
sti
out
cli
jb
add
std
or
push
mov
pusha
movsl
nop
in
icebp
aad
mov
jecxz
inc
cmpsb
mov
enter
jp
dec
lds
fwait
xchg
sub
xchg
mov
xor
xor
js
cmp
cld
cmp
std
push
sub
mov
push
mov
xor
add
push
mov
add
push
mov
jmp
inc
jmp
cwtl
loope
inc
pop
mov
mov
sti
les
and
jo
sbb
pop
frstor
lcall
add
lahf
mov
inc
xchg
mov
xchg
pop
jge
aam
xor
cmp
mov
stc
pop
adc
adc
dec
mov
sbb
cmpsb
mov
movsl
mov
mov
xchg
cltd
out
nop
xor
or
frstor
cmc
cmp
add
popf
out
movsl
in
hlt
lods
adc
adc
jmp
scas
ret
xor
xchg
adc
push
mov
loopne
stc
add
mov
push
and
pavgw
in
js
lret
and
fidivrl
push
push
jo
mov
mov
int
dec
loop
dec
rolb
and
test
xchg
sbb
or
repnz
jns
jmp
xchg
leave
jl
inc
jo
sbb
in
adc
loope
dec
filds
mov
sbb
and
sahf
mov
xchg
jp
ret
mov
xor
mov
add
ror
loopne
dec
xor
lds
outsb
inc
mov
mov
jecxz
popf
lock
outsb
xchg
or
shll
bound
lock
mov
out
sbb
sbb
xor
xor
mov
in
or
sbb
test
jno
push
push
sub
clc
shrl
sub
sbb
out
in
jmp
add
gs
test
js
xchg
clc
icebp
or
adc
insb
adc
pop
push
xchg
test
rolb
inc
cltd
pop
les
pop
pop
and
dec
ret
mov
lods
xchg
sahf
and
dec
push
lret
test
jmp
sub
incb
loopne
mov
ret
fsubl
sub
stos
insl
xor
xor
ret
add
xchg
push
lods
xchg
iret
sub
adc
jb
cmpsb
sahf
mov
cmp
pop
repnz
mov
and
dec
ja,pn
jns
mov
xlat
sbb
xchg
mov
fldcw
adc
lret
mov
push
ljmp
mov
icebp
dec
xchg
inc
xor
sub
cmc
movsl
xor
outsb
stos
adc
inc
ss
shrb
outsl
iret
mov
mov
sub
sub
or
aas
cmc
insl
lock
lcall
mov
xchg
xor
and
pop
xor
out
jno
lahf
stos
sub
das
pushf
pop
sub
sbb
or
mov
xor
lret
dec
mov
push
push
jl
pop
push
testb
inc
aaa
add
jnp
pop
fcmovb
xor
test
insl
xchg
mov
testb
mov
faddl
fistl
or
rcl
mov
cli
push
or
add
sarl
push
sub
ja
clc
jne
ror
popf
cld
loope
push
mov
bound
push
out
mov
std
imul
fldenv
sbbb
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
jmp
sub
cs
cs
mov
sbb
into
ja
out
fisubrl
jge
jo
or
and
add
nop
mov
pop
popf
mov
test
jge
and
jbe
out
sarl
lods
addr16
xchg
sub
push
mov
inc
movsl
lods
inc
add
cmp
cmp
sub
adc
cwtl
cmpsl
mov
jae
add
movsb
mov
les
inc
stos
ret
sbb
mov
xlat
push
pop
fdivr
cld
fidivrl
push
icebp
ljmp
std
movsl
fwait
je
mov
pop
fcoml
add
je
jns
and
mov
cltd
xchg
addr16
and
fisubrl
push
cmc
inc
dec
fiaddl
cmp
xchg
mov
xor
dec
out
cld
cmp
push
into
add
or
test
mov
mov
sbb
xchg
pop
inc
cmpsb
add
sbb
jno
xchg
dec
pop
bound
ficoms
cli
lea
cmpsl
in
cmp
std
adc
sbb
mov
sti
gs
cmp
dec
xchg
lret
out
aad
xchg
xchg
sub
pop
push
fimuls
xchg
jns
out
test
cwtl
rcll
add
sbb
cmc
sbbb
call
fdivr
jle
inc
or
inc
popa
add
mov
cmp
xlat
mov
or
inc
es
cmpsl
cltd
lcall
push
push
enter
xor
xchg
and
xor
in
lret
das
js
mov
cmp
xor
imull
mov
js
pop
test
enter
daa
cmp
cmovl
sti
das
or
push
lahf
cli
dec
xor
lds
call
sub
int
xchg
add
pop
ret
divb
dec
ror
rcrl
and
popf
lahf
daa
push
test
cltd
bound
stos
sub
mov
push
gs
xchg
lcall
iret
fimull
lahf
test
sbb
mov
pop
arpl
push
pop
mov
push
push
das
repnz
sub
push
add
or
push
sub
inc
inc
daa
dec
in
scas
enter
jns
std
and
sub
pop
shrb
jmp
inc
mov
sub
test
inc
ljmp
roll
xor
pop
or
je
in
int3
mov
push
iret
or
xor
jb
sub
sbb
mov
in
aaa
cmpsb
mov
and
push
inc
shlb
aas
pop
iret
test
xor
shlb
cli
xlat
dec
rorb
push
jo
mov
inc
scas
mov
rcr
cmpsb
cmpl
jg
cmpsb
push
call
xchg
aam
xor
or
sub
and
mov
imul
into
aam
lods
cmp
scas
and
or
test
push
daa
call
mov
mov
pushf
dec
div
ja
dec
mov
repz
rclb
fcompl
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
call
mov
mov
add
pop
pop
pop
leave
ret
push
mov
sub
push
sbb
mov
mov
mov
sub
xor
mov
adc
mov
movl
sub
movl
mov
andl
xor
add
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
mov
or
xor
mov
adc
add
mov
or
mov
adc
mov
sbbl
xor
add
mov
or
mov
mov
inc
movl
movl
cmpl
je
cmpl
jne
call
xor
add
dec
mov
jmp
mov
mov
sub
add
jmp
fldcw
cs
mov
jae
shll
inc
mov
sbb
into
jo
imul
jle
fs
xlat
div
pop
dec
pop
rcl
lock
sub
jl
mov
cmc
xchg
push
dec
jecxz
cmc
dec
test
xchg
xor
jle
cmpb
and
pop
or
xor
cmp
aam
and
xlat
or
jae
hlt
and
cli
out
adc
je
sarl
mov
inc
inc
mov
out
xchg
addb
ss
movsl
insl
jge
xor
xchg
jg
add
mov
xor
nop
fs
mov
mov
pmulhuw
sbb
ja
std
test
loopne
test
inc
mov
ljmp
xchg
fldt
outsl
mov
mov
dec
repz
loope
push
mov
imul
popa
lret
or
dec
in
dec
shl
mov
dec
movsl
shlb
insb
jne
push
push
push
jmp
push
pop
push
and
std
outsb
mov
mov
fwait
adc
ret
jmp
xor
test
pushf
mov
or
push
sbb
mov
and
fld
sub
jle
popa
loope
loop
popa
sub
aad
jae
loop
xor
fs
subl
or
out
repz
sbb
mov
mov
jg
in
orb
ja
xchg
lret
push
clc
inc
adc
or
mov
fwait
mov
xor
xor
inc
push
cmp
push
xor
mov
rolb
adc
jge
xchg
mov
outsl
ds
inc
imul
js
push
inc
mov
scas
iret
mov
xor
sahf
gs
out
xchg
inc
sub
adc
in
mov
adc
pmullw
jo
fwait
loope
jmp
andl
fdivs
test
inc
add
inc
aam
test
inc
add
cmp
movl
movl
and
movl
jmp
lods
mov
jno
fidivl
rclb
jg
jo
insb
xorl
add
repz
inc
popa
rcrb
lahf
mov
int3
outsl
loopne
push
cltd
aaa
adc
out
cmc
call
mov
jmp
mov
lods
loope
adc
and
mov
gs
sub
rclb
inc
adcb
cmp
ds
pop
mov
mov
xor
insl
mov
in
jl
cmc
into
movsb
mov
mov
dec
and
sbb
or
or
sbb
pop
adc
shlb
dec
cmp
xchg
sbb
test
pushf
jge
movsb
or
jae
cmp
mov
inc
cmp
mov
cmp
aaa
out
iret
mov
hlt
mov
xchg
mov
in
pop
sbb
imul
repnz
and
or
xchg
fnstsw
mov
scas
les
xor
mov
or
push
jge
pop
loope
into
adc
dec
mov
lcall
mov
push
adc
fwait
ss
imul
and
sar
pop
incl
xchg
xor
aaa
add
mov
das
in
cld
pop
out
lods
push
or
mov
mov
xor
and
or
into
pmulhuw
add
jg
mov
pusha
and
jg
mov
ss
sub
jl
pushf
jnp
add
fs
xchg
lret
test
vmovss
adc
mov
or
add
push
inc
and
aad
out
and
lea
addr16
inc
cmp
mov
pop
faddl
jp
adc
inc
imull
mov
pushf
lret
negl
popf
aad
jb
icebp
aam
cmc
push
sub
lea
sarb
mov
movl
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
mov
xor
sbb
mov
add
cmp
jmp
mov
jae
xchg
xor
xchg
jo
imul
xchg
dec
fwait
loop
jp
mov
fiaddl
sub
push
pushl
dec
mov
loop
sub
decb
add
loop
or
ljmp
mov
and
sti
dec
xchg
ret
lcall
xchg
dec
mov
test
dec
sbbb
in
cmp
addr16
gs
and
jp
lods
cli
movsb
or
pusha
cs
dec
jb
jmp
adc
stos
xlat
mov
jne
pop
movsl
insb
aas
movsb
sub
cmovno
into
push
lods
into
inc
out
in
test
call
push
dec
addr16
testl
fcomi
sbb
daa
sbb
out
icebp
in
mov
int3
xor
push
xor
out
dec
xor
test
lahf
cmp
sub
push
imul
pop
sub
scas
jb
int
xchg
jge
fbld
lret
test
pusha
outsl
jns
jno
xor
dec
dec
cwtl
imul
sub
test
les
mov
jle
push
out
cmp
das
mov
and
enter
test
add
hlt
roll
std
hlt
add
fstps
fsubl
dec
aaa
add
adc
mov
sbb
sbb
pushf
push
cmp
cmp
test
faddl
cli
daa
jl
push
pushf
sbb
loope
adc
scas
sarl
outsl
pop
mov
xchg
std
push
std
cwtl
add
xchg
xor
cmpsl
lods
push
jne
adc
insb
scas
mov
mov
pop
pusha
cmp
cmp
cmp
test
cmpsb
shll
mov
enter
repz
inc
into
inc
mulb
jbe
mov
xlat
add
pushf
loopne
jb
inc
sbb
cmc
out
je
push
movl
jmp
movl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
jmp
jmp
adc
inc
jno
pushf
jo
mov
cwtl
dec
inc
enter
jg
jo
and
push
bnd
cmp
adc
push
add
int3
cmp
inc
negl
push
rorl
mov
arpl
xlat
mov
arpl
clc
mov
jp
pop
push
xchg
clc
xlat
stos
sub
loop
fadd
mov
in
mov
inc
add
rcr
dec
hlt
mov
push
xchg
xor
testl
pop
mov
xchg
cmp
ret
popa
std
loop
sbb
call
test
xchg
ficomps
dec
mov
addl
cmp
adc
xor
xor
insb
addb
xchg
jne
inc
lods
mov
cmpl
jbe
sub
int
xor
push
adc
xchg
bound
sbb
jmp
xchg
ret
jecxz
out
stos
adc
fstpt
pop
mov
scas
sarl
imul
mov
hlt
flds
mov
and
add
jne
iret
xlat
mov
mov
xor
dec
mov
inc
jo
dec
xchg
popf
fsubrs
mov
lret
mov
ja
sbb
leave
loope
xor
push
lret
rcll
je
testb
jge
push
cmpsl
icebp
xorb
and
add
pop
push
stos
leave
mov
mov
push
mov
enter
cmp
push
int
add
test
in
adcb
in
dec
repnz
jne
mov
and
push
cs
mov
push
and
shll
incl
push
fldcw
test
cli
sub
lahf
adc
or
jmp
mov
arpl
cmp
aas
shrl
cli
mov
xor
sbbl
add
movl
cmp
movl
jmp
sbb
pop
mov
loope
push
inc
test
in
daa
mov
jo
jg
jo
les
push
xor
xchg
fcoml
and
test
fisttpll
inc
cmp
scas
cld
sbb
sar
mov
gs
les
mov
mov
inc
mov
loope
or
adc
imul
mov
xchg
js
push
pushf
jmp
xchg
or
loope
lds
mov
jo
jge
into
jo
test
insb
dec
sub
stos
xchg
xor
ss
lahf
pop
push
adc
cmpsl
aas
push
mov
sub
dec
dec
xor
add
fs
pop
out
mov
sbb
jge
arpl
xor
pop
push
cmp
fcomps
xor
mov
loopne
in
mov
xor
xchg
andl
leave
mov
je
pop
stc
xchg
iret
test
mov
fisttpll
roll
pop
outsb
jg
arpl
rolb
lcall
adc
add
adc
mov
sbb
fstpt
add
loopne
pop
dec
cmp
int3
stos
inc
mov
dec
dec
cmp
jp
mov
or
enter
push
shlb
nop
js
stos
jnp
xchg
lahf
mov
es
cmpsl
cmp
aam
push
aam
sub
jl
or
sub
mov
addr16
lods
mov
mov
pop
push
push
xor
jnp
addl
in
jle
adc
enter
push
xor
rclb
mov
push
sbb
repnz
loop
mov
rolb
fcmovnb
pop
inc
movsb
xor
push
adc
dec
call
mov
stc
push
pushf
testl
pop
loope
outsb
outsb
popa
ljmp
and
mov
sub
imul
fadds
add
sub
add
rolb
add
add
add
sldt
add
sbb
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
add
mov
add
add
add
imul
mov
mov
or
mov
sub
cmp
movl
ja
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
adcl
jmp
rcrl
popf
push
stos
arpl
add
or
test
jo
imul
lret
nop
cli
and
rcl
jns
sbb
xor
aas
xor
mov
push
ret
cld
arpl
xchg
sub
lods
roll
fwait
or
jbe
and
or
out
jl
call
ret
bt
push
leave
xor
push
int
lahf
push
mov
adc
cmp
or
addr16
movsb
pop
bound
push
lock
daa
or
movsb
or
mov
in
iret
std
mull
mov
ja
cmpsb
test
leave
aam
daa
stos
push
dec
jmp
arpl
loope
fcoml
lock
loop
outsl
inc
push
cs
push
inc
iret
xchg
add
adc
leave
leave
addr16
push
push
dec
sub
cmp
je
jecxz
loopne
call
out
jb
or
ret
out
and
jae
xor
lahf
mov
arpl
fwait
xchg
icebp
cli
fistps
inc
call
in
jecxz
lcall
mov
mov
inc
dec
xchg
sbb
daa
lret
push
lods
pop
pop
and
in
pushf
xor
mov
not
xchg
jns
jne
arpl
and
or
mov
das
mov
dec
pop
or
clc
in
adc
sub
sbb
and
xor
stos
movsl
mov
pop
push
push
movsb
jae
jnp
lret
arpl
and
jmp
mov
xchg
rclb
stc
xor
pop
sub
leave
icebp
pop
inc
or
into
mov
in
lret
inc
into
cli
cli
push
xor
sub
mov
add
rcl
sub
popa
test
or
mov
les
notl
add
out
lods
out
xchg
lret
aaa
mov
daa
mov
xor
add
movl
jmp
and
mov
or
mov
xor
not
xor
subl
add
or
add
or
imul
adc
mov
sub
mov
andl
sub
cmp
movl
ja
mov
movl
jmp
mov
mov
xor
xor
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
jmp
imul
jb
adc
stos
mov
jg
jo
push
lods
stos
inc
insl
sbb
call
mov
sbb
dec
dec
lods
xchg
sub
mov
sub
mov
sub
inc
movsl
stos
push
add
xor
fmuls
jnp
and
xor
xchg
outsb
and
addr16
ja
jmp
lea
adc
or
push
mov
js
sbb
xchg
popa
pop
fisubs
int3
jl
cmpsl
xor
lahf
mov
jmp
pop
cmpb
cli
lahf
adc
xchg
mov
push
mov
dec
inc
js
xorl
sti
je
xchg
and
cmpsl
movsl
jmp
pop
xchg
inc
in
nop
sbb
mov
movsb
mov
cmpsl
movl
push
jo
clc
push
xchg
mov
call
in
jae
inc
mov
int3
mov
sarb
in
ret
imul
pop
call
fdivrs
fistl
dec
push
mov
test
sub
arpl
xor
cmovp
push
or
cmp
and
lahf
fnstsw
in
adc
ljmp
mov
mov
adc
push
fisubs
js
and
xchg
sub
mov
mov
xor
dec
mov
addb
xchg
icebp
pop
loope
xor
aam
jae
push
or
jbe
stos
in
enter
leave
stos
lret
xor
cmpsb
out
or
loope
jbe
into
mov
mov
inc
ds
push
cs
imul
jo
xlat
fistl
push
jg
fcom
pusha
in
cmp
inc
mov
mov
sub
fisubrl
jle
shlb
loop
js
sbb
in
inc
sbb
scas
rcr
adc
and
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
jmp
arpl
push
out
jnp
mov
shlb
imul
add
ja
hlt
adc
fistpll
sbb
mov
xor
dec
jl
jns
test
dec
push
pop
leave
cld
cmp
jno
xchg
cmp
lock
test
rorb
sar
data16
cmpsb
sbb
sahf
mov
xchg
idivl
cltd
inc
xor
mov
fimull
enter
out
icebp
and
loop
outsl
test
push
fs
xor
adc
xchg
rclb
arpl
and
sbb
aam
push
or
in
shlb
ja
pop
rcll
fnstenv
xor
push
mov
ret
cmp
test
dec
ds
inc
pop
aaa
mov
or
nop
inc
add
xchg
arpl
outsb
ffreep
jns
jo
jl
psrld
movsl
icebp
in
js
jge
sbb
push
or
dec
and
adc
stos
fmull
push
mov
xchg
push
scas
aaa
xor
lods
xchg
mov
and
sub
push
ret
xchg
ja
adc
bound
xor
push
push
fcmove
ret
hlt
mov
daa
movsl
notb
inc
sbb
shrl
sub
xchg
je
add
xchg
mov
mov
clc
dec
enter
pop
loopne
dec
insl
cli
mov
aas
ret
adc
outsl
xchg
mov
inc
or
add
sub
push
aam
shll
push
fwait
cld
cltd
dec
mov
pop
inc
js
xor
sbb
popa
fdiv
mov
loop
stc
add
jge
into
xor
addr16
sbb
cmp
movsl
addr16
push
cld
rcl
sub
mov
sbb
adc
inc
cwtl
jp
mov
sahf
std
fdivrp
dec
bound
dec
cmpl
fimull
push
imul
int3
pushf
hlt
dec
ret
xchg
lahf
jp
mov
xor
add
mov
mov
mov
jmp
bound
popf
cmc
mov
cltd
insb
aam
stos
xor
jg
jo
mov
in
cli
and
sub
int3
jnp
cli
mov
inc
out
lds
cltd
mov
pop
in
jb
push
aas
pop
je
scas
jp
fcmovb
cmc
dec
lahf
inc
cmpsl
stos
dec
mov
outsl
or
das
sbb
lcall
mov
inc
mov
test
mov
das
stos
andl
mov
adc
cltd
outsb
stos
cli
push
push
lea
inc
cwtl
arpl
push
xor
xor
into
mov
mov
stos
mov
xchg
sahf
icebp
sbb
jns
mov
cli
xor
test
hlt
scas
xor
add
mov
pop
dec
ffree
push
push
jne
and
sub
mov
jnp
in
outsl
cs
or
push
push
into
mov
jnp
xchg
xor
loope
mov
rcr
frstor
push
xor
lock
iret
cmp
out
pop
popa
pop
popf
or
add
push
jbe
mov
pop
lcall
test
sbb
stos
xor
scas
inc
icebp
mov
xor
mov
es
repnz
jnp
add
movsb
xor
cmc
dec
xor
mov
sbb
sub
jo
pop
add
or
xchg
std
ds
pop
scas
xchg
sarb
mov
mov
jle
je
cltd
xchg
test
mov
pop
movsl
adc
jge
adc
xchg
imul
jno
sub
in
lahf
scas
sbb
fwait
mov
scas
shlb
les
adc
std
shrb
aad
add
mov
dec
imul
cmpsb
cli
pop
jns
cmp
iret
cltd
mov
jne
movsl
inc
sahf
inc
inc
negb
xor
out
add
aam
inc
jle
das
out
lods
xchg
mov
jge
jns
hlt
or
sub
sub
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
jmp
or
das
mov
push
test
into
ret
mov
jo
imul
std
shl
lds
mov
jg
add
jb
add
add
js
or
jecxz
cltd
mov
loopne
push
lcall
test
sub
or
adc
nop
je
aam
dec
cmc
jmp
call
cwtl
sub
stos
fbstp
in
aas
dec
call
push
cmovge
mov
mov
sbb
loopne
jg
mov
sbb
push
insl
xchg
xor
cmpsl
add
mov
mov
inc
in
in
in
fsubl
adc
cwtl
hlt
ds
sub
pop
mov
test
icebp
insb
leave
ss
mov
lea
std
in
push
sub
jb
lret
out
scas
mov
add
jbe
dec
pop
insl
jecxz
mov
in
push
fsubrs
or
sub
pop
xorb
and
jo
mov
jne,pt
and
lret
dec
orl
cmp
mov
in
movsl
icebp
bound
add
cmc
enter
cmp
xchg
xchg
rcll
bound
cmp
movsb
push
jns
lock
repz
fmulp
mov
test
pop
adc
in
js
aaa
rolb
mov
out
rcl
mov
mov
dec
jo,pt
divb
jp
xor
xor
jbe
loope
nop
movsl
call
in
inc
in
sbb
jne
dec
pop
out
jp
cmpsl
lcall
cld
shrb
rorl
in
outsb
jo
mov
es
push
loope
fwait
std
dec
xchg
inc
or
les
mov
divb
cmp
pop
call
adc
hlt
xorb
cmp
stc
jmp
sbbb
cltd
js
mov
mov
jecxz
test
jo
imul
dec
fstpl
mov
and
insb
mov
cmp
sub
push
adc
movsl
xchg
mov
jb
adc
push
jle
iret
or
xchg
cmp
push
mov
dec
aam
cmp
loop
cmpsl
xchg
add
mov
out
popa
push
add
mov
mov
sti
inc
out
sub
roll
jl
cs
cwtl
jne
add
mov
outsb
mov
lahf
adc
mov
and
ja
adc
movsb
inc
xchg
addl
jl
cltd
pop
ret
xchg
ds
into
or
in
dec
flds
adc
pushl
out
mov
shr
pop
sbb
ret
inc
ljmp
int3
cld
xchg
mov
pop
ret
mov
mov
clc
push
scas
cmp
rcr
sub
and
mov
cwtl
dec
sub
mov
repz
cmp
js
mov
mov
scas
sub
gs
in
jg
decb
test
addl
mov
pop
mov
xor
pop
mov
jmp
movsb
test
int3
jne
rol
fistpll
out
add
adc
cmpsl
xchg
fwait
xchg
sub
dec
or
cmp
and
popa
xchg
inc
mov
xchg
xor
and
cli
mov
aam
mov
dec
jecxz
adc
mov
mov
or
mov
into
jmp
or
inc
mov
fstpt
mov
or
daa
fisubrl
mov
into
inc
sahf
xlat
mov
pop
mov
int3
push
pop
pop
and
stos
inc
cmp
pop
cli
lret
lret
loope
mov
call
mov
add
nop
mov
cwtl
sbb
adc
jmp
jmp
clc
icebp
mov
icebp
ficompl
hlt
jmp
imul
cs
movsl
lock
xor
xchg
clc
pop
shll
test
cmc
aaa
mov
insb
in
xchg
push
dec
fsub
adc
rcl
popa
aas
add
js
jno
mov
xchg
call
mov
loope
mov
js
les
lahf
adc
fmuls
les
mov
icebp
mov
shll
fdivr
fistpl
push
mov
jmp
sti
stos
jl
mov
sub
adc
adc
or
out
xchg
xchg
ret
push
insl
mov
cmp
push
xor
fdiv
loop
inc
push
into
out
ds
imul
xchg
rolb
pop
aam
sbb
or
leave
mov
aas
test
cmp
repz
dec
bound
scas
inc
dec
sub
lock
in
pop
pop
mov
test
dec
jp
shrb
xor
mov
adc
cmp
mov
sbb
xchg
mov
mov
shll
mov
xor
popf
xor
pop
outsl
adc
jns
ficomps
fstpl
push
leave
fidivrl
cld
adc
pop
stos
stos
jg
outsb
jb
add
outsl
in
sti
add
outsl
mov
add
sbb
sti
sbbl
add
pop
mov
push
imul
and
test
std
sub
adc
cltd
push
mov
imul
xor
sbb
xor
pop
enter
scas
push
cmp
mov
ss
sub
dec
pusha
les
jno
sarl
push
mov
xchg
xchg
out
mov
add
mov
mov
mov
xor
jmp
dec
iret
lods
dec
lods
imul
jg
and
out
jo
jg
jo
adc
mov
push
push
jle
je
lods
jmp
jmp
dec
and
cmp
mov
std
xor
add
or
jecxz
mov
ficompl
mov
sti
or
ret
and
xchg
jne
mov
ljmp
sahf
les
cmpl
jns
loopne
mov
jl
adc
push
push
insb
or
mov
dec
dec
push
xchg
es
xchg
nop
xor
mov
aas
int
lret
sti
mov
in
icebp
lcall
inc
fwait
mov
subl
bound
xchg
pushl
idivb
or
ljmp
fists
add
setno
adc
frstor
or
inc
sti
xor
lret
jno
add
dec
leave
fidivs
sub
dec
test
jp
popf
pop
ret
pushf
pop
shll
and
xor
mov
dec
vmovq
sub
mov
mov
or
repnz
std
add
mov
pop
test
mov
outsl
mov
or
test
cmp
pop
mov
lret
je
mov
nop
xchg
fs
inc
cmp
add
sbb
jb
xchg
pop
jae
cli
es
movsl
mov
pop
pusha
jbe
enter
leave
pop
pop
ds
movb
test
xor
bound
pop
bound
es
jg
mov
in
imul
sarb
out
inc
pop
xchg
inc
test
mov
lods
cmp
outsl
cmp
into
adc
stc
testl
xor
roll
mov
lods
rclb
mov
push
add
or
xchg
dec
icebp
popf
mov
mov
rorl
scas
xlat
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
jmp
int3
sub
push
mov
mov
jo
imul
fdiv
push
jns
mov
pop
add
or
cmp
mov
repnz
jnp
or
stc
add
shlb
lds
out
lcall
jp
dec
adc
loopne
mov
aas
in
pop
mov
loop
sub
mov
call
rolb
jl
sti
out
xchg
test
dec
mov
fwait
jbe
leave
cld
jns
shll
sbb
jno
sbb
imul
daa
ja
xor
dec
or
je
inc
or
sub
add
sbb
xchg
lahf
popa
mov
call
test
rolb
inc
jl
jmp
lcall
or
jl
arpl
lock
mov
mov
stc
jmp
subl
jge
fdivrs
push
push
into
mov
add
dec
stos
inc
mov
add
add
lea
leave
mov
jae
push
repnz
in
insb
inc
pop
shll
pop
inc
and
mov
push
cmp
mov
inc
jb
sub
aaa
inc
jecxz
sbb
test
push
adc
fwait
inc
jge
fs
push
rorb
xchg
mov
inc
arpl
popa
ds
mulb
fsub
cmpsb
mov
jnp
push
jns
pop
lidtl
fisubrl
sbbl
lret
insb
push
cs
daa
mov
in
out
outsb
lret
repnz
lahf
mov
add
mov
out
and
sub
loop
fidivrl
inc
or
adc
push
sbb
mov
sbb
mov
pop
negb
jge
icebp
test
jmp
push
ds
cltd
lock
push
pop
rorl
jge
xor
add
imul
mov
xor
add
mov
lea
mov
mov
jmp
popa
ja
add
xorl
adc
mov
inc
mov
jo
jg
jo
sub
pop
jbe
xor
hlt
add
push
shlb
pop
daa
lods
jno
sub
jbe
fnstsw
in
addr16
stos
idivb
movb
cmp
outsl
loopne
xchg
xchg
push
ficoms
xchg
int3
call
push
xor
mov
int
test
mov
add
inc
inc
ret
or
mov
inc
xchg
pop
stc
inc
or
push
xor
xor
ret
and
stos
mov
insl
lea
or
xor
mov
pop
dec
add
adc
push
sbb
cmp
mull
faddl
jns
rolb
mov
ljmp
inc
push
gs
sahf
xlat
add
xchg
imul
cmp
fnstsw
cmp
xor
mov
mov
dec
cmc
test
add
mov
into
les
and
adc
pop
fcomp
xor
jo
bnd
aas
xor
testb
add
jne,pn
mov
dec
and
adc
inc
jp
add
cmp
lret
movsl
lea
inc
pop
cmp
addr16
hlt
mov
cs
out
push
fnstsw
test
and
rcr
int3
xchg
mov
cmp
sbb
insb
xchg
xchg
ss
mov
mov
xchg
icebp
dec
jge
in
cld
xor
ljmp
dec
test
dec
inc
pop
push
push
fiaddl
or
test
imul
insl
leave
or
in
les
leave
xor
rorl
je
adcb
cmp
jmp
fwait
push
jl
xor
test
xor
leave
pop
jecxz
add
imul
fcoml
or
mov
pushf
push
sub
fs
int
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
xorl
push
call
test
jne
addl
xor
jmp
call
cltd
movl
cmp
jne
cmp
je
push
subl
call
addl
test
movl
jne
subl
push
xor
mov
or
mov
xorl
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
call
cmpl
jb
lea
subl
mov
lea
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
pushl
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
xor
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
push
pushl
call
jmp
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
push
pushl
push
pushl
push
call
mov
dec
mov
jmp
mov
xor
mov
mov
addl
push
mov
sbbl
xor
sbbl
push
xor
mov
adcl
add
mov
mov
movl
cmp
mov
je
mov
xor
subl
add
addl
imul
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
mov
mov
sbb
mov
sbb
xor
not
add
mov
mov
mov
subl
xor
add
movl
cmp
jne
xorl
pushl
subl
pushl
call
mov
mov
xor
mov
sbb
mov
inc
mov
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
mov
movl
mov
and
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
xor
or
sub
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
mov
mov
sub
mov
xor
add
and
mov
mov
mov
subl
push
adc
push
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
jmp
cmp
inc
mov
negl
jle
mov
shl
jo
xchg
jg
jo
sbb
cmp
lahf
out
pop
test
imul
fwait
cltd
and
jno
sbb
pop
pop
test
icebp
movsl
xorl
cmp
push
add
in
mov
mov
mov
pop
adc
sub
pop
bound
lea
out
push
mov
js
sbb
ss
sarl
rcrb
lahf
in
jecxz
daa
rcll
inc
es
sti
cmp
jecxz
pop
mov
loop
in
adc
sub
ljmp
repz
sub
sahf
cs
in
add
jg
addr16
pop
js
xorb
addr16
and
je
cmc
bound
fs
repnz
test
inc
mov
jbe
call
mov
into
fistl
sub
xchg
sub
inc
xchg
shl
lock
adc
mov
jnp
hlt
and
fldt
pop
mov
les
add
inc
sahf
int3
dec
lock
mov
dec
dec
mov
int
addr16
mov
jmp
push
mov
lock
cld
xor
push
imul
cltd
cmp
sub
cld
sub
stc
popf
out
push
dec
push
iret
xchg
out
jg
mov
clc
lods
inc
push
xchg
mov
mov
and
push
dec
or
lock
and
rclb
mov
js
lods
xchg
shl
push
jmp
mov
jae
jno
mov
hlt
or
lahf
pop
cmp
jo
xchg
jg
jo
ss
add
cli
icebp
mov
outsb
cltd
roll
ret
mov
loope
stos
cmp
adc
or
mov
data16
push
ja
cmpsl
xor
inc
lcall
mov
fwait
scas
adcl
insb
sarl
in
data16
call
bound
xchg
movsl
das
xchg
mov
les
dec
push
loope
xchg
cmp
add
jno
inc
and
cltd
test
cmp
xor
in
add
jg
pop
cmc
xor
imul
lods
push
cli
adc
mov
outsl
sbb
or
push
nop
sbb
push
ret
pop
mov
in
xchg
movsl
pop
inc
or
jmp
repnz
push
sarb
mov
sbb
sub
ja
stos
xchg
lock
inc
mov
into
xchg
xor
jbe
pop
mov
orb
inc
cwtl
nop
in
out
hlt
jp
scas
iret
sub
mov
push
pop
jmp
negl
enter
mov
lods
pop
mov
lret
dec
jns
mov
cmp
mov
icebp
imul
hlt
dec
scas
stos
lret
pop
rcrl
stc
lods
hlt
pop
or
cld
in
push
cs
dec
loopne
mov
pop
xor
dec
mov
jbe
inc
mov
addr16
arpl
push
popf
in
in
push
nop
scas
and
hlt
outsb
or
in
ret
jbe
jno
and
sahf
or
mov
leave
mov
sbb
adc
adc
add
sbb
mov
notl
lea
xor
mov
mov
add
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
add
mov
movl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
and
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
mov
addl
mov
sub
xor
add
add
neg
mov
mov
movzwl
sbb
mov
movl
mov
mov
orl
mov
addl
movzwl
add
movl
mov
jmp
jbe
dec
sahf
jb
jbe
xor
push
sbb
xchg
jg
jo
jbe
push
or
adcb
clc
and
mov
out
in
fwait
inc
fstpl
dec
dec
popa
xor
andb
out
adc
xor
jg
dec
mov
cs
and
loopne
std
fmuls
mov
pop
out
add
jmp
mov
adc
lret
ret
xorl
jmp
repz
test
fstps
inc
pushf
dec
xchg
les
mov
enter
lcall
and
sbb
dec
movswl
cmpsb
cmp
xchg
cltd
push
sbb
adc
sbb
sub
or
cli
shll
xor
inc
sarl
bound
and
div
xor
jne
insl
push
movsl
clc
mov
push
jnp
jo
cmp
lret
fdivrl
cmpsl
hlt
aas
lods
and
jb
cld
sbb
or
fsubl
call
and
mov
jno
nop
xchg
pusha
mov
pop
ljmp
push
cmp
and
adc
cmp
les
mov
addr16
ret
fimull
jg
ljmp
in
ja
fs
pop
aas
xchg
insb
or
xchg
mov
movsb
aas
aam
xchg
cmp
mov
dec
insb
jecxz
stos
sbb
mov
add
js
sbb
addr16
sbb
xchg
mov
daa
pop
mov
cmp
lods
mov
call
push
rorb
popf
test
nop
jnp
push
jmp
icebp
sahf
push
and
inc
mov
inc
or
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
mov
mov
mov
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
jmp
and
repnz
inc
std
pop
fstpt
fbld
jmp
jo
jg
jo
mov
flds
push
popa
mov
pop
sbb
adc
mov
pop
adc
icebp
adc
pop
dec
stos
pop
and
loop
hlt
outsl
mov
xchg
cmp
pop
adc
dec
xchg
adc
and
mov
jmp
out
jle
jecxz
push
jne
adc
adc
add
mov
aas
imul
leave
and
sar
loopne
out
rcrb
je
stc
insl
sub
enter
xchg
mov
sub
push
dec
testb
adc
sbb
loop
cmc
sarl
pop
jbe
loope
rol
push
sahf
pop
cmp
add
arpl
leave
or
mov
mov
mov
aad
mov
divl
mov
lds
pop
dec
movsl
fdivp
inc
jno
je
es
out
popa
cmp
dec
dec
scas
lret
sbb
ftst
pop
inc
ja
jae
push
pop
repnz
jmp
loop
dec
dec
xchg
clc
rcll
cmpsb
jle
lods
int3
fiaddl
subb
sbb
lock
or
daa
repz
add
iret
jne
mov
xchg
jle
sbbl
inc
xor
mov
and
jnp
mov
and
addr16
jno
sbb
andl
pop
divb
add
repz
scas
cld
dec
nop
dec
and
xor
lret
incl
loope
out
sbb
pop
jb
in
cmpsb
sbb
cmp
sarl
in
xor
stos
sub
mov
lea
xor
sub
mov
movzwl
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
jmp
icebp
in
popf
adc
xchg
cld
insl
imul
jo
jg
jo
sarl
cmp
push
xor
lahf
jne
pushf
shlb
aam
mov
lock
push
shlb
push
aaa
xchg
test
xor
fdivrl
and
jge
mov
xchg
in
or
jmp
pop
in
nop
xlat
fildl
add
jbe
cs
in
adc
xchg
jp
mov
mov
sbb
or
cmp
imul
cli
push
pop
in
cmpsb
gs
test
scas
dec
or
dec
clc
sar
jecxz
insb
bswap
insb
and
mov
jnp
xchg
or
scas
or
push
jno
das
arpl
cs
imul
jge
add
push
or
add
push
sahf
or
cmpl
adc
sbb
scas
subb
nop
push
mov
and
pop
push
into
jg
or
in
popf
inc
loopne
xor
mov
cmp
adc
pop
dec
mov
fcmovnu
stos
fadd
js
jmp
inc
hlt
cmc
sub
lret
push
mov
ja
mov
js
in
fucomi
fsts
neg
cwtl
pop
push
fcmovnb
in
lcall
pushf
outsl
cmp
sbb
arpl
mov
cmp
mov
out
enter
fs
push
out
sbb
cmp
das
cmp
add
lret
test
popf
insl
mov
dec
inc
mov
adc
nop
sub
subl
sub
push
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
jmp
iret
dec
mov
mov
icebp
dec
dec
int
dec
sub
jo
xchg
jg
jo
xchg
cwtl
ja
mov
outsl
mov
inc
sbb
je
jl
sbb
or
hlt
les
sahf
shr
loop
lahf
mov
clc
mov
scas
mov
sahf
dec
dec
or
or
dec
outsl
add
loopne
out
xor
leave
in
sahf
ret
or
push
test
in
es
adc
ja
inc
ffreep
pop
xchg
jp
mov
push
cli
push
je
icebp
je
xchg
mov
scas
push
popf
jg
push
pop
pop
pop
int3
sbb
sbbb
inc
inc
clc
sbb
nop
sub
sub
rcrl
push
sub
pop
dec
dec
das
test
shll
mov
xchg
or
cmp
movsl
sub
pusha
leave
aas
out
xor
jo
lcall
cmpsb
lea
scas
mov
imul
outsl
fimull
adc
imul
add
pop
add
les
ret
cmp
test
movsl
shl
dec
mov
gs
lods
notl
repz
aam
adc
push
push
test
cmc
cmpsl
call
and
mov
mov
inc
xchg
mov
or
or
mov
cmp
xor
dec
rcrb
cmp
pop
incl
xor
cmpsl
scas
sbb
into
pop
movsb
mov
cmpsl
mov
cmc
pusha
stc
out
xchg
repz
or
mov
dec
shrb
repnz
inc
leave
aad
mov
mov
jmp
mov
icebp
in
icebp
mov
push
cmpsl
mov
jo
jo
xchg
jg
jo
scas
xchg
shrl
mov
pop
mov
and
xchg
mov
push
pop
and
sub
sbb
xor
inc
and
outsl
sti
add
push
mov
jle
mov
lods
push
enter
xor
add
or
mov
xchg
inc
sub
cmpsl
arpl
imul
call
add
bnd
cmp
iret
pushf
pop
sbb
inc
mov
push
sbb
stc
cs
add
xor
mov
stos
xchg
mov
inc
das
cs
inc
jle
movsb
sbb
cmovne
add
or
rol
mov
repz
sub
cmp
nop
xor
lods
lahf
jns
in
les
inc
iret
arpl
negl
push
iret
scas
fucom
xor
mov
out
imul
cmp
lods
pop
es
jl
adc
jns
mov
mov
in
or
jnp
mov
add
repnz
mov
sub
popa
mov
fcomps
pop
mov
jge
ss
roll
inc
and
adc
mov
call
mov
xchg
scas
xchg
stos
adc
test
adc
shl
iret
xchg
pop
loopne
jle
fnstenv
std
mov
lcall
aaa
push
pop
iret
lret
jle
mulb
std
rep
test
inc
or
add
cmp
je
mov
mov
add
mov
mov
mov
jmp
dec
push
sub
imul
xor
jo
jg
jo
gs
sti
dec
mov
jmp
xchg
sbb
ret
jl
ret
adc
les
xchg
gs
mov
push
ljmp
or
push
jb
imul
cmp
fwait
pop
out
mov
mov
xchg
jmp
scas
jecxz
jne
push
push
xchg
jno
adc
push
ljmp
cmp
imul
cmp
xor
mov
lock
jne
ljmp
dec
xor
mov
and
or
insl
mov
push
orb
out
out
dec
loop
adc
das
nop
add
lock
daa
popf
fimull
ljmp
pop
lret
aaa
into
nop
stos
pop
bound
pop
mov
je
shll
xor
dec
jb
adc
iret
mov
xlat
and
cmp
out
sub
ret
xlat
pop
xchg
insl
mov
push
dec
xchg
dec
xchg
les
fisubrl
cli
subl
and
jp
das
mov
xor
xor
out
sub
popf
sub
mov
ficoms
push
sbb
mov
pop
dec
out
loop
test
movsl
pushf
lock
dec
cmp
outsb
inc
into
sti
cmp
jb
add
pushf
out
dec
test
push
int3
repnz
pushf
jg,pn
push
out
mov
cmp
dec
mov
fbstp
mov
cltd
fldcw
sti
mov
mov
outsb
push
inc
inc
dec
inc
movsb
cmp
or
imul
or
mov
add
frndint
std
imul
mov
xor
mov
repz
xchg
jg
jo
out
std
add
cmp
inc
push
sub
lahf
sub
ja
and
lods
pop
push
pusha
idivl
repz
movsl
push
out
leave
fldcw
xor
sub
xor
push
push
inc
add
outsl
ret
jno
mov
inc
mov
js
inc
xchg
pop
pop
sub
and
mov
in
std
or
daa
xchg
lock
sub
mov
dec
jecxz
push
push
fiadds
cmp
fdivrs
iret
in
xor
lods
sti
push
js
mov
xchg
cmp
idivb
aam
jle
fisubrs
cmpb
scas
dec
test
mov
gs
mov
adc
push
stos
rcrl
stos
adc
jnp
inc
cmp
sbb
mov
pushf
je
leave
push
mov
mov
push
and
insl
cmp
lret
mov
pop
jne
mov
xor
xor
loopne,pt
inc
dec
push
mov
jge
sbb
mov
xor
popf
or
ret
es
fwait
mov
adc
out
inc
dec
mov
outsb
hlt
dec
pushf
fsub
and
dec
jb
mov
jl
sbb
pop
cltd
shrb
les
fistpl
sub
jecxz
and
jg
pop
in
gs
push
add
mov
pushf
xchg
div
daa
hlt
insl
shll
iret
push
popf
loop
outsl
lds
fistpll
push
mov
add
jmp
hlt
sbb
rep
cmp
aaa
popf
sti
leave
dec
bnd
xchg
jg
jo
add
mov
mov
icebp
cmp
mov
andb
cltd
mov
movsb
adc
shrb
in
push
fistps
outsb
push
pop
in
movsb
nop
push
add
mov
adc
mov
fs
and
daa
test
jne
sub
mov
fbld
pusha
rolb
xchg
mov
dec
mov
and
sub
mov
fadds
mov
jecxz
mov
mov
popf
mov
insb
loopne
rcrb
or
nop
aad
shrb
sbb
icebp
filds
sub
pusha
out
das
mov
and
icebp
inc
and
lea
jb
clc
push
inc
add
sti
push
insl
pop
pop
fisttpll
jo
fstps
sub
adc
pop
sub
xchg
stc
adc
push
cwtl
push
cmc
jle
int
in
xchg
loopne
mov
sub
pop
gs
fiaddl
enter
rcll
inc
mov
aam
les
inc
insb
wrmsr
mov
rorb
pop
popf
push
shlb
push
add
sub
mov
lcall
outsl
lods
adc
les
inc
add
lcall
and
dec
mov
in
push
jne
fst
mov
outsb
shlb
test
lret
jmp
rclb
jo
cmp
mov
mov
inc
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
jmp
lret
icebp
dec
cmp
adc
in
jo
xchg
jg
jo
mov
xchg
push
sub
ret
fildll
pushf
xor
sahf
push
pop
adcl
push
and
les
add
mov
dec
dec
outsl
and
movsb
in
fistpl
enter
fs
stc
adc
sub
xchg
xchg
mov
sub
cld
cmpl
push
shlb
lahf
clc
in
popf
mov
pushaw
lahf
pop
fcomi
outsb
cmc
jg
mov
mov
divb
lock
inc
mov
or
mov
cmp
cld
icebp
push
push
jns
mov
sarl
daa
daa
dec
clc
lock
fs
and
push
out
sub
repnz
leave
ja
xor
and
pop
mov
or
ret
mov
jbe
mov
adc
test
lret
cmp
dec
xchg
or
nop
in
fwait
dec
cmp
xchg
xlat
mov
cmpsl
jo
and
lods
lahf
int
adc
pop
mov
or
fisttps
pop
mov
gs
cmp
sbb
xor
subb
sarb
dec
cmp
mov
leave
mov
cmp
js
in
xchg
cld
pop
test
dec
stc
jmp
test
int
mov
call
fpatan
mov
mov
mov
or
sub
je
popa
adc
pop
sub
adc
xchg
cwtl
or
adc
icebp
loopne
push
mov
and
daa
mov
cmp
mov
clc
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
push
sbb
movl
sbb
mov
orl
jmp
push
mov
xor
je
stos
aas
lods
and
jns
jo
jb
jo
cmpsb
add
xchg
mov
fs
jns
sub
pop
xor
dec
mov
push
addb
xchg
repnz
mov
fistps
shll
xchg
lahf
scas
add
leave
push
rclb
push
enter
lcall
movsb
out
xor
imul
clc
cmp
icebp
mov
push
imul
dec
aas
je
icebp
inc
fdivs
or
mov
add
mov
sbbb
cltd
xchg
jae
mov
ss
mov
lds
xchg
pop
shrl
adc
xor
mov
or
clc
sbb
aaa
testb
cmp
into
daa
mov
loope
gs
pop
std
lods
cmpsl
mov
push
das
jnp
fs
add
cmpl
pop
cmp
inc
out
das
lods
pop
ss
mov
jecxz
shll
popf
andl
outsb
push
add
inc
fmuls
push
xor
xlat
es
add
jge
sbb
mov
push
or
add
out
pop
pop
mov
pop
cmp
pusha
xor
adcb
int3
aam
push
in
inc
std
cmp
mov
fnsave
test
cs
orb
rcr
inc
inc
sahf
mov
push
jnp
sub
pop
and
cld
daa
jmp
test
xor
iret
out
ds
xor
xchg
filds
inc
call
jmp
shll
jmp
pop
or
jo
outsl
or
mov
sbb
arpl
jp
sub
outsl
dec
cwtl
jmp
das
inc
daa
shl
push
ret
jg
inc
push
jge
xchg
and
in
jg
or
sbb
and
es
push
rorl
je
data16
repz
cmp
aas
mov
add
andl
xor
cmp
movl
jne
mov
mov
movzbl
xor
mov
add
xor
mov
mov
or
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
pushl
call
cmpl
jb
xor
push
jmp
je
test
pop
pop
or
cld
jo
jb
jo
lret
cmc
mov
cwtl
sub
mov
repz
testb
add
lods
inc
out
js
mov
pusha
add
sarl
mov
xor
jns
jecxz
jbe
bnd
aas
test
fists
lcall
std
test
or
xchg
xor
test
sbbl
lock
movl
xchg
js
orb
fisubrs
cltd
jmp
test
jns
mov
ret
and
in
addr16
aad
adc
xchg
xchg
add
inc
pop
dec
and
clc
fbstp
insl
ret
sbb
dec
fwait
mov
leave
sbb
bound
cld
in
mov
sub
ss
pop
cmp
mov
dec
jne
cli
adc
clc
loop
push
push
xor
rcll
mov
xlat
inc
sbbl
dec
incb
lods
mov
movsl
mov
lahf
aam
insb
mov
mov
shrl
cmp
mov
or
add
in
push
or
notl
and
les
jno
cmp
add
mov
rclb
fs
sbb
movsb
leave
xor
sti
mov
jge,pn
cltd
sbb
ss
insl
ret
repz
sti
adc
lahf
push
xor
cmp
dec
std
jbe
xor
cld
xor
mov
xchg
mov
xchg
je
clc
mov
and
jecxz
and
push
add
fdivrs
xchg
push
je
sbb
dec
bound
dec
add
mov
clc
jmp
mov
arpl
push
adc
inc
inc
adc
mov
add
insb
js
add
mov
cmp
loop
add
xchg
mov
fisttpl
jb
add
shr
add
add
cmpsl
push
in
gs
arpl
mov
jo
jg
jo
out
call
and
in
jno
pop
mov
xchg
leave
rep
int
in
adc
into
test
pop
pusha
aam
jbe
lds
jb
pop
xchg
dec
cmp
inc
cwtl
shll
mov
mov
and
cs
call
repnz
fimuls
inc
call
mul
pop
testl
push
and
enter
rolb
push
mov
push
test
jnp
orb
xchg
out
jmp
ja
lea
mov
xor
jo
test
shll
push
mov
xchg
test
dec
popa
dec
cmc
pop
add
mov
xor
pop
in
or
xor
pop
mov
xor
das
add
or
xor
mov
jl
ds
ret
outsb
ficoms
adc
xchg
cmp
push
ss
jmp
mov
sub
add
adc
xchg
fiaddl
push
xchg
xlat
push
add
insl
push
out
fdivl
sub
shlb
xchg
sbb
mov
cld
sub
pop
pop
fcompl
mov
sbb
repz
stc
push
aaa
dec
dec
arpl
add
push
and
xor
std
testl
sbb
outsl
sbb
dec
jb
out
push
aas
mov
push
out
push
out
dec
jl
lahf
ret
movsb
ljmp
push
xchg
pop
inc
repnz
dec
test
adc
mov
es
push
lds
jl
icebp
mov
add
les
stos
nop
and
test
dec
jecxz
sbb
fimuls
sbb
sahf
jbe
test
subb
adc
jae
or
leave
cmp
fsubp
mov
loopne
loop
test
push
pop
je
mov
jmp
mov
xor
add
jmp
mov
jmp
or
scas
shll
jb
loop
dec
jecxz
jg
jo
jb
jo
out
loope
push
ret
pop
push
xchg
xor
jns
push
les
mov
outsl
add
pusha
test
dec
mov
cmp
bound
leave
mov
je
push
int
xlat
mov
cwtl
lock
pusha
push
jbe
sarb
cmc
xchg
cmp
mov
or
or
std
pmuludq
mov
jge
cmpb
jns
inc
insl
lret
mov
pop
push
pop
pop
cmpsl
test
sbb
mov
pop
vmulpd
push
popa
incb
clc
enter
and
outsl
fcmovb
push
add
sub
inc
mov
mov
imul
movsb
ss
inc
and
inc
inc
jle
pop
dec
mov
sbb
repz
rorb
ds
push
out
pop
fistps
sbb
mov
mov
cltd
inc
aaa
pop
adc
cmpl
dec
sub
and
shrb
ror
jnp
out
pushf
jno
cmpxchg
int3
push
xchg
adc
icebp
dec
fs
mov
aam
sbb
or
xchg
sti
lret
mov
xchg
ds
lahf
adc
mov
cmp
push
cmp
pop
pusha
out
ret
into
rorl
in
repnz
mov
and
pusha
mov
fadd
inc
movsl
scas
xchg
push
inc
mov
test
pop
xor
int3
jge
scas
lret
stc
sbb
mov
imul
sbb
mov
imul
and
cmc
add
daa
iret
movsl
sbb
push
jp
call
xchg
or
mov
gs
push
mov
nop
pop
in
shll
adc
adc
test
ficompl
lret
mov
or
mov
push
or
jmp
jnp
xchg
les
sub
scas
arpl
and
jo
jb
jo
lahf
negl
jns
in
js
in
mov
pop
jbe
int3
adc
add
mov
repz
add
jne
repz
test
jns
pusha
push
int
test
nop
scas
cmp
and
cmp
push
adc
repnz
sbb
in
shlb
adc
xchg
jae
inc
faddl
or
pop
loopne
pop
inc
cmp
jne
repz
leave
test
je
inc
mov
pop
int
fdivrs
incl
gs
sub
in
jns
sub
rorl
je
sbb
aaa
xchg
pop
test
jp
add
mov
sbb
imul
ffree
pusha
push
aas
dec
fcoml
fs
push
inc
push
fwait
or
adc
mov
pop
xor
les
mov
jns
adc
inc
and
jno
mov
and
adc
daa
jg
imul
mov
or
inc
dec
xchg
cmp
add
mov
and
and
and
inc
mov
mov
in
xchg
lret
mov
mov
inc
pop
xor
loop
test
movsl
sbb
outsb
or
es
jp
and
rorl
arpl
push
or
pop
repnz
test
shlb
cld
dec
and
negl
sub
dec
in
sub
ss
popf
jle
dec
mov
and
movsl
ds
pop
mov
sbb
aas
push
sahf
push
lahf
push
aas
adc
shl
mov
imul
add
xor
into
jne
mov
xchg
jnp
adcb
adc
mov
inc
mov
xor
mov
mov
imul
std
mov
in
adc
jle
mov
es
mov
add
ret
push
mov
mov
mov
and
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
push
mov
xor
cmp
je
mov
mov
sub
xor
jmp
xchg
roll
icebp
lods
add
rcrl
leave
pop
jae
jo
leave
jle
jo
add
lahf
mov
lea
cmp
jg
outsl
sti
or
jg
add
mov
adc
test
adcl
cmp
jne
push
xchg
sbb
jecxz
mov
add
divl
lea
push
xor
cld
in
ja
push
xor
mov
cmp
mov
or
cmpsl
aas
jecxz
outsl
cs
mov
add
pushf
cmp
mov
fsubr
call
icebp
or
xchg
icebp
daa
fildl
jb
jo
sbb
xchg
inc
cmp
aas
lret
fidivrs
outsl
cmpsl
xchg
and
outsb
pop
sti
xor
cmp
pop
jae
xchg
pop
cmpl
out
mov
shll
xor
pop
adc
fucomp
xchg
pushf
mov
test
inc
cmp
aam
loope
push
push
arpl
fsubr
scas
call
aad
mov
jns,pt
sbbl
dec
and
sbbb
iret
fwait
lods
pop
aad
adc
push
fnsave
enter
js
cli
mov
pop
ds
imul
inc
stc
sbbl
sbb
xchg
int3
fwait
shlb
test
xor
push
shl
adc
loope
imul
enter
clc
test
xor
sub
into
cmpsl
mov
inc
fcompl
mov
sti
sub
lret
ret
xlat
outsb
inc
hlt
and
lock
arpl
jecxz
pusha
icebp
xchg
lahf
ds
int3
add
adc
sbb
imul
sub
mov
fistpl
cmp
mov
cli
scas
mov
mov
shlb
xchg
lret
int
cmp
lret
fdivrl
pushf
je
out
inc
cmpsl
pop
mov
popa
cmp
test
xchg
sub
mov
pop
enter
sub
loopne
mov
loope
xchg
inc
jge,pn
decl
jo
jbe
xor
ret
mov
xor
add
scas
les
out
xchg
xchg
mov
int
lret
ficoml
mov
pop
lods
mov
adc
add
mov
add
jmp
mov
xor
jmp
pop
scas
sbb
push
pop
mov
pop
movsl
leave
and
xorb
jle
jo
xchg
jmp
dec
cltd
shl
push
inc
insl
xchg
dec
popa
daa
xor
sub
and
fcoms
inc
mov
call
cmp
outsl
cmp
dec
idivb
push
cli
test
call
mov
jg
jne
sub
or
xor
fadds
ret
push
add
lahf
xchg
and
fldenv
jb
dec
adc
enter
push
cmp
enter
jmp
daa
testl
xchg
loope
mov
clc
cmp
lock
mov
jge
shl
lds
data16
jecxz
cmp
sub
mov
jo
loopne
sar
int
js
and
xchg
fnclex
rcll
shll
add
imul
xchg
adc
mov
cmp
inc
push
jnp
clc
cmp
xor
inc
push
or
scas
push
out
leave
in
mov
xchg
scas
sbb
sub
test
mov
cmp
int
jno
and
push
push
mov
and
lock
clc
sub
sub
jecxz
idivb
incb
mov
flds
or
add
mov
movsl
xchg
mov
push
aad
push
jo
test
and
xchg
or
rcll
cmp
sbb
xchg
mov
jg
test
push
cli
adc
sahf
jl
lret
pop
sbb
cwtl
andb
clc
jmp
adc
lret
pusha
mov
jp
or
frstor
das
andl
add
loopne
push
add
jle
pop
in
or
adc
ficoms
jp
dec
icebp
int3
or
cmpsb
push
lods
add
cmc
inc
enter
dec
dec
pop
in
dec
gs
adc
cmpsb
out
cmp
popa
mov
jo
aaa
cmp
sub
mov
rcl
xor
add
rorl
sbb
xor
lock
scas
les
inc
mov
adc
jmp
ja
and
dec
xchg
sub
movsl
xorb
jle
jo
jne
inc
or
cmp
mov
je
adc
xchg
push
cmp
or
scas
lock
sub
xchg
push
icebp
pop
imul
xchg
lret
dec
mov
adc
add
insl
sti
push
xchg
push
fdiv
add
lock
test
add
insb
rorl
jge
je
add
push
movsb
dec
daa
repz
jmp
mov
aam
cmp
icebp
aaa
inc
xor
sub
repnz
lods
or
sysexit
push
out
lahf
repnz
xlat
sbb
add
jbe
sahf
mov
jecxz
pop
out
xor
addb
jns
dec
mov
jmp
or
push
in
int3
popf
xlat
sahf
addb
cmp
ja
mov
ds
hlt
pop
pop
dec
cmp
mov
jmp
test
xchg
rcrl
rclb
mov
fdivs
mov
pop
xchg
mov
xor
shll
push
push
sti
sar
icebp
ss
cmp
jmp
push
out
inc
cmc
mov
pop
cmp
lds
test
lret
mov
inc
adc
jge
int
inc
pop
mov
push
xchg
xchg
and
fcos
sub
ret
sti
jp
adc
roll
jnp
sti
pop
cld
out
cltd
repz
rcll
sbb
jo
mov
stc
xorl
andb
mov
cmp
adc
icebp
mov
jmp
cmp
cmp
bound
add
xchg
cmp
pop
lods
int3
faddl
mov
inc
xor
ret
lret
xchg
and
cwtl
lds
testl
and
gs
inc
dec
mov
push
insl
sarb
and
lods
cmp
mov
sub
pop
je
cltd
fdivl
mov
push
lret
lock
jbe
cmp
adcb
inc
xor
jmp
shll
outsb
and
push
loop
fwait
mov
and
shr
xchg
add
cld
out
pop
stc
push
mov
fidivrl
lock
push
xor
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
movl
mov
mov
sub
and
movl
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
xor
xor
xor
add
sub
imul
mov
addl
push
mov
sbb
xor
sbb
mov
add
andl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
sub
mov
mov
sbbl
push
adcl
push
adcl
test
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
pushl
pushl
call
jmp
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
notl
mov
neg
mov
movzwl
add
mov
imul
jmp
xchg
imul
sub
jo
dec
jge
jo
int
pop
pop
jg
sub
outsb
jg
jo
std
mov
push
es
jae
cmp
dec
fcmovnbe
and
mov
enter
sbb
sub
inc
or
xchg
ss
cs
cmpsl
insl
sbb
repz
inc
loopne
cmp
data16
lcall
lock
clc
jg
dec
xchg
test
push
xor
pop
adc
xchg
cmpsl
inc
sub
enter
adc
dec
xchg
data16
leave
lods
out
das
imul
lret
or
movsl
dec
jae
mov
push
mov
into
dec
lcall
sub
cmpb
imul
xchg
popa
sahf
dec
jecxz
xor
xorl
jns
sbb
push
jns
jl
xchg
lock
lock
bound
add
and
ficoms
dec
add
lahf
dec
push
aaa
push
xchg
lds
pop
xchg
push
add
xorb
data16
push
dec
popf
inc
mov
pop
insb
jl
repz
mov
orl
pop
mov
lods
or
sbb
aam
mov
inc
leave
dec
jae
pop
out
xor
jae
pop
shl
subb
aad
sub
pop
aam
out
or
sub
add
movsb
out
sub
mov
add
xlat
dec
loope
addr16
mov
xor
divb
test
aaa
sub
decb
push
rolb
inc
adcb
mov
cmp
push
pop
sbb
divl
addr16
mov
or
stos
push
adc
xchg
data16
inc
jmp
rcrb
in
imul
push
or
dec
xchg
sbb
in
and
and
cmp
mov
sub
and
mov
loopne
jo
or
dec
adc
sub
inc
les
sbb
pusha
incb
push
sbb
pop
dec
loopne
cwtl
loop
cld
movsl
popf
out
pop
sbbb
pusha
push
mov
and
lret
out
or
aas
sub
leave
xor
pusha
xchg
push
and
jmp
fimuls
repz
test
mov
lea
insb
add
int
add
jmp
test
inc
fcomps
repz
ret
pop
mov
loopne
lods
in
jno
xor
hlt
mov
and
in
enter
cmpsb
ljmp
inc
jae
bound
sbb
push
ljmp
in
jns
xor
scas
stc
ljmp
rcll
xchg
mov
stos
xorb
sbb
sbb
lcall
fmuls
push
dec
fsubp
cmp
sbb
test
cmpsb
xor
or
inc
xchg
xor
mov
and
scas
jge
les
add
xor
sbb
push
jecxz
jge
pop
sahf
das
hlt
pop
add
sahf
test
add
sbb
mov
or
enter
dec
lods
rcr
xchg
jge
rcrl
mov
mov
pop
test
out
xchg
ficoms
cmp
pop
adc
imul
ljmp
dec
leave
fnsave
inc
pop
jl
jbe
fisubs
dec
mov
rorl
fdiv
mov
jbe
push
imull
decb
shll
sub
and
jge
push
jmp
das
dec
int3
iret
js
mov
add
not
mov
or
mov
subl
xchg
sub
xorl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
orl
mov
adcl
jmp
addr16
ss
ja
or
in
pop
das
xchg
jo
dec
jge
jo
mov
add
xchg
xor
inc
fs
mov
lcall
fdivs
aad
pushf
add
sarl
dec
es
adc
pop
dec
xor
xor
xchg
addr16
aad
enter
icebp
popa
stc
enter
mov
negl
cmp
aad
adc
sbb
fwait
lds
addb
mov
outsb
jmp
adc
xchg
movsb
pop
sub
sub
lods
gs
push
sub
mov
or
cwtl
push
xor
dec
adc
movsl
mov
push
and
cmp
test
insl
xchg
pop
js
cmp
shll
sbb
std
in
sbb
imul
jle
mov
popa
cli
cmp
dec
shr
popa
stos
sbb
jle
xor
stc
and
pop
cmp
movsb
wrmsr
pop
xor
xor
lods
mov
mov
addr16
lret
and
push
fbstp
out
in
loope
cs
xchg
pop
seto
ljmp
out
in
stc
outsb
xchg
adc
lcall
mov
rorb
dec
pop
gs
call
in
jle
cmp
arpl
dec
loope
inc
jbe
pop
adc
fistpll
mov
mov
dec
dec
adcl
jecxz
je
or
cmpsb
and
int3
push
std
and
lods
pop
in
lcall
fucomip
sarl
or
in
repnz
mov
scas
jmp
xlat
rcr
cmp
insb
push
call
pushf
inc
push
add
les
fldt
jp
and
jb
xchg
rclb
out
ljmp
roll
pop
mov
nop
lcall
cmc
arpl
inc
in
inc
sbb
mov
inc
sbb
je
dec
out
pop
fsubs
xor
or
mov
sub
sub
cli
bound
xor
rclb
cmpb
lods
je
ds
lods
aaa
repnz
or
ret
lock
mov
mov
pop
dec
xchg
xchg
mov
outsb
int3
lahf
rolb
call
inc
xchg
loope
cli
cmp
pop
add
ljmp
push
inc
or
mov
mov
add
xor
cmc
inc
scas
cwtl
jge
inc
in
jl
mov
xchg
push
imul
stos
adc
in
sbb
push
fdivrp
mov
push
es
jmp
insb
sbb
or
mov
addr16
xor
jge
fists
xor
leave
xchg
daa
push
outsb
pushf
subb
cmp
sbb
sarb
and
push
or
clc
gs
sub
nop
add
adc
fldenv
mov
jne
xor
jl
jle
clc
and
stos
aad
fistpll
shrl
cmp
call
xor
push
pop
cmp
or
aaa
jmp
je
inc
pop
lds
lock
sbb
out
mov
or
insb
mov
daa
cmpsb
pop
xlat
mov
push
dec
adc
lahf
hlt
add
scas
xor
push
lods
xchg
movsl
popf
shrb
sar
jnp
cmpsl
mov
fwait
fs
sbb
arpl
push
cmp
mov
daa
sbb
inc
test
iret
mov
repnz
pop
jne
jae
pop
dec
fcomps
or
xchg
ror
mov
cltd
mov
cmp
add
mov
cmp
xor
in
ljmp
inc
inc
add
or
mov
andl
xor
jmp
mov
iret
mov
out
fs
aas
icebp
push
xchg
jo
dec
jge
jo
pop
iret
outsb
xor
out
orl
inc
dec
xchg
cmp
ss
imul
pop
repz
out
push
xor
cmp
adc
and
mov
lidtl
sbb
mov
jg
mov
je
in
or
aam
aas
mov
cs
push
test
pop
xchg
es
and
pop
mov
lcall
mov
shr
aaa
or
push
in
adc
xor
adc
jecxz
jnp
jg
and
int
xchg
add
jl
mov
cmp
in
and
insb
lods
xchg
or
shlb
xchg
or
nop
out
pushf
jg
inc
dec
add
sbb
pop
les
or
loope
fs
dec
movaps
push
inc
xchg
add
cltd
mov
cmp
test
fcom
cli
jae
bnd
out
cmpsb
out
fsubp
xchg
mov
fistpl
mov
inc
inc
cmp
dec
xor
mov
clc
pop
jb
sbb
int
xchg
xchg
imul
xchg
cmp
mov
jno
rol
xchg
in
lcall
int3
xchg
push
popf
and
jmp
fstp
loop
cltd
mov
add
imul
and
xor
xchg
fistpll
dec
cmp
xchg
or
or
xchg
sub
nop
inc
push
movsb
jnp
cmp
push
scas
cmpl
push
jae
stos
inc
sbb
xor
popa
lods
cld
xorb
mov
and
dec
inc
and
ljmp
xchg
cwtl
and
sbb
mov
hlt
mov
mov
and
repz
sbb
dec
lahf
push
mov
xchg
or
inc
mov
cmp
dec
icebp
xor
ret
dec
jno
fdivrp
jae
imul
popa
push
repz
lret
lcall
scas
jne
mov
xor
cmp
cmp
fnstcw
out
pusha
aad
cmp
dec
or
fildl
popa
sahf
mov
push
xorl
stos
bound
xchg
out
repnz
or
sbb
sub
or
inc
sub
xchg
into
inc
sub
gs
mov
or
lock
cmp
pop
add
ja
sarb
cmc
bound
cltd
xchg
cwtl
dec
push
rolb
or
ror
mov
lahf
lods
push
inc
nop
lods
stos
lods
mov
pop
sbbb
sub
inc
jns
xor
dec
les
inc
mov
push
mov
jbe
sbb
add
xor
adc
aad
hlt
in
mov
xor
out
xchg
cld
mov
ret
daa
inc
pop
fidivrs
inc
sub
pop
sbbb
mov
lahf
push
sbb
nop
imulb
push
push
cmp
dec
or
popf
dec
ret
xor
sub
scas
les
xor
imul
or
bound
dec
lods
loope
xor
dec
sbb
mov
int3
inc
xchg
xchg
cmp
aas
sub
add
pop
in
add
out
pop
lret
test
dec
in
fwait
in
leave
pop
push
rorl
lahf
jmp
fiaddl
jbe
sub
mull
pop
stos
outsb
inc
add
sahf
ret
jne
xchg
mov
pop
loopne
int3
lahf
and
iret
loopne
xchg
jg
scas
lahf
add
xchg
jae
ss
adc
and
je
inc
mov
mov
mov
xor
add
mov
mov
mov
jmp
xlat
frstor
pop
testl
aas
lods
stc
xchg
jo
dec
jge
jo
into
fsts
jg
arpl
faddl
in
dec
scas
neg
enter
in
aas
lds
push
pop
inc
xchg
gs
outsb
add
pop
xchg
jp
xor
sbb
jb
xor
jl
mov
jno
xchg
lret
outsl
in
fistpll
push
out
push
rorl
xchg
in
pop
sbb
adc
lock
sbb
pop
mov
fwait
call
xor
xchg
and
cmp
fnsave
sbb
pop
cmpb
ds
aad
loopne
aam
push
lds
movsl
subb
mov
and
add
xor
dec
mov
pop
fldcw
pop
mov
pop
loope
inc
adc
repnz
xor
pop
pop
loopne,pt
push
insb
sub
xchg
push
add
jb
icebp
out
push
xor
xchg
inc
jg
stos
mov
inc
pop
jecxz
xchg
stc
aam
cmp
or
les
xor
out
fists
pushf
lods
push
int
push
push
sti
and
rcr
orl
sbb
and
repnz
cmp
jb
or
into
adc
sub
jmp
test
test
dec
lcall
outsl
out
or
stc
push
gs
lret
cmc
jae
inc
sbb
push
adc
push
and
mov
aam
pop
js
into
pop
push
or
and
in
xor
xor
xchg
nopl
cld
popa
pop
dec
aaa
push
je
sbb
dec
inc
fnstcw
mov
popa
pop
ds
and
mov
xchg
pushl
push
mov
mov
out
lret
cmp
movsl
mov
addb
pop
fidivrs
mov
lahf
fdivrs
cmp
cmp
test
mov
std
sbb
test
push
pop
jo
xchg
or
pop
sub
mov
popf
lcall
ret
and
mov
inc
stos
xor
shl
push
or
xor
ret
adc
and
pusha
lods
iret
mov
sub
mov
sub
adc
js
xor
lahf
dec
fiaddl
mov
jbe
imul
mov
push
dec
mov
push
dec
faddp
jne
pushf
inc
fdivs
cmpsb
push
add
and
cltd
cmp
dec
cmp
adc
fcompl
inc
inc
test
leave
jbe
add
fcoms
lret
push
inc
lret
enter
xor
add
mov
fisttpll
xor
ljmp
inc
pop
mov
sbb
cmp
xchg
test
sahf
out
out
mov
adc
in
mull
mov
sbb
mov
add
mov
punpckhdq
add
and
cwtl
test
insb
call
stos
mov
loop
insl
xor
stos
fdivrs
aas
mov
push
outsb
in
pop
jmp
inc
pushf
arpl
scas
cmp
push
adc
ret
insb
inc
mov
into
mov
mov
or
xchg
jecxz
push
push
loopne
push
out
movsb
mov
dec
jle
ret
movsl
mov
cli
fisubrs
int3
jl
pop
add
insl
push
mov
fadds
fstp
mov
pop
xchg
cwtl
cltd
xchg
shlb
or
adc
in
dec
adc
outsl
int
sbb
pop
sub
mov
and
enter
mov
dec
sbb
jge
sub
cmp
je
movzbl
add
mov
orl
xor
add
movl
cmp
jne
pushl
adcl
call
mov
add
mov
jmp
fs
movsl
sbb
popa
push
negb
inc
outsl
dec
lcall
jo
mov
xchg
dec
leave
sbb
inc
mov
add
rclb
cwtl
inc
ffree
adc
ror
stc
cmpsb
dec
scas
add
sub
inc
adc
adc
fwait
inc
sarl
ja
mov
pop
loope
insb
outsb
push
sub
mov
fnstenv
inc
push
and
inc
fnstcw
jne
xor
cmpl
insb
scas
sahf
sbb
popa
lret
adc
aam
add
es
mov
and
jno
mov
popa
mov
inc
xchg
fiaddl
pop
cwtl
xchg
mov
cmp
inc
sbb
cld
xor
lds
out
movsb
mov
sbb
cmp
xchg
cmpb
cltd
cmp
nop
and
nop
xchg
adc
lock
movsb
mov
enter
adc
xlat
loopne
daa
jne
in
pop
fstpt
popa
mov
leave
es
in
movsl
mov
ret
test
add
xor
je
pushf
adcl
rcr
cmp
cmpsb
sbb
sub
lock
push
mov
xchg
les
dec
xchg
pusha
je
push
cmp
adc
test
mov
sti
mov
fnop
jbe
mov
push
pop
mov
ljmp
lcall
xchg
fsubrs
int3
mov
movsb
ja
jmp
xchg
and
add
or
mov
arpl
std
stc
and
jbe
xchg
clc
mov
scas
sbb
inc
mov
sarl
out
rcrb
push
ret
mov
fcomi
inc
push
insl
int3
sahf
jae
repz
mov
fisttpll
lret
sar
pop
aam
push
push
cmp
add
inc
or
mov
jl
inc
add
mov
sbb
mov
inc
in
int
mov
and
mov
aam
inc
or
sbb
or
call
sahf
add
into
fisttps
addb
rorb
test
mov
dec
faddl
jne
inc
mov
inc
xchg
sbb
les
mov
in
inc
pusha
stos
xchg
popf
or
mov
mov
loope
out
xchg
ds
lds
mov
jae
repz
in
int
addr16
test
into
jne
mov
insb
add
test
popl
push
daa
sbb
lea
inc
loop
les
jmp
mov
fs
pop
fwait
or
mov
jns
aas
pop
lahf
cmp
and
push
scas
in
cmp
lock
mov
xchg
jbe
in
and
fdiv
test
adc
in
test
loopne
dec
mov
jbe
push
ret
add
loopne
adc
popa
push
jp
cli
sbbl
pop
sti
fwait
gs
int
pop
inc
fwait
in
sbb
iret
lret
in
inc
mov
jp
xor
fldcw
adc
push
leave
leave
std
sub
pop
sbb
or
fisubrs
addr16
mov
pop
cs
sub
loope
or
lock
repnz
mov
add
addr16
out
nop
mov
cs
lods
inc
aam
cwtl
xor
dec
mov
mov
clc
arpl
and
mulb
stc
dec
dec
inc
push
outsl
test
cmp
out
and
mov
lock
push
push
cmp
dec
pop
fsubl
test
ja
fistl
inc
adc
push
in
jp
pop
pop
in
add
aaa
sub
bnd
mov
mov
mov
xor
mov
xorl
xor
add
movl
cmp
movl
je
pushl
adcl
pushl
call
jmp
ret
rcrb
popa
cltd
ret
xorw
mov
mov
lcall
jl
jns
sub
fimuls
mov
stos
xor
icebp
ss
sub
imul
mov
push
lds
push
bound
int
inc
enter
mov
lods
jne
gs
ds
cwtl
mov
iret
pop
enter
sahf
mov
mov
cltd
cmp
jl
enter
mov
xor
xor
cmp
dec
mov
sbb
repz
inc
mov
out
mov
loope
jle
push
icebp
lds
dec
fldln2
repz
or
inc
scas
jae
hlt
imul
mov
and
mov
jecxz
addl
mov
loopne
xchg
pmulhw
xlat
movsl
enter
push
xchg
cmc
in
aaa
sahf
add
push
jbe
shll
push
call
push
sub
mov
int3
xchg
ja
dec
mov
clc
daa
xlat
mov
pop
jae
mov
push
add
add
leave
scas
add
add
pusha
aaa
mov
adcb
mov
mov
and
push
sub
mov
sub
xor
jnp
mov
pop
and
lret
and
test
add
sub
sbb
lret
mov
das
stc
lahf
mov
out
es
daa
mov
pop
decb
or
pop
cmp
or
shll
mov
dec
fucomi
fdivp
loop
pop
repnz
movl
sbbb
pop
movsl
daa
pop
cmp
pop
dec
mov
lods
lret
and
adc
xchg
aad
sahf
jp
mov
push
mov
lods
lret
dec
stc
and
adc
mov
or
mov
insl
lret
insb
sbb
jno
in
loop
adc
imul
movsb
mov
mov
sti
fmul
cmp
pop
cmp
sub
push
outsb
shrb
popa
sarl
test
adc
mov
xchg
and
cmc
cmp
push
mov
cmp
sbb
sbb
iret
jae
sub
xchg
push
xchg
ss
test
add
add
mov
or
out
lcall
mov
mov
fnsave
jp
ds
dec
or
shll
sub
notl
test
aas
shll
push
popa
int
push
shrl
mov
cli
add
and
lea
or
pop
ret
jo
aas
or
lock
cmpsb
test
in
cmpsl
loop
sub
adc
mov
iret
gs
aam
and
loope
xlat
add
imul
test
into
jge
dec
fisttpll
test
mov
mov
jp
push
sbb
mov
orl
bound
mov
daa
test
movsl
ljmp
or
std
icebp
loopne
jb
push
xchg
mov
xchg
mov
rorl
lea
int3
push
cmpsb
xchg
push
jp
push
sbb
adc
repz
fs
sub
sub
push
xor
mov
adc
test
outsl
sbb
les
sbb
adcb
stc
pop
xchg
shlb
sub
adc
jno
push
cmp
xchg
adc
adc
popl
jge
lock
shlb
ret
adcl
pop
fisubrs
mov
outsl
lcall
subb
stc
and
popf
xchg
xchg
pushw
stc
nopl
mov
mov
cmp
inc
in
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
jmp
loopne
or
xor
in
rorb
cmp
iret
add
jo
dec
jge
jo
jae
outsl
add
add
sti
jl
loop
cmp
arpl
fwait
popf
addb
div
movl
or
andnps
pop
data16
cwtl
pop
or
fisubs
jnp
lahf
test
fldenv
push
sbb
sub
jnp
add
dec
arpl
pop
subb
mov
movsl
mov
inc
movsl
lods
repz
mov
inc
lret
pop
in
pushf
sbb
pop
sub
or
or
aad
mov
xchg
data16
cld
push
push
icebp
jns
mov
or
or
adc
cltd
aaa
insb
sbb
dec
adc
sub
pop
fcoml
cmp
data16
repz
push
shr
mov
adc
sbb
insb
add
xchg
stc
ret
hlt
jo
daa
or
mov
dec
inc
fcomi
xor
les
pusha
rorl
test
shrb
and
clc
test
pusha
and
pop
ret
cmp
jmp
and
sub
add
mov
mov
and
lcall
mov
inc
dec
sub
push
shr
arpl
push
sub
cmp
push
xor
inc
ror
mov
int
ds
mov
sbb
and
sub
xor
add
sbbb
test
adc
pushf
push
pusha
jmp
js
push
idivl
mov
jae
xchg
rorl
jl
pop
das
inc
test
frstor
pop
mov
mov
mov
mov
mov
mov
mov
mov
arpl
mov
xchg
adc
mov
call
nop
or
push
pusha
lret
scas
out
fisubrl
lcall
imul
mov
sub
add
mov
inc
in
enter
mov
fldt
adc
outsb
cmp
fisubl
mov
ret
rcrb
adc
lea
pop
sbb
cmp
sbb
or
and
mov
test
xor
dec
pop
fiadds
mov
jno
dec
sub
stos
int
sti
sub
mov
push
enter
mov
mov
fidivs
add
iret
push
mov
test
lret
jo
rep
push
and
push
mov
ja
xor
insb
jle
and
test
pushf
sarl
ret
decb
cmc
mov
sub
jbe
xchg
sbb
inc
mov
out
mov
scas
in
popf
lcall
addr16
sub
sbb
bound
dec
les
repz
enter
adc
fadds
and
stos
mov
mov
push
sysexit
sbbb
les
fldl
push
push
jge
ja
cmpsb
aaa
das
cmp
pop
fiadds
xchg
bound
insb
push
addl
fstp
jns
gs
push
and
adc
jmp
orb
orl
xchg
jbe
xlat
inc
cmc
or
xor
subb
inc
cmpsl
pop
lret
cmpsb
push
xor
push
xchg
pop
in
mov
push
pusha
dec
loopne
call
and
pop
mov
pusha
xchg
push
mov
push
ljmp
jg
arpl
inc
adc
adc
inc
sbb
subb
adc
dec
dec
jmp
mov
mov
mov
add
jmp
inc
jae
pop
sub
jae
and
mov
pusha
jg
pop
mov
jo
out
call
adcl
xchg
mov
mov
mov
mov
test
aas
inc
idivb
btc
into
fs
or
mov
out
dec
ffreep
cli
mov
jg
inc
jle
in
subl
outsl
ficoms
pop
dec
mov
inc
dec
fs
and
adc
rcrl
pop
iret
loope
gs
mov
es
dec
outsl
out
sbb
jno
ss
inc
roll
inc
pusha
add
cmp
into
sbb
inc
stc
in
sbb
int
xchg
repnz
sbb
jg
js
mov
insb
jl
shll
and
mov
bound
cli
popa
mov
cmpsb
pop
mov
mov
sub
jnp
cmp
bound
jl
push
pop
sub
sbbb
aas
bound
stos
movsbl
stos
jb
ljmp
sbb
sbb
iret
adc
sub
cmpsl
daa
aas
subb
push
out
and
out
inc
js
mov
pusha
sub
or
cmp
add
lods
nopl
out
push
lock
xor
pop
jmp
sahf
adc
movsl
aaa
sarl
xchg
push
push
cwtl
divl
loop
lret
jecxz
idivl
inc
cld
pop
adc
scas
movsb
mov
adc
push
cmp
sbb
jmp
fs
outsl
sub
xchg
mov
jbe
and
xor
xor
adc
add
jle
sub
cmp
lret
xor
or
test
mov
inc
push
out
out
fidivrl
int3
push
and
mov
cmova
addb
mov
inc
dec
cmp
jg
add
xor
sub
daa
icebp
adc
pusha
adc
and
or
inc
sbb
inc
mov
add
sar
xor
mov
cli
fnstenv
outsb
rcr
cmp
dec
xor
adc
xor
arpl
loop
mov
enter
jecxz
test
insb
mov
mov
mov
daa
jg
sub
scas
jnp
xor
imul
jp
xchg
jmp
dec
fistpl
sbb
test
jbe
sarl
int
jmp
out
rclb
push
pop
enter
fldl
cld
jbe
mov
dec
rcl
cmp
stc
cltd
push
out
insl
jbe
add
loop
movq
inc
sbb
sbb
scas
cmp
shl
sbb
jmp
sar
mov
mov
mov
push
cmpsb
shlb
addr16
pop
out
xor
cmp
add
jl
lret
adc
mov
cmp
pop
sub
mov
cmp
fs
cmp
in
fisubs
clc
and
push
mov
jmp
xlat
ror
lahf
sub
inc
dec
pushl
inc
aas
sti
insl
mov
xor
pop
dec
jge
arpl
mov
addr16
mov
inc
inc
daa
add
mov
imul
and
cwtl
push
xchg
clc
xchg
push
fsubp
mov
enter
adc
cmp
sbb
sbb
mov
jg
jb
adc
sbb
mov
or
les
pop
andb
xor
cld
das
insb
cmp
loope
sub
sub
xchg
or
pushf
xchg
in
testb
jmp
sbb
sarl
lahf
popa
sti
arpl
mov
mov
jo
dec
jge
jo
xor
inc
ja
aam
test
bound
enter
add
sub
cmp
popa
mov
dec
push
and
adc
xchg
inc
dec
ja
mov
cwtl
pop
movsl
mov
outsb
mov
inc
sbb
mov
ss
frstor
out
insb
pop
imul
and
cmp
xor
fdivrs
pop
out
pop
mov
es
lds
aaa
sub
in
push
cld
xor
psubusw
jmp
mov
popf
bound
mov
dec
sahf
int
mov
jo
push
out
lret
test
and
fdivs
outsb
jno
pop
jnp
inc
pop
fisttpl
cs
stos
dec
jae
aas
rep
sub
loop
inc
and
xor
adcb
clc
add
sub
dec
xchg
cmpsl
shll
out
pop
rorb
es
in
fsubl
std
ja
mov
jbe
mov
movsb
push
mov
mov
xor
lret
andb
mov
fildl
adc
mov
add
iret
mov
push
pusha
jns
adc
sub
cli
xchg
jecxz
mov
mov
xchg
mov
sbb
cmp
dec
adc
cmovnp
inc
adc
sub
mov
out
adc
mov
push
insl
sbb
pop
cld
push
pop
and
imulb
xlat
cmpsl
and
add
pop
sahf
sahf
popl
xor
inc
fwait
cmp
jle
and
scas
fsubrs
lahf
and
push
jne
aaa
dec
das
mov
sahf
andb
psubusb
pusha
iret
sbb
cmp
ja
push
pop
iret
pop
mov
stos
mov
pop
loope
mov
in
inc
out
pop
push
adcb
sbb
repnz
xchg
cmp
add
dec
pop
gs
push
repz
dec
mov
adc
sbb
sbb
insw
scas
pop
out
add
out
cld
notrack
addr16
repz
push
cld
out
lods
mov
jnp
xchg
push
stc
stc
jbe
std
add
or
push
out
mov
pop
dec
push
cmp
gs
stc
call
push
mov
dec
and
cmpsl
gs
sbb
mov
movsb
mov
jl
and
icebp
adc
fstpt
fcompl
aaa
sar
pop
lret
jno
pop
lods
pop
xchg
iret
sbb
xor
das
mov
mov
cmp
push
and
mov
mov
and
push
je
dec
jnp
and
mov
lcall
cwtl
test
aaa
and
in
loopne
inc
jl
cmpsb
add
sub
or
aam
xor
repz
in
js
jae
outsb
lods
or
mov
bound
fistps
push
aaa
adc
je
shrb
inc
push
inc
jmp
decb
inc
inc
dec
cli
fldcw
adc
jmp
push
std
mov
ds
mov
jnp
xchg
cmp
xchg
imul
pusha
sub
or
fnstcw
xor
mov
cmp
xor
jne
pop
mov
mov
outsb
inc
add
push
test
test
jmp
mov
scas
sub
scas
cld
arpl
push
cmp
inc
fsubl
mov
icebp
push
ss
pop
sub
ja
test
cmp
fs
insl
fwait
cwtl
inc
mov
push
in
loope
jbe
test
pop
mov
xchg
xor
mov
mov
add
lea
mov
push
pushl
pushl
call
mov
mov
jmp
or
rcl
cmp
pop
jns
popa
inc
loop
push
stos
jo
dec
jge
jo
cmp
jle
test
test
and
mov
inc
push
daa
cmp
lret
xchg
mov
mov
cmp
aas
pushf
addl
mov
inc
aaa
ja
mov
sahf
push
jmp
and
and
mov
pusha
filds
inc
shrl
add
dec
movsb
ljmp
jl
add
leave
pop
xchg
xlat
int3
clc
es
fucomp
xchg
jnp
push
insb
popf
jg
cs
cmpsl
into
pop
push
mul
fisubrl
inc
pop
inc
mov
dec
sub
scas
push
xchg
aas
ret
int3
xchg
out
pop
pop
scas
mov
sbbl
lcall
and
ror
inc
dec
push
lock
fsubl
jno
cmp
ja
jle
rorl
mov
pop
push
stos
aaa
ja
mov
into
pop
aad
pop
mov
jbe
nop
loopne
mov
push
mulb
aad
jmp
test
popa
mov
arpl
pushf
add
mov
sbb
enter
pop
jg
pushf
dec
imul
lcall
adc
out
sub
xor
pop
adc
inc
push
push
mov
imul
mov
shl
push
push
xchg
rorl
enter
adc
inc
sbb
filds
pop
insb
lret
mov
jnp
mov
pop
push
pushf
pop
mov
mov
xchg
adc
inc
lock
loopne
jl
dec
loop
repnz
mov
ss
pop
rolb
xchg
push
xor
cmpsb
sub
ljmp
cwtl
lret
popf
and
aas
pop
add
clc
subb
aam
mov
pop
sbb
cwtl
arpl
scas
sbb
and
lea
and
jl
inc
xor
xor
jo
push
call
cmpsb
arpl
movb
lret
imul
sbb
xlat
pop
push
rorb
outsl
inc
inc
and
jecxz
adc
push
sbb
mov
mov
jl
movsl
add
sti
mov
mov
mov
cmp
xor
xchg
fldcw
jmp
dec
lds
ffreep
adc
iret
mul
and
ss
or
mov
push
xchg
sbb
or
mov
ret
test
and
xlat
inc
test
add
dec
xchg
hlt
or
and
mov
cwtl
fiadds
and
cmp
pop
aas
mov
inc
mov
push
sub
ret
imul
scas
imul
jmp
iret
test
adc
int3
jge
jo
pusha
dec
and
imul
mov
into
mov
jge
inc
mov
imul
inc
dec
stos
pop
jg
movsl
aas
jbe
xchg
ds
mov
xor
adc
lock
and
notl
es
shll
popa
mov
jae
dec
leave
shlb
pop
das
in
add
movsl
adc
stos
mov
add
and
mov
add
in
lcall
inc
aam
mov
fiadds
mov
jl
aad
or
inc
shll
rcll
mov
loop
or
std
xchg
pop
sbb
movsl
pop
in
getsec
jmp
pop
sarb
sti
inc
mov
cltd
jae
fisubrs
dec
jge
cmp
insb
push
movsl
xchg
fs
cmpsl
cmc
xchg
dec
push
mov
pop
inc
inc
adc
mov
push
rcrb
cwtl
dec
jb
std
ss
or
cmc
daa
and
repz
xchg
testl
add
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
jmp
xlat
and
insb
push
aaa
pop
push
push
sahf
cmp
add
jo
dec
jge
jo
xchg
inc
pushf
dec
xor
push
out
sub
sbb
inc
mov
xor
out
xor
call
mov
xchg
push
pop
clc
inc
clc
inc
sub
mov
aam
mov
mov
loopne,pt
and
ss
pop
adc
sbb
insl
inc
mov
cmpsl
sbb
out
sar
jmp
inc
movsl
push
push
push
push
jnp
sbb
or
mov
cmpsb
lret
std
sub
fmuls
mov
lret
dec
subl
jb
stc
cld
or
xor
cmp
mov
iret
push
mov
mov
je
sti
fisubl
dec
and
cwtl
std
mov
sbb
rcrb
pop
jmp
jo
mov
ret
mov
jmp
add
jb
mov
fmuls
jo
mov
out
icebp
inc
loope
cltd
add
jb
jae
jl,pt
addr16
xchg
adc
pop
int3
gs
sbb
push
mov
loop
repz
repnz
or
inc
add
xor
test
test
fs
sbb
addl
xchg
popa
inc
push
jge
clc
pop
fistpll
rcrb
push
adc
int3
insb
inc
pop
xchg
cmp
andb
ljmp
mov
daa
xor
xchg
movsb
xor
cmc
jo
pop
mov
lcall
test
aas
hlt
iret
pop
fwait
aad
push
aad
inc
fwait
loop
out
call
lcall
insl
in
sub
sarl
out
cmp
and
int
out
cs
shlb
fcompl
xchg
loope
std
push
in
rcr
lock
mov
scas
icebp
jmp
cmpsl
pushf
cmp
outsb
fmull
add
sbb
movsb
mov
dec
sub
jp
xchg
std
pop
mov
push
aam
and
cmpsb
pop
jb
cmpsl
xchg
jecxz
jne
jg
dec
into
ss
js
and
out
pop
dec
and
pushf
push
dec
popfw
jge
imul
in
sti
aam
jle
cmpsb
daa
cltd
rcll
shrb
test
ljmp
dec
fldenv
mov
lea
jo
mov
jg
push
pushf
popf
xlat
es
pusha
das
sahf
adc
push
bound
cmp
mov
cmp
iret
xlat
push
xchg
shrb
inc
mov
jo
imul
insl
push
out
cmp
fsts
adc
rcll
xchg
das
mov
cld
dec
mov
js
repnz
mov
or
sbb
dec
es
js
sbb
jae
ret
jecxz
dec
xor
cmp
test
je
inc
and
nop
adcl
mov
stos
cmp
lret
inc
fstl
mov
dec
aaa
test
in
aas
xchg
xor
out
sarb
add
incb
fistps
and
inc
xor
stos
adc
aaa
add
sub
pop
orl
sarl
pusha
pop
xchg
imul
pushf
or
lret
xlat
mov
push
divb
loop
mov
xorb
mov
int3
lcall
mov
add
out
mov
aaa
in
cwtl
mov
dec
mov
aad
pop
cltd
filds
repnz
shrl
jl
jge
popf
lcall
fildll
pop
mov
bound
lret
push
fwait
add
movsb
cmp
jne
mov
xor
jmp
mov
add
mov
mov
jmp
sahf
das
or
mov
mov
pop
mov
xor
push
dec
xor
jo
aaa
xchg
std
jbe,pn
push
push
jo
popf
aad
push
mov
hlt
add
inc
jle
lahf
fldenv
mov
adc
in
sbb
sbb
push
xlat
add
movsb
in
adc
push
movsb
sub
leave
stos
mov
add
aad
and
call
push
into
cltd
cmovno
adc
adc
mov
xor
shlb
fldl
cltd
repnz
lds
cmp
pop
pop
mov
test
cmp
xchg
loopne
sub
test
test
mov
or
cwtl
fcmovnbe
fs
roll
fsubrs
sub
pop
jecxz
mov
or
icebp
mov
pop
outsb
cmpsb
or
pop
dec
mov
scas
mov
out
sarb
rolb
shr
int
sub
mov
sbb
adc
sti
test
ja
or
and
xchg
shrb
mov
pop
pop
arpl
lcall
movsl
cs
std
addb
sahf
add
outsl
mov
jecxz
fstpt
loopne
xor
lods
or
xor
xchg
add
jne
add
repz
in
and
andl
and
cli
arpl
mov
jle
aaa
mov
adcl
and
mov
and
inc
je
adc
cs
lock
mov
push
adc
mov
test
inc
mov
sbb
daa
or
or
sahf
xchg
dec
inc
mov
or
push
out
insl
pop
xchg
sub
xor
pop
jne
sub
push
pop
or
loope
lds
push
xchg
insl
push
cmp
mov
test
jbe
sbb
pop
hlt
dec
pop
push
pop
dec
pusha
xchg
loop
push
repnz
mov
fcmovbe
xchg
mov
inc
in
push
lea
cld
aas
ja
es
pop
jge
sahf
test
ljmp
lahf
cs
jg
lcall
std
push
inc
pop
pop
mov
xchg
jbe
sahf
shl
lret
fwait
jo
dec
jg
inc
popf
leave
daa
cmp
adc
push
mov
pop
xchg
mov
notb
cli
dec
fcompl
outsb
jg
cmpl
jne
xor
insb
and
push
ja
inc
sahf
jmp
lahf
mov
fisttpll
push
jmp
or
jo
push
adc
cmp
imul
pop
clc
mov
filds
daa
cmp
mov
scas
fsts
out
mov
aam
push
loopne
imul
sub
cli
inc
es
arpl
xchg
xchg
shll
adc
nop
mov
fcom
das
or
jb
cmp
leave
dec
and
fwait
mov
adc
pusha
jbe
test
iret
xor
jb
movsl
cltd
scas
dec
mov
jle
loope
mov
adc
push
inc
fwait
adc
dec
lds
mov
add
pop
out
iret
cmp
mov
cli
mov
int3
xlat
aad
pop
aam
fwait
imul
xchg
mov
mov
std
jmp
pop
test
ret
or
inc
xchg
adc
mov
clc
push
mov
pop
andl
cmp
adc
shrb
shll
lret
add
clc
dec
popf
xor
lret
clc
test
pop
mov
lock
and
xchg
mov
cmp
data16
mov
xor
test
jae
or
xor
and
ja
pop
scas
gs
fucomp
ja
stc
sar
add
adc
add
add
add
out
pop
outsl
jne
data16
test
pushf
and
jo
dec
jge
jo
or
cmpsl
mov
fsubrl
pop
fnstenv
test
pushf
mov
cmp
xchg
adc
ja
sbb
xchg
cltd
sub
cs
sub
cli
popa
sbb
mov
push
cs
jecxz
rclb
mov
jbe
push
pop
in
sbb
jb
mov
lods
je
mov
cmp
mov
call
stc
or
jno
mov
inc
js
into
out
mov
xchg
add
fs
mov
leave
cmp
lock
decb
pop
aad
aam
cmpsb
cmp
outsl
xchg
mov
cmpsl
pop
js
fs
fcomi
outsl
mov
ds
lahf
mov
pop
sahf
fs
dec
int
adc
fidivl
sbb
mov
lret
push
sbb
xor
insb
fs
out
stos
lds
pop
sbb
add
aaa
inc
mov
xchg
inc
mov
xchg
dec
xor
outsb
insl
sub
ficoms
mov
lds
dec
insb
inc
sahf
shl
aad
or
push
add
jno
push
cs
lea
aad
add
cmp
pop
fimuls
adc
cltd
jmp
shlb
jns
cmpb
inc
dec
push
push
dec
sahf
aaa
pushf
push
jmp
cmp
addl
jnp
xchg
mov
les
pusha
bound
mov
stc
sub
call
jle
dec
and
dec
xor
dec
xor
sub
sbb
les
xlat
or
fmulp
cmp
fadd
fcmovnu
sub
mov
sbb
negb
xchg
pop
push
pop
xchg
int
push
inc
sbb
iret
jns
push
add
inc
fcmovb
adcl
addr16
out
gs
sbb
mov
and
fs
popa
jg
fucomp
or
mov
dec
xchg
imul
div
testb
cmc
in
in
adc
loop
cmc
bnd
inc
scas
sahf
xchg
inc
pop
sbb
xchg
mov
ret
aaa
push
into
mov
mov
mov
mov
xor
mov
pop
adc
js
xchg
in
sbb
mov
or
int
fidivrs
imul
lock
fisttps
mov
std
xor
jecxz
or
cltd
ret
enter
ds
jecxz
fildll
jns
sub
out
out
lds
out
in
adc
inc
xlat
frstor
jno
pusha
movsl
cmpl
fcoml
inc
xlat
or
inc
lcall
sbb
outsb
mov
stos
push
mov
imul
imul
negb
aaa
mov
xchg
push
mov
push
sub
xor
mov
les
lods
ljmp
stc
orl
test
sar
or
inc
xchg
fdivs
insb
push
sbb
mov
lods
imul
test
out
es
fs
es
ljmp
pusha
push
popa
js
mov
pop
mov
adc
xorl
add
push
inc
adc
test
mov
addb
mov
jle
xchg
inc
xor
in
mov
xchg
lahf
and
push
add
sahf
popf
rolw
andl
cwtl
adc
push
adc
insl
jnp
pop
jno
int3
movb
lret
test
mov
into
inc
pop
push
lods
xchg
sarb
aam
iret
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
jmp
ja
mov
mov
or
mov
jo
cmp
mov
dec
inc
xor
notl
jnp
push
or
cmp
or
rcr
dec
test
outsb
push
out
sub
push
sbb
cmpb
std
xchg
pop
sub
ja
xchg
aad
adc
dec
inc
ljmp
xlat
cs
addr16
jo
aas
mov
aas
out
inc
push
incb
adc
sti
mov
in
fnstcw
add
sbb
pushl
push
insl
scas
and
mov
ds
or
cli
mov
and
ljmp
fimuls
add
pop
cld
and
mov
cld
test
jmp
xchg
cwtl
cli
jne
movsl
pop
lods
mov
xchg
and
arpl
in
push
jg
lods
xor
andl
jecxz
mov
dec
mov
or
jbe
cmp
xchg
add
pop
cmc
loope
nop
js
stc
in
push
lahf
fldenv
sub
push
loopne
push
xor
add
daa
mov
lret
popf
scas
push
jae
in
mov
xor
and
insl
adc
or
ja
movsb
jb
leave
pop
push
incb
xchg
pushf
pop
mov
push
dec
pop
ljmp
mov
enter
add
push
xchg
jle
mov
or
sbb
shrb
popl
ficoml
or
nop
mov
mov
adc
iret
clc
jno
in
cs
lret
inc
jbe
ret
pop
sbb
mov
je
fwait
mov
inc
lret
fidivrl
mov
adc
jecxz
loop
icebp
fidivl
inc
dec
or
into
mov
push
negl
adc
inc
and
cmp
cmc
lret
int3
sub
add
push
pop
mov
inc
jp
lret
fmuls
jle
mov
sub
pop
addr16
cmpsb
xor
push
lea
mov
fisttpll
dec
cmp
and
push
je
shl
rcll
jb
dec
lret
movsl
xchg
cmp
mov
repnz
sub
or
push
adc
inc
pop
pop
mov
iret
mov
stos
hlt
xor
adc
sub
and
je
nop
subl
test
push
cltd
mov
loopne
push
lcall
pop
push
rcll
fwait
sbb
mov
out
jle
dec
cmp
sahf
jle
imul
loopne
jle
pop
fs
loope
and
daa
repz
outsb
roll
mov
push
push
inc
pop
into
dec
shrb
or
and
cmpsl
adc
pop
not
dec
push
mov
push
adc
inc
mov
inc
add
jp
loope
or
pop
inc
les
inc
sbb
mov
xor
scas
push
mov
mov
mov
loopne
mov
int
dec
insb
inc
and
push
movsb
mov
loope
cli
pop
xchg
jl
popf
subb
add
push
or
sti
mov
mov
fimuls
or
cmp
cltd
xchg
sub
mov
sarb
clc
add
psllq
test
xchg
fisubrs
das
inc
cld
inc
pop
das
leave
scas
adc
ret
xor
and
jl
scas
dec
pop
mov
mov
loopne
fsubs
mov
pop
lea
fwait
jbe
dec
jmp
jg
mov
sbb
push
scas
mov
dec
in
sub
loope
xchg
cmp
lret
out
mov
xor
add
loop
push
or
out
add
add
fisttpl
jp
xchg
mov
mov
jge
jo
add
sar
loopne
inc
xchg
and
repz
clc
repz
ret
fwait
dec
fistl
push
inc
pop
in
xor
dec
nop
dec
jp
dec
jns
inc
or
ljmp
sub
cs
mov
mov
cmpsl
movsl
mov
cs
fistl
outsl
sbb
in
add
fistps
adc
test
push
addr16
mov
lahf
stos
push
arpl
jmp
dec
jge
jecxz
dec
jecxz
xlat
ja
enter
pop
test
mov
push
cmp
sbb
mov
nop
xor
out
imul
jmp
aam
sti
clc
insb
mov
cmpb
sbb
mov
xchg
sbb
adc
nop
addb
sarb
and
mov
mov
or
and
lods
lcall
push
mov
clc
xor
sbb
xor
pop
mov
bound
les
cmp
inc
pop
nop
daa
lods
xchg
push
ror
sahf
xor
dec
xor
sub
cmp
shl
xchg
inc
lds
and
cld
pop
push
movsl
inc
ja
xor
lea
or
xchg
fnsave
cmpsl
lock
shr
jb
stos
cs
pop
scas
cmp
clc
bswap
fimuls
and
es
inc
xor
dec
test
mov
test
and
cmpsl
icebp
dec
add
mov
mov
xor
std
jecxz
out
repnz
ret
lea
sbb
fisubl
jl
mov
xchg
iret
jno
sbb
jmp
push
dec
add
fldt
rcrb
jge
sti
cmp
sbb
pop
shr
pop
fsubp
out
lret
xor
in
xchg
push
daa
add
mov
xchg
mov
push
loopne
inc
add
adc
inc
mov
mov
pop
lods
cltd
sub
inc
mov
dec
xor
loop
enter
or
and
lds
int
das
jb
push
imul
sbb
pop
scas
ret
outsl
je
xor
or
fldcw
dec
lds
adc
mov
lods
aad
push
dec
mov
xor
sarb
cli
aaa
pop
xlat
dec
aam
push
ljmp
mov
xchg
sub
mov
jb
stos
outsb
movsb
test
xor
loopne
push
mov
test
pop
adc
cltd
or
repz
ja
cwtl
into
andb
xorl
mov
push
scas
lahf
cs
nop
icebp
xor
inc
xorb
in
loope
jne
dec
sub
pop
fisubrs
test
pusha
xor
jbe
or
or
ret
inc
les
pop
xor
push
add
push
pop
ffreep
nop
xchg
dec
mov
jecxz
sbb
fldcw
jmp
sbb
jmp
add
mov
and
subb
pop
lahf
and
loop
cmpsl
push
movsl
and
call
imul
stos
sub
aad
pop
pop
mov
aad
xchg
mov
cmc
std
rorb
inc
mov
insl
dec
fists
dec
jbe
test
enter
jae
adc
or
xchg
mov
cmpsb
fsts
fwait
arpl
pop
and
inc
jg
cmp
roll
mov
mov
repz
mov
push
xor
cmp
jmp
xchg
cmp
jno
add
ret
cwtl
or
mov
in
mov
adc
pop
mov
xor
lea
mov
mov
jmp
mov
fwait
xchg
fwait
jae
roll
cmp
jo
dec
jge
jo
int3
mov
rclb
mov
jbe
mov
jge
sub
adc
push
dec
dec
jbe
jmp
rcl
add
les
mov
lcall
les
xchg
adc
mov
dec
jge
out
jb
ret
lods
and
scas
sub
fsts
pop
mov
adcb
fstpl
jle
iret
add
mov
and
inc
ja
cmpsl
push
mov
jo
sarl
mov
jb
lcall
sbb
outsl
push
cmp
push
jno
push
out
nop
repnz
call
dec
sub
mov
ret
cli
push
adc
call
arpl
int
sub
imul
leave
fidivrs
iret
sarl
xor
test
jb
gs
fsubrs
shrl
stos
push
xchg
inc
xchg
dec
arpl
mov
jae
ss
movsl
dec
ja
xchg
daa
movsb
ss
sbb
mov
xlat
xor
and
lcall
leave
pop
sub
lods
call
into
and
push
cmp
hlt
mov
in
and
nop
cmp
insb
or
mov
movsb
jnp
xchg
and
mov
pop
add
dec
mov
fstp
jb
jne
jmp
lods
xor
inc
dec
inc
enter
outsl
xchg
dec
test
inc
cmpsb
cmpsb
ljmp
push
aad
roll
and
lcall
mov
jecxz
inc
in
sahf
in
js
mov
js
test
addr16
icebp
shrl
lods
ja
aaa
out
push
insl
in
xchg
insb
xchg
add
das
mov
scas
test
lea
xchg
cmc
sub
lret
jne
and
mov
ja
outsl
es
ljmp
add
xor
xchg
imul
cld
xor
roll
repz
push
scas
lret
mov
les
or
lea
dec
inc
xchg
cmp
push
xor
push
jmp
push
clc
mov
rolb
jle
xchg
mov
and
mov
add
ret
mov
adc
cmc
dec
jecxz
imul
movsl
les
cmpsl
xor
inc
cmc
sbb
push
mov
inc
jns
fiaddl
add
shl
scas
fwait
rorb
jnp
stos
inc
movsl
scas
fwait
and
pop
inc
int3
in
pusha
jle
sub
ret
xor
cmp
cwtl
jbe
jl
jp
leave
cmc
lahf
add
mov
adc
or
in
outsl
stc
arpl
enter
inc
cmp
jle
cmp
orl
outsl
into
pusha
ret
inc
addr16
or
shll
out
cmp
mov
subl
ret
scas
lock
sub
cltd
and
mov
or
out
pop
mov
push
pop
mov
and
xor
xor
inc
outsb
out
cmc
adc
bound
push
adc
aad
sbb
jns
pop
or
mov
fstpl
jg
xor
mov
mov
test
pop
addr16
les
ja
or
sbb
cs
mov
push
or
loopne
loop
popa
das
cmpl
ret
mov
mov
cli
fsubrl
cmp
inc
push
es
cmp
and
and
and
unpcklps
adc
pop
in
loope
xchg
sbb
popa
rorb
add
imul
mov
xor
mov
lea
cmp
jmp
mov
push
mov
bound
daa
cs
inc
jo
dec
jge
jo
cs
rolb
subb
jp
cltd
in
lret
sbb
push
and
aaa
andl
push
push
xor
adcb
dec
sbb
je
xchg
sub
adc
push
insb
xchg
xchg
xchg
inc
xor
popa
clc
lret
sarl
pop
stos
jno
sub
pop
shlb
mov
xchg
out
push
mov
aaa
push
xchg
pop
push
mov
mov
test
movsl
dec
pop
aam
loope
mov
xlat
push
loop
lcall
sbb
and
or
pop
cwtl
or
lcall
sahf
xor
mov
mov
mov
es
jecxz
xchg
loopne
insb
stc
sbb
repz
rdmsr
rorb
xchg
popa
ret
add
lret
or
mov
lcall
dec
add
mov
xchg
mov
test
fistpll
test
sub
dec
cmp
sub
or
jecxz
lahf
fdivrl
jmp
add
arpl
jns
test
fisttps
adc
into
dec
mov
andl
cmp
cmp
xor
mov
jbe
popf
outsb
test
mov
pop
movsb
popa
inc
cs
mov
add
ljmp
insb
cmp
jmp
addl
inc
pop
cmp
bound
movsl
mov
mov
xor
push
ja
mov
lcall
adc
xchg
iret
push
xchg
cmp
push
je
loop
adc
sbb
xchg
ljmp
or
mov
mov
sub
mov
js
js
nop
sbb
adc
iret
in
ret
and
daa
mov
xchg
lods
cmp
lea
cmpsl
in
jl
and
sbb
cmp
add
add
push
fiaddl
cwtl
mov
nop
adc
pop
rorl
lods
pop
mov
jl
frstor
inc
push
jb,pn
aaa
xor
cmpsl
jno
or
loop
pop
push
xlat
arpl
jecxz
push
push
add
xchg
scas
cmpsl
jmp
repnz
xor
and
mov
dec
lods
inc
adc
aad
and
sbb
in
clc
test
shl
and
test
mov
mov
xchg
and
je
gs
xchg
pop
jmp
negl
jp
sbb
jae
xor
mov
iret
aaa
shlb
cwtl
lds
arpl
adc
push
inc
jl
pop
or
sub
jo
call
jle
mov
xor
mov
and
push
dec
xor
jae
xchg
and
inc
xlat
pavgw
add
mov
dec
les
xor
shll
fucomp
push
xorl
or
ljmp
fists
xchg
xor
int3
cwtl
push
xchg
push
xchg
in
ljmp
or
insl
in
sbb
jecxz
jnp
shrl
sub
daa
xorb
xor
mov
cmp
jmp
lret
sub
inc
pop
ret
add
sbb
sarl
lods
sub
lods
jp
push
sarl
lahf
or
ret
sar
scas
sub
add
ljmp
shlb
dec
cmp
push
stc
pop
inc
out
xor
xor
or
xchg
pop
cltd
push
sarl
lcall
inc
icebp
stos
imul
add
jno
test
out
decl
add
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
jmp
inc
orl
push
ds
loopne
dec
jo
dec
jge
jo
imul
pop
pusha
repnz
sbb
ret
enter
iret
add
fs
ror
xchg
mov
rol
sahf
dec
add
je
rcll
push
gs
lcall
rcr
pushf
jmp
xchg
movsb
loop
xor
inc
xlat
pop
push
in
jb
nop
orb
and
cmc
mov
cs
pop
adc
adc
out
pop
repz
push
add
jge
out
data16
xor
cmp
cmp
jns
popf
rcll
dec
mov
add
movb
jle
adc
mov
stos
mov
leave
jno
mull
xchg
ljmp
jbe
xor
popf
dec
inc
push
and
lret
int3
sbb
aas
dec
cld
inc
pushf
cmp
xchg
or
aam
loope
mov
push
test
ja
call
incb
sbb
or
pop
test
stos
fbld
xchg
gs
mov
mov
sub
inc
push
pop
xchg
mov
sbb
mov
lcall
lods
out
out
push
leave
mov
ds
inc
int3
data16
or
arpl
in
bound
stos
jmp
int
mov
into
mov
or
pop
or
lods
fxch
fsubr
lret
mov
divl
dec
mov
inc
mov
xchg
insl
and
push
out
bound
je
jmp
bound
mov
jmp
cmp
xchg
js
sar
out
aam
xchg
sahf
mov
add
in
repnz
mov
lods
jb
lods
add
sbb
loope
adc
shlb
fmul
mov
sti
mov
add
out
xchg
lahf
pop
adc
je
mov
arpl
mov
iret
push
dec
dec
cwtl
mov
out
mov
data16
inc
xor
mov
inc
outsb
insl
or
lss
xlat
add
push
mov
xchg
adc
cli
sub
imul
push
lods
out
push
bound
mov
pop
fsts
nop
loopne
xor
mov
popa
lea
pop
ret
mov
fisttps
arpl
mov
repz
cmp
jmp
cmpsl
addr16
cmp
and
or
mov
or
es
not
push
das
inc
daa
sub
cwtl
adc
out
push
sarl
jno
ja
sub
mov
xor
dec
mov
into
push
push
push
orb
incl
mov
cli
stos
js
loope
add
stos
in
jmp
adc
mov
pop
push
dec
xor
push
es
faddp
loop
cltd
xlat
inc
stc
out
clc
push
mov
xchg
cwtl
pop
jb
xchg
popf
adc
jmp
popf
stc
das
shrb
add
fiaddl
mov
sbb
mov
jnp
cltd
jl
push
pop
xor
push
leave
cmpsl
sub
leave
pusha
loope
mov
mov
mov
or
xchg
cltd
xor
stos
das
xor
sub
pop
imul
jge
repnz
add
jo
xchg
adc
mov
jecxz
pusha
jecxz
mov
stos
lahf
lcall
mov
in
in
sbb
loope
xor
outsl
inc
icebp
and
ljmp
xchg
mov
inc
mov
cmp
dec
sub
push
mov
lock
inc
scas
outsl
mov
mov
lret
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
jmp
jp
jb
jb
adc
sub
cmc
pop
jb
mov
dec
jo
dec
jge
jo
mov
ret
adc
dec
inc
sbb
sbb
mov
sub
or
push
cmp
pop
add
cmp
adc
xor
aad
and
loopnew
mov
jo
dec
push
push
pop
mov
jnp
int
insl
cmpsl
sti
push
push
and
rclb
sbbb
and
sub
xor
enter
pop
mov
cltd
or
fs
lret
sbb
pop
enter
js
cwtl
inc
pop
sti
cmp
pop
nop
cmpsl
mov
test
pop
rolb
aas
sbb
mov
push
xchg
xchg
stos
dec
fdivp
popa
iret
ja
mov
scas
in
xchg
cmpsb
sbbb
mov
xor
fstps
and
sti
pop
repz
stc
or
aas
int
dec
movsb
push
pop
push
mov
xchg
or
mov
stc
sahf
and
pop
adc
mov
push
jp
jb
addl
fwait
stc
fsubp
mov
cmpb
inc
test
mov
pop
ja
lret
negl
cmp
jns
xor
add
ljmp
inc
fsts
inc
and
push
mov
in
lods
push
mov
sbb
insl
shll
push
lcall
push
jp
inc
mov
int
and
movsl
loop
add
out
cmp
sahf
es
inc
imul
pop
xor
dec
pop
lahf
repz
adc
fbld
mov
fdivrl
or
loop
cs
popa
fsubrl
cmpsl
aad
sub
lahf
xlat
ficoml
mov
mov
stc
aas
mov
lods
sarb
loop
fidivl
icebp
sahf
xchg
rolb
iret
rcl
jno
xchg
lods
dec
test
add
sub
test
test
sahf
sbb
rep
push
jp
into
movsb
inc
sbb
push
lods
outsb
or
idiv
xor
popf
pop
pop
xor
fcomi
das
lods
mov
dec
xor
xlat
arpl
test
int
push
les
push
rolb
stc
xchg
sbb
lahf
inc
pushf
ret
aaa
movsb
pushf
sbb
sub
jecxz
fs
inc
xchg
cmp
pop
addr16
sbb
add
sub
in
test
jb
mov
mov
push
jecxz
mov
dec
push
mov
fsubrl
pop
mov
jnp
imul
int
dec
mov
sbbl
or
xor
sbb
cwtl
hlt
pop
push
cmp
je
shll
sub
sti
mov
sti
sbb
shlb
xor
and
push
or
call
jbe
in
adc
out
aas
xor
sub
jns
ja
push
int3
sub
jno
xor
sbb
cmp
cmp
xchg
mov
adc
xchg
sbb
aaa
push
icebp
sub
sti
pushl
loop
push
fwait
loop
fimull
inc
xchg
mov
and
lock
cwtl
into
push
mov
test
clc
andl
outsb
push
jge
and
mov
in
cmp
test
stos
fsts
lahf
push
jb
dec
cs
adc
mov
mov
mov
add
arpl
dec
shlb
nop
push
loope
ret
sarb
lret
scas
jmp
jns
adc
test
pushf
data16
sti
pusha
inc
pop
dec
add
popf
stos
push
sbb
sbb
rcll
test
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
in
inc
jmp
fisttps
jecxz
out
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
cld
add
test
in
in
cld
jge
mov
fsub
add
mov
add
add
mov
inc
push
fisttps
test
fadds
jmp
fildl
inc
jo
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
ret
cld
incl
out
xor
mov
cld
jo
or
add
push
add
mov
decl
add
inc
orb
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
push
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
pushf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
das
mov
mov
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
lret
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
enter
xor
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
cmp
pushf
or
enter
xor
pushf
inc
ds
pushf
inc
mov
lock
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
pushf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
pushf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
bswap
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
les
mov
mov
cmp
mov
add
xor
pushf
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
fs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
int3
lea
push
xor
pop
lods
incl
mov
pushf
jo
cmpl
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
pushf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
scas
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
pushf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
fdivr
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
and
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
faddl
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jo
inc
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
jmp
inc
push
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
int3
jne
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
loope
sub
inc
loope
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
out
inc
aas
jmp
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shl
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
pushf
add
rcr
inc
add
add
out
inc
inc
sub
dec
and
jo
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
ss
add
add
add
add
movb
or
dec
lea
or
movsl
fiadds
jae
or
in
pushf
inc
xor
pop
inc
shl
inc
sub
inc
add
add
loopne
inc
ret
inc
mov
leave
and
add
mov
sbb
sbb
stc
test
lea
mov
dec
sarb
add
inc
ljmp
or
jge
mov
clc
leave
inc
add
rdpmc
sbb
mov
cmovne
jmp
inc
mov
sbb
mov
add
out
add
sub
add
jo
leave
movl
inc
add
inc
out
stc
int3
jb
xor
or
dec
mov
movb
loopne
inc
lea
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
test
jne
orl
jmp
inc
jne
mov
mov
shlb
push
mov
gs
add
inc
dec
into
mov
jl
add
inc
mov
add
add
inc
or
inc
in
fsub
inc
add
add
call
pop
test
dec
jmp
pushl
loopne
movl
push
incl
mov
cwtl
movl
sbb
rorb
inc
rorb
test
add
add
push
add
mov
incw
add
xor
push
cli
popw
push
xchg
sbb
test
callw
adcl
mov
mov
push
fsubl
dec
inc
mov
lret
fistl
ljmp
jmp
in
lock
mov
xor
add
stos
data16
incl
data16
inc
shlb
add
addl
mov
add
push
lea
addb
jge
mov
rol
mov
rorb
orb
test
push
mov
orb
push
xor
aam
test
cmp
data16
dec
test
xor
lahf
mov
mov
data16
sbb
dec
mov
mov
add
jne
test
jne
sti
sbb
cld
jmp
inc
mov
data16
push
incl
test
sbb
lock
pushl
xorb
add
xor
movw
mov
sbb
mov
add
add
xor
inc
add
add
inc
jmp
addl
or
jmp
push
in
test
xor
mov
mov
push
add
decl
add
decl
movsl
add
add
push
xor
xor
mov
push
push
jne
mov
sbb
jne
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
sbb
sbb
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
call
add
orb
ret
incl
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
cld
or
dec
incl
push
add
mov
orl
add
push
xor
inc
mov
push
incl
inc
add
addb
mov
lea
je
decl
call
mov
hlt
call
mov
cwtl
mov
mov
addl
mov
inc
jmp
ljmp
mov
and
pushl
lcall
add
enter
add
adc
add
mov
xor
jmp
mov
in
inc
or
decl
jne
mov
mov
lock
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
sub
push
lea
jne
incl
jnp
mov
fs
sbb
out
or
ret
inc
decl
test
clc
lcall
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
sbb
addb
call
xor
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
xor
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
wrmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
pushf
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
or
inc
xor
pushf
call
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
call
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
xor
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
pushf
pushf
xor
jne
mov
icebp
icebp
shl
mov
pop
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
pop
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setl
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
adc
inc
inc
push
add
add
enter
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
cli
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
lldt
xor
sub
add
ror
dec
inc
cmp
cld
or
into
out
lret
dec
mov
loop
cmp
inc
daa
loop
out
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
out
add
add
and
fs
incl
jo
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
jno
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
ds
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
pushf
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
icebp
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
add
into
fs
mov
ret
add
add
add
ds
add
into
ret
pop
adc
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
cmp
pop
mov
je
xor
mov
cmp
pop
cmp
jne
mov
cld
push
pop
inc
stc
test
clc
test
cmp
fs
or
add
add
push
lret
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
xor
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
add
add
lret
lock
clc
inc
lret
cmp
ss
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
pushf
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
pushf
pushf
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
pushf
add
clc
cmp
or
add
xor
or
lea
or
enter
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
mov
adc
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
add
pushfw
add
add
mov
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
sub
test
clc
inc
add
hlt
leave
test
clc
inc
push
aaa
inc
pop
rorl
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
pushf
xchg
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
pushf
mov
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
pushf
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
pushf
popa
push
dec
inc
mov
clc
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
rcll
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
subl
mov
xor
pushf
mov
clc
add
mov
adc
inc
mov
mov
loopne
inc
mov
mov
nop
roll
mov
mov
dec
push
mov
xor
mov
mov
in
into
inc
iret
xor
add
mov
dec
mov
mov
mov
mov
xor
mov
clc
enter
mov
lock
mov
cmp
rol
enter
inc
adc
inc
clc
xor
add
mov
roll
add
push
mov
fsubr
inc
mov
adc
add
inc
test
xor
fmuls
test
cld
or
dec
ret
push
inc
dec
mov
mov
push
jne
mov
call
mov
mov
clc
mov
xor
adcl
inc
push
mov
clc
incl
mov
clc
rolb
je
mov
jne
lea
mulb
decl
fadds
inc
jmp
mov
roll
mov
lock
dec
ret
mov
mov
mov
fadd
enter
inc
cld
mov
xor
add
sub
xor
pushf
add
or
jne
clc
mov
call
jmp
mov
xor
xor
enter
clc
inc
inc
pushl
in
pushf
jne
mov
clc
dec
out
dec
mov
lea
cmp
lea
mov
cld
iret
mov
jmp
test
je
mov
fdivr
movl
lock
inc
lock
lret
imul
testl
dec
mov
fmuls
fmuls
enter
inc
dec
xor
add
mov
inc
inc
push
mov
lock
mov
fadds
rol
test
dec
push
decl
push
mov
add
cmp
add
loopne
add
dec
xor
pushf
mov
cld
iret
test
mov
in
dec
add
add
dec
mov
fmull
add
testl
test
add
add
mov
cld
mov
hlt
mov
add
cmp
add
mov
mov
call
dec
add
cmp
cld
iret
mov
dec
push
lea
mov
call
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
lock
iret
rorl
inc
mov
iret
add
xor
mov
or
push
shll
cmp
fmull
test
dec
dec
xor
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
sti
or
cmp
je
mov
ret
or
call
add
mov
cld
mov
xor
add
dec
jnp
mov
xor
add
mov
mov
xor
rorl
jb
add
ja
sbb
cwtl
enter
inc
decl
fadds
rorl
inc
xor
mov
or
inc
rcll
mov
xor
jb
add
shll
mov
xor
add
repz
inc
mov
xor
inc
mov
mov
jne
mov
test
inc
mov
mov
lea
xor
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
push
xor
enter
inc
add
cld
test
pushf
inc
xor
pop
push
incl
in
mov
push
inc
cmpsl
mov
or
add
add
add
icebp
je
mov
cld
rol
ret
add
lea
cwtl
jne
clc
or
incl
cmp
incl
lcall
or
push
mov
test
inc
mov
imul
dec
mov
push
dec
push
xor
add
push
incl
lods
inc
inc
mov
xchg
or
call
adc
orb
inc
inc
add
mov
call
push
push
dec
jo
push
dec
mov
cmp
cmovne
call
mov
lcall
leave
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
mov
mov
cmpb
add
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
xor
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
pushf
mov
jge
decl
