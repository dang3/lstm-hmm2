push
mov
jmp
cwtl
jb
inc
pop
pop
cltd
lret
inc
scas
shlb
push
push
xorb
into
xor
xor
ja
or
add
int3
adc
sbb
mov
or
rorl
out
mov
or
dec
sbb
loopne
add
mov
xor
jbe
fisttpl
jecxz
and
xchg
dec
incl
mov
loope
pop
sub
jae
lret
lcall
mov
loop
cmp
sub
or
sbb
outsl
insl
je
cmp
jns
popl
shll
movb
sahf
mov
daa
sbb
addr16
in
test
loopne
push
push
sub
mov
outsl
div
jmp
pushf
in
pop
inc
jmp
or
xchg
aam
jl
mov
daa
orl
pushf
dec
fldt
ss
test
mov
sub
mov
cmp
cmp
jne
add
popa
push
js
mov
mov
stos
dec
hlt
push
push
loope
push
popf
mov
jno
jecxz
jns
or
in
out
mov
outsl
imul
mov
pop
xor
push
cmpxchg
out
shlb
lock
fisttps
pop
jno
icebp
mov
loope
jle
outsb
sarb
outsb
das
insl
inc
into
cmp
data16
cmp
call
repnz
in
xchg
cld
xchg
fdivrl
xchg
fcmovnbe
inc
or
pusha
call
xchg
cmp
mov
lret
sahf
cwtl
jb
lods
cwtl
jmp
mov
sbb
fnsave
pop
out
push
imul
dec
pop
pop
lods
ret
out
sub
push
lods
mov
fisttps
jnp
jae
xor
repz
lds
mov
pop
fnsave
dec
dec
lret
jnp
jb
and
add
data16
in
jmp
pop
jl
xchg
sub
test
scas
xor
daa
adc
fistpl
add
mov
mov
rcr
rolb
push
push
or
aad
add
cli
mov
mov
add
int
in
xor
dec
adc
xchg
pop
cld
mov
mov
mov
and
jp
rorl
daa
push
orb
and
add
leave
jge
cmpb
jno
sarb
xchg
pop
ljmp
aas
inc
les
les
sub
sbb
xchg
ss
xchg
scas
iret
inc
mov
jno
mov
mov
push
xor
push
ds
arpl
inc
out
sub
clc
dec
pop
push
dec
jge
out
push
push
jg
out
mov
shrb
push
mov
inc
mov
xchg
out
cmc
fmulp
or
jg
sub
scas
mov
mov
xchg
mov
inc
data16
push
jno
enter
call
jg
mov
cmp
mov
pushf
mov
cmpsl
scas
das
xor
enter
insl
jge
fsubs
nop
mov
adc
hlt
mov
push
sub
lock
in
cmp
mov
push
cld
movsl
push
sub
in
inc
sbb
cmp
add
out
lock
clc
std
aas
xchg
stos
mov
ret
lods
add
shl
and
mov
mov
mov
lds
fiaddl
cmpsl
dec
or
arpl
js
int
in
movsb
lea
movl
sbb
movl
sub
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
sub
lea
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
and
mov
jmp
sub
ljmp
xlat
cwtl
xorb
xorb
and
xchg
cld
test
les
fbld
ficomps
xchg
scas
stos
mov
sbb
enter
dec
push
xor
xor
sti
inc
or
ret
xor
loop
adc
xchg
repz
jns
cmp
test
sub
out
mov
mov
js
mov
jne
call
out
in
sbb
in
fdiv
xchg
cmpsl
mov
inc
adc
imul
pop
adc
mov
ror
jno
ss
sub
adc
mov
out
dec
mov
lcall
gs
mov
dec
aaa
dec
jl
cmpsb
lods
test
jecxz
add
repnz
xor
adc
sub
dec
or
or
imul
mov
adc
sbb
cmc
loope
push
mov
aas
and
pop
mov
cmp
dec
sbb
es
into
mov
pop
pop
mov
fs
dec
inc
xlat
ss
in
dec
pop
cmp
jge
mov
mov
inc
sub
fimuls
negl
pop
sub
sbb
add
xchg
push
cwtl
push
fs
fstpt
and
pop
out
pop
adc
jo
sub
loope
add
push
jmp
and
adc
pslld
xor
les
sbb
push
push
pop
sti
int3
mov
push
sub
push
cmp
icebp
jb
mov
je
inc
pop
stos
push
jno
out
mov
movsb
aaa
test
mov
fildl
jb
xor
cmc
push
jp
sub
test
pop
jo
push
addr16
or
movsl
inc
xor
lock
arpl
cmp
pop
cmp
pop
in
pop
scas
mov
add
mov
dec
in
popf
in
in
xchg
paddb
add
mov
ja
ljmp
pusha
adc
lret
mov
mov
test
mov
outsl
out
adc
xchg
ds
inc
mov
loop
rcrl
mov
mov
idivb
mov
adc
imul
out
inc
jmp
idivb
test
mov
add
push
or
add
adc
adc
adc
mov
inc
add
fs
xchg
gs
dec
adc
shl
stos
mov
and
test
pusha
cli
push
inc
pop
sti
xchg
xchg
dec
dec
stos
in
xchg
stos
inc
and
mov
dec
sub
xchg
or
dec
mov
mov
pop
inc
or
mov
pop
inc
push
sub
fs
dec
push
pop
mov
mov
and
add
or
test
std
xchg
aaa
movb
cmp
lcall
loopne
in
aas
sub
sub
mov
test
fdiv
xchg
xchg
fdivl
rolb
inc
inc
ret
xchg
jle
lret
dec
mov
cmp
daa
rcrl
hlt
mov
or
inc
add
and
loop
xchg
out
pop
sbb
mov
or
pop
jne
sbb
mov
push
aas
push
mov
sub
push
add
sbbb
xchg
mov
test
loop
inc
jb
stos
adc
jns
pop
mov
negl
push
lea
xor
mov
mov
xor
push
sbb
push
adc
mov
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
addl
mov
or
mov
mov
xor
mov
sbbl
xor
xor
xorl
add
add
sbbl
jmp
ret
imul
mov
fwait
xlat
ret
jle
xorb
push
dec
cmp
mov
addr16
outsb
orl
jge
add
or
lahf
xchg
fimuls
sub
pushf
testb
roll
pop
mov
cmpsl
gs
dec
dec
cmp
addr16
cld
unpckhps
push
loopne
dec
das
push
int
jae
sub
testl
jmp
in
popf
sub
inc
jns
aas
cmpl
jg
cmp
add
jge
lock
mov
mov
push
imul
test
adc
push
push
inc
jecxz
jae
push
pop
pusha
cs
lods
pop
fmulp
xor
cs
rclb
lcall
jbe
pop
xor
lods
xchg
dec
loop
outsb
fstp
jns
or
pop
pop
icebp
mov
mov
sarb
outsl
mov
mov
into
and
cmovno
pop
cmp
inc
xchg
lret
mov
add
jle
dec
and
mov
add
lcall
loopne
and
ret
iret
repnz
jbe
add
or
movsb
cld
pop
ret
lret
or
addr16
inc
loopne
stc
inc
add
test
xor
jae
je
pop
jle
into
sub
pushl
fwait
and
lahf
dec
imul
adc
adc
jmp
pop
icebp
mov
jg
pop
lahf
divb
and
mov
ljmp
pop
or
or
lret
leave
push
inc
repnz
xchg
pusha
and
out
adc
pop
mov
sub
and
xchg
cltd
pop
sbb
in
rol
insl
addb
mov
mov
add
xor
sbb
push
push
sbbb
dec
mov
cmc
in
outsb
test
or
js
xlat
cmpsl
jbe
and
fimuls
pushf
xchg
xchg
jne
sahf
hlt
cmp
mov
int
jmp
and
in
inc
adc
lcall
stc
add
test
daa
or
fs
push
add
push
sub
push
ss
mov
mov
jnp
push
adc
xor
or
adc
or
and
sub
push
jp
push
ficoms
data16
and
fildl
lods
insb
jl
xor
adc
xchg
push
and
or
lods
push
mov
adc
add
add
outsl
adc
bnd
xchg
inc
shl
test
sahf
mov
adc
lea
jmp
cmpsl
mov
out
mov
dec
fidivl
test
add
mov
stc
dec
add
icebp
push
mov
lods
sbb
dec
add
push
data16
fimull
dec
js
cmpsb
ret
pop
cmpsl
inc
cmp
ja
mov
push
jnp
push
incb
and
mov
inc
push
sub
mov
sub
xor
cli
test
cwtl
fisubs
mov
push
enter
push
or
dec
jmp
or
mov
mov
pop
dec
push
xor
je
mov
push
test
jae
ror
xor
cld
inc
fs
lcall
or
or
xrelease
jmp
pop
nop
jl
jge
and
jns
jmp
jle
xorb
mov
dec
rol
push
lods
xchg
push
ljmp
and
pop
nop
and
dec
pop
cmp
dec
sti
fs
test
cmp
sbb
jns
insb
jle
cld
mov
pop
mov
sub
mov
pushf
mov
ficompl
jl
sub
std
push
push
xchg
dec
xchg
pop
or
ret
rcrl
mov
popf
imul
aas
popf
push
inc
idivl
lds
or
clc
negb
les
test
data16
sub
cmp
sbb
std
daa
adc
sub
out
stos
and
inc
sbb
into
mov
in
and
cmp
dec
hlt
bound
jl
sub
ljmp
fwait
stc
sbb
pop
push
nop
mov
inc
pop
cmpsl
ret
mov
sbb
pop
out
in
or
xlat
cmp
lods
mov
mov
fbstp
cmp
dec
sub
xchg
imull
nop
shrl
pop
mov
xorb
push
sub
dec
ja
jg
ds
push
outsl
or
push
shl
ret
jmp
mov
cmp
lods
aam
sbb
popa
in
fsubrl
jmp
mov
sub
test
imul
clc
add
hlt
test
stos
dec
push
test
out
sahf
dec
cmpsb
mov
les
pop
push
add
hlt
dec
inc
movsb
mov
xlat
es
jmp
adc
cmpsl
test
fdivl
cmp
lcall
xor
aaa
or
jle
mov
cmpsl
xchg
pop
cmpsb
sahf
or
test
xchg
push
daa
insl
in
xor
insb
xorl
in
pushf
mov
inc
outsb
stos
jae
sti
cwtl
mov
dec
das
inc
mov
sbb
sbb
sbb
push
sub
pop
daa
imul
outsl
loopne
jmp
mov
mov
mov
sub
mov
or
pop
aad
aaa
ss
adcl
cltd
sub
popf
jns
jge
cmp
mov
sahf
or
shrb
movsl
cmp
jno
xor
dec
jbe
mov
aaa
clc
sbb
xor
out
adc
or
dec
cmp
into
inc
cli
add
sbb
push
les
orl
sub
imul
and
xchg
stc
xchg
call
adc
push
stos
or
enter
and
out
lcall
jb
mov
ljmp
lds
int3
inc
gs
lcall
xor
mov
mov
mov
lahf
cmp
mov
lods
popa
adc
or
or
push
push
jmp
es
push
add
fwait
daa
and
and
xchg
ret
scas
fsubl
pop
rcrl
repnz
mov
dec
inc
gs
lret
fs
fwait
jg
mov
addl
sub
dec
adc
loope
data16
mov
dec
cmp
inc
dec
cmp
sarb
or
into
lods
clc
in
fadds
loopne
inc
aam
dec
add
movl
cmp
movl
je
movl
sub
lea
mov
sub
mov
not
jmp
inc
test
xchg
mov
rorb
into
or
jle
jno
jle
mov
mov
aaa
mov
inc
add
js
sub
adc
notl
and
mov
loopne
dec
cli
call
mov
aad
add
push
xor
and
repz
jo
xor
push
or
xchg
dec
fstpt
ljmp
cmp
cli
inc
cmp
outsl
cmp
test
push
mov
xchg
add
mov
lret
divl
insl
or
fiaddl
mov
sbb
inc
inc
outsl
xchg
or
cmp
popf
xchg
sbb
cmp
dec
adc
or
sub
jl
in
loop
adc
xor
and
stos
ja
insb
aaa
fldcw
cmp
xor
lcall
in
mov
movl
and
repz
fs
popa
icebp
jae
aad
mov
aas
inc
sub
daa
mov
push
aad
push
outsb
pop
in
or
enter
jmp
sbb
aas
xor
jmp
pop
mov
push
js
in
pop
in
push
lcall
mov
jmp
sub
loope
leave
inc
ret
or
daa
add
inc
outsb
xchg
jnp
or
lods
jne
xchg
push
jnp
inc
xchg
cmp
lcall
dec
xor
popa
mov
jne
mov
jmp
jb
sbb
add
iret
out
imull
or
icebp
add
test
sub
cmp
scas
lods
xchg
pop
hlt
sub
pop
fistpl
sti
mov
sub
xor
mov
jae
lcall
out
jo
fwait
or
fs
lods
out
aad
mov
ja
sub
sub
mov
fnsave
mov
sbb
xchg
sub
hlt
mov
or
scas
jge
adc
cmp
fidivrl
inc
mov
jo
aas
jmp
jbe
ret
in
cmc
popa
mov
lods
gs
insl
push
ror
fnsave
sarb
fildl
cmc
mov
pop
mov
mov
mov
inc
inc
cmp
add
push
cli
jmp
mov
cmpsb
inc
imulb
push
repz
aas
dec
sahf
out
sarl
or
mov
sbb
sahf
mov
push
cmp
mov
lea
out
subl
adc
and
dec
mov
cmp
mov
xchg
fcom
sti
out
stc
add
or
add
push
mov
cmp
or
dec
cmp
cmp
jle
test
inc
out
mov
idivb
jmp
push
or
mov
ss
or
jbe
mov
mov
push
push
fstps
lcall
push
outsb
push
mov
xor
in
movsb
aas
xchg
dec
pop
repz
fiadds
flds
push
rclb
imul
sbb
mov
aaa
push
pop
imul
es
popa
push
push
lcall
mov
out
repz
pusha
push
je
mov
jbe
push
shl
sahf
shll
gs
fcmovnbe
mov
xchg
lret
sar
loope
popf
push
pop
or
push
lahf
pop
adc
out
xchg
dec
mov
imul
movl
mov
movl
mov
cmp
movl
je
and
mov
jmp
inc
xchg
ljmp
dec
xchg
clc
push
movd
jno
jle
shl
and
mov
dec
in
and
std
testb
push
jmp
jecxz
cmpsb
jg
mov
cld
das
xchg
andb
adc
add
int3
cmc
cmp
sub
pop
pop
jo
in
jmp
inc
stos
cmpsb
xor
std
adc
movl
push
fimull
push
pcmpeqw
rcrl
mov
jmp
mov
add
cmpsb
mov
in
test
xchg
sahf
adc
sub
mov
fdivs
dec
rolb
mov
daa
sub
xchg
fistpl
push
daa
ja
ljmp
dec
mov
mov
xor
push
test
arpl
or
mov
lods
notl
dec
jb,pn
adc
repnz
scas
jmp
cmp
cld
mov
push
cld
push
das
out
mov
mov
dec
pop
ret
dec
and
xor
adc
inc
mov
push
adc
pop
clc
addr16
mov
push
cmp
jl
push
mov
icebp
push
dec
and
pop
pusha
jo
xchg
jge
imul
scas
xor
dec
in
fiadds
mov
rcrl
int3
inc
push
jg
dec
bound
test
mov
sbb
or
push
daa
stc
cmp
arpl
or
arpl
mov
aam
ret
adc
pop
pop
xchg
aad
push
ja
ret
sbb
add
pop
cmpsb
jecxz
in
lcall
ret
push
mov
mov
push
das
lock
dec
xor
out
adc
test
imul
andb
loopne
add
jno
stos
fs
repz
inc
adc
jecxz
daa
push
xlat
ss
clc
orb
out
mov
jmp
sbb
xor
pop
sti
lahf
xchg
or
xlat
or
loopne
or
clc
mov
in
nop
add
popa
sub
ret
add
lret
cmc
dec
jp
or
mov
or
pop
jnp
das
aas
cltd
adc
cmpsl
divl
cli
pop
jo
cwtl
inc
cmp
clc
push
jle
pop
lock
mov
cmp
fiadds
incb
lock
loope
pop
sti
mov
hlt
sbb
loope
jns
lcall
mov
mov
rorl
pop
sbb
inc
or
jne
add
rorl
jge
mov
insb
adc
jno
sub
pop
shll
cmpsb
pusha
pop
xchg
xchg
adc
pop
xchg
lods
inc
inc
divl
hlt
mov
pop
lea
rclb
cli
push
faddp
lods
dec
clc
pop
xor
cmpsl
pop
fdivs
and
sbb
add
adc
lods
mov
inc
sbb
or
test
xchg
inc
repnz
mov
frstor
jmp
pop
mov
clc
jmp
popf
mov
sarb
xor
push
js
call
gs
andps
push
xor
outsb
scas
jmp
ret
gs
mov
lods
outsl
lds
orl
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
jmp
clc
inc
adc
xchg
jge
pop
movsl
pop
dec
push
nop
push
negb
xorb
and
mov
rcrb
adc
cmpsl
sub
add
mov
outsb
and
cld
jl
out
dec
cmpsb
shlb
sbb
pop
loope
fsubr
and
enter
add
jmp
loope
mov
les
adc
pop
pop
pop
sbb
sbb
mov
xor
xor
cmc
mov
cwtl
sti
xchg
stos
and
add
dec
int3
pop
stc
or
sub
adc
movl
ljmp
sbb
mov
int3
mov
mov
popa
bound
adc
sbb
sahf
in
test
dec
arpl
xor
jecxz
sbb
sub
popa
imul
mov
aaa
daa
push
sub
fwait
int
cli
jp
xchg
pop
jmp
test
add
bound
jb
repz
lret
mulb
xlat
cmp
lea
pop
leave
cli
mov
rcrl
roll
stos
or
or
aam
fisttps
mov
popf
xchg
test
out
cli
movsb
push
xor
lods
mov
cmpsl
aad
and
lods
shlb
addb
inc
xor
or
sbb
pushf
or
js
cs
lods
nop
int
imul
dec
sub
mov
add
les
pusha
sti
add
adc
dec
add
ret
stc
iret
clc
and
adc
repnz
cmc
sbb
cmc
fcmove
push
les
and
lret
stos
cltd
push
es
jne
test
and
push
add
cltd
fbld
xchg
mov
mov
cwtl
push
in
orl
pop
ja
cltd
jbe
push
int
xchg
les
leave
mov
adc
dec
mov
out
pop
mov
or
push
mov
push
mov
xchg
test
mov
popf
movsb
shll
cmp
mov
ds
push
dec
out
push
inc
cwtl
mov
dec
nop
lret
push
cmp
cltd
push
mulb
clc
flds
xchg
shl
mov
addr16
jge,pn
pushw
inc
or
fistpl
mov
fwait
sbb
stos
lock
add
xchg
mov
sub
cltd
mov
or
xorl
inc
fcoms
xor
pop
iret
push
cli
pop
xor
mov
pop
push
lret
sbb
iret
jg
mov
or
out
xchg
mov
xor
pop
mov
outsl
std
inc
pushf
clc
orl
test
and
pop
stos
pop
aam
cmp
out
sarl
jge
call
out
lcall
or
xlat
pop
into
pop
push
icebp
pop
mov
cmp
add
lock
jmp
push
push
sub
xlat
das
fiaddl
popa
jl
sub
aad
rcrb
xor
sub
mov
jmp
add
mov
test
jle
es
mov
lahf
scas
loope
xchg
mov
int3
stc
fstl
repz
push
fsubr
cld
out
mov
test
pop
jecxz
xchg
sbb
pop
pushf
mov
cmc
xor
mov
add
sbb
or
pushl
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
jmp
adc
repnz
mov
test
inc
ret
or
jle
xorb
mov
test
jbe
xor
pop
sub
jb
orb
cmp
mov
stos
shr
pop
mov
popf
xchg
push
aam
arpl
loopne
cmpsl
sbb
cltd
dec
mov
push
lcall
rorl
jmp
jmp
xlat
inc
adc
jge
xchg
pop
jbe
loope
mov
pop
mov
jge
or
jecxz
push
mov
mov
pop
cs
mov
out
test
movsl
repnz
push
sub
xchg
dec
jp
imul
das
pop
jo
xorb
gs
iret
pop
ljmp
sub
xchg
movsb
ss
xor
or
dec
mov
icebp
sbbl
stc
xchg
cmp
sahf
push
leave
jecxz
imul
sub
sar
mov
arpl
mov
ja
in
cwtl
pushf
push
jle
pop
xchg
mov
and
testb
xchg
sbb
push
sbb
rcll
add
negb
es
add
push
mov
adc
push
mov
sub
push
inc
enter
add
lods
push
test
movsl
push
xchg
xor
paddsw
into
jl
movsl
sbb
fadds
fimuls
mov
outsl
fbld
subb
pop
rolb
adc
inc
es
or
cmpsl
mov
push
ja
adc
add
pop
xchg
sub
cmp
xchg
movsl
lcall
sbb
adc
pushf
cwtl
lds
enter
call
xor
ror
out
inc
xor
lret
mov
shrb
inc
std
pop
lods
cld
push
jns
sbb
push
aad
xor
jecxz
out
mov
dec
shl
sub
inc
dec
mov
aaa
sub
mov
pop
sbb
inc
push
push
push
pushf
icebp
call
pop
imul
lahf
cmpsl
je
in
fistpll
shll
jnp
fmulp
hlt
push
and
data16
dec
mov
add
inc
into
sbb
rol
inc
and
jnp
cmpsl
es
cmp
or
jae
addr16
mov
repz
scas
xor
sub
roll
xchg
fistpl
outsb
xchg
adc
jne
in
cld
cmp
sub
outsl
inc
call
sbb
rorb
repnz
cltd
rcll
lea
cmp
pop
or
jl
adc
mov
les
inc
repz
dec
adc
pop
data16
or
ror
adc
cmp
xchg
jbe
repnz
pop
cwtl
jb
int3
jg
dec
insb
mov
jl
sahf
push
icebp
sub
stos
mov
loope
rcll
out
inc
inc
sub
push
in
mov
les
in
cs
outsb
mov
mov
test
ds
xchg
jb
jb
pop
xor
loop
cmp
mov
mov
ss
pop
or
push
inc
mov
cmp
aaa
mov
out
add
fdivrl
inc
or
mov
mov
jmp
jl
sub
jge
jge
inc
sbb
fstpt
sub
xorb
push
jno
mov
stos
xchg
gs
jns
inc
js
dec
ret
xchg
notb
mov
xchg
pop
sbb
int3
sbb
je
inc
or
in
insl
jge
addb
outsb
mov
adc
or
xchg
lods
mov
pushw
lock
js
daa
outsb
sbb
int
dec
xchg
lock
jmp
push
shlb
jno
pop
mov
insl
das
cmp
faddl
sub
push
rol
orb
mov
fistps
xchg
enter
cmp
mov
rcpps
jl
es
pop
das
aaa
adc
aas
push
loop
xlat
fisubrl
fdivl
push
adc
cltd
addr16
loope
icebp
pop
jmp
mov
pop
adc
mov
adc
aam
iret
stos
lods
mov
xchg
cmp
cmpsl
repz
xchg
out
addr16
xchg
mov
and
movsb
jl
pushl
movsl
stc
lret
cmc
jns
lahf
cmp
imul
add
mov
jns
inc
fildl
xchg
cmpsb
sbb
call
es
mov
mov
xor
inc
lret
mov
ljmp
or
insl
xlat
sbb
push
lds
lahf
imul
in
hlt
mov
mov
pop
gs
mov
ss
ljmp
insl
adc
adc
pop
aaa
push
iret
neg
pop
cmp
outsl
scas
mov
push
pusha
dec
push
mov
add
inc
sub
in
jmp
out
and
ret
sub
cmp
or
add
testb
xchg
xchg
lret
enter
dec
adc
in
cmp
sarb
cmp
and
outsl
cli
stos
dec
scas
mov
test
test
test
xchg
les
pop
jmp
add
cltd
xor
shrb
jp
fisubrs
xchg
sbbb
out
push
or
shl
mov
jg
push
jne
jno
fsubrs
je
pop
dec
add
cli
cwtl
dec
xchg
pop
ds
dec
push
xchg
out
xor
jbe
nop
xor
lret
outsl
iret
popf
movsb
xchg
repz
push
jbe
or
dec
insl
adc
adc
mov
lods
rorb
in
xchg
lcall
flds
mov
in
cmp
push
fwait
adcb
sbb
js
dec
shl
test
xchg
jno
gs
push
inc
add
scas
sbb
jbe
mov
jnp
mov
lods
nop
int
jl
adc
jge
lret
arpl
jmp
stos
stc
shll
test
xchg
out
gs
lods
aam
and
das
push
inc
sbb
lods
enter
mov
xchg
es
stc
pop
push
repz
sete
lret
cmovno
jl
inc
jl
cli
push
adc
mov
sbb
or
nop
lods
mov
cwtl
lret
in
and
cmp
jo
addr16
adc
pop
dec
sub
xor
fmuls
fmuls
scas
mov
and
pusha
push
xchg
movsl
jg
stos
cmp
adc
aad
push
xor
imul
mov
add
ret
add
add
push
jl
xlat
push
mov
dec
xor
and
push
jle
xorb
xchg
xor
dec
outsb
sahf
outsb
sub
mov
pusha
xor
pop
xchg
iret
loop
adc
gs
jp
in
fidivrl
or
mov
imul
aaa
mov
lods
ja
mov
sbb
aad
pushl
popa
roll
mov
xor
test
xchg
outsl
cltd
sbb
lock
xor
lahf
negl
int
cs
shlb
stos
cmpsl
cmp
das
sbb
add
and
xchg
sbb
xor
outsb
ljmp
stos
mov
ficoml
jge
pop
lea
inc
dec
or
jnp
cbtw
pop
insb
adc
gs
push
ret
aad
dec
mov
js
gs
inc
mov
add
movlps
scas
mov
jo
mov
in
popa
jl
imul
clc
dec
cmc
inc
pop
adc
xchg
jno
movsb
and
into
aad
xchg
inc
add
mov
ret
or
mov
inc
outsl
pop
mov
loope
or
inc
data16
jnp
jecxz
fdivs
xchg
xchg
push
sbb
dec
rcr
int
jge
and
ljmp
jecxz
pop
test
popa
sbb
ds
adc
cmp
ss
inc
popa
mov
test
lock
cmp
adc
sbb
sub
fisubrl
out
sbb
fs
xchg
and
xor
ja
pusha
insl
mov
sub
xor
ss
inc
cmp
loop
sbbl
pop
jno
or
push
and
adc
pop
sti
sub
test
sub
jge
adc
fidivl
sbb
call
lret
aam
lret
add
cmpsb
fmull
mov
mov
pop
push
jno
stc
mov
mov
out
lea
jg
pop
call
in
jns
fwait
cli
jge
into
xor
jecxz
cmp
pop
loopne
sub
imull
les
addr16
xor
sahf
jl
add
adc
stos
gs
jb
cmp
dec
sub
call
sahf
jle
repz
dec
dec
rcll
shlb
push
aas
out
dec
inc
jno
ja
sub
jle
mov
in
cmp
test
js
cmp
mov
xchg
rol
imul
shll
or
daa
xchg
xchg
into
sbb
fistps
sbbb
movsb
cli
divb
js
leave
lcall
push
stc
test
cmp
fmuls
aam
add
bound
push
adc
xchg
add
cwtl
cmp
jb
cmc
dec
jbe
cltd
cwtl
add
lock
fwait
xor
in
xor
jle
jle
int3
inc
movsb
lcall
pop
sbb
cmp
jge
sbb
xorb
push
pop
sbb
and
aaa
sub
jns
cld
mov
jg
xchg
cltd
xor
cmc
xchg
imul
cld
clc
inc
nop
nop
push
mov
fistps
addr16
aaa
sub
and
hlt
mov
mov
adc
cmp
adc
test
adc
jnp
or
xor
clc
pop
mov
ja
aad
out
sbb
stc
faddp
jmp
xchg
ret
insl
or
push
inc
aaa
imul
mov
add
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
push
mov
andl
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
add
mov
xor
mov
xor
mov
or
add
adc
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
adcl
xor
xor
add
mov
movl
movl
movl
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
adc
movl
or
movl
movl
xor
movl
mov
xor
mov
add
cmp
movl
je
movl
push
movl
jmp
mov
mov
sub
or
mov
sub
mov
xorl
sub
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
mov
andl
xor
xorl
add
movl
cmp
movl
jb
addl
mov
add
mov
xor
add
and
mov
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
sbbl
xor
add
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sbbl
add
sbbl
imul
xor
mov
add
mov
sub
movl
cmp
movl
ja
mov
xor
orl
add
jmp
mov
mov
xor
xor
mov
adc
add
add
imul
mov
sbb
mov
or
mov
sub
cmp
ja
jmp
ljmp
insl
imul
xchg
mov
jle
mov
jle
add
sbb
lcall
cs
xchg
pop
sbb
add
mov
rorb
xor
mov
pop
pusha
mull
sub
incl
fcoms
mov
inc
mov
aas
js
sbb
jp
cmp
clc
dec
rcrl
lock
ficoms
jnp
call
stc
mov
jl
fwait
add
xlat
shrl
jl
inc
fiaddl
dec
jge
test
shrl
cli
cmp
mov
mov
jne
xchg
jb
adc
frstor
pushf
and
sub
aaa
dec
xchg
mov
lret
jecxz
test
jecxz
push
jb
outsl
or
pop
mov
call
adc
adc
sbb
xor
jae
ret
jns
mov
push
mov
mov
negl
mov
test
insb
enter
shrb
inc
add
mov
push
lret
sbb
in
inc
cwtl
add
push
xchg
lock
enter
jmp
push
idivl
mov
add
pop
push
fisubrs
cmp
test
sbb
mov
cmp
mov
int
or
popf
repnz
lcall
cmc
jne
rcl
xor
sub
push
or
fbstp
ljmp
dec
add
mov
inc
iret
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
jmp
rorb
push
mov
push
stos
mov
scas
pop
pop
adc
mov
jle
clc
aaa
imul
mov
cmp
out
clc
stos
mov
pushf
cmp
ret
push
subl
inc
fstps
fdivl
loope
sbb
jb
add
cmp
stc
pop
sahf
xchg
cld
jo
fwait
pop
test
mov
jbe
loope
jl
cltd
mov
sbb
in
lret
sub
loopne
mov
cmp
mov
xchg
bswap
xchg
iret
in
out
xor
cmp
flds
pop
add
sub
jne
push
mov
mov
push
xor
push
sub
arpl
adc
arpl
into
ja
in
and
adc
mov
adc
mov
jl
sub
cmp
cmp
shl
xor
mov
push
or
shl
add
fstpl
in
add
add
into
push
xchg
cmp
dec
jbe,pt
insb
dec
test
lds
xchg
cwtl
stos
adc
adc
pop
nop
les
inc
xor
cwtl
jmp
xchg
cs
aad
gs
psubq
jbe
mov
adc
pop
imul
scas
mov
ret
push
test
jns
xchg
movsl
inc
dec
pop
and
sbb
aad
mov
loopne
movsl
in
sbb
roll
in
jne
mov
push
adc
stc
mov
sbb
out
and
pop
jno
adc
enter
inc
rorb
pop
xchg
push
aam
ja
add
mov
mov
jmp
fs
popf
insl
pop
gs
xchg
popl
push
adc
jle
jg
jle
cmpsb
adc
sahf
bound
cmp
adc
sbb
jne
add
mov
inc
mov
fistl
or
repnz
and
arpl
cld
sarl
xor
out
aam
adc
pop
sbb
push
or
cmp
ja
cwtl
jne
in
data16
fwait
xorl
call
xchg
pop
jg
pop
push
or
ret
pop
sbb
mov
popf
mov
int3
cmp
mov
scas
in
dec
js
mov
aam
xchg
sub
pushf
div
mov
int3
push
adc
pop
iret
xchg
xor
inc
dec
mov
ficomps
scas
sub
scas
sub
mov
mov
ljmp
sbb
xor
mov
pop
cld
stos
dec
and
xchg
or
aaa
in
push
or
jo
jno
push
mov
ss
mov
cwtl
fnstsw
jb
push
mov
xor
inc
xor
mov
jnp
add
lods
and
lret
mov
xor
inc
cltd
sti
pop
mov
loop
divb
push
les
push
loope
and
ret
lods
ss
or
mov
imul
inc
pop
push
add
lods
es
sub
and
and
cli
sub
mov
lea
adc
insl
mov
stos
icebp
sti
mov
inc
xor
xor
jmp
xchg
push
int3
jns
imul
popf
inc
pusha
in
push
jle
mov
jle
gs
clc
push
fstpt
fisubrl
xchg
add
fs
and
shll
int3
fstpl
pop
lock
icebp
xor
push
cmp
jne
push
xlat
les
rcr
xchg
sbb
lea
add
dec
cmpsb
push
and
pushf
mov
sahf
js
ljmp
push
adc
int
out
aad
pop
push
aaa
rcrb
and
cli
xchg
lods
test
ljmp
ljmp
xchg
mov
add
popa
sbb
and
mov
das
stc
and
fiaddl
repz
pushf
mov
mov
gs
and
ja
xchg
inc
scas
and
mov
fisttpl
or
clc
add
testl
or
xchg
add
je
mov
jg
scas
mov
pop
shrb
cmp
out
fisubl
push
movsl
mov
and
xor
jp
leave
sbbb
pop
add
sub
in
jecxz
stos
xchg
jbe
and
aaa
rol
mov
cmp
xchg
sbb
inc
xor
sti
movl
stc
xchg
cmp
or
aaa
lds
lods
mov
dec
jb
push
dec
cmp
pop
mov
push
insl
xchg
lea
insb
inc
aaa
push
repnz
pop
rclb
jnp
cmc
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
jmp
hlt
mov
add
pop
mov
adc
jle
mov
jle
pushf
pushl
sti
push
in
dec
nop
out
ret
movsl
ret
scas
clc
popf
push
push
mov
mov
outsl
fwait
lret
sub
scas
xchg
mov
lcall
cwtl
popf
pop
mov
xor
ffree
cs
mov
dec
push
xchg
sbb
sbb
fadd
mov
std
mov
cmp
mov
aam
jmp
shrb
rcr
or
mov
test
lods
rorb
ret
adc
ret
jo
add
repz
icebp
aam
mov
xor
cld
rcrb
sbbl
add
pop
add
in
enter
pusha
ja
cmp
dec
inc
and
pushf
dec
mov
jle
fisubrs
lods
cwtl
dec
jb
cmp
scas
and
movsb
inc
pop
movzwl
pop
and
dec
sbb
repnz
cltd
dec
ret
std
cmp
xchg
adc
mov
test
loope
stos
pop
cmpsb
inc
fstpl
ja
fcomps
dec
out
mov
or
add
out
mov
loope
test
sahf
fs
gs
jbe
fsubrs
mov
jne
insb
sub
pop
loopne
outsb
and
add
lcall
jmp
imul
mov
jne
pop
add
push
mov
fnstenv
scas
loop
jb
in
jmp
outsb
cmpsl
mov
mov
push
int3
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
jmp
dec
push
dec
push
cmpsl
xor
pop
pop
imull
jle
mov
jle
mov
cmp
sub
xchg
xor
es
sub
xlat
add
cmp
and
lret
push
je
popa
xchg
dec
mov
mov
pop
and
add
mull
popf
adc
daa
push
shl
bound
xor
add
push
jnp
add
and
inc
cmpsb
cmp
push
lods
add
lods
int3
into
inc
push
xchg
int3
insb
test
mov
xchg
fldz
dec
inc
sti
lods
fisttpl
adc
mov
xchg
add
addb
pop
out
add
add
test
outsb
adc
icebp
xor
cli
mull
data16
in
xlat
mov
jl
add
dec
outsb
shlb
xchg
cmp
push
push
xor
push
add
pushf
mov
sbb
xor
fs
ds
out
mov
enter
and
das
lret
jg
jecxz
std
js
arpl
aad
scas
aas
cli
lods
cs
and
inc
orl
pop
cwtl
cmpsb
repnz
pop
jl
shll
xor
ret
scas
fsubrs
inc
sbb
call
out
lock
add
mov
cli
leave
je
rcll
sti
cmp
cltd
sbb
test
xchg
loop
sub
lret
pop
scas
sub
adc
test
sbb
push
popa
fdivrl
jno
pop
aaa
sbb
dec
jne
and
inc
lahf
aam
xor
push
xor
add
mov
mov
mov
mov
jmp
andb
addw
jne
sub
mov
jle
lods
outsl
iret
add
sub
and
and
pop
xlat
xchg
jbe
lods
test
dec
or
mov
xlat
cwtl
or
cwtl
das
adc
adc
out
jne
loope
or
hlt
push
mov
dec
scas
xor
lock
inc
dec
fldl
ret
mov
iret
fucom
xor
cmpsb
fwait
in
and
mov
mov
cmpb
push
mov
fwait
or
int3
sub
shlb
jnp
sub
cltd
jp
push
dec
movsb
mov
adc
mov
push
imul
or
adc
inc
loopne
pop
xchg
fiaddl
lods
xchg
ret
pop
cmp
fs
lds
pop
push
outsl
pop
or
notl
xor
pop
jnp
push
ja
rcr
scas
mov
mov
xlat
stc
ss
dec
lahf
outsl
imul
push
and
and
scas
imulb
cmp
pop
cmp
mov
daa
xchg
or
sub
jmp
mov
loop
sbb
push
mov
xor
and
insl
or
loopne
push
in
mov
mov
mov
stos
push
jae
test
fldl2t
cmp
fcomip
jnp
mov
jne
mov
cld
ljmp
mov
aam
adc
js
adc
xchg
cli
movsb
cmp
mov
loope
shll
inc
add
push
in
jmp
test
xor
push
mov
xor
sub
jle
jg
jle
test
add
sarl
ljmp
fdivr
inc
add
addr16
or
testb
iret
scas
shrb
out
stos
mov
int
faddp
rorb
in
pop
and
aas
stos
pop
popf
cmp
ret
mov
dec
xor
xchg
and
lcall
jo
sbb
xchg
xchg
mov
dec
pop
cli
pop
push
jo,pt
inc
jg
movsb
jl
mov
mov
cltd
movsb
xorb
ljmp
aam
xchg
out
cli
mov
mov
dec
mov
das
daa
sbb
cltd
imul
adc
hlt
mov
subl
shl
lret
mov
mov
dec
mov
outsl
cmp
cmpsl
xor
mov
or
mov
leave
test
fdiv
fnstenv
fisubl
sub
xchg
lcall
push
aad
orl
call
jnp
add
pop
scas
lret
xor
insb
mov
pushf
push
mov
sub
shll
cmp
pop
loopne
mov
jb
out
mov
loope
cltd
sbb
pop
xchg
scas
sub
outsl
adc
pop
push
cmp
push
pop
mov
leave
sub
nop
mov
out
xchg
hlt
in
nop
std
jo
or
xchg
sub
inc
lret
jo
mov
mov
mov
or
out
arpl
dec
add
repz
cmp
jge
mov
mov
mov
mov
xor
add
jmp
in
push
adc
movsl
aas
push
and
jle
mov
jle
mov
dec
mov
mov
pop
add
and
xchg
sarb
dec
daa
vmaxsd
shll
nop
ret
fdivp
test
push
aad
jne
in
test
lock
mov
addr16
push
sarb
scas
mov
cltd
in
or
sub
loopne
stos
sbb
cmpsb
in
and
fidivl
and
jecxz
mov
rcll
cli
adc
add
xchg
and
mov
lcall
add
insb
iret
hlt
push
push
dec
push
out
decb
mov
or
lods
jno
pop
or
mov
imul
push
aad
fwait
push
or
cmpsl
xor
fisttpll
fsub
or
pop
cmpl
and
and
pop
int
jg
xor
cmp
repz
je
mov
popa
push
jl
add
stos
test
rol
mov
in
lds
or
cmp
lahf
inc
test
dec
pop
js
into
lret
out
pushf
cli
jl
lea
jg
sub
aad
push
fisubrs
cmp
mov
ret
test
push
mov
mov
adc
mov
jnp
mov
mov
lahf
cmp
pop
mov
push
mov
test
icebp
daa
arpl
test
jmp
jnp
insl
jae
push
pop
push
mov
mov
sub
sbb
call
mov
pop
in
xchg
pop
popf
jb
add
call
in
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
jmp
testl
xchg
and
jge
push
mov
jle
loope
repz
aam
xor
jno
inc
movsb
lret
call
lret
mov
mov
push
cwtl
mov
lahf
repz
aam
dec
sbb
xchg
int3
fyl2xp1
xor
dec
gs
cmpsl
stc
pop
or
lret
or
sbbl
jg
add
in
je
scas
pop
jo
dec
iret
test
movsl
mov
add
mov
add
sub
jp
push
insl
addr16
mov
idiv
or
pop
mov
mov
jb
fdiv
mov
test
push
stc
cmp
sub
mov
repnz
or
ret
jo
outsb
sahf
push
mov
xor
mov
enter
mov
lds
insb
pop
clc
sti
test
mov
cmp
rolb
sub
aas
in
decl
mov
loopne
cmp
cmp
mov
test
and
mov
push
cmc
lock
cmp
push
mov
pusha
lods
rcr
shlb
pop
loopne
in
in
stos
inc
shrb
sub
mov
jno
dec
push
and
out
loope
pop
mov
lods
or
bound
ljmp
xchg
sahf
jns
push
fisubl
cld
mov
mov
imul
jb
iret
test
mov
orl
dec
jno
pop
add
cltd
ret
sub
or
add
imul
jmp
mov
jns
dec
mov
lret
enter
mov
jle
rol
leave
pop
sub
dec
inc
sti
clc
icebp
adc
jae
stc
mov
and
mov
loope
sbb
dec
fsubl
ret
dec
pop
adc
iret
adc
vmulpd
subl
cli
stos
cmpsl
or
scas
mov
pop
in
add
push
shrl
lods
test
popa
and
lret
cld
jge
ret
jle
dec
sahf
cmpsl
mov
adc
xchg
add
shl
adc
jbe
in
inc
dec
push
mov
inc
cli
js
imul
pusha
mov
fdivs
mov
stc
cmp
mov
lea
arpl
lods
jns
jns
cmp
mov
imul
pop
jge
adc
mov
and
inc
test
jp
out
xor
into
push
xchg
mov
sub
xchg
lea
cmpsl
sub
jmp
mov
lahf
cmp
sub
movsl
leave
pusha
mov
fwait
mov
ja
inc
jle
int
pop
sti
adc
pop
xchg
jo
in
lods
add
dec
jb
mov
dec
xchg
jo
cmpsl
push
sbb
jnp
dec
dec
sub
cmpsb
mov
decl
xlat
sub
imul
in
adc
mov
pop
push
sbb
or
scas
movsl
icebp
add
lret
ret
ret
cltd
xor
das
mov
sbb
pusha
mov
xor
xchg
xlat
fnstcw
xor
js
data16
inc
cld
xchg
inc
push
cmp
pop
int3
add
in
mov
mov
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
jmp
pop
mov
sbb
or
dec
enter
and
mov
jle
clc
xchg
leave
cmc
imul
std
fiaddl
mov
sbb
push
cltd
filds
cmc
dec
sahf
sbb
or
popf
jle
jbe
push
decl
std
outsl
mov
or
jp
xchg
sbb
inc
pop
xor
mov
movsb
test
mov
sub
addb
jge
jae,pt
mov
pop
sub
xchg
xchg
mov
loop
push
sbb
les
mov
call
jmp
add
fistl
stos
cld
jno
ret
movsb
adc
rorb
scas
stos
adc
cmp
mov
test
lds
pop
mov
je
adc
lea
out
rolb
aam
dec
fs
arpl
push
push
push
push
mov
mov
pop
push
sbb
jp
push
lahf
mov
jmp
repnz
jg
xor
fstps
add
xchg
push
inc
js
data16
pop
xchg
push
dec
es
aas
add
jne
mov
rolb
sbb
or
dec
fidivrl
pop
movsl
adc
int3
xchg
cmp
xchg
add
fs
ret
mov
les
andl
pop
lret
inc
xlat
sub
pop
int
jae
cmp
imul
addr16
jge
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
sub
or
push
or
mov
sbb
mov
movzbl
add
movl
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
push
mov
xor
mov
push
mov
add
jmp
sub
in
cmpsl
insl
ret
mov
sub
and
jle
jno
jle
arpl
sub
mov
mov
lock
loopne
and
stos
and
in
and
fisttpll
fwait
ret
jo
mov
cmp
test
inc
icebp
mov
out
and
iret
pop
stos
test
imul
outsb
cmp
aad
adc
ljmp
insl
jbe
push
xchg
movsl
cmp
adc
adc
push
pop
mov
xchg
jns
sbb
jne
xchg
fwait
cmpb
sub
shl
repnz
xor
test
or
cmp
jle
xchg
addr16
inc
movsb
push
fcompl
fildl
push
movl
mov
test
neg
scas
in
mov
mov
js
sub
stos
jl
push
jg
leave
ret
jge
js
cmp
inc
mov
pop
les
inc
out
adc
adc
mov
cltd
aaa
lea
and
mov
xchg
sub
outsb
push
leave
inc
inc
clc
sbb
ret
mov
fists
or
sbb
inc
xor
add
cmp
xchg
dec
out
fcompl
out
into
mov
lahf
adc
cmpsb
jns
xchg
pop
fcomip
push
mov
fadds
xchg
fistl
fs
mov
out
push
xor
dec
out
loop
mov
adc
xchg
lahf
cmp
jmp
adc
sub
pop
mov
or
ds
jg
fistl
pusha
push
popa
sub
push
lcall
sbb
push
insl
add
out
and
jns
pop
cs
stc
jbe
and
cld
jbe
mov
and
addr16
mov
insl
push
mov
and
push
and
jo
repnz
enterw
dec
enter
cmp
aam
in
js
movsb
sub
cli
push
sub
push
pop
xchg
clc
xchg
cmpsb
sbb
xor
push
sbb
add
cld
popa
jb
lcall
push
divb
pop
sbb
or
out
imul
mov
xchg
popa
xchg
lret
inc
mov
sarl
das
rclb
loope
xchg
notl
out
cmp
push
pop
push
mov
aad
xchg
movsb
pop
ljmp
xchg
xor
movsb
out
adc
push
mov
lock
adc
mov
lret
les
sbb
jb
aam
pop
pop
sti
or
jmp
pop
push
int
dec
vmwrite
cmp
mov
popa
verr
mov
push
push
aam
sbb
test
push
movsl
pop
add
hlt
out
adc
in
pop
add
add
jno
or
mov
pushf
jp
jecxz
xchg
inc
data16
add
pop
adcb
pop
cwtl
xchg
sahf
inc
push
fucomi
pop
aad
and
mov
ja
jle
xor
insb
mov
push
out
xchg
sbbl
cli
movsl
mov
mov
cmp
mov
adc
pop
mov
lcall
add
ret
sbb
and
push
shlb
dec
dec
add
and
inc
leave
push
sbb
xchg
pop
imul
je
into
push
or
sbb
cltd
scas
ljmp
scas
sub
subb
test
dec
ret
insl
push
adc
adc
pusha
repnz
push
cmp
je
mov
mov
xor
mov
jmp
cmpsb
loop
fmuls
jge
xor
std
adc
jle
mov
data16
gs
inc
data16
add
pusha
and
das
repz
mov
push
in
xchg
dec
ret
ss
dec
aam
je
sub
fidivs
jb
xchg
vpmacssww
aam
das
sbb
push
cmp
test
dec
inc
pop
mov
and
cmpsl
adc
and
ficomps
pop
pop
cld
mov
outsb
cmp
push
fistl
jo
insb
and
fstpt
mov
pop
sub
lods
ret
movsl
sqrtps
mov
movsb
out
into
fisttpll
mov
sub
xchg
cbtw
and
arpl
inc
or
cmp
inc
push
ret
mov
push
mov
mov
addr16
shll
and
cmc
mov
xor
out
fistpll
stos
pop
xor
movsb
cmp
cmp
les
mov
mov
cltd
aad
add
pop
jo
mov
add
xchg
push
fnstcw
in
movsb
popl
inc
push
mov
inc
shll
addr16
dec
lea
ret
fidivl
xchg
orb
leave
idivl
xchg
dec
inc
push
rcrl
testb
mov
add
push
sub
in
nop
ja
leave
lds
mov
sbb
cmp
mov
cmpsb
imul
int3
inc
lahf
add
icebp
rcr
jecxz
sbb
xchg
lods
cmp
mov
gs
shll
jae
jne
sub
or
lcall
loopne
pop
sbb
gs
out
add
divl
loop
add
es
pop
jg
mov
sub
push
push
ficompl
xor
imul
inc
jp
mov
cltd
test
jecxz
cli
ficompl
adc
push
cmp
or
aam
add
out
push
shlb
lret
xor
popf
shrl
add
pop
sbb
shll
lret
xchg
jecxz
cli
xchg
lock
xchg
cmp
aaa
bnd
push
std
shll
in
out
jno
sbbb
xor
notb
dec
insl
out
xlat
jg
lods
sbb
rcrb
inc
test
dec
push
or
push
call
js
scas
push
inc
jmp
in
pop
mov
ficoml
cmpsl
sub
lahf
xor
into
and
dec
popf
sub
jo
inc
inc
fisubrs
clc
or
jp
adc
bound
nop
lcall
aad
adc
jnp
jg
mov
test
outsl
jbe
fucomi
or
xlat
insl
or
jb
cmpsl
mov
dec
mov
adc
xor
scas
test
loopne
in
jmp
sbb
and
ds
sbb
lods
sbb
or
popf
xchg
movsb
push
fsubrs
xor
push
xor
dec
ljmp
mov
insb
xchg
arpl
in
js
push
rep
lods
enter
in
and
mov
lahf
std
push
in
add
mov
mov
pop
cs
add
in
js
cmpsb
imul
xor
aam
add
xchg
pop
or
enter
outsl
inc
push
mov
xor
dec
cltd
pop
subb
dec
sbb
pop
or
cld
fcomp
lock
mov
mov
dec
and
ja
stc
mov
insl
add
push
sbb
adc
xchg
jge
fldl
enter
test
out
call
jo
mov
mov
test
inc
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
xor
jmp
testl
arpl
or
rcll
jle
jno
jle
bound
mov
dec
xchg
mov
rorl
aad
aam
mov
lea
xchg
add
jge
movsb
pop
and
inc
push
push
les
cs
int3
add
push
es
scas
enter
xor
sarl
into
movsb
push
into
aaa
ss
in
cli
mov
test
or
push
cmpsb
jne
aad
and
mov
mov
mov
jno
pop
pop
clc
insl
pop
pop
push
test
mov
ret
mov
jle
leave
sbb
pop
xchg
pop
lcall
jecxz
jb
aam
mov
gs
int3
fildl
maskmovq
negl
sub
dec
xor
nop
mov
push
repz
mov
pmaxub
push
scas
xchg
mov
xchg
les
fcomip
outsb
ja
ja
sbb
lret
xchg
cs
push
push
push
loopne
out
sub
xlat
pushf
repnz
cltd
push
stos
push
push
mov
mov
mov
xchg
xor
dec
dec
or
in
mov
fwait
enter
ja
mov
dec
js
add
cmp
into
sub
aaa
insl
scas
dec
mov
lds
mov
loop
xchg
ret
add
sub
xchg
out
jae
add
aad
ja
lret
xor
jecxz
adc
mov
movsb
xlat
out
cmp
negb
lds
ret
push
jge
pop
pop
jmp
scas
aam
sar
push
push
scas
out
pop
push
xchg
enter
lret
lahf
inc
mov
inc
rcll
mov
in
mov
cltd
cmp
sarl
inc
push
mov
cmpsl
pop
xor
movntq
das
jnp
jmp
inc
rclb
out
inc
mov
out
dec
pop
divl
and
in
dec
cmp
cltd
js
test
dec
imul
sub
xchg
xchg
jg
pop
loopne
fwait
jb
mov
and
in
dec
gs
mov
lock
icebp
orb
rcr
pop
jbe
out
dec
push
adc
pusha
mov
out
or
mov
or
nop
mov
popa
ret
js
pop
mov
insb
xchg
sub
in
ja
cmpsb
pop
inc
mov
lods
repnz
and
pop
sti
jecxz
cmp
pop
push
clc
aad
dec
jb
fwait
lods
xlat
sarl
add
lods
sahf
ds
jbe
push
pop
mov
mov
popf
cmpsb
cmpsb
ss
in
scas
fcmovbe
stc
rcrl
lcall
in
mov
xchg
js
pop
jns
cmc
xchg
dec
pop
lods
fldcw
mov
ret
fisubrs
mov
ret
out
mov
and
stos
fcmove
cltd
jecxz
mov
and
mov
inc
cwtl
push
call
out
inc
fmuls
insb
les
addr16
xchg
in
xchg
dec
es
push
lock
les
push
je
dec
clc
int
out
sbb
ficoml
xchg
mov
daa
add
jnp
add
jl
push
xor
clc
mov
cld
lods
mov
cmpb
icebp
sbbl
popa
lret
and
gs
pop
mov
mov
je
mov
movsl
stos
mov
movsb
ret
push
push
push
scas
xor
sbb
insb
pop
in
lods
in
add
in
xor
ja,pt
jp
dec
scas
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jmp
fdiv
es
jge
jge
jae
dec
pusha
xchg
dec
rcrl
jno
jle
scas
outsl
xchg
mov
sub
shrb
jmp
aas
or
sbb
test
pushf
xchg
dec
sbb
fdivrl
mov
cmc
and
cmpsl
paddq
ja
in
sbb
gs
xlat
mov
outsl
jmp
xor
lock
aaa
push
test
iret
or
sbb
mov
mov
add
test
cmp
ja
xchg
out
lds
inc
xchg
inc
out
daa
mov
fdivs
xor
iret
adc
test
stos
adc
loop
add
ss
xor
xchg
sub
fmuls
fildl
not
jecxz,pt
dec
mov
stos
xchg
mov
pop
popf
pop
xchg
mov
jns
out
mov
repnz
fbld
pop
mov
in
test
pop
xchg
insb
jno
test
xchg
and
std
xchg
mov
cmp
pop
movsl
enter
jp
jg
cmpsl
dec
loop
add
ja
add
xor
xchg
sbb
imulb
adc
fwait
push
or
xchg
cmp
aad
out
sbb
mov
pop
push
es
jmp
pop
test
sbb
sbb
nop
incb
push
mov
popa
mov
push
in
lcall
out
and
lahf
in
cli
clc
sub
or
push
and
adc
add
xchg
add
mov
js
mov
out
inc
jecxz
pusha
fs
mov
push
loopne
daa
aad
test
cmp
adcl
mov
inc
enter
cwtl
lds
adc
mov
ret
rorl
lahf
insb
hlt
aas
pop
mov
cs
add
ljmp
out
xrelease
ss
hlt
xabort
hlt
aas
ds
aam
xorb
sti
dec
fiaddl
inc
cmc
loopne
and
call
pop
aas
xor
rcl
cli
dec
inc
pop
addr16
ret
popa
lds
pop
int
hlt
enter
cmpsb
arpl
ljmp
cld
cld
sbb
repnz
mov
arpl
lods
in
xor
enter
mov
xchg
cmp
leave
addb
mov
test
out
cmp
int
mov
int3
repnz
xchg
fwait
mov
fidivs
rcr
push
hlt
call
fldcw
out
icebp
nop
inc
mov
or
adc
xor
lock
sub
test
das
mov
fildl
ss
dec
lahf
les
iret
lahf
adc
or
sahf
add
add
inc
ljmp
mov
lahf
js
pop
push
cmpsl
mov
cmpsb
mov
subl
je
sahf
cmp
movsb
popa
cs
xor
push
out
test
and
push
pop
loope
xchg
out
pop
pop
pushf
stos
sub
aad
xor
icebp
stos
pop
movb
add
pop
xor
fs
cltd
dec
xchg
sti
mov
add
dec
fistpl
pop
mov
ret
and
jae
inc
dec
scas
inc
push
jbe
xchg
mov
rcrl
sbb
jne
fwait
or
inc
push
sti
out
ja
push
add
and
and
orb
frstor
dec
les
push
hlt
cmp
sbb
cmp
fsin
cmp
sarl
xchg
and
enter
mov
add
pop
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
add
mov
xor
sub
incl
mov
push
sbbl
mov
xor
movl
cmp
movl
je
mov
decl
jmp
fcmovnb
dec
filds
jnp
cmp
fidivs
jle
jmp
jle
mov
sbb
in
test
scas
setbe
pop
dec
dec
out
mov
fdivrs
setbe
xor
int3
push
lea
inc
dec
xor
mov
and
xor
out
add
outsb
jl
dec
cld
inc
sub
jg
adc
xchg
sbb
fnsave
pop
int
insb
xchg
or
fwait
push
mov
adc
jecxz
negl
add
data16
sbb
rolb
cmpsl
add
add
push
inc
mov
into
js
lret
sub
repnz
mov
jle
mov
adcl
out
jle
jp
out
addl
xchg
sub
mov
xchg
cmp
sbb
fxch
push
movsl
lods
jmp
xor
incl
dec
imul
negl
mov
loop
mov
lcall
or
sub
jns
lahf
loopne
cmpsb
gs
or
jns
cwtl
inc
mov
mov
jno
pop
or
rolb
cwtl
ret
movsb
insl
ss
loopne
das
jle
mov
pop
pop
rolb
mov
lea
insl
pop
pop
add
inc
mov
or
add
test
xchg
rcrb
xor
jbe
jp
jbe
xor
push
insl
jle
push
push
add
lods
fisttpll
das
mov
jne
jbe
hlt
push
test
jl
sar
adc
inc
cmp
repnz
push
sub
icebp
and
arpl
mov
push
add
jmp
xor
stc
bound
fdivr
jbe
popf
stc
mov
outsb
lea
adc
lret
and
xchg
repnz
out
loope
addr16
mov
daa
fldln2
mov
inc
es
loopne
lea
and
mov
dec
xchg
test
xor
les
js
test
and
arpl
sahf
movsb
mov
xor
jl
ror
push
aaa
ret
adc
inc
dec
imul
sahf
push
fsubs
pop
int3
lahf
and
pop
cld
mov
pop
gs
xor
int
mov
addl
push
aad
mov
inc
ljmp
jle
mov
gs
out
sbb
into
popa
lock
leave
inc
add
in
jae
mov
dec
and
jmp
or
cmp
mov
adc
and
adc
into
sbb
out
push
or
test
loopne
inc
inc
sbb
jne
sub
or
fs
xor
js
cltd
mov
scas
mov
adc
daa
mov
fidivl
ss
push
jo
inc
test
movsb
outsl
jg
xor
xor
adc
rorl
or
pop
std
jae
ss
xchg
shrl
adc
inc
cmp
stos
ja
rcll
aad
cltd
xchg
push
sbb
ds
cltd
xlat
subl
push
mov
push
pushf
and
push
sbb
popf
sahf
das
pop
bound
aaa
mov
lods
and
ljmp
jne
sbbl
sub
xor
movl
cmp
movl
jne
add
mov
add
movl
jmp
mov
xorl
xor
add
movl
jmp
xchg
fcmove
pop
fstpl
dec
sbb
xor
ss
jmp
jle
xor
jbe
sub
sub
sub
lret
testl
sbb
test
pop
and
call
stc
sub
cmp
cli
popa
pop
dec
scas
or
mov
jb
add
mov
xchg
mov
insl
sub
or
aaa
lds
adc
xor
shrb
aas
into
cli
out
cwtl
jbe
repnz
sbb
sbb
mov
add
mov
ret
lahf
jl
incl
lock
std
imul
fwait
cmpsb
cwtl
mov
imul
pusha
sub
lods
minps
pop
pop
mov
fcomps
inc
fisttps
daa
add
outsb
lods
popa
repnz
mov
fs
pop
fisttpll
xlat
cmpsb
lea
repz
adc
fidivl
xchg
inc
sbb
notl
inc
cld
mov
outsb
cmpsl
add
je
lds
js
imul
cld
stos
in
in
push
push
psrld
cwtl
cmpl
das
out
ret
stos
imul
nop
cmp
out
jae
aaa
notl
mov
ret
push
sti
stos
out
lahf
cmp
mov
jmp
std
and
adc
pop
mov
xchg
mov
mov
xchg
loopne
frstor
pusha
in
and
clc
jge
call
mov
aam
xlat
jns
sub
aam
in
movsb
out
add
mov
sbb
adc
add
in
sub
loopne
and
std
sbb
fstpl
scas
outsb
js
fcmovnu
imul
lahf
mov
maskmovq
testl
movsl
popl
sub
shl
in
mov
les
xchg
xchg
aad
cltd
testl
inc
dec
arpl
mov
jg
imul
mov
outsl
es
add
adc
mov
mov
repnz
stc
sub
jle
js
sbb
hlt
jo
add
jmp
dec
sahf
xor
mov
adc
test
add
mov
xor
jg
into
movsb
cmp
xor
xchg
inc
jmp
ds
xor
mov
adc
xor
sub
lret
xorb
jno
dec
es
push
je
int
call
mov
push
imul
es
mov
leave
or
sub
push
mov
fmull
jae
idivl
cltd
push
push
stos
sub
jp
test
and
jecxz
mov
and
fisubl
jb
stc
leave
mov
push
sub
cltd
cmpsb
movsl
insl
push
movsb
and
jns
mov
lods
sbb
inc
cmp
jle
jbe
in
jns
mov
pop
test
push
lea
fwait
repnz
mov
xor
sub
inc
stos
push
cwtl
or
and
add
shll
jbe
mov
scas
daa
std
iret
rol
mov
test
jg
decb
ret
sarl
and
inc
add
jmp
repz
inc
or
pop
inc
and
sub
mov
lret
jmp
jle
aam
iret
push
jno
cmpsl
mov
sub
in
jo
xchg
into
xor
lods
and
scas
outsb
jns
pop
cmp
push
push
ficompl
aad
cmp
push
cs
dec
add
rcll
jmp
add
xchg
xor
xor
lock
dec
push
or
dec
push
cmp
popf
push
dec
dec
bound
lods
or
push
js
or
sub
enter
dec
lcall
push
or
push
std
jo
fsubs
jmp
test
jmp
test
lea
movsl
xchg
xchg
add
bound
mov
jl
shlb
outsl
movsl
cli
dec
mov
pop
fnop
sub
inc
or
es
mov
fwait
jne
arpl
xlat
aad
jge
mov
mov
iret
jmp
std
push
sub
adc
mov
jns
push
dec
gs
insb
daa
in
mov
les
cwtl
mov
xor
add
mov
ret
add
lds
clc
aas
cwtl
repz
fsubp
dec
mov
inc
add
div
popa
in
cwtl
fwait
test
out
pop
scas
lret
arpl
leave
jle
jo
add
and
push
shl
push
es
mov
mov
fnstcw
pop
mov
push
int3
adc
fisttpl
mov
add
test
jecxz
addb
dec
jge
mov
cmp
or
stc
aam
mov
jmp
lret
pop
push
nop
hlt
insb
cmpsl
mov
imul
adc
lcall
jbe
lock
jl
sub
sbb
xor
jne
imul
lea
inc
push
dec
pop
xlat
push
jae
sbb
mov
lret
mov
icebp
test
sub
xchg
push
mov
pop
dec
xchg
fwait
xor
sub
cs
in
jns
inc
insb
or
movsb
pop
push
lret
aam
cmp
or
xlat
rclb
pop
jnp
call
jg
adc
stos
sub
daa
dec
in
and
int
xchg
loope
movsl
mov
stos
fnsetpm(287
repnz
push
fistpll
adc
and
loope
push
cs
jge
mov
push
add
popa
mov
outsb
rcrb
push
fwait
cmp
mov
jg
rolb
loop
sbb
cs
ss
je
mov
cmpsb
popf
test
mov
out
adc
sbb
and
imul
xchg
shll
jl
xchg
sbb
jl
insl
mov
and
mull
cmp
sahf
scas
cltd
xchg
push
push
push
xor
in
repz
sbb
mov
fwait
pop
and
lret
jecxz
inc
xchg
mov
insl
cmp
add
push
aad
adcl
es
fsubr
dec
xchg
fwait
jmp
dec
scas
test
mov
pop
dec
pop
ret
xchg
repz
add
or
out
insb
andb
bound
xchg
sbb
jo
mov
mov
into
mov
testb
xorl
nop
jecxz
mov
jl
mov
fwait
add
mov
mov
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
xor
sbb
mov
xorl
add
addl
movzwl
mov
xor
movb
lea
andl
xor
or
inc
mov
cmpl
jne
push
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
mov
xor
sub
negl
mov
movl
cmpl
je
cmpl
jne
push
push
call
xor
xor
dec
mov
jmp
movl
add
movl
jmp
rclb
cmpsb
js
pop
mov
xchg
int
jle
jg
jle
stos
cmp
sub
fidivrl
cmp
js
loopne
dec
mov
shrb
hlt
mov
ja
in
pop
popa
pusha
jle
movb
sbb
aad
push
mov
adc
popf
jp
subb
cmp
hlt
je
bound
enter
dec
jl
push
sub
lea
mov
dec
mov
test
pop
lock
mov
loopne
in
leave
pop
mov
mov
xor
mov
ja
xor
movb
aam
jnp
jnp
push
lret
imul
sbb
popf
out
mov
mov
xchg
pop
fucom
lods
push
pop
fisubrs
popf
push
flds
pop
mov
shrl
je
aad
sub
shll
dec
rol
add
fsubr
sub
lds
imul
jb
enter
popf
fcoms
bound
fidivrs
addr16
test
and
or
xor
fxch
aam
mov
push
mov
mov
add
je
in
sub
popa
xchg
in
cmp
enter
and
and
repnz
xchg
lcall
mov
inc
clc
and
mov
push
mov
sub
xor
mov
subl
add
jmp
mov
mov
movl
inc
jmp
mov
jbe
pushf
pop
dec
fsubs
or
or
jle
sarb
jle
sahf
fcomps
xlat
addr16
das
popf
pop
jp
cmc
push
sahf
mov
mov
cmp
mov
test
inc
enter
testl
sub
jbe
loop
sbb
xor
das
mov
jns
inc
lret
inc
lods
mov
filds
or
inc
mov
cmp
ljmp
push
jnp
cmp
xchg
test
clts
pop
mov
repnz
jmp
mov
je
lcall
mov
mov
sbbl
dec
adc
cs
add
repnz
xchg
push
mov
push
jecxz
pop
sub
cmpsl
add
in
jl
outsb
insl
mov
ljmp
shrb
mov
mov
mov
xchg
hlt
dec
push
sbb
xor
inc
pop
mov
and
out
xor
mov
movsb
cltd
pop
movsl
out
mov
loop
rcl
jmp
lret
mov
sbb
or
shr
push
jns
sarl
pushf
push
xchg
cmp
xchg
aad
jmp
arpl
dec
rorl
xor
inc
outsb
fs
aam
scas
sti
xorl
sbb
lea
inc
add
ja
mov
scas
cli
movsl
push
mov
andb
mov
mov
xor
add
cmp
je
push
push
jmp
insb
lds
cmpb
xchg
inc
gs
jle
jg
jle
out
jl
test
jne
pop
test
leave
cmpsb
psrld
cmpsl
scas
out
scas
insl
lods
stc
dec
mov
pushl
cmpsb
jp,pn
insl
leave
test
sub
add
xchg
in
icebp
sbb
in
pop
loope
dec
les
scas
xchg
or
scas
push
into
push
clc
and
push
dec
mov
mov
mov
mov
nop
pop
cmpsb
cmpb
pop
inc
lcall
add
loopne
push
cmp
cmp
rorb
mov
popa
inc
insb
jno
clc
add
add
dec
adc
mov
jo
out
cmp
scas
mov
or
sbb
je
out
sbb
repnz
cltd
call
repnz
sub
mov
cwtl
ret
loop
add
out
test
fcomps
scas
adc
arpl
roll
loopne
dec
scas
movsb
or
adc
cmp
cmpsb
pop
ret
cmpsl
sbb
or
push
lcall
and
push
mov
lock
dec
js
jg
xor
cwtl
lcall
mov
loopne
push
cwtl
xchg
cmp
pop
jge
inc
cmp
dec
lods
xchg
mov
sbb
aas
push
jo
adc
push
outsl
imul
adc
adc
ret
mov
jmp
jae
cmp
cli
vpaddw
incl
mov
sarl
jg
jle
push
outsl
enter
sbb
movsb
fcomp
cmpsl
sub
pop
jns
ds
xchg
and
xchg
or
push
mov
and
scas
mov
aam
testl
sarb
mov
sub
inc
cli
add
pop
xor
xchg
add
add
push
lahf
pop
andb
jle
mov
inc
outsl
test
call
push
outsl
xor
dec
inc
scas
aad
mov
sbb
test
cld
sbb
and
mov
jnp
testb
sbb
test
adc
pop
mov
loope
imul
call
adc
push
sbb
and
or
imul
stc
jbe
or
das
push
sbb
movsb
arpl
xlat
inc
rorb
xchg
xlat
out
lock
mov
into
dec
shll
pop
mov
movsl
test
jg
mov
jns
stc
inc
nop
jmp
addr16
inc
rcrb
or
cltd
jnp
or
sbb
xchg
dec
in
lods
xor
cmp
push
pop
insl
pop
xchg
xor
cltd
popl
enter
sahf
jne
push
and
shl
xor
cmp
xchg
lret
and
push
inc
pop
cmp
mov
xor
mov
add
jmp
push
fsubs
pop
xchg
push
mov
ret
jle
sarb
jle
je
addr16
lods
iret
push
insl
cmp
dec
dec
xchg
and
cmp
pop
aas
push
cmp
sarl
sub
loope
popa
out
lods
insl
lret
mov
sub
inc
out
or
dec
inc
push
inc
adcb
or
dec
js
outsb
clc
push
cmc
push
lea
mov
pop
pop
cwtl
add
pop
aad
pop
scas
movaps
insl
insb
adcb
sub
pop
daa
out
inc
jl
add
xchg
cmp
fsubs
jl
xchg
daa
lcall
lret
and
mov
lret
int
es
inc
xor
fsubr
inc
xchg
popa
mov
sti
leave
rorb
fnstenv
nop
xchg
repnz
lds
inc
push
imul
insb
int3
pop
pop
or
add
cli
xor
jns
movaps
cmp
jbe
jg
sub
mov
aam
push
into
sbb
adc
rcrb
fistpl
rorl
mov
push
das
test
lea
in
cli
dec
pop
enter
push
cmp
mov
and
repnz
cmc
int
add
mov
mov
inc
mov
ret
and
iret
sbb
mov
inc
movzwl
mov
jmp
xchg
sbb
cmp
inc
push
cwtl
pop
and
sub
jg
jle
loopne
cmpl
jp
fbstp
pushf
ja
ss
fwait
test
insl
iret
inc
or
xor
movsl
mov
adc
jp
and
mov
out
push
xchg
popf
lock
xchg
xor
imul
jp
rol
shr
testb
mov
aad
movsb
ficompl
out
inc
and
sti
aad
aam
push
jg
jo
push
aaa
test
bound
movsb
fildll
rol
rcl
cmp
mov
je
mov
movsl
gs
xor
out
lahf
xor
addr16
dec
ficompl
int3
popf
cli
movsb
popa
ficoml
sbb
xlat
jae
mov
push
lods
pop
ds
out
sub
and
dec
mov
fwait
mov
or
ljmp
inc
lcall
pop
gs
pop
inc
lock
mov
ret
jno
cltd
sarl
cltd
stos
add
mov
mov
push
mov
stc
pop
stc
stos
push
push
push
icebp
int3
cmc
fs
movl
push
stos
add
ja
adc
daa
jno
loop
xor
fwait
sub
adc
push
or
pop
mov
ret
mov
or
mov
nop
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
jmp
fistpll
aas
or
or
jmp
jle
dec
outsb
dec
inc
mov
jle
sarb
jle
loop
stos
fsubrp
test
push
sbb
adcl
clc
mov
int
pop
inc
or
pop
adc
xchg
and
cmpb
pop
jecxz
dec
repz
xor
daa
mov
cmpsb
nop
xchg
cli
jns
fldenv
or
lds
or
mov
in
movsb
in
arpl
jge
out
sbb
ja
sub
lods
fidivrs
xor
fwait
cmpsb
xchg
loope
xor
xlat
mov
stos
arpl
pop
or
loopne
shl
lret
mov
aad
jmp
popa
pop
inc
pop
push
loope
lcall
sarl
adc
out
out
shll
aas
jne
add
out
and
xchg
adc
imul
push
jmp
sub
stc
ljmp
shlb
mov
lahf
and
xor
test
push
push
xchg
mov
movsl
mov
dec
loop
jo
lret
inc
stos
mov
fisubl
incb
sbb
push
pusha
dec
loopne
adc
insl
mov
dec
pop
movsb
xor
cmp
xchg
imulb
xchg
ss
xlat
mov
mov
xor
add
mov
mov
xor
add
jmp
mov
rorl
dec
rorl
out
jp
add
jle
sarb
jle
adcl
xor
dec
adc
inc
out
inc
cmpsl
cmp
cmp
mov
arpl
push
jne
cmp
xchg
in
aad
jecxz
hlt
testl
sub
aas
out
push
pop
inc
push
sbb
mov
call
addr16
stc
icebp
jl
mov
in
sbb
mov
rcrb
dec
and
out
incl
lcall
stos
xchg
rcll
or
mov
jg
or
mov
je
pop
mov
fists
cmp
in
jl
andb
ja
mov
mov
int3
push
mov
and
xchg
imul
mov
cmp
mov
sbb
fs
mov
negb
jmp
inc
addr16
in
pop
xchg
add
jecxz
call
lods
xor
fisttpl
xor
mov
stos
maxps
arpl
imul
sub
mov
fdivp
in
repnz
mov
pop
movsl
mov
in
or
pushf
mov
jl
push
sub
mov
cmpsl
mov
movsl
xor
mov
inc
xor
adc
inc
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
jmp
xchg
mov
or
mov
mov
leave
add
fdivrs
sarb
jle
out
jne
xchg
xor
pop
xchg
fdivr
pop
inc
scas
and
lahf
push
inc
push
mov
jne
adc
enter
daa
cmp
fcomp
mov
xchg
pop
repnz
cmp
out
push
and
lahf
inc
test
push
test
sbb
and
push
inc
pop
adc
notl
dec
jmp
stc
dec
mov
scas
cld
insl
cs
loopne
daa
and
cmp
and
pop
outsb
mov
push
cmp
scas
xor
aaa
divl
adcl
ss
aaa
sahf
lods
adc
fdivr
shlb
nop
xorb
pop
sub
and
or
stos
and
pusha
inc
cmp
push
xor
jb
cmp
outsb
dec
in
sub
and
push
jb
jb
ret
lahf
sarl
and
loope
xchg
cmp
adc
push
xchg
sbb
data16
iret
fsubl
sub
jmp
gs
aaa
test
data16
bound
mov
popa
shlb
adc
test
stos
out
int3
sbb
leave
fisttpl
cmp
aad
and
or
lret
adc
pusha
mov
and
cltd
cmp
mov
mov
addl
jmp
test
cmp
jge
xor
imul
sarb
jle
sub
sub
icebp
mov
or
mov
mov
scas
dec
in
sub
ret
dec
fldenv
mov
xchg
sub
test
pop
sbb
cmp
call
movsb
push
push
repnz
push
pop
fsts
test
push
lds
add
jnp
int
jno
pop
adc
ds
mov
loopne
mov
mov
sbb
push
aaa
ja
adc
pop
jb
leave
lret
mov
jge
cmpsb
inc
lcall
clc
inc
push
xchg
test
movsl
gs
loopne
adc
rcrl
jns
jne
jg
ja
pop
add
pop
call
dec
stos
xchg
mov
jb
out
clc
out
mov
and
xor
enter
cltd
jl
cmp
ss
mov
cmpsb
shll
ret
push
mov
xchg
adc
cmc
mov
sbb
jne
mov
test
int3
stos
rcll
das
mov
cld
pop
sub
in
cmp
mov
xor
dec
cmp
cltd
mov
mov
cmpsb
lods
sub
adc
pop
or
lock
push
insl
push
cld
hlt
cmp
or
inc
lock
xor
jmp
dec
sbb
fstpl
inc
inc
jmp
add
jg
jle
aad
pop
xor
adc
push
jecxz
and
iret
mov
movb
push
xor
shlb
mov
shll
aas
loope
bound
cmp
push
das
dec
fisubl
stos
xchg
sbb
dec
inc
ficoml
lcall
test
rorl
xor
cmp
sbb
lds
xor
pop
cmpsl
fldl
dec
push
adc
or
test
cli
push
jg
and
fcoml
iret
loope
mov
iret
cltd
sbb
aaa
rdtsc
popf
jae
cwtl
aam
lret
out
jns
pop
xlat
push
sub
sbb
bound
xor
lret
inc
pop
in
adcl
fcomps
mov
out
push
imul
scas
nop
xchg
xor
mov
icebp
inc
sbb
push
mov
test
lahf
movb
nop
cmp
dec
enter
add
mov
ljmp
cmp
ss
add
mov
mov
insl
push
mov
push
or
out
jnp
mov
cmp
sub
movsb
adc
ja
je
and
outsb
lea
xor
test
outsb
mov
xchg
and
rcrb
test
popf
jb
add
or
adc
decl
mov
add
mov
pop
leave
ret
push
mov
push
movl
neg
mov
movzwl
adc
mov
mov
subl
xor
add
adcl
mov
mov
adc
xor
or
push
movzbl
or
mov
adcl
mov
add
mov
xor
mov
mov
mov
or
mov
dec
mov
sbbl
mov
mov
adc
mov
orl
mov
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
pushl
push
call
cmpl
jb
mov
xor
add
pop
leave
ret
push
mov
mov
jmp
cs
orl
sbb
jle
push
jo
jle
and
adc
and
push
xchg
repnz
lea
addr16
jg
xorb
negl
jnp
roll
mov
xorl
stos
aaa
dec
jno
or
andl
rolb
add
sub
loope
mov
mull
or
out
jp
xchg
fs
adc
mov
movsl
xchg
xchg
sub
out
dec
xor
pushf
mov
xor
cmp
xor
mov
int3
and
xor
adc
or
fs
inc
iret
mov
pop
mov
cmp
pop
mov
mov
divl
cmp
and
psraw
mov
inc
jg
jbe
pop
iret
sahf
sub
lcall
outsl
jb
dec
sbb
gs
or
out
outsb
mov
cmpsl
cltd
cmp
into
shld
repnz
or
mov
mov
jns
loopne
mov
adc
push
inc
movsb
sbb
xchg
sbb
inc
xchg
stos
add
mov
xorl
hlt
sub
outsl
mov
sahf
movsl
aas
or
pminsw
lods
mov
xchg
dec
std
pop
cmc
pushf
jge
mov
xor
shl
inc
xchg
pop
mov
fimull
test
xchg
out
push
int3
mov
shrl
insl
sub
mov
fimull
aas
push
mov
loopne
pop
cmp
in
and
jbe
sbb
mov
jg
push
data16
sbb
mov
or
aad
pop
sub
add
sub
mov
call
in
lds
dec
inc
movsl
jae
adc
mov
popa
sbb
dec
jo
and
sti
fstpt
jb
ss
ffree
cmp
or
sub
arpl
inc
mov
sub
call
mov
xchg
shl
jne
push
jae
pusha
push
pop
int3
xor
sbb
jmp
negl
call
loop
pop
das
pop
or
jecxz
jnp
xchg
jbe
or
outsb
shrl
add
cmc
imul
lea
mov
jnp
jl
mov
inc
sbb
mov
fwait
loopne
pop
push
jle
jns
cmp
inc
push
xor
gs
push
cmpsl
add
xchg
mov
stos
test
mov
sbb
jo
mov
xchg
jmp
jecxz
mov
mov
sbb
jo
mov
push
sbb
mov
mov
imul
mov
jno
insb
fbld
add
rcll
nop
push
es
cs
out
out
rorb
inc
and
test
mov
sarb
div
mov
and
jmp
out
xchg
imul
fisubl
in
fistpll
push
jo
jle
in
popf
sub
call
pop
insb
pushf
or
lds
fnstenv
xchg
mov
mov
repnz
test
push
mov
cmp
dec
xor
lcall
push
push
mov
mov
subb
inc
adc
scas
pop
jg
add
test
lods
sub
and
add
fsts
mov
sbb
lahf
sub
jle
cld
xor
mul
aad
sbb
mov
xchg
loop
push
pop
mov
push
xchg
jnp
dec
ret
lds
aaa
pop
jo
pop
and
sub
jb
dec
jnp
dec
push
mov
cmpsb
imul
sub
out
daa
aas
popa
push
cs
int3
add
jmp
xor
popa
adc
jmp
mov
in
nop
push
outsb
faddl
imul
and
cmp
or
adc
fistpl
cli
mov
or
pop
int3
cli
jl
mov
mov
rcrb
int3
mov
pop
and
fldt
pop
sbb
lret
clc
mov
pop
jb
xchg
aam
icebp
mov
lods
xchg
rcl
scas
sub
mov
xchg
orl
scas
jl
sbb
push
call
test
divb
adc
jns
sub
sub
push
xor
mov
bound
movsb
loopne
push
pop
push
notb
jle
push
add
and
xor
jge
add
shrb
or
rcrl
mov
loop
out
mov
mov
inc
add
lods
icebp
inc
fs
adcl
ds
pop
mov
xor
orl
in
movsl
scas
aam
add
xchg
popf
xor
fwait
testl
mov
pop
mov
mov
inc
ret
mov
fnsave
mov
bound
hlt
mov
loopne
lcall
ljmp
in
jmp
shll
dec
ret
addr16
inc
movsl
out
andl
push
pop
loop
pop
pop
inc
rorb
stos
cld
dec
test
mov
shr
mov
imul
mov
clc
fldcw
inc
cmpsl
mov
pop
popf
ret
sarb
lds
pop
bound
aad
ret
push
lods
push
push
mov
xlat
xor
mov
jnp
aam
pop
sub
jp
lret
lea
fwait
sbb
jno
sbb
clc
dec
xchg
push
lea
pop
add
cld
loopne
jl
inc
inc
push
fstpt
test
pushf
and
in
push
rorl
jge
leave
test
sbb
xor
fcmovnb
inc
mov
mov
insl
mov
sub
xor
leave
sbb
pop
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
adcl
movl
mov
sbb
mov
xorl
mov
xor
jmp
jno
test
gs
or
movsb
outsl
popf
arpl
outsl
movsl
sarb
inc
jg
jle
lock
sbb
push
in
dec
or
xchg
into
out
inc
fldl
int
xchg
xchg
mov
pop
int
xchg
ja
mov
into
imul
cmp
fs
adc
pop
mov
and
cmc
jno
xor
and
jg
das
push
mov
cmp
sbb
lock
daa
or
mov
xchg
add
scas
out
je
mov
mov
pop
fld
push
les
movsb
mov
adc
add
test
fs
pop
out
xor
xchg
dec
mov
push
mov
push
xchg
int
push
fcomi
imulb
cmp
sub
pop
push
mov
lret
sbbl
test
rol
pop
or
cmp
arpl
sbb
insl
sub
aam
in
mull
pop
cmp
cli
jnp
mov
fdivp
cmp
xchg
fdivr
mov
imul
jb
adc
dec
mov
inc
dec
push
divl
or
jno
adc
mov
lcall
sbb
cmp
insb
sub
cmp
inc
movsb
add
xor
pop
cmp
in
clc
ret
xlat
xchg
pushf
and
adc
inc
push
popa
mov
fstl
out
nop
mov
dec
test
js
out
lds
mov
sbb
push
sti
sbb
push
imul
mov
inc
push
addr16
sub
inc
loopne
test
sbbl
xor
mov
repz
fadds
and
jg
jge
js
sti
cmp
jecxz
ja
test
lods
in
scas
xor
shlb
xchg
rorl
push
jp
repz
mov
mov
mov
sub
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
jmp
test
pushf
dec
pushf
inc
pop
cwtl
mov
aaa
iret
jb
lea
jle
pop
lods
cwtl
sub
pop
orl
test
pop
cwtl
sarb
scas
test
mov
jno
cld
push
xchg
pop
sbb
jb
pop
out
scas
mov
ret
iret
sbb
das
push
aad
push
test
and
daa
adc
xor
or
loop
jge
mov
sbbb
pop
andl
and
rcrl
dec
decl
cwtl
fldt
lds
mov
dec
lods
mov
aaa
in
mov
scas
add
jb,pn
movsl
repnz
mov
dec
inc
cltd
pushf
mov
in
in
jb
cwtl
dec
std
dec
xchg
adc
testl
pop
sahf
imul
push
aas
adc
jno
aaa
xor
cmp
rcl
lods
shll
adcb
mov
cmp
xchg
push
push
cmp
mov
out
mov
les
sbb
adc
mov
lock
xor
mov
push
sahf
adc
pop
or
mov
mov
scas
arpl
lds
aas
fwait
push
in
or
popf
lea
loopne
out
cs
add
sub
push
out
or
lods
loopew
mov
imul
inc
shl
decl
stos
mov
popa
mov
or
call
or
fsubl
push
or
jno
cli
add
push
rep
mov
inc
mov
popa
sub
aam
fincstp
add
sbb
arpl
std
pop
push
mov
mov
out
shll
add
leave
ret
push
mov
sub
push
sbbl
push
push
xorl
push
sbbl
call
sbbl
test
je
orl
xor
jmp
orl
push
call
sbbl
test
movl
je
push
push
adcl
call
jmp
subl
call
cltd
cmp
movl
jne
cmp
movl
jne
subl
push
call
jmp
negl
push
adcl
call
test
jne
andl
xor
xor
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
mov
and
mov
movzbl
sbb
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
adc
movl
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
lea
mov
add
lea
inc
mov
inc
mov
mov
orl
mov
add
mov
xor
xor
adc
mov
xor
xor
mov
add
mov
mov
mov
cmp
mov
movl
je
mov
xor
adcl
add
imul
movl
mov
jmp
xor
adc
add
mov
mov
mov
sub
or
mov
xor
add
mov
subl
mov
add
mov
negl
xor
decl
add
movl
cmp
jne
mov
add
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
add
mov
orl
mov
mov
not
mov
xor
add
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xorl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
xor
or
dec
mov
jmp
and
add
mov
lea
and
mov
mov
adc
mov
mov
sbbl
mov
sbbl
xor
add
movzwl
and
mov
addl
mov
or
lea
mov
sub
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
xor
xor
dec
mov
jmp
movzbl
or
mov
xor
xor
add
mov
mov
sbbl
movl
mov
sbb
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
pushl
pushl
pushl
pushl
push
pushl
push
push
push
call
xor
xor
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
mov
movzwl
add
xor
movl
mov
mov
add
mov
xor
xor
sub
mov
orl
xor
movl
add
movl
cmp
jne
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
or
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
xor
or
dec
mov
jmp
mov
xor
adcl
add
movl
cmp
jne
xor
add
sub
mov
xor
mov
incl
xor
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
sbb
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
adc
xor
xor
mov
andl
sub
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
not
mov
mov
subl
mov
andl
movzwl
add
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
adc
mov
subl
mov
xor
add
xor
mov
mov
xor
sbbl
add
andl
xor
subl
sub
orl
mov
subl
movzwl
sub
movl
cmp
movl
mov
movzwl
movl
jg
xor
sub
adcl
sub
mov
jmp
notl
xor
lea
mov
mov
mov
not
mov
movl
cmp
movl
je
movl
mov
movl
movl
movl
jmp
mov
cmp
jne
mov
mov
movl
movl
mov
movl
mov
mov
mov
mov
mov
mov
mov
movl
cmp
movl
jne
addl
mov
sbb
mov
xor
xor
mov
add
mov
movzwl
subl
not
sbbl
and
mov
movl
mov
jmp
andl
xorl
mov
notl
pushl
adcl
call
xorl
test
movl
je
jmp
movzwl
mov
cmp
jne
movl
mov
movl
movl
movl
jmp
movl
mov
movl
cmp
jne
sbb
mov
andl
mov
movl
xor
xorl
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
jmp
mov
cmp
jne
mov
movl
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
mov
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
andl
mov
sub
push
mov
add
push
call
incl
cmpl
jb
mov
mov
mov
mov
mov
movl
movl
mov
xor
add
mov
movl
movl
mov
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
lea
mov
je
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
call
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
and
movl
mov
orl
mov
adcl
add
sbbl
xor
movl
cmp
movl
jne
xorl
jmp
lods
inc
movsl
es
lods
inc
pop
push
cmpsb
mov
rcl
jle
fbstp
jle
pop
xor
cmp
js
xor
mov
xchg
imul
inc
jle
pop
sbb
rol
outsl
jl
int3
jbe
mov
loope
jne
sub
fidivrs
pop
cmc
inc
test
add
fbstp
pop
ljmp
or
scas
xchg
dec
mov
roll
dec
add
xchg
pusha
jmp
and
add
clc
xchg
inc
or
dec
pop
mov
leave
mov
sub
pop
dec
imul
jae
hlt
std
aam
insb
xchg
xor
std
xor
add
shrb
mov
gs
dec
icebp
popa
adc
sbb
test
sbb
mov
movsl
into
test
sti
mov
insb
push
sub
sbb
mov
out
xchg
and
popf
jmp
loope
cmpsb
jae
test
aaa
cld
inc
add
jmp
lret
and
and
adc
inc
mov
lods
and
ret
mov
xor
adc
scas
hlt
jmp
fwait
sarl
and
cmp
inc
mov
sub
jns
shlb
inc
iret
icebp
dec
aas
mov
jb
test
and
sbb
sahf
xor
mov
fwait
push
rolb
inc
stc
cmpsb
fimuls
outsl
out
mov
test
inc
cmp
sbb
outsb
stos
pop
mov
pop
push
mov
andb
sub
sbb
lea
in
ja
jne,pt
push
mov
rcrb
ret
add
mul
or
lock
imul
mov
incb
inc
cmp
mov
fcomps
bts
add
sub
mov
jl
inc
hlt
push
cmpsb
insl
mov
cmc
jo
add
xor
cltd
enter
jle
cmp
pop
ljmp
jns
in
hlt
pop
mov
inc
ss
or
dec
loop
pop
add
sahf
repz
pop
fisubrl
aas
out
shlb
sub
fcomi
push
mov
mov
shrl
hlt
mov
mov
aaa
aam
push
aam
or
stos
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
sub
add
and
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
jmp
mov
pop
outsb
adc
jnp
xor
aam
mov
jle
fbstp
jle
or
repnz
orb
inc
sti
aam
pop
and
inc
and
shlb
pop
push
dec
jge
pop
mov
ds
adc
fwait
mov
add
fstps
sarb
loope
enter
or
adc
xchg
inc
add
dec
stc
jne
cmpb
jne
jl
insl
notl
dec
inc
inc
or
mov
or
jnp
mov
divb
mov
xorb
cmp
cmp
cwtl
xchg
into
in
jns
enter
xchg
mov
or
xchg
pop
mov
cmp
fldl
neg
push
js
jnp
or
jns
test
stc
mov
lock
add
jmp
fmul
sbb
or
push
cli
sahf
rolb
hlt
lds
jl
inc
decb
stc
dec
flds
incl
int
sub
and
push
mov
lea
add
mov
je
mov
dec
sbb
jns
sbb
pop
pushf
aad
dec
xor
repnz
dec
das
xchg
mov
dec
mov
out
xchg
bound
in
mov
jb
clc
cmp
xlat
fidivs
addr16
xchg
test
cmp
cmp
sti
or
push
adc
loope
stos
mov
jae
std
divb
jle
push
jp
or
mov
out
inc
jo
fdivrs
out
or
xchg
test
push
clc
repnz
or
sbb
shr
xor
aad
push
ret
add
or
sbb
dec
es
movsl
jecxz
or
jne
push
push
js
fmuls
rorb
imull
fcmovnbe
cmp
js
pop
call
mov
lods
std
jp
push
sbb
mov
mov
ficomps
sbbb
lret
push
sbb
xor
daa
inc
decl
fdivrp
dec
jg
mov
jb
xchg
xorl
xor
fstps
stos
je
cld
fwait
jae
jge
sahf
int
arpl
sub
dec
xor
jb
add
ret
push
mov
push
inc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
sub
xor
movl
sbb
jmp
imul
jge
dec
jb
jmp
xchg
fsts
jg
jle
movsb
push
adc
pop
mov
movsl
inc
cmp
mov
pop
in
outsl
dec
sbb
push
rcr
mov
out
jns
cmp
xchg
mov
sub
add
mov
inc
ss
cmp
pop
sbb
pop
and
sbb
adc
push
scas
or
jae
ljmp
mov
mov
nop
mov
add
push
ss
sti
jle
icebp
pop
pop
dec
mov
fstp
insb
out
jge
cltd
hlt
inc
add
push
xor
jmp
ficompl
testl
sub
int3
cmp
jae
push
mov
sub
cmc
xor
push
push
pop
inc
addr16
xchg
call
sub
sub
fwait
jbe
push
das
in
push
mov
cltd
add
jbe
outsb
hlt
sub
ljmp
or
pusha
inc
mov
lods
js
dec
sbb
or
rcrl
in
inc
pop
sti
imul
fildl
jle
cld
ljmp
dec
cmpsl
icebp
out
mov
xor
jo
leave
and
std
xor
jge
mov
pushf
sbb
sbb
sub
mov
fs
es
out
psllq
jle
iret
rclb
aas
fs
xchg
popa
movsl
adc
sub
xor
mov
xchg
insb
pop
jg
cmp
cmpsb
fadds
icebp
sub
adc
pop
mov
addr16
cs
ja
shld
rol
jae
pop
add
mov
or
dec
dec
mov
inc
dec
adc
fadds
out
and
subl
sub
imul
fistl
add
int3
pop
sbb
sbbb
cld
xor
mov
push
or
mov
add
mov
xor
xorl
xor
dec
mov
add
addl
add
imul
mov
movl
cmp
movl
jne
mov
mov
jmp
fisubrl
cld
mov
adc
push
inc
nop
pop
jae
jle
pop
jg
jle
cmp
je
divl
jnp
or
sbb
mov
inc
iret
mov
out
jp
bound
arpl
lock
clc
push
jp
test
add
push
popa
fsts
cmp
pop
cmp
or
rcr
cmp
dec
orps
sbb
fildl
add
push
push
mov
cmc
leave
flds
mov
cld
adc
jno
ljmp
iret
jg
adc
in
jnp
mov
pushf
add
and
xlat
frstor
hlt
sti
sbb
rorl
xor
xlat
in
dec
jno
cs
push
out
jns
cmp
rcrl
xor
push
daa
aaa
push
push
fcmovne
jp
ja
inc
repz
or
orl
xchg
dec
ds
sbb
mov
sbb
mov
pop
bound
les
push
pop
cltd
jp
aam
out
mov
add
mov
push
stos
push
mov
outsb
test
sbb
test
into
adc
mov
jg
dec
sub
jb
adc
iret
scas
jo
cwtl
dec
jae
ret
and
cmp
pushf
scas
mov
push
or
movsb
xor
pop
xchg
test
pusha
mov
cmp
mov
stos
mov
cmpsl
mov
xchg
fwait
xchg
dec
mov
fwait
dec
push
lea
daa
pop
mov
mov
outsb
es
add
cmp
repnz
or
dec
lcall
xorl
sbbb
or
mov
and
or
add
lret
je
rcr
cmc
add
leave
jp
dec
lret
pop
xor
xor
add
jmp
pop
icebp
lds
fs
xchg
imul
repnz
out
jle
pop
jg
jle
cmp
inc
sarl
test
inc
gs
fstps
test
fcmovnb
in
shrl
push
xor
pop
sbb
mov
scas
rolb
les
sahf
sub
fistl
js
addb
mov
cmpsl
sbb
stc
enter
jo
lock
pop
hlt
sahf
std
lret
cmp
jbe
add
push
sarl
js
in
fstl
arpl
push
push
or
xchg
test
lock
or
and
mov
sub
cmp
push
push
imul
test
ds
mov
or
and
inc
bnd
adc
test
jns
xor
pop
hlt
dec
xor
inc
int
andl
or
or
mov
out
clc
pop
pop
cmp
mov
xor
idivb
mov
pusha
pop
fcompl
and
inc
shlb
inc
inc
jnp
jne
insl
sub
aam
dec
push
cltd
mov
nop
and
fidivrs
or
and
loopne
xchg
cs
adcl
fwait
out
jle
mov
shrb
and
fwait
std
add
push
mov
out
faddp
jae
inc
pop
das
jns
xchg
in
roll
imul
repnz
ud2
in
push
aaa
jle
mov
push
subl
and
std
in
std
popa
outsl
sbb
lea
aaa
repz
mov
jae
push
dec
mov
sub
pop
push
sbb
adc
push
inc
or
test
add
imul
mov
or
fwait
mov
icebp
imul
jmp
mov
mov
mov
mov
mov
jmp
aad
outsl
mov
std
jge
outsl
stos
lock
pop
jle
loopne
jle
jg
jle
push
push
imul
enter
push
push
jae
jle
nop
shlb
pop
mov
mov
iret
jmp
cs
cmpsb
test
enter
push
lods
or
jb
sti
xchg
andl
xchg
dec
cld
jno
mov
leave
out
lods
sub
mov
ja
and
mov
sub
test
mov
les
repz
jmp
sub
jecxz
outsl
fisttps
cltd
push
fisubrs
jmp
roll
cmp
xchg
rcrl
daa
inc
jb
outsl
inc
dec
or
jbe
test
and
cmp
lcall
mov
fsubr
push
test
mov
adc
dec
pop
inc
int3
xchg
push
dec
ds
imul
add
adc
test
inc
lea
cmp
push
mov
das
push
add
xchg
out
inc
cld
popf
imul
idivl
leave
imul
rorl
adc
out
xchg
ret
stos
fisubs
repnz
jl
dec
loop
dec
ja
adc
lret
shrb
loop
adc
dec
adc
mov
cmp
scas
and
in
jmp
push
daa
jmp
lds
cmpsb
into
hlt
insb
xor
xchg
es
mov
out
loop
roll
xchg
out
les
mov
addr16
stc
int
sub
popa
cmpsl
sub
in
or
inc
sub
gs
mov
stos
mov
push
sub
ja
mov
xchg
xchg
lods
sub
call
mov
push
dec
ljmp
dec
in
out
int3
aas
movsb
ss
je
dec
push
sbb
or
mov
cwtl
into
lea
repnz
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
jmp
faddl
insl
jns
pop
xchg
xor
sbb
dec
popf
loop
jle
jg
jle
stos
jmp
lock
out
in
sub
adc
adc
pop
jne
lret
ss
jge
lcall
orl
mov
inc
cmpsb
mov
pop
adc
xor
xchg
ja
test
fldt
dec
adc
dec
lods
out
or
or
fildll
addr16
dec
nop
push
cli
mov
ja
sti
xor
cmp
or
inc
push
cli
out
adc
xchg
push
dec
sbb
cmpsb
insl
outsb
sbb
mov
das
inc
inc
test
femms
or
out
xchg
dec
lret
mov
enter
popa
mov
push
add
dec
push
lods
mov
lock
push
aas
sbb
scas
out
rcr
and
vpsraw
push
mov
rol
inc
inc
push
push
fiaddl
fwait
aad
scas
scas
movsb
dec
add
sub
dec
pop
mov
add
xor
rol
fidivrs
pop
push
jns
sahf
or
mov
mov
dec
pop
mov
dec
ljmp
imul
cmc
dec
in
rclb
outsl
loop
xor
out
or
iret
js
mov
lcall
out
lahf
enter
repnz
or
mov
xor
xor
mov
cmp
sbb
inc
adc
hlt
xchg
inc
shll
mov
lds
xchg
sub
push
cmc
shll
std
mov
mov
call
not
adc
inc
add
in
movsb
and
call
sub
cmp
push
adc
les
adc
cmp
arpl
lock
push
cmp
lods
pop
std
sti
mov
fisttpll
sbb
sahf
pop
in
cmp
fmulp
xchg
mov
pop
leave
ret
push
mov
sub
mov
mov
sub
imul
jmp
adc
inc
and
scas
xchg
aas
icebp
sti
in
jle
jg
jle
insb
cmp
std
pop
popf
aaa
mov
and
jnp
jl
jecxz
cwtl
ret
lds
stc
lock
push
or
add
sbb
jns
mov
mov
dec
fxrstor
loope
pop
xorb
mov
xchg
cld
mov
sbbl
and
dec
xchg
lods
or
out
stc
hlt
shll
adc
loope
adc
jb
push
push
mov
push
iret
jns
fnstenv
sbb
adc
and
mov
inc
dec
dec
pop
xor
aaa
adc
dec
push
jb
push
jl
sub
push
es
dec
loopne
mov
movsl
outsb
mov
xchg
cmpsb
xchg
mov
rorb
xor
incb
in
xor
movsl
xchg
mov
pop
add
std
xor
stos
lods
rcrl
ret
shlb
into
cs
stc
pushl
pop
rcl
adc
mov
icebp
cmp
sahf
lods
icebp
mov
out
jb
inc
xchg
insb
mov
adc
addl
test
pop
rorl
cld
sub
outsl
xchg
std
ret
icebp
sbbl
fmull
jo
dec
or
mov
divb
sub
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
movl
or
mov
push
add
mov
mov
sbb
xor
mov
sub
mov
xorl
add
xorl
mov
mov
xorl
push
subl
push
andl
test
movl
je
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
and
mov
mov
movzbl
xor
imul
or
mov
xor
add
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
dec
mov
xchg
sub
xor
jmp
mov
add
aad
jl
mov
cmp
in
jle
jg
jle
inc
mov
or
jnp
ficomps
cmp
lahf
je
and
call
test
xor
bound
inc
push
push
test
mov
push
mov
push
jnp
add
push
and
mov
jg
repz
cmpxchg
or
push
mov
mov
sub
bound
xchg
pop
jns
dec
or
pushf
cmp
movsb
je
sub
int
xchg
imul
add
pop
cltd
xchg
and
mov
cmc
mov
pop
xor
out
in
pop
mov
mov
lret
fsubl
inc
mov
fs
lock
or
pop
mov
cwtl
sbb
test
cli
adc
mov
xchg
daa
sub
xchg
popa
in
shll
aaa
addl
enter
test
ljmp
test
lods
mov
test
scas
mov
pop
dec
iret
sahf
xchg
jae
sub
mov
push
lock
out
add
stc
mov
push
fisubs
aas
xchg
cltd
lods
insl
cli
mov
and
mov
or
jmp
gs
xor
pop
xchg
lods
mov
or
jle
aas
jg
jle
or
xor
mov
repnz
fcmovnb
arpl
mov
out
push
fisttpl
or
and
push
push
sbb
lock
inc
jne
lods
icebp
sbb
xor
mov
sbb
jmp
lock
xor
mov
loopne
hlt
sbb
pop
stos
insl
dec
inc
push
mov
sbbl
repnz
std
lahf
cmp
mov
int3
pop
sbb
jle
outsb
nop
into
xor
lods
xor
jp
sbb
xchg
mov
addr16
es
bound
vaddsd
jo
rdrand
fildll
lock
push
out
icebp
push
cmp
shr
push
lods
xor
inc
xor
mov
ljmp
imul
mov
mov
pop
popf
sbb
jmp
mov
add
insl
sbb
sbb
shlb
and
mov
popa
or
pop
int
out
das
sub
xchg
xor
mov
push
adc
sbb
nop
stc
js
cwtl
test
int3
mov
mov
push
fists
imul
fcmove
xchg
vmovmskps
fistl
or
mov
xor
mov
negl
xor
sbbl
xor
add
mov
mov
mov
je
xor
mov
xor
xorl
jmp
mov
inc
aam
push
mov
and
scas
insl
ds
jle
aas
jg
jle
sub
ss
and
mov
jl
cmp
lods
pop
stc
mov
push
and
out
dec
loopne
movsl
mov
cli
xor
cmp
and
fsubs
sub
add
inc
lret
ja
aaa
cmp
cli
mov
xchg
hlt
mov
sub
mov
xchg
rclb
push
jle
lods
es
repz
bound
cmc
imul
xlat
test
cld
pop
fcompl
pusha
mov
xor
in
jno
rcrb
stos
sbb
jge
xchg
jne
mov
and
jno
test
push
or
xlat
clc
scas
dec
sbbl
cld
stos
pop
testb
add
test
addb
arpl
call
lret
fsubl
rcl
mov
xchg
adc
mov
mov
adc
in
lret
ret
fadds
lds
rcrl
xor
mov
push
cmpsb
ffree
add
imul
inc
xor
cmp
mov
js
inc
sbb
addl
movl
cmp
movl
jne
orl
pushl
call
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
call
cmpl
jb
mov
xor
mov
addl
xor
jmp
jns
mov
pop
insl
jns
lods
iret
loopne
daa
sarb
stc
jle
aas
jg
jle
leave
jle
movsl
push
and
jge
arpl
mov
ret
adc
push
mov
out
into
lcall
sub
lods
fnstcw
xchg
push
push
int3
jmp
jmp
xchg
ss
sbb
hlt
jge
lret
adc
xchg
lcall
xchg
lea
clc
inc
in
cmpsb
push
fildl
sbb
data16
pop
dec
lock
mov
imul
cmpb
ss
les
ret
test
lahf
loop
jne
adc
cmpl
xchg
enter
mov
or
pop
mov
mov
pop
fiaddl
pushf
sbb
int3
shlb
cmpb
push
cmc
add
jne
hlt
jo
dec
xlat
cli
cmp
rcll
aam
pop
and
stos
pusha
addr16
add
addb
cmp
inc
pusha
and
clc
sbb
sub
les
pop
jp
js
xor
xchg
push
cmp
xchg
outsb
test
orb
pop
bound
sar
mov
in
aas
or
movsb
outsb
clc
push
movl
je
sbbl
pushl
andl
pushl
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xorl
mov
add
mov
xor
orl
add
cmp
movl
je
add
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
sub
mov
jmp
fldl
xor
cmp
xchg
vmwrite
aas
jg
jle
xchg
lcall
movsl
test
sbb
mov
mov
mov
dec
lods
je
popf
addb
insl
imul
enter
fs
fcoml
fists
xor
shll
mov
dec
lods
mov
cli
dec
stc
popa
movsl
mov
sub
mov
jle
hlt
sbb
sarl
out
sahf
loope
inc
xchg
in
lock
out
and
idivl
nop
xchg
rorl
popa
jmp
mul
in
push
pop
dec
loopne
ss
push
lock
pop
jmp
loop
cld
dec
lods
or
movsl
cmc
sarl
outsb
pop
sahf
les
xlat
repnz
das
adc
jmp
scas
aad
rcrb
insl
out
test
sahf
scas
sub
nop
stos
orl
lds
nop
jne
inc
cmp
dec
imul
mov
pop
insb
movsb
loopne
and
fstl
pop
xor
xchg
test
dec
xor
icebp
int3
inc
pop
or
xchg
stc
lret
xchg
mov
mov
sbbl
jmp
fmull
cld
popf
mov
scas
add
mov
jle
jg
jle
movsb
loope
jl
dec
cmpsl
mov
adc
loopne
mov
jmp
lret
movsl
xor
mov
sub
mov
xlat
sbb
cmpb
and
cmc
mov
push
sahf
test
sbb
mov
or
inc
call
or
loop
or
fs
mov
cs
filds
xor
in
or
in
mov
mov
sahf
fs
add
pushf
iret
pop
test
test
add
or
fstpl
jae
jae
mov
lret
or
arpl
shl
dec
sub
sbb
xchg
frstor
fiadds
push
mov
je
loope
js
cmp
ljmp
jl
std
das
ljmp
jne
dec
enter
loopne
out
filds
out
sbb
or
push
frstor
push
es
and
dec
lret
xchg
iret
cmp
das
test
lods
out
mov
push
lret
xchg
into
int
xchg
mov
sub
dec
inc
xor
mov
out
xchg
arpl
dec
and
or
mov
mov
mov
orl
mov
add
mov
xor
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
pushl
push
call
cmpl
jb
mov
mov
add
xor
jmp
xchg
leave
popa
jge
jge
fldenv
test
lods
stos
push
aas
jg
jle
test
inc
repnz
xchg
js
fistpll
push
das
mov
stos
fists
push
inc
mov
test
repz
fwait
or
scas
pop
inc
mov
ljmp
iret
fwait
xor
dec
loopne
in
rolb
push
and
or
mov
and
in
fs
jnp
test
mov
int
mov
cmp
jae
rcll
mov
push
shlb
in
cli
call
insl
dec
mov
inc
push
int3
ja
aam
xor
xchg
adc
mov
xchg
xchg
dec
scas
cmpl
inc
cld
cmp
call
and
dec
pop
xor
ret
jecxz
mov
cmp
jg
cwtl
inc
out
movsl
ss
dec
mov
xchg
movsl
pop
push
jp
mov
idiv
pop
cmp
xor
sub
xor
jmp
mov
in
dec
push
jge
test
aad
pop
popf
and
int
dec
sub
add
or
cmpsl
xchg
pop
add
inc
mov
lret
outsb
mov
in
mov
mov
add
jmp
lea
pop
imul
jle
aas
jg
jle
xchg
push
xchg
xchg
ret
mov
aam
xchg
mov
stc
jecxz
jle
mov
ja
push
rcr
add
mov
mov
push
dec
rclb
stos
repnz
sbb
and
mov
mov
xor
jl
push
mov
mov
mov
mov
mov
jp
pop
xlat
test
imul
jb
mov
inc
lock
push
insb
js
cmc
sub
mov
sbb
and
push
pusha
pop
dec
imul
insl
bound
mov
lock
cmp
or
or
inc
stc
cmpsl
lahf
std
cmpsb
cmc
jae
popa
rorl
lock
aas
fnstenv
inc
and
ret
fucomi
cmp
jp
popa
pop
addr16
xchg
xchg
and
iret
inc
mov
inc
enter
mov
xchg
pop
or
fnstenv
mov
clc
aad
jae
mov
xchg
popf
data16
and
pop
fdiv
sbb
and
mov
or
gs
int
add
jmp
and
and
sti
out
call
jle
aas
jg
jle
jno
xchg
or
jns
scas
or
mov
mov
xchg
bound
cmp
mov
clc
mov
or
popa
adc
xchg
xor
cmp
shlb
jmp
rcr
dec
xchg
loop
or
xchg
jg
and
and
pop
in
push
cmp
shll
repnz
or
imul
mov
gs
into
test
xor
cmc
dec
movl
outsl
mov
cld
pushf
aas
fsubrl
aaa
imul
xchg
cmc
xchg
mov
add
mov
daa
xchg
enter
test
dec
pop
clc
ljmp
js
push
or
mov
xor
jmp
lock
mov
mov
mov
push
call
lock
mov
mov
xor
into
dec
jne
fidivl
lock
mov
stc
adc
pop
sbb
sub
add
cld
xor
inc
js
mov
push
add
jg
or
dec
push
or
adc
rep
orl
dec
rclb
jne
pushl
call
mov
jmp
push
sahf
sbb
fdivrl
or
cmp
jne
jle
aas
jg
jle
push
push
je
mov
push
andb
add
test
mov
add
fnsave
sbb
pop
push
outsb
and
xor
je
cwtl
jnp
stos
dec
pop
mov
pop
aam
jle
xlat
mov
ja
sub
mov
xchg
aad
adc
aam
push
imul
addl
popa
sub
pusha
xchg
mov
pop
mov
negb
push
scas
fistpl
ds
cmpsb
aad
xchg
fyl2x
cmc
pop
sbb
jecxz
add
sysret
ret
lds
push
jo
mov
pusha
mov
pop
xchg
jl
mov
enter
test
loope
fisttpl
jecxz
fsubrp
add
call
push
cmp
mov
clc
aam
int
sbb
fdivs
sbb
mov
mov
addr16
pop
mov
aas
dec
popf
xchg
sbb
inc
inc
ss
pop
mov
scas
inc
add
mov
push
mov
xchg
insb
mov
arpl
rcrb
dec
rorb
aam
inc
imul
lcall
gs
mov
and
adc
out
jne
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
jmp
pop
mov
jl
xchg
movsb
xor
jle
aas
jg
jle
test
int3
pop
je
lret
ret
insl
pop
mov
ljmp
cwtl
cmc
addb
jge
mov
adc
aam
cmc
pop
test
out
mov
call
mov
mov
sti
cmpsl
out
fidivrs
cli
pop
fdivrs
adc
scas
testl
decl
and
in
xchg
push
dec
test
pop
ret
mulb
xchg
decb
fcmovnbe
cld
fstl
sbb
adc
mov
in
out
mov
std
gs
or
adc
stos
add
sub
bound
out
cmp
mov
jmp
sub
xor
out
ret
pop
cld
int
dec
xchg
pop
sahf
mov
sub
into
repnz
mov
inc
adc
popf
sbb
or
jbe
sub
adc
push
mov
sub
pusha
mov
call
mov
cwtl
cmp
sbb
mov
jp
je
fisubs
bnd
sbb
pop
jnp
xchg
cli
xor
mov
jecxz
icebp
dec
add
adcb
shrl
pop
sti
jge
push
or
sti
mov
add
mov
mov
test
je
mov
push
pop
push
jmp
stos
xchg
fwait
adc
hlt
lcall
jle
aas
jg
jle
scas
lock
lret
ja
pop
int3
les
push
inc
add
cmp
xlat
push
mov
or
pop
push
jecxz
iret
mov
mov
ljmp
cmp
cmp
out
clc
je
aas
leave
inc
pop
lea
pushl
sbb
cmp
fcomps
sbb
fcomp
mov
femms
push
inc
adc
xor
or
xor
stos
movsl
mov
push
jmp
mov
mov
or
push
sbb
ljmp
mov
data16
xor
es
stc
mov
add
pop
push
inc
mov
or
lahf
enter
stc
add
mov
dec
add
pop
sbbl
pop
fstps
and
sbb
push
xchg
fdivl
pushf
movsb
aas
adc
adcl
mov
push
fstps
je
ficomps
and
popf
test
aas
xor
or
jnp
mov
idivb
test
adc
nop
cmp
data16
lods
pop
lods
inc
enter
cmpb
pop
dec
mov
add
add
xchg
inc
sbb
lods
lret
movsl
sub
inc
dec
hlt
jle
aas
jg
jle
out
les
stos
push
popa
inc
stos
jg
mov
jno
pop
js
dec
dec
les
pop
and
adc
cmp
addb
divb
push
pusha
pop
int3
jmp
orl
stos
sub
mov
jbe
adc
jbe
xchg
aas
mov
data16
insl
mov
iret
push
hlt
pop
outsb
lds
negl
rcrl
sub
cltd
mov
inc
mov
fidivrs
jle
setnp
add
inc
lods
orb
dec
ror
jle
leave
xor
je
dec
arpl
lea
xor
pop
cld
add
popl
push
outsb
cmp
inc
adc
addr16
push
push
popa
sbb
fucomip
out
push
xchg
mov
mov
cmp
pop
loop
rcrb
and
repz
loope
iret
aam
add
and
test
or
cmpsl
mov
dec
pop
and
adc
cltd
xor
mov
add
pop
mov
cmp
cmp
stc
lods
dec
xlat
loopne
cmp
inc
xchg
fisubrl
jg
stc
and
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
jmp
jp
rcr
std
jnp
mov
jl
lds
sbb
idivb
aas
jg
jle
adc
push
xchg
fildll
dec
jle
in
aas
movsl
add
sbb
pusha
push
jno
outsb
or
les
ret
insb
shlb
mov
std
inc
jo,pt
jmp
push
cmc
cmp
nop
jmp
lret
jp
arpl
push
lods
cmp
stos
xor
push
cltd
and
in
aaa
aam
inc
aad
and
jg
xchg
mov
nop
lods
add
dec
mov
mov
lret
sbb
or
or
stos
data16
push
push
sar
and
push
pop
negl
clc
nop
mov
sub
lret
or
stos
inc
mov
dec
xchg
dec
mov
mov
push
jne
mov
pushf
dec
in
jle
scas
mov
jle
sub
xor
adc
lret
pop
jne
lcall
icebp
pushf
aas
subl
and
fnstcw
jp
mov
data16
mov
ret
inc
xchg
and
mov
jmp
aad
cmp
inc
xchg
pop
mov
int3
sbb
inc
clc
rcll
push
pop
or
push
or
jmp
test
test
jge
cmp
arpl
mov
aas
jg
jle
call
jae
cmc
jle
and
add
dec
repz
sbb
dec
inc
xchg
or
cld
fcmovnb
cmc
les
movsb
les
inc
pop
mulb
xchg
mov
mov
std
in
and
xor
fxch
jg
push
out
lock
les
xor
loopne
jmp
nop
out
cmpsb
adc
shr
sub
mov
sbb
loope
and
add
pop
sub
pop
out
les
dec
adc
daa
shrl
nop
mov
mov
dec
jmp
stos
cmp
add
mov
stc
mov
xor
sub
xlat
inc
sahf
jns
leave
mov
in
jno
in
mov
and
jg
lahf
sub
aam
dec
sbb
jae
inc
movsb
xchg
das
loopne
sahf
add
lock
decb
mov
jg
jae
cmp
mov
adc
cmp
out
cmp
jecxz
xchg
std
imul
rcl
jle
pop
mov
shll
cmp
sbb
xchg
mov
inc
add
mov
imul
enter
into
add
sarl
ret
add
add
jge
out
mov
push
jae
mov
aas
jg
jle
mov
adc
xchg
daa
push
sbb
jo
test
cwtl
cmp
sbb
or
xor
pop
push
xchg
mov
xor
and
inc
dec
pop
mov
stc
mov
lods
fwait
mov
push
xchg
int3
inc
pop
cmp
mov
adc
inc
les
leave
jns
rorl
popf
aam
mulb
mov
push
xor
mov
sbb
mov
repz
push
sub
add
add
fidivl
add
int
xor
add
das
push
lods
mov
push
daa
xor
icebp
pop
push
insl
mov
lahf
call
mov
ljmp
lret
xor
fcmovnu
rcll
cltd
push
mov
cmpl
xor
notb
repz
or
mov
in
xchg
loopne
xchg
adc
and
test
lcall
imul
nop
stos
dec
inc
cmp
lret
lods
xchg
or
sqrtps
push
push
repnz
jl
sbb
jg
or
adc
lods
mov
and
out
push
arpl
inc
in
adc
mov
jbe
adc
dec
ret
xlat
dec
sub
rorl
call
mov
imul
mov
jmp
inc
sbb
gs
jae
lods
xor
jle
jg
jle
jns
jge
gs
pop
daa
xchg
stos
adc
jl
mov
cltd
fnstcw
xor
lahf
add
mov
sbb
pop
jp
mov
push
fdivl
jp
pop
fcomps
aaa
insb
mov
pop
sub
incb
pop
mov
mov
cld
lods
pusha
pop
pushf
fmulp
movsb
pushf
cmc
fbld
inc
pusha
xchg
jae
dec
dec
push
pop
mov
jnp
xor
pusha
jo
lret
sub
inc
jle
ret
lds
arpl
pop
adc
sub
ret
fxch
push
sub
adc
lret
mov
ret
fwait
ljmp
stos
hlt
inc
aas
adc
jns
hlt
xor
cmp
sub
dec
adc
xor
sbb
or
scas
mov
mov
scas
jmp
xchg
cwtl
mov
inc
add
mov
int
enter
xchg
pushf
fdivrl
arpl
xor
ljmp
push
lods
lea
addr16
add
xchg
in
test
xor
sahf
jp
stos
cld
xchg
fstpt
and
cmp
jecxz
push
lds
jae
es
or
stos
mov
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
jmp
jno
cmp
jge
in
pop
xor
orb
jle
aas
jg
jle
imul
sbb
pop
mov
aam
xor
pop
jno
add
gs
lock
and
hlt
ret
mov
inc
in
je
xchg
lods
sbb
notl
inc
adcb
fistl
fs
mov
mov
out
mov
add
dec
das
dec
mov
or
std
std
dec
adc
jecxz
push
aas
and
or
jmp
pop
test
icebp
aad
subb
adc
push
xlat
cli
pop
jns
add
sar
sahf
inc
adc
clc
rclb
mov
mov
cmpsl
jne
lahf
scas
jge
cmp
sub
adc
jb
cmpsl
subb
orl
test
mov
mov
in
mov
mov
loop
cmp
dec
sub
mov
pop
jecxz
daa
mov
inc
mov
mov
jbe
movsl
lods
lds
or
jge
arpl
test
jecxz
mov
stos
pop
ljmp
arpl
dec
orl
out
leave
mov
cld
or
inc
mov
add
cmp
in
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
jmp
cs
jecxz
jnp
aad
lock
and
fcmovne
mov
aas
jg
jle
fst
shrb
icebp
mov
pop
and
push
push
lret
cmp
addr16
nop
xchg
test
fists
outsb
sbb
xor
call
add
mov
idivb
cs
jb
inc
das
loopne
jns
pushf
xchg
lea
mov
nop
scas
cmpsb
sub
mov
add
and
add
push
stc
xchg
loope
adc
push
fldl2e
iret
ljmp
popf
mov
mov
rcrb
neg
loop
out
out
pop
push
pop
cmp
xchg
inc
ret
dec
mov
mov
mov
test
sbb
test
sub
adc
lahf
add
cmpsb
addr16
push
mov
jns
xchg
ret
jae
add
pop
adcl
dec
aas
push
int3
lahf
jp
mov
push
cld
dec
in
lahf
lret
push
cmp
mov
xchg
fistpll
out
lret
or
push
jae
sbb
fwait
push
lock
nop
aad
ss
or
fadd
add
xchg
cmpsb
pop
dec
sbb
jbe
addr16
or
pop
cmp
and
mov
xor
add
imul
jmp
into
jb
pop
inc
pop
fisttpll
mov
cmp
jg
jle
stos
loopne
xchg
pop
out
loopne
mov
add
std
add
mov
xlat
push
sub
out
nop
xchg
icebp
rorb
es
sbb
pop
adc
enter
push
ficoml
imul
mov
and
xchg
loop
nop
push
adc
test
mov
pushf
sub
addps
and
inc
fmulp
std
rclb
leave
add
ret
mov
inc
jp
dec
cmp
ds
es
jno
jns
mov
call
sbb
out
lock
nop
mov
sti
or
popa
repnz
mov
test
sbb
push
dec
inc
jo
sub
or
cwtl
jecxz
hlt
mov
jl
lds
mov
test
adc
xchg
mov
out
daa
jl
movb
adc
int3
std
stc
test
adc
xchg
pop
sahf
xchg
xor
pop
mov
es
or
das
rorl
push
add
pop
inc
outsl
cmp
nop
cmc
add
sub
xchg
xchg
adc
fs
setno
or
arpl
xorb
repnz
insb
pop
and
add
pop
xchg
xlat
lods
mov
xchg
nop
adc
mov
cld
jmp
out
cmp
jp
sti
inc
aaa
mov
popf
mov
mov
aas
jg
jle
mov
cmpsb
pop
lea
roll
je
mov
sbb
setno
jl
sub
push
mov
mov
call
int3
mov
mov
call
scas
cmovg
xchg
leave
inc
addr16
inc
clc
orb
out
dec
sub
movsb
cmp
stos
fs
mul
jp
arpl
xchg
idivl
push
and
int
mov
imul
test
stc
addr16
int3
inc
outsb
cmp
mov
das
jl
int3
cltd
aas
stos
push
or
mov
inc
jae
shlb
cmpl
lock
inc
push
pop
add
inc
popa
fbld
int
xorl
cmpsl
sub
jecxz
ret
sub
js
mov
sbbl
jbe
xor
test
pop
int
jge
adc
lock
pop
xchg
xchg
sub
adc
psubsw
mov
cs
xchg
imulb
js
xor
mov
stos
test
rcrb
jns
cld
or
ljmp
cld
pop
mov
inc
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
jmp
xchg
pop
mov
cmp
dec
ljmp
aas
jg
jle
cltd
lods
mov
rorl
mov
xchg
cmpsl
dec
fldl
jp
push
push
rcr
xor
add
inc
outsl
mov
xor
in
sub
popf
ds
repz
jl
and
loopne
jg
test
jge
std
fs
dec
cwtl
add
icebp
repz
push
inc
js
loop
or
push
adc
insl
sarb
cmpl
outsl
insb
xchg
out
negb
xchg
cwtl
faddp
cmp
pop
out
movsb
sub
add
jge
movsb
fisubrl
fsts
daa
shlb
popf
mov
les
add
loope
enter
sub
pop
add
mov
sub
imul
lahf
scas
mov
cmc
add
ja
fmul
pop
sti
loope
adc
addr16
lcall
mov
and
mov
cld
leave
fldenv
mov
popa
mov
mov
xchg
jb
cmpsl
push
cwtl
fisttpl
aaa
aas
int
bound
addl
pop
sub
rcl
shl
mov
sub
and
aaa
push
lret
mov
cmp
adc
pop
xchg
aam
xchg
sti
movsl
loope
shlb
and
std
leave
sahf
xlat
call
xor
jmp
mulb
jne
lds
mov
cmpl
mov
movsb
repnz
lods
test
es
cltd
aad
or
cmp
or
gs
pop
add
inc
je
xchg
scas
xchg
cmp
icebp
ret
fnstenv
mov
ret
xlat
jge
sub
mov
or
ficompl
jno
ret
mov
inc
xchg
fs
imul
dec
bound
mov
or
pop
add
xor
xchg
cld
mov
mov
test
psadbw
in
mov
vpperm
mov
scas
fldcw
and
mov
inc
lret
adc
repz
iret
add
push
dec
ror
xlat
addr16
cwtd
lea
push
inc
cmp
repnz
in
int
jle
dec
mov
xor
in
pop
sub
fnstenv
or
daa
xchg
xchg
data16
pop
xchg
push
test
mov
mov
repnz
mov
out
pop
rclb
jecxz
and
xchg
mov
add
fwait
into
inc
jmp
jae
aas
mov
cmp
sub
cmpb
jg
jle
mov
das
loop
pop
into
mov
in
arpl
mov
movsb
test
into
cmpsb
mov
sbb
adc
dec
cltd
jbe
xchg
sarb
ja
xor
popa
push
mov
jbe
aad
sar
orb
fidivs
sbb
adc
out
or
enter
sahf
jl
cmp
aam
js
xor
js
sahf
mov
and
arpl
cmp
push
ljmp
pop
dec
mov
cmp
fsubs
push
stos
adcb
pop
popf
inc
ja
outsl
outsb
out
mov
nop
lahf
stc
sarb
push
push
mov
add
sbb
add
aad
hlt
pop
dec
lea
inc
jne
jb
or
sar
in
sbb
lock
mov
mov
sbb
lods
mov
fisttpl
cltd
iret
lcall
inc
cld
aaa
imul
push
push
imul
loopne
mov
dec
dec
nop
inc
mov
xor
ljmp
lret
mov
mov
arpl
movsl
sub
pop
mov
cmp
xor
xlat
clc
cmpsl
jno
adc
dec
mov
outsl
int
pop
adc
test
add
add
pop
add
add
cmp
mov
movsb
out
jle
inc
cmpl
jg
jle
ret
je
add
sbb
xor
add
sub
sbb
cmp
pop
inc
adc
sub
sbb
stc
xchg
inc
jnp
mov
ja
imul
iret
addr16
sbb
and
pop
fcompl
out
test
scas
es
pop
in
inc
mov
imul
xchg
xor
sbb
pop
ficoml
mov
lea
cmp
test
jo
cmp
imul
loop
sbb
sahf
lods
das
repnz
movsl
push
leave
shll
out
jle
sti
enter
stos
in
or
and
add
stos
jne
popf
pushf
sub
arpl
jbe
gs
subl
xor
add
ficoms
into
push
int3
fs
pop
ret
push
adc
jecxz
scas
mov
sub
rorl
in
jbe
dec
push
loop
cmp
pop
aam
pop
leave
mov
adc
and
repnz
xchg
sahf
push
sahf
dec
insl
and
in
rclb
mov
or
cmp
mov
xchg
cmpl
add
add
sti
lret
jns
rclb
hlt
daa
add
jg
jle
push
ljmp
cmp
xchg
xchg
pop
jl
sbb
mov
outsl
out
imul
add
decl
aas
popf
xor
sbb
pop
inc
sbb
cmp
into
test
data16
ret
xor
mov
xchg
fisttps
push
xlat
stos
mov
rcrb
sarb
adc
mov
in
push
xor
xchg
pop
clc
hlt
dec
mov
and
in
dec
test
imul
add
and
lret
faddl
outsl
fcomps
pop
xor
jns
ds
imul
fs
cmp
inc
enter
arpl
imul
jne
test
inc
inc
mov
loope
test
sub
or
inc
sbb
subl
sbb
sub
test
sub
shrl
pop
aas
test
sub
mov
repz
test
enter
repnz
in
xchg
aaa
mov
int
or
pop
xchg
pop
mov
iret
pop
cmp
dec
sbb
sbb
cmp
push
pop
push
pop
inc
xchg
jmp
ss
or
mov
jmp
cmp
xchg
aas
jg
jle
fsts
mov
mov
loopne
and
imul
cltd
sub
pop
dec
sub
or
notl
hlt
pop
push
or
xchg
cld
jae
or
push
jmp
add
or
pop
mov
push
icebp
xor
push
fisttpll
lret
mov
jl
bound
mov
pop
scas
test
imul
sbb
aaa
pushf
dec
aam
pushl
jge
jecxz
dec
and
fidivrl
pop
or
ret
mov
jmp
and
pop
in
jl
loop
push
mov
add
stos
int
jp
mov
das
push
mov
or
mov
push
loopne
clc
cmc
sahf
lods
out
repz
rorl
mov
nop
ljmp
or
pushw
add
sbbb
mov
jmp
push
mov
outsb
stos
lahf
js
mov
fs
mov
fs
or
adc
fwait
jnp
sbb
xchg
das
fs
aaa
pop
fmul
dec
and
pop
mov
data16
insb
cs
aaa
fists
iret
or
adc
in
or
dec
push
mov
fsub
push
dec
out
push
sub
flds
in
scas
roll
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
jmp
mov
pop
pop
in
pop
shll
xchg
aas
jg
jle
popf
enter
adc
add
push
mov
testl
int3
xchg
loope
dec
cmp
test
loope
in
sti
jmp
xchg
and
out
js
sbb
jo
pop
cmp
ret
in
orl
call
adc
test
or
sbb
arpl
out
lods
lahf
cmc
pusha
or
mov
dec
or
xor
push
mov
mov
dec
mov
roll
imul
stos
in
push
push
lods
aam
jb
mov
cmp
add
jo
jmp
test
adc
into
mov
loop
jecxz
addl
data16
jae
sub
std
push
push
imul
and
add
ret
add
cmc
movsl
sbb
sub
push
stc
pop
ret
aad
sbb
pushf
jmp
xor
aas
add
pusha
stc
lret
cwtl
jns
lea
xchg
cltd
lods
scas
mov
bound
mov
cltd
inc
jnp
mov
movsb
imul
fimuls
pop
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
hlt
clc
lret
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
rorl
test
inc
aas
inc
lea
pushl
mov
mov
loopne
ljmp
mov
add
incl
xlat
lea
inc
ljmp
incl
aaa
add
repnz
ffreep
aas
add
mov
incl
or
mov
xchg
roll
mov
cmp
dec
lds
add
adcb
add
add
mov
cld
push
decl
push
mov
call
mov
add
test
ljmp
mov
fcom
add
mov
add
add
add
add
push
inc
push
fisttps
test
add
jecxz
roll
inc
jle
test
jmp
incl
loope
jne
mov
cld
incl
mov
mov
add
call
int3
mov
add
add
xor
mov
cld
jle
push
add
add
inc
inc
mov
decl
add
inc
lret
cld
push
mov
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
pusha
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
popf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
or
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
adc
adcb
or
inc
lret
inc
iret
jb
mov
enter
xor
mov
pushf
lea
add
inc
mov
xor
add
mov
fmuls
xor
mov
aad
pushf
xor
mov
clc
enter
mov
test
clc
incl
mov
test
cmp
pushf
inc
mov
popf
push
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
rdtsc
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
popf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
popf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
sysexit
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
popf
shll
lret
or
add
in
push
mov
arpl
int
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
popf
lret
cmp
call
inc
inc
mov
mov
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
arpl
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
test
clc
inc
inc
mov
sub
mov
dec
arpl
inc
add
dec
arpl
inc
add
inc
add
movsl
pushf
inc
dec
lea
push
xor
pop
lods
incl
mov
rcrb
test
inc
inc
add
pushf
orb
xor
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
rdtsc
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
popf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
sysexit
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
popf
shll
lret
or
add
in
push
mov
arpl
int
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
clc
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
popf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
loope
inc
call
inc
mov
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
sub
test
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
rolb
jne
cmp
pop
mov
push
inc
lea
inc
inc
rorl
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
in
push
push
incl
mov
loope
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
ret
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
in
in
sub
inc
in
push
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
loope
inc
stc
xlat
ss
aas
in
ret
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shr
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
insb
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
add
sub
aad
inc
add
add
xlat
insb
inc
inc
and
dec
add
inc
fnstcw
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
les
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
or
movsl
fiadds
jae
or
loope
inc
xor
pop
inc
shr
inc
and
inc
add
add
out
clc
inc
ret
inc
mov
leave
sub
add
add
sbb
stc
test
lea
mov
dec
int3
mov
movb
dec
ljmp
or
jge
shl
xor
add
rdpmc
sbb
mov
in
cmovne
jecxz
inc
mov
sbb
mov
add
loopne
inc
dec
and
inc
mov
leave
movl
inc
add
inc
xlat
sbb
xor
dec
mov
mov
fadd
inc
rcl
inc
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
mov
cld
mov
mov
pop
sar
cmp
jne
mov
loopne
pushf
jae
add
add
add
jmp
mov
pop
add
add
decl
mov
mov
data16
mov
add
add
data16
ljmp
pop
jle
inc
sbbb
test
jmp
push
jne
lea
movl
sar
mov
loopne
rol
ljmp
push
inc
inc
mov
cwtl
movl
add
add
call
incl
xor
jne
mov
ret
out
mov
push
xor
mov
mov
mov
lcall
and
push
mov
decl
mov
jp
mov
mov
jl
decl
mov
push
decl
orb
xor
call
test
mov
into
xchg
loop
xchg
lods
ret
in
inc
dec
in
xor
add
mov
mov
incl
jno
data16
add
mov
fmull
aam
call
push
mov
xor
add
subl
mov
add
pushl
push
lea
mov
sar
orl
fs
add
add
adc
add
test
inc
incl
dec
mov
mov
push
xor
push
inc
xorl
mov
push
inc
adcw
movl
clc
push
inc
data16
push
pushf
data16
dec
in
test
xor
in
add
decl
mov
lea
push
push
test
inc
inc
mov
push
shlb
test
cs
incl
data16
test
incl
incl
mov
lcall
leavew
xchg
inc
pushl
call
lea
mov
enter
mov
xor
sbb
sbb
dec
mov
mov
movl
mov
mov
sar
sub
mov
add
inc
mov
or
addb
xor
pushf
js
add
mov
inc
xor
lcall
cmp
movl
lcall
dec
inc
mov
mov
mov
nop
ret
add
jne
test
jne
decl
call
sbb
stos
mov
mov
inc
cmp
push
cwtl
inc
add
lcall
test
mov
adcb
add
add
movl
mov
inc
add
cmp
incl
inc
push
xor
add
mov
and
incl
lea
pushf
or
jmp
decl
mov
loopne
movl
sbb
out
mov
push
push
test
mov
cwtl
inc
add
movl
add
add
pushl
or
rorb
cld
sbb
inc
mov
movsb
add
push
movb
jmp
mov
clc
mov
incl
mov
cmp
push
add
xor
add
mov
mov
mov
hlt
movsb
add
add
mov
dec
inc
mov
add
add
add
mov
mov
push
decl
decl
xor
add
push
xchg
inc
incl
jnp
mov
pusha
add
test
decl
ret
add
mov
cli
incl
test
add
or
cmp
add
sub
mov
mov
add
inc
dec
mov
add
mov
inc
push
push
mov
mov
adcl
add
push
add
push
test
decl
mov
sbb
incl
movl
add
add
mov
push
push
test
decl
inc
push
xor
and
call
test
incl
decl
inc
decl
arpl
int
xor
mov
cwtl
pushf
add
mov
mov
incl
adc
addb
adc
push
inc
add
mov
mov
push
adc
mov
mov
addl
incl
inc
cmpsl
mov
add
mov
cmp
movsb
mov
sbb
addb
hlt
add
mov
hlt
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
sub
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
cld
cmp
xor
cld
or
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
popf
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
pushf
call
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
lea
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
xor
pop
jmp
mov
xor
lea
xor
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
popf
pushf
xor
jne
mov
icebp
icebp
shl
mov
pusha
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
cmc
add
dec
hlt
xor
mov
in
jge
mov
dec
xor
inc
hlt
xor
add
icebp
add
mov
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
add
xor
add
mov
cmp
setge
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
clc
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
inc
adc
inc
inc
push
push
jne
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
xor
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
push
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
inc
lldt
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
lret
lret
dec
mov
in
and
or
in
xchg
add
add
push
inc
xor
add
push
push
inc
jmp
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
shlb
add
add
and
fs
inc
test
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
inc
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
inc
popf
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
popf
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
pushf
idivl
cmp
je
push
loopne
dec
mov
int
mov
movlhps
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
inc
icebp
add
add
mov
mov
enter
pop
jne
mov
pushf
mov
sub
cmp
jne
xor
in
xor
movl
clc
add
ret
decl
ss
dec
push
jle
popa
data16
into
arpl
add
mov
push
cld
add
inc
pushf
add
into
ret
pop
push
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
cmp
pop
mov
je
xor
mov
cmp
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
pushf
clc
mov
test
cmp
fs
or
push
mov
push
push
lret
xor
pushf
mov
mov
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
dec
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
push
push
add
add
add
lret
lock
inc
lret
xor
pushf
jge
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
mov
in
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
mov
adc
dec
fisttps
add
ret
lea
add
xor
add
inc
test
xor
push
popf
push
xor
inc
cmp
or
inc
test
xor
in
hlt
push
push
push
push
mov
popf
popf
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
popf
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
leave
call
in
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
push
inc
add
pushfw
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
jne
mov
mov
movl
clc
dec
push
ss
pop
aad
xlat
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
clc
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
popf
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
dec
inc
mov
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
aad
xlat
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
mov
sbb
nop
mov
addl
mov
jne
mov
pushf
push
mov
xor
add
lret
add
rorl
mov
mov
mov
fimuls
mov
xor
mov
or
dec
add
or
out
loopne
jmp
lret
xor
je
mov
mov
sbb
mov
fmuls
mov
mov
mov
sbb
sbb
add
movl
leave
mov
push
mov
add
mov
or
mov
or
inc
add
in
add
mov
adc
xor
adc
inc
popf
mov
push
add
cmp
pushf
mov
dec
fwait
dec
jmp
or
sbb
or
dec
lret
dec
rcl
lret
inc
or
sar
lahf
inc
mov
inc
or
iret
add
mov
adc
inc
add
add
dec
mov
mov
ret
inc
add
push
or
test
test
clc
pushf
inc
mov
lock
inc
mov
test
mov
mov
sbb
scas
dec
mov
xor
jb
add
add
add
mov
or
mov
adc
inc
mov
or
inc
inc
cmp
hlt
inc
jne
mov
inc
bound
clc
push
inc
inc
cmp
cmp
dec
mov
push
idivl
or
inc
inc
add
push
loopne
mov
or
xbegin
mov
or
mov
hlt
inc
inc
mov
xor
add
adc
inc
clc
xor
add
or
dec
test
clc
jb
mov
clc
pushf
inc
mov
xor
shr
add
hlt
mov
push
xor
test
clc
mov
mov
clc
mov
xor
mov
hlt
shlb
clc
fmull
mov
in
icebp
dec
decl
loopne
test
clc
dec
inc
mov
in
dec
push
xor
push
mov
push
mov
clc
cmp
inc
test
add
add
jne
lea
cmc
adc
inc
inc
xor
jb
add
inc
rorl
xor
mov
adc
mov
ret
push
push
lea
cli
add
or
mov
xor
mov
add
jne
lea
lods
psubsb
cmc
lret
inc
xor
add
inc
inc
mov
xor
test
clc
dec
inc
xor
setl
lret
int3
rorl
add
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
loopne
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
or
add
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
call
xor
mov
in
rorl
iret
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
in
or
mov
xor
inc
or
iret
add
cmp
jge
mov
in
add
mov
mov
clc
test
std
iret
decl
xor
mov
in
enter
inc
mov
or
jmp
push
decl
xor
push
jne
mov
in
add
dec
test
dec
add
cmp
or
mov
dec
push
lea
xchg
mov
call
inc
mov
or
mov
iret
movsb
mov
push
xor
cmp
jne
lea
lods
dec
call
cmp
cmp
decl
add
fadds
mov
lock
inc
test
xor
add
sbb
xor
rdpmc
testl
or
mov
rolb
iret
cmp
cmp
xor
decl
mov
add
mov
jmp
orl
pop
inc
pop
mov
loopne
mov
push
rorl
push
add
inc
push
popf
dec
xor
add
adc
adcb
add
or
fadds
call
cmp
dec
mov
ret
mov
adc
add
add
mov
movsb
push
inc
add
adc
xor
add
add
mov
incl
mov
push
inc
decl
call
mov
mov
xor
lea
adc
add
dec
xorb
add
pcmpeqw
mov
pop
push
leave
or
xor
in
adcl
xor
push
dec
in
or
inc
inc
mov
push
and
mov
jb
add
inc
mov
or
jl
sbb
dec
xorb
add
xor
mov
add
dec
dec
adc
push
sbb
inc
push
decl
mov
or
mov
test
jge
xor
pushf
or
push
or
inc
or
jb
call
mov
mov
adc
and
lea
or
ret
je
sbb
mov
mov
je
pop
and
push
and
and
incb
and
pop
adc
in
ret
mov
pushf
incb
jge
mov
cmp
adc
push
decl
adc
mov
into
scas
mov
das
inc
jne
and
and
lea
jb
xor
adc
xor
jne
sbb
.byte
inc
pop
pop
