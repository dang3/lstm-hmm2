push
mov
sub
push
orl
push
lea
addl
push
subl
push
xorl
call
sub
mov
movl
push
addl
xor
inc
push
push
call
subl
test
movl
lea
movl
je
push
push
call
jmp
xorl
push
mov
addl
push
orl
push
movl
call
test
je
push
movl
jmp
push
sbbl
push
xorl
push
andl
call
test
movl
lea
movl
push
movl
je
movl
push
movl
jmp
adcl
push
subl
call
addl
test
je
push
jmp
sbb
movl
xor
mov
movl
cmpl
je
cmpl
jge
jmp
push
pushl
call
xor
or
dec
mov
jmp
mov
movl
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
call
jmp
lea
dec
mov
lea
mov
and
mov
and
mov
mov
mov
movzwl
sub
mov
mov
dec
xor
adc
mov
subl
add
movl
mov
mov
cmp
jne
andl
mov
xorl
mov
mov
addl
xor
add
mov
addl
mov
andl
xor
andl
add
mov
mov
mov
subl
mov
andl
mov
mov
adcl
mov
mov
adcl
push
mov
push
movl
orl
mov
push
sbbl
movl
call
adcl
test
movl
lea
push
je
push
movl
jmp
subl
push
sbbl
call
test
je
movl
push
movl
jmp
mov
xor
add
jmp
push
push
xorl
push
call
xorl
test
lea
movl
push
movl
jne
sbbl
push
andl
call
test
jne
mov
andl
mov
inc
mov
cmpl
jl
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
addl
xor
movl
lea
push
movl
cmpl
je
cmpl
jbe
jmp
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
lea
addl
push
mov
orl
pushl
call
and
mov
mov
andl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
push
call
jmp
lea
sbb
mov
mov
sbbl
xor
xorl
xor
subl
add
mov
xor
movl
lea
movl
mov
movl
cmp
movl
jbe
addl
push
orl
push
push
xorl
call
sbbl
test
movl
lea
push
movl
je
movl
push
movl
jmp
movl
push
jmp
push
jmp
orl
push
call
test
je
push
jmp
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
pushl
call
jmp
mov
inc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
mov
orl
push
sub
push
xorl
xor
push
subl
mov
xorl
call
test
lea
movl
push
je
movl
push
jmp
sbbl
push
call
andl
test
je
movl
push
movl
jmp
mov
movl
cmp
movl
jne
addl
push
push
subl
push
call
test
movl
lea
push
je
movl
push
jmp
addl
push
addl
call
sbbl
test
je
movl
push
movl
jmp
andl
lea
mov
lea
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
addl
test
movl
je
push
push
adcl
push
andl
call
test
movl
lea
movl
push
movl
je
movl
push
movl
jmp
adcl
push
addl
call
test
movl
je
movl
push
movl
jmp
or
mov
sub
mov
mov
mov
subl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
push
pushl
pushl
pushl
push
call
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
push
call
jmp
mov
addl
mov
dec
cltd
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
push
call
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
call
jmp
add
mov
adc
andl
xor
mov
sbb
mov
or
mov
adc
mov
mov
mov
mov
and
xor
andl
mov
inc
mov
cmpl
jg
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
add
mov
adcl
andl
xor
mov
mov
mov
sub
mov
orl
xor
movl
mov
movl
cmp
movl
jne
mov
cmp
movl
je
mov
and
mov
mov
addl
mov
xor
add
movl
adc
addl
xor
decl
xor
movl
cmp
movl
jne
cmp
movl
jne
mov
sub
mov
xor
sub
mov
mov
mov
xorl
add
mov
movl
mov
movl
jmp
mov
cmp
je
adcl
mov
mov
xor
add
cmp
movl
je
push
push
push
sbbl
call
test
lea
push
movl
je
push
movl
jmp
push
call
test
movl
je
movl
push
jmp
sbb
mov
notl
mov
mov
movl
mov
pushl
subl
mov
subl
pushl
add
mov
mov
pushl
addl
call
notl
mov
movl
mov
mov
movl
jmp
push
xorl
push
andl
push
negl
call
adcl
test
lea
movl
push
movl
je
push
movl
jmp
adcl
push
andl
call
xorl
test
movl
je
movl
push
jmp
mov
xor
add
adc
mov
mov
addl
xor
adcl
add
cmp
movl
jne
add
mov
mov
subl
mov
adcl
xor
orl
add
cmp
movl
jne
incl
push
sbbl
push
sbbl
push
call
test
movl
lea
movl
push
movl
je
movl
push
jmp
sbbl
push
subl
call
subl
test
movl
je
movl
push
movl
jmp
sbb
mov
push
sbbl
xor
add
push
subl
push
pushl
orl
pushl
adcl
call
andl
push
subl
push
movl
push
addl
call
test
lea
push
movl
je
push
movl
jmp
push
call
subl
test
movl
je
push
movl
jmp
mov
mov
movl
cmpl
je
cmpl
jbe
jmp
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
mov
movl
cmpl
je
cmpl
jge
jmp
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
add
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
mov
xor
lea
lea
xor
cmp
jne
mov
xor
mov
mov
mov
mov
xor
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
push
lea
mov
push
lea
push
mov
call
test
lea
push
je
push
jmp
push
call
test
je
push
jmp
mov
test
je
push
push
push
call
test
lea
push
je
push
jmp
push
call
test
je
push
jmp
movl
movl
movl
movl
call
push
push
push
call
test
lea
push
je
push
jmp
push
call
test
je
push
jmp
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
xor
inc
push
push
call
test
lea
push
je
push
call
jmp
mov
push
call
test
je
push
jmp
mov
push
add
push
lea
push
call
push
push
push
call
test
lea
push
je
push
call
jmp
push
call
test
je
push
push
push
call
jmp
mov
mov
pop
pop
pop
leave
ret
xor
addl
inc
ret
push
mov
sub
movl
cmpl
je
cmpl
jl
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
or
movl
movl
mov
xorl
push
or
mov
xor
mov
push
movl
cmpl
je
cmpl
jg
jmp
pushl
call
mov
dec
mov
jmp
mov
add
cmp
je
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adcl
xor
orl
xor
andl
add
add
adc
xor
mov
push
xor
xor
mov
add
adc
jmp
lods
dec
hlt
xchg
mov
pop
ss
jno
pop
addr16
jo
sbb
jo
cs
cmp
jns
gs
pusha
pusha
popa
dec
std
push
arpl
stos
jp
push
iret
push
inc
cmp
inc
jg
mov
jmp
imul
xor
sub
andl
mull
push
or
and
inc
push
and
bound
movsb
jmp
inc
and
ret
adc
jb
jnp
xchg
pop
cmpl
pushf
mov
xorl
andb
insl
out
push
xor
mov
fiaddl
push
icebp
push
mov
push
rolb
jne
sbb
push
adc
loop
xchg
pop
jns
idivb
cmp
test
dec
mov
mov
and
cmpsb
add
jg
mov
cld
pop
mov
sahf
cmc
or
mov
push
push
dec
mov
cmp
fst
sbb
or
imul
fsubl
pop
hlt
mov
pusha
mov
mov
scas
xchg
int3
adc
sbb
pop
nop
inc
enter
cmpsl
xchg
popa
lock
std
aam
mov
test
sbb
xchg
and
xor
cwtl
pop
dec
mov
fcmovne
mov
out
xchg
push
pusha
outsb
xlat
xor
mov
sub
jns
mov
adc
test
push
pop
cli
jb
ffreep
or
and
cmpl
ret
mov
das
sarb
mov
in
mov
js
jmp
xor
es
and
rcrl
dec
jl
jae
pop
sub
pushf
pop
in
mov
sti
repz
xor
mov
mov
jmp
dec
sbb
add
or
mov
push
pushf
hlt
pop
push
cmpsl
mov
test
in
add
loope
jge
into
outsl
sub
daa
shll
xorl
sub
bound
push
pop
sbb
fistl
sub
adc
stos
in
mov
inc
jmp
out
pop
or
loope
es
outsl
rcrl
pop
or
loop
mov
imul
faddp
in
xor
mov
sub
and
pushf
mov
lret
sbb
das
mov
pop
je
xor
inc
je
aaa
push
mov
pop
jns
iret
cmp
movsb
cmpsl
dec
cmp
push
mov
enter
lret
jnp
pop
xor
push
in
fcomp
and
bound
fsubrp
or
fidivrl
leave
fs
cmp
pop
and
pop
push
cltd
cs
out
mov
rclb
mov
insb
sar
in
cld
cmp
and
add
aaa
xchg
add
out
rcrb
pop
notb
aas
mov
pop
xlat
int3
mov
lcall
xchg
jb
repnz
iret
inc
xor
or
inc
mov
jns
call
repz
push
dec
or
add
inc
insl
sti
movsb
sub
arpl
pop
cmp
pushf
das
cmp
lret
cli
push
mov
xor
int
int
fmull
jl
mov
mov
adc
sbb
mov
pop
lcall
sti
in
cs
psubusw
mov
mull
inc
lcall
psrld
jge
clc
insl
arpl
fdivr
add
and
or
mov
fmull
das
push
mov
adc
inc
sub
pop
ja
or
jnp
aaa
lcall
inc
rolb
xchg
loope
test
dec
jae
push
cmp
adc
jo
sub
and
dec
mov
es
push
js
fsubs
push
inc
push
jne
stc
pop
sahf
outsl
dec
imul
mov
shll
dec
test
pop
pop
xlat
sub
lods
popa
xchg
sub
jecxz
sub
jne
mov
loopne
jno
jbe
lea
repz
pushf
outsl
leave
push
xchg
fisttpll
mov
cmp
fsubl
and
xor
stc
aad
in
repnz
inc
popf
mov
scas
dec
add
aas
ficoml
in
xchg
mov
pop
mov
cmpsb
jp
xor
int3
scas
testl
dec
ja
test
rorb
cmpl
push
les
pop
cmpsl
cmpsb
dec
push
cmp
lea
ret
aaa
ret
aad
addr16
push
cs
adc
sbb
jae
fnsave
xor
out
cli
xor
fiaddl
sub
sub
sub
inc
jle
pop
pop
fisubrl
cmpsl
mov
cmp
mov
xor
aaa
js
stc
pop
add
sbb
add
movl
add
adc
pop
push
adc
mov
pop
cld
testl
adc
loop
or
stc
cmp
cmp
aas
imul
ja
sbb
jno
jle
jns
outsb
push
cmp
mov
push
movsl
push
popf
dec
push
mov
mov
push
cwtl
push
xor
xchg
mov
jecxz
xor
data16
xor
test
cwtl
mov
sub
inc
in
mov
arpl
sarl
dec
push
adc
fistpll
xchg
stos
aaa
mov
dec
jmp
xchg
in
shufps
aas
mov
out
pop
out
pop
inc
jo
inc
mov
dec
dec
insl
sub
insb
ja
in
les
cmpsl
ja
movsl
xchg
xor
out
sti
mov
loopne
ja
adc
imul
jns
mulb
rcl
adc
cli
rclb
and
push
fisubl
sbb
push
movsb
cs
addr16
sub
fldcw
dec
es
xchg
mov
rclb
in
pop
movswl
imul
cmp
cld
jle
mov
daa
ss
lods
mov
jl
lods
call
pop
inc
pop
mov
cmp
push
adc
cmp
push
outsl
jae
cmp
and
push
or
aas
out
insb
insb
aad
push
ret
adc
push
push
dec
fisubs
rcrb
inc
je
out
xor
cmp
xor
pop
sub
out
nop
jg
testb
sub
jb
ss
pop
xor
inc
mov
das
rcll
xlat
and
jbe
jmp
jg
aad
sbb
in
cmc
mov
xchg
inc
outsb
aaa
push
jno
push
push
push
cltd
mov
pop
rolb
xor
dec
pusha
nop
pop
inc
ret
add
sarb
icebp
test
or
mov
stc
jno
das
scas
int
adc
out
or
xchg
shrl
jl
ret
jp
mov
enter
sbb
sub
sub
data16
pusha
xchg
cmp
sub
dec
lcall
sbb
insl
ljmp
rcl
mov
dec
and
cmp
push
data16
xor
in
pop
arpl
lods
push
ret
stc
bound
cmp
mov
and
orb
pinsrw
mov
xchg
sbb
icebp
negl
mov
or
aaa
dec
sbb
dec
cltd
mov
aas
scas
xchg
cmp
cmp
cmp
dec
push
inc
jge
icebp
adcl
cmp
xor
mov
cld
mov
pop
sub
rolb
hlt
push
clc
xchg
add
pop
cmpb
shlb
test
adc
cmpsl
add
pop
imul
jae
push
mov
mov
pop
push
imul
fcmovnu
lds
pop
rolb
in
xchg
push
es
cld
lods
mov
test
push
adc
sti
mov
fadds
loope
outsb
lret
pop
push
inc
pop
mov
dec
cwtl
sbb
mov
daa
aam
ja
adc
cmp
xchg
test
push
leave
xchg
fmull
xchg
xchg
ret
mov
pop
mov
mov
sbb
fdivr
gs
pop
add
fisttps
pop
sarl
inc
push
and
pop
mov
jae
into
push
and
dec
lcall
cltd
add
push
mov
fsubrl
cmp
cmpsl
lods
xchg
das
cmp
inc
ficoms
aaa
jne
inc
sub
push
mov
fadds
pusha
push
pushf
push
fwait
test
lcall
dec
xchg
mov
adc
outsl
outsb
xchg
out
inc
xchg
lcall
adc
das
and
in
pop
jmp
pop
outsl
das
fbld
fistpl
fisttpl
mov
aad
out
jle
jb
pushf
jae
dec
call
rcl
pop
add
shl
pop
pop
jp
xchg
push
andb
lahf
aaa
jl
sbb
das
mov
sub
stos
adc
and
es
jnp
fstl
jae
and
enter
div
cmp
lea
and
mov
cwtl
xchg
lcall
daa
insb
cmc
dec
dec
inc
lock
incl
sbb
mov
shlb
cmp
imul
sbb
mov
push
cmpsb
scas
shrl
inc
or
and
pop
push
rclb
into
inc
stos
mov
cmp
stos
pop
lods
sub
aas
loopne
stos
mov
repnz
and
add
loope
cmpsb
sub
jbe
fcmovnbe
push
cli
in
mov
inc
lahf
mov
adc
add
adc
loopne
mov
or
or
xchg
fcomps
data16
movb
sub
sub
sbb
insl
xchg
stos
fnstenv
out
call
sbb
dec
jecxz
cld
dec
inc
ds
fdivrs
cmpsl
push
cmp
and
and
test
xchg
adc
mov
loope
lret
cmpsb
jns
adc
or
lea
into
or
mov
hlt
xor
inc
aam
adc
aad
cwtl
push
mov
test
and
mov
sbb
push
xlat
mov
es
mov
rcrl
pop
hlt
xor
cmp
mov
push
mov
inc
fmuls
adc
nop
shlb
icebp
les
rcrb
shll
daa
dec
adc
cwtl
adc
jno
frstor
dec
insb
sti
push
xadd
pop
cmc
imul
xchg
sahf
xchg
mov
pop
enter
sub
in
dec
jo
push
cmp
sub
test
scas
xchg
push
daa
repz
inc
jmp
int
loope
cmpsl
leave
jl
stos
push
inc
testb
movzwl
mov
mov
mov
push
and
insl
xchg
daa
cmc
js
mov
push
mov
clc
xor
fwait
mov
in
lret
sub
movsb
and
popa
pop
sbb
sbb
push
repz
popa
pusha
mov
dec
inc
or
xlat
fs
fisttpl
inc
adc
xchg
ljmp
into
pop
pop
or
xlat
mull
mov
sub
push
cmpl
mov
or
addr16
inc
sub
ret
rcll
sahf
mov
outsb
mov
stc
movsb
jmp
cmp
daa
mov
cmpsb
mov
xor
inc
and
sub
xchg
fildl
cmp
dec
in
dec
inc
stos
fwait
shrl
xchg
mov
bound
fnsave
jl
rcr
sbb
lahf
xor
mov
test
rorb
jg
imul
clc
push
adc
dec
jb
imul
loopne
xorl
pop
dec
or
cmp
bound
pop
cmp
pop
or
inc
ljmp
data16
or
mov
jecxz
or
stos
mov
lcall
push
xlat
inc
das
mov
popa
mov
repnz
rcrb
dec
jmp
idivl
ljmp
sbb
pop
and
jge
lret
pop
and
jg
aas
hlt
mulb
mov
les
xchg
add
inc
mov
sub
or
push
add
test
push
xlat
mov
push
ret
add
jmp
insb
cmp
mov
push
jbe
mov
add
popf
dec
push
xlat
push
jg
testl
jmp
or
or
jnp
repz
in
xchg
sub
push
xor
aas
add
shll
fs
roll
dec
fistps
and
push
rcrb
shll
xchg
add
xchg
adc
lret
cli
mov
add
sbb
xchg
popf
ja
das
add
cmc
mov
push
mov
loop
fildl
popf
mov
roll
inc
adc
testb
mov
jmp
jmp
cmpsb
jnp
sbb
mov
mov
mov
add
mov
xor
call
loope
adc
xchg
xchg
jo
je
test
push
sbb
das
insl
iret
dec
xor
lds
inc
inc
push
call
imul
cmc
adc
push
popa
dec
xor
jg
sbb
add
lret
imul
rorl
insl
movsl
pusha
mov
popf
cmp
fst
insb
js
mov
dec
cvtdq2ps
push
adc
andl
arpl
jmp
icebp
dec
adc
or
cmp
jae
and
jbe
mov
xlat
mov
test
clc
dec
daa
pop
in
push
sti
adc
inc
pop
push
test
int
pop
mov
popf
inc
lret
sbb
inc
push
in
ret
lods
std
cmp
in
cld
sbb
push
mov
jno
ss
enter
push
es
stos
pop
sub
push
and
or
notl
lea
lds
les
and
adc
data16
jmp
push
xor
and
xor
pop
test
stos
pop
mov
ds
lds
push
int
hlt
sub
sub
ret
adc
stc
idiv
dec
jg
mov
clc
mov
jnp
mov
xchg
cmp
pop
std
adc
jmp
lret
mov
dec
jns
push
mov
loopne
pop
cli
mov
and
iret
fisttpl
sbb
jl
xor
add
add
or
lds
rorb
xchg
fwait
adc
pop
in
hlt
mov
cmpsl
sti
or
ss
std
adc
cmp
lcall
xchg
hlt
or
fsubr
loop
adc
sub
dec
call
and
pop
into
cmpl
outsl
ror
or
dec
xor
imul
mov
mov
fisubrl
dec
orl
pushf
ret
cmp
inc
lock
mov
add
repz
add
fs
push
pop
mov
push
cld
sub
loope
mov
sbbb
icebp
and
test
mov
adc
sbb
pop
popa
sbb
jp
sub
sub
lea
shll
cmp
push
aaa
push
dec
icebp
sbbb
xchg
int
mov
std
jle
mov
int
lret
or
dec
mov
jp
rorl
sub
cld
mov
pop
icebp
sbb
xor
mov
decl
pop
xchg
sbb
xchg
pop
jne
jnp
fwait
add
mov
jl
sahf
sbb
cmpsb
inc
sbb
pop
mov
inc
lods
ljmp
arpl
mov
les
mov
test
dec
fdiv
fcoms
movsb
ja
movb
push
jae
setno
jl
cmp
xor
aaa
shll
out
xor
add
shl
mov
add
or
push
sbbb
scas
fistps
lods
call
outsb
cs
nop
jle
push
xchg
mov
and
jne
inc
ljmp
dec
popa
popa
pusha
pop
in
jb
push
mov
sbb
aaa
inc
stos
cmp
addl
jge
stos
cwtl
mov
leave
pop
imul
loope
test
push
xchg
pop
inc
xchg
out
repz
mov
xchg
test
mov
push
cmp
adc
adc
mov
mov
das
dec
xor
sar
lret
repz
mov
scas
rclb
test
dec
repnz
int
pop
icebp
xor
xchg
loope
xchg
inc
xor
nop
sub
out
push
xor
pop
fimull
cmp
mov
lcall
push
arpl
lods
pop
aas
add
mov
jl
gs
andl
adc
pop
adc
int3
data16
in
push
inc
aas
xor
movsl
mov
scas
popa
ret
xchg
mov
sub
hlt
imul
inc
push
inc
xchg
push
stos
test
sbb
or
xchg
fs
push
ficoms
fcmovbe
jb
repnz
xor
pop
data16
mov
stos
inc
int
pop
bound
jle
lcall
xchg
mov
inc
ret
and
xchg
clc
mov
sub
lret
jo
sbb
imul
bound
cltd
out
mov
push
test
out
mov
or
mov
out
ret
sub
mov
out
push
mov
data16
mov
sahf
fisttpl
sbb
or
push
add
mov
rcrb
and
adc
mov
test
in
jae
loope
sub
adc
mov
add
cmp
inc
dec
push
insl
cmpsl
loop
scas
push
rorl
mov
xlat
jne
and
mov
daa
mov
lods
test
sub
in
inc
pop
pushf
les
jge
mov
push
nopl
lret
add
pop
pop
sar
mov
dec
inc
ja
and
adc
ja
add
and
sti
sbb
cmp
cmp
mov
daa
push
xchg
imul
test
xlat
addb
xor
xor
xchg
jl
les
int3
fdivl
sbb
mov
rcrl
jle
cmpsb
mov
sub
dec
es
add
ss
cmp
outsb
popf
jg
lods
pusha
je
jge
add
addl
stos
pushf
sbb
cmpl
jle
ret
pushf
xchg
add
sarl
roll
add
divb
add
es
push
test
in
shrb
xor
ffreep
lahf
lret
out
cmp
mov
mov
xchg
dec
or
sub
test
mov
test
movsl
ficoms
les
jmp
test
inc
mov
lds
popf
xchg
xor
lcall
or
pop
les
lret
mov
roll
vpcmpeqd
imul
sti
inc
push
mov
pop
xor
cli
xchg
ljmp
sbbl
jecxz
fwait
jecxz
push
pop
adc
adc
outsl
in
lods
repz
adc
xlat
push
ja
repnz
out
loope
jne
mov
and
divb
lods
sub
pusha
cld
push
jle
xorl
fdivrp
ret
les
sub
sbb
cli
xchg
scas
pusha
mov
fst
test
pushf
je
or
or
xor
mov
push
movsb
cmp
stc
sub
loope
ja
mov
jnp
push
gs
lret
and
lds
inc
loop
js
cli
jmp
xor
insb
arpl
fisubs
pusha
dec
xor
pusha
cwtl
mov
popa
addr16
inc
fisubs
out
out
add
outsl
dec
cmpb
rolb
mov
nop
iret
das
popf
lahf
inc
mov
dec
test
mov
out
jmp
stos
loopne
rclb
fdivrp
repz
mov
faddp
jle
inc
xchg
sarb
jmp
and
outsl
aam
inc
xor
lret
pop
cmpsb
cmc
dec
sub
mov
inc
pop
cmpsb
in
adc
jle
and
dec
jne
push
leave
sbb
adc
mov
sbb
add
add
push
inc
and
lahf
fldpi
std
and
xor
ret
fdivr
leave
jnp
fimull
cmp
push
les
mov
jle
jl
xchg
sbb
adc
out
aas
fucomip
scas
jecxz
addb
xchg
add
inc
out
inc
lods
sti
cli
aas
aad
iret
stos
mov
push
sub
invd
fcoml
jns
pushf
ljmp
sbb
fdiv
enter
cmpsl
cltd
lcall
mov
adc
push
movsb
sbb
test
sarl
push
mov
into
fiadds
xor
call
lock
jg
aad
cltd
fwait
push
in
dec
sub
xor
mov
lcall
mov
jmp
jae
xchg
sarb
mov
call
jae
inc
cwtl
mov
add
xchg
mov
loopne
cld
mov
clc
rcrb
xor
std
sbb
fidivs
xor
dec
mov
loopne
lods
aam
cmp
gs
adc
xor
outsl
stc
sub
dec
xor
pop
adc
inc
imul
push
insl
shrl
incl
shlb
pushf
xchg
call
lods
imul
cmpl
cmp
into
mul
and
xlat
fnstenv
pushf
sti
mov
push
mov
pusha
add
mov
ret
mov
pushf
fcmovb
das
inc
cmp
inc
jl
iret
or
adc
loop
xor
std
fnstenv
mov
fchs
cmp
cmp
add
and
mov
cmp
ss
xchg
leave
mov
pop
jne
pop
push
stos
imul
xor
in
sub
scas
data16
rorb
sub
sub
push
inc
das
int
jle
dec
es
cmpsl
gs
cs
in
or
fsub
fcmovnu
ljmp
jne
pop
outsl
mov
add
lods
test
push
push
mov
aam
in
xchg
popf
adc
pop
mov
xlat
rorb
or
mov
fcomps
aam
sbb
inc
xchg
xchg
es
dec
mov
push
sbb
sbb
mov
sbb
xlat
ret
fiadds
cmp
test
cmpsb
pop
test
push
cmc
xchg
cmp
test
mov
jae
xchg
mov
mov
push
cmpsl
xchg
cmp
lcall
icebp
mov
aad
je
xor
aaa
lret
adc
out
repz
xor
jecxz
mov
stos
sub
sbb
movsl
mov
cmp
sub
pop
mov
enter
pop
aaa
sbb
add
push
jecxz
adc
dec
cwtl
testl
fcomps
lods
testl
jecxz
push
daa
xor
loopne
pop
jne
push
ljmp
dec
das
xor
sarl
sahf
aam
ficompl
pop
fpatan
stos
cmpsl
pop
fsubr
es
jae
pop
push
test
mov
nopl
mov
mov
mov
les
addl
insb
jae
or
fs
stc
mov
add
insb
inc
adc
cltd
xchg
fildll
enter
test
icebp
in
or
inc
xor
pop
dec
xchg
pop
scas
jmp
inc
cmpsl
fdivl
sub
and
popa
jae
stos
jns
push
cmp
or
loopne
ret
mov
xchg
mov
ljmp
xchg
stos
test
aaa
mov
lret
je
and
rorl
lods
ret
xor
into
xlat
repnz
dec
sub
int
mov
int3
mov
mov
mov
jle
xchg
mov
lret
mov
ss
insb
sub
xor
out
inc
sbb
xor
shll
push
push
cmp
mov
in
pop
clc
fiaddl
push
mov
lahf
cld
xor
pop
sub
lods
cwtl
jmp
add
mov
mov
shll
pop
push
xchg
mov
sub
mov
outsl
pop
push
insb
mov
xor
call
mov
lock
div
test
mov
jecxz
xlat
inc
lock
push
and
mov
int3
or
iret
mov
in
pusha
cmp
sbb
xchg
pop
lea
jne
mov
or
ds
and
xor
and
pop
cmp
mov
insb
rcrb
loopne
pop
in
std
add
fmuls
sub
inc
jns
popa
loope
or
mov
fmull
imul
ss
inc
aam
lret
and
je
stos
push
int3
inc
iret
sbb
icebp
push
je
fsubl
scas
push
or
push
sub
lods
xchg
insl
and
inc
lock
lds
aas
push
pushf
push
pop
pop
fisubrs
and
std
cs
mov
or
sbb
fdivl
in
std
dec
mov
int3
int
mov
sub
pop
sti
jle
xchg
fs
or
in
ds
xchg
xchg
test
cmc
ljmp
mov
inc
adc
add
outsl
repnz
jb
std
test
push
adc
push
imull
mov
in
cmp
xchg
rcrl
lret
rorl
xchg
fisubrs
or
lcall
xor
adc
pop
pop
scas
repnz
insb
cli
sbbl
outsl
subb
adc
mov
push
daa
dec
stc
jp
test
test
lods
sub
dec
pop
fwait
insl
fidivrs
int
adc
mov
push
stc
jg
lods
lods
int3
sbb
stos
test
xor
in
mov
and
lock
cmc
push
fs
sub
pop
push
je
push
repz
push
mov
ds
in
dec
ret
int
xor
repnz
lret
jo
leave
ss
cmpsl
ret
cli
inc
pop
call
retw
lea
or
subl
or
and
and
loope
dec
lea
adc
enter
data16
rorl
xchg
push
adc
mov
dec
sbb
add
inc
pop
insb
mov
cmpsl
adc
jle
jnp
in
test
mull
mov
inc
insb
mov
dec
hlt
insb
cs
mov
sbb
dec
out
test
jle
push
cwtl
push
sbb
fdivrp
or
ret
jmp
test
shll
mov
loop
adc
out
dec
fwait
in
sti
lcall
in
insb
cmc
and
jp
push
popf
add
cwtl
push
and
das
xor
cmp
xlat
adc
jne
pop
sarb
fists
jl
jle
jno
or
repz
fsubl
jnp
imul
dec
shlb
enter
add
inc
insl
mov
cmp
push
jp
test
enter
xchg
sbb
sbb
xchg
add
das
arpl
xchg
and
lods
jle
scas
inc
xchg
mov
je
cmpsb
rclb
inc
mov
lcall
or
adc
sbb
cmc
or
fs
das
mov
jbe
sub
andb
shr
fdivrs
in
fistpl
stc
repnz
cmpsl
stc
mov
jl
xor
sbb
inc
idivl
or
int
std
lock
std
sub
push
jo
xor
stc
cmp
push
out
lock
ret
mov
sub
loope
mov
imul
imul
xchg
mov
lods
mov
mov
pop
adc
adc
xor
jnp
mov
push
jae
mov
dec
cmpsb
test
lods
ret
xchg
mov
loopne
mov
data16
fsub
loopne
scas
cli
decb
mov
ret
in
pop
add
test
sbb
outsl
dec
inc
jge
xor
sub
jo
ds
push
pop
pop
vcmpsd
stos
scas
repnz
pmuludq
xorl
int3
pop
jg
inc
mov
xchg
pushf
inc
mov
add
loopne,pt
mov
lret
dec
mov
cmp
xor
bound
insl
sbb
and
mov
mov
in
adc
lret
pushf
imul
adc
outsb
add
aaa
cmp
movsb
bound
fstl
sub
or
pushf
dec
lea
pop
xchg
addb
cmpsb
push
scas
jb
push
mov
sbb
mov
ds
jo
les
fcoms
and
in
mov
or
das
xor
mov
ret
rcrb
in
decl
mov
test
clc
push
sub
jno
scas
sbb
inc
xchg
js
or
dec
enter
push
mov
test
push
jle
into
in
xor
into
xor
or
stc
add
push
into
bound
outsb
cmpsl
mov
inc
mov
mov
jns,pt
ficoml
subl
loope
adc
rcrb
xlat
xor
imul
add
mov
add
sub
iret
dec
pop
rorl
sub
inc
dec
add
inc
je
inc
and
pop
sbb
scas
hlt
sarb
jnp
mov
add
dec
scas
fdivs
sbb
jo
sbb
xor
mov
ret
rorb
les
ret
pop
test
lret
icebp
cli
pushf
mov
je
sub
jbe
leave
push
jg
outsb
push
fs
mov
repz
xchg
mov
std
inc
or
fisttpll
sub
test
test
hlt
jns
sahf
faddl
and
arpl
inc
jne
je
andl
push
sbb
clc
out
ds
js
sub
and
loopne
or
add
lret
mov
jns
push
popf
push
repnz
in
mul
repz
dec
push
bound
stos
mov
outsb
sub
out
jmp
cmp
loop
xor
dec
add
mov
scas
imul
out
test
test
das
fbstp
fidivl
jmp
rcll
pop
add
xlat
lahf
mov
dec
mov
insb
fiadds
pop
test
adc
cmovge
cmp
mov
insl
inc
mov
fsubrl
andb
icebp
sbb
fwait
mov
xchg
pop
clc
mov
icebp
cltd
mov
in
mov
popf
xchg
outsb
jg
fwait
mov
sub
mov
pop
int3
stos
jl
rcrl
jp
and
cs
mov
scas
fiadds
lret
mov
mov
add
cs
adc
inc
fwait
rclb
popa
pop
pop
mov
sar
xlat
xchg
addr16
cltd
lcall
xchg
mov
pop
lcall
xlat
loopne
cmp
lea
inc
fst
lret
pop
loopne
and
or
leave
jecxz
xchg
mov
cmp
jp
xor
movsl
lret
add
jp
outsl
push
out
mov
addr16
add
cmp
pop
ss
adc
push
or
or
sti
shl
insb
into
cvttps2pi
je
dec
mov
popa
sub
push
in
xchg
sbb
mov
aad
mov
push
ss
pop
xchg
xor
mov
inc
aad
xchg
lds
out
fwait
aaa
ja
jbe
push
sub
xchg
cmp
mull
pushf
int
mov
jbe
ja
call
mov
adcl
xchg
sub
fisttps
aad
pop
mov
push
bound
popf
jecxz
shrl
std
cmp
ror
sbbl
adc
lds
rcrb
mov
xchg
jns
or
dec
inc
rcrl
sbb
es
in
cld
sub
repnz
fs
and
and
cltd
pop
lods
xor
adcb
add
call
loop
dec
mov
pusha
aaa
nop
sub
cmp
mov
cmp
cmpsb
mov
xchg
in
cmpsb
fcompl
xor
outsb
std
cmp
mov
test
repz
xlat
add
jno
dec
dec
fndisi(8087
imul
imul
pop
pop
adc
lods
xor
and
shl
cmp
sahf
mov
jo
lods
or
mov
dec
xchg
mov
add
jmp
inc
imul
ret
jb
or
clc
roll
pop
jo
mov
dec
stos
mov
dec
mov
push
and
sub
and
dec
add
add
pop
push
or
dec
test
pop
inc
aas
xor
sub
dec
sti
loopne
mov
jecxz
xlat
push
test
fildl
jle
fimuls
push
cltd
mov
jle
mov
je
outsl
mov
mov
repz
mov
shll
arpl
jo
ret
push
mov
cltd
cmp
sbb
lcall
test
and
es
outsb
inc
insb
pusha
lret
sbb
adc
mov
sub
sbb
dec
cld
ret
in
xor
cmp
cwtl
and
cmp
xchg
mov
shrb
out
inc
mov
loope
or
and
clc
mov
movsl
flds
rclb
lods
loopne
mov
push
dec
cmp
insb
les
punpckhbw
ljmp
pusha
xchg
test
sub
mov
xchg
outsl
inc
addr16
jbe
push
ds
imul
jbe
adc
les
xchg
mov
loope
inc
mov
sbb
pop
movsb
ret
xlat
jl
sti
mov
cmpl
lds
lods
sbb
out
fnsave
sub
jmp
cmp
jae
xor
mov
jecxz
xlat
inc
daa
sbb
jmp
rcrb
jo
mov
ret
xchg
mov
pop
call
fwait
mov
dec
stc
rcrl
jb
rorb
jno
fidivs
adc
inc
push
jge
mov
sub
sbb
je
aam
add
mov
test
dec
loop
bound
cmpsb
and
lret
add
repz
jl
push
jns
pop
test
inc
sub
add
loope
mov
test
jns
movsb
fcoms
cltd
dec
loopne
xchg
aas
sbb
into
movsl
or
sub
push
inc
ret
movsl
add
cmp
cli
mov
add
js
cmp
push
push
clc
pop
sti
jmp
dec
addr16
in
lcall
cmp
inc
int
repz
mov
inc
or
jbe
jne
push
inc
popf
jnp
or
dec
in
inc
or
std
cmpl
lret
xchg
jg
mov
cmp
mov
shlb
icebp
rclb
call
aaa
aas
add
pusha
ja
repnz
sub
into
cmp
out
add
or
fwait
sbb
sub
notb
xchg
jmp
pop
xchg
data16
data16
sbb
fld
ss
cmp
cltd
lods
insl
sbb
inc
test
jge
leave
sbb
data16
sbb
sti
subl
mov
jno
aaa
or
push
shrb
dec
cs
and
fcmovb
xchg
xlat
xor
fmull
dec
xchg
mov
ljmp
adc
jmp
test
fildll
mov
scas
jl
je
add
sbb
push
test
push
dec
pop
adc
xchg
pop
imul
mov
dec
cmp
push
lods
pusha
cltd
push
je
or
pop
jp
or
iret
jecxz
ja
sub
ret
rol
mov
adc
pop
add
pop
cmpsl
faddl
pushf
outsb
jmp
mov
into
sub
pop
push
cmp
sub
testb
adcb
push
test
jge
repnz
stos
imul
push
push
dec
mov
lods
and
sbb
test
mov
pop
jecxz
jne
mov
pop
inc
and
sbb
ret
inc
movsl
sub
mov
mov
out
fadds
out
ror
cmp
jae
lahf
lret
add
call
push
mov
pop
pop
ret
sbb
pop
jnp
aam
pop
jle
leave
int3
mov
ret
push
push
pop
jnp
sub
add
cmpsl
pop
sets
push
clc
sbb
sub
fbstp
jecxz
pop
ret
mov
mov
pop
leave
es
popa
dec
sbbl
jl
mov
int
scas
mov
mov
cmp
mov
test
sahf
ror
mov
sub
sbb
sbb
aam
sbb
mov
mov
jo
pop
jnp
sbb
bound
mov
pop
cwtl
subb
add
pop
and
sarb
hlt
neg
leave
mov
jle
lods
fsubs
push
xor
mov
or
movsl
cld
icebp
jns
cmp
sahf
insb
sahf
movsb
faddl
fwait
xor
jmp
dec
imul
add
popa
mov
icebp
loopne
inc
sbb
xor
sub
xchg
sbb
sub
mov
repnz
or
fs
add
and
pop
pop
mov
cmp
push
data16
bnd
into
inc
test
lahf
add
faddl
call
stos
ja
imul
fs
inc
mov
jae
mov
xchg
mov
cmp
push
inc
cld
imul
mov
mov
and
arpl
inc
orb
mov
int
mov
sahf
stos
enter
popa
fsubrs
aam
inc
mov
mov
jle
icebp
imul
xor
popa
mov
sbb
sarl
pop
push
ret
jle
mov
lods
cmpsb
mov
movsl
sbb
inc
rcll
out
mov
loope
cmp
pop
xor
push
push
pop
test
cld
xlat
mov
cld
adc
jae
xor
cmc
add
clc
adc
or
pushf
call
sarb
and
push
mov
sti
insb
ficomps
lcall
pushf
dec
sub
mov
mov
cltd
test
lcall
lret
insl
out
aam
cmc
rcrb
jae
sub
out
inc
sbb
add
adc
sarb
icebp
popa
inc
push
adc
out
fsubl
mov
ja
fwait
mov
ss
add
cmp
shll
sub
jnp
xchg
loopne
test
adc
xchg
xchg
add
leave
lea
mov
and
jns
mov
sahf
rcrb
inc
clc
inc
and
jge
jne
loopne
sarl
arpl
push
jae
in
fwait
or
roll
hlt
mov
xchg
and
popf
and
rcrb
xor
cmpsl
pop
cmpsb
pop
test
inc
loop
dec
push
and
lahf
add
xlat
cwtl
pop
add
std
pop
or
push
mov
xchg
insl
and
push
dec
xchg
add
ja
ret
push
and
pusha
icebp
lods
imulb
test
pop
ret
mov
lret
cmc
into
xchg
push
data16
cmpsl
ja
xor
insl
sub
mov
pop
xor
jmp
mov
mov
mov
jb
and
and
cmp
pop
pop
nop
scas
data16
xorb
pop
clc
xchg
sbb
fbstp
add
add
mov
shrb
mov
sub
xchg
pop
or
mov
mov
xor
add
xor
pop
xchg
arpl
mov
push
inc
cs
fiadds
mov
int
out
daa
push
addr16
mov
mov
in
call
fisubs
je
xor
inc
repz
push
aas
cwtl
aam
lods
mov
mov
in
mov
push
scas
mov
adc
cmovno
lea
cmpsl
xchg
sti
js
add
fbstp
jnp
testb
pusha
mov
mov
gs
cwtl
dec
dec
sbb
pop
inc
pop
shr
and
hlt
pop
pop
sbb
out
jmp
inc
cmpsl
ss
pop
pop
mov
push
dec
or
out
push
jno
lods
lods
mov
cmp
hlt
dec
xlat
jne
sub
ja
fmuls
and
push
nop
lock
das
test
out
push
arpl
sub
or
cwtl
mov
mov
inc
mov
xchg
or
jecxz
inc
mov
mov
stos
insl
dec
mov
xor
cmp
sahf
bound
inc
out
mov
push
push
push
fistpll
fwait
mov
into
jg
inc
sub
fbstp
xchg
repnz
lret
mov
lods
mov
arpl
and
jno
lods
mov
into
stos
loopne,pt
add
jge
push
dec
leave
rcr
stc
cwtl
dec
sub
sub
sub
andl
out
out
call
pop
mov
call
and
push
sbb
xchg
jno
adc
xchg
xor
jecxz
cwtl
push
cmc
and
bound
jne
aas
cmp
std
add
cli
push
or
push
inc
imul
jo
mov
cwtl
xchg
pop
cmpsb
push
pop
add
repnz
out
add
addr16
in
repnz
repz
xacquire
dec
repnz
out
sbb
stc
inc
ss
xchg
das
jecxz
pushf
pop
add
pop
icebp
sub
cmpsb
out
and
inc
cwtl
or
sbb
xchg
daa
fstpt
and
adc
sub
pop
and
pop
lods
mov
mov
cli
in
mov
dec
cwtl
cmp
cltd
inc
mov
sahf
push
jns
mov
mov
mov
mov
cmp
sarb
jl
add
adc
gs
dec
lret
inc
lea
and
push
inc
xchg
xchg
pop
pop
ja
aaa
mov
mov
das
fnstcw
and
fidivrs
fwait
stos
pop
or
mov
int3
daa
ljmp
shlb
and
and
sbb
cmp
lahf
push
fists
xchg
mov
mov
cmp
push
add
cmpsb
pop
mov
arpl
mov
outsb
xor
lcall
mov
sub
es
sub
dec
repz
aaa
xchg
push
mov
jle
push
or
inc
sarl
ret
or
dec
mov
inc
aas
mov
cmpb
push
push
mov
outsl
cmpsl
lods
gs
scas
cs
add
data16
cmpsl
mov
std
pop
add
les
andb
movsl
aam
xchg
cmp
xor
pop
mov
je
push
jle
sahf
shl
jb
ror
lock
std
arpl
jmp
rcr
cmpsl
dec
cltd
ret
push
dec
leave
cs
adc
pop
aad
fdivl
je
call
cmc
rcrb
inc
mov
jno
push
and
ljmp
inc
clc
rcrl
cltd
and
adc
cmp
push
lds
stc
cmpsl
enter
ret
lahf
push
idivl
push
sub
push
jbe
sub
sti
mov
jbe
mov
aad
fnstcw
jge
stc
mov
xchg
jmp
scas
insl
mov
jp
mov
cmp
mov
out
dec
sub
push
mov
fucomi
push
in
lcall
cmpsl
pop
testb
gs
cmp
rorl
mov
lcall
ror
rorl
dec
mov
adc
sbb
cmpsb
lcall
pop
mov
cld
negl
lcall
xchg
sub
cmpsl
or
addr16
jno
push
jo
pop
shrb
cmp
stc
int
push
test
les
sahf
sub
adc
cmc
or
xchg
aaa
mov
mov
out
sub
bound
cmp
les
hlt
nop
out
insl
roll
xchg
add
and
test
pop
cltd
sahf
xchg
cmp
loop
xchg
mov
arpl
jp
lcall
push
das
push
add
sbb
sbb
jno
nop
je
fsts
pop
ror
and
cmp
imul
jno
je
xchg
mov
ficoms
xor
dec
out
jbe
mov
jne
xchg
and
add
dec
push
adcl
test
aaa
cwtl
test
dec
add
dec
jp
add
ja
xor
sub
mov
sti
xchg
scas
mov
push
arpl
xlat
mov
cmp
out
js
fdivl
lods
rcrb
fmull
test
and
adc
roll
outsb
mov
cld
pop
cmp
fisubs
lcall
loope
adc
test
addr16
xchg
xchg
adc
push
les
pushf
rcl
std
outsl
pop
movsb
or
mov
pop
testl
lcall
dec
int
adc
push
push
stos
lahf
inc
xchg
jp
adc
cld
test
std
shll
jno
aad
jnp
negb
aas
jmp
push
inc
xchg
sbb
shll
dec
add
pop
cmp
dec
int
sbb
ficompl
cmp
out
mov
push
clc
adc
call
jno
das
insl
sub
xlat
inc
add
jp
orl
add
dec
sub
xchg
jb
and
out
cmpsb
adc
pop
push
adc
pop
add
movsl
loop
mov
adc
pop
mov
aas
mov
mov
jp
lret
test
jmp
cmpsb
lahf
xor
cmpsb
movsb
leave
aaa
jbe
fdivrs
inc
cli
sahf
rol
jno
add
mov
clc
cmp
xor
dec
icebp
xchg
mov
or
push
ficomps
mov
andb
mov
xchg
jg
xchg
xchg
sub
push
enter
lods
push
insl
lods
sbb
mov
cmc
sbb
ljmp
jno
cmp
inc
lret
fucomp
push
ret
cmpsb
mov
push
ret
call
jge
sub
test
in
repz
dec
xchg
inc
mov
mov
fwait
rcrl
xchg
pop
push
js
adc
fldcw
subb
or
add
mov
mov
sbb
test
frstor
test
fdivrl
jbe
pop
push
shll
mov
stos
arpl
lcall
int3
mov
and
push
lret
xor
adc
pop
dec
cmp
pop
ljmp
cli
js
sbb
cmp
jg
adcl
std
fidivrs
or
mov
arpl
addl
adc
dec
jbe
enter
mov
push
dec
adc
xchg
jl
testb
xchg
cli
jae
xor
fs
and
bound
cltd
pusha
dec
repnz
and
sbb
ja
pop
sub
sbb
stos
lock
push
push
lahf
push
xchg
inc
or
inc
pop
and
push
out
adc
inc
xor
inc
icebp
push
or
repnz
sbb
mov
inc
int3
pop
in
xlat
push
out
pusha
stc
and
hlt
add
mov
hlt
aas
cmpsl
shll
xchg
mov
divl
pop
negb
xchg
out
fcoms
mov
movb
ficompl
pusha
mov
call
push
jmp
or
pop
daa
lahf
clc
cwtl
mov
in
imul
xchg
fmuls
iret
cmp
xorb
loope
mov
or
hlt
data16
mov
jl
cmp
outsb
mov
or
add
sbb
lret
mov
jbe
xchg
cmp
js
stos
and
pop
xor
xchg
fdivs
mov
jecxz
sbb
stos
mov
testl
add
sub
aam
lods
push
lods
in
aaa
ja
mov
jne
lahf
filds
cmp
clc
fiaddl
nop
mov
loope
mov
shrb
test
cmpsb
pop
shlb
jne
in
rol
in
sub
out
xchg
cltd
test
dec
iret
adcb
inc
mov
sub
jl
scas
pop
jb
mov
mov
xchg
inc
cmc
cmp
lahf
lock
repnz
add
add
aad
test
dec
lock
mov
icebp
fisubrs
push
movzwl
sbb
enter
loope
das
imul
jns
mov
push
sahf
sbb
mov
mov
lods
inc
jp
lcall
cmp
nop
cmc
shll
cmp
xor
scas
and
dec
mov
cmp
lahf
mov
sub
and
je
mov
jmp
shrb
nop
lret
cld
idivl
jae
or
push
stc
mov
cmc
fisubl
pop
popa
sti
cltd
xchg
arpl
mov
fwait
xlat
xlat
push
adc
cwtl
mov
js
shr
outsl
into
mov
add
popf
mov
cwtl
xchg
cmc
sahf
ds
mov
int3
mov
stc
ds
pop
addr16
xchg
inc
loopne
mov
pop
mov
push
xor
into
mov
test
add
scas
push
and
out
push
mov
movsb
add
or
rorb
inc
fnstcw
shll
mov
xor
and
sbb
push
jno
mov
and
xor
je
pop
mov
mov
mov
mov
push
leave
xchg
inc
repz
add
mov
iret
mov
outsl
xor
cmc
dec
ss
dec
xchg
sub
push
mov
push
sbb
testb
sub
xor
mov
loopne
fwait
inc
clc
jge
sub
sub
adc
mov
mov
or
jno
push
add
xchg
imul
push
insb
push
sarl
pop
andl
xor
jecxz
push
lods
sbb
sbb
icebp
dec
out
mov
xor
lcall
div
and
cmp
aas
xor
or
jl
cmc
jb
popa
push
cmc
sbb
ja
fnsave
shll
and
cli
mov
pop
jae
add
dec
jne
out
aad
icebp
or
fimull
aad
jg
repz
inc
outsl
hlt
push
dec
sub
sbb
inc
in
dec
lcall
and
sub
or
sbb
push
stc
xor
mov
mov
xchg
adc
loopne
aas
adcb
out
fdivrl
es
lods
push
xor
cmpsl
push
repnz
call
xchg
nop
add
mov
je
jo
and
jecxz
mov
push
cmp
push
adc
mov
adc
mov
sbb
mov
stc
xchg
ss
lods
mov
and
inc
xchg
lret
xor
pop
pop
insl
out
dec
ret
jle
repz
aaa
mov
repz
aam
cli
pushf
mov
lds
jns
and
pop
ljmp
js
js
std
aaa
aaa
int
in
fsubr
std
dec
pop
call
filds
sub
inc
sbb
out
outsl
fs
andb
loopne
push
sbb
sub
mov
pop
sbb
sbb
jns
arpl
xlat
insb
cmpl
adcb
push
cmc
movsb
add
jle
pop
sbb
pop
aam
mov
jb
or
ret
out
and
fsubrl
add
je
jno
icebp
push
sbb
fcoms
add
fistl
inc
addr16
out
loop
ficoms
inc
aaa
jl
ret
fldenv
call
cmp
xchg
rcrb
and
xor
cmovs
inc
rol
mov
xchg
jmp
sahf
pop
shll
inc
inc
icebp
push
sbbl
pop
std
je
sbb
push
mov
imul
sbb
orb
pop
pop
mov
mov
jecxz
mov
xor
add
in
xchg
out
scas
cmc
fnsave
shll
rcl
xchg
dec
jge
addr16
jne
mov
pop
test
pop
pop
test
pop
imul
out
mov
loope
mov
sbb
imul
loopne
pop
jne
pop
out
pop
sbb
ror
scas
into
lret
dec
je
arpl
dec
mov
test
mov
shl
inc
dec
pop
ret
sbb
mov
pop
dec
mov
ja
mov
pusha
jmp
inc
aad
sub
insl
loop
adc
mov
mov
or
push
cmpb
loope
push
jo
jno
insl
fbstp
and
push
xchg
mov
mov
sub
test
hlt
mov
jns
out
dec
mov
jp
scas
fs
int
lods
push
outsb
dec
inc
test
pop
jo
or
imul
pop
pop
xchg
test
push
icebp
ja
jecxz
mov
add
xor
test
repz
cmp
add
push
clc
jnp
or
scas
and
cmpl
push
pop
pop
sbb
jmp
adc
lcall
inc
test
loopne
lret
inc
test
sbb
and
sub
mov
xor
jecxz
xor
xor
icebp
test
stos
cmp
sub
jle
lods
js
aaa
sub
fildll
or
sbb
xor
arpl
sub
cmpsl
in
xlat
push
inc
sub
jp
push
out
pushf
shll
ret
inc
jne
clc
cmpl
sub
dec
adc
or
xchg
scas
jae
outsl
cltd
stc
add
dec
aam
xor
dec
insl
into
lds
mov
sub
subb
movsb
jae
sar
mov
or
decb
in
jne
stc
je
cli
adc
stos
sub
std
push
ror
push
mov
ja
shl
lahf
cmp
lret
jae
add
mov
fildl
scas
dec
paddusb
sarb
push
and
jg
outsb
cmovs
bound
inc
lcall
divb
hlt
aam
cmp
mov
pop
enter
dec
nop
mov
subb
in
sub
pop
mov
inc
cwtl
cmp
inc
fwait
pop
xchg
push
fnstsw
lret
and
fcomps
hlt
lds
cwtl
lods
loopne
ljmp
mov
lods
add
mulb
and
sbb
cli
mov
or
dec
loopne
mov
xchg
inc
adc
aas
jae
sub
in
ss
repnz
jmp
cmp
jge
pop
add
icebp
popf
or
out
addr16
mov
movsb
dec
or
mov
sti
test
pop
insb
out
and
test
mov
fwait
loop
scas
pop
sbb
mov
leave
iret
fsubrp
xchg
push
mov
insb
aad
or
test
pop
in
fs
arpl
xor
movsb
lock
fisubrl
mov
cmp
and
pop
or
pushf
xchg
lods
xchg
adc
repnz
mov
aam
fbstp
and
cmp
xchg
out
pusha
mov
mov
call
push
dec
repz
loopne
sub
movsb
mov
sbb
sub
push
adc
in
inc
xor
dec
daa
sbb
push
lret
jmp
cs
cmp
cmpsl
cs
mov
push
es
sbb
out
into
sub
stc
clc
sarl
cmp
and
mov
push
xor
and
mov
mov
out
cmp
inc
xchg
int3
movl
sub
push
sbb
sub
fistpl
or
ljmp
hlt
sub
insb
lahf
js
pusha
into
daa
mov
lcall
sti
xlat
add
les
incl
scas
and
lret
mov
xchg
push
sub
xchg
ja
dec
mov
js
ss
cmpsb
daa
cmp
fistps
xor
cmpsl
lock
decb
movsl
aaa
imul
andb
and
inc
mov
xor
sub
dec
daa
inc
jle
push
sub
mov
mov
adc
clc
or
fnstsw
stc
lods
sbb
inc
push
repnz
and
jle
pop
jmp
in
in
cmp
scas
jmp
xchg
lods
std
scas
daa
addr16
mov
sar
mov
sbbb
pop
movsb
std
pop
jns
add
pusha
enter
rsm
ret
sub
mov
sbb
lcall
sbb
ret
test
lcall
clc
push
mov
in
pop
aam
movsb
in
lds
xchg
and
push
je
or
mov
popf
mov
mov
ror
jge
lret
jg
mov
jp
dec
stc
sub
addb
and
add
xor
mov
jns
inc
push
ffree
shlb
push
dec
add
popa
add
fistl
adc
xchg
imul
and
mov
jge
fucomip
out
adc
inc
stos
push
sbb
ja
pop
xor
movsb
movb
jmp
mov
gs
das
sbb
mov
cmp
push
out
jbe
sbb
cli
mov
in
mov
filds
and
dec
movsl
and
movsb
or
jno
or
inc
out
or
aas
sub
sbb
insb
jge
xor
ret
je
iret
call
pop
jbe
xchg
fwait
sti
imul
mov
jae
pop
pop
rcrl
test
ja
mov
in
xchg
add
outsl
sbb
add
aam
cltd
daa
pop
sbb
fmuls
cs
stos
xor
popf
test
xchg
or
hlt
and
xor
loop
push
ljmp
adc
clc
cmp
imul
scas
pusha
xor
test
mov
mov
insl
mov
bswap
pushf
cmpsb
ud0
fsubl
or
or
in
fwait
cmp
sub
dec
dec
cwtl
sub
pop
xor
adc
sbb
aam
pop
fyl2x
xchg
hlt
xchg
into
int3
fwait
fwait
push
mov
jmp
out
rolb
fbstp
pop
inc
mov
dec
pop
out
loopne
jge
jb
xchg
inc
mov
mov
xchg
fs
leave
jp
push
pop
imul
mov
sbb
daa
dec
sbb
and
mov
cwtl
sti
cmp
inc
cmpsl
lea
addb
xor
adc
outsb
sbb
out
dec
movsb
sbb
rolb
jo
test
or
push
mov
sarb
in
add
lods
pop
mov
sub
cmpl
shlb
jg
enter
xchg
cmc
pop
js
daa
les
dec
sub
xor
test
cmpsb
sub
dec
sbb
das
jle
ret
mov
mov
sarl
jns
dec
jecxz
int3
adc
mov
push
fcom
mov
fbld
mov
ljmp
inc
add
dec
aad
adc
rcrl
daa
repz
xor
xchg
cmp
pop
push
int3
cmp
ljmp
fnstenv
add
inc
int3
aaa
jo
push
add
pop
mov
pop
add
stos
cwtl
xchg
sub
push
push
pop
jl
adc
ja
ret
cs
mov
sub
lcall
mov
rcll
shrl
js
pop
cmp
je
push
pushl
out
push
into
movsl
fwait
ljmp
push
adc
jb
inc
dec
ret
loopne
jl
sub
xor
in
mov
xchg
in
dec
int3
push
jg
lahf
xchg
add
lcall
fs
push
cmpsl
add
adc
sbb
jne
sti
push
cmpsl
add
sbb
andb
inc
stos
sbbl
adc
xchg
in
push
sbb
jl
shrb
shl
leave
nop
jg
inc
and
or
ret
sbb
push
xchg
mov
jb
lret
add
mov
sarb
decb
xchg
insl
loope
add
xchg
icebp
popa
iret
inc
cmp
mov
mov
cmc
fidivl
bound
sub
fimull
jmp
or
testb
test
push
mov
insl
rol
rep
and
pop
cltd
adc
push
lods
cld
sbb
imul
adc
mov
das
ds
loopne
or
andb
mul
clc
pop
cmpsl
ja
lock
out
mov
dec
mov
jns
enter
jge
outsl
lret
jg
ljmp
popf
xchg
inc
push
push
mov
mov
data16
dec
cmc
fcoms
adcl
mov
fdivp
in
shlb
mov
mov
std
adc
pop
dec
sbb
in
mov
mov
popf
mov
xorb
add
insb
or
mov
adc
out
and
or
inc
lea
pop
les
mov
dec
dec
jle
icebp
mov
xor
adc
pop
and
sub
mov
xchg
scas
mov
das
stc
mov
sbb
imul
daa
mov
sub
pop
int3
in
dec
xadd
dec
dec
gs
fidivs
xor
xchg
xor
cwtl
dec
xchg
xor
mov
push
jge
xchg
gs
std
and
xchg
add
pusha
std
and
push
fsubs
jmp
sub
loopne
inc
mov
loope
add
loope
xlat
insl
out
xchg
adc
xor
xor
imul
inc
ss
out
and
mov
fistpll
mov
inc
push
test
out
jnp
push
dec
dec
std
jae
testl
sbb
xchg
mul
mov
xor
add
arpl
outsl
lret
xchg
cmp
js
or
daa
lds
neg
adc
mov
pop
cld
pop
pop
inc
mov
lods
and
cmp
icebp
out
repnz
pushf
out
ret
and
jns
inc
or
insl
hlt
mov
ret
rolb
and
sti
lds
clc
inc
lea
xlat
push
pop
in
add
add
xchg
in
insb
in
ret
test
cmp
xchg
mov
mov
mov
cmp
lea
lods
insl
mov
and
push
test
add
cmp
bound
or
adc
sub
mov
dec
out
and
push
enter
dec
dec
lcall
stos
mov
mov
jbe
dec
xor
repnz
iret
cmp
jnp
xor
cmp
insb
movsl
pop
push
jmp
adc
std
aas
jl
jne
cmp
mov
jmp
jmp
inc
test
pop
jnp
xor
or
dec
aaa
mov
xor
mov
es
mov
sub
ficoml
idivb
xlat
dec
cwtl
fwait
imul
pop
jmp
dec
scas
cld
lcall
push
popf
outsb
add
pusha
cmp
inc
repz
test
mov
jae
arpl
jmp
in
cmp
out
rcrb
dec
xchg
ljmp
add
iret
movsb
insb
out
repnz
mov
dec
clc
popf
inc
push
mov
shr
daa
or
cmp
sbb
stos
mov
fstpl
mov
cmpsl
insb
gs
push
cmpsb
mov
push
xlat
pop
pop
xchg
dec
mov
hlt
pop
mov
bound
fwait
jg
andb
push
ljmp
jne
cmc
sub
adc
repz
scas
mov
lret
das
sub
mov
leave
fdivl
cmpsl
ds
into
or
adc
sbb
pop
mov
ljmp
lcall
xchg
and
add
pop
hlt
je
jmp
jmp
mov
pop
jae
cmp
lock
jo
sbb
jo
push
cmpsl
jle
adc
add
out
cmp
shr
aam
stos
stos
or
repz
push
out
ret
mov
idivb
sub
jmp
inc
xor
sbb
add
imul
add
xchg
inc
ja
clc
jmp
les
cmp
fwait
in
jecxz
repnz
jne
sbb
out
pop
or
jmp
xchg
test
popf
push
xchg
icebp
insb
xchg
dec
lahf
jno
jmp
mov
pop
je
out
mov
rcl
add
in
nop
sub
sub
inc
dec
pop
test
dec
xchg
sbb
lea
je
cwtl
jl
jnp
lahf
or
aam
rcrl
xor
mov
cmp
push
lea
dec
add
aaa
pop
push
mov
shlb
or
xorb
mov
lret
push
sub
add
mov
sbb
es
inc
xchg
mov
cwtl
pop
imul
jne
or
nop
adc
lods
dec
xchg
push
in
xchg
mov
sub
clc
ss
das
cmp
cltd
insl
push
pop
data16
push
insl
push
jl
xchg
cld
arpl
pop
std
xorb
mov
divb
mov
jg
outsl
addl
arpl
cmp
ror
jae
dec
lock
insb
or
push
daa
sub
aad
push
adc
mov
into
sub
xlat
mov
insl
cmp
icebp
imul
je
movsl
fildll
sbb
iret
xorl
divl
mov
cli
sub
outsl
popa
add
out
xchg
movsb
fsts
cld
jbe
scas
sbb
xchg
jns
insb
push
and
pop
mov
xchg
lret
in
cmpsl
repnz
imul
sti
pop
in
mov
xor
mov
pushf
in
mov
pop
and
add
cmpb
mov
pushf
aas
popa
sub
mov
xorb
jae
cli
shrb
rcl
enter
mov
lds
popa
js
icebp
sub
jo
sub
pop
scas
adc
addr16
dec
sbb
sti
inc
cld
mov
mov
insl
or
jecxz
mov
addr16
rcl
adc
lods
cmp
push
aaa
push
rolb
add
push
in
xchg
ljmp
pop
mov
iret
add
in
push
sub
lret
lret
inc
cmp
pop
and
scas
jns
stos
mov
cmpsb
push
out
cs
fyl2xp1
inc
jge
bound
mov
adc
int
outsb
adc
cwtl
inc
inc
jae
dec
xor
add
out
fstpl
push
push
insl
shrb
fnstenv
push
inc
clc
dec
cmpps
sarl
cmp
pop
test
cmp
jl
in
push
sbb
lea
cmp
popa
sub
mov
dec
nop
lahf
insl
or
inc
outsb
int
outsl
stos
sbb
mov
imul
push
push
in
enter
sarl
cmp
mov
mov
mov
inc
aad
andl
mov
mov
inc
mov
sbb
lock
mov
pusha
clc
fsubr
repz
icebp
jno
cs
fisubrl
add
outsb
rcr
fmulp
daa
fidivs
pop
jae
movsl
xlat
addr16
stos
cmp
mov
jno
pop
and
out
enter
loope
sbb
jno
add
insb
sub
push
push
xchg
pushf
push
insl
call
mov
sarb
mov
cmp
push
cmovl
adc
scas
nop
packsswb
xor
xor
xorl
imul
sti
dec
lods
pop
push
sti
push
stc
pop
cmp
stc
mov
fwait
adc
mov
stos
ds
xor
addr16
mov
xor
in
std
inc
jl
mov
lds
lds
adc
mov
add
shll
cmp
or
or
cmpl
clc
pop
fdiv
cld
pusha
stos
jmp
fwait
sub
mov
orb
ljmp
xchg
fwait
push
daa
cmc
inc
icebp
aam
ljmp
cmp
sti
insb
scas
jmp
test
jl
std
cmp
inc
pop
nop
cmp
adc
or
loope
sbb
roll
stos
outsl
xchg
or
mov
test
adc
sbbb
daa
movsb
pushf
xlat
sbb
repz
filds
push
cmp
push
dec
mov
inc
repnz
rcrl
adc
jp
dec
sbb
sub
sub
hlt
xchg
sbb
pop
hlt
lret
push
repz
sbb
jnp
xor
xor
fcmovne
pop
gs
outsb
adc
jp
xchg
xor
mov
decb
inc
adc
push
pop
jne
xlat
push
lds
mov
xchg
divl
mov
stos
iret
fisttps
les
aad
in
pop
dec
mov
adc
sub
cmp
pop
sub
in
push
cmpsb
leave
sbb
pop
sub
dec
inc
out
sbb
jnp
test
mov
adc
sti
cltd
add
pop
cmp
xor
mov
data16
fsubrs
mov
fisubs
xorl
js
shlb
inc
loope
and
cmp
scas
push
daa
cmpsl
stc
repnz
nop
fsubl
jecxz
arpl
push
repnz
add
push
dec
fnstenv
sbb
xchg
jne
ret
mov
mov
inc
jmp
mov
sbb
daa
out
cmp
das
leave
rorb
out
and
inc
jne
cld
insl
jge
jle
sbb
jmp
push
cmp
repnz
mov
mov
xor
xchg
lret
movsb
inc
popf
bnd
pop
in
mov
dec
sub
mov
outsb
icebp
lods
fstpl
mov
jb
and
shrb
mov
fsubr
cmpsl
fwait
hlt
movsb
sbb
cmp
out
leave
mov
dec
add
mov
dec
push
pop
or
push
dec
adc
mov
leave
push
pop
sbb
mov
pop
add
push
cmc
testl
insl
jne
mov
add
mov
fidivrs
mov
inc
scas
xor
mov
mov
hlt
add
mov
jno
mov
mov
mov
test
lock
aaa
jle
adc
or
push
push
mov
dec
ds
mov
mov
jnp
dec
sahf
outsl
jge
loop
dec
xchg
mov
sub
and
adc
inc
jl
pop
xchg
fdivrl
fiadds
fmull
dec
sbbb
jl
lahf
mov
cmpsb
and
outsl
insb
jbe
imul
shrb
imul
push
arpl
cld
jge
arpl
mov
js
sub
xor
and
sub
aaa
dec
pop
mov
in
or
pop
dec
jmp
cmp
mov
jle
xchg
arpl
js
sarb
nop
dec
testl
ljmp
jg
jecxz
fwait
test
je
mov
cmp
jb
xchg
cld
fisubrl
addl
stos
iret
addl
mov
pop
pop
sbb
sbb
inc
cmp
daa
mov
xchg
xor
pop
rorb
arpl
outsb
push
mov
lea
xchg
cld
mov
pop
lahf
mov
or
lods
sar
test
mov
sti
fdivs
mov
jge
sti
push
add
leave
jge
scas
cmp
bts
rorb
test
test
ljmp
push
mov
jg
fiaddl
xor
stos
or
add
xchg
push
addr16
mov
xchg
rorb
push
or
mov
and
and
or
xor
je
lret
or
xchg
or
sbb
ja
adc
jl
cld
dec
subb
adc
mov
aaa
adc
or
pop
ret
out
sbb
popa
loop
jae
mov
push
jo
and
adc
fnstsw
sub
push
mov
jecxz
je
pushf
mov
mov
xor
mov
push
xchg
pop
jnp
std
adc
inc
adc
in
sub
in
fs
cmp
pop
sub
loop
jnp
popf
jecxz
test
in
iret
ljmp
or
sbb
les
gs
push
xadd
dec
jp
cmp
xchg
lret
aad
push
push
push
pop
divl
pop
inc
lret
cmc
icebp
pop
jns
sub
jne
cltd
inc
out
xchg
aad
pop
leave
xchg
out
and
ret
pop
test
inc
arpl
add
jns
test
mov
xor
shll
sub
xchg
into
sbb
jae
pop
pop
das
jnp
xor
pusha
or
xor
dec
in
jbe
jge
aad
and
jno
push
mov
mov
or
xor
cltd
fadds
cmpsl
xchg
jno
test
xlat
dec
sub
loop
hlt
jbe
adc
loope
lret
or
out
push
jmp
mov
in
dec
xchg
sbb
fwait
sarl
add
fucom
mov
cmp
jg
cmp
popf
int
fistps
add
sbb
lods
and
aam
jo
xchg
mov
repz
sub
add
mov
lahf
clc
mov
repnz
pop
shrb
outsb
movsb
repnz
sarl
sub
add
mov
mov
insb
xchg
sbb
outsl
test
or
lods
gs
fistpl
dec
ds
lcall
dec
jmp
rcr
ds
es
jae
daa
pop
dec
xor
push
icebp
and
xchg
test
mov
addr16
push
inc
push
sub
sub
jl
loop
xor
push
jecxz
and
cmp
testl
dec
sub
cmp
push
test
jbe
jns
lods
adc
jle
mov
jns
pusha
cmpsl
addr16
rclb
xchg
pop
xlat
negb
pop
cltd
orb
es
fildl
loop
add
in
pusha
pop
lahf
je
bnd
inc
sbb
cmc
jge
cmp
push
and
lret
push
dec
pop
add
jge
or
lahf
dec
pop
xchg
push
js
enter
inc
mov
mov
js
mov
push
fcoms
in
into
jns
cld
mov
pop
pop
inc
dec
out
test
inc
popa
cmp
popa
aaa
pusha
repnz
div
bound
mov
sbb
sub
ds
cmpsl
dec
push
jmp
jp
jnp
scas
fdivl
inc
xor
cmp
repnz
outsb
jmp
out
mov
xchg
es
or
lea
imul
test
gs
jb
xchg
pop
test
daa
sarb
mov
ret
jb
inc
incb
and
repz
xchg
test
lods
jmp
pop
testb
dec
mov
and
adc
push
dec
adc
cmp
push
notb
sahf
jbe
js
fsubrs
dec
push
inc
sub
pop
or
iret
sbb
pop
scas
dec
enter
xchg
sub
dec
jo
sub
or
and
jp
frstor
and
dec
xor
xor
fdiv
fildll
mov
fildll
rcr
push
add
jp
imul
sub
loope
add
push
adc
mov
pop
fdivl
aad
popa
xchg
mov
or
dec
mov
scas
inc
dec
stos
not
dec
xor
lods
mov
insb
inc
lahf
pop
dec
xchg
daa
jle
aam
push
inc
dec
pushl
inc
adc
ret
mov
jl
inc
adc
pop
scas
outsb
lods
fldt
adc
dec
add
xchg
popl
jae
adc
push
add
jle
lret
xor
mov
mul
jno
push
adc
jp
outsl
add
in
sub
xchg
pusha
lods
leave
mov
sbb
cmc
dec
xchg
js
add
pop
pop
sbb
xor
insb
mov
sbb
dec
bound
push
mov
in
les
push
mov
out
or
movsl
movsl
sbb
loop
sbb
mov
fcomps
pop
jbe
cmp
outsl
push
adc
mulb
jmp
xchg
in
or
or
xlat
pop
test
xchg
fwait
or
mov
sub
mov
mov
mov
aad
fisttpll
sbb
xchg
loop
sub
cmp
push
xrelease
inc
into
iret
cmp
ds
leave
fabs
notb
xlat
or
mov
pop
out
loopne
push
inc
xor
sbbl
mov
test
mov
test
ret
inc
lret
les
out
imul
stos
xor
xchg
pop
add
sar
dec
adc
jb
bound
add
adc
pop
push
cwtl
ret
mov
push
mov
mov
mov
les
arpl
scas
dec
push
sub
mov
or
cmp
sbb
gs
lcall
mov
sbb
leave
mov
xchg
rcrl
es
add
and
mov
mov
loop
mov
scas
lahf
fsubl
dec
notb
lock
ficomps
loope
and
xchg
xor
clc
sub
ret
mov
imul
mov
lret
lret
popa
mov
out
cmc
scas
pusha
cmc
mov
push
fldcw
jp
movsb
xor
or
in
or
es
test
and
lahf
xchg
ds
or
xchg
shll
mov
pop
cmpsl
addr16
mov
mov
movsl
lahf
test
leave
lea
dec
cmp
mov
aaa
in
fistps
insb
jecxz
push
push
mov
mov
fwait
cmp
scas
pop
jmp
xchg
mov
jnp
adc
xchg
pop
fsts
test
pop
xchg
push
js
js
dec
ja
pop
pmulhw
lcall
or
aam
repnz
mov
add
adc
mov
xor
imul
int3
lret
iret
leave
pop
bnd
push
xor
mov
push
or
in
loope
fadd
jecxz
push
lahf
imul
fisubl
ss
inc
push
inc
adcl
mov
in
lcall
cmp
jnp
sub
mov
push
cmp
insb
mov
fnstcw
jns
cmp
das
inc
shll
lds
movsb
mov
add
adc
imul
bound
xor
pop
in
add
push
and
mov
push
sbb
push
stc
cmp
xchg
sub
mov
dec
mov
lods
adcb
imul
rcrb
inc
adc
inc
add
imul
idivb
ret
xor
mov
scas
lea
pop
mov
js
lcall
adc
lret
pop
leave
jmp
stc
mov
enter
lea
mov
sub
adc
push
xor
fsubl
stos
fwait
xchg
xchg
pop
push
mov
sbb
add
aam
and
cmp
push
stos
in
ljmp
add
pop
in
cmpsl
add
call
xchg
dec
roll
xchg
jnp
jp
jne
lret
and
jae
in
xchg
add
adc
mov
fldl
ficompl
add
andl
and
ret
outsb
sub
mov
cmp
in
clc
inc
shrl
sub
insl
jbe
mov
cmp
sub
fistps
out
punpckhbw
add
cmc
fisubrs
adc
push
les
adc
int3
add
imul
aad
xchg
icebp
out
cmpsb
cmp
xchg
and
mov
filds
mov
fwait
cmp
pop
stc
shrl
loope
das
push
lret
gs
pop
pusha
filds
cmp
or
or
mov
test
jp
rorl
cmp
adc
jo
cmp
jecxz
mov
pop
sub
sbb
les
or
je
pop
sbb
dec
cmp
insb
call
sub
enter
inc
sbb
pop
mov
rcr
bnd
imul
rcrl
hlt
push
lret
ds
icebp
and
mov
push
jmp
sbb
mov
je
or
inc
lods
mov
lcall
xor
stos
add
push
jp
or
shlb
jb
mov
pop
sbb
int
push
scas
ret
movq
mov
xlat
movsb
jns
xchg
shlb
xchg
cld
pop
loope
inc
popa
mov
icebp
xor
ss
and
pop
cmpsb
jp
into
mov
inc
ljmp
mov
orl
mov
mov
and
pop
out
sbb
push
nop
addb
and
in
adc
cltd
mov
xor
test
pop
clc
jecxz
icebp
add
cmp
push
sbb
leave
cmp
jmp
sbb
mov
or
ds
cmp
jle
xor
or
adc
mov
xor
xchg
jns
jmp
stc
sbb
popa
ss
or
push
sti
pop
daa
lods
jle
mul
repz
in
push
sbb
and
arpl
movsl
mov
xor
aaa
pop
in
repnz
xor
imul
repnz
int
jae
jo
fiadds
pop
jmp
call
xchg
imul
test
sub
cmp
cvttps2pi
pusha
repz
add
jge
aaa
lea
and
mov
fistpl
cmp
adc
sahf
mov
arpl
xchg
adc
pop
sub
imul
mov
cmc
fldenv
rcrl
sahf
sub
xor
lea
mov
inc
cmpsl
dec
mov
pop
insl
mov
sub
and
pushf
popf
andb
dec
mov
call
mov
test
aas
and
popa
push
xchg
lret
adc
shll
std
insb
push
movsl
in
fdivr
cmp
stos
repnz
pop
xlat
insb
and
jge
pop
push
ljmp
adc
scas
jle
ret
adc
mov
out
stos
lods
or
mov
add
pop
xchg
or
pop
jnp
inc
mov
xor
add
shll
mov
lods
out
in
repz
icebp
push
add
sub
inc
testb
shrl
sbb
mov
or
xchg
xchg
xchg
adc
jb
inc
movsb
lods
lock
ficoml
popf
gs
fnsave
negb
das
pop
jb
out
inc
fwait
idivl
sar
jmp
dec
aaa
inc
movsl
outsl
subb
repz
popf
mov
lahf
test
movsl
cmpsl
xor
sbb
mov
cwtl
nop
shll
pop
and
decl
xchg
pop
cmpl
pop
push
pop
xlat
mov
jns
sbb
push
push
or
and
sbb
daa
loop
popa
sbb
ja
movsl
repz
pop
repz
xchg
jns
sbb
adc
stos
sbb
in
ficomps
pusha
jp
push
loope
lahf
js
nop
jb
movsb
fistpl
jne
ficoms
inc
mov
push
nop
push
stc
orl
mov
aam
lret
mov
pop
xchg
xor
test
es
push
mov
ja
xchg
cmc
fmuls
sahf
fcomps
add
mov
adcb
pusha
dec
pop
xor
mov
adc
shll
push
aad
les
mov
std
stos
sbb
test
mov
dec
or
fildll
add
adc
lcall
mov
rorl
and
js
pop
adc
xchg
mov
jne
push
xor
jl
clc
xchg
sub
gs
lods
cmc
push
sarb
loope,pn
mov
dec
hlt
aad
rcll
adc
xor
cmp
lock
fs
cmpsb
cmc
mov
std
adc
inc
pop
push
icebp
adc
mov
xor
mov
lods
jge
rorl
lods
mov
ret
lcall
and
inc
ljmp
lods
es
popa
push
pop
mov
cmp
mov
stos
repz
aad
imul
xchg
movsb
je
and
outsb
inc
cmpb
jmp
orb
lcall
mov
mov
js
fidivl
add
addr16
pop
mov
jnp
and
scas
call
in
rcll
dec
mov
dec
das
adc
mov
sbb
jg
mov
rclb
mov
mov
xlat
clc
mov
std
mov
jecxz
lahf
daa
std
lods
sub
lds
pop
fwait
int3
mov
sbb
mov
adc
arpl
dec
es
or
cmp
clc
add
and
jl
jl
ljmp
loopne
adc
lahf
pop
jns
pop
iret
imull
ret
sbb
mov
fiadds
cmp
lods
pop
jp
pop
or
in
mov
mov
or
sbb
addr16
repnz
iret
inc
mov
stos
xor
pop
push
aam
xor
lcall
pop
pop
push
push
xchg
sbb
and
pop
and
pop
imul
andb
sbb
in
add
mov
movb
xchg
xchg
xrelease
sbb
jb
mov
xchg
icebp
push
test
jno
cmc
fsubrs
lcall
or
les
mov
sbb
or
pop
sub
cmp
sbb
stc
jae
mov
mov
subl
xchg
insl
mov
cmc
in
lea
sub
xor
sbb
daa
and
and
in
repz
stc
mov
xchg
stos
sub
in
dec
fdivs
jo
lods
lret
inc
fbstp
dec
xor
cmpsl
or
in
pushf
inc
std
cmp
lret
int3
add
jl
mov
cmp
adc
jo
cmp
test
enter
push
add
test
pushf
or
in
lds
inc
push
mov
daa
lret
cwtl
add
incl
pop
test
push
pop
inc
jnp
jl
pop
push
mov
add
jge
sub
xor
rclb
iret
lahf
adc
insl
jle
xor
push
clc
ficomps
push
mov
xchg
jg
ja
mov
aas
mov
fs
in
fcmovb
sub
inc
and
pop
in
mov
xchg
mov
cmpsl
sbb
jae
xchg
lahf
mov
fs
push
pop
push
rcr
fucomi
add
dec
fnstsw
xchg
lret
pop
sbbl
imul
popf
mov
mov
sti
pop
repz
aaa
or
je
push
sub
xlat
lods
cmp
jno
mov
out
lahf
fcoms
push
lret
dec
sub
lods
push
push
push
and
push
scas
stos
lea
fmuls
xchg
data16
cmpsb
xchg
inc
insl
mov
sub
movsl
and
jb
in
outsb
stos
inc
push
pop
dec
mov
outsl
xchg
gs
shll
inc
xchg
push
push
insb
mov
out
dec
mov
or
pop
cmp
aaa
push
sbb
pop
xchg
aas
jae
js
or
jle
aam
or
out
ja
mov
mov
add
fisubrs
lret
test
fst
fildll
icebp
aam
pop
lcall
lods
imul
sti
pusha
ds
enter
xchg
xor
test
dec
mov
add
aas
mov
jl
and
aad
fdivl
jo
sbb
inc
and
adc
insb
dec
mov
std
aas
push
imul
ret
repz
aaa
arpl
mov
repnz
sahf
js
xor
sahf
es
mov
mov
fs
mov
mov
testb
mov
popf
mov
ficomps
jmp
fwait
call
loop
loope
mov
xor
cmc
sbb
or
jnp
mov
fcompl
sti
mov
jnp
mov
leave
pusha
pop
movsb
and
gs
rorl
adc
pop
mov
in
fistpl
mov
hlt
xorl
jne
fmul
stos
sub
icebp
fldcw
jnp
rclb
bound
inc
sbb
out
push
xchg
hlt
mov
out
mov
inc
pop
or
lods
int3
insb
push
mov
call
mov
cs
push
mov
cld
and
xchg
push
scas
pop
fimull
orl
mov
or
ret
outsb
stos
push
lea
cs
aam
or
sbb
lahf
or
push
xadd
cli
xor
push
and
lahf
out
dec
mov
leave
inc
xchg
mov
or
test
mov
cmc
sub
mov
xchg
mov
mov
cmp
mov
pop
subl
imul
aad
pop
jae
pop
sub
aad
fsubrs
fsub
xchg
sub
push
xor
insl
movsb
push
dec
dec
push
mov
jb
out
outsl
aam
xchg
pop
push
movsb
xchg
ror
rorl
dec
test
clc
adc
imul
jnp
btrl
je
or
mov
add
sub
out
cld
pusha
push
test
adc
in
bound
xchg
ljmp
and
lods
xchg
mov
mov
jne
ficoml
jmp
mov
jbe
lods
cli
and
inc
imul
cmp
jne
push
lods
out
js
mov
out
inc
mov
lea
ret
pop
pop
mov
addb
rcrb
inc
imul
push
xor
sbb
mulps
and
cmp
bound
movsb
pop
int
sarb
mov
mov
fstps
popf
les
scas
or
pop
insb
mov
mov
insb
cwtl
mov
les
adc
out
dec
dec
and
inc
mov
xchg
cld
cld
cmpsl
push
dec
xchg
inc
mov
xchg
ss
psllw
pushf
jbe
and
add
rol
leave
loope
insl
jmp
icebp
fimull
arpl
dec
ret
push
pop
js
jp
push
ffree
jo
ljmp
cwtl
cmp
mov
or
lret
lea
dec
push
pop
push
jne
loopne
test
xchg
jns
mov
aas
faddp
hlt
pop
je
scas
jp
imull
inc
fisubrs
push
adc
add
dec
addr16
fidivrs
hlt
add
xor
xchg
popf
movsl
das
jb
xor
sbb
push
pop
sbb
and
push
xorl
push
add
adc
idiv
rolb
cltd
jnp
sbb
loopne
hlt
test
dec
test
add
cmp
ficomps
enter
fstl
hlt
mov
pop
sub
dec
iret
add
mov
fistpl
push
add
xor
inc
je
jmp
leave
lret
or
jl
lahf
ret
push
xchg
add
jbe
or
test
mov
les
jecxz
or
lock
lods
pop
repz
sub
shrl
mov
push
jo
dec
jns
or
in
outsl
inc
xchg
mov
pop
sub
sub
bound
lcall
jp
mov
out
mov
es
jnp
mov
push
fs
stc
cmp
dec
xchg
repnz
add
xor
sub
ds
dec
fisubrl
xor
push
jecxz
mov
mov
push
ss
popf
enter
repz
pop
xchg
inc
lcall
imul
dec
cmp
cld
push
mov
movb
mov
ja
mov
mov
es
pop
das
ja
xor
cld
das
add
stc
push
mov
mov
pop
xor
xchg
or
mov
adc
cmp
insl
add
lret
and
xor
mov
mov
sbb
xor
sub
test
add
out
sarb
in
or
xor
pop
imul
xchg
jmp
and
mov
add
mov
mov
sbb
testb
push
dec
sub
jg
or
nop
std
mov
cmpsl
outsb
jmp
test
adc
rcrl
sub
xor
jmp
pop
cld
nop
ficoms
cli
sbb
push
in
mov
les
add
and
or
test
iret
out
cmpl
sbb
hlt
inc
pusha
andb
mov
mov
jne
push
and
and
pop
ret
addr16
iret
sbb
das
sbb
pop
lahf
and
popf
aad
pop
in
in
dec
cmp
inc
xchg
out
rcrl
popa
jnp
out
mov
mov
int3
adc
ret
adc
xchg
pop
lea
ret
mov
lret
xchg
shl
xchg
test
xor
inc
push
out
mov
es
lods
loop
or
fcmovne
fsubrs
pop
push
ja
adc
fldt
add
stos
hlt
mov
mov
dec
pop
ficompl
pop
jle
jge
adc
lret
push
imul
fcos
or
add
sbb
mov
pop
les
sbb
push
pop
or
adc
loope
xchg
push
sub
cmpsl
xchg
xlat
insl
and
imul
adc
fimull
sbb
mov
in
xchg
pop
jae
or
outsb
stos
push
pop
cmp
mov
xchg
mov
aaa
sbb
sahf
mov
fstpl
mov
imul
dec
in
fadds
or
push
cmp
mov
ret
les
mov
ror
popa
bound
push
test
popf
add
mov
push
inc
adc
ljmp
ss
lret
push
jge
mov
xchg
push
mov
cmp
cmp
mov
jmp
xchg
push
pop
sbb
cmovo
push
subl
jnp
xchg
movsb
pop
sbb
lea
jns
fstl
push
lret
data16
inc
insl
adc
movsb
dec
mov
xchg
ret
add
scas
mov
loop
lods
aam
fmul
clc
test
push
aas
scas
inc
test
out
fdivrl
loope
inc
js
aad
xchg
andl
outsl
adcb
mov
jmp
daa
arpl
jns
aam
cli
jl
leave
inc
popa
dec
sbb
xor
ficomps
mov
cmp
popa
jl
smsw
rol
jo
and
in
mov
inc
mov
repz
jbe
adc
pop
xor
outsb
ret
xchg
cs
pop
or
arpl
ja
adc
adc
ret
mov
push
dec
mov
push
ret
jl
mov
pushf
inc
insl
inc
pop
push
out
into
fs
xchg
sahf
fisttps
cmovp
mov
pop
aam
mov
push
cwtl
cli
in
scas
cmp
repnz
jno
push
stos
xor
jb
clc
lcall
xchg
dec
mov
mov
push
aam
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
or
movl
mov
add
movsbl
xor
mov
neg
sub
not
mov
addl
xor
movl
cmp
movl
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
call
jmp
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
movl
mov
and
push
movl
andl
xor
xor
inc
mov
cmpl
jl
jmp
pushl
call
cmpl
jb
mov
push
mov
and
mov
xor
orl
push
mov
add
mov
mov
test
movl
je
mov
mov
mov
mov
xor
adcl
add
orl
mov
mov
xor
add
andl
mov
inc
mov
cmpl
jle
jmp
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
decl
xor
add
mov
mov
adc
mov
mov
add
xor
mov
xor
add
xor
mov
subl
sub
lea
xorl
xor
sbbl
xor
cmp
je
mov
mov
add
mov
xorl
xor
add
cmp
jne
pushl
adcl
call
mov
sub
mov
mov
sbbl
xor
sbbl
add
movl
cmp
movl
je
andl
pushl
orl
pushl
call
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
jmp
mov
andl
mov
mov
addl
xor
xorl
add
movl
cmp
movl
je
add
mov
mov
sub
mov
jmp
mov
je
shlb
inc
dec
push
jo
loop
jo
outsb
push
inc
lret
xchg
movsb
rcrl
nop
sbb
push
lret
xor
std
xor
ficoml
jecxz
sub
push
dec
jmp
sub
sub
aas
pop
push
aas
into
jg
test
xchg
jb
pop
lea
pop
pop
mov
imul
adc
and
xchg
pop
or
xor
clc
cmpsb
mov
lahf
flds
cwtl
or
lret
or
push
test
or
xchg
nop
mov
and
gs
mov
data16
popa
test
cwtl
or
sub
negl
or
xchg
sub
fwait
inc
pop
les
mov
rorl
roll
or
std
pop
js
lret
in
pop
inc
add
ret
out
ljmp
xorl
pushf
icebp
call
adc
sub
mov
xchg
push
pop
lods
add
jle
mov
fisubl
test
xchg
cli
xor
pop
ja
push
loop
shll
xlat
dec
push
repz
dec
adc
scas
adc
sbb
rorb
jne
out
mov
mov
ljmp
push
test
mov
adc
mov
sbb
cmp
sbb
std
adc
in
scas
enter
inc
adc
sub
rorl
aas
jb
icebp
fmul
inc
push
or
xchg
xchg
loop
shl
jg
arpl
das
mov
cmc
push
imul
xor
mov
cmc
popf
loope
sahf
loopne
mov
xchg
push
icebp
jg
mov
dec
xchg
jne
insl
lock
popa
cs
fdiv
pop
add
imul
jbe
in
stc
shr
pop
cwtl
and
mov
dec
lds
daa
sbb
or
cmpsl
fisttpl
jae
jge
negl
mov
sub
or
int3
mov
jle
jb
popa
and
shr
push
adc
adc
fdivl
aaa
mov
gs
add
or
das
push
jb
leave
xchg
inc
mov
sbb
iret
movsb
cmp
sub
adc
push
int3
call
cmp
inc
aad
cltd
xchg
scas
mull
rclb
lcall
dec
add
pop
add
push
sub
loop
pop
mov
cmpsl
push
lods
jae
dec
scas
stc
ljmp
adc
xor
ja
push
insb
mov
dec
jmp
into
dec
push
pop
loop
inc
int3
sub
shl
mov
and
and
push
stos
rcll
mov
std
testl
inc
inc
pop
mov
fistpl
mov
fsubs
pop
shrl
cmpsb
mov
xchg
dec
adc
xor
arpl
stos
and
jle
stos
addr16
cmpsb
or
cmp
pushf
mov
mov
sub
imul
sub
push
pop
insb
push
mov
jg
mov
adc
pop
aad
out
jnp
fcmovb
ret
subb
rol
push
lea
and
sahf
add
call
leave
jae
sbb
dec
mov
pop
pop
add
dec
jge
inc
pop
dec
xchg
mov
rcrb
je
popa
imul
rorb
mov
dec
mov
cltd
data16
jae
lods
sbb
mov
mov
loop
jnp
push
and
addl
adc
arpl
cmp
cmp
rcpps
out
jae
inc
inc
cmpsb
mov
mov
arpl
subb
fadds
pop
cmp
ret
in
leave
push
sahf
push
fadd
shlb
pop
pushl
cmp
pushf
iret
xchg
push
mov
fdivp
cmp
in
adc
jmp
jno
cmp
sub
pop
lret
fdiv
inc
loope
fwait
jecxz
or
xchg
lahf
stc
scas
aaa
mov
jge
scas
and
pop
jb
mov
fists
in
cmp
pcmpgtw
loop
addr16
imul
mov
adc
sbb
rclb
pop
addr16
xor
lahf
lock
pop
stos
mov
shlb
leave
mov
fnsave
or
xor
lahf
sbb
push
jb
jecxz
insl
pop
mov
fldenv
ss
sub
cmp
lods
jae
cli
fwait
notb
sarl
mov
out
mov
lahf
scas
pop
adc
sub
mov
loop
das
mov
rep
inc
icebp
or
shll
and
adc
cmp
cmpsl
or
out
sbb
mov
mov
es
fmul
and
in
std
sub
add
inc
fisubl
icebp
cmp
movsl
sub
cwtl
ds
cs
jp
pop
inc
mov
adc
leave
dec
dec
mov
adc
add
push
inc
mov
stos
imul
or
cmp
fs
add
enter
dec
sbb
jne
dec
push
fimuls
mov
push
dec
int3
and
cli
dec
push
sbb
sub
jge
jae
mov
mov
jmp
push
inc
xchg
push
ret
in
push
mov
enter
cmp
xchg
lahf
shl
dec
test
inc
cmp
sub
daa
pop
fimull
jl
or
jl
imul
insb
in
lret
addl
dec
cs
push
mov
decl
dec
lcall
push
and
pop
fstpl
mov
sbb
sub
ret
sbb
mov
mov
add
mov
mov
out
cmp
rorw
cwtl
fldcw
bound
scas
add
jb
pop
loop,pt
jne
inc
jmp
mov
fadds
mov
mov
fcompl
cltd
in
adcb
int3
push
out
and
dec
cmpsl
and
and
xchg
ret
pusha
jle
sbb
hlt
push
jo
shrl
mov
cmp
inc
cmp
aad
sbb
les
hlt
enter
add
dec
ret
cmp
movsb
or
pop
push
jmp
and
sbb
nop
mov
xchg
pop
call
sub
subl
mov
xchg
or
imul
jnp
add
jne
mov
or
je
adc
xor
addr16
shl
es
ljmp
pop
or
add
int
hlt
in
andnps
cwtl
sub
out
xchg
push
and
jb
add
scas
pop
sub
cli
clc
in
mov
scas
aas
xchg
adc
imul
xchg
jae
hlt
and
jmp
jle
ljmp
idiv
das
xor
mov
dec
xlat
shrb
cmp
aaa
mov
in
adc
ja
xchg
lock
push
xchg
adc
or
jle
sbbb
iret
jg
stos
xchg
or
testb
lods
shrl
insl
lea
or
xchg
in
sbb
je
fwait
xor
rol
or
outsl
lahf
inc
les
adc
and
iret
push
ret
cmp
xor
push
cmpsb
and
sahf
mov
xor
inc
popa
or
push
jg
xor
push
and
mov
xor
imul
inc
incl
mov
inc
mov
jecxz
push
stc
add
pop
cmp
xor
cmpsb
outsb
and
jle
mov
leave
stc
subb
adc
push
and
dec
mov
lret
testb
loop
out
add
lds
rol
fdivrl
loope
fdivl
ret
das
xchg
inc
pop
dec
daa
ret
cmp
mov
pop
cmpsl
fidivrl
repz
push
leave
cs
sbb
push
pop
lock
pop
pusha
jge
ret
jmp
push
popl
xlat
cmp
and
mov
sbb
cmp
jnp
xlat
lahf
mov
ss
pusha
mov
or
mov
fildll
ret
fwait
adc
out
add
outsl
adc
mov
xlat
ja
cmpsb
test
or
popa
mov
push
lock
lods
push
fisttpl
imull
inc
cmp
ljmp
inc
push
dec
scas
sub
cwtl
or
cmpsb
cmp
scas
popa
fsub
mov
adcb
dec
test
lcall
jne
xor
mov
xchg
call
sti
pusha
hlt
mulb
fmull
iret
sbb
rol
fidivs
popf
mov
inc
jge
cmp
outsl
repnz
mov
ret
or
push
inc
pop
shlb
push
aas
sbb
jbe
sarb
cli
add
aaa
scas
jl
adc
mov
pop
sub
and
push
push
insb
pop
sbb
and
enter
mov
adc
clc
pop
add
fidivrs
scas
push
test
sbb
jmp
jecxz
and
mov
sub
inc
mov
movsb
dec
out
call
arpl
pop
jmp
inc
hlt
inc
mov
addr16
push
push
cmp
sub
cwtl
adc
sbb
dec
icebp
add
xor
jae
repz
shrl
push
or
dec
mov
fdivrs
pushf
jno
jge
mov
push
xchg
nop
push
test
add
jbe
mov
mov
pushf
cmpl
fadd
loopne
arpl
loope
mov
test
add
sbb
fdivrs
subb
mov
int
add
scas
and
push
cmp
pushf
cltd
lahf
stos
es
test
inc
popa
cltd
into
xchg
clc
xchg
test
add
mov
movsl
in
pushl
jb
shll
sub
outsb
sbb
mov
push
stos
jle
stc
cli
popa
cwtl
fcomip
sbb
or
xchg
je
mov
daa
mov
pop
fcmovb
ss
shll
jae
adc
push
addr16
ror
jae
add
push
fsubrl
popf
jnp
mov
xchg
mov
adc
pushf
lcall
pushf
ljmp
lock
push
pop
pop
in
cwtl
jmp
push
sbb
clc
lea
push
pop
or
testl
inc
lea
repnz
adc
mov
int3
mov
mov
orl
push
mov
xor
xor
outsb
sub
pop
jle
or
add
pushf
jecxz
lret
js
addb
push
repz
push
jmp
mov
pusha
add
xchg
sbb
stos
sahf
jle
cld
mov
xlat
and
icebp
shll
cmp
xor
iret
adc
xchg
pop
sub
jbe
aad
fs
pop
scas
mov
pop
mov
pop
stos
mov
ficompl
inc
loopne
cltd
stc
and
jne
jg
xchg
shll
push
or
test
aaa
gs
jne
in
mov
mov
shll
popf
dec
sbb
cmpl
dec
js
cwtl
mov
xchg
stos
mov
add
cmpsl
popl
stc
xor
push
sahf
pusha
add
jo
jno
add
test
movsl
nop
insl
movsb
aaa
je
pusha
inc
fidivs
adc
pop
xor
repnz
test
cmp
xchg
sub
scas
push
idivb
pushf
jae
fistl
push
dec
mov
lcall
in
repz
inc
add
ret
inc
mov
xchg
iret
jle,pn
hlt
sbb
mov
in
mov
push
insb
iret
mov
popa
mov
enter
insl
jb
jnp
sbb
pop
rolb
loope
cmpsl
dec
mov
cmp
pop
xchg
cli
push
dec
lds
shlb
or
lret
addb
and
jl
outsl
jge
fmull
pop
outsl
inc
repz
mov
clc
dec
out
pop
lcall
pop
jg
mov
lea
shl
mov
mov
sub
stc
mov
cs
sahf
sub
shlb
cmp
add
clc
mov
ret
xor
mov
ds
ss
call
mov
push
inc
out
sbb
pushf
sub
cmp
inc
cmp
fwait
aas
and
or
imul
or
mov
insl
mov
shlb
cmp
popa
xor
add
nop
stos
or
dec
ja
fistps
clc
mov
or
inc
pop
cmp
lret
sub
in
dec
or
int
repnz
pop
mov
ljmp
in
sahf
cmp
jge
dec
scas
mov
push
icebp
xlat
jp
into
jne
lds
test
dec
mov
cmpb
pop
nop
cmp
push
xchg
inc
ret
xchg
mov
xchg
adc
push
aaa
hlt
push
ljmp
xor
pandn
xchg
xchg
mov
pop
push
aam
xchg
popa
jb
pop
out
nop
dec
ret
faddl
dec
pushf
fisubs
inc
jbe
call
inc
loope
and
push
and
cltd
add
pop
push
and
in
and
fisubrs
fsubr
jnp
mov
and
or
stos
iret
outsl
les
popa
scas
xor
mov
std
sub
or
xchg
cli
jge
addb
cmpsl
add
out
sub
xor
lds
outsb
adc
or
xchg
add
sub
movsl
push
pop
dec
cltd
jl
sbb
ret
movsb
pushf
popa
and
inc
aam
das
pop
dec
mov
imul
mov
mov
test
mov
cltd
in
mov
push
test
mov
and
inc
jno
aas
pop
dec
pop
or
lahf
push
sahf
testl
jecxz
push
out
and
add
es
adc
test
sub
mov
inc
daa
cmp
mov
stc
jg
incl
je
idivb
repnz
pusha
sbb
jmp
push
lods
ja
pop
pop
pop
dec
rcr
mov
icebp
mov
add
xchg
push
sub
push
ret
inc
mov
fdivrs
int
mov
add
inc
in
jle
repnz
jl
push
insl
das
imul
jnp
cmp
dec
inc
mov
inc
hlt
stos
push
inc
jl
jle
aas
dec
jae
push
inc
push
pop
jb,pt
cmp
popf
pop
fstpt
sbb
adc
inc
je
in
mov
stc
stos
and
leave
bswap
sub
inc
hlt
push
xor
jl
xchg
jp
sub
pop
rorl
jnp
inc
xor
add
lret
mov
outsb
cmp
test
push
repnz
rclb
out
lret
ss
jbe
flds
loope
inc
dec
ret
adc
movsb
in
adc
stc
sahf
fidivrl
nop
lret
pop
insb
scas
popf
je
push
scas
add
push
pop
and
out
icebp
sub
lods
and
inc
shlb
mov
cmp
stos
loope
jle
cli
js
fnstsw
fdivrs
sbb
fsubl
dec
sub
sub
push
call
sbb
ds
adc
das
stos
xchg
imul
add
pushf
aaa
xor
or
aaa
mov
repz
stc
aad
iret
cld
insb
pushf
shr
je
mov
cs
int3
testb
mov
mov
pop
cmc
mov
into
notb
lea
mov
mov
int
push
mov
mov
popa
xor
subb
mov
fisubs
dec
cwtl
jle
or
mov
xchg
movsl
push
sub
adc
pop
jecxz
jp
fwait
push
sahf
loope
sub
inc
sub
in
ds
clc
not
mov
enter
sbb
aas
or
jns
fdivrs
or
and
adc
int
mov
jbe
jle
sub
push
pop
adc
aad
bound
frstor
cs
and
in
gs
int
fwait
sbb
call
and
ja
icebp
lds
adc
data16
jae
dec
out
mov
jo
in
pop
cmp
ja
rcll
cmp
sbb
repnz
fstl
fnstcw
dec
fildll
mov
adc
frstor
cmp
cs
or
push
and
inc
pop
and
mov
mov
enter
push
and
push
jle
dec
mov
fisubrl
mov
cmp
xchg
rolb
lcall
pop
fldt
popf
movsb
cmpsb
jae
ljmp
dec
or
jmp
xor
mov
pop
bts
mov
movsb
cmp
mov
std
lcall
mov
mov
adc
stos
jne
mov
cld
rcll
popa
pop
mov
fwait
insl
add
insl
lahf
pop
test
loop
mov
push
mov
xchg
add
ja
mov
or
jl
add
cmp
cmp
pop
push
cmp
mov
out
mov
mov
aad
rolb
push
lahf
or
pop
sbb
fstpl
out
lea
movsb
inc
pop
sub
inc
add
dec
push
push
aas
push
loopne
push
lret
add
mov
lea
jle
jno
into
das
fwait
xor
outsb
stc
jb
insb
call
dec
sub
call
enter
in
shlb
mov
daa
fs
into
pop
stos
or
nop
lret
jmp
jecxz
mov
or
xchg
pop
or
hlt
arpl
cld
je
hlt
xchg
sub
imul
idiv
dec
aas
dec
aas
dec
mov
test
jb
in
inc
sub
lock
jbe
and
loop
or
imul
test
cmp
sbb
outsl
push
mov
mov
mov
mov
and
push
jbe
out
mov
cli
jbe
xchg
dec
mov
js
fdivl
mov
outsl
bound
stc
sub
sti
sar
fs
in
dec
fdivs
movsb
stc
or
cltd
jb
and
or
ret
and
and
stos
sbb
adc
ficoml
push
dec
dec
mov
jle
or
sbbl
cwtl
int3
cmp
out
jecxz
push
mov
into
push
xchg
sub
rolb
repz
xor
push
icebp
aas
inc
dec
hlt
inc
jge
cwtl
dec
pop
test
xchg
inc
ljmp
jb
sbb
not
jnp
cld
push
int3
push
push
insl
shlb
aas
mov
mov
push
neg
repz
stos
dec
fistpll
repnz
and
cmp
push
mov
jne
inc
or
jae
push
cltd
cmpsb
xor
clc
sahf
loopne
inc
nop
adc
jmp
ror
in
vmovsldup
jp
dec
in
xlat
push
fistpl
fnstcw
push
rcrl
pop
cmp
lret
lcall
sub
dec
fisttps
aam
push
clc
cmp
fistpll
popf
mov
pop
mov
sub
pop
adc
adc
pop
stos
in
pop
pop
ds
pop
insl
or
lods
cmp
adc
and
cld
enter
ret
cmp
mov
push
test
into
mov
outsb
push
mov
mov
add
and
mov
pop
lds
xor
sub
gs
fldt
subb
sub
aam
add
add
push
out
pop
test
cmp
xchg
in
test
xchg
aas
dec
mov
hlt
arpl
or
scas
cmp
out
mov
cmp
and
sti
int3
jmp
fsubrs
ss
iret
xchg
jnp
pushf
loopne
pop
cmovle
push
mov
mov
pop
sti
cmpsl
sbb
out
pop
icebp
addr16
sub
mov
jp
insb
sub
daa
mov
fwait
je
out
mov
fcoms
fistpl
aas
loop
push
adcl
pop
imul
sbb
and
cltd
call
aas
sbb
gs
xchg
add
out
sbb
pushf
mov
fmul
mov
hlt
loop
sahf
adc
sub
jno
inc
adc
sub
push
mov
or
data16
or
bound
cwtl
jl
push
jge
inc
fcomip
jg
stos
jg
leave
hlt
push
cmp
popf
movsb
sbb
sbb
jmp
jmp
lret
cltd
pusha
pop
je
test
push
out
cmpsb
popf
in
dec
in
ljmp
push
subb
xchg
adc
jg
jecxz
mov
enter
mov
pop
mov
loop
lock
add
inc
mov
xor
jno
ret
lods
addb
or
mov
cmp
cwtl
or
adc
inc
jb
fcompl
jno
mov
sbb
rcr
sbb
or
sbb
xor
push
jo
or
mov
adc
je
cmpsl
push
push
dec
sarl
sub
scas
sbb
pop
dec
cwtl
xchg
and
sbb
sub
and
ret
sbb
adc
xor
and
or
movsb
sub
xor
lds
cld
lret
pop
rorl
mov
pop
mov
in
mov
ret
push
sub
cmpsl
sub
fs
sub
testl
fldt
shll
leave
xchg
cmpb
jmp
test
aas
enter
jp
mov
sbb
loop
inc
sbb
xchg
jle
inc
insl
lods
cwtl
stos
je
std
enter
cmp
out
test
lret
jmp
cmpsl
dec
in
xchg
jge
and
icebp
ljmp
nop
and
sub
sbb
popa
fnsave
mov
sarb
movsl
mov
rcrb
dec
xlat
dec
rorl
adc
or
jge
gs
ja
ljmp
fiadds
scas
jg,pn
cmp
mov
cmp
sub
jne
jmp
cmp
imul
call
dec
pop
sub
dec
out
aaa
mov
clc
aaa
sbb
mov
mov
loop
stos
std
cld
filds
ja
fnstsw
inc
cmc
dec
or
cmp
ds
jp
cmp
mov
sbb
jnp
mov
xor
cmp
cmp
dec
stc
pop
cmp
jnp
push
shlb
mov
xchg
push
jge
push
pop
lret
outsb
xor
je
stos
pop
dec
mov
add
or
dec
rorl
fiaddl
aas
adc
rorb
cli
lock
pop
test
push
lret
divb
and
pop
cld
addl
lahf
movsb
ret
lahf
stos
sub
lods
sub
aam
int3
xor
andl
mov
in
and
mov
outsl
cmpsb
inc
pop
out
or
cld
aam
shll
push
hlt
xor
mov
inc
jmp
rcll
movsl
fldl
hlt
dec
cwtl
imul
movsl
push
ds
adc
mov
filds
xchg
loop
ljmp
or
cmc
and
addr16
loopne
pop
sbbb
mov
andl
mov
loopne
sbb
aas
inc
dec
dec
or
sbb
jmp
addr16
addb
shll
cmpsl
es
test
dec
sub
mov
jecxz
pusha
push
xchg
icebp
jo
and
into
subb
xchg
add
or
in
js
cwtl
push
push
adc
mov
push
mov
cmp
xor
imul
cmp
fdivrs
shlb
ss
aam
inc
push
sbb
sbb
pushl
cmp
push
inc
push
mov
stos
pushf
cmp
daa
mov
pop
pop
sub
xchg
mov
std
mov
and
push
mov
lcall
xorl
mov
jge
repnz
xor
inc
pop
push
mov
out
mov
pop
popa
cmp
in
or
rorb
xor
aaa
sbb
out
jg
jge
or
or
jmp
xchg
rcr
xchg
mov
mov
in
sub
lret
mov
sbb
and
les
mov
adc
jg
mov
jb
aad
movsb
pop
xorl
adc
arpl
push
mov
lcall
sub
stc
pop
inc
stc
mov
jnp
mov
inc
jle
sbb
loop
add
jl
in
add
and
sbb
or
stos
jmp
pop
mov
xlat
inc
jmp
sbb
addl
push
adc
add
mov
rcl
pop
push
lret
sbbl
pop
clc
cwtl
xor
xchg
test
insb
ss
outsl
int3
and
pop
pop
nop
cwtl
daa
gs
loop
push
inc
hlt
sbb
ret
lds
jl
xlat
inc
insl
mov
jbe
pop
adc
adc
jno
in
loope
shll
arpl
leave
cs
dec
imul
cmpsl
jl
mov
in
cwtl
and
shll
adc
popf
mov
add
pop
leave
or
sbbl
stos
jae
icebp
loope
adc
enter
flds
push
cmpsb
add
daa
stc
in
hlt
mov
adc
and
daa
jmp
add
aad
ror
lret
pop
and
repz
or
aam
lret
xor
ficompl
xchg
adc
jle
sub
jno
push
add
fldl
push
stos
mov
aaa
les
or
adc
jbe
pusha
mov
repz
or
adc
mov
scas
push
and
cmp
pop
push
mov
or
aaa
mov
xorb
jmp
in
xchg
adc
cmp
or
dec
shlb
push
and
lods
add
fucomip
push
imul
out
inc
sbb
clc
rcrb
fsubrs
mov
std
add
jge
notl
insb
cmp
dec
adc
jle
jns
loope
aad
imul
xor
je
inc
data16
mov
inc
inc
jmp
pop
pop
sub
fmuls
mov
push
fisttpll
add
lret
inc
cs
adc
fisttpl
not
jp
cmp
and
out
push
int3
push
inc
and
loop
sbb
or
xchg
cmpsb
sti
jg
mov
aas
inc
or
test
push
clc
stos
adc
imul
lret
xor
loopne
cmpsb
xor
mov
cltd
push
mov
iret
add
add
xchg
sahf
sbb
into
pop
cmp
or
scas
dec
mov
orb
add
push
fcomps
das
das
or
pop
adc
add
mov
mov
je
imul
pop
mov
or
push
je
xchg
or
inc
fldt
inc
sbb
dec
aas
xchg
insl
lret
mov
shll
adc
inc
adc
subb
mov
and
test
cmp
test
pop
aad
or
mov
pop
dec
xchg
xchg
sub
stos
dec
fwait
les
aaa
add
mov
fiaddl
int3
nop
mov
scas
rolb
cwtl
mov
cmp
fnsave
lds
push
stos
mov
cmpsl
lds
lret
inc
ret
das
xchg
lcall
dec
inc
pop
mov
add
mov
adcb
es
cmp
mov
pop
xchg
jbe
jg,pn
cmpsb
push
fs
adc
cmp
idiv
push
mov
pop
pop
add
inc
or
sub
and
aas
test
inc
mull
jns
xor
xor
rolb
add
imul
mov
mov
mov
scas
loope
inc
stc
mov
and
push
xor
test
mov
addb
mov
lcall
adc
jg
lret
sti
pop
push
cltd
dec
or
jnp
in
dec
xor
pop
addr16
xchg
out
iret
cmp
mov
xor
movsl
insb
inc
movsl
and
fstpl
and
mov
cmpsb
push
mov
mov
fimuls
lea
daa
test
fmul
inc
push
daa
cmpsb
and
mov
pop
aam
sbb
mov
js
mov
jge
push
push
iret
mov
fs
dec
or
cmpl
repz
loop
call
xchg
cmp
call
dec
mov
jbe
shrb
es
mov
jns
sar
ret
shl
aas
or
sub
adc
sub
jbe
jge
jmp
negb
jns
les
xchg
add
call
mov
push
data16
sahf
out
adc
dec
in
jmp
cmpb
addl
push
mov
cmp
faddl
cmp
mov
sub
mov
in
or
push
jp
jle
test
sub
xchg
mov
push
fildll
test
dec
jmp
addr16
xor
mov
outsb
pop
sbb
sbbb
iret
repz
or
push
mov
addl
sub
fsub
enter
sbb
ja
add
dec
fidivs
mov
sub
repz
mov
jmp
adcl
ds
ljmp
adc
in
addr16
ret
aad
outsb
mov
xchg
pop
sub
mov
xchg
bound
movsl
fs
roll
sub
push
scas
imul
sti
adcl
or
push
push
movsb
loop
xchg
or
fldt
or
and
add
xchg
pop
push
push
jbe,pn
enter
cli
sbb
push
lret
mov
inc
and
insl
pop
imul
xchg
enter
daa
push
sub
jl
inc
icebp
imul
icebp
dec
fs
inc
mov
push
ret
push
fmuls
xor
in
fwait
push
mov
incb
jmp
sbb
xchg
xlat
xor
addl
popf
loopne
jge
dec
mov
int3
sbb
xchg
imul
jmp
loopne
daa
pop
adc
cmpsl
cmp
pop
mov
inc
mov
into
or
lods
xchg
jae
sti
inc
cld
push
shll
stc
ja
cli
std
mov
in
or
repz
in
sbb
jbe
dec
flds
arpl
fcoml
shll
sarb
push
or
sarb
jae
pop
sti
xchg
es
int
push
add
test
mov
jne
call
lret
mov
jns
jg
loopne
cmp
dec
lods
ds
add
leave
test
fsubrs
push
push
insl
pop
pop
stos
push
fldl
jmp
dec
inc
jmp
jg
xor
mov
adc
xchg
outsl
pusha
lods
pop
into
jo
clc
andb
mov
mov
xor
inc
sbb
jno
and
adc
daa
aas
xchg
push
mov
sub
add
std
cmpb
sbb
sbb
or
mov
clc
sahf
xchg
fnsave
push
xor
sub
pop
vpmacssww
cld
jae
shl
in
dec
imul
add
in
stc
jo
fdiv
inc
fimull
inc
push
sbb
mov
pop
fs
mov
add
ja
or
add
dec
sbb
lahf
push
aam
data16
popf
inc
pop
pop
push
adc
mov
push
dec
gs
or
hlt
pop
mov
mov
leave
and
pusha
stos
push
int
stc
das
imul
out
sbb
je
inc
dec
mov
mov
or
arpl
xchg
aad
sti
sub
out
jmp
shl
and
aas
mov
pop
xchg
jne
add
and
add
inc
add
add
add
or
or
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
call
jmp
mov
or
mov
orl
add
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
or
mov
addl
add
movl
cmpl
je
cmpl
jge
jmp
push
push
call
mov
dec
mov
jmp
mov
sbbl
mov
sub
mov
orl
add
mov
jmp
movl
mov
mov
andl
add
adcl
mov
addl
mov
mov
orl
xor
add
cmp
movl
je
jmp
add
mov
sub
mov
subl
xor
andl
add
cmp
mov
movl
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
jmp
jb
xchg
repz
jb
adc
mov
fsubrs
std
mov
jo
loop
jo
dec
push
mov
std
cmp
insl
sbb
sarb
pushf
jo
sub
push
mov
sub
std
imul
xchg
jnp
movsl
stos
add
sbb
imul
or
out
sbb
pop
adcl
mov
mov
push
neg
jmp
inc
mov
cmpsb
in
xor
lea
mov
aam
lcall
testb
mov
mov
sbb
push
dec
in
jo
lods
movsl
je
pop
mov
and
loop
cmp
es
fistps
mov
inc
sub
or
add
and
dec
mov
jns
int
test
fwait
mov
jb
mov
add
and
in
pop
adc
push
js
xchg
outsb
lcall
jg
jae
inc
bound
stc
jo
jle
cmp
jb
ret
ret
mov
mov
push
jmp
xlat
fwait
scas
dec
push
loopne
mov
inc
dec
fs
push
lret
pop
or
pand
ss
push
xchg
mov
dec
mov
jne
add
mov
and
mov
leave
pop
sub
jne
pop
enter
and
jmp
xchg
xor
jl
mov
xchg
sbb
cmp
les
adc
cmpsb
adcb
or
imul
push
in
arpl
pop
into
sub
rcr
sub
sub
cmp
mov
adc
sub
push
adc
aam
inc
jb
jmp
fnstcw
sub
sbb
inc
add
outsb
mov
arpl
mov
lcall
pop
push
push
or
int3
xchg
or
mov
pop
xchg
sbb
enter
push
mov
dec
xor
loope
push
jno
cmpsl
sarb
pusha
pop
ret
bound
xlat
lock
psllw
sub
outsb
xchg
out
mov
jle
rcrb
inc
lcall
sbb
adcl
sbb
movsl
xchg
lods
mov
xor
lret
data16
out
sub
aam
sbb
push
sub
or
jl
push
mov
add
mov
push
aad
xlat
rcrb
or
xchg
cli
mov
jmp
outsb
rcrl
fsubrl
movsl
mov
xchg
mov
clc
pop
and
movsb
xchg
mov
fcoms
jo
inc
scas
sbb
popf
cmp
inc
fidivs
sub
and
xchg
es
scas
sahf
lock
dec
push
pop
xor
sbb
mov
imul
pushf
xlat
movsl
in
dec
addr16
and
icebp
and
sub
xor
arpl
jne
ret
mov
or
adc
adc
mov
aad
push
nop
dec
push
fucomp
mov
pop
pop
mov
lds
mul
add
lahf
sub
test
jge
repnz
rcr
movb
dec
stc
jno
jmp
cli
xor
push
xchg
mov
test
aas
mov
dec
sub
and
or
pop
movl
lret
and
iret
push
dec
dec
cli
xchg
mov
jne
icebp
call
jbe
imul
mov
cli
addr16
or
aam
or
add
add
shl
lods
lcall
dec
into
cwtl
or
aaa
inc
repnz
jp
cld
int
loope
and
mov
jbe
jle
cli
lock
out
gs
fwait
jbe
push
mov
sbb
adc
test
enter
aas
mov
repnz
rcrl
lret
nop
pop
sub
sub
add
test
push
lock
push
cmp
push
sub
sbb
into
cmp
out
push
popa
cmp
mov
pop
enter
in
add
rclb
fwait
sbb
rolb
into
repnz
and
jl
mov
mov
insb
dec
into
dec
fs
xchg
cwtl
fs
xchg
cs
ds
mov
pop
ficompl
xor
xor
pop
xchg
dec
jb
int3
mov
in
mov
sbb
lahf
pop
push
push
inc
daa
or
add
pushf
sar
mov
sbb
fsts
pop
aas
sbb
aad
js
es
push
or
adc
jl
movlps
nop
sbb
and
and
push
out
inc
mov
xchg
outsb
mov
inc
movsb
sahf
or
in
scas
pop
std
xor
shlb
outsl
dec
pop
outsb
pop
sbb
adc
loop
repnz
jnp
lds
mov
or
ljmp
xchg
rcl
xchg
adc
mov
xchg
jp
mov
arpl
out
ficoms
push
mov
int
push
cmp
nop
ljmp
and
jno
cmp
and
xchg
xor
stc
sarb
xchg
lcall
xchg
fsub
adc
mov
ret
fnstenv
cs
test
stc
dec
jne
fwait
or
or
cltd
mov
or
dec
adc
mov
inc
cmpsb
adc
movsb
test
jne
data16
test
addb
loope
mov
mov
mov
pushf
fiadds
ja
sub
push
inc
int3
test
jne
fbstp
test
xchg
pop
jne
add
xchg
jo
movb
cmp
inc
fiadds
fadds
mov
addl
test
fisubl
mov
mov
xchg
and
dec
inc
push
xor
adc
lret
pop
push
or
test
lods
addr16
pop
and
andl
pop
outsb
dec
outsb
mov
mov
mov
in
subb
xor
les
clc
push
nop
mov
mov
clc
mov
mov
aas
xlat
jle
xchg
mov
xlat
addr16
xchg
addr16
pushf
push
mov
xchg
popf
sub
adc
pop
jge
and
lods
cld
into
sbb
add
and
addb
fmuls
popf
insb
push
push
sarl
dec
jl
sti
jp
push
push
sti
pop
popa
jge
loope
fisttpll
outsl
add
dec
stc
stos
mov
mov
jns
jbe
mov
call
sub
out
out
mov
dec
add
repz
xor
jg
test
aaa
push
loopne
and
andb
cwtl
ss
int3
mov
std
pop
dec
popa
or
mov
add
scas
push
pop
inc
adc
repnz
jle
aam
fwait
ds
pop
je
out
aas
test
or
and
shlb
mov
mov
mov
repz
hlt
mov
jns
xchg
imul
std
sub
test
push
ljmp
or
sub
xchg
mov
add
pushf
jb
lret
es
mov
testl
into
xlat
and
cmp
sub
adc
push
cmp
lods
jne
xchg
test
jne
and
dec
mov
and
jne
pop
aad
arpl
cmp
push
add
lods
mov
cltd
adc
cmp
mov
popa
sub
in
or
pusha
xchg
ja
andb
je
xor
rclb
xor
xor
dec
xor
pop
xor
mov
ret
dec
mov
pop
inc
xor
jmp
out
mov
or
negl
hlt
lcall
sahf
inc
and
cmp
mov
or
add
sti
and
cmc
fs
sar
xchg
inc
mov
fwait
cs
mov
aad
push
push
sbbb
outsb
mov
shlb
mul
lods
jge
pop
ss
insb
mov
or
out
dec
pop
adc
aaa
mov
jnp
mov
and
jl
pop
sbb
rcl
cs
shlb
imul
mov
mov
xor
loopne
addb
add
call
test
mov
out
mov
ror
scas
pop
jns,pn
xor
jle
mov
ljmp
clc
push
scas
stos
cld
or
fnstcw
ret
add
mov
xchg
add
pop
pop
inc
cltd
or
ret
add
dec
leave
lret
gs
fstl
addr16
mov
out
fsubl
xlat
jae
lcall
adc
mov
std
and
pop
stc
das
fstps
imul
aas
fucomip
iret
jge
jl
jb
and
lahf
lea
mov
fnstcw
jecxz
pop
iret
fs
scas
mov
js
cltd
mov
push
jmp
xor
test
push
out
push
or
mov
cmc
out
cmp
stc
lock
ds
sbb
and
or
enter
jb
push
add
mov
cmp
leave
movsb
sbb
arpl
dec
mov
movsb
movsl
adc
jo
les
incl
add
mov
repz
mov
sub
and
inc
fidivs
ret
push
pop
test
jge
jo
int3
inc
test
out
mov
mov
in
adc
js
cmp
cmp
cmp
cld
fcompl
cltd
inc
aam
sbb
mov
push
shl
fstpt
inc
mov
iret
jo
push
pusha
and
sti
push
mov
mov
dec
sub
and
push
inc
pop
push
xchg
pop
cld
scas
loope
int3
lea
xchg
jge
or
sbb
mov
mov
dec
sbb
in
dec
lock
jo
aas
pop
repz
ret
add
gs
jbe
movsb
mov
jg
testb
loope
mov
pushf
dec
jmp
pop
scas
iret
push
rclb
imul
imul
sbb
sub
data16
dec
fistpl
inc
pop
push
fldenv
lret
adcl
ljmp
lods
mov
pusha
sbb
jmp
xor
daa
cmpsl
cli
arpl
ror
mov
mov
or
cli
aam
lock
mov
lcall
mov
mov
mov
mov
push
outsl
mov
lds
stos
push
xchg
or
mov
and
jns
dec
sbb
out
sti
push
mov
push
xchg
adc
shll
cmpsl
ds
test
ret
xorb
lods
cmp
ret
mov
ds
in
mov
nop
push
xchg
mull
inc
fsubl
push
and
inc
or
xchg
das
xchg
ja
out
in
cld
lahf
inc
or
hlt
and
lret
ret
xor
repnz
push
leave
adc
xchg
mov
pop
xchg
pusha
xor
sbb
mov
es
js
test
dec
ffreep
ja
shr
into
and
fstps
aas
xor
sti
pushf
cmp
test
sahf
bound
xchg
loop
inc
xchg
mov
daa
sub
fisubrl
mov
adc
and
pop
out
pop
xchg
add
or
andl
decl
push
lret
das
adc
pop
fdivs
jge
stos
adc
jge
cmc
dec
xchg
stc
lcall
gs
mov
and
cmp
or
mov
sbb
mov
aad
mov
pop
add
int3
pop
sbb
pop
jae
in
fiadds
cmpsb
cmpsl
sub
adc
jl
in
cmp
arpl
pop
xchg
inc
sahf
leave
jns
test
pop
mov
orb
int
cld
mov
sbb
xchg
xor
sbb
scas
mov
es
aas
jnp
mov
mov
int
add
cmp
cltd
and
cli
jp
mov
or
add
or
popa
push
xor
addr16
inc
cltd
sub
or
movsb
fwait
int
clc
fs
outsl
sbb
mov
cmp
fucomi
xor
mov
inc
mov
daa
scas
js
pop
cs
popa
rolb
inc
scas
pusha
mov
or
xchg
mov
and
lahf
cmp
adc
push
ss
cli
lret
dec
sub
daa
setnp
push
aam
hlt
or
mov
stc
fdivrs
data16
push
and
mov
loope
sbb
sbb
mov
mov
xchg
stos
cmpsb
cmpsb
mov
sbb
mov
notl
cli
sti
cmp
mov
popl
or
insb
call
out
sbb
dec
sbb
mul
sub
or
popf
push
dec
sahf
js
loope
lds
icebp
lret
and
fstl
cmc
scas
test
lea
pop
cli
testl
fwait
out
cltd
ret
push
clc
or
or
testl
popf
or
stos
dec
jno
es
mov
push
ljmp
shl
jge
notb
jecxz
test
pusha
ja
push
add
pop
inc
in
add
repnz
push
add
ret
jg
stc
sub
lahf
mov
sbb
testl
sbb
cltd
hlt
xor
repnz
ljmp
push
pop
and
mov
aas
fs
fldt
cmp
test
dec
mov
inc
mov
enter
or
sbb
push
pop
data16
cmp
fldt
push
mulb
ss
scas
push
stos
mov
fwait
loop
mov
test
add
mov
pop
in
testb
sub
lret
jo
and
out
and
mov
fdivrl
repz
pop
xchg
push
mov
aad
dec
lret
nop
dec
out
flds
pop
std
lock
jnp
into
mov
test
je
jg
jmp
test
insl
lret
and
xor
push
dec
xor
mov
rcrl
sahf
inc
fcompl
pop
add
sbb
stos
push
jne
cmp
pop
pop
punpcklwd
loop
adc
mov
out
xchg
sub
sti
pop
fs
roll
mov
push
cmp
cmp
leave
lret
mov
out
jg
pop
and
cmp
mov
leave
jne
movsb
mov
xchg
aam
xchg
aad
mov
movsb
lods
mov
push
flds
in
scas
or
dec
jp
daa
cmpsl
pop
jmp
testl
dec
push
mov
shrb
fucomp
icebp
push
mov
rolb
push
ss
in
xchg
loopne
dec
ds
dec
and
mov
mov
xchg
cltd
add
inc
add
mov
cld
or
stos
and
leave
icebp
in
xor
pop
jg
iret
ret
mov
and
cmp
sub
hlt
repnz
bound
vpmacssdql
fistpll
test
xor
jae
or
out
dec
jge
cld
pop
xchg
clc
mov
pop
and
push
cmp
push
sahf
mov
xchg
mov
push
push
sbb
rcll
sub
push
cmp
adc
xchg
insl
sti
rcr
xor
aam
adc
mov
xor
pop
xlat
jns
leave
push
fucom
imul
xorb
loope
mov
cmp
sub
jno
subb
push
ss
into
stc
shlb
rorb
stos
xchg
ficompl
ret
jp
fcmovnbe
test
mov
test
push
hlt
add
xchg
mov
ja
js
cmpsb
popf
and
nop
mov
addb
pushf
test
js
sub
popa
pop
subb
mov
or
mov
cmp
jb
mov
icebp
fstpt
rclb
or
mov
dec
out
cmpxchg
push
xor
sbb
hlt
mov
cmp
inc
jns
and
je
xchg
adc
mov
data16
jbe
jnp
jg
bound
xor
mulb
aad
lods
add
sub
xlat
push
movl
mov
fbld
repnz
push
icebp
xlat
xchg
loope
pop
jl
mov
clc
insl
inc
add
sub
jno
add
ds
repnz
add
push
push
je
aam
shll
push
lahf
inc
adc
fidivl
sbb
sbb
in
lock
pop
lret
adc
flds
mov
sbb
daa
out
in
faddl
call
iret
jle
and
jbe
inc
cwtl
rcr
sti
roll
cmp
inc
rclb
dec
push
insl
pop
addr16
pop
adc
daa
jmp
cmp
jmp
scas
cli
or
test
scas
test
mov
in
mov
lahf
std
aad
adc
push
std
into
mov
jno
inc
sahf
shlb
ss
out
add
mov
cmp
jno
ja
mov
popa
jl
jns
sub
xlat
mov
rcll
xchg
mov
sub
leave
fwait
push
icebp
xor
std
cmp
icebp
fldenv
das
out
pop
jbe
jl
cmp
push
lahf
pop
adc
in
jae
jle
cmp
cmp
xchg
dec
sbb
lds
sub
xchg
cmp
mov
scas
push
sbb
mov
jg
push
or
lahf
inc
xor
xchg
adc
mov
movsb
mov
pop
push
mov
pop
fwait
jp
cmp
add
hlt
pop
mov
aam
test
xchg
imul
inc
push
and
cmp
bound
sub
decl
hlt
fisubs
pop
int3
sbb
insl
xchg
les
cltd
pusha
or
rcr
sub
xor
mov
mov
jge
adc
push
imul
stos
jge
bound
add
mov
stos
pop
inc
mov
cli
cmp
pop
and
mov
shrl
outsb
pop
add
push
and
mov
sbb
insb
and
cld
daa
add
mov
not
outsl
arpl
ret
jle
enter
enter
jns
fsubr
loopne
push
das
popf
out
push
leave
cmp
rorl
mov
shrl
cmp
dec
inc
fs
sbb
daa
insb
and
and
mov
roll
xchg
sub
scas
pop
xlat
popa
sbb
sbb
inc
hlt
shll
inc
xchg
shlb
jns
adcb
add
pop
call
jo
popa
xchg
mov
cmp
in
jmp
daa
add
jmp
sbb
xor
int
std
xchg
dec
movsl
loope
popl
ja
fdivrl
loope
lcall
or
cmp
cltd
xchg
jbe
mov
sbb
inc
sub
lahf
out
enter
es
add
jno
pop
call
pop
pop
jg,pt
push
scas
out
inc
jns
aaa
cwtl
testl
cmpsb
ret
into
in
fsubrs
mov
jmp
pop
push
fnstenv
mov
inc
pusha
ret
jbe,pt
cltd
adc
adc
push
adc
int
cmc
divb
xchg
int
ret
xor
xor
aas
sub
std
iret
fstp
pushf
cmp
fsubl
jge
xor
and
loopne
stos
dec
sbb
shlb
xlat
dec
lods
pushf
bound
in
and
jno
stos
pop
in
aad
aad
sbb
aam
in
sub
xchg
pusha
push
pop
fistpll
insl
shlb
test
outsl
shl
popa
ss
mov
mov
mov
aas
rolb
iret
dec
mov
push
xor
sub
jl
aad
jns
and
jle
xor
adc
loop
sub
xor
cmpb
push
dec
mov
out
enter
leave
test
add
loop
and
out
jae
enter
xchg
imul
fstps
mov
je
cmpsl
mov
and
mov
lds
dec
add
aaa
stos
xor
xchg
pop
mov
mov
fsubrp
sub
xchg
scas
mov
out
pop
push
xor
lods
fwait
and
aaa
imul
aaa
pop
inc
cli
test
cmpsb
rcr
xor
or
es
out
push
add
xor
sub
shll
mov
push
sbb
xor
lahf
cmp
int
xor
pop
lahf
mov
jnp
dec
and
xchg
pop
bound
adc
sub
enter
in
outsb
lds
repz
stos
cmp
xchg
lods
loopne
pop
lret
adc
test
xchg
mov
mov
sahf
xchg
cmpsl
insb
insb
xchg
aaa
mov
or
xchg
push
cmp
add
mov
xchg
inc
pusha
sahf
or
imulb
mov
dec
jmp
inc
ret
inc
je
aam
scas
xchg
jb
jge
xchg
dec
mov
dec
adc
inc
popa
push
fdivrs
and
test
fs
add
lret
lcall
jmp
scas
add
push
add
mov
mov
pop
sbb
popf
sbb
jge
ds
sarb
xchg
sbb
out
sbb
dec
ret
mov
aad
std
cmc
xchg
cmp
jg
add
add
mov
adc
xchg
je
cwtl
inc
mov
cmpsb
add
shrb
rolb
cmp
sub
inc
orb
adc
mov
push
icebp
mov
in
mulb
push
adc
mov
test
ja
cld
xor
insl
inc
sbb
sbb
dec
xchg
lods
jecxz
addr16
arpl
fnsave
daa
out
fcom
aas
movsb
pop
cmpsb
pop
enter
cmp
repz
mov
cwtl
fmull
mov
call
mov
ret
mov
jb
in
add
outsb
adc
ja
dec
push
rorb
pop
outsb
push
jmp
cmp
or
jg
fadd
cmp
int3
loop
xchg
hlt
sbb
test
in
sub
stos
push
mov
aas
movb
mov
es
pop
lahf
pop
and
lahf
ds
cmp
cltd
mov
ror
xchg
jecxz
cmp
cwtl
push
xchg
fbld
push
leave
stc
mov
insb
out
jno
jbe
lock
pop
int
std
mov
and
cmp
movhps
sub
dec
lods
inc
push
addr16
xor
pop
xchg
fwait
sbb
cmp
and
pop
jmp
pop
push
xor
sbb
inc
xor
cmp
xlat
sbb
gs
push
jg
repnz
lods
cld
xor
imul
push
xor
push
cmpsb
shlb
sar
faddl
pop
popa
stos
push
popf
lock
inc
insl
dec
sbb
xor
ror
cli
sbb
into
sub
pushf
sub
and
xchg
arpl
fldl
mov
mov
in
xchg
jle
jo
mov
std
pop
mov
lock
push
jmp
mov
lock
mov
lret
or
aad
enter
rcrb
cmc
and
lods
xchg
and
mov
rorb
adc
fimull
scas
int3
xchg
movsb
aas
iret
mov
xor
xchg
aam
mov
test
mov
jp
and
iret
popl
sahf
rclb
pusha
cmp
mov
and
jecxz
aad
test
mov
les
fimuls
repz
fistpl
es
hlt
ljmp
arpl
pop
inc
into
daa
ficomps
pusha
mov
cmp
jmp
adc
push
popa
data16
add
fs
mov
jbe
insl
icebp
adc
out
xchg
std
sub
adc
push
and
cwtl
pop
mov
xor
adc
mov
movsb
fisubrl
mov
popa
mov
and
pop
lret
js
stos
test
test
add
fstps
call
nop
push
mov
ret
mov
dec
mov
and
jge
test
mov
pushf
pushf
and
jp
mulb
mov
or
icebp
jnp
adc
mov
inc
inc
aam
imull
loopne
xchg
add
scas
inc
xor
cltd
testl
cwtl
xlat
fs
rcll
insl
inc
xor
xchg
test
rorb
pop
scas
cmp
imul
cmp
xchg
mov
adc
and
pop
cmpsb
out
popa
out
mov
shl
arpl
insb
repnz
pop
shrl
lods
outsb
mov
or
mov
daa
and
rclb
push
stos
inc
fldenv
mov
cmc
push
dec
xchg
loope
test
lcall
fisttps
out
aam
cmc
mov
xchg
jae
or
push
mov
lahf
adc
in
sbb
sbb
cmp
pop
popa
jmp
repz
rol
rcr
push
scas
lock
push
test
jge
bound
and
dec
in
popf
sarb
in
xchg
ds
mov
jnp
dec
jb
sti
adc
fwait
jne
fistl
mov
mov
mov
repz
jp
out
pushl
iret
stos
addr16
adc
fistpll
outsl
lods
mov
subb
mov
lods
pop
sahf
int3
cmp
mov
mov
daa
adc
xor
pop
lahf
jl
xor
sub
pop
xlat
loop
lods
adc
rcll
jae
gs
xchg
inc
subl
movsl
adc
adc
or
pusha
pop
mov
jg
adc
fcoml
outsl
mov
xor
gs
jecxz
dec
sbb
les
int3
pop
xchg
inc
xchg
daa
mov
stos
sbb
jp
adcb
dec
cli
or
pop
jecxz
dec
cmpsl
xchg
push
mov
inc
mov
ja
sbb
jp
dec
jb
outsl
xchg
fimull
fisubrl
sub
add
test
pop
or
icebp
mov
sub
cmp
mov
pop
sub
fcmove
into
or
out
cmp
leave
sbb
test
and
or
push
ss
testl
adc
mov
jmp
scas
xchg
sub
push
xchg
xchg
cli
sbb
sbb
jmp
cmpsb
loop
sbb
lret
sub
add
outsb
popf
xchg
mov
stc
cmp
dec
out
fcomps
or
mov
and
bound
jge
repnz
and
push
gs
jno
ret
xor
test
push
sbb
sbb
xchg
jb
stos
mov
lcall
inc
cld
in
fidivrl
shlb
leave
push
mov
mov
sbb
pop
push
adc
jle
xor
arpl
movsbl
dec
fisttpl
sarb
rorb
popa
lock
cmp
lret
mov
data16
nop
add
sub
les
iret
mov
fsubl
lsl
out
jge
in
jg
mov
mov
adc
xorb
push
rol
jle
movsl
and
or
in
cmp
mov
fs
divb
sbb
dec
mov
icebp
cmpsl
hlt
fnstenv
xchg
imul
sbb
jnp
adc
scas
cmp
inc
cmpsl
pop
cmp
std
pop
sub
outsl
add
sti
push
ret
push
jnp
cwtl
add
test
mov
shrb
cmp
sahf
push
xchg
dec
into
push
adc
andb
cs
fwait
mov
in
mov
push
inc
mov
push
adc
idiv
cmp
and
push
mov
adc
sbb
mov
lea
arpl
ja
xlat
mov
mov
mov
xchg
cs
xor
out
xchg
clc
push
pop
fcoml
jecxz
mov
xor
scas
xor
mov
cmc
and
sub
or
movsb
sti
jbe
inc
jecxz
lods
and
jecxz
adc
fcoml
pop
xchg
dec
in
in
lcall
out
movsl
xor
or
in
push
xchg
int3
out
or
jno
sarl
jnp
enter
xchg
sti
inc
pop
xchg
pop
aaa
push
push
adc
idiv
pop
sti
test
imul
outsb
push
mov
push
dec
daa
adc
nop
adc
and
lods
dec
sbb
idivb
and
insb
dec
daa
stos
lock
push
push
mov
mov
xchg
in
sbb
cmp
dec
xchg
mov
or
mov
popa
and
insl
imul
mov
daa
jns
xchg
pop
xchg
mov
adc
mov
cmp
sbb
pop
push
fdivs
iret
ficomps
add
dec
pop
pop
enter
arpl
push
jg
lret
pop
inc
and
int3
cwtl
pop
mov
les
add
cmpl
dec
inc
int
pushf
push
ljmp
iret
sbb
jle
or
sti
mov
in
add
shrl
dec
pusha
test
aas
fiaddl
push
add
int3
enter
loop
pop
push
leave
mov
shll
int3
fnstsw
xchg
mov
xor
jo
sbb
andl
jnp
and
decl
sarb
or
lods
popl
lret
jae
xchg
cwtl
movsb
cs
test
fsubrs
inc
fisttpl
xchg
sub
sub
ficoms
lods
cmp
pop
pop
mov
adc
filds
cmpsb
jmp
jecxz
mov
outsb
out
or
sar
test
test
and
loope
pop
test
aaa
sahf
stos
add
fidivrs
fnstenv
aas
cltd
xlat
and
or
fistpll
stos
pusha
jg
leave
mov
pop
daa
dec
cmp
es
insb
cmp
inc
std
mov
mov
dec
mov
fcoms
sbb
adc
adc
fnstenv
xchg
call
jne
pushf
fs
ljmp
mov
cli
xchg
test
stos
mov
jge
push
jbe
repnz
adc
in
mov
ffree
jns
adc
and
jg
dec
sbb
dec
lcall
push
adc
pop
dec
sar
push
dec
out
push
jle
arpl
js
out
sub
aas
nop
cmc
push
xchg
sbb
xor
and
sbb
xchg
push
dec
ja
stos
pusha
into
cmp
sub
aad
lods
add
ja
cmc
dec
bswap
jl
cmpb
adc
dec
daa
mov
imul
xor
pop
xchg
mov
push
adc
adc
cmpb
sbb
xor
movsb
push
dec
add
aas
dec
cs
jb
loope
test
inc
fisubs
mov
lahf
pop
jne
fldt
dec
adc
mov
orb
inc
jae
mov
out
movsl
and
cmp
inc
movaps
push
push
xchg
enter
and
cmp
cmp
orb
lds
sub
jmp
pop
jno
lret
mov
aam
inc
pop
push
jge
stos
mov
out
inc
or
xchg
mov
out
or
jge
mov
xchg
imul
dec
fwait
sti
js
movl
mov
xchg
and
iret
inc
cmp
jnp
cmpsb
lods
push
jg
mov
fsubl
shlb
dec
cmp
out
jae
pop
dec
shl
xchg
pop
testl
add
out
adc
into
mov
ja
xchg
xor
pop
mov
shl
shr
push
inc
insb
jns
je
lds
cmpsb
mov
je
jge
cmp
xchg
sub
xchg
out
es
pop
cmp
xchg
add
mov
popf
xchg
sbb
push
test
ret
cltd
adc
pop
ret
les
sub
push
js
lods
sbb
push
mov
and
push
daa
fsubrl
jl
into
jecxz
shrl
icebp
sbb
gs
loopne
dec
push
mov
cli
lods
jno
sar
or
mov
adc
pop
das
mov
or
es
xchg
xlat
cmpsl
jb
pop
sahf
hlt
pause
and
mov
jge
xchg
ja
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jbe
jmp
call
mov
dec
mov
jmp
push
push
xor
mov
add
mov
sub
mov
andl
mov
movl
cmpl
je
cmpl
jb
jmp
push
call
mov
dec
mov
jmp
andl
sub
movl
movl
subl
mov
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
pushl
push
pushl
pushl
push
call
cmpl
jne
xor
or
inc
mov
jmp
sub
mov
xorl
orl
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
pushl
push
pushl
pushl
push
push
call
cmpl
jb
mov
xor
sub
andl
xor
xor
inc
mov
cmpl
jl
jmp
push
pushl
push
call
cmpl
jb
mov
orl
xor
mov
xor
mov
sub
sub
mov
mov
sub
xor
mov
orl
sub
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
dec
movl
adc
lea
xor
mov
push
mov
sub
mov
add
mov
andl
lea
subl
mov
movl
cmpl
je
cmpl
jge
jmp
push
push
pushl
pushl
call
xor
add
dec
mov
jmp
mov
adc
mov
adc
mov
adcl
xor
andl
add
adcl
mov
mov
xor
mov
mov
orl
add
xorl
push
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
addl
mov
sbb
xor
mov
add
movl
cmp
movl
je
mov
jmp
movl
mov
movl
cmp
movl
jne
push
jmp
not
mov
mov
movl
cmp
jne
mov
xor
movzbl
sub
add
andl
xor
or
inc
mov
cmpl
ja
jmp
push
call
cmpl
jb
mov
movl
cmpl
je
cmpl
jge
jmp
pushl
call
xor
xor
dec
mov
jmp
mov
mov
sbbl
xor
add
imul
mov
andl
xor
add
movl
cmp
mov
mov
movl
push
je
mov
addl
add
mov
movl
cmpl
je
cmpl
jge
jmp
pushl
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
xor
add
sbbl
imul
jmp
imul
roll
pop
jl
pop
xchg
and
shll
pop
jo
fstpl
subl
lcall
cmp
pop
mov
ss
outsb
mov
sub
or
push
lea
sbb
das
ljmp
imul
int
mov
lds
sbb
xchg
pop
shl
dec
xor
and
push
insb
push
addl
mov
jno
mov
cmp
push
xor
insl
push
xchg
mov
push
gs
in
aam
pushf
rorb
add
jl
or
icebp
mov
into
bound
inc
lret
inc
icebp
fcmove
lds
imul
adc
divl
xor
pop
in
in
dec
inc
add
scas
xchg
icebp
popa
push
push
sbb
lods
imul
inc
pop
xor
pop
cwtl
ja
mov
sbb
and
xchg
arpl
ficoml
stos
out
adc
imul
sbb
popf
dec
inc
iret
test
sub
call
inc
das
push
push
pop
and
or
in
fbstp
push
xor
scas
or
mov
or
cmpb
and
je
in
mov
outsl
sub
pop
xchg
call
push
clc
loope
xchg
dec
sbb
ucomiss
push
adc
xchg
mull
xchg
push
add
divl
push
jp
mov
aad
sbb
mov
daa
sub
add
mov
ljmp
cmc
stc
iret
scas
adc
pop
jnp
mov
jecxz
push
out
inc
xlat
xchg
stc
push
int3
pushf
out
xchg
rcr
mov
mov
push
ret
in
adc
dec
dec
adc
bound
adc
mov
daa
inc
pop
jae
cmpsl
push
xchg
or
mov
je
pop
xor
dec
mov
add
sarl
inc
test
pop
mov
loop
in
push
lcall
xor
movsl
push
xchg
mov
and
pop
fldcw
mov
xor
ret
inc
movsb
arpl
pop
ret
push
dec
mov
cwtl
into
lea
lret
push
xlat
enter
ds
add
push
and
mov
fdiv
lods
pop
sahf
or
je
pop
hlt
sbb
jb
push
sahf
dec
out
dec
push
jle
gs
popa
sbb
je
out
popf
inc
xor
or
rorl
xchg
icebp
pop
pop
aas
out
ret
sub
leave
leave
ss
or
lods
mov
mov
push
clc
xor
sub
jne
lock
stos
dec
sub
xchg
inc
sub
add
mov
test
arpl
mov
mov
rolb
xchg
pop
out
or
mov
icebp
leave
repz
ret
xor
imul
xchg
insb
cmp
inc
xchg
test
pop
jo
sub
jmp
inc
xchg
cmc
mov
sub
jle
inc
push
mov
xchg
outsb
flds
mov
adc
les
out
sub
sbb
and
cmc
jg
loopne
movsl
push
add
outsl
je
push
scas
xchg
and
pop
stos
stc
or
daa
inc
mov
mov
mov
out
testb
xlat
dec
out
inc
push
movsl
jae
adc
jb
adc
adc
push
rorb
outsb
xor
push
inc
aam
stc
mov
cmp
inc
jle
add
jne
imul
fcmovu
and
jne
das
adc
cli
pop
test
fs
aaa
orb
push
mov
pop
ljmp
call
sar
in
out
xchg
insb
cmp
test
mov
jnp
mov
sub
push
jne
xor
aad
push
aaa
scas
out
mov
cmp
mov
mov
mov
sub
stos
jl
adc
lock
push
jb
in
push
push
sbb
sub
imul
imul
sub
movl
mov
add
jmp
or
scas
push
and
xor
loop
or
jbe
cmp
inc
sarl
mov
sub
es
daa
std
or
mov
adc
add
ret
jge
outsl
rcrb
jo
inc
jmp
xchg
cwtl
jne
sbb
dec
mov
mov
xlat
cmp
mov
rcll
insl
mov
sarl
cmpsb
mov
pop
shlb
xchg
out
xor
mov
adc
xor
fisttpll
int
aas
push
ss
popf
sbb
mov
in
or
add
scas
sti
pop
fdivrp
push
xor
xchg
and
ljmp
mov
adcb
cld
xlat
cmc
andb
dec
inc
lea
jno
xor
loop
daa
pop
xchg
xchg
xor
bound
sti
adc
in
cmpsb
add
push
fists
xlat
mov
lret
xchg
mov
push
mov
dec
sbb
mov
xor
adc
data16
jge
lret
pop
sub
fiaddl
int
rcll
clc
mov
aam
pop
push
and
test
xor
mov
sbb
popa
out
popf
jecxz
jae
adc
or
adc
or
fsubrs
mov
movsb
or
repnz
sbb
or
inc
imul
ja
loope
jmp
lods
jmp
mov
xor
cmp
push
clc
int3
stos
frstor
imul
push
dec
xor
in
sub
push
cmp
adc
pop
pop
lods
sar
test
pop
mov
mov
pusha
sub
mov
insb
mov
fdivr
jmp
cld
out
mov
push
shll
or
test
push
fs
inc
or
popl
imulb
orb
jmp
rolb
cmp
jge
jnp
add
lcall
pop
jp
mov
rcll
sti
insl
popl
inc
mov
or
mov
clc
mov
mov
lret
sub
cmpsl
xor
mov
rcl
pop
adc
dec
push
in
mov
int3
cmp
or
inc
xchg
inc
xchg
xchg
pop
call
mov
dec
sub
sub
inc
mov
out
ds
ljmp
test
xor
movsl
adc
and
sti
cmpsb
adc
dec
sbb
inc
mov
cwtl
xchg
mov
mov
lahf
cmp
ss
pushf
daa
stc
nop
inc
push
xchg
dec
mov
test
test
subl
rorl
xchg
out
inc
in
mov
not
out
sub
leave
mov
dec
aad
aam
cmp
test
incb
xchg
mov
pop
dec
sbb
out
xchg
aas
jae
jae
xor
fstps
push
adc
ret
cmpsl
pop
xchg
leave
imulb
adcb
or
and
inc
stc
jae
and
push
and
push
sbb
mov
stos
or
pop
test
rorl
sbb
pop
int
add
and
push
mov
ss
xchg
add
dec
cmp
sbb
xchg
sub
movsb
fwait
jb
jno
ja
mov
dec
adc
mov
bound
xchg
cmpsb
lea
daa
int
pusha
jmp
mov
dec
adc
bnd
jo
enter
xchg
sbb
lock
jb
es
sub
int3
sub
ljmp
xchg
lret
jne
aad
xor
and
outsl
scas
add
and
lret
jae
or
out
rolb
cwtl
fnsave
push
scas
jge
aad
aam
stos
pop
jb
adc
dec
nop
lahf
jne
or
mov
dec
int
aaa
jl
inc
or
mov
out
imul
mov
pop
lea
inc
cs
mov
add
rdtsc
mov
inc
les
xchg
cmc
push
mov
or
sub
cmpsl
adcb
out
jb
repz
add
enter
loop
cmp
dec
popf
fwait
out
and
push
mov
lods
push
enter
loope
sub
push
je
push
sbb
sbb
jmp
fmuls
data16
push
pop
dec
push
out
xor
add
jno
dec
scas
test
lods
fldl
std
ja
mov
int
repnz
and
mov
xor
push
daa
or
dec
push
stos
leave
iret
add
shlb
pusha
cwtl
sub
out
xor
stos
rclb
mov
lahf
sub
xor
clc
xchg
lret
movsb
mov
in
xor
aad
dec
ja
xchg
xor
dec
cmp
sub
jae
cmc
push
jmp
mov
rcrb
xor
push
sti
andb
fidivs
jge
popf
outsb
dec
sub
sbb
dec
repnz
sbb
adcl
negl
out
jne
jns
clc
popf
lock
xchg
xlat
dec
and
int
mov
imul
gs
es
add
cmc
push
pushf
pop
mov
push
shr
lret
jge
ficompl
mov
ja
ja
push
sbb
outsl
loop
sub
shlb
loope
mov
mov
arpl
out
pushf
xchg
cs
xchg
rolb
fwait
stos
aad
lods
add
or
adc
fiadds
dec
sub
arpl
imul
lock
cmp
and
jb
xor
or
sbb
in
loop
xchg
xorb
repnz
sbbb
test
test
mov
cmp
mov
jbe
cmpsb
add
fs
jno
movsl
sbb
int
dec
addl
mov
in
mov
jle
nop
inc
mov
push
mov
inc
sbb
cmpsb
lea
call
outsb
push
sbbb
mov
adc
and
les
jae
mov
idivb
nop
sbb
jmp
out
pusha
fs
mov
mull
out
inc
dec
sub
outsl
jge
mov
mov
dec
iret
push
stos
xchg
test
jmp
orb
sub
add
stos
decl
hlt
and
scas
dec
insb
ret
addr16
pop
fildl
inc
lret
and
jecxz
cmp
outsl
ds
mov
push
movsl
aad
ret
add
outsl
fiadds
sub
pusha
adc
pop
sti
setb
xor
xor
inc
mov
mov
dec
mov
and
push
inc
inc
cmp
sub
mov
dec
push
jae
jo
outsl
out
cli
cltd
fildll
jbe
orb
insb
vmovntps
scas
stos
push
imul
ror
ss
fs
aas
sbbb
and
cmp
loop
or
jge
lahf
dec
pop
das
jns
cmp
leave
outsl
push
addb
lret
inc
add
std
shll
mov
stc
jle
outsb
xchg
dec
push
cltd
cmp
call
imul
repnz
inc
cmp
cmp
out
cwtl
out
pop
clc
dec
push
das
sbb
jecxz
cltd
insl
xchg
rclb
jns
inc
popf
loop
frstpm(287
mov
sub
jns
mov
cmpsb
gs
push
xchg
in
rol
cmp
push
faddl
add
mov
insl
cmp
push
jae
or
movsb
das
xchg
fwait
pushf
mov
inc
or
ss
lods
in
xor
imul
sbbl
test
xor
mov
add
enter
lea
adc
stos
add
sbb
out
into
jge
add
pop
sub
je
pop
sbb
mov
popf
pop
icebp
enter
pop
sti
addl
rorl
pop
adc
ds
scas
out
cmp
lock
loope
cmp
nop
mov
gs
mov
jge,pn
add
and
repnz
rcrb
mov
adc
test
jne
sub
dec
jbe
int
adc
bnd
paddsb
pop
loope
aaa
cmp
xchg
sbb
outsl
add
pop
push
sbb
mulb
arpl
mov
and
mov
mov
jno
inc
lret
dec
test
xchg
test
jno
add
std
jnp
sbbl
imull
inc
int
scas
or
inc
push
adc
rcl
cmc
lret
daa
je
scas
vcvttsd2si
inc
imulb
dec
stc
ja
xchg
adcb
leave
hlt
into
ffree
jle
addl
jecxz
addl
imul
cmp
jg
or
sub
test
aam
leave
push
or
xor
into
rolb
lods
jle
fistl
paddd
mov
jg
lods
jle
pop
mov
jl
test
xchg
orb
mov
adc
xchg
fcoml
sarb
mov
pop
pop
cmpsl
pop
and
xor
imul
clc
scas
mov
stos
cmp
push
sbb
mov
mov
in
pop
jno
js
ljmp
mov
xchg
add
or
pop
xchg
xor
mov
sbb
ljmp
adc
aaa
adc
aaa
imul
int3
aas
add
push
add
imul
jge
or
leave
sub
nop
lods
mov
inc
jo
inc
cmpsl
push
outsb
jmp
ja
repnz
or
or
insb
xchg
cmp
out
jmp
mov
je
or
hlt
push
push
test
loopne
push
mov
outsl
pop
push
imul
out
dec
adc
mov
cmp
pop
mull
pop
xchg
inc
cli
and
add
inc
mov
mov
das
leave
lahf
xlat
call
int3
sbb
cld
mov
mov
adc
int
shl
cmpsl
pop
imul
push
xchg
push
dec
aaa
cmp
dec
mov
lahf
shlb
push
stos
bound
jecxz
icebp
loope
in
dec
sbb
push
bound
stos
xchg
repnz
popf
cmp
sub
add
cwtl
sub
cmpsb
cmpsb
xor
aas
mov
push
je
stos
in
jae
aas
push
mov
and
mov
or
scas
ret
call
incb
into
iret
dec
mov
sub
lret
movsl
lods
xor
ss
iret
adc
ret
add
test
notb
aas
add
ja
xchg
cmp
push
sahf
or
imul
out
mov
mov
and
ss
leave
fnsave
push
sti
stos
add
push
xor
adc
cmpsl
dec
rep
mov
pop
dec
jge
scas
mov
xchg
add
nop
pop
xor
push
out
fsts
jo
std
in
pop
jb
icebp
mov
push
and
cmpb
popf
pop
adc
xchg
xchg
dec
stc
cmp
sbb
push
add
xorl
xchg
ja
xor
imul
mov
mov
ret
add
cmc
pop
mov
push
ss
pop
insb
sahf
dec
push
jmp
lret
in
out
addr16
xchg
xor
jb
outsb
nop
ds
into
pmuludq
and
mov
in
mov
xor
lds
stos
shl
sub
loope
lret
cmp
insb
sbb
imul
sarl
mov
fbld
test
pop
sbb
inc
inc
cmpsb
mov
add
jle
mov
out
push
sti
mov
pop
in
lcall
stos
jg
mov
lcall
xchg
fwait
out
lahf
pop
lock
es
pop
push
lock
or
loop
ss
xor
jns
scas
inc
pop
xchg
out
jge
lahf
adc
jno
loopne
clc
popa
xchg
stc
sbb
in
cmp
loopne
dec
push
add
and
jns
int
adc
mov
jl
lret
xor
xchg
xor
mov
fs
xchg
subl
dec
jo
inc
imul
xor
lcall
pop
gs
dec
aaa
nop
divl
fcmovnb
dec
out
adc
pop
lock
fnstcw
cmp
cli
and
pop
int3
mov
jo
push
cmp
cwtl
dec
jb
lahf
jns
lods
insl
pop
in
add
icebp
push
fcomps
fxam
inc
xor
xlat
mov
inc
in
jo
test
fwait
loopne
fisubrl
bound
stos
pop
jne
mov
sbb
push
inc
mov
repz
jecxz
jl
xchg
lds
in
decb
hlt
out
sahf
adc
inc
add
adc
out
mov
pop
lret
call
mov
mov
lock
or
push
inc
movsl
addb
test
pop
push
dec
inc
adc
cmp
loopne
test
sbb
fsubrs
push
sti
fxtract
cld
jne
mov
aad
orl
sti
xor
push
lods
out
addr16
sbbl
jns
xchg
sahf
sbb
or
pop
push
and
adc
andl
sub
jmp
sarb
aas
mov
outsl
push
or
lret
dec
push
mov
mov
pop
push
fisttpll
xchg
popf
push
call
xor
aam
inc
test
loopne
sbb
lcall
inc
or
jmp
adc
inc
jbe
in
push
pop
aad
mov
add
les
sub
inc
jmp
mov
idiv
aam
aam
and
inc
mov
jge
or
cmp
loope
xchg
int
adcb
daa
sti
or
lock
push
push
rep
cmpsl
xor
in
lods
add
popa
add
mov
push
adcb
repnz
dec
jbe
inc
aam
xor
dec
mov
mov
pop
scas
and
adc
hlt
je
jmp
mov
pop
dec
cltd
fildl
mov
daa
dec
push
pop
jae
jmp
push
fs
lret
nop
ret
popa
jmp
gs
insl
jno
jne
cmpsl
cs
inc
xor
sub
cmp
add
mov
dec
movsl
add
js
push
ljmp
mov
sbb
ljmp
jb
xchg
ds
out
cli
std
test
pop
scas
mov
dec
mov
jbe
pop
shlb
xor
jmp
mov
mov
in
cmp
popf
rcr
push
cmp
lahf
aad
mov
mov
mov
aam
iret
ret
xchg
enter
sahf
das
push
in
int
or
stos
popf
jle
pop
push
aam
rcrb
sbb
idiv
sub
or
loope
xchg
pop
sbb
push
adc
adc
loope
out
pop
sbb
jmp
mov
aad
stc
pop
pop
loope
test
pop
fmuls
dec
in
in
fnsetpm(287
and
pop
push
sahf
pushf
int3
sub
mov
es
in
and
pop
sub
xchg
or
mov
rcrl
inc
mov
mov
add
sbb
cs
dec
and
dec
xchg
lret
add
popa
xor
dec
dec
das
cwtl
pop
fwait
repz
sbb
mov
fwait
js
mov
into
fcoml
shr
shll
push
sbb
adc
loopne
jns
cmp
jo
jb
jge
push
sub
pop
add
cld
push
out
jg
jge
out
dec
cmp
in
in
pop
in
fwait
icebp
sub
sbb
and
mov
inc
aad
loope
jns
outsl
rorb
lcall
fisubrs
cltd
jnp
push
dec
jbe
rol
xchg
sub
lret
jge
sti
lods
inc
lock
adc
xchg
in
arpl
jae
rorl
das
pop
xchg
loopne
enter
and
xchg
fisttpll
addr16
or
repnz
add
insb
add
dec
fs
cld
loopne
enter
pop
les
dec
push
ds
push
in
xchg
mov
fstpl
mov
xchg
pop
cmp
xchg
mov
mov
push
and
int3
imul
push
add
stos
sub
jno
sbb
out
xchg
sub
enter
in
jle
repz
hlt
ds
cld
add
or
out
cmp
xchg
in
fs
jne
push
rolb
mov
and
rolb
out
cmp
xchg
arpl
mov
and
fsubrs
outsb
push
mov
pop
lods
sub
jge
and
arpl
imul
pop
add
ja
imul
fstl
push
in
and
sahf
push
sbb
jg
mov
scas
aad
mov
insl
cmp
mov
adc
pop
adc
pop
xchg
out
dec
xor
mov
pop
cmp
mov
ja
andl
push
sub
jge
sbb
inc
stos
insb
ja
hlt
xor
push
lods
insb
push
fstps
subb
call
out
sub
test
movb
mov
push
in
fxam
jp
pop
mov
jbe
aaa
add
push
ds
push
popf
les
and
data16
pop
xor
test
neg
mov
lds
xor
mov
cltd
add
mov
dec
dec
xor
push
icebp
sub
or
cmp
in
idivb
jecxz
inc
addb
stos
dec
fsts
sub
pop
or
jns
es
inc
fisubs
inc
outsl
mov
or
arpl
std
jnp
dec
popf
inc
mov
std
aaa
hlt
int
or
xchg
jge
sub
fldln2
loope
mov
jne
aad
loope
xchg
daa
dec
stos
jae
mov
fists
pop
mov
test
rcll
xchg
or
mov
clc
fnstenv
sar
or
test
and
lods
mov
adc
jo
mov
dec
mov
scas
cmp
inc
ret
inc
in
rol
cmpsb
sbb
int
cmp
pop
xchg
cmp
pop
push
hlt
jne
pop
mov
subb
push
sbb
pop
or
movsl
xchg
adc
loop
jbe
enter
or
add
xor
lods
mov
fs
aaa
frstor
xorl
dec
mov
enter
lahf
mov
clc
lock
cmpsl
mov
push
adc
xor
pop
div
scas
push
jg
sbb
jle
in
and
adc
xor
hlt
call
negl
and
aaa
notl
push
test
and
test
cmp
cwtl
cld
xchg
or
outsb
mov
sarl
mov
aaa
std
or
repz
into
iret
sbb
xchg
xlat
data16
or
adc
jb
cs
mov
pop
jae
push
push
ss
dec
lret
cmc
nop
fnstenv
cmpsb
sbb
data16
aam
sbb
mov
mov
aas
test
adcl
push
and
rcrl
js
arpl
pusha
lods
cmpsb
push
jecxz
push
pop
mov
lahf
dec
push
fucomip
stos
js
pop
xlat
dec
dec
mov
push
xor
in
fisubl
loopne
jno
scas
add
jg
inc
mov
inc
xor
data16
or
cmp
sbb
hlt
leave
xchg
jbe
imul
and
jbe
sub
lcall
xchg
jge
xchg
adc
or
pushf
mov
aam
mov
sub
push
mov
out
je
sub
ret
xchg
dec
imul
push
leave
mov
and
inc
movsl
sti
jnp
into
popa
test
jp
bound
test
xchg
in
jg
lret
dec
lods
sub
mov
push
outsb
ja
nop
clc
mov
add
adc
add
stos
daa
fmuls
jmp
push
pop
insb
imul
mov
call
stos
popf
cmp
idivl
cmp
inc
dec
popl
cwtl
and
fstp
addr16
sbb
scas
les
xchg
cmovp
or
sbb
sub
or
test
sub
lds
ds
aam
dec
adc
mov
pop
cmpsl
push
scas
adc
out
in
mov
mov
adc
and
jmp
add
inc
xorb
movsb
push
bound
push
mov
push
loopne
sarb
clc
dec
dec
adc
repnz
je
sbb
adc
pop
and
loope
sbb
add
ret
arpl
fs
xchg
aas
adc
mov
mov
jae
imul
es
loope
in
pextrw
enter
jb
movsl
int3
adc
jne
jmp
push
fcomps
adc
sbb
xor
in
in
jnp
ficoms
and
xor
and
xor
addr16
shl
jns
mov
pop
adc
mov
push
and
xchg
cwtl
gs
inc
mov
in
xchg
or
in
pop
dec
fdivrp
rol
sti
test
xor
sahf
not
aas
push
or
negb
dec
inc
ljmp
push
hlt
or
sbb
mov
imul
lcall
nop
xchg
lret
bound
adc
xchg
or
or
jmp
aaa
mov
adc
out
outsb
or
xchg
imul
imul
arpl
jb
and
jae
adc
push
add
leave
imul
mov
mov
mov
aas
gs
cmpsl
push
bound
jns
push
pop
jno
adc
add
dec
dec
jge
mov
fistpl
dec
ret
jno
int
repnz
cwtl
cmp
adc
dec
fdivl
rcrb
push
pushw
das
lret
movsl
imul
push
clc
js
test
popa
mov
ret
or
in
pusha
xor
mov
inc
mov
sbb
shll
fisubs
sbb
cmpsb
adc
dec
xlat
xorb
repnz
fwait
aaa
mov
adc
and
das
fcoml
enter
dec
add
sahf
fwait
rorl
loope
das
in
ret
cwtl
cmp
jl
pop
cs
insl
insb
insb
test
hlt
enter
jb
arpl
test
or
and
cmpsb
scas
xor
cmp
pause
ja
shlb
xbegin
and
mov
add
add
bound
cld
icebp
cmp
push
mov
and
push
jo
test
cld
loopne
mov
es
dec
popw
push
decb
rclb
push
js
pop
fsubs
xor
out
cmp
or
divl
push
cmp
push
mov
cmp
jl
jae
repnz
icebp
test
cmp
inc
jbe
jp
lds
push
mov
dec
mov
loop
inc
je
aas
movsb
hlt
aas
mov
insl
mov
addr16
sub
pop
adc
cwtl
addr16
mov
mov
cmpsb
clc
es
cmc
add
lock
xchg
dec
cltd
xor
and
inc
cmpsl
mov
js
imul
adc
in
stos
scas
insl
jmp
cmc
test
xor
fmuls
mov
and
sbb
jno
push
mov
enter
mov
pop
xchg
pop
loopne
lods
sbb
or
sti
mov
jmp
add
dec
jecxz
mov
iret
fsubr
or
push
pusha
insb
inc
insb
loopne
push
cmpsl
cmp
movsb
cmp
cmp
mov
pop
mov
sbb
outsl
insl
cmp
mov
xchg
push
out
mov
sarl
push
movsb
repz
mov
xchg
add
cmpxchg8b
or
mov
inc
adc
call
mov
sbb
push
data16
sbbb
inc
jae
mov
push
enter
inc
add
andl
jno
or
lock
dec
jno
and
push
xor
pop
cmp
mov
mov
jns
mov
sti
sub
jbe
push
pop
test
jae
push
lret
dec
scas
add
arpl
sahf
int
adc
inc
std
mov
inc
push
mov
aam
xlat
mov
xchg
mov
cmp
in
add
jno
lret
cli
jns
cmp
sar
por
jo
fsts
jnp
enter
fisttpll
pop
mov
repnz
add
loopne
mov
das
mov
fwait
inc
cmp
xor
lret
in
frstor
mov
pop
lea
jmp
shll
dec
adc
and
mov
sti
push
pop
cmp
pop
je
push
inc
roll
cmp
ljmp
lea
inc
cmp
cwtl
shrb
das
in
movsl
push
int3
mov
adc
lods
mov
pop
mov
into
arpl
js
leave
fidivrs
jne
js
inc
lds
sub
add
shlb
sub
mov
mov
repnz
js
push
mov
and
pop
icebp
cmp
add
mov
jb
mov
push
cs
sub
das
repz
add
ficomps
push
ss
add
mov
jns,pn
addb
adc
mov
inc
pop
mov
sbb
dec
mov
dec
xchg
je
stc
pop
insb
mov
test
or
lahf
lock
mov
fs
push
out
dec
pop
outsb
outsb
test
in
inc
shlb
mov
jmp
aaa
jno
lods
jmp
inc
gs
int3
pop
aam
and
cli
adc
insl
out
ret
xor
enter
jg
sbb
pop
sbb
lahf
jo
xor
ljmp
pop
adc
dec
jg
adc
pop
arpl
sbb
fcoms
xor
jb
jle
or
out
insb
mov
inc
nop
mov
mov
fcom
in
dec
xchg
stos
lea
inc
push
sub
cmp
jmp
push
adc
add
imul
outsl
stos
adc
lcall
inc
sbb
out
lock
loopne
push
sub
or
inc
lret
ljmp
ds
js
add
pop
and
jge
jo
cmc
add
movsl
push
xchg
loope
cli
inc
aas
stos
inc
shlb
fldcw
jno
push
or
orl
mov
clc
pop
inc
push
xchg
daa
cmc
fdiv
lret
movl
xor
pop
lcall
in
ss
in
loop
adc
aaa
filds
out
pop
xchg
add
and
popa
and
pop
stos
dec
test
popl
daa
push
insb
adc
nop
or
int3
les
inc
cs
fstps
add
mov
rorl
mov
mov
xorl
xor
rorl
push
jmp
jb
push
rorl
out
cld
sbb
inc
sbb
out
lods
fcompl
dec
mov
imul
nop
addr16
jge
dec
loop
iret
repnz
jmp
or
addr16
pop
hlt
mov
sub
aam
sub
mov
out
int3
sbb
jmp
xor
mov
ljmp
and
aam
inc
cld
mov
push
add
push
ljmp
dec
cmpsb
xchg
mul
fiaddl
and
bound
clc
cmp
test
pop
sahf
cmpsl
inc
sbb
adc
movsl
rolb
shrb
pop
sbb
inc
dec
repz
pop
int3
fsubrl
sarb
add
pop
inc
xor
pushf
jg
mov
nop
cmp
adc
push
push
mov
dec
into
mov
mov
test
ljmp
adc
xor
sbb
sbb
jo
jns
mov
movsb
sub
xchg
dec
push
push
shl
push
cli
and
jne
repz
lods
imul
dec
pop
and
push
add
inc
decl
jp
pop
xchg
repnz
jb
fstp
int3
notb
lods
mov
testl
sbb
or
push
stos
js
cmp
movsl
pop
fiadds
pop
sbb
stos
mov
jns
in
mov
outsb
mov
xor
aad
jno
push
or
sahf
mov
aaa
cmp
enter
rcrb
inc
cmpsb
add
stos
jo
mov
movl
jmp
orl
mov
or
xor
mov
or
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
and
push
xor
mov
sbb
mov
xor
movl
push
movl
mov
mov
andl
mov
inc
mov
cmpl
jg
jmp
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
mov
sub
xor
xor
mov
sub
mov
andl
add
sbbl
add
addl
imul
movl
mov
movl
cmp
movl
je
xor
mov
mov
or
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
push
mov
push
xor
movl
xor
mov
sbb
mov
sub
mov
decl
jmp
dec
daa
inc
mov
jae
cmpsl
cmp
inc
xor
jo
loopne
dec
loopne
inc
push
and
dec
mov
pop
sub
pop
xor
adc
sub
add
mov
mov
or
sbb
mov
sarl
add
xchg
fwait
adc
out
push
out
mov
mov
cmc
pop
frstor
sti
pop
push
cmc
sub
push
ds
pcmpgtb
dec
out
cmp
mov
aaa
cwtl
shrb
fs
in
add
add
cmpsl
jecxz
push
sub
inc
fadds
mov
mov
out
sahf
stc
stos
or
ljmp
test
and
xor
push
pop
add
cmp
and
mov
inc
in
mov
mov
loope
out
shrb
jo
iret
nop
pop
pop
rsm
cmp
push
cmovne
adc
sub
stos
sbb
insl
aas
lcall
xchg
mov
jno
add
aad
push
ret
iret
adc
ret
push
push
lea
cltd
jnp
xlat
jbe
shrb
ds
jl
lahf
add
mov
and
jb
push
or
hlt
or
fstps
xchg
and
cmp
outsl
aam
rol
mov
jg
shl
or
loope
xor
mov
imul
mov
xchg
pop
or
ficoms
fucomp
or
sub
mov
cmpsb
pop
sbb
pusha
movsl
mov
in
or
jnp
aas
shlb
push
stc
lcall
xor
push
in
mov
sbb
inc
push
push
xorb
dec
into
bound
lret
xlat
mov
stos
aaa
cmp
mov
cmp
sub
dec
mov
sub
sti
inc
je
and
out
adc
xlat
out
sub
jge
lret
mov
data16
push
lock
push
mov
bnd
ja
mov
in
sbb
arpl
add
sbb
xor
dec
push
pop
adcb
lret
sub
je
sub
push
xor
xlat
or
jg
jge
jle
fildll
inc
cmp
loopne
test
dec
into
rclb
xchg
pop
shll
clc
js
mov
aaa
push
jnp
sbb
movsl
stc
lods
mov
ret
cmp
in
lret
xor
adc
xchg
int3
push
mov
dec
rcr
sbb
sub
popf
jo
adc
mov
dec
test
push
imul
dec
ret
jp
sub
jno
mov
stc
adc
adc
ljmpw
call
inc
adc
hlt
leave
loope
leave
dec
jmp
mov
sub
and
mov
outsl
mov
push
cltd
stc
call
dec
arpl
and
sbb
enter
cmp
cwtl
push
fwait
lock
mov
jne
lret
leave
xchg
int
sbb
shll
inc
inc
mov
movsb
cmp
adc
in
popa
push
ss
and
enter
push
arpl
ficompl
fsubs
add
popa
rorb
xchg
xchg
lea
sbb
dec
jecxz
out
xor
sub
jecxz
repz
pop
jecxz
adcl
lods
es
cmpsl
dec
mov
or
push
repnz
nop
jmp
mov
cmp
fisubl
mov
inc
in
les
sub
mov
lds
pop
iret
imul
and
movsb
aas
mov
jg
sti
xlat
scas
lahf
sub
ret
and
add
dec
in
popf
xchg
dec
pop
pcmpeqb
ds
xchg
add
gs
ds
sahf
or
cmp
adcb
jmp
ja
sub
inc
mov
sbb
test
pop
shrb
jb
lods
xorb
rclb
popa
insl
data16
add
out
pop
bound
cld
lds
pop
sub
aas
mov
sti
sub
fs
mov
push
js
mov
out
test
jle
sub
xchg
xor
xchg
xchg
inc
xchg
call
js
sbb
xchg
out
call
dec
pop
pxor
pop
sahf
xor
push
lods
shl
mov
mov
xor
mov
repz
daa
bound
push
pop
lret
jp
pusha
cmp
decb
push
repz
flds
push
and
dec
pop
and
adc
mov
imul
add
cmp
fisttpl
sbb
and
jmp
cltd
sbb
fisubl
js
push
stos
ljmp
std
rorl
fld
xchg
jmp
cmp
les
data16
jbe
inc
loope
ja
scas
push
mov
mov
pop
dec
jl
rcr
in
pop
cmp
leave
xchg
cli
sbb
mov
add
push
mov
int3
xchg
inc
pop
pop
xchg
sub
and
jns
sbb
stos
mov
push
and
and
shl
mov
inc
and
jns
scas
jecxz
push
cld
push
scas
push
iret
in
jp
pause
test
aas
decl
inc
orb
sub
xchg
cltd
outsb
push
jp
jmp
into
adc
inc
mov
insb
movsl
pop
xor
mov
adc
pop
xor
inc
mov
and
int
cmpsl
xchg
ret
out
or
roll
pop
loop
and
mov
jmp
add
jmp
push
lret
out
add
nop
in
jle
mov
out
popf
cmp
arpl
fsts
sub
neg
add
cmp
adc
pushf
enter
jb
push
sbb
push
cmpsl
xor
ljmp
mov
jb
out
addl
sbb
lds
or
js
or
stos
jo
test
scas
add
mov
xlat
lahf
ljmp
push
cwtl
push
je
repz
mov
or
mov
popf
sbb
xchg
roll
in
stos
test
shlb
or
test
into
js
lock
mov
daa
jge
mov
add
mov
popf
inc
jbe
addb
les
and
push
iret
in
test
clc
stos
or
and
shll
cmp
fcoms
call
test
push
mov
and
push
push
dec
sbb
pop
in
subl
aas
pop
imul
push
xchg
popf
sti
enter
clc
in
cltd
sub
stc
pop
fsubrl
mov
ja
xchg
mov
sbb
xor
sub
les
leave
cltd
mov
fcmovu
xchg
jne
fstpl
lock
jmp
aaa
cmp
push
sbb
mov
xchg
int3
mov
mov
leave
adc
lret
scas
mov
jno
and
xor
mov
out
lret
xchg
jbe
jbe
cltd
popf
cmp
xorb
out
sub
jg
jnp
bound
cmp
fdivs
pop
aas
cmp
mov
push
inc
push
jmp
xchg
or
push
add
mov
sbb
pop
sbb
outsb
xchg
pop
test
cmpb
and
mov
les
pop
adc
xchg
push
fcompl
pause
add
mov
jne
pop
or
mov
add
add
stc
push
and
add
mov
dec
adc
and
in
aas
fmul
adc
jge
push
jle
xchg
dec
inc
push
mov
dec
push
enter
push
adc
popa
lss
or
das
cmp
sbb
jmp
adc
jo
test
sub
lcall
jmp
clc
hlt
jae
mov
pop
scas
sub
test
sbb
jno
cmp
mov
enter
addr16
jp
mov
cld
leave
hlt
mov
cmc
xchg
mov
ss
inc
in
dec
lds
mulb
mov
test
mov
mov
jns
adc
mov
ret
aaa
pop
mov
fidivs
fnstenv
jns
xor
lret
and
fstps
out
sbb
xchg
insl
and
test
push
xchg
aad
dec
sbb
shrb
pop
sarb
cld
les
dec
adc
fistpl
leave
and
in
and
add
mov
inc
pop
aad
pop
mov
jbe
pop
rclb
push
xchg
jae
adc
mov
je
sbb
push
xchg
in
int
sub
cmp
push
xor
popa
push
xchg
push
test
add
daa
imul
icebp
negl
orb
cmp
xchg
fadd
je
dec
xchg
add
into
inc
shr
dec
incb
dec
imul
shl
xchg
mov
mov
push
in
gs
imul
aad
addr16
aas
inc
ja
je
je
mov
out
lock
dec
push
dec
aas
cmpsl
cmp
dec
mov
and
rclb
push
push
negb
fldenv
fsubs
add
xchg
mov
dec
or
test
cmp
je
pop
pop
xor
cld
push
add
pop
ja
and
adc
fimuls
shrb
mov
jp
cwtl
stc
aas
jne
jg
xor
test
xchg
repz
dec
cli
lahf
xchg
outsb
lret
sbb
sub
and
jle
xor
inc
cltd
subl
mov
enter
and
pop
dec
icebp
in
lds
inc
icebp
pop
into
xchg
sti
fildl
jecxz
ja
sbb
xchg
pop
jns
and
adc
and
sbbl
xchg
xor
cmp
pop
xorb
movsl
aam
stos
mov
push
fistpl
xlat
cmp
add
cmp
xchg
jl
jne
xor
insl
mov
add
pop
mov
sub
adc
pop
cmp
xchg
andb
lock
in
adcb
sub
enter
jbe
out
hlt
cmc
sbbl
adc
mov
mov
loop
cmp
roll
stos
in
je
xchg
mov
or
mov
out
jle
add
mov
negb
cli
and
test
inc
pop
sti
sub
mov
dec
in
imul
jo
mov
jnp
cmp
add
popf
repnz
cmpl
je
pop
pop
mov
mov
xor
push
shr
xchg
ss
or
cmp
push
loope
sbb
lds
enter
add
movsb
fisubl
outsl
xor
xchg
loope
dec
or
jecxz
mov
call
aaa
insl
sti
shl
in
popf
scas
or
dec
cli
xchg
imul
lock
and
aaa
jbe
xlat
xor
gs
mov
aam
rorb
xor
cld
or
ss
mov
pop
addl
sbb
add
rclb
push
push
or
jp
loopne
pop
gs
adc
sarb
cmp
adc
orl
mov
push
or
pop
cltd
aas
and
iret
sbb
cld
dec
adc
scas
clc
out
xor
push
fisttpll
mov
cmp
arpl
pop
push
jae
and
inc
xor
testl
lea
sbb
jo
mov
hlt
andl
call
dec
or
mov
pop
loopne
cmpsb
lods
stos
popa
add
jecxz
fbld
outsl
insb
add
dec
popa
mov
sbb
ds
cld
ja
je
push
jp
add
mov
dec
sub
push
or
lahf
mov
rolb
cmp
negl
xchg
sub
jae
jae
imul
cmc
mov
xor
add
scas
cmpl
xor
pop
cmp
sar
stc
out
loope
daa
outsl
inc
xor
dec
sbbb
dec
test
test
insb
dec
mov
jp
xor
scas
dec
das
inc
icebp
push
shlb
jne
ds
in
out
sbb
aas
cmp
faddl
mov
mov
leave
cli
and
xor
push
dec
loop
cld
or
pop
sbb
rcrb
jne
stos
sub
jp
sbb
cmp
cld
inc
imul
and
mov
mov
aad
je
fisttpll
sbb
in
xchg
push
insl
outsb
dec
mov
pop
push
lock
xor
out
add
hlt
mov
mov
fwait
cmp
lea
in
mov
cmpsb
xor
ficompl
stc
lahf
dec
mov
stc
xor
sub
add
ja
popa
lea
mov
lods
jecxz
rcl
das
pop
add
inc
cmpsb
sahf
shrl
xor
dec
adc
and
lea
arpl
push
pop
cmovo
arpl
outsb
mov
fmulp
jecxz
xchg
scas
ljmp
aad
xchg
mov
sbb
outsl
and
sub
jns
add
cltd
shlb
icebp
js
and
xchg
loopne
or
repz
adc
movsl
scas
sbb
mov
or
or
mov
mov
jg
and
lahf
mov
xchg
cltd
arpl
inc
adc
push
fwait
push
jae
adc
pop
inc
aas
push
or
mov
test
cmp
xor
dec
mov
sti
pushf
stc
call
ja
sub
imul
fsubrp
aas
sbb
cmp
lcall
sub
push
ja
mov
cmp
add
sbb
sbb
push
insb
pop
mov
cmpsl
int
gs
popa
adc
lea
scas
lods
mov
or
sbb
sub
mov
popl
pop
sub
jne
imul
inc
fcomps
xchg
xor
mov
mov
ljmp
ficoms
aas
or
jmp
lcall
cmp
pushf
dec
lret
outsb
ja
cmp
push
aas
xchg
fnstcw
sub
pop
ss
jo
add
cmp
shl
mov
in
push
je
xlat
imul
test
dec
mov
jl
sarl
pop
inc
aam
lea
leave
and
dec
jno
cli
sbb
scas
bound
or
and
loopne
shl
or
in
in
jl
arpl
mov
loope
and
xchg
mov
mov
add
sti
pop
je
xlat
pop
push
rcl
and
cmp
pop
aaa
or
idivb
test
popf
imul
pop
mov
maxps
and
mov
cmp
mov
cmpsl
int3
pop
cmp
xchg
shrl
inc
arpl
int
adc
dec
mov
pop
nop
jge
mov
inc
call
les
mov
inc
aaa
adc
sub
fwait
jb
les
ds
push
cmp
mov
mov
push
cmp
aam
testb
adc
in
inc
adc
out
lock
loopne
call
dec
push
dec
sub
cli
int3
das
xchg
mov
push
into
imul
das
jne
mov
fistpll
push
stos
out
and
enter
out
push
gs
add
pop
push
inc
mov
cs
arpl
pop
sbb
adc
inc
out
data16
mov
insb
shll
mov
or
out
mov
rorb
mov
cltd
push
sti
mov
or
dec
sti
test
or
and
ds
out
loopne
inc
ret
call
xchg
push
sbb
xchg
fdivp
lods
push
dec
pop
les
fisttpll
inc
into
cmp
pushf
dec
aam
cs
lock
pmaxsw
add
xchg
outsb
jge
cmp
inc
push
hlt
stos
xor
mov
dec
and
cmp
data16
in
mov
fmuls
mov
pop
xor
and
mov
push
cmp
push
lods
aaa
jb
add
cmp
imul
enter
scas
inc
adc
loop
and
es
and
jg
or
in
pop
aaa
xchg
adc
and
ret
cwtl
cmp
adc
gs
mov
iret
add
subb
data16
cmp
aaa
push
jae
rclb
sarb
xchg
or
jo
push
and
imul
fs
or
popf
aaa
cmpsb
imull
add
and
repz
pop
xchg
addr16
mov
in
aas
rcrb
aad
add
sub
mov
jge
mov
sub
cmp
or
ja
xchg
jne
icebp
daa
mov
in
cmp
hlt
xor
fnstenv
test
aad
adc
mov
sub
jae
mov
inc
out
or
inc
xor
push
cmp
scas
push
mov
add
mov
fdivrl
add
aas
incl
mov
mov
divb
loop
mov
cwtd
jne
and
in
push
pusha
adc
jnp
mov
xlat
push
stos
sub
add
rorb
and
mov
mov
or
and
adc
adc
mov
cmp
pop
and
add
xchg
lea
cmp
ret
pop
adc
sub
adc
dec
push
mov
sahf
not
mov
arpl
rolb
rclb
jmp
dec
pop
rcl
and
pop
push
in
imul
mov
lret
ds
fsub
fsub
insb
push
int
mulb
cmpsl
and
sbb
mov
les
mov
dec
mov
adc
or
push
jmp
push
hlt
ret
fs
aas
xchg
sbbb
int
out
ror
fistpll
loop
scas
in
mov
push
mov
xor
stc
or
add
ret
lahf
adc
nop
sub
hlt
add
push
push
sar
or
stos
or
mov
or
movsb
xchg
xor
cmp
pop
sub
pusha
cmpsb
lret
jns
nop
adc
jecxz
decl
pop
push
sub
scas
adcl
ret
loop
mov
nop
xor
cmpsb
dec
mov
bound
cmp
inc
inc
fwait
mov
fistl
inc
xor
hlt
adc
cld
xor
pop
jmp
imul
xchg
jl
adc
pop
imul
mov
cmp
and
add
sub
and
xchg
adc
mov
mov
es
int3
adc
mov
es
xchg
insb
xchg
out
addr16
sbb
or
xor
sbb
xor
rorl
inc
or
inc
xor
jo
subb
cwtl
dec
dec
cmp
mov
push
sbb
stos
sbb
sub
jbe
xchg
pop
sbb
call
mov
push
popa
jb
jne
adc
insb
jno
dec
lret
fnsave
sub
mov
cmp
add
clc
mov
or
xor
fwait
inc
mov
call
jmp
notb
loopne
cmpsl
or
test
mov
jnp
loope
pop
in
call
in
sub
mov
add
call
xor
sarl
aas
out
icebp
mov
divl
xchg
cmp
mov
xor
xchg
fidivrl
pop
cmp
ljmp
subl
dec
cmpsb
sbb
cwtl
fimull
pop
xchg
insb
stos
mov
pop
in
sbb
xchg
enter
lret
pop
adc
push
clc
xor
mov
lods
invd
sbb
jge
inc
iret
notl
fwait
leave
shl
jmp
fcoml
fcoml
fnsave
xchg
cmpsl
or
scas
add
inc
nop/reserved
mov
xlat
das
jnp
inc
inc
jne
rorb
push
pop
cmc
orl
mov
out
add
pop
cltd
adc
imul
pop
push
insl
jb
int
shr
adc
in
mov
mov
in
ss
addr16
mov
adc
js
mov
mov
fldt
adc
sarb
pop
jle
fnstcw
mov
jne
int
in
cs
dec
adc
mov
jmp
adc
inc
push
es
outsl
push
inc
popa
iret
scas
in
lret
inc
daa
or
cmp
inc
xchg
dec
cmp
cs
xchg
add
dec
insl
jg
sub
jle
mov
fs
pop
je
and
and
sub
lret
adc
in
cs
lods
lock
fistpl
or
mov
xchg
ret
in
int3
mov
ror
pusha
fld
sub
or
adc
adc
mov
fstl
in
and
mov
hlt
iret
xchg
jmp
inc
sub
pop
test
pop
out
lods
add
loope
or
repnz
scas
jp
jb
jmp
sbb
les
aas
icebp
jmp
lods
addb
aad
mov
mov
dec
aaa
adc
int3
mov
icebp
cltd
sti
inc
xor
movsb
dec
push
out
in
dec
stos
inc
add
lods
sahf
mov
call
mov
popf
int
adc
jnp
mov
xchg
sbb
leave
stos
add
jnp
xor
xor
std
rcl
test
arpl
push
loopne
pop
shll
leave
cmpsl
push
orl
subb
cmpsb
cmp
aas
or
ss
sbbl
mov
xor
ja
xor
out
adc
mov
xchg
int
dec
cwtl
loopne
fwait
leave
popa
xchg
addr16
aas
fcompl
pushf
cmpsb
ja
pusha
cs
clc
mov
xchg
dec
mov
push
lock
lahf
clc
ds
andl
cwtl
mov
add
sub
arpl
arpl
call
pop
push
mov
mov
or
xchg
jno
mov
divl
cld
aam
rol
dec
scas
xchg
shlb
mov
cmp
push
pop
cs
inc
popa
jmp
iret
popf
int3
gs
mov
lods
ret
sbb
fcmovne
sbb
or
xlat
adc
sbb
sbb
gs
adc
xchg
fmuls
aaa
pop
outsl
inc
aaa
outsl
lcall
xchg
jg
ret
test
xor
fdivl
fmulp
xchg
mov
adc
xor
adc
mov
pop
ret
into
loope
ss
out
xorl
hlt
xor
mov
sti
loop
and
dec
cmp
jle
stos
insl
push
test
pop
pushf
imul
adcb
cmpsl
jmp
in
mov
lcall
ret
stos
movsb
subl
dec
jp
daa
ja
jmp
xchg
adcb
fdivr
in
outsl
es
or
or
sub
dec
inc
test
adc
test
inc
mov
xor
stos
lock
aad
test
sbb
cmp
xlat
cmpsl
pop
jns
or
ljmp
or
or
mov
mov
popf
pusha
nop
fcmovu
cld
add
lds
loopne
bound
cmc
sbbb
in
cld
pmovmskb
pop
movsl
icebp
imull
jl
add
int
inc
xor
mov
arpl
inc
sub
mov
push
push
mov
stos
out
jg
add
out
rcl
loopne
jl
movsb
jg
sbb
sbb
push
cli
test
cwtl
or
mov
lea
fsubp
cmp
daa
ret
mov
fldcw
mov
sub
rcl
outsl
in
xchg
inc
xor
push
cmp
sbb
pop
lret
cmp
adc
mov
fsubr
push
adc
jne
ss
cmp
repnz
cld
xchg
fnstcw
mov
cli
call
gs
or
clc
and
nop
sub
xor
mov
cmp
adc
fucomp
and
mov
jecxz
dec
in
push
push
lods
cmp
add
sbb
sbb
ds
scas
das
shlb
ret
jge
and
xor
and
scas
call
xchg
pop
adc
mov
rcll
faddp
test
xchg
rclb
cmp
dec
push
mov
sub
stos
or
adc
xchg
jns
or
add
shll
xor
inc
push
push
cli
jmp
fildll
shr
jne
outsl
repz
es
imul
sahf
call
sti
ret
popl
jmp
aad
in
lret
sahf
icebp
lret
jbe
lahf
cs
jno
add
dec
sarb
test
stos
mov
data16
mov
leave
mov
sbb
add
fs
in
inc
fisubl
dec
pop
push
js
pusha
dec
pop
dec
jmp
or
mov
and
dec
es
mov
ret
dec
inc
gs
mov
xchg
lret
xor
xchg
cmpsb
out
loop
hlt
lahf
sub
cmp
sbb
adc
mov
sub
inc
ret
lret
movsb
or
mov
mov
mov
xor
mov
jno
mov
xchg
outsl
mov
jb
je
jae
mov
or
mov
mov
pop
loope
test
xchg
mov
dec
arpl
dec
mov
cmp
xor
xor
fdivl
mov
ja
xorb
add
jne
xor
fistpll
and
and
jbe
jne
cmp
pop
jmp
aas
and
xchg
daa
pop
inc
jle
iret
sub
popa
and
push
int
ds
adc
xchg
mov
outsb
test
add
jbe
ss
sub
faddl
dec
stos
in
or
push
fs
dec
mov
lock
mov
out
jnp
xchg
shl
enter
mov
or
add
sbb
inc
test
mov
mov
out
loop
sbb
mov
add
inc
pop
lahf
call
subl
sti
inc
lcall
jle
push
es
xchg
inc
dec
fdivrl
cli
mov
mov
mov
add
pop
mov
jne
cmc
leave
sbb
pop
cli
push
clc
adcb
ret
push
mov
cli
loope
mov
pop
int3
jge
pop
ret
push
jns
or
rcrl
inc
jae
ljmp
or
dec
sub
xlat
cld
or
call
mov
mov
jl
cmp
lods
lock
addr16
or
in
rep
xor
stc
fildll
mov
je
shll
test
out
mov
fadds
mov
push
jg
ja
out
cmp
and
mov
jb
cmpb
push
lret
into
cltd
lcall
aas
sbb
aam
pop
cmp
mov
negb
push
jns
or
mov
seto
xor
hlt
in
subl
adc
cltd
loope
and
fists
inc
inc
xchg
pusha
aaa
jmp
mov
cmpsl
enter
mov
push
mov
fucomi
mov
gs
mov
and
cmp
pop
jg
dec
sbb
add
inc
je
test
xor
adc
test
mov
pop
aaa
test
and
addr16
inc
xor
lock
lock
fistpl
jmp
js
lret
fisttpl
mov
sti
hlt
mov
int
mov
imul
dec
lret
iret
aad
imul
mov
jo
dec
xor
jecxz
mov
imul
push
jecxz
pop
in
add
cmpsl
jge
loope
push
fwait
push
or
dec
ljmp
int3
mov
jno
sarb
adc
icebp
jmp
test
test
jl
or
jg
out
repnz
and
push
mov
cld
push
dec
lret
sbb
and
in
xor
pushl
je
popa
mov
push
xchg
in
lcall
mov
sti
test
pusha
movsl
pop
es
mov
and
ds
iret
test
fdivs
sub
mov
shl
pop
mov
popf
lret
mov
sbb
cs
inc
xor
repnz
push
inc
les
jg
xor
push
mov
pop
push
or
sti
out
add
sbb
inc
cmpsl
mov
gs
arpl
add
pop
insl
mov
inc
xchg
rol
mov
data16
lahf
push
pop
cli
call
push
sti
adc
dec
or
lret
mov
pop
das
pop
ljmp
xchg
xchg
mov
shrb
pop
andb
out
add
mov
xor
icebp
or
int3
inc
aam
sbb
sbb
xchg
pop
shlb
push
in
lcall
cmp
push
pop
push
push
cmp
adc
lods
in
pop
in
movsb
orl
mov
cmc
inc
stos
mov
test
xchg
jmp
aas
sbb
mov
push
les
pop
xchg
adc
add
std
hlt
sar
adcb
mov
ja,pt
divl
shr
inc
adc
push
jo
cmpsl
and
flds
jb
imul
sahf
mov
add
mov
shll
repnz
push
pop
inc
into
das
mov
cmpsl
repnz
shl
pop
pop
mov
std
mov
pusha
xor
dec
sub
adc
xchg
stos
jmp
fists
mov
ja
pop
add
lock
xor
int3
pop
push
xor
dec
ret
push
lods
sahf
jbe
xlat
movsl
mov
mov
stc
push
mov
adc
enter
call
push
loopne
repz
mov
push
movsb
stc
jns
pop
sub
mov
mov
mov
lea
vaddsubpd
mov
dec
push
not
frstor
enter
push
lcall
int3
mov
jb
fldt
pop
or
cmp
shlb
add
pop
pop
cmp
adc
std
idivl
cmpsl
imul
dec
outsb
add
and
scas
repz
mov
jbe
or
jae
orb
clc
cmp
clc
xchg
push
and
outsl
aam
pop
mov
lods
cmc
stos
dec
mov
xchg
push
add
push
test
push
pop
xchg
repz
dec
mov
ja
fnstcw
outsb
fdiv
aam
sbb
dec
imul
add
loopne
push
cld
jecxz
jae
xchg
cmpsl
jno
test
out
shlb
out
dec
jo
int
add
jno
and
jbe
call
cmpl
mov
and
xor
stos
cmc
pop
pop
and
pop
adc
xor
lcall
sub
pop
idivl
sbb
fistps
sub
fs
mov
jge
hlt
add
pop
dec
add
stos
ret
push
mov
xor
fdivrs
aad
sub
sbb
mov
mov
mov
push
call
xor
sub
add
push
std
popa
lds
out
scas
mov
mov
out
mov
push
cs
in
mov
and
fidivrl
leave
add
fwait
stos
xchg
mov
push
or
in
sarl
jl
push
push
cmp
ljmp
dec
xor
sub
ret
adc
mov
xlat
mov
out
jns
push
dec
dec
mov
in
aad
xor
push
xor
aaa
mov
fdivs
roll
sbb
jp
add
mov
mov
adc
xor
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jl
jmp
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
or
mov
movl
cmpl
je
cmpl
jb
jmp
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
pushl
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
andl
add
andl
mov
inc
mov
cmpl
ja
jmp
pushl
push
call
cmpl
jb
movzwl
or
mov
sub
movb
lea
mov
add
mov
movl
cmpl
je
cmpl
jle
jmp
call
mov
dec
mov
jmp
mov
sbbl
xor
sub
orl
mov
movl
jmp
cmp
cmp
add
movsb
in
jecxz
dec
loopne
mov
or
cmp
jge
inc
xchg
mov
dec
dec
sbb
push
repz
arpl
sub
fmuls
pop
push
sub
push
mov
rcpps
dec
sub
testl
je
int
lret
fsubrs
call
out
or
hlt
jns
out
lock
fadds
xchg
orb
div
jbe
mov
push
cmp
movsb
fwait
inc
jbe
sbb
pushf
out
cs
scas
movsl
in
inc
inc
pop
pop
sbb
pop
push
xor
daa
cmp
int3
subl
in
mov
loop
lds
repz
outsl
shr
mov
inc
sbbl
neg
or
sbb
cmp
fistpl
in
arpl
popf
std
ret
dec
mov
in
xlat
jp
outsl
push
sbb
sbb
iret
in
rorb
add
stos
stos
sub
fadd
mov
jge
movsb
and
sub
lcall
enter
fists
test
in
add
mov
and
rcrb
mov
lds
push
add
fldenv
add
in
stos
loope
mul
repz
shlb
xchg
pop
inc
add
test
mov
enter
fs
cmp
insb
lret
jbe
sub
add
shrb
lret
in
push
jbe
add
mov
scas
push
jo
mov
or
add
add
movb
popa
je
xchg
mov
lret
mov
stos
roll
mov
mov
xor
dec
pop
adc
fisttps
mov
loop
dec
mov
pop
xchg
aad
sbb
fdivl
inc
lahf
movsl
fnstcw
adc
lods
test
ljmp
shrl
sbb
sbb
ljmp
bound
jl
fwait
mov
adc
repnz
cmp
push
push
and
mov
rcrl
mov
jl
mov
in
xor
fnstcw
ds
out
xchg
jmp
in
sbb
xchg
cs
ss
push
dec
pop
xlat
add
inc
mov
ss
jb
sub
movsl
int
pop
mov
testb
jns
sub
sbb
sbb
inc
loope
lret
jmp
cmovge
and
or
fiaddl
jae
fistpll
test
pop
cs
loope
mov
clc
mov
lds
jbe
or
or
ret
movsbl
mov
cmp
xchg
or
pop
sarl
fisttpll
cmp
fcmovne
mov
pushl
xchg
and
fstps
ret
jno
mov
jmp
shlb
mov
push
mov
aas
rclb
fs
adc
test
cmc
test
cmpsl
push
pop
mov
stos
mov
test
pushf
xchg
sbb
sbb
scas
arpl
mov
pop
sub
lds
sbb
inc
fsubs
clc
scas
push
cmp
jmp
and
xchg
and
mov
add
mov
jle
or
mov
mov
xchg
fistpl
xchg
pusha
adc
icebp
fnstcw
or
sarl
insl
rcl
lcall
push
pop
les
sarl
cmp
jecxz
xchg
inc
adc
aas
rolb
mov
repz
cmpsb
sbb
enter
adc
iret
insl
adc
in
pop
insl
insl
mov
fsubl
cmp
mov
mov
lret
cmpsb
push
and
or
and
add
and
inc
or
jnp
xor
cltd
push
jb
out
sub
pop
outsb
std
cmp
cmp
push
mov
xchg
js
sbb
sub
repnz
addl
call
sahf
pop
pusha
int
pop
push
mov
divb
pop
cltd
and
inc
mov
pusha
orl
mov
mov
adc
xchg
lea
rcll
and
push
int
int
mov
mov
lahf
lock
inc
add
cwtl
das
ret
pop
lods
mov
stos
faddl
lret
adc
add
lds
gs
cli
jae
or
cmc
mov
push
mov
cmp
ret
xchg
and
pop
imull
in
inc
add
push
fwait
xchg
jae
pop
mov
ret
sbb
fmulp
test
ror
mov
sub
mov
inc
dec
enter
call
fiaddl
mov
pop
aad
addr16
dec
imulb
or
cmp
fisubs
xchg
lock
xorb
popa
outsb
mov
cmp
xchg
rcrb
arpl
test
add
out
adc
mov
dec
sbb
push
movsl
pop
mov
loope
cmp
aad
add
jnp
insl
cld
gs
in
lods
sbb
imul
test
clc
add
nop
mov
orl
mov
idivb
mov
mov
sbb
push
xor
sub
inc
pop
fs
cmovs
subl
mov
repnz
stos
mov
cmp
shr
sbb
clc
mov
lcall
negb
ret
test
stos
cmpsl
inc
add
mov
loope
das
sub
call
pop
dec
ja
ss
xor
les
cmp
data16
pop
inc
mul
scas
push
sub
pop
pop
push
jle
push
fwait
push
mov
scas
cmp
out
jbe
push
dec
fildll
call
sahf
push
mov
out
xchg
cmp
jbe
test
sbb
in
gs
mov
jp
fcoml
movb
and
stos
nop
mov
jecxz
or
loope
sbb
lret
nop
loopne
dec
daa
xor
xorl
push
mov
push
daa
fs
imul
std
xchg
pop
xor
jl
dec
nop
fiaddl
sbb
xchg
cmp
xor
outsb
scas
mov
jge
xor
loopne
push
xor
stos
sub
sbb
xchg
ret
xor
lock
jl
leave
push
ret
pop
xchg
out
sbb
cmp
rcrl
pop
or
mov
mov
inc
movsl
push
imul
notl
cmpsb
add
shrl
cs
mov
sti
sarl
fwait
pop
fmull
imul
sub
daa
stc
jae
dec
pushf
cmp
mov
cmpb
aad
daa
jo
cmp
cltd
mov
dec
add
loopne
sbb
adc
rorl
test
mov
mov
adcl
out
jge
imul
xchg
mov
mov
sbb
sti
dec
imul
leave
incl
ficomps
std
or
fs
mov
test
mov
adc
in
mov
lds
dec
inc
or
mov
test
pop
dec
sbb
test
mov
pop
sahf
mov
out
cmp
and
cmpsb
cmp
ds
subl
call
cli
and
xchg
je
in
sti
sbb
out
cld
mov
pop
into
mov
pop
mov
fisubl
cmp
push
loope
rorl
insb
sub
inc
adc
vcvtsd2ss
xchg
xchg
mov
ljmp
xchg
inc
outsl
fwait
daa
xor
and
or
testb
pop
pusha
pop
or
lods
pop
and
sbb
xor
dec
out
inc
cmpsb
stos
fs
dec
popl
dec
push
popf
dec
test
lcall
cmp
pop
or
cmp
or
sar
push
sbb
push
pop
mov
mov
mov
lock
sub
lods
push
mov
ja
shrl
push
ds
fwait
shrb
mov
pop
int3
orb
ljmp
dec
jb
mov
xorb
ja
arpl
sub
scas
pusha
sub
adc
sti
sub
sub
push
aad
pop
push
lcall
insb
cmc
jecxz
xchg
or
lods
and
dec
mov
push
ja
aad
int
fwait
out
mov
not
imulb
daa
or
fidivl
idivb
xor
fwait
jbe
lret
sub
rcrl
pop
and
sbb
lret
inc
jg
outsb
lahf
les
xchg
jl
xchg
lahf
mov
and
or
ret
test
stc
fisubrl
cmp
shlb
mull
cmp
adc
xor
inc
mov
das
lret
and
pushf
cmc
aaa
jbe
adc
out
frstor
aam
xchg
xchg
xor
jae
nop
mov
mov
xchg
lods
pavgw
or
fsubrl
out
fs
mov
cmp
or
out
add
xchg
aas
push
cmp
push
out
call
stos
roll
mov
rolb
jmp
lock
inc
fildl
cmp
in
mov
mov
mov
pusha
decl
adc
and
daa
pushf
jae
push
scas
xor
pushf
add
add
mov
dec
or
mov
mov
jmp
push
adc
and
lock
inc
inc
or
add
fwait
pop
imul
das
jle
test
adc
mov
mov
dec
push
push
xor
leave
cmpsb
scas
sarb
or
out
out
push
push
ficoml
cli
push
and
int
insl
inc
pop
out
pop
aaa
sbb
and
jmp
gs
scas
xor
ljmp
sub
dec
fnstcw
sub
pop
sub
mov
or
fstpl
subb
cs
test
sub
call
mov
aaa
pop
aas
add
jg
push
std
call
sbb
sti
inc
dec
or
out
aam
test
dec
lret
idivb
mov
insl
leave
pusha
stos
lahf
cmpsl
dec
or
dec
insb
adc
call
dec
inc
cmp
mov
cltd
lods
mov
mov
cmp
sub
cld
rcrl
outsb
mov
lods
cwtl
pop
rcll
add
mov
mov
mov
sarl
arpl
push
sbb
dec
mov
insl
dec
or
xor
out
jns
push
sbb
pushl
lahf
mov
ret
push
bound
and
outsl
lahf
jne
pop
lcall
pop
push
cli
fldenv
stos
loopne
and
mov
adc
mov
adc
mov
jge
jmp
fdiv
iret
mov
mov
push
scas
pop
dec
outsl
inc
cmp
jo
adc
jnp
negl
fcompl
out
push
out
leave
xor
nop
pop
imul
loope
and
icebp
stos
jl
sti
outsb
pop
fsubl
mov
inc
int3
es
adc
fstps
xor
cmpb
mov
pop
sbb
jmp
and
insl
test
push
push
pop
xlat
in
mov
mov
aad
insl
cli
pop
sbb
leave
add
xor
test
push
xor
inc
cmp
imul
adcb
mov
cmp
sub
xor
lock
push
mov
hlt
stc
mov
sbb
sbb
mov
or
stos
jmp
and
frstor
dec
in
rclb
add
mov
test
rcrb
cmp
dec
rol
je
cli
xorl
mov
xchg
adc
sbb
clc
into
push
add
and
or
mov
jp
push
lahf
aad
jecxz
ds
lds
cmp
leave
std
and
rcl
sub
mov
mov
out
cmp
jp
cmp
and
mov
or
cmp
insb
std
xor
inc
ret
add
mov
jecxz
call
mov
sub
inc
dec
in
lcall
inc
ficoml
and
push
mov
add
enter
loop
mov
adc
mov
xchg
shrl
push
xor
sbb
in
out
inc
stos
repz
maxps
je
xchg
cs
push
mov
jmp
adc
xchg
popa
inc
mov
mov
daa
hlt
pop
fstpt
roll
xor
jg
sub
cmp
fs
lods
outsb
int3
js
iret
jns
negb
out
dec
and
jbe
sub
outsl
inc
sub
fcmove
add
adc
popf
pusha
inc
outsl
sbb
sbb
sbb
cld
mov
fmull
sbb
push
inc
out
push
mov
inc
jbe
or
pop
in
stos
loope
pxor
xor
or
mov
pop
movsl
mov
loop
les
in
push
aam
shrb
cli
dec
mov
sbb
pushf
cmp
add
ror
shl
fwait
jne
xor
jmp
mov
jo
inc
roll
mov
mov
inc
addr16
std
add
and
movsb
push
xchg
xchg
fisttpl
int
and
nop
movsl
bound
push
push
mov
clc
neg
mov
lds
lret
fs
testl
pop
or
mov
es
mov
pusha
out
push
mov
outsl
push
cwtl
movl
sub
inc
mov
int
adc
sbb
sub
cmpsl
mov
inc
iret
sbb
mov
push
mov
add
cmpb
ret
cmpsl
or
cs
aam
sbb
push
movsl
bnd
and
test
iret
cld
mov
icebp
jmp
out
lods
xor
int
inc
cmp
or
or
aad
sub
js
xchg
insb
pop
sub
aad
sub
lods
jb
je
mov
lock
les
mov
iret
test
xchg
xor
inc
or
movsb
setg
inc
lods
fwait
test
shlb
in
dec
leave
jo
and
fmuls
inc
jo
iret
mov
ficoml
add
sub
and
movsb
mov
push
in
push
xchg
xchg
lcall
sbb
ds
push
jl
pushf
cmp
inc
and
jbe
mov
aad
mov
jns
add
cwtl
hlt
dec
dec
jb
dec
xchg
jae
mov
ret
mov
lea
shlb
xchg
test
xchg
out
cld
into
mov
xorl
stc
insl
enter
dec
lcall
out
xchg
adc
push
jno
lock
jo
jo
out
inc
movl
cmp
xchg
cmp
pop
mov
inc
or
mov
outsl
popf
mov
imul
std
pop
repz
addb
xchg
mov
fwait
sarl
lods
imul
mov
push
fwait
sahf
cmp
stos
stc
aad
loope
adc
mov
xchg
call
es
sub
dec
xor
in
int3
adc
mov
lea
js
das
push
jno
sbb
test
js
mov
adcb
in
aaa
sub
mov
int
or
inc
iret
inc
jne
xor
movsb
mov
or
add
sbb
add
pop
addb
or
call
movsb
lds
int3
mov
cmp
rclb
mov
fcompl
pop
pop
pop
add
stc
sti
ret
stc
fdivr
pop
cltd
push
xor
add
jmp
arpl
test
xor
jl
xor
lds
roll
int
lret
xchg
sbb
dec
push
movsl
cmpsb
inc
pop
add
jl
loopne
jae
dec
jmp
cmpsl
and
stos
ds
adc
pusha
out
jo
push
mov
mov
cltd
cmp
stos
mov
and
mov
fwait
cwtl
mov
fisttpll
out
jb
add
sbb
dec
cmpsb
jl
notl
jmp
jmp
cmp
iret
pop
mov
mov
push
btr
dec
bound
mov
aad
jae
mov
hlt
inc
and
mov
or
xlat
adc
scas
lock
jmp
scas
adc
dec
imull
xchg
mov
das
pop
sub
rcrb
jbe
pop
xchg
xor
jo
fsts
lods
lret
rcrb
test
repnz
jnp
inc
imul
popf
fscale
or
xor
push
or
out
clc
int3
fldt
adc
rcr
in
mov
inc
sbb
fidivs
mov
inc
lock
orb
pop
mov
fs
ret
jo
imul
insl
pop
pop
rcrl
pop
rol
jno
jmp
cmp
push
es
mov
mov
js
jo
or
aas
stos
push
ret
add
fmul
hlt
dec
mov
mov
ljmp
xor
sub
jmp
sub
clc
call
add
clc
mov
das
add
movsb
gs
sub
sbb
or
mov
inc
jae
jp
mov
jmp
and
add
dec
stos
add
sub
mov
xchg
adc
pop
mov
mov
pop
jne
es
mov
inc
int3
pop
in
rorl
push
and
fistl
jnp
mov
jnp
xchg
xchg
jo
sbb
add
loope
das
sub
fnstcw
xchg
lea
jno
sti
mov
fimull
mov
pushf
pop
popf
je
repz
or
xor
mov
mov
insl
outsl
pop
testb
cmp
add
jp
pop
mov
sbb
leave
aam
fistpl
push
scas
lods
inc
out
or
and
pop
pop
je
cltd
dec
mov
dec
sti
jo
mov
das
fdivl
mov
test
out
leave
push
dec
and
test
sbb
add
clc
sbb
adc
mov
gs
push
and
jmp
daa
daa
ds
out
lods
in
shll
jg
loope
fistps
scas
cwtl
std
test
movsl
dec
popa
jo
outsl
jb
pop
addr16
ret
test
push
push
jge
pop
lods
mov
clc
jl
jmp
daa
adc
inc
mov
cmp
jnp
mov
popf
sbbl
push
outsl
fldcw
les
inc
xor
mov
xchg
sub
out
add
xchg
faddl
push
fldcw
loopne
jo
push
aas
dec
lret
mov
mov
xchg
jnp
cs
fwait
rcl
pop
iret
data16
xchg
test
fs
pushf
leave
mov
daa
push
add
rclb
aam
subb
into
insl
cmp
xchg
scas
dec
les
push
cltd
pop
and
push
nop
in
or
dec
out
jp
shlb
mov
jae
mov
mov
sub
stc
mov
adc
insb
divl
jns
cmpsb
outsl
xor
mov
push
xorb
adc
jnp
xchg
js
xchg
cmc
stos
fldl
or
loop
jle
les
pop
clc
mov
jae
movsb
call
sbb
neg
push
mov
inc
repnz
outsl
negb
bound
mov
xor
aas
rclb
aad
or
inc
cmp
mov
test
add
sub
and
mov
jbe
mov
mov
pop
pop
fwait
outsb
icebp
push
out
add
pop
jge
filds
lock
dec
adc
jne
cmp
mov
dec
mov
lods
repnz
pop
pop
in
mov
inc
aad
xchg
xor
imul
xor
sub
rcrl
inc
mov
sti
ret
insb
pop
mov
pop
loope
pop
adc
loopne
or
shrl
mov
sub
jg
adc
inc
aad
mov
stos
jp
mov
mov
imulb
fisubrl
lahf
mov
inc
adc
inc
outsb
cwtl
cmp
mov
pop
sbb
mov
inc
roll
inc
pop
dec
dec
mov
jge
mov
push
sub
jl
mov
stos
xchg
mov
inc
ss
insl
lret
and
push
dec
xor
inc
cli
movsl
mov
rorl
rorl
mov
xchg
jns
dec
inc
jp
jnp
jne
stos
enter
fimull
pop
jbe
in
negl
pop
and
push
int3
stos
aaa
mov
push
movsl
mov
fwait
dec
jg
push
jb
dec
enter
dec
lcall
out
jmp
pop
lcall
loop
push
push
jbe
cmp
stc
xlat
inc
rolb
pop
leave
mov
arpl
mov
or
jl
sub
inc
inc
outsb
clc
jbe
sbb
jnp
or
jecxz
inc
mov
push
or
cmp
shr
xor
cmpsb
add
fsubrp
mov
pop
pop
adc
leave
add
mov
jg
add
clc
das
out
sbb
icebp
ljmp
mov
dec
jno
repnz
flds
adc
sbb
fistps
pop
or
lret
daa
dec
outsb
pop
out
insl
lock
xor
test
orl
push
cmpsb
xor
in
int3
push
jb
xlat
movsl
push
fists
dec
sub
mov
sbb
sti
dec
dec
or
enter
jae
pusha
outsb
pop
mov
fsubrp
pop
int3
rsqrtps
add
and
in
test
mov
movsb
in
mov
icebp
jne,pn
imul
stos
in
outsl
outsb
add
mov
mov
stos
in
cmpb
and
mov
mov
les
ljmp
sub
or
pop
push
dec
lds
in
imul
fisubrl
cmp
xor
stc
xor
dec
das
jl
jp
push
sub
pop
jg
popa
xchg
mov
shll
lock
bound
mov
inc
inc
xchg
mov
and
loopne
push
xor
mov
ljmp
xor
dec
into
aaa
push
lods
and
movsl
add
shlb
test
movsb
stos
xchg
ja
mov
mov
iret
out
jb
and
rcll
mov
mov
or
mov
pushf
outsb
mov
cmp
mov
xor
clc
jmp
mov
das
sub
fmull
xchg
jnp
aam
and
fists
pushf
orb
mov
jo
cld
mov
cs
les
stos
rorb
in
and
movsl
cld
mov
sub
add
cmp
cmp
orl
pop
sub
xor
out
adc
push
xchg
rclb
syscall
fsts
repz
push
cmc
lds
aas
and
mov
je
or
cmc
cmpsl
cmpsl
mov
cs
ror
leave
arpl
cwtl
mov
dec
push
mov
fsubl
cmp
push
pop
cld
insb
cmp
lods
sahf
adc
lods
outsb
popw
fcomps
xor
dec
and
inc
cmpsb
roll
fimuls
into
in
lahf
add
hlt
mov
lock
sbb
daa
sahf
jbe
call
leave
clc
inc
ja
add
jbe
cmpsb
sbb
jl
fsubl
inc
imulb
in
mov
ss
or
je
loopne
xchg
adc
cmp
xorl
aas
shll
cltd
jmp
add
ja
adc
outsb
scas
ljmp
xor
mov
std
mov
leave
scas
mov
in
xor
mov
decb
std
hlt
mov
adc
mov
push
repz
inc
pop
push
sahf
pusha
inc
adc
sar
and
lret
orl
push
cmpsb
ljmp
cmpsb
inc
sbb
jb
dec
hlt
movsb
dec
mov
lret
insl
and
rcr
inc
cmp
pop
les
jmp
mov
dec
imul
jecxz
out
xlat
cltd
pop
out
int3
ss
sti
mov
fsub
push
mov
insb
xlat
mov
psrld
mov
dec
movsb
or
and
mov
mov
push
lods
movsl
cmpsb
push
aaa
mov
mov
out
negb
jg
imul
cmc
lods
mov
mov
in
call
xor
aad
mov
push
inc
mov
pop
dec
or
std
aas
inc
jo
sbb
sbb
push
mov
push
adc
addl
pop
fcomi
imul
jo
push
cltd
sub
mov
cmpsl
pushf
data16
and
add
test
lret
jne
sbb
jbe
shrb
out
ds
std
popa
fucomip
dec
pop
pusha
iret
jl
or
cmp
mov
fidivrs
pop
jb
or
or
mov
jbe
pop
or
ds
push
jmp
cmp
mov
fs
push
jno,pt
loop
push
jp
movsl
jb
cltd
sub
sub
sbb
adc
cmp
inc
shl
jo
repz
pop
add
mov
sub
lret
fbstp
xchg
repz
xchg
repnz
jp
dec
aaa
popa
std
push
xor
pop
enter
cmp
dec
mov
nop
icebp
inc
jbe
xor
push
sbb
lods
mov
xor
cmpsl
mov
in
dec
pop
sti
js
je
mov
jns
pop
arpl
mov
cld
xchg
in
sbb
inc
push
dec
inc
or
imul
sbb
add
and
imul
lea
data16
xchg
inc
xor
jmp
adc
into
sbb
addl
andl
jge
aad
loope
cld
in
or
inc
dec
rcr
int
bound
sbb
lret
xchg
cltd
or
pop
lea
imul
jg
xchg
fistl
das
mov
mov
adc
push
das
in
mov
xlat
adc
data16
dec
out
push
sarb
xor
mov
scas
xor
mov
lret
sub
testb
pop
idiv
test
mov
inc
std
stos
loopne
in
enter
loop
push
les
repnz
test
pop
pusha
pop
pop
enter
jns
mov
out
sub
lods
mov
pusha
adc
push
mov
and
pop
imul
mov
data16
in
mov
or
fildll
ror
lods
lret
jecxz
jle
cwtl
pop
cmp
mov
adc
test
inc
sahf
pop
push
lods
ror
ds
test
push
add
jbe
dec
inc
sub
lods
add
mov
insl
shlb
jbe
repz
cmp
xchg
jp
sub
mov
push
mov
inc
cmpsb
pop
out
push
outsb
sub
cmpsl
int3
stos
xor
pop
mov
in
push
pop
push
mulb
in
jae
imul
sbb
sbb
jb
test
lock
out
cmp
mov
mov
mov
pop
sub
jbe
imul
mov
xchg
push
pushf
fbstp
xchg
mov
hlt
or
sbb
inc
psubusw
push
push
add
sbb
loope
cmp
mov
sarb
popf
mov
cmpsb
fmul
test
out
add
mov
lret
pop
xchg
dec
notl
mov
push
jmp
sti
mov
subb
mov
inc
adc
dec
pop
out
mov
aaa
aaa
xor
gs
xchg
dec
jle
cmp
gs
mov
es
les
adc
mov
adcb
dec
pop
in
add
addr16
test
cmpsb
sub
mov
sub
and
fwait
cmpsl
aaa
pop
les
inc
xchg
insl
push
cmp
mov
push
stos
jnp
pop
pop
lock
inc
test
addr16
inc
cmpb
dec
into
and
mov
out
inc
test
loope
push
xchg
push
xchg
out
and
enter
jmp
aas
mov
push
sbb
push
mov
jne
fsubrs
ret
out
shl
scas
mov
jp
lock
shrb
fstpt
cmp
inc
test
dec
or
pop
mov
repz
outsl
scas
pop
mov
mov
pusha
cltd
dec
lock
inc
cmp
fcompl
lea
ss
int
add
xor
and
xchg
or
ret
outsl
jb
popa
inc
in
add
cli
add
pusha
addr16
mov
icebp
add
in
mov
xor
cmp
push
or
push
icebp
in
outsb
lds
xchg
mov
incl
arpl
and
xlat
mov
push
adc
mov
loopne
js
dec
roll
or
data16
fsubrl
dec
pop
or
push
dec
pushf
cmp
xor
stc
outsl
xor
ret
jge
jo
mov
test
js
push
pop
xor
pop
dec
mov
cmp
movsl
jne
call
jle
add
jle
mov
mov
push
mov
push
arpl
mov
mov
inc
xchg
jl
xor
sbb
hlt
inc
mov
xchg
inc
xor
pop
arpl
or
cltd
je
rcrl
xlat
xchg
pop
pushf
push
xchg
mov
clc
ljmp
stos
xchg
push
stos
lret
add
cmp
jbe
jne
out
shr
mov
call
std
rolb
mov
xor
sub
adc
lret
cmpsl
cltd
cmp
mov
or
or
xchg
adc
rcll
and
push
inc
in
dec
pop
or
lds
ret
cmc
cltd
into
lods
pop
jae
push
pusha
addr16
or
push
inc
xor
movl
out
xlat
aad
cmp
sbb
jl
fwait
adc
mov
nop
cwtl
rcr
in
xchg
add
mov
aad
stos
mov
and
push
imul
test
clc
xor
aam
pop
mov
mov
dec
insb
push
or
inc
ds
fisttpl
fwait
inc
loopne
cmp
repnz
lods
in
fwait
js
xor
xchg
xchg
push
pop
sbb
inc
loope
mov
jnp
cmp
mov
push
outsb
inc
dec
mov
sub
imul
adc
mul
jno
xchg
dec
in
outsb
out
pushf
fsubrl
pop
xchg
out
rcrl
and
loop
xchg
daa
xchg
lahf
cmp
pop
fiaddl
pushf
pop
xor
imul
sti
pop
mov
fmul
xlat
pop
adc
cmp
mov
xor
or
in
jae
scas
pushf
push
das
enter
and
outsl
jnp
rolb
cmpl
jo
add
sbb
roll
xor
std
cmp
push
adc
mov
xor
jmp
sahf
inc
pop
fwait
daa
lret
popf
inc
ret
out
outsb
mov
loope
push
das
je
adc
xor
sahf
leave
insl
repnz
mov
mov
stc
out
fwait
dec
outsb
xchg
sti
xchg
mov
push
loope
mov
push
mov
aad
jne
out
jmp
cmpsb
push
mov
in
shlb
and
mov
jl
push
or
data16
stc
or
ds
aas
pop
loope
lds
testb
pop
dec
xchg
push
pushf
xorl
cld
cmp
xor
add
mov
pop
mov
scas
inc
or
jns
loopne
cwtl
mov
and
cmpsb
cmp
cmp
add
mov
push
stos
dec
scas
xchg
mov
push
cwtl
into
mov
add
or
jns
push
fadds
insb
pop
lods
push
mov
cli
dec
mov
aas
pusha
and
ret
dec
lods
mov
cwtl
shl
movl
or
push
movl
movl
cmpl
je
cmpl
jl
jmp
push
pushl
pushl
pushl
pushl
pushl
call
xor
or
dec
mov
jmp
mov
adc
push
addl
mov
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
push
andl
add
jmp
mov
mov
inc
cmp
jb
xor
mov
sbbl
xor
add
jmp
mov
xor
mov
orl
xor
movl
cmpl
je
cmpl
jb
jmp
push
call
mov
dec
mov
jmp
mov
subl
add
subl
movzwl
mov
mov
movzwl
adcl
xor
addl
add
mov
mov
mov
movl
inc
mov
mov
cmp
movl
jne
mov
adcl
mov
mov
sub
xor
add
mov
and
mov
mov
sbb
mov
or
xor
andl
xor
add
inc
mov
cmpl
jbe
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
mov
or
movl
add
movl
movl
addl
mov
mov
mov
movzwl
and
mov
xor
incl
add
movl
mov
movzbl
mov
je
adc
mov
andl
xor
add
inc
mov
cmpl
jb
jmp
push
call
cmpl
jb
mov
sbbl
xor
xor
addl
sub
notl
sub
add
xor
incl
mov
or
mov
mov
subl
add
imul
mov
sbb
mov
mov
add
xorl
or
movzbl
sub
mov
mov
sbb
mov
add
xorl
xor
adc
mov
mov
mov
addl
add
addl
and
mov
sub
mov
mov
andl
lea
mov
mov
add
mov
orl
sub
movl
cmpl
je
cmpl
jb
jmp
push
call
mov
dec
mov
jmp
add
mov
mov
xor
addl
add
movl
jne
jmp
incl
mov
sub
xor
mov
andl
mov
inc
mov
cmpl
jg
jmp
pushl
push
push
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sub
mov
xor
xor
adcl
sub
andl
sub
xor
movl
mov
mov
mov
jmp
adcl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
xorl
xor
xor
sub
sub
sub
xor
mov
adc
mov
andl
mov
add
subl
imul
andl
mov
or
mov
mov
addl
add
addl
or
mov
mov
movl
cmpl
je
cmpl
jg
jmp
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
jmp
push
into
push
mov
nop
mov
lcall
push
jno
or
push
stc
test
dec
pop
xchg
fsubrl
jne
lret
out
inc
arpl
test
test
jne
jnp
dec
or
xchg
dec
gs
in
mov
push
jbe
pop
pop
adc
lods
pusha
sbb
lds
xchg
sub
pushf
adc
jle
push
mov
mov
lods
test
flds
sub
dec
and
in
dec
cmp
xchg
adc
mov
out
mov
adc
leave
fsts
test
or
ljmp
push
daa
xor
and
enter
and
out
cmp
imul
negl
les
out
adc
popa
or
lea
xor
int
mov
ret
xor
mov
xor
xchg
cltd
or
imul
or
cli
pushf
scas
cmc
in
sub
cmp
pop
cmpsl
pop
popa
mov
rcrl
test
pop
daa
adc
into
or
xchg
mov
pop
sub
mov
mov
cmpsb
outsb
add
nop
mov
jl
inc
scas
pop
ret
push
int3
imul
cwtl
mov
push
push
xchg
sti
int3
cwtl
out
mov
lret
fsubr
jmp
xchg
jns
cmp
inc
inc
and
dec
sahf
das
sub
aas
or
fcomps
jmp
push
or
icebp
test
nop
sbb
jns
pop
sbb
mov
sub
out
sbb
mov
jl
out
xchg
repz
lea
push
dec
mov
sbb
scas
pop
das
cmp
xchg
mov
mov
mov
sub
cli
cltd
bnd
mov
roll
aam
pop
aaa
rclb
jae
lea
rol
push
das
repz
mov
jno
push
es
xchg
mov
popf
push
lods
push
aaa
and
test
repnz
jns
int
xchg
and
fsts
clc
jne
adc
or
lcall
fdivl
push
xlat
cmp
lcall
jns
in
xchg
popf
add
mov
cmp
xchg
lahf
pop
pop
jg
jmp
gs
iret
cmpsb
xchg
inc
shll
xchg
sahf
adc
repz
pop
sbb
icebp
loope
pop
pop
lea
in
scas
mov
xchg
push
add
pop
ficoml
gs
cs
or
push
cs
jno
call
sbb
pop
mov
dec
ret
sbb
cmp
sbb
jmp
imul
out
es
ja
and
dec
fs
adc
cltd
mov
xor
fsubs
or
add
mov
mull
mov
orl
loop
cmp
imul
push
clc
pop
pop
push
nop
scas
cmc
call
and
pop
push
es
cmp
stc
or
jecxz
push
sbb
add
mov
pop
stos
imul
iret
dec
sbb
push
pcmpgtd
pusha
xor
adc
fiadds
mov
jnp
rolb
enter
push
sub
imul
sub
std
sbb
orl
xchg
addl
not
pop
pushf
cs
movsb
int
cwtl
xor
pop
aad
int3
in
pop
jne
mov
sbb
idivb
sti
mov
ret
jp
pusha
jle
push
aas
xor
popa
sarl
out
in
sahf
mov
testb
pop
sbb
call
mov
imul
cli
mov
outsb
adc
inc
clc
mov
cmpsb
lods
outsb
xchg
dec
inc
cs
jmp
aas
or
xor
insl
mov
ss
cmc
mov
popa
mov
mov
sahf
xchg
mov
add
in
cvtdq2ps
push
jns
adc
push
jnp
mov
xor
mov
xchg
mov
repz
xchg
and
or
cmpsb
mov
xlat
or
cmp
int
dec
out
ret
xchg
cli
adc
or
add
cmp
pop
nop
lods
or
fstpt
movsb
nop
fsubs
sahf
add
daa
cltd
and
fsubrl
aaa
shlb
test
add
mov
or
pop
xlat
mov
pop
xor
mov
clc
jo
rcrl
or
or
mov
push
call
jae
into
dec
sbb
mov
mov
sub
pop
sti
outsl
mov
int3
sub
cmp
cwtl
and
out
cli
dec
xchg
adc
outsl
scas
jo
mov
inc
xchg
or
xlat
jb
xor
out
dec
mov
scas
jecxz
cs
dec
mov
out
push
mov
adc
jbe
pop
sti
xchg
mov
sbb
sbb
test
aad
pop
xor
xor
push
cltd
sbb
idivb
mov
addl
mov
adc
cs
jle
pusha
pop
nop
vaddsubps
into
push
into
lock
pop
iret
loop
sub
test
cwtl
add
add
add
inc
mov
mov
add
push
cmp
sub
jne
xor
roll
gs
cmp
stc
lea
add
jne
mov
xchg
arpl
out
cmpsb
jae
lret
std
add
mov
inc
imul
popf
mov
pop
and
test
push
stos
inc
in
add
pop
mov
or
push
int3
adc
jnp
pop
push
and
mov
arpl
pushl
adc
mov
fld1
push
add
cmc
outsb
sbbl
out
jle
inc
adc
clc
js
push
clc
iret
lock
ds
lea
rcrb
sub
in
bound
and
pop
int
pop
xor
push
test
inc
sub
repz
cmp
in
in
jns
popa
aam
cli
mov
push
enter
and
xor
push
xor
popf
dec
or
dec
bound
scas
data16
stos
movsb
mulb
outsl
push
mov
xor
pop
xor
outsl
dec
nop
xchg
mov
in
fisubrl
fisttps
jno
mov
xor
mov
lods
call
or
lret
xor
cmpsl
das
mov
mov
sbb
fwait
mov
adc
fdivrl
popa
aam
nop
sub
std
andl
out
arpl
dec
out
js
sub
je
out
std
or
int
movl
dec
gs
int3
popa
les
push
inc
add
ss
stc
scas
pop
adcb
stos
testb
push
mov
sbbl
ds
movsl
mov
or
mov
ja
ret
sbb
jae
cmc
jge
iret
icebp
test
movsb
push
jns
stos
push
sbb
rcll
push
iret
add
lret
xorb
and
lret
sbb
loopne
in
mov
shl
mov
mov
fwait
sbb
sbb
inc
xchg
sub
add
mov
imull
xor
lret
sbbb
push
push
pop
std
xor
sbb
dec
adc
je
icebp
cwtl
aam
xor
cmpsb
xchg
pop
cmp
cmp
repz
inc
mov
sbb
fnstenv
ss
push
pop
lcall
adc
cwtl
jae
push
sbb
andb
popa
sbb
in
pop
xchg
and
ds
adc
cltd
imul
and
xor
jge
or
jle
sbb
iret
scas
mov
push
cmc
out
or
cmpsl
adc
pop
xor
xlat
sbb
mov
lods
std
cli
jns
imul
and
xchg
mov
cmp
out
inc
lahf
std
mov
sbb
enter
or
lcall
arpl
mull
mov
clc
xchg
jmp
xor
mov
xorb
movsb
imul
inc
sub
pop
fmuls
inc
cmc
pushf
lods
ret
adc
lcall
push
xchg
insl
xchg
shll
movsl
scas
pop
pop
aad
sbb
scas
xor
inc
sbb
mov
inc
mov
inc
cs
lcall
aaa
push
daa
insb
hlt
rcrb
fld
dec
pushf
and
idivb
and
inc
push
out
test
js
push
push
mov
or
mov
jl
xor
sub
arpl
jae
jae
xor
cmpsl
clc
mov
push
add
repz
sub
add
add
sub
cmp
mov
xlat
fs
mov
imul
pushf
jnp
dec
sti
iret
rcr
push
std
repnz
hlt
ror
mov
inc
jbe
jmp
stos
aaa
add
je
outsl
data16
insl
loopw
aam
lahf
fsts
mov
xor
or
idiv
ror
and
xchg
arpl
je
or
in
dec
push
daa
xor
mov
lds
mov
shr
pop
sar
push
ss
je
das
stos
movsl
mov
xchg
adc
push
idivl
xchg
ljmpw
dec
xchg
cmp
jecxz
pop
jns
imul
push
clc
mov
pop
jle
loope
mov
sbb
mov
std
sbb
xchg
dec
mul
rcr
xchg
outsl
mov
add
roll
xchg
pop
loop
or
dec
push
push
jp
enter
add
push
imul
mov
aas
movsb
jg
jmp
mull
xchg
lods
out
push
mov
lahf
in
pop
pop
and
inc
movsb
mov
dec
push
add
dec
in
repz
add
push
cli
xor
test
dec
cmpsb
add
cltd
shlb
jbe
aaa
push
sbb
mov
sub
sub
dec
pause
mov
rolb
rcrb
sbb
jmp
fadds
add
cli
dec
jo
lret
rcll
jmp
arpl
adc
push
jg
fisubrs
cmc
xchg
test
addr16
add
lret
push
loop,pn
mov
aas
and
mov
mov
std
push
les
dec
loopne
dec
aas
xchg
out
xchg
loop
inc
jns
xor
pop
loop
fists
or
sub
stc
out
inc
pop
pop
outsl
mov
inc
pop
jnp
sub
push
and
outsb
jnp
aas
aaa
and
sahf
pop
lahf
je
pop
mov
aad
nop
mov
pop
xchg
mov
aaa
js
inc
mov
ljmp
mov
add
nop
lock
push
out
sbb
sti
movsl
addr16
inc
add
movsb
gs
shl
xor
push
pop
jge
lods
adcl
cld
andb
add
inc
and
scas
fwait
sub
mov
testb
push
aaa
dec
ss
andl
loop
jbe
arpl
xor
int
add
lods
mov
mov
push
xchg
movsb
sbb
cltd
dec
js
xor
pushf
jns
fnstenv
xor
stos
cwtl
or
pop
fldz
jb
cmp
in
das
cmpsl
inc
les
div
xchg
mov
js
mov
dec
cmp
div
dec
pop
ret
pusha
shll
mov
sbb
pop
lcall
add
pop
sbb
mov
int
jmp
or
sbbl
icebp
xchg
lret
cmp
loop
ljmp
and
xlat
pushf
aaa
or
sbb
std
cld
mov
cmp
out
add
imul
add
daa
out
loop
xlat
mov
add
push
fmulp
hlt
inc
or
aad
cmpsl
es
ja
aaa
cltd
jbe
aaa
test
das
out
out
mov
xchg
scas
mov
pushf
mov
arpl
pushf
in
popa
cli
stos
inc
aad
sbb
daa
aaa
ret
sub
out
hlt
and
fistps
add
cmp
shl
insl
xorb
stc
push
push
mov
cmpsl
xor
cmp
xor
pop
movsb
icebp
push
shlb
sbb
inc
bswap
or
jae
jmp
loope
ljmp
xor
xchg
test
xchg
dec
addr16
addr16
xchg
out
mov
test
leave
lahf
and
and
and
lcall
and
add
add
jns
dec
mov
adc
outsl
invd
imul
mov
adc
ljmp
or
imul
push
or
fnstsw
pop
jl
xor
es
lds
cmpb
sub
sub
push
fisttps
aas
cmp
enter
mov
call
and
sbb
out
testb
dec
int3
mov
push
out
mov
fistl
lods
push
insl
int
sti
mov
mov
push
push
in
pop
pusha
sub
pop
fisubs
mov
scas
iret
xor
jb
inc
movsl
shll
lahf
sbb
pop
in
add
mov
imul
cmp
adc
clc
adc
pop
cmpsb
inc
int
sbb
push
ss
mov
pop
add
mov
cmp
scas
jbe
xor
xchg
xlat
lods
lahf
or
or
scas
xchg
pushf
testl
mov
cmp
dec
je
lock
pause
cwtl
add
xchg
mov
xor
mov
and
loopne
jbe
sub
in
sub
out
push
push
push
jae
xchg
addr16
jge
dec
pushf
pusha
stos
shl
adc
lods
add
xchg
mov
in
stos
push
and
pop
push
mov
push
push
sub
inc
pop
xchg
xor
call
pop
das
push
adc
pop
aaa
pop
decb
mov
ljmp
mov
mov
jae
push
or
cmpsb
cltd
dec
lods
sub
loope
sbb
xchg
sub
inc
mov
sahf
mov
mov
leave
out
imul
xor
add
sub
aam
enter
ret
out
sbb
gs
test
mov
push
cmp
push
ja
mov
or
cmpsb
shl
jb
mov
insl
mov
mov
and
mov
call
icebp
jmp
daa
fisubrs
mov
sub
sub
fmuls
out
push
shlb
add
lods
lock
into
sbb
lcall
scas
ja
mov
add
cmpsb
mull
push
jge
shlb
xchg
mov
sbb
imul
js
sbb
add
imul
ds
aad
rolb
jmp
pop
jg
xchg
inc
xchg
imul
cmp
sub
jl
aas
and
push
pop
jg
aam
and
sub
jbe
cwtl
loop
push
stc
lahf
mov
dec
xchg
mov
les
inc
rcr
enter
cmpb
lret
pop
adc
push
iret
sub
pop
inc
lods
dec
sti
fcomip
adc
jg
addr16
pop
rcl
inc
les
xorb
lret
ret
leave
adcl
subl
and
push
jb
mov
lods
pop
gs
lds
dec
xchg
sbb
push
lahf
test
fcoms
stos
cmp
lret
jmp
xlat
cmp
leave
xor
dec
sarb
lods
push
outsl
push
mov
add
mov
cld
pop
sub
addl
dec
push
sub
mov
enter
jecxz
xor
loopne
scas
push
in
lock
add
leave
gs
adc
pop
nop
pop
ret
insl
jmp
and
mov
mov
repz
jp
fcmove
loopne
pop
or
jo
mov
out
adc
mov
and
adc
push
and
js
cmp
mov
hlt
ror
xchg
loop
ja
mov
inc
dec
lea
leave
or
mov
mov
push
and
lods
xor
jno
addr16
filds
shlb
cmpsb
xchg
fists
and
push
ret
cmp
cmp
popl
cmpsl
lret
xorl
mov
outsl
lods
call
lret
sahf
imul
jo
inc
test
xchg
push
sar
mov
jne
inc
pop
fsubs
inc
or
inc
xor
push
ss
sub
aaa
pop
lret
pop
insl
push
dec
bts
pop
inc
xor
add
mov
iret
leave
shrl
mov
or
les
sahf
mov
mov
jle
pop
push
sbb
jmp
pop
mov
adc
fdivrs
sbb
fistpl
das
xor
int
enter
loopne
sbb
cltd
mov
dec
mov
xor
push
mov
out
mov
or
orl
repz
xor
pop
cmpsl
mov
mov
push
je
hlt
jl
sarl
stc
into
hlt
push
add
xorl
lds
addr16
inc
and
add
scas
jne
sahf
mov
push
pop
test
pusha
cmp
aaa
xor
pop
mov
into
andl
clc
xor
and
out
roll
test
sub
iret
xor
scas
cmp
xchg
sbb
add
fsubrl
test
rol
lods
xor
cmpsl
inc
popf
and
inc
sbb
insl
and
xchg
fidivrl
clc
jb
xchg
adc
icebp
jne
cld
je
loopne
addb
xchg
fwait
xor
jns
sbb
jne
sbb
insl
cmpsl
xor
decl
fnsave
sub
pushf
push
xor
outsb
mov
xorb
fcomip
xor
jmp
pop
shlb
arpl
adc
mov
xor
icebp
inc
adc
adc
shl
xor
mov
andl
push
mov
pop
lret
xchg
add
xchg
addl
inc
xor
xchg
scas
out
mov
cld
mov
and
jns
xchg
mov
std
ljmp
frstor
xor
leave
pop
mov
sub
cmpsb
notb
xor
lock
das
test
mov
ret
sbb
sbb
enter
sbb
aam
push
fdiv
jle
mov
lds
xorl
xchg
xor
sub
loopne
ret
jae
add
call
mov
lods
outsb
mov
and
lods
jge
ficoml
and
fcomps
gs
pop
push
dec
lds
sub
cld
mov
push
into
pop
or
std
dec
push
bnd
push
les
cmp
in
cmpsl
xchg
ret
xor
out
int
inc
and
jl
adc
jmp
add
mov
jmp
mov
mov
stos
sub
cmp
jl
sahf
push
das
jecxz
jno,pt
adc
xchg
out
mov
stos
push
insb
lea
jp
cmp
lcall
fistpll
cs
pop
rcrl
enter
pop
roll
push
cld
dec
int
or
sub
and
sbb
repnz
mov
mov
enter
jle
test
or
adc
push
lea
sub
scas
sbb
mov
pop
imul
jp
jmp
lea
sbb
push
adc
mov
cmpsb
mov
pop
mov
cmp
lock
dec
filds
lods
mov
and
nop
outsl
out
adc
mov
and
es
mov
mov
jmp
and
es
js
inc
fsubp
cld
jne
mov
scas
push
aad
push
movsb
xor
jl
cld
push
scas
cmpl
aam
xlat
mov
jl
add
fsubl
lret
fsub
mov
cmpsl
dec
leave
pop
sub
lcall
pop
fs
xchg
ja
mov
push
and
rcrb
push
test
mov
in
test
pop
mov
add
push
push
pcmpeqb
sbb
xor
popa
jne
imul
jl
push
lods
mov
dec
sub
mov
addr16
and
sbb
mov
xchg
ret
mov
xchg
into
ficompl
leave
lods
cmp
push
add
adc
loope
mov
pop
rcrb
and
xchg
pop
xchg
nop
outsl
sarl
data16
adc
pop
sbb
xchg
and
sub
in
testb
loope
inc
popf
xchg
pop
mov
xor
icebp
add
or
fdivrl
xchg
mov
lods
arpl
jmp
rcrl
imul
bound
scas
test
push
stc
jmp
ret
pop
or
clc
das
fdivrs
lds
lods
xor
dec
sub
pop
push
cld
jno
push
xor
pop
test
add
cmp
xor
js
xor
cmp
mov
mov
sbb
lcall
jmp
mov
lds
adc
out
inc
push
or
repz
push
or
not
jge
push
jns
scas
cmp
pop
outsl
jp
int
push
ljmp
rorl
cmc
xor
mov
pop
xchg
mov
divl
out
pop
xchg
jl
pushf
jne
fsubrs
movsb
mov
inc
mov
notl
sahf
pop
mov
insb
adc
mov
pop
insb
jecxz
imull
test
mov
pop
xor
sub
mov
or
test
loope
jl
int3
mov
cltd
jnp
xchg
xlat
mov
hlt
movsb
sbb
nop
movsb
or
xchg
xorl
test
sub
out
xor
cwtl
lret
or
leave
aam
leave
shrl
jge
push
loopne
fcmovnbe
fstpl
jle
js
add
loopne
pop
inc
push
aaa
xchg
test
and
xor
xor
sbb
in
and
mov
cmpsb
inc
jne
mov
arpl
or
mov
mov
pushf
pusha
add
adc
cli
push
fstpl
jns
pop
mov
add
movsl
lret
gs
mov
stos
sub
sbb
pop
pop
inc
int3
mov
addr16
lea
out
cs
out
sub
cli
pop
mov
or
pop
popa
dec
fstpt
and
rcrl
jmp
sub
and
jns
shrb
int
pop
jl
les
lahf
push
fwait
ret
daa
mov
out
into
pusha
andb
rcll
and
cmpsl
inc
out
loope
movsl
xor
shrb
fstpt
fs
aas
cltd
xlat
out
pusha
fidivs
push
mov
leave
pop
adc
xorb
fisttps
mov
addb
aad
push
xchg
or
jge
cmc
xor
pop
and
mov
jp
or
xor
sbb
prefetcht1
jmp
dec
daa
jnp
pop
sbb
shr
xchg
xor
dec
cmpsb
sub
clc
js
lods
lret
aaa
mov
adc
mov
xchg
mov
push
int
int3
jbe
sub
je
shrb
jmp
inc
out
inc
movsb
test
std
pop
icebp
mov
xchg
mov
mov
xorl
cmpsb
mov
mov
leave
or
xor
mulb
addr16
inc
cmc
movsb
daa
arpl
push
mov
ja
sbb
dec
ljmp
xchg
mov
cmp
mov
jle
fisubrs
je
xchg
sbb
xlat
pop
jmp
push
inc
inc
test
push
in
cmp
xchg
jo
sti
push
call
pop
mov
test
xchg
int3
inc
or
push
addr16
sub
inc
hlt
cmp
stos
xchg
add
sub
sbb
int3
sbb
outsl
push
enter
call
aas
leave
inc
fcmovnu
out
out
sub
repnz
sub
test
mov
push
dec
push
jg
int
filds
pop
lahf
sbb
or
ss
lea
enter
mov
push
cmp
scas
data16
popf
pop
pop
orl
jno
stos
mov
jbe
xchg
addl
xchg
into
jp
cs
ds
sub
sbbl
pop
cmc
adc
xchg
add
add
mov
adc
int3
dec
pop
fstl
push
leave
cmp
loop
inc
mov
js
inc
popa
xchg
push
sarl
addr16
and
mov
outsl
cmp
lcall
stos
in
jo
push
mov
andb
int
mov
dec
int3
movsb
pushf
cld
ja
jle
cmp
cwtl
mov
test
pop
mov
outsl
inc
lcall
and
cmpl
mov
sbb
dec
jo
mov
cmp
outsl
repnz
jp
sbb
outsb
add
pusha
push
push
testl
add
xor
cmp
loopne
add
ss
test
push
popa
add
hlt
in
outsl
pop
dec
cmp
mov
push
or
imul
arpl
test
jl
push
jecxz
pop
lret
fdivrs
call
xchg
xchg
pop
sbb
or
and
and
lahf
jle
and
scas
cmpsl
bound
cmp
lcall
mov
push
ja
arpl
xchg
ljmpw
jle
test
add
jg
inc
adc
rcrl
lret
mov
push
arpl
cmp
aas
jo
push
jns
cmp
adc
or
xor
cmp
jmp
hlt
push
lock
sahf
mov
sub
filds
fdiv
int
stos
push
cmc
jle
xchg
dec
lds
mov
addr16
or
jecxz
mov
mov
ret
adc
push
lea
roll
push
ja
je
pushf
jp
or
push
dec
push
jle
test
faddp
mov
jle
mov
dec
aaa
dec
jg
mov
push
push
daa
mov
sbb
or
stc
xchg
mov
and
adc
add
jnp
ljmp
fnstcw
inc
clc
mov
imul
int3
into
ret
add
imulb
xor
lods
xchg
fucomip
mov
mov
sbb
sbb
xchg
pop
out
js
jb
mov
and
push
fisubrl
pop
push
das
or
add
mov
mov
and
mov
fldenv
lods
jecxz
pop
sbb
repnz
cmp
loope
sbb
jo
push
mov
enter
clc
dec
inc
popf
stos
cmp
sbb
sub
outsb
test
xchg
inc
imul
or
jno
sub
jb
imul
inc
pop
hlt
bound
enter
mov
cmp
popa
mov
push
daa
push
or
jae
sti
mov
pop
ja
ljmp
adc
ret
sbb
pop
dec
pop
add
pop
xor
push
call
mov
mov
orb
fsub
call
pop
mov
inc
leave
jo
or
xchg
xchg
xor
js
popf
pinsrw
ret
push
sahf
adc
repz
ja,pn
push
sub
ds
jno
and
mov
cmp
mov
out
jb
sbb
inc
pop
jae
stos
aad
es
xlat
cwtl
sub
cmc
rep
cmpsl
stos
jno
inc
add
fiaddl
cmp
dec
into
gs
pusha
rcrl
lret
in
int3
mov
or
xchg
je
jmp
mov
aas
rcll
xchg
cs
mov
jecxz
lea
adc
mov
push
jg
fisubl
cmp
pop
lret
clc
mov
test
xchg
fdivs
cmpsb
pop
inc
adcb
push
je
jns
or
adcb
add
add
jno
jo
pusha
jge
scas
add
add
add
dec
ret
and
pop
or
in
pop
ficoms
inc
and
pop
or
jp
and
out
and
inc
lret
jge
fsubr
jp
mov
cwtl
or
outsl
cs
xchg
pop
push
fmulp
jl
push
xchg
lds
mov
adc
fsubr
or
lods
mov
or
add
pop
cmp
les
insb
das
insb
adc
sub
mov
push
insb
and
pop
fistl
imul
cwtl
fcomps
mov
push
jecxz
xchg
fstpt
or
jecxz
pop
popf
or
arpl
add
inc
jl
mov
mov
mov
imul
sbb
add
fldl
dec
fwait
cs
sbb
in
stos
je
in
movsb
pusha
in
or
xchg
mov
mov
jmp
cmp
xchg
adc
jno
and
dec
and
rcrb
pop
out
xchg
push
inc
out
bound
xor
push
push
jnp
inc
jecxz
inc
xchg
inc
sbbb
int
imul
int3
daa
cs
pusha
inc
push
fcmovnu
or
repnz
es
push
repnz
and
je
mov
pop
std
mov
mov
fiaddl
xor
or
xchg
js
sahf
ror
mov
daa
sbb
add
scas
fnstcw
xchg
xor
lret
xor
push
cltd
jae
aaa
int3
aam
fsubrp
adc
daa
dec
pop
push
lret
dec
fcomps
imul
loope
icebp
popl
xchg
int
enter
sbb
sub
dec
nop/reserved
mov
pop
out
adc
or
ja
pop
mov
pop
dec
push
minps
out
aas
pushf
or
xor
std
shrb
cli
jnp
sub
sbb
shll
jecxz
cld
mov
into
cmp
test
les
mov
mov
adc
add
add
push
outsl
in
inc
xchg
data16
jl
test
jg
ss
xor
lods
sbb
xchg
stc
xor
fmull
shll
xchg
movsb
test
xchg
dec
push
loopne
push
bound
adcb
mov
pop
test
test
setge
lods
jecxz
and
pop
or
mov
outsl
push
jge
decl
cmp
cltd
sbb
jecxz
rcl
fmull
or
mov
scas
xchg
sub
or
xor
adc
push
mov
push
xor
lea
mov
lods
adc
out
mov
xor
int3
aam
adc
xchg
push
pop
xor
jbe
ja
daa
or
sbb
dec
mov
cmc
mov
xor
push
out
or
cmp
adc
or
and
bound
cmp
shr
rorb
loopne
jno
jp
out
jp
dec
in
and
pop
cld
inc
pop
cmpxchg
cmp
lahf
and
cmp
or
pop
in
inc
or
rol
std
fimull
test
add
lret
inc
stos
out
cmpsb
popa
push
add
insb
ret
mov
das
add
js,pn
mov
cltd
push
jp
inc
pop
push
ljmp
addr16
sbb
enter
ds
shll
ret
arpl
sub
fsubl
aas
sub
pusha
fcoml
adc
leave
out
mov
xrelease
push
jbe
jp
inc
ja
mov
dec
in
leave
dec
or
and
xorb
jnp
add
sub
in
sbbb
fs
mov
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
hlt
mov
xlat
jne
mov
test
jo
xor
or
rol
popa
inc
jo
into
das
cmc
lahf
in
and
push
out
xchg
lfs
hlt
sbb
scas
adc
sbb
adc
test
icebp
movsb
jno
and
pop
xor
addr16
mov
push
mov
lret
call
jmp
xor
mov
inc
repnz
in
xor
push
aaa
pop
sub
lods
add
sbb
adc
add
mov
iret
stc
adc
dec
ficoms
add
insb
mov
lret
jl
test
enter
jne
sbb
lcall
negb
cmp
pop
jle
out
sbb
mov
pop
mov
test
jecxz
mov
cltd
add
adc
and
or
repz
push
mov
jl,pt
xchg
jmp
cmp
xchg
bound
mov
dec
sbb
cmp
imul
inc
popf
cmp
mov
fisttpl
pop
bound
push
pop
sti
xchg
dec
mov
xchg
hlt
jge
and
stos
push
push
cltd
xor
loope
mov
mov
dec
sbb
mov
into
aas
bound
adc
and
cmpsl
test
inc
or
pop
clc
movsb
stos
lahf
lahf
mov
outsb
mov
in
shll
cmp
adc
dec
out
call
sbbb
data16
mov
jge
stos
icebp
lcall
cmp
pop
insl
adc
hlt
gs
fadds
sbb
out
sub
andb
cmp
repnz
popf
dec
add
push
adc
dec
dec
sbb
xchg
mov
dec
jbe
or
nop
pop
hlt
in
mov
mov
and
mov
jg
pxor
mov
mov
test
testb
push
cmp
dec
in
pop
mov
sbb
cwtl
das
add
and
int
push
sbb
cmpsl
lds
jno
add
es
pcmpeqb
pushf
mov
popa
sti
sbb
loopne
inc
and
insb
mov
mov
mov
pop
lock
and
mov
dec
insl
faddp
into
add
in
push
leave
add
nop
aas
movsl
mov
cmp
pop
push
cmpsb
daa
dec
adcl
jge
jns
jmp
dec
js
rcrb
mov
int3
cwtl
inc
push
mov
lods
push
add
sbbb
lret
in
sub
out
xor
clc
mov
pop
mov
pop
pop
pop
add
bound
scas
xor
leave
cmp
loopne
cmpsl
pop
inc
test
aam
clc
in
dec
mov
ret
fadds
insb
out
xor
xlat
pop
jbe
test
push
inc
mov
loopne
push
mov
pop
cli
clc
and
mov
insb
inc
dec
pop
cmpl
in
mov
fsubs
mov
cmp
std
jge
pushf
rclb
jmp
dec
xor
sub
push
ret
dec
outsl
sti
shr
cmp
ja
mov
data16
imulb
xor
or
add
pop
mov
cmp
insb
aam
arpl
jnp
and
mov
add
cmp
inc
scas
or
sub
and
mov
jae
push
pushf
xchg
arpl
adc
fs
push
sbb
mov
lock
out
inc
in
stc
nop
hlt
pop
xor
mov
lods
cmp
lahf
dec
idiv
fiadds
inc
add
jo
ds
sbb
popf
jecxz
lea
es
xor
out
aam
out
adc
pop
jle
mov
imul
ds
add
cs
xchg
sahf
sahf
notl
outsl
stos
testl
push
pop
in
js
scas
lcall
sub
push
fsubrs
sbb
sub
cltd
stc
repnz
sbb
xor
pop
cli
insl
popf
insl
and
or
add
mov
lahf
das
cmp
adc
push
stc
mov
lods
push
out
cltd
out
xor
lods
dec
imul
mov
add
movsb
out
in
das
test
xchg
cld
rolb
or
es
pop
out
pop
mov
lea
loopne
pop
xchg
mov
jno
add
sub
stc
xchg
lcall
push
into
mov
popf
xchg
cmp
test
sbb
test
add
or
test
push
jnp
int3
ja
pmaxsw
mov
hlt
call
mov
push
mov
pop
mov
stc
mov
les
cwtl
cmp
addr16
orb
test
sbb
and
inc
add
aaa
stc
pop
shlb
xor
cltd
jae
pop
ret
aaa
mov
xor
or
outsb
inc
jno
mov
in
orl
movl
mul
pop
mov
mov
and
sub
cltd
insb
inc
adc
pop
les
mov
lahf
xor
dec
xchg
sub
adc
dec
mov
jg
loop
in
pop
xor
xor
and
mov
jnp
mov
ss
add
psubsw
dec
push
dec
sti
jmp
mov
leave
cmp
push
push
inc
faddl
les
js
mov
orb
nop
call
sbb
cmp
jo
or
lock
xor
fnstenv
mov
and
xlat
mov
and
push
dec
filds
sub
in
jbe
outsb
ljmp
outsl
ds
xlat
pop
pop
test
xchg
addr16
push
sbb
ret
repnz
push
arpl
mov
inc
lcall
dec
sti
fistps
jno
mov
bound
xchg
ljmp
dec
stos
add
cltd
xchg
mov
cmp
loop
adc
pop
decl
imul
mov
mov
daa
cmc
inc
int3
xchg
push
mov
das
das
xor
mov
pop
imul
shll
jno
scas
rcll
outsl
jno
jae
pusha
and
push
add
loopne
or
inc
push
dec
loope
adcb
add
and
or
enter
in
and
and
jl
lock
lods
in
pop
push
and
cmc
gs
enter
and
cmp
mov
pop
test
cwtl
pop
lret
fildll
or
sub
jne
sub
jmp
mov
cmp
push
sbb
popa
mov
push
jecxz
stc
out
mov
push
aas
mov
imul
sbb
in
inc
mov
mov
ret
jecxz
mov
ja
inc
fisttpl
xchg
das
jge
jmp
jmp
sysret
jge
das
xor
cmp
push
pop
popf
sbb
cltd
push
or
adc
lds
jns
sub
or
mov
scas
push
mov
icebp
push
enter
int
in
mov
jno
sub
xor
mov
cmp
loopne
mov
ja
or
test
jecxz
addr16
sub
mov
xor
insl
fcmovne
fldenv
dec
cli
jae
mov
adc
sti
pop
mul
xor
int3
push
mov
cwtl
hlt
push
scas
sbbb
jmp
cmc
push
pusha
popf
sub
jle
mov
insl
push
test
inc
imul
sbb
cmp
in
mov
ret
ret
inc
push
jle
jno
mov
outsl
mov
arpl
jecxz
cmpsb
mov
add
pop
mov
push
ljmp
dec
cs
add
leave
into
inc
and
ljmp
movsb
cmp
mov
cmp
sbb
lcall
daa
xorl
pop
add
and
jno
jb
dec
or
fidivs
sub
jb
jno
iret
and
cmc
dec
test
fnsave
add
adc
repz
mov
lea
in
inc
and
sub
add
inc
sarl
xchg
loop
rcl
adc
adc
xchg
lahf
sub
leave
cmp
jecxz
adc
sahf
cmp
outsl
ja
push
movsb
aas
push
xor
add
pushl
pcmpeqw
imul
iret
fidivrs
xorl
mov
inc
mov
sbb
sbb
xor
cmc
rolb
fsubs
pop
loope
nop
pop
push
test
mov
sbb
outsb
in
pop
xor
jo
in
mov
cmc
ljmp
push
arpl
ret
mov
mov
cld
sub
shlb
jnp
iret
movsl
xor
pop
adc
je
leave
inc
or
rolb
std
call
pop
and
mov
jb
dec
mov
inc
sub
xor
pop
push
cld
fcompl
adc
enter
rcr
xor
fadd
pushf
fiaddl
adc
mov
jnp
dec
add
mov
sahf
sahf
sbb
add
decb
dec
fcmovb
jmp
xchg
sahf
dec
lret
or
mov
xor
sahf
add
dec
mov
stos
xor
dec
cmpsb
cmpsl
jne
pushf
sbb
rclb
gs
fnsave
sarl
bndstx
sub
aaa
movsl
in
adc
in
ja
and
iret
fs
mov
outsl
or
xlat
out
aas
sbb
rcl
or
mov
iret
and
cmp
js
dec
push
je
or
dec
iret
xor
push
lock
mov
movsb
jg
test
sbb
cmp
test
shrb
push
out
test
outsl
inc
or
xchg
aam
push
push
pop
cmpl
std
insb
mov
push
and
repz
or
inc
push
push
andb
or
add
outsb
scas
popa
push
pop
inc
je
pop
fwait
mov
adc
lret
insb
mov
cmp
scas
push
mov
inc
push
and
xor
cld
mov
enter
cmp
stos
addb
add
jl
ds
jg
sbb
popa
ljmp
rcrl
adc
bound
out
sub
fwait
imul
dec
add
sbb
arpl
add
mov
scas
xchg
sbb
icebp
pop
enter
orl
mov
data16
aas
fiaddl
imul
pop
xchg
jb
and
loope
lds
test
nop
out
adc
push
sub
mov
push
sbb
jmp
push
mov
je
inc
mov
ret
fcmovne
shl
cmc
and
mov
aas
push
pop
mov
pop
loopne
jmp
push
call
es
dec
arpl
adc
popa
cmp
jmp
add
jle
push
and
repz
test
inc
movsl
sub
or
jge
xor
push
or
scas
je
lods
popf
testl
fdivrl
jmp
pop
mov
dec
pop
bound
dec
sub
shl
lret
sbb
rclb
mov
inc
data16
dec
outsb
lods
sbb
mov
inc
jo
xlat
cwtl
call
add
out
les
fsubrp
insb
test
xor
push
inc
jecxz
outsl
popf
test
jae
int
fisubrl
mov
test
sub
mov
xchg
pop
xchg
sub
mov
sbb
adc
mov
push
ror
dec
cmp
lock
movsb
or
in
xor
jl
rol
adc
stos
cmp
pop
cmp
sbbl
sarl
pop
fisubs
push
mov
inc
int3
or
and
fldt
pop
mov
dec
adc
mov
cmp
sahf
cmc
mov
in
enter
xchg
test
hlt
xor
mov
mov
inc
add
lea
fcomi
push
pop
shl
sbb
cmpsb
mov
pop
mov
mov
shlb
jnp
dec
and
out
inc
push
cmp
addr16
jb
jne
fwait
loopne,pn
orl
je
mov
xchg
cmp
xor
scas
cmp
repnz
sarl
insl
xor
shlb
add
jmp
in
cwtl
adc
cs
xor
mov
loope
sbb
cmp
inc
js
xchg
mov
xchg
push
je
jecxz
jge
adcb
mov
lds
leave
cmp
adc
sub
out
sub
or
push
std
ds
push
inc
repnz
ret
mov
test
mov
lods
adc
mov
cmp
xchg
cli
mov
push
pusha
push
roll
xor
pop
scas
pop
or
cmp
pop
xor
test
xchg
les
ret
push
arpl
cmp
inc
loope
sbb
mov
rclb
in
add
jle
mov
test
shlb
xor
push
inc
mov
xchg
cld
mov
outsl
imul
push
inc
ds
pop
popa
adc
dec
and
mov
imulb
pop
lret
aaa
cmp
jnp
orb
inc
mov
les
test
sarb
loope
mov
lret
cld
sbb
xor
sub
pop
fcomi
sub
xor
rolb
jbe
clc
daa
int
testb
popa
push
test
in
mov
je
push
mov
call
sbb
aam
repnz
sub
sub
sbb
mov
cltd
scas
mov
insb
mov
jle
or
push
pop
mov
in
and
fistpl
or
scas
adc
fidivrl
fsubrs
in
test
push
outsb
fisubrs
repz
mov
orl
xlat
sbb
dec
push
decb
push
mov
lret
fs
dec
sbb
jb
inc
in
pop
xchg
xor
jns
xchg
inc
inc
lahf
sbb
or
mov
jmp
div
sbb
jge
add
adc
pop
jno
jb
aaa
in
outsb
jbe
and
xchg
lods
add
sbb
ss
in
or
adc
inc
out
mov
nop
lods
mov
or
inc
add
in
mov
mov
cwtl
sub
es
ss
mov
lock
test
popa
jae
add
jge
mov
inc
mov
inc
cmp
jp
je
daa
sbb
jae
jmp
dec
shrb
pop
je
and
insb
out
in
lahf
and
je
rcrl
push
popf
adc
pop
cvtdq2ps
icebp
dec
xor
aaa
xchg
mov
repz
jle
mov
sti
and
nop
fmull
mov
pop
mov
add
pop
xchg
xchg
mov
pusha
sbb
xchg
mov
mov
mov
cmp
arpl
fsubrs
dec
lea
adc
stos
repz
push
roll
bound
insl
aam
lcall
cltd
or
std
mov
out
sbb
sub
adc
lahf
iret
dec
jnp
test
mov
mov
and
xor
leave
icebp
mov
outsb
xchg
pop
push
hlt
je
insl
push
les
push
int3
xchg
jecxz
sbb
sbb
or
xor
inc
jg
jp
inc
push
or
jae
gs
cli
movsb
xchg
mov
das
push
es
mov
rol
push
scas
mov
pop
lret
aad
cld
adc
xor
adc
cwtl
sub
lret
ss
cltd
loop
xlat
and
pop
stos
sbb
push
xchg
mov
xor
fidivrl
cmc
imul
pusha
xchg
faddl
out
mov
jbe
dec
insb
inc
ljmp
and
hlt
xchg
push
xchg
push
push
sub
movsl
call
fcompl
mov
push
test
mov
sbb
test
inc
sub
ljmp
or
ret
sbb
pop
add
push
mov
popf
sbb
and
addb
pop
aas
fcompl
cmpsl
xchg
pop
in
lods
xchg
negb
mov
push
sub
faddl
xor
mov
mov
mov
cmp
es
fs
sti
push
add
cmp
cmp
mov
add
adc
jo
xchg
scas
or
rcrb
xor
dec
or
sub
adcl
lds
call
or
mov
adc
sbb
mov
shll
cmpsb
popf
in
clc
jmp
mov
jb
and
sub
sbb
popf
push
in
inc
enter
pop
inc
add
mov
or
add
add
outsl
mulb
les
test
loope
jmp
test
and
cmc
int
shrb
mov
in
in
and
mov
popf
test
in
icebp
and
out
push
add
adc
andb
roll
cmp
jno
or
xor
mov
and
and
mull
imul
call
out
arpl
out
aaa
dec
repz
jbe
xchg
mov
jp
mov
mov
or
and
cld
ja
push
testl
cmp
adc
and
call
outsl
push
call
fdivp
xorb
or
push
push
int
aad
cmp
jo
adc
mov
jp
xchg
xchg
mov
aas
scas
loope
inc
push
sub
dec
cltd
sub
insb
xor
mov
gs
jecxz
adc
movsb
addr16
fldenv
fbld
icebp
or
push
imul
sbb
mov
scas
xor
xor
imull
roll
pop
jae
push
sbb
imul
inc
xchg
sbb
lcall
pop
push
popa
jmp
mov
adc
inc
mov
cmc
stos
hlt
les
mov
je
test
fidivrs
outsl
imul
cltd
dec
and
pop
js
cli
push
sbb
rolb
mov
cs
push
fstps
jae
movsl
mov
int
mov
in
adc
mov
xchg
inc
out
rcrl
xchg
rcl
jmp
adc
cmp
mov
aaa
ljmp
test
or
add
fistpl
dec
in
inc
aam
fcomps
data16
popf
pminub
fwait
out
dec
jno
and
rcll
int3
ret
pop
add
mov
xchg
xchg
push
stos
add
mov
outsb
jmp
aas
inc
adc
fwait
pop
repz
cmp
enter
mov
mov
repnz
cmpsl
mov
iret
cmp
ljmp
xchg
mov
aaa
sbb
mov
in
jmp
rorb
sbb
adc
cmp
inc
jmp
cmp
mov
sbb
enter
out
xor
test
lds
ljmp
fldcw
jmp
iret
mov
insl
fidivrl
cmp
mov
out
cmp
cwtl
dec
pop
lret
add
gs
pop
jge
sahf
in
and
xchg
mov
mov
mov
cmpsl
cmp
sub
mov
sahf
sbb
mov
push
pusha
xchg
xor
or
push
or
xchg
xchg
or
mull
xchg
je
inc
dec
jg
adc
xchg
add
mov
mov
hlt
sub
mov
sbbb
mov
sbb
pop
fmul
movsl
cmpsl
pop
or
les
pop
rcll
push
mov
sar
fs
dec
inc
nop
loope
jmp
enter
pop
push
add
cltd
cmp
cs
mov
int3
pushf
rcl
add
xor
rcl
mov
aas
xchg
push
in
je
pop
push
pop
or
push
push
in
jnp
mov
adc
sub
cmp
dec
js
divb
cmpsb
aas
cltd
pop
sub
and
adc
mov
imul
idivl
xor
push
popf
and
enter
out
xor
mov
xchg
out
sub
scas
push
sub
inc
sbb
repz
or
adc
sbb
loop
cmp
mov
xchg
shrb
pop
mov
cld
fs
scas
iret
sbb
movsl
dec
imul
aad
jb
es
or
icebp
cmp
cmp
mov
fwait
pop
pop
push
jge
jne
outsl
lods
mov
sbb
jmp
push
xchg
push
in
sub
scas
inc
ljmp
dec
jp
ljmp
jmp
cmp
sub
and
push
inc
sub
in
repz
iret
dec
ret
in
push
pushf
scas
cmp
popf
and
in
test
xchg
shll
sub
dec
scas
je
xor
and
pop
loope
loope
int
arpl
fs
add
jno
out
push
lea
inc
repz
stos
jg
push
inc
mov
jmp
jno
in
fstpl
mov
lret
dec
add
xlat
ss
push
inc
mov
mov
cmpsl
and
pop
and
popf
bnd
loop
cmpsb
push
and
loopne
cmpsl
jge
roll
incb
mov
fmull
cmp
dec
xchg
hlt
andl
pushl
and
push
fsubr
ljmp
push
jp
sbb
ficoms
jle
add
adc
cmp
xor
and
xchg
xchg
inc
jns
add
imul
addl
mov
and
insl
je
xor
enter
fstps
jl
std
jb
test
rorb
cli
sub
push
jb
imul
sub
push
jne
sub
pop
xchg
ja
or
or
jno
movsl
rolb
shrb
je
xchg
mov
inc
push
arpl
lcall
lea
pop
rclb
or
clc
xor
js
fs
addl
ret
fldcw
sub
movsb
loopne
pop
enter
mov
in
aaa
lcall
leave
inc
popf
fsubrl
ret
sahf
and
xor
xchg
mov
push
inc
cmp
sub
dec
addr16
test
pop
xchg
sub
test
mov
xor
in
dec
test
pop
mov
inc
jno
int
outsb
jb
sbb
movsl
mov
mov
out
fldenv
lea
add
mov
outsb
mov
mov
lea
cmp
jne
or
add
mov
insb
dec
mov
into
adc
stc
lcall
fsubr
repz
clc
adc
xchg
sub
stos
jb
mov
inc
clc
mov
mov
push
je
jbe
push
mov
adc
fwait
jecxz
or
jb
cmpsl
lret
aad
xchg
or
imul
test
xlat
in
icebp
sub
popa
xor
jo
and
push
or
adc
adc
insb
in
rcr
jge
mov
add
cld
jg
mov
arpl
fsubl
int3
daa
mov
mov
push
jge
xor
pop
pop
scas
pop
lea
jo
lds
sbb
insl
mov
mov
into
rclb
sbb
inc
enter
adc
add
xchg
pop
push
repz
mov
lds
pop
push
in
and
and
xor
bound
adc
pop
sbb
cwtl
inc
adc
dec
rcr
mov
lahf
push
aad
mov
cli
cld
dec
xchg
insb
adc
fs
popa
mov
pop
mov
shrl
adc
lods
sub
mov
es
test
xchg
and
adc
push
cmpsl
std
mov
push
push
mov
mov
lods
lret
sub
mov
cltd
sbb
aas
xor
xor
mov
jae
xorb
sub
jne
xchg
and
or
mov
jl
mov
sub
mov
xchg
lret
roll
mov
mov
shlb
mov
out
mov
js
js
fdivrl
mov
jb
adc
xchg
add
test
xor
sti
rcll
leave
xchg
push
dec
push
jno
pop
xor
rorl
mov
sbb
pop
outsb
jmp
inc
dec
xchg
cmc
out
call
mov
sub
push
sarl
fwait
pop
xchg
push
jge
outsb
repnz
mov
jo
out
xor
sbbl
or
and
stos
and
cmp
cltd
mov
data16
push
xor
mov
cmpsb
jmp
add
popf
cmc
sub
adcl
inc
push
testl
mov
sbb
sbb
push
mov
sub
mov
and
loop,pt
fildll
dec
ss
push
mov
lds
bound
cmp
pop
jecxz
inc
outsl
pushl
es
sahf
ds
lret
mov
into
push
xor
jmp
push
push
aas
mov
xor
adc
out
and
mov
imul
pusha
pop
dec
mov
xchg
sub
jno
xchg
push
call
fldl
fidivrs
dec
shl
iret
jge
sub
mov
cmpsb
pop
es
pop
nop
pop
pop
dec
push
jmp
ss
dec
add
clc
iret
insl
enter
lods
pop
ljmp
mov
sbb
cli
pop
jae
adc
fwait
stos
pop
je
outsl
inc
sar
inc
cli
int3
jmp
dec
sub
pusha
jmp
lcall
pusha
xchg
sub
sub
rorb
sub
pop
jle
test
xor
sub
inc
stos
mov
jp
insb
and
popa
dec
lods
andl
sahf
sbb
inc
pusha
or
sub
test
adc
es
push
or
sub
pusha
cmp
test
cmp
sub
xor
aad
push
sub
adc
mov
cld
out
xor
jb
adc
out
push
or
inc
pop
mov
lahf
pop
jl
push
push
rclb
inc
ja
pop
divl
mov
dec
or
or
lret
xorl
sbb
orb
les
idivl
inc
jo
es
daa
aaa
adc
push
negl
sub
fistpl
mov
stos
jne
clc
mov
push
fcmovb
jle
aam
pop
ljmp
mov
insl
ljmp
clc
push
test
pminsw
push
dec
or
xor
ss
pop
sbb
push
dec
jecxz
xchg
and
in
xchg
push
add
xchg
stos
insl
mov
cmpsb
mov
fdivp
vpsubw
pop
xchg
sbb
lock
nop
cmp
or
sub
loopne
adc
mov
iret
or
or
sub
out
sti
aaa
shrl
movsb
mov
outsb
cs
dec
pushw
or
sub
jl
stos
add
jg
out
pop
addr16
jmp
shll
or
mov
push
iret
sub
fstpt
push
sub
pop
and
mov
pop
pop
jl
jbe
mov
mov
imul
push
cmpsl
mov
and
mov
js
scas
sub
cld
iret
inc
pop
jo
mov
add
inc
push
mov
addr16
mov
inc
bound
shlb
dec
roll
push
mov
out
pop
in
dec
into
jbe
inc
pop
push
xchg
daa
lock
mov
jecxz
cmp
push
sarl
hlt
and
sbb
roll
std
pop
mov
loope
js
adc
cmp
dec
xor
add
mov
gs
mov
add
into
mov
dec
xchg
mov
fstl
jmp
out
fcoms
xchg
fdivrp
adc
stos
and
cmp
push
push
cltd
outsb
rolb
pop
pop
adc
data16
repz
das
push
aad
cmpsb
sbb
mov
mov
cmp
and
mov
push
leave
test
icebp
in
jg
mov
fstp
mov
nopl
fnstcw
rclb
dec
jb
add
jg
xchg
push
ss
data16
xor
das
or
ret
cmp
cltd
or
sbb
lcall
iret
pop
pop
push
jle
dec
popf
popa
sub
xchg
adc
sti
shr
pushw
dec
aas
test
sahf
mov
jge
mov
hlt
out
inc
xchg
in
test
sti
mov
add
xchg
out
insb
aad
pop
test
pop
test
mov
jl,pt
fcoms
test
lods
lret
js
ss
and
adcb
call
mov
iret
sahf
fs
jmp
int
dec
rorl
jne
dec
jle
inc
push
loop
popa
push
pop
push
mov
cmpsb
cmp
push
xchg
or
cwtl
push
push
ds
scas
outsb
dec
aaa
das
pop
stos
and
add
dec
push
sbb
hlt
lahf
and
mov
and
pusha
das
pusha
ss
jbe
xor
adc
mov
mov
cmpsl
cmc
lcall
ja
ljmp
adc
add
test
push
dec
out
xchg
fstl
and
mov
cs
mov
mov
xchg
xor
pop
sub
sub
rclb
adc
xchg
push
out
mov
mov
enter
adc
jne
push
jle
push
jo
or
push
cmp
lahf
add
roll
or
pop
out
roll
xor
mov
ror
pushf
pop
out
mov
add
rcr
add
fdivs
sar
cmp
push
push
je
mov
mov
pop
mov
mov
outsb
xchg
cmp
addr16
call
stc
push
mov
xchg
xor
aaa
mov
inc
loop
dec
add
fadds
add
lods
lret
fsts
imul
push
pop
out
push
fildl
or
xchg
push
in
fdivrp
xor
nop
outsl
mov
leave
mov
and
mov
push
push
lcall
lea
cli
aas
les
fistps
arpl
pop
adc
cmpsb
xor
dec
lds
pop
in
xor
xchg
cli
loopne
push
jo
sbb
sbb
mov
hlt
les
test
call
pop
cs
popf
pop
mov
inc
xor
add
cmpsb
sbb
cwtl
out
daa
push
insb
push
fisubl
insb
pminub
in
inc
jnp
xchg
ss
sar
adc
and
mov
sub
jle
mov
mov
pop
rcr
xchg
test
add
icebp
xor
ja
xchg
clc
mov
mul
loopne
into
jae
clc
sbb
dec
shll
cmpsb
imul
push
ret
fnstsw
push
cmpb
mov
adc
jb
push
xchg
and
lret
ret
rol
sbb
arpl
mov
xchg
inc
divl
mov
js
int3
adc
sbb
xchg
mov
shl
mov
cmpsb
jno
inc
ja
add
inc
inc
lods
mov
sbb
xor
sub
fistpl
jb
aam
outsb
ret
jno
inc
adc
addr16
jnp
and
jge
mov
dec
stos
xchg
sub
fldenv
fimuls
cmpl
or
shrb
adc
outsb
jle
ret
imul
push
xchg
pop
je
lahf
mov
lods
xchg
xor
or
lret
idivb
add
cli
add
insb
jns
cld
idivl
mov
push
mov
daa
lods
mov
mov
js
aam
dec
inc
jmp
xor
int3
nop
sbb
fisubs
jle
inc
sbb
repz
loopne
add
or
xlat
cltd
push
xadd
pop
popf
jnp
adc
pop
mov
fcomp
lret
or
sbb
inc
inc
adc
xchg
sub
gs
or
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
jmp
cmc
imul
aad
push
int
fcomps
jno
or
popf
xchg
dec
sub
mov
inc
cwtl
push
into
add
push
inc
fwait
dec
mov
orl
mov
ss
lods
fs
push
inc
push
cli
mov
mov
dec
jb
into
rorl
adc
mov
shll
popf
mov
daa
adc
outsl
cmc
adc
aaa
pop
cmpsl
lds
push
fisttps
repz
lret
popa
dec
test
int3
adc
cli
icebp
lcall
jo
jg
leave
sbb
nop
stc
movsl
pop
lahf
lcall
or
test
repz
xchg
incl
mov
rcl
pop
push
fwait
sti
mov
gs
or
jo
aam
xor
icebp
pop
mov
lods
adc
adc
fisttps
mov
cmp
adc
leave
cld
cli
lcall
pop
and
roll
aad
cmp
int3
jbe
stos
ljmp
mov
and
pusha
pop
sbb
mov
adcb
pop
scas
and
fld
push
aaa
jo
mov
ja
lret
xlat
aam
pop
cmc
cwtl
jae
out
in
fs
mov
je
dec
je
mov
mov
cmpsl
js
jno
mov
push
imul
adc
mov
loope
jecxz
add
fldenv
push
xor
jnp
ficomps
push
ss
inc
mov
sti
or
and
popl
and
adc
or
aaa
push
dec
push
cmp
cmc
aad
and
aaa
in
push
mov
test
gs
cmp
repz
pop
lcall
push
cmc
icebp
in
push
jmp
pop
movsl
mov
pushf
pop
jae
dec
sbb
data16
pop
sbb
sti
xor
jge
mov
push
jmp
add
psllw
in
in
ret
dec
pop
adc
wbinvd
addr16
inc
pop
push
push
mov
bound
xchg
lods
jle
pop
sbb
push
and
mov
sbb
int3
xor
dec
jbe
ss
xchg
cli
push
jne
out
adc
roll
int
jmp
push
jne
outsb
scas
cmp
addl
jne
pop
push
out
in
adc
xor
enter
xchg
jae
jae
mov
les
push
add
fildll
or
sbb
push
mov
jnp
aaa
adc
push
jecxz
jg
les
or
jmp
add
les
mov
add
das
cmp
movsl
adc
icebp
jge
add
push
push
cmp
cmc
hlt
lret
popa
and
test
fiaddl
lods
daa
pusha
daa
push
or
ret
imulb
sub
pop
jno
arpl
lret
test
popl
pop
xchg
mov
loop
inc
stc
mov
mov
xchg
jb
adc
daa
stos
je
dec
inc
xorl
outsb
daa
sbb
test
int
aas
xor
cmpsb
call
jb
movsl
out
loope
sbb
sti
call
xchg
xchg
aad
mov
cld
push
roll
add
andl
sub
test
and
fimuls
repz
adc
cmp
mov
in
scas
fadds
aas
lds
pop
jnp
xor
sbb
movsb
cmp
nop
les
lcall
das
sti
mov
jb
xchg
inc
adc
ds
pop
dec
repnz
xchg
fisubrs
dec
xchg
push
les
pushw
sbb
mov
enter
sbb
aad
sti
jnp
orb
dec
and
cwtl
pop
inc
pop
hlt
lds
jbe
addl
ljmp
outsb
xor
jbe
push
adc
out
cmp
dec
out
mov
ljmp
std
xor
mov
sub
add
std
mov
mov
lds
loopne
pop
mov
mov
mov
test
mov
iret
cmpsb
outsb
or
xchg
cmpsb
lret
adc
jae
pop
and
jno
mov
mov
push
xchg
insb
and
int3
daa
mov
or
or
pushf
sahf
adc
jle
dec
fldl
xchg
fistpll
push
cld
int3
mov
scas
mov
inc
adc
outsl
aam
jo
lea
rclb
mov
or
bound
inc
cmpsb
or
decl
mov
mov
sahf
mov
push
xchg
loope
adc
pop
test
movsl
cmp
sbb
mov
cmp
inc
pusha
cmp
fcoms
loopne
mov
arpl
cmpsl
mov
push
dec
mov
inc
xor
mov
divb
jp
daa
add
fcomps
push
cmp
jle
sti
pop
lret
xchg
adc
push
cld
iret
dec
xchg
adc
movsb
inc
mov
dec
push
cmp
add
inc
sub
lds
mov
outsb
add
icebp
sbb
iret
cmp
das
sbb
movsl
add
push
push
mov
fstps
roll
jbe
inc
cli
mov
pop
cltd
jae
ret
and
jl
aad
fsubr
add
sub
shll
lcall
dec
jle
inc
ja
jle
adc
mov
mov
orl
in
ja
pop
pop
dec
xchg
std
push
iret
mov
rcrl
xchg
nop
xchg
test
sbb
push
sbb
adc
fisttpl
mov
in
ret
lret
andb
rcr
ja
mov
sarb
daa
inc
inc
xchg
push
mov
pop
orb
es
lret
inc
or
stos
lcall
dec
add
insb
or
pop
sub
scas
or
popa
mov
dec
mov
adc
push
cmp
dec
mov
jmp
xchg
jno
inc
iret
sbb
sub
mov
pop
subb
dec
nop
lock
ss
pop
jnp
testb
push
cmpsl
cmpsb
jns
jo
dec
xorb
jge
ja
mov
daa
push
jnp
cltd
lds
insl
out
iret
popa
fucom
sub
nop
jp
pop
xor
test
cmp
mov
in
pushf
mov
popa
idivl
imul
lret
rclb
sub
popf
ss
xchg
sub
stc
sub
outsl
and
fdiv
xor
iret
sub
orb
push
aad
xchg
pop
out
mov
cmpb
inc
icebp
fwait
pusha
pop
leave
clc
cltd
xor
out
mov
mov
sbbb
call
xchg
or
dec
loope
out
add
out
mulb
aaa
inc
mov
cmpsb
mov
mov
mov
jg
push
pop
in
jo
adc
xchg
mov
push
jmp
mov
and
sbb
scas
loop
enter
mov
popf
or
jle
cmp
lcall
sahf
clc
test
out
dec
jne
or
enter
pop
int3
fnstsw
xor
pop
arpl
mov
sub
xor
jg
push
std
movsb
scas
add
mov
int
mov
movl
lods
jmp
test
jo
popa
sub
sti
fmuls
inc
pop
sbb
leave
inc
or
addl
mov
pop
jmp
sti
pop
and
push
pop
mov
sub
xor
pop
lret
in
and
cmp
or
push
or
sub
insb
fnsave
repnz
xor
xchg
fadds
daa
cmp
filds
loop
gs
idivb
xchg
sbbb
fsubs
in
mov
movsb
xor
je
fldenv
pop
js
lods
mov
stos
roll
cli
in
pop
xor
mov
jle
dec
jb
xchg
lcall
cmp
mov
or
xor
mov
mov
lock
stos
dec
cmp
jl
xchg
pusha
js
rclb
cmpsb
sub
leave
ja
repnz
cmp
flds
nop
push
cmp
jge
fstpt
sbb
sti
shlb
test
mov
outsb
stos
push
or
jnp
jge
sahf
call
std
mov
repnz
mov
dec
mov
cmovp
mov
ss
jp
or
jbe
ret
xchg
xor
push
sub
xor
cltd
or
or
shlb
aad
pushf
push
lods
sbb
inc
clc
ret
in
lods
cmp
fidivrl
jge
pop
ds
jge
sub
fstps
jge
sbb
nop
jns
paddsw
cmpsb
sub
movsl
cmp
push
cmpsl
test
ret
inc
popa
mov
negb
int3
in
mov
clc
pop
stc
fistpl
sbb
pop
push
adc
loopne
pop
scas
mov
les
je
imul
xor
lods
inc
mulb
es
out
imul
stos
imul
popf
sbb
and
push
pop
sbb
jae
jno
iret
xchg
cmp
cmp
inc
dec
inc
adc
hlt
outsl
fidivs
outsb
push
sbbb
test
mov
sub
frstor
mov
mov
add
push
mov
push
cs
and
xchg
imul
pushf
pop
fcoms
sbb
add
int3
loop
mov
pop
sub
fs
fsubs
pop
jl
dec
outsl
inc
mov
jnp
insb
rcrb
aas
sub
push
in
sub
mov
pop
sti
mov
xchg
pop
jns
or
add
inc
push
ret
lcall
cmpsl
fistpll
or
loope
cmp
fidivrs
ret
ficoms
cwtl
pop
mov
jge
jp
push
xor
sub
pushf
cwtl
xchg
stos
test
stos
dec
xchg
xor
ret
or
repnz
jg
cmc
cwtl
dec
pusha
aam
icebp
sub
dec
in
cwtl
aas
jnp
shlb
mov
mov
push
mov
add
inc
rcl
std
pushw
stos
arpl
sbb
mov
in
lcall
cmpsl
loop
std
cs
sbb
jb
jl
shr
repz
sub
xor
ja
push
shl
adc
push
test
xchg
test
sub
xor
out
jae,pt
push
popf
xchg
fwait
fwait
mov
and
fsubs
and
je
inc
icebp
or
clc
cmc
sbb
sahf
jbe
cmc
ja
aam
jecxz
mov
xchg
mov
and
pusha
or
sub
xlat
and
fstpt
pushf
mov
jmp
xor
int
outsb
mov
xchg
lret
adc
cmp
xchg
cmp
push
pop
mov
gs
mov
popf
repnz
ja
bound
imul
mov
test
imul
mov
mov
fsubr
push
clc
adc
adc
jnp
loopne
jp
test
mov
into
test
push
iret
xchg
sbb
aam
adc
xchg
jg
loope
sbb
and
data16
js
loope
push
sub
push
repnz
hlt
xchg
movsl
or
adc
mov
mov
fprem
add
fdivl
stos
rcrb
pop
mov
out
xor
stos
lret
das
mov
adc
outsb
bnd
fsub
repz
add
push
xchg
testl
jg
fwait
iret
aam
pop
ret
inc
mov
push
mov
out
popf
add
fstl
stc
push
cld
out
mov
imul
lea
gs
jecxz
repnz
dec
daa
je
xchg
mov
add
in
push
sbb
inc
sub
dec
adc
arpl
imul
xor
or
insl
test
fidivrs
mov
mov
dec
gs
jns
mov
scas
inc
adc
dec
sub
roll
and
mov
pop
xlat
lock
and
or
fs
insl
adc
cmp
sbb
and
int
xchg
scas
movsl
lea
stos
xchg
xchg
lock
xor
add
daa
dec
jne
nop
cmpsl
xor
test
movsl
and
pushf
adc
fs
adc
int3
mov
mov
sbb
adc
jbe
xchg
ficoml
xor
pushf
das
insb
lea
rol
jno
jg
jl
push
and
sbb
or
stos
sub
pop
jb
out
inc
sub
das
xchg
dec
mull
popa
inc
push
test
xchg
lcall
mov
pop
pop
jmp
and
mov
inc
sub
mov
scas
pusha
dec
add
shlb
add
add
mov
mov
sbbb
in
sbb
mov
sbb
inc
das
and
and
aaa
add
shr
sub
aad
sbb
mov
jg
stos
repnz
xor
clc
sub
movsb
pushf
xchg
pop
mov
cmp
push
xor
lods
in
call
imul
mov
sahf
lret
loopne
jg
aam
fdivl
mov
xchg
push
add
pop
popf
pop
cmp
adc
xor
rorl
sub
dec
fiadds
daa
stos
or
adc
and
push
iret
pop
dec
inc
movb
aam
ljmp
mov
std
fsubs
in
insb
xor
out
mov
xchg
dec
add
ja
in
push
aas
test
push
cmp
push
push
pop
mov
std
stc
aaa
push
je,pt
jl
aad
outsl
cmpsb
jg
mov
cmp
insl
xchg
or
in
sub
sub
jae
xor
sbb
in
sbb
nop
leave
rcl
enter
or
fsubr
adc
inc
sbb
sub
enter
pop
sti
rolb
inc
mov
scas
mov
jg
test
inc
inc
iret
push
imul
arpl
psubd
sarb
and
in
jle
inc
and
mulb
daa
jle
pop
repz
jg
cmp
popf
and
leave
pop
addr16
pop
push
test
adcb
mov
wrmsr
cli
xor
movsb
sub
int3
bound
fimuls
dec
arpl
dec
xchg
rorb
or
pop
insl
sub
rcr
cmp
enter
dec
add
dec
dec
cmp
outsb
loopne
dec
mov
call
popf
in
iret
andb
inc
mov
and
emms
cmc
mov
int
scas
and
outsl
pop
and
push
popa
aaa
pop
jae
insb
hlt
test
mov
pushl
inc
jnp
scas
popf
fdivrs
lea
lret
mov
adc
jb
or
xor
fadds
mov
add
jle
enter
push
push
je
mov
inc
jns
clc
fsubr
es
inc
mov
sbb
xchg
dec
sub
mov
mov
leave
dec
and
mov
add
scas
and
roll
imul
jns
jle
add
cltd
add
mov
ds
stos
lods
xchg
pop
mov
push
nop
or
jmp
mov
sbb
mov
sbb
fcmovnb
mov
repnz
xchg
cmp
inc
pop
xchg
mov
pop
orb
xor
xor
or
movsb
mov
jmp
jbe
dec
test
mov
loope
pop
add
dec
add
push
xchg
mov
adc
stc
shrl
jmp
cltd
sub
enter
jb
clc
cmpsl
ret
pop
dec
leave
sub
std
jae
mov
stc
shr
fisttpl
mov
dec
sub
pop
pop
push
xor
negl
cmc
test
lret
loop
pop
jecxz
adc
jecxz
add
inc
cmp
mov
xchg
add
stc
into
mov
mov
adc
sti
mov
cli
or
je
cwtl
xchg
cmc
aam
icebp
imul
jle
cwtl
shrb
ret
lahf
in
movsl
sbb
dec
xor
lea
sbb
lea
fldl
jle
dec
dec
loopne
les
adc
mov
pop
jns
pusha
push
cmpsl
shrl
insb
adc
ret
dec
fs
sahf
lret
stos
mov
sbb
loope
push
adc
dec
inc
adc
clc
into
push
hlt
repnz
ja
shrb
push
call
mov
sti
insb
or
stc
repz
inc
push
ljmp
add
dec
rcl
pop
iret
adc
xlat
and
call
ficomps
xchg
mov
sub
dec
popl
cmp
in
loop
fstl
inc
outsl
fnstcw
addr16
or
sub
rclb
mov
arpl
mov
aas
inc
push
xor
xchg
ret
mov
cmp
push
xor
jmp
mov
pop
inc
push
inc
lods
subb
cmpsl
inc
and
sahf
lahf
jo
bound
mov
jecxz
mov
or
fbld
idivl
sub
sbb
icebp
inc
scas
or
add
cwtl
mov
lods
stc
jne
nop
cmpsb
xchg
ret
addl
lea
loop
adc
int
dec
negb
fldt
jge
sub
test
push
imul
xchg
mov
outsl
sub
cwtl
jno
pop
test
js
scas
std
add
ja
mov
js
xchg
pop
cmp
movsb
inc
call
mov
xor
std
imul
mull
lret
push
inc
xchg
test
outsb
aaa
mov
ss
jl
jns
nop
inc
movsl
mov
mov
mov
xor
loope
mov
test
repnz
lods
repz
iret
fimuls
sbb
sub
jb
rcl
loope
add
adc
jmp
scas
or
jecxz
das
lret
mov
push
cltd
jg
jle
pop
ret
add
fbstp
xchg
fs
and
xor
jns
movsl
jle
xor
jnp
insb
sbb
int
mov
ret
bound
dec
and
pop
and
xchg
test
fsubrs
loopne
lret
sarw
mov
add
push
dec
push
sub
pusha
mov
daa
dec
push
xchg
mov
mov
and
xor
xor
jo
fisttps
cmpsl
mov
shll
push
jge
sub
sub
scas
sub
aaa
out
push
les
stos
ror
mov
das
scas
repnz
in
das
stc
pop
imul
pop
jl
sub
and
je
add
mov
cmp
or
ret
repz
sub
pop
jae
addr16
mov
lds
in
mov
lock
sarl
daa
push
arpl
gs
insl
sbb
mov
ret
out
push
in
push
push
mov
shll
stc
ffree
pop
dec
or
hlt
cmp
fdivr
or
loop
out
negb
movsl
jp
add
ljmp
jns
jp
aaa
sub
pop
adc
add
aaa
jae,pn
insb
fdivrl
test
aaa
adc
xchg
xor
je
dec
mov
pop
popa
mov
test
pop
ffreep
pop
ss
mov
mov
in
prefetch
or
fwait
mov
in
mov
mov
push
push
adc
mov
sub
jl
sbb
test
push
jb
cmp
fisubrs
mov
mov
mov
and
xchg
jno
in
push
sahf
push
adc
mov
sub
iret
hlt
aam
ss
inc
mov
popf
je
inc
ljmp
jp
in
inc
inc
jmp
stos
pop
fiadds
push
or
aad
int
cwtl
repnz
out
push
sub
push
stos
incb
test
scas
mov
mov
mov
adc
stos
add
jecxz
and
push
xchg
add
and
add
leave
lods
pop
rorb
push
jne
mov
and
insl
in
adc
xor
inc
dec
jae
out
jecxz
dec
jbe
add
movsl
cs
push
inc
scas
test
cs
inc
jecxz
je
and
jmp
ss
imul
cmc
lea
cmp
adc
repnz
pop
adc
aas
outsb
xchg
sti
or
cltd
fcomps
sti
shr
xor
sbb
fs
xchg
mov
mov
imul
bound
in
in
push
xchg
pop
mov
pop
cmp
lds
aam
mov
cmp
popa
mov
jg
mov
clc
int
pop
test
jne
iret
out
fsts
pop
xchg
cmpb
mov
aad
stc
dec
xor
push
iret
adc
stos
mov
dec
out
in
xchg
cmc
sbb
ret
test
cmp
pop
xor
and
push
lods
outsb
gs
shl
aam
mov
pushf
dec
decl
and
sub
test
ss
sbb
dec
lahf
in
je
repnz
jle
mov
mov
lods
jb
into
xchg
lods
push
dec
cmp
repnz
mov
test
push
mov
add
mov
xchg
cmp
pop
data16
jb
mov
jbe
xchg
cmp
xchg
and
roll
inc
cltd
pop
sub
icebp
xchg
lret
das
pusha
mov
cmp
popf
push
jecxz
push
test
inc
test
mov
andl
test
push
or
sbb
cmp
mov
insb
clc
jne
jl
int3
loop
add
mov
das
cs
pop
cmp
enter
int
repnz
cmp
xchg
or
xchg
or
out
mov
jmp
pop
push
out
inc
sub
sub
fnstsw
mov
jbe
jo
sbb
imul
movsb
nop
xor
and
in
decb
jge
jae
mov
addr16
out
push
in
int3
stc
int
fwait
jnp
mov
push
icebp
xchg
sub
jbe
js
cli
push
aas
pop
lahf
ret
lea
dec
std
mov
arpl
mov
inc
or
in
repnz
mov
mov
mov
shlb
and
icebp
or
mov
out
cmp
pop
lahf
lea
cmpsl
sbb
cmp
imul
jne
dec
mov
lods
icebp
jne
ret
inc
mov
popf
jne
add
pop
ja
aas
sub
mov
push
fcmovu
insl
push
jbe
subl
mov
leave
inc
push
arpl
push
in
add
pop
adc
loopne
and
popf
mov
gs
add
mov
cmp
mov
sbb
inc
mov
and
stos
inc
xor
push
sub
mov
xchg
fsub
mov
lea
push
add
pop
inc
push
imul
or
leave
dec
sarb
popf
mov
mov
add
idivb
dec
scas
mov
rcll
cs
shll
pusha
pushf
cmp
sub
int3
test
xchg
dec
or
fsubrl
or
cmp
pop
push
dec
mov
loop
or
cli
hlt
leave
pop
fs
ret
cmove
and
mov
test
adc
pop
lock
push
cs
fdivs
lret
arpl
or
lcall
push
sbb
insl
popa
push
popf
jg
test
sbb
mov
push
inc
jecxz
pop
sub
data16
imul
pop
push
mov
xchg
in
jge
xchg
push
repnz
dec
iret
and
leave
add
push
in
jae
xor
dec
xor
jns
pop
fbld
cwtl
cmp
js
daa
or
cmp
cli
pushf
daa
jns
sub
cmp
adc
test
sahf
inc
push
pop
mov
jbe
cmpsb
arpl
push
xor
insl
mov
adc
pop
jecxz
mov
popf
sarl
aam
mov
mov
test
lods
sbb
jl
xchg
repz
pop
lods
cltd
mov
inc
andl
mov
cltd
push
jno
cli
es
imul
push
xchg
sti
orb
mov
scas
popf
shll
cmp
imul
cmp
xor
sub
test
call
loop
xorb
lock
and
imul
inc
and
outsb
data16
mov
shlb
pop
andb
and
aas
shrb
pop
xchg
std
sbb
sbb
add
mov
and
lcall
jp
pop
in
add
dec
mov
lea
les
adc
adc
add
aas
pop
sti
pushf
pop
jne
or
xchg
mov
mov
and
lret
sub
dec
and
mov
nop
push
pushf
cld
sarb
xchg
fldl
pop
int
xchg
fwait
jnp
pop
cs
ror
cmp
push
sbb
jns
lods
cmp
add
xor
xchg
mov
fcomip
mov
mov
push
ret
push
sub
cmc
lea
mov
das
inc
mov
jnp
inc
dec
push
test
out
xlat
push
cmp
leave
xchg
ss
out
bound
lret
test
and
lods
cmpsl
mov
cmp
pop
mov
imul
rcrl
push
test
loop
ficompl
inc
or
xchg
mov
sbb
test
adc
sub
cltd
sub
sbbb
pop
jns
js
outsb
popf
lret
in
cld
ret
jne
mov
mov
das
popa
loope
nop
gs
lcall
cmp
xorb
or
aaa
lds
dec
xchg
xlat
xchg
data16
sub
pop
adc
sbb
xchg
jge
and
push
lahf
in
icebp
add
scas
in
mov
fs
and
dec
out
pop
adc
mov
shll
cmc
addr16
sbb
adc
std
movsl
lods
xchg
mov
push
cmp
pushw
sbb
jle
dec
add
jnp
stos
cmp
sahf
pushf
daa
lcall
xchg
add
pop
arpl
xchg
pop
loopne
push
pop
out
adc
pop
mov
testl
sarb
add
xchg
and
push
pop
fcomps
push
lods
stos
jo
fisttpl
pop
pop
mov
mov
sbb
add
sti
repnz
dec
lret
gs
out
adc
jmp
dec
xchg
pop
jo
adc
xor
sub
mov
cs
xchg
mov
ljmp
movsb
sbb
lret
sbb
push
lret
fsubrl
sub
cmp
pop
mov
push
xchg
mov
inc
dec
dec
and
cmp
jbe
xorl
jmp
jmp
ss
mov
aam
xchg
shrb
mov
leave
sbb
push
fidivl
ds
js
aad
xchg
arpl
pop
xchg
cmp
icebp
jns
adc
add
cmp
fdivl
adc
aaa
push
test
push
fsubrl
dec
fs
fcompl
lret
add
inc
cli
stos
ja
sub
mov
jge
sbb
jbe
lods
adc
js
xchg
cmpsb
pop
ret
jbe
xor
jbe
je
les
pop
ficomps
dec
dec
enter
lret
ss
adc
sub
push
leave
jg
mov
ror
push
and
lret
in
inc
fstl
in
jnp
mov
fldl
mov
fiadds
js
push
and
jecxz
orl
and
lea
out
rcl
cmp
out
cmp
xor
pop
int
push
je
jmp
cmp
mov
jne
push
push
pop
lret
es
sbb
addr16
stos
mov
jnp
and
out
jnp
pop
mov
scas
lock
ja
jp
in
mov
sub
loopne
ret
push
jne
cmp
jmp
mov
insl
or
cmp
xchg
pop
mov
jbe
call
test
dec
aas
gs
iret
dec
loop
jp
or
sub
lcall
sahf
mov
mov
jg
sub
mov
and
out
sar
jno
inc
inc
xlat
cmp
jp
call
mov
js
call
roll
inc
sub
icebp
dec
in
dec
leave
cli
pop
leave
mov
iret
mov
fdivs
inc
fisubrl
stos
addr16
cmp
out
sbb
movsl
xorl
arpl
cmpsb
mov
iret
ret
lock
pop
jmp
mov
mull
mov
sub
cmpsl
inc
or
stos
xor
popf
enter
mov
mov
sbb
pop
jnp
data16
jp
or
jmp
fists
cmc
leave
pusha
imul
lahf
lock
xchg
mov
lret
dec
dec
clc
nop
ret
mov
jnp
ret
mov
loope
mov
pop
push
addr16
push
sub
push
cmc
and
in
add
imul
push
fidivs
ret
outsl
repnz
scas
adc
sbb
movsl
jle
pop
ret
cmp
sub
cwtl
ds
jnp
aad
inc
out
out
lods
idivl
dec
inc
inc
into
in
hlt
enter
dec
add
push
sub
mov
jmp
sbb
dec
dec
cmp
fists
and
stos
mov
sub
cmpsl
fimuls
xchg
and
mov
mov
adc
das
or
aam
push
mov
hlt
xchg
out
pushf
jne
cmp
xor
into
into
fisttpl
iret
mov
push
imul
xchg
sti
int3
and
inc
dec
lahf
icebp
mov
sub
addr16
mov
jne
and
test
jp
adc
pushf
ret
ret
push
xlat
adc
aaa
mov
xlat
ds
rcrl
jle
stc
mov
inc
scas
ret
mov
xchg
es
arpl
jno
push
jne
mov
addr16
popa
dec
div
cmp
push
gs
ret
aas
push
cld
mov
mov
jecxz
jmp
gs
mov
jnp
push
bound
sub
dec
cmpsb
in
pusha
adc
mov
inc
mov
test
jno
mov
pop
cmpsl
mov
sbb
arpl
out
or
int3
pop
sub
aad
scas
xchg
fucomp
fidivrl
pop
jmp
stos
cmp
add
xor
sarb
mov
add
cwtl
jae
arpl
jo
or
mov
pusha
jo
push
cmp
push
leave
push
adc
into
popl
faddl
push
gs
pop
cwtl
xor
cmpsl
js
xchg
inc
adc
rcrb
cli
mov
adc
sbb
push
push
pop
mov
sahf
push
push
sbb
es
dec
mov
cld
loop
mov
lret
out
pop
pop
adc
mov
push
sbb
push
mov
adc
jp
imul
add
add
mov
push
out
sbb
mov
mov
pop
arpl
int3
stc
mov
cs
aam
lock
ja
adc
int3
xchg
shr
mov
sub
mov
pop
jno
addr16
and
rcr
movups
sub
pop
jae
jne
aad
inc
out
ds
xchg
adc
insl
imul
mov
xchg
testl
mov
rcr
call
fstl
or
mov
jnp
mov
sub
jmp
daa
pop
gs
loop
js
and
inc
sbb
push
arpl
adc
ja
nop
xor
xchg
inc
cmpb
sub
inc
popf
xchg
fsts
cltd
mov
mov
xchg
lea
jmp
push
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
add
add
inc
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
pusha
inc
add
addb
addb
addb
addb
addb
addb
addb
addb
jo
add
inc
add
jo
add
inc
add
jo
add
inc
add
jo
add
inc
add
stc
clc
sbb
add
add
add
add
add
add
rolb
add
enter
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
add
add
inc
push
fildll
and
sbb
lcall
add
inc
cmp
outsw
inc
outsl
insb
fs
popa
je
pop
push
imul
outsb
je
jb
popa
insb
inc
imul
in
or
add
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
xor
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
add
mov
mov
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
sub
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
mov
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
xor
mov
sub
sub
mov
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
