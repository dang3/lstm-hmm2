mov
mov
ret
mov
mov
ret
cmp
movl
jmp
xor
sbb
insb
cs
xchg
nopl
jmp
mov
xlat
les
das
sub
in
data16
ljmp
push
aas
inc
adc
rolb
dec
ret
clc
loopne
jmp
jbe
cwtl
lds
and
out
mov
mov
jge
mov
loop
stos
xor
int
popf
inc
idiv
sbbl
out
stos
xchg
pop
cmpsl
cmp
or
sub
jae
adc
dec
ss
mov
jne
lret
push
outsb
aam
jle
mov
cwtl
pop
idivl
addr16
mov
xchg
xchg
cmc
cwtl
xchg
cmp
stos
rcrl
ds
stos
dec
jnp
fiadds
popl
imul
adc
xor
js
adc
jge
mov
int3
stc
jo
inc
shrl
push
leave
arpl
inc
testl
or
dec
insl
sbb
lret
pushf
repz
lods
orb
icebp
xchg
pusha
call
hlt
jg
sub
sbb
aad
fwait
mov
xchg
repz
lret
jecxz
out
dec
inc
xor
push
aam
mov
dec
pop
fld
std
jmp
mov
pop
fcomps
adc
out
xchg
mov
aaa
jns
cmp
shl
repnz
pop
push
xchg
gs
add
pop
aad
or
cmpsb
ljmp
mov
add
fwait
xor
gs
mov
adc
insb
jle
gs
push
sahf
mov
add
icebp
mov
dec
aam
outsl
pop
pop
xor
mov
mov
das
cwtl
pop
xor
cmpsb
adc
mov
push
xor
ljmp
shr
or
movsl
lret
rorl
and
mul
in
pop
imul
fsubrl
mov
add
mov
sbb
cwtl
lods
es
xor
in
in
pop
sub
rcl
pushf
push
jno
fs
sbb
mov
pusha
insl
repnz
sub
mov
mov
sti
xor
cmp
xor
push
xor
fs
xchg
ss
in
rclb
jo
insl
test
pop
call
addl
lret
sahf
sub
jnp
insl
mov
inc
mov
dec
sbb
iret
lret
das
filds
leave
pop
out
or
add
int
addr16
cmp
into
or
scas
int
push
imul
lods
clc
jmp
call
xchg
push
stos
push
test
outsl
push
enter
sti
jecxz
std
div
inc
jle
sbb
sub
dec
mov
mov
stos
lock
mov
fidivrl
cltd
jbe
push
and
jns
mov
and
enter
les
push
test
mov
xchg
mov
insl
divb
push
je
push
out
jae
adc
lea
mov
lcall
inc
mov
jns
push
mov
cmpsl
xchg
jns
je
add
roll
data16
movsl
mov
push
push
xor
add
nop
push
lock
adc
sbb
out
insl
jae
stos
testl
xchg
and
imul
shll
out
lods
add
into
in
test
mov
mov
or
adc
pop
cmc
sarl
xchg
pusha
add
lret
aad
sbb
out
dec
xchg
dec
out
push
mov
icebp
pop
cmpb
gs
mov
roll
addr16
pop
xor
stos
mov
frstor
addr16
push
pop
lea
adc
sbb
push
jae
mov
jmp
ljmp
int3
mov
lods
jmp
jmp
test
or
add
push
arpl
pop
sub
mov
cwtl
movb
or
fucomi
jnp
inc
in
inc
les
xchg
fcoms
arpl
push
repz
data16
adc
inc
aam
insl
adc
push
xchg
mov
jnp
cmc
pop
repz
cltd
aas
xchg
adc
pop
add
in
add
js
cmp
into
lds
fs
jl
arpl
lea
aas
pop
das
pop
dec
mov
lahf
push
movsb
pop
mov
shl
or
or
xor
jle
mov
rclb
xor
imul
mov
in
pop
dec
fisttps
pop
mov
mov
fsubl
movsl
mov
dec
wrmsr
sarl
iret
adc
inc
scas
xchg
call
jae
dec
jae
ljmp
cmpsl
loop
xor
data16
sub
cmp
mov
adc
jne
pop
cs
pop
insl
lret
sbb
cmp
bound
lea
mov
cmpsl
sahf
lcall
movsl
lret
iret
pop
icebp
jmp
inc
repnz
lds
imul
iret
in
ret
sbb
aaa
ret
icebp
xor
iret
arpl
fstl
movsb
mov
jb
push
call
push
push
mov
fwait
das
push
loop
ficoml
icebp
mov
mov
or
in
cld
cmp
pop
xor
cltd
pop
xchg
leave
cmp
xchg
cmp
test
mov
movsb
loop
cmpsl
dec
push
push
js
rcrl
mov
pop
jae
rorb
stos
outsl
push
mov
sub
push
jnp
xchg
and
loop
sub
stc
and
jnp
add
push
xchg
out
and
push
xchg
cmp
xchg
ret
jecxz
add
gs
faddl
jae
jnp
nop
stc
negl
jne
addr16
mov
mov
xor
pusha
mov
sub
stc
insb
inc
lahf
pop
cmp
lods
mov
sbb
mov
sarl
or
mov
out
shr
loope
or
mov
cmp
inc
pop
out
pop
push
push
push
cmp
adc
je
and
jle
aaa
jno
inc
out
movsl
xor
push
movsb
mov
adc
inc
movswl
mov
inc
sub
sbb
dec
push
xchg
jmp
adc
scas
mov
ds
push
mov
loopne
jnp
test
mov
xor
aaa
sub
xorl
lock
in
fwait
cmp
mov
popa
xchg
aam
mov
mov
bound
pop
sbb
test
adc
xor
xor
inc
repz
pop
cmp
scas
and
dec
pusha
fisttpll
mov
sub
jae
lock
popf
push
jne
fmull
fisttps
jecxz
outsb
lock
dec
cmpsb
popa
or
mov
lret
cmpsl
inc
jmp
xchg
xlat
pop
add
test
adc
shll
fcompl
xchg
cmp
mov
mov
scas
add
je
jp
cmpl
add
movl
cmp
movl
jae
adcl
shrd
shr
ret
inc
mov
xor
and
shr
ret
xor
xor
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
movl
movl
movl
movl
movl
jmp
cld
xor
test
mov
mov
push
add
jp
mov
sahf
mov
int
fbstp
jb
jnp
xor
lods
inc
in
out
inc
xchg
sub
inc
jmp
loop
sarb
stos
and
push
xlat
cwtl
mov
daa
xchg
xor
xor
xchg
pop
xchg
aas
cltd
inc
and
xor
adc
lds
mov
xchg
daa
adcb
cmpsl
mov
push
sahf
mov
jne
lea
scas
popf
sahf
shrl
and
add
lcall
mov
and
xor
push
pop
xchg
jle
mov
or
aam
jg
mov
jecxz
pusha
movsl
sbb
mov
mov
xchg
les
into
outsl
loope
movsb
loope
sbb
jno
mov
jns
and
call
in
in
or
cmp
cs
mov
and
arpl
aaa
push
mov
push
sbb
cmpsb
and
mov
sub
push
hlt
sti
inc
xchg
xchg
bound
and
addb
sbb
xor
icebp
stc
mov
stc
jb
lea
pop
lock
jae
test
xchg
insb
mov
sarb
mov
aad
lcall
pop
cwtl
rcrl
std
jl
jns
sti
mov
push
jg
fsts
decl
jmp
inc
adcb
adc
push
sub
mov
pop
ss
and
pop
and
arpl
push
lods
loope
andl
lods
dec
pop
loopne
cld
jno
lret
loope
js
push
push
push
cltd
mov
stos
mov
pop
or
xchg
fwait
sbb
adcb
jbe,pn
hlt
icebp
jl
inc
mov
cmp
fimull
add
fstl
sub
leave
mov
push
dec
lock
push
mov
inc
and
ret
cwtl
test
dec
mov
repnz
fsubl
fmuls
mov
ficoms
int
pop
lret
je
dec
jae
cli
sub
xchg
aas
xor
sub
adc
or
mov
lahf
std
cmpsb
jno
int3
dec
cmp
outsl
pop
leave
rcrl
push
fsub
scas
enter
cmp
cwtl
mov
sub
test
and
mov
or
mov
jbe
out
push
mov
incb
mov
sub
mov
sbb
sub
mov
lds
negl
movsl
xchg
lods
and
out
clc
xor
test
je
int
ljmp
push
jle
and
cmp
jg
mov
stos
cmc
std
int
xchg
int3
inc
xchg
and
push
and
rcrl
add
lcall
mov
dec
xchg
mov
cmp
out
maskmovq
notl
inc
rorb
int
pop
sbb
bnd
ret
mov
inc
das
stos
xor
or
in
and
pop
loop
movsb
mov
inc
mov
xchg
adc
pop
cmp
sub
pop
lods
pushf
push
rolb
push
xor
add
std
push
out
jg
inc
fistl
out
fcomps
inc
sub
pop
inc
push
cli
inc
and
add
add
jns
gs
test
xchg
popa
int
pop
fstps
arpl
jno
and
dec
out
mov
scas
int
pop
pop
fisttps
dec
in
rclb
rorl
in
push
or
lcall
popa
in
sti
add
stc
and
add
imul
rorb
andb
hlt
inc
xchg
pop
dec
mov
aaa
jle
mov
pop
jge
sub
and
and
mov
jb
adc
sub
inc
and
xor
push
lcall
pop
call
pop
pop
mov
pop
aaa
leave
lahf
fadds
sbbl
mov
xchg
call
pop
mov
jle
xchg
addl
lcall
push
pusha
mov
dec
mov
mov
sbb
cmp
aam
in
cld
orb
fildll
mov
pop
mov
in
mov
adcb
jmp
je
push
inc
mov
adc
mov
mov
mov
jl
pop
mov
inc
add
addl
adc
jo
sbb
pop
pop
jle
repz
iret
repnz
mov
pushf
inc
stc
pop
push
xor
lret
notl
xchg
movsl
mov
push
in
test
lcall
ss
and
jno
repz
enter
sbb
jmp
stos
test
and
push
jecxz,pt
push
loope
push
sub
scas
ljmp
add
pop
es
cli
lock
insb
lret
xchg
pop
adc
popf
shlb
adc
adc
adc
jb
mov
or
stos
out
jle
loope
loope
in
dec
cmp
mov
cmpsl
sub
imulb
addb
pop
push
xchg
cmp
stos
cmp
inc
data16
iret
dec
stos
rcl
ret
xchg
jns
xor
xchg
mov
je
and
dec
and
repnz
xchg
jecxz
and
shll
mov
or
pushf
fisubrs
scas
dec
adc
dec
and
add
adc
xor
mov
inc
jb
in
adc
jns
mov
popf
or
add
fdivr
sarb
loopne
pushf
mov
fsubr
sub
nop
lods
popa
dec
sbb
dec
jno
add
inc
fdiv
add
add
inc
fcoml
inc
loopne
arpl
add
ds
add
lds
mov
inc
xchg
inc
inc
das
ljmp
loope
pinsrw
shrd
xchg
mov
jl
or
je
cmp
jecxz
enter
xchg
andl
xchg
xchg
pop
aas
mov
dec
pop
mov
daa
jnp
fs
mov
stc
dec
out
push
rorl
sub
sub
fidivl
ss
outsb
mull
jl
dec
insl
ret
mov
adc
inc
cli
jo
xor
lea
inc
out
inc
mov
mov
sbbl
stc
and
pop
aaa
inc
dec
or
push
ret
jecxz
pop
mov
sti
gs
popf
mov
adc
inc
mov
iret
cmp
leave
xor
mov
jbe
rol
scas
stc
fwait
pop
repz
clc
mov
in
andb
sub
jl
cld
std
sahf
push
add
dec
mov
add
and
add
decl
push
cmp
mov
ljmp
mov
pop
dec
pop
stos
mov
jecxz
pop
hlt
iret
adc
add
push
push
xor
jbe
imul
das
dec
add
cwtl
lds
sub
inc
movsb
decb
mov
cwtl
pop
push
aad
lcall
inc
xchg
dec
in
cmc
shll
jno
loop
mov
mov
loope
lods
das
lcall
bnd
mov
dec
mov
sbb
imul
mov
push
push
push
push
nop
or
fiadds
sub
cld
push
push
sti
pop
inc
rorl
sarl
push
es
sub
pop
xchg
repz
xchg
mov
fsubr
mov
pop
jp
ds
adc
cmpsb
cmp
inc
xor
mov
dec
pop
daa
leave
dec
adc
decl
mov
pop
cmc
mov
fldt
clc
pushf
xchg
push
mov
mov
mov
cmp
mov
ja
pop
push
xchg
fiadds
sbb
loop
inc
mov
push
aas
bound
daa
xor
and
pop
mov
cmp
fildl
iret
loop
mov
and
sub
jmp
ficoms
add
mov
test
int3
inc
dec
push
xor
pop
loopne
adc
xor
dec
inc
scas
pop
pop
adc
push
out
in
cmp
xor
aas
es
in
lret
shll
add
call
push
and
push
paddw
rol
xlat
mov
or
xchg
sub
test
in
cmp
xorl
mov
stc
jg
xchg
adc
sar
mov
ret
sbb
push
xlat
jg
push
jns
out
and
or
pusha
out
xor
test
int
dec
push
dec
push
jmp
adc
addr16
ds
jno
push
mov
pop
jg
cmpsb
das
mov
pop
movsl
aad
scas
leave
sub
push
daa
fisttps
mov
orl
mov
add
loop
sbb
adcb
push
jo
push
mov
mov
pop
pop
dec
scas
dec
sbb
and
or
mov
out
adcl
pushf
shrb
cmp
xchg
sbb
sub
scas
jbe
inc
loopne
das
nop
daa
fildll
mov
pop
adc
pop
sbb
xor
cmp
xor
lahf
cmp
add
sbb
push
mov
xlat
jnp
push
jo
or
mov
xchg
sub
push
out
jmp
fidivrl
mov
test
cmp
xor
pop
jecxz
int3
jge
cmp
inc
imul
jno
in
jle
lret
or
stos
in
popf
test
push
add
sub
sub
das
xchg
inc
add
mov
cmc
fdivl
les
dec
cmc
cmpsb
xor
lret
push
fwait
cmp
repz
mov
jg
inc
push
gs
pop
mov
xlat
mov
jae
cltd
jg
loopne
mov
jg
mov
data16
or
push
adc
mov
mov
mov
jns
out
and
inc
sti
lods
ja,pn
std
das
pop
or
sbb
mov
ficoml
int3
addl
cmp
xorb
repz
rolb
cmp
test
inc
scas
add
and
mov
shrb
nop
test
repnz
push
inc
enter
xchg
xchg
out
out
stos
mov
sbb
xor
push
jae
fsubrs
js
aas
outsl
mov
pop
cs
rorb
or
pop
lods
inc
xchg
jp
es
adc
in
lcall
bound
jg
lock
mov
ds
dec
repz
xchg
ret
lahf
sarl
rcrl
mov
ds
jp
scas
jle
test
mov
xor
jns
stos
sbb
jp
ja
shll
mov
cmc
rcrb
in
pinsrw
data16
or
ss
dec
sbb
sub
sarl
mov
arpl
mov
inc
data16
incl
notl
pop
adc
lods
jae
xchg
and
mov
or
aaa
add
cli
in
mulb
das
or
cmp
xor
cmc
mov
mov
adc
fisttpll
cmp
out
arpl
jne
imul
testb
mov
cmc
jle
stos
ficoml
out
mov
sarl
les
not
aas
pop
inc
jge
pusha
rcr
mov
iret
iret
xchg
push
in
fs
ss
cmp
xor
dec
add
movl
mov
mov
jmp
pop
inc
sti
and
jbe
pop
js
test
xchg
fimuls
pinsrw
movzwl
pop
mov
inc
and
inc
inc
orl
push
adc
add
push
ret
popf
and
add
arpl
inc
jae
call
loopne
pushf
loopne
sub
rep
xor
repz
arpl
lcall
sar
es
lds
sub
sbb
int3
sbb
cmp
pop
sti
pop
pop
ja
rclb
lock
rclb
jp
out
and
sbb
mov
mov
cmc
jbe
cmp
icebp
sbb
dec
outsb
dec
sbb
aas
cmp
loopne
mov
mov
add
sub
adc
sub
js
cmp
in
sahf
clc
out
mov
sbb
faddl
sub
pop
jne
xchg
jmp
adc
cmp
pminsw
lods
out
je
js
cli
in
and
mov
repz
inc
mov
cmpb
call
stos
mov
call
inc
bound
popf
sub
rcrl
stc
cmpsb
enter
ss
mov
scas
dec
pop
or
xchg
adc
xchg
insl
lea
xchg
enter
sbb
sbb
sti
das
pop
rol
mov
xchg
clts
mov
jle
adc
roll
add
test
ds
mov
xor
xchg
mov
pop
leave
inc
mov
cmp
xchg
xchg
xor
mov
jno
mov
or
stc
pop
mov
sub
xor
adc
inc
lods
or
nop
icebp
xor
pop
xor
add
pusha
cmp
movsb
fldl
pop
jle
mov
clc
scas
shll
dec
stos
inc
adc
cltd
outsb
or
sbb
imul
scas
inc
pop
loope
test
out
subl
dec
and
clc
out
inc
fs
fcoms
xchg
push
xor
lock
jns
jno
sbb
sbb
mov
mov
mov
pop
jl
test
sub
inc
xchg
push
iret
sub
inc
sbb
xor
test
cltd
xchg
mov
push
push
gs
ffreep
pop
pop
or
and
sub
mov
decl
addb
sar
pop
fdivs
das
cwtl
push
adc
jne
dec
je
popf
ljmp
and
push
pop
shll
aas
js
cmp
jno
cmpsb
mov
es
xchg
and
insb
push
mov
into
and
movsl
or
dec
xchg
pop
lock
inc
scas
xor
cmp
pop
mov
xchg
scas
sub
jecxz
push
mov
loopne
inc
jne
fcomps
cmp
pushl
ds
pop
sbb
adc
cmp
fiaddl
das
lea
rolb
bound
ret
loopne
jecxz
je
aaa
or
dec
mov
mov
mov
fcomp
cmp
xor
stos
xchg
scas
in
and
mov
in
jmp
sub
push
and
cmp
ret
mov
enter
push
cmp
mov
or
jne
mov
into
pop
in
pusha
push
mov
inc
dec
sub
push
ret
sub
mov
pop
cmp
dec
pop
sahf
push
pushf
test
ret
out
leave
out
xor
shrl
xor
scas
repz
and
adc
out
xchg
sub
jns
insl
popf
fisttpll
pop
lcall
mov
xchg
out
cltd
mov
fcomip
imulb
add
pop
and
xchg
push
lret
push
loop
mov
xchg
popa
cs
add
pop
push
pusha
stc
xor
aam
or
mov
test
rcll
outsl
xchg
mov
call
sub
cmpsl
cmp
adc
dec
push
pop
ja
push
xor
aas
je
fwait
outsb
mov
stc
adc
sbb
fidivl
cmpsl
ljmp
push
lock
cmpl
push
sub
pop
or
cmp
out
mov
cmp
cmp
cmpsl
jo
jae
jge
repnz
hlt
push
adc
aas
sub
push
test
jg
movsb
jmp
mov
pop
test
cmc
dec
cmpsb
and
fsubl
scas
jnp
test
xor
mov
ss
loope
in
push
xchg
rorb
std
xchg
xchg
daa
push
pop
inc
add
shll
les
sahf
je
dec
ja
xchg
jns
mov
cmp
shll
jg
ja
and
outsl
xchg
stos
enter
movaps
adc
shl
dec
fisubl
pop
adc
lret
jbe
jle
xor
pop
lock
mov
sub
dec
pop
arpl
sub
mov
cmp
aaa
cld
outsb
mov
pop
or
push
sbb
mov
push
arpl
push
mov
jnp
sbbb
mov
nop
les
mov
inc
lods
inc
shrl
pop
mov
cmpsl
pop
lock
es
arpl
sti
stos
inc
int3
in
lret
push
andl
inc
filds
fisttpll
mov
push
int3
jne
aam
nop
sarb
add
or
lcall
inc
inc
out
aas
mov
fisttps
popa
sbb
in
shl
outsb
lds
loop
inc
je
cmp
stos
mov
adc
jge
movb
sub
fwait
addr16
movsl
fcmovbe
xchg
repnz
lahf
dec
xchg
inc
xor
outsl
adc
in
xchg
sub
les
rorb
push
inc
add
xor
imul
mov
push
sub
push
movl
jmp
ljmp
stos
lea
jbe
xchg
and
dec
cmp
pinsrw
jbe
fdivs
negl
ja
int3
loop
insb
insl
push
sbb
mov
shlb
out
push
inc
sbb
inc
sub
xlat
fldt
push
orb
aaa
xor
mov
in
in
inc
jae
int
and
jnp
outsb
fwait
imul
push
je
xor
mov
adc
mov
xchg
xchg
mov
cmp
pop
or
hlt
pop
adc
data16
inc
dec
fists
mov
push
mov
jno
jbe
dec
jl
fdivrl
cmp
mov
inc
jo
hlt
mov
nop
inc
pop
mov
repnz
push
fmull
daa
gs
and
or
negl
adc
repz
jno
lea
mov
scas
xor
pop
jecxz
jnp
push
fmull
in
push
mov
std
sbb
push
sbb
xchg
pop
les
clc
jp
mov
lahf
xchg
inc
sub
cmpsl
in
push
leave
mov
ficoml
scas
notb
dec
cmp
sbb
adc
dec
stc
sub
or
popf
xor
push
aad
and
sub
add
bound
mov
in
dec
sbbb
out
daa
fldcw
push
sbb
mov
cli
inc
push
pop
inc
xor
cmc
aam
arpl
test
xchg
jle
mov
cmp
pop
fwait
mov
lret
pusha
cmp
jmp
ret
or
mov
and
pop
out
inc
pandn
push
movsl
inc
lret
test
fbld
andb
bound
data16
sub
jno
xchg
je
mov
mov
push
mov
test
dec
scas
outsl
jnp
jmp
aas
add
mov
sbb
sbb
push
xchg
inc
push
dec
or
xor
icebp
outsl
sti
xchg
lds
stos
pop
cmpsl
ret
sub
popa
mov
rorb
in
mov
or
incl
inc
dec
int
mov
and
or
dec
xor
cs
jmp
mov
push
outsl
fiaddl
hlt
stc
repnz
push
ret
and
out
aad
mov
jno
sub
pop
subb
arpl
mov
push
out
mov
jg
cmpsl
test
xor
dec
dec
mov
popf
mov
sbb
cmpl
sub
and
add
jg
testl
dec
test
fsubrl
inc
mov
add
repz
ret
dec
loopne
xchg
inc
inc
scas
adc
clc
ret
and
leave
aam
shrb
enter
test
pop
clc
sbb
imul
jecxz
sbb
mov
jae
fidivrs
sub
xchg
data16
mov
mov
adc
enter
out
mov
push
sbb
adc
sub
adc
dec
cmp
mov
ljmp
mov
rcrb
sbb
pop
lret
test
push
adc
test
inc
and
aad
cmp
and
cld
mov
push
push
xor
push
cld
inc
movsb
xorb
sbb
xchg
push
pop
mov
push
push
popf
jmp
pop
repnz
push
jo
movsl
push
jmp
inc
pmovmskb
popf
dec
mov
in
push
outsb
cmpsl
inc
lahf
cmp
daa
mov
jmp
cs
or
mov
insl
and
dec
js
rcr
in
sbb
in
stc
push
imull
inc
pop
adc
cmc
enter
out
sub
sbb
mov
mov
add
inc
mov
cmp
lods
mov
cwtl
fs
mov
aaa
int3
xor
pop
dec
icebp
enter
pop
fnop
aaa
out
stos
jp
adc
dec
adc
lahf
dec
xchg
aaa
insl
or
int3
add
inc
cmp
hlt
push
mov
lock
mov
scas
and
dec
pusha
cmp
sub
neg
ret
arpl
ss
mov
xchg
push
mov
fsubl
push
xchg
sbb
clc
xor
fistl
jb
ss
stos
xlat
dec
and
dec
dec
pusha
adcb
sub
sub
push
jne
enter
ffree
cmp
insb
mov
out
adcl
jmp
idivl
das
dec
xchg
jno
xchg
and
xor
test
bound
xchg
xor
dec
aas
sbb
int3
and
push
sbb
pop
jmp
js
push
je
js
and
and
cmp
test
or
sbb
fstl
das
jg
scas
pushf
adc
add
jne
push
pop
pop
add
cld
mov
adc
bnd
call
dec
fisubrs
xcrypt-cfb
cmpsl
and
dec
lcall
mov
cld
or
mov
adc
mov
stos
in
icebp
dec
add
loope
aad
loopne
xchg
jb
adc
mov
ja
or
out
jne
fidivrs
inc
cs
rol
loop
repnz
dec
xchg
or
loopne
mov
or
adc
flds
fistps
insb
xor
into
inc
dec
cmpsb
mov
in
and
mov
fcoml
cmp
sbb
mov
ret
subb
addr16
notl
sbb
cmpsl
inc
jle
mov
cs
jg
lcall
cmp
push
pop
std
fnstcw
mov
xchg
repnz
test
xchg
popa
ja
cli
fidivrl
stc
out
jns
mov
mov
inc
sbb
add
inc
in
sahf
add
movl
movl
mov
xor
add
mov
or
sub
mov
mov
and
or
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
xor
jmp
xchg
mov
imul
pushf
xchg
in
rorb
pinsrw
jp
sub
je
pop
iret
lret
push
push
sub
mov
jne
mov
std
movsb
push
stos
cmp
pop
push
push
leave
test
mov
leave
push
push
sub
add
dec
test
leave
mov
orb
jg
fbld
setnp
sub
adc
push
jae
mov
jo
int3
mov
sub
imulb
ja
mov
hlt
out
pusha
mov
pushf
sbb
dec
mov
leave
lahf
enter
push
push
inc
movl
lret
pushl
mov
dec
adc
mov
mov
and
incl
mov
arpl
movsl
fdivrs
fcmovu
repnz
cmp
shll
or
cmp
into
xchg
in
pop
aas
mov
ret
xor
repnz
cltd
fs
je
xchg
or
js
mov
or
sbb
xchg
mov
imull
jo
mov
aas
add
testl
faddl
loope
jge
push
mov
mov
repnz
add
jae
mov
add
shlb
out
xchg
mov
and
adc
pop
dec
sahf
inc
stos
test
fidivrl
mov
outsb
sub
loope
xchg
pop
lcall
mov
inc
mov
loop
push
push
inc
nop
adc
imul
inc
loope
add
aam
sub
cmpsb
pusha
mov
cmp
rol
rcrb
dec
jle
nop
shlb
jmp
cli
sub
enter
sahf
or
jnp
sub
dec
je
or
xor
scas
and
cmp
and
iret
mov
fsubs
or
aaa
xor
jno
jb
jno
sahf
dec
leave
and
shlb
cltd
mov
add
fisubl
loop
into
pushf
div
call
push
fsubs
sarl
aas
inc
and
pop
das
push
jo
pop
sbb
jg
pop
inc
shll
loop
jae
mov
fstpl
inc
ret
xor
pop
push
jecxz
aaa
mov
adc
cmp
xor
mov
or
inc
jns
daa
jb
imul
pop
xchg
add
sbb
in
mov
dec
ds
scas
sbb
push
stc
dec
sti
test
dec
fiadds
jp
sbb
jns
outsb
add
int3
dec
inc
js
aam
sub
imul
push
testb
lret
dec
or
mov
jbe
jo
sub
arpl
cld
mov
fwait
in
loopne
int
daa
and
cmpsb
test
in
arpl
inc
sub
pop
mov
aad
ret
sbb
out
lcall
ss
xchg
inc
jns
fbld
imul
xchg
adc
jl
outsl
inc
aaa
jmp
call
mov
aaa
push
xor
test
call
or
js
push
and
cmp
push
stc
iret
mov
and
jmp
pop
cwtl
jo
fsubl
aam
aas
jns
xchg
shr
inc
insb
sbb
nop
repnz
jecxz
dec
cmp
jge
sbb
stc
cs
pop
pop
subl
or
out
mov
and
arpl
mov
mov
xchg
fsubs
and
loope
in
ljmp
das
xchg
cs
sub
daa
or
adc
sub
gs
xor
ds
and
cmp
pop
icebp
stc
rcrl
cmp
lock
jg
test
sahf
out
loope
jmp
lock
and
cmc
pushf
sahf
push
jbe
sarl
jmp
test
ljmp
or
sub
inc
pop
mov
xor
dec
cmc
inc
xor
or
mov
xor
das
dec
sbbb
cmp
adc
sbb
cmp
sub
pop
pop
push
push
xchg
ljmp
stos
sub
xor
xchg
aas
in
or
imul
enter
out
dec
sbb
mov
icebp
ret
fwait
mov
mov
pop
fwait
in
addr16
sbb
enter
pusha
inc
mov
sub
movsl
into
sbb
fsts
jecxz
ljmp
cs
rcrl
cli
aaa
mov
mov
sub
jo
ss
lahf
mov
mov
out
and
push
mov
hlt
and
sub
jns
scas
adc
pop
test
inc
leave
mov
sarb
sub
stos
push
mov
pusha
int
out
mov
mov
das
pop
xchg
or
out
rcrb
clc
jecxz
add
cmp
adc
je
jo
ret
xor
std
stc
dec
sbb
xchg
sahf
lret
imul
jge
sbb
or
repnz
aam
cwtl
je
nop
dec
shrl
std
cmpsb
and
popf
test
hlt
test
cltd
cwtl
movsb
sbb
xchg
stos
out
loop
sbb
lock
icebp
lods
mov
gs
cmp
dec
lea
or
or
jbe
pop
xchg
sar
mov
sbb
call
pop
pop
int
sub
jbe
loope
dec
nop
cwtl
add
out
pop
daa
ljmp
xchg
pop
sbb
mov
sahf
cmp
fldcw
test
and
bound
mov
mov
stos
mov
pop
sarl
jo
icebp
std
or
sbb
dec
leave
imul
or
xor
mov
imul
lea
mov
mov
imul
mov
mov
or
xor
div
mov
jmp
push
fadds
sub
push
and
cmp
dec
pop
loope
js
les
pinsrw
pop
js
sub
leave
in
insb
mov
or
lods
jmp
or
out
mov
cmpsl
outsl
push
aam
xor
les
mov
sahf
lods
popa
adc
mov
fistpl
adc
mov
insb
and
and
pop
les
jle
lret
mov
mov
shr
jle
insl
and
adc
mov
xchg
mov
sahf
and
pop
pushf
test
adc
adc
roll
push
out
cltd
in
insl
stos
mov
dec
movsb
pusha
sub
and
idivb
push
push
clc
pop
jp
or
pop
xchg
dec
ret
and
out
push
jbe
lahf
xor
and
push
sbb
adc
fbstp
jle
insb
daa
inc
imul
and
xor
pusha
dec
sahf
sti
pop
pop
push
push
or
push
jl
gs
adc
cmovo
imul
mov
in
push
lods
mov
or
jl
cmpsl
out
test
shll
inc
test
ret
mov
hlt
add
inc
mov
inc
inc
fistps
mov
testb
mov
bnd
leave
adc
xchg
sbb
inc
cmc
sti
int3
and
adc
inc
jmp
rcll
pop
lds
enter
lea
mov
les
dec
into
nop
xor
jl
aas
hlt
insb
push
jne
cli
mov
jmp
loop
stc
push
into
dec
mov
push
in
iret
lcall
nop
inc
cltd
jecxz
pop
clc
mov
scas
cmp
push
add
in
lea
mov
sub
or
test
pop
jo
add
clc
and
sub
lds
fwait
les
sarb
or
mov
mov
lock
addb
jle
xlat
adc
inc
cwtl
aad
das
cmp
push
fisttpll
cs
jmp
xchg
and
sub
pop
repz
in
ret
imul
insb
daa
andl
cld
mov
fstl
or
jmp
add
xchg
test
push
or
nop
fidivs
dec
fdivs
addb
sbbl
or
xor
sbb
loopne
vcvtdq2ps
push
and
fists
mov
idivb
in
sbb
xchg
imul
jb
stc
push
lret
sbb
ffreep
mov
sbb
loopne
mov
stc
insb
xor
loop
mov
adc
sbb
cmpsb
add
mov
stos
and
sbb
pushf
std
aam
adc
jmp
pop
xor
mov
and
push
sbb
sub
push
mov
jecxz
dec
rorl
sbb
push
push
xor
loope
cmp
fisubrs
mov
testb
xlat
mov
push
adc
test
xchg
fldpi
aam
or
outsl
jecxz,pn
mov
das
mov
loop
loope
aam
xor
add
xchg
jmp
sbb
sub
xchg
addr16
daa
outsl
jbe
push
inc
in
int3
mov
fs
jp,pn
roll
sbb
sbb
mov
cmp
dec
cwtl
pop
loope
stos
xchg
cmp
sahf
es
inc
rol
dec
xor
das
xor
pop
pop
ret
mov
sahf
jae
jnp
divl
xor
dec
and
xor
mov
daa
mov
lods
cmc
dec
jae
cmp
add
ss
or
out
mov
xchg
ss
xor
outsb
push
sbb
sbb
push
mov
fwait
xor
les
pop
jns,pt
jbe
xchg
outsl
jo
dec
or
dec
adc
mov
xlat
in
ret
push
loop
adc
mov
jge
es
jns
xchg
push
xchg
adc
adc
shlb
in
out
adc
fcompl
in
jae
inc
jae
push
mov
push
mov
push
out
lahf
pop
imul
jne
movsl
xor
arpl
lock
std
jno
jge
xor
xor
subb
and
inc
mov
lea
dec
sbb
pop
lods
mov
sbb
mov
incb
mov
stos
mov
mov
jns
dec
xchg
call
mov
push
fildl
cltd
ss
adc
hlt
jae
jg
ret
int
and
dec
push
mov
push
repnz
fcom
jae
or
out
sbbl
sub
push
aam
xor
arpl
inc
clc
sub
jbe
lret
mov
test
icebp
jb
inc
cmp
cld
sti
jp
sbb
loop
pop
ficomps
jge
mov
es
sbb
in
aam
ret
in
stos
fneni(8087
dec
sti
in
push
sbb
in
and
jecxz
sub
adc
jb
mov
pop
frstor
popf
jnp
cmc
dec
ss
or
hlt
add
stos
pop
fwait
std
pusha
push
xchg
cmp
sbbl
cwtl
dec
shll
jb
test
inc
loope
mov
data16
scas
loopne
out
mov
mov
dec
in
xchg
xchg
scas
xchg
pop
aas
mov
mov
sub
mov
scas
jmp
push
mov
outsl
cmp
imul
cmp
mov
and
lea
sbb
xchg
push
inc
test
cwtl
adc
mov
mov
sbb
jne
pop
lods
cmpsl
jmp
roll
lret
iret
test
cwtl
pop
fsubl
add
xchg
out
pop
loope
clc
into
push
mov
mov
iret
add
cmpsl
cld
push
inc
pop
test
xor
int3
imul
inc
xor
mov
das
pop
add
mulb
and
daa
js
jp
aaa
int3
ficoml
movntq
ret
dec
add
cmp
jb
movl
movl
movl
movl
jmp
xorb
ret
xor
xor
jecxz
data16
test
pinsrw
cld
movsl
cs
hlt
jbe
rorl
add
aaa
jbe
leave
roll
cmc
push
int3
nop
pop
in
divl
js
nop
out
mov
test
fcomi
out
pushf
mov
pop
int3
pop
sub
cmp
fwait
mov
lods
pop
push
sarb
outsl
jb
pop
je
xchg
out
or
jns
outsl
aad
jmp
cmp
aad
dec
ds
nop
fistpl
sbb
iret
mov
xchg
pop
addr16
mov
mov
xchg
push
dec
insl
js
flds
xchg
popf
sahf
fmul
clc
cs
fistps
rcr
dec
mov
bound
daa
cltd
mov
jae
in
in
fwait
or
idiv
sbbl
pop
jo
jnp
out
ss
add
mov
jnp
adcl
mov
pop
xchg
push
fsubl
pop
fs
mov
mov
lahf
fisttpll
and
cmp
insb
les
in
punpckhdq
test
jo
sub
sub
mov
mov
pop
sub
lcall
cmc
adc
xor
ret
cmpsb
enter
xchg
mov
popf
or
push
xchg
cmp
test
xchg
or
xchg
insl
mov
mov
or
in
add
xor
xchg
mov
cmpb
imul
sub
jno
cli
adc
cmp
jmp
xchg
sbb
dec
jmp
ljmp
jne
pop
mov
shrl
cmc
in
loop
cmp
mov
rcl
nopl
cmpsl
xor
daa
inc
adc
aam
xchg
sub
jb
mov
dec
loop
inc
inc
push
xchg
jge
stc
cmp
cmp
pop
mov
cs
mov
sbb
xchg
inc
out
popf
aas
add
cltd
rcrb
mov
inc
les
stc
pusha
inc
mov
mov
roll
cld
movsb
mov
mov
popa
loope
adcl
repnz
inc
push
clc
jmp
cltd
sub
movsl
sub
and
sub
jle
push
jae
jmp
dec
out
xchg
pop
xchg
cmp
xchg
or
or
lea
leave
loope
out
inc
sub
push
xor
cmp
inc
loop
rcrl
cld
dec
cmp
adc
fidivrs
loopne
addr16
mov
out
ljmp
pop
jno
call
inc
inc
in
xlat
cmpsb
or
jne
bt
pop
fstl
aam
jno
fst
popf
aas
jl
not
popf
fidivl
jb
lahf
pop
scas
inc
adc
lods
mov
movl
fcmove
add
das
outsb
mov
mov
dec
mov
and
mov
xchg
mov
adc
mov
add
cmpsb
mov
dec
rorl
jno
mov
inc
adc
pop
xor
jbe
cmp
cltd
or
pop
cltd
cmp
testl
cmpsb
insb
inc
js
loopne
mov
sub
fmuls
xchg
cs
sub
test
xlat
bt
push
pop
lcall
sub
in
scas
cwtl
aad
leave
aam
cmp
mov
cmp
movb
push
iret
xor
inc
out
daa
and
cmpl
sub
inc
les
inc
sbb
xchg
cs
popl
scas
xchg
xchg
sarl
andb
pop
repz
adc
inc
or
xor
test
cltd
lret
pop
pop
mov
xor
pop
mov
lock
push
push
dec
sahf
out
popf
ficoms
jns
stos
cwtl
loope
adcb
lock
sti
shl
mov
push
mov
xchg
nop
sub
push
imul
mov
fbld
outsb
jg
mov
mov
pop
cltd
loop
addr16
adc
enter
ffree
add
sarl
dec
into
adc
popf
bound
and
add
jo
clc
inc
jne
frstpm(287
test
dec
add
rcl
das
add
aaa
dec
ja
daa
add
cli
jno
sbbl
insl
pusha
mov
shll
out
ffree
adc
jae
jmp
ss
and
mov
in
and
scas
fs
lods
mov
mov
iret
mov
mov
push
and
inc
stc
and
pop
add
xchg
ljmp
cmp
ss
jge
data16
notl
jne
push
dec
fimuls
pop
mov
and
pushf
incl
xchg
cs
nop
xchg
mov
fmuls
bound
jge
ljmp
cmp
arpl
sti
out
sar
fstl
outsl
cs
cmp
outsb
loop
repnz
pop
sbb
lea
inc
adc
or
inc
mov
push
sbb
or
leave
stc
out
or
clc
out
out
dec
lods
push
dec
mov
jmp
imul
orb
jb
cwtl
cli
cwtl
dec
push
je
dec
lock
push
es
call
lds
jb
jns
fdivrs
js
mov
das
mov
paddsb
xor
ja
repnz
daa
in
fdivs
call
jmp
pop
mov
fiaddl
dec
mov
mov
cwtl
sahf
roll
cmp
arpl
enter
adc
repnz
movsl
lahf
cwtl
jmp
shrl
je
jge
mov
cmp
inc
hlt
rcll
add
inc
lock
inc
in
sbb
add
movl
movl
movl
mov
mov
or
lea
add
movl
jmp
add
inc
sti
daa
push
cs
or
pop
js
pushf
pinsrw
psubb
lret
adc
mov
jnp
std
pop
lods
mov
dec
inc
xor
std
jae
std
mov
jecxz
adc
pop
out
jmp
adc
gs
lret
mov
dec
and
mov
jns
dec
incl
stos
bound
das
adc
push
test
jns
fwait
in
jmp
in
mov
call
push
sub
xor
leave
mov
aam
sbb
enter
in
ds
or
adc
cmp
rorb
fmuls
mov
movsb
das
js
scas
sub
sbb
push
pop
and
cwtl
xchg
bound
jmp
imul
lds
or
sbb
adc
leave
and
xchg
out
and
lcall
or
bound
xor
ret
xor
or
and
jbe
push
lock
cld
mov
add
mov
sub
cs
sbb
dec
leave
adc
inc
add
popf
inc
neg
into
mov
push
sub
jmp
mov
xlat
cmp
xchg
jb
xorb
adc
or
or
cmc
shlb
fwait
leave
sbb
cmp
divl
gs
push
add
jp,pn
mov
jmp
int3
pop
adc
ret
out
xor
dec
adc
dec
addr16
inc
js
mov
cltd
mov
xchg
sbb
mov
xor
pop
xchg
cmp
jno
pop
fsubr
mov
insb
mov
xlat
sbb
cmp
in
js
movsb
push
aas
imul
call
lods
and
dec
movsl
inc
mov
hlt
mov
pop
cwtl
out
ljmp
lret
push
mov
xor
jmp
scas
fimull
jno
rorb
inc
add
enter
in
inc
adc
mov
enter
mov
std
insl
or
enter
push
clc
pop
aas
xchg
mov
mov
mov
fistl
inc
mov
jge
aaa
add
sbb
ficomps
lret
pop
inc
rolb
lret
mov
int
xchg
pop
out
pop
inc
push
aad
sub
push
fsubrl
inc
lcall
nop
ret
cltd
jb
ret
ficoml
andb
push
lock
push
jmp
pop
scas
ljmp
vcvtsi2sd
jne
aaa
out
pusha
adc
fistps
mov
outsb
call
add
stc
lahf
popf
aaa
movsl
ret
sbb
out
cli
cmp
jae
jb
mov
ret
lret
movsl
scas
fnsave
mov
test
and
or
cmpsb
mov
je
std
out
mov
popl
cmpsb
mov
mov
stos
sub
inc
mov
mov
pop
stos
call
out
ja
inc
mov
lods
mov
xchg
mov
rcrl
mov
sbb
xchg
out
into
in
in
mov
pop
inc
and
cltd
std
cmp
and
and
jp
xor
pop
mov
adc
sbb
cmpsl
insb
addb
mov
mov
push
mov
shlb
adc
mov
dec
pop
pop
jg
aad
es
mov
fsts
add
ds
int3
arpl
movzbl
add
jg
ror
mov
pop
inc
inc
push
dec
jecxz
testl
stc
pinsrw
rolb
inc
cmc
jmp
adc
push
or
out
or
das
pop
lret
add
mov
cmp
xor
jns
nop
xor
test
aaa
dec
stc
outsb
int
push
lcall
fs
dec
pop
test
xchg
nop
scas
push
lret
into
mov
pop
rol
mov
cli
dec
andl
mov
shll
jge
jl
repz
in
pop
mov
pop
jmp
repz
dec
dec
jp
imul
or
adc
aad
mov
and
rcrb
stc
jnp
xchg
pop
in
in
pop
stos
and
fldl
loop
xchg
and
mov
popa
fs
pop
xacquire
dec
in
cmpsb
jge
repnz
mov
mov
push
cmp
out
sbb
fsubrs
mov
aas
shrl
fbstp
and
mov
in
push
shrb
push
mov
inc
add
out
add
cmp
std
jno
pop
mov
sbb
push
adc
cwtl
jmp
lret
test
cmp
mov
pushf
cs
ud2
mov
mov
in
jl
xor
cmp
loopne
leave
pop
or
mov
dec
scas
inc
push
add
jne
jo
outsl
inc
inc
and
bound
mov
data16
movsl
jmp
cmp
push
shrl
mov
pop
sbb
or
push
pop
jmp
cs
inc
aaa
cmc
push
push
bsr
sbb
test
xchg
sub
ljmp
and
dec
xchg
loopne
daa
add
sbb
in
out
ret
add
sbb
gs
jl
sbb
push
add
repnz
les
je
adc
iret
xchg
and
mov
jae
out
push
add
stos
cli
add
mov
adc
fidivrl
sub
daa
pop
jp
add
cmc
sti
adc
cmp
in
rclb
iret
out
in
xchg
cmp
and
outsl
sub
ficomps
int
jp
enter
shl
inc
insb
or
dec
pop
cmpsl
ret
jnp
mov
mov
pop
insl
lods
dec
notb
mov
pop
fstpt
or
or
add
inc
int3
fwait
push
add
movl
movl
movl
mov
mov
sub
add
mov
imul
mov
mov
jmp
aad
sub
ss
adc
xchg
fmuls
rclb
xorps
andl
inc
fdivrs
pop
scas
cs
mov
mov
fstps
pop
push
enter
or
and
sub
mov
sub
xor
stc
pop
call
pop
cmpsl
inc
jnp
cld
and
in
loopne
or
jmp
mov
sub
cmp
cli
std
sbb
scas
mov
cltd
aam
mov
cmc
fdivrl
cld
adc
pop
adc
sti
aas
int3
and
stos
jae
out
insl
sub
add
lahf
xchg
subl
mov
popa
bound
pop
cmp
pop
sbbb
cmp
mov
inc
push
setne
sub
scas
cmp
mov
push
mov
inc
xor
ret
sbb
cmpl
or
imul
cli
addr16
jo
dec
rclb
dec
hlt
pop
add
sbb
divl
and
mov
mov
movsb
hlt
nop
push
sub
mov
test
xchg
push
iret
rclb
mov
dec
cwtl
sbb
jne
add
out
or
pop
mov
lcall
sarb
stos
jb
mov
rcrl
in
mov
std
cs
push
cmc
sub
sbb
lret
jne
inc
out
sub
mov
stc
cli
and
arpl
call
adc
in
mov
imul
cmp
jae
shlb
push
lret
dec
cmp
pushf
pop
fdivrs
mov
cwtl
jg
rorl
pop
mov
xchg
js
dec
push
cs
push
dec
xchg
sbb
or
in
test
add
push
pop
xor
loop
and
js
sti
mov
mov
mov
dec
adc
pop
popf
pop
hlt
test
fnstcw
mov
ja
or
lret
xchg
add
jno
mov
jae
xchg
das
lcall
adc
sti
jnp
iret
add
pop
adc
mov
inc
adc
in
outsl
jl
and
jbe
or
arpl
es
add
cmp
adc
fsubs
mov
mov
jne
jb
andb
cmp
lret
jns
les
shl
lock
dec
mov
fmulp
fmuls
fisubl
into
mov
sarb
pusha
lahf
jns
and
pushf
das
push
add
sub
or
fldcw
fistl
xor
ds
leave
ja
fmul
sub
cmp
inc
inc
je
mov
fcoml
sub
mov
mov
pop
iret
sub
mov
out
repnz
mov
jl
sub
pop
in
xor
aaa
fwait
aas
adc
cmp
aad
mov
cmp
inc
xchg
dec
icebp
adc
xchg
mov
jmp
mov
js
fnsetpm(287
dec
cmp
adc
push
ljmp
cmp
adc
ficompl
aad
mov
inc
lcall
flds
ds
stos
ljmp
or
out
sti
and
insl
aaa
stc
inc
jnp
xor
out
cltd
and
mov
sub
sbb
lret
mov
lods
pop
rclb
popa
enter
mov
outsb
mov
adc
mov
add
sbb
scas
ret
loope
cmp
movsb
fbstp
push
ret
shll
sbb
mov
pop
jae
xlat
imul
sbb
pop
ss
fisubrl
arpl
jle
adc
jl
mov
dec
inc
jmp
cli
movsl
sub
mov
pop
xor
mov
xlat
loop
dec
nop
mov
pop
sbb
inc
xor
stc
bound
xor
aam
mov
add
dec
jne
push
lret
popa
pop
cmp
push
scas
scas
fsubrp
or
hlt
pop
cld
test
sti
cmp
jbe
dec
loope
into
xor
xor
adc
addr16
push
test
outsb
and
int3
cmp
stos
push
push
jae
stos
cli
shrl
lret
xchg
dec
push
xlat
xchg
pop
fiaddl
push
lods
pop
xchg
xor
cltd
mov
cwtl
dec
clc
xor
mov
adc
xlat
push
outsb
push
pop
adc
int3
scas
jp
push
mov
push
xchg
inc
xchg
push
fdivl
and
loope
into
sub
negl
sub
call
das
mov
mov
jp
inc
or
in
test
cmp
test
loop
loopne
mov
sub
lods
iret
stos
cld
test
pop
imulb
mov
imul
dec
and
sbb
pop
inc
mov
loope
or
rcrl
mov
pop
dec
outsl
mov
clc
aam
out
cwtl
movsl
test
setl
rorl
imul
dec
or
cmc
cmp
sarl
jp
inc
lock
or
dec
mov
dec
jge
add
inc
cmpsb
movsb
ja
push
adc
cmp
cwtl
xchg
pop
lock
mov
push
add
jbe
test
daa
insl
dec
les
test
cmp
jge
fidivrl
mov
push
inc
repz
adc
pop
pusha
xchg
pop
or
lds
add
adc
xchg
cld
lods
mov
sub
mov
lock
pop
mov
test
cli
nop
in
ds
insl
jle
in
jo
dec
inc
addr16
push
add
nop
dec
jecxz
into
mov
xor
mov
mov
add
xor
sub
mov
mov
mov
mov
mov
sub
mov
imul
mov
or
sub
mov
jmp
out
aad
aad
aad
adc
sbb
pinsrw
cmp
daa
add
addr16
aam
in
sbbb
and
sahf
andb
es
sbb
into
xchg
jg
and
sub
mov
mov
add
daa
sbb
or
add
push
push
adc
mov
test
xor
add
adc
stos
loope
iret
cld
and
pop
mov
pop
push
xor
push
xlat
cltd
push
movl
stos
push
push
cmp
and
mov
pop
repz
sbbl
xchg
mov
mov
bound
xchg
jns
fucomip
addr16
cmp
insb
adc
jb
xor
and
cmc
cmc
cltd
add
cmp
rolb
and
cld
lods
stos
out
test
popa
cmpb
mov
push
mov
stc
cmp
inc
jb
les
jmp
jl
test
xchg
cmp
sti
cmp
xchg
mov
add
push
adc
pop
lds
mov
mov
jle
aam
lret
je
dec
pop
xor
and
inc
rcr
std
outsl
mov
pop
movups
cmp
in
fisttpll
and
cmpl
xchg
xor
mov
ja
stos
lds
adc
js
sbb
pushf
sbb
cmp
pop
stc
adc
pop
lods
inc
cmp
add
push
test
repnz
test
jo
sti
mov
mov
sbb
loope
loope
fwait
jb
pop
andl
mov
loope
mov
andb
jmp
mov
aad
in
test
addr16
and
inc
aam
orb
cwtl
mov
fsubr
repz
loope
sub
popa
pop
mov
std
lcall
push
sahf
mov
aaa
jl
mov
fs
mov
aam
int
xor
daa
ror
in
std
aaa
shl
inc
dec
sub
inc
popa
pop
daa
into
sub
movsb
out
test
or
addb
fcomps
int
xchg
push
imul
mov
sub
mov
in
xor
mov
add
movsb
fstl
jae
push
or
jo
in
mov
cmp
jge
or
mov
and
fcoms
add
aad
xchg
jle
movups
cltd
iret
int
inc
fbld
adc
sub
sub
popf
in
iret
bound
add
cmp
inc
dec
push
bound
lods
xchg
sbb
xor
fiaddl
lcall
out
and
adc
aas
lods
mov
in
inc
mov
add
sub
xor
xchg
add
inc
mov
lcall
jo
cmp
adc
mov
mov
bound
stc
mov
push
cmp
in
push
cmpsl
mov
cmp
into
pop
pop
mov
jno
test
je
ret
das
sbb
pop
js
cwtl
jle
testl
jle
sbb
out
inc
out
orl
sbb
mov
clc
cs
mov
mov
fdivrl
and
out
repz
ljmp
and
adc
lock
sub
adc
lods
fildll
jne
dec
loopne
push
lret
in
inc
sar
mov
sub
adc
and
sti
jecxz
pop
loopne
insl
and
imul
xor
adc
xchg
xchg
inc
lret
mov
cltd
daa
rcl
inc
stos
lods
stos
mov
push
mov
pop
enter
int3
mov
test
push
mov
cmpsb
or
xor
jnp
in
and
cs
jmp
fdiv
mov
dec
xor
fs
into
mov
and
imul
bound
out
inc
push
adc
adc
std
out
mov
scas
cwtl
dec
rorb
pop
mov
in
sub
outsb
xchg
test
stc
popf
scas
fists
push
das
in
pop
dec
mov
stc
or
nop
adc
in
mov
je
aad
cltd
clc
popa
lock
addr16
mov
sub
and
sbb
add
test
sahf
pop
xor
bound
sub
cmpsl
pop
pop
adc
ljmp
jl
cmp
out
push
in
xchg
adc
hlt
ss
push
lods
test
cmp
out
push
cltd
lods
arpl
js
sub
movl
mov
inc
pop
xor
mov
cmpsb
cli
insl
dec
ljmp
gs
dec
pop
sub
pushf
shrb
iret
cmpsb
lret
pushf
lahf
push
jmp
mov
cli
inc
lret
dec
fyl2xp1
dec
call
in
ficompl
add
ret
and
sarl
shlb
into
or
add
push
fs
and
enter
lea
xchg
cmp
dec
mov
aas
fwait
push
out
cmp
mov
test
popa
std
inc
or
inc
add
pop
jo
fwait
jge
sub
xor
lock
push
sub
dec
xchg
mov
cmp
icebp
adc
or
mov
bound
jp
lret
lds
sbb
cmp
adc
mov
or
push
aad
insb
test
std
data16
rorl
inc
xor
inc
cs
roll
shlb
push
andb
adcb
inc
cmpsl
in
sub
imulb
dec
xchg
mov
pusha
sbb
xor
shr
das
mov
scas
inc
ret
sub
imul
sub
push
jb
xchg
add
mov
lods
xchg
loop
test
mov
ret
int
push
incb
ret
hlt
xor
mov
sub
add
cmp
jbe
xor
inc
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
xor
div
mov
xor
mov
mov
div
mov
xor
div
mov
sub
mov
and
imul
and
xor
cmp
je
push
movl
movl
movl
movl
movl
mov
mov
imul
xor
add
mov
and
sub
mov
mov
add
xor
mov
mov
and
sub
mov
mov
mov
mov
mov
xor
or
imul
or
mov
imul
xor
mov
div
add
mov
and
imul
and
xor
cmp
jne
pop
pop
pop
leave
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
push
push
push
movl
movl
jmp
imull
xchg
xchg
aam
mov
xor
xor
add
mov
dec
cltd
xchg
xlat
fidivrl
and
lods
jnp
popf
push
loope
mov
ljmp
add
push
rcrl
outsb
sarl
imul
xor
xchg
jle
daa
jne
movsb
aam
rcrl
ret
jge
pop
insb
mov
ret
adc
mov
mov
jmp
mov
jno
js
push
ja
add
sub
mov
and
dec
push
shr
out
imull
mov
xchg
push
cmp
jmp
repz
bound
push
lahf
mov
lcall
push
pop
fmull
sbb
inc
jo
adc
repnz
outsl
fldt
add
xor
add
xor
aas
mov
xchg
ljmp
fcmovnu
pop
pop
ja
orb
pop
outsl
movsb
lahf
in
mov
mov
scas
cmp
enter
pop
cmp
push
pop
cmpsb
jne
stos
jb
stc
dec
inc
enter
xor
push
dec
or
sub
xor
gs
dec
push
inc
xor
ja
popa
inc
outsb
test
push
aad
push
icebp
pushf
xchg
js
js
neg
sbb
cs
sbb
dec
les
jnp
lods
dec
dec
cmp
jecxz
enter
js
mov
adc
ret
mov
mov
test
pop
imul
out
mov
fstpt
jp
mov
jb
and
pushf
stos
push
fidivrs
mov
daa
push
ja
mov
jecxz
leave
fnstcw
adc
bound
imulb
jge
adc
call
xchg
push
insl
call
out
mov
movsb
shr
sub
mov
sarl
sub
mov
ja
imul
clc
lods
sti
mov
scas
and
cmp
push
cmpsl
popf
cld
dec
mov
dec
addr16
sbb
mov
ret
repnz
ret
out
jns
lcall
pop
popa
or
popa
rcrl
cmp
lcall
scas
dec
stc
ss
in
fcmovnu
sbb
mov
adc
mov
push
and
in
mov
or
cli
mov
jns
lret
arpl
jnp
imul
push
in
lcall
jb
mov
insl
xchg
cmp
add
lret
mov
incl
mov
inc
xlat
sbb
mov
fisttpl
pop
mov
pop
dec
movsb
sub
add
dec
nop
notb
scas
add
or
push
adc
enter
push
js
pop
adc
mov
dec
lret
int
mov
mov
ljmpw
fwait
xor
push
imul
xchg
pop
inc
inc
mov
arpl
les
pop
inc
xor
enter
decb
mov
clc
xchg
shlb
pop
or
dec
insl
cli
in
repz
adc
mov
mov
cmp
mov
fwait
stos
push
or
pop
addb
lods
dec
adc
push
push
out
lcall
dec
mov
adc
cs
mov
adc
add
icebp
in
mov
cmpsb
dec
dec
jnp
push
clc
xchg
xchg
arpl
jp
mov
sbb
jg
fsts
in
ror
fisttps
mov
mov
jbe
and
push
jo
xor
cmp
mov
fs
xor
lds
outsl
inc
push
and
jbe
cmc
or
add
fidivrs
inc
aad
sub
aas
xor
pop
jno
mov
or
push
push
mov
jno
sub
adc
adc
xor
sbb
in
stc
inc
out
mov
dec
mov
cwtl
pushf
out
push
add
xchg
or
mov
inc
pop
dec
add
int
pop
ret
cwtl
push
test
test
negl
into
mov
add
jb
cwtl
cmp
into
movsb
add
dec
popa
dec
popa
cmp
push
add
push
imul
ljmp
cs
out
in
std
mov
mov
sti
xor
aad
push
and
movsl
jne
dec
outsl
sub
add
dec
mov
scas
stos
add
mov
testl
icebp
mov
insb
xchg
arpl
movsl
imul
mov
jae
fsubl
mov
fistpll
daa
mov
das
sub
jns
rorl
bound
adc
sar
xchg
mov
cli
insb
cmp
add
subl
mov
add
jb
pop
inc
jno
sahf
cmpl
stos
mov
mov
xchg
push
xor
cmp
push
in
or
push
out
lods
fisubs
call
inc
stos
inc
dec
add
jne
push
cld
push
scas
mov
gs
mov
scas
js
or
sub
std
push
ljmp
inc
sbb
inc
sahf
sub
dec
sub
sub
incl
fisttpll
mov
movsl
adc
dec
rorb
icebp
mov
dec
pop
test
xchg
xor
lds
loope
lock
hlt
sub
push
dec
fisubs
sbb
sbb
mov
pop
notb
add
cmc
sbb
xchg
adc
out
in
push
stos
int3
sbb
mov
xchg
sbb
gs
out
adc
in
push
sbb
mov
ljmp
scas
dec
dec
ficoml
push
gs
scas
lock
leave
imul
daa
fsubrl
pop
call
lods
stc
dec
or
insb
fnstsw
daa
mov
repz
mov
fistpl
lods
stc
inc
ficoms
in
add
lcall
mov
daa
push
mov
or
int3
addr16
ret
sub
pop
in
xchg
cmp
fistpl
leave
cmc
add
mov
xor
mov
inc
je,pn
out
cli
aad
std
dec
mov
jecxz
das
jl
add
jnp
ljmp
push
mov
or
cmp
xor
sbb
xor
lret
int3
xchg
adc
inc
loop
in
int3
std
imulb
pop
or
sub
lds
sbb
flds
sub
in
sbb
data16
jnp
pop
notl
mov
ret
push
rcrb
addr16
addr16
lret
stos
sbb
xor
lds
lret
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
pop
fdivl
jo
push
push
mov
mov
mov
add
rorb
movsb
mov
and
out
aas
cmp
cltd
imul
out
inc
mov
mov
ds
rolb
push
jnp
leave
inc
mov
jge
fidivl
and
mov
jno
adc
shlb
cmp
jp
mov
fldenv
sahf
inc
xchg
in
add
inc
mov
mov
sub
fstl
push
jbe
icebp
pop
lock
cmpsl
pushf
sub
lret
scas
clc
push
test
aam
xchg
pop
mov
adc
mov
roll
pop
mov
jle
dec
jecxz
push
push
inc
sbb
push
es
rorl
jno
jbe
daa
jmp
insb
ficoms
into
enter
mov
aaa
pop
sarb
inc
inc
scas
push
movsl
mov
and
add
clc
mov
cmp
fcoms
push
mov
loopne
or
xlat
or
sub
add
xchg
popf
rol
ja
inc
cmp
ja
pop
nop
or
das
sub
dec
sbb
test
imulb
jg
out
shl
push
xor
inc
test
dec
pop
popf
out
push
popa
add
lods
mov
pop
mov
test
cmp
jbe
mov
test
push
daa
pop
icebp
hlt
mov
dec
dec
dec
mulb
xchg
sbb
sub
pushf
push
inc
lret
push
ss
in
int
ljmp
xchg
xor
mov
push
test
in
cmp
lcall
pop
and
insl
adc
adc
insl
and
jno
sub
lret
mov
jnp
stos
sub
sbb
lods
lret
clc
out
ret
or
addr16
in
inc
inc
push
push
loopne
hlt
cmp
mov
les
mov
jl
jl
in
ret
fisubl
mov
add
repnz
jg
dec
and
cwtl
push
jnp
fadds
push
das
shrl
stos
xor
xchg
jmp
add
jo
inc
jmp
adc
out
sub
cmp
cmp
jns
add
out
test
movsb
and
jae
int3
xor
add
cs
jno
pop
shll
data16
in
xor
addb
inc
test
pop
daa
shrb
add
push
js
adc
cmp
jno
lcall
rcrb
out
pop
pop
lea
nop
pop
cltd
outsl
and
sbb
pop
and
bound
sub
xchg
movsl
mov
sub
insl
cmp
aas
fsubs
lock
add
sbb
fsub
fsubp
and
mov
push
inc
rclb
insb
jge
cmp
clc
xchg
cmc
loopne
cmpsl
xchg
xchg
or
aaa
xor
mov
ss
into
popf
xchg
sti
mov
lret
xchg
push
shrb
vcmpnleps
fidivl
scas
es
mov
xor
add
sbb
rcll
ffree
rcr
add
fdivr
insb
xor
rclb
jns
notb
sub
data16
out
add
addb
dec
xchg
or
push
das
and
pop
lea
movsb
mov
cmp
cmp
ss
sbb
mov
loope
push
ror
cmp
lret
rolb
cmp
popa
movsl
sar
cld
push
pop
repz
mov
xchg
test
stos
sbbb
cmpsl
ret
std
add
pop
fmuls
outsb
cld
mov
add
lret
dec
setge
loopne
add
jnp
mov
daa
inc
stos
jo
popa
aad
sarl
push
out
cmp
divb
cmp
fidivrl
shl
and
loopne
cwtl
daa
sbb
add
adc
xor
cli
rcll
fdivs
add
and
addr16
inc
pushf
dec
lods
movsl
hlt
lret
cs
xor
and
int3
inc
icebp
add
inc
ljmp
test
xchg
fidivl
and
jl
adc
lret
cmp
in
pop
outsb
push
cmpsb
jns
mov
into
sub
sub
call
js
shl
subl
shlb
cmc
hlt
andb
xchg
out
cli
mov
inc
das
sti
je
loope
cmp
test
xor
cmpsl
sbb
jecxz
jp
lahf
outsl
insl
jl
adc
lret
lahf
shl
jb
pop
push
std
or
mov
mov
fstl
popf
cmp
jl
fnsave
mov
push
outsb
push
mov
popf
and
push
shr
add
imul
add
outsb
nop
add
sub
mov
or
cmp
pop
inc
inc
sbb
mov
push
ljmp
add
adc
mov
cmpsb
in
jl
lock
clc
enter
or
lea
insb
mov
sub
jge
std
xchg
out
fstpl
loopne
push
lret
popf
test
push
pop
or
mov
jmp
pop
stc
and
int
mov
movsl
into
daa
lret
pushf
pop
das
push
negl
add
xchg
lea
lret
out
sahf
mov
jae
pop
pop
fwait
cmpb
mov
dec
pop
cmp
and
xbegin
gs
push
ret
leave
call
lahf
inc
loop
xchg
fstl
or
hlt
leave
mov
mov
mov
mov
pop
jle
idivl
insl
sahf
cld
jmp
mov
aam
loopne
xor
pusha
push
mov
repz
call
dec
rcll
imul
sbbb
inc
and
iret
fcmovu
and
add
ror
mov
mov
xlat
or
sarb
clc
bound
stc
xchg
sti
shlb
xor
and
repnz
fnstenv
popa
testb
lcall
fildl
test
loope
adc
and
lahf
sbbb
test
mov
xor
std
das
jo
lock
clc
xor
inc
cli
dec
sbb
fnsave
inc
test
add
sub
xor
fbstp
mov
pushf
lds
data16
les
xor
movsb
in
or
add
fwait
test
adc
movl
mov
mov
mov
mov
push
add
push
adc
jmp
lcall
xor
stos
push
mov
add
hlt
pop
or
ja
rcrb
adc
jnp
add
popl
jns
pop
andl
stc
push
mov
addr16
clc
clc
xor
addr16
and
pop
repz
add
xor
idivb
iret
fstl
loope
gs
inc
iret
lods
inc
rolb
ret
jo
sar
ljmp
lods
mov
in
addb
inc
add
mov
sbb
ret
and
push
jl
add
fmul
popa
push
pop
imul
cmc
sbb
fmull
test
and
cmp
inc
shll
outsl
jb
xchg
adc
mov
mov
or
or
and
mov
mov
fists
mov
shrl
mov
icebp
mov
mov
mov
fwait
das
pop
push
sub
adc
pop
xor
pop
xchg
push
sub
mov
sahf
adc
push
call
mov
add
add
les
movb
push
stos
xor
xchg
adc
pop
repz
xor
mov
leave
sbb
dec
dec
ret
add
popf
mov
jo
jl
mov
imul
test
hlt
mov
push
or
jle
cmp
in
jnp
cmp
mov
xchg
xchg
push
sbb
jbe
lcall
or
std
add
add
jb
mov
xchg
dec
roll
dec
and
push
sbb
inc
mov
lcall
inc
jg
and
push
xchg
imul
adc
cmp
xchg
lahf
push
fldpi
pop
cli
nop
aad
loop
push
daa
push
fwait
dec
inc
lock
stos
fldt
lock
test
into
sbb
aad
and
push
lds
xlat
dec
frstor
cmp
sub
insb
mov
out
or
pcmpgtb
xchg
mov
fstpt
leave
inc
xlat
xor
and
arpl
testb
or
mov
mov
sbb
xchg
into
mov
fisubrs
push
xchg
fwait
push
inc
adc
pop
and
adc
jge
pop
cmp
les
ja
iret
jge
mov
and
lds
mov
and
pop
imul
mov
inc
cltd
mov
mov
in
cmpsb
mov
pusha
sbb
push
popa
xor
mov
push
mov
fistl
jne
inc
cmpb
cmpsb
dec
mov
and
inc
inc
nop
inc
and
mov
mov
pop
lods
pop
sub
push
mov
popa
ret
jmp
movsb
mov
fdivr
push
cmpsl
ss
mov
pop
test
mov
scas
out
or
pause
bound
adc
push
add
je
lret
jns
inc
push
xor
loop
addr16
lods
lret
out
stos
sahf
cmp
dec
pop
adc
loop
lahf
ss
mov
and
mov
xor
push
dec
xchg
and
lods
mov
dec
jecxz
data16
cli
imul
sub
inc
and
sub
mov
je
cmpsb
dec
or
xor
orl
lods
enter
push
aas
mov
adcl
fmuls
hlt
ss
in
fbstp
lods
fildll
add
add
shll
das
ds
sbb
lcall
jo
lahf
ret
pop
inc
hlt
pop
loope
push
daa
ret
pop
and
mov
and
xchg
mov
push
ds
jmp
jl
add
or
sbb
rcl
clc
cli
fwait
xor
or
sti
frstor
gs
call
test
push
cmp
xchg
pop
fstpt
out
jge
ror
inc
push
xor
nop
scas
in
sbbl
inc
cmp
rorb
test
hlt
xchg
fdivrl
add
jb
ja
movsl
jnp
loopne
loope
rcl
dec
pop
jecxz
scas
xor
xchg
call
int3
mov
jnp
js
scas
imul
jb
je
ffree
mov
lods
or
mov
out
and
adc
add
or
movsl
fwait
pop
push
cmp
ljmp
mov
jns
test
pop
xor
dec
rcr
mov
imul
pop
scas
imul
jne
popl
xor
sub
imul
sub
int3
add
pop
and
mov
sbb
aam
inc
mov
shl
inc
jecxz
je
jle
neg
inc
dec
pop
and
outsl
mov
xchg
jp
cmc
add
push
clc
push
das
sub
lahf
adc
mov
or
fisubl
pusha
insl
ds
jns
insl
pusha
call
insb
inc
sub
push
mov
adc
add
dec
and
jae
lret
adc
stos
add
cmpsl
dec
xlat
cltd
and
sub
pop
mov
inc
bnd
push
xor
push
cmp
push
mov
adc
cmpsb
or
jae
xchg
cli
imul
mov
stos
movsl
and
xchg
cmp
push
fisubrl
xchg
xchg
in
inc
out
xchg
repz
mov
add
sub
cmp
rcr
push
fwait
cmp
inc
cs
shlb
and
imul
mov
enter
jmp
mov
iret
imul
call
lds
adc
aam
and
jge
out
gs
movb
xchg
es
test
imul
add
xchg
xchg
test
xor
or
jp
sarb
sbb
ror
leave
ja
cmpsb
mov
scas
add
pop
ret
add
jle
repnz
mov
sub
push
repnz
sub
mov
jnp
out
inc
iret
xchg
rclb
dec
pop
push
add
or
push
movsl
add
push
adc
cli
lods
mov
adc
add
xor
test
jle
dec
cmpsl
xchg
fldl
or
mov
push
popa
and
stos
sbb
add
and
pop
adc
mov
ret
pop
movsl
mov
pop
in
outsb
xchg
aad
pop
stos
outsl
fists
stc
cmp
xchg
add
mov
mov
sub
mov
jmp
mov
and
cwtl
sub
inc
dec
out
xchg
add
xchg
loope
loop
mov
aad
or
popfw
cld
lds
out
clc
cmp
cmc
push
lods
ja
dec
je
sbb
or
push
aad
sbbb
rcl
adc
test
pop
xchg
push
mov
xchg
dec
out
out
test
lahf
pop
cwtl
lret
inc
cmc
mov
rol
inc
cmpsl
sub
addl
push
movsb
xor
test
aam
pop
jne
dec
jecxz
pop
shlb
sub
xlat
or
xor
adc
ss
lea
mov
jno
ffreep
add
jg
aad
mov
pop
pop
adc
inc
xchg
adc
pop
lcall
int3
add
jbe
sahf
fbld
inc
mov
imul
cmpsl
stos
out
lea
cmp
mov
repz
ss
and
jne
pop
arpl
mov
or
mov
pop
or
pop
add
lea
sbb
xchg
pusha
cmpsb
mov
and
inc
pop
jb
jge
pop
aaa
cli
mov
std
hlt
mov
lahf
push
sbb
loope
adc
mov
aam
jg
xchg
jge
sbbb
xchg
mov
xor
lcall
repz
inc
sub
stos
stc
xchg
mov
mov
mov
into
xchg
fs
jnp
xchg
sub
jbe
inc
dec
jle
movsb
pop
xchg
bound
in
push
jo
insl
adc
roll
push
decb
stos
divl
test
xchg
pop
fimuls
dec
enter
sti
mov
lods
out
out
sti
lret
cmpsl
mov
mov
outsl
sub
dec
or
xchg
ljmp
pushf
cmpsb
nop
je
mov
jae
push
xor
dec
rcl
fisubs
mov
and
push
xchg
jno
pop
or
insb
mov
and
push
jp
roll
or
ljmp
jno
cmpb
sahf
lcall
test
sub
enter
mov
mov
fstl
push
ret
mov
mull
push
das
add
and
cli
and
faddl
shlb
mov
adc
cmpsl
scas
mov
dec
or
pop
xchg
into
xor
cld
mov
sub
add
pusha
fisttpll
outsl
mov
push
cmp
shll
out
add
nop
in
or
mov
int3
xchg
hlt
cli
pop
pop
jl
lea
mov
inc
push
mov
xlat
sub
cli
inc
into
mov
and
gs
push
mov
pop
push
jmp
ret
ja
fwait
jae
adc
pop
aad
jge
sub
fcoml
insb
ss
xor
lret
mov
out
fwait
je
mov
inc
mov
pop
enter
stc
xchg
xchg
mov
test
ss
jae
ror
xchg
jne
xchg
daa
aas
ds
int
cmc
pop
push
sar
rorl
jle
sub
add
loop
mov
enter
push
in
or
jge
mov
fldcw
jecxz
cmpb
js
and
pop
repz
mov
mov
out
pop
cld
leave
xchg
fadd
mov
push
cs
ljmp
xlat
loope
adc
lods
and
jne
mov
rcll
cmp
cmpsl
push
dec
aas
inc
jae
jecxz
mov
js
push
adcb
aam
in
mov
cmc
cmpsb
push
adcl
mov
cmpl
popf
aaa
pop
pop
mov
push
dec
jl
mov
xchg
jp
adc
pop
or
xchg
mov
sbb
adc
stos
aas
ffreep
ja
cli
fstps
xchg
cmp
jae
sub
cmc
ret
and
jmp
pop
cmpsl
aad
bound
loop
popa
leave
iret
ret
cld
stc
das
sbb
push
inc
push
adc
shll
mov
jmp
add
shlb
mov
sbb
pop
mov
mov
loop
andb
mov
pop
add
or
sbbb
mov
sbb
ds
fwait
push
gs
bound
test
scas
cs
add
mov
mul
sbb
cwtd
sbb
inc
adc
push
imul
std
sub
ficoms
mov
cltd
dec
bnd
lea
sti
mov
push
cmp
mov
ja
mov
mov
lods
xlat
adc
mov
cmp
shl
movsl
sub
mov
lret
fmul
dec
xor
sbb
ss
xchg
aaa
cltd
lods
rorl
cmp
jno
out
call
ds
mov
xlat
and
sub
push
or
enter
enter
fsubl
inc
push
imul
shlb
sahf
jae
or
mov
shll
push
arpl
lods
imul
push
jg
jae
test
pop
xchg
ret
outsb
or
push
arpl
outsl
aam
add
sbb
sub
in
sub
mov
popf
add
pop
mov
dec
mov
stos
inc
add
ret
mov
and
jle
mov
xchg
sub
mov
adc
push
push
inc
in
ja
adc
sub
movsl
fcompp
inc
or
push
dec
jno
cmp
sti
sbb
adc
xchg
and
xor
mov
or
repnz
hlt
adcb
int
and
jle
pop
jmp
pop
rorb
lods
mov
xor
xchg
jnp
mov
cmp
aaa
mov
ds
push
ret
xchg
out
pop
test
cmp
imul
cld
pop
jmp
inc
test
sub
int
lods
jmp
add
lea
test
fidivrs
jl
fs
sbb
pop
std
mov
jns
cmp
cmpsl
imul
insl
sahf
clc
hlt
and
js
div
xor
cpuid
ja
jg
mov
and
js
xchg
popf
dec
fsubr
aam
in
push
cs
nop
inc
enter
leave
xchg
sahf
or
inc
and
add
push
adc
aas
push
xchg
les
mov
adc
ss
lods
sbb
out
adc
push
sub
and
enter
adc
sarl
lds
xchg
sub
pop
cs
hlt
out
cmp
cmpsl
inc
mov
mov
ja
out
sub
sar
lods
stos
mov
xchg
call
xchg
inc
mov
xchg
int3
sbb
mov
push
push
push
push
call
add
adc
shld
shl
mov
mov
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
jmp
lcall
or
insl
cmp
cs
add
mov
mov
sbb
xor
fmull
add
mov
pop
lock
scas
in
clc
jae
int3
aas
imul
lahf
inc
inc
push
push
dec
mov
mov
pushf
lods
lcall
icebp
mov
shl
cld
ficompl
daa
leave
mov
shl
add
lock
int
adc
xchg
filds
ret
int3
les
lods
sbb
pop
lret
push
loopne,pt
cmp
mov
pop
mov
xchg
xor
dec
inc
mov
add
xor
test
scas
add
adc
xchg
cmpsb
insb
mov
inc
jns
stos
sub
push
sub
shlb
xlat
ljmp
and
imul
adc
sti
out
into
mov
rcrb
cmp
mov
fdivrs
int3
hlt
adcl
cmc
ret
mov
pop
aaa
insl
mov
push
mov
add
icebp
or
and
fs
pushf
lret
sti
jl
dec
outsl
push
adc
xchg
mov
mov
jle
out
insb
jg
xchg
xor
pop
repz
mov
pop
adc
and
outsl
int3
push
pop
push
inc
jnp
es
push
testl
es
clc
adc
test
or
dec
les
mov
leave
mov
xor
gs
dec
pop
aaa
imul
xchg
dec
js
lock
clc
adcl
pop
fisttpl
mov
mov
cmc
xchg
and
leave
adc
cmp
loop
sbb
sub
stos
xchg
cmp
shrl
into
sub
dec
mov
jbe
mov
mov
xchg
in
out
fldenv
scas
outsb
loopne
mov
inc
or
add
js
xchg
sub
mov
icebp
dec
stc
je
das
mov
daa
hlt
mov
stos
lcall
shll
xchg
popf
and
inc
mov
das
xchg
jmp
fsubrl
sbb
inc
and
and
mov
and
shrb
xor
notl
push
sbb
sbb
sti
stc
sbbb
jmp
ret
or
pop
push
test
jle
mov
sbb
cmp
lahf
push
aam
or
mov
jno
push
xlat
adc
jne
daa
rolb
sub
sbb
lods
xchg
cltd
into
xor
lods
rclb
stc
cs
fwait
imul
addr16
daa
dec
cs
sub
clc
cmpsb
sahf
testb
lods
push
sub
mov
xor
aad
push
fdivl
push
cs
inc
cmc
pop
icebp
xor
sbb
push
imul
pop
addl
or
js
mov
inc
sbb
push
lcall
das
ss
insl
clc
es
mov
pop
mov
jbe
xor
pop
adc
sub
orl
and
xchg
mov
nop
rcr
xchg
dec
and
out
js
enterw
lods
dec
mov
std
scas
add
pop
ret
push
jb
adc
arpl
insb
and
cwtl
xlat
gs
mov
sub
xor
xlat
pop
int3
sarb
jge
out
push
jns
sarl
cmp
aad
sub
out
fcmovb
das
xchg
push
jecxz
lret
sbb
es
sub
in
divl
test
sbb
jo
dec
test
out
repnz
mov
sub
inc
scas
aad
xchg
jno
cli
int
aaa
xor
es
sub
int3
daa
sub
mov
inc
cs
fs
push
sbb
lcall
in
push
push
fnstenv
adc
out
out
mov
ret
xlat
xor
leave
adcb
popa
arpl
enter
jge
movsl
xchg
filds
not
sbb
and
cmc
mov
mov
jb
pop
adc
lods
pop
adc
adc
cmp
mov
xor
call
or
loop
dec
mov
cmp
dec
dec
test
inc
and
lock
add
cli
push
test
nop
and
sub
rcll
aad
mov
push
push
jno
sbb
xor
jp
mov
or
dec
xchg
js
push
int3
aad
push
dec
in
int3
dec
incl
mov
insl
out
cmp
sbb
dec
push
add
rclb
jae
pop
pop
and
add
rclb
push
lds
adc
lcall
xor
sub
lea
xchg
frstor
jbe
aad
cmp
jge
sbb
xor
mov
xor
pusha
cwtl
cmp
jg
mov
add
pusha
jno
cmp
call
adc
cs
lock
shrb
shll
adc
mov
cmc
dec
hlt
push
scas
add
xor
pushf
in
adc
xchg
and
lock
mov
lcall
xor
xor
repnz
pop
ljmp
int
xor
fcomps
jb
pushf
add
jl
adc
ds
fmulp
pop
mov
or
mov
push
es
xor
push
sbb
cmp
pop
jl
pop
xchg
test
adc
mov
out
or
cwtl
push
xor
sub
out
cmp
xor
add
dec
js
adc
cmp
pop
mov
or
dec
xor
out
insb
lock
sub
push
jo
lcall
push
xor
stos
ljmp
pop
jmp
js
or
mov
test
nop
add
or
das
jp
mov
dec
sub
iret
sub
lods
jmp
dec
mov
lds
lahf
out
cmc
lea
xor
ss
testl
loop
rcll
lcall
xchg
jl
popa
jecxz
cmp
jo
jne
test
xor
push
mov
int3
movsl
fistps
mov
push
pop
mov
push
cli
iret
push
dec
int3
inc
and
ret
pop
sbb
jp
mov
mov
jp
aaa
js
mov
cmp
andl
or
inc
call
adc
cli
adc
dec
sub
mov
bound
test
cmp
sbb
and
inc
test
mov
int
pop
aad
filds
push
cmp
or
outsb
jo
ret
xor
sbb
push
call
add
adc
shr
xor
or
or
xor
mov
push
xor
mov
mov
mov
jmp
mov
sbb
popf
or
xchg
sub
in
inc
add
test
push
mov
ffree
push
repz
jg
pop
mov
frstor
fdiv
js
iret
into
lret
and
lcall
fldenv
repz
sub
mov
loope
push
pop
shl
mov
push
inc
fsubr
mov
sbb
cltd
pop
and
xchg
lods
outsb
cmp
insl
lret
xor
mov
loope
ret
inc
inc
loope
inc
sub
xchg
sub
push
lods
cltd
jae
mov
push
xor
adc
into
test
or
cmp
lret
add
icebp
inc
xchg
add
insl
jp
lret
fs
dec
sbb
test
xlat
mov
push
lcall
mov
dec
jb
sub
lods
add
mov
scas
mov
mov
pushf
orb
push
dec
pop
xchg
test
lods
push
xchg
xor
test
lret
aam
or
or
push
adc
cmp
fpatan
xor
jge
movsb
and
xor
jl
xorl
movsl
loopne
or
dec
mov
fnstenv
xchg
and
cpuid
cmp
in
popf
push
ss
sbb
xchg
jl
pop
repz
fimull
mov
xchg
mov
icebp
js
xor
sub
mov
inc
das
xlat
clc
push
hlt
pop
cmp
xor
sub
jbe
shll
jge
clc
xchg
enter
loop
dec
inc
cmp
into
add
sub
mov
popf
movsl
jecxz
mov
lret
addl
pop
dec
pop
push
cld
int3
out
push
daa
push
jb
push
sbb
cwtl
mov
aaa
mov
mov
sbb
mov
cmp
popa
push
mul
cwtl
movb
pop
pop
stc
cltd
icebp
pop
mov
sbb
jno
dec
pusha
jnp
mov
push
dec
fidivs
adc
push
inc
popl
push
std
fwait
enter
shlb
ja
pop
loopne
stc
lock
hlt
rcl
mov
add
jo
mov
sub
mov
ret
jge
testl
call
call
inc
loope
mov
jmp
sbb
outsl
mov
cs
inc
or
or
stos
and
sbbb
xor
pop
iret
or
stc
inc
inc
fsubs
sbb
popl
insb
mov
fmuls
cltd
xor
sahf
dec
sti
inc
jno
and
test
dec
xchg
fldl
test
xlat
dec
and
mov
add
in
nop
loope
shl
xor
add
mov
into
jb
pop
imulb
xchg
in
cmp
outsl
je
sub
call
aas
mov
push
clc
xlat
push
xchg
mov
adc
test
pop
add
cltd
scas
sbb
hlt
push
daa
xchg
test
int3
das
cmp
inc
repz
pop
stos
fists
xchg
orb
sar
rcll
loopne
popf
sub
lret
jp
xor
xor
loopne
rol
sub
sub
push
out
das
xor
fwait
mov
pop
icebp
repz
mov
daa
pop
ss
xchg
lods
addl
inc
push
inc
out
lock
mov
or
sub
push
cmpsb
mov
stos
mov
test
lea
str
pop
stc
pop
movsl
pmovmskb
out
insl
xor
jb
and
mov
or
lods
sbb
repnz
cmp
dec
xor
movsl
incb
cmp
lret
mov
pop
mov
lods
movsb
cwtl
js
out
add
dec
pop
mov
cmp
ds
incb
mov
cld
push
cmpsb
insl
mov
fwait
sti
pusha
mov
loopne
mov
xor
imulb
int
lea
jl
push
jp
sbb
and
daa
mov
clc
inc
mov
and
mov
inc
cmp
lea
test
js
subl
mov
inc
and
stos
or
les
inc
adc
je
fcmovb
mov
cmp
jmp
push
loopne
xchg
test
jmp
ret
loop
loope
push
jne
sub
push
or
pop
sbb
shl
in
dec
enter
fwait
push
mov
fcoml
aam
xchg
jb
add
ficoms
or
int
inc
xor
xchg
pusha
stc
inc
push
jne
inc
xor
pop
push
or
sti
scas
idivl
rolb
mov
push
scas
push
push
mov
inc
out
into
inc
cmp
lds
loope
lahf
stc
xor
pop
mov
into
or
cli
mov
into
or
lods
jmp
loop
and
in
rcrl
iret
xlat
cmp
lret
jo
ljmp
jnp
sub
xchg
sti
lahf
lods
ljmp
inc
add
mov
sahf
out
add
es
imul
test
jnp
aam
in
in
scas
xor
mov
lds
and
mov
push
popa
push
into
iret
punpcklwd
push
lock
aam
xor
cs
in
jg
sarb
int3
fs
or
pop
adc
pop
jo
or
and
divl
hlt
push
leave
jecxz
shrd
fadds
ror
in
in
rcll
pop
push
mov
push
inc
add
imul
mov
pop
cmp
and
push
sti
ret
xchg
out
inc
adc
jae
adc
push
gs
jl
adc
jnp
push
sub
mov
hlt
xchg
dec
cmpsl
dec
jns
jbe
mov
out
das
sub
lds
scas
cmp
sbb
shrb
ret
std
stc
es
or
sbb
imul
adc
test
cmp
push
jecxz
or
int
insb
mov
test
notb
xchg
aaa
pop
adcl
push
insb
xchg
fstp
jbe
xchg
mov
jb
inc
and
lea
add
mov
test
sbb
arpl
inc
imul
bound
push
push
xchg
xchg
xchg
cmpsl
mov
mov
jns
rclb
movsl
cli
mov
sub
repz
mov
or
lods
add
cs
loope
push
push
push
call
mov
mov
mov
add
mov
adc
mov
and
and
add
mov
adc
add
mov
adc
jmp
mov
xchg
adc
mov
or
shll
add
and
add
sbb
or
or
fwait
or
aam
lret
add
inc
cmp
aaa
ret
xchg
sbb
call
mov
push
in
jmp
pop
mov
ljmp
xchg
jo
inc
ss
sub
fdivrp
dec
aas
push
push
ja
jmp
cmp
adc
sbb
test
and
cmpsb
psubusb
dec
repnz
ss
add
dec
lret
test
popa
mov
std
rorb
loop
repnz
ficoml
jecxz
sbb
xchg
or
adc
mov
mov
sub
mov
bound
mov
imul
movsb
jne
dec
adc
or
in
and
sub
fdivrl
fidivl
ja
jg
fadds
xor
mov
mov
push
sub
cwtl
pop
mov
outsl
and
push
xchg
movsb
inc
insl
sub
divb
mov
xor
es
add
inc
fs
in
ret
jae
mov
dec
ss
fmuls
jno
jnp
xchg
and
sbb
dec
xlat
jnp
pop
daa
testb
cmp
mov
iret
sub
sub
cmpsl
dec
dec
cld
push
jb
out
add
lods
add
rcr
sbb
das
push
test
adc
jnp
icebp
lahf
lcall
inc
loopne
stc
sub
sbb
ja
lock
cltd
lret
mov
xchg
sbb
call
mov
daa
lea
xchg
push
sbb
out
jo
insb
mulb
dec
outsb
inc
cmp
or
enter
cltd
fsubrs
jge
xor
push
cwtl
fs
xor
jae
mov
out
cmp
andb
xchg
inc
insb
mov
and
jmp
fldt
cmpsb
dec
jae
aad
mov
adcb
insl
push
out
aas
inc
repnz
pop
insb
adc
xchg
sub
cmp
mov
icebp
icebp
mov
scas
push
test
ljmp
ja
mov
jl
test
jae
mov
or
cmp
sub
ja
cmp
outsb
lret
enter
xchg
mov
push
inc
jge
dec
xchg
cmp
mov
aad
mov
mov
pop
dec
mov
or
dec
push
popf
xchg
test
in
jnp
pop
mov
adc
adc
into
xchg
fistps
add
mov
add
inc
pusha
sub
jg
mov
cmp
ret
icebp
scas
xor
icebp
xchg
adc
mov
inc
testb
ljmp
adc
rclb
sub
mov
mov
or
out
xlat
faddl
test
ja
or
push
in
out
adc
and
inc
sub
xor
fs
cli
sub
pushf
adc
lahf
dec
fisubrl
jge
movsb
add
mov
sub
scas
sub
outsb
mov
adc
or
mov
mov
shl
ret
jp
adc
mov
mov
fidivrs
std
hlt
bound
pop
push
popf
xor
mov
adc
mov
pushf
lret
fsubl
jge
test
mov
loop
into
xchg
pop
inc
mov
mov
int3
out
daa
mov
sub
dec
dec
out
je
push
mov
sti
inc
out
sbb
xchg
btc
pushf
xlat
mov
adc
dec
lret
gs
out
call
push
rcrb
xlat
and
aam
pop
aaa
mov
pop
js
mov
mov
inc
adc
mov
test
xchg
add
stc
loope
jmp
stos
pusha
fiadds
incb
inc
xor
pop
std
daa
inc
fsubrs
fisttpll
lods
cmp
mov
xchg
dec
mov
lret
push
iret
testb
lcall
gs
mov
xchg
es
pop
jnp
push
icebp
fildll
call
jmp
and
idiv
add
loope
xchg
scas
push
neg
jo
int3
insb
sbb
add
jne
dec
loope
ljmp
movb
daa
adc
mov
mov
outsb
mov
jno
cmpsl
ljmp
rclb
lret
es
ja
in
dec
jl
dec
add
mov
xchg
sbb
adc
mov
data16
jnp
jmp
imul
mov
mov
aaa
movsl
push
out
scas
fnstenv
stos
cmp
test
jg
sub
adc
and
cmp
lcall
mov
sub
cmc
and
cmc
adc
adc
outsl
mov
mov
xor
fcmovu
repnz
push
xor
mov
scas
sbb
ss
xor
pop
mov
psrlw
lods
pushf
out
push
les
mov
xchg
mov
inc
lods
sbb
and
negl
pop
mov
mov
rcrb
fstp
lods
stos
lock
mov
add
pushf
mov
lds
rorb
cmp
leave
and
andl
das
mov
push
xchg
cmp
mov
dec
out
jo
push
shrl
sub
pusha
mov
inc
dec
xlat
mov
xchg
scas
cld
push
mov
addb
ret
mov
cmp
push
stos
in
mov
mov
inc
xchg
inc
roll
mov
jne
daa
inc
cmp
jmp
addr16
pop
in
xchg
jp
sbb
xchg
inc
out
pop
cmp
adc
pop
inc
push
daa
fcmovnb
imul
xchg
mov
push
scas
fidivl
lods
sbb
movl
ja
sub
mov
inc
sahf
in
jne
ret
rcll
xlat
int
iret
mov
pop
mov
jno
subb
jge
jb
adc
lret
inc
cmp
mov
jo
les
xlat
cmp
push
add
cmp
test
out
call
push
popf
stc
arpl
addr16
pop
xor
cwtl
xor
lock
jl
sub
or
or
andl
mov
inc
mov
stos
or
pop
inc
lock
sbb
ret
dec
pop
sti
mov
cmc
pop
mov
mov
add
movsb
insb
andb
xor
adc
rorl
lods
jecxz
jae
mov
adc
xchg
shlb
adc
les
rcr
fisubs
bound
out
sub
es
les
std
jno
loop
sbb
inc
push
lea
xor
jns
lcall
mov
mov
mov
push
push
push
jmp
dec
js
gs
push
pop
cmp
xchg
rclb
add
dec
or
mov
les
test
inc
outsl
mov
dec
cmp
push
add
push
int
cmp
fwait
ret
or
in
sub
cmc
mov
icebp
jae
stos
in
inc
movl
ds
pop
sub
dec
icebp
adc
or
stos
cwtl
lea
mov
push
loopne
fwait
mov
cmc
shll
fisubs
sub
je
mov
rol
aaa
lea
gs
cmp
sarb
andb
adc
xchg
jecxz
les
pop
imul
loop
dec
ljmp
adc
sub
add
xchg
roll
in
inc
clc
xor
push
std
repnz
jl
arpl
vpshlw
jno
inc
sub
je
pop
sub
ds
sbb
jl
ret
fs
jmp
and
hlt
mov
mov
shll
lock
jecxz
jg
daa
pop
sbb
pop
mov
shrb
mov
jmp
fisubl
push
push
outsb
mov
push
mov
je
mov
sub
popa
stc
mov
lahf
sub
add
sbb
aas
xchg
lcall
adc
inc
inc
mov
sahf
mov
movsl
fimull
mov
pop
in
jae
jnp
and
xchg
inc
ss
or
xchg
push
jbe
push
insb
ljmp
sub
mov
cld
cltd
lcall
test
fwait
sub
repnz
cmpsb
and
cmc
nop
xchg
sub
sub
test
stos
mov
push
cmp
daa
xor
imul
je
xor
imul
push
insb
outsb
jecxz
sbb
xor
mov
mov
insb
sbb
orb
mov
cld
mov
sub
jp
or
adc
mov
fidivl
inc
in
or
dec
mov
outsb
push
call
dec
jp
hlt
nop
add
xor
and
sub
push
ja
pop
xor
fwait
mov
jecxz
out
addr16
push
insb
cld
push
mov
pushf
arpl
cmc
scas
dec
outsl
jmp
roll
xchg
loop
or
jl
incl
cmp
xchg
aaa
loop
jnp
sahf
lock
testb
cs
sbb
data16
fcomps
gs
addr16
loopne
inc
adc
jg
xor
out
xor
mov
aam
mov
les
cltd
imul
cmp
cli
test
sbb
lods
add
push
inc
pop
outsl
aam
fsubrl
sub
fdivp
fcoms
stos
xorb
ret
cmc
std
sbbb
sbb
pop
cld
add
xor
mov
stc
push
inc
out
mov
stos
mov
push
xchg
negb
push
mov
fs
stos
fldenv
adc
adc
std
lods
subb
iret
rclb
add
movsl
fcomp
dec
jbe
mov
mov
and
jl
fsub
fstpt
mov
mov
jae
add
jns
shr
jl
push
sti
sbb
outsb
xchg
xor
push
cwtl
jl
enter
xchg
push
aas
imul
test
pusha
jae
push
rclb
cmpsl
push
ret
mov
jecxz
int3
std
jg
xor
push
mov
pusha
dec
add
daa
movl
sti
int
movsl
mov
mov
mov
dec
ret
fistpl
push
sub
mov
sbb
loope
fldl
das
and
mov
jnp
shl
xor
rclb
mov
fadd
mov
stos
icebp
xlat
dec
lahf
mov
jl
push
push
sbb
dec
pop
sti
sub
add
mov
push
cwtl
lahf
popa
dec
jmp
clc
inc
stos
lret
inc
insb
pop
lea
jecxz
test
sahf
sti
into
gs
sbb
out
repnz
insb
ss
sti
xchg
xor
lret
jae
stos
lret
mov
add
cltd
sub
mov
gs
dec
data16
mov
mov
cmpsb
movsl
jnp
and
bound
jmp
mov
lret
adc
addb
xchg
and
xchg
orb
hlt
addr16
dec
sub
js
fwait
jp
and
cmpsl
sbb
mov
cmp
xchg
or
imul
out
rcll
mov
lods
inc
ret
ret
sub
sub
or
stos
pop
push
orl
aam
repnz
and
mov
imul
call
push
xor
dec
adcb
add
cmp
mov
jo
nop
into
test
pop
pushf
xor
faddl
call
xchg
pop
addr16
ret
lcall
dec
cli
or
push
inc
xor
xchg
shr
loopne
dec
loope
ss
sub
sub
cmpsl
push
cmp
imul
pop
sbb
ds
jne
stos
aas
test
pop
xchg
aad
xlat
add
xchg
in
in
push
jb
fbld
push
in
mov
pop
mov
in
pop
jae
int3
adc
push
dec
inc
xchg
repz
jbe
mov
cmpl
lcall
fs
outsb
jge
dec
lock
push
insl
fdivrl
sbb
lret
mov
lods
mov
lret
ljmp
dec
jecxz
ror
cmc
stos
or
mull
or
cmpl
iret
pop
dec
in
and
push
inc
insb
loopne
push
aas
mov
mov
sbb
mov
in
push
in
jecxz
dec
jmp
xchg
push
into
push
jo
lret
int
sub
jnp
and
es
lods
lods
sbb
mov
movsb
pop
jg
insb
out
push
lret
cmc
pop
daa
icebp
or
hlt
lods
cli
xor
pop
pop
pop
pushf
xchg
pop
mov
xchg
jae
not
fistpll
jp
push
out
inc
iret
cwtl
sub
mov
cmp
mov
cwtl
and
ss
andb
dec
fisubs
or
inc
jb
mov
push
adc
push
inc
or
loopne
clc
inc
test
add
xor
sub
in
and
je
sti
imul
filds
pop
push
dec
into
fwait
movsb
cld
jno
das
push
and
push
cmp
add
pop
add
push
push
push
call
mov
mov
mov
or
mov
mov
shl
mov
or
mov
xor
xor
call
add
mov
mov
push
jmp
fnstenv
inc
mov
mul
push
movb
add
cli
pop
ret
addr16
mov
jo
adc
ja
inc
ret
rcl
rorb
cmp
add
lcall
sbb
jae
je
xchg
pop
addr16
push
arpl
mov
pop
dec
cs
mov
fdivrl
fldenv
inc
dec
add
or
out
rcrl
jnp
sbb
xchg
dec
cltd
mov
cli
pop
jmp
mov
inc
clc
aaa
pop
jg
fnstsw
shl
mov
sub
adc
gs
mov
loopne
sbb
ds
loop
fdivl
in
ja
push
or
inc
loope
sbb
sbb
xor
add
jg
scas
fnsave
sahf
out
mov
inc
outsl
inc
in
cmpsl
fwait
imul
xlat
mov
sbb
mov
test
adcb
sub
xchg
lods
out
testb
cli
mov
lds
xchg
xchg
outsb
mov
mov
push
mov
xor
insb
shll
mov
cmp
int
jb
in
imul
lcall
push
cmp
aam
dec
popf
pop
lea
sbb
in
cs
in
mov
mov
shll
xchg
sbb
leave
int
leave
push
cmp
cld
inc
call
pop
mov
dec
adc
add
xchg
sub
inc
and
lcall
pop
jl
push
mov
cmpsb
mov
popf
shll
pop
mov
and
mov
dec
xchg
clc
call
shll
scas
push
jg
movsb
es
fsub
sbb
sub
shl
inc
loopne
xor
lcall
shrl
insb
or
test
lods
stc
and
and
movsb
mov
inc
outsb
ljmp
mov
jae
push
xor
xor
or
test
insb
jecxz
pop
stos
push
and
insb
sbb
mov
mov
sbb
hlt
mov
sbb
shll
flds
or
cmp
cmc
popa
pop
or
add
aaa
lret
sub
faddl
adc
push
ret
in
in
and
add
aas
inc
xchg
push
sbb
es
xchg
cwtl
shlb
sarl
mov
movsl
add
adc
jno
dec
pop
jge
fiadds
mov
pop
call
aam
aas
frstor
jmp
es
daa
popf
test
push
lock
mov
and
dec
leave
addl
mov
iret
test
jnp
pop
add
push
cmp
pop
ljmp
mov
and
loope
push
mov
movsl
push
lret
jne
pop
fistl
jg
push
popa
and
ret
loopne
popf
xor
xor
test
xchg
push
cmp
push
jb
adc
push
leave
mov
fildl
data16
xorb
or
inc
cmp
add
cmpsb
leave
dec
scas
out
rcr
orb
les
cmp
add
clc
mov
sti
shll
jae
push
mov
inc
add
adcl
in
arpl
loope
cs
sub
popf
pop
in
fcmovnu
es
xor
cmp
xor
jae
or
aam
sub
xor
cmp
push
dec
loop
shlb
sub
pop
cld
stos
xchg
xor
mov
dec
xchg
push
fst
push
pop
add
add
ret
mov
push
mov
scas
sti
int
dec
pop
ret
aam
push
adc
and
pop
pop
pop
int
movsb
sbb
arpl
lods
ffree
enter
fdiv
mov
pop
pop
sbb
xor
pusha
push
sbb
fstpt
mov
adc
mov
inc
mov
ret
and
imulb
mov
out
shrb
addl
rorl
push
movsb
sbb
xor
fisttpll
push
xor
test
mov
shl
out
jns
jbe
bound
xrelease
leave
sbbb
subl
and
inc
das
xor
cmp
mov
jg
inc
fs
lcall
rclb
pop
in
fdiv
xlat
rcrb
cs
cs
pop
idivl
out
jb
notl
in
leave
and
and
scas
dec
std
cs
popa
xor
mov
inc
iret
outsb
and
and
sub
sti
icebp
std
int
sub
dec
inc
jae
fsubrl
cwtl
test
ret
test
stc
test
out
xor
pop
fsubs
xchg
xchg
mov
insb
adc
jno
or
lcall
pushf
dec
scas
adc
lahf
aaa
insl
or
or
mov
test
mov
imul
imul
jge
gs
push
add
inc
loop
inc
mov
iret
mov
pop
cmp
dec
cmp
insb
lock
cld
inc
push
and
sbb
aas
mov
push
test
push
push
pop
cmpsb
cmp
or
jmp
outsb
xchg
outsb
dec
int
ja
cwtl
std
cmp
cltd
out
push
pop
sbb
repz
mov
out
negl
int3
scas
fisttpll
mov
stos
jmp
cmp
mov
imul
lret
cmp
push
orb
dec
jno
xchg
orl
inc
xchg
mov
mov
lea
or
mov
lcall
jmp
test
push
loop
in
mov
and
std
test
cltd
mov
xchg
repz
in
jns
int3
xchg
lock
mov
pop
push
pop
fucomi
cmp
lret
stos
aad
jnp
repz
insl
or
icebp
push
push
mov
inc
cmp
ret
pop
or
ror
push
jne
jmp
push
xor
sbb
add
xchg
lods
mov
repnz
scas
xchg
xchg
xchg
dec
jge
mov
lods
sbb
xchg
rolb
and
dec
add
adc
lods
pop
fwait
lods
jl
push
xor
xor
jae
jmp
pop
xchg
sbb
adc
dec
mov
clc
sbb
popf
ss
icebp
fcmovnbe
pop
add
mov
out
cmp
mov
pop
mov
jmp
cwtl
shrb
mov
push
mov
ret
jbe
inc
add
sahf
mov
add
adc
push
push
xor
xor
call
push
push
push
push
call
mov
mov
mov
or
mov
or
or
or
xor
xor
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
jmp
out
fisubl
push
jne
lret
sti
xchg
xor
add
add
jns
push
ret
cmp
and
push
push
mov
jne
repz
rcr
cmp
jae
and
faddl
dec
loopne
pop
data16
sbb
cmpsl
sbb
mov
sub
sub
mov
movsb
and
mov
lahf
adc
test
cmp
ljmp
int
sub
fsubl
clc
out
sbb
xor
daa
mov
jl
jo
xor
push
adc
dec
adc
insb
adc
mov
cld
push
mov
and
iret
mov
xchg
lds
mov
fiadds
push
push
out
pop
dec
in
cmp
pop
mov
push
dec
jge
mov
test
inc
hlt
xor
je
lret
mov
pop
or
cmpsl
mov
aaa
gs
out
mov
sub
daa
stc
sbb
mov
xchg
dec
clc
notl
ds
out
sbb
mov
in
bound
push
fstpl
xchg
or
and
inc
fistpll
cs
test
jns
add
movsl
imul
movsl
lahf
or
ret
xor
fs
push
hlt
inc
sahf
add
arpl
pop
mov
xchg
int
sub
xchg
into
sbb
sub
xchg
int3
mov
insb
pop
push
mov
loopne
pop
rep
fucomip
pop
xlat
push
jo
in
les
les
mov
xchg
in
mov
pop
fwait
or
in
pop
adc
and
or
pop
test
or
insl
push
gs
enter
inc
sub
into
lea
push
push
sbb
sub
dec
fiaddl
out
mov
fbstp
inc
xchg
dec
inc
lcall
mov
icebp
enter
into
xchg
mov
sbb
rorl
aaa
call
daa
subb
push
or
addr16
push
out
out
sbb
test
push
in
cmpsl
ds
inc
insb
add
push
fs
jp
xchg
cli
lea
cmpsb
pop
insb
in
mov
inc
dec
jmp
adc
mov
cmp
fisttpl
in
xchg
or
dec
xchg
in
jecxz
daa
in
inc
stos
dec
jne
pop
pop
and
rorl
popa
inc
test
cwtl
fwait
adc
out
xor
mov
cmp
leave
mov
mov
cmp
movsl
cld
in
sub
imul
hlt
or
iret
jb
out
push
ss
movsl
cmp
fstpt
movsb
stc
mov
mov
ret
mov
mov
push
and
add
sub
scas
and
push
mov
push
mov
sub
iret
jns
cmp
jmp
adc
mov
mov
mov
adc
push
gs
xchg
imul
mov
pop
cmp
pusha
insl
push
cltd
call
mov
and
inc
cmp
out
dec
jns
ljmp
xchg
shrb
cwtl
fistl
idiv
mov
cmp
fcmovb
sub
je
push
jno
cmp
jecxz
pushf
cmp
pop
or
jl
test
jmp
pop
jg
sub
daa
in
inc
and
push
int3
add
data16
push
lds
mov
fnstenv
popf
jbe
sbb
fwait
push
or
and
adc
xchg
iret
pushf
cmp
add
dec
push
pushf
inc
xchg
leave
cli
pop
jno
cmp
cwtl
jne
out
sbb
jb
cltd
xchg
loopne
jecxz
mov
add
repnz
lea
or
xor
test
add
ss
test
sbb
mov
adc
andl
sub
mov
push
popa
or
cmc
dec
and
jmp
repz
pop
inc
ret
repz
int3
add
ds
inc
test
push
pushl
xchg
xlat
xor
fwait
jne
leave
addr16
jnp
push
push
xchg
imul
lea
and
mov
addr16
mov
and
repz
in
xchg
or
cmp
push
sti
jle
cmp
jge
cmp
cs
stc
mov
jl
jmp
lea
clc
in
fs
sub
xchg
call
in
lock
jle
adc
dec
jns
mov
js
mov
fidivl
jge
in
in
and
lahf
stos
loope
fdivr
jmp
testl
and
les
lahf
xor
in
inc
int
aad
sbb
mov
enter
loop
dec
xchg
stc
lods
repnz
lahf
inc
in
mov
jg
mov
push
popf
int
mov
xchg
lret
cwtl
or
or
mov
mov
stos
lods
gs
inc
das
and
in
outsb
fs
testl
insb
mov
stos
sub
leave
mov
sub
cmp
pop
test
or
mov
or
mov
inc
outsl
xchg
mov
xchg
pop
dec
or
call
lods
jg
mov
xor
popf
adc
jb
rcr
pop
xchg
dec
pop
xchg
jo
sbb
jecxz
bound
testl
jns
loopne
ss
or
insl
pop
jbe
cmp
cs
mov
cwtl
xchg
dec
test
and
test
push
out
fs
adc
mov
inc
pop
popa
rorb
fs
sub
loopne
xchg
repz
das
xchg
adc
pop
cmovl
pop
es
push
inc
leave
add
jecxz
jnp
inc
jbe
repnz
cmp
pop
xor
lods
inc
dec
ja
pop
push
xchg
and
fadd
cmp
sub
mov
inc
aam
and
lods
movsb
sub
and
lea
mov
repz
jmp
push
pushf
test
in
xchg
pushl
cmc
pop
leave
imul
sti
sbb
or
dec
in
dec
sarl
test
aas
cmp
add
cld
push
lods
and
pop
or
shrl
loopne
adc
cmpsb
pop
push
imul
pop
ds
sbb
add
pop
enter
mov
mov
sub
xor
sub
adc
mov
lahf
pushf
dec
leave
pop
enter
sbb
add
xor
mov
xor
mov
push
push
push
push
call
push
push
jmp
add
lds
jge
mov
add
mov
mov
or
sbbl
cmpb
rcrb
xchg
orl
mov
inc
jnp
mov
fwait
sub
int
jge
cmp
orl
clc
sbb
adc
lods
cmp
negl
sub
stc
push
ja
xor
mov
int3
adc
in
or
push
fstl
inc
lock
xchg
in
add
pop
out
xor
sbb
pop
xchg
fcompl
movsb
sbb
mov
mov
cmp
andb
lods
imul
dec
out
mov
cld
arpl
dec
les
jae
jecxz
xor
std
jbe
xlat
ss
push
pusha
push
shlb
insb
push
cmc
fcmovne
shl
mov
mov
std
jo
bound
dec
dec
adc
scas
dec
cld
pop
pop
xchg
pop
fildll
loope
loop
sbb
push
add
xchg
popf
sbb
inc
subb
mov
inc
repz
out
mov
mov
jmp
insb
add
pop
sbb
int
out
gs
iret
dec
loop
adc
sbb
lcall
aad
addl
in
mov
jo
jns
mov
mov
mov
lcall
push
add
fcom
mov
out
mov
fwait
and
jno
inc
sti
sbb
adc
lret
cli
sub
mov
in
ds
sti
ret
push
repz
push
clc
out
xor
popf
movsb
pop
mov
adc
outsl
mov
jmp
in
pop
rorb
mov
xlat
repnz
mov
scas
out
out
xchg
adc
in
jae
js
insb
jnp
arpl
es
insl
ss
addr16
mov
and
pop
sarb
ja
cmp
lods
sbb
sub
nop
xchg
mov
out
xchg
rorl
jae
je
shll
stc
mov
cmpsb
push
inc
cmpsb
push
xor
cmpsb
das
orb
cwtl
loope
outsl
sbb
or
add
cmp
xchg
mov
xchg
sub
mov
inc
push
inc
and
inc
sub
xchg
xor
xor
fwait
shr
iret
xchg
lret
mov
into
xorb
sub
lahf
and
mov
xor
add
sub
shl
int3
aaa
sub
lret
push
fwait
push
add
imul
sbb
add
jge
cmp
jne
sahf
push
push
pop
gs
pop
add
popa
pushf
dec
cmpsl
aas
lock
mov
fs
loopne
popa
in
push
fnsave
pusha
mov
push
push
dec
movsb
push
xor
mov
enter
jne
cs
xchg
mov
mov
mov
xchg
movsb
dec
js
mov
into
fimuls
or
xchg
popa
lea
ret
jne
sbb
jae
int
or
arpl
sbb
jle
mov
mov
push
pop
shrl
push
fsubs
xor
dec
nop/reserved
pop
leave
test
imul
pop
mov
mov
rclb
jbe
add
lods
mov
mov
sub
pop
xor
fs
in
sub
ljmp
jle
xchg
addr16
mov
mov
mov
enter
jecxz
cmp
dec
bound
ret
jecxz
lods
outsb
scas
lcall
and
jae
pusha
pop
cltd
shll
js
pop
cwtl
fldenv
into
jle
cld
loopne
mov
sbb
test
into
inc
imul
aad
cmc
mov
outsb
jp
leave
sub
mov
enter
out
push
ljmp
mov
push
nop
stc
dec
cmp
pop
fs
insb
sahf
xlat
lcall
jmp
sbb
pushf
jecxz
dec
push
jmp
syscall
jmp
outsb
lret
xchg
xchg
lods
test
imul
andb
jbe
mov
jbe
add
pop
add
lds
rcl
outsb
mov
push
js
sbb
sbb
jecxz
ss
fsubs
dec
jmp
dec
fdivs
jo
mov
das
repz
aam
mov
push
cmp
cmc
clc
xchg
into
dec
sbb
xor
and
out
mov
sbb
push
mov
je
mov
test
add
xchg
cld
dec
cmpsl
and
and
cwtl
or
cmp
push
add
or
sbb
cwtl
xor
loop
fildl
ss
xchg
stos
orb
arpl
in
insl
fildl
rorb
lahf
pop
xchg
fnsave
mov
cmp
mov
lods
bound
adc
xor
xor
adc
mov
icebp
add
pop
out
in
inc
mov
and
loop
mov
inc
push
in
cs
hlt
inc
mov
add
adc
daa
pushf
jo
dec
movsl
outsl
clc
adc
adc
jo
test
inc
cmp
lock
lahf
lock
sub
add
push
dec
mov
push
cs
push
and
inc
adc
mov
mov
js
or
lret
push
mov
pop
cmp
out
sbb
inc
dec
mov
cs
jns
adc
mov
cmp
outsb
and
or
xor
imul
das
dec
mulb
pop
in
in
idiv
and
movsl
add
bound
mov
enter
mov
add
xlat
int
mov
out
jo
add
inc
xchg
sub
pop
cwtl
scas
dec
in
pop
popa
xorl
jmp
int
sahf
daa
inc
xchg
cmp
aam
sub
jb
clc
cmpsl
fucomp
repz
out
cmpl
pop
sub
inc
mov
insl
ja
jg
nop
adc
pop
popa
inc
bound
mov
stos
mov
xor
mov
shlb
add
std
cmp
sarl
sub
inc
aam
dec
mov
mov
mov
add
sub
scas
add
cmp
inc
and
add
das
les
pop
jge
dec
ja
roll
imul
scas
test
nop
stos
stc
and
loopne
imul
xor
iret
mov
dec
push
mov
add
imul
call
xor
dec
imul
addb
rcrl
or
jmp
dec
xchg
adc
push
push
call
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
adc
movl
mov
sub
mov
xorl
mov
addl
movl
orl
jmp
sti
out
out
jo
jo
pop
inc
push
push
mov
js
invd
add
insl
xlat
aaa
outsb
fwait
jle
cmc
inc
mov
sub
mov
into
pop
int
add
les
dec
imul
jb
push
pop
xchg
insb
into
cld
jg
mov
decb
xor
imul
outsl
cmp
mov
adc
ret
sbbl
dec
cmovl
popf
notb
nop
mov
push
xor
xchg
stc
sbb
jle
pop
mov
push
push
cmp
push
push
adc
ret
sbb
mov
outsb
or
cmpl
and
sub
shll
xor
jle
pusha
mov
adc
shrb
mov
ljmp
xchg
and
add
sbb
fnstcw
jp
mov
jb
clc
test
lods
sbb
lret
daa
mov
mov
and
ret
in
mov
xchg
xchg
out
out
xchg
ret
fnstsw
hlt
cli
repnz
mov
lcall
sbb
xchg
imul
imul
xchg
add
push
les
stos
lret
and
fucomip
lock
jae
pop
popf
ds
xor
push
ret
and
mov
xlat
push
fidivl
repnz
mov
jmp
ud0
test
adc
sbb
testb
aam
jne
js
stos
mov
sbb
xchg
push
sub
sub
hlt
adc
ret
test
daa
xor
jno
cltd
icebp
and
adc
pop
xchg
mov
std
jmp
shl
mov
test
cmp
push
in
inc
out
add
xor
adc
pop
xor
lcall
sub
cwtl
imul
and
cmp
ja
pop
outsl
les
mov
scas
andb
and
out
mov
sbb
sbb
inc
loop
lcall
mov
xor
leave
in
push
sbb
addr16
repz
inc
xchg
stc
lea
sub
shl
dec
mov
divb
fisttpl
pushf
pop
setae
sbb
jns
shll
mov
lahf
in
sti
lds
cmp
mov
inc
fwait
pminsw
das
das
inc
arpl
xchg
mov
jb
mov
jmp
sub
xchg
lods
lret
inc
test
push
xchg
fs
and
push
dec
js
add
and
xchg
sti
pop
cltd
mov
xor
or
out
popa
imul
test
imul
xchg
or
pop
adc
xchg
mov
pop
loopne
mov
and
adc
or
out
inc
sub
sub
rcr
adc
cmc
dec
das
or
xchg
loope
dec
clc
mov
sub
cltd
and
stos
in
fmull
test
cmp
mov
cld
outsb
jo
xlat
sbb
mov
or
stos
cmp
rorl
add
mov
negl
pop
mov
cwtl
inc
sub
mov
inc
push
ret
lds
cwtl
jae
notl
cmp
cmp
jle
push
punpcklbw
fists
mov
push
cltd
nop
inc
jle
imul
stos
mov
jo
imul
inc
mov
cwtl
jl
cli
jl
shlb
mov
test
inc
sbbb
inc
or
scas
adc
or
sbb
dec
xchg
cmp
out
test
divb
mov
jp
sub
pusha
sub
cmp
in
hlt
adc
add
xor
inc
cmp
ljmp
sbb
pop
sub
fs
push
inc
aam
pushf
jp
js
pop
les
add
and
pop
inc
aas
and
lahf
mov
pop
push
stc
inc
call
lods
popa
popf
sahf
bound
cmp
fisttpll
and
ja
jl
push
int3
xor
mov
dec
scas
inc
xor
fs
pop
pusha
fisubrl
cmp
mov
insb
test
lcall
jnp
cmp
out
ds
cwtl
dec
fidivrs
gs
aam
xor
je
imul
fistpl
sbb
jb
fwait
sub
jnp
dec
lods
jno
subl
or
adc
adc
imul
pop
fimull
push
pop
pop
dec
lods
lea
mov
add
shl
das
fwait
jl
jnp
adc
or
outsl
xor
sub
es
xor
dec
sub
int3
push
mov
push
leave
out
lahf
push
out
aad
inc
pop
cltd
jbe
idivb
outsb
mov
mov
rcpps
fcmovnbe
jne
out
cmp
adc
nop
sbb
stc
push
dec
test
or
and
sub
fcom
lods
dec
pop
stos
mov
pop
lods
icebp
push
sbb
cltd
aad
loop
sub
movntps
ja
push
push
xor
sub
cmc
xor
aam
inc
mov
pop
aaa
sub
lods
dec
inc
pop
mov
mov
inc
lds
sub
mov
xchg
loop
inc
leave
or
jns
test
mov
cwtl
gs
mov
pushf
and
ficoms
pusha
push
xchg
outsb
out
mov
jbe
mov
in
sub
shll
popa
xor
outsl
jne
adc
fdivr
mov
outsl
sbb
jle
push
test
jmp
fs
xor
andl
xchg
sahf
mov
xor
clc
cmp
dec
or
xlat
and
out
or
push
sub
jge
fcompl
xchg
and
xchg
dec
scas
leave
xor
cmp
lods
nop
xor
scas
imul
imul
push
sub
and
and
imul
sahf
dec
mov
xlat
sub
mov
in
movb
movb
cmpl
jbe
andl
adc
jmp
pushl
call
movb
movzbl
mov
sub
imul
mov
or
movzbl
push
orl
and
mov
movb
movl
movb
subl
movb
movb
orl
mov
orl
mov
subl
add
adcl
jmp
ret
sub
shlb
mov
xor
mov
cltd
inc
adc
loope
invd
add
cpuid
and
push
mov
scas
push
mov
pop
xchg
aas
sub
popa
icebp
leave
mov
jo
mov
test
cwtl
cmpsb
mov
shlb
mov
idivb
scas
loopne
in
sub
test
test
gs
js
out
aad
adc
test
repnz
mov
lods
dec
popf
mov
jbe
in
lret
dec
mov
addb
pop
and
jle
out
je
jns
aaa
sbb
or
fwait
push
scas
jg
add
scas
outsl
push
ftst
push
popa
sub
lret
pop
jae
test
jae
dec
mov
push
mov
mov
leave
sbb
jecxz
mov
loop
pop
pop
sub
idiv
ds
mov
and
cmp
call
repnz
sahf
cmpsb
ret
inc
mov
pop
sbb
sbb
pop
adc
fstpl
arpl
dec
cltd
fs
sarb
pop
mov
or
xor
xchg
mov
nop
cmp
or
stc
mov
pop
daa
push
lea
jl
inc
mov
push
sub
jl
fldt
cli
xchg
outsb
mov
sub
icebp
sbb
sbb
mov
mov
mov
pop
mov
fdiv
lret
xchg
and
ja
lahf
fldl
rorl
pop
sbb
inc
test
lret
sbb
mov
mov
dec
lret
sub
adcl
mov
stos
inc
loopne
mov
mov
push
adc
sub
cmc
mov
cmp
leave
pop
jl
rcll
xchg
pop
xchg
je
sbbl
and
stos
adcl
xchg
xchg
jno
ds
mov
int3
add
out
add
adc
add
push
fisttps
fidivl
int3
jno
mov
stos
sub
cli
sub
inc
sbb
jns
adc
imul
imul
inc
inc
int3
or
pushf
cmpl
inc
mov
push
or
inc
adc
out
sti
loop
into
or
pop
jg
es
stc
aam
cld
xor
lods
popf
imul
out
mov
std
cs
gs
jbe
pop
jnp
mov
out
call
jmp
nop
ret
pop
push
inc
addb
pop
push
inc
int3
adc
pushf
or
and
sub
pop
scas
cltd
pop
ja
inc
mov
dec
movsl
cld
mov
xor
sbb
mov
jmp
push
popf
roll
xchg
cmp
sub
pusha
or
mov
dec
lock
xor
insb
xor
cmp
dec
out
imul
popa
or
sti
test
pop
mov
push
and
jne
out
dec
pop
test
insl
push
add
das
lds
cmpsl
inc
andl
and
mov
push
push
adc
lcall
lcall
lds
les
dec
das
mov
mov
xor
push
push
loopne
mov
int
stc
xor
insl
sbb
flds
fs
jnp
aam
sub
adc
or
push
mov
das
loop
cmp
adc
and
mov
and
push
jmp
cmp
fnstenv
cmp
clc
sbb
aaa
adc
adcl
cmp
or
out
lcall
jge
pop
mov
mov
fsubl
mov
xchg
sub
mov
outsb
arpl
outsb
mov
pop
dec
in
stos
ret
dec
mov
adc
add
xchg
xor
lcall
divl
out
push
fisttpl
cmpsl
std
scas
sahf
ret
sar
pop
xchg
loopne
cmpsl
add
jae
mov
outsl
cmp
ss
out
cmp
loop
mov
sub
js
shll
outsb
lods
jae
popa
leave
popf
pop
lret
sub
xor
push
shll
movsl
es
jl
sbb
in
ljmp
pop
inc
pushf
add
lods
sbb
lea
inc
pop
pop
push
mov
fisttpll
push
sub
jle
or
popf
cmp
adc
enter
mov
pop
mov
adcb
push
mov
sbb
xchg
dec
movsl
out
enter
rol
js
aad
cwtl
loop
adc
inc
cmp
and
adc
sub
sub
cmpsb
fistl
imul
xchg
mov
push
dec
add
test
scas
xor
test
mov
mov
jecxz
sbb
mov
frstor
pop
dec
mov
test
pop
cli
cmp
cs
mov
and
gs
loopne
daa
test
adc
aam
inc
cld
filds
jg
movsb
outsl
daa
pop
pusha
sub
add
mov
wrmsr
push
jg
cwtl
je
ret
negl
inc
sbb
rcrl
adc
test
ljmp
fs
and
cltd
push
push
mov
xchg
in
test
popf
jecxz
cmc
scas
iret
int3
aaa
and
js
pusha
icebp
jge
xchg
pop
adc
xlat
push
sub
imul
push
out
ds
mov
fisttps
push
jmp
lock
xor
sbb
push
add
cmpsb
mov
fstl
es
data16
inc
cmp
and
sub
sub
movsl
sub
push
jl
inc
cmp
jecxz
or
push
adc
xor
ss
lahf
sub
lret
sub
add
es
jbe
push
lock
dec
pusha
movsb
repnz
loop
fwait
cli
addb
mov
scas
mov
adc
scas
add
dec
out
jp
enter
push
sbb
jae
mov
push
pop
test
mov
addl
or
addl
mov
subl
and
movl
jmp
mov
hlt
add
sbb
out
mov
invd
add
je
inc
sbb
sub
mov
xor
movsb
mov
mov
mov
mov
lock
and
jo
in
popf
js
je
clc
mov
sub
push
sti
mov
repnz
push
jo
and
inc
fistpl
pop
movsb
jge
rorl
scas
ret
push
dec
xchg
inc
cmp
inc
add
fisubrl
jno
rcrb
stos
push
lcall
push
les
popa
xchg
sbb
in
rcrb
sub
lahf
adc
jb
jbe
pop
rcl
subl
mov
mov
xchg
cmp
xchg
xchg
adc
out
sbb
jl
in
jge
or
sbb
cmpsb
outsl
out
cli
pop
insb
leave
jno
or
mov
mov
or
push
or
or
adc
xchg
cwtl
ficoml
xlat
cmpsl
adc
out
fucomip
push
loopne
js
add
sbb
add
jp
push
sub
or
fwait
mov
or
adc
mov
pop
xor
dec
jb
dec
enter
mov
aam
bound
cmp
iret
push
cmp
aas
mov
lea
imulb
stc
stos
test
xchg
movsb
mov
cmp
bound
add
loope
lods
pop
decb
mov
addr16
mov
out
add
stos
mov
push
iret
aad
paddb
in
pop
add
push
mov
pop
sbb
push
and
out
push
mov
outsl
mov
pop
dec
xor
mov
mov
push
scas
test
out
scas
mov
loope
cmp
fwait
adc
sahf
jecxz
jmp
pop
push
xchg
mov
adc
inc
jns
push
call
icebp
and
rorb
pop
sbb
out
lahf
or
ja
lods
lret
mov
dec
xchg
fmull
jg
xor
into
pop
adc
push
shrl
hlt
inc
hlt
leave
sub
pop
jne
or
imul
xor
sub
enter
daa
jg
mov
inc
pop
aaa
fsts
mov
or
or
sbb
jecxz
jb
push
and
or
mov
mov
fstpt
sti
sbb
push
das
repz
push
push
push
xchg
idivb
pop
xor
loope
sbb
sbb
test
pop
insb
inc
cmp
mov
mov
add
push
lcall
jge
fwait
in
rcll
insb
adcl
imul
push
push
push
das
daa
jbe
outsl
aad
mov
or
out
fadds
lea
fsub
adc
in
xchg
xor
dec
loop
arpl
xorl
fstpt
loope
hlt
push
mov
enter
adc
push
loop
xor
add
mov
lcall
push
std
xorl
adc
test
sbb
out
lcall
dec
iret
mov
pop
add
loope
push
daa
xchg
fbstp
in
in
jg
cli
imul
adc
pop
mov
sti
xlat
mov
and
xor
mov
xchg
cmp
push
bound
shrl
inc
xor
dec
push
pusha
sahf
sbbl
xor
push
shrl
adc
push
pop
je
fisubs
inc
jg
imul
push
push
jmp
mov
and
adc
adc
pop
or
test
andl
dec
fsubrs
clc
add
shlb
mov
aad
inc
or
cmp
mov
icebp
fstps
adc
cmp
cmp
es
cmc
inc
out
mov
push
mov
jmp
pop
jmp
push
ljmp
aaa
dec
dec
add
push
pop
rorb
adc
mov
movsb
xchg
leave
push
jo
mov
or
das
mov
ds
push
adc
fistps
mov
mov
pop
adc
xchg
jns
jb
xor
movsb
and
lock
in
jns
mov
lahf
aad
cld
ja
in
adc
fcoms
lods
and
xchg
or
push
scas
push
cmp
dec
push
mov
into
gs
push
and
mov
in
pusha
fdivl
mov
mulb
push
mov
aad
xlat
pop
cmp
imul
mov
adc
cmpsl
test
lret
pushf
inc
xor
push
outsl
and
popa
out
fdivrs
ret
fidivs
and
xor
mov
lret
fisubrs
sbb
inc
mov
pop
les
insl
inc
gs
imul
jp
fucomp
fmull
insb
adc
lods
jne
je
rep
ss
lcall
fsts
icebp
out
test
mov
or
dec
cmp
test
mov
lret
mov
incb
cmp
pusha
test
dec
fdivr
adc
xchg
movsl
mov
adc
fcmovnbe
mov
in
dec
inc
xchg
adc
lret
xchg
mov
lret
mov
cmp
shrb
and
dec
add
adc
jb
and
xor
je
imul
cmpsl
out
push
sub
mov
cmpsl
out
mov
into
fld
in
cmc
out
xchg
out
mov
sbb
sti
adc
adc
test
dec
pop
xor
mov
unpcklps
xchg
xor
pop
addl
dec
xor
mov
mov
ficompl
ds
scas
push
pop
shl
cld
sub
fldenv
adc
es
int
sti
lock
lahf
lahf
xlat
fbld
sbb
movsl
movsl
rorl
idivl
xor
pop
in
repz
mov
jo
pushf
jnp
out
shrl
repz
outsl
inc
jno
test
mov
popf
or
mov
adc
cmp
ja
mov
mov
sub
mov
cmpl
jl
andl
mov
and
jmp
push
push
push
call
mov
mov
movzwl
movzwl
shr
addl
or
sub
movl
mov
orl
movb
movb
sbbl
mov
mov
xorl
xor
addl
add
xorl
movzbl
movzbl
sub
cltd
mov
adc
mov
jmp
mov
pop
push
and
sub
mov
mov
lahf
ret
invd
add
xlat
dec
or
hlt
cmpsl
addr16
lea
add
mov
or
mov
push
xchg
mov
sbb
rcrb
xchg
out
pop
xchg
push
rclb
jo
je
fisubl
es
mov
push
fistpll
or
fucomp
aaa
push
lcall
jns
xor
mov
aas
test
les
cwtl
add
out
push
sbb
add
shrl
cmc
and
in
cmp
jnp
jb
sub
adc
jbe
inc
lods
icebp
outsb
ficoml
mov
pop
in
mov
adcl
icebp
sub
repnz
sub
fisubrs
adc
lret
pop
jo
enter
imul
popa
or
es
adc
mov
ss
cld
push
outsl
and
lds
sti
js
ljmp
cs
ds
sarl
xchg
xor
pop
mov
jnp
jbe
scas
movsl
clc
cwtl
fdiv
jp
daa
jbe
pop
jp
adc
mov
and
fcompl
or
mov
inc
notl
or
push
xchg
pop
xchg
cmp
xchg
jmp
xor
or
mov
daa
into
ds
fwait
xor
jle
mov
inc
stc
ja
je
loope
into
jae
inc
mov
mov
push
cmpsb
arpl
cli
jb
mov
dec
inc
push
imul
addr16
push
pop
cmpsb
inc
pop
aad
into
mov
popa
xor
dec
test
push
xchg
mov
iret
push
push
in
xchg
xchg
jl
jp
sub
imul
pop
shll
add
xor
or
ret
pop
sbb
and
adc
xor
es
jp
xor
mov
cwtl
mov
mov
adc
lret
dec
or
bound
in
inc
pop
sub
or
stc
aam
rclb
mov
push
and
jp
add
aas
xlat
or
repnz
imul
push
xor
pop
xchg
test
loop
push
sarl
loopne
pop
and
out
xlat
fnstsw
insl
mov
in
enter
pop
sbb
mov
and
or
add
add
fsqrt
pop
jae
add
xchg
addb
das
dec
adc
cld
and
or
nop
mov
cmp
pop
xchg
cmc
dec
pop
dec
cmp
xchg
in
js
push
dec
push
dec
es
xor
insb
mov
mov
insb
adc
aas
lcall
mov
add
and
add
inc
loopne
cmp
out
mov
pop
insl
add
ret
or
or
cli
lock
loope
shrb
inc
data16
lods
call
ret
lock
jae
loope
movsb
cltd
out
loop
fsubrs
lock
pop
and
push
mov
push
pop
push
sbb
loop
lret
xlat
js
sub
pop
sub
data16
ret
inc
push
negb
arpl
stc
cmp
push
push
or
jo
push
mov
sahf
fildl
ret
rcrb
sbb
push
dec
daa
push
add
jns
add
outsl
scas
or
cltd
jl
fsubrp
xlat
test
add
testl
repz
das
ss
lods
cmpl
ret
mov
push
inc
xor
les
cmp
jl
mulb
xchg
sbb
lea
out
xchg
sub
sub
pop
inc
inc
push
or
repz
mov
mov
mov
ficomps
daa
push
xchg
adc
mov
mov
dec
sub
lret
add
sbb
stc
stc
cmp
mov
ja
sbb
fsubrs
pop
jno
mov
je
push
cmp
cmp
and
int
sub
shld
push
adc
mov
and
lahf
pusha
enter
pop
mov
pop
mov
mov
pop
jo
lods
pusha
gs
adc
cmp
shll
adc
mov
cwtl
mov
dec
loope
rcrl
aaa
mov
push
mov
es
sub
and
je
pop
add
add
add
shrb
sub
pop
fsubs
call
dec
pop
dec
push
pusha
xchg
xor
mov
pusha
bnd
or
dec
or
int
sti
out
xchg
push
sbb
push
xchg
lock
fcmovnbe
cli
loop
addl
je
gs
push
fistps
adc
or
popa
jmp
test
aam
xorl
jae
jp
shll
out
sbbb
adc
jne
jg
push
ret
sub
jns
xlat
stos
jecxz
std
out
push
out
xchg
inc
test
mov
stos
mov
inc
mov
jg
xor
and
mov
les
jb
mov
js
lods
fidivs
arpl
lahf
mov
push
mov
jle
mov
pop
jl
sub
fsubrs
adc
andl
sub
or
iret
mov
iret
ljmp
mov
mov
push
cmpsb
mov
sti
xchg
mov
xchg
xor
inc
pop
je
adc
sahf
shrb
repnz
push
dec
js
iret
and
nop
std
add
punpcklwd
test
mov
and
cmp
dec
shr
popf
xor
jmp
shrd
jg
in
xchg
xchg
and
mov
fisubrl
xor
pop
push
jl
out
decl
cmp
jmp
sahf
inc
push
add
dec
sti
daa
popf
xchg
ret
arpl
js
test
jnp
lahf
xor
sbb
dec
andb
fcmovne
mov
xor
imul
sbb
and
rcl
or
rorl
jge
xchg
mov
push
add
hlt
xchg
xorb
fs
repz
cmpl
jl
and
jmp
push
call
jmp
sub
push
xchg
jne
jle
inc
fists
cwtl
test
vmwrite
imul
sub
out
fsubrs
dec
inc
leave
dec
bound
jb
icebp
adcl
cmc
add
les
jle
movsb
mov
add
test
mov
sbb
clc
adc
repnz
dec
xor
rcll
jge
fxch
int
and
out
cmp
jp
or
mov
lds
pop
outsl
bound
decl
pop
fsubl
push
mov
lahf
inc
sbb
fbld
movsl
inc
cwtl
lock
adc
imul
cmp
in
add
testb
int3
mov
push
xlat
in
jne
scas
lahf
test
fnstenv
aad
inc
cmpl
xchg
mov
out
out
ret
nopl
mov
out
addr16
cmpsb
dec
sbb
jmp
into
mov
push
cld
sbb
ja
sub
xchg
push
push
stos
cld
mov
xchg
mov
aad
out
or
adcl
jge
cwtl
stos
and
adc
sub
stc
in
into
dec
mov
mov
mov
sbb
jecxz
mov
dec
fidivs
in
je
fwait
pop
out
shl
in
es
stos
jns
cmpsb
lods
cmp
mov
decl
into
sub
cmc
test
mov
gs
call
repnz
int3
mov
mov
gs
lahf
mov
gs
jl
xchg
jmp
adc
leave
in
add
or
cmpsb
subb
movsl
cmp
push
loope
loopne
dec
add
mov
pop
mov
push
push
mov
outsl
xor
xor
and
adc
mov
xor
push
mov
push
add
jnp
jae
lock
or
add
sub
push
negb
and
push
iret
push
xchg
mov
xchg
mov
dec
push
repnz
mov
lret
iret
lcall
mov
mov
leave
loopne
nopl
jle
dec
adc
mov
pop
std
lods
stc
pop
ficompl
das
cmp
hlt
jmp
xchg
xchg
cs
xor
mov
adc
movsb
lds
jns
movsl
loope
push
xor
insb
hlt
xchg
push
mov
divb
ljmp
and
fwait
add
test
out
popa
sar
dec
leave
ja
sub
xchg
adc
jmp
ret
sahf
or
dec
jg
lods
push
xchg
and
lods
orb
sarl
mov
dec
or
xor
outsb
pop
rcrb
out
ret
mov
subb
in
pop
push
xor
rcrl
int
adcl
into
test
jl
add
out
mov
fadd
inc
aaa
adc
idivb
adc
fs
or
mov
sub
mov
orb
xchg
jge
fcoms
cli
sbb
mov
push
mov
xchg
ret
shl
fmull
pop
adc
sub
arpl
jb
pop
sub
stc
xor
les
subl
xchg
sub
negl
push
fwait
movsb
shrb
clc
sub
pop
js
dec
filds
jb
push
sub
xor
mov
sbbl
and
sub
mov
cmpsb
in
ret
out
xlat
test
mov
repz
add
call
xchg
mov
sarb
movsb
test
outsl
fimuls
fmull
cld
pop
popf
and
lods
or
xchg
adc
mov
orb
inc
mov
mov
cwtl
cld
mov
scas
ja
push
inc
push
pop
out
and
aad
in
jne
cld
int3
xor
push
daa
mov
scas
lcall
in
adc
dec
push
scas
xchg
insb
ja
mov
push
push
pop
sub
mov
sub
push
js
mov
movsl
pop
test
fildll
lods
lock
sbb
sub
cmp
es
mov
ljmp
outsl
stc
lea
sub
add
xor
sub
gs
lret
pop
ja
shl
push
jne
adc
add
out
sbb
add
fcmove
mov
repnz
test
jmp
fisubrs
cmp
cmpsb
mov
js
imul
push
fnstcw
add
shlb
adc
addl
jge
psubsb
shl
jmp
popf
jecxz
jp
cmp
sbb
add
adc
loop
inc
jmp
in
pop
aaa
mov
xchg
add
test
outsb
mov
subb
fsts
cmp
mov
aad
jmp
popf
pop
rcrb
or
adc
test
pop
pop
mov
push
and
push
das
movzwl
cmp
dec
cltd
jmp
cmpl
inc
mov
addr16
adc
mov
dec
pop
int
mov
pop
test
cmpsl
push
addr16
mov
int3
xchg
adc
mov
ljmp
cmc
dec
xor
xor
push
xor
pop
movsl
vminss
outsb
push
jmp
inc
call
or
gs
int
jle
pop
adc
push
in
mov
aas
adc
inc
inc
cltd
xor
adc
push
rorb
and
das
popf
mov
out
jl
loopne
ret
aas
xor
sub
icebp
sub
sarl
mov
sbb
les
mov
sahf
sbb
js
push
pop
dec
out
pop
insl
cmp
mov
push
clc
cmp
and
sbb
add
pop
pushf
adc
jmp
mov
xchg
mov
testl
xchg
and
dec
pop
xor
icebp
ffreep
loope
push
or
test
out
and
stc
pop
pop
stos
cmc
xchg
mov
push
xchg
cmp
xchg
aaa
clc
push
sti
cltd
icebp
cld
sti
scas
jno
dec
sub
pop
jecxz
add
sbb
and
retw
sahf
add
cmp
popa
jle
lret
inc
lcall
xorb
pop
cmp
fmull
ffree
mov
pop
jae
gs
jne
sbb
fwait
es
add
cmp
dec
loopne
cmp
daa
pop
xchg
and
push
rcll
sub
fildll
add
pop
shrl
xlat
lods
stos
push
mov
in
insl
pop
addr16
jb
ljmp
ds
jecxz
mov
sub
adc
lods
nop
sub
lret
push
pop
insl
and
and
jp
mov
inc
dec
pop
jp
cmp
jp
mov
xor
cmpsb
arpl
lret
jl
fadd
sbb
mov
fsubs
jl
int3
cwtl
lahf
xchg
mov
or
repnz
push
sbb
dec
xor
dec
incl
scas
dec
jb
xor
hlt
test
jns
out
mov
xchg
shr
and
lea
cmp
in
xchg
dec
shl
add
push
sub
fidivrl
aam
dec
pushf
or
inc
mov
shll
int
mov
ret
in
add
adc
jno
popa
mov
push
xor
sbb
cltd
push
pop
jmp
pop
push
and
out
pop
pop
push
jnp
inc
int3
mov
inc
idiv
push
and
xchg
pop
or
shlb
pop
sub
cmp
into
push
frstor
jmp
add
mov
jae
outsb
data16
hlt
xlat
xchg
nop
lcall
jb
repnz
push
leave
imul
sbb
xor
ficomps
push
jg
roll
in
lea
xor
sbb
jne
push
daa
cmpl
mov
add
xchg
sub
push
test
push
repnz
adcl
sbb
insl
ss
aas
leave
pushf
dec
mov
mov
in
clc
icebp
push
or
cld
mov
push
sbb
inc
notb
in
enter
inc
out
mov
push
scas
ficompl
mov
sti
test
push
jns
push
add
pop
jns
adc
lret
rorl
cmp
lret
cmc
cmc
mov
cmp
daa
and
adc
pop
inc
push
arpl
repz
jmp
cmp
cwtl
nop
ss
xchg
sub
jno
stos
js
add
adc
addr16
mov
push
ficompl
out
adc
jno
or
movsb
pusha
and
or
or
xchg
das
iret
dec
mov
xor
lret
lds
pop
sbb
adcb
mov
int
adc
repnz
enter
dec
lcall
rorb
sub
repnz
xchg
lods
push
gs
push
insb
shlb
lret
add
loopne
sub
push
xor
jbe
in
lds
mov
pop
in
jne
mov
sti
les
push
push
mov
call
ret
adc
aad
jp
mov
fisttpl
xchg
lods
fdivrs
hlt
test
clc
or
xlat
jle
cmpl
pop
into
mov
push
cld
popa
cmp
popa
std
addb
hlt
and
jb
cmp
inc
out
or
and
xor
mov
inc
dec
sbb
ja
inc
or
sub
pusha
sub
adc
dec
jns
pop
ficoms
mov
fmuls
dec
adc
arpl
xchg
lret
mov
or
adc
inc
mov
jb
cwtl
cmp
ljmp
mov
mov
pop
fcoms
dec
fists
sub
jns
enter
or
mov
mov
inc
hlt
addl
or
stc
outsl
push
cli
jno
xchg
repz
inc
pop
push
jg
jge
or
xchg
jp
inc
pop
xchg
popf
jae
mov
jecxz
out
out
std
into
xor
push
mov
hlt
add
enter
popf
and
fnstenv
es
lret
out
push
clc
xor
shrb
adc
mov
xorl
push
fcmovu
add
out
test
nop
mov
xchg
es
mov
das
addr16
cmp
mov
jle
jge
xchg
iret
mov
jmp
es
sub
xchg
jo
je
insb
faddp
in
mov
movsl
cmpsb
xchg
js
dec
mov
cmp
xor
or
mov
jl
rcll
es
enter
jg
lret
adc
lea
mov
lock
push
sbb
orb
test
inc
pop
adc
jle
xor
xchg
into
sbb
mov
arpl
sub
cmpsb
fstl
push
sahf
test
pop
adc
xchg
mov
stos
andl
add
adc
mov
call
mov
ss
push
insl
xchg
mov
sub
je
push
div
inc
cmpsl
xor
or
dec
jb
je
bound
sbb
fsubr
test
xor
iret
out
shrb
or
std
mov
add
outsl
pusha
pop
cli
aad
lret
int3
inc
mov
loopne
mov
and
mov
enter
adc
xor
jbe
stos
ss
jne
gs
jno
bound
insl
in
jg
push
adc
fsub
adc
push
inc
bswap
cmp
mov
test
sub
cmp
iret
xchg
and
or
popa
add
shrb
inc
xor
jg
dec
arpl
mov
mov
shl
ja
outsl
mov
stos
pop
popw
push
daa
fildl
push
orl
inc
mov
imul
inc
cmc
movb
movb
mov
andl
jmp
dec
mov
aaa
es
mov
mov
or
js
dec
add
sub
jnp
dec
fsubrl
inc
stos
loop
and
mov
enter
loope
int3
push
or
or
hlt
shr
adc
std
leave
xorl
add
push
cmpsb
push
jge
nop
les
je
movsl
dec
inc
add
sbb
adc
in
shl
cltd
test
sub
sub
rcrl
jl
mov
pop
xlat
inc
fimuls
movsb
jle
in
push
xchg
stos
adc
adcb
fstps
sbb
inc
bound
cmpsl
rcr
fimull
rep
cmpsb
shlb
adc
fsub
dec
fstps
rcrl
arpl
popa
fldlg2
xlat
imul
and
lcall
and
xchg
rorl
xor
xor
xor
popf
jge,pt
xchg
pop
xchg
test
lcall
jo
pop
pusha
daa
fidivl
push
ljmp
repnz
rolb
push
jne
push
pop
add
sahf
sub
aam
xor
int3
cmpsl
push
mov
push
xchg
xchg
jb
sub
mov
lods
xor
pop
pop
stc
push
pop
jmp
cmp
xchg
inc
jecxz
sarl
adc
add
loop
push
dec
sbb
popa
repnz
repnz
cmp
jno
pop
mov
inc
leave
stos
aam
jnp
aaa
stos
adc
cmc
ss
test
pushf
sbb
dec
imul
dec
push
imulb
les
push
sbb
fs
out
aaa
arpl
cmp
push
push
add
sub
jns
mov
xchg
sbb
push
push
mov
mov
and
pop
mov
adc
lods
aaa
insb
mov
ret
xor
aas
push
or
test
inc
mov
repnz
cwtl
scas
outsb
idivb
cli
add
sub
or
sahf
jle
cld
pop
test
out
jl
in
jno
cmp
xor
jg
in
push
push
add
jno
sub
sub
popa
shrl
inc
push
fwait
push
pusha
sbb
or
jp
xor
cld
mov
andl
out
mov
rcl
push
pushf
jecxz
pop
jbe
mov
rclb
movsl
ja
pop
jbe
aam
repz
push
sub
lods
movsl
inc
cmp
movsb
aaa
ds
adc
and
mov
adc
popa
fsub
dec
subb
push
adc
and
mov
sar
mov
xchg
aad
insb
les
push
push
fnsave
aaa
hlt
dec
sbb
mov
cmpsb
xor
test
dec
pop
addr16
or
push
loope
jbe
mov
aad
les
das
jbe
mov
mov
sbb
out
mov
or
xchg
dec
mov
pushf
cmpsl
push
xorl
loopne
xorb
push
aas
dec
mov
scas
movsl
jmp
mov
xchg
lds
sub
pop
xor
sbb
stc
or
mov
mov
jmp
mov
mov
mov
mov
inc
dec
mov
shlb
add
iret
cmp
jl
pushf
lret
and
inc
xor
xor
jle
pusha
sub
sbb
push
cmp
dec
repnz
int
imul
cmc
pop
jns
mov
pop
jns
loope
add
mov
mov
mov
cmp
scas
addb
adc
sbb
jle
cmp
adc
and
icebp
adc
int
das
sub
scas
jnp
mov
inc
arpl
adcb
adc
les
sbb
psubsw
repz
pop
call
sbb
out
push
pop
inc
test
add
mov
sub
adc
dec
insb
mov
lcall
mov
pop
cmp
outsl
push
and
add
sbb
test
sub
mov
test
addr16
jb
mov
xchg
pop
mov
fwait
or
mov
cmc
push
adc
pushl
fists
mov
nop
inc
into
sub
icebp
bound
loop
jae
mov
inc
dec
or
xor
mov
mov
xchg
sbb
jo
sbb
sub
add
sbb
cld
xor
in
jno
xlat
mov
les
or
cmpsl
cmc
mov
js
add
mov
sti
mov
int3
sub
or
aas
mov
sub
sahf
jl
call
xlat
lahf
xchg
fdiv
out
sub
sub
pop
jno
imul
lea
shrb
push
dec
scas
fsubs
sub
lods
xchg
std
lret
and
push
push
sbb
andb
pushf
repz
clc
es
jge
add
or
mov
mov
insl
mov
add
pop
ret
test
add
in
adc
imul
scas
aas
push
aam
gs
jae
daa
push
imul
iret
pop
into
mov
inc
mov
pop
scas
cli
and
push
aas
test
jl
or
cmp
adc
test
daa
out
fcos
dec
sbb
jge
arpl
xor
push
or
div
hlt
sbb
mov
pop
xchg
ljmp
cmp
inc
lea
and
inc
add
xchg
outsl
nop
loope
push
ss
pop
aad
shrb
in
lods
add
mov
mov
push
je
loope
adc
adc
mov
fnstsw
push
xchg
int3
and
sbb
stc
mov
insl
mov
fbld
cmpb
shrb
inc
cmp
ret
lock
and
mov
xor
xor
lcall
mov
sub
stc
cmp
pop
shll
dec
cltd
push
jge
cs
dec
in
mov
mov
or
xchg
jae
add
mov
orl
jmp
insb
lods
push
repz
je
xor
or
dec
add
invd
add
nopl
jae
outsl
rorl
das
ret
shl
jo
clc
inc
fwait
js
fs
lahf
int3
mov
mov
outsl
adc
xor
xchg
mov
jbe
adc
xchg
sbb
push
stc
cmpsb
das
lcall
mov
loopne
fwait
sub
sub
jecxz
lods
mov
mov
incb
shl
xlat
and
sarl
jmp
ret
int3
insb
mov
lods
xor
adc
push
push
and
shlb
aam
loope
insl
mov
dec
pop
sbb
pop
into
outsl
push
lds
cmp
leave
repnz
mov
into
jecxz
mov
push
ret
jae
gs
shrb
outsb
add
dec
jae
or
stos
outsb
mov
mov
hlt
fmulp
fisubs
addb
repnz
mov
add
dec
mov
inc
fists
mov
mov
mov
mov
pop
jecxz
jbe
mov
mov
ljmp
cmpsb
adc
in
push
mov
push
mov
xor
and
add
orb
push
pop
cmp
and
jbe
fwait
leave
dec
cs
ja
dec
cmp
dec
ud1
shrb
mov
call
call
xchg
rcl
inc
pop
add
mul
daa
outsl
or
test
sbb
icebp
dec
xchg
jl
loopne
mov
aad
push
sub
mov
jmp
loop
cltd
inc
aam
std
add
cmp
dec
xchg
das
mov
insb
pop
pop
mov
ret
je
lret
adc
xlat
mov
rolb
outsb
idivl
dec
stos
aas
ss
push
cwtl
sub
and
and
in
mov
loopne
add
xchg
rorl
push
jmp
hlt
cs
cmp
daa
pusha
dec
mov
dec
and
cmpsb
movsl
pushl
mov
movsb
popf
xchg
dec
in
lods
aad
mov
inc
in
rcll
add
cltd
int3
into
in
clc
rcr
stos
call
clc
cli
ret
xchg
sub
es
push
mov
cwtl
outsl
rcrl
xchg
push
int
lea
loopne
mov
sbb
scas
rcrb
adc
sbb
dec
outsb
andl
inc
xchg
ret
repnz
fstpt
out
pop
inc
shll
dec
imull
lea
pop
imul
imul
loope
pop
jle
xchg
dec
or
mov
adc
lret
and
pop
pop
jl
mov
test
test
or
stos
addb
jb
sahf
and
sub
and
jne
mov
ja
sahf
iret
jno
cmpsb
dec
pushf
jns
or
fisttpl
jl
arpl
mov
repz
stos
add
js
clc
and
push
or
xor
jecxz
xlat
js
call
mov
pop
dec
and
cmp
nop
push
andb
inc
xchg
add
mov
and
pop
xor
fwait
cmp
stos
popa
test
inc
fisttps
or
imul
mov
push
pop
shll
in
nop
repz
outsb
push
mov
push
sub
bound
stos
sub
out
jp
xchg
xchg
dec
dec
xchg
imul
mov
jne
push
adc
push
or
sbb
push
fsts
mov
push
sbb
add
dec
lea
pop
cs
mov
sti
sti
movsl
fdivl
movsl
popa
repz
in
sbbb
push
inc
pop
shr
insl
xor
mov
push
js
mov
pop
sti
fiaddl
dec
sub
cmpsb
jno
dec
fstl
mov
jg
inc
jle
imul
cmp
leave
xchg
adcl
pusha
ss
xor
mov
fs
cmp
and
or
xor
and
xchg
push
cmpsl
or
pop
xchg
mov
divps
lods
stos
scas
lcall
ffreep
sbb
add
fs
test
inc
adc
mov
subl
cmc
jle
pop
push
cmpsb
jmp
dec
int3
scas
stc
push
fsubs
jecxz
jae
icebp
movsb
pop
gs
test
jge
and
mov
push
push
outsl
dec
adc
pop
shll
movsb
fistpl
ret
jg
xchg
inc
iret
push
sub
mov
jge
xor
mov
jg
mov
jb
adc
inc
add
out
mov
out
ret
xlat
mov
xchg
je
push
mov
sbb
andb
and
and
pop
cmp
stos
mov
scas
stos
fnstenv
push
add
or
cmc
faddl
xor
lahf
or
cmpsb
adc
ja
jmp
fldl
inc
mov
mov
sbb
sub
aad
mov
in
jecxz
in
cld
add
pop
adcl
fwait
mov
mov
in
popf
jne
pop
mov
dec
ret
lret
ret
lcall
cwtl
pop
xor
dec
add
sbb
loopne
cmc
popf
sarl
movsl
xor
mov
out
dec
xor
neg
pop
mov
js
dec
in
dec
imul
ret
cmp
fildl
loopne
adc
das
fwait
push
adc
sub
cld
andl
into
xchg
or
aas
data16
mov
inc
or
dec
pusha
mov
adc
mov
adc
push
shll
je
jecxz
fistpl
push
push
or
jge
nop
popa
mov
xor
cs
mov
xchg
lea
inc
xor
idivb
mov
jo
in
sub
adc
mov
fnstenv
cmp
incl
mov
repz
lods
enter
cltd
xorl
idiv
movl
mov
movl
cmp
movl
jmp
fidivl
push
or
fmuls
std
pop
js
test
invd
add
ret
push
in
jo
insb
dec
xchg
pop
jmp
std
adc
xchg
xor
lahf
ss
lea
push
ffreep
test
aas
and
pop
or
xorb
test
cmp
sbb
scas
lret
jnp
popf
pop
fldenv
subl
push
mov
dec
outsb
mov
mov
imul
outsl
push
movsb
arpl
and
mov
xor
addb
sbb
and
scas
mov
out
clc
lds
test
popa
out
test
add
sub
or
sub
aad
sti
cmpsb
test
xor
hlt
jns
aad
icebp
adc
loope
push
sbbl
dec
sbb
fisttps
test
mov
or
shl
cmpsb
mov
das
lods
cmp
mov
mov
xchg
cmpsl
or
mov
sbb
sub
fs
or
notl
mov
lea
pop
adc
jmp
dec
push
or
aam
bound
aas
or
jb
push
into
jecxz
vmovaps
test
pop
push
out
push
sbb
and
rcrl
pop
mov
pop
lahf
fisubs
dec
xchg
xor
or
adc
cmp
sahf
jmp
cmp
ficoml
clc
sahf
fcom
xor
jge
jne
push
mov
add
test
xlat
clc
push
push
and
sub
and
leave
jo
test
mov
ss
shll
mov
shll
pop
sub
loopne
cld
mov
ljmp
xor
outsl
sbb
adc
xchg
xchg
in
stc
adc
add
mov
testl
mov
std
jge
js
cwtl
sbb
or
sbb
into
dec
xlat
or
aas
jno
cwtl
xor
cmpsl
movsb
push
adc
notb
loopne
push
cld
insb
pusha
adc
clc
adc
lret
std
adc
mov
lcall
xchg
xor
popf
inc
sub
aam
jge
jl
push
lods
dec
pop
lcall
xlat
icebp
jp
jge
outsl
ljmp
arpl
dec
cmp
inc
mov
adc
sti
push
aas
fstl
or
jmp
push
jbe
push
mov
test
sbb
test
aaa
test
into
add
les
sub
add
aad
inc
inc
shll
lahf
cmpsb
pop
sub
and
iret
aaa
repz
sahf
jle
mov
cmp
aad
lret
jno
jae
les
mov
aaa
imul
leave
xchg
fstpt
aaa
inc
lret
lahf
stos
push
hlt
das
lods
mov
push
pop
push
out
or
popf
xor
cwtl
push
fwait
push
dec
popa
enter
dec
cltd
xchg
jle
fstps
lahf
add
sub
mov
sbb
hlt
jae
loopne
or
iret
pop
stos
cmp
mov
mov
jp
das
fs
xlat
outsb
js
xchg
dec
lcall
inc
mov
pop
inc
out
bound
mov
insl
pop
inc
daa
cmp
test
mov
jns
xor
int
repz
shlb
sub
cmp
rorb
push
popa
add
add
sub
adc
inc
push
aad
jne
mov
int3
test
xchg
sbbl
xor
shrl
leave
sub
insb
add
call
je
push
sub
cmp
sub
xor
adc
mov
das
lcall
pop
arpl
xor
sbb
ja
sub
sahf
mov
pop
adc
in
cmp
dec
cld
xor
fdivrs
outsl
cltd
fldenv
sbb
ljmp
push
imul
or
cmp
ret
mov
push
cmpsb
xor
push
imul
repnz
mov
in
out
sbb
xchg
out
rorb
stos
nop
pop
inc
mov
mov
icebp
int3
out
dec
sahf
lcall
insl
sub
out
int3
insl
notb
mov
nop
cmp
mov
fwait
jo
push
int3
test
mov
mov
data16
jg
stc
arpl
ficoml
enter
repnz
rolb
fwait
inc
mov
mov
mov
dec
jns
scas
nop
stos
stos
and
lods
xor
add
inc
stos
fldl
in
clc
es
jno
aam
out
jg
mov
in
test
pop
xor
add
outsl
nop
fidivrs
cmpsl
pop
lcall
adc
push
adc
sbb
aas
adc
sbb
add
dec
pop
stos
inc
fisttpll
arpl
push
sbb
mov
pop
push
mov
data16
cmp
imul
lock
sub
push
push
push
addr16
mov
mov
lcall
push
out
andb
int
pop
sbb
test
cmp
mov
fnstsw
lret
jle
pop
imul
ss
xchg
in
cmp
cli
jbe
in
cmpl
sti
vmwrite
sahf
loopne
bound
scas
and
loop
push
andb
subb
xlat
lret
stos
cltd
xor
jge
xchg
jns
xchg
leave
and
repz
lahf
cmp
mov
cmp
mov
mov
and
lods
sub
push
inc
mov
and
add
ret
sub
xchg
lods
mov
popf
loop
cmc
push
lret
cmp
xchg
xchg
fsts
push
fwait
xor
movsb
mov
bnd
out
pop
inc
aas
lea
push
xor
xchg
cmpsb
and
xchg
cs
sbb
push
cmp
in
mov
adc
fldl
push
inc
incb
pusha
push
lock
sti
imul
out
add
xor
stos
call
mov
test
inc
jae
xor
movl
cmpl
jb
mov
sbb
jmp
push
call
movl
mov
mov
push
push
adcl
push
push
andl
call
xor
xorl
xor
orl
or
or
movl
mov
mov
mov
cmp
jne
mov
mov
jmp
mov
dec
and
xchg
sub
push
mov
iret
imul
xchg
je
js
mov
iret
adc
pusha
dec
or
cwtl
pop
out
rcl
divb
xchg
mov
mov
inc
lahf
inc
push
mov
inc
xor
icebp
xlat
in
dec
push
mov
mov
test
lods
adc
aas
mov
sbb
pushf
sbb
cmp
fmul
insl
mov
test
ss
push
inc
push
ret
cmp
jle
frstor
sbb
pop
imul
ror
mov
jb
js
mov
shl
inc
dec
cmp
es
inc
or
aas
push
ret
sbb
mov
and
negb
lods
rorb
in
pop
ljmp
and
push
jnp
xchg
sbb
mov
dec
xchg
lea
pop
cmp
dec
bound
ljmp
and
orl
int3
mov
xchg
xchg
or
cmpsl
ret
mov
sbbb
out
loop
dec
call
mov
inc
loope
sarb
enter
add
ja
sub
xor
aad
xchg
push
and
cli
mov
push
dec
inc
je
mov
daa
mov
adc
jle
mov
jns
cltd
je
bound
int
lahf
stos
inc
lods
and
call
mov
xor
dec
rcrl
loope
xchg
push
mov
mov
push
jo
adc
les
aas
lret
aaa
jne
xlat
cmp
int3
faddl
cmpsl
cmp
add
jecxz
testl
dec
ja
mov
fstl
pop
fstpl
bound
in
mov
xchg
orl
sbb
rcr
shll
insl
ret
jno
sahf
inc
leave
sub
rcll
ror
and
pop
xor
adc
ds
mov
push
mov
pop
add
cltd
mov
or
pushf
sub
imul
cmp
sbb
clc
loope
clc
xor
pop
push
sbb
iret
in
mov
jns
aas
fsubs
dec
das
scas
cmp
add
mov
sub
xchg
add
xchg
push
lcall
pusha
pop
popf
cmp
adc
jmp
mov
sub
stc
push
pop
mov
std
mov
jbe
push
ss
sub
sub
sub
jno
inc
xchg
fcoml
sbb
je
push
sbb
mov
push
pop
add
scas
ljmp
push
xor
xchg
cwtl
jmp
jne
or
inc
sbb
push
cmc
aam
imul
mov
xchg
cmp
arpl
insl
push
aad
rcr
pop
iret
rolb
clc
pushf
or
sbb
pop
nop
sahf
cltd
jle
cmc
call
or
xor
push
or
jle
scas
shll
sub
out
cltd
mov
dec
iret
lds
cli
lret
add
sbb
pop
negl
pop
adc
call
fimull
into
pop
push
imul
push
fnsave
mov
outsl
les
mov
arpl
test
mov
xor
dec
inc
fiadds
mov
push
and
xor
ds
adc
into
adc
movsb
cmpsb
push
sbb
inc
add
data16
movl
push
adc
jbe
sub
pop
xchg
imul
mov
mov
mov
ret
aam
push
mov
add
pmulhuw
push
jecxz
fwait
loope
int
out
mov
in
adc
and
imul
incb
dec
rclb
pusha
shlb
mov
push
out
and
inc
fcmovnu
xor
dec
lcall
lea
jle
leave
push
push
mov
pop
les
mov
cld
xor
push
jns
popf
hlt
cli
shr
stc
add
subb
jmp
xchg
cmp
cld
lcall
mov
imul
add
adc
xor
jae
stos
adc
adc
pop
add
fwait
ss
int3
push
ljmp
adc
scas
adc
cmp
mov
out
mov
nop
mov
out
cld
jge
mov
sub
xchg
xchg
add
shr
add
ljmp
jno
outsl
pop
pop
inc
decl
lret
mov
dec
outsl
sti
ljmp
loop
push
ljmp
jo
push
jne
sub
ja
stos
test
lock
sub
jae
nop
xor
popf
dec
xor
and
sarl
popa
jecxz
nop
js
roll
sbb
es
cli
pop
aad
aaa
push
and
das
xorb
pop
int3
push
add
and
and
cli
sti
xchg
dec
xchg
popl
dec
mov
mov
repz
mov
adc
movsl
sub
or
or
rcrb
into
inc
and
adc
ret
mov
scas
xchg
cmp
jns
sbb
iret
push
jge
cmpsl
scas
sub
jno
cmpsb
jns
dec
push
adc
lea
movsb
xchg
rol
adc
fimuls
push
mov
xchg
inc
sub
je
sbb
pushf
or
jecxz
popf
mov
jb
aam
outsb
pusha
dec
je
mov
gs
orb
pop
call
cmp
add
rorb
in
rcr
mov
daa
push
mov
fwait
jge
push
xor
imul
lods
xchg
xchg
cmpsb
dec
mov
mov
add
dec
pop
xor
cmc
je,pt
jae
jns
xor
fs
lods
rolb
push
nop
mov
cmpsb
and
jae
xchg
in
jns
adc
sub
stos
sarb
sbb
in
lods
enter
push
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
shl
push
pop
mov
mov
mov
mov
mov
sub
movzwl
mov
movzwl
cltd
jmp
jb
ffreep
push
aad
push
dec
mov
in
ss
push
invd
add
movzbl
adc
stos
rolb
sub
push
add
cltd
mov
lret
mov
xchg
ret
stc
ret
aad
pop
adc
xchg
ffree
mov
lret
and
add
jbe
int3
std
mov
es
fldl
test
aaa
stos
cltd
inc
mov
inc
fs
je
jo
xor
mov
icebp
push
pop
mov
icebp
xchg
aam
sti
sbb
std
fcmovbe
jnp
das
sub
psubsb
sti
xchg
mov
les
sub
ret
xchg
addr16
rcr
ret
sbb
gs
add
cmp
rorb
mov
adc
arpl
sub
test
loop
sti
xor
adc
mov
push
cld
sub
icebp
cmpl
xchg
aad
mov
out
clc
xor
mov
push
dec
scas
add
addl
in
and
addr16
cwtl
jnp
aad
jnp
mov
sbb
jp
hlt
test
dec
cltd
sbb
jmp
mov
pop
jo
adc
les
sub
call
mov
nop
lea
repnz
ret
lock
dec
push
fs
inc
sbb
push
xor
test
enter
and
and
mov
jmp
mov
add
stc
mov
or
add
add
lods
cmp
xor
adc
jl
imul
test
lret
gs
loopne
add
leave
xchg
mov
mov
sub
mov
adcb
addr16
xlat
or
test
xchg
fisttpll
stos
cwtl
or
cmp
push
add
mov
mov
imul
mov
dec
stos
test
jo
mov
mov
stos
rorw
out
adc
mov
xchg
xchg
sbb
ds
cs
cmp
sbb
or
sub
pusha
aas
add
sub
cmp
mov
push
addr16
call
xor
test
subl
es
test
xchg
shl
jae
lcall
cmc
imul
mov
addl
sbb
xchg
xchg
pop
lods
sub
movsl
test
test
mov
mov
sbb
jl
ret
movsb
dec
xchg
adc
fucomip
sarb
lret
popa
mov
divb
pop
cmpsb
into
mov
fbld
dec
mov
in
mov
sar
loopne
fwait
xchg
push
sti
mov
stos
in
xor
adc
xorb
cmpsl
iret
mov
and
sbb
push
rep
test
xchg
mulb
bound
inc
push
xor
cmpsl
jge
incb
push
fistpll
daa
bound
push
jl
cmp
mov
nop
mov
sbb
push
jne
xchg
or
cmc
mov
fldcw
mov
dec
mov
clc
pop
cmc
repnz
mov
clc
jno
add
rclb
jo
mov
dec
sub
sub
push
aas
xchg
test
inc
mov
imul
popf
inc
mov
imul
jl
shrl
ror
jns
add
xchg
xorb
push
jl
sub
lcallw
sub
mov
sbb
popf
std
push
add
and
les
loope
cmp
xorb
adc
mov
jge
lret
push
cld
inc
cmpsl
enter
test
add
jl
push
mov
inc
mov
mov
adc
sar
fsts
sarl
mov
mov
sub
shll
sub
adc
notl
mov
fwait
iret
xchg
cld
xor
xchg
and
fs
mov
lret
mov
push
inc
out
int3
int
jge
ja
xchg
mov
dec
mov
xchg
lods
sub
jmp
xchg
loop
or
ljmp
cmp
push
scas
fildl
mov
rorb
adc
push
ljmp
enter
inc
push
rcrb
xchg
and
sub
int3
arpl
popa
mov
jl
adc
mov
mov
push
into
xchg
scas
dec
int
cmp
inc
pop
ret
enter
or
dec
push
jb
add
ja
cmp
sub
push
xchg
cmp
inc
cli
pop
xor
movsb
mov
ret
inc
std
pop
lret
add
in
cli
repz
gs
popa
addr16
sbb
cs
mov
iret
adcb
sub
mov
xchg
pop
cmp
fldl
stos
dec
lods
loop
xlat
in
sub
fidivrs
into
bound
testl
pop
and
loope
jno
push
test
dec
or
xadd
rorb
repnz
or
cs
mov
js
pop
fwait
das
xchg
jl
pop
and
mov
push
imul
lds
sti
es
rcr
xlat
pop
mov
icebp
ret
mov
dec
call
fnstenv
insb
ret
movsb
out
xchg
cs
pcmpgtb
sub
or
push
xchg
sub
or
ljmp
bound
cmp
movsb
fildll
repz
pop
testl
xchg
sub
mov
clc
mov
add
mov
rol
arpl
cmpsl
add
inc
push
shll
fs
mov
stc
xchg
les
xchg
dec
es
cmp
add
hlt
outsl
cmp
jp
cwtl
int3
jbe
cltd
dec
outsl
mov
pop
pusha
jb
dec
out
pop
loop
sbb
shlb
aam
mov
and
int
pusha
xor
movsl
push
fcomip
pop
aas
hlt
pop
fistpl
push
hlt
scas
test
and
mov
mov
idiv
jmp
pusha
lahf
aas
sti
aas
pop
or
ss
adc
dec
invd
add
divb
push
push
jo
pop
cld
in
adc
push
popa
test
ljmp
pushf
jmp
jmp
and
ret
loopne
jns
outsb
mov
lahf
imul
fst
lret
pop
push
sbb
outsl
aaa
cmp
cmp
or
fidivrs
cmc
xchg
movsb
mov
leave
outsb
or
pop
adc
add
inc
sub
test
test
mov
cmp
add
js
pop
lret
clc
sub
add
cmpsl
mov
andb
stos
sti
inc
fcomps
pop
dec
xor
cli
mov
sahf
int
adcl
mov
in
into
jbe
fcoms
cmpl
clc
cmc
bound
push
imul
xchg
outsb
xorl
insb
cmp
loop
sub
mov
cmp
xchg
sub
mov
pop
jae
lock
push
xlat
arpl
test
mov
mov
cmp
xlat
mov
loop
or
push
xchg
add
adc
fisttpll
dec
cmp
xor
incl
test
push
in
sub
sbb
jno
and
icebp
xchg
and
lods
hlt
mov
icebp
sahf
jp
add
mov
xor
ljmp
inc
pusha
aam
les
hlt
or
cmp
leave
ret
in
jp
out
lret
xor
ja
lret
xchg
shlb
mov
adc
mov
lods
popa
cmp
pusha
pop
lods
stc
leave
jle
xor
scas
mov
xchg
and
cmp
gs
inc
push
mov
pop
inc
or
xor
aas
cld
xchg
faddl
cs
aad
pop
cmp
dec
decb
dec
out
or
rorb
sub
mov
push
cltd
sti
mov
pop
adc
sbb
xor
in
loope
scas
sti
xor
aam
cmp
mov
das
idivl
xchg
dec
jp
push
mov
movsl
mov
cmp
paddusb
dec
xor
testl
xchg
mov
sahf
clc
xor
add
idivb
xor
xor
insb
clc
mov
ss
call
lcall
jo
scas
les
xor
mov
xchg
and
outsb
cld
ds
push
pop
mulb
es
fsubl
adc
lret
neg
rorb
pop
rol
std
or
xchg
push
sbb
inc
jmp
test
fmull
out
xchg
push
test
xor
mov
ret
xor
aaa
pop
mov
popl
inc
sbbl
int3
popf
stos
xchg
loope
xchg
pop
jae
loopne
add
stc
mov
pop
xchg
stos
adc
loop
jg
sti
incb
pop
dec
loope
lret
jmp
dec
aam
fisubrl
les
nop
es
or
dec
pop
and
adc
mov
or
cld
rorb
sbb
nop
out
mov
jno
cmpsl
cwtl
daa
dec
sbb
xchg
imul
mov
push
push
mov
lock
popl
push
jl
test
aad
add
sar
inc
pop
inc
inc
or
mov
enter
outsl
mov
repnz
out
test
fstpt
fsubrp
jns
pop
fidivrl
jnp
into
test
sbbb
mov
cmp
inc
popa
out
mov
pop
ss
inc
popl
aaa
pop
std
push
xor
aas
push
cmpb
ljmp
loop
mov
xor
sarb
adc
out
cltd
mov
push
xor
aaa
cltd
mov
sbb
inc
sbb
scas
mov
aas
mov
mov
or
or
push
mov
movsl
int3
out
xor
or
mov
sub
orb
mov
rcr
or
in
xchg
mov
inc
xchg
stc
loop
push
lcall
lret
fsts
sub
and
mov
pop
pop
rcll
pop
or
mov
fst
mov
xchg
repz
jbe
arpl
loop
test
test
lahf
xchg
jb
mov
or
add
inc
xlat
stc
sahf
xchg
push
imul
xchg
cltd
pop
rorb
push
cmp
dec
mov
sbb
call
in
bound
jecxz
inc
pop
mov
push
lds
inc
dec
pop
addl
cmp
inc
mov
xchg
mov
imul
or
sub
or
lods
das
in
fldt
mov
xchg
sub
sbb
lock
or
sti
mov
pushf
insl
pop
push
cmpsb
popf
push
or
mov
loop
mov
lock
and
xor
cmp
sub
sbb
jl
push
lahf
jle
fwait
or
daa
adc
cmp
out
mov
xor
jle
arpl
popf
jno
mov
sahf
pop
jb
dec
loop
xchg
js
inc
adc
js
sbb
test
cmc
das
pop
mov
xor
bswap
mov
lcall
outsl
das
int
sbb
arpl
fisttpll
jge
and
dec
fstpl
jbe
je
mov
nop
jns
or
sti
scas
or
sub
addr16
pop
sub
les
add
test
cmp
mov
ss
dec
cld
mov
sbb
or
push
mov
push
adc
xchg
mov
mov
ror
or
out
addr16
shl
cmp
cld
xchg
xchg
bound
adc
mov
push
xor
pop
jmp
or
ja
push
jle
ja
and
rol
hlt
test
mov
in
push
fiaddl
jo
es
incb
js
push
xor
fwait
jg
add
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
imul
mov
sub
mov
add
mov
cmp
jbe
mov
mov
shrd
xor
mov
shr
jmp
xor
xor
or
fcoms
invd
add
addps
jecxz
mov
std
xchg
leave
jne
lahf
push
mov
jle
jb
adc
or
sar
sub
sarb
pop
daa
pop
cs
cmpsl
std
cltd
movsl
mov
cmc
jmp
testb
mov
lret
dec
popa
inc
mov
xchg
into
jno
fsub
mov
insl
mov
fmull
outsl
mov
inc
mov
cmp
push
icebp
inc
nop
adc
xchg
mov
push
popf
pop
push
cmp
addr16
add
lret
test
mov
jmp
lcall
sti
jae
mov
pop
add
pop
xchg
repnz
xlat
adc
je
mov
pop
fisubl
or
mov
and
sub
cwtl
mov
data16
mov
std
fstl
outsl
in
stos
jmp
pop
xor
sub
out
pushf
push
scas
adc
mov
loop
and
gs
sti
loopne
icebp
and
cmp
in
dec
sub
mov
mov
js
into
cli
push
push
popf
decb
adc
cmpsl
test
arpl
mov
or
jne
pop
push
adc
lods
stos
mov
nop
popf
fstp
sahf
jl
or
push
std
addl
adc
ja
push
mov
fisttpl
fs
lods
std
loopne
push
adc
mov
cmp
xor
mov
jb
xor
and
add
loopne
jl
inc
add
cmpsb
sbb
xchg
cmp
movb
push
push
popf
es
rclb
sbb
inc
mov
lret
mov
sbb
or
push
push
jo
ljmp
cmpsl
push
lret
or
inc
sub
add
pop
mov
adc
sub
sbb
add
jno
stos
jle
lret
js
push
sub
or
lret
xchg
push
push
fistpll
push
int3
cmpsb
ror
jne
ds
negb
std
sub
jns
pop
test
adc
or
sbb
outsl
lods
lock
rcll
lret
push
jp
or
dec
xchg
ret
data16
jmp
mov
mov
call
ffree
cwtl
push
bound
ret
mov
dec
or
call
stos
cmc
or
xlat
jp
popf
jecxz
and
xchg
mov
push
in
cmp
xorb
dec
cmp
dec
sti
jmp
repnz
and
inc
adc
and
and
xor
int3
fnstsw
or
dec
test
test
mov
outsl
sbb
xor
lds
adcb
mov
push
add
call
lahf
pop
icebp
sbb
aad
xor
adcb
iret
ds
jnp
outsb
mov
sub
test
cmpsl
dec
ljmp
out
xchg
call
sub
cmp
mov
cmp
pop
inc
in
adc
and
adc
or
vmread
frstor
jbe
push
inc
rolb
xor
cmp
mov
sbb
cwtl
fld
dec
xor
dec
mov
test
lods
imul
out
lea
sub
les
andl
fs
scas
push
cli
xchg
mov
pop
mov
inc
adc
mov
dec
in
lods
es
xchg
xor
lock
call
jo
negb
sub
repnz
in
bound
ja
leave
dec
arpl
sbb
subb
xchg
pop
push
cltd
cmpsb
dec
mov
cmpsl
pop
xchg
add
or
movsb
mov
add
jnp
popa
dec
pop
lahf
add
cwtl
cmp
testl
mov
dec
aaa
jbe
imul
mov
jno
sbb
aas
addr16
imul
outsb
mov
inc
outsb
jecxz
stc
pop
pop
inc
imul
movsl
les
push
sub
jns
decb
jnp
movsb
add
mov
mov
pop
mov
das
pop
jo
or
stos
stos
pop
adc
jne
xchg
cmpsb
aaa
inc
jb
pop
push
movsb
sub
adc
js
gs
pop
and
sbb
in
aam
gs
ror
fldl
mov
sbbl
cwtl
nop
xlat
je
dec
or
push
std
fimuls
pop
cmp
sbb
push
xchg
lcall
mov
clc
movsb
mov
incb
push
lahf
lret
fwait
mov
cmp
jo
mov
cld
cs
jp
in
mov
sub
es
out
frstor
dec
ja
xchg
push
jne
call
repnz
pop
jp
int
shlb
lcall
stos
daa
cmpsb
cmp
stc
and
pop
mov
mov
jge
pop
cmpsl
iret
jmp
test
jle
je
aas
lods
jbe
and
or
sub
aas
push
fbstp
in
test
hlt
mov
xor
and
push
dec
mov
icebp
add
call
pop
sbbl
out
xchg
cld
dec
fidivrs
fcmovbe
push
dec
sbb
cmp
cld
test
xor
adc
bound
add
bnd
je
sub
inc
xor
push
out
pop
inc
mov
push
mov
push
xchg
and
pushf
add
mov
shlb
mov
lds
in
lahf
push
jle
stc
jmp
sarl
xchg
out
aaa
mov
fisttpll
mov
std
add
dec
js
sub
xchg
cltd
mov
xor
shl
jmp
push
mov
cli
sbb
fnstenv
dec
in
rclb
rorb
push
mov
mov
push
outsl
rcll
popa
ret
imul
fwait
ss
aaa
pop
pop
push
jae
mov
cmc
add
fsubrp
jmp
add
std
mov
shld
ja
jnp
test
jp
mov
pop
cmc
js
push
jne,pt
xchg
lods
sub
xchg
dec
pop
push
dec
dec
jle
xlat
jno
mov
iret
pop
sub
inc
pop
adc
lahf
push
scas
push
mov
mov
sbb
xchg
jne
mov
call
mov
sbb
sti
imul
adc
popf
movb
loop
test
or
loopne
scas
inc
outsl
mov
mov
scas
dec
mov
jb
lea
gs
mov
es
addl
push
jnp
mov
leave
scas
jbe
jmp
sub
ljmp
and
shlb
idiv
repz
jle
int3
rorb
insl
nop
add
adc
jns
fs
fldcw
jno
out
jecxz
jae
sbb
push
adc
mov
mov
rclb
dec
mov
orb
in
cld
push
cs
xor
rorb
jle
push
mov
cltd
aad
stos
xlat
iret
js
jo
pop
xchg
pop
cmp
push
into
jbe
add
adc
mov
cld
adc
mov
in
lahf
mov
loop
inc
mov
outsl
push
sbbl
jne
sahf
push
rorl
cmp
insb
mov
dec
ds
imul
pop
xor
mov
add
xor
and
divl
imull
iret
add
js
push
pop
enter
jmp
ret
scas
fldcw
xchg
loopne
sub
int3
mov
jge
call
leave
out
loopne
inc
shrb
es
in
mov
adc
out
lcall
jno
xor
movsb
push
frstor
movsl
mov
sti
cmp
neg
mov
js
scas
js
dec
and
pop
push
mov
pop
ljmp
cmpl
dec
jl
popa
leave
and
test
and
es
stos
imul
pop
push
xlat
inc
hlt
xor
push
adc
or
or
push
mov
pusha
out
add
shrb
xor
or
adc
xchg
enter
sbb
pop
mov
xor
enter
mov
push
adcb
push
int
in
ss
in
stos
dec
fwait
pop
lds
divb
jecxz
inc
xchg
lahf
add
insb
dec
mov
test
mov
push
mov
cmp
jle
stos
inc
stos
xor
and
loope
jnp
out
mov
jnp
dec
mov
test
jno
cmpxchg8b
out
loop
aaa
xchg
jnp
inc
popf
outsl
ja
scas
aas
mov
dec
inc
jge
out
jbe
pusha
jg
shr
popf
mov
or
adc
mov
mov
add
xlat
push
pop
ret
lods
idivb
jmp
cmp
mov
and
test
aam
int
push
adc
jle
pushl
cmpsb
mov
ss
inc
sub
xchg
andl
out
pop
shlb
fs
add
xor
mov
sbb
loopne
inc
hlt
ds
lock
mov
movsb
or
rorb
ror
mov
cs
jmp
or
fdivs
inc
lock
fistl
fidivrs
js
repz
jecxz
mov
jns
inc
mov
push
call
mov
sbb
fwait
sahf
loopne
outsb
call
mov
outsb
insl
jbe
or
push
aad
cmpsl
dec
sbb
out
pop
mov
xchg
ret
xor
pop
movsb
std
pop
icebp
call
mov
mov
cmp
pop
sbb
sub
pop
les
cs
stc
push
push
mov
mov
sub
lret
xor
xor
mov
or
xchg
lret
push
or
jg
call
pop
cmp
xor
mov
in
int3
inc
mov
mov
mov
in
dec
push
stos
iret
and
outsl
sbb
mov
sub
iret
lds
in
mov
fbld
sub
out
xor
out
xchg
out
pop
jns
mov
cld
pop
popa
and
leave
mov
push
mov
js
loopne
popa
sarl
outsl
and
aas
adc
loope
out
cmc
and
mov
mov
repz
mov
mov
jbe
push
dec
mov
mov
outsl
test
sbb
js
mov
jns
mov
sarb
jnp
test
inc
adc
into
sbb
loopne
aad
movsl
jo
daa
stc
pop
imul
sub
test
mov
inc
xor
cmp
lock
popf
push
jecxz
adc
xor
add
into
cltd
rcll
sbb
pop
sub
andb
adc
cmp
jnp
int3
mov
rcrl
mov
lds
xchg
xchg
mov
mov
pop
jno
push
add
inc
cwtl
repnz
dec
xchg
fnsave
sub
test
lods
imulb
inc
imul
pop
aad
pop
enter
movsb
imul
iret
or
mov
xor
mov
mov
out
clc
mov
fisttpl
xor
xchg
xchg
das
fs
sbb
outsb
fcoml
push
pop
lods
cmp
lret
adc
mov
out
cli
out
fisttpl
jecxz
mov
rclb
cmp
dec
sbb
das
mov
les
push
push
out
call
stos
in
or
mov
pop
leave
ret
mov
mov
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
inc
mov
or
mov
mov
ret
xor
mov
xlat
sbb
mov
mov
lret
fcos
int3
scas
and
rcl
sbb
rolb
hlt
push
orl
rclb
or
jp
dec
ret
test
mov
xor
fidivl
push
sbb
jg
out
and
add
imul
insb
nop
jnp
xchg
in
popf
ss
mov
xchg
cld
cli
or
mov
rcl
stc
in
add
lahf
and
in
testl
inc
stos
xor
jb
inc
addr16
fists
pop
loop
add
pop
or
sbb
scas
push
adc
inc
mov
and
mov
mov
lcall
ja
xchg
mov
pop
and
xchg
push
stc
mov
xchg
push
sub
sub
or
or
lods
jmp
enter
shll
mov
mov
out
rorb
call
shlb
xor
xchg
test
jnp
cwtl
scas
cs
gs
xor
add
mov
pop
dec
insl
mov
xchg
lcall
dec
dec
mov
ret
mov
mov
dec
pop
and
lods
sub
jnp
and
xchg
cltd
jns
mov
std
lock
mov
add
pop
pop
push
jae
mov
push
scas
pushf
leave
test
xchg
inc
jp
cltd
jmp
adcl
test
jns
scas
add
jge
rcrb
mov
outsb
inc
popa
xlat
shll
sub
cmc
jl
dec
jnp
aaa
inc
or
mov
aas
inc
into
inc
push
sbb
xor
repz
mov
xchg
mov
jb
mov
dec
sbb
in
js
jmp
cmpsl
and
inc
sub
cmpsb
xchg
movsl
loope
sahf
xchg
inc
orl
and
icebp
out
lret
push
mov
xchg
ret
dec
pop
hlt
lods
fld
ss
adc
aaa
mov
mov
xor
andl
rcll
sbb
sbb
call
dec
ret
lret
sub
sarl
sarl
mov
data16
or
xor
push
pop
and
in
imul
add
stos
mov
inc
sbb
pop
test
dec
sbb
adc
test
sbb
insl
lods
dec
ret
inc
pop
mov
lea
cmp
sbb
jle
dec
mov
aam
aaa
mov
pop
cld
mov
int3
sbb
fs
mov
fucomp
mov
cli
mov
test
sub
loopne
fildl
pop
sti
jecxz
jae
mov
das
int
sub
fsubrp
lahf
pushf
outsb
pop
mov
addr16
xchg
popf
lret
movsb
jbe
dec
outsl
lret
mov
push
sbb
xor
pop
jp
sub
cmp
jne
out
adc
test
push
fstpt
fcomps
xchg
jmp
mov
out
lods
sub
orl
or
or
pop
push
and
jns
aas
sub
or
sub
add
test
adc
scas
mov
xor
mov
add
mov
mov
lret
outsl
cmc
xor
fmuls
je
mov
push
sbb
mov
dec
out
je
xor
push
enter
clc
call
jne
mov
jg
hlt
repnz
shl
fstpl
push
jg
fwait
stos
sbb
xor
mov
lods
push
aaa
mov
stc
testb
aaa
pop
int
scas
inc
je
cmp
adc
adc
imulb
enter
pop
add
push
fstl
in
fcmovnbe
fmuls
out
xchg
cli
lahf
das
nop
lret
sbb
ret
jns
test
lock
mov
imul
push
subb
inc
scas
jl
fbstp
jns
mov
into
out
or
sti
pop
out
mov
push
inc
and
lds
je
xchg
ret
sub
inc
out
ja
sbb
loopne
xor
push
andb
sbb
dec
adc
inc
mov
add
adc
sbb
inc
and
add
inc
divb
fidivrs
cld
popa
in
mulb
cmp
pop
dec
push
fisubrl
pop
jp
out
pop
and
loopne
mov
sbb
in
testb
insl
mov
icebp
push
or
cmp
adc
addb
sub
nop
add
sbb
cmp
mulb
lods
mov
jno
fists
bnd
in
stos
lock
andl
push
lds
cmpsb
mov
lds
inc
xchg
popf
push
mov
mov
xchg
clc
aad
scas
out
fnstcw
add
das
mov
xchg
pop
std
mov
mov
fcos
jae
lcall
mov
mov
jecxz
sub
sub
mov
push
jb
into
and
add
outsl
and
mov
adc
pushl
sub
leave
sbb
cli
stc
sbb
stc
nop
imull
push
lock
imul
fsubp
jae
arpl
imul
inc
mov
lds
pop
jle
jp
loop
ret
test
mov
push
je
or
sub
sub
out
imul
and
mov
in
daa
popl
repnz
sbb
adc
xchg
add
ss
dec
push
test
push
out
arpl
iret
xor
lret
sbb
pop
xchg
cltd
or
shl
push
lcall
imul
das
mov
and
cmp
adc
mov
pop
and
push
push
aam
mov
pop
jae
aas
push
cmp
ffreep
mov
push
popa
jbe
aam
adc
std
insl
sbb
lcall
mov
adc
or
les
lret
mov
jmp
arpl
push
or
fnstcw
xor
sub
mov
mov
add
loopne
insb
movb
call
fldenv
aam
loopne
inc
cld
arpl
dec
push
jle
xchg
stc
mov
jno
lret
mov
and
cmp
and
push
mov
iret
fisubrl
aas
add
sbb
jae
jnp
fld
inc
jmp
cmpsl
xor
jns
int
movb
test
sbb
sti
mov
push
cmp
inc
mull
mov
xor
xor
stos
inc
mov
adc
dec
inc
xor
cmpsb
shlb
mov
push
popf
stos
fsub
push
mov
push
std
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
ret
mov
adc
cmpsb
js
clc
testl
cmp
lea
mov
jne
cmpsl
test
aam
es
gs
ret
mov
sub
pop
outsl
mov
je
aad
lcall
cmp
pop
lock
adc
pop
dec
mov
xor
jg
das
jae
cmp
sbb
add
and
push
jle
lea
out
adcl
jbe
xchg
movsl
popf
lcall
test
ja
push
mov
or
enter
inc
xchg
xor
xchg
sub
lods
xor
mov
or
rclb
or
pop
jmp
mov
fisttpl
scas
xchg
fiaddl
test
addb
shlb
mov
jns
std
std
or
fnstsw
rorb
in
fiaddl
cmpb
adc
mov
xlat
sahf
or
fildll
mov
gs
stos
repz
fstpl
push
insl
inc
iret
add
mov
xor
mov
sub
jno
sti
test
loop
sahf
sbb
imul
loop
ret
dec
inc
adcl
roll
pop
sbb
lcall
xchg
aaa
jbe
jb
cmp
out
add
stos
push
sbb
outsl
mov
daa
pop
sub
mov
repnz
xchg
popa
aad
pop
notb
mov
cwtl
lea
add
imul
adc
or
pushf
andb
aaa
out
cmpsb
mov
mov
mov
sbb
rcrb
sbb
into
cmpsb
ret
jns
jmp
icebp
cmp
insb
add
stos
repnz
fnsave
aad
cli
pop
aam
lcall
sub
add
shlb
cmp
add
jo
jbe
jecxz
sbb
xchg
repnz
lret
sub
jo
mov
popf
push
aam
pop
jbe
movsl
imulb
mov
mov
mov
xchg
pusha
in
aad
into
repnz
push
lods
cld
cld
add
xchg
pop
lods
dec
xor
push
adc
mov
hlt
cli
dec
aaa
pop
insl
or
lods
mov
dec
fs
jecxz
jns
sub
mov
fbld
add
pop
xchg
jle
out
lahf
or
and
cli
fnsave
test
mov
jns
push
data16
out
jno
and
jnp
jge
in
jno
test
imul
xor
add
inc
in
outsl
ret
adc
sahf
sub
cmp
xor
sahf
into
mov
insl
push
out
in
je
xchg
add
aas
sbb
jno
les
divl
outsb
std
xchg
mov
mov
cmp
loopne
es
push
cmp
xchg
mov
stos
jnp
insl
movsl
std
or
cmc
fcmovnb
fs
mov
rorb
and
sub
pop
fldenv
pop
xchg
mov
jnp
ds
cli
sub
add
xchg
mov
mov
sub
dec
stos
jecxz
fimuls
jge
xchg
mov
and
adc
jnp
jecxz
mov
push
cmp
jns
js
rcll
adc
hlt
aas
cmp
lock
push
jecxz
hlt
lea
xchg
stos
xorb
pop
rcl
idivl
push
pop
sbb
int3
aam
inc
aas
xlat
jne
test
rclb
daa
push
lret
sub
sub
sbb
pushf
test
pop
ja
aas
push
lret
js
lahf
lock
cmpsb
fidivl
movsl
repnz
sbb
add
xor
jmp
xor
fwait
push
xor
jo
push
add
neg
out
pop
enter
pop
sar
loop
pop
pushf
jge
add
xchg
add
ja
shrb
add
push
fimull
push
jecxz
push
jb
jge
arpl
movsbl
sbb
call
or
sti
enter
into
push
movsl
jl
or
stos
mov
jb
rdpmc
fwait
and
ret
fcoms
jl
scas
push
clc
ror
repnz
cli
adc
mov
and
sub
jo
ljmp
mov
jno
mov
js
bound
in
loop
sub
popf
jmp
mov
mov
jge
push
push
lret
fmull
and
jno
jl
mov
push
jb
dec
cs
or
ljmp
dec
les
dec
pop
cmpsl
or
mov
jle
inc
daa
arpl
jbe
dec
jmp
dec
adc
out
iret
mov
outsb
sub
js
ljmp
leave
sti
xchg
pusha
lock
out
sub
jno
xchg
pop
movsl
into
clc
push
stos
fsub
ficompl
xor
pop
mov
push
dec
mov
dec
jmp
xchg
cltd
sar
pop
add
mov
push
add
lret
mov
in
clc
mov
stc
cmp
jb
and
pop
pop
int3
push
shl
push
cli
pusha
mov
mov
sbb
je
jno
sbb
mov
dec
jno
cli
and
test
dec
xchg
cwtl
cmp
xor
mov
aas
fisttps
or
outsb
jge
fstps
loopne
es
imul
scas
mov
jge
pop
xor
aam
outsb
and
mov
add
add
mov
jbe
daa
iret
push
pop
nop
sub
gs
loop
aaa
inc
xchg
mov
cmc
inc
in
out
and
pop
popa
fptan
and
mov
movsb
xchg
xchg
testb
dec
or
loope
mov
push
lea
rorl
inc
cwtl
scas
jp
scas
dec
data16
cmp
xor
rcl
inc
rolb
dec
mov
pop
nop
pop
movsb
or
sbb
inc
mov
mov
jle
and
mov
mov
add
popf
fnsave
ret
mov
cli
push
jns
adc
leave
lock
ljmp
jl
jbe
jnp
nop
cmc
loopne
frstor
dec
fsub
dec
ljmp
data16
xchg
sub
xchg
mov
sub
sbb
inc
lret
xchg
test
shll
xchg
lcall
icebp
sub
pop
aaa
dec
xchg
mov
sub
xchg
push
jmp
pusha
popa
jp
ret
mov
mov
lods
data16
push
sub
movsl
mov
rol
xor
mov
iret
pop
sbb
and
sub
xor
fcomps
fs
sub
imul
pop
lds
or
dec
andl
adc
pop
jmp
fiadds
gs
test
leave
loopne
imul
cld
lds
xchg
ljmp
pop
movsl
ror
shlb
mov
mov
or
mov
dec
hlt
mov
andl
inc
ror
cmp
add
inc
aam
add
add
inc
fsubs
add
int3
mov
mov
add
jmp
pop
sbb
dec
mov
or
fs
stc
mov
pop
mov
psllq
stc
push
imull
rcll
shlb
mov
pop
xor
mov
sub
cwtl
push
arpl
mov
mov
adc
mov
subl
jle
and
sbbl
fs
fdivrs
cmp
jp
sti
adc
loopne
push
aas
aad
lods
dec
jns
outsl
push
aaa
push
inc
sub
mov
sbb
lock
push
xchg
adc
push
aad
inc
stc
sbb
pop
clc
mov
fsubl
dec
jg
leave
stos
inc
jo
bound
movsl
xlat
sub
mov
xchg
enter
ja
adc
cld
daa
and
divl
pop
adc
mov
rorb
lea
lock
add
imul
xor
cld
xor
adc
adc
sbb
push
repz
mov
xor
lret
push
mov
pop
adc
pop
xor
icebp
aam
xor
push
lock
mov
repnz
xor
jae
cmp
loope
xor
aas
gs
fs
les
add
dec
sub
shll
jne
data16
arpl
fwait
mov
sahf
in
ret
jb
adc
push
cmp
or
sub
jbe
or
popf
insb
mov
ficomps
roll
sti
fnstcw
sbbl
into
clc
xor
cmpsb
xor
xor
aas
jbe
mov
jg
pop
insb
push
leave
idivb
outsl
lock
jp
sub
push
mov
xchg
shll
xor
xchg
inc
sbb
push
pop
js
jae
adc
mulb
mov
loop
jecxz
mov
mov
add
outsl
or
pop
enter
push
inc
mov
push
dec
dec
mov
sbb
jns
je
xchg
push
xchg
fs
int
popf
xchg
test
pop
cmp
add
mov
fwait
into
inc
jnp
test
lret
out
cmpsl
sbb
cs
fisubrl
loopne
jnp
fnsave
mov
xchg
sbb
mov
xor
push
jl
lea
dec
insl
shll
pop
inc
pop
add
in
lods
jmp
sbb
icebp
cmpsb
xchg
bswap
shlb
rolb
xchg
enter
mov
push
fisubrs
xchg
lods
pop
add
sbb
dec
addb
shll
cmpsb
mov
leave
or
pop
mov
cld
xchg
es
cmp
and
lods
data16
pop
jo
mov
mov
and
adc
int3
nop
scas
stc
cli
sar
fwait
mov
dec
mov
rcll
sub
xlat
xchg
test
add
in
cmp
ja
fists
inc
mov
and
sbb
popa
push
adc
ja
mov
pop
sub
lods
pop
adcb
sbb
pop
jmp
pop
js
and
test
sbb
in
jo
je
or
sub
in
movsl
addr16
lcall
test
lods
jle
lods
fmul
jne
cmpsb
xchg
cmp
out
mov
dec
inc
aas
jno
in
add
jecxz
dec
dec
mov
sbb
push
inc
pop
cmovae
xchg
jp
daa
lea
int3
xchg
adc
lahf
pop
xchg
inc
mov
js
jge
cmpl
mov
jl
ljmp
jmp
pop
repz
sbb
pop
lock
add
xor
cwtl
push
in
adc
push
iret
test
add
int3
xor
fwait
xor
adc
cmp
mov
dec
inc
adc
inc
mov
dec
inc
mov
popa
ficoml
inc
daa
sub
addr16
test
jge
mov
push
sahf
pop
or
mov
ss
inc
dec
sbb
add
and
adcb
pop
shl
leave
mov
mov
repnz
inc
addl
mov
rcr
gs
sysret
pop
leave
sub
pop
cli
push
jo
cmpsl
movsl
outsb
insl
or
int
clc
sbb
les
out
mov
loopne
popa
pop
mov
mov
xchg
push
outsb
hlt
mull
lret
mov
jb
jo
es
pop
cld
rorl
inc
pop
imul
add
mov
mov
fdivp
mov
pop
dec
adc
dec
popf
shl
pop
movsl
or
je
push
push
sbb
stos
sub
mov
add
sbb
sub
cmpsb
push
out
mov
jmp
lret
rcrb
xlat
xchg
aam
adc
clc
test
mov
pop
mov
es
pop
cmpsl
push
xor
scas
movsb
jmp
mov
push
cmp
call
in
cmp
or
loopne
sub
xchg
pop
xchg
cmpsl
mov
cmp
jb
scas
cmp
adc
and
push
in
mov
pop
shl
sub
iret
cmpsb
test
in
rorl
sbb
xchg
push
out
stc
or
and
sbb
xor
jno
sub
xor
cmpl
inc
cmc
inc
popa
mov
cli
scas
lahf
fcoml
pusha
inc
xor
pop
cli
scas
cmp
sarb
test
ja
dec
sbb
inc
out
xor
pop
mov
out
jl
jecxz
sarl
push
and
imul
mov
pop
dec
jns
or
sahf
ret
std
or
outsb
push
sbb
mov
lahf
xchg
xchg
ret
lods
jg
and
push
push
icebp
or
stos
ljmp
sub
sbb
std
rcl
cmpsb
into
mov
add
cmc
sbb
cld
jp
sbb
or
cld
cld
aas
sahf
in
xor
in
push
imul
dec
cmp
aas
push
sbb
push
stc
xor
in
test
sub
mov
adc
aad
ljmp
push
xchg
lods
test
fwait
add
div
lea
push
clc
or
pushf
fnsave
fbld
jle
sub
add
and
and
cwtl
xchg
cmc
icebp
loop
push
adc
push
jne
mov
adc
jb
fadds
mov
sub
movl
bound
js
clc
lea
pop
in
sahf
push
jo
push
pop
push
mov
data16
inc
or
imul
xor
xchg
adc
loopne
addr16
xchg
xchg
cmc
pop
sub
ds
pop
adc
xlat
dec
arpl
xchg
dec
add
xor
cmc
imul
icebp
aam
or
fwait
test
adcl
ljmp
or
or
xlat
sbb
out
imul
repnz
pusha
inc
imul
xlat
daa
out
add
pop
aam
fidivs
jl
movsb
jge
cmp
imul
lea
mov
or
out
test
flds
jmp
into
add
or
adc
dec
sbb
adc
and
push
or
cmp
repz
dec
adc
shrl
lcall
jmp
in
shll
movsb
mov
mov
dec
mov
cmp
xor
cmpsl
cli
imulb
nop
and
pop
imul
loopne
pop
add
sbb
mov
rcr
or
and
leave
lods
dec
pushf
push
cmp
mov
mov
mov
dec
lock
clc
sbb
je
repnz
pop
pop
outsl
xchg
sti
sbb
push
inc
stc
add
icebp
js
psubusb
mov
ret
xor
loop
data16
jg
mov
pop
sbb
sahf
pop
jp
sti
cltd
ret
dec
jno
or
iret
bound
and
xlat
test
xchg
adc
shll
xor
or
scas
popa
sti
stos
push
inc
xor
es
pop
ss
mov
in
push
sahf
ret
sbbl
pop
add
jp
shlb
or
dec
std
mov
aad
mov
loop
rcl
xchg
sbbl
outsb
sarb
xchg
lds
cli
sbb
insl
mov
pop
xor
jmp
sbb
arpl
jb
rorb
jmp
ljmp
aas
loope
jg
xchg
sbb
mov
daa
pop
pop
push
jo
addr16
or
pop
jo
push
dec
enter
cmpl
lods
in
mov
ja
in
and
sbb
popf
popf
iret
outsb
mov
push
jge
ljmp
mov
cs
pop
add
push
stc
add
lahf
popa
call
shll
aad
jbe
mov
in
xchg
sbb
mov
mov
pop
xchg
cmc
jb
jmp
shrl
ficoml
jbe
aam
rolb
clc
inc
andb
push
es
jg
xchg
jge
sub
fcmovbe
mov
xchg
push
insb
repz
leave
cmp
xchg
sti
lcall
jns
dec
fildll
adc
enter
cld
mov
lods
and
sbb
sub
mov
and
int
rclb
cltd
adc
mov
fsubr
pop
aaa
mov
sub
push
jae
jp
insl
jbe
test
lret
cmp
xchg
sub
enter
shlb
pop
stos
xor
popf
je
dec
xchg
movsb
lods
or
std
mov
push
imul
lock
cmp
inc
add
lds
sbb
sbb
cmp
mov
ljmp
dec
cmp
mov
sar
inc
cli
push
pushf
adc
neg
dec
lock
insb
mov
movmskps
outsl
jp
into
int3
fs
and
daa
ffree
dec
je
push
jb
dec
or
fcmovbe
add
mov
and
or
into
mov
cmp
dec
mov
lahf
frstor
insb
pop
outsl
jbe
ret
rcrl
stos
cmpsb
xchg
inc
outsb
pop
inc
call
and
in
leave
add
cmovs
mov
add
dec
mov
fs
xchg
mov
dec
cmp
sub
in
imul
mov
push
add
inc
adc
jecxz
jno
sub
pushf
and
pop
test
cltd
ret
pop
xchg
lcall
dec
push
and
inc
rorl
insb
xchg
or
push
repz
push
stc
stc
insl
repz
sub
negl
das
or
aad
pushf
and
add
adc
pusha
jmp
in
sti
mov
cli
ljmp
sub
cmp
mov
aaa
imul
ja
lcall
testb
test
out
mov
sbb
imul
enter
in
adc
bound
insb
adc
push
out
ret
xchg
inc
lock
insb
mov
jp
mov
inc
pop
in
or
sbb
aaa
movsb
std
ficompl
mov
xorl
sbb
int3
js
sbb
dec
test
movsl
in
insb
mov
jns
je
pop
outsb
sbb
ss
mov
xchg
mov
pop
aam
xchg
xchg
mov
adcb
dec
mov
mov
jp
sbb
subl
rorb
lret
push
jge
orl
imul
dec
ret
repnz
fcom
inc
mov
cmpsl
rclb
shlb
lret
cmp
mov
inc
push
sub
and
in
inc
sti
insl
loopne
test
adc
dec
test
push
push
jbe
jnp
orl
sti
fs
mov
bound
or
mov
sbb
mov
les
jo
pop
mov
enter
and
lods
mov
and
test
leave
pop
xor
outsl
push
and
xor
std
mov
mul
inc
rcl
mov
or
addr16
rorb
mov
ret
scas
movsl
imul
scas
mov
adc
sub
push
outsb
std
jnp
sub
or
pop
mov
add
dec
add
cld
lea
jne
mov
mov
int3
sti
xor
jnp
repz
fldl
add
sarb
mov
push
test
jae
sub
mov
add
out
icebp
pop
div
jnp
lods
mov
adc
lods
fildl
pop
shlb
xchg
incb
icebp
dec
lock
in
fmuls
adc
mov
sub
ficoml
mov
fsub
push
imul
push
shlb
mov
faddl
xorl
dec
inc
xchg
pop
jo
sarl
in
xchg
add
or
jns
test
push
and
sub
jns
push
sbb
es
mov
push
loop
mov
fstps
or
imul
or
dec
xor
lret
jmp
outsl
cmp
insb
cmpsl
sti
rorb
xchg
loopne
jle
pop
sub
mov
inc
jno
lahf
push
inc
mull
std
inc
jne
sub
int3
jmp
test
lcall
stc
adc
pop
or
ds
pop
dec
pop
dec
pusha
sbb
lahf
xor
jl
stc
jne
or
dec
adc
lret
test
cli
pop
xchg
add
mov
xchg
cmp
mov
cmp
aad
pushf
jecxz
lods
push
and
leave
cmp
pop
pushf
into
lea
mov
jecxz
jge
daa
ret
bound
in
push
insl
push
nop
pop
ds
cmp
xor
lahf
dec
dec
sbb
push
lahf
and
and
sub
mov
sbb
mov
add
adc
or
mov
mov
mov
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
or
add
adc
xor
xor
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jmp
pop
cli
pop
sub
or
dec
pop
nop
push
and
xchg
push
daa
in
adc
and
daa
inc
cmp
and
test
rolb
jg
into
jnp
stos
idivl
rcll
fcoml
mov
aas
jmp
daa
sub
inc
adc
outsl
jnp
cld
cs
mov
mov
gs
js
arpl
movsl
aad
out
sbb
push
stc
jne
addl
cmp
fisubl
push
nop
nop
imull
jae
je
push
push
sbb
inc
pop
loopne
cltd
je
xor
inc
inc
and
adc
and
push
xor
jb
push
enter
out
sub
pop
or
xchg
sbb
subl
jge
test
popa
jge
mov
scas
shrb
cwtl
jae
lds
aaa
push
pop
jae
push
cmpsl
push
mov
lods
xchg
jbe
mov
mov
pop
pop
xor
fnstcw
es
movsb
cmp
pop
lock
push
add
outsl
push
pop
stos
sub
outsb
and
loop
aad
push
fsubrp
xchg
jb
lret
sbb
imul
repnz
dec
jmp
inc
clc
cltd
lea
into
shlb
dec
jo
dec
dec
jl
repnz
ljmp
sbb
insb
inc
jmp
repnz
sbb
cmp
repz
test
ljmp
nop
ss
jne,pt
icebp
test
notl
jmp
xchg
pop
cmc
adc
mov
loop
push
popl
mov
mov
mov
out
add
push
rcrb
cld
neg
testl
scas
mov
fwait
mov
ret
mov
rorb
inc
sub
call
sub
sub
test
inc
rorb
jle
adc
pop
mov
movsb
ljmp
lea
dec
xor
lcall
inc
jno
loop
fadds
dec
mov
hlt
xchg
fiadds
rorb
lods
test
lret
jb
sub
push
movl
xchg
fcoml
jbe
mov
aas
mov
sbbb
sti
dec
jle
adc
cli
movsb
insl
lods
testl
gs
mov
in
les
xchg
add
push
or
out
outsb
movsb
call
sub
aas
testb
loope
pop
mov
loope
and
ret
dec
jg
scas
dec
jne
cld
hlt
scas
push
sbb
push
or
pop
lods
cltd
mov
clc
hlt
xchg
sub
lds
lea
les
inc
jmp
leave
mov
xor
or
jnp
mov
ss
rclb
xor
xor
xchg
mov
cmp
dec
lock
hlt
push
dec
fildll
sub
shlb
std
shrl
scas
jbe
ror
pop
sub
sbb
pop
ficoms
sbb
outsb
fnstsw
mov
je
sub
ja
addl
aam
es
dec
or
cli
jle
das
mov
adc
addr16
mov
inc
mov
popf
lds
jbe
sbb
mov
inc
mov
gs
shrb
fcmovu
and
jae
push
lcall
pop
subl
dec
push
mov
dec
or
xchg
test
push
daa
sub
sub
in
jo
ret
xchg
xchg
mov
xchg
lret
mov
push
add
or
mov
push
adc
pop
jmp
rcrb
pop
int3
mov
imul
imul
push
repnz
andb
jo
adc
push
jne
movsb
or
mov
adc
or
cli
movsb
cwtl
inc
dec
jb
xor
jecxz
test
xchg
ja
and
mov
mov
inc
xchg
ror
imul
mov
xor
wrmsr
fs
xchg
aas
cltd
fs
andb
ja
fidivrl
push
xchg
rorb
addr16
dec
int3
or
dec
mov
pop
imul
fbld
xor
adc
adc
jl
hlt
ret
xchg
jg
ljmpw
fwait
add
scas
loope
inc
cmp
repz
in
push
xor
and
mov
call
adc
nop
inc
outsb
adc
dec
inc
insl
and
lcall
mov
ja
cmp
mov
jo
test
xor
cmpl
jnp
jmp
mov
negb
push
pop
and
dec
dec
clc
and
dec
xchg
clc
insl
jae
insb
ljmp
xchg
xor
xor
arpl
popa
add
aad
sbb
or
mov
push
addr16
mov
psrlq
and
out
pop
gs
push
add
sub
add
or
ljmp
int3
adc
or
cmp
jecxz
loop
fidivrl
or
mov
pop
out
jle
sub
fsubl
push
mov
test
sahf
in
mov
cmpb
pop
outsl
outsb
call
adcl
lret
or
fadds
enter
push
repz
iret
sbb
sbb
inc
scas
fldt
jo
sub
xchg
dec
lret
imul
fwait
gs
mov
bound
repz
pop
pop
mov
mov
scas
mov
icebp
adc
aas
bound
xchg
scas
in
cmp
lret
pushf
push
mov
pushf
fsubrl
outsl
stos
jns
movsl
aas
pop
js
or
cmpsb
mov
addr16
xor
push
xor
cld
push
push
sub
add
xchg
mov
mov
xchg
imul
and
insb
aaa
aas
out
test
insb
mov
in
add
loopne
dec
out
push
xchg
insb
jno
and
push
outsb
test
lds
adc
movsl
cld
insb
pop
mov
and
rcll
hlt
jmp
cmc
pushf
idivb
mov
mov
mov
mulb
jecxz
cmp
adc
mov
push
mov
fldt
mov
add
add
ja
push
push
push
xchg
jge
inc
adc
mov
lods
adc
ss
ja
or
lods
or
loop
jl
mov
arpl
aas
jp
imul
push
pop
jmp
test
in
pop
lock
add
push
pop
jmp
and
pusha
scas
jnp,pt
lea
mov
push
xchg
mov
test
jle
std
sub
popa
pop
or
jns
fdivr
sahf
int3
clc
and
and
lahf
lahf
push
fwait
outsl
fnstenv
jp
adc
push
cmp
push
or
adc
jne
mov
add
imul
xor
mov
div
jmp
lret
pop
cmp
adc
je
out
cmp
adc
and
push
xlat
dec
adc
add
adc
sbb
xchg
js
in
mov
int3
cmc
mov
adc
daa
sub
pop
out
mov
add
ror
push
outsb
lret
add
sti
mov
test
jbe
pop
xchg
fs
pop
sub
cmp
insb
hlt
pop
test
fmulp
daa
test
dec
and
test
mov
pop
jno
aam
ret
pop
int3
push
lret
mov
cmc
sbb
dec
lods
lret
out
ret
jne
hlt
cltd
test
pop
mov
repz
cs
cld
les
mov
cld
dec
inc
mov
test
inc
in
mov
dec
mov
adc
pop
sysenter
cs
adc
aaa
push
fs
movsb
push
xchg
jecxz
inc
stc
subl
into
xchg
fcmovu
mov
adcb
je
sti
call
fnsave
dec
std
in
clc
inc
into
imul
push
adc
or
mov
pop
cmc
aam
in
push
insb
mov
arpl
sbb
xchg
movsl
mov
sub
or
xchg
test
sti
push
repz
fs
in
mov
fcmove
pop
lret
jge
ja
fistps
mov
jle
push
jbe
es
cmp
dec
test
push
and
into
gs
stos
cmc
push
rcll
fistl
imul
popf
push
push
sub
mov
test
iret
dec
pop
subl
stos
sahf
push
mov
pop
push
add
mov
aad
adc
mov
hlt
pop
mov
notb
mov
repnz
jae
xchg
fisttps
cmp
and
sub
mov
ficoml
dec
rolb
outsb
mov
in
cld
push
in
mov
std
sub
loop
stos
mull
and
adc
call
in
mov
jg
jae
imul
mov
ja
lcall
sahf
push
mov
push
out
xor
cmp
les
mov
int
adc
push
stos
xchg
fxch
loopne
jecxz
mov
addb
scas
lcall
mov
das
xchg
xor
add
into
fstl
or
inc
adc
in
mov
and
jg
sub
and
or
jl
mov
inc
pop
data16
jne
push
popf
popa
jecxz
lock
arpl
cmc
sub
fdivs
xor
popa
jge
aad
adc
pop
ja
not
ds
and
jne
leave
test
lahf
mov
xchg
lods
sahf
push
faddl
out
out
cmp
sbb
loope
push
test
and
xchg
or
sbb
add
ret
sub
mov
jnp
out
mov
and
xchg
xchg
push
push
jnp
jae
add
mov
sbb
jns
pop
pop
sub
scas
sub
jae
sbb
jnp
lds
cmp
push
sub
fs
xchg
fnstsw
push
push
or
scas
sub
test
cmp
add
mov
cmp
mov
jb
pop
lods
mov
sub
out
ror
inc
std
movsl
shlb
stc
aaa
das
cs
push
mull
mov
mov
cmp
mov
icebp
lock
pop
in
data16
pop
fistpll
ja
adc
mov
jne
inc
push
adc
cwtl
fcomps
out
imul
insl
push
jg
lret
mov
ss
out
pop
mov
pop
je
mov
cwtl
xchg
out
test
push
mov
push
in
inc
data16
mov
add
sbb
pop
clc
adcl
movsl
dec
mov
outsb
adc
mov
sbbb
imul
xlat
fstps
sub
xchg
pop
mov
push
inc
push
dec
insl
mov
cmp
lea
add
sub
ss
test
cmp
xchg
mov
dec
fists
mov
loopne
mov
adc
mov
xor
dec
in
jo
jg
cmp
mov
push
and
push
imul
jp
sbb
lods
pop
andb
shld
mov
scas
fistl
cmp
xor
mov
jmp
ljmp
pushf
push
pop
ds
ficoml
jbe
mov
or
push
cmp
cmpsl
fwait
sar
and
test
mov
sbb
stc
out
lds
test
inc
pusha
pusha
mov
xchg
outsl
sub
lcall
out
dec
jl
test
sar
ret
je
jl
icebp
in
enter
lods
pop
or
ffree
dec
and
cwtl
push
add
cltd
jnp
jae
push
xor
fstl
popa
cld
jae
and
mov
cwtl
sub
arpl
mov
lods
sar
nop
pop
adc
dec
sbb
shlb
shlb
inc
cmp
pop
sti
mov
add
sbb
sub
mov
cli
or
adc
jo
add
andl
repz
out
lahf
jmp
jo
adc
inc
mov
loopne
sbb
clc
pminsw
stc
call
fdivs
xor
jno
add
or
stc
lret
mov
mov
inc
std
ljmp
push
jl
jbe
das
xchg
or
fdivl
faddp
jg
fsubl
add
loopne
sbb
fs
adc
sub
outsl
stos
jb
ss
mov
out
cmpsl
fcomps
bound
pop
aas
mov
es
not
imul
bound
jg
add
pmaxsw
mov
scas
lds
add
ds
jae
test
dec
shll
pusha
sub
cmp
adc
movsl
and
sbb
lods
std
add
ficoms
cmp
pop
xlat
imull
mov
push
push
or
in
inc
inc
test
pop
fisttpll
je
xchg
push
push
xor
adc
push
mov
ficompl
xlat
dec
in
adc
jp
mov
test
and
mov
loopne
push
sub
add
dec
inc
enter
cli
mov
mov
stc
inc
cmp
xor
inc
mov
ret
sbb
or
repz
loop
mov
or
clc
pop
pop
sbb
adc
enter
xchg
push
lds
fidivs
xor
test
mov
cmp
out
ret
xor
pop
pushf
cld
int
cs
mov
or
popf
push
jecxz
and
lds
scas
adc
enter
mov
sahf
pushf
shlb
loopne
stos
lret
lods
inc
test
and
in
add
inc
add
nop
pop
add
cmc
xchg
cmp
push
mov
adc
jno
js
int3
adc
and
popf
mov
fmull
fdivrl
rorl
and
and
outsb
setns
add
dec
mov
clc
shl
test
gs
dec
movsl
hlt
jb
jne
int3
jmp
jmp
pop
call
add
fisubrl
mov
or
xchg
cmp
stos
cmp
push
mov
aam
sbb
jnp
and
adc
iret
insb
nop
push
cli
sbb
lret
pop
arpl
jge
cs
fidivs
fsts
outsb
pop
call
pusha
xor
jmp
cmp
arpl
mov
push
xchg
pop
subl
hlt
mov
hlt
xchg
push
into
arpl
sub
jno
add
cmc
push
xor
int
in
nop
adc
cmp
repz
aam
dec
mov
lcall
into
dec
adc
push
xchg
jb
ljmp
daa
jle
iret
sbb
pop
push
jmp
lret
out
dec
jno
adc
popf
je
xchg
gs
add
das
outsl
andl
loope
mov
xchg
arpl
insb
xchg
xchg
xchg
ja
add
dec
out
clc
jo
ljmp
cmp
jl
testl
lods
sub
gs
push
xlat
xor
mov
add
ja
sti
adcl
ljmp
xor
xor
xchg
pop
jge
sbb
call
and
jmp
pop
das
mov
insb
mov
adc
insb
fistpl
pop
sbb
mov
lret
mov
jge
xchg
inc
lods
jb
in
int3
or
jbe
stos
pop
sub
out
add
mov
sbb
call
jo
iret
int
int3
fstl
cmc
cwtl
out
inc
jae
xchg
pop
adc
in
sahf
sbb
pop
mov
mov
iret
mov
mov
ds
dec
sub
test
mov
sub
or
push
push
stos
cs
fsubrs
mov
dec
xlat
movsl
add
popa
fsubrl
popa
jl
jecxz
mov
mov
jmp
pop
sbb
cmp
fwait
repnz
jne
movsl
mov
jno
xor
and
xor
cli
push
rcl
leave
jecxz
test
xchg
jne
out
xlat
cmp
das
push
mov
add
mov
test
js
cwtl
and
dec
mov
pop
inc
push
pop
mov
dec
push
and
into
pop
or
add
mov
mov
inc
mov
testb
das
dec
ret
sbb
ret
push
aas
adc
insl
das
push
pop
sahf
lds
sub
inc
xor
imul
xchg
ljmp
adc
test
mov
push
imul
scas
dec
ret
dec
setb
div
sbbb
popf
out
jbe
int
outsb
xor
in
lea
jl
adc
in
inc
jmp
pop
sbb
ficomps
mov
sub
shrb
aas
sub
push
int
and
test
adc
cltd
imul
inc
movsl
outsl
xlat
inc
mov
into
nop
mov
and
push
cmp
sbb
ljmp
fisttpl
pusha
cmp
sub
mov
daa
fs
jp
popf
jb
adc
jecxz
adc
jge
aam
adc
incl
rol
mov
xchg
ret
sbb
movsl
push
push
sbb
xchg
faddl
gs
pusha
xchg
pop
mov
xor
cmpl
enter
sbb
add
ficoms
dec
add
and
out
fnstenv
out
add
insb
insb
pop
xor
sbb
add
cmpsl
jae
repz
mov
cli
xchg
loop
gs
cmpsl
loop
mov
insb
xor
aad
xor
push
hlt
inc
mov
in
test
xor
xlat
xchg
inc
inc
out
out
xor
jae
lret
out
in
outsb
xchg
sahf
jle
cmc
mov
push
into
jnp
push
sub
fcmovnu
repz
ljmp
roll
test
pop
fs
mov
popa
jmp
jnp
or
pop
jg
sti
aas
mov
mov
cltd
clc
adc
push
imul
xor
jae
lods
ficomps
pop
fcomps
into
pop
shll
sub
or
fs
pop
jge
dec
or
xor
or
lahf
loope
jae
lea
add
sbb
shrl
xchg
sbb
mov
addr16
iret
adc
pop
cwtl
mov
out
xchg
bound
je
inc
jnp
push
ljmp
pop
mov
test
or
jl
sub
in
js
pusha
mov
pop
jnp
sbb
mov
icebp
bound
stos
and
lods
dec
je
xor
adc
movsl
lds
push
lea
movsl
dec
mov
ret
dec
addb
nop
pop
xor
mov
pop
xchg
leave
pop
jnp
in
fcomp
jbe
mov
inc
lea
add
cli
push
sahf
mov
fiaddl
sub
cmp
push
and
rcl
jl
cli
sbb
jp
jns
add
lret
xor
xchg
mov
adcl
ljmp
sti
push
mov
int
mov
ds
loopne
loopne
pop
addl
aas
loope
repz
mov
jle
inc
dec
adc
or
daa
aaa
cltd
mov
pusha
fstl
aam
lods
outsl
repnz
dec
and
test
lcall
mov
cs
jb
adc
sti
ret
in
add
xlat
popa
adc
cmp
pushl
add
lock
nop
fadd
mov
insl
jne
mov
lret
mov
push
das
lret
adc
out
fs
pop
outsb
dec
push
mov
cmp
fsubl
mov
cmpl
punpckhdq
data16
gs
sbb
push
add
lds
sti
add
inc
shll
loopne
clc
adc
in
mov
mov
mov
test
out
icebp
cmpsl
into
subb
lret
sbb
fstl
sbb
and
cmp
aaa
and
adc
aaa
sahf
xor
lcall
or
add
pop
int
lds
aad
shrl
bound
vmaxss
subb
xchg
iret
jae
adc
ret
pop
ficomps
xor
push
dec
sbb
cwtl
and
add
sub
and
inc
xor
push
push
xor
add
xor
mov
mov
sub
mov
and
div
mov
mov
and
sub
imul
add
jmp
scas
fldl
movsl
jl
stc
mov
rolb
pop
mov
verr
mov
push
mov
and
cli
mov
fwait
mulb
mov
aad
dec
and
pop
icebp
cmp
in
jno
out
fmuls
test
dec
or
lcall
shll
jl
xchg
cmpsb
pop
mov
and
mov
fidivrl
xchg
sbb
fidivl
xor
repz
punpckldq
iret
lret
xor
mov
jnp
jp
ret
daa
xor
mov
xchg
or
cmpsb
or
insl
pop
and
out
nop
addr16
mov
fildl
jns
or
mov
jecxz
sbb
sub
das
in
fcompl
and
or
push
bound
out
pop
cmp
pop
out
push
push
je
out
mov
test
mov
jo
or
push
push
push
loop
fsubs
pushf
es
push
je
push
cmpb
push
and
inc
push
sub
mov
out
inc
mov
pusha
es
xchg
mov
rcrw
xlat
push
dec
or
iret
hlt
repz
mov
mov
inc
pop
add
lds
imul
adc
sbb
pop
aad
mov
in
inc
dec
out
jg
sbbl
cmc
out
ret
push
lea
push
or
insl
pusha
fstl
and
cmpsl
outsl
mov
or
divb
mov
lcall
push
dec
or
out
movl
cmp
call
mov
and
inc
imul
sbb
jmp
sbb
test
imul
dec
sti
jmp
cmp
lcall
ja
scas
push
xor
pop
dec
mov
fldl
insb
in
mov
push
xchg
clc
xorb
or
sbb
jno
sub
sub
adc
nop
or
jl
fadds
adc
or
pushf
adc
sub
push
pop
vpaddq
push
add
inc
or
daa
dec
clc
fldl
mov
jae
mull
jae
cmc
in
hlt
or
arpl
fsub
stos
scas
data16
js
int
pop
daa
adc
dec
and
arpl
jge
fidivrl
fimuls
inc
test
in
adc
daa
fbld
adc
aam
add
xchg
je
in
push
mov
add
sub
fwait
mov
mov
lods
repnz
fwait
leave
dec
push
push
xor
into
pop
cmp
mov
cmp
push
fwait
mov
aam
je
repz
push
rcrl
sbb
lret
lock
rolb
xchg
add
scas
rcrl
aad
aaa
jae
ja
in
repz
inc
loop
out
inc
fldenv
repz
stos
in
xchg
mov
pop
mov
fcompl
bound
loopne
neg
mov
push
ljmp
enter
repnz
iret
cmp
mov
xchg
imull
add
sub
loopne
push
cmp
sub
xchg
ret
jns
sti
push
in
bound
adc
cwtl
dec
adc
dec
and
cmpsl
sahf
sbb
mov
or
cld
xchg
mov
fadd
cltd
jp
jmp
adc
lcall
adc
nop
pushf
push
idiv
out
push
mov
pop
mov
push
xchg
js
add
test
jne
aad
jle
cld
scas
into
xchg
adc
mov
test
mov
bound
push
jns
mov
mov
adc
add
adc
repz
xchg
cmp
push
jb
sbb
mov
sbb
xchg
stos
imulb
sub
jg
cmpsb
xor
repz
pop
outsb
aam
xchg
sub
rcll
iret
js
lret
sub
pop
es
adc
dec
mov
mov
jb
ja
out
push
inc
movsb
xor
gs
aad
movsb
ja
push
adc
xor
dec
jmp
rorb
or
mov
dec
mov
ljmp
jnp
add
xchg
and
dec
xchg
adc
mov
iret
pop
mov
fsubr
xor
pop
fsubrl
push
xor
dec
mov
cli
mov
out
cmp
fcomps
mov
pop
lea
cmp
leave
cmp
push
stos
rorl
or
pushf
daa
push
gs
sbb
and
sub
iret
testb
mov
xchg
add
xchg
clc
je
insb
xor
or
in
cmp
repz
inc
push
or
stos
jmp
xor
test
scas
xor
mov
ljmp
dec
xor
icebp
test
out
or
sub
ljmp
mov
push
pop
add
int
sub
bound
pop
jo
mov
loope
sbb
inc
pusha
stc
and
push
adc
das
icebp
sub
mov
mov
out
negl
lret
inc
inc
dec
jg
inc
fabs
in
lea
sti
mov
push
lahf
mov
xor
dec
insl
sbb
popf
sub
inc
repnz
pop
push
push
mov
sbb
add
add
call
mov
xlat
xchg
push
fbstp
jle
imul
add
xchg
in
fldcw
mull
cmp
lahf
add
inc
stos
inc
mov
dec
push
pop
add
pushf
rol
in
push
sbb
pop
and
and
push
push
cwtl
add
add
addb
negl
xchg
ja
shrl
cmpb
jbe
mov
push
mov
jns
sub
jae
int
or
xchg
add
in
mov
mov
xchg
sub
mov
orl
cmc
mov
loop
jge
out
push
dec
stos
add
fdivl
mov
imul
xor
xor
out
enter
fcoml
int
push
cmpsb
shll
pop
fsts
sahf
mov
out
sub
xchg
fs
mov
xor
scas
lds
fsubrs
fisubrl
movsb
jb
mov
scas
addr16
xbegin
int
insl
subl
scas
xchg
test
incl
jno
lret
xchg
call
inc
addb
xlat
pop
dec
jge
in
sarb
popl
sahf
mov
inc
add
cmp
dec
call
pop
mov
arpl
loope
push
std
adc
mov
mov
dec
push
out
push
xor
scas
push
mov
fcompl
les
js
rcrb
mov
orl
sbb
out
enter
xchg
add
jmp
jne
add
subl
xchg
dec
movsb
std
xchg
adc
and
stos
sub
xlat
pop
cmp
or
popa
lods
sbb
lea
pop
xchg
scas
jle
gs
xchg
xchg
xchg
jns
pop
push
or
test
inc
aad
lsl
fdivs
dec
and
adc
jg
sub
lock
pop
inc
lret
adc
aad
xchg
inc
test
cmp
cmp
push
nop
push
test
xchg
pushl
jmp
mov
mov
loopne
mov
sbb
cmp
lcall
cmp
arpl
xchg
test
dec
imul
pop
push
xor
push
test
xchg
add
or
loop
ja
mov
aaa
loope
or
xchg
dec
lahf
push
dec
sbb
jo
imul
fs
xchg
sbb
sbb
rcrl
dec
shll
iret
inc
inc
jg
push
xchg
jmp
cmp
and
pusha
push
lock
dec
pop
ds
inc
and
and
fiadds
test
and
xorl
js
mov
mov
xchg
mov
sub
cmp
out
ret
push
stos
test
mov
lret
sbb
roll
jno
movsb
pop
push
aaa
xchg
lret
iret
xchg
sbb
mov
sub
outsl
mov
sbb
add
xor
jb
addr16
test
sbb
push
mov
mov
pop
mov
sub
ja
into
lahf
dec
popf
insl
xor
inc
nop
adc
xchg
rclb
jno
pop
xchg
ret
ficomps
scas
imul
lock
decl
inc
and
in
xor
cmp
xchg
xchg
enter
xor
and
fcmovne
ljmp
loop
mov
sarb
cmp
sarl
mov
call
fs
jnp
in
lcall
jb
mov
mov
inc
in
and
pop
or
lea
adc
shll
insb
orb
ljmp
stc
mov
mov
mov
hlt
divb
fiaddl
dec
or
jae
leave
out
push
inc
adc
mov
mov
or
scas
mov
jno
lret
test
inc
out
test
in
cmp
pop
dec
shll
pop
dec
lock
lds
int3
adc
dec
in
xchg
scas
jmp
add
scas
and
das
scas
mov
mov
and
jno
nop
sbb
jo
fdivrp
inc
ret
lock
imul
mov
xchg
push
stos
jno
scas
pop
pop
enter
ds
in
mov
mov
pop
mov
out
cltd
pop
inc
bound
add
fdivs
negb
mov
push
mov
nop
adc
mov
pop
inc
mov
mov
out
andl
mov
mov
lods
add
data16
fstpt
push
iret
cmc
shr
jb
xchg
loopne
rclb
sub
jg
test
xor
loope
pop
jle
inc
dec
mov
inc
pop
roll
jmp
mov
xor
ljmp
imul
mov
add
test
test
xchg
fcom
ja
adc
mov
jne
jno
jmp
mov
and
shlb
mov
jecxz
sbb
mov
jb
fwait
inc
lret
popf
or
inc
and
ljmp
cwtl
inc
shr
loopne
int
adc
scas
sbb
sub
and
sbb
or
pusha
dec
mov
fldl
cmp
adc
xor
xchg
dec
loopne
std
push
cmpsl
cmp
cmp
fidivs
add
cs
mov
push
mov
inc
and
pop
lea
sti
mov
push
sub
jo
add
jp
add
stos
cmp
push
pop
adc
dec
sbb
push
es
push
mov
mov
aaa
jb
mov
inc
mov
lret
xlat
test
cwtl
pop
adc
loop
int
add
and
add
xor
fadds
sbb
fnsave
ja
xor
mov
cmp
bound
mov
aam
idivb
mov
imul
popa
pop
jne
jle
mov
lock
inc
shr
push
jb
jg
lret
jge
adc
add
push
xchg
mov
pop
push
outsl
loopne
xchg
mov
fistps
xor
aaa
inc
jge
shl
jns
out
and
xor
aaa
bound
fisubrs
mov
cwtl
and
fwait
and
je
mov
xchg
shrl
mov
ficoml
call
or
or
sub
fisubl
rcl
inc
xchg
jne
jmp
insl
mov
jnp
push
lock
outsl
push
mov
leave
popa
stc
fdivrs
cmpsb
imul
cmp
or
or
ss
fnstcw
dec
jo
adc
ja
repz
jmp
sbb
mov
ss
sbb
hlt
cwtl
xchg
scas
jl
lret
sub
movsb
fisttpll
add
or
push
mov
sbb
test
popf
iret
mov
push
adc
ficoml
or
inc
adc
into
adc
enter
mov
subb
xchg
jo
repz
sbb
clc
xor
jno
mov
ss
ret
jge
loopne
into
push
inc
clc
jp
inc
clc
push
dec
cmp
and
push
mov
lret
push
sub
dec
loop
fwait
add
cmp
shl
or
js
pcmpeqb
enter
push
stos
jecxz
dec
push
ret
and
and
out
aas
dec
bound
cltd
jecxz
enter
push
fucomp
out
and
cld
nop
insl
enter
ret
and
hlt
mov
arpl
stos
pop
sahf
roll
dec
push
fnstcw
adc
cmp
enter
inc
or
int3
ja
xchg
mov
popa
in
jp
or
push
xchg
sarb
mov
stos
sbb
sub
or
test
mov
hlt
ds
inc
sub
mov
shlb
imul
push
sub
sub
cli
jbe
mov
outsl
roll
call
fadd
js
cmp
xchg
xchg
lods
test
mov
dec
xchg
cwtl
xor
into
jmp
ret
in
das
in
scas
mov
add
shl
xor
popf
nop
addb
mov
or
add
xchg
lcall
mov
cmpsb
ljmp
mov
add
mov
add
jmp
nop
shrb
sub
addr16
sub
repz
push
js
adc
and
arpl
and
shr
fbld
pop
mov
jp
in
int
ret
cmpsb
out
push
mov
divb
jecxz
and
inc
pop
xor
loope
jbe
nop
inc
cmp
mov
mov
or
sub
scas
or
gs
or
cmp
sub
push
pushf
fstps
adc
data16
lods
push
xchg
xchg
loope
dec
mov
lcall
push
enter
push
cltd
movsb
icebp
mov
loope
cld
mov
int
movsb
pushf
push
stc
or
xchg
into
fdivp
dec
cmp
mov
fildll
shl
dec
jne
movsb
mov
out
movsb
in
scas
fisubl
pop
jl
mov
sub
pop
xchg
xchg
inc
leave
dec
repnz
push
add
xchg
jnp
xor
shlb
lcall
jmp
nop
outsb
push
shll
aas
sub
jecxz
adc
dec
enter
insb
lcall
out
aaa
fs
ss
inc
xor
xchg
loop
jecxz
cmp
mov
insb
shlb
imul
les
aas
xor
jnp
mov
aaa
xor
insb
aad
outsl
stc
into
stos
rolb
fists
js
xor
adc
or
lock
sub
push
jbe
loop
mov
std
xor
dec
mov
hlt
cli
mov
cwtl
pop
das
stos
pop
xchg
out
int
dec
cmp
mov
pop
leave
or
or
pushf
mov
iret
xor
roll
jne
or
popa
mov
lcall
roll
inc
mov
inc
jbe
cmp
icebp
adc
push
inc
movups
add
push
aaa
movl
ds
xchg
add
push
ds
sti
cli
imul
inc
push
inc
loopne
cmp
std
notl
jl
inc
adc
push
gs
js
imul
jg
addb
ss
jbe
arpl
add
pop
mov
xchg
fcoml
mov
imul
scas
sti
idivb
mov
in
jg
mov
sti
xchg
inc
cli
clc
imul
or
pop
aam
lods
xchg
sbb
fs
in
pop
pop
outsb
ret
adc
lds
mov
dec
lods
dec
test
xchg
and
mov
leave
inc
out
ficompl
test
xlat
xchg
mov
mov
inc
or
lods
jae
incl
push
dec
dec
adc
and
fs
leave
int
imul
mov
neg
xchg
mov
adc
ret
pushf
xchg
jl
sti
das
jne
lret
dec
pop
xchg
sub
icebp
aam
fdivrs
sti
leave
fmul
dec
pop
mov
cmp
lahf
scas
loop
jae
jnp
or
mov
push
or
jmp
repz
pop
fdivs
xor
clc
mov
popf
pop
jle
mov
or
in
cmpsb
sub
cs
pop
aas
in
push
jae
push
push
mov
dec
lret
mov
dec
pop
pop
enter
std
and
aad
les
push
dec
push
xor
sbb
push
dec
mov
fisttpl
inc
pop
test
cmp
rorb
jnp
sub
jmp
or
lahf
iret
sbb
mov
xchg
lcall
loop
sti
movq
jbe
adc
sar
aam
cli
xor
in
lahf
cmp
xor
cmp
test
dec
insb
add
xchg
lock
cld
dec
push
lea
test
shr
or
push
inc
cmp
jecxz
jnp
pop
dec
sahf
xchg
seta
xor
cmp
adc
dec
add
xchg
jnp
add
lock
xor
int3
xchg
adc
iret
push
faddl
xchg
pushf
xor
and
mov
out
ljmp
push
or
mov
push
push
enter
das
push
push
push
and
push
mov
cmpl
jmp
pop
jnp
xlat
mov
les
or
stos
adc
mov
xchg
add
adc
rclb
jns
jp
rorb
push
daa
sub
dec
push
xchg
andl
js
mov
mov
pop
xchg
mov
test
inc
pop
bnd
or
je
xchg
mov
jnp
shll
jne
insb
jl
daa
dec
cmp
ret
inc
push
jae
inc
js
aaa
pop
xlat
inc
repnz
pop
shll
int
push
jmp
mov
jo
mov
and
dec
shll
adc
mov
adc
in
test
xor
pop
lcall
pop
dec
stos
out
inc
lock
stos
cmp
jp
roll
pop
jge
nop
lea
cmp
inc
sub
inc
lods
nop
mov
pop
cwtl
jle
xor
jg
fisubrl
ret
mov
push
lea
mov
pop
mov
cmp
sbb
pop
jno
jns
or
cmp
pushf
ret
inc
cli
cmpsl
ds
add
fucomp
add
xchg
mov
std
lds
push
xlat
xlat
out
call
xorb
insb
das
jg
and
mov
or
mov
add
mov
sbbb
cmp
pushf
pop
sub
adc
dec
xchg
aas
cmpsl
das
dec
mov
clc
out
pop
xchg
add
dec
adc
fnstenv
dec
sbb
or
pop
cmc
push
jae,pn
lret
lea
gs
fcomip
imul
inc
and
nop
xor
pop
sti
cwtl
jle
pop
adc
jl
push
mov
arpl
jecxz
dec
adc
dec
fidivl
mov
mov
in
stos
jmp
repz
pmulhuw
call
test
ss
scas
inc
jae
push
fistpll
mov
inc
xor
nop
std
push
lock
jl
ficoms
sub
movsl
mov
push
mov
insl
jl
jo
push
jg,pn
lcall
inc
pop
loop
addb
ret
xor
roll
imul
sbb
insb
cmp
pushf
cmp
jmp
add
aas
ficompl
push
insl
add
clc
inc
lods
inc
add
jae
jae
call
add
movsl
mov
repz
stc
out
mov
sahf
loop
mov
xchg
inc
sbb
jecxz
mov
or
push
mov
aas
cmpsl
out
mov
pop
jo
imul
push
repz
mov
hlt
sub
adc
fcmovbe
dec
clc
fcmovb
jb
insl
push
mov
cltd
fcmove
mov
mov
xchg
adc
inc
adc
cmp
shrb
fs
adc
sub
dec
out
gs
int3
sbb
add
inc
ret
gs
add
pop
or
fucom
daa
nop
mov
xchg
cmpsb
adc
inc
jne
fadd
inc
fs
adc
mov
imul
movsl
jo
mov
push
fdivl
ret
push
add
xor
add
mov
add
mov
mov
mov
mov
xor
xor
add
adc
jmp
push
gs
pop
out
dec
push
push
add
mov
mov
mov
mov
fiaddl
test
xchg
es
in
rcr
xchg
jae
or
dec
inc
lds
in
pop
aad
bound
hlt
dec
stc
or
lods
sbb
xchg
xor
jae
mov
adc
cmpsb
add
testb
fcomps
loop
sbb
int
xor
mov
adc
sub
adc
add
mov
lods
adc
cld
fwait
cs
notb
pop
cwtl
pop
push
andb
mov
push
and
imulb
push
lret
gs
test
pusha
insl
scas
bswap
lock
inc
int
sub
retw
pop
fs
cmc
jle
push
jge
mov
lea
adc
push
pop
or
dec
psubusb
sbb
or
pop
enter
aas
ficoml
and
stos
lods
adc
fisubrs
mov
nop
lret
cmc
pop
jp
mov
lahf
sbb
jbe
xchg
fsubrp
pop
je
or
xchg
inc
fistpl
dec
pusha
lods
adc
int3
xchg
int
movsb
fbstp
test
enter
cmp
adc
cli
loop
adc
sub
and
mov
movb
xchg
mov
xchg
adc
js
push
stos
sbb
push
cmpsl
stc
decb
andb
stos
push
popf
lret
xchg
fs
jns
scas
lods
lcall
sub
fcompl
lock
lcall
cld
xor
dec
int
cmp
shrl
or
dec
sub
sbb
pushf
pop
sbb
movsl
jne
adc
sahf
repz
push
xor
xchg
lea
cld
movsb
fdivp
push
mov
adc
data16
fcompl
pop
mov
mov
lea
push
shll
adc
mov
mov
pushl
outsl
or
jp
mulb
inc
cmc
xchg
jg
jne
js
push
leave
mov
dec
mov
js
sbb
addr16
lret
negb
cmp
pushf
cmp
loopne
cmp
and
repnz
data16
jmp
push
rorl
into
sti
pop
pop
inc
mov
pushf
in
cmp
cli
fmuls
inc
popa
inc
mov
sub
mov
scas
pushf
not
push
fsts
jg
ds
sub
mov
xchg
ss
and
xorb
outsb
fldt
xchg
mov
shr
or
int
pop
shrb
cmp
adc
xchg
cmp
dec
mov
add
cmp
shrl
dec
cmp
sbb
cwtl
insb
and
dec
sbb
out
sub
push
out
fisubs
mov
out
and
out
dec
xchg
jmp
mov
das
push
adc
xchg
ret
sub
xor
test
mov
dec
mov
add
scas
sbb
nop
js
pushf
lds
sbbl
mov
or
jnp
sub
cmpsl
or
xchg
inc
lea
and
push
enter
dec
lods
nop
pop
xor
pop
scas
jbe
andl
inc
pop
aaa
sbb
adc
out
jp
mov
push
and
xchg
test
add
xor
subl
mov
sbb
dec
loope
push
rorl
push
movsl
push
outsb
push
or
loope
xchg
mov
les
std
mov
mov
cmc
jnp
jb
fwait
dec
push
sbb
loopne
mov
in
mov
fcompl
out
jno
test
xchg
xor
pop
cltd
lcall
and
test
mov
out
dec
ss
jmp
andl
xchg
jo
lock
mov
ret
jo
mov
dec
and
mov
int3
add
xchg
sahf
jbe
das
or
js
jmp
mov
pop
popa
data16
or
hlt
js
out
mov
push
dec
xor
stos
dec
add
inc
imul
ja
fidivl
cmpsl
ja
lea
imul
add
dec
fcoms
loope
mov
aaa
test
xchg
jbe
sbb
out
addr16
daa
push
xchg
js
adc
jnp
push
dec
inc
cld
xor
popf
mov
jg
adc
push
xchg
mov
jmp
xchg
sbb
fwait
jb
xchg
sti
adc
fstl
into
sub
call
arpl
adc
mov
pop
and
lea
js
loop
sub
pop
fcom
add
mov
addb
sbb
icebp
and
ljmp
movsb
inc
jecxz
ss
dec
popa
out
fbld
dec
fimull
and
ljmp
mov
out
pop
decl
push
rcrb
rcrb
idivl
xchg
push
add
xchg
mov
xchg
sysexit
jp
or
mov
mov
mov
sub
rorl
mov
sbb
shr
or
shll
sub
inc
adcb
popa
push
js
pop
lahf
cli
ja
lret
inc
aam
sub
adc
push
pop
cld
aam
and
cmp
sarb
cli
add
xor
mov
mov
daa
jno
inc
jmp
xor
pop
leave
shrl
and
inc
sbb
sbb
push
adc
inc
or
sahf
mov
repz
leave
roll
out
mov
inc
cmp
cmp
cmp
push
icebp
inc
out
lret
adc
xlat
orl
insl
outsb
addr16
mov
inc
mov
push
out
mov
or
movsl
adc
push
adcb
and
mov
inc
jp
dec
or
lods
inc
loop
push
push
add
and
xchg
inc
fld
dec
dec
fsubrs
das
test
cld
enter
xchg
rcll
mov
gs
mov
bndstx
subb
imul
mov
cmpsl
push
jnp
fists
negl
mov
cmp
xchg
push
rcrl
lahf
xor
cmp
add
push
dec
cwtl
mov
scas
cmp
sub
dec
and
fcomps
xor
xchg
pop
out
jg
or
mov
push
leave
adcb
hlt
int
push
jnp
cli
andl
inc
adc
mov
stos
or
xchg
clc
ds
jo
data16
mov
gs
flds
cmpsl
sahf
mov
mov
sti
dec
gs
shll
mov
and
into
mov
cmp
mov
mov
bound
repz
xchg
push
lods
aad
mov
dec
cltd
aas
test
inc
push
adc
jecxz
push
stos
xchg
xor
movsl
jg
bound
aaa
std
push
mov
mov
addr16
int3
mov
pop
lret
shlb
test
or
inc
fcomps
dec
in
xor
cmp
inc
sbb
nop
pop
add
sbb
push
adc
xchg
int3
xchg
adc
and
aaa
or
lock
mov
mov
ja
sbb
inc
andl
mov
lock
dec
sub
insb
sahf
hlt
push
mov
sbb
sbb
mov
mov
into
rcrb
mov
xchg
fadd
cld
je
xchg
cli
mov
in
jb
out
stos
mov
stc
inc
mov
pusha
push
hlt
clc
sbb
inc
sbb
scas
jle
repnz
push
cltd
adc
sbb
xor
jne
bound
mov
inc
mov
lahf
shrb
cvttps2pi
dec
sub
cmpsb
stos
cltd
sub
loope
fildl
idivb
push
lret
xor
and
test
popa
cmp
stos
faddl
addl
or
pop
mov
mov
mov
xor
sub
sub
cmp
stos
ret
xchg
aas
punpckhwd
pop
rcrb
push
add
pop
adc
mov
and
adc
cmpb
sub
jle
xorb
xchg
test
mov
mov
push
lret
icebp
sub
dec
dec
test
push
loope
sbb
and
outsl
xor
sub
bound
call
and
cmpl
and
iret
dec
pop
dec
inc
aas
int3
pop
jo
jmp
idivb
dec
cmp
ret
adc
clc
int
jl
or
outsb
imul
out
enter
loop
fwait
dec
sub
int
jle
mov
outsb
sti
jnp
jne
mov
xchg
sub
test
out
test
mov
mov
pusha
push
mov
aam
leave
flds
pop
or
pop
lret
test
jbe
popf
xchg
mov
jns
sbb
cmpb
sbb
in
push
add
jecxz
xorl
popf
mov
xchg
inc
adc
fs
stc
sbb
fsubrp
xchg
int3
jae
add
mov
push
lods
inc
enter
fprem
push
push
mov
or
adc
cmpsl
xor
xlat
rclb
rorb
pop
sti
push
popf
mov
push
popf
iret
cltd
ja
in
fs
pop
test
xchg
inc
lds
test
push
and
iret
sbb
lea
test
movsl
lahf
mov
xchg
xchg
daa
jo
in
mov
shrb
sti
lods
inc
and
xchg
cmp
sbb
out
imul
mov
cmpsl
imul
cmpsb
das
mov
je
gs
sbb
gs
test
adc
add
ret
mov
push
dec
cmp
test
ljmp
cmp
adc
fdivrl
jmp
fsubr
cltd
sbb
fbld
lcall
gs
lods
pusha
imul
push
push
push
lds
bound
not
in
and
add
gs
xchg
cmp
jne
cmp
roll
fs
mov
xor
nop
pop
je
ljmp
or
push
sub
sub
cmpsb
pop
sub
mov
mov
xchg
mov
stos
push
inc
fs
add
pop
push
inc
lea
subl
and
add
cmpsb
xchg
mov
fidivrl
push
cmp
or
iret
fs
sbb
shlb
push
mov
subb
fisttps
cmpsl
mov
stos
add
out
daa
int
test
call
imul
jae
mov
sbb
nop
testl
inc
insl
sub
cli
imul
xchg
jbe
lds
push
lods
xor
inc
std
push
mov
mov
or
jne
or
loopne
pop
push
mov
jne
stc
sbb
or
lcall
fs
mov
rorl
pop
and
pusha
sbb
les
gs
popf
sahf
pop
inc
ss
fsub
aam
push
lock
testb
in
xchg
pushf
cmpsl
hlt
mov
mov
mov
lods
loopne
push
dec
mov
ret
adc
mov
xor
int
ret
adc
dec
inc
test
or
mov
mov
and
fadds
out
xor
aaa
push
add
fwait
jg
mov
and
pop
outsb
int
shl
push
push
adc
inc
out
arpl
aas
outsb
cmp
sub
jns
rorl
add
fwait
mov
or
insb
out
dec
lock
mov
and
jmp
or
jnp
hlt
xor
and
daa
adc
xor
cmpsb
mov
cmp
es
lods
cltd
cltd
xchg
adc
sbb
stc
arpl
data16
sub
push
subb
push
add
add
arpl
cmpsb
fadds
popa
in
inc
int3
addr16
std
jae
rorl
repz
sub
xor
loopne
xchg
sbb
pop
xor
push
cli
jg
decb
data16
vmovss
xchg
jbe
cli
aas
ljmp
jbe
dec
jge
rcrl
add
stc
push
dec
test
jae
addr16
fcompl
xor
stc
cmp
pop
adc
or
sbb
inc
jge
rcrb
sbb
cmp
inc
stos
mov
pushf
xchg
frstor
lds
lods
enter
cmpsb
idivl
shrb
loop,pn
adc
dec
ds
inc
notb
mov
xor
sbb
faddl
cmp
ljmp
ss
push
and
je
adc
fs
pop
add
and
mov
mov
push
jle
lahf
jae
fisttpll
xchg
dec
dec
hlt
aam
mov
adc
outsl
xchg
scas
push
pop
sbb
stos
add
test
cmc
or
mov
pusha
lods
lods
mov
mov
out
xchg
push
pop
ss
loope
fmul
call
outsl
pop
inc
dec
pop
sub
lds
pop
adcl
jb
js
jmp
push
aaa
fwait
stos
clc
xchg
fs
lea
je
iret
adc
scas
test
inc
dec
sahf
xorl
out
flds
pushf
ds
mov
pop
inc
lods
nop
clc
daa
add
shlb
jo
loopne
into
rorb
inc
dec
jp
gs
push
sti
lret
imul
data16
jge
aad
faddl
outsb
cmp
or
call
mov
mov
orb
mov
cs
jae
lds
inc
or
movsb
bound
dec
jg
sbb
inc
ret
sub
fwait
imul
stos
inc
mov
mov
rcrl
ror
hlt
push
and
pop
call
push
push
push
push
call
mov
add
adc
xor
cmp
jne
cmp
jne
mov
mov
imul
mov
or
sub
mov
lea
mov
pop
leave
ret
push
mov
sub
cmpl
jg
mov
add
jmp
pushl
call
push
jmp
addb
add
icebp
decl
addl
push
lcall
notb
mov
jg
enter
pop
and
xor
adc
push
and
cmp
xchg
dec
cmp
jecxz
add
xor
cli
xorps
add
sbb
and
mov
pop
mov
jmp
les
xor
jbe
fst
xor
xchg
fldcw
mov
out
test
lahf
push
mov
add
dec
les
jmp
test
push
lock
jmp
je
enter
push
mov
cld
daa
cmpsl
jne
cmpsl
xor
mov
sti
jmp
es
mov
push
jge
inc
adc
sbb
repz
and
push
test
out
cmp
push
in
test
fwait
int3
push
out
lret
adc
or
mov
inc
mov
ss
sar
inc
rcrl
jge
adc
xor
xchg
xor
mov
pop
push
insb
aaa
repz
cmp
aas
cmp
xor
cld
add
clc
insb
or
repnz
push
pushf
lret
lret
outsl
js
dec
pop
adc
fldenv
lods
pop
cmc
push
jbe
add
mov
call
pop
and
mov
in
xchg
pop
jmp
push
aas
iret
sahf
cwtl
inc
aad
jbe
std
fisttpl
sbb
stc
adc
out
mov
sub
fsqrt
stos
jns
cmp
rorb
jmp
out
add
test
scas
xor
addl
sub
sahf
sub
subb
push
data16
roll
insl
mov
aaa
into
pop
mov
test
ret
xchg
mov
inc
std
jne
out
loop
loopne
clc
cs
inc
add
jns
pop
push
lret
inc
mov
jo
nop
test
lret
ja
cmp
lods
inc
push
jnp
fwait
cmp
sbb
inc
stc
inc
push
mov
adc
jl
out
fistps
xchg
enter
lret
gs
repnz
push
pop
cs
shlb
sahf
ja
jecxz
fwait
bound
rorb
rorb
push
cmpsl
aas
sbb
xor
xchg
add
add
test
dec
inc
mov
subb
sbb
dec
xorl
xor
jge
das
or
cmpsb
or
mov
lds
roll
fdivrs
push
or
dec
push
push
pop
mov
or
xlat
out
test
mov
inc
jb
cld
xor
and
mov
daa
xor
in
xchg
jo
imul
scas
mov
stc
xor
jne
sbb
mov
add
xor
sbb
daa
and
insl
or
mov
dec
nop
inc
jno
int
fcomp
movsb
sar
and
shll
cmp
push
ret
xchg
hlt
mov
xchg
push
adc
mov
jbe
popl
ljmp
mov
and
sarb
add
inc
hlt
sub
cld
aas
mov
daa
cwtl
arpl
sarl
push
dec
nop
pop
popf
inc
xorl
adcl
jle
cmpl
pop
dec
pusha
xchg
pop
sub
mov
mov
inc
mov
sahf
mov
lret
es
stos
out
jnp
pop
sbb
lret
test
sub
test
mov
add
enter
mov
dec
fidivs
push
addr16
hlt
sti
sub
cmp
pop
dec
jge
pop
xor
push
add
out
std
jno
xor
cmp
and
insb
notl
popf
and
add
inc
mov
daa
sahf
cmc
and
repz
fwait
pop
inc
dec
jbe
incb
xchg
xor
insl
dec
int
out
insb
test
test
adc
mov
imul
ret
mov
sub
and
and
test
or
aas
mov
cmc
xlat
xchg
mov
push
mov
jecxz
imul
and
and
fstpl
dec
cmp
sti
insb
mov
cmp
mov
fidivs
aad
mov
aaa
dec
jo
push
jns
int3
enter
pop
xor
mov
fwait
ret
sbb
mov
xchg
push
push
sbb
lds
pop
dec
inc
into
mov
shlb
cmp
xor
jno
repnz
sbb
jl
cmp
add
inc
mov
call
jno
nopl
stos
ja
pop
inc
jbe
loop
pop
lcall
mov
sahf
int3
fnstsw
or
xchg
mov
fldenv
or
je
push
mov
mov
test
or
and
mov
xor
sbb
bound
or
jge
jge
push
adc
int
and
call
rorb
inc
ds
lods
test
add
iret
or
and
xor
mulb
mov
imul
add
sahf
push
sub
and
mov
inc
dec
push
loop
mov
dec
push
cmp
into
dec
xor
dec
sub
and
fs
inc
cmp
mov
aad
dec
sbb
jle
jb
adc
cmc
sbb
push
cmp
cmpsb
int3
clc
movsl
dec
inc
iret
cmpsl
mov
mov
push
cld
xchg
sub
mov
clc
insl
test
inc
imul
in
dec
add
dec
out
daa
into
in
sarl
rcll
pop
test
adc
sub
dec
pop
push
mov
push
sbb
dec
push
xor
aam
roll
jns
adc
shll
fisubrl
imul
inc
movsb
imull
scas
lcall
daa
dec
add
push
jae
or
adc
jns
data16
ljmp
and
daa
sarl
fsubl
scas
clc
push
lret
imul
movsb
iret
in
scas
fadds
mov
cltd
das
dec
jg
dec
pop
dec
repnz
fwait
inc
faddl
clc
in
stos
dec
sbb
dec
or
cmp
xchg
sub
push
xchg
sahf
lcall
pushl
loopne
xchg
mov
les
and
gs
xlat
jmp
pop
push
jecxz
cmovb
pop
call
push
jnp
mov
push
les
cmp
std
jae
in
sbb
inc
jl
xor
xchg
cmp
mov
dec
rolb
jg
mov
test
push
sub
push
inc
dec
cmpsl
sub
inc
cmp
mull
and
arpl
or
jns
jge
xor
call
dec
jecxz
cmp
pop
xchg
imul
fstpt
push
repnz
lods
cmp
inc
test
out
out
stos
movsb
or
or
pop
test
lcall
in
push
xchg
xor
sub
fdivs
inc
mov
add
rcll
xchg
popa
mov
sub
jo
sarb
adc
push
mov
mov
cmpl
jge
movzbl
add
adc
jmp
push
push
push
pushl
call
shrd
jmp
outsb
fwait
push
movsl
or
movsb
js
popf
out
sbb
jno
pop
daa
jmp
fsts
sub
pop
ds
mov
popf
insl
dec
adc
icebp
sub
cmp
lea
into
cmp
xlat
mov
jo
sbb
push
mov
ret
xor
sub
xor
sub
mov
adc
bound
jge
push
inc
ds
fcomp
enter
pop
shll
pop
cwtl
ss
nop
out
cmpb
stc
push
push
scas
test
pop
sub
fiaddl
sbb
jbe
or
outsb
das
inc
dec
into
sub
add
hlt
pop
push
fldt
cli
test
inc
xchg
cmp
pushf
outsb
leave
xchg
loop
sub
push
jmp
push
pop
cmp
lahf
mov
adc
call
xchg
mov
cmp
cmp
cmp
xor
and
mov
xor
dec
es
inc
xor
data16
sub
jmp
sub
daa
call
leave
in
mov
loope
adc
out
lock
cmpsb
adc
outsl
lods
pop
sarb
bound
xlat
fs
mov
push
cmp
mov
and
cld
push
aam
mov
mov
std
jae
and
jbe
mov
pop
adc
lahf
pop
and
loop
sbb
out
mov
or
pop
sbb
push
inc
pop
outsb
push
les
or
movsb
or
insl
jo
testb
jmp
sbb
loop
push
fwait
daa
inc
std
aaa
sbb
cs
sbb
pop
jmp
lret
push
pop
imul
mov
in
fiaddl
push
aam
fs
jo
adc
mov
sbb
lret
mov
pushl
insb
out
ja
ja
icebp
lahf
out
push
push
inc
clc
mov
sahf
adc
jo
xor
cmp
loop
aam
inc
in
jo
sbb
push
out
aas
sbb
sub
pop
je
pop
fnstsw
push
sbb
push
rolb
lods
test
cs
xchg
dec
insb
dec
pop
dec
std
cmc
insb
or
push
in
inc
iret
sbb
or
rcll
cltd
pop
fistpl
jl
mov
add
rorl
mov
inc
fimull
push
inc
mov
xor
mov
outsl
shlb
js
mov
or
mov
int3
lock
ret
inc
adc
stc
add
jle
sbb
cld
aas
fbld
imul
jge
stos
in
xor
mov
or
lahf
rcrl
jmp
sub
push
mov
mov
ja
fs
dec
dec
sbb
fisubrl
xor
aam
lock
jae
or
js
je
insb
loopne
cmp
lods
std
push
cmpsb
fcoml
movsb
sar
fdivrs
jmp
into
in
fimuls
jne
xchg
enter
cld
pushf
mov
roll
sub
pop
mov
cmp
iret
or
sahf
or
mov
or
movsl
add
xchg
sub
adc
ljmp
add
inc
jbe
mov
fildll
enter
xlat
ja
out
pop
test
cmpsb
aaa
arpl
xlat
jp
aas
xchg
mov
push
push
in
sbb
fcmovnb
fsubr
aas
sbb
cmp
gs
jns
cltd
pop
mov
cmp
xchg
jno
inc
in
dec
lea
movsl
lahf
cmpsb
or
pusha
leave
push
mov
call
mov
cmpsb
jb
jge
inc
push
imul
and
dec
mov
inc
cld
push
call
pop
adc
fstps
out
sbb
andl
mov
aad
test
sub
and
les
sbb
adc
fsubs
mov
lea
lds
out
adc
in
jno
sub
push
loop
jne
push
dec
je
adc
dec
aaa
repnz
adc
xor
mov
fisttpll
out
cmp
sub
add
inc
fsubr
insl
inc
inc
stos
ljmp
xor
lock
jp
out
push
or
fs
xor
mov
xchg
pop
inc
lahf
or
lods
iret
insl
inc
and
decb
or
test
xchg
aas
pop
mov
arpl
lods
push
xor
sub
frstor
neg
jo
cmp
or
xchg
loop
in
shlb
mov
pop
lret
cmc
test
negl
lods
lock
aad
inc
dec
xchg
stos
fsts
and
fiadds
je
popf
mov
mov
sub
std
push
jg
mov
pop
xlat
xor
repz
sub
push
imul
sbb
mov
in
imul
mov
inc
divb
dec
fiaddl
cmpsl
test
test
js
or
bound
jle
notl
xlat
cmpsl
jmp
out
test
rcrb
sub
xor
mov
jle
and
xor
enter
adc
lcall
and
or
pop
and
pop
and
adc
outsb
cmc
popa
lea
push
inc
fdivs
call
lods
adc
sub
xor
outsb
xorl
cmp
or
xchg
xchg
imul
rclb
cli
pushf
stos
das
xchg
mov
fs
sbb
xchg
mov
lods
adc
and
push
mov
scas
mov
sahf
push
push
pop
sbb
fsts
mov
sub
or
test
cld
or
mov
xor
gs
add
cs
mov
cli
cmp
push
imul
and
inc
call
sahf
shll
push
push
jo
repz
outsl
cmp
mov
daa
xchg
fdivl
icebp
mov
lods
imulb
push
movsb
xchg
arpl
mov
inc
icebp
xor
nop
imul
movsl
inc
outsl
rcll
insb
in
std
fidivl
inc
outsb
and
cmc
inc
jl
jo
push
shr
mov
jne
popf
dec
addr16
aad
push
pop
cltd
movsl
cmpsb
add
push
inc
insb
ss
mov
mov
insb
mov
or
cmp
adc
sbb
call
sbb
mov
out
call
lock
je
or
dec
fwait
ret
mov
jns
scas
add
xor
ficoms
int
xchg
lods
fldl
shll
xor
xchg
pop
cmp
data16
cltd
testb
add
loop
clc
std
xchg
fdivl
cmc
loope
stos
inc
lock
pop
fistl
jle
pop
cmp
leave
fisubl
test
cmp
outsb
mov
cld
inc
subb
sahf
and
jbe
mov
ja
jb
addr16
roll
jecxz
xor
cmpsb
xor
test
xchg
push
sarl
movsl
jo
xchg
mov
insb
js
shll
scas
divb
xor
xor
test
je
xchg
mov
mov
sbb
cltd
jae
dec
pusha
sarl
dec
xor
fistpl
shr
mov
mov
adc
xor
and
mov
sbb
xor
sbbl
or
mov
sub
mov
mov
subl
shl
mov
and
mov
mov
shrd
movl
xor
addl
shr
mov
mov
sbb
mov
mov
mov
mov
sub
sub
xor
decl
or
orl
jmp
cli
int
lahf
push
or
inc
cmpsb
ss
cmp
sbb
adc
addl
mov
lcall
ffree
inc
pop
gs
fdivrl
repz
dec
mov
push
cld
call
shl
lock
sbb
ljmp
pop
pop
xor
lods
xchg
test
jge
sahf
pop
pop
push
mov
imul
leave
pop
lret
mov
inc
inc
pop
cmp
cmp
xchg
out
cmp
loope
movsb
loop
add
or
dec
mov
je
add
xor
xor
enter
push
jp
mov
into
rorb
incl
ret
aad
insl
cld
mov
xor
xchg
mov
lret
lds
or
ret
dec
mov
movsl
jmp
sahf
push
jp
or
loopne
cmc
std
mov
inc
data16
dec
cmpsb
arpl
fwait
shrb
mov
rcrb
mov
inc
mov
mov
insl
or
pop
pop
dec
fwait
xlat
mov
xchg
out
mov
sbbl
push
ljmp
push
mov
push
lahf
out
push
sub
xor
or
mov
pop
push
inc
loopne
push
xlat
rorl
pop
lods
mov
xor
lcall
push
mov
into
fs
mov
or
mov
jne
push
mov
jnp
adc
mov
mov
mov
lahf
pop
pop
mov
sbb
push
lods
lret
lahf
sbb
or
loopne
movsb
fildl
hlt
lahf
mov
je
pusha
jo
xchg
outsb
xchg
push
test
roll
ds
pop
jne
xchg
insl
repnz
gs
sti
in
push
iret
push
mulps
out
xchg
mov
cmp
pop
ret
add
xchg
pushf
inc
ss
sub
sub
pop
ret
sub
mov
dec
dec
or
adc
jl
push
xchg
iret
rol
mov
push
mov
ljmp
das
xchg
xor
mov
sbb
or
push
in
push
push
out
popa
jnp
test
inc
mov
and
cmp
dec
insl
repnz
ret
mov
jg
fcomps
inc
outsb
loop
leave
or
dec
lods
test
mov
aaa
ret
ja
lds
sub
lcall
jl
xchg
jae
lahf
leave
dec
fwait
and
mov
pop
popl
fdivrs
loope
xorl
and
push
daa
stc
mov
cmpb
mov
jl
popa
loopne
jbe
sbb
insb
mov
dec
push
sub
cmp
fistpll
filds
inc
jae
pop
pusha
xchg
or
iret
mov
xor
cmp
adc
addb
jnp
xorl
aad
or
adc
ss
mov
in
cs
sub
dec
sub
jg
mov
add
mov
jecxz
cli
lret
shlb
lahf
add
aam
dec
or
mov
mov
std
cmc
cmc
lret
adc
mov
out
icebp
in
out
push
add
call
add
daa
rcrl
sub
hlt
aam
std
divb
fidivrs
cmc
out
mov
xlat
sub
mov
insb
jp
mov
in
jle
xor
lock
aad
std
movsl
lock
mov
pop
bswap
les
dec
xor
sbb
iret
dec
cmovns
or
cmp
neg
int
fmull
pop
scas
pop
or
xlat
add
pop
and
mov
out
insl
mov
sbb
add
ret
cmp
sahf
les
push
or
js
stos
jb
sti
mov
cmpsl
fstpl
sbb
hlt
add
call
adcb
in
and
ret
adc
adcb
or
push
int3
and
jge
or
mov
lea
push
xor
fcmovnu
outsb
out
fldenv
push
aas
cltd
out
loopne
jbe
rcll
rcrl
dec
jo
std
mov
mov
xor
adc
lods
mov
or
push
roll
push
adc
lods
rorb
test
ljmp
test
add
add
jmp
push
mov
adc
cmp
jmp
or
jp
ja
test
or
push
fwait
push
mov
je
test
xchg
add
or
xchg
mov
and
jo
orl
mov
xchg
adc
enter
pop
inc
lods
and
or
jno
mov
mov
or
in
mov
mov
pop
dec
das
aaa
imul
mov
xor
mov
stos
and
test
cli
ja
cmp
jae
push
mov
dec
les
sub
lcall
js
int3
in
push
fs
xchg
or
dec
in
shl
dec
rolb
pop
mov
sub
out
out
sbb
mov
lods
pop
adc
addr16
jp
mov
push
lret
shl
pop
inc
test
fwait
sbb
pop
mov
inc
mov
int3
in
cmpsl
in
adc
sbb
xchg
mov
popf
xchg
mov
and
cmc
jnp
and
js
jmp
imul
or
scas
js
mov
call
lock
pusha
test
jns
push
cmc
test
arpl
sbb
cmp
dec
jecxz
jae
lods
loope
sub
jae
fsubr
or
or
and
dec
dec
sub
sbbb
inc
inc
mov
push
jmp
mov
mov
mov
into
pop
xchg
sahf
aaa
or
sub
out
in
int
clc
xor
sub
stc
xchg
dec
fwait
mov
fiadds
enter
jg
imull
push
and
jno
push
push
call
movsb
enter
hlt
mov
mov
mov
cli
popf
pop
lea
mov
mov
mov
loope
xchg
mov
xchg
mov
repnz
push
int3
xchg
imul
mov
mov
dec
arpl
mov
les
popa
cld
mov
inc
mov
mov
jecxz,pt
fsub
into
stos
loope
xchg
lock
lds
shll
jg
push
clc
bound
imul
inc
pop
les
xchg
adc
add
popa
jne
scas
sahf
rcrb
mov
inc
cmc
lahf
movl
mov
out
lcall
fcmovne
fimuls
rclb
outsl
je
mov
and
push
pop
bswap
jae
mov
xchg
or
js
and
xchg
insb
or
xorl
mov
stos
adc
cmp
nop
sbb
nop
notl
push
fs
ficoml
cmpl
je
iret
test
call
popa
jo
and
repnz
outsl
ss
push
mov
imul
dec
push
pop
mov
and
dec
aad
xor
dec
adc
add
dec
mov
sub
lret
inc
aam
decb
incl
sbb
mov
xor
or
mov
adc
mov
jmp
movsb
dec
dec
jo
gs
adc
push
int3
xchg
push
adc
addl
mov
mov
adc
add
xchg
xchg
lcall
dec
test
lret
out
mov
xor
inc
push
fst
or
xchg
push
ja
mov
in
dec
mov
sbb
shl
sbb
push
sti
test
sub
mov
jne
imul
mov
xchg
xor
adc
mov
pushf
int
pop
int3
inc
pop
dec
pop
jne
sbb
movsl
xchg
pop
pop
pop
inc
aaa
les
jnp
in
mov
incl
lods
push
push
inc
addr16
pop
call
outsl
and
hlt
iret
inc
loope
mov
loope
jae
add
mov
jmp
xor
sahf
dec
mov
sbb
pushf
cmp
mov
jns
out
pop
sbb
cld
inc
pop
subb
adcb
adc
cs
jne
jge
and
xchg
mov
xchg
xor
nop
ror
cmp
cs
gs
cmp
mov
mov
sub
out
pop
mov
inc
push
aam
xor
or
xlat
int
ds
inc
shlb
lret
jo
es
jg
subb
jmp
add
pop
sbb
imul
mov
rcr
aam
pushf
inc
scas
or
pop
ss
loopne
and
jmp
lahf
pop
sbb
loopne
add
in
leave
adc
push
addr16
cmpl
fnsave
imul
popl
mov
addr16
xchg
nop
inc
js
or
mov
adc
dec
rep
lods
jbe
pusha
scas
jg
sar
xchg
add
cmpl
les
add
dec
outsl
pushf
out
dec
pop
push
in
xlat
mov
loop
stos
sub
andl
aas
pop
lock
xor
insb
icebp
sbb
xchg
pop
bound
cmpsl
sub
mov
movsl
imull
popa
shll
sbb
xchg
cmp
mov
dec
aaa
ja
jns
pop
pop
arpl
push
aaa
into
jl
and
sub
movsl
les
lret
lcall
test
sbb
notl
add
cmpsl
sub
ds
mov
aas
js
js
out
adc
mov
cld
mov
pop
fs
enter
mov
ja
enter
dec
mov
fisubrl
and
add
lds
sbb
insl
or
mov
mov
incl
xor
nop
inc
push
or
fsubl
xor
das
into
xor
into
popa
test
lods
xchg
push
daa
or
add
mov
dec
mov
ja
cmp
dec
loopne
inc
bound
fstl
jp
pop
in
ss
aaa
cmpb
pop
push
inc
cmpsl
jge
dec
adcl
sar
subl
push
adc
pop
jno
jbe
gs
mov
incb
cmpsl
lret
enter
imul
pusha
cmp
jp
dec
mov
loop
repz
jmp
icebp
dec
and
fmulp
cmp
jns
sub
jle
ja
jg
sbb
dec
mov
jo
rep
mov
or
mov
bound
pop
mov
jns
lods
js
lods
lcall
test
push
pop
vpsrad
ret
or
inc
or
dec
les
jl
mov
mov
imul
imul
pop
mov
xchg
pop
and
inc
dec
test
xchg
xor
enter
mov
stc
xlat
jne
test
pusha
mov
lret
push
push
ss
stos
pop
ja
in
dec
loope
or
out
test
mov
sub
add
or
push
test
outsb
out
hlt
inc
enter
pop
out
aad
pop
push
sbb
test
add
loopne
shl
cmpsl
push
lret
repz
clc
and
mov
push
sbb
push
aaa
push
leave
popf
dec
xor
into
jl
out
ja
ret
jnp
mov
sub
or
or
call
cmp
fstl
sub
xor
dec
dec
lahf
xor
mov
mov
in
jmp
mov
int3
push
in
mov
insl
inc
lock
sahf
rcrl
and
xor
add
notb
je
in
adc
cmp
addl
out
inc
and
xor
push
andb
pop
in
sub
and
mov
or
sub
mov
mov
sbb
sub
inc
jecxz
into
sub
popa
or
lods
bound
inc
in
icebp
inc
daa
mov
lahf
not
cmpsb
mov
cmpsl
mov
inc
dec
les
mov
jecxz
adc
pusha
xor
dec
fiaddl
cmp
dec
mov
push
call
jns
clc
or
xlat
pop
mov
leave
mov
js
outsb
xchg
test
pop
jmp
and
or
push
inc
push
push
push
adc
arpl
ja
mov
and
pop
and
push
int3
sub
dec
sbb
dec
push
jle
inc
xchg
jecxz
es
shr
arpl
popa
and
popa
movsb
mov
test
xchg
mov
stc
jbe
out
lret
xor
mov
lods
icebp
icebp
call
addl
mov
lock
jl
mov
xor
jmp
cmp
push
test
enter
inc
mov
sarl
add
jge
arpl
rorl
into
xchg
out
bound
nop
and
in
push
push
repnz
dec
xchg
dec
lods
and
mov
test
inc
inc
js
pop
mov
pop
dec
rcll
leave
enter
fstpt
and
stos
out
jle
ljmp
inc
fnstsw
leave
pusha
test
mov
in
cmpl
pusha
push
jl
pop
mov
stc
repnz
jge
cmovg
loop
sbb
pop
stos
in
lea
pop
fidivrs
call
in
sarb
andb
movsl
cltd
pop
nop
push
xchg
ret
mov
push
cmp
filds
insb
fdivrl
scas
leave
lods
loopne
add
push
rorb
mov
scas
or
pop
xor
hlt
or
mov
fcomps
iret
fldenv
in
push
flds
push
xchg
and
jecxz
hlt
aas
and
cwtl
ret
jg
push
inc
sub
sbb
out
mov
cmc
movsl
xlat
push
sti
addr16
xchg
add
aaa
arpl
shll
or
inc
sub
mov
pop
or
adc
lret
mov
dec
imull
es
mov
mov
xor
sub
inc
rol
lds
and
jp
dec
push
mov
cli
sbb
cmp
pop
xchg
jo
sub
dec
dec
push
lcall
mov
lret
dec
les
inc
pop
sub
mov
ja
idivb
lret
shlb
xorb
lret
mov
fisubl
cmpl
jl
subl
jmp
pushl
pushl
call
mov
mov
mov
mov
mov
mov
shl
xor
shld
cmpl
jg
dec
jmp
pushl
call
shl
mov
xor
xor
movl
movl
movl
cmp
movl
jne
movl
cmp
je
subl
mov
mov
cmpl
jg
add
jmp
pushl
push
pushl
push
push
push
push
pushl
call
mov
mov
xor
shld
shl
xor
addl
xor
movl
cmp
movl
jne
cmp
je
mov
mov
shl
mov
xor
movl
shr
or
sbb
mov
cmpl
ja
and
jmp
push
push
pushl
call
mov
mov
mov
mov
mov
jmp
bound
clc
xchg
xor
xchg
outsl
inc
adc
addl
cmp
in
add
push
lock
outsl
je
arpl
mov
push
mov
add
mov
pop
dec
mov
add
sub
xchg
push
pop
or
sbb
adcb
mov
push
sbb
mov
das
push
mov
out
push
repz
cmp
pop
cmpsl
sbb
cmp
sbbl
into
std
test
mov
aam
lcall
inc
ds
pop
cmp
cs
dec
mov
add
xor
leave
cmpsb
xchg
sub
or
mov
test
mov
cwtl
push
arpl
ficoml
fnstenv
inc
adc
xchg
lds
sub
dec
leave
inc
dec
stos
imul
jmp
outsb
test
or
xchg
jnp
dec
push
cmp
fs
inc
jge
scas
add
sbb
test
mov
pop
sub
ret
mov
sar
cmp
shll
xlat
inc
jg
push
call
movsl
or
sub
imul
pop
jae
ljmp
jmp
into
lods
add
call
mov
icebp
mov
pop
stos
pop
jmp
ss
ss
xchg
out
mov
out
rcl
or
inc
sarb
cs
push
mov
loope
int3
inc
dec
sbb
popa
jnp
hlt
cwtl
test
repnz
mov
mov
jnp
lods
stos
inc
xchg
or
dec
in
js
out
cld
test
add
leave
pop
sbb
daa
in
out
insb
xchg
inc
repnz
daa
fldenv
js
sbb
push
ja
loopne
dec
push
frstor
sub
mov
fdivrl
outsl
jle
xchg
mov
scas
imul
lret
or
sub
data16
mov
xchg
jg
outsl
jne
insl
add
adc
test
stc
sbb
xor
pop
pushf
fistpl
dec
rorl
jo
lods
cmpsb
mov
xchg
mov
add
jmp
hlt
rcrl
pop
lods
repnz
int3
sti
adc
repz
shr
imul
dec
add
mov
or
fdivrl
in
pop
push
aas
loope
push
out
shrb
or
dec
jmp
test
jmp
notb
pop
movsb
or
sahf
test
dec
fcoms
or
mov
fmull
inc
pop
xchg
xchg
dec
flds
sahf
mov
sbb
jg
add
adc
adcb
jno
mov
vmread
ret
pop
mov
scas
mov
fisubl
jnp
pop
cmp
or
inc
xor
dec
fnstenv
dec
inc
nop
xchg
xchg
icebp
cmpsb
addr16
ret
sahf
neg
es
mov
fimull
shrw
xor
loop
movsl
hlt
inc
mov
addr16
xchg
scas
push
ja
mov
sbbl
adc
push
ficomps
fs
in
xor
sti
lds
fdivp
call
sbb
out
iret
sbb
aas
sbb
and
sbb
mov
or
dec
in
adc
cmpsb
out
push
cwtl
dec
scas
jl
xor
add
adcl
pop
pop
adc
icebp
dec
cs
imul
xor
mov
cmc
cld
inc
or
andl
xchg
mov
aaa
imul
mov
jmp
movsl
pop
stos
shr
jbe
pop
push
rcrl
stc
insl
das
in
les
jg
add
sbb
and
outsb
aad
cmpsb
lock
in
jl
jp
mov
and
popf
adc
xor
inc
mov
jg
rolb
sbb
pop
ljmp
add
or
mov
jl
aad
mov
jg
ja
xor
xchg
dec
cltd
inc
mov
mov
xchg
jmp
jmp
ret
fimull
outsl
jle
mov
push
ret
sbb
icebp
adc
push
cmp
push
xor
divl
push
loopne
add
mov
dec
arpl
dec
mov
adc
dec
and
rol
es
jmp
inc
imul
xor
sub
rol
push
and
sahf
jae
dec
es
cmp
lds
mov
dec
or
xor
pop
jle
movsb
pop
adc
xchg
jae
and
xchg
sbb
jns
mov
imul
aam
aad
adc
lods
js
fiaddl
fs
insb
inc
fisttpl
lods
and
or
jnp
rcll
cs
add
test
fdivrs
cmp
xchg
fnstenv
pop
lods
rcrb
ljmp
mov
scas
sahf
jb
and
repz
pop
fwait
in
mov
xchg
and
push
out
cmp
fdivl
cmp
out
pop
sbb
icebp
push
incl
mov
mov
xlat
mov
in
jp
fwait
mov
jl
test
or
pop
or
xchg
mov
roll
stc
push
cltd
gs
inc
aas
fnstcw
cld
pop
test
addr16
lret
jp
push
es
xchg
icebp
sub
xor
dec
mov
pusha
cmp
mov
adc
lea
xor
cmp
aam
outsb
push
aad
mov
push
out
jne
jp
or
mov
adc
xor
adc
xchg
repz
cmpsb
and
inc
ret
rcrb
je
push
in
push
xchg
in
mov
fimull
rorb
js
push
test
inc
and
ss
das
inc
push
mov
rol
outsb
jecxz
movhps
cmp
cwtl
mov
mov
rclb
mov
jb
or
cmc
imul
repnz
xor
xchg
jg
decl
pop
movsl
or
adc
jle
test
mov
dec
fnstsw
fsub
jb
xchg
add
and
xor
lods
push
hlt
sbb
repz
repz
addr16
arpl
pop
pop
sub
sbb
sub
pop
mov
dec
cmpsl
or
push
lret
mov
push
push
sarb
popa
push
mov
sarl
arpl
sbb
add
add
sbb
sarl
hlt
mov
cmpl
and
daa
pop
test
cmp
push
jne
fsubs
mov
mov
push
mov
aaa
cmp
lock
adc
clc
inc
jno
and
xor
std
outsb
daa
or
mov
pop
rcrb
and
mov
ficoml
shrl
and
xchg
in
stos
add
and
push
mov
aaa
cmp
test
incb
icebp
push
dec
jae
out
inc
lret
and
stos
in
adc
cmpsl
jecxz
movsl
imul
stc
and
add
sbb
add
in
cmp
adc
xchg
in
lahf
fbstp
je
mov
mov
imul
xor
sub
jo
sub
mov
push
inc
cmc
sti
pop
dec
add
add
sbb
pop
xorl
sub
mov
add
mov
lea
mov
xor
mov
mov
mov
adc
jmp
fbld
and
sahf
aaa
inc
loope
adc
addl
test
es
aaa
mov
sbb
inc
repnz
stos
sbb
inc
out
movsb
imul
dec
sbb
lods
scas
sbb
fidivrl
mov
je
cli
in
fidivs
or
push
inc
jmp
cld
ljmp
xchg
outsb
jbe
adc
insl
xchg
pop
popa
push
jo
mov
push
test
cs
negb
jmp
cld
dec
jecxz
mov
int
pushf
fwait
in
arpl
sub
popf
popl
xor
push
mov
push
movups
xchg
sbb
dec
adc
sahf
xchg
mov
xor
nop
cli
pop
decb
mov
cld
or
inc
popf
cmc
xor
outsl
push
lods
mov
test
and
test
dec
inc
das
jo
or
dec
loop
fstps
sub
ret
ret
cmp
sbb
mov
aas
and
pop
mov
mov
daa
or
xchg
push
iret
cmp
mov
test
popa
rcll
rclb
xor
mov
adcb
fs
cmpb
bound
aam
ret
scas
fwait
pop
loop
or
lds
inc
das
cmp
sahf
xor
fisttps
lahf
sub
popf
push
pop
dec
inc
or
cli
adcb
lods
mov
fbld
fsts
arpl
sbb
mov
pop
inc
mov
cmp
jno
sbb
push
xchg
inc
adcb
dec
xchg
andl
mov
fldenv
xchg
jp
nop
test
fldt
mov
jbe
add
cmp
outsb
mov
test
cmp
shll
or
mov
insl
mov
fs
stos
notb
inc
cmp
lock
shlb
cwtl
subb
mov
pop
test
sbb
bound
loop
sbb
mov
mov
in
add
add
frstor
inc
insl
ficomps
movl
pop
dec
nop
xor
es
adc
cmpl
lods
add
mov
push
shlb
adc
in
mov
dec
stc
fwait
pop
rcrb
cmp
sub
into
outsl
mov
push
out
or
out
adc
decb
pop
pusha
cmc
inc
and
rclb
test
movsb
shrl
sbb
pop
jmp
popf
lret
xchg
clc
jmp
mov
inc
rcrb
lods
fs
pushf
mov
mov
aas
mov
adc
dec
movsl
lcall
or
rcr
add
imul
xor
pop
xlat
inc
xlat
cmp
pusha
pop
cli
lods
mov
push
mov
sbbb
fistpl
adc
xchg
sub
cmp
push
hlt
stos
arpl
mov
push
std
es
jns
and
sbb
dec
lcall
shlb
mov
insb
xlat
cmpsb
or
leave
scas
pop
mov
test
lea
lea
pop
jmp
ret
inc
cmp
pushf
pop
lret
push
rcrl
lds
test
es
dec
xor
pushf
std
push
xchg
or
out
aas
and
mov
pop
clc
push
clc
pop
sbb
jb
ret
test
adc
out
jne
fimuls
testb
and
ret
lret
push
add
test
xchg
pop
inc
add
popa
ds
sub
int3
stos
iret
test
lods
and
cmp
inc
popf
aas
test
dec
jp
xchg
adc
push
xchg
pushf
and
iret
dec
shll
cltd
xor
cmpsb
test
fwait
sbb
movsb
loop
or
lahf
sbb
sbb
aaa
mov
mov
xor
movsb
sbb
maxps
enter
push
clc
cmc
xor
sbb
cmpsl
pop
je
test
push
jae
lods
pop
or
add
cmp
push
xor
shr
lret
std
fsubs
and
jge,pn
or
popa
xchg
sbb
outsb
aaa
cmp
xchg
ret
lcall
pop
pop
enter
out
lock
mov
xchg
pop
xchg
inc
jns
aam
pop
repnz
ret
or
xchg
mov
jb
leave
out
cmp
mov
sub
cmc
lods
inc
push
loop
xor
stos
adc
push
cs
mov
mov
and
insb
mov
or
cmpsl
sub
or
std
inc
mov
sbb
sahf
pushf
rol
js
out
outsl
sbb
lret
mov
prefetch
push
lahf
ret
cld
or
xchg
lock
adc
cmp
sbb
sub
popf
into
and
pusha
xchg
bound
fnstsw
pop
mov
cmp
mov
pop
insl
into
xchg
pop
xlat
inc
xchg
dec
xor
xor
sub
xlat
mov
xorl
test
push
scas
int3
xor
fstp
stos
dec
and
fimuls
mov
push
inc
ja
xchg
pop
sub
fdivrs
xor
pop
mov
inc
test
push
and
mov
rcrl
lret
mov
jbe
in
int
mov
add
insl
xor
sub
loop
jne
push
inc
xchg
addr16
outsb
push
sub
jl
push
loopne
cmp
fs
cs
das
push
sbb
xor
or
and
popa
jnp
or
shl
shlb
jp
inc
adc
or
out
mov
add
xor
push
add
or
jnp
pusha
popa
push
idivl
sarb
fs
and
sbb
roll
sub
sbb
or
mov
jg
sbb
lds
pop
sub
repz
iret
mov
mov
out
gs
xor
xor
sbb
pop
sub
dec
xchg
je
outsl
inc
pop
test
dec
ja
push
push
movsl
dec
addr16
jno
loope,pt
cmp
mov
adc
test
scas
sub
out
pop
mul
ret
cli
push
mov
jecxz
mov
add
mov
aam
rcr
pop
test
dec
sbb
loop
popf
push
sub
stos
cmc
pop
mov
in
inc
xchg
jecxz
and
das
scas
sbb
mov
fwait
inc
mov
mov
movsl
je
inc
pop
push
fisttpll
loop
pop
add
incl
cmp
pushf
inc
pop
mov
imul
imull
imulb
popa
out
mov
icebp
mov
inc
ss
outsb
stc
cwtl
in
sbb
rorb
fsub
dec
sub
push
bound
icebp
imul
push
aam
daa
mov
icebp
fisttpll
mov
push
cmp
fdiv
adc
push
add
cmp
cmp
jp
mov
ret
sbb
pop
cmp
daa
mov
dec
frstor
cmp
ret
mov
cmp
roll
xchg
int
push
xor
push
xchg
push
ljmp
jbe
out
pop
aam
xchg
adc
pop
xchg
mov
imul
das
mov
or
aaa
cli
in
repnz
shlb
addb
jmp
xor
cmp
fildll
or
and
add
movl
add
call
inc
inc
add
inc
add
loope
adcl
or
movzbl
sbb
mov
mov
mov
and
movl
sub
mov
neg
mov
xor
shr
negl
shl
or
subl
push
lea
sbbl
push
lea
orl
push
call
and
mov
cmpl
jb
jmp
push
push
pushl
pushl
call
mov
xor
shr
shl
or
push
lea
push
mov
sub
mov
shrd
shr
cmpl
jg
xor
add
mov
sub
imul
jmp
push
push
push
call
mov
mov
movl
xor
addl
xor
or
andl
lea
push
shl
movl
call
mov
sbb
mov
sub
xor
shl
adc
shr
or
mov
sub
push
sub
lea
push
orl
mov
inc
mov
incl
shrd
shr
or
mov
mov
sbbl
xor
shl
xor
movl
or
adcl
lea
push
call
and
mov
or
mov
cmpl
jl
mov
and
xorl
jmp
pushl
call
xor
shl
shr
or
addl
jmp
xchg
adc
inc
adc
xchg
popa
aaa
repnz
cmp
adc
addl
stos
int
aas
clc
es
pop
fwait
scas
and
and
inc
inc
jno
sti
push
push
scas
dec
sbb
sub
cmpsl
pop
mov
movsl
int3
xor
aas
ds
add
mov
sbb
imul
icebp
aaa
pop
push
sbb
leave
push
jb
scas
cld
aad
push
dec
fildl
call
daa
repnz
nop
lds
ja
push
stc
jp
cmc
jg
fcomps
test
jmp
cli
add
leave
or
and
dec
sarb
call
mov
cwtl
mov
push
leave
or
inc
ljmp
lods
fidivrs
xchg
push
jl
mov
lea
cwtl
lea
cs
sub
mov
push
push
inc
push
jl
adc
xor
sti
and
andl
adc
cmpb
xorl
dec
mov
push
in
dec
xorb
jnp
xchg
clc
mov
js
sti
inc
shlb
adc
outsl
mov
sub
xchg
add
sub
arpl
jae
js
or
xchg
mov
adc
add
call
jae
out
inc
mov
add
jo
sbb
jge
shlb
mov
leave
pop
les
pop
push
sub
repnz
cmpsl
arpl
imul
jl
js
mov
in
add
sub
adc
mov
ret
mov
std
inc
insb
adc
repz
push
orl
imul
dec
inc
and
cmpb
test
push
rclb
aaa
and
mov
add
inc
lea
mov
fadd
or
loop
sahf
and
ret
stos
mov
push
je
into
lret
gs
mov
jge
mov
adc
lds
ss
shll
inc
loop
mov
push
ss
xor
mov
push
push
xchg
jle
adc
inc
enter
pop
inc
and
shlb
ds
pushf
ret
add
leave
or
mov
and
adc
and
push
in
xorl
icebp
xchg
add
pop
xchg
jecxz
mov
jb
jg
add
cmp
in
mov
movsb
push
mov
dec
and
xchg
lock
xor
incl
xchg
ret
je
cltd
lea
mov
hlt
jns
xor
loope
sub
and
dec
xchg
decb
shl
repz
enter
dec
mov
fadds
adc
pop
adc
and
rcr
sbb
dec
lds
ds
pop
add
pusha
pop
mov
jl
out
sbb
push
dec
les
xor
or
popa
in
aad
stos
dec
cli
mov
xchg
in
stos
add
mov
xor
shlb
pop
mov
sub
cmc
push
jle
mov
out
lahf
lret
out
cwtl
jle
les
sbb
mov
xor
pop
sbb
sub
fs
pop
jno
xchg
loopne
mov
xchg
pop
pop
aam
insb
stos
sub
mov
hlt
push
imul
pushf
xchg
sub
push
xor
sbb
push
aam
shll
cmp
pusha
scas
inc
push
jne
fdivs
jb
in
or
mov
fidivl
stos
pushf
dec
mov
dec
lret
mov
das
out
adc
xchg
jecxz
leave
dec
out
out
xchg
clc
mov
daa
out
cmc
mov
mov
bnd
repz
test
ror
pusha
xlat
pop
pop
divl
sarl
sbb
adc
sbb
rolb
or
add
outsl
sub
fbstp
nop
sbb
mov
sbb
push
mov
add
mov
shrl
mov
dec
inc
or
and
xor
jp
mov
adc
xchg
mov
adc
adc
mov
add
shlb
inc
cmp
in
mov
in
loopne
inc
addb
addl
in
aas
mov
fcmovnbe
fs
test
add
sahf
push
shll
outsl
jmp
jecxz
mov
push
sbb
mov
cmc
das
mov
lret
ret
inc
addr16
subl
mov
inc
pop
mov
inc
rcr
sub
cmp
pop
icebp
jns
jecxz
in
cwtl
pop
sub
data16
in
test
cld
ror
or
inc
test
ljmp
jns
das
jns
mov
mov
inc
sarl
enter
into
in
mov
xor
jmp
pop
push
xchg
sub
mov
mov
xchg
ret
xchg
cwtl
testl
sahf
movsl
push
mov
std
jb
push
adc
pusha
mov
int
sbb
daa
pop
and
loop
pop
xor
scas
add
popa
add
xor
sbb
cmp
lock
hlt
and
lret
dec
ljmp
and
int
int
sbb
sbb
enter
lock
mov
into
fildll
jns
orl
push
mov
addr16
mov
dec
cmp
jmp
xchg
lahf
cmp
sbb
adc
sub
or
sbb
jne
add
es
pop
jmp
mov
push
mov
roll
mov
daa
mov
mov
lds
test
or
fwait
sub
xchg
ja
mov
xchg
adc
outsb
int3
imul
or
ss
add
test
pop
xlat
scas
cmp
cltd
adc
inc
icebp
nop
xor
dec
dec
mov
pop
shrb
shl
bound
shrl
sub
mov
movsl
cmp
aaa
push
jmp
sahf
pop
sti
inc
dec
jo
popf
sub
pop
jno
mov
lods
icebp
into
out
sarl
push
repnz
jp
fdivrs
xlat
bound
dec
push
sbb
mov
nop
dec
push
mov
cld
mov
jo
insl
add
loop
push
mov
in
mov
fsubp
arpl
mov
mov
mov
xchg
pop
fimuls
fcoms
imull
push
bound
add
sahf
pop
jne
sti
divb
es
dec
dec
dec
mov
icebp
xchg
adc
fldt
jns
jecxz
stc
ret
cmpsb
pop
js
mov
jg
sub
add
jmp
jecxz
pop
pop
push
or
sbb
fwait
cmpsb
dec
add
push
adc
push
out
aas
es
inc
xchg
mov
jnp
jne
fldt
add
sbb
je
adc
sbb
dec
pop
sub
pop
mov
cmp
pushf
cmp
xor
push
add
xchg
mov
dec
cmp
xor
dec
mov
push
inc
clc
leave
push
aad
add
sbb
fs
std
cs
in
andb
mov
ds
data16
mov
mov
push
lds
dec
push
lea
sbb
push
adcl
mov
sub
mov
shrd
and
shr
mov
mov
adc
xor
xor
subl
or
shl
mov
sub
mov
movl
shrd
shr
adcl
mov
mov
xor
jmp
adc
sahf
dec
push
rcrl
fs
mov
addl
mov
daa
sbb
in
and
sub
add
xchg
mov
pushf
shl
pop
add
add
adc
adc
and
pop
shr
dec
loopne
jl
test
lret
mov
sahf
and
cmpsl
jnp
jle
mov
mov
cld
xor
aam
cmc
xchg
into
sub
sbb
pusha
out
orb
sbb
mov
int3
sub
pop
and
push
or
inc
xchg
arpl
aas
jmp
jp
shrb
bnd
ljmp
inc
rclb
js
lds
pop
out
sub
out
aam
fstps
adc
aam
mov
sub
mov
and
cmp
shll
xor
add
jb
test
jbe
cmc
dec
dec
ljmp
and
fistps
daa
lea
ss
sarl
cmp
push
imul
jno
or
ret
scas
mov
rolb
inc
iret
ja
loop
stos
sbb
xor
fdivrp
sbb
shlb
jg
mov
repz
mov
out
not
mov
lea
push
mov
fistpl
mov
iret
lahf
test
leave
cs
dec
call
mov
shl
fnstenv
clc
cmp
test
jge
adc
fcoms
cli
xor
xor
negb
outsb
aas
push
pop
rcl
add
push
fisubs
jg
popf
cld
test
cmp
xchg
cmpsl
in
cmp
pop
dec
stc
aad
pop
fcmovnu
push
push
iret
dec
push
jnp
sub
sbb
enter
push
inc
enter
out
mov
repnz
dec
mov
jnp
les
sarl
cmp
shrb
cld
pushf
mov
xchg
arpl
pop
push
xchg
loopne
adcb
push
lcall
in
jnp
jns
inc
or
dec
xor
mov
hlt
or
mov
cmc
insl
fwait
lahf
and
lcall
mov
push
ds
add
lds
je
xchg
fwait
jge
jl
cli
jnp
xchg
jb
loop
sub
je
popf
arpl
push
add
out
mull
cmp
shrl
cmc
movsl
mov
inc
clc
shlb
and
xlat
add
dec
les
push
cs
pusha
mov
pop
adc
fsub
adcl
xor
shrl
stos
fdivp
push
mov
pop
push
pop
test
push
jle
aas
sti
shll
stos
scas
push
sti
dec
test
cmpsl
ret
sub
jp
insb
add
mov
sbb
jecxz
xor
ror
or
xchg
jbe
mov
push
jns
cmp
scas
mov
jno
imul
scas
sbb
push
sbb
pop
sahf
adcl
ss
push
es
scas
imul
push
sbb
std
cmp
jb
std
push
sbb
push
sub
mov
lret
cmpsl
inc
bound
jg
mov
sbb
cmpsl
das
mov
cltd
push
xchg
mul
cmpb
popf
and
lret
cwtl
fmuls
pop
into
out
or
pop
xchg
stc
mov
jno
pop
or
jae
jge
out
lahf
cmp
test
ret
testb
sbb
daa
sbb
mov
inc
ss
hlt
repnz
pop
enter
inc
mov
mov
sahf
sbb
lods
das
add
aad
and
pop
or
mov
and
enter
outsl
daa
and
mov
cmpsl
js
ficomps
jae
mov
outsl
stc
push
lcall
test
es
loop
enter
sub
dec
or
fwait
ja
dec
or
in
stc
int
sbb
shrb
sbb
aam
out
aad
push
adc
jnp
imul
inc
push
lahf
xlat
jnp
in
cwtl
cwtl
sbb
pop
movsl
call
in
mov
outsl
aad
test
xchg
or
arpl
pop
js
cmp
out
insb
dec
jmp
jg
leave
jecxz
pop
and
add
lds
gs
dec
lods
testb
mov
call
jge
adc
rorl
out
lock
cmpsl
mov
xchg
rcrb
fisubs
fcoml
inc
jmp
mov
in
fs
movsb
inc
adc
sbb
popl
jecxz
out
xor
push
in
add
fs
pushl
mov
lcall
nop
shl
mov
movl
mov
fsubrs
sarb
jmp
std
mov
xchg
cmpsb
aad
xor
mov
fwait
push
pop
dec
jo
insb
scas
daa
div
aad
std
fldt
bound
push
cmpsl
push
push
and
inc
jne
inc
gs
lods
outsl
das
cmpsb
das
mov
dec
lods
mov
push
cs
mov
subl
adcb
push
jl
jo
je
add
int
js
cmp
push
loop
mov
rolb
sbb
inc
dec
je
imul
lock
shlb
dec
jecxz
or
sbb
insl
jl
stos
pop
jle
push
sbb
push
and
xchg
dec
add
add
add
adc
mov
scas
cmp
sbb
popa
pop
jbe
ret
sbb
add
cs
mov
mov
pop
mov
cmp
xor
push
mov
xchg
and
or
test
int
push
sar
fbstp
or
inc
dec
dec
push
mov
out
leave
jo
push
ror
sbb
add
sahf
arpl
movsb
mov
sub
cmpsb
xchg
jg
mov
lock
das
dec
pop
pusha
adc
aaa
mov
push
mov
imul
pop
in
mov
sub
push
int3
cwtl
dec
lea
sar
cmc
jbe
dec
xchg
fwait
int3
push
arpl
mov
ds
pop
pop
adc
fmuls
lahf
pop
pop
add
xor
cld
xor
push
or
adc
lds
or
stc
mov
add
or
into
sti
fs
shl
in
jmp
or
jmp
dec
mov
popa
push
mov
jle
fstps
add
sub
in
or
sub
fadds
outsl
jl
inc
pop
pusha
mov
hlt
insl
lods
repz
xor
jmp
mov
sbb
das
pop
xlat
mov
jb
inc
adc
and
int3
iret
fucomip
loop
push
sub
pop
inc
mov
push
mov
in
stos
or
or
shr
jp
in
jnp
call
scas
xchg
dec
out
dec
iret
push
lret
mov
jb
scas
cmp
lret
data16
enter
dec
sbb
mov
es
loopne
jbe
pop
mov
sbb
adc
test
and
pusha
movsb
pop
les
cwtl
setbe
ja
inc
add
inc
inc
add
lret
add
lea
adcl
push
xorl
shl
call
mov
cmpl
jg
sub
and
jmp
pushl
push
call
mov
shl
xor
shr
or
push
lea
sub
push
cmpl
jg
xorl
jmp
push
pushl
pushl
push
push
push
call
mov
mov
shrd
shr
mov
mov
sub
xor
mov
adc
shl
mov
mov
mov
sbb
xor
or
mov
and
shrd
adcl
shr
adc
mov
mov
orl
xor
xor
andl
or
cmpl
jg
jmp
call
add
mov
shl
mov
shrd
shr
mov
adcl
mov
xor
xor
sbbl
or
notl
add
lea
push
shl
xorl
call
mov
xorl
mov
cmpl
jg
jmp
push
pushl
call
xor
shr
jmp
notl
notb
sub
ret
mov
cli
adc
imul
out
cmpsb
mov
scas
xor
mov
inc
xlat
push
jns
cld
mov
stos
mov
addr16
adc
dec
notl
js
mov
sbb
into
or
sub
mov
push
push
rorb
test
mov
lret
or
inc
xor
fmul
shl
add
js
rclb
shl
xor
jns
push
ret
int3
cli
ss
jge
mov
inc
xor
xor
mov
dec
mov
in
inc
mov
popa
sarb
mov
dec
add
mov
test
xchg
pushl
xchg
pop
dec
jle
add
cld
leave
stos
sbb
idiv
das
pop
add
jge
rclb
mov
xchg
jl
inc
cmp
mov
loopne
ja
testb
loopne
fsubl
pop
jne
xchg
cmp
in
call
or
push
jecxz
icebp
fidivrs
mov
sti
pop
scas
call
aad
mov
adc
ds
xor
popf
rolb
pop
aaa
inc
cmp
negl
jno
sbb
jl
or
xor
pusha
add
in
cmp
dec
jns
decb
in
mov
jge
mov
loop
xorl
mov
mov
aam
sarb
notl
clc
dec
sti
orps
call
into
das
sbb
add
in
outsl
jae
push
jmp
inc
iret
xchg
jg
testl
adc
stc
cmp
adc
mov
dec
lods
jg
cmovl
rorl
sub
and
cli
xchg
js
andl
aas
shl
or
mov
lea
push
cmpl
ja
and
jmp
push
push
push
pushl
call
mov
mov
shrd
shr
mov
mov
addl
xor
neg
xor
or
push
sbb
mov
movzbl
and
mov
mov
push
orl
pushl
subl
shl
call
lea
xor
add
add
push
add
mov
mov
cmpl
jbe
adc
or
jmp
push
push
push
call
shrd
shr
mov
mov
xor
xor
or
addl
push
adc
mov
push
adcl
pushl
subl
shl
call
cmpl
jge
sbb
jmp
pushl
pushl
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
mov
sbbl
mov
rol
mov
adcl
xor
movl
mov
movl
cmp
movl
je
or
movl
mov
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
shld
shl
xor
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
push
mov
sub
not
mov
cmpl
jb
jmp
push
call
mov
mov
sub
push
mov
mov
sbb
mov
adc
orl
orl
add
mov
mov
add
mov
cmpl
ja
sbb
inc
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
sub
mov
sbb
mov
cmpl
ja
or
jmp
push
push
push
call
orl
orl
lea
mov
mov
mov
not
mov
sbbl
add
neg
mov
mov
adcl
mov
mov
neg
shrd
cmpl
ja
or
jmp
push
push
push
pushl
push
call
shr
mov
mov
xor
xor
or
cmpl
jb
jmp
pushl
push
push
pushl
pushl
call
mov
movl
movl
movl
movl
movl
movl
xor
movl
movl
mov
add
movl
movl
cmpl
jge
adcl
adcl
jmp
pushl
push
push
call
movl
movl
movl
movl
movl
dec
movl
sbbl
movl
movl
movl
cmpl
ja
xor
add
sub
mov
jmp
push
push
push
call
movl
movl
movl
mov
shl
mov
andl
push
addl
push
push
push
andl
call
xorl
mov
xorl
mov
mov
mov
add
xor
add
mov
mov
sub
sub
mov
sbb
lea
and
mov
cmpl
jg
jmp
pushl
pushl
push
call
mov
or
and
mov
or
xor
cmp
movl
jne
not
mov
mov
shrd
cmpl
jbe
adc
jmp
push
pushl
push
pushl
pushl
call
shr
mov
mov
shl
xor
xor
subl
or
mov
mov
cmp
movl
jne
mov
add
mov
neg
xor
xor
or
sbb
mov
cmpl
jbe
jmp
pushl
call
mov
mov
shrd
mov
mov
xor
shr
cmpl
jbe
xor
jmp
push
push
call
mov
xor
or
shl
sub
mov
andl
mov
mov
add
adc
mov
and
mov
adc
mov
shrd
negl
shr
sub
mov
mov
cmpl
jg
add
jmp
pushl
pushl
pushl
pushl
pushl
call
xor
shl
xor
or
mov
mov
subl
shrd
shr
neg
mov
cmpl
jbe
adcl
jmp
pushl
pushl
pushl
call
mov
mov
xor
xor
or
shl
incl
lea
mov
cmpl
jl
dec
jmp
pushl
call
mov
shrd
shr
mov
mov
mov
adc
xor
cmpl
jbe
and
jmp
call
mov
xor
or
shl
imul
mov
dec
mov
sbbl
shrd
mov
or
mov
xorl
xor
orl
shr
mov
mov
addl
xor
subl
or
shl
sub
mov
movl
cmp
mov
mov
jg
sbb
mov
cmpl
jb
jmp
pushl
push
call
mov
shrd
mov
mov
xor
shl
xor
or
shr
subl
mov
sub
mov
mov
adcl
mov
subl
shrd
adcl
shr
add
mov
cmpl
jg
sbb
jmp
pushl
push
call
mov
mov
xor
xor
or
shl
orl
imul
addl
sub
jmp
mov
or
mov
mov
cmpl
jl
or
jmp
push
pushl
call
mov
shrd
mov
mov
xor
shl
addl
xor
adcl
or
andl
shr
cmpl
jg
jmp
pushl
push
push
push
call
mov
mov
mov
mov
shrd
shr
mov
cmpl
jg
mov
adc
or
jmp
push
pushl
pushl
pushl
pushl
push
call
mov
mov
xor
xor
or
shl
mov
mov
adc
add
add
xor
xor
adc
mov
mov
xor
add
adc
shrd
or
shr
movzbl
adc
mov
mov
xor
sbbl
shl
xor
movzbl
adc
or
neg
mov
add
movl
mov
mov
sub
imul
mov
cmpl
ja
or
jmp
push
pushl
pushl
pushl
call
mov
movl
mov
movl
mov
movl
adc
mov
xor
mov
cmpl
jbe
jmp
push
push
push
pushl
call
mov
shrd
shr
mov
mov
xor
shl
adcl
xor
or
movzwl
sbb
mov
lea
cmpl
jbe
and
jmp
pushl
push
pushl
pushl
call
mov
mov
mov
shrd
shr
mov
adcl
mov
subl
shl
adc
mov
xor
xor
sbbl
or
sbb
mov
or
mov
xor
cmpl
jl
jmp
push
push
push
call
mov
mov
shrd
shr
mov
mov
xor
shl
xor
adc
or
adcl
lea
mov
or
mov
cmpl
ja
add
jmp
pushl
pushl
push
call
mov
mov
shrd
shr
mov
mov
subl
shl
and
mov
xor
adcl
xor
xorl
or
cmpl
jle
inc
decl
jmp
push
call
mov
mov
or
mov
mov
shrd
notl
shr
mov
sub
mov
xor
addl
shl
addl
xor
sbb
or
lea
mov
mov
addl
mov
shrd
shr
xor
add
mov
sub
xor
mov
mov
addl
xor
shl
adc
mov
xor
addl
or
mov
sbb
mov
or
add
cmpl
jle
sub
negl
jmp
push
push
call
mov
mov
shrd
shr
mov
cmpl
jge
neg
jmp
pushl
push
push
call
mov
xor
xor
or
lea
mov
cmpl
jge
jmp
push
push
push
pushl
push
push
push
pushl
push
pushl
push
push
push
pushl
call
mov
shl
mov
shrd
shr
mov
mov
addl
xor
orl
xor
subl
or
xor
mov
shl
incl
mov
adcl
mov
orl
mov
addl
or
xor
mov
mov
andl
shrd
shl
sbbl
shr
mov
mov
or
xor
mov
xor
orl
or
mov
dec
orl
not
xorl
and
xor
or
xor
mov
xor
and
mov
cmpl
ja
sub
jmp
push
push
push
call
mov
xor
or
mov
mov
shrd
shr
mov
sbb
mov
mov
adc
mov
mov
xor
xor
xor
adc
mov
addl
xor
andl
shl
subl
mov
addl
or
mov
mov
cmp
je
xorl
mov
xor
add
mov
sub
and
sub
cmpl
ja
add
jmp
pushl
push
pushl
push
push
push
call
mov
mov
mov
shl
xor
mov
mov
mov
subl
xor
adcl
xor
sbbl
shrd
shr
xorl
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
or
mov
mov
shl
shl
mov
mov
xor
xor
mov
mov
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
or
add
adc
push
push
push
push
call
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
imul
mov
mov
xor
mov
mov
xor
mov
mov
and
xor
mov
sub
mov
sub
mov
imul
sub
mov
movl
movl
mov
mov
or
mov
imul
mov
movl
movl
movl
mov
mov
or
xor
div
mov
mov
sub
mov
xor
div
mov
xor
pop
mov
movl
movl
movl
mov
mov
sub
mov
div
mov
or
mov
sub
mov
mov
movl
movl
mov
mov
xor
lea
xor
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
xor
mov
xor
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
xor
sub
mov
sub
add
mov
mov
and
xor
div
mov
mov
imul
sub
add
cmp
ja
push
movl
movl
movl
mov
mov
add
xor
div
mov
mov
imul
imul
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
imul
lea
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
mov
sub
mov
sub
add
mov
mov
and
xor
div
mov
imul
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
push
xor
xor
mov
sub
xor
push
push
movl
movl
mov
and
movl
movl
mov
mov
and
sbbl
mov
xor
inc
and
and
add
cmpl
jle
xor
sub
jmp
pushl
call
xor
mov
movl
movl
mov
cmpl
jb
xor
jmp
pushl
call
xor
sub
mov
imul
xor
mov
movzbl
sub
mov
div
mov
xor
or
sub
xor
sub
mov
cmpl
jl
sbb
jmp
push
pushl
pushl
call
movl
movl
movl
movl
movl
movl
sbbl
mov
xor
or
adc
mov
sub
imul
xor
add
mov
sub
or
add
or
and
cmpl
jge
xor
xor
mov
and
and
jmp
push
call
sub
mov
sub
add
mov
mov
orl
sub
or
add
cmpl
jg
mov
sbb
mov
adc
jmp
pushl
call
mov
xor
div
xor
mov
xorl
sub
mov
andl
add
sbbl
mov
movl
movl
not
movl
or
mov
sbb
xor
and
add
add
mov
xorl
xor
subl
div
and
mov
or
sub
cmpl
jl
jmp
push
push
push
push
call
mov
movl
movl
movl
movl
mov
mov
orl
xor
cmpl
ja
jmp
pushl
pushl
push
pushl
push
pushl
call
xor
push
pop
div
mov
xor
div
mov
or
cmpl
jle
or
jmp
pushl
push
push
push
push
call
sub
mov
movl
mov
mov
xor
sbbl
div
cmpl
jg
jmp
push
push
call
imul
xor
xor
imul
xor
mov
movl
movl
movl
mov
and
mov
orl
xor
adcl
div
mov
imul
add
xor
and
mov
sbbl
sub
mov
sbbl
movl
mov
mov
sbb
and
xor
and
sub
or
cmpl
ja
jmp
push
pushl
call
xor
mov
movl
movl
movl
mov
and
or
add
xor
add
or
andl
or
dec
sub
cmpl
jg
inc
mov
sub
jmp
pushl
call
mov
movl
movl
movl
and
mov
shr
sub
cmpl
ja
mov
and
jmp
push
push
call
xor
mov
lea
push
call
mov
or
or
mov
add
or
add
and
lea
adc
mov
and
movl
movl
movzwl
adc
movl
sub
movl
mov
sbb
mov
movl
subl
movl
movl
mov
mov
sub
imul
movl
mov
orl
mov
and
sub
mov
lea
adc
mov
mov
cmpl
jbe
sub
adc
jmp
push
push
pushl
pushl
call
mov
mov
imul
and
imul
or
mov
lea
mov
movzbl
xor
movl
movl
movl
and
movl
or
mov
mov
mov
sub
or
mov
mov
andl
xor
xorl
xor
adcl
mov
subl
call
xor
or
or
mov
mov
mov
mov
cmpl
jle
xorl
jmp
pushl
pushl
push
call
mov
xor
xor
mov
call
or
cmpl
jle
jmp
push
push
pushl
call
or
mov
mov
xor
xor
mov
call
or
mov
cmpl
jb
jmp
push
call
mov
mov
mov
xor
xor
mov
mov
addl
mov
mov
mov
andl
call
mov
adcl
or
mov
or
subl
push
adcl
push
andl
push
addl
push
addl
call
mov
mov
cmp
movl
jne
mov
mov
xor
xor
mov
call
xor
mov
mov
sub
mov
adc
mov
addl
xor
xor
andl
mov
call
or
movl
or
add
mov
adc
mov
xorl
xor
xor
mov
adcl
call
sub
mov
mov
xor
mov
mov
mov
sbb
mov
mov
xor
subl
xor
mov
mov
xorl
mov
decl
call
adcl
or
movl
mov
andl
or
push
subl
push
push
addl
push
xorl
call
mov
movl
jmp
jmp
cmpl
jg
add
jmp
push
call
lea
mov
mov
movl
mov
xor
cmpl
ja
jmp
push
call
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
movl
xor
xor
mov
sbbl
call
neg
mov
mov
adcl
mov
xorl
mov
andl
xor
adcl
xor
mov
movl
call
or
and
or
cmpl
jge
orl
movzbl
xor
jmp
push
push
push
call
mov
mov
xor
xor
movl
mov
subl
call
sbb
mov
sub
mov
xorl
mov
mov
subl
xor
subl
xor
mov
mov
mov
mov
incl
mov
call
sbb
mov
addl
or
sub
mov
or
push
subl
push
addl
push
push
sbbl
call
mov
cmp
movl
je
cmpl
jbe
jmp
push
push
call
mov
mov
xor
xor
mov
call
mov
mov
cmpl
ja
jmp
push
pushl
push
call
mov
mov
xor
xor
mov
call
or
or
sbbl
mov
imul
cmpl
jle
not
decl
jmp
push
pushl
push
pushl
push
pushl
call
add
mov
mov
mov
jmp
movl
jmp
cmpl
jb
xorl
jmp
push
call
mov
mov
xor
xor
mov
call
mov
xor
mov
mov
mov
xorl
xor
addl
xor
adcl
mov
call
subl
or
or
adc
mov
mov
xor
adcl
xor
mov
call
adc
mov
cmpl
jb
jmp
pushl
call
mov
mov
mov
xor
xor
mov
mov
mov
orl
call
or
or
mov
or
push
push
negl
push
push
subl
call
movl
mov
jmp
movzbl
adc
mov
mov
and
mov
xor
andl
xor
movl
mov
addl
call
add
mov
mov
mov
mov
sub
mov
cmpl
ja
movl
jmp
pushl
push
call
mov
xor
xor
mov
call
or
or
mov
movl
jmp
mov
cmpl
jl
jmp
pushl
push
push
call
mov
xor
xor
mov
call
mov
mov
sub
mov
xor
or
or
mov
xor
xor
subl
mov
call
xor
or
xorl
or
xor
mov
mov
add
mov
xorl
xor
sbb
mov
sub
sub
sbb
mov
xor
xor
or
xor
movzwl
and
add
cmpl
jge
jmp
push
call
mov
movl
movl
movl
movl
movl
movl
and
movl
xor
movl
cmpl
jl
mov
mov
and
adc
jmp
pushl
pushl
pushl
push
pushl
pushl
push
push
call
mov
add
mov
sub
cmpl
jbe
jmp
push
push
push
push
call
xor
push
pop
div
mov
xor
add
mov
xor
mov
xor
div
dec
or
sbb
mov
cmpl
jg
orl
jmp
pushl
pushl
call
xor
mov
sub
mov
mov
sub
cmpl
jle
xor
jmp
push
push
pushl
call
mov
xor
mov
div
mov
xor
sbbl
div
orl
mov
sub
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
mov
or
mov
xor
div
mov
xor
div
mov
lea
mov
mov
sub
mov
xor
mov
div
mov
imul
add
xor
mov
add
mov
and
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
imul
imul
mov
imul
mov
sub
add
mov
and
mov
sub
imul
mov
mov
or
sub
xor
mov
div
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
push
mov
sub
push
movl
movl
movl
mov
mov
add
xor
mov
lea
mov
add
mov
movl
movl
mov
mov
add
xor
div
mov
xor
push
sub
imul
xor
lea
mov
movl
movl
movl
mov
mov
shr
sub
mov
imul
div
xor
or
xor
mov
movl
movl
movl
mov
mov
or
sub
or
mov
lea
mov
movl
movl
mov
mov
add
imul
xor
and
mov
movl
movl
mov
mov
and
sub
add
mov
movl
movl
mov
add
pop
div
mov
sub
add
imul
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
add
mov
adc
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
sub
mov
imul
mov
sub
imul
xor
add
xor
push
mov
add
imul
mov
div
mov
lea
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
sub
and
xor
mov
mov
lea
push
mov
push
pop
xor
div
mov
sub
add
and
lea
call
mov
mov
imul
mov
sub
add
mov
xor
sub
cmp
jne
mov
mov
sub
mov
sub
add
xor
xor
lea
mov
push
mov
and
xor
imul
mov
div
push
mov
add
push
mov
mov
imul
and
mov
imul
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
and
sub
push
push
push
mov
pushl
pushl
call
test
je
movl
movl
movl
push
movl
adc
mov
andl
mov
andl
push
addl
push
push
adcl
call
push
subl
push
xorl
and
sbbl
and
push
push
orl
call
xor
xor
and
mov
cmpl
jbe
and
jmp
call
mov
xor
or
mov
xor
or
notl
mov
xorl
movl
movzbl
and
mov
movl
add
movl
movl
sub
movl
adc
movl
cmpl
jb
adcl
jmp
pushl
push
push
push
call
mov
mov
mov
mov
or
mov
or
mov
mov
sbb
mov
adcl
sub
mov
movl
sbb
mov
xor
xor
subl
and
sbbl
and
cmp
movl
jne
movl
cmp
movl
jne
sub
movl
sbbl
movl
adc
movl
cmpl
jl
sbbl
xor
jmp
push
push
pushl
pushl
push
pushl
call
movl
movl
mov
mov
sub
adc
mov
subl
imul
adcl
and
negl
imul
mov
addl
pushl
imul
incl
xor
mov
adc
mov
sbbl
div
xor
mov
adcl
xor
sbb
mov
sub
or
xor
sbbl
pushl
addl
pushl
call
andl
pushl
call
andl
movl
movzbl
sub
movl
cmpl
jge
negl
jmp
pushl
push
push
push
call
movl
movl
movl
movl
mov
mov
sub
mov
mov
add
mov
adc
cmpl
jge
and
jmp
pushl
push
pushl
push
pushl
push
call
mov
add
adc
and
mov
and
orl
mov
movl
decl
movl
addl
movl
xorl
movl
subl
dec
cmp
jne
movzwl
or
movl
mov
xorl
mov
movl
addl
mov
call
xor
lea
mov
mov
sub
sub
mov
lea
adc
mov
mov
cmpl
jbe
jmp
pushl
push
push
call
mov
mov
mov
xor
shl
shr
or
xor
mov
add
mov
or
mov
and
mov
xor
or
xor
or
sub
sub
mov
cmpl
ja
andl
jmp
push
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
subl
xor
sbbl
xor
xorl
or
cmpl
ja
subl
jmp
push
push
pushl
push
pushl
pushl
call
mov
push
pushl
lea
push
shl
call
adcl
lea
subl
push
mov
mov
andl
lea
andl
push
adcl
mov
subl
lea
notl
mov
mov
orl
mov
push
xorl
call
xorl
push
addl
push
pushl
addl
call
mov
cmpl
ja
mov
xor
jmp
push
pushl
push
push
push
push
call
mov
mov
mov
shr
shl
or
mov
mov
sub
sub
mov
xor
xor
mov
or
xor
mov
lea
mov
cmpl
jle
adc
jmp
pushl
push
push
call
lea
mov
mov
sub
lea
xor
sbb
movl
movl
mov
sub
movl
movl
orl
mov
adcl
mov
sub
add
mov
mov
movl
adc
xor
cmpl
jb
and
jmp
push
push
push
call
xor
and
mov
and
mov
movl
movl
movl
movl
sbb
movl
add
movl
andl
mov
sub
mov
adc
mov
cmpl
jl
and
jmp
push
call
mov
push
push
or
or
push
addl
push
xorl
call
mov
negl
mov
sub
mov
movl
sbb
mov
mov
cmp
jne
cmp
je
and
movl
movl
movl
xor
add
mov
sub
xor
movl
mov
mov
sub
xor
mov
mov
mov
cmpl
jb
jmp
pushl
pushl
pushl
push
pushl
call
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
and
movl
sub
movl
cmpl
jl
add
jmp
pushl
call
movl
movl
movl
mov
mov
push
push
xor
adcl
xor
push
push
call
addl
mov
andl
mov
push
push
push
sbbl
push
call
cmpl
jl
subl
jmp
call
mov
mov
push
push
push
push
andl
call
mov
sbb
mov
mov
mov
andl
add
movl
mov
adc
mov
cmp
movl
jne
movl
cmp
movl
je
xor
mov
xor
mov
addl
xor
adcl
shld
mov
and
shl
mov
mov
sbb
mov
sbbl
xor
subl
xor
mov
movl
cmp
movl
jne
movl
cmp
je
mov
mov
cmp
je
cmpl
jl
sub
jmp
pushl
call
mov
mov
mov
shl
xor
mov
mov
cmpl
jle
and
jmp
pushl
push
push
call
mov
xor
xor
shrd
xor
shr
or
or
mov
movl
mov
movl
cltd
movl
cmp
movl
jne
cmp
movl
jne
movzwl
add
movl
cmpl
jge
mov
add
jmp
push
push
call
movl
mov
mov
mov
xor
orl
shld
adcl
shl
movl
mov
mov
xor
sbbl
xor
mov
cmp
jne
movl
cmp
movl
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
xor
inc
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
movl
cmp
movl
jae
movl
cmp
jae
shld
movl
shl
ret
mov
addl
xor
and
shl
ret
xor
xor
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
and
and
or
mov
sub
mov
mov
sub
add
add
mov
xor
cmp
jne
mov
mov
xor
div
push
push
push
xor
mov
mov
mov
mov
mov
imul
mov
div
mov
sub
xor
shl
imul
sub
xor
mov
mov
add
mov
add
mov
mov
mov
xor
and
mov
imul
mov
sub
or
mov
pop
xor
pop
pop
cmp
je
mov
jmp
mov
mov
sub
or
imul
add
jmp
movl
movl
movl
mov
mov
add
imul
mov
or
xor
mov
div
xor
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
sub
and
sub
push
movl
movl
movl
movl
mov
mov
imul
mov
imul
xor
div
mov
mov
push
shr
and
xor
mov
sub
mov
mov
mov
and
imul
mov
imul
add
mov
sub
mov
mov
add
xor
pop
div
mov
push
and
sub
xor
add
mov
mov
and
imul
mov
imul
or
xor
pop
sub
mov
mov
or
mov
or
mov
add
or
mov
or
lea
cmp
jbe
pop
leave
ret
negl
subl
movl
cmpl
movl
je
cmpl
jbe
xor
jmp
push
pushl
pushl
pushl
push
push
push
pushl
push
push
push
push
pushl
push
call
add
mov
mov
pop
pop
pop
leave
ret
mov
mov
ret
orl
mov
mov
notl
or
mov
movl
jne
mov
sbbl
mul
ret
xorl
push
mul
and
mov
add
mov
mull
add
mov
mul
add
pop
ret
incl
push
mov
sbb
push
mov
andl
or
movl
jne
mov
mov
sub
imul
mov
mov
xor
div
andl
mov
and
mov
movl
div
not
mov
jmp
and
mov
andl
mov
movzbl
xor
mov
cmpl
jge
jmp
pushl
pushl
call
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
