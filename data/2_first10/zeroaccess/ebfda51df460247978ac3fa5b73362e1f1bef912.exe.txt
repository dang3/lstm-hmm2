push
mov
sub
cmpl
mov
movl
not
jmp
mov
jae
push
call
sub
sub
mov
xor
add
sub
and
or
mov
mov
mov
orl
sub
push
mov
mov
mov
mov
sbb
movzwl
add
mov
mov
sbbl
orl
orl
cmpl
not
mov
jmp
mov
mov
jle
push
pushl
push
push
push
pushl
push
call
andl
subl
and
orl
and
adc
adc
mov
mov
mov
mov
sbbl
sub
mov
mov
sbb
mov
orl
orl
lea
sbb
mov
cmpl
movzwl
mov
notl
mov
jmp
mov
mov
jae
push
push
pushl
call
xor
or
adc
sbb
mov
adc
mov
addl
add
mov
jmp
hlt
loop
sbb
and
mov
nop
mov
push
sub
push
push
pop
icebp
pop
fdivrl
inc
mov
push
popf
cmpb
test
clc
es
lds
push
mov
testl
movsl
dec
sbb
xor
pop
cmp
dec
rcl
inc
inc
push
jl
pop
mov
dec
dec
dec
rorb
or
mov
daa
bound
scas
test
mov
pop
push
inc
fdivs
imul
mov
jecxz
add
cmpsb
inc
fucomp
loopne
mov
hlt
push
rcll
out
jmp
rol
lret
mov
xor
push
and
inc
fiaddl
sahf
cmp
dec
clc
adc
haddps
jle
outsb
rep
ja
iret
jmp
mov
push
add
dec
adc
xchg
push
jle
mov
in
sub
add
repnz
mov
and
lret
xor
jbe
filds
xchg
rcrb
mov
lahf
fldl
and
xchg
or
sub
mov
fnstenv
sbb
movsl
stos
dec
pop
cmpsl
insl
adc
int
je
jecxz
ror
aam
add
adc
mov
gs
push
jb
aad
lahf
call
add
jle
push
inc
pop
popa
pop
jne
pop
fwait
int3
rcrl
cltd
gs
out
lods
out
push
cltd
cmc
ja
push
inc
pop
jmp
push
scas
push
mov
stos
jbe
mov
in
int
js
xchg
xchg
lcall
and
cmp
mov
and
cmp
dec
mov
ss
jb
xchg
cltd
pop
stos
jl
std
addr16
cmpsl
mov
fists
inc
scas
adc
sub
mov
ds
mov
mov
pop
mov
xrelease
in
inc
stos
dec
inc
xor
shlb
add
lods
jle
dec
jecxz
or
ss
push
jnp
push
aaa
mov
lock
xorb
or
jl
shl
xchg
push
mov
fisubrl
out
cmp
jbe
sub
stos
cmpsl
mov
push
arpl
leave
jge
popl
je
sbb
test
mov
and
je
popf
das
mov
or
popa
leave
jge
les
cs
add
nop
test
sbb
dec
and
adc
jns
stos
movsb
jbe
push
xor
pop
or
es
andl
mov
ret
pushf
pop
repnz
aaa
icebp
add
arpl
pop
jns
dec
in
cltd
pop
stos
sbbl
arpl
jle
sub
lret
loope
call
mov
xchg
aam
out
nop
jl
into
or
scas
sub
es
hlt
cmpsl
cmc
add
xchg
addr16
pop
sbb
popf
aaa
inc
mov
or
into
dec
adc
ret
cmp
enter
adc
add
es
mov
lock
adc
hlt
inc
mov
fs
hlt
xor
clc
cmp
aas
xor
jmp
push
sbb
aas
loop
sbb
pop
fstpl
dec
jl
sar
and
int
ja
shl
sbb
and
outsl
and
xlat
sub
xchg
jo
add
jb
adc
es
mov
pop
and
daa
rcrb
add
fimull
push
aas
mov
sahf
lock
add
mov
ds
inc
mov
pushf
imul
mov
cmp
pop
and
fmulp
rcll
dec
xor
ret
xchg
fisttps
adc
mov
mov
ret
or
adc
pop
xchg
mov
es
sbb
push
clc
mov
in
ss
loope
pusha
mov
cmpb
sbb
and
ficoml
jmp
sub
jne
daa
xchg
cmp
movsl
mov
jmp
incb
sub
and
int3
sub
lcall
mov
test
lods
cld
mov
mov
adc
or
repz
mov
and
or
sub
and
in
sub
in
adc
jle
and
incb
pop
xlat
or
xchg
je
mov
lods
pop
jge
loope
xor
insb
dec
scas
aad
xchg
sbb
and
sub
mov
test
mov
in
aad
mov
mov
xor
jo
and
enter
jg
jo
shll
scas
sub
ret
out
std
jns
sbb
call
lret
lret
cmc
rorl
or
cs
cwtl
imull
cs
cwtl
jne
xchg
sbb
lea
ss
or
leave
adc
loop
sbb
cmp
xor
sbb
push
outsb
sub
test
and
and
mov
adc
es
push
cmp
dec
call
cmp
lret
push
push
hlt
setns
mov
pop
inc
pop
pop
imulb
jmp
pop
jmp
out
test
mov
cmpsb
shll
adc
clc
cmp
push
stos
adc
lods
bound
inc
roll
arpl
shrl
jle
dec
add
in
or
sub
xchg
and
iret
add
add
xchg
mov
in
mov
jno
dec
mov
jl
pop
mov
es
sub
lock
mov
pop
cmp
xor
aam
jg
push
je
pop
bound
dec
mov
enter
push
rorb
dec
fs
popl
repnz
mov
jle
movsb
add
push
pop
jne
cmp
ret
ljmp
cmp
xor
inc
cmp
push
xor
pushf
ja
jae
sbbb
imul
cmp
add
fstps
push
test
pusha
stc
jae
xor
out
pop
scas
mov
arpl
je
mov
lahf
ret
ret
iret
jne
out
dec
fs
stc
hlt
les
shlb
and
jns
pop
faddl
shlb
mov
lea
and
push
fwait
mov
test
push
sub
das
mov
xor
adc
into
sbb
jp
mov
es
fwait
pop
repz
cmpsl
adc
inc
push
out
icebp
dec
iret
push
out
mov
lds
cld
push
andl
push
mov
push
icebp
xchg
mov
in
pushf
cs
push
cltd
xor
jle
jne
aad
sahf
xor
jnp
jmp
scas
pop
pop
cmp
push
shrl
push
pop
leave
xchg
fistpl
adc
inc
scas
dec
popa
aad
fwait
cmp
nop
mov
and
dec
xchg
scas
out
xor
pop
mov
adc
sbb
enter
stos
mov
mov
test
mov
push
lds
xchg
push
idiv
mov
ret
xor
and
sbb
lcall
std
mov
add
mov
je
stos
inc
add
dec
mov
xchg
ja,pn
es
loope
sti
mov
add
xchg
call
sub
xor
sbb
stos
test
int3
xor
cmc
jecxz
dec
jne
daa
or
fwait
loop
xchg
fisubl
add
dec
data16
shll
cmp
push
jns
scas
adc
and
loopne
hlt
das
movsb
insb
test
cmp
adc
add
xor
mov
sub
gs
pop
sub
mov
jl
leave
and
movsb
jmp
movsl
cld
movsl
leave
pop
add
jg
add
dec
or
inc
in
xchg
pop
daa
jmp
sub
dec
mov
sbb
shll
stc
jno
jnp
fstl
sub
les
addr16
xor
orl
push
out
rorb
push
xchg
and
movsl
mov
in
xlat
sbb
lods
jns
int
xorb
pop
sub
outsl
or
leave
adc
sbb
mov
lea
les
cmp
fcmovnb
mov
fstpt
and
cmp
jns
outsb
cs
rclb
aam
repnz
sbb
sbb
cmp
sub
imul
add
sbb
movsb
mov
push
jle
adc
daa
sti
pushf
pop
lret
in
sub
cmp
pop
rolb
cmp
les
aas
and
xor
mov
sar
xchg
cmp
xchg
cmp
test
in
repnz
cltd
adcb
data16
lods
icebp
mov
push
mov
in
mov
cmp
notb
mov
add
outsl
push
sub
pop
jp
sets
adc
fdiv
adc
adc
cmp
stos
jge
sub
xchg
mov
push
out
jp
add
push
stc
ss
mov
jo
out
mov
inc
adcl
dec
aam
xchg
arpl
push
out
dec
cmc
call
jecxz
rcrb
faddl
dec
scas
sbb
lods
mov
arpl
push
jo
or
add
addr16
jo
dec
cltd
sub
lds
in
add
inc
sbb
popa
data16
push
dec
daa
sub
or
fisubl
imull
jecxz
lods
sahf
and
dec
outsb
test
jb
imul
mov
lds
int
jbe
cmp
cmp
xor
ret
and
clc
inc
adc
add
pop
movsb
in
inc
or
inc
stos
repnz
fildl
loop
inc
into
es
xchg
int
add
mov
adc
dec
mov
inc
mov
add
jecxz
jle
xchg
mov
xchg
dec
mov
out
pop
push
or
inc
ds
or
mov
loope
add
and
jl
lods
in
mov
popa
xorl
mov
test
imul
arpl
jg
mov
mov
cmpsl
mov
dec
lcall
pop
bound
mov
xchg
rcll
or
int
mov
push
dec
ret
mov
imul
clc
mov
mov
jno
ret
sahf
mov
pop
pop
push
push
lret
sub
inc
xor
or
repnz
shrb
test
dec
outsb
push
mov
lock
sbb
stos
in
push
in
scas
arpl
xor
mov
shr
in
inc
mov
sti
ficomps
push
and
mov
or
test
xchg
scas
ret
push
out
fnsave
dec
sub
nop
pop
add
lods
sbb
and
ret
in
cmpsb
add
xor
fwait
es
je
mov
in
shll
pop
leave
mov
aad
or
aas
xor
add
mov
or
and
pop
rolb
pop
mov
xchg
ljmp
pop
jle
int3
ljmp
mov
jg
in
sbb
xor
sub
pushf
mov
jnp
and
xchg
jp
test
or
add
push
add
cwtl
pop
sub
pop
mov
in
es
sti
adc
fmul
fcmovnu
and
fdivrl
mov
andb
cmp
aaa
scas
mov
push
xor
xor
inc
xor
setle
jno
rorb
ret
sbb
aaa
cmc
std
push
dec
lds
out
mov
inc
cmp
jnp
mov
shl
xchg
sahf
add
data16
cmp
jne
cld
cmpsl
ljmp
int
mov
push
push
and
into
pop
roll
xor
add
fwait
popa
sahf
lret
or
mov
xchg
jle
push
sub
popa
cmpsl
mov
inc
mov
push
aam
ret
push
mov
divl
dec
inc
test
mov
xchg
or
sub
loopne
cmp
lock
push
popf
mov
std
xchg
jne
div
mov
enter
fcoml
jbe
popf
sti
mov
fldl
mov
inc
ror
int
test
pop
mov
gs
push
add
mov
xor
push
rcl
add
ljmp
pushf
add
shlb
cmpsb
in
ds
dec
idivl
add
clc
hlt
push
jns
or
orb
add
scas
xchg
call
mov
addb
sub
rcll
xor
mov
dec
lret
mov
jp
int
push
mov
add
repnz
and
xchg
inc
cld
mov
xor
xchg
stos
adc
lods
cmpsl
dec
fs
out
mov
hlt
daa
dec
push
xor
cmpsl
std
dec
push
into
scas
push
or
xor
mov
fimuls
insb
mov
lods
into
pushf
stos
stos
stc
mov
es
testb
xchg
xchg
mov
ljmp
movsl
movsl
lds
stos
arpl
orl
dec
mov
sub
mov
sub
aas
fisttpll
scas
pop
cmp
in
mov
imul
dec
push
mov
in
add
xchg
aad
or
and
jbe
dec
inc
movsl
imul
es
int3
insb
or
aaa
mov
add
out
pop
adc
shll
inc
call
jecxz
aad
sbb
call
jne
aam
scas
popa
push
mov
int
out
push
clc
lods
sbb
rolb
es
ds
js
shr
lods
mov
hlt
add
cmc
adc
sub
add
fstpt
or
and
push
hlt
mov
iret
cmpsl
jno
dec
pop
sbb
dec
pop
sub
pushf
inc
jle
push
std
or
xor
cmp
loope
push
jbe
adc
fwait
shrl
outsb
push
lods
xor
cmc
rep
fwait
or
jne
imul
imul
push
adc
sarb
insb
shr
jo
test
jmp
inc
iret
test
fsubrl
mov
push
cmc
loope
mov
out
scas
mov
out
cmpb
js
xchg
inc
pop
pop
jg,pt
lock
dec
mov
sub
shrb
movsb
mov
or
ja
and
jb
sub
inc
mov
fcmovu
popa
imul
std
jns
cmpsb
cwtl
sub
pop
lret
xchg
sbb
sbb
mov
dec
mov
fsub
push
cmpl
fwait
pop
mov
sub
scas
outsb
pop
stc
mov
or
inc
sub
shrb
cmpb
insb
ds
dec
dec
and
adc
cmp
push
sahf
jo
das
cld
in
xchg
mov
jl
or
inc
sub
popf
cld
stos
pop
int
cli
scas
fcomp
fs
cmp
inc
xlat
and
or
data16
pop
xor
jle
inc
cmp
xchg
jp
inc
add
mov
xor
aas
lret
test
xchg
stc
mov
sub
mov
jae
das
lahf
out
rcrb
xchg
or
shrb
lock
xchg
in
jne
and
pop
xlat
inc
sbb
xchg
mov
mov
scas
xchg
fldcw
data16
repnz
push
dec
pop
aaa
push
das
das
jnp
xor
ret
clc
cmp
cs
dec
sub
rorl
mov
shlb
imul
mov
out
lret
stos
rcrb
imul
push
adc
sbb
cs
mov
mov
mov
adc
loope
dec
jns
data16
push
scas
mov
inc
xor
mov
sub
test
loop
and
stos
ljmp
mov
pop
push
dec
push
ja
or
daa
imul
stos
push
lret
in
mov
call
icebp
in
jmp
sbb
insb
mov
push
mov
fldenv
dec
fnstenv
in
push
jb
mov
notl
mov
repz
adc
mov
in
adc
inc
sarl
xchg
lock
sti
dec
aad
xchg
aad
lea
jge
sbb
adc
shrb
aam
jnp
inc
lcall
ja
ds
push
divb
xchg
push
test
movsb
add
pusha
aaa
jae
imul
pushf
mov
cs
xchg
xchg
test
fldt
je
xchg
jmp
xor
aam
mov
xor
cmp
hlt
add
fdivr
shlb
jno
dec
push
movsl
shl
flds
test
add
and
lods
mov
mov
lret
outsb
add
ret
lahf
pop
jo
mov
jbe
lcall
out
fisubl
jns
std
xor
jle
sbb
sub
and
sbb
dec
push
rolb
lock
nop
int3
fwait
call
xchg
or
xchg
mov
or
es
addr16
fistpll
push
jo
jb
rol
jbe
addr16
pop
or
iret
fs
xchg
mov
icebp
adcl
loop
dec
sbb
aas
sub
xor
xor
jnp
lock
xchg
divps
rorb
jb
rcrb
mov
mov
imul
inc
sarb
stos
loopne
xchg
bound
inc
adc
imul
xor
xchg
push
sbb
fwait
jo
popf
or
test
cwtl
ss
pop
cs
jnp
rcll
xlat
sbb
mov
inc
pusha
dec
mov
sub
mov
incb
add
jmp
dec
push
inc
rclb
pop
mov
mov
adc
ja
add
cltd
out
out
jns
xchg
cmp
mov
mov
adc
inc
mov
sbb
xchg
ret
push
les
sbb
hlt
xorb
cmp
fcoml
sub
sub
fdivrs
notb
mov
cs
pop
pop
mov
mov
ficompl
and
or
lret
xchg
rorb
inc
mov
jecxz
xor
inc
or
jle
or
xor
fwait
inc
or
xlat
lds
int
mov
and
mov
out
int3
pop
out
xor
pop
inc
mov
fdivs
stos
insl
mov
mov
nop
in
push
popf
clc
mov
data16
pusha
sbb
mov
jbe
loop
adc
dec
lods
mov
fs
jb
gs
scas
enter
dec
repnz
rorb
mov
xchg
arpl
lds
in
xchg
jg
int3
push
mov
pop
in
sbb
stc
test
add
es
cmp
jb
out
mul
jne
cmp
insl
call
repnz
adc
pop
xchg
ja
popf
fbld
mov
xlat
sub
jne
mov
sub
push
xor
and
cmp
xchg
ss
jge
adc
add
push
fisttpl
jns
pop
subl
gs
gs
sbb
dec
lret
cmpsb
or
fcmovnb
mov
lcall
push
and
repz
outsl
int3
das
fiaddl
mov
xor
mov
repnz
repnz
dec
jo
arpl
add
sbb
movsl
imul
cmp
or
hlt
fadd
push
xor
push
sti
call
jl
push
fimull
jl
jle
push
addb
stos
inc
nop
xchg
pop
testl
aam
in
push
add
divb
iret
sti
sbb
xor
adc
jle
lret
mov
dec
das
mov
xor
mov
mov
arpl
popf
scas
imul
sbb
pop
out
das
jge
orl
cmc
xchg
add
int3
jg
mov
and
jo
and
cmp
sbb
cmp
mov
cmp
jno
dec
jb
adcb
pop
std
xchg
mov
rcrl
int
cmpsb
idiv
push
movsl
sub
repnz
adc
cltd
sbb
jmp
adc
jbe
mov
subl
xor
dec
xorb
scas
out
shr
imul
push
pop
testl
jns
addr16
shll
cwtl
sub
inc
mov
pop
in
stos
pop
rorb
pop
mov
inc
iret
xchg
sbb
sub
xchg
jg
mov
lret
cltd
jp
push
xor
je
loope
jmp
movsb
push
jle
xchg
cmp
pushf
xchg
cld
aad
inc
add
outsb
sub
cmpsl
adc
in
push
xchg
xchg
out
mov
xor
fisubrl
mov
mov
cmc
stos
ss
xchg
dec
push
push
cs
cmpb
jge
sbb
test
inc
sbb
jae
lahf
jnp
mov
cmpsb
ficomps
test
pop
add
mov
shrl
cltd
and
outsb
jno
dec
lret
imul
pushf
xchg
lods
in
xor
xchg
add
iret
sub
sbb
insl
xlat
push
mov
push
mov
into
push
pop
mov
test
or
nop
test
insl
jg
loope
fldt
sub
mov
xchg
clc
nop
mov
cltd
xor
cwtl
push
loopne
lcall
fsubrl
xor
xor
adc
repnz
and
aad
repnz
jg
cmpsb
out
sub
cmp
dec
add
push
mov
dec
jno
test
push
out
fstpt
sub
lea
sbb
push
push
xor
add
push
repz
popa
je
loopne
add
sahf
movsl
je
xchg
cmp
jge
cmp
sbb
cld
test
aaa
jg
push
das
push
adc
xchg
and
outsl
mov
inc
push
pushf
mov
in
mov
and
add
add
xchg
and
leave
stc
cmp
mov
in
scas
inc
xor
xchg
push
inc
mov
fbld
mov
push
xchg
fisubs
mov
packssdw
push
sti
in
and
ds
iret
jbe
enter
jle
or
and
imul
add
mov
cs
xchg
lret
sbb
nop
mov
xor
adc
sub
lods
pop
cmpsb
mov
dec
enter
mov
push
sub
call
dec
or
pop
aas
push
clc
push
and
inc
test
add
fldt
stos
jne
test
jl
and
push
jne
xor
insb
mov
dec
es
popa
add
jge
jb
adc
ja
mov
imul
daa
jle
pop
push
jns
mov
imul
iret
mov
gs
scas
hlt
les
mov
or
incl
pop
aaa
in
jl
pop
je
fldl
out
das
ret
jge
cmp
fs
out
push
mov
mov
mov
mov
lret
mov
jle
int
ss
div
movsl
mov
or
add
aad
into
cmpsl
cli
arpl
cli
sbb
out
int
sub
les
popf
mov
xor
xor
decl
stc
mov
ds
inc
push
dec
inc
add
mov
scas
out
frstor
into
int3
add
mov
popf
icebp
mov
rcr
xchg
dec
xchg
in
sbb
mov
sahf
sub
xor
sbb
pop
inc
mov
jmp
hlt
fldenv
mov
cmpsb
int
jmp
adc
mov
incl
mov
into
gs
dec
adc
lret
add
xlat
lds
int
enter
inc
aas
jge
in
adc
sarl
sahf
incl
jg
fisubs
jmp
movsl
daa
movsl
sbb
cli
jbe
add
mov
fcmovnbe
cmp
divl
cli
in
sbb
cli
cmp
mov
mov
xchg
popa
sbb
std
cmc
jbe
push
lock
sbb
inc
adc
imul
mov
pusha
popa
add
mov
fstl
shrb
loopne
jg
fwait
dec
pop
inc
push
rolb
adc
xchg
iret
fmuls
or
dec
cmp
cmpsl
jo
xchg
jnp
mov
mov
or
xor
gs
sub
test
xchg
inc
sbb
mov
out
or
lds
test
xor
pop
push
mov
pop
fcmovb
and
xchg
enter
jle
adc
movsl
dec
push
in
add
pop
stos
and
xchg
xor
jl
push
or
sub
shl
sti
push
rclb
sub
cmc
push
dec
ds
lds
mov
cmp
mov
test
push
dec
mov
and
xchg
movsb
mov
into
daa
je
jo
and
inc
xchg
lods
xor
lret
insl
stc
das
dec
icebp
out
cltd
xchg
pop
push
jbe
clc
mov
test
addr16
cmpsl
cmp
arpl
lcall
inc
jo
testb
jno
sub
xchg
jbe
out
and
sbbl
xchg
xor
or
jo
xor
sub
js
out
sub
iret
sbb
rclb
pop
cmp
aad
pop
mov
rcl
jns
popf
fiadds
add
jle
popf
sbb
push
and
pop
in
sbb
js
add
in
sahf
rol
or
rcll
pop
mov
xchg
mov
jge
lds
ljmp
ja
cli
rcr
mov
push
mov
fistpll
rcr
pop
jbe
adc
ja
rcl
lods
ret
mov
push
int3
in
pusha
lods
call
cmpsl
movsb
into
repz
sarl
xchg
add
pop
pusha
aad
lret
insb
mov
mov
stos
mov
test
in
jmp
push
sbb
daa
pop
dec
pop
jmp
sahf
pushf
cld
lret
mov
and
dec
pop
xchg
lds
jno
cmp
mov
pop
jg
test
dec
mov
or
fsubs
adc
dec
leave
in
dec
idivl
loopne
xor
mov
push
addr16
or
lcall
mov
sub
pop
movsl
mov
jg
leave
je
mov
sub
pop
pop
ficomps
ja
sbb
call
rcrl
inc
pop
mov
add
andl
pop
stos
adc
aaa
push
mov
les
sub
pop
xchg
popf
jmp
push
sbb
jg
and
fsubrs
mov
movsb
adc
stos
push
sub
push
out
push
and
adc
dec
sub
pop
das
mov
dec
sub
xor
fsub
jle
jb
aas
scas
jnp
add
movsl
push
dec
fistps
hlt
fbld
dec
push
out
aam
clc
lret
or
adc
jnp
jne
mov
cmpsb
dec
mov
xchg
mov
xor
ljmp
xchg
mov
cltd
out
cmp
lahf
outsb
dec
mov
mov
dec
xorb
cld
je
mov
stos
test
push
cltd
std
dec
cmpl
cmp
and
dec
pop
push
cmc
in
aaa
pop
data16
push
mov
push
enter
mov
or
or
adcb
lods
xor
lret
add
aas
aam
sub
unpckhps
adc
lods
and
call
cmpsb
mov
and
shl
loop
out
mov
push
add
sbb
jmp
jmp
pop
mov
fdivrp
outsl
std
xchg
insl
push
imul
xorb
and
ret
inc
ret
xor
cmp
sub
loopne
or
adc
lahf
cmp
add
adc
loop
aas
jecxz
out
inc
xor
inc
mov
lock
jg
in
mov
mov
sub
repz
xchg
mov
jle
stos
push
sub
xor
in
adc
adc
sti
xchg
or
pop
sbb
lock
cmpl
and
insb
sarb
inc
shr
shrb
inc
nop
into
xor
lods
mov
or
stos
cmp
cmpsb
mov
adc
mov
cmp
mov
shll
jns
nop
sahf
fbld
dec
pushf
ds
cli
jg
mov
mov
xchg
or
jecxz
nop
enter
scas
add
mov
leave
ja
fidivrs
divb
push
iret
fdivrs
test
sub
iret
rorl
fsub
xchg
lcall
je
negb
in
jp
xchg
js
dec
pop
lahf
mov
push
inc
mov
mov
pop
aad
and
lret
xchg
mov
shrb
mov
out
adc
js
fcomi
jae
test
mov
aam
sahf
fldz
aas
out
mov
int3
jg
js
mov
dec
hlt
mov
cmpl
movl
movl
mov
jmp
movl
movl
jge
push
push
push
call
or
sbbl
mov
add
or
orl
sbb
mov
xor
or
sub
and
add
mov
cmpl
movl
movzbl
movzbl
jmp
mov
jge
pushl
push
push
pushl
pushl
call
mov
mov
sub
not
adc
incl
sbb
xor
mov
mov
add
mov
adc
shrd
adcl
shr
mov
mov
negl
xor
xor
or
mov
sbbl
movl
xor
movl
cmpl
movl
mov
jmp
mov
movl
jl
push
call
adcl
addl
orl
xor
movl
movl
movl
andl
movl
incl
movl
movl
cmpl
movl
movl
mov
jmp
movl
jge
pushl
push
push
call
sbbl
subl
andl
sbbl
decl
movl
movl
cmpl
movl
movl
movl
jmp
mov
je
push
pushl
call
subl
add
addl
sub
andl
adcl
add
cmpl
movl
movl
jmp
movl
jbe
pushl
call
adcl
adcl
xor
sbbl
subl
xor
xorl
movl
movl
not
movl
cmpl
movl
movl
movl
movl
jmp
movl
jle
pushl
pushl
pushl
pushl
pushl
call
orl
sub
xorl
andl
decl
addl
sub
movl
movl
or
movl
movl
mov
and
mov
movl
jmp
out
adc
adc
sbb
mov
pushf
outsb
sub
push
push
sub
push
push
repz
xor
lods
dec
adc
loope
or
scas
jmp
loop
mov
push
push
pop
out
movb
jl
lods
roll
in
jle
mov
dec
xchg
fbld
mov
push
pop
push
jae
or
stos
ror
or
bound
xchg
adc
mov
push
std
repnz
jnp
movsb
mov
dec
dec
stos
ljmp
inc
inc
mov
shl
push
ffree
mov
arpl
add
cltd
rcrb
mov
pop
test
scas
jae
shrb
lds
lods
dec
idivb
fcompl
pusha
notl
push
mov
inc
inc
mov
inc
mov
add
pop
hlt
xchg
add
das
push
sub
push
cmp
or
xchg
dec
movsl
mov
xlat
inc
setns
xor
or
imul
enter
rorl
and
add
and
add
and
mov
pop
imul
mov
xor
mov
nop
leave
mov
adc
inc
push
adc
fwait
xchg
test
inc
lds
pop
add
cmp
icebp
icebp
sub
inc
mov
pop
call
movl
dec
mov
bound
es
cs
mov
jecxz
add
xchg
push
fldenv
xchg
aad
dec
push
sub
addb
sbb
sahf
push
sub
data16
mov
push
in
repz
in
outsb
sar
cmp
sub
xor
mov
add
iret
insl
jecxz
mov
mov
mov
add
xchg
xchg
fisttpll
in
out
xchg
cmc
jb
or
push
outsl
mov
pop
or
push
hlt
and
das
xchg
mov
idivl
rorb
xor
jmp
cltd
fcomps
jbe
test
sub
dec
test
push
dec
rclb
rorl
jge
mov
stc
aaa
xchg
sub
jae
int
sbb
jmp
jg
cltd
out
sub
ds
xchg
or
add
cwtl
int
push
subb
mov
mov
lret
mov
iret
outsb
outsl
sbb
aam
mov
dec
rclb
add
mov
push
mov
scas
or
popf
fwait
push
mov
ret
je
pop
repnz
push
dec
lahf
movl
mov
mul
shr
in
and
ljmp
cmp
xor
mov
mov
inc
leave
sahf
sub
iret
fbld
mov
jb
jns
push
popf
inc
inc
sub
mov
and
add
pop
test
fimull
inc
lcall
cmp
rcrb
movsb
testl
jno
cli
dec
loopne
mov
in
adcl
inc
in
push
sbb
add
add
ficomps
adc
push
and
mov
jg
test
mov
fstpl
out
fldt
pop
testl
sbb
lret
inc
bnd
push
out
std
mov
pop
pop
jns
or
xor
nop
push
aaa
jmp
stc
jge
xchg
xchg
fs
lock
ss
adc
dec
dec
inc
and
xchg
sbb
jmp
inc
dec
or
mov
cmp
cmp
jl
sti
push
sbb
arpl
or
jle
adc
mov
push
push
dec
mov
fwait
dec
shll
in
daa
aad
popf
outsb
push
push
pop
add
and
ret
and
lcall
in
mov
in
adc
or
mov
add
jmp
push
cmpsl
fnsave
add
mov
and
fwait
out
lea
lods
pop
mov
push
ljmp
xchg
jle
inc
or
inc
adc
dec
mov
dec
or
icebp
ljmp
lahf
in
stos
divb
insb
and
rcr
movsb
add
imul
inc
cwtl
mov
dec
mov
mov
test
pop
fldenv
in
fs
data16
push
cltd
das
nop
lret
stos
scas
addr16
push
or
and
xchg
cld
int3
lods
inc
lcall
pop
adc
in
rcll
inc
or
popf
jl
mov
ret
xchg
shrl
cltd
fnstenv
ret
sub
insl
mov
insl
cmp
xchg
push
or
mov
stos
hlt
loope
sub
xchg
push
lret
lea
jo
fmul
scas
lock
ret
jae
cmp
push
pop
mov
jg
jmp
out
push
and
enter
addl
daa
cmpsb
push
jne
ljmp
lcall
in
lods
xchg
ja
pop
jnp
imul
cmp
sbb
cmp
rclb
and
das
roll
insl
jge
cmpl
xchg
cld
sbb
std
mov
int3
fldcw
or
cmp
popa
dec
mov
bnd
inc
ja
fadd
rcrl
subl
jecxz
pop
xchg
rclb
ja
xchg
lock
adc
pop
adc
movsl
test
mov
xchg
test
inc
xchg
mov
adc
or
mov
in
lcall
rclb
pop
inc
cmp
jnp
sarl
rolb
sbb
mov
sti
cmp
xor
ds
pop
push
push
aad
inc
pop
hlt
lret
je
aam
sbb
dec
jp
sbb
and
push
ljmp
fdiv
shl
add
ret
mov
or
sbb
movsl
jae
mov
dec
shl
or
call
dec
fcoml
xchg
add
mov
pop
scas
inc
lea
and
lods
adc
in
add
ds
jge
pop
or
add
nop
ret
dec
in
call
sub
pop
xchg
adc
test
and
cwtl
in
insb
ds
xor
test
shrb
test
imul
addr16
cmc
popa
call
jmp
push
inc
cmp
xchg
mov
popa
jp
mov
flds
inc
loope
add
pop
cmp
or
adc
pop
mov
pop
mov
adc
or
inc
mov
cld
jno
or
rolb
clc
popf
jno
xchg
sub
in
lret
cmp
adc
dec
adc
xor
adc
push
mov
fmull
push
repz
jns
outsl
jmp
dec
jbe
fwait
pop
xchg
pop
inc
cs
testb
icebp
cld
dec
xchg
lods
loope
jecxz
or
ds
cwtl
sti
sahf
test
ljmp
mov
pop
xor
or
xor
test
dec
sbb
sub
sub
int3
inc
test
lods
sbb
inc
xchg
roll
cwtl
iret
jb
xchg
mov
and
int
mov
mov
add
repnz
xchg
fcomps
sahf
ret
mov
es
and
addr16
mov
sub
pusha
mov
stos
push
inc
mov
loopne
aam
pop
fwait
dec
or
xchg
out
sub
adc
imul
inc
loop
sbb
mov
cmc
popa
push
inc
push
cmp
loop
sti
ds
sbb
mov
push
hlt
cmp
in
fs
dec
xor
fldt
mov
mov
das
pop
cmp
dec
jnp,pn
mov
jle
mov
cmpsl
mov
jo
pusha
mov
aad
inc
sbb
and
cmpsl
roll
adc
fstps
jne
cli
xchg
aad
aaa
xchg
xor
fwait
mov
push
inc
cltd
push
inc
int
pop
mov
mov
cmpsl
out
adc
jp
mov
mov
pop
leave
push
pop
and
mov
cmp
inc
or
clc
xor
lahf
data16
movb
sahf
push
pushf
mov
and
and
adc
popa
pushf
jb
rorb
push
addl
mov
xor
ret
leave
aaa
mov
pop
mov
and
cmpsl
lds
mov
stos
shll
dec
mov
mov
dec
jb
insl
stos
push
popf
xchg
inc
xor
mov
scas
jbe
addr16
adcl
or
cmpsb
xchg
std
movsb
hlt
mov
imul
adc
stos
aas
addb
lahf
in
dec
xchg
out
adc
iret
mov
in
sub
pop
sbb
dec
ss
rolb
bound
pusha
push
aad
xor
in
xchg
sub
jb
test
sbb
xchg
mov
scas
dec
and
loopne
ja
mov
jnp
into
sbb
jp
lock
call
fnstenv
dec
in
inc
push
inc
mov
inc
sub
cmp
movsb
mov
or
ja
cmp
rcr
push
sar
push
mov
xor
cmp
lahf
js
scas
cmp
ret
xchg
shl
popa
lahf
fisubs
mov
cmc
pushf
outsb
sub
dec
insb
xlat
sbb
inc
arpl
outsl
push
inc
dec
cmc
xor
ret
pop
cli
jge
inc
xchg
and
cwtl
or
jecxz
test
adc
icebp
shlb
orb
adc
mov
push
enter
cmc
test
cs
fidivrs
aad
fs
xchg
je
es
sti
test
inc
mov
inc
add
das
sar
mov
mov
cmp
stos
jmp
nop
jb
stos
fstpt
fisttpl
stos
js
adc
sbb
jp,pt
ss
fdivs
sub
and
jo
xchg
cmp
cmpsl
push
jge
pop
jp
push
push
mov
jae
loop
pop
push
mov
sarb
xchg
cld
push
add
scas
ret
lahf
mov
pop
or
push
push
cmp
bswap
repnz
mov
xchg
cmp
repnz
pop
fmull
pop
xchg
pop
adc
aas
push
jecxz
inc
jns
lock
dec
push
and
int
mov
sub
mov
sub
mov
push
xor
mov
and
icebp
xchg
or
out
mov
push
dec
int3
and
es
add
cmpsb
iret
mov
sub
cli
jae
or
adc
ljmp
mov
sub
fwait
les
movsb
pop
ret
enter
ret
xlat
dec
sbb
mov
clc
and
arpl
inc
push
cmc
inc
fstl
pop
mov
aas
cmp
out
jno
mov
sbb
adc
push
fsqrt
jecxz
and
repnz
fldcw
or
pop
aaa
dec
mov
pop
lea
dec
fld
add
and
jno
arpl
add
rorl
test
and
leave
in
cmc
pop
mov
stc
add
or
lret
jne
jno
xor
xchg
pop
fimuls
mov
jmp
push
enter
test
std
out
push
dec
ds
jbe
add
xchg
out
or
sbbb
popl
mov
call
rorb
sbb
cltd
repz
xchg
ds
adc
xor
cmpsl
shlb
adc
into
mov
fsubrs
iret
dec
hlt
bound
pop
out
pop
mov
sub
dec
test
test
dec
and
in
xor
inc
nop
jmp
ljmp
shlb
int3
fs
and
mov
pop
ja
xlat
or
lahf
mov
cmp
in
mov
mov
lcall
and
xlat
xchg
leave
je
int
sbbb
lahf
sbb
or
pop
int
pop
pop
lds
sub
lret
sti
and
push
mul
call
inc
push
pop
or
fwait
sub
jle
pop
sti
ss
dec
shrl
jmp
int
jle
push
xchg
mov
pusha
jge
stos
addr16
push
lock
int3
es
stc
adc
xor
and
imul
sbbb
mov
les
sub
out
cmpsb
adc
fcmovu
mov
enter
xor
lret
aas
dec
mov
sti
loopne
ljmp
xor
mov
cmpsb
fnsave
ja
in
push
fwait
outsl
xor
shl
add
dec
and
jge
cmp
push
ret
sbb
xchg
or
dec
rorl
pop
and
xchg
fmul
mov
and
push
xchg
in
sub
add
pop
xchg
jl
sub
adc
mov
xor
repz
mov
jb
xor
mov
push
loopne
fisubs
add
sbb
mov
adc
sub
inc
daa
push
xor
add
je
push
stc
ret
outsb
jbe
jl
add
je
std
jg
dec
lret
dec
clc
jle
mov
or
add
ljmpw
mov
jne
jbe
mov
fnstenv
jb
out
dec
mul
xor
cmp
sbb
inc
cmp
xor
stc
fcmovbe
iret
fdiv
cmp
imul
mov
rcl
xor
mov
push
jg
ds
lock
and
and
cmp
mov
das
mov
sbb
and
sub
mov
pushf
mov
dec
xchg
inc
cwtl
ljmp
jb
mov
mov
imul
mov
into
mov
enter
inc
pop
push
pop
mov
rcl
hlt
arpl
adc
mov
cmpsb
xchg
jle
outsl
fistl
sub
cmp
movaps
jg
dec
sahf
sub
setle
xchg
pop
sbbb
repnz
fidivl
in
push
or
aam
xor
xor
cld
outsb
add
mov
popf
xchg
and
sub
inc
lock
popf
mov
dec
enter
aaa
push
out
test
movsb
xor
cmpsl
jno
sub
loopne
push
xchg
loop
sbb
and
mov
xor
lcall
add
sub
fimull
xor
and
push
clc
pop
loop
adc
out
xlat
cmc
adcl
lea
in
inc
dec
or
in
out
mov
iret
lock
mov
cmp
xor
jmp
pop
mov
cmp
mov
push
dec
es
idivb
in
popa
xlat
xchg
es
notl
je
push
or
aaa
push
xor
xchg
pop
push
xchg
leave
std
enter
push
daa
xchg
aad
outsb
sub
daa
xchg
jle
scas
ljmp
stos
dec
cmp
jp
pop
pop
lods
push
hlt
and
inc
cld
stc
adc
gs
sbb
sub
and
sub
and
mov
inc
dec
pop
out
iret
cld
jl
lea
daa
hlt
xor
cs
pop
pop
scas
movsl
push
mov
fs
pop
jmp
pop
xor
jge
es
int3
fwait
stos
out
inc
insl
jmp
cmp
xchg
jno
or
sbb
out
stos
jge
and
repnz
jno
xor
cmp
das
mull
ja
nop
sub
ret
mov
repnz
enter
mov
cmpsl
jecxz
out
cs
fildll
jge
int3
pushf
daa
add
cld
jp
mov
mov
mov
dec
addr16
das
mov
adc
fnstenv
loopne
jne
xchg
dec
xchg
push
dec
loop
inc
out
fisttpl
das
sbb
cwtl
push
shlb
test
xchg
pop
outsb
insl
pop
mov
pop
lods
shrl
or
fs
sub
sbb
fmull
aaa
push
mov
xchg
mov
cmpsl
out
sub
and
icebp
popf
mov
cwtl
xchg
bound
leave
addr16
push
loop
pop
push
mov
ds
dec
pop
mov
jne
jbe
fdivs
push
pop
and
fcoml
ret
jo
dec
push
stos
test
push
lcall
iret
xchg
cmpsl
sbb
sbb
popf
jmp
out
sbb
jns
js
test
rcl
out
pop
mov
mov
lea
into
hlt
insb
jmp
xor
inc
mov
mov
pop
inc
mov
push
out
or
notb
push
mov
out
jmp
repnz
jge
out
arpl
inc
cmp
jae
repz
xlat
jge
inc
jmp
out
pop
aaa
in
lcall
cmpb
pop
popa
mov
jg
inc
and
rolb
jge
cmpsl
shll
dec
addb
fnstsw
push
or
mov
fptan
dec
out
push
mov
sbb
mov
xor
cmc
fwait
lret
lcall
fimull
or
push
rcrl
icebp
cmpsl
or
or
xor
xchg
repz
mov
outsb
es
cmpsl
stos
out
in
dec
dec
dec
out
jmp
push
adc
adcl
inc
fstpt
out
sbb
into
push
shrb
pop
mov
arpl
stos
mov
xchg
mov
std
xor
jae
cwtl
lock
dec
ds
sbb
rol
stc
lret
fiaddl
sarb
cmp
les
or
inc
lret
sti
or
shrb
in
rcrb
rcrb
dec
lock
mov
lock
sbb
add
mov
mov
shrl
jp
sub
add
aad
mov
lcall
or
mov
sub
mov
gs
cs
jg
mull
pop
xlat
push
into
push
mov
pop
xchg
push
mov
ja
mov
into
mov
inc
adc
je
data16
gs
jge
aam
pop
fisttpll
idiv
fimull
cwtl
pop
stc
xchg
cmp
jg
add
cmp
xlat
xchg
cmc
or
pop
push
sbb
pop
xchg
xor
mov
movsb
das
rep
dec
sub
jns
fsubr
xchg
fnstsw
fisttps
jne
sub
insb
cmp
xor
jno
cmpb
add
in
and
fistpll
std
lcall
inc
daa
xchg
es
adc
iret
sbb
sbb
dec
addr16
fildl
loopne
rcrb
movsb
movsl
and
xchg
mov
push
iret
sub
mov
jno
rorl
sub
push
cmp
inc
xchg
mov
out
iret
push
xor
rol
loope
add
imul
xlat
push
test
or
push
inc
sahf
ss
jns
xchg
or
stos
xchg
aaa
rcrb
dec
movl
pop
mov
imul
push
inc
add
push
rcl
xchg
scas
pop
inc
push
mov
pop
mov
or
loop
cmpb
jl
dec
or
mov
cmp
cmp
mov
bound
into
xchg
arpl
hlt
repz
movb
jge
pop
cmp
sub
and
xlat
aad
daa
cmp
int
mov
sbb
dec
xor
sub
enter
pop
and
mov
std
dec
das
pop
pushw
add
aaa
or
sub
xchg
jae
mov
sti
cmp
js
dec
fwait
bound
sti
jb
adc
jle
ret
add
add
fsubrp
mov
lods
das
adc
pop
nop
ds
sbb
inc
sbb
or
cltd
inc
mov
sub
adc
js
pop
jge
adc
xor
pop
add
cld
test
xor
mov
cmp
sub
lods
xor
adc
aaa
jge
jae
sub
mov
scas
mov
adc
das
cltd
int3
repz
pop
test
pop
lea
or
int
jb
pop
pop
cmp
and
ljmp
adc
std
adc
push
push
inc
popa
add
pop
cmpsl
inc
iret
je
dec
and
xorl
jle
cmp
mov
mov
filds
dec
xchg
cmp
xchg
sahf
ss
pusha
mov
fwait
jmp
adc
mov
xlat
out
pop
sbb
mov
test
fidivl
push
sbb
dec
mov
or
outsb
imul
or
cmp
sub
sub
movsb
cmp
mov
stc
test
xlat
xchg
out
mov
inc
scas
pusha
mov
sub
push
aad
push
push
mov
mov
jns
test
xor
call
popa
out
adc
adc
sarl
loope
cs
sub
sbb
or
xchg
cmp
icebp
xor
dec
add
xor
out
cs
sub
dec
movsb
mov
call
push
outsb
xchg
or
aaa
mov
xor
std
pop
cmp
fimull
loop
mov
mov
dec
addr16
inc
cmp
mov
inc
movsl
sti
dec
leave
pusha
xor
pop
rcl
in
pop
inc
jge
pop
fildl
mov
cld
and
notl
sbb
aas
push
lods
push
ljmp
xor
mov
lcall
mov
aad
push
outsl
fbstp
lret
jl
aad
adc
or
leave
pusha
xor
add
or
xchg
mov
push
out
or
test
sub
arpl
jmp
jbe
mov
lret
ret
xchg
or
xor
mov
icebp
pusha
mov
leave
in
jecxz
inc
pop
sub
xchg
xlat
movsb
xchg
cmp
and
xor
hlt
rolb
mov
dec
inc
dec
dec
xlat
adc
in
cmpl
jae
cmp
mov
hlt
mov
aaa
sbb
xchg
hlt
fnstenv
rcll
mov
xchg
mov
push
out
das
sbb
push
add
push
daa
clc
adc
in
and
call
jno
push
xchg
and
movsb
test
jns
aaa
int
pushf
daa
cmp
dec
cmpsb
xchg
fs
push
pushf
test
sub
inc
mov
stc
sbb
push
pop
push
jle
cmpsb
jno
push
dec
aad
pop
xchg
dec
inc
mov
sub
add
aad
addr16
out
das
or
fisubrs
mov
jg
mov
sub
mov
out
in
cld
xor
xchg
std
cwtl
aas
roll
pop
add
addr16
sub
lods
fldcw
roll
jb
sub
adc
or
jb
or
mov
dec
int3
add
pop
loopne
scas
loope
push
popa
mov
add
xchg
pop
xlat
push
lock
add
out
test
ds
imul
dec
xchg
insb
mov
jge
insl
inc
xorl
movsl
jbe
ret
push
jbe
movsl
and
lds
cmp
shll
xlat
xchg
mov
push
lds
mov
and
and
inc
int3
pusha
dec
nop
movsl
out
xor
out
fldenv
jecxz
mov
mov
dec
mov
and
out
cmpsl
incb
test
dec
adc
sahf
test
test
sarb
cmc
jge
push
sahf
push
dec
test
daa
movsb
mov
ja
out
mov
leave
out
leave
rcll
push
mov
cmpl
inc
ss
sbb
xor
pop
cmp
push
jge
push
xchg
repz
iret
fistps
push
cltd
fiadds
push
pusha
outsl
sub
pop
inc
xchg
and
and
add
mov
cltd
and
sbb
pusha
pop
call
lret
rcrb
mov
xchg
mov
cmp
mov
mov
cmp
repnz
aas
jge
insl
repz
jp
in
out
out
dec
outsl
jmp
shl
repnz
jle
daa
jmp
ja
pop
adc
jge
cmp
mov
jmp
push
out
scas
sbb
sub
and
or
mov
f2xm1
ret
cmp
lds
movsb
lcall
add
mov
xchg
in
ja
ds
and
sbb
fld
pop
jl
loop
or
pop
mov
adc
arpl
adc
out
cli
cs
push
cld
pop
enter
jmp
scas
mov
fcompl
inc
or
sub
mov
push
dec
jae
pushf
adc
mul
call
xchg
cmp
int3
nop
mov
icebp
mov
insb
jmp
cmc
mov
add
mov
daa
xor
das
aas
jo
or
xor
add
mov
mov
lret
jl
ja
xor
sub
or
cld
stos
dec
sar
sub
stos
mov
pop
sub
xor
mov
in
adc
jl
jge
loopne
fldt
sub
pop
lods
int
inc
js
adc
mov
add
xchg
xor
cld
idivb
ret
mov
mov
repnz
push
inc
xor
jg
test
clc
xlat
xchg
test
fldl
mov
cmp
sbb
data16
int
ja
push
sbb
ja
in
enter
cs
fistps
daa
je
jge
fsubl
dec
jae
xchg
cmc
std
and
insl
sbb
or
fnstcw
dec
xchg
loop
mov
mov
and
add
xchg
xlat
inc
repnz
pusha
sub
mov
cld
jmp
jae
and
fdivs
arpl
xor
dec
cs
xor
lcall
adc
repz
rcrl
cltd
jbe
sub
iret
adc
jmp
mov
jb
lods
cmp
in
iret
sbb
jo
ds
aad
fstpl
insb
push
fnstenv
loopne
add
fldenv
mov
xorb
push
adc
outsl
cltd
mov
addr16
loope
push
int3
ret
cmp
je
inc
adc
adc
and
dec
pop
add
jb
flds
inc
jne
jp
scas
push
pop
jmp
inc
jp
gs
xor
pop
dec
clc
enter
ja
mov
xchg
fisttpl
bound
and
scas
adc
jae
test
xchg
mov
adc
lret
pusha
jl
inc
in
nop
loopne
push
cmp
cmp
mov
jae
and
mov
lret
xor
xor
lock
push
push
js
imul
or
pop
sub
adc
dec
mov
out
out
cli
in
adc
popf
or
push
mov
jne
mov
cld
lock
imul
test
shl
popf
insl
fdivrp
int
ja
sbbl
jl
cmp
imull
xor
push
mov
out
inc
mov
pop
fcomip
repnz
arpl
test
xor
fisubrl
fdivrl
mov
adc
xor
popf
int
fistpll
sub
add
insl
xchg
fwait
shrb
mov
inc
jnp
xchg
xor
mov
and
mov
ja
add
addr16
add
arpl
ret
sbb
jp
sti
insl
fwait
mov
or
fldt
jae
in
cmp
sahf
test
les
in
ss
cld
mov
add
jb
xchg
scas
fwait
insb
into
iret
cmp
sub
icebp
bound
mov
fldcw
fcmovnu
mov
fsts
jne
jmp
les
and
sub
jbe
jno
jbe
push
pop
dec
sti
xor
scas
mov
adc
outsb
xor
mov
lcall
cwtl
outsl
fisubrl
sub
xchg
inc
dec
pop
shl
push
or
fdivrs
nop
fildl
push
sub
push
push
sahf
xor
inc
xchg
cltd
inc
fisubl
add
enter
cmpsb
dec
cmp
dec
mov
inc
xor
ror
insb
pop
cmp
aad
add
or
mov
addl
sub
repz
dec
sub
mov
dec
jb
mov
and
jnp
sar
scas
jp
jb
mov
shll
pop
sbb
test
mov
mov
inc
sarl
mov
xchg
js
mov
jo
enter
fs
scas
pushf
add
outsl
loope
pop
pop
lods
arpl
jecxz
cmp
mov
jge
dec
pop
mov
test
xchg
mov
sub
fstpl
mov
std
mov
insb
inc
dec
imul
into
jp
sbb
adc
adc
sub
pop
dec
sub
fcoms
sub
pop
ja
adc
or
mov
dec
insl
or
xchg
lcall
lahf
adc
rcl
jo
ss
aad
test
daa
clc
pop
pop
pop
fxch
adc
mov
iret
xor
push
fwait
dec
test
jg
lret
rcll
je
je
inc
jmp
lahf
fcmovnbe
movsb
and
push
adc
out
cmp
pop
imul
xchg
jae
ljmp
sbbb
or
ret
andb
pop
test
cmp
jg
loop
add
dec
sbb
dec
cmp
push
jg
out
fstps
inc
cmp
es
out
ljmp
imul
pcmpgtw
scas
out
xchg
sbb
sub
stos
or
mov
out
pop
pop
imul
jle
mov
and
sbb
cmp
lods
stos
insl
dec
jno
jns
and
call
movl
cmpl
movl
movl
movl
movl
jmp
movl
mov
jg
pushl
pushl
call
subl
xorl
subl
andl
cmpl
movl
movl
movl
jmp
movl
jbe
push
push
call
adcl
subl
xor
xorl
xor
add
orl
movl
xor
movl
movl
mov
shl
subl
mov
subl
push
andl
push
push
adcl
push
xorl
call
andl
mov
cmpl
movl
movl
jmp
movl
movl
je
push
call
add
mov
xor
xor
addl
sbb
sub
mov
mov
xor
xor
cmpl
not
movl
movzbl
jmp
movl
movl
jbe
push
call
andl
adcl
sbb
xor
add
sbb
mov
negl
sbbl
mov
mov
add
mov
or
mov
adc
sub
cmpl
movl
not
movl
jmp
mov
movl
jae
push
call
adc
dec
andl
adcl
and
add
mov
lea
xorl
mov
xorl
mov
orl
or
negl
and
mov
adcl
or
xor
cmp
jne
mov
mov
sub
shrd
orl
shr
sbb
mov
sub
mov
orl
shl
xor
xor
addl
or
movl
mov
movl
cmp
movl
jne
add
mov
add
mov
xor
xor
cmpl
mov
mov
notl
jmp
mov
notl
jae
push
push
pushl
pushl
call
xor
add
mov
and
and
and
add
sbb
mov
and
mov
cmpl
movl
movl
jmp
mov
jb
push
push
push
pushl
pushl
push
push
push
push
call
movzbl
add
mov
mov
add
mov
sbb
xor
or
mov
xor
and
sbbl
not
not
mov
shrd
sbbl
mov
cmpl
mov
mov
not
movzbl
jmp
mov
jge
push
pushl
push
push
push
call
add
sbbl
adc
movzbl
sbb
movzwl
or
andl
movl
mov
xor
shr
cmpl
mov
mov
movzwl
jmp
movl
movl
jae
pushl
push
pushl
push
push
push
call
or
adc
adc
mov
add
add
mov
add
mov
subl
xor
incl
or
orl
shl
sub
cmpl
mov
mov
jmp
movl
je
push
pushl
push
push
push
call
and
sbb
movzbl
sub
mov
adc
mov
mov
sub
xor
sub
jmp
out
cmp
cmpsl
adc
adc
xor
push
push
fnstcw
xchg
aaa
adc
rolb
mov
and
jge
cmpsl
push
ret
lcall
jle
push
dec
inc
out
call
in
xchg
pop
fdivs
jle
ret
pop
jbe
and
xchg
int3
push
cwtl
xor
jmp
mov
fnstenv
fs
mov
cli
sub
inc
cmp
and
sbb
js
dec
push
aas
inc
pusha
loop
xchg
cmc
xchg
lods
push
in
fwait
hlt
mov
and
or
icebp
imul
pop
sub
repz
dec
out
and
call
xlat
lods
mov
inc
dec
popf
loope
testl
sbb
loopne
jae
pop
sahf
sahf
imul
sbb
dec
and
sbb
mov
mov
inc
or
outsb
inc
fidivrl
imull
sti
xor
in
xchg
ljmp
pop
scas
and
add
mov
mov
dec
outsl
mov
sub
addr16
jg
jbe
mov
pusha
cs
cmc
add
pop
das
jmp
ja
or
fs
pop
pop
or
aas
in
jmp
cmp
pop
add
mov
jnp
jns
or
xchg
loop
cli
push
int3
in
mov
cmp
mov
adc
jno
inc
or
push
sub
insb
call
loopne
mov
fs
cltd
daa
sbb
mov
push
lods
push
arpl
pop
int3
jo
or
rorb
adc
js
std
ds
icebp
sbb
xor
xchg
pop
jne
xor
dec
enter
addb
pusha
and
add
jmp
sbb
test
frstor
jnp
test
jp
test
cmp
sahf
adc
adc
inc
sbb
dec
pop
imul
ljmp
mov
inc
mov
xor
aas
fdivl
in
mov
pop
sub
mov
adc
sbb
les
test
loopne
test
rcrb
or
xchg
jne
shlb
ret
jg
out
add
inc
in
das
xchg
stos
mov
adc
ret
outsl
mov
fcoml
cmpsb
int3
push
dec
test
pusha
pop
mov
or
xor
dec
mov
xor
lahf
test
mov
xchg
shll
or
leave
dec
dec
pop
lret
cs
jb
jns
jb
je
push
push
shll
es
push
pushf
and
in
xor
inc
push
mov
jmp
test
add
addr16
ljmp
or
jns
mov
or
lret
sahf
inc
in
and
je
xchg
add
push
xor
repnz
popf
lods
sbb
aam
mov
int
or
fnstsw
inc
stc
adc
aaa
push
lds
cmpsl
outsb
push
push
nop
rcrb
lock
pushl
xchg
cmpsb
out
or
sbb
mov
imul
cmpsl
adc
in
or
je
sub
movsl
push
scas
pop
bound
int3
cld
mov
mov
jno,pn
mov
dec
inc
lea
jecxz
out
push
pop
cmpsl
jmp
das
in
fildl
ficomps
into
jns
mov
push
loop
mov
pushf
pop
push
and
dec
pop
pop
push
dec
inc
add
sahf
xchg
cmpsl
popa
mov
ret
xchg
out
aam
stc
jno
mov
xchg
cmpsb
inc
xchg
mov
pop
dec
mov
lea
cmp
out
popa
ficomps
push
lret
loope
enter
mov
push
inc
pop
add
fwait
fwait
popa
lods
das
ljmp
and
sahf
arpl
xchg
fbstp
pushf
push
pop
add
adcl
sub
das
loop
cmpsl
mov
daa
shr
hlt
stos
dec
pop
frstor
in
sub
out
mov
mov
testl
sub
mov
outsl
lahf
adc
adc
adc
sbb
mov
stc
sub
cmp
xor
or
mov
adc
js
mov
inc
jbe
pop
sub
mov
pop
pop
mov
jge
jle
and
lret
or
lcall
and
or
ss
les
popf
mov
mov
in
loop
inc
xor
xor
xor
cmpsb
pop
jle
pop
dec
xor
mov
outsl
jnp
sbbb
or
cmp
push
rcl
cmp
sbb
adc
sub
sahf
fwait
jge
out
scas
mov
push
cmp
imul
sahf
aas
dec
jecxz
ret
pop
pop
and
sub
es
xlat
inc
jle
xchg
jmp
out
mov
inc
notb
in
cmp
inc
repz
sbb
mov
pop
jecxz
ficoml
xchg
data16
addr16
sub
je
jne
aam
xchg
mov
dec
ljmp
or
shlb
dec
in
loop
stos
test
cli
shrb
popa
sub
add
mov
sbb
jmp
hlt
iret
fidivs
xlat
fcoms
ror
ss
mov
fcomps
dec
push
dec
adc
ror
dec
cwtl
loopne
push
mov
sbb
dec
mov
test
mov
clc
enter
cwtl
stos
lods
fs
imul
daa
xchg
scas
and
arpl
jl
repnz
repnz
xchg
sbb
jle
in
pop
mov
fs
and
cwtl
pusha
jno
movsl
jae,pt
sub
cmp
adc
and
xchg
scas
xchg
sbb
icebp
push
out
ss
mov
shl
call
in
sub
rcll
mov
pop
adc
addl
sti
jg
xor
sbb
jge
xor
dec
sahf
aam
adc
push
shll
in
jnp
rcrb
jnp
je
pop
xor
out
lods
xchg
cmp
mov
push
pop
or
rol
pop
sbb
dec
push
sub
and
jl
mov
sbb
sahf
cmp
mov
and
or
ds
lock
xor
xchg
mov
rcll
les
cmp
jns
mov
mov
and
jb
popf
lods
out
sbb
insl
movsb
sbb
push
popf
adc
sub
adc
daa
fcomi
test
data16
push
cmp
scas
push
loop
dec
loop
in
mov
cmp
hlt
movsb
out
add
jmp
or
aaa
je
lods
adc
mov
push
mov
adc
cmp
mov
inc
je
inc
xchg
xchg
jns
xor
addl
repz
mov
push
fcoms
fs
cmp
es
push
jb
sub
icebp
nop
cmpsb
adc
xor
lret
mov
cmp
xor
push
mov
insl
lcall
inc
lods
jmp
pushf
lock
mov
jecxz
dec
ss
pop
mov
push
push
push
pop
push
adc
jb
adcl
jmp
mov
mov
add
and
in
addr16
and
sarb
cli
scas
lcall
jo
adc
movsb
sub
jl
dec
sbb
push
sub
jbe
sub
mov
fiaddl
push
std
test
and
ret
fldcw
enter
mov
icebp
data16
mov
pop
cmpsl
call
rcrb
mov
push
into
sub
outsb
xor
shlb
pusha
lds
lea
jle
in
cmp
sub
arpl
movsb
or
push
ret
mov
andb
test
out
add
out
das
sub
xchg
loope
add
cltd
fdivrs
sbb
mov
and
hlt
sbb
repnz
clc
and
int
stc
cs
cld
cmc
jns
push
add
ret
mov
push
fwait
lock
in
cwtl
mov
mov
ja
in
dec
push
out
jle
mov
and
pop
fimuls
xor
cmp
and
and
add
int
inc
xchg
lds
inc
stos
cli
cwtl
divb
aam
out
leave
shrl
jb
rorb
push
testb
cmp
xor
add
add
call
inc
sbb
cmp
in
xchg
stos
cmp
mov
cmp
jle
popf
pop
cmp
mov
stos
repz
cmpb
out
hlt
push
mov
pushf
dec
mov
bound
ficoml
sahf
sbb
ret
mov
push
xchg
mov
xchg
dec
icebp
test
lcall
xchg
push
push
mov
pusha
add
mov
pop
xchg
lea
inc
xchg
in
dec
or
popa
sub
xchg
xor
add
jns
js
cmp
bound
mov
cmp
mov
loope
int
stc
lods
call
mov
out
popf
insb
jmp
push
jae
movsb
test
dec
push
mov
push
and
ja
and
fs
mov
cs
xor
adc
mov
addr16
jg
push
ds
lods
jp
jbe
xorl
or
iret
imul
mov
xchg
mov
mov
dec
and
inc
jo
sbb
fnsave
ja
rcrl
dec
lods
stc
push
jge
decl
push
fs
push
lret
xchg
dec
fcomps
mov
cwtl
lock
iret
cmp
movsl
in
xor
dec
imul
imul
dec
fwait
imul
jbe
jmp
inc
cmpsb
mov
push
mov
jno
into
incb
xchg
and
xchg
push
int3
xchg
mov
lahf
sti
out
push
cmp
dec
andb
mov
dec
jnp
movsl
gs
xabort
sub
je
dec
or
aaa
repz
in
fs
roll
lods
std
cmpsb
mov
push
pushf
into
ret
adc
mov
shlb
push
or
test
mov
mov
outsb
mov
push
sbb
ret
cmpsb
and
xchg
adc
mov
clc
pop
lods
cmc
out
pop
in
xchg
push
clc
rcll
adc
shlb
sbb
hlt
bound
add
aaa
and
repz
mov
and
out
pop
cltd
and
jae
pop
push
adc
sub
inc
pop
sbb
sub
and
jecxz
jb
pop
outsb
cmpl
aad
cmp
or
jecxz
aam
mov
sbb
push
jg
out
cs
dec
sub
cmpsb
stc
or
add
pop
mov
sahf
arpl
add
test
shrb
and
adc
dec
sahf
cmp
into
popf
lods
pop
mov
ljmp
pop
xchg
daa
cwtl
push
cmp
test
sbb
and
std
ffreep
sub
dec
in
fidivs
push
cmp
repz
and
loop
xchg
mov
iret
mov
inc
xor
or
nop
jmpw
dec
jle
sub
cmp
lahf
xor
cld
clc
jns
cmp
bound
jmp
mov
pop
push
add
repz
lcall
imul
mov
add
and
jb
sub
xor
cmp
insb
pop
inc
adc
nop
shrl
sahf
lds
into
adc
jne
mov
repz
push
jno
je
popa
mov
aas
cmp
daa
mov
and
and
rcrl
or
cltd
fnstenv
jmp
shll
sahf
mov
and
adc
lret
fdivl
fstpt
pop
sbb
mov
stc
nop
subb
push
and
fsubrl
mov
hlt
rcrl
loope
jmp
out
sahf
xor
bnd
mov
adc
loope
stos
dec
in
push
xor
iret
std
sub
add
clc
mov
repz
test
in
jle
es
pop
xor
xor
add
enter
imul
in
push
lods
ret
es
mov
xor
out
mov
adc
sbb
fbstp
stos
lds
nop
sbb
into
mov
mov
outsl
lret
mov
test
sahf
or
in
push
pop
int3
adc
dec
dec
sbb
repnz
hlt
pop
std
enter
js
das
jecxz
mov
mov
add
pushf
pushf
repnz
dec
mov
push
adc
js
out
or
xor
jne
mov
addr16
je
repnz
mov
or
jne
clc
push
shll
shlb
shlb
les
scas
je
ficoml
shrb
mov
lea
adc
xchg
in
xor
mov
mov
mov
or
std
cmpsl
inc
cmp
push
fimull
mov
imul
je
pop
popf
loopne
sbb
and
add
aas
xor
xchg
repz
pop
cmpsb
sub
mov
cmp
loop
shll
shl
pop
and
das
or
andb
loope
sahf
pop
add
xchg
push
cmp
pop
addb
push
in
sub
mov
lahf
jns
pusha
out
push
adc
ss
js
push
ja
arpl
jecxz
mov
jge
loope
add
pop
dec
mov
dec
sarb
lret
test
fcmovnu
into
push
inc
dec
mov
sub
test
cmpsl
cmp
pop
ret
fildl
push
pop
arpl
xlat
sbb
sbb
roll
push
stos
jle
sahf
jl
xor
scas
dec
rcrb
dec
mov
popa
lock
xor
scas
dec
mov
adc
add
js
push
mov
dec
cmp
ret
cwtl
xchg
dec
xor
dec
sub
and
lcall
dec
sahf
insb
bound
push
fsubs
rol
fs
les
das
clc
mov
adc
iret
push
xchg
leave
lret
cmpsl
and
adc
inc
jl
adc
ss
or
push
fs
fimuls
out
hlt
add
std
mov
stc
mov
sbb
fstpt
clc
mov
dec
popa
dec
sub
cmc
xchg
setp
pop
jecxz
dec
aad
push
icebp
fdivr
and
push
jbe
adc
jg
and
mov
mov
in
xchg
in
cmp
pop
pop
popf
mov
dec
mov
or
mov
lret
scas
imul
sarb
xor
fbstp
iret
add
cmp
pop
nop
dec
lahf
and
imul
out
add
pop
sub
ss
das
je
bound
mov
sub
ja
js
adc
int
push
fwait
aam
out
mov
movsb
and
inc
popf
cmc
test
cmpsl
dec
mov
data16
in
iret
push
mov
pop
nop
fldcw
add
pop
xsave
push
dec
andb
mov
mov
mov
xor
inc
test
cmpsb
jmp
dec
je
aas
imul
aad
cmp
leave
jns
xchg
enter
adc
sti
push
cli
sub
push
fistps
scas
jb
sub
and
pusha
test
insl
js
inc
cmp
pop
lea
pop
sbb
push
xor
push
nop
inc
inc
jg
mov
mov
lods
popf
mov
out
xchg
cmpsb
mov
ds
jg
xchg
out
addr16
aas
pusha
mov
sub
scas
jmp
mov
mov
mov
mov
mov
and
subl
pop
iret
dec
mov
lret
jno
mov
fs
es
das
mov
add
jmp
jb
in
push
push
andb
inc
xchg
mov
dec
lcall
stos
cwtl
ljmp
jle
jno
js
fmuls
ss
rcrb
inc
push
push
jb
jge
push
lcall
and
mov
mov
in
mov
lock
pop
adc
dec
rolb
adc
mov
sbbl
loope
xchg
cmp
enter
mov
popf
push
scas
test
pusha
in
mov
movsl
je
enter
negb
add
jge
shlb
ja
jnp
mov
aaa
adc
repz
psrlw
orb
pop
sti
rorl
pop
adc
and
in
xorb
in
inc
pop
jle
jecxz
fbld
jb
adc
ljmp
push
ficompl
inc
aas
push
ss
and
gs
gs
and
int3
pop
jns
push
mov
cmp
dec
in
push
rcrl
jno
xchg
lret
fldcw
pop
out
jp
jnp
xchg
stos
lock
and
pusha
xchg
or
mov
scas
pusha
test
fincstp
jno
inc
shl
adc
xor
les
sub
xor
rol
test
std
xor
ja
lahf
xchg
subl
insl
test
addr16
inc
xchg
adc
mov
add
push
repnz
repz
jo
ljmp
das
sub
sub
das
and
scas
and
push
cwtl
pop
clc
xchg
outsb
push
xor
mull
xchg
jae
xchg
push
insb
test
clc
into
mov
and
inc
adc
cs
pop
clc
pop
subl
jle
clc
popf
sbb
movsl
mov
cmpb
popa
mov
popa
ds
add
shrb
pop
sbb
rcrb
mov
loope
sub
dec
sahf
sbb
mov
inc
aam
pusha
mov
mov
xchg
push
das
push
add
xchg
jns
jecxz
and
bound
pop
adc
push
out
adc
cmp
xchg
sbb
jb
hlt
aaa
sahf
fcomip
xor
sbb
les
jp
mov
inc
xchg
fsubr
cmp
aaa
push
pop
push
test
cmp
xor
xor
jne
lods
and
pop
cmp
in
out
or
push
add
out
dec
out
add
xchg
sti
push
xchg
subl
jb
pop
movsb
cmp
and
fcoml
xor
mov
adc
inc
outsb
test
xchg
and
lods
sub
movsl
out
sub
jmp
loope
sbb
cld
fsubr
push
xor
js
xchg
sub
int
or
movsl
xchg
xor
xchg
jb
lret
inc
cmp
xchg
cmp
xor
adc
out
jle,pn
icebp
rorb
xchg
xchg
jnp
lock
dec
pop
ret
shr
sbb
adc
add
outsb
mov
fst
popa
sbbl
adc
xchg
push
stos
gs
push
push
inc
push
dec
test
inc
inc
aad
pop
and
mov
mov
rorl
xchg
hlt
js
and
xchg
cmp
daa
arpl
dec
push
loope
xchg
iret
xor
adc
out
and
in
sbb
test
xchg
dec
lcall
cmp
test
sbb
cmp
loopne
mov
push
jne
jge
scas
sbb
std
push
mov
iret
and
out
xchg
es
xor
jae
sbb
test
push
jp
fildl
jecxz
mov
and
push
mov
inc
lock
xor
inc
or
les
int
mov
inc
jne
mov
scas
leave
scas
loop
push
inc
sti
mov
inc
std
dec
mov
cmp
mov
or
mov
dec
daa
rcrb
stc
push
jge
sub
imul
aaa
xchg
sub
mulb
lods
jecxz
sub
addr16
jns
popf
xor
jecxz
jl
subl
iret
repz
xchg
in
icebp
xchg
or
xchg
mov
dec
repnz
jbe
mov
ret
cltd
and
mov
cli
cld
test
icebp
dec
out
daa
mov
mov
imul
int3
cmc
mov
call
je
sti
insl
pop
mov
into
jmp
jge
push
push
push
sub
mov
orb
xlat
out
pop
enter
jle
orl
cmp
int
cltd
push
iret
enter
psrlw
scas
in
test
aaa
aam
or
repz
mov
push
adc
jno
movsb
or
pop
imul
mov
pop
fnstcw
scas
inc
insb
inc
cmpsb
mov
enter
je
sub
fstpl
mov
daa
cld
xchg
mov
fnstsw
les
adcb
mov
aas
insl
clc
push
inc
lcall
pop
adc
aam
insl
sub
scas
outsl
pop
cwtl
jb
lods
cmp
dec
int3
xor
mov
and
mov
shrl
je
pop
or
jb
mov
enter
xchg
in
xor
dec
je
cmpl
cmc
add
int
insb
push
int3
mov
xor
out
hlt
sub
xor
pusha
jle
sbbl
fisttps
outsb
pop
add
out
xchg
sbb
jae
cli
mov
test
dec
lods
lods
mov
push
in
ret
sub
adc
sbb
jae
loope
sub
inc
pop
pop
mov
pop
mov
in
jmp
imul
outsl
in
mov
push
lret
and
push
jecxz
sub
mov
movsl
sub
jns
rol
adc
lock
das
xchg
dec
xor
cmc
xor
cmp
insb
out
subb
and
jge
mov
out
loope
sahf
add
sbb
and
mov
mov
lret
xchg
pop
inc
cmp
lds
add
cltd
test
stos
add
int3
xor
add
mov
sbb
pop
push
mov
test
daa
aaa
mov
jae
adc
fidivs
mov
and
cld
or
jns
out
sahf
mov
adc
fldl
mov
push
dec
sarl
shl
loop
addr16
sub
xchg
dec
add
mov
popf
adc
lock
int3
sub
push
test
push
inc
enter
or
jo
fistpll
rep
loop
scas
mov
push
add
jb
out
idiv
mov
xchg
push
xor
inc
scas
daa
mov
mov
mov
sub
xchg
xchg
xlat
shll
cmp
sbb
sbbl
pop
cltd
iret
pop
movsl
nop
call
inc
jge
pop
imul
mov
fcmovnb
add
ja
jo
jnp
pop
xchg
or
aaa
and
cli
xchg
dec
ds
mov
int
push
sbb
sub
push
dec
movsl
add
sub
fimull
jne
sub
sbb
mov
adc
mov
out
pop
sbb
fnstcw
dec
and
out
xchg
popa
enter
xor
xlat
icebp
lock
xchg
sub
or
inc
jne
xor
cmp
les
push
push
out
icebp
js
cmp
fwait
xor
out
mov
aad
cmp
cld
pop
in
sub
cmpsl
or
in
xor
jg
pop
lret
and
nop
pop
push
imull
cmp
inc
lret
cmpsl
push
cli
mov
push
mov
dec
imul
mov
inc
testb
mov
test
push
hlt
xor
push
stos
test
mov
icebp
sub
cmp
jo
pop
cli
das
pop
mov
fs
icebp
sahf
fsub
mov
cmpsl
pop
mov
adc
mov
cmp
sbb
xor
into
jb
pushf
mov
pop
rorb
xchg
cmp
imul
or
int3
cld
test
cmpsb
sbb
leave
pop
popa
jg
or
int3
mov
xchg
lea
call
cmp
xor
idivl
pushf
das
std
data16
fsubrp
mov
inc
in
data16
std
pop
ret
addr16
sub
in
daa
mov
addr16
shrb
push
add
push
push
test
sub
push
enter
pop
ljmp
mov
jmp
xor
das
pop
movsb
adc
adc
xor
or
lock
pop
negl
add
jmp
jp
jo
in
icebp
out
stos
xchg
inc
and
mov
sbb
andb
orl
sbb
jno
stos
mov
xchg
inc
add
out
stos
clc
push
jno
scas
inc
inc
insl
sbb
fwait
pusha
repnz
and
sbb
stos
mov
add
jne
popa
mov
cli
jnp
pop
cmpsl
jne
sbb
pop
xor
in
mov
xchg
hlt
pop
jle
sub
inc
cmp
jecxz
in
jbe
fistl
lea
data16
addr16
jp
sub
xor
and
and
fwait
inc
scas
in
mov
ss
jge
data16
scas
lahf
sbb
outsb
inc
insl
scas
das
scas
adc
mov
xchg
and
sbb
xchg
aad
jb
daa
push
xchg
cwtl
jns
ficoms
pop
adcl
inc
cltd
mov
mov
cmpsl
push
lcall
das
pop
push
jnp
cli
mov
and
cmp
or
pop
aam
clc
mulb
das
xor
sbb
inc
mov
and
adc
shll
dec
lods
mov
fs
pushf
pop
cmc
inc
loop
fisubrl
lahf
ja
jge
movsb
dec
aad
mov
aam
mov
and
fs
or
mov
test
repnz
and
sub
imul
insl
jmp
push
mov
ljmp
xchg
fsts
xchg
mov
push
inc
mov
popf
cmp
sbb
in
jg
fisubs
int3
leave
add
inc
or
rcrb
out
dec
nop
pop
jnp
xchg
push
js
adc
cwtl
sarb
xchg
dec
inc
mov
push
adc
imul
dec
sub
sbb
lret
cmp
cmpsl
push
adc
sti
xor
ds
enter
outsb
ljmp
lahf
outsl
add
jg
xor
fisttps
jo
mov
data16
sbbb
dec
xor
push
cmc
jl
pop
inc
and
test
outsb
cmp
dec
adc
iret
mov
xor
pop
addr16
xchg
add
dec
pop
push
add
cwtl
mov
xor
and
and
jge
fs
pop
jg
movsl
mov
jno
test
test
out
add
stos
cmp
cmp
rol
test
ret
lret
push
pop
stos
lret
pop
ret
push
or
popa
push
scas
adc
cwtl
dec
cmpsb
cs
fisttpll
fmul
or
cmc
or
dec
aam
and
addr16
mov
icebp
lods
stos
sub
call
and
mov
and
hlt
nop
mov
movsb
aad
xor
mov
stos
test
push
sub
cmp
push
sbb
cs
mov
jns
inc
aaa
sub
rolb
and
int
xchg
push
cmp
shl
pop
cmp
cmp
mov
push
lods
dec
out
in
sbb
das
sub
adc
inc
pop
ds
das
fstl
jb
xchg
cwtl
pop
xchg
clc
je
outsb
stos
out
fcoml
add
xor
push
inc
cmc
icebp
sub
sub
pop
xchg
stos
mov
xor
mov
das
lret
cmp
mov
sub
add
sub
clc
sub
dec
subl
sub
fistpl
divb
ljmp
sbb
test
in
lock
leave
inc
flds
in
xchg
push
cld
fstps
push
xchg
ss
mov
das
cltd
aad
fisttpll
repnz
ss
xor
pop
sub
xor
cmp
jb
mov
enter
and
push
adc
and
lret
movsl
pop
es
sub
mov
addb
adc
popa
xor
bound
mov
add
stos
in
adc
daa
mov
gs
jg
repnz
mov
insb
popa
dec
pop
call
cmp
int3
iret
test
mov
ficoms
fidivs
sbb
and
push
lods
out
dec
addb
pop
or
and
roll
jnp
jmp
dec
add
decl
xor
and
push
cmpsl
lock
fdivrs
jns
hlt
pop
dec
call
xchg
dec
insb
lret
test
or
loope
repnz
xlat
xchg
add
cmp
mov
sbb
stos
int3
add
lret
aam
aam
mov
jnp
mov
ljmp
lret
mov
xchg
push
mov
sbb
insl
or
xor
add
test
les
iret
xchg
push
jp
mov
sbb
divb
cltd
mov
ret
ret
ror
or
inc
push
mov
out
jnp
lcall
cmp
dec
mov
loop
fimull
pop
andb
inc
xchg
dec
cmp
imul
add
and
dec
cmp
and
test
lods
mov
and
fs
cmp
xor
mov
add
add
not
mov
jmp
mov
jne
pushl
push
pushl
pushl
pushl
call
sbb
xorl
add
addl
movzbl
or
mov
sub
adc
mov
addl
mov
cmpl
mov
movl
movl
jmp
movl
not
jbe
push
push
push
push
push
call
movzbl
sbb
adcl
mov
and
xor
xor
xor
mov
and
add
cmpl
mov
mov
movl
not
jmp
movl
jbe
pushl
push
pushl
call
xor
add
sub
inc
adc
orl
adcl
mov
mov
mov
add
shrd
incl
shr
adc
mov
cmpl
movl
mov
mov
jmp
movl
movl
jle
pushl
pushl
push
push
call
xor
and
xor
movzwl
sbb
subl
xor
or
mov
sbb
mov
and
mov
sub
xor
sbb
shl
sub
xor
orl
or
mov
cmpl
mov
mov
mov
mov
jmp
mov
jb
pushl
call
subl
movzbl
and
mov
add
orl
sbb
sbb
sub
mov
shrd
addl
shr
mov
mov
adc
mov
addl
xor
xor
adcl
or
shl
lea
mov
subl
mov
shrd
shr
xor
mov
sbb
mov
inc
mov
movzwl
sbb
xor
mov
and
mov
xor
andl
or
adcl
shl
cmpl
mov
mov
mov
movl
jmp
movl
jbe
push
push
push
pushl
call
sbb
addl
mov
sbb
mov
xor
sbbl
neg
imul
xor
jmp
fistpl
sbb
jmp
push
test
cmpsl
insb
scas
inc
dec
push
push
sub
push
push
sbb
lret
mov
fnsave
addr16
out
iret
iret
jmp
fiaddl
cmp
lcall
cwtl
and
sub
sub
test
incl
xchg
jmp
or
add
mov
imul
notl
jecxz
cmp
cltd
cs
negb
jg
add
pop
ds
add
cmpsl
test
sub
xchg
negl
push
test
in
ror
mov
xor
mov
orl
push
repnz
push
int3
aam
adc
adc
jmp
pop
push
jg
mov
std
sub
pop
out
jb
test
mov
ret
mov
jl
push
xchg
rcrb
lds
fisttpll
push
mov
or
imul
subl
ret
insl
xor
clc
enter
imul
lahf
outsb
aas
int3
push
fcoml
mov
xchg
adc
pop
sbb
sbb
mov
xchg
push
mov
test
popf
frstor
mov
cmpsb
popf
mov
add
sbb
das
stos
mov
xor
and
js
movsl
dec
jns
lahf
sarb
sub
imul
aaa
mov
js
xchg
dec
lock
add
or
mov
arpl
or
add
fsubl
jl
xor
push
sbb
jg
dec
pop
ret
add
call
cmpsl
push
cmpsb
ljmp
ss
rorb
add
sti
aaa
add
xlat
and
daa
mov
leave
movsb
lds
into
das
je
add
test
pop
in
lds
das
mov
push
hlt
xchg
js
jg
loope
sti
jp
repz
cwtl
adc
xor
stc
das
ret
jp
fcoml
fimull
pusha
gs
pop
push
push
mov
stos
jns
and
add
out
and
out
mov
adc
out
outsl
cmp
cmp
dec
xchg
les
pop
adc
imul
test
daa
mov
popa
out
jge
sbb
cltd
clc
mov
imul
rorb
rcrb
pop
inc
cmp
pop
cmp
fdivrp
rcll
loop
push
pop
and
fistpl
outsb
and
dec
lods
mov
jl
sbb
dec
movsb
ror
dec
cmp
or
add
pop
jmp
ds
cmp
pop
pop
xor
jbe
push
mov
lahf
mov
push
inc
jnp
ror
int3
xchg
cmp
and
test
pop
push
xor
sarb
test
dec
sbb
inc
xlat
cltd
pop
int
sub
mov
add
pop
inc
cmp
add
mov
negl
push
test
push
test
push
xor
mov
jnp
add
shll
repnz
or
jno
psllq
inc
out
mov
xchg
clc
clc
add
int3
test
sub
lea
adc
xor
mov
or
fnstcw
test
mov
gs
cmp
mov
push
mov
push
pop
icebp
sahf
in
dec
mov
sub
push
mov
pop
notb
or
push
add
jp
imul
xchg
mov
test
mov
xor
add
mov
jg
je
pop
jle
data16
cmp
inc
adc
cmpb
into
das
inc
lret
push
mov
mov
mov
sti
lock
stc
mov
popa
roll
mov
jno
dec
pop
cwtl
rorb
xchg
loope
and
scas
ja
gs
xlat
scas
push
xchg
mov
push
inc
ja
stos
pop
scas
lret
rolb
xchg
into
inc
push
dec
xchg
test
aam
mov
mov
add
in
subb
sub
and
out
jge
or
dec
daa
rcll
in
enter
into
jge
push
out
aad
clc
xchg
loop
push
jp
mov
pop
mov
lret
pop
pushf
push
lret
sub
jecxz
mov
mov
mov
mov
cmp
shlb
gs
ss
jne
mov
pusha
mov
jecxz
mov
mov
mov
and
and
fisttpll
push
inc
adc
out
adcb
fsub
pop
and
out
sub
adc
call
movsl
sub
xchg
cld
pop
fdivl
popa
mov
inc
negl
pop
cld
add
repnz
fistpl
inc
push
das
enter
jg
ja
or
dec
addr16
cwtl
sbb
jnp
push
mov
fwait
mov
mov
inc
xor
std
pop
mov
or
idiv
xor
hlt
inc
scas
fisubl
stos
jmp
test
fwait
jnp
lods
mov
xchg
adc
jecxz
jns
xlat
mov
xchg
cmp
lahf
sub
or
das
mov
imul
cmpsl
mov
cmp
sbb
in
outsl
lock
cltd
lret
pop
sub
test
ja
inc
mov
ja
fbld
xchg
mov
add
orl
insl
push
test
cmp
sub
pop
cmp
icebp
xor
imul
push
sahf
mov
sub
loopne
xchg
xor
xor
cld
xchg
adc
lcall
mov
pop
inc
loop
push
push
aad
pop
jecxz
sub
xlat
mov
in
out
xorl
nop
mov
fisubrl
daa
in
xchg
cmp
sbb
xor
orl
cwtl
inc
mov
pusha
adc
in
enter
sahf
repz
in
imul
aad
iret
mov
dec
cmpsb
sub
lahf
or
clc
xor
js
les
jnp
xchg
pop
push
scas
pop
int3
arpl
mov
cmp
sub
addr16
sarl
adc
push
jbe
ja
jnp
hlt
imul
inc
out
sub
mov
roll
shll
mov
ljmp
jmp
xchg
mov
enter
mov
setbe
lret
in
sub
rorb
into
out
call
xor
insl
in
mov
mov
gs
mov
inc
test
sbb
sti
jmp
inc
gs
movsb
sub
call
popf
insb
mov
shrb
pop
xchg
push
arpl
mov
or
fwait
push
adc
mov
mov
sub
test
mov
adc
aam
mov
xor
inc
stc
add
push
sbb
fcmovne
adc
jns
imul
lock
xchg
sahf
std
scas
mov
add
jae
or
jnp
pop
movsb
jns
lret
mov
jle
or
pop
test
inc
pop
in
jno
and
jmp
stos
xor
mov
mov
pop
movsl
jle
dec
pop
scas
mov
lret
mov
pusha
into
mov
mov
iret
fcom
push
cmp
pushf
adc
movsl
sar
or
cmp
cld
test
clc
into
ret
pop
enter
push
inc
mov
stos
xor
imul
and
orb
push
rol
stc
inc
xor
and
sbbb
mov
in
jb
aad
jo
movsb
stos
push
push
lea
or
mov
adc
dec
hlt
or
jae
dec
scas
pop
int
or
push
aaa
or
mov
hlt
enter
mov
inc
inc
mov
mov
jecxz
mov
adc
es
incb
xor
add
sub
mov
jns
ret
jmp
je
and
dec
je
fnsave
mov
ret
or
xchg
cmc
sub
jbe
cmpsl
inc
sbb
xchg
and
push
mov
scas
mov
sbb
jp
or
jnp
or
stc
movsb
mov
insl
aas
push
lods
cltd
mov
add
push
mov
cltd
dec
test
mov
mov
xor
repnz
ss
in
daa
out
rcr
nop
add
xor
cmp
sbbl
adc
aad
arpl
negl
cwtl
xorb
fldenv
sub
push
popf
sub
xchg
pop
or
cmc
jne
fcmovnu
push
and
test
push
jmp
popl
xor
xor
roll
rol
xor
aas
or
test
shr
pop
inc
mov
or
movsl
fstpl
sahf
xor
push
out
push
pop
jmp
push
in
mull
repnz
mov
sub
int
jg
inc
sbb
inc
mov
push
fs
sbb
mov
addr16
dec
data16
aaa
mov
lods
lods
enter
movsl
loope
xchg
and
xor
repnz
cmp
jge
insb
fsubr
movsl
xchg
pop
mov
ret
cltd
cmp
int
popa
pop
fneni(8087
adc
sub
sahf
adc
ficoml
scas
daa
cwtl
sub
lret
rclb
aaa
test
cld
sub
sbb
fwait
pop
je
fstps
dec
mov
jmp
inc
and
mov
mov
dec
mov
test
stos
stos
add
imul
mov
lret
or
jecxz
jecxz
sub
mov
ret
xchg
lret
ljmp
test
push
out
inc
dec
scas
mov
mov
mov
scas
ret
push
xor
std
sub
lds
and
jge
lods
enter
cmpsl
scas
jecxz
call
adc
out
xchg
ljmp
and
jmp
test
sub
je
popf
jmp
cmpsb
fisubrl
mov
loop
pop
sub
mov
lret
pushf
add
fsubl
fwait
bound
jno
lock
mov
pop
inc
nop
xchg
loop
xchg
ljmp
dec
mov
mov
insl
cmp
std
addr16
arpl
adc
aaa
xor
aad
ret
push
pop
call
into
mov
imul
cmp
je
sbb
stos
push
xor
outsl
push
xchg
addb
in
adc
pop
xchg
mov
push
fidivs
cmp
pop
and
inc
sti
sbb
xor
or
jns
call
cmp
mov
xor
mov
test
xchg
insl
mov
cld
negb
rolb
sbb
das
dec
aad
xorl
push
pop
push
sbb
es
leave
in
xlat
stos
clc
pop
fcmovbe
aam
add
leave
cmpsb
out
pop
rcll
out
and
fadds
dec
sbb
repz
xchg
sub
movsb
fistpll
push
mov
out
in
ja
mov
sub
pop
jmp
dec
jne
adc
and
pop
sbb
addr16
aam
stc
imul
out
in
cmc
jmp
int
push
jae
adc
imul
in
insl
mov
mov
xorb
lret
and
fcom
xchg
xlat
das
jno
enter
fwait
cmpsb
mov
inc
pop
xchg
mov
stos
shrb
divl
cmpsb
into
lcall
cwtl
add
jl
cwtl
fisttpl
movsl
sbb
stos
adc
sub
push
dec
test
addb
xchg
scas
test
jno
push
cmpsb
jmp
add
mov
fbstp
ret
rorb
dec
xor
jecxz
and
lcall
inc
fisttpll
or
imul
pop
jle
pop
xchg
testl
loopne
mov
push
xchg
fildll
jns
pop
sub
cmpsb
adc
mov
or
es
pop
push
int
fs
cltd
test
inc
shlb
pop
fisttps
inc
cmp
dec
pushf
inc
push
test
sbbl
sbb
cmp
out
dec
push
enter
push
imul
jno
cmp
outsb
cmp
pop
adc
bound
test
sahf
icebp
or
push
pop
stc
xchg
pop
daa
testb
stos
adc
and
icebp
or
je
or
pop
sbb
popf
gs
aam
pop
test
es
ja
loope
leave
in
ficomps
xchg
bound
mov
adc
xchg
sub
ljmp
stos
cmpsl
cmp
iret
mov
dec
pop
leave
pop
icebp
mov
xchg
pushf
nop
cs
cmc
imulb
inc
jle
jns
rolb
push
mov
mov
lods
lods
adc
bound
add
ljmp
cmp
jns
xchg
adc
push
add
mov
xchg
mov
xor
jmp
push
mov
cmpsl
je
leave
add
mov
in
notb
sbb
mov
mov
dec
mov
sti
sub
mov
and
dec
add
add
pusha
push
add
mov
iret
mov
loopne
in
pop
arpl
orl
mov
lods
ja
out
ss
pop
xchg
js
push
xor
sub
shll
repz
xor
cmp
xchg
adc
loope
pop
mov
rclb
fildll
xlat
dec
gs
mov
mov
mov
scas
mov
fadds
mov
mov
lret
nop
xchg
pop
cmp
push
push
sbb
sub
shll
dec
fldenv
jb
repnz
inc
sti
inc
jg
jecxz
daa
pop
ljmp
call
jl
or
fdivs
enter
pop
les
lods
fld
test
mov
sub
mov
mov
out
mov
dec
pusha
xchg
jl
lods
lock
mov
std
xor
add
xchg
cmc
jbe
fdiv
pop
rcrl
test
cmp
mov
pushf
les
cmp
dec
and
push
sub
cwtl
out
les
fcompl
inc
addb
mov
add
sub
shl
pop
rcrl
lret
ret
nop
aas
arpl
rclb
adcl
dec
lock
inc
imul
push
pop
pop
jp
test
cmp
jno,pt
cmp
mov
pop
outsb
jo
or
sub
addl
jo
fiadds
sti
clc
pop
incb
clc
sbb
sbb
jns
imull
bound
dec
sbb
xchg
cmpsl
dec
mov
les
add
push
cmp
rcll
xor
cmpsb
jle
jbe,pn
sub
fstl
movsl
repnz
xchg
lea
add
sub
xlat
jbe
sti
pop
or
mov
pop
add
mov
hlt
mov
mov
mov
les
or
add
xlat
insl
inc
xor
outsl
xor
jg
lret
jne
dec
scas
int
and
outsl
dec
out
push
outsl
mov
call
cmp
pusha
ljmp
sti
scas
mov
negb
cltd
mov
rcr
js
jle
cltd
add
enter
or
push
add
and
and
adc
cs
push
push
sub
loop
ds
mov
popf
idiv
stos
mov
pop
add
in
aaa
push
repz
sub
cltd
jmp
pop
jno
jne
add
mov
add
mov
test
pushf
push
filds
adc
call
or
jno
pop
add
mov
xlat
xchg
lcall
psubusw
fldcw
xchg
orl
pop
pop
xchg
lret
push
mov
mov
mov
mov
cmp
lret
out
cli
xor
fiaddl
and
in
ret
sub
or
xchg
pushf
lea
scas
subl
pop
fs
push
sub
cmp
xchg
jge
xor
imul
outsb
das
insb
mov
sub
pop
std
jns
inc
xchg
clc
mov
xlat
xor
mov
mov
ret
mov
cmp
and
pop
notb
pop
test
jle
sbb
shll
jmp
mov
in
dec
add
bound
insl
dec
lret
pop
dec
push
clc
jnp
rclb
or
cmc
xor
fcomp
mov
mov
std
ja
ret
ret
mov
sbb
pop
jno
fwait
jns
mov
ljmp
ret
mov
outsb
popa
pop
cli
mov
das
push
dec
stos
das
dec
mov
mov
jle
mov
repz
mov
sbb
aaa
cmp
jle
ja
leave
fimuls
lock
stos
pusha
aam
xor
pop
mov
inc
cmpb
into
mov
mov
and
popa
dec
mov
out
mov
dec
sbb
out
xor
clc
adc
or
shrb
bound
and
jbe
into
lods
dec
inc
pop
in
sub
loope
cs
cmp
test
xchg
cmp
popf
adc
cmc
pop
loop
imul
dec
stos
popw
std
cmpsl
aas
in
or
dec
adc
dec
sbb
inc
js
gs
fldenv
and
leave
nop
je,pt
jns
inc
pop
mov
jle
mov
xchg
inc
enter
popa
test
data16
mov
push
loopne
push
addb
inc
cmp
jg
addr16
push
sbbb
or
fcoms
cli
fnstenv
ficoml
push
xor
ficompl
cmp
ljmp
out
pop
sbb
ljmp
test
adc
outsl
lods
shll
lahf
mov
ret
jge
push
jae
aam
mov
inc
in
leave
daa
xchg
test
inc
xor
ss
sub
adc
push
shll
cmp
nop
push
xor
loop
dec
mov
mov
pop
mov
ljmp
push
jnp
js
ljmp
mov
jmp
sarl
xor
nop
imul
negl
inc
jne
mov
outsl
sbb
mov
and
mov
inc
mov
push
mov
and
outsb
xor
stc
dec
nop
movsb
into
sub
adc
mov
sbb
pop
loop
push
ficompl
in
stos
out
and
mov
cmpsl
js
xor
sahf
xchg
test
lds
dec
cmpsb
and
imull
jb
mov
mov
lock
jne
pop
push
dec
xor
aas
pop
add
push
test
pop
sub
or
xchg
push
lds
jmp
insb
not
and
sbb
in
jle,pt
decb
xchg
test
fmuls
jp
popa
jp
xorb
clc
and
sbb
push
jo
mov
addl
insl
outsl
cmp
jns
mov
shrb
mov
mov
movsl
and
push
and
mov
push
pop
cld
xchg
mov
dec
sti
dec
add
add
inc
les
stos
cmp
mov
fsubs
xor
lock
scas
pop
cmp
aas
ret
mov
lock
lret
mov
jecxz
int
loope
jae
cmpsb
push
ds
adc
add
je
push
add
cmp
inc
or
and
fistpl
mov
pop
aas
fldl
negb
xchg
sub
xchg
mov
dec
scas
jp
jbe
sbb
add
fbld
jge
test
std
ja
out
inc
ljmp
repz
outsb
frstor
stos
push
movsl
jb
adc
fwait
dec
push
dec
and
pop
loopne
jg
xchg
jo
fstpl
add
arpl
ds
push
inc
add
inc
sub
pmulhuw
mov
pop
dec
mov
xchg
mov
cmp
shrl
or
orl
adc
fmull
sbb
pop
aam
and
jmp
xor
jbe
jp
jl
push
xchg
out
scas
pop
pop
sarb
scas
fs
push
jg
movnti
stos
sbb
out
jne
push
nop
aas
lret
jecxz
ja
push
hlt
push
dec
jbe
in
pop
cltd
mov
ja
lret
mov
lret
test
or
jge
shlb
pop
pushf
adc
ljmp
outsb
rolb
ds
sti
sbb
xor
shll
mov
xor
fucom
jl
mov
mov
iret
dec
int3
xchg
mov
inc
jge
fcmovnu
cmpsl
jg
or
cmpsb
outsb
sbb
adc
das
rclb
mov
or
jo
shlb
repnz
roll
ret
gs
lea
testb
inc
xchg
mov
cmp
adc
mov
loop
xchg
push
mov
pop
das
aas
mov
arpl
ss
ja
adc
popa
jns
sub
xor
sbb
ficompl
out
cmpsl
stc
aaa
xchg
or
cmp
dec
pusha
test
movsb
cltd
push
pushf
or
div
sub
hlt
and
cwtl
pop
std
popa
mov
scas
outsl
fs
adc
jbe
testb
stos
mov
arpl
lock
in
mov
xor
sbb
test
inc
imul
inc
xchg
mov
jae
fistpl
mov
jmp
xchg
cmp
push
inc
test
jecxz
or
inc
int
test
sub
vcvttss2si
jbe
inc
call
dec
test
mov
adc
lret
xor
jne
xchg
testl
es
loop
push
sbb
jo
aaa
adc
sti
or
jg
std
push
fisubrl
or
cs
cmp
pop
cmp
movsb
or
or
data16
ret
cmc
call
aad
inc
push
inc
xchg
call
iret
pop
lock
lcall
clc
into
test
cmp
and
test
jmp
stos
jle
pop
decl
push
gs
mov
pop
loop
sbb
out
enter
jno
dec
shlb
and
push
xchg
out
pop
jmp
notl
ljmp
cmpsl
mov
dec
pop
xor
push
dec
shll
lcall
mov
pop
icebp
dec
sbb
mov
or
andl
lea
scas
mov
into
mov
out
lret
jge
rolb
imul
sub
push
pop
sahf
lock
dec
test
aam
orl
sub
dec
jo
sub
pop
xchg
fdiv
pop
in
inc
dec
xor
mov
rorb
jb
mov
scas
aaa
movb
sbb
imul
jbe
sbb
sub
fildl
mov
icebp
out
ret
jb
int
jg
outsl
rep
in
xchg
inc
jle
lcall
dec
and
mov
imul
mov
jecxz
fmulp
mov
fcmovnb
xchg
cmp
xor
add
push
cmp
push
push
or
je
xchg
sahf
popa
cmpsb
jne
cli
mov
in
testb
and
out
add
aaa
ljmp
lock
mov
add
or
sub
jmp
mov
aad
sbb
or
push
outsb
stos
outsb
xchg
fisubrs
int
das
rorb
add
mov
or
enter
in
es
jnp
add
adcl
aam
xor
dec
mov
add
int3
ljmp
mov
xchg
sub
ss
fwait
shl
xchg
dec
xlat
stos
or
rcr
jns
shlb
frstor
adc
into
lock
lds
sbb
les
mov
inc
repnz
xorb
test
loop
pop
das
enter
repz
cs
or
xchg
inc
xchg
and
popf
mov
push
ja
inc
notl
xchg
push
xchg
jns
mov
movsb
and
xchg
sub
cltd
cmp
inc
or
subb
cmp
aad
das
or
out
movsl
sub
les
bound
dec
insb
xor
mov
push
std
test
fildl
mov
xor
pop
inc
loope
test
notb
xor
mov
xchg
cmp
mov
sahf
mov
mov
in
aas
pop
dec
sbb
movl
mov
or
lea
push
and
push
scas
fldenv
fsubs
xorl
xor
ss
sub
cmpsb
sub
xchg
jl
insl
cltd
in
repnz
lock
sub
cmpb
sar
not
repz
imul
jns
rcrl
out
imul
sbb
inc
mov
fisttpl
xlat
loop
mov
mov
inc
out
cltd
imul
sbb
gs
jno
jg
adcb
clc
mov
pop
loop
out
mov
in
mov
popf
in
adc
and
sbb
sti
scas
push
xchg
cli
sahf
push
in
dec
inc
inc
mov
sbb
aas
push
cli
dec
jae
mov
xchg
fcmove
fsubrs
dec
daa
shrb
fcmovnu
jle
inc
ret
imul
or
pop
pusha
cmp
ret
in
push
xchg
add
mov
sub
jne
repz
and
sub
rclb
push
test
mov
rorb
mov
cmc
lods
xchg
cltd
and
movsl
negl
add
sbb
and
les
cwtl
xor
scas
mov
inc
subb
je
sarb
out
lods
xchg
mov
nop
das
xor
jo
sub
jp
icebp
dec
dec
push
xor
fwait
xor
psraw
mov
data16
xchg
sarl
arpl
jg
xor
adc
adc
int
stc
in
jp
out
mov
je
inc
out
orb
js
lods
ja
push
sub
jg
loopne
inc
and
addr16
mov
faddp
adc
mov
pop
pushf
sar
repz
cs
movsb
jnp
push
jns
jno
xor
sub
lods
fnsave
outsb
pop
leave
ret
dec
adc
dec
xchg
lock
cltd
ja
mov
sbbl
mov
cltd
scas
insb
pushf
pop
cltd
or
lret
shr
push
ljmp
sbb
test
inc
xchg
inc
nop
jge
xor
out
in
mov
pusha
add
loope
inc
mov
or
dec
xchg
inc
ret
out
xchg
hlt
aaa
sbb
sbb
fimull
scas
movsl
sarl
or
jnp
dec
xor
in
mov
cmp
adc
push
sbb
mov
push
mov
flds
movsb
cli
pop
xchg
jg
pop
xor
aam
fisttps
xchg
fnstcw
mov
sbb
daa
popa
testb
sbb
andl
pop
push
inc
mov
bound
add
stc
ja
gs
xchg
adc
in
xor
jmp
mov
repz
xchg
xchg
repnz
inc
inc
hlt
ds
mov
xor
outsl
push
jo
sbb
add
xchg
cmp
in
cmpsb
out
repnz
pop
jae
cli
ss
int
fwait
or
dec
cmpb
ror
push
enter
dec
data16
xor
push
push
push
mov
mov
rcll
cmp
lahf
mov
push
shl
and
jg
cltd
xorb
mov
sbb
clc
in
fnsave
push
pop
aaa
in
test
add
jbe
jno
subl
mov
dec
or
adc
fsubrs
rcl
movsl
pushf
mov
xor
nop
push
aam
imul
inc
inc
gs
sbb
mov
push
aad
mov
dec
xor
inc
enter
lock
inc
fldcw
jg
testl
push
cmp
fmul
rorb
int3
sahf
dec
push
enter
lret
lods
adc
insl
xchg
testl
pop
sahf
jl
dec
pop
push
adc
hlt
dec
jmp
pop
fwait
dec
mov
sub
lret
jle
and
arpl
push
jle
mov
mov
stos
dec
xor
mov
xor
sbb
xorb
push
inc
test
adc
push
mov
arpl
les
daa
adc
fs
jo
or
scas
sti
call
clc
xor
cmp
iret
nop
jle
test
and
sbb
nop
or
xor
mov
mulb
call
jmp
jbe
mov
dec
jg
in
add
repnz
lods
xchg
fsubl
movzbl
or
mov
adcl
shrd
addl
mov
mov
xor
xorl
shr
sbb
mov
mov
xor
or
addl
shl
sub
mov
mov
cmp
mov
movl
jg
sub
mov
and
mov
subl
shrd
addl
mov
movzwl
xor
mov
mov
xor
xorl
shl
xor
or
xorl
shr
xor
mov
mov
mov
addl
mov
xorl
shrd
shr
cmpl
mov
mov
jmp
mov
jge
push
push
call
mov
adc
movl
and
and
mov
mov
mov
sub
imul
mov
mov
xor
xor
or
shl
imul
sub
jmp
mov
mov
shrd
mov
mov
xor
shl
xor
or
shr
mov
mov
mov
mov
shrd
shr
mov
mov
mov
xor
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
jmp
lock
cmp
mov
jae
test
test
push
sub
push
push
dec
std
xorb
shrb
and
ds
push
es
repz
lea
pop
clc
sub
or
inc
lcall
jmp
xchg
jne
lea
fsts
stc
clc
add
xor
xor
xlat
shll
aad
adc
pushf
lock
push
scas
mov
test
mov
fidivrl
cli
pop
add
push
lret
dec
addl
mov
cmp
dec
js
or
in
mov
and
in
hlt
loopne
es
xchg
je
xchg
lret
outsb
adc
leave
aam
dec
insb
push
data16
shlb
adc
es
or
out
out
jns
aaa
push
xor
cmp
sahf
out
mov
in
jae
mov
jne
add
dec
xlat
mov
fwait
pop
sub
sub
push
push
pop
sub
test
rcr
aas
jp
cmp
int
and
push
push
push
sub
imul
and
cvtpi2ps
xor
or
aaa
mov
lea
mov
sub
jb
jae
outsl
dec
dec
les
mov
sub
xorl
push
mov
inc
push
ds
jecxz
inc
int3
imul
cmpsb
cmpb
nop
sub
jp
push
mov
mov
das
hlt
fisubl
loope
cmp
inc
adc
push
jle
jmp
lods
loopne
xor
sbb
jb
sbb
in
cmp
bswap
lcall
mov
adc
mov
mov
test
mov
sbb
mov
lahf
int
orb
xchg
push
push
cs
dec
sbb
pop
add
aad
and
movsl
mov
inc
jae
jbe
rolb
in
push
out
pushf
mov
jbe
inc
in
hlt
fisubl
inc
int3
bnd
inc
loop
or
add
or
dec
into
sbb
or
dec
fmuls
ljmp
xchg
pop
mov
rorl
push
sti
lds
aam
jecxz
sbb
adc
nop
adc
subl
js
mov
push
out
cs
sarb
push
les
push
testb
push
mov
enter
dec
je
xchg
lret
push
lcall
jns
outsl
inc
cmpsb
ljmp
addr16
push
sbb
pop
inc
jg
sbb
mov
stos
mov
xor
xchg
loop
lcall
shll
lods
pop
add
or
int
xor
stos
cs
pushf
add
ljmp
pop
mov
fsubs
jmp
in
mov
aam
xor
loopne
adc
es
mov
imul
mov
xor
cmp
pop
xchg
dec
orb
or
cltd
icebp
mov
lds
add
or
in
sub
jne
das
pop
inc
dec
ret
fidivl
adc
xchg
xor
push
aad
inc
dec
lock
mov
dec
xchg
aas
sub
jns
flds
inc
sbb
shll
xchg
push
xlat
xchg
out
add
sub
or
les
pop
pop
hlt
inc
gs
sahf
addb
mov
push
mov
test
or
pop
scas
scas
xchg
jl
outsl
inc
inc
lahf
xor
test
ljmp
adc
fcoml
inc
xor
aas
jae
in
inc
mov
and
mov
cmp
out
push
add
push
lock
and
sub
pushf
adc
loopne
and
in
push
pop
jge
push
sbb
pop
scas
les
jnp
lea
imul
lods
mov
xchg
inc
out
mov
faddl
or
sahf
subl
lea
ror
mov
sub
cmp
lock
sbb
jmp
sbb
push
ret
mov
jae
scas
or
push
je
hlt
imull
out
mov
add
cmp
jl
xchg
js
push
mov
lods
dec
into
mov
sub
inc
clc
lret
add
test
or
pop
stos
je
mov
cli
sub
sub
leave
sbb
mov
push
adc
cmp
xchg
js
jo
xor
ja
xchg
inc
xlat
lret
mov
jecxz
jnp
imul
arpl
sarl
outsl
dec
mov
jge
adc
add
ss
jp
push
xor
or
dec
pushf
nop
dec
insb
inc
nop
mov
insl
andb
lahf
sahf
or
out
pop
jl
sbb
and
adc
jge
lods
sbb
dec
ss
call
mov
iret
cmp
test
push
loop
xchg
mov
sub
pop
dec
jl
pop
insb
mov
loopne
dec
xchg
stos
clc
add
xchg
daa
hlt
clc
fimuls
push
xor
or
inc
pop
sub
fdivrp
push
xor
addb
jge
push
out
jp
sbb
mov
mov
rclb
sub
jp
shrl
cmc
and
lods
loopne
sub
jmp
ret
fildll
pop
mov
jo
inc
pushf
jle
out
mov
pop
pop
popf
mov
mov
xchg
aam
dec
cmpsb
push
sarb
les
popa
mov
test
sbb
pop
cmc
inc
in
loop
inc
mov
loopne
cmp
sbb
pop
add
icebp
mov
imul
or
fisttps
push
sub
inc
inc
cmp
mov
xchg
add
jmp
jae
add
jecxz
sbb
pushf
dec
jns
pop
lods
stc
loope
and
xchg
pop
std
xchg
out
dec
mov
cmp
xchg
in
lret
and
lcall
in
inc
sbbl
xchg
jnp
rorb
pop
cmp
shrl
jge
cwtl
lods
icebp
lods
fcmovbe
iret
push
jecxz
ljmp
lea
xchg
or
loop
mov
jp
sub
ret
adc
add
jo
pop
mov
push
fisubrl
push
popf
call
xor
testl
cmp
data16
out
int
sbb
dec
dec
xchg
inc
sub
cmp
or
ret
int3
int3
ret
std
mov
bound
xchg
cmpsl
rorb
mov
pusha
sbb
mov
adcl
xchg
inc
and
xchg
sbb
xor
out
shrb
int
loop
cltd
pop
pushf
lock
int
jns
popf
sbb
add
push
fwait
and
push
cmp
push
aaa
rcrb
add
push
push
out
sti
mov
jmp
pop
push
or
mov
fadds
or
ret
dec
pop
and
mov
pop
xchg
add
cld
subb
or
sti
add
xor
mov
adc
movsb
jae
out
cld
and
sub
shll
mov
jecxz
push
xchg
loope
inc
cwtl
lret
cmp
loop
cs
jg
and
and
aaa
ja
mov
shll
jo
fstl
lcall
loopne
into
arpl
loop
pop
gs
xchg
sbb
popf
in
inc
jbe
xchg
js
inc
cwtl
out
outsb
scas
mov
jnp
cwtl
popf
mov
jns
sbb
xchg
add
push
movsb
mov
push
jmp
pusha
jb
adc
xchg
lea
mov
mov
repnz
cmpsl
call
xchg
mov
mov
push
lock
scas
fdivrs
xchg
push
xchg
or
imul
pop
xor
out
push
xchg
mov
cmp
push
mov
into
shlb
ds
dec
push
mov
js
pop
shl
add
mov
lods
stos
loopne
bound
pusha
inc
dec
and
lahf
sbb
sbb
sub
outsl
dec
xchg
mull
sub
cmc
inc
sbb
sub
or
ljmp
bound
inc
push
sub
daa
mov
mov
dec
pusha
aad
cmp
movsl
adc
lret
hlt
adc
sbb
js
cmp
sub
jge
divb
lea
push
mov
pushf
or
mov
add
or
inc
pop
out
and
repz
mov
ja
mov
mov
sbb
repnz
out
jo
push
sub
jl
jmp
jbe
dec
mov
fmuls
imul
out
ss
adc
xor
or
lret
in
inc
inc
mov
sbb
cwtl
mov
incb
add
mov
mov
gs
testb
jl
or
sbb
dec
inc
sbb
sub
add
pop
out
sbb
jmp
lds
scas
adc
cmp
mov
sub
or
dec
mull
insb
or
outsl
mov
lcall
mov
pop
xor
addb
imul
jb
sbb
sbb
mov
daa
mov
in
outsl
ret
inc
mov
int
in
bound
fistpl
push
jle
bound
or
push
into
pop
push
and
aad
or
cmp
out
je
jg
adc
je
sub
mov
aaa
pop
in
icebp
das
repz
arpl
imul
fisubs
lock
das
cmp
inc
sub
add
pop
insl
sbb
cli
mov
inc
mov
stos
enter
in
inc
jg
sbb
int3
mov
fistpl
sub
add
xor
repz
fldt
dec
jne
push
hlt
and
popl
or
std
in
lahf
xchg
repnz
push
jns
xchg
inc
or
pop
clc
sbb
mov
dec
aad
rol
aaa
add
shll
mov
jmp
test
push
push
fdivrl
jecxz
dec
adc
popa
sbb
pop
std
jno
dec
add
je
clc
xor
mov
loopne
push
adc
sbb
mov
adc
mov
xor
xor
ja
push
in
pop
ffreep
scas
cmp
repz
cmp
movsb
les
push
cs
insl
push
out
imul
fmul
sbb
lods
ja
dec
out
cmpsl
pop
jecxz
outsb
sub
jle
pushf
jae
push
or
scas
add
sub
jl
mov
xchg
into
arpl
push
lds
orb
fcoms
test
push
sysexit
stos
in
movsl
jle
mov
pusha
pop
fwait
std
xchg
dec
dec
xchg
mov
mov
lret
and
out
jns
cmp
dec
push
and
jnp
push
xlat
xorl
cmp
or
sbb
and
xchg
mov
pop
sub
pop
xchg
ljmp
and
cmp
adc
out
aaa
sahf
and
leave
fs
jb
divl
bound
pop
int
mov
fistps
es
fistl
shlb
fcoms
inc
pop
pop
adc
leave
mov
xor
insl
push
dec
aam
aad
xorl
xlat
rolb
shlb
lods
sarb
pop
shlb
sarb
ss
mov
and
jne
loopne
sbb
dec
or
mov
inc
adc
jnp
mov
sbb
mov
mov
pusha
add
in
out
cmpsl
sbb
dec
and
es
out
jae
imul
mov
lret
out
repz
cmpsl
cmp
hlt
mov
popa
mov
lahf
lds
push
jnp
sbb
dec
bound
fisttpll
dec
in
es
jae
xchg
pop
imul
cld
add
addr16
adcl
xchg
dec
xchg
xchg
xchg
fstpt
cld
test
ret
out
addl
mov
xchg
jns
and
and
cmpsl
sbb
int3
xchg
dec
lods
mov
les
int3
push
lret
push
or
out
xchg
cli
repnz
dec
inc
and
jl
and
shll
pop
mov
jo
aad
mov
and
mov
pop
negl
loop
push
push
mov
pop
cld
mov
leave
jge
and
push
lret
push
mov
jne
jmp
test
push
or
sub
ljmp
xchg
int
mov
add
stos
in
cmp
adc
mov
mov
loop
insb
push
lock
cld
rcrl
mov
push
test
ret
mov
push
popa
mov
lods
pop
jecxz
arpl
xor
aam
repz
rorl
inc
aas
loope
repz
sub
jne
add
mov
hlt
dec
mov
rorl
and
aas
cs
fisubrs
call
shlb
cwtl
jmp
push
push
dec
push
fldt
idiv
jno,pn
iret
xor
cmp
inc
aad
pop
dec
push
rcrb
inc
imul
or
out
cwtl
jno
insl
mov
jns
pop
sbb
dec
fs
out
rolb
inc
dec
sbb
ret
insl
rolb
addr16
xlat
inc
inc
iret
aam
into
cmp
cmp
lcall
in
mov
push
pop
sbb
notl
push
lret
jne
xor
xchg
leave
xchg
jg
pmaxub
xchg
mov
es
mov
pushl
sti
adc
xchg
push
cmpsl
add
fsub
iret
scas
jp
stos
ds
ret
jns
cmp
gs
lods
je
dec
xchg
sub
push
xlat
mov
addr16
xor
jo
mov
mov
aam
cmp
sub
mov
xchg
cmpsb
cmp
dec
pop
scas
jg
call
ds
mov
repnz
aaa
and
sahf
addr16
jne
pushf
mov
cmpsb
imul
inc
js
repz
aas
movsl
mov
jnp
xchg
pop
inc
leave
add
loopew
inc
test
pop
shll
inc
or
fwait
jge
cmp
sub
hlt
data16
test
pop
dec
and
add
in
xchg
aaa
push
mov
mov
pop
outsb
cmp
mov
imul
out
inc
mov
testb
sbb
lcall
pop
fisubrl
dec
add
cmp
repz
push
in
jecxz
jne
xor
and
jns
push
or
cmp
aad
and
js
jge
mov
jl
subl
add
bound
mov
call
test
xor
cld
ljmp
or
jns
lret
dec
int
dec
inc
inc
lods
punpcklbw
mov
stos
stc
lock
jmp
xchg
mov
ds
pop
leave
mov
cmp
rclb
out
jbe
push
xorb
xchg
outsl
cmpsb
enter
or
push
loope
cld
pop
rcrl
imul
lods
dec
adc
adc
outsb
pop
jle
adc
mov
jmp
ds
xor
and
aad
jno
lods
popa
mov
sbb
sahf
mov
cmp
mov
rolb
dec
xchg
inc
stos
mov
lds
mov
repz
mov
ja
mov
or
jb
out
mov
push
xor
test
or
rcr
push
and
sbb
mov
ret
cmp
and
adc
loope
jae
pop
addr16
mov
mov
ret
shrb
scas
fsub
dec
pop
cwtl
ja
rol
dec
or
mov
xchg
add
push
divl
mov
pop
mov
test
sub
adc
rclb
jo
cld
sbb
dec
mov
pusha
daa
push
adc
and
mov
addr16
push
bound
fcoms
dec
mov
lcall
sbbl
repz
das
cmp
in
dec
fs
mov
jge
add
movsl
addb
jmp
adc
sub
adc
ljmp
sub
in
incl
lea
or
stos
push
jns
rolb
test
inc
dec
push
test
outsb
filds
rcrl
xor
xor
outsl
xlat
aas
and
ficomps
out
jnp
sbb
fcmovu
dec
cmpsb
fnstcw
or
xchg
jo
mov
dec
mov
jnp
xchg
fiadds
fldenv
lock
cli
sub
or
and
xchg
sub
cmc
iret
test
imul
clc
icebp
jp
inc
push
and
cltd
adcl
mov
add
lea
ret
shlb
stc
inc
pop
rclb
loop
mov
xor
shlb
push
push
jge,pn
push
pop
mov
out
ret
xchg
in
pushf
pushf
mov
push
insb
pop
mov
sbb
int3
xchg
mov
fistpll
fiaddl
ss
cmpsl
movsb
int
pop
inc
int
mov
adc
repnz
lahf
lods
jge
in
mov
xchg
pop
lea
or
cmp
scas
jne
mov
insl
sbb
fsubl
das
xor
outsb
xor
xchg
or
repz
jae
lds
sbb
xor
hlt
mov
les
fsts
popf
jnp
cmpsb
add
mov
fiadds
sbb
out
cmp
or
outsb
je
les
adc
pop
add
sub
out
xchg
pop
pushf
mov
js
jge
call
js
mov
sub
mov
ror
andl
xchg
inc
and
cs
jae
loop
das
ja
or
fwait
mov
mov
jecxz
ret
pop
mov
cmp
inc
mov
inc
mull
mov
sub
pop
out
dec
xor
pop
scas
mov
out
xchg
or
sahf
add
push
adc
mov
in
cmp
sub
movsb
sbb
ret
inc
data16
pop
xchg
pusha
adc
cmpl
jg
gs
jbe
ss
ret
lods
adc
sbb
repnz
mov
out
out
sbb
xor
ds
jp
iret
sub
call
cltd
cltd
cmp
sub
mull
pusha
loopne
pop
rorl
shlb
sub
adc
enter
xchg
mov
jecxz
jmp
push
ret
xor
jne
dec
dec
inc
mov
dec
jbe
pop
lods
cmpsb
add
int3
out
popf
in
cli
pop
pop
cli
shrb
mov
int
xorl
jno
das
lods
int
ss
dec
xor
js
pop
fimuls
sbb
push
adc
lea
and
ret
and
stos
cltd
mov
xchg
les
out
push
stos
clc
push
lds
jle
push
sub
lods
leave
inc
popf
je
decb
push
sti
aad
inc
dec
nop
dec
rcl
inc
mull
es
sysret
dec
out
dec
jg
cli
ret
xchg
dec
in
inc
xchg
jbe
adc
pop
pop
or
loop
cmpsb
dec
fstpl
hlt
ja
pusha
adc
pop
lcall
mov
subl
aad
lods
or
lahf
lds
mov
mov
aam
cmpsl
pop
sbb
add
push
cmp
movsl
sub
jp
and
and
sti
xchg
mov
mov
mov
nop
shlb
and
sub
movsb
jg
or
xchg
sub
cmpsl
cmp
add
mov
das
mov
sbb
sbb
pushl
mov
mov
inc
out
pop
mov
paddsb
ficomps
mov
aaa
cld
cmp
xlat
movsb
rclb
cmp
das
xchg
cli
aam
mov
xlat
ljmp
jmp
imul
mov
adc
insl
aas
sub
aas
jg
pop
xorb
sbb
das
pop
test
mov
jmp
mov
mov
dec
push
jmp
lock
mov
jo
lea
jns
pushf
sti
loopne
or
lods
sub
and
mov
mov
sbb
lcall
cli
pop
inc
jmp
jae
scas
mov
mov
mov
ja
sti
mov
adc
mov
or
aaa
xor
lea
mov
cmp
out
rcr
cvtpi2ps
inc
ds
fdivrs
jae
push
in
xchg
repz
hlt
call
xor
mov
cs
pop
cwtl
sbb
iret
into
shl
xchg
inc
xchg
pushf
ljmp
stos
fucom
scas
mov
mov
push
cmp
popf
rcrb
jge
mov
xor
xor
mov
inc
inc
push
adc
adc
loop
dec
xchg
inc
cmp
jo
dec
and
mov
push
ficoml
fstpl
aad
imul
pop
jb
out
jnp
lret
inc
adc
cmp
adc
push
mov
xor
cs
mov
dec
pop
mov
or
cmp
or
faddl
jo
mov
push
decb
and
jno
mov
or
icebp
cmp
jo
inc
pop
mov
sub
call
imul
es
fsubl
ds
inc
sbb
test
sub
test
or
daa
xor
addr16
pusha
loop
adc
lds
jl
in
outsl
ja
jae
pop
enter
mov
rcll
push
fistpl
inc
cwtl
icebp
sbb
les
lods
and
test
cmp
pop
dec
imul
cli
xor
mov
fnstenv
mov
push
rcll
dec
sub
push
and
pop
and
mov
lret
jo
ret
mov
jno
shrl
hlt
nop
insb
mov
pushf
insl
fiaddl
cmpsl
or
mov
jecxz
adc
rorb
shl
or
mov
loop
ljmp
push
cli
pop
or
or
pop
adc
in
inc
and
push
mov
or
push
pop
dec
test
inc
fcoml
mov
int3
out
mov
jnp
jecxz
xchg
insb
push
fwait
hlt
je
mov
push
xchg
sbb
outsl
mov
xchg
stos
stos
outsb
imul
mov
lods
out
cmpsl
mov
rolb
jb
insb
xchg
inc
call
or
dec
or
and
cmpl
or
xor
dec
mov
aam
leave
push
or
or
and
ljmp
lret
jne
mov
aad
or
cld
and
dec
popf
popa
mov
add
sub
shl
sbb
popf
jecxz
js
push
add
lret
cmp
sub
in
adc
jno
jbe
xor
fsubrs
leave
pop
push
movsl
fidivl
aas
jle
int
add
jge
sti
mov
or
imul
mov
jle
xlat
lods
cmp
and
in
mov
fimuls
dec
notl
fadds
cmpsl
jg
jns
sti
mov
gs
outsl
sarb
cmp
fcompl
inc
push
mov
sbb
addb
pop
leave
xchg
fs
lock
test
mov
mov
fadds
xchg
jmp
fisttpll
cmc
jp
movsb
aam
insb
lds
out
add
lds
and
imul
pushf
pop
and
inc
jmp
mov
cmp
loope
mov
xor
popf
cmpsb
in
sub
push
mov
jo
insl
jne
mov
or
and
enter
mov
xchg
pop
jecxz
daa
mov
mov
data16
hlt
mov
sub
push
mulb
push
adc
shll
inc
sbb
mov
push
and
or
mov
fiadds
sub
shrb
negb
mov
xlat
lods
push
sbb
test
lret
push
in
or
sub
andl
shr
fcoml
dec
addr16
xchg
das
leave
in
data16
sub
lret
ja
daa
pop
mov
out
jp
dec
mov
test
add
dec
push
adc
movsb
add
jnp
dec
mov
push
and
popa
and
push
mov
xchg
addr16
adc
jbe
mov
dec
lret
mov
lret
jns
push
and
in
in
pushf
mov
pop
dec
mov
fisubrs
imul
loop
sti
gs
repnz
sub
mov
or
xor
aas
inc
xor
faddl
in
jle
aad
jle
push
popf
fiaddl
and
sub
pusha
push
fwait
mov
sbb
xchg
mov
push
repz
outsl
mov
lret
mov
add
mov
dec
mov
cmp
mov
icebp
inc
cld
jg
fwait
xchg
int
pop
sahf
jg
jmp
fnstcw
xlat
fs
aaa
pusha
loopne
cmp
lds
repz
mov
rclb
lods
sub
jo
cmp
ljmp
popa
mov
je
xchg
mov
in
and
cld
inc
les
aad
jae,pt
iret
push
sub
add
gs
ret
fs
xorl
movsl
sub
outsl
dec
fisubrl
std
cltd
mov
adc
mov
inc
mov
lcall
mov
dec
lahf
push
orl
gs
lods
imul
sahf
mov
dec
push
xchg
sub
stos
lret
arpl
outsl
add
sub
or
shlb
pushl
dec
add
push
jns
mov
cmpsl
leave
xchg
clc
popa
ss
nop
mov
popf
adc
icebp
cmp
sbb
add
sbb
cmp
and
js
mov
cmp
adc
int
dec
repz
movsl
pop
pop
loope
mov
mov
nop
pop
pop
pushaw
mov
xchg
fs
or
inc
jge
insl
popf
cmp
ja
xor
rorb
pop
loopne
or
jge
add
in
pop
gs
fwait
push
dec
int
in
sarl
xor
xor
imul
push
insl
dec
pop
sub
pcmpgtd
jne
shlb
dec
sub
arpl
cmpl
mov
xlat
dec
dec
and
cmp
mov
orb
inc
mov
xor
push
clc
sbbb
add
imul
push
roll
adc
dec
xchg
lahf
xchg
idivb
sub
outsl
shlb
mov
mov
xchg
push
jge
mov
sbb
mov
sub
mov
cmp
mov
mov
sbb
sbb
jne
ficoml
or
fstpt
out
decl
and
pop
scas
mov
or
xchg
insb
push
arpl
xchg
xchg
mov
sub
push
cld
add
sbb
hlt
test
pop
adc
cmp
cli
pop
imul
lods
lret
fstpt
mov
push
pop
add
sbb
fs
pop
data16
xchg
cmp
jne
lret
sbb
in
leave
and
divl
add
pop
mov
and
sbb
mov
lahf
mov
pop
pop
xchg
loop
pop
dec
ficoml
cmp
popa
ds
sbb
xchg
adc
insb
adc
cmp
cli
jle
ss
dec
inc
std
xor
push
adc
xchg
aas
cltd
gs
ljmp
int3
sub
out
imul
arpl
lcall
jl
push
or
inc
xor
cmpb
wrmsr
lcall
jnp
hlt
nop
out
adc
jle
sub
lods
insb
ret
xchg
fsubrs
mov
inc
int3
jbe
clc
jl
jb
add
ljmp
mov
cmp
adc
xchg
aad
dec
cltd
pop
xor
repnz
aam
adc
lret
pop
out
sub
xchg
int
mov
arpl
addr16
jae
into
cmp
jb
shr
xor
ret
cmp
rorb
mov
dec
adc
in
jl
add
outsb
dec
xchg
pop
out
and
lret
adc
out
clc
fistpl
jo
sub
add
fisttpll
aad
outsb
sbb
and
movsl
clc
jg
iret
push
cld
xchg
stos
fstpl
and
pop
test
cli
xchg
and
fldcw
xor
aam
popa
imul
notb
fsubrs
hlt
bound
jbe
fcmovnbe
lds
mov
in
push
cmp
cmp
mov
xor
jle
push
dec
imulb
inc
xlat
movsb
inc
lahf
cli
test
inc
shlb
inc
mov
aas
orb
stc
pop
mov
and
filds
jl
dec
in
in
and
adc
leave
xor
push
sbb
sbb
fwait
hlt
dec
dec
test
mov
lods
enter
add
movsb
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
jmp
push
cli
imul
inc
iret
adc
out
add
push
sub
push
push
js
mov
and
adc
scas
push
orl
mov
jns
outsl
inc
aad
mov
lds
jg
loopne
adc
ud1
sarb
xchg
pmuludq
cmpsl
adc
and
fwait
push
xor
out
or
out
mov
inc
jbe
movsl
inc
cmpsb
adc
cmp
and
test
inc
cmp
fisubrs
les
clc
dec
pop
and
je
sub
adc
in
mov
and
and
mov
hlt
push
jae
cwtl
push
lret
bound
xorb
inc
xchg
cmpsl
jns
mov
inc
mov
fidivs
iret
outsb
mov
adc
pusha
lea
xor
xchg
add
ss
adc
es
push
push
loop
cmp
pop
adc
enter
mov
iret
mov
pop
xlat
lret
and
xchg
repnz
and
mov
add
scas
lock
jns
das
sbb
cmc
das
jb
cmc
scas
cltd
aaa
shll
dec
psrld
je
cmpl
pop
je
mov
int3
les
xor
fwait
inc
dec
mov
movsb
inc
jp
ds
imul
cmp
mov
mov
icebp
test
pop
jp
in
adc
into
inc
cmp
vpsubb
movb
add
aaa
pusha
cmpsb
sub
pushf
jp
cmp
and
inc
mov
xor
mov
cmp
xchg
adc
sbb
mov
in
shll
mov
cmp
shrb
push
inc
pop
int3
lock
inc
add
aad
enter
mov
call
sbb
ret
int
xchg
push
lods
mov
and
mov
cmp
mov
out
mov
jmp
push
sub
push
loopne
pop
aam
xor
sbb
mov
xchg
cmp
insb
xchg
je
fs
fildl
pop
inc
xchg
jmp
insb
cmp
lds
sar
movsl
mov
out
add
push
lret
negb
imul
add
clc
mov
mov
aas
scas
add
sbb
dec
in
rol
sbb
repz
push
out
adc
outsb
push
dec
js
sbb
pushf
mov
xchg
movsb
mov
in
sub
lea
imul
fldlg2
dec
fwait
jnp
cmpsb
cmpsl
pusha
scas
lea
dec
notb
cmp
dec
in
cltd
in
fdivr
arpl
cld
enter
mov
pop
and
inc
sbb
dec
insl
inc
jne
mov
lock
enter
mov
xchg
outsb
push
mov
adcl
das
dec
dec
or
pop
inc
insl
jo
mov
fs
sub
movl
loop
mull
adc
push
movsb
dec
xor
add
int
enter
pusha
mov
xchg
xchg
push
aam
enter
fiaddl
mov
ljmp
mov
cmc
mov
mov
addl
arpl
dec
push
orl
test
dec
push
adc
adc
xchg
ror
pop
clc
push
call
dec
add
orl
popf
or
xchg
xchg
pop
movsb
add
lock
scas
addr16
in
dec
nop
mov
inc
aam
sub
cmp
mov
cmp
adc
mov
pop
scas
inc
add
adc
mov
jge
mov
pop
cmp
pop
lahf
mov
sub
cmpsl
xor
inc
add
dec
int3
mov
pusha
sub
in
popa
pusha
xor
cmpsb
jnp
int
in
push
lret
pop
jp
jmp
popa
andl
mov
pop
shll
jb
jmp
addr16
fadds
cmc
pop
mov
ds
jmp
xchg
sbb
pusha
fidivl
fadds
mov
orb
inc
repz
sbb
fisubrl
ss
mov
push
ds
test
sahf
jge
cmp
push
cmp
push
mov
push
insl
inc
ljmp
xlat
cmp
and
in
pop
pop
cs
enter
inc
cwtl
jb
les
dec
push
ljmp
push
push
daa
pop
dec
lahf
pop
lcall
xor
push
daa
or
sbbb
push
ret
xchg
push
push
fld
xchg
popa
adc
icebp
sbb
and
ds
mov
mov
lahf
fisubrl
test
imul
and
stos
mov
add
ret
xor
aad
adc
sub
push
mov
mov
adc
bound
fisubrl
xchg
sahf
cmp
aaa
add
ja
das
adc
xor
dec
xchg
fbld
ret
inc
jmp
mov
inc
xor
mov
cmpl
xchg
inc
xor
or
pop
dec
dec
xor
xor
jg
insl
cld
in
or
push
add
xchg
decb
fldenv
aam
cmc
inc
cmpsb
out
xchg
dec
test
jo
dec
and
cld
add
sub
add
mov
sub
lds
nop
std
cmp
lahf
ja
loopne
mov
add
lret
je
int3
inc
dec
lret
push
xor
pop
ds
aad
bound
mov
orb
adc
inc
divb
je
int3
aaa
add
cmc
adc
sarb
cwtl
or
stos
mov
xchg
imul
inc
shrl
test
repz
sub
je
mov
rcrb
mov
hlt
sub
loop
xor
dec
sar
inc
inc
test
cmp
jns
out
scas
cmp
out
js
xor
inc
std
bound
jne
xchg
and
mov
xlat
xor
add
sub
dec
and
xor
aaa
xchg
jne
or
pop
and
pop
xchg
add
in
es
lods
mov
lock
push
lcall
in
mov
cmp
mov
movsl
gs
mov
lcall
mov
mov
movsl
fcmove
cs
or
push
aad
dec
cmp
test
sbb
loopne
mov
push
mov
cmp
push
mov
pop
nop
std
aad
std
or
fdecstp
and
sub
loope
in
cmp
fmul
pusha
jae
loop
sarl
mov
sarb
popa
xor
mov
cmp
inc
outsb
popa
mov
enter
mov
mov
mov
adc
fiaddl
cld
dec
xchg
pop
jnp
jno
inc
pop
cs
clc
lret
mov
scas
fadds
and
cmpsl
push
arpl
inc
pop
aas
mov
incb
jno
fdiv
inc
inc
jno
mov
andb
lds
leave
inc
push
mov
xchg
push
cmp
leave
cmpl
nop
pop
out
movsl
fistpl
pushf
mov
rsqrtps
inc
jle
dec
aaa
loope
fsubp
add
inc
dec
aaa
pop
in
jecxz
inc
rclb
pushf
test
push
mov
pop
sbb
mov
mov
xor
imul
xchg
popf
adc
in
fsub
push
popf
ss
jae
sbb
cmp
shll
push
leave
aad
add
inc
or
xor
mov
sbb
pop
bound
mov
repnz
sbb
icebp
add
js
popa
mov
test
sahf
xchg
dec
sub
fsubr
subb
scas
adc
and
jb
int3
push
pusha
fistpll
adc
inc
push
mov
fcmovne
push
or
scas
shl
loope
pop
ljmp
fidivrl
stos
ret
sbb
jo
add
mov
jne
push
fwait
inc
cmc
push
add
js
mov
dec
ficomps
int
xchg
addr16
mov
and
xor
lret
inc
popf
add
sar
ja
sbb
and
mov
jmp
mov
and
movsl
fucomip
push
pop
mov
lret
repnz
aas
lods
sub
pop
cs
fdivr
je
cmpsb
fimull
add
arpl
mov
jecxz
out
hlt
mov
xor
into
pusha
dec
ljmp
push
shr
outsb
aam
rcl
or
loopne
test
mov
jnp
mov
sbb
push
sbbb
shlb
and
bound
mov
push
mov
in
add
arpl
lea
popa
in
icebp
pop
adc
inc
enter
xlat
push
sbb
sbb
push
xchg
inc
or
jno
xor
and
jne
test
pop
push
fadd
stos
jnp
nop
icebp
pop
sti
jecxz
xchg
cli
mov
enter
into
jecxz
push
test
rolb
mov
xor
arpl
xchg
inc
lods
add
addr16
add
fdivs
das
fcompl
xor
popf
stc
push
in
jmp
push
push
mov
ljmp
roll
je
xchg
pop
cltd
setbe
sub
dec
ret
adc
jno
stc
mov
repz
mov
mov
fstl
popf
scas
pushf
xchg
enter
mov
mov
or
adc
cmpl
les
pop
jnp
add
mov
mov
mov
mov
jbe
sub
xor
push
jge
sbb
xor
jge
or
je
enter
scas
ret
mov
test
lret
bnd
subl
jnp
mov
xor
and
sbb
xorl
xchg
sub
xchg
mov
cs
push
and
jae
mov
shlb
inc
mov
add
cwtl
xor
xchg
xchg
pop
iret
dec
or
pop
pop
cs
pop
and
repnz
and
mov
cmpsb
cmp
add
and
inc
mov
fxch
cmc
xor
dec
fdiv
hlt
iret
into
or
xlat
add
sbb
out
aas
loope
lock
mov
or
lcall
xchg
dec
add
fsubp
push
stos
movsb
jns
mov
daa
loope
test
sub
cmpsl
movsb
lods
pop
push
or
jecxz
cmpl
leave
adc
pop
sbb
jns
pop
pop
les
jl
cltd
sub
adc
lret
fdivrp
or
xor
sub
fwait
clc
adc
jmp
ljmp
into
std
aas
out
je
mov
into
sbb
fsts
and
and
pop
pop
clc
and
loopne
inc
fimull
repz
sbb
outsl
clc
or
pop
inc
mov
adc
and
sbb
sbbl
sub
jae
repz
xlat
lret
jmp
pushf
mov
pop
and
jg
jo
adc
icebp
test
pusha
cmpsl
or
pop
pop
rclb
fnsave
pop
dec
pushl
aas
popa
outsb
sahf
jp
mov
xor
dec
push
dec
pusha
mov
or
enter
inc
lahf
add
xchg
add
mov
mov
push
mov
dec
adc
xchg
jmp
jmp
rorl
jns
mov
pop
scas
xchg
pop
dec
mov
cmp
dec
sahf
pop
pop
cmp
enter
cwtl
push
in
xchg
inc
repz
iret
in
pop
movsl
push
pop
stc
jge
fisttpl
aad
push
fadd
xchg
pop
and
jecxz
hlt
daa
pop
mov
mov
ret
push
arpl
lds
adcl
fmuls
dec
ret
lcall
and
or
cmp
and
enter
or
xlat
cli
sarl
jae
inc
pop
mov
xchg
ljmp
mov
mov
sti
lea
lcall
lret
int
inc
dec
or
sbb
lcall
inc
in
fsubrs
xchg
mov
xor
mov
mov
stos
insb
loopne
jns
cmp
xchg
cld
xor
jnp
sub
popf
mov
ds
add
mov
and
pop
jne
dec
aaa
lcall
cmc
and
in
movsb
adc
cmp
dec
js
clc
pop
scas
push
jmp
sbb
mov
enter
rclb
xchg
dec
out
outsl
outsl
mov
jns
fwait
jo
sarl
popf
xor
inc
pop
add
xchg
jp
cmpsb
xor
aaa
nop
dec
fcoms
inc
cmpsl
adc
or
insb
pop
in
mov
jb
inc
cmp
dec
call
outsb
jge
push
test
imul
cwtl
push
in
ljmp
jns
daa
mov
lret
rcr
push
xchg
xor
mov
cmpl
jne
test
cmp
dec
sbb
movsb
and
cmp
jns
aaa
or
js
adc
adc
pop
adc
cs
je
push
inc
pusha
jl
clc
mov
daa
push
xchg
sbb
jne
push
test
icebp
and
add
test
cld
or
popf
adc
mov
adc
push
shll
imull
pop
push
data16
ficomps
mov
addr16
and
cmc
mov
adc
cmc
data16
out
mov
fildl
nop
xchg
cmp
stos
push
fistps
xor
lret
add
and
mov
fisttps
addb
cmpsl
int3
mov
stc
cli
lret
mov
jo
add
push
mov
or
pop
mov
lret
mov
fs
mov
jl
sub
pushl
rolb
sub
fidivrl
lds
sub
jne
xor
or
pop
push
iret
ja
bound
and
dec
or
addr16
test
bound
xchg
mov
fldenv
bound
movb
ds
enter
mov
shll
mov
outsb
ret
xlat
clc
mov
mov
ja
mov
cwtl
data16
imul
and
inc
mov
xchg
out
aas
cmpb
push
cs
inc
mov
stos
sub
xchg
sub
sub
xchg
cmp
and
mov
xchg
je
insb
pop
adc
imul
js
sub
pop
js
test
pop
xchg
mov
xchg
lods
testl
mov
dec
mov
xchg
sbb
or
in
sub
add
mov
sbb
ret
mov
jg
jp
adc
add
mov
outsb
inc
movsl
mov
ret
pop
test
adc
leave
or
mov
rcr
pop
dec
cmp
cld
ss
stos
push
insb
out
ret
add
pop
cmpsl
aas
pop
pop
shll
outsb
repnz
mov
flds
jle
mov
xchg
jo
cmp
fdiv
cli
loope
pop
dec
int
test
les
mov
pop
mov
push
mov
and
stos
xchg
pusha
cmpsb
hlt
sub
clc
jnp
push
outsb
stos
cmp
mov
or
lods
jle
mov
aas
mov
stos
push
jne
out
cmpsb
mov
sub
movsb
pop
mov
mov
nop
mov
shll
loopne
or
push
rcl
test
out
ret
dec
inc
add
cmc
mov
test
mov
mov
push
adc
lcall
fiaddl
aam
ja
bound
test
fidivl
sub
mov
out
cltd
add
or
aad
push
pop
test
int
lahf
clc
bound
cmp
push
xor
fldcw
call
js
cmc
lea
mov
adc
cltd
jne
sbb
or
or
sub
jnp
gs
dec
repz
cli
jmp
mov
mov
lret
jno
dec
xchg
icebp
xorb
xor
and
add
pop
cmp
mov
lahf
test
push
xor
dec
lds
insb
and
subl
sbb
cs
push
pop
popf
out
sbb
mov
inc
sahf
ds
in
roll
cmp
call
loopne,pt
imul
push
xor
push
cmp
test
fdecstp
push
inc
mov
loop
in
insb
cmc
loopne
movsb
insl
xchg
mov
sub
in
push
mov
mov
xchg
push
std
fisttpll
cmpsl
dec
leave
addr16
sbb
sbb
dec
sbb
fnsave
cmp
dec
sbb
test
add
mov
mov
fwait
or
xor
mov
fisttps
ficoml
movsb
leave
sbb
cmp
dec
into
leave
and
insb
xor
mov
push
sbb
negl
add
xor
sahf
add
clc
jns
pop
in
lcall
test
insl
mov
lret
adc
add
je
jle
int
jl
push
lds
or
pushf
sbb
repnz
and
pop
or
cs
xchg
and
popl
cmp
dec
mov
sub
shr
pop
mov
outsb
adc
stos
push
pop
sti
mov
scas
cmp
sbb
mov
fucom
cmpsb
adc
bswap
pusha
sbb
leave
data16
repnz
enter
xor
into
push
icebp
aam
dec
les
cmp
lds
pusha
cli
pop
js
adc
roll
mov
push
pop
stos
or
mov
mov
push
pop
mov
and
aaa
neg
or
xor
mov
pop
js
fisttpl
xchg
cs
push
sub
cld
imul
idivb
xchg
or
outsb
fistps
mov
mov
movsb
mov
jecxz
sub
in
pop
cmp
sub
inc
mov
pop
push
cwtl
mov
mov
jl
xchg
dec
sub
mov
lods
movl
xchg
add
inc
orl
sub
test
rorb
mov
jns
dec
test
xor
lcall
popf
and
les
lret
ret
sbb
xor
mov
pop
jl
lret
mov
or
test
lods
mov
xsave
cmp
mov
lds
lods
rolb
jbe
je
outsl
ja
cltd
in
into
xchg
jnp
and
les
xchg
pop
jecxz
push
repz
mov
les
lods
popf
lret
push
int3
fdivs
jbe
mov
sbb
lret
icebp
pop
mov
adc
es
mov
shrl
dec
mov
dec
or
adc
fisttps
mov
mov
xchg
adc
xlat
mov
or
pusha
mov
lcall
fsts
sahf
loop
cltd
mov
rorl
xor
sub
push
fbstp
dec
fimuls
mov
movsl
insl
adc
test
ret
pop
mov
mov
xchg
aas
mov
lds
push
int3
js
or
mov
jns
lahf
rcll
add
add
jae
xor
movsl
pushl
add
popf
shrb
jle
ficomps
xor
mov
jo
inc
mov
or
adc
adc
in
mov
add
dec
mov
bswap
cmp
sub
in
mov
addr16
dec
mov
sbb
fistpll
adc
sub
sbb
cmp
fstpl
loopne
xchg
push
lret
stos
sbb
xchg
int3
leave
adc
test
jb
pusha
push
cltd
mov
sbbb
nop
and
lret
sahf
cltd
xchg
mov
lock
xchg
or
nop
sub
xchg
sub
dec
mov
push
pop
popw
jmp
pusha
or
cmp
fstpt
dec
int3
es
shr
push
hlt
and
movsl
subl
sub
repz
and
mov
cmp
mov
rclb
lahf
out
inc
sub
popa
cmp
push
push
cwtl
mov
xor
popa
in
movsl
xor
rolb
jg
jns
push
ja
lret
popf
sarl
sti
into
adcb
ficompl
push
arpl
adc
mov
psraw
adc
repnz
and
inc
or
es
cmp
push
inc
hlt
sub
daa
pop
add
fmuls
xchg
call
test
movl
mov
bnd
cmp
pop
push
jbe
rcrl
xchg
cmpsl
adc
gs
mov
lahf
negb
sub
ds
in
test
scas
scas
fisubs
outsb
xchg
mov
push
sbb
in
jno
xor
cld
adc
cmp
ret
cmp
das
xchg
sbb
dec
pop
fdivs
push
insb
pushf
sbb
int
add
scas
rcll
lods
pop
fisubl
rolb
imul
cmp
scas
pop
lods
movsl
retw
sub
jbe
shr
jnp
xor
jnp
inc
inc
jo
inc
ss
movsl
mov
aad
inc
and
add
clc
inc
scas
test
mov
add
add
xor
lods
lods
mov
jmp
enter
sbb
jl
cmp
lret
std
daa
cmp
fcompl
int
ljmp
je
out
inc
dec
cmpl
pop
and
or
outsb
daa
shlb
cmp
cmp
pop
clc
cmp
jnp
xchg
cmpsl
or
mov
leave
enter
movsl
cli
sbb
or
fcmovnb
dec
aam
ds
cli
ret
sub
pop
xor
in
mov
test
incb
sub
sbb
inc
adc
ss
push
call
iret
out
mov
dec
fstpt
mov
dec
lret
cmc
fwait
stos
pop
cmp
sti
sbb
shr
pop
shrb
sbb
cmpsb
inc
fs
push
cmp
pusha
sbb
lods
cmc
mov
shlb
pusha
mov
xchg
movsb
mov
or
dec
imul
xlat
pop
cmp
aad
movl
push
jecxz
loopne
push
mov
iret
dec
mov
insb
outsl
cwtl
or
icebp
fsts
xor
cmp
popa
lahf
ret
adc
outsl
dec
mov
lahf
ja
scas
cmp
mov
push
popf
data16
xchg
je
movsb
xchg
mov
dec
dec
push
fs
fwait
push
push
lret
add
xor
aad
push
fldl
outsl
or
adc
insl
mov
pusha
push
xor
mov
mov
dec
ss
jmp
pop
adc
dec
pop
stos
cmpsl
call
fcoms
int
iret
or
insb
xlat
out
test
mov
jecxz
or
mov
push
jbe
push
daa
lods
rcll
sub
pop
xor
mov
mov
notl
rol
bound
aaa
push
or
test
cmp
pop
out
and
jp
inc
mov
mov
sarl
in
mov
cmpsb
xlat
jl
outsb
push
pop
lock
cs
into
add
sub
and
repz
sbb
xchg
xor
ret
mov
sarl
adcl
pop
ret
dec
mov
and
xor
sub
iret
sbb
les
sbb
ret
sbb
pop
cmpsl
mov
xchg
sarl
push
out
xchg
fisubl
icebp
ret
cmp
jp
int
in
popl
mov
adc
or
adc
cmpsl
femms
pop
dec
cli
lahf
int
negl
xchg
clc
pop
adc
mov
mov
mov
shll
inc
pop
push
mov
pop
repnz
pop
inc
push
xor
cmp
lahf
cmp
xlat
sub
not
iret
hlt
mov
inc
cmp
test
and
in
adc
dec
cmp
push
push
cmp
clc
push
sbb
sub
push
xchg
cs
jo
stos
mov
cld
ja
sub
mov
cli
pop
pop
fldenv
outsb
xchg
lret
jo
divl
es
cwtl
lret
out
sub
cmp
mov
mov
cmpsl
div
mov
sbb
nop
movsl
pushf
xchg
in
lahf
xor
mull
mov
sbb
std
sub
push
daa
push
subb
and
jecxz
call
xchg
jo
sub
mov
mov
mov
incl
sub
es
daa
jecxz
lret
pop
jnp
fcoml
lods
std
xor
jne
sbb
jno
or
xor
lods
mov
push
rorb
and
mov
scas
ret
dec
mov
mov
mov
or
pop
imul
sbb
test
jbe
arpl
lods
jp
mov
sahf
inc
fisubrl
lret
ja
add
ljmp
popf
push
cmp
add
mov
cmp
clc
adc
shl
pop
ds
sub
push
ds
iret
aaa
xchg
inc
les
sub
loopne
adc
in
xchg
push
inc
dec
xor
mov
mulb
sbb
sete
sub
pushf
jmp
fstpl
mov
lret
sub
outsl
push
repnz
pop
lods
jne
arpl
jb
jmp
pop
pop
adc
sbbb
push
mov
add
xchg
pop
jbe
pop
mov
sub
add
fisttpl
lahf
jle
pop
jbe
dec
xlat
xlat
lods
cltd
or
or
out
sti
stos
rolb
in
mov
sub
push
cmp
leave
or
cmc
adc
jb
cmp
jbe
mov
ret
xchg
add
xchg
mov
mov
mov
sub
cwtl
mov
add
push
ret
jp
and
mov
in
fs
jle
mov
cmp
lods
daa
ret
xchg
cmp
push
lret
sub
fnsave
in
mov
pop
adc
lods
in
loopne
cmp
adc
ja
and
mov
jmp
sbb
push
out
push
repz
test
test
cmpsl
xor
xchg
xchg
pop
and
arpl
insl
sahf
divl
cmp
stc
jns
xchg
sub
add
mov
dec
xor
cmp
mov
inc
add
mov
cmc
out
xor
lods
movsl
push
mov
push
into
pop
cwtl
sub
imul
mov
fstps
stos
sub
enter
sub
fidivrl
out
fwait
add
jp
xor
sahf
xor
lods
pop
pop
sbb
dec
inc
inc
stos
fs
es
pop
out
or
adc
sarl
je
test
jno
cmp
jp
inc
and
loope
cwtl
jmp
push
in
adc
rcrb
and
dec
aam
das
dec
or
adc
pop
jo
xchg
mov
mull
stos
xchg
cmp
leave
iret
out
fmul
outsb
into
sti
inc
in
and
pop
push
pop
cmp
mov
and
mov
cmc
outsl
into
mov
jecxz
and
push
std
adc
adc
dec
aad
adc
nop
repz
shl
leave
iret
mov
push
scas
jmp
sar
adc
dec
adc
nop
aad
push
cmp
push
sub
in
shlb
cmc
enter
xlat
xor
imul
scas
cmpsb
jae
shlb
jno
sbb
sbb
xor
jle
les
push
dec
cltd
xlat
lret
flds
cld
mov
mov
stc
push
xor
cmc
rolb
push
mov
adc
mov
fwait
lret
sarl
pop
mov
pop
cmpsl
cmc
fidivrs
jl
sub
ds
jecxz
ljmp
mov
out
mov
xchg
mov
fidivl
xchg
dec
dec
inc
adc
in
jno,pt
push
or
add
stos
jb
push
inc
sub
push
out
shlb
jo
push
push
jl
push
and
jbe
iret
push
pop
push
int3
pushf
aad
push
inc
push
adc
adc
addr16
xchg
stc
push
loope
mov
aad
jp
sub
sub
jmp
lock
push
sub
dec
sbb
mov
ret
xchg
cmpsl
out
enter
ljmp
test
xchg
movsl
repz
push
cmp
leave
or
rorl
mov
lds
cmp
mov
adc
mov
addr16
fldlg2
add
sbb
jmp
add
neg
insb
cmpsb
push
ja
addl
pop
sbb
push
mov
dec
outsb
cmpsb
icebp
bound
pop
rclb
mov
in
or
push
sub
mov
mov
sbb
inc
mov
in
sahf
inc
call
dec
sub
sub
push
daa
cmpsb
push
insl
cmpsl
sub
push
jae
leave
dec
cmp
cmc
cmp
mov
dec
rcrb
repz
add
cli
inc
pushfw
in
cmp
les
xchg
cltd
add
adc
sub
adc
add
popa
in
shll
add
sbb
scas
and
fdivrs
add
xchg
and
jle
fidivl
jle
lret
adc
sbb
adc
int
test
jl
adc
sub
sbb
test
loop
mov
add
mov
lock
xchg
mov
and
adc
lods
pop
fwait
jae
popl
pop
dec
inc
or
mov
cmc
bswap
jmp
sub
push
pusha
inc
sbb
pusha
jmp
mov
imulb
test
inc
and
lods
lret
aaa
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
jmp
cs
lods
pushf
ds
enter
xchg
push
ss
mov
push
sub
push
push
inc
rol
out
lret
into
dec
js
and
insl
fs
xchg
mov
nop
out
cmp
stos
and
xor
cltd
add
cltd
repnz
xor
out
cmp
adc
cmp
ret
lcall
aad
icebp
mov
stos
pop
clc
sub
adc
lods
divb
call
mov
aaa
push
pop
cmpsl
int3
mov
lds
in
pop
cmp
mov
push
in
jmp
mov
shrl
push
imul
jmp
dec
or
jo
mov
adc
sbb
jecxz
enter
faddl
cmpl
mov
data16
enter
addr16
aad
pop
push
int
xchg
jo
div
in
push
xchg
dec
xor
mov
mov
pop
and
jle
into
xchg
std
data16
inc
arpl
test
adc
sbb
scas
xlat
addl
gs
mov
mov
lock
adc
inc
nop
icebp
ficomps
and
cmp
mov
push
or
jecxz
cmp
incb
push
cs
mov
cltd
add
dec
mov
pusha
sbb
repz
fimull
or
inc
outsb
iret
jge
and
mov
cmp
out
sbb
pop
mov
cmp
cs
xor
pop
addr16
pop
inc
loop,pn
shll
pushf
mov
test
daa
push
xchg
or
or
repnz
fld
cmpsl
push
add
cwtl
cltd
jbe
push
mov
or
bound
mov
out
rcrb
mov
test
xchg
stos
stos
dec
cmp
iret
js
jecxz
clc
cmp
jl
pusha
fisttpl
lock
sub
sbb
arpl
mov
xor
add
cmp
rcrl
int
pop
dec
test
icebp
dec
jmp
mov
xchg
mov
xchg
xchg
push
mov
mov
mov
push
dec
clc
mov
xor
xor
mov
dec
mov
mov
mov
movsl
push
dec
add
int3
nop
addr16
loope,pt
leave
add
xchg
sub
orl
mov
sbb
ja
xor
mov
jns
push
lret
and
push
xor
inc
jno
xor
sbb
mov
fucomp
sbbl
jl
push
stos
sub
int3
sub
rcrl
movsl
lock
sub
inc
pop
dec
imul
addl
mov
scas
xchg
sbbl
scas
clc
gs
in
loop
leave
xor
sbb
out
mov
jl
xor
xchg
mov
lds
pop
aam
sti
fsubrs
fcomip
adc
lods
dec
sbb
push
or
add
mov
xchg
std
pop
push
mov
inc
adc
pop
jecxz
jl
fistpll
call
stos
mov
je
popf
js
lds
icebp
xorl
sahf
adc
test
arpl
cmpsb
shr
dec
repz
add
or
inc
sahf
xchg
sub
dec
lds
int
xor
idivb
out
cli
dec
pop
mov
fsincos
pop
sahf
or
xorb
fs
mov
inc
jno
jae
lods
mov
lahf
adc
pop
and
dec
bound
scas
jl
push
mov
or
push
lods
shlb
repnz
add
test
pop
or
xor
imul
sarl
loop
repz
out
arpl
test
bnd
add
fwait
test
sbb
jae
push
push
dec
negb
push
fsubs
inc
enter
rorb
sub
adc
sbb
and
stos
push
mov
lea
xchg
lods
loopne
loop
push
pop
fdivrp
xchg
dec
loope
xor
loop
cmpsl
stos
shrl
test
jmp
dec
fwait
mov
xor
sub
sbb
push
xor
test
fdivrp
les
in
adc
jns
xchg
cld
imulb
jbe
inc
shl
cmpsl
movsb
pop
cmp
mov
push
std
push
shrl
mov
xor
and
popa
mov
lahf
pop
dec
push
fwait
sarb
daa
pop
lahf
mov
dec
and
cmp
outsl
mov
fstpl
outsb
cmp
jae
sbb
into
sahf
add
xchg
or
lret
int3
mov
mov
insl
push
pushf
mov
xor
pop
aam
outsl
xor
xchg
adc
imul
push
xlat
sbb
jns
int3
lahf
cmp
ja
lods
shll
roll
leave
daa
sub
jecxz,pn
call
jbe
sub
pop
mov
adc
nop
push
imul
aas
inc
stos
lret
xchg
pop
fdecstp
and
lods
push
pop
ds
push
ja
js
mov
push
dec
cmp
fs
ret
cmpsl
pop
xor
pusha
jge
addr16
loop
rcrb
lea
movsl
push
push
clc
or
jp
pop
jno
pop
rcl
pop
mov
xchg
push
adc
aas
add
add
sti
in
fwait
cmp
mov
les
and
fstp
repnz
xor
push
inc
bts
adc
dec
fstpt
pop
mov
sub
add
add
inc
shrb
inc
leave
mov
mov
inc
repnz
pop
inc
adc
adc
fildll
xchg
pop
dec
push
mov
es
mov
mov
jo
ret
lods
test
jmp
gs
lret
ljmp
mov
cmc
pop
jg
iret
cwtl
aad
pusha
insl
xchg
int
fmuls
and
xchg
add
cmpsb
push
inc
sbb
add
in
adc
inc
leave
test
pop
cmp
inc
pop
stc
lock
push
stos
jns
das
jge
inc
js
cld
push
scas
pop
stos
mov
dec
jno
iret
push
xor
out
adc
adc
dec
xor
xchg
xor
movb
adc
dec
shll
aad
cmpsb
push
mov
push
dec
loopne
jo
fistpll
fisubl
push
mov
les
fcompl
test
mov
popa
ret
scas
cmp
out
movsl
and
test
push
mov
insb
call
std
dec
mov
gs
xchg
sub
or
test
test
and
nop
and
jg
push
cltd
outsl
daa
stc
insb
fdivrs
int
daa
call
xchg
dec
adc
cmpsl
cwtl
cs
rorl
dec
outsb
adc
loope
mov
mov
push
lods
adc
jmp
mov
dec
xadd
xor
xor
or
fs
cwtl
mov
add
leave
push
jp
outsl
arpl
mov
das
repnz
outsb
or
xchg
mov
fdivl
add
jno
inc
and
xchg
sub
push
mov
mov
xchg
nop
or
fwait
sub
insl
rolb
pop
aaa
pop
lahf
and
out
cli
test
jmp
cli
jb
push
sub
scas
outsl
fisubrl
loope
mov
add
out
xor
popf
mov
dec
push
inc
adc
push
dec
test
push
jns
jl
jo
sbb
jg
push
and
xor
gs
xchg
loope
cmp
mov
xchg
mov
sub
cmp
stos
mov
inc
add
inc
out
cmp
mov
bound
mov
and
clc
xlat
sub
push
cwtl
sbb
pop
imul
and
sbbl
cmp
inc
pushf
stos
pop
add
sti
mov
enter
shll
dec
pop
push
fimull
cmpb
sahf
mov
dec
pop
pop
dec
clc
stos
mov
out
aad
mov
inc
fld
jp
push
mov
or
xor
pop
xor
xchg
pop
in
push
hlt
dec
fidivl
call
lods
lret
jnp
xchg
cmpsl
sbb
mov
je
push
xchg
push
lcall
cmp
outsl
xor
sbbl
jnp
mov
cmp
inc
lret
jns
and
mov
pop
pushf
adc
addl
jg
sbb
inc
mov
jae
cld
les
test
inc
loopne
push
mov
stos
cld
dec
jge
sub
mov
imul
hlt
mov
or
pop
jne
inc
sub
cmc
outsb
mov
repnz
aaa
iret
test
xor
hlt
aam
loopne
cltd
dec
lds
pop
xchg
pop
mov
mov
gs
jmp
mov
pop
dec
js
and
cltd
inc
sbbb
sbb
into
enter
cmp
xor
mov
rcrl
adc
adc
ss
dec
mov
pop
iret
sbb
sub
stc
rorl
fnstenv
scas
adc
leave
test
adc
cltd
cs
movsl
test
arpl
mov
xchg
imul
sub
xor
movsb
bound
mov
jle
pop
or
shrd
test
in
or
jbe
xchg
test
xor
mov
lea
mov
fildl
into
mov
push
cmp
les
aas
add
pop
mov
pop
ret
inc
or
loop
pusha
call
push
add
and
push
mov
push
push
pop
std
push
stos
imul
or
aam
mov
xchg
aas
ljmp
mov
dec
shll
sub
add
or
and
or
ds
jb
out
jp
cs
add
mov
inc
add
cmc
xchg
adc
int3
add
mov
outsb
pushl
pop
mov
mov
add
mov
mov
fst
fsubrl
dec
bound
jns
rcrb
test
mov
leave
testl
les
js
lods
cmpl
decl
nop
pop
push
out
pop
pushf
aaa
jns
shrb
sbb
sub
ror
stc
cwtl
and
adc
inc
jbe
sub
pop
xor
pop
pop
dec
je
xor
jle
adc
xor
rcrb
lods
push
out
ja
lahf
dec
inc
mov
addr16
stc
test
jmp
cs
push
cmpsl
enter
lret
pushf
adc
sub
stos
ret
jno
andb
subl
sbb
test
push
mov
adc
mov
aam
jl
dec
dec
inc
out
cmpsl
mov
fstpt
enter
inc
ret
or
js
mov
stos
rolb
push
xchg
inc
roll
nop
ret
jle
ret
insl
xor
adc
adc
dec
add
cmp
je
sub
adc
or
imul
push
pextrw
mov
hlt
ss
jne
and
in
jp
add
mov
clc
por
pop
sbb
std
je
xchg
lds
sbb
dec
loope
xchg
pop
insb
mov
push
repz
mov
mov
pop
sti
loopne
fistpll
add
movsl
mov
js
push
icebp
mov
cltd
dec
jl
mov
in
lahf
enter
cld
das
sub
pop
xchg
mov
into
fisubs
mov
gs
mov
add
add
ljmp
popf
outsl
jle
mov
cmp
rorb
jo
inc
pusha
loop
jno
or
movsb
push
out
push
mulb
jb
cs
jno
dec
cwtl
mov
pop
stos
mov
call
jl
mov
mov
cmp
lret
mov
add
mov
pop
sbb
incb
fistl
js
stos
icebp
pop
lods
pop
mov
pop
pusha
cmc
mov
repnz
or
dec
mov
popa
inc
inc
sub
dec
test
clc
gs
cmp
mov
mov
jns
lret
mov
movsb
mov
add
stos
dec
test
push
add
xchg
rclb
or
push
out
jno
inc
movsb
cmp
into
inc
std
xchg
or
push
fdiv
cmp
mov
out
imul
loope
dec
loop
loope
bndldx
ret
cmpsl
jmp
push
pop
sub
pop
add
inc
icebp
cmp
andb
mov
and
rcll
cwtl
sub
inc
lds
push
cwtl
xchg
into
lods
sbb
mov
or
andl
mov
jecxz
addl
jno
add
dec
mov
pop
mov
pop
imul
fldenv
insb
jbe
inc
sbb
cmp
and
cli
jecxz
adc
ja
sub
iret
sub
jae
pop
enter
insl
rorb
pop
int3
pop
cmp
xor
xchg
jb
pop
pop
cmp
test
paddsw
sbb
push
lahf
test
cmp
aas
ss
outsl
add
cmp
xor
cmc
inc
mov
into
xchg
sbb
btc
lret
adc
mov
incl
stos
or
sub
stos
fs
push
aad
dec
pop
dec
mov
sub
dec
aaa
cmp
pop
dec
or
pop
add
in
pop
rclb
adc
sub
stos
cmpsl
shlb
std
sub
xchg
pop
enter
or
stos
adc
jmp
je
pop
or
bound
or
jmp
arpl
addl
orb
inc
sarl
fnstcw
bound
test
lods
int
or
cli
mov
fisubs
and
aam
push
cmc
rcrl
mov
call
divl
fcomps
inc
jns
sbb
repz
mov
jne
repnz
shrl
cmp
gs
push
inc
xchg
fbstp
dec
lea
stos
sbb
std
sbb
pop
ret
pushf
jnp
mov
adc
xchg
mov
mov
scas
ret
orl
js
xchg
jnp
test
mov
jmp
mov
dec
mov
adc
mov
icebp
pop
xchg
adc
push
inc
leave
lahf
pop
insl
leave
stc
mov
inc
fsubs
mul
sub
outsb
dec
and
js
test
mov
lcall
movsb
mov
pop
roll
aam
push
xchg
dec
mov
ljmp
cmp
jne
cmp
aad
out
xchg
and
scas
loopne
adc
jg
dec
imul
mov
jns
cli
sbbl
popf
lret
push
aaa
das
dec
inc
es
push
bound
das
cmp
cmp
das
inc
dec
popf
inc
xor
out
mov
mov
in
inc
inc
inc
insl
sub
stc
movsl
in
xor
ljmp
dec
inc
cld
mov
andl
jecxz
stc
dec
cmpl
ja
inc
mov
in
add
jmp
icebp
push
lods
adc
cli
push
xor
ss
out
lods
push
cld
lds
fistps
lret
sub
mov
mov
inc
pop
mov
sub
rcll
mov
cltd
or
pop
inc
call
push
jns
mov
sub
movsl
fwait
ret
pop
in
and
jge
or
test
sub
sbb
imul
or
gs
repnz
scas
jae
mov
xchg
mov
movsb
and
repz
and
xchg
sub
test
and
xchg
mov
mov
ss
stc
jne
adc
xor
mov
sbb
or
repz
fsubl
shl
std
mov
cwtl
add
jecxz
xor
cmp
ss
fiaddl
sub
roll
push
and
stos
cmp
cmp
mov
mov
pushw
xchg
cld
sarl
xchg
fadds
aaa
test
dec
sub
mov
fsubrl
mov
sar
cmp
ljmp
dec
jbe
ret
daa
mov
sti
dec
and
cmpsb
push
mov
gs
mov
jae
jecxz
push
jmp
cli
popf
outsl
lret
pop
in
xchg
cmp
iret
mov
mov
jp
mov
mov
or
sub
push
icebp
pop
jle
jne
pop
mov
pop
cmp
hlt
out
movsl
xchg
pop
call
insl
mov
fnstsw
imul
jbe
arpl
nop
adc
sbb
dec
fiaddl
cmp
fsubr
mov
shrb
sub
cmc
mov
cmp
sub
push
push
les
js
movsb
insb
arpl
out
mov
lahf
imul
cmc
xlat
clc
in
mov
push
dec
lret
mov
jae
sub
call
push
fwait
inc
dec
xor
sub
lcall
imul
loope
sub
jecxz
in
cmp
mov
vldmxcsr
stc
fwait
scas
push
push
inc
mov
jmp
xor
dec
scas
sub
dec
cs
movsl
mov
cmp
xchg
insl
std
lock
jl
jb
push
jbe
and
xchg
mov
int
scas
inc
insb
or
in
insl
inc
cmp
frstor
lods
test
fcomps
mov
xor
pop
lret
xlat
mov
or
mov
imul
in
mov
push
xchg
mov
xchg
ljmpw
mov
cmp
mov
and
lock
in
test
cmp
sti
xchg
frstor
push
sub
ja
fdivs
rol
mov
into
imul
aaa
cmp
daa
or
or
push
fidivrl
out
daa
scas
inc
sbb
pop
push
push
ss
jbe
outsb
in
call
mov
in
pop
sarb
mov
rcr
add
jo
inc
fcmovnu
mov
xor
cmp
clc
ds
add
xor
sahf
adc
push
aaa
cld
in
push
dec
repnz
xchg
sbb
xorl
or
std
xchg
mov
ror
movsl
repz
movsb
xor
fimull
or
lock
dec
sbb
add
add
call
and
rcrb
bound
stc
sbb
dec
mov
dec
or
adc
test
cld
rcrl
insb
or
shrl
outsb
loop
imul
xchg
sbb
xchg
and
fsubrl
pop
sub
sub
mov
xchg
dec
xchg
enter
out
out
and
test
push
xor
testb
inc
rclb
mov
add
xchg
jp
fnstsw
pop
lret
mov
or
jl
cmp
les
ret
adc
loop
loope
or
jmp
ljmp
leave
fsubs
jmp
std
mov
jno
imul
and
jnp
lea
pop
cli
jb
incl
lcall
pop
iret
jno
mov
push
jg
movsl
adc
add
add
ficomps
test
lock
fmuls
loop
movsb
mov
mov
ds
addr16
mov
fsubs
jl
gs
imul
pop
test
ret
mov
mov
in
ja
out
cli
fidivl
int3
xor
add
daa
js
pop
pusha
gs
xor
inc
mov
pushf
sbb
repz
rolb
or
leave
jmp
in
fisttpll
xchg
pop
cli
and
dec
cmpsb
rcll
mov
jae
sub
fistpll
pop
stc
add
mov
sub
test
ss
jl
loopne
xor
pop
lock
ljmp
mov
lret
das
ds
call
sti
movsb
ds
add
sub
rorb
stos
sbb
push
mov
fisttpll
les
jge
outsl
fistpll
or
cmpsl
jp
sub
pop
add
fisubs
xor
int
mov
sbbl
in
mov
jbe
test
xor
xchg
adc
push
lcall
xchg
sub
adc
leave
lock
cltd
popa
popa
push
push
adc
addr16
das
leave
jl
test
sub
bswap
lcall
push
mov
sub
out
push
mov
or
jl
out
push
inc
rolb
lret
pop
aaa
inc
jmp
imul
push
iret
jmp
testb
fmulp
ret
mov
orb
mov
xchg
dec
push
push
push
je
ds
pop
cmp
cld
daa
rcl
imul
insl
sarl
mov
sahf
loope
jecxz
dec
cltd
leave
cmp
sbb
mov
data16
jno
pop
dec
cltd
fstl
loopne
mov
subl
out
inc
movsl
xor
rcr
popf
inc
aam
js
movsl
push
movsb
ljmp
and
xchg
push
mov
add
xorl
inc
in
mov
inc
lods
fsubrl
inc
inc
pop
das
jae
out
push
adc
pop
mov
push
ljmp
inc
sbb
andl
mov
dec
mov
push
add
push
adc
pop
jp
add
jno
loope
fwait
jmp
icebp
repz
pop
insb
stc
stc
andl
mov
pop
aaa
cmp
xorb
cmc
xor
xchg
inc
jns
ja
addr16
push
fstp
fwait
push
cmp
cmp
or
pop
mov
int3
pop
add
loope
repnz
mov
sarb
push
outsl
and
or
dec
cmp
cmp
out
jg
popa
gs
xchg
mov
repnz
push
dec
fnstcw
jns
push
or
cld
cmpsl
mov
les
and
inc
dec
sbb
js
mov
adcb
sbb
icebp
dec
lods
daa
mov
dec
aad
decb
call
xchg
rclb
adc
test
es
pop
je
jns
int3
fucomip
cld
dec
mov
out
icebp
fldcw
cmp
cmp
lcall
mov
fs
xchg
add
mov
repz
inc
sbb
arpl
or
scas
pop
jne
mov
andl
mov
repz
test
into
ret
lods
std
in
movb
movsb
jnp
pop
push
lret
mov
or
jo
jmp
inc
popf
xor
dec
imul
mov
cld
xlat
add
pop
scas
test
aad
enter
imul
mov
aaa
das
pop
pop
push
enter
negb
in
subb
icebp
lret
js
dec
clc
call
call
leave
lret
popa
movsl
sub
stos
ds
sbb
push
sbb
in
pop
add
dec
mov
jae
jb
xchg
pop
jge
lret
xlat
add
jnp
outsb
or
inc
loop
aas
test
cmp
popa
dec
inc
mov
sbb
fadds
fisubs
inc
outsl
out
add
clc
das
xchg
push
jecxz
nop
pop
push
loopne
or
movaps
push
mov
scas
sub
dec
sbb
ficomps
push
dec
pusha
cmp
sub
rolb
loop
cmp
mov
sub
or
int
sbb
dec
adc
mov
leave
int
sbb
pop
cmpsl
and
jge
push
hlt
dec
cwtl
dec
loop
pop
xchg
dec
popf
and
in
sbb
sti
and
ss
fstpt
and
sti
xchg
leave
inc
inc
jne
jg
std
in
add
push
test
and
push
jno
mov
push
cmp
nop
lea
insb
lock
inc
scas
mov
test
std
icebp
movsb
iret
imul
and
sub
sbb
pop
dec
inc
lea
pop
mov
adc
iret
sub
sub
jp
loop
cmpsb
cmpsb
out
pop
sbb
lods
loopne
push
lret
jnp
test
mov
jmp
cmp
pop
mov
fmull
push
dec
movsl
aas
sbb
hlt
ja
repnz
fsubs
cmp
in
test
sub
mov
sbb
cltd
shrb
jmp
movsb
in
pusha
stos
mov
lods
push
fsubrs
push
nop
pop
out
or
mov
gs
dec
push
stos
sub
fcoml
aas
jecxz
fidivrl
fbstp
inc
sub
sahf
js
aad
stc
mov
mov
jmp
adc
jne
sub
push
mov
mul
jns
in
sbb
pusha
ss
negl
xchg
and
pop
stc
popa
mov
adc
imul
xchg
imul
xchg
jbe
aam
or
call
cmp
mov
adc
mov
cmp
shrb
addr16
js
pop
in
jnp
xchg
jb
mov
arpl
sbb
push
mov
mov
push
jge
outsl
stos
ja
repnz
add
mov
push
and
pop
pop
jb
loopne
mov
xchg
cld
lea
pop
xchg
xlat
lock
cwtl
andl
push
ret
dec
cwtl
dec
es
scas
xchg
cmpsl
test
inc
pop
pop
mov
push
dec
jbe
xor
dec
aas
sub
shlb
mov
pop
inc
mov
aaa
pop
and
add
fistpll
pop
cmp
rcl
loop
cltd
mul
movaps
mov
fwait
jno
ret
int
dec
mov
mov
mov
jno
mov
nop
sahf
lahf
or
mov
or
je
adc
push
cmp
test
daa
js
cmpl
lock
sbb
mov
push
jecxz
cltd
std
pushf
or
call
inc
gs
sbb
dec
leave
and
sahf
test
fcmove
out
pop
jge
pushl
sub
es
and
push
cltd
std
sub
outsl
sub
repnz
test
les
outsb
insb
xchg
add
stc
test
stos
xchg
push
jbe
push
daa
mov
sbb
cmp
push
call
dec
jne
jp
lods
inc
ret
in
rolb
push
sub
mov
pop
pop
mov
dec
rcr
mov
sub
mov
fmuls
fwait
push
sahf
cmp
pop
or
std
dec
loopne
sahf
insb
call
jb
cmpsl
pop
lock
mov
decl
mov
jbe
sbb
fs
repnz
push
push
xor
ss
mov
mov
cmpsl
mov
dec
into
and
push
push
pop
mov
icebp
adc
shlb
and
mov
cmp
mov
xchg
dec
add
push
sbb
mov
pushf
stos
xor
ffreep
nop
jno
movsl
pop
aaa
sbb
mov
mov
mov
inc
pop
inc
in
xchg
movsl
les
fadds
movb
mov
lea
call
jecxz
arpl
and
out
sub
mov
mov
lcall
subl
loope
fs
jbe
mov
mov
jb
mov
test
dec
movsb
pop
mov
mov
cmp
loope
dec
dec
push
sub
subl
lea
mov
fstl
icebp
test
lods
push
inc
subb
std
lret
xchg
jl
lcall
push
jl
popa
pushf
sub
fwait
cwtl
jge
adc
adc
fwait
or
push
and
sbb
movsb
loopne
call
ret
jo
mov
fdiv
jmp
mov
aad
movsl
test
cmp
sbb
mov
fidivrl
or
aaa
int
and
addps
ljmp
movsb
pop
jl
outsb
and
add
scas
mov
es
sbb
mov
inc
add
push
sahf
stos
sbb
add
ljmp
ljmp
iret
ja
mov
dec
lds
or
in
inc
sbb
movsb
js
lret
cmc
mov
aam
into
imul
xchg
inc
insl
cmc
out
int3
lds
mov
popa
or
and
dec
cmc
divb
out
outsl
mov
mov
imul
and
pop
fsubl
mov
mov
popf
cmp
daa
push
test
std
mov
fisubl
repz
sub
xchg
adc
push
das
lahf
in
mov
jl
push
mov
lcall
xor
fbstp
or
mov
stos
into
or
rcr
daa
std
mov
in
sbb
mov
push
add
pcmpgtd
pop
mov
dec
inc
push
dec
lock
movsl
rcl
pop
xor
sbb
shrb
call
pop
je
jl
mov
or
jo
scas
popa
dec
loopne
mov
pop
repz
mov
sbb
fidivrl
filds
add
jmp
mov
or
jmp
pop
insl
sub
cmp
icebp
or
outsb
lea
push
sub
push
push
xor
sub
jmp
push
pop
sbb
xor
fldcw
out
inc
cmp
test
jae
add
cmp
adc
sbb
mov
imul
sbb
sub
outsb
fstpl
aam
pushf
dec
mov
sub
dec
sub
inc
jecxz
test
fnstenv
add
xor
mov
cmpsl
aad
inc
mov
jne
lock
jae
cltd
xchg
mov
mov
jecxz
lret
aaa
push
mov
mov
push
push
dec
sbb
ja
outsb
enter
jl
test
shll
xor
push
inc
insb
xor
dec
repz
and
mov
addr16
dec
xchg
push
xchg
xchg
es
jns
movsl
jno
sub
push
cmpsl
lret
push
xchg
pop
leave
xchg
fidivrs
fdivrl
imull
lock
jnp
mul
adc
arpl
push
iret
lds
dec
test
add
pop
sahf
out
push
repz
iret
adc
int3
and
pop
xchg
xchg
cmp
mov
dec
dec
mov
mov
les
mulb
scas
dec
mov
xor
mov
cld
imul
mov
add
lret
jb
mov
pushf
fiadds
movb
push
mov
aas
inc
xor
adc
lods
xorb
cmp
aad
push
sub
int
jle,pt
fstpt
cmpsl
cmp
stos
adc
daa
out
inc
lea
mov
call
imul
in
push
adc
gs
push
rcll
arpl
xor
inc
loop
add
out
dec
push
xchg
sbb
xor
inc
test
push
adc
test
mov
sbb
nop
sbb
cmp
inc
imul
jnp
pop
pushf
jb
lea
adc
loopne
ficoms
rcll
xchg
faddl
mov
scas
pop
out
push
ja
mov
push
daa
or
sarl
xor
mov
push
jbe
rorl
mov
fimull
adc
jbe
mov
lret
dec
push
push
and
iret
das
test
lea
in
xchg
decb
loopne
mov
xor
pop
sarb
xchg
jae
sbb
js
rorb
lods
xchg
add
bound
int
sti
mov
mov
aaa
sub
cs
stos
addb
jmp
lret
mov
ja
sub
push
sub
jnp
sbb
shrl
int
sub
inc
shrb
mov
mov
call
pop
jae
daa
xor
and
add
adc
lret
movsl
aaa
rcrb
inc
sub
mov
and
sahf
push
movsb
mov
out
pop
pop
dec
push
fldcw
jecxz
and
pop
aam
and
xchg
lea
xor
subl
loopne
push
or
subb
jbe
sbb
lcall
rorb
cld
dec
mov
add
jae
mov
aad
iret
dec
gs
jns
pop
data16
push
sbb
cmpb
mov
cmp
mov
jae
add
sub
lcall
pusha
sti
push
push
xchg
shlb
test
insb
je
in
fwait
test
and
mov
cmp
jge
adc
sub
pop
clc
push
sub
cld
and
push
dec
popf
and
icebp
mov
shll
loope
lds
dec
cmc
aaa
pop
stos
inc
xchg
in
mov
aas
imul
adc
jno
sub
fadds
lcall
sub
stos
jno
shlb
out
sahf
aas
push
ret
aam
cmp
xor
jl
loopne
or
adc
mov
rolb
mov
cmp
shlb
push
xor
dec
stos
pop
ret
lock
aaa
addr16
mov
mov
push
fbld
cli
sub
clc
xchg
rorb
xchg
dec
cmc
jbe
test
out
das
mov
cmp
dec
into
faddl
add
cmp
decl
push
jmp
jno
lds
addl
movsl
in
out
mov
mov
repnz
xchg
sub
sti
jnp
popf
rolb
push
test
mov
pop
mov
mov
push
fdivs
or
mov
mov
ds
mov
xchg
or
add
and
mov
mov
outsl
jne
mov
shrl
sahf
ss
inc
mov
pop
int3
movl
movsl
inc
sti
and
add
dec
mov
pushf
pop
or
dec
inc
cmpsb
mov
jne
add
mov
rcrl
lds
fs
push
adc
push
sub
movsb
dec
push
imul
and
sub
mov
int3
dec
or
mov
cli
xor
mov
test
jle
or
sub
inc
add
dec
push
rorb
xchg
bound
out
pop
push
rolb
mov
fwait
jbe
mov
adc
jne
push
mov
or
ret
add
dec
jge
cmp
lods
add
insl
push
ljmp
rclb
mov
add
call
test
stos
xor
icebp
subl
jnp
sbb
cmp
jmp
lock
call
adc
nop
js
int
mov
lds
les
enter
mov
lcall
dec
sbb
gs
shlb
push
icebp
jmp
mov
loopne
mov
adc
pushf
rolb
fwait
leave
jne
mov
push
or
shll
inc
popf
add
rclb
rclb
aad
push
sbb
daa
adc
sti
pop
ja
inc
ret
jmp
cmp
fildl
sub
ljmp
push
jle
movsl
aad
mov
es
pop
xchg
scas
call
sbb
jge
sbb
jge
dec
and
and
mov
and
xorl
jl
and
sahf
nop
xchg
push
mov
mov
xchg
inc
lock
push
sbb
mov
adc
inc
push
add
pop
cmp
and
cltd
cmp
addl
or
rcrb
dec
cltd
mov
mov
out
dec
arpl
adc
xor
bound
test
xchg
cmp
jl
mov
aad
mov
ljmp
dec
nop
mov
dec
jmp
loope
or
out
add
lds
xchg
sti
pop
je
mov
adc
cwtl
mov
mov
and
int3
xor
aas
cltd
jo
xor
xor
add
ja
mov
jo
lds
ficompl
add
xor
xchg
mov
adc
xor
sbb
or
inc
shlb
mov
pop
mov
dec
adcl
dec
aaa
mov
es
fs
xor
sub
mov
pop
out
mov
jae
lahf
add
jno
cmpsb
push
fstps
popl
cmpsb
xchg
stos
lcall
add
testl
inc
adc
cmp
mov
cli
outsl
push
jnp
arpl
mov
inc
dec
adcb
push
sub
loopne
int3
inc
stc
and
test
dec
push
jno
cmp
sbb
loope
push
adc
dec
sub
dec
sbb
pop
xor
push
jbe
xor
mov
mov
dec
xchg
lock
xchg
dec
stos
adc
mov
lcall
clc
stc
repnz
dec
dec
adc
push
dec
ja
add
out
xorb
ds
and
aad
dec
sub
dec
push
sbb
mov
and
movsb
pop
ljmp
or
test
int
xlat
dec
fwait
jbe
mov
arpl
adc
movsl
mov
adc
imul
push
lahf
push
xchg
leave
push
into
dec
xchg
fwait
sbb
icebp
jo
outsb
ret
icebp
mov
mov
and
cmp
adc
jp
insl
rcrb
inc
and
sub
cmpsl
pop
jo
outsl
dec
das
cmp
dec
mov
rcr
lods
jl
inc
lahf
test
loope
inc
stc
fistps
fwait
loopne
shlb
sbb
in
sub
jbe
sti
jb
push
ds
xor
pop
loop
or
pop
cmp
xchg
mov
daa
test
xorl
icebp
mov
mov
imul
lret
fisttpll
adc
cmp
test
mov
sbb
dec
mov
dec
pop
add
xor
leave
arpl
cmp
xor
repnz
cmpsb
inc
xchg
jo
orb
pushf
js
cmpsl
stos
fldl
jmp
mov
incb
or
popa
cs
cld
adc
leave
je
repnz
ret
mov
hlt
into
bound
ds
dec
pop
dec
daa
es
mov
das
jae
iret
mov
ja
sub
lds
add
jp
iret
fs
out
iret
in
mov
mov
add
and
sub
mov
enter
repz
mov
mov
aad
subl
es
or
repnz
insl
inc
pop
in
add
outsl
sbb
push
lcall
cwtl
cmc
xor
cmp
xor
push
cmpsl
ss
mov
into
repz
shlb
scas
sub
aas
test
test
sub
les
test
aad
dec
xchg
js
and
and
and
aam
add
popa
push
test
xchg
fcomps
push
gs
pushf
sbb
out
aas
mov
mov
push
jl
test
cli
dec
shrl
pop
push
sbb
pushf
add
sub
loope
pop
add
adc
dec
je
andb
jle
lds
mov
adc
mov
jae
or
mov
sbb
in
add
cli
cmp
cmp
in
push
mov
pop
repnz
xor
sub
stos
or
inc
or
enter
jns
loope
sub
ss
inc
loopne
test
cwtl
and
or
mov
rorb
insb
daa
push
cltd
adc
lret
cmpsb
jmp
adc
ljmp
mov
sub
jle
test
xchg
xor
mov
lret
xlat
cmp
dec
xchg
das
xor
aam
cmpl
sub
in
jmp
lock
in
cmp
and
or
gs
mov
jno
cmpsl
stc
mov
xor
sahf
jnp
fcompl
cltd
or
dec
cmp
mov
lahf
arpl
ret
adc
and
pop
xchg
push
xchg
popf
jle
xchg
xchg
ss
shlb
sbb
insb
fwait
inc
popw
mov
in
mov
call
hlt
push
fadds
rorl
jl
jne
sub
ja
iretw
nop
int
pop
mov
inc
das
xchg
ret
jo
and
popf
mov
mov
insl
xor
aas
jae
adc
inc
outsb
jle
mov
xor
mov
and
shlb
fwait
dec
lcall
cmpsb
mov
cmpl
outsb
shrl
in
cmp
addl
push
sub
cmp
adc
mov
mov
or
test
mov
xorl
jnp
loopne
iret
adc
aad
mov
pop
shrl
mov
mov
jmp
in
ds
data16
pushf
movsb
push
mov
arpl
mov
cmp
mov
sbb
sbb
es
lahf
pop
iret
add
cmpsl
sub
andps
cmpsl
dec
or
mov
lea
add
jno
rcl
pop
dec
jmp
mov
mov
jle
mov
mov
ds
xor
push
repnz
jb
push
aas
push
xchg
pop
stos
in
pop
mov
mov
dec
hlt
cmp
scas
fnstsw
sbb
or
pop
or
das
pop
jle
mov
push
ret
and
rcrl
insl
xor
clc
sahf
dec
xchg
out
lock
imul
xor
mov
jns
dec
into
sub
lods
mov
imul
scas
jb
test
in
jns
push
rorb
addr16
lea
add
xchg
sub
aas
mov
jp
cmc
xor
sbb
adcb
dec
cwtl
or
pop
cmp
negb
mov
mov
pop
loopne
push
inc
xchg
push
es
arpl
call
in
add
jle
incb
mov
jno
mov
pop
cs
jmp
repnz
es
xor
sub
jl
lcall
dec
push
xchg
cli
iret
inc
outsb
and
pop
pop
mov
mov
jg
add
and
pop
addb
test
or
xlat
pop
adc
xchg
and
cs
imul
lods
xor
stos
dec
jne
cmp
lds
fmull
adc
cld
fsubr
rol
sbb
mov
in
mov
lock
lock
les
enter
push
icebp
les
movsl
clc
lods
mov
mov
mov
fcomp
lock
or
push
pop
outsl
jg
ds
xor
cld
dec
pop
or
adc
iret
dec
pop
dec
pop
mov
stos
sti
push
sahf
xor
inc
enter
daa
inc
cmp
cli
lock
cli
mov
in
jg
je
add
inc
out
mov
ja
sbb
cmp
mov
movsl
test
cmpsb
xor
sub
rclb
repz
fwait
jo
out
pop
pop
add
lea
std
push
lea
shll
and
sbbl
push
loop
sub
movsl
mov
fsubs
jge
jnp
movsb
aas
or
nop
dec
xor
jecxz
add
jns
mov
inc
or
std
ljmp
cmpl
add
scas
mov
lock
fdivs
sub
dec
aaa
lods
orb
mov
push
dec
andb
out
or
insl
jb
xchg
xor
rorb
mov
jle
fdivr
xor
int3
cmc
mov
int3
xchg
das
mov
call
dec
outsb
push
jmp
push
mov
and
faddl
mov
adc
stos
adc
mov
out
arpl
or
inc
adc
lahf
repz
stos
or
xchg
or
lock
xadd
xchg
sub
repnz
fnsave
or
stos
out
outsl
imul
test
or
loop
lcall
sti
push
dec
fnsetpm(287
mov
xor
jnp
ja
in
aaa
rcrb
adc
jge
pop
mov
imul
adc
int3
in
xor
jne
leave
sbb
push
loope
sub
fldenv
sbb
outsb
cmc
jno
xor
cmp
mov
mov
jle
xchg
loopne
mov
cmc
push
jne
mov
das
or
addb
bound
jns
mov
xchg
and
rorb
mov
mov
xchg
mov
push
or
sbb
movsb
sub
mov
mov
sahf
jnp
addb
clc
pop
jmp
stos
aam
xor
cli
add
mov
push
mov
jg
cld
es
jg
dec
bound
jb
push
xchg
mov
test
mov
push
scas
mov
roll
sti
mov
cltd
add
pusha
cltd
or
mov
push
nop
xchg
fs
decb
mov
mov
sub
and
aad
std
xor
cwtl
adc
jge
filds
push
mov
lcall
mov
daa
and
and
push
mov
jnp
das
xor
mov
mov
insl
add
adc
mov
mov
repz
and
add
repz
jbe
stos
lock
adc
or
shr
adc
test
imul
or
out
mov
add
test
jb
iret
jns
and
pushf
movsl
pop
adcl
mov
and
std
adcl
mov
popf
bound
mov
pusha
out
sbbl
stc
imul
mov
leave
inc
or
insl
jp
sbbb
pop
pusha
push
fiaddl
add
ljmp
arpl
mov
xor
jb
add
call
adc
lahf
push
imul
std
shl
out
sbb
lock
mov
daa
pop
std
arpl
xchg
cs
inc
mov
sub
mov
jle
pop
or
bound
xchg
scas
das
cmc
cmc
pop
out
xor
subb
adc
movsb
xchg
loope
inc
pop
cmp
mov
mov
out
push
stos
imulb
add
and
stos
pop
push
loopne
shll
sub
adc
push
push
lock
data16
jne
sahf
lock
adc
movsb
adc
jecxz
sti
dec
leave
in
push
or
push
rorb
test
xor
adc
pusha
and
push
cmp
out
or
shll
xchg
leave
sub
push
in
test
cmp
mov
xchg
cmp
addr16
ficomps
jae
inc
mov
add
mov
fbld
shlb
mov
jae
popa
jl
int3
mov
sub
jb
inc
outsb
incl
hlt
adc
mov
imul
test
daa
js
push
adc
dec
pop
mov
dec
test
fwait
inc
gs
add
xchg
pop
pushf
xchg
mov
insl
int
sbb
fnsave
int
mov
inc
inc
mov
jp
push
pop
in
iret
scas
xor
jb
pop
inc
sub
pushf
int3
add
or
stc
in
movl
dec
xchg
mov
ret
fstl
jp
lret
jae
mov
mov
pushf
faddl
call
mov
sbb
or
fdivr
inc
test
dec
cmp
jge
or
repz
push
jg
adc
cwtl
in
nop
sbbl
sar
aad
dec
popf
scas
xor
adc
jnp
shl
cmc
loope
std
fisubrl
fwait
hlt
adcb
sub
lret
insl
sbb
jne
xchg
in
lcall
loop
fst
cwtl
inc
fwait
cli
icebp
pop
nop
cld
dec
fdivr
sbb
fsts
repz
pop
fistl
stc
sbb
insb
cmp
push
lods
rorl
jl
inc
clc
xor
and
rclb
in
je
test
jnp
mov
jne
jne
inc
sti
and
dec
sti
addr16
fst
outsl
xor
adc
xor
jecxz
adc
jns
aaa
or
sub
inc
addr16
sub
inc
int
or
ss
sahf
xorl
fwait
sar
pop
iret
rorb
push
btc
cwtl
repz
lock
add
rcrb
lea
push
xchg
jmp
jl
mov
xchg
adc
adc
mov
loope
xor
xchg
xor
mov
out
push
les
xor
adcb
mov
push
bound
mov
andb
sbb
inc
lahf
test
xchg
gs
push
sbb
rcrb
mov
jno
push
mov
ja
add
fldenv
sbb
out
or
mov
test
dec
push
test
aam
ja
mov
sub
and
push
ficompl
shr
fsubrs
sbb
in
mov
push
mov
aam
lret
mov
inc
xor
push
adc
inc
stos
push
cwtl
test
test
dec
das
arpl
mov
std
mov
jmp
pop
push
dec
or
xor
stos
sub
pop
inc
lret
and
stc
mov
les
dec
jge
imul
push
cltd
movsl
movsl
mov
pushf
cltd
cltd
lods
push
fidivs
or
dec
pop
dec
cmp
or
stc
sub
inc
into
lds
add
xchg
adc
dec
pop
pop
jb
jle
aad
aam
out
sub
repz
ss
cmc
jbe
sti
stos
sbb
pop
stos
jnp
push
ret
fs
not
fwait
dec
sbb
inc
push
jmp
jns
xchg
arpl
rcrl
pop
xchg
rcll
fs
dec
pushf
inc
sub
gs
sub
mov
push
out
pop
js
movsl
fisttpl
aaa
and
push
rolb
mov
xchg
push
sbb
cmpl
mov
add
push
push
push
fdivs
push
int
or
idivb
dec
sub
push
dec
les
push
pop
push
inc
les
inc
dec
xchg
popf
or
gs
xchg
adc
add
mov
inc
push
mov
sub
sub
mov
sbb
push
and
dec
add
pop
jne,pt
or
sbb
mov
mov
xchg
repz
mov
mov
loop
stos
sbb
outsb
pop
add
xchg
add
adc
sbb
mov
mov
pusha
or
hlt
lods
loopne
xchg
lret
loopne
fistpll
sbb
popf
add
sahf
or
jecxz
ljmp
scas
lock
out
lea
pop
sbb
push
cld
xchg
or
add
and
ljmp
loopne
xchg
lods
iret
mov
xchg
repz
xor
mov
nop
test
mov
pop
test
test
stc
or
sbb
add
mov
sti
ljmp
cld
lds
pop
push
ds
jg
mov
movsb
cmp
hlt
mov
and
inc
jbe
mov
lahf
arpl
std
fisubl
xchg
jecxz
enter
jle
out
outsl
mov
inc
imul
inc
mov
push
xlat
outsb
jbe
pusha
jle
aas
scas
add
and
sbb
sub
jbe
add
mov
add
or
jo
gs
or
cmp
mov
jno
aam
imul
or
mov
mov
jge
insb
fisttpll
sahf
hlt
idivb
cmp
in
push
test
cli
sub
mov
fnstcw
inc
jp
cmp
test
div
mov
sbb
xor
subb
cmp
xor
mov
es
cmp
cwtl
adc
lcall
jbe
mov
movsl
hlt
adc
js
push
xchg
movsb
xor
insl
xchg
mov
outsb
pop
jno
les
inc
lret
push
movsl
ja
jbe
jl
mov
outsw
fs
cwtl
jge
rorl
cmc
push
loop
push
xor
fwait
sbb
test
lea
mov
cmc
jge
or
jne
rcl
aad
adc
mov
adc
pop
insb
or
add
sbb
pusha
adc
fdivrp
sub
xor
out
in
loope
jge
dec
cmp
fisttpl
out
cmp
les
push
cmp
add
loopne
mov
fisttpl
xor
enter
sbb
into
xchg
add
and
sbb
jnp
ja
xor
cmp
cmp
outsl
pop
scas
in
js
scas
cmpsl
enter
pop
scas
xor
fsubl
dec
inc
int
stos
mov
mov
dec
mov
dec
push
lods
aam
and
hlt
test
xchg
lret
clc
cmp
ret
push
mov
mov
jmp
cmp
fwait
adc
jb
mov
jb
mov
mov
out
mov
mov
aam
daa
adc
xchg
dec
cld
adc
loope
iret
xor
daa
mov
xchg
lahf
push
xchg
test
mov
sbb
pop
pop
xor
or
mov
fdivp
sbb
pop
andl
cmpsb
and
cld
fmull
loop
gs
sbb
cmp
pop
mov
loope
xchg
aam
jg
xor
lods
icebp
pushf
add
dec
negl
dec
loop
push
int3
test
add
mov
fwait
test
clc
jbe
xchg
xchg
les
mov
mov
inc
inc
cmp
jmp
daa
jmp
sar
sahf
andl
mov
sahf
and
pop
data16
fldenv
adc
stos
jmp
in
push
jne
and
push
outsl
sbb
leave
rcll
and
nop
out
jp
pop
in
dec
mov
xor
jae
aam
or
jl
dec
out
stc
sub
sbb
inc
popf
push
xchg
cmpsl
loope
sbb
jp
rorl
mov
dec
cmpsl
jns
cwtl
push
push
add
lock
adc
test
in
lea
add
or
sbb
insl
xor
in
iret
sbb
pop
sti
or
inc
and
dec
ret
scas
or
test
or
out
mov
mov
mov
call
xchg
int3
cmp
mov
sbb
mov
loopne
jne
jo
into
jl
lds
sbb
mov
and
sahf
push
movsl
pop
xchg
out
data16
in
icebp
jo
cmc
jno
and
jp
push
xlat
andl
sbb
adc
inc
je
cmpsl
mov
cmp
mov
in
or
xor
scas
sub
jge
add
fdivrs
in
jno
into
sbb
mull
mov
pop
xrstor
in
dec
mov
push
in
mov
repnz
inc
xchg
jge
pop
data16
mov
scas
mov
pop
pop
inc
jb
ljmp
dec
xchg
jnp
sub
gs
mov
sti
lds
mov
pusha
scas
cmp
inc
lods
mov
xor
pop
inc
jl
mov
and
int3
sub
mov
cmp
stos
sub
icebp
jmp
imul
mulb
out
mov
mov
push
mov
sbb
push
in
scas
sbb
or
inc
imul
imul
push
in
cmc
shl
dec
fnstenv
pop
sbb
adc
sahf
paddq
fstps
out
jl
or
mov
lahf
mov
dec
jns
rclb
out
orb
dec
pushaw
adc
push
sbb
sbb
xorl
aas
iret
mov
mov
ret
push
jmp
xchg
sub
push
jo
dec
popf
mov
push
int3
popa
les
shr
or
xchg
mov
pop
stos
inc
inc
xchg
xchg
inc
jl
out
lea
sbb
and
mov
fldln2
cmp
jmp
das
sub
incl
inc
mov
jns
dec
sbb
insl
add
outsl
imul
dec
in
lods
dec
in
mov
fnsave
adc
pusha
mov
incl
cmp
insl
sbb
adc
je
xchg
xchg
inc
xor
out
scas
and
mov
push
fsubp
push
push
rorb
dec
adc
xchg
mov
ss
dec
ret
sti
xor
fwait
add
push
nop
mov
push
pop
or
in
push
push
xchg
adc
pushf
add
mov
aad
sbb
or
inc
and
cwtl
and
icebp
cmc
cltd
movb
sub
push
ljmp
insb
idivb
or
push
out
jae
adc
sbb
fldt
push
aas
mov
push
dec
fdivl
mov
pop
movsl
out
pop
in
adc
cmp
loope
dec
out
bound
inc
push
xor
in
daa
mov
aam
out
sbb
test
sbb
lret
add
lea
mov
push
sti
dec
test
xor
lods
xchg
in
fisttpll
in
clc
or
mov
or
movups
scas
nop
popf
and
pop
mov
pop
scas
daa
ret
mov
stos
enter
xlat
jo
test
mov
mov
aas
push
pop
or
into
aad
pop
addb
jnp
cmp
sub
loope
inc
adc
lods
and
pop
daa
xchg
out
fwait
push
aad
push
cmpsb
mov
mov
pop
adc
inc
jb
into
adc
sbb
jae
mov
in
test
inc
je
add
mov
sub
shll
stc
sbb
dec
mov
mov
jg
jo
fcoms
jge
sub
and
cmc
scas
and
xor
sbb
idivb
dec
cmpsl
jp
shl
call
mov
fiadds
push
cmpsl
xchg
repz
rcll
push
mov
lea
leave
or
test
loopne
enter
addl
lods
push
inc
add
test
xor
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
jmp
jl
in
sub
adcb
jb
mov
adc
sub
push
push
or
pop
add
out
and
jl
xor
pop
cwtl
sbb
das
lock
xor
mov
outsl
mov
dec
clc
and
dec
pop
mov
loope
push
mov
data16
mov
or
out
das
xchg
mov
mov
pushf
or
sub
jne
into
push
fnstenv
fdivs
ss
insl
stc
xchg
gs
push
sar
sbb
imul
mov
or
shl
dec
push
cwtl
add
xor
and
leave
jmp
xchg
arpl
xchg
cmpsl
pop
or
dec
mov
lods
ror
cmp
jne
push
lret
mov
mov
jmp
lods
addr16
stos
pop
sbb
sub
fimull
add
loop
es
fisttps
mov
lods
test
lea
arpl
enter
and
mov
mov
add
sahf
sbb
test
insl
hlt
out
xchg
repnz
aas
ss
out
mov
cld
pop
sub
dec
adc
lret
imul
rcr
cmp
mov
or
test
mov
pop
and
xor
cmc
out
mov
ficompl
stos
mov
loope
es
inc
inc
jnp
inc
cmp
xlat
scas
imul
push
shrb
inc
xor
pop
xchg
imul
adc
rolb
in
mov
xorb
ljmp
popf
das
loopne
sub
adcb
xor
outsb
int
ficomps
ret
jns
and
and
inc
mov
andb
cld
insb
push
test
inc
and
mov
sbb
push
inc
xor
mov
mov
scas
mov
sbb
or
movzbl
inc
xor
int
rcrb
inc
sub
and
inc
xchg
cmp
add
jle
lret
push
dec
pop
out
shrl
daa
xchg
aaa
add
xchg
sbb
loope
mov
inc
fsubp
out
xchg
data16
popl
cmc
dec
pop
sbb
pushf
jle
mov
stos
push
sub
sbb
cwtl
aam
adc
je
fiaddl
push
fadd
jae
and
mov
push
rcrl
outsl
call
jno
sub
aad
and
addb
out
adc
add
in
out
les
inc
jo
loope
jmp
lods
jmp
ljmp
push
lahf
imul
rclb
lea
sub
mov
test
arpl
fldt
mov
scas
pop
test
or
mov
xchg
iret
jg
inc
mov
aad
out
adc
faddl
mov
xchg
dec
adc
movsb
inc
movsl
sbb
mov
ret
adc
add
cmp
push
cmp
imul
mov
and
call
add
or
shl
fisttpll
fwait
orb
push
jae
das
xor
dec
mov
sbb
mov
xchg
inc
jne
jmp
movsb
xchg
popa
bound
inc
mov
rclb
push
jno
inc
pop
or
jg
mov
mov
xchg
dec
int
loop
xchg
out
jle
rorb
jno
mov
out
sub
xchg
cli
mov
push
xor
enter
mov
out
and
push
cltd
push
cltd
ss
sti
mov
movsb
gs
sti
std
jle
incl
std
lods
mov
loopne
xor
shlb
aaa
out
shlb
adc
movsl
sbb
clc
pop
mov
aaa
ffreep
call
jb
mov
push
ljmp
aaa
daa
repz
pusha
push
mov
fs
in
cld
loope
adc
inc
sbbb
ficoml
push
dec
jnp
dec
and
out
in
shrb
adc
cmp
push
or
sbb
pop
outsl
inc
xor
inc
jno
xor
and
cmp
mov
jnp
pushf
mov
adcl
stos
addb
inc
push
cmp
fistps
mov
loop
sbb
push
jle
sbb
in
cmpsl
pop
mov
mov
aad
jo
aaa
sbb
or
cmp
imul
mov
fidivl
jg
mov
pop
jp
test
icebp
jg
ljmp
push
arpl
pop
lock
mov
xlat
imul
rcrb
fidivrl
xchg
pop
jmp
pushl
imul
fisttpl
das
mov
xchg
and
add
test
popf
loope
sbb
jle
pop
add
aas
cli
in
jns
mov
cwtl
imul
popa
jns
lock
or
cwtl
sbb
cmp
dec
and
xchg
push
cli
dec
mov
mov
test
mov
test
jae
je
cmp
filds
lods
xchg
sub
jno
in
xorl
fldl
dec
mov
lahf
mov
or
inc
adc
out
imul
stos
dec
in
out
cmp
int3
push
push
sub
sbb
cmp
scas
pop
lea
orl
mov
jno
aad
pop
inc
jns
mov
xor
clc
and
pop
pop
mov
sub
jno
add
ds
sbb
add
sti
movsb
sahf
pop
sub
push
repnz
dec
jl
aad
lods
xchg
fimull
jg
cs
negb
adc
mov
add
adc
add
adc
jp
push
sbb
pushl
stos
push
mov
imul
xor
gs
xchg
adc
mov
sahf
mov
fisubl
cmp
adc
aaa
adc
xchg
mov
sub
jns
add
addl
stos
cld
dec
cmp
movl
mov
sbb
insl
adc
xor
sahf
xchg
mov
pop
and
in
push
fdivrs
pop
adc
adc
pop
insl
push
enter
mov
sbb
scas
sbb
lea
mov
fstpl
addr16
add
add
mov
lret
loope
push
movsb
sbb
dec
pop
mov
mov
jae
sbb
cmpsl
jle
cmp
dec
stc
mov
sub
dec
pop
adc
cmp
mov
pop
push
lret
mov
arpl
push
mov
jmp
sbb
inc
jmp
notb
lahf
fdivrp
jg
in
push
xor
sbb
dec
lahf
and
xchg
pusha
mov
sahf
inc
js
fsubrs
push
sbb
sub
sbb
push
fwait
pusha
addb
ret
in
pop
ds
js
int
enter
mov
jge
icebp
pushf
daa
enter
mov
xchg
lds
insb
test
xchg
pop
shrl
lret
hlt
jl
test
ret
or
pusha
pop
cmp
inc
loopne
iret
stos
shl
fstl
push
sbb
call
bound
inc
popf
or
cmc
test
aaa
jl
xchg
jle
lods
call
daa
pop
imul
shrb
outsl
daa
data16
leave
incb
sub
loope
push
gs
jmp
sbb
mov
es
push
xor
cmc
fnstcw
lock
xchg
jne
mov
xchg
jno
pop
dec
or
push
mov
or
lret
mov
popf
shll
stos
je
fs
cmp
xchg
ja
test
mov
std
xchg
jbe
mov
sub
mov
aas
jb
lods
dec
daa
shll
xchg
xor
xchg
push
jl
mov
pop
sbb
lret
add
xchg
pop
es
adc
int3
aas
fstl
mov
outsl
dec
pop
jmp
add
pop
push
mov
pop
cmp
jns
xor
movsl
lahf
les
jns
int3
xor
test
inc
pop
cmp
sbb
sbbb
pop
sub
scas
test
mov
stc
imul
hlt
push
pop
sbb
fsubrs
cmp
es
dec
jmp
icebp
push
sti
dec
data16
cli
aam
cmpsb
lcall
xchg
dec
adc
leave
sbb
or
pop
imul
pop
test
lods
int3
xor
push
dec
pop
dec
aad
lds
push
add
mov
cmp
imul
push
sarb
sahf
dec
loopne
ret
shl
stos
mov
mov
dec
mov
cwtl
mov
cmp
xchg
jp
push
mov
lea
lahf
insl
jg
xor
jo
idivb
out
pop
xchg
jbe
dec
stos
jp
pop
icebp
adc
das
cmp
mov
scas
mov
negl
xlat
lcall
push
add
add
popa
fs
xchg
testb
test
adc
daa
cmp
sub
xor
cmpsb
cmp
int3
and
dec
je
mov
jnp
push
insl
inc
test
imul
inc
push
mov
loopne
xor
iret
mov
addr16
sub
jae
js
cmp
mov
arpl
adc
fidivl
ljmp
pushf
mov
sub
cli
mov
std
movl
sbb
aam
push
pop
cmp
xchg
gs
addl
cmc
leave
hlt
pop
pop
out
inc
movsb
lcall
add
cmp
bound
popf
and
jg
lcall
lea
fisubl
fistps
dec
out
and
cmp
pop
sbb
gs
subb
add
sub
out
jo
inc
data16
daa
pop
sbb
ds
xor
enter
mov
and
bound
or
loope
mull
sti
or
gs
and
fdivrl
sbb
push
or
outsl
xchg
inc
mov
cmp
and
insl
sub
inc
pop
inc
and
pop
pushf
jecxz
lret
or
loopne
sub
pop
add
ds
pusha
push
add
fcmovnb
pop
mov
pop
fs
add
hlt
imul
int
daa
addr16
sub
out
pop
lock
aaa
pop
fnstsw
inc
xchg
xor
in
lods
mov
ret
scas
add
mov
adc
stos
divl
out
cmp
icebp
js
fcoml
sbb
test
mov
pop
pop
cld
mov
sub
add
dec
inc
aad
add
orb
fdivs
adc
mov
or
iret
stos
repz
mull
pop
lods
and
ret
repnz
faddl
arpl
pop
jne
jmp
lret
push
xlat
imul
into
je
sub
icebp
adc
fstpt
inc
push
shrl
bnd
and
sbb
in
sbb
movzbl
shlb
fwait
xlat
mov
ds
sub
adc
mov
pop
or
push
pop
ret
dec
cmp
jns
into
fisttpll
hlt
test
sub
add
pushf
xor
mov
inc
sub
cwtl
or
stc
repnz
cmpsl
sub
aad
push
lock
aas
ss
jle
mov
xor
push
iret
mov
arpl
lret
aam
sbb
ss
lds
addps
loop
jg
jecxz
shrl
add
cmpsb
push
cmpsb
imul
loope
fcmovnbe
pop
ret
cvtdq2ps
dec
test
adc
stos
dec
sub
add
xchg
test
imul
fwait
out
push
xchg
cwtl
jl
mov
push
inc
mov
jg
in
daa
xchg
push
mov
sub
sub
loopne
sub
and
mov
xor
ret
push
sbb
out
imul
xorl
outsb
mov
cmp
pushf
xor
pop
pop
mov
pcmpgtd
sahf
mov
ja
lea
adc
sub
cs
xchg
notb
inc
lahf
aad
sbb
shl
loopne
pop
cmp
sub
xchg
mov
pop
sub
sar
sbb
jb
mov
scas
mov
inc
push
sub
add
xchg
enter
cmp
mov
pushf
push
xchg
and
cmp
shll
inc
andl
lods
sar
pop
sarb
mov
lods
frstor
jno
and
sub
insb
ds
movsb
test
outsl
movsb
sub
mov
sar
dec
xor
sub
lret
jle
add
test
xchg
add
popf
fbstp
int
sub
rcll
jl
dec
mov
dec
std
stos
je
sub
xchg
insl
leave
mov
pop
jl
sysenter
fiadds
fiaddl
push
rorl
sbb
rolb
or
mov
jb
pop
xchg
dec
pop
jl
sub
adc
mov
fstps
sbb
call
insl
mov
ljmp
cmp
rol
push
xor
testb
mov
sbb
ss
pop
mov
sub
and
lods
arpl
or
std
push
daa
add
or
cli
mov
adc
push
nop
and
adc
push
adc
cmp
sarl
and
test
xor
in
imul
pop
notb
shufps
scas
leave
outsb
in
and
and
cmpsb
sarb
hlt
adcl
push
testb
insb
inc
flds
mov
test
shrl
cltd
and
xor
in
mov
lahf
test
push
and
pop
ret
add
rcrl
push
js
ror
rorl
jo
add
jns
aam
mov
loop
dec
cltd
mov
ret
rolb
push
xor
test
sub
dec
inc
xor
testb
cmp
jge
out
lretw
xchg
popf
bound
xor
shlb
push
in
imulb
jbe
push
enter
or
gs
mov
arpl
mov
jg
push
push
jae
ljmp
outsb
int
in
clc
push
outsl
fs
mov
inc
mov
jmp
test
rcll
jecxz
push
aas
js
out
xchg
scas
dec
xor
adc
ret
or
fisttps
adc
pop
sub
iret
mov
insb
mov
push
dec
add
subl
mov
cli
lods
pop
rcl
jle
xor
jmp
jmp
std
mov
add
repz
pop
mov
leave
mov
and
xchg
xor
ja
das
rolb
fsubrs
mov
movsl
sahf
mov
xchg
mov
stos
mov
jp
or
xor
or
into
inc
mov
xor
jge
test
hlt
mov
mov
imul
adc
mov
mov
mov
imull
cld
mov
fsqrt
fldenv
sub
cmp
jne
dec
hlt
mov
xor
stc
lock
out
test
mov
sub
pop
mov
adc
add
pop
cmp
or
out
xchg
popf
pop
xor
add
mov
jmp
pop
jp
xor
fildll
jae
inc
fs
add
and
call
push
add
adc
in
jmp
mov
addr16
pop
fistpll
add
and
imul
pop
mov
mov
lds
std
mov
xchg
shl
mov
mov
fimuls
pop
xchg
fisttpll
jle
sbb
xchg
fstl
pusha
jae
fists
xchg
iret
loope
or
lret
xchg
jp
ret
or
into
loope
push
jmp
sbbl
hlt
out
pop
dec
mov
push
inc
cld
or
pusha
orl
adc
scas
and
cltd
lea
daa
bound
les
sub
xorl
leave
inc
js
push
or
inc
inc
cmc
mov
sub
movsb
mov
xor
stos
pop
nop
xor
sbb
ret
adcb
scas
pop
stc
clc
pop
sub
xorb
andb
int3
or
pop
cli
mov
dec
xchg
mov
ljmp
jae
mov
xchg
daa
add
pop
lods
jl
pop
dec
cwtl
out
jp
mov
sbb
xchg
ficomps
mov
mov
cmpsb
adc
lods
scas
sbb
xor
popa
or
aad
imul
sub
mov
loop
mov
xchg
loop
fwait
out
pop
ficoms
rolb
hlt
scas
loop
xchg
sbb
test
xchg
xchg
xor
shlb
or
int3
mov
cli
xchg
sbb
in
dec
add
cld
pop
or
mov
mov
loop
inc
pop
cmpsb
lret
inc
loopne
jbe
cs
jle
jmp
hlt
dec
pop
rcl
negb
inc
adc
clc
pop
loop
pop
mov
sub
pop
je
jns
adc
in
pushf
call
sub
daa
fstpl
mov
push
ds
fsts
movsb
sbb
ficompl
gs
out
imul
call
jne
cmp
mov
mov
clc
js
in
push
sbb
xchg
mov
mov
xchg
add
or
xor
movsl
sbb
or
negl
mov
mov
std
jb
jecxz
mov
mov
pop
dec
xor
inc
das
push
fisubl
xor
dec
lret
xlat
cmc
aad
and
add
imul
sbb
inc
imull
push
jns
mov
cwtl
jne
xchg
sub
out
jl
mov
dec
mov
in
pop
sbb
cmp
mov
imul
push
mov
out
fcmove
mov
ret
jmp
add
iret
leave
in
pop
push
les
mov
mov
fwait
pop
cs
jnp
loope
loope
xchg
pushf
movb
jmp
or
mov
mov
lret
popa
jmp
jl
setae
pop
idivl
xchg
cmp
and
pop
cmp
sub
mov
jg
mov
mov
cld
push
pushf
hlt
out
cmp
mov
sub
mov
jno
pop
aaa
inc
ljmp
pop
mov
cli
cmp
cmp
inc
lea
cmc
int
adc
fstpl
iret
adc
jo
jecxz
sub
lahf
mov
pop
mov
imulb
mov
xor
push
cmpsl
rcrb
cmp
mov
pop
xlat
pop
imul
mov
iret
addr16
dec
shll
xor
fmulp
les
arpl
cmp
add
sub
in
data16
lds
sbb
mov
orb
fs
aad
mov
push
out
adc
mov
addr16
push
aam
into
lods
xchg
arpl
inc
inc
hlt
repz
cwtl
movsl
repz
sub
push
push
rcll
add
sub
dec
out
mov
xchg
push
push
adc
neg
inc
mov
xchg
pop
scas
or
loop
test
aam
jmp
dec
leave
adc
mull
ja
xor
clc
adc
jecxz
xchg
lahf
sub
mov
divb
adc
sbb
mov
addr16
pop
ret
ja
mov
lcall
or
mov
and
mov
cmp
push
icebp
loopne
lods
fcomps
outsb
fstpt
push
negb
pop
xchg
push
shr
sub
jae
enter
mov
cmc
mov
stos
inc
in
jmp
lds
pop
mov
cmp
popf
push
dec
mov
mov
lret
pop
push
lahf
imul
xchg
std
ficoms
cs
nop
xchg
mov
je
mov
repnz
movsb
in
outsl
mov
or
rclb
mov
add
jbe
imul
je
lods
pushf
pop
jp
hlt
mov
clc
mov
es
sub
ds
mov
push
std
mov
mov
std
inc
data16
movsb
stos
push
xchg
or
and
in
inc
gs
dec
pusha
adc
jae
das
movsl
pop
imul
imul
outsb
repz
scas
mov
pop
xchg
dec
nop
loopne
out
push
pop
mov
sbb
sahf
xchg
ret
xchg
cld
out
lret
aad
cwtl
pushf
add
fdivs
sub
pop
sbb
sub
ud0
mov
test
outsl
mov
mov
in
mov
pop
xchg
xor
out
adc
sbbb
loopne
lret
cmp
hlt
dec
push
jp
push
add
inc
mov
xor
cmp
push
hlt
and
popa
scas
sarb
fsub
mov
dec
ljmp
sbb
or
rcrb
addr16
cmp
inc
cli
fisubs
test
cs
out
push
popf
subl
pop
scas
das
loopne
out
sub
sbb
lcall
mov
out
fldl
mov
push
into
mov
xchg
dec
out
rorb
push
imull
sub
je
and
notb
fsts
cmpsb
xor
dec
lods
stc
int
jp
popf
popa
idiv
jnp
jecxz
xchg
pushf
loope
sti
sub
lea
adc
sbb
push
ficomps
push
repnz
stos
jae
dec
cmpl
push
in
pop
lods
gs
fs
or
outsb
sub
pop
fstl
repz
scas
cmp
dec
sar
outsb
cmpsl
enter
fidivl
inc
sub
and
jl
sbb
imul
out
icebp
adc
push
sub
fmulp
jno
adc
jecxz
test
pushf
popf
stos
xorb
rcrb
mov
fwait
pop
jno
cmc
rorl
mov
sub
add
fdivrp
jle
stc
xor
imul
loopne
das
popf
push
jae
push
jge
fldt
pop
add
out
or
loopne
push
cmp
clc
fsub
sahf
lods
fnstcw
js
jmp
repz
or
shll
and
popa
pop
and
mov
mov
es
or
std
xchg
fisubrl
cld
mov
sub
popa
movb
or
das
push
lret
dec
cmp
mov
pop
jge
xor
adc
sub
adc
mov
xor
stc
das
dec
jbe
inc
ficomps
xchg
adc
repnz
xchg
in
fdivs
insl
push
in
sbb
inc
xor
pop
aad
addr16
cltd
adc
xor
jno
mov
sbb
cltd
or
inc
lds
sub
cmp
and
jge
sub
add
xchg
iret
push
cmp
push
lds
pop
int
lret
sbbl
sub
in
sti
movsl
adc
rcrb
into
push
adc
push
lcall
add
clc
dec
jnp
mov
sbb
cmp
or
sub
lret
imul
fwait
dec
dec
xor
lock
add
not
pusha
mov
les
push
into
cmp
pop
into
or
pusha
lcall
mov
sbb
dec
mov
out
pushl
into
ljmp
ret
sub
test
sar
call
xor
pushf
cld
dec
mov
adc
xor
imull
fwait
scas
lods
add
cld
lea
popa
xchg
xorl
cmp
jecxz
out
aaa
inc
sub
ficoms
ficoms
cs
fidivrs
jns
insl
scas
shlb
ja
outsl
imul
lods
subl
and
cmpb
sbb
in
jecxz
adc
mov
jns
popa
ds
clc
xchg
pop
mov
jns
adc
cmp
mov
mov
idivl
scas
popa
aas
dec
xchg
jge
pop
sbb
in
lahf
out
mov
mov
pop
mov
std
dec
js
adc
fidivrl
push
cmp
cmc
cmc
cmc
pop
sbb
xor
cmp
xchg
in
jns
mov
jnp
int
adc
les
jb
sbb
push
push
xor
push
aad
ss
xor
lret
jmp
lahf
stos
dec
push
sbb
jmp
mov
inc
mov
jle
clc
xchg
int3
jns
jg
push
divl
sahf
lods
pop
and
adc
lea
jne,pt
gs
push
mul
aas
or
pop
adc
adc
mov
adc
mov
fs
mov
mov
and
lds
mov
call
movsb
cmc
ret
jne
popf
dec
insb
pop
push
lcall
jp
push
cmp
repz
icebp
stc
sub
cmp
pop
jnp
or
out
iret
inc
lds
mov
popf
or
jp
mov
dec
sub
pop
out
mov
mov
mov
mov
jmp
aaa
pusha
fstpl
add
xchg
mov
pop
hlt
outsl
insb
cs
ret
inc
xor
push
sbb
push
out
pop
out
fldcw
addb
lock
mov
dec
ja
test
mov
pop
xor
dec
imul
and
icebp
pushf
or
dec
sbb
call
jo
fidivl
je
push
mov
daa
in
mov
into
jmp
and
push
loopne
mov
adc
sbb
jo
insl
into
cli
pushf
sti
stc
inc
sbb
call
out
ret
lods
mov
dec
sub
mov
mov
or
aad
int
jb
inc
not
push
addl
xor
das
pop
rcl
pop
xor
ja
popf
pushl
xlat
out
lret
dec
int
lock
pop
add
outsl
lock
jae
fstps
push
push
mov
push
jg
jne
nop
jecxz
out
cmpsb
jle
or
prefetch
xor
cmp
inc
shrb
or
add
in
pushw
insb
rorl
push
jp
imul
out
pop
xor
mov
pop
popa
pop
shl
sub
pushf
xor
xchg
mov
or
xchg
or
cmpsb
inc
dec
ret
ja
ja
pushf
lock
inc
out
bound
repnz
sbb
push
lcall
movsb
sbb
mov
lds
data16
mov
fwait
sub
in
cmpl
and
push
inc
adc
mov
shlb
cmc
test
in
ljmp
fldt
mov
scas
and
out
lds
popa
jne
aas
stc
push
xchg
add
movsl
jecxz
add
addr16
stc
dec
or
cs
mov
hlt
jecxz
xor
xlat
xchg
test
pop
push
dec
imull
movsb
outsb
fisubrs
les
xchg
and
jp
adc
imul
sahf
add
jns
dec
rclb
push
pop
add
jge
mov
orb
sub
in
ret
sub
xor
subl
rclb
std
arpl
xor
ret
sbb
or
and
pop
int3
add
lret
mov
mov
lahf
inc
mov
xor
ret
lret
outsb
inc
ss
push
inc
int
fcomp
lcall
lahf
inc
add
sbb
and
lods
mov
mov
cmpsb
cltd
into
inc
orb
inc
add
dec
jp
xor
imul
hlt
mov
cmp
jno
pop
loop
mov
scas
sub
xor
ljmp
xor
cmc
cmp
jecxz
sahf
popf
les
ret
out
adc
add
iret
arpl
scas
mov
jne
gs
call
adc
in
sbb
addr16
inc
in
scas
or
pop
out
test
mov
pop
cmp
outsl
lods
shrb
lods
dec
jae
jae
cli
jle
scas
movsl
hlt
push
gs
fstpl
imul
sbb
jp
adcb
stos
cmp
mov
mov
mov
lods
mov
mov
sub
pop
mov
gs
cmc
test
in
in
hlt
call
xor
mov
roll
les
push
xlat
and
out
test
pusha
pop
fadd
mov
push
jmp
mov
aas
mov
or
xchg
loopne
sub
push
jl
jnp
jne
pop
adcl
in
jno
icebp
leave
mov
xchg
inc
cmp
aam
out
add
adc
dec
nop
push
aam
push
outsl
xor
imul
iret
out
subl
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
jmp
dec
inc
aad
push
pop
movsl
sbb
les
mov
xlat
push
push
ficoml
hlt
out
cwtl
loop
icebp
outsl
outsb
jmp
lock
repz
cmp
add
out
sub
pop
lcall
sub
sbb
les
js
inc
sahf
addr16
jmp
sub
jle
push
dec
xor
mov
adc
imul
dec
cmp
adc
stos
sbb
mov
dec
adc
pop
mov
sub
mov
adc
push
push
jnp
push
lods
sub
divl
into
push
je
stos
repnz
bound
ss
mov
mov
pop
adc
dec
pushf
fcoms
cmp
iret
jbe
cltd
inc
imul
xor
out
and
xchg
mov
dec
push
je
aas
out
pusha
sub
loopne
stc
cmpl
dec
rclb
sub
jo
or
sub
jae
xchg
pop
add
inc
mov
sub
shr
xor
imull
fmuls
xor
jnp
pushf
out
in
scas
mov
push
in
gs
dec
add
push
jl
and
sub
or
mov
mov
push
inc
mov
fwait
dec
pop
push
popa
mov
fs
or
cmc
xor
sti
jae
mov
cs
jl
xchg
outsl
xor
pushf
int
pop
fisubrs
fldcw
push
jmp
add
xchg
inc
pop
push
pop
nop
xlat
ret
out
add
outsl
in
fstpt
push
cmpsb
sub
int
pop
ret
inc
inc
gs
xor
insb
das
jmp
cmp
dec
dec
inc
jo
jb
mov
rorl
jnp
xor
test
mov
sub
aad
jo
test
enter
sbb
push
dec
sub
add
out
adc
inc
bound
pop
add
adc
push
in
int3
stos
sub
cmpsl
pop
testb
popa
sarb
popa
xchg
int
jne
clc
cmp
js
cmp
jae
jecxz
pop
mov
lret
jg
mov
shrb
dec
xchg
repz
pushf
xchg
fdivs
inc
hlt
sahf
out
pop
cmp
jecxz
je
push
int3
cmp
xchg
push
mov
gs
cmc
mov
pop
mov
inc
mov
mov
dec
out
aad
aam
das
inc
lret
pop
fsubrl
lea
push
jl
and
fdivs
scas
cmp
sub
in
outsl
test
lret
dec
lcall
lock
push
jmp
sahf
rcr
jge
cwtl
mov
movsb
lcall
mov
push
scas
out
xchg
pop
fnstenv
xchg
shll
xchg
jmp
push
fstpl
inc
lahf
les
jbe
mov
jns
push
aaa
xchg
aad
das
adcl
mov
loope
test
pop
add
fcmovbe
aam
inc
fildll
sbb
repz
push
out
push
jmp
cs
cwtl
dec
fildl
push
sub
cmpsl
cld
inc
sub
push
cmpsb
push
dec
out
jo
mov
in
pop
pop
pop
scas
pop
fidivl
fidivrl
loopne
loope
loop
jecxz
mov
sub
xchg
cmp
jp
fsubr
or
jns
xchg
mov
sbb
ret
in
in
mov
sub
fcomi
lds
add
push
jo
jae
sbb
cmpsb
les
jnp
fwait
cs
lods
nop
movsl
pop
xlat
inc
sub
ret
push
rcr
mov
xor
sub
push
xor
bound
incl
call
mov
xchg
shrb
xorb
xor
adc
fidivs
xchg
dec
mov
pop
sub
push
mov
dec
rolw
xor
xchg
test
fwait
inc
out
mov
stos
ficompl
cmp
inc
test
jnp
mov
jp
mov
jns
xor
aam
cs
sahf
jmp
xlat
mov
jecxz
mov
inc
cmp
aas
pop
pop
push
test
pushf
cmp
xchg
ja
xor
xchg
add
arpl
imul
enter
stc
xchg
push
daa
lock
div
fiaddl
add
push
js
or
cld
fucomip
jge
sarl
pop
pop
cmp
pop
jmp
fmul
add
inc
into
fwait
outsl
sbb
xor
imul
add
clc
xchg
cmp
lock
lods
jmp
std
pop
or
xchg
sbb
pop
pusha
mov
xchg
adcb
sub
in
or
cld
cli
fldt
add
cmp
xor
mov
mov
in
xchg
jb
push
pop
lcall
scas
repz
jo
lods
add
test
jae
hlt
test
scas
push
roll
dec
lret
orb
jecxz
mull
and
xchg
cmpsl
movsl
dec
je
push
outsb
adc
and
or
push
inc
push
and
lret
xor
loopne
mov
fildll
negb
inc
stc
mov
sbb
mov
leave
fprem1
data16
xor
xor
cwtl
lahf
out
leave
subb
inc
lds
mov
nop
sti
pushf
add
push
push
movsl
cwtl
and
shlb
lock
add
mov
xor
orb
movsb
stos
dec
mov
pusha
fldenv
mov
jne
xchg
and
jmp
push
adc
jno
pop
mov
das
sub
arpl
loopne
sbb
lods
or
dec
pushf
inc
shl
stc
rolb
repz
mov
insl
mov
sarb
xchg
sbb
lcall
jnp
pusha
or
dec
mov
loope
xchg
lcall
int3
pop
inc
jo
jbe
loopne
cmp
popf
inc
out
scas
rcll
insl
stc
test
and
push
cmc
cltd
jl
cmc
test
in
dec
scas
shrl
xchg
push
aam
and
dec
repz
push
mov
sub
in
mov
sbb
pop
je
pushf
sub
xor
jmp
stos
mov
in
jo
data16
sub
or
fistl
out
std
push
in
xor
and
mov
pusha
jg
pop
sub
sbb
test
xchg
xchg
jmp
lret
filds
enter
mov
flds
cmp
pop
imul
fnstcw
leave
popf
inc
sbb
ret
or
out
sbb
enter
loop
lret
jle
sbb
mov
pop
pop
lea
cmp
xlat
ret
mov
sub
jle
inc
jl
cmpsl
xlat
jle
cmpl
jmp
inc
mov
aad
lds
xchg
mov
or
xor
test
test
int
outsl
inc
jae
fs
cld
fildl
sub
lea
mov
aad
or
mov
sbb
xor
cltd
aaa
cld
mov
es
jge
scas
cmpsl
mov
rorb
nop
popf
and
into
mov
and
adc
fsubr
lock
pop
ds
and
stos
hlt
pop
inc
mov
mov
lods
inc
push
dec
lods
cld
adc
insb
addl
sti
sub
out
stc
cltd
mov
data16
pop
out
mov
je
adc
mov
cmp
into
inc
fcmove
jno
sub
jmp
jge
les
aaa
inc
fadds
lcall
mov
sbb
loopne
fisubs
xor
sub
jl
cs
mov
cmp
loop
aaa
repz
sub
ret
and
cmp
sub
jmp
mov
sahf
imul
jns
fdivl
out
addr16
xorb
cs
cmp
in
popa
inc
pushf
jg
jecxz
mov
adc
repnz
in
pop
add
add
sbb
stos
xor
test
push
xor
ja
sub
or
test
push
inc
dec
sbb
dec
pop
mulb
push
inc
je
mov
or
filds
pop
or
or
mov
add
in
mov
jmp
cmp
jle
jne
xchg
cwtl
and
lahf
in
sbb
xchg
pop
or
lret
xchg
mov
pop
or
xor
cmp
xchg
sub
xchg
or
rclb
mov
pusha
sbb
std
lret
xor
aam
or
adc
mov
movsb
sub
pop
ds
cli
add
fbld
push
pop
nop
mov
jp
ljmp
in
sbb
inc
mov
movsb
sbb
fnstsw
cmp
and
xor
xchg
out
dec
mov
es
addb
cmc
movsb
pushf
sbb
push
rcrl
rorl
je
cmp
xchg
mov
xadd
inc
add
int3
int3
mov
inc
jl
ficoml
int
adc
lds
movsl
jmp
xchg
outsb
dec
scas
xchg
sub
js
pop
xor
je
sbb
movsl
into
and
imul
cs
inc
jl
popf
loop
lahf
mov
loop
mov
sbb
movsb
or
cld
and
cmp
jle
dec
xor
idiv
mov
adc
and
push
mov
sbb
xchg
pop
sub
mov
shl
cmpsb
xor
in
mov
bound
pop
nop
rorl
pop
mov
sub
aad
lods
rcrb
les
divl
mov
cli
mov
mov
xor
es
testb
adc
dec
test
outsl
daa
add
daa
adc
adc
leave
sbb
pop
das
sti
mov
movl
fadd
cmp
subl
scas
hlt
test
iret
aaa
mov
cmp
inc
dec
gs
mov
jmp
sbbb
lret
adc
xor
mov
push
xchg
fistl
push
xor
out
push
into
fsubp
aad
jl
cmp
mov
shrb
jne
ljmp
ss
ffree
add
mov
jb
jle
rcll
mov
test
add
cmp
pop
push
dec
test
sahf
jae
pop
call
xchg
inc
fisttps
popf
dec
pop
insb
inc
push
loopne
dec
cld
bound
cmp
or
push
out
jb
ret
push
in
out
fsubrl
mov
mov
xchg
and
popa
sub
scas
or
add
dec
testb
nop
sbb
xor
sbb
xchg
mov
sbb
sbb
xor
inc
dec
mov
push
dec
cmp
push
es
mov
inc
or
push
and
subl
insb
and
add
xchg
cmovo
int
cmpb
mov
cld
std
scas
xchg
adc
adc
mov
ja
push
and
pop
push
dec
addb
rcrb
mov
cmp
movsl
mov
cmpsb
pusha
jmp
jno
bound
cmp
scas
push
adc
popf
jge
xchg
test
sti
xchg
addr16
jl
cli
fists
inc
je
imul
shrl
fsubs
push
or
push
daa
adc
xchg
push
xor
push
lock
lret
inc
add
sbb
inc
les
gs
cmc
inc
scas
pop
in
int
imul
aam
imul
js
inc
fisttps
or
bound
leave
xchg
btc
inc
or
out
mov
lcall
add
cmc
xor
push
xlat
xor
nop
mov
lock
cwtl
xchg
testw
cld
push
and
mov
add
mov
in
ss
adc
aas
dec
push
aam
or
mov
lods
out
shrl
fcomps
dec
xlat
xchg
loope
shll
lahf
mov
mov
aad
pushf
inc
test
inc
adc
roll
jp
jb,pt
xchg
outsl
and
loopne
dec
dec
xchg
test
cltd
and
in
xchg
cmp
imul
test
cltd
sub
and
sbb
clc
into
lahf
sub
addl
dec
mov
orl
cmp
fsub
xlat
xchg
lea
pop
pop
dec
dec
mov
inc
push
sub
ret
pop
xchg
jnp
mov
fdiv
lods
xchg
orb
iret
out
pop
pop
rcr
cmp
out
jno
pop
inc
push
dec
sub
mov
jae
ds
pop
jmp
xchg
je
lret
add
cmp
cmp
scas
pusha
xchg
imul
sbb
cmp
dec
aad
movsl
aam
pop
int
out
stc
stos
or
dec
dec
or
hlt
icebp
cli
jmp
icebp
sub
int3
sub
popf
dec
int
outsl
xorl
inc
dec
push
into
sbb
lea
pushf
dec
or
outsl
mov
popa
pop
fldl
and
mov
dec
sbb
aas
sbb
fidivs
xchg
pusha
and
out
cmp
call
int3
add
xacquire
fwait
popf
pop
jecxz
data16
loope
mov
scas
stos
mov
addl
bound
mov
pop
pop
les
mov
outsl
adc
mov
ja
imul
mov
aad
shrb
jmp
adc
std
inc
ficompl
rclb
sbb
loop
or
pop
push
dec
adc
inc
jle
mov
aas
fbstp
data16
jns
mov
mov
inc
pop
shlb
std
daa
ficompl
add
shrb
jbe
cli
jns
inc
add
dec
stc
sub
mov
xchg
xor
push
fstpt
jmp
cmp
testb
fsubl
xor
push
mov
cmp
sbb
inc
xor
std
loop
clc
and
jno
int3
es
sub
clc
iret
out
sub
sbb
push
sub
lcall
mov
push
jae
mov
fstpt
or
cwtl
data16
es
push
pop
ljmp
sbb
push
stos
out
cwtl
mov
inc
jb
insb
push
ss
dec
shll
loop
ds
and
cmp
repz
push
pop
dec
out
les
int
jne
stos
inc
fwait
jnp
add
xchg
lods
add
aas
mov
jmp
pop
mov
test
mov
xlat
lret
and
rclb
movsb
push
call
push
inc
sub
pop
inc
and
mov
iret
sbb
arpl
mov
mov
jb
outsl
adc
add
pop
jno
jle
sbb
std
mov
fdivrl
lods
hlt
test
pop
mov
xchg
loope
jne
int3
std
ds
daa
sub
push
and
add
loope
mov
mov
insl
test
mov
push
dec
subl
inc
lods
jg
mov
push
aad
movsb
mov
cli
loope
shrl
mov
into
jmp
pop
movsl
es
aam
add
mov
pop
cmp
sti
loop
push
jg
inc
test
pop
add
push
or
push
rcrb
daa
push
fiaddl
mov
outsl
add
add
lret
xor
rorb
ja
les
mov
cmp
jl,pn
inc
sub
xchg
adc
inc
push
sub
bound
das
sbb
lahf
enter
add
roll
sets
inc
push
fs
xchg
clc
jmp
cmp
jmp
xchg
inc
aaa
push
pop
mov
add
pop
aad
mov
or
fwait
popa
push
sbb
add
push
sub
leave
pop
mov
cmp
sub
xlat
addr16
xor
mov
and
sbb
sbb
test
mov
loope
into
and
adc
sub
ss
cmp
repz
nop
pushf
add
in
push
dec
movsb
or
addr16
arpl
xorb
sbb
jns
movsl
push
sub
arpl
jecxz
jns
loop
mov
pop
mov
xor
bound
mov
and
lods
sti
add
lds
pop
mov
jnp
xchg
addr16
hlt
dec
mov
fldl
cmp
cmpsl
shl
push
mov
adc
inc
mov
inc
mov
mov
adc
cmpsb
jp
faddp
jmp
jg
icebp
xor
add
add
xor
iret
xor
adc
mov
or
paddb
push
pop
jge
pop
shrb
mov
cltd
orl
lods
inc
inc
jmp
push
int3
adc
mov
mov
loopne
sbb
in
pop
stos
clc
fdivs
aas
push
test
pusha
cmpsb
pop
sar
in
mulb
inc
insl
insl
pusha
hlt
sbb
popf
aam
lahf
mov
mov
mov
lock
repnz
lahf
mov
cltd
mov
mov
xor
dec
or
sbbl
fnsave
ds
push
add
fsub
int3
inc
jne
lods
repz
idivl
mov
call
jne
bound
cmc
daa
scas
push
sarb
fisubrs
mov
sub
mov
test
sbb
jl
jno
pop
mov
icebp
xor
mov
sarl
push
movsl
lods
sbb
movups
sub
shll
cli
cmpsb
shl
and
jne
pop
lods
sbb
push
mov
scas
in
ljmp
mov
clc
lods
jns
out
movsl
lret
adc
test
xchg
inc
mov
filds
stos
or
lahf
test
xor
jo
xor
shll
stos
loop
js
jne
adc
mov
cmp
cmc
mull
mov
mov
out
xchg
out
jno
mov
das
into
mov
xchg
daa
mov
jecxz
and
pop
mov
sbb
adcb
pop
push
mov
mov
sbb
mov
mov
cmp
shr
test
jl
add
loopne
mov
adc
xchg
sahf
pop
adc
push
jl
std
fs
and
mov
pushf
mov
push
clc
jmp
cli
mov
pop
fdivl
insl
in
sti
aaa
pop
testl
pop
adc
push
mov
mov
mov
je
cmpsb
in
jnp
call
adc
sbb
fists
ss
out
dec
repnz
bound
inc
push
push
aaa
fld
int
mov
pop
insb
lret
mov
or
in
mov
test
scas
dec
sarl
pop
repnz
sub
xor
jb
repz
push
mov
aaa
repnz
pushf
xlat
push
xchg
push
pop
cmp
cltd
cmc
jp
divb
outsl
imulb
mov
dec
cmp
enter
and
in
popf
dec
jne
inc
out
dec
inc
lahf
into
fistl
testl
fadds
pop
pop
sub
psrad
inc
imul
bound
adc
and
jb
inc
out
mov
mov
popa
cmp
or
or
repnz
pop
or
sti
push
cmc
dec
or
adc
and
pusha
pop
and
shr
pop
and
dec
cmp
jp
out
mov
into
mov
adc
xor
movsb
jno
cmp
lods
insb
mov
ret
adc
js
inc
inc
cmp
ret
jg
xchg
push
fucom
cmp
jbe
xchg
xchg
pop
rcrb
mov
push
lods
fwait
icebp
push
fdivrs
into
cmp
stos
or
arpl
mov
add
pop
imul
jno
in
or
adcl
jg
lret
pop
cmpsb
sar
xchg
cmp
insl
fs
roll
aaa
cs
ja
ds
dec
test
cwtl
add
mov
inc
sub
int
into
test
mov
mov
or
loop
dec
jge
imul
cwtl
xor
ret
kmovb
add
sub
fisubs
sub
add
insb
mov
lret
ds
jecxz
out
mov
sub
inc
add
sbb
cmp
add
iret
mov
mov
and
or
packsswb
push
mov
sbb
xchg
out
loop
push
outsl
and
cli
popf
cmp
xlat
daa
dec
and
lods
fiadds
outsl
sub
pop
add
cli
push
inc
add
sub
or
or
push
mov
add
repz
sbb
sbbl
jg
nop
test
xchg
adc
jae
incl
mov
pop
inc
lcall
ret
mov
pop
xlat
jae
and
push
and
aad
in
or
cwtl
push
or
call
insl
mov
mov
and
imull
mov
aas
rcrb
cmp
adc
inc
xchg
push
jo
push
ds
xchg
js
cmc
sbbl
cmpsb
mov
sub
mov
lods
sarb
xchg
test
aaa
push
dec
jge
xor
sbb
add
mulb
pop
jnp
outsl
and
popf
mov
sbb
gs
jo
jbe
repnz
mov
jo
sub
test
push
or
lods
aam
xchg
xor
pop
es
push
cmp
push
cmpl
out
jae
out
ljmp
push
xchg
mov
pop
cmp
pop
mov
stos
cli
xchg
pop
aad
or
int3
jle
cmpl
insb
cmp
mov
inc
loopne
xor
inc
hlt
jecxz
int
jecxz
movsl
adc
mov
andb
and
aam
inc
fdivs
pop
mov
cmpsl
daa
or
push
xor
adc
xor
imul
mov
lret
xchg
pop
adc
nop
mov
cwtl
test
adc
addr16
xor
rorb
dec
minps
or
fldl
add
addr16
jae
in
mov
lods
lds
outsl
jg
insl
sbb
sub
in
jae
mov
dec
std
out
repnz
push
jo
jne
fcmovu
test
mov
mov
pusha
inc
aas
dec
out
insl
aaa
mov
cmc
popf
stos
ss
sbb
push
das
add
xchg
xchg
push
mov
enter
xor
insl
xor
out
jbe
lea
sub
sbb
les
mov
jecxz
xor
jns
fucom
nop
or
sub
out
xor
or
imul
stos
in
test
mov
sbb
add
cli
mov
pusha
dec
ret
sbb
jae
in
mov
mov
sbb
push
fmuls
loope
aas
imul
and
xlat
mov
addb
loop
mov
das
cli
mov
pop
ljmp
sti
dec
push
sub
hlt
insl
int
xchg
call
xlat
mov
dec
lods
mov
xlat
hlt
mov
push
movsb
inc
fcmovbe
aad
sbb
out
shll
pop
mov
xor
jb
clc
rcrl
push
faddl
push
sar
cltd
jne
add
nop
out
push
pop
aad
jp
push
cmpsb
sbb
sahf
add
ja
add
repnz
jns
mov
or
iret
mulb
mov
mull
aad
fidivrs
test
ficompl
dec
adc
inc
mov
mov
bound
pop
jae
std
popl
pop
out
mov
pop
cmp
es
call
in
inc
loop
int
xchg
jno
xorb
and
movsb
sub
add
jns
inc
mov
fisttpll
jl
popa
bound
sub
les
js
mov
xchg
jo
addb
decl
sub
cmpsb
outsb
fwait
add
repz
sub
and
fstpl
and
xchg
out
fbld
or
test
jb
dec
das
mov
cld
add
nop
cs
xchg
push
in
mov
or
arpl
das
add
sub
test
call
nop
or
xor
in
jo
mov
stos
jl
or
sub
cmp
loop
jge
lret
add
adc
or
jmp
mov
add
adc
bound
jp
jle
cmp
ret
push
mov
mov
lcall
clc
xor
out
xchg
outsb
and
repz
inc
into
sbb
scas
adc
lds
idivl
mov
jno
jnp
outsb
adc
arpl
add
lods
or
or
cmp
popf
sbb
cmc
cld
add
loope
lcall
out
decl
or
test
push
aam
lea
inc
mov
int3
push
mov
shll
stos
call
push
xchg
xor
mov
mov
out
testl
int3
ss
xor
aaa
into
fimuls
sbb
and
imul
rcl
cmpl
decl
out
xchg
negb
sbb
daa
sbb
adc
mov
lods
push
jne
les
shll
add
jmp
movsb
mov
pop
aam
jg
outsl
cmpsb
lods
es
mov
mov
loop
and
idiv
dec
sub
adc
repnz
mov
pusha
or
jae
dec
xchg
pop
mov
cmc
mov
inc
xor
cmp
test
imul
push
or
fnstenv
xor
test
cmpsl
adc
xor
mov
frstor
mov
out
scas
flds
int
scas
dec
ror
fistl
xchg
jo
dec
mov
pushf
xchg
mov
das
push
clc
or
inc
mov
cmpsl
mov
bound
es
out
xchg
mov
xor
mov
mov
fisttpll
inc
shlb
scas
mov
fisttpl
rcll
pop
in
or
cli
xor
jmp
hlt
pop
aas
bound
xchg
fucomp
jl
js
pop
aam
int
cmp
sarb
cmp
int3
ljmp
jno
inc
stc
push
addr16
js
cmc
xchg
iret
je
negl
sbb
les
jns
jo
sti
mov
inc
mov
fs
mov
leave
dec
aaa
repz
push
pop
mov
adc
cmp
imul
cmp
stc
movsb
push
mov
gs
xchg
jp
sub
pop
push
lods
jle
std
adc
rclb
roll
sbb
jp
aam
call
cmp
adc
pop
inc
mov
lods
or
mov
xchg
mov
dec
cmpsb
out
ficompl
cs
dec
push
xchg
cmc
jne
jne
ret
mov
mov
outsl
das
cmp
push
push
adc
jae
and
or
pop
stc
sub
and
fcoml
popf
lds
shl
hlt
sbb
aad
icebp
adc
xchg
notb
xchg
cld
jnp
out
lds
push
pop
sbb
xlat
fisubrs
add
xchg
lea
or
test
in
push
add
aaa
sbb
pmaddwd
sub
dec
adc
clc
add
pop
push
xlat
jb
fucom
arpl
mov
dec
dec
repnz
jmp
arpl
cld
mov
in
jle
test
icebp
pop
mov
xchg
stc
hlt
xchg
arpl
push
jmp
test
out
inc
or
lret
lahf
jp
mov
xchg
xor
cmp
orb
adcb
nop
mov
imul
mov
and
push
or
xor
dec
test
insl
test
mov
mov
leave
xor
push
cmp
rolb
dec
nop
xchg
mov
ja
jmp
hlt
jge
xor
and
inc
cmp
pop
adc
test
repnz
inc
ja
mov
ret
unpcklps
xorb
dec
mov
ja
xchg
sub
decb
stc
lret
and
sub
fsubrs
adc
stos
push
xchg
es
ret
std
sahf
push
mov
es
mov
xchg
pop
mov
ficomps
jbe
xor
jl
push
mov
test
xchg
xor
testl
add
jecxz
jmp
in
orl
ret
adc
adc
adc
mov
and
xor
or
ljmp
ds
cwtl
icebp
pop
push
cld
pop
pop
in
mov
les
in
imul
adc
pop
ljmp
in
loopne
nop
pop
cmp
dec
cmpsl
jo
inc
pop
lcall
add
mov
rcrb
and
pop
mov
testl
adc
sub
sub
outsl
or
shlb
add
xlat
sbb
clc
xor
aas
mov
lds
dec
inc
scas
cmpsb
int
pop
jle
sub
loope
cmc
aaa
mov
dec
jns
ret
cltd
fadds
sbb
mov
mov
jno
xchg
pusha
push
inc
test
hlt
mov
decl
ret
in
pop
or
sub
sbb
and
iret
mov
push
add
int3
lar
shlb
push
lods
pop
fwait
push
jns
mov
jae
cs
orb
outsb
leave
ret
outsb
sbb
dec
dec
add
lea
movsb
ret
rorl
test
loopne
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
shl
mov
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
jmp
cli
shll
mov
xchg
mov
push
ret
or
sub
push
push
jo
adc
es
adc
adc
pop
pushf
rcrb
inc
fiadds
fisubrl
fisubs
mov
and
mov
mov
daa
loopne
scas
mov
xchg
movsl
jb
mov
jp
rcr
and
jne
jge
subb
sbb
roll
cmpsl
aas
mov
adc
xorl
ja
insl
out
mov
or
mov
lods
mov
fs
lcall
mov
repnz
or
pop
xor
mov
divb
lret
ss
xor
add
mov
popf
fistps
mov
mov
jb
sbb
popl
mov
lahf
test
and
push
loopne
jnp
addr16
xchg
loop
push
bound
mov
sbb
adc
or
insb
mov
sbb
jmp
test
mov
and
xor
loopne
cmp
push
inc
mov
cmc
xor
mov
xchg
and
in
into
and
insb
rorb
sbb
jge
jl
imul
mov
mov
movsb
or
pop
add
jo
je
mov
push
or
xlat
out
aam
iret
jne
out
jns
in
lcall
stc
mov
sbb
and
enter
call
dec
xchg
fdiv
fisubs
dec
in
test
adc
inc
mov
daa
sarb
ret
mov
sub
loope
and
jno
add
adc
shlb
xor
jno
int3
inc
mov
rcrb
in
pop
addr16
cmc
cmp
cltd
stc
aad
dec
icebp
sub
cmp
sub
sbb
stos
inc
mov
mov
pop
xor
jle
inc
mov
pop
lds
adc
adc
or
clc
rorl
adc
pop
mov
out
ljmpw
ror
xlat
inc
cmp
and
cli
xlat
mov
fsubl
mov
fcmovu
fsubrs
push
icebp
xchg
or
stos
adc
repz
iret
filds
mov
addl
pop
inc
xor
add
jae
sub
add
adc
cmpb
nop
pop
sub
sarl
push
decl
mov
pop
xor
and
adc
in
and
repnz
sbb
xchg
jno
and
mov
arpl
mov
mov
xchg
and
andl
mov
fwait
pop
cld
mov
fwait
cmpsl
sbb
jmp
in
leave
movsb
mov
ret
sbb
mov
xor
sbb
lea
lret
lcall
stos
mov
cmp
push
roll
or
mov
aad
sub
stos
negl
int3
push
hlt
pop
out
testb
test
aas
cmp
fwait
mov
mov
out
gs
ljmp
jb
movsl
xchg
inc
xchg
mov
push
lock
loop
int
add
xchg
addl
loop
enter
inc
sub
jecxz
pop
pop
loope
loop
lea
sti
imull
or
jo
xchg
sub
fnstsw
nop
jbe
sbb
jg
cmp
adc
push
in
stos
mov
repnz
push
sbb
stc
das
sti
mov
clc
xor
clc
test
mov
ja
mov
ljmp
lods
scas
out
js
into
test
movsb
notl
dec
movsl
xor
sub
imull
scas
or
add
mov
cmovg
loop
je
fmul
mov
mov
stos
cmpsb
in
dec
inc
xlat
fisubrl
js
inc
cmp
or
addr16
or
sti
lcall
cwtl
cmp
xchg
xor
push
sub
mov
out
jns
cmp
negb
nop
sub
mov
call
loop
ss
mov
mov
fisubrl
inc
push
xchg
pop
sub
adc
insb
mov
sbb
lcall
out
shrl
jne
mov
cmp
mov
push
dec
sbb
pop
jle
daa
cltd
je
xchg
in
mov
and
loop
ret
lods
push
jge
ljmp
cmp
mov
mov
outsl
lods
jmp
cmc
cmc
call
jne
xchg
lods
dec
xchg
xor
orb
ss
cmp
in
out
adc
xchg
dec
sub
inc
call
test
hlt
cli
pop
push
add
mov
mov
xor
mov
xchg
arpl
ret
or
inc
call
xchg
push
push
int3
cmp
xlat
loopne
test
stc
loope
pushf
jb
in
jb
ret
ficomps
movsl
dec
shrl
data16
cmp
and
mov
lods
push
and
fistpl
jl
push
addr16
cmpsb
ss
nop
fisubrs
test
nop
jecxz
jle
fbstp
xchg
mov
in
sub
ror
fstpl
movsl
pop
dec
or
mov
push
push
dec
or
div
mov
inc
push
cmp
mov
sub
xor
cld
loope
or
sub
add
dec
or
cli
push
popf
test
das
push
mov
out
ret
lea
dec
jecxz
dec
jg
ficoms
sub
adc
subb
call
mov
mov
adc
cld
sahf
push
cmp
xor
insl
xor
out
ja
scas
mov
dec
jp
mov
pop
pop
mov
int
vmaxps
add
mov
sti
jmp
sbbl
and
lret
cmp
lods
or
test
aam
repz
jo
and
add
cli
inc
insb
sub
mov
jp
je
inc
mov
mov
icebp
pop
fistpll
pop
enter
or
out
add
movsb
xchg
mov
imul
cmp
mov
ret
adc
jno
push
xchg
sahf
loope
adc
fildl
or
inc
push
push
daa
sub
insl
add
stos
xor
mov
sub
mov
and
sarl
sbb
and
jo
cli
inc
cltd
mov
in
stos
or
lods
mov
rol
push
lock
add
jbe
jo
ja
stc
sbb
movsb
dec
or
mov
ret
scas
pop
fidivrl
push
xchg
test
push
iret
push
mov
out
std
popf
mov
cmpsb
xchg
add
mov
xchg
lds
add
and
shll
pop
call
add
mov
cwtl
or
and
ljmp
mov
pop
pushf
xchg
call
dec
jle
cs
xor
shld
pop
aaa
scas
and
push
lcall
cmp
xchg
pushf
mov
jmp
je
push
call
adc
inc
lcall
mov
insl
lret
mov
fadds
fwait
loop
mov
adc
cltd
and
xor
push
mov
push
out
pop
pop
nop
into
pop
cmp
inc
inc
jmp
xor
stos
inc
xorl
sub
xor
sbb
mov
neg
inc
mov
call
jae
add
xor
or
dec
adc
or
loope
or
adc
int3
scas
sub
adc
jnp
dec
and
loope
inc
out
push
in
or
or
test
xor
xor
cli
push
pop
dec
push
xlat
test
or
mov
cmpsl
and
cmpb
or
movsl
jge
sti
xor
jbe
pop
call
subb
xchg
cltd
push
cli
mov
jo
mov
xor
lret
pop
mov
iret
and
pop
hlt
dec
loop
jl
cmp
clc
sbb
jno
xor
fisubs
cmp
mov
adc
stc
js
and
xchg
or
and
push
aas
rolb
mov
cmp
cmc
ret
sbb
lock
add
xor
adc
push
out
lret
mov
or
aad
stos
sbb
inc
outsw
mov
in
aaa
es
sub
sub
jo
lahf
adc
enter
cmp
and
jge
inc
repnz
add
jmp
shl
cmc
insl
add
addr16
sub
daa
icebp
and
adc
push
mov
push
fwait
xor
inc
aam
icebp
loope
out
test
js
outsl
clc
in
push
roll
dec
sub
push
fists
test
out
lods
mov
in
loopne
mov
roll
pop
fildll
xor
int3
pop
repz
fwait
pop
push
out
pop
in
lea
cmp
mov
popa
iret
out
pop
les
jo
out
mov
popf
mov
shll
sbb
cmp
inc
push
xor
out
xor
in
std
jle
mov
popf
pop
sbb
sub
repz
xor
jnp
mov
sbb
subl
test
and
sbb
js
and
clc
test
inc
jge
out
mov
in
mov
sahf
leave
dec
push
xor
int
or
stos
in
inc
movsl
clc
dec
popa
or
push
pop
sub
cmp
test
lret
xchg
sub
decb
inc
daa
mov
dec
pop
les
test
mov
jae
sbb
xchg
pop
in
or
cmovs
cmp
push
pop
jle
out
mov
add
lahf
push
xlat
mov
aad
mov
xchg
cltd
mov
daa
push
mov
out
and
inc
adc
dec
test
xor
arpl
fs
inc
in
fdiv
sub
and
lcall
mov
pop
dec
leave
sbb
push
je
and
outsl
mov
ficompl
nop
xor
adcb
dec
divb
test
mov
addl
pop
adc
cli
ficoms
lds
sbb
mov
fistps
lock
or
dec
or
xchg
adc
imul
popf
jge
out
inc
cs
out
sbb
aad
popf
pop
rcll
test
test
imul
lahf
out
ficomps
mov
pop
add
aas
aaa
scas
inc
cmp
aad
xchg
dec
jge
dec
or
and
or
jge
out
addb
jbe
inc
jns
inc
or
repnz
mov
add
push
addr16
imul
jle
insb
pop
int3
add
mov
pop
or
pop
stos
into
mov
mov
outsl
jge
push
jne
loop
js
pusha
mov
add
xchg
rcrl
sbb
mov
pop
inc
dec
test
lock
sbb
xchg
dec
nop
int3
and
mov
adc
mov
ficoms
add
imul
es
sarl
std
insl
add
xchg
mov
jno
xor
jge
imul
pop
xor
imul
sti
xchg
xchg
xchg
bound
out
sbb
out
out
call
xor
and
jmp
cmpsl
mov
pop
aas
dec
in
dec
dec
pop
sahf
je
lret
mov
loop
cs
inc
jae
inc
pop
ljmp
cmp
jno
inc
test
dec
cmp
mov
lahf
aad
xchg
cld
or
pop
lret
std
push
pop
test
jle
xchg
inc
icebp
out
js
xchg
jae
pop
push
and
inc
scas
jl
or
inc
std
xchg
test
or
push
test
ds
xchg
je
es
cmc
loop
or
xchg
test
imul
pop
xchg
mov
cmp
xor
push
jmp
ret
ret
daa
and
push
jle
ret
and
add
rolb
xchg
imul
cmp
pop
stos
adc
repz
dec
pop
imul
popf
test
add
sub
mov
push
jo
clc
inc
fwait
adcl
addb
aam
inc
mov
xchg
mov
xor
je
or
loopne
es
std
mov
ljmp
and
pop
fidivs
cmc
xchg
loope
ljmp
popf
mov
cmpl
mov
sbb
mov
xor
pop
stc
ret
add
cmp
loopw
int3
pop
dec
repz
pop
jecxz
inc
mov
pushf
cmp
jae
push
in
jmp
aad
push
fldl
loopne
add
mov
xor
sarl
dec
lcall
das
inc
adc
cmpsl
mov
add
movsb
int3
mov
mov
stos
mov
idivb
enter
cmpsb
in
testb
fildl
inc
mov
mov
fdivrl
cli
bound
push
dec
gs
fdivrl
mov
push
addl
shlb
and
rcll
sbb
xchg
es
hlt
push
add
mov
icebp
add
je
ds
xchg
pusha
cmp
sar
idivl
lcall
mov
scas
xor
mov
fwait
sbb
gs
mov
notl
fsubr
mov
test
add
sub
cmc
fprem
mov
add
or
mov
sti
mov
test
data16
popf
mov
xor
push
pop
call
inc
cmp
orl
fcom
jnp
push
dec
xor
fwait
xchg
mov
push
xor
scas
testb
aad
in
scas
jle
in
cld
dec
out
cld
sub
and
shlb
data16
lea
mov
out
xchg
push
mov
fldenv
cmpsb
nop
jnp
and
cmp
cmp
mov
xchg
nop
add
pushf
jns
push
popa
dec
add
dec
push
hlt
xor
out
popa
mov
sub
mov
mov
sarl
stos
xor
add
pusha
push
lods
sub
ds
in
stos
pop
int3
sub
pop
mov
or
lcall
or
push
rclb
out
loop
ljmp
jno
push
xor
fidivrs
jp
in
popl
sbb
and
dec
adc
inc
lahf
pop
mov
jo
xor
jno
inc
pop
jmp
sbb
imul
aaa
clc
sbb
test
mov
add
lret
rcll
mov
out
shll
lcall
stc
out
xor
in
add
into
pop
iret
pop
xchg
movsl
sbb
xchg
xor
das
lea
cmp
sub
cmpl
xchg
adc
add
sub
mov
mov
addr16
std
mov
adc
jo
mov
fisttps
add
cmpsl
and
pop
and
push
out
add
adc
aaa
adc
loope
inc
xor
imul
fs
roll
stc
rclb
sti
popa
popf
xchg
adc
dec
cmc
mov
out
jne
lret
or
cmp
pop
scas
mov
icebp
push
inc
jns
lock
mov
daa
and
movsl
xchg
pop
jp
sbb
jl
ret
lret
fidivs
adc
je
fnstsw
dec
fbstp
out
or
mov
das
test
movsl
cmp
subb
pop
inc
repnz
sub
movsb
and
fidivrs
inc
pop
rclb
inc
cmp
sub
sarl
ficompl
loope
rclb
xor
jo
or
pop
outsl
das
sub
xor
rcr
jmp
push
fisubrl
cmpsb
and
inc
mov
cmpsl
xor
mov
pop
jge
xor
pusha
mulb
inc
xor
inc
mov
jmp
mov
mov
xchg
mov
pusha
mov
movsb
xor
lods
cmpb
or
in
adc
jmp
sub
in
inc
imull
or
mov
das
mov
fldt
cmp
filds
adc
lods
xor
insb
or
xchg
mov
inc
shlb
pop
jmp
jmp
stc
incb
sub
repnz
push
cli
pop
lcall
sbb
and
cmp
mov
mov
sub
fldt
ds
fsubrl
outsb
and
push
xchg
popa
loopne
pop
bound
lea
sbb
aam
cmp
in
std
fstpl
call
mov
aad
test
out
sbb
addr16
cs
adc
push
in
je
sub
push
in
aaa
cmp
out
jecxz
cmp
sbb
push
cmp
ret
mov
dec
cltd
cmpsb
xchg
daa
xchg
stc
jne
mov
add
fistpl
fnstsw
mov
stc
loopne
pop
cltd
rcrl
add
and
jmp
xor
push
cmc
pop
jmp
xchg
xchg
outsb
in
cmp
xchg
xchg
sub
sub
mov
lcall
pop
sbb
cmp
imul
ds
mov
adc
mov
jmp
cltd
and
xor
mov
or
inc
subl
in
jnp
sarl
xlat
test
arpl
and
scas
inc
mov
push
popa
cmp
notl
sahf
stos
sub
pop
mov
mov
jmp
mov
sub
push
pop
mov
icebp
vpsubusw
popf
movsl
ret
int
lcall
xchg
adc
mov
lret
push
jg
mov
imul
repnz
and
xchg
in
xchg
sub
aas
or
xchg
mov
hlt
out
jge
fcoml
jne
push
insl
in
xchg
pop
loope
lret
imul
and
out
or
mov
fisubrs
sub
popw
xor
imul
pop
loope
jle
div
aaa
mov
scas
cmp
cmpsl
aam
test
cli
movsb
mov
sub
cltd
fisubrs
cli
jne
cmovbe
mov
add
test
pushf
dec
dec
mov
dec
imul
sub
adc
xchg
jle
insb
xchg
and
xchg
andb
inc
inc
xorl
add
inc
jg
not
aaa
testl
adcb
ljmp
cmp
in
es
jecxz
cld
aaa
scas
or
mov
sbbl
imul
sbb
xchg
pop
push
ja
scas
jns
xchg
pop
and
and
lock
cmp
add
repz
dec
adc
inc
lods
mov
pop
push
fsubrs
mov
ds
xor
jmp
inc
mov
xchg
leave
getsec
or
rclb
jnp
mov
in
subl
lahf
stc
cmp
mov
add
mov
dec
adc
adc
lret
cmp
cli
xchg
xor
sbb
or
or
ss
jne
sti
imul
inc
stos
add
push
divl
pop
sbb
sub
adc
mov
xchg
ljmp
cwtl
fisubl
cmp
or
cs
out
fnsave
aas
xor
mov
or
xchg
mov
pop
adc
insb
jge
push
push
out
xor
or
popf
inc
xorl
stos
pop
or
arpl
lahf
jb
daa
sarb
and
fimull
es
inc
jge
lret
dec
insl
inc
jno,pn
adc
aaa
popf
lret
xchg
dec
jecxz
insb
cld
push
jle
sub
inc
cli
flds
arpl
jne
adc
inc
push
scas
inc
pop
adc
test
fcmovnb
pop
sbb
add
and
loop
dec
cld
sbb
jnp
ud0
addr16
adc
and
mov
dec
pop
adc
test
shl
popa
fcmove
das
sbb
sub
arpl
pop
scas
repnz
fcomps
icebp
insb
insb
out
inc
inc
in
jb
pop
loop
push
cltd
and
cmp
aas
mov
xor
ss
lret
dec
or
aad
in
cwtl
jae
insl
adc
out
and
movsb
inc
sub
xchg
ror
decb
push
dec
sbb
mov
lret
lock
ja
push
lahf
into
out
iret
test
inc
adc
out
jmp
sti
jno
xlat
lock
sub
jbe
push
mov
fs
lods
cwtl
jae
into
cmpsl
out
stos
mov
aam
mov
filds
jl
push
pop
push
and
sbb
dec
sbb
or
mov
lahf
in
in
cmpsl
loope
push
nop
sub
mov
insb
cmp
test
incb
cltd
enter
add
mov
ret
loope
sub
mov
fisubrs
jno
sub
dec
ss
notl
sub
dec
int3
lahf
jo
xor
fnstcw
rorw
jl
adc
xchg
int
inc
pop
and
dec
xor
cli
xchg
clc
sbb
pop
loope
addb
ja
push
xor
push
das
cmp
mov
and
popa
out
in
fistpll
jmp
sbb
xor
cmp
push
gs
ja
nop
dec
pop
or
enter
les
pop
in
mov
cmc
sub
xor
iret
xchg
jmp
add
roll
cmpsb
add
mulb
lea
pop
dec
xor
dec
jae
jmp
push
mov
xor
fwait
int3
add
daa
fs
push
ret
push
sub
shl
sarl
xor
xchg
cld
repnz
adc
pop
sub
pop
lcall
or
dec
xchg
cmp
cmpsb
dec
mov
push
ret
jg
mov
mov
sbb
data16
push
ret
loope
mov
cs
xor
sbb
jo
adc
or
pop
arpl
loop
and
sub
xchg
cmp
push
xchg
arpl
pop
sub
frstor
sbb
aad
and
lods
in
dec
imul
inc
imul
xchg
int
testl
mov
xchg
dec
xchg
sub
div
jno
shlb
popf
add
pushf
jmp
mov
push
fstpt
pop
dec
mov
push
lock
neg
inc
push
in
push
filds
rcrl
or
stos
mov
lds
fiaddl
out
not
ds
jp
je
push
sahf
in
sub
adc
mov
lock
pop
repnz
popa
add
lds
addr16
push
loope
mov
cltd
rcl
pop
add
lret
inc
pop
lock
sub
cld
out
mov
push
mov
addr16
in
in
or
test
cmp
sub
dec
cmp
mov
in
or
sbb
out
sub
and
xchg
pop
xor
imul
mov
xor
je
jae
cwtl
inc
je
mov
xchg
mov
scas
sbb
adc
mov
xor
imul
xor
sub
cmp
mov
repnz
pusha
sti
das
cmpsb
jbe
fldl
mov
lock
mov
pop
je
mov
adc
shrb
scas
add
mov
data16
ljmp
loope
fidivl
sub
jns
pop
sub
inc
es
lea
sahf
inc
mov
sarb
push
mov
popf
xor
out
mov
loop
adc
jae
jg
push
sbb
jno
repnz
pop
or
mov
pop
and
repz
sbbb
mov
push
loop
and
icebp
test
std
lds
mov
pop
mov
inc
jb
xor
cld
imul
and
adc
mov
cs
fsub
out
aad
lock
in
pop
mov
insl
pop
xchg
lret
idivb
das
xchg
push
lea
lds
xchg
push
sbb
pop
jmp
mov
mov
and
nop
out
mov
mov
add
add
add
lods
js
scas
pop
cmpsb
adc
pop
sar
movsb
lods
inc
sub
mov
xchg
nop
mov
xchg
lock
iret
outsb
cmp
push
push
out
sbb
rcrl
and
mov
decb
pop
push
mov
outsl
sahf
cmp
or
sub
dec
and
mov
xchg
jbe
xchg
mov
or
enter
jb
mov
lret
and
pop
pop
imul
pusha
mov
sar
and
push
es
mov
mov
inc
push
out
lcall
cwtl
mov
cli
rol
test
mov
cmp
add
sub
jo
jmp
mov
aad
out
and
dec
dec
xor
sti
mov
or
cli
pop
mov
xor
dec
inc
rcl
subl
mov
je
inc
cltd
mov
ljmp
fists
xchg
or
sub
cmp
hlt
insl
cmp
in
pop
iret
pop
mov
sarb
dec
ret
adc
pushf
push
movsb
js
addr16
repnz
push
aas
xor
in
ljmp
es
jae
movsb
insb
and
push
xchg
xor
and
std
and
cs
dec
scas
daa
jne
sub
enter
sbb
ret
xchg
daa
fs
inc
jb
mov
xor
jnp
mov
sub
inc
lret
ljmpw
cmpsl
dec
cmp
push
pop
nop
or
repnz
sbb
sub
lea
call
outsb
dec
push
adc
cli
in
cs
sub
rcr
mov
aad
push
clc
sbb
in
out
jbe
cmp
push
mov
jno
and
xchg
sub
lea
mov
int
xlat
cli
sub
outsb
pop
dec
addb
stc
mov
pop
pop
fisttpll
out
and
pop
jae
dec
fistl
popf
sbb
jecxz
add
sub
mov
dec
or
cmp
mov
bound
out
inc
loope
cwtl
jge
outsl
fs
mov
mov
push
push
xor
lds
jge
push
or
je
into
aad
clc
mov
push
test
fcompl
sbb
cltd
in
sbb
or
stos
pop
adc
xchg
test
inc
mov
enter
push
les
shll
pop
sub
imul
pusha
push
and
out
mov
mov
inc
push
cmp
outsb
mov
rcl
add
idivb
push
adc
lahf
push
sti
loopne
sub
shl
sub
push
adc
lret
mov
jecxz
ss
insb
sahf
frstor
mov
in
pop
daa
aad
jo
dec
popa
loope
xchg
pop
mov
push
xchg
sub
sbb
lcall
adc
addr16
pushf
push
inc
xor
js
and
loope
jg
mov
test
andl
out
clc
cmc
mov
mov
push
in
jns
ds
xor
cwtl
bound
push
mov
pop
ficoml
dec
push
movsl
scas
mov
cmpsb
sahf
jbe
int3
daa
roll
push
sarl
push
jecxz
popf
cmpsb
xchg
sbb
mov
sub
add
xlat
out
jmp
repz
sahf
sub
xchg
clc
sub
sbb
out
cmp
sbb
push
sbb
xchg
mov
sub
mov
dec
cli
adcb
ss
mov
hlt
mov
lods
pop
movsl
jb
sarl
inc
stc
pop
shll
fiaddl
rcrl
xchg
xchg
mov
sub
xchg
outsb
aam
inc
int3
cmp
jbe
movsl
enter
mov
xchg
jno
pop
gs
dec
mov
in
fidivl
pop
ljmp
sub
mov
or
sbb
fdivs
inc
jge
add
cmp
xchg
add
rolb
aad
enter
or
imul
test
mov
jge
ja
xlat
insb
jno
xchg
inc
fdiv
add
mov
call
ficoml
movsb
pop
bound
add
dec
fwait
pop
cltd
imull
and
in
std
pop
and
shr
jg
mov
mov
les
lds
xor
sbb
mov
push
sub
push
push
and
add
fnstcw
hlt
mov
cld
outsb
mov
xchg
push
fiaddl
js
scas
icebp
sbb
mov
add
gs
cmp
xchg
jge
icebp
mov
jo
cmpsl
dec
jae
cmp
btr
mov
sbb
sbb
mov
dec
fnstcw
rcr
jp
mov
scas
xchg
int
dec
push
add
ss
ret
int
jle
leave
adc
enter
dec
push
cli
push
pusha
sub
stc
outsb
ljmp
popf
push
dec
imul
inc
sub
sbb
loopne
mov
or
popa
push
out
fadd
popa
cmc
sub
push
or
imul
jne
dec
and
sub
subb
jge
and
imul
sbb
ret
cmp
mov
ds
xlat
stc
aad
sub
dec
cmpsb
add
mov
mov
pop
mov
es
mov
xor
pop
sub
mov
cs
aas
aaa
mov
push
sub
inc
jmp
cmp
add
movsb
ret
loopne
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
mov
or
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
shr
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
movl
cmp
jae
cmp
jae
shrd
movl
shr
ret
xorl
mov
xor
and
movl
shr
ret
xor
xor
ret
push
mov
sub
movl
cmpl
movzwl
mov
movl
jmp
mov
mov
je
pushl
pushl
pushl
push
push
pushl
call
not
or
and
xor
mov
mov
movl
cmpl
movl
mov
mov
mov
jmp
movl
mov
jg
pushl
call
orl
sbb
sub
sbb
adcl
mov
or
mov
movl
cmpl
mov
mov
mov
jmp
not
jb
pushl
pushl
call
adc
xor
or
xor
add
or
sbb
inc
addl
movl
dec
movl
decl
movl
movl
movzbl
or
movl
cmpl
movl
movl
jmp
mov
movl
jge
push
call
adc
mov
mov
sub
and
sbb
subl
mov
or
mov
mov
sbb
mov
mov
sub
mov
push
mov
movl
sbb
mov
andl
mov
xorl
push
orl
push
xorl
push
subl
push
addl
call
xor
mov
cmpl
mov
mov
mov
movzwl
jmp
movl
movl
jg
push
pushl
push
pushl
pushl
call
or
or
adc
addl
xor
add
adc
sbb
mov
xorl
xor
and
cmpl
mov
movl
jmp
movl
movl
jg
push
push
call
sbb
sbbl
sub
notl
xor
add
sbb
xor
xor
add
and
mov
mov
sub
or
and
or
mov
adcl
and
cmpl
mov
mov
mov
jmp
movl
jl
push
pushl
push
pushl
call
add
sbbl
and
or
mov
sub
sbb
movl
mov
or
movl
movl
movl
movl
mov
addl
mov
mov
mov
add
movl
push
adc
push
subl
and
and
push
andl
push
xorl
call
mov
mov
cmp
movl
ja
jb
cmp
jae
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
or
or
add
adc
xor
xor
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
jmp
loope
cwtl
cwtl
mov
push
outsb
aad
or
xchg
int
push
jp
xor
pop
arpl
nop
ret
push
in
dec
adc
jbe
into
push
sbb
xchg
mov
jne
popf
ficoml
add
sub
jmp
das
jbe
adc
sub
les
in
cmc
out
mov
or
ljmp
rorb
int3
lcall
hlt
stc
int
push
fsubrl
loop
sbb
ss
jmp
inc
mulb
and
push
int
aad
jb
lret
fistl
xchg
mov
add
or
lock
adc
inc
bound
mov
aam
mov
mov
mov
and
sub
pop
push
sbb
push
pop
cmp
das
leave
js
test
pop
pusha
stc
popa
imul
loop
scas
rolb
icebp
push
dec
arpl
jecxz
icebp
push
addb
xchg
pop
or
jb
mov
mov
popf
inc
pop
fbstp
lret
mov
lds
bound
jp
aam
popf
adc
add
mov
loope
andb
sub
call
mov
xchg
mov
jbe
cwtl
cmp
mov
dec
sub
dec
mov
scas
ret
pop
jns
xor
inc
sbb
clc
push
lcall
call
andl
es
pop
dec
addb
jns
scas
std
ljmp
adc
pop
pop
data16
daa
push
std
xchg
icebp
adc
aad
dec
roll
int
fnstsw
iret
jb
jo
mov
mov
mov
inc
sub
xor
test
sti
insb
sub
jg
int3
and
sti
xchg
sbb
dec
out
or
aas
adc
arpl
xchg
pusha
lods
out
out
out
add
dec
aas
or
out
pop
lahf
ja
out
aas
cmp
sub
shrl
xchg
mov
cmp
fwait
in
xchg
mov
mov
lcall
call
das
call
add
repnz
xor
cmpsl
call
xchg
or
xor
addr16
mov
xchg
pop
and
mov
ds
ds
lcall
not
lods
ret
xchg
fwait
jne
jo
insb
lret
movsb
cmp
and
outsb
fdivrs
jbe
push
fcmove
inc
dec
cmp
insl
iret
ss
ja
or
sti
inc
add
dec
lea
je
loopne
js
cltd
sbb
lea
mov
jp
ss
sub
sbb
cmp
inc
fimull
loope
mov
jne
stos
leave
js
and
pop
add
mov
add
cmp
dec
pop
pop
dec
sbb
mov
ja
mov
shlb
push
in
push
popa
jecxz
sahf
xchg
xor
inc
and
popa
insl
add
xchg
arpl
xor
or
mov
cmp
outsl
adc
fsubrs
adcl
mov
loope
or
xor
mov
jecxz
dec
mov
addl
or
cmp
repz
sbb
mov
add
in
fsubl
jno
or
std
mov
jmp
xchg
push
push
adc
inc
cmp
out
aam
mov
jae
call
jb
test
fidivl
cwtl
dec
inc
sub
lock
das
add
icebp
int
shlb
xchg
mov
jns,pn
jp
aam
jnp
or
dec
daa
pop
divl
in
mov
mov
cmp
sarl
shlb
jbe
or
inc
pop
mov
dec
mov
jne
aas
push
shr
pusha
cmp
shll
jmp
fidivs
scas
aaa
adc
xor
in
cli
jg
movsl
mov
fistpl
and
stc
xchg
mov
loopne
iret
mov
rorb
retw
and
mov
cli
inc
cmp
lret
outsl
add
add
push
in
xchg
scas
fwait
sbb
and
xchg
insl
ss
mov
xchg
sub
insl
sbb
inc
jle
jno
pop
int
nop/reserved
out
mov
enter
and
fs
cld
xchg
xor
stc
int3
ss
pop
hlt
sbb
divl
in
imul
xchg
lock
sub
lahf
lods
in
shll
xor
xor
sub
or
aad
or
dec
cld
arpl
and
jp
fdivs
add
mov
mov
mov
ja
jecxz
pop
add
inc
es
xor
push
aaa
sub
decl
int
adc
into
lock
faddl
sahf
lock
mov
outsb
sub
inc
loop
rcll
in
insl
jp
outsb
lea
pop
fcomps
rcll
and
jmp
into
pop
aaa
mov
mov
or
jno
out
test
fldenv
ljmp
xchg
mov
pop
push
aam
fisubl
shll
or
imul
push
jge
jne
stc
addb
jns
es
js,pn
dec
sub
or
xor
mov
and
shrb
sbb
aam
push
ds
push
lods
mov
cmpsb
fistps
push
xchg
int
nop
sbb
test
cld
add
movsl
adc
dec
dec
repz
fiadds
inc
sub
mov
jne
arpl
inc
mov
lret
out
das
mov
sub
sbb
ret
ret
popf
into
mov
cmp
or
invd
jp
mov
cmpsb
insl
push
push
and
sti
mov
stc
data16
cwtl
mov
stos
ja
fldl
dec
sbb
xor
stos
leave
in
sub
pop
in
movsl
imul
negl
aad
sbb
cmp
cwtl
pop
inc
in
call
aam
adc
sbbl
jge
testb
sarb
and
sub
arpl
push
rorb
sahf
sub
ficoml
dec
pop
test
divl
pop
inc
lcall
call
add
inc
or
imul
mov
lcall
xor
adc
das
and
adc
mov
pushf
inc
cwtl
testl
mov
pop
mov
push
lods
inc
imul
push
sar
jae
inc
imul
gs
aad
sub
inc
lods
fdiv
add
add
push
cli
test
ja
pop
notl
or
jle
jg
aaa
inc
sbb
loop
imul
cmp
js
icebp
pop
ds
pop
pop
cmpsl
and
aam
add
mov
inc
push
jle
adc
cmp
sbb
pop
jecxz
prefetchw
pop
cmp
push
sub
fdivs
pop
mov
enter
ljmp
jl
out
insb
or
push
aam
jbe
and
arpl
mov
aad
gs
iret
dec
inc
xorb
dec
jb
mov
inc
loope
sub
inc
pop
mov
dec
or
out
in
cli
lcall
lods
iret
fwait
cwtl
imul
fldcw
jno
mov
scas
outsl
push
icebp
es
cli
adc
mov
in
cmp
and
and
mov
shlb
js
mov
cmpsb
insb
mov
jmp
pop
xor
xorl
ss
rcrb
das
mov
and
movsb
mov
lret
and
popf
rcr
iret
sbb
xchg
xor
inc
movsl
jmp
sbb
aam
or
dec
test
movsb
leave
mov
pop
in
clc
sub
pusha
inc
mov
cmp
dec
test
imul
push
pop
ficomps
cmp
lods
outsb
ja
add
cli
or
in
gs
in
dec
cmp
sti
jo
sbb
ret
sbb
mov
hlt
pop
cmp
push
or
mov
xor
dec
jmp
or
repz
je
loop
outsb
cmpsl
into
jecxz
sub
mov
stos
in
mov
mov
dec
enter
std
jno
pushf
mov
adc
sub
ret
pop
inc
das
cmp
outsb
jecxz
inc
push
in
jae
mov
push
in
mov
scas
icebp
sub
lret
fcoms
rsm
add
fists
lea
inc
add
xchg
repz
jp
in
sub
subb
add
test
out
js
int3
in
cmpsb
rcrl
pushf
add
pop
mov
fcomps
dec
ss
dec
loopne
or
xchg
dec
sahf
pmuludq
dec
jnp
aad
popf
ret
mov
ds
aaa
mov
test
out
sub
xchg
xchg
jb
sbb
outsb
jle
and
int3
leave
add
pop
sub
push
jne
sub
mov
add
add
sub
in
and
loope
mov
ja
fcoml
rorb
cmpsb
arpl
popa
cmp
dec
push
adc
cltd
imul
adc
insl
fwait
push
dec
xchg
sbb
mov
wbinvd
int3
push
jno
cld
dec
sti
lret
mov
dec
test
inc
add
cwtl
sub
push
and
lahf
dec
cmc
loopne
pop
jecxz
xor
push
pop
xchg
mov
movb
lea
aad
int3
cmpsb
cmpsl
shlb
sbb
into
stos
psubd
out
jl
cmc
push
mov
inc
dec
ror
or
outsl
inc
adc
mov
shrb
pop
daa
xor
jns
fisttpl
or
insl
stc
pop
mull
adc
sahf
mov
xchg
xchg
jmp
mov
mov
xor
jae
jo
lahf
bound
or
xor
iret
test
cli
js
dec
mov
sub
inc
inc
fisubs
dec
nop
in
leave
jnp
sbb
dec
mov
dec
stos
push
or
mov
fsubr
in
lahf
mov
dec
shll
adc
pusha
addr16
xchg
pop
aad
and
mov
bound
and
daa
push
xchg
and
repz
sarb
das
and
out
lret
ljmp
mov
in
lcall
enter
push
inc
lcall
fs
test
cltd
xchg
mov
shrb
out
pop
pop
dec
lcall
aaa
out
out
and
jno
mov
int
sahf
xchg
lcall
mov
mov
or
dec
incl
roll
pushf
jns
addr16
adc
inc
mov
cld
push
and
test
push
sbb
xchg
pop
push
testb
repnz
pop
fdivrl
and
sbb
sub
fcoms
popf
jns
jo
test
popa
mov
in
imul
add
jb,pn
inc
stos
lods
pusha
sub
lea
stos
lds
push
je
popf
ds
add
ja
mov
fildl
cmc
mov
ljmp
or
cmovl
xor
xor
data16
pop
lea
push
mov
test
imul
popa
icebp
sbb
insl
cmp
andl
or
mov
push
imul
mov
mov
imul
mov
push
stos
add
cmp
mov
push
add
and
data16
fwait
out
mov
out
fisttpl
push
clc
hlt
fistl
jns
test
daa
mov
sub
cmp
inc
ja
jbe
pop
stos
adc
cmp
push
pop
stos
lea
lea
ljmp
icebp
aas
pushf
icebp
xor
sub
sar
lea
mov
adc
shrb
mov
pop
and
xor
or
pop
out
aaa
jecxz
fstpl
out
lods
add
jo
mov
out
pop
adc
scas
adc
nop
adc
mov
das
mov
jge
push
pop
lds
clc
icebp
dec
add
mov
sub
in
repz
and
arpl
mov
adc
ss
lahf
jp
xchg
adc
or
lods
lret
clc
sar
enter
jg
lret
push
xor
inc
outsb
and
loopw
shrb
cmp
jne
pop
jo
xchg
dec
stc
jae
aas
add
loop
xchg
inc
fstp
jns
movsl
scas
stos
aad
in
cltd
imul
jmp
in
call
xchg
jb
sbb
mov
jle
jmp
aaa
aas
rcl
insb
fldl
xor
pop
sbb
das
daa
mov
pop
jge
pop
adc
ja
mov
or
mov
adc
xor
adc
arpl
or
mov
sbb
pop
mov
xchg
dec
ds
push
iret
cmc
or
lcall
add
bound
iret
sbb
mov
test
xchg
push
rolb
jne
dec
push
mov
shrl
cltd
xor
xlat
xor
in
imul
sub
cmp
mov
xor
and
cmpsb
adc
cmp
sahf
je
pop
push
pushf
fucom
add
nop
fists
ret
test
and
pusha
xor
pop
pop
jl
dec
rcll
stos
adc
and
inc
add
stos
andl
pop
jle
dec
adc
mov
testb
mov
jns
cmpsb
outsb
cltd
aaa
sub
loopne
clc
lcall
cmp
int3
pop
fmuls
xor
fs
dec
xor
addr16
mov
inc
loope
sar
sbb
mov
cld
push
or
lret
lock
cmpsb
mov
push
sub
sbb
pop
cmp
push
push
jge
push
test
pop
push
dec
dec
dec
lret
jge
je
xchg
fistpll
push
leave
adc
insb
add
shr
stos
adc
not
dec
nop
sti
push
add
xchg
jl
rcrb
sub
out
inc
push
dec
mov
pusha
loope
and
adc
mov
mov
mov
mov
enter
fstpl
push
pop
jle
push
xchg
ficoms
ret
jecxz
fisttps
iret
and
test
cs
test
repz
addr16
fs
lahf
cltd
pop
popf
mov
loope
jle
and
pop
mov
xorl
js
dec
pop
sbb
sbb
sub
vaddps
pop
xor
sahf
push
dec
out
jns
lods
rolb
mov
imul
xchg
xor
rorb
mov
xor
scas
rcr
pop
out
xor
sub
add
cmp
int
xchg
mov
mov
lods
ss
test
mov
inc
mov
inc
outsb
inc
xchg
mov
adc
dec
dec
dec
or
fwait
dec
mov
cmpsl
jns
fdivl
add
xchg
mov
sub
jno
test
aam
sub
push
mov
add
mov
movsl
test
jae
pop
stos
and
cmpb
jnp
lcall
inc
adc
out
loop
fbld
sub
lock
mov
pop
pop
xchg
inc
push
movsl
sub
adc
pusha
mov
mov
stos
out
sbb
out
add
pusha
mov
cmp
ret
pop
dec
xchg
adc
out
sbbb
out
daa
xchg
adc
lds
jmp
lcall
fbld
rcll
fldl2e
sete
lock
mov
shll
jae
add
aaa
cmpsl
fstpt
sub
dec
sbb
fstpl
int
les
or
inc
and
sbb
or
insl
in
gs
push
push
sbb
or
ds
add
sbb
iret
fs
inc
sub
jp
xor
arpl
mov
hlt
jae
push
xchg
pop
pop
cmp
aas
negb
pop
pushf
mov
push
cmpb
inc
inc
shrl
mov
dec
clc
xchg
cmp
aam
and
dec
mov
rcl
jbe
fstps
test
adc
pop
in
or
dec
fadds
ret
fimull
jns
cmpsl
adc
and
je
or
ficompl
adc
data16
in
sbb
or
sbb
fwait
add
inc
clc
mov
lock
rcl
mov
or
xchg
in
xor
pop
outsb
fldenv
rcrl
aad
stos
jbe
arpl
into
push
push
or
jo
hlt
rcrl
jp
mov
sub
pop
adc
dec
mov
inc
pop
js
push
xchg
mov
mov
arpl
or
jns
lahf
or
in
seta
xchg
sub
sub
add
sub
aad
push
push
insb
ficompl
arpl
test
mov
sbb
adcl
add
push
jmp
inc
popf
mov
sbb
xor
frstor
push
insl
xor
shrb
and
fistl
int3
xchg
nop
loop
push
mov
imul
xorl
cmpsb
ret
cmpsl
scas
shr
mov
push
testb
loop
fwait
push
or
xor
xor
pop
loopne
fstpl
sbb
test
jnp
ffree
insl
sub
xlat
fcompl
or
test
scas
push
adc
pusha
sbb
inc
inc
sbb
push
fs
arpl
ljmp
xor
repnz
xchg
rol
stos
fsubrl
add
imul
loope
jo
xchg
divb
and
ret
lods
lret
clc
dec
dec
mov
sarb
xchg
pop
xchg
add
fs
hlt
pop
mov
into
and
test
sbb
cmc
loopne
addr16
enter
dec
inc
movsb
sbb
push
js
push
std
sti
push
mov
sub
fsts
in
lcall
bound
inc
pop
insl
je
das
orb
repnz
jge
and
sbb
mov
ffree
mov
dec
and
in
jae
jge,pt
and
push
add
int3
pusha
add
and
adc
leave
fwait
jne
pusha
je
lcall
jecxz
and
mov
lods
mov
xor
jnp
push
dec
cli
arpl
popf
mov
scas
imul
push
add
mov
icebp
in
mov
adc
sub
inc
mov
cmpsb
push
notb
lret
pushf
imull
sti
ja
and
or
xchg
fbld
or
adc
cmc
xor
pop
inc
or
mov
vmwrite
pusha
lret
out
fidivrl
rcrl
add
icebp
clc
xchg
sbb
mov
in
sub
cmp
jns
inc
or
cltd
mov
mov
dec
sbb
outsl
andps
push
aam
ja
ds
fidivl
pusha
test
pop
andl
sub
push
mov
xor
pop
test
lods
and
jl
pusha
in
push
stos
fstps
pop
inc
add
mov
pusha
lret
fildl
test
repz
dec
cli
jecxz
out
or
fimuls
fsub
stos
mov
into
mov
in
add
push
cmp
inc
mov
mov
fstl
cmp
aaa
xchg
movsb
dec
adc
cmp
dec
out
mov
icebp
mov
and
xchg
push
pop
push
or
loop
out
xchg
push
sub
and
out
sbb
dec
lret
sti
les
mov
lods
and
push
fnsave
insb
lcall
cmpsl
mov
pop
lock
sbb
pop
jp
lods
xchg
fbstp
fs
cmp
hlt
xchg
insl
mov
ret
jo
cltd
pmulhuw
loopne
and
push
lods
xor
cltd
push
inc
jnp
mov
test
cmpsl
inc
and
mov
pop
add
vmptrst
xchg
ljmp
shl
icebp
mov
jge
sbb
or
popf
mov
mov
test
jae
mov
lret
enter
dec
mov
sub
ror
inc
out
mov
icebp
add
jl
mov
lea
push
xor
push
adc
xor
es
addl
test
adc
and
mov
mov
dec
sti
and
inc
cmp
push
inc
or
stc
out
dec
jae
cmpsb
xor
adc
add
jp
popa
lea
adc
cs
mov
add
das
lret
sbb
pop
push
push
movsl
lret
cmp
adc
lods
cs
mov
and
int3
fsts
xor
pop
cli
push
xchg
ds
call
push
imul
cmpsl
sar
mov
int3
and
add
inc
adc
cmp
hlt
xchg
popa
js
xor
xor
fidivrs
jmp
mov
cmpsl
cmp
xchg
cmp
scas
pop
adc
add
xchg
stos
mov
andl
jnp
aam
mov
mov
movsl
int3
enter
mov
mov
cmp
mov
insb
lea
xchg
push
dec
sub
pop
stos
pusha
lahf
cli
in
into
jbe
sarb
cmpsb
fmuls
cmp
aad
and
cmp
cwtl
mov
notl
mov
and
inc
out
inc
aam
push
push
dec
rorl
and
add
and
push
shrb
lahf
mov
add
mov
jmp
or
adc
cmpl
mov
pusha
mov
sub
sub
icebp
jle
sbbb
arpl
das
jg
push
cli
enter
add
mov
insl
and
sbb
aaa
lahf
jmp
iret
xchg
movsb
leave
mov
sarl
and
push
in
ljmp
mov
mov
out
shr
out
in
dec
mov
je
and
push
pusha
xchg
jns
sbb
cwtl
shll
mov
lahf
ja
inc
mov
call
sbb
sbb
pop
sub
leave
adc
loopne
dec
push
push
das
ror
xchg
jg
fs
xchg
ja
data16
rcll
ret
or
mov
pop
jb
pop
jae
stos
in
loope
cmp
mov
xchg
or
jne
test
xor
in
xor
mov
mov
inc
cs
aaa
xrelease
jns
xor
sti
jmpw
inc
adc
popf
sbb
test
data16
sbb
xor
add
int
mov
push
mov
cmp
mov
sub
xchg
xlat
sub
sub
in
mov
aas
hlt
les
and
or
pop
or
adc
fdivl
in
sub
lock
rcrl
test
in
inc
add
movsl
outsl
stos
shlb
or
cmpsb
mov
adc
arpl
xor
jle
jmp
dec
push
es
mov
int
dec
adc
scas
mov
std
cmpl
insb
jae
cwtl
xor
vaddss
ds
hlt
xchg
cmpb
push
or
mov
lods
bnd
out
xor
stos
insb
popf
pop
pop
and
sbb
mov
test
insb
cmp
repz
mov
mov
int3
bound
aad
mov
mov
cld
andl
cmpsl
fldcw
cltd
or
mov
int
mov
test
mov
push
add
mov
insl
out
sub
icebp
add
clc
loope
enter
jno
jbe
or
fnsave
pushf
add
mov
iret
xlat
mov
xor
imul
sbb
pushf
sbb
push
push
jbe
popa
ljmp
pop
movsb
repz
mov
push
cmp
push
push
lcall
mov
shrb
pop
adc
inc
lods
lods
dec
sbb
cmpsl
jnp
outsl
push
push
lock
fs
sub
negl
out
data16
mov
outsl
cmp
out
mov
inc
mov
mov
leave
adc
shrl
add
xchg
xor
test
xor
shll
and
roll
arpl
stos
rcrb
push
push
aas
sbb
cwtl
mov
bound
adc
pop
icebp
fstps
dec
jne
cmp
loope
test
or
imul
push
rclb
mov
push
lods
mov
test
inc
call
out
pop
inc
insl
push
aam
cli
sbb
inc
and
movsb
sarb
enter
mov
mov
pop
mov
loopne
mov
out
into
adc
push
jae
imul
or
xchg
flds
cmpsb
iret
and
dec
xchg
pushf
sbb
orl
push
mov
fnstsw
mov
xchg
enter
das
push
call
add
ucomiss
je
jle
enter
cmc
leave
pop
lret
andl
shr
incl
fsubs
pop
in
movl
dec
xchg
jmp
jl
mov
cmp
fidivrs
ds
pop
call
and
ja
pop
xchg
ss
and
stos
loopne
jl
or
xchg
imul
mov
mov
daa
lea
or
rorl
fisubrl
xor
stos
jl
imul
cmp
xchg
adc
cmp
out
pop
sahf
mov
ljmp
orl
imul
xlat
sub
rcrb
mov
sbb
and
aam
add
addr16
jns
mov
xlat
mov
xorb
fwait
stos
mov
mov
mov
push
je
cmp
mov
push
sbb
call
outsb
test
jg
lods
push
mov
ret
fists
stos
cltd
jle
sub
xor
lea
jmp
imul
jno
les
addr16
stc
jne
jns
add
loop
insl
repz
or
fidivs
insl
mov
or
hlt
lret
notl
scas
jmp
mov
loope
daa
std
clc
pop
call
jl
aad
mov
xchg
mov
pop
pop
and
mov
dec
and
int3
hlt
les
inc
imulb
add
imul
daa
cmp
sub
cmp
jle
pop
rcll
push
in
cmpsb
jae
js
push
repnz
lock
adcb
cmc
add
xchg
shl
or
js
adc
fimull
xchg
mov
pop
rcrb
dec
lds
xchg
cltd
push
clc
cmpb
mov
push
ss
loop
mov
mov
xor
push
sub
out
and
cld
jecxz
push
sti
cmp
push
hlt
in
sahf
adc
arpl
lret
sbb
orl
sarb
shlb
jl
dec
dec
std
lahf
nop
icebp
sbb
pop
push
cmp
jne
fwait
xchg
inc
mov
scas
sbb
jmp
into
cmp
jnp
test
dec
call
in
xchg
adc
pop
fsts
lods
jbe
cmp
lahf
or
je
cmpsb
insb
test
in
lret
mov
leave
fidivrs
es
add
test
or
add
int
mov
je
dec
adc
sti
inc
fdiv
test
mov
cmp
sbb
imul
pop
dec
aaa
adc
out
push
mov
movsb
sbb
and
cli
cmp
mov
push
incl
push
xchg
cmp
jp
loope
push
xlat
ret
pop
adc
push
inc
mov
pop
jge
mov
sub
jecxz
or
aaa
push
sarl
je
sbb
pop
fs
pop
inc
inc
sub
push
xor
ds
sbb
inc
jl
fisubrl
ja
cmp
mov
ret
adc
daa
mov
sbb
jp
cs
ljmp
dec
jno
gs
cmp
or
sbb
nop
cmp
adc
cli
sbb
scas
push
push
pushf
or
sub
pop
jb
inc
mov
or
push
shlb
std
xor
mov
jl
and
push
imul
inc
popa
pop
sarl
jno
fsubrs
pop
dec
inc
fbstp
loope
cmc
dec
mov
inc
fidivrl
aad
xor
cltd
scas
lret
sbb
out
les
fs
mov
mov
add
mov
stos
iret
jmp
jecxz
gs
xor
movsl
mov
cmp
adc
cltd
int
mov
orl
pushf
out
jecxz
in
loopne
and
sbb
insb
inc
dec
jmp
and
cmp
mov
icebp
icebp
pop
mov
push
dec
hlt
out
aad
or
stos
xor
leave
cltd
mov
push
test
das
pop
jl
xchg
xchg
mov
scas
mov
int
add
and
xlat
in
sub
pop
rep
xlat
lret
das
cmc
jnp
cmp
mov
cmp
loopnew
pop
xchg
fucompp
pop
cmovbe
mov
pop
push
ss
sbb
loop
mov
mov
jo
mov
data16
mov
cltd
push
outsl
xor
adc
stos
scas
sub
add
or
mov
cmpsl
loope
mov
xor
arpl
rolb
sti
xchg
outsl
jae
push
incb
ljmp
xor
std
loop
test
lret
aad
ja
das
insl
xor
ja
rolb
sub
decl
sub
push
leave
jge
xlat
xchg
cmpsl
xor
je
cs
clc
cwtl
cmp
jno
mov
push
push
push
ds
adcl
jp
popf
mov
push
or
test
jb
mov
push
mov
add
mov
dec
nop
rorb
mov
sub
sbb
stos
repnz
mov
xchg
in
int
popf
fisttps
mov
jge
jnp
test
mov
sbb
mov
cs
sahf
mov
xor
cmpl
jbe
cmc
ljmp
insl
dec
fnstenv
stos
xchg
sbb
not
xor
pop
into
mov
jmp
mov
lock
ror
mov
jae
enter
aam
ret
popa
scas
dec
lcall
cmp
ret
cmp
fmul
sarb
add
push
push
sahf
iret
mov
pop
mull
inc
imul
cmc
sbb
push
dec
aas
sub
cmp
clc
pop
or
inc
repz
cmp
xor
shll
and
and
fwait
repz
iret
pop
lds
sarb
data16
fsub
mov
push
loopne
jne
and
mov
and
mov
push
push
push
push
call
push
push
jmp
into
cmc
je
xor
mov
jb
sub
test
add
push
or
push
adc
pop
lock
movsl
aaa
int3
cmc
pushf
push
jge,pn
xor
pmaddwd
test
or
cmpsb
fildl
xor
addr16
outsb
mov
sbb
xchg
sbb
fadd
repz
testl
test
in
xor
and
push
and
xlat
mov
ja
js
lock
je
sub
fistps
or
fmulp
scas
pop
xchg
scas
sbb
xchg
xchg
pop
das
repnz
out
mov
movl
shrl
popf
orl
dec
mov
push
out
xlat
jge
sbb
mov
lock
js
out
mov
clc
addr16
pusha
mov
mov
cmpl
imul
loope
test
int3
cli
mov
push
adc
lds
data16
rcrl
dec
xchg
int
fistpll
iret
inc
mov
push
push
call
mov
mov
add
mov
adc
mov
and
mov
and
mov
cmp
jne
cmp
je
movl
movl
mov
mov
push
push
push
push
call
xor
xor
or
or
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
xor
shr
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movb
movb
movb
movb
mov
movzbl
mov
movzbl
shl
cltd
idiv
mov
movzbl
movzbl
or
mov
movzbl
cltd
idiv
mov
movzbl
movzbl
cltd
idiv
movzbl
and
mov
movb
movb
mov
mov
add
add
mov
imul
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
adc
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
mov
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
adc
push
push
push
push
call
mov
mov
mov
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
xor
mov
mov
add
mov
shrd
xor
shl
shr
or
xor
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
mov
imul
mov
imul
xor
or
mov
mov
xor
mov
and
sub
xor
xor
add
div
mov
jmp
movl
mov
movl
movl
mov
mov
or
xor
mov
sub
xor
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
imul
sub
imul
xor
add
mov
mov
xor
mov
and
sub
xor
xor
mov
div
mov
sub
mov
add
xor
add
mov
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
incl
push
orl
push
xor
add
mov
sub
push
adc
mov
cmpl
movzbl
movl
mov
movzbl
jmp
movl
movl
jbe
pushl
pushl
call
xor
add
mov
sub
xor
add
inc
movzwl
or
mov
and
sbb
mov
addl
shrd
cmpl
movl
movzbl
jmp
mov
mov
jbe
pushl
call
add
addl
movzwl
sub
inc
movzwl
sbb
shr
mov
mov
xor
mov
or
mov
mov
cmpl
movl
movl
movl
jmp
movl
ja
pushl
push
push
call
sub
mov
xor
sub
or
and
xor
or
sbbl
mov
mov
xor
mov
shl
mov
subl
shrd
cmpl
mov
mov
mov
mov
jmp
mov
mov
jne
push
push
pushl
call
mov
mov
sub
imul
subl
mov
and
mov
and
mov
adc
xor
shr
mov
mov
cmpl
mov
mov
jmp
mov
mov
jle
push
push
call
mov
sbb
and
or
neg
adc
add
xor
xor
add
or
cmpl
not
mov
mov
jmp
movl
mov
jg
push
call
mov
and
xor
add
orl
subl
and
sbb
mov
sbb
mov
xor
mov
mov
adc
mov
dec
mov
adc
mov
neg
mov
cmpl
mov
not
movl
jmp
mov
mov
jbe
pushl
call
or
sub
xorl
add
adc
dec
movzwl
sbb
mov
and
mov
xor
mov
andl
shl
sbb
xor
add
shld
mov
xor
mov
shl
adcl
mov
neg
xor
cmpl
mov
mov
movl
mov
jmp
movl
jg
pushl
call
and
or
sbbl
inc
subl
mov
xor
sbbl
xor
movl
inc
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
je
mov
mov
sub
and
mov
and
mov
xor
adcl
shld
or
shl
cmpl
mov
mov
movl
jmp
mov
movl
jge
push
push
push
push
push
push
push
call
adcl
movzbl
adc
sbb
and
mov
adc
adcl
xor
mov
xor
or
sbb
mov
mov
xorl
xor
movl
cmp
jne
movl
cmp
je
add
mov
mov
cmpl
mov
movzbl
notl
mov
jmp
mov
ja
push
push
pushl
push
push
push
pushl
call
orl
adc
and
orl
xorl
xor
shl
mov
sbbl
xor
addl
shr
or
adc
mov
mov
sub
mov
mov
mov
sub
xor
mov
subl
mov
mov
xor
or
sub
xor
mov
push
and
pop
orl
sub
cmpl
movl
mov
mov
jmp
movl
jg
push
push
push
push
push
call
adc
sbb
xorl
orl
sub
sub
xor
mov
sub
mov
notl
add
subl
mov
addl
lea
not
mov
mov
mov
xor
xor
shr
shl
or
mov
movl
mov
mov
xor
xor
shr
shl
or
push
lea
push
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shr
inc
xor
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
movl
mov
xor
mov
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
or
mov
mov
andl
or
mov
mov
jne
mov
movl
mul
ret
andl
push
cmpl
mov
movl
mov
movl
jmp
movl
movl
jg
push
pushl
pushl
pushl
call
and
sbbl
subl
sbb
andl
sbb
and
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
imul
add
xor
add
mov
mov
sub
imul
add
xor
div
mov
mov
jmp
movl
movl
movl
movl
mov
mov
or
mov
imul
add
xor
mov
div
mov
mov
xor
sub
mov
mov
mov
xor
sub
mov
sub
mov
add
mov
mov
sub
and
add
xor
mov
div
xor
add
mov
mov
sub
imul
add
div
mov
xor
mov
sub
mov
and
or
sub
xor
mov
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
xor
push
push
call
mov
movzbl
push
call
test
jne
xor
movl
jmp
cmpl
movl
mov
mov
jmp
mov
jne
pushl
pushl
push
push
pushl
call
xor
and
xor
or
sub
or
sbbl
cmpl
movl
mov
mov
jmp
mov
mov
jg
pushl
pushl
call
andl
xor
and
adc
adcl
xor
xor
xor
or
sub
sub
mov
adcl
movl
movl
xor
movl
cmpl
mov
mov
notl
jmp
mov
jl
pushl
push
call
inc
mov
xor
mov
inc
and
sub
movl
mov
mov
adc
movl
add
movl
mov
add
movl
orl
push
add
movl
cmpl
not
notl
jmp
mov
jl
pushl
call
or
xor
xor
adc
andl
mov
cmpl
movl
not
not
movl
jmp
mov
mov
jg
call
xor
subl
orl
sbb
xor
xor
or
or
mov
push
subl
push
push
sbbl
call
xor
mov
mov
push
adcl
push
xorl
push
xorl
push
call
notl
mov
adcl
mov
addl
add
mov
adc
adc
mov
orl
xor
or
mov
adc
xor
mov
adc
movl
add
movl
or
movl
cmpl
movzwl
movl
jmp
movl
je
push
push
push
call
inc
add
mov
xor
adc
add
xor
movl
xor
or
mov
sub
xor
movl
cmpl
movl
mov
jmp
notl
mov
jg
push
push
call
adc
and
sub
sbb
add
sbb
mov
mov
or
push
movl
mov
add
mov
sbbl
push
adcl
push
push
andl
call
sbbl
mov
mov
push
push
xorl
push
andl
push
sbbl
call
mov
sbb
mov
sbbl
xor
mov
xor
mov
and
mov
movl
xor
xor
cmp
jne
movl
cmp
jne
sbb
movl
cmpl
mov
mov
jmp
notl
jb
push
pushl
pushl
push
call
xor
and
add
add
movzwl
add
mov
cmpl
not
mov
movl
movl
jmp
mov
jae
push
push
pushl
push
call
adc
and
mov
sub
sbb
movzbl
or
or
and
movl
movl
mov
cmpl
movl
mov
mov
movl
jmp
movl
movl
jle
push
push
push
call
incl
adc
and
adcl
xor
imul
and
xor
sbbl
mov
div
sub
pushl
cmpl
mov
movl
mov
jmp
mov
movl
jae
pushl
push
call
sbb
movzwl
and
mov
add
xor
mov
mov
or
sbb
addl
xor
xor
adcl
and
xor
subl
pushl
mov
cmpl
mov
mov
jmp
movl
movl
jg
push
call
sbb
sbb
addl
or
or
xor
adc
push
pop
div
cmpl
mov
movl
mov
jmp
movl
movl
jl
pushl
push
pushl
call
and
and
movzwl
sub
not
mov
or
mov
addl
sub
add
imul
subl
and
adcl
xor
pushl
notl
pushl
pushl
andl
pushl
andl
pushl
subl
call
cmpl
mov
mov
jmp
movl
mov
jne
push
pushl
pushl
call
xorl
sub
mov
mov
adc
orl
sub
sbb
xor
movl
movl
xor
or
mov
sub
or
mov
addl
mov
sub
xor
mov
xorl
xor
xor
movl
div
imul
xor
orl
pushl
pushl
call
decl
movl
adc
mov
movl
movl
sub
mov
cmpl
movl
mov
mov
movl
jmp
movl
movl
jb
push
push
push
pushl
push
push
push
pushl
call
add
adc
add
xor
xor
or
mov
sbb
mov
mov
adc
mov
mov
mov
push
push
xor
xor
adcl
push
xorl
push
call
xorl
add
mov
movl
adc
adcl
mov
movl
movl
movl
movl
dec
movl
jne
sbb
mov
not
mov
subl
mov
addl
mov
movl
movl
mov
call
add
lea
or
mov
lea
mov
sub
mov
mov
sub
mov
mov
mov
mov
addl
xor
xor
xor
shl
and
shr
movzbl
add
or
mov
mov
lea
xor
add
xor
mov
mov
mov
mov
sub
or
mov
or
mov
mov
add
shrd
sub
shr
mov
mov
adc
mov
mov
xor
subl
xor
or
xor
mov
push
pushl
lea
push
adcl
shl
addl
call
orl
lea
subl
push
mov
subl
mov
movl
lea
sbbl
push
xorl
mov
orl
lea
mov
orl
mov
sbbl
mov
addl
push
sbbl
call
push
andl
push
pushl
call
add
mov
mov
mov
sub
or
mov
and
mov
sub
mov
movzwl
sbb
shr
xor
or
sub
shl
or
cmpl
movl
movl
movl
jmp
movzwl
movl
jne
pushl
pushl
pushl
pushl
pushl
push
call
xor
xor
xor
mov
add
addl
mov
xor
mov
adc
lea
cmpl
mov
not
movl
jmp
mov
mov
jb
pushl
push
push
call
sbb
mov
xor
or
sub
or
mov
mov
xor
subl
movzwl
add
mov
lea
mov
mov
sub
lea
xor
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
xor
mov
mov
or
mov
shl
xor
or
mov
mov
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
incl
push
movl
cmpl
movl
mov
mov
jmp
mov
movl
jae
pushl
call
adc
sub
andl
and
mov
and
xor
or
mov
sub
and
movl
adcl
movl
mov
mov
sub
add
mov
cmpl
movl
movl
jmp
mov
mov
jbe
push
call
addl
addl
orl
adcl
mov
xor
subl
div
cmpl
movl
mov
jmp
movl
movl
jle
pushl
push
call
xor
incl
add
and
dec
xorl
sub
cmpl
movl
movzwl
jmp
notl
jbe
push
push
pushl
push
pushl
push
pushl
call
xor
or
adc
sub
mov
mov
sub
mov
sbb
mov
imul
mov
sbbl
xor
and
dec
mov
xor
div
sub
mov
and
mov
movl
movl
movl
movzwl
sbb
mov
mov
xor
or
add
add
xor
xor
orl
imul
mov
adc
mov
mov
and
sub
mov
xor
xor
sub
or
mov
movl
movl
cmpl
mov
mov
mov
jmp
movl
ja
push
pushl
pushl
call
and
mov
add
add
movl
adc
sbb
movl
movl
and
mov
movl
imul
cmpl
mov
not
movl
jmp
mov
jg
call
xor
dec
sbbl
and
and
mov
adc
imul
imul
sbb
mov
andl
and
cmpl
mov
movzbl
mov
movl
jmp
mov
mov
jne
push
push
pushl
push
call
xorl
decl
adcl
adcl
sbbl
or
mov
xor
mov
mov
lea
cmpl
movl
mov
jmp
movl
movl
jg
push
pushl
push
push
pushl
push
call
and
adc
mov
adc
mov
addl
and
and
or
mov
movl
mov
mov
sub
add
movl
movl
mov
movzbl
adc
mov
xor
movzwl
sub
mov
mov
incl
or
cmpl
not
mov
mov
jmp
movl
movl
jle
push
call
xor
or
sbb
mov
xor
inc
orl
addl
negl
mov
or
cmpl
mov
mov
jmp
movl
ja
push
pushl
call
adc
inc
adc
mov
adc
xorl
add
adc
mov
or
cmpl
not
not
mov
movl
jmp
movl
movl
jne
call
mov
xor
sbbl
notl
xor
xor
xor
sbb
subl
add
xor
not
mov
cmpl
not
mov
movl
jmp
movl
jb
push
call
orl
mov
sbb
inc
adcl
movl
sub
movl
movl
mov
add
mov
sub
orl
mov
lea
cmpl
mov
mov
jmp
movl
jne
push
call
inc
mov
sub
orl
movl
adcl
incl
cmpl
mov
mov
notl
jmp
movl
jbe
pushl
push
call
add
xor
add
notl
mov
sub
mov
or
and
sub
mov
mov
adc
mov
movl
movl
not
mov
or
add
imul
mov
imul
notl
xor
cmpl
mov
movl
movzwl
jmp
movl
je
push
pushl
call
and
subl
subl
sub
inc
cmpl
mov
movl
mov
jmp
movzwl
jg
push
push
push
push
call
mov
sub
not
sub
sbb
mov
or
mov
div
cmpl
mov
movl
movl
mov
jmp
movl
jg
pushl
call
xor
mov
or
mov
and
subl
add
and
adc
sub
andl
sub
subl
mov
movl
cmpl
not
mov
mov
jmp
movl
movl
ja
pushl
push
push
call
add
addl
sbbl
adc
not
mov
sbb
mov
sbbl
movl
cmpl
mov
mov
not
jmp
mov
jb
pushl
push
call
xor
addl
xorl
adc
mov
mov
add
xorl
mov
adc
movl
mov
mov
movl
xor
sbbl
div
movl
imul
inc
add
mov
subl
xor
andl
xor
subl
mov
xorl
div
xor
or
adc
xor
mov
movl
subl
movl
addl
movl
xor
add
xor
xor
sub
xor
mov
xor
mov
sub
shr
sub
cmpl
movl
notl
jmp
notl
movl
jl
pushl
push
pushl
call
xorl
andl
subl
orl
movl
xor
xor
and
mov
mov
imul
mov
orl
and
or
mov
orl
sub
xor
or
add
mov
mov
movl
movl
mov
or
mov
or
cmpl
mov
mov
jmp
mov
jl
pushl
call
or
sub
xor
or
subl
sub
xor
mov
cmpl
movzwl
mov
mov
jmp
movl
movl
jne
pushl
pushl
pushl
push
push
call
or
xor
sub
xor
xor
and
mov
sub
and
xorl
movl
movl
cmpl
movl
movl
jmp
mov
jb
push
pushl
pushl
pushl
pushl
pushl
call
and
orl
andl
sbb
or
movl
movl
xor
movl
sub
movl
xor
movl
mov
xor
add
mov
sub
add
mov
imul
mov
sbb
imul
mov
or
mov
adcl
lea
andl
push
call
mov
xor
add
sub
mov
mov
notl
imul
adc
add
cmpl
mov
movl
not
mov
jmp
movzbl
jl
push
call
mov
add
adcl
movzbl
or
xor
or
xor
orl
and
sub
cmpl
movl
mov
jmp
movl
ja
push
pushl
push
pushl
push
push
call
sbb
or
and
movzwl
sub
mov
mov
adc
mov
addl
xor
andl
mov
xorl
div
xor
mov
mov
sub
add
add
mov
movl
movl
movl
movl
cmpl
mov
not
notl
jmp
not
je
push
push
call
adcl
dec
mov
mov
sub
or
adc
xor
cmpl
mov
movl
jmp
movl
jge
pushl
push
call
sbbl
sub
sbb
mov
mov
sub
and
xor
sbb
addl
movl
movl
movl
xor
movl
adc
movl
movl
movl
or
movl
mov
mov
cmpl
mov
movl
movl
jmp
movl
notl
jl
pushl
call
add
adc
and
adc
and
mov
cmpl
mov
not
mov
jmp
movl
jbe
push
push
push
pushl
call
neg
mov
sub
sub
decl
sbbl
and
neg
sub
sub
imul
mov
sub
lea
mov
xor
mov
mov
sub
mov
movzbl
adc
xor
add
cmpl
mov
not
mov
movl
jmp
mov
je
push
push
call
addl
mov
and
mov
sbb
not
sub
incl
mov
lea
mov
or
and
mov
sub
inc
add
xorl
mov
movl
cmpl
mov
mov
mov
not
jmp
mov
movl
jg
pushl
push
call
mov
sub
mov
movzwl
or
subl
xor
add
adc
movl
mov
mov
sub
sub
movl
movl
mov
mov
mov
sub
or
mov
mov
adcl
xor
xor
sbbl
mov
call
mov
mov
mov
and
mov
xor
xor
orl
mov
sbbl
call
xorl
or
cmpl
movl
movl
jmp
movl
mov
jl
push
pushl
pushl
call
subl
adcl
andl
sbbl
addl
xorl
or
mov
movl
mov
xor
xor
addl
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
andl
push
cmpl
movl
movl
movl
movl
jmp
movl
jle
push
push
push
push
pushl
push
call
subl
orl
subl
andl
subl
sbbl
addl
sub
mov
or
jne
mov
cmpl
mov
mov
movl
mov
jmp
mov
movl
jl
push
push
call
xor
adc
adcl
xor
neg
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
subl
cmpl
je
mov
xor
add
sub
xor
add
mov
mov
mov
pop
pop
pop
leave
ret
cmp
jae
movl
cmp
jae
adcl
shld
movl
shl
ret
mov
xor
orl
and
shl
ret
xor
xor
ret
