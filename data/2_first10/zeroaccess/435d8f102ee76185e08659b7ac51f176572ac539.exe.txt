push
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
or
mov
orl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
incl
add
movzwl
adc
mov
mov
mov
sub
movb
and
lea
sbb
mov
xor
xor
adc
mov
mov
mov
sub
mov
xor
xorl
sub
mov
adcl
movl
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
sub
push
and
movl
mov
push
mov
or
xor
andl
mov
subl
push
andl
add
jmp
mov
mov
inc
movl
cmp
movl
jb
mov
xor
add
movl
jmp
adc
mov
sbb
mov
subl
xor
xor
mov
andl
add
addl
movzwl
sbbl
mov
subl
mov
xorl
movzwl
orl
xor
sbbl
add
mov
mov
mov
movzbl
inc
mov
movl
cmp
movl
jne
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
push
pushl
call
mov
dec
mov
jmp
xorl
mov
addl
xor
orl
add
mov
sbbl
mov
xor
add
mov
movl
movl
movl
mov
mov
movl
jmp
movzbl
sbb
mov
xor
xor
or
mov
mov
xor
movl
xor
addl
sub
subl
sub
xor
or
sub
xor
mov
mov
mov
lea
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
and
mov
or
mov
sbbl
lea
inc
mov
mov
mov
subl
lea
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
xorl
lea
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
mov
mov
lea
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
or
mov
andl
mov
lea
mov
xor
mov
xor
add
jne
movl
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
orl
mov
orl
xor
addl
xor
sub
sub
xor
movl
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
jmp
cmpsl
js
movsb
mov
je
stos
push
cltd
jecxz
bound
bound
pop
bound
xor
cmp
jns
jbe
dec
movsl
jb
jno
fld
std
dec
push
jae
inc
mov
scas
inc
push
cmp
loop
data16
lcall
hlt
xor
dec
and
std
pop
int
xor
test
mov
clc
cmp
mov
mov
mov
idivb
push
arpl
push
jne
and
stos
adc
cmp
mov
dec
ret
adc
and
jmp
fwait
into
or
divl
mov
add
retw
sti
lret
xor
or
and
or
mov
bound
mov
fnsave
mov
mov
ds
aaa
cmc
cwtl
fs
scas
push
fisttpl
dec
cltd
mov
stos
mov
cmp
xchg
ret
pop
mov
adc
insl
outsl
push
jb
xchg
sub
sub
leave
popf
sbb
loop
pop
out
nop
std
and
mov
add
insb
adc
xor
sarb
add
pusha
xor
vmovapd
fwait
enter
fwait
cld
sbb
sub
adc
xor
push
cmp
loope
xor
mov
lock
int3
insl
xor
rcrl
push
rorb
lods
repz
sub
inc
mul
fistl
add
lods
pop
push
jl
jmp
mov
jo
jmp
cmp
into
scas
or
and
jl
add
mov
loope
pop
pushf
lret
cmp
arpl
adc
cmpsl
loopne
inc
ljmp
lea
inc
jge
mov
adc
in
push
cmpl
lret
cmp
repnz
xor
sbb
test
lea
sub
mov
clc
int3
xor
in
sti
adc
lahf
popf
push
out
mov
mov
cltd
xchg
lods
aam
mov
shll
imull
divps
pop
in
shl
mov
sbb
incb
imul
adc
push
cwtl
push
stos
rorb
insl
ror
dec
push
jge
in
add
xor
mov
cmpsb
pop
and
mov
gs
mov
mov
adc
lahf
loopne
and
call
mov
jmp
jl
sti
idivl
mov
jns
or
and
std
xchg
inc
aam
xor
icebp
invd
cmp
dec
int
xor
mov
repnz
cs
dec
in
xor
mov
je
sbb
out
jmp
jg
push
push
sbb
shr
aaa
sub
add
add
jb
or
sbb
add
stos
test
fisubrs
mov
push
adc
adc
pushf
push
and
pop
in
mov
test
xchg
xlat
clc
pushf
ljmp
imul
cmp
leave
cmpsl
sbb
in
and
aam
pop
push
pop
mov
xor
pop
cmp
daa
mov
adc
iret
jbe
pop
loopne
cld
jne
add
inc
pop
fwait
adc
test
stos
and
push
frstpm(287
cmp
bnd
clc
fidivl
iret
xchg
fwait
xorb
xor
xchg
pop
ret
xchg
hlt
pop
push
or
adc
push
xchg
mov
sbbb
frstor
rorb
and
mov
pop
jge
pop
xor
lcall
inc
pop
xlat
adc
sub
sbb
xchg
adc
fimuls
hlt
imul
sahf
mov
sbb
xor
sti
cmc
int3
int
loop
mov
pop
fmulp
ds
xor
xor
add
test
xor
es
push
je
mov
jnp
sub
cmpsl
pop
or
xchg
add
inc
add
push
shlb
sbb
popa
in
jge
mov
cmp
insl
jle
push
ret
arpl
shlb
push
enter
dec
mov
push
stos
inc
jg
push
adc
ret
pop
inc
push
jne
fwait
xchg
or
push
or
pop
mov
fnsave
out
dec
mov
pop
xor
mov
pop
cmp
flds
xor
cltd
mov
es
jecxz
add
leave
mov
or
and
push
push
adcb
inc
shll
cmpsb
fld
cmp
add
push
cmpb
scas
outsb
push
aam
push
leave
adc
sbb
es
cmc
loopne
mov
sbb
bound
add
xchg
cmp
mov
cltd
adc
mov
ret
iret
add
cmp
push
stc
lods
jo
cwtl
mov
xor
xchg
pop
mov
fcomps
push
jo
and
and
adc
inc
dec
or
cwtl
inc
jl
rcll
dec
mov
aad
mov
imul
pop
inc
data16
iret
add
cld
loop
popf
sbb
insb
inc
js
sbb
mov
push
or
pop
adc
and
lea
icebp
int
dec
jp
dec
imul
xchg
mov
cmc
std
out
adc
cli
or
push
popf
stos
mov
out
int3
sti
stc
sti
ficoml
add
ror
push
popf
push
dec
sub
cltd
dec
xchg
sbb
cmp
test
lahf
xor
add
sbb
ss
aad
and
sub
dec
ds
sub
or
mov
fbstp
stc
mov
dec
xor
jne
push
repz
in
testb
push
lds
fldcw
sub
xor
aaa
rclb
sbb
cmp
xorb
ja
jae
add
flds
xchg
cs
sahf
pop
repz
adc
jl
stos
xor
mov
xbegin
scas
mov
pushl
mov
leavew
pop
cmp
or
lret
divl
in
divb
cmp
hlt
mov
in
push
inc
or
jnp
sub
sbb
ficoml
lds
arpl
xor
and
rolb
mov
andl
je
and
and
loopne
add
pop
lahf
std
mov
add
dec
pop
lods
loope
add
jb
pop
cmpsl
adc
push
data16
pop
push
popa
lahf
outsb
cmp
lods
sbb
xor
add
out
or
lds
xchg
cmp
sbb
shll
mov
data16
mov
int
addb
arpl
add
jg
or
lret
sbb
outsl
nop
dec
jo
mov
hlt
mov
jmp
out
mov
xor
xchg
hlt
mov
push
inc
rclb
jne
movsl
jle
rep
cld
cmc
cltd
xchg
mov
mov
mov
cwtl
les
lret
out
sbb
cmp
popf
mov
add
or
jg
leave
mov
fadds
or
push
add
or
adc
mov
sub
cmc
iret
setne
sbb
pop
out
push
lahf
sbb
rcrb
jg
icebp
jmp
sarb
add
jge
clc
xchg
xor
and
lods
nop
cli
push
xor
enter
repz
hlt
dec
mov
mov
push
in
in
shl
push
fcom
loopne
outsb
fsubr
mov
jo
bound
fidivrs
adc
lea
fdivr
and
adc
mov
mov
mov
arpl
xor
cmp
jno
fiaddl
in
pop
stos
bound
or
jne
fucom
or
jmp
mov
lods
inc
or
and
pop
sub
ror
lret
inc
imulb
and
adc
cmp
cmp
movsl
pusha
dec
jg
mov
xor
btr
sahf
mov
mov
xchg
sub
adcl
xor
add
sbb
xchg
jne
andb
pushf
mov
das
in
pop
jg
xor
jl
outsl
popf
and
adc
cld
jnp
jne
jae
out
xor
loop
in
mov
cwtl
in
push
in
imul
dec
add
jns
mov
cmp
shrb
loopne
in
loop
mov
and
dec
clc
push
xchg
movsb
loope
inc
mov
pushf
inc
push
dec
jno
cmp
dec
fs
push
adc
jecxz
jp
adc
lods
pop
inc
shr
rclb
jne
xor
adc
jge
mov
pop
stc
stos
out
outsb
out
in
jg
jnp
mov
lret
sti
mov
add
popf
repz
jge
fcoms
mov
pop
jno
enter
out
daa
or
stc
fnsetpm(287
addr16
xacquire
jp
mov
sbb
call
mov
popa
pop
test
mov
push
jnp
sub
inc
cmp
inc
insl
sub
test
nop
add
xlat
mov
push
jb
movsb
mov
lods
das
xchg
hlt
push
popa
xchg
or
add
fistl
mov
and
fwait
pushf
dec
lods
push
test
jge
or
push
int
cs
ds
push
pop
std
sarb
push
xchg
jnp
fmull
pop
or
popa
out
dec
movsl
ds
cmp
push
sbb
push
jge
sub
cli
add
dec
shll
sarb
daa
int
jmp
outsb
push
aad
sub
push
add
ljmp
cmc
mov
aaa
inc
je
jle
inc
dec
ret
ret
and
xor
shlb
std
sub
test
xchg
pop
push
xor
scas
lahf
cmc
repnz
xor
mov
stos
xchg
pop
cli
cltd
adc
cmp
push
jnp
mov
fs
icebp
cs
int3
and
add
mov
sub
and
mov
xchg
add
ret
insb
clc
lret
xchg
ss
cmp
or
adc
scas
fdivr
rcrb
mov
jp
dec
fcmove
push
into
xor
xchg
sub
add
rclb
addr16
pop
sbb
inc
mov
ss
lods
mov
xor
fwait
sub
add
jg
add
cmp
sarb
movsb
lds
in
std
jg
cmp
cmp
cltd
jbe
lahf
imul
data16
aas
imul
mov
jb
mov
enter
xor
dec
jge
xchg
adc
mov
std
and
pop
push
push
enter
mov
loop
jnp
push
fisubrl
jp
std
cltd
enter
cmp
roll
daa
pop
shl
push
repz
xorl
dec
aaa
das
popf
jg
test
shrl
cmp
inc
lcall
les
or
jge
test
call
std
lods
add
add
fcoml
xor
xchg
je
sub
ret
inc
inc
sbb
lock
aad
jp
repz
adc
mov
adc
rcrb
mov
fbld
sbb
loope
push
xor
dec
insb
bound
mov
sub
scas
add
ss
cmpsb
mov
sub
inc
pushf
xorb
fildl
ret
and
mov
mov
dec
push
xchg
mov
std
and
adc
adc
jne
ja
ret
push
sbb
inc
mov
gs
jge
sbb
pop
movsb
scas
mov
mov
aas
mov
fs
and
adc
icebp
xor
xlat
outsb
pop
inc
lds
rcll
push
inc
fbld
imul
aad
in
and
sub
pop
mov
mov
scas
out
or
stos
mov
jns
xor
ljmp
lods
add
fucom
inc
in
mov
je
mov
push
pop
push
sarb
inc
mov
aam
sub
inc
scas
int3
or
sbb
daa
loope
leave
mov
sub
popf
fwait
mov
inc
daa
pushf
mov
mov
cmp
fdivl
dec
adc
int
xchg
sbbb
inc
sarl
push
push
xchg
rorl
cli
mov
int
stc
test
cmp
int3
push
lret
inc
mov
lock
lret
repnz
pop
in
pop
cmp
hlt
xchg
in
jnp
xchg
loopne
and
add
dec
xor
jl
adc
daa
inc
test
mov
pop
or
fsubrl
dec
xor
insb
out
push
dec
dec
cmp
push
dec
bound
mov
sub
pushl
mov
pop
mov
xchg
data16
adcl
mov
pop
add
cmp
loopne
add
mov
lock
sub
sbb
sub
and
jnp
bnd
mull
inc
push
dec
jb
popa
outsl
pop
stos
xor
insb
pushf
xlat
jo
test
xchg
cmp
mov
jl
adc
and
mov
test
addr16
dec
push
mov
xchg
shrb
push
stc
inc
sbb
outsb
cltd
mov
xchg
roll
mov
xchg
jecxz
mov
add
cmp
mov
xchg
lret
mov
sti
stos
aaa
scas
mov
xor
loop
xor
cmpsl
in
add
dec
int
mov
adc
dec
add
xchg
sub
jg
pop
xchg
xchg
aas
incl
pop
cmp
sbb
push
push
call
jmp
and
dec
lea
dec
loope
andb
je
mov
shl
or
adc
iret
cmp
mov
mov
outsl
mov
fidivl
push
mov
ds
out
cmpsl
fmul
add
mov
std
or
jae
fstpl
dec
fisttpll
neg
mov
xchg
jecxz
loopne
jnp
adc
andb
arpl
aad
pushl
lret
mov
cmpsb
add
jb
and
out
inc
or
mov
pop
ret
push
pop
arpl
mov
stos
lock
fs
mov
test
iret
rorl
add
sub
fbstp
arpl
dec
clc
mov
pop
xor
xorl
testl
xorl
cmp
imulb
cmp
inc
mov
dec
out
imul
sbb
aam
cs
orb
pusha
ljmp
loopne
xor
xchg
aam
in
or
call
push
xchg
xchg
jl
iret
cmp
adc
adc
or
orb
add
orl
jne
xchg
aad
dec
xchg
das
insb
mov
xor
push
clc
xchg
adc
into
xor
mov
dec
add
scas
cltd
test
push
es
push
cmp
rorl
cmp
call
les
addl
ret
pushf
mov
std
jecxz
iret
pop
push
ret
push
jmp
in
jns
and
push
lret
push
nop
add
fucom
stos
insl
repnz
add
lods
aas
negb
jmp
mov
pop
shll
push
popf
in
insl
xlat
sbb
fcoml
push
cwtl
and
leave
lret
leave
int3
clc
cwtl
mov
enter
push
jnp
lret
push
sbb
jecxz
jp
xor
andl
mov
pop
into
push
mov
xor
cwtl
int3
cs
mov
adc
fidivrs
inc
rcl
dec
jns
lods
hlt
iret
add
pop
jnp
cld
pop
lret
or
ret
pop
test
xchg
repz
mov
inc
fnsave
into
add
jle
and
fildl
mov
xchg
and
mov
cld
pushf
and
sbb
cmp
jp,pt
in
cltd
sahf
sub
xchg
insb
sub
push
in
cmp
or
jecxz
push
fs
dec
inc
jmp
out
outsl
cmp
sub
dec
pushl
call
cli
and
inc
inc
add
xchg
inc
adc
ja
push
push
orb
inc
cmpsb
icebp
or
mov
cld
or
jge
iret
sbb
jno
jg
es
mov
shlb
cmp
push
aad
movsb
and
cmpsb
sub
inc
jnp
out
add
sbb
inc
call
cmp
xor
into
std
push
add
mov
xor
pop
or
inc
fwait
mov
add
add
ficoml
push
std
dec
and
out
pop
push
or
lcall
jge
sub
lock
outsb
inc
jge
mov
xchg
lcall
jnp
mov
movsl
jle
mov
and
jl
cmp
mov
dec
ds
in
arpl
lret
or
in
cmpsw
pop
stos
mov
mov
mov
les
push
scas
cmp
ficoml
aad
es
punpckhdq
fsubs
sub
adc
xchg
sbb
mov
and
std
popf
pop
psubw
mov
mov
jmp
xchg
xor
pop
stos
lods
mov
out
pop
pop
pop
dec
notb
push
in
pop
or
in
dec
xchg
cmpsl
push
fcmovbe
stos
aaa
int
mov
pop
add
cwtl
fsts
pop
mov
jge
adc
or
sbbl
andl
sub
hlt
fisttpl
mov
outsl
movsb
and
mov
loopne
xor
clc
test
jmp
dec
popa
cltd
mov
shlb
add
sbb
or
pop
xor
scas
outsl
sub
aad
cmp
inc
adc
cmpb
dec
jl
adc
imul
insl
add
mov
push
cmc
push
mov
xor
outsb
cmp
out
movsl
gs
in
lock
xlat
xchg
cmpsl
scas
nop
lcall
mov
xchg
jp
cwtl
and
mov
and
outsl
hlt
addr16
adc
aaa
int3
cwtl
pop
lods
xor
outsb
jl
shrl
or
sub
sub
push
jge
sub
or
addr16
aad
sbb
jae
das
or
xchg
inc
in
push
sub
add
push
push
push
jge
sub
or
stc
cmpsb
in
xchg
sbb
ljmp
mov
sbb
in
fisubrl
stc
pop
lea
pop
clc
cli
cpuid
pop
hlt
pop
or
pushf
lret
xchg
mov
jno
xchg
and
lahf
jnp
push
js
lret
das
mov
mov
adc
inc
fdivrp
cmpsl
ds
out
popa
push
in
lahf
xor
xor
fadd
test
icebp
push
mov
push
test
stc
mull
push
dec
data16
fdivr
fcomi
sbb
arpl
pop
ret
fcoms
les
inc
inc
sub
jge
aad
clc
jnp
jno
sub
sahf
and
ror
js
test
cmpb
or
xchg
dec
jmp
sha256msg2
jl
lds
jmp
pushl
xor
testb
mov
sub
bound
or
daa
je
shll
mov
gs
rcl
pop
dec
cs
add
aaa
lods
xor
jge
mov
or
xchg
arpl
cmp
sub
xchg
sti
aam
jecxz
out
cmpsb
test
pop
push
sub
lahf
in
lahf
in
sahf
sub
test
pusha
or
pop
dec
jmp
daa
sbb
mov
adc
imul
shll
jmp
cmp
aaa
test
popa
cli
popf
and
pop
xor
sub
dec
movsl
std
mov
adc
cmp
rol
xchg
repnz
popf
xchg
lods
hlt
std
gs
addb
push
jb
sbbb
es
inc
ja
aam
shr
and
adc
in
xchg
aaa
aam
lcall
jns
inc
xor
pop
mov
push
faddl
mov
dec
das
cwtl
test
push
xor
ficompl
push
mov
mov
push
or
aad
push
sub
inc
add
pop
jge
xchg
mov
addr16
cmp
or
js
pop
dec
ljmp
iret
int3
imul
fisubrs
add
fwait
and
cmpsb
stos
lret
fsubs
cwtl
shrl
xchg
jbe
daa
jbe
sub
daa
dec
and
out
std
fnstsw
mov
stc
cld
std
or
aad
xchg
lods
cs
popa
stc
scas
loop
fcomp
dec
cltd
fsubrl
xor
mov
pop
or
fcomps
nop
jno
js
add
dec
sub
std
sbb
int3
int
andb
jge
push
mov
push
outsl
mov
adc
pusha
iret
sub
lock
mov
inc
dec
addr16
cmc
incb
sbb
jnp
ss
adc
inc
mov
cld
cmp
and
adc
jle
sbbb
je
mov
or
jmp
decb
dec
int3
fwait
push
fld
mov
scas
push
push
outsb
je
std
dec
sbb
outsb
scas
add
adcl
insl
xor
scas
lcall
and
shrl
loope
fwait
sbb
imul
jnp
ret
notb
add
xor
cmp
cmp
aad
adc
pop
sarl
mov
sub
enter
pop
push
xchg
fnstenv
pop
leave
xchg
xchg
pop
push
sbb
ds
rorb
push
sbb
fcoms
push
cmc
arpl
push
adc
mov
dec
mov
imul
nop
outsb
adc
cltd
add
lret
fdivp
in
jne
adcl
mov
out
in
or
cwtl
mul
je
in
pop
scas
cwtl
sub
add
jo
out
sbb
xchg
pushf
lret
push
or
adc
adc
cmp
add
dec
sbb
push
jmp
push
clc
add
or
or
out
sub
loop
xor
pushf
adc
xor
fsubrs
push
push
xchg
scas
ficomps
stc
jnp
push
pop
lcall
leave
inc
in
aaa
cmc
inc
xor
cli
shl
sbb
jle
add
hlt
pop
leave
jne
and
outsb
ds
out
shrl
enter
pop
loop
push
inc
jns
push
fsubrs
int
out
dec
popf
int
mov
js
dec
and
cld
stos
pop
and
mov
loop
sub
js
pop
fistl
es
push
xor
popa
icebp
inc
cmovno
int3
sti
or
imul
push
arpl
adc
sahf
push
insb
les
shrb
cmp
stos
faddl
mov
pusha
decb
lods
dec
sahf
or
inc
or
ret
jp
inc
cmp
cmp
outsl
nop
hlt
or
push
xlat
or
cmp
xor
mov
push
inc
add
fwait
outsb
add
mov
dec
bound
mov
mov
xchg
and
test
mov
std
test
lret
popf
repz
int3
xchg
xchg
test
mov
xchg
int3
sub
scas
lods
and
xor
dec
rolb
push
sbb
adc
add
mov
nop
pushf
repz
psubw
adc
sub
add
jnp
cmp
and
shlb
mov
cli
loope
sub
jl
fdivl
pop
icebp
xchg
cli
pop
cwtl
rclb
jbe
add
mov
inc
and
push
or
std
rorl
or
or
cld
into
cmp
jge
mov
pop
es
pop
mov
mov
xchg
orl
ret
xchg
mov
sbb
les
jmp
mov
dec
dec
arpl
inc
sub
ljmp
add
pop
cld
mov
test
imul
sub
in
inc
test
mov
mov
sarb
xor
test
loopne
nop
ljmp
pushf
out
adc
sbb
mov
fmull
mov
inc
int3
push
pop
or
pop
jb
aas
dec
sbb
push
mov
inc
and
ds
cmp
sub
dec
lods
inc
test
mov
sbb
clc
ret
push
push
ja
dec
cmpsl
jae
push
jle
mov
out
rcrl
and
add
out
inc
hlt
mov
ret
sub
dec
cmp
enter
ficoms
cmp
sub
cmpsb
popf
cmp
jno
push
cwtl
push
xor
mov
mov
stos
cmp
enter
adc
fists
add
pop
mov
subl
pusha
loope
pushf
mov
das
jne
pop
xlat
lds
imul
pop
in
rcrb
cmp
adc
dec
fwait
aad
xchg
mov
pop
lods
iret
lods
jnp
mov
in
push
add
lock
xor
sub
scas
push
or
jp
pusha
pop
sub
adc
jmp
add
xchg
xchg
mov
stc
fistpll
in
ss
test
es
mov
jecxz
scas
sarl
push
jl
out
cmp
insl
cmp
sbb
std
in
std
xchg
push
mov
or
adc
mov
ja
sbb
xor
mov
mov
jle
sbb
mov
xchg
rcr
inc
mov
sbb
loop
sbb
pusha
gs
orl
decb
pop
stos
stc
lahf
pop
loope
add
imul
mov
lahf
jmp
jns
or
mov
inc
fcoms
lods
xchg
dec
stos
cmp
push
adc
jle
imul
pushf
in
mov
push
push
inc
push
hlt
jmp
fiadds
std
es
cmc
pop
shr
sub
adc
pop
test
add
stos
fdivp
push
lock
fwait
std
mov
adc
pop
dec
inc
lret
incb
cmp
mov
push
or
xchg
data16
pop
icebp
movsb
xchg
sbb
add
jge
or
shrb
jle
mov
lock
fiaddl
cmp
push
mov
ljmp
xchg
xor
inc
mov
andb
out
mov
inc
push
stc
faddp
xor
pop
scas
jno
xchg
xorb
push
xchg
push
sahf
mov
mov
dec
sarl
push
xchg
xchg
leave
mov
call
std
push
dec
and
sbb
scas
lret
pop
mov
cmp
jge
ljmp
mov
out
pop
push
jns
leave
lock
addr16
push
fs
in
pop
outsb
fsts
fs
mov
add
dec
add
mov
jge
sub
inc
divl
sub
dec
icebp
jae
int
movsl
jne
adc
mov
dec
nop
sub
and
subb
cld
xchg
pop
daa
nop
xchg
cmp
mov
push
cmp
sarb
and
mov
lret
scas
scas
pop
xchg
repnz
pop
cmp
xchg
adc
mov
add
shlb
jp
iret
jo
std
fbstp
sub
inc
add
out
sbb
pop
outsb
fisttpl
push
ret
pop
sahf
mov
outsl
shl
mov
mov
lret
mov
pushf
stos
push
or
cwtl
add
xchg
dec
sbb
or
jecxz
mov
mov
jb
fsts
movsb
movsb
ja
mov
pop
mov
xchg
scas
xchg
test
aas
fcompl
and
fdivl
cmp
sbb
pop
xor
leave
pop
dec
mov
dec
push
add
jmp
jmp
mov
sub
lret
daa
xlat
add
add
inc
ds
jecxz
loop
mov
pop
jnp
test
sbb
repnz
jecxz
xchg
sub
add
fs
inc
repz
pushf
inc
cs
xor
xchg
mov
test
mov
jns
outsb
inc
jb
ficoms
in
rcrb
adc
jo
push
cmp
in
push
subb
popa
cmp
clc
jl
nop
lcall
jns
xchg
push
adc
mov
xor
ss
mov
data16
lret
repz
adc
or
xor
mov
jle
lods
xorl
adc
sahf
popa
fs
cmovae
in
out
sub
mov
aas
rcrb
std
icebp
add
or
mov
and
push
out
mov
adc
cmpsb
test
out
add
mov
lahf
sub
mov
mov
adc
imul
insb
fcompl
sub
dec
mov
pop
mov
hlt
adc
sbb
mov
or
sahf
pop
mov
add
enter
scas
and
icebp
inc
lea
and
fucomp
dec
addl
mov
adc
pop
and
into
stos
test
mov
sti
cmp
arpl
outsb
cwtl
enter
or
inc
scas
add
imul
xor
cmc
fwait
rorb
mov
cmp
pop
inc
in
fcmovb
dec
cmp
jnp
pop
jbe
push
inc
and
imul
js
jb
pusha
nop
mov
inc
sti
xchg
jne
lcall
and
out
and
add
sti
adc
lahf
sub
repz
loopne
jmp
daa
or
mov
sbb
scas
sub
add
push
lahf
outsl
xchg
jge
into
flds
out
into
push
daa
repz
adc
sub
scas
cmp
push
and
add
jge
ja
mov
xor
sub
cmp
ja
sub
jbe
inc
shll
mov
jnp
mov
or
xchg
cmp
frstor
and
imul
shl
rcrl
xorl
ds
sub
out
mov
xchg
mov
sub
in
cltd
xor
repz
icebp
cwtl
sbb
mov
aas
mov
pushf
mov
movntq
std
cmp
cmp
xchg
mov
fistl
es
cmp
and
pop
fsubs
inc
cmp
sahf
popf
add
jg
ds
lds
and
inc
mov
mov
repz
push
mov
lock
jl
sahf
cmp
pop
into
aam
mov
nop
cli
insl
jno
mov
push
pop
insl
stc
repnz
adc
in
clc
jo
fildll
mov
movsl
sbb
or
out
and
sbb
mov
lcall
ja
mov
nop
add
data16
ficompl
sti
pop
xchg
add
outsb
and
pop
jecxz
jae
icebp
jb
add
enter
jne
push
push
inc
hlt
aas
aas
imul
mov
jle
imulb
and
xor
sub
jmp
cs
cmpsb
cmp
mov
mov
xchg
xchg
cmp
lcall
ffreep
call
cwtl
mov
ja
stc
lods
in
inc
test
les
and
in
pop
int
clc
mov
cmpsl
jb
enter
sbb
push
bnd
dec
loope
cmpsl
in
push
mov
lcall
mov
sub
dec
mov
sar
jb
movsb
dec
loopne
vpsubsw
shr
or
cwtl
lret
dec
sbb
mov
in
negl
lds
inc
test
cli
mov
xchg
sbb
lea
shlb
std
inc
or
fisubrs
sub
jmp
lahf
test
test
bound
cmp
sub
jnp
ffreep
sub
popf
aas
push
xchg
xchg
jne
lret
daa
xchg
sbb
sub
or
mov
cmp
gs
aaa
es
ljmp
dec
test
add
imul
xor
fsub
jle
out
push
mov
cld
les
mov
enter
mov
inc
push
mov
cwtl
push
loope
aad
fptan
dec
sarb
js
in
inc
cmp
xor
in
mov
repz
or
cmp
nop
mov
sbb
mov
dec
lahf
push
mov
push
js
push
and
movsb
or
cs
lret
xchg
dec
lock
les
jbe
pop
fwait
rol
add
mov
or
or
enter
or
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
movl
pop
movl
jmp
sbb
mov
ret
push
mov
sub
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
mov
dec
mov
jmp
xorl
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
mov
adc
push
or
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzbl
sub
xor
mov
push
sbb
mov
add
movl
cmp
movl
je
mov
sub
mov
xor
xor
add
add
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
sub
adcl
push
push
push
push
subl
lea
sbbl
push
addl
push
subl
call
push
andl
call
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
pushl
push
push
push
call
cmpl
jb
add
movl
movl
orl
mov
adc
mov
xor
xor
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
adcl
test
movl
je
mov
mov
mov
mov
imul
orl
mov
sbbl
add
xchg
or
mov
sub
xor
mov
xorl
xor
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
sbbl
add
mov
sbb
mov
sub
mov
movl
xor
add
mov
mov
sbb
mov
xor
movl
cmpl
je
cmpl
jne
push
push
pushl
call
xor
add
dec
mov
jmp
neg
add
adc
mov
orl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
xor
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
sub
mov
orl
sub
jmp
div
and
xchg
lods
mov
xchg
inc
mov
pop
bound
pop
bound
std
push
push
into
pop
push
das
mov
cmpsb
arpl
adc
lock
dec
mov
dec
jl
mov
popa
rcrl
into
add
outsb
mov
enter
shll
data16
push
repnz
arpl
int3
cmc
or
or
jno
mov
js
dec
cmp
pop
inc
insb
xchg
or
insl
cmp
in
fdivl
ret
dec
xchg
fmul
mov
ds
fimuls
jbe
cmpsb
pop
dec
jne
sahf
xlat
clc
cmp
jge
push
and
and
out
mov
std
das
nop
mov
loop
or
cli
sbb
jnp
test
jno
adcl
fildl
sti
dec
xchg
out
lea
mov
and
mov
cmpsb
shlb
ss
mov
out
icebp
inc
daa
shrl
imul
xchg
nop
arpl
mov
mov
pop
xchg
icebp
push
sub
mov
sbb
les
adc
or
ljmp
cmp
loopne
inc
fildl
add
inc
mov
pop
rorl
or
in
outsl
mov
mov
sub
dec
insl
or
clc
add
push
mov
loop
int
aaa
rcl
sbb
push
daa
inc
or
inc
push
xchg
jecxz
sbb
adc
pop
cld
gs
in
mov
inc
movl
xor
iret
mov
cs
push
xchg
std
rolb
xchg
ficoml
dec
out
popf
dec
repz
push
add
sub
cmp
fisubrs
inc
mov
lret
pop
scas
fdiv
mov
adc
je
out
mov
out
pop
bnd
or
ret
adc
push
sahf
stc
mov
aas
mov
pop
nop
or
orb
repz
popa
inc
stos
inc
or
out
inc
pop
and
mov
xchg
ja
pop
mov
jp
or
fistpll
repnz
pop
scas
or
repz
lock
outsb
test
adc
aas
ret
repnz
sub
and
stc
orl
xor
fistl
out
bound
push
mov
xchg
out
push
or
dec
loope
push
mov
add
sub
dec
lock
jmp
xchg
imul
push
adc
stos
mov
inc
into
dec
dec
pop
ror
in
loop
sub
je
add
fadds
jmp
ds
xchg
icebp
mov
fidivrl
xlat
push
in
mov
lcall
subl
mov
fldcw
jb
or
sbb
lds
dec
jo
daa
inc
fnsave
mov
dec
dec
negl
push
and
shl
mov
cltd
jns
inc
and
xchg
adc
repnz
mov
sub
aas
fdivrs
shl
add
cmp
mov
jecxz
mov
in
popf
sbb
xlat
bound
push
inc
sbb
dec
add
ja
mov
mov
adc
and
test
mov
dec
xchg
jmp
xchg
pop
xor
mov
jle
jne
mov
iret
and
mov
fimuls
xchg
mov
xor
gs
lea
pop
mov
jbe
out
mov
ret
test
push
fdivp
dec
cmp
sub
lds
xchg
mov
push
fucomi
push
mulb
add
sub
insb
out
sti
jbe
daa
jae
inc
jecxz
fs
cltd
cmpsb
push
out
sub
int
xor
xchg
scas
cmp
xor
xchg
test
sub
dec
pop
and
loope
mov
dec
leave
arpl
faddl
push
xchg
out
sbb
dec
mov
push
call
pop
enter
push
sub
shrl
loopne
dec
xor
inc
imul
movsb
arpl
fsubp
mov
pop
cmc
js
stos
xchg
cmp
inc
xlat
pusha
adc
insb
js
clc
test
sbb
push
addl
mov
mov
daa
or
cs
enter
mov
rcrl
inc
cmp
push
mov
jb
ror
cmc
and
mov
stos
mov
outsl
or
ficomps
and
and
mov
mov
mov
push
push
fs
je
inc
adcl
dec
xchg
loope
mov
inc
mov
leave
jns
out
xchg
sbb
mov
kandw
call
outsb
iret
inc
jb
xchg
ss
mov
dec
in
push
mov
fsubr
andl
jecxz
pop
test
push
cmp
jle
int3
sub
loop
mov
push
fwait
or
daa
sbb
outsl
idivl
push
jo
mov
es
mov
sub
inc
test
adc
iret
cwtl
lret
lea
cmp
sub
inc
popf
sahf
mov
jno
pop
xchg
mov
jne
shlb
inc
test
dec
lods
pop
test
mov
fsubs
in
push
xchg
sbb
cmp
push
popf
repnz
pop
mov
popa
and
dec
pop
out
mov
push
nop
mov
arpl
and
mov
pusha
daa
pop
dec
pop
push
mov
and
mov
jb
out
mov
sbbb
or
std
xor
fistpl
xchg
imul
setae
add
int
cmc
cmp
ret
mov
adc
out
add
jle
and
xor
mov
dec
cmp
cmp
cmp
jns
xorb
popa
daa
push
data16
sub
es
fcmovnb
push
aaa
imul
cmp
popa
ss
or
repz
fcomp
sarl
add
push
mov
mov
sub
or
cmp
lea
adcl
frstor
mov
cwtl
lahf
in
sahf
out
push
jns
out
ret
call
addl
cmc
add
mov
ja
xchg
adc
lcall
lretw
ds
int
cmp
push
loopne
rorl
aam
or
pop
andb
ret
jp
cs
ds
cmp
inc
cmp
fldenv
cmc
xchg
in
insb
lock
dec
shlb
jno
add
aam
cmp
adc
pop
mov
push
jmp
aam
mov
jge
movsl
fidivl
ss
iret
lds
sub
inc
jl
cld
mov
scas
loope
insl
les
push
cmp
sete
std
repnz
fcoms
loope
mov
lock
cmpb
xchg
sbb
sbb
mov
mov
mov
daa
mov
outsl
xchg
popa
xchg
daa
mov
adc
loopne
cmpsb
adc
inc
mov
add
lret
sub
push
stos
popf
cmpsl
rorl
cmp
ss
add
nop
dec
stc
in
or
pop
inc
cmp
xchg
sub
fbstp
mov
cmpb
add
cmp
pop
arpl
adc
lea
and
pop
mulps
repnz
inc
rcll
arpl
inc
arpl
mov
pop
mov
lret
push
pop
aam
mov
cmp
or
jbe
lods
inc
add
std
lahf
mov
inc
sub
pushf
pop
push
ret
sbbb
insb
shrl
cmp
xchg
cmp
test
fldt
mov
dec
xor
movsl
andb
clc
mov
jbe
push
es
and
or
mov
mov
inc
shr
loope
leave
bound
add
inc
mov
pop
iret
inc
add
mov
inc
add
pushf
pop
or
sbb
into
jnp
iret
out
mov
jne
pop
cli
je
adc
dec
push
inc
push
lods
and
jg
xor
xor
add
fimull
in
push
iret
test
push
ret
dec
daa
xchg
lods
into
out
das
in
sbb
mov
cwtl
cmp
sub
xchg
pop
jecxz
fidivrs
ret
cmp
rol
leave
pop
into
add
mov
jno
scas
cld
cmp
xchg
outsl
ljmp
sbb
je
iret
jl
mov
notb
jnp
sub
mov
lret
aas
dec
xor
cmp
xor
into
enter
xchg
mov
pop
push
xor
jnp
mov
mov
pop
inc
inc
pop
add
pop
and
dec
and
loop
fwait
pop
pushl
aad
xchg
xchg
addl
lock
push
arpl
fdivr
cmpsb
push
add
dec
jae
cmp
loop
adc
and
aas
cmc
mov
mov
mov
jno
roll
lods
xor
push
push
in
mov
sbbb
insb
imul
add
mov
xor
or
mov
dec
sbb
adc
mov
out
jne
push
mov
dec
xchg
and
mov
and
in
inc
cmp
push
or
stos
outsb
js
pop
adc
lret
add
shrb
imul
mov
add
push
mov
pop
cmp
sbb
inc
and
adc
pop
imul
pop
sbb
pusha
jbe
dec
pusha
push
popl
out
mov
icebp
jns
jae
sbb
push
arpl
lcall
roll
insl
jmp
ss
jmp
lahf
dec
repnz
inc
cli
in
hlt
and
insl
int
shl
or
shrl
outsb
lods
test
dec
sbb
mov
fnstcw
add
sub
push
aas
xor
fistps
or
fisubl
aam
mov
and
stos
sbb
stc
lahf
test
outsb
fdivr
add
rolb
repnz
pop
add
add
sarb
dec
test
je
scas
jae
dec
jne
push
push
inc
orl
mov
inc
xchg
ss
jp
pop
push
pop
cmp
xor
or
sarl
mov
lds
jg
or
mov
out
int3
cwtl
jns
jno,pn
sbb
mov
fldenv
in
mov
hlt
repnz
mov
adcl
lods
out
push
sbb
xor
daa
cli
mov
mov
addr16
cmp
sbb
sub
mov
jb
aas
push
push
push
adc
outsb
push
add
xchg
imul
adc
cwtl
xor
nop
testl
fnstcw
mov
sti
pop
adc
push
mov
imul
fmull
lds
cmp
and
or
std
adc
lock
stc
xchg
lods
cmpsb
into
ss
lret
popf
jg
call
mov
outsl
adc
pop
cmp
gs
jnp
daa
stos
pop
cmp
roll
push
addb
mov
out
jb
mov
scas
inc
pop
xor
sbb
cmp
dec
test
popf
xor
es
adc
scas
fnstcw
clc
stc
stos
nop
cld
xor
push
cwtd
inc
jle
xlat
mov
fucomip
stos
nop
decb
xchg
mov
xchg
push
ret
xchg
xor
xchg
push
and
sub
pushf
fwait
aas
out
dec
xor
repnz
int3
test
bnd
or
xchg
push
pop
mul
or
lahf
sahf
xchg
push
mov
xorb
mov
add
aad
sbb
out
mov
test
into
aam
adc
pop
mov
mov
inc
lahf
popa
mov
loopne
push
js
cs
inc
clc
jg
mov
inc
insl
dec
jno
into
cli
cmc
inc
xchg
lods
call
mov
imul
das
mov
push
inc
mov
cmpsb
mov
dec
shr
lea
xor
lret
inc
add
inc
jne
mov
mov
movsb
fldt
cld
dec
aaa
mov
sbb
fiaddl
and
in
int3
fwait
std
jnp
jns
pop
pop
pop
push
ja
loop
mov
filds
bound
adc
pop
repnz
das
sbb
test
or
jno
and
adc
mov
sub
test
dec
int3
jge
dec
sub
cmp
je
popf
and
mov
cmp
xchg
pop
push
xchg
add
inc
and
mov
test
xchg
or
inc
dec
repnz
pushf
jmp
cwtl
or
mov
pop
fiadds
fsubrs
cmp
fcompl
or
sub
cmp
stos
or
roll
mov
pop
xor
jno
ja
das
xchg
sbb
pop
adc
test
shl
mov
pop
mov
ljmp
inc
push
js
push
rorb
sbb
xchg
push
js
pop
push
inc
pop
push
xchg
fst
xchg
inc
js
add
and
stos
lcall
sub
cmpl
lret
xchg
popa
dec
push
jns
rcrb
and
sub
inc
lods
out
mov
adc
das
es
test
pop
adcl
fidivrs
mov
mov
nop
je
xorl
jle
mov
inc
xchg
lock
pop
dec
sub
test
loopne
sbb
std
loope
les
push
mov
mov
clc
sbb
cwtl
jl
or
in
pop
sahf
mov
pop
ds
xchg
rcll
lret
daa
aad
mov
pop
xchg
push
int3
fwait
push
jl
lods
imul
mov
push
adc
out
outsb
sub
les
and
mov
xor
mov
cmp
rol
cmpsb
lods
cwtl
icebp
dec
aas
pop
dec
cwtl
xchg
cmp
and
insb
jg
fwait
into
ret
inc
and
sub
addr16
cmp
jecxz
loope
aad
jns
mov
lret
and
pop
aaa
out
jne
fidivl
inc
cmp
movsl
outsb
sub
cmp
out
jno
outsb
out
loope
push
imul
cmpsb
sbb
dec
insl
loop
push
sahf
loope
in
and
scas
or
xchg
pop
out
imul
pop
daa
adc
push
sti
mov
loope
pop
aam
inc
popf
int3
pop
adc
call
push
cmpsb
cmp
loope
jnp
mov
repnz
adc
cmpsb
xor
mov
mov
das
dec
shlb
mov
std
xorl
mov
add
mov
and
adc
adc
in
xlat
fadds
loop
or
in
test
xor
mov
ja
mov
les
fisubrl
loope
xchg
push
sub
inc
jns
insl
lcall
adc
imul
testl
lea
lods
inc
repnz
iret
pop
sti
enter
call
push
stc
es
imul
fldl
jl
jae
hlt
fmulp
jae
cmpb
mov
dec
call
cmp
mov
push
adc
sbb
fisubs
mov
push
repnz
push
jle
jno
mov
adc
mov
out
es
push
and
jg
jge
pushf
loopne
icebp
fisttpll
cltd
adcl
jge
push
xchg
sbb
dec
fwait
sub
js
sub
sbb
sbb
imul
xor
pop
cmp
adc
push
gs
add
test
mov
jp
and
adc
sub
sub
mov
lret
inc
mov
bswap
xor
inc
add
mov
mov
adc
hlt
pop
sbb
lea
in
cli
loopne
sbb
sbb
out
mov
mov
outsb
xchg
loop
add
sbb
push
out
bound
add
scas
test
xor
cmp
or
jecxz
lret
decl
jo
outsl
popf
subl
aad
xchg
mov
pop
mov
jb
dec
mov
nop
and
push
jg
repz
xchg
loop
pop
insl
push
nop
pop
mulb
insl
ret
jecxz
insl
lods
mov
out
fcmovnbe
and
mov
jo
sub
jecxz
or
mov
leave
imul
cli
loopne
adc
push
mov
pop
jmp
or
pop
fmulp
mov
pop
mov
dec
outsl
mov
js
pusha
xor
cmp
and
pop
add
mov
ficoml
push
inc
movb
out
mov
mov
scas
mov
push
dec
add
lcall
cmp
jnp
push
js
imul
rorl
pop
mov
loope
push
sti
inc
les
fistps
push
push
out
cmpsb
push
add
lds
out
adc
mov
loope
leave
or
add
das
push
cwtl
cmp
mov
jno
inc
jb
sub
mov
inc
add
dec
xchg
xor
js
pop
push
hlt
mov
sub
out
mov
mov
adcl
and
xchg
jnp
mov
loopne
fistpl
sub
js
insb
lods
sbb
sbb
mov
std
adc
test
inc
pop
cmpl
in
xchg
std
push
notl
mov
mov
decb
xlat
dec
push
adc
pop
jns
adc
mov
sti
fisttpll
leave
test
in
mov
js
push
mov
loope
sbb
shll
mov
arpl
in
mov
push
mov
pusha
cmp
push
add
orl
gs
cmp
fs
pop
mov
inc
and
jmp
repnz
jo
mov
dec
mov
mov
and
call
push
xor
cmp
jp
lcall
cli
fldcw
mov
xchg
jne
das
scas
data16
int
jno
les
pop
adc
in
sbbb
call
xchg
mov
iret
and
imul
dec
lea
add
idivl
pop
mov
xor
mov
push
xor
mov
jo
lods
cmpsl
inc
push
addr16
inc
pop
decb
inc
lock
pop
cs
ljmp
and
mov
fcoml
je
fdivrs
pop
jne
sbb
rol
push
rorl
cld
fcmovnb
outsb
jns
xchg
cmp
or
cwtl
mov
sub
and
pop
xor
lahf
jns
scas
fndisi(8087
mov
inc
fidivs
inc
jne
dec
sub
and
mov
aaa
test
insb
xchg
xchg
pop
aad
into
test
fisubrl
cmp
and
add
ret
and
cmp
push
insb
jne
rcpps
push
js
sub
lea
subb
pop
shlb
outsl
sbb
gs
push
push
xor
cmpsb
sub
sub
xchg
pop
scas
push
jge
loope
and
sub
xchg
push
lods
mov
jecxz
push
fidivrl
sub
cmp
cmc
mov
js
push
outsl
mov
and
xor
or
push
lret
adc
inc
add
daa
ja
cli
test
mov
mov
or
inc
je
or
pop
mov
xor
ds
pushf
fcompl
into
mov
xor
or
mov
js
fisttpl
icebp
adc
andl
xchg
xchg
test
or
jo
jmp
ret
stos
jl
sbb
jmp
es
in
dec
flds
xor
shrl
push
sbb
aam
out
sbb
adc
repz
xorb
mov
aad
mov
cmp
in
push
in
iret
lock
pusha
in
in
test
xor
or
sets
aaa
sbb
xchg
mov
inc
and
dec
add
or
cwtl
pop
mov
fbstp
sub
sub
inc
xchg
bnd
cwtl
dec
icebp
loop
subb
mov
test
xor
cli
adc
ds
add
andb
out
scas
mul
pop
cmpsb
addr16
sbb
cmpb
orl
mov
cs
jo
jns
shr
cmp
cmpsl
cmc
lcall
xchg
and
pop
cmp
cmp
mov
xor
bound
rcll
mov
xor
outsl
iret
inc
push
out
out
mov
dec
cmp
je
sub
lods
xor
cmp
stc
loop
push
hlt
int3
add
lock
shll
lcall
pushl
mov
and
loope
loope
xchg
icebp
jge
fcoml
movsl
rorb
push
int
add
mov
dec
mov
pushf
lods
in
popf
cmc
imul
fabs
pop
xchg
and
in
push
pop
fwait
inc
or
insl
mov
les
mov
pusha
inc
mov
push
xor
pushf
je
or
jns
mov
adc
mov
pop
jo
mov
mov
sbb
repz
lret
push
xor
xor
nop
shl
lods
jb
push
xchg
rcl
into
mov
int
and
rolb
cmp
std
mov
outsl
in
and
test
adc
lock
aam
in
xchg
stc
std
cmp
jp
dec
sub
cmp
or
dec
sahf
cmp
loop
orl
mov
dec
popa
ds
shlb
inc
in
aam
mov
nop
jne
pushf
jle
mov
push
xor
xchg
sbb
out
into
cld
sbb
inc
pop
sbb
enter
jmp
pop
test
jne
pop
pusha
jb
and
jmp
sbb
jno
mov
sub
sub
push
lret
push
out
add
in
sbb
bound
cmpsl
fmull
sbbb
sbbl
ja
adc
xor
lods
mov
xor
pop
scas
andb
and
mov
lret
mov
lock
cmp
sbb
xchg
clc
jae
inc
mov
cltd
or
testb
das
daa
mov
fs
push
rol
pop
aam
loop
jl
scas
and
jecxz
push
lahf
negl
jl
mov
add
gs
jle
inc
cmc
push
stos
xchg
or
mov
sbb
or
mov
cmpsl
dec
fnstcw
nop
add
adc
sbb
out
sti
mov
xchg
push
sub
mov
nop
inc
dec
aad
cs
pop
and
shlb
jp
inc
and
ret
jp
cld
into
sub
fnstenv
aam
adc
pop
push
xor
and
mov
outsl
xchg
push
imul
pop
xchg
mov
addl
mov
stc
mov
call
decl
cmp
sub
mov
and
std
pop
lret
sbb
fnsave
sbb
adc
stos
aaa
js
dec
fmuls
in
or
ljmp
pop
cwtl
mov
sub
sbb
adc
stos
push
sahf
push
aas
sub
xor
or
fcompl
test
pop
cmp
movsb
inc
push
outsl
mov
fisubl
or
xchg
pushf
pop
xchg
push
lahf
out
dec
inc
out
out
nop
xchg
insl
mov
mov
fstps
xor
jp
pop
addl
enter
scas
iret
push
jmp
out
jle
sbb
repnz
mov
mov
and
and
mov
or
test
push
insl
jg
test
test
or
loopne
pop
cli
insl
ret
lods
cmp
mov
push
test
adc
xchg
push
fidivrl
push
pop
stos
xor
inc
fcmovnu
fwait
outsl
mov
pushf
enter
loop
cmp
mov
and
pop
insl
xchg
ss
outsb
dec
adc
inc
bound
mov
out
dec
repnz
mov
cmp
pop
xor
jmp
lods
xchg
ret
out
das
jo
mov
es
sti
inc
jae
xchg
dec
aaa
add
xchg
mov
enter
mov
lcall
push
xorl
pop
popa
subb
rcrl
loope
cli
cmp
jle
xor
inc
jb
and
loopne
jmp
test
movsb
jns
pushf
sar
stos
cmp
aam
test
add
xorb
scas
add
test
dec
inc
outsl
cmp
mov
cmp
and
imul
xchg
repnz
fstl
or
ret
test
pop
push
nopl
out
push
jl
outsl
dec
pushl
jb
inc
mov
popf
mov
mov
les
pushf
fmuls
add
unpckhps
cmp
pushf
jo
dec
inc
loope
arpl
and
xchg
leave
inc
pop
pop
es
ljmp
rorl
xchg
data16
xchg
cmpsl
rol
ret
dec
jg
mov
xor
hlt
mov
stc
jns
iret
xchg
test
mov
xchg
adc
jl
test
pusha
jmp
imul
outsb
aaa
xlat
push
and
cmpsb
inc
fwait
bound
ljmp
xchg
data16
jecxz
in
iret
lret
cltd
cmp
out
lahf
pop
push
xchg
inc
xor
inc
stc
cmp
inc
mov
jo
out
rep
sbb
jns
mov
jg
fcmovnu
repnz
push
mov
movsl
andb
mov
ret
mov
cmp
popf
xchg
lret
or
imul
and
lahf
push
in
call
cmp
addr16
dec
or
inc
xchg
or
adc
pop
mov
dec
aas
idivb
cmp
sbb
fdivrl
and
rorb
add
xchg
lcall
inc
test
push
repnz
dec
fisubl
aas
cmp
dec
testb
scas
dec
push
repnz
mov
daa
imul
sub
lcall
xor
sub
mov
gs
into
and
mov
sbb
lods
lea
fldenv
fimuls
imul
xchg
sbb
fisubl
call
xchg
aas
fmull
imul
xor
push
js
xchg
lcall
in
gs
int3
pop
xchg
call
cmpsb
pop
out
lods
sbb
xchg
pop
xchg
movl
movsl
or
subl
jno
ss
inc
push
fs
cs
outsl
mov
sarb
xchg
jecxz
jge
add
and
incl
sub
add
jnp
jp
jne
adcb
adc
mov
outsl
xchg
js
mov
adc
insl
into
shrl
test
xchg
in
xchg
call
xchg
lods
xchg
pusha
mov
sub
test
push
ds
sub
ljmp
xorb
xlat
pop
jp
xor
rol
xor
lds
pop
mov
mov
jmp
cmp
sub
imul
enter
xchg
fidivs
cmp
add
mov
jl
sahf
xchg
fs
mov
sub
push
lea
mov
pusha
add
je
mov
mov
mov
sahf
notl
push
cmpsb
push
inc
dec
pushf
imul
stos
inc
movsl
pop
xchg
lods
mov
jl
sbb
loop
or
call
mov
loope
lods
xor
xchg
jae
cmp
arpl
pop
push
popa
call
mov
outsb
or
sbb
pop
scas
cld
clc
movsb
inc
xor
ljmp
push
add
jnp
jnp
jmp
leave
lret
out
mov
cs
inc
mov
adc
sti
jp
sbb
lret
fisubl
icebp
cmp
mov
lret
outsb
movsl
sar
mov
in
add
fs
lret
sbb
std
lds
mov
clc
sarb
adc
mov
xor
add
call
out
sub
lods
push
cwtl
enter
jns
jp
mov
std
xor
jns
aam
xor
push
add
mov
fimull
dec
lods
in
mov
and
sub
jmp
cmp
std
mov
lea
stos
cmp
xor
notl
jmp
enter
xorl
xchg
xchg
dec
mov
call
xchg
insb
jp
jno
pop
xchg
enter
rclb
mov
jbe
dec
out
dec
aad
sub
shll
dec
xor
pop
nop
mov
and
call
sbb
sahf
test
mov
sbb
scas
jbe
mov
pop
repz
out
movsl
test
jnp
inc
and
icebp
or
outsb
in
cmp
and
and
outsb
xor
shll
push
sub
xchg
bnd
mov
cmp
repz
mov
test
mov
lods
shll
or
je
push
mov
push
and
push
dec
test
shrl
push
std
pop
test
idivl
inc
rcrl
mov
mull
lock
inc
iret
or
sbb
icebp
mov
js
ljmp
and
cs
imul
fsubl
push
xor
inc
xor
scas
fstl
xor
mov
sub
int3
repnz
aam
xor
pop
cmp
out
mov
jae
sbb
xor
xchg
mov
jnp
jg
movsb
pop
dec
ror
inc
push
stos
pop
push
pop
and
sbb
repz
lret
insl
repnz
cs
xor
sub
fs
test
in
imul
lahf
ret
fsubr
adc
sbb
addb
leave
cli
subb
xor
scas
cwtl
pop
dec
pushf
cmc
or
pop
add
or
add
outsb
call
imul
or
aam
add
jp
or
pushf
pop
jns
cmp
roll
or
cmp
pop
adc
mov
sti
popa
sub
jbe
sub
cmp
fcoml
pop
loop
mov
aaa
mov
lcall
aaa
mov
pop
mov
add
rcl
add
rorb
mov
xchg
mov
xor
sbb
jno
jne
mov
pop
xlat
mov
popa
sbb
fdivrs
popa
jb
scas
stc
sbb
loopne
xchg
cmp
xor
push
add
loope
and
aad
mov
stc
test
jge
loop
sub
je
cld
cmp
xchg
fwait
arpl
mov
or
jo
bound
lock
pop
dec
pcmpgtw
test
cmc
adc
lret
leave
pop
lds
jo
xor
arpl
ret
cmp
ret
inc
pusha
push
int
mov
xchg
and
jae
mov
stc
add
push
pop
push
rcll
cltd
mov
sub
lds
cltd
orl
outsb
jp
fs
fwait
push
mov
jle
xor
cltd
mov
test
or
jnp
mov
mov
inc
jae
xchg
jp
ss
add
dec
mov
mov
add
pop
dec
mov
lahf
lods
and
xor
push
ljmp
and
push
scas
loopne
aad
loopne
loopne
gs
aas
jge
movsl
scas
mov
add
mov
mov
push
xor
test
adc
mov
xor
cmp
lods
call
and
test
test
insl
adc
int
sbbl
xor
xorl
xor
movl
cmp
movl
je
mov
xor
adcl
add
cmp
jne
pushl
call
mov
mov
and
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
sub
add
mov
xor
mov
add
movl
cmp
je
sbbl
pushl
pushl
call
sbb
mov
dec
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
sbb
mov
xorl
xor
subl
add
cmp
movl
je
mov
mov
mov
or
mov
mov
mov
add
mov
and
mov
and
mov
adcl
add
movzwl
sbb
mov
mov
or
mov
mov
sbbl
add
not
mov
mov
jmp
movzbl
add
mov
mov
xor
mov
andl
add
inc
mov
sub
mov
sbbl
mov
xor
decl
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jmp
into
mov
adc
shll
xor
cmp
bound
pop
bound
int3
jne
xlat
out
jo
std
out
pop
in
jb
jo
add
gs
in
aaa
mov
in
cmpl
ret
daa
test
sbb
dec
mov
rorl
jge
sub
inc
aad
lret
adc
ror
dec
fwait
loopne
inc
push
cltd
test
inc
push
outsb
lea
and
jno
sbb
pop
fiaddl
mov
dec
mov
cmp
mov
fstps
sarb
xor
shrl
call
xor
out
rclb
jbe
shlb
push
push
sbb
test
inc
or
fists
inc
iret
jns
push
mov
inc
push
int
ljmp
mov
pop
push
jp
mov
add
out
mov
mov
stos
lret
andb
xlat
sub
xchg
adcb
loope
and
imul
das
mov
or
movsb
xchg
pop
or
push
jbe
addr16
cmp
mov
lahf
std
test
outsb
jae
lds
mov
rorb
mov
popa
pushf
add
outsl
data16
pushaw
int
or
inc
negl
adc
pusha
add
or
push
cmpl
loop
xor
push
aaa
push
xor
add
push
inc
lret
adc
push
inc
sahf
sbb
mov
into
add
test
loope
in
push
popf
add
sbb
stc
pushf
lock
jmp
mov
in
in
or
ljmp
mov
filds
lods
into
jle
aad
pop
dec
out
jl
dec
insl
fsubl
push
imul
jl
pop
push
cmc
mov
push
lret
mov
xor
shll
ja
loop
mov
mov
jmp
imul
dec
std
jp
stc
mov
repz
mov
call
sub
mov
psubb
leave
shll
mov
and
clc
and
scas
and
adc
imul
sub
ret
loop
jo
shl
test
dec
in
loope
fs
aaa
hlt
dec
xchg
addr16
jp
mov
mov
jl
cmc
fistps
or
mov
cmpsl
xchg
stos
xchg
rclb
mov
movsb
movsl
push
lock
ficoml
pop
dec
and
sub
pop
push
daa
test
ret
lcall
out
cmp
mov
test
fimuls
enter
mov
push
adc
out
fs
loop
sbb
jl
inc
lcall
test
xchg
cmp
cmp
mov
mov
aad
je
std
push
test
xor
sbb
push
aam
bound
rolb
mov
ret
inc
sbb
inc
xchg
out
cmp
in
aam
jbe
mov
cmp
lret
adc
sbb
or
loopne
sbbl
loop
push
pop
xor
xlat
lea
adc
shlb
cli
sbb
mov
jnp
xlat
scas
mov
in
jecxz
xor
sbb
fstl
arpl
mov
and
xlat
jnp
sbb
rcll
in
mov
test
xor
sbb
bound
mov
xchg
and
mov
out
rcr
fildll
stos
push
daa
dec
imul
je
or
fstpl
and
dec
nop
inc
mov
clc
aas
pop
shlb
shlb
and
stos
fcompl
inc
xchg
add
lods
mov
mov
mov
jo
mov
orb
pop
adc
pushf
mov
int3
stos
cmpsl
mov
out
mov
add
mov
mov
mov
pop
xor
cld
loopne
cld
testb
sarl
and
and
pop
and
lret
cli
cmp
mov
pop
scas
adc
ror
insl
jecxz
lret
inc
xchg
and
and
mov
cli
dec
arpl
fwait
inc
jp
xchg
cwtl
mov
cmc
pop
pop
into
scas
cs
mov
aaa
lret
push
mov
loop
adc
mov
xlat
mov
mov
add
xor
sub
das
dec
mov
pop
popa
inc
xchg
push
push
fcomi
xchg
fs
inc
stc
sub
icebp
inc
rolb
mov
xor
iret
mov
xor
filds
xor
pop
adc
mov
cld
sub
pop
push
cmp
jmp
inc
lea
and
adc
inc
cmpsl
xchg
int3
iret
orl
aad
insb
imul
sbb
mov
movb
jle
idivb
jmp
xchg
xor
sarl
out
push
push
insb
fs
into
jmp
sbbl
xchg
sub
mov
sub
mov
outsl
push
insb
inc
insl
and
xchg
xchg
shlb
je
jle
or
and
lret
jns
leave
ret
imul
mov
fbstp
lret
xchg
jne
sub
dec
mov
jmp
dec
push
subb
jl
pop
sbb
pop
push
test
aas
dec
cmpsl
rorb
popf
xlat
popa
mov
jbe
push
mov
or
mov
mov
popa
mov
pop
stos
mov
sti
out
dec
and
mov
clc
mov
in
sbb
or
imul
and
adc
pop
jnp
nop
mov
cmp
movsb
inc
out
pop
pop
or
cmpsb
sub
mov
adc
shr
xor
pop
adc
in
or
xchg
sti
lea
sbb
mov
lret
jecxz
sbb
nop
icebp
cmpl
add
cmc
mov
mov
icebp
aam
or
cmp
popa
loop
sub
mov
sub
loope
adc
cmc
push
cld
adc
add
clc
cmc
sub
jp
std
mov
sub
nop
adc
or
push
mov
or
nopl
cltd
pop
dec
jnp
mov
into
adc
push
divb
out
mov
inc
add
pop
xchg
int3
loopne
mov
sbb
push
xchg
inc
mov
ret
aad
imul
dec
sub
cmp
or
les
hlt
out
xorb
mov
jbe
insb
sub
or
sbb
js
lods
ffree
dec
sub
push
jle
xor
pushf
pop
xchg
movsl
sub
or
out
inc
mov
jns
or
sub
push
aas
jnp
and
cmp
inc
mov
add
sbb
add
daa
maskmovq
mov
lea
sbb
inc
sbb
cmpsl
int3
mov
ss
fbld
pop
loope
ja
pop
rcll
xor
lret
shlb
outsl
pop
movsb
in
gs
shll
aad
jo
gs
mov
fidivs
imul
mov
push
ret
or
jne
pusha
sarl
stos
jo
clc
je
push
ljmp
adc
xchg
add
lcall
ja
fs
jbe
cmpb
gs
fstl
fistpl
arpl
sbb
dec
xor
mov
fdivrl
clc
mov
imul
aaa
or
sahf
mov
or
sub
add
fs
push
cwtl
and
sbb
cmp
cwtl
js
mov
popf
sahf
mov
loop
aad
xchg
gs
sbb
lahf
sub
aad
lret
stos
push
inc
pushf
pop
sub
mov
jbe
adc
sbb
aaa
sbb
ret
nopl
rclb
fistpl
cmp
data16
shr
mov
call
shlb
in
stos
addl
iret
test
bound
mov
pusha
jns
stos
xlat
rcll
dec
mov
les
pop
lods
sbb
mov
xchg
push
mov
lock
mov
fsubp
and
inc
repnz
gs
cmp
xchg
and
mov
jg
xlat
fldcw
lret
int3
mov
arpl
ss
xor
fadd
or
cmpsb
ficoml
rorl
pop
daa
filds
lods
cmpb
xor
es
rcr
aaa
mov
xchg
jne
rcrb
and
rolb
cmpsb
lahf
lret
adc
jge
int
cmpsl
in
jne
stos
pop
dec
or
jecxz
inc
cmp
mov
xor
mov
aam
cli
movsl
bound
sub
hlt
push
push
and
add
mov
roll
filds
in
pop
int3
testl
cmp
in
lock
cmp
inc
xchg
push
cli
lock
lahf
or
aam
std
dec
addl
mov
loop
mov
lcall
shrb
xchg
inc
mov
add
pop
outsb
test
test
pop
loop
rcrb
in
xchg
xchg
loopne
daa
mov
jnp
add
add
imul
xchg
or
or
ret
inc
mov
lgs
sub
or
in
cmpb
stos
xchg
mov
push
mov
daa
out
mov
jns
mov
shl
push
dec
push
xor
in
std
ljmp
insl
mov
or
jo
jb
and
inc
pop
mov
fsubs
ss
mov
or
xchg
cmp
jo
sbb
sub
xor
in
mov
subb
daa
fiaddl
mov
jnp
inc
fisubs
mov
fisttpl
test
jge
or
loop
insl
xor
fwait
mov
jo
pop
sbb
jl
sahf
mov
lahf
icebp
inc
mov
mov
mov
lcall
addr16
and
cmpsl
loope
dec
jnp
push
fisubl
sub
dec
add
gs
gs
ret
mov
je
ja
pop
popw
mov
adc
movsl
mov
clc
negl
jae
xchg
xchg
xchg
popa
fsubl
jp
decb
fiadds
dec
pop
test
xor
adc
adc
pop
lret
aad
mov
adc
add
scas
xor
inc
inc
sub
mov
inc
pop
daa
inc
cmp
gs
hlt
test
push
push
adc
cmp
fisttpll
and
mov
sub
dec
int3
fstpt
sub
adc
int
push
sub
jle
add
fnstsw
cmp
inc
push
mov
mov
outsl
jmp
test
sub
test
ds
jbe
imulb
pop
pop
addl
sahf
pusha
out
loop
mov
mov
in
mov
xor
push
push
cmpl
mov
jnp
ss
adc
aaa
cmc
jne
push
sahf
mov
add
ret
dec
mov
sbb
mov
rcrb
cmpl
mov
push
pop
dec
popa
shl
pop
sbb
dec
xchg
push
pop
push
adc
loopne
dec
shl
icebp
imul
incb
popa
scas
lea
arpl
icebp
dec
mov
cwtl
addr16
dec
jne
rcrb
jne
cwtl
test
insl
push
jae
and
popf
in
mov
jb
mov
lock
jmp
push
aaa
cmpsl
rol
xor
xchg
mov
pop
out
scas
inc
movsl
pop
lods
pop
es
xlat
jle
adc
fadds
cmp
unpcklps
nop
xlat
mov
jb
push
adc
xor
nop
ret
cwtl
outsb
in
ja
lahf
ds
rclb
es
rclb
jp
mov
pop
popa
xlat
lcall
jb
movsl
test
mov
lods
or
mov
cmp
pop
jmp
fldz
data16
ljmp
std
or
je
leave
mov
lret
repz
or
mov
sub
psllw
inc
js
stos
sbb
cs
mov
cmpsb
sbb
fistl
inc
dec
movsl
push
and
fstp
inc
insl
adc
les
xchg
ret
repnz
cmpsl
ds
imul
pop
lret
arpl
pop
rolb
mov
faddp
mov
sub
xor
loope
aam
pop
jo
add
ficoms
lods
aam
popf
add
shl
xchg
adc
nop
in
xor
push
jmp
sub
mov
fbstp
add
or
add
hlt
pop
sti
dec
movsw
and
in
pop
mov
adc
out
aas
xchg
mov
xor
int
mov
push
sbb
mov
mov
xor
inc
adc
pop
shrb
loop
add
clc
and
mov
fsubrl
push
adc
stos
adc
or
lcall
loopne
or
call
movsl
roll
loope
add
decb
mov
test
push
lods
xor
or
rcrl
aad
scas
gs
mov
push
scas
in
push
mov
sub
push
adc
dec
sbb
dec
and
mov
mov
cmp
pop
lret
ljmp
shl
jb
jns
xchg
push
movsb
add
lock
insb
fsubrs
aam
in
and
iret
insl
nop
frstor
sbb
out
or
iret
imul
out
mov
adc
xor
jb
inc
pop
notb
push
dec
mov
xchg
push
sub
fs
add
hlt
jl
jp
xor
fxtract
test
adc
mov
adc
or
mov
xchg
daa
lods
sbb
xor
iret
pop
or
sub
addr16
sarb
pop
inc
xlat
dec
data16
call
lahf
ret
test
mov
jge
inc
cmc
sub
aam
movsl
testb
fldl
mov
fimuls
data16
sahf
aam
inc
jo
lret
stos
imul
push
add
dec
pop
or
rcrl
ljmp
aad
mov
xchg
lea
dec
jb
icebp
jb
inc
ds
in
mov
jl
jg
insl
xor
out
test
pop
inc
int3
jmp
pop
add
mov
push
adcb
jae
shlb
mov
mov
inc
xor
jmp
push
push
sbb
iret
inc
inc
bound
dec
fstl
ja
filds
push
mov
out
ja
or
xor
lea
imul
xor
jbe
nop
orl
adc
sbb
dec
jecxz
negl
enter
add
and
shlb
pop
shrb
mov
or
mov
adc
repz
pop
mov
cltd
cmp
adc
xor
lods
pop
jae
mov
sbb
mov
ljmp
mov
out
mov
jae
add
dec
les
shrb
outsb
mov
stc
setp
add
ss
outsl
stos
cmp
sbb
lret
mov
mov
loop
jmp
aam
or
add
out
in
jb
or
push
adc
outsl
enter
fwait
xor
dec
hlt
lods
clc
add
out
push
xchg
inc
out
push
mov
push
std
fcoml
mov
aam
lock
pop
jecxz
jl
shlb
xor
in
cmp
in
in
mov
pcmpgtw
xor
lods
int3
inc
cmp
call
les
dec
in
mov
sub
ss
into
lds
dec
stos
inc
lret
int3
push
fcmovnb
outsb
int
cmpsl
jle
adc
adc
add
add
jae
test
loope
add
jp
shrl
fldcw
idivb
fdivrl
fwait
cld
out
mov
or
pop
xchg
pop
inc
lret
dec
lods
rorl
inc
push
sbb
xor
xchg
sbb
stc
pop
movsb
test
movsb
sub
dec
sub
adc
dec
in
das
cmpsb
xchg
jmp
sub
adc
fnstenv
mov
pop
dec
lahf
push
xlat
adc
jp
jp
notb
jge
lods
daa
in
imul
xchg
je
xor
pop
dec
popa
cmc
jbe
sti
movsb
cs
push
loop
cmp
shlb
jno
cmp
push
lret
and
pusha
sub
repz
mov
call
jb
pop
std
es
cmp
pop
sub
push
mov
adc
mov
add
hlt
sahf
or
cmp
mov
fstpl
mov
or
mulb
lahf
cld
cmp
sti
fisubrs
incb
xchg
pop
cmp
inc
idiv
inc
and
je
mov
push
dec
sub
sub
cmp
movsl
dec
add
insl
xor
or
movsb
arpl
pop
movaps
and
loope
mov
sub
test
dec
pop
push
xchg
jbe
mov
out
mov
adc
jne
and
stos
sub
sub
mov
test
xchg
push
xchg
xchg
jo
add
add
or
xlat
pop
hlt
aad
or
jg
xchg
jmp
repz
add
and
das
notb
stos
movsl
mov
mov
out
mov
fstps
mov
test
add
jbe
sub
pop
in
mov
repnz
mov
fst
dec
movsl
sub
mov
scas
lods
push
test
xor
pop
mov
ss
xor
movsb
addr16
pop
loop
popf
cmp
dec
jne
sub
out
mov
sbb
loop
leave
outsb
mov
push
stos
or
fsin
xor
shl
outsb
sbb
jbe
shll
fbstp
push
stc
mov
fs
adc
push
dec
lret
xchg
inc
jmp
pushf
mov
icebp
cmpsb
push
and
scas
outsb
ljmp
jle
push
cmc
inc
adc
mov
add
popf
sub
stc
fiaddl
in
js
outsl
lock
add
es
mov
and
jge
or
push
and
enter
lods
insl
sub
sub
stos
dec
into
xchg
push
mov
stos
add
inc
pop
inc
dec
into
outsl
mov
sbbb
repz
mov
xchg
push
popf
dec
mov
mov
pop
adc
pop
jo
rorl
dec
movsl
popf
ret
js
insb
xor
xor
arpl
lods
ret
js
mov
subl
mov
add
jmp
mov
fstenv
xchg
xor
jmp
pop
jne
daa
xchg
push
clc
jne
loope
insb
add
and
sbb
push
outsl
ja
jns
mov
pop
sbb
mov
in
push
jns
aad
jbe
adc
inc
push
or
aad
inc
and
sbb
pop
das
sbb
rclb
jg
mov
sbb
mov
ja
lods
pop
sub
mov
adc
sbb
adc
push
adc
cmpl
outsl
out
lahf
xor
jg
inc
xchg
das
jp
mov
out
ss
add
pushf
mov
out
bound
jmp
mov
jle
xchg
pop
add
mov
push
push
adc
jp
and
loopne
jae
adc
out
repnz
dec
repnz
mov
mov
repnz
mov
jo
push
icebp
rclb
push
cmp
ss
pop
orl
sbb
inc
mov
call
dec
test
sbb
pop
or
mov
ljmp
lret
push
xchg
pop
fdivrs
cmp
mov
cmp
shrl
call
xlat
popa
test
xchg
inc
pop
mov
aad
fnstcw
mov
push
fdivrs
or
std
add
cmp
and
xchg
dec
pusha
les
jo
pop
lcall
cwtl
lcall
pop
subb
lea
or
fnstsw
mov
dec
and
test
leave
mov
inc
call
fnstcw
mov
or
push
xor
xchg
push
gs
cmpsl
sti
mov
aaa
pop
xor
or
xchg
pushl
sbb
div
testb
cmp
xor
lods
bound
jmp
test
cmp
cmpsb
in
pop
aas
lret
mov
cmp
pushf
pusha
packssdw
jge
pop
xchg
or
add
push
cmp
cmp
hlt
aad
mov
sahf
sbb
repnz
icebp
adcl
lea
mov
jo
scas
scas
inc
inc
push
rorb
mov
push
and
fs
jecxz
sub
out
add
pop
push
dec
push
lret
into
insl
mov
ffreep
inc
mov
pop
sub
test
add
cmpsl
mov
and
push
jno
pop
sti
add
dec
xor
lret
sbb
xchg
mov
and
fmull
pop
jle
or
sahf
push
xchg
add
xchg
cmp
or
ljmp
cli
mov
sub
pop
sub
cli
outsl
xchg
stos
jg
jno
clc
sub
loop
cmp
fwait
loope
stc
mov
mov
pop
mov
pop
push
popl
mov
xchg
push
pop
push
inc
inc
lcall
in
inc
push
cmc
repnz
cld
mov
push
push
pop
dec
xor
mov
int
out
lcall
jno
or
adc
xchg
jle
and
jnp
ret
xchg
pop
mov
mov
call
sbb
rcll
pushf
adc
ds
mov
loopne
cmp
stos
jb
xchg
mov
sbb
pop
andb
out
in
loop
mov
insb
dec
or
inc
jle
xor
inc
sti
adcl
incb
and
mov
pop
popf
call
dec
ljmp
fucomi
or
movsl
xor
pop
cmp
push
push
xchg
ljmp
in
sub
shr
jnp
out
pop
xlat
in
pop
or
sarl
xor
leavew
sub
repnz
cmpsb
cmp
testl
stc
mov
xchg
inc
add
ret
or
stos
cltd
out
and
or
pop
pop
inc
aaa
push
xchg
jecxz
popl
dec
or
rclb
out
jo
lods
pop
xor
shrb
fwait
pop
rolb
sub
xchg
sub
xchg
lods
pop
addr16
decb
and
aaa
fnstcw
popfw
push
pop
int3
pop
aas
fdivp
leave
pop
js
mov
mov
xor
mov
xchg
jl
xchg
loop
mov
mov
cmpsl
cmc
pop
in
lcall
mov
imul
cmpsb
outsl
push
jae
sbb
jp
bound
lods
jo
lahf
jle
lods
arpl
sub
dec
test
inc
das
dec
sbb
leave
jo
mov
aaa
fmuls
sbb
ret
iret
scas
in
popa
mov
push
jno
pop
xor
jo
in
adc
push
popa
mov
mov
lods
pop
mov
fisttpll
adc
bound
mov
add
sti
fidivrl
call
icebp
cli
movsl
xchg
inc
mov
cmpsb
add
sarl
adc
stc
xlat
iret
mov
mov
lea
fistl
gs
fistpl
fiaddl
sbb
adc
mov
ret
pop
inc
dec
cmp
outsl
testl
mov
mull
imul
rolb
lods
adc
mov
sub
jno
pop
xchg
daa
pusha
aas
test
loopne
mov
dec
xchg
js
jne
rclb
mov
sahf
xor
nop
imull
xchg
dec
or
fcmovne
mov
adc
das
cmc
inc
mov
jge
inc
les
lahf
pushf
jno
int3
ret
in
or
scas
aaa
pop
sub
cmpsb
insb
mov
pop
loope
cmp
mov
sub
lahf
dec
mov
mov
ljmp
xor
mov
adc
mov
sub
xor
mov
js
and
mov
repz
mov
ds
out
dec
jp
insb
push
cmp
sbb
xor
loopne
stos
clc
mov
add
xor
cmpsl
jmp
jns
jne
pop
add
jnp
xchg
imulb
dec
in
push
sub
jnp
stc
into
mov
cmp
sbb
xor
aad
not
daa
dec
jnp
xlat
jns
mov
std
outsb
dec
stos
push
xor
jae
out
jecxz
iret
sarl
xchg
mov
and
loope
imul
arpl
daa
xchg
mov
scas
or
mov
adc
mov
stos
ja
adc
push
out
mov
jb
out
jmp
push
xchg
aaa
in
jne
out
lods
cltd
fsqrt
cmp
lahf
cmp
mov
insb
out
jae
fucomp
inc
sub
insl
ret
in
add
push
sahf
or
aaa
push
and
push
dec
sarl
aas
mov
inc
call
jge
mov
out
jne
xchg
enter
hlt
jle
lea
mov
test
popa
scas
sbb
les
lds
sub
pop
mov
and
push
imul
repz
gs
mov
mov
je
repnz
mov
inc
fwait
sbb
loopne
filds
lds
dec
xchg
xchg
pop
add
sbb
je
sub
popf
mov
xor
xchg
pop
pop
xchg
jnp
aas
popa
repz
jge
xchg
mov
insb
int
mov
and
mov
sub
adc
adc
mov
xchg
ds
jno
pop
dec
dec
jmp
call
out
out
fimull
lds
mov
lea
push
and
push
inc
or
xchg
xor
mov
addr16
aaa
lcall
dec
in
cmpsl
and
lret
call
test
outsb
aaa
cwtl
sub
scas
mov
jb
aad
bound
push
lret
cmp
jge
ret
push
mov
jno
mov
lcall
push
repnz
push
push
cmp
cmc
out
and
xchg
fdivs
jmp
jp
pop
xor
add
jge
vpsrld
test
call
add
ret
sahf
push
leave
cmpl
mov
lds
loopne
adc
ficomps
sub
lret
iret
mov
sbb
fdivrl
adc
adc
sub
hlt
ret
clc
hlt
push
cltd
dec
fwait
xor
sub
mov
xchg
cld
cmpsb
fistpl
clc
push
outsl
sti
int
xor
dec
or
inc
pop
fwait
pop
out
js
mov
push
add
dec
push
fldenv
fstpt
enter
daa
and
pushl
int
comiss
aam
mov
aad
push
push
outsb
fists
lahf
and
ja
cmp
xor
pop
in
fdivs
adc
ja
sti
les
mov
push
and
mov
sbb
outsl
movl
mov
cmp
movsb
fcoml
jno
iret
dec
jl
jmp
into
popf
cmp
cwtl
mov
int3
lds
jns
out
lahf
imul
ficoms
fldt
pop
outsb
dec
sbb
sahf
stc
lods
ret
sub
and
nop
lds
adc
icebp
jle
mov
in
fwait
sub
cld
clc
adc
cltd
popa
dec
jns
push
mov
cs
insb
andb
sub
aad
outsl
daa
or
pop
sbb
out
mov
imul
test
sbb
inc
jl
mov
push
adc
push
xchg
cld
pushf
pop
es
and
out
xchg
fcmove
push
push
stc
in
xor
loope
mov
sub
dec
xor
out
daa
and
es
sbb
cmp
add
iret
fstl
push
fisttpl
test
push
jp
mov
jae
push
loope
dec
orb
push
outsl
add
popl
test
cmp
in
je
leave
ret
or
mov
mov
mov
jmp
pop
sbb
xchg
xcrypt-cbc
cmpsl
shll
jae
rclb
lret
test
ret
dec
add
sub
xor
fdivp
add
or
jl
dec
int
cmpb
cld
push
sub
xor
repnz
fidivrs
popa
or
xchg
inc
mov
or
xchg
cmp
mulb
shlb
cmp
pop
inc
sti
movsb
repz
imul
and
addb
mov
xchg
and
adc
in
adc
mov
or
mov
bound
ljmp
shl
in
jns
fwait
in
pop
ja
repz
mov
lea
in
pop
mov
daa
xchg
fnsave
add
cwtl
or
sub
mov
fstpt
es
or
pop
repz
pop
inc
dec
aam
fcompl
fsubr
lds
add
test
cli
pop
shll
out
ficoml
mov
lds
push
and
fs
rcll
pusha
mov
inc
mov
push
pop
xchg
jb
mov
xor
pusha
stc
loope
adc
cmp
mov
adc
mov
dec
stos
or
ja
out
sub
xchg
cs
in
icebp
inc
mov
adc
mov
stos
or
jge
push
sysenter
xchg
sahf
inc
jbe
dec
cld
cmpsb
fcmovnu
push
aas
bound
scas
fldcw
or
jne
jp
mov
aam
loopne
mull
push
push
mov
int3
and
mov
or
arpl
cmpsl
xor
mov
mov
les
jb
andb
cmc
js
outsl
ret
mov
mov
inc
cmp
in
sbb
or
cmp
loope
into
sub
repnz
push
pop
dec
sub
xlat
xchg
pop
jne
orl
mov
pop
or
popa
js
cmp
scas
xchg
incb
pop
inc
push
repnz
je
lret
jp
mov
loop
pop
cmp
lcall
or
pop
sbb
cmp
mov
or
mov
sahf
sbb
sub
push
stos
inc
repz
mov
adc
xchg
cmp
out
fistl
push
mov
in
add
cmpsb
dec
mov
sbb
loope
sub
ja
stc
imul
mov
inc
je
mov
movsl
je
mov
test
push
jbe
jmp
sbb
xchg
jnp
int3
adc
arpl
mov
mov
or
pusha
sub
inc
xchg
jg
ja
jmp
or
es
push
jecxz
jg
jno
out
cld
rcrl
adcl
jg
ror
mov
lods
jmp
sbb
xchg
in
repz
jo
nop
jecxz
out
xchg
push
or
mov
sub
rorl
mov
aas
sarl
sahf
xchg
imul
push
fidivs
lahf
scas
mov
cmpsb
pop
and
js
push
inc
mov
mov
add
jb
jne
sub
mov
jle
and
mov
test
decl
add
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
xor
xor
and
movl
mov
sub
mov
and
mov
xor
add
mov
movl
mov
sbbl
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
xor
push
mov
mov
add
mov
mov
mov
mov
jmp
push
add
mov
add
xchg
aam
mov
bound
pop
bound
fsubrs
in
dec
mov
sub
pop
sbb
inc
loope
pusha
lods
push
clc
push
ficompl
je
jmp
inc
and
in
frstor
arpl
fistpl
jl
sti
daa
cli
mov
fmuls
mov
lods
push
add
aam
repnz
mov
fdivrs
andb
or
roll
pushl
movsb
or
sub
lods
ds
adc
repz
jg
cwtl
sub
minps
pop
cmp
lret
pop
sub
pcmpgtw
push
inc
sub
sahf
leave
sub
lahf
int3
aaa
fstpl
or
cld
add
sub
add
inc
pop
or
sub
outsl
push
inc
sub
lods
push
fndisi(8087
fmul
in
jle
aaa
cmpsb
dec
mov
sub
scas
mov
pop
ds
shrl
int3
fcomip
ja
loope
xchg
cmp
andb
mov
cmp
into
add
arpl
leave
inc
adc
imull
jmp
fwait
mov
cs
fisttpl
sti
pop
mov
mov
pop
clc
jge
pop
xor
or
fptan
xchg
arpl
mov
test
push
outsb
cmc
shll
stc
scas
aas
jbe
mov
arpl
dec
xlat
lret
add
shll
add
xor
jmp
mov
repz
inc
pop
pop
je
inc
jge
mov
js
push
and
aaa
stos
mov
lret
popa
dec
mov
dec
mov
jo
decb
lahf
cs
jbe
dec
xor
into
cmp
dec
sbb
adc
fdivrl
jmp
daa
xchg
sbb
imul
imul
jp
adc
cmpsb
pop
cmc
adc
cmp
sbb
std
mov
mov
mov
fiaddl
xlat
lahf
fnstcw
jle
loope
push
loope
mov
xchg
push
das
cmpl
int3
decl
pop
bound
sahf
push
inc
aam
dec
pop
ds
movb
mov
mov
inc
mov
fisubrs
adc
mov
mov
jecxz
push
pop
xchg
pop
lcall
mov
rcrb
mov
pop
in
and
sbb
sahf
or
pcmpeqb
test
pop
xchg
rcrb
add
in
ds
adcb
lcall
shrl
cld
jne
xchg
test
adc
movsb
jae
out
stos
lret
jno
sub
jns
or
sub
jne
ss
adc
pop
cltd
pop
pop
dec
lods
data16
mov
imul
cmp
int3
das
lret
rolb
scas
lods
xchg
nop
push
lods
aam
pop
enter
cmp
ficoml
xor
lret
cmpsb
add
and
and
xchg
add
sub
popa
into
push
mov
andb
fidivs
push
adc
insb
sub
push
inc
jp
ret
es
jmp
ficompl
sbb
sbb
bound
fisubs
test
mov
das
push
xor
in
in
pop
mov
mov
psrlw
sbb
push
xchg
or
sub
inc
cmp
adc
testb
clc
and
fwait
insl
inc
push
stos
das
dec
rcrb
flds
jmp
or
in
repnz
or
in
jb
je
sub
xlat
in
jae
mov
fsubrl
leave
pop
adc
push
repnz
add
cmp
mov
push
aas
loop
mov
fdivs
and
call
js
jno
push
cmpsl
push
xchg
xor
lds
jno
pop
pop
pop
ljmp
pusha
jbe
test
sbb
push
adcb
cmp
adc
xorb
testl
int
iret
push
daa
ljmp
sub
mov
jmp
jl
pop
clc
mov
hlt
jns
out
shrb
push
adc
xor
dec
enter
mov
and
inc
sti
rcl
or
mov
iret
in
pusha
jmp
adc
popf
and
push
lahf
pop
int3
xchg
add
pop
jecxz
sbb
adc
pushf
push
jge
lret
inc
sbb
pop
in
subb
arpl
push
lahf
mov
cmp
or
idivb
negl
inc
or
or
jl
sub
fldcw
imul
mov
cld
pushl
sbb
mov
xchg
out
in
sub
cmpb
adc
dec
int3
mov
icebp
adc
xchg
fstpl
inc
and
pop
mov
imul
xchg
popf
mov
addr16
mov
push
clc
out
jp
push
idiv
jge
enter
in
movsl
pushf
mov
cmpsb
lret
jp
fmul
xor
in
cmpsb
pop
lock
fcomp
in
jbe
or
out
jecxz
movsb
fs
gs
inc
iret
ja
dec
jge
scas
or
mov
pop
xor
push
jno
mov
mov
pop
jp
aad
imul
lea
mov
lahf
outsb
hlt
sbb
scas
jg
mov
stos
and
and
mov
aas
jecxz
inc
cmp
mov
es
jns
push
cmpsl
sbb
add
jg
pop
mov
cld
nop
orb
adc
cs
jo
push
stos
xchg
add
shr
cmpsb
inc
push
testb
push
push
in
adc
aam
sbb
insl
fcompl
gs
cmpsb
pusha
jb
dec
adc
mov
shlb
out
push
and
jb
xchg
lea
xchg
and
adc
fs
stc
icebp
mov
xchg
cmp
pop
scas
sub
in
jbe
mov
adc
jno
jp
test
es
mov
or
push
add
sub
lods
ficompl
clc
mov
cmpsl
insl
clc
stos
jl
movsl
mov
sub
mov
and
ljmp
pop
cmc
iret
les
sti
fimuls
or
push
repz
xor
imul
aas
into
mov
cmp
out
sbb
pop
sub
andnps
sub
add
jmp
xchg
ja
xchg
cmp
sbb
xchg
lea
add
in
xchg
call
inc
jmp
das
std
mov
fs
iret
icebp
adc
push
mov
jl
jno
or
sub
mov
sbbl
mov
in
loop
inc
aaa
mov
pop
and
mov
leave
sbb
jp
jmp
shrl
dec
pop
and
pop
mov
repz
inc
imul
hlt
jl
jno
cmp
inc
mov
mov
sbb
fisttps
inc
lahf
punpcklbw
mov
pop
mov
test
mov
shll
mov
jmp
negl
lock
mov
or
pop
sub
and
fbstp
loopne
dec
ljmp
decl
call
insl
mov
add
addb
ror
test
nop
pusha
jmp
loope
pushf
xchg
xchg
add
sub
cs
daa
mov
insl
xor
into
std
add
lcall
scas
lret
mov
mov
push
addl
add
fdivs
dec
fdivrs
cmp
dec
sbb
and
inc
xchg
cmp
and
ret
cld
xchg
imul
cmp
mov
cs
out
mov
bound
movsl
int3
or
mov
sti
cli
push
pop
pop
mov
in
lock
arpl
adc
clc
jl
jp
test
lds
xlat
add
pop
in
pop
nop
fcomps
and
outsb
sahf
push
xchg
jle
cli
cs
mov
or
inc
sub
push
mov
sar
psrlw
sahf
lods
lcall
jns
out
jmp
lret
inc
loop
adc
movsb
cmpsb
shl
push
cmc
cmp
pusha
jp
dec
mov
sub
faddl
or
das
dec
insb
mov
clc
jae
fs
hlt
add
fisubrl
clc
in
push
inc
xchg
dec
cmp
sub
int3
sbb
repnz
in
xor
jbe
cltd
rolb
inc
shrl
daa
out
scas
jecxz
lods
mov
xchg
mov
leave
xlat
sbb
arpl
lock
push
and
jae,pn
loop
or
fidivl
lcall
mov
ret
jns
gs
add
lahf
sub
push
jae
xchg
mov
xor
sbb
mov
sub
divb
or
cmp
cld
mov
add
ret
mov
pop
leave
mov
jno
cld
sub
mov
sub
movsb
or
frstor
gs
fs
sarw
inc
movsl
cmp
jl
cmpsl
fnsaves
push
xor
ficompl
xor
dec
cs
jp
cmp
roll
xchg
mov
inc
inc
test
es
clc
pop
and
sub
ds
xchg
nop
stos
push
pop
push
push
mov
lods
mov
or
gs
dec
repz
mov
mov
cli
icebp
jo
mov
sahf
mov
xor
clc
mov
push
sub
sarb
mov
mov
jecxz
and
cld
mov
xor
add
imul
cmp
pushw
push
mov
sahf
out
add
cmp
jnp
mov
stc
test
cmp
pop
outsb
sti
xor
pop
es
or
mov
jno
imul
movsl
in
or
dec
or
shrl
mov
inc
cwtl
mov
add
in
sbb
push
fnstsw
dec
dec
push
inc
jno
jg
aam
mov
mov
shll
das
mov
push
scas
inc
int3
movsb
out
fsubl
mov
div
enter
push
icebp
push
cmp
push
fwait
aaa
inc
ret
nop
aaa
test
push
hlt
jae
jmp
jne
jmp
mov
jp
dec
das
sbb
rol
scas
rclb
ja
hlt
lahf
and
test
xor
jno
dec
jecxz
pop
jb
dec
cmp
outsb
jno
rcrb
jb
imul
mov
inc
pop
add
mov
push
clc
out
mov
orb
lods
cli
mov
cld
dec
ret
sahf
imul
xchg
lea
subl
sahf
mov
clc
mov
xchg
imul
test
shll
pop
pop
subl
xchg
xor
repnz
push
push
push
xchg
pop
fwait
jecxz
repz
sub
add
ss
mov
mov
lods
cmp
xchg
mov
jo
and
dec
xor
in
push
mov
nop
in
lret
sbb
fnstsw
xor
and
mov
mov
or
xchg
lret
repnz
adc
sahf
jmp
stos
shll
rolb
sub
mov
mov
xchg
or
sub
add
jmp
out
cmp
push
jb
and
pop
xor
and
cmc
jmp
push
mov
inc
dec
repz
aaa
test
mov
lods
xchg
and
xlat
dec
push
sub
pop
ret
sub
aam
push
fcmovbe
jmp
in
adc
jge
xor
imul
inc
mov
pop
mov
mov
nop
inc
jle
cld
jnp
dec
imul
cmp
sub
mov
sbb
pushf
ja
lahf
pop
loope
std
imul
mov
insl
mov
xchg
rol
fwait
pushf
xchg
pushl
lock
pusha
and
fadd
pop
mov
lcall
ret
and
cli
mov
fcomps
cmpsl
dec
add
je
out
inc
cmp
ja
fisubrl
xchg
bound
and
in
cmp
sti
call
mov
mov
jl
jmp
sbb
jmp
jge
cmpsl
rorb
jo
push
sub
mov
mov
cwtl
imul
sub
sbb
push
jl
pop
pop
in
cltd
fcoml
js
popf
jnp
sbb
out
dec
xor
repz
mov
popa
sbb
imul
out
dec
mov
xchg
push
add
fisttps
fwait
lods
out
fsubrl
jo
sub
insb
or
mov
es
jne
sbb
ss
cmp
inc
mov
pop
out
ficomps
cli
insl
hlt
adc
jnp
push
jg,pn
sti
push
sbb
or
orb
mov
aas
jb
cmp
sub
push
and
jl
inc
cmc
ljmp
jmp
inc
inc
jp
and
ljmp
and
sarb
loop
test
xchg
mov
inc
scas
out
jns
hlt
pop
mov
and
jo
mov
dec
in
repz
cltd
mov
push
loopne
inc
mov
rcrb
into
xchg
mov
incb
jge
flds
out
pop
push
xchg
in
jge
sahf
test
pop
imul
push
test
out
cwtl
out
aaa
subb
dec
sub
outsl
sub
scas
dec
ljmp
fistpll
adc
lret
mov
dec
out
push
int3
dec
in
xor
jmp
fimull
xchg
push
cmp
test
fwait
incb
imul
fadds
aad
sti
cs
fadd
adc
movsl
cli
cltd
je
cmp
mov
das
in
sti
or
mov
cmc
add
mov
mov
add
xor
lock
jne
dec
push
lods
mov
jge
test
sbb
xchg
aaa
fisubs
cmpsb
rcr
push
inc
cmp
jnp
sub
fbld
dec
mov
mov
jl
movsb
lret
mov
mov
sub
or
lahf
push
lods
call
or
cmp
adc
adc
out
xlat
pop
jl
cltd
mov
lea
js
data16
lcall
dec
outsl
push
sub
push
cmp
insb
pop
sbb
inc
popa
jp
cmp
push
sbb
inc
stc
dec
fwait
lret
std
fcomip
jb
cmp
add
loopne
sub
inc
xchg
lret
lods
ja
pop
mov
inc
hlt
dec
mov
cmp
stos
clc
push
dec
pop
fldcw
lock
out
or
dec
inc
xlat
out
inc
push
adc
sub
jmp
mov
xor
cmpsl
add
lods
lods
add
or
add
stos
dec
pop
adc
cmp
jecxz
pop
fstl
testl
std
xchg
iret
jl
hlt
insb
xchg
lahf
imull
aaa
enter
leave
sbb
mov
xchg
out
dec
push
lods
nop
adc
or
mov
aam
stos
dec
mov
out
movsb
sub
into
xlat
sbb
sti
and
pushf
test
div
mov
dec
jl
test
jb
gs
add
incl
inc
fidivs
out
lret
shlb
fsubl
and
ds
mov
and
popa
test
ljmp
inc
add
xor
or
mov
or
fwait
dec
loope
cli
mov
cmpsl
inc
loop
movsl
fidivl
insb
add
push
dec
xchg
adc
imull
ja
pop
mov
movsl
rclb
jbe
imul
pop
sub
cmp
and
popa
inc
lods
lea
mov
jns
dec
cli
sbb
int
neg
lock
mov
scas
push
cmp
fisubl
cmc
xor
outsb
push
add
and
shr
dec
std
mov
push
mov
push
ja
das
or
jbe
movsl
mov
fistpll
daa
push
mov
mov
mov
fs
jmp
sahf
outsb
jl
mov
lret
jnp
jg
bound
aaa
mov
pop
push
adc
imul
bnd
xchg
pop
sar
xor
call
cmp
call
mov
pusha
imul
add
cmp
int
cmp
add
xchg
clc
cmp
or
cmp
addb
test
lds
pop
jge
pushf
pop
push
add
out
cmp
in
add
xor
push
ficoml
insb
rol
test
lret
cwtl
bound
cmp
fldl
insl
cmpsl
imul
je
jb
scas
mov
cwtl
add
jae
xor
fwait
cmp
inc
jo
lcall
mov
xor
lret
stos
pop
dec
sbb
out
xchg
pop
adc
dec
xchg
push
and
fwait
sbb
cmp
jns
or
sarb
mov
xchg
pop
mov
sub
bound
jae
lret
push
jge
inc
std
mov
xor
repnz
sbb
loop
pusha
sub
dec
push
jg
cmp
sbb
add
xchg
xor
rcrl
pop
dec
pop
lahf
cmp
mov
xlat
js
bound
shrl
cmpsb
sqrtps
lcall
les
daa
sbb
or
loopne
push
rol
push
mov
out
hlt
mov
lock
push
jp
sarl
and
xor
inc
loopne
outsb
leave
jecxz
jmp
lds
push
mov
pop
or
xchg
daa
fdivrs
ds
testb
push
xchg
mov
or
int3
icebp
or
jmp
pop
push
arpl
mov
xor
rcrl
cmp
lahf
pop
xorl
mov
js
repnz
mov
test
sti
adc
inc
shll
notb
leave
es
jmp
or
inc
adc
jb
adc
jl
test
or
loop
and
popf
out
xchg
pushf
and
push
sub
imul
push
ret
lcall
in
loopne
outsb
jbe
mov
or
add
repnz
add
xchg
dec
or
mov
mov
and
xorb
xchg
imul
push
mov
cmp
xlat
pop
dec
fs
push
pop
addl
fsubrp
and
mov
sbb
adc
adc
shl
addr16
ja
pop
insl
and
jo
data16
push
pusha
lret
aaa
mov
and
pop
lods
sub
call
push
jne
sbb
jp
dec
cld
in
dec
lea
pushf
cltd
fildl
push
xor
hlt
arpl
mov
in
sub
inc
lret
jno
pusha
or
and
mov
js
mov
push
in
mov
call
pop
shrb
xchg
aaa
inc
pop
jecxz
testb
mov
sbb
aas
inc
repnz
and
sbb
mov
adc
xor
ret
fnstsw
mov
xchg
roll
sahf
stos
in
adc
jb
popa
mov
xor
insl
inc
jecxz
and
push
jp
inc
and
sti
cmpsl
cmpsl
fdivrp
repz
in
dec
mov
fwait
jg
aas
or
out
lcall
sbb
sub
shl
lea
or
into
mov
inc
fmull
or
mov
mov
fstpt
adc
in
push
repz
jo
ret
bound
cmp
std
pop
cmpsb
xchg
mov
sub
test
notl
es
add
and
push
repz
inc
call
adc
gs
std
pop
mov
and
adc
test
mov
stc
xor
test
mov
lods
out
mov
inc
mov
mov
iret
imulb
sbb
cmp
jp
lahf
and
out
jge
rolb
inc
icebp
hlt
stos
testb
clc
aas
lret
icebp
ret
mov
in
mov
lcall
mov
hlt
cmp
bnd
movsb
push
into
xchg
test
shl
xchg
push
divl
std
fisubrs
lret
xor
jo
mov
testl
mov
orl
or
and
pop
pop
lret
bound
mov
insb
or
fisubl
dec
mov
je
arpl
lock
add
loope
shlb
jl
iret
shll
std
cmp
sbb
fmul
cmp
lahf
pop
dec
clc
cmc
in
dec
or
adc
arpl
aam
in
stc
xchg
jb
lahf
sbb
pop
xchg
into
push
test
stos
xor
inc
stos
out
inc
xchg
sbb
add
push
rorl
xor
dec
jno
xchg
lret
shr
subb
inc
icebp
dec
add
jmp
lods
adc
nop
clc
push
ss
shl
cmp
imul
pushf
xor
xchg
xlat
cli
add
loope
fnstsw
hlt
xchg
js
adc
push
scas
sbb
clc
xchg
jo
and
xchg
and
in
movsb
lcall
sarl
loop
mov
inc
adc
mov
pop
arpl
xchg
jle
lret
xchg
stc
xlat
dec
gs
or
into
xor
subl
data16
pop
pop
or
or
xchg
xor
addr16
shl
mov
inc
je
mov
sub
addr16
adc
adcb
mov
pop
dec
out
out
and
mov
adc
cmp
rcl
dec
jecxz
and
cs
xchg
mov
stos
jne
jmp
push
pop
in
pop
testl
mov
and
push
imul
xchg
push
cmc
xor
aam
enter
inc
jle
sbb
ss
hlt
jle
ret
ljmp
gs
inc
jmp
xchg
fidivrl
rcrb
cmpl
aaa
cmp
xchg
test
lods
push
pop
sbb
test
push
test
in
icebp
xchg
and
ret
cli
sub
inc
into
fiadds
sbb
jg
inc
or
jl
out
sbb
lods
mov
inc
stos
not
cmpsb
scas
cld
push
aam
bound
xchg
push
cltd
xchg
push
cli
jecxz
aas
loope
or
hlt
cltd
add
fwait
and
pusha
scas
pop
aas
cmp
subl
stc
dec
out
adc
outsb
aad
shr
stc
mov
dec
stos
fsubrs
sbb
fistps
xchg
mov
inc
mov
neg
inc
stos
inc
inc
jecxz
xchg
mov
fwait
movb
adc
sti
push
jecxz
mov
xor
jg
sbb
jle
cwtl
loopne
fildl
mov
or
inc
mov
hlt
cltd
push
sbb
pop
mov
cwtl
xchg
popf
scas
test
jecxz
adc
mov
cmp
xor
sbb
push
in
icebp
sbb
rcr
push
mov
pop
sar
sbb
mov
mov
mov
pop
mov
nop
notl
daa
jg
test
sub
stos
xchg
pop
fcompl
cmpsl
imul
in
cmp
jge
into
into
sbb
rcrb
cmp
inc
mov
cmp
and
fcmovu
dec
rclb
xchg
test
test
and
mov
mov
pop
enter
addr16
imul
insb
cmp
dec
inc
pushf
xchg
mov
push
xor
xchg
sbb
xor
dec
mov
jo
test
daa
lahf
xchg
sbb
out
fisubrl
cmp
mov
cltd
int
aam
xchg
popa
int3
cmp
sahf
and
lods
mov
ljmp
dec
subl
loopne
xchg
or
lock
push
pop
mov
dec
jmp
in
mull
sbb
mov
pop
daa
cltd
add
ljmp
insb
enter
push
test
jle
xor
sbb
xchg
pop
mov
xor
mov
je
fldcw
sbb
inc
insl
push
push
push
jg
out
pusha
mov
cmp
add
push
shlb
and
jmp
les
ret
mov
ss
lret
mulb
xchg
scas
aad
lahf
cmc
clc
pop
push
dec
enter
into
xlat
or
ds
movsb
dec
pop
fdivs
dec
sbb
xorb
sub
adc
cmp
sbb
stc
sbb
cltd
sub
stos
mov
xor
push
adc
lahf
das
push
add
jnp
out
testl
movsl
jp
leave
xchg
dec
adc
adc
push
mov
in
sub
mov
inc
out
xchg
dec
pop
xor
icebp
mov
push
or
jp
repnz
dec
cmp
subb
in
lods
inc
mov
sbb
cmp
or
xor
ja
add
add
mov
xchg
test
push
jne
cmp
dec
mov
jle
push
push
or
adc
or
xchg
push
mov
xorl
imul
pop
jne
mov
movsl
js
xor
fistl
mov
scas
out
pop
jle
pop
cmpsl
rcrb
cmpsl
pop
fstps
and
bound
lret
mov
push
cmp
cmp
mov
or
les
mov
aaa
cli
add
inc
inc
sarl
jle
nop
dec
cmp
call
es
cmp
adc
std
test
dec
jnp
and
xchg
jbe
xor
mov
loopne
adc
in
cs
shll
or
imul
jno
loop
add
or
mov
add
or
ret
call
dec
xchg
insl
mov
mov
sbb
ficomps
mov
or
enter
xor
push
xor
lret
ss
lret
cmp
fs
jmp
bound
imull
and
pop
imul
jmp
jno
mov
push
nop
inc
mov
jne
cmp
or
xor
cmc
rcll
lcall
pop
cmp
movsb
sbb
out
arpl
xor
jae
lret
jle
pop
sbb
push
loop
pop
xchg
scas
jno
fwait
cmp
call
or
mov
dec
out
imul
shlb
mov
es
negb
cmp
lea
outsl
dec
aam
ja
lret
js
sahf
adc
dec
dec
out
inc
jnp
jmp
pop
mov
test
test
add
inc
mov
dec
dec
les
int
lods
mov
mov
roll
out
loopne
cld
jmp
ss
pushf
add
repz
ret
push
and
lahf
gs
sbb
pop
mov
add
mov
ret
and
lret
cmp
sbb
hlt
mov
xchg
gs
mov
pop
fidivrs
pop
loopne
add
cwtl
xor
pop
add
int
adc
std
pop
xchg
popa
mov
mov
aas
fwait
or
sahf
cmp
push
jae
pop
mov
fwait
jecxz
popa
xchg
cmc
jns
ja
lahf
push
push
xchg
jbe
addl
lods
add
sub
mov
int
push
pop
dec
insb
dec
fisubrl
push
jae
jo
or
test
fpatan
pop
push
adc
stos
es
lret
mov
pop
adc
push
leave
push
mov
ds
xor
push
mov
pop
js
sbb
repnz
sbb
f2xm1
inc
jne
inc
mov
jo
jge
add
out
mov
mov
cld
ljmp
push
cmc
dec
xor
es
int3
sbb
sub
and
sti
push
rorb
sbb
adc
shrl
test
inc
cs
pop
mov
mov
mov
mov
imul
dec
inc
mov
add
imul
das
in
scas
jnp
js
ljmp
mov
ja
daa
cmp
out
inc
pop
push
mov
insb
cmp
rdmsr
mov
addr16
hlt
lret
daa
mov
mov
lret
enter
mov
jns
cmp
sti
xor
test
sahf
adc
xchg
pop
cs
lahf
push
andb
mov
pop
adc
mov
pop
push
push
out
js
mov
mov
xor
jb
int3
dec
xchg
jge
jmp
inc
dec
pop
shr
cmc
mov
mov
or
inc
inc
push
xorb
cs
decb
mov
in
xchg
out
pushf
xor
shll
cli
popf
mov
sub
xchg
nop
sbb
push
fstpt
jge
pop
cmp
pusha
xor
add
mov
add
fsubs
stos
pandn
mov
out
jmp
lods
dec
sub
cmpb
fnstsw
dec
sub
push
and
mov
out
lcall
inc
fists
inc
xor
cltd
ret
out
adc
mov
push
and
insl
inc
cltd
mull
sub
or
lcall
cli
clc
sbb
cmp
xor
xchg
mov
in
loopne
cmpb
ljmp
dec
cmc
std
cmp
orb
cmpsl
sbb
push
dec
jecxz
movsl
push
jae
inc
jge
mov
lea
jle
and
jle
int
inc
cmpb
sahf
mov
lods
out
loopne
out
or
iret
iret
sbb
in
push
sahf
fstp
sbb
lock
insb
fsubl
in
sub
sti
in
mov
sub
lods
test
call
clc
jmp
jbe
int3
push
inc
add
dec
sub
enter
fs
stc
negb
leave
pop
in
sahf
jbe
call
dec
mov
adc
inc
lods
iret
dec
jae
stc
mov
push
mov
inc
sbb
pop
hlt
andl
test
sbb
inc
mov
adc
adc
pushf
lea
into
loopne
js
hlt
mov
cmp
aam
sti
mov
das
jae
fisubs
push
clc
imulb
jle
stc
mov
cmc
in
xchg
adc
andb
outsb
mov
inc
fs
fwait
ja
jmp
insl
loopne
int
jo
sbb
adc
sub
and
popf
pop
push
scas
aaa
fwait
cld
fisubl
cli
dec
out
out
xor
xchg
mov
mov
dec
jnp
das
iret
xchg
inc
call
daa
rcrb
xchg
je
rcl
pop
add
jae
jle
and
xchg
push
sub
sbb
nop
or
or
hlt
sub
mov
outsl
cmpsb
mov
mov
outsl
dec
inc
xor
rolb
ror
sub
std
mov
les
jmp
xlat
imul
sahf
lods
call
pop
mov
ds
pop
mov
xor
out
sub
xchg
stc
fimuls
mov
inc
xchg
inc
repnz
rorl
into
add
xor
mov
xchg
rclb
rcl
iret
adc
jbe
movntps
inc
xchg
mov
cmp
fs
pop
mov
add
sbb
iret
jg
or
xor
pop
dec
cli
and
sub
jae
rcrb
addr16
mov
hlt
jnp
cs
sbb
dec
ds
add
inc
sbb
lret
sub
sbb
cli
out
mov
inc
add
jbe
enter
pop
ret
lret
lds
push
mov
push
test
jg
dec
hlt
leave
mov
push
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
mov
sub
mov
mov
subl
cltd
sub
push
add
mov
add
inc
adc
push
push
mov
movl
mov
mov
mov
xor
xor
orl
xor
adcl
add
movl
adc
xorl
xor
xorl
xor
movl
cmp
movl
jne
movl
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
orl
mov
orl
mov
mov
orl
xor
adcl
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
pop
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movzbl
sub
push
or
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
mov
and
mov
sub
mov
mov
andl
movl
addl
movl
andl
mov
xorl
mov
sub
xor
mov
mov
sub
sub
mov
orl
add
mov
xor
mov
or
xor
mov
addl
sub
mov
mov
xor
adc
mov
notl
addl
mov
mov
sub
and
mov
mov
xor
and
mov
addl
mov
mov
xor
andl
mov
mov
mov
sub
xor
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
mov
negl
xor
mov
add
xor
mov
sbbl
mov
xor
mov
sub
and
mov
addl
xor
mov
add
movzbl
movzbl
adcl
sub
mov
movzbl
xor
mov
or
mov
xor
add
andl
mov
andl
lea
adcl
mov
adcl
lea
mov
sbbl
lea
mov
orl
lea
andl
mov
adc
mov
sbbl
xor
add
andl
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
lea
neg
mov
push
sbb
mov
mov
lea
add
mov
sub
mov
dec
mov
and
mov
orl
xor
add
subl
mov
xorl
mov
mov
mov
xor
mov
mov
andl
add
movl
cmpl
je
cmpl
jne
push
call
xor
add
dec
mov
jmp
push
mov
sub
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
mov
addl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
adcl
xor
mov
mov
and
mov
add
movl
cmp
je
movl
mov
movl
jmp
mov
mov
cmp
jne
movl
push
jmp
mov
notl
mov
movl
cmp
movl
jne
or
mov
add
xor
addl
add
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
adc
mov
mov
orl
xor
add
xorl
imul
mov
sbbl
xor
addl
add
cmp
jmp
jl
lret
mov
test
rcl
ljmp
bound
pop
bound
fsubl
dec
and
sbb
xor
lds
dec
sub
pop
addr16
xlat
scas
movsb
mov
mov
add
das
xchg
adc
pop
dec
add
stos
enter
mov
mov
aas
jo
sub
cltd
sti
jae
call
jecxz
iret
adc
cs
bound
pop
push
fwait
xchg
xchg
fstp
jne
jb
adc
push
and
add
mov
push
pop
stc
inc
pusha
test
push
cmp
enter
inc
repz
movsl
pusha
fsubl
push
xor
adc
nop
jg
idivl
sbb
lock
insl
scas
and
jg,pt
int3
xor
std
fisubrl
push
adc
loopne
pop
xchg
xor
call
push
xlat
lahf
int3
dec
inc
pop
arpl
lret
mov
shrb
ljmp
ljmp
rcrb
inc
imul
mov
mov
pop
dec
add
outsl
or
popf
lds
xor
or
inc
rorl
sub
xor
sbb
lahf
dec
call
sahf
inc
and
inc
cwtl
add
dec
push
inc
sub
pop
add
mov
sbb
mov
inc
push
cli
lcall
cmp
or
movsl
sub
mov
push
fcmovnb
dec
bound
pop
or
xchg
add
push
or
mov
loopne
xor
push
sub
std
add
and
jb
popa
adc
iret
shlb
cmp
out
cmpsb
and
insl
mov
daa
sahf
fiaddl
ret
movaps
rcll
cmp
cmp
mov
mov
mov
mov
inc
mov
mov
mov
scas
loope
loop
mov
pop
mov
cmp
das
loopne
lcall
push
mov
test
or
into
shll
dec
cltd
in
std
ds
mov
scas
popa
sarl
imul
je
arpl
mov
in
lcall
jo
xchg
iret
test
fisubrs
mov
out
out
ret
imul
cmp
push
cli
aas
adc
cmp
js
pop
data16
and
ds
lret
mov
push
cli
js
jecxz
scas
xchg
clc
inc
fwait
mov
push
leave
push
push
sub
cmp
pop
dec
js
push
jo
bound
push
aas
roll
jmp
push
xchg
out
mov
inc
add
scas
ljmp
xchg
dec
enter
lcall
imul
push
js
repz
mov
adc
lcall
xchg
mov
ljmp
sub
cmpsl
adc
push
inc
inc
xchg
inc
cwtl
lock
xchg
gs
xor
dec
sbb
add
lret
sbb
mov
jns
sub
or
addr16
stos
mov
adc
pushf
insb
cltd
sahf
into
and
adc
aam
add
cmp
test
mov
fsubl
inc
mov
shlb
cmpsb
into
mov
inc
ficoms
ds
into
lods
xchg
repnz
fwait
test
cmpsb
mov
cld
into
inc
sahf
add
popa
sti
lret
push
mov
repz
stos
ja
loopne
sahf
jae
mov
dec
inc
push
or
addr16
dec
lods
out
jecxz
mov
push
inc
loopne
xor
stos
popf
jno
xor
mov
jo
imul
les
push
and
xor
cwtl
sub
lahf
xchg
fs
dec
movsl
cwtl
sub
jl
nop
dec
jg
lret
lahf
jns
es
test
rolb
inc
inc
xchg
cmpsb
out
inc
mov
xchg
outsb
insb
xlat
fmul
stos
les
jmp
add
xor
out
je
sub
sub
and
jmp
decb
dec
insl
push
insl
sbb
scas
lods
clc
jnp
cmpsl
mov
inc
mov
mov
fistl
aam
in
inc
ds
popl
push
dec
cmp
ror
xlat
jne
notb
lock
mov
leave
add
xorl
js
je
push
scas
out
add
js
mov
stc
cmpsb
mov
xrelease
sbb
aam
in
nop
xchg
out
xchg
repnz
jecxz
or
dec
nop
jbe
rcrl
sbb
lret
scas
jecxz
fs
mov
clc
xor
pushf
hlt
jo
das
roll
pop
pop
sub
mov
adcb
cmp
dec
in
xchg
fwait
les
inc
mov
push
dec
aaa
and
xchg
ds
repz
loopne
dec
inc
lds
push
std
loope
outsb
cs
int
std
sarb
mov
cmc
push
xor
adc
ljmp
or
xor
ficoml
test
ret
mov
scas
and
xchg
inc
psadbw
addr16
cmc
test
repnz
lods
dec
mov
data16
push
xor
push
ss
or
xor
sbb
mov
hlt
cmp
sahf
es
jne
mov
outsb
add
scas
jl
ret
xor
lret
dec
bound
outsb
push
xor
mov
and
icebp
adc
push
ds
adc
aaa
mov
je
out
test
int
or
pushf
jg
push
xor
cmp
dec
and
mov
and
lock
xchg
jb
mov
add
mov
xor
out
mov
ret
outsb
push
pop
mov
inc
xchg
movsl
movsl
ss
stc
movsb
or
mov
lods
insl
xor
mov
sbb
xor
sahf
mov
rolb
push
cmp
mov
iret
int
dec
xor
mov
das
jno
pop
jnp
jg
out
out
test
pop
add
inc
jmp
cmp
pop
dec
push
cs
push
inc
adc
nop
fst
lds
or
rol
test
adc
and
pop
inc
cmp
jns
ja
dec
rcrb
mov
scas
push
stc
pop
sub
test
jl
dec
fwait
mov
fcmovb
sbb
or
out
test
xor
in
jl
andb
out
stos
hlt
xor
jno
xor
das
lds
xorb
add
mov
stos
push
insb
cltd
loop
xchg
inc
pop
mov
jo
xchg
mov
mov
mov
mov
or
aas
inc
jmp
cmpsb
add
movsl
xchg
popf
nop
push
leave
cmpsl
or
into
arpl
stos
mov
xor
popa
push
xor
jae
imul
push
sbb
fsubrs
adc
sub
pop
jo
add
mov
mov
aaa
loope
movsl
sbb
jle
mov
jle
ffreep
xchg
push
inc
call
fidivrs
dec
data16
int3
jo
adc
push
sbbl
push
or
push
scas
fxch
lcall
mov
ret
loopne
leave
mov
out
adc
xchg
push
sar
pop
pop
sub
btr
xor
aam
fisubl
ljmp
ja
jg
decb
mov
mov
or
sbb
std
and
scas
repz
xchg
mov
out
mov
push
push
loope
int3
sahf
stos
add
lea
cmpsl
inc
lods
adc
mov
push
pop
iret
std
or
inc
push
xchg
jbe
pop
rolb
push
push
mov
cmc
pop
inc
and
and
inc
sub
and
sub
push
add
shlb
fbstp
int3
in
js
pop
rcrb
or
sar
or
mov
testl
ja
pushf
mov
mov
add
popa
xor
mov
addr16
mov
or
inc
mov
jl
adc
cmpsl
mov
in
rep
movl
shr
lcall
inc
daa
stos
ds
ljmp
int3
iret
icebp
ds
cmp
vpminsw
cmp
lret
lods
movsb
pop
mov
add
lock
mov
fdivrs
mov
sahf
xchg
xor
adc
test
inc
jnp
push
inc
push
adc
adc
sub
fcomps
into
pop
jmp
dec
ljmp
pop
sbb
test
dec
add
dec
aad
jecxz
cmc
ret
fwait
inc
mov
pop
mov
xchg
dec
push
jmp
lahf
lea
push
repz
in
addr16
and
pop
push
inc
rorb
sbb
data16
fcomps
inc
in
les
sbb
jnp
stos
push
cltd
push
decl
out
xchg
jecxz
loope
les
sbb
jbe
in
xor
call
xor
push
mov
cmp
loopne
dec
scas
xchg
out
lret
add
addr16
in
out
sub
mov
gs
cmpsl
xor
dec
mov
call
cmp
notl
sbb
iret
xor
adc
sti
sti
in
push
mov
or
enter
aad
add
mov
fmul
pop
adcl
sbb
test
cmp
lret
mov
mov
lret
sbb
xor
push
rcl
mov
mov
into
mov
mov
fisubs
push
inc
cld
sub
lods
sti
repz
adc
lcall
jmp
xchg
imul
in
mov
ja
int
iret
sub
mov
dec
push
aad
sub
repz
out
sub
bound
mov
mov
add
sub
jle
cmpsb
sar
sub
dec
sbb
jne
sbb
sbb
pop
push
test
dec
xor
sub
mov
mov
mov
jp
xor
mov
mov
mov
sbb
xlat
aaa
sarb
rolb
scas
push
arpl
cmc
icebp
mov
xchg
daa
sbb
movsb
out
pop
insl
add
xor
js
push
xor
cmp
loop
mov
rclb
add
jle
lret
sub
lret
int3
cli
insb
loopne
cmp
jecxz
arpl
sti
test
fistps
nop
sbb
in
lea
sbbb
pop
mov
sub
stos
xchg
and
ds
lret
loope
scas
xor
push
mov
or
push
add
xchg
inc
out
fldl
cs
xorl
shll
adc
xchg
push
pop
das
ljmp
ljmp
movsl
jle
and
shll
jae
mov
pop
cs
xchg
loop
das
push
lock
iret
in
cmp
adc
int3
push
xor
add
test
xchg
push
ficompl
clc
mov
shl
bound
call
mov
jno
repnz
iret
fisttps
and
jl
inc
aaa
adc
clc
or
jno
int3
xlat
mov
inc
int
imul
icebp
lcall
mov
pusha
xor
popa
dec
xchg
or
cld
xor
mov
jecxz
xor
xorl
sbb
fldcw
pop
rcrl
je
insl
add
popa
xor
mov
push
xchg
stos
mov
add
inc
push
clc
push
lcall
cmp
decb
xchg
std
cmp
repnz
add
lcall
enter
repnz
je
je
popf
cwtl
sbb
stc
ja
mov
aam
aam
in
lods
cltd
into
jmp
lock
xchg
and
pop
add
in
ficoms
out
dec
cwtl
xchg
adc
jp
repz
jo
add
aaa
das
add
jmpw
ffreep
hlt
xlat
adc
xchg
test
lcall
pop
xchg
repnz
imul
mov
push
or
test
xchg
cmpsb
sub
sub
jg
ja
insb
aam
into
fiadds
inc
xor
mov
cmp
aam
sahf
mov
pop
test
cmp
faddl
sti
pop
sti
lcall
leave
jg
jge
jbe
outsl
shrb
pusha
push
mov
loop
dec
jge
and
jns
jl
mov
lret
ds
dec
add
sub
nop
lods
addb
cwtl
paddsb
inc
ja
ficompl
pushf
and
xchg
repnz
test
inc
cmp
cld
cwtl
hlt
inc
add
push
aas
cmp
aam
aam
mov
push
in
pop
push
rclb
inc
pop
jl
jl
scas
sbb
cmp
pop
dec
add
xchg
das
jo
dec
dec
push
add
push
fisubrs
lcall
out
pop
cmp
push
sub
pushl
aaa
movsb
fmul
in
adc
aaa
jmp
sbb
push
scas
xor
aas
adc
shrb
push
sbb
in
data16
jmp
outsb
leave
data16
loope
pop
lock
addr16
movsb
push
inc
pop
stc
imul
xor
sbb
mov
adc
mov
inc
pop
js
cmpb
lds
dec
xchg
add
jo
jl
js
enter
icebp
xchg
push
lret
xor
add
xor
sbb
loop
arpl
jnp
mov
cli
mov
je
test
lahf
daa
or
mov
mov
test
pop
fidivrl
addr16
mov
xchg
stc
gs
sti
into
mov
dec
sub
rcl
or
mov
adc
push
int3
push
cmc
sub
rorl
xchg
ds
adc
sarb
add
pop
popa
cmp
lea
dec
xchg
popf
mov
xchg
xchg
dec
sub
fnsave
mov
and
cmp
add
test
in
pop
test
sub
repnz
push
xchg
and
pop
push
push
sub
cli
jl
daa
pop
rcrb
notb
and
aad
inc
mov
imul
in
mov
lds
lcall
jmp
inc
aad
mov
xor
sahf
ret
xchg
sarb
add
js
sub
mov
flds
incl
daa
mov
clc
jns
dec
and
leave
ficoml
pop
mov
lahf
xlat
inc
aaa
inc
jb
jne
adc
sub
cld
test
ljmp
add
mov
dec
or
and
inc
mov
in
insb
rorl
inc
sbb
lock
dec
sti
leave
mov
inc
sti
xchg
cmc
lea
int
iret
insb
pop
push
and
pop
pop
aam
repz
ds
xor
cmovs
mov
mov
fbstp
xchg
or
arpl
push
ljmp
repnz
xchg
and
push
sub
jecxz
inc
inc
sti
popl
mov
push
pop
mov
shl
out
shrb
or
adc
test
jmp
or
or
sub
bnd
mov
or
outsl
jmp
cmovns
adc
jo
push
insl
mov
cs
rcrb
push
leave
dec
mov
int3
mov
ficomps
sbb
rorb
push
jp
sbb
leave
mov
push
and
mov
orb
test
and
xchg
incb
int3
ja
push
lret
mov
push
fcompl
out
mov
jae
in
jne
or
push
addr16
loope
cwtl
cmp
stc
jae
lods
ds
addl
or
fcoml
cmp
outsl
inc
mov
xchg
sbb
sbbl
pop
xor
mov
loop
inc
mov
into
daa
in
icebp
fidivs
shrl
xlat
ljmp
outsl
fisttpll
mov
int3
mov
jg
cmpsl
call
mov
ret
add
mov
lock
imul
scas
repnz
inc
or
lds
lret
pushf
stos
in
shl
pop
pop
mov
ret
in
mov
inc
mov
push
repz
cmp
nop
lcall
and
dec
loope
and
mov
lret
xor
xlat
pushf
lahf
mov
leave
cmp
aad
mov
cs
adc
icebp
pop
fnstenv
xor
sub
mov
inc
push
in
shlb
xorb
mov
inc
loop
mov
cli
sub
jns
mov
add
stc
sbb
jne
sbb
sbb
mov
in
cmp
push
outsl
sbb
and
lahf
jno
out
lock
lahf
lahf
gs
jbe
pop
popa
push
inc
cltd
jmp
and
jnp
decl
push
and
test
ljmp
add
push
cs
mov
paddusb
sbb
hlt
shr
lahf
mov
add
aam
hlt
int
in
dec
mov
sbbl
jo
lret
push
push
scas
dec
push
das
movsb
in
xchg
jb
sub
xor
xchg
mov
inc
add
adc
loope
push
pop
add
mov
sub
gs
cmp
adc
fnstcw
sub
xchg
dec
or
andb
daa
hlt
pop
loope
lcall
nop
loope
jo
roll
iret
imul
int
adc
es
out
inc
sbb
lcall
and
or
or
cld
xor
ss
xor
or
loopne
cmp
or
fs
or
and
jle
mov
fsubrl
jmp
movsl
je
and
xchg
lcall
lahf
sbbb
ljmp
mov
pop
xchg
jae
adc
lods
daa
sbb
ss
mov
xchg
push
dec
wrmsr
mov
scas
out
add
xchg
pop
iret
push
outsl
das
xor
push
leave
push
jmp
mov
xchg
sub
ss
aaa
pusha
adc
jns
stos
mov
jo
insl
into
pop
popf
hlt
es
jmp
xchg
or
jmp
in
mov
xchg
pop
lods
cmp
or
xchg
mov
pusha
mov
shrb
jp
aaa
mov
mov
enter
leave
xchg
adc
je
mov
out
scas
jbe
add
sti
mov
and
insb
inc
cmp
popa
jmp
cmpsl
jp
in
pushf
nop
aad
in
xchg
roll
push
dec
insb
xor
cltd
and
arpl
or
xlat
jne
push
test
add
mov
inc
mov
push
fcomip
ret
movsb
sbb
bound
mov
xchg
scas
popf
xchg
test
xor
mov
mov
cs
inc
loopne
aad
xor
mov
rcl
dec
rclb
lds
out
fcompl
test
mov
mov
pop
sbb
xor
data16
lods
lods
rcrl
les
sub
sbb
adc
cli
aam
aas
imul
push
cwtl
or
leave
stos
out
xchg
lock
xchg
dec
addb
xchg
pop
sbb
cmp
insl
inc
sti
xchg
out
mov
stos
cli
icebp
imul
cmp
les
push
stc
leave
les
mov
jbe
mov
dec
lds
sub
xchg
movb
pop
dec
mov
inc
pop
lods
mov
ret
dec
pop
cmpsb
js
cmp
push
lea
mov
xchg
sbb
mov
ret
push
sub
scas
mov
mov
dec
dec
sbb
icebp
jns
dec
push
sti
fs
fdivr
fsubl
dec
push
shlb
pop
add
jecxz
cmp
pushf
mov
adc
mov
clc
dec
shr
mov
addb
movsl
jnp
test
or
and
pop
sahf
xor
inc
out
inc
mov
push
movsl
out
cmpsl
xchg
jnp
lret
out
mov
adc
fsubs
push
push
adcl
sub
test
sub
test
adc
daa
sub
int3
add
jmp
pop
arpl
push
movsb
stos
aaa
ds
push
movl
or
aad
test
jbe
mov
pop
out
inc
or
dec
xor
sub
mov
data16
xchg
stc
cmpsl
or
xor
add
or
popa
xchg
sbb
push
mov
inc
call
into
push
in
fwait
jg
mov
dec
test
or
jns
jecxz
sbb
int
mov
mov
rcrb
popa
je
lds
nop
icebp
sbb
cltd
stos
fistps
faddp
sbb
cmp
xchg
lcall
dec
aas
lahf
sub
out
nop
por
hlt
mov
cmp
int
scas
pop
mov
sbb
div
stos
sub
jne
int
jbe
push
cwtl
lods
sub
daa
xchg
mov
lea
aad
mov
or
xor
pushf
filds
test
shll
test
push
xor
arpl
adc
adc
hlt
sub
adc
and
mov
inc
push
or
cmpsl
and
push
sti
sbb
mov
sar
cli
sarl
jo
data16
scas
sub
enter
movsl
rcrl
test
gs
and
ret
pop
jae
mov
jbe
push
sbb
ret
in
fildl
pop
test
xchg
jns
sbb
push
daa
hlt
imulb
sub
mov
scas
int
adc
sub
mov
lock
pop
ret
out
jns
jmp
pop
mull
inc
jns
pop
cmp
in
inc
stos
mov
or
les
movsb
scas
filds
daa
mov
stc
stos
push
into
mov
and
rcrl
int3
mov
or
xchg
jne
test
ja
xchg
fstpt
and
jg
loop
rcll
jo
and
outsl
in
sahf
sub
lret
scas
lahf
iret
push
movsb
pop
xorl
xor
idivb
mov
adc
push
clc
mov
push
ja
sbbb
push
xchg
pop
mov
inc
je
mov
es
stos
mov
fnstcw
pop
mov
ret
test
adc
inc
ss
rorl
push
cli
movsb
and
es
shlb
or
shl
adc
cltd
mov
rorb
inc
inc
push
fwait
dec
sbb
pop
cmp
outsl
fsubr
xchg
cmpb
sbb
cmpsl
test
sbb
shl
sub
mov
rorl
cli
sbb
sbb
jge
arpl
fdivs
adc
cmp
rcr
lea
xchg
cmp
scas
mov
xchg
cltd
cmp
jmp
and
mov
dec
loop
stos
les
aaa
xor
adc
clc
add
imul
cmc
xor
jnp
icebp
lods
mov
sbb
stos
jae
rcr
dec
in
loope
sub
fucom
cmpsb
cmp
test
dec
sub
repz
xchg
sub
add
sbb
aaa
cmp
and
xchg
add
sub
push
adcl
outsl
add
cld
arpl
aam
pop
or
fwait
or
mov
daa
fcom
push
mov
push
push
mov
inc
in
inc
test
stc
push
or
aad
lock
mov
sub
mov
xor
rolb
int
cs
fidivl
mov
or
fsub
cld
aaa
insl
imul
movsl
cmp
lea
mov
lret
adc
xor
cmp
dec
std
dec
lods
cmpsb
leave
xchg
fs
cmpsb
cmp
out
test
leave
in
pushf
jg
nop
cmp
pop
out
xchg
adc
aas
pop
loope
jg
jno
shrb
bound
hlt
pop
sbb
pop
sbb
divb
cmpsl
and
dec
pusha
sti
leave
push
sbb
cmpl
ret
into
roll
sub
sti
ror
test
out
lcall
aad
push
inc
in
shl
stos
mov
and
push
xchg
popa
dec
inc
data16
shlb
clc
mov
xchg
xchg
mull
fsts
aas
mov
and
sub
es
in
fbld
repz
movsl
push
xchg
leave
add
jp
ja
cltd
out
pushf
roll
xor
xchg
bound
push
adcl
movsl
es
inc
and
add
shrl
cmpsb
or
jecxz
inc
sub
fsub
pop
jecxz
pop
shlb
addr16
or
fcomps
sub
popf
mov
jmp
sbb
std
push
add
jo
call
adc
push
lock
lea
call
mov
pusha
or
stc
sbb
fcomps
out
mov
pop
adc
jbe
mov
imul
adc
adc
lret
push
ret
push
arpl
out
or
pop
test
popa
outsb
das
mov
cs
cmc
sub
ret
test
xor
cmp
ja
in
stos
cmp
fwait
aaa
mov
ja
jns,pt
adc
cmp
xchg
adc
or
pushf
push
stos
fs
sarb
xchg
scas
cmc
dec
insl
je
and
ret
gs
jecxz
xor
pop
in
dec
add
push
pop
loopne
lock
inc
push
adc
stos
fwait
mov
mov
dec
dec
andb
push
outsl
lret
dec
dec
xorb
cltd
out
sbb
mov
jne
pop
cltd
fwait
xchg
and
pop
xchg
nop
cmc
pop
lods
dec
in
adc
lds
cmp
push
cmp
mov
ret
push
add
push
ja
adc
xor
mov
pop
out
divb
add
or
ret
xor
pop
mov
int
js
sar
pop
inc
divl
test
lcall
imull
mov
test
jae
push
cmp
dec
js
mov
not
mov
push
int
sbb
mov
adc
push
xchg
enter
repz
popa
lods
jp
data16
xchg
negl
sbb
jae
and
mov
ds
lods
adc
mov
gs
dec
loope
sbb
into
insl
insl
pusha
in
adc
fwait
idivb
lods
aam
sub
pop
xchg
stc
shrb
cmc
outsb
sbbb
mov
add
fidivrs
ss
andb
aaa
sbb
hlt
lcall
mov
test
rclb
mov
into
aas
imulb
push
jbe
das
js
pop
mov
mov
negl
pop
lcall
xchg
mov
int
pop
pop
cmc
mov
xchg
popa
pop
inc
add
cmp
gs
sahf
cmc
loop
xor
xchg
jmp
lcall
icebp
adcl
inc
ja
arpl
mov
inc
aaa
sub
pop
adc
icebp
daa
cwtl
imul
and
fwait
std
jle
adc
ret
in
xchg
cmp
ljmp
or
enter
clc
sub
pop
sub
insb
add
ja
iret
mov
push
fabs
mov
dec
push
jle
sbb
scas
dec
xor
andb
rcrb
cmp
filds
add
push
cltd
dec
inc
mov
jo
and
mov
mov
jae
ljmp
xor
sub
xchg
repz
pop
stc
mov
dec
adc
xor
fimuls
ret
adc
adc
sub
pop
imul
jno
push
fcmovbe
and
cmp
xlat
xchg
in
lock
lods
aaa
mov
xchg
xorb
cmp
lock
mov
aam
jmp
pop
jp
push
xor
daa
in
sub
push
adc
imul
ret
xor
add
jae
mov
lret
dec
loopne
movsl
ljmp
xchg
daa
lcall
ret
sub
add
movsb
push
cs
and
add
jg
movsb
pop
xor
out
xlat
imul
sub
jae
xchg
dec
jecxz
aaa
xchg
and
test
sub
ja
call
outsb
push
mov
jo
movsl
cwtl
out
jle
fldcw
test
pop
add
out
xor
add
dec
popf
stc
std
in
fstps
mov
adc
dec
hlt
addr16
jnp
mov
dec
inc
clc
stc
iret
dec
mov
mov
add
lahf
leave
lret
rcrb
push
addr16
lcall
js
xchg
xchg
imul
push
dec
sbb
cli
sub
mov
sub
sub
sub
pop
or
push
mov
stos
out
mov
fs
testl
fidivrs
push
or
fucomip
jbe
cmp
mov
or
sti
rol
subl
out
xor
cli
add
add
fcoml
sub
cld
lods
stc
cmp
test
pop
xor
imulb
std
mov
lock
dec
lahf
lods
push
cmp
lods
dec
int3
aaa
pop
push
cs
test
scas
xchg
xchg
rol
inc
dec
add
insb
sbb
xor
jne
pop
int3
adc
pusha
xchg
inc
pop
lea
inc
inc
cmc
xchg
outsb
cmp
adc
cmpsl
xchg
call
pop
inc
pop
pop
jmp
jge
loope
rclb
fwait
inc
stc
cmp
hlt
sbb
leave
popf
sahf
mov
outsb
stos
out
es
outsl
das
adc
jbe
cmp
mov
sahf
out
cli
inc
sbb
add
push
fwait
or
sub
shlb
cmp
je
mov
pop
mov
pop
loop
pop
add
scas
pop
mov
jle
lock
push
hlt
outsb
cmp
popf
mov
and
ficomps
sub
mov
fcoml
adc
aam
pushf
and
fnstsw
cmp
fcomp
das
add
push
lcall
sbbl
jmp
xor
push
outsl
adc
and
fcompl
mov
push
stos
mov
das
push
sbb
lea
addr16
out
push
xor
shrl
shrl
push
mov
outsl
push
cmp
xor
xchg
loopne
clc
cmc
xchg
mulb
pop
and
jp
push
cs
lea
sub
lcall
scas
lret
mov
loope
fadds
fdivrl
mov
cmpsb
les
decl
dec
popf
lods
mov
call
adc
test
fiaddl
adc
in
aad
adc
ret
or
xor
idivb
mov
out
lock
cmpsl
insb
push
mov
sbb
test
mov
jno
lea
fiadds
mov
push
add
mov
push
xchg
sbb
imul
into
adcl
loop
ret
ret
mov
xor
repnz
cmp
clc
inc
sarb
dec
pop
xlat
jmp
adc
fsubrl
aaa
jnp
aaa
loopne
imul
and
aas
jmp
cmp
xor
sbb
jmp
jnp
adc
loope
cmp
fstps
popf
xor
outsb
pop
push
ljmp
lret
add
les
outsb
das
repnz
xchg
xor
add
leave
dec
sub
xchg
mov
xchg
adc
xor
jnp
mov
imul
push
add
mov
or
push
repnz
sbbl
imul
orl
inc
daa
inc
in
mov
inc
push
cmp
pop
jecxz
ja
inc
mov
jbe
ret
pop
xchg
ror
neg
leave
aad
lahf
arpl
or
icebp
inc
gs
inc
mov
mov
dec
mov
jg
inc
cld
push
movl
je
or
mov
movl
add
mov
xor
or
or
mov
decl
xor
add
subl
imul
movl
mov
jmp
subl
mov
xor
sub
mov
andl
mov
add
xor
or
mov
decl
mov
sub
add
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
jmp
jge
xor
xor
add
mov
mov
or
add
hlt
pop
bound
iret
and
cmp
push
mov
mov
mov
dec
std
data16
lret
outsb
lea
mov
aam
mov
mov
mov
in
cld
mov
mov
std
or
xor
inc
cmpsb
inc
fld
aas
push
out
dec
dec
into
and
loop
cmp
mov
out
adcb
lret
int3
or
jl
cmp
adc
imul
add
fndisi(8087
inc
mov
fwait
jmp
rorl
ret
ja
add
or
push
lcall
arpl
ret
ret
dec
aam
pop
stos
push
out
or
dec
adc
jle
mov
nop
pop
in
cmp
notb
fnstenv
shl
dec
imul
cmp
push
ds
adc
call
arpl
pop
fsubl
dec
add
ret
cmp
je
mov
sar
dec
pop
mov
rcrl
pop
fstps
xchg
ret
jg
repnz
aam
fs
outsl
or
test
mov
inc
push
ljmp
int
loopne
xlat
aaa
shrb
pop
mov
xchg
clc
mov
and
pusha
push
xchg
push
and
cmp
xor
sbb
aam
fldt
es
push
dec
dec
mov
addr16
sub
leave
je
mov
jmp
and
dec
loopne
xor
xchg
mov
lds
adc
cltd
or
cmp
jo
adc
loope
aaa
mov
mov
rolb
shl
pop
xchg
loop
jecxz
lea
cmp
mov
lcall
sbb
push
dec
fsubr
sub
xor
jnp
popf
or
in
mov
pop
scas
cmp
jno
jnp
icebp
dec
jno
cld
and
movsb
pushf
jo
test
sbb
add
cwtl
xchg
sub
aas
test
mov
mov
jecxz
cld
out
jo
xchg
shll
mov
xor
scas
sti
adc
stos
popf
lret
rcll
mov
xchg
dec
out
in
cmp
cld
xor
fs
and
mov
mov
cwtl
lret
rcl
mov
jge
mov
mov
or
mov
popa
or
scas
dec
pushf
test
in
cmp
pushf
lods
cltd
cmp
inc
js
scas
out
insb
das
in
ret
cmp
pop
xchg
xor
fwait
leave
and
cmc
repnz
pop
mov
xchg
dec
adc
roll
cmp
pop
sarl
mov
out
or
sbb
mov
aas
push
pushf
cli
mov
sbb
fstpt
mov
sbbb
fsubrl
stc
out
imul
mov
test
inc
fistps
jne
daa
aam
inc
push
sub
cmpsb
imul
call
divb
add
push
ds
out
dec
inc
mov
fisubrl
call
enter
sbb
test
adc
dec
xchg
and
fimull
mov
js
adc
add
mov
mov
insl
frstor
cli
pop
and
or
push
shrl
add
and
and
mov
push
jnp
ljmp
push
ja
incl
jno
fsubrs
fwait
jno
jge
cmp
jb
sbb
out
dec
lret
and
mov
pop
lods
push
add
or
es
sbb
or
xchg
scas
dec
mov
lods
pop
in
ja
in
mov
stc
das
inc
dec
jo
jno
xor
sbb
mov
shrl
cltd
lret
inc
fsubrl
xchg
xor
ds
cmp
adcl
xchg
dec
jmp
lock
push
sbb
stos
cld
movsb
hlt
push
pusha
into
pusha
lods
out
in
in
mov
movsl
push
mov
imul
scas
dec
lahf
xchg
jmp
loope
add
int
cmp
adc
in
pop
mov
or
jne
xorl
icebp
xor
sub
sti
dec
imulb
add
pop
std
jmp
pop
js
jb
clc
rorb
iret
mulb
sbb
inc
in
cmc
cmp
jp
cld
dec
outsl
loope
jmp
and
inc
lcall
mov
and
or
or
imul
mov
pop
adc
mov
mov
lea
loopne
pusha
mov
pusha
test
mov
lock
aaa
arpl
in
mov
movsb
enter
cltd
call
mov
inc
mov
call
cmpsb
mov
pop
and
lahf
sahf
mov
or
aad
fs
insb
daa
popa
movsl
mov
xchg
jbe
je
add
out
fistpl
mov
sub
adc
in
mov
pop
inc
add
sahf
add
lock
enter
xchg
push
push
mov
pop
push
out
push
mov
dec
cli
mov
dec
xlat
fsubrs
mov
mov
sarb
aam
sahf
and
push
pop
push
cld
adc
ror
cmp
pop
push
out
in
sbb
mov
or
stos
sbb
lods
and
pop
scas
and
jg
and
ja
pop
push
push
notl
push
movsl
cmp
or
cli
dec
ss
mov
sub
nop
fnstsw
jns
andb
cmp
ljmp
enter
adc
gs
xlat
dec
add
rol
sub
lock
push
ljmp
dec
sbbl
mov
dec
loopne
jne
pop
push
xlat
out
push
sbb
jge
mov
hlt
xor
ja
pop
mov
pop
jge
rcrl
ret
cmpsb
push
mov
jo
fdivrp
adc
mov
jno
ss
fimuls
xchg
mov
xor
ja
jg
cs
lahf
xchg
iret
jbe
cltd
pop
push
mov
mov
dec
cmpsb
int3
popa
test
jb
inc
pop
mov
repnz
imull
mov
jl
sbb
xchg
rorb
push
push
dec
push
pop
mov
add
pushf
mov
sbb
testb
mov
xchg
xchg
fsubl
scas
mov
dec
sbb
shll
add
mov
xchg
xlat
push
aam
pop
pop
outsl
iret
sub
jno
movsb
pusha
push
xor
cmpsb
call
testl
cltd
daa
not
ljmp
mov
and
pop
jle
insb
cmc
lret
cwtl
ret
loop
int3
mov
mov
sbb
and
imul
and
cltd
addr16
out
aam
loopne
aad
mov
into
pop
subl
shrb
les
pop
lea
popa
pop
or
in
sub
pop
adc
mov
mov
fdivl
scas
inc
push
mov
ja
jne
mov
add
and
andl
or
jl
rcll
cwtl
or
xchg
lds
add
sub
ucomiss
cmp
push
add
loop
add
cwtl
or
mov
pushf
sbb
movsl
push
arpl
outsb
sbb
xlat
mov
scas
inc
cmp
lret
cmp
pop
cmpsl
jp
jb
jnp
dec
in
int3
push
cmpsl
into
nop
inc
mov
inc
mov
stc
clc
push
cs
lods
or
xlat
cmp
push
dec
inc
adc
jbe
sub
mov
push
mov
and
mov
ret
fmulp
cmp
popf
sbb
pushf
orb
scas
and
mov
jnp
cmpsl
dec
sbb
pop
ficompl
inc
adc
cmpsb
outsb
pop
sbb
sub
test
cmp
jno
pop
clc
inc
dec
repz
ss
push
popf
out
mov
mov
stos
pop
mov
clc
shl
pop
mov
xchg
jle
add
scas
jecxz
jecxz
les
aad
rorb
mov
pusha
pop
dec
leave
cs
outsb
divb
sbb
jl
lahf
and
xor
or
outsb
in
cmp
jecxz
das
aad
dec
sub
dec
movsb
in
add
repnz
jmp
out
into
or
xor
xchg
push
jbe
fwait
pop
movsb
dec
and
lea
rol
out
je
addb
jp
add
adc
fsubs
or
pop
ds
add
test
sub
mov
jle
xlat
test
fadds
cs
xchg
shl
xchg
movsb
inc
test
sub
stos
sub
adcl
test
std
fildll
cltd
lods
fldt
xchg
xchg
sbb
pop
mov
dec
gs
jb
cmp
popa
push
ja
or
divb
in
aam
inc
push
mov
das
and
sub
das
scas
cwtl
push
iret
out
psubw
test
leave
pop
mov
mov
push
imul
imul
jae
les
push
push
idivb
leave
dec
fs
daa
daa
push
xlat
shl
stos
push
outsb
in
push
je
push
ljmp
cltd
xchg
sahf
cmp
mov
sub
push
popf
int3
and
int
out
aaa
sahf
pushfw
mov
aad
inc
add
dec
dec
lahf
mov
mov
ret
repz
jle
push
mov
and
ljmp
fiaddl
out
stc
pop
int
mov
mov
inc
movsl
lds
mov
push
and
mov
test
lret
jns
fwait
lret
movsl
enter
xor
push
or
jmp
nop
sti
hlt
cmc
test
cmc
fdivr
mov
xchg
add
cmp
fcomps
mov
ss
mov
loopne
xchg
lea
push
das
sub
test
mov
lahf
rclb
jnp
jp
and
xlat
sub
aad
jmp
pop
cmc
xchg
mov
xchg
sub
dec
mov
mov
inc
inc
pop
fildl
push
dec
dec
aas
lcall
mov
sbb
shrb
sbb
loop
addr16
dec
jo
dec
pop
xchg
scas
dec
sub
ret
out
fcomps
and
movsb
lret
xlat
dec
xor
aam
jmp
dec
mov
inc
sbb
xor
push
or
shlb
repz
lcall
insl
std
add
inc
xor
sub
push
in
lods
roll
aam
das
leave
data16
test
scas
inc
testl
pop
icebp
lea
push
jp
add
test
fsubrp
adc
in
sub
outsb
and
pop
test
add
push
jp
out
sbb
sbb
jl
aad
push
mov
gs
inc
lret
mov
mov
pop
ss
push
hlt
add
push
xor
out
sbb
test
or
enter
lods
scas
sbb
adc
ja
jmp
mov
ds
cmp
sbb
inc
fsubr
movsl
notb
sahf
push
sub
jmp
into
push
lahf
xor
jecxz
mov
jno
ljmp
cmpsl
pop
xchg
subl
lahf
ljmp
dec
push
outsl
jnp,pt
add
mov
pop
cmp
mov
xor
iret
std
out
ficoms
xor
das
xchg
aad
push
mov
push
push
mov
cld
lahf
mov
mov
insb
ret
jp
jno
xlat
ljmp
fildll
push
xchg
inc
out
adc
imul
fildll
fstpl
adc
and
cmovle
outsb
push
cmp
jg
test
adc
and
imul
aas
outsb
popf
ds
ja
mov
push
insb
mov
insb
hlt
push
stos
enter
es
fists
shr
stos
popa
hlt
fbld
jns
test
ror
adc
setle
rol
int
int
jns
call
xor
push
pop
shlb
jns
out
push
xchg
xchg
outsl
xchg
xlat
cld
add
roll
cmp
or
mov
push
das
bound
aam
or
dec
rsm
cmp
test
jle
sub
aaa
mov
inc
pop
adc
jns
repz
mov
sub
popa
das
jnp
push
lds
push
fs
or
push
call
movsb
pop
inc
rol
addr16
aaa
movsl
xor
shll
repnz
fmulp
push
pushf
mov
xchg
dec
out
jae
mov
sbb
ret
lods
and
mov
sti
jnp
sub
ds
loopne
ljmp
dec
das
out
and
outsl
dec
lret
dec
inc
add
push
xlat
sbb
outsl
aad
xchg
sti
mov
cltd
fcomp
cmpsl
stos
cltd
dec
sahf
test
sahf
sbb
sub
mov
test
or
scas
push
loop
lock
lea
sub
dec
addr16
stos
adc
aaa
adc
mov
lea
or
les
jnp
inc
sub
lds
xorb
mov
push
js
mov
push
aad
pop
fnstsw
sar
cmp
fiadds
iret
mov
cld
or
jle
xor
push
ja
jle
mov
jnp
mov
aas
test
fdivs
loopne
xor
stos
mov
shr
in
daa
aas
lret
push
fists
pop
ror
mov
pushf
sar
mov
sub
dec
sub
shll
sbb
mov
mov
popa
mov
and
push
xor
add
and
dec
and
mov
test
pop
cwtl
and
ss
in
addr16
push
and
mov
jge
lea
leave
xor
or
cmc
fstps
inc
bound
add
dec
push
push
add
add
mov
sbb
test
push
imul
out
stos
ret
out
std
pop
or
lods
mov
sub
or
mov
scas
les
mov
adc
mov
inc
push
pop
lea
xor
jle
push
mov
sbb
inc
xor
add
insl
cltd
xchg
pop
lods
pop
push
xchg
repnz
mov
jmp
cmpb
cwtl
pop
adc
js
leave
lds
lret
xchg
pop
and
push
mov
cld
pop
add
decl
inc
popf
cmp
cli
push
mov
iret
add
mov
dec
pusha
lcall
inc
push
push
or
sub
mov
movsb
cmpsb
lock
jae
pop
dec
xor
mov
arpl
jle
arpl
loope
jle
xor
push
push
xorl
enter
mov
cmp
push
in
xchg
ret
clc
add
sbb
cmp
les
or
call
lds
xor
movsl
addl
push
or
or
ds
lcall
xor
sbb
fcom
mov
lret
mov
inc
int3
insl
sahf
xchg
sarl
and
pop
xlat
repz
sbb
sbbb
ret
addr16
movsb
sub
in
sbb
adc
enter
or
jp
and
add
xchg
outsb
shlb
pushf
jl
ds
arpl
mov
cmp
adc
popa
fbld
pushf
sbb
pusha
pop
lret
fldpi
mov
pop
popa
inc
dec
cmp
insb
xor
stc
adc
push
push
loopne
push
enter
lret
mov
and
mov
adc
addr16
mov
repz
pop
test
jp
fdivs
pop
insl
loope
enter
sbb
movsb
sahf
pop
cmpsb
in
insl
inc
shlb
inc
mov
sub
inc
pop
mov
push
stc
stos
and
in
sub
cmpsw
xor
inc
dec
push
jns
dec
stos
or
sahf
into
pop
inc
inc
xor
jmp
int
jns
pop
movsl
sub
lahf
xchg
xchg
sub
leave
cmpsb
loope
cmpsl
pop
xchg
imul
jp
cmpb
out
in
mov
jl
loopne
cmp
mov
bound
imul
aas
fsts
dec
sub
dec
mov
or
daa
xor
adc
or
std
sbb
orb
sti
loope
aaa
test
cmpsl
ja
mov
pop
push
mov
adc
xchg
jb
test
or
loope
inc
lea
test
adc
repnz
push
out
mov
jns
addb
inc
movsb
call
nop
aaa
xor
das
scas
stos
lods
mov
cmp
adc
test
xchg
sub
add
adc
int3
lds
in
sahf
imul
imul
push
mov
adc
pop
stos
fdivrs
push
test
js
mov
fwait
pop
lcall
stc
mov
and
xchg
popl
dec
sub
cmpsb
in
and
mov
jp
sbb
xor
jno
pop
divl
mov
push
push
xor
sbb
push
jb
jae
out
xchg
addl
jg
xchg
loop
nop
xchg
movsb
addl
mov
sbb
or
pop
mov
add
mov
xchg
jbe
jmp
das
pushf
cmpsb
scas
lcall
jp
inc
fs
pop
sbb
xor
sub
pushf
fldcw
mov
ret
popa
mov
push
and
popa
loopne
dec
pop
bound
daa
js
mov
add
inc
das
bound
push
outsl
add
testb
push
fsub
add
rol
mov
fwait
pop
mov
adc
and
inc
mov
loop
ss
flds
fcoms
fldenv
xor
inc
jmp
int3
cs
hlt
call
addr16
jbe
cmp
mov
push
adc
daa
out
cmp
push
jmp
sbb
adc
mov
jno
xchg
mov
sbb
mov
lds
sbb
add
add
shlb
mov
and
stos
add
cld
xor
jle
insl
addr16
xchg
rorl
xchg
cmpsl
push
shlb
adc
jb
frstor
dec
ret
mov
fistps
dec
fwait
sbb
js
mov
out
std
pop
mov
xor
or
hlt
xchg
notb
jle
mov
arpl
mov
pushf
icebp
clc
and
fcoms
xor
sbb
sub
lret
jge
mov
mov
adc
sub
dec
dec
repz
push
xchg
fcompl
lods
aas
xchg
cmp
sub
add
divl
mov
pushf
sti
out
pop
inc
jno
sub
sbb
mov
notb
out
sar
xchg
and
cmp
mov
push
lock
hlt
mov
inc
sarl
adc
adc
sub
mov
push
sbb
adc
loope
mov
pop
mov
pushl
and
push
into
push
jb
movsb
test
enter
lahf
cmp
xor
xor
les
inc
push
mov
es
mov
sub
roll
rcrb
push
jno
mov
test
stc
push
cmp
add
jno
popa
lock
outsl
xchg
pop
test
stos
loopne
jnp
ds
insl
fs
inc
outsl
push
loope
adc
lcall
add
or
fimull
cli
jg
lahf
pushf
int3
jle
mov
leave
jle
and
or
sbb
fisttpl
iret
adc
mov
mov
fldenv
je
dec
loop
and
mov
fnstenv
cmp
in
stos
xchg
stos
xor
push
mov
push
ret
icebp
ja
sub
xor
xor
mov
pop
ljmp
addr16
push
ja
dec
add
sti
repz
sbb
mov
ret
sub
jl
or
jge
aad
sbb
scas
pop
aad
inc
add
dec
ja
pop
mov
pusha
fwait
and
repnz
gs
or
cmpl
push
jg
shl
inc
xor
int3
push
sbb
insb
pop
mov
fistpll
loopne
jns
lods
stos
add
sbb
mov
setae
inc
add
jp
addb
or
or
dec
jmp
cmpsl
sahf
push
and
dec
mov
int3
rolb
adc
sub
or
xchg
jbe
pop
lret
ret
mov
push
icebp
stc
mov
sub
sub
mov
lret
ds
mov
jbe
push
mov
mov
inc
in
sub
aas
test
ficoms
cmp
mov
into
shrb
aad
lods
cld
xor
mov
push
scas
push
enter
mov
cld
pinsrw
adc
lret
loope
inc
shrb
stc
xor
mov
xor
pusha
cltd
cltd
in
dec
mov
pop
inc
lea
out
xor
loope
and
dec
test
loope
aad
dec
pop
xchg
es
leave
stos
sbb
mov
mov
test
lds
push
sub
loop
ja
dec
adc
xor
mov
xorl
sbb
xlat
pop
frstor
push
sub
inc
sti
pop
or
push
and
bound
xchg
mov
ret
imul
inc
ss
adc
pop
dec
dec
arpl
movsl
ret
mov
adc
sarl
in
fdivrs
les
mov
jmp
sub
push
ret
mov
js
push
bound
and
cwtl
sbb
add
xchg
cli
and
mov
out
out
mov
les
dec
mov
ss
imul
cmp
jbe
push
push
cmp
and
pop
cmpsb
addr16
push
mov
ret
or
xchg
mov
out
pop
ret
aas
aam
pop
inc
pop
js
pop
pop
inc
cld
push
cmp
into
sbb
adc
cmp
xchg
sbb
add
bound
int
mov
scas
xchg
fs
push
mov
dec
jno
loope
scas
ror
jae
jb
nop
pusha
add
cmp
inc
adc
jmp
inc
xor
jae
mull
insb
shlb
cmp
je
add
cmp
mov
shlb
pop
jbe
inc
insb
add
scas
fsubr
mov
adc
adc
enter
cwtl
mov
movsb
sbb
mov
pop
push
mov
pop
push
pop
sub
int3
call
and
push
sub
or
sarb
cmp
xor
daa
inc
stc
add
pop
aam
xlat
sub
sbb
ja
or
fcoms
sbb
ret
adcb
je
xchg
in
pop
or
stc
inc
sbb
int3
fstps
mov
jl
test
shll
cmpsb
and
mov
adc
fbstp
test
cmpsl
or
shll
inc
pop
cmp
mov
int
imul
pop
nop
fs
popa
adc
shlb
sub
pop
inc
leave
insl
rorb
inc
lahf
adc
stc
xor
or
sub
xor
cmp
push
je
movsl
inc
insl
xchg
add
cs
stc
sbb
mov
pop
das
jcxz
dec
mov
push
out
lock
out
rclb
das
loope
adc
push
xor
mov
insb
sbb
loope
rolb
or
rorl
cmp
mov
add
repz
jb
cltd
add
adc
pop
adc
lods
or
fld
movsl
fdivl
je
mov
push
jecxz
aad
push
xchg
enter
pop
inc
das
pop
cs
ja
cmpsb
xchg
movsb
pop
iret
enter
push
aam
add
cmp
xchg
jo
sub
movsb
xchg
mov
inc
loope
imul
sti
jmp
jo
sbb
sub
loop
sbb
push
push
xor
out
or
sub
mov
fiadds
adc
push
andl
xchg
lret
popa
xlat
adc
clc
jecxz
xchg
movsl
mov
test
mov
push
jne
or
frstor
sbb
iret
push
push
jl
outsl
or
pop
out
mov
hlt
mov
and
jmp
adc
sub
repz
nop
push
aam
ds
adc
push
and
fwait
sbb
push
xor
or
mov
mov
lods
stc
mov
mov
jbe
xor
mov
repnz
test
test
out
lea
icebp
jb
push
in
xchg
lret
filds
xchg
daa
ss
movsl
cmp
ret
nop
in
in
fstl
rorl
mov
mov
jb
mov
add
push
fmull
cld
push
enter
dec
into
pushf
lock
bound
loopne
dec
mov
inc
out
jne
scas
fs
jns
mov
mov
call
and
lcall
nop
xor
insb
push
movsl
pop
pop
cs
in
push
jae
test
mov
out
das
push
sbb
sub
adc
cld
dec
fsts
add
mov
mov
pop
add
mov
data16
aaa
adc
cwtl
enter
dec
dec
lahf
or
push
stos
push
out
jne
sbbl
hlt
cltd
je
cmp
jno
rolb
and
push
das
pop
std
addr16
dec
lods
xchg
xchg
mov
dec
inc
das
adc
inc
add
repz
jp
sti
xchg
jnp
inc
inc
cld
ficoml
jle
sub
mov
and
test
pop
xchg
pop
inc
test
insl
jge
add
xchg
cmp
adc
pop
jp
lds
xchg
sbb
and
lret
fldenv
stos
fsubl
push
mov
loop
test
push
repz
jmp
rcl
mov
mov
inc
enter
cmp
fwait
xor
pushf
push
faddl
fnstenv
pop
push
dec
fwait
es
dec
pop
and
sti
insl
scas
or
add
hlt
int
test
rcr
and
popa
push
add
sbb
dec
pop
jmp
inc
inc
mov
dec
adc
pop
popf
lds
sub
jp
insb
sub
add
adc
nop
mov
jns
into
xchg
push
jp
stos
subl
adc
shrb
inc
repz
mov
adc
dec
loopne
sbb
inc
lret
pop
fs
xor
in
mov
mov
inc
and
jle
jns
ret
push
call
or
shlb
rorb
cmp
sub
adc
addr16
orb
mov
sub
in
adc
adc
xchg
fimull
in
adc
popf
dec
ss
or
ds
dec
lret
test
jb
xchg
int3
shlb
and
dec
in
mov
scas
adc
sbb
push
fwait
cmp
test
xchg
out
test
jp
dec
add
pop
xor
inc
sbb
clc
icebp
sub
in
fcomi
pusha
push
pop
adc
std
pop
xor
rolb
lret
mov
iret
ret
and
xorl
aad
sbb
sbbb
inc
mov
inc
push
test
in
lock
loop
fisubrs
sub
jns
lods
push
imul
out
xchg
mov
pop
test
in
fsubrl
or
xor
mov
mov
movl
testb
sub
addr16
xlat
outsl
sbb
sub
orl
fdivs
cltd
mov
fidivrs
pop
ja
jl
shrl
stc
xlat
pusha
ficompl
repz
out
arpl
cmp
pusha
push
test
dec
clc
adc
scas
std
lret
leave
mov
bound
dec
insl
add
fdivrs
lods
dec
xchg
rclb
mov
in
mov
sbb
in
leave
fwait
bound
xor
fcmovbe
addr16
fldt
xor
cmp
ja
js
dec
add
js
negb
mov
add
fsubp
adc
or
nop
xchg
pop
pop
mov
lret
add
ljmp
mov
rorl
mov
fisubrs
rcl
mov
inc
mov
sbbb
out
int3
outsb
ret
pop
insl
loope
lods
mov
insb
xor
loopne
or
cmpsl
jp
add
jmp
sbb
cmpsb
cmpsl
insl
mov
ret
loop
faddl
iret
sbb
mov
inc
lods
pop
jmp
jl
sarb
ret
jbe
es
push
inc
dec
mov
pusha
mov
enter
pop
mov
mov
lahf
ret
enter
mov
or
or
ret
jg
or
mov
movsl
fiaddl
xlat
movsb
test
and
lahf
into
fiaddl
insl
and
call
popf
inc
loope
push
pop
push
sub
fstl
lret
push
js
jnp
lea
lods
int
push
inc
popa
sbb
shll
aaa
ret
add
rcrb
sti
out
mov
inc
xor
and
jno
pop
push
mov
in
add
pusha
dec
fwait
iret
xor
cld
mov
arpl
fdivr
cmp
add
mov
cmpsb
jno
and
mov
dec
push
jbe
push
mov
jecxz
sahf
jecxz
sbb
push
push
pushf
mov
test
xchg
dec
pop
mov
fsts
das
sub
in
fwait
pop
mov
sahf
in
mov
fldcw
movl
inc
mov
jmp
std
loopne
push
jo
pop
mov
push
and
pop
std
add
jno
jae
mov
jle
bound
adc
iret
aas
jge
jo
inc
jb
rclb
dec
inc
ret
add
jp
out
lahf
pop
stos
adc
xchg
cmp
add
ss
cmpsb
or
dec
rorl
or
add
loopne
das
push
or
ds
mov
jae
mov
cli
mov
adc
scas
ss
dec
xchg
dec
adc
xor
mov
sub
fcmove
xchg
jnp
insb
loop
push
fldcw
ret
jns
jnp
lds
xchg
stos
mov
int3
fucomp
push
xor
in
jnp
cmp
pop
imull
cld
adc
pop
lret
call
andl
movsl
dec
and
or
dec
in
sbbb
je
flds
sbb
out
jmp
cmc
fldt
out
outsl
les
enter
insl
cwtl
cld
push
mov
mov
xlat
pop
ss
add
sub
outsl
call
int3
pop
hlt
popf
sub
cmp
xlat
arpl
in
pop
in
xchg
shll
jecxz
add
push
sub
in
inc
mov
xchg
js
repz
push
inc
cmpb
jo
pop
mov
jne
hlt
and
xchg
cmc
outsl
jno
pusha
cld
cmp
arpl
adcl
cld
adc
add
fcoms
mov
cmc
pop
lret
pop
loopne
test
cmp
mov
jno
scas
sbb
sbb
nop
fadds
push
xor
mov
cltd
and
sub
add
ja
cmpsb
xor
out
add
push
and
test
mov
add
in
pop
mov
out
xlat
imul
jb
adc
mov
gs
stos
adc
sahf
and
dec
fs
pop
push
xchg
xchg
push
cmp
popa
scas
fldenv
fcomip
int
ljmp
test
mov
add
insb
mov
in
lods
cwtl
lods
fcompl
fidivrs
inc
ds
pushf
pop
sbb
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
push
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
movzwl
sub
mov
push
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
pushl
pushl
push
pushl
push
push
call
jmp
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
or
mov
push
and
mov
add
pop
addl
push
call
push
andl
push
adcl
push
xorl
push
push
addl
push
push
call
xorl
push
addl
push
andl
push
notl
push
orl
push
push
call
dec
movl
jne
mov
mov
mov
cmp
movl
jne
orl
movl
addl
pushl
sbbl
pushl
pushl
call
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
push
push
pushl
call
cmpl
jb
mov
sub
mov
and
mov
or
mov
movl
lea
xor
mov
sbb
lea
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
and
mov
sub
mov
mov
mov
not
mov
xor
movzbl
add
mov
adcl
add
movl
mov
mov
mov
movl
cmp
jne
andl
xor
or
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
lea
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
push
mov
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
lea
push
pushl
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
or
push
push
and
push
inc
mov
xor
mov
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
push
call
jmp
mov
sub
mov
sbb
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
inc
mov
mov
movl
sbbl
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xor
andl
add
mov
sbb
mov
sbbl
mov
add
mov
mov
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
and
push
pop
sub
add
movl
mov
movl
or
mov
xorl
mov
sbbl
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
mov
orl
xor
add
mov
lea
mov
xorl
mov
xorl
xor
add
adcl
mov
lea
adcl
push
adcl
mov
subl
xor
addl
add
xorl
push
movl
mov
andl
push
pushl
call
sub
mov
adc
mov
xorl
mov
mov
adcl
xor
addl
mov
add
movl
jmp
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
adc
lea
sbbl
mov
mov
mov
sub
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
sub
xor
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
sbb
mov
or
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
jmp
cli
jl
popa
fs
repz
push
and
ret
bound
pop
bound
cltd
faddp
inc
dec
lods
test
lds
out
cmc
xchg
adc
ja
inc
fnstenv
rclb
xlat
push
std
pop
sahf
fdivrp
imul
loopne
into
add
xchg
fsubl
sub
adc
xchg
push
movsb
adc
push
sbb
in
adc
push
outsb
xchg
pusha
stos
movsb
pop
aam
cs
mov
repz
cmp
push
sub
test
shll
push
mov
in
inc
cld
std
mov
xor
ret
fildll
out
jae
aad
adc
ja
jp
jns
pop
pop
jge
aad
pop
cmp
nop
or
lea
shrb
sub
movsl
out
sbbl
cmc
call
jmp
rolb
sbb
add
xor
push
les
cmp
std
xor
mov
out
hlt
dec
push
mov
inc
and
insl
xchg
mov
push
xor
mov
adc
test
push
xchg
bnd
daa
les
data16
in
mov
fstps
sbb
push
rorl
xchg
mov
add
dec
jle
movsl
bound
mov
call
pop
mov
incl
mov
mov
aad
es
enter
lcall
movsb
stc
lcall
icebp
sahf
adc
sbb
lcall
fimuls
int
stos
scas
loopne
cmp
notl
mov
pop
and
data16
mov
xor
pop
shll
xchg
das
cwtl
mov
je
jp
fimuls
in
mov
outsb
xlat
mov
out
sub
pop
std
aas
popa
nop
cmp
rol
stc
ljmp
outsl
sub
int
sbb
in
xchg
push
sub
or
sbb
cmp
push
xchg
pop
cmp
mov
push
ss
xchg
push
fistpll
addl
rorb
bnd
dec
repnz
jbe
test
lcall
xchg
sub
aad
sbb
add
hlt
push
popf
push
cltd
js
pop
xor
mov
mov
das
xor
sbb
cmc
add
sbb
dec
inc
ficomps
inc
jae
shr
out
pop
fiadds
negb
jnp
in
mov
mov
pop
stos
cli
inc
adc
jno
mov
cmp
fdivl
rorb
adc
mov
mov
or
mov
jp
ficoms
jmp
shll
jmp
add
sbb
into
jmp
sahf
push
xchg
sahf
cmp
lds
mov
adc
scas
push
movsl
push
jmp
addl
cwtl
sbb
pop
xchg
lahf
mov
loop
pop
push
jb
jmp
lahf
dec
jb
movsl
or
xchg
shrl
push
push
rol
sub
nop
out
test
jle
mov
cmpsb
mov
push
xlat
sti
mov
sti
inc
push
pop
dec
or
xor
sub
out
or
sub
pop
lods
mov
xchg
mov
cmp
mov
fbld
ret
push
aad
pop
aaa
rcl
inc
rcrl
das
sub
jl
popa
jle
ds
std
ret
lods
xchg
daa
mov
arpl
or
loop
sarb
adc
jle
int3
pushf
out
popf
out
std
pop
loopne
jae
shr
repz
test
fdivr
jne
lds
test
dec
cmpsb
dec
adc
sbb
in
xchg
rolb
push
ror
bswap
mov
mov
das
ret
inc
shlb
std
pop
adc
and
jb
shl
xchg
and
push
ret
out
inc
mov
adc
dec
adc
rcl
mov
mov
jle
out
movsl
fldln2
fdivl
mov
and
sbb
jne
inc
xchg
pop
inc
insb
icebp
sub
ret
inc
jmp
fst
stos
addr16
mov
pop
lds
jns
lahf
push
into
xchg
pop
in
pop
mov
lahf
rcrl
imul
lcall
pop
sub
inc
popa
clc
mov
mov
lods
jmp
ds
aad
hlt
push
stos
aas
repz
sub
adc
es
stc
addr16
sbb
sbb
mov
xor
mov
mov
lcall
aaa
xor
cld
mov
mov
jmp
xchg
xchg
and
test
jl
xchg
xchg
iret
aaa
jmp
or
int3
mov
mov
das
or
cmp
mov
inc
mov
and
ficompl
sub
daa
loopne
or
fists
fs
cwtl
mov
sub
sub
addb
cmp
filds
outsl
add
pusha
jb
pop
cltd
hlt
cs
jmp
cmc
pop
xchg
sub
fs
jae
xor
cmp
push
stos
fisttpl
sub
xchg
scas
add
jg
addr16
sbb
int
lahf
inc
xchg
outsb
xlat
dec
mov
jbe
ljmp
push
sbb
call
cmp
lea
movsb
shlb
sub
sub
jnp
xor
mov
mov
add
inc
test
enter
push
mov
andb
dec
pop
daa
cmp
push
adc
call
or
cli
jo
fstpl
push
imulb
xlat
test
xor
mov
lods
aaa
jle
push
mov
es
sub
push
jo
ret
pop
stos
xor
sub
pop
mov
fcoms
cld
dec
xor
loop
xchg
mov
sbb
inc
xchg
pop
ficoms
sahf
sbb
cmpsl
sahf
mov
gs
xchg
setnp
test
xor
lahf
or
aam
mov
and
or
push
cmp
xor
ret
mov
enter
pop
lock
out
imul
mov
or
leave
and
xor
outsl
cmp
adc
sub
or
xchg
dec
outsl
orb
dec
iret
inc
test
in
aad
add
daa
cld
ljmp
and
fidivl
pop
mov
push
inc
gs
out
push
mov
nop
pop
scas
ja
lock
ret
imul
insl
rcll
push
add
xchg
cli
xlat
lahf
mov
push
insb
xchg
imul
out
aaa
cli
std
pop
int3
fstl
fstpt
int3
outsl
out
gs
xor
jns
les
mov
notb
stc
rol
call
push
ljmp
xchg
adc
sar
fstpl
ret
mov
insb
orl
cmp
adcb
hlt
int3
mov
fisttpl
and
sbb
adc
xchg
jp
pushl
pop
gs
insb
int3
add
xor
dec
insl
inc
cs
bound
mov
imul
repz
lock
mov
ret
sahf
or
inc
cmp
cmp
arpl
cmp
add
inc
xchg
add
push
sub
decb
pop
clc
out
in
insb
fucom
dec
into
push
jbe
outsb
lea
mov
jns
sub
mov
clc
in
arpl
fs
xor
jecxz
mov
xchg
lock
xchg
dec
xor
icebp
jg
mov
lret
test
and
push
xchg
fmull
push
cld
push
lret
in
xor
adc
or
xchg
or
jne
ss
jp
lret
mov
push
cltd
jmp
cld
js
xchg
cmp
fcomip
add
mov
sub
pop
iret
jecxz
mov
xchg
mov
lahf
mov
or
ds
out
or
dec
mov
pop
rcrb
add
arpl
jge
lock
add
and
ror
xchg
cmp
insb
add
push
aaa
mov
out
jne
fisttpll
jb
jl
sbb
push
inc
clc
out
push
cmp
pop
outsl
and
int
hlt
sti
ss
dec
fadd
push
out
fadds
mov
repz
push
mov
mov
in
pop
cmp
lea
jo
xor
sbb
loope
test
mov
in
xchg
jl
adc
jecxz
pop
sub
pop
inc
pop
xchg
mov
dec
int
sbb
xor
jae
in
test
call
or
jp
cmp
adc
jmp
insb
leave
mov
loopne
popa
inc
jnp
call
mov
jo
mov
and
xchg
push
pop
dec
adc
loop,pt
xor
scas
push
loop
sbbb
mov
rorb
cmp
and
scas
jge
scas
or
xlat
fcomps
es
repnz
push
shr
lods
and
mov
jmp
addb
popf
jo
mov
jg
stc
inc
int
jns
inc
cmc
cmc
mov
sti
or
mov
bound
mov
jmp
sbb
in
sbb
leave
jno
dec
fadds
sub
ds
insl
dec
or
jl
mov
sbb
mov
es
pop
les
outsl
rcl
xor
stc
ds
mov
mov
xor
inc
or
sub
ror
shlb
mov
jp
jecxz
loope
bound
add
cld
popa
je
and
cmp
out
in
mov
repnz
sahf
add
fdivl
cmp
xchg
push
ss
jmp
xchg
fs
ret
or
les
push
xchg
cmpb
push
add
xor
jo
pop
fwait
mov
daa
xor
push
sbb
inc
mov
mov
cmc
dec
out
or
je
es
xchg
je
jg
dec
adc
idivl
jge
add
jp
sub
subl
xchg
clc
add
inc
jnp
mov
movsb
shlb
aas
nop
sub
cmp
sub
andl
pop
dec
cltd
dec
cmp
out
push
pop
pop
lahf
gs
loop
adc
add
mov
fnsave
mov
mov
add
pop
and
jge
jae
push
subl
push
push
inc
test
insl
sbb
fisttpl
das
dec
test
inc
loopne
cmp
sahf
inc
add
mov
and
push
jae
and
fisubl
cmc
mov
pop
jecxz
popa
ret
pop
add
and
cmpsl
sbb
adc
std
cli
sub
xorl
filds
lret
push
pop
cwtl
jmp
stos
aam
adc
xchg
sub
and
dec
and
inc
mov
mov
jb
jl
shll
test
roll
xchg
cmp
jb
jo
and
jmp
shll
sahf
xchg
insl
xlat
pushf
xchg
push
insl
cmp
push
adc
pop
sub
jp
push
daa
test
popa
cwtl
shr
mov
pop
imul
fisubl
mov
xchg
dec
add
sbb
pushf
jbe
jecxz
xchg
cmpsl
imul
aam
adc
jge
decb
ret
jmp
push
adc
ja
mov
cwtl
gs
mov
dec
jecxz
popl
add
popf
lea
test
roll
add
xchg
mov
jbe
fcoml
xchg
jmp
fistpll
cmpsb
dec
faddl
jb
adc
bswap
and
sub
or
jle
roll
inc
repnz
and
adcb
popf
push
jecxz
popa
inc
popf
divl
nop
sub
sbb
test
mov
fildll
outsb
mov
jbe
inc
into
data16
ljmp
fdivrp
nop
and
test
mov
fcom
and
mov
icebp
imul
pop
lock
pop
dec
ret
js
leave
lahf
aas
scas
push
cwtl
ja
jg
test
lahf
std
in
xchg
xchg
rclb
or
lret
mov
and
jns
aaa
testb
ljmp
mov
insb
push
repnz
sahf
mov
divb
fisttpl
insb
sbb
dec
int3
push
fbld
xor
inc
lret
shlb
mov
mov
int
and
js
cs
std
dec
mov
jb
pop
pop
adc
in
rcrb
aaa
and
and
sub
cmp
divb
pop
pop
mov
sbbl
rcrb
iret
out
pop
and
cmpsl
mov
and
mov
pop
add
pop
xor
int
bound
imul
sbb
jl
sbb
call
mov
xor
dec
pop
pop
mov
xchg
rcrb
je
int
mov
aad
pusha
fwait
mov
add
add
mov
cmp
cmpsl
xor
pop
movsl
arpl
cmp
pop
xchg
ja
pushf
mov
ljmp
orb
nop
or
ret
sahf
mov
dec
add
jmp
xor
push
pop
mov
cmp
cmp
out
add
movsl
xor
jno
inc
in
rcll
cmpsb
pop
lret
dec
add
xor
or
call
inc
cmp
inc
addr16
dec
push
sbb
push
mov
jbe
xor
test
dec
sbb
dec
and
out
test
es
inc
outsl
sub
mov
or
jns
and
out
aaa
cmc
or
mov
test
sbb
add
adc
fnsave
sub
pop
ja
les
ficoml
iret
ret
jno,pn
in
cmpsl
cmpsl
dec
imul
xor
popa
xchg
cmpsl
aam
fwait
in
dec
es
adc
jb
xchg
out
aad
andps
test
mov
pop
stos
out
repnz
scas
dec
test
enter
pop
mov
sub
repnz
sub
mov
popa
dec
add
jns
push
aad
mov
or
loope
push
in
adc
punpckhwd
int
xchg
cs
movsb
lock
in
mov
das
int3
lcall
mov
lock
xor
adc
clc
jae
testb
inc
adc
dec
pop
pop
fistl
push
das
mov
cmc
sub
and
sbb
add
inc
jne
mov
adc
loopne
js
and
push
xchg
mov
pop
cmp
sub
adc
inc
pop
adc
or
push
cmp
lea
lahf
enter
add
scas
mov
cwtl
roll
jl
inc
push
aas
shlb
xor
and
cmp
push
fsubrl
popa
fdivrs
mov
mov
lret
pushf
dec
cmp
jl
mov
fmuls
lea
dec
cmpsl
fiadds
jae
or
xchg
dec
push
je
aas
mov
xchg
dec
cld
jp
aad
lea
adc
sub
or
add
push
xchg
inc
sbb
sbb
inc
jne
push
flds
rcrb
xor
bound
jge
gs
and
jg
mov
jno
loope
sbb
clc
dec
les
push
sarb
adcl
int
mov
in
push
pop
pop
xor
lcall
push
pusha
leave
sub
cmpsl
mov
mov
movsb
outsl
lods
bound
mov
scas
clc
mov
ret
adc
and
into
lock
fwait
mov
dec
aam
pop
out
ret
mov
jns
dec
jl
push
xchg
xchg
fimull
cmp
pop
dec
repnz
push
lock
or
xlat
pop
imul
fdiv
ds
adc
lcall
rorl
shrb
sbb
mov
out
inc
pushf
cltd
sub
jg
add
sbb
cmp
call
dec
sub
out
lahf
xchg
stc
outsb
sub
lahf
pop
fistpll
movsb
xor
stos
cli
rorb
les
aam
pop
xor
fisttpl
sub
jmp
xchg
sti
sbb
mov
xchg
mov
jnp
pop
push
test
lahf
scas
sub
nop
pop
adc
inc
out
jle
push
push
out
aaa
aas
pop
call
daa
insl
sub
adc
leave
add
sahf
js
mov
cmpsb
cltd
inc
mov
jmp
adcb
pop
push
sahf
subb
push
xor
fs
cmp
into
loopne
in
or
shlb
pop
adc
popa
imul
es
inc
pop
into
ljmp
jno
in
ljmp
or
test
mov
or
fstp
repnz
xchg
addl
add
rorb
mov
fistps
and
mov
dec
imul
inc
icebp
cld
mov
in
mov
and
jbe
mov
scas
xor
xchg
add
dec
push
lock
pop
test
xor
inc
daa
aas
shll
mov
cmp
addr16
mov
xchg
and
xchg
rolb
dec
iret
les
pop
sbb
stos
and
aas
ljmp
and
xlat
push
mov
mov
sub
iret
idiv
sbb
bound
add
loop
das
push
dec
sub
jg
cs
pop
xchg
cmp
insb
stos
mov
pop
mov
jge
and
mov
test
pushf
inc
push
es
cmpb
popf
pop
out
xorl
insl
cwtl
and
int3
jg
negl
pop
xchg
addl
xchg
push
mov
and
inc
dec
repz
shll
sub
mov
in
enter
jno
and
sub
cmpb
dec
imul
call
mov
test
cmp
dec
ftst
sbb
repnz
mov
aad
test
push
mov
xor
jns
addb
cli
sub
rorb
mov
popa
imul
faddl
pop
mov
adc
lea
push
add
jmp
jp
das
in
fnsave
popf
jno
xchg
jnp
pop
and
dec
stos
or
mov
xchg
mov
or
std
aam
inc
jle
icebp
adcl
fistpll
adc
xchg
stc
out
test
pop
lahf
mov
dec
or
dec
pop
adc
xor
gs
cmpsl
xlat
dec
xor
dec
mov
fisubs
or
mov
pop
mov
sarb
mov
pop
int
jge
data16
push
sarl
sti
dec
push
or
sub
mov
sbb
add
jne
or
lret
flds
cltd
xchg
adcl
mov
xchg
jnp
roll
cmp
outsl
xor
out
xor
sub
jne
icebp
subl
sub
aas
mov
ret
bound
iret
jle
inc
fs
lahf
and
fwait
pushf
cmc
adc
push
je
push
cmc
cmpsl
iret
scas
testb
cmp
mov
mov
add
pop
inc
push
sbb
in
adc
lods
pop
sarl
add
cmpsl
mov
cmp
jno
jge
cld
scas
shrb
je
mov
rcrl
jle
pop
or
decb
push
les
push
jo
pusha
out
mov
inc
loope
xor
pop
cmp
jbe
daa
je
fs
subl
mov
daa
mov
add
push
pushf
pop
mov
pop
inc
cwtl
xlat
dec
jp
push
ja
shlb
das
push
mov
add
and
mov
mov
sub
push
out
testl
hlt
xor
cmp
cwtl
sub
mov
out
or
or
xor
push
jae
popf
mov
xchg
and
pop
ds
ret
inc
in
adc
mov
pop
dec
lods
clc
loope
cmp
imul
leave
out
negb
jle
out
xchg
lret
lret
sarb
hlt
add
cltd
movsl
dec
roll
mov
mov
rcrb
push
into
out
dec
notb
imul
idivl
xchg
les
iret
negb
aam
pop
push
mov
clc
icebp
fstp
sbb
scas
xor
into
inc
aas
sub
shlb
inc
pop
insl
jb
aas
jl
shrl
outsb
shl
pop
inc
sub
fucomi
and
mov
lret
imul
popl
push
xchg
add
sbb
repz
pop
rclb
dec
out
and
cs
out
or
adcl
jbe
pop
push
or
sub
xchg
addr16
pop
mov
movsl
shr
lds
scas
cmp
movsb
or
cwtl
dec
sub
jp
hlt
lock
loope
inc
aam
mov
in
mov
push
add
sub
call
jmp
xor
dec
cwtl
mov
sbb
fnstenv
outsl
sbb
aaa
loope
sub
pop
lock
aad
xchg
pop
das
rclb
loopne
or
xchg
fimuls
shll
mov
sub
orb
push
je
insl
jae
call
mov
lea
fiadds
fisubl
stc
dec
test
jmp
lretw
out
loope
fstl
orb
mov
insl
push
int
and
loopne
xchg
inc
inc
mov
jg
in
sub
or
loop
insl
pop
aam
cmp
pop
popf
pop
sarb
cmc
imul
push
int
dec
cld
pop
data16
dec
lds
sub
out
jle
sbb
out
fdivl
and
sub
subb
sahf
xchg
scas
ret
xor
fcmovbe
hlt
mov
pop
insl
outsl
hlt
scas
inc
jg
aaa
in
scas
xlat
fcoms
xor
mov
outsb
call
mov
movsb
pusha
inc
push
shll
cmpsb
dec
jbe
notb
mov
jl
and
insb
addr16
lock
mov
mov
aaa
cmp
mov
test
or
add
xchg
push
arpl
xor
sti
lcall
mov
mov
xor
jo
in
insb
cmpsb
jg
fdivp
out
mov
mov
push
popa
mov
ret
inc
mov
data16
inc
pop
scas
fwait
add
adc
out
add
enter
pop
imul
mov
int
repz
shrl
notl
mov
aad
cld
mov
adc
adc
add
outsb
and
xchg
lret
adcl
aaa
int
sbb
in
lahf
mov
out
daa
xlat
leave
gs
pop
sbb
cmpb
cs
int3
pop
jno
jb
mov
fdivrl
fsub
adc
jb
push
cmp
cs
jle
jns
sub
lods
push
fs
dec
pop
xchg
mov
subb
or
rolb
ja
pop
dec
mov
jno
mov
ja
xchg
jne
cmp
sbb
stos
fucom
dec
cmp
ljmp
sub
add
lret
mov
jns
jo
mov
pop
mov
fnstcw
paddsb
or
mov
aam
add
adc
in
xchg
les
daa
lea
mov
rcll
or
arpl
dec
inc
pop
sbb
jecxz
pop
mov
and
das
iret
inc
xor
sbb
hlt
pop
xchg
cltd
cmp
out
es
inc
test
mov
mov
aas
lock
jno
dec
inc
sbb
cmp
es
inc
dec
sti
inc
jmp
stos
mov
push
adc
and
punpcklwd
mov
std
cmp
jbe
insl
push
ss
mov
push
daa
outsl
xchg
lods
and
cmp
pushf
mov
lahf
mov
lret
and
push
arpl
fstl
pop
and
xor
pushf
insl
sbb
xor
xchg
sub
mov
or
mov
daa
stos
mov
gs
test
pusha
or
mov
jbe
push
push
cmp
fs
pop
add
mov
outsb
scas
pop
mov
pop
lods
mov
xchg
mov
xor
sub
dec
popa
xchg
mov
xchg
scas
loopne
gs
pushf
cmp
xchg
xchg
xlat
jbe
imul
jg
stc
in
sahf
and
pop
cmp
fdivl
ficomps
inc
outsb
adcl
lods
rclb
aad
jbe
dec
rdpmc
cmp
dec
pop
dec
out
out
aam
bound
das
outsl
pop
mov
and
add
xor
in
sub
sub
int3
push
pop
or
sti
rcrl
xchg
jo
jle
jge
cmp
repnz
test
aad
xor
inc
outsl
fadd
pop
add
pop
dec
add
mov
ret
push
cltd
cltd
lea
jne
dec
dec
cwtl
lret
loopne
mov
repnz
sti
xor
fcoms
in
aam
or
inc
mov
and
mov
out
dec
add
in
mov
xor
call
popf
es
shrb
lcall
sub
mov
adc
cs
cmpb
pop
leave
lahf
test
into
addb
shll
ljmp
mov
lods
aaa
mov
adc
adc
cmp
cmp
dec
imul
sbbb
sbb
adc
imul
push
jl
jo
out
sub
fnstsw
or
ss
adc
sbb
lcall
ret
loope
scas
sub
jmp
dec
test
cli
sub
cli
out
test
fcompl
subl
sub
jbe
lea
popf
in
adc
shrl
shl
and
and
lahf
cmp
mov
lds
jecxz
dec
leave
sub
outsl
sbb
dec
dec
imul
mov
pop
mov
gs
mov
arpl
pop
push
shlb
bound
loope
and
cltd
pusha
cmpsl
dec
int
push
sbb
push
out
cli
cmpsl
pop
loopne
and
inc
jo
mov
mov
pop
movsl
jne
dec
int
int
mov
add
outsl
xchg
iret
or
jae
lods
out
mov
faddl
in
xor
mov
lcall
fs
movsl
mov
and
mov
inc
repnz
lret
pop
mov
xchg
jae
push
ljmp
orb
les
and
add
xchg
pop
sbb
icebp
les
or
cmp
inc
sub
movsb
insb
adc
cltd
jge
sbb
xor
lret
out
test
stos
xchg
push
push
in
imul
inc
imul
mov
add
jno
movsl
mov
xlat
int3
jmp
nop
lret
push
mov
fsts
int
test
test
roll
out
std
push
rorb
push
ss
push
addr16
and
inc
das
int3
sbb
test
stc
fsubrl
movb
sbbl
dec
xchg
jle
add
addr16
scas
fnsetpm(287
test
mov
xor
sbb
xlat
mov
in
fs
jmp
popa
add
scas
aam
cmpsl
push
test
pusha
mov
sub
les
push
add
mov
js
in
mov
sbb
jo
repnz
lock
mov
mov
and
cmp
out
cs
jns
lret
in
outsb
mov
rorl
imul
adc
lock
add
sub
pushf
clc
push
jb
lret
xchg
sti
and
adc
xchg
mov
mov
push
inc
nop
fnstsw
movsb
lcall
pushf
xchg
in
popa
mov
imul
outsb
mov
andb
je
sub
aam
mov
cld
add
lea
pop
imul
xchg
add
out
adc
movsb
outsl
lea
lret
xorl
clc
add
push
mov
sub
pop
pop
dec
nop
dec
lahf
pop
andb
mov
xchg
and
lahf
sub
mov
test
fbstp
pop
stos
or
or
call
fldl
data16
inc
pop
mov
fisubrl
mov
test
dec
cli
mov
lret
shlb
lea
shrl
cmpsb
push
xchg
jnp
inc
pop
cmpsl
lods
test
ficoms
and
lods
std
lods
cmp
ja
cltd
pop
orb
cmp
xchg
subb
mov
push
pop
leave
sub
inc
ljmp
stos
pop
out
cmp
cmp
daa
add
jecxz
ja
push
mov
lret
rcrb
sbb
mov
stos
lret
les
mov
sbb
mov
add
xor
mov
out
das
dec
inc
insl
add
cmp
mov
sahf
cmp
dec
rorb
scas
shrb
cmp
jo
xchg
xchg
jp
test
sbb
lret
cltd
stos
daa
scas
pop
iret
bound
dec
sbb
fidivrs
or
push
ret
xor
scas
inc
scas
lret
shlb
inc
loope
jecxz
in
xchg
lret
mov
xchg
cmc
or
clc
cwtl
jg
push
mov
and
push
mov
xor
cmp
sub
xchg
jecxz
mov
imul
movsl
movsl
jbe
inc
ds
out
mov
out
aaa
add
ds
sub
mov
call
es
cmp
push
or
repnz
and
lret
decl
test
gs
push
test
insb
mov
mov
dec
outsl
std
push
in
add
xor
sub
push
cmp
inc
cmp
mov
ljmp
iret
jae
or
dec
ss
xor
test
pop
dec
jg
adc
and
in
int3
addr16
imul
je
adcb
pusha
xchg
adc
iret
jae
add
repnz
mov
out
out
sub
ja
ficomps
scas
test
sbb
pop
sbb
push
jbe
mov
cmp
adc
cmp
mov
pop
loop
hlt
adc
dec
fcomp
popa
nop
jo
sbb
pop
repnz
push
xchg
jno
ds
add
sarl
push
cmp
add
stos
push
pop
lods
add
in
rclb
scas
sbb
lahf
addl
shl
xchg
mov
in
cli
mov
int3
xlat
scas
dec
imul
inc
pop
push
fs
in
jne
andl
out
adc
or
push
pop
sub
mov
fidivrl
or
sbb
pop
or
mov
sub
fldenv
mov
aad
and
inc
pop
aam
lret
cmp
inc
add
test
add
and
fisubrs
dec
dec
dec
ds
loop
out
popa
leave
lock
mov
shlb
addb
hlt
sti
outsb
andl
push
dec
outsl
fdivrl
push
push
in
cmp
xchg
rclb
out
jae
or
jae
bound
and
push
pop
cli
and
lahf
mov
and
jb
rcll
sub
fucomip
rcll
sub
sub
pop
mov
dec
iret
mov
orl
inc
push
push
andl
jl
enter
std
or
aad
sti
lods
dec
cmp
lcall
xor
and
std
stos
iret
jecxz
push
jmp
int
out
divb
rclb
lock
push
cmp
int3
cmpsb
not
xor
pop
xchg
xlat
jno
in
leave
dec
stc
dec
cli
xchg
push
jle
ljmp
sub
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
jmp
xlat
repz
xchg
mov
mov
imul
mov
pop
bound
adc
and
cmp
jo
shl
out
sub
mov
ret
int3
jecxz
pop
xor
pop
fidivl
pop
or
test
sbb
outsl
xor
inc
push
das
xor
subl
inc
bnd
ss
loopne
xchg
lds
mov
ljmp
or
fwait
jno
test
gs
or
enter
rcl
jmp
idivb
push
sub
in
repnz
cmp
mov
mov
in
ds
xchg
xchg
xlat
cmpsb
cltd
imul
fsub
inc
in
push
jnp
data16
movsl
dec
xchg
cli
adc
cmp
pusha
movsb
mov
adc
push
in
pop
shl
xor
jne
dec
sub
cmc
pop
stos
lods
push
cmpsl
mov
fadds
sub
rol
ljmp
fstpt
inc
mov
xchg
mov
std
movsl
push
xor
test
and
xchg
pushf
push
pop
in
mov
push
cmp
mov
push
lods
push
adc
xchg
mov
pop
pop
mov
ja
jmp
add
push
gs
lret
les
push
pop
cmpsb
roll
dec
lock
arpl
mov
mov
fimuls
mov
or
imul
sbb
push
lret
mov
add
fcompl
or
scas
scas
popf
popf
mov
pop
test
orl
inc
and
jl
cmpsb
and
sbb
mov
aas
xchg
mov
cmp
or
mov
push
lock
dec
push
cmpsl
sti
inc
cmp
out
dec
movsb
dec
xchg
jl
daa
icebp
jl
xlat
mov
pop
add
and
jne
movsl
adc
cwtl
push
std
out
incl
lods
loope
push
stos
orl
pop
add
mov
jmp
ficoms
jo
stc
arpl
add
aas
push
ljmp
dec
mov
jno
cmp
dec
xor
lret
mov
pusha
mov
aas
mov
push
cld
pushf
mov
inc
mov
xor
cmp
cmp
fidivrs
mov
pusha
jo
mov
push
push
ja
imul
into
xor
add
or
mov
stc
pop
dec
sbb
loope
mov
xchg
cld
xchg
pop
into
negl
sub
jp
les
in
and
popa
andb
jb
popa
jle
insl
dec
outsb
or
mov
shr
stc
pusha
fs
and
aam
push
leave
aad
lret
fistl
push
fistl
and
sbb
mov
jns
sub
and
ret
ficoml
je
pop
test
pop
sub
les
and
in
iret
out
inc
mov
cmp
fs
sub
or
iret
out
in
jo
arpl
adcl
adc
sbb
outsb
in
sti
or
test
aad
cmp
shrl
repnz
jo
xchg
insl
sbb
cmpsl
out
mov
cmp
cmp
mov
mov
xchg
jmp
rcrb
jae
pop
and
icebp
cltd
jecxz
mov
int3
xchg
add
adcl
ret
cltd
movsb
mov
mov
xor
aaa
icebp
cmp
ret
les
inc
jge
dec
adc
mov
mov
mov
ss
repz
mov
test
sbb
in
neg
leave
inc
movsl
shlb
arpl
outsb
xor
test
lea
scas
addb
push
negb
fwait
enter
arpl
mov
mov
jne
mov
aam
adc
roll
ja
and
add
shll
xchg
psllq
cmp
cmp
mov
push
fsubl
sub
cltd
mov
addb
imul
push
sub
cli
xchg
aad
jmp
mov
mov
insl
shrb
xchg
xchg
inc
fsts
sbb
add
idivl
xor
dec
cmc
cmpsl
lock
add
push
cmp
fdivs
and
cmc
test
xbegin
cmp
test
push
ljmp
xchg
ja
xchg
scas
ds
fcmovbe
mov
movb
ljmp
xor
and
mov
shlb
push
and
ds
mov
mov
mov
mov
lahf
lret
pop
adc
jecxz
fst
xchg
sbb
xchg
mov
inc
jecxz
sahf
int3
mov
cli
mov
pop
sub
pop
dec
fdivl
add
insl
jnp
or
mov
cmc
add
test
or
xorl
nop
or
push
sbb
xchg
cwtl
scas
adcb
push
mov
movsb
aaa
push
jecxz
xlat
call
jo
loopne
and
jecxz
insl
adc
imulb
bound
push
cmp
pushf
xorl
fimuls
jns
mov
movsb
jb
outsb
out
adc
dec
rolb
pop
lret
inc
and
out
and
add
sahf
fwait
add
or
xor
idivb
es
jb
mov
sbb
call
ret
mov
testb
and
add
inc
int
clc
int
into
fdivrs
pop
sbb
push
cmp
jmp
pop
mov
mov
xor
ljmp
loope
xlat
rcrb
xor
cmp
xchg
sbb
xlat
gs
push
jge
mov
clc
hlt
nop
sub
push
scas
push
pop
cld
int
xor
pop
cmpsb
mov
movl
mov
sub
cmp
in
cmp
pop
push
mov
int
and
xchg
pusha
cmp
push
adc
add
push
imul
dec
inc
insb
jne
movsb
lcall
ja
arpl
cs
ficomps
add
popf
mov
jnp
and
xchg
cmc
or
sti
iret
and
jae
lods
scas
out
ja
mov
mov
mov
lahf
or
xor
mov
xchg
inc
rorb
mov
inc
pop
stos
movsb
in
lds
enter
cmp
sahf
sahf
fs
arpl
push
push
in
daa
data16
shl
push
pcmpgtw
pusha
sub
push
incl
sti
and
sbb
in
loope
std
ror
out
icebp
or
mov
je
jne
and
inc
enter
movsb
cwtl
mov
popa
xchg
pop
jo
dec
jno,pt
pop
adc
mov
js
adc
icebp
fs
dec
push
insl
or
sub
rorb
jne
mulb
pop
push
ljmp
lahf
xlat
push
jl
call
jl
scas
rorl
aad
and
ss
stos
mov
daa
or
dec
mov
fcompl
gs
jno
adc
lret
xchg
dec
in
xchg
xor
and
cmpsb
je
mov
sub
add
out
int3
and
iret
mov
imul
mov
arpl
sub
jle
cltd
out
dec
popf
sub
xor
sub
add
push
inc
insl
incl
jbe
sub
mov
pop
mov
loopne
stos
out
xlat
mov
or
dec
cwtl
ret
cmc
sbbb
cmp
xor
into
shrb
or
iret
jg
faddl
xor
enter
je
shll
jns
ja
pop
sub
dec
and
and
mov
sub
stos
test
xchg
stos
aad
test
mov
push
cmpsb
mov
cmp
and
es
add
push
add
pushf
test
push
mov
pop
mov
xchg
aaa
pop
cmp
push
inc
push
les
mov
mov
add
add
cmc
mov
aaa
mov
jmp
mov
loop
inc
inc
scas
popf
imul
cmp
aas
outsb
adc
pop
in
xchg
pop
push
cmp
adc
or
sahf
fsubrl
lea
fistpll
jb
aad
dec
push
cld
or
scas
mov
movsb
rcrb
dec
jb
pop
and
sbb
mov
iret
pop
rcll
adc
pop
sub
imul
test
nop
or
out
push
andl
cmp
lods
jl
mov
adc
popf
loopne
mov
insl
loopne
add
movsl
mov
push
cmpsb
out
lcall
aas
mov
jne
test
jno
cmp
xchg
insb
pop
mov
mov
lret
scas
fcompl
loop
xlat
lahf
mov
cmp
hlt
jns
jno
xor
les
cmp
pop
js
ficoms
cmp
loopne
sarb
mov
lcall
or
or
and
fwait
imul
sbbb
fwait
loopne
outsb
in
flds
invd
add
mov
cmp
sub
pushf
ret
xchg
cld
xchg
out
inc
das
mov
add
sub
or
loop
pop
sub
adc
jae
lret
jp
icebp
lods
shll
jecxz
loop
xor
fcmovnu
test
jb
aad
fstpt
cmp
xorb
les
pop
vmovlps
in
xchg
das
xor
ret
fwait
out
dec
stos
add
mov
mov
sbb
pop
xchg
movsl
lahf
cmp
add
rcrl
lret
jbe
jae
into
jbe
ret
or
push
lcall
sub
or
add
cwtl
out
mov
adc
push
cwtl
test
pop
aad
sbb
push
adc
cs
cld
add
add
and
jp
jno
mov
std
sbb
inc
add
and
aaa
aam
xchg
sub
xchg
out
addb
xchg
sbb
lahf
and
sub
xchg
leave
pop
or
popl
test
mov
mull
bound
nop
inc
mov
imul
lret
pop
push
pop
rol
icebp
xor
lret
cmp
lret
xlat
jge
mov
rol
cmpsb
sub
das
lret
cli
lret
sbb
jmp
pushf
scas
fs
push
and
hlt
sub
in
incl
mov
lods
mov
add
dec
adc
movl
into
cmp
fidivrl
push
inc
mov
or
call
lods
xchg
xchg
sbb
popf
aaa
pop
add
lret
std
xchg
and
push
cmp
jmp
jae
pop
jno
loopne
add
das
movsb
and
repz
mov
sbb
add
mov
pop
andl
test
aad
xor
push
cli
inc
mov
imul
dec
rclb
js
int
jl
push
insb
sbb
push
sbb
imul
pop
mov
dec
lods
aas
jge
or
and
test
pushf
sbb
neg
push
loope,pt
pop
leave
int3
stc
xchg
stos
sarb
jl
fsubrl
call
push
mov
stos
dec
lea
fmuls
mov
scas
outsb
xchg
lahf
and
push
mov
lret
mov
sbb
pop
mov
int
loopne
mov
jbe
ret
test
push
stos
mov
sbb
and
mov
lods
loope
int
jnp
iret
inc
adc
ss
sub
mov
jnp
repz
push
cmp
pop
das
pop
mov
jne
sbb
dec
pusha
xorl
sti
cmp
out
mov
ret
sbb
dec
adc
in
arpl
fdivrl
cmpb
mov
sub
lods
mov
aas
xlat
enter
inc
cmpl
aam
pop
adc
push
sub
in
stos
roll
xlat
lods
mov
pusha
leave
jl
stos
xchg
testl
mov
std
inc
in
or
in
and
ror
xchg
loope
xor
filds
cmpb
fs
in
push
xor
aas
mov
adc
pop
mov
mov
jmp
mov
mov
cmp
inc
mov
jo
insl
incl
or
icebp
inc
ljmp
jmp
adc
inc
mov
push
pop
outsb
repz
or
sub
xchg
imul
mov
and
movsl
scas
push
outsb
xor
imul
cmp
pop
ficomps
xor
xchg
outsb
ret
mov
add
xor
prefetchwt1
dec
xchg
and
ss
mov
jmp
dec
and
ja
adc
outsb
xchg
orb
pop
mov
add
das
clc
lcall
adc
xor
and
adc
mov
and
mov
jno
in
xchg
daa
push
test
int3
xchg
insl
add
cld
inc
into
sub
pop
test
outsb
fs
push
push
push
cmp
cld
sbb
sub
sub
lock
jo
or
inc
test
div
imul
imul
rcll
adc
lret
sti
push
mov
sti
aas
inc
push
roll
lods
mov
dec
push
gs
sub
xor
and
stos
mov
xor
inc
ret
or
aaa
les
or
clc
mov
aam
xchg
enter
insl
mov
mov
aas
test
fnstcw
push
pop
in
call
add
mov
in
mov
fnstsw
fmuls
push
cltd
xor
mov
sysexit
fnsave
push
cmpsb
cwtl
and
aas
inc
xchg
les
outsl
pop
jnp
js
mov
cwtl
adc
inc
push
popa
faddl
arpl
mov
insl
into
xor
jns
mov
shr
ret
addr16
flds
xchg
push
adc
mov
test
or
outsl
and
add
push
xchg
lret
xor
pop
xor
push
aaa
pop
push
mov
repz
xchg
inc
test
stos
add
add
push
cmp
shlb
out
fnsave
mov
adc
sub
inc
pop
xchg
test
push
fsubr
pushf
ja
push
imul
pop
leave
stos
inc
mov
ret
pop
or
mov
sbb
stc
loope
mov
or
movsb
test
imul
adc
push
adcl
out
test
popf
push
ret
adc
mov
push
fcomps
jg
hlt
orb
loop
mov
js
aad
sub
rorl
mov
shrb
hlt
sbb
ret
or
fstps
rclb
rol
cs
imul
sti
scas
mov
push
pop
xchg
pop
int3
or
inc
daa
add
hlt
loopne
xchg
in
fcmovbe
adc
cmp
inc
sub
mov
leave
mov
ret
mov
jg
rcll
push
lcall
ds
clc
and
outsl
in
cmc
and
xchg
cmp
ss
loope
push
icebp
inc
divl
xor
mov
out
fcomps
xor
mov
daa
popl
jle
xor
xor
push
sarb
cmc
inc
jo
adc
xor
and
push
inc
lret
cli
inc
jecxz
xor
jp
push
push
in
xchg
sbb
mov
loopne
addr16
ds
lcall
call
mov
xor
adc
insl
cltd
mov
ret
sti
lcall
push
fsubp
fbstp
sbb
cli
adc
push
das
sub
or
add
or
sbb
outsb
sub
or
xchg
push
addr16
xchg
sub
shl
push
inc
xor
or
and
mov
and
pusha
and
sahf
mov
ds
sbb
or
jnp
adc
mov
xchg
xor
sub
sub
mov
cmp
lahf
rclb
sub
add
and
jne
ret
inc
daa
loopne
adc
pop
push
mov
add
fnstsw
repnz
test
add
sbb
aam
mov
ret
dec
testl
int
mov
xor
and
out
xchg
jmp
and
cs
fstps
rcr
insb
mov
adc
mov
es
and
adc
ljmp
pop
je
sbb
sub
xor
icebp
out
adc
xor
aaa
loopne
sbb
js
stos
push
je
dec
out
jmp
jo
test
bound
cltd
dec
lcall
sub
mov
cmp
fnstcw
jle
fst
xor
test
jl
rcl
jns
sbb
ss
aam
js
cs
popf
or
mov
sbb
fidivs
ja
mov
cmp
insb
push
xchg
int
stos
mov
cld
je
sub
push
xchg
adc
adc
mov
enter
mov
lcall
and
and
mov
inc
mov
xlat
loopne
push
out
imul
sbb
js
inc
adc
or
out
jp
mov
inc
mov
mov
sbb
cmp
cmc
stos
xor
sub
ret
in
mov
js
data16
stos
shrl
lahf
jne
ret
ja
mov
insb
inc
pop
lds
mov
push
sarl
cmovle
and
xlat
mov
cmp
das
ljmp
nop
adc
popf
test
hlt
fadd
ret
inc
daa
pop
lahf
or
xor
int3
xor
sahf
mov
mov
push
call
addr16
out
mov
adc
mov
jp
jne
and
mov
sub
movsb
testb
sbb
mov
stos
lret
orb
stc
leave
andb
add
xchg
insl
adc
cmp
sahf
outsl
cmp
pop
outsb
pushf
sahf
enter
cmp
fdivrl
inc
add
lcall
pop
inc
aam
fs
sub
mov
jmp
jb
incl
fwait
pop
fs
and
imul
test
inc
sub
repz
pop
or
mov
imul
clc
cmp
xchg
aas
pop
jbe
loop
loopne
icebp
mov
mov
pop
shll
mov
cltd
xchg
cmp
or
movsl
lods
inc
popf
out
mov
nop
data16
repnz
xchg
ret
push
pop
rcrb
xor
imul
pop
or
push
inc
mov
jl
imulb
jo
mov
xchg
sbb
xchg
int3
adc
lahf
rorb
fsubs
xor
pop
in
pop
imul
adc
sub
push
jg
inc
jno
jb
adc
inc
lock
jp
xor
test
sub
bnd
in
xor
push
push
mov
pop
popa
ds
sub
outsb
mov
mul
sub
sbb
ficoms
cmpsl
or
mov
addr16
and
jl,pt
stos
es
inc
and
xchg
jae
mov
pop
mov
rorb
addl
xchg
fldt
call
push
imul
or
in
and
int
cltd
pop
stos
dec
add
and
int3
ret
incl
push
push
sbb
sbb
sbb
movsl
xor
mov
out
adc
jae
ljmp
cld
loopne
mov
aad
jge
in
les
lods
ficoms
cwtd
ja
inc
movsb
shrb
pop
shll
mov
adc
dec
jbe
push
push
inc
jge
mov
sub
adc
xchg
add
lds
sub
adcb
or
mov
pop
add
aad
sbb
push
cmp
add
mov
ss
push
pop
sub
in
push
mov
shrl
mov
mov
aaa
mov
repz
push
orb
int
nop
cmp
cs
xor
push
fs
loop
notb
popf
adc
addr16
mov
jb
and
movsl
xor
rorb
orps
sbb
sahf
enter
sbb
xor
loope
clc
mov
fwait
lods
js
lods
cmpsb
out
xchg
xlat
lods
and
push
lret
add
insl
mov
jg
or
out
ljmp
or
or
mov
xor
jno
frstor
or
lret
mov
pop
repnz
sbb
cmp
in
or
mov
notl
outsl
cld
loop
mov
mov
sbb
sbb
ret
xchg
sbb
cmp
xchg
in
mov
and
jnp
in
shll
jo
dec
fcoml
lret
jne
or
pop
add
mov
sbb
xor
and
xor
in
lcall
fsubs
adc
mov
out
xchg
pop
cli
repnz
pop
lret
adc
cli
jbe
outsb
ds
lods
pop
int
pusha
std
out
cmp
and
shlb
and
pop
inc
sbb
cld
mov
sbbl
stos
push
clc
dec
or
addb
aas
mov
xlat
movsl
jbe
pop
sbb
sbb
dec
in
mov
hlt
cmp
mov
ds
sub
cmp
or
and
lcall
js
jmp
dec
sbb
jg
aaa
dec
outsl
cmp
fisubrs
adc
adc
das
xor
dec
xor
mov
sub
pop
stos
cmp
lret
out
xorl
mov
jl
cltd
sbb
xor
xchg
bound
xor
mov
dec
incl
ret
pop
es
repz
sub
ret
jg
cmc
mov
add
cmpsl
lock
xchg
lcall
pop
scas
orb
lahf
jle
in
mov
jmp
inc
jecxz
cmc
aaa
test
ds
enterw
xchg
mov
mov
fcomi
shll
sub
aaa
out
mov
inc
or
cwtl
daa
sbb
xchg
jo
shlb
rol
and
mov
inc
add
and
inc
lcall
sbb
fcoms
pop
and
mov
inc
xor
inc
test
cmp
shll
sahf
jno
shll
addl
mov
jge
test
and
imulb
mov
sarl
inc
aaa
fiaddl
mov
pusha
in
jmp
clc
stos
inc
into
nop
fildl
cmp
jmp
ljmp
pop
and
or
jp
sbb
pushf
test
lahf
sbb
in
cmp
xchg
dec
outsb
adc
je
loopne
test
in
call
xor
ds
mov
jg
sti
fbld
repz
mov
jmp
bound
fistl
icebp
xlat
fmul
shlb
dec
in
mov
jg
sbb
sarb
cmpb
dec
clc
in
fwait
lret
xor
cmp
mov
sub
or
jno
mov
aad
xorb
cmpsl
nop
cmp
daa
lahf
or
test
sub
movsb
xchg
dec
scas
dec
push
sbb
movsb
add
xlat
mov
lods
cld
sarl
and
and
inc
in
cld
fdivr
cs
cmpsb
cmpsb
and
inc
test
jb
cld
out
xchg
mov
loop
roll
mov
xor
js
pop
pop
repnz
xor
jnp
in
dec
stc
test
cli
add
nop
cmp
int3
add
push
pop
dec
mov
cmc
and
lcall
insb
inc
fsub
xchg
fidivs
jmp
and
mov
inc
push
mov
xchg
imul
mov
mov
pusha
fwait
out
sub
fcmovnu
inc
scas
cmp
idivl
imul
mov
jle
cmp
arpl
cli
and
cmp
test
out
insl
mov
add
shll
imul
insl
dec
cmpsb
clc
scas
int3
test
sub
shr
jae
popa
notl
pop
nop
fistps
es
outsb
xor
outsb
xor
adc
loope
jge
insl
test
mov
out
testl
xor
cs
mov
std
dec
sbb
add
xchg
adc
imul
and
dec
sbb
inc
fistl
jg
xchg
add
int3
pop
cwtl
push
mov
jecxz
arpl
jae
movsb
cmpb
xchg
and
or
mov
and
cltd
mov
lret
jl
div
or
lahf
or
mov
repnz
pop
xchg
fstpl
jmp
sub
lods
dec
xor
push
es
adc
clc
or
cmp
lods
pop
fucomi
das
cmpsl
test
fiaddl
mov
insb
test
xchg
pop
xorl
mov
mov
movsb
rclb
sub
jne
xor
mov
jnp
sti
lcall
xchg
cltd
mov
mov
daa
cli
lods
sbb
xlat
je
pop
jne
subl
mov
mov
mov
inc
jge
or
lahf
cmp
out
inc
hlt
cltd
pop
push
and
xchg
or
add
mov
inc
shr
and
xchg
mov
outsl
std
mov
repnz
cmp
hlt
inc
in
or
int3
xorl
push
xor
rcl
pop
pop
jl
loopne
add
test
mov
lcall
mov
xor
jp
pop
addl
cmp
mov
cld
mov
int
je
mov
sarb
cli
mov
ds
mov
pop
movsb
cmc
or
push
xchg
out
bound
fldenv
loop
in
hlt
mov
and
out
cli
dec
das
repz
hlt
in
mov
nop
bnd
idivb
xchg
mov
shl
add
fucomp
in
orl
jecxz
jnp
inc
ficoml
jg
sub
pop
mov
iret
adc
push
push
shll
cmp
adc
xchg
sub
mov
cmp
xchg
insl
ljmp
dec
and
and
xor
pop
and
int3
orl
fmull
pop
jle
add
lods
out
sub
cs
and
popf
cmp
movsl
clc
adc
dec
pop
and
ds
decl
or
jns
aam
pop
add
xchg
cld
sub
xor
stos
les
jno
pop
stc
jg
mov
ror
mov
sub
sbb
pop
imul
test
jg
iret
mov
xchg
in
test
xlat
inc
ret
ret
jb
repz
jp
je
bound
out
mov
faddp
out
and
fistps
iret
ret
mov
outsl
jmp
out
jge
movl
mov
cmpsl
pop
arpl
daa
in
lret
sub
jne
stos
push
lea
popa
mov
pop
je
arpl
push
or
fbld
fisubrs
int3
cs
jne
xlat
adc
jb
lds
sbb
mov
mov
cltd
or
std
repz
xor
jp
xchg
sahf
ss
outsl
pushf
xchg
jae
xor
jnp
push
pop
in
mov
add
sarl
movsl
inc
lea
test
mov
inc
pop
repz
pusha
daa
orl
cmp
daa
in
orl
adc
and
ds
mov
cmp
enter
and
sbb
jle
repz
jnp
cmpb
jge
sub
cmp
pusha
mov
in
sub
scas
scas
mov
cmp
jg
or
pushf
clc
sub
mov
xchg
push
popf
scas
cmp
push
data16
loopne
add
and
dec
push
adc
mulb
mov
adc
stos
scas
in
adc
push
add
pop
leave
in
pop
jbe
ss
xor
add
jp
jmp
mov
xchg
cwtl
jge
add
test
cltd
dec
lea
scas
jb
jmp
fwait
xor
fiaddl
nop
fwait
ret
lods
test
in
mov
adc
je
les
rorb
jmp
sbb
cmc
lods
testl
sbb
and
push
or
mov
xlat
sub
mov
ja
divl
inc
sub
int
jle
inc
popa
popa
mov
xlat
jge
std
shl
lock
cmp
xchg
sub
out
fistps
lret
pop
mov
iret
mov
in
js
inc
and
stc
jg
ja
adc
ds
cmp
inc
loop
pop
dec
push
rclb
mov
vpsllw
dec
mov
pop
repnz
xor
sbb
arpl
mov
test
aam
push
movsb
inc
subb
shlb
test
outsl
sbb
mov
in
imul
inc
dec
cltd
cmp
push
in
popa
sbb
int3
cmpsb
cmp
fsubs
mov
imul
sahf
xchg
jno
negl
dec
loop
arpl
jge
push
mov
test
sbb
shll
subw
jae
mov
rcr
pop
inc
arpl
fstps
insb
jl
pop
cld
hlt
lods
sub
xor
cmpsl
stc
gs
push
lock
cmp
adc
icebp
push
jo
jne
push
dec
out
mov
aam
ljmp
inc
sub
sub
in
roll
shrl
push
xchg
out
cld
stc
xchg
dec
fidivs
rcrb
xor
shl
mov
sub
movsl
or
lods
enter
out
out
out
push
xchg
jmp
daa
inc
cs
jmp
lods
ds
dec
sbb
jo
pop
lods
xchg
ljmp
push
pop
xor
adc
mov
cmp
scas
xor
pop
add
cli
jp
push
jecxz
outsl
lret
mov
popf
xor
mov
xor
mov
xchg
pop
or
xor
sub
add
notl
lods
xchg
pop
push
shl
stc
test
jg
mov
aaa
mov
mov
out
xlat
popf
repnz
add
jns
aad
xor
pop
cmpsl
mov
popa
mov
nop
sbb
daa
mov
fistpl
mov
mov
mov
and
xor
xchg
xchg
push
pop
js
or
dec
add
dec
loop
js
jne
push
ds
or
ja
stos
fwait
xor
cmp
xor
adc
cmp
push
pop
ficoml
fwait
les
pop
pushf
ds
and
pop
xlat
gs
scas
scas
mov
lcall
pop
push
sub
arpl
mov
js
sbb
inc
jmp
je
shlb
or
cmpsb
mov
sub
xchg
fisubrs
stos
outsl
add
xor
push
cmp
fldz
aam
ljmp
clc
cmpsl
xchg
ss
stos
mov
push
push
dec
data16
xchg
add
sub
movsl
dec
movsl
sub
mov
loop
dec
cmp
push
insl
int3
sbb
push
mov
xlat
cmpsl
je
ja
cmpsl
sub
imul
xchg
inc
arpl
cmp
xor
popf
dec
gs
cs
mov
test
andl
cld
cmp
cli
iret
sub
lods
fimuls
pushw
lods
sahf
adc
mov
aaa
sbb
test
cmc
push
shlb
adc
test
nop
push
mov
insb
add
or
in
outsb
shlb
jp
xchg
loop
cli
mov
pop
lret
mov
pop
inc
sahf
pop
jp
leave
out
aad
or
xchg
fdivrp
add
out
out
jno
mov
dec
imul
xor
push
sbb
es
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
pushl
push
pushl
push
push
push
pushl
call
jmp
movl
adc
mov
addl
jmp
into
or
jg
fildll
dec
mov
xchg
pop
or
pop
bound
popa
mov
or
negl
test
dec
out
repnz
orb
xchg
xor
outsb
add
sbb
clc
sub
ror
fcompl
jmp
fstps
add
ss
sub
push
cmc
xchg
imul
test
sbb
ds
imul
daa
xchg
add
push
and
imul
inc
sbb
pop
cmp
dec
mov
xor
mov
in
es
test
cli
bound
mov
mov
outsb
sbb
sub
jbe
stc
mov
imul
jne
sbb
movsb
insb
jecxz
sub
cmc
jae
lcall
jle
push
sbb
dec
or
pop
jno
mov
push
mov
ret
out
adc
bound
das
and
jne
push
and
jmp
push
lret
insb
rcrb
jp
lods
jne
dec
dec
lds
popf
in
xchg
std
sub
adc
mov
shll
ss
jns
xchg
ret
test
stos
jno
fstl
daa
les
xchg
sbb
imul
mov
sbb
xor
sub
xchg
xchg
add
jmp
mov
pop
fcoml
jbe
or
popa
cmp
pop
testb
out
sub
jne
mov
and
xchg
les
fs
pushf
jne
dec
scas
sbb
mov
adc
mov
lods
inc
cli
or
popf
fmulp
pop
bound
jno
mov
cli
pop
xchg
dec
push
enter
mov
stc
adc
adc
mov
mov
adc
adc
lcall
push
jo
ret
fcmovnbe
loope
popf
or
sub
test
mov
add
mov
pop
inc
fstpt
dec
push
and
scas
dec
pushf
bound
je
icebp
rcl
stc
addr16
add
sbb
fistpl
or
and
push
jns
fists
test
lock
inc
mov
popl
pop
into
sub
lods
jg
or
lret
call
mov
dec
mov
jl
jmp
sub
pop
gs
mov
daa
and
push
imul
jbe
mov
push
sbb
sub
push
mov
std
je
or
add
xor
mov
rol
push
hlt
dec
push
dec
and
in
mov
fisttpl
addl
pop
inc
loop
roll
jl
jnp
call
mov
jmp
add
ret
lahf
arpl
mov
xor
xchg
fisubl
fstps
add
aaa
add
sub
roll
fcoml
out
or
adc
ret
ret
pop
add
lcall
dec
xchg
js
loopne
aaa
pushf
sbb
add
jne
push
sbb
jno
fucomp
ja
mov
mov
sbb
xchg
ds
jae
pushf
out
xchg
xor
push
out
stos
sbb
in
sahf
into
movsl
pop
push
sbb
repz
jge
shll
cmp
jb
xchg
div
clc
ficompl
lock
xchg
lea
out
arpl
and
mov
push
outsb
xor
mov
sbb
loop
jb
ret
xor
xor
xchg
ficoms
cwtl
adc
roll
hlt
sbb
xorb
test
jmp
es
mov
xor
xlat
sbb
push
gs
push
repz
stos
xlat
outsb
hlt
cmp
and
mov
scas
add
xor
fsubrs
rcrl
add
or
adc
add
mov
int3
add
outsb
pop
ds
pop
fldl
arpl
push
mov
lret
test
push
xchg
xchg
shlb
stos
and
pusha
mov
test
xor
sbb
mov
loope
testb
movsl
push
daa
adcb
in
rcr
sub
xor
int
ret
lock
icebp
sbb
icebp
repz
and
jns
stc
or
xor
mov
mov
inc
inc
dec
mov
andb
aam
mov
jo
scas
call
fiadds
xchg
adc
sahf
pop
inc
xchg
mov
inc
mov
cli
cli
mov
adc
ficoms
mov
cmpsl
sub
pop
les
ljmp
aaa
push
dec
pop
cmpsl
and
cmp
add
mov
in
jg
mov
push
or
cmc
lds
push
adc
cmp
fnsave
enter
fmuls
fistpll
or
xor
xor
fistl
lods
inc
cmpsl
cwtl
push
in
les
popf
jo
inc
icebp
xor
xor
mov
mov
jg
add
aad
xchg
rolb
repz
rcrl
adc
faddl
push
inc
sbb
push
or
pop
divl
ljmp
pop
or
ds
adc
int3
adc
insb
cltd
xor
jmp
push
dec
nop
out
add
lret
aas
insl
pop
lods
outsl
inc
push
cltd
or
pusha
jge
mov
nop
push
mov
dec
cmpsl
mov
orl
cld
lret
pop
inc
jmp
xor
mov
out
fbstp
sub
gs
push
mov
ret
popa
mov
or
in
xchg
jns
xchg
inc
lret
adc
jp
syscall
or
push
icebp
lahf
mov
mov
mov
insl
xorb
pop
xchg
and
scas
arpl
int
xchg
in
es
jno
movsb
mov
jnp
rcll
adc
sti
popa
fstps
jnp
pop
mov
dec
xor
push
imul
push
fcompl
movsl
mov
es
jmp
je
rorb
imulb
loop
xor
jl
jp
lret
xlat
cmpsl
xchg
insl
add
add
es
ds
mov
add
push
and
insl
jno
and
pusha
jae
sub
dec
in
xor
mov
std
rcl
and
mov
jge
pop
faddp
mov
mov
lcall
repz
mov
mov
sub
xchg
mov
sahf
mov
inc
enter
mov
mov
push
aad
incb
sbb
lods
nop
cmp
jbe
xchg
in
dec
loopne
adc
lea
in
roll
outsl
sbb
loop
imul
fcoml
call
popf
dec
outsl
xchg
jge
xor
xor
inc
stos
xchg
es
mov
pop
dec
fs
pop
ja
ret
rcr
push
adc
mov
in
mov
iret
mov
pop
jb
inc
add
adcl
aaa
sbb
mov
adcb
out
lcall
pop
shll
repnz
es
jl
pop
jge
push
xchg
ja
cwtl
das
sbb
push
pop
or
daa
mov
push
dec
cmc
xchg
bound
pop
iret
inc
mov
mov
stc
movsb
jo
push
loop
pop
push
jle
sbb
push
mov
cmpsb
pushf
in
push
or
lret
adc
sub
shlb
xor
addr16
dec
into
jmp
or
mull
pop
mov
pop
lret
stos
ss
inc
je
cwtl
push
out
ficoms
ficoml
mov
rcr
dec
mov
mov
imul
or
jns
int3
add
jb
outsl
sub
pop
or
fnstsw
pop
cmp
jmp
push
sbb
sbb
mov
jmp
stc
push
pushf
fiadds
and
aad
add
fstps
in
xor
xor
push
mov
jmp
pop
test
pop
sbb
push
push
sub
or
jmp
inc
mov
mov
add
adc
stos
fldl
pop
jge
sbb
lahf
cmp
fwait
and
scas
ljmp
stos
cmpsl
outsl
test
out
adc
cld
dec
les
rclb
dec
xchg
movsb
mov
js
sub
push
aad
xchg
xor
inc
movsb
fimull
lea
jb
andb
add
icebp
rolb
lock
inc
push
mov
pop
jne
adc
cs
in
cltd
mov
jle
mov
arpl
xchg
jnp
lea
sub
cwtl
or
jp
xor
scas
cltd
icebp
mov
imul
sub
ret
dec
jb
fwait
xlat
cmp
std
push
decb
push
lock
and
push
push
lods
inc
xchg
inc
inc
pop
xchg
sub
loope
js
ds
ss
in
xchg
repnz
fstpl
push
lea
xor
dec
imul
sbb
pop
stos
jno
inc
flds
fistps
cltd
or
popa
jno
xchg
push
jo
jge
inc
mov
in
mov
xchg
dec
pop
aaa
sahf
stos
arpl
cmp
pop
into
std
lock
dec
xchg
jnp
and
or
ror
push
dec
shrl
aaa
bound
mov
mov
adc
sbb
jp
or
test
push
ja
clc
cmpsb
aaa
jecxz
roll
jae
scas
insl
xchg
jmp
adc
pop
mov
adc
aas
in
add
pop
pop
jmp
ret
fwait
push
ret
or
xor
and
jno
mov
mov
fcmovb
mov
lret
xchg
xor
adc
push
xor
sub
push
push
xor
xchg
loopne
push
inc
xchg
sbb
aam
lods
sbb
insb
hlt
mov
pop
push
cmpsb
insl
or
movsb
jae
fsubs
pop
add
add
jne
repz
into
inc
pushf
or
fldl
sub
dec
insb
xor
xor
mov
sub
dec
jo
sbb
movsl
into
push
das
xchg
and
sbb
lret
imul
pop
nop
and
inc
dec
fucomip
mov
cmp
ficoml
push
xor
mov
nop
adc
xor
loop
mov
mov
fsubr
ds
pop
inc
or
mov
lods
ljmp
add
fistps
lock
mov
lods
or
adc
aas
fs
out
mov
push
insb
stc
arpl
xlat
into
sti
insb
mov
and
jmp
cmp
scas
xchg
mov
daa
aas
int3
push
mov
ljmp
mov
sbb
xchg
ja
push
push
pop
pushf
sub
push
scas
mov
dec
fnstcw
jecxz
push
mov
stos
mov
insb
imul
test
fistps
aam
adcb
js
xor
popf
jbe
jae
pop
nop
mov
sub
dec
inc
jno
jo
sbb
stos
out
imul
andl
and
xchg
mov
pop
mov
push
pusha
cmp
xchg
and
adc
out
add
les
sbb
shl
outsb
pop
sahf
aaa
les
je
pop
pop
mov
mov
out
lret
mov
mov
ja
and
repnz
mov
enter
dec
hlt
mov
fisttpl
insb
push
pushf
mov
mov
inc
bound
ss
mov
enter
mov
inc
xchg
mov
cmp
pop
lret
jg
cwtl
cmp
stc
push
and
mov
fstpl
in
lahf
scas
in
fidivs
notb
dec
call
popa
or
add
xchg
loop
hlt
mov
dec
lcall
cmc
pop
jb
mov
jb
aam
jns
pop
push
inc
jno
cmp
test
adc
fisubrs
xlat
pop
add
sbb
push
push
stos
int
xchg
mov
mov
sub
or
cwtl
ret
ret
sarl
mov
sbb
lretw
clc
push
ja
out
sub
popf
andl
daa
pop
jmp
add
fisubrl
ja
sbb
push
mov
mov
sub
push
or
mov
dec
je
decb
mov
loop
cltd
cmpsl
movhps
out
loopne
imull
es
sbb
mov
adc
dec
push
and
pop
ja
add
fs
bound
pop
lods
mov
xor
stc
sahf
sbb
mov
pop
jmp
inc
cmc
out
push
mov
in
mov
popl
inc
or
push
adcl
adc
push
push
cmpsb
mov
sub
stos
push
push
jp
fstps
xor
fs
rcl
ret
add
mov
popf
add
mov
cli
sbb
push
cwtl
fistpl
sbb
sub
insb
pop
pop
movsb
mov
sbb
jnp
xchg
nop
adc
xchg
test
adc
cmp
ljmp
and
push
lahf
inc
popl
js
jno
ja
int3
fwait
lods
cwtl
jns
push
sbb
pop
add
popa
test
cmp
xchg
sub
jl
clc
sub
arpl
lret
sub
insl
leave
data16
dec
mov
cli
in
in
dec
scas
test
idivb
in
stc
adc
es
push
xchg
mov
jle
xor
test
inc
das
pop
adc
pop
pop
add
adc
sbb
into
pop
push
pop
add
rcrl
ret
and
sbb
cmp
aas
dec
and
cmp
pop
sbb
into
push
icebp
jg
lahf
faddl
and
push
sbb
fucomp
adc
sbb
jb
out
lret
push
xchg
jge
jb
adcl
cmp
mov
ret
js
mov
scas
xchg
mov
lock
rolb
lock
mov
mov
mov
xlat
not
dec
dec
mov
sahf
stos
pop
mov
add
movb
iret
insb
mov
ljmp
adc
or
popa
sbb
adc
ret
dec
mov
div
lret
sbb
or
jle
inc
adc
scas
pop
push
push
pushl
add
push
adc
cld
iret
mov
mov
ret
ret
sbb
or
mov
movsb
movsl
shr
xor
mov
cmp
jecxz
cmp
repz
lcall
and
push
nop
add
imul
repnz
out
sahf
adc
test
mov
xchg
inc
bound
push
push
add
rcr
pop
cmp
les
aad
movsl
or
jg
mov
xchg
out
mov
iret
loop
stos
shl
push
in
add
pop
jle
int3
js
lds
jecxz
test
bound
mov
and
outsl
lcall
sar
sub
in
sahf
rclb
jmp
xchg
and
mov
dec
adc
in
stos
cmp
sub
or
push
push
cld
sub
and
cwtl
das
mov
pop
in
sbb
lods
add
leave
lret
mov
push
mov
adcl
pop
inc
cmp
insb
or
sti
inc
scas
fdivl
pusha
enter
clc
addr16
call
lods
stc
and
adcl
popf
test
add
sub
mov
out
aad
lods
adc
pop
xor
dec
inc
leave
and
pop
pop
inc
push
inc
sbb
cmp
sbb
lods
int3
repz
sub
lea
sub
xchg
rclb
mov
mov
mov
dec
loop
jb
jge
pop
push
cmp
rcr
fildll
insl
jp
or
cwtl
addb
push
dec
mov
inc
test
ljmp
pop
cmp
daa
lcall
mov
out
push
sbb
jle
sahf
ficoml
cmp
int3
pop
mov
in
in
add
xlat
das
jecxz
jne
icebp
fmuls
cltd
pop
and
cmp
add
bound
mov
data16
or
scas
inc
xor
cwtl
movl
xchg
jae
xor
test
cli
pop
pop
fbld
movsb
mov
mov
daa
sub
add
xchg
es
mov
iret
clc
lahf
in
and
sub
rorl
popf
mov
adc
stos
lock
mov
mov
xchg
cmp
lcall
mov
popa
xchg
push
dec
es
push
insb
pop
arpl
fdivr
jae
aas
popf
fdivs
mov
leave
pop
repnz
sub
and
or
idivl
aad
iret
icebp
out
xor
pop
outsl
add
into
or
pop
sarb
popa
out
leave
test
pop
ret
sbb
pop
or
inc
mov
pop
cmp
sub
and
pop
cmc
xor
mov
rclb
in
test
dec
push
lret
sub
in
mov
divb
xor
ret
lahf
into
lahf
stos
or
loopne
adc
aad
dec
mov
sbbl
inc
cmp
aam
inc
inc
jmp
push
mov
psubq
dec
test
dec
mov
rorb
movsl
aam
pusha
shrl
adc
pop
mov
lret
push
mov
flds
xchg
cmc
das
sbb
inc
das
outsl
fiaddl
dec
in
movsb
add
imul
mov
dec
sahf
shrb
push
enter
data16
in
mov
jnp
mov
popa
pop
dec
sbb
mov
fcoms
xchg
stc
dec
lcall
aas
icebp
dec
and
mov
popa
leave
push
fldenv
jne
lcall
sti
fidivl
and
adc
enter
fistl
inc
mov
cmp
aas
ja
bound
stos
nop
push
jns
push
mov
jl
jge
dec
xchg
sbb
and
mov
or
xor
ja
sub
loope
cld
ss
push
ljmp
adc
push
loope
xchg
mov
pop
jo
xchg
iret
add
data16
and
in
sbb
lock
adc
packssdw
in
xchg
mov
cmpsl
in
fistpll
out
into
xor
dec
out
aad
ljmp
mov
pushf
sbb
and
inc
addr16
xorb
lret
inc
loopne
mov
xor
mov
add
pop
pop
das
data16
movsb
pop
fs
test
and
inc
mov
and
lret
pushf
jge
outsb
jmp
ret
xchg
jmp
sbb
sub
das
sub
sub
nop
or
xchg
int3
lahf
cmp
adc
xchg
xchg
xchg
add
push
ds
movsb
mov
std
push
cmp
ret
sbb
pop
adc
js
mov
ficoms
stos
or
hlt
test
loope
inc
ja
mov
decl
or
pop
bound
scas
sbb
insl
js
xchg
xchg
arpl
cli
mov
dec
mov
lcall
orl
cld
mov
xor
out
adc
cmc
stos
cmp
add
sbb
mov
sub
cltd
std
ljmp
and
xor
fadds
stos
add
lret
sti
and
out
jns
ss
rcll
pop
movsl
jbe
fs
dec
pop
jnp
fiadds
dec
fisubrs
dec
cld
fisttps
shlb
cmpl
and
test
mov
fldl
adcl
mov
popf
lods
dec
in
xchg
scas
mov
mov
xchg
fbld
movups
cli
jecxz
pop
pop
mov
jmp
mov
add
xor
sbb
fdecstp
add
jp
scas
inc
gs
in
fidivs
pop
push
lcall
jno
out
inc
or
sub
inc
adc
xchg
std
lret
test
cmp
pop
fisttps
daa
cld
negl
xchg
mov
adc
pop
pop
subb
in
cmp
fcoms
pop
cmp
inc
sub
enter
jne
popf
xor
mov
jle
sbb
cld
iret
mov
jmp
lods
xchg
dec
movsl
stos
inc
cmp
jp
or
call
fs
ljmp
mov
call
pop
and
jmp
stos
xchg
and
js
inc
gs
ficoms
adcb
xor
lds
les
sub
sbb
mov
scas
or
jl
bnd
scas
inc
and
popf
dec
imul
mov
jecxz
jmp
adc
xor
jnp
repnz
aaa
mov
fdivr
xchg
int3
add
es
leave
push
xchg
xor
pop
and
mov
mov
fdivp
dec
repnz
xlat
xor
call
dec
and
outsb
adc
mov
push
fisubl
sub
fldl
lcall
mov
dec
test
mov
hlt
movl
jne
notb
xor
lods
incb
jne
dec
pop
mov
in
sub
mov
mov
das
filds
mov
ljmp
scas
leave
out
movb
fisubl
dec
jp
inc
and
push
scas
mov
jp
dec
outsl
xor
jg
push
loope
lcall
cli
xor
cmp
ljmp
push
and
movsl
pushf
jb
jecxz
xor
mov
bound
dec
push
lock
sti
xor
clc
push
jmp
pop
out
shrl
and
xor
jbe
dec
dec
mov
push
adc
test
out
push
scas
jbe
mov
cmp
enter
cmpsl
xchg
rolb
fs
xchg
push
in
setne
or
faddl
pop
mov
sub
jp
leave
push
lret
lods
pop
test
loope
sti
stos
loope
fldl
add
repnz
popa
clc
orl
scas
fwait
and
mov
and
cmp
das
cmp
test
outsl
je
out
jp
bound
aas
mov
bound
ret
loopne
sub
xchg
dec
and
or
lcall
cmp
add
push
add
mov
aas
mov
sbb
in
pusha
cmp
subl
mov
adc
xor
jae
xchg
push
sbb
mov
sub
and
ror
arpl
push
mov
fcoms
xlat
mov
or
cmpsb
insl
and
push
mov
into
pop
pop
push
mov
mov
mov
xor
call
mov
cli
sarb
jmp
mov
mov
mov
lods
leave
push
pop
test
mov
lret
mov
mov
push
inc
add
insb
jmp
mov
xor
scas
dec
scas
test
incb
daa
or
fwait
mov
mov
cmp
sub
mov
rcrl
ljmp
fdivrs
fwait
sbb
push
jl
mov
dec
and
jmp
cmpsl
add
adc
stc
ficoml
jno
push
aad
mov
lahf
popa
push
mov
and
jbe
add
repz
dec
adc
out
jmp
xchg
movsl
inc
push
scas
mov
pop
mov
xor
ljmp
jge
orl
stos
imul
sbb
es
jmp
push
shrl
adc
pop
std
ljmp
aam
inc
xor
testb
pop
mov
and
xor
add
les
dec
scas
cmc
mov
cltd
push
mov
movsb
cs
aaa
gs
btc
sub
not
and
cmp
or
mov
xchg
xchg
jno
jb
jl
lods
lock
add
roll
mov
dec
and
or
fcmove
mov
ret
leave
cld
mov
xchg
sub
lock
in
sti
push
push
jnp
gs
cmc
imul
sbb
pop
mov
push
mov
call
cmpsb
push
sbb
test
mov
push
sub
or
fstpl
jno
pushf
lret
lds
mov
out
push
xchg
leave
sub
xor
cmp
push
mov
aam
shlb
stc
add
mov
mov
xorl
fnstsw
push
sbb
gs
push
xor
mov
ror
sub
sahf
xchg
jge
push
repnz
pushf
stos
push
pop
lahf
cmpsl
or
pop
pop
pushf
mov
scas
mov
cltd
das
outsl
mov
sbb
jmp
js
popa
xchg
jne
lock
imul
movsb
jecxz
test
inc
mov
jmp
mov
push
push
out
imul
sti
jmp
js
mov
rolb
dec
mov
jae
movsb
shr
xor
or
je
flds
xchg
fldcw
or
pop
mov
adc
push
hlt
sub
and
out
pop
xchg
ss
add
in
or
inc
push
cld
fs
mov
bound
inc
sbb
pop
mov
out
push
fwait
arpl
stos
xchg
shlb
or
cltd
pop
dec
xor
push
mov
and
stos
cld
lods
rolb
je
stos
push
mov
fstpt
mov
cmpb
testb
and
mov
and
jbe
mov
fcmovnbe
out
xlat
cmc
add
out
insb
insb
int3
xchg
push
aad
sahf
dec
je
cld
or
adc
popa
lea
or
fimull
stos
and
adc
movl
pop
adc
fwait
jbe
aam
cs
xor
clc
aas
xor
cmp
rcll
fnsave
daa
dec
xor
mov
mov
outsl
inc
push
sbb
mov
or
pop
loope
subl
inc
scas
xchg
fwait
fsubs
jp
mov
add
cmpsl
mov
xchg
dec
insb
inc
popa
cwtl
cli
shlb
adcl
popf
testb
pop
std
sub
int3
es
mov
popf
rclb
lods
leave
push
push
testb
cltd
sub
mov
lret
xchg
xor
push
loope
push
dec
idiv
test
sub
out
shl
loope
xor
mov
or
movsb
dec
out
pop
xor
stos
imul
mov
shrb
jo
add
adc
push
mov
jge
stos
into
mov
jno
push
push
push
ud1
dec
pop
mov
xchg
xchg
sub
outsb
xlat
mov
add
mov
mov
mov
lea
lock
mov
dec
sar
inc
mov
cmp
push
rcr
lret
ljmp
pop
movl
fisttpll
xchg
xor
dec
jge
enter
mov
pop
into
add
shll
insl
push
testl
pop
scas
ss
in
inc
or
int3
aad
lods
fildl
inc
jp
neg
movsb
add
and
inc
dec
dec
dec
sbb
leave
in
int
add
dec
add
mov
aaa
xlat
les
data16
and
cld
or
fsubr
push
stos
inc
call
lock
cmc
cmp
fisttpl
mov
out
push
in
push
xchg
repnz
cmp
outsl
jecxz
pop
daa
mov
jle
sbb
js
dec
lock
std
test
adc
std
push
mov
push
adc
faddl
mov
and
mov
negb
hlt
imul
fwait
push
shrb
lea
icebp
xlat
cmp
lock
or
clc
sahf
cld
iret
insl
jecxz
jno
rcl
jno
pop
dec
sbb
mov
mov
mov
ds
fwait
mov
cmpsl
dec
or
pop
out
add
iret
add
xor
cmp
push
ret
jo
xchg
mov
cli
clc
int3
jmp
jle
loope
cmc
adc
sbb
int3
pop
mov
xor
scas
mov
lahf
cmp
sub
mov
or
hlt
fwait
ret
lock
jbe
or
pop
out
inc
das
mov
inc
cmpsb
les
test
mov
inc
adc
xchg
push
outsb
nop
and
push
mov
mov
ficompl
call
dec
mov
sti
ds
mov
das
add
jle
outsl
repnz
jge
rcr
pop
cltd
out
outsb
mov
shrl
mov
decb
add
xor
mov
stos
cmp
pop
or
pop
pop
and
pop
jbe
jne
pop
inc
add
sbb
or
pop
jmp
cmpsl
push
addb
fcoml
xor
dec
and
xchg
cmp
xchg
push
pop
and
jp
mov
adc
adc
push
jb
scas
add
mov
add
xor
adc
jmp
cld
xor
notl
fsubs
push
mov
mov
adc
sbb
jnp
insb
mov
leave
adcb
mov
call
sub
xchg
push
xlat
sti
push
mov
push
adc
lret
sbb
push
scas
inc
insl
cli
adc
adc
cmp
rcr
xchg
and
sbb
rcl
pop
add
mov
insb
inc
cmpsl
sub
sbb
mov
mov
add
clc
pushf
pop
pushf
xchg
testb
or
cli
idiv
shrl
cmp
aas
xor
pushl
insb
mov
inc
cmpsb
stos
jae
pop
mov
dec
mov
adc
das
imul
push
scas
outsb
jb
mov
sbb
xchg
add
mov
lds
sbb
push
inc
loope
leave
in
push
push
test
cmp
fcoml
jae
jg
push
movsl
sti
or
clc
stc
and
pop
bound
xchg
fnclex
ljmp
imul
adc
and
mov
pop
push
xor
xchg
pop
shrl
js
pushf
cmc
std
outsl
push
cmp
push
stos
sub
mov
dec
fs
sbb
xor
repnz
pop
mov
sub
dec
push
sub
mov
push
jne
jle
call
in
or
push
mov
lahf
dec
push
cmp
dec
fstpl
jae
or
dec
cmp
sub
loope
cmp
fdivrp
popf
inc
pop
mov
add
mov
lods
adc
xlat
lret
push
xor
fld
neg
or
xor
shll
test
hlt
dec
mov
push
jo
push
mov
cwtl
popf
and
jns
pushf
mov
aas
jg
call
mov
movsb
and
fbstp
out
cmp
adc
or
unpcklps
jmp
mov
cmp
jb
jnp
dec
inc
ret
mov
push
mov
xchg
push
pop
dec
insl
pop
sub
push
sub
xchg
scas
fcompl
xchg
mov
stos
xchg
jp
sbb
enter
mov
fabs
repnz
and
pop
push
jnp
pop
jg
inc
outsb
mov
les
lock
mov
imul
jno
fwait
addl
das
pop
cmp
pop
mov
mov
jno
pop
inc
sbb
cwtl
ljmp
mov
dec
ja
sub
iret
dec
push
imull
pop
sub
fmull
scas
pop
rcrl
or
push
out
fwait
ret
and
lods
mov
ret
and
xchg
cltd
pop
fists
in
loop
dec
xchg
or
bound
loop
cmp
inc
insb
add
xor
nop
out
jg
test
push
push
lods
jae
mov
add
add
add
add
xorl
xor
movl
cmp
jne
mov
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
push
movl
cmpl
je
cmpl
jne
pushl
push
push
call
xor
add
dec
mov
jmp
movl
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
movl
mov
add
push
mov
xor
add
sub
and
mov
addl
mov
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
jmp
mov
subl
mov
xchg
test
fscale
and
int
bound
push
pop
dec
jmp
or
and
repnz
fildll
inc
dec
lret
mov
mov
pushw
imul
jne
je,pt
lahf
dec
mov
je
adc
push
pop
adc
lret
icebp
inc
xor
fwait
add
xor
xor
pop
les
shrb
adc
pop
sub
movsl
pop
inc
adc
mov
push
cltd
adc
mull
repz
loopne
jge
ficomps
mov
inc
negb
mov
lcall
sub
aad
mov
in
out
sahf
cmpsl
cmp
fstps
je
lret
fadds
popa
adcb
and
dec
xchg
pushf
push
es
pop
pop
pop
push
jecxz
pop
sbb
outsb
scas
pop
fldl
push
inc
pop
and
mov
repz
scas
jmp
xchg
ret
xchg
js
out
mov
dec
shll
and
mov
shll
sub
ds
xchg
cmp
inc
and
dec
pop
test
adc
mov
cltd
andb
shll
xchg
xchg
mov
jno
lea
in
adc
in
add
xchg
push
leave
fsubl
adc
add
mov
mov
ds
adcb
repz
mov
into
mov
jbe
push
cmp
inc
adc
xor
jge
add
fcmovbe
test
add
dec
fisttpll
ds
adc
popa
pop
jle
sbb
fs
dec
add
mov
mov
sub
jne
or
je
and
mov
mov
xchg
nop
ds
add
lcall
loopne
adc
sahf
nop
inc
int
scas
lahf
jmp
fst
popf
icebp
cmp
jp
out
adc
insl
and
fldl
je
test
addr16
ret
push
cs
jecxz
or
orb
xor
mov
cmp
adc
pop
and
movsl
xchg
sti
mov
adc
jns
mull
aaa
sbb
daa
adc
mov
jmp
popl
push
mov
jl
dec
jae
insb
ljmp
ret
fstps
enter
aaa
test
hlt
stc
cltd
push
add
inc
test
fwait
lea
inc
rclb
ljmp
mov
ret
add
loop
mov
scas
jne
mov
inc
out
jge
xchg
adc
push
shrl
ds
cmpsl
outsl
inc
xlat
mov
clc
dec
push
pop
push
sbb
ret
lret
mov
jae
stos
push
je
sarl
ficomps
leave
jmp
mov
push
add
sti
jns
insb
cs
push
sti
aad
lret
jle
adc
shrl
or
out
or
cld
xchg
shl
imul
bound
mov
or
mov
fisubrs
mov
mov
dec
cmp
pop
pop
and
pop
inc
add
test
popa
sub
fucomip
push
mov
and
inc
mov
mov
push
jae
mov
mov
inc
xor
loop
bswap
mov
in
mov
inc
sub
shl
hlt
mov
xchg
dec
sub
push
hlt
or
xchg
in
std
jb
sub
jle
repnz
jmp
jecxz
sar
ljmp
dec
ffreep
or
mov
inc
push
and
fidivl
jno
fs
mov
push
ds
cmp
mov
inc
test
in
scas
jbe
into
push
rcrb
jnp
sbb
ds
jg
fldenv
or
scas
into
mov
cmpb
or
mov
adc
mov
jne
jl
in
sbb
push
cmp
fildll
xchg
lret
cmp
sub
shlb
mov
sub
push
repnz
dec
faddl
cmp
icebp
in
out
or
dec
lahf
dec
or
mov
mov
jmp
cmpsb
ljmp
pop
cwtl
leave
sub
aad
and
jbe
xlat
inc
aas
mov
mov
les
cmc
pop
mov
add
nop
push
bound
or
xor
mov
rclb
vaddsubps
popa
push
cltd
push
outsl
leave
in
addr16
popa
jbe
add
in
dec
adc
inc
inc
push
sti
inc
repnz
shll
push
addr16
mov
push
js
inc
jnp
faddl
jno
jbe
cwtl
inc
cmpsl
jns
bound
or
movl
adc
inc
movsl
insb
push
ja,pn
imul
xchg
push
ljmp
add
mov
gs
jne
fcomps
inc
cmp
xor
ret
jb
dec
imul
pop
cmp
cli
mov
imul
and
test
mov
cmp
mov
add
daa
jp
inc
lcall
push
push
mov
popa
pop
aaa
lcall
mov
lcall
pop
push
data16
repnz
mov
sarb
test
push
pop
jbe
ds
xchg
push
movsb
fcmovnbe
ret
aam
sub
adc
or
jge
mov
cltd
or
clc
notl
dec
bound
negb
add
xor
lahf
pop
cmp
mov
nop
ficompl
fisubrs
stos
stos
push
cmp
clc
pop
cmp
mov
inc
dec
ljmp
xchg
add
inc
addl
cmp
shlb
pusha
and
inc
mov
ret
inc
mov
stc
sub
sbb
pop
inc
roll
mov
inc
sbb
out
xor
fwait
jge
adc
inc
jb
cmp
cmp
sub
push
cmpsb
movsb
fadd
fiaddl
jb
pop
pop
and
subb
pushf
cs
cmc
enter
iret
or
xor
loopne
pop
dec
fildl
rcr
lods
xchg
inc
les
sub
iret
mov
jmp
jns
inc
or
inc
push
ljmp
lods
mov
mov
lcall
enter
push
push
jae
loop
inc
cmp
mov
dec
stc
popf
adc
mov
add
xor
pop
sub
sbb
scas
vaddpd
cmp
add
pop
rep
lds
cli
ds
jae
stos
pop
cli
sub
xor
popf
frstor
lahf
dec
cmpsb
cmp
mov
rclb
bound
out
jnp
jge
mov
mov
fmuls
popf
mov
push
inc
insl
sbb
adc
mov
call
sti
data16
xchg
loop
inc
cmp
hlt
addr16
lret
jnp
xchg
mov
xchg
je
je
cmpsb
out
xchg
vmovq
outsl
fisubrl
addl
and
out
adc
jbe
mov
scas
jp
in
lods
sbb
xchg
adc
jl
movsb
sub
mov
repz
mov
cmp
xor
adc
mov
add
mov
std
enter
inc
sub
leave
mov
lea
push
test
push
scas
jle
jp
mov
pop
fdiv
pop
xor
dec
jp
cmp
or
xchg
adc
mov
roll
add
cmp
cmp
or
push
mov
andl
ret
out
dec
shr
wbinvd
or
stc
cmp
pop
cltd
push
add
xor
adc
decb
mov
decb
mov
test
add
cli
in
cs
push
cmc
xor
and
sti
push
xchg
xor
dec
ja
mov
or
int3
js
xchg
xchg
xor
jnp
outsb
mov
inc
push
repnz
dec
sbb
cli
mov
pusha
lret
dec
xchg
dec
clc
imul
ret
scas
push
sarl
dec
sub
inc
aaa
sbb
pop
inc
add
sbb
sub
mov
sbbb
mov
xchg
fistpll
mov
xchg
dec
sbb
sbb
or
inc
je
sbb
mov
repz
icebp
mov
xor
xchg
lods
jg
jno
dec
lock
push
mov
aad
sub
adc
insl
mov
test
jno
jp
test
xor
inc
xlat
mov
ljmp
jb
inc
les
cwtl
jge
pop
jno
jge
sbb
mov
sbb
imul
nop
loop
test
xchg
fildl
movsb
pop
mov
sbb
int3
pop
fiadds
iret
mov
loopne
pop
addr16
stc
jae
sbb
outsl
mov
dec
push
add
xchg
pop
mov
jne
xchg
pop
mov
inc
xor
push
inc
lea
adc
and
out
repnz
cwtl
jb
push
ss
push
cmp
adc
inc
cld
loop
movq
xor
in
mov
or
ss
mov
ret
dec
es
ljmp
es
push
xchg
outsl
push
movsl
jp
mov
pop
fcmovb
ficompl
insb
mov
sub
mov
jmp
dec
mov
inc
pop
fistps
fsubrl
pop
loop
fimull
bnd
jae
dec
xor
int
mov
jecxz
cwtl
hlt
dec
scas
roll
pop
mov
fdivrs
and
cmc
out
sub
ja
subl
dec
mov
jo
pop
repnz
clc
cwtl
sbb
mov
insb
out
mov
jae
lock
loop
adc
inc
clc
and
and
push
adc
cwtl
jmp
adc
aas
test
shll
cmp
cmpb
pop
mov
xor
icebp
mov
scas
lret
lcall
jmp
mov
jo
inc
cmp
add
out
xchg
addb
pop
inc
std
sub
jns
int
jne
imull
cmp
push
push
sti
sbb
pop
pop
mov
fs
or
imul
mov
ja
stc
xor
js
adc
mov
pop
mov
mov
dec
jnp
mov
xor
test
insb
cld
pop
inc
push
xchg
sbb
cmp
jne
dec
lods
xchg
pop
and
mov
mov
stc
push
loope
push
shlb
jb
imul
xchg
lds
inc
xchg
mov
adc
lock
cmp
repz
inc
and
gs
test
push
pop
add
mov
scas
pop
xchg
cli
out
outsl
into
fdivrs
inc
jnp
pop
add
insl
jne
xor
shrl
fidivs
dec
aaa
inc
loop
popa
movsl
decb
add
push
inc
into
fsub
sbb
fisttpl
cmovns
rcl
adc
jp
pop
add
fnstcw
sbb
cmp
inc
sti
push
rcl
out
enter
les
fiaddl
mov
shl
jae
mov
shlb
jae
pop
cmp
inc
pop
push
and
movsb
in
mov
daa
out
test
fs
mov
mov
or
jl
or
jmp
xchg
xor
xor
in
inc
mov
add
unpckhps
test
xor
outsb
jge
mov
sbb
xor
adc
into
in
sub
fisttpll
cmpsl
dec
inc
pop
inc
xchg
mov
push
sti
fs
cs
adc
push
push
cmp
mov
test
sbb
in
sub
rolb
into
lcall
dec
test
mov
push
cmp
aad
inc
lods
xchg
jge
push
leave
xchg
xchg
adc
xor
leave
mov
or
lea
pop
jno
mov
and
jnp
insb
dec
rorl
stos
pop
daa
popa
dec
icebp
and
int3
dec
les
and
cltd
popf
andb
repnz
imul
scas
sub
lret
rorb
push
scas
or
arpl
mov
adc
into
xchg
add
test
adc
mov
out
out
add
sbb
or
xchg
add
repz
mov
pop
mov
fistps
xor
aas
and
ror
iret
test
xor
mov
out
mov
scas
out
xchg
fcmovb
mov
xchg
mov
jecxz
negb
xor
dec
xchg
adc
mov
enter
ficomps
or
and
mov
hlt
xor
push
gs
mov
inc
xchg
mov
adc
fldt
jb
clc
cld
inc
xchg
push
aam
push
je
mov
cmpsb
and
popf
add
out
fiaddl
insb
jns
cli
popf
push
lea
out
leave
xor
or
inc
sbb
std
mov
cwtl
and
and
stos
xor
push
loop
and
mov
cltd
stos
sbb
inc
add
jae
test
ja
pushf
iret
push
cltd
push
ss
or
lods
data16
bound
mov
push
sub
rcrl
inc
inc
push
mov
jb
fisubl
cmp
adc
adc
cmp
add
push
aad
orb
dec
inc
lods
lds
lock
jle
sub
sub
lahf
mov
addl
push
and
lods
or
mov
loop
iret
sub
push
shrl
jno
aas
inc
mov
pop
cmpsb
les
push
mov
es
out
adc
push
inc
lock
inc
inc
les
dec
xchg
test
in
mov
addb
xorb
sahf
pop
in
mov
sahf
decb
cmp
add
fbld
aad
add
fcomi
xor
xchg
sub
mov
and
adc
movsb
mov
daa
xchg
lods
stos
jbe
lds
sbb
orl
test
cld
sti
std
andb
aam
push
fmuls
jmp
ret
aad
js
loope
mov
test
les
dec
fwait
pop
outsl
and
or
sar
scas
ss
lret
dec
adc
and
or
sti
mov
inc
fadds
outsb
es
lahf
movsb
pop
repnz
mov
es
lea
add
pusha
divl
mov
mov
cs
les
pushf
clc
lcall
pop
inc
in
bound
mov
popf
les
pop
incb
pop
fldl
lret
mov
cli
iret
adc
push
out
jl
sub
add
ja
sbb
in
daa
inc
inc
stos
mov
sbb
ss
xchg
cmp
das
out
ffree
cli
mov
xchg
inc
xchg
ret
out
shll
iret
pusha
jne
call
mov
shr
fnstsw
xchg
xchg
fcom
in
jne
aad
push
insb
fwait
in
jns
aaa
mov
cwtl
push
fstp
push
rcr
dec
pop
push
inc
test
cmp
insl
xchg
jnp
pop
adc
xchg
nop
sahf
ror
adc
loop
inc
fldl
jge
add
mov
mov
out
cld
rorb
fbstp
mov
sbb
in
dec
inc
mov
mov
and
nop
lcall
mov
data16
pop
mov
jne
inc
int
cmp
sub
js
cmp
stc
mov
pop
ljmp
aas
lods
ret
jns
or
dec
xor
lea
ja
jbe,pt
test
xchg
mov
das
inc
fldl
imul
add
insl
leave
int
pushf
popw
cltd
mov
imul
sbb
shrb
ljmp
and
nop
sub
dec
push
cmp
sbb
sub
sub
rcrb
cmp
fsubl
insb
dec
insb
sub
push
push
xchg
lods
loopne
cmpsb
mov
or
inc
add
or
hlt
addb
and
js
sbb
hlt
push
push
inc
mov
jb
es
mov
xor
mov
push
inc
pusha
xchg
ret
add
dec
stos
fstp
mov
jg
aam
cmp
imul
stc
inc
or
sbb
shrb
and
inc
xor
cmc
mov
xchg
ljmp
xor
test
inc
mov
and
sub
jae
or
jl
filds
ja
or
or
movb
mov
rcl
stos
popf
jp
and
xchg
imul
mov
dec
aad
and
xor
sbb
lcall
subl
xor
in
xchg
cmc
fwait
loop
inc
push
call
test
sbb
push
adcl
ljmp
imul
shlb
daa
add
pop
mov
jp
xchg
leave
jb
jae
pop
pop
mov
sub
pop
fcompl
push
inc
scas
in
pop
push
and
xor
aaa
or
idivl
insl
dec
add
mov
cwtl
fidivl
adc
xor
dec
aad
ss
dec
mov
sub
int3
ss
cltd
add
pushf
mov
gs
xchg
out
insb
xor
dec
mov
adc
jecxz
lret
fcoms
scas
add
xchg
andb
addr16
dec
aam
mov
shrl
xchg
stc
xchg
inc
ret
fwait
pop
outsl
pop
push
inc
lahf
imul
xchg
test
das
lock
jg
adc
insb
das
bound
daa
inc
mov
mov
adc
xchg
hlt
cmp
in
mov
cli
xor
xor
shll
movsb
mov
lret
lock
adc
out
cmpsb
inc
cltd
mov
jbe
cmp
inc
lea
movsb
dec
push
or
xchg
dec
daa
inc
xor
pop
jno
scas
enter
mov
sbb
fisubl
daa
sub
cmc
popa
in
push
xor
and
pushf
rolb
pop
popa
and
jp
adc
add
xlat
add
rclb
repnz
lret
int
lret
dec
jo
inc
lea
cli
lods
jae
adc
or
divb
faddl
pop
push
mov
inc
jmp
xchg
fcomps
mov
jge
mov
fdivrp
pop
inc
push
cmp
xchg
add
dec
sbbb
std
aad
inc
fs
call
mov
cmp
hlt
push
xchg
mov
or
push
lock
inc
aam
jne
jne
inc
jb
mov
pmulhw
movsb
and
and
or
cwtl
xchg
in
fwait
les
xor
cmc
in
stos
jns
inc
push
jo
test
jbe
fiadds
leave
aam
hlt
sub
std
gs
mov
rorb
ret
cmp
lock
sub
and
push
and
icebp
aaa
push
in
cmp
in
and
out
or
xor
xor
lret
aam
insb
mov
pop
repnz
mov
test
mov
int3
sub
loope
mov
mov
pop
shlb
loope
aam
cmpsl
add
xchg
add
pop
cmpsb
sub
negb
jo
into
push
stos
mov
push
lcall
push
push
icebp
mov
pop
movsb
mov
bound
cmp
lock
xchg
in
inc
xchg
pop
fneni(8087
jecxz
stc
fdivs
inc
pop
mov
push
mov
add
fstl
add
and
loop
scas
testl
or
imul
int3
shlb
call
mov
aam
add
test
cld
sub
jae
insl
xchg
push
sbb
sti
xlat
jb
sbb
push
insl
sbb
or
pusha
xor
cmp
mov
and
xchg
inc
xchg
sti
push
cmp
jle
sahf
cwtl
fimull
mov
orl
subb
shll
in
movsl
mov
xor
repz
shrb
fcmovnb
sub
cmc
sub
xor
mov
sbb
or
in
xor
pop
or
rorl
in
pop
in
push
scas
cmp
daa
cmp
adc
and
lods
mov
jne
sbb
push
and
das
ret
int
int3
jle
or
das
push
cwtl
std
sbb
iret
adc
aas
sbb
pop
pop
xor
add
add
jge
aas
add
adc
mov
pop
xchg
and
lods
sti
movsb
mov
push
and
or
mov
and
adc
popa
iret
add
xor
push
fisttpll
sub
f2xm1
movsb
push
pop
push
sub
vpmaxsw
out
rdtsc
cmp
mov
ftst
push
adc
mov
jnp
xor
xor
xchg
mov
mov
outsl
cs
xor
sbb
nop
mov
dec
dec
syscall
movsb
pop
xlat
cmp
adc
iret
add
cmp
lods
outsb
jns
push
out
lods
sbb
lret
jne
or
out
fs
xor
rcr
movsb
pop
out
inc
gs
jns,pn
xor
adc
mov
push
mov
adc
stos
mov
mov
xchg
cmpsl
jae
cmp
sub
dec
jp
sahf
das
and
scas
cmp
imul
ret
cwtl
xchg
or
xchg
push
out
inc
adc
insb
imul
mov
xchg
mov
ja
insb
stos
add
or
lahf
add
fsubs
int3
out
mov
mov
mov
mov
and
test
and
scas
push
sub
lcall
mov
scas
cld
lret
inc
sub
stc
mov
inc
sub
in
sbbb
fisubl
ret
push
es
mov
movsl
scas
sbb
and
jne
fisttps
imul
lds
fsub
out
mov
push
lahf
popf
jo
push
rorl
push
mov
or
aaa
inc
int3
sbb
imul
push
inc
cmp
cmp
dec
gs
mov
xchg
add
pushf
pusha
aad
outsl
ljmp
xor
repz
jecxz
scas
and
addr16
aad
cwtl
sbbb
shlb
mull
push
pop
clc
in
or
das
mov
jp
adc
subl
outsl
or
xorl
sbb
out
int
mov
jnp
push
data16
lahf
ja
call
xchg
cld
or
sub
fnstenv
in
inc
es
in
je
mov
jae
pop
ds
rcrl
xchg
shlb
in
outsb
out
xor
jmp
loop
pop
inc
xchg
inc
sti
imul
jns
addr16
adc
popa
data16
push
mov
scas
imul
xor
loope
mov
mov
int3
outsb
fnstcw
cmpsl
pop
pop
arpl
jp
pop
cld
ljmp
jp
or
jmp
inc
faddp
jo
push
scas
pop
cs
push
xchg
mov
mov
xor
ret
inc
jmp
sahf
jne
in
adc
bound
sub
push
out
cwtl
or
push
loop
mov
das
and
adc
inc
negl
cwtl
daa
imul
mov
repnz
hlt
ret
cmp
movsb
jmp
testl
lods
std
mov
ss
xor
xor
sbb
les
pop
cmp
cwtl
adc
and
inc
into
jle
insb
lahf
pusha
mov
lcall
adc
test
jae
loope
mov
imul
pop
insl
pop
jae
and
mov
xchg
movl
pop
jg
aad
out
scas
adc
mov
leave
das
cmpsl
jb
adc
ret
nop
mov
sbb
and
jno
sub
pop
popa
movsb
outsb
pop
add
mov
pop
sbb
xor
pop
fadds
addr16
addr16
fstl
bnd
xor
xchg
pop
insl
pop
popa
divl
fstpt
fistpl
cwtl
sbb
sub
sbb
adc
aaa
pop
jno
js
jmp
aam
psubq
cmpl
add
mov
dec
sub
mov
loope
pop
cmp
xchg
push
int
or
push
adc
or
xchg
or
inc
fldcw
sub
lods
pop
dec
jb
bound
roll
inc
js
test
insl
int
arpl
sub
add
shll
outsb
inc
and
or
gs
ficomps
and
loope
dec
repz
or
addr16
loopne
gs
xchg
rclb
out
push
fldl
push
outsb
out
inc
fldpi
add
sbb
jp
xor
movsb
cltd
push
or
stos
imul
xor
in
push
inc
sbb
outsb
mov
pop
mov
jo
sbb
das
dec
mov
fists
pop
mov
pop
enter
or
pop
inc
data16
into
js
iret
xchg
cmpsl
lret
mov
cmp
cmp
cld
ljmp
and
or
lods
into
loope
out
dec
mov
push
push
movb
gs
lea
pop
adc
out
mov
rclb
pop
test
jge
test
cmc
arpl
stc
xchg
jmp
sarl
int3
out
imul
into
pop
rcr
jae
push
movsb
add
les
aam
sbb
mov
popf
lret
js
xchg
xchg
lret
inc
loope
inc
inc
shl
or
aas
cmpsl
adc
out
into
in
inc
cmpsl
mov
push
or
mov
popa
xchg
mov
pop
or
and
cli
test
mov
daa
je
into
rclb
ret
mov
bound
mov
lret
ljmp
pop
inc
aad
scas
sub
adc
icebp
fcoml
mov
inc
jo
std
in
xchg
or
mov
bound
mov
or
ds
xchg
mov
frstor
mov
dec
stos
js
outsl
sub
push
xchg
push
or
mov
push
add
sarb
into
inc
mov
test
aam
pop
pop
imul
sbb
out
inc
mov
pop
in
les
adc
mov
sbb
push
loopne
mov
dec
cld
or
add
push
es
andb
stos
or
xchg
dec
add
dec
test
pop
adc
mov
sub
xchg
sarb
cmpsb
mov
mov
xchg
mov
sbb
iret
sub
popf
andb
cs
cld
cmp
adc
lds
sub
test
ss
sub
out
sub
jno
jno
fdiv
out
mov
and
lret
jg
sub
mov
call
lds
adc
pushf
out
or
clc
ss
repz
xor
sub
popa
sar
adc
sahf
cltd
out
scas
jp
or
stos
mov
test
lcall
jno
movsb
jns
xor
scas
arpl
dec
sub
enter
and
aam
pusha
lahf
push
and
insl
out
repz
movsb
xchg
cmp
cmp
mov
imul
add
and
arpl
xchg
dec
xor
test
dec
mov
adc
adc
out
xor
and
icebp
jp
adc
sub
in
xchg
inc
and
cmpsl
je
clc
cld
add
cmp
dec
shl
mov
call
push
sub
mov
arpl
aad
mov
out
ja
jbe
out
pop
xchg
shll
push
aaa
dec
test
cmp
push
clc
mov
lods
fnstenv
cld
and
jns
or
jo
push
pop
stc
push
mov
fsts
cmpb
ds
sbb
push
adc
cs
sbb
enter
loope
cmpl
cmp
xor
mulb
in
lret
xchg
orl
dec
mov
loopne
gs
cmp
push
vpunpcklwd
iret
cmp
test
sub
inc
inc
lods
dec
test
push
cmp
loopne
jo
call
jp
in
in
hlt
inc
sbb
sub
pop
pop
xchg
sub
mov
inc
shr
fistl
sbb
pop
enter
mov
sbb
pop
or
pop
popf
xchg
mov
gs
fsubrl
xchg
and
lods
cwtl
xlat
fstps
repnz
and
sbb
jmp
stos
pop
or
cwtl
or
sub
pop
or
sarl
xor
sub
lods
fucomi
add
lcall
jnp
add
mov
enter
nop
cmpsl
mov
and
mov
jg
or
outsl
mov
dec
js
adc
push
pushf
rclb
cmp
add
add
adc
repnz
mov
dec
jg
js
idiv
popa
mov
repz
icebp
shll
push
jnp
mov
ds
gs
jmp
sub
add
ret
andb
dec
ja
xor
dec
or
call
cmp
test
data16
repz
out
mov
mov
inc
push
and
loop
mov
fcompl
cmp
mov
dec
sbb
mov
fmuls
or
outsb
mov
push
mov
shll
sbb
cwtl
insl
rcrb
test
xor
xchg
push
add
mov
icebp
mov
jle
and
das
dec
add
sub
rcrl
cmc
ja
pushf
mov
btsl
pop
pop
hlt
scas
rclb
adc
mov
scas
aas
or
dec
das
mov
clc
jae
ss
mov
loop
pop
or
pop
test
pop
sub
mov
sbb
jecxz
cwtl
fdivl
aam
in
cmpsb
pop
movsb
andl
cmc
inc
xchg
mov
xchg
cltd
in
daa
movsb
sub
enter
ret
daa
mov
mov
add
mov
mov
lcall
adc
mov
dec
pop
movsl
push
lds
inc
mov
movl
xlat
sbb
adc
add
movsl
push
leave
enter
add
jmp
jmp
fadds
pop
notl
ljmp
shl
dec
cmc
ds
jnp
inc
dec
sbb
mov
inc
addr16
sub
dec
jbe
lds
mov
add
pop
mov
mov
in
cmp
cltd
cltd
pop
cmpl
cs
cmc
andl
in
sti
repnz
test
jp
in
adc
idiv
mov
in
ja
repz
ficompl
adc
cmp
loopne
roll
fstp
add
nop
xchg
outsl
sub
repz
iret
mov
pop
cmp
add
sahf
add
push
xor
in
cmp
cli
fistps
les
add
or
jmp
jae
pop
push
outsb
cltd
add
shlb
fxch
data16
cs
dec
cs
iret
sub
test
xor
dec
aaa
mov
rcrl
sti
outsb
cmc
mov
lds
pop
cwtl
and
xlat
sahf
push
ds
push
fnstenv
add
shrb
jg
sub
pop
mov
call
xor
jnp
push
pop
test
lcall
outsl
dec
xchg
jns
bound
mov
xchg
mov
jnp
fidivrs
jmp
dec
mov
lahf
mov
out
sbb
fucomip
or
sbb
ss
and
out
cmp
jg
xor
std
xchg
sbb
pop
jae
emms
stos
or
cwtl
push
pop
call
adc
dec
test
jns
push
xchg
pop
sub
fidivs
fistps
jno
jnp
sbb
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
jmp
aaa
dec
cmpsl
sbb
xchg
and
add
int
bound
add
jmp
in
ljmp
xchg
in
xor
cli
and
push
fmull
add
loopne
popa
mov
jno
scas
ret
fs
jl
xlat
push
dec
sahf
push
out
dec
dec
shl
dec
jno
mov
and
fldt
mov
test
pop
ficoml
jmp
jp
pop
dec
mov
je
es
mov
cmp
add
xchg
lods
jo
cwtl
add
push
ljmp
sti
and
movsl
fwait
adc
fs
jo
lods
loope
ss
test
addr16
test
sub
fmul
fldenv
popa
push
or
out
push
push
push
push
xor
subb
xor
sbb
ret
sbb
cmp
fstpl
xor
cwtl
popf
repnz
xor
fisubs
xchg
in
mov
mov
and
add
sarl
xor
jnp
mov
cmp
pmuludq
cld
jno
sbb
testb
inc
cltd
aam
or
je
repz
cltd
xor
test
inc
and
jnp
pop
lods
mov
shlb
jne
jl
or
gs
aas
jae
pop
and
lahf
lret
dec
push
push
fnstsw
mov
ja
std
ret
xchg
or
or
ljmp
inc
xchg
sbb
aas
call
in
and
jmp
push
dec
push
insl
nop
outsl
push
or
lods
loope
dec
fnsave
repz
jmp
or
stc
imul
jns
movsb
test
mov
mov
test
inc
adc
iret
adc
or
in
int
cwtl
sahf
mov
addr16
dec
or
jb
mov
popf
sbb
out
adc
jbe
cmp
in
jne
cmp
sub
ljmp
cmpsb
dec
scas
cmp
xchg
outsl
pop
xchg
or
push
ret
data16
add
sub
hlt
stos
inc
ljmp
out
cltd
ja
dec
scas
call
test
sub
test
jecxz
nop
or
add
push
ss
lock
fiadds
dec
pop
add
popa
xchg
push
sbb
push
icebp
sbb
xchg
sub
sbb
in
jbe
dec
mov
add
ret
push
es
xchg
mov
mov
push
mov
faddp
and
jge
xchg
xor
cs
sti
cmp
lret
add
cmc
pop
adc
lahf
aaa
nop
jge
sbbl
popf
cld
lods
add
stos
dec
or
push
pop
sbb
mov
scas
pop
dec
add
dec
add
mov
hlt
aad
dec
fimull
pop
sub
xor
dec
out
jecxz
and
push
inc
jp
in
sbb
mov
and
stc
sbb
call
sub
rcrb
or
cmpsl
aad
in
scas
leave
push
lahf
mov
mov
pushf
mov
cs
pop
cmpsl
mulb
push
dec
loope
popf
xlat
outsb
jns
inc
jl
dec
add
sub
pop
aad
mov
fildll
aad
mov
xor
adc
xchg
lds
dec
mov
xchg
pop
sbb
push
stos
mov
mov
xchg
pop
jmp
adc
xchg
cmp
dec
jmp
pop
mull
mov
popf
push
sbb
mov
jg
xlat
lcall
and
fs
mov
sub
mov
sbb
sti
sub
push
sbb
inc
push
add
orb
pop
mov
push
mov
aas
mov
in
xor
mov
jb
fdivl
jae
xor
or
mov
cmp
pop
mov
mov
pop
xchg
jbe
jnp
pop
mov
gs
arpl
sti
les
add
cmp
cmc
fcompl
out
lock
mov
fcmovbe
loopne
es
ss
stos
sbb
lret
xchg
dec
jmp
stos
xchg
xchg
sti
in
jne
imul
xor
lahf
dec
and
loope
in
in
into
push
jg
push
mov
mov
cmp
outsl
inc
push
jne
clc
stos
enter
dec
data16
dec
jp
loope
push
or
and
sub
call
setle
adc
xchg
stos
cmpsb
loope
fdivrs
dec
xchg
test
ret
lcall
xchg
loopne
pop
dec
leave
cld
jbe
push
adc
outsl
xchg
and
movsl
add
dec
mov
je
mov
movb
stos
add
jnp
loopne
and
ss
bswap
mov
repnz
jo
in
xchg
subl
dec
aas
inc
rcll
adc
in
cmpsl
repnz
pop
mov
jle
arpl
lret
stos
or
or
xor
mov
jge
seta
add
sti
mov
nop
bound
imul
push
popa
cmp
cmp
lods
enter
mov
out
push
jnp
in
sub
and
jmp
ss
aam
es
lret
js
xchg
pop
dec
out
ret
cmp
mov
or
cli
in
lahf
xchg
pop
jno
iret
imul
in
inc
jb
mov
nop
dec
addr16
pop
xlat
sbb
pop
sbb
out
xchg
and
daa
jmp
and
cmp
xor
pushl
enter
out
test
mov
and
leave
mov
cmp
test
pushf
dec
pop
les
mov
cltd
inc
adc
xor
mov
mov
cmp
inc
negl
sub
dec
jmp
mov
aaa
pop
jno
movsb
push
xchg
mov
xchg
push
popa
inc
jb
pop
push
mov
mov
addr16
mov
mov
sub
inc
or
loopne
or
push
or
rorl
and
xchg
add
movsb
in
sbb
xchg
imul
test
fstps
adc
push
push
inc
pop
scas
sbb
push
ljmp
sbb
sub
mov
inc
call
sti
test
aaa
rcr
mov
pop
cmp
aam
je
into
dec
ret
sar
inc
push
mov
ds
ljmp
stos
inc
ret
jg
int
mulb
dec
int3
add
movsl
popf
shll
xorl
sti
gs
lret
sbb
cmp
popa
in
mov
dec
ret
add
out
lods
loopne
mov
sub
pop
jo
lcall
xor
jl
or
dec
xor
outsb
sub
mov
xor
sub
and
ret
and
or
cmp
xlat
mov
pushf
sub
jge
shlb
lods
out
add
repnz
pop
adc
push
aad
xchg
and
mov
scas
jmp
cwtl
test
and
popa
add
sbb
or
xorb
ror
imul
out
push
das
leave
jo
lret
push
insl
icebp
movsb
stc
mov
cmp
jne
int
imulb
repnz
lock
push
xchg
xor
jae
sahf
scas
mov
bound
push
stos
es
ficomps
xchg
add
xor
leave
sar
js
add
cmp
sbb
xchg
xchg
sub
stos
or
stos
dec
mov
cmpb
mov
cltd
sbb
jne
not
mov
push
pusha
cmp
and
cmp
xchg
rorl
jae
pop
xchg
gs
sub
iret
mov
dec
testl
shlb
mov
gs
fildl
fcomp
cmp
xchg
and
jmp
out
xchg
mov
dec
cmp
pusha
std
imul
jae
sti
and
lcall
sti
stc
and
inc
stos
shlw
clc
pop
adc
mov
pop
pop
xor
dec
mov
es
call
xor
mov
aad
out
adc
ret
inc
movsb
xchg
add
out
les
sbb
loopne
clc
mov
std
sbb
adc
xchg
pop
and
shll
dec
jl
jp
mov
xchg
lcall
adc
js
pop
out
sub
dec
dec
daa
lret
adc
inc
xor
pop
add
movsb
sbb
xor
and
xor
loopne
insl
sahf
cltd
subl
sbb
movsb
mov
or
lock
je
imul
push
icebp
pop
pop
pop
sub
and
pushl
mov
popl
inc
xchg
xor
popf
out
add
test
imul
mov
cld
add
lcall
push
dec
repz
mov
movsl
dec
test
imul
sbb
les
inc
dec
fsubr
cwtl
call
fsubrs
xor
or
jg
ja
dec
dec
inc
or
xor
dec
lds
pop
xchg
loopne
xchg
push
iret
mov
out
rolb
jp
adc
push
xor
jl
popa
stos
mov
xor
test
jae
dec
pop
leave
xchg
push
frstor
lods
enter
dec
insl
in
pusha
sarb
sub
lahf
flds
pop
dec
test
push
push
in
fprem1
sarl
mov
jo
sbb
fs
mov
popa
mov
stos
push
mov
movsl
mov
out
pop
push
nop
sub
ljmp
adc
test
sahf
pop
mov
ljmp
ret
jge
xor
mov
aam
pop
cmc
test
mov
add
shr
leave
stos
pop
idivl
jb
ret
push
pop
pop
pop
lea
pop
xchg
jb
sbb
mov
or
arpl
mov
dec
imul
and
dec
sti
movsl
jae
out
loope
jmp
mov
xor
or
loope
xchg
push
pop
or
sub
clc
inc
stos
jp
int
fldl
pop
fcmovnu
cmpb
out
int3
pop
imul
dec
daa
outsb
pop
xchg
je
jno
adc
cmpsl
push
jmp
push
or
adcl
scas
mov
add
sbb
inc
sbb
adc
and
loopne
in
xchg
and
mov
adc
sub
mov
mov
cmp
cmp
scas
push
cmp
push
dec
test
addr16
push
addl
sahf
add
popl
sbb
lret
outsl
in
into
arpl
or
repnz
mov
sub
cmp
jb
push
adc
xchg
ret
xchg
mov
je
ss
test
ret
into
or
mov
xlat
mov
repnz
xchg
push
sbb
xchg
mul
out
push
add
ret
ds
add
call
orb
out
lds
mov
mov
js
out
or
mov
cwtl
sbb
cmp
add
imul
ds
sbb
add
or
mov
push
test
dec
push
int
cmp
mov
pop
xchg
lahf
cmp
ja
add
gs
mov
out
xor
inc
push
jnp
pop
ret
mov
pop
sarl
mov
push
stos
add
push
cld
mov
ss
inc
adc
add
daa
or
xchg
into
das
out
xor
popa
movsb
cmp
pop
shrd
idivb
in
push
ficoms
leave
jp
jle
je
sti
into
cmp
sub
loopne
mov
addr16
aad
push
sbb
sbb
in
negb
insl
test
pop
out
aad
mov
push
jg
dec
loope
adcl
push
outsl
fwait
pop
or
daa
adc
mov
call
add
and
push
xchg
daa
xlat
inc
sub
loopne
out
jl,pt
xor
mov
xchg
cmp
dec
insl
jp
and
dec
mov
icebp
sbb
and
frstor
push
or
adc
xchg
inc
ret
inc
mov
andl
jg
or
stos
inc
xor
mov
mov
lock
mov
prefetchnta
push
into
sbb
sub
enter
lds
std
ret
xor
jb
inc
pushf
mov
mov
ret
insb
sub
rcrl
test
movsl
and
inc
xor
ficomps
or
mov
mov
fisubrl
push
dec
lret
scas
lds
ja
add
testb
mov
fwait
andb
addb
mov
in
mov
aam
rol
xchg
push
call
pop
and
sub
outsb
jae
ss
popa
jno
test
into
testb
enter
fs
push
jg
je
cmp
fiaddl
mov
lds
fwait
dec
adc
pop
jge
movsl
add
inc
negl
lock
repz
push
imul
imul
pop
jb
and
xlat
outsb
xor
cmp
mov
or
and
ss
jge
loopne
mov
pusha
jae
popa
push
and
lret
cmp
xor
pop
testb
mov
add
fsub
dec
cmpsl
je
aas
jb
push
pushf
mov
pop
pop
or
cmp
dec
insl
lock
mov
stos
add
push
les
in
fstl
dec
add
loope
mov
pop
xor
js
cmp
sub
jp
loopne
aaa
dec
jmp
gs
cmc
inc
or
outsl
jp
repnz
jge
and
leave
mov
jno
insl
int3
mov
out
inc
cwtl
shlb
iret
lea
aam
pop
add
adcl
xchg
data16
iret
or
jp
popf
sub
jmp
xchg
push
lahf
cmp
lret
jnp
push
mov
sbb
ja
jl
xor
sbb
clc
arpl
mov
in
push
in
out
sbb
and
cmp
jns
push
in
adc
sti
ljmp
cld
mov
cmpsb
jns
in
bound
vmovupd
xchg
add
pop
testb
xchg
mov
mov
dec
jne
das
sbb
dec
ret
cmp
sub
jl
cmp
icebp
cld
or
push
xchg
sbb
stos
cwtl
leave
mov
fstpl
lods
dec
pop
add
shl
mov
lret
pop
test
dec
popf
cli
pop
mov
gs
push
jmp
sub
mov
fidivrs
adc
pop
addr16
out
sarl
sub
cmpsb
mov
sbb
dec
roll
cltd
stc
in
mov
add
mov
cmp
cmpsb
sbb
mov
cmp
sub
sub
cmp
mov
or
jecxz
popa
lds
stos
clc
repnz
leave
enter
pusha
cli
mov
int
sbb
push
xchg
pop
dec
xchg
adc
jle
mov
stc
int3
adcl
clc
arpl
sub
sub
mov
pop
add
or
mov
pusha
push
inc
add
mov
mov
xchg
mov
sbb
xchg
jo
rorl
inc
test
mov
shlb
jecxz
lods
out
data16
and
fs
sub
lret
data16
pop
insl
out
rsqrtps
sti
jmp
lret
sbb
fisubrl
fsubl
mov
jno
lret
daa
mov
into
lods
pop
push
cmp
adc
jmp
cs
psubq
push
add
jle
cmp
adc
add
les
xor
mov
or
std
sub
mov
outsl
adc
ljmp
xor
cmp
adcb
sti
insl
inc
cmpsb
aaa
jb
test
or
inc
and
out
lods
fstl
into
fmull
repnz
push
add
mov
dec
notb
add
or
movsl
nop
mov
icebp
setne
mov
popf
loopne
aam
push
push
push
fimull
pushf
js
fsubr
sub
and
mov
cmp
mov
mov
ret
xchg
and
push
clc
shlb
pop
jl
dec
dec
jnp
xchg
das
xchg
inc
mov
fldcw
mov
push
cltd
push
or
sub
dec
es
mov
pushf
xchg
sahf
clc
sbb
movsl
cmpsl
out
mov
mov
mov
js
lret
mov
test
iret
inc
mov
mov
xchg
adc
incb
aas
sbb
mov
mov
jbe
sarl
mov
fisubrs
mov
jo
mov
pushf
jle
int
mov
test
out
popa
in
adc
push
stos
xor
sub
pop
xchg
or
sbb
xorl
mov
push
test
cmc
sti
add
sbb
mov
adc
mov
scas
and
push
mov
mov
xchg
add
das
cmp
pushf
sub
pop
mov
xor
xchg
push
mov
cltd
adcl
aas
add
shlb
jp
xchg
xchg
imul
das
xor
ret
xchg
adc
stos
lret
cld
or
sarl
inc
stos
sub
xchg
movsl
push
cmpsl
inc
cmp
jmp
mov
xchg
xchg
out
ret
sub
fidivl
mov
ljmp
cmpsl
lret
mov
es
test
dec
inc
hlt
and
bound
and
and
push
mov
fs
cmp
push
cmp
and
fadds
push
in
mov
roll
xor
fwait
inc
int3
add
cmp
cmpsb
jg
sahf
cltd
addr16
es
xchg
fnstcw
jns
ljmp
mov
testb
imul
mov
jns
pop
cld
mov
or
das
mov
xor
test
fsubs
dec
test
arpl
cmp
or
aam
int3
out
aaa
jno
sbb
dec
push
int
add
add
scas
mov
imull
data16
movb
andl
in
jns
sarb
outsl
lods
out
mov
ret
mov
rcrl
mov
in
in
mov
mov
outsl
jo
cld
es
sbb
jl
ljmp
lahf
call
daa
jp
mov
lcall
dec
xchg
pop
xor
xlat
and
in
outsb
jns
cmp
xor
push
adc
push
icebp
insb
cli
cs
nop
cltd
mov
jmp
clc
imul
cwtl
dec
dec
dec
in
add
pop
dec
insl
int3
pop
out
push
scas
and
jne
scas
ss
push
das
aaa
xlat
je
cmp
sub
mov
add
mov
mov
lret
out
xchg
inc
mov
lret
inc
repnz
jno
mov
fstpl
outsl
iret
aam
mov
xchg
cmpsl
sub
cwtl
jnp
or
xchg
notl
daa
jb
push
jge
stc
loop
movsl
mov
fwait
ret
dec
inc
outsb
push
xor
mov
test
loope
testb
add
popa
lret
sub
push
and
mov
cmpsb
xchg
add
cld
cmc
js
in
jecxz
sub
pop
lret
xor
out
test
jmp
mov
and
sub
adc
cwtl
sub
shlb
lock
sbb
fcoms
xorl
xchg
sbb
inc
decb
lahf
add
icebp
pop
scas
sub
roll
int3
add
push
dec
mov
insl
mov
cmp
iret
fnstenv
add
or
sub
div
push
scas
scas
wbinvd
and
push
outsl
xor
cmp
lods
scas
jmp
neg
int
add
insb
ret
mov
out
mov
fimuls
mov
push
dec
aad
andb
and
fistpll
aas
fcompl
mov
push
fcmovne
mov
fs
cmp
lock
cmpsl
mov
inc
pop
mov
sbb
lret
sbb
bound
rclb
xor
mov
jecxz
mov
cltd
and
inc
xchg
fmull
jecxz
imul
mov
pop
fistpll
xchg
inc
sbb
ljmp
lea
aad
dec
adc
xor
rorb
and
rorb
setl
jmp
pop
add
mov
in
sbb
lock
mov
pop
inc
xor
outsl
lock
sub
loope
subb
and
dec
xor
xchg
push
pop
sub
fwait
call
pushf
mov
xlat
xchg
pop
mov
ss
rorl
ja
pop
movsl
jmp
lcall
cmp
ljmp
jno
inc
sarl
mov
sbb
and
imul
in
imul
fmull
outsl
mov
lods
sbbl
adc
clc
mov
pop
fisttpll
iret
mov
scas
pop
dec
sub
jns
jns
ljmp
adc
xchg
and
lds
or
jbe
or
out
fmulp
sbb
add
daa
add
or
xor
lahf
pop
inc
jo
push
stos
inc
fsts
mov
loopne
mov
cmpsb
mov
xchg
dec
outsb
mov
lret
mov
mov
dec
jae
repz
pusha
cmc
nop
jnp
push
ss
int
adcb
jae
fincstp
mov
dec
add
or
test
jg
popf
cs
mov
test
fldenv
fwait
jbe
pop
ljmp
lods
test
enter
adc
inc
or
lods
mov
stos
sub
rol
mov
xor
pop
jae
test
enter
jl
repz
inc
mov
mov
rclb
pop
xchg
imul
test
sbb
adc
pop
repz
hlt
icebp
stc
jns
xor
inc
push
das
cmp
jmp
sbb
xor
pop
and
inc
xor
nop
mov
in
jge
push
in
xlat
add
push
fnsave
jbe
jns
dec
ds
call
repnz
sbb
repz
lret
mov
addl
and
imul
lret
pop
addl
and
xor
sbb
dec
dec
loopne
test
sbb
shll
nop
lods
insl
adc
pop
xlat
adc
pushf
inc
sbb
fs
jnp
mov
pushf
rcrb
aam
push
push
pop
sbb
adc
jns
inc
into
fwait
add
inc
inc
pop
pop
mov
jmp
mov
leave
mov
jb
into
pushf
mov
add
mov
cmp
lea
mov
push
pop
and
scas
adc
shr
hlt
xor
sti
icebp
push
popa
hlt
inc
and
adc
xchg
mov
lret
and
rcrl
dec
arpl
mov
out
outsl
pop
popa
and
jge
push
out
pop
sub
push
pop
faddl
pusha
mov
pop
xchg
mov
cltd
jecxz
jge
nop
adc
push
pop
lcall
ss
lods
mov
lock
leave
or
ss
enter
adc
mov
fildll
sub
xlat
xchg
movsb
xor
dec
into
jbe
in
adc
cmp
std
shll
adc
or
clc
mov
jge
ret
add
mov
loope
cmp
loopne
int3
jmp
int
call
aaa
out
outsb
adc
jo
adc
adc
inc
dec
ds
and
rcr
mov
into
inc
scas
pop
inc
lret
push
xor
pop
push
lcall
daa
mov
shll
bsr
cmp
add
pop
pop
lea
push
out
mov
mov
xor
xor
cmp
push
sub
mov
js
pop
mov
jle
dec
aad
sbb
xor
and
mov
sub
or
adc
mov
sbb
fisubrl
pop
dec
cmpsb
into
inc
adc
test
lahf
lret
dec
cld
scas
cmc
xor
mov
pop
cmpsl
sahf
aam
push
cmp
sub
rolb
sahf
mov
and
mov
fstl
push
mov
mov
pushf
bound
repnz
pop
sub
lahf
push
mov
fildll
out
mov
adc
les
lods
popa
xchg
push
data16
adc
mov
jb
and
adc
add
sbb
lods
add
out
cs
dec
cmp
in
push
lahf
inc
loop
je
cwtl
dec
mov
add
xor
mov
sbb
mov
mov
rcl
das
aam
pop
leave
or
dec
dec
sub
push
adc
out
mov
push
cmpsb
fisttpl
cs
js
or
popa
pushaw
mov
adc
incl
aas
dec
xor
sbb
add
cmp
xor
sahf
add
pop
iret
sbb
xlat
dec
shl
jne
xchg
inc
jb
adc
sub
dec
add
cmpsl
ret
jle
and
loope
adc
lds
gs
mov
xor
push
stos
es
outsb
sub
loopne
cmp
aam
sahf
mov
insl
add
das
movsl
sbb
prefetcht1
and
xchg
call
enter
dec
mov
sbb
xor
iret
jge
bound
cmp
data16
push
test
aam
les
enter
sub
dec
dec
popa
jmp
cmpsl
jne
movsb
and
jbe
test
mov
mov
imul
lret
inc
aam
mov
xor
insb
enter
sub
sti
lret
mov
cmp
jnp
insb
pushf
cmpsl
lods
xor
add
in
mov
pushl
cmpsl
mov
hlt
push
push
or
dec
mov
cmp
ret
cmpsl
cmpb
push
sub
pop
push
push
xor
sub
or
mov
pop
jge
cmp
int
rdtsc
daa
push
rcll
je
pop
xor
popf
xchg
add
sbb
repnz
ss
fwait
ds
xchg
mov
pop
xchg
xchg
xorb
outsl
mov
mov
pop
adc
and
sub
push
stos
test
xchg
jbe
test
enter
xchg
add
sub
sub
nopl
repz
mov
xchg
mov
mov
cmp
iret
inc
jo
lock
movsb
or
push
imulb
mov
sbb
cmp
dec
mov
aas
ret
cmc
popa
push
iret
xlat
out
xchg
push
adc
std
test
dec
notb
add
cmp
test
push
or
insl
add
stc
sbb
or
int
ja
subl
pop
pop
aas
sub
cli
inc
flds
cmp
fldl2t
cmp
pop
int3
dec
out
arpl
sbbb
pop
pop
imul
inc
mov
mov
mov
mov
lahf
daa
cmp
mov
mov
jp
out
mov
sbb
xchg
adc
pop
orb
insl
pushl
pop
inc
push
insb
mov
mov
sbb
jle
sub
adc
int
popa
jle
int
cmpsb
pop
jl
or
pop
and
inc
xor
scas
mov
test
sub
lods
adc
and
stc
mov
fs
cwtl
lcall
incl
sub
mov
mov
mov
and
inc
fisubrs
imul
cmp
mov
dec
add
mov
inc
jle
push
daa
mov
inc
mov
xchg
inc
aaa
insb
xchg
sar
rcll
add
imul
and
jbe
inc
pushf
inc
mov
xchg
out
rcl
and
pushf
es
test
aad
scas
mov
push
repnz
data16
jb
lods
and
out
adc
push
or
inc
mov
sti
shrl
cmp
mov
adc
dec
pop
sbb
xor
ror
inc
rorl
addr16
repnz
sub
jle
ss
add
dec
fisubrs
jns
or
fistl
inc
dec
push
sub
jne
jne
and
std
sbb
cmpsb
std
push
adc
mov
repnz
rcl
add
fisubrs
repnz
mov
addb
mov
mov
jge
and
pop
jmp
std
lret
xor
xor
pusha
sbb
cmpsb
sti
dec
jo
popa
mov
lods
push
and
adc
and
xchg
mov
mov
dec
mov
ss
testl
mov
icebp
enter
add
xchg
sub
mov
push
stos
jle
filds
test
ret
add
loop
or
nop
sarl
pop
loop
in
div
mov
fisubs
cmovl
push
push
jns
xor
xchg
sub
in
dec
sbb
pop
repz
cmpsl
mov
xchg
dec
or
iret
cmp
mov
mov
add
leave
shrd
sti
adc
pop
imul
shrl
das
movl
cmpsl
and
mov
or
neg
int3
fdiv
out
outsl
mov
repz
mov
jle
cmp
ljmp
cmpsb
rorl
out
test
sub
sahf
mov
stos
xchg
or
gs
nop
and
repz
cld
das
and
rorb
rcrl
arpl
push
rorl
xchg
movsb
dec
sub
pop
aas
dec
outsb
cmpsl
int3
std
pop
enter
pop
mov
sub
and
mov
outsb
pop
mov
inc
mov
fwait
rolb
cmp
or
leave
cs
mov
jle
adc
in
mov
add
cmp
lock
les
mov
je
out
aad
imul
or
and
in
shufps
jge
lret
loopne
jp
insb
dec
mov
mov
sub
cmpl
int
enter
lds
inc
psubusb
mov
and
test
mov
jp
and
insl
push
fsubrs
sahf
mov
add
in
cmp
scas
push
lods
jae
pop
test
fistps
sarb
gs
and
bound
int3
mov
push
dec
loop
push
and
addb
lret
jp
mov
in
sbb
fmul
int3
outsb
imul
pop
loop
or
icebp
pop
lret
enter
dec
addr16
shlb
dec
pop
leave
xchg
loope
insb
mov
sub
out
stos
mov
sub
mov
cmp
js
jle
cmpsb
lods
mov
push
test
mov
jbe
mov
shrb
scas
subb
mov
sub
xor
xor
cmp
pop
and
jns
dec
pop
leave
jecxz
idivl
test
adc
lcall
jmp
out
ja
lcall
imul
scas
sub
sahf
fwait
or
cmp
shll
cmp
fwait
fs
ror
xor
test
rorl
add
mov
mov
pop
leave
ret
pop
or
repz
sti
ja
stos
mov
cs
mov
add
into
mov
or
cli
mov
into
addb
or
xor
dec
je
jge
arpl
pop
pop
inc
insl
jno
inc
stc
push
mov
inc
or
stos
sahf
add
mov
mov
push
cmp
push
test
adc
mov
sti
pop
repnz
inc
iret
sbb
ficompl
sbb
stc
xchg
lock
or
mov
das
shlb
push
cs
ljmp
lret
xchg
inc
cmp
cmp
cltd
xor
out
insb
sahf
sbb
mov
fsts
push
pushf
imul
test
xor
icebp
pop
test
jb
add
sbb
mov
add
add
add
add
sub
adc
cmp
out
pop
xchg
push
pusha
xchg
add
xchg
or
lcall
scas
xor
jecxz
mov
leave
fdivl
pop
stc
test
nop
mov
and
loop
add
mov
flds
popf
mov
xchg
imul
fst
fs
pop
push
jnp
repnz
lahf
mov
int3
enter
cld
shll
ljmp
lock
in
xor
mov
imul
and
int3
iret
aad
sbb
inc
stc
repz
pop
fists
pusha
mov
jae
sbb
inc
sbb
inc
insl
jnp
mov
ljmp
add
add
add
add
sub
sub
addb
xchg
add
cmc
cmp
mov
mov
sbb
mov
jo
cmp
sbb
push
in
mov
xor
sbb
shl
movsl
push
lods
cmp
xlat
sbb
cld
jg
sub
sti
sbb
frstor
loop
fsubr
sbb
fsubr
repnz
mov
mov
sub
xchg
stc
enter
es
push
in
cmp
xchg
notb
pusha
je
xor
add
dec
daa
test
in
inc
dec
adc
roll
cmp
testb
xchg
jp
push
rorl
stos
loop
repnz
add
add
add
and
aam
aam
ljmp
je
dec
push
jno
ret
add
mov
lea
out
rclb
or
js
sbb
sub
jno
enter
pop
mov
xchg
hlt
adc
int3
shll
or
lret
and
sbb
int3
mov
lea
and
sub
lods
and
inc
push
push
outsb
lcall
ror
add
xchg
and
push
xchg
je
adc
ds
push
into
mov
sub
test
adc
sbb
inc
outsb
ficomps
jge
jg
sbb
and
jb
stos
stc
add
aaa
push
enter
outsb
adc
cmp
mov
cmpsl
and
movsbl
adc
add
add
add
mov
sti
cmpsl
mov
dec
mov
jae
add
mov
add
in
popf
shr
sarl
mov
mov
fidivl
or
repnz
add
and
inc
fisubs
pavgw
lds
lea
stos
lods
mov
sbb
mov
adc
mov
nop
pop
push
add
sbb
lret
push
stos
sbb
pop
pop
repz
cltd
test
dec
push
lock
cmpsl
out
sub
pop
iret
sub
xchg
xchg
scas
loope
stc
fdivp
sub
sti
sub
push
dec
enter
sti
sub
dec
mov
pop
iret
mov
fwait
adc
roll
adc
add
add
add
add
out
lods
cmp
stc
stc
loop
ljmpw
mov
add
push
imul
pop
push
stc
xor
sbb
sub
loopne
cmp
xor
shll
lret
xchg
in
sarb
fistpl
or
mov
popa
sub
out
pop
in
jmp
popa
insl
pusha
mov
mov
sbb
mov
mov
xchg
mov
or
cmp
jl
adc
add
jp
lock
and
and
jbe
pop
popf
add
stc
adc
mov
inc
movsl
fidivl
mov
in
push
push
movl
push
stos
shrl
add
add
push
xor
gs
aaa
push
mov
add
mov
add
jg
mov
mov
int3
xlat
jg
negl
std
or
sub
je
cwtl
lds
add
scas
dec
pop
lock
dec
call
test
stos
test
daa
cmp
std
sub
dec
sti
mov
cmpb
xor
jo
pop
dec
sub
movsb
gs
std
sub
test
mov
nop
pop
pop
mov
outsl
les
ret
imul
jbe
jg
dec
dec
inc
pushf
inc
fwait
inc
sbb
mov
lods
fildll
insb
cmpsl
and
dec
xchg
inc
in
push
lahf
or
popf
fcmovbe
pop
loopne
push
mov
add
add
add
mov
push
adc
cwtl
out
ret
lahf
mov
add
mov
add
insl
push
aas
xchg
cmpsl
insb
inc
cmp
inc
jge
push
in
shlb
lds
lea
push
sub
dec
loopne
daa
fistpll
adc
xchg
in
je
in
cmpsb
ficomps
fisubrs
inc
cli
fucomp
mov
mov
mov
js
rcll
mov
cmp
aaa
jae
mov
xor
imul
pop
inc
push
ret
mov
cmpl
xchg
mov
inc
pop
mov
inc
lds
push
sti
out
cwtl
add
pop
adc
scas
cmpb
adc
dec
jo
dec
mov
leave
push
stos
sbb
out
in
mov
shrb
pop
and
and
add
add
add
dec
inc
sub
das
jle
jg
imul
aas
sti
dec
dec
lods
add
mov
add
mov
vpaddb
or
inc
jge
and
insl
rcl
xchg
daa
xchg
insl
int3
xchg
inc
mov
cli
cmpsb
xchg
psubsw
nop
jge
loope
mov
test
divb
repz
pop
xchg
repz
dec
jmp
fcmovbe
stos
fisubs
dec
testb
push
in
and
pop
int3
outsl
inc
dec
pusha
lret
sub
xor
cmp
and
jl
xlat
test
insb
dec
sbb
mov
mov
rcrl
xlat
jp
adc
jecxz
push
inc
clc
add
xchg
lahf
jo
ficoms
inc
cwtl
add
add
add
add
and
mov
mov
shll
lods
add
mov
add
or
cmpsb
cmp
les
cmp
movsl
imulb
mov
xor
test
fsubs
paddd
testl
fadds
xchg
lods
push
push
jno
sti
xor
enter
and
dec
rcrb
cld
ja
adc
mov
pop
inc
clc
movsl
imulb
aad
or
scas
xor
adc
fildl
xchg
aas
pop
xor
or
imul
mov
or
test
mov
jne
adc
clc
or
fsubs
adc
das
bound
add
add
add
ret
or
ret
lods
sub
mov
mov
mov
add
xchg
outsl
in
cmp
popf
jne
push
inc
mov
rorl
jge
xor
dec
imul
or
into
jbe
scas
xchg
mov
movsb
movsb
push
std
add
dec
fistpll
mov
cli
or
pop
insb
mov
in
xchg
sub
adc
gs
pop
adc
xchg
ljmp
cld
sbb
int3
gs
xor
inc
loope
aam
xchg
lods
pop
repz
xchg
popf
int
add
cmpsb
out
dec
outsl
stos
stos
push
mov
mov
add
xchg
push
aas
and
out
mov
inc
mov
ret
mov
mov
outsl
mov
mov
add
add
add
fld
add
ror
outsl
clc
shlb
xchg
inc
into
jp
add
pushf
add
add
inc
lods
mov
shl
and
xor
movsl
mov
mov
aaa
adc
in
mov
jne
out
mov
test
jl
repnz
mov
mov
lock
add
mov
fists
into
or
add
xor
jnp
adc
popa
add
adc
out
jmp
sub
jbe
push
or
test
jae
aaa
test
shl
stos
mov
stos
outsb
mov
pushf
testl
cld
enter
add
add
inc
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
jo
add
inc
add
jo
add
inc
add
jo
add
inc
add
jo
add
inc
add
addb
addb
addb
addb
addb
addb
addb
addb
data16
jp
jbe
ja
js
jno
arpl
inc
dec
outsl
pop
inc
jb
jns
inc
pop
dec
add
add
insb
inc
add
add
mov
jns
xor
dec
cmp
dec
js
cmp
dec
inc
dec
jae
inc
dec
xor
dec
pop
pop
pop
push
cmp
dec
xor
dec
cmp
dec
js
cmp
dec
inc
dec
mov
dec
xor
dec
pop
insl
pop
bound
dec
jns
xor
dec
cmp
dec
mov
dec
inc
dec
pop
jge
jb
subb
xchg
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
lea
outsl
xchg
outsb
xchg
jle
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
popf
pop
xchg
outsl
mov
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
lods
pop
mov
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lahf
dec
cmp
dec
inc
dec
pop
mov
outsb
ret
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lods
dec
cmp
dec
inc
dec
pop
int
ret
outsb
sarl
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
fstpl
outsl
loop
jecxz
repz
aas
dec
lea
dec
lahf
dec
cmp
dec
xor
dec
pop
in
pop
loop
repnz
repz
jns
jle
jns
cmp
jg
xor
dec
xor
dec
cmp
lods
dec
cmp
dec
inc
dec
pop
or
outsb
adc
jns
aas
dec
add
hlt
rolb
call
aam
add
inc
add
aad
add
inc
add
aam
add
aam
add
add
aad
add
mov
inc
add
inc
add
inc
add
inc
add
add
inc
add
or
cmp
sbb
orl
add
cmp
ds
add
inc
imul
in
incb
aas
cli
mov
add
xchg
pushf
clc
mov
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
ljmp
add
jbe
mov
pushf
clc
sbb
push
pop
es
add
in
inc
add
or
mov
inc
add
pushw
addr16
pushw
push
es
inc
add
dec
cmpsb
dec
lahf
dec
movsb
dec
insl
dec
bound
dec
add
cltd
dec
pushf
dec
fwait
dec
insl
dec
bound
dec
scas
dec
lods
dec
lahf
dec
mov
dec
xor
add
dec
test
dec
fwait
dec
xor
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
jae
jo
jno
jbe
ja
je
jne
mov
mov
lods
jge
jge
jns
mov
insl
enter
jb
test
hlt
test
test
fnstenv
mov
push
or
xlat
out
add
scas
adc
jge
fidivs
leave
hlt
cmpsb
cmp
mov
cmpsb
and
and
cmc
enter
adc
jno
jp
fcom
inc
add
adc
imul
insb
push
imul
push
insb
inc
push
inc
jo
dec
dec
pop
jp
jbe
pop
jo
inc
push
jb
inc
je
inc
jae
dec
gs
inc
push
jno
ja
dec
dec
dec
inc
jno
jae
dec
inc
inc
inc
push
dec
insb
dec
jbe
pop
jbe
inc
fs
push
inc
add
inc
outsb
imul
push
push
push
jne
insl
push
push
jo
addr16
pop
add
push
pop
inc
inc
outsb
popa
imul
jne
dec
add
bound
dec
ja
dec
inc
inc
push
add
je
bound
dec
bound
pop
outsl
push
inc
gs
dec
js
inc
js
arpl
add
add
add
jb
outsl
pop
dec
push
dec
jns
js
outsb
pop
jae
push
arpl
push
push
je
addr16
dec
inc
insl
inc
inc
inc
arpl
push
inc
popa
push
dec
imul
push
push
imul
dec
jns
push
inc
jo
imul
fs
inc
push
push
ja
jp
push
arpl
dec
dec
data16
imul
dec
cmp
dec
lods
out
mov
js
lahf
negl
clc
xchg
add
mov
add
insl
dec
ss
xlat
cli
dec
in
and
jge
outsl
lods
adc
aad
adc
pop
inc
and
daa
mov
insb
xchg
notb
popf
fcomip
push
sahf
adcb
xor
pusha
sarb
sub
sub
inc
jne
fists
dec
mov
push
xchg
adc
xor
mov
adc
ss
mov
push
mov
push
ja
push
leave
xchg
inc
lcall
xchg
pop
mov
mov
mov
xchg
pop
mov
cmpsb
ljmp
out
xlat
cmp
xor
mov
pop
jg
mov
fcomps
pop
cmp
int3
adc
add
add
add
sub
cli
jl
xlat
push
pop
push
andl
add
scas
sti
popf
mov
data16
in
int
out
pop
outsb
pushf
sub
mov
scas
mov
add
ss
imul
cmp
std
clc
sub
cmp
movsb
gs
repz
outsl
xchg
jle
mov
xchg
sbb
das
and
pushf
sub
into
int3
addl
jmp
fsubs
push
pop
popf
stc
push
push
rcr
xor
mov
cmp
divl
mov
sbb
outsl
sbb
sbb
cmp
pop
js
or
sub
fiadds
xchg
popf
sub
sahf
add
add
add
add
add
stos
pushl
xchg
push
repnz
cwtl
add
mov
add
jmp
mov
pop
into
js
in
push
jl
push
cmp
bound
stos
sbb
aad
adc
in
lods
xor
sub
jg
dec
push
jns
lods
sbb
xchg
mov
ja
xchg
add
and
push
adcb
fidivrs
loop
adc
and
lock
mov
and
paddsw
jns
jg
int3
xor
shlb
shl
xor
pop
adc
fdiv
loope
jae
nop
das
xor
adc
fcmovnu
and
xchg
mov
insl
scas
pop
mov
dec
scas
push
shl
add
add
add
add
cmp
in
fimuls
into
mov
add
or
stos
insl
push
push
xchg
mov
mov
mov
enter
fcoml
pop
push
out
subl
bound
mov
dec
jnp
xchg
jecxz
jmp
adc
jae
jg
decb
sub
mov
jnp
ja
movsb
in
adc
push
subl
lock
xchg
gs
dec
dec
xor
nop
mov
out
fildl
arpl
jl
divb
push
or
mov
sub
and
and
add
jp
out
sbb
xchg
mov
out
jnp
lahf
adc
leave
into
xchg
int3
add
push
add
add
add
add
mov
sbb
std
negb
sub
mov
add
cltd
add
mov
add
xor
and
lret
loope
mov
popa
or
mov
or
xor
push
dec
jae
cmp
mov
add
cmpsl
sbb
jae
add
push
sar
call
loope
mov
sbb
in
jg
std
push
sub
icebp
adc
adc
cmp
fcmovnbe
gs
adc
outsl
adc
cmp
cmp
jne
pop
addr16
cmp
mov
or
flds
js
sub
inc
adc
out
mov
cmp
xchg
nop
cmp
aas
call
inc
call
dec
push
lods
add
add
add
add
xor
jb
inc
mov
mov
lcall
push
movsl
push
xor
jno
das
rcr
out
sub
jno
jo
add
xchg
adc
rcll
leave
loop
mov
test
aad
cli
add
jmp
and
scas
cmp
fwait
jnp
and
jbe
call
stos
fsub
and
pop
pop
mov
out
mov
cmp
or
push
jp
adc
add
xchg
xchg
xchg
notl
sub
aad
mov
or
push
cmpsb
mov
sbb
cmp
or
pusha
inc
pop
xchg
adc
jbe
mov
cs
pop
sbb
lret
push
sbb
aas
add
cltd
in
add
add
add
add
add
pop
sub
adc
fwait
add
mov
add
xor
inc
jle
mov
xchg
out
out
into
hlt
in
xchg
jmp
subl
and
add
add
mov
incl
xor
jns
inc
push
sti
inc
mov
enter
and
nop
xor
sbb
jbe
adcl
xchg
jne
jno
sbb
push
and
daa
xchg
pop
addr16
fstl
xor
pop
jne
mov
aaa
and
inc
cmpsb
add
jb
fdivl
jp
mov
das
stos
xor
cmp
clc
in
fsub
xchg
es
pop
pop
mov
cwtl
ja
pop
shlb
mov
add
add
add
mov
aam
xor
and
iret
fwait
add
mov
add
out
ss
cmpsl
lret
cmp
xor
ret
test
pop
mov
push
mov
negb
jmp
sub
add
fs
out
mov
movsl
mov
cli
gs
popa
xchg
dec
addl
into
sti
stos
enter
fcmovne
sub
daa
mov
test
repnz
into
aaa
lods
gs
ficoml
cmp
sti
cs
jmp
cs
in
enter
push
xor
lcall
lahf
adc
pop
push
inc
and
sbb
xchg
adc
mov
outsl
loop
inc
xor
xor
add
add
add
push
add
mov
out
sub
add
xor
shrl
imul
pop
sub
pusha
mov
imul
push
dec
insl
push
mov
cmp
xor
jl
push
sahf
mov
and
rcll
nop
or
jnp
lret
push
cmp
in
cli
out
clc
out
leave
cmp
push
lods
and
mov
sti
and
leave
jl
jae
out
xchg
aad
push
cwtl
imul
imul
stos
popa
movsb
mov
inc
in
cmpsl
movsl
lret
std
popf
add
das
popa
mov
movsl
mov
sbb
loope
sbbb
loope
xor
into
loop
mov
jae
pop
imul
add
add
add
mov
jmp
fimull
std
mov
add
mov
add
in
or
jne
cmp
shll
dec
scas
or
push
cmpsl
and
pop
jne
mov
clc
mul
adc
mov
sbb
jne
out
mov
fists
flds
jo
mov
adcl
mov
add
mov
and
push
sbb
dec
sub
sbb
fisttpl
or
stos
mov
outsl
sbb
inc
mov
or
ret
dec
cmp
das
xor
jns
fnstcw
lret
mov
mov
jne
clc
lahf
jns
gs
orl
mov
lret
lock
xchg
fisubs
fcmovnb
and
jne
iret
jae
fdivrp
pop
jnp
add
add
add
add
pop
iret
pop
aad
ss
dec
jb
pop
adc
popf
add
mov
add
mov
xchg
sub
sub
imul
stc
rcr
mov
xor
jg
mov
out
test
inc
shr
mov
imul
ja
jo
mov
xchg
sbb
cmp
pop
push
sub
test
mov
mov
push
xchg
lock
pop
test
xorl
pop
cmp
pop
fwait
inc
xchg
shl
stos
mov
aad
sub
xchg
mov
insb
sub
mov
inc
repnz
adc
sbb
add
xor
and
dec
fsts
fsubrl
cld
in
adc
push
and
inc
shlb
sub
lcall
add
add
add
cld
push
aam
or
add
add
in
insb
mov
fimull
sarl
or
mov
mov
ss
aaa
inc
pop
fwait
mov
add
sub
lret
popa
lock
mov
pop
push
cmp
push
ret
jmp
pop
xchg
bound
jg
test
rcll
outsb
or
mov
xlat
dec
imul
out
adc
pextrw
std
mov
dec
hlt
cmpsl
out
dec
and
sti
and
jecxz
push
call
pop
xchg
out
push
sbb
cmp
xor
notl
mov
push
leave
ja
js
icebp
sub
add
add
add
add
lock
jle
repz
jg
inc
lahf
add
mov
add
pushf
sbb
mov
out
mov
add
and
sbb
into
in
stos
jecxz
outsl
rorl
push
rcr
push
mulb
inc
jo
sbb
mov
inc
sbb
xor
pop
xchg
negb
les
adc
cwtl
lret
sub
or
xchg
mov
in
mov
lods
leave
sub
inc
cld
mov
insb
mov
test
cmp
cmp
repnz
mov
aam
test
popf
aaa
test
sbb
in
outsl
inc
ja
or
push
lds
loop
fwait
mov
gs
movsb
cmpsb
pop
cmpsl
push
pop
mov
mov
aad
add
add
add
add
adc
adc
mov
lds
cmc
lahf
add
mov
add
mov
xor
jnp
push
xchg
fbld
dec
aam
or
cmp
aad
sti
adc
inc
jns
subb
aas
test
in
pop
jb
fdivl
cs
iret
lret
mov
lcall
cmp
mov
jno
sti
ja
testb
pop
and
jnp
inc
mov
xor
add
jge
call
jg
jl
fisttpl
arpl
adc
cmp
pop
dec
inc
mov
sbb
sbbl
mov
adc
dec
pop
push
sbb
mov
dec
fdivr
dec
push
shl
pushf
loop
jno
xchg
add
jae
push
pop
add
add
add
add
mov
lock
mov
rclb
push
cmpsb
mov
add
addr16
xor
jbe
jae
xchg
lock
sbb
xchg
test
into
jp
jns
jp
les
dec
leave
cmp
mov
push
jbe
and
and
xchg
bound
test
jmp
out
cmp
loop
mov
sbb
lret
sub
jl
xchg
shll
imul
lea
sahf
cmove
sub
xchg
add
inc
lret
jo
pop
push
lock
leave
clc
int
call
and
xchg
iret
test
clc
mov
aam
fcoml
add
add
aam
push
lock
cmc
das
sbb
xchg
iret
adc
xor
mov
add
xor
jg
outsb
shrb
mov
or
insb
fwait
add
push
aaa
fldenv
cmpsl
stc
sahf
inc
popf
mov
or
push
mull
add
pop
ljmp
jg
push
adc
outsb
adc
inc
jle
push
fcomi
xchg
adc
sahf
xor
pop
push
push
inc
lods
sahf
jle
ss
popl
lods
nop
aam
imul
fadds
and
cwtl
dec
sbb
xchg
adc
adc
mov
sbb
in
fsubr
insb
dec
cltd
xor
pop
dec
cltd
cmp
push
jno
mov
in
pop
pop
outsl
pop
data16
add
add
add
add
sub
fildll
xchg
mov
mov
add
cmp
xchg
inc
movsl
jg
pop
ret
inc
rcll
jg
test
and
data16
std
lret
lret
dec
add
cltd
cli
cs
inc
outsb
inc
hlt
add
mov
mov
in
lds
das
iret
insl
je
dec
cmpsb
dec
test
movsl
repz
push
mov
fisttps
pop
and
mov
pop
lods
ret
fcmovu
movl
mov
fsubrl
jno
int3
sub
insb
movsb
out
sub
jp
out
sbb
adcb
aad
or
pop
jle
out
mov
jb
in
lret
jl
inc
and
jmp
lahf
mov
add
add
add
fs
testl
inc
pushf
mov
add
add
xchg
push
push
rcrb
loope
ret
mov
stos
out
movsb
int
loopne
fwait
loopne
mov
sub
cmpsb
lret
mov
push
push
add
aas
pop
repnz
lods
test
sbb
xchg
scas
mov
pushf
push
addl
xor
jae
mov
inc
imul
addr16
shr
popa
sti
cmp
and
push
cmc
icebp
cmp
sub
xor
xchg
repz
sbb
or
inc
call
push
fnstsw
xor
out
imul
push
clc
aad
cltd
aam
push
movl
push
cltd
pop
mov
sbb
add
add
add
add
jne
jg
clc
cs
push
xchg
add
pop
lods
xlat
xchg
outsb
loopne
add
pop
push
cmp
lds
xchg
jle
push
aaa
and
mov
divl
sub
fcomps
daa
jecxz
lea
push
xchg
int3
addr16
pop
ds
sbb
js
lret
push
or
popf
mov
mov
inc
les
jge
mov
imul
pop
mov
xchg
mov
mov
out
cmp
fucomi
or
add
push
dec
fisubrs
dec
mov
fwait
insl
mov
push
dec
cmp
cmc
repnz
cmc
nop
cmp
mov
push
lret
cli
std
int
pop
out
and
int3
cli
add
jne
inc
add
add
add
add
mov
cmp
sti
dec
mov
je
lcall
add
mov
add
and
mov
jno
sub
fldl
aam
arpl
cmp
sbb
fdivrl
lock
sub
inc
sbb
arpl
dec
out
cmp
sub
lds
sub
dec
adc
mov
in
xchg
pop
cld
gs
xchg
mov
js
add
cli
nop
les
sub
rcll
pop
enter
mov
inc
push
adc
in
sbb
mov
aad
pop
cld
repnz
adc
sbb
outsb
dec
inc
pop
xor
popa
adcb
movaps
outsb
cmpsb
mov
pop
int3
dec
aad
ja
add
add
add
add
push
mov
mov
xchg
adc
stos
ret
or
mov
add
call
std
out
mov
cmpsb
xor
std
pop
int
inc
enter
loope
sbb
jl
stos
test
mov
xchg
fildl
insb
insl
lds
add
clc
mov
add
cmp
mov
push
mov
inc
add
cld
ss
mov
jno
xchg
adc
xlat
ss
sub
hlt
fists
adc
xlat
scas
icebp
movsb
in
xchg
loope
imul
push
push
clc
pop
push
nop
xorl
adc
xchg
inc
fimuls
in
sbb
test
sbb
push
push
popa
push
stos
pop
mov
push
iret
mov
in
lods
outsl
inc
cmpsl
add
add
add
add
fisttps
push
xorb
cltd
mov
add
ss
cmp
icebp
es
scas
add
sbb
call
jb
dec
ret
repnz
and
and
mov
test
in
testb
hlt
push
adc
xlat
test
mov
mov
sub
pop
sub
testl
push
test
add
mov
mov
sub
es
pusha
mov
jb
iret
jmp
lock
sub
je
imul
push
inc
mov
sbb
mov
les
bound
jb
sub
pusha
inc
sbb
lock
add
add
add
jle
out
sbb
mov
lea
add
or
int
adc
adc
inc
lods
std
inc
xlat
sbb
enter
shlb
clc
xchg
jb
lods
popa
pop
sub
arpl
jne
push
mov
adc
bound
mov
mov
nop
pop
and
sbb
lds
out
mov
ret
mov
pop
xor
lahf
adc
js
pop
in
add
push
mov
push
bound
stos
dec
es
cmp
mov
xchg
scas
inc
pop
jle
pop
in
arpl
aam
mov
in
mov
aam
xchg
out
mov
add
add
add
and
cmp
stos
adc
sti
lea
add
push
dec
or
es
push
sti
test
popa
rcr
cwtl
aas
inc
mov
or
xchg
xor
mov
imul
push
xchg
imul
xor
adc
xchg
cmp
enter
in
mov
cmp
sbb
cmpsl
jbe
xor
jns
js
fwait
push
into
stc
sbb
cmp
andl
push
test
les
xor
call
pushf
iret
nop
mov
icebp
xor
cmp
jg
enter
and
aas
sti
sub
add
stos
lahf
and
aad
sahf
sbbb
jns
push
fists
add
add
popf
aam
xchg
lcall
add
add
sub
and
scas
adc
dec
scas
ss
shll
xchg
test
or
mov
push
testb
jg
mov
sbb
dec
push
push
mov
int
rolb
std
repnz
into
outsb
sbb
js
sbb
outsb
imul
lcall
ret
adc
cmc
mov
sbb
lea
filds
enter
clc
daa
xor
xor
xchg
adc
jne
dec
dec
jl
arpl
inc
lea
arpl
sub
pop
pop
sub
ret
and
nop
iret
ret
add
add
add
add
mov
jbe
hlt
mov
and
cmpsb
cmpsl
aaa
sbb
pop
popl
add
fnstenv
jmp
inc
dec
xlat
sub
loopne
and
loop
and
int
int3
jl
aaa
mov
adc
push
mov
out
sti
and
enter
add
pop
push
jmp
out
outsb
loope
fadds
or
shl
call
aas
xor
mov
jle
sar
fidivl
ss
mov
in
pop
shll
dec
lret
and
stos
cmp
mov
jge
sub
xor
xchg
fdivl
and
inc
sbb
test
sar
movsl
and
int3
xchg
push
add
shlb
add
add
add
ror
mov
sub
out
jp
lods
pop
push
nop
add
mov
add
xchg
out
inc
sub
xchg
and
rorb
loope
leave
adc
test
aas
lea
dec
mov
or
jp
sub
test
dec
lock
and
pop
jbe
mov
and
leave
pop
jp
xor
mov
vpmovsxwq
adc
adc
mov
adc
outsb
stc
es
lods
in
ret
dec
push
xor
pop
xchg
push
inc
cmc
sti
scas
aas
xor
cli
xor
xchg
jle
aas
sbb
mov
loopne
mov
xor
push
fs
jae
adc
pop
out
add
add
add
fucomi
outsb
and
pop
mov
mov
add
add
or
sahf
shl
dec
out
pop
movsb
jp
in
jmp
and
lods
mov
call
mov
adc
aaa
adc
leave
out
in
aam
sub
insl
in
stos
jns
idivl
jge
adc
cwtl
xor
aaa
pop
sub
popa
fdivrp
inc
adc
sti
fldcw
mov
pop
fsubs
andl
out
pop
push
mov
inc
push
xchg
or
mov
sahf
adc
orb
js
daa
add
out
fs
ljmp
pop
test
add
iret
sub
xor
pop
scas
mov
pop
fstps
add
add
add
add
mov
and
in
jo
add
mov
add
jge
sub
sets
inc
jg
inc
mov
mov
fisttpl
icebp
mov
mov
cli
mov
lahf
sti
xchg
loopne
jp
jecxz
jo
sub
shll
sahf
pop
pop
add
dec
adc
ss
inc
xor
and
psadbw
cmp
or
dec
cmpsb
out
in
or
sbb
icebp
icebp
fidivrs
lods
ret
dec
jns
mov
daa
pop
dec
mov
pop
ror
inc
inc
push
jno
jp
imul
data16
addr16
lret
inc
mov
gs
rorb
loopne
mov
xor
test
dec
jl
dec
lods
cld
jnp
cmp
fistl
add
add
add
stc
call
into
inc
mov
push
xchg
xor
add
dec
jecxz
cmpsl
daa
jae
xchg
add
adc
lock
add
iret
add
pop
scas
mov
ret
outsl
add
jbe
jp
add
cld
iret
push
inc
out
mov
cmpsl
ret
sub
pop
sarl
in
out
mov
cmp
inc
dec
insl
mov
shl
jmp
ret
iret
cmpsb
lds
add
inc
dec
cld
mov
insb
pop
pop
or
sbb
lret
pop
xor
jp
xchg
inc
or
push
mov
sub
nop
out
sub
loope
or
mov
ja
stos
push
xor
add
add
add
add
sub
sub
adc
add
mov
add
movsl
mov
out
push
xor
and
cmp
or
push
xchg
fwait
mov
mov
lret
adc
inc
cld
mov
or
jmp
out
insl
popa
gs
fnstsw
sub
fidivl
fs
test
icebp
mov
shll
js
add
dec
mov
les
lds
idivb
sbbb
and
xchg
mov
enter
in
roll
in
xlat
shlb
fwait
inc
loop
pop
faddl
insb
insl
inc
and
pushf
sbb
xchg
xchg
popf
sbb
repz
xchg
int3
inc
sub
dec
ret
add
add
add
add
int3
sbb
out
loopne
lods
hlt
stos
ret
add
xchg
add
mov
add
cmpsl
cmp
and
pop
ja
addb
inc
lret
fistl
adc
int3
jno
popa
sbb
jp
xchg
xor
xor
scas
outsl
cmp
cwtl
addr16
or
sbb
adc
negb
cld
inc
jnp
daa
sub
cmp
imul
fdivl
icebp
mov
inc
sbb
adc
jne
push
psrlq
in
lods
pop
inc
test
sbb
pop
popf
out
jo
jp
cmp
mov
and
or
out
cmpsb
mov
inc
adc
inc
fldenv
call
push
dec
cltd
dec
lret
jg
add
add
add
push
test
fildll
pop
xchg
jmp
add
enter
loop
xlat
mov
inc
jle
cmc
leave
jns
test
jns
lret
ficompl
lret
ja
jecxz
int
pop
insl
or
call
sub
nop
and
fdivrp
lahf
inc
shlb
mov
jmp
popa
inc
sub
lds
lods
or
mov
inc
mov
adc
and
xchg
sbb
mov
jae
mov
and
mov
addb
push
inc
sub
xor
insl
xchg
mov
sbb
cmp
jg
mov
dec
jnp
cmp
lahf
mov
icebp
stos
mov
add
add
fwait
loope
sub
sarb
add
mov
add
cmp
dec
xchg
daa
jle
sub
mov
leave
dec
mov
add
test
lods
mov
leave
jno
and
out
dec
adc
das
mov
and
xchg
adc
push
fdivrl
push
or
sbb
cmpl
andl
cli
mov
mov
xor
in
jae
xor
jg
cmp
fcompl
aaa
rcl
ret
fcomps
repnz
sarb
dec
sbb
stos
mov
pop
test
rcrl
out
sub
mov
in
pop
cmp
jecxz
xor
push
sbb
add
add
add
add
divl
dec
cmp
dec
mov
into
xchg
xchg
add
mov
add
lret
out
out
lods
mov
shl
stc
jl
pop
dec
mov
enter
insb
out
testb
mov
pushf
and
xchg
push
das
insl
push
xor
push
or
adc
loop
inc
pusha
adc
pop
pop
in
out
rolb
and
jno
push
mov
out
rcr
push
enter
mull
cmp
xchg
mov
loope
fdivl
test
mov
mov
pop
and
xor
xchg
jno
mov
insl
stc
mov
mov
outsl
xchg
xor
fistl
and
or
add
add
add
add
arpl
jge
mov
daa
cmp
add
mov
add
lods
adc
inc
ficompl
mov
xor
push
cmp
adc
out
inc
jno
push
dec
dec
jecxz
and
decb
cmpsl
into
pop
aam
mov
mov
mov
enter
sub
aaa
das
lods
scas
out
jl
cmpsb
mov
push
xor
in
rcr
pop
sti
lcall
fisttpll
sub
xchg
jl
or
out
in
xor
mov
aas
stos
sbb
ficoml
int
in
pop
push
sub
cmpsl
inc
mov
xlat
or
repnz
cld
mov
jbe
or
add
add
add
add
push
imul
cmpl
add
push
cmp
in
das
loope
mov
cltd
add
mov
add
sbb
jo
lcall
dec
mov
arpl
scas
mov
test
test
dec
inc
jge
mov
pop
cmp
js
aad
push
scas
insl
loope
add
xor
sub
xchg
cmp
test
push
call
xchg
rcll
mov
and
jno
mov
stos
aam
cli
das
push
mov
mov
inc
xchg
inc
insl
sbb
lcall
jge
push
pop
enter
cmpsb
xchg
mov
bound
sbb
add
add
add
ss
xor
and
cmp
movsb
add
mov
add
mov
scas
cld
repnz
dec
lea
adc
xchg
iret
rcl
sti
xchg
in
cmp
in
pop
mov
cwtl
sbb
out
scas
fildl
popl
add
cmp
pushf
call
cmc
out
mov
sahf
jno
pushf
inc
mov
in
movsb
out
stos
inc
xchg
mov
lcall
lods
inc
orb
add
dec
popf
sub
dec
mov
add
dec
dec
sbb
ja
leave
ja
add
inc
xor
mov
nop
and
aad
sub
dec
cltd
jae
dec
cmp
pop
xchg
pop
mov
aam
add
add
add
add
out
mul
aaa
cmc
xchg
lcall
int3
movsb
add
mov
add
loopne
sarl
inc
mov
mov
addr16
ds
out
fcmovnbe
js
mov
jmp
ljmp
or
mov
push
mov
and
les
jmp
dec
and
sub
daa
pop
dec
aaa
pop
shlb
dec
sub
xchg
insl
push
add
fs
mov
movsb
pop
rcrl
mov
fs
lods
out
dec
in
jae
mov
inc
repz
sbb
outsb
test
add
sarl
shll
pop
out
movsl
movsl
scas
scas
inc
fs
and
xor
pop
int3
jb
adc
jo
or
dec
leave
lods
cmp
add
add
add
push
aad
out
fucomip
ss
cmp
pop
jmp
mov
add
pop
pop
mov
lods
xor
or
mov
insl
rorb
data16
jg
mov
push
bound
xor
orb
jo
into
out
cmp
cmp
cmpsl
fidivl
jbe
push
ss
adc
mov
xchg
outsb
cs
jnp
add
andb
lret
pop
and
iret
mov
repz
sub
jb
inc
hlt
repz
cld
push
mov
cmp
das
push
jae
xor
lret
sahf
ror
dec
es
imul
in
jg
insl
sub
ret
adc
fadd
add
and
add
add
add
add
in
cld
fisubrl
sbb
ja
cmpsb
add
mov
add
mov
loop
lea
dec
imul
loop
inc
mov
hlt
repnz
jne
lahf
cmpsb
out
add
shl
outsb
push
and
jg
repnz
mov
mov
push
and
das
fs
push
xchg
fs
cmpsl
push
out
movb
sub
push
pop
mov
sub
sahf
push
loope
out
mov
lods
pop
mov
addr16
push
jecxz
cmp
sub
shl
cmp
xorl
fmul
fistpl
data16
or
pcmpeqd
jno
out
xorl
jbe
icebp
cli
mov
xor
push
ljmp
add
add
add
push
les
in
lahf
sti
ja
rcll
ret
add
mov
add
lret
rorl
and
into
psrld
push
xchg
test
adc
je
sbb
sbb
cli
jo
je
mov
or
or
int
das
push
sbb
out
movsl
outsl
jp
hlt
mov
sbbb
sub
mov
pop
lret
add
mov
jle
dec
outsl
pop
cltd
or
mov
rcrl
pop
pop
lea
cmpsl
ret
repz
adc
or
push
and
mov
mov
xchg
push
dec
pop
xchg
xorb
insb
test
xchg
sub
adc
mov
cmc
stos
cwtl
sub
mov
das
add
add
add
add
jle
call
cli
lcall
add
mov
add
je
mov
ja
call
cld
push
adc
cmp
adc
test
adc
xorl
mov
or
movsb
jge
repnz
insb
je
mov
incb
cmp
fdivrs
sbb
cmp
int3
fdivs
inc
sub
dec
sub
arpl
pop
sbb
jb
fistpl
push
ljmp
ss
jecxz
push
shrb
out
dec
movsb
xor
lods
jae
popf
jo
push
testb
popa
adc
or
test
xor
mov
mov
nop
into
les
cltd
jmp
lods
xchg
lcall
and
xchg
insl
fwait
les
add
add
add
test
and
pop
dec
dec
push
es
test
add
cmp
inc
ja
test
loopne
test
bound
mov
insl
call
out
xchg
add
or
sub
ljmp
les
pushf
imul
imul
pusha
ss
jmp
outsl
out
xchg
ljmp
lcall
int
adc
sub
jb
div
fdiv
sbb
xor
add
in
test
lret
add
divb
mov
test
mov
xlat
mov
fwait
insl
sub
int3
fbstp
cmp
jle
inc
jo
mov
add
add
add
add
add
aam
fnstsw
out
fcmovu
in
mov
nop
repnz
add
das
mov
sub
ret
in
xchg
cwtl
notb
cmp
lods
dec
xchg
xchg
mov
push
out
movsb
or
nop
adc
sub
lea
push
jae
cwtl
push
lods
stc
mov
ss
jne
add
push
mov
fstpl
int
nop
add
jns
pusha
lea
cli
xchg
sti
adc
rcl
cmp
je
out
dec
or
mov
aam
outsb
ficomps
out
inc
stc
call
sub
add
mov
xor
cld
cwtl
popf
lods
cmpsb
popf
cltd
xchg
xor
cli
push
addb
sbb
out
and
mov
shrl
pushf
add
add
add
add
sbb
inc
jecxz
mov
enter
mov
add
add
jl
jbe
dec
mov
ret
test
ror
sbbl
mov
cmpsb
jecxz
jecxz
aam
popa
gs
insb
xor
int3
inc
jbe
sbb
xchg
lret
imul
fistpll
sub
and
pop
jnp
or
cmp
ss
je
push
ljmp
jmp
inc
out
nop
cmpsb
xchg
aaa
inc
cmp
jl
dec
xor
fs
das
aaa
sbb
int
pop
add
js
jge
mov
cmp
jmp
mov
enter
cli
push
mov
xchg
push
addr16
rcrb
xchg
jmp
or
inc
add
add
add
add
mov
icebp
and
push
or
add
pop
pusha
lret
stos
cltd
rcrb
xor
testb
add
insb
mov
aas
cmp
call
mov
push
pop
and
sahf
jbe
sub
popa
sahf
into
nop
std
pop
dec
nop
in
push
add
adc
push
sub
cmp
dec
idivl
icebp
jmp
fisubrl
push
lods
mov
loope
mov
stc
imul
scas
imul
cmp
inc
int
adcl
test
jg
rcrl
mov
inc
loope
aam
xor
cld
aam
lea
add
add
add
add
xlat
repz
das
cli
fists
dec
es
add
add
mov
add
mov
lret
mov
insl
add
call
sbb
enter
jge
cmpsl
dec
mov
ja
inc
pop
ret
ret
sbb
cltd
add
inc
sbb
push
add
lcall
dec
mov
js
push
pop
lods
jns
outsb
test
and
sub
leave
andb
dec
pop
incb
std
int3
mov
aam
mov
cmp
sbb
jl
mov
mov
lock
mov
mov
shlb
rorl
push
repnz
mov
outsl
xor
jae
add
add
add
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
dec
pop
pop
dec
inc
xor
push
push
inc
cmp
pop
ss
pop
add
inc
pop
inc
pop
push
dec
inc
pop
cmp
dec
add
cmp
xor
aaa
inc
inc
pop
xor
pop
push
push
inc
push
cmp
push
push
inc
xor
xor
add
cmp
dec
cmp
pop
dec
xor
add
xor
pop
inc
dec
pop
pop
xor
pop
inc
xor
inc
dec
cmp
inc
cmp
ss
dec
add
xor
dec
xor
push
add
aaa
pop
push
dec
dec
cmp
inc
xor
add
pop
add
dec
add
xor
pop
add
add
push
add
dec
add
add
inc
add
add
xor
pop
add
xor
dec
add
push
add
add
cmp
push
add
push
add
add
add
add
add
dec
add
push
add
add
add
add
add
dec
add
add
pop
add
add
push
add
add
pop
add
xor
xor
push
add
add
add
add
inc
add
xor
cmp
add
add
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
lcall
add
add
add
add
add
add
add
add
dec
add
add
add
add
fdivrl
add
add
add
push
outsl
jb
push
imul
aas
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
imul
