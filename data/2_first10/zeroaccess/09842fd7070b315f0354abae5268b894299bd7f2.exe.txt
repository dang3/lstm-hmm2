push
mov
sub
push
lea
push
addl
push
subl
call
xorl
push
incl
xor
inc
movl
push
decl
push
andl
call
xorl
test
movl
je
xor
movl
jmp
push
xor
mov
incl
push
addl
push
call
andl
test
je
sbbl
lea
push
orl
call
jmp
push
inc
mov
push
adcl
push
push
orl
call
andl
test
movl
jne
mov
orl
push
sbbl
push
adcl
call
test
movl
je
orl
push
xorl
push
push
subl
call
adcl
test
jne
push
push
call
xorl
test
movl
jne
addl
push
orl
push
push
call
xorl
test
jne
andl
push
push
sbbl
call
movl
jmp
movl
add
mov
mov
movl
addl
movl
lea
mov
mov
sub
sub
mov
xor
lea
mov
xor
add
xor
mov
mov
movzbl
or
mov
mov
mov
mov
addl
xor
xor
mov
andl
add
mov
mov
cmp
jne
sbbl
mov
mov
inc
mov
xor
addl
add
mov
negl
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
jmp
add
mov
mov
add
mov
mov
mov
mov
and
mov
mov
mov
sub
sub
mov
mov
sbb
mov
adc
mov
movl
cmpl
je
cmpl
jg
jmp
pushl
call
mov
dec
mov
jmp
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
mov
adc
movl
movzwl
xor
mov
mov
xor
orl
add
movl
jmp
adc
mov
addl
xor
subl
lea
orl
push
negl
mov
xor
adcl
lea
orl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
subl
pushl
adcl
call
movzbl
sbb
mov
adc
xor
sbb
lea
mov
add
mov
mov
adcl
xor
xorl
xor
add
xor
mov
sbbl
xor
lea
movl
cmp
jbe
mov
and
mov
mov
movl
mov
sbb
mov
neg
mov
sub
xor
movl
mov
mov
mov
movl
cmp
movl
jne
orl
push
xor
movl
inc
andl
push
push
adcl
call
orl
test
jne
xorl
push
push
xorl
call
test
jne
adcl
push
push
push
call
test
movl
jne
addl
push
negl
push
andl
call
orl
test
jne
sbbl
lea
subl
mov
lea
orl
mov
xor
mov
andl
test
je
xor
mov
mov
xorl
mov
andl
xor
add
inc
mov
cmpl
jbe
jmp
pushl
call
cmpl
jb
mov
movl
cmpl
je
cmpl
ja
jmp
push
pushl
pushl
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
pushl
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
orl
mov
mov
movl
cmpl
je
cmpl
jbe
jmp
push
pushl
pushl
pushl
call
xor
xor
dec
mov
jmp
cltd
mov
movl
cmpl
je
cmpl
ja
jmp
call
xor
add
dec
mov
jmp
mov
add
mov
adc
and
andl
xor
mov
mov
mov
and
mov
andl
xor
add
mov
movl
adcl
adcl
xor
subl
mov
mov
xor
mov
movl
cmp
movl
jne
mov
mov
cmp
movl
je
movl
cmpl
je
cmpl
jbe
jmp
pushl
call
mov
dec
mov
jmp
mov
orl
mov
addl
mov
xor
add
adc
xor
xor
cmp
movl
jne
cmp
movl
jne
mov
orl
mov
sbbl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
pushl
call
jmp
mov
mov
mov
add
notl
mov
jmp
mov
movl
cmp
movl
je
xor
xor
adc
mov
mov
mov
xor
add
movl
cmp
movl
je
xorl
push
xor
inc
sbbl
push
subl
push
adcl
call
orl
test
movl
jne
movl
push
addl
push
call
test
jne
andl
push
push
push
sbbl
call
orl
test
movl
jne
push
addl
push
call
addl
test
jne
movl
cmpl
je
cmpl
jle
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
or
mov
mov
mov
pushl
movl
mov
pushl
movl
add
mov
orl
mov
movl
pushl
sbbl
call
mov
mov
movl
mov
jmp
adcl
push
adcl
xor
sbbl
inc
notl
push
push
call
orl
test
movl
jne
orl
push
addl
push
addl
call
addl
test
movl
jne
xorl
push
push
push
call
test
movl
jne
subl
push
push
call
test
movl
jne
andl
push
push
push
call
test
movl
jne
adcl
push
subl
push
call
notl
test
movl
jne
sbbl
push
push
subl
push
call
test
movl
jne
subl
push
adcl
push
sbbl
call
test
movl
jne
mov
andl
mov
inc
mov
cmpl
ja
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
decl
add
movl
cmp
jne
sbbl
mov
mov
andl
mov
xor
subl
add
cmp
jne
movzwl
and
mov
adcl
push
xor
add
adcl
push
decl
push
sbbl
pushl
andl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
xor
mov
inc
lea
mov
lea
mov
mov
test
je
push
push
push
call
test
jne
push
push
call
test
jne
push
push
push
call
test
je
lea
push
call
jmp
push
push
call
test
je
xor
jmp
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
inc
ret
push
mov
sub
mov
sbb
mov
mov
addl
mov
movl
movzwl
sub
mov
dec
jmp
sub
jae
xchg
xchg
pop
int3
into
add
jl
rcrl
jl
cs
cmp
and
popa
pusha
jp
insb
insb
insl
xor
fdivrp
push
arpl
stos
jp
push
iret
pop
dec
cmp
dec
jg
mov
jmp
cld
imul
xor
mov
andl
push
mov
fldl
or
and
inc
push
and
mov
sub
mov
jbe
ret
sbb
jb
jnp
xchg
pop
cmpl
cwtl
je,pt
add
sub
push
sti
iret
mov
or
out
push
dec
push
cmp
xor
lods
inc
int3
cmpsl
dec
fiaddl
push
std
push
push
movsl
icebp
bound
bound
or
mov
jmp
mov
add
inc
lea
cmpl
dec
pop
icebp
pop
mov
cwtl
add
test
or
push
mov
xchg
or
inc
add
cmp
flds
mov
and
xor
daa
mov
in
leave
or
add
adc
movsb
push
inc
jl
xchg
lock
jecxz
lock
fwait
rorl
xchg
shll
pop
add
fmul
or
imul
scas
hlt
xlat
add
mov
push
movsb
out
mov
inc
mov
jp
push
push
mov
xchg
fs
sub
jbe
add
push
dec
jnp
xor
adc
std
cli
mov
sbb
lahf
test
push
jne
ret
jns
pop
hlt
mov
push
sbb
or
subb
jne
icebp
jno
scas
test
cwtl
sbb
sub
es
insb
pusha
stos
ss
jl
aam
mov
sub
movsb
test
dec
mov
pop
mov
add
mull
inc
inc
cmpsl
adc
in
dec
dec
js
in
add
sti
xchg
and
jg
jo
data16
out
fcoms
mov
xchg
inc
mov
mov
xor
popa
xor
cmpsb
testb
adcb
sti
aaa
mov
cltd
or
and
sbb
mov
scas
dec
popf
in
mov
cli
ss
into
or
sbb
pop
dec
pop
lcallw
sti
imul
jmp
dec
int
call
fucomp
aaa
adcb
lcall
jne
fldcw
rorb
adc
cltd
js
fdivrl
roll
fildll
pop
ss
mov
xor
dec
xchg
cltd
pop
xor
push
fmulp
pop
rol
mov
mov
arpl
adc
es
popa
fstpl
gs
push
cmp
aad
and
mov
add
adc
jnp
aas
ja
fisubrs
mov
addr16
inc
insb
dec
sbb
test
cmc
test
xor
sbb
rcl
stos
push
stc
nop
xor
dec
mov
push
inc
das
inc
dec
and
stos
jge
in
mov
ss
aaa
out
int3
aaa
in
jle
loope
mov
xchg
jb
imul
imul
loope
jge
jle
ret
or
fcoms
mov
xchg
cmp
jmp
subl
std
pop
rcr
mov
xlat
sub
adc
and
icebp
mov
sbb
xor
push
jp
shlb
shl
or
lods
dec
xor
fs
or
sub
add
aaa
clc
mov
test
mov
imul
pop
push
cmp
movsb
movsb
xor
mov
lods
std
call
lcall
pop
rorb
xor
or
fidivrs
push
pop
cmpsb
push
mov
push
dec
xor
cwtl
pop
cmp
pushf
fcos
std
movups
ret
ret
sti
xor
test
xchg
jmp
push
loope
cli
jle
inc
dec
inc
sub
jo
mov
jge
pop
jg
nop
jp
mull
xchg
mov
aas
mov
dec
mov
in
divl
repnz
inc
cmp
add
adc
test
test
lock
pop
mov
adc
shlb
mov
addr16
mov
test
lret
rcrb
je
or
xor
popa
inc
pop
movsl
add
jae
mov
imul
and
and
push
lods
xor
ds
lods
mov
push
sub
mov
call
push
cwtl
pop
and
ja
mov
add
mov
leave
xchg
mov
add
push
pop
sub
push
mov
leave
sub
sahf
ds
mov
insl
bound
xor
pop
xor
cwtl
ret
scas
pop
in
pop
les
or
addb
sbbl
inc
jle
mov
das
ss
xor
clc
stos
push
xchg
movsl
jne
sbb
adc
les
or
notb
inc
cmp
leave
cmp
add
jae
jg
lds
xchg
out
ret
xchg
add
xchg
aad
add
dec
js
push
popf
pop
leave
mov
lahf
pop
fistps
jle
inc
fwait
xchg
push
cmpl
adcl
repnz
pop
es
adc
mov
mov
and
sbb
push
adc
ds
test
mov
mov
xor
jno
or
adc
mov
or
cmp
iret
xchg
sub
call
pop
xor
stc
xor
add
cs
rclb
or
shl
xchg
imul
sbb
jl
mov
pop
insl
lods
fnstsw
pop
and
mov
add
xchg
outsl
jl
push
inc
pop
in
push
outsb
fistps
mov
and
daa
jbe
in
fistpll
mov
inc
repz
or
dec
adc
mov
cwtl
xor
test
int
rclb
adc
add
xchg
jb
xlat
cld
xor
xchg
outsb
out
xchg
mov
leave
repz
imul
xor
shll
mulb
incb
shl
dec
lds
or
testl
or
cld
mov
jp
mov
push
add
divl
mov
xchg
sbb
dec
pop
xchg
jno
push
cmpsl
mov
xchg
nop
stos
jo
shll
or
mov
dec
jno
jnp
cli
sti
push
icebp
cmp
add
std
jg
push
fdivl
je
or
push
dec
or
pop
xor
imul
jo
jmp
push
out
iret
adc
inc
pushf
adc
and
mov
mov
testb
jecxz
mov
or
mov
arpl
cmpsb
add
jne
push
pop
addr16
hlt
fmuls
cmp
sub
outsl
imul
mov
mov
pop
int3
ret
or
shlb
jae
rcrl
sbb
xchg
outsb
lahf
sbb
add
insl
sbb
ja
in
cmp
mov
jns
sbb
or
cmp
inc
js
fsincos
mov
sub
insl
test
js
xor
testl
mov
xor
lcall
dec
incl
mov
aaa
fstps
ss
daa
pushl
daa
add
mov
push
xchg
cwtl
xor
xchg
mov
add
add
push
dec
cltd
aas
fidivs
test
insb
jns
sub
sbbb
adc
jnp
or
cmpsb
jmp
and
add
scas
add
sbb
mov
xchg
jecxz
or
jl
cwtl
add
lods
shl
cwtl
es
dec
scas
pop
mov
aad
das
int3
inc
and
out
jb
sub
icebp
mov
xchg
xor
inc
dec
mov
or
dec
or
fidivrs
pop
mov
pop
daa
xchg
sub
inc
jge
fwait
dec
int
mov
hlt
push
xchg
mov
sub
rcll
cmp
sbb
in
jo
popa
and
imul
xchg
in
xor
ljmp
sti
push
hlt
ljmp
cmp
mov
call
rcr
test
aaa
push
cmp
mov
jnp
pushf
imull
and
sub
nop
dec
enter
mov
stos
pusha
jg
adc
adc
stos
sti
pop
sub
ja
sub
fnsave
jmp
dec
adc
dec
loop
cmpsl
insb
in
divb
imull
mov
ss
hlt
sbb
sbb
repz
imul
inc
out
adc
ror
movsb
push
sub
inc
jae
cmpsl
cwtl
shr
jo
aad
xor
rcrl
inc
mov
insb
inc
pop
stos
mov
or
lea
ret
jg
inc
xor
imul
mov
add
mov
and
imul
enter
repnz
and
iret
pushf
int
mov
mov
jbe
mov
pop
mov
push
pop
dec
sbbl
pop
or
frstor
mov
jo
clc
lds
add
xchg
ja
xor
ds
push
sbb
jno
jle
sub
jmp
aam
push
add
dec
xchg
dec
sub
shl
js
imul
sub
inc
push
movsb
push
push
xlat
mov
pop
aam
fisttpll
decl
bound
jp
pop
inc
or
push
aaa
movsb
outsl
pop
or
out
and
pop
movb
jbe
jb
stos
and
pusha
jae
je
sbb
push
icebp
push
imul
mov
push
adc
loop
in
or
aam
jne
sbb
and
sbb
mov
outsb
mov
fs
cs
lea
add
outsl
mov
and
into
mov
and
xchg
bound
xor
inc
lret
push
inc
dec
and
mov
lea
jp
cmc
jne
in
mov
das
insb
jecxz
xchg
lret
outsb
mov
pop
scas
push
xlat
scas
das
gs
insl
mov
adc
sbb
mov
mov
outsb
and
and
in
test
addr16
lods
call
add
sub
stc
scas
jmp
cmp
stos
bound
cmp
sbb
xchg
sbb
adc
fsubr
jns
scas
std
movb
mov
mov
lock
add
out
scas
std
in
testl
add
inc
sar
ds
repz
and
mov
movsb
cli
jnp
xor
dec
adc
add
test
adc
push
clc
jge
xchg
ss
les
aad
pop
fsubrs
std
xor
sbb
icebp
in
dec
popa
outsb
mov
fnstenv
in
stc
push
cmc
andb
insl
sahf
mov
cmp
fdivrs
adc
adc
mov
shlb
cwtl
mov
xchg
daa
dec
push
arpl
dec
mov
cmp
gs
push
lret
stos
lods
and
aaa
cmp
xchg
mov
iret
inc
add
dec
inc
in
stc
das
and
dec
add
xorl
add
jo
mov
div
test
rcrl
add
inc
jp
loopne
popf
mov
mov
xchg
or
rorb
cwtl
test
insl
aaa
out
inc
mul
addr16
jp
push
xor
popf
popa
jo
adc
int3
push
adcl
sbb
mov
and
push
es
lds
repz
lahf
jo
adc
nop
out
push
xchg
popa
jecxz
push
jb
dec
xchg
push
dec
jp
into
pop
push
outsl
jge
hlt
es
sub
aas
ret
mov
test
jl
popf
dec
shrb
pop
shrb
cmp
subb
pop
sub
adc
jg
add
xor
sub
push
dec
xchg
xchg
lret
cmp
aam
mov
sbb
sbb
out
adc
sbb
xchg
stos
fsubrs
push
mov
pusha
cs
nop
insb
cmpsl
ljmp
dec
repz
jno
hlt
cltd
and
mov
xlat
jae
dec
fstpl
cli
fmul
es
cs
lret
xchg
imul
inc
jae
dec
outsl
js
cld
mov
push
lahf
sub
jno
fs
clc
push
dec
sub
jnp
xorl
xor
push
mov
lods
sub
mov
je
sub
adc
jno
or
icebp
inc
ss
subl
sbb
inc
pushf
sub
cli
pusha
mov
rcrl
ss
data16
test
aam
adc
jecxz
jecxz
mov
push
fiadds
cmpsl
loop,pn
shrb
mov
xlat
lahf
jp
cmpsl
sbb
jnp
mov
add
lods
cwtl
gs
dec
xor
mov
pop
sub
dec
mov
push
leave
or
cld
bound
cmp
or
inc
cmp
jl
mov
pop
push
outsb
flds
std
adc
scas
pop
jo
imul
iret
adc
vmwrite
xchg
sub
out
xchg
mov
add
out
inc
mov
mov
mov
jns
lahf
ljmp
shll
pop
cld
dec
popf
lods
mov
test
out
xchg
loope
int3
push
cmp
sub
xor
insl
cmp
mov
push
or
sbb
inc
stos
stc
dec
jbe
sub
std
out
enter
pushl
sbb
push
popa
and
test
and
test
lret
dec
popa
mov
lds
pop
outsb
xchg
add
cmp
inc
add
jne
fisttpll
xchg
pop
inc
in
mul
mov
jae
pop
xor
mov
sbb
andl
dec
sub
lcall
mov
mov
leave
popf
das
fildll
pushf
cmp
leave
aaa
orb
hlt
ljmp
push
fdivr
push
bound
cmpsb
or
add
aam
xchg
sbb
fs
and
cmpsb
pop
inc
popf
push
das
mov
hlt
mov
xchg
idivb
js
out
xor
lea
popf
mov
push
xor
sahf
aas
jp
ret
sub
or
and
sub
shl
aaa
inc
mov
add
jl
pop
push
sub
popa
push
sbb
cld
out
jb
add
push
push
scas
inc
xlat
sub
mul
mov
xchg
subl
sarl
xor
icebp
lds
mov
jg
sub
cs
test
cld
lds
and
adc
add
aam
aam
push
lods
fiadds
pop
xor
sbb
sub
sub
cmp
inc
add
orb
push
mov
rorb
push
loopne
inc
or
lahf
loop
pushl
cld
nop
lcall
add
ja
lret
jl
inc
lds
mov
xor
in
test
add
sub
arpl
dec
dec
jge
test
inc
call
fadds
pop
int
xchg
push
jmp
push
cs
insl
sub
icebp
xchg
or
pop
or
popf
enter
ret
gs
pop
cwtl
sub
ret
dec
mov
scas
daa
xor
test
imul
push
popa
jno
sub
test
insb
stos
scas
rorb
sbb
stos
and
mov
pop
push
aas
movsl
and
test
push
push
adc
int3
decb
addr16
fnstsw
pop
push
push
call
push
mov
sarb
inc
out
xchg
movd
pcmpgtd
xchg
mov
adc
aas
arpl
das
repz
fs
test
dec
and
and
cmpsl
test
pop
addr16
inc
loopne
inc
stc
fs
cmp
sbb
movsb
lret
test
sub
sarl
sub
fcoms
adc
cli
add
fldl
mov
shlb
inc
pop
pushf
les
pop
push
ret
mov
push
adc
sbb
sbb
test
aaa
aas
ljmp
push
lea
add
push
push
loopne
mov
adcl
ss
cmp
out
iret
xchg
cli
sbb
or
adc
push
pop
push
push
lods
outsb
in
fmull
fists
sub
sbb
sub
data16
sbb
nop
aam
iret
pop
jle
ja
lds
jb
outsb
in
testb
sbb
mov
xchg
int
imul
mov
ds
jmp
and
jb
aaa
stos
out
mov
sub
mov
lret
fs
inc
cmpsb
push
pop
mov
ficoms
sbb
mov
jge
xchg
das
lds
pushf
sbb
xchg
test
cmp
inc
shlb
adc
lock
cs
lds
nop
stc
in
gs
jecxz
outsl
add
add
cld
jmp
outsb
lds
enter
dec
int3
inc
inc
sbb
or
add
mov
les
ss
cli
loopne
repz
fdivrs
test
pop
inc
sbb
xchg
mov
push
adc
xor
jno
mov
out
enter
shll
stos
je
dec
arpl
inc
mov
push
mov
sahf
stos
iret
jnp
in
cmp
in
adc
push
push
dec
imul
sub
xlat
mov
sahf
aam
gs
dec
aad
pushf
in
clc
xchg
stos
lods
inc
imul
fcompl
out
xchg
loopne
into
scas
push
sbb
imul
mov
mov
adc
adc
ss
test
jecxz
cli
pop
mov
sbb
or
rolb
fistl
cmc
insl
jecxz
push
and
inc
sub
sub
xchg
xchg
fsub
pop
ljmp
je
adc
sbb
into
out
sahf
jle
jmp
into
scas
mov
dec
mov
jecxz
add
cmp
sub
xor
cmp
into
mov
jnp
out
and
fsubs
enter
lcall
leave
add
sbb
add
push
pop
scas
lahf
movsl
xchg
cmp
xchg
push
fcoml
sbb
mov
dec
cmp
pushf
insl
sub
xchg
or
pop
adc
xchg
lds
rcl
xor
es
xor
mov
scas
push
mov
or
outsl
pop
jle
push
lret
cwtl
bound
lds
adcl
movsb
and
xchg
imul
test
push
nop
push
test
mov
enter
and
add
ficompl
ljmp
es
sarb
out
fs
xor
insl
pop
arpl
pop
iret
es
leave
jb
ljmp
sbb
lock
pop
dec
add
cltd
mov
scas
clc
jo
sbb
mov
pop
or
inc
add
popf
inc
pop
sahf
scas
leave
fpatan
repnz
imul
xchg
xchg
pop
into
in
adc
cld
outsl
lret
or
gs
movsl
in
sbb
cli
push
jo
jbe
pop
xor
pop
lahf
fldln2
xor
aam
mov
sarb
mov
mov
add
imul
xchg
sbb
out
out
xchg
xor
mov
mov
out
mov
xchg
insb
inc
dec
in
aad
lods
jmp
add
divl
xrelease
leave
cmc
pop
lods
jecxz
aaa
xchg
mov
sub
shrl
mov
das
pop
xorl
pop
inc
call
clc
ss
int
mov
cltd
lret
xor
inc
inc
lds
adc
stos
dec
jp
fimull
mov
push
inc
inc
pop
inc
pop
leave
movsl
mov
stos
xchg
inc
mov
ja
lock
or
xchg
call
add
inc
and
xchg
stos
adc
mov
lret
loop
dec
sbb
loope
pop
lds
imul
test
out
daa
call
pop
cmp
push
out
imul
jl
pop
lea
es
dec
test
sbb
in
cmp
cmp
cli
cmpl
sbb
mov
xor
jecxz
and
ds
inc
cmp
jae
mov
aaa
jle
aam
push
inc
adc
popf
roll
xor
pushf
repnz
and
dec
stc
lahf
movsb
and
jp
jecxz
sbb
jns
loopne
clc
js
icebp
shll
adc
iret
jmp
or
mov
jb
cmp
cmc
pop
pop
dec
pop
in
mov
jg
into
xor
mov
and
mov
cmp
pusha
cltd
sti
mov
shlb
inc
mov
cmc
or
shrb
xor
lcall
mov
push
aas
sbb
test
dec
pop
inc
shll
jmp
xor
pop
ror
leave
sbb
mov
xor
xor
shl
mov
push
sub
sbb
dec
sti
cmpsl
xchg
test
js
sbb
dec
jecxz
aaa
xlat
cli
pop
cmp
ror
inc
xchg
das
stc
sub
push
enter
insb
or
inc
inc
cmp
or
xchg
ja
push
int3
iret
mov
mov
repz
mov
clc
in
sub
mov
in
cltd
scas
or
push
xchg
inc
es
sub
sahf
pusha
or
pop
aad
test
xchg
movsl
mov
jecxz
gs
dec
jnp
xor
pop
fsubrl
out
dec
lods
sub
rcll
dec
addr16
mov
in
mov
iret
outsl
sub
sub
sbb
jbe
push
movsl
lcall
mov
aas
cwtl
mov
dec
push
int3
clc
lcall
xorl
addr16
test
int3
sbb
shrl
sbb
loopne
mov
inc
sub
pop
sbb
mov
loopne
xor
cld
pop
out
fbld
addl
dec
cmp
out
in
pop
push
cltd
mov
sbb
outsl
sbb
push
push
jbe
nop
pusha
stos
mov
dec
fld
cld
shrl
lds
cmc
fildl
sub
or
add
sti
ljmp
sti
xor
cmp
jne
sub
loopne
ret
pop
jo
inc
jbe
movsl
inc
mov
jnp
pop
pop
cmp
xchg
aad
jae
movsl
pop
mov
cmp
leave
loopne
cmp
test
outsb
pop
rcrl
pop
loope
sub
inc
test
fnstenv
movntq
lahf
pop
push
cmc
jo
ss
xlat
cmpsb
push
sahf
orb
sbb
sbb
cmp
popf
push
mov
pop
out
repz
pop
sbb
mov
movsl
arpl
add
loopne
ja
std
xchg
mov
mov
insb
inc
in
lret
in
in
lret
sub
mov
xchg
mov
aam
inc
dec
push
aad
jl
mov
mov
clc
push
mov
iret
das
pushf
ret
cmp
fmull
adc
and
adc
mov
mov
in
rclb
mov
mov
stos
push
push
je
repnz
es
popa
dec
sub
punpcklbw
shll
dec
mov
xor
jno
inc
icebp
add
movhlps
cld
or
and
fnsave
ror
jb
aad
dec
fistpl
shll
pop
xor
mov
insb
repz
daa
cmp
mov
nop
loop
sbb
out
jg
jno
sub
out
icebp
xor
push
mov
sahf
and
xorb
icebp
test
mov
xor
dec
jno
pop
xchg
notl
and
cmp
push
pop
push
std
jne
push
outsl
cmc
sub
mov
insl
pop
jp
or
push
adc
mov
inc
jnp
jb
pop
scas
adc
jne
in
jnp
cmc
pushf
cmp
adcb
or
xchg
jnp
out
cwtl
and
add
and
shlb
jnp
sub
mov
and
pusha
cld
mov
mov
cs
dec
fisttpll
dec
or
dec
fstpt
mov
cwtl
stos
repnz
imul
inc
lahf
popa
scas
mov
aad
ret
xchg
les
fdivrl
ljmp
cs
pop
je
jne
pop
cmp
aam
cmp
std
lahf
xchg
test
mov
adc
dec
faddl
or
fadds
inc
test
mov
loope
inc
out
pop
mov
popl
fnsave
pusha
lock
xor
pause
insl
stos
pop
rcll
xor
cmp
adc
mov
stc
ds
scas
arpl
push
pop
test
sub
sti
lret
test
movsl
xchg
dec
das
fwait
sti
xor
and
cmp
mov
pop
pop
inc
fwait
sbb
sub
xlat
dec
dec
mov
leave
push
sub
inc
jne
and
clc
daa
fsubrs
aam
mov
test
decl
jl
sbb
mov
lret
inc
push
fisubl
out
xchg
pop
addr16
adc
xorl
jnp
adc
in
arpl
subb
jmp
sahf
adc
repz
test
adc
mov
cli
jecxz
xchg
daa
fcmovbe
out
adc
in
scas
clc
mov
dec
imul
fwait
xlat
insb
add
mov
out
xchg
push
add
mov
stos
in
data16
test
jnp
pop
cmpsb
push
imul
ljmp
lds
aaa
sbb
aas
mov
inc
push
icebp
jecxz
push
mov
insl
out
cmp
jecxz
imul
es
js
call
or
icebp
and
dec
outsl
fsubrs
mov
xchg
rcl
xor
ljmp
sub
imul
clc
outsb
sub
mov
jbe
cmp
jle
push
aam
jae
out
and
cmp
xchg
fsubp
loope
fsubl
test
mov
pushf
mov
jecxz
outsb
and
or
inc
dec
sub
adc
mov
push
std
push
jge
das
and
mov
aad
pop
jnp
inc
or
test
pop
or
dec
mov
ror
in
add
mov
popf
jns
xchg
popf
jmp
jno
fisubrs
push
add
inc
and
or
adc
popf
aaa
sahf
ss
repnz
dec
mov
mov
mov
adc
int3
cmp
cld
inc
andl
jge
jb
and
cmp
mov
sub
aaa
add
sbb
xor
dec
fistl
jge
int
push
fimuls
mov
scas
in
add
mov
in
push
divl
and
in
xchg
shlb
inc
or
data16
pop
sbb
ds
fs
out
mov
cmp
out
mov
out
cmpsl
stos
jmp
les
xorb
insb
sbb
fs
adc
negb
int3
xchg
call
push
jb
aam
je
lcall
dec
mov
dec
cmp
rorb
adc
test
leave
pop
fsts
mov
xorb
sti
sub
nop
int3
les
sub
push
cmpsb
scas
pop
add
loopne
lock
ja
inc
add
mov
and
xchg
mov
mov
sbb
push
subl
jge
push
leave
stos
aaa
rorl
aas
or
aad
dec
pop
fwait
pop
or
out
push
and
pop
sarl
in
ss
cwtl
lret
sbb
je
mov
mov
cmp
test
push
sub
int
push
testl
je
xchg
jbe
scas
mov
mov
push
cmc
mov
jmp
dec
xchg
mov
cmp
mov
pop
shlb
in
xchg
mov
jae
sub
pushf
repnz
adc
inc
das
js
cmp
xor
mov
mov
or
xchg
jne
dec
mov
pop
adc
je
pop
iret
movsl
sbb
in
out
or
push
fidivrl
xchg
fildll
jmp
dec
mov
cmpsb
cmp
cli
fcoms
aas
or
out
adc
jle
mov
gs
mov
or
jmp
arpl
das
xchg
repz
adc
into
push
lods
popf
sub
cmp
aam
push
push
arpl
cmp
iret
scas
jns
lret
sub
flds
jb
and
arpl
jmp
and
loopne
mov
xor
cmp
stos
mov
movsb
ss
sbb
pop
rcr
pop
in
call
mov
sub
pop
fcoms
dec
mov
sub
or
cmp
ds
push
add
into
je
hlt
in
or
dec
pushl
push
and
pop
xchg
ja
lea
inc
lea
fcoms
cmp
shr
cmc
int
rorb
repnz
mov
sti
mov
ror
rorl
sub
into
hlt
daa
dec
stos
js
inc
rclb
ret
jg
adcb
js
fsubs
bound
iret
lods
push
mov
gs
jl
inc
mov
push
adc
xchg
lods
push
mov
movsb
lcall
add
inc
add
nop
or
sbb
mov
cmp
test
dec
mov
push
xor
iret
test
cmp
mov
out
or
fistpll
add
js
jnp
cmp
xchg
aaa
loopne
adc
inc
cmp
andb
jno,pt
out
cmovg
xor
xchg
mov
push
popf
or
sub
sbb
xchg
pop
mov
ret
sub
pop
mov
mov
mov
mov
mov
pcmpgtd
xchg
jecxz
xchg
mov
mov
jo
les
out
mov
xchg
imul
xor
push
or
mov
test
das
cli
sbb
inc
ds
in
jmp
aas
bound
out
ja
incb
std
ret
or
ss
cmc
call
dec
popa
adc
pusha
movsb
xlat
out
jo
xchg
jno
sahf
jmp
in
decb
fcompl
js
repz
jo
fistps
adc
fwait
cmp
testl
push
adc
and
dec
jb
xor
push
push
and
dec
and
jg
sbb
ret
jle
sbb
ss
pop
call
mov
je
cld
es
xor
ret
pop
add
cmc
push
xchg
mov
sahf
movq
sbb
xchg
xchg
sbb
or
aaa
jmp
sub
cld
std
popa
mov
fcomip
leave
call
loope
rcrb
stos
mov
push
dec
dec
fidivl
fildll
sub
out
scas
es
mov
push
pop
test
sti
jg
dec
dec
cmp
ffreep
out
mov
jecxz
pop
leave
fstl
loopne
add
mov
adc
xchg
cmpsb
or
scas
inc
xchg
mov
test
subb
adc
and
push
hlt
mov
and
enter
divl
sqrtps
cwtl
sbb
fbld
xchg
out
mov
push
sub
cmpsb
xchg
out
repz
push
bound
gs
jg
out
sti
out
fnstsw
fcmovne
mov
add
sub
cmp
cmp
dec
and
mov
mov
sub
xchg
roll
and
xor
mov
scas
xor
pop
xchg
inc
rorb
in
ds
inc
push
dec
test
fiadds
clc
jp
xchg
jl
adc
cmp
jb
movb
inc
arpl
push
nop
mov
cwtl
in
lock
in
out
daa
pop
inc
imul
mov
sarb
push
test
xchg
orl
dec
in
ja
int
aad
push
hlt
jmp
shr
arpl
mov
enter
push
mov
mov
pop
pop
jge
xchg
sbb
inc
and
loop
xlat
andl
lret
or
dec
orps
add
addl
xor
andl
xor
or
inc
mov
cmpl
jl
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
orl
push
add
mov
add
movl
cmp
movl
je
mov
sbb
mov
xor
xorl
xor
add
movl
add
adc
incl
xor
orl
mov
push
xor
adcl
xor
movl
cmpl
je
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
addl
movl
mov
movsbl
andl
mov
inc
mov
cmpl
ja
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
neg
sub
mov
xor
movl
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
orl
movl
mov
or
push
movl
adc
mov
xorl
push
xorl
mov
andl
xor
notl
push
mov
add
xorl
mov
andl
mov
inc
mov
cmpl
jb
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbbl
test
je
and
mov
andl
xor
add
inc
mov
cmpl
jl
jmp
pushl
call
cmpl
jb
mov
or
mov
orl
mov
adc
xor
xor
or
xor
add
mov
addl
mov
xor
add
and
xor
andl
xor
add
inc
mov
cmpl
jg
jmp
push
pushl
push
pushl
call
cmpl
jb
add
movzwl
sbb
mov
mov
mov
and
xor
add
addl
mov
sub
mov
subl
xor
sub
add
adcl
mov
xorl
sub
lea
xor
adcl
xor
movl
cmp
movl
je
andl
xor
or
inc
mov
cmpl
ja
jmp
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
subl
add
cmp
jne
adcl
pushl
adcl
call
mov
sub
mov
andl
mov
inc
mov
cmpl
jl
jmp
pushl
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
mov
orl
xor
add
cmp
je
pushl
andl
pushl
xorl
call
sbbl
mov
or
mov
mov
or
mov
subl
xor
add
movl
cmp
je
movl
cmpl
je
cmpl
jb
jmp
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
sub
mov
adc
mov
movl
cmpl
je
cmpl
jl
jmp
pushl
call
mov
dec
mov
jmp
mov
or
mov
xorl
add
sbbl
mov
mov
mov
xor
mov
add
xor
add
xor
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
or
push
add
push
xor
mov
mov
orl
mov
or
mov
andl
add
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
cmpl
jne
xor
or
inc
mov
jmp
movl
mov
mov
sub
sub
mov
mov
mov
sub
xor
mov
sub
movzwl
and
mov
mov
xorl
sbbl
mov
movl
cmpl
je
cmpl
jge
jmp
call
xor
xor
dec
mov
jmp
mov
movzbl
xor
sub
mov
sub
orl
neg
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
sub
or
mov
orl
sbb
mov
addl
mov
or
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
jmp
push
out
push
jae
jae
das
push
sbb
std
rcrl
jl
pop
jl
sbbl
js
xchg
gs
out
pop
jl
sbb
push
push
aaa
pushf
ss
jbe
adc
lahf
fwait
mov
cmp
outsl
add
adc
jne
popa
shlb
inc
inc
hlt
outsl
dec
adc
leave
lods
dec
outsb
enter
and
xchg
outsb
cmpsb
loopne
aam
mov
add
dec
mov
adc
inc
fbld
pop
mov
cld
sbb
xchg
or
fidivrl
mov
loopne
mov
xlat
push
insl
fcoms
sti
xchg
rcrl
jno
stos
lea
outsb
xor
mov
cmp
push
mov
pusha
push
cwtl
ret
pop
inc
inc
aam
xchg
ja
fimuls
lcall
stos
adc
fcomps
xor
add
rcl
xchg
mov
cmpsb
lret
cmp
dec
add
jno
in
xor
neg
jmp
dec
adc
scas
xchg
outsb
push
call
and
std
push
icebp
xchg
jge
scas
mov
dec
je
mov
clc
imul
mov
loop
mov
int
mov
fucomip
add
into
mov
jno
mov
pop
mov
leave
and
inc
rclb
xor
push
sbb
loopne
movsl
bnd
push
lret
not
pop
push
fldl
dec
cmp
scas
pop
repnz
imul
and
mov
fucomi
andb
fdivs
std
lea
aas
out
orl
jmp
icebp
arpl
pop
das
mov
es
enter
mov
jo
jle
sbb
outsl
xchg
add
or
jae
xor
cmc
mov
lahf
cs
rcrl
inc
fwait
pop
jmp
dec
call
and
aaa
fadds
cmpsb
inc
outsb
mov
adc
mull
push
mov
dec
loop
in
jne
insl
mov
lds
mov
not
int
cs
or
lgs
int
hlt
cmp
add
xorl
mov
in
jg
adcb
pop
addl
pusha
add
cmp
pushf
mov
imulb
cli
imul
xorb
popf
ss
scas
test
lea
and
cmp
mov
push
mov
out
mov
sbb
in
out
arpl
pop
fs
int
aad
jbe
ror
popf
add
jbe
inc
test
jle
dec
or
aam
int3
cli
iret
and
dec
inc
js
pop
pop
pushf
test
int3
pop
out
inc
pop
mov
jne
arpl
es
data16
jl
insb
pop
pop
rclb
ljmp
mov
cmp
xor
lods
inc
sbb
sbb
gs
out
in
fidivrs
fdiv
aaa
xor
pop
push
popa
xchg
shlb
dec
sbb
mov
subb
das
stos
lret
inc
push
pushf
add
mov
out
mov
stc
out
pop
push
inc
mov
into
add
test
dec
cmp
sahf
testl
fimull
sbb
mov
mov
push
bound
pop
lret
mov
test
leave
cmp
es
lea
inc
fadds
dec
adc
hlt
filds
and
push
out
dec
stos
leave
pop
mov
jmp
xor
sbb
jbe
jns
add
movsl
test
std
scas
lahf
and
aas
std
xchg
mov
mov
lahf
jb
sub
inc
adc
leave
mov
xor
outsl
aaa
sarl
jle
test
pop
lret
cmc
xchg
leave
aaa
out
ja
dec
sahf
pop
aad
xor
sub
sbb
xchg
cmpsb
and
inc
scas
dec
add
loop
cmpsl
insl
pop
lock
mov
jecxz
xor
xchg
xchg
inc
mov
xchg
cwtl
cld
or
gs
stos
shl
cmp
fcoms
jle
jae
push
pop
push
stos
into
add
stos
and
dec
add
int
ljmp
xor
pushf
push
hlt
es
adc
xchg
cmpsl
ss
stos
xor
xchg
mov
sbb
xor
into
and
setns
roll
lods
cmp
pop
xor
stos
cmc
mov
adc
and
dec
shlb
out
repz
insl
imul
xchg
xor
leave
mov
insb
fdivl
fsubs
sbb
mov
aas
lcall
or
test
mov
jno
pop
pop
stos
lcall
mov
in
fldl
mov
jnp
pusha
push
add
pop
ja
mov
jl
mov
or
cmpsl
xor
push
outsl
mov
inc
and
pop
add
aas
inc
mov
xchg
mov
fidivl
roll
jne
mov
icebp
out
sti
aas
outsb
inc
ret
das
xchg
cld
repnz
icebp
jle
sbb
xchg
insl
clc
mov
or
pushf
addl
push
xchg
inc
add
in
push
add
insl
jl
xchg
cld
enter
sub
test
inc
cmc
sbb
sbb
data16
dec
rorb
inc
movsb
repz
leave
adc
cmp
sbb
gs
inc
movsb
jbe
pop
jns
in
dec
jmp
add
loope
push
into
mov
sti
gs
or
cltd
cmc
sarb
inc
inc
mov
outsb
movsb
fnsave
fcompl
push
push
inc
cmp
js
mov
fs
out
push
insb
sub
inc
fbstp
imul
stos
inc
mov
xchg
xor
int3
inc
jl
and
clc
out
in
dec
popa
rcrl
sub
shll
clc
les
test
lea
xlat
lods
int3
adc
jp
cmp
pop
or
jp
lods
push
jnp
jno
in
xchg
jns
xlat
clc
sti
mov
and
rclb
sub
add
or
std
addb
stc
fwait
ds
stos
into
imul
es
xor
jecxz
mov
fdivrl
out
push
in
mov
mov
xchg
xor
cmp
stos
mov
fistpll
cmp
stc
pcmpeqw
in
pop
pop
repnz
jb
out
jo
pop
cmp
or
pop
jge
lret
das
scas
sbb
and
clc
mov
cmp
dec
jo
dec
repnz
setge
lds
lock
adc
xchg
sub
dec
mov
add
cld
add
xorl
jmp
mov
int3
cmp
ljmp
cld
jecxz
pop
js
sbb
setge
data16
sti
divl
popf
or
test
stos
outsb
pushf
cmp
xor
push
cmpsb
lock
mov
mov
xchg
mov
cmp
test
push
adc
call
aad
not
cld
stos
lahf
or
out
je
int
shlb
cmp
xor
dec
lcall
cmp
insb
inc
scas
es
mov
js
push
arpl
inc
push
mov
pusha
and
mov
mov
mov
pop
xor
mov
mov
cmc
jno
mov
out
mov
jle
jo
cli
jg
cmp
push
icebp
hlt
lahf
test
pop
push
pop
outsb
xor
mov
add
xor
push
adc
mov
movsl
jnp
sub
dec
or
push
stc
jg
and
arpl
jne
call
mov
jae
sahf
dec
jle
mov
jp
sub
inc
repnz
int
and
pop
aam
test
sub
ds
pusha
repz
xor
lret
in
test
inc
push
les
cmp
sbb
xchg
orb
outsb
das
pop
stos
test
int
out
aad
jae
jnp
lods
or
stc
adc
cwtl
mov
mov
shl
dec
pop
xchg
cmp
mov
jle
mov
mov
cmp
and
fidivrl
mov
mov
sbb
leave
pop
arpl
jae
mov
xchg
lds
cld
push
sub
inc
adc
lock
sbb
movl
sbb
fdivs
sbb
scas
add
pop
test
imul
aam
std
xchg
pop
sub
push
sub
jle
add
or
dec
sbbl
repz
in
jge
loopne
jns
add
xchg
cmp
jp
cmp
mov
mov
arpl
fcomip
jecxz
xchg
jl
jae
sub
and
push
cmpl
xor
mov
sbb
xchg
and
js
mov
pop
lahf
push
mov
add
in
inc
xchg
out
mov
insl
or
test
scas
ret
cmpsl
push
xchg
sub
mov
into
add
std
hlt
std
lcall
dec
mov
ds
in
mov
inc
outsl
popa
xor
jns
inc
dec
adc
and
orl
jbe
fbld
add
push
add
cmp
or
or
leave
outsl
xchg
xchg
fs
imul
std
cmp
aam
mov
mov
mov
inc
pushf
test
lods
iret
js
lret
punpckhdq
or
repnz
lds
push
imul
sbb
mov
jo
or
mov
lea
iret
lods
mov
pushf
add
xor
test
out
mov
stc
sarb
repz
jnp
cmp
ds
dec
stos
nop
fcompl
mov
into
test
data16
push
ja
push
repz
inc
fcompl
stos
or
dec
addr16
testb
out
sbb
fnstsw
jbe
int3
pop
lret
or
repz
popf
pop
xchg
popa
sbb
scas
dec
xor
cmc
ret
add
mov
add
adc
mul
subl
push
sbb
xor
jo
sbb
std
ds
mov
and
test
addr16
pop
test
dec
mov
xor
cltd
inc
in
mov
outsl
push
fs
sub
into
dec
cmp
iret
pop
xchg
jae
push
push
rcl
pop
sbb
add
mov
in
mov
pop
test
inc
ret
fs
int
lea
mov
cs
aad
add
cli
add
stos
fld
or
aaa
jns
std
inc
ds
adc
xor
addr16
fnsave
hlt
pop
mov
dec
sarb
aas
push
dec
sub
fidivl
mov
adc
loop
adc
xchg
sbb
add
add
ljmp
test
fisubrl
xor
inc
push
adc
pop
mov
sbb
lahf
mov
loope
pop
movsl
inc
leave
lods
mov
icebp
mov
adc
stc
lds
sbbb
mov
imul
sbbl
mov
lock
aad
pop
sub
mov
mov
xor
jle
imul
pop
movsl
inc
and
cmp
insb
sub
mov
leave
jbe
mov
adc
stos
mov
mov
cmp
mov
pop
jno
dec
inc
add
xchg
mov
adcl
aam
jns
jl
jb
and
xor
cs
and
push
hlt
jo
jae
pusha
nop
jo
out
cli
adc
lahf
ljmp
aaa
test
popa
mov
imul
xor
flds
clc
mov
pmulhuw
adc
adc
mov
add
gs
adc
bnd
es
pop
push
xchg
test
xlat
repnz
jecxz
mov
cmp
jle
and
cmp
pop
sti
scas
lods
add
enter
mov
lret
ss
js
pusha
lea
incl
popa
shrd
cmp
aad
outsb
push
inc
es
mov
inc
push
add
cltd
jp
flds
xor
test
cmc
adc
mov
push
push
add
and
outsb
add
inc
ficoml
or
pop
call
lds
cmpsl
mov
fimuls
dec
je
repz
aas
inc
bound
inc
push
xor
rcrb
sbb
xlat
fldenv
gs
iret
out
dec
lret
lds
ret
cmp
daa
cmc
inc
ds
pushf
clc
les
lock
xor
fmull
jmp
xchg
mov
xchg
pushf
xchg
inc
lock
jp
call
cmp
test
xchg
test
iret
ret
mov
scas
mov
mov
push
push
cmp
and
mov
jge
cmp
jb
notb
mov
jo
push
jge
in
cmp
ret
icebp
stos
addr16
nop
pop
std
mov
and
inc
ficomps
repz
pop
add
in
jae
push
cmp
fnstcw
inc
loope
sub
rol
cmp
xor
popa
cmpsb
les
sbb
lods
pushl
adc
mov
fucomi
bound
inc
sbb
outsl
clc
ds
cmp
dec
mov
jae
ds
jge
hlt
sbb
inc
incl
pop
out
popa
pop
mov
stc
daa
jg
rolb
lret
push
sbb
rcrb
clc
cmc
fisttpl
dec
lds
cs
dec
mov
cs
or
add
das
icebp
add
pop
out
aam
jo
je
ljmp
xor
jg
pop
imul
int
xor
push
push
out
and
scas
push
call
cmp
add
jbe
xchg
or
cmp
jns
pushf
mov
fcmovu
loope
outsl
insb
lock
adc
movsl
imulb
vpcomd
les
fcompl
push
popf
test
xchg
mov
in
adc
hlt
cli
adc
xchg
and
sarb
addl
arpl
dec
push
aam
mov
push
or
fcomi
pop
shlb
mov
dec
ja
inc
adc
ret
cld
dec
push
adc
dec
add
and
into
xor
pop
push
sbb
pop
addr16
out
mov
lret
jb
out
icebp
xor
adc
push
fcomps
inc
dec
dec
and
mov
cmp
icebp
inc
mov
movsb
sbb
aam
mov
push
mov
dec
leave
pop
xchg
or
jo
loopne
aad
repnz
iret
add
adc
mov
loopne
stos
vandnps
jg
pop
pop
sarb
mov
out
xor
loopne
loope
mov
addr16
pop
aaa
xchg
stc
inc
jbe
aam
mov
sub
dec
fisttpl
jp
jp
xorb
pop
fsubrp
cmp
sbb
mov
test
stos
push
dec
inc
xor
jbe
loope
adc
cmp
sahf
cmp
daa
dec
cmp
fstps
xchg
add
dec
mov
mov
roll
into
pop
add
mov
cmp
cltd
mov
add
jns
mov
inc
scas
or
mov
add
mov
fwait
push
push
loop
decb
dec
aas
cmpl
mov
or
add
repz
lcall
testl
or
scas
fnsave
or
test
mulb
pop
aas
popf
int
jae
or
imul
je
je
subb
mov
fidivrs
sbb
mov
and
negb
jno
lret
orb
pop
xor
mov
pop
fsts
jae
push
xchg
cs
xchg
hlt
push
sub
mov
sbb
and
addb
loop
jecxz
fwait
add
xchg
je
push
or
cld
sbb
rcll
enter
cs
loopne
gs
mov
xchg
lret
mov
jmp
clc
hlt
jmp
inc
fs
mov
int3
adc
mov
icebp
xchg
enter
mov
or
adc
xchg
es
mov
push
jmp
mov
dec
dec
xchg
das
cli
sahf
xchg
pop
mov
sbb
cmp
inc
lret
test
ja
mov
les
mov
ljmp
addl
ljmp
mov
dec
in
pop
lret
aad
mov
inc
xor
push
out
subb
mov
stc
cld
imul
outsb
sbb
adc
data16
loopne
adc
or
sbb
out
xor
add
sub
in
bound
cmpsb
mov
xor
icebp
inc
insl
pop
subb
sub
push
pop
cmp
xchg
adc
movsl
inc
lahf
test
outsb
add
mov
aad
daa
xchg
push
out
mov
icebp
in
movsl
push
ja
or
cwtl
or
pop
inc
pop
xchg
mov
popf
out
or
cmpsl
cmp
mov
add
gs
fnstsw
and
mov
popf
outsb
fwait
std
cmpl
jnp
cltd
incl
xor
mov
out
push
outsl
scas
push
cli
mov
in
push
mov
dec
jnp
jae
test
mov
pusha
jge
subl
out
or
xchg
pop
in
ds
les
js
scas
mov
cwtl
pslld
repnz
sub
js
shlb
dec
orl
sbb
ret
mov
call
into
push
enter
jl
lock
cltd
add
not
push
adc
lahf
daa
iret
jge
xchg
dec
xchg
add
jmp
fidivs
out
iret
add
gs
imul
xlat
ljmp
push
inc
mov
mov
or
rcl
sbb
jo
in
mov
into
arpl
in
repnz
or
out
mov
sub
sbb
stos
cld
pop
mov
arpl
sub
cmpsb
dec
cmp
pop
sub
inc
pop
xor
mov
or
inc
fnstsw
add
xchg
xchg
movb
xor
jge
daa
ret
and
inc
dec
push
sbb
cld
sub
xchg
adc
xlat
out
pop
jle
shlb
add
mov
push
stos
in
xor
les
mov
add
stos
push
dec
hlt
jg
xchg
push
in
shrl
sub
je
lods
cltd
and
lret
mov
jb
js
mov
cmc
cli
dec
add
jg
xchg
adc
sub
imul
pop
outsb
and
outsl
in
test
dec
and
cmpsl
gs
dec
rolb
lahf
pushf
add
movsb
cmp
push
in
pop
lret
hlt
lea
add
clc
xor
jmp
push
inc
stos
iret
dec
xor
lcall
test
fidivrl
sbb
scas
aaa
les
jo
mov
loope
outsl
or
adc
rorb
arpl
mov
xchg
sbb
mov
mov
push
mov
test
movsl
pushl
adc
add
lods
jp
mov
js
push
sub
fcomps
jmp
sub
xchg
or
aas
sub
push
adc
leave
add
push
add
cmc
imul
cmp
loope
das
sti
mov
xchg
mov
addr16
arpl
insl
mov
fstl
cmp
rclb
jle
out
adc
lods
mov
push
adc
pop
fucomp
fwait
sub
insb
dec
es
inc
xchg
sbb
lcall
jmp
fs
mov
stc
fidivrs
pop
sub
imul
scas
ret
mov
aam
adc
jae
push
ret
fcoml
xor
addr16
fwait
mov
pop
xchg
mov
out
movsb
jae
mov
outsb
push
mov
enter
pushf
stos
mov
addl
call
sbb
sbb
dec
mov
into
imul
push
push
xor
ret
lret
mov
add
or
mull
insl
mov
pop
mov
mov
rclb
pushf
test
filds
and
dec
and
pop
xchg
sub
sbb
xchg
stos
fistpl
insl
mov
and
ret
dec
mov
sbb
jmp
out
mov
sbb
adcb
andl
negb
nop
mov
aad
xchg
or
dec
mov
push
add
pushf
push
jb
inc
jae
fidivrs
push
dec
and
iret
scas
xor
clc
lods
loopne
repz
inc
mov
jg
pop
pop
outsb
enter
mov
mov
inc
cmp
mov
push
jnp
dec
jne
cmp
fwait
inc
ret
adc
aam
rorl
daa
outsb
push
iret
sbb
into
inc
and
popf
sbb
jge
lods
sbb
daa
or
inc
adc
aas
cs
lods
loope
ljmp
addl
mov
pop
cmpsb
xlat
add
iret
push
notl
out
mov
das
mov
xor
stos
out
jb
sbb
add
mov
cmp
loope
xchg
inc
dec
ljmp
das
mov
add
xchg
fsubl
fdivp
clc
add
xchg
sub
int
mov
loopne
adc
jecxz
nop
cmpsb
xor
push
xchg
mov
popf
cmp
fwait
add
cs
jp
pop
arpl
sti
int3
rcrl
jp
movsl
das
dec
add
mov
ret
ljmp
int3
push
sub
hlt
xchg
lahf
fs
repz
jge
or
jp
mov
loop
mov
fsubs
fnstcw
mov
bound
mov
sub
pop
popa
psrlw
rolb
mov
push
jle
adc
xchg
into
jae
test
push
clc
push
sar
push
pop
xlat
add
in
loopne
daa
fidivs
add
pop
mov
popa
jns
add
xor
cmp
pop
testl
mov
pushf
cmp
std
sbb
dec
xor
sbb
adc
pop
data16
rcr
imul
cmp
dec
inc
inc
pusha
ret
lahf
inc
add
xchg
cmp
pusha
mov
jl
pop
jo
pop
push
jle
or
xchg
push
pop
jbe
push
pushf
sub
xchg
test
mov
jecxz
test
jg
mov
add
outsl
out
pop
xlat
lret
arpl
es
addr16
pop
mov
adc
push
jle
cmpsl
dec
inc
mov
loopne
push
jne
pop
sbb
push
leave
and
ljmp
pop
cmp
xchg
cli
pop
sub
and
push
xor
add
push
jns
xchg
xchg
rcrl
adc
mov
fwait
mov
push
add
popf
fmul
mov
sub
mov
xchg
les
in
out
inc
ret
pop
int
leave
cltd
add
lods
outsb
jle
js
cmpsl
push
popf
lahf
or
shrl
arpl
orl
cld
andb
xchg
shl
sub
push
inc
movb
rol
gs
push
pop
mov
xchg
mov
add
loope
sub
lods
hlt
cmp
dec
rcrb
out
xchg
int3
insb
mov
les
mov
lods
sub
adc
in
pop
jge
ja
aad
cli
das
mov
hlt
ficoml
ret
xor
adc
cmpsl
push
adc
dec
sahf
sub
push
sbb
aas
pop
pop
jbe
sub
mov
jge
xchg
stc
sahf
cmc
xchg
jne
loopne
cmpsb
in
into
rcrb
push
xchg
mov
jl
mov
push
ds
sbb
sub
insb
mov
add
mov
push
insl
cmp
mov
cmp
add
dec
push
imul
cmpsb
and
sub
mov
iret
xchg
pop
xorb
inc
fistpll
pop
movsl
insb
sub
scas
cmc
jbe
sub
std
mov
test
sbb
jg
arpl
cltd
xchg
mov
pop
xchg
push
mov
push
in
inc
mov
or
inc
cmp
ds
lret
jecxz
adc
sbb
shll
push
xor
cmpb
dec
test
mov
add
jecxz
pop
lods
and
popa
int
sub
pop
in
ret
lods
xor
adc
cmp
xor
jns
les
and
add
out
scas
arpl
jl
and
jns
xor
mov
ljmp
push
adc
mov
pushf
mov
jmp
pop
cmp
lea
push
inc
jp
notb
pop
add
xchg
or
out
xor
outsb
push
cmc
sub
adc
push
sub
mov
icebp
jp
iret
cmp
add
inc
mov
dec
pop
add
push
mov
dec
sub
dec
adc
mov
mov
test
add
and
mov
je
pop
or
cmc
loope
je
add
test
test
imul
out
gs
inc
lret
sbb
pop
out
lret
in
popf
rorl
sub
daa
idivb
sub
movsb
mov
sti
jle
mov
out
xor
jmp
scas
fildl
push
cld
or
jl
mov
inc
lds
scas
jle
ret
pop
ljmp
gs
jno
or
pushf
sti
mov
push
shll
jbe
pop
ja
mov
in
negl
cltd
ljmp
frstor
in
mov
xchg
movsb
push
jge
popf
repz
cmp
xor
inc
mov
jle
bound
insl
repz
cmp
mov
loope
push
stos
fmuls
sbb
push
lea
in
aam
and
pop
dec
cmpb
mov
inc
rcr
bound
mov
jb
arpl
adc
jno
fs
or
insb
mov
pop
sarb
insl
dec
push
test
mov
cltd
mov
insl
fstps
push
rorl
adc
dec
jns
jo
aad
dec
sahf
mov
and
cmpb
pcmpeqb
jne
jle
pop
mov
xor
and
shll
jb
sti
ss
jmp
dec
gs
pop
adc
mov
push
adc
jle
rcrl
inc
aad
sbb
mov
xor
movsl
shr
enter
adc
cmp
jns
jae
mov
out
frstor
int
mov
bound
repz
adc
fildll
xor
inc
jne
cli
mov
call
mov
inc
mov
sbb
mov
adc
icebp
xor
cld
sub
mov
test
rorl
pop
fwait
dec
mov
mov
lahf
shrb
shlb
mov
cld
cltd
xchg
sbb
int3
xor
mov
sahf
std
cmc
pop
mov
pavgw
stos
int
xor
jne
mulb
pop
arpl
cmp
scas
lret
mov
xchg
test
in
jb
sbb
mov
in
mov
xchg
pop
divl
stos
ret
pop
adc
sti
daa
test
jo
push
push
mov
dec
in
mov
or
int3
pop
lret
leave
jo
jp
aas
add
in
xlat
jle
je
jl
sbb
adc
or
int
dec
adc
daa
ret
sahf
rcll
adc
or
cmpsb
std
cltd
int3
call
mov
cmpsl
call
push
pextrw
lcall
and
ds
inc
jne
push
int3
pop
or
dec
dec
insw
jg
jmp
xor
inc
movsb
jne
repnz
daa
add
push
push
sahf
lods
test
mov
outsb
popa
add
adc
dec
pop
mov
hlt
xorl
repnz
sti
mov
out
adc
cmp
jl
vpmacssdql
das
mov
or
fbld
xor
in
cmp
adc
jmp
mov
push
sbb
pusha
xchg
xor
cmp
xlat
incb
mov
gs
or
fadds
sti
mov
xchg
pop
mov
dec
sub
scas
icebp
mov
int
cltd
dec
subb
push
pop
scas
jle
clc
jb
cltd
popl
imul
jo
dec
jge
fnsave
int
stos
mov
add
lock
jl
sub
inc
imul
push
mov
push
es
pop
inc
adc
adc
sar
xlat
lahf
xchg
xor
and
loop
loope
das
mov
and
and
xor
push
sbb
imul
mov
dec
push
sti
xlat
lcall
gs
or
ja
sarl
xacquire
inc
push
cld
mov
dec
sti
not
push
arpl
clc
inc
adc
xor
sahf
cwtl
das
push
insb
pop
xchg
push
dec
cmp
lcall
and
jo
std
xchg
test
mov
shl
add
je
mov
jnp
mov
mov
sbb
data16
orb
add
xor
pop
imul
push
mov
or
inc
fisttpll
enter
ret
xor
mov
js
dec
fcmovb
mov
imull
shrl
cmpsb
rorb
and
fsubs
lods
jmp
xchg
pop
daa
jb
adc
sub
lcall
shr
and
dec
ss
pop
mov
mov
adc
cmp
loopne
int
filds
lock
cmpsb
das
lret
push
fdecstp
sbb
mov
nop
dec
data16
push
cmp
add
adc
mov
cwtl
mov
cmp
test
push
push
pop
inc
xlat
into
outsl
out
dec
push
jl
pop
mov
ds
xchg
insb
addl
dec
adcl
jns
imul
jp
std
mov
and
insl
pop
xor
and
sub
inc
xor
orb
push
jmp
add
pop
mov
push
stos
and
iret
fsubrs
mov
rolb
rorl
fistl
mov
inc
rcrb
add
jg
imul
int
push
add
cwtl
sbb
cli
mov
icebp
adc
pop
sahf
ret
fwait
popa
push
scas
insb
push
jnp
mov
lods
sub
inc
test
es
mov
mov
ljmp
mov
mov
in
clc
ja
cmc
cltd
test
lock
sub
int3
rcrb
dec
xor
out
lahf
and
pushf
jne
adc
repnz
inc
push
jge
movsl
jno
pop
cmp
arpl
xchg
rcll
add
pop
and
jmp
int
ret
outsl
xchg
adc
xchg
jae
inc
jg
js
and
push
fstps
cmc
xchg
jbe
pushf
and
xchg
repnz
scas
mov
aad
jno
cs
mov
sbb
jnp
lods
sbb
scas
movl
rorl
pop
mov
sub
mov
pop
pusha
lods
jnp
imul
hlt
ds
imul
xchg
faddl
into
adc
leave
stc
push
lods
jae
xlat
push
add
xchg
movsl
mov
cwtl
mov
cmp
fsubp
xchg
test
xchg
movsl
loop
es
xchg
xchg
invd
cmp
pop
mov
jne
xchg
sbb
mov
jb
mov
sbb
fiadds
jmp
mov
jmp
add
push
sbb
idivl
cmc
add
pushl
je
inc
pop
add
add
rcr
aad
xchg
mov
test
pushf
or
pop
movsb
dec
and
and
dec
fdivp
clc
and
movsl
xor
mov
mov
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
lea
adc
mov
adc
push
xor
mov
xor
mov
lea
adc
mov
movl
cmpl
je
cmpl
jg
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
xor
add
adcl
mov
subl
mov
sbb
mov
orl
mov
addl
add
push
mov
mov
andl
xor
xor
inc
mov
cmpl
jle
jmp
push
call
cmpl
jb
mov
mov
adcl
xor
mov
add
movl
cmp
movl
je
movl
mov
movl
jmp
mov
cmp
jne
movl
push
jmp
mov
mov
cmp
jne
sub
mov
xor
movl
cmpl
je
cmpl
jl
jmp
pushl
call
mov
dec
mov
jmp
add
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
and
mov
mov
or
mov
adcl
xor
adcl
add
xorl
imul
mov
andl
xor
sbbl
add
movl
cmp
mov
movl
push
movl
je
movl
cmpl
je
cmpl
jb
jmp
push
push
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
mov
mov
xor
mov
mov
andl
xor
addl
add
xorl
imul
movl
mov
jmp
movl
cmpl
je
cmpl
ja
jmp
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
jmp
lahf
xchg
jle
emms
xchg
ljmp
test
pop
jl
into
nop
cmp
imul
insb
dec
sbb
shlb
into
push
adc
icebp
xrelease
sub
rcll
xor
pushf
mov
or
sbb
sbb
jb
outsb
sbb
lret
fsubrl
out
xor
gs
mov
xchg
pop
fstl
push
add
iret
outsl
enter
iret
movb
loop
sbbl
js
push
and
lcall
inc
push
adc
xchg
jbe
lods
shrl
adc
dec
rcrl
sbb
bound
push
push
mov
mov
lcall
pushf
xor
in
add
cmp
xchg
lea
repnz
popa
jl
push
or
es
xor
sub
jbe
fadds
mov
fisttpl
cmpsl
xlat
pop
pop
lcall
cmpsl
mov
in
ja
clc
sbbb
pop
xor
mov
js
in
ficompl
lea
mov
les
out
fisttpll
arpl
ss
cmc
pop
or
gs
lds
dec
in
aad
sub
and
sub
xchg
cmp
add
xchg
fcoml
inc
loopne
cmpsl
xchg
jns
stos
imul
sbb
lahf
sbb
add
xchg
frstor
daa
loopw
rcll
jge
repz
xchg
aaa
cmp
sub
icebp
xchg
add
and
mov
mov
inc
mov
cmp
mov
mov
fcoml
mov
xchg
outsb
mov
js
rolb
outsl
test
xor
leave
iret
xchg
sbb
mov
mov
dec
lods
sub
push
mov
sub
and
inc
cmp
mov
add
push
jnp
decb
mov
dec
sub
sub
jmp
add
faddp
xchg
dec
jnp
pop
lret
ret
in
sbb
das
outsb
cld
ror
xchg
jmp
inc
fcmovb
jg
cmpsl
sub
int3
push
rcrl
lcall
or
jae
jo
xchg
add
mov
movsl
xlat
movsl
cli
and
out
adc
push
xchg
das
mov
sbb
outsl
sbb
adc
and
test
sti
cwtl
mov
mov
pop
dec
add
sbb
mov
jo
popf
in
ret
xchg
sbb
std
lcall
sbb
and
arpl
push
inc
mov
fadd
addr16
mov
dec
ljmp
shll
imul
mulb
mov
test
xor
xlat
icebp
popa
add
push
pusha
aas
inc
sbb
mov
out
inc
insb
lods
mov
in
pop
fidivl
jle
mov
jge
mov
inc
movsl
add
dec
popa
xor
adc
push
insl
jmp
inc
ja
push
lds
push
cmp
jo
or
enter
push
push
adc
mov
aam
pop
movsl
daa
lea
sbb
pop
pop
sbb
gs
pop
fbstp
cmp
xchg
lcall
stos
out
push
rcr
sbb
cwtl
mov
xlat
fldcw
push
fists
mov
pop
inc
imul
jp
sbb
pop
les
push
add
aad
lahf
jne
sbb
in
sub
ret
inc
test
mov
fwait
cmp
ret
cmpb
fcoml
jb
mov
pop
adc
pop
jecxz
loopne
jecxz
out
movsl
xchg
push
and
dec
inc
mov
lret
daa
test
or
pop
jl
dec
xchg
cwtl
and
insl
xlat
cmc
test
fcomi
mov
inc
in
xor
add
pop
pop
push
push
add
lock
mov
mov
jne
js
fucomi
sub
xor
in
xor
mov
stc
xchg
outsl
mov
and
insl
dec
adc
jle
les
xor
js
jle
sbb
mov
fisubs
xchg
fsubrl
or
push
cld
xchg
lock
push
nop
fldenv
push
mov
lds
mov
ds
sub
cmpsb
dec
movsb
mov
push
push
test
and
sarb
inc
inc
inc
mov
push
in
push
xor
jo
or
shr
adc
enter
cli
stc
shlb
mov
popa
ficoms
push
push
popa
lea
arpl
movsb
lahf
adc
pop
mov
inc
mov
pop
pushf
lret
lret
fsubs
mov
scas
and
repnz
iret
bnd
add
rolb
sub
out
add
and
lahf
xchg
inc
cmpsb
sub
icebp
dec
out
sub
ss
xchg
sub
jo
ja
aas
das
pop
add
dec
pop
and
sarb
fs
movsl
cpuid
xchg
add
ja
cs
xchg
and
jp
mov
mov
push
fcomp
in
ret
leave
mov
xor
roll
pop
gs
mov
scas
or
pop
add
adc
jmp
repnz
add
jno
cmovno
jecxz
add
int3
punpckhwd
xchg
outsl
frstor
or
es
jb
repnz
mov
pop
dec
sbb
xchg
inc
mov
scas
lock
ret
jo
data16
push
lcall
cmp
jb
mov
jle
nop
repnz
cwtl
adc
pusha
into
test
loope
sbb
bound
inc
mov
inc
ret
repz
in
push
jmp
dec
mov
add
mov
das
inc
call
icebp
out
jo
dec
inc
movsl
and
push
sbb
notb
cmp
and
test
jnp
mov
mov
roll
out
dec
lret
sub
cmp
je
xor
dec
js
lcall
cmp
roll
notl
inc
jg
cmp
mov
test
or
sub
into
in
push
clc
repz
xchg
in
iret
mov
clc
xchg
pop
mov
add
cmp
mov
insl
es
adc
aaa
adc
xor
jmp
stc
sub
pop
nop
into
sarl
lods
mov
mov
cmpl
cs
jge
sub
lock
adc
mov
and
into
mov
mov
inc
lcall
cltd
jmp
mov
push
push
dec
lods
out
gs
lret
js
scas
call
mov
cmc
push
and
pop
xor
nop
push
pushfw
jb
xchg
sbb
enter
repnz
and
negb
out
leave
mov
je
sti
and
add
out
idivb
cmp
lcall
mov
adc
inc
sub
jbe
stc
or
sub
inc
pop
arpl
and
dec
sbb
push
xor
orl
testb
jno
test
inc
sbb
fstp
mov
dec
daa
xchg
nop
mov
add
pinsrw
sbb
xchg
push
dec
mov
nop
dec
insl
xor
mov
or
xchg
sbb
mov
jg
in
xchg
cmpsl
enter
push
fsts
sbb
cmpsb
aam
jbe
sbbb
repz
ss
mov
jns
movsl
sti
dec
cli
es
xchg
fadds
push
and
or
adc
mov
sbb
adc
cmpsb
xorb
sbb
push
lret
vmread
repnz
inc
outsl
push
std
cmp
adc
in
scas
mov
fidivrs
jno
dec
jno
rcr
pusha
addr16
mov
int
cmp
dec
and
sti
mov
add
push
outsl
pop
or
and
and
add
jp
jo
aas
iret
aas
adc
scas
jg
aas
pop
imul
les
fwait
pop
xchg
adc
add
hlt
gs
xor
cld
and
mov
mov
push
add
movsl
lea
in
xor
imul
xor
sarl
mov
cmpsl
adc
addl
aas
scas
stos
rcrb
jp
mov
call
jmp
mov
fs
push
je
adc
jo
inc
push
mov
jmp
cwtl
imul
call
inc
push
es
and
addr16
xchg
pop
stos
xor
stos
push
xor
or
das
ja
out
inc
aaa
cltd
push
fiaddl
xchg
mov
pusha
gs
push
xorb
stos
cmp
sub
cwtl
shlb
sub
addb
cmp
rcrl
scas
insl
dec
mov
inc
mov
std
mov
dec
jae
sbb
cmp
push
cwtl
jmp
les
mov
orl
sbb
aas
enter
push
lcall
cmp
push
test
add
and
imul
dec
xchg
mov
mov
out
inc
je
lds
stc
push
push
out
daa
and
xchg
sub
mov
and
mov
jno
repnz
xchg
into
arpl
ds
and
loopne
mov
ja
sbb
aad
mov
sub
mov
mov
adc
cmp
pushf
jne
dec
imul
adc
scas
movsl
xchg
insb
sub
push
fcomi
cwtl
test
lcall
mov
push
xchg
cmp
jg
sub
mov
lcall
xor
push
xchg
add
aas
scas
pusha
movsb
or
leave
loopne
cmpsl
jmp
mov
jmp
cmpsb
out
cmp
push
bound
and
mov
jg
jg
xchg
test
or
daa
mov
adc
les
pop
lcall
push
push
xor
das
pop
cltd
jl
or
and
lret
jae
sti
fxch
stc
xor
icebp
sub
popa
mov
adc
pop
ja
add
mov
dec
mov
jns
mov
mov
pop
xchg
pusha
mov
fnstenv
xchg
push
in
insb
filds
loope
lods
popf
aad
xor
mov
call
test
cmp
test
daa
gs
mov
mov
inc
scas
pop
fstl
mov
mov
sbb
push
mov
ljmp
dec
inc
mov
cmp
dec
gs
pop
stos
dec
jecxz
dec
mov
data16
or
outsb
hlt
sti
adc
aad
add
sub
xchg
lahf
cmp
fadds
xchg
ss
xor
incl
pop
cmpsl
pop
pushf
imul
orl
mov
jbe
jno
jno
stos
inc
and
in
push
les
sbb
jno
add
dec
sbb
adc
pusha
orb
pop
dec
aas
xlat
jb
out
insb
adc
mov
dec
cmp
mov
push
mov
adc
lea
call
orb
mov
jmp
sub
hlt
jns
nop
mov
lcall
cli
clc
xor
and
push
xchg
pop
int
cmp
or
sbbb
mov
xchg
outsl
pop
push
sbb
inc
pop
outsl
cmc
sub
imul
push
mov
fstps
lahf
scas
sub
dec
xor
pop
and
jecxz
pop
scas
mov
mov
jo
addb
arpl
xchg
jo
or
push
dec
xchg
scas
and
es
into
adc
xor
xlat
cmp
aaa
out
xor
call
sub
adc
lcall
dec
ret
xchg
fnsave
or
imul
lock
mov
add
dec
jbe
bound
movsl
sbb
lret
int3
adc
mov
test
jb
and
and
xlat
cmpb
rcr
cld
rolb
push
cmp
jmp
mov
popa
add
les
in
hlt
test
cmp
pop
cltd
xor
mov
xchg
sbbl
xor
lock
dec
and
loope
sub
and
outsl
rorl
rcll
loope
sbb
mov
scas
mov
test
ja
jle
sbb
xchg
les
stos
xchg
aad
jnp
adc
scas
repz
addr16
cmp
mov
test
iret
jl
mov
dec
in
and
pop
inc
xchg
movsl
push
or
vmovupd
cpuid
xor
lods
out
mov
scas
loope
sbb
popf
lds
popa
insl
ljmp
push
divl
sub
or
mov
xchg
hlt
std
xchg
jne
jo
cmpb
lcall
mov
cmp
cli
sub
and
mov
js
inc
and
out
pop
je
pop
adc
and
pop
insb
push
sub
test
mov
push
mov
out
push
dec
pop
repnz
je
incl
into
or
fcompl
dec
test
imul
sbb
sbb
fsubrp
je
movsl
fwait
sub
loopne
cld
or
nop
arpl
jbe
std
movsl
shll
mov
pop
xchg
movsl
inc
cmp
fbld
fstl
pop
test
jb
xlat
mov
jecxz
incl
out
mov
adc
add
data16
mov
sub
adc
mov
mov
and
popf
aad
jecxz
rcrb
fs
cmp
or
lcall
jae
push
xchg
push
sbb
add
lahf
push
movsb
iret
loop
cs
jmp
aam
push
lds
cld
es
jbe
jne
xchg
sub
ret
je
enter
push
into
cwtl
xor
xor
stos
cmp
add
rorl
daa
push
push
mov
xchg
inc
inc
fidivrl
cmp
dec
push
xor
mov
fsubl
add
sub
daa
add
inc
cli
push
dec
sbb
mov
adc
and
push
scas
jmp
test
loopne
and
nop
cmpsl
div
jle
sub
xchg
pop
inc
pushf
ret
inc
dec
push
jecxz
pop
cmp
addr16
je
jecxz
push
shlb
push
ss
push
adcb
aaa
cmp
adc
mov
pop
or
lea
fbld
adc
xchg
push
xchg
xchg
xchg
xor
sub
ss
enter
dec
and
mov
or
nop
jp
adc
xor
inc
pushf
outsb
lret
inc
rclb
mov
xor
jnp
loop
add
pop
jne
adc
in
aaa
mov
mov
xor
dec
pop
scas
ficoms
cmpsb
jmp
aaa
sbb
xchg
mov
clc
cmp
aas
sbb
add
xor
xor
mov
dec
inc
mov
pop
in
dec
add
in
int3
sar
xchg
jmp
dec
mov
stos
iret
adc
ds
scas
into
adc
pusha
add
pushaw
icebp
mov
orb
mov
dec
sub
sar
jg
or
push
push
add
push
lahf
mov
mov
std
adc
jno
sti
adc
test
dec
in
mov
sub
jmp
or
idivl
hlt
loope
ds
sbb
pop
aas
repnz
dec
inc
cmp
lods
mov
xor
and
adc
push
jle
out
sahf
adc
pop
adc
pop
push
jb
fnstsw
push
xor
xor
pushf
add
in
ret
jns
daa
int
mov
adc
push
or
and
out
mov
push
iret
fldt
push
je
xor
mov
insb
sti
cmp
ljmp
pop
jecxz
roll
es
sbb
xchg
es
ljmp
or
fwait
loop
sub
test
jno
and
jg
daa
cmpsb
lret
mov
lret
or
mov
and
loopne
decl
inc
lods
test
add
lea
jp
addr16
mov
ljmp
xor
jae
push
and
adc
push
and
lret
adc
cmp
mov
pop
cli
cmp
sarb
fstpl
xlat
mov
sbb
out
into
mov
idivl
push
cs
jmp
sarl
xor
inc
mov
outsl
xchg
pop
pop
jno
mov
mov
fnstenv
cmp
mov
pop
std
mov
and
lock
outsb
jle
mov
xor
cmpsl
and
sbb
rcrl
and
mov
mov
jnp
sub
dec
inc
adc
push
das
sub
or
out
jnp
inc
or
test
fcmovne
stc
gs
rol
pusha
xchg
mov
dec
out
cmc
cmpsl
loopne
or
rcrb
pusha
lahf
out
add
xchg
add
xchg
mov
dec
ss
adc
in
mov
sbb
add
mov
jp
jge
pop
or
test
xchg
jbe
fsubrs
in
jmp
test
test
rcll
add
mov
xchg
lret
or
pop
je
push
xorb
es
jg
jge
out
or
ja
rcrl
mov
int3
dec
pop
mov
cmpsb
jecxz
xchg
adc
mov
fucomp
and
pushf
repz
fninit
cmp
push
aas
cmp
push
das
aaa
cmp
inc
jo
mov
mov
and
les
push
xlat
dec
mov
mov
jnp
fst
icebp
mov
addr16
js
or
clc
or
cmpsl
jmp
pop
or
stos
andb
add
xchg
sarl
mov
lods
outsb
mov
lcall
and
mov
and
frstor
adc
in
cmpsb
add
rcrb
hlt
adc
fcmove
push
ret
mov
movsb
cs
outsb
andl
fs
jmp
cmp
aaa
or
fstpl
scas
mov
aaa
jns
in
sbbl
mov
jne
sub
mov
xor
sbb
les
mov
loope
leave
jecxz
push
pop
cmp
xchg
das
mov
arpl
aad
fsubr
add
cbtw
jp
in
int
outsl
sbb
pop
xchg
pop
sbb
push
jnp
nop
ret
loop
loopne
mov
jge
mov
in
mov
fs
sub
mov
mov
sbb
ret
mov
es
sti
jbe
pop
mov
js
inc
xchg
gs
cwtl
sub
inc
push
andl
xlat
push
sbb
jbe
arpl
outsb
pop
xor
mov
pop
mov
je
dec
jbe
mov
stos
and
in
fadds
ds
sub
mov
cmp
xor
es
or
or
push
xor
testl
jo
test
mov
or
pusha
xor
and
inc
loop
es
add
mov
jl
adc
jnp
arpl
add
aaa
out
cmp
je
push
xlat
test
mov
les
test
nop
xlat
cmp
add
sbb
xor
loope
pop
mov
xchg
js
mov
cld
lcall
repnz
es
std
mov
and
xchg
int3
push
daa
xchg
adc
push
and
jmp
cmp
cmpsb
sbb
nop
ficompl
xorl
insb
lock
inc
test
push
jns
add
mov
mov
mov
test
pop
insl
sub
xchg
mov
cmc
xchg
pop
js
pop
loopne
div
shlb
in
sahf
test
xor
aaa
add
cli
pushl
jge
xchg
shll
subb
jle
dec
out
mov
addr16
sub
mov
aaa
scas
int
sarw
inc
cld
and
dec
add
aad
les
xor
subb
inc
sahf
mov
jge
mov
and
xchg
nop
inc
out
cmpl
pop
or
jbe
int
push
out
aad
fisttpl
adc
stos
add
add
adc
adc
stos
inc
insb
fdivrl
dec
sub
mov
test
lahf
ds
inc
fucomp
xor
cmpl
sub
nop
or
sub
push
lods
lds
js
lret
andl
outsl
adc
clc
mov
mov
adc
sbbb
mov
lahf
pop
dec
into
ss
push
jecxz
or
cld
xor
fcmovne
imull
movsb
mov
int3
mov
adc
mov
icebp
dec
pop
lahf
sbb
addb
pop
aaa
stos
lods
andl
and
call
jae
iret
mov
movsl
sub
daa
dec
jnp
sbb
push
shr
adc
insb
push
xor
jns
dec
outsl
jmp
push
push
or
xchg
mov
jl
bnd
inc
subb
inc
insb
ficoms
inc
je
daa
or
enter
push
lods
stos
sbb
inc
push
adc
add
sub
jle
fmulp
sub
movsb
lea
stos
jl
pavgw
in
lret
fwait
add
lea
push
jmp
je
insl
lret
into
jmp
dec
rorl
popf
out
movsl
sbb
jae
xlat
dec
dec
ret
test
gs
push
and
sbb
pop
mov
stos
pop
cltd
ss
int
mov
ss
or
lret
jp
pop
pop
or
pop
aad
js
inc
dec
lcall
xchg
sbb
sbb
in
das
ficomps
lcall
int
xor
sahf
daa
and
jb,pn
pop
movsb
popf
adc
dec
mov
int
pop
mov
mov
repnz
sub
add
mov
outsb
out
sbb
mov
xchg
lods
leave
loopne
xor
add
imulb
lret
mov
dec
gs
xor
adc
roll
int
dec
or
and
leave
dec
mov
stc
ja
movq
push
mov
mov
pop
pop
pop
daa
xchg
push
into
xchg
hlt
jbe
outsl
push
orl
or
sbbl
add
divl
jo
lds
xchg
xor
lcall
out
outsl
push
sarl
jne
add
mov
mov
daa
lock
cmc
and
cmp
xchg
stos
stc
push
sbb
sbbb
push
inc
adc
sbb
es
pop
pop
mov
lret
sahf
jmp
jbe
les
fwait
aad
push
test
jno
loopne
mov
xchg
lds
jns
adc
jp
andl
xchg
jns
lds
cmp
xor
bound
pushf
pop
fildll
mov
enter
xchg
push
movsl
mov
adc
push
jnp
dec
inc
pop
mov
dec
jl
push
adc
out
scas
aaa
sarb
and
xchg
push
iret
add
jo
js
dec
push
inc
jnp
imul
and
add
dec
test
xchg
imul
or
popf
jne
xchg
pop
rcl
mov
bound
adcl
push
inc
sub
sarl
add
dec
inc
popa
dec
and
mov
in
popf
enter
test
lock
daa
sub
pop
pop
sub
xchg
fldcw
jae
cli
add
dec
mov
pop
cmp
fwait
leave
out
arpl
sti
ret
aaa
notl
mov
in
out
das
xor
sbb
inc
or
cli
loope
cli
pop
push
dec
cmp
lds
dec
and
outsb
mov
mov
pop
inc
lcall
jg
imul
sbb
xor
cmp
jns
lds
imul
int3
pushf
lods
icebp
sti
mov
inc
leave
sti
pushf
pop
cmp
inc
jp
pop
cs
jb
or
push
iret
mov
sub
dec
loope
adc
xchg
sub
push
mov
xor
mov
mov
jmp
push
xor
fmull
std
jnp
push
stc
sti
cmc
inc
cld
jmp
add
fldl
cmp
insb
stc
mov
xor
adc
inc
icebp
test
pop
orl
push
inc
hlt
dec
jg
mov
pop
inc
js
ret
pop
gs
and
test
pop
fcmovb
mov
add
mov
scas
std
cmp
cmp
inc
xor
mov
cs
insl
insb
adc
mov
mov
clc
mov
sub
nop
sub
repz
popa
mov
xor
cmp
das
fidivs
popf
jmp
dec
sahf
mov
scas
pusha
fidivrl
ret
adc
fidivrl
pushf
and
sub
insl
mov
xchg
scas
fisttpl
pop
arpl
push
ljmp
test
fdivs
fcomps
jl
xor
orl
aad
mov
xor
lahf
jp
cs
or
xlat
or
jl
fnstcw
adc
cmc
jg
adcb
xchg
xor
mov
push
cmp
mov
jb
xchg
xor
test
repnz
fcomps
xchg
enter
push
jnp
lcall
lea
inc
mov
out
mov
ret
out
sub
data16
int3
stos
mov
xor
push
xor
fidivrs
ret
inc
leave
push
push
xchg
mov
push
mov
sahf
sub
aam
and
fcompl
or
sti
clc
movl
inc
mov
push
mov
movsl
aad
push
enter
add
mov
sbb
jae
out
jp
insl
pop
push
mov
cltd
in
std
mov
testl
test
push
into
dec
add
sub
inc
imulb
pop
mov
and
add
pop
sub
jp
jle
mov
adc
fidivrl
das
dec
mov
add
mov
mov
rorb
pop
jbe
or
jb
test
gs
fildl
fstpt
lods
test
xchg
jle
push
es
sbb
adc
mov
lcall
xor
notb
fcoml
fbld
test
pop
pop
mov
loop
movsl
rcrl
add
out
pop
test
lahf
dec
clc
loop
pushf
test
mov
xor
mov
ret
fadd
cs
push
xor
movsl
jno
insb
rcr
in
hlt
inc
call
mov
inc
inc
insb
into
or
xchg
adc
jnp
ret
and
add
fsubl
add
and
test
divl
inc
mov
dec
cmp
js
sub
push
add
call
or
add
cld
add
sbbl
lcall
stc
ljmp
pop
push
rol
popf
dec
lods
push
sbb
mov
or
cmp
fidivrs
push
je
fistpl
repz
push
jb
into
popa
out
je
mov
insl
lds
push
cmp
push
rorb
cld
loop
data16
xor
mov
call
mov
imul
sbb
xchg
sahf
inc
pusha
push
daa
xchg
iret
xchg
sub
mov
fs
add
inc
daa
fs
sub
inc
inc
scas
pop
xor
inc
push
int
icebp
data16
or
aad
pop
xorl
mov
scas
mov
sbb
xor
push
xor
or
dec
cmpsl
push
sub
mov
jbe
or
jno
adc
ret
movsl
sbb
ficoml
inc
daa
aad
mov
iret
movb
shll
aad
inc
sub
ss
outsb
out
xchg
decl
fsubs
mov
rcll
push
sbb
jb
into
lcall
loopne
inc
clc
xchg
lcall
andl
arpl
scas
jns
int3
inc
mov
sti
xor
or
sbb
mov
jnp
movsl
sbb
test
push
ljmp
insl
jo
or
out
insl
ds
jbe
push
and
cltd
jle
and
call
mov
fistl
jbe
imul
inc
lods
mov
mov
mov
pop
jmp
adc
mov
jecxz
mov
mov
adc
aaa
mov
or
movsb
enter
xor
mov
outsl
in
jmp
cli
mov
xchg
adc
mov
xchg
es
and
pop
adc
negl
xor
ds
jge
movl
mov
lret
xchg
pop
adc
jmp
sbb
mov
push
xor
xchg
sub
es
pop
xchg
negl
inc
sub
psubusw
lcall
mov
or
out
inc
clc
cmpsl
mov
jl
push
pop
cmp
sahf
pop
mov
cmpxchg
cmp
or
stc
mov
push
or
lods
mov
mov
mov
int3
push
xchg
push
ret
out
inc
loopne
ds
gs
popa
into
and
pop
push
jo
mov
xchg
into
leave
movsb
push
ds
pushf
cmpl
dec
pusha
push
mov
dec
add
xorb
mov
inc
sub
ret
push
stos
mov
pop
inc
int3
out
test
bound
fcoml
dec
cmp
mov
add
shll
into
sahf
and
inc
mov
dec
ret
ja
aas
pop
pop
push
jge
cmpl
mov
inc
imul
pop
out
popf
scas
adc
arpl
sub
ret
popf
push
fstp
xchg
pusha
mov
ret
cmc
jp
cmp
ss
outsl
push
movsb
mov
test
fcompl
test
add
stos
test
loope
sbbb
sti
mov
dec
or
xchg
add
enter
jmp
push
xchg
and
ficoms
mov
push
imul
test
scas
jecxz
sub
pop
cmc
push
nop
mov
sbb
jnp
and
push
jae
pop
insb
dec
out
ret
cmp
test
adc
push
jmp
dec
jmp
adc
xchg
sbb
and
sbb
imul
insb
leave
sub
xorps
gs
lahf
cmc
push
int
xchg
mov
adc
out
xchg
es
out
xchg
mov
sub
std
imul
test
jle
pop
stc
xchg
das
and
stos
bound
or
push
jge
ljmp
frstor
daa
xor
sub
mov
adc
push
sti
and
dec
or
in
inc
mov
ret
shll
jo
stc
cmp
hlt
hlt
scas
add
lcall
push
mov
and
mov
scas
add
dec
scas
ja
mov
inc
cmpsl
cs
and
filds
push
jmp
push
dec
sbb
loopne
xor
aaa
add
cmp
lods
imul
pushw
push
stos
mov
mov
dec
in
jg
push
and
adc
loope
in
add
xchg
pushl
addr16
fsub
ds
and
cwtl
lret
xchg
dec
xchg
mov
inc
cmpsb
mov
fildl
aam
cmp
fwait
inc
cs
emms
add
iret
cmp
xchg
inc
push
adc
lock
sbb
roll
jno
jmp
das
popf
xchg
sub
push
lahf
shrb
jmp
cmp
and
jle
and
idivb
jne
cld
inc
fidivs
push
inc
xchg
lret
arpl
add
dec
and
arpl
xchg
inc
das
es
push
scas
fmull
add
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
sbbl
push
movl
cmpl
je
cmpl
ja
jmp
call
mov
dec
mov
jmp
mov
notl
mov
movl
push
mov
mov
mov
sub
imul
mov
mov
mov
movzwl
or
xor
adc
xor
and
mov
addl
add
subl
add
imul
mov
mov
cmp
je
and
mov
mov
mov
sub
mov
movl
cmpl
je
cmpl
jg
jmp
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
push
mov
push
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
xor
add
mov
mov
movl
cmpl
je
cmpl
jl
jmp
push
call
mov
dec
mov
jmp
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
movzbl
xor
mov
mov
xor
mov
add
mov
add
movzwl
mov
movb
sub
lea
mov
sub
mov
add
mov
andl
xor
andl
sub
orl
mov
movl
andl
mov
inc
mov
cmpl
jl
jmp
call
cmpl
jb
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
movl
movl
cmpl
je
cmpl
jbe
jmp
push
call
xor
xor
dec
mov
jmp
mov
push
and
mov
xor
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
subl
push
andl
add
movl
jmp
mov
movl
mov
movl
inc
cmp
movl
jb
andl
xor
xor
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
xor
adcl
add
jmp
adc
mov
mov
sbb
mov
orl
xor
mov
add
movzwl
mov
andl
mov
inc
mov
cmpl
jg
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adcl
movzwl
incl
xor
orl
add
mov
mov
movl
mov
movl
inc
mov
movl
cmp
jne
inc
mov
movl
cmpl
je
cmpl
ja
jmp
push
push
push
push
call
mov
dec
mov
jmp
mov
xor
dec
add
add
mov
xor
or
mov
sub
or
mov
sub
xor
add
add
orl
mov
movl
and
movl
orl
movl
andl
mov
inc
mov
cmpl
ja
jmp
pushl
push
pushl
push
push
push
call
cmpl
jb
mov
mov
mov
xor
mov
orl
mov
xor
add
mov
mov
mov
je
mov
mov
xor
orl
xor
sbbl
sub
andl
sub
neg
xor
or
mov
decl
mov
mov
add
imul
mov
mov
mov
subl
add
or
or
mov
mov
mov
jmp
mov
xchg
mov
mov
push
jl
jmp
jl
pop
popa
outsb
icebp
ret
and
sub
push
mov
pop
inc
cmp
subl
ror
scas
adc
cltd
mov
ja
addr16
test
in
sbb
arpl
lret
xchg
mov
xor
push
enter
mov
cmp
subb
aad
xchg
push
xor
aas
xchg
sbb
scas
sub
jl
aaa
hlt
jns
mov
fstps
jbe
jbe
xchg
add
and
inc
stos
out
xor
loop
aaa
dec
movsb
sbb
out
xor
popf
jle
fadds
sub
dec
push
jnp
out
pusha
imul
flds
fnsave
or
push
loope
xchg
cwtl
pop
test
push
mull
add
outsb
popa
rorb
in
outsl
xor
xchg
jle
jae
and
mov
popa
xchg
mov
stc
popf
mov
dec
movsl
xor
imul
add
fldl
jne
test
sub
sub
and
sub
add
or
dec
scas
xchg
pop
cmpl
push
mov
dec
bnd
jbe
or
ds
bound
out
and
dec
leave
ret
sbb
sub
btc
and
in
mov
jecxz
and
js
insb
and
and
imul
lods
sbb
lds
jp
mov
enter
aaa
mov
aaa
adc
rolb
adc
lret
push
aas
xorl
in
jns
sub
pop
mov
sbbl
arpl
cmp
and
jno
daa
fistl
jecxz
push
push
out
iret
dec
jo
nop
in
gs
in
jns
xchg
pop
out
pop
mov
xlat
push
sub
jp
mov
cmc
dec
xchg
sbbb
in
stc
cmp
loope
add
xor
test
jb
js
mulb
sbb
push
ljmp
int3
add
ret
cmp
cmpsb
sub
movsb
xchg
movsl
mov
sbb
les
sarb
popa
xchg
mov
jg
sub
mov
adc
not
pop
scas
xchg
cmp
cmpsb
add
arpl
scas
inc
cmp
push
leave
popa
inc
push
sub
ds
inc
or
clc
adc
ja
les
lods
xor
inc
cmpsb
hlt
cwtl
and
push
mov
push
test
cmp
jle
and
call
or
subb
push
stc
add
xchg
add
out
push
aas
ja
jg
std
mov
cmp
out
dec
add
cmp
outsb
inc
rol
jo
in
pop
aad
xchg
in
shrl
fwait
shlw
and
and
push
mov
lods
add
xlat
mov
clc
inc
dec
sbb
lret
mov
cmpsl
cmpsl
js
jle
sbb
aad
ja
adc
mov
jnp
or
dec
repz
out
and
ss
stos
mov
js
enter
jo
xor
fdivp
clc
lock
dec
test
or
ret
jns
jae
andl
push
lret
pusha
out
nop
test
iret
inc
xchg
mov
jns
daa
pop
iret
scas
shl
jns
mov
enter
cmp
add
or
push
cs
sub
cmpsl
jg
loopne
mov
mov
jno
fdivl
into
xchg
adc
test
jg
ret
mov
out
xor
jl
test
sub
sbb
int3
dec
push
mov
lret
dec
imul
add
mov
aaa
add
push
sbb
add
repz
xor
or
je
imul
adc
lcall
mov
dec
cmpsl
ljmp
ljmp
loopne
pusha
leave
out
push
dec
mov
lods
and
jle
jne
outsb
or
xchg
mov
cld
and
mov
mov
stos
fstl
jno
push
jecxz
popa
or
lods
dec
leave
call
mov
add
and
inc
push
fimull
aaa
fcoms
daa
sub
lret
xlat
iret
outsb
cmp
lret
pop
jb
repnz
pop
cmp
push
je
adcl
dec
mov
xor
cmp
pop
faddl
lods
jne
push
or
test
clc
fwait
xchg
jnp
push
rcrb
pop
mov
fnsave
js
scas
imul
xchg
xlat
xchg
dec
jne
movsb
cmc
popa
sbb
mov
outsb
mov
inc
movsb
push
sbb
pop
test
test
loop
or
imul
sbb
pop
pop
mov
xor
add
fnstsw
cmpsb
mov
jbe
loop
pop
fldenv
cli
lret
adc
sub
ss
mov
ret
lret
xor
repz
cmp
addr16
jmp
cwtl
sbb
sahf
rolb
jne
insl
or
mov
js
into
adc
lock
stc
pop
add
inc
lcall
insl
mov
bnd
cmpsb
push
repnz
div
dec
cltd
lret
sbb
clc
shrb
repnz
jp
jae
xor
sbb
inc
pusha
xchg
data16
jmp
lcall
cs
andl
stos
loop
xchg
mov
jo
enter
arpl
add
xchg
aas
push
mov
out
fs
xor
xchg
hlt
inc
sbb
dec
push
mov
fs
pop
pushf
sbb
add
adc
pop
mov
cltd
stos
adc
sbb
or
jns
pop
and
ja
cld
xchg
mov
sbb
call
into
sbb
cmp
xor
inc
fdivr
mov
xlat
jecxz
mov
xlat
inc
pop
or
mov
jg
lret
fdivrs
xchg
insl
xor
roll
xchg
out
imul
call
mov
daa
stos
mov
test
dec
into
jp
dec
nop
sub
inc
mov
inc
jle
add
mov
loopne
ss
repnz
jne
push
imul
jp
mov
cmp
rolb
sbb
sahf
aad
sarb
aam
lock
scas
or
sub
imul
add
mov
int
fdivrl
sub
push
in
jnp
pop
shl
sti
bound
and
pop
fisubrl
adc
pop
and
orl
sbb
fadds
cmp
stos
sbb
dec
jne
lods
dec
lea
in
js
jp
mov
scas
in
xchg
movsl
and
mov
push
inc
cmp
add
out
inc
mov
test
inc
sbb
dec
das
aas
or
rclb
xchg
jno
imul
or
inc
sbb
mov
push
mov
pop
rclb
mov
rcl
test
cmp
push
pop
xchg
jo
cmpsb
sbb
gs
test
dec
add
or
xchg
fisubl
into
mov
or
inc
iret
fisttpll
popf
nop
loope
aam
lret
pop
dec
sub
or
xchg
push
mov
mov
or
pop
xchg
xor
imul
jg
mov
mov
mov
lods
xchg
or
loope
mov
mov
iret
lcall
adc
inc
dec
and
imul
push
or
arpl
in
cli
mov
pusha
pop
leave
jecxz
jl
cs
inc
setg
pushf
stos
in
inc
dec
test
inc
inc
pop
xor
jge
adc
mov
mov
lcall
and
lret
xorb
sbb
popf
loop
call
pop
sarl
pusha
and
in
test
bound
xor
xchg
aad
out
fcmovnb
dec
insb
scas
or
dec
decl
inc
xor
jmp
xlat
stos
fnsave
pop
addr16
jo
jmp
add
mov
das
cmp
mov
inc
je
sahf
stc
sarl
incl
inc
dec
adc
push
out
into
imul
mov
nop
pop
fistl
ljmp
mov
mov
jns
sahf
sub
imul
xchg
cmp
jle
add
dec
inc
add
or
insl
rclb
sti
jg
xor
int
xchg
xchg
scas
jns
add
inc
jmp
hlt
push
sub
scas
xchg
and
fcmovnbe
daa
or
repz
and
ljmp
frstor
xor
push
push
fxch
aaa
xchg
repz
leave
inc
xor
jae
testl
xchg
dec
or
xchg
jl
js
push
fidivs
insb
stos
loope
lahf
leave
sub
inc
and
mov
adc
and
lret
jle
push
xor
adc
scas
mov
lret
jmp
and
imul
int
jp
xchg
pop
sub
dec
mov
sbb
stos
mov
push
cmpsl
stos
int3
cmp
mov
push
lods
push
mov
inc
add
sub
insb
add
shlb
cli
insl
scas
sti
or
mov
ja
lret
pop
scas
leave
stos
cltd
hlt
lock
bts
sti
fs
mov
and
inc
data16
or
xor
dec
rcrl
xchg
loopne
and
in
dec
mov
cltd
jne
cmc
mov
fdivs
jg
test
outsl
add
int
gs
pop
xchg
xchg
or
xchg
adc
scas
icebp
push
mov
sub
shrl
push
enter
adc
lahf
jle
lods
jp
out
test
clc
ja
push
and
addb
dec
cwtl
xor
mov
jnp
pop
mov
mov
repnz
mov
dec
loopne
push
fs
cmp
mov
sahf
lret
or
stos
inc
pop
sti
dec
xchg
pop
data16
and
push
push
pop
cmp
push
mov
sti
repz
mov
add
or
mov
mov
adc
ljmp
sbb
aas
xor
test
adc
paddusb
push
fmull
jno
into
cli
or
xchg
sub
cmp
data16
mov
aaa
and
and
mov
jbe
cmp
sahf
out
or
mov
sub
xor
int3
insb
repz
cmp
sarb
pop
cld
mov
pop
xchg
mov
pusha
stos
nop
ret
jl
sub
sbb
xchg
push
shlb
stos
rorb
sbb
int3
or
cltd
ja
push
leave
xchg
lcall
cmp
test
adc
mov
jne
xchg
add
movsb
pop
add
xchg
or
sarb
add
sub
jmp
mov
imul
test
in
ror
stos
cmp
adc
pop
psubw
frstor
xchg
ret
inc
js
or
das
jl
jmp
push
mov
and
stc
popa
lret
jle
add
cmp
jns
arpl
cmc
out
add
sbb
inc
dec
mov
sub
popa
mov
dec
dec
pop
dec
xor
mov
xchg
dec
addr16
notl
push
nop
loopne
rcrl
outsl
ss
lahf
adc
in
mov
sar
popa
outsb
sub
fstpl
js
cli
out
in
or
mov
outsl
adc
or
imul
lahf
xchg
xor
jno
pop
lea
fcmovnu
push
call
jb
xlat
daa
or
jbe
pop
test
rcrb
or
jp
or
dec
popa
loopne
mov
mov
mov
cli
mov
hlt
das
jle
jne
fisubrl
cltd
dec
xor
inc
and
fdivrl
mov
loopne
mov
cltd
nop
add
mov
ret
imul
test
pcmpeqw
sbb
aad
mov
lods
or
rcr
jecxz
inc
xchg
dec
add
std
jnp
test
repz
out
cmpsl
addr16
rol
sbb
into
dec
xchg
cs
sahf
je
clc
ret
xchg
cmp
sbb
pop
sbb
js
sbbl
je
push
xchg
cmpl
jb
aaa
jo
mov
add
stos
push
nop
add
insb
push
sub
cmp
xor
les
dec
dec
sbb
enter
icebp
push
pushf
mov
adcl
jge
lret
mov
data16
and
lds
cmpsl
pop
int3
fcmovnu
ret
hlt
int3
leave
jge
dec
aas
dec
or
mov
popa
jp
pop
in
sub
sbb
adc
mov
notb
es
cwtl
fildll
add
pop
dec
push
lods
bound
dec
adc
add
imul
jecxz
lret
pop
pushf
add
sbb
lea
jle
daa
js
gs
mov
add
sbb
cmp
jo
push
dec
jbe
rolb
xor
pop
xor
fmulp
dec
and
call
pop
jl
mov
dec
pop
adcl
addl
insb
dec
daa
push
test
mov
mov
out
jge
cwtl
mov
add
cs
xor
arpl
fldl
jmp
sub
inc
and
dec
int
mov
sub
cmp
push
cmp
repz
sbb
out
inc
lret
jbe
cmp
push
jge
mov
cmpsb
movsb
sub
stc
push
sub
pop
sub
push
jle
out
sarb
inc
ret
loop
mov
sbb
loopne
xchg
testl
inc
push
pop
ja
push
cld
add
cld
fiadds
and
sbbb
xchg
jns
or
jp
bnd
adc
hlt
xor
pop
adc
add
in
test
cmpsb
mov
iret
ss
xchg
xchg
lcall
mov
adc
in
lret
in
adc
mov
mov
jns
xor
in
aam
and
push
cwtl
scas
bound
pop
mov
outsb
mov
les
push
hlt
imul
loop,pn
adc
jmp
stos
popf
std
cmpsb
pushf
jnp
push
data16
shlb
mov
movsl
faddp
popf
pop
mov
movsb
xor
ret
pop
and
sahf
lods
adc
les
wrmsr
insb
icebp
xor
mov
pop
repz
repnz
or
sahf
sarb
cli
inc
mov
stos
ss
lret
mov
lock
setae
jo
push
and
loope
fsubrs
or
or
in
cltd
dec
push
push
in
or
sub
and
inc
leave
or
out
je
add
xor
or
mov
dec
mov
mov
adc
mov
es
call
dec
mov
push
jl
out
inc
or
sahf
inc
or
add
xor
xor
mov
clc
popf
out
flds
pop
in
divl
xchg
ficoms
jbe
sbb
jge
mov
out
mov
cmpb
pop
shrb
popf
xor
or
jmp
xchg
cltd
iret
pop
and
sub
cmpsl
adc
and
dec
gs
cwtl
inc
mov
mov
ret
je
roll
sub
lock
hlt
add
ds
inc
pusha
lret
sub
insl
adc
inc
outsl
mov
xchg
data16
popf
mov
cli
fimull
int
sbb
sub
scas
jbe
mov
jae
into
xor
popf
pop
adc
fsubl
jb
out
les
cmp
or
push
xor
int3
push
fnstsw
call
cmp
xchg
in
cmp
lea
mov
mov
jecxz
test
mov
xlat
and
jne
lcall
out
sub
nop
mov
and
sub
lret
mov
mov
scas
add
pop
in
or
lods
cwtl
mov
shl
out
addl
lret
jnp
les
stos
out
repz
cmp
sahf
cmc
cmp
stos
lret
ds
cmp
in
or
loope
add
jne
iret
sub
dec
ret
mov
hlt
outsb
mov
loop
lahf
out
js
ret
sub
push
lahf
push
mov
mov
loop
pop
les
int
popa
sbb
push
mov
neg
and
push
mov
push
nop
cmp
push
ja
es
out
xor
mov
xchg
sub
jne
push
jmp
xor
cmp
cwtl
iret
xlat
lcall
mov
sbb
or
stos
les
and
jg
mov
xlat
repz
jp
mov
dec
sbb
pop
insl
lret
in
fidivrl
stos
add
push
pop
pusha
pop
mov
inc
xchg
lock
subb
enter
and
scas
fidivs
shrl
mov
inc
and
or
xor
lahf
icebp
push
jnp
xor
inc
cmp
xor
je
mov
arpl
mov
add
lcall
fisttpll
sahf
mov
mov
xor
loop
arpl
out
or
test
ljmp
scas
mov
cwtl
pop
filds
push
mov
push
mov
adc
cmpsl
jnp
lret
loope
cmovl
int3
xchg
dec
mov
in
or
and
xlat
and
jg
push
fmul
inc
dec
lret
notb
loopne
hlt
push
pop
mov
fdivrs
xchg
cmp
imul
into
cmp
fidivrs
and
sbb
js
xor
dec
xchg
je
ja
mov
dec
mov
sub
push
cmp
ficompl
mov
xchg
imul
and
jge
in
and
fs
cli
cmpb
jb
mov
dec
ljmp
stos
test
aam
mov
push
mov
mov
imul
js
arpl
lods
cld
push
fistl
icebp
roll
sbb
mov
leave
lea
in
cmp
cmc
mov
add
sbb
xlat
xor
imul
lret
pop
inc
scas
mov
rorl
cs
fstl
mov
aaa
cmp
inc
popf
and
lods
dec
sahf
xor
inc
adc
mov
jg
mov
loope
adcl
mov
ds
fidivrl
xor
add
adc
pusha
mov
sub
jno
lret
aas
dec
mov
stos
sub
sbb
das
pop
fisubrl
jge
out
fs
call
mov
mov
jbe
cmpsl
insl
mov
inc
shlb
xlat
lock
aad
sbb
ficompl
pop
div
xchg
dec
xor
push
mov
add
fisubrs
repnz
jbe
add
xchg
sbb
inc
xchg
mov
and
push
sbb
outsb
push
lea
mov
insl
xor
inc
in
fs
or
sub
push
cld
mov
andb
mov
inc
adc
rolb
push
xor
pop
aas
cs
cmp
mov
xchg
jp
push
mov
insb
insb
jbe
out
popa
cmp
shlb
inc
sahf
add
inc
inc
icebp
mov
std
loopne
call
cld
or
into
rorl
repnz
in
iret
xchg
push
ja
push
cmpsl
mul
adc
sub
or
push
lods
xchg
cmp
add
mov
cli
enter
or
fnstcw
xor
or
sub
dec
popf
xor
inc
in
loopne
and
repnz
xchg
in
pop
sub
insb
inc
fstpl
or
test
mov
add
leave
icebp
fisubs
mov
mov
add
out
pop
mov
int3
incb
mov
bound
test
push
repnz
ja
clc
repz
mov
aas
pusha
jmp
insl
stos
cmp
stos
lahf
or
bound
adc
add
sub
in
pop
imul
fnsave
cmp
xor
dec
jecxz,pn
jle
imul
ret
in
ss
leave
inc
dec
stos
pop
flds
and
loop
mov
sbb
call
sahf
push
or
xor
adc
testl
ret
pop
adc
sbb
dec
mov
pop
call
xchg
xor
inc
jbe
andnps
sub
push
inc
jne
scas
xor
or
test
cmp
orl
mov
negb
mov
mov
sbb
jb
add
push
mov
dec
das
scas
mov
cmc
jnp
mov
jbe
pop
jne
fistpll
mov
fcompl
enter
xchg
push
mov
popa
ficoml
lret
lods
mov
inc
push
out
xchg
pop
orl
pop
jae
mov
outsl
add
popa
sbb
shll
pop
xchg
addr16
mov
fwait
inc
sub
fcoms
decb
das
xor
fwait
lods
xor
xor
jle
mov
stc
push
jl
sbb
sub
xor
ficoms
sub
fsubrs
jg
icebp
xlat
mov
negl
into
scas
hlt
push
out
inc
push
dec
xor
aad
push
or
fimuls
pop
xchg
sub
test
icebp
cmp
rorl
jnp
xchg
stc
enter
push
add
imul
sub
add
push
sbb
cmpsl
add
jno
jp
insb
or
mov
pop
stos
test
rcrl
loope
mov
jle
mov
std
dec
adc
js
cmp
mov
add
push
in
cmp
loopne
and
mov
pop
movsl
jle
push
or
sbb
es
jb,pt
bound
xchg
jno
cmp
mov
add
xchg
mov
pop
pop
or
xor
inc
xchg
mov
sbb
fwait
jae
xchg
push
cltd
pop
jno
mov
push
aaa
sub
mov
mov
repz
jg
add
pop
aas
shrb
cmc
lahf
pop
stc
push
lds
fisubs
cmpsb
adc
mov
push
xchg
pop
add
inc
cmpb
adc
cltd
dec
xorl
jo
jmp
push
mov
push
out
push
jno
das
cmc
aad
bound
cli
aad
mov
dec
jae
xchg
inc
fwait
or
lahf
xor
aas
divb
or
pop
dec
jne
inc
sti
sbb
fdivrl
aas
jbe
iret
aaa
test
test
sahf
ljmp
push
pop
not
xchg
shll
and
aad
rcl
test
fisttpll
sbb
movsb
mov
cmp
scas
mov
out
cmpsl
in
fucom
xchg
xchg
push
mov
sub
xor
fwait
repz
pop
jbe,pt
idiv
fnstcw
bound
push
mov
cmp
dec
pushf
mov
shll
sbb
mov
stos
adc
add
pop
in
and
mov
in
mov
xor
add
iret
sub
cmpsb
pop
sub
sub
cwtl
pop
lret
jae
inc
fsubrs
insb
pop
jns,pt
aad
push
xor
add
fidivrs
lret
xor
sbb
dec
rep
add
jno
adc
loop
out
pusha
add
arpl
cmp
fistpll
ljmp
pushf
repz
xchg
loope
push
fldenv
icebp
ds
jmp
add
sub
mov
in
fisubrs
inc
out
pop
insb
lds
test
pop
sti
add
lcall
push
pop
lahf
icebp
push
and
jbe
bound
adc
bound
ss
dec
jne
bound
movsb
inc
jmp
int3
push
xor
xchg
popa
push
xchg
test
jle
imull
and
sub
xchg
gs
dec
sub
int
aaa
aad
pop
pop
loope
das
lods
sub
jl
mov
into
stos
xor
pop
inc
fsubrs
iret
sahf
out
dec
jbe
push
cmpb
dec
mov
mov
lret
or
addr16
aad
xchg
xchg
movsb
ds
cmp
xchg
inc
addl
sub
les
lahf
lods
ret
test
lea
iret
jl
out
mov
push
test
push
je
dec
lret
shll
mov
aam
insb
loop
mov
mov
inc
clc
neg
ljmp
mov
insb
ret
sub
enter
mov
jns
jg
mov
rol
lock
mov
mov
out
outsb
xchg
jnp
jne
loopne
seto
addr16
insl
dec
or
xchg
mov
push
int
clc
jo
movsl
xor
xlat
mov
sub
cmp
loop
pop
subl
or
cmp
jbe
cmp
repnz
insb
jb
fadd
shll
das
jbe
inc
adc
or
cmp
movsl
or
sub
out
jp
aad
sbb
jae
dec
test
mov
mov
in
sub
shrb
inc
pusha
rorl
add
loop
sbb
jg
leave
jb
inc
xchg
mov
lret
pop
xchg
fisubl
ds
outsl
out
add
inc
inc
test
fsubrl
daa
mov
enter
int3
push
pop
and
and
mov
xchg
pop
lock
xor
ss
loop
insb
pop
daa
cmp
orl
lret
fsts
out
outsb
xchg
jp
imul
test
or
mov
cmpsl
push
jne
scas
bound
ds
test
cmp
cwtl
mov
leave
pop
or
mov
movsb
nop
sbb
lahf
iret
pop
sbb
dec
sub
inc
lods
lods
fisttpll
cmp
pusha
lahf
ja
cld
push
dec
fisttpl
int3
scas
testl
test
daa
cwtl
add
mov
lret
push
sahf
fisttpll
sbb
pop
fs
sahf
into
nop
lahf
cltd
xor
call
enter
cmpsb
repz
pop
rolb
movsb
test
andl
xor
mov
pusha
fisttpl
dec
adc
idivb
mov
scas
sar
cmpsb
lods
jae
sbb
pop
xor
lret
inc
ds
pop
xchg
lret
popa
hlt
add
out
xor
xlat
fstpl
mov
adc
fbstp
cmp
adc
imul
imul
and
inc
lds
outsb
xor
xchg
pop
sahf
dec
stos
sbb
data16
and
jbe
xor
fiadds
stc
pop
sbb
ret
outsb
xchg
xor
push
test
cmpsb
mov
notb
pusha
lret
icebp
sbb
dec
test
cmp
test
push
xchg
movsl
scas
add
sub
or
pop
mov
sbb
xchg
into
subb
fmull
inc
jns
hlt
and
stos
xchg
and
adc
push
push
xchg
jmp
rclb
lods
push
lds
xchg
fnstcw
mov
movsb
mov
mov
loope
pop
shll
xchg
adc
mov
add
sub
adc
mov
xor
pop
and
pop
std
jbe
xor
addb
out
shl
in
and
icebp
pop
xorb
arpl
stos
sarl
cmpsl
fstps
das
in
xor
data16
mov
out
xlat
inc
pop
in
test
xor
leave
xchg
into
add
sahf
mov
mulb
shrl
mov
xlat
lcall
push
dec
imul
push
or
shlb
jge
and
mov
test
aaa
lret
inc
insb
popf
mov
pop
mov
sub
cli
xor
mov
xchg
fnstenv
cmp
cmp
mov
or
sub
xchg
dec
xchg
imul
cmp
sub
sub
pop
mov
mov
and
sub
lahf
and
mov
dec
sbb
sar
fs
add
fsubs
loopne
sbb
fldcw
mov
mov
dec
in
pop
into
popa
insl
inc
or
push
push
jnp
aas
jmp
icebp
add
jns
hlt
push
js
add
iret
inc
push
cld
xor
in
mov
xchg
enter
xchg
cmc
push
cmp
out
push
jno
idiv
out
incl
xchg
gs
dec
frndint
fisubrs
xchg
cmp
and
aam
inc
fdivs
mul
out
out
jns
cmp
icebp
divl
mov
push
dec
xor
push
or
mov
sbb
dec
fwait
jmp
dec
faddl
mov
add
or
or
mov
mov
mov
out
int
fsubrs
je
mov
push
int
scas
or
or
pop
and
imul
fistpll
sbb
add
sbb
in
je
sarb
lds
cltd
test
sub
inc
and
int
iret
xchg
fsubl
dec
or
cmp
loopne
mov
or
mov
mov
jl
sub
sub
mov
and
test
mov
hlt
mov
dec
cli
push
imul
push
sub
xlat
sbb
hlt
adc
push
push
stos
imul
xchg
scas
mov
cld
rcll
pop
into
ret
inc
mov
fisttps
loopne
repz
mov
adc
add
fsubr
shr
cmpsb
mov
shlb
jge
dec
fisubrs
cld
int3
add
or
pusha
ss
xor
and
inc
mov
mov
je
add
jp
cmp
lret
rcrb
jg
testb
test
xor
xchg
sti
out
adc
or
cmpsl
dec
sti
jg
pop
loop
enter
adc
std
dec
cmp
pop
add
sarl
lret
mov
adc
aam
jg
jmp
jecxz
fucomp
aaa
push
sbb
stc
lahf
xor
in
repz
test
or
xor
push
pop
dec
dec
dec
sub
add
mov
lret
xchg
xchg
push
inc
aam
pop
xchg
outsl
les
nop
rcrl
dec
mov
jle
inc
mov
rol
xchg
sahf
int3
in
mov
jp
popa
cld
outsb
outsl
shrl
mov
cmpsl
scas
sahf
adc
mov
mov
mov
pushf
xor
cmpsb
ror
popf
mov
dec
mov
aam
push
inc
mov
jecxz
push
outsb
cmp
push
movb
mov
dec
andl
negl
adc
mov
test
dec
aaa
inc
ss
hlt
push
fbld
les
int
mov
and
inc
jb
inc
gs
sbb
call
pusha
fstpl
outsl
out
and
add
repz
out
das
and
fwait
lret
push
dec
inc
shlb
xor
push
mov
push
lds
pop
pop
gs
xchg
adc
jbe
push
sub
and
push
call
popa
andl
movsl
subb
imul
dec
mov
push
mov
ss
stc
into
xchg
std
adc
pop
mov
jae
add
dec
jns
test
xor
mov
dec
jl
xor
sbb
addr16
xor
xchg
arpl
adc
push
pop
xor
xchg
mov
call
and
stc
mov
adc
and
pop
or
sub
fcomps
out
push
push
sub
or
pusha
or
rcrl
jnp
sbb
faddl
shll
rorl
add
sbb
mov
mov
mov
sbb
mov
jmp
movl
ret
xchg
cs
xor
jl
jmp
jl
xor
inc
or
push
mov
das
es
dec
xor
mov
pop
pop
sti
test
rcrl
and
inc
out
mov
or
pop
jg
push
inc
cmp
push
popf
push
dec
cmp
xchg
cmp
cwtl
int3
mov
cs
mov
ja
cli
arpl
lret
das
test
dec
push
outsl
push
xchg
lds
push
rcr
stc
rorl
nop
cltd
repz
fcompl
jge
dec
lea
mov
cmp
mov
pop
and
sti
sbbb
push
push
xorb
das
into
or
pop
es
push
aad
dec
js
pop
sub
cmpsb
int
mov
xchg
xor
es
jns
incb
lret
jecxz
fistpl
add
mov
cmp
stos
and
mov
je
imul
mov
les
insl
bswap
out
fistl
sbb
pop
jle
cs
fnstsw
popf
mov
shlb
daa
push
pop
idivl
dec
in
jmp
inc
lret
push
mov
stos
xor
es
fs
inc
sub
dec
push
addr16
mov
aas
inc
pop
inc
and
sub
mov
test
cmp
jle
aam
addr16
outsl
push
adc
ret
adc
mov
mov
adc
rol
mov
pop
rcll
push
mov
fcmove
repz
lock
ficoms
cmp
lds
jecxz
sbb
sbb
jne
subl
pop
cmp
std
inc
jb
xchg
add
test
dec
sarl
xchg
inc
adc
adc
sarb
mov
lcall
aaa
add
mov
mov
sbb
push
sti
push
jno
fcmovnb
pop
rcl
sub
ret
arpl
loop
sbb
push
repnz
stos
mov
mov
popa
cmp
mov
cltd
mov
add
lcall
jmp
cld
bswap
and
das
cmp
mov
pop
or
mulb
test
mov
push
lret
pop
xor
mov
dec
jnp
mov
in
mov
mov
aad
xchg
test
fbld
bnd
out
jp
mov
dec
mov
jnp
sub
out
sti
icebp
aad
sub
cltd
repz
in
adc
insl
and
leave
dec
mov
inc
inc
pop
repz
inc
push
or
dec
pop
sbb
outsl
loop
xor
out
push
mov
sbb
std
cmp
fisttpll
jecxz
fistpl
sbb
push
inc
xchg
bound
shlb
pop
ret
outsl
inc
stc
cld
push
insb
fnsave
mov
test
xchg
xor
int
cmp
mov
sub
repz
add
ss
pop
jle
pop
mov
push
mov
dec
cmpsl
and
jnp
and
test
dec
xlat
mov
scas
scas
mov
imul
in
or
inc
cltd
notl
sbb
aad
sbb
hlt
xchg
jbe
push
cmovge
hlt
test
rorl
mov
addr16
cmpsl
shr
pop
lcall
test
cmp
and
and
jae
rcr
mov
mov
cmp
lahf
stos
insb
ret
push
and
mov
push
sbb
pusha
and
idiv
stc
dec
js
int
push
stos
cwtl
lea
jo
test
mov
lcall
cmpsb
sub
add
scas
dec
adc
loope
jnp
ds
aam
mov
imul
repz
adc
in
sarb
mov
inc
imul
mov
scas
jecxz
cmp
push
loopne
shr
mov
mov
nop
and
adcb
pushf
mov
xchg
mov
inc
enter
jmp
inc
mov
push
xor
xchg
fidivs
rep
sbb
rclb
jl
jge
add
jnp
and
jmp
lods
xchg
shlb
mov
test
mov
inc
lock
lahf
scas
mov
in
out
sub
out
loop
scas
jg
subl
cmpb
sub
sub
pushf
mov
lds
stos
or
cmp
adc
mov
or
pushf
jns
mov
test
xor
mov
cld
xchg
cli
pusha
dec
hlt
push
pop
pop
cli
lcall
fisubl
xchg
data16
fs
in
pop
aas
push
sub
jl
cmp
mov
ja
xor
lret
aam
adc
add
push
xor
pop
loope
push
mov
mov
sub
xchg
xchg
cmp
mov
xchg
lea
jmp
gs
sbb
gs
dec
xchg
xor
sub
or
mov
add
or
xchg
fisubrl
or
mov
or
inc
mov
aad
xor
pop
pushf
test
add
cmpsb
js
in
enter
imul
pop
pop
and
push
dec
and
push
loope
jnp
mov
hlt
mov
lcall
ret
mov
cmc
add
dec
and
test
xor
notl
lea
aad
mov
jns
mov
gs
or
cmp
fcoml
adc
ss
add
push
inc
ret
jg
inc
or
cltd
dec
js
call
push
inc
data16
loope
mov
ficoms
repz
cli
lds
mov
outsb
shrl
pop
popf
test
jl
and
xor
jle
xchg
cli
xchg
mov
push
ds
fmull
lret
bound
mov
arpl
mov
sbb
imul
adc
les
data16
out
in
mov
repnz
mov
movsl
repnz
rcl
outsb
pusha
cmpsb
addl
jl
test
inc
out
jmp
cmpsl
dec
faddl
ljmp
sbb
inc
out
stc
push
xor
jg
insl
pop
bound
xchg
sub
add
sub
mov
cmp
hlt
imul
ret
push
add
mov
cmpsb
jmp
scas
int3
dec
mov
dec
fsubs
inc
in
lret
sbbl
cmp
push
adc
jl
mov
xchg
imul
cmc
enter
xchg
int
push
cmp
mov
loope
sahf
clc
cmp
mov
adc
mov
lahf
gs
inc
mov
mov
add
ret
es
jo
or
pop
rclb
mov
insl
cld
xchg
aad
cwtl
lret
xor
adc
jmp
dec
fisubs
xor
cmp
rcrb
mov
jg
adc
dec
repz
pop
add
test
popf
adc
jle
xchg
xor
sub
add
mov
xchg
pop
jmp
pop
fistps
inc
and
fsubs
xchg
in
insl
xor
or
xor
iret
adc
adc
in
add
outsb
or
stc
jb
mov
jo
cwtl
in
pushf
push
js
xchg
adc
ss
push
or
lret
dec
loop
xchg
jge
rorb
xor
cmpsb
inc
popf
add
mov
movsl
jp
es
cmc
fildll
hlt
xor
data16
clc
mov
inc
pushf
movsl
sbb
mov
mov
xchg
lock
sub
out
cmp
sbb
mov
js
mov
divl
cmp
mov
or
sub
mov
ror
add
aam
mov
sub
mov
scas
fstpt
shrb
adc
lret
lret
outsl
iret
push
push
ss
and
outsb
scas
pushl
push
data16
push
add
mov
mov
bound
insl
mov
cmc
xchg
add
xchg
push
in
pop
shrb
popf
pop
mov
add
xchg
jns
rorb
adc
into
xor
inc
push
repnz
add
insb
cmpsb
movb
push
lds
push
xchg
dec
notl
dec
pop
cmp
cmc
sbb
mov
cmpb
add
xor
inc
mov
scas
pop
sbb
ljmp
push
push
jle
push
mov
mov
jl
push
stos
inc
cmp
cltd
push
test
inc
add
ss
mov
lcall
sahf
push
call
adc
mov
lods
cltd
aaa
test
fsubrl
dec
fcomi
inc
es
xchg
xor
lret
inc
cli
xor
mov
adc
imul
lds
out
cmp
sub
ja
aaa
mov
in
lock
mov
into
addr16
fstl
popa
ficomps
sti
xor
pmulhw
das
sub
mov
pop
lcall
in
and
mov
fdivl
mov
imul
pop
mov
mov
rol
pop
pop
sub
mov
andl
test
es
push
ss
mov
pop
jne
imul
and
push
jl
dec
push
insl
aas
aaa
outsb
xor
sbb
ljmp
out
notb
and
aas
in
ja
add
inc
add
add
jp
sub
jae
out
ret
dec
mov
int3
lock
or
mov
xor
cmp
nop
xchg
das
aaa
das
jp
in
sahf
data16
and
daa
aaa
enter
or
fwait
xchg
mov
in
push
and
fsub
pop
mov
mov
dec
push
es
cwtl
out
in
incl
int
inc
dec
aaa
jnp
cmpsl
jbe
rcr
into
in
mov
leave
lods
decb
ds
adc
pop
outsb
or
stos
insl
mov
cmc
ds
mov
cltd
das
mov
jmp
add
sbb
pop
jno
clc
jnp
out
mov
call
mov
mov
fadds
cltd
out
mov
das
lock
outsb
inc
mov
cmpsl
mov
lret
fisubl
mov
in
mov
mov
out
and
add
leave
pop
adc
xorl
pushl
out
outsl
pop
lods
xchg
in
repz
xchg
cltd
roll
sub
ss
jbe
fildll
push
adc
iret
scas
movsl
push
fs
pop
out
adcb
xlat
int
add
cld
adc
push
add
popf
xchg
add
xchg
dec
mov
mov
push
sub
pop
cmpsb
cmc
das
inc
and
lret
test
pop
mov
not
mov
jne
scas
mov
jb
add
lods
sub
fisubs
mov
add
lock
stc
pop
mov
scas
ds
ss
dec
enter
jg
sbb
inc
cmpsb
xchg
ret
pop
hlt
stos
pop
out
sub
add
inc
movsb
jge
or
loop
lret
inc
in
mov
mov
inc
pop
adc
mov
jp
daa
mov
sbb
mov
lret
mov
outsl
stc
outsl
popf
aam
push
pop
xor
orl
inc
andl
into
ror
push
and
mov
jno
int3
pop
jg
pop
cmp
mov
out
mov
into
sbb
add
in
aaa
sub
fldcw
bound
cmp
lock
in
xchg
xchg
cwtl
xor
dec
pop
sbb
test
xchg
xchg
dec
cli
out
or
pop
inc
push
ficoms
jne
sbb
jae
push
test
test
ss
jne
cmp
popf
sub
xor
popa
jmp
pop
aam
cltd
cld
shlb
lods
mov
xchg
dec
jp
adc
cld
ds
scas
fcoms
inc
mov
repnz
add
sub
mov
lret
mov
cmc
test
stos
je
xor
dec
aad
push
xor
sub
scas
dec
jg
lahf
add
jge
add
dec
mov
bound
jnp
sbb
movsl
xchg
in
or
cs
xor
sarl
js
sub
sub
sub
and
rcll
jmp
xlat
sub
inc
xorl
push
jbe
out
pushf
xchg
cmp
int
or
add
fisubrs
outsb
mov
mov
fmuls
out
jno
mov
xchg
mov
popf
mov
out
lds
stos
mov
mov
lret
or
jge
mov
cs
stc
inc
inc
dec
lds
ds
fucomi
push
or
jecxz
lock
sbbb
les
out
adc
inc
loope
inc
cld
nop
iret
pop
xchg
mov
daa
test
cmp
jg
inc
out
jo
sub
out
ds
int3
mov
xor
lret
insl
shr
aas
pop
cmc
add
pop
das
sub
mov
cmp
lds
mov
loop
pop
out
jo
and
add
movsl
cmpsb
fdivrl
jno
sbb
and
lock
add
inc
jo
rcrl
xchg
hlt
adc
xor
loope
test
cltd
mov
mov
jmp
mov
fbld
jecxz
xor
stos
add
xchg
mov
xchg
aas
dec
testb
jno
or
cmp
lock
cmp
out
ljmp
push
testl
xchg
sub
cmp
sbb
retw
jl
push
and
adc
nop
pop
int
rorb
dec
lret
jl
jmp
ds
dec
pop
imul
fdivrl
push
push
sbb
sar
and
arpl
loope
mov
sbb
ljmp
int3
inc
sbb
cmpsl
cld
mov
sarb
jl
sub
or
cltd
int
dec
out
sahf
xchg
jmp
jge
lods
test
adc
xchg
fidivrs
or
dec
mov
scas
js
loopne
stc
inc
push
lods
mov
pop
push
sbb
add
lods
adcb
sub
pop
or
test
fimuls
cmp
mov
xlat
bound
loope
sub
sbb
inc
cmp
push
push
or
mov
cmp
adc
xlat
push
in
mov
xlat
out
testb
movsb
xor
sbb
decb
aad
xor
sti
dec
pop
stc
cmp
and
or
jo
lea
jmp
xor
in
push
insl
movsl
push
cmp
ror
sbb
dec
sub
mov
jb
add
adc
outsl
sub
das
jb
dec
jne
lods
call
cltd
pusha
sbbl
icebp
mov
pop
mov
sbb
push
push
mov
mov
je
rclb
or
inc
xchg
jno
xor
dec
jb
xchg
push
mov
subl
divb
mov
sub
nop
pop
loop
xor
in
cmp
mov
hlt
fnstenv
jecxz
cmp
or
daa
pop
cld
pop
add
stos
xchg
cltd
nop
rcrb
data16
dec
dec
movb
mov
sahf
aas
jp
cmp
cmp
xor
std
jle
inc
in
clc
jo
mov
ret
imul
and
and
dec
or
inc
xchg
cli
sbb
pop
out
jbe
and
adcl
out
shrb
add
sub
ja
popa
lret
movsl
sbb
test
xor
push
push
inc
xor
popa
adc
or
pop
and
or
pop
dec
addr16
mov
mov
aaa
lret
cmpb
add
subl
test
pop
pop
mov
sub
pop
pop
icebp
ret
mov
divl
mov
aam
and
mov
jmp
jb
testb
pop
sub
or
enter
dec
icebp
push
cmp
adc
cmp
mov
inc
mov
jb
xchg
cli
jo
shlb
lret
loopne
add
fmuls
cld
lcall
jne
in
pop
jg
push
lret
and
sti
and
dec
xor
sub
mov
pop
fsts
cli
adc
test
and
ret
cmp
pop
shlb
jne
test
das
testl
xchg
sbb
ss
test
aas
inc
test
mov
mov
pushf
insl
jp
xchg
jne
cmp
jmp
dec
mov
pop
cs
scas
dec
mov
jecxz
cld
ss
mov
push
mov
ret
dec
aas
or
rclb
imul
jo
mov
jle
mov
sar
add
nop
cmc
xor
inc
mov
into
arpl
es
pop
xorl
insb
dec
or
xor
int3
lea
mov
int
outsb
in
out
sbb
push
stc
pusha
daa
jle
mov
pusha
popa
mov
jp
sbb
fcmovbe
addr16
mov
int
cmp
jmp
jns
jl
xor
mov
cltd
add
dec
xchg
push
mov
shrl
mov
ret
dec
comiss
in
pop
subb
jl
dec
fcoms
xlat
dec
inc
sbb
data16
stc
rol
fcmovnbe
inc
lret
scas
xchg
movsb
cmpsb
pop
push
shld
test
out
ja
out
lret
les
hlt
pop
stc
and
iret
call
pop
jle
fimull
scas
or
add
lret
push
mov
js
cwtl
jle
inc
aas
jo
jmp
add
std
add
pop
sbb
cmp
mov
adc
push
sahf
loop
sar
push
call
xor
adc
jge
sub
xor
push
and
stos
test
int
pop
add
xchg
fnstenv
push
push
push
sbb
xchg
in
add
xlat
movsb
lods
push
jge
adc
test
test
andl
lcall
mov
icebp
jne
bound
mov
int3
cltd
add
mov
shlb
xchg
xchg
mov
inc
jo
push
jp
push
sbb
and
sub
push
sub
sbb
testb
fistl
and
out
test
jbe
mov
jge
sbb
or
mov
fwait
pop
ret
and
sarl
add
mov
mov
int
adc
out
cmc
adc
iret
pop
mov
nop
mov
fwait
sahf
addr16
imul
jne
dec
adc
test
xlat
push
dec
jne
dec
jnp
call
and
data16
pop
aad
jo
into
add
pop
cmp
icebp
xchg
or
stc
enter
aaa
mov
mov
jnp
call
mov
nop
lcall
dec
jae
mov
scas
push
imul
shll
inc
pop
add
xorl
inc
pushf
outsl
mov
sbb
cmpsb
xorl
mov
xchg
pop
stos
xor
jle
inc
sbb
or
daa
stos
or
xor
sbb
pop
mov
mov
dec
inc
xchg
stos
jecxz
and
xchg
mov
mov
imul
xchg
push
js
add
int3
mov
sub
jae
loope
cwtl
lcall
out
fisttpll
lods
aas
sahf
xchg
sbb
xchg
sarb
lret
push
arpl
push
push
push
sub
push
movsl
push
jmp
sbb
dec
ret
out
mov
cli
dec
dec
add
push
cmp
icebp
ja
xlat
pop
xchg
icebp
jbe
adc
insl
mov
cmp
clc
mov
inc
sub
xor
push
and
push
inc
fildl
adc
or
int
fistpll
cmpsl
pop
cltd
pop
jno
mov
jmp
outsl
jmp
adc
outsb
call
or
mov
inc
adc
mov
pushf
add
loope
jns
test
insb
in
incl
mov
jne
xchg
adc
stos
xchg
aam
and
clc
xor
mov
lcall
int
cltd
movsl
mov
cltd
adcb
xchg
movb
push
xchg
insb
inc
dec
fucomp
loope
sbb
jns
jl
mov
popf
fisttpl
loopne
das
aas
push
subl
insb
push
test
mov
fs
xchg
jg
xor
test
gs
lcall
adc
fmul
ja
out
add
sti
or
in
jbe
test
test
loope
xor
mov
dec
mov
pop
sub
das
insb
lea
test
jnp
sub
sub
out
mull
add
inc
jne
es
jno
dec
lods
fisttps
fidivl
pop
js
dec
fs
ja
in
push
push
loopne
lods
and
shlb
pusha
push
dec
jg
mov
repnz
jno
aas
movsb
add
icebp
mov
ss
inc
xchg
mov
lods
ss
mov
push
inc
inc
fisttpll
iret
or
aaa
push
arpl
test
int
in
cltd
sub
frstor
cmpsb
ret
loope
jg
dec
fdecstp
testl
ror
mov
add
cmpsl
inc
add
adc
es
orb
inc
arpl
jns
neg
inc
add
adc
dec
insl
fidivs
movsl
xor
xor
sub
pop
inc
shll
push
daa
sub
shlb
push
stos
les
dec
imul
clc
jge
pop
insl
add
mov
mov
inc
mov
jbe
pop
xlat
add
stos
pushf
xor
sub
ficoms
mov
mov
repz
adc
xor
mov
fisubrl
push
xchg
ss
or
sbb
fisttpll
fidivrs
out
rcr
in
adc
fcomps
insl
adc
push
dec
xchg
mov
add
pop
jg
cltd
pop
sbb
repnz
xor
mov
push
out
cwtl
fstl
pusha
sbb
jae
xchg
outsb
or
divb
and
pushl
cmp
sbbb
leave
idiv
pop
fpatan
and
pop
push
xchg
jecxz
push
dec
pop
loopne
movsb
into
pop
fimuls
insl
add
xor
nop
js
add
inc
out
lret
daa
mov
shll
fcomps
enter
fwait
mov
push
mov
sahf
xchg
stos
mov
shll
stos
or
sahf
dec
das
pop
daa
fsubl
xor
lods
popf
mov
repz
inc
test
pop
shlb
pop
pmaxsw
sbb
out
dec
adc
adc
cmp
xor
inc
mov
xorb
aas
leave
adc
fstpt
mov
xchg
cli
pop
jmp
dec
mov
cmp
imul
shr
mov
mov
mov
cltd
jnp
sub
xchg
xorl
js
and
xchg
inc
mov
arpl
shlb
inc
shrb
sti
sbb
sub
and
adc
adc
push
inc
sub
loope
xor
pop
fdiv
push
add
mov
movsl
sub
adc
mov
mov
sbbb
xchg
or
lcall
cmp
fstps
imul
fwait
sub
xchg
adc
inc
xlat
fldcw
and
pop
dec
jl
xor
sub
adcb
rol
cmp
sbb
cmp
sub
mov
jecxz
dec
inc
call
test
or
in
scas
mov
and
loopne
push
into
mov
push
shrb
cmp
mov
jns
stos
push
add
pop
cmp
inc
add
mov
imul
sbb
fcomps
movsb
imul
shrl
adc
mov
xchg
ja
sbb
add
test
or
push
in
pushf
jno
add
push
push
shlb
imul
jns
sahf
fiadds
mov
enter
sub
in
jns
pop
xor
wbinvd
repz
push
cwtl
lea
pop
call
add
sub
inc
push
call
push
test
cli
insl
jbe
test
stc
sti
insb
popf
jge
or
cli
sbb
repnz
sub
lret
imull
sub
mulb
cmp
mov
hlt
pop
mov
insl
pop
jl
and
cmp
sub
fbld
pop
jmp
sub
movsb
iret
jb
iret
jne
lahf
imul
mov
rcrb
int3
xor
hlt
push
and
sub
cmpsl
and
testb
daa
inc
jnp
lods
ffree
in
or
arpl
pop
sahf
push
pop
fisttpll
and
cmp
xchg
fs
into
aad
shll
rclb
or
out
and
sti
inc
stc
hlt
mov
jmp
pop
fstps
dec
mov
iret
shl
lods
jnp
fwait
lock
inc
cld
sbb
clc
imul
mov
cs
mov
mov
jmp
ljmp
data16
out
das
and
sub
in
pop
scas
sbb
out
imul
into
sub
repnz
scas
mov
add
pusha
je
lds
popa
cs
or
fiadds
cmp
mov
dec
mov
mov
xlat
or
outsb
jns
daa
add
lcall
inc
pop
xchg
pusha
inc
adc
pushf
pop
or
dec
sbb
xchg
xor
push
leave
xlat
mov
hlt
push
xor
cli
pop
push
lcall
loop
cmpl
or
sahf
push
shrb
sbb
jno
out
arpl
cmpsl
and
lret
xchg
test
in
sub
pop
ror
lods
pop
push
jns
xlat
outsl
out
lea
push
int3
add
repnz
jae
mov
add
es
sbb
rcrl
out
sbb
popa
js
add
iret
cmp
or
test
je
mov
cmc
xor
test
xor
xor
loope
add
sbb
dec
mov
lret
xor
and
xchg
clc
imul
or
jb
mov
adc
das
incb
mov
adc
lahf
loopne,pt
repnz
pop
out
insb
inc
repz
jge
imul
pop
outsb
mov
dec
test
inc
in
mov
dec
or
inc
das
pop
xchg
jo
daa
sbb
push
enter
in
mov
mov
pop
call
jge
add
dec
mov
stc
push
lea
pop
loop
sbb
test
insl
inc
clc
pop
and
stos
pushf
lds
cmp
outsb
cmpsl
cs
clc
inc
imul
add
lret
mov
push
out
fistl
cltd
mov
mov
jle
loope
mov
cli
outsl
mov
or
and
incb
not
add
outsb
lock
in
and
cmp
cmc
cmp
repz
mov
push
add
pusha
xchg
mov
add
sbb
lcall
push
and
cmpsb
push
outsb
aam
popf
fdivrs
cmp
push
push
xlat
imul
push
lock
test
jno
mov
jge
and
int
mov
xchg
mov
sbb
cmp
int3
test
andl
adcb
dec
sub
dec
pop
sub
out
scas
mov
pop
or
lods
out
add
mov
pop
stc
xchg
rcrl
in
inc
jbe
rolb
fimuls
sbb
mov
inc
sub
jle
jnp
xchg
inc
rorb
jmp
jle
rcll
out
or
mov
loope
or
ja
push
outsb
cmp
out
sti
xor
cmpsl
test
sbb
into
sbb
movsb
test
fmuls
in
jae
pop
jno
sub
and
sub
cmp
dec
lods
testl
mov
int
out
mov
pop
filds
mov
xorl
cld
icebp
fsubrl
adc
or
imul
add
xlat
jns
jecxz
call
insb
and
xchg
jmp
fsub
cmp
addb
cmc
mov
fdivrs
sub
test
ret
stc
and
add
insl
mov
sbb
xchg
inc
in
test
iret
cld
jp
insl
jo,pt
add
mov
leave
into
clc
and
jns
sbb
dec
out
or
xchg
daa
and
dec
fwait
loopne
xor
and
xchg
rol
adc
inc
out
jae
enter
and
xchg
sbb
fdivs
sub
nop
ljmp
jmp
and
jle
xchg
cmp
jmp
xor
mov
vpmovsxwd
pop
cs
sahf
es
cmp
dec
sarl
data16
es
sub
dec
bound
fnstcw
mov
adcb
cmp
fists
outsb
xor
dec
fwait
pop
in
jo
mov
nop
packssdw
mov
jb
imul
test
aas
pop
sub
aaa
in
add
aas
pop
xor
int
xor
test
call
shr
add
adc
and
sarl
std
adc
lods
dec
movsb
outsl
outsl
inc
addr16
add
xchg
adc
ret
icebp
loopne
subl
mov
ret
jge
mov
mov
push
pop
or
push
push
lock
fisttps
hlt
mov
test
data16
ret
push
mov
ret
incl
int
mov
xchg
pop
cmp
xor
nop
push
lock
push
outsb
add
ret
int3
push
insl
dec
fstps
mov
orb
lds
mov
gs
push
fdivrp
jp
cld
jb
lods
xor
scas
hlt
addr16
bound
ds
pop
call
or
mov
sbb
jno
jne
mov
and
daa
pop
push
xchg
je
out
imul
adcl
add
xchg
mov
test
jne,pn
sarb
loop
mov
data16
or
and
dec
icebp
adc
fisubl
add
dec
push
repz
aam
daa
pushw
repnz
icebp
stos
js
dec
cmc
xor
jmp
rol
mov
movsb
jge
or
into
sti
gs
mov
movsb
arpl
add
add
jl
jecxz
push
bnd
sbb
mov
sarb
test
jo
sbb
push
or
ret
mov
iret
sarl
add
sti
in
pop
rorl
add
sbb
push
popf
iret
gs
cmp
cmp
and
cltd
push
and
dec
cmp
push
add
xor
mov
rclb
push
jp
and
lret
dec
push
sbb
fsubp
pop
fsubp
pop
hlt
outsb
aam
push
add
or
sbb
fcomi
aas
out
cld
aam
test
or
sub
outsl
and
subb
mov
jne
fucomi
add
add
adc
daa
in
xchg
xchg
into
iret
and
cmp
shlb
pop
stos
jbe
jecxz
mov
repnz
test
mov
dec
mov
mov
sub
push
sub
push
fcompl
add
stos
test
push
arpl
dec
iret
mov
repnz
insl
out
add
sarl
jge
xchg
xchg
test
xor
push
dec
mov
cmp
call
out
outsb
sbb
gs
push
mov
loopne
fsubrl
rcll
ret
loop
mov
popa
stc
inc
lock
or
stc
cmp
cmc
rorb
add
mov
gs
fisubrl
jno
fs
jmp
push
jg
sub
imul
inc
inc
add
inc
add
rorl
mov
and
mov
andl
lea
movzbl
and
mov
and
mov
mov
sub
orl
add
mov
mov
xor
orl
add
movl
jne
jmp
movl
cmpl
je
cmpl
jl
jmp
pushl
push
push
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
negl
sub
xor
mov
mov
mov
orl
xor
xor
adcl
sub
andl
sub
xor
mov
movl
mov
movl
mov
jmp
movl
cmpl
je
cmpl
jb
jmp
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
mov
adcl
xor
subl
xor
sub
sub
andl
mov
inc
mov
cmpl
jge
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
movzwl
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
call
jmp
mov
sbb
mov
add
adcl
imul
mov
adc
mov
mov
xor
mov
adcl
add
or
mov
mov
adc
mov
add
adcl
xor
adcl
mov
adcl
mov
mov
andl
add
addl
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
jmp
ficomps
xchg
mov
jl
jmp
jl
mov
int
push
lods
mov
rcr
into
imul
or
mov
roll
and
and
rolb
sahf
sub
xor
cmp
push
int3
xchg
sub
mov
and
es
or
arpl
jmp
adc
dec
fidivs
shlb
mov
xchg
popw
data16
loope
xchg
cmpsl
pop
jne
push
cmpsl
jle
sti
push
out
cltd
mov
das
jl
xlat
fisubl
adc
xchg
adc
or
push
out
pop
and
loope
xor
cmpsb
cld
inc
fcomps
adc
jmp
lcall
das
test
insl
popa
iret
xor
dec
repz
dec
dec
xchg
add
das
outsl
or
ljmp
lock
xlat
int3
ja
outsb
add
dec
lret
in
test
bswap
inc
mov
mov
int
aas
xor
mov
rorb
xor
sti
aaa
movsl
mov
aas
lret
out
movsb
and
push
fadd
mov
addr16
sbb
xchg
ficompl
sub
mov
es
xchg
jecxz
add
jmp
fs
andl
vprotq
cmpsl
inc
orl
add
jmp
dec
dec
cmp
jmp
jmp
aad
fimull
dec
sbb
out
or
cmpsl
or
out
push
push
fwait
ret
mov
sarl
inc
xchg
cmp
lahf
xor
mov
push
aam
mov
call
adc
cwtl
mov
mov
fsubs
outsb
mov
aaa
jp
mov
or
push
add
xor
div
stos
out
or
adc
loope
jns
ret
pop
dec
int
pop
or
cmp
jmp
add
mov
filds
mov
add
and
pop
gs
sbb
sbb
push
mov
adc
sub
add
ja
inc
sti
or
popf
mov
insb
xor
adcb
add
push
outsb
pushf
inc
testl
in
pop
popa
out
dec
push
sbb
shlb
leave
vpmuludq
imul
jo
sbb
mov
mov
aam
mov
sub
lock
ret
pop
sbb
mov
add
pop
out
scas
xchg
xchg
mov
daa
shlb
rcrb
pusha
scas
sub
pop
mov
mov
gs
dec
repz
push
jnp
scas
lock
ja
xchg
xorb
xchg
jle
enter
insb
push
sarb
sahf
xor
out
pusha
sbb
sti
dec
sub
mov
les
xchg
sub
cmovbe
add
cmp
push
adc
shlb
sarb
push
lds
dec
aaa
insl
adc
push
inc
and
daa
popa
imul
dec
cmp
dec
imul
fmull
sub
mov
cmp
inc
test
jecxz
jmp
fdiv
or
and
pop
xlat
xchg
pushf
ret
pop
daa
push
dec
jmp
mov
fisttps
adc
jl
ss
pop
push
inc
mov
and
pop
sub
and
stc
fldenv
imul
jbe
push
cmp
test
enter
insl
jmp
mov
push
into
jmp
and
fyl2x
addr16
mov
sbb
popf
jmp
aas
outsb
test
shll
push
mov
sub
outsb
add
arpl
inc
sarb
cmp
je
mov
mov
mov
adc
nop
shrb
scas
leave
ljmp
mov
push
lock
popf
add
push
adc
push
mov
daa
jg
sub
pop
in
inc
mov
inc
push
shrb
mov
or
fisubrs
mov
mov
mov
clc
mov
test
negb
pushf
loope
push
jp,pn
jb
mov
and
jbe
push
ret
sbb
lods
sub
jge
adc
enter
lcall
movb
dec
fstpl
cli
stos
push
lcall
pop
inc
test
sub
xchg
addr16
dec
push
lret
shrl
lfence
data16
lcall
cmp
pop
movsb
add
and
out
aam
in
mov
pop
ljmp
or
jp
jle
dec
mov
std
je
mov
cli
mov
popf
jge
and
xchg
into
sbb
nop
loope
stos
fcmovu
int3
sub
xor
loope
clc
push
int3
sar
fistpl
repnz
jb
sub
lods
inc
mov
shr
in
mov
mov
test
scas
push
mov
inc
ret
pop
jnp
fnstcw
cmp
jp
out
popf
add
add
inc
icebp
ret
mov
sub
fists
pop
movsb
mov
stos
icebp
fdivl
repnz
sbb
pusha
stc
cld
dec
addb
or
cmc
add
int
cmp
fisubl
mov
adcb
mov
gs
add
in
into
stos
sub
rcrb
adc
adc
pop
push
sub
mov
sahf
addl
pop
dec
push
cmp
les
decb
cmc
xor
cmpsl
movsb
popfw
push
repnz
fsubrl
scas
test
pop
jmp
mov
mov
arpl
xor
shrb
repnz
insb
imul
pop
mov
mov
mov
lret
add
test
in
add
xor
cld
sbb
mov
lds
lds
lods
jge
cmp
aas
pop
lock
les
fistps
xchg
cmp
in
jbe
xor
cs
outsl
aad
xchg
pop
push
sbb
lcall
leave
adc
ljmp
and
or
xor
outsb
mov
mov
loopne
ds
pop
iret
aaa
stos
dec
mov
xchg
mov
fdivs
test
xor
sub
test
out
push
pop
pop
fidivrl
rcrl
ds
scas
sbb
movsb
sub
jnp
adc
dec
loopne
or
xchg
shll
sbb
rclb
xchg
cmpsl
cmc
push
testb
inc
jle
outsb
aad
push
mov
xchg
mov
jecxz
in
cmpsl
sub
pop
jge
sbb
push
test
pop
mov
xchg
icebp
outsb
pop
popa
jmp
pop
sti
pop
scas
mov
movsl
test
adc
test
dec
int
mov
scas
adc
inc
mov
xchg
jmp
mov
pop
jmp
sahf
in
add
jge
test
inc
idivb
sub
or
lds
inc
adc
cld
jno
mov
jle
sbb
and
out
adc
jecxz
jbe
movsl
adc
inc
adc
sbb
pop
mov
jmp
or
scas
jl
lcall
mov
ds
rorl
jne
push
sahf
adc
push
iret
add
or
jl
insb
stc
sub
and
call
repnz
add
and
fwait
dec
or
je
mov
inc
pop
and
xor
mov
ss
mov
or
xor
jae
imul
or
adc
cs
nop
bound
xor
loop
and
mov
sub
lea
lea
outsl
xchg
pop
data16
shl
add
mov
or
mov
sub
inc
mov
sub
push
dec
cmp
jo
scas
and
bound
lahf
loope
out
addb
es
fdivs
repz
sbb
sub
jae
es
inc
sahf
jnp
push
loopne
xor
scas
sti
add
lock
inc
mov
inc
and
movsb
mov
lahf
test
inc
testb
cmc
adc
mov
loop
xchg
jge
loope
jg
fidivs
iret
cmpsl
scas
push
sahf
cmpsb
add
pop
shlb
dec
cmp
mov
leave
test
hlt
test
mov
and
and
adc
lock
xchg
pop
xchg
xchg
imul
lcall
leave
sbb
dec
xor
add
loope
shlb
mov
cmp
ret
mov
pop
mov
mov
or
std
cld
insb
xor
add
adc
cmpb
pop
lods
loope
sbb
adc
mov
pop
pop
cli
dec
push
xabort
pusha
mov
cmc
jbe
cli
sub
insb
insb
fsub
aas
mov
lahf
shr
test
push
ror
xor
loope
push
sbb
mov
mov
stc
lret
sub
jae
lods
cmp
sbb
push
inc
cmp
in
mov
and
dec
outsl
push
xchg
ret
jbe
mov
pop
aaa
fstl
push
mov
imulb
mov
unpckhps
dec
into
inc
adc
test
insb
sbb
sub
pusha
jl
push
lds
xchg
in
test
enter
and
lea
xchg
xor
outsb
sub
mov
pop
pop
das
dec
les
movsb
dec
mov
nop
pop
pop
lret
add
push
mov
fildll
xchg
mov
ja
fcoms
int3
test
popa
push
addr16
dec
loop
movsb
in
xor
pusha
pop
mov
inc
popf
sbb
stos
icebp
adc
js
mov
jae
xor
jb
adc
aaa
cmpsl
push
and
or
sub
movsb
inc
gs
mov
xlat
hlt
or
adc
and
sub
xchg
pop
push
movsl
loopnew
ret
sub
loopne
gs
mov
sub
pop
xor
fcomps
out
mov
mov
cmp
cmpsb
cld
jns
pop
jo
cmp
dec
out
addr16
insl
jbe
aas
cld
xor
pop
xchg
clc
mov
inc
repz
dec
jne
mov
in
pop
test
andl
jge
adc
jno
and
mov
push
int
lcall
adc
xchg
rcl
hlt
orb
sbb
mov
xchg
loope
lea
test
out
and
mov
or
adcl
push
fwait
outsb
push
pop
mov
out
sbb
add
ret
jo
outsb
in
cmp
mov
jnp
roll
outsb
cmp
push
sahf
ds
fcompp
cld
xor
mov
sbb
cmpsl
and
aaa
xor
subl
fwait
xchg
inc
in
cmp
inc
int3
jbe
sub
xchg
push
dec
pop
movb
sar
inc
jnp
pop
dec
adc
mov
mov
dec
or
aaa
lcall
push
sub
xchg
mov
imul
je
sar
mov
push
pushf
cmpsl
repz
xchg
js
mov
lock
or
lret
shlb
movsb
lds
jl
push
bndldx
repnz
xchg
push
add
mov
mov
cli
push
outsl
cmc
dec
dec
ret
rcrb
cmp
mov
scas
imulb
xor
pop
notl
outsb
xor
cld
ror
outsl
dec
pop
gs
aad
jbe
mov
push
xor
subl
and
xchg
push
rcrl
test
sti
test
ja
cmp
push
cld
pop
sti
add
outsb
outsb
out
push
sub
jle
cmpsl
mov
mov
inc
mov
xor
mov
xlat
xor
cs
push
jnp
jecxz
negb
cmp
xor
repnz
sub
add
inc
stos
inc
push
movsl
cmp
mov
test
lods
jmp
outsb
std
pop
aam
mov
jp
mov
int3
xchg
pop
adc
dec
or
xchg
ret
inc
movsl
sub
mov
xor
mov
push
mov
xchg
dec
icebp
bound
scas
or
xchg
shrl
xor
into
push
cmp
movsl
cld
ss
xor
fiaddl
mov
cmpb
and
into
jns
xchg
xchg
sub
test
jne
das
push
shlb
aaa
xor
cmp
mov
sbb
adc
and
inc
mov
fstl
cmp
jb
lds
adc
mov
mov
std
loop
sub
jbe
sbb
enter
repz
fwait
sbb
sbb
lret
xor
adc
icebp
mov
test
daa
shr
addr16
inc
jmp
mov
in
movb
es
add
or
cmp
xchg
mov
inc
pop
and
dec
jg
iret
jae
or
sbb
xor
loope
adc
adc
cs
sub
mov
fcmovu
push
dec
jg
dec
int3
xorb
out
push
pop
mov
push
cmpsl
mov
imul
and
adc
lods
mov
leave
cmpsl
scas
push
or
jae
push
je
popf
mov
sbb
or
int
inc
shr
out
aas
pop
push
stos
add
inc
xchg
dec
pop
insb
push
add
xchg
xchg
ss
pop
cwtl
call
hlt
lock
adc
test
cli
cltd
xchg
xor
dec
or
imul
xor
lldt
fsts
add
inc
xchg
leave
call
into
sbb
and
mov
dec
ljmp
scas
pop
call
cs
fisubrs
movsl
and
xor
jge
pop
shlb
sti
adc
xor
cmp
enter
inc
sub
dec
ds
popf
pop
push
into
push
pusha
sbb
lahf
test
jle
enter
mov
insl
xchg
cmp
adc
scas
pop
bound
jae
lods
scas
hlt
xchg
shlb
mov
mov
mov
mov
jae
int3
adc
mov
add
loopne
mov
mov
fwait
popf
mov
sub
inc
iret
xor
pop
add
pop
push
daa
movsb
fidivrl
imul
arpl
clc
xchg
sarb
cmp
mov
mov
push
jb
push
rcl
leave
dec
jb
or
and
fists
xchg
das
cltd
les
push
cmp
jnp
adc
imul
cmp
sbb
mov
inc
mov
in
insl
fisubrs
out
mov
inc
aam
gs
imul
ret
dec
test
inc
imul
and
rcrb
sbb
push
sahf
add
xlat
adc
jmp
jge
sub
adc
test
mov
negb
lcall
xchg
dec
fs
dec
mov
sub
out
mov
lock
nop
lods
mov
jecxz
pop
sub
xor
leave
rorl
jecxz
cwtl
adc
cmp
leave
xchg
push
mov
mov
popf
fcoml
dec
pop
mov
mov
dec
mov
arpl
adc
hlt
inc
addr16
cmp
add
jb
mov
add
xchg
fdivrs
pop
and
popf
sub
and
outsl
mov
test
out
push
daa
scas
in
pushf
mov
add
adc
into
push
stos
clc
xchg
outsl
fs
add
sahf
push
lret
inc
and
adcb
out
push
test
jo
cmp
inc
dec
mov
fucomip
inc
pop
jno
adc
nop
cmp
cmpb
xchg
pop
push
popa
xor
inc
jo
fs
or
imulb
addr16
adc
or
push
fimuls
sti
jb
xchg
cwtl
subb
sahf
inc
xor
fisttps
mov
pop
fucomip
add
outsb
daa
mov
cmp
dec
movl
sub
scas
addr16
sbb
pushf
jne
mov
ja
test
fadds
add
outsb
in
xchg
sti
outsl
ret
or
push
cmc
adc
pop
pop
fwait
push
hlt
dec
int3
mov
lods
rcl
adc
mov
mov
add
das
sarl
sahf
push
clc
cmp
lock
insb
push
add
lret
mov
test
clc
adc
pop
dec
cmp
clc
inc
xchg
ljmp
inc
fsub
jno
imul
test
repnz
cltd
lock
or
bound
test
scas
pop
dec
out
push
mov
test
dec
js
mov
cmp
jg
inc
inc
dec
out
mov
aam
xor
dec
dec
cmp
sub
sub
sub
pushl
cmp
popf
mov
push
sbb
cmp
mov
or
repnz
loope
cmp
sbb
ror
add
push
sbb
cmp
dec
movsl
arpl
mov
push
mov
mov
rcll
rcrb
jmp
leave
jne
sar
es
add
outsb
or
adc
rep
adc
add
or
jne,pn
add
adc
or
adcb
push
je
in
ret
and
jae
cli
mov
movsb
mov
add
mov
pop
inc
add
lret
aad
pop
mov
pop
jp
sbb
or
mov
jb
movsb
jle
sbb
jb
add
xchg
mov
pop
addr16
mov
popf
shlb
das
call
pop
adc
neg
sbb
jl
mov
orl
cmpsb
jns
xlat
out
loope
jp
cwtl
or
xorl
add
popf
xchg
ret
outsl
add
mov
add
mov
add
pop
xchg
jmp
and
mov
les
ds
push
int3
out
cmp
loope
adc
scas
out
cmp
sbb
ja
cltd
lahf
mov
dec
push
mov
lret
or
ret
sbb
loopne
std
xor
hlt
pop
rcll
mov
sub
push
je
call
pop
xchg
cmp
out
push
daa
mov
xchg
mov
cmp
and
pop
cltd
cmp
inc
sbb
arpl
xor
pop
cmp
sbb
mov
adc
xchg
scas
mov
aaa
in
push
mov
lret
mov
repz
inc
mov
dec
decb
or
or
sbbl
rclb
ss
loopne
fwait
idivl
out
jo
jne
xchg
jge
push
les
xchg
xchg
xchg
loope
push
cmpsb
lret
out
test
pop
jge
repz
inc
inc
and
jecxz
or
cmp
sbb
sub
xchg
out
inc
cld
dec
jl
loopne
mov
pop
popa
or
pop
and
aas
dec
les
aad
xchg
cltd
mov
cmc
rcr
mov
xchg
ja
cmc
lods
fcoml
pop
push
push
je
scas
and
inc
push
dec
mov
or
cwtl
lcall
cld
divb
push
and
imul
xor
arpl
imul
mov
xor
jae
add
sbb
lcall
and
xor
lret
ljmp
push
les
popf
xor
sub
push
inc
or
cwtl
cmp
xor
mov
or
repnz
add
gs
mov
pop
xchg
xor
push
mov
insl
ret
and
inc
xchg
cmp
mov
jnp
mov
lea
xlat
scas
adcb
idiv
dec
xor
out
roll
mov
stos
inc
and
cmpsb
clc
clc
out
rolb
inc
popa
jbe
fwait
sub
in
lcall
push
push
dec
mov
bound
pop
incl
and
pop
sub
cmp
sbb
ret
mov
and
icebp
lahf
jle
add
ss
les
scas
mov
repz
sbbl
ds
js
popf
jge
cld
add
in
sub
mov
jno
adc
dec
arpl
lret
scas
add
xlat
test
and
or
int3
or
outsl
fs
mov
insb
add
dec
mov
shll
shrl
shl
sub
mov
and
inc
jecxz
test
mov
fstpt
or
dec
mov
xlat
call
popa
lds
xchg
dec
adc
cmp
stc
cmp
stos
jle
jne
sbb
fbld
jp
fldcw
mov
dec
das
mov
js
outsb
lock
lods
movsl
adc
out
mov
out
fnstsw
xchg
xor
scas
or
aas
fsubrl
sub
sub
and
xorl
mov
int
loop
jmp
dec
lret
les
or
and
sub
sti
outsb
ss
icebp
mov
test
push
mov
mov
cmpsl
lods
push
ret
and
push
dec
bound
cmp
mov
inc
jmp
jne
insl
fucomi
cli
cwtl
jle
imul
dec
xor
int
pop
rorl
addr16
pop
pop
inc
nop
fsub
sbb
xchg
lret
or
pop
shll
mov
jns
push
out
jno
daa
mov
fwait
int3
daa
out
sub
shr
fimull
insb
ljmp
xchg
mov
ret
sub
mov
rcll
pop
add
xchg
mov
xchg
icebp
cld
mov
mov
cs
pop
pop
popf
xor
push
sub
mov
shlb
jmp
ljmp
fsubs
aas
xchg
aad
aaa
xor
or
insb
sbb
mov
jecxz
mov
movsl
mov
adcb
or
or
pop
ss
fidivrl
push
lea
cmp
mov
inc
xor
lea
sbb
push
xor
int3
cwtl
pusha
mov
mov
jbe
and
in
xor
and
nop
push
mov
xlat
cwtl
shrb
xchg
sub
xlat
or
gs
push
or
mov
mov
das
sahf
test
dec
clc
dec
mov
jecxz
mov
and
xchg
mov
push
in
push
fistpll
imul
test
cs
out
xchg
sub
notl
add
prefetcht2
cmp
jb
push
dec
xor
ret
cmp
cwtl
push
mov
lock
cmp
aad
xchg
bound
adc
icebp
pop
sbb
rolb
ja
pop
call
aaa
fstl
andl
icebp
sbb
pusha
xchg
xor
int
add
pop
sbb
dec
jns
out
in
sbb
roll
mov
pop
add
ja
add
push
mov
arpl
cld
icebp
sub
xlat
inc
pushf
push
mov
ja
imul
sbb
add
pop
xor
lods
sbb
push
cmp
jg
iret
inc
cmc
test
cmpsb
xchg
push
inc
adc
lea
push
xchg
cs
xor
xor
dec
dec
hlt
jge
add
add
pop
hlt
aam
in
mov
in
in
nop
jnp
sbb
das
in
pushf
dec
lretw
rcll
outsb
dec
popa
adc
or
sbb
xor
xchg
aaa
jg
or
mov
push
jmp
por
dec
cmp
adc
stos
sub
aam
addr16
insl
pop
push
in
lods
fldenv
pop
push
mov
lret
cmp
sub
lcall
lahf
gs
fs
push
fst
sub
push
sub
inc
int3
or
ret
addr16
or
sub
gs
xlat
dec
xchg
and
xchg
mov
mov
sub
add
data16
shrb
pop
aam
xchg
mov
xor
lods
cmc
push
cmp
lea
lods
mov
xchg
out
xchg
mov
scas
xchg
or
rcl
sti
mov
jne
push
loope
or
dec
mov
lret
test
fisttps
add
sbb
lcall
das
jnp
pop
fwait
sub
inc
mov
outsl
adc
es
jno
adc
ss
enter
fldcw
adc
mov
subl
mov
ret
sub
fisttps
pop
add
or
sub
jno
inc
hlt
pop
dec
fwait
xor
iret
push
cmpsl
enter
or
das
mov
lret
and
jno
bound
mov
sub
adc
mov
frstor
pushf
ljmp
jge
gs
jno
pop
test
push
xor
leave
fistpl
les
popf
shlb
outsb
ret
out
dec
push
lcall
aam
push
and
mov
pop
movl
dec
xor
mov
out
frstor
leave
dec
aad
lret
nop
fisttpl
nop
test
hlt
push
pop
mov
imul
mov
and
imul
dec
pop
cmp
inc
pop
or
dec
lock
repnz
inc
rcll
mov
rolb
gs
movsl
je
push
pop
aam
jns
cli
push
inc
dec
enter
pop
scas
nop
cmp
fistpl
fiadds
gs
xchg
divl
xchg
mov
push
xor
les
cmp
sahf
push
xlat
push
jge
jmp
es
sub
pop
inc
fistpl
sub
mov
scas
lea
jecxz
inc
jno
dec
dec
pop
lret
pop
jns
stos
pop
iret
aaa
and
mov
jg
stc
mov
cld
xchg
jp
int3
add
pop
stos
push
insl
and
push
mov
scas
fsubr
inc
cmpsl
xor
push
xchg
dec
lret
xchg
push
repz
das
xchg
in
lea
jmp
mov
mov
mov
pop
ret
lock
jmp
aad
jo
lods
int
sbb
and
mov
int
les
add
lock
or
mov
int3
xchg
outsb
jl
imul
or
outsl
aam
imul
sub
stos
mov
std
add
fmuls
pop
dec
mov
imul
sbb
xor
popa
xchg
jnp
fnstenv
test
ljmp
and
test
and
sub
sbb
jno
jne
arpl
mov
ret
insb
fidivs
ss
ljmp
xchg
jae
sub
pushf
dec
add
cmp
fsts
in
jecxz
cmp
xor
fnstenv
stos
dec
stc
stos
cmp
or
adc
test
cli
aad
mov
mov
pop
sarl
add
dec
pop
imul
popa
adc
xchg
fidivrl
cmpsb
jle
incl
push
jns
imul
dec
mov
fadds
pop
inc
imul
cltd
repz
inc
mov
jo
pop
fdivr
pop
aad
lods
mov
sub
mov
mov
add
inc
cmp
cmp
fmuls
test
mov
sub
jmp
gs
cs
in
nop
nop
inc
mov
call
inc
sbb
pop
enter
cmovbe
push
lea
dec
sbb
and
and
mov
push
mov
xchg
into
sbb
push
push
sbb
cmp
or
popa
fld
loopne
into
leave
sub
aad
inc
jbe
lods
jae
test
lahf
pop
int
out
pusha
out
mov
dec
pop
adc
or
dec
fldcw
mov
push
fdivr
fwait
test
dec
mov
push
mov
push
adc
mov
xor
mov
inc
imul
push
jnp
inc
pop
repnz
inc
fs
scas
scas
repnz
test
sbb
stos
scas
adc
sti
std
cs
cli
xor
sub
xchg
nop
sub
mov
cmp
movsb
add
roll
imul
scas
lcall
sbb
lock
adc
or
xchg
mov
and
fldcw
mov
add
repz
int
adc
mov
stos
and
add
imul
fidivl
outsl
cmc
fprem1
cmp
pop
bound
mov
in
push
pop
sbb
rorb
lods
xchg
daa
xor
cmp
lods
cmp
imull
shrl
out
pushf
jbe
dec
clc
insb
cmp
aas
paddw
cmpsb
cs
jno
xchg
shll
lods
mov
adc
or
cmp
mov
lahf
mov
shll
cwtl
inc
pop
insl
stos
pop
jne
rolb
mov
adc
int
push
movsb
fsubrl
or
mov
loopne
pop
lods
rolb
dec
mov
loop
mov
jae
fldl
ja
jne
push
jo
gs
scas
and
out
cld
cli
into
adc
pushl
jg
cmp
cld
testl
mov
ds
mov
pop
push
mov
fcmovb
sub
xchg
jp
push
out
in
dec
jp
ficompl
popf
int
inc
inc
inc
ret
mov
fldenv
bound
and
xor
xorl
xchg
shl
dec
loope
ja
add
mov
jns
push
mov
sub
xchg
ja
nop
aaa
cltd
mov
popf
pop
mov
je
xchg
fadds
fidivl
lahf
shlb
or
jbe
imulb
lods
and
jno
jne
test
mov
dec
out
daa
arpl
test
cmp
xchg
test
xor
push
loopne
daa
je
pop
pop
inc
pop
in
push
and
sub
adc
out
adc
in
dec
mov
pop
std
jae
fistpll
sahf
fmuls
mov
imul
cmp
int
fstpt
loop
or
mov
movsb
add
pop
clc
sbb
mov
pushf
cmc
dec
push
sub
je
dec
mov
out
loope
ret
cmpb
pop
adc
mov
push
push
in
loopne
mov
pop
cmp
loopne
push
jae
jne
mov
push
ja
sub
pop
sbb
push
push
popf
cs
je
mov
movsb
adc
xchg
and
push
cmp
scas
cmpsl
je
sbb
jb
cmp
repnz
faddl
pop
inc
lret
dec
out
jnp
lea
pop
push
xchg
inc
mov
push
pushf
xchg
cmc
push
sbb
test
mov
xor
enter
xor
ret
bound
fs
xor
stos
stos
out
enter
sbb
or
add
dec
scas
aas
or
sarl
sbb
cli
rolb
sbb
sti
inc
jmp
gs
inc
in
dec
rorl
pop
pop
sub
cmp
mov
mov
cmpsb
into
mov
xor
loopne
xchg
push
xchg
popa
cmp
adc
sbb
mov
sarl
psubb
rclb
sub
sbb
sbb
and
fcompl
jns
iret
jne
rcl
scas
and
notl
mov
mov
add
sbb
adc
sahf
xor
and
jae
push
pushf
leave
ret
sub
push
inc
scas
or
or
sbb
out
xchg
into
fildl
lcall
push
cmp
aas
sub
cmpsl
mov
call
pop
int3
fwait
int
cmp
cmp
aam
rcrb
andl
jne
cmpsl
sbb
xchg
inc
jbe
xchg
pandn
pop
dec
into
and
out
rcll
in
mov
xor
and
lret
mov
bound
stos
fsts
loope,pt
daa
jp
and
xchg
sbb
mov
pop
lahf
dec
push
mov
test
out
fistpll
inc
aad
aad
scas
fs
pop
mov
scas
add
fnstcw
aas
or
sub
push
imul
imul
in
jp
xchg
insl
sbb
scas
subl
xor
sbb
out
add
lcall
cmp
idiv
mov
mov
xchg
insl
nop
sbb
rcr
or
pop
mov
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
jmp
rcrb
and
rorl
cmp
jne
dec
test
jl
cmpsl
xor
nop
adc
push
notl
push
jne
adc
sbb
sub
xchg
imulb
loop
jo
ja
sbb
aam
out
ja
jne
push
out
xor
lea
lahf
pop
jnp
je
sti
or
cltd
enter
iret
xchg
push
add
bndldx
sbb
xchg
rorb
dec
repnz
loopne
sahf
xor
mov
dec
push
sbb
dec
in
shlb
in
and
push
fisttpl
movsl
and
add
or
fisttpll
fnsetpm(287
arpl
xor
bound
sub
sbb
ljmp
sbb
sbb
lahf
push
fldenv
pop
pop
popa
hlt
jl
mov
inc
in
sti
int3
pusha
aas
dec
xchg
mov
lods
mov
lret
cmp
ret
sub
leave
es
fcomp
test
xor
outsl
imul
adc
mov
inc
adc
shlb
lahf
jl
xchg
push
cmp
fwait
data16
dec
aam
out
pop
add
push
ss
dec
and
fcomi
lcall
out
add
lahf
aas
stc
fwait
sbb
in
sub
rcll
shlb
jle
add
add
stos
and
sub
stos
pop
push
xchg
aas
cmpsl
pop
dec
lods
call
sub
call
mov
or
adc
mov
and
lods
mov
sbb
mov
and
pop
mov
js
cmp
mov
jge
outsb
test
dec
repz
pushf
arpl
inc
pop
lcall
je
xlat
pushf
xchg
push
mov
sub
inc
adc
loope
ss
cltd
push
sbb
test
push
mov
xchg
je
xchg
cmpsb
test
lock
in
pop
rcll
lcall
push
fwait
int3
cmc
aaa
lcall
pushf
sbb
mov
pusha
lcall
mov
or
cmp
pop
push
cs
sub
scas
mov
mov
push
push
cmp
cwtl
int
add
dec
sahf
arpl
lods
in
push
inc
outsl
je
jmp
addl
lods
stos
add
dec
mov
inc
out
mov
sbb
xchg
fdivrl
mov
sub
gs
add
cmp
stc
cwtl
test
adc
rcl
int3
pop
dec
ret
fwait
pop
jmp
movsb
fsubl
add
push
sarl
ljmp
jle
das
add
flds
add
xchg
out
xor
lahf
push
iret
push
mov
jmp
jb
and
test
dec
lahf
xor
jo
loop
inc
sbb
clc
testb
idivl
xchg
push
clc
dec
jno
pop
and
lcall
xor
and
fiaddl
xchg
xor
nop
fldl
xor
daa
shrb
inc
dec
push
fcoml
jnp
sub
inc
mov
jecxz
adc
in
fstl
or
mov
into
das
lds
repnz
test
fiadds
cmc
and
jbe
xchg
mov
cmc
and
mov
ja
sti
xor
ja
testb
jecxz
sub
cs
fadd
jbe
cs
jbe
fisttpl
gs
iret
mov
and
push
stos
andb
lea
mov
popf
push
pop
cmp
dec
and
cmp
xlat
loopne
adc
popa
std
clc
pushf
out
sub
js
mov
movsl
or
daa
dec
fs
imul
jnp
dec
cli
enter
xchg
fstpl
jae
and
nop
imul
enter
inc
aam
pop
add
clc
cmp
cmp
mov
and
in
sbbb
stos
push
and
dec
sbb
or
sbb
push
cmpsb
xor
push
mov
inc
xor
xchg
xor
stos
daa
je
js
and
rclb
and
pop
mov
push
movsb
sbb
sbb
arpl
ja
add
outsb
sub
dec
popf
popf
cmp
lock
sbb
xchg
push
mov
pop
pop
adc
push
cmp
mov
testb
les
loop
xchg
dec
sbb
mov
pop
movsb
pop
cld
sbb
mov
movsb
clc
cwtl
mov
es
mov
cmpsb
jae
jb
jmp
out
xor
clc
pop
in
mov
push
addr16
cmc
pop
xchg
rcl
popf
orb
jns
lcall
jp
in
pop
or
jno
stos
sub
jecxz
push
or
mov
dec
dec
fcoms
pop
xchg
add
pop
test
js
iret
or
fcoms
xor
mov
mov
movsb
xor
mov
sub
lods
cmc
xchg
lods
ficoms
loop
aam
inc
xor
lahf
or
in
cltd
testl
dec
xchg
mov
adc
lea
push
mov
in
jno
in
mov
cs
add
pop
inc
int
aas
cmpb
scas
sahf
testb
push
and
inc
adc
lea
lret
lret
push
pusha
mov
xchg
mov
in
pop
js
repnz
pop
dec
and
or
push
mov
js
mov
inc
pop
repnz
bound
or
push
or
pop
push
imul
stos
cmc
ljmp
sbb
jp
sub
lret
cmp
dec
mov
sub
mov
mov
cwtl
enter
arpl
gs
js
sahf
aam
push
xchg
cmc
pusha
aam
jns
push
mov
pop
inc
dec
jne
dec
push
hlt
mov
in
xchg
stc
add
subl
jge
add
cld
sub
inc
mov
ds
and
std
test
or
pop
std
ret
add
xchg
xchg
and
sbb
add
test
xchg
test
xorb
sarl
es
pop
mov
aas
sbb
pop
adc
jb
push
pop
dec
shl
push
mov
add
mov
add
les
mov
mov
fcmovu
xor
dec
mov
jnp
les
mov
or
faddp
mov
imul
in
jo
or
cld
sub
lret
out
sub
pop
rcr
jbe
pop
cvtdq2ps
jo
xchg
in
cmp
push
fmull
insl
sub
and
out
repz
push
nop
xchg
add
lock
pop
mov
adc
xchg
in
push
shlb
pop
sub
dec
mov
ds
dec
stos
and
xor
jg
push
and
xchg
dec
jns
pop
sub
push
lods
cmp
pop
adc
movsb
lods
nop
jbe
jno
fbstp
jns
fs
out
xor
sti
in
stc
in
pop
pop
insl
jg
mov
jecxz
pushl
in
sbb
cmp
add
push
and
dec
cltd
inc
mov
add
push
sbb
and
stos
dec
hlt
imull
aas
pop
std
cmp
adc
mov
aad
or
adc
jl
sub
push
jbe
ljmp
aaa
xchg
push
aam
dec
pmaxsw
jle
and
in
lret
xor
xchg
lock
mov
lahf
add
sti
cmp
xlat
mov
ljmp
out
mov
popf
js
lods
jmp
mov
ss
shlb
add
rorb
cmp
cmp
testl
and
sbb
jmp
and
daa
lret
pop
lea
pop
lcall
arpl
mov
jg
sub
pop
popa
pop
dec
lock
xor
sti
fcmove
xor
xlat
add
sti
ret
cmp
cltd
sbb
mov
xchg
sarl
sbb
sbb
jecxz
addr16
xor
push
sub
dec
mov
lret
aas
mov
ds
push
fnstsw
mov
sub
movsb
repnz
mov
imul
push
pusha
adc
popf
out
mov
mov
call
cmp
stc
out
out
loop
adc
adc
aaa
adc
or
loop
jns
mov
ficompl
cmp
scas
fld
inc
add
cld
pop
mov
mov
pop
outsb
in
les
mov
xor
adc
mov
lock
fldcw
shll
enter
int
in
xor
inc
xor
enter
mov
sub
popa
movsl
pop
and
arpl
idivb
pop
xor
rcl
out
add
jae
dec
aad
mov
pushf
mov
inc
test
test
inc
cmpsb
lods
out
movsb
mov
adc
lds
mov
popa
fstl
inc
sub
and
dec
pop
mov
mov
sbb
nop
mov
out
mov
xchg
xchg
insl
pop
out
dec
cmpsb
push
adc
mov
sub
into
xor
fs
stc
and
sub
icebp
in
cmp
xchg
jge
xchg
stc
cmp
jmp
cmp
pop
xchg
ds
xlat
push
fyl2xp1
out
and
rclb
int3
sti
in
push
mov
dec
adc
inc
mov
aam
lret
mov
fwait
or
adc
lret
sub
lret
inc
mov
mov
mov
xor
xchg
sbb
sbb
test
mov
jnp
adc
push
cmp
scas
sbb
lret
imul
int
jnp
cmp
jp
mov
or
shr
cmp
clc
aas
adc
into
sbb
mov
add
rolb
or
mov
and
cltd
cmpsb
sbb
lcall
rorb
shlb
stos
lea
inc
loop
rcl
cmp
es
testb
mov
push
sahf
ret
scas
mov
sub
cmp
lcall
inc
test
das
or
and
inc
inc
pop
push
frstor
rorb
and
inc
xor
mov
movsb
pop
or
les
arpl
cmp
push
mov
mov
and
or
cmpsb
mov
adcb
pop
dec
addr16
je
repz
push
add
clc
fildl
and
xchg
mov
shr
aad
ds
push
and
ret
loopne
int
std
out
dec
in
xchg
mov
jbe
or
xchg
fildl
push
imul
mov
sub
cmp
pop
addl
fmull
push
and
in
fisubrl
aam
xor
sbb
xchg
stos
in
lea
popa
sub
scas
sub
in
push
shrb
cli
fs
cmp
push
imul
xchg
cmp
repnz
sub
imull
xor
sub
scas
xor
mov
sub
enter
aaa
scas
push
lods
andb
mov
dec
nop
pop
mull
adc
or
pushf
push
in
pop
das
push
enter
adcl
ret
pop
xchg
or
call
sahf
stos
or
cld
xchg
jns
into
and
fstpt
icebp
and
leave
mov
jge
aad
push
mov
xor
shrl
mov
mov
xor
mov
sub
cli
arpl
xor
add
push
lods
pop
xchg
adc
push
imul
or
push
push
sbb
jns
xchg
iret
stos
data16
add
jo
sbbb
test
out
imul
aam
push
sub
jmp
lret
xchg
stc
sbb
or
pop
add
bound
adc
xor
bound
push
jp
add
call
popf
inc
pop
mov
cmp
pop
sub
push
mov
test
adc
movsb
sbb
inc
sbbb
mov
pop
cmp
cmp
add
sub
mov
loope
add
sbb
out
sbb
mov
fsubs
dec
xor
jns
imul
ljmp
std
and
rcl
mov
fmuls
scas
cs
mov
sub
add
mov
mov
jecxz
xchg
sub
inc
jns
dec
dec
sahf
in
scas
sbb
test
inc
jl
imul
int3
mov
sub
xchg
lret
aas
add
pop
popf
decb
mov
and
lea
fnsave
lock
stc
lods
and
arpl
sqrtps
pop
rcrl
mov
xchg
sub
cmc
fisttps
sbb
popf
cmp
or
dec
push
add
je
sub
add
cmp
std
dec
jno
mov
leave
in
xchg
push
xchg
cmpsl
fsubl
cs
mov
data16
pusha
pop
dec
jmp
outsb
rcrb
pop
xor
adc
push
cli
lods
lret
add
xorb
insl
or
std
cs
mov
loopne
out
rcrb
or
jle
mov
pop
sbb
rorb
sub
jmp
mov
xchg
or
mov
dec
and
mov
dec
pop
or
fidivrs
adc
mov
std
sbb
pop
ret
xor
popa
or
inc
rol
out
lock
dec
mov
and
out
cmp
pop
xor
in
push
shlb
and
cmp
rolb
push
or
pop
cli
loop
mov
rcll
inc
adc
jp
loopne
push
movsb
adc
shl
lock
test
pushf
jge
sbb
ljmp
outsb
cmpsl
out
and
imul
outsl
ret
dec
add
scas
push
push
mov
out
mov
sbb
jnp
pop
adc
push
fs
lods
push
int
pop
popf
mov
int3
mov
pop
push
xor
test
pop
andb
mov
xor
xchg
sbb
mov
dec
mov
xchg
jae
inc
dec
orl
cmpsb
mov
jno
sbb
movsb
addr16
ret
mov
test
add
mov
loop
jae
mov
fists
adc
xor
movsl
cmp
xor
sub
aad
pop
sbb
shr
and
aaa
jo
les
incl
fsubs
imul
sbb
pop
lock
pop
arpl
fisttps
and
icebp
pop
push
insl
inc
adc
add
inc
movsl
clc
mov
push
xor
shr
test
rolb
sbb
movsl
add
out
xchg
or
mov
mov
fists
fwait
cmpsb
pop
ret
mov
jmp
cld
in
scas
xor
push
movsb
insb
or
test
insl
xchg
mov
cmpsb
in
push
jg
pushf
sbb
sbb
sub
pop
cmp
in
pop
rcrl
push
pop
jb
lret
adc
addb
adc
sub
mov
js
aaa
ja
inc
inc
sti
jae
cltd
push
dec
aad
mov
ljmp
dec
enter
or
and
ss
jno
and
xchg
addb
jp
in
lret
mov
xor
adc
sub
dec
scas
pop
and
jecxz
mov
fwait
popa
or
sbb
or
sub
out
loopne
sub
das
push
lods
fwait
cld
out
lods
push
fwait
in
out
add
mov
mov
push
jmp
jo
outsl
xchg
cli
sbb
das
xor
sahf
adc
and
cmp
call
and
sub
mov
dec
xor
inc
mov
pop
gs
aaa
es
outsb
mov
stos
xor
aaa
popa
mov
aas
popf
mov
pop
outsb
fnstenv
loopne
cmp
jae
loope
pop
fwait
xchg
pop
adc
push
or
and
push
dec
push
enter
mov
jb
cltd
out
push
hlt
in
lods
add
dec
jnp
and
or
loop
in
sub
lds
pushf
dec
mov
test
mov
loopne
inc
push
mov
push
aad
push
in
dec
out
fstp
jbe
popa
test
dec
push
pop
sub
lahf
pop
aad
call
adc
out
shlb
cmp
pop
cmp
mov
adc
add
jo
mov
xchg
gs
hlt
cmp
daa
scas
cli
xchg
dec
sbb
xchg
sub
push
push
rcll
test
push
shll
adc
add
dec
testl
sub
pop
push
cli
push
inc
fcompl
or
jno
adc
scas
inc
adc
cld
jl
fnstenv
add
push
insb
ljmp
xchg
lds
shl
fs
movl
cs
cvtpi2ps
into
scas
adc
in
lods
hlt
pop
aas
cmp
imul
lret
xchg
stos
ret
xor
jmp
fwait
decb
or
or
jmp
or
arpl
out
test
cmp
test
inc
out
pop
mov
mov
jae
daa
jb
adc
sub
cmpsb
lods
xchg
inc
push
pusha
rolb
loope
sbb
hlt
cmp
cmp
or
fmull
jae
and
dec
push
imul
cltd
inc
push
pop
int3
aad
sbb
inc
fsubl
or
lods
cld
movsb
scas
popa
aas
xor
inc
and
xlat
rol
scas
pop
push
mov
dec
mov
xchg
dec
pop
cmp
lock
dec
mov
add
cmp
call
cmp
clc
outsl
lahf
in
jb
mov
enter
dec
push
cmp
dec
lcall
in
daa
test
dec
lock
sub
sub
adc
pop
imul
cmp
pop
fst
inc
test
or
add
divb
push
movsl
mov
mov
mov
adcl
pop
std
add
dec
loope
jnp
pop
inc
adc
hlt
pop
arpl
sahf
std
rclb
daa
test
add
bound
mov
sbb
bound
mov
inc
cmp
cltd
jno
jne
sbb
mov
inc
adc
aas
in
and
sub
sub
adc
test
testb
add
inc
icebp
mov
das
faddl
jbe
xchg
scas
mov
stc
add
mov
stos
cwtl
cmp
shl
rolb
fcmovne
and
out
inc
and
inc
push
ds
adc
jns
jecxz
int
add
loop
fdivr
jae
cwtl
shrb
jae
stos
mov
sahf
and
stos
sub
inc
xchg
repz
jge
xor
aas
clc
inc
gs
jle
sbb
xor
add
xor
ss
sbb
add
dec
jb
shll
inc
out
push
adc
stos
leave
jg
or
cmpsb
push
sub
repnz
arpl
fnstcw
sub
scas
mov
sbb
or
imulb
pop
xor
pushf
push
insl
xchg
outsb
test
push
and
pop
stc
fnsave
mov
fsubl
push
cmpsl
pop
out
cmp
xchg
xor
out
pop
fsubrl
popl
repnz
adc
loop
cmp
clc
test
xchg
fildl
inc
jg
push
and
adc
push
mov
fbld
jg
leave
lcall
push
in
in
push
outsb
add
mov
scas
repz
and
pop
out
pop
add
and
stos
iret
cltd
sbb
jno
dec
movsb
imul
pusha
stc
xor
ljmp
and
xchg
fdivr
leave
shrl
jmp
sbb
testl
pop
es
fwait
in
ja
cmp
dec
push
shl
jae
inc
dec
ffree
aas
jae
xor
mov
call
rcll
and
mov
pop
xor
int
loope
lea
inc
inc
rcl
dec
loopne
lret
jl
sbb
cwtl
cmpsl
lret
arpl
push
xor
cld
and
jge
pop
mov
insl
or
mov
lock
pop
inc
push
in
mov
xchg
test
inc
xlat
ja
add
out
jp
sbb
lahf
cwtl
xchg
ret
sbb
adc
add
dec
repz
add
add
jae
or
lret
pop
mov
sti
sub
and
xchg
xor
ss
xchg
jno
dec
xchg
xor
mov
or
add
jmp
in
imul
sbb
inc
mov
inc
imul
sbb
pop
dec
bound
test
inc
add
mov
in
int
scas
cmp
icebp
add
cli
stos
int
inc
push
andb
movsl
test
mov
icebp
mov
fdivrl
add
enter
cmp
xchg
mov
inc
jo
xchg
out
push
in
jp
jmp
fmul
rcrl
shl
cmc
dec
jno
idivl
fwait
daa
dec
pop
jne
cltd
add
in
push
jp
inc
push
js
jae
pop
daa
popf
idiv
push
lret
pop
sbb
inc
push
inc
mov
cmpsb
in
lahf
lods
push
loop
loope
or
cs
repnz
mov
cmpsl
mov
test
mov
shlb
fisttpll
xorl
lret
aad
ret
outsb
inc
cld
fildl
add
imul
out
rcll
shl
jl
push
shlb
xorl
lea
stc
mov
sbb
loopne
jno
or
sub
pop
mov
int
lods
pop
sbb
aas
adc
sbb
ror
popf
adc
inc
ja
inc
mov
int3
and
pop
insb
xlat
movb
lock
xor
imul
cmpsb
sahf
mov
pusha
pop
mov
call
sarb
test
rorb
dec
cmp
pop
hlt
add
fidivs
xchg
fdivs
addl
push
or
sub
pushf
icebp
or
int
lahf
xchg
push
pop
lock
insb
rcll
test
cmpsl
push
loopne,pn
movsl
sbb
cmp
fs
push
jle
cmp
nop
outsl
addr16
cld
xor
test
cmpsb
fidivs
data16
outsb
lahf
sahf
roll
icebp
outsb
push
fcoms
pop
ret
in
iret
mov
ror
and
sbb
xchg
shll
adcl
iret
mov
stos
cwtl
xor
adc
add
test
push
push
fldenv
cltd
test
imul
pop
push
xchg
dec
lea
jns
dec
das
fs
sbb
cmpb
jnp
das
xor
shlb
call
lcall
loopne
inc
push
pop
pop
inc
cmpsl
and
or
scas
jmp
imul
pusha
cltd
mov
inc
jnp
push
xor
and
cmp
nop
int
cwtl
out
loopne
cmp
mov
addr16
cmp
js
lods
imul
fwait
mov
jno
jmp
int
repz
data16
ss
aaa
mov
insb
ljmp
push
mov
and
out
sti
lcall
in
push
enter
sub
adc
or
insb
insl
add
idivb
jns
inc
insb
cltd
adc
push
dec
or
fmuls
xchg
dec
pop
fistps
mov
sbb
cmpb
icebp
rcll
xchg
jmp
xchg
mov
fsub
lock
lock
pop
sbb
dec
jl
xchg
jno
shr
les
add
dec
xor
loope
pop
cmp
in
cmp
test
popa
and
ret
je
andb
daa
inc
mov
outsb
and
movl
sub
inc
clc
sahf
mov
and
fs
test
rorl
loopne
cs
popf
fwait
jnp
repnz
aad
mov
jns
add
incb
lahf
push
xchg
jmp
jp
push
cmp
pop
insb
insb
sub
lcall
ds
and
outsb
imul
jmp
dec
loope
sub
int
xchg
add
leave
std
mov
pop
inc
fsubrs
and
mov
push
sbb
add
jne
aaa
insl
xchg
mov
les
lret
mov
frstor
mov
lods
dec
pop
jns
adc
lahf
jnp
sbb
sub
jno
or
xchg
fcoms
add
sub
clc
sbb
inc
jg
mov
xchg
imulb
ret
in
or
loop
xchg
cmp
jg
add
inc
sub
jnp
stos
or
xchg
ret
adc
lods
mov
stos
mov
add
fsubrs
jne
data16
push
int
inc
fistpll
xor
test
mov
fnstcw
xchg
cli
loope
call
aam
rclb
aad
lds
pop
insl
js,pt
pop
pop
inc
ffreep
dec
or
push
push
and
fsubl
ret
xchg
xor
lods
inc
push
enter
in
faddl
pop
mov
push
pop
xorl
push
and
jmp
pop
jl
xor
dec
and
pusha
les
xor
mov
mov
call
mov
mov
mov
pop
sub
dec
sti
jne
movsl
fisubs
enter
das
daa
dec
inc
sbb
mov
add
int
addr16
insl
sbb
pusha
pop
repz
das
sub
gs
inc
xor
sbb
leave
insl
mov
and
cmp
repz
push
add
arpl
std
sub
push
ja
mov
and
mov
pop
jle
mov
pop
xor
adc
sbb
cmpsb
adc
push
inc
xor
push
into
lret
pushf
aas
sti
insl
int3
pop
aas
xchg
pop
dec
xchg
fxtract
ficoms
push
and
mov
pop
sahf
les
gs
lahf
frstor
sbb
inc
jo
daa
cmc
mov
jbe
daa
jno
pmulhuw
jno
les
js
and
bswap
sub
add
cmp
push
ss
loop
cmpsl
or
cld
shll
push
add
into
pop
iret
inc
cld
fs
ds
add
aas
pop
cltd
add
ficoms
ljmp
push
push
pop
int
adc
aas
jno
and
dec
int
mov
jmp
cmp
pop
inc
fisubrl
mov
xchg
pop
push
test
mov
movb
sbb
fdivrp
adc
push
mov
sub
mov
cs
adc
pop
sti
pushf
dec
push
clc
fiaddl
scas
loop
xchg
std
shr
mov
push
gs
xchg
lock
sarl
xchg
stc
ljmp
lret
test
aam
xchg
mov
cmpsb
andb
lods
pop
and
mov
jge
xor
adc
sub
mov
loope
or
data16
js
jecxz
negl
sbb
rol
jbe
pop
push
iret
or
add
fs
ljmp
dec
jle
mov
pop
xchg
mov
jb
sub
arpl
mov
mov
ja
sbb
mov
xlat
mov
das
cmpsl
enter
std
sbb
push
inc
inc
mov
test
push
nop
les
dec
add
add
shrb
lods
xchg
push
inc
dec
mov
mov
sbb
insl
out
xor
leave
push
mov
test
pop
push
jmp
push
pop
int3
push
xchg
xor
fldz
out
movntq
out
faddl
clc
cmp
cwtl
int
pop
push
mov
cmp
sub
call
mov
sti
push
mov
lret
cli
sub
jne
adc
sub
mov
fucomp
sub
rclb
cs
jp
cmc
push
jp
or
mov
ficomps
ss
push
cli
out
and
pusha
xor
aad
test
out
jb
and
sbb
ss
movsb
lcall
cmpsl
stos
jne
cmp
or
mov
xor
jo
je
sarb
xor
xchg
mov
sbb
into
mov
clc
lcall
lea
xor
sub
xchg
xor
jno
sub
add
xchg
mov
sub
clc
mov
loopne
lea
sbb
test
rcll
fsubrl
pop
out
shl
cmpsl
push
es
add
into
sub
mov
aad
sti
mov
push
shll
neg
push
rorb
in
loop
mov
enter
filds
in
cmp
mov
adc
shl
xchg
imul
mov
jl
loop
loopne
aaa
adc
jo
imul
in
or
pslld
flds
sub
xchg
out
adcb
inc
cmc
jmp
pop
push
fimuls
mov
jb
adc
pop
add
addr16
push
inc
movd
int3
aaa
and
jg
push
xchg
mov
push
adc
sbb
cmp
enter
dec
mov
into
dec
sub
imul
cld
push
outsl
jnp
mov
inc
mov
loop
test
ret
test
inc
clc
out
mov
mov
add
and
rcl
data16
sub
push
jbe
mov
cmp
loopne
test
imul
gs
jno
lret
xor
adc
dec
pop
jle
es
dec
mov
int3
fldt
in
add
mov
jmp
sti
xchg
out
dec
dec
lods
iret
lcall
cld
xchg
jecxz
jo
inc
andl
push
pop
push
sub
inc
dec
or
adc
into
in
sub
mov
popf
ja
test
repnz
mov
jb
sbb
jo
mov
scas
jmp
icebp
cmp
scas
pop
loop
imul
jmp
das
leave
push
jb
repz
sbb
mov
ret
bound
jns
addl
out
sbb
or
pop
js
or
das
das
adc
jae
out
add
pop
mov
and
push
push
jae
into
mov
test
add
jno
ret
int3
push
inc
lret
sti
fistpl
lret
std
sbb
shrd
dec
sbb
mov
imul
inc
insl
mov
dec
aad
lods
arpl
int3
decb
into
std
sub
pop
mov
xor
push
xchg
jle
inc
insb
push
test
dec
insb
in
scas
arpl
movsb
push
les
cmp
lock
push
mov
addr16
jle
jp
add
and
adc
imul
xor
mov
xorl
out
push
popf
movsb
and
js
movl
pusha
icebp
aaa
in
test
into
or
fwait
cltd
pop
jb
mov
aaa
dec
subl
mov
call
gs
push
xchg
pop
insb
push
fmuls
dec
ljmp
cmp
icebp
shll
pop
add
testl
stos
add
mov
sti
shlb
dec
and
mov
orb
xchg
xchg
mov
jnp
scas
adc
inc
popf
mov
je
mov
dec
jno
in
push
xchg
movsb
or
sbb
adc
test
lret
adc
and
xlat
mov
sbb
mov
adc
sbb
xor
popf
jecxz
cmpsl
enter
repz
cmc
mov
mov
mov
jge
xor
repnz
out
dec
cs
sub
dec
or
adc
sbb
mov
icebp
push
mov
into
testb
scas
outsl
int
add
or
xor
rcrl
xchg
lds
push
mov
ss
fstps
push
aam
push
ds
inc
leave
sbb
mov
dec
inc
pop
pushf
imulb
rorl
and
icebp
dec
push
in
pop
gs
movsb
sbb
outsl
dec
sbb
add
notb
jmp
inc
lock
xor
jle
lahf
or
ret
loop
int3
popf
dec
jp
mov
mov
rcrl
push
or
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
jmp
scas
shlb
jno
scas
mov
xor
test
xor
mov
pop
jl
mov
jno
fnop
jle
repnz
out
pop
mov
cmp
xchg
xchg
insl
movsl
and
out
stos
ja
xorb
push
pop
movnti
xchg
or
dec
pop
fdivs
mov
sub
js
or
adc
xorb
ss
lds
pop
out
mov
push
xor
dec
mov
addr16
cld
clc
mov
mov
inc
mov
fsub
in
js
out
int
outsl
nop
sub
sbb
pusha
inc
adc
stc
gs
sbb
in
sub
shrl
es
negl
pusha
cs
add
cmpsb
je
fwait
mov
xchg
in
dec
dec
ret
std
das
mov
xor
daa
out
in
xor
mov
bound
push
ret
jns
fldenv
scas
ljmp
and
aam
dec
cs
sbb
pop
aas
inc
sub
bound
cmpb
aam
mov
sbb
rcrl
cmc
cmp
xchg
ss
or
imull
push
xor
scas
stos
lret
and
push
shlb
cld
push
out
leave
aam
dec
mov
push
push
adc
aad
outsl
pop
xchg
lret
xchg
je
push
inc
lods
sbbl
xchg
scas
xchg
outsb
pop
mov
and
and
xchg
mov
mov
outsl
or
ja
shlb
adc
xor
and
mov
icebp
pop
sarb
cmpsb
hlt
int
cli
mov
mov
repz
fmuls
ds
adc
pop
push
or
cmpsb
dec
out
pushf
mov
pop
ds
mov
enter
sbb
dec
mov
clts
out
pop
xor
push
out
imul
cwtl
rcrb
inc
or
pop
ret
mov
mov
movsl
push
cmpsl
mov
out
jne
lods
pushf
inc
bound
push
int
mov
inc
pop
mov
xor
fbld
sbb
xchg
testl
push
jmp
stos
fisttpll
mov
mov
or
dec
push
outsb
stos
ds
out
xchg
popa
jmp
scas
lds
clc
push
stos
ror
pop
popa
gs
nop
lret
add
xor
insl
sahf
jne
stos
lock
lret
fldt
mov
movsl
mov
jno
jp
push
test
jl
cmp
lds
outsb
adc
jl
int3
mov
jg
cmpsl
xchg
movsb
cmpsb
leave
imul
mov
xor
adc
xor
adc
loop
into
movzbl
sar
stc
or
test
add
push
clc
and
xlat
daa
sub
int
sub
add
mov
sub
xor
and
xlat
push
jbe
adc
pusha
push
adc
pop
int
mov
lahf
fwait
mov
dec
repz
mov
lods
and
or
es
sbb
fbstp
mov
xchg
and
arpl
or
in
out
in
adc
push
fsub
inc
fbld
pop
je
xchg
loopne
outsl
adc
pop
nop
mov
and
sub
test
xchg
hlt
rcrb
sahf
sub
mov
in
sub
push
mov
add
push
pusha
push
xchg
les
mov
xor
sbb
fwait
test
adc
push
dec
notb
movb
xchg
loope
loope
mov
and
jno
push
pop
stos
gs
pop
and
in
push
imul
mov
fs
mov
repnz
push
xlat
aad
test
nop
and
fildll
in
sbb
push
mov
stos
nop
jmp
cmp
push
ret
sahf
fcmovu
lcall
sub
push
icebp
movsb
fcomps
xchg
inc
cli
jle
test
inc
mov
lcall
fsubrp
lea
sbb
push
aam
and
jb
mov
or
addr16
sub
dec
aaa
push
sbb
or
or
or
inc
add
in
mov
jns
adc
lahf
push
sbb
cli
push
mov
jne,pn
add
dec
rorb
adcl
in
in
lahf
outsb
xlat
pop
jge
xor
xchg
pop
dec
push
mov
push
inc
xchg
jge
ficomps
mov
insl
rol
mov
push
or
jne
aas
xor
xchg
jae
sbb
sbb
sub
and
mov
pusha
in
xlat
sbbl
call
pop
sti
jge
cmp
mov
lret
cmp
pop
jae
stos
jno
mov
loopne
cwtl
xchg
adc
test
fcompl
push
scas
lods
mul
dec
jl
cmp
sti
mov
mov
add
mov
xor
ret
cmp
sub
xor
cld
xchg
jb
sub
xchg
pop
dec
int
adc
jno
ja
push
pop
shrl
repz
push
xor
outsl
in
testl
adc
sahf
ss
flds
xor
cli
es
jne
fwait
push
out
or
mov
stc
cmc
scas
negb
xlat
arpl
bound
orl
lock
inc
jmp
rcrb
in
jnp
enter
sub
push
lahf
fdiv
sbb
add
sbb
push
loopne
adc
sbb
movsb
dec
cli
xor
mov
sub
adc
cld
scas
cmp
jns
sbb
push
enter
sbb
fwait
mov
mov
push
aam
mov
fsubrs
cs
xchg
pushf
pop
dec
mov
pop
fs
popf
test
add
loopne
ss
jp
rolb
jae
or
pop
mulb
xchg
inc
test
das
push
pop
xchg
jno
inc
movsl
cmp
adc
jnp
fs
loopne
dec
push
cwtl
lret
mov
and
sti
pop
cmc
cwtl
daa
xor
inc
aaa
call
out
pop
mov
push
mov
addr16
add
pop
mov
and
test
sbb
sub
cmp
pop
or
inc
mov
lods
mov
push
mov
jno
and
xor
cmpsb
and
mov
lret
ret
pop
ret
in
add
mov
push
sub
repnz
push
and
imul
in
cmc
cmovne
or
sbb
sub
pop
ja
dec
pop
xor
gs
mov
jmp
inc
scas
mov
iret
testl
lods
add
xor
pushf
sbb
xchg
push
lcall
clc
sti
jmp
push
jnp
mov
das
lea
jmp
xchg
xchg
push
mov
std
fistl
je
cwtl
cmp
stos
xchg
cmc
fidivs
xor
mov
or
nop
pop
stc
xor
push
addl
or
subb
aad
sub
mov
cmpsl
sbb
in
daa
cmp
adc
scas
dec
lock
dec
int3
push
aam
inc
lcall
cmp
adc
mov
jg
dec
clc
mov
cltd
cmp
push
negb
push
clc
sbb
jl
shlb
sbb
aaa
xlat
dec
or
xor
in
inc
ss
xorl
das
mov
mov
outsb
push
test
sbb
jmp
mov
push
push
cwtl
dec
pop
and
gs
xchg
loop
ss
mov
mov
mov
fcmovnb
mov
pop
xchg
cmp
mov
lcall
jp
jo
mov
xlat
xchg
push
jno
icebp
sahf
aaa
mov
shll
inc
pop
pop
imul
mov
add
mov
mov
scas
shrl
fcompl
lret
mov
movsl
sti
loop
jns,pt
fs
outsb
je
lods
jecxz
shll
lcall
ret
loope
mov
inc
cli
imul
mov
pop
daa
mov
andb
jg
pop
cmp
xor
scas
aas
pop
mov
lds
jne
mov
sbb
fmuls
add
int
push
sahf
out
ret
xorb
jnp
or
aas
inc
xchg
shrb
jge
pop
and
loopne
in
pop
loopne
inc
mov
push
fld
cltd
mov
pop
jmp
sub
jl
ss
pop
daa
cmovb
pop
addr16
js
cwtl
cmp
mov
add
jecxz
cmp
dec
out
leave
and
cwtl
aam
mov
mov
test
jle
jp
mov
mov
sahf
xchg
data16
sahf
xchg
sub
sub
jmp
shl
mov
cs
or
mov
cmp
dec
orb
jg
icebp
jp
or
or
adcb
leave
popa
mov
cmp
mov
lock
add
scas
inc
inc
jnp
hlt
es
inc
xchg
ficomps
leave
mov
mov
mov
xchg
das
fistpll
decb
add
pop
loop
or
shrb
out
inc
push
and
fstps
gs
add
push
out
xor
xor
sbb
inc
enter
ds
mov
nop
sbb
cltd
mov
out
cmp
mov
or
sbb
inc
fst
aam
loop
pop
ja
dec
jg
mov
popa
xchg
inc
dec
or
ret
scas
std
xchg
lcall
mov
lahf
mov
test
pop
sbb
add
aad
xchg
push
add
cmovs
bound
scas
rorl
pop
mov
out
int
into
mov
xchg
scas
dec
fidivl
mov
xchg
mov
cld
faddl
sti
out
bound
xorb
es
inc
mov
inc
inc
nop
out
aad
mov
sub
pop
mov
jnp
inc
lcall
roll
pop
or
fwait
sbb
vshufpd
mov
repnz
rcrb
cmp
or
imul
cmpsb
data16
jbe
fbld
pop
sub
out
iret
mov
mov
inc
sub
cwtl
sbb
sahf
fadd
xor
pop
xchg
adc
mov
cmp
jnp
add
mov
test
inc
lods
sub
cli
push
loopne
push
pop
pusha
mov
shl
sbb
loopne
xchg
sbb
hlt
or
mov
sub
mov
fisttps
mov
enter
je
addr16
cmp
add
cmp
bswap
mov
cmp
cli
dec
rcll
xor
adc
js
pop
mov
sub
push
lods
int3
pop
inc
hlt
pop
mov
inc
lret
sbb
rclb
mov
out
neg
xchg
adc
and
sub
clc
movsb
xor
jne
sub
js
dec
jae
and
or
push
mov
aam
inc
andb
popa
les
dec
sub
addr16
mov
dec
sub
insb
mov
sbb
iretw
gs
addl
scas
cli
xor
and
inc
ds
cli
decb
bound
xor
add
mov
rclb
jo
mov
fnstcw
lahf
cmpsl
xlat
cmp
sbb
mov
in
dec
pushf
pop
xor
add
xchg
mov
pop
fldt
popa
jl
adc
decb
mov
xor
sbb
jmp
lahf
cmp
enter
add
mov
add
sub
cmpsl
sbb
push
sub
xchg
and
insl
in
lcall
or
adc
jb
xchg
xor
fstpt
push
mov
sbb
xchg
inc
cmc
cmp
add
mov
or
jno
mov
lods
call
into
or
adc
das
or
add
xor
loop
jo
addb
dec
add
clc
jg
mov
out
cmpsl
push
pop
jnp
jns
jmp
inc
icebp
test
ret
mov
cmpsb
adc
push
popf
gs
mov
push
sbb
scas
mov
jge
dec
and
out
jp
fwait
stos
cltd
repz
repnz
mov
sbb
sub
movsb
xchg
mov
inc
lods
cmp
aas
cmpsl
loope
add
push
jl
xchg
mov
orl
cli
mov
sarb
movsb
mov
dec
repnz
mov
je
jb
sbb
jecxz
dec
mov
xor
inc
xchg
int3
pop
xchg
dec
mov
call
cmp
bound
sbb
mov
adc
sub
lods
mov
add
inc
dec
lods
mov
subl
addr16
test
ror
cmp
adc
pop
sti
sbb
mov
jp
add
add
pop
dec
cs
inc
das
push
insb
mov
mov
push
mov
jp
mov
loopne
lahf
or
xor
pop
add
mov
and
mov
pushf
pop
mov
or
push
ret
mov
test
add
xchg
sti
test
jns
and
addr16
cmpsl
pop
in
jno
leave
stos
addr16
enter
sub
fcomps
adc
pop
int3
stos
negb
inc
mov
and
adc
dec
stc
mov
mov
jg
test
outsl
xchg
cltd
ds
xchg
popa
pop
sub
or
dec
add
ret
cld
adc
or
lgs
dec
jp
rolb
adc
and
icebp
int3
ficoms
inc
sub
adc
sub
in
or
leave
cmpsb
aad
pusha
sbb
cwtl
sti
jo
push
rcr
or
mov
jg
xor
push
pop
rclb
icebp
call
les
popa
mov
add
sbb
jb
nop
imul
lea
or
push
arpl
iret
sti
pop
test
fstps
jg
in
insl
cmpsl
add
add
into
cmp
ret
pop
je
cmpsl
xor
jp
ss
loop
sub
xor
cmp
repz
cmp
add
shll
stos
leave
push
dec
mov
mov
pop
inc
jae
int
fildl
dec
xchg
dec
jno
das
cs
andps
leave
dec
cld
int3
jl
sub
push
inc
sahf
pusha
jg
testl
das
movsb
mov
iret
xchg
pushf
sub
shl
cmpsb
test
or
sarb
js
popf
add
jno
mov
add
and
or
ret
cli
das
jbe
jecxz
dec
stos
jns
xchg
push
adc
in
push
clc
nop
lods
sahf
jns
fldcw
andl
xlat
inc
jp
jo
mov
cld
jnp
mov
pushf
fdivrp
test
xchg
jmp
cmc
repz
sbbl
xor
jno
test
dec
pushf
inc
fadd
add
mov
add
adc
mov
shrb
sbb
jnp
int3
adc
xchg
jbe
pop
add
jbe
sub
or
jns
int
mov
mov
test
in
lock
fwait
push
pop
jg
dec
mov
gs
adc
xchg
aam
fdivrs
stos
dec
stc
add
fs
and
mov
dec
fsubrl
lcall
xchg
sub
loopne
data16
mov
out
pushf
sti
sbb
push
cmp
mov
push
or
popf
push
jg
fsubs
mov
jno
lds
mov
mov
jno
mov
aas
xchg
clc
dec
int3
xlat
and
aam
loope
and
loopne
int
fldenvs
insb
clc
ds
add
loopne
movsl
cmp
pop
mov
jp
mov
add
xor
push
lock
push
push
xor
ja
pop
dec
popa
in
mov
test
mov
dec
ss
sub
jp
les
fwait
inc
cmp
xor
fildll
je
push
mov
fstps
hlt
nop
xchg
in
cli
sub
insl
and
bound
xlat
test
xchg
mov
add
or
xchg
sbb
insb
sbb
jno
adc
loopne
mov
stos
cmp
test
pop
lret
dec
adc
lds
add
add
xchg
mov
mov
sub
cmc
sbb
or
mov
cmp
or
out
pop
ficompl
jecxz
in
adc
xchg
mov
cmp
loop
pop
push
inc
push
movsbl
dec
cmp
mov
shlb
adc
push
cmpsl
ljmp
daa
inc
ret
jo
dec
or
lcall
outsl
xchg
cmp
pop
in
icebp
rolb
lea
push
imul
aad
adc
mov
cltd
test
lahf
shr
out
push
sub
cmp
pop
out
hlt
mov
ret
adc
xlat
cli
jp
sbb
icebp
inc
sbb
or
sbb
jp
inc
jns
popa
lods
adc
mov
dec
out
test
fwait
inc
popw
lods
stos
cltd
inc
iret
fmuls
imul
mov
call
call
mov
imul
sbb
mov
push
sbb
loope
lods
js
push
xchg
pop
inc
cmpsb
mov
neg
fdivl
and
out
dec
sbb
adc
cmp
das
leave
mov
cmovne
nop
sbb
inc
dec
xchg
insl
out
or
adc
pop
sti
xchg
fcoms
push
push
pushf
jne
lods
xor
add
adc
mov
int3
sub
pop
dec
shufps
movsb
outsl
packssdw
add
push
movsb
stc
call
inc
xchg
repnz
mov
xor
or
das
adc
imul
ret
aas
in
into
in
and
into
sarb
out
mov
outsl
push
movsw
push
mov
adc
call
sti
dec
pusha
shlb
test
xchg
shll
inc
and
adc
push
mov
xchg
fucom
out
ja
fbld
jns
fists
inc
mov
sbb
jp
push
ljmp
mov
mov
frstor
cmp
into
inc
mov
pusha
aam
lods
mov
pop
test
jb
mov
aaa
fsts
dec
add
pop
add
jg
shlb
mul
mov
jb
outsb
test
outsl
pop
or
pop
adc
cmc
out
jg
outsb
adc
sahf
mov
sub
jecxz
mov
dec
push
jmp
test
xchg
or
movsb
jmp
jecxz
out
lods
add
adc
out
fcmovb
cmp
arpl
in
clc
adc
xor
imul
test
xor
push
mov
dec
in
inc
inc
mov
loop
jne
jb
xchg
orl
lea
negb
or
xchg
cwtl
or
xchg
aad
loop
test
inc
jno
push
lret
addr16
lods
and
mov
lahf
mov
ds
jecxz
pop
mov
mov
cmpsb
hlt
into
add
imul
stc
pop
or
dec
xchg
xchg
lds
jns
outsb
fisttpl
pusha
xchg
sbb
les
jne
scas
in
jnp
pop
stc
lret
lret
push
pop
outsb
int3
and
and
mov
mov
loop
rcrl
add
pop
lods
lods
mov
inc
cmp
xor
outsl
outsl
xlat
xchg
movsl
jle
and
push
je
out
mov
scas
jg
push
imulb
push
lret
mov
add
pop
imul
mov
dec
pop
jns
add
pop
mov
or
mov
xchg
xlat
pusha
mov
cmpsb
jecxz
ja
push
outsb
xchg
xchg
push
sbb
shl
jb
mov
pop
jg,pn
ljmp
fimull
sub
add
mov
jge
movsl
bndstx
adc
jae
pop
daa
es
std
and
sub
jns
js
push
stos
push
movb
xor
sbb
mov
xor
dec
jecxz
mov
fwait
and
inc
das
inc
out
lahf
dec
testl
sub
lcall
lock
fs
pop
fistl
mov
repnz
push
and
inc
stos
xor
sbb
add
nop
fwait
shll
mov
repz
mov
fs
mov
mov
push
repnz
mov
outsb
dec
shrb
sbb
shlb
pop
add
repz
sahf
sub
cmpb
dec
ss
shlb
add
dec
pop
adcb
pop
jbe
es
mov
rcr
rcrl
fs
mov
lods
lret
mov
lret
mov
push
lret
or
int3
mov
pop
mov
and
pop
mov
mov
or
jmp
movsb
das
cld
xchg
mul
pop
fstl
int
into
pop
subl
in
sbb
mov
fdivrl
inc
cmp
jge
jge
fwait
mov
mov
or
outsl
shrl
sub
in
lret
pop
jle
lret
movsl
inc
lea
jo
lea
fs
and
rorl
xchg
jle
ret
adc
call
sbb
inc
push
push
repnz
imull
pop
push
or
push
in
adc
jl
mov
lret
cmp
pop
or
pop
iret
ret
rcll
shll
mov
hlt
icebp
mov
mov
sub
mov
jecxz
xlat
sub
test
outsl
mov
mov
rclb
pop
pop
and
inc
mov
pop
clc
test
jae
aas
sub
into
repz
push
shl
or
or
push
in
stos
push
idivb
out
fwait
push
push
adc
out
leave
lahf
out
enter
test
mov
add
stos
cmp
je
sub
push
fwait
js
lods
cmp
dec
ss
push
fidivrl
repnz
popa
shlb
loope
loopne
pop
outsb
fldenv
insl
ret
xlat
cltd
xor
mov
bound
jo
sub
mov
int3
cmpsb
addr16
xlat
cltd
in
lcall
pop
inc
fcmovnb
fcomi
adc
repnz
and
pushw
out
outsl
lret
repz
push
out
lret
xlat
ds
fstps
test
and
and
dec
aad
dec
pop
mov
jae
push
mov
inc
loop
addr16
cli
or
push
es
outsl
inc
cmp
mov
sbb
insb
scas
lahf
cmp
aam
pusha
int
outsl
gs
xchg
out
ffreep
mov
loop
adc
das
mov
push
fisubrl
test
fwait
roll
lock
pop
push
sarl
xor
es
negl
dec
mov
ja
mov
ret
cs
jg
adc
xlat
mov
jbe
jmp
push
xchg
jmp
rcrl
sbb
pop
sub
repnz
int3
popa
ljmp
add
movsb
sbb
mov
adc
mov
cmp
push
inc
push
rorb
xor
or
add
imul
sbb
add
outsb
jle
or
jbe
mov
daa
mov
push
sar
aas
sbb
cmp
stos
cmp
pop
stos
push
dec
arpl
fs
or
jge
ljmp
ds
inc
es
jo
popl
sub
or
push
mov
aas
mov
push
sub
dec
aaa
adc
mov
add
pop
daa
inc
imul
fstpl
pop
loopne
mov
push
scas
jbe
xor
cmp
pusha
enter
scas
xrelease
sub
int3
pop
dec
rol
push
sbb
mov
movsl
push
icebp
repnz
adc
aas
sbb
rorb
mov
or
mov
clc
dec
subb
adcb
push
sbb
arpl
fsubp
fwait
mov
mov
xor
jo
pop
inc
push
fsubrs
fs
xchg
pop
arpl
bound
or
and
xchg
in
inc
rclb
aad
mov
and
data16
lcall
adc
inc
sbb
sbb
dec
in
das
int3
mov
adc
pop
pop
sarl
jl
adc
outsb
or
lcall
data16
push
dec
mov
or
and
inc
push
icebp
push
inc
fsubl
out
icebp
movsb
sarb
notb
in
aam
mov
push
hlt
push
xchg
mov
aad
scas
dec
xlat
xor
mov
sub
push
xchg
ljmp
push
int3
data16
lea
lea
and
or
stc
leave
sub
mov
inc
cmpsl
dec
sbb
sbb
fucomip
jns
pop
out
test
loope
mov
test
mov
xlat
insb
mov
ret
outsl
or
js
test
into
cmp
outsl
int
imul
movsl
jge
mov
out
cmp
or
scas
mov
je
sbb
sub
dec
scas
stc
mov
push
pusha
in
int
jl
adc
inc
pop
xchg
or
outsl
in
pop
inc
cwtl
in
and
jecxz
and
addr16
dec
xchg
sub
out
dec
fstps
or
rcll
mov
add
shrd
cmp
cli
xchg
int
cli
sub
repz
testl
adc
dec
cmpsb
push
aas
adcl
repnz
mov
push
test
mov
or
popa
push
xchg
clc
pop
ficomps
cmp
loop
ljmp
loop
mov
sbb
pop
mov
inc
jae
push
loop
jbe
jle
fnstenv
mov
das
outsl
movsl
add
decb
sbb
dec
inc
sbb
ret
sub
paddsb
xchg
or
push
stos
pusha
cs
insl
out
in
negb
mov
test
orl
dec
in
aaa
dec
mov
pop
outsb
in
dec
pop
mov
repz
mov
xor
mov
int
jmp
mov
jns
cmpb
push
pop
mov
or
ja
dec
xchg
sar
aad
pop
call
xlat
or
mov
pusha
icebp
lods
and
and
inc
mov
lret
push
mov
stos
cmp
inc
xchg
scas
ret
mov
mov
jecxz
xlat
call
adc
adc
je
mov
cltd
dec
add
pop
mov
mov
and
push
icebp
xchg
pop
imul
and
lret
out
fcompl
lahf
add
sti
fldl
jo
fcoms
sbbb
shlb
icebp
pop
push
insb
movsb
stc
push
xor
fs
add
lahf
add
jnp
fistpl
push
bound
jo
mov
out
xchg
jne
aaa
cwtl
andb
fcmovnbe
push
inc
popf
sarl
frstor
push
imul
popa
inc
jl
mov
inc
repnz
push
adc
sbb
push
push
sub
adc
add
movsl
push
fcomps
imul
dec
stos
or
pop
mov
inc
clc
into
or
lea
repnz
data16
loop
sub
aam
das
lods
idivb
lods
mov
push
fcoml
movsl
add
sub
arpl
ds
in
and
sbb
sub
jbe
xor
cmp
push
or
out
jne
dec
jecxz
push
in
push
cmpxchg8b
cmpsb
addr16
and
and
pop
fnstenv
test
mov
mov
cmp
adc
adc
popf
xchg
loope
mov
pop
or
or
add
xchg
ds
or
dec
test
pop
rcll
outsl
xchg
pop
sub
jnp
sub
inc
pop
xchg
sbb
jb
ficomps
xchg
xchg
insl
hlt
ds
shll
jbe
enter
or
iret
sub
das
jecxz
shll
rorw
sbb
repz
lock
mov
incl
sub
sbb
pop
sbb
sti
add
and
pusha
push
dec
lea
pop
push
mov
test
push
hlt
mulb
mov
push
sahf
and
loop,pn
in
sbb
dec
arpl
or
inc
sub
cmpsb
jno
mov
sub
fidivrs
scas
hlt
pop
call
movsb
push
push
rorl
shlb
cmpb
movsb
in
out
gs
push
mov
and
cmc
outsb
xchg
fnstsw
sti
icebp
testl
jns
xchg
test
movsb
and
aaa
jg
push
stos
mov
scas
cmp
bound
xchg
mov
insb
out
mov
adc
jmp
call
and
nop
mov
jl
pop
jo
mov
aad
adc
dec
inc
mov
dec
test
rclb
cmp
out
mov
pop
xchg
movsl
sarb
inc
jb
xor
movsl
into
nop
dec
jecxz
pop
in
or
push
scas
sub
in
dec
adc
fldl
cmp
or
pusha
mov
cmp
in
mov
gs
and
ljmp
mov
and
and
push
xlat
push
dec
jo
scas
std
mov
cmpsb
pop
add
xor
popa
out
and
jnp
inc
mov
je
scas
jno
decl
aas
jns
mov
pop
mov
stos
rorb
cmp
shr
test
addr16
jne
stos
pop
push
pusha
sbb
pushf
or
addr16
movsl
or
sahf
and
xlat
or
adc
pushf
inc
lods
ja
xchg
cltd
insl
cmp
adc
add
xchg
lock
xor
jnp
jnp
and
rcrl
fadds
cmp
xor
outsb
xor
adc
scas
inc
repnz
mov
jns
pop
inc
pop
call
pop
mov
int
lea
sbb
les
fwait
mov
imul
loopne
mov
movsl
jns
daa
push
andl
das
mov
fs
ficoml
sub
xchg
mov
popf
pop
adc
stos
add
jle
into
inc
je
adc
bound
aas
mov
jmp
pusha
jns
jg
xor
gs
cmp
ficoml
cmpsb
xlat
xchg
out
jmp
mov
ljmp
je
mov
mov
mov
out
push
in
fcmovnu
daa
push
jp
lods
mov
lods
sub
gs
inc
scas
unpcklps
ljmp
adc
sbb
fidivl
test
jb
test
push
xchg
mov
mov
and
mov
lods
adc
shll
test
sub
mov
sub
orl
in
jne
int3
jg,pn
gs
nop
jmp
lcall
cld
test
push
adc
negb
mov
dec
pop
dec
xchg
into
cmp
rcll
jp
subb
push
cmp
sub
loope
scas
pop
add
xor
sbb
ja
lea
dec
pop
out
adc
and
adc
cltd
loop
push
add
scas
sbb
addl
sbb
xor
lret
adc
cld
adcb
jo
pop
adcb
outsl
and
inc
shll
sarl
cli
push
imul
imul
mov
mov
ss
test
xor
inc
sub
pop
dec
push
xchg
int
les
dec
call
in
mov
sub
dec
pop
out
loopne
cmpsb
aad
or
or
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
add
add
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
add
inc
inc
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
add
add
into
xor
add
add
add
add
add
rcrb
add
add
inc
add
jo
add
inc
add
jo
add
inc
add
jo
add
inc
add
add
add
inc
push
addr16
or
nop
cmp
sub
sti
mov
inc
cmp
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
xor
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
and
add
push
call
test
jne
and
jmp
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
sub
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
mov
add
mov
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
andl
andl
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
lea
push
mov
pushl
call
mov
test
je
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
xor
add
mov
movl
movl
movl
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
jae
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
add
mov
add
mov
mov
mov
inc
mov
jmp
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
mov
xor
mov
sub
add
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
dec
inc
mov
pop
xchg
andl
gs
add
or
mov
mov
fildl
xor
mov
mov
loope
push
pop
or
lea
xor
lods
lahf
dec
mov
clc
push
and
or
pop
imul
and
push
scas
sbb
mov
call
lcall
fbstp
pop
out
aas
repnz
adc
rorb
adc
sbb
hlt
pusha
adc
pop
repnz
cmp
push
mov
data16
ss
mov
jmp
inc
inc
cmp
lods
and
fdivrp
pushf
xor
fnstcw
lock
call
adc
mov
test
insl
cmpsb
cld
les
or
into
mov
jne
test
sarb
sbb
add
les
std
inc
test
jecxz
addr16
arpl
imul
inc
cmp
not
gs
gs
mov
jecxz
lahf
pop
push
mov
divl
jp
cmp
inc
adc
pop
hlt
xor
or
cmp
xchg
test
scas
mov
inc
shlb
and
xchg
shl
les
lods
idivb
jns
arpl
cld
inc
jmp
and
ret
div
orb
add
cld
or
jecxz
out
and
and
sub
jb
push
fistps
mov
lret
cmpsb
and
outsl
pop
or
push
push
mov
fcoms
sbb
in
fadds
and
cmp
add
repz
jno
sub
or
xchg
pop
push
gs
push
mov
xor
int
inc
in
pop
jg
sti
stos
pop
es
mov
inc
mov
or
add
xchg
push
xchg
es
push
lahf
adcb
mov
ja
lret
push
inc
out
xor
dec
shll
fnstsw
xchg
das
and
inc
jno
pop
sub
std
ja
pusha
sarb
cltd
sbbl
push
jl
pop
add
das
out
pop
xchg
daa
lods
and
xchg
pop
or
sahf
xchg
into
into
sbb
cmpsl
jne
rcrb
aas
into
push
sbb
maxps
outsl
ljmp
clc
hlt
hlt
jb
cwtl
pop
fidivrl
insb
pop
push
add
inc
cmovl
ja
push
cmpsb
push
stos
cltd
stos
and
and
stc
pusha
testl
inc
pop
call
jecxz
scas
lock
xchg
push
or
sub
mov
cmpb
and
jb
jns
leave
xchg
outsl
mov
leave
push
mov
lcall
daa
stos
xchg
mov
sub
mov
add
or
loope
enter
out
dec
mov
mov
pop
lods
adc
fsubs
or
in
pusha
arpl
shrb
or
les
cwtl
lcall
add
mov
dec
fs
adc
mov
scas
test
pusha
leave
fdiv
out
adc
xchg
cwtl
js
ret
repnz
pop
xor
outsl
xchg
xor
ret
cmp
xor
add
mov
data16
push
add
add
lods
mov
mov
lock
test
xchg
add
inc
fdivrl
xor
sbb
in
inc
dec
stos
rcrb
loope
and
add
add
jmp
or
mov
rolb
add
add
jle
fnstcw
mov
out
sbb
xchg
xchg
sahf
std
mov
mov
inc
rol
pop
jg
sub
inc
adc
pop
scas
dec
mov
add
aaa
add
cmpl
or
cmpsb
scas
fdivp
add
jbe
ss
pop
ret
test
loope
push
sub
dec
and
pop
int
cmp
shl
lds
jbe
gs
cwtl
imul
lcall
lcall
mov
adc
dec
sbb
scas
mov
mov
or
orl
xchg
out
out
xchg
lret
sbb
cld
push
hlt
mov
xchg
xchg
sub
mov
push
cs
addl
jl
adc
cbtw
mov
movsb
enter
adc
lahf
mov
call
pop
lods
into
xor
aad
in
je
cwtl
jb
fists
int
arpl
push
loop
cmp
incl
je
pop
mov
mov
push
repz
stos
jo
sbb
mov
sbb
cld
pop
mov
and
mov
mov
scas
ljmp
pop
outsb
sbb
or
or
xchg
lret
and
pop
lret
sub
insl
lds
imul
sbb
shlb
insb
les
test
cmpsb
xor
lds
jnp
cwtl
clc
cli
loopne
mov
cmp
cmpl
add
inc
ret
xor
adc
aaa
push
lcall
daa
and
ret
repnz
in
add
arpl
js
and
inc
sbb
dec
test
and
arpl
sub
adc
inc
loopne
push
jle
sub
lahf
out
sbb
mov
mov
sub
cli
mov
rolb
cli
in
decl
mulb
movsl
lahf
rorb
sbb
in
je
fsin
imul
mov
test
push
bound
rolb
mov
mov
sysret
mov
enter
cmp
jo
sub
push
sbb
or
daa
dec
or
addb
ret
or
adc
out
mov
ret
shlb
ds
das
ljmp
ja
adc
inc
icebp
les
push
mull
cmc
fidivl
lods
dec
in
outsb
andl
lock
jnp
icebp
xchg
stos
icebp
sarl
test
std
dec
js
std
ja
lods
add
mov
inc
jne
cmova
inc
rcrl
stos
dec
push
inc
jecxz
jp
pop
jno
stc
ficompl
outsb
mov
cmp
add
sar
je
cmp
loopne
pop
in
int3
lahf
and
or
xchg
arpl
sub
les
sub
out
inc
push
in
jns
je
pop
mov
jno
mov
je
jbe
cmp
sub
xorb
jbe
add
or
adc
sub
arpl
aam
sbb
loop
jle
lret
lds
push
pop
cmc
leave
push
je
mov
push
mov
push
and
pop
jae
repnz
xchg
es
insb
add
ficomps
sahf
sub
fmull
cmpsl
sub
mov
sub
cld
jmp
lods
and
cmc
test
mov
add
add
mov
or
lcall
and
add
outsl
pop
mov
popa
and
inc
fdivl
mov
push
ficoms
push
xor
int3
xchg
dec
ljmp
push
and
push
adc
pop
pop
lock
sarb
mov
xlat
adc
xchg
and
ror
mov
fs
xlat
aas
out
jle
add
mov
push
cld
int
inc
jnp
int3
sub
lea
sbb
jge
mov
xchg
out
fidivl
sbb
cmp
jl
jbe
nop
xchg
cmp
jmp
out
int3
xchg
cmp
es
shll
jle
xchg
repz
lahf
movsl
nop
adc
xchg
pop
or
stos
cltd
mov
push
nop
xchg
jmp
pop
stc
cmp
cwtl
push
xor
mov
sti
iret
cmp
enter
mov
xchg
movsl
jge
xchg
aam
aam
push
addr16
and
push
or
dec
cmc
cli
nop
push
pop
or
inc
movl
mov
adc
nop
pop
push
xlat
jno
mov
dec
adc
xor
in
imul
inc
les
adc
push
xchg
aad
rcrl
jmp
loopne
lock
sbb
jo
push
dec
dec
lea
xor
dec
add
lret
loopne
das
std
or
dec
or
out
xlat
mull
insb
pop
sbb
dec
aaa
filds
xchg
shlb
or
sub
adc
cmp
loopne
mov
xchg
daa
out
mov
inc
insb
inc
adc
loop
pop
adc
adc
dec
push
xor
std
lock
out
pop
fisttpll
cmp
movsl
push
rolb
movsl
lock
sbb
xchg
aam
lcall
xchg
dec
rorl
fwait
rorl
xor
xchg
scas
jb
sub
mov
stos
test
ret
imul
ljmp
test
notb
insl
and
mul
hlt
push
push
icebp
in
mov
or
stos
jmp
push
lods
shll
sbb
ss
mov
mov
adc
adc
add
loopne
loopne
fs
shrb
fwait
test
mov
movsl
adc
inc
inc
cmp
ficoms
scas
jbe
call
cmpsb
cmp
mov
sub
aaa
inc
imul
push
into
mov
lret
push
pop
aas
mov
mov
add
in
lahf
mov
mov
sbb
sub
fists
gs
mov
insl
fisubl
jg
dec
push
fsubp
or
dec
call
je
and
and
xchg
xor
jge
fwait
fs
jmp
mov
mov
js
call
inc
mov
les
add
lea
stos
jb
clc
mov
or
inc
mov
xor
mov
pop
sbb
add
popf
insb
mov
sbb
xor
mov
sti
lea
out
or
movsl
sub
dec
fcoms
je
stc
inc
push
enter
or
imul
push
mov
loop
add
hlt
adc
lods
jecxz
and
cld
out
ret
aaa
mov
adc
xchg
mov
add
inc
inc
adc
pop
mov
push
jge
std
out
outsb
out
and
lret
or
lds
xor
pusha
sbb
inc
clc
gs
popf
jg
mov
dec
sahf
and
fs
lods
add
add
aad
outsb
jecxz
bound
sbb
xor
rolb
adc
dec
daa
xor
mov
pushf
sbb
or
fnstsw
xlat
popf
sub
mov
data16
pop
or
jns
inc
dec
or
add
arpl
in
ret
rorl
xchg
sbb
pop
sar
cmp
pop
lea
mov
xchg
pop
and
pushf
aas
pop
pop
pop
test
and
cmp
and
pop
add
out
jl
pop
cmpsb
mov
inc
dec
loope
insl
mov
push
cmpsl
inc
jae
push
jb
int3
xor
lds
idiv
push
jne
xchg
andb
loope
push
fldl
lock
or
sub
cs
inc
and
xchg
jecxz
dec
movsl
push
call
pop
lods
shrl
xchg
jnp
testl
lahf
and
pop
mov
xchg
addl
popa
inc
mov
fdivs
push
roll
fiadds
in
arpl
inc
pop
inc
inc
cld
cmp
jne
idivb
and
cmc
push
call
lea
bound
sub
jns
jb
aam
std
cltd
fs
int3
jne
lods
rolb
orl
push
adc
je
push
out
fisttpl
push
cmp
in
imul
push
sbb
xchg
pushf
imul
push
lods
je
mov
fld
shll
mov
movsb
mov
pop
and
push
std
mov
and
pop
mov
jnp
xchg
divb
es
push
cmp
test
xchg
pop
mov
dec
aaa
push
mov
fbld
iret
fnstsw
das
xchg
test
xchg
sub
xor
mov
rorb
or
mov
insb
test
mov
in
sub
cli
cmpsb
sarb
mov
jo
cwtl
or
push
inc
test
mov
lcall
xchg
push
sbb
daa
repz
sbb
mov
add
adc
mov
es
dec
push
xchg
add
sbb
pusha
in
xchg
mov
out
pop
lcall
sub
ja
dec
jne
or
jmp
mov
icebp
loope
add
cli
and
insl
or
cmpsl
dec
mov
xlat
mov
mov
das
aad
adc
inc
xchg
inc
jnp
inc
jle
arpl
roll
enter
rolb
js
mov
cmp
scas
lock
rolb
pusha
dec
dec
mov
bound
push
popf
jne
leave
insb
dec
add
push
dec
or
out
jp
add
cmp
scas
add
xchg
cltd
sbb
inc
adc
lret
xchg
mov
in
test
mov
ds
sbb
inc
lcall
or
repnz
add
aam
fisubrs
scas
inc
pop
aas
and
les
jne
ljmp
mov
sahf
decb
testl
sarb
pop
mov
pusha
pop
pop
aad
in
insb
xchg
sbb
push
xchg
int3
or
rcr
lret
pcmpgtb
out
lods
lret
add
lahf
lods
fistpll
xor
into
inc
inc
jo
iret
pop
testl
add
add
add
pop
sbbb
dec
imul
sub
add
xchg
xor
in
jb
lds
mov
push
ret
out
jbe
rcll
fsubrp
mov
jb
mov
xlat
stos
xor
xor
aam
arpl
pushf
xor
mov
jns
push
test
imul
test
mov
mov
xlat
add
fimull
ja
in
js
sti
ficoms
scas
aas
lret
imul
ja
int
xchg
adc
and
cmp
sbb
xor
sub
pop
mov
test
pusha
mov
stos
loopne
insl
pop
pop
jg
les
leave
mov
mov
ljmp
and
sbb
adc
mov
push
mov
jmp
je
lods
popa
dec
inc
xchg
sub
and
out
cmpsb
mov
imul
rep
fstpl
sub
mov
inc
inc
repnz
xor
xchg
mov
inc
into
push
and
lock
jmp
stos
mov
push
shrl
pop
ljmp
lahf
dec
mov
jns
xchg
mov
xchg
popf
leave
inc
aaa
ds
xchg
stos
cmc
insb
and
cli
in
sbb
cmp
loop
cvttpd2pi
cmp
dec
dec
xchg
and
mov
ret
or
cltd
les
test
cmp
xchg
sbb
mov
lds
aaa
and
mov
lods
xchg
and
adc
xor
rolb
lea
sub
sbb
xchg
jge
jle
sbb
mov
fwait
mov
addr16
cmp
insl
rorl
push
cmpsl
xchg
mov
lods
out
cli
jbe
insl
xchg
push
ja
das
jge
jl
cwtl
ret
nop
pop
add
shrb
xchg
imull
and
mov
sbb
ficoml
pop
inc
fbstp
mov
lock
mov
mov
leave
sbb
push
push
adc
dec
mov
outsl
xchg
jnp
je
mov
and
out
and
sub
mov
leave
test
test
stos
xchg
push
mov
xlat
icebp
pop
push
outsl
sahf
pop
lcall
int
adc
sarl
inc
jle
lods
fdivrl
and
pop
in
arpl
nop
xchg
lea
pusha
push
movsb
dec
xor
push
arpl
sub
out
cld
mov
jne
es
fs
subb
jb
inc
test
mov
jecxz
xor
and
push
in
fwait
push
fxch
mov
arpl
cmp
jl
mov
cs
mov
enter
dec
jmp
in
out
testl
add
lahf
jp
rclb
cld
aaa
pextrw
mov
movsl
push
and
shlb
xchg
push
rorb
jg
test
shll
xchg
sub
mov
mov
addr16
shll
outsb
cmp
subb
sbb
popa
jae
jmp
andl
push
dec
mov
jns
jg
jmp
or
pop
mov
push
dec
xchg
mov
shr
push
fs
jp
or
mov
mov
cmp
rol
cwtl
adc
mov
mov
cmp
gs
mov
movsb
push
xchg
and
fmulp
ja
jo
addr16
cmp
rorl
add
add
call
jecxz
jns
shr
aas
cwtl
lcall
add
sti
fiaddl
jmp
push
js
clc
out
repz
xlat
sub
rorb
adc
in
insb
sub
mov
xlat
lods
int
sub
lods
data16
cld
loopne
xchg
lods
xor
xor
jo
cmp
or
popf
aad
leave
fldt
xchg
les
dec
inc
shrb
sub
stos
arpl
pop
mov
and
dec
mov
outsl
dec
pop
inc
popf
fildl
sub
sub
adc
in
xchg
jb
add
pop
rcl
jno
mov
lret
adcl
mov
jae
fcmovnbe
mov
inc
mov
push
xchg
or
hlt
les
repnz
ja
or
bound
adc
fidivl
jns
or
int
pop
gs
fmuls
or
inc
scas
mov
xchg
int3
fmuls
xchg
dec
ret
addr16
sub
push
loop
sub
inc
lcall
xchg
xor
cmp
in
jmp
push
mov
cmp
xor
jo
lcall
dec
lahf
adc
pop
rcrb
inc
mov
fidivrs
test
ret
cld
roll
mov
cmp
sbb
insb
mov
add
mov
out
sbbl
loop
add
mov
cmpsb
lock
test
sbbl
lahf
das
mov
mov
cmpsb
rcr
aad
dec
pop
rcll
or
inc
pop
pop
push
fistpl
imul
mov
xor
jne
test
outsb
ss
mov
or
sbb
int
mov
faddl
fcoml
cmc
dec
int3
jp
mov
xor
push
xor
mov
inc
jecxz
push
loop
mov
cld
push
and
cwtl
xor
imul
call
dec
ss
mov
pop
mov
add
mov
into
std
xchg
lods
pushf
sbb
mov
jb
ret
icebp
repz
das
outsl
xor
xchg
bound
adc
fwait
aaa
push
mov
je
dec
cmp
lea
or
push
mov
push
leave
pop
outsl
aas
das
dec
cli
mov
aad
cli
and
gs
cmpsl
lea
sub
movsb
push
or
loop
inc
sbb
and
call
adc
mov
into
jge
xlat
mov
xchg
bound
gs
or
out
frndint
push
inc
jmp
add
inc
push
xorl
sti
sub
pop
fldcw
pand
push
call
mov
scas
and
test
das
popa
jecxz
pop
mov
sbb
sbb
pop
xor
pop
push
and
xor
aad
testb
mov
jl
pop
push
or
push
int3
scas
in
repnz
cvtps2pi
pop
mov
mov
add
and
shrb
inc
mov
dec
roll
mov
push
mov
lds
xchg
fidivrs
mov
push
dec
insb
outsb
in
ret
xchg
xor
mov
fdivrl
dec
pop
fsubl
rcrl
sub
hlt
xchg
pop
imul
repnz
dec
sub
and
insb
mov
jno
pop
gs
into
push
inc
fiadds
in
jp
cmp
or
adc
pop
sbb
or
leave
lock
jle
or
mov
cmp
lahf
mov
add
add
add
add
data16
lods
cld
mov
hlt
xor
jae
add
lods
add
add
jne
cmp
dec
inc
lock
lods
mov
scas
push
add
adc
push
inc
mov
cmp
outsl
and
mov
adc
jnp
mov
push
outsb
pop
in
jl
idivl
add
push
jl
jb
loop
data16
adc
aad
pop
subl
xchg
dec
cmc
mov
mov
cld
mov
pop
popa
ds
repz
pop
adc
clc
jmp
sahf
sbb
int3
jl
or
pop
pop
jmp
adc
gs
arpl
inc
and
subb
xchg
xor
add
xchg
addr16
mov
jns
enter
or
mov
mov
lods
dec
mov
imul
mov
mov
adc
ficoml
or
push
leave
in
mov
pop
inc
stos
adc
lods
in
sub
add
mov
fs
cld
adc
roll
xchg
aam
ror
pop
or
aam
inc
lea
mov
inc
xchg
sbb
out
pop
jno
das
lret
xlat
sbb
lock
mov
add
jge
mov
sbb
mov
pop
mov
pop
dec
xchg
test
fstpt
insl
inc
pop
outsb
aas
int3
rcr
sub
cmp
test
push
jns
pop
xchg
push
mov
loope
insl
xchg
lret
cs
into
mov
mov
out
xlat
mov
dec
xchg
cmp
cwtl
xchg
inc
lcall
es
mov
std
mov
pop
mov
mov
movsl
pop
inc
fisubs
push
ficoms
arpl
pop
filds
dec
mov
aam
add
xchg
cmp
jbe
aaa
xchg
sahf
scas
iret
shl
inc
sub
addr16
xor
loop
jge
out
jmp
pushf
les
jae
pusha
jne
sti
jge
shl
mov
fimull
mov
mov
cmpsl
or
add
outsb
bound
shl
insb
in
inc
or
adc
movaps
test
cmp
or
or
cwtl
push
in
mov
xchg
mov
test
mov
jbe
test
adc
push
push
sub
cli
lgs
fcom
imull
movsb
sub
adc
inc
insb
lods
push
test
mov
dec
inc
cmp
sub
ja
int3
sub
outsl
xchg
mov
aaa
repnz
test
std
lea
test
pop
std
dec
inc
popa
push
sub
cltd
stos
adc
loope
jp
movsl
lret
outsb
mov
cmp
ret
inc
mov
xchg
pop
or
push
lahf
daa
push
jns
loope
lahf
xchg
repz
jp
stos
pop
xchg
mov
aaa
cmc
cmc
mov
pushf
fidivrs
test
lahf
cmp
shlb
popa
pop
in
xchg
rclb
cmpsl
and
mov
int3
mov
cli
fcmove
adc
xor
mov
nop
fwait
jno
xchg
xchg
notl
mov
bnd
andl
cwtl
inc
jle
sbb
pop
adc
add
mov
xchg
inc
sbb
stos
mov
add
dec
dec
loopne
add
loopne
jnp
bound
jb
jno
xchg
enter
xchg
jge
popa
push
pop
mov
insl
dec
xor
in
mov
iret
insl
push
jl
enter
std
add
dec
out
in
lea
loopne
add
add
neg
jmp
cli
and
push
jne
and
add
lods
add
add
mov
aas
push
or
mov
aas
enter
js
aaa
adc
cmp
mov
mov
xchg
cmp
add
in
xchg
std
mov
sbb
sub
xor
fsubl
push
pop
push
mov
mov
in
mov
iret
loope
in
xchg
bound
aad
and
std
cli
sbb
sub
sub
sti
loopne
xor
sti
daa
cmpsb
pusha
pushf
push
sti
add
and
xchg
cld
mov
aam
cmpb
ficompl
ss
mov
push
add
jmp
jns
sbb
js
add
adc
out
inc
cmp
xchg
pop
and
ja
push
enter
les
xchg
jns
scas
lret
push
push
jmp
inc
bound
ret
ja
stos
inc
insl
fstp
push
or
outsb
adc
ds
out
lock
setge
test
lods
or
pop
rcrb
mov
sub
test
sbb
sub
and
jg
cltd
aam
dec
dec
out
xor
imul
cmp
rcl
cmpl
jmp
inc
mov
stc
xchg
es
inc
push
add
lret
repz
es
sbb
hlt
sti
repnz
push
insb
push
lret
ret
adc
push
dec
inc
cmp
mov
push
jmp
or
enter
lret
jecxz
mov
mov
mov
rol
pop
dec
lds
sub
and
add
sub
imul
lea
fs
inc
mov
jecxz
sbb
shl
loop
icebp
and
add
test
pop
daa
lcall
pop
dec
adc
cs
inc
icebp
sbb
insb
sub
cltd
pop
fcoml
xchg
sarl
mov
std
inc
repnz
aad
nop
in
shlb
repz
pop
pop
cmp
rcrb
inc
addl
pushf
ds
aam
mov
cltd
mov
mov
sub
mov
or
push
leave
sub
aad
mov
push
lods
push
jne
and
jle
jb
and
jbe
cld
imul
and
dec
loop
dec
ficomps
lcall
movddup
cmp
sub
jle
xchg
clc
or
or
test
cmpsb
outsl
ljmp
and
cwtl
sbb
jg
inc
cmpb
int3
ljmp
xor
mov
xor
movsb
vpmullw
or
inc
es
add
mov
sub
shrl
sub
btr
ljmp
push
lods
inc
jecxz
jle
sbb
int
cs
negl
dec
call
call
mov
sub
sub
lahf
imul
mov
frndint
add
dec
add
loope
hlt
or
jg
dec
jg
sbb
lods
test
push
ljmp
mov
inc
test
jg
loop
xor
aad
movsl
hlt
repz
loop
repnz
js
les
mov
push
cs
cmp
lcall
jne
add
cld
mov
and
jmp
in
ja
int
add
lods
add
add
mov
adc
cmp
ljmp
fnstcw
jge
pop
cmpsb
sub
and
cli
sub
rcpps
pop
in
xchg
mov
or
adc
inc
jno
jge
mov
movsl
popf
lods
push
mov
dec
or
in
xor
xor
push
cmp
cmp
stc
xchg
xchg
cmp
popa
mov
push
add
movsb
xchg
pop
mov
mov
inc
sub
and
sub
dec
loopnew
in
adc
mov
loopne
push
je
pop
rcll
into
je
jnp
out
icebp
in
lods
ds
mov
daa
cltd
inc
es
mov
xchg
insb
cmp
jp
lcall
stc
fmull
or
jecxz
and
cmc
idivb
adc
cmc
cmp
pop
xchg
xchg
fwait
mov
lock
addr16
int
jne
test
cmp
ds
clc
imul
les
inc
jns
jae
sub
jnp
jg
repz
stc
mov
inc
nop
mov
shl
inc
xchg
fimull
shrb
and
aad
push
sbb
hlt
jo
loopne
xlat
mov
mov
ret
stc
cmp
cmpsl
mov
les
loop
cmpsl
sub
and
ret
inc
inc
jne
jmp
sub
call
xchg
mov
repnz
jl,pt
test
fidivl
cmpsl
adc
in
int3
rolb
mov
scas
int3
ret
out
in
cmp
rcrb
fisttps
and
shr
lds
xchg
jmp
lcall
dec
call
mov
dec
push
mov
aas
and
dec
stos
push
loope
mov
sub
sar
icebp
insl
lods
inc
push
outsl
mov
push
fsubrl
cmp
fmuls
mov
push
or
inc
push
pop
sub
stos
and
mov
insb
add
sbb
mov
sbb
stos
inc
insl
xchg
sbb
dec
stc
push
push
mov
pop
insl
or
mov
loopne
jne
jno
and
pusha
inc
into
adc
mov
arpl
loop
cmp
push
iret
add
fidivrs
fnsave
and
xlat
jle
push
push
sbb
mov
jno
arpl
js
push
push
les
jp
push
cmove
mov
punpcklwd
jge
imul
dec
sub
mov
xor
push
dec
lods
dec
sbb
adc
inc
mov
cmp
push
inc
inc
xchg
cmp
mov
pop
int
fists
int3
lea
adcb
ret
arpl
jo
mov
sbb
stc
fbstp
lds
pop
and
cmp
data16
ljmp
outsl
stos
push
sub
mov
inc
inc
mov
fcmovne
xchg
daa
jge
or
inc
adc
pushf
imul
mov
dec
adc
imull
test
cmp
mov
jmp
cmpsl
sub
lea
xchg
jmp
mov
negb
shlb
sub
pop
rep
in
das
popa
push
adcb
notl
mov
loopne
mov
pop
shr
in
xchg
shl
cmp
rclb
popa
ss
lcall
add
add
add
lret
test
sbb
dec
fisubl
mov
idivb
add
lods
add
add
addr16
aam
in
xchg
sbb
adc
test
ja
in
jecxz
push
fimuls
sbb
mov
xor
leave
in
fistpl
aas
or
mov
mov
mov
mov
loope
shll
lock
ret
or
or
test
add
hlt
mov
xchg
xchg
mov
or
inc
rclb
mov
push
addl
int3
inc
es
push
aaa
cwtl
adc
inc
jle
dec
inc
cli
jne
setg
ficomps
fsubrl
pop
aaa
rcll
or
add
cld
repz
clc
mov
add
jmp
ret
popa
in
imul
std
hlt
cmpsl
iret
xchg
push
cmc
jns
je
jmp
jne
mov
xor
movl
pop
scas
stc
aaa
xchg
shrl
dec
xlat
cmp
or
sub
push
pop
push
mov
out
mov
add
popf
mov
addr16
addr16
mov
cmp
or
les
sub
xchg
pop
cmp
jecxz
cld
cmpsl
out
mov
pusha
mov
ss
mov
mov
scas
and
mov
xchg
jmp
into
lret
mov
mov
lret
xchg
sub
adc
dec
test
rorb
mov
aas
mov
xlat
cwtl
es
jmp
int3
adc
inc
nop
cmp
ss
nop
mov
sub
push
or
mov
dec
jmp
enter
test
jecxz
data16
lds
and
rcll
and
mov
out
icebp
sbb
fcom
mov
data16
jnp
mov
mov
in
adc
or
lods
loop
std
mov
cmp
fistps
sub
push
and
dec
push
adc
xor
push
es
add
add
xchg
leave
mov
cli
sub
cmp
sbb
push
call
adc
fistpll
or
xchg
push
ret
lret
dec
arpl
mov
insl
or
lods
sub
leave
stos
push
lods
dec
bound
add
in
mov
data16
jns
cld
je
cmp
or
mov
mov
dec
jnp
mov
lea
fstpt
add
scas
inc
in
fwait
dec
insb
jp
sar
sub
aad
pop
push
add
movsb
mov
int3
lock
or
fistpl
jne
lret
popf
sbb
into
inc
std
lods
rclb
pop
sahf
mov
icebp
inc
mov
stos
jmp
lahf
xchg
pusha
daa
sub
push
mov
and
repnz
sbb
orl
dec
sbb
sbb
sti
pop
pushf
xchg
or
dec
cld
xchg
xchg
mov
mull
inc
jmp
js
pop
cltd
mov
sub
push
in
sbb
in
mov
push
fwait
orl
fsubrp
dec
testl
sbb
sbbl
adc
icebp
mov
xchg
adc
add
fcomi
loope
dec
imul
mov
je
lods
test
fcomi
push
fsubr
lahf
pushf
push
jb
pop
cmp
insb
push
repnz
scas
je
mov
pusha
scas
or
pop
mov
add
out
inc
dec
add
int3
daa
inc
add
lods
add
add
movsl
lock
repz
or
clc
lds
push
jl
push
ret
jbe
mov
dec
push
sbb
cmp
pop
fsts
push
xchg
cmp
idivb
inc
mov
push
imul
add
loop
mov
mov
add
cmc
movsl
and
xor
xchg
out
fdiv
es
in
lods
cmc
adcl
scas
pop
sbb
ljmp
lcall
setne
flds
lret
or
push
shld
les
loop
mov
mov
icebp
or
frstor
ljmp
scas
jl
adc
into
inc
test
fnsave
addr16
cmp
or
push
es
das
pop
sub
inc
fisubl
shlb
repnz
xor
pop
sub
mov
sub
imull
nop
mov
xchg
shrb
mov
dec
jb
cltd
pop
dec
jno
subl
add
jl
dec
adc
out
lods
out
test
out
xchg
jo
and
popf
pop
dec
xchg
adc
arpl
xchg
dec
pop
aas
sub
push
sub
sub
jae
out
fiaddl
or
out
hlt
cmpsl
mov
lahf
mov
shrd
incl
jbe
mov
enter
scas
addl
movsl
hlt
in
fcomp
daa
nop
xor
mov
add
jne
pop
in
icebp
icebp
mov
pop
out
ret
lock
hlt
clc
ret
stc
call
test
cmp
adc
push
xchg
mov
jp
push
pop
xchg
inc
jmp
and
in
in
push
ret
das
aaa
lock
shll
inc
lods
fnstenv
or
decl
fcoms
inc
and
in
mov
ljmp
sub
mov
pop
cmc
adc
fstl
cwtl
xchg
sub
inc
cmp
in
aam
cmp
ret
adc
out
lds
repnz
sub
add
push
popa
inc
je
das
push
mov
add
fadds
add
push
mov
cmpsl
aaa
add
test
mulb
aas
cmpsb
ret
aas
dec
dec
sbb
cmp
cli
add
fs
test
enter
push
add
cmpsb
add
xchg
cmp
dec
add
loope
mov
xlat
sbb
pop
movsl
push
mov
adc
movsb
or
test
cmp
fcomi
push
add
ss
lcall
gs
mov
inc
mov
push
inc
leave
addl
imul
addr16
outsb
jmp
cmp
pop
push
push
jle
inc
repnz
jmp
push
pushl
sarb
mov
out
dec
jb
add
add
fimuls
mull
orl
inc
add
lret
dec
push
mov
ss
xchg
add
or
fdivl
xchg
inc
adc
sub
test
ss
xchg
jnp
jno
aam
mov
push
outsl
fdivrp
push
mov
jo
ja
andb
js
inc
js
cmc
es
lret
std
popf
into
std
enter
xchg
jmp
in
cwtl
and
sbb
stos
inc
sar
pop
mov
add
leave
or
add
or
imul
add
mov
dec
inc
mov
das
stc
pop
inc
xchg
add
pop
dec
mull
jno
loope
sub
test
addr16
sub
xchg
inc
loope
roll
mov
stc
cmpl
test
dec
scas
enter
in
or
pop
mov
mov
xchg
xchg
mov
shll
cwtl
or
ret
mov
ds
sbb
mov
push
or
lahf
inc
add
dec
pop
cmpsb
sbb
push
shlb
xchg
add
inc
cmpsl
testb
ja
push
cld
test
or
idiv
sbb
ljmp
scas
daa
in
cs
ret
dec
jne
sti
lcall
pushf
inc
outsl
fisubl
in
bound
gs
jnp
or
repnz
or
into
or
or
popf
data16
sbb
icebp
push
or
dec
inc
fisubs
cltd
mov
add
sub
in
dec
je
adc
xor
aas
in
push
dec
push
fisubrs
push
das
sbb
imul
hlt
cmp
push
jmp
mov
rcrb
div
ljmp
xchg
add
aas
cmc
lahf
and
jb,pn
test
cmp
dec
nop
dec
pop
xchg
repz
mov
rcll
movlps
fcoms
into
sahf
mov
mov
pushf
sarb
jg
call
jl
fsubrs
rcr
cmp
mov
mov
fnstenv
mov
or
pop
dec
pop
movl
imul
jae
or
xor
fsubl
adc
jo
sti
andl
pop
push
sub
subb
inc
dec
shlb
data16
testl
scas
jne
dec
mov
push
mov
fldenv
cs
hlt
fmull
xchg
lea
test
or
int
dec
js
fcmovnb
xor
and
and
std
mov
dec
lods
repz
xchg
and
scas
dec
xor
lret
cltd
pop
fwait
mov
dec
push
pop
out
cs
xchg
fidivs
insl
mov
and
stc
jg
stc
fistpl
jecxz
adc
stos
inc
mov
bound
hlt
mov
dec
push
scas
and
cmp
xchg
jne
jb
ret
inc
xor
add
xchg
lock
mov
test
adc
lds
mov
xchg
out
or
sbb
test
lcall
dec
fwait
xchg
cmp
mov
cmpsl
cmp
mov
cmpl
clc
cmp
xchg
outsl
sbb
push
pop
or
xchg
fcomip
leave
ret
mov
xchg
or
xchg
icebp
dec
adc
xchg
xchg
cwtl
add
fdiv
outsl
jmp
mov
lahf
dec
cli
xchg
pop
dec
shlb
sbb
dec
aas
in
iret
lds
sub
or
mov
sar
jns
mov
sub
xor
or
jmp
inc
lret
rolb
dec
adc
mov
push
push
insb
pop
lock
cmp
fldt
mov
jae
das
nop
dec
adc
clc
and
add
add
enter
cwtl
out
mov
hlt
or
pop
mov
xchg
add
add
cltd
ja
daa
xor
orl
add
cmp
sub
jle
arpl
xor
jg
bound
in
mov
aaa
pushf
lret
int3
scas
into
nop
ret
lods
rcll
into
push
insl
mov
xchg
daa
pop
inc
mov
add
imul
sub
jmp
pop
adc
adc
test
pop
jmp
sbb
sub
ja
mov
xchg
and
push
pop
mov
leave
aam
test
adc
in
daa
cmp
aas
mov
adc
xchg
cmp
out
loope
and
jnp
adc
mov
or
jg
cmpsl
mov
addr16
sub
iret
popa
jecxz
dec
xchg
inc
in
cmp
idivb
mov
mov
adc
mov
mov
pop
pop
fidivl
cmc
pushf
jge
cmp
movsl
mov
scas
test
adc
push
dec
cmc
daa
jnp
imul
push
dec
pop
inc
xorl
jne
inc
mov
inc
xor
xlat
mov
xor
fistpll
pop
add
inc
pop
subb
fsincos
xor
jns
fisttpl
and
jno
mov
pop
outsl
push
inc
jae
icebp
and
in
lcall
mov
mov
and
insl
sbb
xlat
test
fs
or
add
and
mov
sub
push
sbb
xchg
inc
ja
sbb
jl
adc
and
lea
es
sbb
cmp
inc
lods
int
testl
xchg
testl
call
pop
mov
pop
mov
rcll
jl
movsl
sahf
loope
add
and
and
mov
fstpl
and
fstl
ss
sub
cli
and
mov
fnsave
cmp
jg
subl
or
push
xchg
imul
mov
dec
mov
fs
lret
gs
xchg
mov
es
stos
dec
fincstp
add
inc
push
dec
js
sub
pop
mov
add
cltd
mov
vmread
jge
sbb
test
hlt
cli
and
roll
sub
and
sbb
lret
pop
notb
sti
dec
or
fstps
out
orb
jl
in
std
jecxz
inc
sbbb
mov
je
sti
cmpsb
out
aam
bound
movsl
out
js
das
mov
fcmovne
add
mov
jo
add
loop
es
xchg
mov
outsl
mov
or
test
cli
mov
inc
jne
std
mov
inc
mov
sbb
adc
aaa
and
in
cmp
sub
ja
mov
xor
push
rorl
repnz
lret
stc
or
mov
test
mov
xor
add
frstpm(287
inc
cmp
call
cmp
mov
xor
mov
jae
fdivs
int
insb
or
lds
jno
imul
sub
out
movsl
lret
sub
adc
and
loop
push
or
les
jo,pt
ret
push
lahf
movsl
lock
jns
cmp
fbld
and
fstl
rorb
jl
sub
ja
mov
cmp
cmpb
xchg
push
mov
sbb
cmp
outsb
ds
hlt
cmpsl
rcrl
xlat
ret
out
jne
or
add
iret
lahf
push
loop
aad
dec
stos
imul
cs
add
lods
add
add
push
adc
jnp
sbb
xchg
push
pop
push
out
adc
out
and
call
test
adc
es
and
rcr
push
ljmp
das
jl
repnz
insl
mov
mov
inc
push
frstor
and
lahf
jge
push
outsl
jo
aam
outsl
cli
and
fsubrp
sahf
out
iret
xlat
insl
mov
sbb
push
push
jmp
fdiv
adc
adc
push
stos
cmp
dec
jmp
xchg
jae
cmpsb
pushl
jbe
and
lods
sub
les
mov
test
fcoms
sarb
or
fstp
out
or
rcr
and
cmp
out
mov
xor
in
pushf
es
cmp
sbb
bound
out
add
cld
fimuls
rcrl
cli
in
lret
les
test
rcll
iret
inc
mov
popl
xchg
outsb
xchg
pushf
pop
or
mov
push
cmc
iret
pcmpeqb
xor
int
fldenv
lock
aas
sbb
cmp
mov
sti
mov
cmpsl
inc
and
sti
dec
dec
adc
into
mov
mov
mov
pop
lahf
or
cld
data16
fstpl
aaa
cmpsb
mov
jne
mov
cmp
add
push
mov
out
mov
cmovge
push
seta
jle
mov
into
out
cmp
out
jo
scas
jmp
pop
sub
add
pop
clc
sub
mov
add
dec
pusha
cli
aas
jo
fsubr
inc
pop
dec
pop
adc
cld
adc
insl
adc
push
pop
push
rcr
addr16
mov
mov
xchg
fbld
push
popa
push
sarb
lods
pop
cmp
cmp
dec
adc
xor
in
or
rcr
mov
dec
int
lahf
sahf
pop
cwtl
mov
and
mov
mov
nop
adc
test
cmp
and
scas
ret
call
dec
xchg
dec
data16
in
cmp
fisttpl
lret
xchg
sbb
into
ja
shlb
in
jbe
pop
in
icebp
rolb
add
fs
cmp
adc
jge
jmp
lock
gs
data16
andb
es
adc
int
jmp
jg
dec
pop
mov
test
jb
mov
xchg
xor
inc
adc
rcrl
les
and
ljmp
loop
push
and
in
lahf
out
pop
pop
sbb
dec
add
push
aam
loop,pt
mov
sub
loope
cmpsl
sub
loopne
subb
push
lods
data16
cmp
fldt
inc
sbb
addb
out
jne
adc
pop
mov
stos
incl
mull
dec
sarb
sbb
sub
dec
fldenv
ficomps
inc
lods
loopne
adc
xor
and
push
jecxz
dec
or
fcomps
test
sbb
mov
push
dec
lret
and
xchg
inc
test
rorl
in
aaa
repnz
insb
mov
xchg
adc
xchg
and
lret
rcll
dec
mov
mov
arpl
fldenv
std
loopne
sbb
and
aam
lods
sbb
int
push
xchg
add
add
stc
mov
stos
push
roll
dec
add
lods
add
add
pop
js
sub
imul
mov
gs
movsl
mov
xor
fstp
stos
ret
and
scas
ret
int3
push
or
pop
mov
mov
pop
sbb
dec
pop
ss
ljmp
lret
outsb
movsl
lds
mov
add
adc
lahf
jo
call
cltd
ss
jl
and
in
xlat
movsb
loop
outsb
mov
or
lds
mov
loope
aam
xor
fsubrs
ret
pop
cltd
push
jo
sbb
loope
cmp
aaa
jnp
data16
mov
les
stc
mov
inc
adc
sub
and
mov
or
mov
xor
or
clc
sbb
nop
and
loopne
mov
jge
scas
xchg
movsb
mov
sbb
out
test
pop
jmp
mov
movb
stos
mov
cmp
fwait
mov
mov
mov
mov
add
movsb
test
dec
xor
mov
jns
mov
cld
lret
cmp
inc
das
xor
mov
shl
push
sub
insl
and
imul
insl
pop
aad
mov
idiv
js
or
popa
push
je
mov
dec
push
mov
pusha
lea
aaa
jo
stos
xchg
inc
xor
sarl
mov
mov
inc
ss
xchg
rcrl
mov
inc
je
cmp
xor
lret
mov
sub
ss
insb
add
in
popf
bound
ficomps
cwtl
mov
ss
out
aas
inc
cmp
cmpsl
sbb
jne
dec
nop
pushf
push
testl
xchg
xchg
push
mov
movl
popf
push
inc
cmp
push
jnp
sub
sahf
cmp
adc
jb
cwtl
mov
cmp
pop
es
jmp
xchg
inc
dec
sti
xchg
add
bound
inc
cmp
int
cltd
jg
dec
adc
adc
stc
jecxz
or
sbbb
push
stos
aas
loop
call
mulb
inc
in
xchg
stc
lret
jp
outsb
cmp
imul
imul
clc
faddl
and
push
aad
mov
int3
loopne
js
mov
mov
push
pop
subb
stos
add
sub
imul
pop
imul
lea
xchg
es
and
mov
mov
out
and
aad
push
ret
imul
xchg
xor
ss
outsl
inc
xchg
fisubl
fisttps
pushl
add
push
xor
arpl
adc
ror
fcmove
dec
xlat
insl
push
or
jns
movsb
mov
jns
xchg
cltd
shlb
jae
mov
xchg
test
out
lds
shlb
scas
mov
mov
imul
mov
mov
sbb
pop
adc
imul
rcl
imul
xor
sbb
xchg
lcall
mov
xchg
push
lret
popf
push
ljmp
jl
jb
mov
incb
cmp
out
push
xchg
mov
or
adc
daa
jns
push
push
pop
dec
into
sbbb
int
lods
push
enter
xorl
add
cld
xlat
dec
call
adc
or
add
lods
add
add
in
ja
sbb
mov
aam
adc
sub
mov
mov
dec
inc
mov
xor
sbb
jno
imul
mov
mov
mov
xor
sub
cld
into
cmpsl
int3
sub
adc
shrl
mov
sahf
mov
mov
adc
xor
ds
pop
mov
gs
les
push
shl
and
dec
pop
repz
out
shl
fdivs
dec
dec
inc
loop
fs
divl
pop
mov
mov
adc
leave
pop
mov
fistpll
int3
jnp
in
fisubrs
cmp
ficomps
pop
or
loop
scas
inc
movsl
push
movsl
push
pop
and
add
scas
inc
jae
inc
add
call
fildl
sahf
mov
test
inc
mov
movswl
mov
cmc
add
xchg
xchg
dec
push
lcall
rcrb
cmc
adc
out
jecxz
adc
ret
pop
dec
mov
xchg
inc
pop
xchg
cmpsl
add
mov
adc
dec
fidivrs
sti
and
or
jae
int
mov
cmp
and
lea
xor
loope
flds
sbb
jnp
mov
or
insb
mov
dec
xor
test
lods
or
loopne
sti
cli
mov
in
dec
sbb
ror
fldenv
aam
jae
add
out
and
lds
jle
adc
mov
cltd
push
xchg
jecxz
jge
push
xor
dec
push
scas
std
sbb
xchg
push
stc
movsb
int3
adc
sub
adc
int
into
mov
pushf
popf
xchg
insb
mov
sahf
in
cwtl
pop
cmp
outsl
cld
fisubs
fmuls
pop
imul
jl
stc
mov
leave
cltd
shl
iret
cld
xor
out
mov
out
int
mov
into
rcrl
cmpsl
loop
pop
jmp
inc
push
in
jne
add
push
and
imul
add
mov
iret
and
lahf
loope
pop
filds
je
dec
adc
and
test
pop
hlt
add
dec
cmp
icebp
mov
push
mov
aad
and
jle
in
shll
push
repnz
into
sub
fisttpll
add
dec
pusha
xchg
aaa
aad
or
pop
addb
pop
sub
xchg
jnp
arpl
decl
cmp
xor
pusha
popf
and
jns
cwtl
add
xor
pop
sbb
mov
paddd
in
xchg
fildl
cwtl
mov
dec
nop
jmp
push
incb
aad
adc
and
enter
and
sbb
mov
xor
loope
repz
jp
cld
or
aam
iret
arpl
fs
call
jecxz
rorl
sbb
inc
mov
jb
mov
xorl
xchg
stos
imul
sbb
pop
dec
nop
stos
or
pushf
clc
dec
xor
lret
mov
sub
mov
inc
out
mov
mov
cmp
cs
and
and
adc
or
sahf
lods
sahf
cwtl
test
aaa
inc
sldt
add
jnp
mov
cmp
xor
push
add
lods
add
add
lahf
and
jle
addr16
mov
ljmp
or
bound
insl
inc
fildll
dec
test
mov
add
dec
out
dec
cwtl
aas
mov
out
sub
lcall
cmp
pop
inc
lahf
ficompl
in
jbe
push
dec
btc
fidivl
mov
pop
mov
pop
cwtl
push
jle
mov
jecxz
sahf
mov
mov
xchg
loopne
gs
test
addb
inc
add
push
lock
mov
test
adc
push
add
pop
ret
loopne
mov
xor
add
add
jecxz
lods
or
cld
test
imul
inc
dec
sub
xor
mov
adc
cmp
jb
mov
test
neg
imul
cld
in
inc
cmp
and
popf
pop
sbb
loope
les
mov
lods
stc
aam
loope
xchg
movsl
je
mov
shlb
xchg
xor
sub
hlt
in
mov
mov
push
js
jecxz
inc
into
sbb
cmpsw
imul
jge
movsl
cmp
scas
clc
inc
movsl
insl
std
mov
stos
fildll
push
jle
imull
jp
addb
fsub
out
fldenv
ss
mov
pop
jno
and
lds
sbbb
in
xor
into
push
mov
loope
jmp
adc
inc
inc
setb
into
aam
fidivrl
cmpsl
stos
stos
imul
aas
cmc
sti
jno
sub
cli
insb
xchg
negl
icebp
out
add
test
fdivs
jnp
test
xchg
shlb
mov
pop
dec
jecxz
fbld
mov
shrb
adc
inc
mov
cmpsl
jb
add
mov
cmp
push
clc
bound
into
sbb
push
daa
ds
mov
cld
fldt
pop
fcoml
in
dec
out
das
xchg
hlt
jecxz
imul
mov
rcrl
out
jmp
cmpsw
sub
pop
iret
inc
mov
inc
push
push
or
jb
and
push
cmp
aad
dec
sysenter
inc
adc
dec
call
adc
push
jno
jb
cmp
pusha
out
mov
cmovl
es
pushf
rol
jmp
xchg
push
dec
pushf
xchg
call
inc
pusha
loope
sbb
inc
jne
std
cmp
mov
rcrl
leave
pop
pop
aad
mov
inc
std
xlat
inc
xchg
in
cmp
sub
movsl
cs
addps
mov
dec
scas
adc
fldcw
fcmove
aaa
adc
leave
add
dec
mov
xchg
iret
or
or
xchg
leave
call
mov
int3
mov
cwtl
out
cltd
adc
lea
int
imul
fs
jmp
add
das
sbb
xor
push
mov
push
out
lea
jmp
sti
dec
push
cmp
in
or
mov
insb
mov
in
cmp
imul
ss
inc
fnstcw
cmp
mov
stc
imul
ja
sbb
mov
push
mov
or
inc
mov
sahf
jmp
out
loope
rdtsc
shrb
lods
sub
sbb
lret
cmpsl
add
dec
aad
rcrl
dec
mov
add
jo
testb
add
jg
jns
pop
and
in
loop
add
lods
add
add
loope
repz
lock
jne
ss
mov
les
imul
jl
arpl
xchg
add
sbb
fisubrl
and
in
outsl
pop
je
cltd
mov
movsb
xchg
mov
ljmp
stc
jle
lds
and
lods
aaa
cwtl
cmc
mov
jg
jg
mov
lcall
add
ja
test
fwait
push
adcb
mov
in
lret
in
dec
pop
loop
enter
pusha
pop
lods
int
test
in
mov
fst
xchg
outsb
hlt
push
shlb
sbb
stos
cmp
jge
out
inc
jne
sbb
out
jo
orl
mov
xchg
xchg
dec
movsb
add
es
and
cwtl
icebp
ss
aaa
aas
lret
dec
mov
pop
or
jo
xchg
jg
cmp
mov
xchg
mov
testl
mov
iret
mov
jb
ljmp
popf
push
xor
insl
mov
jae
pop
and
dec
test
js
pop
inc
and
nop
fcomi
decb
xchg
stos
or
jns
ret
sbb
in
mov
outsl
cmpsb
fistpll
movsl
xlat
insb
sarl
cli
out
xlat
test
jnp
fcomps
jmp
adc
jge
pusha
insb
xchg
pop
inc
aam
cld
sub
push
sbb
idiv
sub
lock
cmp
cld
nop
or
rcll
repnz
sub
js
jo
loop
push
ret
or
mov
ret
sti
sub
fstpl
jmp
lea
repz
dec
jp
loop
pop
cmp
or
aad
cld
adc
mov
mov
mov
jge
sbbl
pop
add
icebp
stc
aaa
push
aas
cmpsl
cmpsl
jl
jne
pop
add
stc
jnp,pt
dec
cmp
mov
outsb
cld
push
lea
pop
in
cmp
jge
mov
or
pushf
leave
daa
and
cmp
test
mov
sub
xor
fs
dec
jb
and
orb
pushf
or
mov
inc
ror
ret
pusha
cmovb
nop
mov
push
or
into
xorps
cld
fsubr
out
xor
imul
or
xchg
mov
cmp
mov
pop
or
aad
cmpb
jmp
adc
dec
fistl
repnz
shrl
push
ja
sbb
fcomps
outsb
lahf
test
rol
pop
imul
add
pop
nop
negl
jle
mov
push
loop
jge
icebp
push
rep
xchg
sahf
cmc
mov
clc
fucom
xor
mov
rcll
push
xor
fsubrl
dec
mov
jns
rolb
pop
jle
cmpsb
mov
addr16
and
mov
cmpsl
sub
push
lcall
daa
icebp
popa
ljmp
push
sbb
add
xchg
sbb
sub
pop
movl
xbegin
push
outsb
leave
clc
or
call
push
jge
sbb
out
stc
dec
jle
push
rep
lods
mov
int3
leave
fstpl
mov
jl
cmpsb
cmp
call
aad
cmp
sbb
pop
mov
xchg
and
aam
sub
je
add
add
mov
notl
pop
in
rorl
pop
add
lods
add
add
mov
or
stc
dec
in
fisttps
addb
sub
insb
push
fwait
or
cmp
cwtl
xor
int3
mov
cmp
lds
in
je
shlb
xchg
push
push
pop
push
stc
and
lcall
xchg
rcrb
mov
mov
mov
mov
fistps
pushf
mov
push
scas
jno
xor
push
mov
mov
test
aam
jecxz
rcr
xchg
stos
popf
xor
mov
dec
mov
pop
divl
inc
jecxz
fnsave
inc
mov
mov
pop
inc
ret
aam
and
leave
pop
lea
fsubl
xchg
mov
push
cld
test
das
and
in
repz
and
xchg
push
xor
nop
pusha
xchg
jecxz
test
mov
jno
jg
pop
jae
mov
loopne
fldenv
dec
es
lods
add
add
push
das
cmpsb
and
lahf
sbb
push
cld
push
adc
outsb
sti
dec
mov
fwait
pop
stos
test
cmc
mov
sbb
loop
cmp
mov
lret
popa
add
inc
mov
xchg
cmp
add
fxch
jb
lahf
int
mov
ret
out
pop
mov
ljmp
jle
xor
or
add
cmpsl
repz
mov
dec
jns
xchg
pop
xlat
xor
fsubs
xchg
xchg
cvtdq2ps
dec
mov
mov
xchg
xchg
mov
les
or
pop
sub
adc
and
out
mov
push
fimull
fsubl
mov
sub
push
fwait
aaa
push
mov
push
out
pop
mov
xchg
xchg
cli
ret
sbb
repnz
cwtl
cwtl
push
test
scas
dec
pushf
jecxz,pt
or
imul
jno
xlat
sti
pop
sub
pop
push
test
xchg
and
das
mov
bound
div
push
pop
sti
push
subb
push
xchg
stos
bound
adc
rorb
mov
dec
mov
push
sbb
cmp
or
or
xor
bound
sub
aaa
test
or
xchg
xchg
call
lock
mov
sub
pop
add
pop
and
sbb
shrb
push
mov
clc
sub
dec
xor
fwait
stc
vmread
adc
stc
cmp
push
pop
lcall
sbb
adc
sub
pop
loop
push
int
or
xchg
arpl
dec
iret
das
mov
add
mov
add
mov
stc
aad
or
jge
arpl
dec
jo
add
dec
mov
push
negl
rorl
pop
popf
aas
sbb
jecxz
mov
dec
pop
push
dec
aam
dec
sti
xor
test
and
fbstp
cmp
mov
rolb
sbb
jo
fcmovnbe
mov
je
push
fisttpll
imul
hlt
xchg
jge
xlat
js
fdivrl
pop
sub
fnsave
or
es
or
jle
jno
mov
add
mov
daa
mov
jns
xor
jnp
mov
fucomi
lods
aas
dec
inc
xor
pop
adcl
add
add
add
sub
sti
lods
or
jmp
cmp
add
lods
add
add
jmp
and
scas
xchg
pop
push
enter
in
inc
adc
cltd
xchg
add
xchg
dec
jns
inc
loop
adc
pop
je
loope
stos
xchg
clc
sub
cmp
and
pop
sbb
outsb
push
stos
jmp
out
xor
rclb
jae
repz
sbb
int
insl
movsl
mov
inc
aas
inc
aaa
xchg
adc
xchg
cmpsl
call
adc
or
push
pop
pop
cwtl
idivb
push
fbld
sub
sbb
jge,pt
lcall
sbb
dec
jg
in
cmc
sahf
jbe
sbb
xlat
dec
mov
cmp
cltd
pusha
xchg
ret
jmp
sub
pop
xor
ds
or
add
push
sub
ljmp
inc
and
mov
aam
cld
jp
mov
or
ss
cmc
out
mov
or
aas
ret
add
add
cmp
mov
and
xchg
xchg
adc
jne
or
cmpsl
orb
repz
mov
test
dec
stc
or
insl
mov
fcompl
ret
fs
fidivs
jbe
out
clc
out
jb
fisubl
sub
scas
call
js
inc
mov
sbb
mov
movsl
xchg
mov
out
pop
pop
adc
jp
cmpb
test
lcall
mov
andb
outsb
jb
popf
pop
leave
jmp
adc
arpl
sub
fbstp
js
xor
insl
ljmp
test
mov
add
add
shlb
pop
push
mov
in
pop
cmp
dec
rcpps
ja
test
add
test
mov
add
mov
es
rcrb
and
adc
xchg
adc
out
cmp
cmc
push
sti
push
jecxz
inc
inc
addl
pop
jmp
adc
sbb
movsl
scas
test
push
pop
in
lret
xchg
out
and
push
call
xchg
ljmp
xchg
enter
popa
jle
cmp
jg
in
pushf
std
stc
outsl
test
mov
ficoml
lods
loopne
into
xor
sub
cld
pop
enter
and
gs
push
and
mov
bnd
mov
adc
inc
nop
idivl
fwait
cmp
test
sti
filds
adc
mov
cmp
pop
fnstenv
arpl
xor
cmpsl
inc
movsb
push
imul
sub
leave
jle
inc
pop
mov
lcall
pop
jmp
orb
and
mov
pop
pop
push
xor
neg
push
notb
push
js
dec
jle
loope
sub
inc
daa
subl
inc
xchg
lahf
adc
sub
jo
add
repz
je
adc
xor
xchg
or
stos
xor
jmp
jbe
cmp
and
enter
or
je
test
mov
jmp
daa
dec
dec
and
imul
stos
push
cmp
insb
mov
aas
pop
jge
scas
push
hlt
push
loope
jp
jg
cmc
push
fsubrp
mov
add
in
push
cld
cs
repnz
add
xor
int
hlt
jmp
add
add
or
pop
mov
mov
xor
leave
mov
or
mov
icebp
fsubl
pop
ret
lods
insb
mov
and
add
repz
iret
xchg
ficoms
je
dec
mov
sti
ret
cli
fstps
inc
mov
push
push
inc
jle
mov
fcmove
mull
rcr
or
mov
inc
xor
in
xchg
mov
incl
pop
je
mov
dec
jl
jnp
sti
xchg
and
aad
mov
repz
inc
inc
push
ja
in
sub
bound
cmp
and
call
inc
stc
popf
mov
mov
push
inc
pop
cs
sub
push
pop
js
push
mov
loop
clc
add
shrl
fiaddl
dec
or
cmp
jp
mov
push
lds
shll
mov
pop
out
adc
jnp
push
mov
inc
jo
test
pop
imul
push
sbb
xchg
mov
sub
xor
pop
in
xor
and
aaa
decb
outsb
xor
out
pushf
jo
pop
push
out
cmp
add
inc
xchg
mov
test
adcl
or
in
xchg
add
call
cld
cli
out
xchg
repz
xchg
mov
xchg
cltd
dec
test
or
lods
clc
movsb
inc
jo
mov
xchg
lret
lds
bound
scas
sub
and
shr
or
push
xchg
cmp
xor
cwtl
xchg
into
test
inc
bound
mov
outsl
cmc
pop
mov
mov
xchg
test
js
fcmovbe
mov
jb
adc
mov
shlb
insb
clc
inc
mov
xchg
jg
nop
sti
push
push
lods
mov
inc
jne
adc
std
mov
ror
mov
sub
lret
push
stos
insl
and
sbb
dec
movsl
cmp
xchg
add
sbb
insl
cltd
push
push
leave
ds
mov
mov
aam
filds
cmp
sbb
movsl
call
inc
add
movsl
call
pop
in
xor
lret
xor
ret
mov
and
leave
and
push
jnp
cmp
inc
mov
int3
jle
es
sti
sbb
add
rcrb
inc
lahf
jg
leave
dec
lods
fwait
mov
out
lcall
jmp
out
jp
in
xchg
and
out
insb
pop
test
scas
into
push
and
loope
insb
push
es
xor
aas
xorb
stos
push
es
mov
mov
dec
repz
mov
adc
jns
jae
mov
add
mov
xchg
pop
out
outsl
int
int
les
imul
and
lcall
xor
fnstsw
mov
popa
xchg
aaa
lods
std
pusha
fwait
rcll
cmp
cltd
cmp
adc
push
dec
sub
fdivl
and
dec
lcall
push
call
mov
or
and
shlb
incl
cld
data16
daa
pop
pop
and
in
imul
mov
mov
xor
or
xchg
mov
das
cld
add
int
xchg
stos
adc
add
add
mov
or
add
adc
cltd
add
mov
rorb
sub
pop
push
xor
sbb
xchg
sbb
adc
nop
icebp
mov
jb
pop
or
add
rclb
test
ret
jl
xchg
xchg
pop
cmp
jmp
inc
sti
sbb
push
or
ss
sub
push
jnp
mov
pop
movsl
ret
sbb
mov
add
fwait
mov
fsubr
mov
inc
hlt
fwait
leave
lea
adc
insl
mov
in
xor
pop
imul
inc
in
sub
jno
jg
enter
into
xchg
aas
stc
sbb
adc
add
dec
adc
and
push
clc
pop
push
xchg
enter
aad
pop
xchg
dec
sbb
xor
imul
mov
fsubs
popf
lea
sub
shrb
lods
popf
int3
sbb
mov
out
push
addr16
adc
loopne
mov
repnz
dec
mov
int3
dec
or
xor
fsubs
leave
add
mov
mov
pop
pusha
or
push
adc
repz
push
push
inc
cmp
cmp
lea
je
leave
scas
out
sbb
dec
lods
ret
xchg
inc
mov
mov
xchg
gs
adc
sbb
push
jo
out
dec
cmp
arpl
push
mov
push
xorl
pop
sub
aaa
and
int3
jne
aad
xor
push
cmp
push
rcrb
or
testb
ljmp
in
adc
std
lods
mov
jne
scas
cs
aas
fwait
lea
fsubrs
repnz
test
movq
addr16
xchg
jp
iret
or
in
sub
cmpsl
popf
sub
loop
js
dec
sbb
js
es
mov
or
lods
fdivrp
loopne
ret
xor
cld
dec
aam
into
pop
aaa
addr16
adc
hlt
pop
jle
les
push
lahf
inc
jp
pop
cmp
out
repnz
out
cld
and
nop
rclb
xor
test
mov
stos
cmpsb
gs
insl
movsl
popa
xchg
repnz
stc
ret
mov
enter
decl
rcl
mov
flds
cmpl
push
and
pop
dec
aad
mov
popa
xor
pop
cmp
je
add
push
mov
xor
jno
dec
push
mov
mov
aaa
inc
aad
dec
popf
sar
xor
jne
or
or
dec
mov
rcrl
enter
addr16
test
out
daa
cmp
idivb
jns
sub
push
or
or
and
out
xchg
ret
movd
adc
loop
push
pusha
jnp
ficomps
inc
mov
scas
sbb
enter
movsl
pushf
pop
cmpsb
out
popa
ret
xchg
test
andl
frstor
in
xor
js
or
pop
cwtl
mov
adc
daa
call
or
out
push
test
ljmp
sbbb
cmp
std
mov
imul
iret
mov
insb
lcall
xchg
adcl
fcoms
test
cmp
and
sub
call
dec
dec
ret
add
fldenv
popa
xchg
fs
mov
xchg
popa
test
jecxz
xor
cli
mov
add
sarl
or
xor
and
repz
fcmovnb
pop
sbb
adc
cltd
inc
insl
add
lods
add
add
cltd
fisttpll
cltd
bsf
cmpsb
popf
stos
add
pop
cli
fs
add
jmp
xchg
jecxz,pn
addr16
sbb
dec
jno
pop
dec
sub
call
pop
dec
sbb
cmpsb
adc
je
sarb
pop
je
or
ret
xchg
insb
jno
lcall
xchg
rol
jp
inc
and
jmp
stos
cmp
rcll
cmp
sub
jo
cwtl
and
ljmp
scas
pop
aaa
sub
inc
pushf
xorb
push
fcmove
jbe
ficoml
jns
shll
push
push
bound
outsl
or
push
sub
push
sbb
push
cwtl
mov
inc
lds
and
cmpsb
in
add
push
out
or
aaa
push
aaa
leave
adc
push
cmp
test
pushf
adc
xor
mov
dec
mov
dec
cmp
shlb
daa
dec
ret
mov
stc
sbb
adc
lret
lock
mov
jmp
mov
je
mov
rcrb
pusha
xlat
lock
mov
sbb
mov
pushf
stc
js
bound
cmp
orb
cmovb
or
out
ja
adc
movsb
pop
add
int
dec
stos
enter
stos
in
push
sti
les
aam
fnstsw
daa
test
pop
push
sarb
mov
cmp
dec
sbb
or
cmp
das
jge
leave
push
add
push
mov
pop
inc
sub
loopne
ljmp
push
adc
pop
pop
sti
cmp
cltd
xor
and
adc
scas
es
imul
int3
shlb
arpl
ds
push
dec
mov
js
pop
int
imul
push
scas
jle
fidivs
movsl
inc
mov
add
mov
in
test
aaa
pop
inc
test
aaa
inc
in
testl
add
sub
les
mov
pop
in
push
int
push
insb
mov
std
lret
push
mov
stos
pop
and
out
cwtl
in
movsb
imul
rcrb
mov
sbb
addb
sub
push
jb
push
aad
mov
cmp
dec
sahf
or
les
scas
loope
loop
scas
mov
xchg
xchg
lods
scas
xor
jb
and
nop
std
and
push
jecxz
mov
xor
cmp
je
divb
xor
fcomps
fldcw
pop
fxch
jae
lcall
shl
jmp
xor
mov
clc
fdivr
test
mov
ljmp
aad
mov
jmp
pop
and
cmp
xor
or
pop
cld
jnp
rolb
sbb
sahf
cmpsb
and
lea
outsb
enter
xchg
sbb
jl
push
jbe
out
xor
cltd
insl
mov
lds
mov
add
lds
sbb
mov
inc
lock
loope
sbb
das
repnz
rclb
shlb
call
adc
lea
aad
andl
xchg
fs
xchg
out
xor
outsl
test
and
jmp
pop
testl
loop
dec
sti
pop
dec
xor
jne
in
cmp
pop
int3
add
add
and
gs
daa
sti
mov
push
xchg
mov
and
jo
add
push
shll
adc
pushf
int
lods
mov
or
outsb
les
pop
inc
loope
or
pop
sbb
dec
mov
push
repnz
pop
data16
lcall
cli
cli
popa
xchg
cmpsl
sub
cmp
and
jns
fstp
mov
loopne
out
pop
xchg
jne
fucomp
shll
movsl
ljmp
cmovo
fldcw
ljmp
lret
mov
mov
cltd
jnp
jbe
sub
cmp
inc
jle
out
jg
jb
mov
loopne
sti
out
jl
and
mov
dec
repz
cltd
std
nop
mov
loopne,pn
push
fwait
lcall
cmp
loop
jo
and
push
notb
dec
shrb
loope
adc
lret
jb
add
mov
sub
test
jp
imul
xchg
add
ffreep
cld
insb
scas
loop
mov
popa
mov
lret
scas
fwait
scas
add
mov
sub
pop
push
xor
sub
bound
mov
cmc
cli
fsubrl
cmp
push
jns
loop
mov
movsl
pop
into
pop
mov
pop
jle
out
incb
xchg
arpl
leave
inc
mov
in
xchg
lret
jnp
cmp
mov
push
and
push
sub
cmp
outsb
and
mov
std
jge
decb
xor
cmp
repnz
sbbb
inc
mov
and
cs
ret
and
addr16
lods
pop
es
int
jnp
push
sahf
mov
sbb
mov
xlat
push
mov
cmp
rcl
xchg
pop
mov
ljmp
out
cwtl
jns
sbb
fs
mov
or
xor
jo
pop
ja
pop
int
mov
jne
das
icebp
cmp
rcr
xor
stc
mov
add
movsl
adc
cmp
pop
stos
or
in
out
or
dec
fcoml
mov
mov
push
hlt
imulb
dec
cli
iret
xor
or
xchg
out
or
bound
outsb
test
bound
int3
dec
cmp
test
aam
push
mov
cmp
mov
sbb
and
lods
pop
inc
inc
imul
dec
cli
mov
sub
cmpsl
out
ficompl
sub
ds
jmp
inc
jle
insl
xor
mov
insl
mov
sbb
fisttps
xchg
bound
xlat
add
jl
add
adc
mov
mov
pop
clc
push
pop
ret
mov
fsubrs
pop
inc
cmpsb
sbb
mov
pop
shlb
mov
jae
leave
push
icebp
xor
jg
fisttpl
or
pop
dec
test
jl
dec
outsb
daa
mov
and
push
hlt
cmp
in
xor
mov
pushf
xchg
add
jmp
cmp
movb
pusha
ja
cmp
imul
rorb
lcall
lret
nop
or
add
jl
and
pusha
dec
sub
push
insb
in
ficompl
mov
mov
movsl
jae
out
fcoms
cwtl
jb
fmull
mov
dec
mov
scas
fmuls
outsb
ds
dec
mov
dec
inc
xchg
jmp
jne
jo
cmp
nop
sbbl
sub
xchg
jo
cmp
ret
enter
in
add
mov
mov
aas
sysexit
pop
push
mov
add
lods
add
add
pusha
inc
fdivl
rep
lahf
lcall
push
jne
fstpt
push
repz
push
jae
pop
xchg
jecxz
fadds
data16
jb
sub
jno
mov
mov
push
dec
xchg
mov
pop
or
cs
out
pop
dec
xchg
sahf
mov
mov
test
in
test
cmp
mov
xor
icebp
pop
out
lods
cmp
sar
adc
sti
fisttpl
in
cmpsl
cmp
out
hlt
sbb
out
repz
mov
dec
insl
testb
jmp
xchg
stc
jns
sti
or
lea
xor
out
sbb
in
sub
and
mov
cmp
push
push
xor
cmp
sahf
iret
push
in
es
js
cs
mov
cld
jp
jge
sar
mov
cmp
in
mov
cmp
sbb
sub
mov
xchg
pop
mov
aam
ret
lods
lock
mov
rolb
or
xor
xor
cmpsb
js
ss
lret
xchg
mov
mov
test
nop
ja
clc
and
and
jns
repz
jmp
xchg
pop
pop
add
jbe
cltd
enter
cmp
mov
in
pop
lret
dec
pop
negb
mov
cmp
call
fwait
les
scas
mov
pop
in
add
xorb
flds
lea
in
nop
lds
sbb
cltd
scas
mov
fcomps
leave
push
outsl
aam
xchg
cmp
adcl
and
vmovss
jne
add
ret
xchg
imul
xor
sbb
or
mov
aad
stc
mov
add
jecxz
cs
mov
add
ljmp
out
imul
mov
test
cltd
jno
fsubs
dec
ss
in
inc
dec
mov
aaa
popa
rolb
popf
in
adc
ss
mov
inc
stc
cmpb
pusha
fimull
jae
push
subb
mov
add
push
jl
cltd
movsb
daa
insb
out
dec
fmuls
aad
pop
inc
je
push
dec
outsb
add
sbbl
shrl
stos
outsb
lds
les
lods
inc
pop
int3
cmp
mov
dec
pushf
js
arpl
pop
jmp
add
insb
push
test
cli
mov
das
pop
jl
mov
ja
lods
cs
mov
xor
mov
mov
std
xlat
cld
stos
cmpsl
lcall
scas
xchg
fbstp
mov
mov
int3
sub
lods
std
cmpsl
mov
pop
adc
mov
push
jae
jge
push
ret
push
mov
add
cltd
mov
rcl
ds
cmp
adc
sbb
shrl
or
adc
pop
mov
out
les
sub
test
add
push
sub
test
inc
jecxz
dec
push
pop
jecxz
test
rcll
ret
mov
sti
in
call
mov
jnp
push
leave
adc
outsl
lret
adc
ljmp
push
loop
xlat
jg
xchg
xchg
add
adc
sbb
das
sub
enter
jg
cmpsl
stos
test
pop
iret
std
mov
cs
test
and
xchg
lret
ror
hlt
ret
dec
inc
ret
mov
mov
add
repz
push
cmp
pop
sub
add
aad
daa
int3
stc
pusha
divb
fdivr
pop
aas
sub
and
outsl
sbb
ret
inc
fisubs
mov
and
std
pop
mov
sbb
jmp
fbld
mov
ja
mov
lods
mov
mov
je
sbb
cli
jecxz
ljmp
xchg
jge
aam
push
cmp
mov
pushf
repz
fiaddl
adc
and
add
call
jecxz
gs
xchg
push
mov
cltd
jns
pop
jge
fs
out
xchg
add
mov
out
and
test
subb
xchg
push
in
fisubs
add
fbstp
mov
ret
je
sbb
sti
sub
inc
sub
jmp
jbe
lret
inc
clc
ja
aad
mov
dec
cmc
sub
mov
cld
dec
sahf
movsb
xchg
xor
out
sbb
iret
les
jl
repnz
jmp
xchg
or
icebp
scas
xchg
ret
xchg
xor
push
cmpsl
sub
repnz
push
inc
cmpb
call
xchg
push
and
push
and
pushf
xor
push
or
push
or
sbb
cmp
xor
pop
lds
mull
mov
adc
cmp
xor
push
enter
xor
mov
in
fistpll
ret
aad
push
jnp
pop
and
std
sbb
mov
cmp
insb
lods
into
cmpsl
jge
ss
mov
push
frstor
sbb
pop
mov
lock
adc
vmovupd
sub
cmp
push
ja
out
in
lock
dec
mov
icebp
bound
mov
inc
shll
pop
adc
lcall
mov
aas
inc
adc
mov
jae
cld
adc
or
mov
pop
mov
dec
push
in
arpl
xchg
cwtl
mov
call
int
xchg
sti
out
iret
jmp
xor
aas
pop
and
adc
outsb
lds
and
mov
cmpsb
push
xor
callw
gs
pop
arpl
test
test
pop
ss
aaa
pop
ljmp
dec
sbb
and
push
inc
pop
push
push
xlat
sarl
sbb
inc
jecxz
enter
je
or
pop
add
cmp
inc
push
mov
test
imul
add
adc
sub
dec
pop
arpl
imul
sub
pop
cmpsb
rorl
frstor
xlat
pop
fmuls
adc
dec
add
mov
call
sbb
jb
inc
push
or
int
es
pop
and
pushl
inc
pop
cmp
lret
sbb
cmp
inc
and
scas
sub
cmp
adc
add
data16
mov
add
sub
das
or
inc
out
inc
lods
cli
push
mov
push
loop
cmp
lcall
sbb
jb
xchg
fisubl
xchg
mov
mov
mov
cmp
cmp
add
insb
inc
xchg
sbb
pop
sub
cmpsl
test
outsl
mov
or
icebp
xchg
je
js
or
leave
mov
arpl
and
fnsave
sti
popf
test
add
xchg
lcall
mov
add
test
lcall
rcr
out
or
ljmp
fs
add
lret
xchg
lahf
mov
popa
rorb
jae
dec
xchg
cmp
cmpsl
xchg
pop
mov
lea
push
js
pop
cmc
rclb
jle
sarb
or
bound
dec
rorb
jnp
xor
cmpsb
sahf
mov
pop
adc
push
sarb
sub
dec
test
aad
mov
je
sub
inc
sahf
fxch
dec
filds
pop
loop
jb
adc
std
sbb
adc
mov
push
mov
out
jge
cwtl
ds
fists
stos
adc
stos
ja,pn
lcall
into
mov
in
adc
xchg
es
and
xchg
nop
pop
lret
movsb
push
jb
ljmp
pop
and
xchg
cwtl
inc
shll
or
cli
test
xor
sub
addb
push
mov
insl
fstpl
cmpsl
ficompl
jmp
out
or
leave
xorl
mov
data16
popf
and
call
jae
out
jbe
adc
pusha
sbbl
sar
or
aaa
arpl
imul
cmp
insl
pop
jb
jb
repnz
sub
jae
pop
mov
cwtl
shrb
mov
jo
loope
push
loop
test
push
mov
mov
cld
xchg
and
cmp
jb
cmp
xchg
adc
imul
pop
int3
fs
jl
jg
dec
jmp
xchg
mov
inc
dec
mov
stos
mov
sti
ds
popl
rcrb
xchg
inc
jecxz
stos
cld
mov
xchg
sahf
pop
in
rcr
icebp
mov
sbb
loop
iret
fcoml
imul
cli
adc
test
jg
or
pushf
cmpsl
nop
rolb
lods
mov
jo
pavgb
dec
add
jbe
shrb
imul
lcall
f2xm1
inc
xchg
or
hlt
test
xor
dec
pop
sar
div
xchg
fs
dec
cmp
pop
cmp
adc
jmp
inc
lods
pop
cmp
pop
adc
cmp
sar
and
jge
lods
jmp
dec
js
push
cs
div
mov
je
xor
xor
cli
mov
xor
sahf
lods
fwait
shlb
pop
xchg
push
xor
jle
cmp
pop
inc
data16
xchg
incb
lods
xlat
cmp
aaa
inc
xor
or
idivb
xlat
inc
mov
sub
add
sub
dec
cmp
jecxz
sbb
lock
subb
insl
lcall
mov
ljmp
pusha
dec
jl
xchg
in
push
lods
xor
outsl
test
divl
inc
add
push
xchg
test
mov
cs
incb
fmulp
inc
fdivs
int
mov
out
mov
test
sbb
fnstsw
mov
sbb
jg
inc
xor
popa
lods
sub
adc
in
jb
xchg
jmp
daa
dec
xchg
fwait
rol
adc
xor
xor
outsl
out
stos
push
test
mov
mov
xor
pop
sti
dec
push
lods
dec
sbb
and
fdivl
stc
add
add
call
jmp
and
push
dec
cmc
rep
jg
add
js
inc
adc
stos
test
insb
ss
adcl
lock
test
fyl2xp1
push
push
cmp
mov
inc
pushf
mov
jmp
pop
mov
dec
movsl
and
xchg
pop
ss
repz
ss
jle
mov
push
jne
jb
std
ja
xor
aam
sarb
testl
dec
cmp
xor
cmp
scas
test
xor
test
fimull
sbb
lea
subl
inc
loopne
and
imul
add
cwtl
fwait
xchg
pusha
sub
fimull
cmp
xchg
mov
daa
pop
into
loop
xchg
mov
dec
mov
cmpsl
push
pop
cmp
mov
int3
xchg
add
lahf
leave
xchg
ret
or
jo
pop
mov
xchg
mov
jb
ds
adc
fldenv
sahf
cld
outsb
pop
and
pusha
xor
jge
aam
gs
iret
sbb
inc
insl
lds
sub
into
dec
or
aaa
mov
hlt
iret
cltd
add
pop
sbb
sbb
lds
xchg
in
bound
call
xchg
inc
sti
fs
daa
xor
push
xchg
jge
dec
pop
pop
and
dec
xor
sub
pop
ds
jl
push
hlt
sbb
mov
mov
ljmp
dec
fadds
push
ret
les
shlb
or
icebp
out
jle
jo
shr
int
xchg
adc
sub
pop
ja
cli
pop
sahf
and
loope
and
jne
dec
int
shrb
ss
mov
mov
pop
pop
sub
pop
add
adc
stc
aam
push
movsl
xchg
cmc
repnz
or
pop
popf
push
test
mov
sub
mov
and
adc
int
in
in
jne
dec
pop
sub
dec
aam
nop
add
cmp
sub
std
and
mov
lcall
mov
ja
rcr
rcrb
test
jbe
push
inc
mov
repnz
mov
push
stc
or
fistps
push
in
arpl
push
inc
sbb
stos
and
jae
and
repnz
aas
shll
pop
stos
adc
mov
jbe
dec
xor
cltd
test
xor
mov
clc
outsb
sarl
mov
aam
pop
adc
cmpsl
leave
mov
xor
cltd
out
jnp
icebp
dec
vmread
les
enter
lods
cli
xor
je
mov
cmp
and
nop
lods
rep
sub
mov
push
and
loop
inc
add
dec
ja
jno
sbb
push
data16
scas
fmull
or
jae
mov
cmpsl
popf
repz
rorb
sub
mov
sub
or
and
inc
cltd
ja
mov
adc
or
in
jns
xchg
dec
mov
mov
sub
cmp
adc
bound
cld
add
insb
fmulp
sbbl
jno
cmp
push
and
jecxz
fwait
or
and
mov
inc
pop
mov
cwtl
pop
cmp
push
mov
pop
cmp
mov
push
cs
arpl
sahf
push
fsubs
rol
adc
jnp
pop
popa
mov
pop
fbstp
out
pop
les
test
ret
inc
fs
repnz
and
add
dec
test
in
std
pop
rcrb
addl
lods
add
add
sahf
incb
mov
sub
roll
ljmp
and
pop
xchg
sub
out
js
pop
sahf
cmp
decb
cmp
push
sub
mov
sub
jnp
xchg
jp
and
jb
xor
fs
bswap
cld
cmp
fneni(8087
lock
scas
in
xchg
cmp
cli
lods
les
add
dec
xor
mov
fdivrl
out
cld
xorb
dec
and
dec
xor
pop
repz
in
jno
sbb
cwtl
xchg
jg
and
adc
xor
dec
ljmp
cmp
dec
xor
lahf
push
mov
cli
test
xor
test
and
popa
rcrb
sbb
mov
adc
insb
lahf
jns
jmp
mov
cwtl
fnsave
mov
push
cwtl
dec
jle
inc
mov
pop
ds
adc
mov
std
and
add
jle
ss
cmpsb
nop
cmp
jecxz
adc
mov
movsb
jecxz
pop
cld
fs
cltd
xchg
xor
in
mov
lds
pop
jmp
push
icebp
outsb
cmp
stos
aam
lret
jno
mov
jnp
and
xlat
jo
testb
lods
jae
sarl
decb
int3
mov
shll
mov
mov
rorb
insb
adc
pop
dec
mulb
mov
lods
sti
mov
lcall
movb
cmp
xlat
js
in
push
mov
sbb
mov
xchg
push
fcomip
pop
fidivrs
mov
in
jns
jg
and
andb
xor
mov
pop
ret
pushf
ds
push
in
es
mov
add
push
xchg
std
sbb
cmpsl
cmpsl
lds
iret
lock
xchg
outsb
out
sub
push
add
mov
cmpb
mov
mov
cli
adc
jmp
lock
insb
out
pop
lret
cmpsl
ljmp
and
jg
and
or
imul
mov
xor
fldl
repz
sub
imul
add
adc
add
insb
jne
shll
push
pushf
or
or
js
shrb
movsl
daa
loopne
test
mov
push
xchg
aam
pop
cltd
jp
shrb
insl
shll
push
fdivr
xchg
sub
lret
addr16
sbb
mov
cmp
xchg
in
adc
daa
fs
xlat
in
sub
cwtl
mov
ss
cld
xchg
arpl
add
and
push
arpl
sub
fwait
sti
mov
test
es
in
fstpl
mov
mov
push
cmp
std
shl
mov
and
cmp
or
pop
mov
inc
and
sbb
mov
inc
dec
insb
dec
popf
cmp
dec
or
movsl
sub
push
push
outsb
sbb
add
push
xchg
push
add
test
dec
sbb
loop
and
mov
inc
push
pop
out
jmp
frstor
sbb
push
test
push
out
jl
pop
mulb
leave
dec
pop
mov
push
jp
mov
inc
mov
data16
adc
push
push
inc
lods
or
pop
push
pop
sbb
outsl
dec
add
dec
sub
xor
es
cmpsb
mov
mov
add
es
inc
out
inc
add
xchg
mov
mov
das
and
jmp
cwtl
mov
dec
js
cltd
mov
xlat
xchg
scas
xchg
push
mov
xchg
cmpl
ror
or
mov
mov
xchg
add
stc
test
sbbb
add
add
clc
dec
and
stos
cmp
sbb
mov
arpl
pop
cmp
push
mov
cmpb
fistpl
mov
inc
push
inc
mov
jne
rcrb
pop
outsb
aas
jmp
xor
xchg
cld
push
pop
or
lret
pop
loop
add
cli
inc
insb
in
aaa
fcompl
xor
test
push
repnz
sahf
dec
mov
sbb
mov
mov
jecxz
cli
adc
fcomp
fdivp
hlt
shrl
mov
hlt
xchg
fdivl
cli
mov
xor
insl
arpl
fcompl
dec
das
and
jne
popa
enter
cmp
pusha
pmaddwd
mov
xor
push
push
or
in
inc
enter
xchg
jno
jge
andb
cmpsl
jae
lahf
sbb
add
arpl
mov
daa
mov
mov
mov
out
icebp
push
stos
push
stos
lods
mov
push
loopne
gs
out
sub
loope
adc
push
int3
mov
hlt
cwtl
mov
dec
pop
repnz
add
xchg
jg
sub
xor
mov
mov
add
mov
pop
aaa
loope
lret
mov
sbb
lret
fists
mov
sbb
ja
adc
mov
pusha
xchg
xchg
jno
bound
arpl
mov
push
mov
mov
aam
inc
inc
ljmp
pop
cmp
fdivs
push
jae
addr16
push
nop
adc
cmc
test
mov
xchg
or
inc
fbld
cli
into
mov
out
into
mov
pop
or
push
xor
push
adc
repz
ja
scas
push
in
sub
mov
rorb
hlt
movl
addr16
and
mov
add
inc
insb
cmp
dec
xchg
add
loopne
ret
cmp
pop
pop
dec
popa
in
cmc
push
nop
pop
js
and
test
gs
rclb
rol
not
fwait
aad
adc
adc
sub
test
cltd
aaa
cltd
mov
xlat
out
mov
jns
sub
gs
and
into
jge
fistps
inc
ret
cli
mov
pop
fsub
test
ficomps
lcall
add
mov
add
es
in
lods
add
loop
cli
mov
mov
dec
xchg
inc
scas
pop
and
add
and
sub
sub
dec
push
fistpl
and
adc
inc
mov
adc
push
leave
sub
and
push
pop
mov
xor
push
pop
insl
lds
xor
inc
sub
pop
mov
sti
pop
adc
inc
pop
iret
out
pop
push
sbb
das
or
jbe
jns
jae
inc
psubd
jmp
jb
inc
jbe
push
jle
in
test
adc
adc
insb
xchg
pop
cmp
xchg
pop
dec
jnp
mov
push
inc
mov
or
dec
fisubl
add
add
fdivrs
out
jbe
outsl
cmp
leave
jecxz
push
stos
mov
add
push
adc
shll
scas
or
cmp
xchg
xchg
or
sbb
pop
mov
sbb
mov
fildl
inc
mov
daa
cmpsl
js
lcall
int3
outsb
mov
cwtl
std
adc
push
mov
lds
cltd
movsb
adc
inc
cmpsb
mov
sub
inc
int3
xchg
loop
rcrb
or
addl
stos
aad
sub
call
popf
adc
mov
pop
div
pop
lret
lea
bound
imul
inc
idivb
xchg
push
mov
insb
pushf
inc
sub
sub
xor
mov
inc
mov
in
or
dec
cmp
sbb
mov
ss
int
insl
cld
in
xchg
push
out
sbb
sar
cli
push
scas
adc
xchg
mov
xchg
in
mov
lock
enter
cwtl
les
push
fsts
fstps
xlat
das
stos
outsl
fidivrl
rcrb
xor
adc
and
rorl
or
jl
jle
fmuls
mov
sarb
imul
negb
pushf
insb
insb
and
adc
inc
mov
test
mov
rcrl
adc
jo
call
jne
mov
mov
jge
cmc
add
testb
cmpsb
cmp
lods
into
stos
pop
mov
popf
jg
cmp
xchg
jbe
sbb
xor
cs
mov
jns
adc
push
adc
sub
and
pop
inc
popf
ret
jno
ja
dec
sbb
ror
callw
mov
cld
outsb
subb
repz
into
sub
loope
das
and
sub
inc
daa
sahf
pop
inc
mov
pop
adcb
mov
mov
shrb
pop
sbb
iret
adc
lahf
mov
testb
mov
sbb
outsb
std
cmp
pop
sbb
mov
push
sub
lret
xchg
insl
mov
sub
xor
push
fsubs
mov
dec
push
push
fcmovnb
jmp
movsb
or
mov
lods
sbb
adc
imul
popa
cs
iret
and
cmp
mov
stos
push
lods
adc
cli
adc
andl
insb
popa
enter
das
data16
cmpsb
mov
mov
inc
cmp
sbb
repnz
pop
lock
cmp
jp
mov
pop
ror
fmuls
pop
lret
pop
push
fistps
ret
loopne
cmp
das
and
xchg
cmp
fcompl
aaa
xchg
xchg
xor
xchg
cmp
mov
lock
xor
ret
call
inc
out
out
stos
lahf
lds
ljmp
imul
cwtl
mov
mov
mov
sub
call
shll
push
je
test
pushf
mov
inc
inc
into
sarl
pop
cltd
in
ljmp
pushf
test
pushf
sbb
mov
jecxz
jmp
cmpsl
xor
movsl
dec
push
mov
mov
mov
jmp
sbb
xor
mov
inc
xchg
pop
sbbb
add
fimuls
daa
dec
cwtl
push
pop
mov
add
aad
mov
and
mov
mov
fmull
jl
or
pop
or
mov
mul
ja
sub
xor
mov
ds
xor
jne
xor
fs
icebp
cwtl
push
fwait
jle
sub
dec
popa
mov
xor
rcrl
icebp
xor
mov
cmp
mov
cltd
adc
lret
inc
int
mov
das
jb
sub
mov
out
insb
inc
enter
add
mov
adc
aaa
cmp
xchg
xor
addr16
add
add
dec
lahf
mov
imul
and
dec
ret
adc
xchg
aad
gs
push
movsb
int
xchg
jne
cmpsl
add
mov
adc
jne
xchg
inc
xchg
fadds
dec
sub
outsl
mov
out
xor
dec
pop
pop
cli
or
out
push
stos
fsubp
adc
pop
hlt
mov
mov
mov
ror
xor
fs
int3
movsb
jnp
dec
sub
es
push
adcl
adc
mov
dec
in
add
add
imul
pop
ficompl
ljmp
dec
sbb
in
dec
inc
in
inc
fidivrs
sarb
mov
xchg
xchg
inc
inc
cmp
pop
adc
mov
pusha
push
lcall
adc
push
loopne
xlat
xorl
movsl
cltd
movsb
rcrl
aad
cli
pop
jbe
iret
push
cmpsl
rclb
stc
push
icebp
insb
pop
adc
lods
cltd
mov
inc
test
mull
mov
and
mov
adc
mov
push
mov
add
out
or
sub
scas
notb
scas
mov
push
sbb
xchg
sarb
out
or
jno
pop
out
mov
pop
mov
daa
add
pop
test
popa
mov
lcall
sub
mov
fxam
mov
fsub
in
lahf
inc
packssdw
push
notl
sub
lret
mov
sub
jp
mov
test
mov
and
add
int3
jp
and
fcomps
sarl
lods
sbb
push
out
or
mov
out
or
cld
add
pusha
adc
sbb
pop
jle
mov
mov
ret
inc
adc
xchg
cmp
xor
jecxz
pop
ficomps
mov
sbb
nop
cmc
loope
gs
mov
mov
mov
test
inc
fs
inc
sub
rcr
inc
out
les
and
sub
mov
in
lret
mov
out
negl
inc
or
xlat
jae
adc
test
les
sbb
cmp
inc
xlat
movsb
lret
pop
or
out
sub
sahf
mov
inc
cmp
mov
dec
dec
xchg
into
cmp
cmpsl
or
bound
jl
push
mov
into
sbb
inc
mov
scas
xor
xor
push
out
fldcw
or
pushf
in
fcoms
mov
jno
jns
or
sbb
test
lret
ror
stos
nop
mov
mov
ret
andb
test
cmc
add
rcll
addb
test
lds
push
cmp
mov
pushl
xchg
mov
mov
ds
dec
mov
popa
dec
push
sbb
cmpsb
and
lods
add
add
push
pushf
xchg
pop
xchg
call
pop
push
arpl
and
push
outsl
jo
inc
jmp
mov
es
push
dec
dec
xor
ds
lods
mov
cli
and
sbb
int3
mov
cmp
and
jbe
sbbl
pop
push
mov
mov
dec
mov
jb
add
pusha
inc
popa
mov
outsb
pop
inc
mov
std
loope
mov
adc
fwait
in
mov
outsl
mov
and
adc
stos
insl
mov
inc
lea
loop
cli
jbe
mov
push
sub
ljmp
mov
dec
dec
in
into
in
adc
ss
jp
inc
xchg
and
dec
scas
sub
std
out
jnp
and
pop
lods
mov
add
push
test
mov
jns
rcr
mov
inc
jns
das
mov
xchg
xor
xor
repnz
fimuls
pop
adcb
daa
xchg
lret
inc
pop
xor
jno
ds
pop
sub
jbe
mov
xor
cmpsl
movsb
adc
add
es
mov
clc
push
aam
lahf
mov
xchg
popa
push
jb
and
imulb
sti
cmp
into
stos
sbb
lret
or
and
or
xchg
cmc
adc
aam
fimuls
push
push
out
jmp
test
pop
cmpsl
lock
dec
iret
xor
cli
gs
xchg
movsb
sbb
and
icebp
js
int
sub
test
mov
rcll
lods
negl
xchg
pop
inc
inc
push
xlat
fnstenv
aad
stos
insl
bound
daa
inc
sahf
cmp
fwait
test
and
cwtl
outsl
pop
repnz
xchg
or
iret
inc
loope
inc
push
rcrb
xchg
mov
fmuls
hlt
fists
mov
jno
fs
sbb
insl
pop
xchg
popa
mov
mov
pop
bound
cmp
mov
loopne
adc
mov
pop
outsb
jl
arpl
in
mov
mov
and
cmpb
sbb
adc
loop
hlt
sbb
dec
outsl
push
fisttps
popf
repnz
sub
xchg
bound
sub
cld
pop
mov
xor
cmp
push
adc
test
push
daa
cmpsb
xor
add
pop
das
jae
ljmp
push
mov
aas
mov
xchg
cld
sub
sub
pop
sub
jl
test
in
fiadds
jbe
test
mov
js
sbbb
add
pop
xchg
inc
xor
pop
mov
lods
jne
lcall
xchg
mov
or
push
popa
mov
in
movsb
aad
std
stc
bound
sbb
movsb
clc
xorl
push
xchg
mov
cmp
nop
hlt
jle
loope
adc
push
push
loop
pop
sti
shl
cmc
mov
daa
inc
popa
movsl
out
clc
pop
testl
push
mov
inc
dec
test
xchg
pop
add
es
inc
ja
add
aam
or
jge
aad
pop
pop
jg
insb
pop
pop
mov
dec
sti
lahf
ss
es
cmp
pop
push
add
pop
jb
sbb
push
mov
ficomps
add
ss
xor
rol
or
add
add
xlat
and
aaa
std
out
and
addr16
mov
add
lods
add
add
out
roll
fcomip
pop
test
stc
mov
mov
rep
sub
mov
in
or
sub
imul
icebp
or
rcr
mov
pop
push
insl
cli
pop
push
pop
pop
mov
sahf
inc
bound
andl
xor
ret
insb
mov
mov
add
inc
fistpll
rcrb
mov
mov
imul
mov
aad
lods
jae
hlt
mov
push
insl
sahf
repz
int3
sbb
cli
fisubs
movsl
jge
mov
test
je
or
or
in
mov
test
xchg
pop
jecxz
out
and
mov
adcl
push
lahf
int
push
fwait
cmp
pop
movb
les
aad
out
test
add
xchg
xchg
xchg
pop
pop
push
and
loope
adc
sbb
out
sub
iret
sahf
mov
test
and
aaa
jo
fidivs
or
jno
aaa
fstps
aas
test
sub
daa
cmp
lods
pop
enter
mov
rcl
jl
push
movsl
mov
das
outsl
mov
mov
in
icebp
fnstcw
inc
and
divl
mov
xorb
jo
popl
push
je
sub
lret
sub
sub
incl
xor
dec
dec
sbb
into
mov
cltd
lahf
or
mov
subb
sub
rcr
jp
add
aam
sarb
out
aas
and
scas
pop
sbb
and
sub
jnp
lret
cmp
jp
pop
roll
nop
push
ret
sub
stos
fcmovu
sbb
sub
dec
insb
add
out
add
icebp
scas
ljmp
mov
push
test
push
je
ds
mov
xchg
inc
out
mov
je
ss
sbb
cmpsl
add
lock
dec
cmpsl
sub
xchg
mov
adc
mov
sub
iret
test
jae
and
jmp
mov
pop
xor
cmpb
pop
adc
mov
in
cli
push
jmp
adc
lcall
scas
jmp
out
adc
scas
mov
jmp
jno
ret
mov
loop
mov
sbb
jecxz
js
sti
jg
hlt
jns
xor
into
jge
inc
xor
xor
pushf
or
or
inc
bound
lret
daa
dec
jae
mov
pop
mov
fwait
sub
lahf
sti
mov
test
out
scas
push
imull
popl
movsb
push
xchg
cmpsb
jbe
push
xor
cmc
mov
sbb
lea
into
dec
mov
xor
fucom
dec
pusha
int3
mov
insl
jno
mov
dec
rcrl
xor
jg
cmc
lahf
lea
mov
mov
jge
lret
lret
xchg
hlt
iret
gs
and
mov
cli
cltd
jae
cmp
sbb
inc
xor
sub
test
mov
xchg
lods
cli
mov
cli
jne
mov
xchg
stos
xor
or
cmp
repnz
cs
cmp
shr
push
dec
fldln2
and
pop
in
mov
xchg
mov
xchg
mov
push
popa
dec
test
int3
push
xchg
sbb
insb
push
inc
imul
add
nop
int3
popf
fistps
lea
jmp
ja
cltd
add
lods
add
add
cmpsl
mov
imul
aad
push
fistpl
jle
cmp
push
jp
into
cltd
hlt
divps
subl
push
pop
sub
int
sahf
lock
push
hlt
dec
out
pop
lea
cmp
jg
aad
xlat
std
mov
sbb
fidivl
xor
dec
lds
pop
mov
mov
lea
dec
inc
and
cmp
mov
xor
mov
scas
loopne
or
push
mov
xchg
popa
push
inc
xor
lods
cs
xchg
cwtl
adc
xchg
cltd
bound
out
mov
scas
lret
fwait
clc
pop
repz
fstpt
jmp
xchg
mov
rolb
jbe
in
js
inc
out
dec
jecxz
lcall
sub
addr16
xchg
das
movl
aad
mov
pusha
mov
xchg
call
outsl
push
out
adc
shlb
gs
pop
das
sub
outsl
cmp
fstpt
mov
and
push
mov
xor
mov
idivb
sbb
or
js
mov
mov
or
out
cmc
lock
adc
ret
fisubl
pop
lcall
pop
cmp
inc
mov
std
pop
mov
aaa
push
call
add
xchg
sub
push
adc
ja
push
inc
bound
ss
pop
cwtl
icebp
imul
sbb
scas
fs
mov
leave
pushf
daa
shrb
mov
xor
add
inc
int3
adc
mov
in
stos
test
daa
es
fldenv
or
add
aam
movsb
inc
rcl
jmp
xor
loop
pop
mov
cmp
mov
pop
hlt
add
pop
cli
pop
dec
cli
bndldx
cld
adc
cmp
jge
mov
adc
into
inc
pop
pop
cmpsl
add
aam
pop
imul
in
jns
daa
idivl
stc
xor
and
out
or
jbe
shlb
int
push
lods
js
fisubl
incl
cmp
in
cmp
add
sbb
or
test
pop
in
pop
stc
rcl
sti
mov
testb
arpl
jne
dec
mov
dec
pop
call
dec
or
mov
test
cli
insb
inc
cmc
add
clc
cld
pusha
lret
jb
shlb
mov
fnstcw
jge
icebp
inc
es
cld
dec
bswap
js
mov
mov
out
out
xchg
std
xchg
outsl
dec
dec
xor
loope
enter
pop
and
fwait
sbbw
out
imul
xchg
xor
pop
fcoml
loope
out
add
and
and
push
in
call
cmp
sub
xor
push
ficompl
ds
lcall
shll
insl
mov
dec
js
out
shrb
cmc
inc
fs
jmp
xlat
daa
lds
dec
xchg
and
fisttpl
pop
sub
inc
cwtl
add
dec
lret
fdivs
pop
imul
mov
call
sub
pop
mov
push
pop
lea
bnd
cmpl
pushf
mov
mov
rolb
xlat
imul
les
mov
fcmove
fcomi
aas
sub
addr16
int
mov
inc
jae
sbb
add
add
loopne
cli
mov
pop
dec
fsubrs
jnp
popf
add
lods
add
add
fldl
mov
jae
mov
jb
fildl
cmp
mov
scas
pop
add
jge
jns
cmc
xchg
lods
icebp
inc
sti
into
adc
fdivs
jbe
and
aaa
push
gs
mov
mov
hlt
lret
scas
icebp
inc
lods
xchg
sub
push
orl
hlt
das
int
cwtl
cmp
sub
mov
adc
fsts
push
pop
mov
mov
pop
call
ret
or
adc
dec
pushf
and
inc
sub
out
orl
mov
hlt
lds
jo
es
fldenv
mov
sbb
fdivs
xchg
jecxz
adc
cmp
cmpsl
mov
fwait
aas
inc
or
mov
add
fistpl
xchg
in
mov
pop
pop
mov
push
add
xor
sahf
adc
cmp
mov
jmp
push
xchg
sar
sub
lea
push
pusha
push
scas
push
adc
mov
and
xchg
neg
in
mov
or
in
loope
sbb
sub
das
inc
ja
rolb
mov
clc
sub
jno
sub
sbb
outsl
mov
mov
xor
lret
outsb
mov
push
jg
mov
add
push
add
or
mov
inc
push
cld
inc
pop
sti
cs
cli
pop
sub
xor
jecxz
or
mov
xchg
cld
push
xchg
movsb
sub
xor
push
inc
aad
xor
mov
mov
xor
arpl
pop
fs
or
shl
push
into
std
insl
dec
sbb
push
hlt
xor
dec
aas
outsb
popf
dec
inc
pop
stos
add
call
add
in
xchg
int
into
int3
xchg
stos
fisubrl
scas
sbb
cwtl
addr16
in
mov
inc
fnop
pop
in
into
mov
mov
loop
sub
add
rorb
xchg
mov
xchg
cmp
jno
sub
xchg
test
jge
mov
push
push
ljmp
outsl
arpl
push
xchg
xor
cmc
dec
rolb
adc
mov
test
push
test
pop
outsb
add
std
or
mov
out
cmp
sahf
cmp
inc
xchg
sub
aas
je
dec
or
stos
sbb
in
push
xor
lock
sbb
adc
jns
or
daa
mov
aad
stos
or
ss
jae
fstpl
aaa
mov
dec
adc
pop
fwait
enter
and
xor
mov
xchg
and
arpl
stos
ret
sub
fwait
scas
iret
idivl
ret
push
fs
test
aam
or
push
xor
imul
insb
cmpsb
loop
fstsw
aam
fsubp
test
mov
hlt
pop
stc
push
inc
inc
mov
psrld
mov
fcomps
aam
cmpsl
mov
sub
cmpsl
stos
pop
sbb
mov
arpl
pop
push
mov
jbe
xlat
jl
xchg
and
pop
inc
mov
mov
loopne
xchg
scas
pop
mov
jno
mov
cmp
mov
rolb
lods
dec
aaa
jle
inc
imul
sahf
inc
and
mov
mov
fsubrs
loope
add
add
addr16
inc
fdivrp
out
ja
or
pop
pop
in
ret
add
lods
add
add
mov
aam
mov
lea
mov
sub
fldt
mov
sub
ror
jns
jmp
add
fadds
fldcw
clc
iret
inc
dec
xchg
dec
fstpl
xchg
cmp
inc
inc
in
dec
pop
out
fmuls
fdivr
repnz
or
cmp
test
pushf
leave
mov
stos
xor
sbb
imul
lcall
or
or
xchg
push
xchg
mov
push
xchg
and
bound
out
int3
rcll
or
test
jl
push
test
imul
add
sub
ficomps
lcall
out
call
sub
pushf
fstpt
push
fisttpl
aas
inc
lcall
stc
xchg
test
outsb
mov
and
xor
cmp
call
daa
mov
pop
mov
sub
shrb
mov
mov
pop
fs
test
push
xor
fldt
sbb
xchg
cld
pop
or
test
mov
mov
dec
mov
mov
outsl
or
je
pop
jbe
mov
push
push
pop
jnp
lock
mov
sbb
sbbl
dec
or
push
aas
inc
inc
push
mov
into
sbb
es
xor
ret
test
sbb
push
icebp
clc
std
push
in
aas
and
jl
sub
sub
lock
jmp
mov
rolb
iret
adc
loope
or
push
mov
or
repz
cmp
fdivrl
push
fistpl
orl
xlat
fmul
cmp
jae
cld
jns
out
fwait
jmp
jl
mov
movsl
inc
outsb
cmp
shl
xor
aam
test
cmp
dec
adc
or
mov
rcrl
adc
fcmovnu
xchg
mov
movb
xchg
and
sub
sub
dec
and
movsl
mov
mov
rol
es
loop
add
mov
cmp
ret
dec
xchg
stos
in
stos
sbb
rclb
xchg
mov
decb
pop
push
shll
jne
test
xor
dec
or
mov
xor
je
jo
push
sbb
ljmp
outsb
mov
jbe
lret
loopne
jbe
ds
das
fidivl
loopne
add
push
mov
or
imulb
sbb
or
lahf
movsb
push
lret
imul
sub
pop
and
imul
and
cmp
imulb
lods
cmp
adc
xchg
stos
out
jl
cmp
add
dec
inc
pop
popa
xchg
inc
push
aaa
subb
or
push
jecxz
dec
idivb
cmp
adc
pop
int
xor
sub
dec
int
push
mov
popaw
les
divl
sar
test
mov
subb
cmp
push
div
ljmp
sub
mov
cwtl
dec
sub
dec
in
adc
imul
mov
cmpsb
mov
rcrl
pop
dec
and
pushf
fprem
and
push
xor
xchg
dec
insb
or
jge
hlt
adc
test
add
add
add
add
cltd
mov
xor
push
cs
data16
add
lods
add
add
popf
and
in
cli
ljmp
mov
cli
push
add
inc
sahf
enter
loope
mov
leave
fisubrl
xor
and
stos
jp
xor
mov
jbe
adc
es
pop
clc
test
mov
sub
xchg
mov
aad
cmp
loop
cmp
fstpt
pushf
scas
shrl
repz
fcompl
sub
xor
pop
fwait
sbb
lcall
sbb
xchg
mov
fs
and
push
fwait
enter
pop
xchg
orl
xchg
xchg
cli
fs
dec
insl
dec
and
xchg
xor
out
fwait
packsswb
jb
fsubrs
sti
hlt
mov
inc
mov
dec
sti
cmp
dec
out
and
mov
cmpsb
lret
mov
xlat
mov
jnp
pop
jns
fisubrs
repz
and
lret
pop
fidivs
out
mov
cli
pop
fadd
aad
movsw
jnp
les
xor
iret
sbb
popf
jp
paddsb
insb
cmpsl
sub
mov
fwait
push
cmp
sub
loope
cmc
sbb
aaa
bound
pusha
jl
icebp
mov
into
push
sub
test
out
and
rcrb
push
arpl
and
jb
fs
inc
push
lods
push
inc
dec
out
in
mov
and
iret
cmp
cmc
push
jnp
lds
sub
std
lods
jecxz
mov
pop
jb
mov
test
xorb
jno
cmpsb
cmp
pop
int3
stc
mov
out
ficoml
int
loop
lea
int
cmp
jmp
repnz
rcrl
mov
xchg
je
jno
sbb
xchg
sbb
xchg
or
je
pop
in
mov
add
int3
icebp
add
sub
inc
stos
push
jbe
loop
repz
xchg
sbb
lea
jns
jbe
movsb
pop
and
or
adc
cmp
mov
jne
lods
fisubrs
or
xor
xchg
push
js
or
mov
adc
and
sub
outsb
lods
repz
mov
push
dec
lahf
mov
mov
in
xchg
adc
test
outsl
mov
dec
sbb
sub
dec
cmp
push
lahf
shl
inc
clc
adc
imul
xor
cltd
outsb
push
push
jbe
mov
mov
dec
xor
popf
loop
inc
jns
or
ret
ret
test
test
and
xchg
mov
xor
jmp
daa
jge
jecxz
xor
push
int3
mov
add
andb
bound
lea
xchg
inc
std
lods
cmpl
iret
push
ds
dec
outsb
sub
jl
stos
add
inc
rclb
movsl
push
sub
mov
fstl
dec
loope
mov
out
gs
nop
xor
popa
fwait
das
loope
fstp
pop
pushf
mov
dec
jmp
dec
daa
out
mov
rcr
icebp
jo
out
negb
movl
xchg
test
push
loop
pop
mov
push
pop
xchg
sbb
mov
movb
daa
pop
loop
pop
cmp
sub
insl
pop
ja
lea
outsb
add
add
xor
cmp
loop
mov
lods
add
add
hlt
bound
dec
add
outsl
test
sub
bound
mov
cwtl
push
adc
adc
dec
adc
jno
cmp
fmuls
out
jno
and
sbb
inc
xor
shll
push
mov
es
iret
jp
jmp
dec
or
and
jae
icebp
gs
insb
push
test
adc
push
cltd
mov
sub
adc
clc
les
fcoms
xchg
push
mov
or
paddsb
jge
dec
int3
leave
lret
repz
sub
dec
in
adc
jae
scas
outsb
cmp
cmp
mov
sub
xchg
in
jg
xchg
cmp
adc
push
fsubs
ret
inc
xchg
imul
test
lods
arpl
mov
popa
mov
iret
cmc
imul
test
jmp
clc
movsl
xor
jmp
xchg
inc
pop
mov
or
push
pop
ret
jge
fists
leave
iret
lret
or
inc
scas
xchg
mov
into
jge
faddl
into
xchg
sbb
inc
push
mov
sub
jmp
or
xor
aad
xchg
sti
aam
push
mov
dec
das
inc
aaa
add
xchg
or
cwtl
or
xor
mov
aam
test
mov
and
and
jmp
add
push
xor
clc
push
xchg
cli
mov
jge
sub
std
pop
test
xor
not
test
push
push
add
xcrypt-cfb
mov
push
mov
push
push
xor
jp
and
sub
jbe
popa
mov
gs
daa
push
lcall
push
push
mov
js
inc
insl
aad
xchg
sub
push
push
xor
sbb
xor
inc
pop
ret
and
push
testl
lds
xchg
lret
in
sahf
adc
lods
mov
or
clc
imul
or
or
mov
add
sbb
push
das
inc
rorb
cwtl
cltd
adc
sub
inc
sbbl
mov
lret
mov
jb
test
pop
out
and
push
and
pop
sub
aad
idivl
sub
xchg
add
int3
jmp
mov
fadds
testl
mov
fstpt
into
push
xchg
xor
adc
inc
aas
jmp
xor
cmpsb
cwtl
jge
jo
mov
dec
gs
mov
and
mov
cmp
sbb
mov
mov
xchg
and
cmp
jne
mov
shll
sub
icebp
mov
cmpb
mov
pop
std
frstor
std
adc
or
out
xchg
clc
out
mov
fcom
bound
cmc
add
mov
push
pushf
cmp
pop
dec
add
rolb
aas
sbb
mov
inc
xor
pop
btc
mov
mov
add
jecxz
repz
stos
and
aam
sub
add
inc
cs
call
cli
cmpsb
mov
sbb
xor
inc
inc
sub
mov
js
pop
push
mov
or
or
sbb
jmp
adc
mov
mov
jmp
mov
shll
jnp
or
out
scas
lock
fwait
add
add
dec
push
ret
mov
jge
cmp
in
and
xchg
shrb
add
lea
mov
mov
push
xchg
fldt
add
leave
popa
loopne
imul
or
cmp
outsb
aaa
mov
xor
lds
and
movsb
fistps
xor
aas
addr16
movsb
push
inc
gs
push
push
mov
faddp
fisubl
lahf
xor
adc
jle
jmp
sbb
push
xchg
sahf
jecxz
int3
js
sbb
js,pn
cmp
mov
outsl
fadds
stos
mov
stos
clc
js
xorl
ret
cmpsl
dec
xchg
in
mov
ljmp
das
popf
repz
sbb
xchg
stos
mov
imul
pop
ss
push
mov
test
das
js
andb
add
movsb
adc
call
insb
push
pop
or
test
jge
test
data16
dec
push
pmaxsw
mov
scas
sti
mov
pop
xlat
cmpsl
and
push
aam
inc
test
push
adc
lods
aam
sarb
sarb
push
sbb
clc
inc
mov
lahf
mov
xchg
test
pop
icebp
ret
int3
mov
cs
push
mov
notb
daa
repnz
cmp
mov
lds
and
mov
lret
scas
push
cmp
arpl
ja
fsubs
dec
mov
fisubrl
jo
sti
in
jne
in
push
adc
out
movsl
es
mov
mov
adc
lret
je
jo
mov
cmpsl
sahf
mov
push
sub
pusha
popf
int3
sbb
scas
add
vhaddps
popf
pop
sbb
enter
adc
pop
add
outsl
mov
test
lea
push
hlt
mov
or
mov
enter
aas
jmp
in
lods
pop
mov
stos
in
dec
lea
dec
inc
ja
shlb
mov
pushf
sarb
lea
pusha
out
adc
xchg
mov
jns
jb
wbinvd
cltd
test
jo
and
aad
aaa
inc
pop
stc
sbb
adc
mov
xor
hlt
xor
pusha
outsb
rclb
push
mov
movsb
fwait
rol
in
sbb
adc
mov
gs
pop
movb
inc
es
xor
loope
jmp
and
cmp
scas
jbe
popa
inc
repz
out
adc
out
and
je
cmp
mov
call
cltd
fdiv
inc
cmp
rcr
insl
xchg
scas
lahf
cmpsb
or
or
push
xor
cmpsb
jnp
popa
sahf
insb
jge
aad
divl
dec
sar
mov
in
cmp
ljmp
or
pop
test
clc
icebp
jbe
ljmp
dec
adc
jmp
sahf
sbb
stos
lretw
inc
outsl
mov
repz
arpl
popa
dec
mov
adc
inc
in
test
shlb
int3
arpl
cltd
ficoms
pop
rcll
or
arpl
decb
add
push
dec
js
lods
fcmove
add
cwtl
mov
sub
pop
jmp
pop
loope
ss
pop
out
test
xchg
jmp
add
fiaddl
addr16
cltd
push
xchg
add
cmp
in
fistpll
dec
mul
jne
mov
add
and
lcall
hlt
stos
add
xlat
sub
push
and
out
xor
dec
fistpl
js
inc
gs
movsb
cltd
push
mov
clc
sub
add
add
in
jmp
lahf
jle
stos
xchg
insl
scas
add
lods
add
add
cmpsl
mov
dec
xor
xchg
sar
test
mov
mov
cld
jae
loopne
lock
jo
mov
mov
pop
lret
or
out
lahf
iret
movsb
and
cltd
aad
call
imul
cmp
bound
cld
jmp
push
popa
inc
aam
push
sahf
mov
daa
jb
rolb
pop
jae
mov
jecxz
sti
sub
mov
popa
cli
push
sub
sarl
nop
shrb
pop
test
mov
xchg
mov
pop
mov
xor
int
gs
arpl
out
push
add
push
aas
pop
mov
add
mov
mov
mov
mov
mov
ret
clc
jbe
loop
out
mov
ja
jg
mov
pop
bswap
cmp
ret
scas
pop
cmc
icebp
jmp
mov
fwait
pop
rorl
leave
mov
add
dec
daa
mov
cmpsl
nop
outsl
test
add
dec
test
jnp
movsl
loop
gs
daa
mov
dec
adcb
int
das
imul
or
enter
xchg
push
ret
jno
ljmp
sahf
pop
movsl
int
jae
xlat
call
popa
xchg
in
xchg
mov
leave
rcrl
and
movsl
sbb
nop
dec
adc
loope
xlat
rcrb
sbb
pushf
loop
std
inc
addl
push
xor
add
cmpsb
adc
dec
fnstcw
push
sub
pop
mov
mov
xor
sahf
jns
lcall
ret
cmp
sbb
mov
push
cltd
xor
xlat
add
pop
mov
imul
bound
mov
ret
add
inc
jmp
jecxz
pop
inc
push
jl
dec
jb
lret
cmpsb
ret
and
ficompl
mov
mov
call
lock
ljmp
cmp
iret
jl
xchg
adc
xor
enter
orl
scas
cmp
mov
lea
mov
lcall
push
bound
xchg
nop
push
xchg
mov
stc
test
inc
movsl
push
es
mov
daa
and
jg
and
xchg
adc
rcr
cmp
sti
adcl
dec
or
fs
mov
call
mov
cmpsb
pop
pop
gs
push
jle
loope
lds
adc
movsb
lret
pop
out
enter
dec
mov
fs
or
addb
fiadds
cli
pop
or
adc
fildl
push
loopne
cmp
xchg
jo
jp
jge
std
repz
loope
sbb
sub
pushf
and
pop
adc
and
dec
pop
sti
pop
cmp
in
cmp
mov
rcrl
or
ljmp
ds
dec
xchg
mov
out
mov
jmp
stos
push
dec
mov
mov
jecxz
pop
jb
negl
imul
imul
jno
lds
add
mov
dec
pop
scas
pop
cmc
repz
outsl
jle
and
sub
leave
inc
or
fiaddl
add
dec
cli
mov
decl
mov
add
sbb
add
andl
das
ret
pop
jge
ja
jbe
jne
int
pushf
pop
jg
test
subl
out
and
jmp
sub
leave
or
mov
push
push
or
mov
mov
into
sbb
jbe
pop
push
push
lret
add
or
mov
xchg
mov
inc
subb
outsl
cs
fs
cltd
xchg
ja
mov
daa
xchg
pusha
jmp
shll
push
test
jne
pop
pushf
decb
add
mov
jmp
jg
gs
ret
addr16
adc
sub
scas
iret
or
push
in
nop
stos
adc
addr16
out
jmp
pop
scas
sub
clc
movsb
data16
pusha
imul
xchg
push
movsb
aad
cmpsb
lret
push
cltd
fiadds
cld
sub
and
xor
jmp
in
mov
jo
fsub
stos
pop
adc
or
shrb
decl
or
hlt
aad
sub
fs
or
int3
cmp
stos
sbb
and
les
dec
in
push
rcll
push
pop
jbe
xchg
and
aas
arpl
sub
lret
call
pop
add
pop
dec
daa
mov
or
lcall
sbb
or
movsl
ret
test
adc
add
outsb
inc
mov
cld
sbb
outsl
pop
push
ljmp
stc
test
adc
xchg
insb
ljmp
jnp
pop
inc
je
add
scas
xchg
clc
imul
testb
dec
test
scas
cld
in
shll
xchg
dec
adc
mov
or
inc
into
fsubrs
out
pop
lods
add
scas
pop
lret
andb
push
dec
xlat
mov
pop
mov
jno
filds
jno
dec
loopne
cmp
cld
add
and
mov
fstl
xchg
mov
das
sbb
dec
push
jne
pusha
inc
scas
jp
mov
cmpsb
repz
jbe
les
ss
push
or
rorb
imul
push
int
lret
lods
rorl
dec
inc
pop
cwtl
ffree
sbbb
ret
fdivrs
push
test
out
pusha
add
ja
jmp
jecxz
jb
mov
push
fsubl
push
jns
pop
cwtl
mov
mov
xor
mov
xor
adc
and
jns
fnstenv
movsl
mov
ds
mov
jp
rorb
aas
mov
adc
nop
dec
fucomip
mov
inc
and
mov
mov
lds
scas
jno
rcl
int3
jmp
nop
xchg
fwait
push
mov
mov
outsl
jb
out
lcall
xchg
mov
adc
jns
jmp
pop
int
mov
inc
clc
inc
lods
addr16
test
push
out
mov
xchg
ret
in
pop
sub
inc
mov
cld
add
jb
arpl
pusha
inc
mov
pop
xchg
adc
or
std
push
repz
dec
cmc
cmp
cmp
arpl
adc
out
scas
and
je
mov
loope
arpl
xchg
xchg
andl
add
pop
inc
dec
pop
jnp
call
add
add
add
add
lret
xorb
icebp
lret
aam
imul
cwtl
ret
mov
add
mov
mov
and
clc
mov
adc
into
sub
adc
std
add
call
rcll
xchg
push
xor
push
xlat
std
mov
popa
sbb
cli
xchg
ret
popa
unpckhps
xchg
pop
jmp
sar
jo
add
bound
lea
pop
xchg
js
and
xchg
add
mov
scas
jecxz
nop
data16
daa
mov
sub
push
pop
xlat
out
adc
shl
sbb
mov
and
nop
rcrl
jns
mov
push
movsl
xlat
ds
call
and
sbb
aaa
and
sub
jmp
push
add
sub
arpl
xchg
rclb
aaa
pop
out
mov
mov
stos
rclb
push
sbb
jge
shl
and
xchg
inc
dec
jae
inc
insb
push
sub
cwtl
iret
jecxz
lea
lret
pop
sahf
add
adc
push
jl
xchg
int
mov
mov
out
iret
cwtl
mov
mov
scas
js
dec
divl
inc
mov
call
scas
mov
cmc
icebp
lods
int
fsubs
mov
int
mov
or
jbe
imul
adcb
push
ja
sbb
leave
push
std
je
outsl
add
xchg
mov
or
sbb
or
jbe
cmc
je
outsl
imul
js
xchg
popf
sbb
jmp
imul
arpl
mov
js
push
adc
cmp
mov
xchg
scas
inc
inc
xchg
or
push
or
or
cmp
lods
ljmp
jno
mov
lahf
or
xor
dec
mov
fsts
lods
cmp
push
xchg
inc
shlb
fiaddl
inc
mov
jbe
mov
push
dec
pop
and
cltd
jg
pop
mov
lock
out
mov
nop
out
scas
jo
xor
and
rcl
pop
repnz
xor
and
jecxz
in
scas
cmpsl
imul
in
mov
push
dec
and
sbb
pop
jecxz
jns
mov
pop
clc
and
push
push
nop
dec
in
xor
js
cmpsl
xor
pop
xchg
push
out
das
test
stos
xlat
nop
jmp
sahf
mov
and
or
aaa
lods
adc
mov
lea
add
lea
imul
icebp
ljmp
jns
das
pusha
loopne
cmp
arpl
push
mov
loope
xor
in
push
mov
ljmp
add
jne
pushf
or
inc
jl
jl
dec
or
inc
sbb
dec
cmp
cmpsl
jae,pt
or
add
sbb
rcr
dec
popa
ret
jb
sub
push
xchg
pop
and
xchg
test
mov
leave
add
add
loopne
push
fistpll
mov
idivl
adcl
push
les
inc
mov
and
xchg
sub
adc
inc
adc
cmpsl
fldl
mov
cmp
addr16
dec
stos
leave
imul
in
insb
and
negl
push
dec
ljmp
lods
dec
pop
xor
and
pop
inc
ds
out
add
xchg
aaa
jne
and
lret
add
sbb
add
in
jp
jp
in
sarl
jmp
add
pop
or
daa
xor
cli
lea
fcompl
mov
pop
mov
xchg
sti
push
lds
imul
aam
lods
and
sarl
xor
inc
or
mov
lret
sahf
int
dec
push
mov
fwait
addr16
mov
insl
loopne
cmc
inc
pop
imul
shrb
fiaddl
pop
sbb
ds
ja
mov
push
sub
das
cltd
mov
mov
enter
das
adc
sub
xor
jecxz
daa
aaa
lds
into
fs
mov
sub
jae
rorl
xchg
popf
cltd
mov
pop
arpl
or
and
push
mov
pop
or
mov
jg
jbe
add
scas
push
cmpsl
mov
add
xor
andb
mov
dec
flds
orl
jp
xchg
rcrl
rcrb
pop
mov
inc
xchg
lods
add
or
in
orl
gs
jmp
adc
clc
push
pop
xchg
in
call
mov
dec
or
movsb
cmp
insb
imul
shlb
je
loop
sub
lds
pop
jmp
cli
mulb
cs
and
cmp
gs
ja
xor
mov
aas
out
dec
stos
jne
insl
repz
and
fisubs
gs
add
mov
daa
pop
jnp
popfw
fucomp
dec
sbb
shrl
and
dec
pop
aas
add
call
mov
dec
movsl
xor
dec
mov
fidivl
and
mov
xor
jg
or
sahf
stos
add
in
inc
lret
hlt
dec
sub
stc
outsb
jmp
jge
mov
popf
lcall
xchg
cltd
sub
xor
or
fsubs
out
sbb
les
dec
stos
test
aad
jno
leave
fdivs
lahf
jae
aas
out
xchg
outsb
add
cmp
dec
arpl
clc
lods
and
dec
pop
test
pop
js
xor
mov
dec
pop
sbb
hlt
lret
cmp
jno
jnp
int
inc
vrsqrtps
ja
data16
xor
cwtl
int
call
insb
jp
adc
stos
or
mov
inc
aas
xor
pop
fwait
adc
jo
call
cmp
jne
scas
xchg
jns
in
in
or
stc
add
cmpsl
fcomps
aad
ret
sbb
mov
fmuls
mov
pop
sub
test
sbb
cmp
pop
jae
fnstsw
jge
sbb
fs
jo
cmp
out
xchg
aam
cwtl
push
xchg
jecxz
cmp
nop
xor
mov
fnsave
fiadds
jg
cmc
mov
adc
jne
or
dec
cs
mov
js
ret
push
aad
pusha
xchg
call
rcrb
stc
cs
dec
lret
test
push
mov
and
stos
addr16
add
inc
lods
aam
stos
insl
sbbl
loopne
je
jbe,pn
mov
add
xchg
dec
fcoms
mov
push
mov
cmp
adc
imul
inc
adc
scas
call
idivl
add
add
add
imul
lahf
push
jl
dec
lods
cmp
and
add
jle
mov
fwait
jbe
mov
and
or
jp
cmpsb
and
add
inc
xchg
add
push
inc
push
test
dec
testl
xchg
cmp
add
or
sub
jns
mov
lods
das
jnp
call
test
outsb
mov
inc
fiaddl
adc
stos
lret
leave
ja
dec
fld
lret
inc
cltd
les
dec
mov
sbbl
outsl
stc
push
mov
stc
pop
scas
mov
out
sub
add
dec
es
mov
xor
adc
sbb
pop
mov
push
xchg
icebp
popa
enter
outsb
cmp
fcmovb
mov
enter
inc
in
mov
std
stc
and
push
hlt
adc
fsubl
iret
xor
stos
sahf
stos
aaa
in
test
aaa
pop
xchg
xchg
cmp
fbstp
arpl
test
inc
xor
add
push
cmp
or
test
sbb
xchg
mov
cmp
dec
add
lock
xchg
nop
std
or
and
inc
shll
mov
ljmp
inc
imul
stos
inc
cmpsb
nop
xor
mov
inc
cli
popa
loopne
rcl
in
ret
js
dec
mov
sbb
prefetchw
sbb
or
or
sti
adcl
lea
es
sub
mov
sbb
xchg
jmp
xchg
outsl
xor
mov
jb
ss
xchg
dec
not
js
push
jno
rcrl
hlt
in
mov
nop
shr
out
xchg
mov
ret
pop
sub
fwait
scas
insl
inc
jo
dec
pop
xchg
mov
test
gs
lret
mov
out
push
add
xor
rcl
mov
popa
andl
sbb
loop
scas
popf
mov
imul
into
cmp
sub
mov
loop
into
push
jecxz
icebp
lods
push
xchg
inc
lret
gs
jno
cmp
sbb
je
xchg
fsubrl
out
jae
dec
ficoms
pop
mov
mov
or
add
and
clc
jg
out
mov
imul
mov
jmp
stc
mov
push
inc
pop
dec
popa
pushf
les
enter
stc
cltd
fisubrl
xchg
push
call
mov
mov
mov
js
aas
and
sub
notb
js
stos
pop
jmp
ja
sub
pop
scas
out
dec
addl
lods
loopne
sbb
pushf
cmpsb
imul
outsl
lret
jnp
ret
mov
xchg
jno
push
mov
outsl
jg
ret
int3
out
les
xor
nop
cld
fadds
stos
addr16
or
scas
mov
stc
fmull
cmp
push
pop
sbb
mov
jmp
push
out
shrl
sub
loope
xor
lds
lcall
xchg
test
jmp
inc
xchg
xor
lret
mov
jle
pushf
repz
adc
jnp
lcall
ret
mov
xor
cmp
test
aas
loopne
leave
outsl
gs
filds
repnz
xor
jae
icebp
pop
xchg
and
sbb
movsb
ds
add
add
add
add
out
mov
cmp
push
mov
add
sarb
adc
add
movsb
and
push
cmp
cmp
mov
aad
xorb
mov
insl
sahf
push
pop
cmpsl
cwtl
div
dec
loopne
sub
clc
ret
mov
fidivs
mov
ljmp
sub
loop
adc
pop
jecxz
pop
enter
adc
je
outsb
fsubs
lods
mov
mov
cmp
jnp,pt
nop
ss
mov
cmp
cld
icebp
enter
adc
pop
jl
jmp
clc
pop
aas
cltd
adc
and
xor
std
dec
xor
xchg
push
xor
xchg
sar
inc
jnp
sbb
dec
sbb
shl
dec
dec
pushl
idivl
mov
in
dec
cmpsb
inc
pop
mov
imul
jo
lods
add
pop
fwait
inc
dec
sar
xor
int3
lds
add
xor
out
mov
lcall
iret
jecxz
cmpsl
xchg
xor
fdivl
push
bound
sbb
adc
sbb
mov
inc
add
xor
mov
xor
repz
cmpsl
and
push
jge
es
add
add
xor
std
sbb
in
ds
pop
or
addb
stos
inc
jecxz
sbb
xlat
mov
cmp
fistl
lahf
cwtl
and
fsubl
sbb
pop
xchg
out
js
hlt
pop
cltd
aas
sbb
jno
jbe
cmp
cmp
out
jp
in
xchg
or
sbb
adc
sahf
andb
out
inc
xor
orb
sub
insl
idivl
or
fwait
dec
rolb
lock
call
xchg
je
mov
push
jp
icebp
shrl
jno
in
test
repz
loopne
sahf
jle
sbb
cmpsl
push
cmovnp
lds
in
insb
push
add
imull
fldenv
adc
xor
jbe
cmpsb
cli
imul
insb
fldcw
pop
cmpsl
mov
paddw
mov
sbb
xorl
loope
mov
xor
ljmp
neg
lods
jmp
les
xlat
sbb
mov
mov
test
cltd
pushf
sahf
cmp
addr16
mov
and
clc
gs
push
xor
out
ds
cltd
jnp
ss
mov
cmp
pop
aas
sub
shlb
dec
fwait
add
cmp
adc
mov
or
mov
cli
pop
jmp
cwtl
pop
jle
push
sbb
imul
repz
stos
add
add
fldenv
es
cmp
cmp
mov
cmp
mov
jns
hlt
mov
pop
sbb
leave
std
loope
sbb
adcb
das
or
lret
rep
ret
in
sahf
pop
lds
inc
inc
sbb
xor
jge
jle
xchg
call
jmp
xchg
fdivrl
ficoml
test
outsl
bound
pop
jl
xchg
push
pop
cmp
or
adc
or
push
add
push
out
or
scas
insl
xchg
lcall
insl
xchg
mov
push
inc
rol
pushf
pop
stos
mov
inc
adc
roll
add
mov
mov
xor
lds
add
mov
cltd
jae
cli
cmp
dec
lahf
mov
cmc
lret
inc
imul
popa
mov
inc
mov
cmpsl
or
jne
mov
mov
mov
loopne
test
es
stos
out
inc
mov
mov
dec
inc
push
andb
popf
stos
mov
or
bound
aaa
xchg
mov
into
or
outsb
pop
xorb
movsl
outsb
and
mov
pop
jnp
mov
or
out
out
es
sub
cmc
frstor
mov
scas
lock
mov
mov
ss
sbb
pop
mov
out
aam
push
mov
dec
mov
loopne
dec
mov
lock
push
fs
cmp
pop
lahf
roll
dec
mov
cmp
xchg
das
and
and
cld
imul
mov
cmp
leave
loope,pn
mov
mov
mov
mov
addr16
popf
cmp
stc
lods
pop
ret
sub
test
data16
sti
push
into
in
iret
mov
lret
into
fwait
stos
test
rcrb
xor
and
sbb
pop
lds
and
pop
mov
sub
fsubrp
mov
popf
add
jnp
mov
insl
or
pushl
pop
xchg
fisubl
adc
std
mov
js
in
add
jbe
sahf
ret
insl
popa
fistpll
fisttpll
and
xor
pop
lods
mov
pop
insb
dec
cli
mov
lahf
ret
mov
or
sbb
mov
jg
pop
inc
adc
adc
testb
jb
push
fs
xor
adc
fisttpl
xchg
cltd
xor
adc
js
sub
push
inc
inc
int3
jno
fldl
std
sub
dec
lea
fs
pop
mov
add
cs
dec
xchg
repnz
rorb
mov
int
jb
xorb
adc
fs
push
and
cmp
cmc
mov
jp
scas
or
roll
xor
je
fsubrs
sub
out
mov
insb
xor
or
mov
insl
in
addl
push
aaa
jle
dec
sbb
dec
lcall
int
xorb
arpl
fstps
pop
adc
std
push
in
xchg
xchg
lods
fidivl
fildll
in
jnp
out
push
xchg
xchg
clc
and
adcb
xlat
push
mov
aaa
dec
out
cmp
dec
pop
mov
cmp
cmp
inc
cs
nop
lahf
stc
loope
dec
ljmp
lock
xchg
jmp
shlb
addr16
xchg
fcoml
bnd
pop
sub
filds
dec
cmpsb
add
inc
jmp
xchg
addr16
pop
insb
cltd
jge
mov
mov
addr16
mov
cmc
out
dec
cmp
mov
cmovne
andb
int3
jnp
hlt
jp
sub
sarl
mov
loopne
icebp
xchg
inc
ret
adc
adc
pusha
popa
jp
roll
and
call
or
sbb
fwait
mov
push
pushf
and
pop
cmc
jbe
mov
mov
shrb
sub
pop
mov
add
add
cmp
jnp
dec
pop
out
dec
pop
leave
sub
add
lods
add
add
xchg
or
mov
mov
aam
jno
and
mov
out
test
in
loope
test
outsb
jl
mov
bound
cld
xchg
iret
mov
mov
arpl
outsl
popa
daa
mov
insb
data16
or
xchg
or
fs
std
mov
ljmp
leave
outsl
jne
or
push
xchg
sbb
lods
adc
xchg
cli
mov
push
add
pop
jb
or
mov
sbb
pop
and
mov
xor
popa
loopne
mov
adc
mov
cltd
jl
int3
add
test
ret
popf
xchg
lea
insb
ds
mov
xor
stos
sub
xchg
pushf
and
cli
adcb
in
in
push
in
jle
enter
jg
and
enter
mov
int
sahf
push
gs
subb
mov
repz
loopne
push
ret
sbb
mov
mov
imul
add
outsb
enter
lock
adc
sahf
and
push
into
imul
xorl
jnp
push
add
mov
sbb
jmp
sub
add
mov
into
int3
xor
cmp
mov
or
fwait
lahf
sub
scas
push
fimull
das
pop
inc
lods
or
add
push
mov
lret
popa
push
jecxz
in
adcl
jg
mov
ljmp
insb
cwtl
mov
inc
xchg
mov
add
test
enter
fwait
jle
jg
das
push
lret
outsb
dec
pop
cmc
sbb
mov
dec
das
cltd
ficoms
mov
or
in
adc
or
cmpsb
cwtl
pop
adc
jbe
inc
jge
push
inc
out
pop
xchg
lcall
stc
shll
jno
pop
xor
aas
jecxz
and
jmp
cmp
add
sub
bound
cmp
cmp
mov
das
push
lahf
jns
arpl
enter
testb
ljmp
push
scas
or
mov
or
xchg
stc
pop
les
inc
dec
in
test
push
mov
xchg
inc
in
ret
adc
pop
sub
adc
cmpsl
cmc
dec
jae
and
or
fwait
stos
mov
stos
mov
repz
out
add
fstl
mov
dec
mov
test
aas
aam
lret
push
mov
sbb
pextrw
pushf
jo
or
jns
xchg
add
mov
and
pop
rcrb
outsl
dec
push
fwait
imul
adc
mov
filds
or
pushf
and
in
inc
jne
scas
cld
into
decb
ficomps
sbb
jl
jno
push
xor
sbb
sbb
enter
cli
jle
add
pushf
ds
inc
rolb
aam
outsl
std
jmp
add
jne
fdivp
adc
addr16
mov
out
andb
sarl
mov
shll
loope
mov
mov
shll
sbb
sti
mov
movsl
mov
rcll
mov
dec
dec
movsbl
dec
mov
imul
clc
out
inc
out
cmpsb
jae
aad
clc
sbb
or
xchg
cmp
leave
pop
and
xor
add
jmp
or
scas
jmp
popa
mov
or
rcl
int3
add
lods
add
add
fbld
pop
cmp
dec
and
arpl
cmp
jecxz
jg
push
icebp
sti
cmp
cltd
sahf
icebp
mov
imul
imulb
jl
cmpsb
xchg
movsb
xor
mov
and
ds
je
out
fs
lea
lret
rol
inc
adc
mov
mov
imul
mov
lods
inc
cmc
inc
push
and
pushf
insl
movl
lret
sub
mov
cs
or
dec
and
mov
in
cmc
pop
aaa
and
inc
inc
mov
cld
mov
add
fildll
cmp
dec
or
pop
in
mov
outsb
jno
lcall
or
push
je
lods
sbb
pop
push
int
test
fmull
idivb
mov
mov
xor
in
aaa
pushf
insb
shlb
xchg
jle
and
shll
cmc
pop
fiaddl
test
mov
addb
cs
jnp
pushf
ss
les
dec
aaa
out
jbe,pt
ja
jnp
ret
mov
adc
in
mov
cs
mov
jno
repnz
dec
imul
mov
inc
xchg
sbb
xchg
test
or
pop
adc
arpl
sbb
xor
inc
data16
sti
cld
pop
out
jns
xchg
cmp
in
cmpsb
mov
xchg
sbb
xchg
int3
add
jl
arpl
xchg
sbb
cmpsb
in
push
inc
mov
mov
pop
mov
sbb
push
push
and
jecxz
pop
lods
scas
loope
jnp
mov
mov
in
in
dec
int3
mov
pop
les
jmp
add
xchg
pop
test
arpl
push
es
and
xor
cwtl
xor
lahf
or
fdivs
and
adc
lods
out
cmpb
movsb
enter
inc
pop
subl
inc
mov
call
mov
mov
pop
sbb
insb
insl
cmp
or
inc
ja
gs
sbb
cli
jge
movsb
lret
cmpsb
cmp
rolb
mov
push
cmp
mov
in
jns
mov
adc
inc
jno
or
into
push
push
adc
jmp
adc
jne
xchg
push
imul
adc
in
into
leave
outsb
jg
mov
pop
test
test
movsl
in
out
scas
adc
push
arpl
adc
jmp
inc
and
ret
iret
xchg
mov
pop
push
xchg
jbe
popw
icebp
pop
push
mov
sbb
in
scas
imul
mov
mov
xchg
lahf
loop
imul
xchg
lahf
sub
fdivrl
push
lock
jg
and
jl
sbb
or
mov
mov
aad
das
mov
pop
mov
cmp
adc
add
lret
pushf
pop
dec
push
mov
fcmovnbe
in
jmp
lahf
or
cmp
xchg
cmp
fidivs
xor
mov
mov
xchg
xchg
test
js
idivb
and
mov
fs
cltd
ljmp
and
ljmp
fnstenv
fsts
nop
jbe
dec
jle
roll
add
in
test
push
cld
mov
adc
add
fs
mov
sub
aaa
insb
jo
push
jp
cld
stos
pop
mov
stos
int
in
das
gs
pushf
sbb
andl
test
stos
mov
pusha
test
jecxz
fldt
and
cmp
icebp
out
sbbl
scas
mov
movntps
dec
or
xchg
arpl
and
filds
lea
lcall
adc
mov
aam
scas
inc
bound
mov
mov
aam
mov
cmpsb
movsl
jecxz
dec
jb
mov
sar
es
inc
aam
inc
xor
popa
cmp
cltd
inc
or
pop
in
and
dec
stc
xor
adc
fdivl
push
push
ret
fcomi
mov
imul
cmp
aaa
cmp
inc
or
mov
pop
jae
aad
outsl
xor
mov
test
repz
movups
sub
sahf
jg
movsb
notl
leave
mov
js
xchg
xchg
sub
mov
or
xchg
and
jno
inc
cmpsb
lret
lods
daa
fisubs
ss
dec
pop
sub
xchg
mov
cmp
fcmove
cmp
dec
popa
mov
in
pop
out
sbb
fisubrl
sub
jmp
mov
imulb
jne
sub
cmp
roll
dec
sbb
push
lcall
xchg
je
jo
mov
sub
and
xor
out
ds
pop
stc
pop
lds
sub
push
inc
gs
jl
and
inc
aam
cmp
jp
jecxz
xor
pop
lods
mov
sbb
cmpsb
out
clc
jae
cmp
fimuls
jo
add
mov
dec
push
mov
adcb
mov
xchg
out
sbb
xor
or
out
stc
idivl
jl
clc
jns
lahf
inc
lods
or
les
mov
fildl
push
sub
lcall
inc
cmp
cmp
ja
fwait
jp
cltd
xchg
ret
sbb
fldenv
outsb
xchg
cmp
dec
push
test
xor
pop
jg
adc
je
into
or
pop
popa
addr16
xchg
cmp
repz
add
pop
dec
dec
sbb
stos
clc
push
imul
xor
cwtl
icebp
adc
out
cmpsl
mov
adc
loop
fnstenv
cmp
into
add
repz
or
xchg
mov
orb
test
lea
mov
jae
scas
add
je
arpl
lock
push
outsb
jnp
sbb
aam
icebp
push
cmp
call
jg
sub
xchg
sub
inc
mov
jle
add
jl
dec
das
jmp
insb
mov
je
push
xchg
pop
test
in
shll
insb
jno
cmp
pop
xchg
inc
push
rolb
pop
aad
or
mov
push
repnz
cmc
xchg
add
out
addr16
xchg
and
dec
movsl
or
inc
out
inc
push
scas
movsb
cli
ja
adc
xlat
inc
lcall
aam
sub
and
ljmp
pcmpgtw
fucomi
aas
les
jecxz
sarl
popa
orb
cld
mov
ja
lods
shll
fistps
pop
test
add
pop
push
leave
popf
lret
popf
pop
xlat
loope
fs
lahf
cmp
aam
add
push
aaa
in
cs
fidivs
int3
mov
adc
dec
pop
inc
jb
mov
or
lret
cmp
mov
ret
add
dec
fisubrl
lret
enter
mov
stos
sub
dec
cmp
scas
cld
mov
mov
add
lea
popf
and
mov
push
sbb
call
dec
cmc
popa
cmpsb
in
stc
mov
loope
xor
ss
add
xor
xchg
add
dec
shrl
pop
jp
les
cmp
mov
addr16
aad
pop
arpl
rcrb
testl
sub
jle
push
push
push
movsb
dec
cmp
lret
shll
imul
and
sub
adc
or
fldt
jp
or
in
mov
inc
push
and
adc
sub
sub
fidivs
dec
jae
outsw
lods
ret
cmp
out
mov
rcrl
sub
fldcw
test
mull
sbb
dec
cmp
aam
or
ss
fimuls
aad
mov
loopne
out
xor
dec
push
inc
push
and
bound
add
shrb
xchg
xchg
jmp
xchg
fwait
mov
das
cwtl
inc
mov
leave
xchg
mov
ljmp
nop
faddl
fmuls
les
incb
shrb
stc
lods
sub
rcrl
out
xchg
mov
pop
int
add
jg
mov
std
mov
sbb
lea
xchg
jecxz
cmpsb
mov
jb
push
mov
sbb
sbb
xchg
lahf
fstl
xchg
cmpsl
add
in
lret
adc
in
dec
cs
mov
andl
mov
jae
jl
pop
pop
lods
cmpsl
lods
test
push
out
cs
test
inc
ficomps
hlt
cmp
insb
stos
sub
lret
lahf
xlat
mov
fndisi(8087
movsb
inc
outsl
adc
movsb
pop
fs
andps
pop
jbe
jmp
cld
ret
mov
cwtl
mov
out
sub
cmp
in
rep
pop
movsl
loop
in
nop
push
xchg
push
gs
sbb
add
sub
insl
mov
scas
dec
out
inc
add
or
jbe
adc
je
jb
xor
cmpsl
pop
stos
shrl
stos
pusha
addb
xchg
jp
cmpsl
pop
push
sub
and
pop
imul
bound
add
xor
mov
or
das
or
xchg
fstpl
mov
popa
inc
or
out
push
dec
insb
adc
popl
dec
pop
cmp
inc
jae
xor
xor
mov
jge
loope
xchg
scas
data16
fistpll
lret
inc
add
int3
dec
dec
loopne
cmc
xor
pop
popl
cli
jns
fs
push
dec
adc
mov
js
in
cmp
push
cwtl
mov
addr16
sarl
adc
adc
inc
pusha
jecxz
jb
sub
fdivs
mov
scas
pop
push
pop
ret
mov
and
jle
es
cmpsl
fisttpll
inc
movsl
scas
dec
jmp
and
enter
dec
and
pop
push
imul
inc
adc
push
cwtl
fsts
ret
xor
jp
xor
rcrl
mov
out
jle
add
add
call
pop
out
dec
pop
popa
sub
lcall
add
add
jae
daa
sub
test
or
inc
add
cmp
andl
dec
or
mov
jnp
pop
fistpl
inc
test
mov
popa
cmpsl
outsl
sbb
pop
cmp
jp
out
mov
pop
call
push
cltd
pop
push
out
lret
hlt
icebp
xlat
loop
sarb
outsl
mul
leave
loop
insb
and
xlat
xchg
aad
mov
fisubrl
or
enter
or
sub
add
xchg
pop
aad
arpl
pop
or
rcrb
out
movb
icebp
rolb
out
lea
cmpsb
adc
dec
xchg
aas
dec
enter
loope
repz
xchg
pop
dec
loopne
std
out
adc
dec
in
shlb
and
dec
mov
inc
xorl
gs
in
jne
fs
test
pop
das
xchg
enter
jb
mov
imull
sbbb
mov
je
dec
lds
dec
push
roll
mov
stc
lds
mov
cli
rcrl
mov
xchg
pusha
mov
or
sbb
sarl
std
jno
stc
pop
inc
ret
push
call
icebp
ljmp
popa
jge
jae
cmp
lahf
in
test
jp
dec
ss
xchg
or
dec
ljmp
dec
loopne
pop
addr16
call
sbb
lds
fcomi
mov
push
push
sbb
negl
adc
roll
cli
push
je
subl
loopne
pop
push
sahf
adc
pop
loop
push
sub
push
frndint
and
or
aam
xor
mov
jne
adc
enter
sarl
scas
cld
cmp
push
loopne
mov
fisttps
pusha
data16
insl
push
cld
cmp
xlat
add
lcall
add
mov
mov
sbb
insb
mov
outsb
hlt
push
cli
xor
stos
push
jp
movsl
out
push
cmp
or
sub
insl
aam
pop
in
push
push
dec
test
xchg
jge
or
inc
sbb
inc
ja
lret
lret
mov
xchg
loope
jno
push
ret
pop
jmp
scas
shld
xchg
data16
sbb
aam
imul
mov
mov
jmp
bts
jl
and
dec
adc
xchg
sub
add
out
leave
sub
scas
mov
adc
popa
js
xchg
xor
cs
xchg
jo
testb
jmp
outsl
iret
idiv
ljmp
cmp
jne
pop
int
mov
mov
popf
add
repz
out
inc
ret
xor
aas
dec
aam
sub
sti
jbe,pt
out
pop
sahf
or
mov
sub
mov
out
andl
pop
arpl
mov
fucomi
pop
mov
int3
shlb
push
in
xor
cmp
push
in
call
push
xchg
sbb
lret
ljmp
jns
sbb
mov
cmc
dec
stos
mulb
jle
mov
adc
test
sbb
js
xchg
rcrl
lret
fisubrs
aas
cwtl
aam
andb
add
pusha
mov
inc
jns
add
push
pop
xor
inc
and
ret
shll
mov
mov
push
jne
cmp
dec
cmc
adc
add
loop
push
data16
decl
std
or
push
sbb
lods
add
add
lock
xor
pop
call
movsb
loop
rcll
out
sbb
testb
push
xchg
xchg
push
pop
pop
loop
mov
cli
fdivrs
pushf
cmp
aad
pop
mulb
cld
fsub
bound
lret
iret
push
and
std
int
std
rep
std
nop
jmp
push
adc
enter
or
add
fisttpll
ja
sub
out
adc
test
or
push
test
fisttpll
mov
sarb
ficoms
xor
jle
xor
ret
fistpl
icebp
andl
lret
xchg
lcall
xor
pop
int
test
rcr
addr16
pop
or
or
stos
pop
clc
cmp
adc
in
cmpsl
xchg
xchg
and
rcl
es
xchg
out
or
loopne
xchg
cmp
jecxz
xlat
outsb
xchg
push
fs
sub
or
jp
rclb
jmp
test
mov
xchg
dec
daa
mov
test
jmp
pop
popa
icebp
daa
sub
aam
pop
hlt
divl
push
cld
test
lret
inc
xchg
fisubrs
sub
fdivs
push
lock
pop
lahf
aas
dec
and
push
xchg
pusha
jnp
sub
dec
pop
into
cld
fdivrs
xchg
or
test
mov
rcll
jno
jnp
xor
pop
xor
repz
imul
lds
subb
inc
loope
xchg
in
sbb
xchg
data16
xor
push
test
cli
jnp
or
bound
aas
dec
mov
lea
rol
sbb
xor
movsb
out
shlb
sbb
fwait
andl
cwtl
mov
sbb
daa
jp
xlat
stos
cli
in
mov
add
loope
dec
stc
cmp
sbb
popa
cs
fadd
jo
fsubrp
sub
push
outsl
test
rcrl
mov
in
dec
or
cmpsb
jns
lods
jle
sbb
cltd
cmp
mov
pop
or
scas
adc
and
add
in
mov
das
pop
xchg
add
int3
nop
stc
adc
cmp
pop
ljmp
sbbl
xor
push
mov
dec
dec
dec
neg
ja
pop
mov
xchg
imul
mov
mov
jns
adc
jne
data16
inc
aad
push
lods
pop
pop
push
sub
adc
sub
jns
add
arpl
rclb
rcrb
pop
jl
jp
daa
push
xchg
mov
sbb
mov
sahf
loop
lahf
cmpsl
jae
push
cmp
gs
pop
es
xor
sbb
hlt
push
popa
adc
sbb
clc
push
jo
add
xchg
pop
ficompl
mov
lcall
sbb
xor
popf
add
mov
mov
mov
inc
leave
adc
jl
push
jle
or
inc
test
adc
sub
cli
js
insb
sub
sbb
xor
into
and
or
mov
jno
adc
push
ljmp
adc
and
clc
imulb
int
sarl
ja
sbb
jmp
mov
mov
mov
add
fwait
push
shrl
push
add
add
into
psrld
rcr
fistpll
push
jge
and
filds
add
incb
pop
enter
insl
not
insl
sarl
test
clc
xchg
js
sbb
dec
sarl
movsb
lret
pop
out
test
cmc
push
dec
jbe
sub
mov
xchg
sub
add
test
cwtl
sub
subb
in
mov
lea
mov
pushf
dec
or
aam
lea
cld
lret
sub
sub
lret
and
jge
pusha
mov
push
cmpsl
out
in
sbb
or
flds
clc
enter
dec
int3
add
insl
in
adc
fwait
scas
data16
leave
jb
mov
bndstx
or
lea
das
push
stos
jp
push
ret
loop
dec
cltd
dec
test
ficompl
pop
fdivrs
fisubrl
je
mov
mov
push
adc
sbb
cs
outsl
aas
pop
test
add
fstps
and
jae,pn
pusha
mov
push
cmpb
out
cmpsl
in
shll
fisttpl
mov
or
aaa
xor
fcomp
jle
inc
jns
mov
nop
add
cmp
lods
popf
pop
pop
lahf
das
dec
and
add
fnstsw
cmpsl
rclb
lahf
mov
xchg
mov
add
cmpsb
xchg
push
fdivp
pop
rcrl
test
movsb
xchg
jge
push
or
popf
mov
mov
sub
adc
add
mov
and
mov
xor
rcr
cmp
ficompl
xchg
fidivl
or
aam
or
push
inc
xor
mov
cmc
icebp
jecxz
xlat
dec
cmp
pop
cli
jecxz
xchg
aaa
cwtl
mov
xlat
xchg
and
push
xorl
adc
test
out
cmpb
mov
xchg
inc
mov
sbb
xchg
mov
push
add
por
sahf
js
sbb
lock
stc
cmp
cmp
xchg
push
popa
nop
xchg
xor
fwait
popf
xchg
and
icebp
or
push
push
pop
push
and
sub
adc
fistpl
push
out
pop
jp
cmpsb
jmp
sbb
or
lcall
pop
jp
push
mov
inc
rcrb
push
push
lock
inc
jns
cld
mov
xchg
xlat
dec
xchg
jge
clc
dec
clc
out
xor
popa
in
inc
outsb
mov
or
pop
add
movsl
stos
test
orb
in
pop
adc
loopne
mov
jnp
lods
popa
xchg
add
test
xchg
mov
jmp
push
out
fwait
outsb
dec
in
rorb
mov
nop
xor
adc
pop
scas
inc
push
sub
sub
mov
xchg
and
mov
or
sub
enter
in
dec
push
outsl
sahf
jns
ret
add
cmp
imul
sbb
pop
ljmp
mov
adc
stc
jge
mov
sub
xchg
out
ljmp
mov
xor
bound
test
xchg
andnps
add
in
leave
iret
mov
jge
lods
mov
xlat
push
insb
xlat
jb
jno
shlb
aad
stc
fildll
add
xorb
stos
out
push
stos
dec
cld
push
adc
cwtl
fidivrs
cld
or
inc
pop
ret
sbb
cmpsb
or
push
jmp
dec
or
jnp
lahf
mov
push
daa
sub
loope
dec
stc
cmpsb
or
add
add
lock
pushf
pusha
pushf
cld
cld
push
dec
lock
les
loop
loop
add
or
in
call
jnp
mov
into
aad
pop
lock
out
sub
out
pop
rcrl
lea
pop
shll
lods
fs
and
xor
stos
adc
inc
loope
loopne
lret
bound
in
jo
adc
push
mov
insw
hlt
loopne
dec
add
outsl
dec
movsb
adc
out
cmpsl
add
push
and
add
sub
inc
xchg
mov
or
push
add
fadds
xchg
pop
sbb
movsl
sbb
cmp
and
in
insb
xchg
pop
mov
inc
mov
rcrb
sub
mov
jns
pop
out
xchg
xor
aad
in
daa
ret
jp
iret
out
mov
mov
dec
iret
jg
pop
nop
cmpsb
fidivrs
shrl
pop
popf
shlb
sub
pop
mov
pextrw
das
inc
lea
cs
outsl
into
pop
ja
stc
insl
aaa
pop
jnp
add
fnstsw
lret
xchg
adc
imulb
mov
int3
and
leave
mov
push
and
ret
enter
sbb
xor
or
cltd
dec
mov
jno
xchg
xchg
jl
outsb
jp
jne,pt
dec
jmp
adc
jno
pavgb
mov
or
lods
test
jbe
sbb
std
mov
xchg
xorl
or
fmuls
dec
inc
daa
fnsave
xorl
pop
jno
hlt
mov
push
sti
scas
test
hlt
leave
call
cmp
sbb
shlb
pop
mov
divb
or
xor
jno
add
inc
fiaddl
jnp
push
addps
sbb
inc
lock
push
sbb
jg
add
mov
lea
adc
roll
shll
dec
lret
fs
pop
mov
cmpsl
and
xchg
dec
incb
push
aad
or
sub
sahf
push
mov
js
adc
and
aam
mov
movsb
imul
dec
mov
fprem
xor
pop
adc
mov
adc
jmp
paddd
lahf
std
sbb
mov
sub
inc
jbe
lock
les
cmp
jnp
or
or
subps
in
sbb
fwait
jne
rcl
enter
cmp
inc
and
test
mov
mov
nop
sub
mov
push
sub
adc
jp
les
divl
jbe
rol
mov
xchg
lret
into
cmc
inc
sbb
mov
stos
add
test
mov
mov
aad
pop
testb
dec
and
mov
movsb
xchg
daa
lret
lea
out
pop
addb
in
inc
imul
ss
leave
sti
push
adc
cmpsl
bound
cld
lods
dec
dec
arpl
pop
jmp
push
or
sbbl
xchg
sub
test
ficompl
nop
mov
lock
out
insl
rclb
add
cld
sbb
lcall
xchg
xchg
test
mov
outsb
jne
das
shr
dec
jbe
scas
in
add
xor
xor
ljmp
addr16
mov
sbb
ret
jg
mov
shrb
out
add
mov
arpl
pusha
or
jb
push
mov
push
pop
sahf
mov
jnp
inc
std
mov
pop
insl
pop
dec
mov
shl
sub
jp
mov
cmc
test
mov
call
sbb
mov
insl
sbb
sub
push
out
bound
outsl
sub
xlat
movsl
gs
gs
and
std
mov
ret
mov
adc
sahf
loop
and
into
push
sbb
jp
outsl
pushl
js
test
or
repnz
xchg
adc
mov
hlt
mov
mov
xchg
pusha
sti
aas
and
cmp
int3
dec
xlat
hlt
inc
outsl
mov
push
pop
xor
mov
mov
push
xchg
out
outsl
addr16
mov
insb
test
sub
test
lods
out
jne
or
mov
push
gs
add
cli
xchg
xchg
aad
mov
jmp
mov
push
test
daa
popf
repnz
and
sub
lret
clc
nop
xor
or
jno
and
push
dec
cli
mov
mov
mov
and
fwait
cmc
in
mov
lea
imul
enter
scas
lret
les
andl
inc
insb
fs
stos
push
fmuls
push
jae
mov
xchg
inc
mov
outsl
mov
iret
dec
sbb
aad
inc
rolb
jecxz
ss
cmp
jae
lret
pop
add
or
popa
aas
fists
mov
cmp
repnz
lcall
inc
and
sahf
adc
jnp
call
and
mov
mov
ret
out
adc
xor
out
sub
cwtl
mov
lock
sbbl
nop
fcomps
pop
inc
fld
pop
xor
mov
dec
cmp
jecxz
and
mov
jno
bswap
inc
imul
pop
in
adc
xor
aas
xchg
sub
sbb
popa
adc
and
mov
dec
xchg
mov
inc
lahf
ret
jns
xchg
and
inc
mov
movsb
cmp
ljmp
dec
js
lahf
cs
ljmp
mov
add
or
cmp
sbb
pop
adc
int3
jmp
xchg
jae
mov
xor
out
bound
sbb
ret
ret
xchg
and
lea
inc
adc
adc
jmp
sub
mov
stos
sub
adc
jmp
push
lock
push
filds
adcb
popa
dec
in
push
fdivs
jae
mov
jp
loop
xor
inc
sub
test
arpl
xchg
xchg
in
cs
adc
cmpsl
hlt
xchg
movsl
leave
lret
jns
hlt
iret
adc
sar
inc
push
enter
int3
lret
rclb
pushaw
jle
add
adc
jno
pop
adc
scas
jg
mov
repnz
in
pop
sub
sarl
cltd
mov
or
push
icebp
shlb
shll
xor
cmc
jge
jno
fwait
jb
sub
push
daa
push
mov
mov
cwtl
xor
sub
jle
adcb
dec
sbb
dec
mov
in
add
faddl
xchg
into
sbb
dec
pop
jg
loop
pop
test
stc
imul
pop
mov
add
or
inc
xchg
dec
xchg
mov
shl
addr16
add
add
sahf
fsubs
mov
inc
insb
jae
jno
xchg
xorl
mov
push
out
push
in
jbe
in
ds
add
inc
mov
adc
xchg
jb
mov
stos
pop
rcrb
mov
xchg
data16
mov
test
into
pop
lahf
outsb
lods
inc
add
stos
mov
clc
dec
rcrb
fwait
cmc
cld
xchg
mov
call
xchg
testb
pop
jb
pop
sub
stos
es
addr16
cmp
fisubl
cmp
iret
cmp
adc
sub
pop
mov
stos
jbe
sbb
dec
scas
scas
push
jmp
ds
jge
and
cs
jno
inc
cmc
lds
pop
and
push
imul
imul
pop
mov
stos
je
roll
mov
jle
adc
fmull
pop
les
js
mov
and
imul
and
loopne
daa
scas
lahf
push
out
sub
test
sbb
lea
repz
lods
daa
aaa
int
or
add
push
mov
xchg
bound
pop
add
jge
ljmp
aas
jmp
dec
iret
das
mov
mov
stos
sbb
cs
sti
push
sahf
iret
jne
or
adc
cmc
mov
and
and
out
push
insl
pop
icebp
adcb
xchg
pop
inc
and
xor
add
sbb
mov
xchg
jl
lock
cmp
push
pop
rcrl
mov
pop
loope
arpl
mov
inc
dec
mov
adc
push
mov
aas
jle
sub
mov
jnp
push
mov
movsb
jmp
repnz
adc
jge
repnz
cwtl
adc
pop
push
or
cmp
ljmp
stc
xchg
dec
nop
adc
pop
stc
xor
test
jp
pop
fbld
sbb
xor
mov
inc
mov
stos
outsb
dec
mov
loopne
shr
xchg
fisubs
jb
cmpsl
aaa
xchg
jbe
sbb
gs
cs
js
testl
and
or
jecxz
fs
mov
pop
pop
mov
gs
cli
test
out
or
adc
shlb
out
jno
and
call
dec
mov
lahf
sub
or
jecxz
pop
mov
ss
ret
dec
xor
xor
scas
mov
inc
fnstsw
push
dec
arpl
push
int
aaa
jl
inc
sbb
and
sub
dec
xchg
in
xor
rcrb
dec
cli
test
jge
negb
mov
xchg
icebp
xor
pop
lcall
xor
sub
lock
inc
shlb
and
mov
popa
add
into
cmp
cmp
pop
push
imul
xchg
movsb
mov
dec
xor
outsb
pop
lret
shl
push
push
dec
add
cmp
sti
add
mov
pop
or
popa
xchg
cld
jne
push
aaa
and
xor
pop
pop
dec
mov
add
xchg
xchg
jg
lods
repz
push
shlb
dec
into
pop
int3
jg
adc
cmp
xlat
or
adc
insl
pop
sbb
cmp
cmp
ds
add
add
and
jg
push
adc
push
cld
ljmp
add
sub
jl
out
dec
fsubrs
fldl
jns
popf
mov
addr16
add
jg
stos
add
cmpsb
shl
sbb
fwait
js
lret
pop
mov
arpl
sti
xchg
imull
mov
mov
sbb
xchg
push
push
aas
inc
mov
pop
test
mov
imul
testl
xor
ret
push
cmp
xchg
mov
sbb
push
jl
iret
or
mov
jg
addr16
pushf
lcall
mov
mov
mov
cmp
movsl
mulb
aam
adc
ffree
pop
cld
scas
push
mov
mov
add
mov
or
cwtl
xchg
adc
pop
clc
cs
pusha
out
and
add
cmpsl
add
jo
popa
mov
popf
cltd
xchg
push
in
sub
push
sahf
call
in
in
loop
stos
mov
mov
adc
lods
mov
ret
mov
lock
pop
xor
push
cmp
jno
xor
xor
ficoms
or
orl
mov
mov
push
jbe
mov
das
divl
and
mov
and
movsb
fwait
clc
gs
fidivrl
shrb
add
hlt
or
lods
dec
lcall
not
lods
add
lods
xchg
data16
and
jb
loope
shrb
push
pop
ds
push
sub
sub
pushf
lret
jae
sbb
xchg
cltd
add
dec
sub
gs
xchg
push
movsb
and
xchg
out
aaa
iret
and
lret
movsb
mov
outsl
jnp
loop
clc
out
mov
push
stos
push
ds
inc
cld
pop
clc
jge
xchg
mov
jae
xchg
ljmp
adc
das
cmp
mov
scas
je
sti
insl
scas
pushf
adc
in
pop
push
and
mov
and
jae
mov
and
push
push
stos
mov
test
sub
stos
mov
mov
inc
andl
scas
mov
xacquire
jmp
lret
lods
xlat
mov
and
mov
add
fstpt
sahf
jmp
cmpsb
xor
std
rep
mov
es
sbb
mov
pop
xorb
jb
dec
and
or
xlat
andb
lock
adc
cmp
fisttps
out
pop
ret
aad
cs
jecxz
add
sbb
ret
outsl
decb
xchg
or
cmp
sarb
outsl
rclb
sbb
imull
das
mov
out
movsb
iret
jb
push
inc
sahf
dec
daa
xor
mov
cmpsb
mov
test
imulb
movsl
lods
stos
inc
and
jo
cltd
push
jmp
cmp
inc
xchg
insb
enter
xchg
icebp
inc
cmp
lcall
nop
xlat
push
cmp
cmp
dec
fucomp
fldenv
xchg
cmpsl
sahf
lahf
adc
cli
shr
dec
test
cltd
lahf
sbb
inc
movsl
and
mov
sbb
adc
and
inc
test
and
inc
and
push
mov
fcomip
pop
mov
mov
incb
enter
test
xchg
outsl
call
adc
add
add
loopne
cmp
mov
aaa
mov
hlt
imul
add
dec
xlat
test
test
cmp
imul
lds
adc
outsl
inc
pushf
addr16
inc
xor
lods
and
and
add
xor
xchg
es
dec
mov
adc
ljmp
jae
mov
pop
push
mov
int
jno
mov
jl
xchg
xor
or
pop
lea
out
or
pop
mov
jno
sub
sub
test
outsb
rolb
sbb
mov
and
pop
push
mov
push
sbb
into
push
addr16
mov
leave
mov
push
or
cmp
mov
xchg
outsb
jl
shl
aam
sbb
dec
mov
mov
inc
mov
mov
mov
aad
pop
inc
xchg
movsb
inc
pop
add
xchg
adc
fnsave
jnp
ja
inc
or
xchg
les
cmpsl
stos
adc
lcall
add
pop
and
and
inc
pop
scas
jbe
cmpsl
dec
mov
inc
and
les
mov
jnp
mov
iret
out
mov
xlat
dec
xor
sbb
or
xchg
ja
in
call
mov
outsl
int
test
imul
mov
add
mov
push
push
ret
stc
cmp
ret
inc
xchg
es
icebp
lahf
or
adc
or
lds
popf
in
inc
in
dec
inc
scas
and
imul
arpl
pop
sbb
dec
xor
push
sub
pop
inc
jae
inc
mov
in
fcmovnbe
xlat
sbb
std
add
std
fiaddl
cmpb
mov
rcl
sbb
pop
pop
mov
mov
movsl
xlat
mov
cmp
adc
repz
mov
shrb
aad
pushf
pushf
imul
cmp
or
add
das
ljmp
int3
fs
adc
frstor
test
push
pushf
jb
icebp
std
sub
xchg
test
std
stos
cmpl
fmuls
jp
shr
dec
repnz
fstl
ss
lea
icebp
sahf
jns
lret
mov
fidivs
adc
sub
pop
std
adc
jecxz
lock
shlb
cli
mov
push
sub
jge
push
xchg
and
imul
pop
add
in
jecxz
mov
insl
pop
push
outsl
xchg
jle
jne
shrl
in
mov
cli
sbb
and
and
cld
jno
ljmp
stc
pushf
gs
push
cltd
dec
or
clc
inc
int
push
cmpl
movl
pop
xlat
dec
fs
xor
enter
push
xor
test
pop
sbb
enter
sbb
xor
xchg
iret
add
mov
add
dec
adc
and
lret
and
jns
mov
lods
xor
inc
inc
cmp
into
and
cld
mov
jecxz
sbb
imulb
jne
loop
lret
inc
add
xchg
cmp
test
divl
iret
or
loope
mov
std
adc
adc
repnz
in
inc
orb
xor
mov
out
xor
movsl
fidivrl
and
sub
lock
imul
push
add
add
add
add
mov
xor
test
add
mov
arpl
in
ja
ja
rolb
dec
push
cmp
cmp
jne
push
stos
or
movb
mov
enter
imul
cmpsl
lcall
push
les
js
int3
int3
fsubs
jae
shll
push
test
cmpsb
and
movsl
inc
int
jle
shr
aaa
and
pop
pop
popf
mov
mov
in
movsl
inc
xchg
pop
push
xor
ss
les
cmp
ja
dec
arpl
dec
fsub
hlt
add
dec
xlat
int3
pop
lret
sub
or
arpl
push
ficoml
inc
scas
cmc
jae
sub
jo
fsubrs
fisttps
dec
push
lods
fstpl
xor
ds
ret
shrl
es
ret
and
jnp
inc
mov
jmp
inc
stc
js
pop
dec
out
cmovb
data16
imul
xor
pushf
nop
or
sub
dec
outsb
pushf
add
aas
mov
cmp
adc
adc
fadds
push
jb
mov
movsb
loope
jp
jp
and
dec
inc
in
cmpsb
jg
xor
or
mov
outsl
jg
cmp
jge
ljmp
loope
js
jle
mov
adc
addr16
mov
jmp
dec
dec
imul
cltd
scas
das
sub
xchg
sbb
aad
push
mov
adc
sarb
lock
hlt
jo
mulb
inc
fs
sub
pop
mov
adc
xor
fisubs
enter
add
fcmovnbe
adc
aam
mov
pusha
cmp
into
jns
nop
test
sub
iret
xchg
adc
aas
jno
or
pop
out
fisttpl
inc
xor
jo
push
push
dec
rcr
mov
sub
push
sbb
les
ret
mov
mov
cs
add
add
lcall
jge
mov
aas
out
movsb
jge
pop
sbb
dec
subl
mov
loope
inc
or
mov
push
nop
or
adc
adc
mov
cltd
hlt
and
orb
mov
push
fwait
dec
mov
xchg
shrl
addr16
and
xor
add
pop
loopne
add
cmp
pop
pop
enter
xchg
enter
inc
jmp
popf
push
and
mov
loopne
adc
push
mov
mov
sub
fdivrl
leave
stos
push
pop
lahf
ss
cmp
ret
mov
cltd
nop
lods
xchg
cwtl
xchg
and
int
mov
sub
lcall
and
loopne
cwtl
out
sub
add
cwtl
shll
nop
es
mov
push
shl
into
test
ret
ret
pop
pop
addl
xlat
cld
xor
mov
adc
neg
push
xchg
inc
je
aaa
jnp
scas
cs
or
imul
push
xchg
xor
int
out
ss
popf
aas
test
sbb
xchg
mov
or
cmp
or
inc
inc
xchg
push
lcall
xchg
push
jp
pop
fld
mov
andb
ljmp
add
and
inc
test
and
out
push
mov
push
add
add
and
cltd
out
lahf
idivb
js
jg
adc
add
sbb
add
outsl
ljmp
xor
lcall
adc
lods
les
