push
mov
sub
mov
movl
mov
mov
movl
movl
movl
cmp
movl
jne
mov
push
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
movl
xor
addl
mov
xor
push
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
mov
xor
add
addl
movzwl
add
not
or
and
movzwl
xor
mov
sub
mov
adc
mov
sbb
mov
sbbl
push
or
mov
dec
movzwl
mov
sub
mov
mov
xor
or
add
movl
movl
mov
orl
mov
movzbl
or
lea
mov
mov
mov
addl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
movl
mov
mov
andl
xor
xor
andl
xor
andl
add
movl
add
div
movl
mov
movl
cmp
movl
je
movl
lea
sbb
mov
mov
jmp
popa
xchg
mov
mov
mov
jb
repz
jo
in
jo
rcl
aad
ror
rol
pop
push
add
in
add
xor
ret
adc
mov
add
mov
sbb
lods
sarb
or
sahf
jp
inc
lods
push
sub
mov
stos
js
roll
jmp
mov
dec
fcomps
pop
test
sub
mov
pusha
nop
mov
and
jmp
out
repnz
xchg
xor
jbe
xlat
and
add
adc
xor
or
fldl
xor
pop
push
or
pop
fstps
jno
mov
ja
sbb
xor
into
cmpsb
sub
popl
push
aad
pop
inc
jecxz
jle
mov
cmpsl
call
xchg
inc
push
popf
sub
aad
aas
xor
push
stos
cltd
mov
inc
movsl
cwtl
sub
pop
mov
mov
pop
ja
mov
sub
paddusb
xchg
mov
testl
in
adc
int3
add
gs
push
leave
jns
mov
ficomps
cmc
dec
in
pop
or
push
cmpsl
push
repz
cmpsl
jbe
push
and
int
xchg
adc
dec
lcall
dec
fwait
xor
sub
in
cmpsb
test
aam
pop
testb
mov
or
lods
insl
cmp
sub
jb
jo
aad
pop
jecxz
xchg
pop
push
pop
lea
xor
jae
adc
in
test
mov
cmp
jmp
push
fcmovnb
mov
xlat
les
test
jg
jo
jg
jo
mov
jg
out
jo
mov
aas
pop
insb
cmp
add
imul
aad
push
hlt
xor
stc
cwtl
and
repz
xchg
mov
repnz
nop
lds
roll
sbb
in
xchg
dec
xrelease
jp
jge
enter
imul
nopl
adc
push
mov
dec
sub
ss
ret
sti
rcrl
jns
mov
cmp
adc
adc
insl
dec
jmp
mov
loope
scas
sbb
inc
mov
repz
jae
pop
rcll
aaa
mov
bound
leave
lahf
mov
inc
sbb
mov
cmp
insl
xadd
pop
imul
and
ja
insl
pop
add
popf
xchg
adc
inc
movswl
jae
fisubs
pusha
pop
jne
and
out
lcall
mov
cs
test
xchg
mov
jle
fidivrs
lods
dec
fists
shr
rcll
mov
jns
inc
test
cmp
aas
mov
jg
push
fnstcw
jecxz
mov
sbb
cmp
ficomps
jno
outsl
pop
jmp
stos
or
mov
lret
adc
je
mov
test
add
add
pushf
sbb
pusha
jmp
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
xor
mov
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
mov
add
jmp
clc
repnz
icebp
pusha
xchg
rcll
jo,pt
dec
jle
jo
jg
jo
stos
sti
dec
sub
and
bound
mov
push
sub
dec
pop
mov
cmp
fistps
clc
fiadds
scas
sub
rorb
gs
lret
fst
jbe
cmpsb
add
and
pushf
sti
mov
fstpl
sbb
pop
xor
dec
push
sub
inc
mov
add
xchg
mov
jne
das
lods
icebp
dec
inc
out
frstor
or
outsl
push
mov
aas
fidivs
mov
sub
int
mov
cld
inc
lods
xchg
fsub
into
xlat
dec
arpl
xchg
std
mov
or
xor
cli
mov
mov
sbb
sbb
test
cmp
xchg
jp
bound
xchg
test
loop
int
nop
add
push
nop
push
in
shr
insl
es
int3
cmp
fsubl
sbbl
mov
xchg
fisttpll
cmp
loop
push
add
ljmp
psubusb
jne
add
mov
adc
testb
shl
xlat
outsb
data16
mov
jb
ss
stos
cmp
ficoms
and
dec
cmp
fdiv
or
xchg
sbb
sbb
sbbl
pop
lret
iret
push
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
jmp
pop
arpl
out
xchg
imul
jae
jle
xchg
dec
aas
jl
jo
jg
jo
daa
mov
mov
fs
testl
nop
jg
cltd
xchg
sarb
sahf
jmp
add
punpckhbw
pop
stos
jecxz
bswap
mov
sub
fimull
cli
test
aas
dec
test
push
pop
shrb
std
daa
orl
dec
xor
mov
ds
add
imul
xchg
pushf
testl
inc
adc
add
inc
daa
sbb
dec
adc
outsl
adc
xchg
dec
ficoml
pop
pop
mov
cli
lcall
mov
int3
pop
int3
into
xor
lcall
and
mov
fcmovb
lea
mov
data16
fs
out
jle
pop
js
insb
jnp
cltd
pushf
xchg
aas
mov
mov
mov
push
unpckhps
sarl
out
mull
in
push
push
xchg
in
shl
ret
int
add
call
or
mov
test
frstor
mov
sub
out
or
or
xor
inc
pop
cltd
pop
pushf
addr16
jg
push
lods
xchg
and
mov
cmpsb
popa
fildl
das
popf
fs
not
lods
pushf
daa
cmp
imul
xchg
mov
loop
loopne
xchg
pop
nop
incl
jge
mov
je
mov
addl
jmp
mov
cmpl
jne
mov
xor
add
test
jne
xorl
jmp
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
jmp
addr16
movsl
insl
jne
out
cmp
dec
cmp
push
jnp
jo
jge
jo
bound
mov
mov
add
addr16
lods
dec
das
xor
ljmp
cltd
mov
add
mov
mov
cltd
adc
xchg
mov
sub
and
sub
loope
ds
sti
lret
fwait
ret
fwait
sub
xchg
in
shl
push
lock
sub
jp
jmp
adc
loope
mov
inc
adc
mov
pop
pop
popa
sub
jmp
sub
cmp
xchg
xor
cmp
or
stc
mov
lds
fsubs
add
cmp
push
cs
push
rolb
adc
mulb
pop
stc
and
and
push
fisubs
icebp
lcall
dec
or
jg
jp
sbbl
add
int
dec
sub
insb
mov
int
mov
push
xchg
imul
jl
dec
jnp
jg
push
pop
sbb
jle
decb
pop
repz
pop
pop
xchg
mov
adc
xor
pop
fildll
cs
and
imul
xchg
adc
aas
pop
push
cld
cmp
leave
test
xor
ja
mov
and
fsubrl
and
jnp
rcrb
repnz
subl
dec
push
outsb
addr16
sub
dec
scas
mov
cmp
cli
shlb
arpl
pop
mov
jno
push
dec
fsubrs
mov
mov
add
add
test
ljmp
mov
in
jmp
xor
pop
leave
shrl
rorl
cltd
or
xlat
push
inc
pusha
sbb
or
pop
aaa
and
jns
fnstenv
aam
out
ret
inc
sub
in
pop
mov
aaa
or
insb
mov
xor
xlat
clc
cwtl
cmpsb
push
sub
xor
xchg
jnp
cmc
leave
xchg
pushf
pop
imul
xor
fidivrs
push
rcrl
mov
sbb
push
js
jbe
mov
sar
pushf
pop
insl
push
jnp
xchg
cs
pop
xchg
adc
hlt
jmp
mov
psubd
lea
cltd
popa
push
out
dec
fisubrl
add
rorl
pop
scas
lds
inc
icebp
sub
in
repnz
or
sub
imul
leave
jnp
adc
lods
mov
xorb
sti
and
mov
xchg
jecxz
fidivs
mov
insb
cwtl
xchg
add
pop
sbb
xchg
xor
das
or
aam
cmc
jb
pop
mov
and
pop
mov
inc
mov
aad
sbb
inc
adc
and
inc
inc
pop
add
push
ja
stc
mov
insb
xchg
or
xchg
dec
cmp
cmp
mov
std
les
ficoms
pop
mov
imul
and
push
sbb
clc
sub
insl
or
leave
xor
daa
cwtl
and
mov
mov
push
jmp
call
and
adc
jne
or
stos
imul
add
push
pop
pop
fistps
in
pusha
sbb
dec
mov
xchg
inc
or
sub
js
push
push
xor
mov
sub
mov
sbbl
jmp
add
arpl
jmp
jae
cmp
jo
xchg
jge
jo
pop
lods
lock
out
mov
ss
or
xor
hlt
mov
pop
fmul
push
xor
data16
pop
add
jno
or
add
pop
push
xlat
inc
test
in
sbb
add
and
add
mov
aaa
cmpsb
jbe
adc
lret
daa
adc
loop
inc
scas
push
or
xor
adc
fdivrl
pop
fwait
lret
xchg
popf
or
daa
test
sbb
js
jae
xchg
imul
shr
std
cltd
mov
adc
pop
pop
push
pop
xchg
jge
ficomps
mov
test
jl
cmpsb
aam
xor
aas
cli
enter
mov
aaa
lods
add
jne
lcall
mov
pop
dec
mov
daa
cmpsb
nop
dec
jmp
imul
lret
xor
jae
outsl
out
and
les
push
inc
inc
xchg
lcall
mov
mov
xchg
push
push
inc
pop
mov
icebp
fildl
dec
aas
mov
or
dec
mov
icebp
dec
fnstenv
das
rolb
push
mov
scas
jmp
push
lods
aad
pop
add
lods
xor
lahf
iret
jmp
in
loope
mov
scas
lret
or
cmp
mov
push
nop
pop
lret
inc
icebp
jb
lcall
xchg
and
mov
fnstcw
sub
push
jle
lock
or
sbb
stos
jl
mov
push
fmulp
je
dec
lods
cmp
or
or
or
xchg
inc
pop
lea
push
or
xchg
ret
mov
and
out
mov
cmp
pop
gs
cmp
dec
mul
out
sub
mov
mov
dec
xor
cmp
sahf
add
bnd
xor
scas
inc
ret
repz
sbb
and
sub
not
adc
cmpsb
push
dec
push
adcl
nop
mov
and
jecxz
in
loop
nop
push
lods
inc
push
sbb
add
lds
nop
js
lea
pop
adc
std
and
mov
pop
lea
sbb
test
or
push
xchg
pop
or
jnp
or
js
int
inc
ret
sub
push
es
aaa
sbb
les
test
loop
jl
js
lret
mov
mov
lret
xchg
jg
popf
imul
cmp
popa
in
mov
or
jnp
mov
mov
ficoml
mov
push
sbb
xchg
push
sarb
adc
inc
jb
aaa
ljmp
test
lods
clc
cmp
loop
sbb
and
and
outsb
or
pop
xor
cwtl
sbb
sbb
sbb
sbb
dec
outsl
cmp
loop
pop
test
sub
push
inc
sub
fwait
xchg
adc
push
adc
and
add
lods
lret
bound
jo
in
cmpsl
bound
xchg
sahf
mov
movsb
or
cmp
mov
and
out
mov
lcall
mov
pop
cs
xchg
loopne
stos
maxss
js
pop
jnp
sub
test
add
subb
or
rcrb
shrl
and
test
inc
add
and
add
add
or
jno
push
scas
int3
cmpsl
loope
icebp
inc
push
add
jo
jge
jo
xor
iret
sub
add
or
filds
inc
aas
dec
and
test
lret
xor
icebp
pusha
xchg
inc
cld
push
sub
mov
inc
sub
pop
test
dec
adc
jecxz
or
mov
add
jns
pop
xor
outsb
setg
stos
popf
jg
xchg
or
xchg
xchg
sub
imul
push
lahf
scas
sub
dec
fisubrs
sbb
cmp
stc
arpl
push
adc
mov
cmpb
aad
dec
ds
imul
ret
adc
mov
push
pop
cmc
add
mov
scas
lods
shrb
sbb
ja
lds
daa
mov
loop
sub
enter
enter
je
gs
mov
lret
mov
andb
sub
or
cmpsl
adc
dec
jo
mov
mov
out
sti
imul
out
push
sbb
add
pop
lcall
inc
dec
and
dec
iret
cli
sahf
fldt
fdivrs
cmpsb
out
or
inc
shll
int
in
mov
jge
add
mov
pop
adc
xchg
movb
fisttps
cs
sbbl
inc
sub
dec
pop
hlt
xor
or
xor
enter
pushl
aas
mov
outsl
mov
sbb
pop
cmp
ja
ret
rcr
push
cmp
out
pop
sbb
int3
lods
orb
test
xchg
mov
sub
mov
dec
jne
test
mov
add
fcmovb
das
arpl
stos
test
gs
lret
dec
jge
jmp
insl
sti
jmp
pop
fidivrs
movsb
adc
cmpsl
and
mov
jle
out
sbb
add
add
aas
dec
sub
jo
sub
in
outsl
xchg
jg
insl
pop
sub
mov
inc
add
lods
outsl
mov
sbb
js
cmp
sub
cli
call
shll
mov
ljmp
cmp
rcrb
xor
or
sub
idivl
inc
lahf
test
pop
lahf
lock
stos
xor
mov
outsl
out
or
rorl
lcall
adc
adc
cmp
outsb
addr16
jo
jbe
push
dec
addr16
das
out
out
adc
sbb
test
jmp
add
mov
gs
jo
gs
insl
sahf
icebp
inc
sti
or
push
loop
into
add
add
test
popf
rol
cmpsb
ljmp
mov
scas
jae
lahf
leave
ss
and
test
pop
fwait
jl
add
in
ljmp
fistpl
and
inc
aas
orb
or
mov
mov
inc
mov
xchg
sub
test
fisubs
insl
lcall
adc
and
dec
jo
pop
lcall
adc
fwait
orl
jl
mov
mov
add
fistps
sub
xor
pop
mov
popa
test
push
out
push
fstp
cwtl
inc
push
cmpsb
xchg
bound
aam
incl
push
clc
sub
push
add
mov
xor
and
mov
push
mov
addl
add
jmp
mov
cltd
or
or
adc
jmp
jge
jo
sbb
imul
in
mov
insl
inc
add
jns
idivl
daa
xor
rcl
jmp
push
inc
xchg
icebp
push
mov
push
pop
jno
xlat
inc
sub
xor
xchg
xchg
pop
mov
push
outsb
sub
jno
push
aad
sbb
js,pt
out
dec
xorb
repz
mov
push
lods
scas
jle
ret
in
jb
sar
notb
or
push
cmp
jge
jnp
sub
dec
mov
pop
lcall
and
push
sbb
cmpsb
dec
sbb
scas
call
ss
dec
cltd
in
sbb
jecxz
sti
pop
lret
in
test
jns
pop
pop
inc
and
mov
sbb
idivb
xchg
dec
scas
inc
ljmp
or
loop
jae
pop
cmpsl
xchg
xor
je
add
jnp
ret
inc
xor
daa
aas
cltd
aas
pop
scas
incl
out
xor
call
add
out
jg
iret
inc
xchg
or
filds
xor
mov
pop
sub
pusha
jne
rcll
mov
jo
mov
pop
incb
jmp
cmp
das
and
xchg
pop
sbb
subl
sbb
mov
xchg
insb
cmp
add
pop
mov
add
test
arpl
sub
push
cmp
mov
enter
xor
adc
xchg
jns
cmp
ljmp
mov
mov
cli
leave
cmpsb
mov
outsl
call
std
lock
push
add
ss
call
mov
in
push
mov
mov
int
or
test
mov
out
loopne
cmp
lret
inc
pushf
adc
jge
push
pop
and
ja
clc
adc
clc
mov
or
lcall
cmp
jbe
es
xchg
sub
jmp
and
mov
mov
sbb
mov
sub
xor
pop
mov
xor
mov
or
sarb
push
lret
mov
mov
sub
add
lock
dec
aad
fimuls
rcll
jle
xlat
mov
pop
push
test
pop
roll
sti
xchg
push
jl
in
add
rcrl
jecxz
and
idivb
pop
scas
insb
push
jb
sbb
sbb
xorl
inc
jnp
inc
sub
dec
jge
scas
add
enter
jge
popa
push
xchg
push
fisubrs
mov
inc
scas
dec
out
aad
stos
arpl
inc
lods
scas
or
lea
mov
jecxz
lea
xorb
and
inc
lcall
jae
jns
cwtl
insb
xchg
pop
aas
inc
mov
orb
sbb
std
cmp
scas
dec
adc
push
out
test
bound
cmp
jno
mov
aas
aaa
mov
sbb
popa
push
mov
adc
outsb
subl
pop
cs
mov
lods
adc
int3
hlt
ror
jmp
and
pop
jo
xor
loop
incl
cmp
xor
leave
insb
std
push
in
xchg
dec
iret
adc
adc
in
iret
lahf
push
cmp
xchg
inc
inc
add
add
je
and
mov
sbbl
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
pushl
push
call
jmp
mov
sub
add
xor
adcl
add
movl
cmp
ja
push
jmp
mov
mov
jmp
mov
in
inc
sub
jge
add
jo
jge
jo
mov
and
sbb
jmp
inc
jbe
sbb
addb
push
or
insb
sahf
push
jg
ja
popf
lcall
add
or
xchg
dec
inc
dec
or
into
xchg
xchg
lcall
test
pop
out
imul
jns
push
mov
bswap
fstpl
lea
dec
xor
and
xchg
into
mov
ja
outsl
enter
xor
hlt
in
sti
testl
adcl
xlat
or
sbb
in
test
jecxz
adc
lea
jb
mov
xor
push
orl
into
test
bound
adc
dec
mov
sub
lcall
aas
jae
ljmp
in
dec
sub
mov
and
shr
sar
inc
pop
cmp
leave
mov
jae
fisttps
dec
mov
jp
xor
insb
aas
sarb
cld
sub
pop
mov
adc
into
cmpsb
lods
xchg
sbbb
jno
cmp
cmp
jne
xor
mov
inc
mov
dec
jae
jns
mov
inc
adc
sub
xor
ret
jge
xchg
pop
jge
in
rcr
xchg
or
repnz
gs
aad
push
sub
fisubs
sub
cmp
sub
sahf
repz
mov
mov
std
sbb
pushf
js
jmp
mov
add
pop
int
ficoml
cmc
popa
xchg
lock
pop
push
data16
pop
jbe
cmp
orb
mov
fidivl
lcall
data16
insb
pop
add
ret
jns
mov
cmpsl
mov
mov
or
test
xchg
jo
test
mov
mov
int3
pop
lret
test
ret
adc
outsl
sub
das
lret
ffree
mov
shll
mov
fdivr
mov
imul
fisubl
mov
or
je
test
inc
xchg
jle
pop
test
push
sub
or
test
ds
imul
fisubrl
out
insb
or
xorb
adc
cmc
ss
addr16
test
push
sub
lret
sub
mov
cmpsl
ret
inc
adc
mov
call
repnz
shl
jl
xchg
push
and
enter
sub
rclb
pop
in
jo
adc
push
addr16
cmp
jne
in
repz
pop
pushf
pushf
hlt
jecxz
test
mov
dec
ficoml
and
nop
ljmp
jge
stos
and
jl
pop
dec
jmp
pushf
push
lods
ret
jb
roll
aaa
mov
add
test
inc
jne
dec
insl
fsubp
es
mov
sub
mov
mov
push
cs
lret
add
pop
mov
loope
jne
inc
faddl
ds
arpl
int
xchg
mov
mov
repnz
xchg
push
push
add
fwait
jne
jmp
rcr
and
or
or
mov
add
bswap
dec
pop
adc
sti
in
push
mov
ficoms
out
inc
xor
gs
xlat
negl
xor
mov
jmp
cs
loopne
in
jnp
jmp
cmp
or
xchg
jge
jo
lret
scas
sbb
adc
inc
test
push
xchg
xchg
cmp
je
in
aaa
into
scas
pop
mov
xor
mov
xlat
and
pop
ficoms
push
inc
cmpl
jae
and
out
insb
icebp
sti
pop
ret
push
add
cmp
jp
aam
sub
add
in
sub
jnp
or
pop
jecxz
enter
cmp
sub
inc
dec
pop
scas
stos
mov
inc
test
test
mov
cmp
dec
les
inc
pop
jl
vmwrite
xchg
cld
mov
push
and
shrb
xchg
jge
adc
outsl
mov
or
inc
nop
rcr
divb
in
aaa
mov
test
cmpsb
inc
add
xchg
scas
bound
xchg
loopne
orl
lret
inc
sti
arpl
pop
xor
mov
adc
pop
adc
lret
pop
xchg
lods
jle
pushf
rorl
mov
xchg
iret
sti
jns
rcrb
pop
adc
mov
fisubl
inc
nop
sbb
push
mov
sbb
dec
push
mov
xor
sti
cld
rcrl
sbbl
pop
fucomip
mov
xchg
mov
test
movsb
adc
in
jp
pop
adc
pop
lock
decb
sub
jl
stos
std
stc
sbb
sbb
ss
in
iret
fildl
xchg
push
icebp
mov
mov
test
cmpsb
aaa
imul
cli
shll
loope
test
sbb
and
or
cmp
int3
cld
lods
mov
testl
push
mov
xor
dec
or
neg
movsl
shrb
push
std
jmp
inc
mov
mov
adc
mov
xchg
mov
sbb
mov
arpl
jns
outsb
jge
lret
pop
lods
mov
sub
jmp
dec
pop
xchg
and
lods
xchg
sti
or
cli
xchg
sub
jbe
adc
fstp
or
push
shlb
cmp
push
orl
xchg
xor
cmp
and
lds
insl
test
pop
sub
je
push
mov
inc
cmp
adc
test
ret
das
pushf
xor
int
cmp
shr
or
inc
sub
xor
lret
je
push
loope
add
xchg
cmp
and
mov
and
cltd
lret
mov
das
dec
or
pushf
adc
sub
push
mov
roll
imul
aam
movsb
ret
cmp
xchg
cmpsb
or
jecxz
add
test
sbb
add
xor
int3
ljmp
mov
cmpsl
sub
mov
jecxz
mov
leave
push
jge
jg
out
scas
inc
mov
lea
pop
push
imul
xchg
sarb
nop
push
cmp
mov
pop
fs
ficomps
in
or
xchg
push
push
cld
push
xchg
in
cmpsb
sbb
jge
jnp
leave
sub
push
into
out
movsl
pusha
pop
xlat
push
xorl
mov
fcomp
jo
xor
mov
cmpsb
popa
js
xchg
jne
add
jnp
pop
dec
or
or
sarl
xchg
cwtl
mov
xor
jmp
data16
in
int3
jne
popa
jno
imul
cmc
ds
jo
xchg
pop
mov
lods
movsb
lods
and
test
test
pop
cs
icebp
and
mov
pop
in
push
imul
lods
inc
cmp
fldcw
mov
stc
into
ss
and
dec
in
push
leave
cmpl
adc
int
jae
mov
aam
mov
xor
pop
imul
xor
dec
ja
inc
cmp
repnz
inc
insl
out
incl
dec
jl
aam
adc
data16
out
or
loopne
jae
fcompl
cmp
sahf
hlt
mov
jbe
xor
mov
ds
inc
add
add
mov
xchg
adc
pop
or
sbb
mov
mov
cs
mov
call
stc
pop
stos
sub
mov
dec
rcrb
cwtl
in
popf
ja
push
sub
and
sti
mov
fimuls
jmp
jg
stos
adc
pop
adc
imul
daa
jle
cs
test
and
adc
scas
and
je
push
lock
data16
dec
loop
xor
enter
xorl
mov
out
or
jg
push
repnz
jae
add
or
push
add
cmp
enter
push
xchg
not
je
leave
ljmp
outsb
call
inc
stos
imul
add
xor
push
nop
mov
cmp
sbb
cmp
imul
dec
jg
adc
mov
int
inc
out
jmp
fstps
in
mov
inc
enter
add
xchg
add
mov
pop
rcr
mov
shr
cmc
mov
add
imul
enter
jp
cltd
jecxz
lea
lods
xlat
sbb
mul
push
std
ficoms
xlat
and
inc
cltd
lock
mov
mov
push
sbbl
leave
jmp
mov
in
sub
jo
jmp
repz
sub
xchg
hlt
pop
sub
and
pop
incb
jecxz
xor
fidivs
addl
push
call
rcll
mov
fistpl
shrl
push
jp
mov
adc
cli
sub
gs
jno
aaa
inc
and
fnsave
push
or
cmp
rcrb
xlat
in
cmp
popf
xor
sbb
sbb
push
addr16
mov
ja
xchg
scas
outsl
loop
add
movsl
fsubrs
rorl
add
or
jl
jbe
xor
dec
sub
rcrl
decb
add
outsb
outsl
add
adc
jle
mov
jns
dec
jo
loopne
jmp
bound
leave
xor
sbb
xchg
iret
ret
add
lods
xor
lds
js
inc
loopne
jge
and
loopne
in
loopne
scas
mov
jge
sbb
jl
sbb
hlt
lock
sbb
into
adc
addl
and
jnp
mov
jmp
inc
or
subl
pop
std
faddl
dec
adc
add
mov
scas
pop
cltd
imul
testw
decb
cli
mov
jmp
jle
mov
xchg
icebp
repz
cmp
adc
xchg
jge
jo
xchg
fnstenv
pop
lret
mov
in
or
roll
outsb
dec
popf
add
mov
roll
xchg
xor
popf
call
xor
bound
popf
fildll
lret
jg
and
pop
adc
pop
sti
repnz
sub
and
mov
bound
ja
push
sbb
sti
rol
ja
xor
add
nop
repz
mov
xlat
clc
sbb
sub
or
enter
push
std
add
dec
xchg
and
jge
xor
push
jnp
out
cli
inc
stc
dec
mov
pop
std
popa
mov
fbld
mov
pop
repz
mov
in
xor
sbb
into
clc
sbb
inc
jno
mov
aas
lret
loope
and
adc
ret
sarl
sahf
ffree
mov
cwtl
rol
clc
in
nop
push
adc
leave
or
and
xor
scas
jp
and
sub
sti
push
push
sarl
inc
repnz
out
fisubl
dec
scas
and
fs
mov
mov
add
in
inc
cmp
sbb
out
in
pop
je
rcl
popa
mull
sahf
push
adcl
pop
mov
stos
xor
mov
xchg
leave
dec
pop
add
xor
das
dec
stos
xchg
aaa
and
pop
icebp
test
mov
repz
dec
mov
bound
fnstenv
add
sub
addl
jp
imul
mov
scas
out
push
dec
xchg
in
pop
push
addr16
outsl
ret
dec
dec
push
popf
cli
int
ljmp
fisubrs
sbb
inc
pop
jno
push
scas
nop
xchg
mov
mov
jbe
stos
fidivrs
and
cli
mov
fcompp
lcall
lods
adc
pop
add
ret
jmp
push
or
sar
sbb
lds
rcrb
stc
fs
test
sbb
jge
jns
daa
jecxz
sub
mov
jp
add
pop
lcall
jge
push
push
inc
mov
movsl
insl
lock
aas
nop
ds
mov
or
dec
jp
iret
test
xchg
pop
je
dec
xchg
repz
loope
dec
xchg
mov
push
jg
cmc
mov
movsl
mov
add
mov
inc
sub
mov
adc
sub
lret
imull
jle
popl
dec
jmp
mov
test
fwait
fwait
mov
scas
fbstp
mov
pop
data16
push
es
outsw
in
xor
sti
xor
loop
mov
inc
and
pop
sbb
clc
mov
mull
push
sahf
clc
push
idiv
mov
test
inc
or
jecxz
push
loope
xchg
in
in
dec
cli
jno
push
call
gs
push
fucom
inc
je
and
popa
repz
lods
mov
push
cld
cltd
loopne
sub
cmp
push
mov
popa
sub
jo
add
xor
sub
dec
inc
std
ret
cltd
cltd
imul
dec
pop
loopne
mov
dec
in
cmp
out
add
jg
je
dec
push
in
popa
inc
lds
jb
xor
roll
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
sub
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
mov
add
mov
xor
mov
adcl
add
movzbl
sub
movzwl
adc
mov
and
movb
xor
or
xor
mov
lea
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
call
mov
dec
mov
jmp
mov
mov
adc
mov
xor
sub
andl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
and
movl
movl
add
mov
or
mov
jmp
and
pop
icebp
jae
lods
imul
into
sbb
in
push
jo
sbb
jo
jecxz
aas
scas
xor
sbb
xchg
je
cmp
sahf
add
fs
fcom
mov
and
push
xchg
cmp
loope
notb
lock
data16
rcr
mov
mov
mov
ficompl
fildl
stos
cmp
xchg
mov
loop
mov
cmp
pop
push
adc
adc
and
inc
pusha
add
dec
push
dec
icebp
cld
sub
popf
or
add
test
xor
lock
fcomi
add
xor
loope
push
scas
inc
iret
push
orl
shl
jmp
mov
adc
sbb
pusha
add
cmp
adc
ret
pop
push
xlat
pop
add
push
dec
push
mov
inc
lods
das
jno
icebp
sbb
loope
pop
xchg
pusha
lret
dec
repz
adc
dec
ret
leave
das
and
lock
shlb
xchg
mov
adc
das
mov
mov
push
jbe
mov
jnp
pop
movsl
repz
int3
push
inc
xor
mov
sbbl
add
movl
jmp
movl
mov
mov
inc
cmp
jmp
sbb
movsb
scas
xchg
sub
gs
fwait
aaa
xchg
sbb
jo
add
push
sti
jbe
lahf
je
out
ja,pn
lock
adc
jno
push
lock
psraw
jecxz
sbb
iret
clc
pop
mov
sub
mov
jle
mov
data16
add
subl
shl
clc
int3
aaa
jno
jo
addr16
cltd
cmc
push
lds
rcll
adc
xor
jne
push
mov
or
and
stc
ss
push
stc
out
jge
sbb
movb
stos
sub
adcb
pushf
movsb
icebp
outsl
pop
xchg
in
dec
insb
mov
popa
xor
jmp
call
in
adcl
mov
shrl
rorb
mov
subb
pop
ffree
pop
fdivr
out
rcl
sti
push
leave
adc
loope
shl
test
cwtl
or
push
das
sbb
jp
add
popa
pushf
push
cmp
mov
mov
add
pop
xchg
scas
lods
mov
push
inc
aad
xchg
and
mov
jb
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xor
add
cmp
jmp
inc
sub
xorb
jmp
inc
mov
sar
mov
jo
sbbb
pop
push
fsub
jbe
pop
mov
cmpsb
outsl
call
enter
call
cld
cld
add
aad
fsubs
lods
add
xor
cltd
stc
dec
push
lret
jmp
sub
aad
iret
pop
lea
pop
or
sub
jg
or
adc
and
rcll
mov
xchg
aas
dec
pusha
jo
push
inc
adc
test
test
andl
imul
mov
jbe
adc
rcrb
cld
mov
mov
sti
test
add
xorl
push
sub
out
out
sahf
dec
mov
jmp
cmp
xor
shlb
mov
pop
or
fstl
scas
fidivrl
lods
ljmp
ljmp
sub
ds
jle
mov
pop
mov
xor
push
add
fwait
push
sbb
push
test
sub
xchg
ja
lret
outsl
jae
xlat
pop
dec
push
sub
outsb
rorl
test
push
mov
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
jmp
cmpsb
fisubrl
jmp
orb
cmc
sbb
sbb
jo
mov
mov
out
ljmp
jl
jle
bound
fisubrl
lahf
sar
and
jbe
out
out
or
mov
jne
dec
fisttpll
mov
aaa
and
xlat
jp
mov
jnp
xlat
inc
dec
pop
sub
hlt
mov
fists
lahf
adc
js
push
inc
mov
rol
inc
fists
icebp
call
les
add
xchg
jp
lret
add
jae
test
pop
jae
cli
movsb
xchg
sub
jae
test
test
in
cmpsl
addb
push
shlb
pushf
sub
pushf
inc
loopne
pop
lcall
or
hlt
pusha
sub
pop
sub
pop
inc
dec
inc
cmp
inc
dec
mov
lods
push
gs
test
or
mov
es
mov
loopne
es
loopne
rorl
dec
mov
jae
dec
cmc
or
loop
xchg
xlat
sub
push
loopne
adc
cltd
sbb
mov
jmp
aaa
insl
pop
int3
push
jb
jno
pop
imul
sbb
sbb
jo
imul
outsb
and
xor
popa
repz
pop
mov
lret
cmp
add
mov
sti
and
cvtpi2ps
repnz
adc
mov
lret
imul
outsw
les
data16
call
sbb
js
xor
andb
int
loop
xlat
arpl
popf
xor
in
call
xchg
jp
std
xchg
add
mov
adc
sahf
test
pushf
mov
ljmp
mov
cld
mov
cmpsb
in
into
push
and
arpl
ljmp
subl
lcall
adc
xorl
dec
xchg
sub
cmp
sbb
outsb
sbb
lahf
sbb
mov
and
jle
cwtl
xchg
add
bswap
ss
pushf
js
pop
mov
mov
aad
fisttpll
scas
fsubrl
out
arpl
xchg
ss
mov
data16
add
xor
add
mov
mov
xor
add
jmp
ffree
adcb
mov
xor
jo
sbb
jo
add
idivl
iret
or
sti
jle
xor
pop
jl
adc
mov
cli
sub
ret
push
mov
lahf
sbb
insl
and
scas
divb
push
xor
dec
sbb
xlat
jns
mov
inc
gs
into
xchg
imul
hlt
in
jae
mov
popa
dec
xchg
mov
insl
cwtl
mov
xlat
mov
pop
pop
popf
mov
sbbb
pushf
xchg
jp
and
mov
insl
in
sbb
jb
lods
int3
and
mov
and
dec
out
test
int
subl
add
ret
push
scas
jno
xchg
into
push
imul
xor
scas
call
int
sub
dec
sub
adc
dec
xor
das
or
pop
xchg
jecxz
mov
clc
mov
and
clc
sarl
gs
mov
push
mov
adc
and
jp
pushf
cmpsb
push
or
or
add
cmp
je
mov
mov
jmp
scas
or
repz
test
rcr
cmp
fsubl
jo
sbb
jo
xchg
mov
pushf
out
ss
push
in
inc
enter
lret
add
aam
repnz
and
dec
lods
lock
cld
rcr
gs
out
cmp
sti
adcb
lret
icebp
mov
jmp
mov
mov
stos
pop
adc
adc
jo
mov
std
mov
add
and
push
lds
cmp
inc
bound
fdivrl
clc
or
je
sbb
xor
add
scas
gs
mov
scas
push
or
nop
cmpsl
cmp
push
mov
add
js
fldt
ds
or
xor
fsts
jb,pt
adc
push
adc
outsb
shll
mov
cld
fwait
rclb
adc
mov
mov
repnz
pop
sbb
xor
inc
xchg
xorb
pop
lcall
adc
data16
or
sbb
cmp
pop
mov
dec
pop
add
lea
movsb
bound
adc
push
mov
hlt
sahf
push
iret
fisttpll
xlat
or
push
or
add
test
pop
add
mov
jmp
dec
push
test
xor
popa
jns
xor
es
sbb
jo
adc
inc
insl
cmc
in
sbb
push
inc
pusha
lods
adc
push
rcrb
adc
or
cwtl
mov
and
pop
jg
mov
xor
inc
mov
or
test
ss
add
movsb
fcompl
xchg
dec
les
mov
xchg
add
adc
ja
lret
jge
sub
jle
mul
bnd
pop
xchg
enter
in
lds
or
xor
sub
xchg
leave
adc
cmp
jp
add
inc
cmp
cmp
ret
or
mov
cli
sbb
bound
fldcw
jle
fiaddl
lret
rorl
in
xchg
jo
iret
das
mov
jae
inc
cmc
inc
mov
xchg
rcr
jae
leave
stos
cli
sub
add
and
in
sub
jo
loopne,pn
test
pop
imul
add
lock
or
mov
xchg
dec
call
inc
or
pop
jge
add
int
or
xor
xor
fistps
mov
cmp
jmp
mov
gs
nop
sbb
sub
lods
and
jo
les
jnp
xor
cmp
popf
push
and
cld
mov
icebp
faddl
pop
int
mov
jmp
push
mov
frstor
add
xchg
aad
push
pop
mov
stos
cmp
sbb
jns
jecxz
dec
call
rclb
sbb
daa
cmp
pmulhuw
test
dec
ja
mov
mov
dec
mov
push
xor
push
jg
lods
xchg
inc
adc
pop
add
scas
fwait
lock
mov
mov
pop
icebp
mov
pop
cmp
xchg
or
lret
lret
xchg
or
mov
mov
cmpsb
data16
int
push
addr16
data16
dec
int3
out
sarl
imul
xor
inc
iret
push
or
or
hlt
mov
test
sti
adc
jo
shll
aad
and
jmp
jle
dec
inc
stos
test
fcmovnb
sub
jmp
jb
sarl
add
xlat
int
cmp
jp
push
popf
pop
bound
je
movl
jmp
aaa
dec
rcrl
jno
repz
enter
pop
sbb
jo
sbb
jo
mov
loopne
lods
mov
cmp
or
adc
in
mov
sub
pop
lret
push
xchg
cmp
push
mov
arpl
jb
loope
mov
loopne
push
xlat
jle
and
push
and
loopne
les
enter
fadds
sbb
bound
inc
testl
mov
rorb
mov
inc
ds
mov
fiaddl
push
movsl
inc
add
mov
popf
imul
movsb
jae
dec
fstps
ret
push
addr16
fwait
into
pop
pusha
ds
enter
xchg
cmpsl
jae,pn
data16
fisubl
sub
lret
lret
adc
jno
jnp
mov
jg
test
jbe
xchg
lret
cld
rep
outsb
loopne
xchg
cmp
push
aam
mov
adc
and
jg
outsl
add
sub
and
xor
jns
leave
pop
dec
movsb
pop
test
in
daa
sbb
push
movsl
shrb
pop
mov
inc
call
inc
in
addl
mov
mov
xor
lea
mov
jmp
mov
addl
jecxz
or
jl
jo
sbb
jo
scas
push
pop
dec
xlat
adc
fsts
loop
cmp
add
sub
jecxz
add
push
push
mov
jmp
push
push
inc
adc
push
jb
or
jne
lcall
aam
lock
mov
xor
enter
fisubl
dec
xchg
int3
gs
pushf
jno
add
xchg
mov
fwait
loopne
add
fwait
cmp
test
mov
pop
add
fninit
les
push
mov
lret
mov
shr
leave
cmpsb
fcomps
mov
adc
add
pop
xor
roll
sub
add
mov
cmc
int
fidivl
subb
push
jnp
push
mov
adc
mov
dec
xchg
push
mov
fistpl
pushf
ficomps
nop
xchg
adc
aas
in
pop
xlat
cld
mov
aad
leave
test
ret
push
shrl
outsb
loop
imul
add
mov
idivb
xor
cmp
scas
lods
leave
out
mov
incl
jmp
jmp
cmp
xor
sarl
cld
sub
test
jo
jg
jo
fmull
and
and
mov
mov
cmpsb
pusha
dec
or
jecxz,pn
pop
adc
ljmp
add
movsb
adc
sar
dec
adc
jo
xlat
inc
sahf
inc
mov
or
xchg
jbe
mov
push
sub
jl
cmpsb
cmc
incl
das
fldln2
and
into
es
das
cld
pop
stos
pop
cmpsb
dec
loope
orl
cmp
bound
jp
mov
fsubrs
std
cmpsb
aad
or
inc
mov
jg
nop
popf
dec
out
das
mov
or
pop
scas
dec
sbb
or
jecxz
xor
inc
xor
push
push
bound
pop
mov
pop
adc
inc
jno
jbe
jge
dec
in
push
mov
cli
mov
sahf
add
filds
mov
icebp
pop
push
mov
pop
push
and
add
push
fwait
divb
aam
stos
xor
std
pop
adc
lds
mov
pop
sbb
add
cmp
mull
std
cmpsb
inc
adc
adc
mov
jb
out
sarb
xor
mov
add
jmp
pop
adc
mov
es
xor
int3
and
sbb
jo
mov
sub
out
jl
dec
sub
inc
fdivl
push
pop
sbb
xor
icebp
repnz
mov
movsb
or
jb
ja
mov
jmp
mov
test
shll
mov
es
xchg
push
ret
pop
mov
inc
lret
sarl
mov
loope
movsb
inc
jge
out
adc
inc
imul
les
testb
inc
xor
pop
in
loope
xchg
aad
xor
adc
xor
pop
jecxz
sbb
rcrb
dec
test
mov
xor
fcomps
in
and
insb
aaa
rcl
mov
data16
inc
pop
mov
push
lcall
test
jne
decl
mov
push
mov
jmp
std
in
xor
mov
sahf
push
push
or
pusha
cmp
xor
cmpsb
adc
test
adc
pop
xor
and
sub
cmp
push
loope
add
ret
push
mov
push
push
subl
movl
movl
andl
xor
add
inc
mov
cmpl
jne
pushl
pushl
push
push
pushl
push
push
pushl
pushl
push
push
push
pushl
call
cmpl
jb
neg
mov
push
xor
mov
mov
xor
xor
mov
adcl
jmp
popa
sahf
cmpsl
mov
jno
mov
pusha
xchg
das
jo
fnstcw
jo
xor
inc
loop
pop
jge
mov
mov
fsubs
jg
fmul
inc
lock
dec
data16
pop
cld
push
pop
icebp
mov
inc
inc
mov
add
jecxz
lock
inc
icebp
jle
insb
adc
inc
stos
sub
flds
cwtl
dec
mov
bnd
xchg
mov
jmp
push
inc
movsb
push
pop
lcall
loopne
clc
nop
dec
in
add
loop
pmulhuw
add
clc
jns
nop
pop
movsl
push
fists
cmp
je
push
imul
stc
pop
cmc
cmc
fwait
xor
movsl
lock
lea
clc
ffreep
jmp
lret
push
sub
inc
pop
stc
and
cmpsl
add
mov
or
mov
lds
mov
jb
dec
test
pop
or
cmpsl
jmp
sahf
mov
adcl
ds
cmp
mov
fs
xchg
pop
lock
stos
mov
mov
dec
sbb
fimuls
mov
mov
call
mov
push
inc
add
mov
ret
mov
xor
js
sub
mov
inc
jnp
int
loopne
adc
fcoms
push
lds
jmp
in
in
cmp
jecxz,pt
pop
sti
pop
repz
adc
into
mov
test
hlt
or
scas
test
xor
xor
and
push
mov
jae
mov
scas
sub
lret
sahf
js
dec
pop
xchg
scas
cmp
cmp
rol
test
push
cmpb
or
movsl
ficomps
sbb
jge
testb
lcall
or
in
xchg
pop
and
pop
insb
cmp
lods
mov
je
ss
fldenv
fcomps
gs
or
pop
xor
push
and
insl
push
xor
jmp
out
cmp
addr16
or
mov
fstpt
lock
shlb
jnp
movsl
nop
push
jg
inc
fimuls
cmpsb
arpl
lret
lahf
push
dec
inc
adc
cmpsl
xor
loop
push
fwait
jecxz
fldt
or
das
loopne
insb
scas
ficomps
out
jb
lahf
sbb
insl
repnz
xorl
add
imul
movl
mov
movl
cmp
movl
jne
mov
mov
xor
jmp
test
cmp
push
popa
andl
adc
mov
sub
jo
fnstcw
jo
lods
push
cvtdq2ps
in
cmp
bound
popa
ja
xor
mov
and
loop
repz
pop
cs
xchg
outsb
dec
pop
adc
lcall
in
dec
jle
lods
push
jmp
cmp
cli
pop
bound
jmp
rorl
call
mov
add
mov
aam
clc
les
clc
or
xchg
inc
mov
mov
mov
scas
icebp
lods
push
dec
mov
pop
cmpsl
nop
loop
inc
mov
arpl
lret
imul
jecxz
adc
stos
pop
fcmovbe
ret
sbb
sti
xchg
and
dec
cmpsb
cmp
xlat
jmp
inc
cmp
cld
mov
xor
inc
insl
sub
inc
jle
jmp
cmp
mov
popf
lcall
mov
shl
data16
adc
xor
leave
test
inc
data16
pop
pop
pop
call
jl
jb
leave
mov
stc
loope
fisubrs
ficomps
call
jge
mov
xchg
pop
icebp
fmul
rclb
aad
or
pop
aaa
insl
test
sahf
dec
aad
decb
out
mov
or
mov
and
xchg
sub
jo
xorl
sub
test
mov
sahf
dec
mov
adc
stc
push
or
jno
sbb
rorb
shll
rcl
xor
mov
inc
int
pop
insl
out
push
push
repz
lret
dec
cmp
rol
in
mov
insl
cmpsl
insl
ljmp
cmpsl
outsl
xchg
mov
add
cmpl
jno
outsb
notb
adc
enter
sub
sbb
loop
cmp
inc
test
outsb
mov
cmpl
mov
pusha
xchg
xor
insl
outsl
in
xor
insb
movsl
rcr
xchg
push
add
iret
cs
jl
add
decb
jno
add
lods
mov
jl
ret
xor
mov
loopne
jnp
gs
cmp
mov
adc
and
add
sbb
cmc
insl
sti
mov
fdivrl
adc
cmpsb
jns
out
stos
rolb
insb
cmp
nop
sbb
pop
pop
mov
cmp
aam
nop
arpl
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
jmp
shll
add
ret
loope
and
or
fnstcw
jo
ret
ret
pop
lret
stc
pop
xorb
testl
pushf
cmc
adc
stc
fwait
pop
icebp
mov
into
iret
ret
fwait
out
pop
nop
bswap
cmp
and
mov
fs
mov
mov
dec
adc
add
mov
push
xchg
adc
lea
dec
push
scas
adc
mov
mov
pop
jle
movsl
das
ret
mov
mov
inc
push
mov
pop
cmc
jae
icebp
addr16
adc
xchg
jp
cwtl
fldcw
mov
jae
out
sbb
inc
lcall
sub
test
pop
inc
or
clc
loopne
pop
std
arpl
addr16
push
popf
cld
rorl
jnp
jle
inc
jns
adc
lods
sub
lea
jns
jl
pushf
insl
int3
stc
pop
pop
lods
adc
sub
jnp
and
and
adc
jb
fs
inc
pop
in
movsl
mov
movsb
je
mov
xchg
xor
xchg
scas
inc
into
xchg
mov
xchg
je
test
mov
addr16
xor
xchg
mov
in
mov
sub
aas
xor
sub
push
or
xor
sbb
ds
mov
dec
stos
pop
rcll
test
sub
mov
fdivl
jle
mov
stc
ljmp
push
mov
mov
sbb
push
lock
call
popa
imul
imul
add
test
pop
or
shlb
sub
imul
outsb
mov
fisubs
push
lcall
pop
mov
inc
xor
sub
test
jns
outsb
jle
std
ja
outsl
test
stos
inc
in
notb
outsl
ret
test
cld
jl
int3
hlt
pop
mov
mov
loopne
pop
nop
into
inc
jecxz
popf
mov
out
mov
add
pushf
lds
mov
movsl
sub
loop
cmc
xor
push
mov
aas
repz
sbb
xchg
ss
mov
ss
mov
push
rorl
push
sahf
xchg
aaa
sub
icebp
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
movl
mov
mov
mov
adcl
xor
add
andl
mov
mov
mov
sub
xor
mov
dec
xor
dec
jmp
loope
xchg
fdivs
jno
addl
call
les
jo
es
stos
jnp
mov
mov
push
aad
out
inc
lods
mov
push
arpl
cmp
hlt
and
push
jnp
test
jp
test
xor
enter
jecxz
pop
xor
cmp
aad
cwtl
dec
dec
add
and
push
mov
xchg
xor
adcl
mov
mov
iret
bound
xchg
push
iret
repz
mov
out
mov
xlat
adc
and
push
pop
pop
or
dec
sbb
sbb
loop
or
mov
inc
loop
inc
push
cmp
mov
cmp
adc
cmc
lds
xor
fxch
insl
sbb
repnz
stc
repz
fwait
dec
int
xchg
xchg
scas
jecxz
test
fists
mov
adc
xchg
pop
mov
push
stc
outsb
mov
mov
int3
add
xchg
and
int3
and
dec
inc
lret
call
scas
stc
adc
mov
test
in
cmp
sub
push
mov
cmp
inc
scas
adc
xor
push
lea
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
mov
adcl
add
mov
movzbl
and
mov
mov
movl
mov
xorl
mov
mov
mov
mov
mov
mov
mov
mov
jmp
hlt
and
arpl
jno
scas
mov
imul
jo
jg
jo
test
push
and
jp
push
add
cmp
stos
xchg
aam
popa
out
cmp
test
add
sar
aaa
ljmp
jl
push
or
jns
out
pop
subb
addr16
addr16
shll
loop
adc
fidivrl
clc
inc
dec
imul
jns
cld
stc
lret
cmp
jo
cli
fbld
mov
push
pop
push
in
js
adc
mov
out
fwait
jmp
scas
aam
sbb
xor
pop
ss
inc
outsb
insb
dec
enter
mov
add
xchg
jmp
cmpsb
loop
sahf
sbb
outsb
lcall
xchg
xor
ret
aam
xor
xchg
ror
jecxz
jle
xlat
mov
fnstenv
adc
mov
mov
dec
adc
cmp
int3
jecxz
rcll
pop
sub
sub
jge
mov
fidivs
addr16
fcmovu
inc
loop
add
pop
sbb
mov
xor
lock
lock
mov
sub
dec
mov
pop
test
inc
push
aaa
pop
rorl
add
pop
leave
ret
push
mov
mov
xor
jmp
cmpsl
sub
mov
mov
add
jo
les
jo
imul
js
dec
mov
mov
shl
call
shr
int3
dec
addr16
pop
inc
lret
sub
out
sub
nop
sbb
jp
repz
adc
inc
add
jp
adc
aaa
inc
xchg
adc
ds
xlat
ret
pop
sbbl
lods
lods
or
xchg
mov
sbb
test
cmp
dec
cmp
or
stc
or
fs
mov
jne
lds
pop
lock
sub
mov
in
jns
jo
sub
push
dec
rcl
jecxz
jnp
push
stos
or
fcmove
movl
imul
xor
adc
movsb
xor
push
sbb
pop
int3
into
adc
imul
cmp
in
leave
pop
lods
jp
pop
into
mov
jl
test
mov
mov
shll
jne
inc
inc
mov
das
fnstsw
addr16
fdivl
pop
es
fisttps
push
push
lret
jle
add
cltd
pushf
leave
mov
and
or
in
lods
pop
mov
mov
popa
push
mov
arpl
cli
adc
test
icebp
mov
and
or
mov
pop
ret
push
mov
push
movl
add
mov
mov
mov
mov
add
mov
xor
subl
add
xorl
mov
incl
mov
subl
mov
mov
mov
mov
adcl
mov
mov
mov
subl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
leave
ret
push
mov
sub
add
mov
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
adcl
mov
mov
mov
adc
movl
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
push
push
push
pushl
push
push
push
push
push
call
jmp
sbbl
mov
push
sbbl
push
push
mov
andl
jmp
mov
jmp
sub
les
jo
jge
jo
pop
inc
loop
jmp
cltd
mov
dec
push
repz
push
dec
sti
xor
jp
insb
loop
idivb
xor
lock
adc
mov
test
inc
imul
jne
dec
and
out
dec
push
call
or
test
ljmp
adc
xor
inc
sti
inc
ljmp
in
pop
cmc
jmp
movsl
ss
lahf
loop
loopne
js
testl
dec
mov
inc
dec
test
adc
mov
in
or
push
sub
mov
pop
out
dec
cmc
and
add
push
cwtl
push
push
sbb
xor
sti
das
and
stos
inc
out
inc
and
jae
test
jecxz
xchg
daa
and
cld
fnstsw
sbb
push
dec
js
inc
adc
inc
xchg
or
leave
vpsubsb
dec
ret
sub
jnp
push
and
test
loope
pop
lods
out
js
dec
lods
jb
rcll
sti
mov
loop
push
add
icebp
loope
mov
dec
cmp
lea
les
mov
push
jns
cmpsl
pop
mov
pusha
mov
mov
shrb
adc
push
pop
sbb
loopne
cmpsb
shr
jl
aam
hlt
xor
xor
sti
aam
jnp
adc
fs
movsb
mov
or
inc
pop
jne
jb
mov
pushf
stos
add
ja
add
es
loope
inc
test
pop
and
cmp
orb
dec
inc
pop
bound
sbb
dec
popf
std
icebp
push
std
lcall
test
mov
int
xchg
test
mov
icebp
shlb
lret
mov
movsl
pop
addr16
mov
movsb
shl
sub
stc
lahf
inc
lea
arpl
or
imul
stc
into
lds
enter
or
xor
scas
mov
sub
popa
cmp
ja
out
jbe
stos
add
mov
push
cmpsl
scas
sbb
insl
cltd
ret
stos
outsb
sub
dec
dec
dec
push
out
cmc
jb
stos
popl
lods
jns
test
enter
iret
hlt
ljmp
inc
and
mov
test
adcl
ret
xchg
mov
jp
adc
insl
inc
xor
push
adc
ror
mov
mov
jle
push
cmpsl
jns
outsl
popa
sbb
xor
fwait
or
fcmovu
loop
leave
gs
jno
mov
xchg
xchg
or
fdiv
mov
mov
mov
cmp
push
ss
cmc
dec
dec
dec
int
data16
jecxz
adc
xor
test
add
les
adc
cltd
lret
pushl
xchg
lret
push
mov
shl
xor
frstor
xchg
mov
shrl
mov
cmp
test
pop
xor
add
mov
andl
add
jmp
xchg
test
xchg
jno
xchg
js
out
pop
stos
mov
jge
jo
loopne
jp
aas
inc
cmp
or
lret
into
jecxz
add
movsl
or
or
data16
adcl
pop
jecxz
lods
jl
push
dec
ret
in
jmp
dec
jb
scas
add
and
mov
dec
xchg
mov
mov
mov
mov
lcall
mov
test
bound
add
sub
cmp
push
test
negl
jl
scas
lret
push
ss
inc
jns
insb
ret
adc
add
clc
xchg
jns
mov
and
mov
sti
loope
stc
testb
rcl
xchg
movsb
es
lods
sbb
jno
xor
jg
leave
lea
mov
cltd
push
pop
iret
add
test
xchg
cmpsb
hlt
jb
and
or
sub
add
lret
mov
int3
cmp
jno
loope
adc
movsb
pop
sub
stos
xor
pusha
inc
jae
push
out
xor
adc
jg
jecxz
lret
xchg
xlat
jmp
imul
cs
ret
ljmp
push
pop
xchg
fsubp
sub
mov
pop
mov
pop
ja
cld
ss
jg
in
je
xor
mov
shl
jae
repz
mov
lcall
add
aaa
jne
ret
mov
test
push
mov
cltd
xchg
adc
testl
arpl
inc
xlat
add
pop
punpcklwd
mov
lcall
ljmp
add
imul
mov
mov
adc
in
outsl
mov
mov
ret
push
adc
ss
mov
mov
cwtl
mov
xchg
fnsave
roll
mov
orl
test
or
xor
test
inc
sbb
cmp
mov
repz
cmova
in
stc
xchg
jno
add
pop
xlat
std
std
lea
dec
sti
add
mov
ficoms
push
jo
subl
movsb
push
mov
movsb
enter
mov
dec
and
push
pop
mov
inc
lahf
push
std
leave
mov
stos
aaa
bound
cmc
dec
jae
mov
scas
mov
mov
push
pushf
hlt
jbe
outsl
xor
ret
loope
mov
shl
sub
fs
inc
popf
jge
cltd
sub
js
jge
subl
inc
shl
mov
cmp
les
out
fwait
jl
enter
mov
mov
sbb
push
push
or
mov
push
jg
dec
cmp
add
test
int3
xor
jmp
cld
sti
lahf
adc
cmp
inc
std
aad
out
aaa
push
xchg
das
or
push
jge
cmpsb
call
stos
push
push
pop
cmpsl
lock
and
ja
push
mov
add
jl
ja
mull
cld
sbbb
out
mov
sbb
sub
lods
adc
pusha
fidivl
mov
xchg
std
and
bound
jle
ret
pop
xchg
xchg
ljmp
sbb
loopne
xor
hlt
and
fdivs
mov
clc
movl
movl
xor
movl
xor
mov
subl
xor
addl
add
adcl
mov
movl
sbb
movb
or
mov
xor
add
mov
neg
mov
sbbl
xor
add
subl
push
sbb
mov
subl
xor
adcl
add
push
add
mov
addl
xor
add
addl
push
lea
push
pushl
adcl
pushl
call
subl
jmp
test
xor
mov
test
push
fcmovb
ffreep
cmc
mov
imul
jo
jge
jo
and
bnd
jecxz
sub
mov
adc
mov
xor
mov
xchg
stos
jo
dec
push
rorl
adc
call
lret
shll
cmp
je
movsl
xchg
imul
aaa
dec
xor
jnp
inc
addb
pop
sub
mov
icebp
fsts
scas
push
pop
mov
or
iret
fwait
inc
scas
in
jecxz
inc
and
xchg
mov
shll
shrb
sub
xchg
sub
or
mov
push
push
inc
leave
add
xchg
jmp
inc
dec
mov
sub
inc
mov
jp
xor
jg
enter
push
lds
lret
cmp
sub
jb
inc
xchg
mov
jge
inc
cs
fidivl
fisttps
xchg
mov
mov
push
xor
inc
stc
push
out
fsubrs
mov
push
repnz
aam
dec
pop
and
xor
lods
fs
cs
inc
fnstsw
cmp
sbb
stc
sbb
call
outsl
pop
xor
mov
rcr
adc
mov
in
aam
push
mov
cwtl
mov
or
cli
and
ror
jecxz
cmc
inc
mov
xchg
cmp
mov
fistl
add
add
movsl
dec
pop
in
mov
jne
mov
push
movsl
test
fisubrl
in
cmc
mov
add
sbb
push
int3
dec
sbb
stos
pop
mov
cmp
and
aas
jecxz
mov
aas
inc
cmp
lods
pop
push
jo
pop
sub
dec
icebp
push
add
rcrb
sar
dec
mov
mov
mov
jp
pop
jae
xchg
pop
test
in
mov
sahf
sbb
ror
jecxz
ret
cld
sahf
dec
mov
mov
xchg
mov
mov
daa
push
pop
outsb
xchg
fs
adc
sub
xchg
and
pop
movsb
cltd
or
imul
sarb
mov
cmp
and
or
xchg
int3
sub
cltd
call
jo
inc
clc
ficompl
nop
or
xchg
cmpsl
daa
inc
fldt
ja
mov
loop
jne
sbb
ror
imul
daa
je
mov
cmp
inc
jbe
push
mov
push
fs
cmp
imul
adc
nop
into
subl
add
icebp
mov
dec
cwtl
cmp
mov
loope
mov
dec
push
lahf
or
jl
sub
int
cmc
fwait
xchg
add
add
sahf
adc
out
push
insl
in
mov
ss
addr16
adc
mov
insb
adc
nop
mov
xchg
xchg
cmpsb
icebp
cmc
lods
insl
les
fisubrl
mov
cmpb
or
jmp
jl
fstcw
test
add
inc
inc
add
add
je
lea
sbbl
push
sbbl
mov
andl
xor
add
push
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
add
push
mov
mov
pushl
call
mov
cmpl
lea
mov
je
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
jmp
mov
add
mov
aaa
mov
imul
jge
jo
rclb
cmp
inc
shlb
movsl
pop
icebp
mov
sbb
xchg
pop
fldenv
and
loopne
imul
out
and
dec
or
sbb
incb
dec
sub
loope
cld
mov
inc
imul
test
inc
fs
adc
add
sbb
test
mov
shlb
hlt
mov
inc
jo
and
cmpsl
push
mov
enter
stos
test
jmp
jg
jge
sbb
es
nop
jns
int3
pop
gs
or
mov
leave
add
out
cmpsb
loop
mov
lods
xchg
icebp
jg
inc
sbb
nop
out
pop
dec
in
outsb
cwtl
mov
jns
and
lods
mov
xor
xchg
inc
mov
mov
dec
mov
mov
cmp
popa
add
call
jbe
mov
mov
es
push
jle
mov
xor
cli
out
pushl
push
pop
mov
cmp
adc
notl
mov
daa
mov
mov
pop
adc
fs
cld
pop
int3
ficoml
mov
jne
add
xlat
ds
add
xchg
aad
test
imul
or
jb
jecxz
aas
dec
jp
outsl
jl
dec
in
cmp
adc
mov
inc
arpl
xorb
je
inc
push
jbe
lret
stos
es
cmc
pmulhw
pop
mov
das
adc
out
pop
ret
push
mov
mov
push
pop
je
push
cmp
pop
cld
mov
pop
arpl
push
nop
shl
mov
cltd
mov
scas
jne
mov
in
cmp
mov
mov
pop
loop
pop
ret
jge
push
or
loop
std
jo
pop
xchg
bound
sub
sub
dec
xorl
mov
cwtl
loop
imul
cli
scas
add
outsl
inc
mov
mov
int3
loope
jge
adc
movsb
pushf
inc
pop
mov
movsb
jns
xchg
inc
fwait
cmp
jge
pushf
addr16
je
fcoml
inc
xchg
cmpsl
jae
iret
out
aaa
push
lret
ljmp
js
lret
cmp
mov
popa
push
mov
mov
lods
push
pop
mov
sub
sbb
push
movsl
mov
mov
pop
mov
ds
jbe
xor
les
mov
pop
ss
mov
jns
int3
push
clc
sub
sub
in
add
and
lahf
push
fisubrs
cmc
sahf
push
push
psrad
cltd
je
push
aas
mov
mov
push
inc
divl
cmp
gs
push
lock
lea
push
ret
test
repz
mov
es
hlt
and
inc
stc
sarb
or
jecxz
ror
and
pushl
pushl
call
test
je
lea
jmp
enter
outsb
bound
adc
dec
mov
and
jo
push
shlb
push
mov
cmpsb
or
push
repnz
andl
sub
test
int3
js
test
decl
dec
adcl
addr16
jecxz
pop
mov
popf
std
jnp
push
divb
xchg
sbbl
out
lods
popa
pop
adc
pop
jle
fnstsw
incl
testb
popa
jb
out
xchg
sub
rcrb
lret
les
and
sub
iret
push
mov
inc
mov
jmp
fdivs
jecxz
stc
mov
cmp
jne
pop
adc
ret
mov
push
add
insb
jle
in
sbb
lods
mov
push
push
or
push
sarl
lods
xchg
inc
into
inc
dec
xor
ljmp
sbb
add
js
pop
pop
mov
jge
aaa
insb
push
into
push
in
stc
les
pop
sbb
add
dec
scas
in
arpl
and
mov
mov
push
adc
dec
xor
iret
jo
jmp
and
cmp
xor
loop
lahf
mov
sub
sahf
subl
xor
cmpsl
cltd
lret
xchg
adc
movl
cmpsb
push
fists
jne
push
insb
or
out
xchg
ljmp
outsl
arpl
sahf
sub
add
mov
arpl
xor
cmpsb
mov
stc
jns
inc
sti
mov
test
aad
outsb
mov
loope
inc
and
shlb
mov
jmp
dec
inc
jmp
sbb
popa
int
inc
fistpll
flds
pavgw
or
subb
cs
pop
cmp
or
rcll
jno
pop
xor
ja
lods
test
cwtl
fiadds
fisubl
pop
mov
xor
mov
loope
stos
jg
dec
adc
or
sbb
bound
notl
mov
fistps
mov
dec
movsb
outsb
outsl
cs
push
xor
out
or
pop
in
mov
lods
cmp
out
popf
es
mov
lds
je
rcr
xchg
cld
xchg
movsl
sti
rcll
ja
je
mov
pop
mov
js
cmp
push
lock
push
pop
and
mov
jmp
loopne
daa
dec
sub
out
test
dec
pop
adc
sbb
add
outsl
mov
or
ret
lret
nop
icebp
leave
inc
mov
mov
or
les
hlt
cltd
ljmp
mov
sbb
or
ret
or
push
mov
cmpsb
fwait
dec
in
rol
icebp
pop
pop
inc
or
inc
dec
lea
negb
sahf
lcall
cmc
lret
ds
clc
jg
jmp
jmp
and
add
lret
popa
push
xchg
sub
and
mov
lds
jle
shlb
mov
aas
sub
push
dec
sbb
aam
push
push
push
mov
xor
add
push
mov
add
push
mov
jmp
inc
jmp
cwtl
loope
inc
pop
mov
mov
sti
les
and
jo
flds
ja
push
push
mov
loop
pushf
mov
xchg
lock
inc
xchg
push
js
adc
xor
inc
dec
push
mov
std
dec
insb
push
push
scas
dec
inc
stc
repz
jge
cmp
test
add
inc
mov
cmp
mov
sub
leave
jns
movsl
pop
mov
jb
sbbb
sub
add
xchg
jp
ror
iret
sti
pop
add
or
sub
mov
pop
int
popa
lea
outsl
fmuls
dec
call
in
and
mov
jnp
gs
cmc
scas
hlt
sbb
outsl
hlt
addr16
lea
fsubrs
or
add
daa
mov
loopne
lds
push
scas
mov
push
lret
adc
stos
enter
mov
xor
pushf
mov
xchg
xlat
push
cmp
mov
mov
popa
mov
in
dec
test
mov
cmp
mov
and
rol
and
cld
or
mov
sub
fcoms
icebp
pop
pop
bound
bound
and
in
adc
sbb
addr16
mov
xor
mov
add
out
repnz
sub
pop
nop
add
mov
je
in
mov
ja
push
cmpsb
cmp
fistpl
jne
push
icebp
cmpsb
mov
ret
jmp
test
mov
xchg
dec
sub
adc
sub
add
inc
fwait
cli
add
imulb
pop
adc
pushf
jb
dec
or
jo
dec
or
inc
adc
dec
fsub
addl
repz
inc
movsb
fstpt
adc
and
mov
sbb
xlat
ja
daa
out
daa
inc
pop
stos
adc
push
sbb
in
fcoms
repz
test
mov
test
mov
inc
xchg
pop
cltd
sbb
cwtl
dec
or
jecxz
imul
sbb
lret
data16
push
scas
fdivs
push
cmp
push
daa
sub
cmp
xor
xor
ja
mov
iret
push
mov
adc
insb
adc
pusha
push
dec
shlb
fdivrs
or
aaa
inc
call
fcmovne
lods
sbb
movsl
jle
sub
sub
jle
dec
xchg
dec
pop
nop
pop
mov
xor
icebp
sub
mov
dec
inc
shl
inc
cmpsl
inc
mov
jge
cltd
pop
sbb
ss
imul
cs
adc
enter
push
fisttps
xchg
jg
fdivs
or
shrb
ficomps
cmp
xchg
adc
and
add
ret
add
sub
fs
std
mov
js
push
push
ss
jae
shll
repz
dec
cli
movsl
xchg
repz
cwtl
cmp
sbb
push
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
jmp
sub
cs
cs
mov
sbb
into
fnsave
stos
shll
jge
jo
int
cmpsb
dec
xchg
ret
pop
lret
das
fwait
lcall
pop
mov
hlt
dec
call
cli
jae
mov
aad
scas
cli
movq
xorl
arpl
repnz
mov
add
push
mov
mov
push
jp
or
lds
les
jbe
add
mov
test
inc
dec
lds
mov
xlat
rcrb
jo
inc
jg
call
jbe
ret
pop
leave
dec
jl
fistpl
cmc
fwait
sbb
sbb
lret
sub
push
addr16
int
push
clc
das
daa
sub
add
mov
sub
mov
ja
es
add
std
nop
icebp
pop
loop
mov
add
add
ss
cmp
sub
movsb
push
movsl
jp
pop
mov
fs
pop
mov
fwait
mov
test
outsb
pop
cltd
insb
repz
push
xlat
addr16
jno
rcrl
xchg
subl
cmp
and
inc
mov
fsubp
push
int3
stos
movsb
stc
dec
mov
insl
out
je
or
jp
and
cltd
inc
test
aas
addr16
not
adc
mov
push
leave
adc
push
loopne
inc
xor
in
lcall
mov
repnz
push
pusha
add
inc
iret
pop
movsb
pop
push
sti
inc
rcll
add
adc
sub
dec
cli
jmp
fnsave
inc
adc
push
mov
mov
lcall
mov
repz
aaa
jae
push
sub
roll
mov
adc
dec
sbb
fistl
or
xchg
jne
cmp
jb
mov
jne
mov
mov
cmc
lret
mov
les
popa
mov
lcall
cmc
gs
ret
push
sub
pusha
sahf
dec
and
inc
mov
xchg
ljmp
inc
sub
lret
nop
jle
dec
dec
xchg
mov
jb
fwait
notl
cld
xorl
out
dec
and
cmc
test
and
sbb
pop
testl
mov
xor
cmp
js
mov
gs
mov
jge
pop
xlat
mov
or
inc
daa
dec
adc
enter
loope
popf
stc
data16
rcll
sub
fs
xchg
dec
mov
sub
xchg
cmc
pop
add
neg
inc
dec
call
mov
mov
sti
insl
adc
push
pop
test
ficomps
mov
movsb
sub
enter
popa
out
sbb
add
loop
pop
repnz
pop
mov
scas
dec
cmp
inc
pop
cmp
sbb
xor
or
cli
sbb
stc
pop
ret
mov
fsubrl
adc
aad
xchg
cmp
mov
sbb
push
scas
in
adc
or
rcrl
or
jne
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
call
mov
mov
add
pop
pop
pop
leave
ret
push
mov
sub
push
sbb
mov
mov
mov
sub
xor
mov
adc
mov
movl
sub
movl
mov
andl
xor
add
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
mov
or
xor
mov
adc
add
mov
or
mov
adc
mov
sbbl
xor
add
mov
or
mov
mov
inc
movl
movl
cmpl
je
cmpl
jne
call
xor
add
dec
mov
jmp
mov
mov
sub
add
jmp
fldcw
cs
mov
jae
shll
adc
les
jo
imul
scas
and
movsb
mov
movsb
pushf
subb
lods
rorl
or
loopne
js
movsb
nop
sub
and
xor
fs
out
mov
mov
lock
jne
ret
test
ss
add
sub
sbb
pop
sub
push
dec
pop
jmp
mov
in
cs
cmp
je
xlat
push
mov
mov
or
cmp
aas
data16
jmp
inc
pop
ss
cwtl
and
adc
or
aad
loope
sub
push
jg,pn
or
negl
sub
sub
xlat
test
sub
jne
mov
int3
or
pop
sub
dec
push
add
pusha
push
loopne
or
xlat
cwtl
and
mov
imul
inc
adc
mov
fwait
cmp
mov
sub
inc
stos
in
dec
cltd
push
stos
push
adc
test
pop
adc
mov
daa
popa
pop
and
mov
sub
cmp
ret
subl
push
add
pushf
call
pop
std
cmp
imul
fisubrl
sub
xor
out
inc
jg
test
mov
dec
mov
xor
and
push
in
inc
sub
xchg
loopne
mov
push
enter
or
das
andb
and
dec
leave
or
nop
cmpb
sbb
popa
xor
stos
adc
or
push
pop
adc
int3
leave
mov
test
int3
fwait
std
cmc
push
jne
inc
fwait
lahf
xchg
aam
xchg
lods
jmp
jns
push
or
cli
push
adc
test
push
adc
rol
inc
fdivs
test
inc
add
inc
aam
test
inc
add
cmp
movl
movl
and
movl
jmp
lods
mov
jno
fidivl
fwait
sbb
jo
jg
jo
mov
jg
add
fwait
mov
movsl
insb
call
insb
movsb
mov
mov
push
and
add
pop
fucomi
into
push
into
adc
pop
or
mov
jae
dec
loopne
pushf
sarb
cli
arpl
pop
lods
inc
add
enter
insl
xchg
orl
es
mov
cmpsb
and
mov
ja
rcl
sub
mov
ret
inc
call
jg
mov
inc
jo
mov
or
data16
aad
ljmp
ljmp
enter
xchg
fs
not
loope
push
inc
dec
sbb
pop
sub
pop
je
repnz
adc
int
out
inc
sbb
dec
orb
and
adc
and
adc
cwtl
jl
stos
ljmp
orl
stos
xor
outsl
pop
cmp
pop
call
xor
push
mov
inc
mov
cltd
lahf
dec
dec
imul
add
inc
adc
push
add
insb
clc
jns
pushf
mov
call
or
sub
popf
xor
add
push
mov
ror
loopne
mov
xchg
mov
dec
jnp
stos
and
sbb
mov
mov
inc
mov
mov
sub
inc
inc
stos
fs
insl
lret
mov
jle
lcall
mov
jbe
xor
pushw
sub
loope
arpl
sub
cmp
sbb
and
testl
cli
lea
js
repz
popa
xchg
sub
outsb
lods
push
xor
lods
mov
lea
adc
mov
push
mov
scas
lods
adc
mov
pop
sub
jecxz
mov
mov
pusha
movl
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
mov
xor
sbb
mov
add
cmp
jmp
mov
jae
xchg
xor
xchg
jo
imul
xchg
push
cmp
ss
out
out
pop
in
inc
push
xlat
or
inc
inc
cli
adc
mov
inc
xchg
cld
dec
andb
fcomps
and
jno
insl
in
loopne
iret
jmp
cmp
lahf
testb
push
jg
xor
les
clc
add
ror
cwtl
fldt
negl
xor
repz
and
push
sub
dec
inc
in
jne
outsb
mov
mov
mov
scas
shlb
cwtl
and
push
xchg
xchg
fsubrp
cmp
adc
sub
fmul
pop
adc
test
push
xor
pop
mov
and
test
loop
nop
pusha
xor
jl,pn
test
push
in
inc
or
push
mov
inc
jle
add
stos
or
ret
pop
mov
push
dec
jl
jge
mov
jno
inc
push
hlt
push
add
sbb
lock
cmpsb
popa
cmc
div
ret
xor
jg
fdivrp
pop
xchg
ret
pop
pushf
mov
push
and
out
lea
sarb
in
into
inc
aas
enter
mov
out
gs
xlat
xchg
or
movsb
shrl
ss
shll
xchg
push
cmp
lds
lods
scas
ds
lods
std
fcom
lahf
pop
xor
shr
insl
adc
cltd
cmc
xchg
mov
mov
into
pop
int3
xor
lods
and
xchg
loop
repz
sbb
aaa
aas
popf
sub
outsb
pop
inc
cld
push
push
loop
inc
xor
push
push
fcompl
sub
cmp
ljmp
sub
ret
stc
adc
out
xchg
es
push
mov
jle
loope
je
push
movl
jmp
movl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
jmp
jmp
adc
inc
jno
pushf
jo
daa
push
xor
jo
imul
lds
or
push
mov
in
add
lea
jae
xor
add
push
mov
push
out
std
sub
xchg
or
dec
lock
cld
repnz
das
dec
in
pop
jmp
xchg
cmp
js
push
mov
push
sbbl
add
jmp
hlt
addb
addr16
fldcw
dec
mov
or
mov
fbld
xchg
rcl
clc
xlat
cmp
divl
pop
loopne
cmpsb
xchg
lock
mov
stos
mov
jg
pop
sub
mov
dec
jno
mov
pop
ret
sub
mov
jg
les
cmp
jmp
loopne
into
rcll
icebp
push
shl
pop
fimull
inc
push
cltd
and
int3
je
pusha
add
shl
mov
js
inc
in
and
sbb
lret
cmc
xor
stc
into
lret
mov
test
std
repz
or
add
ja
cwtl
test
jnp
and
and
enter
add
sbb
jmp
mov
insl
fld
pop
dec
dec
cmp
icebp
je
xor
sarb
clc
iret
dec
sbb
leave
and
mov
scas
nop
fildll
or
jne
sbb
lods
mov
movsb
nop
and
pushf
sti
sbb
dec
pusha
bound
sbb
das
cmpsb
add
xor
in
enter
iret
pop
or
loopne
mov
xchg
cwtl
insl
rclb
les
mov
push
popf
xchg
clc
pop
clc
and
lods
push
jmp
dec
in
adc
mov
fstpt
push
test
dec
mov
inc
pop
arpl
jnp
push
insb
fstl
dec
inc
enter
inc
add
outsb
sub
mov
xor
sbbl
add
movl
cmp
movl
jmp
sbb
pop
mov
loope
push
inc
test
xchg
inc
fucomp
mov
jg
jo
dec
imul
inc
mov
dec
mov
adc
push
into
jl
xchg
dec
test
nop
xchg
or
pop
mov
push
loop
xor
mov
lret
mov
push
movsb
fbld
and
xchg
aaa
xor
into
xchg
outsb
idivl
je
pushf
and
jae
test
repnz
mov
fisubrs
call
nop
push
bswap
push
dec
push
rcrb
in
sub
jl
stos
cltd
sbb
pop
mov
clc
cli
pop
jle
les
pop
mov
jae
pop
ljmp
nop
insb
mov
inc
cwtl
push
xchg
sbb
cli
xchg
into
je
fidivrs
or
xchg
lock
lea
and
sti
cmp
scas
jle
or
xor
inc
repnz
inc
and
mov
cmp
hlt
add
movsl
mov
pop
addr16
movsl
js
xor
add
xchg
jae
sti
lea
push
xchg
adc
inc
jle
int3
jbe
cltd
and
add
movsb
jnp
cmp
das
and
xor
fwait
aaa
cmp
lahf
mov
popf
adc
inc
inc
insb
or
pop
mov
fbld
add
fsubs
push
outsl
push
pop
pop
mov
jp
dec
pop
cld
loope
push
and
out
jne
pop
jo
pop
pop
mov
ss
outsl
mov
pop
xchg
dec
and
mov
adcl
add
jbe
cmpsl
xchg
pop
xchg
pop
daa
out
cmp
ss
and
lods
xchg
inc
pop
in
pop
mov
fucomip
movsl
fwait
mov
es
mov
jecxz
xor
xor
pop
xchg
sti
sbb
outsl
leave
cmpsb
xor
sub
inc
mov
inc
dec
pop
add
int3
mov
scas
mov
ljmp
mov
sbb
mov
xor
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
add
mov
add
add
add
imul
mov
mov
or
mov
sub
cmp
movl
ja
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
adcl
jmp
rcrl
popf
push
stos
arpl
xlat
movsb
push
sahf
test
jo
imul
push
mov
scas
jl
mov
cli
clc
mov
cmp
mov
nop
loopne
rorl
add
inc
adc
mov
in
sbb
pop
ljmp
es
das
loop
add
sbb
pushf
sbb
mov
ficomps
adc
mull
dec
or
adc
mov
add
mov
in
sbb
or
ja
adc
sbb
inc
out
jge
fidivl
push
fcmovb
adc
push
je
je
cmpsl
mov
ljmp
in
fstl
xchg
popa
popf
pop
mov
call
add
xorl
in
stc
jbe
fimuls
aaa
decl
push
hlt
scas
int3
movsb
lahf
clc
shll
xor
add
mov
dec
adc
les
frstor
clc
shl
mov
icebp
scas
dec
cmp
xlat
xlat
out
fbstp
mov
repnz
xchg
jge
mov
fcoms
xchg
mov
mov
or
out
xor
outsl
jae
xchg
lcall
pop
mov
sbbl
mov
sbb
cmp
scas
sbb
dec
sub
xor
jmp
cmp
push
fsub
push
fcom
xchg
mov
add
xlat
lods
iret
xchg
push
xchg
lea
or
xchg
jp
jno
jg
jl
movl
sbbb
jg
out
stc
cli
cli
dec
mov
cmp
fldenv
jne
jno
out
jge
adc
xor
ja
inc
movb
arpl
xor
subb
pop
mov
shll
mov
inc
push
mov
dec
stc
push
or
cmpsl
xorb
imul
add
add
movl
jmp
and
mov
or
mov
xor
not
xor
subl
add
or
add
or
imul
adc
mov
sub
mov
andl
sub
cmp
movl
ja
mov
movl
jmp
mov
mov
xor
xor
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
jmp
imul
jb
adc
jge
shlb
imul
enter
shlb
enter
daa
int
mov
mov
xchg
in
sub
sbb
fucomp
roll
ds
aaa
fwait
push
cli
cmp
lcall
inc
xlat
add
aam
mov
mov
cld
mov
xor
aam
jno
dec
xchg
orl
test
xchg
push
lds
cmp
and
mov
popa
push
flds
in
inc
mov
dec
jns
in
imul
add
cmp
push
mov
shll
scas
ljmp
loopne
and
push
cmpsb
pop
sub
mov
jb
arpl
gs
negb
xor
inc
pop
cmp
pop
mov
sti
hlt
icebp
dec
push
jge
or
xchg
sub
xchg
in
shrb
sbb
mov
mov
fs
sbb
cs
cli
shll
leave
and
pop
jp
pop
push
fsubr
das
fildl
adc
xor
add
jns
daa
push
pushf
rorb
pop
mov
xlat
mov
mov
xor
mov
std
adc
fs
fldcw
inc
sbb
inc
push
pop
js
dec
mov
addr16
loopne
cmp
fwait
lcall
dec
aad
mov
js
xchg
jp
dec
cmpb
and
in
xor
inc
pushf
mov
icebp
insl
stos
lods
jnp
pop
lret
movsb
push
jno
jecxz
nop
sahf
in
ljmp
mov
sbb
das
icebp
sub
sahf
jnp
mov
and
aas
in
lods
lret
mov
data16
mov
fistl
clc
mov
jecxz
icebp
insb
sub
sbb
loopne
push
add
shlb
enter
dec
mov
sub
xchg
pushf
jl
cmc
jne
cli
fmull
test
and
or
xchg
into
jg
out
dec
lock
sbb
push
lss
and
jge
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
jmp
arpl
push
out
jnp
fisubrl
jo
imul
adc
mov
cmpsb
dec
cmpsl
loopne
in
fsubl
sahf
addr16
sbb
sbb
xor
in
cmp
int3
and
sbb
inc
push
lss
addb
movsl
fnstcw
fcompl
dec
out
mov
push
repnz
push
inc
and
mov
test
enter
fcomp
and
shlb
push
dec
dec
xchg
int
dec
push
int
xchg
xchg
cmp
hlt
xchg
mov
test
sbb
out
cmc
adc
pop
es
sbb
and
mov
xor
stos
rcll
dec
shr
mov
xchg
aas
fdivrl
aad
dec
mov
sti
lods
adc
repnz
dec
add
lds
and
sub
lret
imulb
clc
dec
cld
call
sbb
and
cmp
insb
jle
jbe
popl
add
sub
sbb
pop
adc
leave
dec
lods
cmp
bound
popf
mov
stos
mov
xchg
jo
out
sub
lret
add
xchg
lods
pushf
jne
repz
iret
imul
popf
nop
ja
xchg
pop
out
ljmp
or
sbb
xchg
loop
mov
xor
dec
pop
sub
fadds
test
jbe
test
std
cli
repz
mov
mov
shrl
test
movsl
jg
divl
sub
out
mov
add
and
outsb
mov
jae
cmp
loope
jo
icebp
xchg
xchg
dec
mov
sti
push
adc
scas
mov
inc
test
push
lret
and
inc
adc
test
mov
lret
mov
nop
imul
imul
pop
jmp
xor
adc
and
inc
inc
and
mov
xor
add
mov
mov
mov
jmp
bound
popf
cmc
mov
cltd
insb
mov
fidivs
imul
pop
and
mov
daa
repnz
in
or
mov
or
mov
rcll
mov
mov
aam
sbb
das
and
out
inc
add
hlt
insb
mov
pop
std
sti
dec
inc
out
in
stc
sub
testl
push
repz
jp
dec
cli
test
inc
stos
or
sub
into
push
jbe
jo
push
test
imul
sub
mov
sub
cltd
lahf
cmpsl
mov
loop
inc
push
push
jmp
or
mov
leave
jns
dec
xor
add
clc
iret
pop
jnp
inc
cli
rclb
loop
enter
xor
pop
daa
stos
add
jmp
sub
push
in
aaa
mov
mov
out
ret
xchg
stos
adc
shll
xlat
and
call
jp
outsl
out
repz
aas
push
imul
push
xchg
push
push
pop
push
faddl
cmp
xor
dec
arpl
addl
shl
in
shll
fiadds
adc
bnd
daa
lock
outsl
mov
ss
daa
les
xchg
insb
mov
mov
popf
push
lret
icebp
cli
inc
jle
xchg
inc
dec
aam
cmp
add
mov
shl
mov
faddp
jne
dec
mov
mov
cmp
hlt
stc
mov
lods
xchg
out
adc
cmp
repnz
xor
repz
in
push
mov
jp
nop
push
push
sub
push
xchg
or
add
test
loopne
mov
jecxz
scas
pusha
jecxz
mov
mov
or
shlb
adc
pop
dec
push
cmp
in
jbe
divb
xchg
mov
sub
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
jmp
or
das
mov
push
test
into
ret
mov
jo
imul
sbb
ss
xchg
mov
in
sti
ret
filds
cltd
popa
pop
aaa
jbe
mov
loope
jae
jb
xchg
stos
adc
and
sbb
bound
push
pop
daa
shlb
cmp
or
hlt
pop
fsts
mov
inc
arpl
sub
imull
stos
xchg
lds
inc
repnz
pushf
adc
and
or
sbb
div
movsl
psubb
rorb
xor
pop
cmp
push
cld
scas
or
mov
xchg
xor
lds
mov
sbb
les
jle
je
adc
mov
xchg
push
inc
in
sbb
mov
mov
int3
cwtl
popf
pop
lret
jnp
sub
and
mov
inc
xor
loope
inc
mov
mov
enter
imul
xchg
std
fnsave
jmp
lds
inc
lea
fcoml
fsubl
jb
mov
jnp
pop
pusha
jg
mov
and
push
adc
sbb
cmp
addb
shll
mov
pop
ds
xchg
aas
cmp
jo
rcrl
sub
test
cltd
xor
push
aad
pop
nop
inc
pop
flds
and
lcall
jns
fmul
or
imul
imul
fsubrl
add
outsb
add
jmp
stos
mov
test
cmc
test
test
mov
cmpsl
aad
xor
aad
pop
in
inc
dec
and
sahf
and
xor
cltd
or
mov
sbbl
cli
scas
push
jnp
cmp
cmpsl
jb
mov
mov
lar
add
xchg
mov
js
mov
push
pop
test
jo
jg
jo
insl
push
mov
push
je
sub
mov
xlat
loopne
mov
dec
sbb
mov
or
xlat
xor
mov
cmp
shrb
shlb
jp
enter
and
or
xchg
inc
movsb
cmp
sub
push
inc
pop
fldenv
ds
mov
xchg
test
mov
pusha
xchg
bound
into
out
jecxz
pop
in
loop
pop
imul
jg
outsb
stos
dec
mov
sbb
stos
mov
fsubrs
jne
add
pusha
push
rcrl
xor
mov
mov
pop
inc
es
mov
push
pop
push
jo
std
and
jnp
in
call
ret
cmp
push
fbstp
cmp
aaa
bound
xor
mov
mov
sbb
in
nop
jg
push
aad
xlat
push
sbb
add
mov
fiaddl
shll
xchg
pop
xlat
cwtl
push
in
push
shll
mov
xchg
push
push
clc
insl
cmp
in
jnp
sbb
sub
stc
sbb
mov
adc
iret
push
addb
pop
test
push
sahf
pop
rclb
add
scas
or
stc
mov
push
cmpsb
xchg
and
test
fldt
pop
pusha
pcmpgtb
test
dec
sub
dec
imul
or
icebp
insl
sahf
mov
jmp
or
pop
jge
fdivrs
rorl
fucom
mov
push
dec
inc
loopne
dec
xor
ja
test
sub
mov
push
jl
insl
xchg
mov
push
jb
xor
jecxz
pop
aas
add
fidivl
sbb
pop
inc
fstps
or
scas
mov
loope
scas
fst
loope
into
mov
insb
pop
fdivl
mov
lods
push
xchg
imul
jmp
clc
icebp
mov
icebp
ficompl
clc
and
fdivs
imul
pushf
mov
in
std
or
mov
imul
mov
andl
inc
add
sub
jmp
xchg
aaa
jne
and
dec
push
push
mov
aam
pop
aas
pop
in
xchg
add
xor
or
data16
lret
rep
cmp
scas
loop
imul
and
iret
sub
xchg
sbb
pop
test
dec
insb
ljmp
cltd
test
pop
test
lea
fcoml
rcrb
daa
mov
dec
mov
call
xchg
mov
mov
aam
in
test
loop
repz
lcall
in
xchg
xchg
aad
out
pmulhuw
addb
and
add
and
push
jmp
test
xor
addb
and
sub
aam
or
in
imul
cmpsb
and
movsl
sbb
fs
adcb
jmp
push
bound
bound
sub
out
or
je
push
xchg
pushf
and
cmp
mov
sahf
pop
mov
and
andb
add
cmpsb
ss
les
out
or
ficoml
mov
sbbb
push
xor
xchg
xchg
mov
jle
arpl
aaa
pop
divl
cmp
lods
push
cmp
cmp
enter
cmp
clc
pushf
nop
bound
call
pop
xor
xor
jl
jo
add
call
push
dec
ja
add
pop
adc
enter
rorb
repz
cmc
arpl
out
insb
and
fs
pusha
mov
xchg
cmp
jbe
cwtl
cs
push
and
add
mov
mov
mov
xor
jmp
dec
iret
lods
dec
lods
imul
js
das
jne
out
jo
jg
jo
xchg
adc
inc
cmp
fwait
pop
inc
mov
pop
jl
out
pop
inc
out
das
and
sbb
mov
dec
ret
xchg
mov
and
or
sbb
xchg
mov
or
dec
cltd
mov
nop
leave
cmpsb
jae
inc
or
mov
or
jnp
xor
mov
jo
aaa
and
nop
dec
jns
adc
outsl
pop
arpl
or
adc
adc
push
shl
inc
or
aas
test
mov
push
and
jecxz
ja
adc
in
jmp
or
xor
mov
xchg
test
cmp
dec
xchg
es
cwtl
adc
push
dec
popf
js
push
mov
inc
push
daa
lahf
shll
scas
and
frstor
scas
push
push
lcall
or
addr16
cli
movsb
les
dec
adc
add
mov
subl
xlat
pop
nop
fnstenv
and
mov
fdivrs
jno
mov
pop
or
arpl
jecxz
jecxz
arpl
mov
jmp
mov
inc
clc
mov
jno
push
add
mov
and
in
cmp
pop
pop
mov
inc
adc
sarl
adc
pop
dec
dec
je
xchg
fs
cld
push
and
xchg
aas
mov
pop
lret
cmpsb
mov
lods
lods
gs
addr16
cmpsl
shrb
cmp
or
jns
jge
in
jmp
sub
dec
shll
adc
mov
loope
rorb
jge
call
cmpsl
data16
jnp
mov
add
insl
sbb
add
jecxz
mov
bound
stos
mov
leave
xchg
lcall
cmp
mov
xor
iret
mov
mov
adcb
add
jle
rorl
scas
xlat
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
jmp
int3
sub
push
mov
jl
sub
in
jo
jg
jo
or
dec
je
jle
loop
add
dec
and
lods
repz
pop
es
jle
or
clc
mov
jmp
rcrb
cli
adc
es
jnp
aad
gs
or
cmp
fnstcw
xchg
xor
pop
ss
inc
mov
test
pop
ljmp
jae
or
fnsave
lret
daa
shlb
pop
mov
idivl
lds
aaa
aam
or
imul
inc
push
mov
in
mov
mov
movsb
or
imul
data16
fwait
clc
les
push
mov
cmp
das
mov
mov
or
push
icebp
adc
push
in
ja
sbb
push
je
xchg
dec
push
aam
popa
orw
cmp
and
adc
test
mov
sar
outsl
jns
int
mov
mov
std
dec
filds
mov
rclb
call
lret
jge
pop
movsb
dec
sbb
dec
cs
js
pop
test
dec
lods
add
jae
cmp
add
shll
add
fdivs
jecxz
addr16
xchg
cwtl
ljmp
dec
loopne
lea
in
cwtl
cli
add
stc
popa
mov
sti
pop
pop
testb
xlat
inc
xchg
sub
jmp
inc
rclb
bound
addr16
fildll
pop
test
push
negl
into
pop
and
or
test
sub
inc
imul
jmp
cmpsb
xor
pop
aas
inc
dec
dec
sub
inc
mov
inc
pop
sub
cld
lahf
dec
adc
fildl
xchg
pop
push
sbb
int3
xchg
sbb
sarl
jmp
cmp
mov
xor
mov
jge
xor
add
imul
mov
xor
add
mov
lea
mov
mov
jmp
popa
ja
add
xorl
adc
mov
loop
jo
jg
jo
rcl
scas
jne
add
cmc
xorb
frndint
mov
and
xchg
outsb
sbb
repnz
xor
xchg
ret
push
mov
sahf
add
lahf
lea
xor
andb
insb
push
inc
push
iret
cli
nop
sbb
inc
adc
data16
ret
jmp
jno
inc
lcall
mov
ds
movsl
adc
mov
in
jecxz
xchg
cmp
mulb
xor
mov
dec
popl
in
sbb
lret
and
jecxz
fildl
mov
leave
andb
and
nop
sarb
push
and
lds
pushf
cli
push
movsl
add
lret
jecxz
mov
cmp
jno
cld
aad
int
and
testb
fidivrs
jp
adc
inc
ljmp
add
daa
sbb
add
cmpsl
cwtl
dec
xchg
mov
and
mov
jbe
ja
pop
pop
call
rcl
mov
lock
movsb
mov
xchg
aam
add
dec
xchg
arpl
and
outsb
out
rcll
cli
lret
push
movb
mov
cmp
lcall
mov
jl
cwtl
or
fdivs
pop
or
or
lret
test
xchg
imul
xor
mov
or
sub
jbe
or
inc
rcr
scas
push
lock
xchg
int3
push
das
jg
mov
pop
loope
aaa
imul
pop
orb
jne
sub
xchg
shl
sbb
and
arpl
push
or
popa
lods
cmpsl
push
enter
push
mov
push
push
push
push
dec
je
push
mov
les
outsb
outsl
sbb
out
pop
scas
rclb
mov
jmp
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
xorl
push
call
test
jne
addl
xor
jmp
call
cltd
movl
cmp
jne
cmp
je
push
subl
call
addl
test
movl
jne
subl
push
xor
mov
or
mov
xorl
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
call
cmpl
jb
lea
subl
mov
lea
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
pushl
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
xor
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
push
pushl
call
jmp
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
push
pushl
push
pushl
push
call
mov
dec
mov
jmp
mov
xor
mov
mov
addl
push
mov
sbbl
xor
sbbl
push
xor
mov
adcl
add
mov
mov
movl
cmp
mov
je
mov
xor
subl
add
addl
imul
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
mov
mov
sbb
mov
sbb
xor
not
add
mov
mov
mov
subl
xor
add
movl
cmp
jne
xorl
pushl
subl
pushl
call
mov
mov
xor
mov
sbb
mov
inc
mov
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
mov
movl
mov
and
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
xor
or
sub
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
mov
mov
sub
mov
xor
add
and
mov
mov
mov
subl
push
adc
push
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
jmp
cmp
inc
mov
negl
jns
mov
shl
jo
xchg
jg
jo
ret
in
push
mov
ss
xlat
nop
insb
repnz
push
inc
inc
ficoms
xchg
mov
sbb
xchg
sahf
cmpsl
sub
mov
test
roll
fyl2x
or
pop
leave
cmp
mov
mov
push
adcl
in
shll
scas
out
fcoms
incl
xchg
lds
add
pop
push
push
mov
repz
fimull
test
nop
shll
xor
shll
jmp
cli
jmp
cmc
and
pop
pusha
xchg
sbb
gs
adc
data16
pushf
fisttpll
sbb
rclb
pop
jl
mov
pop
xor
and
pop
cmpsb
xlat
rcr
jno
jo
jbe
jge
xlat
push
es
and
lret
adc
push
repnz
rolb
xor
int
sub
jb
push
scas
pushf
divl
lods
es
and
aaa
xchg
xchg
lcall
aas
xorb
mov
mov
hlt
data16
mov
outsb
bound
in
stos
cwtl
mov
sahf
xor
adc
jmp
out
pop
jmp
fwait
xor
decb
and
outsb
cli
loopne
repz
jnp
into
lods
sbb
je
out
jmp
pop
ds
jl
push
int
mov
jl
mov
das
and
xchg
jae
loopne
orb
test
push
lret
pusha
cmp
push
jecxz
cli
inc
xlat
mov
add
mov
jae
jno
mov
hlt
or
cmpsl
loope
ja
jo
xchg
jg
jo
cmp
and
mov
add
xlat
jmp
mov
and
out
repnz
movsl
sub
fldl
push
and
cmp
fbld
fistps
mov
pop
push
sbb
mov
int3
add
push
sbb
and
mov
scas
lock
popa
jns
pop
mov
inc
ficomps
mov
push
mov
gs
inc
lods
movsl
loop
dec
out
cmp
outsb
and
fs
outsl
nop
and
lock
jnp
mov
mov
push
in
insb
mov
adcb
cmp
xlat
notb
into
sbb
in
add
lret
sti
stos
and
lods
adc
aas
push
out
out
stc
mov
inc
jmp
pushf
aaa
cmpsb
or
cmp
sub
popa
dec
cmp
push
std
inc
int
je
mov
loopne
imul
xchg
lret
jg
loop
adc
push
ret
jge
pop
rep
testb
push
popa
arpl
mov
out
mov
adc
adc
lcall
push
ss
ds
add
mov
mov
mov
stos
xchg
in
or
or
xchg
push
push
cmp
lcall
push
mov
stos
lea
dec
xchg
push
mov
mov
sahf
and
andl
cld
pop
push
xor
shlb
pop
pop
clc
sub
lock
pushf
jb
add
sbb
add
sbb
mov
notl
lea
xor
mov
mov
add
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
add
mov
movl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
and
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
mov
addl
mov
sub
xor
add
add
neg
mov
mov
movzwl
sbb
mov
movl
mov
mov
orl
mov
addl
movzwl
add
movl
mov
jmp
jbe
dec
sahf
jb
jbe
xor
xchg
push
mov
jo
xchg
jg
jo
vphadddq
repz
mov
mov
ror
out
fcomps
dec
clc
push
in
push
lret
push
fisttpll
and
lahf
nop
mov
cwtl
pop
lods
shrb
imul
jns
inc
mov
inc
jp
icebp
outsb
sbb
mov
dec
cmpsl
test
arpl
push
cmpsl
jb
or
pop
pushf
sbb
pop
dec
ja
popf
insb
lods
jo
dec
push
mov
cmp
mov
arpl
cltd
mov
sahf
add
pop
dec
outsl
idivl
cli
fbstp
fucom
inc
xchg
pop
cmp
xor
pop
into
and
jne
jmp
fistpl
ja
mov
lcall
mov
cli
cmp
adc
sbb
es
and
lds
sbb
test
mov
adc
mov
jae
out
sahf
jno
inc
dec
pop
jecxz
lods
push
scas
xor
fmul
out
add
push
add
rol
sub
mov
sbb
sub
pop
lods
outsb
push
insl
repnz
push
add
ficompl
push
push
add
data16
lods
clc
xchg
pop
aas
push
shl
lea
call
scas
and
iret
cli
ficompl
mov
or
mov
outsl
adc
popa
adc
inc
mov
cmp
mov
popf
ret
frstor
mov
and
hlt
inc
leave
ret
lds
arpl
pop
std
dec
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
mov
mov
mov
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
jmp
and
repnz
inc
std
push
mov
jo
jg
jo
inc
xchg
movb
std
cmpsl
aad
mov
mov
stos
insl
shl
fistpll
add
lods
push
mov
ret
lret
push
sub
rcrl
pop
insl
lods
inc
movsb
mov
push
clc
scas
das
stc
ljmp
mov
mov
stos
mov
je
insb
push
call
arpl
leavew
mov
sub
mul
in
jbe
rol
adc
movsb
scas
jmp
lahf
mov
mov
fildll
xchg
out
pushf
add
in
out
cli
out
or
push
mov
cmp
lret
rol
or
les
cmp
clc
ljmp
xor
mov
leave
push
in
or
add
ljmp
sbb
mov
cld
icebp
les
sti
pop
rorl
ds
inc
pushf
add
fwait
inc
fcomp
fidivrl
out
mov
jmp
mov
lcall
lods
rcll
int
sub
xchg
xchg
cmp
scas
mov
out
in
mov
xchg
sbb
mov
mov
add
inc
sarb
inc
jno
push
outsl
push
lods
add
fnstsw
adc
push
pushf
sub
cs
ret
dec
adc
cltd
and
push
or
roll
jmp
repnz
test
lret
adc
int3
ret
pop
dec
cwtl
cwtl
outsl
dec
cs
mov
xor
lea
xor
sub
mov
movzwl
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
jmp
icebp
in
popf
adc
xchg
cld
insl
sbb
ljmp
cmp
xchg
xor
cmp
stc
test
cmpsl
sub
shll
insb
je
ficoml
dec
cld
lahf
xchg
mov
pop
imul
jge
ret
test
fsubrs
add
rolb
dec
cmp
pushf
iret
xor
test
iret
xor
xchg
packuswb
neg
outsl
aas
cltd
mov
mov
pop
or
in
daa
insb
shl
pop
hlt
sbb
push
loopne
inc
mov
in
sbb
std
clc
mov
or
sti
and
add
std
sub
call
lock
sbb
mov
xchg
lods
push
ds
xor
gs
mov
pusha
js
jae
ret
push
repz
add
xchg
xorb
mov
xor
rorb
and
pop
cs
aad
fstp
inc
jp
push
out
jl
mov
xchg
pop
pop
loop
loopne
or
dec
cmp
lds
mov
inc
movaps
lcall
sub
inc
mov
rcll
xor
scas
sub
cmpsb
test
sbb
ljmp
rolb
dec
data16
jnp
mov
and
test
push
or
mov
clc
addl
shl
idivl
mov
mov
imul
das
lcall
push
imul
out
std
popf
pop
ja
ja
cmovb
cmp
push
lret
aam
jmp
movzbl
sub
add
aam
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
jmp
iret
dec
mov
mov
icebp
dec
dec
int
dec
adc
call
jo
push
mov
arpl
iret
mov
fucomi
xchg
enter
into
mov
data16
push
pop
mov
enter
inc
scas
aad
mov
and
gs
add
mov
jnp
xor
mov
insl
stc
and
cmp
sub
ret
xor
std
push
xchg
into
sbb
and
jmp
mov
out
cmp
cmp
xchg
je
sbb
lods
xchg
mov
mov
cmp
imul
adc
xor
sub
aam
dec
imul
daa
dec
outsl
insb
dec
or
inc
add
dec
dec
adc
ljmp
jp
je
mov
xor
jl
sbb
sub
mov
int
pusha
aam
pop
fcompl
scas
xchg
daa
leave
lds
xlat
pop
fs
in
add
cmpsl
pop
sub
and
or
loope
sub
cltd
repz
cmp
sub
cld
out
stos
insb
addr16
mov
incl
enter
mov
ja
or
ret
add
xor
insb
push
push
mov
loope
popf
inc
adc
icebp
cwtl
push
and
mov
cmp
lods
leave
lods
ret
insl
fisubs
fwait
mov
aaa
loope
mov
and
mov
hlt
daa
gs
out
rclb
pop
lds
ficomps
stos
fwait
mov
jle
int
rol
mov
inc
stos
orb
fsubr
mov
add
mov
icebp
in
icebp
mov
push
call
jo
xchg
jg
jo
loop
xor
mov
mov
pop
push
mov
les
inc
xchg
stos
mov
jnp
sub
fnstenv
es
inc
cmp
mov
sbb
cmp
fildl
cmpsl
mov
mov
adc
aas
and
jne
imul
pop
fimull
stc
xchg
xor
dec
inc
xchg
push
fdiv
enter
jp
mov
dec
dec
jns
push
sub
and
loope
shlb
lods
leave
inc
sahf
outsb
xchg
mov
int
mov
mov
push
fwait
push
xchg
rolb
pop
and
jnp
pop
mov
add
fsubrl
lods
push
and
aas
test
sbb
sarb
mov
loope
ds
mov
xchg
jmp
dec
mov
sbb
xor
adc
jo
push
cmp
lds
out
jmp
nop
pusha
pop
es
sar
add
outsl
inc
out
ficomps
enter
leave
dec
add
pusha
add
push
leave
jne
mov
sub
into
sarb
pop
jnp
js
ficompl
push
fbld
hlt
sub
inc
pop
call
rolb
les
sub
xor
dec
cmc
push
repnz
ret
fwait
pushf
push
incl
xor
das
ljmp
sbb
xchg
xor
xor
cmp
pop
mov
sarb
insb
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
jmp
dec
push
sub
imul
pop
jge
xchg
cmc
jo
xchg
jg
jo
dec
or
lods
aas
cmpsb
jecxz
xchg
or
outsl
je
adc
aad
sbb
ret
pop
adc
inc
adc
ficomps
outsl
sbb
lea
mov
and
inc
add
cmp
and
mov
test
stos
stos
push
xchg
or
sarb
pop
stos
mov
mov
imul
sbb
mov
xchg
xchg
int
stos
cmp
mov
popf
mov
jnp
xchg
mov
push
insb
fs
pop
jp
pop
iret
pop
push
mov
pop
gs
fs
dec
inc
fildl
or
mov
xor
add
in
xor
aam
sbb
cltd
adc
jp
adcb
fsubs
cwtl
cmp
mov
loop
jb
mov
and
mov
push
pop
push
mov
cmp
cmp
xchg
out
mov
subl
daa
mov
roll
push
out
sub
jnp
mov
jle
aam
xchg
cmp
xor
gs
lcall
inc
add
fmul
add
cmp
testl
bnd
mov
mov
mov
push
fdivr
dec
cmp
sbb
movsl
sub
mov
aam
outsl
push
call
jno
shl
sbb
add
push
popf
adc
adc
stos
inc
data16
dec
pop
adc
repnz
pop
inc
inc
loop
xor
or
mov
add
frndint
std
imul
mov
xor
jo
xchg
jg
jo
ja
out
cmc
pop
inc
xchg
pop
or
xor
ss
je
and
scas
xor
cmp
jge
fisubrl
testb
pop
inc
int3
mov
mov
cs
inc
xchg
sub
fsts
insl
in
xchg
xorps
bswap
jbe
insl
sub
cltd
scas
clc
dec
xor
and
push
in
mov
gs
or
sbb
orl
js
xor
dec
push
ds
sbb
dec
icebp
push
mov
test
xchg
sbb
js
sbb
loop
add
mov
or
lock
mov
sub
or
jle
sti
jbe
pop
outsl
mov
xchg
in
das
lahf
repnz
dec
int3
sbb
pop
idivb
inc
xchg
fimuls
or
push
lahf
das
lods
sarl
mov
pop
pusha
decl
in
sub
stos
adc
rcl
add
pop
popf
sbb
cmp
sub
mov
xchg
sti
ss
inc
lods
stos
ja
pusha
js
cmpsb
jno
incb
shl
cmpsl
pop
or
ret
sub
mov
cmp
ret
and
pop
fs
int
mov
data16
lods
mov
mov
shlb
into
sbb
in
xchg
stos
or
sbb
xchg
cmpsb
jo
sti
push
and
repnz
mov
scas
push
or
call
jnp
mov
movsl
dec
push
xlat
xchg
in
mov
add
jmp
hlt
sbb
rep
cmp
aaa
adc
bnd
xchg
jg
jo
pop
stos
dec
xor
push
int
dec
jecxz
xlat
outsl
std
pop
scas
mull
lret
and
adc
xor
push
ja
mov
jo,pt
mov
pop
inc
lods
shr
dec
push
test
and
jmp
pop
ret
lods
call
das
inc
lods
insb
lds
scas
mov
xchg
sub
mov
mov
sbb
mov
xacquire
nop
mov
or
leave
add
xor
ljmp
mov
shlb
mov
cld
sbb
xchg
popf
adc
stos
mov
jecxz
lock
enter
xor
dec
and
leave
cli
cmpsl
adc
stc
scas
inc
xchg
xchg
into
mov
lcall
or
adc
push
loop
and
add
mov
lods
inc
ret
aas
decl
pop
loopne
aad
insb
push
pop
insl
leave
loopne
and
sbb
inc
add
mov
xchg
movlhps
jp
and
lret
pop
pop
adc
int
in
mov
adc
les
mov
icebp
inc
mov
cmp
in
mov
push
fwait
int
xor
les
pop
push
sti
shll
into
cwtl
mov
xchg
push
lahf
js
rclb
shlb
xchg
insl
push
fldt
stos
test
inc
xor
push
fisubrs
fstl
insb
pop
sub
jns
inc
aas
std
add
out
data16
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
jmp
lret
icebp
dec
cmp
pop
mov
xchg
jg
jo
cmpsl
pop
pop
lods
fadd
and
or
stos
nop
frstor
jb
into
dec
pop
push
movsl
jns
mov
pop
push
hlt
ret
push
ss
ss
add
pop
jp
push
arpl
or
pop
add
jb
stos
ja
clc
int3
loopne
dec
fimull
inc
jg
pushf
mov
arpl
shrb
cmp
lret
lret
push
mov
cltd
push
push
inc
mov
jae,pt
jl
fxch
fs
mov
mov
jne
fimuls
push
nop
sti
sbb
push
mov
aad
inc
insb
ja
mov
and
pop
add
aaa
shlb
out
and
push
dec
loop
scas
xor
xchg
mov
xchg
fs
bnd
in
adc
jge
xor
push
pop
sbb
xchg
adc
jl
outsb
pop
sbb
out
mulb
xchg
dec
inc
or
lods
add
dec
xorl
sbb
loop
add
xchg
and
aam
test
fwait
scas
adc
xchg
test
xor
lods
test
and
lretw
scas
fisttpll
jo
sub
dec
out
xor
pop
adc
cmp
test
cmp
and
int
movsb
sbb
dec
mov
aam
lahf
xor
mov
je
mov
out
shlb
addr16
addb
sub
jecxz
xor
pop
mov
sbb
xor
movsb
xor
stc
outsl
loope,pt
sub
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
push
sbb
movl
sbb
mov
orl
jmp
push
mov
xor
je
stos
aas
lods
and
jns
jo
jb
jo
in
cmp
mov
mov
sbb
mov
xchg
sbb
andb
fisubrs
pop
xchg
xchg
aam
in
pop
push
loope
or
jmp
shrb
xchg
xchg
aam
inc
fists
out
pop
dec
fisubl
cmp
jae
leave
mov
adc
jbe
daa
scas
fmuls
je
mov
lcall
movsl
repnz
cmp
sti
cmpb
mov
sahf
and
mov
fwait
and
cmp
divb
mov
add
call
js
pop
sahf
lock
into
mov
inc
xor
dec
lods
imul
fwait
xor
lahf
mov
lcall
jmp
cltd
sbb
sahf
dec
mov
fwait
mov
push
mov
ss
sbb
cwtl
bound
inc
test
jno
sub
ret
mov
and
adc
add
pop
mov
add
jns
lds
std
je
mov
out
lea
dec
out
sub
push
mov
dec
jl
inc
mov
loope
loop
pusha
add
pop
xchg
jecxz
cltd
mov
enter
inc
mov
mov
repz
cvtdq2ps
loope
sub
cmp
sbb
movhps
cltd
adc
cli
push
push
push
ds
mov
aad
loop
add
cli
icebp
dec
orl
adc
daa
fdivl
lock
jo
xor
mov
push
icebp
sbb
jl
in
test
or
inc
sub
jns
adc
cmp
push
stos
dec
fidivs
push
aaa
lcall
imul
mov
cltd
lods
jae
outsl
xchg
mov
int
pop
scas
lcall
pop
mov
cs
xchg
cmp
add
andl
xor
cmp
movl
jne
mov
mov
movzbl
xor
mov
add
xor
mov
mov
or
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
pushl
call
cmpl
jb
xor
push
jmp
je
test
pop
pop
or
and
jnp
jo
jb
jo
in
pop
movsl
dec
inc
fists
jp
add
notb
addr16
sub
das
or
jecxz
lock
add
popf
lock
std
adcl
mov
test
pushf
mov
xor
xchg
in
add
das
inc
jl
loop
and
and
mov
inc
sub
loope
es
jnp
cs
stos
imul
out
daa
int3
lcall
pop
mov
popf
arpl
pop
xor
std
cmp
movsb
cld
push
test
dec
leave
loop
lods
push
jbe
mov
lock
test
jmp
mov
lock
pop
push
pop
add
aad
addr16
imul
scas
in
fnstenv
add
pusha
mov
sbb
out
xor
sahf
pop
add
inc
shrb
divl
sub
cmpl
sub
mov
mov
and
dec
mov
jle
sbb
ret
adc
outsl
dec
lods
dec
arpl
push
add
stos
jno
stc
repnz
fidivl
in
sbb
jno
out
or
aad
ja
dec
add
cmp
lahf
mov
lcall
xor
es
ret
push
cltd
xor
add
insl
mov
shrl
popf
inc
adc
mov
pop
pusha
xor
add
or
fs
cmp
push
push
cmpb
mov
add
mov
mov
sbb
xlat
loop
xorb
add
mov
inc
mov
imul
cmpsl
adc
dec
xchg
int3
pop
add
sbb
pushf
mov
into
scas
or
ja
lahf
mull
pop
mov
mov
push
push
sbb
jl
sar
adc
jne
mov
add
jmp
cli
cmpsl
push
in
gs
arpl
int
jge
jo
jb
jo
movsb
dec
iret
push
sahf
xchg
ja
jnp
fisttps
sbb
jne
leave
mov
inc
push
popa
inc
mov
sar
push
cmp
sbb
add
call
lds
fidivs
sbbl
scas
repz
std
jns
add
in
roll
test
add
jp
xor
inc
rcr
inc
frstor
stos
ja
xchg
test
mov
enter
dec
mov
mov
in
hlt
inc
mov
mov
inc
pop
push
nop
cmc
mov
pop
and
loope
fnstsw
pop
sub
mov
mov
fisttpll
jp
movsl
add
cmpsb
sub
test
jns
mov
enter
addr16
jno
in
push
sub
jle
push
icebp
idivb
daa
sub
fnstcw
dec
shr
bound
mov
outsl
mov
imul
xchg
push
clc
push
pop
xchg
inc
cmp
icebp
mov
fucom
mov
js
repnz
ds
and
sbb
std
inc
add
cld
test
sbb
fsts
mov
inc
sub
test
jmp
jae
mov
int3
inc
push
sbb
imul
subb
inc
cltd
fsubs
jmp
xchg
loopne
mov
int3
les
shl
mov
imul
sub
pop
lret
push
js
add
test
and
or
ja
mov
dec
sbb
jno
sbb
das
sti
mov
filds
push
fwait
aam
aam
cmp
mov
xchg
rcrb
mov
gs
lcall
inc
sub
lea
mov
jg
jb
inc
pop
cltd
aaa
or
sbb
es
xchg
jb
push
jbe
rorb
mov
sahf
sbb
pop
je
mov
jmp
mov
xor
add
jmp
mov
jmp
or
scas
shll
jb
loop
fnstenv
jg
jo
jb
jo
loopne
cmp
mov
ja
sbbb
sbb
les
nop
inc
or
jecxz
mov
cwtl
dec
test
lret
mov
cmp
aam
and
sbb
popf
daa
dec
sub
lret
inc
ret
pop
div
cmp
pop
imul
add
and
outsb
sbb
lods
mov
neg
in
outsb
cwtl
inc
cmp
pop
push
sub
int
sbbl
jg
adc
leave
xor
cltd
or
dec
jle
ret
jnp
mov
sbb
add
sarb
xchg
fcomps
lds
and
pop
fisubrs
imul
insl
nop
out
adc
inc
nop
es
sti
je
add
mov
scas
jmp
ds
andb
sub
out
push
lea
sahf
cltd
pop
or
mov
dec
mov
lret
hlt
aas
push
in
cltd
dec
add
sbb
clc
dec
mov
mov
xor
push
fldenv
loope
pop
xchg
lret
dec
sbb
mov
mov
jno
inc
jns
xlat
sahf
mov
pop
inc
sbb
jl
xlat
sub
sbb
ficompl
inc
push
das
les
iret
iret
daa
sub
jle
mov
outsb
mov
outsb
test
xchg
push
adc
push
aad
xor
iret
push
sbb
stos
xor
outsl
in
and
call
sub
mov
xchg
repnz
dec
outsl
out
repz
jge
pop
dec
mov
cld
sbb
stc
sbb
ret
inc
jmp
ret
mov
outsl
mov
movzwl
aas
mov
adc
out
fimuls
mov
leave
xor
stos
fbld
push
pop
jmp
jnp
xchg
les
sub
mov
xchg
jb
jo
dec
lret
clc
pushf
imul
cmp
dec
xor
repz
hlt
dec
add
inc
lahf
push
out
icebp
sbb
into
ret
mov
ja
add
and
cltd
lods
xlat
inc
sbb
sbb
test
pop
movsb
inc
adc
int3
mov
insl
add
rorl
into
jbe
ljmp
jbe
mov
arpl
push
jae
fistl
mov
sub
les
sub
pop
push
jae
cmp
dec
push
mov
sarb
std
cli
cltd
cmp
xor
push
push
pop
inc
hlt
out
mov
dec
push
sub
shrb
push
mov
jecxz
mov
nop
jne
into
jo
jmp
sbb
sbb
data16
xlat
inc
fsubl
es
adc
aam
xor
pop
mov
test
push
out
popa
jo
subl
jnp
push
cmpsb
xchg
ret
test
cwtl
in
daa
inc
or
sbb
cmpsb
sbbb
jge
pop
adc
loope
cltd
in
pusha
mov
popa
rcll
mov
jmp
adc
in
cli
dec
sbb
stos
and
gs
aas
xchg
and
aam
jmp
push
fs
and
sahf
in
and
stc
loop
dec
mov
mov
icebp
jmp
sub
ja
loop
js
push
aas
jb
in
dec
jecxz
ds
aas
scas
mov
cwtl
test
inc
xorl
push
sbb
loopne
inc
or
stos
jae
lods
sbb
push
das
mov
out
or
xor
inc
shr
mov
int3
fs
cmp
sub
mov
jo
mov
lret
scas
pop
push
jae
sub
mov
adc
lcall
add
loopne
add
leave
ret
push
mov
mov
mov
and
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
push
mov
xor
cmp
je
mov
mov
sub
xor
jmp
xchg
roll
icebp
lods
add
rcl
enter
jo
leave
jle
jo
aaa
ret
dec
sbb
dec
sbbb
xchg
cmp
das
nop
cmp
adc
pcmpgtw
out
and
or
fldt
sub
aam
iret
movsb
loop
hlt
lock
push
xlat
pusha
add
arpl
mov
and
in
aad
pop
jp
sub
dec
mov
int3
mov
jmp
or
out
pop
mov
imul
or
mov
jecxz
inc
mov
call
test
mov
inc
xchg
inc
icebp
mov
and
subb
and
push
dec
cwtl
xor
inc
hlt
scas
push
nop
jbe
mov
or
push
mov
dec
jo
push
pushf
pop
mov
daa
inc
adc
sbb
xchg
adc
jno
xor
pop
jecxz
and
cs
mov
cmp
test
cmp
sub
mov
cli
mov
je
cwtl
push
stos
mov
mov
sbb
push
call
adc
movsl
ja
fidivs
jbe
sub
inc
fwait
lcall
jno
cli
inc
out
lahf
xchg
add
fwait
insb
ret
cltd
mov
mov
into
mov
push
sbbl
in
cmc
inc
js
mov
dec
xor
outsw
in
loope
mov
push
in
aam
es
fsubrs
das
cmp
incb
xor
mov
adc
dec
divl
jnp
sub
pop
fstpl
dec
or
adc
test
es
add
xchg
push
data16
and
cmp
push
ja
inc
fcomp
jb
outsb
mov
in
dec
push
jmp
bnd
mov
mov
mov
popa
das
xor
ss
dec
sub
stos
jne
add
lahf
xchg
dec
cmc
push
insb
loopne
xor
into
add
inc
adc
push
js
lds
mov
scas
inc
leave
sbb
and
mov
dec
stc
jnp
stc
test
scas
bound
sahf
mov
dec
jg
pop
pop
mov
mov
jne
mov
add
jmp
mov
xor
jmp
pop
scas
sbb
push
pop
mov
and
jo
leave
jle
jo
add
insl
out
mov
mov
int3
push
push
push
inc
mov
sahf
icebp
push
inc
fistl
xor
das
jg
add
mov
mov
imul
sbb
mov
inc
adc
sub
and
dec
adc
inc
clc
inc
mov
push
adc
cmp
and
es
jo
shll
imul
ds
loop
in
mov
sub
addr16
dec
xor
mov
adc
ja
mov
adc
inc
xorb
ss
mull
cmpsb
pop
mov
inc
pushf
das
aas
cmc
xchg
loop
stos
rclb
out
jo
mov
rorb
ffreep
sbb
and
fs
push
shll
fstpt
cwtl
ljmp
dec
pop
jno
jl
adc
or
mov
jge
int
mov
sti
outsl
popa
cmp
mov
sarl
jae
cld
test
into
push
js
inc
aaa
mov
stc
loopne
adc
js
xor
fsubs
dec
mov
int
push
sub
mov
arpl
mov
mov
and
lahf
outsb
test
adc
ss
jno
imul
fdivs
xor
dec
subl
mov
xchg
das
in
xchg
jnp
jae
pop
int3
ljmp
pop
push
mov
or
das
pop
xlat
and
repnz
out
shlb
push
fdivs
lea
fadds
arpl
movsb
inc
xchg
or
pusha
movb
in
pop
stos
out
lods
das
jnp
dec
cmp
cmp
push
lahf
ds
sub
test
rcl
out
cli
push
sub
adc
insb
lret
addb
jecxz
dec
jnp
xchg
imul
mov
xchg
mov
add
sbb
loope
cmpxchg
sub
test
push
jb
enter
leave
adc
stc
add
ds
pop
pop
pop
sub
test
clc
jb
jbe
inc
jno
jl
sbb
arpl
mov
mov
adc
aas
xchg
inc
adc
ret
add
add
and
dec
xchg
sub
leave
jle
jo
dec
dec
movsb
inc
test
jmp
mov
je
mov
cmp
push
inc
lret
cli
pop
mov
ljmp
jp
fsubl
loopne
into
push
dec
shl
mov
adc
dec
or
cmp
jno
mov
ljmp
loopne
je
push
sbb
lret
add
dec
dec
loopne
lock
mov
pop
jp
fisttpll
fs
mov
xchg
jmp
sbb
or
mov
sbbl
fstps
xlat
mov
mov
pop
mov
fnstenvs
sbb
or
jbe
dec
mov
test
inc
push
in
rolb
lret
popf
mov
sarb
adc
inc
mov
es
pop
lea
adcb
mov
mov
mov
inc
mov
pop
and
jb
and
lods
aam
cs
into
jle
call
pop
mov
lcall
clc
push
xchg
xchg
leave
push
or
lret
push
call
sbb
push
cltd
or
pop
mov
loop
nop
and
sub
and
repnz
data16
jno
in
popa
dec
es
fisubl
cwtl
mov
imul
mov
adc
sbb
mov
shrb
out
out
ror
scas
repz
test
fisttpll
and
ja
mov
cmpb
nop
push
push
test
in
jl
sub
and
out
xor
adc
inc
out
movsl
mov
data16
xchg
add
sub
fldl
push
into
mov
mov
out
fisttpl
pop
fmuls
or
mov
jl
fistpll
cmp
loope
mov
cmpsl
jb
push
xor
jmp
jl
dec
mov
into
popa
mov
outsb
hlt
pop
or
xlat
pop
scas
lea
andb
ret
mov
ret
repz
into
fimuls
stos
call
add
mov
push
fsubs
mov
xor
add
mov
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
movl
mov
mov
sub
and
movl
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
xor
xor
xor
add
sub
imul
mov
addl
push
mov
sbb
xor
sbb
mov
add
andl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
sub
mov
mov
sbbl
push
adcl
push
adcl
test
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
pushl
pushl
call
jmp
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
notl
mov
neg
mov
movzwl
add
mov
imul
jmp
xchg
imul
fsincos
jle
jo
dec
jge
jo
sahf
mov
bound
iret
push
xchg
cld
xorl
add
cmp
sbb
rcrl
call
sub
jecxz
fs
pop
jle
dec
push
aaa
inc
test
xor
orl
scas
mov
fs
in
loopne
cmp
stc
adc
push
std
pop
dec
mov
xor
iret
pop
test
divl
or
mov
adc
mov
sahf
dec
fwait
and
adc
int3
mov
xchg
fdivrl
test
mov
sub
mov
lea
adc
scas
pusha
cmpb
mov
mov
sub
xor
sub
pop
test
jecxz
cs
xchg
dec
in
in
push
xor
lcall
adc
dec
or
and
mov
addr16
inc
mov
mov
add
out
pop
pop
cmc
adc
add
enter
push
pop
mov
sbb
push
mov
and
pop
inc
mov
mov
xchg
in
aas
mov
inc
or
mov
sub
jns
lock
addb
inc
cli
cmp
cmp
or
sbb
repz
outsl
fisubs
push
pop
pop
rcr
sbb
scas
xor
or
inc
nop
adc
sbb
mov
js
xor
pop
dec
inc
lds
inc
or
mov
out
in
jecxz
xchg
mov
popl
mov
and
stc
mov
sbb
lock
sub
mov
push
xor
add
pop
and
inc
test
mov
or
or
rol
add
int
imul
int
and
testl
rcl
das
inc
mov
sbb
dec
inc
mov
sub
and
xor
rcll
and
or
mov
pop
out
mov
hlt
outsl
lret
cmp
adc
cltd
push
bnd
push
pop
pop
lea
add
sub
pop
in
test
pop
inc
dec
out
pop
fcoml
std
insb
repnz
je
insb
leave
stos
dec
or
lahf
mov
scas
insb
outsl
test
or
cli
cmp
out
fcoml
mov
shrb
shll
mov
jo
xlat
add
imul
ja
fisubrs
and
pop
mov
mov
fsubrl
sbb
in
into
cmp
dec
mov
std
and
dec
insb
adc
mov
movsb
and
mov
lret
arpl
out
outsl
lahf
dec
cmp
jno
iret
adc
xor
mov
add
xor
shll
fwait
add
shll
dec
mov
fcompl
pop
icebp
cmpsb
cmp
int
mov
jne
cmpl
and
insb
add
mov
jmp
sbb
pop
push
mov
xor
and
out
or
mov
stos
xor
jo,pn
or
jle
stos
sbb
sub
iret
mov
loop
pushf
xor
jnp
push
sbb
aam
dec
aad
cmp
push
test
les
lea
lds
cmpsb
outsb
pop
pop
lret
or
and
and
or
xor
enter
jmp
jno
std
test
adc
xor
mov
pop
fbstp
push
je
psrad
cmp
cltd
pop
jnp
int3
pop
popf
lds
mov
add
dec
idivl
add
not
mov
or
mov
subl
xchg
sub
xorl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
orl
mov
adcl
jmp
addr16
ss
ja
or
in
pop
pushf
push
push
mov
dec
jge
jo
mov
and
mov
pushf
jnp
jnp
adc
and
dec
jns
mov
xchg
sub
inc
mov
call
dec
test
shl
adc
rolb
test
ds
jmp
popf
xor
mov
push
or
cli
and
mov
jns
fildll
into
mov
pop
xor
inc
jne
jbe
addr16
cld
add
repz
rcll
movsl
stos
jmp
mov
nop
hlt
adc
fstps
fsubrs
adc
fwait
dec
das
push
jge
jo
add
sbb
dec
in
xor
outsl
mov
iret
lret
push
lods
popf
sub
ret
shll
push
and
push
jle
je
rclb
xor
mov
sub
pop
dec
jnp
xchg
jecxz
jnp
mov
mov
add
shrb
ja
movsl
sbb
mov
xchg
loopne
mov
ljmp
jecxz
stos
sub
sub
popf
or
arpl
jecxz
xchg
or
xchg
cli
dec
xor
test
arpl
stos
js
gs
xor
in
pop
out
ret
xchg
push
out
imul
jg
sti
rorb
sahf
push
fcmovnu
push
sbb
sarl
mov
aaa
dec
cmp
bswap
fstps
dec
cwtl
push
jecxz
pop
cmp
jl
mov
in
jo
xchg
inc
sahf
ror
sahf
js
int
mov
nop
mov
aas
dec
sbb
cld
xchg
daa
adc
pop
and
fstpt
pop
in
scas
adc
and
pop
fwait
and
insl
mov
lods
lock
sub
outsb
inc
in
xchg
pop
ss
enter
testb
shll
mov
in
cmpsl
or
rcr
popf
cli
sub
das
sub
fcompl
mov
ret
daa
dec
lret
mov
ljmp
dec
enter
dec
dec
xchg
dec
test
outsl
fwait
mov
repz
pop
lods
and
xor
je
xchg
out
and
cmp
roll
xor
shl
stos
mov
imul
lods
dec
mov
cmp
int
push
xchg
outsb
mov
fiadds
and
inc
outsl
jmp
add
and
lds
lret
mov
int3
and
cmp
jmp
mov
stos
dec
or
jecxz
sub
int
mov
cld
lods
and
mov
mov
outsl
cmp
aaa
push
mov
adc
inc
pop
mov
lahf
jmp
pop
in
outsb
mov
je
xchg
nop
mov
and
lds
xor
test
jnp
cwtl
mov
jle
stos
fbstp
sbb
lods
dec
pop
test
mov
push
das
jp
leave
jmp
inc
loope
neg
xchg
push
dec
cmp
pop
xchg
inc
add
cmp
xchg
clc
into
push
xchg
stos
dec
sbb
push
cmpsl
xchg
sbb
mov
pop
fstpl
out
lds
adc
push
mov
pop
mov
cmp
dec
xor
inc
leave
sbb
inc
xor
dec
xchg
sub
fmuls
dec
sub
lds
imul
dec
roll
pop
mov
out
cmp
rolb
and
xchg
into
adc
fldt
lds
fwait
es
mov
cmp
sub
insb
inc
stos
or
push
xchg
cwtl
mov
and
pop
rcrb
sbb
pop
cmp
cmpsl
mov
mov
mov
and
mov
andl
xor
jmp
mov
iret
mov
out
fs
flds
mov
jge
jo
aam
fdivrs
jmp
push
jb
or
xor
scas
call
jno
jnp
movsl
xor
inc
or
bnd
stos
or
jne
or
in
push
rcr
test
add
popa
cs
cmp
jbe
xor
testl
inc
in
and
pop
mov
jge
or
les
fbstp
mov
test
jmp
xor
add
leave
bound
testb
push
scas
aam
lret
add
loop
or
xor
pop
adc
dec
or
gs
sti
test
lret
or
sti
xchg
push
xor
xor
hlt
xor
inc
les
out
cmp
outsb
ja
or
mov
fcom
scas
les
lret
sub
repz
mov
outsb
inc
out
rcl
inc
jp
push
mov
aad
xchg
mov
mov
xchg
push
cmpsb
sbb
in
loope
stos
adc
or
jno
dec
jg
imul
mov
stc
push
fists
mov
mov
ret
gs
jl
mov
jle,pt
cs
negb
pop
push
jo
test
or
mov
jle
in
pop
jle
cwtl
cmp
and
mov
mov
sub
pop
popf
test
jge
push
in
add
mov
sub
out
dec
repnz
sub
cli
inc
pushf
test
sbb
negl
ficoms
dec
xlat
push
or
or
fs
dec
push
mov
in
mov
jbe
jle
sub
dec
xor
xchg
icebp
xchg
lret
popf
push
pop
cwtl
imul
or
mov
jne
cltd
sub
popf
sub
sbb
mov
adc
add
sub
push
adc
jne
mov
xchg
mov
inc
jl
mov
mov
notl
inc
test
xorl
scas
jecxz
loopne
mov
or
rep
fisttpl
sub
inc
movsb
cmpsb
mov
add
cs
cmp
and
or
mov
sbb
cs
mov
or
gs
fidivrs
lcall
push
mov
insl
and
pop
mov
xchg
adc
daa
and
xor
jne
js
fucom
jae
lahf
daa
movsb
cmp
mov
push
call
subl
push
dec
or
push
pusha
sbb
sbb
psrlq
shrb
and
out
push
leave
xor
shrl
xchg
leave
fisttps
sub
cmp
pop
je
xor
sub
testl
lock
xchg
sub
add
popl
lcall
jle
int
std
push
insb
adc
cld
out
pop
jmp
xorb
sbb
shrl
sbb
add
inc
mov
ja
aam
jmp
dec
cmpsb
flds
xorl
xchg
cmp
lods
mov
pop
jno
in
jle
sub
in
jbe
jge
and
leave
xchg
mov
addl
pop
mov
gs
adc
lock
ljmp
lahf
inc
push
xchg
and
mov
pop
xchg
dec
mov
mov
push
outsb
pop
cli
addb
add
fldenv
jb
andb
sbb
rcrl
in
mov
push
ret
xchg
bound
jle
jns
call
shll
mov
incl
lret
mov
mov
mov
jmp
xlat
frstor
pop
testl
or
jo
jge
jo
cmpsl
pop
sub
mov
push
lret
dec
mov
xchg
or
cmp
dec
cs
data16
stc
push
popf
rol
es
jge
scas
cmp
cmp
loop
js
push
rcrb
cwtl
mov
cmpsb
fs
push
loopne
ljmp
sbb
cmp
or
push
arpl
outsl
mov
aaa
adc
cmpsb
std
out
outsb
popa
jnp
stc
xchg
aas
int
icebp
and
mov
jbe
sub
ficomps
jnp
xchg
xor
test
xchg
repz
mul
add
xor
in
mov
add
jecxz
jmp
xchg
jnp
insb
data16
js
jns
fisttpll
and
add
xchg
outsb
dec
out
loop
cmp
cltd
xor
ljmp
xor
out
xchg
in
ficomps
shlb
mov
pop
jge
test
movsb
enter
and
lods
adc
ljmp
repz
pop
jne
mov
addr16
icebp
mov
push
stos
lahf
in
scas
cmp
mov
push
mov
and
push
in
nop
add
popf
lahf
repz
cmp
scas
test
andb
je
or
loop
aad
pop
lret
or
dec
xchg
pop
xor
pop
cmp
adc
lret
inc
mov
loope
jae
xor
in
out
mov
sbb
push
inc
add
data16
sbb
mulb
out
hlt
mov
add
cmp
pop
movsl
mov
ret
mov
xchg
jl
mov
loopne
push
inc
sbb
push
push
and
jno
sub
xor
call
jmp
mov
jb
mov
mov
pop
adc
outsl
inc
aad
pop
pop
mov
lret
enter
cmp
scas
shll
pushf
fdivrl
repz
mov
jge,pt
jle
insb
sub
loopne
fsubs
pmulhw
mov
rclb
cmp
and
pop
outsb
lret
shll
shrl
fidivs
jbe
int
xchg
inc
insl
jnp
in
ss
push
test
xor
mov
xorb
jle
and
nop
mov
call
fldcw
rcrb
imul
or
cli
and
fldl
imul
orl
outsb
jecxz
icebp
aad
movsb
sub
dec
repz
icebp
imull
dec
ljmpw
je
sub
or
xor
sub
sahf
xor
sbb
mov
subl
mov
fs
adc
inc
add
xor
push
test
mov
mov
push
pusha
es
scas
sbb
jge
scas
pop
sbb
xor
insl
jp
or
pop
ljmp
push
les
lea
leave
xchg
in
xchg
testb
inc
outsl
fdivrs
lods
pusha
push
iret
sbb
data16
mov
fs
mov
pop
adc
loopne
xchg
jmp
jb
ljmp
adc
fistpl
sti
in
sti
out
push
test
inc
and
or
repz
test
xchg
mov
pop
mov
or
cltd
in
mov
cwtl
sub
cmp
push
lcall
pusha
popf
loopne
mov
popa
push
jnp
aad
adc
push
pop
xchg
repnz
lock
mov
mov
cmp
out
nop
in
ss
mov
cmp
mov
enter
mov
cmp
lcall
sbb
je
movzbl
add
mov
orl
xor
add
movl
cmp
jne
pushl
adcl
call
mov
add
mov
jmp
fs
movsl
sbb
popa
push
negb
xchg
jo
dec
jge
jo
add
jb
int
cmp
xchg
add
cmp
add
inc
cld
iret
dec
mov
mov
stos
aam
and
mov
fwait
movsl
jmp
inc
pop
sbb
jns
test
dec
cmc
sarl
les
lret
jae
cmp
cmp
cmp
mov
sub
mov
rcrl
jo
add
testl
pop
mov
and
adc
mov
dec
push
jns
mov
push
repz
dec
lret
sbb
push
jns
outsl
xor
sub
pop
dec
xor
test
fcomip
cmp
sbb
xchg
pop
out
les
das
jecxz
ss
push
jns
scas
hlt
comiss
lea
les
stc
fisttps
les
sbb
mov
test
dec
push
cld
rorb
cmc
jecxz
dec
push
data16
xor
sbb
repnz
mov
sub
ficomps
mov
or
sub
jno
popf
push
hlt
mov
jae
sahf
into
fs
test
das
rcrl
mov
mov
dec
or
cmpsb
push
pop
and
push
jbe
pushf
ja
jge
jnp
cmp
cmc
push
insb
mov
filds
aaa
mov
shll
or
jne
lock
je
call
xchg
insb
jae
ficoms
imul
in
les
in
dec
mov
call
std
cmp
jb
xor
cwtl
mov
xor
xchg
lea
mov
out
jp
data16
mov
xor
lcall
fadds
out
imul
pop
cmp
fsub
push
or
fistpll
mov
fmuls
imulb
imul
and
aam
adc
sub
push
fs
out
pop
or
cli
cmp
mov
or
js
sub
mov
mov
xchg
inc
inc
sbb
fisttpl
cmpl
mov
inc
inc
mov
mov
adc
xchg
xchg
add
mov
mov
jns
lea
xchg
push
inc
xchg
adc
sti
sahf
push
pushf
dec
cmp
fstps
loopne
mov
popf
or
mov
mov
jb
pop
out
dec
cmpsb
pop
into
ljmp
stos
aad
push
cmp
lea
pop
test
std
cwtl
pop
into
pop
scas
add
adc
push
pop
ja
xor
lds
cmpb
sbb
mov
jge
mov
mov
testb
pop
fstps
js
dec
icebp
jb
pop
xlat
push
jp
clc
push
jb
jno
lods
cli
pushf
add
mov
mov
lret
pop
sub
movb
inc
mov
mov
rorl
into
dec
in
shlb
xchg
dec
sub
adc
xchg
sub
add
or
out
bound
orl
inc
in
inc
sub
sbb
pop
jnp
ljmp
mov
mov
pop
mov
adc
sbb
sarb
sbb
and
xchg
sub
clc
std
movsl
cmp
inc
mov
dec
jl
imul
mov
repnz
mov
movsb
pop
pop
testb
ret
xchg
es
mov
loope
add
sbb
sub
imul
ret
mov
mov
mov
xor
mov
xorl
xor
add
movl
cmp
movl
je
pushl
adcl
pushl
call
jmp
ret
rcrb
popa
cltd
ret
xorw
fiaddl
lcall
jns
jno
ret
sub
push
mov
add
sbb
test
imul
movsb
lret
jge
aam
xor
movsl
xchg
pusha
adc
push
lods
sbb
aam
enter
loopne
mov
dec
sbb
push
add
mov
enter
mov
dec
adc
cmp
lahf
xchg
xor
mov
fldenv
addr16
int
test
xor
push
mov
cmp
mov
adc
or
in
or
sbb
mov
test
in
aam
adc
dec
dec
in
xchg
adc
inc
cmpsb
push
xchg
sub
pop
jmp
repnz
jns
fcmovbe
ljmp
cmpsb
push
nop
mov
movsl
inc
or
adcb
add
push
and
jne
mov
cmp
fbstp
mov
xor
js
and
xchg
in
ds
maskmovq
notl
gs
xchg
add
push
decb
dec
add
movsb
adc
mov
lods
dec
mov
ror
pop
mov
es
bswap
mov
sarl
inc
cmp
out
pushf
js
jge
and
scas
sub
aas
lock
jno
lds
push
sbb
pusha
mov
cmp
mov
pushf
mov
decl
pop
stos
xor
inc
into
dec
jnp
pop
ds
mov
cmpsl
stos
stc
lcall
rorl
mov
push
lock
jg
adc
mov
jbe
mov
jb
push
or
fs
je
add
xchg
mov
push
test
mov
dec
cmp
mov
pop
inc
inc
jmp
push
div
into
clc
adc
jmp
jnp
fldt
fucomi
pop
xor
mov
orl
or
addb
xor
xor
xchg
add
xor
mov
pop
mov
cltd
inc
addr16
lahf
or
insl
pop
int3
jg
dec
cmp
mov
out
add
pop
scas
lods
out
inc
insb
cmp
or
mov
divl
stc
push
loop
cmp
loop
aas
pop
sbb
mov
xor
pop
mov
sarb
and
pop
xchg
imul
push
sub
xor
xor
out
lret
into
pop
push
add
fs
or
sub
inc
add
insl
outsb
movsl
loopne
cmp
icebp
in
sub
and
pop
stc
inc
movsb
rsm
add
mov
adc
push
stos
inc
imull
cmp
gs
xor
cs
push
cmp
stos
push
stc
inc
outsb
jle
or
stos
subl
mov
ret
and
je
jne
aaa
jge
add
xchg
xchg
test
imul
push
push
inc
jae
mov
and
or
mov
lods
or
dec
loope
icebp
and
and
add
adc
bnd
pop
push
dec
add
stc
test
cmp
and
ret
xchg
aad
xchg
fimuls
aad
fisubrs
xchg
or
inc
add
pop
jge
adc
cmp
mov
fistps
mov
notl
cli
out
or
xor
call
sbb
and
ret
or
xorb
lret
inc
mov
inc
shlb
adc
int3
xchg
faddl
sbb
pop
orl
cli
lods
aaa
or
mov
or
jns
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
jmp
loopne
or
xor
in
rorb
cmp
xchg
add
jo
dec
jge
jo
pop
shlb
sbb
test
or
out
jo
lea
inc
repnz
or
xchg
rolb
sub
mov
mov
jp
dec
adc
in
insb
adc
bound
pop
mov
dec
jno
push
dec
imul
adc
outsl
test
jle
repz
lods
movb
movsb
mov
mov
adc
fmull
push
stos
mov
enter
negb
dec
mov
adc
stc
ret
sbb
pop
sub
fidivrl
adc
sub
dec
push
gs
cltd
pop
test
fcmovbe
mov
lret
mov
xlat
lahf
jmp
sbb
xor
rolb
lods
test
shlb
pusha
mov
cld
inc
mov
sti
idivl
pop
pop
sbb
into
jmp
outsb
push
mov
aam
mov
stc
cs
pusha
inc
mov
pop
push
inc
in
sbb
daa
enter
add
cmpsl
adc
out
mov
nop
mov
fisttpl
jno
pop
mov
aam
mov
aad
xchg
jae
xor
push
fsubl
mov
or
punpckhdq
jg
jecxz
mov
dec
mov
out
mov
sbb
push
repnz
pop
pushf
aam
mov
movsl
inc
cmp
inc
cmp
mov
sti
mov
or
cmc
cmp
stc
movsb
jne
lahf
xchg
and
adcb
movsb
fwait
mov
call
and
mov
das
jmp
js
pop
mov
adc
fnstenv
in
jge
insl
imul
inc
pop
pop
or
shrl
fdivr
pop
dec
push
loope
push
insb
shrl
enter
and
xchg
pusha
xlat
and
jns
push
dec
cltd
lods
das
xchg
lock
cmc
insl
cmp
cmp
lcall
or
int3
popf
xchg
pop
clc
rcll
add
xor
repnz
aas
dec
xchg
or
je
test
lock
lds
rcrb
pop
insb
mov
cmpsl
outsl
out
mov
and
push
push
insl
xchg
inc
jae
fistps
inc
sbb
out
clc
lock
mov
mov
dec
loope
aas
mov
cmc
in
mov
jg
jp
mov
cs
mov
pushf
imul
xchg
arpl
inc
in
dec
rorl
push
mov
mov
sbb
out
arpl
fidivrl
out
jno
test
in
inc
cmpsb
repnz
fwait
nop
mov
xor
lods
cmp
pusha
stc
in
mov
or
fildll
lock
scas
into
orb
inc
cmp
xchg
mov
das
pop
into
mov
sub
push
mov
mov
fbld
or
inc
and
inc
outsb
and
push
dec
pop
or
data16
idivl
add
xor
dec
add
or
dec
mov
lret
cmp
inc
out
jecxz
inc
sti
push
jbe
sahf
adc
loop
xor
jne
jg
cmp
pop
fadd
repnz
mov
cmp
lret
movsl
shll
outsb
ficompl
arpl
push
lock
out
ficoms
sti
orl
std
or
out
add
scas
ja
cltd
scas
jl,pn
push
int
adc
lods
ja
jl
push
jns
loope
mov
add
sub
aad
mov
mov
pop
adcb
ds
pop
mov
mov
aas
dec
add
mov
mov
mov
add
jmp
inc
jae
pop
sub
jae
and
mov
mov
pop
pop
mov
jo
je
in
test
push
jb
and
jmp
adc
fisttpl
in
or
jmp
cmp
fists
fwait
and
jb
mov
imul
dec
push
push
mov
das
lahf
push
pop
pushf
mov
or
testl
cmp
xlat
mov
cmc
jp
mulb
sbb
shll
mov
cmpsb
xor
jns
sub
fsub
fisttpl
mov
cld
jb
aad
sahf
cli
xor
dec
mov
jb
das
push
lret
push
mov
xchg
pop
cmp
cmp
je
test
enter
das
mov
loopne
movsb
pushf
add
cli
or
cmp
imul
sub
insb
pop
cwtl
push
jp
jbe
leave
fisttpll
mov
mov
scas
inc
enter
int3
insb
aam
icebp
sbb
fsubrs
dec
jnp
xchg
lods
or
push
shlb
sub
daa
or
mov
mov
pop
cwtl
shll
sbb
bound
outsl
test
lock
loopne
push
mov
or
movsb
and
dec
lcall
les
dec
mov
push
imul
xchg
sub
fdivl
sbb
outsb
pop
mov
outsb
stos
add
jecxz
gs
scas
sbb
test
push
inc
out
cwtl
insl
mov
xor
enter
int
aad
adc
jecxz
std
xchg
pop
leave
test
dec
out
outsb
roll
add
out
xor
fwait
mov
les
inc
mov
push
add
mov
lock
add
mov
push
ds
repz
fwait
cmpsb
popa
or
push
test
rol
xlat
dec
test
popa
das
test
lcall
xchg
xchg
test
xchg
mov
mov
pop
pop
push
rorl
std
mov
pop
mov
lock
sbb
xlat
jae
into
shrb
cwtl
stc
add
pop
xchg
cmpsb
test
mov
mov
pusha
mov
push
sub
xor
cmc
cmp
pop
adc
addr16
test
pop
xor
test
sub
pushf
jg
ja
sbb
push
cmp
in
fistl
mov
enter
out
dec
jg
add
pop
lea
sbb
jmp
and
xor
test
push
dec
xor
add
mov
cmpsl
lret
sbb
xlat
xchg
icebp
jmp
int3
enter
xchg
mov
and
xor
fdivs
lahf
xor
and
cltd
and
incl
sbb
mov
stos
xor
out
xchg
xchg
shl
inc
aad
mov
adc
out
scas
je
addr16
gs
cmpsb
jo
xlat
inc
xchg
cmp
jge
das
test
inc
inc
cmp
out
movsl
pop
push
rcr
negl
sarl
ds
lods
lret
jmp
aad
roll
xchg
dec
outsb
imul
fs
insb
pop
dec
mov
inc
repz
push
sahf
imul
inc
fisubrs
ret
out
lret
jne
lds
data16
das
add
lret
lahf
add
cld
push
fidivrl
xchg
ljmp
in
aam
sahf
jge
fildll
xor
popa
pop
jbe
ficoms
cmpsb
stos
loopne
dec
sarl
daa
mov
pop
test
fiaddl
popa
movsb
mov
rolb
dec
data16
dec
test
xor
imul
dec
mov
imul
in
pushf
rcrl
ja
mov
dec
inc
int3
fldenv
sbb
lods
xor
test
cmp
push
sbb
mov
add
nop
or
dec
in
mov
jmp
sbb
sarl
lahf
popa
sti
arpl
test
mov
jo
dec
jge
jo
outsb
cmp
int3
xchg
jns
or
push
rorb
jg
xor
js
adc
mull
outsl
inc
ss
test
das
enter
xorl
and
cld
lock
data16
cmpsb
inc
out
inc
xchg
cmp
imull
lahf
xchg
pop
cltd
mov
mov
fsub
inc
roll
xchg
ljmp
jne
popa
out
pop
mov
mov
or
ljmp
xchg
mov
aas
add
add
fistps
adc
lods
out
pushf
idiv
dec
sbb
sbb
in
ss
cmp
call
lret
mov
mov
sbb
dec
idivb
fldcw
sbb
into
sti
jmp
adc
gs
xchg
mov
fsub
cmpsb
or
add
xlat
insl
dec
add
lret
sbb
push
and
sub
shlb
and
cmp
add
mov
add
nop
pop
imul
repz
aam
push
or
aas
test
out
into
lods
mov
shll
cmp
popa
out
lds
adc
clc
add
dec
imul
sbb
add
lcall
stc
insb
fdivrp
and
mov
out
jns
enter
inc
pop
mov
jb
fsubrs
mov
mov
pop
dec
xchg
mov
les
stos
cmp
lcall
xchg
sbb
aam
fwait
scas
rolb
loope
or
inc
cltd
aad
scas
movsl
rcrl
sub
jle
cmpsb
xchg
add
dec
mov
lods
xor
mov
outsl
mov
xor
js
ss
mov
lock
mov
sub
inc
andb
sub
and
jp
push
int
mov
sbb
mov
dec
in
mov
sarl
push
out
cmpsl
cmpsl
daa
inc
mov
cmp
or
ja
js
sti
movsb
pop
scas
decl
mov
std
mov
test
mov
cmc
inc
sub
pop
loop
sub
lock
jo
jmp
mov
int3
subb
push
adc
enter
xchg
cli
in
lahf
or
jge
flds
xor
lahf
lds
mov
mov
and
popa
adc
mov
jns
std
xorl
scas
in
ret
inc
cltd
cltd
xchg
pop
adc
ja
repz
lods
push
dec
jmp
aad
imul
dec
mov
test
jp
dec
mov
dec
lret
jl
insb
sub
sub
and
and
or
cld
mov
cmp
test
movsb
or
mov
mull
add
je
mov
cmp
clc
xchg
aaa
fldpi
shl
mov
xor
jno
pop
mov
sub
push
inc
cmp
cmpsb
inc
cwtl
jbe
fwait
stc
ja
mov
cmp
outsl
cmp
sub
cld
jbe
fdivp
pop
dec
stos
pop
inc
push
mov
cmpsl
sbb
mov
sbb
out
sub
int3
inc
add
xchg
nop
pop
stc
mov
rcrl
pop
lret
cltd
cmp
test
gs
push
dec
push
inc
push
xor
mov
jge
xor
sahf
or
or
mov
shrb
mov
cli
popa
std
or
or
or
lea
mov
push
pushl
pushl
call
mov
mov
jmp
or
rcl
cmp
pop
jns
popa
cmp
stos
jo
dec
jge
jo
dec
mov
dec
lcall
int
xor
adc
sti
int
inc
jp
mov
xchg
mov
and
fsubrs
arpl
pop
repz
sub
xchg
mov
push
test
stc
jnp,pn
mov
enter
jne
lds
inc
xlat
xchg
xchg
jnp
adc
cmpsl
sbb
fisttps
into
xor
cmp
push
int
lret
adc
repnz
add
push
or
xor
mov
data16
fisttpll
movsb
sbb
aad
popf
and
mov
xchg
dec
adc
cmp
sub
fisttps
xor
pusha
or
nop
scas
mov
sahf
inc
data16
mov
and
iret
jl
or
inc
or
data16
shrl
nop
pop
inc
inc
sbb
dec
enter
aaa
pop
rol
into
stos
cmp
lock
scas
stos
mov
pop
or
push
das
mov
loop
dec
xchg
popa
cmpsb
fnsetpm(287
iret
into
pop
push
in
pop
cli
lcall
or
xchg
mov
jge
and
outsb
inc
xchg
filds
in
lret
add
adc
hlt
movl
sbb
cmc
fs
or
and
pop
pop
xor
fisttps
sbb
loopne
mov
js
mov
stos
cwtl
test
sti
pop
movsb
mov
fs
aad
jg
cmp
cmpsb
movsl
inc
cmp
cmpsb
aas
aas
les
push
pop
and
mov
cmp
dec
les
test
mov
sub
inc
xchg
std
xchg
cltd
gs
daa
and
mov
aam
push
inc
pop
or
add
int
cltd
fs
test
and
jb
out
jne
mov
push
push
sbb
test
out
xchg
nop
jae
arpl
jge
ss
cmpl
popf
xchg
push
inc
jo
shl
pop
loopne
xchg
and
or
mov
lea
cltd
jns
outsb
or
stos
mov
jle
rcrb
testl
mov
xorl
mov
mov
pusha
dec
xor
movsb
dec
fmuls
in
dec
stc
and
mov
dec
inc
jns
adc
mov
xchg
inc
mov
xor
jmp
enter
mov
push
mov
cmc
rcr
sbb
jg
mov
sbb
dec
int
int
in
pusha
pop
push
push
cwtl
sbb
push
enter
sbb
mov
ljmp
xchg
mov
je
xlat
cmp
sub
loop
out
es
sbb
xchg
jg
popf
cld
xor
xor
enter
cmp
jecxz
jne
cmpsl
inc
mov
cmp
pop
push
lea
and
xchg
inc
leave
mov
jb
jne
adc
fisubrl
shr
fidivs
out
push
or
mov
dec
xorl
je
fidivrl
dec
sub
gs
push
lret
loop
dec
push
movsb
jl
iret
bound
lret
push
jmp
pop
rclb
push
sub
ret
inc
aad
cmp
inc
mov
ret
call
adc
and
sbb
pop
imul
mov
sbb
imul
fdivs
dec
jne
aaa
xchg
arpl
idivl
pop
xor
les
adc
imul
jl
orl
add
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
jmp
xlat
and
insb
push
aaa
pop
push
push
sahf
pop
imul
jo
jge
jo
outsl
fadd
imul
xchg
push
pop
adc
movsb
scas
sub
sbb
inc
mov
ja
gs
add
jecxz
out
adc
add
mov
jne
add
adc
out
roll
lcall
xchg
movsb
loope
stc
jle
in
call
fs
pop
mov
lods
jl
lods
mov
push
out
jg
mov
or
cmp
aas
xchg
cmp
int3
and
into
test
add
into
jno
sahf
gs
or
jae
pop
ljmp
pop
mov
rorl
data16
xchg
mov
lock
out
sbb
outsb
xor
sub
add
pop
mov
and
or
xor
test
in
pusha
ficomps
jne
mov
inc
iret
xchg
nop
fmuls
dec
ret
mov
dec
xor
ja
rolb
aam
jl
addr16
addb
out
push
dec
repz
push
sahf
xchg
out
adc
mov
lret
jb
mov
cmpsl
push
fwait
jle
mov
les
pusha
int3
cmpsb
xor
roll
pop
mov
sti
mov
popf
mov
stos
jge
shll
fsubrl
xchg
mov
jg
mov
scas
sub
das
hlt
loope
adc
add
lock
ficoms
lret
outsb
lea
xor
add
stos
shrb
xor
pop
repz
pop
cltd
pop
lods
sbb
jbe
inc
dec
inc
cmpl
shr
sbb
sub
mov
es
jp
fcompl
pop
add
test
jae
add
jne
inc
mov
testl
shrb
xchg
and
popf
mov
sbb
mov
in
fwait
inc
xchg
cmp
rcrl
jne
inc
rolb
push
mov
jno
ficompl
pop
push
inc
xor
pop
into
xchg
xchg
push
fwait
xchg
sub
mov
fwait
adc
data16
push
stos
ljmp
mov
loop
lds
lret
iret
into
ds
hlt
sub
mov
imul
lds
rcll
mov
dec
jbe
aaa
mov
arpl
cmp
or
inc
jns
rcll
shll
xor
sbb
cmp
jnp
xchg
or
jmp
ljmp
jmp
mov
mov
add
xor
ljmp
rcl
lret
adc
inc
mov
jno
jmp
sub
xor
pop
lcall
mov
ret
mov
sub
mov
xchg
or
jecxz
sbb
dec
jae
jae
pop
jne
in
dec
dec
std
das
jne
stc
aaa
cmp
inc
cmp
imul
ss
sbb
pop
test
jno
cmp
and
cmpb
movsb
xor
cmp
sbb
fdivrs
xchg
pop
rorb
push
pop
movsl
mov
xlat
mov
lret
ds
std
jns
imul
adc
jne
mov
sarb
sti
dec
movsb
mov
int
loope
cmp
outsl
rcl
dec
jae
pop
mov
shlb
hlt
inc
out
push
rclb
mov
mov
fiaddl
add
orb
mov
xlat
notl
add
jge
cwtl
pop
cmp
push
mov
scas
lds
aaa
or
das
mov
jne
mov
xor
jmp
mov
add
mov
mov
jmp
sahf
das
or
mov
mov
pop
mov
jge
adc
xor
jo
and
in
es
popf
int3
jle
jb
inc
scas
pop
add
fistpll
or
push
push
cmpl
inc
imul
in
adc
mov
xchg
popf
cmp
aas
ffree
or
and
dec
insl
xchg
push
push
pop
push
mov
cmp
or
xchg
pop
push
dec
pop
inc
pop
js
fwait
std
sar
pop
dec
inc
mov
cli
inc
mov
int
fldenv
or
scas
jno
fdivr
push
imul
repz
lods
frstor
flds
pop
or
inc
pop
stos
repnz
pop
rclb
add
and
mov
dec
int3
out
mov
cmp
gs
mov
xchg
in
and
sub
ljmp
inc
cld
sub
add
jmp
daa
bound
rcr
movb
add
sub
test
jnp
xchg
add
das
adc
arpl
xchg
enter
pop
sub
cli
dec
push
gs
rcrl
xor
xchg
mov
je
sub
xor
insl
dec
cmp
xor
sub
push
add
sub
pop
clc
es
adc
loope
idivl
icebp
int3
sbb
xor
jecxz
mulps
xchg
lcall
enter
adc
mov
js
dec
orb
mov
jl
xor
xor
outsb
negl
ds
test
dec
cmc
mov
add
inc
pop
gs
mov
movsl
jp
or
or
mov
dec
mov
cmp
int3
xlat
addr16
xor
and
dec
jae
iret
mov
sub
mov
cli
insl
dec
into
call
and
movsb
ja
mov
push
pop
xorl
imulb
or
push
les
jbe
out
ss
mov
xchg
std
xchg
mov
sbb
adc
push
das
gs
lret
fsts
out
sbb
adc
mov
inc
dec
inc
ja
and
pop
pop
sti
lods
rorl
sub
mov
pop
sbb
mov
mov
sbb
push
ljmp
xor
jb
fsub
cmpsl
push
in
lret
dec
inc
push
xchg
in
dec
and
sub
lcall
xchg
hlt
incl
fidivrs
push
add
add
mov
scas
adc
jnp
ja
outsl
out
pop
mov
adcb
out
mov
sti
das
pop
jge
hlt
loop
lret
or
dec
add
jnp
mov
fdivrl
lea
sub
imull
add
repnz
inc
xchg
aam
sbb
xchg
leave
ja
adc
leave
mov
sub
mov
subl
stos
or
int3
xchg
sahf
outsb
add
out
icebp
inc
cmp
adc
fildll
sti
dec
push
es
aaa
push
out
cld
and
jnp
decl
loopne
fstpt
xor
lret
jae
add
lcall
testl
jecxz
mov
adc
ss
repnz
repnz
mov
xchg
mov
push
inc
mov
mov
dec
pop
jnp
or
jo
mov
xor
xor
imul
jbe
sahf
lds
jb
push
xor
out
mov
push
insl
cmpsb
clc
xchg
mov
add
ja
jmp
repnz
daa
ret
mov
cmpb
sub
adc
add
add
add
out
pop
outsl
jne
data16
test
pushf
and
fcoms
or
jo
stc
adc
xchg
sbb
data16
sbb
mov
int
mov
icebp
sub
mov
fcoms
in
xor
lds
ficomps
lea
dec
xchg
lock
jo
mov
lahf
pop
and
fsubrl
loop
pop
loop
stos
cmp
push
lds
mov
jg
daa
sbb
fs
jle
setne
mov
ljmp
dec
adc
mov
xlat
xchg
cmp
cmc
scas
int
push
adc
fidivrs
jp
mov
ss
jmp
stos
std
cmp
and
pusha
inc
inc
loope
shll
test
jne
sti
decb
dec
mov
sub
les
shrb
jmp
mov
push
shlb
add
lods
rolb
icebp
dec
jo
xchg
sbb
inc
jno
mulb
mov
jg
jo
inc
int3
test
and
xchg
pop
mov
pop
dec
inc
cld
xchg
or
in
sbb
ret
in
xlat
mov
cmpsb
int3
mov
testb
mov
scas
pop
mov
jl
hlt
add
mov
push
popf
sub
push
in
push
sbb
int
push
inc
je
into
lret
out
lods
lods
loope
and
jmp
jbe
jecxz
mov
add
jns
ss
testl
jmp
jp
jmp
mov
insb
cmp
pop
decb
xor
aas
xor
movsb
iret
fiadds
mov
imul
in
icebp
add
and
pusha
mov
fdivrs
or
cmp
and
dec
inc
je
push
jmp
or
scas
cmpsl
fmulp
mov
fldpi
gs
add
addr16
std
adc
xchg
scas
add
ffree
jmp
mov
fmuls
mov
mov
inc
into
cli
mov
mov
inc
fcoms
inc
sahf
push
adc
inc
mov
add
mov
aad
xchg
flds
cmp
stc
pop
add
push
sub
pop
jb
outsb
lret
lods
xchg
shlb
in
inc
pop
mov
pusha
les
xchg
pop
jno
add
sbb
push
cmp
xor
bound
mov
sub
shlb
pop
call
mov
mov
sahf
rcr
or
in
add
aaa
subb
cmp
and
and
and
js
hlt
and
pushf
out
outsb
xor
push
imul
cmp
lods
or
dec
aam
pop
mov
sbb
cmp
fimull
arpl
movsl
lds
lret
push
dec
nopl
mov
sbb
xchg
xlat
das
mov
jp
jno
fdivl
lahf
mov
stc
dec
inc
pushf
cli
sti
xchg
sub
dec
das
in
repz
adcl
cmp
mov
lods
cmpsb
mov
cmp
xchg
stos
sti
pop
mov
addr16
adc
and
cmp
push
push
xorb
imul
dec
shrb
rcrl
dec
cmp
sbb
or
and
out
xchg
sub
xchg
dec
sbb
stos
mov
mov
cmp
lret
push
lcall
aad
or
scas
out
into
sub
mov
mov
push
jo
push
mov
add
lock
or
mov
mov
aas
mov
test
lods
testl
adc
sbb
fwait
test
jb
je
or
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
jmp
ja
mov
mov
imul
jo
cmpsb
xor
fwait
lcall
mov
stc
push
pop
fbstp
mov
pop
sbb
sahf
andl
mov
imul
mov
mov
push
loopne
dec
and
rorb
int3
mov
lods
mov
sub
jl
push
add
clc
pop
leave
fistpll
sbb
add
xchg
pusha
aas
inc
push
inc
add
ret
aaa
push
lahf
scas
pop
scas
mov
dec
jmp
lods
adc
int
push
lahf
sbb
dec
or
repnz
jl
pop
andl
xor
mov
aad
es
hlt
or
and
xchg
push
adc
shll
cmp
iret
mov
shll
fucomi
and
xchg
out
lds
or
lcall
cwtl
inc
shlb
loop
lock
outsl
pop
hlt
les
adc
addl
shrb
mov
push
push
xchg
add
cld
cmp
mov
movsb
aaa
ljmp
cwtl
mov
shll
or
out
dec
ret
pop
outsl
mov
xchg
adc
cmp
xchg
out
adcb
aam
sub
xchg
mov
jmp
hlt
lret
lret
or
inc
dec
stos
dec
sub
lcall
mov
pushf
add
in
sub
push
sbb
xchg
cmpsb
dec
jmp
jmp
sti
test
push
in
stc
imul
add
sbb
hlt
fsubrl
pcmpeqb
cwtl
mov
push
lcall
sub
xchg
sbb
xchg
lahf
outsb
cli
dec
inc
push
and
pop
mov
push
push
mov
mov
or
cmp
cld
or
fisttpll
loop
jne
inc
sahf
mov
inc
jno
add
repz
pop
jns
loope
call
mov
pop
and
adc
xor
and
pop
sub
mov
pop
dec
add
mov
adc
dec
cld
mov
mov
lock
and
mov
lds
nop
in
jecxz
bnd
xorl
inc
cmc
outsl
adc
out
mov
aam
mov
jg
add
pop
jecxz
xchg
mov
in
mov
rol
and
mov
and
fidivrl
jmp
push
pop
or
adc
add
int
std
sub
addr16
mov
das
ja
les
cmp
iret
mov
push
lock
fmull
fs
sub
in
es
pop
roll
clc
dec
loop
jp
mov
into
mov
xor
mov
xchg
clc
mov
sub
pop
fs
inc
aaa
xor
pop
add
lahf
add
push
mov
jl
sub
mov
sub
jo
cmp
call
roll
add
or
jge
out
mov
ja
cmp
cmp
loopne
sti
popf
mov
xchg
mov
hlt
pop
add
mov
je
movb
jns
push
lret
adc
andb
test
clc
push
and
imul
mov
push
dec
lret
push
pop
mov
push
aas
jns
mov
imul
add
push
sahf
das
jae
sbb
mov
and
mov
pop
mov
ss
loopne
jg
fiadds
push
dec
inc
js
add
loopne
adc
add
add
fisttpl
jp
xchg
mov
mov
jge
jo
xchg
insb
inc
xchg
sbb
xchg
iret
iret
lahf
insb
sub
sbb
sub
insb
es
arpl
dec
add
push
dec
out
xchg
imull
cmp
dec
ret
mov
push
outsb
fs
popf
pop
xor
imul
mov
test
mov
dec
xlat
movsb
xor
shll
test
pusha
pop
mov
adc
pushw
popa
cmp
jmp
mov
mov
leave
mov
sbb
mov
jmp
xor
clc
sub
cmpsb
mov
or
sub
arpl
xchg
test
mov
movsb
in
es
les
mov
outsl
mov
cmpsb
jecxz
adc
roll
dec
aas
in
ret
pop
push
dec
js
dec
sub
cltd
cmpsl
js
cltd
les
mov
imul
pop
dec
inc
push
and
inc
clc
jmp
push
inc
es
mov
not
cs
inc
jnp
add
or
jne
mov
ret
mov
push
aas
and
repz
xchg
outsw
inc
add
arpl
inc
popf
idivb
or
leave
pushf
mov
mov
mov
in
scas
push
sub
and
xchg
and
es
mov
aam
mov
push
lret
in
sbb
das
xchg
dec
dec
repz
repz
jle
mov
imul
add
jg
add
negb
mov
movsbl
rcrb
lahf
jle
mov
sbb
push
xchg
sub
sub
sbb
xchg
add
sbbl
imul
push
mov
pushf
out
fisttps
lret
or
sbb
dec
mov
sahf
jns
fcoml
jnp
adc
out
pop
push
mov
ja
testl
mull
adc
mov
inc
lret
add
imul
adc
cmp
icebp
test
adc
fnstsw
fisttps
jae
fucom
pop
sbb
dec
insb
sahf
aad
fisubl
loop
inc
jg
test
mov
pop
xchg
ljmp
sbb
gs
daa
aad
sti
or
push
adc
mov
jno
hlt
lods
cmc
sub
xor
pop
fcom
std
test
loop
fisttpll
mov
xlat
sub
int3
or
loopne
mov
cld
mov
sub
pop
mov
jmp
in
sbb
jl
int3
adc
fisttpl
scas
mov
call
jmp
xchg
push
or
daa
mov
out
lods
jge
mov
out
hlt
add
dec
cmp
xor
cs
jmp
mov
mov
std
jp
in
lahf
scas
jbe
adc
xchg
jno
lcall
imul
out
sub
add
dec
fwait
out
rorl
and
xor
add
cwtl
rorl
gs
int
dec
pop
mov
je
lcall
xchg
mov
xor
or
mov
and
jp
add
stc
xlat
mov
xchg
push
mov
clc
add
aas
xchg
insl
ret
or
adc
sbb
push
mov
mov
popa
aad
addb
lahf
push
punpckhwd
int
cmpsl
sub
and
int
das
dec
inc
test
repz
jl
dec
in
gs
sahf
lahf
or
mov
ret
add
sub
movsb
inc
sub
jo
xchg
repz
inc
push
in
xor
lea
mov
mov
jmp
mov
fwait
xchg
fwait
jae
roll
ljmp
dec
jge
jo
shl
pop
fnstsw
fstpl
mov
jge
ss
test
lods
lcall
and
jbe
inc
xchg
stos
idivb
repnz
mov
jmp
jne
scas
and
mov
pop
sbb
cmp
ds
icebp
pop
dec
jno
jno
std
cmovle
iret
aaa
xchg
fsubl
gs
lock
mov
inc
fmull
mov
fwait
jnp
icebp
lods
xchg
test
add
in
mov
stos
jnp
mov
hlt
ljmp
xchg
add
fcoml
and
push
es
imul
mov
sub
inc
sbb
pop
xor
cwtl
shrl
in
int3
not
fisubrl
leave
iret
inc
cmc
xchg
sbb
imull
sarb
jb
enter
dec
and
or
and
dec
mov
scas
movaps
xor
jg
insl
jle
mov
rcrb
fstl
xor
add
daa
xor
out
fs
ret
cmp
jne
push
addr16
lcall
mov
mov
adc
xchg
pop
movsb
enter
push
mov
cmp
push
push
js
leave
ss
xchg
mov
add
daa
mov
shrl
ret
aas
xor
popf
out
mov
dec
push
andb
movsl
add
sti
dec
mov
xor
ja
movsb
inc
leave
mov
push
mov
mov
addr16
insl
loop
and
ja
jl
faddl
fxch
pop
add
movsl
fimuls
jmp
push
push
ror
push
test
add
int
jnp
test
ret
std
or
leave
stos
pop
out
mov
lgs
mov
shrb
dec
adc
outsl
cmc
push
mov
mov
clc
imul
ja
mov
xor
adc
pop
ret
mov
sbb
je
and
and
pop
jnp
xchg
cld
sub
js
mov
push
std
out
inc
push
jl
xchg
push
lods
lock
mov
push
rclb
movntq
out
mov
fildll
xchg
sbbb
jmp
xchg
sbb
mov
into
test
out
or
movzbl
and
push
xchg
std
and
testb
mov
pop
sub
in
mov
lcall
clc
out
or
add
or
mov
or
aam
cmp
ja
lcall
lods
sbb
mov
xor
sbb
adc
or
xchg
jae
mov
pop
into
outsb
outsl
dec
pop
ljmp
fidivl
mov
call
into
subl
adc
dec
ret
movsb
mov
insl
adc
repnz
shl
pop
inc
int
mov
inc
out
dec
lahf
and
and
xchg
popa
mov
and
std
mov
mov
testb
xor
mov
mov
pusha
mov
inc
gs
aad
pop
pop
pop
jne
inc
xor
push
gs
out
fs
shll
leave
leave
stos
xorb
xchg
adc
enter
fsubrp
je
iret
sbb
push
aad
js
clc
out
popa
popf
fsubr
push
je
sahf
imul
ret
or
popa
out
xor
in
mov
sbb
and
je
sbb
jo
repnz
ret
jnp
mov
mov
cwtl
gs
pop
ss
push
dec
inc
popl
roll
imul
mov
xor
mov
lea
cmp
jmp
mov
push
mov
bound
add
inc
jo
dec
jge
jo
pusha
mov
scas
sarl
das
in
xchg
cltd
and
xchg
dec
xor
add
mov
mov
push
xor
sub
ja
mov
es
aam
cmpsb
sbb
mov
out
sbb
xchg
iret
insb
cmp
repz
jo
inc
daa
sub
cmp
dec
ret
jnp
into
sahf
pusha
sub
ror
lahf
pop
mov
sub
sar
in
fiaddl
daa
mov
sbb
push
xchg
aas
rolb
into
lcall
aam
daa
scas
lods
sahf
xchg
mov
aam
and
in
push
lcall
scas
adc
pop
push
outsl
mov
mov
es
mov
xchg
int
push
cmp
jns
jns
call
mov
repnz
es
adc
cmp
fwait
outsb
sbb
xor
push
jg
out
pop
cmpsb
push
cwtl
out
subb
or
cmp
in
adc
mov
dec
call
aam
shr
int
jbe
sub
aam
pop
cld
popf
out
jmp
in
cmp
cli
sbb
mov
imul
cmp
leave
or
fsub
mov
scas
outsb
leave
mov
loopne
test
int3
sub
sbb
ret
cs
xchg
cmp
je
mov
sbbl
fs
xor
shll
mov
push
mov
ds
fstl
js
cld
mov
fldenv
ja
jb
call
add
sbb
sub
inc
mov
add
loope
mov
hlt
movsb
push
ret
fucomi
lret
cmp
aad
out
mov
add
je
and
cwtl
jne
in
out
mov
mov
cmp
lret
mov
es
and
xchg
and
xchg
fwait
inc
jae
xor
dec
arpl
movsl
mov
cmpsb
jmp
imul
sub
cltd
xchg
jbe
jp
xor
lcall
sub
sbb
sahf
or
pop
bound
stos
push
xchg
shl
imul
fisubrl
sbb
sub
adc
xchg
sbb
insb
xchg
lcall
mov
outsl
loope
cmpl
mov
inc
sti
aaa
adc
push
aam
inc
push
mov
in
jnp
bnd
int
and
into
addr16
cltd
mov
push
add
mov
cmpsb
out
xor
mov
xor
popf
jle
stos
ficoml
sti
enter
jge
xchg
mov
lahf
dec
mov
cmp
inc
hlt
push
ror
adc
dec
fidivrs
cmp
sbb
jle
outsb
xchg
dec
int3
imul
repz
aam
sub
pop
mov
clc
pop
rorb
or
jle
fs
iret
xor
xchg
lea
scas
inc
sarl
frstor
xor
loop
mov
leave
pop
call
jnp
and
cli
mov
in
cs
ss
stc
int
bound
lret
push
test
xlat
iret
in
cli
sub
cmp
mov
jno
cltd
xlat
jmp
fists
adc
xchg
dec
cmpsl
cmc
sub
add
mov
jecxz
mov
xchg
push
loope
pop
sub
push
imul
mov
scas
scas
push
imul
cltd
fsubp
aad
cmp
mov
out
decl
add
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
jmp
inc
orl
push
ds
test
jo
dec
jge
jo
inc
dec
data16
or
or
or
bound
xchg
dec
test
xor
sbbb
inc
push
mov
add
test
xlat
lcall
and
pop
inc
cmp
add
sbb
push
jo
fs
pop
and
and
push
rcl
add
movsl
push
push
and
mov
pop
mov
push
xlat
fcomp
sbb
int3
xchg
mov
mov
mulb
inc
cli
mov
stos
hlt
movsb
sbb
sbb
sbbb
xor
xor
and
cmp
xor
pusha
lahf
out
fwait
lret
xchg
push
cmp
mov
sbb
push
inc
push
adc
mov
rolb
jmp
ret
xchg
push
adc
cmpxchg
mov
dec
mov
fisubs
test
cmc
jno
mov
mov
loope
pop
test
add
mov
loopne
enter
mov
leave
sbb
push
sbb
fdivrs
aaa
mov
or
addb
lock
cmpsb
jg
loopne
int
adc
or
push
sbbl
das
dec
je
dec
bound
lock
xchg
test
addr16
fdivrl
dec
dec
sti
jb
ds
xlat
lret
pop
leave
gs
lahf
test
add
pop
and
jecxz
addr16
sub
xchg
shrl
ljmp
aas
or
lret
stc
or
outsl
push
jle
mov
shl
fcomp
add
and
fists
mov
cmpsb
enter
dec
repnz
xor
inc
push
cmpb
push
push
or
mov
ja
popf
sbb
ja
in
mov
arpl
fdiv
push
js
xchg
push
daa
dec
repnz
int
xor
stc
pop
xorl
sbb
add
pshufw
fldt
jbe
outsl
and
ja
sbb
mov
mov
cmp
gs
lods
stos
cltd
ficompl
outsb
push
dec
mov
test
shl
insb
mov
out
mov
cmp
dec
pop
cltd
lret
dec
add
cmp
std
dec
inc
xchg
outsl
fs
pusha
mov
sbb
pusha
je
dec
call
lcall
out
adc
or
mov
push
insb
jo
pop
sub
lds
mov
orl
inc
imul
push
jg
push
enter
mov
sub
add
in
xor
mov
fadd
nop
popf
or
adc
loopne
jnp
popf
push
nop
jne
cmc
aad
jno
loopne
imul
cli
mov
pop
add
or
pop
inc
mov
repz
inc
inc
push
pop
lahf
nop
lahf
iret
mov
out
inc
scas
xor
adc
nop
pop
inc
sbb
and
insl
divl
sub
push
jl
cmpsb
pop
xlat
pop
fldenv
jle
sbb
cmp
dec
pop
push
push
cmp
outsb
pop
bnd
dec
push
jnp
sbb
push
ss
cs
cwtl
cmpsb
sahf
push
inc
lahf
int3
inc
xor
sub
mov
dec
lret
xorb
aad
dec
mov
loop
loopne
in
fstl
cmp
push
bound
pushf
push
push
loopne
sub
iret
jno
popa
in
sti
ja
xor
mov
nop
xchg
sbb
das
dec
sahf
dec
xor
sub
arpl
test
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
jmp
jp
jb
jb
adc
sub
cmc
mov
add
dec
jo
dec
jge
jo
inc
inc
adc
gs
sbb
jno
fcompl
dec
sub
gs
xchg
test
sbb
pushf
icebp
fldt
outsl
mov
push
sub
push
sub
jmp
leave
icebp
sbbb
xor
pop
push
xchg
shrb
ljmp
mov
ficoms
shrl
mov
or
fcompl
leave
lret
in
and
imul
xor
push
aas
loopne
fwait
out
cwtl
hlt
lock
out
and
mov
xchg
mov
clc
mov
mov
or
icebp
test
leave
ret
decl
stos
fnstcw
or
and
sub
in
add
cli
mov
push
push
test
test
cld
test
and
fidivl
or
or
jae
mov
or
pop
shl
es
and
subb
push
sub
and
fisttpll
sarl
pop
rcr
jno
fimull
add
jo
test
jbe
adc
and
lret
rcrb
cmp
dec
and
fs
mov
add
ret
lea
outsb
push
insl
jb
push
push
loope
cmp
fs
push
mov
arpl
pop
fildll
sbb
or
pop
dec
inc
in
sarl
in
jl
push
add
or
jae
icebp
out
jp
ljmp
test
dec
mov
push
and
xor
mov
repz
mov
rdtsc
ss
dec
jnp
js
dec
xchg
popf
out
stos
into
xor
scas
das
loope
stos
adc
mov
test
frstpm(287
stos
jmp
push
inc
ret
mov
or
mov
in
aas
pop
incb
or
imul
stc
gs
and
fnsave
arpl
mov
test
lea
outsl
aaa
pop
ret
jl
pop
inc
jecxz
mov
jl,pn
enter
test
lods
add
fucompp
scas
add
loope
cli
pop
push
mov
xchg
push
adc
xchg
test
mov
mov
sub
xor
mov
scas
aas
movsb
mov
mov
outsb
adc
cli
inc
jne
imul
lods
mov
pop
sti
lcall
jle
je
dec
dec
dec
mov
je
and
pop
jae
outsb
mov
sub
jl
rorb
inc
popf
mov
xchg
jl
xchg
fisubrs
out
xchg
mov
add
or
push
or
dec
shlb
fwait
jp
jo
sub
push
dec
int3
and
xor
mov
in
gs
mov
cmp
jecxz
pop
push
adc
mov
jmp
ss
lcall
adc
mov
out
aad
out
mov
testl
jo
flds
adc
lods
ret
and
dec
pop
xchg
scas
clc
fstl
push
call
pop
xchg
icebp
rclb
sti
fs
mov
loopne
push
add
cs
imul
js
pop
mov
daa
aam
arpl
fldenv
mov
daa
push
ret
add
ret
outsb
int
cmp
dec
test
dec
lret
test
xor
sbb
mov
mov
and
gs
pop
xor
outsl
pop
xchg
mov
loopne
les
jbe
and
mov
jl
ret
repz
arpl
faddl
shlb
out
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
in
inc
jmp
fisttps
jecxz
out
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
cld
add
test
in
in
cld
jge
mov
fsub
add
mov
add
add
mov
inc
push
fisttps
test
fadds
jmp
fildl
inc
jo
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
ret
cld
incl
out
xor
mov
cld
jo
or
add
push
add
mov
decl
add
inc
orb
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
push
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
pushf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
das
mov
mov
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
lret
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
enter
xor
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
cmp
pushf
or
enter
xor
pushf
inc
ds
pushf
inc
mov
lock
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
pushf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
pushf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
bswap
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
les
mov
mov
cmp
mov
add
xor
pushf
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
fs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
int3
lea
push
xor
pop
lods
incl
mov
pushf
jo
cmpl
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
pushf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
scas
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
pushf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
fdivr
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
and
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
faddl
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jo
inc
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
jmp
inc
push
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
int3
jne
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
loope
sub
inc
loope
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
out
inc
aas
jmp
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shl
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
pushf
add
rcr
inc
add
add
out
inc
inc
sub
dec
and
jo
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
ss
add
add
add
add
movb
or
dec
lea
or
movsl
fiadds
jae
or
in
pushf
inc
xor
pop
inc
shl
inc
sub
inc
add
add
loopne
inc
ret
inc
mov
leave
and
add
mov
sbb
sbb
stc
test
lea
mov
dec
sarb
add
inc
ljmp
or
jge
mov
clc
leave
inc
add
rdpmc
sbb
mov
cmovne
jmp
inc
mov
sbb
mov
add
out
add
sub
add
jo
leave
movl
inc
add
inc
out
stc
int3
jb
xor
or
dec
mov
movb
loopne
inc
lea
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
test
jne
orl
jmp
inc
jne
mov
mov
shlb
push
mov
gs
add
inc
dec
into
mov
jl
add
inc
mov
add
add
inc
or
inc
in
fsub
inc
add
add
call
pop
test
dec
jmp
pushl
loopne
movl
push
incl
mov
cwtl
movl
sbb
rorb
inc
rorb
test
add
add
push
add
mov
incw
add
xor
push
cli
popw
push
xchg
sbb
test
callw
adcl
mov
mov
push
fsubl
dec
inc
mov
lret
fistl
ljmp
jmp
in
lock
mov
xor
add
stos
data16
incl
data16
inc
shlb
add
addl
mov
add
push
lea
addb
jge
mov
rol
mov
rorb
orb
test
push
mov
orb
push
xor
aam
test
cmp
data16
dec
test
xor
lahf
mov
mov
data16
sbb
dec
mov
mov
add
jne
test
jne
sti
sbb
cld
jmp
inc
mov
data16
push
incl
test
sbb
lock
pushl
xorb
add
xor
movw
mov
sbb
mov
add
add
xor
inc
add
add
inc
jmp
addl
or
jmp
push
in
test
xor
mov
mov
push
add
decl
add
decl
movsl
add
add
push
xor
xor
mov
push
push
jne
mov
sbb
jne
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
sbb
sbb
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
call
add
orb
ret
incl
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
cld
or
dec
incl
push
add
mov
orl
add
push
xor
inc
mov
push
incl
inc
add
addb
mov
lea
je
decl
call
mov
hlt
call
mov
cwtl
mov
mov
addl
mov
inc
jmp
ljmp
mov
and
pushl
lcall
add
enter
add
adc
add
mov
xor
jmp
mov
in
inc
or
decl
jne
mov
mov
lock
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
sub
push
lea
jne
incl
jnp
mov
fs
sbb
out
or
ret
inc
decl
test
clc
lcall
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
sbb
addb
call
xor
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
xor
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
wrmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
pushf
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
or
inc
xor
pushf
call
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
call
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
xor
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
pushf
pushf
xor
jne
mov
icebp
icebp
shl
mov
pop
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
pop
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setl
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
adc
inc
inc
push
add
add
enter
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
cli
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
lldt
xor
sub
add
ror
dec
inc
cmp
cld
or
into
out
lret
dec
mov
loop
cmp
inc
daa
loop
out
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
out
add
add
and
fs
incl
jo
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
jno
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
ds
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
pushf
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
icebp
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
add
into
fs
mov
ret
add
add
add
ds
add
into
ret
pop
adc
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
cmp
pop
mov
je
xor
mov
cmp
pop
cmp
jne
mov
cld
push
pop
inc
stc
test
clc
test
cmp
fs
or
add
add
push
lret
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
xor
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
add
add
lret
lock
clc
inc
lret
cmp
ss
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
pushf
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
pushf
pushf
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
pushf
add
clc
cmp
or
add
xor
or
lea
or
enter
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
mov
adc
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
add
pushfw
add
add
mov
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
sub
test
clc
inc
add
hlt
leave
test
clc
inc
push
aaa
inc
pop
rorl
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
pushf
xchg
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
pushf
mov
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
pushf
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
pushf
popa
push
dec
inc
mov
clc
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
rcll
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
subl
mov
xor
pushf
mov
clc
add
mov
adc
inc
mov
mov
loopne
inc
mov
mov
nop
roll
mov
mov
dec
push
mov
xor
mov
mov
in
into
inc
iret
xor
add
mov
dec
mov
mov
mov
mov
xor
mov
clc
enter
mov
lock
mov
cmp
rol
enter
inc
adc
inc
clc
xor
add
mov
roll
add
push
mov
fsubr
inc
mov
adc
add
inc
test
xor
fmuls
test
cld
or
dec
ret
push
inc
dec
mov
mov
push
jne
mov
call
mov
mov
clc
mov
xor
adcl
inc
push
mov
clc
incl
mov
clc
rolb
je
mov
jne
lea
mulb
decl
fadds
inc
jmp
mov
roll
mov
lock
dec
ret
mov
mov
mov
fadd
enter
inc
cld
mov
xor
add
sub
xor
pushf
add
or
jne
clc
mov
call
jmp
mov
xor
xor
enter
clc
inc
inc
pushl
in
pushf
jne
mov
clc
dec
out
dec
mov
lea
cmp
lea
mov
cld
iret
mov
jmp
test
je
mov
fdivr
movl
lock
inc
lock
lret
imul
testl
dec
mov
fmuls
fmuls
enter
inc
dec
xor
add
mov
inc
inc
push
mov
lock
mov
fadds
rol
test
dec
push
decl
push
mov
add
cmp
add
loopne
add
dec
xor
pushf
mov
cld
iret
test
mov
in
dec
add
add
dec
mov
fmull
add
testl
test
add
add
mov
cld
mov
hlt
mov
add
cmp
add
mov
mov
call
dec
add
cmp
cld
iret
mov
dec
push
lea
mov
call
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
lock
iret
rorl
inc
mov
iret
add
xor
mov
or
push
shll
cmp
fmull
test
dec
dec
xor
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
sti
or
cmp
je
mov
ret
or
call
add
mov
cld
mov
xor
add
dec
jnp
mov
xor
add
mov
mov
xor
rorl
jb
add
ja
sbb
cwtl
enter
inc
decl
fadds
rorl
inc
xor
mov
or
inc
rcll
mov
xor
jb
add
shll
mov
xor
add
repz
inc
mov
xor
inc
mov
mov
jne
mov
test
inc
mov
mov
lea
xor
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
push
xor
enter
inc
add
cld
test
pushf
inc
xor
pop
push
incl
in
mov
push
inc
cmpsl
mov
or
add
add
add
icebp
je
mov
cld
rol
ret
add
lea
cwtl
jne
clc
or
incl
cmp
incl
lcall
or
push
mov
test
inc
mov
imul
dec
mov
push
dec
push
xor
add
push
incl
lods
inc
inc
mov
xchg
or
call
adc
orb
inc
inc
add
mov
call
push
push
dec
jo
push
dec
mov
cmp
cmovne
call
mov
lcall
leave
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
mov
mov
cmpb
add
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
xor
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
pushf
mov
jge
decl
