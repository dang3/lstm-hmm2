push
mov
sub
and
mov
xor
mov
mov
sub
inc
push
mov
movl
mov
sbb
sbbl
mov
and
orl
orl
mov
or
mov
neg
mov
cmpl
mov
movl
mov
movl
jmp
mov
mov
jle
pushl
call
add
mov
or
or
or
sbb
add
cmpl
movzbl
mov
movzwl
jmp
movl
movl
jne
push
push
push
push
call
adcl
sbb
inc
adc
and
mov
addl
sub
mov
mov
sbb
mov
orl
orl
lea
xorl
mov
add
mov
and
mov
cmpl
not
movl
jmp
movl
movl
jle
push
call
andl
addl
add
sub
or
xor
xor
mov
sub
or
mov
add
mov
sbb
mov
mov
mov
shrd
cmpl
mov
mov
mov
mov
jmp
movl
movl
jge
pushl
push
pushl
push
call
addl
subl
movl
sub
dec
shr
mov
mov
xor
xor
subl
or
movzwl
or
mov
mov
movl
cmpl
movl
movl
movl
jmp
movl
mov
jbe
pushl
pushl
push
push
push
call
addl
adcl
movl
movl
cmpl
mov
movl
jmp
mov
jl
pushl
push
push
call
sbbl
xorl
notl
xorl
decl
cmpl
movl
movl
jmp
movzwl
jb
push
pushl
pushl
push
call
add
subl
andl
decl
andl
cmpl
movl
movl
jmp
movl
movl
jl
pushl
pushl
pushl
push
push
pushl
call
and
movl
subl
addl
orl
cmpl
movl
movl
movl
jmp
mov
jne
pushl
push
push
push
call
sbbl
xorl
adcl
addl
andl
sbbl
sbbl
sbb
jmp
push
lods
and
cmp
sub
pushf
jmp
jle
sbb
sbb
adc
sbb
mov
stc
rorb
cs
jno
adc
sbb
mov
and
inc
mov
cld
clc
sub
dec
pop
push
and
fcompl
dec
inc
jp
clc
xchg
xorb
jle
sti
xchg
mov
arpl
jmp
adc
mov
sub
mov
push
mov
inc
add
inc
add
xor
repnz
mov
dec
insl
stos
lahf
lret
add
lock
sbb
into
pop
pop
cmp
push
inc
inc
and
mov
xlat
jl
pushf
movsl
movsb
or
xor
imul
push
rol
sahf
stos
mov
fs
fcoml
xor
rorb
out
in
movsb
dec
shlb
shrb
adc
dec
scas
add
popa
sahf
push
popa
in
sub
push
push
push
xchg
xor
dec
push
test
stc
andb
jo
pop
jnp
not
mov
lea
cmp
xor
insb
ljmp
aas
rcll
outsb
fcompl
mov
mov
xchg
imul
jne
test
lret
cmp
mov
pusha
sbb
xchg
mov
sub
fadds
or
scas
mov
xor
add
arpl
lea
jp
movaps
iret
out
adc
or
mov
mov
jne
lock
cwtl
dec
stos
mov
pop
jecxz
test
bound
sub
mov
adc
xchg
lds
outsb
ss
mov
movsl
sub
mov
outsl
lcall
test
add
out
add
mov
das
les
in
mov
xchg
lds
xor
jl
fbld
push
cmc
movsl
scas
adc
fwait
inc
in
mov
js
je
out
popl
flds
icebp
jae
mov
mov
test
or
sbb
test
cmpsb
jge
cmovo
mov
jae
or
outsl
jb
out
std
push
pop
test
out
mov
in
icebp
push
mov
push
jo
push
lods
rorl
sti
sbb
push
movsb
cs
mov
sub
pop
mulb
cmp
or
or
sub
jno
fstpl
jle
pop
repz
jle
mov
dec
xlat
push
inc
stc
repz
movl
and
inc
mov
xlat
and
xchg
xor
insb
cmpsb
out
push
out
push
pop
pushf
cmp
and
fnsave
mov
in
imul
mov
insl
clc
pop
or
adc
int3
popa
add
add
jecxz
xchg
mov
aad
mov
cmp
add
add
neg
movl
movl
movl
mov
add
movl
mov
add
movl
cmpl
movl
notl
jmp
movl
mov
jle
push
push
call
adcl
addl
subl
orl
mov
xor
movl
xor
movl
movzwl
adc
movl
adc
movl
cmpl
movl
mov
movl
jmp
mov
mov
je
push
pushl
pushl
pushl
call
sbbl
adcl
subl
andl
addl
movl
sub
movl
movl
addl
movl
movl
cmpl
mov
mov
mov
movl
jmp
mov
mov
ja
push
push
push
call
addl
subl
xorl
decl
and
or
mov
and
movl
movzwl
sbb
movl
or
movl
adcl
movl
movl
sub
movl
not
mov
shl
andl
mov
xorl
push
push
push
push
orl
call
cmpl
movzbl
movl
mov
movl
jmp
movl
jge
pushl
call
adc
orl
or
mov
mov
or
and
mov
mov
dec
xor
or
mov
mov
sub
cmpl
movzbl
mov
mov
jmp
movl
je
pushl
push
push
push
push
push
call
addl
sbb
or
or
not
mov
mov
sub
xor
sub
mov
lea
or
mov
mov
xorl
or
orl
and
mov
or
sbbl
xor
movl
cmp
jne
sub
mov
mov
orl
shrd
add
shr
mov
cmpl
mov
mov
jmp
notl
movl
jl
pushl
push
call
movzbl
sub
mov
mov
add
xor
add
mov
or
xor
or
adc
mov
dec
mov
adc
mov
addl
shl
xor
andl
xor
notl
or
mov
mov
cmp
movl
jne
mov
mov
xor
mov
xor
or
xor
xor
sub
or
mov
sbbl
mov
shrd
mov
xor
mov
andl
xor
shr
mov
xorl
xor
orl
or
shl
movl
sub
andl
mov
mov
mov
and
add
or
mov
sbb
mov
or
mov
shrd
shr
movzbl
sbb
mov
mov
mov
jmp
stc
dec
popa
test
mov
sbb
and
sbb
adc
sbb
mov
jo
jno
jnp
mov
inc
jb
lret
add
xchg
fnop
dec
stos
call
mov
popa
lds
xlat
je
sti
sti
shll
cmpsl
int
add
aad
icebp
sub
subl
shl
mov
jg
rcrb
cwtl
pusha
testb
aaa
in
xchg
lds
fsts
dec
int3
ja
outsb
mov
pushf
nop
cli
jne
cmpsb
mov
jb
mov
test
or
lods
jb
js
jbe
xchg
cmc
lods
mov
fs
sbb
nop
imul
int3
ja
mov
jge
and
ret
xchg
fcompl
movsb
adc
push
xchg
inc
js
sbb
lods
and
outsb
hlt
fisttpll
test
orl
push
and
push
dec
fcmovbe
hlt
sub
add
xor
cltd
into
xchg
xor
cli
push
pop
sbb
imul
add
mov
pop
fsts
inc
cld
leave
popf
jecxz
ret
mov
test
mov
int
cs
push
ljmp
sub
xor
mov
mov
sub
cmp
aam
insl
xchg
cmp
jne
add
cs
inc
xchg
rol
push
clc
lods
lahf
dec
add
ret
enter
data16
stos
push
imul
xor
sbb
or
sub
in
push
pop
out
inc
xlat
or
add
faddl
pop
xor
push
jns
xchg
jmp
daa
popa
nop
jne
fwait
push
mov
in
or
adc
mov
pop
dec
jmp
mov
dec
jns
shrb
xor
push
mov
repz
xorl
xchg
ds
out
loopne
cmpb
scas
repz
jae
or
test
loope
push
mov
jle
fs
push
ret
sub
mov
nop
cwtl
mov
or
mov
push
dec
jbe
inc
xchg
inc
int
xlat
mov
sub
cs
gs
mov
scas
aam
lea
js
xor
es
inc
in
sahf
or
mov
dec
sahf
adc
mov
imul
cs
das
sub
dec
jne
call
loopne
pop
dec
fidivrl
out
pop
xchg
test
jbe
adc
and
inc
mov
js
pop
or
aas
sti
xor
mov
call
jno
push
sbbb
mov
out
stc
mov
ljmp
cld
in
add
iret
aam
movsl
divl
je
dec
cmp
into
div
sub
mulb
xor
mov
aam
jnp
pop
pop
movsb
or
fsubrl
push
testb
test
dec
jp
dec
and
iret
sub
shl
xor
mov
adc
or
add
mov
sub
mov
sbbl
shrd
xorl
shr
mov
sub
mov
addl
mov
xor
adcl
xor
or
shl
jmp
pop
sahf
pop
add
cmp
inc
inc
mov
sub
sbb
and
sbb
mov
int3
pop
es
jl
mov
xchg
sub
mov
lds
mov
stc
sbb
cmp
leave
shll
mov
inc
and
xchg
cmp
mov
mov
loop
xor
rcll
ds
lahf
adcb
mov
loope
enter
aad
jmp
sahf
leave
add
or
adc
mov
or
cmpsb
data16
adc
shrl
stos
out
fcoms
or
subl
xchg
orb
push
mov
mov
sbb
mov
cli
out
lret
mov
dec
or
stc
sub
sbb
mov
and
xchg
mov
fldt
daa
lret
out
mov
xchg
sbb
jbe
push
ficompl
test
fldt
push
jb
int
ficoml
inc
xchg
pop
xorb
in
cmp
jne
ret
cmpb
in
mov
scas
loope
stc
cmp
jge
stc
push
enter
xorb
aad
mov
minps
bound
iret
xchg
popl
sbb
into
insb
xchg
fildl
push
mov
popfw
xlat
push
push
std
addl
ret
dec
pop
mov
mov
mov
lahf
inc
bswap
push
int3
jae
mov
lahf
push
dec
scas
stos
sbb
adc
jns
jp
into
xor
dec
in
movsl
les
jno
in
movsl
xor
popf
pop
push
mov
sub
stc
push
pop
and
mov
ret
mov
mov
out
popa
insb
add
mov
cmpsl
pop
sbb
mov
mov
test
jge
jp
aaa
test
pushf
jbe
cmpsl
popa
cmp
nop
mov
xor
imul
cld
cmpsl
lahf
mov
movsl
pop
lahf
jp
je
pop
lahf
fnsave
pop
das
test
push
les
jg
add
lds
lret
ja
gs
out
mov
inc
jg
xchg
pop
out
ss
jne
loope
push
ret
nop
pushf
aam
xor
push
ds
push
repnz
fidivrl
jl
fmull
mov
push
insb
jmp
lcall
test
pop
xor
addr16
inc
cmpl
out
xor
aad
popf
test
jle
cltd
loope
pop
fwait
mulb
push
pop
xchg
ret
shlb
xor
push
pop
mov
cmp
into
mov
pushf
data16
or
adc
in
andb
sbb
mov
sar
movsl
test
inc
dec
cs
add
repnz
gs
jb
mov
dec
jnp
shrl
repnz
xchg
adcl
add
addl
shrd
subl
shr
cmpl
mov
movzwl
jmp
movl
jae
push
call
xor
not
movzbl
adc
xor
or
or
addl
adcl
mov
mov
mov
sbb
xor
sbbl
mov
xor
or
sbbl
shl
andl
imul
mov
orl
mov
shrd
mov
orl
mov
xor
shr
movzwl
sub
mov
mov
mov
adcl
xor
addl
or
shl
addl
sub
jmp
inc
ds
cmp
pop
mov
sbb
and
sbb
loope
fisubs
add
ret
dec
loopne
mov
ljmp
int
inc
mov
out
lret
xchg
pop
divb
fnstenv
xchg
push
push
arpl
push
hlt
push
or
mov
call
or
movl
add
xchg
and
dec
mov
out
inc
adc
hlt
push
push
cwtl
xchg
fidivl
sbb
mov
aam
jb
mov
cs
cmpsb
int3
lret
push
push
cld
mov
dec
inc
decl
mov
shrl
roll
aam
aaa
cltd
imul
jae
or
sbb
xchg
cmp
in
adc
arpl
cwtl
iret
leave
ret
and
mov
orb
ss
mov
ret
lea
cmp
adc
ror
lods
fwait
mov
aaa
rcrb
stc
pop
outsb
cmp
push
lods
adc
sub
clc
test
push
imul
jge
movsb
cmp
mov
mov
loop
das
cmc
idivb
cmp
cmp
inc
shll
mov
out
out
adc
sub
addr16
out
xchg
cmp
lahf
mov
jns
lahf
mov
fs
mov
inc
imul
push
ret
aam
repnz
hlt
xor
sub
clc
sbb
inc
dec
pop
loopne
shlb
push
or
xor
pop
shll
add
sbb
xchg
inc
iret
push
and
rorl
sbb
lret
sub
cmp
xchg
sbb
mov
mov
xchg
add
xchg
push
fld
inc
inc
sbb
xor
xchg
incl
mov
adc
stos
add
or
add
jns
lret
mov
jecxz
push
mov
mov
push
mov
insb
addr16
shll
xchg
addb
mov
decl
mov
pusha
mov
dec
adc
add
xchg
and
push
mov
sub
das
gs
pop
stos
jmp
or
adc
je
push
jnp
pop
movsl
lea
lods
ret
clc
xchg
ja
or
or
test
ret
inc
insl
sbb
lret
cmpsl
jp
scas
enter
lods
nop
cmp
shlb
jb
mov
cmp
inc
xchg
fistpl
mov
dec
sub
sub
shll
xchg
in
sub
cmp
push
dec
imull
push
sarb
jle
arpl
test
xor
pop
pop
cmpsl
mov
xchg
and
das
call
cmp
adc
cmp
cs
sub
xchg
sub
xchg
out
dec
jmp
dec
pop
push
in
jle
mov
divb
gs
js
mov
jecxz
add
inc
hlt
movl
cmp
movzbl
mov
jg
cmpl
mov
movl
mov
jmp
mov
movl
jae
push
push
pushl
push
push
pushl
call
and
and
sbb
negl
or
xor
xor
add
mov
inc
mov
subl
shrd
andl
mov
mov
xor
addl
shl
decl
xor
andl
or
shr
cmpl
notl
movl
jmp
movl
mov
jge
push
push
push
call
mov
mov
add
xor
xor
xor
not
and
adcl
mov
addl
mov
subl
mov
and
mov
shrd
jmp
dec
lods
adc
pop
movsl
cmp
stos
sub
jae
cmp
sbb
and
sbb
mov
mov
cmp
dec
add
jbe
aaa
mov
jmp
push
frstor
cld
imul
shl
jo
sub
sti
adc
mov
adc
add
fwait
jmp
out
ja
movsb
and
aam
xchg
data16
mov
mov
int
pop
cmpsl
cwtl
lahf
je
adc
andb
sbb
push
cmp
mov
loopne
jno
jmp
mov
nop
mov
xchg
cmp
xor
jg
sub
imul
jbe
cmp
insl
mov
pop
jb
repz
adc
pop
inc
push
inc
dec
pop
lcall
mov
dec
shll
cwtl
cmc
js
xchg
fwait
add
negb
std
inc
sbb
push
add
xchg
loop
xchg
add
repnz
sbb
mov
jb
and
xor
sahf
lock
pop
adc
pusha
sbb
jge
mov
add
insl
pop
pextrw
add
pusha
sub
ficompl
pop
push
mov
je
ret
xor
ss
adc
cmpsl
mov
lret
leave
xchg
clc
fildl
xlat
cmc
xchg
int3
sub
mov
andb
xor
sbb
mov
mov
cmpsb
sahf
sbb
pop
push
push
mov
mov
cmp
xor
mov
stc
pop
and
push
cmp
pop
out
inc
lods
adc
dec
cmp
fcoms
inc
lock
jmp
loop
pop
fsubl
adc
in
sbb
repz
mov
sub
push
push
dec
test
rolb
inc
push
pushf
pop
add
mov
aas
addb
jns
repnz
scas
leave
jecxz
sub
nop
xor
mov
mov
sub
iret
sbb
cmpsl
pop
pop
push
shll
cmp
xor
cltd
hlt
xchg
xchg
cmp
add
ja
cmp
addr16
lea
movsb
mov
mov
push
sub
and
jecxz
cmpsb
add
add
loopne
mov
jmp
call
pop
pop
inc
loope
adc
out
bound
gs
cmp
rcrb
cmp
and
mov
mov
sub
push
rorl
pop
xor
jmp
clc
lds
pushf
xlat
xchg
and
data16
dec
adc
out
xchg
add
dec
lcall
sbb
xchg
adc
ficompl
xor
in
xchg
pusha
add
mov
dec
cmp
pop
or
mov
push
adc
stos
fnstenv
pop
xlat
sub
ljmp
sub
add
sbb
add
add
ret
xor
sub
out
fnstsw
sbb
mov
and
sbb
pop
sti
loope
or
adc
sbb
and
xchg
sbb
std
dec
pop
jecxz
sub
mov
push
mov
mov
sbb
pop
sub
in
sti
mov
movsl
jns
add
pop
enter
mov
mov
xlat
in
shl
orb
or
icebp
jno
pop
lock
jbe
lds
dec
or
sti
mov
jnp
repnz
rep
lahf
add
das
adc
xor
repnz
mov
add
xchg
add
cmc
lods
in
ljmp
jge
xchg
and
mov
iret
pop
lods
xor
rcrl
add
cmpsl
jge
fs
gs
add
and
fbstp
sub
mov
jnp
inc
mov
popa
imul
lea
cmovae
das
stos
outsb
adc
pop
in
int
mov
inc
pop
orl
lods
mov
jmp
out
in
or
sbb
stos
test
ret
fsubrs
repz
das
adc
mov
gs
rcll
arpl
dec
dec
or
xchg
jmp
sbb
cmp
lods
and
mov
mov
popa
sahf
dec
test
or
jl
dec
sarb
xchg
into
ljmp
dec
xchg
adc
add
xchg
lret
mov
mov
icebp
and
outsb
pop
cmp
clc
insl
mov
sub
ret
je
push
mov
xor
sub
pop
dec
push
ret
ja
daa
sub
mov
in
lcall
ja
ss
xchg
ljmp
ret
jns
pop
pop
and
jb
xchg
clc
loopne
jl
sbb
cmpsb
leavew
adc
arpl
mov
lods
add
mov
out
fcmove
cmp
iret
mov
and
sarl
mov
lret
mov
add
pop
loop
mov
lock
or
fsubrl
jg
mov
push
push
sbbb
xchg
sub
inc
inc
dec
loop
push
push
fsubs
into
sub
test
test
aam
ljmp
lods
ficoml
sarl
jbe
push
lcall
inc
add
movsl
mov
mov
mov
imul
daa
ja
xchg
fwait
jl
push
mov
lds
mov
fildll
std
cltd
mov
xor
or
outsb
das
add
mov
bound
jno
sbb
xor
inc
or
xor
mov
lods
sub
adcl
push
inc
loope
repz
cmp
adcl
mov
xor
sbbl
xor
adcl
or
shl
adcl
imul
sub
jmp
cmpl
movl
mov
mov
jmp
movl
jge
push
pushl
call
movzwl
and
adc
or
sub
xor
mov
mov
sbb
mov
cmpl
movl
movl
jmp
mov
jge
push
call
add
inc
xor
add
mov
adc
xor
cmpl
movl
mov
mov
jmp
movl
jle
push
pushl
push
push
call
mov
xor
andl
sbb
subl
mov
mov
and
mov
shrd
mov
mov
subl
xor
subl
shl
subl
xor
or
adcl
shr
mov
cmpl
movl
mov
mov
jmp
movl
jle
push
pushl
pushl
pushl
push
pushl
call
or
adc
or
inc
subl
mov
and
sbb
sub
mov
cmpl
movl
mov
mov
jmp
mov
jbe
pushl
pushl
pushl
push
pushl
call
adc
or
mov
xor
or
sub
xor
xor
or
mov
subl
mov
sbbl
shrd
shr
cmpl
movl
mov
mov
jmp
movl
movl
jb
push
pushl
call
xor
addl
inc
xor
neg
notl
cmpl
mov
mov
jmp
mov
jge
pushl
push
call
mov
add
mov
not
subl
mov
mov
xor
adcl
mov
sub
mov
addl
mov
cmpl
mov
movl
mov
jmp
movl
movl
jl
push
push
call
orl
sub
sub
movl
or
jmp
subl
cmp
leave
jl
mov
sbb
and
sbb
sar
cs
lea
out
or
jns
ss
mov
mov
iret
subb
loope
scas
ljmp
inc
jmp
es
les
inc
stos
push
test
dec
test
push
pop
xor
xor
inc
dec
out
aas
sub
or
jge
sarl
popf
data16
xor
push
nop
je
leave
scas
add
or
mov
xchg
push
outsb
int
mov
std
add
push
lock
jle
pushl
lret
test
stos
push
hlt
fstpl
adc
and
xor
mov
mov
ljmp
pop
push
es
aas
fwait
push
lods
test
aam
fcompl
pop
pop
cmpsb
xor
mov
fldl
cmp
lret
mov
and
xchg
scas
dec
mov
sbbb
mov
faddl
js
dec
jbe
js
inc
add
iret
xchg
inc
pop
clc
pop
mov
aad
mov
jnp
push
inc
ja
js
outsl
push
ljmp
sbb
das
mov
shll
push
sub
dec
cwtl
push
jnp
jp
mov
jo
lds
outsb
mov
sarl
enter
shll
ds
push
dec
xor
jnp
pusha
inc
sub
jbe
jb
jb
cmp
daa
mov
ret
dec
mov
insl
push
jb
ret
xchg
pop
push
and
out
cmp
mov
inc
out
decl
test
addr16
or
sti
outsb
push
jmp
adc
add
push
xor
lods
xchg
mov
lret
dec
dec
jne
fsubr
and
gs
jle
orb
repnz
int3
push
jge
jecxz
out
xchg
aaa
iret
pop
ret
push
lea
mov
jg
pop
jp
inc
repz
sub
aam
mov
orl
xor
loope
push
loope
inc
in
mov
jp
cvttps2pi
adc
movsb
in
in
inc
push
cmpsl
mov
out
jae
push
cmp
daa
enter
mov
cmpsb
xchg
stc
shll
or
ljmp
mov
in
jg
stc
jmp
push
mov
sbb
jne
jg
movsb
cli
hlt
cld
scas
sbb
pop
xchg
scas
xchg
cmp
pop
mov
in
or
mov
xchg
xor
or
adc
lret
daa
push
sub
xor
cmp
outsl
into
cwtl
lods
mov
fimull
mov
iret
or
dec
push
mov
cld
popa
in
mov
xlat
dec
mul
sub
lods
and
ss
push
xchg
fidivs
rclb
js
les
mov
xor
hlt
push
pop
cltd
out
mov
xor
add
xor
mov
mov
xor
adcl
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
jmp
inc
mov
mov
and
and
sbb
adc
sbb
ret
lock
xchg
pop
cmpsb
jmp
hlt
clc
popl
add
adc
adc
and
mov
xor
and
push
lret
and
add
mov
cli
jmp
dec
push
xor
in
dec
das
adc
sub
test
sbb
pop
rclb
inc
repz
ss
ss
lea
sub
lea
jle
lret
repz
inc
int
lock
sub
cmp
sbb
sub
lea
mov
inc
andl
mov
cmpsl
jmp
dec
int
fisubrl
xlat
test
mov
lds
test
push
push
and
mov
sbb
and
jno
addl
jp
jp
iret
mov
std
xchg
cmp
cmpl
add
mov
iret
fsubl
jmp
cld
cs
add
sbb
or
push
mov
sub
pop
inc
dec
in
sub
icebp
mov
in
xchg
dec
push
mov
sbb
push
nop
dec
outsl
nop
mov
test
mov
aas
cld
mov
lods
scas
xchg
test
outsl
pop
xor
xor
scas
aaa
mov
push
mov
pop
arpl
and
xchg
cli
and
arpl
icebp
out
in
pop
inc
cwtl
popa
lret
xor
repnz
js
mov
push
hlt
adc
mov
ss
xor
pop
jns
stos
ss
and
adc
pusha
ss
mov
push
pop
in
leave
mov
gs
ret
mov
ljmp
stc
push
les
ret
pop
insb
loopne
adc
add
add
add
lret
leave
call
mov
sbb
jle
repnz
jnp
cmp
sbb
orb
cmpl
fs
inc
jbe
mov
cli
or
inc
cmpsl
xor
cmp
lods
pop
inc
cld
inc
dec
and
add
dec
or
push
xor
mov
fsubr
leave
insl
jmp
pop
inc
xor
ret
mov
add
jle
ds
add
std
fwait
and
mov
add
push
cmp
mov
mov
mov
lret
mov
push
cmp
push
mov
xor
leave
xchg
and
je
test
add
mov
ja
shll
js
jg
fimuls
push
fxch
mov
xor
pop
cmc
insl
dec
cmp
push
movsb
xchg
sub
ret
cmp
push
arpl
add
jo
push
sub
mov
movsl
or
cmp
sub
xor
subl
sub
or
mov
loopne
dec
jl
es
sahf
push
enter
dec
in
lods
enter
add
add
push
push
push
mov
in
repnz
jmp
sbb
adc
sbb
sbb
nop
mov
jl
push
jl
sub
sub
jnp
pop
add
cmp
ja
mov
inc
mov
stos
push
lret
cmpsb
ljmp
fistpll
mov
xchg
push
xor
cmc
sahf
insb
pop
pop
aas
dec
repz
shrl
xchg
loop
in
aas
inc
mov
xor
pushf
fstl
jg
gs
pop
mov
lret
shrl
fsub
jbe
loope
insb
insl
arpl
pop
xchg
pop
sbb
fsubr
cmp
mov
sub
lods
mov
insb
ds
cld
scas
push
inc
push
mov
stos
mov
add
or
ljmp
out
push
fdivrl
ret
jb
lret
popa
hlt
lods
push
gs
cmp
dec
ss
inc
cld
imul
push
test
aam
fwait
inc
or
jnp
sti
and
mov
cwtl
sub
mov
inc
arpl
xor
mov
pusha
out
and
add
dec
sub
push
mov
and
std
inc
cld
test
loop
inc
ja
jge
dec
icebp
ds
inc
lret
movsl
add
mov
test
imul
pop
jb
lret
sbb
jg
adc
push
jb
fnstsw
ret
in
dec
inc
mov
leave
add
add
jp
xor
or
stc
out
add
cwtl
xor
cmp
frstor
cmp
push
shlb
sti
stos
sbbb
in
cld
in
push
and
mov
xor
fimull
mov
inc
popa
mov
cmc
pop
out
out
jo
or
lret
dec
push
out
sub
cmpsl
test
popa
test
lret
pop
sti
mov
pop
jbe
and
pop
movsb
icebp
sbb
push
add
jb
das
bnd
rcrl
cltd
mov
lahf
xchg
adc
mov
test
adc
je
out
jo
inc
xchg
xor
and
mov
push
outsb
js
enter
jae
push
sub
pop
add
clc
cmp
repnz
push
cwtl
cmpsl
sub
aaa
xlat
xor
add
shll
stc
aad
xor
mov
xchg
cmove
mov
fsubl
mov
jl
add
cmpsb
mov
lds
adc
and
sbb
and
out
xchg
sub
jnp
xchg
sbb
fcmovnb
sbb
sbb
mov
dec
loopne
es
jmp
cmp
insl
jnp
scas
mov
mov
test
pop
loope
mov
cmpsl
bound
fldl
mov
or
idivb
cwtl
add
jmp
sub
mov
mov
jg
jnp
popa
add
dec
mov
inc
mov
pop
xor
repnz
sbb
mov
dec
jne
sub
xor
add
in
loope
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
jmp
loopne
cwtl
xchg
mov
pop
add
outsl
mov
int3
mov
sbb
adc
sbb
adc
loopne
stos
adcl
dec
fucomi
movsl
lahf
call
outsb
in
cmp
jmp
leave
mov
adc
and
andl
rclb
pop
nop
sbb
lods
shll
out
scas
leave
mov
sbb
lock
sub
loope
mov
aaa
jle
push
addl
daa
cmp
aaa
dec
dec
and
loopne
sbb
adc
mov
push
mov
pop
mov
aaa
pop
cltd
and
ljmp
or
jl
adc
in
in
in
mov
jmp
mov
inc
mov
outsb
popf
pop
xor
mov
push
mov
mov
cli
dec
movsl
outsl
ret
sub
mov
testl
push
xor
mov
lock
inc
leave
lret
xor
push
hlt
push
les
roll
cwtd
jbe
pop
fidivs
pop
lods
or
push
adc
mov
mov
and
ds
xchg
push
cmc
fstps
mov
clc
mov
jns
push
and
shll
adc
xor
mov
cwtl
sti
mov
aaa
xchg
stc
int3
xchg
or
push
xchg
sub
rcll
push
jo
jl
test
xor
out
sbb
sub
fidivrl
adc
ror
imul
xor
jo
jne
fldl
and
mov
fnstenv
pop
mov
popa
inc
sbb
leave
xchg
pushf
xchg
inc
inc
stos
adc
test
adc
dec
fldt
out
repz
cmp
cmp
pushf
cli
sub
cmp
cmp
adc
icebp
dec
jmp
push
test
sbb
jmp
popa
iret
pop
fnstcw
bnd
add
stos
repnz
adc
or
cltd
mov
loope
andb
cli
pop
mov
lock
pop
jge
xchg
stos
into
popl
in
hlt
push
pushf
insl
in
data16
sbb
aas
jne
xor
push
xchg
cwtl
jb
jmp
xor
inc
mov
negb
sub
or
adc
movsl
imul
cmpsb
movsb
mov
mov
pop
jecxz
sub
lods
sub
mov
push
rcrb
inc
sti
jge
cmpsl
dec
sbb
sbb
and
or
fwait
neg
or
lods
lea
xchg
insb
sbb
dec
and
push
sbb
xchg
js
stos
mov
mov
into
xor
rcll
ret
call
sub
cmpsb
jge
and
ret
or
add
add
les
or
xchg
pop
loope
push
adc
sbb
loop
stc
xchg
mov
dec
jg
adc
inc
xor
in
fs
xor
push
cmpsb
lods
jp
pop
hlt
in
jnp
arpl
fucomp
sbb
push
filds
dec
sbb
xor
jecxz
jmp
pop
and
stos
loopne
in
xlat
push
or
shll
pop
push
jnp
add
adc
dec
pop
fistl
pusha
add
mov
js
pop
jg
lock
dec
sbb
add
nop
mov
dec
data16
je
mulb
clc
aas
mov
mov
xchg
fidivl
and
push
shlb
mov
lea
jmp
mov
inc
out
lods
dec
cmc
insl
cwtl
pop
stos
cmpsb
aas
rorl
mov
push
add
dec
fisubrl
xchg
call
jge
ja
jg
and
insb
loope
dec
jg
movl
xor
ja
inc
lret
pusha
xchg
sbb
into
inc
xchg
push
jge
insl
roll
stc
xorl
inc
in
xlat
movsl
dec
jnp
idivb
cmp
fistpl
pop
push
cmp
push
xchg
mov
pop
push
xor
mov
lret
imul
fst
call
mov
orb
cmp
mov
jmp
xlat
cmp
jmp
inc
scas
xchg
js
std
cmp
loopne
push
aam
pop
out
lock
orl
fistps
or
sti
enter
in
test
pop
cmp
xchg
push
je
lahf
or
popf
pop
js
mov
mov
aad
iret
ljmp
imul
std
cmpb
xchg
loopne
pop
rcll
mov
fs
js
mov
xor
add
adc
aad
jecxz
int3
inc
xlat
loope
adc
test
ja
and
test
jmp
aaa
xlat
dec
push
push
stos
stos
cmpl
sub
fimuls
std
add
pusha
test
in
outsl
in
push
xor
pusha
xbegin
aad
fcmovne
daa
arpl
outsl
jp
aam
hlt
data16
mov
sbb
xchg
dec
push
cwtl
nop
out
aaa
xchg
or
dec
loop
imul
mov
into
jb
mov
stc
jne
push
dec
mov
in
imul
fcoms
loop
jae
jecxz
cmp
iret
lret
in
movsl
xchg
mov
icebp
jle
inc
xchg
and
mov
xchg
push
out
dec
insb
add
jmp
mov
push
mov
xor
cld
inc
xchg
leave
out
mull
in
gs
mov
scas
movsb
add
and
push
roll
arpl
push
stos
add
push
es
and
xchg
lcall
dec
pop
aad
les
orl
push
dec
mov
jle
add
mov
mov
shrd
shr
mov
mov
xor
xor
jmp
and
xor
ficomps
mov
jo
sbb
and
sbb
push
push
xor
inc
adc
mov
mov
pop
sbb
in
sbb
lret
lea
lods
iret
mov
and
idiv
sti
pop
pop
sub
cld
jne
and
stos
int
mov
iret
fadds
push
mov
imul
push
imul
scas
mov
push
aad
mov
cs
jne
xor
sbbb
jle
lods
jmp
movsb
dec
nop
mov
out
sbbb
sahf
mov
mov
adc
hlt
out
imul
stos
jbe
and
icebp
jmp
fbstp
jb
rorb
ds
fiadds
fdivl
js
pop
addr16
or
sub
aas
xor
stos
xchg
enter
mov
mov
cmc
push
int
mov
in
cwtl
xorl
mov
in
adc
loopne
mov
cltd
pusha
sub
mov
sbb
sub
aam
in
addr16
sub
pop
std
jns
or
mov
jbe
jmp
mov
pop
frstor
and
push
lret
sub
gs
stos
lock
in
out
jl
ja
cmc
push
mov
lahf
movsl
adc
sub
and
pop
les
or
enter
aas
cmc
jb
sub
and
and
pushf
jo
mov
lds
sub
push
jno
adc
jmp
cmp
add
aam
push
mov
sbb
test
inc
cmp
dec
mov
jo
push
out
mov
pop
and
mov
ds
rolb
stos
xchg
adc
sub
jb
movsl
lret
mov
add
mov
roll
pop
dec
enter
mov
loope
jb
adcb
iret
nop
js
mov
call
rorb
sub
mov
mov
pop
sar
xchg
test
in
out
and
mov
arpl
pop
mov
jns
jbe
pop
mov
enter
call
sub
cmp
xchg
sub
enter
cli
xchg
pop
js
scas
xchg
bound
sub
sahf
ja
xchg
daa
jnp
fs
push
add
dec
outsl
mov
sbb
es
lock
dec
imul
mov
loope
add
jae
pop
mov
loop
inc
jg
out
dec
cmp
xchg
xchg
or
push
cmp
ret
add
pop
dec
movsl
jg
cmp
repz
mov
pop
lods
fstps
adc
js
pop
out
outsb
data16
adc
jno
lock
xor
adc
and
shll
jg
sub
cmp
lret
pop
ss
not
es
and
xor
divb
add
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
jmp
fdiv
sub
mov
jp
sarl
adc
sbb
pop
add
cmovns
pop
jle
jecxz
cs
xor
cmp
mov
jne
mov
mov
pop
mov
test
push
adc
popl
mov
jl
xor
inc
xlat
xor
jecxz
lods
sahf
push
int
enter
mov
fisttpll
ja
rcrb
stc
je
mov
repnz
adc
loopne
mov
pop
jle
pop
mov
mov
stos
xor
cs
dec
mov
jmp
insl
jg
cli
rorb
movhps
icebp
push
shll
popa
jmp
adc
dec
mov
dec
add
cmp
sti
roll
test
adc
mov
adc
mov
int
ret
cs
adc
es
fbstp
scas
int
dec
fnstenv
jae
je
loope
mov
jae
xlat
sub
adc
jp
mov
pop
add
dec
loop
iret
arpl
sahf
cmc
mov
pop
in
inc
test
out
std
mov
outsb
mov
cld
jg
mov
mov
outsb
mov
test
pop
test
ljmp
outsb
xchg
std
enter
in
sahf
push
sub
xchg
stc
insl
push
popa
punpckldq
and
dec
rcrb
imul
mov
cmc
jecxz
mov
sub
out
adc
lods
mov
je
xor
aaa
cli
push
adcl
push
pop
pop
cmc
movsl
sub
fisttpl
adcb
leave
shrb
dec
mov
cld
stos
imul
bound
mov
jmp
call
and
xor
mov
and
icebp
rcrl
icebp
ja
inc
jmp
cmp
adc
xchg
jl
sbbl
push
xor
stos
mov
aam
les
xchg
ret
call
stc
cmpsb
and
xchg
jo
push
into
repz
cwtl
lcall
lret
jns
add
dec
scas
cli
fcmovnu
out
std
jb
pop
sbb
roll
jg
std
sahf
out
sti
and
lea
mov
mov
mov
add
xchg
aaa
sub
aad
and
mov
mov
in
mov
inc
xchg
iret
mov
fwait
inc
pop
loope
push
sbb
jb
test
in
jp
jae
xor
ret
pop
xchg
mov
je
xor
jns
adc
enter
or
add
or
pop
fwait
dec
push
push
sbb
ja
es
vpunpcklwd
pushf
fdivr
adc
xorl
cmpsl
mov
iret
add
pusha
xchg
mov
add
push
scas
shrl
das
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
jmp
out
mov
stos
mov
push
dec
lds
sbb
and
sbb
sub
je
ret
lods
mov
scas
fists
xlat
jecxz
xor
ljmp
sbbb
pop
and
subb
push
pop
mov
enter
ds
push
int3
mov
cmpsl
inc
leave
lahf
dec
sub
sbb
nop
outsb
nop
outsb
xchg
jmp
ljmp
cmc
roll
sar
cmpsb
mov
pop
ja
out
mov
jno
insb
ss
add
leave
ror
xchg
xchg
and
lret
inc
daa
jno
mov
lea
cmp
insl
mov
icebp
jl
nop
sub
cmc
js
out
xor
dec
and
sub
scas
or
pop
xor
imul
fldl
xorl
in
xchg
pop
aaa
addr16
loop
sub
cltd
imul
jle
test
inc
fisubs
ret
push
pop
sub
loopne
ss
in
lret
inc
out
mov
pushf
imul
rcl
add
in
dec
ret
or
adc
inc
and
faddp
sarl
push
pop
inc
inc
sahf
movsb
fldcw
mov
dec
es
movsb
dec
jge
lods
jmp
push
hlt
adc
push
and
pusha
xor
or
pop
pop
mov
ret
mov
adc
lret
out
imul
add
mov
in
sub
data16
mov
jbe
and
cmp
sub
leave
fsubl
xchg
inc
ret
aas
xor
adc
nop
repz
das
lods
and
repz
add
test
or
out
pop
sub
cmp
aas
clc
inc
push
lds
pmulhuw
adc
sbb
pop
in
inc
roll
sbb
or
pop
mov
pop
out
imul
out
in
sahf
pushf
lea
sbb
dec
out
fucomp
sahf
add
rcrb
adc
mov
lods
daa
aaa
cmpsb
sbb
data16
lods
cwtl
jmp
sahf
stc
xor
sar
jne
imul
sbb
ds
mov
stc
mov
in
cld
mov
inc
sub
mov
arpl
dec
or
mov
push
sbb
repnz
jg
jp
jbe
hlt
decb
adc
xor
adc
jecxz
mov
inc
cmp
xchg
cmc
sub
or
gs
cmp
minps
nop
xorb
jne
out
sahf
stos
mov
mov
mov
mov
push
enter
and
mov
lcallw
hlt
pusha
jbe
ret
mov
or
addl
lods
fbld
xchg
adc
add
sbb
sbb
daa
stos
hlt
mov
push
cltd
sub
adc
cmp
and
stos
cmp
xchg
mov
cmp
je
mov
sub
mov
mov
jmp
dec
lret
repz
cmp
fildl
cltd
mov
and
sbb
xchg
adc
shl
pop
mov
jne
repnz
popf
imull
loopne
rcll
mov
add
cmc
mov
mov
out
pop
icebp
aaa
jle
xor
push
xchg
mov
jno
andb
mov
jge
into
sub
pop
call
popw
call
xor
in
mov
or
iret
sbb
rcll
lods
sti
push
daa
cli
ja
aaa
mov
push
mov
or
push
dec
mov
ss
sbb
aas
cmp
jb
lahf
and
sub
push
sub
lahf
out
loop
or
pop
jo
shll
cmp
fidivl
xchg
in
inc
out
nop
lahf
jae
pusha
into
repnz
push
fimull
pop
and
insb
pop
ljmp
push
add
pop
popf
mov
fstps
jmp
idiv
cmpsl
sahf
sbb
pop
dec
insb
jmp
arpl
add
test
jp
and
aas
in
sarl
daa
repnz
lret
test
xchg
xchg
mov
cmp
out
cmp
cmpb
out
inc
clc
fsubrl
jmp
add
rolb
js
test
sub
movsb
mov
movsb
negb
push
mov
test
sbb
adc
and
das
mov
mov
sub
lret
insb
xchg
or
mov
aas
lret
ja
movsl
outsl
test
push
xor
pusha
fisubrs
data16
scas
in
cmp
sbbl
sub
repnz
mov
lds
das
xor
int
out
sbb
and
mov
jmp
adc
rcll
out
scas
insb
add
stc
pop
mov
cwtl
xor
add
mov
imul
dec
iret
pop
sub
loop
jo
dec
jl
ljmp
hlt
and
push
pop
int3
adc
dec
jmp
lahf
push
jb
add
pop
shr
or
psubsw
sti
and
loopne
pushl
mov
mov
jne
scas
lret
add
pop
ss
sub
addr16
dec
loope
jns
mov
lock
cmc
daa
xrelease
jae
jmp
shll
cmpsl
adc
jbe
imul
and
out
cmp
je
sti
adc
jg
leave
insb
jo
movsb
jl
sbb
cmpsb
pop
popa
fadds
xchg
jl
in
leave
push
ja
hlt
stos
and
pop
sub
xchg
cwtl
lods
test
sahf
xchg
ss
add
test
inc
scas
sub
adc
mov
call
icebp
ja
jns
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
xor
or
mov
mov
mov
shll
xorl
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
jmp
iret
xchg
ret
or
cmp
jo
stc
mov
sbb
and
sbb
pop
rcr
out
cmp
add
push
outsb
fs
outsb
and
icebp
jmp
js
ljmp
fwait
xchg
jno
in
dec
movsl
loop
out
pushf
lea
jb
xor
or
call
and
daa
mov
adc
lods
call
xchg
mov
add
xchg
bound
and
mov
lods
push
mov
outsb
jg
lods
dec
or
loopne
push
push
mov
jb
and
xlat
xchg
jne
in
test
push
jne
xor
lods
lret
push
jo
and
mov
sbb
jns
repz
dec
mov
push
mov
in
mov
mov
adc
mov
ret
mov
in
xchg
ret
pop
out
push
outsb
push
jg
adc
nop
cmp
add
add
stc
lds
mov
inc
fmuls
pop
call
push
dec
adcl
stc
mov
call
sti
push
and
mov
mov
and
test
push
push
cld
pop
lock
test
adc
out
test
fadds
xor
pop
and
shlb
xchg
pop
add
fisubl
push
xchg
mov
cwtl
es
stos
or
mov
lock
repz
or
dec
lret
push
xchg
xlat
test
push
idivb
ja
lock
sbb
fldcw
pop
ja
push
out
fsubs
xlat
xor
cwtl
xchg
mov
sub
out
xchg
imul
dec
sub
mov
mov
lret
adc
popa
fcompl
push
and
pop
cmp
icebp
dec
pop
frstor
jo
stos
in
je
xchg
sub
dec
test
push
fdivp
xchg
push
or
outsl
mov
mov
cmp
movsb
or
and
fnsave
xchg
pusha
cld
mov
jmp
mov
xchg
inc
push
sarb
cmp
sbb
fidivl
or
movsb
xchg
movsl
cmpsl
dec
movsb
xor
jo
loopne
stc
cmovb
adc
dec
mov
adc
inc
sar
xchg
inc
adc
in
aad
pop
or
sbb
jno
ja
or
jae
dec
and
into
push
mull
sbb
in
notl
insb
std
repz
and
shr
jecxz
adcl
and
jmp
pop
gs
aam
dec
rcr
rorl
iret
dec
mov
scas
shr
inc
fbstp
pop
les
ja
movsb
jge
mov
ds
mov
push
xor
cmpsb
jecxz
cmc
mov
xchg
xlat
cmp
rep
jnp
dec
std
pop
cld
loopne
inc
loop
xor
or
mov
mov
xor
jmp
fstps
cmp
and
pop
xchg
rcrb
mov
mov
sbb
push
xchg
imul
push
insb
ret
adc
fisubl
mov
ss
xorl
inc
sub
arpl
insb
dec
mov
test
sbb
adc
shlb
jbe
maskmovq
divl
mov
bound
aaa
lea
mov
mov
ret
ret
mov
rcrb
aam
adcl
jbe
push
xor
filds
es
sbb
jne
add
insb
push
test
insb
shll
lods
arpl
cmpsb
inc
jmp
repnz
cli
xor
pslld
stc
shl
pop
int3
out
mov
add
sarl
mov
test
jge
hlt
inc
xchg
lock
adc
and
jp
lcall
iret
push
inc
dec
sbb
cmp
xchg
loope
in
scas
jbe
and
jns
je
sti
cmp
nop
shr
test
fnstenv
mov
jp
icebp
dec
cmp
xchg
pop
add
mov
mov
sbb
in
mov
iret
ret
cmp
pop
mov
lock
dec
pop
pop
je
sar
gs
sub
and
mov
push
out
jns
stc
mov
fsubr
sub
or
push
in
or
sbb
movsb
pop
add
mov
jnp
jnp
xor
sbb
fisubrl
add
push
imul
pop
mov
xor
mov
or
cmpsb
pop
and
mov
call
inc
js
push
xchg
xchg
xchg
xor
cs
dec
or
scas
jg
xor
bnd
je
pop
sbb
arpl
ficoms
mov
loop
cltd
xchg
out
jle
lret
test
pop
in
cmpsb
dec
fs
ret
jne
shrl
push
mov
repz
cwtl
pop
adc
shlb
pop
inc
and
xor
icebp
out
sub
or
fadd
jae
xchg
push
rcl
and
lret
jl
push
loopne
dec
mov
cmp
inc
iret
imul
test
add
aaa
mov
xor
movb
xchg
xor
insb
jg
in
ret
xchg
lret
loope
jns
ror
mov
inc
and
cltd
add
scas
ja
shlb
lahf
mov
push
adc
pop
fwait
mov
mov
ss
and
test
adc
leave
mov
adc
fs
sbb
fcompl
xchg
ds
jno
aad
inc
addb
push
sub
aad
cmpl
jae
mov
or
adc
sbb
sbb
stos
mov
hlt
movsb
dec
sub
adc
std
xchg
jp
cmpsl
popa
adc
push
mov
mov
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xorl
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
jmp
daa
into
dec
cli
sbb
sub
das
pop
jo
mov
sbb
adc
sbb
test
cs
pop
inc
add
push
inc
dec
inc
insl
and
jmp
test
jae
out
pop
jo
mov
das
adc
add
cltd
in
mov
bound
jo
in
clc
fcmove
rcrl
xchg
scas
repz
xchg
add
popa
mov
pop
call
je
les
roll
push
and
js
push
cmp
xchg
xor
notl
movsb
and
and
leave
imulb
xchg
int
push
icebp
dec
adc
outsb
aaa
cld
push
and
out
cmp
cltd
jp
and
cmp
sbb
lds
scas
cmp
leave
sahf
mov
loopne
arpl
rclb
push
loop
dec
ss
mov
jne
repz
push
icebp
xchg
movsb
icebp
fisttpll
sbb
int
dec
gs
pop
xchg
outsl
xor
inc
dec
outsl
icebp
xchg
jecxz
add
xchg
mov
or
mov
dec
adc
adc
es
pop
xlat
push
cmpsl
aas
xchg
cmp
int
adc
inc
pop
inc
lods
rclb
dec
xorb
adc
fcompl
fsts
movsb
jae
pop
push
rcrb
dec
mov
faddl
incb
adc
aad
ret
arpl
call
out
push
adc
jbe
mov
jo
sub
cmp
ds
jle
cs
xchg
xchg
cmp
pop
mov
xchg
outsl
adc
outsb
cmp
sarl
int3
das
mov
dec
rcrb
jmp
lds
mov
addb
std
jno
incl
lods
jno
das
xor
loope
adc
mov
dec
jno
ja
cmp
jge
dec
movsb
bound
test
clc
lock
or
inc
push
mov
fisubl
fimuls
icebp
mov
jle
and
lea
out
loope
ja
testl
test
jmp
sti
addr16
adc
add
testl
push
dec
scas
std
daa
fldl
int
jns
cmpsl
mov
in
mov
ss
mov
ja
sti
adc
cmp
inc
xchg
popl
cmp
mov
fidivrl
out
fxch
pusha
xor
aad
imulb
ja
mov
out
mov
pop
sbb
loopne
iret
sbb
pop
scas
inc
in
test
add
add
mov
jae
xor
jle
xor
daa
leave
dec
lahf
dec
lret
xorb
xor
add
sti
fldcw
adc
cwtl
test
pusha
push
jae
xor
hlt
je
imul
scas
mul
jecxz
imul
mov
mov
nop
cmp
xchg
push
ja
fcmove
ljmp
fucom
cmpsb
mov
push
adc
loopne
pop
out
aam
and
add
add
sbb
add
inc
inc
lret
dec
lret
inc
dec
and
mov
test
sbb
and
sbb
mov
test
xchg
mov
imul
pop
test
pop
and
arpl
scas
das
sahf
aas
pusha
cltd
mov
scas
or
daa
push
xor
jno
test
into
enter
jnp
cmp
sub
mov
cmp
mov
add
mov
fcomps
and
rcrb
insl
or
cmpsb
push
jnp
push
sub
inc
and
imull
or
xor
pop
xor
andb
jbe
dec
adc
dec
imul
mov
xchg
cmp
js
fimull
daa
mov
bound
test
fidivrl
pop
and
cld
fbstp
stos
mov
xchg
in
lods
mov
mov
mov
inc
dec
pop
lock
cmc
pop
xchg
ds
and
sub
mov
lcall
inc
loop
mov
notb
lahf
sbb
nop
pop
test
idivl
call
pushf
enter
lcall
ljmp
mov
out
outsb
cmp
push
or
shll
lods
mov
mov
sub
and
pop
dec
inc
jge
dec
scas
push
sti
push
rcll
jns
mov
jg
arpl
push
cmp
mov
jo
ss
or
movsl
dec
jle
xchg
sbb
scas
aaa
cmp
pop
aas
testb
aad
lret
jmp
add
fwait
mov
pop
push
push
sarl
add
add
jecxz
je
call
insb
sbb
pop
pop
jg
xchg
gs
imul
sub
sbb
push
loope
shll
push
jae
sti
push
rolb
jp
jb
aad
arpl
add
and
mov
jle
mov
and
jno
mov
movsb
adc
sub
mov
xchg
mov
mul
test
sbb
or
cld
add
enter
and
adc
mov
lahf
push
fwait
lret
scas
inc
mov
call
insb
dec
dec
fbld
xor
mov
jno
pop
jbe
ret
cmp
add
stos
ljmp
pop
sub
jge
sub
sbb
mov
adc
loop
push
inc
lods
icebp
dec
jg
fldenv
mov
inc
sub
jns
push
or
jb
aad
jno
or
jo
int3
xor
xor
shlb
jo
adc
aaa
mov
mov
mov
jbe
jo
int
lods
dec
jo
jae
push
dec
icebp
cmp
icebp
adc
fwait
mov
mov
in
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
jmp
mov
int3
xchg
sbb
dec
fstpt
inc
inc
push
test
sbb
cmpsl
es
mov
sbb
loope
das
idiv
jb
sub
cmovae
pop
enter
sub
jle
adc
mov
sbb
repnz
push
xchg
add
test
push
xor
sbb
dec
repz
stos
cwtl
mov
push
sti
sub
adc
dec
imul
outsl
or
sub
dec
push
adc
jne
ljmp
insl
popf
fbld
jne
sub
xchg
jle
push
loopne
dec
xor
push
cmpsl
gs
or
sti
arpl
lock
adc
mov
shlb
mov
add
mov
call
push
jl
add
dec
fstpl
out
push
movsb
fiaddl
mov
sbb
test
sub
pop
ljmp
icebp
imul
jno
shll
mov
pop
pop
sti
mov
pop
arpl
pop
xlat
adc
push
and
jns
xchg
mov
sub
hlt
xlat
sbb
jp
push
inc
cltd
in
xor
push
test
push
lods
cmpl
or
test
mov
mov
aaa
mov
stos
xchg
push
test
outsl
filds
loope
jae
pop
push
insb
xlat
adc
add
mov
cli
sub
add
popa
rolb
fnstcw
mov
nop
adc
cld
jne
int
add
and
mov
or
stos
dec
xchg
pushf
and
dec
cmpsb
inc
adc
aaa
cmp
lea
cmp
mov
aam
and
std
inc
sub
mov
lret
sbb
aas
xchg
adc
lcall
rcrl
jbe
lods
imul
mov
sub
sub
add
ret
lret
test
stc
shlb
dec
mov
push
loopne
mov
outsb
mov
test
lds
and
or
adc
and
jecxz
sbb
push
mov
sarb
into
add
inc
cltd
push
sbb
pop
cltd
sub
shrb
pusha
xor
mov
cwtl
push
inc
jecxz
movsl
mov
fldcw
pop
push
addr16
enter
dec
cmp
int3
ret
add
in
and
push
jo
jp
push
xchg
push
pusha
outsb
adc
adc
jae
aad
push
in
in
cmp
jl
outsl
pop
dec
outsb
idivl
inc
clc
ret
ljmp
rorb
mov
stos
jecxz
pop
stos
dec
mov
dec
sub
jnp
adc
mov
outsb
repnz
scas
rorb
test
bound
addr16
mov
rcrb
in
ds
imul
imul
inc
or
test
push
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
jmp
subl
pop
rclb
jae
mov
adc
sbb
test
fwait
aaa
and
cmp
into
mov
adc
mov
call
enter
mov
fmuls
pop
test
push
inc
fsubrl
push
adc
pop
popw
and
fimull
ljmp
stos
test
fmuls
adc
sbb
ljmp
mov
scas
cmp
mov
clc
insl
cmp
subl
jns
mov
test
jge
fidivrl
mov
test
test
pop
add
mov
mov
aas
pop
les
movsb
xor
jo
and
mov
pop
inc
daa
sahf
mov
rorl
and
mov
lock
in
or
shlb
outsl
and
mov
test
std
loope
lret
les
int3
stc
pop
scas
pop
dec
inc
movsb
xor
setno
shlb
dec
mov
jg
push
aaa
mov
loop
mov
int
gs
addb
stos
jp
lcall
sbb
adc
mov
loopne
mov
aaa
cmp
jae
ljmp
pop
ljmp
mov
das
clc
mov
adc
jl
out
cwtl
mov
adc
adc
test
in
rcrl
mull
xor
fmull
popa
pop
adc
lods
fnstenv
inc
data16
pop
lea
sbb
xchg
stos
jle
shlb
jp
or
dec
dec
jbe
mov
mov
repz
mov
nop
sahf
adcb
or
mov
adc
aad
cmp
out
sub
lods
xor
dec
jae
in
or
inc
fldl
movlps
repnz
mov
mov
sbb
or
cli
push
inc
jg
sti
dec
movsl
pop
aas
push
adc
mov
pop
ljmp
stc
xor
aad
pop
mov
dec
push
jb
std
xor
xchg
push
inc
pop
cmp
mov
push
pop
xchg
popa
add
push
shr
movsb
stc
and
mov
and
loope
or
aam
jo
imul
cmp
sub
rorl
in
and
mov
sbb
xor
in
cld
sbbb
stos
lods
ret
cmpsl
mov
pop
push
fldenv
jae
jae
mov
mov
or
inc
sahf
subl
rorl
push
add
push
xacquire
dec
pop
pop
insb
push
cltd
cmc
sbb
popa
xchg
sub
inc
or
pop
adc
push
cwtl
in
mov
xor
xor
fidivrs
notb
sub
push
sbb
inc
adc
stc
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jmp
lock
or
dec
loopne
pop
ret
jbe
mov
sbb
adc
sbb
xor
mov
inc
mov
push
sbb
adc
fdivrs
xchg
inc
insl
dec
cwtl
outsl
or
and
mov
mov
pop
scas
shlb
fildl
mov
cmpsl
shl
test
mov
sbb
jmp
daa
push
jle
pusha
sahf
jge
pop
or
jnp
sbb
outsb
es
pop
call
pop
dec
loop
lock
gs
sub
mov
sbb
pop
or
into
sub
cli
int3
mov
push
bound
sahf
nop
imul
andb
xchg
and
scas
cli
jge
pop
fldt
pop
push
aas
pushf
and
lahf
inc
adc
add
mov
fnstsw
fcompl
and
sbb
jle
cmp
jo
stc
push
or
xrelease
loope
sub
out
int3
out
dec
jnp
pmaxsw
in
mov
lea
cmp
add
pusha
dec
mov
in
pop
loope
pop
or
dec
push
insl
in
mov
into
adc
or
push
jg
call
push
loop
jo
std
repz
in
jno
aaa
in
testl
lods
mov
lock
lods
mov
xchg
pushf
pop
xchg
pop
pop
out
es
xchg
sbb
stos
jmp
daa
int3
lods
sub
xchg
or
inc
or
jl
inc
sahf
xchg
test
test
inc
out
scas
jnp
mov
icebp
int
cld
movsl
lret
push
js
mov
orb
cmpl
scas
mov
cs
xorb
das
mov
fidivrl
sub
mov
push
adc
inc
test
xchg
notl
mov
lret
es
mov
push
cltd
mov
or
adc
xchg
xor
jnp
lret
inc
filds
mov
mov
std
and
mov
leave
pop
and
pmaddwd
pop
test
stos
aam
pop
ficompl
sbb
inc
fidivs
inc
cli
mov
std
stos
adc
outsl
push
stc
rclb
adc
cmp
fnstenv
mov
ds
xlat
xor
in
shl
pop
add
dec
arpl
cwtl
rcrb
inc
adc
rcr
jl
shrl
mov
test
jp
add
ja
push
xor
inc
ss
aaa
sub
fimull
ds
lods
leave
lds
testl
xchg
loopne
or
push
rcrl
sarl
mov
dec
les
fisttps
dec
mov
vcmpss
aas
loope
push
push
pop
gs
lret
movb
add
inc
push
clc
mov
sti
or
dec
shr
fmull
rorl
test
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
jmp
fdivr
fists
ss
shlb
mov
and
sbb
inc
loope
push
pop
rcrl
cmc
test
cmp
adc
fisubl
dec
jnp
sar
jl
mov
into
dec
push
inc
or
dec
shrb
std
movsb
jp
mov
pusha
out
cli
push
rcrb
icebp
fisttps
shrb
sub
out
loop
sub
push
lods
push
pop
loopne
push
out
or
mov
dec
stc
adc
pop
or
add
sbb
dec
ljmp
mov
repz
ret
fwait
dec
mov
jno
jns
cmpl
andb
push
fistpl
dec
inc
loop
test
mov
push
push
lods
pop
xchg
cltd
enter
adcb
rcrb
jnp
iret
popl
ret
push
mov
cmpl
mov
insl
sbb
xchg
add
inc
ja
mov
loop
pop
aaa
fbld
cmp
and
iret
push
dec
call
sub
std
inc
and
popa
add
xchg
adc
aad
notl
ljmp
or
mov
scas
cwtl
push
repnz
sbb
pop
div
stos
andb
push
xchg
push
add
push
adc
insb
mov
pop
outsb
mov
mov
data16
cmp
stos
lret
test
jmp
das
cmp
in
repnz
sti
inc
cmc
mov
add
scas
jle
ja
inc
cmp
lock
add
scas
pop
popf
ss
cli
pop
into
dec
or
sbb
hlt
mov
pop
xchg
ret
mov
sbb
or
xor
push
clc
mov
decb
jo
test
lret
fstpl
mov
and
push
movsl
push
cmp
sub
ds
push
push
mov
pushaw
cmp
jmp
movsb
push
js
aad
andl
mov
mov
es
mov
fs
add
popa
lret
cmc
mov
mov
imul
dec
test
push
das
jl
cvttps2pi
rorb
mov
mov
les
pop
sbb
rorb
movsl
xchg
dec
sub
mov
out
push
jno
xor
jle
mov
jne
mov
adc
cmp
add
movsb
add
sub
pusha
lock
sbb
xchg
inc
mov
aas
sub
push
subb
xchg
inc
in
in
roll
stos
lret
stos
repz
scas
dec
pushf
ror
sbb
xchg
fs
inc
stos
lahf
pop
push
js
ret
inc
xchg
fdivp
das
jae
int
push
loopne
mov
aad
xor
jmp
pop
fisttpl
cli
inc
jg
push
data16
gs
ret
enter
loopne
lahf
mov
ficoml
imulb
add
shl
jmp
cmp
sbb
push
push
out
push
popa
jo
xchg
sbb
and
sbb
sub
inc
mov
repnz
push
hlt
and
aaa
jl
push
and
data16
cmp
sti
outsl
push
or
xor
cmp
dec
cld
adc
jle
xorb
outsb
data16
cmp
xchg
inc
mov
mov
dec
and
pop
sbb
mov
mov
sti
cmpsb
dec
jp
outsl
mov
add
iret
loope
repz
addb
mov
jbe
and
xchg
add
adcb
arpl
scas
lods
into
lods
sar
mov
add
sub
loope
test
sbb
ja
es
lahf
add
mov
pushf
jp
imul
data16
aad
sub
cli
xchg
std
push
cmpxchg
adc
and
mov
rcrl
shl
add
rolb
lea
push
repnz
cmp
and
pop
or
sub
cli
push
icebp
in
ret
xchg
sbb
lds
add
mov
inc
pushl
inc
mov
sbb
mov
movsl
cmpsb
les
jl
ljmp
xchg
hlt
jmp
call
ret
lret
ss
inc
mov
aas
cmp
inc
in
mov
fsts
mov
lcall
adcl
pop
mov
lret
and
jns
mov
fsubr
cmpsb
aaa
enter
push
sbb
inc
cmp
sbb
fnsave
xchg
add
sbb
push
xchg
movsb
clc
in
scas
insb
pop
mov
fsubrp
jb
aad
sbb
sbb
aaa
mov
cmp
dec
push
stc
xor
sub
add
pushf
pop
push
notb
in
loop
rcll
pop
fxch
dec
jne
or
mov
add
lret
into
mov
dec
fstpl
mov
mov
add
jns
inc
into
push
dec
xchg
mov
or
fisttps
ss
xchg
add
adc
adc
inc
sub
cmp
inc
jne
cmpsb
pop
scas
repz
in
sbb
mov
pushf
add
test
pand
adc
nop
pop
xor
mov
loope
xchg
outsl
mov
pop
out
jmp
lret
insl
aas
test
inc
sahf
adcl
mov
cli
pop
mov
icebp
inc
mov
lds
xor
fcmovne
mov
dec
jl
mov
or
aas
push
mov
icebp
dec
cmp
test
ljmp
xchg
in
push
aad
jno
cmpsb
outsb
push
mov
dec
mov
aas
jno
xor
std
mov
mov
iret
or
adc
mov
mov
pop
and
inc
mov
sub
adc
enter
aad
xor
and
rorb
ret
adc
inc
add
or
enter
add
or
mov
or
mov
mov
xor
mov
jmp
push
sub
fldt
mov
mov
fmuls
sbb
push
pop
and
jg
stos
leave
and
inc
push
mov
fnstenv
js
out
push
jge
loop
iret
sbb
mov
fcmovbe
xchg
insl
into
pop
and
cmpsb
push
stos
notb
fidivrs
or
nop
dec
std
cmp
inc
sub
cmp
popf
pop
fcmovne
jae
icebp
cmpsb
inc
movsl
jmp
xchg
addr16
jge
mov
popf
lods
lds
push
outsb
mov
jne
pop
ljmp
jmp
pop
cmpsb
adc
mov
or
imul
add
aad
pop
adc
jl
dec
cmpsb
sahf
cmp
shll
mov
add
into
or
adc
aad
dec
stos
call
ficoms
dec
xchg
push
mov
fsubrs
pop
in
xchg
fdivl
pop
imul
jb
sbb
xor
xor
ja
clc
sbb
pusha
int3
push
jl
add
inc
insl
and
pop
jne
push
push
jnp
out
add
jg
pop
ds
add
cmp
jge
cmpsb
xor
out
xchg
hlt
jp
jmp
cmpsl
outsl
out
sbb
mov
out
jmp
mov
sbb
mov
or
add
es
and
mov
pop
xchg
cwtl
mov
sahf
insb
push
mov
push
jns
fstps
and
sub
in
fmuls
sbb
mov
mov
xchg
enter
sbb
ss
or
sbb
sti
jb
stc
jae
inc
daa
mov
shl
popf
mov
fs
push
push
out
ja
cmp
pusha
mov
pop
lahf
rcrl
jl
sub
sub
mov
xchg
cmp
clc
and
xor
and
fidivrl
sub
out
pop
add
and
lods
xchg
xchg
insb
adc
pop
loope
jne
in
dec
add
pop
repnz
mov
je
fbstp
les
adc
rol
push
fs
jo
jge
pop
lods
sub
cmp
or
fildll
fnstcw
dec
adc
cmpsb
jae
adc
aad
add
jecxz
dec
scas
jne
cmc
dec
mov
fcmovb
mov
fstpl
cmp
sub
sub
cmpsl
iret
xorb
mov
jne
nop
dec
mov
and
stos
test
gs
loopne
lret
mov
dec
jne
adc
inc
movsl
inc
mov
jmp
mov
data16
lcall
and
sbb
dec
shl
and
mov
lea
or
rorl
lret
and
jp
xor
nop
mov
aas
lods
aam
into
repnz
pop
sub
inc
loope
pop
cmp
jge
xchg
jno
rcl
in
sbb
insb
adc
enter
add
movsb
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
jmp
imul
fs
leave
leave
jl
das
cmpsl
mov
and
sbb
push
loope
sahf
insl
sub
mov
ror
or
sub
out
add
into
into
sub
data16
icebp
xchg
add
and
scas
inc
xor
addr16
pop
pop
arpl
sbb
lcall
jbe
call
sbb
pop
test
inc
sub
mov
or
outsl
dec
add
into
mov
pop
or
push
add
pop
pushf
lock
in
enter
into
sub
pushf
ret
fwait
pop
push
cmp
and
xchg
mov
jmp
in
jmp
enter
add
lods
pop
jecxz
sbb
lret
push
sbb
insb
test
cmc
movsb
and
roll
mov
xchg
leave
cmp
gs
and
popf
aas
cmp
icebp
push
daa
push
or
xchg
push
pop
jae
sub
repnz
inc
mov
lods
mov
out
jle
adc
push
push
rcl
jmp
in
sub
xor
xor
or
lock
inc
jb
sti
cmp
andl
mov
rcrl
inc
les
mov
xlat
cld
gs
ret
xchg
push
cwtl
clc
fldt
je
xchg
xlat
test
out
pop
shr
dec
add
and
mulb
enter
das
jge
pop
in
fs
ja
hlt
jge
pop
repnz
icebp
imul
push
xor
imul
js
xchg
mov
iret
rcll
push
fs
arpl
add
xor
call
loop
push
dec
jmp
jne
int3
and
push
mov
fcomps
addr16
mov
or
cmp
push
mov
jb,pt
mov
lret
test
sub
mov
pop
adcl
icebp
std
mov
sub
fisubs
out
js
mov
insl
xchg
js
idivl
dec
dec
pusha
inc
aas
xor
or
mov
movsl
fistps
and
and
into
call
pop
int3
data16
js
test
pop
in
sub
mov
push
popa
dec
jnp
inc
adc
cvtpi2ps
int3
pop
gs
int
cmpsb
cld
mov
xchg
andb
mov
sbb
fwait
cwtl
mov
outsb
test
les
cmp
mov
add
xchg
or
test
xchg
cmp
mov
push
int
mov
xchg
stos
pop
ret
not
loop
mov
rorl
pop
inc
ret
add
fwait
jns
fdivrs
mov
xor
dec
push
inc
scas
repnz
mov
mov
push
cmc
mov
mov
loope
pop
pop
push
pop
int3
lcall
push
fxch
aaa
push
dec
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
or
shl
jmp
dec
sbb
jmp
dec
mov
mov
jg
sbb
adc
sbb
mov
clc
sbb
adcl
in
out
shll
daa
xchg
jbe
cmp
add
and
int
pop
rolb
pop
pop
cmpsl
sbb
push
mov
mov
xchg
clc
mov
enter
cmc
jp
xor
insb
es
pop
orl
pop
jg
aam
out
add
aas
inc
mov
or
cmp
lods
cmp
lock
js
shrl
pop
inc
xchg
push
stc
jmp
popf
std
inc
lods
jbe
pop
mov
ss
inc
push
fdivl
pop
call
in
arpl
fs
lods
test
enter
dec
repnz
or
movsl
jne
and
les
daa
mov
inc
pop
jnp
fcompl
pushf
les
mov
mov
jp
les
sahf
out
cmp
pop
push
or
ret
mov
cli
inc
repz
imul
xchg
mov
lret
add
daa
mov
filds
cmp
pushf
mov
and
lcall
out
out
sbb
push
sti
push
adc
mov
xchg
and
add
lahf
xor
add
pop
xchg
imul
push
xchg
pop
sarl
sbb
inc
pop
ja
mov
jne
mov
dec
repnz
push
in
ja
mov
lea
daa
sub
jae
inc
and
cld
leave
cmpsl
xor
push
mov
leave
pop
lcall
testl
rorb
inc
andb
hlt
sub
inc
sbb
push
inc
rclb
xor
mov
cwtl
push
push
nop
jecxz
cwtl
jmp
mov
xchg
cmpsb
or
xchg
pop
or
push
inc
inc
into
pop
testl
and
or
stos
fisubrs
leave
mov
add
or
jge
cs
add
mov
xchg
loope
test
lds
inc
scas
mov
lret
mov
and
cmp
mov
mov
movsl
and
cmp
std
je
ds
and
dec
jecxz
push
rcl
cwtl
xchg
dec
jb
mov
xor
incb
cli
out
divl
das
adc
rcll
insb
adc
rol
mov
mov
mov
jae
sbb
mov
mov
scas
pop
mov
ret
clc
dec
shll
icebp
push
mov
mov
std
cmp
and
push
xchg
or
dec
xlat
xor
rorb
js
iret
mov
jecxz
insb
sbb
andl
mov
scas
inc
insb
aaa
mov
fdivrl
push
scas
inc
push
ret
inc
xchg
ret
mov
scas
mov
popf
ss
imul
jmp
ja
adc
mov
xor
xor
shrd
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shr
shl
jmp
mov
mov
sub
jle
push
movsl
mov
and
sbb
lock
imul
push
cmp
out
pusha
inc
push
loopne
negb
aaa
sbb
push
dec
jl
sar
mov
ret
dec
mov
icebp
xchg
sbb
push
nop
in
aam
jo
xor
lret
pop
push
mov
popf
jg
repz
and
sub
and
and
ds
dec
lcall
xor
cmpsb
fsubs
sti
mov
xchg
jns
or
push
sub
in
mov
mov
int3
cmp
out
push
inc
sub
cli
inc
add
pop
pop
push
cmpsb
loopne
hlt
and
fwait
dec
sub
rolb
jb
sub
mov
fs
push
dec
mov
cmpsl
lods
mov
sbb
shrl
stos
mov
push
lahf
in
stc
popf
or
inc
repz
aam
addr16
sub
cmp
mov
adcl
and
add
mov
push
subl
aas
mov
mov
sti
insl
test
mov
loopne
fwait
popa
pop
push
xchg
jbe
push
add
mov
sbb
xchg
mov
out
je
frstor
test
jmp
fs
pop
add
adc
or
pop
roll
xchg
inc
add
and
xor
pop
lock
sahf
jnp
jmp
lahf
clc
jl
xchg
sub
xor
sub
lods
add
pop
in
insl
xlat
sbb
or
test
jb
adc
dec
stc
mov
xorl
xor
hlt
dec
jns
ror
xchg
pushw
jb
pop
pushw
fiadds
jb
add
jmp
rcrl
call
in
in
call
bound
mov
call
ret
mov
inc
cmp
xchg
add
or
and
loope
test
lret
dec
mov
xchg
adc
mov
mov
add
cmp
repnz
pusha
imul
test
enter
xchg
idivb
lods
mov
fiaddl
and
cmp
inc
lods
out
add
outsb
inc
ficompl
cs
std
cmp
jns
mov
mov
fimuls
aad
adcl
sbb
sbb
push
xchg
and
inc
aam
inc
push
scas
shlb
popf
push
loope
push
and
jne
stc
pop
cmp
dec
dec
aas
in
lahf
test
and
lock
xchg
jo
cmp
dec
enter
shlb
pop
push
mov
jae
lahf
push
pusha
lahf
popf
repnz
insl
cmpsb
xor
xchg
imul
mov
mov
xor
or
mov
shll
xor
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
jmp
loope
fidivs
insb
pop
pop
dec
xlat
mov
stc
jae
sbb
adc
sbb
aam
clc
mov
inc
cmp
and
jp
js
scas
dec
and
inc
mov
push
xchg
outsb
cmc
or
push
xor
imul
insb
enter
ss
sub
imul
mov
mov
out
repnz
adc
aas
les
bnd
dec
in
cmp
mov
pop
xchg
mul
std
pop
clc
adc
lock
dec
popf
add
js
inc
inc
inc
inc
xchg
sarb
out
mov
lods
popf
and
test
enter
fcoml
sub
mov
cmp
fcmovne
sub
mul
ljmp
adcl
cmc
push
rol
arpl
or
mov
bnd
inc
mov
push
mov
xor
mov
dec
and
push
or
punpcklwd
jg
and
subb
xchg
jmp
mov
adc
mov
out
out
leave
xor
rorb
fcoms
push
jl
or
sbb
sub
pop
mov
xor
push
ret
mov
test
test
sbb
mov
lods
js
pop
xor
fmull
and
dec
and
in
push
mov
mov
pop
outsl
and
rorb
inc
xor
push
xchg
ss
jmp
mov
adc
fnstcw
hlt
mov
movsl
popf
xor
ja
orb
cmpsb
adc
add
outsl
xor
dec
ljmp
or
faddl
or
dec
pop
sbb
mov
xchg
fmuls
dec
sahf
imul
xchg
add
cmp
inc
stc
out
cld
mov
aas
xchg
mov
das
dec
and
test
aam
aad
lahf
cmp
and
loop
repz
add
and
icebp
pop
fscale
shlb
jg
sahf
adc
leave
into
push
xor
cmp
mov
cld
fldcw
xchg
lods
pop
sar
bound
pop
pop
pop
xor
sarl
push
pop
and
movsb
push
fimull
jg
and
scas
adc
mov
pop
cld
shll
dec
sub
out
rcrb
push
mov
cli
fwait
add
lods
xchg
adc
out
imulb
ds
jae,pn
push
xchg
cmpsb
xlat
ja
lret
and
pop
shrb
shll
ljmp
push
or
xor
inc
push
jbe
or
arpl
shlb
lret
sbb
jb
addl
dec
popa
ljmp
push
dec
xor
sarb
mov
subb
add
xchg
loop
add
mov
jp
fisttps
sbb
out
fwait
cs
fstps
das
add
add
push
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
jmp
mov
pop
lcall
sbb
sbb
and
sbb
dec
inc
loope
and
sbb
cmpsb
jle
jecxz,pt
stos
mov
test
jp
xchg
xor
sub
sbb
lret
cmpsb
add
imul
and
sub
int
inc
xor
sti
cmpsb
cwtl
mov
bound
lods
ret
sub
xchg
mov
aam
pop
imul
jl
or
inc
scas
les
data16
push
push
pop
xor
in
shrl
in
mov
push
mov
cmp
inc
lret
inc
pop
inc
out
insl
xor
ds
loopne
mov
mov
mov
add
lcall
xor
cld
nop
push
lods
inc
inc
mov
adc
push
add
mov
imull
imul
jns
inc
imul
sti
fsubs
data16
cmp
mov
cmp
mov
jg
xchg
inc
mov
sahf
push
ret
xlat
xchg
jp
int
hlt
pop
and
in
loope
les
or
add
and
pop
aas
ds
es
jae
push
adc
xor
pop
aad
es
cmp
inc
sbb
inc
ret
push
xchg
leave
pop
lahf
repnz
and
mov
aaa
xorb
mov
ja
fwait
xchg
daa
mov
cmp
addb
lahf
push
nop
adc
fsub
push
or
fwait
adc
push
movsb
sti
pop
pop
cmpsb
outsb
xchg
cmp
mov
push
fcompl
movsl
das
dec
cltd
lahf
cmp
into
enter
inc
xor
xchg
test
push
dec
loopne
sub
arpl
inc
inc
xor
adc
js
js
lret
popa
pusha
ja
int
icebp
cs
scas
loop
test
xchg
sahf
arpl
and
push
xor
cmp
sahf
dec
sbb
into
sbb
pop
and
cmp
cwtl
xchg
pop
subb
roll
aam
sub
dec
jle
xor
call
push
pop
and
sub
sbb
and
sub
cmpsb
ljmp
shll
enter
pop
insb
aaa
leave
push
mov
inc
imul
jp
stc
inc
jp
shrb
mov
ss
push
into
mov
xchg
cmpsl
mov
sub
fs
or
mov
shll
mov
jmp
sbb
inc
mov
loopne
repz
push
mov
mov
xchg
in
pop
insb
pop
scas
and
jnp
je
cld
les
gs
out
mov
and
mov
fistl
inc
mov
ret
adc
mov
or
dec
fistpll
mov
mov
iret
sbb
push
sub
mov
enter
add
ljmp
and
push
sbb
push
leave
jl
sbb
and
sbb
cmp
cli
or
pop
dec
or
add
sub
adc
stc
sbb
push
es
scas
pop
adc
inc
out
nop
aam
and
popf
pusha
lret
adc
mov
pop
into
add
inc
shr
shll
jp
scas
push
push
xchg
or
mov
cmp
je
outsl
stos
rol
sub
jo
aas
rclb
dec
ss
xchg
gs
fmulp
xor
dec
add
xchg
push
ret
push
fstl
fbstp
repz
mov
arpl
insl
data16
jne
mov
xchg
cmpsl
rcl
ret
xchg
dec
repz
lea
add
fwait
call
sbb
in
jo
mov
mov
stc
adc
adc
lret
shlb
push
push
mov
icebp
arpl
testb
sub
xor
in
cld
popl
xor
aam
sbb
repnz
mov
pop
and
inc
or
xchg
push
ret
pop
jp
inc
std
aaa
xchg
imul
psubd
rclb
inc
outsb
int3
xchg
jl
cld
bound
jl
arpl
dec
pop
frstor
into
push
inc
sub
test
jp
movsb
ds
subl
outsb
test
in
mov
ret
sbb
outsb
cwtl
inc
inc
push
jb
repz
add
push
cmp
cmpb
jg
jns
fidivs
mov
cmp
pop
gs
rcl
fwait
adc
push
and
sbb
dec
lret
into
inc
sti
int3
arpl
les
adc
iret
mov
into
jns
pop
iret
iret
jmp
cmc
push
out
into
sub
das
rcrb
jnp
jl
cmpsb
add
out
dec
dec
fdivs
into
add
push
fnstsw
clc
daa
or
cli
js
mov
and
fdiv
inc
add
insb
test
in
mov
jl
out
std
mov
and
mov
lods
fwait
add
cmp
cmp
or
jge
sbb
add
pop
inc
pop
cmp
fdivrl
sbb
cmc
shrl
cwtl
test
dec
mov
dec
sbb
insb
pop
inc
outsl
and
add
test
mov
incb
push
inc
mov
lods
mov
sbb
ret
shlb
xchg
adc
mov
adc
mov
or
out
out
test
cmp
dec
in
and
ja
or
andb
ds
adc
jmp
add
cmc
or
mov
dec
jl
stos
addr16
jb
int3
pop
jb
push
mov
dec
shr
insb
and
cmp
fcmovnb
or
imul
adcb
cld
inc
fdivrl
fsubrl
arpl
xchg
out
xor
mov
mov
mov
push
push
push
call
shld
shl
jmp
popf
xchg
dec
mulb
sbb
fdivs
lea
popa
sbb
and
sbb
sub
cs
pop
out
int
in
sbb
push
insl
lds
mov
stos
sub
arpl
pop
sbb
inc
sbb
pop
mov
hlt
mov
mov
incb
cmp
sbb
addr16
dec
jbe
mov
push
fimuls
mov
sub
jle
sti
adc
push
fld
cmpsb
iret
std
cwtl
mov
jmp
pusha
daa
in
mov
test
and
dec
stc
push
cmpsl
mov
xlat
xchg
mov
daa
sahf
push
cld
fsubrl
mov
adc
fsubrs
int
add
rcrb
jae
mov
xchg
iret
insb
incb
adc
push
and
bound
mov
push
or
faddl
ss
stc
mov
dec
bswap
pmulhuw
pop
jg
addr16
cmp
add
push
xor
cmp
in
mov
dec
xchg
es
jmp
movsb
add
push
es
lods
bound
mov
adc
pop
ret
lods
or
aas
inc
and
js
dec
sarl
mov
jl
fisttps
mov
pop
jmp
inc
lret
addr16
xlat
fistl
not
sbb
dec
cmpsb
add
mov
pop
das
dec
push
lea
and
and
inc
xchg
xor
fnstcw
push
aaa
int3
pop
fdivrs
out
ljmp
jnp
sti
jns
pop
push
xor
xor
xor
sub
jno
inc
pop
fidivrs
push
push
adc
xor
sbb
add
push
ds
outsb
ja
shrw
mov
mov
adc
ret
mov
das
add
addb
aas
test
incb
mov
mov
dec
jo
pop
inc
cs
ljmp
in
mov
jbe
dec
fdivl
sub
ret
dec
int3
cltd
gs
or
push
inc
adc
jmp
ret
jp
sbbl
push
in
sub
xchg
jbe
ret
inc
outsb
mov
xchg
es
sbb
leave
mov
xchg
jae
mov
out
jbe
je
xorl
and
xchg
pop
mov
addr16
xor
dec
std
cmp
fcomps
sbb
dec
mov
jmp
jge
adc
jle
ljmp
or
fistpl
loopne
imul
adc
hlt
in
leave
mov
pop
inc
lods
mov
arpl
xor
out
data16
lods
inc
out
sahf
arpl
in
jl
xchg
jmp
and
test
or
and
mov
xchg
pop
push
cmp
adc
xor
cmp
inc
ljmp
es
in
push
inc
xchg
adc
mov
sbb
fcmovne
je
repz
and
fisttpll
dec
enter
sub
cwtl
jecxz
sbb
adc
stos
mov
lea
lods
mov
or
xor
or
xor
xor
mov
mov
jmp
xlat
cmp
jge
jle
jmp
push
pop
sbb
and
sbb
xchg
int3
es
lods
icebp
iret
lea
subl
xchg
jae
jp
sbb
inc
cmpsl
out
loopne
mov
ret
push
fsubrl
das
imul
in
aad
roll
jno
imul
and
ss
and
push
fdivrl
stc
les
fnsave
pop
aam
shrl
adc
sub
ret
dec
mov
xchg
cmp
imul
scas
xchg
sbb
xor
outsb
inc
popfw
and
push
sahf
les
orl
stos
pop
sbb
popa
xor
cltd
cltd
jbe
xlat
adc
inc
or
jle
mov
pop
arpl
xor
push
jl
mov
add
or
or
test
stos
loopne
xor
mov
fsubrs
cwtl
stos
or
mov
fwait
pop
lock
popa
cmpsb
xlat
cld
stos
gs
push
movsb
sub
xchg
dec
call
push
data16
cmp
xorl
fistl
outsl
aaa
aaa
sub
repnz
sub
imul
aaa
mov
and
jmp
inc
xchg
push
fsubs
push
dec
mov
lcall
sub
inc
call
data16
inc
mov
sbb
movsl
push
movl
ss
mov
scas
and
shrl
in
cmpsb
dec
dec
sub
pop
add
test
je
adc
xchg
adc
cltd
pusha
arpl
xchg
sub
ljmp
xor
push
mov
out
lret
test
lret
mov
test
add
jbe
aaa
negl
leave
and
out
test
int
inc
inc
andb
jmp
mov
adc
push
xor
popa
xlat
jmp
add
add
aam
mov
cwtl
dec
call
push
aaa
mov
mov
outsl
addb
loop
push
jp
cmp
xchg
sarb
adc
dec
or
push
and
mov
add
outsb
outsb
pop
push
sub
sub
cld
sarb
sbb
sub
dec
pop
sub
clc
jecxz
popf
sub
in
adc
jp
adc
mov
xchg
push
ds
jg
cwtl
lods
adc
xchg
ds
test
mov
add
mov
jno
push
cmp
aaa
enter
and
sub
icebp
sahf
rcr
pop
mov
mov
repz
dec
mov
pop
adc
mov
sahf
loop
hlt
rclb
jno
mov
push
mov
pop
push
mov
xor
cmp
sahf
pop
or
sbb
xchg
cli
movb
xchg
sbb
sbb
out
push
mov
shld
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
shl
mov
mov
mov
shrd
xor
or
mov
mov
mov
mov
shl
xor
or
shr
xor
or
cmp
jne
cmp
je
pushl
pushl
jmp
fwait
ror
dec
mov
scas
in
mov
and
sbb
adc
sbb
out
loopne
inc
jnp
jl
sbb
sub
or
ficompl
movsl
popa
int
inc
icebp
xor
pop
mov
popa
cld
sub
jnp
pop
push
push
cli
orb
or
int3
cmp
shl
add
cld
cmpsl
cmp
inc
cwtl
movsb
ja
in
mov
inc
sub
popf
jb
and
sbb
cmpb
psubd
cmp
rclb
jecxz
loop
cmp
enter
adc
mov
and
lods
push
in
sahf
das
add
rcr
add
scas
jns
adc
push
hlt
xor
repz
int3
pusha
sub
cmp
shrb
dec
mov
xchg
dec
sahf
addr16
or
sti
outsl
pushf
popa
adc
pop
int
push
mov
add
out
pop
lret
lods
jg
fucomi
loop
call
mov
sbb
lds
sbb
addr16
cmpsb
fisttps
cwtl
scas
lahf
push
and
adc
dec
cmc
cmpsb
and
jp
lods
jb
cld
sub
pop
fwait
pop
je
mov
rolb
lds
sub
sbb
xchg
loop
dec
inc
dec
add
ja
jnp
add
int3
loopne
push
adc
inc
xchg
jb
xor
pushf
mov
xlat
mov
stos
mov
sbb
fcmovnbe
fcmovne
mov
addr16
or
push
pop
test
lods
mov
push
lret
mov
push
add
js
out
jle
push
push
stc
mov
sbb
sub
push
ret
xchg
sahf
mov
push
adc
inc
cwtl
xchg
xor
addl
js
mov
fnstsw
cmp
mov
pop
pop
xchg
jae
int3
leave
arpl
mov
lock
and
jns
scas
lret
repnz
scas
aaa
stc
pop
out
sub
mov
fisttpll
lret
sbb
int
sbb
jae
push
in
cli
lret
fs
cmc
outsb
lock
scas
daa
dec
pop
inc
jl
leave
sbb
neg
cld
and
jnp
cltd
and
sub
or
add
test
ja
or
cmp
mov
sub
movsl
or
sub
hlt
fldcw
xchg
enter
gs
cli
xchg
xchg
sub
jns
push
aam
lds
push
negl
mov
dec
hlt
addb
lret
add
lea
pop
adc
mov
mov
fimull
sub
cli
pop
xchg
ret
push
subb
decb
mov
insl
lods
adc
stc
je
scas
pop
sbb
mov
dec
outsb
cmp
repnz
scas
mov
es
push
pop
dec
add
filds
pushl
push
push
call
jmp
mov
dec
jb
insl
fnstcw
dec
sbb
and
sbb
fbstp
cld
ror
and
sbb
pop
jl
mov
push
or
inc
dec
lea
and
mov
test
cmp
or
rorl
outsb
outsb
sub
out
lock
enter
push
or
mov
jmp
ss
stos
pusha
mov
je
lock
cmp
push
pop
ss
push
adc
enter
xchg
xchg
mov
sub
shlb
dec
or
sbb
faddl
inc
stc
dec
xchg
std
insb
cmp
aad
sahf
mov
testl
cwtl
mov
pop
push
lret
jne
mov
fisubs
rorl
jbe
jbe
movsl
call
es
fdivrl
cmpsb
loope
adc
lock
jmp
push
out
test
sarb
test
jp
xchg
stos
jmp
in
sub
sti
push
or
lea
popa
xor
in
dec
dec
and
xor
sti
sub
cmpsl
in
fisubl
lods
mov
fcoms
mov
in
xchg
imul
dec
jns
cld
adc
jmp
rcrb
inc
xchg
adc
ret
jnp
inc
sub
dec
aad
cld
pushf
mov
cmp
mov
insl
inc
hlt
stos
jmp
shlb
xor
sbb
cmp
cltd
sbb
stc
lahf
jo
xchg
out
push
test
or
mov
xchg
in
push
xchg
pop
mov
jg
add
out
jle
lods
movsl
stos
add
mov
inc
incl
dec
mov
repz
sub
and
imul
xchg
mov
out
dec
push
pushf
push
xor
outsb
rorl
mov
pop
mov
jae
xchg
xor
dec
dec
sub
or
push
bound
pusha
inc
push
int
sub
and
jae
push
inc
lock
xor
fs
mov
test
jnp
mov
cmp
scas
movsl
je
pop
jae
scas
les
sub
repnz
add
mov
pushf
cmp
mov
dec
ds
fnstsw
sub
mov
xchg
jne
cli
sbb
mov
jecxz
dec
lahf
in
cmc
cmpsl
mov
arpl
xlat
popf
xchg
jl
pop
mov
jg
leave
pushl
rclb
pop
cmp
xlat
inc
lods
sub
inc
jnp
insb
xor
pop
stos
and
lahf
subb
and
mov
int
fimuls
test
cs
xchg
int
push
shrb
jl
push
gs
fisttpl
mov
mov
mov
nop
not
adc
mov
cltd
inc
fsubl
call
out
sbb
les
adc
pop
pop
push
fwait
dec
jl
jo
dec
fsubl
rclb
xchg
mov
ret
movl
cmp
movl
jae
movl
cmp
movl
jae
sbbl
shrd
movl
shr
ret
mov
xorl
xor
and
shr
ret
xor
xor
ret
push
mov
sub
sub
movl
mov
cmpl
movzbl
mov
movzbl
mov
jmp
mov
mov
jne
pushl
pushl
pushl
push
call
mov
and
xorl
add
not
sbb
adc
mov
movl
mov
movl
cmpl
mov
notl
mov
jmp
mov
mov
jbe
pushl
pushl
push
push
push
pushl
push
call
and
movzwl
add
not
mov
adc
andl
add
mov
sbb
movl
movl
push
movzwl
and
movl
cmpl
movl
mov
movzbl
jmp
movl
movl
jge
push
push
pushl
push
push
call
sbb
incl
xorl
add
movzwl
add
add
movl
xor
add
and
push
or
movl
cmpl
not
mov
jmp
movl
mov
jle
pushl
call
mov
mov
adc
not
sub
sbb
or
incl
mov
cmpl
not
mov
mov
not
jmp
movl
movl
jae
push
push
push
call
add
sub
mov
xor
sbb
neg
mov
push
push
sbbl
push
orl
call
jmp
inc
dec
cmpsb
movsb
lcall
mov
lock
mov
add
sbb
pusha
jp
clc
cwtl
xor
add
jne
and
adc
repz
in
or
mov
pusha
mov
inc
rclb
jnp
or
pop
and
outsb
test
mov
sar
jmp
adc
add
push
push
sti
sub
add
aas
inc
mov
cmpsl
push
icebp
popa
aas
and
rol
js
test
icebp
mov
jl
shr
mov
xchg
cmpsl
loop
xchg
pop
pushf
dec
xchg
jns
popl
pop
sub
jl
aam
rorl
pop
push
mov
call
fistps
xchg
mov
fucom
aas
cmp
in
lods
xorl
xchg
inc
or
sti
push
ja
cmp
push
lret
rcl
sub
inc
outsl
lret
adc
shlb
push
jmp
push
sbb
lcall
push
dec
in
data16
incl
or
ljmp
ja
icebp
pop
push
adc
xchg
loopne
loop
pop
dec
pop
das
xlat
jmp
in
popa
addb
rorl
shlb
push
add
sbb
aad
xchg
mov
sub
iret
or
adc
push
dec
dec
aas
ret
mov
xchg
test
fbld
ret
fwait
cmp
dec
and
test
adc
sbb
enter
lret
dec
mov
fldt
mov
sbb
jg
cld
aad
add
mov
repz
daa
out
adc
inc
lea
scas
aam
dec
adc
pushf
ret
push
sub
sar
jne
arpl
scas
cmpsb
mov
shr
mov
adc
sbb
iret
test
imul
out
jo
movb
mov
adc
ficoms
loope
div
jge
lret
iret
mov
cltd
out
loopne
dec
inc
shrl
and
mov
jl
clc
mov
mov
jge
jae
push
pushf
dec
and
mov
lods
sbb
out
xor
les
xor
lahf
pop
add
in
aaa
pop
subb
xorl
imul
sti
sub
or
outsl
cli
sub
loopne
shrl
lahf
ss
and
dec
loope
jbe
jge
pop
mov
xor
or
mov
mov
cmpsb
sahf
mov
sbb
bound
bound
or
pop
sub
setge
ljmp
popa
in
inc
inc
push
stos
in
in
dec
dec
push
repz
pop
mov
dec
insb
jo
push
inc
mov
repz
sbb
dec
push
pop
cmp
mov
pop
mov
stc
and
push
int3
sarl
pop
cmc
xchg
cmpsb
mov
inc
mov
test
xchg
dec
sahf
mov
pop
loope
pop
fistpll
jbe
mov
fmull
jne
push
orl
or
push
addl
or
sbbl
xor
xor
push
push
negl
call
mov
cmpl
not
movzwl
notl
jmp
movl
jb
push
pushl
pushl
call
adc
movzwl
or
xor
add
sbb
xor
mov
or
xor
neg
sbbl
mov
adcl
push
adcl
push
movl
push
push
decl
call
cmpl
mov
mov
jmp
movl
jae
pushl
call
sub
subl
xor
sbbl
sub
or
xorl
jmp
mov
sbb
sbb
sub
mov
inc
sbb
add
sbb
out
mov
incl
lret
add
inc
lahf
fidivs
or
test
xchg
mov
dec
outsb
adc
sbb
test
jmp
jno
sbb
addr16
add
mov
mov
jo
cli
int
stc
movsl
sarl
aad
popa
lahf
cmp
jns
ja
movb
pop
repnz
aaa
icebp
gs
shl
or
inc
xor
and
subl
aas
jae
nop
loopne
mov
andl
gs
sbb
and
aad
sub
jo
sbb
inc
push
push
cmp
addr16
xchg
addr16
in
cmp
lods
xchg
push
jnp
adc
push
stos
pop
aad
sbbl
loopne
mov
add
mov
neg
dec
sbb
or
sub
sub
sub
lods
dec
push
data16
ds
pop
dec
and
adc
pop
ss
mov
pop
out
jne
fbld
mov
mov
in
scas
ljmp
xor
out
mov
cmp
xchg
lret
fldl
sbb
adc
fldcw
inc
xchg
pop
cltd
mov
mov
int3
mov
push
out
and
push
sub
dec
and
cmpsl
mov
cmp
in
ficoml
mov
cld
or
dec
cmc
sbb
mov
or
cltd
ret
imul
mov
sbb
xor
ljmp
jmp
stos
jmp
lcall
pop
adc
jns
sbb
jnp
and
cltd
loop
repnz
or
and
inc
pop
xchg
test
fimull
inc
mov
bound
add
test
cmp
hlt
sti
test
pop
aaa
divl
adc
or
jmp
movsl
mov
or
cmp
outsb
jge
or
iret
or
mov
aaa
sbb
mov
inc
call
add
lods
in
jo
inc
add
push
mov
in
ds
push
sbbb
cld
mov
cmp
das
dec
sahf
in
es
dec
nop
mov
pop
xchg
cs
pop
xor
in
sub
mov
sub
movsl
lahf
hlt
xor
shrl
data16
mov
ret
inc
adc
popa
jo
movzbl
cltd
push
xchg
test
mov
je
mov
xor
dec
bnd
fistl
fsubrs
jp
test
mov
out
push
mov
adc
cmpl
sub
sahf
and
push
rclb
xchg
push
dec
insb
push
cltd
sbb
sub
xchg
jle
gs
data16
repnz
movsl
sbb
inc
test
pusha
jns
sti
jno
pop
out
mov
jecxz
adc
scas
das
repnz
out
inc
rorb
lock
add
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
mov
or
mov
or
mov
or
or
jmp
add
pop
mov
test
pop
jle
cmp
sbb
cmovle
testl
and
and
out
add
or
mov
jle
add
loop
stc
sbb
lcall
push
cmp
dec
xor
jns
pop
xchg
or
xchg
xchg
popf
je
movsb
cmp
int
fxch
test
roll
iret
jns
sbb
pop
dec
shrl
negb
push
test
lock
jns
inc
xchg
jge
jle
push
pushf
jge
aam
arpl
scas
mov
mov
insb
push
daa
xor
xchg
add
std
push
lods
xchg
push
call
outsb
ret
push
aaa
pop
or
aam
lret
xchg
pop
and
inc
adc
xchg
ja
ret
pop
dec
hlt
dec
pop
sti
adc
pop
cmp
dec
fstl
shll
jle
jmp
adc
xor
add
mov
lods
dec
push
mov
inc
int3
or
mov
ret
jns
ja
jae
push
add
js
std
je
adc
mov
add
leave
fsts
out
jp
orl
aaa
xor
jae
out
fdivp
fsubrp
insl
jne
ljmp
lcall
repz
sub
enter
mov
sbb
iret
scas
mov
test
in
xchg
sahf
ret
in
into
loope
mov
ficomps
enter
push
add
fnstsw
mov
or
dec
jp
add
sbb
mov
cmp
inc
imul
in
pusha
sahf
arpl
out
pop
and
pop
in
jo
in
icebp
lods
lea
mov
cmp
movsb
ljmp
lds
push
and
sub
and
adc
push
push
adc
rorb
push
or
addl
jg
outsl
and
mov
mov
pop
inc
test
push
ret
jecxz
xchg
ffreep
mov
ja
push
inc
xchg
push
mov
xor
xor
mov
sbb
inc
jae
inc
push
jmp
sub
cmp
xor
jo
push
ret
std
outsb
and
lahf
add
pop
inc
xchg
ss
or
sahf
pop
lock
orl
push
or
mov
dec
xor
movsb
lods
jns
fwait
jo
xchg
jnp
inc
rcrb
mov
and
sti
repz
das
adc
sub
loope
hlt
mov
or
dec
into
mov
nop
js
mov
adc
and
out
jl
popa
enter
inc
nop
lock
pop
pop
stc
adc
stos
sbb
mov
in
stc
sbb
mov
add
and
sbb
xchg
mov
das
sub
cmp
jne
cmp
je
movl
movl
mov
mov
xor
xor
and
jmp
xor
jne
insb
sbb
push
out
int3
or
dec
mov
sbb
adc
sbb
sbb
push
fdivrl
ljmp
jg
add
fldenv
gs
lock
sbb
sbb
enter
or
mov
insb
test
xlat
adc
ud0
pop
in
out
fmull
mov
or
popa
inc
mov
das
xchg
popa
push
repnz
xchg
mov
lahf
gs
or
sbb
into
popf
pushf
fcompl
mov
push
xor
addr16
push
adc
mov
cld
cltd
shlb
repz
lock
sub
inc
pusha
shlb
mov
adc
mov
shrb
pop
dec
xchg
mov
xor
push
jae
rol
pop
cmp
push
and
enter
mov
aam
loope
cmp
repnz
les
lods
lea
aaa
cmp
xchg
jns
xchg
adc
cmp
lret
inc
push
cmp
mov
loop
lds
js
mov
lea
and
xchg
sahf
jecxz
pop
arpl
jge
mov
std
dec
pop
shrb
mov
xor
pop
sub
sub
lds
xchg
xchg
loopne
inc
push
cld
mov
inc
dec
call
lret
loop
jo
sbb
push
jle
cli
lea
in
pushf
repz
pop
rcl
aaa
divl
pop
pop
sbb
push
adc
push
inc
rcl
lods
arpl
inc
mov
test
add
sbb
adc
pop
push
sub
stos
cmp
addr16
mov
jns
xchg
popa
pop
mov
cmc
loope
fisubrl
pop
cmp
ror
jecxz
mov
je
arpl
stc
data16
ret
les
int3
lret
je
mov
xor
stos
jl
xchg
sbb
cltd
std
xchg
or
or
xor
mov
mov
sub
xchg
adc
jmp
ja
mov
pushf
ror
or
fs
leave
imul
iret
cmc
fsubs
aam
into
call
imull
xchg
arpl
mov
es
mov
in
mov
rorb
sub
ret
push
in
in
shr
out
jno
push
data16
and
cltd
sbb
in
sub
dec
out
pop
xor
push
mov
cli
mov
aam
fstpt
jb
cmp
movb
mov
mov
push
xlat
adc
jg
xor
fidivs
test
rolb
mov
enter
xorl
testb
add
imul
fwait
push
int3
lock
xlat
inc
es
lds
out
mov
cmp
es
dec
addb
jle
pop
ret
mov
in
insl
aam
es
adc
mov
pop
jl
sbb
sbb
shlb
or
jo
cli
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
jmp
in
mov
sub
push
inc
push
xor
sbb
adc
sbb
xchg
test
push
bnd
jg
hlt
addr16
mov
jge
test
xor
out
ret
inc
xorb
push
int
dec
imul
xchg
insb
cmp
pop
mov
es
movsl
push
arpl
loope
subw
push
xor
lret
inc
sbb
ret
or
push
pusha
mov
ljmp
js
lcall
std
mov
cltd
into
dec
icebp
jl
lahf
add
sbb
subb
xchg
cmp
sub
jbe
jmp
inc
sbb
mov
cmc
add
andl
pop
adc
xorl
mov
ret
fildl
xchg
repnz
aaa
iret
cmpb
add
test
jno
sti
cmpsb
or
mov
inc
ljmp
sub
cwtl
nop
jns
int3
cltd
push
aas
ficoms
sub
testb
and
mov
sub
insl
js
pop
frstor
dec
push
icebp
xor
xchg
mov
stos
and
sti
push
jno
mov
sub
sub
es
mov
cmc
jmp
pop
les
mov
les
das
add
adc
xor
imul
hlt
cmp
mov
dec
add
outsb
fadd
into
xchg
nop
pop
mov
sub
jb
cltd
scas
ja
subl
rcr
cmp
out
pmovmskb
cmp
pushf
xchg
xor
inc
sub
std
js
in
rclb
data16
loopne
mov
xlat
lret
es
cltd
xor
mov
lret
inc
push
in
add
sub
sub
sub
mov
mov
mov
cmp
popa
insb
push
and
push
lahf
mov
add
cmp
sbb
movsb
std
iret
stos
in
aam
nop
mov
inc
lcall
int
dec
dec
fildl
imul
clc
mov
jmp
clc
int3
pop
sbb
jno
sbb
in
add
cmc
clc
out
fbld
ja
pop
das
je
ja
cmp
sbb
jnp
lock
and
lcall
sar
rcll
bound
sti
out
push
or
xor
mov
add
inc
call
ret
test
dec
pop
leave
push
add
jecxz
jl
sbb
sbb
or
xor
call
adc
ljmp
clc
mov
or
push
cmpsl
lret
cmp
jge
jb
dec
adc
rcrl
add
cmp
or
stc
stos
xor
leavew
dec
jp
jno
or
sub
loopne
and
ja
sti
and
test
push
mov
jbe
arpl
jmp
icebp
out
xor
cmp
adc
shrl
in
mov
inc
push
jmp
add
push
sbb
ja
popf
lahf
xchg
mov
add
sbb
jno
cld
fbstp
add
add
xor
jno
inc
mov
popf
shlb
out
adc
fsubrs
ljmp
sarl
mov
push
ficoms
ljmp
adc
mov
rorl
dec
inc
pop
mov
inc
fwait
sbb
pop
stos
inc
inc
sbb
inc
push
pop
aas
lock
mov
inc
and
cmp
or
inc
mov
cltd
lret
jge
lods
mov
dec
xor
ds
ds
sub
in
mov
rcrl
imul
loop
shr
mov
inc
adc
int3
cmp
mov
push
jp
das
lret
cmp
loope
clc
push
in
cmpsb
lods
nop
dec
inc
ja
jnp
push
mov
lret
popa
xchg
outsb
lahf
mov
call
bound
clc
fcmovbe
jmp
dec
shr
aaa
or
xor
pop
add
mov
push
and
mov
iret
jmp
jl
pop
aaa
or
mov
xchg
pop
xchg
jno
mov
orb
mov
inc
incb
mov
inc
int
lods
lock
push
sub
cmc
fcmovnb
out
cmp
insl
inc
mov
aaa
mov
sub
outsl
aam
mov
nop
sarb
or
jb
lret
bound
imul
cmp
jl
push
pop
sub
into
in
in
mov
or
inc
cmc
mov
ss
or
testb
out
jnp
in
adc
or
sarl
mov
stc
mov
js
cmpb
mull
and
iret
pop
add
add
dec
popf
and
pop
push
sub
cmp
or
dec
sti
sub
pop
add
push
cmp
pop
das
aam
bound
fstp
cmp
or
rcrb
jg
add
in
rorl
pop
inc
into
push
das
lret
and
xchg
push
shlb
pop
xorl
dec
fiadds
adc
std
fidivrs
sbb
mov
mov
or
stos
mov
cmpsl
xor
pop
dec
fwait
xor
scas
stos
imul
stos
mov
fmull
jno
movsl
mov
mov
mov
add
adc
outsb
jle
outsb
jno
mov
ja
push
loopne
leave
inc
rcrb
pcmpeqd
mov
jno
sub
mov
xor
loop
popa
mov
das
mov
add
push
or
adc
test
aad
cltd
je
add
and
rcrl
fstpt
dec
lret
pop
jg
sbb
ss
fcmovbe
dec
jmp
aas
fcom
lds
repnz
add
push
in
push
jmp
pop
cld
stc
xor
movl
jbe
sub
lea
imulb
pop
pop
and
call
mov
mov
push
push
and
and
push
jmp
addr16
bound
mov
sub
jle
and
sbb
daa
sbb
stc
pop
cmp
jmp
loope
add
push
fldenv
pop
mov
popa
or
fnstenv
push
or
stc
push
jb
cmp
lea
in
mov
std
push
push
pop
jge
pop
cltd
cld
stos
popa
jmp
jl
push
sbb
sub
xchg
push
dec
push
xchg
dec
in
loope
dec
jb
and
or
cmp
add
or
or
dec
sbbl
jb
out
movsl
jg
xchg
dec
sbb
or
jb
sbb
push
test
adc
bound
repnz
sbb
fisttps
or
mov
xor
sbb
dec
divb
cld
inc
je
push
and
mov
sub
mov
xrstors
jb
fcoms
les
icebp
fst
inc
cmp
adc
rolb
adcl
pop
add
and
adc
icebp
inc
data16
cs
pop
in
cld
sbb
scas
ret
sbb
xor
std
mov
xlat
mov
push
add
je
mov
add
push
addr16
in
adcb
addr16
pop
pop
aaa
pushf
test
sbb
daa
into
roll
mov
movl
rcll
frstor
int
sbb
jmp
lahf
push
pop
push
jg
nop
pop
pop
aam
aad
inc
sahf
adc
pop
aad
insl
push
xor
movsl
push
jae
or
jno
and
iret
cmp
sbb
aam
cmpsb
jle
inc
pop
mov
fwait
cmp
nop
mov
mov
mov
outsb
int
in
fucomip
dec
or
pop
dec
outsb
add
addr16
pop
call
dec
stos
pushf
aaa
inc
adc
pop
mov
ss
idivl
fildll
mov
inc
loopne
jne
sbb
xchg
into
adc
jbe
add
fs
ds
or
jae
mov
xchg
sar
es
push
jl
xchg
outsb
stos
in
in
adc
push
sub
cs
test
insl
scas
andb
fidivs
loop
test
cmp
jmp
pop
imul
cmc
movsb
sub
out
roll
jmp
pop
fildll
aad
add
nop
outsl
mov
mov
xchg
scas
mov
jl
cmp
subb
mov
add
cli
shlb
js
or
mov
or
jmp
movsl
add
push
or
leave
fidivs
cld
pop
or
mov
pop
mov
mov
ret
jle
push
fwait
pop
sbb
call
or
fstl
sahf
mov
or
das
push
xor
jno
push
mov
adc
jmp
dec
push
xchg
push
mov
dec
inc
fwait
or
sbb
test
push
sub
fwait
xchg
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
jmp
rcr
sub
sbb
loope
scas
mov
inc
mov
sbb
adc
sbb
cmpsb
xor
fwait
int3
inc
mov
movsl
mov
or
aas
popf
mov
mov
shlb
test
xchg
std
stc
xchg
mov
dec
pop
sbb
mov
or
or
fldl
adc
clc
mov
xor
sbb
jp
leave
bound
or
ss
rcr
mov
push
mov
dec
sub
pushf
mov
mov
stos
cmovae
outsb
add
outsb
push
add
adc
mov
fidivrs
mov
jp
pop
xchg
inc
mov
ret
jg
sbb
pushf
jnp
inc
outsb
inc
pop
lods
scas
cmc
sub
inc
and
xchg
cs
test
js
sub
es
push
icebp
stc
add
loope
test
cmp
roll
scas
fistpll
stos
sahf
addr16
jl
pop
mov
mov
xlat
test
adc
mov
enter
push
idiv
push
xchg
mov
addr16
adc
cli
faddl
imul
jns
xor
mov
arpl
mov
and
adc
cli
xchg
xor
push
mov
scas
xchg
dec
orl
inc
cmc
fs
mov
in
cmp
ljmp
dec
jecxz
push
mov
in
in
fsts
push
int3
icebp
xchg
les
add
pop
pop
testb
and
out
fs
imul
addr16
or
mov
inc
pop
or
adc
lcall
mov
cli
cmp
adc
sbbl
adc
mov
mov
sub
and
movsb
cmp
mov
push
inc
andl
or
jl
jl
push
lock
lock
ss
add
jno
dec
movsl
push
lea
dec
adc
in
data16
stos
xor
and
mov
pmaddwd
movsb
or
outsl
jbe
sub
mov
mov
cmpsl
sbb
sub
mov
mov
pop
add
lahf
stos
sbb
mov
mov
enter
outsl
or
sbb
leave
fbstp
in
jmp
add
mov
out
test
push
inc
lahf
mov
adc
or
cld
hlt
outsb
cwtl
cmp
rcll
mov
inc
clc
gs
int
mov
mov
loope
dec
xchg
rclb
pop
xor
outsl
lods
cmp
in
cltd
sub
shll
jl
movsb
data16
call
int3
inc
jb
es
mov
fdivl
ficoml
inc
fisttpl
mov
loop
fcomps
push
cmp
mov
jo
cmpsb
pop
jp
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
jmp
adc
nop
dec
mov
push
sbb
sbb
adc
sbb
int3
mov
adc
into
xor
jno
sbb
test
adc
data16
cmpsb
or
fildll
sub
mov
inc
fwait
cld
lret
adc
ret
test
lret
mov
inc
pop
mov
in
pop
test
mov
cmpsb
pop
scas
jb
jg
or
dec
clc
fidivs
orl
rcrl
sbb
movsb
pop
pushf
sub
add
in
or
pop
jno,pt
mov
ret
cmp
sbb
lahf
addr16
icebp
jle
mov
mov
add
sub
ss
mov
idivl
int3
xlat
jnp
pop
xor
mov
push
mov
pop
mov
stos
cld
inc
push
popa
or
lahf
dec
inc
mov
cmp
shll
or
mov
cmpsl
cmpsb
loop
xchg
fstl
popa
mov
clc
jo
mulb
sub
pusha
orb
push
and
popf
daa
imul
and
inc
xor
and
call
sarl
push
and
sarb
or
cmpl
add
icebp
dec
fwait
push
sbb
rclb
dec
dec
rcrb
mov
mov
push
mov
or
fistpll
push
or
fidivs
cs
mov
sub
fcompp
mov
fxch
popa
push
incb
je
pushf
ljmp
cmp
mov
inc
xor
lea
std
loop
dec
stos
jmp
div
push
bound
cld
dec
es
jbe
loopne
div
sub
cwtl
and
mov
xor
test
std
add
divb
loop
pop
mov
pusha
movsl
add
sub
jne
sub
js
stos
sub
icebp
cwtl
inc
insl
mov
in
int
jb
or
lcall
sub
jg
out
cmc
pop
lcall
out
ret
cli
adc
outsl
sub
push
leave
out
data16
lcall
mov
ret
pop
or
or
push
pop
sbb
cmp
push
xor
inc
add
lea
mov
pop
pop
pop
repz
insb
mov
pop
jecxz
jge
into
push
or
jno
nop
jne
jl
adc
stos
pop
add
pop
pop
leave
inc
sub
les
push
pop
pop
adc
out
cld
sub
pop
xchg
pop
aas
xor
mov
jno
popa
lea
xor
loop
shll
int
push
xor
or
mov
pushf
add
es
push
dec
pop
and
dec
and
stc
shrl
mov
fbld
stos
sar
or
xlat
adc
mov
mov
xchg
shl
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
jmp
push
test
and
inc
sbb
jle
adc
sbb
adc
sbb
dec
divl
push
ret
add
xor
sub
cmp
fcom
push
cmc
mov
int
xor
mov
into
shld
pushf
cltd
xchg
lds
push
icebp
leave
add
push
pop
xor
mov
cmp
pop
sub
lds
or
push
ret
ret
insl
mov
adc
out
dec
push
sbb
mov
jmp
mov
or
add
orb
xor
int3
jae
call
sub
loopne
je
xor
add
mov
imul
stos
mov
in
dec
repz
push
mov
push
in
pop
out
sbb
lods
lcall
mov
popl
inc
xor
dec
mov
stos
adc
lret
cwtl
dec
sub
push
scas
cwtl
jmp
scas
rcrl
arpl
aas
arpl
clc
ljmp
repz
scas
and
sbbb
nop
mov
pop
dec
mov
xor
mov
in
pop
jbe
mov
push
pop
pop
pop
inc
rorb
or
shrb
fidivrl
cmp
xor
and
mov
je
mov
les
imul
test
adc
sub
adc
ret
or
and
xor
fwait
in
iret
mov
jns
and
outsl
xchg
mov
sub
add
jg
int3
or
fstpt
scas
aad
out
rcll
fisubs
lcall
jmp
psubd
sahf
xor
jo
repz
lods
sub
cmp
push
push
xchg
int3
sub
mov
sub
push
popl
push
add
scas
rcll
lret
inc
cmp
arpl
adc
lahf
ljmp
scas
repnz
xchg
scas
sbb
ret
clc
jle
cmc
repz
inc
sti
lret
ret
and
pop
inc
aad
mov
scas
cmp
xchg
shrl
ret
outsl
inc
jae
mov
fcompl
pop
sbb
adc
sbb
in
mov
nop
sahf
jne
rcrb
movsb
loope
or
mov
push
and
ret
inc
cmp
lahf
stos
and
loope
shll
xor
sbb
xchg
cld
mov
xchg
jbe
mov
mov
mov
lea
pushf
gs
orl
xor
loopne
adc
xchg
imul
push
leave
dec
pop
and
pop
sbb
pop
jo
mov
or
cmpsl
xchg
push
or
lret
pop
ret
mov
sub
cmp
xchg
and
dec
or
enter
nop
xchg
int3
lahf
xlat
cmp
lret
cmp
cmp
jge
andl
or
sti
lea
fnsave
cmp
mov
pop
mov
inc
jns
imul
ljmp
es
add
ret
push
mov
sub
push
push
push
movl
jmp
push
lods
pop
inc
lret
jo
or
sbb
lcall
pushf
mov
movsb
cmp
jmp
fildl
stos
fdivrs
dec
sub
aaa
push
ljmp
outsl
jno
jl
push
pop
mov
xchg
or
adc
add
fsubl
inc
xchg
mov
xchg
ds
pusha
popa
pop
mov
jae
stos
imul
stc
in
add
mov
xorl
insl
mov
push
jo
mov
and
dec
push
sbb
xchg
out
ret
xchg
adc
mov
pop
inc
mov
dec
push
sbb
addl
test
sahf
sarl
ret
sub
jg
xchg
fscale
xor
addr16
mov
ja
or
cmp
push
int3
loopne
aaa
cmpsl
pop
in
mov
xor
sbb
lds
xchg
adc
aad
dec
lods
stos
scas
pop
jl
mov
sbb
mov
stc
xor
jecxz
daa
sti
scas
int3
mov
mov
push
or
mov
pusha
dec
fidivrs
add
xor
jnp
sub
xchg
leave
xor
and
xor
sbb
ss
test
in
lods
nop
and
or
js
push
shll
sbb
fisttps
dec
aas
push
adc
sbb
or
test
cmp
jnp
mov
sti
xor
and
nop
addr16
xor
mov
jecxz
out
jo
push
int3
iret
dec
dec
pop
inc
inc
addr16
mov
repz
pop
pop
push
stc
sub
pop
imul
insl
jmp
std
lods
add
mov
pop
stc
or
sub
fdivrs
mov
push
movl
dec
mov
pushf
sbb
pop
test
adc
sti
jo
sbb
jno
xchg
or
inc
idivb
or
cmp
push
sahf
push
shl
mov
push
jle
inc
test
fimull
shll
pop
sti
scas
add
je
into
xchg
adc
mov
mov
and
adc
sbb
fimull
hlt
les
pushl
pop
test
imulb
adc
inc
xchg
cmpb
fsts
xchg
inc
lea
outsl
sub
mov
hlt
cwtl
movsb
inc
xchg
cld
pop
and
aaa
sbb
aaa
jnp
call
cld
es
add
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
jmp
xchg
jne
je
es
je
mov
enter
pop
sbb
test
sbb
outsl
popf
cmp
test
fs
inc
fcmovu
imull
push
pop
mov
adc
into
dec
inc
scas
cmp
sbb
fdivl
lret
jl
mov
push
mov
xchg
aam
lods
push
push
pop
pop
and
dec
mov
ljmp
test
jg
popf
ss
daa
mov
shl
inc
jg
sbb
call
mov
cli
cwtl
pop
xchg
mov
test
loop
xchg
pop
cltd
mov
mov
in
jae
mov
sbb
mov
sub
or
in
or
scas
mov
add
negl
int3
cmc
push
rorb
pop
lcall
les
inc
cmp
push
xchg
mov
sbb
sbb
arpl
sahf
push
push
lds
dec
lds
mov
test
mov
xchg
aam
icebp
mov
out
cli
or
pop
mov
ret
arpl
and
lods
adc
inc
add
xchg
leave
sbb
adc
pop
and
iret
jmp
pop
out
pop
mov
sbbb
push
push
into
int3
jg
rcl
xchg
and
jge
dec
jp
scas
sbbl
dec
lods
dec
or
jns
pop
lods
in
sbb
addr16
adc
and
cli
xor
aaa
inc
xor
insl
ja
mov
dec
in
xchg
stos
nop
or
xchg
out
scas
pop
or
jl
addl
sarb
and
inc
in
and
push
inc
dec
cld
dec
jmp
out
mov
out
cwtl
lods
dec
jb
nop
ret
lea
inc
add
jns
xor
aaa
lcall
in
sarb
push
nop
ljmp
fwait
jnp,pn
cld
fwait
jae
lret
rorb
hlt
sarl
leave
mov
mov
mov
add
test
std
add
cmp
mov
test
sbb
pop
out
lahf
fidivs
pop
lds
cmp
mov
mov
push
int
xchg
xor
cmp
jg
jmp
xor
xor
les
cmp
mov
xchg
jle
pop
jb
jae
mov
pushf
add
sbb
pop
mov
std
jmp
ja
inc
push
dec
push
adc
mov
push
loopne
arpl
cmp
xor
mov
pop
jle
out
aaa
call
pusha
fidivrs
rcpps
mov
bound
adc
ljmp
add
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
jmp
pop
dec
ficoms
daa
ss
push
sbb
mov
add
sbb
dec
sahf
xor
inc
pop
cs
inc
out
jmp
xchg
push
sbb
int3
out
xchg
jmp
cmc
or
lea
dec
test
mov
lea
lea
mov
mov
in
sub
mov
in
push
mov
and
repnz
ljmp
jae
scas
xchg
das
and
sbb
out
in
scas
mov
sub
ljmp
lret
lock
iret
mov
adc
adc
imul
lock
divl
cmpsb
pop
mov
loop
int3
lret
mov
shlb
rorb
nop
stc
jge
xchg
icebp
out
movsl
mov
frstor
gs
popf
and
in
mov
sbb
adc
push
stos
divb
sub
lret
and
into
int
cmc
or
ja
dec
int3
dec
cmp
ss
adc
into
xor
bnd
pop
xchg
cmp
outsb
xchg
or
push
mov
sub
lods
mov
mov
or
outsl
adc
test
mov
mov
jne
rorl
mov
aad
lcall
pop
xor
je
and
loope
jl
popa
clc
movsl
pop
jp
dec
xor
popa
fimull
ret
cmpxchg
inc
cmc
and
ljmp
orb
ret
push
dec
xor
inc
dec
jae
call
cli
fwait
mov
xchg
adc
dec
mov
push
push
pop
pusha
jl
xor
jge
ss
and
repnz
jno
pop
insb
ss
out
or
push
push
aaa
jno
push
pop
jmp
xchg
das
adc
repnz
add
repnz
lea
loopne
mov
cwtl
and
mov
xlat
pop
cmpsb
xlat
cs
sbb
test
std
push
movsb
cwtl
addr16
cmpsl
inc
stos
arpl
inc
mov
cmpsb
xor
push
sbb
xchg
cmpsb
cli
lods
inc
pop
pop
add
and
or
jns
push
inc
filds
lret
mov
mov
cmpsb
and
xchg
hlt
leave
mov
push
aas
add
xchg
or
popa
mov
outsl
ret
push
cmpsb
push
mov
in
xor
mov
dec
shrb
add
add
push
test
dec
bound
cmpsb
stos
popf
mov
lock
mov
add
mov
xor
adc
ss
jp
inc
aad
mov
cmpb
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
jmp
sbb
dec
push
dec
and
and
add
mov
test
sbb
leave
mov
add
daa
push
add
jb
mov
inc
decl
insb
jbe
je
sub
stos
xor
xchg
fwait
or
js
shl
and
inc
adc
in
jb
xchg
push
imul
movsb
push
pop
xor
hlt
pop
inc
scas
xchg
inc
inc
sbb
popf
mov
clc
pop
dec
push
out
add
jne
dec
and
ret
cmovbe
divl
or
mov
sbb
cwtl
push
mov
iret
movsl
icebp
jno
hlt
je
or
sub
sbb
dec
out
mov
cs
mov
jnp
in
dec
inc
add
push
jbe
jle
jp
pop
scas
add
out
jne
jo
mov
jg
ja
sahf
divb
fnstcw
push
cmc
xchg
inc
sbb
scas
dec
push
xchg
gs
xchg
mov
jno
jnp
sub
orb
xchg
out
addr16
mov
jp
popl
xor
cmp
mov
pop
sub
push
daa
stc
xchg
mov
dec
pop
iret
or
add
xor
mov
pop
mov
out
xchg
mov
and
mov
ds
insb
sub
cli
xor
mov
cmc
pusha
mov
dec
mov
fistps
mov
int3
hlt
outsb
push
sbb
push
lds
add
popf
test
sbb
and
push
xchg
dec
add
lcall
popa
repnz
das
ss
fldenv
adc
outsb
pop
pop
loop
or
stos
adc
pop
int
pop
xor
out
adc
mov
xor
mov
pop
and
movsb
mov
insb
std
fldl
dec
ss
mov
push
stos
fcmovnu
lcall
inc
es
rcrb
jae
cmc
ret
fs
push
icebp
add
je
icebp
rcrb
pop
cli
cmp
shlb
lds
iret
nop
mov
aaa
test
jp
inc
pop
xor
stos
jo
mov
aas
sub
and
imul
in
jmp
xor
sub
and
sbb
sbbb
addl
aad
xorl
inc
mov
xchg
sub
cltd
mov
pop
ret
push
fnstenv
sbb
iret
pop
sub
jg
div
mov
push
mov
sbb
mov
lret
pushf
cmp
sbb
out
aad
loop
call
mov
jecxz
or
lods
fcomip
mov
mov
movl
movl
movl
movl
jmp
push
mov
fistpl
int3
outsl
and
sbb
mov
daa
xor
imul
xor
call
enter
hlt
add
mov
push
mov
add
testb
js
in
jg
shll
lar
pop
lcall
popf
rcr
hlt
mov
pop
popf
mov
mov
fsubrs
dec
mov
xchg
sbb
xchg
xchg
std
and
and
stos
lods
jb
test
and
arpl
xchg
test
pop
jnp
je
inc
pop
lock
pusha
cmp
stos
xor
cmp
xor
mov
fucomi
movsl
scas
jo
pop
pop
sbb
sbb
sbb
push
lods
stos
sub
xchg
scas
pop
adc
lods
int3
stos
push
scas
cmp
insb
arpl
xchg
xchg
add
cmp
push
repnz
xchg
fcomp
jno
push
into
loopne
inc
and
inc
push
clc
mov
or
jp
pop
test
push
sbb
lods
pusha
mov
stc
lea
mov
lds
fdivl
push
cmc
repnz
sub
out
addr16
adc
fists
mov
push
scas
jecxz
bound
xchg
pop
es
incl
pop
cmp
lret
nop
lret
sarb
add
out
insb
es
test
mov
dec
aas
xor
ss
fwait
lds
cmp
mov
push
imul
orb
jecxz
movsb
ret
movsl
xor
adc
js
mov
cld
push
push
cmp
inc
xor
xor
cmp
push
fwait
push
pop
addl
aam
pop
stos
mov
out
call
dec
jecxz
inc
aas
dec
jp
in
mov
push
mov
lcall
cmp
je
test
ret
fwait
rcll
xchg
mov
fcmovbe
jbe
mov
push
inc
adc
fwait
pop
mov
jae
push
sahf
fld
addl
test
pop
dec
enter
aam
std
lock
sbb
lahf
mov
pop
jg
fdivrl
xchg
mov
or
das
arpl
movsb
jecxz
mov
add
dec
pop
mov
pop
inc
mov
push
pop
cs
outsl
xor
lret
sub
add
cmp
nop
add
out
xchg
mov
repnz
cmc
icebp
mov
bound
push
and
fnstcw
mov
push
rcrl
std
pop
or
mov
int
aad
mov
jl
jecxz
inc
test
dec
mov
pop
xor
movl
movl
jmp
aas
mov
mov
dec
mov
aas
mov
test
sbb
push
inc
mov
pop
pop
bound
scas
push
sbb
inc
xchg
cmp
adc
cmpsl
mov
lcall
push
imul
in
fdivp
xchg
jae
aad
dec
sbb
adc
ret
das
xlat
sbb
shl
pushf
inc
xchg
xor
movsb
out
inc
or
push
rol
mov
sbbb
pop
lcall
out
mov
loope
loope
or
popf
mov
repz
mov
cmc
imul
sarl
push
scas
shrl
mov
arpl
adc
in
enter
or
xchg
mov
xchg
cs
fldl
enter
dec
mov
ds
mov
mov
fldt
lcall
ds
mov
popf
out
xchg
jo
push
adc
push
pop
outsb
mov
cs
fnstenv
push
rcll
xchg
inc
cld
sub
push
pop
rep
out
fldcw
xchg
shr
mov
mov
mov
jns
push
cmp
mov
lret
inc
sbb
out
add
repnz
lock
je
xchg
dec
lcall
xor
test
jbe
and
mov
lods
lods
jp
lods
imul
mov
mov
fimull
mov
jecxz
pop
cmp
fldl
push
xchg
ljmp
jl,pt
fnstcw
mov
int
shrl
in
and
cli
cmpsb
imul
loopne
subb
or
xchg
xor
data16
dec
mov
sub
mov
cmpsl
scas
mov
jecxz
cli
sbb
jg
cs
adc
cmp
jl
push
jae
mov
pop
roll
out
sub
and
sbb
mov
jb
rcll
js
sbb
cmp
xchg
leave
pop
in
sub
adc
xor
jno
pop
sub
jae
inc
mov
out
lds
gs
inc
ss
shl
push
loopne
lea
insb
ret
sbb
xchg
mov
add
fucomip
mov
xchg
xchg
adc
pop
repz
test
ljmp
adc
add
mov
xlat
stos
inc
sbb
cli
shlb
in
das
loopne
movsb
mov
sti
sub
sub
jnp
or
outsl
dec
mov
out
push
mov
add
inc
fsubrs
pop
div
mov
jmp
lahf
ds
xor
lcall
in
push
stos
mov
adc
sbb
mov
sub
hlt
lcall
sar
add
enter
in
add
mov
jp
mov
sahf
movsl
inc
sahf
sarl
xor
test
sbbb
inc
sbbb
pop
push
add
ja
sbb
mov
jne
sub
cmp
inc
sub
jo
jns
push
jg
fistl
cs
add
and
mov
rcl
mov
xchg
gs
call
jecxz
lods
dec
imul
loop
repnz
dec
dec
add
sbb
fwait
cmp
in
push
push
pop
ficomps
mov
imul
mov
iret
jbe
nop
push
push
test
mov
sahf
inc
mov
push
cmp
into
cltd
pusha
jg
sbb
je
add
sub
ss
lret
dec
and
loopne
push
ss
lcall
push
mov
pushl
stc
scas
cmc
mov
subl
jbe
and
pop
and
out
mov
pop
mov
mov
pop
sbb
aas
mov
xchg
outsb
inc
dec
inc
adc
loope
mov
fdivr
xchg
test
xor
push
cld
scas
push
hlt
scas
insl
push
dec
lcall
or
lock
cwtl
cmpsb
add
add
cli
sub
cmp
push
jl
and
mov
pop
aam
lods
insl
iret
mov
in
out
pusha
and
aas
vpunpckhwd
push
mov
loopne
mov
lret
shl
out
sub
js
ja
out
jne
ret
popa
data16
mov
mov
jb
lods
push
sbb
or
lahf
push
leave
dec
roll
mov
adc
xchg
ljmp
mov
jmp
rcrl
nop
adcb
dec
sbb
pop
mov
inc
add
adcb
pushf
dec
adc
mov
sub
sti
int3
pop
stos
rclb
cmp
lret
icebp
inc
stc
int3
sbb
subl
fnstsw
loopne
and
dec
inc
shll
int
fs
jmp
add
cmp
std
je
cmpsl
lahf
movsb
cmp
movntq
lea
mov
pop
repnz
outsl
sti
test
lret
sub
in
cmp
sub
and
ss
push
inc
add
adc
in
pop
dec
es
jno
fsin
push
test
roll
mov
pop
pop
sti
mov
push
mov
add
add
ret
fmull
rorl
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
jmp
push
push
push
scas
sbb
inc
pop
jns
jo
dec
adc
xor
sbb
test
sbb
jns
sub
cmp
cwtl
jae
add
cli
xchg
adc
lcall
pusha
shll
test
pop
push
mov
mov
lds
mov
sub
cmp
dec
mov
out
fnstsw
xchg
jl
lret
loope
lods
xchg
pop
sbb
pinsrw
push
pop
add
popa
in
and
push
sub
lret
and
paddq
loope
pop
fadd
and
inc
aam
jmp
cmp
out
mov
aaa
cmpsb
lret
adc
sub
fwait
inc
adc
adc
mov
mov
cmp
dec
push
sbb
mov
stc
jae
cwtl
sbb
xchg
inc
xlat
adc
pop
push
sbb
arpl
cmp
pop
dec
enter
jg
lcall
cwtl
mov
sti
pop
fpatan
push
mov
loope
sbb
ret
add
pop
and
mulb
jns
jbe
decl
pop
movsb
mov
popa
xor
jnp
pop
mov
jno
mov
xor
sbb
addr16
jne
push
dec
test
jns
sub
dec
cmp
xchg
dec
aad
scas
xlat
mov
loop
dec
ljmp
add
sahf
loop
mov
mov
or
xchg
icebp
jno
jmp
gs
adc
cmp
sub
sbb
aas
movsb
mov
loop
aaa
push
std
xor
sahf
js
sub
adc
les
add
push
adc
mov
rorb
sbb
shrb
inc
movsl
or
sti
stos
dec
mov
xchg
lret
out
mov
adc
sahf
pop
mov
call
and
mov
out
cwtl
xchg
pop
in
add
sub
fimull
or
xor
repnz
orl
inc
sub
push
in
sub
sub
pop
xchg
loopne
shll
xchg
cmp
loope
add
mov
jne
addr16
pop
pop
sbb
xrelease
mov
dec
or
pop
pop
pop
sbb
addb
call
movsb
inc
iret
aas
ds
fwait
xor
xlat
testl
add
fidivrs
pop
and
inc
sbb
negb
adc
mov
sbb
es
xor
push
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
jmp
jmp
push
and
cmp
mov
test
sbb
sub
clc
int3
inc
pop
mov
pop
xchg
into
dec
bound
or
aad
call
xchg
out
xor
mov
not
imul
push
sub
add
push
hlt
lcall
pop
adc
sbb
rol
xchg
add
mov
dec
adc
mov
mov
and
cmp
shr
inc
in
test
or
sbb
iret
cmpsl
inc
inc
stc
xor
sub
negl
xchg
fdivl
test
cmp
nop
test
push
xchg
insl
repnz
push
aaa
xchg
sarb
je
movsb
les
push
cwtl
mov
cmpsb
mov
mov
or
ret
pop
cld
cmp
sub
push
and
ds
add
xor
adc
stc
popa
pop
push
ja
dec
pop
add
adc
loop
pop
xchg
fstpt
dec
in
mov
in
xchg
adc
mov
nop
inc
jno
or
dec
sub
popa
xchg
arpl
jo
insl
mov
mov
pop
in
test
xorl
pushf
mov
out
insl
cmpsb
inc
add
pop
sbb
sub
test
ljmp
mov
xor
mov
inc
push
hlt
sub
xor
out
jecxz
in
nop
xchg
test
in
jne
test
sti
push
pop
cwtl
dec
es
shld
test
sbb
mov
and
arpl
inc
pop
jns
xlat
outsb
adc
sub
push
xchg
sbb
cmc
xchg
es
inc
push
and
jg
cltd
add
test
cld
or
imul
out
pop
popa
sbb
push
push
mov
or
imul
jmp
push
addb
stc
cmp
rcll
nop
sub
jecxz
icebp
jmp
mov
jb
jmp
pop
dec
rcl
mov
mov
adc
xor
mov
cmp
adc
mov
imul
pop
or
iret
fisubs
mov
xor
fucom
pop
push
imul
xlat
cmp
and
out
push
js
out
and
lods
inc
mov
iret
pushf
jge
js
insl
iret
addl
cmp
adc
jmp
pop
aaa
inc
dec
jle
stc
jns
jmp
stc
sub
adc
push
inc
sub
or
cmc
adc
outsl
cpuid
pop
mov
xor
pop
lahf
or
jp
jmp
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
jmp
hlt
aam
adc
pop
and
cmp
hlt
push
ficompl
sbb
adc
sbb
jge
push
pop
fisttpl
or
cmp
out
push
jnp
or
pop
sbb
loope
gs
mov
pop
pusha
mov
cmpsb
test
xor
jg
jb
stos
ffree
xor
dec
ja
sbb
adc
push
xchg
mov
repnz
jnp
cmp
and
and
pop
shll
dec
push
add
inc
pop
rcrb
mov
out
sbb
lods
lret
shrb
fistps
xchg
xchg
push
mov
test
stos
sahf
pop
adc
and
icebp
insl
inc
fstl
push
bound
ret
or
icebp
in
xchg
mov
jne
mov
mov
mov
aas
lods
lret
mov
cmp
rcll
arpl
cmp
cmp
xor
xchg
pop
push
mov
mov
out
aaa
mov
xor
pop
jmp
dec
rclb
fcmovu
xor
cmp
sbb
bound
xchg
nop
cmp
popa
adc
adcb
leave
pop
and
or
mov
loopne
fisttps
data16
sub
test
xor
jno
sub
iret
mov
sar
scas
sub
mov
xor
or
push
inc
mov
lods
mov
mov
mov
aam
cs
and
addr16
testb
push
std
fidivrs
pop
arpl
rolb
dec
decb
pushf
xor
push
cmpsl
dec
xor
adc
out
lods
movsl
icebp
push
cli
dec
xor
adc
lahf
dec
inc
test
sbb
mov
incb
test
sub
hlt
clc
adc
lods
sar
xchg
add
mov
mov
pop
cmc
fbstp
dec
jne
lock
mov
loope
lret
out
xchg
mov
movsb
outsl
sub
xlat
pushf
mov
pushl
cmpsl
add
jbe
pop
xor
or
sahf
adc
add
mov
clc
mov
lods
aam
cmp
inc
mov
cmp
sub
fcoms
jg
pusha
xchg
sbb
fidivs
mov
inc
and
xchg
jmp
or
call
or
mov
mov
hlt
pop
lock
insb
shll
outsl
push
xchg
fcompl
dec
adc
stc
imul
pop
repz
call
push
lret
stos
mov
xchg
inc
pusha
or
rcrb
inc
rep
js
push
cmp
jb
cmpb
push
in
push
sbb
cwtl
mov
mov
mov
jp
pusha
xor
test
gs
cmp
dec
jp
imul
pop
in
adc
xor
pusha
stos
insl
shrb
jae
jb
jbe
inc
hlt
mov
movsb
shrb
sahf
jo
push
popa
mov
imul
inc
imul
mov
add
pushf
data16
pop
push
push
push
lahf
and
rorb
sub
stos
subb
stos
dec
inc
repz
mov
loop
neg
insb
daa
mov
inc
sub
mov
xchg
add
or
rcll
dec
cmp
xor
dec
or
jns
adc
movl
mov
mov
add
or
mov
lea
jmp
lcall
ficomps
inc
dec
pop
jle
push
pop
jo
aam
sbb
adc
sbb
out
cs
xor
adc
dec
cmp
shrb
leave
push
or
jl
xor
pusha
cmpb
into
mov
jmp
mov
cmpsb
cmp
cmp
mov
out
adc
adc
das
in
sub
xor
xchg
inc
loopne
mov
xor
data16
add
mov
cmpl
aad
push
test
mov
in
jle
aaa
xor
adc
adc
jecxz
stc
adcl
dec
dec
and
add
mov
inc
aad
fistpll
dec
stc
in
cld
in
lods
cmp
pop
jo
stos
pop
test
aas
inc
test
pop
sbb
scas
pop
fstl
lods
aad
test
rcrl
push
add
and
int
sub
push
push
sbb
out
nop
lahf
mov
in
rolb
and
xchg
xor
imul
mov
stc
mov
mov
inc
sbb
cmp
or
cld
ss
xchg
test
or
stos
xchg
mov
pop
xchg
mov
xchg
push
adc
adc
and
dec
xchg
pusha
xor
lcall
scas
xchg
or
insb
cmpsb
xchg
insl
test
subl
popf
adc
in
inc
xchg
rcrb
xchg
fisubl
push
mov
cmp
icebp
inc
push
psrld
add
cmpsb
imul
lods
dec
mov
mov
movsl
push
push
lret
mov
mov
scas
scas
or
inc
or
in
add
sbb
jb
sbb
out
call
stc
lea
mov
xor
sti
lret
pop
sub
adc
mov
xor
xor
xor
jle
mov
fucomip
inc
pop
in
push
mov
pop
je
jmp
insb
cmc
cwtl
pop
xor
in
xchg
cltd
shll
mov
icebp
addr16
icebp
int
addr16
daa
xchg
es
js
push
popa
out
scas
xor
push
sti
adc
push
shlb
fwait
lea
dec
cmp
lock
inc
add
out
dec
fstpt
xchg
cmp
mov
scas
xlat
xchg
mov
sbb
lds
mov
and
push
add
sub
or
jae
adc
cmc
sahf
push
int
dec
cmc
inc
sub
lods
xchg
icebp
adc
ljmp
or
xor
jnp
push
xor
cwtl
add
in
mov
out
xchg
fimull
jge
cmp
ficoml
inc
add
xchg
dec
sub
test
das
cmp
scas
push
ret
movsb
add
fnstcw
adc
lret
hlt
pusha
pusha
push
mov
iret
mov
xchg
shlb
mov
inc
dec
push
mov
andps
subb
mov
sub
pushf
aas
cmpsl
add
inc
int
push
push
rorb
insl
test
sub
cltd
loop
jp
rorl
pop
scas
or
and
cwtl
xor
inc
aad
sbb
and
mov
and
lea
cmc
out
cwtl
call
stos
es
mov
js
adc
cli
pop
popf
adc
movsl
mov
push
dec
sbb
pop
dec
add
jl
outsl
mov
add
inc
movsb
movl
movl
mov
mov
and
xor
jmp
out
icebp
aaa
insb
aaa
sub
mov
or
sbb
cmpb
testb
xchg
aas
stos
popa
mov
loope
pushf
sbb
mov
add
dec
lods
out
add
cmp
loop
bound
cmc
pop
sbb
xor
cmc
les
jne
sti
push
loop
aad
arpl
push
clc
inc
or
pop
stos
mov
mov
mov
mov
cmpb
rorb
mov
aaa
push
out
and
sub
mov
outsb
shll
cmpsl
cmp
das
sub
push
in
divl
xchg
inc
icebp
rcl
mov
adc
inc
jno
or
fwait
les
pop
sbb
add
jmp
xor
rcrb
fsubl
jne
test
dec
test
push
sub
es
adc
push
in
push
cmp
pop
mov
push
scas
in
add
xchg
shrl
jle
pushf
stos
cmp
arpl
into
cmpsb
insb
xchg
jbe
fldenv
aas
xchg
cmp
push
and
and
out
xchg
xor
dec
sbb
push
add
std
cmp
imul
aad
fld
test
mov
xchg
push
lock
das
daa
fs
ja
mov
mov
aam
and
scas
fs
insb
sub
iret
adc
mov
dec
cltd
jns
addr16
int
out
lahf
lret
pop
out
out
lods
xor
lods
cs
cmp
jmp
xchg
push
mov
fs
js
sub
cmp
jo
and
xor
dec
fwait
outsb
push
sbb
xchg
or
sahf
imull
push
xchg
js
inc
add
mov
and
jecxz
jno
cli
adc
xor
repnz
lahf
sub
push
sub
xor
sbb
dec
inc
or
inc
jl
xchg
lahf
mov
shl
adc
dec
shll
cmp
sub
pop
into
or
inc
mov
test
push
add
sbb
hlt
push
fwait
test
test
je
cmp
loope
ret
or
mov
mov
xor
mov
das
fidivl
and
jo
inc
fwait
ja
pop
mov
xchg
mov
or
adc
in
xchg
subb
or
dec
cmp
and
ficoms
push
popf
cs
pop
sub
cmp
push
daa
push
pop
mov
rorl
nop
or
mov
shl
jg
push
or
lret
repnz
mov
xchg
mov
test
repz
stos
daa
pushf
mov
xrstors
mov
ljmp
inc
dec
lods
jg
enter
inc
out
mov
popa
xor
outsl
dec
leave
ret
mov
dec
insb
fdivs
mov
test
add
adc
cwtl
test
xchg
pop
arpl
hlt
mov
mov
jge
sub
outsl
dec
out
gs
in
inc
mov
and
enter
pop
lret
cmp
inc
test
and
in
stc
cmp
data16
js
fimull
les
sbb
outsb
push
loopne
mov
jg
rcrb
aam
loopne
or
xor
push
in
ret
xlat
mov
push
adc
addl
lret
push
push
mov
test
sahf
mov
pop
add
adc
jle
fistl
in
add
add
sbb
lea
mov
movl
movl
mov
xor
push
pop
div
jmp
jb
pop
in
sbb
push
lret
rcrb
or
sbb
xor
sbb
decl
mov
inc
sbb
rolb
mov
ror
aad
inc
in
mov
push
enter
ret
adc
test
pop
pusha
call
cmp
loope
fidivrl
hlt
xor
call
js
mov
int3
popa
inc
aaa
mov
shl
lcall
inc
loope
out
iret
hlt
jmp
repnz
divb
lret
inc
sub
mov
scas
mov
in
push
xor
fwait
addr16
fadds
dec
idivb
add
dec
lds
or
pusha
je
es
push
mov
jg,pt
mov
push
and
mov
sbb
daa
xor
jae
jp
js
inc
enter
mov
xchg
icebp
hlt
mov
sub
popf
dec
ret
int3
out
or
in
sbb
sub
lods
pop
xchg
dec
les
push
rolb
call
cmp
lock
xchg
lock
pushf
lahf
mov
pop
repz
enter
fwait
stc
cmp
aaa
sahf
cmp
pushf
sub
xlat
mov
sub
push
xchg
add
mov
pop
mov
lds
stos
pop
and
scas
mov
and
mov
jle
out
mov
adc
mov
std
in
pop
enter
in
in
cwtl
idivb
jae
mov
lcall
jg
outsb
lret
adc
movsl
push
xchg
xchg
cmp
dec
dec
inc
sarl
cmp
sbb
std
jns
sarl
test
sub
je
lods
mov
mov
adc
enter
add
mov
aad
mov
pop
add
pushf
insl
xor
xchg
jbe
xor
adc
in
popl
jge
dec
push
aam
mov
pop
mov
cli
loopne
lret
add
dec
loop
push
mov
aaa
pop
inc
enter
insb
cmp
xor
jge
repz
inc
les
xchg
cmp
dec
jns
mov
push
dec
fbstp
int3
rcl
sbb
rorb
lds
push
pusha
sbb
adc
mov
sti
sub
pop
scas
dec
out
jp
and
test
xor
cld
sub
sbb
nop
cli
notb
into
les
mov
mov
popa
vdivsd
push
fildl
test
dec
push
cs
imul
dec
push
mov
sbb
lods
test
and
xchg
sbb
jbe
add
inc
mov
pop
xchg
or
in
lret
cwtl
pop
test
adc
mov
call
push
lret
pop
pop
or
jae
mov
aad
lret
add
mov
sbb
ret
xchg
adc
and
cli
pop
inc
leave
cmpsb
and
mov
cltd
enter
mov
lods
ret
mov
incl
jmp
fcomi
movsb
fldenv
loop
jp
negb
push
sahf
outsl
jae
or
in
xchg
pop
int
hlt
insl
call
gs
shl
adc
xchg
jnp
sbb
call
dec
cld
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
jmp
fmull
fiaddl
clc
push
outsb
stos
mov
mov
sbb
test
orb
xchg
imul
cli
mov
xor
cwtl
push
fildl
test
cmp
and
mov
jecxz
xchg
ljmp
fisttpll
sub
mov
push
sahf
push
or
repz
fbld
aas
cmc
mov
insb
mov
icebp
movsl
insl
insb
mov
xor
testb
int
fdiv
mov
orb
adc
push
stc
shr
les
scas
ret
lret
je
daa
lea
mov
mov
add
movsb
push
pop
mov
shrb
fwait
or
ds
les
xor
repz
sub
das
aas
mov
jmp
lods
or
xlat
mov
and
bound
test
mov
dec
and
popa
sbb
pushf
dec
icebp
scas
movl
mov
push
adc
gs
jp
mov
inc
je
gs
les
enter
inc
adc
mov
mov
mov
pushf
movsb
sub
subb
dec
imulb
stos
and
shrb
sarb
mov
jae
mov
pushf
add
cs
ss
mov
out
pop
negl
das
mov
mov
cmp
xor
ljmp
cld
or
punpckldq
pop
mov
xchg
xor
jae
adc
mov
mov
xlat
mov
ret
add
sbb
mov
mov
push
xor
bound
mov
jp
mov
insb
mov
sbbb
stos
add
pushf
std
lock
xor
dec
ret
out
movsl
fmull
sbb
sbb
imul
inc
cltd
daa
push
sbb
scas
xchg
cmp
stos
es
jbe
adc
fs
mov
and
dec
test
push
sub
push
xchg
jo
cmpl
insb
dec
inc
fisubrs
aaa
xor
pop
jo
std
xchg
inc
add
loop
loope
push
iret
inc
mull
fcoml
aas
repnz
subb
adc
dec
xchg
outsb
mov
mov
idivl
push
inc
cwtl
rcrb
mov
stos
sbb
jg
ret
mov
cmp
xor
mov
jmp
rol
push
loope
inc
cmp
jae
mov
andb
and
jo
or
shrb
dec
int
push
mov
mov
out
out
ret
js
mull
loope
clc
pop
push
dec
movsl
cli
push
and
lret
xor
and
test
mov
add
pop
lret
repnz
ljmp
sarb
jb
lcall
lar
sub
andb
imul
nop
roll
inc
div
pop
jecxz
cltd
gs
cld
fs
push
pop
inc
push
je
inc
loop
aam
test
xchg
fisubs
jmp
add
popf
ret
xchg
out
scas
into
loop
pop
cmc
rsm
jbe
mov
push
aam
push
dec
cmp
sahf
nop
mov
adc
or
jbe
jle
mov
add
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
jmp
xchg
fistl
sbb
sbbb
fistps
sbb
adc
sbb
sbb
cwtl
jne
stc
inc
xchg
int
and
sbb
mov
in
push
stc
stc
jl
shr
andl
aas
and
out
fiaddl
xor
inc
sub
xor
shrl
jnp
cmp
cmp
pop
lock
mov
sbb
mov
xchg
cli
scas
push
jecxz
jo
push
arpl
icebp
stos
stos
xchg
and
mov
movsb
dec
xor
jl
mulb
ret
icebp
gs
icebp
ja
sub
mov
cmp
and
inc
fcomip
mov
dec
dec
push
pushl
dec
incl
and
sbb
test
int
aaa
pop
iret
fs
push
pushf
cmp
push
jecxz
add
mov
scas
out
cli
aas
mov
divl
push
das
or
outsl
mov
mov
mov
mov
sub
popa
dec
xchg
mov
jnp
or
nop
or
fcompl
sub
xchg
movsl
addr16
sbb
and
in
bound
test
mov
push
lods
fs
test
mov
pop
mov
dec
cld
int
fwait
nop
add
mov
adc
adc
iret
jno
add
add
dec
scas
push
mov
mov
push
sub
jnp
mov
test
sbb
jb
lods
mov
push
xor
imul
inc
scas
ljmp
add
xor
sbb
inc
inc
pusha
pop
xchg
cmp
fcmovnbe
repz
adc
fisubl
movsl
test
mov
inc
cld
test
dec
dec
mov
push
sub
dec
dec
push
and
sub
pop
inc
jae
aas
pushf
sbbl
dec
lods
add
inc
scas
mov
enter
dec
push
sahf
sub
call
cli
shlb
push
fwait
pop
xchg
and
inc
sbb
das
xchg
add
add
movhps
ret
cli
cmp
mov
jbe
sbb
xchg
fiaddl
sbb
das
icebp
pop
cmpsl
add
add
jecxz
inc
mov
int
rorl
cmc
mov
inc
xor
pop
mov
mov
xchg
mov
cmc
out
mov
rcr
add
mov
push
cmp
ds
faddl
jmp
mov
mov
hlt
mov
loop
popa
and
aas
and
sub
and
adc
jl
out
into
imul
xor
adc
mov
in
or
out
bound
adc
in
adc
sarb
mov
test
and
in
pop
pushf
mov
je
fimuls
sub
hlt
scas
pop
and
push
pusha
jbe
int
dec
in
ja,pt
imul
xchg
sub
sbb
and
xlat
push
test
lret
push
in
pop
cmpsb
ss
mov
jge
stos
jne
frstor
je
sbb
mov
lret
xchg
hlt
xchg
mov
mov
cmp
stos
sub
or
add
dec
pop
mov
lods
filds
inc
inc
subl
mov
cvtpi2ps
mov
mov
lods
mov
shrb
sti
insl
mov
pusha
jnp
insl
clc
jg
fxam
dec
shrl
add
incl
add
mov
insl
ret
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
jmp
mov
push
sbb
sbb
cmc
cmp
fs
push
mov
sbb
adc
sbb
xlat
sub
ja
adc
push
fnclex
push
lret
mov
sbb
out
cmc
insl
sub
adc
or
push
push
or
pop
jmp
lahf
and
icebp
inc
ss
andb
jne
xchg
push
test
sub
mov
out
in
dec
inc
fcomps
je
xor
je
mov
jno
jns
xchg
mov
in
sbb
shlb
testl
xor
inc
mov
dec
lahf
gs
jg
lahf
repnz
fcompl
or
cmp
lahf
cmp
stc
and
cmp
aad
js
leave
xor
test
sub
out
push
push
test
stos
mov
sti
and
in
pop
adcl
mov
adc
scas
cwtl
jae
mov
mov
out
neg
sbb
test
lahf
iret
jp
popa
mov
or
jb
iret
inc
lret
mov
stos
loope
les
jbe
lcall
test
fmull
cmp
adc
aas
add
add
and
adc
in
int3
xchg
pop
and
push
rorb
add
jmp
or
or
rorb
push
or
dec
ret
add
shll
add
pop
jne
dec
stos
lock
loope
pop
sbb
xlat
loop
test
adc
fstl
mov
sub
push
ja
shr
lret
mov
dec
imul
sbb
jg
xchg
sbb
das
ret
ljmp
xor
or
loopne
jl
icebp
jno
jmp
pop
out
inc
aam
xor
ss
lods
and
call
imul
outsl
ficomps
mov
push
push
daa
sti
mov
xchg
fwait
stc
sub
or
out
jge
jg
rcrb
arpl
sar
inc
lods
adc
test
jno
ljmp
les
cmp
ret
mov
rcll
mov
mov
inc
sub
arpl
add
mov
adc
push
fdivp
pop
jb
mov
sub
cmp
mov
nop
ss
adc
mov
test
not
cmp
and
movl
jnp
cli
cli
pop
shll
push
dec
stos
or
sbb
pop
sbbl
xlat
pop
sbb
out
xchg
les
and
pop
popa
inc
lcall
mov
sti
cmpsb
ds
aaa
and
inc
sbb
dec
div
adcb
or
sbb
push
paddsw
loope
pop
cld
or
fwait
xchg
mov
cltd
mov
enter
or
push
mov
cmp
dec
sbb
or
jno
or
fmulp
popa
ffreep
test
rcrb
jl
adc
mov
scas
adc
adc
cmp
fidivrs
mov
push
pop
cmp
icebp
lcall
movsl
mov
fs
ja
or
mov
cmp
ret
push
mov
pop
js
sbb
add
cs
or
aaa
je
xchg
insb
inc
add
mov
jmp
mov
mov
pop
pop
leave
ret
push
mov
jmp
cmp
mov
xor
mov
stos
sbb
test
mov
xorb
rolb
sbb
fs
mov
push
inc
pop
push
movsl
das
in
adc
push
enter
lret
jmp
cmc
fwait
sti
sbb
mov
cmc
mov
mov
or
pop
cltd
sub
ja
dec
lahf
out
and
and
mov
sbb
data16
sub
mov
daa
jae
jb
fimull
daa
std
lcall
sub
jne
sti
test
mov
mov
xchg
fcomps
pop
mov
jl
or
xchg
xchg
push
cmp
int
jmp
mov
cli
dec
mov
mov
mov
sbb
inc
lods
testb
mov
orl
fistps
mov
mov
daa
fistpll
add
clc
xchg
sub
insb
outsl
ficoml
mov
xchg
addb
xchg
ja
movsb
jp
and
jne
adc
addr16
add
ljmp
sbb
and
sbb
loopne
dec
in
cltd
addb
pop
cmp
jb
cmp
adc
mov
imulb
aas
fiadds
push
aam
es
data16
dec
pop
lret
out
iret
add
pop
icebp
inc
jmp
push
adc
pusha
mov
jo
xor
adc
xchg
out
outsl
mov
fbstp
jmp
cld
lds
pop
inc
dec
or
arpl
push
mov
jp
adc
lret
mov
leave
jl
add
cmp
aam
movsl
divl
sbb
mov
or
pop
idivb
adc
sub
mov
cld
pop
jge
arpl
outsl
or
ficoms
outsb
aad
fcoms
lock
and
fs
mov
insb
push
dec
leave
outsb
pop
movsl
mov
inc
mov
scas
nop
dec
ret
lahf
sbb
lret
pusha
mov
pusha
je
faddp
pusha
rcr
xchg
leave
push
mov
jb
mov
pop
add
int3
jl
imul
xor
mov
push
cmp
jnp
cmpsb
hlt
add
jbe
cmp
testb
inc
clc
cs
add
movl
movl
movl
movl
movl
jmp
mov
xor
movsl
mov
mov
sbb
jmp
jp
push
jg
mov
mov
icebp
iret
lret
adc
push
repnz
subl
push
daa
into
imul
dec
sbb
adc
cmpsl
jecxz
xor
ds
xor
outsl
and
mov
mov
xchg
jg
pop
in
sbb
jle
sbb
push
xchg
stos
int
in
adc
cmp
ret
movsb
push
pop
dec
jecxz
filds
push
call
pop
sub
adc
mov
das
dec
jbe
sub
negl
sub
or
dec
int
ret
movsl
fistpll
cmpsb
pop
int3
aas
jg
repnz
imul
jno
xchg
mov
psubq
inc
loop
add
dec
dec
outsb
repnz
mov
mov
test
fwait
subb
sbb
jmp
cli
movsb
int
push
add
adc
addps
push
adc
fisubs
int
dec
sub
pushf
idivl
push
xor
mov
out
dec
aas
add
loopne
or
aas
notb
cmpsl
outsl
mov
paddq
insb
lock
jp
jbe
les
test
repnz
fdivs
daa
das
mov
xor
pop
add
scas
popf
add
adc
dec
mov
pslld
mov
nop
push
push
add
lods
xor
cld
mov
xor
jl
sti
push
lea
mov
ror
sbb
xlat
lret
ss
sbb
adc
sbb
or
out
gs
stc
dec
add
jae
xchg
outsl
sbb
push
in
xchg
out
int
aam
bound
loop
sub
leave
int
cltd
out
popf
ljmp
pushf
in
lock
xchg
popa
xchg
cs
dec
xchg
cmpb
mov
mov
inc
push
dec
daa
loope
enter
mov
inc
jo
pushf
in
adc
cmpsl
xchg
insb
dec
test
in
push
jnp
and
cmpsl
inc
pop
sbb
xchg
cltd
aas
cmp
dec
in
mov
mov
push
jmp
sub
and
jb
push
stos
cmc
stos
xchg
mov
test
cltd
add
inc
mov
or
sub
insl
xchg
lret
pop
add
and
cmpsb
push
addb
mov
and
pushf
in
inc
xlat
fwait
ljmp
push
mov
xor
dec
mov
mov
mov
cmpsl
pop
and
pop
add
loopne
nop
jp
inc
or
push
pop
adc
sub
gs
arpl
adc
jecxz
mov
scas
je
ret
or
pop
push
cmp
mov
and
addr16
pop
ficomps
mull
cmpsb
outsl
fisubs
mov
iret
fistpl
pop
pusha
dec
inc
mov
into
aaa
mov
in
mov
mov
cmpsl
outsl
cmp
cwtl
ret
movl
lods
add
mov
rcll
cmp
fisttps
test
mov
repnz
mov
jbe
movsl
pushf
pop
add
push
mov
ret
dec
outsb
popa
sbb
fistpl
jmp
movsl
fimull
outsl
pop
loopne
or
inc
enter
aas
or
mov
ljmp
dec
insl
lret
mov
cmc
and
ficompl
fmuls
lahf
inc
cs
cmp
or
sub
mov
dec
inc
adc
adc
inc
ja
sub
jb
scas
xchg
mov
push
je
or
lret
cmp
jp
mov
mov
imul
popa
pushf
push
imul
xchg
mov
or
cmp
xchg
data16
mov
movsb
ja
mov
int
sub
mov
jge
push
sub
lods
push
adc
push
ja
inc
data16
loop
and
inc
and
pop
push
or
mov
xchg
js
and
jle
shll
or
pop
inc
cmp
push
jo
int
cli
test
inc
mov
add
pop
or
ja
fidivl
jmp
fisttpl
dec
test
pop
xor
mov
sbb
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
jmp
leave
xchg
dec
sub
sub
mov
cld
mov
test
mov
pop
out
inc
sub
mov
fdiv
mov
call
idivb
push
mov
je
je
mov
sub
add
int
sbb
scas
icebp
je
inc
int3
addr16
jmp
or
sbb
dec
dec
ficompl
js
std
dec
jg
sbb
rcrb
xor
pop
xchg
sub
cmp
add
cld
inc
pop
xor
mov
sbb
test
repnz
pop
xor
xchg
mov
imul
inc
dec
xor
stos
dec
push
lds
xor
dec
push
xor
xor
mov
iret
cmp
call
push
arpl
in
mov
pop
jmp
test
jmp
enter
clc
xchg
das
and
push
push
xor
les
or
imul
test
sbb
jns
fcomi
out
or
push
and
cmp
cmp
mov
push
mov
sub
mov
test
mov
ljmp
jp
xchg
nop
mov
pop
iret
les
es
cmpsb
add
pop
dec
std
jg
adc
sbb
popf
std
sbb
add
and
inc
arpl
out
dec
cmpsl
sti
gs
add
xor
aad
or
dec
sbb
call
xchg
push
inc
cwtl
inc
rcrb
je
xchg
and
jb
das
jecxz
arpl
fnstsw
inc
push
inc
push
mov
mov
test
sub
pop
cmc
and
jno
lret
dec
into
leave
out
lods
inc
or
dec
pop
add
pop
movsb
iret
icebp
add
and
aas
adc
neg
outsl
stos
dec
mov
jmp
in
cmp
jecxz
test
add
mov
stc
fimuls
mov
faddl
xchg
sub
stos
cmp
xchg
sbb
and
mov
test
shlb
and
cmpsl
fwait
inc
int3
pushf
xchg
pop
mov
in
push
mov
sarb
fimuls
pop
add
lahf
out
lret
hlt
pop
xor
add
or
add
jge
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
jmp
insl
jmp
cwtl
xchg
popf
pusha
outsl
mov
add
mov
test
stos
adc
cmpsl
stc
add
dec
adc
aam
int3
insl
push
icebp
cmp
sbb
cwtl
lods
cmp
cmp
stos
mov
dec
outsl
fstl
jns
stos
dec
loop
jns
mov
enter
fidivl
jecxz
lods
and
js
cmp
sub
inc
fs
in
jae
int3
and
lret
pusha
cld
popf
and
sub
xchg
icebp
lds
int3
subb
int3
sbb
xchg
andl
jne
adc
divb
sbb
xor
sbb
insl
mov
mov
adc
das
icebp
adc
hlt
mov
pop
jge
jmp
into
es
in
jbe
bound
aas
adc
or
push
jl
cmp
mov
dec
sahf
jno
ss
or
sub
fs
pusha
pop
push
add
cmp
or
add
leave
lret
testl
test
pop
mov
mov
ficompl
pusha
pop
push
dec
roll
xchg
fistpl
inc
mov
jecxz
jmp
dec
cld
lcall
jge
mov
pop
pop
icebp
bound
popf
mov
andb
ds
xchg
jo
addr16
dec
jne
jae
inc
mov
int3
inc
xchg
sub
jl
notb
inc
mov
jle
mov
dec
sub
pop
and
cli
push
dec
repz
dec
hlt
je
arpl
inc
xor
stos
mov
bound
in
push
xchg
orl
lds
push
fwait
mov
jg
je
mov
lret
sbb
adc
xor
mov
push
or
scas
jae
sub
insb
in
cmpsb
add
jmp
mov
lahf
out
cmp
push
orb
ss
ss
sbb
push
movsl
pusha
and
movsl
in
pushf
das
pop
dec
movsl
mov
jg
add
xor
ror
inc
sub
arpl
xchg
rep
popa
fbld
mov
push
mov
sti
jne
push
jl
inc
out
jge
or
dec
rol
and
test
insl
test
inc
xor
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
jmp
push
xchg
mov
and
int
mov
enter
test
sub
sub
mov
push
push
imul
dec
aad
fnsave
movsl
xchg
xor
shl
sbb
jb
test
xchg
popa
enter
imul
ja
shll
jae
out
movsl
jmp
insb
mov
xor
popa
icebp
xor
xchg
adc
sub
adc
lds
inc
lcall
or
or
leave
aas
jb
xlat
loop
aaa
pop
lret
or
test
inc
pop
pop
jb
add
iret
aad
mov
and
lahf
idivb
adc
mov
jns
ss
push
fimuls
fisubrl
adc
xchg
movsl
pop
out
push
lods
jp
scas
fwait
push
cmp
mov
aad
ds
dec
mov
inc
in
dec
in
subl
aad
enter
xchg
mov
jno
imul
scas
push
lcall
data16
jne
mull
pop
jo
dec
arpl
pop
mov
push
mov
xchg
test
add
movb
adc
movsb
sarb
jns
mov
lock
cmp
sub
xchg
int
pop
jno
dec
mov
xor
and
aam
cmp
sbb
jl
stos
pop
fidivs
fs
arpl
jp
mov
dec
daa
dec
push
xorl
in
fdivl
jae,pn
mov
pop
mov
jbe
ret
jae
sbb
pop
or
popa
into
loope
cs
nop
scas
test
scas
or
fidivrl
mov
mov
in
mov
fisttps
mov
jb
or
fs
pop
sub
push
jg
mov
dec
stos
insl
push
mov
test
sub
sahf
xchg
pop
or
in
lahf
mov
dec
pop
dec
inc
sub
dec
push
sub
pop
add
out
aam
sahf
stos
jae
test
iret
pop
dec
inc
pop
mov
sbb
xchg
hlt
out
adc
push
xchg
dec
xchg
popf
stc
ja
cltd
pusha
add
push
icebp
or
xor
aaa
xorb
data16
lret
mov
mov
leave
loop
divl
arpl
icebp
mov
xor
or
jmp
push
and
mov
mov
test
jo
clc
dec
lret
enter
in
add
dec
sub
or
jno
xor
jb
ja
mov
mov
arpl
and
lret
nop
xor
lds
dec
mov
and
pop
or
jno
xor
and
cld
ljmp
sub
push
movsb
in
clc
shll
mov
arpl
ror
dec
frstor
rcrl
or
shrb
scas
dec
pop
cmpps
sbb
sub
fimull
jns
sub
int3
shl
sub
sbb
mov
mov
popf
popa
cmpsl
cmp
xchg
fcoms
dec
leave
and
imul
rorl
mov
mov
sub
test
out
int3
lods
xchg
push
imul
test
lahf
mov
jae
inc
lods
addr16
jb
movsl
sub
sbb
fdivp
clc
sbb
ds
je
inc
dec
mov
nop
mov
in
mov
les
clc
in
mov
lods
sahf
xchg
inc
mov
cmp
xchg
in
stos
rolb
xchg
push
jl
mov
fisubrl
cmp
dec
loope
mov
and
enter
insb
xchg
scas
push
shrl
and
pop
mov
in
mov
fstl
xchg
ss
xlat
lods
daa
insb
xchg
cmpsl
fidivs
call
bound
add
inc
adc
push
arpl
mov
repz
jp
jge
push
fisttps
and
mov
cmpsb
inc
or
mov
aad
jae
cmp
lcall
hlt
jmp
adc
lahf
ljmp
outsb
adc
das
mov
sub
outsb
cmp
push
inc
mul
xchg
aad
jb
xchg
jb
js
sbb
cmp
pop
push
jg
cmp
test
pop
cmp
sub
and
jno
ret
into
jnp
or
aas
cld
and
cmp
imul
outsl
movsb
aaa
and
mov
inc
sarl
and
or
pop
add
cmpsb
sub
fcmovnu
into
inc
int3
jl
rorl
or
inc
inc
hlt
jg
add
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
jmp
bound
and
lds
in
jmp
adc
sbb
leave
aas
sub
cwtl
mov
jo
sub
add
test
ret
ucomiss
arpl
incl
loopne
cmp
mov
nop
jb
lahf
mov
bound
outsl
mov
imul
hlt
scas
cmpsl
ljmp
mov
xchg
xor
fcoms
mov
popf
rcll
insb
inc
jnp
or
xchg
mov
popf
test
jno
es
dec
or
sarb
pop
xchg
mov
scas
shl
mov
cs
ja
jecxz
cmpsb
pushf
cmp
jo
push
in
cmp
inc
mov
call
lahf
mov
push
push
mov
xor
push
pop
mov
and
ret
pop
inc
pop
pop
and
dec
stos
mov
in
jmp
out
ficoms
fwait
mov
cmc
out
mov
fsub
add
dec
push
xchg
dec
or
adc
and
push
test
and
cli
inc
jne
adc
je
jle
push
fdivrs
or
sti
add
jns
jl
and
lcall
mov
mov
imul
push
leave
cld
repz
int3
adc
arpl
loop
or
lock
inc
mov
enter
sub
loope
scas
or
leave
flds
addb
xchg
aas
rcll
rcl
cmp
xor
xchg
outsb
les
sti
add
or
mov
test
add
xchg
les
jl
fwait
cmp
push
push
add
add
lods
mov
mov
sbbb
mov
jne
inc
cld
adc
cs
fisttpll
fs
das
imul
add
jae
push
mov
adc
cmp
dec
lahf
loop
pop
pop
out
push
push
add
jp
cmc
cmpsl
adc
addr16
icebp
xchg
mov
mov
imulb
repz
jb
xchg
push
jmp
push
dec
lret
ret
mov
mov
pop
lret
loop
cmp
mov
add
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
dec
mov
aam
movsb
sub
bound
jle
xchg
sbb
sbb
ja
idiv
inc
je
lea
stos
outsb
dec
sub
adc
push
sahf
cmc
and
out
jne
inc
inc
bound
fisttpl
or
ds
push
fadd
xchg
shrb
in
bound
aam
jecxz
les
das
push
jg
adc
loop
int
fistl
aad
cs
sti
sarb
jl
jmp
cmpsb
mov
lock
mov
mov
add
and
out
lret
xchg
push
rorl
and
clc
jns
sub
pop
arpl
cmp
mov
lret
repnz
inc
push
sbb
mov
jnp
popf
int3
xchg
jle
dec
int
sub
fcomps
leave
mov
imul
add
leave
adc
adc
or
popa
rcr
mov
cs
int3
mov
enter
aam
in
leave
rorb
or
add
jb
dec
xchg
loope
fucomip
xlat
inc
sbb
sbb
adc
mov
nop
call
inc
fcmovne
jge
jo
ret
mov
clc
lock
fwait
cmpl
daa
dec
enter
xchg
mov
or
inc
sti
in
mov
ds
pop
popa
into
insl
aad
ja
xor
in
sub
xchg
pop
push
mov
sub
push
dec
or
daa
sbb
lods
cmc
cs
gs
or
loopne
popl
jo
lahf
xlat
rol
jbe
add
pop
jo
add
or
gs
push
das
inc
push
or
cmpsl
or
ljmp
fiadds
push
mov
push
mov
add
and
push
dec
mov
mov
add
jecxz
shrb
lock
jno
pop
mov
fnstsw
leave
cs
sti
adc
mov
push
push
jne
dec
mov
and
inc
dec
xor
cmp
mov
sbb
mov
pop
sahf
imul
ss
hlt
mov
cmp
bound
push
pop
outsl
repz
aas
mov
scas
pop
push
push
jmp
add
clc
dec
pop
dec
imul
xchg
pushf
jmp
test
sub
adc
aas
mov
xor
jns
and
jne
sbb
in
out
push
push
clc
cmp
sub
mov
jne
and
mov
lock
xchg
mov
mov
js
sub
jg
pop
and
xchg
adc
lahf
mov
out
mov
lock
adc
pop
sbb
adc
popa
mov
mov
mov
push
pop
stc
sub
aam
jnp
cmp
rorb
arpl
enter
out
xchg
cmpsb
insl
mov
sti
add
lret
fs
ss
enter
sub
or
cld
rcr
fs
lcall
mov
mov
adc
or
fwait
nop
popl
jmp
dec
dec
es
mov
std
and
xchg
test
mov
insb
add
add
jne
inc
sbb
pop
clc
push
aas
mov
jns
sbb
mov
mov
insb
pushf
popf
or
hlt
std
mov
in
fdivrl
xlat
push
lahf
mov
mov
add
add
insb
stc
dec
mov
pop
ja
pop
sub
jmp
lods
js
popf
imul
popa
movsb
or
xchg
stc
outsl
imul
pop
sub
adcl
push
jmp
jo
inc
scas
xchg
mov
into
ljmp
push
pushf
scas
mov
fwait
jbe
push
sbb
ret
scas
sub
xchg
sub
push
dec
cmc
shrl
mov
xor
addr16
insl
into
sbb
inc
jmp
ljmp
aaa
pop
fnstenv
cmp
lret
pop
sub
sbb
aas
mov
push
or
dec
je
xlat
and
xchg
inc
xor
rolb
std
pop
nop
sub
mov
lea
ss
iret
fdivl
and
jae
cmp
scas
push
push
addr16
xorl
xchg
sbb
push
les
jbe
ljmp
jb
xlat
popa
scas
jl
lds
mov
mov
ret
and
imul
std
adc
mov
negb
lods
xor
mov
fsubrl
add
inc
xor
mov
xchg
push
imul
pop
addr16
dec
inc
pop
push
dec
stos
mov
scas
pushf
test
xchg
je
aaa
inc
jb
sub
and
cli
jl
mov
addl
cmp
xor
mov
mov
sahf
fsubl
into
icebp
pushf
iret
add
push
jb
push
stos
or
loope
hlt
repnz
xor
ret
xchg
aam
enter
hlt
fcompl
faddl
push
imul
popf
lcall
xchg
xchg
fcmovb
mov
adc
pop
mov
int
push
inc
jecxz
aam
cs
mov
rcll
pushf
jb
or
adc
fnstsw
out
sub
in
fisttpll
dec
aas
idiv
lods
insl
sbb
mov
scas
aaa
push
loopne
in
gs
inc
movb
fbstp
dec
jmp
jp
popf
popf
mov
movsl
mov
lods
ret
in
xor
jecxz
push
inc
pop
jmp
inc
jmp
add
pop
mov
ret
je
sbb
or
ss
stos
lods
mov
insl
lret
das
dec
jg
push
mov
push
inc
stc
adc
inc
test
jno
sahf
push
cmp
cmpb
pop
test
jge
notl
or
sbb
push
mov
cmp
xchg
and
sar
mov
xchg
jno
lods
outsb
push
fsub
cmp
mov
scas
orb
mov
lods
mov
xor
jbe
stc
sub
ss
inc
pop
xchg
filds
cmc
stos
popf
enter
push
imul
and
sub
xchg
loop
es
jge
and
inc
xor
lea
loopne
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
jmp
das
ret
pop
sub
ret
xchg
mov
cmp
sbb
sbb
cs
out
xor
imul
and
popa
dec
rolb
adc
lods
add
adc
lea
movsb
ds
sub
jne
jo
out
and
cltd
sub
pop
mov
lahf
lock
es
add
cmp
inc
pushf
mov
add
add
push
cld
push
cmp
xlat
fnstsw
scas
jne
cmpsl
mov
inc
fnstenv
pushf
fcomp
mov
movsl
add
popf
sti
scas
rolb
iret
mov
sbb
les
jmp
sbb
cmp
pusha
les
pop
xorl
cmp
sti
loope
mov
loop
push
or
cmp
add
sub
cli
rcll
fimull
mov
and
mov
jno
lea
sub
pop
sbb
lcallw
and
mov
bound
lock
in
mov
lock
pop
rcr
cmpsb
mov
out
xlat
push
and
xchg
mov
into
mov
or
stos
sti
clc
mov
mov
mov
adc
add
jmp
jo
push
xor
adc
or
or
js
cmc
add
cmp
xor
repz
hlt
mov
movsl
lea
xchg
add
xchg
xchg
ljmp
xchg
mov
dec
cmp
ret
and
adc
xchg
xlat
mov
ss
jno
addr16
lods
arpl
ror
cmpsb
fdivrs
mov
mov
and
push
sub
aam
es
rcll
jb
test
xor
push
nop
and
inc
sti
inc
mov
test
mov
and
mov
cmp
sarl
dec
xchg
ss
leave
mov
gs
fsubs
sub
test
sub
pop
mov
rorb
mov
test
cmp
cs
aaa
aaa
xor
inc
fidivrs
or
stos
das
fs
jno
dec
js
inc
cltd
add
pop
lds
out
dec
mov
lcall
bound
xor
nop
pop
pop
das
cs
jnp
or
es
dec
pop
sbb
xchg
or
pop
hlt
push
mov
push
mov
cmp
lea
mov
stos
mov
daa
mov
inc
test
adc
fnsave
sbb
jp
push
mov
test
dec
push
adc
ss
arpl
loopne
jb
jae
inc
fucom
dec
push
mov
dec
or
popa
sahf
or
fisttpl
add
in
fistl
sahf
mov
cmp
into
lds
jmp
inc
and
mov
adc
lcall
mov
xchg
repz
lahf
adc
mov
adc
jg
outsl
xor
sbb
ljmp
cmp
adc
cmpsl
fdivl
rorl
addr16
js
mov
push
in
das
lods
push
mov
daa
mov
dec
xor
add
movsb
arpl
loop
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
jmp
fs
cmp
cmpsb
dec
adc
cltd
jb
sbb
sbb
sarl
imul
sub
mov
xor
add
cmp
sbb
pop
and
sub
ficoms
jns
fwait
jge
mov
add
pop
sbb
loop
addr16
xchg
iret
movsl
mov
adc
lret
lret
mov
sbb
std
inc
pop
or
mov
ljmp
mov
and
pop
sub
rcl
push
pmaxsw
ss
loope
mov
addr16
xchg
pushf
je
inc
adc
push
shll
xchg
mov
testl
fimuls
enter
add
xchg
lea
mov
cmc
lods
test
shll
xchg
inc
and
in
dec
lds
int3
icebp
xor
jmp
stos
roll
lods
xor
ret
loop
lds
mov
clc
stos
test
and
xchg
or
inc
xchg
fstps
nop
xlat
inc
mov
aad
in
and
shlb
pop
cmc
inc
adc
adc
sub
pop
icebp
mov
pop
mov
xchg
mov
mov
jecxz
repz
add
pushf
pop
or
push
mov
popa
pop
cmp
les
jl
scas
jne
hlt
and
fldcw
ffree
adc
add
insb
in
bound
mov
xchg
in
jg
cld
and
jp
jle
loope
loopne
ljmp
sar
push
repz
ret
lcall
into
stc
rcrl
inc
ja
cld
adc
mov
and
je
mov
xchg
dec
fildl
dec
mov
stc
sbb
fldt
jmp
mov
push
xchg
or
in
lea
aad
or
mov
adc
pop
outsb
movsl
lret
fadd
jb
les
test
insl
mov
inc
stos
rclb
pop
fsts
dec
add
add
add
adc
dec
push
push
bound
pop
rcrl
push
dec
popf
mov
mov
imul
xor
stos
sub
inc
das
pop
pop
pop
bound
outsb
hlt
aaa
or
mov
iret
xor
insl
xchg
aam
dec
cmpsb
enterw
bswap
aad
push
pop
leave
jb
xchg
jl
or
dec
dec
push
test
cwtl
mov
push
or
clc
xlat
pop
xor
std
adc
adc
inc
add
data16
jnp
jl
mov
mov
cld
fsub
mov
pop
push
clc
lock
inc
decl
and
and
loope
mov
repnz
mov
or
leave
daa
xchg
xchg
aaa
loop
or
pop
rcrb
loope
mov
test
cmp
cld
xlat
jmp
or
imul
test
in
cmp
loop
pushf
jge
insl
push
cmp
mov
push
adc
add
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
jmp
sbb
sbb
jo
ret
stc
insb
sbb
jns
sbb
es
es
enter
mov
daa
jae
push
aam
jns
inc
xor
mov
ja
ret
hlt
shrb
movq
mov
pushf
js
cmpsl
sbb
jmp
sub
jns
test
arpl
in
arpl
ja
xor
clc
lcall
dec
sarl
jl
sarl
mov
test
xor
int
sbb
out
adc
xchg
pop
xchg
pop
ss
add
outsb
jmp
stos
addr16
arpl
std
pop
inc
es
add
popa
aas
mov
push
fadds
sub
fistl
movsl
cmp
xchg
shr
xor
xor
mulb
aaa
adc
ret
js
daa
int3
mov
std
pop
mov
cltd
int
scas
jno
mov
cmpsl
fisubrl
lcall
jne
repz
rcl
andb
jns
shrb
rorl
int3
es
into
loope
mov
sub
xchg
mov
dec
in
mov
mov
xor
sahf
stos
push
sub
int3
mov
scas
andl
push
cs
stos
lret
ret
popf
xchg
cmc
pop
add
xchg
xor
dec
loop
orb
jns
adc
mov
mov
mov
gs
pop
mov
in
fldl
shlb
adc
xchg
shll
fsubl
sbb
push
pop
xor
cli
fcoml
aas
push
pop
out
cwtl
jbe
or
push
push
pop
iret
imul
inc
xor
into
dec
fldcw
fsubs
dec
fidivs
xor
add
sbbb
jecxz
or
dec
and
scas
gs
dec
mov
cld
fcmovnu
fwait
sbb
cmp
fstl
cltd
mov
rcrl
daa
aad
pushf
mov
xor
aas
cmp
xchg
pushf
aaa
negl
int
add
inc
js
lret
daa
notl
and
mov
lahf
adc
es
incb
repnz
aam
adc
popa
sub
xor
xlat
subb
mov
popa
dec
pusha
add
xchg
xchg
dec
xor
aam
mov
ffreep
lret
lahf
test
stos
jnp
lods
inc
pop
jg
pop
mov
xchg
push
sub
pop
push
mov
jno
dec
arpl
push
nop
jb
push
mov
lds
dec
push
inc
xor
test
lret
negl
or
push
addr16
idiv
push
std
test
aam
arpl
data16
inc
add
mov
mov
jle
jg
jge
pushf
dec
pop
push
jle
clc
ja
pushf
jb
hlt
sub
pop
fimuls
loopne
xchg
xchg
mov
repnz
inc
jge
sub
add
sub
dec
sub
fmull
loop
dec
push
repz
jb
testl
dec
je
arpl
jne
rorl
rcll
and
push
movsb
xchg
push
pextrw
js
jae
es
data16
out
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
jmp
adc
xor
int
cmp
sbb
sbb
mov
mov
stos
in
mov
out
sub
popa
std
aad
stos
xchg
mov
adc
dec
inc
push
xor
out
iret
lea
adc
jnp
lahf
push
movsl
mov
scas
sub
inc
mov
add
shll
insl
jbe
adc
inc
and
dec
imul
enter
mov
out
test
dec
adc
sub
insl
iret
imul
nop
sbb
push
das
ret
xchg
loope
mov
mov
xchg
and
push
and
cmp
pop
dec
and
xchg
pop
rcl
fmul
jge
int3
in
insl
push
dec
xor
in
int
rorl
inc
test
adc
fmuls
inc
enter
pop
dec
movsl
push
pop
jmp
adc
les
les
add
int3
es
int3
hlt
mov
adc
mov
xchg
bound
mov
jae
push
jp
into
sbb
sub
mov
jbe
test
test
mov
xorb
icebp
fwait
mov
push
cmp
icebp
popf
xor
push
jmp
test
mov
test
push
sti
inc
mov
sub
cli
orl
mov
dec
testl
outsb
xor
int
pushf
pop
add
imul
testl
out
jae
add
xor
inc
push
movsl
test
cltd
push
push
add
cmpb
lods
pushl
or
icebp
add
test
aad
push
movsb
inc
loope
push
sub
mov
jmp
sub
subb
int3
lea
outsb
and
adc
xor
sub
xchg
fistpll
dec
add
rclb
loope
and
xorb
fnstcw
loopne
jnp
mov
popa
mov
mov
xlat
inc
imul
cmp
fs
insb
fildl
pop
inc
stc
sub
fmuls
js
cmpsb
movsb
xchg
push
jge
cmpsb
adc
and
scas
pop
xchg
inc
sbb
mov
sbb
push
push
jmp
add
aam
ret
xor
mov
iret
insb
push
out
inc
mov
loopne
int
xor
jo
sub
int3
mov
lea
out
ljmp
scas
addb
jmp
shlb
lds
lahf
jecxz
out
jbe
pop
jnp
or
mov
test
lds
arpl
and
inc
in
mov
cmp
and
push
mov
xor
ror
outsb
leave
inc
gs
and
push
in
push
xchg
mov
and
sub
das
ljmp
stos
add
or
std
mov
jecxz
jle
mov
stc
stc
and
sbbb
es
test
cltd
jae
das
mov
add
adc
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
jmp
or
hlt
add
fistpl
mov
stos
dec
cwtl
movsl
mov
jns
sbb
mov
mov
cs
loopne
mov
mov
rorl
cld
and
xor
andb
mov
add
xor
int
inc
xor
popf
or
test
imul
or
push
stc
cmp
in
or
bound
inc
aaa
subb
iret
push
cmpsl
jge
je
sbb
fsts
mov
imul
mov
fstpt
int
aad
sbb
data16
cmp
shrb
inc
push
outsl
and
subl
fisubs
sbb
xchg
fnsave
jle
add
stc
add
pop
adc
cmp
jmp
int3
lret
push
gs
push
test
mov
push
xchg
add
pop
xchg
hlt
js
pop
lock
cmp
dec
push
fcmove
pusha
test
stc
add
fldcw
adc
mov
add
and
jb
movups
fs
cmp
xor
fnsave
cltd
rcl
mov
mov
mov
cmpsl
jb
add
push
das
or
add
fists
jge
jnp
push
push
xlat
xor
ret
xchg
out
xlat
jae
sub
or
pop
xor
lret
lcall
sbb
repz
or
cmc
ss
sbbb
pop
and
fisubrl
outsl
cld
scas
push
mov
jb
out
mov
in
jae
les
rorl
sub
xor
fs
bound
push
jb
sbb
lds
mov
xchg
negl
mov
andl
and
bound
mov
cmp
and
ds
ret
jmp
aaa
in
andb
cli
sub
aaa
lock
pushf
lods
xor
inc
jle
outsl
adc
add
push
cwtl
add
cmpl
mov
sbb
aaa
cmpsb
dec
lds
jmp
push
sub
shl
insb
dec
add
mov
ds
mov
cltd
sub
pop
scas
movb
ljmp
and
fsts
cmp
lea
push
push
dec
mov
add
push
shld
lret
imul
xor
mov
scas
xor
jnp
mov
int
ss
pop
xor
imul
push
aam
xchg
add
and
jno
pop
sahf
mov
sbb
popl
inc
cmp
and
cwtl
mov
lret
jnp
cmpsb
imul
aam
shlb
xchg
add
fsts
inc
gs
add
xor
fs
movsl
subl
jp
jo
cmpsb
lret
daa
dec
lret
ljmp
add
sbb
mov
jns
pop
jno
xchg
and
inc
pop
mov
arpl
sub
mov
rclb
fwait
push
lds
xchg
xchg
adc
ljmp
das
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
jmp
aas
cmpl
mov
cli
cli
mov
je
sbb
imul
jle
scas
movsl
out
movsl
mov
add
jb
fdivrl
out
pop
jns
fcomps
mov
mov
jno
sbb
dec
cmpb
push
dec
jge
pop
adc
fistps
adc
addr16
enter
outsl
fdivs
xorl
aas
mov
mov
enter
push
cmp
or
xchg
f2xm1
pop
mov
sarl
loop
iret
cmc
push
rclb
mov
jae
xchg
pop
int
and
dec
mov
iret
in
and
add
scas
call
out
or
xchg
outsb
call
cld
dec
bts
nop
cmp
aaa
in
jae
pop
xorb
les
adc
mov
test
sub
jecxz
sub
cltd
pusha
sahf
push
sbb
clc
fwait
and
dec
mov
outsb
shll
repz
shll
xchg
sub
inc
bound
scas
jge
xor
aam
popf
into
cmp
pop
ret
xchg
stos
mov
jns
mov
mov
push
mov
jbe
cmp
sarb
mov
mov
sti
mov
sbb
xchg
addl
inc
add
loopne
adc
dec
and
xchg
or
push
push
addr16
lods
test
imul
fistl
mov
xchg
lahf
dec
add
add
inc
mov
cli
xchg
push
addr16
mov
bound
clc
stos
test
mov
mov
xchg
aad
enter
cmpsb
cs
xchg
mov
inc
xchg
mov
push
or
cmp
jnp
aas
xchg
sbb
scas
lods
sub
mov
fs
cmpsb
inc
push
leave
cmp
bound
fstl
lds
dec
adc
notb
jnp
loopne
cltd
xchg
mov
das
roll
andb
test
push
push
xchg
ret
cmp
mov
test
clc
cli
jl
cli
inc
in
std
and
xor
loope
test
mov
ret
sbb
push
dec
and
inc
inc
cvtps2pd
decb
cmp
insl
lods
shll
js
mov
mov
cmpl
ss
xlat
mov
xchg
andl
in
pop
push
mov
inc
xlat
pop
sbb
push
mov
dec
sahf
and
mov
addr16
test
adc
lods
mov
push
inc
sbb
in
fldcw
mov
sub
inc
enter
mov
mov
push
push
push
push
call
add
adc
push
push
push
push
call
mov
mov
mov
xor
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shl
xor
shr
or
xor
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
jmp
imul
pop
jbe
mov
pop
jo
push
sbb
and
sbb
mov
and
jnp
pop
or
dec
rcr
and
dec
mov
adc
sbb
call
inc
aaa
xchg
cmc
sub
add
mov
enter
mov
in
and
cmp
push
jge
cmp
enter
dec
adc
nop
dec
or
or
cmp
jecxz
sti
scas
loope
cmp
and
lds
mov
inc
sub
or
push
sub
cs
iret
daa
pop
cmp
loopne
nop
mov
loope
xor
xchg
pop
and
mov
inc
sbb
fbld
jns
inc
icebp
pop
sub
stc
mov
xor
push
cmp
imul
xchg
fisttps
rcr
out
jecxz
mov
lcall
push
ja
sbb
ja
in
jno
and
ja
xchg
adc
in
sub
add
pushf
adc
ss
jecxz
je
je
rorl
cmp
sti
mov
aaa
xchg
push
lea
vcmppd
shll
pushf
pop
push
hlt
outsb
stos
mov
pop
ret
xor
imul
sub
notl
pop
xchg
mov
xor
push
jle
sub
cltd
loopne
jbe
in
mov
dec
testl
dec
mov
aad
jne
fimuls
xchg
fwait
sub
cld
xor
cmp
iret
pop
cs
arpl
rcrb
mov
aas
gs
movsb
int
bound
imul
lret
mov
lret
lock
jmp
and
xor
push
cmp
mov
or
jle
lds
mov
test
xchg
sbb
xor
push
jl
test
inc
cs
xlat
out
xor
loope
dec
into
in
jbe
dec
ja
test
sbb
stos
cmp
jg
sbb
lea
andb
xor
addl
pop
cld
es
fs
mov
ljmp
push
adc
sbb
daa
jno
push
in
or
iret
pinsrw
js
and
test
dec
lret
jp
adc
xchg
in
mov
mov
dec
sbb
inc
jae
sub
in
and
add
inc
call
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
jmp
pushf
cmp
jl
call
sbb
scas
adc
sbb
sbb
xlat
out
lds
push
outsb
sbb
xlat
js
mov
mov
mov
xchg
jno
aam
shrb
xor
jge
lret
ljmp
loope
push
jmp
jle
sbb
push
test
add
nop
jp
lcall
adc
mov
cld
cmp
push
cwtl
push
out
inc
add
mov
sbb
mov
insb
es
add
mov
test
std
mov
addr16
shrl
inc
push
rcrb
add
inc
fiadds
mov
aaa
pop
decb
lods
jl
push
loopne
xchg
dec
andl
xor
xchg
insb
xchg
pushf
sub
add
shll
addr16
cmp
pop
and
icebp
loopne
inc
sbb
or
and
data16
adc
cmp
and
in
fldcw
loop
sahf
and
fsub
xchg
jne
negb
ds
daa
sti
jne
pop
rorb
test
add
out
add
inc
mov
pop
bound
fcomi
mov
daa
xchg
add
ret
es
cld
cmc
in
cmc
mov
jmp
in
xchg
xchg
out
sbb
stos
jecxz
out
out
adc
mov
xchg
push
inc
faddp
cmpb
cmp
out
and
imul
outsb
adc
sbb
jo
insl
mov
rol
push
imul
mov
pusha
jp
inc
cltd
repz
adc
add
popf
dec
mov
mov
movsb
mov
sub
pop
jae
inc
mov
faddl
movsl
outsl
push
cltd
int3
or
mov
in
pop
jl
jno
js
mov
icebp
xorl
movsl
push
dec
push
push
in
jo
movsl
and
dec
push
cmpsb
hlt
ret
cltd
xor
lcall
stc
xor
xor
or
ret
loop
push
sbb
inc
xchg
jnp
ljmp
pushf
sub
or
daa
push
outsl
jns
cmp
mov
clc
xor
or
inc
into
in
addl
in
das
sbb
and
mov
inc
sub
adc
loop
pop
aad
out
call
sbb
pop
dec
add
icebp
mov
or
loope
ljmp
loopne
lcall
xchg
popa
mov
jge
adc
add
test
cwtl
packssdw
test
cmp
insl
shll
pop
daa
jb
adc
enter
into
push
enter
repz
test
lods
xchg
inc
push
add
stos
lret
dec
fistl
test
cltd
inc
inc
push
enter
mov
push
dec
sub
xchg
insl
rcll
fstps
out
pop
sub
std
sahf
out
push
adc
or
sbb
cmpsb
in
pop
pushf
aam
mov
push
stos
mov
jle
roll
test
jmp
daa
jle
mov
sbb
jbe
inc
pop
das
mov
cli
mov
les
js
mov
or
adc
addl
jp
push
dec
jle
dec
fwait
adc
hlt
jmp
pop
add
xor
aaa
jbe
mov
ror
and
xor
bound
mov
ficompl
nop
mov
fwait
dec
sub
and
das
sbb
adc
mov
adc
jle
pop
mov
inc
inc
xchg
pop
pop
dec
push
shr
mov
inc
and
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
jmp
roll
andb
sbb
loop
jl
push
cltd
mov
scas
adc
sbb
dec
push
fistpll
cmp
jg
aad
xlat
xor
iret
jmp
les
ret
jb
test
sahf
xor
mov
inc
bound
dec
cmc
shrb
jno
jb
icebp
sbb
lret
push
idivb
icebp
ret
mov
push
fcomip
dec
insl
inc
fsubl
or
cld
xchg
pop
jbe
jp
xor
sarb
push
enter
pop
mov
mov
movsb
sbb
xchg
add
push
mov
aam
push
pusha
mov
imul
sbb
and
push
ljmp
push
aaa
cmpsl
stos
add
push
in
imul
pop
mov
jle
jne
fadds
jne
xchg
sbb
cmp
inc
adc
inc
push
or
xor
andl
cmp
add
je
adc
adc
cmp
mov
insl
pop
hlt
out
mov
test
push
cmp
sti
shll
and
mov
xlat
hlt
mov
rorl
add
cwtl
bound
outsb
pop
xchg
fs
sbb
push
insb
mov
arpl
add
mov
sub
dec
outsb
pop
flds
fdivrl
mov
pop
outsb
xchg
sbbl
cli
dec
and
mov
cmp
fdivl
sahf
lock
dec
and
fcompl
mov
cwtl
cmc
xchg
dec
jg
xchg
loope
test
cld
dec
jmp
cmpsl
sti
push
rorb
outsl
add
sarl
negb
xchg
sub
sub
std
test
out
rcl
pop
add
fdivr
xor
icebp
lods
push
pop
psubusb
faddl
les
rcrb
add
inc
push
rcrb
mov
in
test
insl
sbb
jae
xor
cmpsl
inc
mov
in
adc
xchg
idiv
aam
icebp
jbe
dec
xor
jns
sbb
mov
inc
sbb
jmp
xchg
jecxz
jo
adc
out
addr16
sbb
ss
jl
mov
mov
add
inc
jns
subl
xchg
and
pop
mov
cwtl
add
jne
pop
test
lcall
inc
aad
lods
xor
stc
je
lahf
add
fiaddl
idiv
aad
xchg
pop
fidivl
push
mov
loopne
lods
data16
jno,pn
repz
fwait
cs
sub
lret
mov
push
sahf
cmpb
xor
jecxz
mov
jle
popf
sbb
mov
scas
lods
inc
ljmp
push
mov
arpl
push
lret
xor
ds
pop
ja
test
call
iret
dec
pop
push
fldcw
push
inc
out
mov
lods
lret
fisttps
dec
popf
ficoms
add
test
xchg
jnp
add
add
xor
sub
inc
aam
insb
ss
aad
dec
pop
mov
sub
xor
call
jno
inc
pop
xchg
movsl
cltd
testb
mov
push
inc
mov
call
adc
call
sahf
sti
adc
mov
inc
dec
ret
rcll
insb
cmpsl
ljmp
sbb
sub
dec
xor
dec
inc
ds
in
shl
sub
nop
lret
int
cmp
cmp
aam
jge
aaa
or
push
scas
or
jge
mov
push
xchg
in
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
mov
mov
and
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
sub
push
push
push
adc
mov
cmpl
mov
mov
mov
mov
jmp
mov
jne
push
pushl
call
mov
mov
sub
and
and
xor
sbb
add
or
mov
or
shrd
shr
mov
and
mov
xor
mov
add
mov
sbbl
xor
xor
or
mov
add
or
mov
mov
adcl
shl
mov
and
shrd
add
xor
xorl
shr
adcl
mov
mov
xor
or
orl
mov
mov
xorl
mov
sbbl
mov
mov
cmpl
movl
notl
mov
movl
jmp
movl
jl
push
call
sbb
and
xor
xor
sbb
or
sbbl
xor
and
mov
sub
mov
mov
and
mov
dec
mov
cmpl
movl
movl
movl
jmp
movl
movl
jl
push
pushl
pushl
call
and
neg
and
adc
not
sbbl
shl
xor
shld
add
shl
mov
mov
mov
mov
addl
xor
xor
movl
movl
movl
mov
cmp
movl
jne
cmp
movl
je
sbb
mov
movzwl
xor
mov
mov
xor
xorl
shld
addl
shl
xorl
xor
mov
mov
adc
mov
xor
mov
mov
cmp
jne
cmp
jmp
push
inc
shlb
cmp
jo
xorb
sbb
notb
sbb
and
mov
pop
in
xchg
orb
imul
pop
bound
mov
cli
jl
mov
leave
loop
cmp
jae
jmp
and
xchg
pushl
rorl
cmp
mov
jmp
scas
imul
adc
xor
aad
movsb
jns
adcb
mov
jg
mov
pop
dec
mov
jle
daa
into
fcmovu
push
or
cltd
imul
and
pop
pop
outsl
sub
das
xchg
out
push
adc
std
shrl
fmul
jb
lods
jae
and
out
pop
mov
or
arpl
cli
lods
push
xchg
bound
sbbb
insb
pushf
popa
or
add
dec
sar
fbstp
mov
cmc
imul
mov
ret
mov
mov
lock
sub
fld
shl
pop
mov
mov
mov
or
fs
shr
or
flds
filds
and
or
lock
xor
stc
sahf
xlat
mull
cmp
xchg
rcr
repnz
imul
sti
fbstp
data16
jp
popa
jne
ret
loopne
push
int
push
mov
push
mov
push
daa
mov
mov
xchg
int3
mov
pop
xor
dec
sbb
mov
rcrl
in
mov
fistpll
push
aaa
mulb
adc
adc
out
fs
out
les
cmp
push
lods
stos
subb
ss
outsb
sbbl
mov
jecxz
cmp
push
adc
mov
iret
push
divl
negb
mov
mov
pop
pushf
sub
pop
mov
lock
mov
sbb
push
cli
mov
cmp
sti
inc
shufps
mov
sti
cltd
add
stc
into
jbe
jae
mov
jecxz
fwait
jmp
adc
jnp
dec
inc
or
imul
and
incb
add
mov
cmpl
movl
mov
mov
movzwl
jmp
movl
jle
push
call
mov
mov
sub
add
xor
xor
xor
sub
mov
sbbl
adcl
orl
or
mov
push
cmpl
mov
mov
jmp
mov
mov
jge
push
call
mov
sbb
inc
and
and
orl
and
pop
xor
mov
add
shl
neg
mov
xor
notl
shr
or
mov
or
mov
cmpl
notl
mov
jmp
movl
jge
push
push
call
movzbl
add
mov
andl
andl
mov
sub
sub
inc
mov
adcl
mov
mov
cmpl
mov
movzwl
movl
movl
jmp
mov
movl
jle
pushl
call
or
addl
sub
xor
mov
adc
or
mov
push
cmpl
movl
movl
movl
jmp
movzbl
jle
push
call
orl
and
adc
orl
adc
subl
add
sub
pop
sub
adcl
mov
andl
add
subl
mov
sbbl
lea
addl
mov
xor
add
mov
adc
mov
mov
xor
mov
xor
xorl
xor
shr
orl
shl
incl
or
addl
mov
movzwl
adc
movl
mov
dec
mov
xor
subl
xor
xorl
shr
shl
or
adcl
push
lea
xorl
push
lea
adcl
push
andl
call
mov
mov
mov
xor
mov
xor
cmpl
mov
mov
not
jmp
mov
jne
pushl
push
push
pushl
call
sbb
mov
or
mov
or
inc
xorl
inc
xor
cmpl
mov
mov
movl
jmp
movl
movl
jbe
push
call
adc
add
sub
sbb
orl
sub
shr
movzwl
add
mov
shl
or
subl
push
andl
lea
push
mov
mov
shrd
shr
mov
mov
xor
jmp
rorl
lret
jb
jns
or
cmp
sbb
adc
sbb
bnd
push
cmp
inc
das
lahf
xchg
sbb
cmp
xlat
scas
xor
jbe
and
fistps
add
imul
xchg
jae
pop
adc
fmuls
loop
nop
nop
bound
sbb
clc
mov
adc
in
mov
adc
cmpsl
cld
stos
into
mov
pop
jp
loopne
push
mov
int
pop
fcoms
fcmovne
fsubl
dec
push
cwtl
iret
push
mov
inc
cmpsl
mov
sub
call
mov
xchg
insb
add
cmpsb
xor
push
inc
or
dec
nop
cmp
sbb
loopne
std
sbb
lcall
pxor
mov
push
outsl
xor
andb
adc
pop
ficompl
mov
lahf
lahf
inc
sahf
fnstenv
shrb
mov
push
ret
lds
lods
sbb
mov
mov
in
cmpsl
popf
mul
jno
mov
mov
nop
in
mov
and
test
dec
jo
fs
fucomp
es
xor
cld
popf
push
adc
cltd
out
sbb
pop
outsl
bound
out
dec
adc
sbb
cmp
test
jb
push
movsb
negb
jbe
imul
in
or
pushf
es
cmp
mov
lods
mov
ja
and
fidivrl
or
outsb
push
or
pushf
sbb
ror
push
pop
sbb
lea
sbb
in
or
inc
push
add
fdivrl
cwtl
push
mov
inc
add
lret
ffree
pop
cs
sub
lcall
imulb
xor
ret
sub
pop
lock
ficompl
push
js
fcoms
out
gs
jle
inc
dec
movsl
mov
add
clc
pop
lcall
and
mov
insb
xlat
shr
cmpsl
jns
in
in
pop
pop
or
pop
popa
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
jmp
dec
shlb
sbb
ds
jns
add
sarl
adc
sbb
insb
or
xor
data16
lcall
loopne
dec
addl
pushl
mov
inc
scas
pop
out
push
lods
pop
in
xlat
sub
jns
dec
inc
jmp
popf
int
lock
push
adc
loope
mov
adc
sbb
pushl
repnz
repnz
xchg
sbb
and
imul
iret
js
jmp
inc
repnz
dec
pop
sbb
subb
jl
ror
dec
icebp
aam
jg
lret
testb
xchg
rol
add
pop
xchg
push
popf
jmp
inc
sub
mov
shll
pop
mov
cmp
inc
mov
popa
mov
addr16
push
xor
je
mov
pop
pushf
sbb
mov
mov
mov
add
aas
xchg
loopne
je
setbe
fwait
testb
jp
imul
jl
push
out
rol
push
xor
rolb
add
cwtl
sbb
sub
cmpl
inc
add
or
cli
lea
cmp
push
bnd
cmp
test
and
repz
pop
add
jb
pushf
mov
and
lods
pop
call
repz
je
cmp
out
es
aam
mov
bound
or
lret
pop
lods
rolb
imul
imul
adc
jb
cmp
mov
test
insb
and
mov
je
jae
or
dec
jl
inc
fs
adc
xor
mov
sub
push
and
push
inc
and
ss
leave
ljmp
adc
pop
jge
mov
fwait
and
push
icebp
bound
cmc
pop
data16
mov
add
fmuls
daa
xor
sti
cmpsl
xchg
jge
inc
adc
mov
xor
xor
or
shl
mov
jmp
in
je
push
fimull
movsl
mov
inc
xor
sbb
adc
sbb
mov
xor
adc
jns
adc
pop
cmp
dec
loope
push
cmpsb
fwait
arpl
inc
daa
gs
sbb
out
cwtl
inc
add
cmc
push
hlt
mov
xchg
divb
movsb
decb
in
std
and
icebp
repz
shl
andl
jnp
aas
mul
dec
cmp
pushf
stc
shl
mov
push
scas
test
and
movb
mov
sub
pop
xchg
and
sti
jo
js
ja
push
out
jmp
xchg
cwtl
inc
jno
add
aam
pop
je
sbb
mov
mov
fstpl
add
mov
mov
hlt
int
popa
arpl
testl
push
in
lods
es
sbb
incb
out
lods
mov
pop
sub
in
xor
or
stos
mov
push
and
pop
aam
inc
push
aas
pop
xchg
jo
push
cmc
js
jae
ret
mov
and
cwtl
ret
movsb
stos
or
pop
pop
cmp
inc
push
in
adc
push
std
out
mov
popa
out
shlb
lds
push
popa
xchg
mov
cwtl
ficompl
popf
into
sub
and
lods
dec
push
fsubrl
loope
lahf
cs
mov
in
inc
mov
fsubr
das
scas
or
out
pop
push
shll
std
fucomip
iret
stos
inc
and
int3
pop
sbb
push
daa
lds
lods
push
sbb
pop
lock
outsl
test
mov
lds
jp
push
dec
mov
mov
jle
push
inc
mov
icebp
mov
fisttpl
mov
push
mov
fisubl
inc
inc
arpl
cmp
fwait
cmp
add
mov
dec
dec
mov
add
andb
rolb
stos
mov
xor
fbstp
dec
leave
inc
clc
lods
xor
mov
mov
sub
sbb
icebp
test
adc
ja
mov
enter
jnp
push
adc
lods
roll
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
jmp
fdivrl
sbb
mov
mov
and
sbb
notb
sbb
xor
hlt
dec
push
neg
ret
dec
fwait
cmp
xchg
test
scas
xchg
cmp
xor
jbe
adc
addb
or
hlt
shll
das
mov
insb
push
ret
sahf
jg
cmp
pop
loope
adc
or
ds
jae
dec
mov
jmp
mov
call
mov
dec
mov
das
or
cmp
adc
xor
call
pop
cmp
mov
lock
push
dec
xchg
add
dec
mov
sub
loope
inc
jae
push
jecxz
cmp
insl
mov
pusha
fidivrl
jmp
mov
pop
fcompl
arpl
mov
jecxz
adc
lds
mov
adc
jle
lret
mov
sbb
test
mov
xchg
iret
inc
pop
outsb
sbb
or
push
push
cwtl
mov
ret
dec
sbb
dec
int3
xchg
mov
clc
sub
xchg
mov
pop
adc
jns
std
push
pop
push
cmc
clc
sbb
sbb
mov
pop
addr16
push
dec
out
inc
fsts
test
gs
mov
lret
push
pop
cltd
mov
mov
ss
movsb
jle
xor
out
loope
out
jae
nop
loope
cmp
stos
pusha
popa
push
pop
cmp
ljmp
and
outsb
into
outsl
enter
push
push
dec
sub
cmp
mov
and
add
pop
push
cmpsb
rcrb
lock
mov
int
or
pop
push
push
xchg
jle
cmp
mov
adc
mov
add
ja
or
add
jnp
lods
inc
pop
outsb
cmp
inc
test
jmp
jg
fwait
ljmp
daa
mov
mov
adc
mul
xchg
aaa
ljmp
cmp
pop
mov
into
fadd
lret
adc
fidivrl
xchg
orl
adc
sub
and
dec
mov
push
out
std
loope
push
sub
sbb
adc
sbb
inc
int3
es
sub
lds
mov
cli
stos
push
iret
repz
inc
pop
cmp
scas
loopne
cmp
mov
xor
cmpsl
sbb
xor
rcrl
sbb
dec
jns
jp
popf
in
mov
add
pop
adcl
sub
shl
or
adc
add
or
lods
mov
cmc
jnp
sbb
inc
sbbl
leave
es
dec
dec
shrb
jmp
dec
outsl
push
das
jns
inc
pop
lcall
add
out
inc
pop
iret
mov
pop
stc
adc
ja
jns
mov
xchg
js
test
mov
pop
fsubrl
fwait
dec
xor
rorl
or
xor
call
rcrl
and
enter
imul
cmpsb
std
mov
mov
aad
or
add
cwtl
insb
push
fstpl
dec
xchg
add
mov
iret
sbb
cmc
daa
sbb
push
xchg
outsl
push
out
jns
clc
addr16
in
pusha
insl
adc
scas
xchg
int3
xchg
popf
cld
int3
and
mov
add
jae
mov
and
inc
adcb
into
jne
or
je
ja
mov
cltd
movsb
sub
inc
inc
fpatan
mull
sub
sub
fadd
ss
xchg
add
ss
outsl
xor
adc
cld
sub
push
mov
es
add
inc
xchg
pushf
loop
in
mov
add
jmp
neg
testl
ljmp
mov
cmp
add
xchg
cli
mov
orb
xchg
jae
shr
xchg
or
jle
iret
lahf
mov
dec
fstpl
pop
lcall
out
pusha
ljmp
stc
adcb
xchg
out
mov
hlt
xor
and
std
push
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
jmp
add
bound
cmp
push
fsub
xchg
mov
fsubl
sbb
notb
sbb
bound
push
mov
xor
loope
mov
sub
pop
jno
fldenv
lret
mov
insl
mov
push
mov
imul
fldt
fdivr
and
iret
pop
les
push
sub
push
andl
pop
pushf
pop
or
jecxz
adc
xor
mov
add
mov
mov
jmp
push
fcomps
outsl
and
sub
js
adc
in
negb
insl
fsts
push
sbb
xchg
sub
sub
stos
jb
loope
call
dec
mov
dec
push
cmpsl
mov
pop
jb
lods
popf
int3
lahf
fistpl
je
lahf
mov
movsb
and
lods
daa
in
shr
leave
pop
das
cld
mov
jmp
jns
cld
gs
call
sbb
repz
push
daa
testl
xor
push
jg
mov
add
inc
inc
sub
sbb
and
xchg
loopne
adc
inc
mov
add
xchg
add
je
shll
enter
dec
push
lea
cmc
cmpsl
fsubrp
les
xchg
pop
xor
xlat
sti
jno
sbb
cmp
pop
lret
das
dec
push
xchg
ret
aam
fsubs
outsl
cltd
pop
subl
imul
push
inc
xor
pop
push
fcoms
fimuls
lods
dec
jmp
cmpsl
pop
ja
sub
in
lock
iret
pop
cld
dec
std
cwtl
in
sub
test
das
sub
pop
push
inc
dec
cwtl
add
and
push
mov
hlt
and
lahf
aad
xor
inc
push
mov
cmp
jp
lea
dec
fwait
aad
mov
pushf
pop
int3
dec
jns
sti
jbe
std
call
in
andl
dec
sub
stos
dec
lock
cmp
adc
xor
xor
pop
shl
or
pop
leave
ret
mov
mov
xorl
or
mov
jne
mov
andl
mul
ret
push
orl
mul
cmpl
movl
movl
mov
jmp
mov
jbe
call
mov
sub
mov
sub
movzwl
or
add
adc
movzbl
or
add
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
jmp
ss
mov
in
movsl
mov
mov
adc
sbb
adc
mov
xchg
xor
imul
jmp
fbstp
adc
lret
jg
push
loope
stc
imul
push
daa
adc
fisubs
dec
push
xchg
mov
fidivrl
or
pop
cmpsb
pop
lret
data16
and
mov
and
pop
inc
cmpsl
dec
jbe
arpl
push
or
jp
cmp
push
rorb
mov
and
push
cld
mov
ret
adc
dec
jo
cld
xor
pop
shl
xchg
xchg
in
or
mov
mov
popa
pop
adc
subl
pop
or
pop
jmp
add
insl
leave
pushf
jecxz
jle
out
fdiv
xlat
popf
iret
test
mov
mov
iret
add
enter
cmc
in
in
mov
sub
lds
js
outsb
pusha
sub
and
push
mov
shlb
jnp
test
and
in
sbbb
int
int3
pop
sbb
cmpsb
push
rcll
scas
sti
jp
movsl
ss
mov
mov
xor
push
cmp
pop
jle
iret
pop
test
xor
shrb
push
xchg
sub
xchg
xchg
dec
and
inc
mov
mov
pushf
and
mov
cs
inc
notl
inc
stos
outsl
les
cmp
nop
movsb
aaa
push
push
xchg
and
fstpt
jb
insb
sti
dec
cmp
stc
in
or
inc
pushf
ja
int
cmpsl
mov
push
xchg
mov
inc
imul
mov
adc
pop
xchg
or
out
outsb
sub
sub
pop
mov
inc
test
not
xchg
js
jbe
pop
adc
pusha
jnp
push
loop
aaa
xchg
call
inc
mov
xchg
repnz
cmp
inc
iret
push
mov
and
add
mov
scas
je
loope
aam
insb
push
push
lret
sbb
mov
mov
sbb
pop
mov
jp
xchg
push
jb
adc
mov
cmp
in
dec
and
ja
sbb
push
xor
cmpsb
fnsave
mov
dec
in
mov
push
rorb
add
mov
fucom
fs
inc
int3
iret
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
jmp
cli
push
test
adc
and
stos
add
sbb
sbb
mov
push
popa
pushf
out
ret
inc
imulb
jbe,pt
scas
cltd
inc
xorl
fiadds
mov
push
cmp
mov
mov
push
aas
push
aad
cmp
call
ljmp
in
cmpsl
outsb
stos
mov
or
out
cld
out
sahf
jbe
mov
xchg
dec
mov
cmpsb
dec
xchg
inc
insl
add
inc
gs
mov
scas
aaa
add
divl
cmpsl
pop
mov
inc
popa
aad
sbb
dec
cltd
imul
enter
jl
ljmp
outsb
in
xchg
pop
push
adc
push
out
or
dec
jbe
and
icebp
mov
sub
add
fadds
lods
jno
push
insl
daa
mov
sti
add
xchg
mov
lcall
lret
outsl
jmp
mov
xorb
or
and
dec
xor
ffree
shlb
inc
imul
das
cmp
mov
testb
push
cmc
out
add
pop
out
inc
lods
shrl
clc
fbld
pop
pop
clc
outsb
in
xor
push
inc
sbb
mov
sbb
rcll
fiadds
mov
lret
jae
mov
inc
movsb
fsubs
push
mov
in
inc
gs
cltd
es
fdivp
sbb
pop
test
ljmp
and
or
cltd
gs
pop
xchg
mov
pop
cmpl
aam
push
sarb
test
cmp
xchg
mov
xchg
ss
push
loope
loope
lahf
fs
and
clc
mov
pusha
data16
or
cs
iret
lea
arpl
es
int3
cmp
push
jmp
movsb
push
test
or
add
jnp
arpl
enter
lret
jo
pop
sbb
push
xchg
mov
mov
inc
cmpsb
add
cmc
xor
test
sti
jg
push
pushf
cmpsb
push
push
jg
cmp
push
je
pop
jbe
cmp
or
dec
mov
xorl
aaa
mov
mov
movsl
into
adc
lods
push
sub
mov
add
jp
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
push
push
push
pushl
call
mov
movzwl
push
call
test
jne
movl
xor
movl
jmp
subl
mov
cmpl
not
mov
jmp
not
mov
je
push
push
push
push
push
call
mov
add
movzwl
xor
adc
or
or
xor
cmpl
mov
mov
mov
mov
jmp
mov
movl
ja
push
push
call
add
or
or
mov
mov
sub
add
add
movl
movl
xor
or
sbb
mov
xor
or
adc
mov
orl
xor
xorl
imul
adcl
and
subl
sub
cmpl
movl
movl
movl
jmp
movl
jge
pushl
pushl
push
push
call
andl
add
mov
sbb
sub
and
xor
add
xor
movzbl
adc
xor
mov
add
movl
xor
add
mov
sub
and
movl
movl
sbb
movl
mov
movzwl
sbb
mov
sub
movzbl
or
mov
xorl
and
sbb
jmp
dec
test
and
ljmp
stos
inc
sbb
sbb
adc
sbb
into
add
ljmp
xor
mov
cmpsb
dec
leave
lods
clc
in
xchg
or
mov
push
cltd
cmp
add
push
mov
test
pop
insl
lret
aad
add
test
insb
mov
ljmp
cltd
pop
in
stos
add
mov
scas
xor
mov
ficoml
mov
push
out
out
inc
bound
cmp
test
scas
inc
lahf
lret
xchg
add
stos
test
jbe
ds
sbb
mov
push
pop
jge
sub
loop
adc
push
inc
adc
jg
inc
push
dec
cmp
and
mov
cmp
xor
fmulp
mov
movl
stc
stc
nop
rcr
mov
xchg
nop
jecxz
inc
push
push
faddl
push
gs
repnz
shrl
loop
fmuls
inc
adc
pushf
cmp
movsl
push
hlt
cwtl
daa
jg
sbb
mov
mov
movb
pcmpeqb
mov
shrb
daa
pusha
jb
inc
das
mov
int3
dec
dec
pop
dec
cmp
scas
sti
ljmp
push
stos
and
mov
outsl
push
pop
ljmp
shlb
sbb
ret
lahf
data16
gs
push
adc
int
push
or
xorb
pop
or
test
sbb
mov
or
pop
push
sub
scas
rol
ret
xchg
inc
adc
les
inc
mov
js
xor
xchg
mov
or
inc
or
xchg
and
xchg
fwait
cmp
je
sti
cmc
pop
cmc
add
xchg
cld
sbb
cmp
loop
push
sahf
aam
pop
or
lahf
sbb
loopne
cs
out
cmp
arpl
ljmp
cmp
inc
mov
jae
in
adc
nop
std
shl
inc
add
stos
pop
add
mov
fldt
dec
repnz
lods
push
test
and
jae
mov
lret
stos
ljmp
lock
in
jne
shrl
repnz
xchg
cmp
addr16
sub
lcall
and
or
insl
cmc
xchg
aad
pop
out
cmp
xsha256
cmpsb
xchg
pop
adc
push
add
mov
in
movsl
in
test
jg
les
sarl
mov
push
push
insl
nop
pushf
mov
nop
int3
push
xchg
mov
xchg
movsb
xchg
sub
mov
out
sbb
cmp
or
adc
push
jmp
out
or
mov
iret
adc
cmp
in
mov
cmp
push
jae
dec
add
out
lods
insl
jns
ret
ja
push
das
or
loopne
sub
push
scas
xchg
jg
push
arpl
dec
scas
sbb
pushf
cmp
jno
dec
pop
inc
int3
jge
mov
mov
jge
lret
mov
xor
lcall
lds
stos
xchg
jne
push
cmpsb
push
pushf
ss
jmp
in
xchg
test
push
push
dec
push
dec
cmp
cmpl
pusha
cltd
das
lret
add
mov
sbb
lea
fcoml
sub
xchg
mov
adcl
xor
sub
imul
movl
mov
movl
cmp
jne
movl
xor
xor
sbb
movl
movl
movl
pushl
mov
or
movl
cmpl
mov
notl
movl
movzwl
jmp
movl
jne
pushl
call
xor
add
mov
sub
orl
mov
mov
adc
movl
movl
movl
sbb
movl
mov
xor
xor
sub
sub
movl
sbb
movl
or
mov
cmpl
movl
mov
jmp
movl
jb
push
call
sbb
add
sbbl
addl
sub
xor
subl
add
mov
notl
imul
movl
or
xor
xor
adcl
pushl
cmpl
movl
mov
mov
jmp
mov
movl
jl
push
push
pushl
call
add
mov
xor
andl
sbb
and
xor
mov
add
push
pop
xor
subl
div
andl
mov
xorl
xor
or
xor
mov
or
sbb
mov
adcl
div
xor
xor
xor
adcl
pushl
sbb
mov
xorl
mov
orl
pushl
movl
add
pushl
imul
pushl
add
mov
adcl
mov
addl
xor
mov
div
and
subl
or
movl
pushl
orl
call
andl
dec
movl
jne
movl
mov
mov
and
mov
mov
andl
movl
adcl
mov
call
mov
mov
sub
xor
lea
subl
mov
add
lea
mov
or
mov
mov
cmpl
mov
mov
jmp
movl
jbe
pushl
push
push
call
sub
or
add
xor
dec
incl
cmpl
movl
movl
movl
jmp
movl
mov
ja
push
pushl
push
pushl
push
push
pushl
push
call
mov
xor
mov
adc
sub
add
adc
mov
sbb
mov
and
mov
cmpl
movl
movl
movl
movl
jmp
mov
mov
ja
push
push
push
push
call
sbb
sub
mov
mov
sub
add
xor
or
add
xor
and
mov
xor
cmpl
not
mov
movl
movl
jmp
mov
movl
je
pushl
pushl
pushl
push
call
neg
add
sbb
xor
movl
and
xor
add
shl
shr
or
mov
cmpl
movzwl
mov
movl
jmp
movl
movl
jae
pushl
push
push
call
movzwl
sub
mov
adc
mov
adc
mov
mov
sub
imul
inc
xorl
and
andl
mov
mov
mov
and
mov
movl
mov
mov
xor
mov
shrd
neg
shr
addl
mov
mov
jmp
push
lcall
fildll
jle
adc
sbb
adc
sbb
in
pop
loopne
fstpt
mov
dec
mov
add
pop
dec
add
call
int3
sti
jbe
cmp
ret
add
decl
jle
sub
daa
mov
add
das
mov
ficoml
mov
xchg
xchg
or
ficompl
mov
add
mov
adc
imul
add
xor
or
inc
test
aaa
or
adc
sahf
pop
mov
inc
xchg
and
mov
stos
add
mov
js
stos
pop
es
cli
pop
sbb
and
sub
sub
mov
cwtl
out
out
or
sub
add
mov
sahf
jp
and
leave
xor
push
lds
mov
int
push
and
cmc
or
push
xchg
pop
lret
or
loopne
adc
repnz
mov
data16
jns
add
adc
mov
xchg
stos
ja
push
adc
sub
mov
sbb
or
insl
shr
fidivs
adc
add
cmp
cmp
rcl
sbb
inc
pop
sub
scas
jno
mov
stos
cmc
pusha
xchg
sub
aas
scas
sub
jecxz
xchg
ljmp
les
sub
stc
movb
inc
and
add
mov
adc
cmp
in
or
push
orl
insb
xor
arpl
loopne
je
mov
lret
in
in
test
inc
inc
rorb
sub
jg
jns
xorl
mov
testb
adc
xchg
push
cmpsl
pop
mov
lcall
loopne
cmp
mov
xchg
lock
push
or
dec
out
mov
inc
jp
std
xor
pop
xchg
repnz
jns
mov
movsl
add
mov
sbb
in
add
sbb
pop
adc
or
outsl
aad
push
gs
notl
out
xor
mov
fwait
xor
scas
lods
inc
js
mov
and
mov
stc
adc
xchg
out
shrb
jns
repz
push
and
out
and
jge
xchg
addr16
aas
cmc
adc
js
mov
addr16
addl
lea
mov
inc
enter
loope
or
or
mov
lods
mov
adc
push
fmuls
mov
adc
in
add
nop
mov
jmp
fbld
cltd
cmpb
ljmp
pop
xor
mov
adc
in
add
ljmp
icebp
dec
lret
aas
push
lea
jb
lret
add
jns
ror
push
lea
cld
je
push
in
stos
or
inc
insb
push
and
sahf
call
ss
push
filds
int3
pop
enter
scas
add
mov
cli
addl
push
and
inc
fidivrs
aad
cmpsl
fidivl
push
insb
out
out
dec
js
aam
sbb
popf
pop
scas
test
sbb
outsb
xor
jge
data16
stos
repz
add
fstps
dec
fdivl
aas
bound
pop
insb
das
fsub
and
pop
imul
rorb
shlb
push
pushl
lea
negl
push
andl
shl
call
subl
lea
orl
push
subl
mov
mov
subl
lea
push
mov
orl
lea
mov
xorl
mov
adcl
jmp
imul
inc
push
xor
stos
inc
or
sbb
adc
sbb
inc
sub
sbb
mov
int
pop
or
lret
cmpsb
cmc
addr16
adc
lods
sbb
and
daa
daa
adc
pop
loop
jnp
pop
icebp
mov
sbb
cmp
add
or
aas
iret
mov
cmp
rclb
jno
mov
imul
in
and
jb
test
insl
fistl
xchg
inc
jge
cwtl
aas
test
imul
pop
mov
fbld
sti
push
jae
pop
shlb
dec
xor
ljmp
fldz
add
adc
dec
pusha
out
shufps
mov
gs
test
adc
out
in
addb
cmp
incl
add
les
cmp
movsb
shrl
out
jmp
mov
xor
out
jb
push
or
sbb
and
sbb
sub
add
stos
sbb
and
rcr
imul
fldl
mov
dec
inc
mov
xchg
cmp
test
fucomp
test
cli
cmpsb
pop
test
xor
sbb
andl
ljmp
xchg
imul
sub
cmpsl
lret
ja
lcall
dec
xchg
test
push
mov
test
ljmp
or
mov
xchg
xchg
ds
pop
jmp
roll
mov
jo,pt
repz
dec
dec
and
pop
mov
ret
mulb
mov
fldenv
lods
lahf
movsl
xchg
sbb
jo
adc
add
sbb
push
cmpsl
push
xchg
jl
out
out
jnp
sub
pop
dec
movsb
dec
std
fisubs
scas
dec
sub
sahf
fstpt
jge
mov
add
shll
pop
enter
imul
enter
mov
xor
cmp
or
test
lahf
mov
cmpsb
lock
mov
aam
fwait
mov
test
and
mov
test
fistpl
rcrb
mov
jbe,pt
inc
sub
xor
sub
xchg
dec
cld
adc
nop
push
cltd
mov
movsb
jecxz
lahf
jle
mov
call
cmc
int3
test
mov
arpl
movsl
dec
ja
adc
and
xchg
pop
cmp
add
add
jl
mov
mov
pop
adc
out
int3
dec
loopne
enter
test
es
jle
leave
aaa
mov
sub
in
xlat
fnsave
pusha
lock
frstor
mov
mov
pushf
nop
scas
mov
mov
inc
jbe
cld
into
adc
out
gs
push
cmp
leave
mov
push
push
popf
dec
and
lahf
xor
in
dec
add
ret
and
fwait
xchg
cld
xchg
sbb
add
data16
vmread
pop
popa
push
mov
hlt
cmc
ret
test
in
sub
xor
add
or
mov
dec
and
pop
push
in
js
lds
test
add
movsb
fnstsw
data16
adc
and
mov
cmc
push
push
adc
sub
sub
je
cmpl
and
mov
je
sbb
sub
addb
pushf
add
add
mov
push
in
xor
mov
push
sbb
adc
sbb
cmp
add
pop
or
xlat
inc
mov
out
out
loop
add
lret
push
loop
add
jne
mov
stos
add
mov
or
cld
cltd
in
push
push
shr
lods
rcrl
movsl
or
fidivs
inc
inc
stc
cmp
in
inc
sahf
or
pop
and
cmpsl
adc
test
arpl
enter
or
idiv
push
cmp
lret
jmp
xchg
call
sbb
loop
push
repnz
adc
icebp
jb
add
sbb
xchg
int
xchg
jbe
ds
lods
cmp
idiv
call
jmp
out
push
mov
loopne
xor
sub
movsl
fldpi
rclb
dec
daa
add
pop
and
add
ret
xor
pop
cmc
or
xor
psubsb
fcmovbe
fldcw
cmp
andl
adc
mov
sbbl
jecxz
mov
pop
je
enter
das
out
outsb
stos
repnz
xchg
dec
dec
rorl
xchg
aad
sub
add
divl
mov
jecxz
xor
mov
adc
mov
mov
inc
xor
add
dec
push
out
xchg
ret
pop
push
adc
enter
add
pop
mov
inc
int3
loop
pop
xchg
or
mov
inc
ficoml
lds
out
insl
jle
sub
into
dec
js
xor
xchg
mov
sub
mov
mov
push
mov
add
cmp
outsl
stc
push
adcb
push
ds
inc
std
or
mov
xlat
sub
cwtl
pop
or
xchg
popf
movsl
cld
aad
mov
mov
imul
lods
inc
inc
xchg
cs
ficoml
sarl
mov
pop
mov
movsb
mov
and
scas
and
fdivr
int
aad
sub
ja
enter
jecxz
xor
cltd
lret
lds
aam
xchg
pop
mov
add
cld
popa
push
xor
jae
mov
daa
ljmp
mov
in
push
xchg
loope
mov
inc
push
nop
inc
sahf
adc
aaa
cmpsl
test
addb
mov
les
rorb
cmc
int3
in
mov
outsl
jge
push
jg
movsl
or
pop
fnstenv
adc
movsb
ljmp
push
sbbb
and
push
pop
fwait
cmp
and
cld
lock
pop
into
xchg
xchg
dec
mov
add
test
ss
pop
xchg
add
scas
inc
inc
lret
data16
cmp
in
jmp
mov
int3
enter
lret
addr16
jl
and
gs
lea
xchg
lods
cmpl
fiaddl
icebp
mov
popa
inc
add
shl
and
jg
adc
ficoms
xchg
sub
cmp
add
test
dec
rorb
lahf
mov
hlt
or
das
in
imul
test
push
outsb
mov
jmp
push
mov
inc
and
movsl
jl
sub
mov
lea
dec
cwtl
mov
aam
dec
mov
int3
scas
test
push
shr
fcoms
push
push
call
xorl
push
xorl
push
adcl
pushl
call
mov
mov
and
mov
neg
mov
shr
shl
or
mov
xor
add
sub
or
mov
xor
mov
sbb
lea
mov
xor
lea
sub
mov
mov
sub
mov
sub
mov
mov
xor
lea
movzbl
and
xor
cmpl
movl
not
jmp
mov
movl
jbe
push
call
sbb
add
sbbl
subl
movzbl
sub
mov
movl
sub
movl
movl
subl
movl
cmpl
mov
mov
movl
jmp
mov
jbe
pushl
call
sub
mov
sbb
adc
and
adcl
sbb
xor
mov
mov
xor
mov
movzbl
and
mov
xor
mov
add
movl
adc
subl
xor
cmpl
mov
mov
mov
jmp
movl
je
push
push
push
push
call
inc
and
orl
orl
xor
and
mov
mov
xor
mov
adc
and
mov
adc
movl
adc
movl
cmpl
mov
mov
movl
jmp
mov
jne
pushl
push
call
xor
sbb
sbb
movzwl
or
movl
movl
add
movl
movl
movl
notl
mov
movl
mov
cmpl
notl
movl
jmp
not
jg
pushl
push
pushl
push
push
pushl
call
xor
mov
or
sub
adcl
subl
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
jmp
je
or
pop
pop
mov
cmp
inc
cld
push
sbb
adc
sbb
push
jmp
jmp
lret
pop
pop
inc
outsl
xor
sbb
testl
arpl
lds
dec
or
in
out
xchg
andb
jae
popf
fld1
xchg
lods
sub
mov
jecxz
sbb
or
pushf
and
pop
pusha
sahf
shr
dec
pop
sbb
loop
xchg
dec
dec
adc
ror
movsb
push
das
clc
sbb
push
jbe
inc
cmpsb
jb
dec
js
nop
xchg
push
daa
adc
mov
movsl
mov
movsb
out
mov
and
cmpsb
mov
mov
lcall
jbe
std
pop
fsubs
or
popa
loopne
mov
xchg
xchg
mov
or
mov
xchg
xchg
out
adc
test
call
xchg
and
cmpsb
stos
in
in
adc
js
addr16
mov
pop
sahf
lds
mov
and
mov
test
std
cmc
xchg
add
dec
dec
jecxz
jnp
add
jnp
jns
push
imul
cmpsb
in
jmp
jp
std
jo
fwait
jns
adc
sarl
cmpsl
aas
jp
dec
test
sub
jecxz
getsec
ret
mov
xchg
loope
mov
dec
and
enter
cld
scas
int
sbb
add
je
and
jmp
push
lahf
or
insb
xchg
add
and
outsl
das
cmp
add
dec
xchg
popa
bound
adc
push
cld
ja
jns
push
push
push
nop
push
loopne
insb
pusha
dec
jge
pop
or
pop
addr16
xchg
lcall
std
pop
xlat
inc
shlb
jp
out
push
mov
ja
push
in
stos
jp
xchg
push
jne
scas
xor
adc
sahf
rdtsc
mov
enter
movb
or
ds
dec
inc
xchg
imul
adc
dec
and
inc
cmpsl
pop
pop
int
ror
inc
sub
stos
cld
repz
dec
push
mov
mov
test
mov
dec
jmp
in
push
mov
xchg
mov
mov
pop
pop
jmp
inc
ds
in
lcall
sbb
lds
mov
ficomps
daa
rorb
sbb
sbbl
sti
lret
mov
pop
add
in
mov
in
or
jb
sbb
addr16
scas
adc
cli
cmp
in
leave
adc
xor
xor
cltd
pusha
out
mov
xor
push
ja
mov
adc
scas
mov
hlt
push
lods
aad
fmuls
popf
push
pop
ret
mov
shl
adc
dec
lds
inc
jae
mov
pusha
popa
int
aam
popf
and
xor
sub
inc
and
sbb
jae
or
push
pop
xor
ss
aaa
sti
mov
mov
jno
cmp
das
adc
es
insl
shrb
rorl
pop
mov
adc
or
fldenv
sub
std
fmuls
jne
mov
out
pusha
push
repz
add
imul
dec
test
and
scas
daa
or
repz
notb
das
sub
sbb
lret
lds
pop
fstp
movsb
mov
and
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
jmp
and
and
fdivrl
jl
notb
sbb
adc
sbb
mov
pop
sahf
add
stos
repz
mov
xor
test
cmp
jmp
fldt
pop
mov
adc
fdivrl
mov
rsm
clc
xchg
jnp
leave
sub
lcall
into
in
add
outsb
icebp
insl
pop
cmpsl
fisttpl
mov
add
inc
lret
push
push
xor
aas
dec
jg
mov
pop
stos
popl
xchg
pop
pop
hlt
mov
and
stc
jl
cmp
jae
mov
jmp
mov
xchg
cmp
out
xchg
in
dec
sub
dec
sbb
mov
fwait
aad
clc
push
push
inc
pop
addr16
inc
xor
dec
jle
or
cmc
inc
jge
mov
iret
aas
fmuls
adc
mov
push
jne
adc
rorb
ljmp
adc
and
cltd
call
daa
pop
in
dec
dec
mov
rcrl
cmpsb
xchg
popa
loop
xor
xchg
lcall
push
sbb
dec
sbb
fisubs
fcmovnb
and
iret
cltd
or
lods
mov
sub
das
negb
pop
mov
ret
roll
mov
stos
orl
xor
mov
xchg
int
ret
sub
mov
outsb
sbb
bound
sbb
mov
pop
stc
cld
inc
notb
add
jg
push
sbb
das
mov
stos
jno
movsl
pusha
lahf
sub
movsb
les
adc
fmul
out
icebp
nop
or
and
lock
std
popf
push
das
push
fsubrl
pop
stos
inc
je
add
call
or
ret
or
or
add
insl
nop
or
push
jp
js
jmp
xchg
mov
enter
mov
les
xor
gs
lock
xor
in
xchg
mov
adc
jbe
push
jge
fwait
xchg
push
jns
inc
fxch
leave
mov
jle
stos
stos
dec
stos
out
getsec
adc
cmp
or
mov
push
cmp
out
mov
sbb
arpl
enter
imul
movsb
push
jp
cmp
call
or
cli
test
fwait
cld
arpl
icebp
xor
sbb
pop
push
mov
sti
adc
icebp
rcrb
pop
sub
mov
pop
mov
xchg
lahf
add
jecxz
stc
shrl
hlt
subl
push
out
nop
sbb
nop
sbb
in
sub
jae
lds
xchg
push
hlt
xlat
cmp
daa
push
sub
inc
jl
and
aad
cmp
lods
out
inc
nop
dec
sbb
jl
fsub
negl
dec
into
clc
and
sub
pop
push
and
shrb
jo
sbb
inc
fistps
pop
mov
cmp
ficoml
adc
outsl
push
cmp
mov
jp
out
mov
mov
sbb
or
addr16
push
adc
push
shrb
pusha
shlb
pop
cmp
rcll
mov
clc
scas
pop
ss
daa
adc
cmpsb
cmpsl
movsl
mov
xchg
daa
lcall
lods
insl
jg
enter
pop
gs
sub
out
insb
and
push
push
add
hlt
movl
movl
movl
movl
movl
movl
movl
movl
mov
jmp
push
pop
xlat
jns
cmp
mov
std
adc
inc
out
push
sbb
adc
sbb
add
xchg
fpatan
imul
mov
aad
dec
leave
pop
push
stos
stos
mov
pop
cli
and
and
or
pop
xor
xchg
mov
pop
jbe
or
mov
bound
das
inc
mov
jb
jno
fs
cmp
and
movsl
mov
ljmp
mov
imul
pop
pop
jae
cmc
lea
clc
out
cmp
mov
shlb
cld
or
scas
outsb
push
jbe
mov
aaa
fistpl
or
rcrl
push
xchg
test
cmp
and
dec
inc
gs
loope
xchg
mov
inc
add
inc
dec
pop
inc
pushf
dec
push
leave
add
ss
jp
mov
mov
in
add
ss
dec
mov
int3
sarb
xchg
fbld
incl
cmpsl
sbb
sbb
test
inc
dec
add
jmp
cmp
out
jmp
aad
stos
testb
inc
push
stos
mov
mov
movsb
mov
mov
arpl
shrb
jno
rorb
xchg
xor
lds
popa
aad
cmpl
push
out
add
adc
mov
das
dec
fmul
das
shrb
popf
stos
in
shr
std
jne
pop
leave
stos
push
or
repz
shrb
jecxz
dec
pop
pop
das
jne
decb
or
outsb
cmp
movsb
pop
sub
sub
xchg
pop
pop
shlb
test
xchg
mov
hlt
ljmp
mov
fisubl
or
lods
adc
xchg
sbb
lea
sbb
mov
insb
in
subb
xchg
push
test
inc
cmp
cld
mov
repz
sub
lods
fidivrl
je
pop
lcall
outsb
cld
mov
inc
push
jns
movsl
out
inc
pushf
or
cmp
xchg
mov
cli
cwtl
mov
mov
cs
sti
out
popf
ret
scas
aad
mov
ror
cwtl
and
or
mov
pop
aad
sub
sbb
adc
sahf
pop
push
push
ds
out
in
push
pop
jae
xlat
test
sarb
in
jp
sub
std
frstor
sti
fdivl
nop
bound
mov
or
mov
push
xchg
out
js
les
inc
popf
cmp
push
dec
mov
sbb
mov
add
movsl
or
cmp
mov
mov
scas
sbb
mov
push
pusha
mov
pop
sbb
sub
push
sub
out
mov
cmp
mov
pop
adc
js
push
movsb
int3
lret
idiv
fcomps
scas
mov
ja
mov
popf
inc
in
imull
bound
jg
lds
mov
add
outsb
inc
das
pop
xchg
xchg
push
test
add
lds
stc
inc
scas
dec
sbb
sahf
adc
out
or
push
outsb
adc
pushf
dec
nop
imul
fldenv
mov
pop
adc
inc
cmp
xor
add
stc
mov
or
jb
adc
repz
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
xor
shld
shl
jmp
sub
lds
and
ds
jno
stos
int3
mov
mov
sbb
sbb
mov
pop
loope
sbb
jp
hlt
push
pop
ret
jno
movsb
and
cltd
scas
cmp
mov
and
jns
pop
xlat
fistps
jl
sbb
addr16
lds
xor
out
rcrb
out
std
mov
lahf
pop
mov
cmpsl
clc
xchg
test
stc
stc
fidivrs
inc
mov
xor
mov
icebp
test
test
jecxz
mov
xchg
xchg
push
out
negb
sbb
stc
xchg
push
pop
fs
mov
lods
pop
mov
jge
lahf
mov
push
ret
fs
cmp
cwtl
pushf
mov
add
add
or
xor
xchg
cmpsl
fmull
fnstsw
cmp
lea
push
xor
cwtl
lods
stc
mov
arpl
aaa
aaa
inc
mov
mov
repnz
inc
clc
dec
add
repz
nop
jle
in
mov
outsb
mov
pop
addb
sub
and
pop
mov
loopne
ret
out
imul
jl
jne
hlt
cltd
push
dec
sbb
sub
shrl
cmp
jns
mov
scas
or
jl
shrl
lret
xchg
jl
movsb
inc
jnp
ret
sti
and
das
push
into
pop
jmp
popa
sbb
add
push
cltd
mov
hlt
in
sub
out
fmul
sub
pop
insb
mov
pushf
call
stc
pop
testl
daa
mov
lea
cmpsb
sarl
rclw
push
xchg
mov
jg
jb
call
cmp
jnp
xchg
add
push
cmp
adc
jg
lods
fnstcw
into
adc
repnz
shrl
mov
adc
jecxz
daa
outsl
std
mov
adc
jo
mov
sbb
js
mov
insl
sbb
adc
cmc
cmp
xchg
adc
lock
mov
imull
sbb
pop
add
rcl
daa
sahf
push
xchg
insb
pop
dec
mov
add
rorl
ffree
fwait
cmp
cmp
mov
xor
xor
and
enter
sub
lahf
xchg
pop
inc
lock
std
test
inc
fisubrs
xor
pusha
movsb
lods
pop
jno
call
mov
aaa
lods
adc
outsl
inc
sub
sub
mov
xor
ljmp
add
push
movsb
inc
inc
sahf
je
mov
add
add
xor
add
imul
xor
in
rcrb
and
stos
mov
or
dec
imul
jg
leave
lret
or
pop
cmpsb
push
ret
sub
mov
bound
add
repnz
mov
insl
push
fadds
mov
pop
in
xchg
mov
dec
nop
mov
mov
rorb
inc
ffree
pop
adc
dec
ljmp
shrl
aaa
mov
cmp
dec
sbb
mov
mov
jge
mov
xor
mov
sbb
pop
mov
push
out
push
sbb
ljmp
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
xor
xor
shrd
shr
mov
mov
mov
shl
xor
or
xor
mov
mov
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
jmp
cs
and
push
mov
imul
fimuls
jg
subb
outsb
cld
imul
pushf
cld
mov
insl
and
xor
mov
xor
mov
xchg
pushf
inc
mov
pop
sbb
jmp
push
subb
loopne
fidivrs
adc
add
leave
sbb
mov
xor
int3
cmp
movsb
and
cmp
dec
data16
pushf
cmp
mov
push
jns
cmp
fidivl
fwait
loope
cmp
dec
cmpb
fildl
rorb
adc
mov
outsb
sbb
sub
jne
lcall
int3
or
or
sbb
xchg
hlt
and
mov
dec
mov
mov
sub
xor
addb
shrl
call
mov
sub
adc
dec
clc
and
arpl
xor
mov
jns
lret
icebp
mov
xor
ret
cmpsb
xchg
sar
fadds
setge
imul
pop
adc
jne
mov
aad
aaa
sub
pop
xchg
imul
cmpsl
leave
mov
xchg
frstor
test
and
jbe
mov
and
cmpsb
shrl
les
jg
loopne
pop
sahf
imul
cmpsl
fimuls
ss
stos
leave
adc
insl
xchg
jno
mov
inc
cmpsl
sub
adc
or
pop
int3
adc
xchg
fcmovb
mov
adc
test
mov
add
pop
dec
mov
out
ficompl
dec
in
ret
stc
xor
sti
lcall
mov
popa
jo
or
loope
and
int
add
neg
or
cs
cli
xor
or
jnp
xchg
and
add
push
cmpl
dec
mov
push
shrl
rcl
cmc
xchg
mov
subw
cmp
insb
faddp
clc
int3
popf
popf
mov
insb
sbb
test
sub
pop
xchg
mov
aas
lds
outsl
adc
loop
icebp
pop
jnp
mov
or
lods
xor
xor
pushl
push
mov
mov
mov
and
mov
aam
lods
adc
sbb
jecxz
push
xor
pop
xor
movsl
cmp
xchg
adc
in
jns
movsb
push
xchg
aaa
inc
shlb
jl
jg
sub
xchg
adc
pop
sar
loope
das
aaa
sar
jle
cmp
add
repz
aad
mov
out
rcrb
into
sbbl
jo
xchg
repz
cld
in
push
mov
cs
adc
out
ss
aad
or
fidivrl
mov
shl
xchg
push
pop
mov
mov
push
mov
jae
das
push
dec
sub
push
cli
aaa
jno
imul
pop
push
rcrb
adc
ret
mov
out
pop
add
mov
push
mov
scas
fdivl
int3
ja
mov
mov
jle
stos
mov
rcrl
sqrtps
push
jmp
mov
aaa
or
out
sub
mov
xchg
shrl
loopne
popa
xchg
loope
das
and
dec
sub
jle
add
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
jmp
cmp
cmp
pop
push
gs
sbb
sbb
jo
aas
fbld
inc
das
arpl
sub
imul
rcrb
shlb
jns
mov
sub
and
faddp
aam
inc
repz
les
or
dec
std
jo
jle
and
mov
mov
pop
jbe
lcall
push
push
scas
fadds
stc
push
movsl
repnz
mov
adc
int
pushf
add
xchg
popa
lds
push
iret
or
cmp
lds
adc
sbb
mov
push
mov
pop
mov
push
lret
or
imul
inc
cwtl
jns
shll
push
mov
fwait
shll
mov
in
adc
cli
call
outsl
pop
sbb
lret
rclb
mov
sbb
div
mov
mov
push
fidivrl
add
xchg
das
int3
push
and
or
mov
lahf
adc
out
xchg
ss
mov
or
pop
or
mov
sbb
pushf
adc
loopne
fidivrs
mov
pop
icebp
push
dec
lahf
add
addb
jb
pop
test
sbb
sub
aam
cmp
xorb
jnp
lret
fsub
dec
data16
enter
xor
jecxz
cmp
aas
cmp
loopne
das
lds
or
dec
push
shlb
ret
jge
nop
fidivl
loop
icebp
xchg
aad
push
or
pop
aad
in
push
sub
fimull
cmp
aam
movsl
add
cmp
jmp
sbb
call
add
jl
xchg
sbb
fistps
inc
insl
adc
mov
cs
cmp
or
arpl
sbb
enter
pop
push
call
out
popf
sub
shl
orl
mov
jp
fcomp
in
xor
push
add
add
out
lret
loop
jecxz
cmp
push
mov
lcall
int
pop
in
sarl
nop
push
xchg
repz
and
out
push
sub
or
push
jbe
mov
cld
push
fisttpl
mov
and
stc
lahf
or
cmc
aas
adc
or
sub
xchg
mov
das
sbb
insl
fadd
das
inc
in
cmp
repnz
loopne
and
rorl
mov
loopne
insl
lds
and
cmp
stos
gs
in
sti
add
cmpsb
pop
pop
jp
pop
cmp
dec
test
mov
sbb
lea
pop
fisttpll
int
cmp
mov
mov
ret
fstl
dec
movsl
and
inc
loope
dec
into
stc
fwait
sti
movsb
sti
add
lods
jmp
pusha
mov
mov
jp
xorl
ja
cmp
stc
hlt
repz
push
div
shr
push
lods
dec
xchg
nop
push
mov
mov
mov
enter
arpl
add
test
sub
mov
sub
and
xchg
pop
push
fcmovbe
add
aaa
fmul
push
cmp
cmp
cli
arpl
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
jmp
inc
inc
in
loop
cmp
pop
pop
or
pop
adc
jle
rcll
sbb
adc
sbb
inc
arpl
xchg
sbb
subl
out
pop
mov
pop
sub
push
sub
push
pop
mov
idiv
out
or
ss
out
aas
es
or
hlt
ss
and
sbb
lods
mov
adc
ret
sti
push
cmp
and
ret
push
cld
adc
rolb
scas
mov
xchg
dec
and
cmpl
mov
xchg
or
leave
add
adc
cli
jb
outsl
sub
nop
pop
jo
mov
outsl
jge
es
fsubs
xor
leave
mov
test
ret
push
addr16
je
cs
scas
outsb
test
hlt
pop
divl
lock
lock
js
and
mull
mov
push
sbb
dec
lcall
pusha
out
in
cwtl
shlb
add
xor
push
cmp
dec
ja
and
adc
jle
and
mov
and
aas
sub
dec
imull
out
and
in
push
sarb
loope
jb
adc
or
push
mov
cmp
lds
or
lret
adc
js
sbb
jg
xor
test
daa
xchg
in
lahf
and
inc
push
xchg
xor
mov
insl
scas
mov
out
and
add
lahf
sahf
mov
sub
xor
adc
aam
push
imul
mov
fwait
test
fs
adc
out
fisttps
scas
aam
xchg
ja
adc
dec
dec
repz
jl
xor
fcomp
stc
and
fwait
push
aad
cmp
pop
xor
loopne
inc
test
aam
adc
push
sti
dec
imul
mov
daa
lahf
inc
stos
mulb
jae
cmp
sbb
leave
std
stos
repnz
lcall
movsl
xchg
mov
lret
mov
addl
test
jo
repnz
bound
xor
dec
mov
xchg
fsub
outsl
mov
test
add
push
adc
mov
sbb
jno
ds
xchg
dec
push
or
jo
dec
xchg
or
pop
add
pop
mov
mov
jno
xchg
sahf
dec
std
fprem1
bound
out
pop
adc
call
into
in
js
mov
and
sub
xchg
push
push
mov
or
int3
ja
cwtl
in
adc
lods
jmp
dec
sub
xchg
push
rcrl
gs
mov
sbbb
outsl
repz
iret
sbb
stos
jne
outsl
xor
jb
test
xchg
cmc
mov
int3
mov
mov
sub
sbb
xchg
mov
mov
pop
sahf
movsb
out
dec
in
fdivrs
jno
cwtl
test
xchg
push
jo
scas
cli
jle
jge
push
je
test
sarb
push
pop
pop
out
push
xor
idivl
lea
xor
pop
outsb
pop
insb
into
jle
out
repz
push
stos
jg
lods
leave
inc
jle
sub
bound
jl
movsb
in
lret
jno
stos
fildll
xchg
sarl
or
es
pop
out
int
popf
popa
xchg
inc
inc
mov
aam
int
mov
imul
jbe
push
and
jmp
inc
mov
jb
jb
cmpsb
xchg
sbb
push
sbb
jl
int
sbb
adc
sbb
push
loopne
xlat
mov
sub
xorb
jge
scas
ljmp
adc
xchg
cmp
add
mov
and
jns
and
fyl2xp1
dec
dec
icebp
out
test
in
into
and
arpl
aad
shl
mov
rcr
outsb
push
mov
xchg
repz
pusha
pop
test
cmp
push
dec
lods
sti
repnz
or
adc
ret
adc
cmp
cld
mov
ss
loop
push
mov
test
orb
pop
add
test
inc
jns
decb
mov
lock
ja
sub
das
cmpsl
jecxz
rcl
pop
loopne
cltd
jne
sbb
pop
dec
mov
clc
jo
sbbl
shl
push
or
dec
int3
adc
push
icebp
jb
sbb
jmp
ret
into
cwtl
mov
rolb
inc
repnz
mov
inc
cmpsl
pop
jge
dec
mov
jle
test
adc
test
loope
movsb
or
mov
jno
sbb
gs
aas
xchg
jb
inc
mov
decl
pop
sub
mov
pop
inc
out
cli
adc
push
out
test
mov
xchg
sub
loopne
dec
leave
cmp
sbbb
adc
xchg
jmp
loope
fst
dec
sbb
adc
inc
mov
sub
xchg
iret
dec
cs
insl
push
addr16
mov
fcoml
add
sub
mov
mov
sbb
rcl
push
ja
sub
sbb
out
inc
popf
sarl
inc
push
out
leave
out
pop
push
cmovs
add
jno
mov
imul
xchg
cmc
mov
sub
lahf
xchg
cmp
pop
pop
or
inc
aas
mov
cmp
in
push
arpl
push
iret
push
dec
sub
mov
scas
xchg
xchg
rcll
pushf
xchg
loopne
outsl
cmpsb
pop
mov
push
xor
jns
cmp
cmp
shrb
rcrl
mov
jne
idivl
mov
ja
pop
and
add
push
outsl
sub
push
mov
lahf
negl
aad
int3
pinsrw
scas
cmpsb
sbb
inc
inc
sub
and
loop
rclb
xor
cli
imul
sub
mov
in
stc
jae
or
or
push
pop
jecxz
insl
jo
vandpd
sub
std
in
xorb
push
adc
pop
bound
dec
mov
and
mov
or
mov
ljmp
notl
fwait
fwait
cmpsb
cwtl
push
rol
mov
xor
cmp
int
scas
pop
ret
cmp
xor
sarl
adc
jle
dec
es
pop
int3
push
dec
loop
push
dec
cmpsl
cmp
cmp
test
jne
xchg
dec
ss
es
and
jo
sti
ds
dec
andl
out
push
jb
or
mov
push
loope
pop
stos
ret
loope
add
xchg
ret
push
pop
xchg
fcmove
dec
imul
leave
add
adc
ret
iret
pop
shl
xchg
int3
data16
push
and
or
int3
push
push
lods
test
lahf
out
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
jmp
xor
fistpll
popf
jo
sub
inc
lds
sbb
adc
sbb
mov
imul
cmp
jne
xchg
gs
inc
or
xchg
aas
mov
jg
mov
call
jb
imul
xchg
xlat
les
adc
out
jae
or
btc
shrl
sub
loope
lods
jne
pop
cmc
push
fldt
add
xchg
push
sbb
push
out
mov
arpl
sub
das
test
cmp
cmp
sahf
xchg
aad
cmpl
push
xlat
add
lahf
or
jns
rcll
in
std
or
xchg
iret
int
xchg
in
movsb
and
jo
mov
insl
sbb
into
inc
outsl
ss
aas
adc
inc
movsl
adc
pop
xorl
adc
pop
mov
push
push
mov
dec
popf
fwait
sbb
dec
pop
testb
subb
mov
gs
loopne
pop
mov
dec
mov
out
das
imul
sahf
inc
pop
cmp
fsub
sahf
arpl
scas
dec
or
xchg
aam
data16
adc
xor
or
sub
bnd
shl
sub
js
mov
aaa
xchg
stc
int3
enter
test
iret
pop
push
inc
addr16
cltd
jecxz
in
das
jle
ds
cs
in
test
sti
cld
adc
push
mov
jg
jae
jg
inc
mov
sub
lret
pop
xchg
cli
sbb
jo
xchg
or
jmp
xor
mov
xchg
xchg
and
mov
pop
andb
aam
pop
fiadds
into
cmp
push
jmp
hlt
inc
sbb
inc
push
pop
seto
out
hlt
jge
and
sbb
inc
pop
rclb
das
bound
cmp
mov
push
push
or
push
daa
jne
fcomps
jno
inc
gs
jl
insl
mov
dec
dec
and
adc
sbb
dec
insb
dec
pop
orb
lret
mov
shrl
adc
push
dec
xchg
fnsave
xchg
movsb
mov
loop
mov
lret
sbbl
testb
and
xchg
insb
int
jmp
adc
and
clc
notb
je
adc
xor
inc
and
inc
jns
inc
jbe
cli
inc
cs
jg
xlat
mov
cmpsb
insl
sbb
ret
mov
inc
jo
in
and
call
int
mov
sbb
jge
lret
mov
inc
clc
mov
sahf
hlt
xor
jbe
mov
sub
movsb
xchg
push
add
mov
je
xor
jno
sub
addr16
pushf
adc
mov
and
out
scas
inc
jecxz
xor
pop
shll
cmp
cmpsl
sbb
out
call
and
movsb
sbb
loop,pt
movsl
jmp
mov
stos
scas
test
lods
mov
mov
sbbl
fbstp
push
das
or
movsl
mov
fdivp
push
mov
dec
dec
movsl
dec
pop
add
sub
xchg
in
mov
je
and
je
and
out
pushf
decl
inc
and
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
jmp
jns
imul
pop
notl
mov
mov
sbb
clc
cmpxchg
inc
insb
xor
adc
dec
and
xchg
rolb
inc
mov
in
rcl
inc
test
imull
inc
fwait
cmp
test
cmp
mov
lcall
mov
push
dec
mov
and
mov
push
cli
cmp
mov
inc
inc
xorl
lret
gs
fadd
imul
ret
imul
push
adc
mov
pushf
push
mov
jle
aas
cmp
xchg
loopne
dec
ljmp
push
mov
xchg
sub
shll
mov
dec
inc
leave
lock
jno
xor
and
pop
fcompl
cmp
sbb
loope
mov
push
data16
xchg
dec
loope
inc
dec
jecxz
cmp
test
lock
push
and
inc
xchg
adcb
idivl
cli
sti
dec
mov
xchg
outsl
and
mov
mov
or
sbb
aaa
cmc
test
test
aas
and
test
insl
repz
pop
xchg
sub
aas
sub
and
sbb
cmp
xor
aaa
cli
xchg
sub
out
lret
outsb
push
int3
inc
ret
lods
cli
popf
push
xchg
pop
cwtl
das
or
adc
push
dec
fidivrs
aaa
jl
popl
mov
loopne
lret
add
adcl
lds
mov
pop
push
pop
shlb
add
clc
add
mov
mov
adc
movb
clc
outsl
ret
clc
xchg
fstl
add
cmpsb
test
push
clc
lods
je
stos
mov
jns
push
mov
mov
cwtl
mov
popa
add
sub
jo
addb
test
hlt
mov
es
pop
cmp
cld
ljmp
pop
cmc
add
int3
push
push
push
mov
cmpl
data16
call
fists
popl
pop
add
xor
pop
out
mov
sbb
or
mov
xor
jo
jmp
ljmp
cld
sbb
push
icebp
push
or
sub
or
gs
jo
test
icebp
jg
xor
imul
pop
dec
insb
movsl
add
cmpsl
mov
sbb
sbb
mov
rcr
adc
cltd
or
mov
gs
cmp
lea
int3
ret
push
andl
scas
fs
lea
add
xchg
out
mov
adc
pop
dec
out
pop
pop
jmp
sbb
lds
rcrb
pop
mov
push
in
push
jl
adc
popf
fcmove
int
mov
fidivrs
inc
dec
loopne
mov
hlt
sahf
pop
mov
fimull
bound
jne
or
leave
push
sbb
mov
fs
mov
pop
imul
or
data16
pop
add
fmul
sti
sbb
lods
and
sbb
fwait
inc
in
in
jmp
pop
pusha
and
mov
andb
in
pop
pshufw
lods
add
jl
loop
gs
sub
mov
inc
hlt
sub
loop
ds
xlat
in
xchg
call
notb
jle
push
enter
iret
arpl
adc
push
dec
jmp
xchg
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
jmp
ss
cs
push
sub
loop
adc
inc
mov
sbb
adc
sbb
pop
sub
stc
in
jle
in
out
nop
mov
jmp
and
xchg
cli
nop
cli
inc
nop/reserved
xor
cmp
pop
push
cmp
and
push
mov
lods
push
leave
mov
mov
push
jmp
sub
jb
fstl
addb
mov
mov
or
mov
adc
add
fcomps
lahf
mov
lea
lret
adc
push
loopne
xor
test
ja
lock
addb
dec
in
push
sub
pop
dec
pop
or
inc
jmp
idiv
arpl
push
adc
fmul
sub
mov
test
test
adc
and
scas
dec
mov
in
push
dec
inc
cld
mov
push
aaa
test
push
lods
add
pop
mov
into
jg
insl
std
mov
test
pop
jge
add
insb
add
lahf
push
stos
inc
dec
test
xor
xchg
leave
out
add
jno
xchg
push
stos
cmc
int
call
int
sahf
jns
adc
adc
das
adc
insb
or
xor
cld
sub
mov
sbb
pushf
test
sbb
aaa
out
mov
scas
out
and
stos
xchg
mov
std
xorb
cwtd
fmuls
out
xchg
fistpl
xchg
cld
imull
mov
daa
addr16
mov
mov
jmp
xlat
sbb
xor
pushf
mov
lods
or
add
and
push
jmp
aaa
push
in
sub
inc
or
iret
xor
dec
leave
inc
dec
and
inc
mov
mov
repz
rep
cld
int
add
xor
xchg
sub
std
roll
dec
dec
ja
cmpsl
adc
repnz
mov
and
lret
fimull
cmpb
dec
and
mov
cmp
mov
data16
bound
movsl
repnz
add
leave
js
arpl
fwait
inc
in
lret
xchg
xlat
pusha
mov
aaa
inc
bound
movsl
imul
xor
or
cwtl
mov
inc
leave
ret
mov
push
sarl
les
adc
pop
subl
out
int
xchg
mov
loope
mov
add
xor
pusha
sti
cwtl
mov
gs
rcl
sub
fsub
xchg
inc
sub
shl
ss
xchg
or
jecxz
mov
xchg
mov
jmp
scas
push
mov
loop
test
inc
inc
jbe
or
lahf
sbb
mov
mov
pop
mov
daa
add
mov
cs
and
div
nop
add
movsb
pop
pop
into
icebp
push
xor
sbb
xor
mov
or
in
push
or
mov
sbb
jb
pushf
dec
cld
xor
add
jge
jne
jmp
rcll
movsl
lods
inc
ret
adc
movsb
cmpsl
in
mov
and
mov
sahf
iret
int
mov
sub
lds
jnp
and
mov
dec
or
bound
sbb
imul
push
sbb
lock
insb
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
jmp
fistpll
jne
sbb
sarl
mov
sbb
adc
sbb
push
cltd
sub
into
call
clc
mov
pop
movsb
sbb
sub
cmp
or
and
mov
or
mov
push
inc
mov
mov
adc
add
es
or
dec
pushf
jae
rolb
scas
aam
cmp
aad
movsl
fsubrs
into
clc
sahf
in
push
dec
add
pop
into
ds
hlt
inc
outsl
popf
mov
xchg
mov
jno
mov
into
sbb
and
cmpsl
mov
out
orb
adc
xchg
jl
adc
int
adc
push
cld
pop
test
lret
jnp
shll
lmsw
test
or
stos
ret
leave
dec
mov
arpl
and
insl
push
mov
pusha
shlb
and
dec
xchg
xchg
push
xchg
mov
repnz
or
lahf
add
sbb
xchg
jmp
jle
or
adc
pop
cs
loopne
arpl
mov
jl
sti
jbe
add
mov
enter
repz
je
sbb
pop
call
je
test
dec
in
and
faddl
jg
jg
in
add
dec
inc
push
inc
xchg
jae
push
jle
add
testl
push
ljmp
callw
jge
xchg
cmp
xor
dec
sbb
pop
mov
mov
repnz
outsl
popa
adc
mov
aam
js
xchg
je
sahf
mov
xchg
dec
inc
sbb
not
push
jmp
insb
or
mov
icebp
fdivs
mov
add
loop
cmpsb
jle
movsb
aas
fcmovne
icebp
sub
lds
pop
pop
or
lret
mov
and
mov
ljmp
lock
daa
testl
sbb
test
bound
cmp
lods
mov
cmc
jecxz
aaa
arpl
xlat
add
ror
ret
lcall
push
jns
cwtl
dec
add
pop
adc
in
sbb
lds
outsl
fstpt
ror
test
jo
cmc
add
mov
and
mov
loopne
stos
inc
jecxz
and
xlat
lds
mov
cmpsl
arpl
mov
cli
sub
push
stos
mov
inc
xlat
stc
fisttpll
pop
jecxz
mov
xor
test
lods
scas
out
clc
adc
faddl
subb
cltd
leave
fadd
xchg
push
mov
mov
xchg
int
xor
lcall
lahf
or
shl
mov
pop
aaa
aaa
in
pop
pop
or
sbb
xor
ret
into
xor
in
inc
std
jno
movsb
jbe
insb
ret
popa
call
sub
mov
loope
lret
jne
xor
mov
testl
xchg
aad
dec
sahf
pop
imul
jge
lods
adc
jg
cmp
aaa
cmp
nop
inc
or
xor
sbb
inc
aaa
test
cmp
outsb
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
and
jmp
sub
push
test
sbb
lret
mov
and
sbb
mov
fisubrl
and
cmp
xorl
lods
call
pop
xchg
lds
movsb
mov
shrl
dec
pop
pusha
aam
scas
push
mov
jle
xor
mov
popf
lods
hlt
pop
mov
mov
dec
mov
jne
arpl
pop
mov
bswap
sti
rclb
inc
jecxz
push
dec
insb
imul
jbe
sbb
jecxz
mov
fisubs
xor
fucomp
mov
pop
and
mov
adc
mov
movl
dec
fbld
insl
jle
in
mov
sub
dec
jno
xor
lods
push
mov
nop
popa
or
je
push
inc
jne
idivl
adc
cltd
scas
push
notl
inc
and
pushf
bound
mov
push
adc
dec
gs
sbb
mov
or
stos
lret
sbb
nop
ljmp
inc
nop
pop
mov
push
mov
fstl
xchg
fwait
mov
inc
mov
or
es
out
test
xchg
out
fsubrs
lahf
push
sub
leave
stos
adc
in
lock
adc
or
ret
mov
ljmp
mov
incl
pop
imul
popa
mov
cmpsl
aaa
pop
and
pop
and
xchg
mov
mov
sbb
bound
dec
jo
data16
int
or
or
pop
mov
cwtl
mov
adc
out
adc
sub
push
lcall
test
adc
fsubrs
jg
or
mov
mov
pop
outsb
loop
xor
mov
rcl
adc
adc
mov
add
cmpsb
sbb
mov
mov
aad
push
fsts
cmp
iret
mov
push
loope
ret
xor
sbb
mov
popa
sub
ret
xor
cvtpi2ps
cli
int3
add
sub
fsts
shrl
jp
mov
mov
pop
push
cmp
add
xor
jecxz
dec
xlat
cli
xor
sbb
ja
xchg
or
mov
std
insl
pop
lcall
lea
sub
aam
aad
or
jg
clc
sub
jecxz
lret
push
cmp
mov
mov
dec
pop
or
push
aam
push
mov
iret
mull
ljmp
arpl
fisubrl
jle
mov
push
xchg
inc
pushf
dec
jae
xchg
xchg
push
out
fisttps
mov
rclb
cmp
andl
lcall
cld
or
and
cmp
into
cs
out
pop
pop
lods
sbb
pop
cmp
and
inc
add
dec
pop
sarb
xchg
jecxz
movb
test
inc
and
mov
xor
dec
mov
and
add
and
push
mov
inc
fld
subb
lret
pop
sti
push
and
xchg
rol
shll
pop
cmp
push
and
rorb
push
xchg
adc
jns
jmp
cmpsb
inc
xor
mov
ficomps
push
push
leavew
movsb
mov
xchg
shll
mov
cs
sbb
dec
push
neg
push
xor
add
mov
sub
or
movl
or
movl
sbbl
movl
add
mov
mov
movl
xor
div
imul
cmpl
mov
mov
movl
jmp
movl
je
pushl
push
push
push
push
pushl
pushl
call
negl
and
andl
not
sbb
adcl
mov
xor
movzbl
add
and
mov
subl
xor
sbbl
div
cmpl
mov
notl
mov
jmp
movl
jle
pushl
push
pushl
push
push
call
add
movl
xor
add
and
subl
add
sub
cmpl
mov
mov
mov
jmp
movl
je
pushl
push
call
adc
xor
sub
add
mov
mov
and
sub
mov
add
movl
movl
neg
movl
cmpl
not
mov
movl
mov
jmp
movl
jge
push
push
call
negl
mov
mov
sub
and
add
sbb
movzwl
adc
mov
and
add
xor
inc
xor
and
imul
mov
xor
add
adc
and
add
sub
incl
mov
movl
movl
movl
movl
cmpl
mov
movl
mov
jmp
mov
mov
jb
push
pushl
push
pushl
pushl
call
sub
orl
mov
mov
add
mov
mov
sub
or
mov
mov
adc
mov
mov
sub
sub
or
mov
imul
mov
cmpl
notl
mov
notl
mov
jmp
movl
ja
push
push
push
pushl
push
pushl
pushl
call
add
add
negl
mov
sbb
mov
sbb
xor
mov
sub
mov
movzbl
sub
imul
cmpl
not
notl
jmp
movl
not
jne
pushl
call
mov
mov
or
orl
subl
sbb
add
mov
and
mov
xor
imul
cmpl
movl
movl
jmp
movl
movl
jge
call
or
negl
mov
mov
sbb
orl
add
or
mov
and
or
movl
mov
addl
xor
andl
jmp
pop
push
testl
mov
fnstsw
mov
sbb
inc
sub
lds
xor
cmp
test
mov
mov
cmp
cs
mov
lret
call
arpl
fnstenv
test
push
push
push
or
pop
jbe
jo
jb
jb
xchg
add
or
jb
inc
lret
movsl
in
repnz
inc
xor
iret
pop
insb
push
mov
pop
addr16
movups
add
push
cmp
dec
jno
data16
fsubs
jl
mov
mov
lds
fcompl
pop
es
push
add
adc
jno
sbb
fadd
push
dec
lods
inc
jbe
and
sub
std
loope
jnp
repnz
stc
and
scas
lods
rorb
outsb
in
xchg
push
xchg
xchg
inc
sub
mov
je
ret
decb
or
adc
lods
push
lret
inc
outsl
clc
adc
cltd
jmp
xor
jae,pn
add
dec
cli
mov
mov
jno
repnz
lcall
dec
pop
jg
pop
ds
outsb
mov
lcall
insb
pop
mov
mov
sahf
xchg
mov
xchg
sbb
xchg
and
mov
lret
and
fcmovu
xchg
mov
jno
jecxz
jnp
shr
mov
jno
fnsave
mov
fs
jae
fldcw
sub
test
rorb
mov
roll
dec
imul
jb
xchg
imul
vpinsrw
push
imul
jo
mov
xor
push
jp
mov
push
loope
inc
jb
addl
cmpsb
lret
sbb
jo
dec
sahf
iret
push
xchg
out
push
and
jp
xchg
fldcw
scas
aas
xchg
subb
scas
es
and
stos
dec
lods
mov
inc
imul
cltd
sarl
pop
es
inc
test
sub
ss
jl
push
int3
xchg
out
xchg
jl
pusha
cli
int3
sbb
out
fidivrs
loopne
fs
sub
inc
inc
sbb
lods
xor
outsb
or
mov
lods
dec
mov
rcll
in
adc
push
out
ljmp
lods
inc
adc
dec
jno
fdiv
or
dec
push
loope
jmp
jle
es
aaa
out
das
or
ds
imulb
xchg
fsubrs
sahf
mov
mov
aam
cmpsb
hlt
nop
cltd
test
mov
xor
clc
loop
leave
repz
sbb
int3
cmc
adc
int3
outsb
test
sub
mov
xor
cmp
and
pusha
sub
inc
das
mov
fadd
sub
inc
lret
add
fnstcw
pop
lcall
sbb
mov
add
aam
and
mov
dec
ja
mov
pop
cmpsl
cmpsb
out
xor
outsb
jmp
lods
lock
inc
outsb
cmp
shrl
lret
daa
mov
mov
add
or
jp
pop
and
xchg
inc
fscale
dec
xor
sbb
and
imul
inc
testb
bound
ds
add
imul
pusha
dec
jge
mov
mov
andl
lea
mov
add
mov
mov
and
movl
subl
movl
movl
andl
mov
cmpl
mov
mov
jmp
movl
je
push
pushl
push
pushl
call
not
dec
sub
inc
adc
and
movzwl
sub
mov
xor
mov
or
xor
add
subl
mov
or
add
xor
xor
or
adc
mov
mov
mov
sub
sub
movl
movl
adc
movl
mov
cmpl
movl
mov
mov
movl
jmp
mov
jae
pushl
pushl
push
push
push
call
mov
add
add
adcl
decl
addl
sbb
orl
mov
or
add
cmpl
movl
movl
jmp
movl
jl
pushl
call
adcl
xor
xor
add
mov
adcl
sbb
movzwl
or
adc
xor
cmpl
movl
mov
jmp
movl
jae
push
pushl
call
xor
or
adc
mov
sub
movzwl
sub
mov
sbbl
addl
adc
mov
sub
xor
mov
lea
cmpl
mov
mov
jmp
movl
jg
pushl
push
pushl
call
xor
mov
or
mov
add
xor
add
add
and
or
dec
sub
not
mov
movl
movl
cmpl
mov
mov
jmp
mov
jl
pushl
pushl
push
call
add
or
or
and
mov
sbb
and
add
mov
and
add
sub
imul
mov
sbb
mov
imul
xor
mov
xor
mov
mov
div
andl
sub
movzbl
sub
mov
xor
movl
cmpl
movl
movl
mov
mov
jmp
movl
jne
pushl
push
push
push
push
call
xor
dec
add
xorl
add
subl
sub
movl
movl
cmpl
mov
mov
movl
movl
jmp
mov
movl
jle
pushl
push
push
call
add
xorl
or
movl
or
mov
cmpl
mov
mov
jmp
movl
movl
jbe
push
call
dec
add
movl
sbb
and
subl
mov
xor
sbbl
div
orl
imul
sub
add
or
mov
addl
xor
xor
mov
div
xor
movzbl
and
mov
cmpl
mov
mov
mov
jmp
movl
jne
push
call
orl
or
adc
andl
subl
subl
add
mov
mov
sub
and
movl
sbbl
movl
neg
movl
subl
mov
mov
sub
add
shr
sbb
sub
cmpl
movl
movl
movl
jmp
mov
jl
push
push
push
call
orl
xor
sub
addl
adcl
sbbl
mov
subl
imul
or
mov
and
adc
mov
subl
sub
movl
mov
cmpl
mov
movl
movzwl
jmp
movl
jle
pushl
push
push
call
and
or
mov
add
and
adc
movl
cmpl
movl
mov
jmp
mov
mov
jbe
pushl
pushl
push
call
mov
adc
sub
mov
and
mov
and
sub
movzbl
adc
movl
mov
sbb
or
mov
or
sub
sub
mov
movzwl
sbb
movl
movl
mov
mov
sub
or
movl
movl
inc
movl
movl
adc
movl
mov
and
mov
and
add
cmpl
movl
movl
mov
mov
jmp
movl
jbe
push
push
pushl
call
andl
mov
or
xorl
subl
add
dec
mov
add
movzwl
xor
mov
subl
sub
cmpl
mov
movl
mov
jmp
mov
mov
jae
push
push
push
pushl
call
movzbl
or
sbb
or
xor
sbb
or
xorl
movzwl
xor
mov
mov
imul
imul
and
mov
or
cmpl
mov
mov
not
jmp
movl
jl
push
push
pushl
push
call
or
mov
xor
mov
andl
or
mov
mov
and
mov
or
mov
add
xor
add
add
mov
mov
movl
lea
orl
push
xorl
call
adc
mov
adc
mov
sub
jmp
scas
dec
jb
pop
and
push
add
pop
fwait
push
sbb
adc
sbb
loop
jl
mov
das
in
sar
jp
mov
push
mov
fisubrl
test
and
dec
ljmp
adc
jge
mov
xchg
fldenv
cvtps2pi
sub
lcall
pop
sub
push
repnz
dec
and
dec
enter
dec
loope
jno
dec
outsb
inc
xor
movsl
jge
xchg
xchg
aas
out
sbb
fistpll
mov
mov
inc
push
xor
inc
pop
and
xor
jno
in
mov
je
adc
clc
jnp
xchg
imull
outsb
push
data16
adc
xor
das
movsl
pop
push
pop
cmp
push
mov
jne
and
mov
xor
hlt
pop
fcmove
xlat
push
icebp
push
rcrl
and
cmp
clc
push
mov
push
pusha
mov
sti
mov
and
repnz
push
ss
lods
push
inc
jl
cmp
lds
scas
out
scas
adc
test
arpl
sbb
dec
jns
pop
or
int3
cmp
add
fs
push
out
loopne
enter
mov
mov
jae
sub
inc
sub
out
lea
dec
ds
imul
jnp
cwtl
push
adc
and
outsb
adc
pop
or
jmp
jg
mov
lods
xor
cmc
fiadds
add
pop
fucomip
cmp
aas
into
pusha
popf
repnz
push
or
addr16
pop
enter
and
arpl
fs
push
aas
or
inc
lret
mov
mov
lds
cltd
cmp
pop
fnstsw
sub
nop
mov
lock
mov
addl
popf
adc
mov
add
lahf
and
or
mov
aad
add
sbb
adc
aas
or
mov
pushf
xchg
dec
mov
xor
loop
mov
decb
bound
cmpl
int
stos
imul
jecxz
or
mov
adcl
mov
daa
mov
ficoml
lock
inc
arpl
xchg
dec
int
jecxz
clc
mov
mov
dec
and
mov
push
cmp
and
int
arpl
das
cli
sbb
adc
ds
add
das
clc
in
lods
pop
ja
mov
fdivr
inc
add
stos
int
dec
jnp
cli
pop
call
mov
cmp
push
outsl
sub
or
add
outsl
lock
inc
cs
mov
call
jo
das
add
lret
push
sbb
das
and
subl
mov
lea
fs
pop
stos
jns
xchg
cwtl
cli
inc
pop
sub
sarl
xlat
push
cmp
je
lock
xor
lcall
scas
lods
cld
loop
xor
orl
cs
push
adc
or
mulb
xchg
mov
inc
sbb
jo
jne
dec
test
add
adc
jmp
mov
pop
stc
adc
dec
jb
loopne
insb
je
fcomip
ss
or
mov
jg
pusha
mov
xor
xor
and
add
add
movl
not
movl
jmp
movl
movl
jg
push
push
call
sub
add
xor
mov
and
or
add
sub
add
sbb
and
sub
xor
mov
andl
div
not
xor
add
mov
movl
dec
movl
movl
and
movl
cmpl
not
mov
jmp
movl
jae
push
call
not
orl
dec
sub
xor
movl
movl
mov
mov
sub
xor
movl
sbbl
movl
sub
movl
xorl
movl
movl
movl
mov
mov
cmpl
mov
not
not
jmp
movl
movl
jge
push
call
or
sub
xor
xor
add
add
add
and
mov
or
cmpl
mov
mov
jmp
movl
ja
pushl
push
pushl
pushl
pushl
push
push
call
mov
adc
mov
movzbl
xor
and
xor
or
xor
add
sub
xor
mov
mov
adc
mov
and
sbb
sub
sub
cmpl
movzwl
mov
jmp
mov
jg
push
call
mov
mov
sbb
adc
dec
sbbl
imul
mov
cmpl
movl
mov
mov
jmp
movl
jle
pushl
call
adc
mov
add
sub
addl
xor
add
sbb
mov
adc
lea
addl
mov
and
mov
adc
mov
mov
mov
xor
mov
xor
add
andl
mov
xor
lea
add
and
cmpl
movl
mov
movl
mov
jmp
movl
jge
push
push
call
and
or
xorl
add
mov
orl
sub
add
mov
movl
jmp
fidivrs
cli
sbb
dec
push
push
popf
jo
xchg
push
sbb
adc
sbb
push
xor
xchg
and
movsl
push
pop
add
je
fchs
test
dec
into
add
cmp
xchg
andl
mov
imul
jo
mov
jge
push
sbb
xchg
insb
ja
mov
jae
repnz
xor
mov
into
loope
and
ret
idivl
test
push
dec
mov
sbb
jo
dec
in
jne
or
jge
in
inc
jp
aam
push
loope
and
mov
push
mov
loop
inc
cmp
mov
mov
sbb
and
sub
pop
xchg
sbb
jecxz
mov
outsb
stos
pop
lcall
push
xchg
test
sti
arpl
popa
sbb
xchg
test
inc
imul
test
sub
cmp
pop
inc
mov
xor
jb
xlat
lock
mov
into
cmovno
push
enter
mov
insb
in
add
jno
int
push
xchg
mov
jmp
pop
add
test
sar
push
sbb
insl
neg
jle
rolb
pushl
sub
data16
iret
pop
xchg
pop
jl
fucomi
sbb
push
lret
pop
in
fcoml
ja
or
xchg
arpl
int3
insl
cmp
data16
inc
lds
or
xchg
mov
sbb
out
arpl
sub
ret
fldenv
lea
imul
lods
and
sbb
or
movsb
addb
addr16
loop
pop
daa
pop
popf
push
mov
ficoms
xchg
test
ja
pop
inc
ljmp
cld
pushf
add
int
sti
addr16
adc
pop
jae
lods
pop
pushf
movsb
iret
scas
fucom
mov
movb
jp
xchg
xor
mov
mov
and
hlt
dec
sub
arpl
xor
cwtl
jo
pushf
push
inc
push
adc
mov
inc
pop
lcall
xchg
enter
sub
xor
adc
pusha
scas
test
into
lcall
nop
call
sar
inc
inc
dec
push
scas
pop
mov
ljmp
mov
xchg
adc
xorl
ret
sub
mov
movsl
or
cmpsl
stc
push
jecxz
popa
out
fildll
add
popf
test
inc
add
data16
lret
or
clc
sbb
fiaddl
adc
in
xchg
in
jno
pop
xchg
outsl
sbb
jo
pop
ds
jno
dec
jne
cmp
popa
push
add
arpl
mov
xor
test
and
divl
mov
leave
cltd
negl
add
fstps
lret
xchg
dec
lret
iret
push
stc
mov
xchg
mov
outsl
stc
andl
out
ja
add
ret
loope
sbb
push
dec
mov
das
rcrl
fcomps
test
or
xchg
jle
ret
lcall
test
push
arpl
nop
scas
push
mov
jbe
add
insl
cli
mov
xor
lret
aaa
dec
dec
shll
call
test
jns
movl
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
movsb
add
sub
movsb
jp
int3
push
stos
das
push
xchg
mov
and
sbb
sub
push
fistpll
out
imul
lret
fisubrs
dec
enter
rcll
and
mov
inc
mov
sub
les
jle
fcoms
pop
add
loope
lock
or
out
ja
mov
cmp
rorl
xchg
outsb
aaa
loop
jae
dec
and
aas
xchg
test
stos
cltd
stos
sbb
imul
shlb
mov
cld
pop
xchg
mov
cmp
mov
cltd
es
js
in
out
loope
pop
shl
popa
outsl
mov
stos
jmp
out
dec
lret
data16
cwtl
test
pop
push
jmp
add
dec
or
and
aas
sub
sub
iret
pushf
mov
sub
outsl
cmc
jae
push
xor
inc
sbb
push
clc
dec
mov
jns
jg
pop
fs
inc
mov
ret
xor
inc
ja
cmpsl
pop
mov
fisubrl
push
or
dec
pop
lods
xor
shrb
and
jo
xchg
rcrl
fcmovb
xchg
outsb
insb
cmc
mov
push
pop
pushf
sbb
xchg
cld
inc
es
sti
or
or
or
js
dec
outsb
subb
jp
pop
sbb
ret
test
sbb
push
mov
or
cmp
mov
jb
lret
mov
out
stos
jnp
dec
add
or
aas
push
out
xor
bound
rorb
xchg
cmc
dec
outsl
stos
scas
dec
test
inc
jb
or
adc
or
lretw
or
mov
stos
pop
loop,pn
pop
mov
rorb
mov
mov
decb
jnp
leave
push
add
sbb
movb
loope
bound
mov
fnstcw
fcmovb
mov
push
jbe
sbb
sub
push
xor
cs
mov
lds
jbe
push
imul
or
sub
fcomps
sbb
ds
pop
stos
bound
mov
std
adc
int
test
addl
mov
mov
cmpb
lret
mov
inc
push
fmul
xchg
pop
icebp
mov
cld
imul
rorl
es
or
sub
mov
mov
bswap
xchg
std
fdivl
sbb
adc
jle
mov
aad
hlt
dec
xchg
sbb
call
imul
dec
into
idivl
cmp
jne
push
push
mov
xchg
jecxz
xchg
adc
mov
adc
int3
cmc
dec
fcompl
and
cli
mov
inc
jle
dec
lea
mov
push
idiv
ret
in
gs
and
int
xchg
pusha
nop
sbb
test
fcmovnu
aaa
ja
enter
inc
xchg
out
add
or
jns
in
mov
inc
cwtl
popf
out
mov
xchg
lock
stc
mov
icebp
ret
sbb
lret
pop
pop
inc
jb
lret
rorb
mov
imul
sub
jbe
inc
inc
sub
pop
rcr
adc
loop
pop
sub
sub
lcall
int3
jnp
xorl
fcomps
test
js
iret
js
mov
mov
and
push
dec
cmpl
ja
in
add
lea
sti
xor
jb
cmpsb
or
dec
push
jb
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
jmp
loopne
add
sbb
fcomps
xor
xchg
sbb
adc
sbb
lret
dec
cmp
ja
push
fsubrl
arpl
pop
jne
aas
mov
add
aad
leave
adc
lods
mov
pop
lds
sub
pop
dec
out
mov
jo
fadd
jo
imul
test
sti
orb
fcmovbe
jo
in
mov
out
sbb
mov
sbb
jmp
sbb
popf
cld
xchg
fiaddl
fildll
scas
mov
fs
sub
jp
jmp
loope
vshufpd
sub
es
cltd
shlb
mov
add
lret
xchg
fs
and
adc
cld
mov
or
xchg
movsl
rolb
inc
insl
mov
ret
adc
in
outsb
rorl
in
inc
divb
roll
cmp
insl
xor
dec
push
aaa
lds
mov
sub
not
movsl
int3
loope
or
outsb
iret
imul
sbb
sub
inc
clc
sbb
inc
cltd
mov
movsb
lea
jmp
out
loope
aas
push
pop
add
jns
aam
mov
ret
fsubs
loope
loop
mov
gs
add
cli
pop
cmp
jle
sbb
pop
mov
xchg
or
push
ljmp
adc
out
push
add
push
xlat
xchg
movsl
xor
sbb
sbb
inc
ret
cld
shlb
xor
inc
cmp
cmc
dec
adc
mov
cmp
data16
das
lods
aaa
out
icebp
test
or
inc
jl
das
loop
mov
cs
xchg
lds
nop
mov
cmp
repnz
mov
add
loopne
fst
sbb
pop
out
aaa
int3
aam
mov
jge
lret
int
cmp
dec
or
mov
cld
mov
jns
cmp
gs
addl
fiaddl
les
or
lods
es
shlb
addr16
out
xchg
fsubrs
inc
jle
loope
lock
push
cli
mov
decl
mov
xor
and
test
lret
dec
adc
mov
add
cwtl
scas
sub
idivl
pop
call
aam
add
push
sbb
push
adc
inc
xor
and
in
mov
dec
call
fidivl
out
into
pushf
mov
insb
aas
adc
clc
add
cmp
mov
fistps
inc
addl
jge
shl
into
mov
ja
xor
push
pop
cwtl
iret
cmp
mov
jge
aad
xor
ss
sbb
mov
and
xor
lahf
std
xchg
inc
notb
stos
lods
pop
dec
popa
test
mov
push
sahf
push
mov
inc
cmp
and
dec
xlat
dec
mov
mov
xor
inc
loopne
xor
ret
icebp
add
xor
ficomps
in
mov
leave
lds
and
pop
xchg
or
sbb
out
into
aaa
fst
sub
adc
out
sbb
mov
sbb
push
sar
hlt
imul
cmp
mov
subl
out
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
jmp
adc
pop
out
loop
loope
add
outsl
mov
jg
sbb
adc
sbb
cli
jne
xchg
adcl
popa
test
mov
mov
xlat
pop
adc
sub
mov
inc
mov
or
lds
lods
xchg
push
fwait
inc
pop
pop
mov
test
les
daa
rorb
lcall
cltd
and
xor
jp
lods
popa
mov
enter
in
inc
lock
es
jle
sahf
pop
rorb
sbb
addb
icebp
pop
mov
add
and
rcll
or
mov
mov
push
mov
jns
sahf
subb
sar
popa
imul
cmp
jmp
xchg
sbb
mov
fidivl
jge
out
call
pop
scas
cmc
imull
push
sub
scas
mov
sbb
arpl
lret
sbb
rcl
mov
nop
movsb
inc
loopne
jbe
mov
adc
movsb
cmp
out
dec
popa
mov
out
jl
ja
imul
ss
mov
and
sbb
lahf
adc
clc
adc
mov
xchg
pop
insb
or
mov
cmpsb
or
jge
sbb
jbe
mov
jg
subb
vmwrite
int
icebp
adc
test
inc
ret
das
rcrl
test
push
push
dec
and
aaa
roll
mov
inc
push
inc
xor
sub
and
mov
call
dec
push
adc
cs
mov
or
out
inc
lret
xor
jns
enter
mov
lahf
fs
or
and
popf
xor
std
and
pushf
punpcklbw
xchg
pop
lcall
leave
jecxz
aas
out
pop
cmp
sub
mov
pop
cs
push
jl
aad
lds
adc
hlt
xor
popf
outsl
into
lods
jmp
or
sarl
add
ret
xchg
or
aad
sub
les
or
pop
jg
sti
jle
push
stos
pop
imull
in
mov
ret
jbe
dec
aam
bswap
sahf
loop
sbb
cmp
enter
fisubrs
aam
adc
pop
repnz
movsb
out
xchg
push
call
sbb
fsubrl
nop
mov
loop
inc
orl
jecxz
loopne
sub
pop
jge
jecxz
sub
pop
in
lcall
jge
lods
aaa
inc
pop
imul
movsl
adc
or
aam
insl
jp
pop
mov
shrb
notl
jne
ja
mov
or
imul
sub
add
call
adc
xor
aam
pop
ljmpw
jmp
out
call
mov
cmp
insb
jae
or
dec
decl
bound
aaa
pushf
sub
out
out
int
iret
aad
dec
mov
insl
adc
cmpsb
ret
pop
repnz
pop
xchg
add
fbstp
aam
jp
repnz
push
mov
ja
clc
or
ret
push
arpl
push
mov
jne
xchg
sbb
cs
fbstp
add
sarb
jns
pop
test
xor
xchg
sub
cmc
hlt
popf
imul
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
jmp
mov
xor
sub
jmp
dec
cmp
sbb
adc
sbb
pop
outsb
xor
and
inc
sub
imul
es
xchg
aaa
stos
push
and
jmp
push
mov
mov
jle
mov
stos
xor
test
call
xchg
pop
mov
jne
pop
push
jle
lds
inc
sbb
fs
xchg
out
and
loopne
sti
lea
pop
lods
mov
jmp
adc
xor
insb
popf
sub
dec
mov
dec
inc
mov
aam
and
fwait
cmp
dec
fldt
fiadds
xor
pop
dec
es
outsb
ljmp
sarb
out
andl
pop
jecxz
adc
xchg
fistpl
fisubrs
mov
sub
xchg
jo
aad
repnz
add
inc
clc
cmp
jl
mov
or
out
imul
outsl
cmp
cs
lret
adc
sets
xchg
pop
pop
sbb
scas
nop
adc
jb
lret
mov
ljmp
or
fwait
mov
xchg
popf
lock
bound
lahf
faddl
fmul
push
sub
xor
push
push
mov
cmp
imul
or
lea
inc
and
cltd
pop
inc
mov
rorb
enter
mov
out
fdiv
pop
pop
repnz
push
jnp
lret
ljmp
inc
pop
cld
std
push
mov
and
mov
std
ljmp
andb
push
nop
loope
rolb
enter
xor
or
int
fsubl
xor
pop
imul
rcrl
test
xchg
jbe
hlt
or
push
push
and
js
or
clc
pop
rcr
add
or
add
fldcw
inc
and
xchg
imul
dec
pop
sub
cmpsb
pushf
out
mov
jae
ret
cmp
mov
stos
fisubrs
xor
leave
bound
icebp
sahf
out
sub
mov
sub
jb
xor
mov
loop
xchg
cmpsl
cli
xchg
xchg
loop
inc
cmp
pop
mov
lock
pop
dec
mov
and
fwait
sbb
pop
rolb
fwait
test
stos
mov
inc
je
and
mov
mov
hlt
es
popl
aam
loope
in
pop
loope
jae
dec
sub
loopne
sbb
jge
mov
mov
into
inc
sbb
sub
jecxz
cmp
lods
xchg
or
repnz
nop
jb
out
ds
jnp
jp
cwtl
imul
jmp
mov
test
notl
push
mov
or
leave
retw
aas
or
dec
out
xchg
arpl
jl
je
inc
add
cmpsb
sub
and
ficoml
jmp
inc
sahf
inc
sub
push
adc
fsubp
xchg
or
mov
and
cmp
in
dec
xor
inc
popf
sbb
fwait
loope
jp
push
ja
mov
sub
aam
and
add
gs
jno
pop
jp
jge
cli
adc
mov
mov
and
xor
push
dec
sub
sub
lcall
cmc
shlb
repz
push
test
cmp
pop
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
jmp
jb
adc
or
xor
shll
mov
push
sbb
adc
sbb
mov
pop
cmovle
or
sub
ffreep
cmp
and
cmpsb
mov
xchg
xor
icebp
sbb
jae
dec
test
cs
mov
ja
xchg
pop
adc
movsl
pop
idivb
pop
out
dec
mov
jb
js
out
cld
rcll
mov
or
cmpsl
pop
movd
getsec
daa
push
lcall
out
fs
inc
push
xchg
lods
scas
pop
mov
stos
mov
cmpsl
sbb
push
movsb
std
jnp
loopne
sub
test
stos
inc
sbb
xchg
pop
in
shll
lret
fidivs
jae
inc
out
mov
mov
test
rcrl
xchg
sbb
xor
jb
cmp
or
scas
and
es
pop
jg
insb
inc
mov
inc
adc
hlt
xchg
cwtl
push
gs
js
dec
scas
aas
pushw
push
inc
mov
cld
in
push
inc
es
out
sub
cs
or
imul
les
jns
nop
sbb
js
push
test
sbb
pop
popa
jns
push
ljmp
je
adc
jmp
mov
and
lcall
inc
push
outsl
pop
fs
ret
cltd
ds
stc
testl
jb
xor
adcl
mov
xor
in
addr16
adc
movb
fcmovu
and
sbb
stos
mov
sarb
nop
mov
mov
lea
jle
xor
push
addr16
test
int
pusha
jecxz
movb
sub
push
fsubr
js
sub
sub
adcb
flds
sub
icebp
mov
test
and
pop
adcl
adc
lds
in
lahf
adc
outsl
sbb
or
frstor
push
les
in
jecxz
stos
mov
xlat
adc
cmp
xchg
fisubrl
mov
mov
mov
sbb
out
aaa
dec
xchg
sar
adc
or
sbb
test
jl
dec
or
push
stos
jmp
add
jmp
cmp
jns
jle
in
mov
jge
or
mov
xlat
imull
inc
mov
popf
cli
mov
pusha
pop
lods
mov
jg
imul
aas
xchg
fistpll
dec
icebp
pop
inc
ljmp
subl
nop
sub
pusha
fisttps
insl
adc
pusha
rcrl
push
ja
je
push
add
xchg
push
js
adc
xor
fnstsw
add
pushf
leave
hlt
adc
aaa
pop
cmp
adc
das
daa
and
clc
scas
outsl
icebp
js
iret
add
das
mov
mov
sahf
jb
pop
mov
xchg
inc
je
inc
xor
cmp
repz
in
jno
or
pop
mov
pop
mov
push
adc
ret
gs
pop
in
inc
and
vmovups
cmp
cmp
push
push
lods
and
negb
xchg
iret
xchg
cmpsb
pop
test
icebp
int
imul
mov
mov
sar
pushl
add
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
jmp
add
jp
add
xchg
jl
imul
and
sbb
out
mov
mov
xlat
arpl
sbb
pop
fadds
add
or
xor
loop
lret
and
arpl
adc
aad
push
decl
xchg
xchg
lahf
sbb
pop
mov
and
cmp
out
push
sub
cmp
inc
mov
repnz
repz
call
sbb
lods
cmpsl
imul
cmp
stc
icebp
and
lods
ja
cld
icebp
adc
adc
cmc
lret
jae
or
sub
sub
rclb
mov
jge
popf
mov
sub
push
add
push
jnp
or
mov
mov
xor
cltd
sub
imul
pop
into
sub
stos
mov
cwtl
iret
es
push
push
xchg
inc
int3
ss
sbb
xor
int3
inc
push
int3
test
mov
sti
mov
test
in
loop
mov
or
jge
mov
aas
mov
imulb
jae
fs
es
mov
sahf
jecxz
sub
rolb
pushf
loope
outsb
inc
out
jb
pop
sahf
dec
xor
sbb
cld
imul
enter
mov
inc
insb
dec
fisubrl
or
sub
push
pop
and
dec
xchg
shr
add
sub
lock
mov
sbb
jb
ftst
jle
mov
daa
mov
and
cli
xor
push
pop
inc
fmul
leave
ljmpw
cmpsb
xchg
mov
mov
sbb
int
inc
dec
push
xchg
aam
mov
sub
stc
dec
imul
pop
dec
jns
dec
adc
stos
jae
jne
or
mov
add
jmp
cli
ret
idivb
and
andb
popa
push
adc
inc
roll
push
bound
inc
cmp
mov
aaa
leave
and
jle
out
jno
push
outsb
mov
adc
mov
sbb
mov
lcall
jns
sbb
lock
pop
out
out
mov
cli
adc
test
in
rcr
into
int
clc
scas
xchg
pop
push
sbb
loope
adc
pop
fcompl
movl
dec
out
inc
xchg
adc
xor
mov
mov
subb
ss
xchg
jle
mov
fcomi
and
ret
lds
add
add
leave
insb
fidivrs
rcl
ret
stos
aad
loope
setnp
pop
nop
and
hlt
cmp
lcall
dec
add
nop
in
mov
xor
fisttpll
jbe
in
lds
mov
sub
mov
aaa
in
fsubr
mov
push
mov
dec
ljmp
lcall
outsb
xchg
leave
xchg
test
or
xor
inc
stos
and
lahf
adc
add
jmp
pop
add
loop
cltd
push
xor
out
test
leave
subb
jae
popf
push
cmp
cmp
enter
dec
les
mov
lret
outsl
frstor
mov
mov
clc
fidivs
sti
inc
sub
fnstcw
fcmovne
and
rcr
pop
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
jmp
loopne
xchg
es
xchg
addb
and
sbb
mov
add
lahf
lea
das
xchg
jnp
inc
sub
rcll
sti
cmpsl
insb
pop
mov
sbb
shll
inc
adc
jnp
adc
adc
mov
ds
jecxz
ds
imul
push
imul
loope
sbb
outsb
or
and
call
push
lahf
jecxz
dec
jbe
cmp
pusha
adc
push
xor
and
fstl
into
loop
je
arpl
mov
popa
jmp
pushf
mov
js
out
xchg
stc
mov
sar
mov
inc
iret
xchg
pop
je
dec
dec
push
stos
insb
pop
push
mov
or
jns
es
cmp
pop
and
jne
aad
mov
lahf
sub
outsb
fwait
pavgw
pushf
pop
divb
icebp
aas
cmp
call
sti
inc
cli
mov
out
clc
pop
aaa
xor
jns
pop
lock
push
xchg
xchg
cmc
cltd
nop
pop
xchg
fxch
sbb
or
add
pop
jne
es
ret
ret
les
mov
sbb
movsl
test
cltd
stos
outsb
movzwl
push
lock
mov
pusha
pusha
loopne
ja
repz
dec
in
insb
fwait
inc
push
bnd
xchg
xchg
icebp
cmp
sub
sbb
out
cwtl
pop
in
adc
das
push
pop
and
and
add
testl
or
shlb
and
push
xchg
roll
loope
lret
push
lcall
mov
cmpsl
xchg
bnd
cmp
hlt
mov
out
and
dec
xor
sbb
xchg
ss
cwtl
sbb
jmp
sarb
xchg
mov
push
cmp
inc
or
aad
pop
adc
push
mov
sbb
lahf
loope
outsb
mov
pop
sbb
ds
pop
xor
outsb
cmp
push
dec
pusha
scas
int
sbb
loopne
jge
mov
movsb
pop
fisubl
ja
es
mov
mov
push
sub
sbbb
bound
sbb
cmpb
or
lea
mov
insl
popl
add
movsb
pop
mov
mov
xor
mov
repz
add
lods
jo
hlt
pop
pop
ret
pusha
pop
loope
xchg
or
sarb
or
pushf
push
jle
jg
hlt
test
sbb
pusha
lock
out
cmp
sahf
or
inc
fistpll
fdivr
mov
lcall
mov
inc
push
mov
push
push
mov
or
popf
iret
std
xor
pusha
mov
imul
jl
pop
sub
repnz
bound
out
pop
mov
lods
mov
sbb
test
push
mov
call
call
addr16
push
inc
add
xlat
rclb
pop
test
adc
or
movsl
notb
rcrb
outsb
ja
shrl
mov
push
pop
adc
xchg
and
movsb
push
addr16
and
loopne
xchg
and
adc
mov
sahf
arpl
mov
in
jg,pt
pop
mov
insb
jb
mov
push
shll
mov
notb
mov
dec
fstpt
filds
mov
lock
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
jmp
pop
scas
push
sub
push
ja
fstpt
sti
shll
adc
sbb
insl
jmp
gs
aad
cmp
inc
test
jmp
jg,pn
ss
dec
aaa
test
aam
iret
cmp
je
inc
loope
push
stc
jbe
xor
cmp
out
mov
xor
movb
xor
mov
shrl
inc
fbld
inc
xchg
adcb
jp
rcrb
out
xchg
ljmp
push
push
lret
aaa
or
xchg
jbe
out
outsb
stc
imulb
mov
mov
jno
mov
mov
test
loop
jp
xchg
lret
mov
mov
pushf
jo
aam
imul
sbb
jmp
lods
lcall
loope
jnp
push
ret
imul
decl
sbb
ret
les
mov
cmp
cli
jns
fisubs
loope
fcoml
sub
push
adc
imul
jbe
call
mov
movsb
push
rcll
push
push
mov
pop
and
repnz
adc
or
xchg
iret
sbbl
xor
xor
mov
or
pop
jl
or
cwtl
nop
lcall
test
mov
push
adc
ret
sub
adc
subl
lahf
dec
lcall
loop
inc
arpl
jmp
lock
jbe
add
push
jo
lock
or
xchg
insl
push
enter
mov
repnz
add
scas
cmpsb
test
outsl
sbb
or
loop
jno
ret
push
inc
movsl
push
inc
lahf
mov
xchg
addb
stos
lods
sbb
es
std
push
sub
inc
or
push
adc
imul
fnstsw
add
mov
and
jp
inc
mov
inc
cli
test
dec
pusha
stos
mov
movsb
cmc
xor
mov
aaa
or
sub
push
push
fstps
push
mov
shlb
mov
adc
fld1
outsl
xchg
int3
pop
pop
and
xor
in
fmull
inc
push
andl
push
loop
lcall
in
xlat
mulb
or
jecxz
ret
mov
sbb
jae
fimull
stos
xor
adc
and
ds
clc
or
hlt
stos
out
sahf
dec
or
leave
xor
pop
aam
xchg
cmc
loopne
iret
xchg
test
lret
cmpsb
popf
dec
jg
cmp
cltd
mov
cmpsb
and
imul
mov
sub
lds
cmp
lods
dec
dec
push
imul
movsl
pop
insl
movsl
sbb
xchg
movsl
in
adc
scas
js
xchg
das
cmp
jecxz
data16
rolb
mov
lock
mov
filds
cmp
fsts
addr16
fidivrl
enter
fsubs
and
lret
adc
xchg
dec
xor
and
sbb
mov
lretw
push
adc
xchg
sbbl
or
call
movsb
add
jge
jb
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
jmp
shrl
into
and
fwait
outsb
mov
push
int
mov
adc
sbb
fidivl
inc
test
in
jne
fistps
shr
lea
rcrb
mov
fwait
add
lahf
sti
jmp
mov
jge
nop
dec
xchg
dec
fs
outsb
sub
pop
jecxz
addr16
cmp
ss
leave
sbb
xchg
xchg
push
inc
lds
ret
lea
ss
mov
dec
jnp
scas
sbb
nop
mov
ss
or
mov
sbb
pop
or
sti
or
pusha
mov
cltd
in
add
pop
fistl
daa
leave
mov
mov
or
adc
jo
into
mov
addr16
xchg
test
cmp
movsl
or
iret
push
pop
jl
xlat
repnz
push
push
lret
or
insl
xchg
insb
sahf
movsb
inc
xchg
xor
pop
pop
inc
mov
fldcw
jnp
pop
imul
dec
pop
shll
dec
clc
push
xchg
mov
fcomip
sbb
inc
mov
dec
mov
loopne
pop
mov
sbb
cmp
cmp
cmp
cmp
ljmp
inc
push
inc
cmp
or
testb
aad
daa
adc
xor
push
imul
mov
dec
in
inc
mov
imul
cltd
dec
rcr
out
push
sbb
stc
enter
mov
rorl
add
sub
cmove
mov
and
scas
lea
ret
fcoml
lret
add
scas
dec
sbb
bnd
sub
test
bound
adc
adc
push
in
adcl
nop
xchg
outsb
jl
js
or
das
adc
ljmp
adc
dec
sarl
pop
out
cwtl
or
and
adc
mov
int
dec
sbbb
nop
xor
mov
dec
dec
adc
mov
aad
fs
mov
dec
popa
cs
inc
xlat
mov
inc
push
leave
cmp
rcrl
push
andl
lds
and
add
mov
enter
into
inc
dec
xchg
repz
lret
test
addb
ss
sbb
lods
pop
xor
sub
loop
xor
or
jmp
xor
cmc
sbb
loope
mov
js
pop
mov
fnsave
mov
mov
movsb
push
aaa
cmp
lock
add
cmpb
ja
dec
pop
dec
andl
jno
lea
mov
pop
push
stos
push
test
mov
jg
punpckhwd
cmp
cld
or
add
cmp
stos
sbb
jae
adc
and
add
scas
rcll
mov
adc
inc
ljmp
shll
sbb
mov
jns
add
loopne
jno
aaa
loopne
aas
imul
sub
mov
in
inc
jbe
ja
inc
ds
nop
lcall
scas
push
iret
push
jp
in
out
sbb
lods
cmc
mov
dec
lret
xchg
xor
sarl
daa
out
add
xchg
push
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
jmp
arpl
bound
aam
push
jle
pop
cmp
dec
push
sbb
adc
sbb
dec
aas
fstpt
mov
xor
mov
sbb
lahf
and
adc
rcrb
jmp
lds
push
sbb
clc
outsl
pop
cmp
dec
pop
lahf
dec
decl
pushf
inc
jg
xchg
sub
mov
enter
adc
adc
je
inc
pop
xchg
fstl
pop
les
repnz
in
mov
addr16
mov
outsl
stos
repnz
lret
aaa
mov
mov
stos
cmp
mov
mov
arpl
in
add
pusha
xor
out
loop
sub
movsl
xchg
jbe
gs
sub
ficoms
insb
stos
add
xchg
or
pop
pop
add
mov
xchg
ret
dec
push
dec
leave
jb
fstps
rorb
sbb
push
out
xor
or
popf
mov
in
jno
inc
push
xchg
imul
push
mov
lods
jmp
vpminub
call
mov
push
jbe
adc
orl
dec
sbbl
testl
jge
fwait
sti
xchg
popf
mov
dec
ss
pop
ja
ds
jbe
lahf
shlb
inc
outsl
int3
roll
test
jb
mov
aas
sbb
pop
insb
mov
cmovp
xor
sub
in
sbb
xor
sub
lods
shrb
pop
loop
jge
dec
dec
xor
adc
pushf
pop
fcoms
sbb
out
adc
popf
pop
xor
and
and
dec
jae
inc
lcall
data16
sub
outsl
or
mov
les
xor
stc
ds
loopne
mov
pop
out
jg
xchg
dec
les
push
sahf
ret
insl
mov
in
cmc
push
or
cmp
jge
add
fistpll
sar
pop
or
add
or
scas
mov
push
jbe
faddl
cmp
ret
push
jmp
sbb
mov
mov
rcrb
pop
subb
xor
aad
je
mov
push
pop
lcall
aas
push
cltd
xchg
xchg
mov
jmp
nop
cmpb
jnp
cmpsb
aad
popf
sub
sub
mov
lea
or
popf
sbb
popf
popa
pop
xchg
ret
popf
aaa
mov
sbb
adc
mov
inc
xor
clc
mov
mov
cmp
adc
sti
stos
or
pushf
movsl
jle
fists
aad
cli
cmp
mov
imull
cmc
sbb
and
xor
push
leave
pushf
inc
nop
movsl
sarl
rcll
loop
inc
jle
push
jmp
hlt
add
mov
stos
adc
sbb
xor
jg
fstps
movsl
movsl
inc
aad
mov
pop
stos
or
inc
movsl
and
gs
adc
inc
and
out
pushl
popf
xchg
mov
out
aad
xchg
repnz
xchg
aad
mov
adc
inc
movsb
orb
fldl
pop
xchg
cmp
jo
lock
or
pusha
insb
pop
cmp
jo
inc
mov
mov
mov
movl
jmp
int3
insb
fwait
jo
push
cmp
ret
lahf
jo
xchg
jae
roll
sbb
adc
sbb
sbb
push
shll
movsl
xchg
xor
add
xor
inc
xchg
cs
mov
jb
jecxz
adc
movl
fcmovnbe
ret
fs
in
dec
fcomps
xchg
scas
lea
rcll
pop
punpckhdq
lds
xor
faddp
jae
jae
dec
xor
pop
and
adc
mov
push
ret
sub
sti
lock
dec
sbb
dec
mov
lret
mov
ret
or
sub
dec
iret
inc
lahf
adc
cmp
test
sti
mov
jb
jae
push
mov
inc
lahf
inc
mov
popf
push
xor
adc
cmp
jb
and
push
fdivrl
inc
sbb
in
imul
shll
adcl
push
sbb
or
addr16
add
jge
mov
pop
stos
sub
dec
jp
in
cmp
and
popf
or
mov
xor
push
cwtl
xchg
adc
lret
inc
mov
outsb
add
adc
adc
and
fstpl
push
cwtl
jmp
ljmp
repnz
das
mov
in
jmp
imul
mov
cmp
sbb
rorl
out
inc
mov
into
add
jge
fldcw
fsub
outsb
dec
add
cmpsl
xchg
mov
dec
jmp
jl
mov
sahf
mov
dec
fwait
leave
mov
push
jnp
xor
mov
cmp
lret
sti
rolb
les
repz
push
das
cmpsb
pslld
mov
aaa
push
data16
xchg
mov
push
adc
pop
in
ds
lods
add
lret
dec
xchg
push
fs
mov
bsf
sbb
push
push
jne
clc
add
mov
mov
add
mov
jmp
lahf
jp
fbld
jl
push
rcll
adc
inc
in
and
mov
loop
fidivl
ja
aaa
mov
jge
mov
push
xor
mov
pusha
dec
sti
add
lcall
pop
test
adc
pop
jl
sbb
mov
icebp
push
dec
xchg
or
cmp
sub
int3
dec
or
int3
push
subl
mov
stos
roll
adc
cmp
dec
das
mov
nop
icebp
cld
cmpsb
int
mov
xchg
xchg
and
dec
push
aad
cmp
sbb
loopne
dec
pusha
insb
repz
push
daa
and
imulb
mov
dec
mov
jmp
ret
push
inc
sub
leave
xchg
xor
mov
cli
cmpb
jbe
inc
push
fadd
movsl
and
inc
cmp
fldt
lds
jge
cmpb
or
pop
sbb
or
add
orb
mov
daa
stc
lods
mov
hlt
lea
fimull
and
aam
xchg
popa
xor
push
dec
and
and
mov
and
add
xor
add
adc
ret
cli
push
adc
mov
push
testl
mov
stc
inc
inc
sub
sub
fisubrl
fstpl
pusha
dec
cli
inc
daa
les
movl
movl
movl
movl
jmp
jecxz
xchg
sbb
sbb
ret
movsl
mov
faddl
sbb
adc
sbb
lcall
test
cmc
xchg
out
ja
jmp
and
add
xchg
dec
sub
sub
mov
sahf
loopne
stos
lea
xor
icebp
xchg
hlt
outsb
enter
pop
ret
inc
aad
pop
mov
sahf
fisubrs
mov
cmpsl
mov
out
loopne
cli
jmp
or
or
dec
pop
mov
pop
mov
jno
sbb
push
sub
mov
xor
mov
sbb
sbb
jge
pop
ret
jns
rcrb
lcall
in
jp
adcl
jmp
loopne
in
mov
xchg
mov
and
sbb
dec
fimuls
mov
scas
xchg
and
push
lea
int3
ljmp
ror
cld
pop
addr16
push
stc
leave
pop
insl
push
jp
orb
loop
xor
inc
fcom
pop
pop
adcl
lret
imull
fisubl
outsb
out
sub
mov
mov
imul
popf
cs
fdivl
out
stos
pusha
cmp
stos
loop
pop
ret
test
loopne
cmp
out
das
sbb
mov
ret
out
cmp
out
add
adc
mov
into
sbb
jp
pmaddwd
mov
bound
lods
xchg
mov
hlt
sub
lds
out
inc
rorb
add
mov
push
fimull
mov
and
adc
or
lods
xor
aad
xchg
push
leave
or
insl
scas
sub
in
jnp
mov
push
cmp
jmp
pop
push
adc
testb
outsb
mov
mov
clc
xor
out
jns
push
mov
xchg
xor
std
pop
pop
in
pusha
sbb
cmpsb
insl
add
pop
icebp
push
jae
call
stc
imulb
mov
jp
jno
sbb
data16
aaa
mov
fimuls
es
push
mov
sbb
scas
leave
pushf
adc
mov
add
push
in
in
dec
mov
idivb
add
inc
xor
mov
and
out
scas
int
mov
fcomip
nop
outsb
outsl
gs
xlat
pushf
sbbl
mov
xchg
sarb
and
adc
jg
mov
and
hlt
mov
jl
cmp
adc
and
jge
add
push
sbb
xor
in
adc
push
jns
stos
stos
ret
arpl
mov
mov
or
aad
mov
inc
jp
mov
shl
jns
mov
and
cmpsb
lret
xchg
cli
fistpl
fs
jbe
cmc
fnstcw
dec
mov
xchg
sarl
mov
rolb
lret
jecxz
and
lea
das
sub
mov
sub
push
and
sub
mov
jg
and
xorl
cwtl
mov
aaa
inc
aaa
scas
xor
cli
sbb
inc
std
test
cmp
aaa
iret
mov
call
aad
mov
add
cld
decl
and
add
push
pop
div
mov
or
mov
xor
div
jmp
and
popa
into
pop
dec
and
mov
jo
cmp
sbb
adc
sbb
mov
xor
add
std
pusha
push
mov
loop
dec
in
inc
jp,pn
insb
je
jbe
and
dec
or
push
loop
push
loope
repnz
mov
icebp
shlb
es
push
rclb
and
xchg
xchg
faddl
lods
andl
addr16
mov
aam
lret
or
ja
mov
es
and
add
mov
and
sub
fcoml
inc
adc
imul
cmp
push
lods
imul
push
fiaddl
loope
ret
fdivp
fsubrl
sahf
les
jle
xor
ljmp
jl
dec
jp
mov
fwait
jb
out
jae
notl
rolb
xor
cmpsb
out
adc
test
add
mov
pushf
mov
cltd
scas
and
jb
xchg
popf
cwtl
insb
or
dec
push
or
xchg
jle
xchg
insl
push
aas
mov
lret
inc
test
cmpl
pop
sub
gs
jns
xchg
sub
rorb
je
xchg
sahf
lret
inc
pop
stc
pop
inc
pop
push
lods
pop
mov
cmp
add
leave
int
push
mov
mov
pop
fucomp
pop
es
sbb
push
movsb
inc
ja
sbb
mov
mov
ret
dec
out
sbb
in
fwait
aas
or
add
pop
popf
jns
sbb
or
int
rclb
mov
test
mov
mov
sahf
xor
je
or
fwait
jno
sbbb
pop
lods
fadds
push
xor
fwait
xchg
push
mov
movsb
adc
lahf
lock
lds
ljmp
imul
lock
xor
sti
mov
mov
inc
scas
fsqrt
cld
jbe
push
push
fstp
push
fisubs
data16
test
lahf
test
pop
cmp
xchg
xor
or
pop
sub
inc
insb
jle
pushf
stos
fistpll
add
test
xor
lea
out
cmpsl
lahf
adcl
test
xor
pop
and
push
jmp
sbb
mov
ljmp
fsubrs
call
xchg
cmp
or
iret
dec
jge
imul
mov
je
popa
push
imul
mov
or
test
mov
xor
and
addr16
ret
inc
jmp
mov
and
xor
ret
cmp
stc
test
inc
nop
das
sbb
adc
xor
xor
push
cmpsw
subb
sar
xchg
cli
and
sbb
or
scas
out
dec
inc
add
flds
jp
sbb
shlb
stc
mov
xchg
jbe
stos
bound
in
xor
add
mov
jae
popa
pop
scas
arpl
movsb
insl
leave
outsb
stc
iret
jmp
xchg
jg
cli
add
push
push
xor
dec
jge
pop
push
fildll
and
or
sbb
stos
sub
in
pusha
cmp
repnz
xlat
sbb
push
push
je
popf
loopne
cmp
or
shll
sbb
enter
push
sub
push
jge
add
add
mov
loopne
lea
incl
add
add
add
add
incl
add
jmp
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
jmp
add
mov
mov
pop
cmp
and
sbb
clc
inc
mov
jns
clc
hlt
mov
jl
cld
bound
call
sbb
jns
add
in
mov
and
fsubrs
inc
mov
mov
xchg
mov
int3
fwait
cmp
push
stc
loope,pt
mov
je
scas
mov
xchg
jno
or
xchg
sarl
into
sahf
in
bound
jge
aaa
call
dec
cmpsl
aas
jge
cmp
cmp
aam
test
push
pop
jns
pop
push
dec
add
ljmp
insl
mov
lcall
pop
mov
decl
xchg
dec
mov
leave
neg
in
push
in
pop
movsl
fs
jb
mov
iret
xchg
xchg
icebp
out
mov
ljmp
adc
imul
dec
cmp
xor
out
pop
test
lock
xorb
push
aas
test
lahf
sti
cmp
scas
movsb
xchg
pusha
inc
jmp
addr16
cld
icebp
decb
sub
push
daa
bound
mov
fisttpl
stos
mov
sub
bound
push
cmc
dec
dec
pop
inc
cmp
and
push
sbb
js
cmp
lret
cli
mov
mov
out
sbb
call
cmpl
test
iret
jnp
jns
out
aam
js
add
mov
add
add
inc
fdiv
and
inc
repnz
fmull
cmp
mov
ja
lds
out
adc
mov
xor
stos
pop
inc
lret
test
xchg
rcrl
lea
insl
xorb
movsb
or
add
movsl
add
sarb
inc
out
push
test
xor
adc
clc
xchg
out
mov
imul
test
test
lcall
pop
clc
rolb
lahf
xchg
push
test
pushf
cmp
loop
jnp
jle
push
mov
popf
xchg
aad
jl
mov
aaa
in
into
pop
movsb
xor
insl
mov
pop
out
sbb
sbb
jns
iret
arpl
out
push
xor
rolb
inc
jno
jl
aas
cwtl
jns
in
inc
lods
add
push
cwtl
jne
xchg
out
in
into
push
rcl
dec
sub
in
fstl
lret
pop
fiaddl
jecxz
loop
andb
shll
jno
xchg
hlt
sti
rorb
in
negl
dec
clc
pushf
sbb
ss
dec
push
mov
push
cltd
add
jb
jb
test
jns
movsb
ds
insb
dec
push
xor
jnp
cmp
in
xor
adc
aam
cmp
stos
sub
push
mov
pop
shll
loope
lret
xchg
sbb
aad
prefetch
mov
mov
add
mul
cs
xor
pop
rcrb
push
fdivl
int
dec
dec
enter
shll
and
or
imul
jmp
mov
or
sbb
jl
int3
ljmp
in
lcall
cmpsb
adc
pop
push
fs
popw
or
add
repnz
jns
mov
dec
lahf
lcall
fcoms
addl
orb
test
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
jmp
imull
mov
mov
cmc
push
jle
sub
sbb
adc
sbb
push
test
push
cld
ret
mov
fdivrl
push
lds
pusha
bound
lret
inc
aad
faddp
sbb
outsb
push
sbb
and
jmp
mov
mov
daa
shlb
jnp
lods
pop
clc
ljmp
cwtl
into
nop
jmp
inc
lcall
xchg
mov
add
ljmp
test
and
xchg
adc
shll
and
xor
arpl
imul
pop
mov
cwtl
ss
pop
cmpxchg
mov
mov
jle
shr
xor
outsl
lahf
xchg
leave
pop
ds
and
dec
add
fiaddl
std
cmp
and
jl
mov
cld
jp
or
inc
mov
add
fldl
pusha
imul
cli
clc
add
jne
and
and
aaa
sarl
jae
jnp
popf
gs
adc
push
sub
lcall
pop
pop
fimuls
loopne
loop
push
sbb
call
mov
mov
stos
xor
xor
inc
xchg
loope
push
sbb
push
cld
cmp
dec
aad
xchg
mov
pop
sbb
ret
pusha
or
stos
dec
mov
xchg
jae
xor
push
sub
pusha
mov
xor
push
repz
xchg
cmp
push
sbb
pop
xor
mov
sti
movsl
and
test
cltd
insl
mov
out
test
xchg
test
js
mull
jge
pop
pop
cmpsb
mov
popf
loop
push
mov
into
dec
stos
testl
gs
or
push
rolb
fwait
jns,pn
ljmp
add
xchg
jge
inc
ret
fs
fwait
xor
mov
sub
push
cmp
adc
inc
imul
xchg
fistpl
sub
xlat
nop
in
adc
mov
push
jo
sub
xchg
push
ja
roll
or
cmp
cmp
xor
and
dec
scas
rcr
mov
ret
insl
scas
rorl
je
xor
lcall
xchg
mov
lea
inc
adc
mov
cld
and
mov
insb
jb
and
xor
and
add
leave
shlb
cmp
stos
stos
mov
fcompl
xchg
std
shlb
lahf
xchg
jno
cmp
mov
or
out
sub
cwtl
mov
push
and
and
cmp
inc
aas
push
adc
ret
in
or
jge
sbb
push
push
push
insb
xchg
lret
fidivrl
cs
and
sub
mov
dec
push
mov
and
decb
fidivs
xchg
mov
sub
dec
shll
aad
xor
cmp
outsb
add
lds
pop
call
mov
dec
push
adc
inc
sub
jno
push
push
aas
add
fcmovnb
inc
xchg
cmp
adc
rorb
popf
ljmp
push
andnps
lods
call
lret
mov
xchg
xchg
shlb
lock
push
mov
pushf
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
jmp
jecxz
enter
sbb
cltd
mov
iret
jo
and
sbb
inc
stc
xor
lahf
test
mov
sub
addr16
and
outsl
mov
sub
mov
xchg
jp
stos
xlat
dec
inc
aas
into
cld
push
loopne
daa
aaa
lahf
xorb
cmpsb
jnp
test
push
inc
inc
in
sahf
xchg
sti
dec
cmp
shrl
pusha
jecxz
out
lahf
sub
sub
sub
rclb
adc
or
in
mov
mov
pop
push
loope
inc
das
push
jg
in
pusha
scas
lods
cmp
out
clc
cmpsb
adc
jb
scas
cwtl
mov
add
out
pop
ret
cs
mov
add
add
push
mov
sub
cmp
xorl
mov
mov
mull
pop
sarl
scas
movsb
sbb
xor
pop
xchg
dec
or
dec
cmp
pop
sub
sbb
jne
orl
movsb
mov
mov
jbe
fwait
push
jns
das
and
mov
push
lds
add
inc
xchg
ret
inc
movsl
out
loope
pop
scas
mov
fmulp
jbe
in
or
cmp
sub
xlat
mov
fs
push
and
inc
gs
xchg
jle
repnz
in
add
fiadds
xchg
dec
das
mov
xor
jl
xor
scas
movsb
sub
repz
xchg
and
push
popa
cmp
mov
xchg
out
or
sbb
jmp
aad
ret
inc
sar
xchg
sbbl
jns
push
mov
mov
inc
into
fadds
and
sbb
and
js
lods
lcall
push
aaa
iret
outsb
notb
and
loope
cmp
sub
leave
xor
dec
xchg
mov
jnp
dec
insb
sbb
xchg
xchg
pop
shr
and
jne
js
loope
push
cmp
js
dec
sbb
cwtl
aaa
ret
lods
jecxz
sbb
out
in
inc
fcmovnu
into
push
std
mov
adc
imul
mov
jge
mov
adc
stos
push
pop
mov
xor
cli
sbb
jno
into
addr16
or
jmp
mov
adc
jmp
pop
out
cmp
inc
out
mov
subb
shlb
mov
cmc
xchg
pop
jecxz
out
pop
sbbl
call
push
xchg
subl
push
fbld
testl
fcomps
lods
mov
out
jns
stc
or
jbe
sbb
pop
popf
sub
les
in
sub
into
or
addr16
aaa
sbb
adc
shlb
lods
pop
or
xchg
cmp
jmp
jge
cmpsl
mov
rcrl
cmp
mov
pop
ret
lods
or
js
push
cld
sub
dec
inc
pop
cmp
mov
pop
pop
std
sub
les
dec
mov
fbstp
cmpl
push
je
push
shll
mov
pop
sub
xchg
jbe
jns
lods
add
xor
cli
scas
push
sbb
mov
cld
mov
loopne
mov
mov
sahf
mov
loopne
ret
mov
jno
xor
test
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
jmp
push
mov
and
mov
xchg
jo
sbb
sbb
dec
pushf
jmp
test
push
jns
out
or
adc
imul
je
sbb
cli
mov
testb
push
fcoml
pusha
lcall
int3
loop
dec
popl
pop
mov
push
sbbb
int
iret
inc
in
mov
push
lret
cld
std
dec
out
sbb
xchg
ss
mov
andl
jne
cwtl
mov
xchg
sahf
inc
iret
out
jnp
ds
addb
mov
rcr
lock
lret
cmp
dec
out
xor
push
inc
aam
or
xor
xchg
js
add
push
in
mov
fildl
icebp
test
dec
sub
enter
aas
aaa
data16
outsb
or
sub
jge
adc
aam
xchg
add
bound
popa
in
xchg
lcall
lret
cltd
inc
ret
iret
movsl
ret
mov
aam
sbb
fldenv
pop
push
jecxz
inc
push
out
lcall
inc
and
in
xchg
dec
popf
mov
pushf
faddl
les
or
jo
mov
cli
adc
lret
es
jmp
xchg
scas
and
das
add
mov
jmp
xor
insb
cmp
aad
mov
fistl
xchg
movsb
mov
adc
push
loop
inc
jae
push
lret
hlt
xchg
push
mov
andl
lcall
or
cmp
or
movsl
and
sti
sub
je
out
rcrb
loopne
pop
cs
shlb
lcall
jns
sbb
jbe
out
jp
mov
mov
adc
mov
xlat
in
mov
test
lret
lods
es
and
cmovp
repz
aaa
sbb
lods
push
lods
icebp
jmp
mov
dec
fstps
fbld
xchg
and
mov
sbb
dec
lds
imul
lcall
data16
xor
xor
cltd
data16
mov
inc
mov
lahf
stc
popa
test
aaa
lret
and
lock
inc
into
push
cmp
scas
data16
aad
int
add
aas
test
in
stos
mov
xor
push
lock
pusha
jp
repnz
std
mov
add
inc
popf
shl
outsl
xchg
cmpsb
xor
loopne
cmc
xchg
adc
fwait
lret
fsub
int
xchg
rcrl
fisttps
outsl
rol
adcb
fmull
testl
or
push
adc
pushf
arpl
shlb
mov
sbb
insb
rcl
xchg
rcrl
pop
sbbb
xor
sub
lock
mov
inc
fnstenv
mov
sti
int
iret
xor
and
xchg
test
mov
inc
insb
and
adc
aad
es
sub
je
jnp
pushf
jb
aam
outsb
cmc
out
push
lods
pop
es
xchg
jnp
fwait
xchg
adcb
jo
movsb
fmuls
into
mov
dec
test
addr16
stos
movsl
jl
and
add
push
mov
adc
dec
mov
pop
mov
pop
push
shl
stos
mov
inc
arpl
jg
lea
push
les
and
xor
push
cld
push
fcmovnb
adcb
xchg
cmpsl
stos
adc
pop
push
inc
repnz
fwait
out
jns
xchg
ficoms
in
add
xor
sbb
decl
mov
decl
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
jmp
cmp
sub
pop
rcrl
mov
pop
push
sbb
adc
sbb
mov
xchg
repnz
sub
mov
add
gs
xor
insl
jb
push
mov
fisttpll
pop
imul
iret
iret
add
lahf
sub
ret
adc
sbb
out
add
push
mov
or
mov
daa
fstps
mov
mov
test
add
add
pop
sbb
cmc
lea
scas
cmp
pop
enter
sbb
repz
stos
lret
mov
lahf
aas
mov
loopne
mov
cmp
dec
iret
push
mov
adc
jle
dec
aas
rorl
xchg
xchg
jecxz
imul
or
cmp
mov
xor
cmp
cmp
jbe
pop
push
mov
mov
fwait
inc
xor
enter
cwtl
test
data16
jp
pop
sbb
mov
iret
in
nop
ret
mov
int3
mov
push
lea
mov
mov
adc
icebp
fsubrl
add
ret
xchg
loop
add
xchg
mov
test
inc
mov
jp
mov
cmp
mov
pop
stc
shrb
xor
negl
inc
sarb
je
sub
inc
jl
xlat
cltd
fldenv
insb
mov
push
popf
mov
iret
xlat
sub
pop
repz
mov
test
sbb
out
jecxz
jno
xchg
loope
xchg
mov
sbb
mov
sti
mov
mov
cmp
rcll
out
sub
jbe
in
rclb
fadds
jo
sbb
filds
cmpsl
jne
out
stos
imull
ret
push
clc
sub
jl
jbe
aaa
fnstsw
jb
pop
and
sbb
jae
pop
lock
dec
pop
lret
sbb
push
mov
cmp
rcll
adc
push
mov
pop
daa
cmp
cltd
lods
stos
or
ds
push
ds
add
mov
icebp
inc
pop
ljmp
fs
inc
cmp
dec
nop
sbb
cld
jmp
adc
push
cmpsb
mov
cmpsb
inc
xor
gs
mov
pushf
sarb
add
cmc
or
fdiv
inc
mov
stos
xchg
aaa
mov
sahf
mov
outsb
mov
xor
js
sub
fwait
aad
push
pusha
fsub
rcl
lds
popa
jmp
popa
out
cld
es
cmpsl
xchg
cmc
scas
mov
les
pop
sub
test
es
stos
sub
jmp
push
daa
xor
dec
addr16
inc
mov
jno
test
mov
int3
inc
push
idiv
jns
jnp
lea
mov
xlat
sub
xlat
sbb
in
dec
adc
test
xchg
xorb
loope
jae
outsl
or
das
cltd
sub
rdpmc
fsubrl
inc
add
pop
xchg
leave
xor
pushf
and
sarb
lret
bound
xor
out
shrl
cmpsb
popf
mov
lret
lods
pop
in
xchg
or
int
scas
jl
sub
pop
cmpsb
lea
stos
insb
lcall
pop
cmp
xchg
movsl
adcl
fdiv
add
cld
mov
inc
loopne
mov
xor
in
out
outsb
pop
es
xor
jbe
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
jmp
jp
inc
mov
mov
pop
push
popf
jo
mov
stos
and
push
sbb
adc
sbb
push
mov
dec
sahf
lods
enter
mov
push
push
bnd
inc
inc
ljmp
or
cmp
inc
sahf
insl
arpl
lret
sbb
fildl
xchg
push
push
fnstcw
stos
sbb
add
ljmp
fldl
push
xlat
dec
enter
mov
cmp
gs
int
push
mov
fdivrs
movsb
repnz
mov
in
sub
mov
inc
arpl
out
loope
or
stos
out
cmc
mov
push
shll
in
lahf
imul
icebp
add
mov
or
push
push
adc
xchg
jle
fsubr
mov
cmp
push
ffree
sbb
std
shrl
test
pop
mov
jmp
sbb
scas
jae
cmp
pop
cwtl
xchg
mov
es
mov
sbb
cmp
mov
pop
and
jae
rcll
inc
xchg
xor
mov
jge
test
lret
cmp
sub
je
jge
addr16
out
mov
pop
pop
sbb
mov
inc
ljmp
pop
lret
xor
mov
cmp
inc
cmp
xor
mov
xor
in
adc
lds
xchg
add
or
movsl
dec
xor
repz
jl
ret
or
push
mov
mov
and
jl
lret
enter
popa
sub
xor
cmpb
lock
add
shrl
imul
loopne
xchg
ret
popf
mov
cli
aas
sbb
cmp
aam
aas
pop
test
sbb
outsl
cmp
mov
ljmp
das
inc
scas
inc
inc
adc
fstl
pop
xor
adc
lods
mov
out
dec
dec
xlat
imul
jecxz
xchg
stos
inc
pop
pusha
sbb
jnp
mull
mov
xor
out
les
addl
insl
int3
dec
add
lea
fnstsw
xchg
outsb
lcall
rcll
jnp
pop
dec
adc
pop
imul
adc
daa
dec
push
or
mov
insl
pop
jae
jge
cmp
imul
cli
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
dec
push
mov
sub
push
mov
or
jne
sub
mov
mov
mov
mov
sbb
xor
cmpl
mov
mov
jmp
movl
jl
push
pushl
push
push
call
addl
xor
mov
add
sub
mov
adc
mov
mov
mov
sbb
div
dec
mov
not
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
sbbl
subl
movl
cmpl
movl
je
mov
mov
adc
add
mov
mov
pop
pop
pop
leave
ret
cmp
movl
jae
movl
cmp
movl
jae
subl
shld
movl
shl
ret
addl
mov
xorl
xor
and
shl
ret
xor
xor
ret
add
add
add
add
add
nop
add
add
add
mov
add
push
nop
add
or
add
and
add
faddl
add
add
add
add
clc
test
add
xchg
add
cld
test
add
add
dec
xchg
add
add
add
insb
outsl
outsl
add
add
addr16
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
add
insb
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
add
add
in
inc
add
add
jbe
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
cld
daa
inc
add
inc
add
push
mov
movsb
popf
movsb
jno
xchg
movsb
or
movsb
sbb
movsb
roll
adc
movsb
popf
movsb
jno
xchg
movsb
or
movsb
xor
movsb
mov
in
xchg
movsb
adc
movsb
popf
movsb
sbb
movsb
fwait
movsb
xchg
sub
cs
push
adc
movsb
fwait
movsb
add
movsb
sbb
movsb
shll
shrl
or
push
pop
outsb
adc
movsb
fwait
movsb
add
movsb
xor
movsb
andl
imull
dec
adc
movsb
fwait
movsb
jae
popf
movsb
sbb
movsb
fwait
movsb
andl
testl
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
pop
movsb
xchg
movsb
push
movsb
mov
inc
rorl
imulb
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
xchg
mov
mov
out
adc
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
andl
imul
push
into
adc
xchg
movsb
cmp
movsb
popf
movsb
jnp
xchg
movsb
fwait
movsb
xchg
movsb
shl
shr
lock
test
cs
push
push
adc
xchg
movsb
adc
movsb
cmp
movsb
fwait
movsb
lea
or
push
push
outsb
adc
xchg
movsb
add
insb
and
add
inc
add
sub
fs
add
inc
add
daa
inc
add
daa
inc
add
inc
add
add
daa
inc
add
es
add
push
movsb
scas
or
movsb
jl
inc
add
inc
add
inc
add
add
add
inc
add
es
add
es
add
inc
add
inc
out
in
inc
add
es
add
xchg
mov
add
inc
add
rcl
pop
xor
add
add
jno
cvtdq2ps
jbe
cmpsl
mov
xchg
test
es
add
fiadds
movsb
cmpsb
fiaddl
movsb
mov
fiaddl
movsb
mov
fiaddl
movsb
mov
push
movsb
mov
push
movsb
mov
push
movsb
out
fiaddl
movsb
decl
adc
pusha
and
add
sub
add
add
scas
lcall
das
dec
add
pop
and
add
inc
sbb
hlt
clc
sarb
sub
jle
add
add
add
add
lods
inc
add
push
movsb
jg
inc
movsb
push
movsb
inc
movsb
std
movsb
jmp
movsb
push
movsb
dec
movsb
std
movsb
jmp
movsb
push
movsb
jg
std
movsb
jmp
movsb
dec
movsb
inc
movsb
jne
pop
movsb
jnp
dec
movsb
fwait
movsb
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
shlb
rcll
into
xchg
dec
xor
sbb
push
je,pn
mov
imul
leave
daa
dec
out
pushf
mov
dec
xchg
lock
inc
or
js
popa
pop
jecxz
movb
cs
aas
inc
leave
testb
jl
xchg
inc
add
add
add
inc
add
es
add
fbld
add
add
je
gs
jo
jo
outsl
insb
je
jae
outsl
popa
add
add
add
add
inc
insl
jns
outsl
js
jns
jb
popa
je
jne
gs
jae
gs
add
add
add
add
inc
jne
jp
outsb
add
add
imul
insb
outsl
add
push
popa
arpl
imul
add
outsb
imul
add
add
add
add
insb
insb
gs
add
add
add
gs
data16
jae
outsb
fs
popa
insb
imul
js
imul
add
add
addr16
insl
ja
jns
popa
jns
outsb
popa
bound
insl
outsl
jb
add
add
je
dec
add
add
add
add
addl
add
loopne
add
mov
add
xchg
in
jno
iret
jbe
or
cwtl
int
std
pop
fsubrs
dec
xor
stc
inc
adc
dec
sbb
mov
jns
dec
sbb
xchg
cmp
in
jno
iret
jbe
or
int
std
pop
jns
pop
xor
stc
inc
icebp
das
int
mov
mov
jns
xchg
lret
rolb
jno
jbe
or
int
std
pop
fdivs
int
stc
inc
icebp
test
mov
int
mov
addl
rolb
jno
jbe
or
cwtl
int
std
pop
ret
cmp
xchg
stc
inc
adc
test
ret
xchg
aad
lds
iret
jbe
or
int
std
pop
pop
insb
cmp
stc
inc
icebp
push
int
mov
mov
jns
test
lcall
jbe
xorl
sbb
and
int
adc
mov
add
add
lods
clc
icebp
jo
jge
aad
clc
icebp
jo
adc
incl
jo
jo
jo
xor
cwtl
add
add
xchg
or
addb
jecxz
hlt
scas
rolb
sub
iret
pop
iret
push
out
int
adc
out
sub
or
rolb
subb
sub
cmc
sub
in
aad
add
mov
fcmovnbe
out
pushf
xchg
test
fs
mov
iret
int3
call
jno
imul
int
std
xor
movsl
das
pop
push
or
sub
xchg
iret
les
addb
add
addl
adc
inc
jns
fldlg2
es
or
add
mov
add
addl
jns
insl
and
push
add
test
push
add
push
mov
test
lret
addb
in
outsl
rcl
jge
outsl
xchg
addb
sahf
mov
jno
popa
mov
addb
push
jge
push
xchg
addb
jge
push
xchg
addb
rorb
jo
std
xor
movsl
inc
xor
or
addl
addl
int
popf
aam
shlb
or
xchg
aam
int
icebp
int
xchg
or
or
or
pushf
stos
sahf
popa
mov
mov
mov
roll
int
or
adc
int
mov
lods
xchg
lret
rorb
in
push
int
or
daa
addl
or
mov
gs
addl
xchg
or
addb
xor
int
mov
int
xor
xor
lea
das
add
addb
int
mov
cli
test
int
jge
xacquire
insl
insb
shrb
outsl
lods
xchg
inc
addl
lea
cli
test
mov
and
xchg
mov
dec
ja
pop
rcll
int
fidivl
jecxz
xchg
or
in
inc
add
test
jecxz
jecxz
movsl
pop
cmpsb
lods
addb
lods
mov
mov
addb
shll
test
add
leave
int
or
cmpb
movsl
jecxz
mov
in
in
addb
movsl
int
mov
rcll
leave
xor
pop
jbe
jnp
int
xor
movsl
int
cmp
inc
inc
add
jle
clc
or
std
das
pop
adc
cmp
or
add
mov
xor
les
int
sub
stc
xor
sbb
inc
int
inc
int
std
xor
xor
pusha
lret
arpl
test
xor
in
popf
adc
addb
shl
mov
and
mov
jbe
shrl
lods
or
stc
test
int
jne
pop
insl
shl
test
in
xchg
pop
insl
xchg
int
jge
les
xor
les
adc
addb
mov
shll
xor
ja
lret
je
pop
shl
mov
xchg
xor
int
das
mov
push
das
rcll
pop
mov
ja
int
pop
orb
jmp
mov
insl
iret
les
test
mov
xor
mov
insl
add
or
cwtl
int
mov
int
int
jns
mov
sub
add
cwtl
int
jns
test
add
mov
jns
xchg
cmp
add
add
inc
addl
leave
jbe
inc
and
or
int
stc
int
stc
pop
cwtl
lcall
ljmp
cmp
sarl
jbe
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
leave
jbe
dec
and
mov
and
sarb
jbe
or
sarb
ror
jbe
jo
addb
addb
stc
cmp
cmp
sarl
push
rorb
jbe
int
stc
int
stc
cmp
cmp
sarl
push
rorb
jbe
leave
jbe
arpl
lods
pop
addb
addb
add
iret
push
xchg
incl
add
add
lea
xchg
fcmove
jbe
dec
insb
addb
stc
cmp
sarl
cmp
shl
sub
or
int
stc
int
stc
add
cmc
cmpb
sarl
repnz
or
mov
sbb
addb
push
or
int
dec
or
int
mov
cmc
or
rolb
mov
in
or
push
addl
lea
or
pop
addl
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
mov
add
mov
jbe
int
xor
addb
int
adc
adc
add
int
mov
mov
int
xchg
rolb
bound
jno
cmp
push
push
add
add
cmpsl
aad
leave
push
pop
add
add
adc
add
mov
push
insb
add
add
iret
outsb
add
add
insl
leave
push
sub
add
push
cmpsl
aad
leave
push
xor
add
push
xor
cmp
add
mov
push
inc
add
add
iret
addr16
add
add
jbe
int
adc
mov
int
mov
add
addb
mov
leave
jbe
mov
cmp
leave
jbe
xlat
sbb
push
les
add
push
cmpsl
aad
leave
push
nop
add
add
xlat
inc
leave
push
aam
add
cmp
jge
push
faddl
add
mov
shll
add
xlat
sbb
push
pushf
add
add
cmpsl
aad
leave
push
movsb
add
add
xlat
inc
leave
push
lods
add
add
dec
push
jge
push
mov
add
mov
shll
add
ret
sbb
jo
jbe
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
lea
testb
int
mov
lds
psrlq
sub
mov
lea
insl
inc
shrl
or
addl
int
mov
rclb
addl
add
addb
jo
cwtl
xor
lea
addb
int
adc
mov
insl
iret
pop
pushf
add
add
jo
jbe
int
inc
addl
adc
pop
adc
mov
insl
iret
pop
les
add
mov
jo
jbe
int
inc
addl
mov
pop
adc
mov
insl
iret
pop
push
add
add
jo
jbe
int
inc
addl
pop
orb
xor
push
cmp
sahf
clc
add
shrb
pop
shlb
xchg
xor
int
pop
add
mov
adc
int
mov
pop
adc
mov
insl
iret
xchg
add
jo
jbe
int
cmp
push
add
in
test
or
add
pop
sub
sub
lea
ljmp
sarl
push
ror
pop
cmc
incl
add
jo
jbe
int
stc
int
mov
lds
lock
push
ror
pop
xchg
incl
add
jo
xchg
or
xchg
stc
cmp
jmp
shr
sub
inc
jge
mov
jbe
addl
cmp
sarl
repnz
xchg
or
int
cmp
int
mov
lea
sarl
push
roll
xchg
int
mov
lea
shl
sub
mov
lea
insl
inc
shrl
pop
push
incl
add
ljmp
lea
jge
xor
mov
jbe
jo
stc
jl
orb
jne
sbb
jbe
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
push
mov
jbe
int
stc
cmp
cmp
shl
sub
mov
lea
shrl
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
std
inc
shrl
add
int
stc
int
stc
cmp
cmp
sarl
push
shr
adc
lea
or
cltd
shr
xchg
shr
sub
xchg
int
std
inc
roll
or
int
jne
jbe
ret
dec
and
leave
jbe
inc
and
int
inc
cmp
cmp
sarl
push
rorl
jbe
int
inc
int
inc
cmp
cmp
sarl
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
lds
psrlq
sub
mov
lea
push
xchg
addb
cmp
jns
or
lods
sub
jmp
push
jge
jbe
xor
cmp
clc
add
jbe
int
sbb
lds
psrlq
sub
mov
lea
int
sbb
lds
psrlq
push
rorl
jbe
int
cmp
lds
psrlq
push
ror
lea
jbe
int
inc
int
inc
cmp
cmp
shl
sub
mov
lea
pusha
xchg
addb
or
jbe
or
xchg
or
pop
inc
and
leave
jbe
cmp
xchg
and
int
xchg
int
xchg
cmp
cmp
sarl
push
rorl
jbe
int
jmp
addl
add
and
push
xchg
add
add
and
insl
int
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
cmp
shl
sub
mov
lea
rcl
int
adc
or
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
jo
add
int
jo
add
cmp
cmp
ljmp
pop
lea
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
sarl
repnz
int
jge
rcl
int
pop
int
pop
cmp
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
xchg
add
add
pop
xchg
add
add
lds
cltd
sarl
push
rolb
test
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
xor
sub
mov
lea
xchg
pop
cmp
cltd
shr
xchg
shr
sub
das
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
pop
cmp
shl
sub
xchg
push
ror
lea
lea
xchg
push
ror
lea
sub
or
int
popf
int
popf
cmp
shl
sub
xchg
push
ror
lea
or
jmp
cmp
adc
xchg
in
sbb
jbe
int
popf
cmp
cmp
sarl
push
roll
push
int
popf
int
popf
cmp
sarl
repnz
int
lods
xor
jbe
int
popf
cmp
cmp
mov
xchg
push
das
rcl
inc
shrl
pop
adc
add
int
stc
int
stc
int
std
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
stc
int
stc
add
xor
shr
xchg
shr
sub
jno
jo
int
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
or
inc
jge
add
int
stc
in
int
or
push
cmpsb
lods
int
lods
shr
xchg
cmp
lods
sub
int
jne
dec
orl
mov
lea
or
cltd
shr
sub
jmp
push
adc
xchg
mov
jge
jbe
cmp
add
std
add
std
shr
sub
leave
int
std
int
std
shr
xchg
shr
sub
cmp
inc
rcl
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
int
or
int
xor
jbe
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
std
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
jne
jbe
int
mov
lea
shl
sub
mov
stc
or
leave
jbe
imul
imul
gs
into
and
addb
sarl
lds
jbe
rol
lods
xchg
or
int
cmp
lods
sub
lods
lret
int3
das
imul
lret
inc
rcl
jle
jbe
int
mov
jbe
int
mov
jns
or
lods
sub
jmp
push
jge
jbe
cmp
lods
sub
lods
cmp
xchg
jbe
add
std
add
std
shr
sub
lock
and
jbe
in
and
jbe
int
stc
cmp
cmp
sarl
push
ror
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
or
out
leave
jbe
mov
xchg
and
dec
mov
lods
imul
and
xor
jbe
int
lods
int
lods
cmp
jmp
cmp
adc
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jo
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lea
cmp
shr
xchg
shr
sub
jno
jo
int
mov
jbe
int
mov
or
jns
jmp
shrl
jbe
inc
jge
add
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
inc
lea
addb
and
add
mov
lea
add
lea
jmp
add
scas
or
aaa
sbb
add
addb
add
add
add
jno
cmp
add
add
lods
jno
lea
lea
shll
jno
mov
or
int
mov
lea
add
addl
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
add
int
rcl
insl
xchg
cmp
inc
leave
int
mov
lea
addb
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jne
jo
int
lods
or
int
cmp
cmp
or
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lods
add
int
std
or
int
jne
out
or
leave
jbe
inc
and
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
int
push
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
jns
or
jmp
shrl
lea
push
xchg
addb
xchg
int
inc
cmp
cmp
sarl
push
jge
jbe
xor
cmp
clc
add
jbe
int
lods
int
lods
cmp
or
jmp
shrl
lea
int
lods
int
lods
cmp
or
lods
sub
jmp
push
rorl
jbe
int
xchg
int
xchg
cmp
or
lods
sub
jmp
push
ror
lea
jbe
int
push
int
push
cmp
or
jmp
shrl
lea
pusha
xchg
addb
or
jbe
or
cmp
inc
and
leave
jbe
cmp
xchg
and
int
cmp
jns
or
lods
sub
jmp
push
rorl
jbe
int
jmp
addl
add
and
push
jl
add
mull
xchg
int
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
jns
jmp
shrl
lea
rcl
int
gs
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
mov
add
int
mov
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
lods
sub
or
jmp
push
ror
lea
rcl
int
insl
int
insl
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
jl
add
int
jl
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
and
or
jns
jmp
shrl
lea
xchg
insl
cmp
cmp
shl
sub
repz
push
adc
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
insl
cmp
jmp
cmp
lods
sub
int
or
lea
sub
int
cmp
xchg
push
rorl
jbe
int
popf
int
popf
cmp
jmp
cmp
lods
sub
int
popf
int
popf
cmp
shl
sub
aad
repz
push
adc
xchg
in
sbb
jbe
int
popf
cmp
or
lods
sub
jmp
push
roll
inc
int
popf
int
popf
cmp
lods
sub
or
jmp
push
ror
lea
popf
int
popf
cmp
aad
repz
shrl
xchg
inc
das
rcl
inc
shrl
pop
adc
add
int
mov
dec
iret
jbe
add
mov
jbe
int
xchg
addl
icebp
addl
jne
test
addb
stc
int
stc
cmp
cmp
shl
sub
mov
lea
rcl
push
int
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
stos
test
lret
rorb
add
and
int
int
sub
pop
subb
dec
addl
addb
das
add
int
or
das
add
add
int3
addb
addb
add
int
and
mov
or
xor
shrb
mov
mov
mov
das
add
iret
jl
pop
or
add
or
add
cmc
subb
xchg
das
mov
mov
mov
in
push
push
aam
int
add
stc
subb
xchg
mov
sahf
dec
xchg
aam
iret
ficoms
out
int
std
int
push
add
xchg
cmpsb
mov
and
das
mov
sahf
dec
add
add
std
mov
sbb
mov
mov
add
add
mov
pop
out
subb
jo
das
mov
adc
mov
pop
xchg
adc
or
arpl
insl
insb
in
xchg
cmp
lret
lds
sub
jbe
add
xor
fstpl
add
inc
pop
pushf
test
insl
insb
in
fmul
insb
faddl
and
jo
int
adc
fcompl
lea
std
inc
clc
jnp
or
std
or
fsub
inc
pushf
adc
xchg
mov
int
iret
push
ror
push
add
ds
mov
out
inc
stc
fdivs
int
dec
int
in
popf
inc
cld
ja
int
in
mov
out
or
adc
not
dec
int
stc
dec
or
sbbb
cmp
test
lret
rorb
add
push
pop
cwtl
pop
dec
and
leave
jbe
inc
and
int
std
lcall
psrlq
xchg
stos
cmp
shl
sub
or
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
leave
jbe
fadd
loope
int
std
int
std
cmp
cmp
shl
sub
jmp
push
or
cmpsb
dec
int
sub
push
das
add
int
std
int
std
cmp
cmp
shr
xchg
shl
sub
inc
adc
add
int
add
std
int
std
cmp
xchg
shl
sub
inc
adc
add
xchg
int
cmp
shl
xchg
shl
sub
or
inc
icebp
aam
int
std
int
std
cmp
cmp
ljmp
int
adc
adc
test
xor
jbe
int
std
cmp
cmp
ljmp
int
adc
adc
je
xor
add
int
std
int
std
int
std
int
std
cmp
cmp
in
xchg
push
popf
int
adc
adc
ror
jl
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
int
std
or
lea
cltd
cmp
shl
sub
repz
push
jecxz
lea
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
jbe
popa
and
or
in
int
dec
int
adc
xor
jbe
add
in
int
adc
dec
leave
jbe
popl
dec
pop
xchg
xchg
std
cmp
cmp
shr
xchg
shr
sub
or
inc
jge
pop
int
stc
int
stc
cmp
lock
sub
mov
lea
fnstcw
psrlq
sub
int
adc
xchg
push
jecxz
rcl
bound
jo
int
std
int
std
cmp
lock
push
roll
mov
and
jbe
int
popf
cmp
cmp
mov
push
jge
fldt
pop
xchg
add
add
jbe
int
std
cmp
lock
push
roll
mov
and
jbe
int
stc
cmp
lock
push
roll
addl
leave
jbe
fdivr
sbb
int
std
int
std
cmp
xchg
shrl
sbb
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
cmp
shrl
push
jge
jbe
inc
jge
xchg
test
jbe
int
sbb
jbe
int
std
cmp
lock
sub
mov
in
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
in
shr
sub
aam
int
in
int
dec
int
adc
lret
jno
mov
jo
in
push
int
cmc
xchg
int
dec
int
adc
xchg
jo
mov
jno
or
int
std
int
std
cmp
lock
sub
mov
cmc
inc
ror
jbe
int
stc
xor
jns
lock
push
roll
cmp
cmp
repnz
mov
cmc
das
rcl
int
lods
or
stc
cmp
lock
push
roll
int
std
cmp
cmp
repnz
mov
lea
push
or
add
int
adc
lea
insb
sarl
test
int
icebp
push
dec
and
add
int
std
int
std
cmp
lock
push
rcrl
mov
stc
int
stc
in
xchg
jbe
int
std
cmp
cmp
shl
sub
mov
arpl
rorb
add
xor
jbe
dec
and
inc
and
or
cwtl
int
int
std
int
std
sar
shll
xchg
cltd
shr
sub
mov
xchg
mov
das
add
int
mov
xchg
mov
xchg
cmc
leave
jbe
popa
and
int
stc
cmp
rcl
mov
xchg
std
int
std
cmp
cmp
shr
sub
repz
push
fxch
out
pop
xchg
leave
fsubrl
add
int
cmc
int
mov
or
mov
out
xor
pop
int
std
cmp
cmp
in
push
cld
or
add
int
std
int
std
cmp
cmp
shl
xchg
shr
sub
or
mov
xchg
out
cmp
cmp
shl
xchg
shr
sub
jmp
addb
std
add
cmp
sarl
push
cltd
iret
ja
jecxz
inc
cltd
das
add
addb
jo
or
mov
mov
das
addb
in
xchg
int
in
xchg
repz
mov
mov
adc
dec
and
or
int
in
cmp
add
call
repz
sarl
xchg
mov
xchg
in
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
in
int
movsl
addl
mov
push
xchg
add
add
stc
int
stc
cmp
add
call
mov
push
cltd
int
adc
out
inc
aam
in
sub
xchg
std
int
std
cmp
add
call
repz
sarl
cltd
int
test
das
push
test
add
arpl
jbe
cmp
int
lods
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
adc
xchg
addb
and
inc
and
int
std
cwtl
lcall
xor
xchg
mov
sub
or
int
std
int
std
cmp
mov
repnz
or
int
and
jbe
int
in
cmp
or
adc
dec
mov
cmc
int
cmc
cmp
or
adc
dec
lahf
xchg
lea
cmp
or
adc
imul
mov
lea
mov
jbe
dec
and
hlt
mov
insl
das
add
int
dec
push
insl
das
add
int
sbb
insl
das
add
int
and
jbe
int
mov
mov
addb
addl
cmp
mov
repnz
or
int
std
int
std
int
mov
lea
outsb
jo
lea
insl
das
add
leave
jbe
dec
and
int
xchg
pop
int
xchg
cmp
loop
mov
push
popf
or
int
std
int
sub
xor
bound
int
std
int
std
int
and
sbb
xchg
dec
inc
fst
push
cmc
int
adc
lods
int
cmc
cmp
add
call
jmp
shr
sub
int
dec
bound
xchg
jo
add
int
dec
int
xchg
int
jo
jge
xchg
jo
dec
xchg
int
xor
sbb
xchg
xchg
add
mov
or
pop
fs
das
mov
xor
jbe
int
std
int
std
cmp
add
shl
sub
mov
mov
and
jge
add
int
std
int
std
cmp
add
shl
sub
mov
jbe
int
stc
int
stc
add
cmp
repnz
mov
mov
pop
lea
addb
mov
lea
xchg
lea
or
jl
icebp
aam
clc
icebp
sub
xchg
in
xchg
int
jo
outsb
test
test
int
mov
lea
xchg
std
cmp
add
call
jmp
shr
sub
pop
lea
mov
popf
int
test
lds
add
sbb
stc
int
stc
cmp
shr
xchg
add
incl
push
adc
and
jbe
int
stc
int
stc
add
cmp
repnz
mov
lea
mov
pop
lea
add
int
and
sbb
cmp
lea
int
adc
lods
int
adc
sti
call
jmp
shr
sub
int
dec
bound
xchg
xchg
pop
add
push
insl
das
add
int
and
or
or
cmp
add
call
jmp
shrl
add
int
std
int
std
cmp
add
sarl
push
rorl
jbe
pop
push
jl
or
leave
jbe
sbb
shr
lahf
xchg
jbe
dec
and
xchg
iret
inc
shl
xchg
adc
scas
cmp
lea
add
cli
xchg
xchg
add
or
mov
jbe
or
iret
outsb
std
iret
jno
or
or
leave
push
jo
add
sub
pushf
add
add
pop
movsb
add
add
push
lods
add
add
xchg
add
sbb
les
add
popa
lahf
xchg
add
sbb
aam
add
call
iret
faddl
add
leave
push
in
add
mov
add
jbe
and
or
jbe
inc
lahf
xchg
jbe
pusha
lahf
xchg
and
int3
push
jo
add
shr
xchg
add
scas
or
test
add
sbb
addl
add
int
adc
inc
add
add
add
or
iret
jbe
jo
or
push
int
jge
icebp
int
std
int
std
cmp
add
sarl
push
rorl
jbe
int
std
int
std
cmp
add
call
lods
sub
jmp
push
jge
jbe
inc
rcl
xchg
or
in
das
int
int
jne
jbe
int
mov
int
sbb
mov
addl
addl
int
sub
xchg
dec
int
cmp
xor
jo
int
stc
int
stc
cmp
add
sarl
push
rorl
jbe
int
and
pop
mov
push
insl
das
add
add
and
lock
mov
push
insl
das
add
int
and
lock
mov
push
insl
das
add
lcall
push
insl
das
add
int
and
sbb
sbb
or
addl
int
dec
add
and
or
or
cmp
add
call
jmp
shrl
dec
and
int
mov
jbe
shr
xchg
adc
scas
cmp
sbb
insb
cmp
lea
lds
outsb
adc
jbe
leave
addb
sub
pushf
test
jbe
int
sub
outsb
mov
jbe
int
sub
outsb
dec
in
adc
jbe
int
cmp
lea
lds
outsb
adc
jbe
add
or
icebp
addl
cmp
int
arpl
xchg
cmp
test
shlb
xchg
int
jno
das
mov
mov
mov
leave
jbe
dec
and
push
lret
aam
popa
shll
xchg
out
xchg
pop
out
orb
mov
pop
out
cmpb
std
int
std
cmp
add
call
jmp
in
xchg
push
cld
add
std
add
test
sub
adc
dec
and
int
std
int
std
cmp
add
call
jmp
shr
sub
inc
stc
xorb
rorb
add
push
leave
jbe
mov
jbe
xchg
addb
addb
test
lods
addb
addb
addb
addb
addb
addb
addb
mov
stc
cmp
clc
add
repnz
and
movb
addb
or
cmc
icebp
lea
jnp
addb
addb
std
ss
pushf
addb
int
push
jp
addb
int
std
xchg
int
std
xchg
xor
jbe
int
in
sbb
cmpb
int
mov
fadds
jbe
xchg
popa
fists
xor
xchg
int
xor
out
adc
mov
subb
int
xchg
adc
mov
addb
clc
int
icebp
push
out
addb
icebp
adc
pop
push
addb
add
add
adcb
pop
cwtl
lcall
or
adc
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
movsl
dec
bound
addb
dec
pop
and
pop
xchg
mov
stc
xor
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
fisubrl
ret
add
clc
test
push
addb
int
mov
leave
das
sarl
fisttpl
xchg
mov
popa
addb
push
addb
addb
addb
addb
pop
lcall
xchg
lods
int
mov
int
popf
xor
int
xchg
cmpsb
push
addb
mov
ret
jbe
int
icebp
int
or
int
xchg
xor
inc
test
inc
or
rol
addb
cmp
clc
hlt
int
gs
ss
push
addb
add
xchg
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
hlt
int
dec
xor
int
mov
leave
das
rol
int
xor
das
pop
pop
add
add
mov
in
jo
jbe
xchg
aaa
ficoms
pop
mov
jbe
leave
jbe
mov
jbe
leave
jbe
fidivs
ficoms
or
pop
leave
jbe
scas
aaa
ficoms
or
cwtl
lcall
adc
jbe
cmp
cmp
pop
dec
and
out
ficoms
jp
jbe
int
or
iret
xchg
addl
push
ror
je
ror
xor
pushf
test
inc
loop
shr
xchg
int
int
test
insl
adc
cmpsb
mov
or
xchg
in
inc
jbe
das
or
jbe
add
mov
int
stc
push
insl
aam
cmp
out
int
mov
fs
xchg
mov
lret
xchg
add
xchg
stc
xchg
lret
int
lods
or
lret
int
stc
xchg
int
mov
adc
int
cmc
insb
add
std
sarl
push
sarb
rorl
jbe
push
cmc
int
cmc
add
call
repz
shrl
xchg
stc
inc
rolb
int
adc
xchg
stc
int
mov
test
int
stc
iret
adc
int
dec
shl
sub
cmp
or
push
adc
xchg
adc
call
repz
shrl
xchg
stc
xchg
xor
or
inc
lds
pop
outsl
add
add
jbe
int
mov
ljmp
mov
ror
popf
int
cmp
in
or
or
add
in
xchg
or
test
lret
rorb
add
adc
jbe
leave
jbe
dec
and
inc
and
cwtl
or
leave
jbe
into
and
in
inc
sbb
int
std
sar
shll
xchg
repnz
adc
out
xchg
push
add
lea
int
adc
jge
jmp
shr
sub
das
roll
jmp
addb
xchg
stc
cmp
shr
sub
jge
jmp
push
adc
xchg
std
int
std
cmp
cmp
shl
xchg
shl
sub
push
adc
xchg
stc
int
stc
aam
cmp
shl
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
int
in
int
in
cmp
loope
jmp
shl
sub
cmp
in
sub
lock
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
or
int
std
cmp
jmp
shr
sub
xchg
int
cmc
int
cmc
cmp
cmp
ljmp
int
std
int
std
cmp
cmp
shl
sub
repz
push
aad
adc
das
pop
pop
add
add
jbe
int
mov
jbe
arpl
rolb
insl
pop
jbe
aam
pop
jbe
fdivs
lret
or
das
adc
in
addb
lea
lret
or
insb
inc
jbe
subb
stc
std
add
cmpsb
rorb
adc
cmp
addb
xchg
jbe
inc
and
dec
sub
jno
cli
arpl
jbe
int
adc
subl
repnz
or
leave
jbe
into
and
inc
sbb
mov
int
std
int
std
cmp
shl
sub
jns
mov
lea
int
adc
jmp
shr
sub
das
rcl
in
outsb
int
cmc
int
cmc
sarl
push
sarl
lds
jbe
iret
jbe
jo
mov
jbe
int
stc
int
cmc
or
add
jbe
int
std
cmp
lock
push
roll
cmc
int
in
int
in
cmp
shl
sub
jns
mov
std
int
std
cmp
cmp
shr
xchg
shr
sub
xor
int
cmc
inc
jge
mov
jbe
int
mov
jns
lock
push
rorl
jbe
leave
jbe
bound
xchg
addb
jbe
cmp
shrl
jmp
push
jge
jbe
aad
or
int
mov
orb
in
lret
int
stc
das
pop
insl
cmp
or
int
in
int
in
cmp
mov
repnz
int
cmc
sub
int
push
popf
cld
add
int
popf
cmp
or
int
std
int
std
cmp
lock
push
roll
std
int
std
cmp
lock
push
sarl
jbe
int
adc
lea
cmp
cmp
repnz
mov
lea
imul
add
jbe
int
mov
jns
lock
sub
mov
int
stc
test
shll
rolb
in
xor
lret
pop
lcall
addb
roll
cwtl
sub
lahf
xor
std
or
stc
mov
lret
cmp
leave
jbe
adc
addb
mov
jecxz
mov
stc
iret
dec
into
mov
pop
das
mov
mov
das
mov
mov
fs
adc
das
mov
mov
mov
jge
pop
cmc
aam
leave
jbe
sbb
stc
int
mov
jecxz
mov
inc
in
dec
add
leave
jbe
push
addb
int
mov
lret
pop
dec
sub
push
add
add
cmc
sbb
push
jb
add
cmp
arpl
rolb
jecxz
mov
mov
adc
int
add
mov
inc
add
mov
adc
iret
js
or
iret
js
or
iret
js
or
iret
pop
or
cmp
addb
or
jbe
iret
pop
out
addb
pop
xor
pop
iret
pop
inc
addl
pop
xchg
addl
addb
xchg
icebp
or
or
mov
adc
or
and
lea
out
cmp
adc
jnp
ficoms
das
inc
cli
xchg
rcll
xchg
or
mov
out
int
or
cmp
shl
sub
int
mov
addb
cld
push
lock
stc
das
add
adc
mov
or
and
jbe
mov
movsl
int
jge
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
add
add
add
lea
or
lea
icebp
mov
dec
stc
pop
sbb
mov
xor
std
xor
icebp
mov
xchg
adc
add
mov
jmp
and
lea
cmpsb
or
shr
sub
notl
shr
xchg
push
lock
aaa
ficoms
or
or
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
push
comiss
xor
add
int
stc
push
imull
add
int
fs
push
faddl
int
and
jp
int
sbb
cltd
or
xchg
xchg
in
or
or
xchg
cmpsb
cmc
cmp
or
fcom
in
xchg
jbe
int
or
inc
lcall
ja
int
mov
xchg
mov
and
or
xchg
sbb
mov
jbe
or
push
addb
pusha
adc
jo
jbe
int
xor
int
stc
int
in
push
insl
aam
int
std
or
std
test
lea
movsl
push
or
or
int
test
lret
rolb
int
mov
pop
adc
mov
int
cmp
lret
pop
mov
shll
fwait
sbb
cwtl
int
pop
lahf
xor
cmp
jecxz
mov
xchg
add
xchg
das
mov
repz
mov
sbb
lds
sbb
jmp
dec
add
addl
mov
lret
cli
sbb
adc
or
sbb
leave
stos
lds
mov
addb
and
cmc
xchg
aaa
ficoms
or
aaa
ficoms
or
jbe
dec
and
inc
and
out
ficoms
or
fidivs
ficoms
or
int
adc
inc
icebp
xchg
shl
xchg
int
in
int
adc
ljmp
cmp
cmp
push
jns
jbe
iret
jbe
or
int
or
xor
ficoms
or
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
or
nop
add
add
lea
icebp
cmp
shr
sub
jmp
push
adc
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
popf
cmp
in
push
aad
int3
pop
aam
add
int
xor
xchg
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
cltd
shl
xchg
shl
sub
int
std
cmp
mov
shl
sub
xchg
int
adc
int3
pop
aam
add
int
adc
add
shl
sub
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
repz
shl
sub
xchg
int
std
int
std
cmp
in
shl
xchg
push
aad
adc
add
add
push
nop
add
add
jbe
int
std
sar
cmp
or
mov
push
shll
jbe
iret
or
addb
addb
int
push
or
lea
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
xor
repnz
inc
mov
int
lods
int
mov
inc
jge
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
push
shl
sub
cmp
inc
sti
add
int
std
int
std
cmp
repnz
jns
mov
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
or
nop
add
add
jbe
int
int
mov
aad
jmp
shr
sub
or
add
jbe
int
int
std
int
std
cmp
shr
xchg
int
jo
aad
ljmp
aam
add
int
sbb
lea
or
repnz
jns
mov
std
int
std
cmp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
hlt
call
in
push
aad
adc
add
add
jbe
int
std
add
call
repnz
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
int
std
add
cmp
shr
sub
jmp
push
adc
pop
nop
add
add
xchg
std
int
std
xchg
cmp
int3
push
aam
add
int
sub
hlt
call
repz
shl
sub
iret
or
addb
addb
xchg
and
insl
aam
int
in
int
adc
inc
jge
shr
xchg
int
int
int
in
int
adc
fidivrl
lock
push
adc
xor
jo
xchg
push
in
push
int
int
push
lret
or
int
cmc
int
stc
das
inc
jge
shr
xchg
int
cmc
int
stc
cmp
cmp
shl
sub
lea
push
lds
int
inc
jo
lea
or
xchg
xchg
push
int
dec
int
int
xchg
sbb
dec
xchg
sub
lea
int
int
push
xor
int
int
xchg
jbe
or
das
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
or
int
xor
les
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
lea
leave
cmp
add
stc
push
inc
shrl
add
addb
movsb
dec
mov
jge
cmpsb
xor
lea
xchg
das
inc
rcll
jbe
int
xchg
shrl
cmp
cmp
push
or
cmpsb
stc
das
inc
popf
xchg
or
int
cmc
push
out
add
dec
shr
xchg
int
stc
cmp
mov
int
cmc
int
stc
das
inc
or
shrl
shr
xchg
int
stc
cmp
shrl
cmp
push
fcmovne
lea
mov
ror
icebp
or
int
xchg
das
inc
rcll
jbe
int
xchg
shrl
das
mov
cmp
dec
or
rorl
mov
or
and
shrl
ficoms
cmp
fidivs
ficoms
ss
or
cs
int
xor
add
mov
int
xor
xchg
int
orl
push
and
add
in
test
int
adc
jbe
leave
jbe
scas
aaa
ficoms
or
int
jne
inc
jge
shr
xchg
int
insl
int
jne
repnz
lea
cmp
cmp
push
shl
int
inc
inc
mov
int
xor
xor
insb
test
jbe
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
fnstsw
leave
push
sub
adc
push
mov
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
xchg
shl
sub
xchg
or
nop
add
add
lea
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
cltd
cmp
in
push
aad
int3
pop
aam
add
int
sbb
xchg
sbb
icebp
shr
sub
psrlq
xchg
push
adc
xchg
std
int
std
cmp
cltd
shl
sub
repz
push
aad
cmpsb
std
cmp
hlt
call
mov
push
lds
aam
add
int
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
iret
xchg
movsl
or
add
iret
nop
add
add
std
int
std
cmp
int
sub
icebp
shr
xchg
shr
sub
jno
pop
out
addb
addl
add
dec
int
mov
mov
dec
int
cmc
int
stc
das
inc
jecxz
shl
xchg
int
cmc
int
stc
cmp
shr
sub
xchg
cmc
cmp
push
bswap
stc
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
cmp
int
stc
cmp
push
flds
dec
sarl
add
int
or
rclb
xchg
int
add
inc
pop
cwtl
lcall
popf
aaa
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
leave
jbe
dec
mov
cmc
dec
lahf
xchg
and
cmp
xchg
and
jbe
int
sbb
shlb
jbe
int
sbb
add
xor
pop
xchg
fs
popf
int
and
out
int
movsl
das
inc
add
out
int
movsl
adc
cmpsb
mov
shr
sub
pop
push
aad
nop
int
or
int
xor
xchg
dec
iret
xchg
lods
bound
stc
jno
cwtl
add
sbb
jbe
add
mov
cmc
add
adc
in
jo
jbe
jo
stos
clc
add
or
int
sbb
lea
outsb
adc
jbe
leave
addb
lods
int
and
outsb
test
jbe
int
and
outsb
mov
jbe
int
and
outsb
dec
int
and
insb
and
addb
sbb
lea
or
and
xorb
or
int
std
stos
test
lret
rcrb
xchg
int
int
dec
adc
cmp
cwtl
lcall
push
mov
jbe
inc
and
dec
addb
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
int
mov
jbe
int
cmc
int
mov
or
or
pop
jle
addb
mov
insl
mov
sarl
xor
mov
nop
xchg
iret
sahf
int
mov
aad
or
mov
jno
int
mov
leave
xchg
mov
ficomps
or
pop
mov
or
lret
mov
or
insb
add
add
push
add
add
outsb
add
add
add
inc
mov
add
iret
outsb
xor
add
add
xor
add
mov
add
int
mov
add
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
cmpsb
mov
cmp
shl
sub
in
outsb
iret
aam
mov
int
das
mov
cmp
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
outsb
iret
aam
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
incl
add
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
je
push
jbe
add
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
mov
add
or
int
stc
pop
inc
pop
inc
xchg
or
daa
or
int
mov
add
int
mov
mov
xor
pusha
addl
addb
mov
add
int
mov
add
pop
es
push
std
incl
add
xor
push
incl
add
xor
push
addb
add
or
xchg
add
add
jbe
pop
dec
xor
iret
test
add
add
bound
add
pop
push
xor
iret
mov
add
add
pushf
mov
add
int
mov
add
pop
add
addb
add
cmp
adc
cmpb
add
mov
addb
add
pop
lcall
adc
add
int
xor
call
repnz
or
adc
jbe
int
dec
cmp
mov
shl
sub
leave
add
add
add
incl
add
jbe
int
xor
jns
mov
shl
sub
jo
push
stc
incl
add
jbe
int
cmp
push
sbb
add
inc
lret
fwait
xor
adc
icebp
or
int
stc
push
insl
aam
adc
or
fmull
int
dec
int
dec
sar
setl
icebp
shr
sub
jmp
push
adc
xchg
cmc
int
and
dec
das
push
popa
test
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
in
addb
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
add
pop
xor
mov
add
int
mov
add
pop
es
iret
sub
add
pop
daa
xor
iret
xor
add
add
test
add
add
xor
iret
cmp
add
add
mov
or
cmp
add
pop
fwait
xor
iret
inc
add
add
or
or
inc
add
add
xor
iret
dec
add
add
pop
addb
add
pop
cmp
addb
add
jns
movsl
cmpsl
pop
pop
adc
iret
push
add
add
pop
mov
add
jns
fisttps
jbe
inc
jns
loope
pop
fcom
addb
add
jns
lods
push
pop
jnp
addb
add
jns
repnz
ljmp
mov
add
jns
in
int
xor
xchg
xor
icebp
shr
xchg
shr
sub
in
xchg
int
xor
out
cmp
stc
shr
sub
xor
das
pop
mov
int
xor
out
cmp
stc
shr
sub
int
stc
add
adcl
fwait
addb
movsw
int
xor
lea
cmp
sub
repz
push
jecxz
stc
xchg
int
xor
out
cmp
xchg
shr
sub
add
mov
stc
inc
adc
int
xor
icebp
shr
xchg
shr
sub
or
adc
lea
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
movsl
or
add
xor
mov
rcl
int
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
cmp
cli
mov
add
cld
mov
add
cli
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
popa
mov
or
or
int
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
dec
int
dec
cmp
mov
jmp
mov
or
int
dec
int
dec
cmp
cmp
shr
xchg
shr
sub
int
dec
iret
mov
out
shl
xchg
cmp
shr
sub
das
mov
or
int
dec
int
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
int
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
xor
out
cmp
xchg
shr
sub
xchg
or
adc
lea
dec
int
mov
icebp
cmp
shr
xchg
shr
sub
iret
push
nop
incl
add
add
add
jbe
mov
int
xor
xchg
xor
cmp
stos
cmp
shr
xchg
shr
sub
or
add
jbe
int
dec
cmp
mov
repnz
aam
iret
push
adc
int
xor
lea
cmp
mov
repnz
jo
push
and
add
jo
jbe
rolb
int
dec
cmp
lock
mov
mov
push
ror
iret
movsb
incl
add
int3
push
sbb
jbe
mov
int
xor
xchg
xor
psrlq
xchg
add
call
ljmp
sbb
sub
xor
push
jo
add
iret
mov
mov
add
pop
adc
push
bound
add
int
mov
add
int
mov
add
add
sub
jge
or
mov
mov
mov
add
add
pusha
mov
add
iret
mov
or
les
add
int
mov
add
iret
loopne
pop
add
iret
enter
iret
mov
mov
add
mov
add
add
stc
mov
add
int
pop
leave
xor
iret
addb
add
jge
or
aam
add
int
mov
add
cmp
or
add
add
addr16
add
leave
push
lods
add
add
xor
fadds
add
jae
jno
mov
int
xor
xchg
xor
call
repnz
jns
mov
lea
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
addb
das
add
addb
xchg
xor
psrlq
xchg
add
call
ljmp
aad
cmp
add
lea
int
xor
psrlq
xchg
add
call
jmp
jge
int
lea
add
mov
repnz
mov
jecxz
lea
int
xor
psrlq
xchg
add
call
jmp
jge
or
add
lea
int
xor
sti
call
jmp
shr
sub
int
xor
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
pop
pop
add
add
cmpsb
mov
jne
jbe
int
mov
or
insb
test
jbe
int
jge
inc
jge
shr
xchg
int
jne
xchg
jge
leave
cmp
push
icebp
int
cmc
bound
jo
push
cmc
incl
add
repnz
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
iret
cmc
incl
add
mov
leave
cmp
push
rolb
das
push
push
addb
jbe
ficoms
pop
mov
jbe
or
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
xor
repnz
pop
xor
push
repnz
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
pop
xor
repnz
pop
sub
xchg
repnz
int
xor
mov
jle
xchg
lea
inc
rcll
jbe
int
icebp
cmp
shrl
ror
lea
push
jge
dec
int
popf
addl
jbe
int
xor
cmp
cmc
add
sub
and
sbb
adc
test
add
or
adc
add
int
cmp
fcoml
aam
int
cmp
fsubl
aam
int
adc
add
int
cmp
outsb
sbb
push
add
cmp
cmc
mov
stos
test
lret
shlb
xchg
int
jno
cwtl
leave
jbe
dec
and
inc
and
int
std
sar
shll
xchg
sti
sarl
push
jns
mov
int
std
aam
int
std
cmp
cmp
sarl
push
jns
dec
inc
adc
pop
int
xor
jbe
cmp
push
add
push
pop
lret
or
das
push
fcmovbe
dec
add
adcl
fwait
addb
dec
adc
in
addb
lea
lret
or
js
clc
orb
int
stc
cmp
int
stc
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
int
add
leave
jbe
dec
and
xchg
jbe
or
int
adc
add
lea
addl
lea
std
cwtl
lcall
jns
mov
shl
sub
or
int
std
int
std
cmp
mov
repnz
or
int
mov
insb
jo
mov
int
mov
insb
pop
int
mov
push
outsb
xchg
int
mov
sbb
insb
pop
int
mov
jle
jl
icebp
sub
jbe
int
pop
xchg
in
xchg
insb
xchg
or
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
sub
mov
jbe
int
std
int
std
cmp
cmp
repnz
mov
lea
or
jbe
cmp
xchg
and
imul
xchg
int
std
cmp
lock
push
rorl
jbe
int
mov
jbe
add
popf
add
dec
int
mov
neg
add
or
int
adc
insl
aam
int
popf
or
int
movsl
int
dec
xor
or
int
adc
lea
dec
int
movsl
inc
jge
sbb
jbe
int
dec
int
adc
outsb
mov
lea
test
xchg
jbe
inc
and
cmp
xchg
and
or
iret
jbe
or
iret
jbe
or
iret
jbe
or
int
std
int
std
cmp
lock
push
rorl
jbe
jmp
xchg
and
xchg
popf
iret
jbe
jo
xlat
filds
add
jbe
int
stc
cmp
lock
sub
mov
jbe
or
int
xchg
sarl
in
push
popf
or
int
stc
cmp
shl
sub
jns
mov
stc
int
stc
cmp
cmp
shr
xchg
shr
sub
xchg
int
movsl
or
sub
jbe
int
stc
cmp
lock
push
shll
dec
iret
jbe
jo
sti
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
std
int
std
cmp
lock
push
shll
dec
iret
jbe
jo
mov
jbe
int
cmc
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
lock
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
in
int
in
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
cmc
int
int
cmc
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
push
mov
jbe
int
adc
mov
cmpb
shl
sub
jns
mov
je
ror
lea
int
int
adc
and
psrlq
xchg
cmp
shr
sub
lret
rolb
int
in
int
int
in
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
cmc
addb
in
int
int
cmp
shl
sub
jns
mov
je
ror
lea
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
add
in
int
in
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
in
int
int
in
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
xor
jbe
jo
outsl
lods
add
int
pop
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
jbe
int
stc
int
stc
int
stc
int
stc
cmp
xchg
shrl
cmpsb
gs
xchg
cmp
add
std
add
std
shr
sub
hlt
dec
and
int
std
cmp
cmp
repnz
mov
lea
push
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shr
jle
addb
popf
iret
jbe
jo
jge
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shll
iret
jbe
jo
das
cli
add
int
std
int
std
cmp
lock
push
shll
iret
jbe
jo
sti
stc
add
int
popf
xchg
or
add
cmp
jbe
xchg
jo
push
fildl
add
jbe
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
mov
repnz
jo
cmp
jbe
jo
add
jbe
int
std
cmp
mov
repnz
jo
cmp
jbe
jo
jb
add
int
inc
int
inc
cmp
cmp
shr
xchg
shrl
lea
addl
jo
cmp
lea
add
jbe
int
cmp
cmp
jbe
int
stc
int
stc
cmp
shl
sub
jns
mov
lea
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
or
cli
add
int
mov
xor
in
adc
cwtl
lcall
add
xchg
mov
or
dec
int
mov
cmpsb
dec
or
pop
jnp
ficoms
cmp
pop
mov
adc
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
sbb
aad
sbb
das
adc
je
push
ja
xchg
shr
addl
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
popf
int
xor
cli
int
adc
inc
loope
shrl
cli
push
addb
push
popf
int
mov
bswap
dec
int
xor
cmpsb
adc
lods
std
add
std
shr
sub
ficoml
aaa
ficoms
adc
mov
clc
aam
ficoms
adc
mov
leave
sbb
push
jge
cltd
pop
mov
add
aaa
ficoms
cmp
adc
out
ficoms
sbb
das
adc
das
stos
push
in
xchg
imul
and
addb
dec
int
mov
out
cmp
pop
jnp
ficoms
cmp
das
inc
sti
xchg
shr
xchg
cmp
shl
sub
cmc
push
fxch
out
imul
cmpsb
and
and
cmpsb
adc
xchg
fiaddl
aam
add
xor
and
sub
std
add
sub
add
or
or
mov
out
cmp
cmp
das
inc
add
out
int
mov
cmpsb
dec
shr
sub
dec
cmc
cmp
push
clc
int
xor
cli
push
aad
cmpsb
adc
popf
int
int
xor
or
cmpsb
adc
inc
jge
shr
sub
fst
jmp
adc
addb
lock
icebp
sbb
and
mov
cmpsl
cmp
sbb
jbe
int
dec
int
mov
dec
adc
mov
jnp
ficoms
das
inc
jge
int
cmp
cmp
sarl
jmp
adc
addb
divps
test
aam
adc
gs
jo
mov
ss
das
sbb
mov
test
lret
shrb
xchg
int
add
dec
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cwtl
shl
sub
lea
cmpsb
mov
cmp
push
rorb
or
xor
mov
jbe
int
xor
addb
int
adc
adc
test
nop
jo
add
or
lea
jge
shr
xchg
int
mov
xchg
dec
add
and
jns
ficoml
or
iret
jbe
jo
add
sbb
repnz
adc
xor
dec
add
mov
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cmp
fcmovbe
repnz
das
push
rolb
aam
int
xor
lea
inc
jge
shr
xchg
int
xor
xchg
adc
jns
fcmovbe
repnz
lea
shrb
shll
or
adcb
lcall
xchg
inc
int
and
mov
jnp
ficoms
inc
icebp
das
or
addb
test
jnp
inc
hlt
mov
das
add
adc
jno
ficoms
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
cmpsb
aaa
ficoms
test
aam
adc
scas
aaa
ficoms
mov
das
add
adc
mov
ficoms
das
push
into
addl
sub
addl
adc
xor
dec
add
mov
jmp
addl
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
aaa
ficoms
test
aam
adc
fidivs
ficoms
mov
das
add
adc
out
ficoms
in
iret
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
mov
int
dec
xchg
sbb
or
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
fst
out
xchg
adc
addb
clc
ds
xor
adc
xchg
cmp
inc
int
xor
adc
xchg
xor
adc
out
int
adc
adc
jecxz
inc
sti
xchg
shr
sub
fstl
clc
addb
push
clc
int
cmp
aad
cmpsb
inc
cmp
cmp
lea
loope
cmp
shrl
subb
lea
shr
xchg
push
popf
xchg
int
adc
hlt
add
std
shr
sub
insl
adc
aam
ficoms
adc
mov
out
int
inc
add
std
adc
aam
ficoms
adc
mov
lock
and
aad
rclb
or
and
not
aaa
ficoms
cwtl
add
xor
sub
add
sbb
adc
xor
dec
add
mov
or
arpl
sarb
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
aad
clc
int
xor
cmpsb
adc
fsts
or
int
cmp
inc
int
xor
adc
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
cli
cmp
lea
inc
loope
cmp
push
cli
shrl
subb
push
popf
int
cmp
lea
int
cmp
hlt
int
inc
adc
mov
jnp
ficoms
das
inc
jge
shr
sub
jmp
cmp
adc
addb
lds
lea
out
int
adc
repnz
add
std
adc
aam
ficoms
adc
aam
ficoms
shr
sub
insl
adc
mov
hlt
mov
lock
jmp
incl
add
sbb
pop
aaa
ficoms
or
and
jbe
xchg
aaa
ficoms
or
int
adc
cmc
lcall
xchg
int
adc
out
jo
sti
cmpsb
mov
jno
xchg
std
int
dec
or
iret
jbe
add
mov
mov
dec
add
in
add
mov
adc
stos
or
int
std
test
rorb
add
stc
add
inc
cwtl
leave
je
xor
addb
addb
xor
xor
sub
and
sbb
adc
xor
dec
add
mov
int
mov
je
test
je
xor
insl
das
add
int
xor
push
insl
das
add
add
xor
add
xor
add
xor
int
xor
add
int
xor
int
xor
int
xor
iret
jbe
or
int
xor
xchg
or
int
xor
int
xor
int
xor
int
and
xor
aam
mov
add
sbb
or
xor
push
int
fs
xchg
sbb
push
int
xchg
pop
sbb
add
addl
dec
int
xor
xchg
or
or
xor
push
insl
das
push
cwtl
addl
addl
je
test
add
orb
xor
int
xor
int
or
int
or
int
xor
int
int3
addl
dec
int
xor
int
xor
int
popf
addl
or
imul
jns
add
sarl
push
jge
mov
leave
je
mov
je
xor
insl
aam
int
xor
add
adc
jl
cmp
and
add
xor
add
xor
add
xor
add
xor
int
xor
add
in
cmp
aam
and
aam
and
aam
and
je
push
add
in
and
aam
adc
je
cmp
icebp
in
xchg
je
xor
icebp
or
int
xor
push
insl
aam
int
xor
leave
add
and
mov
mov
int
movsl
addl
and
mov
mov
cmp
add
shl
sub
mov
mov
inc
rcl
and
je
test
mov
int
movsl
addl
addb
cmp
push
iret
jbe
or
int
xor
int
xor
int
in
addb
je
test
add
addl
or
or
adc
mov
int
in
addb
mov
sub
lds
gs
popa
ja
jne
outsl
insl
jne
add
jno
jb
bound
dec
popa
addr16
addr16
js
bound
insb
outsl
add
je
jo
outsl
outsl
push
gs
outsl
jae
jne
imul
jae
dec
jne
imul
gs
outsl
jbe
jae
insb
push
gs
push
outsl
data16
popa
jns
gs
jo
outsl
insb
insb
jo
imul
gs
jne
jae
addr16
jo
gs
outsl
ja
add
outsb
je
gs
popa
je
outsl
jo
insb
fs
arpl
dec
outsl
imul
push
imul
add
je
gs
insb
jne
add
imul
insl
jo
outsb
outsl
add
jae
outsb
add
push
add
add
arpl
push
add
add
push
add
js
jns
push
add
jb
arpl
add
outsl
add
dec
add
outsb
add
je
outsl
add
outsl
add
popa
add
add
dec
add
outsb
add
add
outsb
add
popa
add
add
inc
add
jne
jae
je
add
push
add
jb
jns
add
push
add
popa
add
push
add
insb
add
je
imul
add
add
jo
add
jns
je
push
add
outsl
add
push
add
jo
jns
add
bound
outsl
add
inc
add
popa
add
add
jae
add
add
or
add
xor
add
push
adc
xchg
adc
mov
and
adc
add
adc
add
adc
lcall
add
or
add
add
adc
or
pop
adc
out
adc
fiadds
inc
add
addb
addb
addb
addb
addb
addb
addb
addl
or
inc
add
addl
sbb
inc
add
addl
mov
inc
add
addl
movb
add
addl
addl
fiadds
inc
add
addl
out
addl
mov
adc
pop
cmp
add
adc
jbe
adc
or
add
sbb
add
sub
add
adc
movsb
inc
adc
jecxz
adc
shlb
push
push
adc
pop
inc
adc
xchg
rcrl
add
je
add
adc
fldcw
add
pop
adc
nop
push
adc
scas
push
adc
hlt
jbe
add
pop
adc
mov
data16
pop
dec
adc
mov
adc
sub
adc
xchg
cmp
add
addl
incb
inc
add
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
and
add
adc
and
inc
adc
ss
adc
leave
jno
add
cmp
add
inc
adc
mov
pop
adc
dec
sub
add
xor
add
adc
jl
adc
xchg
jle
add
data16
jbe
inc
add
inc
add
inc
add
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
imul
mov
adc
addr16
add
add
cmp
add
adc
jecxz
adc
push
or
add
adc
push
dec
adc
mov
adc
sarl
add
add
adc
test
addb
addb
addb
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
add
je
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pusha
test
add
add
xchg
add
lods
test
add
test
add
test
add
test
add
test
add
test
add
xchg
add
add
xor
add
inc
xchg
add
add
add
push
xchg
add
xchg
add
add
add
add
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
add
dec
xchg
add
add
add
jle
add
mov
add
mov
xchg
add
xchg
add
xchg
add
xchg
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
je
add
mov
add
mov
add
ret
add
mov
add
mov
add
mov
add
mov
add
add
push
mov
add
add
inc
mov
add
add
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
add
mov
add
add
bound
add
mov
add
add
add
mov
add
ret
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
push
add
jl
add
xchg
mov
add
add
rorb
add
testb
add
mov
add
mov
add
add
mov
insb
imul
je
add
inc
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
jb
popa
insb
imul
arpl
add
je
jb
arpl
imul
xchg
add
gs
je
inc
dec
inc
push
arpl
outsb
add
popl
inc
jb
popa
je
inc
inc
push
add
add
je
imul
je
js
add
add
je
arpl
outsb
add
fadds
push
gs
imul
add
inc
gs
bound
arpl
add
popa
je
inc
outsl
outsb
je
outsb
imul
xchg
inc
gs
gs
inc
js
outsb
je
outsl
imul
mov
popa
je
dec
inc
push
add
add
popa
jb
inc
outsl
arpl
add
push
gs
imul
addr16
js
add
outsl
dec
push
add
std
add
je
gs
inc
outsl
insb
outsl
jb
add
add
je
push
fs
xor
push
add
add
jne
inc
outsl
outsb
je
popa
insl
imul
add
je
dec
inc
imul
xor
fs
insb
add
inc
inc
push
push
xor
cs
insb
add
xchg
inc
gs
insb
addr16
jb
arpl
add
je
outsb
jne
je
insl
push
arpl
add
imul
je
gs
add
add
arpl
insb
addr16
jne
je
outsb
add
addb
push
outsb
outsl
ja
jae
outsb
arpl
add
imul
popa
jae
push
add
xchg
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
add
fs
imul
add
je
popa
jb
je
outsl
jae
scas
add
ja
fs
pop
add
gs
je
inc
imul
jb
insl
inc
add
out
inc
jb
insl
gs
arpl
add
je
jo
popa
je
push
arpl
add
je
inc
add
push
imul
outsl
arpl
add
add
imul
push
add
je
outsl
jb
outsb
jo
je
fs
add
hlt
add
jae
push
push
dec
gs
popa
addr16
add
xchg
add
outsb
jae
popa
je
dec
gs
popa
add
test
dec
outsb
jae
jb
dec
outsb
jne
je
insl
push
add
add
outsb
fs
imul
push
add
ja
gs
inc
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
imul
add
cmp
inc
gs
outsb
jne
je
imul
add
outsb
fs
gs
popa
addr16
imul
add
push
jo
popa
dec
jne
gs
arpl
or
inc
imul
jae
push
outsb
imul
outsb
fs
gs
popa
addr16
add
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
push
gs
outsl
arpl
add
stos
add
fs
imul
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
popa
insb
imul
add
inc
jb
popa
je
inc
imul
jb
insl
push
add
or
inc
gs
inc
inc
js
repz
je
popa
jb
je
outsl
jae
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
ret
jbe
jo
imul
lds
dec
jae
push
jo
popa
push
add
sti
add
je
insb
popa
jae
dec
popa
insl
gs
add
push
gs
outsb
jne
gs
jne
je
je
insl
add
pop
add
je
jns
inc
outsl
insb
outsl
jb
add
add
push
gs
ja
imul
cmp
arpl
popa
imul
outsb
add
xor
jb
outsl
dec
gs
push
add
jnp
push
push
jb
outsl
jb
add
add
je
arpl
gs
imul
add
arpl
outsl
jo
jo
outsb
jne
add
add
je
jae
outsb
arpl
jns
je
je
add
xchg
add
je
outsl
jns
arpl
add
inc
push
xor
cs
insb
add
add
addr16
gs
gs
push
popa
insb
jne
inc
add
push
gs
popa
insb
jne
inc
js
add
pop
add
jns
je
gs
jb
jns
gs
popl
push
gs
gs
popa
insb
jne
inc
js
add
das
add
je
data16
outsl
outsl
je
outsl
outsb
imul
je
jae
add
push
gs
insb
outsl
jae
dec
gs
inc
fs
jo
xor
cs
insb
add
arpl
cs
add
bound
push
gs
insb
insb
outsl
arpl
sbb
inc
jb
outsl
jb
outsl
fs
mov
inc
outsl
insl
jo
jb
push
je
imul
add
jae
jb
jo
inc
add
adc
inc
jne
insb
imul
outsb
fs
add
push
gs
push
inc
data16
dec
popa
jae
add
add
fs
imul
add
sub
dec
outsl
arpl
push
imul
push
jns
je
insl
push
imul
insb
gs
imul
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
gs
popa
outsb
fs
gs
outsl
jne
je
add
push
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
testl
imul
and
insl
push
gs
jne
arpl
jns
gs
add
lcall
insb
inc
gs
je
insl
dec
popa
insl
gs
add
loop
inc
jb
popa
je
dec
popa
insl
gs
imul
add
je
outsl
arpl
gs
outsb
outsw
inc
add
lar
je
outsl
fs
gs
imul
add
pop
add
popa
insb
push
imul
insb
gs
jb
outsl
insl
insl
inc
jb
popa
imul
pusha
add
outsb
fs
imul
gs
add
push
add
je
jne
bound
inc
outsl
jb
popa
je
add
dec
inc
push
dec
inc
dec
xor
cs
insb
