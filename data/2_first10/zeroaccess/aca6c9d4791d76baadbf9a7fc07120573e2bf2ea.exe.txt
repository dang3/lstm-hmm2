push
mov
sub
xor
mov
xor
mov
mov
or
mov
movl
jmp
mov
ja
jno
mov
js
repz
jl
jl
jle
jl
xlat
cmp
ffree
pop
push
add
add
rdpmc
cmpps
adc
inc
pop
add
fcmovnbe
add
adc
out
outsl
or
test
sub
ds
add
rorl
jmp
mov
dec
in
dec
call
mov
and
jnp
ret
nop
sub
out
bnd
popa
xlat
and
add
sbb
outsl
insl
jp
cmp
jno
cmp
or
mov
pop
push
adc
jge
inc
dec
aaa
adc
ja
sbb
cmp
ljmp
xorb
outsb
mov
pop
inc
enter
fistps
adc
lea
sub
sub
mov
negl
not
inc
add
popf
data16
lcall
sbb
bswap
add
jb
push
js
jns
mov
lea
inc
or
cmp
imul
jns
xor
push
sub
jp
mov
out
or
jo
dec
xor
test
out
jmp
in
fisubl
push
addr16
test
push
sbb
incb
jae
adc
and
jp
jge
jl
es
in
orb
clc
mov
or
xchg
pop
cmp
lret
xchg
or
test
cli
xchg
dec
out
adc
sbb
adcl
jecxz
mov
fsubr
mov
pop
inc
push
jp
cmp
inc
std
cltd
out
pop
cli
jmp
scas
inc
xchg
or
aaa
data16
ja
mov
in
jo
enter
mov
sbb
add
push
bound
outsb
cmp
push
add
rorl
roll
lods
scas
jo
inc
xchg
xor
in
xor
push
jno
cmp
mov
sub
pop
mov
xor
mov
push
dec
aas
mov
pop
jae
sub
mov
xchg
idivl
sub
and
clc
ss
jno
cmp
adc
pusha
ljmp
addl
xchg
imul
pusha
cld
lods
sub
jne
test
lods
cmpsb
out
rol
adc
loope
push
xchg
out
andb
aaa
sbb
jmp
loope
lret
push
stc
cmpsb
ret
or
rolb
into
cmp
sbb
test
aas
mov
pop
daa
adc
out
xchg
popa
pop
mov
out
adc
dec
iret
cmp
repnz
mov
jg
or
or
cmp
addr16
pop
push
mov
and
mov
clc
or
pop
mov
test
lcall
clc
push
or
push
add
mov
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
push
call
jmp
push
or
mov
not
add
adc
mov
sbbl
lea
mov
mov
xorl
mov
xor
add
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
movl
xor
lea
neg
mov
mov
mov
xor
neg
add
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
sbbl
mov
decl
mov
mov
movzwl
sbbl
jmp
mov
adc
adc
jne
arpl
insl
nop
mov
jl
addr16
jl
daa
xor
sti
adc
pop
outsb
das
jae
stc
mov
lret
outsb
sub
repnz
mov
fidivl
ret
ret
sub
out
inc
shlb
rorl
aad
pushf
add
std
sub
cmp
xor
xor
movsl
mov
scas
paddsb
test
inc
jno
jo
leave
xor
and
idivb
pop
and
xchg
stc
roll
cmpsb
pop
sbb
pop
iret
mov
push
les
push
lea
add
jno
or
add
push
test
lahf
push
fdivs
xchg
movb
in
dec
roll
fsubrs
add
imul
mov
cmpsl
cli
xor
test
xchg
fsts
insl
fdivrs
je
adc
in
data16
lcall
jbe
mov
and
pop
jp
insl
stos
out
pusha
in
jmp
inc
outsb
or
mov
jb
pop
add
jmp
lods
xor
ror
lock
mov
add
push
mov
and
std
insb
fsubrs
xchg
cmovnp
add
push
sub
adc
aam
and
pop
and
shlb
xchg
mov
inc
cmpsb
xor
mov
incl
icebp
push
xchg
cmpsl
popf
sbb
adcl
cmc
xor
outsl
mov
in
clc
add
jmp
loope
cld
and
sub
mov
pop
pop
mov
xlat
ficompl
mov
and
in
mov
jnp
jle
push
sbb
push
lret
cmp
adc
xchg
and
sub
cmc
xchg
fisttpll
sub
xchg
sub
push
jp
and
ret
lea
in
mov
dec
adcb
aad
dec
pushaw
jl
hlt
sub
subl
fistps
xchg
pop
stos
inc
lret
xor
push
jecxz
and
out
in
dec
into
xchg
mov
push
ja
rolb
stos
nop
mov
mov
repnz
push
flds
xchg
bound
stos
imul
ret
pop
pop
std
movsl
loop
pop
ss
hlt
and
xor
orl
sbb
imul
shll
sub
movsl
inc
cmp
lods
scas
push
push
clc
test
adc
rorb
mov
push
jbe
rorl
sub
pmaddwd
ljmp
add
sbb
mov
int3
mov
push
shl
cmp
inc
cmp
push
push
ljmp
sahf
sub
rcrb
loopne
dec
push
lahf
and
jb
sub
sbb
or
add
mov
mov
xorl
mov
xor
add
cmp
movl
jne
mov
add
mov
orl
xor
add
cmp
jne
sbb
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
call
xor
add
dec
mov
jmp
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
xor
add
mov
mov
mov
jmp
xor
stos
cmc
pop
push
mov
lret
push
lcall
jle
jl
add
out
xchg
cmp
cmp
inc
xchg
lods
fidivrs
stc
mov
mov
adc
insb
popf
aas
push
dec
out
mov
scas
fisubrs
dec
pop
das
sarb
mov
or
jmp
lret
stc
jnp
into
lahf
push
cmpsb
jp
cmp
imul
icebp
dec
shll
cmp
sbb
push
lock
popa
dec
mov
cmpsl
or
loop
daa
inc
rol
insb
cld
push
sbbl
mov
xor
lret
in
sbb
xchg
xor
inc
popf
or
cmpsb
xchg
jae
enter
mov
mov
ss
cmp
push
dec
pop
pop
in
lret
push
xor
inc
ss
cltd
adc
leave
testb
inc
mov
cmp
xchg
pop
cwtl
sub
jle
scas
outsl
daa
push
sub
add
imul
ljmp
jb
xlat
fs
add
sar
outsb
jecxz
or
xchg
cmp
adc
enter
xlat
adc
popf
mov
sub
leave
idivb
idivl
js
dec
mov
add
cmp
aaa
sub
in
fadds
adcl
sub
lods
dec
push
out
fldl
mov
in
lods
xchg
mov
jg
clc
adc
cmp
cltd
or
mov
int3
xor
push
jbe
cmc
mov
cmpsl
dec
sub
push
pusha
cmp
inc
rclb
lcall
out
nop
mov
xchg
fimuls
mov
push
dec
stc
je
pushf
aam
insl
int3
and
dec
sbb
push
xchg
insl
inc
outsb
stos
adcb
sbb
push
lods
inc
pop
popf
pop
cmpsb
xchg
and
dec
jmp
add
adc
test
pop
pushf
xchg
add
rorl
cmpsb
mov
jmp
cld
js
jle
xor
xchg
sbb
ss
mov
pop
loop
pusha
push
pop
fbld
xor
jmp
jo
and
fstps
out
push
fmuls
push
enter
jecxz
mov
pop
std
jecxz
mov
orl
clc
movsl
sub
jo
movsb
cld
mov
push
cmp
cld
cmc
addr16
rcrb
xor
inc
lods
pop
ljmp
xchg
mov
leave
xor
or
dec
add
mov
jno
or
das
cltd
dec
push
cmpb
insl
push
push
pop
fists
mov
cmp
jg
mov
adc
ds
sbb
and
loopne
cmp
aam
call
into
jge
sub
ret
mov
sbbl
test
mov
punpcklbw
pop
dec
cli
je
ljmp
jb
lcall
ret
add
cmp
add
xor
xor
mov
sub
add
jmp
call
addr16
jb
popa
xchg
and
mov
jl
addr16
jl
mov
sarb
sub
xchg
sti
mov
push
movsb
mov
inc
ds
scas
sbb
loope
outsb
int3
or
xor
orl
movsb
jne
dec
cs
adc
mov
cltd
popf
ret
and
jl
rcrb
ljmp
pushf
popf
add
xchg
ret
mov
loope
xlat
lret
subb
pop
les
and
xchg
clc
adc
and
daa
aaa
outsb
outsb
shl
inc
xchg
call
movsl
in
enter
xor
pop
pop
inc
mov
dec
daa
sub
mov
adc
aaa
roll
add
sub
and
pop
and
aaa
pop
inc
jno
push
cmp
inc
add
adc
fdivrl
lds
add
or
push
pop
sbb
inc
cltd
and
insl
mov
add
sub
popa
bound
nop
mov
pop
mov
mov
add
es
add
jb
fwait
lods
and
push
add
jmp
push
hlt
arpl
roll
mov
mov
ret
dec
xlat
xor
loope
lcall
in
outsb
jns
mov
jge
fiaddl
or
outsl
sar
sub
xchg
pop
mov
fsubs
sahf
repz
in
and
arpl
pushf
cmc
xchg
gs
mov
sbb
cld
add
stos
cmpsb
pop
adc
xor
ss
pop
neg
dec
pop
push
leave
iret
sbb
inc
mov
dec
fcomi
repz
xor
fsubs
repnz
sub
push
jbe
mov
push
inc
movsb
scas
lahf
mov
aaa
adc
enter
pusha
ja
js
or
cmp
mov
cmp
mov
aad
lea
pop
add
pop
sahf
aad
push
cltd
adc
jne
push
cmpsl
inc
pop
xchg
test
movsl
pop
sub
shrl
jp
gs
fs
or
out
gs
add
mov
les
sbb
adc
repnz
les
pushf
sbb
cmp
add
sbb
mov
add
pop
pusha
jno
icebp
cs
xor
cmpsb
cwtl
outsl
cmpsl
sbb
mov
xchg
js
sbb
mov
jo
int
mov
add
sbb
sbb
sbb
xlat
jo
jle
jecxz
jno
push
pushf
jmp
xchg
jns
aas
pop
dec
shr
stos
jns
and
push
pop
into
add
push
aad
jo
sar
pop
xchg
and
jno
fisttpll
add
in
in
ret
inc
testb
xorl
pop
in
mov
dec
aas
or
mov
or
mov
mov
movzwl
add
mov
mov
jmp
adcb
pop
andl
scas
cwtl
add
jle
jl
pop
icebp
cmp
std
cwtl
pusha
cmpsl
imul
xor
adc
dec
jp
or
negl
or
leave
pushf
pop
inc
imul
sbb
sub
cmpsb
lcall
add
std
gs
clc
jp
enter
loope
jae
add
add
in
imul
insl
xor
js
sub
ja
jle
rclb
jnp
inc
and
push
jne
add
bound
push
inc
mov
icebp
jp
addr16
dec
sbb
jle
outsl
ret
js
test
jo
insb
mov
and
lock
imulb
in
cmp
xchg
shrb
ret
lods
call
xor
jo
sub
mov
fnstsw
xchg
xchg
xchg
sbb
push
sbb
push
dec
scas
cmp
mov
mov
jmp
jmp
add
and
push
sub
pop
jmp
xchg
cmpsl
cwtl
cmp
xor
pop
enter
xchg
jmp
dec
add
and
out
cli
testl
in
xchg
cmp
lret
dec
clc
xchg
fistpl
adc
addb
pop
sub
fimuls
xchg
mov
or
mov
bound
adc
movl
push
mov
rcr
mov
and
dec
loope
sbb
sbb
or
insb
shlb
and
and
xchg
and
mov
fistpl
mov
mov
mov
leave
pop
xchg
mov
or
jg
cmpsl
mov
push
sbbl
gs
xchg
sarb
scas
sbbl
aam
repnz
adc
mov
sar
mov
mov
pop
sbb
or
adc
or
stos
rcrl
aas
pop
cmp
loope
and
xchg
mov
push
repz
lcall
jns
mulb
dec
mov
iret
ftst
shl
cli
push
imul
and
jb
lahf
add
icebp
jle
leave
cs
fstpt
mov
dec
xchg
adc
add
ljmp
or
testb
mov
jge
rcrb
and
jno
rcl
dec
xlat
leave
rol
xlat
adc
jnp
pusha
clc
ret
mov
inc
push
out
leave
push
cmp
jno
jmp
fcoml
push
sub
pop
dec
out
pop
mov
adc
adc
push
adc
xor
or
call
int3
sub
inc
adc
dec
repnz
push
stc
sub
clc
mov
adc
fisubl
mov
push
dec
cld
popa
loopne
cmp
addr16
push
fxtract
rorb
test
lcall
enter
cld
movzwl
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
jmp
pop
pop
dec
pop
push
xor
push
sti
rcrl
addl
jl
jle
jl
xchg
hlt
pop
xchg
pushf
adc
jg
shll
fwait
fs
dec
out
push
mov
hlt
out
ja
test
jge
pop
dec
imul
cmp
ficoml
adc
hlt
add
leave
aas
xchg
lcall
test
push
jge
adc
inc
mov
pop
jp
cmp
adc
mov
xlat
repnz
mov
ljmp
movsb
xor
lods
jge
out
jge
mov
or
jns
mov
xor
or
and
push
dec
in
cmp
cmc
cmp
mov
push
add
push
sub
dec
pop
leave
or
pop
xor
mov
data16
divb
xlat
jecxz
sub
xlat
cld
mov
mov
das
test
enter
jb
ljmp
add
push
add
into
lock
sahf
xor
rorl
jo
sub
inc
loop
fwait
jmp
test
jb
mov
push
dec
outsb
movsl
stos
fucom
inc
int
lods
rol
mov
insl
inc
jb
add
inc
jecxz
shll
xor
push
icebp
shr
mov
pop
popf
insb
xor
mov
in
insl
lea
pop
ljmp
push
scas
idivl
xor
aad
mov
es
bswap
arpl
daa
sbb
movsb
jp
scas
push
jmp
dec
gs
pusha
add
pusha
xlat
mov
push
mov
or
cmpb
mov
sbb
fisubrs
adc
sbb
stos
dec
dec
ret
and
or
pop
and
pop
or
test
testb
pop
cmp
pop
cmpsl
xor
rcr
js
dec
loope,pt
or
xchg
imul
xor
xchg
or
xchg
pop
xchg
testb
sbb
sbb
mov
lods
cmp
scas
outsl
add
jle
add
or
jecxz
adc
ret
pop
testl
imul
lret
xor
jge
adc
aaa
inc
jecxz
pop
adc
mov
xchg
jno
jmp
or
mov
cmp
lret
sbb
mov
jne
mov
lret
xchg
push
test
rcrl
or
addb
push
jbe
loop
bound
pop
xor
enter
push
xchg
sbb
in
sbb
push
and
cmp
fiaddl
outsb
dec
jg
adc
aad
push
shll
lods
cmp
rorb
inc
push
xor
fdivs
mov
xorb
nop
mov
test
in
sub
out
push
pop
mov
pop
dec
ss
and
fwait
xchg
pop
imul
xor
lea
mov
mov
cmp
jmp
mov
jne
adcb
cltd
aad
aaa
ljmp
jl
and
lret
inc
xor
in
dec
pandn
mov
push
pop
bound
test
adc
imul
lods
hlt
mov
fcomps
cmc
dec
stos
outsb
inc
fbstp
in
sahf
sub
inc
jle
out
imul
adcb
loop
pusha
push
inc
add
or
aaa
dec
xchg
push
add
pushf
jne
push
aam
mov
inc
fdivrs
mov
pop
sarb
bound
jecxz
add
pop
push
andl
or
or
push
loope
insl
das
xor
scas
xor
lods
subl
mov
out
nop
adc
inc
int
stos
pop
xchg
jne
mov
out
mov
cltd
fnstenv
dec
seta
and
inc
cmpsb
ss
xchg
sbb
loop
repz
xchg
adc
mov
sbb
push
xor
fsubrl
movb
fisttps
add
pop
xchg
add
aam
and
repz
pop
push
or
in
sub
push
sarb
xor
outsl
xorl
xor
cmc
nop
hlt
dec
cli
xor
lds
cld
bound
dec
psrld
jno
rorb
push
in
push
xor
xor
push
insl
int
fdivs
cmpb
and
shl
xor
fs
pop
jnp
inc
push
lret
outsb
mov
repz
addr16
or
jmp
mov
scas
aam
adc
adc
xor
pop
icebp
jecxz
jmp
shrl
push
idivl
xchg
jle
push
pop
std
mov
or
xchg
in
es
mov
pop
jp
or
inc
mov
dec
push
xchg
insb
outsl
or
aaa
idiv
loope
adc
inc
inc
test
add
mov
xor
in
pusha
adc
inc
xchg
push
in
cli
dec
scas
cwtl
out
clc
push
xchg
mov
xchg
xor
or
ficoml
xlat
nop
mov
mov
fnstcw
ret
pop
jns
and
sbb
pop
jle
divl
or
mov
les
adc
sub
add
xchg
and
inc
fwait
pop
and
inc
imul
add
mov
test
jp
cli
and
lods
pop
xor
inc
sub
fstps
enter
jle
push
inc
inc
mov
jns
mov
in
fstpl
xor
xchg
mov
xchg
cmpsl
insl
dec
lret
push
and
mov
scas
mull
in
jbe
sbb
inc
and
push
mov
ljmp
pop
inc
mov
push
push
std
sub
add
add
lea
xor
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
jmp
in
outsb
out
jae
std
jne
lds
int3
scas
sbb
out
fisttpll
jl
addr16
jl
pop
xor
insl
lcall
or
cmc
daa
rol
les
adc
mov
mov
test
pop
stos
nop
mov
inc
cltd
mov
xchg
mov
mov
dec
fdivl
je
cmc
and
jno
fbld
and
add
ljmp
push
cmp
xor
js
ss
mov
sbb
insb
mov
xor
mov
cmp
jne
fiaddl
dec
shrl
insl
push
fiaddl
out
bound
adc
xor
sbb
sbb
mov
or
mov
inc
rorb
iret
test
jecxz
iret
push
dec
mov
subl
dec
inc
test
ljmp
push
inc
sbb
jnp
push
fstl
dec
dec
add
jo
add
cld
xor
mov
dec
enter
dec
sar
jmp
and
sbb
test
test
outsl
movsb
cwtl
jg
adc
leave
inc
adc
dec
jns,pn
xor
aam
and
popa
add
mov
mov
xchg
lods
and
sbb
movsb
dec
mov
push
das
sbb
fdivrl
push
in
push
flds
push
mov
dec
cwtl
mov
mov
xchg
arpl
cli
mov
xchg
sbb
les
sbb
and
imul
daa
xchg
lods
faddl
push
jl
aad
adc
add
mov
sub
mov
push
xor
push
pop
clc
into
cmp
dec
shrl
mov
push
mov
ljmp
lret
sub
sub
ror
int
out
fsts
aas
inc
std
push
add
xchg
divb
push
jae
xchg
imul
out
sub
repnz
fisubs
mov
adc
cltd
inc
push
mov
pusha
mov
dec
xchg
dec
popa
adc
bound
dec
mov
inc
ret
mov
cmp
stos
xchg
fistpll
das
leave
cwtl
mov
test
cs
and
data16
pop
add
ss
mov
dec
jae
shll
jle
sbb
pop
ss
add
notl
repz
shrb
ret
fdivl
mov
daa
jne
xor
shrb
outsl
lea
stc
push
mov
sbb
mov
int
add
insl
stos
out
mov
ret
add
sbb
add
scas
dec
adc
aam
push
fs
jbe
arpl
arpl
mov
imul
into
ret
push
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
jmp
add
and
std
bound
or
cltd
add
jl
addr16
jl
xchg
mov
in
lahf
xor
lock
popf
nop
popw
test
push
mov
inc
iret
dec
push
ss
and
pop
mov
pop
movsb
cli
mov
or
jo
pop
std
jo
push
mov
xchg
clc
popw
arpl
scas
ret
loope
fbstp
mov
jl
aam
jno
xor
popa
push
pop
test
ficoml
cmp
lods
mov
cmp
clc
ss
pop
pop
and
mov
aam
icebp
insb
add
add
movsb
jl
jb
out
test
rorb
xor
or
add
or
movsl
push
out
sub
pop
jno
jmp
fwait
and
clc
int
cmp
inc
pop
cwtl
mov
mov
cmc
pop
fidivs
cmc
mov
lcall
inc
sarb
push
cltd
fstl
addr16
movsl
roll
xor
xchg
push
inc
popf
pop
mov
sbb
lcall
aas
mull
dec
mov
xchg
aas
cmc
pop
sub
xchg
insl
push
jno
lcall
int3
ret
or
rolb
dec
inc
jne
lahf
xchg
xchg
cwtl
add
and
cli
loopne
xor
xor
jl
xchg
inc
test
shr
xchg
scas
fcom
mov
test
scas
push
mov
cmp
mov
je
and
inc
lds
jbe
cmpsb
out
push
xlat
imull
sahf
add
push
enter
subl
cmc
les
in
mov
xlat
ljmp
in
out
out
arpl
sarb
aaa
lds
push
cmp
andl
call
ret
or
cmp
cwtl
ds
or
loopne
int
iret
rclb
add
adc
in
bound
or
pusha
in
test
dec
sub
xchg
ds
jae
pop
mov
shll
stos
jg
fcoms
xor
xchg
pushf
push
insb
xor
pop
xchg
mov
imul
cmp
xchg
mov
shrb
sub
repz
add
stc
mov
dec
imulb
insl
pop
in
call
sub
adc
add
cld
xlat
int
pop
cld
jne
pop
dec
mov
jae
dec
lahf
add
fisttps
push
fsubr
mov
push
clc
adc
push
cmp
dec
inc
dec
pop
or
in
cmp
ror
add
push
xor
jmp
popf
jo
dec
or
cmpsb
in
or
adc
out
rcrl
imul
mov
leave
jg
or
sub
sti
sub
pop
rcll
mov
sub
push
dec
jge
mov
cmp
sbb
add
call
mov
cmp
je
mov
mov
pop
pop
jmp
imul
cmc
push
jge
lcall
jg
das
push
jl
addr16
jl
cli
lock
and
xorl
dec
lahf
ja
dec
fimull
rclb
add
push
and
mov
call
inc
pop
outsb
insl
lea
insb
ret
fiaddl
icebp
gs
arpl
or
es
adc
adc
cmpsl
call
inc
add
loop
xor
mov
jge
adc
rcl
int3
shl
ja
dec
inc
test
cli
enter
and
aas
enter
movsl
xchg
cli
inc
jg
pushf
lea
or
push
ja
xchg
jns
mov
mov
aas
orb
idivl
mov
jge
mov
orl
jle
push
add
or
mov
adc
and
mov
and
add
cs
cmp
and
test
push
pop
xchg
add
fsts
sbbb
outsl
and
or
sub
mov
mov
movsb
daa
lods
aad
mov
jnp
jl
and
sbb
rorb
fst
jecxz
add
jns
add
xchg
jge
dec
xor
pop
push
in
repnz
jo
sbb
push
addr16
sbb
inc
cld
shl
lock
sub
sbb
dec
mov
inc
inc
and
rcl
incb
bound
sub
pop
call
ret
adc
dec
nop
jg
xchg
add
add
mov
ss
mov
adc
push
adc
cmpsb
icebp
ret
loope
cltd
xchg
ret
sub
mov
je
pop
out
dec
mov
adc
test
aam
add
or
sub
loopne
dec
jae
adc
cmp
push
adc
aam
xchg
sub
aam
jae
fldt
nop
xchg
arpl
iret
out
sbbb
pop
addr16
or
push
dec
scas
jnp
pop
lret
nop
orl
pop
push
rorl
xor
xchg
mov
ret
cltd
or
outsl
cli
jecxz
repnz
inc
jmp
xchg
mov
lea
sbb
push
imul
movsl
outsb
sbb
sbb
loope
dec
mov
das
inc
add
adc
mov
call
or
aas
in
ror
jb
mov
jne
cltd
mov
pop
int3
mov
push
scas
mov
inc
inc
inc
sbb
lods
test
sub
xor
jg
mov
cmc
push
scas
jno
xchg
ficoms
dec
gs
es
sti
fldcw
mov
test
or
pop
int
lcall
leave
ret
push
mov
sub
leave
ret
push
mov
push
push
neg
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbb
movl
movl
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
pushl
push
push
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
and
push
mov
xor
mov
adcl
push
subl
mov
add
cmp
je
jmp
adc
icebp
popa
mov
push
inc
push
enter
adc
jg
jl
ds
pop
mov
dec
xor
adc
dec
mov
xchg
repz
xor
push
jg
mov
add
ja
test
mov
stc
fs
sti
mov
xchg
adc
ljmp
dec
out
in
data16
mov
mov
ljmp
in
or
mov
pop
scas
insb
cltd
add
fs
inc
cmpsl
je
out
shll
cmp
xchg
outsl
cmpsb
adc
aas
repnz
jle
int3
pop
aam
and
leave
xor
pop
lea
lahf
inc
jne
mov
inc
and
xor
jl
insb
and
cli
sub
xlat
cmp
in
adcb
push
stos
push
mov
pop
inc
mov
push
pop
inc
xchg
in
inc
xor
mulb
shll
cmc
ret
stos
cltd
mov
and
mov
push
pop
dec
dec
mov
push
xchg
jns
or
ja
jae
insl
popf
mov
shrb
jne
add
push
push
test
decb
xor
and
mov
dec
enter
sarb
data16
mov
pop
or
mov
lea
scas
shrl
es
mov
clc
xchg
fs
or
movsl
outsl
les
aam
xchg
std
sahf
cmp
sub
jp
outsl
dec
ljmp
cmpl
gs
jo
lods
inc
fs
xchg
test
xchg
movb
imul
dec
out
cmp
xchg
sub
and
or
push
aam
in
mov
cmp
gs
and
dec
pop
adc
xor
xchg
mov
and
and
cmp
jle
jge
push
adc
push
clc
mov
xor
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
jmp
sbb
mov
outsl
call
mov
sbb
jl
and
push
mov
cmp
adc
mov
push
dec
push
xchg
stos
add
mov
pop
repz
mov
jnp
fmulp
pushf
or
in
push
mov
imul
lea
mov
push
sub
nop
lods
lea
stc
decl
jmp
cmpsl
loop
adc
in
jge
stos
shrb
xchg
cwtl
bound
rcrl
inc
or
int3
lods
xorb
loop
dec
xchg
xchg
test
push
push
sbb
pop
subl
sub
mov
pop
out
rcrb
adc
pop
lahf
cwtl
in
and
insb
xchg
sarb
adc
push
xchg
mov
and
lahf
pusha
pop
mov
movhps
aas
lds
gs
pop
adc
add
sub
mov
xchg
addb
or
ja
stos
mov
or
aad
add
lods
sub
bound
xchg
cmp
sahf
aam
mov
pop
ja,pt
and
in
adc
xchg
cmp
jecxz
mov
mov
shll
sbb
add
mov
iret
arpl
add
and
outsl
sub
jnp
push
sbb
std
jb
push
push
fs
stc
mov
shrb
cmc
and
test
out
pop
inc
cs
les
inc
in
jb
xchg
fs
cmp
fwait
clc
aas
popa
xor
ljmp
push
and
pop
movsb
xor
leave
mov
loopne
sbb
mov
and
mov
cltd
cmp
mov
lahf
cwtl
popf
push
push
pop
insb
jae
dec
testl
lcall
add
add
mov
sarl
mov
sbb
jl
jg
jl
add
les
mov
push
cli
dec
pop
push
outsb
push
xchg
mov
pusha
stos
out
push
xchg
lcall
push
pop
outsb
lcall
ss
shll
inc
pusha
in
pusha
sub
xor
js
dec
jae
imul
mov
outsb
popa
inc
or
lret
jns
inc
adc
pop
dec
lcall
pop
inc
push
jle
in
xchg
xor
je
push
lds
into
xlat
jmp
cmp
adcl
sbb
ficoml
or
inc
hlt
stc
aas
clc
mov
adc
jne
adc
push
aaa
sub
shrb
dec
int
or
jge
jne
xor
insb
mov
cwtl
push
unpcklps
scas
add
lcall
add
pop
scas
sbb
movsl
outsl
outsb
mov
adc
sub
inc
xchg
or
inc
dec
fdiv
push
pop
int3
xchg
fiaddl
addr16
aaa
into
sub
pushf
nop
mov
add
ds
cwtl
mov
pop
cwtl
xchg
mov
cmp
lock
aad
inc
pop
gs
out
rorl
scas
jns
mov
pop
pushl
outsb
pop
ja
cmp
cli
mov
cld
in
stc
pop
jg
add
dec
icebp
sbb
jecxz
dec
iret
insb
sbb
pop
das
mov
jns
jb
and
mov
add
mov
push
pop
popa
js
sub
arpl
fstpl
xchg
lock
inc
in
jg
cmp
sbb
xor
and
gs
push
mov
adc
inc
jns
dec
jmp
jl
fimuls
xchg
test
loopne
pop
jno
dec
and
pushf
into
pop
test
mov
adc
out
cld
data16
sbb
mov
jecxz
in
push
imul
cld
jmp
addr16
or
arpl
aas
cwtl
pop
xlat
adc
gs
jl
insl
jg
jl
add
pop
addr16
push
outsl
push
cmp
xor
out
movsl
xchg
jne
xchg
test
xor
or
out
sbb
adc
sub
pop
pop
lods
imul
int3
push
mov
push
inc
into
imul
push
nop
out
cmp
ret
test
push
setb
dec
nop
dec
fldenv
push
leave
adc
mov
jne
in
mov
sbb
push
movsl
cs
dec
lcall
in
pavgb
fsubrs
mov
clc
push
sub
pop
cmp
imulb
imul
lret
xchg
aas
cwtl
je
xchg
daa
loopne
sub
in
leave
lods
loopne
adc
js
dec
push
sahf
js
leave
lock
stc
into
hlt
push
inc
aad
sub
fisubrs
adc
imul
mov
cmpsl
nop
pop
imul
mov
and
fsubs
ss
data16
stos
cmpb
mov
mov
and
xchg
cmp
es
fcomps
fistps
mov
adc
sub
dec
fisttpll
pop
dec
mov
mov
je
arpl
movsl
pop
push
or
mov
mov
lock
stos
mov
scas
adc
js
cmc
xor
adc
mov
pop
add
xchg
jns
push
push
enter
ror
mov
shll
pop
popf
mov
insl
push
sub
mov
sti
aas
and
aaa
data16
sbb
dec
ret
mov
imul
pop
sarb
fnstenv
bound
fiadds
insl
lock
stos
pop
cmp
pop
iret
mov
mov
scas
or
sub
andl
and
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
jmp
dec
push
sbb
jae
sti
adc
fisttpll
jl
insl
jg
jl
sub
rcll
and
mov
out
xor
in
cmpsb
push
sahf
add
fstpl
and
mov
jb
jle
mov
add
lods
add
data16
imul
mov
pop
sar
stos
arpl
push
mov
cmp
xor
data16
es
add
es
test
repnz
cmp
jns
pusha
dec
jp
xorl
in
mov
or
aas
add
std
jge
xor
and
sbb
push
call
mov
sub
hlt
jb
je
gs
push
mov
int3
call
ret
stc
add
lods
pop
add
push
outsb
xchg
aad
mov
dec
je
lret
sub
shrl
hlt
aam
adc
sub
add
adc
adc
sub
lods
enter
pop
xchg
jp
add
fs
out
outsl
push
and
clc
lods
ds
xor
gs
gs
mov
xchg
ss
cld
jns
mov
dec
and
cld
pop
jecxz
sahf
stos
adc
inc
bound
lods
hlt
cwtl
sahf
add
xor
pushl
xor
sub
insl
movsb
aas
sub
int
inc
inc
sub
gs
hlt
hlt
dec
test
pop
dec
mov
xchg
cmp
cmpsl
adc
adc
or
sti
sbb
xor
mov
mov
movsb
outsl
push
push
cmp
xchg
or
int3
ljmp
add
mov
test
cmc
jno
lcall
push
movsb
and
int3
or
ja
jbe
inc
movsb
cmpsl
adc
nop
sbb
dec
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
jmp
addr16
icebp
jb
insl
add
pop
push
mov
jg
jl
fst
and
push
jns
hlt
and
xchg
fdiv
stc
push
mov
sahf
add
mov
jge
cmp
call
or
inc
push
push
stc
pop
lret
stos
in
arpl
in
add
int
pop
and
lret
jbe
clc
mov
pusha
jbe
push
addb
mov
mov
sub
mov
mov
jmp
sbb
jbe
dec
mov
add
lretw
jmp
fadds
sub
jne
lods
fcomi
ret
pop
imul
fdivrl
jb
jnp
inc
fistps
mov
inc
adc
xchg
sbb
std
shrl
ds
push
divl
push
in
sahf
lret
lods
pop
sub
mov
mov
cmpsb
mov
lcall
jp
sub
adc
xchg
pusha
cmpsl
loope
push
mov
pop
sbb
cli
xchg
das
addr16
mov
daa
mov
enter
dec
sahf
cmp
jmp
push
pop
mov
mov
sub
adc
in
rcll
data16
rcll
mov
sub
mov
inc
inc
xchg
mov
add
xabort
int3
xor
jge
aas
test
stos
bound
mov
popa
lea
mov
mov
push
and
dec
push
repnz
ja
pop
fcos
cmp
aad
sarl
testb
inc
test
inc
mov
inc
sub
enter
push
sub
cmp
insl
aad
xchg
mov
jge
pop
cli
shl
fucomip
ss
xor
mov
mov
insl
pop
xchg
dec
push
in
dec
add
loopne
inc
imull
repz
xor
mov
dec
iret
sbb
fldl
orl
sub
xorl
mov
sbb
mov
subl
xor
sub
mov
xorl
add
movzwl
mov
mov
and
movb
sub
lea
mov
adc
mov
movzwl
or
mov
mov
xor
subl
sub
mov
movl
movl
add
mov
sbb
mov
jmp
mov
inc
addl
and
add
enter
jl
jg
jl
push
push
int
je
xchg
jecxz
sbb
cs
and
shll
push
aas
popa
in
aas
pop
push
push
lock
inc
mov
loopne
and
test
mov
mov
or
pop
xlat
and
bound
xchg
add
adc
sbb
shlb
lea
ret
add
mov
jg
xchg
icebp
mov
push
int
leave
push
add
xor
pop
orl
das
int3
mov
mov
aaa
loop
out
add
xchg
shrl
out
cmp
pop
inc
stos
popa
int
es
test
nop
mov
mov
pop
dec
pop
mov
test
loop
adc
push
enter
mov
jae
loope
xor
adc
insb
push
mov
call
daa
mov
enter
xor
test
or
sbb
imul
stc
outsl
adc
or
std
negl
insl
ljmp
test
cltd
sbb
pop
mov
dec
test
mov
jne
cld
push
insl
outsb
mov
xchg
out
enter
and
fadds
repz
mov
imul
popf
mov
repz
mov
xlat
pop
test
mov
fldcw
sbb
sti
mov
sub
push
add
dec
les
push
mov
addl
pop
in
insl
add
push
pusha
std
pushf
adc
insb
or
daa
sbb
daa
inc
xor
iret
sbb
bound
sarl
xor
orl
xor
addl
mov
orl
jmp
sub
mov
mov
cmp
xchg
or
jl
jg
jl
push
xchg
xchg
inc
xchg
test
outsb
arpl
pop
repz
mov
or
pop
pop
jecxz
jns
ror
push
jp
icebp
cs
iret
add
push
pop
mov
mov
fcomps
inc
pop
hlt
lods
pop
std
lret
test
popa
and
fcmovbe
hlt
lea
aaa
inc
or
scas
add
in
sub
sbb
out
sbb
mov
inc
xchg
mov
sbb
addl
or
sbb
arpl
movsl
add
lock
fidivs
popa
jbe
loope
mov
push
push
cmp
pop
cltd
addb
aam
testb
jne
mov
or
insb
fisubrs
fisttpll
into
nop
jle
push
inc
pop
movsl
daa
xchg
xchg
inc
movsl
xchg
add
add
pop
jns
and
icebp
mov
js
scas
out
inc
lret
leave
dec
xor
xchg
pop
cld
mov
outsb
push
fmuls
pop
push
test
pop
mov
int
inc
out
lcall
test
daa
insl
jle
pop
dec
imul
xchg
test
lcall
mov
or
sbbb
aas
xchg
inc
mov
sbb
sti
repnz
jmp
iret
push
insb
inc
mov
data16
adc
jne
popl
je
xchg
jne
sub
arpl
imul
pop
sub
bound
cs
das
sbb
xchg
rcll
mov
sub
lret
pop
loopne
out
cmp
mov
cld
subb
xor
mov
push
or
xchg
cmp
into
push
add
jmp
movl
mov
movl
jmp
roll
push
aad
ror
mov
sbb
adc
and
jg
jl
sbb
jne
push
fisttpl
ficompl
jl
jb
in
cmp
dec
adc
add
sbb
shlb
iret
lcall
and
push
jp
push
pop
loopne
sub
ret
jbe
rcl
cwtl
stos
lea
pop
test
push
stos
dec
jae
mov
or
jo
pop
lret
arpl
mov
cmpsb
push
pop
sahf
jmp
lret
imul
jb
push
fimuls
mov
dec
lods
fdivl
mov
jb
sbb
out
jg
mov
jne
push
loop
fnstsw
cld
add
or
in
sub
jecxz
jp
lods
imul
je
test
mov
mov
inc
mov
push
lret
xchg
push
mov
xchg
sahf
xchg
scas
dec
adc
dec
jno
enter
xchg
pop
dec
mov
xchg
leave
mov
daa
mov
fwait
loop
iret
loop
mov
and
shrl
xchg
cmc
fisubrs
in
loop
push
pushl
lret
mov
and
addr16
lahf
xor
std
inc
push
pop
mov
adc
or
loopne
push
sbb
add
lds
pop
pop
add
push
pop
pop
aaa
pop
cld
cmp
ret
inc
sub
cmp
dec
cmc
lods
xchg
sbb
daa
jl
test
and
imul
sbb
arpl
mov
and
test
lret
xorb
inc
test
test
mov
fyl2x
dec
cmp
repnz
inc
movl
cmp
jb
sub
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
orl
mov
xor
xorl
add
cmp
movl
je
sbb
push
or
jmp
and
sbb
push
loope
pop
repz
and
jg
jl
mov
and
xchg
ljmp
and
mov
adc
mov
mov
mov
arpl
insl
es
out
mov
cmp
sbb
push
sarl
push
adc
jmp
inc
inc
xchg
cmc
mov
aam
scas
inc
out
pop
or
dec
xor
iret
fdivs
dec
mov
and
movsb
sub
data16
sub
push
mov
dec
ds
sub
adc
imull
and
aas
jno
mov
inc
mov
dec
fistpll
push
and
leave
add
out
sarl
ljmp
xchg
movsb
lea
add
loopne
or
add
cs
pop
loop
roll
fcmovnb
outsb
aaa
and
out
cli
into
ljmp
dec
arpl
sarl
xchg
ds
and
fcmovnu
ret
push
mov
addb
dec
xor
inc
hlt
ljmp
mov
testb
mov
dec
jg
int3
lcall
lcall
fucomip
mov
std
outsl
inc
add
push
rcr
cmp
adc
add
test
shll
and
jnp
adc
and
lds
adcl
xor
or
sub
xchg
cmp
cmpsl
test
xor
push
push
xor
in
gs
sbb
push
or
or
das
imul
ljmp
xlat
lcall
pop
mov
or
sbb
mov
xorl
xor
movzwl
sbb
mov
addl
add
movzwl
mov
mov
movzwl
xor
xorl
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
jmp
das
or
pop
out
sub
xor
test
jl
add
push
repz
xchg
adc
cmp
push
lods
add
pop
in
jae
adc
scas
in
push
mov
sbb
mov
cmp
xchg
outsl
mov
out
jl
loope
hlt
shlb
lds
jo
adc
adc
nop
push
xchg
cmc
sub
js
dec
sub
ds
push
inc
sub
sub
jmp
out
lods
mov
addr16
cwtl
into
push
pop
enter
sub
push
popf
stos
sub
cmovge
push
jge
mov
inc
dec
std
shlb
mov
sbb
pop
xchg
aad
test
stos
jmp
movsl
fildll
js
fisubl
lock
stos
and
in
imul
adc
aam
mov
adc
jecxz
insl
jns
adc
enter
testl
jmp
movsl
mov
xchg
mov
negl
out
dec
dec
adcl
ret
add
scas
xchg
lahf
repnz
add
cwtl
stos
cmp
push
xchg
mov
fbld
aad
jbe
xchg
pop
leave
jbe
inc
cld
dec
cmp
mov
lds
test
call
push
das
mov
out
mov
in
test
loopne
in
test
jne
pop
data16
mov
jmp
dec
sbb
test
out
lods
sub
dec
jbe
push
jb
mov
insl
mov
mov
leave
lods
cmp
dec
sbb
sbb
fdivs
roll
mov
mov
mov
mov
cmp
je
mov
jmp
adc
mulps
pop
jbe
sti
lahf
dec
xchg
jge
xchg
sub
stos
jg
jl
sti
jns
sarl
pop
cs
out
xchg
pop
outsl
ss
gs
push
xlat
aam
std
nop
or
in
cmp
or
ficoml
xor
add
mov
daa
out
leave
jne
test
jnp
xchg
pop
fstl
sbb
push
out
fwait
scas
xor
in
mov
inc
mov
mov
pop
in
add
jns
sahf
insl
idivl
fldt
dec
movsb
inc
andl
loop
and
or
pop
push
sbb
cmp
sub
outsl
fstpl
xor
inc
pop
rolb
xchg
dec
add
mov
sbb
mov
sub
mov
jo
ds
mov
cld
ficomps
adc
xchg
inc
mov
pop
mov
mov
roll
lds
pushf
push
xchg
rcl
outsl
in
nop
jb
pusha
and
insl
cmp
push
popa
jae
mov
icebp
mov
cmp
cmc
outsb
xchg
cmpsl
cwtl
jmp
lods
fisubl
mov
sub
cli
into
pushf
fmul
sbb
repnz
cmp
lods
push
sbb
adc
xchg
jne
pushf
mov
sbb
xor
mov
mov
insl
jmp
push
ss
push
push
cmc
das
add
pop
testl
mov
outsb
iret
iret
cs
sbb
andl
js
int
and
dec
push
push
sbb
aas
cmp
test
es
xor
clc
out
or
pop
jecxz
xchg
popf
pop
mulb
mov
mov
cmp
jne
mov
mov
movsbl
xor
jmp
test
xchg
jge
int
add
outsb
jl,pn
stos
jg
jl
pop
jb
aam
push
stos
and
jle
push
dec
adc
adc
push
inc
mov
pop
pop
mov
test
adc
imul
pop
jno
add
mov
ret
test
lret
mov
rcrl
mov
mov
xchg
xor
cmp
sarl
jo
push
ret
mov
adc
xor
pop
push
mov
inc
pop
imul
fwait
test
sbb
sub
in
int3
cltd
out
fldl
arpl
divb
fldenv
mov
push
stos
or
nop
or
mov
pop
jbe
fcoms
cmc
sub
lahf
loope
mov
mov
push
add
mov
xor
sbbb
or
and
fnstenv
sub
push
das
mov
sub
fs
or
lret
mov
rcll
mov
sbbl
jns
cwtl
cmc
or
mov
std
lds
out
adc
bound
lods
xor
data16
rorl
fiaddl
fs
push
push
xchg
pop
adcb
push
rcrl
les
dec
jae
cs
mov
or
mov
popa
lds
and
data16
daa
push
dec
shl
ret
xchg
enter
mov
inc
rorl
fdiv
rorl
dec
jle
fisubrs
loopne
sbb
and
xchg
add
add
or
or
aad
dec
jb
test
cmp
pop
push
daa
fwait
adcb
fcmovb
shlb
rorb
test
add
add
inc
call
lea
mov
mov
addl
mov
mov
xor
jmp
das
dec
sbb
pop
imul
xlat
adc
adc
jg
jl
test
jecxz
out
out
nop
scas
push
test
or
mov
jp
mov
xchg
add
jmp
mov
ds
pop
insl
adc
xchg
push
jb
mov
dec
nop
cmpsl
jno
fwait
ret
and
dec
fs
inc
gs
add
int
push
sbb
lods
cmp
mov
ja
bswap
mov
addb
push
mov
dec
mov
sub
jae
sub
sbb
fidivrl
cmp
mull
mov
mov
std
xor
mov
rclb
popa
bound
inc
or
inc
pandn
idiv
insl
or
xchg
dec
dec
loop
mov
dec
mov
sbb
fisubrs
adc
les
fbld
sbb
test
leave
fcom
shl
enter
mov
test
enter
fildl
jmp
cli
lahf
fisttpll
mov
cmp
subb
ret
dec
sahf
mov
and
ja
stos
clc
cmpsb
int3
test
push
movb
iret
std
ja
inc
shr
popa
mov
jmp
imul
mov
inc
xlat
mov
cmpsb
repz
jno
fs
lahf
jl
out
ss
ljmp
mov
inc
dec
and
dec
ja
mov
fmull
adc
daa
push
subl
orb
inc
and
jbe
inc
mov
shlb
lret
mov
add
pusha
or
cmp
adc
inc
or
inc
or
and
decl
mov
add
mov
pop
leave
ret
push
mov
jmp
orl
mov
mov
sub
jns
jl
cmp
pop
out
gs
in
rcr
add
push
push
stc
mov
imul
sbb
cmc
ss
sarl
cwtl
push
hlt
and
sub
add
xchg
push
out
cmc
mov
es
mov
push
adc
sub
mov
int3
loope
out
roll
orl
mov
fstp
mov
mov
or
lock
mov
dec
stos
js
test
in
ds
cmpsb
in
sub
dec
lods
xor
adc
sbb
inc
movsb
cwtl
mov
test
repz
iret
cmpl
notl
mov
inc
mov
sub
shrl
cmpsl
xchg
stos
cmpsb
xor
inc
test
push
inc
and
sbbl
pop
pop
shll
fldenv
call
sbb
loope
rclb
into
gs
mov
sbb
xlat
lret
adc
arpl
out
ret
iret
mov
push
jg
in
dec
dec
repnz
das
cltd
aaa
jns
and
stc
jl
sti
ljmp
out
xchg
or
or
and
push
mov
sti
lods
scas
push
push
je
dec
add
jae
call
jnp
cli
dec
sbb
and
dec
stos
xchg
mul
jnp
jno
outsl
fistpl
push
sub
sahf
jne
shlb
mov
pop
cmpl
imul
push
mov
shll
cltd
push
pop
movsl
cmpb
iret
cmpsl
push
test
in
dec
xor
mov
pop
enter
ucomiss
cmp
cli
shlb
inc
subl
sub
sbb
test
fs
call
test
mov
fimuls
add
test
popa
hlt
fsubl
pushf
das
push
loopne
sbb
cmp
in
movb
das
fstpt
xorps
stc
jmp
aam
add
xorb
outsb
sti
xorb
pop
mov
ja
xchg
xchg
in
fsubp
jle
cld
mov
mov
fucomp
lods
inc
enter
xchg
packssdw
fs
add
shlb
xchg
xchg
lock
stos
ret
and
pop
inc
inc
insl
xor
jne
mov
pop
or
mov
xor
test
sbb
ret
xchg
xor
addr16
cmp
movsb
xchg
jl
lret
int
and
jae
jmp
jp
test
ds
lcall
inc
add
stos
in
xor
dec
scas
gs
cli
or
in
nop
rcrl
pop
mov
ret
push
mov
xchg
mov
adc
inc
lret
pop
sbb
adc
xlat
fimuls
test
mov
xorb
sub
sbb
mov
mov
mov
or
jnp
pushf
or
xchg
cmp
xchg
lea
push
imul
loope
mov
cmpsw
sti
cmp
scas
inc
in
out
xor
pop
xchg
mov
test
mov
pavgw
jg
adc
push
sahf
jg
add
mov
out
lret
lcall
push
sbb
ficoms
dec
cmp
hlt
incb
push
mov
push
insl
in
push
add
lcall
std
gs
pop
int
imul
push
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbb
movl
jmp
xchg
dec
xor
dec
rcll
push
xor
dec
or
jl
mov
jl
stos
out
je
jecxz
popa
in
ja
add
inc
iret
pop
mov
jmp
lods
out
pushf
jno
jb
fimull
pop
fs
sbb
imul
loopne
cmpsl
pop
add
rol
data16
jmp
jbe
jp
ret
les
inc
repnz
fldl
push
pop
mov
mov
in
pop
push
std
dec
imul
insb
sub
testb
bound
imul
sbb
xchg
inc
nop
hlt
cmp
ret
subb
shll
stos
mov
push
repz
nop
movsl
sub
lods
lds
out
rolb
add
dec
lea
cld
or
mov
adc
out
dec
mov
fs
daa
mov
imul
push
add
hlt
es
jle
pop
mov
mov
enter
mov
jp
ljmp
popf
cmp
pop
pusha
hlt
ror
jbe
and
mov
cwtl
lcall
mov
lds
and
push
lods
push
mov
lret
mov
xor
push
imull
lods
fcomps
gs
lds
je
push
sarl
shr
out
js
outsl
pop
xor
idivl
mov
pop
and
lds
jle
xchg
gs
push
xchg
mov
ret
xor
push
jae
mov
inc
mov
sub
mov
pushf
inc
andl
test
sar
mov
push
inc
popa
sbb
loop
aam
scas
sbb
int3
push
ds
orb
ds
lods
flds
mov
je
cmpsb
fstp
push
adc
add
fcmovb
sbb
aad
pop
cld
out
inc
rcl
mov
cmpsl
xorl
sbb
hlt
xor
inc
push
lret
arpl
lods
sub
mov
aas
daa
xchg
insl
vmovdqa
and
push
jecxz
gs
fcom
clc
xchg
hlt
dec
out
push
repz
in
inc
js
stos
cwtl
fmuls
pop
jge
ds
outsl
loope
or
push
sbb
cld
inc
lds
ret
pop
test
jnp
adc
jae
lahf
push
fwait
sub
push
sbb
or
test
cli
jno
and
bound
sbb
pop
data16
xchg
clc
sbb
ret
lds
enter
mov
pusha
mov
addl
xchg
test
popf
push
sbb
adc
xchg
rclb
adc
jecxz
mov
loope
xchg
jns
add
cmc
mov
cmp
or
pusha
sahf
ficomps
mov
xor
leave
cmp
in
and
inc
in
scas
fsubs
ds
ds
clc
dec
dec
test
or
xchg
pusha
sbb
cwtl
xchg
dec
fistpl
inc
repnz
nop
inc
roll
dec
fdivl
test
sbb
out
mov
sub
cmc
inc
fwait
jnp
movsb
popa
gs
and
insb
repnz
jg
sbb
cmp
imul
push
mov
pop
push
jno
stos
arpl
int
fucomp
cmp
push
idivb
push
push
pushl
testl
adc
jle
das
ja
jno
testl
xchg
inc
repz
and
or
fidivs
xor
and
xchg
push
movl
and
mov
mov
xor
push
movl
mov
mov
and
xor
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xor
add
mov
sbb
xor
mov
add
jmp
aam
in
insl
jb
imul
xor
jns
jl
jmp
rcr
mov
in
daa
ficoml
movsl
fwait
arpl
not
inc
iret
ds
cmc
jno
sbb
sbb
fstps
lcall
cmp
cmp
leave
mov
test
into
pop
cwtl
mov
ficomps
outsl
mov
popa
jge
clc
dec
xchg
and
mov
idivb
or
push
lret
shrb
std
push
arpl
adcl
pusha
cmc
mov
out
add
push
or
enter
mov
or
mov
jp
in
sub
mov
repz
dec
mov
arpl
test
fs
adc
mov
mov
arpl
mov
mov
iret
sbb
psadbw
stos
ja
out
cmp
adc
in
mov
xor
les
loope
xchg
loope
int3
sbbl
cs
jbe
add
pop
cmc
sbb
xchg
jae
jb
popf
push
dec
sbbl
xchg
inc
repnz
xchg
sti
add
bound
sub
fcmovne
jo
adc
repnz
popf
data16
lret
xchg
xor
push
int
lahf
scas
rcrl
fdivl
fnstsw
dec
arpl
sub
dec
incb
jno
jp
sarl
pusha
fldenv
sahf
mov
lods
adc
pop
push
sub
or
call
sub
sbb
int
sbb
adc
movsl
pop
addr16
out
repnz
cltd
shlb
out
stos
jbe
cwtl
add
sub
xchg
jg
pop
dec
cmp
ja
inc
mov
push
mov
pop
daa
push
fnsave
clc
xor
jl
cmpsb
lret
fistps
mov
xor
aam
adc
das
and
mov
push
clc
adc
inc
mov
mov
or
js
negl
pop
push
dec
xchg
pop
fcomps
or
sub
jnp
daa
stos
sbb
cmp
dec
in
sbb
pop
aad
test
mov
fdivrs
push
call
ja
insb
fcmovnbe
xlat
xor
adc
xchg
or
ja
or
fwait
jge
fldt
hlt
fnstenv
cwtl
mov
dec
in
xor
ss
ja
loopne
and
adc
mov
ret
rol
or
addr16
lods
sbbb
popf
popl
cld
jg
pushf
in
out
push
jo
int
push
addr16
mov
mov
arpl
les
inc
scas
jge
std
inc
or
sub
add
les
scas
dec
sbb
sub
pop
test
push
jns
lods
clc
mov
xor
adc
lods
sbb
mov
xchg
repz
sub
push
push
mov
stos
mov
lahf
fwait
inc
pop
iret
cmpsl
jb
sub
dec
shll
aas
pop
cmp
lds
inc
add
xchg
xor
and
jle
nop
xchg
and
push
xorb
and
fisttpl
ja
in
xchg
pushf
fisttpll
or
push
les
adc
es
cli
xor
and
jbe
lock
jne
clc
pop
mov
out
pop
and
add
fsubs
lret
fwait
pop
dec
push
jae
fwait
out
pop
sbb
lahf
or
shl
stos
outsl
cmp
bound
mov
xchg
gs
or
lods
mov
fldenv
mov
jne
lea
add
je
mov
lret
jo
add
testl
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
jmp
bound
jge
pop
jo
mov
aas
jl
mov
jl
out
pop
push
sbb
inc
repz
push
pop
ljmp
sbb
mov
lret
fiaddl
push
push
in
js
xor
sarl
jno
clc
inc
bound
mov
mov
shrb
das
stos
mov
cld
daa
sub
js
xchg
add
xchg
call
es
repz
mov
push
sbb
adc
push
shll
jl
out
add
xchg
enter
push
mov
movsb
cmp
mov
or
and
popf
rorl
jg
dec
jns
in
mov
inc
mov
mov
or
cmpl
sub
xchg
and
jge
repz
outsb
jbe
dec
std
aas
sub
lods
outsl
push
cli
add
add
cmp
int
pop
lods
mov
xor
pop
mov
adc
dec
dec
sub
pop
shrl
xor
jb
daa
jg
xor
pop
mov
dec
pop
push
xchg
or
dec
lahf
or
ret
xor
js
lcall
shll
sub
bound
int
push
cmp
jns
cld
lret
mov
mov
into
mov
push
lock
jg
mov
adc
ret
enter
xor
sbb
addr16
aas
aad
pop
cmpsl
mov
pop
sub
sbb
int3
adc
dec
jp
and
or
ret
adc
dec
adc
jmp
daa
ljmp
mov
inc
ljmp
imulb
xor
in
clc
inc
cmp
in
lods
cmp
xor
iret
xor
mov
dec
aaa
frstor
pop
mov
pop
fwait
push
out
cmpb
insb
push
sub
push
sahf
adc
push
movsl
mov
xchg
movsb
pop
mov
into
jo
jmp
out
movsb
push
arpl
arpl
fcomps
mov
ljmp
add
rolb
jle
mov
jnp
ljmp
xchg
stc
mov
sahf
lahf
fstps
test
mov
popf
sbb
sub
or
fisubs
xchg
jae
nop
and
movsb
mov
dec
push
orb
mov
not
mov
fcmove
xchg
cmpsb
fsubrs
sbb
mov
sbb
mov
cmp
cmp
loop
mov
lahf
stos
outsl
pop
dec
ds
stc
minps
movsb
int3
xorb
insb
push
aam
sar
add
shll
push
pop
aad
addr16
nop
adc
addr16
sub
outsl
xorl
nop
andb
mov
and
pop
and
mov
push
aaa
mov
stc
fmul
dec
cld
lahf
xchg
fsubr
fs
xchg
js
pushl
aaa
sub
mov
dec
pop
xchg
leave
xchg
cwtl
sbb
jnp
ja
scas
and
jae
leave
int3
call
dec
cmc
or
fs
rcrb
mov
mov
arpl
andl
cmp
iret
movsb
movb
add
sub
push
sbb
xchg
call
imul
sub
cmp
inc
cmp
popf
adc
ljmp
inc
decb
rol
addr16
mov
ficomps
out
fs
icebp
inc
fstpl
cmp
pop
cmp
adc
push
pop
add
int
sahf
mov
clc
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
movl
jmp
fwait
dec
jge,pt
push
mov
push
jno
dec
xor
jl
xor
jl
out
mov
lods
in
sub
push
dec
enter
sbb
mov
adc
jle
mov
icebp
in
mov
xchg
mov
or
push
jo
imul
and
es
xlat
cmp
adc
shll
adc
je
out
pop
inc
push
xchg
pop
pop
test
daa
iret
enter
inc
jnp
inc
and
js
adc
cmp
out
sub
cld
call
mov
leave
mov
adc
mov
lcall
dec
sub
or
sbb
sbb
iret
fisubs
xor
mov
lods
call
cmp
xorb
scas
leave
inc
shl
cmp
sbb
arpl
push
jne
mov
sub
mov
ljmp
in
and
and
or
xchg
jle
push
push
jg
sub
lds
loop
mov
fistpll
sub
scas
out
add
hlt
dec
cs
fcomps
lahf
gs
xchg
in
xor
adc
pushf
push
mov
dec
adc
aaa
stos
mov
clc
mov
push
cmc
ds
faddl
out
jl
inc
inc
repz
dec
icebp
out
or
jl
int3
faddl
push
and
sub
subl
lock
loopne
jb
insl
xlat
pop
scas
xor
cmp
dec
out
insb
lret
mov
hlt
ret
int3
fists
mov
out
daa
dec
out
add
lcall
ja
out
jle
sbb
or
inc
cmp
data16
pop
pop
jb
and
out
ds
call
pushf
hlt
fnsave
lock
mov
cli
movsb
pop
repnz
and
jp
pop
lret
test
icebp
push
orb
inc
sub
aaa
shrl
jno
lods
pusha
xor
add
cwtl
and
lods
movsl
xchg
jb
sub
push
addr16
rorl
cmc
jp
mov
je
mov
dec
adc
and
orl
mov
mov
movl
movl
movl
cmp
movl
jne
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
fld
addr16
outsb
jno
add
or
call
jle
jl
lahf
out
mov
sub
fxch
xor
xchg
xchg
adc
mov
subl
add
jmp
xor
movsl
mov
addr16
push
xchg
hlt
fldt
adc
outsb
mov
fnstsw
arpl
loop
mov
mov
gs
push
fsts
or
mov
lret
push
jnp
divl
test
or
das
ss
subl
mov
pop
sbb
jne
test
and
mov
test
dec
mov
jmp
loop
stos
jge
sbb
xor
and
lds
dec
jl
mov
imul
mov
cwtl
ret
add
xchg
sbb
sub
fists
xor
pop
mov
push
mov
xchg
fdivrs
xchg
je
mov
arpl
std
arpl
lods
out
mov
lret
nop
pop
sbb
iret
or
popa
inc
fdivs
mov
xchg
into
enter
jnp
ror
jg
sub
lret
stos
in
fcmovnb
lds
loop
mov
stc
sbbl
je
xchg
jae
fucomip
xchg
mov
cld
sbbl
cmpsl
sbb
stc
mov
pop
xor
dec
into
pop
insl
or
sub
movsb
xor
mov
or
push
rcll
scas
jmp
in
xchg
scas
and
pop
iret
out
push
cmpsl
addb
fiadds
test
jl
loopne
lret
arpl
test
dec
test
mov
pop
lcall
scas
in
xchg
rcr
push
xor
push
and
loopne
outsb
mov
divl
in
sub
xchg
fwait
rolb
jae
dec
mov
mov
es
jp
push
mov
icebp
cltd
dec
aas
xor
lret
mov
decl
testb
rol
fistl
adc
mov
ret
movsl
dec
test
add
adc
jge
mov
shll
popa
and
mov
add
push
add
add
int3
mov
jo
xchg
jmp
push
test
push
lods
jl
xor
jl
jge
sbb
ja
xlat
pop
imul
push
rorb
and
sub
jle
cmp
gs
jecxz
test
mov
and
movsb
sub
push
sahf
pop
loopne
popa
test
sahf
jne
in
xor
pop
adc
sub
mov
pop
aad
aas
mov
mov
repnz
jp
inc
test
stc
jno
es
sub
sub
inc
and
bnd
mov
mov
push
out
cmp
jo
loop
ss
cmpl
clc
sbb
imul
mov
push
popw
aad
imul
in
les
adc
lock
mov
cld
frstor
inc
or
mov
adc
xor
fimuls
rolb
aam
add
xchg
lret
in
dec
fisubl
cmpsl
ret
inc
pusha
xor
arpl
lahf
and
sbbl
cli
xor
jmp
stos
push
inc
push
jnp
scas
aaa
vxorps
cmp
cmp
jl
and
and
push
dec
lds
mov
jmp
push
inc
sub
push
sahf
orps
jmp
rcll
add
ljmp
dec
or
loopne
aas
xchg
jl
sti
ficoml
pop
cmp
out
movsb
mov
xor
xchg
mov
dec
pushf
mov
jge
dec
push
pop
repz
icebp
jp
iret
xor
jecxz
add
in
jne
push
fwait
mov
xchg
jg
aad
cwtl
call
int
fiaddl
cmpsb
sahf
jp
pop
icebp
or
bound
call
jnp
movsb
sub
add
fildll
les
dec
in
xor
aas
cmp
negb
cmpsl
daa
in
inc
xchg
loopne
cmpsb
ss
test
shrl
pop
inc
je
in
xor
and
jge
testb
and
adc
mov
outsl
jmp
test
xchg
adcl
xchg
xor
adc
cmp
push
das
nop
mov
into
rorl
xchg
xchg
mov
andb
mov
xlat
xchg
icebp
aaa
sbb
jg
out
aas
push
scas
dec
mov
jp
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
jmp
mov
stos
gs
jo
sarl
jl
add
out
mov
mov
pop
xchg
cmp
and
ret
or
and
pop
mov
les
fidivrs
xchg
inc
jl
or
rcr
pushf
mov
into
repnz
mov
test
aad
lods
in
loope
rcrb
call
mov
into
mov
and
in
or
push
jg
mov
jmp
arpl
imul
xchg
movsb
in
pushf
popf
test
xorb
sbb
cmp
push
call
gs
xchg
arpl
lcall
push
jae
jge
mov
pusha
xchg
mov
xchg
jge
cmp
rclb
cmpsl
popa
inc
sbb
inc
loopne
jl
in
dec
inc
or
outsl
jns
mov
imul
cmp
dec
pop
xchg
into
sahf
adc
and
or
sbb
mov
push
or
hlt
repz
and
roll
push
insl
pusha
mov
outsb
sar
mull
mov
out
aad
adc
mov
in
in
movsb
sub
pop
adc
adc
cmpsb
fistps
test
adcb
inc
fidivrs
sbb
loop
stos
cmpsl
adc
out
inc
test
fidivl
mov
pusha
stc
inc
cmp
sbb
jae
add
sbb
jp
xor
or
sub
and
rolb
add
jmp
sbb
insl
or
dec
loop
into
xor
xchg
gs
mov
icebp
fdivrl
adc
nop
call
mov
adc
adc
out
mov
push
pop
jb
ds
shll
repz
xchg
sbb
jg
icebp
call
dec
add
pop
inc
or
sub
add
add
pop
mov
and
or
jp
vmwrite
adc
mov
sub
sub
sbb
jns
cmpsl
rcll
cmp
subb
inc
add
and
mov
pushl
call
test
je
leave
ret
push
mov
sub
mov
mov
or
movl
movl
xorl
mov
movzbl
or
mov
andl
lea
adc
jmp
mov
in
xchg
insl
mov
mov
movsl
push
and
jl
xlat
jns
jl
or
cmpsb
insb
addb
mov
jo
stos
out
imul
jmp
mov
lret
adc
xchg
dec
bound
jo
ljmp
xchg
pop
pop
sub
inc
sti
cmc
leave
mov
das
jge
fists
icebp
in
iret
cwtl
imul
bound
inc
test
or
inc
test
adc
jl
jne
or
data16
out
mov
fisttpl
loopne
outsb
jmp
mov
jo
frstor
repz
push
fstp
push
clc
mov
mov
shl
adc
mov
push
int3
or
push
or
stos
sub
jle
jbe
jbe
cmpsb
popl
pop
push
sub
adc
inc
and
push
adc
int
mov
or
mov
mov
repz
inc
lret
push
aad
std
inc
sahf
xor
addr16
loopne
cmp
cmp
mov
push
sarb
pop
xchg
add
icebp
stos
sbb
daa
loop
dec
adcl
mov
xor
sub
stos
pop
dec
inc
ja,pt
out
xchg
xor
dec
add
pop
xor
and
jbe
add
aas
mov
mov
repz
icebp
xchg
or
out
mov
sbb
pop
lret
and
ret
mov
jo
mov
sbb
in
jge
adc
negb
dec
mov
fsubs
adc
stc
pop
add
test
and
xor
notl
fst
movsb
aad
jne
cmpsb
daa
cli
xchg
dec
jg
sbb
jbe
pop
sub
xchg
cmc
pop
xchg
cmc
lods
test
mov
stc
cmp
clc
cmp
inc
lret
xchg
cmpsl
loop
sub
dec
inc
jo
sbbb
push
pop
lcall
stos
xor
insb
push
jge
mov
out
xor
sbb
sub
inc
mov
and
outsb
dec
jnp
sbb
lods
sbb
out
add
sub
sub
jg
jle
add
loopne
mov
cmp
and
adc
popa
add
mov
lret
std
fstl
sub
ret
loope
cmc
pusha
and
cmp
dec
cltd
sbb
outsl
mov
mov
fimull
push
in
sbb
cmc
stos
into
or
lret
mov
and
mov
inc
popa
pusha
bound
out
pop
mov
adc
scas
imul
xchg
lret
inc
test
xor
ficoms
dec
stc
scas
jns
dec
cmp
xchg
sbb
pop
test
mov
clc
pusha
imul
stc
enter
push
jb
nop
rcrb
or
mov
ds
xor
dec
sub
xor
movsb
aad
lock
mov
mov
jne
outsb
sub
push
pop
js
cmp
pop
xchg
roll
insl
fimuls
mov
imul
xchg
mov
andl
mov
mov
xor
xor
add
mov
jmp
ret
and
paddw
int
xchg
ljmp
iret
jl
xlat
jns
jl
mov
jno
test
jmp
jno
xchg
pop
inc
inc
mov
push
out
sub
ljmp
fcomp
and
sub
sahf
gs
dec
mov
jg
mov
test
push
pop
cmp
dec
fisubs
repnz
cmc
pop
sahf
inc
stos
or
ljmp
out
mov
mov
and
jbe
or
xchg
stos
roll
scas
loopew
sbb
and
add
add
pop
mov
xor
bnd
stos
std
scas
xchg
dec
jbe
lods
xor
fdivs
dec
data16
or
test
adcl
cmpsl
stc
ss
xchg
aam
dec
jbe
stos
inc
std
gs
outsl
dec
cmpsl
lcall
getsec
add
adc
icebp
scas
pop
enter
movsb
pop
into
adc
lods
shr
pop
adc
jge
dec
jp
xchg
inc
shr
lods
inc
pop
int
andl
adc
repnz
push
jo
push
mov
pusha
enter
ja
push
push
test
test
out
add
and
popf
mov
pop
mov
shrb
or
add
inc
jb
xor
and
jno
or
addr16
mov
sub
ret
xchg
mov
inc
outsb
in
dec
icebp
lret
mov
ds
push
push
push
mov
repnz
push
mov
pop
loopne
add
jb
sub
lea
pop
xorl
pop
push
mov
pop
cs
lods
mov
ficomps
orb
jne
stos
sbb
or
xlat
jg
xor
xor
aad
repnz
inc
aad
fists
mov
sbb
movsb
fisubrl
jmp
jno
push
es
add
dec
outsl
pop
hlt
mov
xchg
mov
sub
ret
cld
std
pop
sbb
andb
sbb
in
adc
imul
lods
cmp
jno
je
shrb
cmpsl
add
mov
xchg
xchg
and
loopne
jno
sti
fcmovu
jae
dec
push
mov
into
pop
out
mov
jbe
ret
out
sub
mov
pop
lods
push
pcmpgtd
pusha
repz
mov
pop
inc
dec
pop
pop
aaa
cmp
insb
inc
rclb
insb
cmpsb
aad
scas
sar
xor
dec
pushaw
sbb
out
mov
xor
ror
pop
lock
divb
loop
cmpsl
cmc
or
mov
xlat
or
fs
pop
push
outsl
loop
push
mov
sbbb
sub
loopne
and
mov
sbb
mov
lods
lcall
mov
xor
pop
mov
and
andb
hlt
xor
je
test
sub
stos
insb
ss
fisttpl
addr16
test
or
push
mov
mov
pop
add
hlt
popl
xor
sub
sub
aam
cmp
pop
push
sar
jge
pop
cmp
pop
cmp
stos
sbb
das
js
pop
xor
add
push
movsl
pop
jbe
jbe
push
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
lea
notl
mov
add
jmp
xchg
je
cwtl
outsb
mov
mov
pop
lcall
xlat
jns
jl
dec
test
mov
subl
pop
mov
cld
leave
cmp
inc
and
outsb
push
fidivl
pop
loopne
dec
inc
xor
push
xchg
outsb
jo
call
mov
push
inc
and
stc
or
pop
in
and
sbb
mov
rcrl
cltd
gs
add
inc
loope
ja
mov
jl
xor
mov
adc
inc
pop
or
and
push
in
icebp
inc
sub
nop
scas
into
xchg
add
jae
sbb
pop
mov
out
inc
jp
mov
cltd
call
fsubs
mov
jle
inc
stos
pop
rcll
ret
pop
xor
sbb
jnp
out
jmp
nop
jb
shl
hlt
add
ret
inc
shlb
jge
add
fdivs
out
fbstp
popf
shll
xchg
and
dec
pop
pop
cmp
mov
popa
pop
inc
add
in
xchg
addr16
loope
ljmp
ljmp
xor
ja
push
out
adc
add
mov
shrl
outsb
shrb
xchg
lods
mov
pop
cmc
mov
hlt
mov
dec
stos
int
jo
cmp
mov
mov
jg
or
lret
push
in
lods
jb
adc
stos
cmpb
mov
cwtl
call
cmp
pop
add
mov
call
mov
rcrb
push
loop
int3
test
xchg
pop
dec
cmp
xchg
lea
pop
loopne
xchg
repnz
mov
ss
sub
mov
add
aas
and
adc
pop
sbb
fldt
ljmp
mov
gs
pop
sub
push
mov
mov
jle
sub
xchg
js
loopne
inc
inc
inc
mov
cmp
out
jns
inc
test
dec
sbb
ja
insb
and
sti
and
jl
xchg
xlat
ds
push
adc
cltd
in
lret
and
ds
pop
das
jmp
rol
dec
jns
das
iret
adc
lret
fdivrp
mov
popf
jmp
dec
xlat
loope
arpl
inc
pfnacc
daa
insb
and
negl
outsb
mov
cs
lock
jg
add
repnz
mov
pop
sbb
add
xchg
bound
dec
pop
into
pusha
mov
push
sahf
jno
gs
aas
xchg
pop
and
pop
mov
or
fwait
pusha
lahf
nop
and
fs
pop
outsb
bound
mov
hlt
aam
cmpsb
sub
adc
fistl
mov
fwait
mov
icebp
pop
or
out
fildl
xor
imul
pop
pop
push
das
push
xchg
stos
sub
or
sarl
push
lods
orb
cld
lock
les
sbb
test
xor
test
pop
jle
out
rol
sbb
inc
in
and
add
add
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
and
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
or
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
mov
mov
mov
mov
xor
mov
xor
xor
add
add
div
mov
movl
cmp
je
movl
lea
mov
mov
mov
jmp
sub
imul
or
aam
jl
jns
jl
push
and
xchg
outsl
sahf
in
sub
scas
outsl
lret
into
push
sbb
pop
sub
ss
mov
addl
xor
xlat
adc
je
rorl
pusha
ret
adc
or
xlat
adc
push
dec
mov
add
pop
add
mov
cmp
pop
push
ljmp
inc
dec
push
aad
out
clc
cmp
and
jg
dec
mov
insl
or
shlb
lret
sbb
mov
dec
mov
push
mov
addb
enter
add
and
icebp
cmp
push
testl
jmp
jge
push
repz
mov
push
lods
inc
stc
std
mov
je
mov
cmp
test
bnd
js
jb
dec
jmp
and
sarl
push
xchg
pop
nop
jg
push
imulb
mov
xor
and
ja
mull
outsl
std
fwait
push
sahf
cmc
mov
mov
test
pop
test
or
iret
mov
imul
fstps
loop
fstl
inc
cmc
pop
adcb
mov
mov
dec
push
mov
das
pop
bound
or
dec
popf
into
cli
cmp
call
xor
and
divps
lea
or
xor
je
inc
test
loop
or
call
xlat
xchg
sahf
fidivrl
js
adc
push
scas
or
ja
fwait
cmpsb
in
loopne
or
add
movl
loop
das
sbb
out
call
fiaddl
add
lods
inc
gs
and
lcall
pop
int3
push
inc
movsl
shlb
mov
xor
rorl
gs
fadd
sub
sub
cli
fs
sbb
xchg
in
dec
jb
test
movsb
and
mov
call
xchg
cmp
je
dec
xorb
sbb
add
cmp
into
cmp
hlt
ror
rolb
mov
pusha
repz
push
sbb
ljmp
call
and
cmp
push
push
mov
inc
or
push
sarl
cli
xchg
jnp
jno
jmp
mov
push
lret
push
ja
mov
cmp
xchg
push
ss
cltd
mov
push
xchg
cmp
cmp
nop
ljmp
jns
mov
mov
or
xchg
pop
ljmp
mov
lret
stos
push
add
cltd
shlb
stos
mov
cmpsb
lds
xor
pop
inc
mov
iret
add
ror
mov
inc
mov
fcoms
fimull
in
mov
pop
aas
jge
data16
jle
mov
call
testl
in
inc
cmpb
mov
ljmp
sub
pop
jmp
cmp
loopne
cltd
adc
lahf
fs
sbb
enter
xchg
ret
push
iret
imul
mov
mov
cmp
jmp
cwtl
mov
mov
or
jns
pop
adc
jl
jns
jl
mov
xchg
xchg
or
push
fwait
sub
and
adc
lds
jge
lahf
ret
or
stc
xchg
stos
mov
and
pop
in
mov
mov
push
shlb
jmp
mull
pop
or
mov
sbb
mov
sarb
test
loope
insl
mov
or
and
loopne
cmp
fs
mov
mov
xor
cmc
out
pop
xor
mov
daa
mov
push
test
cmp
cmp
aas
xor
sub
dec
aas
mov
int3
push
mov
inc
mov
cmc
lahf
pop
rcll
imul
and
push
jns
adc
jmp
rorb
insl
jmp
stos
adc
mov
in
leave
in
mov
in
push
popa
pop
out
ds
sub
test
mov
inc
inc
push
ja
leave
or
dec
xor
test
ljmp
push
pop
pop
mov
bound
hlt
push
lods
mov
jnp
fdivs
ret
cltd
inc
xchg
sbb
bound
cwtl
or
xor
inc
sub
fs
test
jnp
or
sbb
inc
scas
ret
ret
dec
in
mov
add
shrb
and
add
fisttps
add
addl
test
xor
cmpsl
inc
push
into
mov
sbb
xchg
sub
stos
mov
pusha
addl
setg
loope
aam
pop
jae
pop
enter
inc
dec
add
jmp
call
jmp
mov
xchg
lods
or
ficomps
dec
push
xchg
cmp
test
sub
jg
push
cmp
mov
sbb
das
sub
dec
jp,pt
inc
mov
xchg
mov
repz
fildll
fcmovnb
jp
shr
lret
cwtl
pusha
push
jae
ja
cmp
fnstsw
sbb
rol
jbe
pop
mov
cmpb
add
shl
jp
cmp
dec
pop
lods
mov
ljmp
cmp
les
shlb
or
fdivl
dec
hlt
int3
dec
popa
pusha
stos
lods
cmp
stos
movsb
daa
outsb
shrl
adc
rcrb
loop
in
sbb
jae
push
cmp
repnz
and
add
ret
out
scas
mov
xchg
push
call
lock
fildl
sub
or
push
sar
pop
cmp
loop
outsb
scas
mov
rorl
rorb
mov
xchg
mov
int
test
add
xchg
sub
scas
popl
jns
add
imul
jo
push
addr16
or
jecxz
push
gs
gs
nop
adc
push
xor
dec
xor
cmpsl
js
pushf
push
into
andl
fcompl
mov
addr16
ljmp
test
inc
in
or
jno
add
pop
jns
fs
add
push
sbb
jb
pop
pop
sarb
jns
jl
fcomps
adc
push
fdivl
cmp
pushf
sahf
test
stos
sahf
add
iret
mov
sub
and
sbb
xchg
int
loop
js
ljmp
mov
xor
lods
cs
ja
cmc
lret
push
xchg
mov
mov
les
lcall
cmp
enter
dec
test
into
sub
in
sbb
sbb
pushf
out
sbb
push
test
adc
ljmp
sti
jp
stos
fwait
popa
test
repnz
mov
stos
sbb
jnp
icebp
and
negb
sub
test
and
fldl
lods
daa
fistl
jbe
dec
pop
loop
mov
subl
mov
push
dec
jno
arpl
add
loop
adc
dec
mov
pop
lea
mov
cwtl
sbb
pop
scas
and
inc
xchg
pop
inc
loopne
lds
sti
mov
add
xor
scas
sub
mov
jp
in
popa
addl
divl
cmpsl
push
ljmp
icebp
jne,pn
xchg
out
push
push
mov
add
inc
les
inc
out
dec
out
filds
mov
push
push
inc
imul
pop
leave
loopne
mov
push
add
mov
jbe
inc
repz
pushf
sti
mov
jo
ljmp
imul
mov
dec
ja
fdivr
loopne
cmp
scas
mov
roll
imul
mov
fnstcw
rcrb
rcl
hlt
data16
sub
lret
pop
negl
mov
ljmp
cwtl
jp
shl
add
push
mov
outsl
pop
jae
addr16
into
mov
js
ljmp
xchg
xor
pusha
xor
push
lret
mov
inc
test
inc
pop
mov
xchg
xor
out
ret
shll
scas
call
repnz
jmp
push
lret
arpl
jge
inc
jbe
je
movsb
dec
roll
jl
jp
lcall
inc
cmpsl
dec
dec
mov
test
pop
and
stos
xor
adc
mov
loope
pop
adc
and
test
lahf
lret
stos
ds
lds
inc
mov
call
movsl
jns
mov
scas
mov
push
rcrl
ret
test
inc
dec
xchg
mov
addl
sub
cmp
mov
add
insb
xchg
xor
pop
aas
inc
in
sbb
or
mov
fbstp
push
adc
rcr
inc
xor
faddl
std
cmp
int
xor
lods
jo
stos
cwtl
popf
fisubl
push
sbb
or
movsw
mov
jmp
sub
push
call
rolb
xor
sub
sub
xor
stc
xchg
scas
test
cmc
dec
pop
repz
stos
pop
mov
push
clc
xchg
lds
cmp
lea
in
mov
lock
je
stos
push
xchg
lahf
mov
repz
cmp
xchg
jge
cmp
mov
mov
sbb
int
test
inc
in
lahf
imul
inc
clc
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
jmp
pop
sahf
pop
pop
pop
shll
cltd
outsb
pop
mov
jl
jns
jl
and
xchg
and
ds
and
ss
push
loop
push
dec
movsl
add
ljmp
pop
es
stos
push
imul
loopne
and
jns
out
pop
ss
sarl
mov
fbstp
fwait
js
lcallw
rcl
jle
pusha
mov
lds
leave
jbe
icebp
dec
mov
fidivrl
ss
int3
sub
in
push
outsl
xchg
insb
in
ja
loope
push
push
push
cltd
pop
je
pop
jg
xchg
jge
sub
les
popf
jnp
jl
loop
mov
ljmp
adc
mov
jmp
dec
dec
into
jecxz
mov
push
loop
popf
inc
stc
in
xor
jb
test
push
ss
test
add
fincstp
cwtl
push
sarl
xlat
out
jmp
sbb
cmp
push
cmp
sbb
sbb
mov
aaa
dec
mov
popa
push
shl
loopne
jl
rol
jnp
out
int
pop
adc
inc
ret
mov
mov
mov
push
hlt
pop
sbb
mov
aad
leave
push
jbe
jno
pop
jnp
or
stos
clc
jbe
scas
xchg
leave
pusha
div
in
sbb
stc
sbb
mov
pop
in
cli
mov
add
sbbb
stos
push
xor
sti
mov
out
imul
xor
xchg
adc
icebp
imul
ss
adc
lods
xor
pop
xor
mov
jne
mov
les
xor
sub
test
inc
xor
ret
fbld
cli
fdiv
shll
pop
sbb
mov
inc
mov
jle
gs
mov
movsb
sbb
adc
inc
fdivrl
mov
push
and
jae
sahf
into
cmc
enter
fwait
into
jp
lret
imull
cmpsl
and
dec
fcoms
rcr
sarb
dec
dec
loop
mov
mov
sub
frstor
mov
insl
xchg
xchg
pop
es
popa
pop
je
and
in
shr
int
hlt
push
clc
jnp
mov
mov
cwtl
lock
jmp
clc
add
jo
loopne
adc
push
in
inc
cmpsb
inc
gs
jge
dec
adc
adc
sub
aas
ret
xchg
adc
mov
out
cwtl
div
imul
cvtdq2ps
into
push
xchg
pop
or
stc
movsl
push
dec
push
fnstcw
ds
mov
outsb
dec
mov
add
das
lahf
cltd
or
imul
shrl
cwtl
xor
xchg
add
roll
push
leave
xor
sub
imul
daa
jns
bound
or
ja
lret
cs
lcall
inc
rcl
shrl
or
xchg
lds
shld
add
mov
daa
push
xchg
fldcw
or
xor
in
pop
xchg
stos
std
hlt
jle
cli
pushf
aam
pop
repnz
cwtl
cmc
mov
dec
gs
sbb
jnp
pop
push
mov
xorl
jmp
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
jmp
add
loop
insl
test
loop
add
push
fisubrl
xlat
jns
jl
cmp
out
cmpsb
jb
ret
jbe
and
pop
push
push
mov
test
lea
adcl
sahf
and
cmp
xchg
cltd
cmp
push
sbb
fsubrl
in
mov
adc
jg
dec
mov
add
mov
adc
data16
inc
stos
add
pop
xor
jns
in
cltd
and
adc
or
insl
mov
fadds
and
andl
sbb
bswap
sbb
mov
mov
addr16
cli
leave
scas
rolb
lahf
scas
xor
popf
in
mov
mov
sub
add
push
mov
sbb
divb
popf
xlat
pusha
aaa
iret
sti
lods
inc
mov
push
popf
adc
out
aaa
push
icebp
lahf
mov
stos
cwtl
pushf
jecxz
insb
xchg
addl
pop
incl
ror
jno
pushf
iret
or
dec
lcall
xchg
dec
mov
inc
cmp
cmp
inc
or
pop
pushf
and
pop
popa
jge
pop
fnstenv
adc
cmp
testl
je
cmp
fdivs
add
push
jnp
dec
and
gs
and
bound
lods
cwtl
loopne
dec
sbb
rorb
push
xchg
push
loope
pusha
add
aaa
xor
scas
loope
cmpl
fs
pop
in
inc
outsl
jb
jge
jmp
in
inc
pop
lret
bnd
xor
aas
inc
hlt
xor
fwait
insl
repnz
insl
and
je
sbb
sahf
xchg
loope
or
jbe
in
in
sahf
push
and
sub
or
lcall
sbb
add
jecxz
xorl
push
mov
mov
pushf
mov
in
cmpsb
pop
stos
mov
jae
test
insl
jbe
fpatan
repnz
or
icebp
outsl
leave
imulb
dec
xchg
mov
lock
orl
dec
shll
mov
ficomps
or
sub
or
arpl
popf
mov
pop
in
cli
and
or
cld
adc
mov
mov
test
add
xchg
stos
loop
loope
and
pusha
lods
lret
ja
mov
push
es
dec
mov
lret
aas
cmp
inc
test
decb
test
dec
add
mov
cmp
mov
sti
push
fistpll
inc
popf
jno
mov
std
pop
lcall
xchg
cmc
xchg
push
dec
jns
mov
lods
dec
in
ds
mov
cwtl
js
ret
inc
cmp
adc
adc
cmpsb
cmp
xchg
iret
dec
sbb
gs
lahf
jmp
das
adcw
push
push
sarb
push
pop
insl
dec
aaa
dec
ret
add
gs
mov
inc
mov
sub
adcb
pop
cmp
imul
test
ja
push
pop
push
mov
mov
imul
dec
movsl
stos
pop
rolb
push
imul
daa
icebp
sub
push
dec
test
idivl
mov
mov
aaa
pop
mov
mov
mov
xor
jmp
inc
pusha
sub
sub
jne,pt
fisubrs
jl
jns
jl
jp
pop
or
jno
push
xlat
sub
cmpsb
add
das
push
xlat
mov
into
cmpsl
push
adc
iret
pop
jb
mov
fimuls
or
daa
cltd
xchg
leave
jg
sub
mov
sub
push
sub
cltd
cmc
ffreep
cmp
frstor
lock
mov
cld
imul
cltd
push
cltd
mov
add
arpl
sub
xchg
inc
cmpsb
cltd
test
xchg
test
lods
or
dec
cltd
push
gs
stos
test
push
fisubl
loope
xchg
pusha
push
cmp
sub
push
inc
pop
andb
cmp
cmc
mov
add
push
mov
xlat
xor
adc
out
scas
jb
and
and
inc
xor
in
out
adc
sub
gs
loop
jp
loopne
popa
mov
loope
lea
rcrb
jge
mov
mov
sar
test
or
test
movsb
lret
xchg
pop
adc
out
sbb
filds
mov
popf
outsl
push
aaa
imul
dec
mov
lods
cmp
jl
inc
es
pop
pop
mov
jns
adc
add
cwtl
push
pop
push
arpl
adc
pop
pop
add
dec
xor
mov
sbb
lcall
xchg
sbb
imul
test
pop
xlat
or
cmp
jle
xchg
add
add
mov
add
sub
stos
sbb
cmpsl
push
loop
scas
rorb
das
fisttps
jno
adc
scas
sti
in
push
xchg
or
add
in
call
mov
scas
adc
and
scas
mov
inc
inc
dec
sub
lods
cltd
xchg
scas
mov
sbb
cmp
das
cmp
and
in
push
jmp
pop
push
or
cld
ret
cmp
xor
xchg
add
mov
jp
xchg
loope
cli
rorl
in
sub
in
jp
addr16
enter
sub
aaa
xor
mov
adc
std
enter
jecxz
movsb
cmpsl
jp
repz
pop
notl
insl
dec
and
out
cmp
aas
sub
add
and
adc
jne
mov
sbb
push
shrl
adc
dec
rol
lods
repnz
dec
mov
adc
jp
daa
jno
and
adc
mov
fistps
test
out
cmpsb
int
outsb
jns
outsl
or
popf
mov
jmp
push
mov
adc
out
enter
mov
test
mov
inc
mov
js
insb
push
mov
push
pushl
test
ja
adc
ret
addr16
cs
dec
shl
sbb
push
cmpsl
mov
pop
arpl
jl
inc
lret
jg
loop
xorl
sar
mov
jge
adcb
test
lcall
fdivs
gs
adc
xor
mov
add
adc
cmc
int
sar
cmp
adc
add
mov
lret
cmpsb
add
imul
sub
jmp
or
jb
mov
push
sbb
pop
ffreep
loopne
jl
jns
jl
add
bound
jns
xchg
test
push
fnstenv
xchg
iret
aaa
out
lret
in
adc
mov
pop
push
push
jnp
stc
sti
mov
repz
cmp
icebp
shrl
mov
jecxz
xchg
pushf
pop
stos
das
int3
aas
dec
sub
dec
stos
rcr
mov
jns
push
sub
mov
jmp
mov
scas
fwait
pop
outsb
enter
rorl
popf
push
out
dec
scas
push
sub
inc
mov
nop
dec
aam
sub
clc
es
pop
xor
aas
push
push
mov
rclb
xor
in
movsb
enter
and
cld
std
or
cmp
ja
sub
and
insl
or
stos
and
push
int3
push
xor
pop
popa
addr16
or
adc
add
push
pop
loop
mov
jo
lcall
out
mov
xorb
or
or
pop
push
push
mov
int
sbb
lret
jae
jge
adc
shlb
test
fwait
adc
shlb
shl
outsb
addr16
sbb
add
and
insl
mov
push
and
cmpsl
mov
xchg
inc
lock
lret
mov
iret
cmpsb
sbb
inc
outsl
fstpl
aaa
dec
pop
shlb
xlat
cld
cmp
jae
sbb
arpl
sbb
outsb
loop
cmp
cmp
outsb
mov
iret
aad
popf
or
and
mov
adc
dec
or
cmp
cmp
iret
in
push
cmp
mov
test
ja
sahf
sub
lock
pop
ds
xor
lds
cmpb
test
rclb
sbb
adc
dec
fs
jge
adc
mov
jno
cmp
add
jne
push
movl
or
or
mov
fsub
xor
jno
mov
inc
out
in
fistpl
lret
dec
sub
mov
stos
cmp
fdivr
xchg
jbe
and
sbb
jns
sbb
pop
jecxz
imul
ljmp
push
and
sti
dec
dec
cmpsb
test
dec
call
mov
push
mov
call
leave
mov
out
addr16
inc
pop
mov
jg
inc
js
xchg
mull
rorl
fcomps
movsl
inc
jno
shlb
fildll
or
add
pabsw
jmp
mov
mov
aaa
mul
cmp
mov
mov
mov
sbb
mov
daa
add
cmp
mov
jle
jbe
lret
jecxz
push
cmp
mov
sub
add
das
les
adc
iret
pop
jnp
icebp
dec
lahf
xchg
cltd
push
or
es
inc
push
pop
add
fwait
je
stc
and
mov
scas
mov
icebp
dec
push
adc
and
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
adc
jmp
add
js
inc
push
push
dec
xor
in
les
add
in
jl
adc
stc
js
pushf
cmp
shr
jl
out
jne,pt
test
fdiv
stc
inc
in
sarl
daa
bound
mov
dec
test
pop
stc
xor
pop
lahf
leave
mov
push
dec
jmp
pop
pop
mov
mov
cmp
andl
add
dec
int3
scas
xor
inc
jne
test
subb
out
repnz
shrb
andl
dec
enter
lea
and
fistps
sub
or
iret
ret
cmp
in
jnp
andl
push
sbb
insb
stc
stos
cmc
adc
cmp
xor
imul
push
mov
adc
xor
and
fmuls
and
int
enter
movsl
outsb
gs
inc
dec
dec
adc
mov
sub
addr16
cli
cli
in
aam
xchg
cmp
lcall
mov
shl
sbbb
pop
mov
ficoml
mov
push
ret
pop
dec
mov
orl
push
adcl
push
mov
addl
xor
and
mov
andl
add
adcl
push
or
mov
andl
mov
xor
sbbl
movl
orl
movl
addl
add
jmp
movl
cmp
movl
jne
mov
mov
mov
movl
mov
mov
movl
mov
mov
jmp
movl
jmp
and
popf
les
lahf
jmp
pop
sahf
adc
mov
jl
adc
test
ljmp
shrb
xor
ret
leave
das
fstl
jne
mov
imul
push
fisubrs
ds
call
mul
dec
jle
pop
add
jle
sub
inc
mov
int
ja
xchg
mov
xor
stos
mov
mov
scas
testl
push
into
and
mov
dec
scas
and
sbb
std
push
mov
xchg
in
shr
adcl
jge
testb
test
rolb
in
pop
sbb
push
sub
cmp
aaa
push
lea
aam
cmpsl
cmpl
push
inc
cmc
jp
push
push
fldcw
out
popa
roll
aaa
lcall
mov
pop
aad
fmul
sub
cld
cmp
lret
push
xchg
iret
jo
mov
movups
xor
fxch
jp
lods
icebp
adc
test
mov
lods
addl
movsl
iret
xor
cmp
movl
jne
andl
mov
orl
sub
push
mov
or
mov
addl
add
subl
push
decl
call
movl
incl
cmpl
movl
jb
jmp
movl
cmp
movl
jne
movzbl
and
movl
add
mov
xorl
mov
sub
mov
mov
mov
xor
andl
add
andl
mov
sbbl
lea
addl
mov
sub
mov
orl
xor
add
mov
lea
push
mov
jmp
xchg
fs
andl
jns
cmpsl
pop
dec
out
jl
adc
daa
xchg
aam
xchg
nop
ljmp
sarb
and
xor
daa
xchg
lahf
jb
push
xor
inc
aas
pop
add
loopne
insb
ljmp
dec
outsb
lods
mov
pop
icebp
sbb
inc
xor
sahf
mov
movsb
sbb
mov
pop
pop
stc
sarl
sahf
popf
sbb
in
mov
repz
clc
lock
loopne
pusha
rorb
cs
mov
jae
push
jns
test
push
or
jb,pn
pop
xchg
add
sbb
pop
push
pop
pop
adc
sub
push
aam
jo
mov
push
aas
or
sub
cmp
test
das
pop
sbb
addr16
pushf
mov
adc
mov
in
xor
lret
jae
xor
or
xchg
or
outsb
add
push
repz
pushf
fwait
mov
bound
loop
out
push
mov
clc
add
imul
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jne
mov
pop
xor
pop
add
pop
leave
ret
push
mov
sub
neg
push
mov
mov
sub
mov
andl
mov
movl
and
movl
or
mov
add
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
mov
dec
mov
jmp
sbb
xor
andl
mov
xor
add
adc
mov
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
addl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
orl
xor
or
add
xor
add
or
mov
mov
andl
movl
xor
xor
and
mov
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
call
jmp
movl
movl
jmp
push
jle
and
jecxz
push
inc
push
imul
jl
lret
jl
mov
inc
ret
pusha
xchg
iret
push
cmp
push
icebp
mov
xor
xchg
cmpsl
adc
dec
sbb
mov
mov
jp
sbb
pop
out
sub
xor
repz
and
push
jmp
jo
dec
mov
mov
sub
lahf
rcrl
ror
nop
pop
adc
pop
mov
mov
hlt
mov
movsb
cltd
out
lahf
xor
or
nop
dec
jle
push
jmp
icebp
push
cwtl
inc
pushf
and
xor
and
pushf
pop
adc
enter
not
mov
in
sbb
fsubrl
adc
pop
inc
sar
int
jmp
adc
rep
pop
or
jge
dec
call
ret
es
loope
test
jns
mov
mov
sub
call
or
sub
and
repz
ss
jge
lds
cs
jno
movsb
or
push
lret
inc
imul
dec
in
inc
es
xlat
adc
mov
ds
mov
sbb
lods
cmpsb
mov
scas
pop
xchg
es
add
pop
addr16
test
mov
icebp
sbb
mov
movl
xchg
cmp
je
xchg
or
addl
inc
cld
insl
aad
pop
or
ret
add
js
test
sbb
pop
hlt
push
fs
cmp
loopne
add
decl
adc
int
popa
add
ret
fdivrp
insl
xchg
push
xor
notl
or
push
mov
ret
mov
dec
idiv
insl
pop
rcrb
dec
cltd
pop
cmc
jno
push
and
or
dec
ljmp
shlb
xor
sub
dec
dec
pop
adc
mov
push
sbb
lds
sbb
cmp
pop
insl
ret
loopne
dec
in
jae
lods
in
and
xchg
mov
loope
aaa
jecxz
cmp
mov
aaa
pop
cmc
call
push
jge
sub
lahf
lahf
cmp
sbb
xor
dec
lahf
ljmp
lods
leave
mov
pop
pop
into
lea
rclb
mov
shll
inc
xchg
and
mov
and
js
xchg
mov
inc
sbb
ljmp
xchg
repnz
mov
pop
sarb
xor
jge
rclb
cld
adc
gs
lea
loope
xchg
push
mov
push
popa
or
add
loope
ret
sbb
xor
pop
xchg
rol
xor
inc
repz
mov
push
lret
xor
mov
mov
and
out
xchg
inc
sbb
sbb
adc
inc
mov
aam
jg
sar
mov
pop
bnd
movsl
adc
sub
pusha
insb
rorl
pop
sub
adcb
push
das
inc
lret
out
adc
cmc
and
adc
jecxz
ljmp
clc
and
adc
adc
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
movl
movzbl
adc
mov
mov
xor
mov
add
cmp
je
movl
push
jmp
movzbl
xor
mov
mov
subl
sub
movzwl
xor
jmp
push
mov
sti
std
movsl
push
jb
xor
or
ljmp
stc
push
mov
mov
mov
insb
xor
enter
shlb
out
lea
jne
xchg
dec
inc
hlt
cmp
repnz
mov
dec
pop
jmp
lea
or
pop
mov
dec
arpl
cmp
in
cltd
loope
ds
stos
jle
aas
jb
push
imul
nop
lret
shl
cltd
inc
insb
insb
outsb
leave
pop
xor
pop
mov
push
push
mov
xchg
pusha
jmp
and
aaa
stc
ljmp
cmp
ljmp
dec
pop
add
jmp
leave
xchg
add
adc
test
mov
iret
xlat
inc
inc
add
add
cmpsl
mov
mov
mov
enter
sbb
xchg
insb
mov
add
add
sub
outsl
or
daa
je
test
cmp
xor
dec
dec
jne
xchg
inc
adc
add
jnp
mov
xor
cmp
loope
in
lahf
hlt
icebp
in
movhps
mov
insl
adc
mov
mov
test
inc
adc
clc
mov
dec
mov
loop
add
and
dec
cmp
inc
jmp
cmc
mov
movsb
pop
inc
ja
lcall
xchg
and
sub
jne
fistl
out
inc
xor
xchg
jne
or
frstor
pop
jge
test
mov
movsb
imul
push
shlb
jb
dec
lcall
mov
add
sbb
sub
loop
aaa
and
sub
lods
adc
xor
cmp
sub
sub
mov
repnz
int3
cmp
ja
icebp
popa
loop
mov
mov
in
cltd
xchg
rcr
imul
xchg
push
mov
mov
xor
pop
fcmovnbe
cmp
fcmove
or
lret
xlat
and
push
sub
call
or
test
notb
xchg
mov
ss
imul
clc
cmc
and
jae
test
enter
enter
push
sub
cmp
fldt
imul
ret
push
jne
mov
aam
mov
mov
dec
jne
fwait
mov
or
out
mov
push
sub
outsb
int
mov
cmpsl
mov
inc
adc
xchg
outsb
and
jl
cmp
sarl
jo
mov
fwait
lock
lcall
push
or
inc
scas
out
sub
roll
sarb
push
ss
push
or
cs
push
popf
cmpl
push
push
or
inc
cwtl
mov
aaa
icebp
push
sbb
jnp
fucomi
mov
mov
mov
push
jb
mov
dec
in
jge
mov
and
mov
fidivl
popf
addb
jbe
mov
or
pop
dec
rorl
push
sbb
lods
fcmovb
ja
test
mov
push
sbb
lods
or
push
xchg
sbb
adcl
add
movl
cmp
jb
mov
mov
xor
xor
add
and
xor
movzwl
sbb
add
addl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
sbbl
jmp
shlb
bnd
lahf
inc
sbb
movsl
sub
jl
lret
jl
mov
and
or
pop
lea
inc
push
inc
subb
and
les
shll
xor
xchg
mov
arpl
or
test
and
and
fsubs
push
inc
inc
mov
aad
cmp
push
mov
mov
dec
pop
iret
cmp
jecxz,pt
and
mov
pop
sbbb
jmp
push
adc
adc
sbb
fsubl
jmp
shl
mov
addr16
sub
push
sbb
jl
mov
jns
sbb
add
inc
cmp
inc
in
mov
mov
rol
sbbb
sbb
js
push
loopne
iret
ret
jg
dec
enter
push
sarb
fistpll
int
push
mov
sarb
insl
pop
popf
mov
sub
cld
test
shll
push
adc
xor
push
jecxz
cmp
add
addr16
xchg
aaa
xor
pop
gs
lret
adc
sub
or
mov
lahf
gs
sub
jne
fiaddl
cmp
cmp
xor
or
ss
jae
cmp
fwait
rcl
aas
les
xchg
icebp
daa
jle
enter
shlb
sbb
and
out
jo
jne
repnz
bts
and
aaa
push
mov
daa
push
adc
cltd
xor
add
push
xor
insb
add
jbe
jb
in
pop
stc
pop
nop
js
adc
cs
test
lea
xchg
mov
jp
mov
jp
sub
icebp
adc
call
push
jg
cli
dec
xchg
cld
add
sub
adc
push
ret
mov
cmp
jb
std
adc
aas
repnz
mov
xchg
and
jg
popf
or
mov
fs
push
ficoms
mov
popa
xchg
lock
xchg
loopne
out
mov
bound
nop
mov
push
pop
mov
popa
arpl
push
jnp
arpl
test
xor
dec
fcmovb
aam
orl
stos
mov
lahf
mov
push
mull
and
clc
gs
inc
rorb
divl
or
mov
jle
int
pop
push
not
outsb
ja
lcall
xor
inc
adc
mov
jmp
call
push
dec
push
pop
into
sar
lret
adc
push
pop
cmp
out
jle
push
adc
repnz
add
adc
pop
dec
movsb
pop
xchg
xor
iret
loopne
mov
shll
or
push
mov
aam
push
stc
sbb
pop
inc
mov
jg
pop
sub
jne
sti
js
addl
or
pop
jecxz
pop
cwtl
adc
test
into
xor
cmp
jno
clc
mov
ds
mov
out
jl
fidivl
pop
shrb
or
repnz
mov
and
mov
imul
out
das
push
inc
es
sbb
jb
in
insl
or
or
add
scas
xlat
adc
mov
or
mov
sub
cmp
movl
ja
xor
mov
sbbl
xor
add
movl
jmp
mov
sub
mov
mov
mov
or
xor
xor
movzbl
adc
add
add
imul
adc
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
jmp
call
jge
pop
jno
aad
dec
add
jl
jns
jl
in
fcomp
xor
mov
movswl
loope
clc
je
jecxz
xchg
inc
push
int
and
nop
and
adc
xorb
sub
lds
insb
adc
popa
cmp
pop
ss
push
push
mov
int3
movsb
jl
fdivs
notb
sbbb
mov
or
int3
in
mov
jbe
pusha
and
or
lret
inc
into
sub
je
ror
imul
sbb
push
pop
mov
mov
das
shll
movl
mov
sub
jne
cmpsb
lods
push
aas
das
clc
cmpsl
cmp
sbb
and
scas
lods
dec
xchg
repz
movsl
fwait
sbb
leave
lret
cmpsb
sub
fldcw
inc
out
rol
mov
add
cmp
pop
push
aaa
les
pop
std
cmp
test
addr16
pop
xchg
lods
jmp
fucomp
stos
sahf
pop
xchg
mov
xor
mul
outsb
mov
mov
cwtl
movsb
adc
inc
cmc
cmc
xchg
or
loop
mov
mov
xchg
or
dec
hlt
add
movsl
pop
leave
je
ret
pop
imul
jae
out
rcl
inc
xlat
dec
xor
imul
jecxz
daa
xchg
push
inc
add
cs
iret
and
or
subb
bound
aad
jnp
scas
mov
adc
or
push
arpl
imul
jmp
test
mov
add
push
test
mov
and
out
jge
jnp
loopne
fcomi
lcall
mov
adc
or
adc
adc
mov
inc
scas
dec
pop
pusha
sbb
mov
scas
jle
out
lds
inc
sbb
adc
fsubl
inc
dec
jge
loope
cmp
mov
push
jno
mov
fld
cmp
add
push
addl
push
leave
push
xchg
aad
insb
jmp
outsl
popa
in
repnz
imulb
dec
and
loope
in
xchg
xor
cltd
pop
push
adc
lcall
cmp
push
call
jne
pop
xchg
or
mov
aam
into
es
fsub
adc
clc
dec
push
fsts
icebp
xor
jp
std
mov
fs
es
inc
sbb
dec
xchg
xchg
icebp
or
jmp
mov
mov
pop
mov
inc
shrl
mov
mov
shlb
xchg
loope
xlat
insl
fisttpl
sub
add
adc
cmpl
jmp
add
stos
repnz
jno
stos
jp
loop
stc
repz
push
xchg
adc
and
or
call
aam
push
aaa
lock
push
gs
je
xchg
jecxz
pop
add
sbb
orb
shl
mov
mov
into
daa
add
hlt
cmp
in
xchg
cmp
cmp
jns
sbb
adc
xchg
out
pop
popa
cmp
sbb
mov
imul
mov
jmp
icebp
cs
ja
jno
mov
xchg
insl
dec
cmp
jns
jl
push
popf
pushf
and
push
mov
mov
xor
fxch
je
cmp
sub
mov
sahf
pop
in
cmp
or
or
shl
popa
dec
jle
test
inc
das
push
xchg
xor
dec
lods
pusha
mov
mov
loop
pop
enter
dec
fistl
pop
sbb
and
jle
nop
sbb
ja
mov
push
xchg
and
movhlps
xchg
mov
sbb
movsb
dec
aad
adc
xor
out
mov
popf
xlat
xchg
jge
test
jge
and
fs
cs
ret
lock
cmp
cmp
test
sbb
pop
in
mov
sahf
stos
sti
adc
mov
jecxz
add
sti
sub
sbb
push
or
lcall
push
fwait
jmp
xlat
ljmp
cli
sub
lret
lods
bound
add
scas
jp
jmp
mov
notb
mov
leave
xor
mov
mov
aad
rclb
fwait
xchg
mov
and
enter
sub
mov
dec
inc
stos
shll
mov
xchg
push
and
pop
test
idivl
cmp
mov
push
aad
int3
repnz
into
test
fdivl
pop
fwait
inc
jae
aas
sub
test
ficompl
repnz
pop
icebp
push
addl
sub
dec
jmp
addl
inc
inc
mov
push
mov
pop
das
mov
repnz
jns
enter
into
xor
out
jg
cld
push
dec
sub
cmp
sub
std
cmp
sub
std
and
sbb
outsb
addb
jl
into
pop
adc
fisttpl
in
push
cwtl
adc
int3
or
jmp
imul
in
xchg
repz
out
dec
std
xchg
push
mov
push
imul
into
push
lea
stos
and
nop
add
pop
cltd
xor
cld
push
cmp
jle
pop
add
imul
dec
shrl
add
gs
outsb
setp
popa
iret
test
xchg
test
stos
scas
sbb
dec
popf
in
xor
nop
push
scas
pop
adcb
aam
jge
xchg
mov
xchg
and
fisttps
add
fisttps
mov
ljmp
sar
jnp,pn
pop
outsb
outsb
es
int
in
lods
jmp
popl
mov
xor
fldt
xor
push
test
rorb
pop
xchg
arpl
insl
pop
jb
call
loop
push
jns
scas
or
inc
or
pop
pushf
jne
jecxz,pt
mov
xor
mov
hlt
mov
mov
cli
add
repz
lods
ficoms
bound
adc
rcrb
cld
std
nop
test
adc
sbb
je
jns
mov
ss
loop
popa
cmpsl
shlb
movsl
pushf
push
mov
adc
pop
sbb
inc
sti
daa
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
jmp
rcrb
mov
jecxz
fadd
sub
push
mov
jl
lret
jl
push
and
and
mov
mov
in
cmp
cli
mov
adc
dec
xchg
insb
jbe
mov
call
push
cld
cmp
cld
sub
push
outsb
push
pop
push
movsl
popa
pop
jmp
or
cli
cld
fs
loope
bound
jg
or
mov
inc
enter
fs
add
jne
xchg
sub
call
sti
jae
scas
inc
cmp
xlat
xor
xorl
xchg
aad
xchg
mov
fcmove
ljmp
mov
sti
push
aad
ljmp
inc
mov
and
and
ret
icebp
pop
std
test
mov
in
ljmp
jg
sbb
xchg
mov
cwtl
lret
daa
in
stc
int
mov
daa
stos
sbb
mov
shll
sub
adc
out
test
jb
movsl
into
shlb
cld
rolb
in
mov
insb
push
jmp
daa
cmp
and
test
inc
push
sbb
sub
jl
adc
ja
mov
sbb
jns
mov
movsl
pop
fistps
movb
nop
add
cmp
inc
popf
xchg
shl
cwtl
call
popa
add
sub
mov
sahf
push
clc
mov
shrl
sahf
add
mov
push
mov
addr16
or
iret
lret
loope
adc
std
mov
pop
imul
sbb
xorl
lret
jp
gs
dec
lea
or
loope
repz
and
ret
jne
cwtl
push
mov
movsl
add
fsubl
dec
inc
aad
push
test
jge
dec
aas
fldenv
jp
clc
sti
outsb
adc
jns
ror
jnp
mov
fildl
xlat
subl
daa
sbb
or
addr16
jo
xlat
cli
lods
lods
push
push
imul
jp
mov
jns
out
pop
add
lods
repz
cmp
pop
xlat
or
mov
pop
adc
jp
cmp
test
jmp
repz
rcrb
psubb
cmc
icebp
test
xor
jno
pop
jae
pop
nop
dec
ret
and
jle
xchg
addl
loop
clc
push
repz
push
je
addl
lods
enter
es
pop
jge
cmp
fldenv
movsb
sti
loopne
outsl
into
aaa
mov
add
test
imul
or
xchg
dec
add
inc
in
xchg
in
jle
cmpsb
inc
mov
scas
data16
sub
mov
sbb
es
shrb
pop
repnz
dec
and
push
scas
fucom
dec
cmc
sbb
xor
imulb
enter
jp
cmpsl
ds
mov
jne
xchg
test
loope
cmp
aas
into
mov
inc
dec
outsl
dec
jp
dec
jecxz
lods
into
ljmp
sarb
adc
pop
in
inc
rcrl
ret
out
adc
pop
lcall
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
jmp
ret
dec
icebp
dec
insl
mov
jns
hlt
mov
jl
lret
jl
add
imul
mov
dec
jl
push
cs
aad
aaa
mov
es
adc
loopne
jb
sahf
call
cmp
leave
or
popa
cmp
and
and
mov
pop
pop
bound
sub
lods
push
and
stos
bound
sub
sub
and
outsb
inc
es
inc
or
adc
sbb
test
dec
sbb
mov
ljmp
jnp
adc
fwait
mov
mov
rcrl
push
mov
nop
xor
sub
mov
insl
adcb
fwait
adc
lret
popa
add
lock
ret
xchg
push
sbb
mov
sbb
pop
xchg
mov
push
mov
pop
dec
cmp
xor
lods
pop
mov
std
in
outsb
mov
add
imul
cmpsb
std
mov
sbb
push
mov
lods
mov
xchg
push
mov
dec
leave
pusha
testb
icebp
push
loopne
cmp
dec
ds
cs
pushf
inc
mov
and
inc
jg
jmp
inc
inc
scas
and
fsubl
xor
pop
sub
xor
imul
aas
arpl
jp
in
outsl
nop
inc
jbe
sahf
push
movsb
xchg
pop
out
idivb
and
adc
std
gs
push
shrb
xchg
and
cmc
aam
push
imul
dec
stc
mov
dec
adc
cs
pop
push
xchg
mov
push
pop
sub
adc
leave
xor
xchg
mov
adc
lea
icebp
pop
mov
mov
in
clc
loop
lods
stos
test
pop
lret
pop
dec
daa
dec
xchg
cltd
pushf
fwait
ljmp
jmp
fldl
inc
lea
popf
pop
aaa
xchg
mov
mov
scas
pop
inc
mov
sub
pop
lea
icebp
dec
mov
das
xchg
lret
loop
sub
sbb
lock
sbb
insb
cltd
cwtl
mov
add
arpl
xchg
dec
add
lret
xchg
jns
or
jg
push
sub
mov
lret
icebp
sub
mov
out
pop
outsl
push
xor
mov
xchg
push
int3
rorb
loope
ds
rcrl
inc
clc
stos
or
clc
test
shll
jle
jge
jno
sbb
and
pop
dec
push
das
sub
pusha
cltd
loop
sarl
mov
jmp
jmp
imull
or
and
das
and
jmp
jg
adc
lret
repz
sub
in
dec
mov
fwait
movsb
push
sbb
stos
aas
in
xlat
neg
out
popa
leave
lods
adc
push
cld
test
sub
outsb
test
inc
cmpb
jns
push
xor
cld
xor
fsubl
mov
gs
mov
movsl
pop
or
xor
cs
outsb
addr16
das
imul
add
add
imul
mov
mov
sub
cmp
mov
jbe
jmp
dec
mov
cwtl
hlt
insl
push
jge
loop
loope
xor
cmpl
jns
jl
mov
imull
push
imul
popf
sbb
dec
pop
push
push
mov
pop
test
jno
aad
jno
in
roll
test
js
inc
and
dec
and
dec
push
faddl
sarl
and
mov
aam
jge
mov
sbb
int3
add
pop
repz
push
in
xor
push
xlat
in
fstl
mov
and
xchg
push
mov
mov
test
js
mov
ret
mov
pop
cmp
add
out
dec
cmp
out
push
cs
mov
sarb
pusha
ja
sbb
sub
cld
test
sub
and
nop
outsb
or
pop
jge
jnp
loop
push
lret
gs
adcl
daa
jb
pop
jle
xor
pop
pop
shl
cltd
or
add
lahf
add
push
aaa
int3
add
ret
push
gs
out
loopne
popf
adc
repz
stos
xor
sub
sbb
push
arpl
add
test
adc
mov
inc
in
dec
arpl
add
imul
lret
push
lods
bound
pop
sub
or
dec
or
out
or
test
and
lret
pusha
xchg
outsb
dec
push
push
cmp
xor
fidivs
lcall
aad
jle
adc
pushf
dec
stos
adcb
cmp
popa
dec
dec
mov
je
xor
push
jns
ret
cmp
mov
jns
shlb
repz
or
pop
inc
decb
or
or
mov
and
mov
je
inc
pop
cmp
adc
fnstcw
dec
sbb
sbb
fidivrl
mov
fadds
ficoms
aaa
sbb
out
mov
cs
faddl
cmp
cmpb
decl
js
scas
adc
data16
and
sbb
iret
test
daa
xchg
mov
sti
aad
cmp
aas
fnsave
mov
bound
lods
scas
std
mov
pop
stos
sbb
lods
cmp
inc
adc
btc
jl
sub
bound
arpl
adc
xchg
cmpsl
mov
outsl
add
pop
nop
lock
mov
lock
jl
out
sbb
pop
push
in
ret
xchg
inc
int
add
push
sbb
push
and
pop
push
mov
pop
or
fbstp
inc
xchg
ret
cwtl
cld
sub
iret
xor
pop
aad
ss
push
jge
or
test
mov
iret
mov
jg
fiadds
cs
popf
testb
adc
mov
add
das
movsl
xor
cmc
pop
sbb
mov
add
adc
jecxz
ss
adc
loope
stc
mov
ds
xor
test
xor
push
add
jnp
cmp
xor
push
test
jnp
arpl
ljmp
mov
mov
xor
xor
add
add
imul
mov
mov
jmp
cmp
lret
jge
dec
jo
push
sub
lret
jl
orl
xchg
sbb
rclb
sbb
dec
std
adc
or
lds
cmp
sbb
cmp
sub
sbb
jl
test
add
mov
scas
popa
lret
xchg
repnz
stos
in
mov
ficomps
insl
adc
push
les
jl
mov
cmp
fimuls
mov
xor
insl
push
xor
lahf
jle
adc
repnz
ficompl
lahf
out
mov
scas
push
dec
jmp
add
dec
add
push
and
cmp
sub
jb
shlb
jns
cmpsb
cmpsl
testb
xchg
mov
jle
addr16
push
ret
or
mov
ljmp
call
hlt
mov
loop
or
sub
out
out
popf
sbb
dec
bound
cld
push
test
in
jae
fsubrp
fistl
int3
int3
pushf
push
cmp
mov
stc
ljmp
aas
sbb
push
xor
jg
xchg
mov
fwait
test
jbe
sub
mov
js
dec
cld
lea
pop
aad
fmuls
mov
push
jle
push
out
stc
adc
mov
inc
divb
or
mov
data16
pop
scas
push
push
jnp
int3
orb
inc
dec
lret
clc
int
pushw
jb
cmp
dec
out
inc
inc
out
sbb
jae
dec
xor
gs
sbb
loopne
push
pop
cli
mov
sbbl
pop
sbb
mov
cwtl
jnp
mov
xchg
xchg
push
lret
inc
push
test
xchg
jp
and
push
add
rolb
jl
sub
std
xor
mov
in
out
movsb
cmp
pop
jnp
int
cmp
iret
jnp
mov
xchg
je
push
sbb
push
mov
in
in
out
test
and
imul
repnz
inc
mov
xor
imul
popa
aad
mov
out
cld
repz
cld
inc
mov
mov
sub
mov
adc
rcrb
lcall
pop
jecxz
lahf
imul
fisubrl
xor
mov
mov
aad
shlb
inc
xor
dec
mov
or
aas
adc
sub
imul
movsb
roll
jle
insl
add
mov
pop
push
xchg
in
and
mov
pop
or
imul
repnz
push
repnz
sbb
lock
fwait
inc
insb
sahf
popf
pop
and
or
jno
cmpsl
data16
cmp
or
sbb
mov
outsl
loopne
inc
test
push
and
in
cmp
jmp
ret
fidivs
mov
jne
or
test
ljmp
imulb
jb
out
cmpl
in
pop
mov
jbe
jmp
rorb
in
fisubl
cmp
push
test
mov
out
loope
pop
xchg
ficompl
iret
jae
mov
pop
mov
mov
loope
mov
std
sub
mov
mov
push
fmull
rol
call
mov
movl
movl
mov
xor
jmp
adc
mov
jge
repz
push
add
and
shlb
mov
jns
jl
add
aad
sub
out
int
mov
test
mov
xor
stos
leave
cmpsl
jne
sub
push
movsl
dec
xchg
aaa
in
leave
adc
sub
dec
or
jecxz
push
or
sub
xchg
inc
cmpsl
outsb
push
scas
out
push
imul
or
mov
mull
mov
xchg
jo
push
add
nop
add
pop
add
in
pop
cmpsl
test
push
jnp
mov
stos
push
mov
jge
mov
push
faddl
scas
into
icebp
or
cs
and
fldt
pop
mov
and
or
stc
inc
ljmp
les
dec
test
xor
pop
push
loopne
push
test
out
mov
mov
mov
adc
adc
mov
mov
push
jae
and
add
into
mov
or
push
js
outsl
add
sbb
jno
loope
fwait
in
mov
div
frstor
data16
shl
sbb
nop
icebp
jl
xchg
inc
inc
loope
push
gs
xchg
dec
popa
ficoms
cmpsb
shl
jnp
movsb
adc
test
je
into
sbb
pop
daa
jmp
test
fldcw
lret
inc
pop
mov
out
dec
pop
inc
jno
aad
jecxz
pop
loop
adc
in
enter
push
lcall
push
mov
cmpsb
stos
mov
popa
or
mov
jp
add
aas
cmp
add
mov
push
and
ret
xchg
in
mov
inc
and
push
jno
cmpsl
mov
inc
iret
mov
sub
leave
lods
push
jg
adcb
pushf
div
in
mov
lods
sub
xchg
sbb
push
mov
stos
inc
mov
lret
lcall
cs
pop
pop
nop
and
sub
gs
and
scas
sub
and
xor
push
ja
add
or
sub
add
shll
negl
push
mov
jl
out
mov
dec
add
imul
test
leave
popa
movl
or
dec
mov
fsubrs
xor
push
xchg
sub
pushf
test
jo
inc
add
mov
inc
adc
lret
lods
shll
roll
outsb
inc
xor
aad
fildll
xor
lahf
cmc
sarl
xchg
pusha
out
fwait
in
sub
lret
pop
fsubrs
push
dec
jle
xor
sbbb
push
clc
shrl
mov
sahf
inc
enter
daa
outsb
sarb
sbb
gs
fs
or
pop
push
jne
sbb
jb
mov
aas
adc
in
mov
arpl
jns
and
mov
ret
rcll
or
jno
enter
ljmp
push
mov
xchg
loope
xor
lahf
adc
cmc
sbb
push
inc
les
stos
jl
insl
add
jmp
jmp
push
daa
inc
imul
xchg
popf
scas
add
cmp
jl
imul
jle
dec
ret
jg
hlt
ror
xchg
add
push
jecxz
cmp
mov
lock
dec
adc
call
adc
fadds
jne
mov
mov
std
insb
mov
pop
xor
xor
cmc
in
fiadds
lret
aaa
and
or
cmpsb
inc
out
cld
jge
mov
push
imul
out
aad
mov
inc
mov
mov
repz
inc
stos
cmc
rorl
or
in
es
popf
int3
adc
dec
mov
stos
inc
hlt
sbb
push
inc
out
xor
ds
das
mov
push
mov
fisubrs
fldcw
jle
in
pop
add
rcl
out
fsubrs
shrl
cmc
mov
ret
sbb
ljmp
xchg
js
pop
mov
pushf
pop
xor
sbb
repz
xchg
clc
sub
enter
inc
dec
mov
xor
mov
sbb
ficomps
cltd
int3
and
mov
imul
push
lods
fimull
jg
pop
andl
loop
movsl
jb
or
xchg
mov
fsubrs
fsubrp
push
scas
xorl
lcall
xchg
inc
pop
mov
in
in
xchg
rcll
adc
dec
test
fldenv
out
add
jno
icebp
dec
sub
jecxz
data16
icebp
pushf
imul
jecxz
xchg
int
xchg
aaa
shl
xor
fcompl
xor
mov
fldl
dec
jmp
xor
or
jae
repz
sub
inc
push
lods
repz
cltd
insb
mov
jge
lret
arpl
dec
push
inc
scas
sti
sbb
in
lds
push
imul
mov
clc
xchg
push
loope
inc
push
es
push
jnp
jecxz
pusha
xchg
std
cmp
test
dec
test
out
mov
xlat
pushf
aad
adc
scas
or
mov
leave
and
popa
xrelease
lock
sbb
fstps
repnz
sahf
into
mov
pop
lods
int3
and
fwait
lods
icebp
push
xor
pop
and
push
enter
mov
sub
fidivs
gs
sub
inc
cmp
and
xchg
mov
test
inc
xlat
jge
daa
sub
and
fldl
ret
pop
subb
cli
push
xor
inc
adc
cld
pop
imul
xor
inc
dec
inc
shll
roll
and
adc
mov
shr
ret
inc
std
mov
test
dec
xor
push
rcrb
cs
data16
aaa
xchg
std
insl
out
pusha
sarb
and
sbb
add
sti
in
movsb
les
jnp
xorb
pusha
sbb
cli
inc
es
mov
das
mov
jns
push
dec
fwait
jo
mov
ret
xor
dec
jl
inc
mov
ret
dec
repz
sbb
mov
test
repz
and
jb
sub
addr16
jg
scas
and
push
call
in
mov
jmp
push
pushf
scas
stos
jbe
pop
arpl
cld
lret
sub
jns
jl
mov
leave
insl
push
shlb
adc
lret
sahf
ret
sbb
iret
push
mov
jno
pushf
sbb
sub
rclb
insl
jns
mov
popf
adc
pusha
xchg
dec
test
pop
inc
push
and
mov
jnp
dec
and
xchg
add
iret
movsl
jne
sbb
or
xlat
inc
xchg
inc
mov
stos
pop
shlb
negl
je
and
out
jmp
sub
add
dec
cli
add
sahf
push
lock
faddl
sub
push
pop
test
xchg
adc
out
fstl
cmpsl
ja
cmp
xchg
inc
mov
fcoml
xchg
dec
fwait
je
stos
fwait
ja
cmp
xor
out
adc
daa
orb
lret
testl
jae
pop
shlb
mov
test
or
shrb
pop
pop
add
push
cmpb
fwait
dec
scas
sahf
add
das
push
outsl
jns
aam
pop
jmp
adc
and
fldenv
cwtl
mov
divl
aas
mov
mov
icebp
jne
imul
mov
cmpsl
test
call
mov
jecxz
fdivs
inc
jne
push
in
jecxz
cmp
in
dec
mov
and
cmp
xlat
add
sbb
pop
mov
lods
ss
lea
ljmp
jb
xor
icebp
faddl
lea
jle
mov
mov
jmp
fsubrs
rcrl
movsl
and
sub
sub
mov
xor
mov
mov
leave
pop
fcompl
addb
push
insl
xor
adc
mov
jmp
repnz
jmp
mov
les
mov
je
fldl
ljmp
add
imul
lcall
fcomps
mov
xor
frstor
xchg
or
jno
aad
sti
out
push
js
arpl
mov
dec
mov
fstps
jmp
lea
sub
pop
pusha
fwait
lds
inc
xchg
jecxz
mov
mov
cmp
filds
cmp
cmc
lock
ds
ja
fcomps
jmp
sub
xor
out
mov
mov
mov
sub
lahf
imul
inc
mov
mov
xchg
aad
nop
mov
mov
rolb
dec
popa
addr16
cmp
iret
sbb
addl
test
sbb
xchg
leave
cmp
inc
sbb
jmp
mov
dec
pop
push
stc
mov
xchg
fimuls
mov
ret
mov
test
push
push
xor
sub
push
aam
scas
popf
iret
pop
push
lea
fdivrl
or
mov
add
sub
lock
loope
sarl
in
lret
rolb
adc
enter
xor
insb
cmpxchg
push
pop
ret
cmp
push
jnp
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
jmp
dec
mov
mov
dec
imul
mov
jnp
insl
xchg
jl
lret
jl
mov
xchg
dec
sti
mov
jo
fmull
subb
sub
scas
loope
pop
mov
sub
add
shrl
subl
or
cmp
xchg
inc
xor
or
jne
stos
sarl
testb
inc
push
icebp
fs
out
fldenv
jb
arpl
mov
addr16
in
clc
inc
stos
lock
cmc
mov
mov
cs
cmp
sbb
mov
mov
mov
fwait
cli
popa
das
or
int3
js
stos
mov
pushf
leave
mov
pop
cmp
pop
inc
aad
jb
mov
out
xchg
add
daa
xchg
test
shrl
out
pop
pushf
psrad
xchg
adc
xchg
mov
enter
paddsb
inc
fwait
ljmp
test
imul
ret
and
jmp
insb
test
mov
inc
rolb
jae
loop
jecxz
lahf
sbb
scas
mov
xchg
pop
jnp
call
jp
mov
mov
cmp
or
in
and
or
mov
inc
std
dec
jae
lret
int3
test
xchg
aad
sbb
adc
jmp
in
cmp
pop
arpl
sub
xchg
cmpb
out
aad
in
jge
rcl
mov
push
or
sub
add
dec
pop
dec
pop
dec
mov
lahf
in
dec
cwtl
ret
fimuls
adc
push
mov
sbb
adc
lods
mov
ss
fwait
and
ds
nop
test
jmp
inc
ljmp
jmp
test
jb
ds
adc
in
pop
xor
cli
rorl
cmpb
std
das
cltd
frstor
notl
and
dec
xor
stos
jmp
fcompl
cmp
lods
fsubrs
paddd
and
lret
jl
jo
fidivl
leave
pop
adc
sub
adc
testb
xchg
jnp
andl
jge
leave
dec
mov
adc
push
xchg
and
and
push
rcll
les
fists
int3
andb
lret
cmc
xchg
and
popf
and
mov
or
or
imul
push
cli
mov
movsl
pop
mov
jmp
add
sti
adcl
in
xchg
lods
fstpl
or
js
paddq
push
ljmp
test
pop
mov
inc
dec
jp
aaa
jb
fwait
rcr
dec
aad
jno
nop
mul
cmpsb
mov
pop
sbb
fldenv
dec
in
mov
ja
sub
rol
mov
ret
xor
dec
loopne
lods
fsts
sbb
call
cld
xchg
in
data16
mov
dec
push
out
inc
xlat
out
addr16
enter
or
adc
or
dec
mov
add
cmp
sbb
sbb
fists
sub
add
jns
pushf
mov
roll
stc
imul
add
mov
mov
jmp
movsb
loopne
mov
mov
pop
push
int
pop
ret
cmp
jl
or
inc
sub
xchg
ret
dec
pop
shrl
hlt
push
negb
aaa
leave
cmp
dec
sahf
mov
mov
push
lea
xchg
inc
dec
cld
cmpsb
daa
cmp
mov
or
lock
fnstenv
outsb
lods
sbb
ficompl
inc
inc
nop
dec
lods
inc
stos
dec
mov
popf
mov
add
out
or
and
or
mov
pop
rcrl
dec
lahf
shll
gs
push
mov
faddl
mov
inc
inc
mov
add
out
into
outsb
leave
psadbw
test
insl
scas
cmp
pop
xchg
pop
xchg
or
int
les
cmp
fwait
lret
stc
pop
mov
dec
jge
icebp
fsts
mov
sub
stc
or
mov
cltd
xchg
jns
sbb
push
jo
xlat
shll
dec
dec
or
pop
sbb
in
mov
cmp
cmpsl
add
mov
andl
and
or
fnstenv
xchg
sub
jl
cmp
hlt
add
add
cmp
jle
adcb
xchg
mov
in
gs
das
sbbl
mov
rcl
enter
push
movsl
dec
idivl
push
lcall
mov
jl
adc
or
gs
xorb
add
push
sbb
imul
xor
in
pop
sbb
push
lret
mov
dec
pushf
sarl
iret
aad
xchg
enter
out
fidivrs
out
mov
enter
xchg
push
pushf
mov
popf
je
jo
cmpsb
vmovdqa
dec
or
xchg
xor
mov
call
sti
xor
std
push
int3
outsb
pop
repnz
incb
lahf
dec
pusha
es
addr16
sub
mov
pop
xchg
xchg
outsb
aaa
push
andb
fdiv
repz
rorl
add
gs
ret
aad
push
mov
clc
nop
xor
mov
jo
shufps
lock
pop
xchg
adc
test
lods
inc
pop
pop
test
lahf
xchg
inc
mov
mov
jo
nop
test
inc
inc
stos
ljmp
and
mov
out
fwait
cmp
incl
lods
cmp
mov
jp
sbb
xchg
hlt
adc
int3
stos
or
push
cli
in
cmp
loop
sub
mov
sub
mov
popf
jge
fpatan
mov
out
cmp
cmp
enter
xor
or
cmc
stos
rcrb
fstpt
cmp
fstpl
xor
ja
ret
push
sub
dec
dec
push
lahf
out
push
adc
inc
dec
stc
or
das
in
dec
mov
pop
dec
and
lahf
sbb
clc
sub
mov
sbb
cmp
mov
scas
pop
cmp
fs
lods
ret
mov
loop
mov
std
jae
test
lahf
popf
int
cld
adc
insb
mov
jge
xor
add
imul
jmp
lret
jo
or
jmp
sahf
xor
insb
scas
push
lret
jl
scas
inc
mov
shrb
scas
push
sub
fidivrl
jmp
and
push
ficompl
sbb
lret
in
sub
cmp
mov
push
mov
mov
xchg
fistps
push
stos
mov
dec
fdivr
xchg
push
ss
inc
arpl
push
test
mov
in
xchg
loopne
pushf
cmp
jae
cmp
pop
es
xor
mov
outsb
rol
and
mov
add
add
pop
clc
mov
and
pop
data16
mov
or
fnstcw
movsb
stos
pop
add
mov
jne
and
ds
adc
jne
ds
mov
lret
cmpsb
ds
inc
sub
and
lret
lock
subb
ret
mov
inc
pop
hlt
mov
mov
loope
fwait
sub
mov
dec
sub
xor
fisttpll
pop
pop
out
test
pushf
cmp
xor
xor
nop
lret
mov
mov
push
repz
dec
aaa
dec
sbb
push
cmc
pop
or
cmc
sbb
js
cmp
dec
into
pop
rcr
loop
jae
jg
or
inc
add
adc
jnp
adc
cld
enter
mov
push
rclb
adc
push
leave
xor
or
stos
pop
jg
lods
insb
mov
mov
jmp
pop
testl
mov
xchg
mov
mov
shll
push
and
xchg
pop
adc
dec
mov
jne
es
aad
in
cmpsl
cmp
push
pusha
add
jo
movsb
pop
movsb
movsb
sub
ret
pop
stos
adc
daa
sub
mov
adc
lahf
xchg
and
mov
pop
mov
cmp
test
xchg
cmp
arpl
jae
insl
lock
sbb
icebp
fdivl
pop
outsl
cltd
mov
jmp
fs
sbb
inc
bound
jg
sub
jns
inc
sub
mov
adc
mov
inc
fcomps
jae
inc
inc
popa
xor
call
pop
mov
jl
clc
jno
mov
xor
dec
and
add
pop
mov
or
cmp
push
mulb
addr16
push
dec
movsl
frstor
mov
daa
or
mov
and
push
sarl
mov
mov
mov
sbb
fcmovnb
and
sub
pop
and
xor
daa
in
rep
adc
jns
lea
inc
xor
loop
or
cmp
les
dec
int
pushf
push
and
jo
jmp
pop
sbb
pop
out
and
mov
push
mov
loop
lcall
je,pt
clc
mov
mov
pop
push
mulb
in
jge
adc
add
pushf
inc
fwait
xchg
sbb
mov
cmp
dec
lods
adc
xor
or
js
outsb
adc
and
adc
imul
and
mov
imul
mov
hlt
fcomp
aaa
je
fiadds
fistpl
or
data16
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
jmp
mov
popf
dec
pop
stc
ss
xchg
adc
xor
cwtl
jl
lret
jl
or
nop
pop
shrl
jg
push
in
mov
push
jecxz
xchg
sub
aam
mov
movl
popa
in
ljmp
and
stos
enter
xor
mov
sbb
pop
outsb
mov
fdivrl
jge
mov
mov
sub
mov
in
and
mov
loope
push
in
loope
jns
cmp
sbb
clc
fnstsw
test
test
pop
cltd
lock
nop
mov
lahf
dec
push
imul
das
mov
push
xchg
andl
mov
jmp
in
daa
fwait
nop
mov
sbbl
xchg
dec
and
xor
sub
jns
pusha
sbb
mov
ficompl
cmp
orb
and
int3
lret
stos
and
cli
adc
shl
sti
cmc
push
lods
sub
adc
fbstp
js
outsl
mov
sarl
test
push
sarb
scas
imul
or
and
fisubrl
add
loope
add
mov
jae
jle
js
mov
and
jmp
push
out
cmp
addr16
dec
out
fsubl
setb
ljmp
fildll
jl
cs
sbb
aam
in
sub
adc
ds
leave
xor
adc
std
pop
pop
ret
mov
and
pushf
dec
test
push
lods
lods
dec
jne
sub
addr16
jg
mov
xchg
or
fwait
in
pop
out
pop
push
outsb
mov
sbb
lock
aad
xchg
movsl
sbb
rol
insb
sub
push
int3
fdivs
dec
aas
push
jmp
pop
jne
pop
cmp
enter
cwtl
std
imul
mov
insl
fdivr
sub
or
mov
nop
or
imul
mov
sub
pop
das
or
jle
inc
or
ret
insl
add
cmpsb
pop
icebp
outsb
push
jne
inc
and
jp
mov
mov
test
or
stos
jae
test
push
and
mov
jo
xchg
mov
and
inc
jno
jmp
mov
inc
xchg
cwtl
sub
dec
inc
subl
cmpsb
popa
sbb
cld
sahf
cltd
pop
out
out
pop
sahf
adcl
cwtl
dec
fcmovnbe
loope
sub
xchg
jg
ret
movsb
inc
push
xor
imul
call
int
dec
push
and
or
or
jb
ret
dec
stos
sahf
lds
test
sbb
jg
pop
adc
fcomp
mov
inc
jge
cmp
lret
push
in
sub
out
clc
cmpsl
pop
popa
icebp
inc
add
and
aaa
mov
pop
jmp
mov
xor
xlat
aad
daa
sbb
cli
daa
inc
subb
push
mov
test
sbb
scas
xchg
fildll
sub
insl
enter
jno
aaa
je
inc
and
inc
and
mov
out
cltd
repz
stc
push
push
imul
dec
imul
pop
roll
xor
xor
jg
mov
rorl
scas
xlat
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
andl
push
adcl
push
push
sbbl
push
subl
call
push
subl
call
test
je
push
pop
jmp
andl
xor
xor
inc
mov
cmpl
jne
pushl
pushl
push
pushl
call
cmpl
jb
orl
movl
dec
movl
add
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
add
mov
lea
inc
mov
mov
and
mov
mov
sbb
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
sbbl
mov
movzbl
and
mov
xor
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
xor
mov
add
mov
mov
mov
cmp
mov
mov
mov
mov
je
sub
mov
xor
add
imul
movl
mov
movl
jmp
xor
movzwl
sub
add
mov
xor
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
sbb
add
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
call
jmp
mov
mov
orl
mov
adcl
xor
adcl
add
cmp
movl
jne
push
pushl
pushl
call
orl
mov
mov
mov
or
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
sbbl
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
xor
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
and
mov
mov
sbb
movl
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
xor
or
sbb
mov
movl
mov
or
mov
sbb
mov
mov
and
mov
xor
xor
add
mov
xor
xor
add
movl
lea
movl
mov
movl
cmp
movl
ja
jmp
sbbl
mov
and
mov
orl
xor
adcl
lea
andl
push
mov
xor
andl
lea
push
mov
or
mov
pushl
adcl
call
addl
mov
mov
sbb
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
lea
sbbl
mov
mov
xor
addl
xor
xorl
add
and
mov
adcl
xor
lea
mov
cmp
movl
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
mov
mov
mov
mov
movl
movl
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
movl
mov
mov
movl
push
mov
mov
mov
push
movl
mov
mov
mov
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
mov
sbbl
xor
add
cmp
je
and
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
xor
add
push
pushl
pushl
mov
call
mov
mov
jmp
cmp
mov
lahf
pop
lock
lds
jl
in
decl
imul
xchg
lods
mov
ja
add
mov
iret
je
rcr
in
fdivrs
cmp
jp
loop
pop
sbb
iret
rcrl
dec
rcl
and
adc
push
fsub
or
xor
inc
hlt
jl
lds
loope
dec
mov
ljmp
addr16
ss
cmpsb
in
dec
cwtl
jmp
mov
dec
scas
repnz
lahf
test
adc
add
jne
jmp
push
imul
pop
or
pop
jns
jl
cli
sbb
sub
out
int
sub
push
pop
inc
push
sub
adc
sub
mov
fstp
mov
sbb
mov
or
adc
or
xchg
clc
push
imul
repnz
stos
mov
mov
cmp
push
imul
loop
mov
mov
loopne
div
iret
jne
stc
test
xchg
mov
insb
mov
mov
addr16
scas
push
pop
cltd
pop
jne
dec
xor
or
test
adc
sub
ret
pop
loopne
hlt
xor
cmp
pushf
inc
mov
loopne
int
push
fisubs
ret
push
cmp
adc
mov
jo
jge
lds
lcall
cltd
push
icebp
decl
mov
dec
shll
jbe
fcomp
scas
test
sbb
and
mov
cwtl
test
push
out
adc
pop
jmp
pop
sbb
mov
ret
or
stc
mov
mov
and
mov
dec
jb
mov
cld
bound
arpl
cli
jecxz
xchg
das
cli
or
test
jge
out
inc
mov
in
scas
xchg
std
fucom
pop
push
cli
mov
gs
pop
imul
pop
cli
sub
test
lock
sbb
lods
jmp
pop
mov
push
ret
jmp
int
xor
inc
mov
adc
sbbl
arpl
mov
mov
int
mov
pop
sub
mov
leave
paddb
faddl
sbb
xchg
addb
sbb
mov
and
add
popf
ljmp
xchg
stc
faddl
mov
mov
bound
lahf
imul
jp
jo
push
ret
iret
xorl
xchg
push
mov
xchg
ss
xchg
lret
push
movsl
sub
ss
adc
push
js
lcall
and
push
push
inc
std
mov
mov
mov
jns
sbbl
mov
add
ret
jns
ret
or
inc
lock
sub
mov
cmp
push
test
popf
loopne
cmp
scas
mov
aad
cmpsb
mov
call
ja
mov
rcll
out
test
pop
inc
push
push
adc
divb
loopne
and
outsb
int
push
adc
mov
push
data16
lods
fcomps
xchg
dec
aad
test
lret
mov
inc
inc
loope
dec
fidivrl
sbbb
add
lods
cmp
push
decl
int3
sbb
jb
shll
dec
sti
xor
adc
mov
scas
cmpsl
cmp
inc
outsl
mov
fsub
sahf
jno
sbb
jge
push
mov
jmp
or
aam
jns
xchg
insb
mov
jl
lea
or
or
jmp
testl
push
rcll
adc
pop
lahf
xor
jl
mov
mov
inc
imul
loop
add
jmp
ffree
jp
cltd
adc
gs
mov
jl
lods
aaa
push
stc
movsb
push
mov
incl
into
xor
and
loop
jmp
add
sub
fdivs
fs
mov
cmp
popa
lahf
and
mov
mov
xchg
mov
dec
leave
inc
pop
jmp
fwait
cmpsl
xchg
mov
pop
insb
cwtl
aas
cmp
movsb
jge
lahf
cli
adc
lods
int
iret
insl
and
sti
add
pop
notl
cld
fwait
andl
xor
mov
mov
adc
insl
mov
lcall
jp
in
mov
out
cli
icebp
xchg
inc
lods
popf
ljmp
fstpt
out
lret
push
mov
jecxz
jge
mov
loopne
jl
or
sub
pushf
in
pop
mov
push
in
pusha
push
pop
ret
fiaddl
ja
push
xor
or
mov
insl
cmp
fs
adc
das
jns
roll
sub
sub
and
dec
mov
addr16
aas
jmp
out
popa
mov
or
stos
cmp
aaa
icebp
movsb
adc
mov
out
inc
mov
adc
jne
es
cmpsb
out
xor
jo
ret
mov
call
and
or
loopne
cli
gs
pop
stos
sbb
adcb
pop
sti
out
or
cmpb
xchg
pop
xchg
sbb
ss
push
cmp
sub
pop
mov
imul
data16
out
push
mov
stos
lods
imull
int
test
mov
scas
push
inc
xor
test
jge
add
xchg
push
cwtl
arpl
movsl
pop
pop
dec
test
jns
jg
test
testl
adc
repnz
addl
jmp
es
mov
insl
sahf
stc
push
xchg
fidivrl
movsl
test
jecxz
in
mov
cltd
and
or
enter
push
lods
adc
cmp
jp
lds
xchg
mov
and
dec
xlat
cmp
sarb
add
out
icebp
imul
jbe
mov
dec
ss
xchg
test
inc
sbb
cmpsl
ja
mov
jbe
xlat
nop/reserved
jns
ja
and
out
shr
popf
out
xchg
mov
jne
mov
push
in
popa
xchg
sub
adc
push
push
movsl
pop
aad
push
mov
scas
adc
dec
arpl
dec
movsl
shll
sub
xchg
jg
ljmp
xchg
sub
cmc
pop
testl
cmp
sub
sbb
jg
cmc
scas
push
mov
fnstsw
pop
push
in
push
mov
cs
ja
shlb
mov
inc
cmp
push
stos
loope
jecxz
xor
and
xchg
sahf
cmp
jl
dec
adc
in
sub
mov
out
inc
mov
jns
iret
pop
enter
shlb
xchg
mov
inc
lret
jl
jmp
iret
outsb
pop
mov
adc
pop
cmpsl
adc
jne
mov
cmc
xor
inc
clc
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
jmp
icebp
jmp
imul
hlt
add
cmpsl
jns
jl
sbb
xor
mov
popa
insb
clc
leave
andl
cmpsl
mov
jle
xchg
inc
jg
jnp
stos
push
bts
inc
incb
lods
pushf
in
mov
insb
ljmp
push
scas
test
push
dec
enter
mov
dec
repnz
jge
pusha
test
inc
fwait
dec
cmc
or
jne
nop
out
ss
fnstsw
sbb
sahf
sbb
call
push
stos
out
and
rcrb
inc
inc
jle
mov
call
pushf
cwtl
fsub
jle
adc
jne
pop
icebp
inc
stc
imul
xchg
xchg
rol
rolb
arpl
mov
loopne
sub
fbld
add
lret
jg
gs
xor
cmc
lods
adc
push
leave
ret
or
push
mov
je
sahf
adc
mov
fstl
in
xor
sbb
and
push
fnstsw
clc
sbb
xor
or
add
push
imul
mov
stos
fsubrs
rorl
jno
dec
push
mov
out
stc
int
leave
mov
mov
push
les
icebp
notl
mov
mov
addb
lret
sbb
jl
adc
ss
mov
push
and
int3
cmp
cmpsl
mov
xchg
dec
sub
lret
mul
inc
jmp
js
sub
arpl
or
add
popf
fwait
push
incb
pushl
jno
mov
mov
push
pop
wrmsr
inc
andl
mov
push
xchg
cmp
rclb
inc
fidivs
hlt
xchg
insl
stos
xor
or
add
add
mov
movsl
subb
fwait
xchg
scas
cltd
pop
addr16
stc
pop
cmp
lds
mov
inc
xor
jp
jno
enter
sub
xchg
jnp
insl
cmp
test
lds
and
in
repz
jmp
pop
pop
jge
addb
mov
mov
mov
mov
adc
lds
jmp
stos
arpl
mov
add
loop
in
jl
lock
pusha
push
test
out
jmp
imul
sbb
testb
sub
into
js
push
outsb
add
repz
jmp
xor
cmp
popa
xchg
jle
aas
aad
jae
fdivrs
jle
jg
negl
push
jbe
add
stos
cmp
sbb
addr16
gs
dec
push
stos
xchg
push
out
pusha
or
and
inc
in
decb
fdivrs
inc
push
push
or
les
and
fs
xlat
dec
dec
loop
cmc
ja
push
mov
arpl
jnp
mov
mov
mov
cmp
jnp
push
cs
xor
cmp
in
fcom
je
inc
push
jmp
jmp
idiv
and
lods
lret
pop
lds
cltd
shrb
repnz
fcoms
int
addl
xchg
or
or
lret
outsl
jmp
mov
fidivrl
xor
lods
rcr
mov
cmpsl
sub
sbb
lahf
stos
lcall
scas
bound
fwait
xchg
and
je
lds
repz
jns
out
scas
mov
sub
ljmp
aas
mov
mov
xor
add
mov
jmp
push
mov
test
notl
jl
cmpsl
jns
jl
dec
jp
out
cmp
dec
ss
mov
xchg
call
out
jmp
int3
xor
ret
stos
mov
pop
push
pop
call
les
dec
aas
mov
in
in
aas
repnz
icebp
inc
push
dec
scas
sub
sbb
inc
jno
jmp
dec
sbbb
dec
jns
sbb
push
mov
je
mov
dec
dec
scas
mov
les
call
repnz
ret
cmpsl
jo
push
pop
cmp
cmp
mov
and
in
loopne
add
sub
notb
ret
std
xor
insb
jp
and
in
xlat
mov
adc
jg
push
inc
push
push
inc
cmp
ljmp
inc
xlat
and
push
sbb
xorb
and
mov
loop
shrb
sub
je
pop
popf
loop
dec
add
js
mov
ret
add
int
mov
gs
pop
adc
daa
lods
data16
xchg
testl
cmp
jno
mov
or
les
int3
ret
sub
adc
cmp
and
adc
out
fldcw
orl
dec
jae
xor
jl
mov
adc
stos
and
or
ja
inc
jb
dec
lret
sbb
pop
sub
and
test
cmp
mov
cld
xor
xorl
push
iret
adc
and
sub
mov
out
jbe
mov
jle
lahf
pop
push
inc
push
es
lret
andb
in
lods
mov
rclb
jbe
fisubs
scas
divl
cmp
jo
bound
jae
add
int3
jno
sub
incb
and
mov
or
or
mov
cmp
push
outsl
jnp
lods
jmp
adc
loope
leave
mov
mov
sub
imul
xchg
gs
je
mov
clc
ljmp
jmp
nop
dec
xchg
lahf
out
push
inc
mov
pop
movsb
mov
shll
xor
push
dec
stos
mov
rcll
cmp
loopne
cmp
js
out
adc
js
push
lods
lahf
and
loop
xor
inc
inc
cmp
pop
lds
add
movsb
aam
mov
add
testb
mov
ret
movsl
shll
mov
popl
repz
xchg
cli
jo
movsb
test
int3
loop
pop
cmpsb
cmp
inc
pop
mov
mov
push
or
ret
push
sbb
jbe
das
and
mov
adc
in
ret
mov
mov
or
mov
sahf
gs
clc
loope
mov
nop
dec
sbb
sbb
or
or
data16
shl
loopne
add
xor
push
movsl
aad
je
lds
pop
arpl
cltd
mov
aaa
inc
outsb
fbstp
and
loope
pop
cld
or
out
lcall
cmpsb
cli
adc
test
xchg
pop
add
scas
sub
adc
pop
aam
lret
push
roll
xchg
mov
jge
clc
inc
push
jne
int3
or
push
xchg
cmp
jle
mov
in
sub
dec
ja
loop
jne
pushl
call
mov
xor
pop
add
jmp
xchg
pushf
out
icebp
jbe
popa
out
bound
dec
popa
stos
jl
cmpsl
jns
jl
in
std
and
mov
mov
jno
add
push
out
js
test
sbb
mov
repnz
push
push
sub
jge
sub
mov
hlt
mov
cmc
pop
mov
das
sbb
nop
pop
jo
fstps
lods
jp
jge
mov
data16
cmp
sub
ficoml
cmp
dec
pusha
add
or
inc
cmpsl
sbbb
mov
scas
std
in
mov
add
pop
add
mov
adc
xchg
ds
lret
mov
dec
or
push
ljmp
icebp
es
call
pop
dec
xor
xchg
push
test
ja
fwait
push
push
push
dec
mov
pop
jo
jns
sub
addr16
mov
add
loop
sub
or
push
imull
or
addl
rcrl
mov
dec
fs
rcl
stos
in
dec
sub
mov
sahf
fbstp
stos
loopne
faddl
sub
imul
mov
rorl
aam
or
xchg
sbb
cmp
mov
adc
aas
mov
and
xchg
cmp
orb
xchg
add
loopne
mov
mov
mov
andl
pusha
mov
stc
or
sbb
aad
and
fistps
push
mov
lock
mov
jmp
pop
adc
pop
pop
jb
inc
mov
fwait
fwait
add
enter
sub
jl
jae
jae
lods
lahf
adc
rcrl
pop
mov
xor
hlt
adc
ds
inc
mov
jno
jo
es
xor
and
notb
xor
cmc
in
add
sub
mov
aas
in
dec
ss
mov
lock
and
dec
sub
xchg
inc
push
call
xchg
and
clc
mov
xchg
mov
push
stos
inc
cli
inc
adc
jg
inc
adc
adc
lret
push
jbe
test
fsubp
inc
and
dec
loop
push
into
aam
fld
xor
bound
aas
sbb
ds
leave
movsl
in
sub
mov
mov
in
imul
rcll
ja
addr16
aaa
xchg
mov
mov
push
xchg
stos
mov
lods
cmp
aad
mov
jecxz
fisttpl
push
pop
fisttpll
pushl
lret
or
jno
sbbb
pop
xor
pop
shrl
sub
inc
mov
test
mov
gs
test
data16
cmp
stos
inc
jl
adc
dec
sbb
cmp
jne
daa
sub
stos
inc
push
sub
outsl
jae
loope
loope
insl
and
inc
shlb
jmp
int3
push
out
outsb
jbe
jecxz
dec
mov
push
nop
dec
add
test
out
mov
xchg
mov
inc
or
lcall
push
adc
or
roll
and
push
cmpsb
inc
adc
dec
ja
add
add
in
xchg
push
in
push
cmp
inc
je
and
fs
pop
jbe
cmp
lea
mov
in
pop
mov
in
push
pop
sub
xchg
cmp
jns
fsubrs
scas
xor
jbe
pop
adc
cmpsl
jmp
pop
push
pop
leave
ret
push
mov
push
movl
mov
sbbl
mov
andl
jmp
pop
sbb
pop
xor
popa
inc
cmpsl
push
lcall
jl
mov
sahf
aam
fnstcw
dec
aam
lret
iret
lahf
movsb
ja
inc
rol
push
loop
add
mov
lret
adc
daa
inc
outsb
push
addl
popa
in
or
sbb
in
inc
lea
out
inc
repnz
or
sbb
add
add
je
sbb
dec
sti
inc
sbb
fists
jns
sub
shrl
adc
or
mov
cmpsl
ja
clc
sahf
xchg
mov
test
test
mov
mov
adc
push
and
dec
insl
sub
lea
ss
dec
testl
mov
call
cmp
pop
jecxz
xor
js
aam
shrb
loopne
aas
push
push
dec
or
je
jae
add
dec
push
hlt
push
test
movsl
ja
xor
cmp
lock
xor
insl
outsl
push
xor
jge
iret
daa
dec
pusha
jmp
insl
imull
lods
pop
test
and
xor
scas
or
xchg
sub
cld
lds
sub
push
pop
xor
adc
adc
add
ret
stc
add
push
jns
jge
sbb
lock
pop
xor
add
add
shll
js
std
stc
sbb
leave
shll
inc
insb
xchg
lahf
adc
lret
pop
int3
outsl
in
lret
cmp
daa
jb
xor
jl
and
ds
mov
das
push
mov
mov
enter
adc
cli
in
adc
xor
cld
xchg
adc
daa
pop
lock
or
xlat
loopne
fistl
nop
sbb
dec
aas
cmpb
xor
hlt
cmp
push
in
jae
xor
mov
push
lahf
push
scas
push
sbbl
sbb
jnp
or
flds
pop
sub
je
loop
insl
sub
stc
adc
cmp
aas
xor
mov
stos
add
loopne
cmp
cmc
test
fidivs
aad
mov
mov
pop
js
cltd
jbe
push
sub
mov
js
and
sub
push
lret
xor
push
je
mov
dec
data16
aad
adc
pusha
or
outsb
hlt
out
insb
pop
mov
testb
out
add
lods
add
andl
xor
cmp
jne
adc
mov
movzwl
add
mov
add
subl
mov
addl
mov
adc
mov
movzbl
adc
mov
xor
push
xor
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
mov
mov
orl
xor
addl
add
movl
mov
mov
movl
movl
mov
mov
movl
push
mov
movl
mov
cmp
movl
je
mov
sbbl
xor
xorl
xor
lea
xorl
xor
cmp
jne
jmp
add
add
xor
mov
orl
xor
movl
add
mov
or
mov
xor
xor
mov
jmp
daa
movsl
or
scas
add
clc
push
and
cmp
jle
jl
xchg
shlb
adc
dec
inc
xorl
adc
inc
stos
clc
add
jp
push
lahf
in
test
push
or
sbb
lock
repz
push
jge
jb
aam
jne
sub
std
xor
mov
inc
pop
shlb
mov
shll
js
jnp
insl
fisubs
lret
add
inc
inc
dec
or
jnp
in
dec
inc
fwait
movsl
icebp
movsl
sub
pop
push
mov
pop
bound
jbe
push
inc
imul
bound
cmpl
mov
pop
and
fmuls
outsl
mov
push
sbb
push
or
lret
jp
mov
inc
fdivrs
mov
pop
mov
loop
jge
xchg
fsts
or
mov
mov
mov
xchg
and
cmp
pushf
jae
push
inc
int3
insl
mov
movsl
inc
lods
xlat
cmp
std
scas
sub
jbe
push
lret
push
and
fcomp
fistpl
imul
hlt
in
lods
jg
jbe
lret
mov
aaa
dec
sbb
loope
push
sub
mov
into
pop
sti
sbb
or
pushf
hlt
imul
popa
or
faddl
ret
mov
sti
xchg
in
gs
cmp
add
scas
dec
lret
xchg
pushf
cli
and
add
and
and
mov
in
insl
shrb
pop
insl
pop
rcr
inc
xchg
mov
fisubl
ja
push
mov
je
rorl
xor
sub
cmp
pop
imul
mov
rorb
cmc
push
gs
or
fists
negb
sub
fidivs
mov
mov
jae
push
lods
test
mov
push
test
out
jnp
inc
mov
sbb
movsb
pop
bound
jp
jmp
push
jnp
ret
fsubl
out
stc
lds
sbb
mov
mov
push
cmp
pushf
pop
pop
out
dec
ss
leave
mov
inc
test
lret
push
fwait
int3
sahf
inc
cltd
stos
mov
pop
add
pop
fwait
mov
jecxz
mov
enter
insb
sahf
or
xchg
xlat
fcmovb
pop
xchg
ss
imul
fwait
cmpsb
push
mov
out
aaa
dec
fstpt
pushf
and
push
fmull
popf
push
popf
mov
jnp
mov
outsb
popa
sbb
jecxz
stc
data16
sbb
mov
adc
mov
mov
add
mov
mov
jmp
in
jae
jge
bound
xor
repnz
mov
jl
pop
xchg
and
lods
in
es
mov
ds
adc
lret
cwtl
pop
mov
aaa
arpl
pop
outsb
lcall
les
fisttpll
xor
xor
fiaddl
sti
ret
icebp
lds
or
add
dec
pop
jle
std
jns
repnz
push
jge
mov
loopne
sahf
jecxz
divl
jge
push
xlat
mov
nop
xor
cs
cmp
xchg
int3
adc
cs
jg
inc
push
test
mov
loope
rcl
movsb
or
xchg
test
sub
mov
sub
jp
mulb
mov
mov
das
mov
addr16
dec
or
pusha
mov
cmc
or
xchg
inc
lock
fldcw
or
addb
in
mov
outsl
mov
pop
in
push
jmp
xchg
aam
out
sub
mov
dec
call
jle
mov
data16
pop
dec
es
push
ds
pop
insb
push
or
jecxz
and
cmp
pop
cmc
pop
fsubrp
pushf
mov
mov
loop
inc
dec
push
cmp
inc
inc
dec
out
sbb
popf
fisttps
ja
pop
or
in
aad
push
lods
outsb
adc
rcrb
push
xor
hlt
les
cmpsb
jo
notl
or
inc
dec
scas
jbe
js
push
cld
ret
jnp
and
sub
pop
jnp
lahf
loope
popf
adc
jge
insl
sub
dec
hlt
push
add
loop
jno
sbb
inc
mov
dec
add
rclb
std
xchg
das
inc
mov
jbe
mov
inc
dec
pop
std
aaa
jecxz
pop
sub
cmpsl
in
pop
mov
mov
sub
iret
inc
add
push
sbb
adc
popw
jnp
xor
mov
pop
push
cmp
es
loopne
aad
subl
jne
into
cmp
sahf
inc
pop
loopne
ja
inc
nop
jmp
xchg
addl
sbb
mov
enter
and
lcall
std
sbb
outsb
pop
lods
movsl
xor
jg
xchg
or
sbb
and
ret
cmovo
rolb
cmpsb
or
xor
lea
push
aam
adc
mov
test
hlt
cmp
lods
movsb
inc
push
ret
testb
dec
or
inc
in
in
mov
pop
test
je
pushl
pushl
mov
pushl
mov
call
jmp
mov
leave
ret
push
mov
sub
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
sbb
mov
push
mov
dec
xor
orl
mov
sbbl
add
andl
mov
mov
subl
push
push
sbbl
test
je
movl
mov
mov
and
mov
addl
imul
add
mov
xor
or
mov
sub
xor
add
subl
mov
mov
xchg
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
push
push
push
push
push
push
pushl
pushl
pushl
push
push
call
cmpl
jb
sub
adc
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
inc
mov
not
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jb
add
mov
mov
subl
mov
xorl
xor
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
xor
mov
sbb
mov
add
movzbl
mov
mov
movl
je
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
xor
subl
add
movl
cmp
jne
subl
pushl
call
inc
mov
adcl
jmp
sbb
jge
fsubs
adc
mov
scas
cltd
mov
jl
jnp
push
jno
xchg
mov
dec
shl
gs
shll
imul
sub
jge
jae
repnz
push
push
sub
push
std
adc
outsb
dec
mov
cmp
sbb
mov
add
sbb
mov
scas
sbb
xchg
jb
add
enter
bound
push
insl
sbb
into
shrb
mov
sbb
sub
cs
lcall
je
je
sub
jo
jp
pop
jecxz
fcoms
fisubrl
int
cli
xchg
cli
and
imul
mov
mov
dec
add
mov
ret
jp
imul
jne
dec
jl
daa
in
push
xor
fcom
xor
sub
jb
or
inc
outsb
sbb
xchg
mov
lahf
movsb
dec
dec
sti
notb
lret
sbb
hlt
xchg
push
test
int3
insb
lret
rorb
push
mov
sbbl
mov
adc
mov
xor
decl
add
cmp
je
addl
pushl
pushl
call
mov
adc
mov
and
jmp
pop
imul
loope
inc
fwait
xor
jg
jl
les
push
xchg
mov
mov
pop
icebp
or
or
add
dec
push
and
jne
dec
outsl
and
gs
mov
stc
pop
or
pusha
shrl
dec
sti
sub
cli
adc
insb
pop
mov
arpl
inc
adc
pop
or
std
sub
pusha
addr16
mov
push
gs
dec
call
push
pop
dec
mov
pop
xlat
fmull
out
out
psubsw
aaa
call
and
stc
and
mov
add
jo
mov
gs
orb
mov
call
lret
cmp
shrl
mov
xchg
insb
pop
jbe
add
push
xchg
leave
inc
mov
sbb
mov
push
xchg
inc
lret
jl
xchg
repz
ss
fcmovbe
inc
loop
xchg
dec
and
test
jbe
push
lcall
cmpb
bound
pop
adc
aaa
test
add
int
dec
in
addl
xor
sbbl
add
cmp
je
mov
xor
mov
sub
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
jmp
push
xchg
insb
stos
jae
push
jbe
mov
xchg
gs
mov
jl
jge
jge
and
testl
cld
fmull
ds
mov
or
xchg
xchg
dec
sbb
in
test
add
inc
inc
js
shrl
push
push
sbb
sahf
jns
mov
xchg
mov
xrelease
mov
pop
pop
addb
xor
aam
popf
cmpsl
mov
sub
mov
leave
and
stc
cs
or
xchg
test
mov
dec
mov
pop
popa
aas
cmp
lret
sub
mov
inc
add
daa
xchg
or
inc
in
dec
popa
iret
repnz
pop
pop
sahf
pop
inc
lods
mov
mov
fmull
shrl
cmp
leave
jmp
les
cld
xchg
and
daa
into
mov
roll
jge
mov
lock
sub
fcomps
pop
ret
pop
xor
jnp
mov
and
push
jb
jp
sarb
jle
daa
adc
add
lea
mov
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
jmp
inc
fs
fwait
imul
or
jl
adc
jl
loopne
adcl
mov
push
inc
mov
fstpt
push
arpl
aam
in
ret
shlb
mov
imul
je
test
push
popf
mov
mov
xor
in
push
cwtl
loopne
call
popa
in
test
dec
pop
jge
inc
test
push
shll
je
push
push
push
xchg
imul
daa
mov
fwait
pop
outsb
js
inc
push
lcall
icebp
pop
gs
nop
lods
xchg
out
jg
mov
adcb
roll
fistps
or
add
into
lea
jbe
mov
aam
popa
mov
insb
xchg
out
xchg
xorl
imul
icebp
push
loop
mov
fdivs
sub
jne
loop
add
mov
jne
push
test
and
mov
scas
sub
jb
push
xor
inc
notl
dec
jge
dec
iret
xchg
push
push
rcll
mov
mov
test
je
mov
push
pop
push
jmp
jbe
inc
xchg
jbe
and
movsb
das
inc
pop
adc
jl
jg
jl
cld
ss
data16
xor
xchg
imul
aas
push
dec
aaa
pop
dec
pop
imul
lods
mov
aam
pushf
mov
adc
pop
adc
mov
nop
daa
test
push
imul
sub
xor
std
es
sub
loop
mov
sarl
push
add
repnz
movsb
mov
scas
adc
fiadds
fldcw
lcall
stos
int
pop
xor
add
jno
sub
push
inc
imul
dec
es
test
jne
clc
loopne
enter
cmp
fldenv
xchg
pop
add
and
bound
orl
jg
jge
ljmp
mov
jo
or
pop
push
or
mov
lds
jo
push
xchg
cmc
mov
mov
cmp
pop
xchg
jp
mov
jae
jecxz
not
fs
imul
imulb
ror
mov
test
orb
lret
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
jmp
sbbl
jae
jb
pop
and
and
jl
jg
jl
dec
and
jp
dec
pusha
dec
inc
dec
mov
ss
push
jmp
aam
pop
sbb
lods
xchg
out
incb
les
fsubrs
shrl
cltd
pop
dec
pop
push
je
and
dec
mov
jbe
cmp
ljmp
rcrb
push
jmp
imul
mov
mov
fimull
jecxz
mov
and
scas
lock
sbb
fldt
mov
sub
fidivrl
pop
push
cmpsl
stc
in
sti
mov
outsl
stc
mov
fyl2x
ror
push
mov
clc
stos
and
add
cmp
cmpl
mov
pop
cwtl
mov
aad
mov
push
mov
movsl
fucompp
int
mov
dec
xchg
adcb
das
pop
movsb
mov
rcr
jb
xor
aaa
sub
jle
ljmp
xlat
inc
pop
cmpsl
jle
mov
cmp
xor
mov
dec
or
push
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
jmp
mov
or
push
sbb
sbb
inc
jl
adc
jl
push
xchg
dec
les
aas
imul
inc
loope
mov
mov
or
dec
clc
dec
aas
fldl
push
dec
cmp
xor
aam
popf
jge
cmp
adc
es
loop
adc
aas
test
lds
sub
inc
mov
dec
inc
and
xchg
xchg
mov
inc
cmp
repz
testb
fists
ret
jp
mull
xlat
fdiv
jg
push
add
es
lahf
mov
mov
lods
fs
scas
xchg
je
adc
cmpsl
adc
rcrl
adc
clc
xor
jl
push
jns
xor
mov
push
sub
in
mov
push
mov
mov
cmc
add
dec
jns
scas
cmp
or
jmp
mov
inc
sbb
hlt
enter
stc
leave
push
jp
sub
pop
aas
pop
mov
xor
mov
cmpsl
pop
lcall
mov
adc
and
test
pop
flds
imul
mov
xor
mov
jmp
pop
shlb
mov
cmp
mov
xchg
pop
jmp
jl
adc
jl
push
lret
in
cmp
in
adc
xchg
adc
fwait
sarb
xlat
mov
pop
mov
xor
shl
repnz
daa
sbb
ljmp
xchg
movsb
xchg
mov
mov
rcll
sbbl
sahf
dec
or
or
adc
pop
nop
add
imul
sub
in
pop
inc
loope
dec
pop
xchg
add
aaa
and
std
inc
inc
adc
mov
into
dec
xchg
or
xchg
dec
xchg
sub
mov
add
jge
ret
and
cmp
loop
mov
jns
clc
dec
outsl
sub
jg
pop
jbe
mov
nop
pop
xchg
call
data16
jge
dec
dec
mov
pop
mov
add
mov
lods
mov
mov
mov
add
loope
sbb
mov
adc
and
mov
rorb
push
inc
xor
sbb
popf
subl
out
sahf
xchg
pop
daa
test
dec
mov
or
enter
sti
decl
add
mov
mov
xor
add
mov
xor
lea
jmp
into
aas
in
cmc
jne
mov
in
cmp
mov
jl
jg
jl
jnp
jecxz
and
arpl
cmpsl
imul
movsb
dec
pusha
loop
cli
sbb
cmpsb
mov
jae
fnstenv
add
cmc
xorl
and
lods
pop
mov
pop
or
pop
arpl
adc
cmp
std
pop
cmpl
pop
fwait
popa
add
mov
jl
jae
xchg
in
js
push
addb
gs
push
mov
and
sbbb
add
sub
data16
out
adc
pop
xchg
adc
ret
xor
or
sarl
sbb
mov
jnp
push
pop
scas
xchg
std
cmpsb
dec
mov
push
mov
pushf
or
bound
scas
dec
add
rcrl
xor
mov
aad
sub
daa
gs
imul
jp
and
adc
jb
mov
cmp
loopne
mov
insl
pop
les
iret
pop
aad
fcmovb
dec
pop
and
cmp
add
loope
std
leave
adc
add
call
xor
inc
cmp
je
xchg
jmp
push
fsubr
imul
enter
push
scas
inc
jl
adc
jl
popf
or
lods
or
xchg
stc
jle
add
add
pop
jge
inc
push
jbe
mov
pop
int
dec
leave
add
xchg
push
ds
xor
xor
ret
popf
add
je
les
lods
or
out
mov
inc
fisttpl
imul
ret
pop
push
jae
repz
clc
jne
and
xchg
pusha
xchg
sub
ret
push
xchg
mov
fsub
mov
jl
aaa
sti
outsl
lret
test
fnsave
and
xor
in
imul
pop
lea
jno
mov
or
jo
popf
mov
jns
subb
out
repnz
ljmp
push
jg
pop
test
adc
faddl
sub
cltd
xor
test
jae
mov
push
iret
shrl
int
shrb
outsb
mov
les
fadds
add
inc
sbb
imul
cmpsl
dec
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
jmp
sub
xor
into
jge
nop
xlat
fsub
dec
inc
jl
adc
jl
icebp
loopne
aad
and
mov
mov
dec
repnz
movsb
jne
dec
xchg
jb
outsb
sbb
lds
sbb
mov
popa
jne
daa
cmp
lret
sub
push
and
outsb
gs
push
pop
pop
repz
popa
mov
ror
push
fnstenv
mov
cwtl
mov
and
dec
xchg
jle
cmp
pop
pop
dec
xchg
cmp
xor
add
jl
lock
inc
in
sub
fneni(8087
jnp
rorb
dec
loop
pusha
or
mov
jl
mov
roll
icebp
sub
pop
arpl
ss
jmp
xor
cmp
fisubl
jns
xchg
fists
das
in
push
fsubs
mov
stos
sbb
stos
rcrl
fs
fbstp
inc
push
addr16
mov
cli
dec
lret
mov
push
jmp
xor
cwtl
push
jl
sti
pushf
or
cmp
pop
addr16
push
sub
hlt
dec
push
bound
orl
xor
add
pop
mov
pop
pop
pop
leave
ret
and
add
sub
add
xor
add
inc
sub
add
add
pop
sub
add
add
je
add
jle
add
mov
add
xchg
sub
add
sub
add
add
aam
add
loopne
add
ljmp
add
sub
add
sub
add
add
and
add
sub
add
xor
add
inc
sub
add
add
push
sub
add
add
data16
add
add
jp
add
subb
add
sub
add
sub
add
add
lret
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
sub
add
sub
add
add
add
push
sub
add
sub
add
add
loopne
add
in
sub
add
sub
add
sub
add
sub
add
sub
add
add
pop
sub
add
add
jle
add
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
and
add
dec
sub
add
push
add
jp
add
xchg
sub
add
mov
add
sub
add
loop
add
hlt
sub
add
push
add
push
add
sub
add
add
add
dec
add
add
add
push
add
mov
add
lcall
add
add
fsubrl
add
call
add
adc
add
push
das
add
xor
add
inc
das
add
push
das
add
data16
add
jbe
add
mov
add
xchg
das
add
cmpsb
das
add
mov
add
enter
loopne
add
hlt
das
add
add
add
sbb
add
xor
add
xor
add
add
push
xor
add
add
jbe
add
mov
add
pushf
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
push
xor
add
add
jbe
add
xorb
add
xor
add
xor
add
xor
add
add
add
xor
add
add
xor
add
inc
xor
add
add
pusha
xor
add
add
test
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
push
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
add
data16
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
sub
add
dec
xor
add
fs
add
jl
add
xchg
xor
add
mov
add
ret
add
xor
add
divb
add
push
add
sub
add
cmp
add
push
add
pop
add
push
add
jbe
add
test
add
xchg
add
mov
add
shlb
add
add
fdivl
add
call
add
add
add
adc
add
es
add
cmp
add
inc
aaa
add
push
aaa
add
fs
add
jbe
add
test
add
cwtl
aaa
add
mov
add
les
add
aam
add
call
aaa
add
or
add
push
cmp
add
add
inc
cmp
add
add
add
nop
cmp
add
add
mov
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
cmp
add
add
dec
add
add
add
add
dec
add
add
and
add
add
dec
add
add
pop
and
add
add
add
add
add
add
add
add
add
pop
and
add
and
add
add
jae
bound
push
inc
popa
xor
je
jo
aas
dec
imul
gs
jb
imul
inc
inc
dec
push
inc
dec
push
inc
inc
cmp
add
add
add
add
add
push
sub
add
and
add
and
add
add
add
inc
add
mov
add
mov
add
pop
add
je
add
nop
add
clc
xor
add
add
add
jb
add
dec
and
add
sub
add
sub
add
add
inc
sub
add
add
pop
sub
add
add
je
add
jle
add
mov
add
xchg
sub
add
sub
add
add
aam
add
loopne
add
ljmp
add
sub
add
sub
add
add
and
add
sub
add
xor
add
inc
sub
add
add
push
sub
add
add
data16
add
add
jp
add
subb
add
sub
add
sub
add
add
lret
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
sub
add
sub
add
add
add
push
sub
add
sub
add
add
loopne
add
in
sub
add
sub
add
sub
add
sub
add
sub
add
add
pop
sub
add
add
jle
add
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
and
add
dec
sub
add
push
add
jp
add
xchg
sub
add
mov
add
sub
add
loop
add
hlt
sub
add
push
add
push
add
sub
add
add
add
dec
add
add
add
push
add
mov
add
lcall
add
add
fsubrl
add
call
add
adc
add
push
das
add
xor
add
inc
das
add
push
das
add
data16
add
jbe
add
mov
add
xchg
das
add
cmpsb
das
add
mov
add
enter
loopne
add
hlt
das
add
add
add
sbb
add
xor
add
xor
add
add
push
xor
add
add
jbe
add
mov
add
pushf
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
push
xor
add
add
jbe
add
xorb
add
xor
add
xor
add
xor
add
add
add
xor
add
add
xor
add
inc
xor
add
add
pusha
xor
add
add
test
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
push
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
add
data16
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
sub
add
dec
xor
add
fs
add
jl
add
xchg
xor
add
mov
add
ret
add
xor
add
divb
add
push
add
sub
add
cmp
add
push
add
pop
add
push
add
jbe
add
test
add
xchg
add
mov
add
shlb
add
add
fdivl
add
call
add
add
add
adc
add
es
add
cmp
add
inc
aaa
add
push
aaa
add
fs
add
jbe
add
test
add
cwtl
aaa
add
mov
add
les
add
aam
add
call
aaa
add
or
add
push
cmp
add
add
inc
cmp
add
add
add
nop
cmp
add
add
mov
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
cmp
add
add
add
add
jb
jo
add
or
gs
add
pop
add
gs
jb
jb
add
sub
arpl
arpl
add
add
outsl
outsb
je
outsl
insb
data16
add
insb
outsl
arpl
add
gs
popa
jo
pop
je
jo
add
add
jns
je
insl
add
mov
pop
pop
insw
outsl
fs
pop
add
insb
insb
outsl
arpl
add
pop
pop
arpl
insl
outsl
fs
std
add
jb
outsl
jne
add
add
jae
jb
outsb
je
add
sub
ja
jae
bound
add
add
insl
jae
pop
gs
je
add
imul
add
popa
insb
outsb
jne
add
data16
add
insl
bound
gs
add
pop
add
gs
jb
push
je
arpl
add
push
add
arpl
inc
imul
jae
jb
outsl
insb
insb
add
add
imul
insb
outsl
arpl
je
insl
add
add
arpl
outsl
jne
add
add
arpl
jo
add
enter
je
push
add
jne
arpl
sbb
ja
jae
popa
je
add
add
jb
jae
outsb
add
imul
add
jae
outsl
ja
jae
add
add
outsl
ja
outsl
ja
jb
add
add
outsl
jb
add
add
ja
arpl
data16
add
js
je
ss
arpl
outsl
insl
bound
add
add
gs
je
add
add
arpl
arpl
add
jb
outsb
je
mov
pop
pop
jae
je
jae
jb
popa
je
gs
add
sbb
jae
jo
imul
pop
pop
addr16
popa
imul
dec
push
push
inc
push
push
cs
insb
add
faddl
push
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
je
jb
jae
dec
jb
inc
js
addl
imul
add
inc
gs
imul
gs
add
insb
arpl
insb
gs
add
popa
je
inc
jb
jae
dec
outsb
imul
add
gs
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
mov
popa
je
dec
popa
je
push
push
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
popa
je
inc
outsl
outsb
je
add
popa
je
inc
outsl
outsb
je
outsb
imul
mov
push
outsl
insb
jns
imul
inc
gs
gs
dec
gs
imul
push
jb
outsb
jae
popa
je
inc
push
je
outsb
outsw
add
lar
jb
popa
insb
imul
arpl
add
je
gs
arpl
popa
jo
add
inc
gs
dec
push
xor
les
inc
outsb
jne
inc
outsl
outsb
je
popa
insl
imul
add
je
inc
imul
bound
imul
push
gs
dec
inc
imul
insb
gs
inc
inc
add
mov
inc
gs
imul
dec
jb
inc
js
add
inc
gs
jns
je
insl
push
popa
insb
gs
gs
outsb
je
imul
imul
add
inc
gs
bound
arpl
add
push
gs
dec
gs
imul
inc
gs
imul
add
insl
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
je
imul
pop
add
je
popa
jo
outsl
fs
push
add
jb
je
push
add
inc
gs
gs
jb
jae
push
popa
insb
gs
gs
outsb
fs
add
add
je
dec
inc
imul
imul
gs
popa
jns
jne
add
add
je
gs
inc
outsl
insb
outsl
jb
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
je
gs
inc
outsl
insb
outsl
jb
add
push
gs
inc
popa
arpl
add
movsl
add
gs
je
push
popa
insb
gs
gs
add
je
imul
add
je
bound
je
jb
arpl
add
add
arpl
gs
insb
imul
mov
imul
push
gs
jp
push
popa
insb
gs
gs
add
insb
arpl
imul
add
insb
jns
outsl
outsb
add
popa
je
dec
popa
insb
data16
outsb
gs
popa
insb
gs
add
dec
xor
cs
insb
add
popa
je
inc
imul
jae
add
dec
push
inc
push
dec
cs
insb
add
inc
imul
outsl
push
jns
je
insl
push
imul
dec
jo
outsb
inc
imul
gs
jb
push
inc
add
add
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
je
jb
outsl
jb
je
inc
insb
popa
jae
add
cmpsb
add
outsb
arpl
push
popa
imul
insl
gs
dec
add
insb
outsb
inc
add
mov
inc
gs
je
insl
dec
popa
insl
gs
add
xor
push
push
inc
data16
dec
popa
jae
add
bound
inc
insb
insb
outsl
arpl
sbb
dec
popa
outsb
fs
gs
outsl
jne
je
add
inc
gs
gs
jo
popa
je
push
add
xchg
add
outsl
bound
inc
gs
je
insl
dec
popa
insl
gs
add
lret
jb
popa
je
inc
jbe
outsb
je
add
dec
add
jne
jo
outsb
fs
push
add
inc
gs
push
inc
outsl
outsb
je
js
add
ret
add
jae
jb
insl
jo
add
lret
add
inc
popa
fs
gs
fs
je
add
int3
add
jae
jb
jo
outsb
push
add
add
gs
je
push
gs
outsl
je
push
push
add
lret
add
je
jne
jb
outsb
je
imul
jns
add
inc
add
je
push
popa
je
dec
popa
insl
gs
add
add
gs
je
inc
imul
outsb
jne
push
gs
jne
arpl
popa
insl
gs
add
or
inc
gs
outsl
fs
gs
imul
add
ret
add
insb
push
outsb
ja
outsb
add
add
popa
insb
inc
insb
insb
outsl
arpl
add
js
arpl
or
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
sti
add
je
popa
jae
inc
jb
outsl
jb
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
add
je
push
dec
outsl
arpl
gs
add
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
mov
push
gs
outsl
jbe
inc
imul
jns
add
and
dec
popa
jo
imul
insb
add
push
gs
imul
jne
push
imul
add
je
popa
outsb
fs
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
ljmp
insb
gs
je
jb
bound
gs
js
add
pop
add
imul
add
mov
inc
jb
inc
imul
dec
push
dec
add
inc
imul
jne
arpl
js
add
inc
imul
add
dec
popa
imul
outsw
add
gs
imul
js
push
gs
fs
imul
gs
push
push
jb
outsl
jb
je
add
inc
gs
gs
jo
popa
je
inc
add
or
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
inc
imul
outsl
dec
outsl
arpl
inc
imul
repnz
gs
je
push
popa
imul
insl
gs
add
jns
inc
gs
gs
imul
push
dec
inc
dec
xor
cs
insb
add
cmp
inc
push
outsb
jne
popa
imul
add
push
gs
outsl
jb
addr16
jne
fs
imul
add
je
arpl
insb
insb
push
outsl
jae
add
add
jo
imul
arpl
add
popa
outsb
addr16
outsb
jne
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
add
jo
imul
gs
js
add
loop
inc
imul
outsl
ja
js
add
jo
je
push
popa
addr16
add
mov
dec
jae
push
jo
popa
dec
jne
gs
arpl
push
add
gs
je
inc
popa
jb
je
mov
inc
jb
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
inc
add
outsl
jae
inc
gs
je
jo
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
add
jb
outsb
addr16
arpl
imul
ja
add
fldl
inc
jno
popa
insb
push
arpl
add
fs
je
imul
push
gs
jae
addr16
add
cmp
inc
push
jo
jb
add
adc
inc
gs
outsl
jne
insb
gs
insb
imul
add
mov
imul
jae
bound
mov
ja
gs
push
add
ja
outsb
jne
popa
jb
jle
dec
imul
jne
je
insl
add
mov
push
imul
ja
add
add
popa
jb
outsl
ja
jb
jne
push
add
bound
inc
jb
popa
je
push
imul
inc
add
push
gs
imul
js
inc
add
pop
add
je
arpl
jo
jns
add
add
popa
insl
gs
arpl
add
je
gs
popa
addr16
js
jb
dec
outsb
outsw
add
push
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
xor
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
add
bound
jbe
outsb
je
call
outsb
dec
arpl
add
das
add
je
arpl
gs
imul
add
je
jns
inc
outsl
insb
outsl
jb
add
mov
dec
outsl
popa
fs
outsb
jne
add
jb
gs
push
add
add
jae
popa
addr16
outsl
js
add
jae
popa
je
inc
arpl
insb
gs
je
jb
add
inc
jb
insl
gs
jb
arpl
test
push
jns
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
inc
add
imul
popa
jae
push
add
iret
add
jae
popa
addr16
outsl
js
js
add
add
popa
jb
outsl
ja
jb
add
pushf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
inc
add
add
je
gs
popa
addr16
add
push
gs
jb
jo
add
loope
inc
imul
outsl
ja
add
imul
jo
inc
arpl
insb
gs
je
jb
popa
bound
add
add
popa
bound
imul
pop
add
je
arpl
insb
insb
dec
outsb
outsw
add
push
je
imul
inc
push
dec
gs
push
add
incb
inc
gs
insb
imul
jb
dec
add
je
outsb
jne
gs
jne
je
je
insl
add
mov
dec
outsb
jbe
insb
imul
je
add
fs
imul
add
je
outsl
jb
addr16
jne
fs
imul
add
ja
je
je
push
add
xchg
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
imul
and
fs
outsb
jo
je
cmpsb
add
insb
insb
push
imul
dec
outsl
popa
fs
insl
popa
addr16
add
daa
add
je
gs
outsl
popa
jb
push
jns
add
ja
arpl
add
mov
push
popa
bound
fs
gs
dec
jne
push
add
push
push
imul
add
data16
popa
je
push
arpl
add
jae
popa
addr16
outsl
js
add
add
je
jne
jae
jb
mov
push
outsl
push
outsb
imul
add
arpl
jo
jns
clc
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
imul
popa
bound
add
arpl
outsl
push
push
outsb
outsl
ja
add
add
je
inc
inc
js
stos
add
fs
jne
jae
jb
add
popa
insb
imul
add
imul
imul
add
data16
je
arpl
cmp
arpl
popa
imul
outsb
add
adc
push
imul
outsb
outsl
ja
gs
popa
addr16
add
or
push
imul
je
gs
add
gs
arpl
arpl
add
outsb
dec
outsb
jo
je
gs
je
jo
add
add
imul
popa
jae
inc
add
jno
push
gs
imul
outsb
add
mov
fs
outsb
jne
add
dec
outsb
jne
push
popa
jb
inc
imul
outsb
jae
add
push
imul
outsl
arpl
add
add
push
jae
push
imul
arpl
add
add
outsl
ja
gs
outsl
jb
addr16
jne
fs
imul
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
pushf
add
dec
arpl
imul
gs
outsb
jne
je
insl
dec
outsb
outsw
push
add
dec
add
je
outsb
jne
inc
add
imul
jb
add
add
imul
arpl
dec
fs
jb
insl
inc
imul
jns
add
popa
jb
jo
gs
add
mov
imul
outsl
ja
jo
popa
je
add
cmp
inc
gs
outsb
jne
je
imul
add
jo
imul
imul
inc
gs
outsl
jo
imul
pop
add
gs
je
inc
imul
jb
insl
push
add
inc
add
je
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
add
dec
outsb
push
arpl
push
push
inc
push
xor
cs
insb
add
jns
pop
je
push
jp
jae
push
dec
push
jne
fidivrs
inc
add
cmp
out
or
dec
ja
cmp
dec
cmp
jb
xor
dec
ss
jnp
xor
dec
push
push
pop
push
cmp
dec
ja
cmp
dec
cmp
jb
xor
dec
ss
insl
dec
xor
dec
push
bound
arpl
dec
push
cmp
dec
cmp
dec
cmp
dec
push
jb
jae
orl
nop
jge
aas
dec
jbe
cmp
dec
ds
dec
dec
cmp
dec
cmp
dec
push
sbbb
setae
jl
jge
aas
dec
jbe
cmp
dec
ds
dec
dec
cmp
dec
cmp
dec
push
xchg
pop
xchg
bt
jl
jge
aas
dec
insb
dec
cmp
dec
cmp
dec
cmp
dec
cmp
dec
push
mov
or
jl
jge
aas
dec
insb
dec
cmp
dec
cmp
dec
cmp
dec
cmp
dec
push
mov
mov
ret
or
jl
jge
aas
dec
insb
dec
cmp
dec
cmp
dec
cmp
dec
cmp
dec
push
ret
psrlq
jl
jge
aas
dec
insb
dec
cmp
dec
cmp
dec
cmp
dec
cmp
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
imul
dec
dec
dec
ds
cmp
dec
push
loop
jecxz
repz
jl
jge
jl
jge
ds
jg
cmp
dec
cmp
dec
ds
dec
dec
xor
dec
xor
add
add
adc
jl
jge
aas
dec
add
sahf
cmp
xchg
cmp
lcall
add
inc
add
cmp
inc
add
inc
add
cmp
inc
add
pushf
clc
xchg
cmp
or
inc
add
cmp
inc
add
cmp
lcall
add
cmp
out
cmp
pushf
clc
cwtl
or
andl
or
inc
add
fnstsw
push
jne
in
incb
mov
cmp
xor
pushf
clc
xor
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
aas
xchg
pushf
clc
ds
pushf
clc
cmp
xchg
pushf
clc
and
stc
add
cmp
xchg
add
pop
dec
imul
push
pop
arpl
add
mov
inc
add
adc
mov
add
add
add
outsl
add
dec
add
add
add
inc
add
imul
add
dec
add
add
imul
jo
outsl
add
insl
add
add
insb
add
data16
imul
add
imul
outsl
add
add
push
add
add
add
add
fs
push
imul
imul
fs
addr16
push
add
add
add
dec
dec
dec
dec
inc
inc
push
insb
dec
cmp
imul
fs
imul
push
outsl
dec
dec
inc
inc
insb
imul
imul
imul
push
push
add
add
add
dec
pop
dec
dec
dec
push
dec
pop
dec
push
dec
or
dec
cmp
add
pop
dec
push
dec
or
dec
cmp
dec
dec
dec
pop
dec
dec
dec
or
dec
cmp
add
push
dec
push
dec
dec
dec
pop
dec
dec
dec
push
dec
cmp
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jge
mov
bound
add
mov
mov
jle
jno
mov
imul
xlat
aad
dec
adc
jge
faddp
leave
xchg
pusha
icebp
push
aad
aad
add
add
out
ljmp
and
add
outsl
push
cmpb
add
cmp
in
adc
imul
pop
outsb
jbe
jns
push
imul
je
inc
jo
data16
jp
insb
je
jns
popa
push
push
push
add
add
dec
push
jne
popa
jp
arpl
push
imul
push
imul
push
jb
add
insb
pop
ja
je
bound
jb
inc
push
push
inc
insb
inc
inc
jae
add
imul
popa
push
push
add
in
jnp
jnp
cmc
fcomps
adc
in
into
add
pop
add
add
jecxz
xor
cli
pop
loope
scas
xchg
lds
add
popa
mov
cmp
mov
push
xchg
dec
xor
out
arpl
test
movsb
xchg
or
push
testl
inc
add
adc
pop
daa
cmp
or
in
jp
push
imul
add
lret
pusha
xchg
cmp
int
das
or
mov
jg
dec
pop
adc
outsb
cmp
out
test
aas
ds
add
fistl
mov
inc
jnp
inc
fisubs
or
push
rorl
mov
ja
cltd
dec
arpl
arpl
cmc
loop
ja
iret
mov
bound
daa
repnz
aas
fwait
push
lahf
lea
stc
ret
shl
pop
push
fisttpll
jmp
inc
lds
shrl
iret
insb
out
sbb
mov
arpl
mov
or
mov
movsl
sub
outsb
lock
add
add
push
pusha
in
jle
mov
cmp
hlt
hlt
iret
add
pop
add
add
fldenv
sbb
lods
mov
push
fistpll
jp
cwtl
xchg
fst
inc
out
sub
scas
addb
xor
push
bound
and
push
adc
sbb
insb
xor
sub
push
push
ja
mov
aam
mov
enter
and
or
movsl
xchg
mov
xchg
or
outsb
pushf
sub
add
jo
mov
sti
xor
add
pop
data16
outsl
out
ljmp
jae
and
mov
shlb
jl
mov
xchg
cmp
int3
pushf
jbe
stc
sbb
out
push
cmp
pop
jp
mov
push
jge
or
sub
mov
jecxz
push
mov
cli
jg
xor
ja
popf
icebp
jge
dec
inc
scas
or
arpl
gs
cltd
jl
mov
xor
xchg
cwtl
out
mov
push
and
imull
mov
lods
add
add
adc
mov
push
add
xor
rolb
add
add
add
adc
xchg
cs
or
ret
jo
pop
mov
adc
pop
mov
pusha
dec
mov
jnp
dec
pop
lret
inc
mov
pusha
sub
mov
lret
pop
addb
xor
js
pop
int
subl
sbb
inc
jle
jle
fisubrl
ljmp
out
imul
pop
push
std
inc
aas
or
aam
mov
and
and
leave
push
jp
sbb
inc
cmp
fnsave
mov
orb
mov
jle
dec
push
xor
in
pushf
inc
and
cmp
adc
sub
lcall
pop
or
addr16
icebp
fildll
fbld
push
test
cmpxchg
movsl
mov
nop
push
dec
pushf
add
push
std
loope
and
enter
mov
jne
fsubrs
arpl
inc
sub
scas
pusha
jl
cmp
daa
xor
add
mov
idivb
mov
add
add
pop
add
add
pop
cmp
jo
or
sub
dec
add
dec
fs
insb
repnz
mov
inc
rorb
sub
shrl
and
nop
inc
imul
push
xor
loop
push
xchg
cmp
and
in
adc
xchg
pop
daa
lock
out
icebp
cmpsl
andb
sbb
testl
push
arpl
mov
mov
push
add
jmp
sub
add
push
std
inc
out
cmc
mov
popa
jo
xchg
jmp
rcrb
pop
or
mov
loope
repz
cmp
repz
stc
sbb
pop
loop
fs
add
or
jns
lcall
lds
dec
sub
jp
loopne
inc
mov
mov
es
enter
sub
adcl
out
adc
call
gs
jbe
mov
test
test
jl
pop
or
xchg
pushf
add
inc
or
ss
pop
xchg
add
jle
or
add
pop
add
add
mov
xor
mov
cmc
rorl
lahf
clc
stos
das
push
cmc
or
mov
lods
or
not
xchg
lods
insl
mov
inc
add
cmp
cmc
mov
in
jae
dec
dec
xchg
mov
pop
lcall
pop
arpl
add
sbb
mov
mov
pop
int3
pop
xchg
mov
iret
cld
dec
call
jl
les
insb
mov
dec
leave
xor
pop
mov
push
pusha
ljmp
aam
sahf
mov
adc
cmp
mov
pop
jge
push
add
inc
mov
push
inc
push
push
and
rolb
ret
mov
cmp
andl
pop
inc
xor
aaa
call
push
or
push
imul
pop
pop
sbb
fcmovnb
mov
pushf
dec
cmp
je
dec
aam
sbb
or
mov
ja
test
data16
test
movsb
or
and
and
sub
and
jg
cmc
insl
cmc
out
lcall
mov
fcoml
aam
add
add
add
data16
ljmp
ret
int3
sbb
pop
or
xchg
cmpsl
mov
inc
sahf
int
jmp
lret
dec
xor
out
and
out
mov
mov
pop
std
pop
fidivl
and
dec
aam
push
xchg
jp
push
or
rolb
xchg
and
pop
shrl
ret
add
pop
pop
insb
arpl
jge
pop
add
lock
jecxz
je
clc
std
ja
cmp
sub
dec
lret
jecxz
dec
add
std
mov
inc
pop
int3
lods
mov
movsb
popa
sbb
sar
push
or
rclb
or
add
clc
sbb
data16
test
jp
cmpsb
movsb
sub
push
cmc
jo
arpl
in
xchg
test
ds
add
xchg
push
mov
or
and
fmul
inc
xchg
inc
leave
mov
scas
sahf
pop
pop
adc
add
jle
add
outsl
jle
aam
aam
pushf
dec
ret
aad
add
add
add
lcall
inc
and
sbb
pop
cld
repz
sub
lods
mov
rorb
mov
arpl
mov
adc
mov
popa
ja
fiadds
int3
loope
lcall
popf
cld
movsb
mov
ds
test
add
pop
push
popf
or
lods
xchg
ds
inc
add
cmpb
or
add
sbb
and
in
push
dec
out
inc
add
ljmp
dec
leave
pop
outsb
mull
pop
dec
out
test
in
cmp
in
pop
aas
or
or
repz
sti
nop
movsb
test
add
dec
or
inc
xor
mov
push
loopne
push
jmp
ds
shrb
arpl
lock
mov
sub
cmpsl
pop
js
mov
mov
mov
xchg
mov
inc
fs
or
and
scas
sti
jle
sbb
sbb
pop
add
add
ds
cmp
xor
ds
dec
add
lods
lcall
xchg
jp
leave
jmp
and
jle
mov
ja
jmp
and
loope
test
push
and
out
leave
pusha
aad
scas
cmp
fmuls
mov
jbe
sbb
lock
pop
push
push
xchg
jmp
dec
gs
imul
xchg
test
dec
js
test
cmp
scas
mov
push
outsb
xor
iret
vpmacssdd
test
cmpsb
jp
push
cld
jle
punpckhwd
mov
cmp
adc
imul
imul
mov
pop
ss
push
adc
into
repz
shlb
push
mov
hlt
incl
lods
cli
mov
imul
cmpl
lock
add
test
nop
xorb
add
negl
sbb
xlat
add
pop
add
add
dec
idivl
cmp
or
repz
xchg
out
subl
push
push
loopne
js
scas
scas
pop
adc
repz
dec
test
ret
xor
cwtl
sub
ret
es
outsb
xorb
ret
leave
cmp
sub
add
mov
and
inc
addr16
cmc
jno
lret
rolb
movsb
adc
aad
push
imull
sub
std
pop
fmull
xchg
add
addr16
jecxz
sti
fwait
leave
cmp
sub
push
sub
jb
leave
mov
cmp
movsb
test
pop
sbb
int3
loopne
hlt
mov
mov
dec
nop
in
bound
addr16
cwtl
outsb
adc
in
pop
push
repz
dec
btl
cmp
mov
in
sarl
inc
cmp
mov
mov
inc
mov
xchg
outsl
mov
movsl
mov
push
orl
sbb
xor
push
jl
jle
insb
inc
xor
push
lods
xlat
adc
fadds
add
add
add
mov
psubw
xor
js
out
or
add
ret
sbbl
mov
rep
js
xchg
jno
cmp
repz
cmpsb
xchg
sub
fiadds
js
std
add
xchg
mov
or
clc
sub
mov
pusha
mov
xchg
pop
sbb
and
in
or
adc
push
xchg
jmp
inc
test
in
sub
mov
inc
notb
pop
push
and
add
out
ret
clc
fisubl
jl
push
push
shl
das
xor
mov
fildll
add
outsb
in
andl
mov
cmpsb
int3
icebp
xchg
repnz
sbb
lds
in
dec
or
dec
adc
jl
pop
cwtl
sub
fstps
pop
add
repz
daa
outsb
mov
add
jbe
push
mov
clc
mov
repz
add
add
fwait
mov
sbb
rorb
flds
add
add
add
or
mov
push
jo
dec
pop
mov
mov
adc
mov
mov
leave
jmp
test
sti
xchg
and
inc
inc
pop
pusha
nop
fsubp
mov
mov
push
add
inc
gs
cmp
int3
or
mov
cmpsb
jno
pop
cmpsb
dec
dec
repz
mov
xchg
test
lahf
test
adc
pop
cmp
ret
xor
popa
aaa
sub
add
popf
movb
sbb
push
xchg
mov
cmp
xchg
dec
and
arpl
mov
push
inc
xor
jmp
inc
scas
in
mov
xchg
dec
sbb
jae
in
ret
sbb
mov
xlat
addr16
lods
das
dec
jne
test
xor
inc
sub
addr16
ficoms
push
outsb
jne
rolb
insl
sub
mov
pop
mov
call
lahf
stos
dec
lret
aam
mov
repz
push
jg
sub
add
aaa
data16
jne
mov
xchg
dec
cld
jg
cmp
add
pop
add
add
addb
mov
dec
sub
xchg
sarl
jge
jmp
aas
cmc
mov
out
lcall
ret
loopne
cmp
jp
repz
ret
loope
movsl
scas
dec
mov
xchg
fstpt
push
cmp
add
mov
pop
push
jl
inc
sbb
dec
std
fisttpl
jae
cmpsl
sbb
jne
sbb
cmpsl
es
addr16
call
add
fldenv
lret
jle
mov
ljmp
dec
cmp
out
jnp
popf
add
std
inc
cmpsb
ljmp
scas
dec
xchg
and
pop
push
mov
mov
mov
or
mov
push
mov
pop
data16
mov
in
mov
nop
mov
cwtl
xor
je
dec
lods
stos
sbb
inc
adc
outsl
pushf
out
sbb
xchg
mov
cmc
jg
inc
mov
fcoms
adcb
jnp
add
jnp
sti
xchg
and
pushf
test
inc
fildl
add
add
add
adcb
xorl
adc
mov
jmp
dec
lret
adc
pop
mov
fstps
scas
ret
dec
addr16
leave
xor
in
lds
sub
aaa
or
or
sbb
lods
lcall
inc
and
sub
and
fdiv
inc
sbb
in
cmpsl
leave
jge
mov
fstps
mov
leave
lcall
lods
lahf
stos
add
lds
inc
call
adc
mov
movsb
movsb
jo
add
mov
dec
push
dec
int
andb
mov
imul
fistpl
cwtl
mov
inc
sub
and
cmpsb
scas
dec
cltd
xchg
jae
pop
das
mov
stos
popf
and
test
jnp
sbb
enter
lcall
sub
outsl
lea
pop
pop
cmc
and
sub
dec
push
cmp
adc
add
pop
sarl
lods
std
mov
pop
das
sbb
add
pop
add
add
mov
cmp
mov
xchg
stc
pop
in
fwait
sbb
push
inc
jae
incb
orl
mov
out
cmp
les
cwtl
xorl
sub
les
test
cmpsb
std
fildll
pop
mov
test
ja
clc
jbe
pushf
stc
mov
test
inc
rcrl
sysret
sbbb
sub
pop
roll
in
fsubrs
adc
outsb
mov
jno
sub
stos
jp
gs
pop
shlb
ds
and
add
loope
shrl
push
jbe
je
out
adc
mov
sbb
cmpsb
loope
xchg
add
xor
add
dec
xchg
cmc
into
mov
stos
xchg
adc
dec
cwtl
push
push
fimull
mov
jge
cld
dec
inc
fwait
iret
leave
mov
push
cmp
or
adc
sub
insl
lock
std
repz
or
add
add
add
xorb
sbb
add
mov
inc
sbb
push
lahf
cmpsb
jne
aam
pop
mov
ja
dec
repnz
xchg
aas
leave
fcomps
push
test
enter
imulb
imul
cmp
or
test
insb
fimull
pusha
dec
cmpsl
pop
or
adc
out
subl
cltd
out
lahf
mov
in
cld
push
lods
and
shrl
mov
jae
cltd
cmpsb
outsl
mov
movb
out
jle
fidivl
xchg
jno
pop
xor
das
fisubrl
mov
pop
ljmp
sub
stos
sbb
dec
rcrl
loopne
adc
stos
and
pop
scas
pop
fnstenv
stc
mov
int
cwtl
cwtl
jmp
lock
dec
inc
and
push
and
stc
jne
dec
fidivrs
pop
mov
scas
fnsave
or
aad
fists
cmp
or
dec
add
lock
cmp
cmp
pop
daa
xor
sbb
add
pop
add
add
out
out
inc
mov
leave
jecxz
int3
shr
sub
push
loopne
push
mov
and
orb
xor
mov
je
call
test
xor
push
add
outsb
int
shl
aam
inc
or
add
add
enter
ss
sub
mov
sub
add
scas
rcrl
mov
std
jo
mov
add
push
lret
xor
pop
shll
stos
rorl
mov
xor
addl
mov
xchg
mov
test
push
aaa
sbb
mov
dec
adc
cmpsl
ss
bound
xor
dec
daa
push
shl
mov
mov
loopne
pop
cmp
test
dec
ljmp
mov
insb
lret
mov
imul
jnp
test
fs
mov
add
insl
lcall
lret
inc
std
scas
push
mov
add
add
add
pop
fimull
cld
jb
rorl
cmpsb
and
jmp
and
push
hlt
repz
pop
mov
push
pop
imul
andl
repz
dec
out
rorl
mov
xchg
add
inc
lea
insb
mov
aaa
xchg
mov
mov
sub
xor
ss
in
or
ret
js
cld
adc
push
bswap
cmp
xchg
inc
inc
or
mov
in
sbb
rclb
cwtl
fsub
xchg
loop
push
inc
ja
dec
fildl
bound
orb
decl
mov
adcb
cmp
mov
mov
xchg
ja
addb
xchg
aaa
repnz
pushf
inc
push
xchg
cmp
int3
dec
inc
and
mov
sub
xchg
mov
add
push
push
xchg
lahf
dec
popa
ror
pop
bound
ds
in
dec
xorl
pop
daa
fyl2x
cmpsb
testl
mov
mov
lret
xchg
in
mov
incl
mov
add
pop
add
add
dec
sub
inc
ficoms
jp
pop
test
inc
xchg
mov
imul
arpl
dec
jb
js
enter
add
sub
andb
fldl
inc
mov
data16
adc
pop
dec
insl
movsb
cltd
jl
push
mov
sbbb
jp
xor
xchg
mov
or
subb
pop
pop
fwait
mov
js
sbb
movsb
repz
jo
out
cmp
xchg
je
adc
pop
iret
jge
sti
fidivrs
cli
shll
frstor
sub
int3
jmp
inc
xorl
push
jo
mov
lret
push
lods
mov
add
loop
mov
std
lret
scas
insw
mov
out
inc
jmp
xchg
imul
mov
mov
push
fwait
sbb
test
jecxz
xchg
cs
inc
push
in
dec
sbb
sub
jmp
mov
or
adc
cmpsl
fwait
xor
inc
mov
in
negl
es
int
adc
and
loope
add
add
add
or
lods
inc
aad
push
les
shrb
cmp
sbb
push
and
je
fmull
xor
push
adc
inc
jg
hlt
dec
stc
rclb
sub
dec
pop
sbb
test
lods
push
and
sbb
aam
test
jle
daa
jg
mov
push
and
dec
ret
or
int
inc
dec
out
cwtl
xor
sbbl
clc
test
inc
dec
push
add
aam
push
leave
lret
add
jle
popa
call
adc
mov
dec
idivl
lahf
mov
dec
mov
frstor
hlt
mov
js
into
or
inc
movsl
incl
ja
popa
ret
cmc
xor
jnp
push
inc
loop
popa
add
outsb
pop
in
jl
les
jmp
pop
mov
lahf
fcmovu
and
xor
inc
jg
in
add
rcl
sbb
nop
adc
imul
cltd
cwtl
jecxz
iret
push
int
dec
sub
fistpll
jge
nop
mov
jb
add
pop
add
add
leave
cmpsb
fadd
mov
stc
sti
jne
gs
int3
cmpxchg
pop
and
xchg
aad
jno
cmp
dec
adc
or
push
orl
pusha
sbb
aaa
pop
sbbl
and
push
dec
xor
addb
out
mov
adc
push
mov
enter
cli
lds
jae
xorb
flds
nop
xlat
dec
setl
mov
fdivs
repnz
cmp
mov
push
and
daa
cld
loop
pop
clc
into
in
clc
mov
adc
mov
or
stos
and
cmpsl
sub
sbb
pop
dec
addl
scas
xor
adc
sub
jl
lret
cli
add
cmpl
mov
stos
mov
or
xor
mov
mov
out
in
push
sbb
mov
jmp
add
cmp
mov
push
jno
mov
clc
jns
add
pop
add
add
test
jbe
cld
jl
cwtl
cmp
xchg
and
in
divl
shrb
out
and
frstor
jle
pop
js
ficoml
and
pop
or
lret
sbb
outsl
xor
jecxz
xchg
arpl
bound
and
mov
int
test
fildl
and
xchg
jno
or
push
aad
aas
pop
adc
sub
dec
pop
ds
ret
jne
mov
mov
inc
les
out
fadds
jae
in
mov
add
add
dec
inc
inc
addr16
push
lea
mov
adc
andb
add
mov
or
push
sbb
cmp
dec
xchg
fildll
inc
ficompl
dec
mov
gs
pushf
mov
in
mov
sbb
mov
push
mov
int3
not
sub
ror
dec
sbb
psubsb
fistps
fisttpll
add
repnz
add
pop
call
mov
push
pop
and
add
add
add
enter
mov
movsl
outsb
mov
adc
jle
aaa
xchg
or
div
nop
push
adc
clc
jmp
add
pop
or
xor
cmp
xchg
lods
rorl
popa
lret
push
repnz
jne
pop
adcl
inc
jb
dec
ljmp
notl
or
test
test
add
jae
mov
lods
imulb
jo
cmp
dec
xchg
and
icebp
jmp
mov
ja
push
mov
imul
cmp
test
or
adc
insb
adc
sbb
je
jno
pop
ljmp
orb
lock
add
dec
call
adc
mov
jae
xchg
cmp
es
scas
out
adcl
loopne
repz
xor
das
jle
inc
dec
or
sahf
inc
jbe
jno
mov
iret
out
mov
push
and
add
mov
push
decl
lock
clc
fldl
add
add
xchg
adc
cmp
pop
test
inc
dec
enter
je
inc
mov
leave
xor
lea
xor
mov
xchg
xor
arpl
pop
stos
fldcw
or
movsl
sub
fisttps
mov
mov
cmp
mov
mov
sbb
roll
and
popl
cltd
push
loop
xchg
int3
outsb
aad
xchg
sub
cli
sub
xchg
sub
das
fdivrs
ljmp
or
mov
decb
rcll
fwait
rcrb
mov
outsl
pop
dec
xchg
ja
cs
and
leave
addl
scas
push
ds
notl
or
or
sbb
test
out
insl
sub
pushl
cs
sub
cli
test
mov
popa
dec
xchg
mov
xor
cmc
adc
imul
add
jmp
in
and
jmp
mov
add
pop
add
add
icebp
movsl
and
cmp
insb
pop
loopne
imul
mov
push
xchg
dec
bound
arpl
add
mov
adc
aas
jmp
je
pop
lret
push
jl
dec
cwtl
rolb
mov
es
mov
popf
mov
lcall
or
push
int
adc
pushf
xor
add
scas
sub
dec
cld
sbb
test
mov
fcmove
fdivrs
or
mov
mov
enter
fld
jo
fstl
inc
enter
inc
add
cwtl
xchg
xchg
stos
pop
arpl
mov
loop
push
gs
adc
sub
mov
xor
popw
fdivrs
movsl
out
mov
div
add
sub
mov
jns
dec
pop
inc
pop
sub
cmpb
xchg
pop
and
mov
add
outsb
xor
test
das
out
out
add
add
add
roll
test
xor
out
mov
xchg
or
dec
mov
push
inc
mov
ljmp
sti
jmp
jo
push
pop
push
lods
cld
mov
in
pop
xchg
ret
sub
jp
cmp
inc
mov
cmpsb
push
mov
fisubrs
mov
subb
push
pop
lcall
add
rcrl
jns
xor
es
jo
scas
lahf
scas
lods
mov
sub
dec
cmp
mov
mov
outsl
ja
xor
sbbl
inc
imul
sbb
mov
ret
jmp
fdivrs
push
push
push
icebp
lret
and
add
lods
test
int
push
jo
sub
dec
mov
scas
sub
pop
popf
pop
pop
cmpsb
and
mov
rcrl
adc
in
cli
aam
inc
mov
movsl
add
out
mov
test
repz
repz
ror
lock
jnp
xchg
cmp
pushf
call
add
gs
jge
and
fidivs
out
add
in
popa
adc
call
pop
sub
in
lahf
cmc
pop
jbe
push
sub
and
jo
scas
int
das
cli
mov
xlat
xor
push
mov
or
popa
sub
jp
test
xor
enter
pop
into
pop
dec
xor
inc
sbb
dec
into
adc
insb
sbb
push
inc
fisubs
out
and
addb
push
jb
fdivrl
mov
inc
adc
faddl
nop
fnstenv
sub
mov
repz
add
pop
enter
jae
mov
lds
icebp
rclb
mov
mov
mov
pop
rorl
adc
aam
mov
rep
add
add
lret
mov
fstp
xchg
arpl
hlt
inc
out
data16
mov
lock
sub
mov
repnz
add
add
repz
fisubrs
jno
adc
andl
add
pop
call
mul
mov
fisubrl
cmp
adc
cmp
in
in
pop
dec
jecxz
xlat
cmp
js
dec
call
cld
mov
mov
mov
faddl
in
iret
and
pop
les
lret
scas
dec
dec
pop
dec
add
add
mov
cmp
push
or
dec
mov
xor
mov
test
test
pop
mov
into
dec
arpl
dec
and
sahf
shrl
insl
adc
lods
or
in
cmp
shl
jp
pop
push
test
dec
mov
int
aam
out
cld
aad
mov
add
push
jge
sbb
or
daa
out
int
pop
enter
aam
jno
jg
jg
bound
rcr
cmp
pop
int3
dec
push
mov
pop
adc
push
xchg
and
adc
mov
ds
xlat
dec
push
mov
mov
or
add
out
mov
mov
dec
add
jns
ljmp
lods
pusha
shrl
and
cld
ret
sub
add
push
out
mov
ret
jb
test
imul
xor
lahf
fsub
cmp
push
xor
test
ficoml
jmp
jnp
in
mov
loop
mov
mov
ljmp
mov
loopne
and
push
out
sbb
mov
inc
lcall
fisubs
enter
out
rorl
pop
jb
jp
jp
fnsave
mov
js
pushf
pop
fs
xchg
jne
push
xchg
jo
pop
pop
xorb
insl
aaa
add
pop
loope
sti
jns
jmp
aaa
fidivl
bound
ret
cmp
test
mov
mov
jne
rol
and
adc
out
cmp
aad
xchg
or
xor
adc
test
xchg
outsl
sub
nop
cli
ds
std
add
scas
push
repz
cmc
scas
cwtl
sub
repnz
rorb
pop
add
add
ret
mov
test
push
cld
movl
rolb
sub
ret
sbb
xor
mov
fwait
sbb
jns
cmp
jp
in
sti
es
dec
jb
clc
aad
push
xchg
scas
mov
dec
jnp
lods
arpl
xlat
mov
push
mov
add
lods
sub
xorb
pop
aaa
push
mov
cmc
stc
xor
push
jecxz
mov
xor
sbb
sub
sahf
cs
scas
lahf
sbb
mov
xchg
jno
popa
xchg
xchg
jp
popa
jl
inc
movsb
sbb
stos
mov
cld
cli
push
push
ja
imul
dec
ljmp
out
xchg
push
mov
jle
mov
xchg
mov
xchg
enter
repz
movl
inc
test
sti
adc
daa
xchg
pop
sbb
je
dec
imul
push
ret
in
shll
mov
lret
pusha
rorb
enter
mov
mov
in
add
pop
add
add
mov
lock
pop
inc
lret
nop
xchg
mov
ljmp
cmpsl
jg
dec
mov
jae
push
out
in
xchg
stc
cmpsl
sbb
idivl
aad
mov
inc
cwtl
xor
jge
add
dec
out
jnp
lods
sub
inc
jp
xchg
mov
and
rorl
in
adc
mov
push
xchg
rclb
push
cld
push
in
and
mov
pop
push
fldpi
sub
insl
es
pop
jnp
pop
fwait
cmp
popf
icebp
pop
pop
out
xchg
or
jbe
cmpsb
pop
push
scas
or
or
aas
adc
call
lret
pop
mov
sbb
add
ds
dec
je
pop
pop
inc
test
fcompl
call
nop
sub
adc
lahf
inc
cld
adc
popa
loop
push
mov
xor
or
mov
sub
out
out
adc
pusha
xchg
int3
pop
or
add
add
gs
testl
outsl
xor
mov
add
add
shlb
mov
jg
dec
inc
stos
add
das
push
add
arpl
ds
push
xchg
jmp
call
imul
dec
sbbl
aam
xchg
loopne
and
push
test
push
loop
pop
aaa
push
insb
mov
lea
mov
xchg
dec
cltd
cmp
call
adc
clc
mov
xchg
into
lcall
test
sub
rcrl
or
ja
sub
push
nop
dec
enter
popl
std
addr16
pop
cmp
add
ret
out
inc
aam
add
push
shrl
mov
imul
sbbl
jno
dec
call
shlb
rorl
mov
daa
fcmovne
jl
lock
icebp
push
jne
mov
push
mov
inc
xor
daa
mov
aaa
inc
fildl
jge
mov
lea
lcall
add
add
xchg
mov
or
adc
out
add
pop
add
add
ljmp
xchg
cld
mov
test
lods
cmp
jp
sub
cmc
cmpsl
or
subl
mov
jcxz
or
adc
pusha
popa
pop
jne
ljmp
xor
subb
or
mov
adc
stc
fimuls
ss
fcmovnu
push
mov
mov
test
sub
int
add
in
push
gs
add
push
lds
or
cltd
ljmp
repnz
add
jp
adcl
and
addr16
nop
addb
popf
mov
pop
mov
test
mov
add
out
es
adc
xor
bound
push
xchg
addr16
inc
adc
addr16
test
fstpt
dec
adc
lods
jle
xchg
nop
xchg
aam
jp
not
inc
dec
mov
jg
fldcw
lret
out
xchg
repnz
ss
cmpsb
xor
mov
fstpl
int
add
pop
add
add
jno
sahf
sub
inc
pop
mov
pop
imul
xlat
or
dec
daa
popf
ja
out
jno
or
ds
js
loop
jae
jmp
pop
adc
loopne
push
stos
mov
cld
clc
fbstp
arpl
movsl
ffree
in
mov
sub
sub
ljmp
enter
fstp
sub
cmp
rclb
iret
and
aaa
or
or
push
mov
arpl
iret
jnp
imul
adc
cmp
lods
or
push
dec
scas
sahf
cmp
or
or
lock
lock
mov
or
sahf
push
cmpsb
pop
push
or
in
add
insl
test
sbb
mov
outsb
lret
nop
stos
add
or
jg
pop
or
aas
mov
and
aas
pop
leave
std
psadbw
sbb
jbe
push
inc
pop
jns
aas
lods
fmull
adc
outsl
mov
pop
add
add
xchg
sbb
xchg
adc
sub
jno
jle
data16
jp
cmp
gs
mov
insb
sbb
das
push
xchg
std
lea
scas
jecxz
sarl
and
fildl
pop
and
add
sub
testl
fninit
lret
jmp
fisttpll
cmpb
orl
lea
cmpsb
into
pop
call
adc
push
fisubrs
dec
adc
data16
dec
xchg
movsb
mov
mov
cwtl
fsts
add
loope
imul
movsb
xchg
adc
test
dec
jl
lret
add
push
add
sbb
loopne
outsl
jmp
inc
in
or
add
sbb
inc
stos
add
sbb
cwtl
push
fildll
adcb
sahf
outsb
inc
xchg
std
mov
out
pop
out
inc
clc
push
add
test
cmpsb
sbb
jnp
mov
dec
stc
sbbb
add
pop
add
add
cld
repz
bound
popa
jecxz
dec
mov
cmp
pop
push
xorb
pop
fldenv
mov
lods
andb
mov
mov
dec
or
xchg
cmp
jns
push
loopne
xchg
popa
push
cmpsl
out
jnp
outsb
and
data16
add
rorb
repz
in
fisttpll
inc
dec
dec
dec
push
clc
adc
jl
lds
ldmxcsr
aaa
inc
testl
out
cmp
shll
dec
sarb
push
mov
adc
lcall
and
iret
in
xchg
pop
xchg
inc
fcompl
cmc
jle
fsubrp
mov
inc
xor
pop
sbb
lods
adc
pop
dec
mov
adc
mov
cwtl
dec
test
push
and
and
push
jnp
sub
pop
lret
cs
push
or
xlat
mov
imul
dec
mov
imul
test
jmp
add
pop
add
add
test
or
imul
ret
xor
lret
lret
sub
rcll
cmpsl
inc
jno
lods
xor
jg
jo
lods
cmp
and
xor
jbe
gs
cltd
shr
imulb
fisttpl
jg
outsl
mov
mov
lret
sub
jbe
fistpl
movsl
or
das
call
sbb
inc
or
adc
push
jge
ficoms
dec
outsb
mov
scas
fwait
mov
lret
jno
push
inc
xor
push
or
pop
adc
and
lcall
cmp
adc
faddl
inc
dec
dec
push
incl
adc
sub
movsl
repz
subl
sti
xchg
out
mov
or
xor
xor
cmc
iret
cs
repz
adc
pop
dec
imul
sbb
les
dec
or
repz
add
fdiv
mov
into
xlat
cmp
jmp
add
add
imull
stc
rcll
in
repnz
outsb
mov
xchg
outsl
jno
insl
jle
cmp
mov
je
movsb
rclb
dec
pop
mov
or
cmp
or
jle
orl
fisubrl
jbe
outsl
bound
loopne
adc
mov
mov
dec
push
push
inc
rcrl
sti
hlt
xorb
les
adc
xor
sub
mov
mov
mov
inc
ret
push
addr16
bound
cli
outsl
aas
jae
push
subb
lret
lea
mov
jo
jbe
add
dec
loope
push
rclb
cmpsl
mov
mov
inc
dec
cmpsl
add
mov
insl
sbb
add
hlt
sub
xchg
imul
imul
sub
mov
add
mov
loope
test
adc
adc
mov
add
mov
fsubs
adc
add
hlt
add
pop
add
add
pushf
xlat
lcall
or
xchg
rcrl
mov
cmpsl
insl
mov
faddp
cmp
leave
dec
mov
daa
xor
fldcw
pop
and
adc
lret
fbld
fildl
fcoml
push
sub
mov
jae
stos
xchg
and
xchg
sbb
hlt
cs
negl
stos
mov
inc
fnsave
pushf
mov
stos
sbb
mul
ss
and
and
and
push
xchg
insl
mov
rorl
cmp
cmovbe
ljmp
adc
and
sahf
jmp
or
mov
or
sbb
rclb
cwtl
inc
mov
fdivs
mov
xchg
sar
xchg
lods
push
push
dec
push
xchg
cmp
cld
popa
mov
dec
sub
pop
xlat
jge,pn
jae
and
mov
mov
cwtl
cmp
mov
cmpb
jp
jmp
imul
mov
jmp
or
das
div
add
pop
add
add
fldl
adc
loope
pop
mov
mov
or
gs
pop
sbb
xor
loopne
dec
cwtl
dec
imul
dec
rcr
test
sub
rolb
popa
popa
sub
sub
xchg
xchg
jg
push
cs
clc
sbb
pop
rcll
and
cmp
inc
sbb
add
mov
cmpsl
stc
je
mov
or
dec
sub
mov
test
mov
xor
test
cld
push
aaa
or
jl
add
je
or
xchg
push
add
js
fwait
adcb
dec
and
ljmp
xor
aas
cs
jge
adc
cmpsl
repnz
movsb
and
lock
push
mov
or
mov
jae
das
out
mov
into
loop
js
int3
jle
xchg
getsec
dec
out
fcompl
add
pop
lods
pop
cli
cmc
mov
push
outsb
pop
testb
pop
add
add
cs
aad
add
repnz
lret
roll
push
faddp
into
inc
dec
aas
pop
jbe
mov
jl
sub
xchg
inc
add
ret
sub
dec
cmp
xchg
subl
loope
pop
stos
add
dec
jp
sub
push
cld
jecxz
sub
mov
aad
or
mov
jae
sbb
xchg
and
or
mov
je
push
xchg
xchg
xor
test
inc
pop
mov
pop
inc
mov
sbb
xor
cmpsb
push
push
mov
adc
int
bound
daa
adc
int3
xchg
mov
mov
and
cmp
cs
mov
mov
mov
mov
add
mov
adc
cmp
aas
push
jmp
and
rcrb
jo
movsb
lcall
xor
shl
insl
dec
fs
cli
in
stos
int3
dec
add
sub
pop
add
stos
cltd
inc
popf
jae
out
pop
dec
add
int
push
add
add
add
mov
mov
mov
out
scas
imul
pop
adc
scas
pop
xchg
add
flds
icebp
add
sub
pop
inc
rorb
das
outsb
lret
out
push
out
data16
das
mov
ja
scas
aaa
fstl
lret
je
cmp
stos
jns
in
jns
gs
aas
sti
test
sub
andb
adc
fnstsw
adc
xchg
push
bound
cmp
js
mov
popf
gs
call
leave
sub
xchg
adc
int3
push
jnp
xchg
sarb
outsl
xchg
call
fldt
lods
and
outsl
mov
iret
jg
jns
jle
inc
pusha
fisubrs
ja
pushf
lods
push
mov
pop
sub
dec
in
push
push
fdivrl
or
jmp
lods
sub
enter
call
cmp
mov
adc
add
add
aam
int
mov
mov
push
cmc
and
pop
add
add
cmp
push
mov
push
popa
sub
hlt
fcoms
cs
adc
into
and
mov
nop
outsl
sbb
sub
cmpsb
ljmp
out
xchg
int3
sbb
xchg
inc
pusha
shr
dec
imul
aam
sub
xchg
jnp
cmp
mov
pushf
rcr
mov
stc
lock
and
icebp
shrb
push
add
subb
add
mov
pop
aas
jg
pusha
pop
sbb
push
and
insb
jns
icebp
mov
xchg
lods
pop
out
jecxz
ljmp
jnp
sbb
mov
xchg
mov
lret
cwtl
fstl
lds
push
mov
out
push
sbb
cwtl
jbe
xchg
lds
ljmp
push
mov
mov
cltd
popa
sbb
dec
mov
cld
test
xor
adc
loope
xchg
add
stos
jecxz
mov
add
pop
arpl
addr16
add
mov
mov
pop
adc
add
pop
add
add
rcrb
sub
insb
cli
js
outsb
mov
sti
add
insl
lret
scas
mov
dec
inc
jb
cli
mov
call
dec
in
arpl
xor
jle
mov
sub
stos
push
dec
xor
jp
repz
jp
ret
addr16
jb
clc
imul
dec
rclb
xchg
push
inc
mov
in
xchg
pushf
cmc
data16
icebp
and
mov
add
les
mov
xchg
das
imul
mov
dec
sub
xor
push
inc
mov
cltd
int3
ss
nop
int
fst
cmp
imul
stc
jbe
mov
xlat
int3
hlt
adc
xchg
mov
into
adc
pop
rorb
cmp
lods
pop
sub
mov
mov
repnz
mov
mov
mov
push
inc
bound
jmp
and
mov
sub
mov
add
repnz
out
cmp
cmp
pushl
ja
mov
sti
add
pop
add
add
fwait
test
or
push
hlt
add
jns
clc
add
inc
movb
add
xchg
inc
pop
ljmp
je
hlt
adc
rcll
data16
jecxz
test
xlat
mov
dec
repz
and
add
cmp
mov
and
iret
std
pushf
xor
mov
push
and
and
sbb
mov
sbb
out
inc
lret
inc
inc
fisttpll
ja
cld
adc
push
loop
push
cltd
and
inc
dec
cli
fsubrs
lcall
ss
popf
out
pop
push
popa
sbb
adc
repz
ficoml
lret
int3
add
sarb
pop
or
das
arpl
cmc
std
pop
icebp
xchg
shll
inc
xchg
xchg
shr
das
arpl
jle
outsb
jle
sub
xchg
dec
add
mov
or
ja
xchg
inc
xchg
das
xchg
lahf
dec
add
push
scas
decb
or
pop
add
add
inc
lds
add
sahf
leave
xchg
sub
pop
push
cltd
dec
jecxz
pop
test
in
ret
aam
xchg
inc
xor
arpl
sub
scas
stc
ss
adc
dec
testb
mov
push
test
cmp
sbb
push
out
in
jmp
jmp
jp
pop
mov
cwtl
mov
dec
imul
mov
jp
or
das
jbe
sbb
or
mov
outsb
lods
data16
add
cld
xchg
iret
pop
cmc
bound
push
out
push
and
test
mov
daa
xchg
and
and
sbb
xchg
cmp
int
pop
xorb
add
popf
in
add
js
and
dec
sub
pop
sub
popa
enter
repnz
jp
mov
bnd
lret
and
dec
lea
aaa
xchg
and
movsl
mov
mov
mov
cmc
pop
loop
sub
add
pop
add
add
das
mov
jmp
jb
int
adc
xor
add
jno
adc
mov
add
pop
inc
test
mov
cmp
call
and
mov
mov
fdivp
mov
fsubrs
xlat
daa
shrb
mov
test
lcall
popf
jnp
fisubs
pop
cwtl
nop
xor
out
lock
daa
leave
dec
add
scas
scas
repnz
push
pmuludq
push
push
imul
or
push
test
data16
test
cmp
fdivr
lret
fstl
mul
popf
push
test
mov
push
push
out
add
ffreep
mov
jb
xchg
mov
mov
mov
xchg
or
jl
imul
inc
adc
mov
adc
lds
hlt
fadd
cmp
or
psrlw
sbb
add
add
add
mov
push
jg
mov
pop
mov
das
incb
add
add
add
jecxz
pushf
ss
jmp
or
fs
nop
mov
and
push
ja
xchg
dec
loope
mov
inc
mov
orw
lret
jg
or
sbb
push
mov
js
cmp
push
insl
fst
inc
fwait
jnp
mov
mov
pop
dec
test
cld
std
negb
xor
push
mov
push
mov
pop
int
xor
dec
mov
shrb
or
push
jle
adc
fstps
mov
and
sbb
xor
jo
mov
fdivrp
sub
cs
mov
test
add
push
push
push
pop
jl
scas
sub
mov
jno
pop
shrl
sbb
jnp
cmpb
scas
cwtl
outsb
mov
push
push
lret
std
fsubr
scas
jns
jg
mov
mov
dec
mov
jmp
add
mov
mov
xchg
mov
incl
add
add
add
movsl
push
and
adc
xor
jnp
gs
pop
test
inc
sti
sub
mov
ds
jmp
imul
xchg
jnp
lahf
push
sbb
add
movsb
cmpsl
jno
add
cmpsb
push
call
incb
popa
popa
sub
pusha
rcrb
outsb
jo
dec
bound
popf
xchg
jmp
pop
lret
jg
mov
sti
pop
out
call
sarl
js
mov
push
icebp
lret
mov
imul
aam
mov
sbb
push
pop
pushw
sti
jae
cli
cmc
adc
adc
cmpsb
fisttpll
mov
mov
aas
and
in
push
stos
int3
fcmovne
mov
mov
mov
repz
adc
add
mov
sahf
lock
rorl
or
lahf
fdivrl
adc
and
cld
adc
pop
scas
push
add
or
add
add
add
mov
xor
cmp
add
add
add
pop
jb
xchg
jge
pop
push
lcall
jg
in
pop
mov
cmp
or
dec
jecxz
cs
sub
int3
or
push
jbe
pop
in
xchg
xor
mov
cmpsb
pop
in
lahf
outsb
jg
test
in
xchg
adc
loopne
pop
push
add
mov
dec
pusha
mov
push
add
xor
in
xchg
test
stos
pop
dec
dec
add
jg
cmc
add
shll
scas
ja
add
pop
sti
xor
cld
outsb
fiaddl
cmp
xchg
dec
sbbl
push
in
repnz
cli
aad
popa
lret
sahf
icebp
push
adc
fldt
test
fadd
in
cmpsb
mov
sub
ss
in
push
jecxz
and
and
adc
sbb
int
xor
mov
bound
popf
adc
xchg
enter
push
fisttps
test
lea
pop
add
add
inc
jbe
scas
movl
mov
fmuls
inc
push
dec
mov
sub
movsb
sbbb
inc
test
sbb
adc
jne
fmull
shrb
and
ret
pusha
lret
je
xchg
fistps
mov
pop
out
mov
inc
mov
xchg
aaa
dec
movsl
or
mov
pop
fdivs
jg
cmpsl
push
dec
sbb
imul
movsb
jo
jecxz
xor
pop
jecxz
dec
add
popf
jo
out
jle
push
sahf
fistpl
cmp
jb
push
add
ljmp
insb
pop
mov
fadd
int3
add
in
sub
lock
mov
ret
mov
divb
inc
ja
push
iret
rol
push
inc
jp
pop
repnz
cmp
insl
shl
ret
sbb
xchg
xchg
mov
mov
pop
in
in
clc
inc
pop
lahf
dec
pusha
and
xor
mov
add
mov
into
fwait
cmc
pop
sub
dec
add
add
add
add
or
les
dec
xor
fs
mov
cltd
je
in
pop
lds
sub
stc
push
test
int3
push
lahf
adc
sar
xchg
mov
add
imulb
rolb
je
sbb
push
jle
push
jmp
xor
push
filds
mov
dec
push
mov
add
pop
xor
subl
sbbl
or
sub
add
add
aas
icebp
cmpsl
lret
sub
pop
insb
imul
cmp
popf
xor
cli
sti
jmp
fidivl
fsub
dec
out
pop
fmuls
js
imul
mov
pushf
fsubl
push
jmp
push
push
sub
cmp
mov
js,pn
leave
ss
in
jnp
dec
stc
adc
ss
add
xor
mov
pop
mov
jbe
push
add
add
add
add
or
mov
push
xor
lds
push
sub
jmp
xchg
mov
test
mov
sbb
into
ret
sti
std
imul
sub
mov
pop
shll
jno
ljmp
inc
or
out
mov
sbb
inc
inc
shl
or
subl
daa
or
inc
mov
inc
mov
ret
and
mov
and
mov
xchg
jle
sti
add
xchg
pushf
xor
popf
mov
fnstenv
arpl
cltd
cmp
scas
dec
fmulp
xchg
xchg
ret
or
loopne
inc
pusha
and
add
int
orb
cli
mov
shlb
push
rcrb
sbb
dec
or
sti
call
sti
mov
xor
out
sarl
aas
bound
outsb
outsb
xor
data16
sbb
xchg
lds
lds
sti
inc
out
aas
mov
scas
adc
fcoms
cmpsb
pop
add
add
add
add
xor
dec
test
adc
fistpll
push
sbb
jg
push
jae
xchg
xlat
shll
xchg
xchg
int
pop
fwait
xchg
push
xor
pop
mov
ret
push
xchg
js
mov
cmp
xor
pusha
dec
cmpsl
ret
xor
push
xor
xlat
js
mov
sub
and
cmpsb
jbe
xchg
faddl
mov
sahf
jecxz
fs
adc
cmpsb
xor
pop
mov
jmp
iret
push
ret
mov
mov
shl
inc
inc
pop
mov
iret
sub
mov
xlat
scas
int
test
out
and
clc
cli
adc
adc
jns
sub
sarl
sbb
dec
test
divb
adc
push
pop
jp
add
rep
hlt
in
push
pop
repnz
outsb
lret
push
out
stc
xchg
sbb
push
bnd
jl
movsb
mov
pusha
add
add
dec
pop
push
jge
roll
mov
pusha
xchg
sahf
add
cmp
xor
fiadds
outsl
inc
mov
adc
jo
popa
arpl
or
sub
push
mov
rcrb
cmp
push
outsl
adc
mov
shl
mov
movsb
pop
cmpsb
xchg
mov
popl
and
scas
out
xor
mov
xchg
xchg
adc
cmc
scas
push
or
or
add
dec
sub
scas
add
push
sub
cmp
jl
loope
icebp
pop
out
dec
sub
sbb
cmpl
mov
sbb
add
je
in
int3
mov
and
addr16
pop
pop
lahf
ss
xchg
inc
std
sub
outsb
test
push
in
scas
mov
cmc
out
and
cs
dec
pusha
add
xchg
sub
shlb
mov
pushf
adc
sbb
in
out
ja
fists
dec
out
mov
pop
add
add
cwtl
or
pop
pop
loope
mov
or
inc
mov
dec
icebp
sbb
call
scas
shll
hlt
das
inc
es
cmc
xchg
mov
out
rcrl
sbb
inc
dec
mov
xchg
jb
sub
or
jmp
clc
arpl
sub
add
inc
jae
mov
in
push
lea
in
dec
jecxz
mov
imulb
push
inc
pop
mov
out
mov
fadds
xor
ja
enter
add
ljmp
adc
pushf
jo,pt
imul
mov
movsb
cmp
push
xchg
insl
int
sub
push
movb
mov
adc
notb
aad
testl
push
pop
inc
mov
imul
loopne
cli
cmc
pusha
lahf
mov
daa
add
xchg
push
fiaddl
lcall
sbb
outsl
lret
bound
pop
sti
inc
xchg
cwtl
iret
jecxz
jno
add
pop
in
daa
jle
add
inc
out
pop
add
pop
add
add
jne
mov
mov
push
out
jae
mov
pusha
dec
sbb
mov
xlat
sahf
sub
iret
mov
xor
cs
enter
jb
push
and
mov
loope
sbb
lds
mov
dec
imul
xchg
dec
inc
xchg
fidivl
popa
and
or
outsb
adc
inc
jge
leave
in
sbbl
es
arpl
je,pt
sti
xchg
sub
jle
shll
fldt
cmp
mov
adc
insb
dec
mov
mov
fdivr
or
add
dec
aas
inc
add
jge
imul
jg
loopne
ja
sbbb
mov
jmp
mov
inc
xlat
inc
cwtl
mov
sbb
rolb
fs
addr16
or
cmp
test
ds
jo
enter
jnp
es
and
add
jg
idivl
mov
jne
add
pop
add
add
adc
pop
sbb
loope
inc
adc
adc
push
shll
xchg
movsl
bound
fistl
mov
das
clc
mov
add
or
add
xor
int3
fists
test
add
cld
and
in
outsb
shll
mov
mov
mov
push
jno
fmull
in
mov
daa
push
in
push
inc
movsb
jecxz
jnp
cltd
mov
in
pop
pop
or
pop
mov
and
push
cmp
insb
out
imul
jae
add
test
in
xchg
scas
cmp
mov
xorl
push
ja
ror
ds
push
cmp
loopne
lods
addr16
es
mov
cmp
out
sbb
xchg
or
or
clc
mov
or
sub
and
inc
enter
add
cmp
sti
jg
les
or
add
add
add
pop
movsl
or
cli
call
ja
out
clc
das
std
add
jnp
dec
mov
cwtl
out
mov
sbb
mov
arpl
stos
adc
jle
movsb
andl
jmp
clc
xchg
and
pop
and
in
cmp
cwtl
push
cmp
loope
push
jns
adc
cmpsl
call
test
mov
dec
call
lea
and
pop
mov
xor
and
or
or
jg
mov
inc
push
xchg
movsb
push
adc
int
in
fmull
xor
cltd
roll
sbb
imul
dec
add
mov
add
and
push
cltd
dec
clc
mov
cmp
ss
push
push
aam
sahf
call
cwtl
jbe
cltd
pop
inc
adc
sahf
push
cld
mov
mov
cli
fld
subl
adcb
and
add
jnp
fnsave
xchg
divb
cmpsb
lea
pop
add
add
addr16
or
int
mov
js
dec
add
mov
sahf
ds
xchg
imul
mov
mov
ljmp
repnz
in
loope
jecxz
mov
lea
cmpsb
movsl
jp
test
lods
mov
lea
pop
cmp
rorl
pop
aad
ljmp
cmpsb
adc
mov
inc
in
std
xchg
fstpl
scas
stos
stos
sub
mov
pop
dec
cli
cli
mov
jnp
in
es
lods
mov
cwtl
mov
mov
adc
sub
ljmp
decl
add
pop
xor
test
testl
mov
subb
rcrb
scas
in
mov
add
pop
ja
pushf
aam
out
adc
mov
add
loopne
jl
mov
jmp
pop
sub
mov
rolb
enter
push
xchg
mov
jno
std
outsl
mov
inc
loop
dec
sub
or
add
add
add
push
jle
fidivrs
pop
sub
mov
xorb
lret
mov
cmpsb
and
stos
jbe
mov
fnsave
dec
lahf
sbb
inc
scas
call
fsubrs
pusha
lock
and
xor
stos
lods
inc
dec
cmc
jmp
push
mov
mov
push
into
or
movsl
mov
or
imulb
mov
xchg
int3
xor
dec
sbb
lcall
loopne
sub
outsb
outsb
les
xor
pushf
insb
std
sub
mov
push
enter
sbb
and
xor
jmp
out
mov
adc
add
mov
ds
mov
pushf
mov
mov
arpl
lock
push
leave
and
inc
popf
inc
add
sbb
or
jno
loopne
add
jmp
fisubrl
mov
add
pop
add
add
jmp
rorb
mov
xchg
fidivrl
cmp
xor
imul
in
xor
jge
movsb
xor
push
and
xchg
push
jmp
inc
int3
add
fnsave
fwait
lea
mov
xor
cmp
call
mov
into
add
fisttps
dec
divl
shrb
lret
ret
lea
in
les
mov
pop
lea
jp
push
jmp
ds
filds
aad
cwtl
jne
adc
out
sub
and
out
push
lea
pop
push
mov
cmp
lret
vmread
xchg
cmp
orb
lret
lods
jecxz
call
sahf
push
clc
xlat
jg
sbb
or
nop
mov
int3
or
mov
rclb
ljmp
push
scas
lea
ljmp
loopne
pop
fldenv
jl
ret
pushf
sub
jno
inc
inc
mov
xlat
popf
and
xor
xchg
lds
push
mov
aas
cwtl
or
add
push
pop
jg
mov
das
out
sbb
nop
adc
imul
out
daa
fdivl
and
js
cmpsl
repnz
icebp
adc
sahf
fisttpl
push
xor
fwait
repnz
and
lods
outsl
outsb
push
pop
and
cmp
stc
out
iret
je
sbb
data16
clc
add
fisttpl
inc
bound
clc
int3
inc
xor
call
sahf
xchg
mov
mov
rcrb
popa
out
push
fiadds
mov
xchg
mov
sub
jg
arpl
mov
mov
roll
jmp
aad
push
nop
dec
pop
mov
les
and
add
or
addr16
adc
insb
in
movsl
cs
pop
in
inc
fsubrl
or
dec
mov
ficompl
fcompl
or
adc
ret
daa
shlb
lcall
cmpb
adc
test
add
cli
inc
jg
int
cs
hlt
xchg
jnp
lahf
push
add
pop
add
add
push
and
and
xchg
mov
cmpb
scas
push
pop
mov
xchg
ss
jns
ja
jbe
scas
add
and
popl
loopne
mov
sbbb
fnstcw
data16
popa
pop
sbb
clc
and
popa
cld
cmp
and
dec
dec
sub
xchg
fwait
pop
add
sarb
aas
adc
add
dec
or
test
je
shlb
pop
cmp
aaa
movsl
rcrb
insl
addr16
or
iret
sarl
mov
scas
sti
add
pop
lods
aaa
adc
aas
and
mov
push
daa
jns
lock
js
xchg
pushf
imul
mov
cmc
cs
xor
fisttpll
shl
push
xchg
mov
push
xchg
mov
ja
adc
loop
ljmp
das
ja
pop
sbb
mov
cmc
lahf
les
in
add
mov
mov
add
add
xchg
std
cmp
jle
fistps
push
sub
cmpsb
sgdtl
pop
add
add
xor
adc
mov
xchg
lcall
sbb
mov
push
lea
outsl
daa
fs
mov
loope
pushl
or
pop
movsb
cmp
fcomi
int
add
mov
pop
inc
pop
call
aas
jle
mov
inc
push
push
sti
mov
test
cld
adc
movsb
mov
jl
ljmp
pop
lock
xor
outsb
rclb
jge
loop
into
or
ljmp
aas
mov
insl
cwtl
inc
nop
std
ja
popf
jle
fwait
xor
out
mov
jmp
cmp
jne
shrb
cmp
jb
loop
dec
sbb
or
loop
push
in
lds
clc
fisubs
inc
sub
andb
add
inc
sahf
xchg
out
sbb
push
inc
mov
pop
sub
push
mov
add
xchg
pop
lds
xlat
fimull
jo
shrb
add
add
push
jle
mov
and
jl
adc
bound
sub
add
adc
xor
das
mov
scas
movsb
in
imul
repz
inc
jbe
xchg
inc
cmpsl
stc
inc
idivb
add
pop
test
or
xchg
stos
jmp
loope
cli
push
dec
add
adc
fidivrl
push
sarb
xor
mov
cmp
popf
push
add
inc
xlat
outsl
dec
and
and
jbe
lock
xchg
and
jg
pop
stos
xor
pop
in
push
cmp
cmp
les
jmp
sbb
int
ret
sub
mov
sarl
out
inc
andl
jecxz
jmp
outsb
cli
shr
jns
lock
pop
in
loop
mov
and
int3
mov
push
jmp
popf
roll
sbb
mov
repnz
add
push
add
sub
iret
outsb
jmp
in
pop
outsl
sub
inc
mov
pop
add
add
pop
bound
imul
sbb
fsts
add
push
add
cmp
arpl
repnz
jbe
sub
ficomps
inc
sbb
movsb
or
mov
jle
test
pop
pop
popa
or
inc
mov
incb
jns
and
cmp
aam
jne
mov
push
adc
in
push
lds
pop
inc
aad
ljmp
mov
popa
stos
sub
sub
push
cmp
and
cmp
sbb
inc
in
dec
jo
ljmp
mov
fnsave
sub
xlat
rcll
adc
icebp
mov
mov
mov
jge
and
cltd
stos
sub
jb
dec
lret
sbb
xor
jge
hlt
fucomp
mov
cwtl
cmpsb
aam
mov
das
mov
cmp
push
and
cwtl
imul
mov
add
std
sbb
stc
cld
or
or
adc
add
add
add
inc
dec
mov
xchg
mov
outsl
cld
add
cmpsb
mov
adc
outsb
cmpsb
pop
rorl
add
jno
lods
xor
mov
jmp
lret
int
jne,pt
sbb
inc
imul
xor
arpl
xchg
in
cli
pusha
je
scas
lret
push
stos
xor
xchg
fs
push
incb
xor
popf
push
out
fdivrl
mov
mov
inc
shl
test
popl
arpl
mov
or
icebp
sbb
imul
cmp
adc
mov
jbe
fwait
in
jge
push
mov
in
inc
into
nop
clc
aad
jnp
xchg
dec
mov
push
and
push
mov
mov
or
mov
imul
cmp
fistpll
jno
sbb
fisubrl
mov
jne
jl
jmp
xlat
mov
or
je
inc
pop
outsb
cmpb
lret
jb
lock
daa
add
add
add
pop
test
scas
repz
cld
arpl
shll
adc
add
add
add
fisttpll
test
adc
xchg
push
in
cwtl
in
add
jo
mov
mov
cs
push
in
sub
test
jae
inc
getsec
add
daa
enter
sarl
in
outsl
sub
push
mov
jns
cwtl
arpl
movsb
cmc
and
fldenv
jg
scas
iret
add
mov
js
inc
inc
pop
pop
dec
test
sbb
jne
mov
int3
cmp
aas
mov
push
das
pop
imul
cvtps2pd
mov
push
sti
pop
sub
mov
cmp
mov
adc
pop
cltd
das
loop
cwtl
push
mov
scas
inc
mov
and
mov
cmpsb
mov
test
stos
gs
mov
xchg
fisubs
in
sbb
movsl
jge
aad
jo
mov
lock
and
xchg
push
test
mov
and
jnp
xchg
jle
pop
mov
mov
dec
pushl
jnp
outsb
js
adc
add
add
add
sti
sahf
enter
ror
rcr
pop
mov
rcll
in
mov
push
pop
sub
in
pop
cmp
and
dec
testb
cmpsb
mov
adc
mov
xchg
xchg
adc
cmpsl
insl
into
mov
xor
adc
inc
xor
xchg
push
hlt
outsl
loope
sbb
push
pop
inc
das
mov
stos
and
add
scas
or
dec
cmpsb
mov
sbb
rorb
cwtl
pusha
fistpll
add
adc
shlb
pushf
jb
and
insl
xor
in
cltd
shl
imull
mov
sbb
or
adcl
sbb
push
aam
or
cld
push
rcrb
pop
pop
dec
and
cmp
mov
ds
xor
iret
push
lea
mov
mov
jne
jecxz
fst
add
inc
ja
pop
aas
pop
jmp
mov
rclb
add
cwtl
xor
jae
inc
mov
in
call
or
int3
in
xor
sub
adc
jb
mov
cmp
inc
jb
aaa
js
mov
jae
dec
cmp
test
rcrb
fisubl
out
lods
outsl
or
std
cmpsl
mov
xor
enterw
arpl
loop
cmpsl
lcall
int
lods
jnp
adc
mov
ljmp
test
hlt
lret
je
jbe
popa
mov
push
sar
jl
in
out
imul
jno
daa
push
in
mov
aad
in
lods
fisttpll
repz
divl
daa
inc
add
lods
in
fiaddl
dec
popa
inc
xchg
into
aad
pop
mov
imul
fcmovnbe
ljmp
rcl
cmp
cmp
fnstcw
mov
adc
addb
add
repz
jae
ja
div
fisttpll
xchg
inc
xlat
push
add
pop
add
add
in
mov
cmp
loope
sti
inc
jecxz
cmp
mov
loope
push
xchg
jl
mov
cli
test
in
jl
push
repz
pusha
sub
mov
jno
dec
cmp
das
mov
dec
xor
sbb
sbb
dec
mov
jecxz
sbb
faddp
in
mov
jge
push
sub
ret
pushf
mov
mov
sbb
pop
icebp
cltd
cwtl
mov
inc
pop
enter
pop
or
jo
sub
adcb
fstpl
das
out
mov
out
mov
inc
inc
pop
dec
push
xchg
hlt
ret
clc
fcoms
mov
shll
stos
addr16
test
jo
xor
mov
pop
mov
push
or
ljmp
popa
mov
lahf
aam
testb
mov
xor
bswap
fwait
bound
fnsave
clc
dec
cld
mov
call
inc
pushf
add
cli
std
jg
mov
or
add
add
add
xor
jmp
mov
sbb
and
sbb
repnz
shl
xchg
addr16
xchg
in
push
jl
fs
adc
test
popf
bound
jb
jo
push
enter
sub
fs
into
cld
jmp
aam
inc
in
scas
sbb
mov
mov
dec
icebp
out
inc
mov
mov
dec
mov
pop
decb
loopne
repz
jg
mov
jnp
sub
inc
mov
insl
insb
lahf
into
add
aad
lret
leave
cmpb
cmc
lock
mov
mov
add
xlat
and
pop
lret
loope
leave
ljmp
add
or
pop
sbb
ss
fstpt
fwait
dec
cli
jae
and
adc
sahf
cltd
mov
mov
mov
fistpll
ficoml
aad
xchg
dec
test
outsl
incb
cmpsl
stos
inc
mov
pop
push
cli
mov
inc
out
pop
add
add
mov
std
incl
mov
rcrl
in
add
pop
add
add
loop
adc
add
or
cmp
mov
push
cmp
mov
mov
dec
insl
mov
cmp
xchg
adc
pusha
cmpsl
out
inc
pop
dec
and
icebp
mov
sub
jb
adc
test
pop
sub
stos
mov
jmp
int
pop
xor
xor
inc
ljmp
push
add
rcll
inc
inc
stos
fistl
mov
dec
imul
adc
imul
mov
out
je
and
xlat
mov
fldcw
push
sub
xor
mov
and
cmp
test
je
mov
xchg
fcompl
sub
iret
mov
sbb
or
push
scas
mov
mov
std
mov
push
outsl
mov
mov
arpl
stos
adc
scas
test
add
push
es
jg
pop
pop
mov
fmuls
pop
add
add
lahf
test
sbb
push
mov
scas
jecxz
and
jmp
xor
das
xlat
mov
xchg
mov
xor
and
dec
or
pop
sub
out
cmpsl
jo
push
mov
hlt
loope
xor
lds
hlt
xor
pop
fisttpll
sub
mov
lods
inc
in
popa
push
fnsave
mov
inc
dec
or
jle
popf
and
mov
push
jge
push
ror
mov
fcomps
xlat
push
repz
push
cmp
cmp
test
cmp
inc
adc
mov
es
or
ret
loope
sti
cmp
arpl
adc
adc
cmp
bound
loopne
jbe
dec
cmpsl
mov
pop
mov
shrl
xchg
das
call
push
pop
push
pop
xchg
pop
jns
imul
or
mov
insl
cmpl
xor
mov
fcmovbe
leave
out
add
or
mov
add
sbb
add
add
add
jge
dec
or
ss
pushf
int3
add
cmp
sbb
add
mov
dec
mov
cwtl
xchg
or
mov
lods
dec
push
or
jg
pmulhw
sarl
fldcw
stc
push
mov
mov
pop
push
and
jo
adc
rcr
jnp
jp
pop
negb
lea
and
lock
ljmp
loop
shrl
pop
jae
xor
imul
push
out
mov
sub
dec
mov
pop
cmp
pop
push
inc
jns
jp
insl
repz
ja
popf
or
mov
clc
jl
je
or
testb
push
push
loopne
mov
arpl
inc
enter
loopne
ja
xchg
movb
das
or
fsts
loopne
xchg
add
jmp
negb
repz
xchg
sbb
xchg
push
iret
pop
hlt
xchg
cmp
add
stc
lods
xor
xor
loop
enter
sbb
add
add
add
arpl
scas
fstpl
jge
mov
ret
je
mov
nop
lahf
sub
cmp
fwait
mov
pop
xor
rcl
outsl
push
popf
int
mov
jle
ret
fmuls
ret
mov
mov
xor
mov
mov
jecxz
stos
xor
jecxz
dec
in
insl
xchg
jb
jp
shll
pop
push
jecxz
jbe
push
lret
jno
pop
xor
dec
aaa
in
stos
mov
push
sub
push
mov
mov
mov
push
mov
insb
movsl
and
mov
leave
test
jge
adc
leave
cmpsb
xlat
and
cmpsb
fs
insl
xchg
les
loope
adc
stos
into
das
add
jecxz
fidivrl
cltd
mov
mov
fdivs
dec
fdivrs
and
in
pop
movsl
insb
sub
ficoms
stos
sbb
jmp
ljmp
inc
add
add
or
fcmove
das
mov
out
mov
push
push
cs
push
lcall
xchg
test
lock
xchg
movsl
xorl
add
imul
stos
enter
lcall
inc
jl
adc
in
mov
add
jno
xchg
js
dec
fnsave
add
or
adc
ja
add
int
rcr
add
mov
enter
mov
lock
sub
push
inc
testl
ret
jae
jae
mov
jecxz
mov
lods
sbb
push
or
pop
pusha
addr16
mov
fstl
mov
aam
adc
pushf
lahf
mov
adc
jns
and
ficomps
mov
add
gs
adc
scas
mov
test
ss
aad
add
mov
imul
outsl
imul
and
cwtl
mov
stos
xchg
sbb
xor
xchg
movsb
add
in
out
arpl
aas
scas
adc
hlt
or
add
pop
add
add
incl
and
dec
es
sbb
ljmp
pop
pop
fs
hlt
inc
lret
int
push
test
movsl
dec
xor
bound
xchg
loop
mov
subb
inc
aaa
sub
xchg
es
xor
cwtl
repz
popa
scas
and
lea
icebp
mov
outsl
mov
stos
cmpsb
add
mov
pop
scas
loop
xor
mov
repz
stc
rorl
cmp
jg
lcall
cmp
in
es
push
sub
dec
imul
push
addr16
add
scas
fimuls
dec
stc
cwtl
sub
scas
insb
sbb
inc
xor
cld
das
xlat
out
push
and
dec
xchg
add
stc
cmp
outsl
sahf
test
mov
les
fstpl
mov
clc
popl
insb
mov
int3
int
into
ret
push
aas
inc
aam
es
pushf
xor
dec
xchg
sbb
insl
repnz
fisubs
push
sub
mov
dec
jns
roll
add
add
sbb
out
cld
mov
sub
pop
add
pop
add
add
xchg
fnstenv
jecxz
lahf
inc
xorb
dec
das
icebp
xor
lds
mov
lea
xchg
push
outsb
push
in
jnp
add
es
orl
hlt
sbb
inc
push
add
setno
mov
push
fcompl
outsl
cwtl
sbb
mov
adc
push
mov
add
push
lock
stos
adc
add
xchg
adc
inc
mov
cld
jnp,pn
push
ficomps
push
or
xor
xor
sub
dec
or
or
push
scas
or
in
mov
cmp
mov
push
jbe
pop
xchg
iret
dec
push
js
movsb
push
jno
sbb
jno
enter
sbb
sub
and
movsb
sbb
dec
sbb
test
jp
roll
ja
push
add
in
add
cmp
out
lock
das
ss
push
and
add
add
add
push
arpl
xor
mov
pop
test
mov
mov
test
pusha
test
dec
ucomiss
les
fldenv
xchg
sub
icebp
cwtl
sub
rorl
subb
push
xchg
fs
es
imul
addb
or
mov
leave
stc
jne
xchg
mov
sub
inc
out
mov
mov
add
cltd
inc
enter
repnz
cld
push
sub
fistpll
loopne
jno
test
push
push
arpl
jge
mov
int
mov
loopne
rol
cmc
orb
pusha
dec
outsb
daa
mov
popf
fwait
out
inc
repz
cmp
pop
push
bound
sahf
das
clc
sbb
test
add
adc
int
xchg
mov
dec
daa
sbb
test
mov
lods
loop
stos
rcrl
mov
test
mov
test
jne
push
add
add
lods
jg
sub
add
and
add
add
add
dec
sti
js
jnp
inc
stos
pop
push
jmp
sbb
cwtl
cmc
add
imul
roll
or
test
xor
fimull
loopne
inc
and
jl
push
je
in
and
sub
repz
fwait
movb
lock
xchg
mov
jnp
or
push
mov
xor
lods
add
stc
mov
and
or
add
stos
sti
pusha
das
imul
mov
sub
dec
sbbb
jno
gs
mov
mov
inc
lods
adc
mov
pushf
jb
mov
add
sbb
dec
iret
push
roll
mov
inc
sbb
or
aaa
pushf
jmp
je
jnp
std
js
mov
into
jmp
sbb
inc
jb
dec
testb
or
xchg
mov
mov
xlat
pop
int
aas
push
in
xchg
or
les
into
lahf
push
sub
roll
add
add
jg
cld
fcmovbe
out
pop
mov
add
add
add
xchg
push
pop
pop
jg
lret
jb
adc
shl
scas
dec
xchg
mov
jle
sbb
out
mov
and
xchg
pop
scas
mov
jle
and
add
sub
pop
sbb
ja
jns
push
pop
inc
xor
jecxz
cmp
lret
cmp
inc
rcll
scas
pop
jge
rcl
js
xchg
adc
mov
push
inc
cwtl
xchg
ja
fildl
and
inc
mov
cmp
das
in
cmpsl
xchg
test
mov
bound
xor
cmp
int
jl
jno
inc
xchg
inc
lock
pop
fists
out
adc
jmp
sti
movsb
cltd
push
xor
mov
mov
dec
faddl
into
mov
xchg
adc
stos
nop
fs
sub
es
loopne
cmpb
add
inc
hlt
xlat
adc
mov
pop
std
or
cli
push
leave
sarl
dec
xor
ret
mov
iret
mov
ljmp
add
add
add
imul
lahf
mov
inc
leave
cmovno
cmp
and
inc
jl
ljmp
mov
leave
mov
setle
push
ljmp
movsb
hlt
scas
add
and
fistpl
popf
mov
sbb
clc
sbb
or
xchg
cmp
sub
pushf
pop
aam
mov
push
xchg
in
faddp
pop
push
cmp
or
and
inc
mov
or
call
hlt
xchg
push
jno
out
sti
addr16
xchg
cmpsb
mov
mov
cmpsb
xor
jae
inc
int3
fmuls
nop
arpl
xchg
iret
xor
roll
mov
pop
inc
xor
pusha
out
push
add
jecxz
or
sbbb
decl
mov
pushf
adc
jbe
mov
push
adcb
insl
les
xchg
push
mov
shrl
imul
add
add
mov
lahf
and
popa
std
and
and
add
add
add
mov
in
push
mov
cmpsl
sub
movsl
stc
pushf
pop
les
or
test
loope
jecxz
inc
jae
lcall
fs
push
jae
mov
push
push
dec
lea
cmc
popa
cmp
aaa
push
add
add
mov
pop
fdiv
cmp
xchg
jecxz
sbb
fldl
addr16
push
sbb
xor
fdivl
icebp
dec
lcall
ljmp
icebp
cmpsb
dec
int3
nop
pop
jmp
fldcw
dec
cmp
icebp
ljmp
mov
adc
mov
push
xchg
xor
aas
push
shll
sub
or
inc
xchg
repnz
enter
ja
out
out
sbb
or
dec
in
mov
aad
rorb
mov
sbb
push
cmp
testb
sahf
and
jp
push
adc
inc
ljmp
sub
pop
jmp
add
xor
clc
cli
clc
sarb
js
pushf
fidivrl
and
add
push
gs
cmp
cld
popa
fmuls
dec
mov
imul
mov
inc
fcoms
sbbl
sbb
enter
jne
or
gs
in
add
sbb
pop
std
fimuls
movsb
cmp
insl
inc
mov
sbb
pop
or
cmpsb
imul
in
xor
in
mov
ss
into
addr16
lods
leave
mov
cmp
add
jg
mov
xlat
jbe
jae
popf
mov
cmp
or
int
inc
add
dec
jno
daa
hlt
lret
dec
push
lds
add
pop
pusha
call
sarb
in
pop
sub
jae
sub
mov
pop
xchg
push
fidivrl
pusha
push
jp
sbb
xor
or
pop
or
cmc
idiv
ret
fldenv
cbtw
jne
in
nop
stc
push
cmc
push
icebp
add
jnp
out
add
push
insl
push
mov
add
add
add
cwtl
in
sub
adc
movups
inc
cmp
jg
push
int3
mov
mov
mov
in
subl
or
sub
push
popl
in
shrl
mov
ja
cmp
inc
jp
les
hlt
mov
cmp
and
pop
cli
dec
pop
push
fdivrs
sahf
das
dec
shl
jle
test
xor
push
add
jl
fxch
mov
into
adc
jmp
pop
cmp
and
mov
adc
mov
push
xchg
lahf
pop
out
jmp
cmc
lds
aam
and
sub
inc
sbb
pop
mov
mov
imul
sub
pop
adc
sub
fstl
jns
mov
cmpsb
mov
cmp
repz
jl
xchg
or
sbb
in
lahf
add
es
data16
pop
sub
daa
insl
das
ds
inc
daa
add
pop
add
add
aaa
jle
push
icebp
imul
dec
pop
dec
clc
adc
outsl
sahf
jle
add
sahf
inc
es
stos
push
popa
mov
mov
and
rcrl
xchg
add
mov
ja
sbb
je
scas
xor
sub
fcmovnb
inc
xor
scas
mov
rclb
shrl
mov
cltd
fnstsw
sbb
int3
test
ret
test
or
mov
popa
in
push
fdivr
push
inc
rcrb
mov
jge
inc
out
inc
adc
aam
mov
stos
js,pt
and
and
cmc
add
xchg
iret
lret
xor
dec
fwait
pop
icebp
data16
lret
shrl
clc
ret
movsl
pop
push
lods
fidivrs
push
xchg
adc
lahf
lahf
ret
data16
sbb
fisttpll
push
lcall
push
js
cmp
inc
mov
jns
add
dec
mov
imul
clc
fistpll
in
dec
sub
add
add
add
xor
aam
into
movl
push
test
test
adc
or
push
clc
adc
aas
sbb
lret
nop
pop
sar
sahf
leave
iret
and
jl
inc
rcrl
data16
sar
test
sbb
xchg
pop
orb
call
sub
adc
sbb
int3
fwait
lcall
daa
cmpl
xor
push
adc
push
sub
rolb
mov
inc
mov
cmpsb
sahf
pop
pop
xor
addb
or
pushf
push
fstp
mov
push
movsb
setno
push
loopne
and
pop
bound
xlat
or
stos
xor
mov
sub
push
sbb
mov
inc
stos
subl
aas
xor
mov
sbb
pop
xchg
stos
enter
push
xchg
test
fstl
movsl
ljmp
push
push
loope
in
mov
add
and
push
sti
cmpsl
push
mov
or
add
pop
add
add
insb
movsl
sub
jmp
add
popf
or
out
inc
popa
stc
inc
and
pop
sar
adc
in
outsb
aad
cs
std
xchg
push
xchg
jg
inc
pop
iret
aas
inc
imul
arpl
nop
add
lea
add
and
pop
adc
jp
mov
jne
dec
rolb
daa
mov
not
ds
and
mov
stc
jbe
adc
add
pop
mov
xchg
mov
push
jecxz
adc
loopne
fsubr
xchg
imul
aas
inc
iret
inc
push
sbb
popa
and
xlat
lds
push
cmpsb
cmp
push
or
lahf
push
aas
mov
lods
dec
xor
inc
arpl
lret
ret
push
push
fnstsw
fadds
xor
inc
inc
sbb
into
sub
imul
addl
insl
jecxz
lea
fisttpll
xor
jle
fnsave
mov
xchg
pop
or
add
mov
std
mov
ljmp
jle
pop
sub
add
add
add
fiadds
xor
stos
loope
jae
mov
mov
mov
dec
xchg
mov
push
jbe
mov
push
push
dec
sub
pop
ljmp
sbb
push
loopne
pop
push
xor
mov
rol
in
xlat
and
jge
rol
lods
outsb
adc
call
push
sbb
mov
sbb
mov
jge
fnstenv
jbe
xchg
or
outsb
mov
jnp
or
or
fwait
xor
ror
xor
push
cmp
add
adc
fidivrs
andl
in
into
daa
adc
rol
jmp
sbb
jmp
add
movsb
dec
mov
push
int
fisubrl
dec
fdivr
out
mov
fcoms
xor
xor
pop
push
stos
fists
mov
mov
jl
mov
push
pop
cmpsb
xor
inc
cmp
sub
and
add
and
jecxz
push
stc
add
repnz
add
pop
add
add
jmp
sub
sbb
insl
int
fsts
bound
mov
add
popl
enter
rcll
test
outsb
dec
pushf
mov
and
lods
mov
cmp
out
push
sub
or
dec
jge
mov
push
fstpt
ret
pop
and
rol
outsb
dec
jbe
mov
mov
pusha
mov
xlat
mov
enter
add
aas
lock
xchg
dec
dec
daa
mov
jl
pushw
pop
fidivs
mov
push
sub
and
call
std
or
jmp
xlat
jns
or
mov
call
shlb
cmp
mov
fcmovbe
adc
mov
cmpsl
idiv
dec
scas
dec
push
push
ja
rorb
fldenv
mov
fmull
loop
movsb
mov
movsl
mov
loopne
nop
cmp
xchg
or
in
int
cmp
fiaddl
ret
ficomps
cmp
flds
jno
sub
add
add
add
fisubl
js
std
and
or
ds
stc
sbb
gs
or
and
inc
push
cltd
loopne
and
ja
jns
sbb
push
push
mov
ret
xchg
in
scas
ds
jecxz
jo
add
pop
setp
sbb
iret
imul
ret
mov
out
sbb
in
mov
ds
mov
xor
xchg
push
pop
es
je
es
xchg
sarl
daa
xchg
mov
test
andl
pop
hlt
data16
mov
and
insl
movsl
lcall
mov
push
adc
pop
adc
push
xor
mov
mov
mov
jle
mov
add
in
push
outsb
jp
nop
push
cmp
pop
das
int3
popf
enter
mov
xor
aaa
cmp
shrl
arpl
ja
js,pn
lods
ljmp
add
add
aas
push
dec
xchg
movsl
lea
push
mov
add
icebp
int
ds
mov
pop
scas
jp
or
dec
shl
jmp
test
cmpsl
fcoml
cld
dec
test
push
gs
mov
fsubl
std
or
aas
cmp
mov
jbe
lret
xor
mov
mov
dec
in
movntq
or
add
scas
pop
jle
lds
icebp
out
inc
cmpsl
jae
push
clc
mov
pop
lea
sbb
cmp
inc
pop
xor
cmp
test
movsb
or
sbb
in
add
inc
dec
fldenv
or
push
adc
push
dec
push
insb
pop
jnp
dec
mov
fidivrs
sbbb
mov
stos
jecxz
repnz
or
mov
pop
clc
mov
pop
xchg
outsl
jge
xchg
xlat
idivl
lcall
sti
push
or
mov
sahf
xchg
arpl
vmptrld
nop
push
adc
lock
mov
sub
test
js
add
pop
add
add
inc
and
shll
push
push
mov
shrl
xor
xchg
enter
test
lahf
and
sbb
sbb
ljmp
cmp
or
sahf
fisttpl
int3
ret
in
jg
xor
push
jnp
pushf
lock
sbb
cli
inc
or
xor
sbb
inc
jg
cmpsb
and
jmp
lock
pop
decl
imulb
xor
jnp
cltd
or
inc
andb
imul
ss
cld
test
mov
or
std
pop
dec
inc
push
pop
mov
and
push
je
call
test
mov
mov
jno
push
jle
mov
dec
add
in
jecxz
push
dec
push
mov
ret
dec
test
cmp
adcb
popf
in
outsb
mov
xor
inc
xchg
sub
jle
mov
pop
or
or
sub
sti
pop
jge
divb
popf
adc
pop
add
add
mov
test
arpl
lea
out
xor
add
mov
mov
fistps
test
jb
jl
add
mov
jle
xchg
xlat
jne
sub
and
or
xor
push
mov
mov
cli
pop
sti
shll
popf
lahf
pusha
jl
dec
inc
jl
frndint
sub
or
pop
int3
jb
imul
sqrtps
mulb
pop
popf
sub
jle
js
mov
pop
push
hlt
test
pop
popa
and
enter
or
ljmp
frndint
sbb
mov
ja
fcompl
sbbb
imul
fcomp
pop
pop
lret
and
push
jg
out
out
scas
lods
ds
xchg
jge
inc
inc
icebp
push
sub
sti
cmp
push
push
dec
and
and
fisubl
out
testl
test
push
mov
fwait
jb
sahf
pop
hlt
push
roll
outsb
inc
cmp
and
test
add
fsub
std
in
popf
dec
int
hlt
cwtl
or
xchg
add
pop
add
add
sbb
aas
mov
ljmp
xlat
jne
and
sub
scas
or
pop
pushf
and
xor
and
xchg
push
and
test
fldcw
add
dec
inc
sub
int3
iret
movsb
pop
adc
popf
fwait
sbb
insl
push
shll
jmp
clc
dec
mov
push
pop
mov
push
xchg
into
and
pop
jle
cmp
enter
fsubr
add
jg
inc
jb
add
mov
cmp
repnz
mov
cmp
dec
add
add
mov
push
jae
shll
jns
in
fcmovbe
ds
repnz
ret
icebp
cli
bnd
fcomp
inc
push
push
in
adc
xchg
aad
outsl
mov
xchg
sub
sti
xchg
cmp
mov
int3
and
scas
jle
leave
or
jp
jmp
fdivp
push
push
int
push
mov
icebp
adc
add
pop
jp
jnp
sti
xchg
jle
imul
lea
add
pop
add
add
mov
push
test
jno
stc
xchg
incb
sbb
cmp
jbe
push
daa
jb
mov
sub
cmp
negl
fwait
lahf
sbb
and
jl
out
out
sub
dec
push
jbe
push
mov
into
cmpsb
xchg
bound
data16
mov
scas
in
out
test
jns
ret
test
insl
push
inc
pop
outsb
mov
in
fdivs
in
test
push
pop
pop
push
mov
mov
or
jp
mov
out
or
clc
cmp
repnz
into
cmp
imul
cli
int3
cwtl
or
je
imul
xchg
repnz
inc
mov
push
fldenv
daa
popa
push
outsb
pop
xchg
sbb
movsl
sbb
push
in
loop
push
daa
inc
jnp
popa
mov
arpl
jecxz
cmp
iret
imul
cmp
cmpl
dec
add
add
lods
stos
mov
mov
push
sti
das
ret
lods
daa
push
xor
add
add
add
out
push
movsl
and
pop
ds
xchg
cwtl
mov
push
popf
ret
arpl
out
aas
adc
icebp
roll
aad
rcl
test
push
enter
jo
mov
lahf
or
adc
mov
ss
mov
adc
xorb
imul
outsl
adc
movsb
imul
xchg
test
in
das
xor
sbb
add
cmp
or
xchg
pop
das
sub
lea
jecxz
cmp
mov
addb
push
jae
fistpl
push
ss
fmull
sbb
mov
std
int3
fnsave
xorb
ss
outsl
repz
lahf
jmp
loop
adc
mov
push
mov
movl
mov
push
cmp
popa
inc
add
in
xchg
imul
mov
push
ret
cmp
sti
aad
loopne
test
add
add
add
jmp
mov
and
packssdw
or
fstl
xor
xchg
cmp
xchg
and
sub
roll
fst
inc
arpl
popa
pushf
lea
les
xor
pop
dec
mov
imull
fisttpl
sti
into
pop
mov
popa
in
fadd
cmp
dec
fisubs
cmpsb
jae
jmp
sbb
test
rolb
scas
insb
fwait
push
fwait
test
pop
mov
sub
add
jo
mov
mov
ds
sbb
addr16
idiv
mov
pop
mov
insb
cmp
nop
push
or
roll
xchg
dec
test
cmp
call
adc
xchg
push
ljmp
mov
sbbb
popa
cmpxchg
or
mov
and
mov
sub
or
or
add
cmp
jge
stos
sbb
out
in
xor
add
add
add
mov
jp
sub
lcall
dec
das
pushf
imul
lods
sarb
sti
jle
inc
mov
pop
popa
fisttpll
aam
sub
jg
xchg
into
mov
pushf
mov
mov
sbb
loopne
jb
aam
jmp
and
or
push
xchg
dec
push
adc
aad
sbb
mul
pop
push
cmp
lods
cli
sub
sti
and
mov
movsl
cltd
or
packssdw
cmp
jne
mov
shrb
mov
lea
push
add
rorb
or
or
icebp
xchg
or
adc
std
sbb
jnp
es
mov
jo
and
stos
pop
daa
xlat
roll
das
inc
mov
mov
push
lods
repz
push
lods
mov
xor
jne
sub
mov
les
jns
push
repz
and
jp
push
sub
addl
add
add
rclb
fwait
aad
setbe
test
add
add
in
in
cmp
cld
shl
sub
fistps
pop
hlt
sub
mov
cli
sub
popf
mov
cmpsb
xchg
jl
rolb
xor
int3
stos
xlat
aaa
fdivs
xchg
or
push
mov
xor
xchg
sti
ret
mov
sbb
loope
repz
pusha
xorb
jnp
into
xchg
xchg
jl
jb
ja
pop
pop
and
test
push
xabort
lea
test
xchg
pop
mov
arpl
xchg
loop
loopne
mov
into
inc
inc
sti
lret
lock
adc
sarb
shrb
sub
inc
loopne
sbb
and
nop
pushf
movsl
popf
jg
jbe
clc
pushw
mov
shll
out
dec
mov
loop
sbb
push
cmpsl
jge
and
adc
es
xor
in
push
xchg
fs
fistl
lds
rcrb
dec
jle
mov
std
into
sbb
shl
inc
xchg
sub
add
jbe
idivl
mov
mov
mov
add
pop
add
add
inc
xlat
in
lock
movsb
ds
es
sbb
sahf
idivb
adc
xchg
js
leave
orl
push
mov
jmp
ret
stos
xor
push
mov
push
in
push
mov
jmp
lods
cmp
xor
je
test
enter
out
cmpsl
lock
jg
mov
fadds
lods
push
outsb
out
les
adc
jecxz
aad
int
and
jne
out
push
popf
iret
xchg
sbb
inc
push
add
std
fcompl
dec
out
lcall
xchg
addr16
pop
xorb
lods
sub
mov
repz
pop
lods
gs
outsl
add
imull
out
cmpsb
jmp
fdivp
jae
cltd
jo
je
and
sbbl
fnstenv
stc
adc
out
mov
je
rcll
jne
out
adc
call
add
add
outsb
sub
stos
fs
push
pop
or
rep
jnp
mov
add
pop
add
add
lret
cmp
jnp
icebp
pop
fcmovne
nop
sbb
daa
lock
or
addr16
scas
add
loope
or
pop
cmp
in
dec
sbb
jg
push
test
aaa
aad
sbb
movl
popf
jecxz
data16
repnz
adc
js
and
repnz
imul
sub
or
scas
call
or
ret
call
lods
push
je
movsb
icebp
pop
cmp
rorl
movsb
pop
rcrb
imul
lret
pusha
loopne
mov
cld
dec
mov
add
xchg
fsubl
pop
lahf
fstps
stos
call
pop
out
ret
add
xlat
adc
clc
add
mov
inc
repz
push
jmp
jecxz
hlt
pop
enter
push
pusha
hlt
lret
mov
mov
test
push
xlat
sbb
les
out
add
les
scas
fistpll
inc
ljmp
add
pop
add
add
adc
loopne
loope
mov
mov
pop
stos
dec
test
cmp
xchg
push
ret
aaa
jne
cmp
mov
fldenv
inc
or
and
js
shrb
mov
jp
sub
push
shlb
aas
push
addb
cli
dec
movsb
or
ficompl
push
mulb
leave
in
test
test
je
or
push
lret
rcrb
insl
xchg
sbb
sar
cwtl
xor
xchg
fnstsw
rorl
decb
adc
int
push
jne
mov
inc
int
cmc
mov
push
jmp
adc
je
out
repnz
mov
sahf
adcb
jp
jns
div
xor
mov
or
pop
push
sbb
out
mov
cltd
sarb
insl
inc
push
jns
fndisi(8087
fcoms
scas
or
loopne
push
pop
movsb
cmp
fcmovne
mov
test
add
cmp
out
lahf
push
pop
pop
cmpsl
sub
pop
add
add
fdivl
dec
incl
andl
pop
xor
push
dec
scas
inc
ficoms
mov
sti
je
or
faddp
test
push
cmp
push
fcomps
xor
xlat
mov
jno
sub
in
fwait
mov
test
push
in
pushf
or
adc
push
pop
or
pop
inc
loope
xchg
push
and
mov
pop
sbb
iret
in
jg
into
mov
pop
cmpsl
push
cmpsb
inc
push
stc
mov
mov
jne
inc
adcl
xchg
jge
sbb
mov
sub
cmpsb
les
mov
jae
add
xchg
xchg
mov
sub
rcr
sahf
repnz
and
ss
call
dec
pop
inc
hlt
test
sbb
sahf
ds
bound
lret
sub
inc
ja
es
xchg
repnz
inc
scas
pusha
ljmp
clc
iret
push
daa
add
adc
dec
ja
aas
mov
mov
add
add
add
icebp
push
repnz
adc
pop
sub
mov
adc
ret
in
and
dec
jmp
adc
pop
iret
jmp
mov
mov
fsubrl
cmpsb
push
fdivs
in
scas
or
push
lcall
and
xchg
push
sarb
push
cmp
ret
mov
push
stc
and
fistpll
add
mov
loop
rclb
sbb
inc
jge
cmpsl
jmp
out
and
mov
sbb
out
cmc
rcr
movb
inc
ret
xor
xor
push
sahf
xor
roll
sbb
push
inc
ret
ret
out
jecxz
dec
xor
xchg
add
mov
add
addb
sarl
dec
ljmp
xchg
adc
iret
ficomps
fs
push
or
xchg
inc
cmp
cmp
mov
inc
mov
loope
dec
lods
add
repz
cmp
lods
repz
inc
aad
sarl
add
pop
add
add
push
xchg
lods
movsl
xor
pop
roll
in
mov
xchg
lds
xchg
stos
std
in
subb
lret
or
pop
hlt
mov
jnp
sub
cli
mov
mov
repz
js
mov
aas
mov
dec
push
cmpsb
push
adc
fwait
mov
mov
mov
mov
cs
test
in
inc
in
mov
fs
push
inc
cmp
jno
mov
mov
sti
mov
das
lds
mov
mov
lahf
or
mov
ds
mov
stos
xor
xor
cmpsl
push
cmpsb
loopne
mov
push
bound
or
xchg
jne
leave
jbe
pop
mov
dec
mov
loopne
lods
aad
stos
notb
je
into
jo
flds
outsb
or
push
pop
ss
xchg
inc
push
adc
aam
loop
xchg
fyl2xp1
int3
aaa
cmp
jle
mov
pop
add
daa
push
cld
push
std
jmp
pop
adc
mov
fidivrl
add
add
add
enter
test
push
mov
iret
clc
aam
cmp
sbb
mov
stos
andb
cs
cmp
adc
sbb
mov
push
mov
cmp
and
clc
inc
dec
adc
fisubl
nopl
push
loop
and
or
cltd
int3
mov
pop
inc
adc
push
pop
sbb
jp
js
lret
adc
cli
iret
pop
rorl
jp
and
das
sbb
lea
sbbb
addr16
ds
pop
int
mov
stc
add
inc
out
lret
pop
dec
adc
das
sahf
ljmp
enter
dec
add
nop
out
mov
push
cmp
lds
add
mov
pushf
cmpsl
cli
aad
add
bound
inc
out
or
cmp
and
leave
fimuls
sub
lock
add
add
add
sbb
dec
push
out
jge
lods
dec
pop
dec
loope
add
pop
add
add
ret
aaa
and
pop
cmp
adc
pop
jno
cld
call
mov
push
and
jl
fsub
fsubl
pushf
frstor
mov
sub
add
mov
inc
into
das
add
rclb
clc
mov
fbld
mov
mov
jmp
sub
xor
hlt
aam
jbe
sbb
imul
fstpl
add
and
xchg
scas
sbb
ret
pop
mov
rcrb
dec
ja
xchg
leave
pop
xchg
xchg
outsb
xor
cmpsb
imul
jle
sub
mov
ljmp
bound
sbb
mov
je
xchg
in
or
xchg
fsubrp
dec
cmp
inc
add
subl
insb
sbb
mov
ret
push
out
sub
repz
les
or
mov
test
jne
cmp
lods
out
shlb
add
idivl
mov
jge
test
pop
add
add
loop
rorl
lea
jle
jnp
mov
pop
int
loopne
cmp
pop
sbbl
mov
ret
lea
push
fadd
lret
adc
lret
jb
adcl
or
jnp
mov
dec
cmp
sub
hlt
addb
ret
pusha
sti
icebp
fs
pop
jecxz
pushf
ret
dec
dec
negb
xchg
in
fstpl
ss
mov
popf
out
push
dec
outsb
or
repnz
cmpsb
inc
xchg
pop
int3
lock
popf
jo
call
cltd
clc
fsubrp
cltd
push
fcomp
stos
repnz
mov
lcall
xchg
mov
inc
xor
adc
jmp
xor
cmc
lea
push
sub
pop
xor
data16
cs
cmp
repz
cmp
adc
pop
lret
arpl
mov
pop
dec
sub
lcall
das
arpl
cmp
iret
daa
popf
pop
add
jg
xchg
cmp
cwtl
mov
add
add
add
lods
movsb
or
and
or
dec
xor
mov
adc
pop
outsb
jns
dec
xchg
xor
pop
adc
jp
jp
mov
jge
inc
mov
int3
in
lods
in
fsubr
imul
push
pusha
pop
xor
cmp
jecxz
test
cmp
imul
add
stos
add
imul
push
cmp
inc
sbb
ret
fisubl
mov
fisubrl
xlat
out
ds
ret
mov
rdpmc
cmp
stos
int
into
jne
push
and
sub
jno
lret
sub
imul
mov
mov
push
sti
ljmp
pop
jle
jb
push
dec
and
or
mov
and
loop
jmp
mov
ficoms
cmp
push
dec
mov
repz
clc
mov
lcall
xchg
out
pop
aaa
cmp
dec
out
xlat
movsl
movsb
sarw
dec
repnz
bnd
and
dec
lret
jmp
imul
push
cmp
dec
inc
add
pop
add
add
lods
xor
xchg
aam
repnz
bound
test
aas
stos
mull
lahf
mov
pop
mov
mov
add
xchg
gs
push
shrl
fstp
daa
pop
mov
call
dec
xlat
out
mov
sub
inc
imul
insb
or
push
mov
loopne
pop
mov
mov
enter
push
push
push
or
cmp
ja
lods
sbb
sub
mov
test
lcall
adc
sbb
insl
outsl
xchg
xor
nop
stos
cld
pop
cmc
and
push
test
add
aam
add
add
mov
nop
inc
add
lret
jo
pop
loope
ret
inc
xor
mov
sub
idivl
xor
inc
std
pop
mov
add
popf
jmp
jae
data16
mov
ljmp
add
add
cwtl
loope
std
jge
cwtl
xchg
fmul
mov
std
inc
add
pop
add
add
stos
push
sti
lods
fimuls
gs
mov
adc
or
sti
and
sub
and
cld
mov
push
pop
dec
icebp
sub
push
mov
insb
fcmovnu
mov
test
fbstp
ret
mov
push
push
repnz
lds
xlat
xchg
int
shr
das
scas
movsl
xchg
lds
movsl
addl
push
pop
jg
adc
fwait
scas
outsl
daa
mov
add
or
in
sub
adc
mov
imulb
xchg
or
pop
or
popa
dec
dec
int
repz
inc
mov
pop
lea
xor
push
nop
test
mov
dec
repz
dec
sbb
inc
jp
pop
enter
insl
lahf
stos
dec
lahf
in
subl
lods
adc
cli
xor
into
jle
insb
jecxz
or
push
or
mov
add
and
loopne
add
ljmp
sahf
push
fmulp
sahf
shl
imul
sub
jns
imul
inc
es
pop
add
add
outsb
jg
daa
aad
into
gs
orb
mov
mov
push
jle
insb
rcll
shll
push
sub
inc
div
jns
cwtl
cmpb
mov
cmc
sub
loopne
out
ja
data16
sbb
outsl
sbb
aaa
lret
xor
sub
push
xor
aas
insl
les
mov
pusha
dec
bound
repz
fcoms
xor
mov
pop
jl
imul
mov
xor
jo
arpl
out
inc
sar
cltd
mov
push
sbb
cmp
mov
xchg
out
ret
fwait
dec
cmp
adc
adc
and
dec
fldenv
cld
sbb
ret
rcrl
hlt
jmp
and
sbb
out
pop
orb
aam
clc
xor
nop
pop
sub
adc
dec
sti
inc
lcall
lcall
cmp
hlt
jne
arpl
pop
fstpl
add
ret
jg
jmp
repnz
jns
movsl
mov
pop
add
add
push
incl
push
adc
imul
popa
out
push
cs
outsb
aad
or
xor
jb
pusha
or
jmp
hlt
out
lea
sub
and
inc
mov
fcmovnu
sbb
pushf
xchg
je
cld
popf
adc
sbb
popf
les
and
into
push
clc
mov
mov
pop
jl
jecxz
inc
or
scas
push
cs
repnz
add
aaa
pop
leave
iret
addr16
cmp
lods
aas
dec
jg
sbb
loop
outsb
xchg
insb
xor
lods
loope
sbb
jo
aad
mov
pop
jnp
pop
cli
xchg
nop
sbb
jb
inc
gs
mov
es
aas
jp
cmp
xchg
mov
inc
adc
cmc
out
inc
inc
xchg
outsl
cltd
cwtl
shll
test
shl
cli
jne
stc
cmpsl
in
dec
loope
test
arpl
ret
lods
cmpsl
push
loope
cli
mov
add
adc
mov
and
fstps
adcl
add
add
sahf
ret
movaps
jmp
data16
sub
ret
les
in
in
mov
push
cmpsl
or
add
push
mov
add
jle
push
sbbl
lods
std
xor
add
xlat
jle
loope
sbb
int3
icebp
pushf
mov
mov
mov
and
xor
jge
je
cli
cmp
lods
mov
mov
faddl
and
std
jle
cmp
sub
pop
add
jo
aad
xchg
xor
lret
out
test
jb
or
mov
jb
sub
pop
dec
cmp
fstpt
dec
and
mov
or
pushf
scas
pop
inc
mov
lds
frstor
shl
insl
daa
mov
jmp
es
test
add
ret
ror
xchg
push
scas
es
jbe
inc
sub
add
hlt
gs
adc
ficoms
mov
inc
add
pop
add
add
inc
mov
mov
jne
jmp
scas
mov
arpl
mov
test
loop
inc
call
sbb
nop
negb
jns
sub
inc
inc
dec
adc
imul
push
jnp
outsl
lret
scas
xor
subb
mov
mov
mov
cltd
fimuls
xchg
sub
push
dec
add
cld
cmp
in
mulb
push
insl
or
pop
add
jne
mov
pop
bound
cmp
lods
cmp
mov
mov
andb
dec
sub
jl
push
inc
out
dec
cmp
int
mov
jae
pop
stc
cmp
xchg
mov
dec
xchg
orb
in
jg
add
lods
jg
add
mov
dec
jae
daa
divb
jecxz
cwtl
inc
adc
mov
xor
pop
das
repnz
add
ror
push
mov
inc
daa
pop
daa
jge
arpl
mov
out
xchg
adc
in
imul
sub
add
aas
gs
mov
popl
add
add
add
dec
fs
fwait
jne
mov
sbb
sub
jbe
xor
mov
push
test
je
xchg
ret
add
sbb
mov
sub
mov
bound
xor
ret
xor
insb
inc
push
fdivrl
clc
xor
pop
repz
xchg
sti
mov
add
mov
and
leave
lahf
mov
lret
adc
jns
adc
dec
xor
fsubr
lock
shrb
test
mov
inc
ficomps
pop
imul
xor
mov
mov
pusha
add
lods
cmp
lods
fwait
and
jmp
out
inc
nop
xchg
push
adc
xchg
push
fs
int
mov
jmp
adcl
fptan
pop
mov
out
adc
and
and
fwait
cmpsb
adc
adc
mov
mov
fcomps
fldl
mov
out
fnstsw
mov
dec
daa
dec
add
pop
add
add
xor
mov
ret
xchg
jae
or
arpl
xor
sahf
pop
stos
and
and
lds
inc
or
cmp
ja
mov
subb
inc
test
stc
popa
mov
jne
fwait
mov
loopne
call
push
cmp
inc
add
jge
test
loope
outsl
adc
pop
or
mov
and
and
out
pop
pop
jnp
push
mov
lds
sti
subb
sbb
or
pop
cmpsb
mov
pushf
mov
mov
call
fcmovu
insb
outsl
sbb
push
sub
fsts
lcall
xchg
sahf
and
popa
mov
push
xor
xchg
mov
in
xchg
cmp
sti
xor
sub
mov
mov
pop
inc
or
mov
push
inc
lock
clc
inc
int3
dec
cmp
movsb
in
and
roll
mov
add
mov
sub
cs
add
pop
add
add
inc
xorl
cmp
imul
mov
inc
xchg
fmull
jle
mov
xchg
xor
das
xchg
clc
adc
sbbb
cmp
adc
lcall
in
lret
out
jmp
jmp
lds
xchg
mov
sub
rol
sub
xor
cmpsl
push
sub
jnp
mov
sbbl
add
daa
push
add
xchg
jp
leave
jmp
in
sbb
in
popf
jnp
mov
faddl
push
pop
pop
fistps
adc
push
ret
nop
into
and
sub
sbb
push
in
iret
test
subb
fistl
mov
aas
ja
inc
jecxz
cmp
fisubrs
sub
je
lret
push
insl
cmp
cmpsl
idiv
stc
clc
test
push
adc
mov
aas
sbb
jb
rcr
dec
je
and
mov
push
insl
or
add
jmp
out
aas
push
xor
dec
out
xor
add
add
cld
xchg
jecxz
add
scas
add
add
xor
or
fdivs
btc
call
dec
jns
popa
jge
jmp
mul
lahf
xor
es
mov
push
adc
imul
out
push
test
adc
sub
loope
jno
lods
shrl
call
rcrl
mov
sbb
push
rcrl
das
test
inc
ret
mov
push
mov
cwtl
and
insl
push
leave
cmpl
cmp
ss
push
sbb
imul
stc
mov
jnp
aad
sbb
cmp
inc
xchg
mov
jmp
cmc
fnstenv
cmpsb
lahf
mov
inc
test
cs
adc
pushl
mov
pop
rcrl
pushl
fstpl
sub
push
add
std
call
jo
cmp
imul
out
mov
xchg
lods
push
inc
mov
add
pop
add
add
cmp
clc
repz
xchg
dec
dec
lahf
jl
push
into
mov
orl
cs
leave
sarb
rcr
sub
rolb
out
loop
fmuls
inc
cmpl
push
sub
cld
fimull
pop
bound
sub
lods
jns
mov
xchg
arpl
or
outsl
loop
sub
cmp
pushf
push
push
sbb
repz
add
cli
xchg
fisttpl
popf
imul
test
push
mov
sbb
xchg
cld
dec
int
jns
daa
cmp
adc
xor
push
add
lcall
das
insl
add
out
fwait
fwait
mov
into
daa
inc
cmc
sub
outsb
adc
aam
pushf
shr
lret
add
and
pop
jnp
lret
push
xchg
dec
mov
stos
cmpsb
inc
data16
xchg
enter
mov
fs
add
js
add
dec
stc
mov
pop
sub
dec
jbe
iret
inc
dec
add
pop
add
add
or
xlat
push
shl
imul
adc
mov
xchg
andl
enter
fldcw
jnp
pop
sbb
cmpsb
je
repnz
outsb
xchg
mov
mov
cmpsb
inc
dec
insl
ss
ljmp
pop
daa
adc
ficomps
mov
stos
pop
jge
pushf
out
les
stos
mov
enter
dec
in
enter
jge
dec
xor
pop
mov
inc
int3
lret
ss
leave
push
iret
loop
test
outsl
pushf
mov
std
pop
sbb
repnz
rclb
sbb
pop
cmc
and
lea
mov
leave
push
insl
push
mov
pop
je
sbb
cs
mov
and
xchg
push
lret
xlat
std
jae
roll
lods
sub
outsb
ljmp
incl
in
or
mov
repz
loopne
test
arpl
push
mov
or
add
jg
cld
dec
loope
sbb
out
outsl
dec
dec
add
pop
add
add
ret
sub
inc
sub
addl
or
pop
and
push
push
push
imul
movsb
xor
fsub
and
or
mov
ja
in
cmp
adc
lret
mov
insl
pop
push
sub
cmp
in
inc
cmpsb
cwtl
dec
clc
fisubrl
cmp
xchg
scas
sarb
iret
movsl
pop
andb
xor
pop
push
push
dec
push
xchg
lcall
xchg
xor
cmp
cwtl
push
xchg
fdivl
mov
ret
aad
pop
lret
addl
dec
sbb
jp
nop
nop
imul
daa
stos
int
add
in
insl
test
mov
pop
fwait
not
sbb
imul
mov
adc
xcrypt-ofb
cmpsl
sub
mov
sbb
in
adc
ficoml
insl
mov
flds
add
add
xchg
mov
mov
pusha
cmpl
add
add
sti
test
sahf
clc
fwait
inc
mov
jp
jne
xor
sbb
mov
test
jmp
xchg
sbb
push
mov
add
xlat
adc
lods
and
inc
jecxz
xor
mov
xchg
sub
ja
icebp
pop
ret
enter
jl
or
pop
cmc
shll
cltd
movsl
lret
dec
mov
notl
scas
popa
int3
dec
cmpsl
adc
stc
xchg
jg
sub
aas
xlat
dec
incl
into
fs
es
dec
incl
fldl2e
push
icebp
xor
or
or
aam
inc
inc
or
push
push
and
js
cld
or
gs
xchg
pop
cmpsl
iret
popa
cmc
movsl
mov
lods
pop
push
loopne
rcl
cli
cwtl
mov
or
test
mov
xchg
pop
jno
cmpsl
aam
scas
mov
mov
push
xor
mov
cmp
outsl
into
in
iret
pop
lahf
sahf
lahf
jns
or
dec
jmp
add
or
mov
fwait
mov
push
mov
add
pop
add
add
cmp
cwtl
cmpsl
icebp
in
inc
shll
and
mov
cwtl
jp
in
cmp
ss
lahf
inc
andl
pop
sub
lods
sub
pop
add
mov
or
or
clc
sarb
les
lahf
and
out
cmp
fistpll
data16
jp
sti
aad
xor
or
addb
jl
sarb
repz
jmp
mov
shl
out
dec
lds
cmove
scas
lret
cmp
pop
and
push
iret
cmp
push
cmpsb
xchg
xor
sbb
xchg
out
push
xor
jo
in
mov
lret
addr16
lret
dec
inc
aaa
test
movsl
cmp
push
or
lds
test
or
rol
inc
daa
push
test
lock
and
xlat
dec
gs
out
int3
sbb
out
jp
aam
cli
push
inc
ret
movsb
lods
popf
ljmp
pop
mov
jb
out
fsubrl
mov
out
cmp
cmc
push
adc
mov
xor
add
pop
add
add
xchg
fiaddl
lods
repz
insl
repz
ss
ret
stos
mov
jp
xchg
test
cltd
stc
popf
push
jb
add
sbbl
dec
test
lcall
jae
mov
mov
sbb
ret
iret
ss
and
pop
stc
cmp
ss
call
or
fisttps
inc
fidivl
insb
and
imul
icebp
fcmovbe
lods
enter
clc
and
adc
mov
out
call
in
inc
aaa
repz
inc
jmp
fsub
jmp
sbb
fucomi
in
sbb
lods
xchg
xor
mov
ds
sub
cld
jl
inc
int3
pusha
leave
lods
pop
fdivl
sub
adc
xor
xor
leave
xor
ds
ror
std
push
sahf
scas
jp
mov
lret
int3
pop
out
jecxz
add
orl
mov
or
push
shll
out
je
pop
inc
inc
or
push
add
pop
add
add
icebp
jmp
in
in
push
sub
pop
sub
mov
mov
sbb
adc
inc
insb
sbb
push
loope
aaa
leave
push
mov
sahf
and
orl
mov
imul
dec
lahf
or
mov
stc
inc
in
mov
push
std
sub
or
or
lods
and
mov
test
adc
movsl
add
jnp
adc
hlt
insb
or
xor
inc
sbb
test
push
scas
push
jne
pop
ret
adc
push
mov
mov
sbb
nop
imul
pop
int3
and
sub
cmp
pop
dec
xchg
push
addb
shll
dec
xor
push
testl
jbe
int
inc
lcall
jp
clc
iret
jo
flds
mov
and
pusha
push
sbb
inc
sub
andl
shl
or
test
add
out
lcall
lock
nop
mov
add
pop
add
add
decb
jmp
fsubs
lahf
scas
std
outsb
inc
inc
mov
scas
jmp
addr16
push
push
cwtl
xchg
add
jmp
cmp
cmp
cmp
mov
leave
xchg
push
lahf
sub
mov
ficoms
andb
adc
or
test
jge
adc
ss
out
rcrb
push
insl
jnp
movlps
lea
in
pop
inc
dec
mov
aad
dec
fwait
nop
lock
jo
sbb
and
pop
repz
aas
dec
stos
enter
or
ret
cmp
mov
mov
decl
lock
ret
lcall
mov
gs
and
aam
fadd
aam
cwtl
gs
ficompl
xchg
bound
lock
das
movsl
incb
divl
test
or
scas
sahf
fidivrl
bound
imul
cli
pop
bound
add
add
add
out
icebp
xorb
push
sbbl
or
ret
inc
shll
mov
cltd
sbb
xchg
in
push
add
mov
test
inc
or
push
mov
sub
rcrl
inc
test
mov
call
push
add
aam
cmpb
movsl
push
mov
vpshlw
add
dec
movsb
icebp
stos
pop
andb
inc
stos
and
and
mov
cmpsb
fwait
scas
cmpb
imul
aad
out
push
daa
jb
lcall
cmp
clc
push
stos
dec
outsl
pop
jne
push
jo
test
add
movsl
or
add
xchg
adc
in
nop
in
cmp
mov
repnz
aas
idivl
mov
mov
popf
dec
stos
daa
popf
arpl
jno
ja
cmp
dec
sub
xor
cmpsl
inc
icebp
lcall
sub
or
add
fwait
cmp
xchg
xchg
dec
and
or
add
add
add
push
push
sbb
sbb
arpl
pushf
jge
mov
adc
lods
or
jo
pop
lret
fcmovu
cmc
and
js
push
sub
pop
aas
das
cmp
mov
sbb
pop
mov
pusha
aam
stos
js,pn
cmp
mov
data16
xchg
sub
push
nop
lcall
push
jbe
push
lds
xchg
sbb
cmpsb
popl
pushf
mov
fildll
test
dec
xchg
push
test
lahf
inc
shrl
shlb
repnz
and
aaa
lahf
dec
jo
sub
adc
xchg
push
xorb
outsb
jo
xchg
mulb
subl
jb
outsl
push
out
lods
jmp
cmp
adc
push
xor
out
sbb
inc
call
adc
pop
cmp
pop
sub
or
jnp
insb
aaa
xchg
pop
iret
or
sahf
rorb
mov
xchg
aas
add
add
add
clc
mov
mov
pop
fucomip
pop
shrl
push
add
pop
add
add
icebp
sbb
jnp
xor
xchg
sbb
imul
sub
pop
out
inc
cltd
lds
pusha
cli
mov
xchg
in
into
flds
xor
stos
ss
xchg
xchg
jle
sub
inc
test
xchg
pop
sbb
test
inc
cmp
adc
cld
pop
xchg
xchg
ret
mov
jg
ljmp
ja
xchg
or
out
lret
sarl
jl
andl
shlb
int3
cltd
xchg
push
imul
dec
or
jns
xchg
test
jmp
cmp
out
xor
mov
mov
les
mov
cmp
mov
mov
std
jbe
in
jp
in
inc
sub
adc
adc
test
daa
in
jae
ljmp
inc
mov
scas
xor
push
pop
fs
call
jbe
fnsave
loop
push
inc
shlb
xor
scas
xchg
push
adc
out
mov
fs
insb
mov
add
add
add
sbb
test
clc
fs
jmp
and
cmp
pushf
int3
mov
gs
iret
sub
leave
sahf
jo
shlb
push
outsl
pop
movsb
lahf
mov
decb
xor
pop
mov
xor
pop
inc
or
inc
imulb
push
mov
dec
push
call
mov
pop
div
inc
and
pushf
xchg
cmpsb
addr16
or
xor
test
sub
xlat
jne
insb
outsb
in
pop
dec
pop
nop
mov
loopne
sub
dec
add
ja
das
movsl
mov
movsl
pusha
dec
mov
fistl
in
or
dec
call
gs
sub
jecxz
fdiv
aad
shrb
or
push
push
js
xorb
ret
xchg
adc
movsb
and
and
mov
xor
in
fidivrl
push
outsb
aad
add
jge
or
int
jb
add
jbe
add
add
mov
btc
mov
nop
push
add
pop
add
add
cli
pusha
pop
xor
xchg
lods
cwtl
xor
dec
fimull
push
dec
icebp
cmp
xchg
lret
mov
lret
popl
inc
xor
mov
xchg
pop
outsb
iret
nop
lds
pop
test
out
clc
sahf
test
outsl
jg
mov
mov
sub
ret
inc
fs
mov
jns
ret
mov
leave
inc
lea
add
pop
or
dec
add
adc
in
andl
les
jnp
push
ja
mov
lods
push
xchg
mov
nop
jecxz
div
pop
shlb
mov
cmp
clc
adc
cmovne
ljmp
and
std
dec
fidivrs
lcall
pusha
mov
loope
pop
call
cmp
outsb
and
lock
sub
or
adc
movsl
jns
pusha
adc
daa
lock
fcmovu
mov
mov
popf
pushf
out
fimuls
js
cmpsb
xor
cmpsl
add
mov
sub
pop
pusha
rclb
add
add
add
inc
movsl
add
popf
aas
dec
aad
push
popa
mov
ss
dec
je
cmp
imul
jle
in
push
mov
jmp
cmc
cmp
pop
jp
dec
movsb
outsl
mov
mov
xor
test
addb
movl
push
mov
nop
test
lods
out
popl
hlt
jno
jbe
pop
mov
enter
bound
js
push
and
sub
mov
lods
cmp
push
outsl
xor
mov
mov
ss
ret
stos
ret
ds
jecxz
insl
or
sbb
mov
out
dec
xchg
mov
in
pop
xchg
dec
xchg
repnz
xor
inc
adc
xchg
pop
add
loopne
xor
pop
cld
fdivrs
inc
mul
mov
mov
fsubl
mov
jne
ret
pop
sbb
pop
add
pop
add
add
adc
rolb
dec
mov
mov
lods
cmpsb
mov
fists
mov
sbb
pop
sub
or
push
inc
jge
popf
pop
shl
repz
pop
iret
lahf
clc
mov
push
inc
jp
adc
rclb
sbb
pop
mov
popf
fwait
call
fisubs
sub
jns
mov
jbe
std
shr
sub
mov
pop
inc
adc
xchg
sbb
aad
sahf
xor
xor
ljmp
cld
and
pop
imul
pop
jns
jno
cwtl
push
inc
ja
push
jmp
inc
test
dec
push
push
xor
push
repnz
test
stos
push
cmpsb
adc
pop
push
dec
aad
push
xor
or
mov
or
lds
nop
filds
add
lret
mov
ficoml
jecxz
add
xor
std
test
pop
setbe
add
add
ret
or
leave
addr16
outsl
dec
cmp
add
shrb
mov
cmp
mov
ljmp
cmp
push
cld
mov
rorl
iret
pop
xor
inc
mov
in
cmp
test
mov
cmp
and
int
mov
pop
leave
jl
bound
cmp
push
out
inc
movsb
out
ja
pop
adc
cmp
add
jge
ljmp
daa
test
fsubs
pushf
pop
gs
adc
adc
and
jecxz
loopne
bound
ds
paddsw
jecxz
fimull
or
repnz
mov
pop
pavgb
jb
mov
fdivr
lds
or
loope
mov
out
xchg
jnp
movsl
xlat
jnp
addr16
and
test
leave
adc
rcrl
xor
and
add
mov
pop
stc
les
hlt
lods
pop
add
pop
add
add
leave
aam
pusha
xchg
lods
cmp
cmp
enter
pop
and
add
aad
pop
sarb
stos
arpl
mov
clc
push
stos
stos
scas
gs
mov
add
sub
add
stc
out
cmpsl
fistl
mov
incb
xor
adc
push
stos
push
scas
fcompl
test
mov
repz
movsl
cs
lods
test
mov
fcoml
pushf
cmp
xchg
repz
pop
sub
push
inc
mov
sti
inc
add
das
lahf
sbb
or
and
sti
pop
lret
adc
sbbl
clc
xchg
pop
iret
lea
dec
cmp
xor
ss
repnz
push
outsl
jp
dec
adc
fmull
scas
jae
call
fdivp
xor
inc
out
je
into
sbb
cmp
dec
lea
push
out
into
push
mov
cltd
jmp
mov
add
pop
add
add
push
add
pop
fcomps
call
movsb
xor
xchg
loopne
bound
or
jne
cld
outsl
dec
and
pushw
pop
or
lea
push
out
clc
sub
mov
je
lret
dec
leave
sbb
insb
nop
cmp
ds
adc
sarb
sti
scas
mov
out
push
aas
mov
aad
arpl
test
or
sbb
sbb
pop
addl
cld
mov
sub
shll
outsb
fcoml
adc
and
cmp
lds
scas
pop
popa
in
sub
dec
pushf
bnd
out
push
inc
imul
pop
push
or
bound
jmp
cmovp
cld
push
js
ss
aaa
adc
mov
push
lock
sub
cmc
das
adc
mov
insl
ds
movsb
rorb
fwait
mov
mov
mov
loope
add
xchg
inc
shl
xlat
mov
sub
ds
pop
add
pop
add
add
push
push
ss
out
sbb
pop
push
dec
xchg
dec
mov
mov
movsl
jl
ret
xchg
ret
xchg
inc
lods
cmp
or
push
cmc
test
jae
pop
fdivp
ds
mov
mov
fdivrs
xchg
adc
insb
aas
rcrl
out
xor
cmpsb
rorl
cwtl
fstpt
pushf
dec
and
push
ret
mov
push
jnp
sbb
pop
xlat
mov
adc
push
rolb
push
insl
dec
push
sti
push
into
insl
das
pop
sub
dec
xchg
sbb
clc
js
mov
test
vpshufbitqmb
adc
inc
mov
rcll
in
std
fistps
and
cmp
mov
fisubrs
sbb
add
int3
jns
cmp
sbb
jb
lret
sub
dec
fmull
lcall
aaa
dec
push
cld
cmpb
add
lahf
pop
fcmovb
fcmovnb
lahf
pop
lret
inc
and
mov
pop
add
add
mov
fistl
out
mov
bound
mov
mov
jecxz
xchg
sbb
pusha
add
dec
shrl
jecxz
cmp
sbb
add
test
add
mov
scas
adc
aad
xchg
sbb
xchg
popf
cmp
cmc
imul
stc
mov
sbb
imul
adc
jb
outsb
mov
dec
sbb
jp
and
mov
xchg
shl
movsl
addr16
sbb
ljmp
fistl
popa
adc
cwtl
mov
inc
ret
hlt
xor
rcr
testb
add
lock
push
rclb
ja,pt
pop
enter
inc
lock
out
add
hlt
int3
je
push
test
sbb
js
xchg
sub
fs
out
repz
xor
mov
add
sahf
pop
testl
or
add
add
add
cld
loop
sbb
mov
xchg
jo
pusha
repnz
ljmp
cmpsb
xor
sbb
repz
and
out
enter
mov
or
push
or
adc
inc
data16
movsb
inc
mov
inc
inc
push
inc
cpuid
push
mov
in
fnstsw
mov
in
in
sbb
dec
xchg
dec
sahf
addb
aaa
mov
test
mov
movsb
or
fisubrl
and
jmp
popa
aad
jecxz
push
das
jae
jmp
pop
sub
mov
and
xchg
pop
jnp
add
mov
add
int3
cli
pop
arpl
cmp
pop
std
jae
aad
or
sub
inc
sub
lock
pop
cwtl
jg
mov
and
xor
mov
cwtl
pavgb
out
in
adc
push
and
imul
clc
add
pop
mov
mov
cmp
and
pusha
add
pop
add
add
sbb
lock
cli
mov
push
add
dec
jae
push
loopne
jbe
popf
pop
stc
ficomps
loopne
les
out
mov
pushf
and
xchg
mov
sbb
xchg
cmp
imul
sbb
or
loope
imul
fcoms
sbb
and
cmp
out
je
xor
add
cmp
sub
adc
add
mov
mov
or
xchg
or
int
pop
cld
and
adc
add
mov
xchg
xor
dec
push
xchg
xchg
push
push
stos
inc
pop
into
mov
sarb
lcall
and
jbe
jae
or
lret
add
pop
pop
sbb
mov
mov
popa
es
pslld
fs
mov
lods
js
and
sahf
push
pop
and
mov
add
lret
xor
add
aad
repnz
movsb
jle
stc
test
popa
sahf
aas
in
add
popa
add
pop
add
add
test
mov
pop
test
dec
inc
sub
mov
push
xor
sub
adc
int3
push
icebp
iret
push
mov
lret
jmp
add
aaa
inc
mov
push
mov
push
adc
jecxz
sbb
jmp
fcoml
fnsave
mov
jno
aas
fldenv
popa
test
jnp
stos
test
inc
xchg
mov
std
mov
insb
sbb
ret
fs
ss
inc
int3
adc
inc
jl
cld
cmp
push
cmp
mov
andb
pop
xorb
push
out
out
mov
data16
cmp
sub
xlat
mov
push
xchg
stos
mov
aas
arpl
xchg
mov
jbe
and
pop
jno
bswap
mov
cmp
and
xchg
adc
inc
repnz
out
subl
aad
rsm
mov
cli
adc
push
add
jmp
sub
add
push
out
bound
add
add
add
aad
sbb
lcall
scas
cld
pop
mov
movsl
adc
dec
cmpsb
xor
adc
in
cli
roll
cld
xchg
subb
fwait
call
ja
aas
inc
js
jb
sbb
dec
sub
and
fwait
push
inc
mov
div
cmp
ror
insl
cmp
fwait
les
lret
stos
sbb
mov
in
scas
jmp
insb
fwait
mov
dec
mov
enter
sub
scas
pop
dec
clc
cmp
lahf
lods
jge
in
xor
jl
dec
sbb
cmc
fadds
add
in
jno
div
insl
leave
out
movsl
cwtl
mov
jns
test
lahf
mov
sub
clc
cmp
test
fstsw
mov
push
mov
dec
lods
test
or
rolb
loopne
cmpsb
test
or
stos
fstpt
mov
add
mov
fnstenv
outsl
push
iret
dec
in
add
pop
add
add
inc
jns
imulb
dec
das
movsl
mov
int3
jnp
lcall
rol
mov
repz
jl
dec
aaa
inc
pop
jo
aam
or
mov
mov
sbb
push
dec
push
mov
outsb
data16
pop
and
sub
mov
nop
shrl
pop
adc
fmuls
xor
andl
adc
mov
fwait
adcb
cmpsb
lods
mov
and
movsb
add
addb
das
or
and
mov
push
adc
mov
in
popa
xlat
jb
sbb
add
lret
inc
js
xor
mov
cmpb
repnz
out
xchg
mov
xor
daa
subl
ret
mov
imul
jne
or
adc
aaa
jne
push
xchg
in
mov
add
cld
je
jbe
decl
rcll
add
pop
add
add
jecxz
rorb
mov
inc
addr16
inc
in
sub
or
pop
movsb
pop
lret
jns
adc
mov
fwait
adcb
arpl
inc
xchg
xlat
fisubl
xchg
mov
lcall
mov
sub
inc
or
shrb
add
repz
pop
mov
ja,pt
iret
jp
lods
pusha
lret
in
push
das
jp
cwtl
test
mov
int
movsb
cld
popa
mov
nop
testb
and
rol
add
mov
xchg
xlat
add
sub
or
push
std
icebp
pop
dec
out
xor
ror
insb
loope
push
xor
dec
or
hlt
mov
add
popf
fstpt
xchg
arpl
jb
test
rolb
dec
aaa
rol
call
hlt
add
push
out
imul
xchg
add
add
sub
push
imul
push
cltd
jmp
fcmovnu
sahf
testl
pop
add
add
decl
mov
and
mov
or
dec
das
push
ficoms
loop
sub
pushf
or
dec
mov
and
arpl
rolb
dec
add
lock
push
mov
int3
movsl
pop
mov
mov
mov
mov
outsl
aaa
cmovle
jg
and
and
inc
jmp
and
pop
out
dec
outsb
ficompl
in
inc
imul
gs
adc
ret
adc
mov
int3
sbb
inc
add
sub
mov
lds
bound
pop
lea
loopne
mov
adc
flds
repz
inc
int3
lds
push
dec
xlat
testb
jle
sbb
out
pop
cmp
mov
popf
in
in
push
fsubrs
icebp
loop
cli
lret
std
push
fnstsw
xorl
xchg
int
xlat
imul
add
push
jg
shll
stc
add
pop
add
add
ljmp
xchg
dec
movl
fiaddl
mov
dec
shrl
subb
in
mov
in
dec
jnp
jge
aaa
cmp
sub
push
mov
cmp
bound
aad
aam
aad
movsb
mov
cltd
in
sub
addr16
xor
cmpsl
divb
push
jne
push
imul
push
mov
sub
mov
rcrb
xor
dec
ret
lock
dec
insl
sbb
mov
dec
cmp
adc
test
push
mov
das
sub
roll
cmc
lds
add
xchg
xor
dec
mov
jno
daa
pop
scas
mov
adc
xchg
lret
inc
jno,pt
aaa
daa
test
jl
pushf
out
cwtl
and
int
test
gs
mov
sub
lods
xchg
and
test
outsb
add
mov
fucomip
lock
cmp
mov
push
add
jo
lea
inc
subl
out
jmp
adc
sbb
jecxz
call
xor
sbb
pop
push
int3
lret
pushf
rcrl
jbe
dec
or
outsl
or
inc
cld
inc
loop
add
mov
pop
xchg
stos
sub
fsubrs
push
mov
loop
mov
inc
sbb
pop
mov
js
xor
push
inc
sbb
adc
movsl
sbb
inc
sbb
imul
xchg
jno
js,pt
cmp
jae
sbb
push
sbb
in
and
push
in
shl
rolb
and
and
sbb
mov
add
cs
jbe
push
int
xlat
out
sbb
insb
inc
iret
iret
jne
insl
sub
shll
cld
pop
xor
jge
in
xor
pushf
jp
mov
test
fnstenv
add
dec
out
iret
jmp
das
mov
jbe
pop
imul
add
inc
ror
mov
mov
mov
ds
sub
mov
popa
sbb
jle
dec
and
cltd
dec
pop
lret
call
mov
jge
mov
outsl
addr16
xchg
arpl
push
xchg
int3
add
sub
movsl
dec
into
scas
or
add
jecxz
adc
lea
push
ja
repz
add
push
imul
dec
pop
xor
test
jne
sub
and
and
mov
addr16
push
jbe
or
pop
push
jl
cwtl
mov
inc
jns
sbb
mov
push
sub
nop
loopne
pop
aas
xor
scas
or
dec
pop
mov
sub
sbb
ja
adc
mov
push
mov
xchg
sbb
lea
out
mov
jecxz
or
mov
add
je
repz
icebp
aaa
lds
xor
ficoml
sbb
lds
push
lock
or
add
std
cmpsb
pop
or
lret
sahf
adc
pop
add
add
jbe
jne
jno
xor
lea
or
adc
xchg
adcl
mov
mov
jne
fldt
adc
sub
pop
or
and
out
lea
test
push
or
stc
inc
lds
mov
jae
andl
clc
and
or
lods
imul
jnp
lods
mov
pop
das
sub
das
in
insl
stc
mov
cmpsb
test
cs
popf
jl
jnp
jge
ficompl
or
cmp
stos
push
mov
roll
mov
mov
fadd
stos
and
loopne
nop
cltd
call
add
xor
xor
lret
in
pusha
insb
mov
je
insb
popf
lcall
js
popa
pop
test
jecxz
into
call
rorb
jns
push
xchg
lods
pop
mov
pop
mov
in
lods
imul
neg
std
fsubrs
adc
popw
pop
add
add
jmp
jecxz
add
adc
shr
pop
cmpsb
mov
cmp
sahf
shl
lret
shll
fldenv
test
push
pusha
mov
or
jne
arpl
out
sbb
out
inc
fcmovu
jae
add
sub
adc
push
fwait
mov
adc
mov
jmp
sub
int3
repnz
or
cli
pop
mov
pop
dec
xchg
adc
loope
into
les
aad
mov
and
testb
dec
fidivrs
es
hlt
add
or
js
xor
scas
jg
pop
xchg
sbbl
mov
sub
out
dec
insb
or
jnp
hlt
push
sbb
mov
jp
mov
ss
bound
incl
test
dec
jae
out
insb
sbb
movsb
adc
dec
in
cmp
cwtl
dec
pop
add
push
add
add
cs
adc
stos
ljmp
add
inc
shlb
mov
int3
cmp
and
jnp
out
dec
mov
inc
mov
and
fidivs
sbb
pop
loope
and
out
pop
dec
pop
ret
inc
shll
sahf
sbb
push
sbb
push
shrb
xchg
jle
dec
mov
jl
popa
addr16
add
pop
cltd
rcrb
pushf
outsb
sbb
out
push
push
rolb
xchg
test
pop
pop
sbb
cli
inc
inc
jge
lcall
leave
rol
push
cmp
mov
out
pop
jne
lods
xchg
and
out
in
pop
jp
into
push
sub
lock
subl
jno
mov
gs
mov
push
mov
lret
xor
jnp
mov
insb
jp
call
rcr
push
jmp
sbb
xchg
ret
sbb
cs
sub
repz
shl
imull
mov
mov
fwait
cli
test
mov
and
add
ja
out
and
outsl
fcoms
insl
add
pop
add
add
ficompl
lods
inc
mov
in
push
sub
fstpl
push
ret
repz
lods
insb
adcl
add
mov
jmp
push
push
xchg
xchg
nop
jbe
or
std
add
dec
cmc
sbb
les
cltd
push
out
rcrb
sub
or
jg
outsl
mov
xlat
and
push
jnp
lods
push
cmc
xor
add
jo
mov
stos
cs
fildll
mov
sub
mov
cmp
jbe
push
in
cmpsl
inc
notb
push
pop
out
sti
adc
push
inc
js
xor
add
add
shl
xchg
rolb
mov
inc
lret
popf
sarl
adc
xchg
js
mov
aaa
test
ret
aad
or
clc
test
rcrl
leave
mov
jmp
lret
pushf
mov
cmpsl
push
dec
add
sub
ja
aad
add
add
adc
pop
add
add
sub
adc
mov
mov
mov
mov
jp
dec
cmpsb
xchg
arpl
xchg
leave
arpl
cmovle
xrelease
and
lds
and
inc
lret
dec
mov
fsubs
out
ret
fdivrs
in
inc
push
adc
stc
leave
jbe
test
mov
orl
and
lods
in
rorl
fmul
inc
adc
outsb
mov
and
in
jg
jae
cltd
and
adcl
jns
sbbl
or
inc
enter
pop
movsl
dec
mull
fwait
push
mov
ja
dec
fwait
inc
cmp
das
inc
mov
pusha
xchg
mov
jecxz
call
mov
inc
addr16
cmp
es
mov
mov
cltd
mov
xchg
xchg
push
mov
jbe
repz
add
or
out
test
cmp
arpl
int
mov
jnp
inc
cmp
andb
xor
add
add
add
fs
or
stc
test
loopne
mov
mov
pop
jne,pt
mov
cmpsb
or
push
inc
xchg
repnz
ja
cmp
jmp
jmp
adc
sub
ret
adc
mov
mov
aad
movsb
mov
add
div
inc
mov
mov
xchg
nop
notb
pop
mov
cs
inc
movsb
pop
fimull
lret
test
stos
cmp
push
jl
and
sbb
mov
lds
xor
jo
xchg
dec
jns
js
fadd
mov
add
inc
jp
inc
mov
mov
adc
push
ror
mov
ljmp
xlat
jmp
inc
mov
or
and
mov
mov
pusha
iret
inc
mov
cmp
daa
and
pop
les
jle
daa
in
xor
jp
es
jnp
sub
jo
xchg
push
mov
cli
xchg
jle
rol
call
cmp
add
add
add
dec
lcall
xor
gs
jnp
pop
out
imul
xorb
repz
pop
sub
jmp
cmp
sti
dec
push
js
push
mov
mov
sub
push
mov
testb
lods
xchg
mov
mov
jb
or
mov
xchg
lock
mov
popf
mov
daa
inc
testl
jnp
add
cmp
sub
movsb
test
jg
mov
roll
mov
movsl
push
movsb
push
mov
loop
jle
sbb
jp
sahf
mov
arpl
daa
adc
outsb
outsb
xchg
div
cmp
lret
pop
adc
stos
cli
fcomip
sbb
cli
xchg
cmpsb
test
mov
rolb
fwait
mov
mov
mov
aad
push
subl
cmp
mov
jae
popa
pop
jns
cli
xchg
jle
pop
dec
add
mov
repnz
push
push
push
xchg
or
inc
aaa
dec
fwait
jnp
aad
push
adc
mov
pop
add
add
mov
in
add
xor
out
xor
pop
cld
enter
jae
xchg
lea
sub
add
lods
bswap
mov
pop
scas
fadds
aas
sbb
and
sti
hlt
or
and
inc
mov
call
lods
pushf
test
adc
inc
add
mov
inc
mov
or
jle
mov
add
and
jae
jl
xor
call
fsubr
xchg
insl
into
add
test
mov
movsl
mov
mov
pop
les
lret
insl
jb
pop
xor
inc
stos
mov
xchg
test
repz
sar
mov
ret
lret
and
xchg
sahf
jmp
loope
arpl
pop
insl
cmp
pop
icebp
popf
sbb
or
pop
leave
jns
push
clc
ss
pop
mov
div
add
out
inc
insb
cmp
pop
iret
jle
in
into
jp
mov
std
mov
fildll
add
inc
jb
add
add
add
sub
movsb
psubb
xchg
in
call
lods
cmp
cli
sbb
push
pop
in
xchg
cmp
fstpt
iret
or
out
jle
dec
xchg
aaa
leave
ds
xchg
das
inc
nop
andl
jae
push
pop
push
arpl
mov
int
scas
sub
sti
add
loop
dec
add
fbstp
lret
in
fwait
dec
sub
sub
cmp
jno
push
repnz
and
ss
mov
es
cmp
mov
cmp
lds
inc
hlt
push
lods
jo
flds
notb
jb
xchg
sbb
xorl
idivl
in
dec
cmp
dec
loope
mov
sti
mov
xchg
cmpsb
xor
clc
out
leave
pop
insb
lods
stc
xchg
in
fidivrs
or
push
or
cld
sbb
pushf
sub
xchg
or
outsb
add
fstl
mov
dec
jae
add
add
add
sub
add
pop
push
mov
add
lret
add
aas
aaa
out
rcll
shlb
mov
cli
pop
push
outsl
pusha
push
jge
add
pop
fwait
jns
inc
mov
mov
and
mov
cmp
sbb
and
lods
negl
xchg
adc
sub
test
shrl
or
shr
dec
push
jb
push
adc
mov
dec
loope
add
xchg
outsb
and
dec
or
cmpxchg
jnp
pop
es
jecxz
leave
mov
dec
jo
es
add
push
mov
lahf
into
popf
aad
cmovge
inc
push
xchg
inc
fldcw
jl
cmp
jecxz
mov
jno
enter
adc
jne
pop
pop
les
mov
sub
inc
out
in
dec
cmpsl
int
gs
jbe
movsl
xchg
pop
repnz
ja
xor
fcompl
mov
les
dec
sub
imul
jno
imul
inc
in
mov
mov
out
lahf
aaa
inc
or
je
add
add
add
push
mov
cmp
pop
mov
ja
daa
push
mov
popf
sbb
int3
mov
cwtl
mov
pop
xchg
push
das
pushl
jl
adc
testl
pop
pop
call
data16
mov
hlt
cltd
cltd
sbb
and
push
inc
xchg
jae
add
stos
push
jo
push
and
xchg
pop
pop
jle
mov
repnz
and
ret
cmpsb
outsl
lods
mov
and
loope
imul
mov
add
or
adc
ja
sti
cli
sub
mov
sub
fmull
mov
xor
fnstcw
sub
sub
xchg
jbe
push
sbb
push
and
adc
out
popl
pop
xor
daa
xor
ret
and
arpl
mov
lahf
mov
jns
data16
jb
add
divl
dec
jno
sbbb
stos
pop
jne
add
add
add
mov
lds
push
aam
jle
es
mov
cmpsl
sub
mov
cmp
cwtl
nop
jbe
loope
lret
das
fsubs
push
inc
fdivrs
jne
jmp
cmp
jbe
mov
cwtl
push
popf
dec
inc
fidivrl
inc
aaa
push
stos
xchg
mov
outsl
out
xor
dec
jbe
jbe
fwait
jo
dec
mov
xchg
sahf
in
jns
sub
xor
fs
push
lcall
cmp
cmpsb
xor
mov
ret
sbb
push
dec
inc
ljmp
dec
int
cmpsb
dec
repz
repz
scas
es
adc
sti
jno
insl
or
hlt
xchg
pop
cwtl
pushf
adc
lret
scas
gs
xchg
dec
dec
sbb
daa
jmp
add
dec
out
cmp
mov
ljmp
pop
cs
cmpsb
mov
cmpsb
lret
and
hlt
add
fisubs
mov
xchg
inc
lock
push
arpl
punpckldq
add
add
add
jns
orl
jnp
mov
cld
pop
inc
lahf
push
stos
mov
mov
in
rcl
sbb
repz
icebp
or
in
pop
in
adc
int3
outsl
sbb
imul
mov
bound
lahf
mov
or
jne
cmp
jge
push
sahf
inc
push
iret
ja
jmp
jecxz
pop
dec
je
pop
mov
and
xchg
sahf
and
push
xchg
adc
sbb
lods
sbb
mov
lcall
rorl
test
mov
jae
inc
je
add
push
xchg
inc
and
ja
call
dec
in
sbb
mov
clc
pop
call
sub
jmp
es
stos
cmc
or
xor
pop
adc
hlt
in
xchg
out
sarl
dec
xlat
rorl
adc
and
or
add
fldenv
filds
shlb
mov
mov
ja
add
add
add
addr16
gs
popf
sti
loope
xor
out
aam
cmp
xchg
pop
pop
jmp
outsl
std
dec
cmp
adc
push
push
in
jge
pop
aas
mov
outsb
int
mov
dec
psubusb
jns
sbb
or
test
xchg
inc
pop
out
sbb
pop
or
push
jb
fdiv
mov
jo
xchg
add
es
pop
fwait
inc
mov
mov
pushf
daa
test
push
inc
or
jbe
dec
xorb
sbb
test
daa
addb
xchg
mov
mov
push
adc
mov
add
cmp
jp
jne
add
push
mov
cmp
adc
mov
not
mov
pushf
pop
lods
mov
roll
pop
jb
out
lret
sti
inc
push
and
ret
mov
pop
sbb
mov
dec
pop
and
add
bound
add
testl
dec
jo
add
pop
add
add
hlt
clc
divl
adc
sub
leave
call
and
sub
cwtl
inc
test
pop
sub
adc
ret
repz
clc
ss
cmp
push
aaa
cltd
outsl
enter
jp
mov
jge
or
push
fists
pop
popa
test
xchg
sbb
xchg
movsb
dec
cmp
mov
sub
sub
ss
in
pop
iret
rcr
das
cltd
jb
out
cmp
iret
xor
aam
std
gs
jae
mov
jecxz
cmp
jne
movzwl
cmc
sub
dec
cmp
cltd
scas
test
sub
js
pop
ljmp
and
add
in
add
xchg
icebp
in
jno
inc
shll
and
sub
lret
out
and
sub
adc
push
in
sahf
test
es
xor
ret
push
cmpb
mov
int
jb
test
loopne
ret
xchg
popa
scas
out
jbe
mov
xor
jo
ja
std
stos
inc
push
cli
test
ja
add
pop
add
add
push
jns
lar
std
mov
sub
inc
adc
or
xchg
and
lret
dec
fiaddl
scas
xchg
dec
mov
enter
xchg
stc
mov
ds
sahf
scas
popf
scas
mov
jae
cld
in
xchg
inc
push
sub
jle
lahf
dec
sub
shll
mov
fmuls
or
lahf
clc
ds
sub
add
mov
add
cmp
loope
stos
ljmp
jno
imul
cs
push
es
xchg
pop
mov
jmp
stc
sub
push
lret
cmpsl
repz
and
sbb
sti
push
imul
sahf
clc
sahf
jl
inc
ret
cmpsl
rorl
orb
movsb
jmp
push
test
arpl
pushf
fldt
mov
jnp
push
es
jbe
pop
les
mov
and
push
add
push
aad
add
in
sahf
out
subl
repnz
jmp
add
cmpsb
lods
rcrb
cmp
dec
lock
add
pop
add
add
imul
sbb
or
mov
call
cs
popa
in
xlat
sbb
ficompl
xchg
fidivrs
inc
lds
pop
push
in
or
add
mov
int3
pushf
aam
rcrl
cwtl
inc
fisttpl
into
inc
addr16
je
jg
sbb
push
jge
rorl
outsl
js
adc
cmp
mov
shll
dec
ret
es
xor
cmp
pop
gs
jnp
adc
mov
mov
pop
dec
clc
lcall
sbb
push
cmp
and
mov
xor
or
inc
dec
ljmp
push
cmp
xchg
or
xchg
in
shll
lcall
sti
sbb
incl
cmc
shr
or
stc
cld
lret
pop
shll
imul
ret
subl
lret
push
outsl
pop
sub
add
cmp
cli
mov
arpl
and
jnp
add
add
add
sub
inc
jne
mov
rorb
int3
aas
adc
out
subl
int
aad
push
xchg
xor
rorb
mov
leave
in
mov
adc
add
movsl
rcrb
sbb
scas
sti
jecxz
in
fwait
xchg
sbb
and
lret
mov
sub
jle,pn
dec
fs
sbb
xchg
daa
int3
adc
mov
mov
mov
cltd
dec
int
cli
cmpsl
xlat
mov
jmp
inc
addr16
inc
inc
cmpsl
pushf
mov
fisubrl
mov
mov
jbe
mov
xlat
mov
push
mov
mov
cmpsb
sarb
cmpsb
push
pop
xchg
inc
xor
inc
mov
mov
jb
jnp
mov
jno
mov
bound
int
lock
pop
imul
in
ja
mov
out
out
cmp
adc
pop
mov
or
add
imul
or
std
test
inc
jbe
stc
dec
addl
add
add
add
loope
add
stc
insb
out
xchg
add
daa
inc
xchg
add
jne
cmp
jns
xchg
test
es
fidivrs
cmp
dec
stc
dec
sbb
lods
mov
adc
fistpll
push
xchg
divb
mov
imul
xchg
std
mov
mov
sahf
dec
fldl
es
xchg
lods
mov
jp
repz
pop
jge
mov
xor
imul
rolb
push
inc
jae
pop
mov
push
add
push
stc
adc
aas
lds
mov
subb
inc
jb
jbe
clc
inc
popa
add
xchg
leavew
lret
cld
stos
lods
cmc
inc
in
dec
add
sahf
jns
out
push
in
xchg
lods
pop
stc
nop
pop
inc
and
int
inc
sbb
mov
cmp
out
shrl
js
stc
cmp
fbstp
add
test
pop
cmp
ret
testb
add
add
xchg
xchg
jns
dec
out
movsb
push
xchg
xorl
add
add
or
xchg
cli
push
dec
cmc
loop
sbb
ret
inc
scas
push
mov
adc
dec
movb
test
orl
lea
outsl
jge
dec
pushf
or
mov
or
daa
out
jg
fiadds
cmpsb
ficoml
fsts
imul
call
mov
nop
xor
push
lock
scas
cmc
mov
cmp
inc
fstl
fldl2t
pop
rorb
push
jnp
and
rorl
les
sbb
cmc
shrb
mov
int3
xchg
jg
xchg
int
fwait
call
pop
xor
aad
aas
sbb
mov
mov
lret
je
fldl
mov
std
or
cli
sub
int3
ret
sbb
ljmp
nop
ud0
shll
repz
notl
mov
adc
ret
adc
adc
dec
xchg
jns
xor
mov
in
inc
aam
scas
lcall
xor
xchg
dec
jo
lcall
add
sti
into
mov
push
jp
xchg
jp
jne
adc
mov
in
in
ja
xorl
lods
xchg
jmp
cld
mov
jbe
data16
mov
xor
mov
push
popa
jnp
gs
in
mov
adc
or
daa
bound
rolb
jg
push
cmpsl
add
xchg
dec
fdiv
pop
mov
shr
fwait
gs
jmp
or
and
xor
ss
mov
aaa
and
dec
or
pop
in
es
sbb
mov
inc
imul
sbb
jno
daa
lea
and
sub
cwtl
cmpsb
and
adc
and
lahf
lods
out
adc
inc
shrb
sbb
pop
aas
je
add
dec
insl
pop
xchg
std
and
addb
jmp
cmpsl
pushf
mov
xor
and
sti
sub
xchg
in
xor
sbb
mov
jl
cs
idiv
fnsave
mov
cld
mov
add
add
mov
fwait
lret
mov
and
addr16
mov
sbb
ja
mov
xchg
outsl
movsl
fstpl
icebp
lahf
mov
push
mov
xchg
icebp
mov
data16
mov
sbb
mov
or
test
stc
sbb
cld
inc
dec
xor
les
mov
xor
xchg
jp
repnz
xor
adc
cmc
add
jo
xor
inc
inc
std
mov
xor
mov
adc
rorb
jns
jne
jbe
stos
fmuls
push
xchg
into
cmp
sbb
mov
cmp
sarl
or
aaa
daa
test
shlb
sub
xchg
jmp
xchg
movsl
pushf
jb
jecxz
jno
pop
cmp
push
lret
subl
xor
mov
sub
push
cmp
stos
inc
add
call
fimuls
test
add
pop
add
add
stc
mov
and
jb
mov
loop
stos
and
aas
mov
jbe
xchg
cli
andb
mov
mov
addl
jp
adc
inc
popf
dec
jmp
xor
add
sbb
and
stos
cmp
ljmp
jl
xor
aad
lds
dec
push
mov
push
outsb
sub
outsl
xchg
add
mov
ljmp
test
cmp
pop
das
adc
repz
adc
shr
jg
shl
ret
mov
xor
iret
daa
xchg
rcrb
or
xorb
sbb
pop
xor
lds
pop
mov
ja
subl
jns
fdivs
daa
adc
mov
dec
addr16
cmp
repz
mov
mov
mov
into
and
imul
ss
xor
ja
xchg
mov
jge
std
sti
iret
test
sub
inc
scas
push
mov
addl
add
inc
xchg
pop
dec
adc
aam
dec
hlt
mov
cmp
jnp
out
stos
jle
ja
stos
scas
imul
xchg
cmpsl
jp
ret
mov
in
fwait
sarb
clc
add
andb
mov
das
and
repz
repnz
hlt
mov
mov
out
or
xchg
add
cmc
test
int
push
pop
mull
cmp
lcall
pop
cmp
repnz
outsl
add
les
jge
add
lret
adc
and
stc
inc
stc
les
jle
mov
adc
mov
pushf
pop
jp
out
ja
loop
jne
xchg
rorb
repnz
xchg
ds
xchg
push
adc
xchg
push
xchg
cli
out
xor
xlat
in
aaa
inc
inc
mov
hlt
into
repz
mov
jmp
loop
and
jmp
push
sub
push
dec
hlt
xchg
cmpsl
sub
loopne
xchg
inc
lahf
sti
hlt
out
mov
jb
mov
add
pop
add
add
mov
adc
fcmovnu
cmp
inc
pusha
xchg
aaa
push
rol
aam
test
lea
push
pop
aaa
fld
ficoms
mov
pushf
cld
jo
fucomip
xchg
mov
add
pop
stos
mov
mov
or
test
sub
lock
mov
scas
cmp
cmc
mov
cld
adc
jmp
dec
adc
cmp
shrb
mov
cmp
les
push
mov
or
pop
cmc
adcb
push
sub
mov
pop
lcall
das
pop
sub
pop
aaa
xlat
sub
pop
mov
xchg
in
inc
sbb
test
inc
ss
and
inc
mov
ljmp
aam
sbb
adc
cmpsl
push
test
idivb
push
xor
sub
cmc
push
fimull
cmp
addr16
sahf
clc
mov
add
mov
cmp
roll
add
add
mov
inc
mov
pop
adc
jne
pop
or
data16
or
iret
enter
dec
sbb
adc
or
pop
pop
cmovne
gs
sbb
mov
and
push
or
adc
pop
mov
bound
pop
insb
ljmp
fbld
jl
jp
sahf
xchg
js
sub
push
icebp
push
sbb
outsl
xor
pop
je
sbb
outsl
mov
xchg
gs
cmp
xor
loop
push
lcall
in
cmp
and
dec
jle
or
leave
inc
adcl
and
das
ss
add
repz
mov
sub
in
dec
mov
pop
in
in
add
cmp
sbb
roll
repnz
icebp
mov
sbb
jp
mov
cli
add
pop
test
ljmp
roll
cld
les
add
mov
adc
das
mov
leave
loope
xor
fs
mov
mov
mov
sbb
inc
mov
cmp
mov
cld
push
xchg
inc
push
mov
and
pop
arpl
dec
ja
mov
and
xchg
aaa
repnz
cmp
in
decl
adcl
fcmovnbe
test
stos
jg
cld
dec
out
cli
in
aam
je
sub
mov
mov
xor
les
enter
mov
xor
gs
and
add
lock
sbb
jno
lods
daa
lcall
pop
sbb
lods
fmul
dec
ret
sbb
and
mull
test
outsl
cmp
fldenv
inc
into
inc
and
mov
popa
lods
in
lea
push
ret
repnz
pop
ror
push
out
xor
in
int
aaa
jmp
jae
idivb
sbbb
add
imul
push
jnp
sbb
adc
mov
lret
test
add
add
add
cmp
loope
scas
lret
xor
lea
adc
mov
in
repnz
or
fbstp
dec
rcr
push
mov
push
cwtl
cmp
cld
clc
sub
xchg
lcall
adc
jo
sahf
or
sbb
xor
outsb
outsb
xchg
dec
and
bound
dec
add
jle
loope
push
clc
adc
stc
int3
inc
lcall
fcmovnbe
popf
pop
mov
ds
jnp
sbb
pop
sbb
adc
dec
lret
xchg
fs
pop
cwtl
outsb
mov
jo
or
push
mov
jg
add
and
subb
xchg
cmp
mov
xor
insl
dec
jnp
jae
idivb
in
sahf
xor
xchg
mov
pop
lods
stos
sub
jl
out
sbb
cmpsb
dec
sti
jge
test
lcall
mov
add
push
mov
add
add
aas
or
mov
aas
iret
dec
aad
xchg
add
add
add
jbe
inc
mov
or
fcmovu
xchg
xchg
insb
mov
xor
add
jle
push
mov
mov
hlt
or
mov
sarl
push
in
or
daa
xor
leave
mov
cmpsl
call
xchg
pop
push
repnz
aaa
mov
sub
insb
xlat
inc
outsl
adc
xchg
idiv
inc
dec
xchg
adc
inc
mov
xchg
test
jmp
xchg
loope
cli
daa
fcompl
mov
push
xor
cwtl
outsb
cmp
push
je
shrl
mov
movsl
cmp
xchg
lods
sub
push
adc
shlb
pop
into
jne
jle
mov
ret
aaa
cmp
cmpsl
das
xorl
push
out
sbb
jno
fidivl
adc
cmpsl
outsl
sahf
pop
daa
fdivr
mov
in
enter
inc
push
push
dec
cmp
fdivrs
insb
fidivl
sub
addr16
flds
add
mov
nop
mov
stos
es
insl
xor
push
mov
jno
sarl
cltd
mov
ret
push
or
and
push
push
mov
out
sub
mov
imul
mov
sbb
int
lods
lds
lcall
sbb
rcll
mov
aad
aad
addr16
cmp
call
and
pusha
push
stos
mov
xor
mov
jecxz
shlb
std
sarb
and
sub
mov
in
adc
stos
or
into
mov
push
inc
push
aas
rcrb
repnz
xor
into
push
jbe
cmp
mov
cmp
outsb
call
add
and
cmp
out
clc
fstl
sub
sbb
jl
xchg
stos
xchg
int3
orl
js
cmp
push
fisttpl
add
mov
xchg
popf
pop
and
add
pop
add
add
int3
test
mov
neg
sub
mov
insb
jne
or
fxtract
test
xchg
jle
ficompl
mov
xlat
hlt
pop
enter
loopne
and
pop
decb
sbb
inc
or
hlt
add
hlt
lods
push
push
add
lret
cmp
xchg
sub
insb
mov
or
add
push
int3
nop
push
xchg
fldt
scas
enter
jnp
xchg
pop
pop
ja
push
cmc
jl
sbbl
repnz
addr16
outsl
data16
pop
or
cmp
decb
ret
push
out
cmp
gs
inc
mull
pop
mov
into
xor
shr
nop
xlat
dec
push
cmpsb
iret
roll
sbb
xor
rorl
fisubs
mov
adc
jg
xchg
repz
mov
sbbl
mov
inc
xor
popa
inc
or
jecxz
jge
loopne
or
and
add
dec
push
int
fstp
iret
push
xor
rorb
out
add
pop
add
add
lahf
stos
jecxz
orb
xor
pop
jne
and
add
mov
sub
add
mov
sub
xchg
jecxz
jmp
inc
leave
and
sti
add
cmpsb
incl
sub
push
jb
xchg
test
cli
cli
pusha
sti
cmp
int3
fbstp
jge
scas
inc
into
pop
cli
add
sbb
loope
xchg
xor
or
les
jecxz
pusha
movsl
cld
ficoml
lds
push
sub
mov
inc
and
jnp
stos
jl
cmp
sub
cmp
pop
dec
mov
mov
ljmp
aas
xchg
imul
inc
pop
sbbl
mov
dec
and
clc
jnp
stos
mov
shlb
enter
leave
pop
push
jb
xor
rcrb
push
and
outsl
mov
lea
fiaddl
ficoms
lahf
and
scas
std
and
xchg
shlb
dec
out
mov
add
add
add
jg
out
out
jnp
cmp
push
dec
add
adc
cmp
or
pop
cltd
mov
rcll
xchg
fcomi
movsl
ret
sub
clc
inc
xor
popa
dec
sti
popf
outsl
lret
cmovnp
xchg
jae
dec
popf
aaa
hlt
jnp
jp
fisubs
cmc
std
in
xchg
stc
ret
and
cmp
in
ljmp
ljmp
xor
xchg
add
iret
std
je
mov
out
xor
pop
mov
mov
popa
imul
mov
js
pop
inc
adc
jb
jae
adcb
popa
add
in
fidivl
inc
pop
add
sbb
sbb
jl
mov
pop
pop
in
lds
dec
lds
loop
mov
mov
jo
outsb
dec
xor
mov
push
leave
test
cmovb
sbb
jns
je
sub
push
test
jp
lods
les
jnp
mov
add
cmc
mov
add
add
add
jnp
add
pusha
stos
mov
fdivl
jnp
xor
xor
int
push
dec
sbb
and
mov
je
mov
jmp
in
andb
faddp
fdivs
lret
xbegin
shlb
dec
fs
jl
popa
pop
mov
push
sbb
pop
loopne
stos
sbbl
ja
out
sbbl
fwait
mov
cli
adc
jl
je
sbb
mov
ret
adc
orl
adc
inc
jae
and
sbb
mov
sub
xchg
fbld
lea
xchg
or
mov
int3
loope
inc
popf
in
xchg
stos
popa
mov
mov
jnp
xchg
lret
push
es
outsl
cltd
sub
rolb
sbb
cltd
jbe
jl
in
pop
push
fists
mov
push
fs
inc
jb
push
daa
jge
push
sti
pop
dec
sub
push
out
dec
sub
add
les
out
xchg
xchg
inc
push
cld
mov
add
add
add
fidivrl
ss
jg
dec
inc
push
sbb
faddl
mov
stos
jbe
ss
vmptrst
xchg
shl
pop
mov
jmp
push
mov
pushf
hlt
std
adc
fisubl
rcl
dec
dec
movsb
scas
test
test
popl
enter
add
mov
cwtl
xor
repz
and
fistl
sbb
fisubl
push
int
aas
mov
scas
rorl
cmp
push
inc
hlt
inc
jne
dec
and
xchg
push
mov
lods
leave
and
clc
adc
lret
xchg
xchg
cmpb
out
push
in
ret
ficompl
test
sbb
sahf
ret
xor
mov
popa
iret
iret
dec
popf
and
pop
andb
fsubrs
pop
fcoml
pushf
push
push
dec
aas
jecxz
jno
test
sbb
mov
inc
dec
dec
cmp
aaa
fcoml
adc
popf
test
add
ljmp
dec
push
ret
dec
gs
add
xchg
addr16
sub
fdivl
inc
xchg
movsb
add
cltd
shrl
and
adc
hlt
sbb
add
mov
and
fwait
and
in
xor
adc
or
ret
leave
cli
scas
mov
adc
pop
sub
and
hlt
mov
fimull
inc
inc
outsb
mov
sub
pop
pop
dec
cmp
mov
xchg
jg
les
insb
cmp
stc
push
mov
and
cmpsl
fsubl
inc
ljmp
popl
data16
out
daa
add
scas
mov
ficompl
sub
inc
pop
jnp
pop
stos
gs
sahf
jns
jb
cmp
mov
cmpsl
xor
out
lret
pop
aaa
fisttpll
int3
loopne
push
gs
add
push
cmp
testl
popf
dec
dec
or
mov
inc
pop
in
mov
push
outsl
cmpsb
pop
scas
bound
mov
sbb
dec
cmpsb
fmuls
aaa
shlb
cmc
div
mov
shrl
or
add
out
mov
add
inc
je
ljmp
or
jnp
xchg
and
fsubrl
sti
loopne
pusha
daa
imul
lahf
js
sbb
mov
negl
fmuls
push
push
mov
xor
jne
test
stos
hlt
inc
pushf
cwtl
stc
pop
repz
and
sub
out
loopne
add
xchg
push
sbb
sbb
movsl
mov
inc
inc
sub
and
in
cs
lds
xor
cmp
notb
sbb
pop
nop
pop
ficoms
repz
rorl
gs
and
mov
cmc
stos
rorl
sbb
cwtl
cmp
ficompl
dec
pcmpeqd
add
sbb
mov
out
mov
nop
lock
add
cmpb
lods
in
lock
notl
aaa
jbe
push
mov
jp
das
push
out
aaa
lahf
shrb
xchg
add
push
sahf
rcr
pop
inc
scas
stc
mov
adc
add
pop
lret
mov
push
ljmp
xchg
pop
cli
mov
mov
int
mov
in
out
mov
fidivs
fistps
loop
xor
mov
or
sbb
lds
fwait
nop
cld
ljmp
call
fiaddl
inc
fnstsw
repnz
fnstcw
dec
dec
dec
insl
test
movsb
hlt
sub
push
and
xor
jle
int3
push
add
stos
inc
xor
in
jae
pusha
mov
jbe
xor
cmp
xlat
push
cmpsb
sbb
lds
shll
sar
adc
std
or
cmp
and
fsubrs
shll
lock
aaa
push
cmp
xor
pushf
dec
js
jno
rcrl
daa
or
and
xchg
adc
lds
aaa
subb
sarl
push
scas
push
cmp
xlat
push
insl
jle
and
aaa
stos
ficomps
jmp
add
arpl
cmpsb
jcxz
mov
sub
add
add
add
popf
shll
jno
mov
cld
jb
or
incl
or
add
icebp
imul
aad
inc
cli
jmp
mov
call
das
jmp
or
dec
xor
or
add
xor
inc
inc
stos
and
ljmp
fst
and
jecxz
js
adc
lahf
imul
pop
mov
sub
stos
and
jp
clc
sub
adc
mov
scas
mov
lret
rorl
dec
lahf
pop
aas
js
xchg
scas
dec
mov
push
scas
ret
sbb
sbb
lcall
xchg
int3
bound
jns
call
cmp
cmp
out
pop
dec
fs
sub
cmp
dec
push
mov
test
cmp
das
sub
pop
loope
shll
or
sbb
xchg
orb
decl
insl
push
add
clc
jnp
jg
in
cli
push
int
dec
pop
xchg
add
pop
add
add
in
pop
out
negl
outsl
test
jg
jne
mov
imul
shlb
add
sub
pop
cltd
bnd
inc
dec
lahf
or
lock
or
inc
push
mov
into
mov
sub
dec
lea
pop
aam
add
push
cwtl
mov
clc
sub
hlt
out
imul
xor
rorb
cmp
xor
jecxz
or
mov
xchg
das
in
inc
das
xchg
fisubrs
and
out
sbb
jge
repz
jno
push
daa
ss
popf
clc
and
daa
addr16
adc
lds
popf
pop
pop
aad
rcr
pop
pop
mov
xor
mov
mov
xor
mov
pop
js
cmp
mov
push
jne
adc
int3
inc
fadds
push
int
clc
jecxz
xchg
hlt
pop
ret
sub
ljmp
cld
fidivl
in
les
es
add
pop
add
add
js
gs
pusha
jecxz
sub
cwtl
inc
push
ds
inc
cmp
mov
jno
sahf
lock
push
fisubl
push
pop
stc
and
cmpsb
pushf
sub
leave
xor
gs
pop
hlt
out
stc
mov
out
stos
rorb
enter
push
mov
nop
int
aaa
pushf
xchg
and
loopne
mov
dec
mov
mov
mov
cmp
xchg
sbb
stc
mov
and
popf
and
sub
jecxz
push
rcl
sbb
cmpsl
xor
hlt
sub
divb
add
repz
scas
sbb
mov
xchg
shr
xchg
mov
stc
cli
lcall
xor
mov
push
xor
scas
ret
repnz
movsb
or
out
mov
ret
addb
jns
cmp
sarb
out
iret
pop
rcrl
test
add
jl
sar
std
jle
testb
adc
mov
add
add
add
inc
or
iret
jmp
mov
mov
push
cld
pop
fiadds
cmp
adc
push
popf
rclb
jecxz
mov
pop
cmpsb
pop
inc
pop
dec
sbb
inc
leave
aad
or
inc
aad
in
out
jne
add
andb
jmp
xlat
inc
jmp
push
in
decl
mov
xchg
or
stos
aam
psubw
dec
xchg
pop
andb
push
jnp
pop
call
mov
mov
push
add
xor
roll
and
pop
outsl
es
int
popl
sbb
nop
xor
ficomps
icebp
shlb
mov
rclb
loope
pop
data16
out
inc
aaa
xchg
cs
pop
mov
mov
repz
push
dec
mov
dec
xor
pop
fstl
movsb
mov
or
cmp
cmp
mov
xor
add
pop
add
add
mov
adc
adc
ret
popf
mov
daa
lds
pushf
aas
cmpsl
scas
and
les
lahf
pusha
test
dec
cmp
inc
clc
jle
sub
xchg
lahf
adc
sub
sub
jg
add
pushf
inc
lea
aaa
dec
scas
add
scas
push
les
xor
cmpsl
add
add
push
int3
test
sub
fsubl
jo
and
jbe
outsl
shlb
xor
stos
xor
mov
das
popf
cmp
adc
in
push
mov
add
inc
jmp
or
and
daa
push
xchg
push
sarl
push
pop
shlb
mov
xor
test
lds
lahf
movb
jnp
mov
clc
mov
aam
out
pusha
daa
pop
mov
jo
adc
inc
push
add
outsl
sti
outsl
sub
push
cmp
add
addl
jne
cmp
popf
addl
cwtl
sub
push
data16
mov
dec
call
fs
stc
xor
movsl
jp
mov
jg
jbe
sti
jg
hlt
imul
ss
push
add
out
ret
decl
inc
xor
out
mov
pushf
cmp
loopne,pt
call
xchg
sbb
mov
xchg
and
sbb
cltd
sub
inc
lcall
push
lods
dec
addr16
icebp
arpl
dec
inc
xor
sub
js
insl
sbb
mov
ja
lret
jl
stc
jge
movsl
in
jns
sti
inc
pushf
jo
movl
lret
lret
push
jae
or
popa
les
stos
scas
stos
sbb
sbb
jecxz
arpl
repz
test
fsubrs
mov
inc
repnz
add
insl
bound
fldt
and
add
dec
std
out
xlat
aas
insb
lods
ret
sbb
add
add
add
test
and
and
ljmp
mov
push
pop
je
and
mov
flds
bound
enter
stc
mov
jno
jne
ljmp
das
or
mov
inc
dec
mov
popf
loope
sti
mov
cmp
insb
mov
rclb
les
sbb
sub
mov
test
cmpsb
xchg
inc
aam
jmp
xor
scas
mov
das
add
dec
push
sbbl
insb
repz
insl
mov
jle
jo
frstor
jae
add
push
repnz
shrl
xor
add
fwait
jo
lahf
jns
movsb
adcl
insb
out
xchg
xchg
jp
js
jle
fs
in
mov
cltd
or
repnz
test
push
dec
mov
mov
jae
std
and
push
cmp
xchg
int
fcomps
fwait
cmp
int
inc
sbb
add
mov
mov
jmp
dec
sahf
jbe
push
pop
add
add
push
push
inc
jecxz
faddl
mov
call
sbb
pop
xor
popa
repz
enter
cld
in
pop
mov
xor
sbb
insb
cmp
sub
es
sbb
lret
fwait
nop
jp
xchg
sbb
lcall
pop
divb
clc
lods
daa
inc
adc
push
xchg
pushf
pop
xchg
fistps
in
in
push
xchg
or
add
mov
push
push
int3
movsb
dec
push
mov
shrb
sbb
jbe
sbb
ret
outsb
ss
imul
repnz
and
xchg
ret
fsubl
dec
dec
or
jnp
lret
mull
fisttpl
lret
and
mov
aas
mov
fst
or
push
stc
jae
aaa
mov
addl
addr16
ss
push
sbb
psubsw
sbb
sub
mov
xchg
fcmovnb
xchg
push
scas
add
lret
sbbl
xorl
lds
add
pop
add
add
pop
inc
pushf
movsl
xchg
das
stos
je
test
insb
shll
adc
ds
lds
jl
inc
movsl
decl
xchg
ret
int
jp
insl
or
paddq
sub
stc
adc
fmuls
cltd
xor
aaa
pop
fsts
dec
insl
ds
mov
jg
test
mov
testb
int
fsts
inc
add
mov
sub
add
out
ss
and
inc
xor
mov
and
add
das
popf
sbb
xor
inc
shrb
pusha
lods
inc
adc
inc
data16
lods
cmp
sub
int3
dec
dec
cli
dec
push
add
sbb
mov
fucomi
ss
pop
cmpsl
or
mov
das
xchg
loope
lds
xchg
shrl
fnstcw
or
lods
xchg
jns
adc
ja
test
xchg
xor
jmp
mov
dec
push
fincstp
push
cld
ror
dec
add
imul
sbb
leave
dec
mov
sahf
stc
push
lcall
pop
mov
fidivl
and
sahf
sub
aaa
lods
outsb
sub
add
es
aad
adc
lock
pop
fistps
imul
xchg
loope
in
add
xor
adc
loope
mov
js
and
mov
mov
jb
mov
in
fcomp
lahf
and
push
xchg
jmp
daa
iret
mov
pop
stc
rcll
outsl
cld
dec
clc
loope
mov
inc
movsl
fnstcw
or
add
jbe
call
mov
sbb
mov
andb
pop
loop
aam
mov
stc
jno
and
mov
mov
xor
and
addr16
or
cmp
divl
mov
xchg
sbb
ljmp
bound
add
int
mov
push
stos
cld
js
stc
pop
fstl
lods
push
leave
outsl
rorb
lret
add
mov
cs
stos
test
fwait
add
pop
add
add
enter
lcall
adc
and
fidivs
rcrl
movsl
jle
mov
lods
jbe
jp
push
imul
sbb
or
sub
cmp
in
aad
in
test
gs
mov
xchg
lahf
xor
adc
jmp
test
sbb
xchg
mov
sbb
sbb
popf
jns
sbb
inc
jecxz
ljmp
mov
xor
lock
pop
and
ljmp
lret
inc
daa
pop
fidivrs
rcll
mov
dec
jg
sbb
inc
mov
dec
xchg
push
int3
sti
cmp
jge
pop
cwtl
sarl
inc
mov
rorl
daa
adc
push
pop
lods
mov
dec
dec
aam
jnp
and
mov
shl
les
or
mov
sarl
dec
mov
imul
add
ja
out
xor
cld
cmp
add
pop
add
add
shr
and
outsl
push
or
add
mov
int3
adc
mov
jne
jae
xor
jae
jecxz
addb
jno
insl
popf
pop
push
adc
xor
add
mov
xchg
or
xlat
sub
imul
jge
adc
mov
aam
pop
clc
xor
mov
mov
enter
push
mov
iret
adc
jae
mov
dec
andb
lret
leave
xchg
sarl
stos
daa
in
dec
pusha
mov
adc
adc
repz
push
xchg
mov
xor
sub
in
mov
and
test
orb
loope
pop
jne
mov
fcom
stos
and
xchg
dec
icebp
add
mov
outsb
loopne
mov
push
push
push
out
cli
xor
jmp
xchg
test
lcall
jne
push
mov
loop
test
je
push
aaa
add
xchg
add
add
add
xor
test
inc
jg
inc
dec
js
xor
imul
aad
sbb
xchg
icebp
mov
enter
dec
popa
pop
ljmp
mov
sbb
and
int
movsb
dec
or
inc
mov
push
jb
ds
insb
mov
aaa
dec
sub
and
mov
push
mov
in
and
addl
push
cmc
std
mov
xor
cltd
stos
pop
pop
stos
loope
int3
xchg
in
into
mov
push
mov
incl
add
popf
inc
sbb
jns
jbe
sbb
call
js
hlt
or
jg,pn
inc
mov
ret
xlat
and
push
negb
inc
mov
mov
mov
and
fstpt
adc
in
mov
jl
dec
sub
aam
dec
sub
add
lret
insb
lret
jmp
add
inc
xor
mov
jmp
pop
int3
outsb
mov
es
rorb
scas
fidivrl
add
mov
repz
repz
add
xchg
jae
add
pop
add
add
pop
cld
jmp
pop
and
fucomp
sbb
dec
lea
and
mov
daa
add
insb
mov
ficoms
stos
ss
daa
add
jmp
outsl
mov
push
movsb
andb
xor
dec
into
jnp
rolb
cmp
mov
dec
and
aam
loope
ja
sub
push
leave
inc
jb
sbb
mov
inc
popf
adc
pop
mov
xchg
sbbb
mov
ret
adc
es
fildl
push
enter
sbb
stc
push
inc
arpl
or
mov
jne
ljmp
xchg
loop
adc
xlat
sbb
hlt
imul
out
lods
pop
mov
out
loopne
adc
add
lcall
jo
ja
jae
cmpb
xchg
fisubs
cmp
mov
sbb
ret
hlt
test
fs
jge
or
movsb
mov
mov
pop
or
scas
jp
add
pop
add
add
dec
sub
pop
or
es
sbb
mov
aaa
movb
mov
dec
sbb
sub
lock
pop
push
mov
xchg
xor
xor
mov
data16
rol
call
lods
push
sti
push
mov
aaa
fs
ja
ffree
iret
dec
lret
dec
push
jb
mov
cmpsb
xchg
lea
enter
insb
inc
fwait
mov
jle
das
add
adc
push
sub
push
xchg
stos
lcall
mov
in
mov
inc
outsb
jnp
mov
icebp
mov
jb
xchg
jle
cmpl
xor
jnp
dec
cld
and
arpl
mov
xor
in
mov
fnstsw
lret
dec
mov
lods
adc
inc
addl
push
mov
mov
mov
or
and
scas
sahf
xor
cmp
stc
aas
out
and
out
or
xchg
lds
add
std
stos
sbb
or
add
add
test
lret
out
or
pop
cmp
dec
mov
test
jne
adc
xchg
addb
enter
loopne
nop
pop
jbe
mov
in
mov
icebp
lock
shll
push
movsb
sbb
jge
mov
mov
mov
stc
sbb
loop
cmpsl
std
outsb
push
pop
cmp
sub
rcr
mov
sub
lea
sbb
xchg
arpl
xchg
and
adc
jbe
cli
mov
mov
fisubl
lock
mov
jge
aad
pop
jl
subb
sahf
sub
push
pop
dec
push
jecxz
movsl
pslld
xchg
test
adc
mov
sub
xor
pop
push
adc
repnz
andl
or
xchg
xchg
js
add
mov
lods
ja
push
inc
fdivl
push
sahf
mov
add
dec
call
lock
fidivs
sub
sub
sub
out
test
and
push
icebp
movsb
outsb
test
push
cli
jns
pop
int3
inc
call
mov
lods
out
add
adc
shlb
mov
push
sbb
xchg
fstpt
cmc
stos
lret
jbe
fxtract
ds
jl
dec
mulb
cmp
pop
jo
std
jge
daa
loope
in
push
int3
xor
sub
inc
cmp
sub
inc
lahf
push
xchg
mov
pop
ret
xor
xor
test
xchg
fcomp
cld
adc
jae
sbb
in
mov
cs
push
adc
fidivl
mov
repnz
imul
lret
aaa
cmc
mov
rclb
js
cs
ljmp
pushf
orb
sahf
mov
fcmovne
pop
mov
fdivr
ja
lret
fnstenv
andb
je
fisttpll
mov
add
add
sbb
mov
push
jl
je
mov
add
lock
cmp
dec
ret
xor
and
jl
lea
mov
adc
mov
lahf
mov
je
aas
mov
icebp
rolb
lods
add
test
cmpsl
jmp
loopne
jg
nop
and
add
rolb
mov
in
mov
cmp
push
call
loop
lret
sub
outsl
enter
cmp
pop
jge
clc
cmp
int3
mov
les
call
pop
adc
adc
jle
sbb
or
mov
fmull
mov
push
into
add
lret
ss
cmpsl
lods
lahf
loope
jmp
imul
xchg
es
in
sub
test
stos
mov
or
test
cmp
xor
dec
adc
iret
movsl
xchg
pop
xor
mov
pop
rorb
push
stos
les
mov
mov
add
pop
test
stos
hlt
jmp
jmp
shrb
mov
add
xchg
cmp
nop
inc
xchg
ror
clc
cmp
out
sub
scas
mov
fnstcw
fistl
jecxz
or
loopne
mov
xor
and
leave
mov
sbb
int
jb
fnstcw
sbb
stos
aas
inc
sbb
sub
es
push
push
and
jne
push
call
loop
idiv
aaa
lret
stos
xor
lret
and
sbb
xchg
pop
mov
mov
ljmp
push
daa
pop
pushf
lret
sti
xchg
sbb
cmp
push
adc
cmp
xchg
lds
addr16
sbb
outsl
xchg
out
inc
test
add
cmp
ds
jp
js
inc
les
lret
sti
push
test
push
stc
sar
fldcw
jno
mov
push
mov
shlb
inc
push
jbe
or
xchg
xor
roll
add
out
jnp
pop
pop
out
in
xchg
icebp
daa
mov
pop
push
push
xchg
gs
and
add
add
push
nop
out
xlat
out
jg
xchg
in
imul
popf
movsb
add
pop
add
add
popa
cmp
jae
lret
into
enter
je
inc
fldt
add
pop
or
jmp
pop
fisubrl
scas
insl
push
sti
add
nop
push
xchg
mov
aas
or
mov
jge
cli
lds
jmp
add
inc
cmp
filds
inc
inc
outsl
or
push
cmc
or
daa
iret
dec
jp
insb
mov
and
mov
sti
outsb
fsubs
push
xor
pop
xorb
jecxz
and
iret
push
repnz
xor
clc
adc
and
icebp
or
fbld
lea
addl
sahf
aad
push
cmp
jl
dec
cmp
in
mov
xor
and
imul
pop
and
xchg
xchg
gs
pop
pop
sbb
int3
and
add
mov
inc
fwait
lds
push
sarl
mov
add
movsb
movsl
add
pop
add
add
add
xchg
dec
pop
rcl
lods
fcomip
cmpsb
jge
and
push
xchg
add
incl
xchg
sar
sbb
mov
roll
and
add
test
or
push
loop
std
and
adc
in
or
pusha
push
dec
or
or
xchg
lret
and
and
test
sub
lcall
xacquire
in
mov
jecxz
adc
cmp
jl
stc
cmpsl
jns
jp
xorb
lock
sbb
add
and
jle
in
dec
jmp
aad
push
sub
add
fwait
jns
push
mov
loopne
mov
or
push
and
add
xchg
sub
jnp
mov
das
jecxz
pop
xchg
insl
repz
sub
call
jnp
mov
iret
jb
arpl
mull
sub
in
and
push
ret
lcall
std
in
mov
pop
stos
cmpsb
add
pop
add
add
sbb
movsl
sbb
xchg
data16
push
repnz
sub
iret
lock
das
push
daa
sarl
push
aas
sbb
add
ljmp
pushf
test
nop
ljmp
aaa
xor
test
into
loopne
shlb
mov
adc
pop
xchg
pop
sbb
pop
movsl
int3
sub
decb
faddp
xchg
sub
mov
xchg
sub
push
cmp
testl
rorb
mov
jnp
push
insl
dec
and
test
mov
aas
push
sub
mov
cmovle
shl
pop
mov
bound
pop
out
and
inc
arpl
sub
imul
sti
leave
test
sbbb
fcompl
push
cs
xchg
adc
mov
pop
pop
mov
gs
mov
jp
fdivs
jg
int3
cmpsb
add
mov
push
sti
jmp
pop
dec
pop
movsb
lcall
add
add
add
cltd
mov
xchg
enter
test
adc
dec
andl
mov
xor
repnz
fidivs
cli
ss
mov
out
ret
sub
pop
pop
sub
stos
mov
xor
mov
and
lcall
test
mov
xlat
call
or
sti
pop
stos
nop
jmp
lret
shlb
in
icebp
into
fwait
dec
adc
mov
popa
hlt
int3
into
pop
sub
push
mov
xor
jl
hlt
pop
sbb
add
pop
xchg
nop
ficoml
cli
inc
insl
xor
adc
in
push
loop
xor
int3
inc
lea
repnz
xchg
inc
dec
cmpsb
out
adc
data16
notl
dec
jecxz
or
and
mov
push
pop
jns
in
lods
pop
pop
addr16
fcom
push
arpl
arpl
test
enter
push
cmc
sbb
out
push
shl
lret
add
add
jecxz
lock
fmuls
outsl
mov
add
add
mov
out
jecxz
into
add
lcall
sti
and
imul
in
repnz
jmp
mov
into
int
sbb
lret
add
adc
roll
insl
mov
js
add
out
sahf
rcr
sub
das
jbe
dec
clc
das
xor
xor
test
ds
mov
lea
daa
lock
lds
mov
jl
cmpsb
pop
pop
push
sbb
and
dec
cmp
sub
std
cltd
aad
jnp
push
and
dec
mov
mov
gs
out
or
fistps
lods
pusha
push
rcr
loopne
mov
stos
jecxz
xchg
fidivs
lods
pop
jbe
fistpll
scas
mov
imul
stc
cltd
xor
adc
or
pop
loopne
mov
push
scas
in
mov
mov
cld
mov
add
test
add
push
in
jbe
pop
es
data16
xor
mov
cli
dec
fwait
jo
xor
or
pop
mov
or
push
rcll
pop
push
push
push
jb
xchg
sbb
insb
sub
fdivl
push
test
dec
call
mov
call
mov
rcl
mov
aam
mov
cmc
daa
and
cs
inc
outsb
rcr
out
lods
cmp
xchg
jnp
lahf
mov
push
mov
xchg
or
jb
mov
jmp
int3
out
cmp
jmp
test
xor
inc
out
in
dec
sbb
add
notb
jbe
pop
cmp
pop
ljmp
mov
dec
inc
ret
dec
fdivl
mov
mov
movsl
cmp
fwait
dec
in
xchg
jle
es
add
add
std
rorl
orl
add
out
cmc
mov
popa
nop
pop
mov
pop
add
add
adc
mov
xor
xor
in
pop
rorb
xchg
fs
and
shrb
and
cwtl
dec
cmp
shlb
jno
cmpsb
in
arpl
mov
xorb
gs
xchg
aam
inc
loop
pop
mov
jle
push
jge
cmp
das
mov
ja
addl
std
leave
in
mov
inc
negb
adc
test
cmp
jmp
and
jnp
dec
stos
in
test
insl
and
arpl
sbb
lods
mov
stos
jnp
jb
out
jbe
fistpl
xor
mov
mov
pop
cmp
xchg
xor
test
mov
clc
cmp
sub
bound
stc
sbb
and
push
ficompl
int
mov
xor
scas
push
stc
mov
pushf
outsb
addl
jmp
add
add
out
std
dec
std
pop
cmp
cmp
sbb
inc
scas
into
stos
add
pop
add
add
popa
lahf
es
pop
jg
or
sub
nop
movsl
mov
mov
and
jl
or
out
lock
jo
mov
inc
xlat
lods
mov
mov
pop
sub
cs
cmpsl
dec
filds
or
inc
out
xor
in
add
pushf
dec
push
pop
and
push
add
aad
inc
pop
nop
push
inc
inc
add
ret
in
dec
inc
cmp
shll
aam
lock
jno
and
repz
mov
ljmp
jb
les
adc
adc
fisubl
negl
pop
push
scas
cwtl
shlb
fwait
or
xor
ds
ror
test
sbbb
mov
in
adc
sub
js
clts
aad
loopne
gs
jl
fidivrl
in
sub
fcomps
mov
fidivl
lret
mov
out
out
add
fidivs
loop
ljmp
pop
scas
jae
aad
add
pop
add
add
cmp
mov
pop
dec
pop
mov
movb
loopne
lea
jbe
sbb
sbb
or
or
mov
imul
sub
nop
loop
jmp
ss
cmc
lea
repz
cmp
pop
hlt
pop
pop
jp
and
je
call
xchg
mov
push
out
aad
cmp
mov
lea
test
jecxz
lcall
in
add
push
dec
das
mov
divl
int
addr16
push
jl
arpl
iret
dec
push
add
adc
rsm
repz
jecxz
cltd
or
pop
jmp
mov
imul
popf
push
das
xchg
sbb
dec
and
sub
mov
ja
lea
in
mov
or
dec
mov
push
sarb
mov
lret
cmp
stos
sarl
daa
lock
sarb
fisttpll
out
push
xchg
jg
jmp
std
push
int
cwtl
lahf
sub
fsubrl
add
int
je
fwait
pusha
stos
sar
cwtl
sub
les
aas
ds
ss
cmp
loope
sub
cmp
js
and
rclb
cltd
dec
adc
pop
xlat
mov
inc
and
inc
scas
sub
push
icebp
jne
fimuls
orl
ret
sub
clc
xor
xlat
mov
inc
mov
mov
lret
das
mov
jl
rcl
es
in
adc
dec
rorb
cmp
repnz
add
cli
stos
sub
mov
call
mov
les
push
or
sub
xchg
jmp
test
mov
dec
movsb
mov
in
cmpsl
es
jnp
mov
lcall
push
clc
inc
pop
cmp
hlt
xor
cmp
push
dec
lcall
out
loope
sti
in
or
xchg
out
jmp
jno
clc
mov
addr16
add
mov
add
out
fisubl
fsubrl
daa
sbb
xchg
xchg
or
push
divb
dec
sarb
or
lea
add
add
xchg
sbb
add
add
add
adc
stos
imul
push
jg
and
repnz
jnp
insb
rcrb
push
shlb
add
add
cld
push
dec
je
ds
pop
imul
test
dec
js
add
ret
out
sub
call
cmpsl
insl
xor
aaa
jb
cltd
push
lret
movsb
xchg
mov
mov
cmp
sub
stos
mov
js
pop
shll
and
and
mov
xor
xchg
ficompl
mov
int3
pop
sub
outsl
sbb
rcrl
adc
mov
sarl
test
or
dec
sub
mov
out
push
dec
push
push
nop
push
push
mov
cmpsl
leave
sub
xchg
adc
nop
out
andb
jno,pn
and
dec
mov
xor
outsb
add
xor
cmp
or
ljmp
add
push
push
pop
stos
scas
push
leave
fs
jp
dec
or
out
mov
and
js
sbb
aam
in
fistps
jae
jle
pop
mulb
movsl
call
fiaddl
out
loopne
ljmp
jb
and
cltd
adc
test
les
add
cmp
cmpsl
clc
push
dec
push
jne
push
push
dec
fildl
or
cmpsl
nop
test
scas
and
add
xor
pushf
lea
cmp
cmp
and
ljmp
dec
xchg
psrad
ret
cs
mov
cld
sub
xchg
aad
dec
xor
dec
pop
rcrb
or
sub
add
rorl
sub
sarl
mov
fcomps
jbe
insl
or
sbb
test
das
aam
jae
test
mov
push
jo
inc
mov
outsb
add
jp
les
mov
ret
ja
test
inc
sub
mov
add
add
add
movsb
xchg
rol
fucomp
call
aas
cmp
iret
jbe
test
jp
add
fisttps
or
sub
popa
dec
je
lahf
sbb
cmp
inc
mov
mul
sub
repz
aad
inc
lcall
mov
jno
adc
sub
mov
mov
cmp
orb
mov
in
jp
roll
clc
jg
insl
test
int
aaa
pop
lcall
push
push
push
and
xor
mov
and
push
out
or
push
js
int3
mov
jmp
and
and
sbb
xchg
mov
mov
fldt
pop
dec
sub
cli
movsb
push
nop
test
mov
cmpsl
or
sbb
xchg
or
aam
dec
or
lock
fs
pop
test
out
dec
stc
add
push
push
or
mov
sbb
int
adc
add
clc
pop
stc
out
push
push
xchg
data16
daa
jne
idiv
mov
add
add
add
orl
fcmovnbe
pop
pop
push
jmp
add
pop
pop
scas
mov
jg
outsb
sti
pop
push
outsb
adc
das
xor
fsubl
sbbl
mov
mov
dec
or
imul
mov
mov
cmp
push
fcoms
push
dec
std
sub
or
xchg
and
inc
loope
movsl
mov
sub
inc
out
xor
inc
fidivrs
sub
fucom
push
push
push
scas
cs
hlt
adc
loopne
shrb
dec
push
cmpb
hlt
jl
cmp
mov
popf
adc
mov
shl
pop
test
clc
mov
mov
push
sarl
mov
fmull
mov
inc
xor
push
subb
sbb
mov
add
incb
cmp
push
add
push
mov
lcall
test
pushl
add
test
cmp
or
pushf
and
cmp
inc
cltd
testl
les
pop
mov
aad
pop
in
ljmp
sbb
ja
icebp
dec
insb
scas
cmpsl
push
fdivrl
add
mov
xchg
ds
rcrb
or
loop
xchg
cmp
cmc
jb
out
aaa
movsb
mov
mov
mov
lret
fcom
push
test
mov
cmc
pop
stos
rcrl
hlt
mov
push
jmp
add
pop
or
cwtl
jnp
icebp
mov
cmp
sub
sbb
dec
or
daa
or
mov
cwtl
xchg
add
adc
adc
aaa
test
add
int
loop
fwait
add
push
xchg
sti
or
mov
lods
mov
fwait
pop
dec
into
popf
divl
mov
adc
dec
mov
mov
fdivr
into
add
jne
mov
xchg
movsl
jns
stos
pop
stos
push
mov
add
add
add
xor
cmp
lds
mov
test
dec
jb
popa
lods
jl
pop
cmp
pop
xor
sub
inc
inc
push
or
insl
and
addb
pusha
repnz
stos
nop
into
das
jp
sbb
aad
aam
mov
addr16
cmp
xchg
pop
ljmp
xlat
adc
dec
or
inc
jmp
push
adc
xor
mov
jb
pop
pop
lret
repnz
pop
xor
bound
aaa
rcll
sbb
and
push
push
push
lret
inc
pushf
out
movsl
mov
mov
and
rolb
inc
xor
imul
xchg
lods
js
jne
mov
mov
xor
ds
push
in
mov
fwait
push
jae
jno
rorb
push
imul
lods
fldt
shl
test
cmc
lcall
xor
xchg
scas
in
adc
movl
dec
pop
pop
sbbl
cli
test
dec
and
mov
add
add
jge
faddl
inc
mov
xchg
mov
cmp
xor
sub
in
cmp
ja
push
and
sbb
cmp
push
xchg
sahf
out
roll
xchg
rcl
jno
adc
cwtl
out
jae
mov
repnz
ret
int
loopne
dec
fs
fs
jne
rcrb
fldl2t
dec
test
inc
sbb
or
push
mov
fidivs
add
sbb
nop
outsl
sub
or
out
nop
shlb
mov
cld
shll
add
jbe
ds
push
inc
clc
push
xor
ret
xor
mov
imul
int
jb
mov
dec
hlt
ljmp
mov
push
mov
pop
dec
cmp
mov
sti
loope
pushf
and
cmp
pop
in
inc
xor
mov
mov
in
in
push
add
in
mov
jecxz
out
arpl
sbb
pop
adc
add
pop
add
add
stos
sahf
nop
mov
adc
mov
push
sub
aaa
aad
adc
das
adc
fisttps
je
xor
add
addl
fwait
or
add
ljmp
sarb
push
in
adc
out
adc
repnz
leave
imul
movsb
jmp
ds
lret
pop
aaa
loopne
push
sub
push
addr16
pop
mov
jne
jp
adc
jmp
jl
jecxz
or
jl
adc
jg
or
int3
or
shr
fstps
adcb
fstl
xchg
cltd
popf
mov
xor
loope
clc
jmp
push
sbbb
js
cmp
xor
or
and
ret
dec
push
xor
loop
pop
mov
pop
cmpsl
repnz
mov
cs
mov
cli
in
mov
and
rcll
jno
bswap
insl
add
std
test
jg
xor
stos
pop
mov
add
pop
add
add
movsb
gs
arpl
adcb
mov
negb
push
movsl
cmp
loop
inc
lret
mov
jg
inc
out
mov
and
mov
fucomp
aaa
pop
sub
pushf
adc
ja
mov
aas
fildl
das
push
je
rorl
mov
jle
dec
inc
mov
cs
int
or
aad
inc
pop
adc
in
add
pop
lock
jae
js
hlt
sub
in
mov
ret
lret
popf
sub
sahf
cltd
or
insl
add
xor
push
je
mull
fnstsw
cltd
mov
sbb
jp
lods
adc
jmp
mov
cmpsl
push
mov
out
and
mov
mov
dec
lcall
jmp
popa
sbb
cmp
repnz
add
sub
dec
jb
jecxz
ljmp
mov
pushf
sbb
lock
in
lcall
xor
fs
mov
add
xchg
xchg
xor
data16
imul
fscale
add
ret
cmp
cmp
enter
jl
fidivl
mov
mov
sub
icebp
mov
nop
or
push
out
in
cmp
icebp
sub
lods
shlb
aad
mov
push
dec
test
jnp
adc
pop
mov
mov
arpl
push
add
sub
fldenv
lahf
push
bound
jns
jne
test
or
cmp
lret
out
xchg
addb
cmp
sbb
mov
adc
jo
jns
mov
add
and
or
in
movsl
inc
sbb
mov
insl
shrb
cwtl
leave
push
and
insb
jle
add
or
jp
ret
aas
fsub
dec
inc
decb
add
mov
out
test
add
dec
or
jg
adc
outsl
xlat
sahf
in
sub
sub
add
push
in
mov
stc
imul
sahf
add
xchg
jp
mov
add
xor
push
fldenv
clc
fisubrl
or
outsb
push
iret
pop
jge
sub
push
cmp
aaa
pop
hlt
pop
fsubs
cmp
xchg
lcall
hlt
insb
pop
jecxz
mov
gs
push
xor
pusha
in
fucom
and
add
xchg
je
and
imul
lock
fmul
rclb
ret
push
scas
dec
lods
popa
mov
idiv
add
jge
into
xor
adc
sbb
or
mov
addr16
add
fisubrl
pop
insl
or
lds
sub
ds
int
in
push
aad
jne
in
dec
mov
mov
add
push
xchg
adc
enter
mov
rcr
dec
or
test
jp
push
sub
mov
dec
icebp
hlt
arpl
in
sbb
add
orl
jmp
insl
sbb
outsl
mov
push
orl
add
add
andb
jnp
fisubl
inc
decl
inc
cltd
xchg
dec
add
js
cmp
fwait
addr16
mov
iret
jecxz
mov
mov
fwait
inc
add
mov
pushf
into
jmp
out
lock
nop
add
xor
xor
sahf
inc
daa
xor
xor
sub
lods
lea
sbb
sub
lea
xchg
mov
or
das
adc
cltd
lcall
lcall
and
xor
or
push
adc
pop
in
sbb
or
ss
loope
sub
leave
jnp
cmp
pop
cmp
in
lea
xchg
cmp
jns
cmp
popa
hlt
dec
pop
dec
dec
or
pop
jne
sub
pop
push
and
imul
ss
mov
xor
scas
ja
in
push
pop
notl
hlt
mov
test
testb
jnp
icebp
inc
add
add
inc
fbld
mov
lar
xchg
mov
add
mov
push
jl
mov
nop
stc
data16
mov
out
lcall
testb
in
cmp
inc
sub
movsb
icebp
jns
daa
pop
out
push
das
dec
daa
sbb
cwtl
fdivrl
jecxz
outsb
gs
cld
pop
adc
ficoml
clc
dec
nop
shll
push
xchg
and
xlat
push
lods
dec
add
jo
addr16
daa
adc
push
push
loopne
arpl
notl
outsl
js
mov
sbb
nop
sti
mov
test
test
lret
sub
xchg
jne
call
ret
inc
jp
mov
sbb
mov
dec
mov
flds
cmp
jmp
shlb
and
pop
call
int3
mov
fwait
repz
sub
add
test
enter
dec
pop
inc
mov
push
inc
lret
test
pusha
inc
shll
mov
push
push
inc
sar
dec
add
fistpll
call
fstpl
add
pop
add
add
shrl
cld
cmpsl
and
push
mov
insl
fstl
inc
rolb
jns
jecxz
outsb
xor
in
je
xchg
into
insb
imul
dec
fs
inc
jp
xchg
dec
pop
xor
xor
push
jl
inc
push
pop
cld
xchg
fwait
push
sbb
and
xchg
lahf
movsb
mov
nop
enter
xchg
pushf
pop
sub
inc
ljmp
lahf
inc
mov
jmp
inc
xchg
pop
jecxz
data16
sub
mov
pusha
mov
insb
in
push
add
pushf
enter
imul
push
pop
inc
mov
aam
cmpsb
bound
adc
mov
adc
repnz
xor
daa
test
dec
xchg
push
cmp
sbb
or
push
cli
and
mov
or
test
cltd
xor
dec
adc
mov
mov
add
or
mov
outsb
push
cmc
jge
xlat
mov
or
mov
add
add
std
sti
leave
sti
iret
jmp
dec
mov
jg
mov
add
mov
cs
sbb
pushl
lock
pop
les
aaa
in
jg
outsb
mov
subl
pop
mov
or
mov
popa
gs
push
inc
stc
jge
test
pop
xor
sbb
sub
dec
pop
mov
outsb
add
mov
and
mov
faddp
lods
inc
mull
scas
jae
rcrb
add
push
aas
xchg
ds
push
adc
mov
and
jae
cmpsl
dec
mov
or
hlt
pop
push
xor
ret
push
pop
cltd
jp
xor
outsb
test
dec
adc
xor
push
sbb
imul
fldcw
and
int
sarl
arpl
repz
add
jecxz
inc
nop
aas
xor
cwtl
sbb
xor
stos
add
shlb
mov
cld
xor
or
repnz
add
add
mov
xchg
pop
mov
mov
add
fcompl
test
or
xchg
dec
js
push
outsl
out
cmp
jne
arpl
mov
scas
xchg
push
jb
pop
add
xor
sub
mov
daa
test
out
fidivs
movsl
in
lock
daa
adc
mov
mov
in
lods
loop
dec
std
lock
mov
les
insb
pop
out
mov
mov
loop
xorb
fistpll
enter
in
dec
mov
ret
xchg
jns
mov
push
mov
dec
pop
xor
dec
inc
or
cmp
subl
lret
lea
inc
je
les
push
push
push
test
dec
not
sbb
fnstsw
scas
jp
shlb
vmptrld
dec
lcall
nop
shrl
lahf
mull
and
sarb
popf
jmp
add
jg
mov
xor
sub
push
mov
add
test
jae
sbb
inc
or
fcoml
ljmp
shlb
std
xchg
xchg
push
sbb
orl
mov
lret
xchg
cmp
xchg
cmp
xor
mov
sub
pop
insl
repz
adc
xlat
pushf
out
scas
icebp
test
ja
sbb
adc
dec
mov
cmpsl
clc
xchg
sbb
icebp
in
dec
xchg
mov
push
jp
xor
popf
lret
xorb
out
lret
mov
loope
or
jbe
dec
lcall
dec
and
xor
outsl
lret
fcoms
inc
insl
sbb
jmp
inc
xchg
push
pop
setne
xor
mov
dec
arpl
push
out
negl
and
jecxz
cli
es
pop
nop
movsb
sbb
insb
repz
add
roll
iret
xchg
mov
movsl
adc
add
inc
enter
pushl
into
fnstcw
pop
rolb
pop
add
add
stos
fwait
in
lcall
xchg
in
mov
fistpl
ret
xchg
std
inc
loop
and
jmp
pop
mov
aas
push
icebp
mov
rcl
mov
ds
dec
lds
jb
and
out
xchg
test
rcrl
sbb
and
mov
mov
arpl
enter
cmp
add
movsb
js
mov
cmp
push
mov
sahf
inc
xchg
aaa
adc
std
add
or
bound
and
xor
pop
js
xor
fiaddl
mov
sahf
lds
xchg
cltd
imul
mov
mov
push
xor
mov
mov
aaa
xor
test
xor
cmpl
sbb
add
xor
sbb
pop
pop
adc
inc
or
xchg
fsubs
stc
bound
sbbb
add
pushf
shrb
xchg
mov
imul
add
add
add
dec
popa
pop
ja
shl
or
mov
mov
xor
imul
out
fcmovnu
insl
ljmp
lcall
cmp
xor
insl
lds
mov
sti
aaa
out
stos
xchg
push
xchg
dec
cmc
outsl
xchg
cmp
loopne
mov
fisubl
jbe
pop
mov
mov
adc
outsl
pop
add
cwtl
nop
rclb
mov
out
dec
push
scas
test
dec
mov
xor
repnz
push
in
push
lods
jb
and
fists
pop
arpl
out
xor
cmpb
loop
lods
jne
ljmp
mov
jne
dec
and
add
cmpsb
add
xchg
mov
push
mov
xor
mov
sub
repnz
adc
mov
outsl
sbb
or
mov
fldl
mov
inc
out
xor
add
bound
xor
add
test
mov
fucomip
imul
add
pop
add
add
or
xchg
push
adc
xchg
or
ja
mov
mov
cld
adc
stc
cmp
jmp
push
jmp
inc
xchg
fwait
sub
shlb
imul
mov
jo
std
xchg
mov
fnstcw
ret
jl
mov
sub
sub
test
or
lahf
xor
push
mov
jno
es
push
pop
push
xchg
sbb
xor
lcall
mov
push
andl
leave
repnz
cmp
inc
outsl
sub
push
loope
inc
mov
aam
dec
adc
shll
std
xchg
repz
loopne
xor
xchg
shlb
lods
dec
std
adc
inc
imul
cmp
pop
lahf
and
cmc
xor
test
cmp
in
cld
inc
dec
inc
xchg
cs
orb
xlat
fists
push
rorl
add
sub
mov
pop
push
in
repnz
add
jne
jne
jg
loop,pt
lret
je
outsl
ret
add
pop
add
add
idivb
jb
mov
lret
xor
shll
shr
mov
sub
in
shlb
sub
int
out
sbb
mov
inc
lahf
mov
cmp
push
mov
dec
imul
mov
into
out
pop
jb
dec
mov
into
push
xchg
les
addr16
dec
push
test
stos
add
notb
outsb
lcall
popa
mov
mov
jbe
out
gs
inc
mov
cmp
push
jno
out
lods
outsl
shrb
jo
rcrl
stc
cmc
movsb
aad
ret
adc
pop
push
roll
sub
jno
sti
sub
pop
loopne
in
xlat
out
xor
xor
push
ret
sbb
push
clc
aas
and
roll
pop
mov
adc
jg
jae
push
sub
cmpsl
outsb
or
add
sbb
mov
mov
dec
add
aad
jbe
add
pop
add
add
es
jns,pt
pushf
mov
jge
dec
rorl
adc
push
pop
xchg
add
push
cli
or
cld
ja
mov
rclb
test
xchg
add
dec
cli
out
xchg
inc
jmp
push
sub
push
xchg
sbb
lock
pop
lock
iret
push
adc
rorb
rclb
add
cmp
add
add
out
jle
sbb
inc
or
xor
adc
ja
inc
jbe
lock
repnz
imul
mov
push
ljmp
push
sub
out
pop
mov
pop
cmpsb
bound
pop
les
sub
cwtl
inc
std
cli
xor
cmp
cmp
in
cmpsl
insl
mov
lret
xchg
imul
push
pop
or
and
jg
aaa
cld
test
and
and
dec
xchg
xorb
subl
insl
xlat
jnp
call
xchg
xchg
pop
pop
adc
pushf
movsb
or
inc
pop
cld
sbb
add
aam
add
and
outsb
jle
lods
testl
lret
jge
add
pop
add
add
jo
xchg
xchg
pop
inc
rorb
icebp
fcomps
jg
ret
jno
xchg
sub
sarl
inc
mov
pop
iret
fwait
or
mov
xor
and
rcll
lahf
mov
in
in
fwait
or
xchg
mov
cmp
push
gs
inc
rol
fists
insl
shlb
int3
gs
mov
mov
test
insb
out
imul
dec
cld
ss
mov
divl
stos
cmpsl
out
cmpsb
cltd
test
and
popa
jno
sub
mov
js
test
mov
lret
pop
inc
mov
gs
xor
pop
lods
cli
mov
mov
pop
dec
cs
enter
pop
ljmp
jge
jo
imul
add
adc
daa
shll
jmp
call
ljmp
xor
dec
scas
outsl
ror
push
and
add
mov
arpl
sti
leave
loop
test
add
pop
add
add
mov
arpl
mov
incb
ljmp
adc
lret
push
aas
and
pop
mov
push
out
movsb
inc
sbb
or
out
enter
cmc
sbbl
stc
jle
cmp
add
popf
sar
out
pop
xchg
jns
fstpl
xchg
sub
push
rclb
pop
cmp
or
adc
popf
add
pop
out
sbb
insl
fsubs
psrad
push
mov
jae
inc
and
or
or
cmpb
jmp
sahf
cltd
sbb
xor
and
inc
jp
jmp
lahf
sbb
inc
mov
pop
or
pop
clc
cltd
es
enter
mov
divl
popl
rolb
sub
mov
leave
cmp
test
cld
xchg
mov
inc
xchg
mov
inc
stos
xchg
test
rorb
jae
dec
sahf
mov
xor
in
add
out
sti
xlat
push
aam
or
sbb
add
pop
add
add
and
dec
mov
mov
repz
xor
mulb
dec
imul
mov
add
mov
add
int
mov
mov
into
int3
in
loope
sbb
stos
pushf
rorl
xchg
repz
adc
lock
mov
xor
xchg
movsl
mov
xchg
pop
daa
rclb
fisttpll
mov
push
jns
cld
sbb
pop
mov
or
cmc
aas
mov
push
jne
ds
ficoms
cwtl
ret
enter
aas
fucomip
testb
xchg
pop
mov
roll
mov
out
lods
sub
jmp
pop
aaa
shlb
add
dec
icebp
cmp
icebp
stos
int3
sbb
mov
int
rcl
mov
jns
ret
cmp
mov
cmp
push
mov
jmp
jge
es
mov
jnp
jge
xchg
push
jecxz
ds
sub
cmp
jg
dec
das
pop
mov
sub
xchg
enter
add
add
add
push
cmc
ss
mov
lret
mov
add
mov
imul
mov
fcompl
popf
inc
pop
cmp
mov
test
rcrl
jl
mov
add
push
mov
mov
push
repz
imul
pop
fnsave
jae
pop
rcrl
push
add
push
ss
ds
insb
in
ljmp
test
sbb
jne
jno
xor
out
add
jle
mov
inc
fimull
lahf
jmp
or
in
xchg
mov
xchg
mov
mov
test
lds
and
fisttps
cwtl
push
pop
or
fsubr
jbe
loop
or
push
mov
lock
popf
imul
mov
out
ss
out
fidivrl
xchg
cmpsl
push
adc
out
aam
ljmp
mov
or
jmp
ds
repz
movsl
inc
cltd
leave
add
pop
add
add
shr
and
sbb
dec
xchg
lock
call
adc
push
xor
arpl
out
sub
arpl
adc
pop
in
lret
mov
fistpll
fwait
call
add
add
push
aam
lods
aaa
repz
xlat
sbb
call
cmpsb
pop
insb
pop
stc
aam
cltd
lret
or
cmp
loop
cmpb
shl
rcl
imul
mov
ret
ret
insb
mov
push
adc
inc
dec
inc
xchg
into
stos
call
and
ljmp
pop
jb
rorl
xchg
int3
inc
push
ljmp
stos
lret
int
adc
rolb
scas
xchg
sub
aas
sbb
push
dec
push
ljmp
pusha
or
sbbb
loopne
sbbb
cmp
fsubr
mov
mov
mov
and
lret
pop
add
add
lahf
insl
les
sbb
cmp
stc
pop
sbb
insl
xchg
jnp
mov
mov
imul
pop
lock
sarb
int
mov
push
xor
ja
out
fdiv
adc
in
or
rolb
test
jmp
les
bound
sub
ficoms
sub
imul
popf
xchg
xor
ja
mov
sbb
enter
push
jg
xchg
adc
xor
lret
rclb
pop
push
icebp
or
cs
jne
jne
cmp
dec
int3
shrl
cltd
push
icebp
scas
lcall
xor
adc
out
js
inc
mov
adc
loopne
scas
dec
xchg
popl
ret
and
and
out
jmp
lea
xor
push
jo
ss
xchg
dec
xor
and
xchg
and
jle
mov
add
enter
in
adcl
cmpsl
lret
add
pop
add
add
rcll
xlat
fimull
ljmp
or
push
add
test
inc
in
fwait
pop
popf
push
outsb
cld
adc
inc
adc
cmc
filds
sbb
addb
scas
repz
pop
fidivs
cwtl
ret
fisttpll
dec
push
push
mov
jne
outsl
mov
imul
cmpb
push
push
push
mov
jp
or
into
dec
pop
mov
add
and
dec
push
jecxz
or
push
mov
out
mov
sahf
cs
lahf
cmpsl
aas
pop
icebp
jns
test
xor
clc
ss
ja
sbb
mov
sbb
xor
repz
je
sbb
loope
insb
imul
loope
or
sar
push
add
mov
dec
sbb
cmpsl
cmp
sub
fcomi
stc
inc
and
cs
sbb
inc
out
dec
xor
jmp
add
imul
cmc
decl
pop
aam
int3
add
pop
add
add
inc
les
inc
mov
fisubrl
cmc
xchg
fsts
push
adc
icebp
out
and
push
lods
orb
and
xor
stos
or
and
movsb
jo
lea
andb
dec
push
ds
clc
in
jae
cmc
xchg
or
ljmp
xlat
neg
mov
in
xchg
pop
sub
out
sub
fsubl
out
jae
sub
pushf
xchg
stc
ja
xor
pop
inc
into
mov
sub
lcall
mov
or
in
cmp
xchg
lods
out
sar
mov
out
and
jb
mov
mov
sbb
fisubrl
mov
mov
xchg
cld
adc
lret
dec
bound
adc
and
ds
lret
dec
data16
movsl
mov
iret
arpl
or
andl
int
add
add
add
xor
pop
cltd
lock
into
pop
mov
fisttpl
mov
call
arpl
push
cmp
mov
repz
jo
xor
rcll
shl
scas
dec
mov
mov
test
xor
sub
lcall
sbb
cmpsl
mov
std
sub
pop
or
and
sub
in
test
cmpsl
out
dec
dec
sbb
sub
mov
stos
orl
subb
or
divl
jne
xor
in
in
mov
add
push
lods
mov
and
xor
outsl
cltd
mov
cmp
add
pushf
ds
inc
fbld
cmp
add
rcrl
add
xor
inc
nop
jl
cmp
sub
iret
popa
cld
pop
push
mov
lcall
cmpsl
fcompl
mov
lea
enter
add
add
out
into
shlb
sbb
jmp
pop
add
add
xchg
mov
shlb
out
xchg
add
cmp
mov
jns
mov
movsb
jno
push
and
sub
inc
push
loopne
scas
inc
push
mov
rcrl
mov
cwtl
je
in
jge
sub
ljmp
cmp
pop
sahf
or
push
outsb
mov
xor
xor
iret
adc
xchg
mov
pop
adc
fmuls
into
int
scas
aas
push
adc
dec
or
lock
pop
iret
ljmp
add
mov
mov
ficomps
and
adc
repnz
inc
cmp
inc
mov
mov
adc
mov
sub
mov
adc
push
out
imul
in
ficompl
mov
or
xchg
dec
pop
mov
or
and
enter
sbb
cmp
adc
jb
orl
mov
mov
jecxz
dec
mov
add
xchg
and
je
out
mov
xchg
shl
rol
add
pop
add
add
sbbb
or
pop
scas
xchg
push
rclb
mov
jmp
push
imul
pop
mov
or
shrb
cltd
inc
mov
cwtl
lcall
xchg
add
loopne
es
dec
negb
loop
cmp
sub
fidivrs
in
rcrl
lret
aas
xchg
repz
cmpsb
lods
pop
mov
mov
mov
mov
inc
aas
or
jbe
cmpsl
inc
repnz
mov
je
inc
xlat
mov
lret
pop
imul
repz
iret
or
sub
and
pop
sbb
inc
stos
jle
add
inc
mov
push
nop
cld
out
repz
popa
fistpll
aam
and
pop
sahf
mov
jmp
mov
dec
adc
jl
pop
xlat
ficompl
jno
push
jo
sub
xor
jae
jp
sahf
inc
cld
popf
imul
insl
mov
lock
xchg
xchg
add
dec
daa
dec
das
outsb
imul
sub
fdivrl
add
add
add
into
adc
xlat
inc
fmul
enter
push
clc
lea
xchg
popa
push
pop
aas
aad
je
add
add
mul
lods
mov
add
add
inc
adc
inc
mov
sbb
push
mov
jno
mov
jb
shll
push
and
jle
roll
insl
adc
arpl
mov
faddl
rcll
sub
sub
ljmp
notl
dec
push
dec
xchg
mov
jbe
imul
into
mov
popl
fistpll
cmp
movsw
icebp
inc
repnz
movsb
in
push
inc
into
call
jg
sbb
pop
lock
and
imul
stc
in
dec
ds
xchg
ljmp
xor
outsb
dec
add
arpl
clc
outsl
or
jecxz
insl
add
popf
mov
lahf
xor
add
rcl
add
pop
add
add
pop
addr16
mov
daa
out
jae
cwtl
gs
mov
addl
cs
push
loop
mov
xor
jns
pop
mov
dec
sub
jmp
xchg
push
andl
or
lahf
xor
cmc
rclb
fs
hlt
adc
sarl
push
ficoms
push
shll
es
inc
bound
out
mov
inc
gs
xchg
dec
push
dec
jg
xor
in
stos
sbb
test
or
das
push
dec
dec
adc
add
xor
orl
nop
sub
cmc
fbstp
xorb
test
jne
js
or
outsb
push
jae
aas
std
cmpl
xor
mov
insl
test
and
das
out
pop
jle
lret
fcom
lahf
in
push
or
sub
mov
data16
add
mov
and
test
jbe
xchg
mov
pop
std
call
mov
mov
mov
inc
sbb
sub
fcom
add
pop
add
add
popa
repz
xor
mov
bound
enter
out
lock
xchg
mull
jecxz
outsb
pop
inc
loope
scas
imul
sbb
adc
push
in
test
xchg
movsl
jmp
into
fcompl
sarl
mov
jae
pushf
xchg
jne
dec
lea
aam
movsl
cld
cmp
inc
jmp
sbb
cmp
inc
sbb
xchg
sbb
or
leave
out
fdivrs
mov
aad
scas
inc
pop
inc
mov
dec
pop
mov
add
push
ret
into
imul
inc
and
jno
xor
pop
jo
ret
push
add
lahf
push
aad
cmp
pop
adc
inc
fsubrl
mov
movsl
inc
push
pop
jmp
mov
inc
out
pop
popa
pop
lret
sahf
je
pop
movsl
out
sub
xchg
ret
iret
call
cmp
fldcw
fwait
bswap
fcomp
mov
std
xor
cmovge
mov
xor
add
sbb
in
and
roll
add
add
add
xlat
and
inc
sub
cwtl
pop
push
loopne
push
push
cmc
dec
add
sahf
fistpll
pop
push
push
mov
cmp
jae
sbb
push
gs
inc
push
mov
xchg
lock
aas
cmp
in
pop
push
cmpsb
adc
dec
fistpll
push
orl
add
and
xor
xor
mov
inc
je
xlat
adc
mov
dec
cli
mov
popa
xchg
dec
jo
fcomip
and
dec
push
add
ret
movsl
in
or
decl
cmp
pop
rorb
sub
aas
stos
subl
les
es
add
sbb
jns
mov
aam
pop
lret
jg
fldenv
and
insb
dec
mov
insb
mov
jno
mov
add
mov
ret
bound
inc
xorl
cmpsl
loop
das
insb
or
mov
pop
addr16
mov
cmp
mov
add
add
ds
stc
fadds
mov
aam
add
add
add
and
adc
adc
push
mov
andl
xchg
loope
aad
pop
xchg
aaa
cmp
imul
ret
add
mov
shrl
cltd
dec
sub
dec
xchg
popl
stos
sbb
xor
pop
mov
xchg
push
push
insb
jb
mov
mov
imul
out
andb
inc
and
cmpsl
in
mov
cmc
push
pop
loopne
xchg
cmpsb
test
imul
pop
fisubrl
loop
xchg
or
cmp
repnz
add
sub
mov
in
lahf
mov
sarb
cmp
fdivs
cltd
and
not
xchg
xchg
scas
or
dec
fs
jno
or
sub
dec
cmpsb
mov
mov
sub
xor
xor
dec
mov
cmp
pop
fcomps
imul
daa
sarb
jnp
js
xchg
mov
xchg
adc
test
std
mov
add
lcall
fisttpll
call
add
add
add
and
mov
xor
outsl
sbb
bound
mov
lret
ret
imul
aaa
rol
adc
inc
push
sub
in
and
jnp
jne
add
in
mov
data16
cmpsb
loope
enter
pop
fldcw
out
xchg
fisubs
psllw
daa
mov
adcb
mov
loope
add
flds
xor
cmp
mul
jae
xchg
inc
dec
inc
jb
int3
push
jne
mov
inc
jmp
sbb
into
jp
ret
mov
mov
adc
jno
movsl
xchg
mull
icebp
loopne
add
pop
pop
mov
dec
and
mov
outsl
mov
and
in
stos
leave
mov
pop
cmpsl
lea
push
jb
frstpm(287
imul
mov
cmp
jg
xchg
mov
out
hlt
add
pop
add
add
pop
aaa
jle
test
pop
cli
inc
stos
les
mov
in
test
mov
or
xchg
sbb
and
repnz
mov
mov
xchg
mov
xchg
jno
pop
adc
sbb
and
push
cwtl
or
pop
adc
jno
pop
pop
sub
ljmp
pop
push
sub
es
jg
insl
push
mov
mov
in
add
in
test
inc
fsts
pop
push
adc
adc
hlt
call
jmp
push
jo
mov
push
add
out
repnz
stos
in
sti
mov
sar
pop
cmp
pop
sub
mov
lahf
sub
add
lea
ret
nop
push
arpl
xchg
jo
nop
insl
rol
jge
push
call
push
faddl
sub
orl
cmp
dec
scas
sub
out
mov
imul
sbb
imul
cld
push
leave
sub
add
pop
add
add
inc
sbb
mov
pop
cmp
mov
ror
nop
inc
and
add
and
in
jmp
lock
cmc
cmp
imul
cmp
mov
stc
mov
lods
lahf
lret
add
bound
mov
push
sub
mov
push
pop
testl
push
dec
mov
and
adc
out
pop
xchg
xchg
cmp
popw
push
dec
jl
dec
lea
out
sub
inc
hlt
pop
inc
loope
mov
pop
xchg
cmp
sbb
out
xchg
mov
movsb
or
icebp
push
lahf
sbb
and
in
mov
push
and
sti
scas
xor
inc
je
cmpsb
cmpsl
negb
stos
mov
repz
lock
addb
xor
and
sahf
inc
dec
mov
popf
subl
adc
adc
add
out
fldcw
push
adc
xchg
sbb
push
test
add
add
pop
add
add
cmp
fidivrs
in
dec
jle
and
mov
add
dec
rcll
add
cli
stos
cwtl
std
fldenv
mov
pop
push
ljmp
adc
dec
rcrb
adc
sub
inc
sbb
lret
add
repz
push
xor
inc
hlt
push
cmpb
pop
pop
sarl
shrb
adc
jl
cmp
dec
ja
dec
scas
mov
scas
pop
jno
or
sub
push
adc
push
mov
cwtl
das
cli
mov
push
or
idiv
push
pop
sub
push
pop
jnp
cmp
popa
fucomi
repz
add
mov
das
push
sahf
mov
mov
insb
pop
sti
test
add
or
pop
test
loope
js
xchg
outsl
sub
je
adc
push
adc
fiaddl
in
je
adc
ficoms
mov
jbe
stos
adc
mov
mov
cmp
add
sbb
sahf
cmc
fsubrp
jnp
push
xor
fiaddl
add
add
add
pop
cmp
and
ja
mov
movsl
xchg
repnz
cld
adc
hlt
adc
jno
orl
add
outsl
cmpsl
imul
addr16
test
xchg
js
imul
cmc
addb
sub
mov
inc
pop
imul
xchg
adc
lret
inc
repz
jle
pop
pop
cmp
out
jne
fs
adc
xchg
and
andb
and
lret
out
mov
inc
ss
pusha
jge
add
mov
cmp
ret
xor
ret
jns
jbe
jnp
addb
cmp
sbb
adc
mov
inc
jmp
jmp
xchg
sahf
jg
das
push
jle
lcall
cmp
push
rclb
fucom
int
popf
mov
xchg
cwtl
push
push
testb
jae
outsl
into
aad
xchg
sub
pop
xor
dec
pop
leave
xor
xor
push
add
jle
jg
std
fisttpl
inc
push
notl
add
pop
add
add
dec
and
inc
push
mov
lret
jne
adc
and
inc
jnp
fs
and
scas
sbb
xlat
inc
sub
mov
stos
sbb
and
cs
jp
mov
mov
pop
cwtl
jmp
xor
ret
pop
inc
xor
dec
mov
jmp
test
mov
jns
popa
cmp
bound
cld
test
cltd
mov
in
add
mov
push
jno
cmp
out
fwait
aaa
rorl
jge
movsl
mov
dec
cwtl
lods
mov
movups
cmp
loopne
and
sbb
pop
rcrl
add
int
push
arpl
rcl
jmp
sub
push
and
clts
addb
sbb
or
cmp
jne
inc
mov
xchg
xchg
loope
jno
mov
cwtl
sbb
xchg
in
jmp
add
add
mov
sti
idiv
lods
push
mov
and
pop
add
add
stc
inc
or
mov
push
pushf
lahf
lahf
push
xchg
pop
pop
mov
rorb
cmp
aad
rorb
mov
adc
cltd
or
mov
xchg
insb
enter
outsb
cmp
mov
fidivs
incb
ret
addl
subl
cld
test
std
pop
out
jl
in
fdivl
mov
stos
and
jge
mov
arpl
sbb
ds
std
sarl
arpl
mov
cltd
pop
fisttpll
or
mov
mov
enter
pop
outsb
out
arpl
outsl
sub
mov
sub
bound
xchg
and
cmp
cmp
test
xchg
and
jae
test
sarb
fs
pusha
mov
sbb
mov
cli
popf
mov
inc
add
cs
fmull
sub
and
je
add
sbb
jmp
addr16
aas
repz
add
add
add
enter
xchg
jbe
adc
mov
adc
rcr
ljmp
mov
leave
stos
les
cwtl
mull
mov
mov
push
inc
inc
aas
and
fidivl
andb
rcr
and
sahf
cmc
pushf
jl
add
sub
pop
fsubrs
sbb
mov
push
mov
int
sahf
adc
jl
sbbl
inc
sub
sbb
inc
and
js
js
fsubrl
mov
add
outsb
xor
pushf
mov
mov
fdivr
aam
das
inc
lahf
in
dec
sar
mov
out
shr
into
push
dec
and
jbe
mov
into
iret
shlb
xchg
pushf
icebp
les
dec
sub
fcmovbe
mov
andl
push
pusha
sbb
inc
mov
xchg
stos
xchg
jge
mov
je
dec
cmpsb
subb
mov
push
in
jecxz
xchg
mov
add
push
out
jb
shrl
and
add
add
lret
fmull
or
cmp
push
out
pop
shrl
cmp
jb
or
cmp
in
lods
and
cwtl
repnz
cmp
xchg
icebp
mov
xor
xchg
and
or
xchg
cmp
sub
sbb
daa
nop
imul
ret
popf
pop
pop
dec
mov
push
nop
mov
psllw
pop
loop
int
movsl
and
mov
scas
cld
or
push
sbb
jbe
push
call
inc
jmp
aam
lret
aam
push
dec
mov
inc
loope
jo
push
or
add
lods
push
dec
pop
push
or
aas
mov
scas
add
jns
xchg
aad
pop
add
pop
clc
xlat
in
cmp
into
test
shll
orl
aam
setno
mov
inc
pop
add
movsl
popa
mov
shrb
daa
outsb
pop
pop
lss
into
outsl
mov
sbb
imul
add
mov
lcall
iret
mov
stc
divb
in
into
sub
add
pop
add
add
adc
or
adc
rorb
mov
xchg
jae
add
adc
dec
mov
stos
fs
scas
xor
in
mov
ljmp
adc
mov
je
ljmp
shlb
and
in
or
cli
ret
adc
adc
in
mov
jecxz
shr
add
sbb
nop
xchg
mov
lock
adc
add
stos
mov
or
testb
jb
stc
pop
or
loope
add
mov
push
push
or
test
orb
push
leave
jae
push
pop
or
stos
adc
sbb
iret
subl
fildl
pop
pushf
jl
bound
out
scas
mov
cmp
sti
sub
adc
add
adc
or
iret
movsl
push
add
mov
jns
in
lcall
add
add
add
mov
jns
call
sub
dec
push
mov
cld
push
cmp
xchg
sbb
mov
leave
lds
movsb
aad
leave
mov
and
jo
mov
test
mov
mov
cmpsl
or
in
pop
fcoms
aaa
dec
mul
adc
dec
inc
or
pop
jo
lock
mov
jl
es
loop
insb
test
xchg
test
into
cltd
scas
sbbl
sub
in
pop
test
mov
aaa
fsubl
mov
cmp
add
dec
push
std
mov
sbb
xchg
callw
stos
pop
jbe
scas
push
shll
mov
inc
ja
adc
ss
jne
ffreep
mov
push
cmp
lock
je
lcall
inc
add
ss
mov
lods
std
fbstp
int3
adc
pop
icebp
test
jae
mov
add
jae
fadd
fsubp
jnp
mov
add
cmp
add
pop
add
add
jne
sbb
fucomi
rol
ja
mov
pop
fisubrs
xor
sub
jecxz
and
add
pop
sub
lock
js
dec
sub
inc
push
mov
pop
bound
xchg
or
inc
dec
cmp
repz
adc
fwait
icebp
adc
fwait
mov
popf
push
cmpsl
lcall
mov
lret
mov
sub
adc
clc
std
psraw
pushf
in
lcall
cwtl
lahf
popa
mov
mov
repz
iret
lea
test
pop
lock
int
mov
jmp
into
popa
and
inc
mov
push
fdivrs
sub
mov
pushfw
pop
mov
add
cmp
cmp
call
xor
mov
inc
outsl
cwtl
lahf
dec
scas
filds
xchg
sub
mov
mov
add
pop
insb
les
fistps
jmp
lret
sub
jns
pop
jns
sbb
xor
add
sub
cld
cli
jle
fmuls
sub
add
pop
add
add
push
push
jmp
pusha
je
mov
push
and
stc
xchg
psraw
out
push
cmp
xchg
dec
mov
dec
aaa
popa
xor
lds
rclb
or
sub
jae
notb
sbb
test
mov
loopne
or
repnz
jmp
adc
push
pop
jno
rcrl
stos
mov
adc
cli
hlt
sbb
ljmp
inc
inc
out
mov
repz
fimuls
cld
stos
in
jmp
sbb
cmp
dec
adc
push
shll
dec
inc
int3
sbb
mov
jp
jo
adc
mov
aad
shrl
pop
cli
arpl
mov
shrb
pop
push
addr16
jmp
in
push
out
lea
loopne
inc
mov
adc
cli
je
pop
in
adc
xchg
or
mov
mov
jo
or
dec
pop
xchg
notl
pop
push
lcall
add
ja
sti
ret
or
pop
push
cltd
cmpsb
call
pop
add
add
mov
test
mov
es
xchg
lret
push
mov
pop
ja
cmp
sub
lahf
and
clc
cmc
int3
and
mov
mov
loope
sub
dec
push
scas
jbe
cmp
cmp
lock
cwtl
pop
mov
or
push
mov
cmp
push
aas
cmpsl
nop
in
dec
lods
xor
insl
fimull
fbld
jl
repz
or
dec
push
aas
clc
inc
movsb
test
push
xor
mov
xor
in
fdivs
jne
jg
fwait
jle
xchg
loop
lret
mov
and
scas
rcrb
loopne
nop
or
xorl
jp
push
mov
cmp
xchg
xor
push
adc
mov
notl
push
lds
add
and
xor
sub
jge
push
movsl
popf
add
into
arpl
cmp
orb
add
add
add
xchg
push
clc
jecxz
mov
pop
adc
out
cmpsb
out
ja
addr16
out
inc
mov
lods
push
adc
mov
pop
sbb
fistpl
roll
mov
stc
test
fdivrl
negl
jge
xchg
cmpsl
or
bnd
stos
add
negl
gs
mov
test
repnz
xchg
pusha
ds
bound
in
sub
push
inc
mov
sbb
add
into
cltd
jl
shll
lcall
mov
sub
insl
push
clc
into
sti
dec
movsl
lock
stc
insb
loope
mov
imul
pop
add
rorl
movsl
add
or
and
cwtl
xor
push
dec
xchg
sub
adc
dec
push
or
push
pop
add
and
add
insl
jbe
adc
pop
test
add
or
jp
cltd
cmc
adcb
fcos
add
nop
repz
fwait
xchg
push
in
add
add
add
out
enter
push
ljmp
xchg
pop
cmp
ret
lods
out
cmc
mov
push
imul
dec
stos
pop
mov
shl
stos
sbb
jp
xor
enter
jg
mov
daa
or
sbb
in
push
jmp
loopne
aas
pushf
xchg
push
push
outsb
je
movsl
mov
sub
lods
add
daa
repnz
lods
cmc
pop
stos
pop
aaa
mov
mov
jne
out
cmpsl
out
mov
ret
in
ret
pop
in
not
pop
inc
push
cli
nop
mov
arpl
imul
ret
push
daa
cmp
sub
enter
jns
and
fistps
inc
cmp
js
lea
push
jae
mov
pop
mov
stc
pop
adc
jb
jmp
movsb
aaa
js
pop
insl
inc
sbb
sub
stc
int3
rep
mov
pop
jnp
push
add
add
lock
jg
mov
sub
pop
out
add
add
add
addb
and
or
out
in
mov
aas
inc
bound
cmp
and
mul
lahf
mov
mov
adc
xor
leave
inc
out
addl
push
ss
jg
sub
std
rol
or
ret
test
and
pop
xchg
fwait
daa
push
test
pusha
stos
or
leave
pop
sbb
cmp
fistps
lahf
cmp
pop
fnstcw
jl
sub
divb
cmp
pop
enter
jns
stos
in
mov
sub
out
iret
cmc
arpl
cli
push
jns
adc
fwait
lahf
pop
jne
pusha
sti
sub
sub
mov
out
lods
in
mov
inc
fs
mov
aaa
fistps
scas
mov
push
rcrl
mov
pop
in
in
add
push
das
lds
jecxz
and
pop
test
imul
sub
add
xchg
fwait
cwtl
pop
popf
pop
xlat
fldt
push
xor
out
add
add
add
test
dec
std
arpl
push
jecxz
cmpsl
testb
aam
push
test
xchg
xchg
mov
xor
ret
imul
outsl
pusha
inc
mov
pop
sbb
pusha
dec
pop
mov
xor
lcall
ss
repnz
lahf
dec
ficompl
jnp
repz
sarb
sarl
movsb
icebp
cmp
in
mov
jmp
scas
xor
xchg
jl
xchg
std
inc
stc
je
push
into
iret
call
roll
clc
es
fs
jp
and
cmp
cmp
js
push
dec
dec
outsl
inc
cltd
pop
push
aaa
fistpl
and
mov
pop
xlat
test
cmp
jns
addr16
stc
push
imul
and
insl
shlb
mov
push
dec
in
orb
icebp
addr16
loope
pusha
sbb
rcll
arpl
cwtl
data16
mov
stc
mov
dec
js
stc
mov
mov
loop
call
add
in
xchg
and
fwait
sbb
adcl
xlat
jo
ficompl
aam
jb
inc
out
mov
xor
push
fs
mov
movsb
dec
in
ljmp
js
xlat
bound
push
imul
inc
inc
sbb
nop
out
mov
leave
adc
xchg
in
sahf
leave
scas
xchg
dec
add
loope
popa
popa
pop
mov
cmc
cld
sbb
push
xchg
popf
test
adc
aaa
imul
pop
daa
jns
mov
aas
out
in
ljmp
xchg
int3
aad
mov
sub
lahf
mov
sub
hlt
pushw
push
testl
push
sub
daa
inc
sub
rorb
xor
push
cmpsb
inc
andl
push
lods
aaa
or
loop
scas
mov
addw
inc
or
mov
xorl
xlat
add
insl
repz
jae
jg
lock
jmp
add
xchg
xor
xor
gs
ss
add
sub
mov
sbb
add
loopne
arpl
mov
lret
subb
data16
fcmovnbe
cmp
imul
je
cltd
xchg
jl
cmpsb
leavew
jns
jbe
mov
cld
lret
sub
testb
xchg
adc
cmc
and
adc
jl
jp
cs
incb
mov
sahf
mov
pusha
js
popa
push
adc
dec
inc
cltd
repnz
inc
dec
mov
clc
cmc
push
mov
les
inc
test
mov
scas
ret
mov
xor
dec
fwait
stos
stc
or
cmp
mov
or
movsl
and
xor
xchg
sub
fbld
mov
scas
adc
mov
jmp
cmp
repz
push
in
mov
cmc
push
mov
in
out
fwait
imul
stos
adc
inc
cs
push
nopl
jge
add
mov
pxor
jnp
es
mov
add
add
add
aas
cmp
insl
cmpsb
outsl
sbb
xor
lods
clc
sbb
mov
fmul
js
and
jnp,pt
popf
or
imul
fwait
leave
adc
sub
push
ja
fstl
repnz
das
dec
add
push
mov
fs
jge
xchg
lret
mov
xlat
and
lret
lret
cmp
cs
jbe
rcll
dec
mov
adcb
mov
and
push
mov
adc
jae
ljmp
scas
in
sbb
call
xor
je
in
cmp
sub
adc
cmp
inc
pop
xor
jnp
add
daa
aas
add
dec
insl
xor
cli
lahf
mov
xchg
test
mov
mov
jmp
outsl
inc
cli
mov
mov
lock
mov
push
push
jbe
shrl
add
subb
jns
mov
mov
pop
add
add
inc
insb
xor
loope
mov
std
add
pop
stos
loope
shlb
push
cmpsl
cmc
imul
mov
or
in
jb
or
or
dec
jno
cmpsl
in
femms
lcall
roll
imul
daa
pusha
outsb
movsl
mov
je
mov
adc
mov
hlt
js
cld
pop
ret
insl
lret
in
xchg
sbb
je
popa
cld
popf
shlb
mov
push
push
sub
and
sub
add
sub
test
cmpsb
scas
jno
jbe
add
out
shl
xor
lods
data16
lcall
inc
data16
cmp
or
cmp
inc
movsb
shrb
clc
clc
lea
loop
add
test
dec
mov
out
inc
add
in
loopne
dec
das
sarl
sbb
dec
addr16
notl
rorb
add
jb
scas
incb
out
dec
out
fs
rorb
xchg
add
pop
add
add
fstpt
add
mov
cwtl
adc
dec
leave
add
jno
sbb
pop
jmp
mov
xor
cmc
lds
sbb
daa
add
jl
in
add
aaa
cmp
xor
std
mov
dec
addr16
fwait
ret
mov
jbe
shl
pop
add
ror
cmp
inc
mov
icebp
add
pop
or
dec
cmp
sbb
xor
int
rorb
pusha
or
inc
mov
and
ss
pop
fdivp
fiaddl
fcom
mov
or
push
push
mov
lods
xchg
clc
dec
adc
aaa
jge
and
sar
xchg
jmp
xor
gs
mov
leave
add
cmp
cmpsl
fisubrs
adc
and
cmp
jbe
in
mov
sbb
cmp
mov
ds
test
pop
add
xlat
mov
xchg
out
pusha
mov
add
pop
add
add
add
pushf
insl
adc
outsb
in
in
orb
inc
lret
shl
xor
or
mov
lods
mov
dec
push
mov
iret
inc
aas
daa
and
enter
xor
dec
dec
ficompl
lods
xchg
or
out
mov
rcrb
scas
out
push
jp
je
in
jle
cmp
outsb
xor
or
inc
mov
ret
sub
enter
dec
into
lds
test
mov
and
test
pop
aas
das
xchg
or
sbb
cmpsl
das
ljmp
mov
lods
or
rcrl
cmp
push
xchg
add
xchg
adc
test
sbb
xchg
jo
mov
hlt
mul
dec
push
push
mov
mov
into
push
roll
js
fldcw
aaa
sbb
popw
cmovne
cmp
scas
aas
daa
mov
cmp
iret
push
inc
mov
ja
inc
and
lods
cmp
lods
aas
mov
mov
fists
add
add
xchg
xchg
nop
push
out
leave
push
ror
push
dec
cli
cmp
ljmp
and
mov
xchg
movsl
adc
das
test
jae
add
scas
add
sbb
mov
insb
mov
or
popl
movsb
mov
sub
sbb
dec
sub
mov
stc
pop
inc
imull
repnz
insl
xlat
fsub
gs
icebp
lret
shl
mov
movsb
add
cwtl
sub
iret
xor
dec
imul
mov
outsb
xchg
inc
movl
fs
shr
lds
inc
shlb
scas
adc
stc
add
dec
int
lret
jo
push
inc
icebp
sar
shrl
mov
icebp
loope
je
mov
xchg
jl
dec
adc
js
in
addl
and
mov
mov
ficoml
adcl
adc
lods
mov
sbb
fmull
sbb
add
add
mov
sti
mov
ffreep
push
pushf
out
add
pop
add
add
out
mov
ljmp
inc
jge
push
mov
xor
movsl
aad
incb
mov
idivb
and
sbb
ss
jmp
mov
sub
into
lea
push
inc
dec
mov
movl
xchg
sti
xchg
dec
vpunpckldq
push
pop
insb
pop
xor
sbb
lret
aas
cltd
dec
pop
imul
mov
ja
and
pop
sarb
popa
mov
sbbb
mov
pop
or
add
int
lock
xchg
mov
cltd
insb
inc
push
add
dec
fs
push
or
jl
mov
sub
xchg
add
fisubrl
rolb
fnstenv
int
pop
lret
cld
pop
js
ficoml
cli
ret
lret
fistps
xchg
cmp
pop
fldl
imul
arpl
or
push
cmp
adc
neg
jge
mov
stc
pusha
cs
pop
mov
add
add
mov
sbb
test
dec
ja
lret
mov
sub
andb
sub
xlat
pusha
outsl
xchg
fs
ljmp
mov
pop
xchg
adc
sub
mov
aas
clc
xchg
cmp
cmp
aas
fs
icebp
clc
xchg
mov
and
xor
xchg
xlat
sbb
out
jne
mov
push
insb
push
pop
adc
icebp
lock
les
xchg
mov
pop
je
sbb
lret
xchg
scas
mov
pop
lcall
lcall
dec
dec
push
cmp
scas
stos
mov
xchg
rcll
int
cld
mov
out
cmp
loope
push
cmpsb
mov
lods
test
fcomip
xchg
or
xchg
cmp
aad
push
mov
ret
hlt
dec
xlat
cmp
ja
stc
popa
mov
shll
stc
fdivl
int3
push
add
sub
outsl
or
pop
cmp
outsl
jg
jg
xor
lret
rorl
icebp
add
pop
add
add
jnp
or
mov
and
jmp
loopne
mov
pusha
fwait
or
adc
xor
lea
mov
dec
xlat
aam
shufps
popf
mov
popf
je
sti
inc
and
arpl
push
mov
loopne
enter
sahf
or
dec
jl
cmpl
push
rcrb
jle
mov
adc
push
fiadds
lcall
int3
and
aad
lock
sbb
cmc
lret
mov
jp
into
push
mov
pop
push
aas
nop
stos
ljmp
mov
push
xor
fs
test
outsb
or
xchg
mov
test
cmpsl
popf
cmc
cwtl
add
and
xchg
jns
push
xchg
sbb
repnz
mov
jmp
adc
jns
arpl
insb
leave
push
ss
inc
in
jmp
leave
pop
or
mov
push
add
ja
and
aaa
divl
nop
ds
mov
add
pop
add
add
push
testb
fildll
jl
fwait
and
sub
xchg
fmul
inc
cmp
and
or
pusha
xchg
dec
add
negb
lea
aas
ljmp
or
insb
es
repz
and
pushf
fdivrl
xchg
pop
das
cli
idivb
fisttps
or
cmp
insl
data16
push
fidivl
mov
add
fistpl
int3
cmp
xor
or
push
jecxz
add
loopne
in
aaa
or
or
fldl
push
sbb
mov
push
mov
popf
test
pop
lods
sbb
sub
mov
data16
lods
fistpl
mov
jne
sub
lss
ss
push
pop
repz
lock
jge
cmp
stos
ds
call
mov
fsubs
push
sub
sarb
mov
mov
jne
mov
mov
sbb
in
xchg
jecxz
jmp
mov
xor
jge
mov
add
add
mov
jecxz
inc
mov
scas
sbb
es
out
jno
lds
int
jbe
popf
dec
or
leave
repnz
pop
stos
pop
aaa
mov
xor
pop
jo
adcl
repnz
int
pusha
push
push
popf
ret
fdivs
mov
push
lcall
in
mov
bound
and
push
test
iret
int
test
pop
add
mov
into
xchg
and
cmpsb
sub
cltd
popf
mov
fldl
cmp
sbb
inc
sub
cs
cwtl
inc
pop
push
jmp
call
dec
in
dec
or
mov
add
fstl
cmpsl
shll
sub
fcmovne
sub
jp
push
out
aas
push
cmp
int3
sbb
cli
in
pusha
inc
loope
dec
aaa
push
cltd
mov
decl
xchg
ds
fistps
sub
cmpsl
ret
test
jle
jne
add
sub
mov
add
add
cmc
cli
cmc
lret
sbb
addr16
mov
mov
sub
stos
popf
cmpsl
out
xor
stos
lods
repnz
rorl
sub
outsl
push
or
subl
insl
mov
cmpsl
stc
repz
jmp
or
shrl
inc
cmp
rcll
dec
aas
ret
rolb
adc
dec
adcb
xchg
jg
jbe
leave
cmp
or
xchg
lahf
les
add
arpl
xchg
int
dec
sbb
sbb
and
lcall
sub
clc
push
xchg
in
xlat
inc
out
ficomps
adc
sbb
or
pusha
sbb
bt
mov
rcrb
and
pop
add
popf
shll
dec
sti
cmp
and
faddp
loopne
add
out
xor
add
imulb
idivb
subb
pop
add
add
sub
xchg
sbb
push
and
popa
iret
mov
aad
scas
stc
mov
mov
adc
in
sti
xchg
mov
sti
cmc
sbb
rcll
sar
add
sbb
jp
ss
cld
push
lods
add
push
pop
std
scas
call
inc
dec
push
cmpsl
data16
push
cmp
ret
lcall
adc
bound
adc
gs
and
test
pop
dec
ss
outsl
mov
or
xchg
mov
ss
xchg
pop
in
add
cs
add
daa
and
adc
mov
mov
xchg
bound
out
and
repnz
xchg
xchg
jo
pop
or
ret
push
and
ret
mov
pop
je
mov
inc
mov
dec
repz
mov
xor
and
push
dec
push
add
repnz
repz
pop
lahf
adc
movsb
cmp
ret
add
xor
sub
scas
test
pop
add
add
dec
scas
out
sbb
inc
push
inc
data16
push
mov
and
adc
fnstsw
pusha
test
ficoms
jmp
xchg
xor
fldl
mov
std
cmp
test
data16
les
insl
cli
lds
fisubrl
out
pop
push
outsl
and
xor
fs
push
int3
int
ret
jg
sub
lock
imul
movsb
imul
add
inc
and
mov
das
push
adc
push
mov
sahf
fiaddl
dec
inc
push
sbb
and
sub
fwait
push
call
mov
cmp
subb
mov
push
xchg
push
sbb
cli
jmp
outsl
incl
insb
ljmp
cltd
js
les
dec
add
dec
out
lahf
mov
lods
inc
sub
lods
dec
sarb
and
adc
int
in
idivl
call
sbb
ja
aam
add
pop
add
add
cmpsb
cmp
pop
mov
and
sub
leave
xor
xor
setae
or
aad
or
in
mov
insl
sbb
mov
and
mov
in
test
pop
ret
test
pop
imul
sbb
cwtl
jne
int
adcl
xchg
inc
subl
push
test
popa
mov
jnp
cmp
push
rcr
mov
sahf
lea
mov
out
ljmp
pushf
mov
cs
lret
aaa
call
xchg
movsb
xchg
test
pop
adc
clc
mov
xchg
out
sahf
test
cli
fisubrs
dec
rorb
cmp
jb
std
lcall
rol
jp
or
out
enter
and
push
pop
and
add
pop
jmp
insb
fstps
push
gs
ljmp
push
aas
sub
add
jecxz
inc
cli
aas
clc
fdiv
jne
repz
add
pop
add
add
inc
pop
jmp
inc
sub
cltd
push
dec
dec
mov
mov
or
xchg
das
int
nop
sbb
or
or
push
filds
xchg
lds
popa
pop
xchg
pop
mov
call
jge
fistps
in
inc
fdivs
movsl
lds
jb
xor
nop
ja
inc
iret
enter
aaa
pusha
movsl
iret
push
jp
push
in
inc
imul
xor
ss
add
into
les
mov
cmp
xchg
or
add
push
loop
xchg
cwtl
lcall
sub
repnz
call
jl
mov
xchg
mov
andl
outsl
pop
cmp
dec
mov
fnstcw
lods
cltd
shrb
fbld
loopne
rolb
dec
mov
insb
into
pop
es
dec
sub
ljmp
push
in
sbb
add
add
lcall
lcall
add
add
add
adc
cmc
out
outsb
jl
stos
out
jne
ljmp
cli
mov
push
or
sahf
sub
xchg
add
out
xchg
int3
add
scas
icebp
cwtl
dec
inc
jl
sarl
mov
mov
cmp
cltd
and
std
push
pop
add
mov
cmp
jmp
repnz
inc
sbb
mov
cmp
cmpsb
mov
data16
sbb
in
pop
scas
inc
pushf
in
idivl
push
addr16
mov
outsb
sub
lahf
shrl
idiv
dec
or
sub
pop
test
neg
into
imul
outsb
cmp
or
sbb
fdivrl
in
leave
imul
sbb
mov
inc
stos
mov
lods
mov
movl
ja
push
lea
lock
and
mov
test
jb
sub
insl
negl
fbstp
call
add
aaa
jae
cltd
dec
mov
jge
push
mov
add
add
add
push
add
pop
dec
lock
pop
or
in
pop
roll
out
stos
loopne
fldenv
xor
imull
loop
pop
nop
and
dec
insl
sub
push
mov
mov
insl
cltd
hlt
sbb
clc
stc
add
sahf
test
mov
jg
mov
mov
andb
cmp
sarb
adc
ret
testl
xchg
cmp
shlb
fisubs
push
icebp
xchg
lea
xchg
lret
pop
addb
jecxz
xchg
dec
xor
sti
pop
sub
movsl
adc
cli
std
fisttpll
push
fdiv
mov
ljmp
cltd
mov
imul
psubq
mov
dec
fldcw
jl
xchg
sub
pop
out
jmp
call
xor
pusha
inc
jg
jae
lods
push
and
mov
adc
jne,pn
sub
inc
jb
jge
add
push
into
nop
out
cwtl
jle
pop
or
adcb
lock
add
pop
add
add
insb
bound
mov
or
mov
mov
fs
jnp
lds
xor
pop
jg
jle
mov
fwait
inc
ret
xlat
cmpsb
xor
adc
inc
mov
test
pop
mov
out
arpl
push
fdivs
rol
push
mov
sub
push
loop
imul
inc
fldlg2
push
jmp
push
cmp
in
rolb
cld
mov
dec
lock
adc
mov
insl
or
mov
leave
mov
dec
sub
push
pop
lods
and
jo
fildl
jmp
and
fstpl
cmp
mov
xlat
aas
jae
sbb
push
dec
push
xchg
sti
pop
mov
xchg
jl
jge
in
mov
sub
mov
dec
cmp
xchg
or
out
sub
xchg
cmc
xlat
js
pop
lret
inc
and
mov
xchg
mov
add
add
test
jg
in
jmp
xchg
xchg
lea
idiv
add
pop
add
add
or
xor
cltd
dec
inc
sub
sub
loope
xor
inc
push
sub
mov
xchg
xor
ss
jbe
icebp
lcall
pop
jb
sub
addr16
mov
bswap
xor
jbe
dec
insl
xor
sub
iret
clc
lock
sub
outsl
xchg
movsl
xor
sub
ss
stos
aam
pop
adc
fsubr
dec
sahf
push
push
into
out
and
dec
cwtl
push
xchg
cmp
mov
out
loop
jmp
sub
ret
inc
test
jle
mov
bound
push
pop
push
push
xlat
pop
pop
cli
mov
push
lret
cld
pop
les
mov
mov
sti
dec
popf
pushf
bound
push
dec
aad
pop
test
cmp
lahf
sti
mov
pop
iret
jmp
sub
loope
mov
nop
int3
push
movb
lret
pop
cmc
cmpsb
cs
cwtl
jo
test
adc
movsb
push
in
cmc
jne
rorl
push
std
add
pop
add
add
ss
mov
das
out
cmpsl
decb
imul
pop
pop
sarl
out
jns
inc
aas
cmpsb
lret
enter
test
loope
inc
popa
xor
jge
jge
jle
imul
adc
add
lods
xchg
inc
cld
push
nop
sbb
jnp
sub
adc
xchg
into
inc
imul
fldt
enter
lret
fnstcw
test
repz
cmpsw
mov
lahf
dec
ds
dec
adc
pusha
repz
fidivrs
arpl
fs
nop/reserved
jo
xor
sti
or
or
fst
mov
cmp
xchg
inc
push
add
add
in
loop
fwait
jbe
lret
je
repz
stc
in
push
shl
out
je
jg
mov
xchg
adc
add
lahf
pop
xchg
add
out
shlb
aas
out
sbb
mov
ror
add
add
add
push
jmp
adc
mov
ja
imul
loop
mov
icebp
int3
shl
jns
jmp
jnp
stc
and
mov
dec
xor
lea
repz
out
fmul
loopne
cmp
aad
outsl
ret
test
sub
das
mov
incb
xchg
repz
popf
orb
lods
insb
mov
xor
adc
aaa
fisubs
idivb
icebp
iret
repz
inc
jbe
jle
jne
es
sub
jns
daa
icebp
shll
cmp
sbb
mov
add
mov
sbb
in
mov
jno
ret
jmp
xchg
popl
dec
daa
stos
outsl
outsl
jo
push
cmp
int
lcall
out
pop
insb
dec
outsb
sarl
in
inc
mov
dec
stos
cmp
sub
aam
rorb
sub
lds
out
mov
add
mov
lcall
pop
stos
or
add
pop
add
add
xchg
popl
xchg
into
ficoml
inc
rclb
sqrtps
mov
jle
mov
push
lret
fimull
shll
sbb
add
or
push
sub
jp
cwtl
pop
push
pminsw
and
jns
push
mov
stos
imul
xchg
iret
mov
xchg
in
add
adc
loopne
jle
push
dec
dec
test
lcall
shll
inc
cltd
xchg
adc
or
push
xor
test
lock
sub
and
jmp
adc
dec
pop
in
jo
cmp
popa
push
mulb
cmp
pop
jmp
push
pop
or
adc
ljmp
gs
popf
push
and
stc
repz
mul
stos
add
scas
stos
cmp
pop
sub
fs
jle
pop
out
jb
pop
mov
inc
add
movsb
pop
int3
fwait
mov
pushf
movsl
mov
gs
add
ret
bnd
int3
jae
adc
in
inc
adc
add
pop
add
add
ret
repz
cmpb
js
jecxz
cs
xchg
or
scas
loop
add
mov
and
jo
dec
outsb
cmpsl
mov
leave
jne
mov
dec
or
clc
inc
dec
xor
push
mov
fisttpl
add
mov
cltd
add
xor
insb
test
sar
in
push
inc
ficoml
cld
rcll
cmp
je
mov
mov
sahf
fwait
aaa
mov
cmp
call
in
insl
out
cltd
push
divb
sarl
pusha
mov
popf
mov
aam
fsubrl
adc
das
repz
adc
jns
mov
inc
cmp
adc
cmp
sbb
ss
cmp
xchg
xor
xchg
popf
mov
xchg
je
andl
rcr
je
inc
sbb
rcll
imul
inc
ret
cli
sub
add
std
aaa
mov
mov
sub
lock
add
cmc
add
add
push
ljmp
xor
dec
adc
jb
cltd
jl
pop
mov
xor
adc
andl
jne
mov
popf
jg
push
adc
mov
lret
inc
cld
mov
pop
repnz
and
jle
mov
jne
add
shrl
loopne
fldl
out
cmp
inc
jmp
or
lahf
nop
fsubs
arpl
pusha
xchg
test
push
andb
fscale
bound
fsts
and
mov
lea
mov
and
fisubrl
push
scas
cwtl
call
decl
cs
add
lds
dec
cmpsb
inc
sbb
push
out
jl
mov
mov
out
cltd
inc
xlat
fistps
cmp
mov
inc
mov
mov
out
sti
aaa
gs
jp
sarb
fadd
jecxz
add
dec
push
mov
mov
or
dec
add
add
add
movl
xor
hlt
clc
lret
enter
mov
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
lcall
lcall
dec
or
inc
mov
xor
lret
ret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
ljmp
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
fs
decl
mov
test
add
xor
add
mov
or
inc
mov
popa
mov
cld
inc
cmp
lea
and
incl
mov
cld
add
xchg
sar
inc
incl
mov
xor
add
nop
inc
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
test
inc
aas
inc
lea
inc
mov
mov
out
cld
loopne
inc
in
fisttps
jecxz
out
incl
out
aas
call
add
add
test
wrmsr
jae
add
mov
add
add
mov
addl
mov
mov
dec
nop
mov
fadds
add
inc
push
call
mov
mov
cld
mov
add
cmp
mov
mov
push
nop
incl
cld
add
mov
cld
push
nop
inc
add
add
call
cmp
movntq
movl
test
jmp
int
sub
add
filds
cmp
je
movl
jne
mov
cld
jl
cmp
inc
call
add
add
add
xor
inc
add
mov
add
fmuls
cld
call
decl
add
push
es
inc
mov
decl
mov
call
inc
mov
add
mov
cld
mov
call
sub
cld
movb
xor
push
inc
mov
in
inc
lea
dec
lcall
xchg
incl
call
add
jge
mov
cld
lea
call
push
incl
mov
xor
add
cmp
jne
movl
add
mov
cld
test
mov
xor
test
mov
mov
mov
add
add
mov
add
test
je
mov
cld
sarb
pcmpeqw
xor
lea
add
cmp
mov
test
clc
pushl
lea
int3
inc
call
jne
xor
jmp
mov
mov
incl
pushl
xor
mov
mov
cld
clc
ret
test
pop
xchg
add
inc
decl
pop
sub
add
push
mov
or
inc
enter
inc
mov
int3
add
xor
xor
lea
add
fadd
rolb
inc
fmull
inc
test
lcall
inc
inc
cmp
pushf
mov
test
clc
dec
inc
mov
or
test
clc
testl
enter
xor
mov
lock
ret
push
idivb
cmp
add
jmp
les
mov
lock
clc
inc
add
jge
xor
cmp
paddb
mov
test
dec
test
pop
xor
add
add
psraw
sub
mov
lock
shl
rolb
movl
jmp
pushf
inc
mov
xor
add
mov
enter
xor
add
sub
cmp
aad
pushf
test
mov
lods
inc
dec
cmp
pushf
xor
add
inc
dec
cmp
mov
inc
inc
jmp
mov
dec
xor
add
add
dec
test
out
rolb
add
dec
mov
mov
ret
xor
add
add
dec
inc
mov
ror
add
scas
mov
xor
xor
add
mov
clc
rol
mov
mov
dec
jbe
mov
call
rdpmc
roll
add
inc
rorb
jmp
inc
inc
mov
clc
test
clc
lret
inc
into
mov
clc
enter
sub
ret
mov
addr16
clc
add
loopne
dec
into
mov
or
inc
push
mov
in
cmp
ja
mov
inc
lcall
lret
inc
into
mov
in
scas
lret
mov
mov
sub
mov
mov
clc
loopne
push
lret
mov
adc
jb
add
in
sub
cmp
mov
mov
add
mov
in
into
dec
xor
roll
xor
sub
add
mov
inc
xor
lret
inc
xor
pushf
adc
jb
add
enter
incl
jmp
mov
inc
mov
lcall
lea
xor
add
inc
dec
mov
data16
inc
sub
inc
xor
push
mov
add
inc
decl
add
inc
mov
lcall
add
xor
xor
add
mov
call
mov
add
mov
in
ret
iret
enter
in
or
adc
push
dec
inc
mov
jb
mov
cld
scas
orb
movb
push
push
xor
mov
call
mov
in
jge
mov
int3
add
xor
dec
pushf
xor
add
mov
aam
aam
add
jmp
mov
add
mov
jmp
mov
rolb
add
xor
rorl
jb
add
clc
inc
jb
mov
xor
add
push
inc
jne
push
inc
adc
inc
test
mov
cld
orl
jbe
mov
dec
mov
mov
mov
or
dec
int3
xor
add
mov
xor
add
adcb
add
inc
mov
xor
dec
mov
hlt
add
push
inc
dec
aam
aam
lret
mov
adc
inc
and
cmpl
cmpb
mov
cmp
jne
mov
mov
rcrb
or
dec
inc
add
or
test
xchg
mov
movsl
inc
cmp
pushf
orl
mov
into
decl
push
lret
inc
into
decl
push
into
call
lret
add
add
mov
clc
inc
inc
mov
push
push
add
mov
cld
mov
into
rorb
xor
jne
call
mov
mov
call
add
rolb
add
add
inc
push
cmp
mov
test
clc
test
addb
jmp
in
or
xor
hlt
mov
xor
add
inc
adc
pushf
inc
add
movsl
test
clc
incl
cmp
push
movsb
jne
push
clc
test
cmp
pushf
mov
les
inc
push
sbb
dec
add
inc
add
enter
add
add
out
sbb
dec
mov
sub
mov
add
cmp
or
incl
mov
mov
lret
inc
into
mov
int3
scas
push
mov
call
sub
mov
mov
xor
mov
clc
mov
in
ret
add
add
mov
in
ret
mov
in
inc
rol
sar
or
add
add
test
clc
lret
inc
into
cmp
pushf
scas
mov
inc
cmp
ja
mov
mov
clc
mov
mov
in
lret
ret
into
mov
scas
cmp
add
jmp
mov
mov
inc
enter
xor
add
cmp
shufps
add
dec
sub
cmp
ja
mov
lods
mov
inc
dec
mov
lret
rol
or
inc
scas
xor
add
add
inc
mov
inc
lret
mov
clc
lret
scas
ret
mov
hlt
push
scas
sub
mov
add
mov
movsb
inc
dec
xor
add
add
xor
pushf
dec
mov
rolb
xor
jmp
mov
xor
mov
rolb
test
lcall
in
inc
shll
rolb
add
mov
add
inc
xor
rdpmc
roll
loopne
push
in
mov
adc
jb
add
jmp
mov
test
dec
dec
xor
add
dec
mov
dec
in
xor
xor
add
jbe
mov
test
dec
mov
loopne
inc
add
rol
scas
mov
mov
hlt
dec
inc
mov
loopne
lret
test
clc
scas
inc
mov
fdiv
roll
lcall
fcomps
inc
mov
inc
dec
xor
add
loopne
dec
rorl
add
lock
rolb
xor
call
enter
mov
fmul
push
dec
xor
ret
xor
dec
jne
mov
cld
loopne
push
add
incl
incl
mov
lock
lret
add
xor
inc
scas
mov
shl
inc
decl
call
ud0
adc
inc
xor
lock
add
ud0
sbb
xor
sub
push
add
mov
cld
inc
xchg
mov
xabort
icebp
mov
lret
or
dec
pop
or
jb
add
inc
mov
fadd
ret
add
int
sub
add
inc
inc
mov
cld
scas
loopne
mov
mov
clc
push
pushl
movb
int3
or
lea
insb
incl
push
movb
leave
les
in
call
inc
cld
mov
cld
xor
sti
mov
clc
test
je
mov
cld
add
add
fadds
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
call
iret
inc
leave
jmp
mov
jl
inc
nop
loop
ret
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jl
inc
inc
leave
add
and
inc
jne
add
enter
mov
clc
enter
divl
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
jmp
jge
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
cmc
or
out
mov
pop
push
cmp
sar
incl
inc
loop
push
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
insb
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
push
and
xor
add
in
inc
add
mov
insb
movl
dec
xor
fxch
sub
add
mov
xor
push
fimull
orl
xor
mov
jmp
mov
add
add
sub
inc
or
add
cld
mov
xor
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
fcmovb
fxtract
mov
in
call
inc
inc
les
push
adc
out
inc
cmp
incl
inc
jne
mov
testb
add
xorb
inc
test
add
add
mov
jl
add
mov
mov
cld
movb
cmp
imul
shll
mov
mov
data16
add
in
test
jmp
inc
test
incl
cmc
rolb
test
in
incl
out
inc
test
incl
data16
xor
add
inc
inc
sbb
test
cmp
decl
dec
cmpl
add
lea
enter
inc
pushl
add
incl
mov
mov
add
pop
addl
mov
add
inc
mov
add
lea
add
test
loopne
data16
in
cmpl
pop
push
jmp
mov
lea
insb
incl
mov
adcl
mov
ret
add
call
inc
mov
mov
add
add
stc
incl
or
test
outsb
popl
adc
test
mov
add
mov
mov
data16
test
dec
mov
ret
inc
push
mov
mov
pushw
lea
mov
xchg
in
cmc
xchg
inc
iret
fisttps
rorb
orb
repz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
lcallw
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
jmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
inc
test
decl
xor
add
inc
xorl
mov
lea
inc
lcall
pushf
roll
add
add
test
decw
mov
lea
push
add
xor
test
fdivr
add
data16
lea
decl
decl
cltd
incl
ja
lea
push
mov
jmp
mov
pushl
incl
push
push
push
test
mov
clc
lret
push
jmp
push
jae
add
mov
cld
mov
incl
inc
test
inc
dec
test
cmp
mov
mov
lcall
incl
mov
jmp
test
decl
inc
or
sbb
rcrb
add
add
inc
mov
data16
inc
dec
cmp
lock
xor
hlt
cld
mov
mov
cld
into
dec
lcall
mov
add
mov
lea
test
jne
pushl
mov
call
mov
decl
cmpb
add
test
je
decl
dec
or
cld
dec
orb
add
add
icebp
ret
dec
inc
xchg
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
cmp
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
cld
cmp
xor
pushf
add
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
loopne
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
lcall
add
dec
iret
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
lea
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pop
jmp
mov
xor
lea
xor
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
lcall
jne
mov
shl
mov
dec
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
cmc
add
dec
hlt
xor
mov
in
jge
mov
dec
dec
xor
inc
hlt
xor
add
icebp
add
mov
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
add
xor
add
mov
cmp
setp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
xor
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
cli
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ror
lret
dec
mov
loop
cmp
inc
daa
loop
out
add
add
push
inc
xor
add
push
push
inc
jmp
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
out
add
add
and
fs
bswap
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
pushf
add
jne
addl
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
inc
mov
hlt
test
mov
cmp
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
sti
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
lcall
or
add
push
push
mov
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
data16
add
data16
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
ret
decl
cmp
add
data16
into
data16
add
cmp
add
add
add
cmp
pop
adc
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
xor
fs
mov
je
xor
mov
xor
fs
mov
pop
cmp
jne
mov
cld
push
pop
inc
stc
test
clc
test
jmp
or
add
lret
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
pushf
in
add
add
push
add
cmp
add
lret
lock
lret
cmp
pushf
jge
ss
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
cmp
add
mov
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
cmp
add
data16
dec
fisttps
add
ret
lea
add
xor
add
inc
test
xor
push
lcall
xor
cmp
or
inc
test
cmp
in
hlt
push
push
push
push
mov
lcall
clc
icebp
pop
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
lcall
or
inc
sub
inc
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
pushf
or
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
dec
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
std
lock
inc
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
leave
call
in
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
cmp
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
xor
inc
cld
cmp
cmpb
in
xchg
aad
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
pushf
ret
fcomps
inc
in
xor
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
mov
inc
mov
adc
inc
mov
adc
cmp
inc
add
dec
pushf
mov
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
cmp
inc
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
cmp
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
rolb
mov
pushf
mov
add
clc
dec
inc
xor
setl
lret
rol
dec
test
inc
lea
lea
mov
xor
bswap
rorb
roll
add
cmp
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
lcall
add
push
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
cmp
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
jmp
and
and
or
and
incl
pushf
decl
pop
inc
in
ret
mov
and
mov
clc
cli
lcall
decl
adc
jl
adc
dec
or
jmp
adc
xor
and
add
dec
jne
jne
lcall
test
and
cmp
pop
sbb
add
cmp
add
adc
mov
push
adc
cli
push
adc
lahf
adc
add
add
inc
adc
jge,pt
add
xor
inc
add
xor
inc
add
xor
inc
add
xor
inc
add
xor
inc
add
jno
add
adc
ja
adc
xorb
loopne
adc
cmp
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
add
add
pop
adc
add
adc
xchg
adc
ja
adc
add
adc
jle
adc
push
ss
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
adc
stc
push
adc
cmpsl
xor
add
adc
stos
push
adc
inc
adc
add
adc
pop
and
add
ss
add
ss
add
ss
add
ss
add
adc
cmp
add
adc
jno
adc
pop
outsb
adc
mov
add
adc
lret
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
xor
push
xor
add
push
pop
ss
ss
xor
add
pop
dec
dec
dec
xor
pop
xor
add
push
xor
dec
inc
dec
cmp
pop
inc
add
dec
pop
push
push
inc
xor
push
add
push
pop
dec
dec
dec
dec
dec
add
cmp
aaa
dec
cmp
push
inc
add
inc
pop
dec
xor
xor
push
xor
push
xor
dec
push
inc
xor
cmp
add
dec
xor
xor
xor
xor
inc
add
xor
dec
push
xor
dec
xor
dec
xor
dec
inc
push
pop
inc
xor
add
inc
ss
push
inc
dec
inc
add
inc
xor
dec
pop
cmp
cmp
push
pop
push
pop
dec
push
dec
dec
inc
pop
dec
xor
push
inc
pop
xor
add
push
pop
inc
push
dec
xor
pop
dec
xor
inc
inc
dec
pop
push
dec
xor
dec
ss
aaa
aaa
dec
dec
add
ss
inc
inc
xor
dec
ss
pop
dec
dec
inc
inc
dec
xor
xor
xor
xor
inc
dec
xor
add
xor
xor
pop
add
cmp
inc
dec
inc
xor
pop
inc
inc
add
dec
pop
dec
xor
dec
xor
dec
pop
push
dec
dec
cmp
xor
pop
inc
pop
push
pop
cmp
pop
dec
dec
pop
add
pop
pop
push
xor
xor
xor
push
push
add
dec
add
add
dec
add
inc
add
add
xor
pop
add
add
add
add
add
push
add
xor
pop
add
inc
add
add
push
add
add
xor
xor
xor
xor
pop
add
add
add
inc
add
add
dec
add
add
add
add
add
add
cmp
dec
add
add
pop
add
dec
add
add
dec
add
dec
add
add
inc
add
add
dec
add
pop
add
pop
add
add
dec
add
add
aaa
add
xor
inc
add
pop
add
add
inc
add
push
add
pop
add
xor
push
add
add
dec
add
add
inc
add
inc
add
add
add
cmp
push
add
pop
add
add
inc
add
add
push
add
add
add
add
add
xor
cmp
dec
add
dec
add
cmp
inc
add
add
inc
add
dec
add
pop
add
add
xor
add
inc
add
add
pop
add
cmp
push
add
pop
add
add
add
add
add
push
push
inc
push
jno
negl
roll
pop
dec
stos
loope
push
ror
jnp
add
add
pop
jno
inc
jp
jb
addr16
jns
jbe
push
push
jns
inc
insl
jbe
popa
pop
je
pop
data16
ja
push
bound
pop
dec
jae
insl
imul
jo
bound
