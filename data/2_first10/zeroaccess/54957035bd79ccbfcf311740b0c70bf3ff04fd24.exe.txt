push
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
or
mov
orl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
incl
add
movzwl
adc
mov
mov
mov
sub
movb
and
lea
sbb
mov
xor
xor
adc
mov
mov
mov
sub
mov
xor
xorl
sub
mov
adcl
movl
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
sub
push
and
movl
mov
push
mov
or
xor
andl
mov
subl
push
andl
add
jmp
mov
mov
inc
movl
cmp
movl
jb
mov
xor
add
movl
jmp
adc
mov
sbb
mov
subl
xor
xor
mov
andl
add
addl
movzwl
sbbl
mov
subl
mov
xorl
movzwl
orl
xor
sbbl
add
mov
mov
mov
movzbl
inc
mov
movl
cmp
movl
jne
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
push
pushl
call
mov
dec
mov
jmp
xorl
mov
addl
xor
orl
add
mov
sbbl
mov
xor
add
mov
movl
movl
movl
mov
mov
movl
jmp
movzbl
sbb
mov
xor
xor
or
mov
mov
xor
movl
xor
addl
sub
subl
sub
xor
or
sub
xor
mov
mov
mov
lea
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
and
mov
or
mov
sbbl
lea
inc
mov
mov
mov
subl
lea
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
xorl
lea
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
mov
mov
lea
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
or
mov
andl
mov
lea
mov
xor
mov
xor
add
jne
movl
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
orl
mov
orl
xor
addl
xor
sub
sub
xor
movl
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
jmp
cmpsl
js
movsb
mov
je
stos
adc
inc
or
bound
pop
bound
xor
cmp
jns
jbe
jb
jno
fld
std
dec
push
jae
inc
mov
scas
inc
push
cmp
loop
data16
lcall
hlt
xor
dec
and
std
pop
int
xor
test
mov
clc
cmp
mov
mov
mov
idivb
push
arpl
push
jne
and
stos
adc
cmp
mov
dec
ret
adc
and
jmp
fwait
into
or
divl
mov
add
retw
sti
lret
xor
or
and
or
mov
and
mov
je
mov
xchg
sbb
imul
pop
jmp
mov
xor
or
sub
xor
jno
popa
bnd
notb
xchg
imul
loopne
inc
mov
jo
pusha
stos
xlat
mov
and
ror
loope
ljmp
add
cmp
popf
fisubrs
cltd
pushf
add
popa
outsb
out
mov
jo
aas
cmp
jo
dec
ljmp
push
into
and
dec
stos
daa
dec
loopne
test
push
xchg
fiadds
shl
loop
jle
dec
or
das
adc
add
adc
int
mov
lods
mov
clc
out
adc
imul
cld
dec
movsb
sbb
in
push
jo
adc
outsb
roll
mov
jge
cmpsb
mov
sbb
mov
mov
pop
cmp
pop
adc
dec
xchg
jle
jecxz
jmp
or
push
jo
movsl
orb
jmp
jle
bound
add
movsl
cmp
mov
xor
mov
mov
or
xchg
int
mov
inc
push
test
push
jns
inc
je
out
in
mov
xlat
cld
shr
mov
mov
push
push
xchg
sub
jle
sbb
push
adc
outsl
add
add
inc
jg
lcall
loopne
pop
xor
dec
adc
addl
xor
sahf
daa
mov
movsb
mov
dec
jbe
fistps
inc
pop
add
out
ds
xchg
cmpsb
adc
push
icebp
xor
fiaddl
call
push
mov
iret
mov
in
call
addr16
jo
mov
cmp
cmp
cmc
adc
mov
mov
jmp
mov
int3
cs
lret
xlat
jnp
in
jb
dec
pop
lock
and
pop
ret
cltd
lods
xor
gs
dec
or
testl
nop
pusha
adc
pushf
add
pushf
daa
jmp
or
aaa
mov
jge
fidivl
sbb
data16
or
pop
inc
mov
fcompl
sbbb
mov
adc
add
mov
sahf
sar
sub
xchg
jbe
cmp
or
pop
xchg
sub
lods
arpl
test
mov
cld
push
mov
mov
jecxz
push
out
mov
adc
pop
push
in
popf
pusha
stos
repz
dec
sbb
ror
sbb
repz
jecxz
das
push
mov
push
push
sub
addr16
mov
cwtl
lds
arpl
scas
xor
mov
in
cwtl
pop
push
mov
inc
jne
xchg
fnstsw
orb
push
mov
or
adc
cmp
lds
mov
in
std
hlt
pop
shl
lods
xor
xchg
cmp
sahf
mov
sub
jne
icebp
in
jecxz
lods
imul
stc
ret
lods
or
jbe
mov
in
cmpsb
mov
or
cmp
mov
repz
in
ljmp
test
imul
mov
push
in
in
add
jecxz
test
outsb
fnsetpm(287
mov
inc
ret
in
out
repnz
pop
into
imul
mov
aad
andb
pop
inc
je
add
adc
mov
or
adcl
push
gs
dec
hlt
insb
mov
fisubs
popf
iret
out
cli
ss
scas
and
cmc
adc
and
push
dec
testb
jecxz
pop
and
xchg
sbb
push
or
cmp
out
in
cmp
adc
loop
lods
fs
sbb
mov
popf
orb
mov
jle
outsl
mov
int
shll
dec
lret
mov
int3
mov
into
aas
add
sbb
les
daa
insl
imulb
mov
xchg
add
push
clc
mov
inc
cmpsb
scas
out
in
cmp
rcrb
bound
lahf
adc
ss
shrl
shrl
ja
mov
xor
ret
xchg
cld
dec
stos
into
call
and
jp
xor
psubw
fwait
ss
dec
adc
pop
out
jo
push
lods
lock
xchg
or
xchg
dec
mov
sbb
in
jecxz
cli
mov
cmp
rolb
mov
push
rorl
test
inc
push
mov
pop
int
cmpl
push
and
dec
xor
movsb
loop
inc
cmp
addl
inc
xor
in
inc
daa
mov
orl
sbb
push
sbb
pop
xchg
mov
inc
pop
mov
mov
sbbb
adc
test
dec
jmp
dec
cmp
bound
dec
fwait
mov
sub
mov
aaa
cld
dec
enter
or
stos
xchg
aad
jns
xor
mov
or
xor
rorb
xor
dec
lods
lods
pop
mov
xor
dec
notb
roll
add
lock
mov
stos
aam
lods
shl
push
lods
gs
call
jbe
shl
adc
or
fisubs
dec
cmc
sarb
ljmp
gs
fimull
mov
sub
pop
dec
mov
out
jne
dec
je
jl
push
mov
out
sbb
pop
dec
mov
push
mov
rcrb
adc
or
push
pop
adcb
aad
xchg
mov
lods
or
popf
rorb
fdivrs
les
jno
lods
cwtl
popf
fimull
adc
cmp
push
jne
pop
mov
hlt
ret
lods
loope
gs
mov
jmp
jne
jp
cmp
or
xor
cmc
cmp
adc
dec
aaa
adc
insb
jmp
pusha
test
mov
add
or
sub
or
mov
mov
xchg
xchg
in
cld
push
std
xor
push
aam
jp
xor
mov
mov
pop
sbb
stos
js
xlat
clc
dec
xchg
insl
push
xorl
iret
das
jl
fwait
jns
mov
dec
jnp
cmp
xchg
ss
mov
and
lahf
or
pop
clc
adc
mov
out
int3
lds
rcl
add
mov
loop
sbb
pop
inc
xor
dec
xchg
jnp
repnz
enter
sbb
imul
cmp
cwtl
leave
mov
lahf
sbb
mov
lahf
nop
or
inc
sbb
jae
or
mov
flds
ds
push
pop
mov
jmp
mov
popa
rcrb
call
inc
mov
mov
lods
insb
pop
lret
or
cmp
inc
ds
ror
movsb
aam
mov
dec
ffreep
xor
cwtd
mov
sar
adc
imul
sub
push
adc
cmp
lcall
js
fidivs
popf
adc
popa
adc
mov
mov
cs
pop
loopne
fstpt
lea
xor
lods
pop
fists
inc
cmp
dec
sub
iret
stos
outsl
mov
ljmp
sbb
cmp
sarw
mov
ljmp
andb
enter
call
out
lea
lret
pop
in
xor
mov
xchg
les
sbb
mov
inc
shl
lds
dec
mov
loop
inc
int3
adc
cwtl
mov
mov
daa
scas
dec
stc
fwait
and
das
sub
dec
imul
outsl
pop
push
pop
in
fs
andl
jp
fwait
cmp
sbb
mov
dec
mov
push
cmpsl
push
aad
mov
dec
shlb
mov
add
outsb
lret
push
hlt
shl
jbe
loop
inc
push
mov
mov
imul
adc
insb
orb
adc
xor
pop
xor
sbb
add
jp
int3
arpl
lcall
push
mov
dec
into
push
push
cmp
mov
jmp
test
dec
int
je
sti
aas
sub
sarl
jp
sub
cmc
rcll
adc
dec
ds
sub
insb
push
frstor
rolb
test
mov
data16
pop
mov
mov
das
mov
pop
in
lcall
sbb
hlt
adc
xor
fisubrs
nop
pop
xor
mov
add
xor
mov
fcomp
jp
mov
aam
sub
xchg
adc
push
inc
sub
outsb
unpcklps
or
in
xor
jbe
jle
repz
leave
fsubl
jle
insl
iret
cmp
cmc
mov
and
pop
lea
into
inc
push
shr
je
pop
add
and
mov
inc
nop
mov
inc
loopne
mov
movsl
rorb
add
int
inc
popa
in
xchg
jge
in
cmp
dec
or
inc
sbb
jbe
xchg
lahf
lock
fwait
inc
or
push
mov
push
lret
sub
inc
cli
sub
pop
faddp
ja
fxtract
push
ffreep
pop
xchg
gs
paddb
insb
inc
adc
adc
jo
or
or
clc
ja
orb
pop
pusha
dec
jp
divb
add
stos
mov
mov
sbb
dec
sub
out
hlt
movsl
gs
scas
rcl
rol
mov
test
push
jns
inc
sti
cmp
add
test
fistpl
and
out
sub
adc
xchg
xor
cmp
sahf
sbb
pop
bound
mov
inc
js
repnz
popa
dec
insl
adc
or
adc
push
and
sub
shl
cmpsb
movsb
addr16
xchg
xor
sub
sub
call
jb
pop
stc
sbb
xchg
std
shlb
iret
mov
xor
in
lret
xlat
push
xchg
mov
ret
jns
and
mov
das
cltd
sbb
pop
pop
iret
push
out
aas
stos
dec
adc
or
cmp
add
cmc
movsl
inc
push
sbb
mov
inc
dec
ljmp
jg
popf
sti
xor
shll
mov
xor
or
test
popf
popa
xor
ret
sub
sbb
outsl
pushf
ja
push
xchg
mov
and
das
cmp
fildll
dec
sub
gs
sbb
inc
mov
pusha
cmp
adc
std
and
xor
sti
sub
shlb
adc
jmp
jmp
mov
enter
mov
pop
cmpsl
or
in
hlt
call
pop
mov
dec
inc
divb
mov
add
negl
and
inc
icebp
or
in
rcll
dec
cmc
mov
out
jl
jb
es
out
xchg
ret
push
mov
jo
data16
stos
aas
push
scas
clc
test
int
push
jns
inc
xor
cmp
cmp
mov
js
ret
lods
fdiv
movsl
enter
lret
mov
pop
push
rclb
mov
jb
push
mov
cld
add
sahf
jne
cmp
and
out
jl
mov
mov
and
push
pop
mov
xor
das
push
xlat
xchg
sbb
sti
sub
push
ret
jo
cmp
out
in
lds
mov
inc
pop
pop
xchg
loope
cmp
or
and
movsb
pop
outsl
add
sub
mov
and
ss
mov
xor
cmp
jns
mov
sbb
fwait
mov
xchg
test
scas
std
add
sub
inc
pop
insb
loop
shl
push
jns
xchg
or
lea
lods
fisubs
ret
adc
cmp
xor
xchg
ja
xchg
and
out
or
fs
sbb
xor
scas
push
add
clc
pushf
xorl
jne
hlt
inc
pop
mov
jno
imul
ljmp
push
cmpsl
add
dec
insl
aaa
test
lahf
dec
fisttpl
cmp
xchg
jb
pop
sahf
rcpps
jl
icebp
or
jo
jmp
and
push
imul
adc
mov
mov
rcll
push
cltd
push
push
adc
lret
cmp
adc
scas
and
jle
cld
xor
das
testb
jb
cmc
and
pop
nop
sti
insb
shll
jmp
rorl
cmpsl
ljmp
arpl
cmp
push
pop
mov
mov
jnp
in
xchg
add
lcall
sbb
xor
add
pop
adc
popa
imulb
mov
shlb
stos
dec
cmpsb
imul
int
xchg
hlt
lock
or
sbb
add
movsb
ds
clc
push
lods
adc
adc
mov
testb
mov
sbb
test
imul
pop
mov
shll
rcl
mov
mov
repz
add
xchg
pop
dec
or
mov
mov
mov
push
xchg
push
test
faddl
pop
xlat
int
sbb
push
mov
stos
enter
adc
das
hlt
daa
mov
daa
cmp
iret
insl
or
mov
dec
repz
repnz
neg
ds
pop
cmp
test
adc
aas
mov
xor
sbb
mov
test
mov
inc
jecxz
sbb
mov
fstps
nop
jecxz
mov
pop
adc
cmp
in
lahf
jbe
loopne
mov
stos
mov
nop
and
cmpsb
icebp
inc
and
jno
jl
daa
push
fs
cwtl
xchg
cmp
fadds
mov
sbb
pop
xor
push
mov
cmp
roll
mov
sub
fisubrs
jno
mov
loop
dec
test
repnz
arpl
jne
jne
inc
imul
push
imul
or
xlat
xchg
adc
adc
shr
outsl
sar
push
into
cld
mov
aam
cmp
adcl
push
and
dec
mov
push
fwait
ret
add
adc
lea
imul
arpl
out
inc
in
xchg
mov
cs
sub
sbb
mov
fistpll
enter
mov
mov
lahf
xchg
jno
pop
lret
jecxz
sbb
fldcw
pop
in
mov
sub
xchg
shll
lea
sub
dec
jo
in
add
cmp
xor
jno
sbb
fwait
lds
jae
xor
inc
test
loope
mov
inc
xchg
cmpsl
or
xor
push
cmp
jmp
stos
cmpsb
jbe
je
lret
pop
jg
es
push
incb
shlb
lods
jns
xchg
repz
inc
pusha
mov
fcompl
repz
xchg
fwait
jmp
and
js
hlt
fistpl
mov
cs
pop
aad
jmp
jnp
test
lahf
lods
leave
xor
pop
aad
push
inc
loop
xlat
cmpsl
adc
inc
cli
outsb
pop
push
sbb
xchg
xlat
ljmp
add
cmp
xor
or
adc
add
inc
lret
sti
and
push
or
jnp
repnz
xchg
or
sbb
and
push
bound
imul
mov
mulb
or
cwtl
or
nop
out
xor
icebp
pop
and
test
addl
mov
xor
loop
loopne
addl
adc
or
int
daa
and
push
cwtl
push
insb
xchg
out
fldcw
mov
adc
ds
test
and
inc
push
popa
fidivrl
sahf
test
mov
cli
nop
subl
inc
and
je
cld
test
cld
mov
fwait
push
xor
out
pop
addr16
pop
insl
in
rcr
scas
dec
mov
adc
or
pop
pop
and
mov
lods
jae
repnz
xchg
imul
mov
mov
test
mov
lahf
sub
bound
push
imul
testb
es
insb
xor
dec
pop
in
and
pop
ret
fmuls
into
pop
test
test
push
aam
sahf
jle
stos
mov
sbb
push
orl
lcall
hlt
fisubl
lret
cs
scas
mov
pop
insb
cmp
inc
fildll
stos
jecxz
xor
and
xchg
ss
push
cmp
pop
push
jns
cmova
mov
test
xchg
aad
cmpsb
sbb
sbb
fmuls
or
ss
nop
inc
or
mov
lahf
sbb
hlt
dec
ret
and
mov
jne
shl
push
mov
std
sahf
mov
outsb
mov
ss
popf
scas
cmp
mov
loope
or
sarb
test
fst
mov
mov
cld
mov
aad
lret
dec
jmp
loope
jl
jns
xor
jge
dec
fstpt
or
adc
jnp
std
or
sbb
shll
rcl
inc
mov
int3
inc
or
or
mov
movsb
cmp
sub
insb
clc
andl
loopne
mov
adc
adc
out
adcb
mov
push
and
jge
ja
insl
daa
lds
movsl
jmp
pop
stos
xor
imul
imul
lock
mov
jno
rorl
cmpsb
aam
cmp
xor
not
dec
in
inc
cld
cli
jmp
jno
sbb
push
cmp
test
jecxz
mov
lods
cmpl
aas
gs
pushf
sets
rorl
jb
test
hlt
ljmp
add
cli
push
xor
fdivrl
or
cld
into
add
movsb
insl
ret
or
adc
pop
cmpsb
mov
mov
movl
xchg
mov
jns
mov
andl
push
cs
mov
nop
inc
mov
mov
mov
jae
mov
into
or
sub
repz
mov
subl
insb
xchg
mov
pop
and
lret
pop
aas
divb
dec
orl
out
jo
lods
addr16
dec
jns
add
and
adc
pop
in
sub
inc
mov
push
adc
dec
pushf
shlb
jg
fcomps
cmp
mov
push
shll
test
incl
roll
cmp
jnp
push
cmp
mov
cld
pop
out
test
push
inc
push
cs
fildl
push
test
pop
jne
mov
jbe
fwait
call
inc
out
lcall
rcr
aam
mov
cmp
sbb
inc
xor
cld
sbb
neg
pop
and
and
push
cld
sbb
push
cmp
or
leave
sbb
and
dec
stc
insb
gs
lds
imull
jg
fstpt
daa
imul
in
repnz
push
jns
icebp
inc
push
cmp
sahf
std
lea
fidivrs
jp
xor
cwtl
push
repz
jno,pt
lret
lds
mov
sub
mov
inc
dec
movsb
das
inc
cmpsl
iret
popf
xchg
shl
add
out
add
inc
data16
fldl
jb
add
js
jbe
jge
repz
test
sub
mov
jo
jns
pop
mov
mov
lret
and
bound
or
mov
cmp
inc
cmpsl
xlat
outsb
adc
inc
xchg
xor
ret
lcall
iret
ljmp
add
sbb
sub
xchg
out
mov
inc
les
inc
out
add
enter
xchg
xchg
jmp
pop
xchg
sub
test
and
or
push
mov
xchg
and
sbb
mov
add
cmp
int
sar
inc
adc
mov
adc
push
mov
mov
loopne
subb
mov
scas
imul
idiv
inc
gs
mov
cmc
push
add
pop
ret
imul
sub
stc
fisttpll
mov
sbb
xor
inc
sbb
out
mov
in
ss
hlt
xor
mov
fistps
sbb
sub
add
and
xlat
ret
or
dec
cltd
xor
pop
cmp
sahf
pop
xor
push
pop
adc
insb
imul
mov
push
sub
jmp
sahf
add
cmpsb
mov
push
lahf
mov
and
bound
lods
sub
sar
outsl
shll
jmp
bound
mov
dec
lock
test
adc
es
push
mov
movsb
mov
pop
jae
jmp
mov
fld
mov
pusha
nop
dec
fcmovnu
idiv
push
mov
aaa
add
sub
rorb
and
popa
lea
movb
insl
lahf
outsl
stos
mov
dec
dec
stos
fld
jno
mov
les
mov
and
push
mov
cmc
and
leave
mov
lods
daa
stc
adc
out
adc
ret
inc
in
movhps
dec
dec
fwait
sbb
es
movsl
adc
mov
neg
loop
test
pop
add
mov
test
pusha
sub
add
arpl
pushf
in
or
mov
negl
xor
int
shrl
inc
and
jecxz
cmc
mov
push
pop
test
xor
scas
pop
sbb
jge
inc
fmulp
cs
das
lea
mov
aad
shrb
push
sub
mov
or
push
xchg
xlat
out
ss
xchg
xchg
pop
mov
dec
sbb
out
shlb
dec
push
dec
out
dec
mov
ljmp
testl
jle
outsb
inc
pop
xchg
rolb
clc
dec
sbb
mov
inc
xlat
fnsave
dec
jl
push
xchg
pop
mov
sbb
push
xor
jno
not
sbb
mov
pop
lahf
aaa
sahf
scas
pop
pop
insl
push
aam
ficoml
lods
pop
add
and
mov
aad
notb
lods
arpl
hlt
jecxz
push
clc
mov
adc
imul
insb
sub
ljmp
faddl
push
xor
sbb
dec
push
or
xchg
roll
sub
fdivrs
pop
rolb
add
into
pop
sub
call
cmp
sub
sbbl
push
and
pop
jb
test
xchg
jle
hlt
pop
push
in
cmp
mov
gs
push
daa
aaa
dec
inc
cli
bound
pop
dec
je
pop
scas
adc
pop
lock
xchg
iret
int3
mov
loop
mov
mov
loopne
mov
pushf
daa
fsubl
jle
fwait
in
pop
sub
cmc
xchg
mov
mov
jl
push
lods
lds
mov
fisubl
sbb
or
inc
mov
sub
sub
mov
outsb
mov
inc
push
push
pop
xchg
xor
sbb
test
inc
xor
daa
iret
adc
lret
pop
aam
and
xor
xchg
fsubs
push
sub
inc
jne
xchg
xor
xchg
shrl
test
pop
fsubs
cli
ret
jb
lods
les
pushf
inc
pusha
inc
and
fisttpll
lods
enter
inc
sub
push
je
mov
or
out
sub
das
push
sbb
fnsave
inc
js
cmc
stos
pop
inc
sbb
inc
jbe
testb
and
data16
mov
cltd
dec
jmp
addr16
popf
mov
and
dec
ja
push
mov
add
ret
mov
call
dec
outsl
and
test
or
xor
rorb
mov
cmp
arpl
pop
mov
shl
jns
xor
inc
out
lods
test
loopne
shlb
pop
sti
iret
mov
adc
rcrb
mov
repnz
scas
xchg
mov
negl
in
sbbb
int3
fildl
lea
pop
mov
mov
mov
add
and
repz
push
adc
icebp
outsl
inc
xor
aam
sbb
insb
jb
sub
stos
scas
mov
push
out
push
mov
loopne
xchg
or
dec
shlb
ljmp
lret
and
xor
sbb
xor
xchg
lret
hlt
inc
shlb
push
xchg
popf
test
pop
sti
bound
pop
mov
imul
pop
push
outsb
mov
xchg
xor
xor
jno
ja
js
sub
mov
mov
lahf
xchg
pushf
add
mov
add
sub
adc
dec
scas
sbb
pop
icebp
inc
stos
jecxz
movsb
dec
repnz
pop
call
xor
rcrl
rep
adc
push
ds
and
loopne
xlat
mov
lock
xchg
ljmp
cmpb
out
je
or
addr16
mov
sbb
mov
xor
sbb
mov
pop
ror
adc
pop
lahf
mov
pushf
pop
insb
xor
cli
cltd
imul
add
add
add
js
mov
in
int
mov
jno
jne
pop
push
and
int3
fs
push
lret
sub
popf
dec
js
push
push
sbb
pop
rorb
inc
and
shrb
ret
push
ss
sahf
clc
pop
das
push
xchg
jb
loope
cmc
pop
adc
cld
imul
jecxz
in
xor
xor
icebp
pop
add
add
les
stos
stos
out
ljmp
imul
stos
out
test
shlb
mov
shll
stos
outsl
test
jge
imul
andb
inc
or
jmp
repz
and
inc
push
cli
sbb
or
xchg
inc
mov
lock
mov
das
repz
shlb
js
cmp
sbb
mov
dec
inc
jno
mov
outsb
cmp
scas
sbb
hlt
or
ret
or
in
push
mov
inc
xor
out
mov
push
xchg
pushaw
int
popa
in
push
pop
cs
test
fs
add
orl
xor
ds
cs
fs
sub
jbe
ds
in
adc
pop
pop
jae
out
xor
and
mov
pusha
mov
lret
sub
pop
sti
mov
cmp
lds
out
add
divl
aad
mov
xchg
push
insb
and
dec
rclb
and
call
jecxz
outsb
addb
icebp
inc
hlt
icebp
adc
cwtl
std
adcb
lret
sbb
mov
lcall
mov
clc
xchg
push
pop
adc
xchg
add
stc
xchg
add
int
push
in
stc
outsb
daa
xchg
rcrl
bnd
or
rcll
lock
add
movsl
push
shrl
dec
sub
xor
repz
mov
in
int
fnstsw
xchg
outsl
push
je
cmp
dec
jp
lods
lcall
sbb
pop
xchg
rcll
dec
dec
and
repnz
daa
mov
pop
je
in
ret
in
sbbb
lcall
cltd
mov
sub
lret
push
out
push
stc
ljmp
mov
or
push
test
push
orl
push
adc
lcall
sarb
lock
mov
leave
fxtract
push
jns
mov
jns
adc
adc
rcrl
mov
dec
lea
test
ficompl
imul
sbb
movsl
pop
xchg
into
cwtl
cld
push
movsl
pop
pop
clc
test
movsb
push
repnz
outsb
cld
inc
mov
fadds
pmaxsw
fsts
and
inc
ror
test
mov
js
mov
sub
movsb
enter
xor
push
sti
fs
sti
movsb
lcall
ja
xchg
mov
in
into
insl
dec
and
jnp
ss
iret
inc
ja
sub
insl
popf
pop
inc
rol
mov
mov
popf
sahf
sub
notl
lret
in
sbb
dec
insl
inc
dec
push
sbb
shrl
hlt
mov
mov
aam
sub
add
lret
test
and
sub
out
inc
pushf
into
xchg
cmp
dec
or
pushf
push
loop
dec
lcall
test
gs
pop
testb
xchg
pop
mov
sub
aas
pop
and
out
in
shlb
inc
ss
ficompl
or
cmp
daa
ret
add
jg
dec
ret
fimuls
inc
les
cld
data16
and
dec
push
mov
into
data16
pop
pop
gs
mov
jo
out
cs
dec
add
adc
pop
jmp
mov
inc
push
in
punpckhdq
lret
lock
add
mov
je
xor
lock
fistpll
xor
aad
add
std
and
enter
adc
enter
imul
out
pop
test
mov
negb
inc
mov
lods
jb
xchg
and
fsubrl
or
push
inc
andb
aas
arpl
add
mov
repnz
xor
inc
mov
pop
sbb
mov
sub
fstps
adc
icebp
fbld
adc
mov
xchg
xchg
pop
xchg
fnsave
cmp
push
rorl
add
cld
mov
push
inc
ds
test
test
iret
int
inc
test
sbb
or
push
xchg
adc
stos
lahf
pop
add
orl
and
rcrl
bound
push
inc
or
and
daa
xor
xchg
dec
sbb
jl
and
cltd
fdiv
mov
pop
mov
fs
sbb
shll
and
mov
add
ljmp
lods
jnp
sti
lods
icebp
hlt
shll
cmc
in
loopne
aaa
popa
fs
decb
gs
mov
push
jb
mov
pop
sub
sar
incb
shlb
movsb
cmp
mov
bnd
push
in
pop
and
mov
jne
insb
and
sub
xor
lds
inc
inc
sbb
les
cmpsb
push
and
xchg
iret
cmp
insb
sub
ret
jne
cmp
cmp
enter
push
push
shrl
push
mov
ret
xor
jp
imul
test
cmp
jbe
loop
icebp
out
dec
jge
sbb
mov
add
adc
loope
mov
add
pop
sbb
pop
xchg
push
sti
gs
push
inc
data16
xchg
cltd
out
push
test
add
mov
orb
jne
imul
mov
pop
push
stos
inc
xor
dec
insl
test
js
pop
mov
ficomps
enter
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
movl
pop
movl
jmp
sbb
mov
ret
push
mov
sub
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
mov
dec
mov
jmp
xorl
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
mov
adc
push
or
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzbl
sub
xor
mov
push
sbb
mov
add
movl
cmp
movl
je
mov
sub
mov
xor
xor
add
add
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
sub
adcl
push
push
push
push
subl
lea
sbbl
push
addl
push
subl
call
push
andl
call
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
pushl
push
push
push
call
cmpl
jb
add
movl
movl
orl
mov
adc
mov
xor
xor
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
adcl
test
movl
je
mov
mov
mov
mov
imul
orl
mov
sbbl
add
xchg
or
mov
sub
xor
mov
xorl
xor
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
sbbl
add
mov
sbb
mov
sub
mov
movl
xor
add
mov
mov
sbb
mov
xor
movl
cmpl
je
cmpl
jne
push
push
pushl
call
xor
add
dec
mov
jmp
neg
add
adc
mov
orl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
xor
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
sub
mov
orl
sub
jmp
div
and
xchg
lods
mov
in
mov
sub
lret
push
adc
cli
xor
sbb
mov
sbb
push
inc
ja
rclb
stos
and
out
mov
xchg
cmc
jge
mov
dec
dec
xor
stos
mov
cmpsb
cmpsb
jle
std
sbb
sub
dec
fadd
mov
daa
dec
sbb
sahf
mov
jmp
inc
mov
out
pop
inc
mov
mov
fwait
xor
mov
in
xchg
imulb
sbb
inc
add
scas
xchg
movsb
jo
fsubr
arpl
lods
sbb
pop
push
and
sub
cltd
or
jno
repz
mov
and
add
sbb
inc
mov
adc
out
enter
pop
cmc
mov
mov
inc
cmpl
mulb
or
subl
stos
rclb
adc
and
adcl
adc
dec
fldenv
dec
push
sub
or
cmpsl
or
mov
jae
sbb
ljmp
push
mov
push
jg
mov
cmpsb
rcrb
add
push
dec
mov
mov
fs
sub
fidivrs
adc
repnz
insb
mov
jp
iret
loope
lods
add
mov
mov
lret
push
call
push
adc
and
push
mov
jge
cs
push
jg
es
loopne
out
test
mov
daa
fcompp
int
sarb
push
or
add
jns
movsb
rol
cs
popa
mov
pop
lods
data16
and
sub
lret
jae
clc
movsb
sub
jb
sbb
pusha
pop
cwtl
icebp
pushf
sub
cmpsl
or
adc
pop
jmp
sub
cmp
fs
das
add
dec
xchg
push
lret
mov
in
popa
jo
sub
repz
loop
inc
das
fcmovne
insl
sbb
push
outsl
sub
push
dec
xor
cltd
outsb
mulb
fisubs
sub
addr16
daa
sbb
jns
dec
aaa
add
dec
sbb
mov
addr16
adc
aad
adcl
std
mov
repz
sahf
dec
cmpsl
push
cmp
ja
cltd
insl
jge
mov
daa
dec
mov
sbb
dec
xchg
aad
mov
sub
fsubrs
pop
out
inc
inc
jmp
sbb
push
jecxz
or
test
mov
stc
or
cmp
inc
mov
xor
repnz
cmp
pop
jg
mov
loope
mov
sti
ds
mov
aas
gs
and
mov
movq
adc
inc
js
xor
lock
or
push
pop
or
mov
jne
adc
xor
jg
cmpsb
cmpsb
adc
jae
in
stc
push
jle
loop
mov
imul
dec
stos
cmp
jbe
jno
mov
ss
xor
shrb
inc
sahf
imul
test
mov
pusha
mov
pcmpeqb
sub
das
xchg
call
shrb
sbb
test
push
xchg
sbb
adc
fsubs
cmpsl
xor
movsl
dec
adc
mov
pop
pop
faddl
jmp
imul
jp
dec
push
fscale
repnz
dec
fisttpll
xor
add
lock
stc
or
add
test
outsb
and
mov
cld
js
test
push
pop
jecxz
out
mov
scas
sbb
xchg
sub
dec
fadd
xor
xchg
imul
jae
jp
sub
adc
mov
cmp
lock
movsb
clc
xlat
imul
xchg
and
sub
jecxz
inc
add
mov
in
test
or
insl
repz
fcomi
mov
mov
sub
dec
mov
jecxz
divb
testb
xlat
lock
push
xchg
enter
mov
movb
sbb
inc
insb
frstor
dec
inc
mov
ds
sarl
roll
fisttpll
and
xchg
arpl
add
leave
xor
mov
cli
das
mov
testb
enter
add
fs
jae
fs
ja
in
jb
jmp
xchg
cmp
scas
pushf
xor
scas
xchg
sub
xchg
icebp
sbb
cmp
jb
inc
lahf
test
iret
loop
sbb
rcrl
jne
movl
add
in
outsb
mov
xlat
jge
sbb
mov
or
inc
pop
stc
push
pop
inc
or
mov
pop
mov
sbb
adc
or
sub
mov
xor
scas
arpl
lods
movsl
sub
inc
addr16
sahf
mov
mov
jae
fs
mov
outsb
cmpsb
popf
xchg
gs
pop
add
das
jg
scas
sub
pop
and
fsts
outsb
iret
incl
sub
xor
cwtl
mov
add
xchg
push
pop
mov
xlat
jmp
cmp
out
xlat
sar
sbb
push
shll
fistpll
xchg
int
mov
loope
out
fcomps
or
push
mov
xchg
xchg
in
psrlq
mov
pop
in
popf
cmp
lret
adc
mov
cmp
lock
pop
lock
jae
inc
mov
scas
or
clc
loope
push
dec
nop
cmpsb
xor
push
js
and
inc
push
and
pop
sub
mov
jge
sub
xchg
adc
js
sub
adc
mull
in
out
nop
ja
repnz
sbb
push
mov
sarb
add
daa
mov
and
arpl
xor
cmpsl
cltd
push
cmp
adc
jp
mov
mov
or
cmp
dec
shlb
pop
popa
out
push
scas
fimuls
mov
sub
push
add
shlb
fs
gs
imul
fstp
adc
sbbb
mov
test
inc
mov
jmp
xchg
lret
outsl
shrl
imul
jg
pop
aas
shl
lock
fisubs
jae
in
xchg
cmpsl
nop
int
loop
mov
lock
mov
or
dec
pop
cmpsl
push
hlt
xlat
divl
mov
mov
inc
mov
clc
cmp
sbb
decl
push
xor
loope
sub
xor
fs
dec
daa
cmpsb
leave
aad
mov
push
test
sub
add
call
pop
ss
mov
cmpsl
pushf
sbb
data16
sbb
push
sti
add
sbb
adc
or
mov
cld
aad
dec
xor
fdivrp
mov
fucompp
add
imul
jnp
ret
mov
fnsave
inc
ljmp
xor
sbb
dec
insb
or
test
jp
pop
inc
inc
lret
neg
jae
and
mov
adc
cmp
lods
je
in
push
and
les
xor
jne
stos
loop
inc
imul
xor
aaa
sti
daa
inc
aas
fmuls
ret
ret
int3
mov
notb
mov
xchg
call
inc
aas
adc
sbb
call
sbbb
int
jecxz
stos
push
mov
dec
inc
inc
nop
fsubrl
mov
push
xor
aaa
push
and
sbb
dec
scas
cli
outsb
push
std
sbb
cmovns
fcmovnu
ljmp
dec
ret
dec
jae
xchg
mov
jns
pop
pop
push
sti
cld
push
inc
cmp
inc
pop
roll
int
dec
in
lret
out
jnp
push
pop
les
inc
or
orl
sti
dec
aad
dec
ficompl
mov
add
jb
imul
mov
sbbl
movsb
inc
mulb
lods
jecxz
dec
pop
jmp
mov
push
out
lret
outsl
loop
mov
jecxz
fldcw
xchg
mov
fbstp
mov
mov
aas
inc
adc
out
outsl
lahf
mov
negl
xchg
ret
mov
pop
cmp
jne
sub
xchg
popa
sub
inc
stos
gs
sbb
xor
push
push
pusha
fdivl
pop
fst
movsl
adc
leave
test
cmp
pop
loope
arpl
rorl
push
lock
jns
cmp
lea
scas
mov
aad
cmp
sahf
stos
xchg
jmp
ret
jl
arpl
jecxz
iret
add
pushf
mov
inc
pop
data16
aad
sti
sbb
aad
mov
subb
int
mov
xor
arpl
pop
dec
shl
dec
pop
dec
mov
test
dec
push
add
pop
stc
addb
loop
jecxz
xchg
sub
mov
mov
hlt
or
fdivrl
aad
enter
or
mov
mov
push
mov
stos
fs
jle
jae
leave
pop
ds
pop
das
push
jnp
outsl
div
inc
or
das
out
jecxz
movsb
mov
dec
test
stos
push
test
out
sarb
mov
clc
adc
das
arpl
lds
jl
or
rcll
pop
pop
jge
add
test
fistps
inc
call
jbe
fldenv
dec
imul
jb
in
enter
xchg
push
push
aaa
ljmp
dec
fwait
sbb
cmp
and
test
mov
out
mov
adc
dec
pushf
jg
pushf
mov
mov
jecxz
pop
hlt
cmp
je
or
mov
cmpl
push
jns
cwtl
je
dec
dec
cmc
push
in
sbb
cmpl
sti
rcll
movups
js
cmp
push
and
xor
add
cs
out
ret
xor
or
xchg
add
shlb
add
mov
inc
fsubr
xor
imul
outsl
and
pushf
adc
sbb
mov
cld
leave
clc
test
mov
test
jae
push
std
decb
dec
outsl
mov
push
mov
loope
popf
cmp
ja
xchg
and
call
stos
push
test
icebp
pop
es
gs
inc
stc
sub
inc
inc
push
aad
xor
jne
test
sbb
adc
or
adc
cld
mov
repnz
int
shl
add
sub
push
rcrl
repz
or
sbb
out
sbb
mov
dec
dec
pop
lahf
sbb
in
cld
std
sub
ret
mov
int
push
fs
rcr
movsb
aas
inc
pop
jecxz
inc
enter
inc
gs
xor
aam
push
std
xchg
out
pop
cmp
je
out
xchg
and
sub
sahf
sbb
movsl
movsl
mov
pop
in
xchg
mov
cltd
movsb
sbb
shlb
inc
insl
pop
subl
sub
jae
jmp
jns
mov
inc
push
push
out
and
push
testb
mov
cmpsl
dec
jb,pt
adc
push
xchg
gs
out
add
insl
mov
daa
dec
adc
and
cmp
data16
cmp
sahf
test
xor
adc
xor
je
sub
dec
ss
add
ljmp
enter
cmp
or
cwtl
fsubrs
mov
ret
xor
clc
pop
xchg
dec
scas
add
sub
fnstenv
jns
dec
dec
out
aaa
je
aad
fidivrs
mov
push
pushf
out
stos
dec
popf
mov
inc
pushf
icebp
sbb
fs
jecxz
dec
rcrl
lahf
cmovg
scas
arpl
mov
pop
cs
xor
stos
mov
mov
jmp
pop
fwait
or
cmp
dec
mov
fsubl
lds
in
test
cld
enter
mov
fcompl
out
xchg
or
mov
clc
mov
push
push
cmpb
cmp
pop
or
push
push
inc
loopne
sub
mov
andb
popf
cmp
cld
in
and
mov
outsl
inc
and
add
or
mov
or
or
addl
mov
aam
mov
lds
push
mov
jb
inc
mov
jecxz
adc
cmp
test
stos
lock
mov
xchg
jle
adcl
push
gs
ret
in
and
ret
mov
inc
imul
push
pop
push
lds
insb
push
mov
pop
cmp
cmp
xlat
xchg
mov
xchg
sar
stos
dec
sub
dec
lret
outsl
add
sbb
lock
xchg
sbb
ficompl
jge
test
fcom
jns
shlb
or
xlat
dec
out
out
xor
aam
dec
imul
lret
mov
in
ficompl
out
jbe
pop
iret
sub
enter
inc
push
cld
jnp
movsl
and
insb
jle
add
dec
and
adc
scas
lcall
aaa
mov
int3
adc
pop
sub
int3
cli
inc
mov
mov
incb
pop
dec
loop
ss
lods
jecxz
mov
pop
mov
daa
push
add
jbe
push
mov
adc
jge
adc
test
or
pushf
mov
cmp
arpl
xor
mov
pop
jmp
adc
sarb
enter
add
adc
test
inc
pop
xorl
jecxz
inc
pop
jnp
inc
xlat
idiv
fnstcw
sub
cwtl
popa
push
adc
andb
pop
dec
mov
pop
xor
aad
sbb
enter
and
rcl
out
gs
call
jne
fstps
bound
xor
rorb
je
pop
dec
lret
mov
add
xlat
aam
sub
movsb
shll
pusha
xor
jl
xchg
dec
aaa
leave
cli
outsb
xchg
decb
imul
push
push
xchg
mov
pop
mov
sbb
inc
push
repz
outsb
mov
push
adc
mov
nop
mov
adc
pop
push
pop
and
ret
fdivrp
lds
imul
mov
jns
minps
data16
pusha
dec
repnz
sub
mov
mov
or
test
das
sahf
mov
or
pop
pop
lods
ret
cmc
aad
mov
mov
ret
in
adc
jne
sub
and
pop
jns
and
mov
cmc
jmp
fdivl
ret
aas
cli
arpl
pop
pop
jbe
xlat
cmp
frstor
movb
xor
or
in
push
inc
add
dec
fwait
cmp
xor
xchg
repz
cmp
sbb
aam
push
mov
pop
dec
push
dec
xchg
mov
cmpsb
sub
hlt
jne
mov
mov
testb
enter
jbe
iret
scas
sbb
clc
scas
iret
enter
mov
aaa
dec
mov
jns
xor
addl
jno
mov
lret
idivl
jnp
loope
mov
inc
test
outsl
lock
xchg
icebp
pushf
sub
jno
lret
inc
adc
push
or
cld
push
xchg
inc
xchg
mov
ficomps
cli
ss
push
or
hlt
push
out
push
in
call
sub
in
ss
mov
sbb
inc
iret
sub
or
add
mov
dec
and
mov
mov
popf
iret
sti
sbb
ret
dec
gs
inc
aaa
pop
iret
mov
mov
cltd
cltd
mov
mov
es
pop
xchg
in
sbbl
ret
int
pusha
test
sbb
insl
or
imul
cmpsl
adc
cmp
fs
adc
push
mov
insb
mov
push
mov
mov
sbb
mov
fildll
call
mov
push
aad
push
cmp
xlat
and
xor
jmp
add
pushf
add
es
jae
das
and
jns
bsf
iret
and
xchg
dec
aaa
dec
cli
loope
in
or
out
movsb
mov
jp
inc
dec
aas
subl
sbb
add
js
call
es
lods
imul
aas
adc
jae
filds
mov
or
mov
fstl
mov
ds
lret
stos
ss
pop
in
leave
jns
mov
out
pushf
sub
fs
jbe
push
cmpl
push
out
xchg
xchg
stc
loope
mov
adc
push
sub
bound
adc
call
xchg
jae
push
imul
and
fimull
test
cld
out
push
push
andb
outsb
pop
and
cmp
das
and
add
out
outsb
test
inc
or
call
dec
test
xchg
arpl
ljmp
mov
sub
cwtl
loope
int
cmp
push
das
add
repnz
into
lret
lcall
out
xchg
mov
cmc
lahf
push
push
inc
sbb
inc
adc
loopne
rcll
clc
jmp
push
xlat
inc
out
jb
imul
adc
jnp
test
cld
jmp
add
jmp
sbb
pop
jl
push
gs
aam
imul
fwait
lods
mov
ss
test
rorl
jle
in
cwtl
loopne
icebp
push
outsb
mov
subb
int3
sti
js
mov
and
or
clc
fcmovnu
sub
in
fildll
or
mov
sbb
or
xor
cmpsb
inc
xor
mov
mov
dec
pusha
pop
dec
inc
cli
cmpsl
outsb
gs
int
mov
mov
outsl
cmp
mov
negb
jp
pop
jae
js
ficoml
ss
rorb
pop
js
stos
jno
outsb
push
frstor
rclb
xchg
mov
mov
dec
les
cmp
jmp
jo
or
inc
xchg
ljmp
dec
test
int
addr16
jecxz
in
fisubl
dec
lret
call
call
add
dec
divb
inc
mov
lcall
add
shl
lock
mov
int3
mov
xchg
scas
fisttpll
sub
add
aam
xchg
int
inc
push
adc
pop
push
cld
xchg
in
subl
cwtl
scas
addr16
xlat
xchg
imul
dec
xor
dec
pop
add
hlt
cmp
pop
out
fnsave
fmuls
xchg
cmp
lcall
fstpt
sbbb
mov
jbe
push
ret
cmp
pop
mov
in
test
xchg
test
inc
push
cs
xchg
and
cs
outsb
pop
test
jge
cmp
mov
cmpl
push
sahf
xchg
mov
testl
and
outsb
push
sbb
mov
ljmp
ror
add
pushf
cs
push
mov
jne
fucom
or
or
push
test
jp
sub
pop
jb
or
rcl
scas
or
push
push
test
push
popf
dec
gs
insl
sub
hlt
sbb
cmp
gs
xchg
sbb
mov
js
cmp
dec
movsb
jl
jno
cmc
and
jmp
fs
test
outsb
xchg
fistps
xchg
xchg
arpl
xchg
push
mov
iret
popf
inc
pop
stos
loopne
sbb
ljmp
shrd
xor
mov
pop
cmpsl
in
and
xchg
ss
popf
jmp
mov
dec
mov
testb
sub
in
dec
aam
not
aaa
outsl
push
adc
out
xlat
xchg
cltd
jae
and
decb
pop
movsl
lcall
mov
pop
fidivrl
cmpsl
xlat
dec
pop
outsb
fwait
out
leave
cmp
lds
jbe
inc
xlat
add
bound
loope
push
js
fs
mov
xchg
add
ja
jns
fidivl
lock
sbb
lcall
inc
xor
lods
xor
xchg
pop
in
cmc
enter
xor
sub
call
rcrb
stos
test
in
jmp
test
dec
test
test
jle
pop
mov
enter
in
fsubl
pop
js
in
shll
mov
push
lods
idivl
pop
pop
xchg
ret
pop
call
push
dec
push
mov
orb
and
cmc
adc
mov
pushf
push
outsb
push
add
mov
cs
push
cmpsl
movsb
sbb
divl
xor
mov
in
mov
fcmovbe
mov
jmp
adc
mov
scas
jns
add
mov
dec
jl
cli
xchg
in
loope
sub
cwtl
push
daa
imul
ds
inc
das
cld
mov
rcrb
loop
imul
mov
mov
test
aaa
mov
sub
movsl
int3
lret
lcall
adc
aad
aam
jmp
push
xrelease
inc
mov
adc
ja
sub
push
pop
cs
pop
sbb
xchg
hlt
push
add
pop
cli
adc
push
imul
sub
pop
pushf
mov
xchg
pcmpgtb
bound
dec
xchg
push
js
ss
mov
dec
aad
jo
mov
mov
mov
sbb
xor
call
sub
and
in
lods
imul
ja
out
jb
andb
in
in
subb
cltd
outsl
sbb
notl
pop
or
insl
dec
adcl
xchg
out
les
rcrb
enter
xor
jge
fnsave
dec
dec
push
stos
lret
lds
es
sbb
pushf
decb
push
jcxz
adc
inc
sti
push
mov
mov
imul
mov
test
xchg
lcall
adc
pop
lock
push
std
repnz
loopne
cltd
in
adc
sbb
popf
dec
push
push
cs
push
xlat
dec
mov
xlat
lods
adc
hlt
mov
js
pop
ljmp
aas
add
jg
sbb
jbe
or
les
jb
xchg
jns
xchg
cli
ja
es
sbb
inc
inc
jecxz
arpl
sti
cmp
push
and
popf
jbe
mov
mov
dec
sti
loope
loop
inc
push
in
add
out
cmpsb
and
arpl
and
aam
rcr
mov
and
lcall
inc
pop
jmp
fisttps
scas
in
xor
inc
or
mov
push
or
std
push
and
xchg
and
mov
aad
fisttpll
push
les
or
push
add
sub
pusha
add
inc
pop
pop
pop
xor
leave
shrb
push
dec
mov
fs
mov
div
repnz
movsl
shr
pcmpeqb
push
mov
incl
lock
loope
mov
add
fwait
pop
sub
into
jge
and
hlt
and
xchg
and
pop
leave
dec
les
adc
mov
mov
cmpsl
adc
jle
fmull
cmp
jmp
int
jmp
lods
outsl
adc
xchg
jge
cli
sbb
lods
mov
das
lds
repnz
fsubp
mov
insl
cmpsb
stos
mov
inc
popa
movsl
ficomps
inc
fists
shrb
and
fwait
imul
add
cltd
push
add
xchg
sbb
inc
lods
push
ljmp
jns
int3
test
in
sbb
mov
mov
scas
dec
sub
les
adc
cld
test
or
bound
bound
adc
rorl
xchg
push
cwtl
add
out
add
inc
repnz
sbbl
data16
ret
icebp
lret
test
mov
mov
icebp
fisubrl
cmc
sahf
test
mov
sbbl
js
jecxz
sub
mov
sti
mov
and
add
push
jmp
mov
xchg
testb
fistl
call
mov
jp
push
and
repnz
xor
cltd
gs
adc
add
push
mov
test
shll
mov
mov
jae
test
adc
shll
testl
add
orb
xlat
pop
or
mov
ja
sbb
addb
pop
cli
pop
call
adc
pop
pop
pop
push
leave
daa
xchg
fidivrl
add
dec
or
stos
xchg
xchg
in
fsubl
clc
sbb
shll
push
mov
lds
dec
mov
mov
jne
sub
loope
mov
outsl
pop
fs
lods
and
and
cmp
and
cmp
mov
pop
or
xor
or
or
sbbb
dec
pop
dec
xchg
push
push
inc
mov
sbb
test
pop
push
in
incb
mov
xchg
lret
dec
loop
iret
sbb
hlt
test
dec
cwtl
xchg
scas
xor
push
inc
adc
fcoml
icebp
ds
add
and
fimuls
fs
test
cmp
xchg
pop
pop
sub
movsl
into
mov
or
sbb
lods
addr16
rclb
dec
mov
push
aam
pop
mov
gs
pop
inc
movsl
idivb
lock
test
pushl
sub
jbe
sub
cltd
in
xchg
enter
stc
push
jle
or
xchg
sti
movsb
loop
insb
xor
xchg
push
int3
push
stos
pusha
cmpsl
sub
sbb
arpl
jle
sarb
push
rcll
stc
scas
push
and
pushf
insl
fwait
scas
push
fldt
sub
add
jne
decb
aam
jmp
int3
xor
repz
sbb
outsb
adcb
xor
out
cmp
fadds
inc
pop
stos
daa
push
int
arpl
jg
cli
mov
out
mov
push
clc
dec
jmp
scas
mov
xlat
cmp
jp
xchg
jmp
scas
jl
int3
xor
ret
inc
mov
dec
pop
sub
jns
cmpsl
mov
aam
or
mov
imul
lret
xchg
jle
sar
jl
into
inc
into
ret
mov
dec
jae
icebp
idivl
shlb
ret
daa
imul
test
arpl
push
mov
imul
adc
mov
inc
xchg
adc
mov
dec
std
inc
mov
fs
scas
in
jge
test
push
mov
lcall
popf
push
repz
in
xchg
inc
xchg
sub
xchg
icebp
je
ja
shll
cmp
subb
jmp
loop
sbb
adc
jg
int3
xor
sub
adc
fwait
push
ljmp
repnz
mov
cs
je
mov
push
les
fidivrs
xor
test
pusha
dec
imul
sti
xor
and
jnp
stos
xor
jns
jmp
xchg
leave
scas
into
dec
xchg
jg
movups
or
cltd
lahf
cmpb
add
popf
gs
mov
add
mov
lods
xor
test
xchg
and
pushf
jno
out
push
xor
adc
xchg
jle
popa
ss
int3
or
push
xchg
xchg
mov
fcomip
loopne
jmp
xor
faddl
dec
mov
das
adc
std
jp
sti
xor
cmp
dec
jg
push
sub
pusha
loope
loopne
sbb
add
push
lcall
fwait
ror
inc
jnp
pop
mov
xchg
or
aad
xchg
inc
adc
sti
cs
mov
or
mov
out
fwait
btc
fsubs
inc
jnp
cmp
int3
push
lea
add
shr
ljmp
in
outsl
xor
adc
cltd
lcall
inc
ds
aaa
xor
ds
xor
icebp
ret
or
inc
xchg
jnp
popf
xor
cwtl
repnz
sbb
inc
mov
les
loopne
shlb
pop
out
cmpsb
push
testb
sbb
sub
or
nop
xor
mov
xchg
js
aas
add
push
mov
mov
mov
out
ret
jne
les
shlb
repnz
cmpsb
loope
add
ja
loop,pt
jle
aam
sbb
lods
adcl
scas
or
dec
add
icebp
push
notl
out
mov
pop
sbb
aaa
xchg
or
xchg
pop
in
xor
sbb
imul
adc
xchg
rorl
adc
unpckhps
mov
out
sbb
clc
xlat
xor
in
push
push
inc
ds
dec
loopne
inc
sbb
jl
lcall
cs
nop
pop
push
inc
loope
push
aaa
mov
aas
je
mov
inc
into
mov
cmp
mov
pushf
dec
scas
jecxz
dec
mov
jo
outsb
pop
sbb
out
daa
jno
push
pushl
push
inc
cmp
and
lds
and
sbb
dec
xchg
xorb
pop
fcompl
arpl
std
adc
ja
pop
cmp
pusha
sub
jo
jo
div
pcmpeqw
cmp
and
push
and
mov
inc
xor
push
jbe
or
scas
cmp
ds
fistpl
or
jp
mov
call
shrb
lret
mov
outsl
mov
and
dec
mov
sub
push
mov
fsubrl
or
outsl
repz
adc
lock
inc
lret
mov
add
fs
fistpll
sub
push
test
aaa
push
xchg
call
lods
add
dec
push
fisubrl
std
subl
fisubrl
cwtl
and
inc
addl
fnstsw
addb
xor
lods
andl
repnz
imul
movsb
scas
mov
jecxz
mov
rol
mov
incl
pop
int
repz
or
sbb
bound
cld
fldl
cmpsb
orl
jo
or
mov
add
repnz
neg
cmp
or
sub
lahf
cwtl
test
adc
dec
scas
jecxz
aad
stos
xchg
or
data16
les
movsl
pop
test
sbbb
jnp
pushl
push
mov
std
imul
or
jbe
icebp
xchg
stos
xchg
daa
mov
jmp
daa
cmpsb
push
mov
fs
int
test
rol
loop
mov
sub
arpl
push
sbb
into
shll
inc
jmp
mov
std
hlt
adc
cmpsl
jb
arpl
outsb
jmp
pop
sbb
push
or
mov
mov
mov
pop
or
jnp
sbb
jp
mov
sbb
or
inc
adc
inc
popa
stos
xchg
add
mov
mov
jg
aas
fdivr
call
ss
fwait
lds
movsl
sarb
sbb
add
lret
dec
xchg
jp
aas
jbe
es
push
test
insl
jg
inc
cmpsl
xor
shrb
out
push
icebp
je
les
fisubrl
out
addr16
pop
push
mov
mov
stos
fwait
jecxz
mov
daa
std
xor
cmpsb
lret
stos
mov
sub
loopne
shll
repz
mov
and
xchg
fldt
adc
dec
fsubrl
rol
jne
cs
stos
mov
sbb
xchg
xor
push
clc
addl
xchg
xor
pop
out
stc
test
xchg
xchg
ss
xchg
cld
jmp
sbb
mov
mov
adc
pop
lret
xchg
icebp
and
mov
sar
jecxz
shlb
mov
xchg
call
cmp
fiadds
icebp
jl
sub
pop
out
in
xchg
add
scas
out
loop
movsb
pop
in
fnstsw
in
jge
push
lea
les
lods
lods
add
jge
or
and
fldl
push
in
dec
icebp
adc
incl
add
inc
add
lret
xorl
xor
movl
cmp
movl
je
mov
xor
adcl
add
cmp
jne
pushl
call
mov
mov
and
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
sub
add
mov
xor
mov
add
movl
cmp
je
sbbl
pushl
pushl
call
sbb
mov
dec
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
sbb
mov
xorl
xor
subl
add
cmp
movl
je
mov
mov
mov
or
mov
mov
mov
add
mov
and
mov
and
mov
adcl
add
movzwl
sbb
mov
mov
or
mov
mov
sbbl
add
not
mov
mov
jmp
movzbl
add
mov
mov
xor
mov
andl
add
inc
mov
sub
mov
sbbl
mov
xor
decl
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jmp
into
mov
adc
shll
sbb
cmp
bound
pop
bound
rol
scas
lret
inc
inc
nop
arpl
movl
mov
test
and
out
inc
sub
outsb
out
jl
sbb
xchg
dec
xchg
mov
shll
int
das
jne
sti
addr16
je
xor
int
pop
push
xor
push
dec
or
push
imul
repnz
xchg
xchg
outsb
and
cmp
imul
pop
nop
inc
jge
xor
cwtl
sbb
sbb
dec
adc
push
movb
xchg
dec
mov
lahf
sti
icebp
cmp
inc
ja
aam
stos
in
push
xchg
xor
push
stos
sub
pop
sbb
xchg
cmpsl
dec
ret
xorl
fmull
fstpt
inc
jp
stos
leave
pop
call
mov
add
mov
dec
sbb
cli
jns
add
shlb
jns
mov
rcr
mov
mov
and
adc
mov
push
adc
mov
inc
mov
mov
dec
push
push
and
sbb
pop
div
inc
and
adc
sub
sbb
xchg
test
fildl
in
nop
pop
cli
call
adc
xchg
imul
cld
out
std
imul
xchg
arpl
xchg
mov
fprem1
or
ja
mov
repnz
dec
and
inc
cmp
add
lock
add
adc
or
je
sub
jo
dec
sub
mov
and
stc
outsl
arpl
push
icebp
imul
aad
pop
imul
in
sbb
test
pop
cmp
sbb
adc
adc
ja
mov
jae
stos
dec
aas
push
adc
cmp
stc
sti
aaa
iret
sti
fwait
clc
jno
mov
imul
ja
shl
pop
push
je
stos
mov
loopne
rorb
mov
cmp
popa
xchg
orb
imul
outsl
xorb
imulb
dec
pop
mov
xor
or
orl
mov
mov
cmp
push
jbe
push
inc
mov
inc
inc
out
inc
repnz
sub
int3
lahf
mov
pop
adc
enter
movsb
mov
testl
mov
and
and
add
pop
movsl
jge
and
mov
xlat
mov
push
pop
into
xchg
pop
outsb
xchg
or
icebp
js
sbb
inc
mov
or
push
loopne
sbb
ret
ja,pn
in
mov
imul
int3
mov
jae
xchg
dec
add
push
scas
imul
xlat
jge
int
adc
lods
mov
mov
lods
in
mov
mov
sub
jne
or
sub
lods
test
and
mov
mov
push
xchg
add
inc
dec
test
jp
cld
mov
or
adc
mov
pop
jle
leave
push
cmp
mov
bound
push
ljmp
cmpsl
mov
mov
aas
dec
xchg
je
rcr
cwtl
mov
sbb
inc
movl
cmp
fsubs
adc
in
or
fwait
inc
out
popa
cwtl
adcl
add
mov
dec
push
jg
push
neg
stos
clc
sub
jl
iret
sahf
and
imul
insb
cmp
nop
test
lcall
lahf
jb
mov
xlat
hlt
orb
fdivrs
lahf
test
mov
jbe
test
add
xchg
mov
pop
lret
sbb
mov
push
addr16
ja
out
lods
mov
xchg
inc
out
mov
push
sbb
adc
sub
cmp
icebp
frstor
or
out
inc
dec
popa
add
dec
push
xchg
imul
scas
fsubl
mov
add
sub
mov
jo
shll
fdivrl
mov
mov
pusha
inc
outsl
xor
aaa
filds
lret
push
aas
adc
pop
jnp
ds
dec
frstor
nop
or
or
push
adc
addr16
movsb
das
push
adc
mov
or
in
pop
push
mov
sub
and
sub
outsl
loop
or
test
les
fsts
test
pop
loop
iret
sub
insb
dec
jge
pushf
aas
fdivs
push
xorb
adc
sbb
cli
cmp
inc
scas
dec
and
sub
imul
xchg
test
addl
and
loop
ljmp
push
jae
push
sub
sub
lret
mov
or
ja
add
fdivl
mov
xchg
mov
arpl
inc
cmp
xchg
lcall
xchg
lahf
push
insl
add
out
test
mov
pop
push
add
sub
push
repnz
cmp
pop
inc
push
xor
stos
cmpb
fs
adc
xchg
repz
sbb
addr16
mov
jl
fstpt
pop
cs
stos
cmpsb
cmpb
ds
sbb
in
xor
jg
loopne
idivl
lahf
add
inc
pop
sahf
mov
jbe
cltd
jecxz
xchg
add
mov
sub
js
jbe
daa
pusha
sbbl
jmp
push
xor
enter
add
cmp
and
push
cltd
sti
mov
mov
hlt
flds
sbb
div
pop
cli
fldcw
jb
pop
mov
mov
mov
push
pop
jg
iret
dec
lea
sarl
pop
testb
insw
pop
inc
inc
andl
cmpsb
pop
and
mov
push
push
out
add
pop
sar
sub
in
into
sbb
adc
pop
outsl
movsb
fisubrs
cmc
gs
fsts
pop
mov
mov
dec
cmp
mov
mov
sbb
sub
sbb
cmpsl
mov
or
push
sbb
push
mov
add
inc
inc
jl
daa
cli
push
fmuls
dec
mov
nop
movsl
add
and
fwait
loop
adc
ror
je
les
js
shl
pop
mov
pusha
nop
in
das
add
sbb
das
scas
push
cmpl
int3
jae
call
or
js
cmp
mov
in
iret
cmp
faddp
inc
mov
sub
pop
dec
dec
mov
popf
out
xor
repnz
std
inc
mov
mov
sub
mov
mov
mov
push
xchg
daa
ja
inc
push
hlt
jb
xchg
jae
mov
mov
test
xor
enter
lods
mov
shlb
jo
out
xor
jb
imul
push
aaa
out
xchg
in
sub
sbb
loope
fistpl
jbe
ds
dec
je
dec
rorb
in
test
jmp
pop
dec
xor
mov
bound
cli
mov
mov
cmp
push
push
fwait
inc
pop
or
out
cmc
jns
adc
rolb
push
sub
pop
lods
jae
add
and
loopne
mov
jne
jbe
jp
jge
iret
outsb
xor
mov
fisttpl
sub
cmp
in
push
dec
push
loope
cmpsb
and
cmp
jns
mov
push
popa
sub
ss
fstpl
or
dec
jae
ja
mov
push
mov
dec
dec
rcll
cmpsb
dec
nop
loop
scas
xor
jns
dec
jg
test
inc
mov
inc
in
xor
sti
shlb
incb
sbb
mov
mov
dec
adc
mov
mov
ficomps
sub
fisttpll
dec
xchg
sbb
mov
mov
es
push
or
cld
adc
cmpsb
pop
adc
repz
push
jle
roll
fmull
xor
fistl
test
clc
xlat
movsb
addr16
xlat
sbb
aas
sbb
adc
push
inc
mov
inc
clc
sub
sub
faddp
xchg
out
mov
dec
sbb
add
adc
pop
es
pop
push
ss
les
mov
fsubr
push
jno
pop
cmc
outsb
add
lret
jne
adcl
scas
jecxz
pop
pop
sbb
mov
sbb
hlt
jecxz
mov
scas
pop
fidivrs
and
pop
xchg
aad
aam
xchg
inc
js
out
xorl
dec
pop
mov
out
jp
xchg
insb
rcrb
imul
cmp
nop
pop
or
inc
mov
sahf
movl
movsl
mov
negl
and
enter
out
cmc
cmp
imul
mov
insb
jl,pn
xchg
ljmp
popa
or
fimuls
test
les
jg
pop
pop
cli
xlat
in
add
lods
out
movsb
cmpsb
pop
add
xchg
add
pop
mov
xchg
sbb
adc
xor
lret
mov
pop
and
into
dec
xchg
pusha
in
in
mov
shll
insb
cli
inc
int
das
cltd
roll
xchg
mov
sbb
mov
dec
lahf
pop
and
sub
fs
jne
sbb
and
sahf
cli
lahf
sbb
mov
rcrb
add
daa
hlt
loopne
lret
fnstenv
fdivs
mov
sbb
push
xchg
cmpsb
xor
loop
lea
adc
ss
xchg
lods
adc
stc
and
mov
pushf
mov
jle
bound
movsl
and
xor
mov
lods
imul
test
test
pusha
and
add
sbb
mov
test
test
leave
sub
and
mov
cmc
pop
cli
outsb
test
or
and
pop
cmp
pop
aad
and
insb
jno
in
sbb
xor
stc
hlt
lret
jmp
insl
mov
stos
xor
push
ret
dec
sub
inc
rolb
mov
dec
arpl
imul
into
mov
nop
lds
scas
shlb
in
fcomi
fs
jle
pop
rcrl
cmp
int
test
out
xchg
dec
popf
push
data16
ror
xor
xchg
and
insl
insb
aas
ret
fisubrl
sbb
test
ret
inc
xchg
stc
fldl2e
fwait
dec
add
push
fdivl
mov
add
test
cmc
mov
not
and
or
lret
mov
lock
incl
ret
pop
ficoms
stos
jnp
in
pusha
jp
mov
pop
cmp
push
adc
shrl
mov
dec
sbb
adc
sbb
cli
inc
mov
ljmp
jae
add
fwait
jne
dec
jb
ss
js
iret
loope
hlt
shrb
lock
mov
ja
dec
psubusb
xor
addl
leave
in
divl
xchg
testl
movaps
std
je
aaa
rolb
fstps
or
cwtl
enter
cmpsb
jg
in
pop
sbb
dec
sbb
gs
aas
dec
mov
push
fwait
ret
stc
lods
or
loope
inc
test
and
daa
pop
pop
sbb
cmpsl
fnstsw
inc
jno
ljmp
push
cmp
xchg
movsb
inc
jge
xor
jno
pushf
and
and
ljmp
test
rclb
or
pop
sub
cmp
ret
or
rcrb
je
inc
add
shll
popa
ficoms
enter
push
movsl
int3
push
mov
cli
cmpsl
add
dec
fisubrs
ljmp
outsb
mov
inc
ds
es
xchg
clc
ret
cltd
shlb
push
inc
fstl
and
lods
insl
ret
jl
stos
xchg
pop
scas
adc
dec
lock
sbb
fwait
int3
xor
mov
outsl
enter
mov
hlt
jecxz
push
ret
addr16
xor
jb
cmc
push
clc
mov
lock
xchg
cmp
in
mov
mov
int3
sbb
mov
mov
sbb
xchg
mov
jle
dec
xorb
push
lds
ljmp
and
testl
jecxz
pop
cmp
out
sbb
mov
pop
xchg
xchg
or
xor
fninit
rcrl
sub
push
or
dec
inc
push
add
dec
push
popa
loop
pop
push
and
jp
push
jbe
mov
sbb
mov
adcl
mov
leave
pop
movsb
jnp
call
jno
mov
aaa
mov
and
enter
repz
sti
push
mov
shrb
pop
aad
fdivr
lcall
add
cli
test
aas
cld
int
clc
sub
iret
adcl
test
sahf
cwtl
jb
repz
lods
lock
sub
fstps
fcomps
lahf
mov
sub
leave
or
mov
call
je
out
sub
dec
ja
pop
dec
fidivrl
cmp
jmp
jle
call
mov
pop
inc
cmpsb
or
cmc
add
add
pushf
jl
clc
xchg
lea
imul
xchg
mov
or
das
push
jle
xlat
mov
rcrb
ss
aaa
and
movsb
das
repz
lds
call
push
dec
jle
imul
mov
orl
push
jp
xor
mov
stos
push
popf
lret
xor
lcall
xor
mov
push
imul
sbb
cmpsb
test
out
mov
inc
sbb
sub
mov
mov
ss
dec
fsubs
xlat
cvttps2pi
cmc
pop
xchg
rep
xchg
pop
or
sub
shlb
rolb
mov
jnp
outsl
xchg
pop
mov
xlat
lods
pop
pop
pop
ss
iret
rolb
jo
push
sbb
lret
cmc
sub
sarb
stos
jo
inc
jl
ljmp
imul
xor
adc
xchg
pop
push
enter
clc
pusha
insb
loopne
sub
mov
scas
nop
xchg
xchg
cmpsl
mov
arpl
ja
jb
and
sarb
lods
in
btr
andl
xchg
aad
xor
add
push
ds
sbb
jmp
loopne
stos
push
xchg
loope
push
in
cli
mov
int3
xor
mov
inc
jecxz
inc
test
sbb
sbb
pop
mov
inc
mull
movsl
push
lret
inc
sub
mov
xchg
loope
jns
pop
decl
push
or
fwait
arpl
push
test
jns
sub
mov
out
xor
pop
adc
icebp
in
imul
cmc
fsubl
inc
push
push
mov
mov
push
fildll
clc
or
inc
xchg
xchg
enter
mov
dec
data16
inc
xlat
out
aas
mov
fsts
mov
cmp
xchg
xor
std
or
pop
test
fsubl
test
xor
adc
mov
push
rolb
sbb
outsb
movswl
in
jae
mov
lock
mov
js
cmpb
insl
mov
mov
inc
mov
outsl
inc
out
push
lods
into
inc
repz
iret
mov
cli
mov
dec
jne
ja
aaa
pop
push
aaa
sbb
movsl
jmp
fwait
push
push
scas
add
xchg
adc
adc
rcl
frstor
fcoms
cmp
mov
jg
mov
inc
and
jg
sarl
lret
vshufps
out
dec
adc
iret
push
mov
cltd
sub
imul
jae
stos
jno
add
fs
loopne
mov
mov
mov
insl
sbb
mov
neg
jo
fcoms
or
push
cmpl
xchg
dec
hlt
out
xchg
mov
or
dec
sbb
xchg
push
and
call
xchg
xchg
lret
mov
adc
inc
loop
repnz
rolb
sbb
mov
adc
mov
in
icebp
mov
int3
lea
in
inc
or
test
sub
sbb
shrl
sub
outsl
mov
add
stos
adc
jno
mov
xor
subl
test
jl
ficoms
mov
sbb
mov
push
mov
jbe
xchg
ficompl
cmpsb
pop
mov
add
mov
scas
sti
decl
xchg
hlt
hlt
lock
loope
sbb
call
movsb
std
cld
pop
jecxz
out
rcrl
jg
cmp
mov
pop
push
pop
cmpsl
daa
imul
call
pop
mov
shrl
push
lahf
pop
jbe
setge
sub
loopne
decb
imul
sub
aaa
push
add
fiadds
clc
push
inc
cltd
imul
push
xorl
enter
hlt
call
bound
shlb
cmp
in
dec
sbb
mov
int3
mov
inc
fwait
test
adc
pop
shlb
jle
jbe
imul
rcr
out
mov
mov
insb
jle
push
cli
add
adc
imul
cmp
push
rcrl
xor
jb
push
out
add
dec
mov
hlt
jne
and
je
data16
in
add
insb
andps
sbb
ja
rolb
add
mov
dec
lods
fnstsw
jmp
adc
js
jge
movsl
aaa
cmp
sahf
mov
loopne
out
les
aad
hlt
add
adc
fsubr
sbb
xlat
mov
inc
cmp
lods
insb
fsts
jb
mov
mov
mov
shll
arpl
stos
out
ss
ss
mov
add
in
popf
sbb
mov
nop
sub
cmp
insl
pop
jne
sbb
inc
js
outsb
jae
sub
mov
pop
outsb
jns
pop
in
das
mov
lret
aad
mov
popf
lock
jle
push
adc
xchg
pop
out
ja
xor
inc
out
cmp
pop
sub
or
out
xor
mov
mov
popf
stos
lock
inc
xorl
cmp
or
or
mov
cmp
inc
mov
add
jns
fwait
jo
adc
fwait
and
pop
dec
sbb
test
jae
sti
pop
lcallw
adc
inc
cmp
ds
sahf
fsubrl
icebp
and
out
cmp
xor
mov
pop
or
xchg
adc
mov
adc
es
cmp
adc
adc
jecxz
jge
adc
add
push
pop
xchg
in
mov
cmp
cltd
dec
pushw
out
jnp
mov
into
popa
inc
adc
shrb
inc
push
std
xchg
sub
mov
push
data16
ljmp
pushf
mov
mov
mov
sahf
add
push
dec
daa
dec
jmp
subb
dec
mov
sahf
shlb
add
movsb
xchg
loop
or
pushf
movsl
mov
adc
xchg
mov
add
add
mov
pusha
sbb
jo
or
mov
xchg
data16
inc
inc
jge
lods
adc
jae
cmpsb
imul
cmpsb
mov
push
and
push
fldpi
std
mov
xchg
sbb
pop
push
cmp
add
cmp
jle
jbe
inc
test
fsub
xor
clc
dec
mov
xor
cmp
stc
add
xlat
jmp
sbb
out
nop
xor
cmc
dec
sub
jmp
jmp
iret
mov
sbb
jle
ret
xchg
fildll
add
sbb
icebp
insl
cmpsl
clc
sbb
dec
and
aam
mov
dec
aaa
or
add
jbe
ret
or
imul
pop
test
mov
repnz
out
xor
adc
sub
pop
pushf
fcom
insl
bnd
push
and
lods
or
adc
out
add
xor
fists
jns
ljmp
xchg
ljmp
push
push
in
out
in
add
push
lret
cmpsb
ss
and
enter
mov
sub
xor
daa
cmp
push
imul
or
dec
mov
dec
arpl
out
sbb
push
mov
cld
imul
cmp
popf
testb
dec
jl
hlt
xor
pop
adcl
subb
inc
or
sub
rorl
aaa
add
xor
pop
stc
inc
jmp
add
jo
shrd
call
mov
push
sbb
sbb
xor
and
inc
push
mov
push
push
and
sbb
ja
push
fists
incb
or
xchg
push
inc
roll
jnp
aad
add
idivl
loopne
adc
aam
dec
add
push
xchg
in
mov
or
pop
xorb
xchg
or
pusha
and
fdivl
push
mov
rolb
jne
inc
jbe
cli
in
mov
pushf
cmp
pop
out
in
mov
push
and
clc
add
stos
sbb
testb
andl
pusha
aaa
shrb
out
fs
jp
fiadds
or
jp
or
xchg
pop
lcall
cmc
cltd
jns
mov
push
push
leave
data16
or
repz
int3
push
xchg
mov
pop
jle
jb
xor
cmpsl
je
adcl
inc
lods
jle
pop
cmp
sub
or
arpl
xchg
push
mov
add
jp
stc
and
shlb
adc
repnz
dec
ja
and
in
cltd
imul
movl
mov
adc
call
mov
xchg
ljmp
xchg
cmp
es
popf
sbb
sbbb
inc
pop
aas
adc
divb
incl
popf
push
pop
imul
and
add
repz
dec
sub
dec
sbb
movsb
test
sub
xor
lods
mov
scas
aad
cmp
insl
and
popa
push
jmp
xchg
xor
ds
jb
mov
jmp
repz
jecxz
icebp
iret
adc
xor
jne
sub
dec
aaa
scas
out
cmp
jae
dec
adcl
call
cltd
mov
sbb
adc
mov
std
mov
fdivs
jle
cltd
leave
repnz
sbb
test
xorb
fstp
sbb
lret
xchg
imul
mov
mov
sub
sarl
jb
hlt
lea
scas
xor
jo
mov
ret
insl
mov
jb
push
push
add
int3
enter
inc
add
std
imul
or
mov
mov
icebp
in
sbb
test
and
adc
jnp
aas
or
adc
enter
sub
ror
pop
sbb
push
clc
cmpsb
movsl
xor
insb
add
aaa
adc
mov
mov
inc
inc
ljmp
mov
test
pop
pop
xchg
lds
or
jg
adc
test
mov
cld
stos
mov
cmp
rcrb
in
mov
arpl
lods
xchg
jno
dec
add
pop
dec
inc
sbb
mov
sub
cmp
sbb
fdivr
add
scas
and
inc
cli
iret
sbb
or
xlat
sub
mov
dec
sub
cld
mov
lcall
sbb
pop
mov
add
repnz
imul
add
jno
and
and
pop
inc
stos
and
movsl
shrl
inc
das
jmp
cmp
adc
shrl
sbb
adc
aaa
nop
mov
xchg
push
loopne
mov
or
repz
aam
push
int3
mov
in
sub
mov
pop
xchg
ss
dec
adc
mov
and
ljmp
aad
frstor
mov
push
daa
cmc
dec
cmpsl
jp
xchg
into
div
fidivrl
mov
sub
scas
adc
sti
push
scas
sbb
imul
stc
fbstp
test
xlat
jg,pn
mov
xor
push
dec
icebp
and
add
xor
scas
dec
aam
test
lea
repnz
shld
inc
in
lret
out
ss
dec
sub
xchg
out
sub
dec
and
negl
adc
lcall
mov
daa
jmp
pop
icebp
movsb
pop
mov
aad
daa
out
push
xor
xor
adc
hlt
mov
pop
std
mov
push
mov
xor
jg
in
or
bound
xor
adc
dec
pop
xchg
aad
pop
aas
push
fisubrl
mov
xor
or
mov
mov
jp
rorl
into
dec
incl
in
addr16
jo
outsl
ss
gs
stc
std
dec
daa
add
subb
fwait
cmp
rorl
cmp
out
scas
mov
outsb
xor
fmul
jns
fstp
pop
mov
or
jne
lea
sbb
mov
scas
push
outsl
jno
loopne
inc
pusha
pop
sub
ss
insb
push
dec
mov
dec
dec
mov
mov
xor
sub
dec
cli
aad
leave
jno
fdiv
inc
sub
xor
or
testb
jg
add
cmp
jge
es
lods
pusha
sbb
push
ret
out
xor
sub
nop
inc
rcrl
test
lcall
add
test
inc
mov
adc
test
nop
call
jnp
add
pushl
adc
mov
push
out
js
push
pop
lret
lds
pushf
jnp
cmp
mov
ret
mov
inc
jle
out
pop
idivb
loope
mov
xchg
dec
and
mov
inc
aas
adc
push
dec
push
icebp
pusha
cmp
insl
addr16
xor
sahf
jo
nop
add
mulb
add
mov
jno
or
loope
clc
or
push
jne
nop
dec
sbb
mov
insb
push
fiaddl
cmp
cld
iret
sub
aam
mov
clc
jge
mov
mov
cwtl
mov
push
add
int3
fstpl
in
out
mov
jns
sarl
fs
clc
cmp
jno
out
out
dec
cmpsb
es
lods
imul
mov
daa
movsl
pusha
add
popa
xor
mov
fcomps
push
or
or
nop
and
mov
clc
out
xchg
and
outsl
aas
popa
or
movsl
enter
addl
jb
sbb
adc
out
cltd
pop
cmp
scas
roll
mov
dec
adc
pusha
mov
mov
xor
lret
mov
dec
jg
cmp
aaa
cmp
mov
inc
or
stc
xchg
fimuls
ss
mov
and
sbb
mov
lds
rol
inc
xlat
push
aaa
arpl
in
inc
lcall
cs
cwtl
sub
mov
xchg
es
cmp
xor
jecxz
jno
jns
xor
pop
push
mov
insb
mov
add
dec
adc
stos
fisubl
or
call
aas
ss
xchg
xchg
pushf
sub
iret
mov
pusha
test
ds
xor
lcall
orb
fsts
mov
push
and
int3
and
imul
xor
mov
fiadds
pop
and
arpl
cli
cmpsl
push
mov
pop
iret
les
ficompl
push
ret
fsubp
pop
push
rcll
in
sub
sbb
sub
daa
dec
push
aaa
adc
sub
jl
aad
lock
loop
xchg
iret
xchg
gs
hlt
dec
jge
jnp
das
inc
aas
ret
mov
in
jo
sub
cmp
cld
mov
pop
mov
xchg
mov
ljmp
xorb
xor
xchg
push
xlat
lods
dec
mov
pop
lahf
mov
lock
sub
addr16
aad
dec
leave
adc
mov
adc
dec
jge
pop
into
mov
jne
sarl
fisubrl
loop,pn
out
cs
jno
aad
sahf
sti
mov
or
es
fisubrs
xor
sarb
dec
add
repz
mov
mov
cltd
data16
add
push
fbld
sub
mov
aas
push
dec
mov
lret
xor
sbb
push
add
jne
pop
shll
fs
stos
add
push
ficomps
mov
popa
mov
sub
add
insl
arpl
addr16
jle
or
test
cmpsb
mov
mov
add
jg
rolb
mov
lcall
jne
jmpw
nop
test
cmp
int3
cs
mov
loopne
shlb
adc
or
adc
and
scas
xor
aaa
jnp
mov
pop
shlb
fnsave
fdivl
inc
repnz
add
es
adc
jnp
xor
mov
mov
lahf
mov
push
outsb
sub
loopne
adc
or
lcall
xchg
pause
push
mov
aas
icebp
add
adc
stc
std
and
out
mov
mov
sbb
ja
aas
push
adc
loopne
jle
test
jo
mov
or
mov
adc
inc
pop
arpl
pop
inc
ja
xchg
adc
lcall
push
out
leave
movsl
inc
rcr
mov
mov
fst
fldt
test
or
scas
outsb
sbb
jae
dec
jns
or
mov
push
lea
and
fdivl
mov
scas
ficomps
jp
lcall
pop
outsl
fs
dec
add
sar
or
cld
fcompl
or
fimull
out
xchg
pop
pop
int3
sbb
ja
addr16
enter
pusha
dec
repnz
mov
dec
insb
pop
sar
mov
ret
xor
clc
cwtl
fists
aas
repz
dec
jmp
jae
dec
in
rorl
cld
xchg
mov
inc
push
push
mov
leave
xchg
push
movsb
or
dec
std
pop
mov
mov
and
faddl
or
adc
roll
lds
lods
add
xchg
jle
out
pop
add
test
clc
sbb
insl
mov
push
sub
int3
pop
push
push
fsubrl
fisubs
push
mov
xchg
push
cmpsb
int3
movsb
pop
sbb
imul
xchg
lea
mov
decl
add
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
xor
xor
and
movl
mov
sub
mov
and
mov
xor
add
mov
movl
mov
sbbl
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
xor
push
mov
mov
add
mov
mov
mov
mov
jmp
push
add
mov
add
jg
add
sub
bound
dec
push
adc
test
pop
xchg
xor
xchg
test
jmp
aas
sbb
test
jge
pop
mov
add
jno
call
cmpsl
mov
rcr
or
pop
movsl
sbb
cli
fcmovne
dec
pop
lods
lret
cmp
test
or
mov
das
imul
je
lock
add
inc
movsb
jecxz
push
mov
mov
sahf
add
enter
cli
dec
adc
or
sub
dec
fisubrs
fstpl
dec
out
add
outsb
lock
xchg
inc
dec
fsubrs
dec
sbb
xchg
cld
sbb
and
pop
bound
mul
push
lods
pop
scas
sub
mov
mov
mov
loop
int
or
or
and
movsb
xchg
iret
mov
add
mov
testb
in
mov
pop
les
sbb
cmp
push
pusha
inc
imul
bound
inc
test
ret
sub
call
sahf
out
faddl
movhps
or
xor
test
sbb
sti
mov
movsb
dec
fucomp
jecxz
pop
arpl
mov
and
jne
fstpl
xchg
sub
push
push
sbb
lods
and
and
dec
adc
lods
xchg
mov
ret
and
lahf
data16
cmpsb
jecxz
cmp
into
orb
jno
push
pushf
js
pop
add
cmp
or
cmp
ficoms
sub
push
outsl
sub
gs
jo
pop
or
ljmp
ret
repz
out
imul
or
clc
fwait
sub
or
mov
xchg
jl
sti
enter
push
mov
jge
mov
jg
mov
or
call
or
rclb
jne
aam
sub
insl
xchg
ss
mov
mov
cmpsl
dec
in
fnsave
aad
push
out
jns
and
int
sarl
mov
ss
pop
push
lea
decl
mov
addr16
loope
mov
jb
test
jo
push
test
adc
mov
mov
xor
popf
pushf
jns
shll
mov
lcall
test
pop
rolb
add
mov
dec
mov
mov
cmpsb
add
and
push
push
and
popa
push
inc
in
ja
dec
in
jg
pop
call
jecxz
dec
add
imul
loope,pn
xchg
stos
outsb
stos
push
shlb
ret
sbb
push
xchg
in
rorl
push
loope
lock
pop
lcall
jb
and
arpl
jo
xor
jecxz
pusha
in
icebp
lea
addr16
shll
and
leave
leave
fildl
add
rolb
aad
out
iret
sbb
inc
pusha
xchg
sub
jae
jne
icebp
push
rorb
cmp
or
cmc
jnp
pusha
inc
ret
sbb
test
xor
mov
sahf
test
jne
cmc
pop
fistpll
ss
push
incl
push
sbb
dec
jmp
inc
mov
ret
stc
sbb
lret
ljmp
push
aaa
into
jecxz
enter
jle
pop
dec
jns
xor
ds
add
or
fwait
dec
push
leave
fcompl
jae
scas
dec
adc
mov
movsl
mov
mov
jg
cmp
xacquire
incb
movsl
loop
xor
lods
fwait
jo
ficoms
add
or
pop
xor
data16
and
adc
inc
sti
or
sbb
notb
iret
lods
jbe
aad
in
clc
gs
scas
lock
aas
adc
mov
hlt
in
mov
fwait
add
out
shrb
mov
add
xchg
inc
dec
lods
add
inc
add
adc
loope
test
mov
cmp
fldl
and
mov
pop
dec
cmp
lds
pop
push
repz
dec
lea
jb
testb
dec
or
ljmp
pop
and
test
stos
mov
pop
push
int
xor
call
adc
mov
vpsrld
mov
movsb
inc
inc
cmp
pop
cld
push
sbb
test
add
xchg
jp
les
in
cltd
dec
mov
pop
jno
push
push
jp
dec
inc
jo
rcrb
test
push
inc
negl
jge
add
jns
popa
jnp
in
roll
scas
xor
dec
dec
and
pop
cmp
pusha
lods
sub
lock
and
outsb
fs
out
imul
inc
and
sbb
sbb
outsl
xor
xchg
stos
sbb
loopne
popf
pop
and
fidivrs
xchg
enter
lahf
scas
add
lock
mov
pop
int3
add
icebp
push
inc
adc
mov
xor
mov
cld
stos
or
and
and
dec
fcoms
mov
test
insb
pop
ja
and
push
xlat
stos
sub
rclb
pop
mov
push
and
sahf
cmpsl
pop
movsb
jno
imul
aaa
subb
adc
sub
dec
repnz
xor
out
repz
gs
les
icebp
mov
lcallw
ds
popa
neg
sahf
test
sbb
xor
mov
lds
mov
arpl
fxch
fmull
adc
adc
mov
repnz
ret
mov
dec
push
inc
inc
mov
imul
lret
xor
jbe
stc
jnp
push
mov
push
cmp
bnd
xchg
adc
fdivs
inc
pop
fwait
mov
and
mov
pop
daa
cmp
jnp
adc
lds
adc
inc
lahf
ds
dec
or
dec
push
dec
adc
xchg
mov
mov
add
cmp
mov
roll
push
mov
cmp
xor
hlt
mov
adc
xchg
or
add
fiadds
out
es
sbb
test
mov
ret
enter
fildll
dec
ficompl
sbb
inc
fcmovnu
punpcklbw
subb
adc
sbb
add
ja
sub
dec
cwtl
or
mov
pop
idivl
shr
lea
mov
inc
mov
stos
jbe
cmp
push
fldln2
fildll
mov
pop
movsl
aam
fldl
ss
sbb
mov
cmovne
aas
cmp
cmp
repnz
jge
push
or
jg
das
xchg
mov
leave
jle
negb
adc
rcrb
xchg
xchg
les
test
adc
jbe
roll
aaa
or
cmpsb
xchg
inc
xor
shll
adc
lahf
popa
or
scas
clc
cmpsb
outsl
jmp
es
mov
stos
test
loop
pusha
out
dec
lahf
xor
jb
lahf
xorl
adc
fldcw
ret
pop
outsb
pop
add
lcall
fcmovb
out
nop
out
jg
loop
mov
lock
mov
fstl
cmpsl
in
push
andl
lock
daa
jge
and
xor
mov
scas
addl
lea
sbb
pop
push
in
add
es
sbb
jecxz
repz
loop
cmpsl
lret
orl
enter
cmp
push
xor
push
mov
daa
int
dec
fwait
aas
fsubl
adc
pop
std
jno
push
inc
sub
icebp
mov
popa
cltd
loopne
ret
lock
out
adc
adc
adc
pop
or
push
cmc
loop
jb
orl
inc
jecxz
push
stos
jmp
popf
imul
adc
test
fdiv
xor
dec
mov
mov
addr16
cmpsl
sbb
push
jnp
mov
jbe
fwait
movsb
out
mov
add
sub
leave
add
sbb
negb
test
xchg
push
xchg
sub
jns
int
jns
sbb
in
mov
lcall
push
pop
push
into
adc
adc
and
pop
mov
sub
pop
and
add
sub
into
cmp
sahf
mov
in
mov
cmp
xor
inc
hlt
mov
clc
fcomps
mov
rcll
je
xor
outsl
inc
pop
daa
mulb
imul
repnz
push
test
push
jge
mov
push
loopne
fisubrl
popf
sti
outsl
sbb
mov
fsubrs
mov
sbb
fistps
fdiv
lods
rol
lods
cmpsl
push
sbb
fidivl
repz
loop
jno
or
inc
das
mov
hlt
popf
xor
xor
pushf
lods
sbb
sbb
xor
imul
mov
outsb
es
sti
cs
jl
decl
jno
in
jmp
test
inc
icebp
test
mov
pop
sar
es
inc
movsl
mov
loope
aam
shrl
mov
sbb
push
enter
outsl
arpl
adc
cli
stc
xorl
push
mov
ret
sub
out
cltd
lea
jmp
dec
cmp
sti
add
pusha
imul
xchg
push
pop
jb
and
dec
push
lods
adc
cmp
xor
popa
lods
call
stos
sbb
lahf
ret
out
fs
test
shr
lret
int
retw
lds
hlt
push
ret
lock
mov
loop
mov
cmp
sarb
cmc
mov
xor
sub
jecxz
adc
push
jne
inc
lret
test
out
div
sub
pop
sub
or
stc
ret
or
sbb
lret
xchg
pop
pop
jmp
cmpsl
jne
mov
int3
lods
lods
xchg
out
scas
xchg
cmpl
sbb
push
pop
push
pop
fsubl
fistps
cmc
xchg
cmpsb
orl
test
push
add
jmp
mov
enter
jp
mov
hlt
fs
or
fcompl
jae
icebp
loope
mov
mulb
jg
int
jmp
jmp
stc
inc
pop
push
mov
mov
mov
add
movsl
je
jg
push
mov
mov
das
sbb
test
or
adc
pushf
jmp
in
mov
mov
bnd
inc
lcall
or
add
aaa
icebp
and
sbbl
dec
das
ja
cltd
clc
in
adc
adc
xor
xchg
popf
aam
ljmp
push
fcompl
cmpsl
imul
pusha
out
add
imul
sub
imul
lds
push
pushf
push
dec
mov
popa
push
lods
in
dec
jne
test
lods
scas
in
mov
call
dec
data16
fildl
inc
nop
jb
sbb
sub
jnp
jp
mov
lea
xchg
ret
lock
aam
mov
shl
arpl
mov
pop
das
mov
clc
lahf
popf
inc
les
inc
int3
ret
mov
das
stc
js
xchg
sbb
and
ljmp
rolb
test
test
mov
fstl
sbb
dec
lret
aaa
mov
jae
push
and
jbe
inc
std
fists
ss
mov
aaa
lret
cli
jg
cmpsb
and
sbb
xor
mov
dec
dec
and
ljmp
leave
scas
jp
mov
out
pop
push
push
cs
in
mov
mov
cltd
mov
and
arpl
pushf
leave
push
test
jns
dec
fcmove
lret
jnp
xchg
mov
xor
sub
loopne
mov
push
mov
lcall
push
xor
jl
inc
arpl
mov
inc
mov
inc
ret
mov
imul
and
adc
sbb
aam
mov
pop
imul
or
sub
outsl
movsb
jns
dec
jle
ljmp
and
out
cmp
push
xchg
scas
dec
test
sbbb
inc
mov
xchg
mov
pusha
scas
test
xchg
cs
pushf
jge
sub
cltd
xor
jns
mov
and
sbb
and
clc
sbb
dec
pop
sbb
jns
aam
ficoml
in
xchg
ret
bound
insb
subl
xor
enter
scas
jmp
rorl
aaa
pop
mov
jbe
add
or
or
mov
pop
push
mov
jp
and
imul
sbb
push
adc
pusha
inc
xchg
dec
xchg
xchg
mov
xlat
mov
sub
mov
mov
or
sbb
inc
jge
mov
gs
mov
test
push
repnz
stos
sub
xor
or
roll
shrl
push
shlb
pop
into
and
push
fisubrl
dec
sarl
scas
add
ljmp
pop
xchg
sbb
xor
or
adc
das
push
push
in
xchg
lods
mov
mov
mul
dec
inc
lea
sahf
xor
fwait
adc
pop
push
repz
push
sub
call
adc
lcall
int3
int3
inc
cmp
mov
movb
push
xchg
xor
loopne
jns
jnp
pop
jb
daa
xor
mov
ss
push
in
pop
adc
dec
shlb
insb
and
mov
jns
iret
notl
das
mov
sbb
rcll
mov
fcom
sub
mov
mov
and
cmp
sub
idiv
push
pop
xor
mov
fmuls
daa
push
int
out
test
fnstcw
int
or
sub
fnstenv
fwait
sbb
cmc
mov
out
out
mov
mov
lock
daa
mov
cmp
jecxz
mov
cmp
fnstsw
inc
sub
pop
pop
sub
imull
in
lret
xchg
dec
fucom
stos
mov
xchg
pop
xlat
dec
dec
movsb
push
insl
das
dec
jno
insb
aas
sub
mov
adc
movsb
lret
add
imul
sub
mov
js
push
pop
inc
push
pop
mov
je
fisubs
cmpsl
scas
adc
int3
movsb
adc
iret
movsl
sbb
test
dec
cltd
ljmp
xchg
ret
pop
inc
push
ret
sub
mov
sbb
ja
cltd
and
data16
mov
fnstenv
aaa
cmp
mov
add
mov
rcrb
rorb
cltd
jge
xor
pushf
xor
xor
popf
lds
scas
dec
adc
in
xor
ret
cmp
pop
icebp
adc
mov
ljmp
pop
inc
out
jle
pop
dec
nop
inc
push
cmp
orl
and
fwait
repz
inc
jge
mov
add
jno
movsl
cmc
cmp
lods
mov
mov
mov
xchg
add
into
rorl
push
cmp
xchg
add
xor
fcoml
push
pop
shl
enter
daa
xchg
idivl
push
fcomps
stos
out
data16
in
mov
jns
xchg
adc
mov
dec
add
push
sub
insl
addr16
shlb
cmp
lret
cld
xchg
and
jp
outsl
dec
ds
fmuls
jle
rcrl
addr16
jg
into
jne
ljmp
cmp
xchg
dec
and
or
pop
and
sbb
mov
mov
incl
aaa
dec
inc
aaa
adc
add
lea
xchg
inc
adc
mov
testl
sti
sarb
push
insb
test
popa
pop
add
out
negl
pop
dec
repnz
jecxz
fstl
push
fsubs
sbb
and
jecxz
push
adcb
push
pop
push
lret
inc
popf
andl
in
iret
and
out
sbb
add
pop
adc
popf
andl
sbb
mov
in
das
out
clc
cmp
inc
push
mov
fwait
or
decl
jns
jno
jmp
lods
mov
sbb
adc
pop
cmc
js
sbb
ja
sub
jae
in
mov
xchg
inc
xchg
adc
add
ret
ret
jl
shr
xchg
aam
nop
test
sti
fcmovnb
clc
add
test
cmpsl
cmpsb
adc
push
scas
xchg
add
and
mov
mov
inc
bound
iret
loope
adcl
mov
lods
daa
xor
mov
inc
dec
shld
cmc
fnstenv
je
mov
adc
mov
xor
push
xchg
or
xor
popf
dec
push
je
imul
cmp
adc
icebp
mov
inc
add
leave
mov
xchg
clc
iret
je
or
scas
mov
lcall
outsl
ffreep
filds
sub
nop
jb
and
lcall
fdivrl
dec
dec
stc
test
addr16
frstor
icebp
mov
pop
jnp
out
adc
test
xor
fcomps
sub
and
test
in
cmp
adc
jno
insb
xor
inc
movsl
pop
pushf
daa
push
inc
insb
test
aam
dec
mov
cmp
add
in
popf
mov
add
inc
lods
push
ficomps
cmpsl
push
push
inc
shll
add
mov
push
lock
and
fidivrs
lds
inc
js
call
in
bound
and
jmp
sbb
inc
push
adc
cwtl
dec
xor
into
mov
shll
int
sub
pop
stc
pushf
ds
arpl
and
pop
in
das
mov
stc
cmp
jo
mov
sub
leave
fnstenv
roll
and
mov
flds
in
or
jo
adc
add
rorb
xor
lock
inc
pop
adc
inc
push
adc
loope
jbe
in
data16
and
or
add
dec
aam
pop
lret
das
lea
inc
mov
xchg
out
add
int3
inc
inc
cmp
lahf
jo
xor
mov
lret
sbb
sbb
cmpsl
loope
fwait
in
out
mov
pop
dec
in
sarl
enter
movsb
icebp
in
mov
in
or
ja
ds
and
sub
lea
dec
push
cs
pop
adc
cmp
es
cmp
jp
cmpsb
cmpl
jmp
lods
add
shl
sbb
push
or
cmp
cmp
add
ljmp
test
add
sub
call
mov
fs
adc
sub
lcall
or
sub
lods
sub
fisubrl
sarb
xor
mov
decb
sub
mov
inc
add
mov
fs
cmp
push
dec
jecxz
mov
movsb
jbe
das
pop
dec
aaa
push
jge
mov
cmp
jno
adc
adc
int
push
aam
pusha
int3
dec
mov
mov
les
mov
mov
push
jge
ds
dec
sahf
cmp
enter
ljmp
rcrl
popf
inc
out
icebp
push
or
xor
insb
mov
rorl
dec
pop
loopne
adc
pusha
mov
mov
mov
push
cli
jo
jmp
mov
js
loope
aad
loop
xchg
xchg
rcrb
es
pop
int3
rclb
std
sub
mov
and
insl
in
pop
inc
stos
daa
inc
rorb
call
fidivrs
push
sub
xor
mov
mov
mov
jns
les
std
sysenter
arpl
sub
ds
js
fstps
insl
push
cs
insb
sub
ss
add
pop
sbb
nop
jle
fcoms
jp
pop
mov
mov
and
and
xchg
sub
pusha
xchg
ret
sti
hlt
pop
clc
or
mov
and
icebp
lret
mov
add
outsl
das
call
pop
scas
xchg
icebp
and
mov
ret
fildl
icebp
movsl
pop
dec
sub
fisttpl
mov
lahf
push
ficoms
jne
adc
sbb
inc
xor
shlb
mov
dec
hlt
push
jmp
jbe
rcr
adc
mov
xchg
aad
sahf
popa
inc
xchg
out
int
xorb
adc
pop
xlat
aam
in
mov
adc
mov
notb
mov
inc
inc
fdivs
rcrb
xor
dec
xor
mov
inc
add
xchg
mov
sub
mov
test
out
in
dec
add
and
push
fisttpll
sbb
sbb
xor
push
adc
enter
or
cmp
das
ss
mov
adc
test
xorl
sahf
xlat
jle
push
jbe
push
xchg
push
adc
cmp
stos
int
mov
jbe
fisubrl
lds
push
ret
inc
and
mov
shlb
and
shlb
or
push
call
jae
loopne
xchg
cltd
adc
add
pop
test
cmp
adc
mov
jecxz
icebp
aad
sub
in
jmp
into
bswap
fucomip
push
ret
cmpsb
pop
add
imul
popf
jmp
cld
and
sbb
mov
aas
or
or
push
pusha
cwtl
pushf
lret
imul
add
lea
dec
fildl
js
daa
xlat
cmpsb
ffree
int3
sub
and
xlat
sbb
movsl
sbb
lds
sbb
sub
jl
mov
pop
mov
jb
xchg
xchg
jnp
lods
mov
pop
inc
movsb
adc
test
xchg
inc
enter
sbb
imul
mov
dec
imul
inc
dec
test
jmp
sahf
aas
fadds
xor
cmpsb
push
idiv
pop
jg
popf
pop
and
sbb
inc
lds
jmp
scas
fucomip
in
or
sbb
add
and
adc
add
fbstp
loope
into
fwait
cmp
testl
xor
mov
cmp
aad
jmp
inc
mov
xor
mov
fsubrs
jmp
popf
mov
aas
mov
xchg
mov
out
repz
mov
xchg
jns
sbb
xchg
push
addl
leave
pop
repz
stos
das
fildll
js
xor
sbb
and
push
jne
js
pop
xchg
xchg
mov
rcl
imul
cmp
pushf
movsl
sbb
jecxz
hlt
mov
mov
adc
scas
adc
adc
shll
js
divb
test
mov
repnz
xlat
cmpsb
bound
mov
vmovss
jbe
or
or
leave
or
fsubs
mov
mov
inc
and
sti
fildl
xor
and
in
outsl
iret
lock
out
insl
fisubrs
dec
jb
adc
and
mov
outsl
xchg
out
int
leave
mov
xchg
mov
mov
lahf
jp
insl
sub
iret
jle
rolb
adc
fstps
outsb
lds
cmp
push
subl
xchg
mov
xchg
mov
andnps
test
mov
flds
push
adc
enter
aas
shlb
imul
push
or
push
sbb
das
lods
aad
inc
sub
in
sar
mov
cmpsl
xchg
mov
jo
in
stos
add
xchg
out
push
rolb
fsubrl
inc
xor
cmp
in
jbe
adc
dec
cmp
adcl
or
and
bswap
jecxz
dec
shl
ds
add
inc
loope
fdivs
movsb
jmp
das
outsl
fdivl
mov
cld
jae
push
insb
rcll
comiss
pop
xor
xchg
add
mov
and
in
push
lods
dec
mov
dec
dec
xor
mov
pop
sti
dec
cmpsb
popa
push
fistl
mov
and
rcl
xor
xchg
add
xor
scas
jecxz
adc
sub
or
mov
lods
push
leave
dec
ret
inc
das
bound
xchg
push
in
shlb
lret
aas
xor
cmpb
push
addl
or
rcll
decl
mov
shl
test
out
jno
mov
pop
sbbb
popf
and
cmp
je
mov
cmp
pop
mov
xchg
test
and
test
loope
xchg
lcall
mov
lock
fdivl
xchg
nop
pop
sahf
xorb
fstl
add
mov
dec
les
cld
rcrb
cmp
dec
xorl
adc
js
mov
neg
hlt
fimuls
jp
xchg
scas
or
xlat
out
xchg
or
push
pop
push
pop
jmp
clc
cwtl
adc
cmp
in
mov
jecxz
into
dec
cli
pusha
int3
sbb
mov
inc
les
movnti
dec
adc
sbb
pop
push
cld
dec
or
jb
and
add
sub
iret
int3
and
cmpsl
push
xor
iret
mov
mov
pop
adc
std
in
clc
arpl
stos
adc
stos
dec
addl
jecxz
pushf
insb
or
and
xchg
or
adc
ret
fildl
addb
js
push
das
mov
jle
push
mov
dec
aam
pushf
scas
dec
push
lods
in
je
mull
ljmp
mov
dec
cmpsb
jecxz
cmp
enter
mov
icebp
aas
pop
mov
outsl
xchg
pop
fs
pop
dec
lahf
cmp
jecxz
push
inc
push
xchg
jno
mov
cmp
test
adc
jae
stos
leave
imul
divb
leave
jle
and
lds
push
or
and
int
bound
xor
or
or
pop
mov
mov
dec
mov
push
insb
and
out
ret
sbb
int3
cmpsb
and
mov
repnz
jbe
adc
cmp
mov
inc
int
pop
iret
push
mov
push
mov
aam
cmp
rorb
mov
sbb
ret
mov
insb
out
mov
pop
fs
faddl
out
fsubl
inc
pop
repz
fmull
lret
jmp
or
aam
fwait
rorl
pushf
int
xchg
push
loope
mov
push
dec
mov
add
jnp
ret
and
leave
and
jl
in
cmc
add
lock
inc
mov
inc
fbstp
xor
push
mov
push
movsb
xor
call
pop
jmp
insb
inc
cmpsb
xor
jecxz
lret
out
loop
push
sub
fsubrs
nop
jg
std
ss
in
ficompl
popf
cmpsl
dec
sub
mov
out
std
xor
push
xchg
cmp
jne
mov
sbb
mov
mov
pop
addr16
adc
ficomps
push
pop
and
fidivl
and
xchg
daa
mov
fcoml
mov
jo
jmp
in
jo
mov
aas
lahf
stos
push
push
das
or
loopne
sub
add
aad
xchg
adc
iret
sub
xchg
or
aam
ss
ja
out
in
or
int3
mov
ljmp
xor
fcmovnbe
jo
sbb
subb
and
add
js
add
and
jno
ja
cmp
outsb
jl
test
sub
and
pop
or
push
mov
jg
inc
xchg
outsb
std
xor
inc
les
iret
jl
ss
cmp
lahf
popf
mov
aad
test
rolb
cmp
mov
or
cmp
jecxz
mov
mov
sub
adc
dec
pop
lret
and
inc
pop
mov
icebp
xchg
inc
push
stc
clc
push
mov
xor
in
jo
sbb
fstl
jl
mov
jg
dec
icebp
out
sub
mov
xchg
test
push
repz
and
push
cmp
mov
mov
stos
fxch
pop
addr16
mov
xor
xchg
and
iret
inc
xchg
adc
in
fistl
out
iret
mov
test
dec
mov
icebp
in
repz
mov
adc
outsl
ja
mov
mov
dec
lods
mov
call
xchg
or
cmp
int
jbe
test
xchg
icebp
mov
push
cmc
aaa
pushw
jmp
aad
mov
sub
dec
inc
shl
aaa
subl
sar
mov
addl
push
mov
test
pop
xchg
ljmp
mov
pop
into
dec
xchg
pop
sbb
jb
xor
jno
sub
ljmp
pop
add
clc
xchg
sbb
ljmp
inc
fs
mov
push
int
pushf
sbb
ljmp
test
inc
aas
out
in
out
add
mov
lea
cmp
rorl
in
stos
pushf
mov
or
cltd
xchg
sbb
fstpl
mov
push
and
add
jns
out
inc
orb
pop
jmp
out
inc
jne
inc
sub
lret
stc
icebp
fnstsw
inc
or
jmp
cmpsb
nop
aaa
insb
lcall
shrl
popf
pop
push
repz
popf
cmp
pop
inc
fidivrl
add
icebp
out
in
insb
negl
mov
out
das
pop
mov
dec
das
sbb
jecxz
shll
dec
add
push
fiadds
xchg
das
xchg
mov
push
je
add
decl
mov
jecxz
inc
cmp
lret
adc
ds
dec
sbb
stos
fldcw
test
sub
xchg
and
push
push
rcrl
add
pop
or
scas
xor
pop
daa
cld
mov
and
or
into
pop
stc
jl
dec
test
pop
out
sub
iret
xchg
leave
ja
pop
cmp
adcl
jo
inc
sbb
pop
dec
mov
cmpsl
mov
enter
cmp
lea
and
jne
inc
inc
mov
fwait
in
sarl
and
push
xlat
loope
loope
ds
iret
or
adc
ds
dec
lahf
test
nop
in
pop
jecxz
adc
rclb
loope
fstpt
push
ds
scas
out
daa
or
mov
xchg
jge
orb
popf
sti
loope
push
cmc
jmp
sahf
loopne
push
sub
test
shlb
out
xchg
popa
iret
fnstcw
sbb
aad
sbb
insb
or
scas
jo
mov
xchg
sarb
pop
and
pop
nop
int
push
xchg
mov
mov
pop
inc
add
imul
fmuls
xorl
ret
jnp
in
jge
mov
pushf
call
lea
mov
pop
addr16
test
and
leave
imul
out
fimull
push
lds
das
or
pop
push
mov
iret
and
inc
sbb
or
inc
sbb
jne
mov
mov
xor
add
pop
leave
ret
push
mov
mov
sub
mov
mov
subl
cltd
sub
push
add
mov
add
inc
adc
push
push
mov
movl
mov
mov
mov
xor
xor
orl
xor
adcl
add
movl
adc
xorl
xor
xorl
xor
movl
cmp
movl
jne
movl
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
orl
mov
orl
mov
mov
orl
xor
adcl
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
pop
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movzbl
sub
push
or
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
mov
and
mov
sub
mov
mov
andl
movl
addl
movl
andl
mov
xorl
mov
sub
xor
mov
mov
sub
sub
mov
orl
add
mov
xor
mov
or
xor
mov
addl
sub
mov
mov
xor
adc
mov
notl
addl
mov
mov
sub
and
mov
mov
xor
and
mov
addl
mov
mov
xor
andl
mov
mov
mov
sub
xor
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
mov
negl
xor
mov
add
xor
mov
sbbl
mov
xor
mov
sub
and
mov
addl
xor
mov
add
movzbl
movzbl
adcl
sub
mov
movzbl
xor
mov
or
mov
xor
add
andl
mov
andl
lea
adcl
mov
adcl
lea
mov
sbbl
lea
mov
orl
lea
andl
mov
adc
mov
sbbl
xor
add
andl
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
lea
neg
mov
push
sbb
mov
mov
lea
add
mov
sub
mov
dec
mov
and
mov
orl
xor
add
subl
mov
xorl
mov
mov
mov
xor
mov
mov
andl
add
movl
cmpl
je
cmpl
jne
push
call
xor
add
dec
mov
jmp
push
mov
sub
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
mov
addl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
adcl
xor
mov
mov
and
mov
add
movl
cmp
je
movl
mov
movl
jmp
mov
mov
cmp
jne
movl
push
jmp
mov
notl
mov
movl
cmp
movl
jne
or
mov
add
xor
addl
add
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
adc
mov
mov
orl
xor
add
xorl
imul
mov
sbbl
xor
addl
add
cmp
jmp
jl
lret
mov
test
rcl
ljmp
bound
pop
bound
jge
lahf
dec
xchg
sahf
lds
movsl
dec
mov
dec
insl
pop
aad
xchg
mov
jle
push
push
xchg
inc
and
sub
mov
popa
mov
inc
or
ss
call
hlt
push
add
inc
dec
sbb
adc
pop
push
ret
imul
sub
repz
and
std
lods
lods
mov
imul
adc
mov
cmp
imul
cld
cmp
lock
sub
lahf
xchg
mov
pop
ds
xchg
fs
fimuls
mov
lret
shll
jns
outsb
shrl
inc
mov
fadd
adc
pop
xchg
xchg
lahf
insb
xchg
inc
sbb
icebp
pop
cmp
cmp
shrb
mov
das
cli
inc
lahf
hlt
std
sub
sub
inc
jecxz
push
test
je
lea
jno
fs
outsb
popa
sbbl
ja
fstps
lret
divl
popa
pop
dec
inc
mov
pop
aam
jg
adc
mov
sub
repnz
sub
push
inc
mov
dec
repz
push
aas
sub
outsl
push
fnstcw
cmp
imul
psrad
pop
sti
mov
out
or
stos
mov
cs
mov
mov
cmp
jne
add
xlat
mov
orl
ja
add
mov
enter
out
lea
and
lea
xorl
jl
aam
jb
in
mov
inc
sub
dec
xchg
testb
aad
dec
pop
pop
xchg
nop
push
dec
fidivl
pop
xor
std
dec
mov
cmpl
xchg
and
movsb
push
sub
push
cmp
mov
mov
mov
dec
fcmovnbe
scas
and
shl
in
push
cmp
cmp
push
mov
js
fildl
scas
or
xor
cmpsl
xchg
pop
cltd
pop
imul
inc
push
or
push
std
sub
jmp
into
into
sbb
jnp
sbb
adc
subl
adc
xor
faddl
xchg
push
andb
mov
ds
in
sahf
scas
add
inc
push
fstpt
les
fisubrs
jnp
shlb
mov
xor
out
addb
push
andl
add
adc
inc
xor
and
int
inc
outsb
ss
outsl
and
stos
xor
nop
inc
stc
mov
pop
imul
in
popf
inc
xchg
mov
pop
repnz
fisubrl
xchg
stc
test
fstpt
ret
jbe
int
cmpsl
jns
add
or
in
lcall
ds
ss
lods
test
adc
enter
cmp
jnp
jmp
jns
mov
ss
testl
ret
pop
leave
or
mov
mov
xchg
xorb
sbb
hlt
enter
mov
add
xchg
insl
fnstsw
jle
clc
jl
les
jo
pushf
jmp
jae
xor
cmp
push
xor
les
movsb
es
xlat
lds
dec
aas
push
jle
jge
push
ja
divl
add
lret
imul
mov
outsb
jl
ja
jne
xor
xor
ljmp
jae
mov
aas
ja
sub
pop
ficompl
push
lahf
shr
dec
mov
insl
mov
fdivr
fcoms
aas
ret
add
xor
pop
imull
lods
bound
inc
mov
inc
pop
mov
mov
movsb
gs
cld
mov
movsb
xor
xchg
xor
inc
jg
sbb
in
shl
mov
dec
xchg
das
push
pop
dec
pop
xchg
mov
dec
xor
push
mov
or
cmpsb
repz
pusha
mov
xchg
test
es
call
ret
pop
jecxz
inc
lret
ljmp
inc
sub
call
loop
jg
push
pusha
repnz
cmp
mov
ds
sub
ds
sub
test
adc
pop
pop
stos
sbb
push
cmp
imul
rcll
xor
popa
call
dec
xchg
movb
pop
xchg
lea
test
xor
push
xchg
xor
xor
clc
movsl
enter
lea
xchg
dec
push
shl
aam
jne
outsb
jnp
lcall
mov
lahf
push
jmp
cli
lcall
idiv
add
sbb
jp
cld
sbb
pop
mov
in
add
dec
dec
aam
scas
pop
push
sbb
divl
or
ss
mov
subps
dec
pop
fadd
std
scas
jle
divl
stos
cmpsl
inc
mov
adc
insl
outsl
jnp
das
int
xor
and
jns
insl
pop
shll
mov
dec
sub
xor
push
cmp
in
jmp
sbbl
bnd
aad
mov
xlat
scas
in
movsl
sub
mov
and
aam
lods
mov
xchg
push
push
adc
pmovmskb
mov
add
pop
jl
xor
pop
push
xchg
pusha
dec
gs
push
mov
aad
jge
jge
lahf
out
arpl
imul
pop
mull
add
jnp
and
sahf
cltd
loope
xor
add
pop
sti
push
fcomi
sahf
lret
pop
pushf
mov
ret
ret
aaa
jl
dec
orl
nop
dec
ljmp
cmp
mov
jo
or
shll
push
inc
ljmp
push
loop
fwait
add
adc
cs
cmp
xchg
or
scas
mov
xchg
mov
mull
pop
fmulp
push
sub
mov
nop
movsb
es
sbb
loopne
inc
jg
push
push
xchg
mov
sub
mov
or
xlat
test
dec
mov
rclb
clc
loopne
rclb
jge
or
add
push
push
loopne
hlt
mov
adc
sar
into
pop
xchg
in
lods
jbe
repnz
push
sbb
pop
test
pop
add
fdivrp
aam
cmp
mov
negl
andl
cwtl
xchg
cmp
jmp
aas
ljmp
mov
adc
shrb
ficoml
cmpl
outsl
fmul
fwait
je
xchg
push
dec
jo
xor
add
sbb
push
bound
pop
out
daa
xchg
testb
adcb
lahf
stos
lar
cwtl
lods
xor
ljmp
fmulp
std
mov
mov
mov
jno
xchg
std
mov
mov
scas
push
adc
enter
loope
add
or
push
js
ja
inc
jo
mov
test
scas
mov
jne
add
push
jl
or
cmp
fisttpl
sub
test
add
push
enter
pop
jb
and
and
dec
mov
fldenv
js
dec
in
repnz
jnp
fadds
int3
or
enter
and
push
xchg
add
cmc
fwait
push
and
clc
cmp
lcall
pop
fwait
aas
popf
sti
add
lcall
jmp
xchg
fdivp
xlat
repnz
repz
ss
iret
in
es
ret
rcrl
into
dec
mov
add
cmp
push
stos
movsb
or
scas
push
movsb
out
movsl
outsb
pop
ret
leave
xor
and
inc
out
and
das
jb
lock
add
mov
in
jge
lret
cld
lahf
jmp
mov
inc
push
adc
mov
xor
rolb
out
and
dec
or
inc
iret
inc
gs
fstpt
and
aam
mov
cmp
sbb
fiadds
push
subl
fistpll
sub
aas
ret
pop
push
mov
mov
xlat
xchg
test
clc
test
arpl
fcmovu
mov
les
jns
mov
fstpt
rcll
jno
cmpsb
mov
mov
pop
repnz
out
out
push
in
mov
push
scas
ss
insl
pop
enter
mov
pop
push
test
inc
lods
add
xchg
inc
aad
pusha
jp
mov
lahf
and
push
adc
lea
stos
lds
dec
bound
icebp
pop
lods
loop
add
cmpsb
pop
and
jmp
fs
lret
aas
or
cmp
adc
and
shll
sahf
push
cmpsl
popl
inc
inc
cmp
out
cmpb
lcall
cmp
jp
xchg
addl
add
rcrl
or
mov
jmp
xchg
dec
icebp
xor
mov
push
cltd
jecxz
rcll
mov
dec
or
adc
push
rcrl
mov
dec
dec
daa
add
rcll
jns
xchg
and
sbb
inc
jle
sarl
and
pop
lcall
inc
jmp
jmp
mov
call
in
lods
xchg
loop
xchg
std
push
jge
xlat
or
xchg
add
ret
adc
pop
lock
xchg
jae
push
or
jl
xchg
sub
fsub
leave
lcall
dec
pusha
adc
pop
and
mov
cmp
out
movsl
jge
mov
cmp
sbb
mov
ja
or
fiadds
shlb
ljmp
test
adc
adc
jl
mov
imul
fdivs
mov
lods
jg
sar
mov
sub
push
jge
xchg
push
aas
inc
and
popf
sbbl
push
xchg
in
rcrl
pop
and
mov
repnz
adc
icebp
scas
aaa
xor
lds
mov
scas
dec
adc
add
out
mov
pop
add
stc
nop
jbe
dec
and
and
in
cmpsl
stos
sarb
test
xor
pop
dec
stc
in
push
xor
aad
iret
es
mov
mulb
jno
or
movl
cmp
jp
cmpsl
cmp
sub
clc
std
adc
in
sub
adc
in
xchg
mov
dec
ja
adc
dec
adc
sbb
sbb
sti
add
imul
scas
xor
fbstp
adc
stos
sub
xchg
push
movsb
sub
mov
xchg
mov
in
or
mov
stos
pushf
cmp
mov
cwtl
int3
fidivrl
xchg
ret
data16
xchg
adc
aas
fdivr
cmp
and
lock
mov
inc
mov
push
ret
pop
scas
xchg
mov
jae
sbb
test
pop
push
aam
or
pop
mov
insb
cmpb
mov
mov
adc
ljmp
push
xor
dec
mov
and
mov
test
mov
test
into
aaa
outsb
loopne
xor
xor
aas
fisubrs
aad
jle
inc
or
mov
leave
adc
subb
in
xchg
mov
out
clc
repz
gs
out
pop
sub
xchg
inc
repz
stos
dec
scas
push
ja
sub
inc
mov
lock
xchg
out
xor
inc
movsl
add
mov
add
pop
xchg
stos
rol
in
sbb
stos
cmpsb
mov
cmp
outsb
dec
jb
pop
sub
ja
insb
mov
sahf
das
cmpsl
mov
push
jo
rorb
adc
pusha
push
xor
pop
fsubl
fistpl
ja
hlt
stos
aas
orl
hlt
inc
into
lcall
inc
and
cmp
push
stc
jbe
mov
movsb
jno
andb
mov
sbb
mov
hlt
jmp
sti
movsb
sbb
scas
push
js
or
mov
shlb
inc
push
cmpsb
add
dec
or
scas
mov
in
lret
loope
insb
cmpsl
int
fstl
inc
pop
sub
scas
push
add
std
push
fs
arpl
inc
shll
test
shl
popa
pop
cmp
pop
mov
fdivrp
add
call
push
adc
ret
dec
addr16
push
sbb
mov
push
xchg
mov
adc
adc
sub
pop
ss
lods
mov
pop
mov
cmp
popf
or
notl
enter
aas
xchg
dec
cmp
clc
or
sbb
popa
jl
inc
or
pop
shrl
and
addb
movsl
dec
stc
in
outsb
stos
test
jae
aam
dec
sub
mov
in
inc
mov
cmp
out
aam
mov
pop
outsb
push
mov
jmp
inc
in
aaa
sar
jl
les
call
clc
fiadds
sbb
mov
insb
imul
cli
xchg
js
push
rcrb
sti
mov
mov
cmp
pushf
xchg
or
lcall
insl
idivb
fcoml
outsb
roll
mov
jmp
mov
pop
call
xchg
stos
pop
fucomi
adc
pop
cwtl
adc
sub
negb
test
inc
dec
pop
cmp
sub
out
movl
fwait
inc
jae
cmp
das
test
sub
sbb
insb
arpl
dec
repnz
xchg
inc
insb
movsb
jb
sarl
pop
cmp
lea
adc
imul
mov
push
xchg
and
pop
mov
dec
hlt
cmp
decb
ja
adc
outsb
scas
or
push
andb
dec
jbe
sarb
les
call
aas
lret
rolb
pop
les
popa
subb
cmp
ret
and
or
pop
xor
pop
inc
inc
dec
and
jo
call
add
mov
and
xor
arpl
loope
insl
xchg
stc
lea
cltd
jle
sub
mov
push
test
mov
mov
jg
ds
push
shl
adc
sub
in
jno
mov
pop
outsl
mov
sbb
lcall
push
and
call
add
stos
popf
ljmp
xor
mov
out
mov
xchg
aaa
add
loop
xchg
sbb
sub
sbb
add
in
pop
gs
jp
pop
dec
add
and
mov
in
outsl
aas
nop
mov
idiv
and
in
jecxz
push
pop
les
xchg
mov
pop
mov
icebp
ljmp
mov
cwtl
fbld
loopne
cmp
outsl
inc
cmpsl
mov
test
push
out
xchg
and
movsl
and
add
push
xor
xchg
shrl
jp
xor
decl
fmuls
jl
clc
out
cmp
push
dec
es
cld
sub
ret
loopne
add
test
and
fcmovnu
fwait
pop
cli
dec
mov
negb
jae
sti
mov
nop
mov
cli
iret
test
cmp
mov
lods
int
iret
pop
lock
adc
pop
sar
mov
mov
sbb
repnz
mov
or
inc
cmp
jg
adc
dec
push
jmp
or
bnd
mov
cmc
cmp
xor
setl
xchg
icebp
lret
push
cmp
popf
scas
out
jg
lahf
sti
iret
outsl
jle
xchg
sti
dec
dec
sbbl
pop
cwtl
aam
mov
sub
lret
stos
push
cmp
sti
pusha
pop
mov
adc
adc
or
fistps
lods
loopne
push
mov
sbb
fs
or
adc
xchg
mov
nop
or
dec
shrb
add
clc
sbb
cli
xor
xchg
dec
dec
pop
and
dec
icebp
cmpsb
mov
push
jb
ret
pushf
mov
call
adc
es
xlat
daa
iret
dec
cwtl
xor
aas
js
push
jg
push
outsl
xchg
leave
fwait
stc
cmp
les
cmpsb
adc
aaa
xchg
inc
jno
ja
stc
cmp
pop
mov
pop
adc
ror
icebp
scas
cmp
nop
xchg
ret
adc
in
test
sub
fwait
add
xchg
shll
or
inc
pop
lret
test
pop
mov
scas
stc
shl
enter
sub
pop
mov
loop
imul
gs
data16
sbb
mov
jbe
leave
mov
in
stc
inc
aaa
push
xor
rclb
in
mov
bound
addr16
loope
lods
sbb
frstor
jb
fwait
xor
and
fcoml
les
add
clc
pop
out
inc
fwait
dec
jo
pop
aas
dec
inc
sbb
push
jg
cmp
imul
push
loope
or
pop
js
cwtl
inc
into
inc
adc
dec
mov
push
scas
mov
xor
adc
pusha
pop
hlt
xor
shlb
mov
outsb
jle
test
jno
insl
xchg
sbbb
lods
ljmp
fsubs
stos
aam
js
cmp
popa
jno
mov
sub
lods
mov
pop
into
je
mov
mov
in
sarl
fcom
outsl
push
push
cltd
addr16
lret
ret
pop
pusha
sub
in
in
xchg
inc
dec
cli
sar
inc
enter
push
cmp
imul
xchg
inc
das
xchg
fnstcw
and
xchg
adc
stos
call
repnz
dec
pop
iret
inc
sbb
jp
daa
mov
idivb
cmpl
pop
insb
rcrb
inc
pop
roll
outsb
sbb
popa
into
push
fsubl
out
pop
fndisi(8087
ja
dec
mov
fcmove
inc
mov
add
mov
inc
dec
stos
mov
xor
jne
pop
pushf
scas
xor
xor
clc
das
int3
rclb
popa
xor
or
sub
je
lods
out
ret
jb
mov
test
ja
clc
cmp
adc
jns
cs
pop
shl
mov
mov
cmp
pop
adc
lret
jp
or
jo
push
fcmovnu
fcoml
adc
or
mov
dec
or
rcl
int3
out
imul
mov
xchg
sub
std
sub
outsb
add
loopne
repnz
std
fimuls
insb
call
sbb
enter
mov
pop
cmpb
sarb
ret
mov
test
inc
jae
jle
mov
push
sahf
leave
push
push
mov
mov
cld
rolb
fidivrl
sti
adc
fisubs
cmpsb
adc
mov
sbb
into
leave
cld
or
test
ds
in
pop
das
mov
iret
jg
adc
pushl
sbb
adc
add
cmp
je
xchg
dec
xchg
out
push
stos
es
mov
fmuls
jnp
fstpt
push
mov
in
mov
jno
ja
stc
mov
cmp
lcall
mov
int
pop
out
icebp
xchg
dec
mov
adc
sub
ja
cmpsl
insb
movsl
xor
sub
scas
les
push
xor
push
cmpsl
push
jnp
repz
mov
lods
test
idivb
sbb
sub
les
push
das
sarb
and
pop
jl
mov
mov
mov
push
inc
jbe
and
mov
ror
call
imul
stc
sbb
shl
ret
mul
push
jg
xchg
mov
and
jl
repz
jbe
jbe
popf
dec
cmp
scas
gs
ss
mulb
pop
out
repz
xchg
sub
xor
leave
lock
inc
jo
add
mov
lods
jecxz
ret
and
inc
clc
inc
aaa
pop
stc
add
test
jo
sbb
fmull
and
cmp
out
xlat
inc
sub
push
jl
dec
jnp
out
jge
insb
mov
aas
inc
push
stc
or
stc
out
or
jl
jnp
test
cmc
pop
dec
jmp
rcr
notl
cwtl
repz
xor
add
mov
hlt
arpl
ret
clc
xchg
adc
stc
jmp
fidivs
pop
or
cmp
push
std
data16
test
dec
mov
and
ss
xor
test
insl
or
mov
cmp
fistps
xor
push
fisubs
fwait
out
mov
mov
jnp
outsl
add
jl
ret
push
push
adc
aaa
jle
stc
lret
inc
adc
dec
adc
cmp
mov
jmp
and
call
and
insl
jp
pop
fmull
nop
mov
lods
aas
shll
mov
lret
cmp
in
js
and
dec
popf
mov
test
repz
movsl
mov
and
sbb
mov
addr16
fwait
jmp
imul
xchg
fiaddl
fildll
lret
fs
mov
lret
loopne
adc
je
jp
sub
push
pop
js
pop
pop
cmpsb
jl
ret
rolb
xor
sub
int3
dec
ret
or
add
jnp
mov
inc
pop
xlat
scas
dec
jp
inc
and
mov
add
or
push
std
mov
push
and
popf
mov
sub
mov
cld
jb
jge
stos
pop
call
fcomps
addr16
imul
fdivr
out
pop
add
mov
cmp
es
xchg
movsl
repnz
ljmp
or
sar
jno
ds
mov
sbb
out
push
push
fnstcw
arpl
push
gs
mov
jae
daa
or
or
sti
stos
outsb
add
repz
scas
mov
lret
push
or
fnstcw
fmuls
pop
mov
mov
inc
scas
push
and
test
inc
xor
leave
mov
pop
mov
dec
repz
or
dec
stc
xchg
or
jl
cmpsl
sbb
adc
pop
jbe
jecxz
xor
push
cmp
cmpsl
cmc
addr16
loope
dec
jb
dec
or
imul
ret
add
xchg
jecxz
shlb
ja
shrb
fnstcw
cmp
notb
cli
sti
sbb
daa
push
or
seta
xor
pop
push
nop
pop
negl
notb
jno
pop
or
push
xor
push
pop
xlat
adcl
sub
pop
int3
push
push
dec
popf
xor
loope
vpandn
popf
outsl
stos
ljmp
jge
lea
pop
int
mov
decl
add
aas
lea
into
ja
ss
or
test
mov
outsb
test
push
sbb
and
and
lea
add
nop
lahf
add
and
sub
rorl
xor
out
in
cltd
cmp
enter
jmp
sbb
in
addr16
js
mov
push
sar
adc
push
call
lock
sahf
sub
cmc
test
and
xchg
ja
or
call
adc
test
imul
dec
movsb
inc
cmovae
dec
push
xchg
lret
jb
in
jb
inc
mov
mov
jb
xor
std
enter
pop
pusha
and
pop
xlat
inc
fists
xlat
faddl
sahf
add
jo
aas
jo
push
pushf
and
pop
mov
divb
or
adc
pop
or
push
cs
inc
xor
or
in
xchg
repz
cmc
pop
add
stos
pop
cmp
mov
add
sahf
mov
pop
icebp
push
bound
push
mov
subb
lds
clc
aam
inc
stos
push
hlt
inc
jns
std
enter
shlb
adcl
sbb
or
sub
loope
xlat
lds
cld
lahf
mov
cmc
inc
xchg
cmp
movsl
mov
loope
push
mov
push
ljmp
stos
and
test
push
mov
cs
dec
xlat
or
push
mov
add
and
mov
cwtl
sbb
cltd
adc
imul
dec
cmc
push
pop
lahf
cmpsl
stos
addl
push
push
test
inc
scas
mov
int
iret
les
xor
jp
mov
push
mov
loop
ds
push
dec
ret
add
pop
in
sub
icebp
into
jp
data16
fistpl
mov
fisubl
cmp
cmp
dec
adc
in
push
ficomps
mov
sbb
mov
push
ss
inc
sbb
add
xchg
sub
xchg
das
sub
jl
cmp
or
cmpsb
mov
adc
test
mov
sbb
xor
dec
ja
cs
enter
adc
aas
ja
dec
mov
jl
mov
aas
lret
arpl
jg
in
imul
cltd
loop
sbb
cmp
push
dec
xor
inc
push
movsl
call
lret
outsb
xchg
mov
pop
data16
enter
pusha
or
inc
mov
loop
jge
ret
and
lret
sub
add
cld
cli
pop
cmc
push
cmp
jl
fisttpl
cmp
lds
mov
test
fwait
out
and
sbbb
jp
xchg
fcomps
push
fs
jg
or
into
add
adc
mov
into
add
hlt
movsb
sub
sub
test
adc
and
and
ss
cwtl
repz
out
and
sbb
or
xchg
jne
cmpsb
add
mulb
cltd
pop
mov
fstps
adc
iret
xor
mov
mov
fs
sti
jae
xor
andl
addr16
jbe
in
mov
int3
aas
and
push
push
stos
mov
cmp
divb
fdivs
push
jmp
movsb
mov
pop
add
andl
aad
lods
sbbl
xor
cmpb
sub
hlt
movsb
test
pop
lods
add
cmp
pop
mov
xlat
addb
cmp
nop
adc
mov
aad
mov
iret
dec
dec
das
jge
xor
rol
jle
jg
test
je
addr16
popa
pop
push
loopne
push
lret
jl
xchg
into
or
sub
cmp
sub
enter
lret
call
mov
lret
ret
pop
pusha
xchg
fdivs
jge
ja
sbb
and
arpl
mov
aam
lods
cmp
int3
rcr
mov
adc
xor
out
push
fistps
sub
incl
xor
jb
pop
mov
aad
aad
sub
xor
push
das
incb
inc
in
cmp
ud2
aam
inc
push
xor
xchg
push
pusha
add
test
cmp
hlt
add
stos
and
jnp
aas
iret
popa
sti
adc
xchg
cmp
pushf
lods
stos
fcmovne
push
movsl
and
mov
cwtl
fadd
mov
shll
cmc
cmp
lock
mov
test
pop
mov
pop
or
pop
xor
pop
adc
mov
cmp
xchg
aas
into
fiadds
xchg
es
aam
sbb
test
lahf
xor
push
xchg
lds
lods
test
push
dec
repnz
jl
sbb
pop
xchg
xchg
fimull
cmpsl
call
cmp
push
mov
int3
call
aaa
add
rcl
add
mov
in
inc
push
pop
fldenv
add
mov
xor
lahf
out
arpl
mov
icebp
shlb
mov
das
ret
repnz
xchg
sub
lahf
dec
out
in
arpl
or
mov
dec
insl
mov
test
sbb
and
es
cltd
push
dec
fiaddl
loopne
inc
scas
fcmove
inc
js
cmp
shrb
sub
bswap
and
fcomps
sub
cwtl
push
jge
pop
shll
lret
push
fstpt
cmpb
sub
lcall
sbb
lea
push
xchg
add
add
jmp
push
bound
outsl
stos
xchg
sub
dec
pushf
loopne
ljmp
cwtl
push
pop
sarl
inc
sub
test
outsl
enter
mov
sub
xor
sbb
xchg
sti
cs
fwait
shlb
hlt
bound
or
out
xor
mov
cmpsb
jbe
movb
cwtl
xor
xor
orb
inc
sbb
aaa
sub
mov
enter
arpl
pop
leave
jb
dec
incb
sub
or
adc
or
out
pushf
test
jl
mov
inc
xor
pop
lods
js
inc
scas
inc
aam
mov
aam
pop
int3
xchg
adc
push
pop
call
sbb
leave
pushf
dec
cltd
sti
jp
push
outsl
pop
sbb
mov
leave
mov
or
mov
lret
cmp
test
xor
jg
cmp
adc
lcall
fwait
mov
pop
fwait
xadd
cmp
mov
xchg
subl
shld
add
pop
jns
mov
push
cmp
push
inc
pop
fistps
jecxz
mov
mov
inc
outsb
icebp
dec
sub
lret
adc
dec
xchg
and
jecxz
popa
jmp
loope
add
out
fcomps
mov
lcall
mov
jecxz
into
popa
mov
stos
xor
lock
in
xchg
cli
add
and
mov
js
imul
lcall
leave
popa
mov
or
jbe
ljmp
and
insb
dec
jb
roll
add
cmp
mov
out
adc
inc
and
add
push
inc
lock
inc
data16
xor
fldenv
xor
fdivl
ja
shll
cmp
fmull
mov
fdivr
push
fdivl
xchg
lret
inc
loopne
leave
xor
jl
scas
fldenv
xor
sti
outsb
enter
cmp
or
sub
lret
clc
and
pop
dec
xor
mov
sbb
cmp
jl
inc
lcall
pop
inc
fisubl
jae
adc
xchg
gs
lods
mov
sub
xchg
cltd
imul
aam
push
pusha
fsubp
mov
fs
xor
mov
jae
clc
mov
mov
in
imull
mov
adc
test
repz
jg
cs
adcl
cmp
jne
mov
sbb
call
xchg
mov
aas
lret
push
jp
outsl
xchg
mov
pop
out
push
and
loope
mov
aam
pop
fcoml
jge
bound
jl
enter
call
adc
jns
aam
add
and
and
mov
xchg
rolb
cs
and
ds
or
fsubs
inc
push
push
cmc
int
adc
das
shrl
jne
lahf
jle
mov
lcall
xor
mov
sbb
pop
out
push
in
add
sub
cmp
fdivrs
nop
ds
iret
cmp
push
mov
popa
outsl
out
out
or
pop
jmp
jbe
shrb
xchg
xor
out
inc
adc
cmp
cmc
or
cld
push
movl
je
or
mov
movl
add
mov
xor
or
or
mov
decl
xor
add
subl
imul
movl
mov
jmp
subl
mov
xor
sub
mov
andl
mov
add
xor
or
mov
decl
mov
sub
add
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
jmp
jge
xor
xor
add
mov
mov
dec
pop
and
hlt
pop
bound
jge
repnz
adc
sbb
test
roll
add
mov
pop
ret
push
adc
xlat
sbb
dec
imul
add
in
dec
mov
pop
jp
in
jb
and
into
outsl
mov
pop
cmpsl
into
inc
mov
icebp
mov
jb
xchg
test
test
pop
cmc
stos
enter
loop
ds
push
mov
lds
cmp
lock
int
push
mov
gs
jl
rcrl
and
addl
scas
repz
rol
loopne
dec
push
pop
jp
jno
fsubrs
mov
jbe
mov
je
push
cs
add
loop
gs
jnp
add
gs
mov
ds
inc
std
pop
cmp
adc
ja
adc
jns
out
into
int
adc
cmp
xchg
rcrl
jns
pop
popa
xor
mov
inc
jns
or
out
sbb
outsl
lods
add
mov
jo
cmp
loopne
and
or
loope
imul
aad
pop
sti
mov
por
addr16
pop
cwtl
data16
dec
xchg
pop
inc
fcmovu
daa
and
sub
jne
pop
outsl
sbb
mov
fstl
xchg
and
pop
push
dec
inc
icebp
test
mov
xor
fs
mov
jle
mov
scas
sbb
dec
jbe
jbe
mov
mov
inc
call
sub
sub
mov
mov
rol
cltd
fsubrl
nop
jmp
repz
dec
sbbb
mov
insb
pop
call
lret
sti
push
xor
jbe
inc
mov
inc
imul
mov
mov
testb
shll
fdivrs
sub
and
hlt
loope
nop
pop
cmpb
lret
je
push
lds
in
cmp
push
lret
gs
xor
imul
jb
cmpsb
dec
sar
imul
and
testl
mov
cs
mov
xchg
popf
cwtl
or
cmpsb
xsha256
cmpsb
push
out
cmp
sub
sbb
xchg
xchg
xchg
ficompl
int3
getsec
ss
cmpsb
mov
jbe
adc
cmc
xchg
inc
and
mov
cwtl
mov
push
aas
rolb
xchg
ja
mov
outsl
out
outsl
ret
jbe
std
mov
xor
jle
xor
insl
loope
or
mov
push
fsubl
int3
ss
stos
loopne
sbb
movsb
dec
js
enter
inc
and
jl
sub
shlb
sbb
test
in
lock
int3
clc
lods
pop
cmp
cld
jmp
mov
inc
mov
ljmp
ja
sbbb
jp
push
lods
xor
cmp
jge
dec
outsb
xchg
and
and
divl
jnp
cmp
mov
addb
cmp
pop
xchg
cmp
popa
int3
adc
push
sahf
out
out
test
dec
dec
mov
int3
movsb
das
push
pop
adc
pusha
fnstcw
sub
nop
xor
inc
cld
iret
rolb
fnclex
inc
negl
es
loopne
fcomps
adc
sahf
xchg
mov
leave
stos
mov
aas
loopne
push
jb
es
xchg
in
xchg
inc
cmpsb
jmp
jbe
fcmovnu
jae
fistl
cmp
fdivr
out
add
iret
fcoml
push
and
jl
aas
pop
clc
xchg
bound
dec
call
pop
ljmp
mov
and
dec
das
inc
xchg
jg
and
das
cld
xor
push
cmp
xlat
fcomip
fstl
ret
xchg
filds
jle
and
jb
sbb
call
mov
sub
stos
call
into
jp
in
ss
mov
jp
cmpsb
xor
mov
adc
aam
subl
push
xchg
jae
lds
pop
xorl
mov
xchg
mov
daa
sbb
ljmp
inc
add
repz
mov
pop
imul
lds
push
popf
cli
addr16
xor
jecxz
call
add
mov
sahf
pop
ljmp
or
leave
int
cmpsl
pop
pop
insb
add
testl
idivb
mov
xchg
dec
clc
sarl
dec
aam
test
pop
xor
shlb
mov
lock
jo
ja
dec
cltd
out
push
mov
aas
into
aam
jno
test
fistpll
cmp
fldt
lahf
mov
daa
leave
xchg
testb
jg
mov
and
or
push
cmp
inc
testl
xor
sub
jno
movsl
push
dec
rcrl
dec
add
test
add
daa
cmpl
xor
sbb
adc
in
pop
test
mov
cld
mov
cs
mov
mov
int3
sbb
pop
sbb
leave
push
aad
fs
pop
adc
cltd
sbb
xchg
xorb
in
or
cli
add
cwtl
inc
lods
stc
fbstp
cli
mov
pop
mov
mov
jmp
push
jne
test
lcall
cmc
dec
jg
prefetcht1
pop
jmp
cmc
int
fcmovnu
inc
xor
inc
movsb
ja
xor
stos
popf
and
fs
pop
inc
pop
out
std
lcall
fwait
sarl
pop
nop
jmp
gs
test
aaa
rcrb
sahf
sub
inc
or
jno
shlb
inc
test
pop
out
dec
fwait
aaa
out
mov
and
fists
in
icebp
in
call
out
pushf
cltd
call
mov
fcoms
aaa
das
lods
ljmp
adcb
push
sahf
test
push
pushf
mov
sbb
outsb
rcll
xor
dec
xor
and
jge
adc
aaa
test
scas
fcompl
outsb
lods
sub
cmc
sbb
and
orl
stos
shr
or
pop
enter
pop
lods
js
repz
lcall
add
jle
and
pop
lret
xor
imul
jns
mov
ret
pop
dec
mov
mov
dec
inc
pop
xor
daa
outsl
and
adc
xlat
pop
xor
call
aam
mov
bound
lcall
test
pop
loop
shlb
and
dec
dec
into
inc
inc
movsb
jne
xchg
inc
xchg
and
and
xchg
inc
xlat
test
inc
imul
sub
fbstp
sub
mov
sub
dec
xor
das
xchg
adc
mov
inc
inc
in
push
test
into
add
stos
mov
pop
int
or
out
and
andb
pop
mov
mov
pop
mov
es
stos
in
push
or
jle
cmp
jmp
push
jg
and
jbe
or
dec
jp
jge
into
and
push
cmp
mov
pop
jo
movsb
nop
push
daa
sahf
mov
mov
inc
shr
mov
pop
sub
or
xchg
inc
ja
pusha
add
jge
fldl
rolb
mov
pop
jae
arpl
pop
pop
outsb
stos
insb
sti
fs
cmpsb
sbb
rcr
into
into
mov
ficomps
dec
cmp
jle
shrl
dec
mov
push
add
mov
adc
pop
and
mov
cltd
or
cmpsb
adc
cmpsl
dec
ds
or
iret
push
push
arpl
aaa
push
outsl
enter
mov
aas
mov
cwtl
mov
ss
jo
in
loopne
nop
and
test
push
sbb
inc
popf
sbb
xor
and
cmp
jne
cld
insl
or
xor
xchg
jae
in
cmp
pushf
stos
lahf
movsl
dec
test
cmc
xchg
imul
mov
mov
push
arpl
mov
push
push
ss
sub
mov
dec
iret
cli
inc
scas
mov
in
mov
jnp
sub
jmp
xchg
out
inc
aas
ret
pop
xchg
sub
lret
mov
jbe
decl
cmp
orl
outsb
mov
sub
push
dec
dec
pop
gs
cmpsl
imul
insl
jecxz
cmc
sbb
call
ja
pop
or
and
mov
bound
mov
jo
leave
sub
and
inc
xor
mov
ss
stc
scas
sub
movsb
or
pop
jge
mov
mov
mov
ljmp
sti
dec
and
mov
mov
mov
test
mov
dec
je
and
pop
dec
adc
mov
xchg
xor
jp
xorb
sub
test
xor
daa
shll
mov
pop
sarb
cmc
mov
aad
push
pop
cwtl
add
add
adc
cmp
sahf
mov
inc
sub
test
and
ss
adc
push
lcall
adc
mov
icebp
mov
cmp
ja
dec
js
add
adcb
int
icebp
jnp
dec
inc
cmp
mov
xchg
sbbb
adc
test
xchg
out
test
ja
imul
aam
and
insl
sahf
shlb
imul
mov
sbb
mulb
popf
mov
push
in
int
push
jg
clc
aaa
paddb
mov
jmp
dec
xchg
xchg
jle
pop
arpl
dec
out
inc
in
or
xor
and
mov
lea
or
push
mov
sub
daa
sbb
and
or
sub
push
lret
orb
loope
das
pop
in
pop
mov
scas
fsts
dec
fcomip
test
roll
test
jno
sub
cmp
jg
xor
xchg
clc
ds
pushf
sub
mov
in
ljmp
and
jnp
and
xchg
xchg
int3
inc
clc
aam
xor
flds
xorb
aad
idiv
repnz
or
xchg
fiadds
push
push
jne
ja
xor
dec
stos
sbb
adc
push
repnz
mov
outsl
iret
xlat
adc
xlat
mov
call
dec
push
insl
jecxz
jae
shlb
sub
ret
inc
mov
fdivp
negb
pop
sub
xchg
scas
cmp
add
push
push
cmp
sti
popf
add
mov
inc
push
fcmovnu
push
or
push
popa
push
mov
out
add
jmp
mov
mov
mov
pop
cmp
pop
aad
inc
jbe
mov
test
inc
pop
xor
cwtl
sti
jmp
adc
lods
jae
ret
out
cwtl
lcall
mov
mov
data16
scas
imul
insb
repnz
xchg
stc
add
add
pop
push
cmpsl
mov
imul
testb
sub
xchg
cmpsl
lea
call
mov
icebp
test
test
fs
loop
or
mov
je
fnsave
xor
pop
in
repnz
out
lret
jl
std
in
paddq
sbb
sub
jp
out
iret
cmpsb
jle
mov
mov
jns
mov
arpl
add
int
scas
aas
sub
ljmp
lods
ret
outsl
push
mov
cmpsl
cltd
push
mov
fdivl
lahf
dec
mov
push
mov
testl
jge
mov
mov
into
aaa
imul
push
cmp
push
movsb
lods
sub
nop
jne
and
ret
gs
sub
std
mov
mov
pop
mov
fdivrl
xchg
iret
xchg
or
or
xchg
inc
mov
dec
and
insb
int3
out
inc
sub
cli
inc
push
outsl
repz
jb
loope
popa
subb
mov
sub
mov
push
fisubs
pop
add
mov
inc
lock
pop
out
mov
sbb
insl
scas
push
roll
jmp
add
out
hlt
stc
aas
aaa
in
xor
into
popa
xchg
mov
adc
push
add
ljmp
test
scas
sar
jl
inc
jne
and
xchg
adc
adc
inc
aam
pop
ja
adc
push
jnp
sar
add
sbb
mov
ja
fsubs
sub
pop
lods
imul
jp
jns
test
in
jge
pop
cmc
xlat
je
jge
jl
or
out
pop
jl
icebp
data16
mov
xor
lcall
or
push
adc
cmpsb
sbb
mov
pushf
mov
push
je
rol
adc
andl
mov
ss
push
fiaddl
push
or
mov
leave
call
bound
imul
cmp
push
lret
in
outsl
ret
sahf
pop
jae
adc
cli
shrl
daa
dec
cmp
lds
jne
push
cli
enter
sub
movsl
fidivrl
rolb
hlt
in
xchg
lods
leave
sub
mov
sub
push
xchg
in
fsubrl
stos
jo
jb
sub
loop
mov
mov
mov
jmp
fisttpl
pop
ja
mov
or
out
lea
mov
addl
cmpsb
mov
sahf
insb
hlt
lock
lahf
xchg
fwait
jle
push
popl
lods
jae
inc
jl
std
cmp
lahf
scas
mov
mov
mov
int3
jge
in
jbe
imul
xchg
inc
mov
or
in
mov
mov
mov
jne
sub
sahf
fsubrl
dec
mov
jge
sbb
xlat
cmp
mov
jl
or
ljmp
cld
sbb
orb
inc
mov
ds
leave
adc
xor
push
jo
dec
jecxz
add
jle
xchg
lods
pop
xchg
xchg
popa
pop
aad
dec
int
test
call
push
cli
std
mov
mov
aas
push
or
add
pop
insb
repz
mov
cli
scas
mov
add
cmpsl
pop
rcr
iret
pop
xlat
push
outsb
mov
adc
pop
push
sbb
mov
stos
xor
in
fcomp
outsl
pop
ds
pop
in
std
mov
dec
cld
push
daa
cltd
into
test
ss
sti
mov
cwtd
xor
push
fidivs
imul
arpl
xchg
cmp
jb
jge
mov
stc
add
cmp
jo
fs
jae
out
sbb
jns
in
das
mov
jle
jb
loope
aas
pop
sbb
xchg
pop
stos
mov
lds
xor
pop
sbb
push
jge
jae
in
and
shll
jmp
popa
inc
pop
daa
xor
xor
mov
push
nop
mov
mov
jne
fistpl
dec
rolb
out
xor
and
mov
sbb
xchg
nop
shl
mov
pop
aas
arpl
cmp
fldt
lods
pop
in
roll
inc
mov
jmp
inc
enter
cmp
test
inc
jge
sar
sti
push
mov
or
cmc
mov
bound
mov
xor
push
pop
and
mov
outsl
push
dec
mov
cltd
jno
pop
ret
dec
fwait
and
add
or
cltd
das
inc
inc
jge
stos
sub
jns
cmpsl
push
xchg
cld
pusha
mov
cs
lcall
lds
out
mov
rcr
cld
jle
mov
inc
xchg
push
cltd
rcrb
out
in
jns
xor
lcall
pop
sub
mov
leave
dec
aaa
push
aam
inc
int
fcmovnu
adcl
sahf
push
mov
mov
pop
loopne
ficompl
in
cmpsl
mov
cs
repz
push
mov
rcr
dec
add
push
pop
xchg
cmp
cli
jecxz
add
jbe
and
adc
les
arpl
push
mov
into
ljmp
cmpsl
inc
cli
dec
daa
jge
jmp
outsb
dec
sbb
mov
inc
mov
and
lods
push
imul
aad
push
xor
jp
outsl
stos
incb
xlat
xchg
fmulp
cltd
pop
inc
dec
push
enter
pushw
pushf
in
adc
loopne
push
mov
pop
jp
cmp
push
sub
xchg
stc
pop
xor
or
xchg
dec
inc
sub
hlt
test
jecxz
and
out
mov
add
adc
inc
cltd
dec
mov
add
pop
mov
clc
push
movsb
insl
adc
shl
ret
out
jo
and
fidivl
dec
push
xchg
sub
dec
sbb
pop
add
jno
mov
popf
mov
mov
lea
lahf
pop
push
dec
stos
jae
xchg
xor
fcoms
clc
add
test
push
or
dec
sub
hlt
into
mov
push
int
pop
sbb
scas
cmp
add
jecxz
sahf
sub
push
sbb
sbb
xchg
mov
mov
sbb
xchg
movsl
sub
and
add
hlt
push
inc
and
stc
ret
orl
fildl
adc
cmp
or
push
cwtl
mov
pop
cmp
fcompl
int3
fwait
loope
add
pop
xchg
loopne
js
out
in
int3
xchg
dec
iret
and
add
sub
shll
nop
mov
cmp
enter
aad
insb
push
push
mov
stos
movsl
adc
jo
lods
cmp
out
fcmovbe
inc
cmc
fs
dec
xor
aam
push
std
movaps
rorl
pop
iret
xchg
pop
xorb
inc
in
lds
lret
pop
cmp
inc
add
push
arpl
lock
cmpsl
dec
mov
fisttpll
inc
jge
pop
std
int3
daa
cmpsl
cmp
test
or
mov
xlat
push
cmp
in
ljmp
sub
leave
sbb
in
in
gs
movsl
adc
pop
adc
sbb
enter
out
xor
sbb
xlat
sub
clc
xor
psubusw
test
push
shll
and
cli
outsb
mov
push
and
jecxz
xchg
int
pop
dec
es
mov
test
jle
mov
sub
aas
cmp
pop
leave
pusha
inc
push
pop
pop
mov
jae
loope
pushf
cmp
mov
mov
push
aam
fucomi
push
in
lock
rolb
sbb
out
and
std
adc
sbb
push
fdivr
inc
aas
hlt
inc
push
dec
jbe
jg
cs
popf
daa
jge
lods
and
adc
xor
std
sub
add
nop
std
sub
enter
push
aad
mov
fisubl
int
jb
xchg
and
xchg
jb
mov
mov
mov
mov
in
xlat
js
sub
pop
je
and
popa
cmp
xlat
cmp
fldt
push
insb
test
xchg
mov
imul
inc
jg
lds
dec
not
pop
mov
xor
add
call
insb
push
jecxz
stos
mov
pop
mov
idivb
rcrb
mov
fiadds
sbb
xchg
int3
rclb
pop
stc
and
jp
cld
jge
jnp
out
mov
mov
out
ds
push
mov
or
adc
adc
jge
xchg
test
aam
stc
testl
cmp
iret
pop
jmp
xchg
dec
cmp
and
daa
push
ljmp
cmp
sahf
push
dec
lahf
test
sbb
ret
mov
push
xchg
mov
iret
jg
loop
pop
inc
sbbl
jle
mov
jno
mov
xchg
mov
pop
lea
xor
fcmovbe
mov
loopne
jae
mov
pop
mov
dec
out
scas
adc
out
jp
out
xor
pop
int3
sahf
jae
test
insb
dec
mov
cmp
pusha
lret
pop
nop
jb
jge
imul
xlat
pop
fsts
sti
fcmovb
xchg
sbb
adc
fwait
hlt
outsb
jbe
dec
insl
adc
xchg
mov
std
leave
jnp
movsb
xor
mov
xor
push
les
in
jecxz
lahf
pop
xchg
movsl
xchg
leavew
xor
sbb
gs
jge
cs
cmp
xor
fidivrl
pusha
loopne
fs
push
or
and
jmp
outsb
ret
pop
leave
mov
std
mov
lds
orb
subl
in
jns
mov
pusha
subb
pop
out
cs
jb
jl
adc
inc
push
mov
and
mov
gs
sbb
mov
xor
cmp
lahf
scas
scas
mov
dec
or
repz
mov
test
cmp
sbb
fdivrl
aam
arpl
fcomps
or
mov
cmp
rorl
shrl
inc
sbb
mov
pop
adc
in
jno
jne
mov
inc
add
inc
sub
div
inc
lret
sub
or
jno
dec
nop
cmp
inc
xchg
jnp
sub
push
call
or
mov
push
stos
and
xor
jne
mov
mov
int
pop
leave
xchg
bound
pop
pop
jns
or
int
mov
cli
fucomi
mov
fistpl
movsb
fs
out
mov
or
fcmovne
and
jno
aaa
xchg
iret
inc
xchg
dec
out
lods
ja
jg
outsl
cmpsl
adc
dec
jbe
ret
and
insb
mov
dec
cmp
cmp
xchg
rep
sub
sbb
fs
insl
and
rcl
in
dec
ret
call
pop
hlt
inc
loope
sbb
cmpsb
and
and
pusha
dec
cmp
sub
mov
bound
mov
sbb
stos
lret
cmp
push
xchg
inc
dec
int3
sti
mov
lods
std
xchg
mov
mulb
clc
dec
cmp
imul
jnp
adc
adc
sub
outsb
arpl
jg
or
in
imul
or
lret
xchg
sub
pusha
add
int
iret
push
out
jle
enter
pop
mov
fstpt
lret
pop
jge
mov
dec
in
aam
push
dec
mov
out
lods
das
lock
xchg
cs
lock
fs
adc
mov
mov
mov
sti
xchg
sub
imul
inc
enter
mov
je
jne
adc
push
shr
icebp
jmp
into
jp
inc
push
call
cli
pop
jl
push
add
mov
dec
das
add
out
inc
stos
iret
jnp
sbb
out
stc
jge
or
push
mov
icebp
rclb
fnstenv
push
mov
dec
ret
je
jne
cmpsb
sub
pop
mov
les
cmp
mov
jmp
jbe
bound
cld
jle
in
pop
pop
repz
fsubl
jnp
repnz
xor
das
push
sbb
xor
cmc
shlb
fistpl
mov
push
adc
leave
xlat
imul
cmpsb
out
add
test
pushf
lahf
xchg
push
dec
dec
xchg
pop
xchg
ret
sbb
add
sbb
or
sbbl
mov
mov
fwait
clc
cvtps2dq
ficomps
test
movsb
push
push
adc
jge
mov
outsl
sbb
ret
outsl
shll
cwtl
es
aaa
jne
pop
inc
cmp
adc
xchg
push
inc
loopne
test
add
push
rcrb
cmpsb
addb
xchg
add
imul
pushf
mov
popf
adc
add
sub
cli
loope
mov
xchg
cmpb
ret
movsb
iret
add
inc
cli
aas
add
xchg
clc
inc
add
cwtl
mov
dec
lea
cmc
lea
dec
aaa
cmp
imul
xor
pop
xchg
cmp
insl
popf
mov
mov
hlt
jbe
out
xchg
push
fidivrs
outsl
movsl
imulb
bound
xchg
pop
adc
jmp
sbbb
jge
pop
and
ret
xchg
add
int3
push
aas
dec
lock
sub
push
pop
fs
sbb
fsubs
pop
xchg
loop
into
das
pop
lods
pop
fcoml
mov
or
scas
inc
repnz
push
in
sub
out
stc
inc
shlb
loope
test
add
or
jecxz
sub
gs
or
adc
push
sbb
mov
pop
iret
negl
fldt
mov
jne
sarl
xchg
lds
sbb
xchg
pop
and
addl
sbb
jbe
in
mov
push
sub
in
stos
add
mov
sub
cmp
pop
scas
lret
cwtl
pusha
popf
mov
pop
and
inc
sub
shll
dec
daa
addr16
insl
jb
push
sbb
aaa
ret
xor
sahf
adc
pop
ja
sete
jle
insl
aad
movsl
loop
sbb
mov
pop
es
jbe,pt
xchg
ss
cmp
or
stc
add
pop
bound
lods
cmc
sub
xchg
mov
pushf
cmp
daa
mov
dec
mov
pop
jp
andb
adc
mov
mov
xchg
jo
ret
sbb
mov
popa
jp
in
std
mov
fldl
xchg
repz
dec
into
lret
adc
sarl
pop
lock
out
add
lcall
mov
jecxz
scas
push
jmp
mov
mov
cld
add
pop
push
imul
cli
and
dec
shlb
ror
loop
xchg
into
fnstenv
pop
inc
inc
movl
nop
jae
inc
mov
cmp
mov
ss
cld
cltd
out
jmp
test
fldenv
lods
imul
rcr
cmp
roll
cmp
xchg
dec
adc
in
dec
or
cmc
xor
xor
dec
inc
mov
inc
mov
cli
jns
cmpl
xchg
lods
mov
mov
addl
or
in
jl
xor
xchg
jns
rorb
mov
xor
cli
shlb
ret
xlat
mov
scas
ss
pop
inc
aam
mov
cmp
shll
push
iret
jmp
cld
orl
push
mov
sbb
fwait
outsl
nop/reserved
clc
sub
inc
push
aad
and
adc
cmc
jae
push
test
mov
enter
mov
loopne
cmc
xchg
repz
mov
jbe
roll
mov
aam
pop
test
cs
mov
mov
dec
cwtl
in
cmc
stos
clc
inc
and
mov
add
rcrl
mov
gs
cmc
in
leave
pop
cltd
fstps
mov
bnd
sub
push
outsl
stos
lret
arpl
aad
enter
inc
into
ror
clc
lea
pusha
inc
mov
jmp
shl
scas
ret
pop
psubd
daa
rolb
insl
js
cld
sbb
xor
scas
pop
shl
xchg
divb
xor
jo
jbe,pt
bound
xor
add
movsl
dec
mov
mov
sbb
jne
mov
insl
and
int
rol
imul
dec
mov
dec
add
in
mov
jge
fistpll
jno
push
clc
sbb
in
add
inc
sarb
jge
shl
out
jp
sbb
pop
xor
out
xor
sub
cmc
inc
pop
pusha
iret
xor
jnp
sahf
aas
pusha
insl
jp
adc
jns
dec
dec
xchg
popa
sub
xchg
into
xchg
add
lret
cltd
cs
addb
dec
xchg
sarl
addr16
das
or
and
icebp
cmp
popf
jae
ud2
mov
cmpsl
fnstsw
outsl
movsb
testb
sub
xchg
in
pop
pushf
jp
loopne
lret
xor
pop
add
and
inc
pop
pop
adc
test
xchg
xchg
movsb
jg
jne
fisttpl
xchg
rcl
xor
xor
cmp
call
inc
jl
in
negb
icebp
mov
je
add
or
xchg
push
test
cmp
cmp
imull
xchg
ret
sahf
out
jne
xchg
cmc
fdivl
push
mov
lea
popa
daa
mov
jns
or
daa
leave
add
adc
movsb
push
adc
inc
push
jg
ret
jb
jns
ljmp
subl
and
and
enter
adc
cld
pop
cli
orl
out
adc
cmp
push
pop
sbb
push
add
rcl
xor
pop
fisubrs
ds
sarl
addl
cmp
iret
imul
xchg
jmp
sbb
pop
aaa
aas
push
adcl
orl
aam
arpl
loope
jmp
jp
mov
imul
add
xor
or
call
push
fs
add
or
int
and
int3
leave
xchg
ret
ss
int
je
subb
mov
outsb
hlt
push
adc
inc
inc
xchg
inc
sub
neg
dec
je
adc
pop
scas
inc
dec
and
scas
or
adc
adc
sbbb
sbb
add
and
push
das
sbb
push
aam
icebp
add
add
sahf
fidivrs
pop
mov
xor
js
data16
loopne
dec
fistps
mov
cmp
sbb
push
adc
dec
repnz
cld
popa
mov
test
lods
in
push
lret
mov
mov
jp
pop
cs
cmc
shrb
lds
xor
jae
in
xchg
ret
inc
das
mov
and
push
in
idiv
mov
fldcw
test
inc
or
xchg
xor
int
ljmp
int3
mov
mov
or
mov
iret
xor
shlb
push
out
outsl
xchg
add
lahf
dec
cmp
fsubp
sub
insl
out
ret
push
mov
mov
ss
mov
mov
rcrl
and
out
rcrl
imul
xor
insb
pop
nop
fstl
in
fs
dec
in
loope
sub
sbb
adc
pop
jno
int3
lea
push
sbb
mov
movsl
push
cli
and
sbbb
negl
test
xor
gs
mov
dec
and
xchg
sar
sbb
in
popl
sbb
repz
jmp
or
gs
mov
bound
out
std
xchg
jae
push
pushf
xor
mov
xchg
ds
das
cmp
adcl
sarl
scas
mov
and
push
cmp
lahf
cmp
fistps
mov
or
add
sahf
adc
loopne
inc
stos
clc
sub
nop
xchg
scas
mov
loop
xchg
ss
dec
lahf
nop
popa
rcr
dec
fidivrl
mov
dec
fisubs
sbb
ret
mov
je
xchg
ljmp
pop
cld
cs
and
das
jbe
push
je
jl
mov
mov
test
mov
sbb
sti
mov
les
add
pop
pop
jecxz
lret
add
add
pop
bound
mov
add
jno
sahf
jmp
push
sbb
repnz
rcrl
scas
push
cmc
inc
frstor
push
xor
dec
push
and
cltd
test
mov
sbb
xchg
imul
lods
jae
mov
test
jle
cltd
in
scas
sti
mov
cmp
test
movsl
push
and
sub
or
adc
dec
movsl
shll
aas
fwait
movsl
frstor
outsb
or
adc
pop
cwtl
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
push
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
movzwl
sub
mov
push
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
pushl
pushl
push
pushl
push
push
call
jmp
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
or
mov
push
and
mov
add
pop
addl
push
call
push
andl
push
adcl
push
xorl
push
push
addl
push
push
call
xorl
push
addl
push
andl
push
notl
push
orl
push
push
call
dec
movl
jne
mov
mov
mov
cmp
movl
jne
orl
movl
addl
pushl
sbbl
pushl
pushl
call
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
push
push
pushl
call
cmpl
jb
mov
sub
mov
and
mov
or
mov
movl
lea
xor
mov
sbb
lea
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
and
mov
sub
mov
mov
mov
not
mov
xor
movzbl
add
mov
adcl
add
movl
mov
mov
mov
movl
cmp
jne
andl
xor
or
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
lea
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
push
mov
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
lea
push
pushl
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
or
push
push
and
push
inc
mov
xor
mov
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
push
call
jmp
mov
sub
mov
sbb
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
inc
mov
mov
movl
sbbl
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xor
andl
add
mov
sbb
mov
sbbl
mov
add
mov
mov
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
and
push
pop
sub
add
movl
mov
movl
or
mov
xorl
mov
sbbl
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
mov
orl
xor
add
mov
lea
mov
xorl
mov
xorl
xor
add
adcl
mov
lea
adcl
push
adcl
mov
subl
xor
addl
add
xorl
push
movl
mov
andl
push
pushl
call
sub
mov
adc
mov
xorl
mov
mov
adcl
xor
addl
mov
add
movl
jmp
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
adc
lea
sbbl
mov
mov
mov
sub
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
sub
xor
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
sbb
mov
or
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
jmp
cli
jl
popa
fs
repz
push
and
into
push
mov
int
bound
adc
jb
add
in
xor
xor
pop
mov
dec
add
xlat
fwait
out
push
and
arpl
and
nop
mov
jb
sbb
mov
stos
fsts
popf
cmp
push
fldt
addr16
dec
mov
mov
cmp
sbb
fcoml
stos
lret
xor
icebp
inc
adc
pusha
leave
in
loop
dec
jg
pop
rcrb
ficoml
mov
fsubs
xor
addr16
mov
aas
push
jbe
push
jne
push
repnz
je
add
cmp
test
sbb
xchg
mov
push
mov
pop
test
test
xchg
pop
insl
mov
or
xor
sti
xchg
loop
cmpb
adc
icebp
movsl
pop
dec
addr16
mov
test
jg
jmp
shlb
lock
cld
mov
movsl
and
in
cmp
clc
pop
iret
mov
dec
clc
mov
or
mov
testb
push
xorb
rolb
mov
xor
inc
daa
daa
mov
xchg
movsb
cmp
mov
mov
jno
fcmove
jno
cmp
pop
sarl
lret
jnp
popf
adc
pop
not
and
lock
ret
inc
pop
addr16
aas
das
inc
ja
adc
leave
sti
xor
sbb
insb
insb
add
xor
or
shl
xchg
xor
addr16
in
lret
xorb
data16
pop
mov
xchg
jns
mov
repz
jl
mov
jnp
add
outsl
sub
mov
adc
push
outsb
mov
dec
pop
pop
test
sbb
sub
inc
test
xchg
add
and
xor
sub
lcall
sarl
cld
sbb
pop
sbb
sbb
mov
jno
rcrl
mov
shlb
leave
push
or
rclb
sbb
dec
enter
and
cmp
dec
sbb
xchg
xchg
sbb
ds
in
sbb
sbb
or
xorb
mov
dec
or
push
mov
xor
loopne
clc
insb
rclb
lock
xor
mov
call
dec
mov
xchg
sti
inc
stos
adc
sbb
fmulp
xchg
or
aaa
sahf
xchg
cmp
xchg
pushf
pop
or
shll
aas
jne
fisubrl
jp
inc
aad
pop
inc
push
in
mov
mov
popf
dec
lret
mov
sub
data16
fistl
jbe
imul
xchg
popf
hlt
stc
xchg
lret
in
jle
sub
jo
inc
adc
sub
nop
shl
fwait
imul
mov
ret
pop
sub
mov
xchg
dec
mov
xchg
jecxz
inc
int3
sub
push
in
fidivrl
ret
add
insb
js
push
fcoml
outsl
or
adc
in
lret
jmp
dec
mov
aad
in
cmpsl
in
jmp
ljmp
mov
insb
xor
adc
jg
push
add
pop
out
jno
aad
sub
in
filds
dec
aam
fldl
out
jmp
loopne
pop
cs
shlb
ja
pop
adc
xchg
clc
pop
aam
inc
iret
mov
fld
jl
shlb
mull
jp
xorb
psubb
jo
enter
add
mov
mov
jae
fmulp
jae
pop
stc
call
dec
or
daa
pop
xor
lods
sub
cs
cmc
or
ja
je
jnp
lods
sub
mov
insl
xlat
mov
dec
leave
je
daa
push
lods
jb
add
ret
add
pop
adc
pop
add
push
xor
loope
in
pop
jecxz
mov
dec
mov
popl
adc
shlb
xor
push
fs
and
jle
dec
push
sti
fldenv
ret
test
mov
data16
dec
fwait
sbb
aam
lods
pop
push
mov
cmc
ljmp
icebp
inc
sbb
mov
inc
and
scas
cmp
cmpsb
icebp
push
mov
xchg
insb
cmpsb
movsb
or
repz
and
push
imul
out
push
push
cs
fs
loope
imul
cmpsb
xor
insl
xchg
hlt
dec
gs
mov
stc
lods
push
enter
out
dec
aas
or
jae
sbbl
aad
mov
xlat
aad
loop
inc
and
int
enter
dec
sar
jnp
les
loope
push
shrl
cmp
mov
sbbb
movl
sti
xor
inc
popf
mov
dec
ds
and
incl
lea
push
mov
shlb
es
lock
mov
std
dec
dec
xchg
rclb
pop
lods
scas
movsb
daa
mov
pop
push
mov
ljmp
cvtdq2ps
ficoml
push
stos
sbb
jle
jbe
jecxz
dec
dec
lods
dec
int
stc
cmp
cmp
pop
mov
sub
leave
dec
loope
daa
pop
mov
enter
push
or
fidivrl
jl
jge
jl
decl
clc
add
stos
addr16
or
push
mov
adc
ret
pop
or
iret
lds
push
mov
sbb
cmp
pop
xorl
mov
jo
jp
les
imul
mov
adc
ss
mov
mov
sahf
xchg
mov
ja
xor
insb
mov
and
aas
rcr
aad
jmp
enter
adc
adc
jge
mov
sub
or
cmp
mov
inc
mov
iret
adc
mov
into
jns
in
jb
enter
add
cmp
dec
xchg
movsb
pop
cmp
je
or
xchg
mov
dec
or
xchg
xlat
dec
pusha
mov
nop
les
ret
mov
pop
mov
jne
rorl
mov
push
fbstp
insl
add
and
mov
test
pushf
lret
incl
sub
inc
sbb
jo
mov
idiv
hlt
fidivl
enter
aas
jp
sbb
push
fs
rolb
mov
scas
dec
mov
vpaddq
xchg
and
fdivs
mov
je
cltd
lds
ljmp
movq
xchg
lds
xor
jl
cs
or
and
jg
sub
out
test
lods
mov
inc
je
call
cmpsb
adc
push
jae
xchg
adc
inc
std
data16
repnz
jbe
sub
loop
das
push
push
into
fwait
add
adc
es
add
jmp
call
or
jne
dec
cmp
inc
scas
mov
stos
and
push
jne
lea
sbb
test
sub
and
push
xor
pop
add
mov
out
mov
sbb
lods
daa
imul
jnp
adc
push
xor
mov
add
adc
inc
add
dec
cmp
push
pop
push
jne
cmpsb
ffree
imul
push
jmp
shrb
mov
lods
mov
add
mov
es
clc
repz
mov
lret
mov
aaa
lret
inc
shl
popa
rol
and
fnstsw
shrb
pop
fistpll
dec
fldt
mov
jne
push
pop
fcoml
push
pop
mov
inc
push
rcrb
or
or
push
cmp
cmp
sbb
shl
in
cmpsl
out
xor
cmpsb
jmp
sbb
scas
ret
js
dec
jno
fwait
push
nop
test
aas
imul
and
arpl
stos
xlat
popa
ja
repnz
cmp
push
mov
mov
and
vorps
aas
call
and
int
nop
pop
iret
sti
pop
mov
cs
mov
mov
xchg
test
and
push
jns
pushf
popa
ljmp
mov
pop
inc
pop
into
aaa
adc
clc
pop
pusha
adc
negb
xor
vmovlps
dec
xchg
out
inc
fsts
push
imul
dec
lods
adc
push
jg
jp
push
das
int3
jo
jg
leave
push
repz
xlat
xor
or
inc
in
out
enter
pop
push
lret
adc
xchg
aam
push
fsubr
push
push
fdivr
sub
add
data16
pop
pop
or
nop
out
push
xor
dec
push
cmpsb
popa
sbb
call
jge
les
pop
inc
jnp
sar
mov
leave
jae
subl
insb
sub
or
cmpb
xchg
lret
ret
mov
cmp
arpl
xor
dec
repnz
inc
inc
jae
repnz
jns
aad
and
decb
rcrb
inc
push
idivb
push
ret
in
mov
dec
das
pusha
sarl
nop
aas
ja
mov
pop
xor
xchg
push
aam
jne
sarl
jno
js
inc
out
adc
lahf
jmp
inc
insl
loope
movsl
pop
lcall
adc
and
jmp
mov
mov
and
mov
popa
stos
subl
repz
mov
and
xor
leave
sahf
repnz
and
sbbb
std
cmc
test
insb
jle
mov
scas
push
mov
mov
adc
enter
mov
stos
adc
mov
movsb
mov
test
jge
mov
rcr
shlb
pop
sub
int3
inc
popf
loope
cmp
push
pop
mov
jg
nop
dec
fiadds
jae
scas
les
cs
cmc
xchg
sbb
movsb
jmp
and
dec
gs
cmp
adc
adc
cmp
mov
mov
mov
addr16
adc
out
stc
stc
jne
cmp
cmc
jg
aas
lret
out
aaa
daa
push
cmpsb
push
std
lcall
or
mov
lret
popf
xchg
sbbl
sti
lods
cmc
js
mov
pop
mov
insb
cwtl
adc
popf
adc
add
xor
xchg
mov
popa
pop
adc
loop
lods
mov
sahf
inc
mov
pop
les
cmp
pop
jbe
es
es
sahf
fldt
push
shrb
adc
cs
jp
cmp
sbb
aaa
dec
cli
mov
jnp
inc
pop
push
mov
aad
or
jp
out
mov
xor
adc
inc
ja
lds
mov
aam
inc
jae
push
adc
and
jmp
xchg
xchg
hlt
jle
fnstcw
fsubl
push
out
and
and
into
dec
dec
pushf
call
push
jbe
inc
sbb
push
dec
sub
in
sbb
adc
repz
es
pushf
cwtl
loopne
add
sub
pusha
fs
xchg
aaa
cmp
mov
adc
dec
mov
cmpsb
mov
pusha
cmp
jb
aas
adcl
ss
inc
mov
push
and
hlt
inc
sbb
mov
lock
mov
adc
jmp
jmp
imull
xchg
inc
dec
adc
pop
jg
pop
inc
jno
pop
mov
into
and
push
mov
pop
aad
push
inc
addr16
out
push
pop
inc
or
loopne
push
dec
andl
push
mov
out
fdivl
stos
shl
push
mov
cmp
mov
fiadds
add
jb
cmp
push
mov
jnp
mov
mov
fs
test
push
lods
cltd
enter
arpl
sub
jno
add
lea
sbb
or
ret
mov
cmp
sub
xor
jb
mov
push
dec
mov
or
adc
xchg
imul
mov
xlat
mov
sbb
xchg
lahf
and
fisttpll
les
push
pop
xchg
adc
jno
jnp
or
push
addr16
mov
cltd
inc
mov
mov
fs
pop
jnp
popa
or
lret
push
rol
jo
repnz
rorb
cmc
jge
xchg
dec
mov
std
lea
sbb
push
leave
and
fs
cmp
xlat
xor
add
and
mov
xchg
dec
pop
mov
mov
lods
je
dec
dec
repz
rorb
xchg
mov
pop
sub
or
daa
mov
xchg
out
outsb
mov
bound
pop
and
negb
pushf
or
scas
mov
jb
mov
mov
jno
jne
stos
mov
rdpmc
cmpsb
xor
sbb
outsb
and
lcall
cmp
shl
mov
lea
cltd
rep
xchg
lret
mov
scas
repz
notb
ds
and
cwtl
push
jb
dec
jle
jb
and
ret
dec
jge
inc
cmp
test
jb
pusha
xchg
hlt
mov
loopne
mov
jne
lock
in
scas
add
mov
mov
movsl
clc
add
mov
imul
lret
pop
dec
xchg
dec
pop
cli
add
sub
jae
mov
cmpsl
pop
es
push
push
adc
mov
mov
push
or
add
jnp
jae
fistl
lods
or
imul
and
testl
fiadds
inc
jecxz
jae
mov
gs
sub
xor
pop
cmp
stc
addr16
addr16
loop
jmp
push
sbb
loope
mov
loop
sbb
jle
pop
outsb
sub
ljmp
test
fsubrs
movl
adc
aas
out
jne
pop
add
int3
mov
out
int
mov
mov
or
cld
pop
into
pop
std
cmp
sub
push
loop
in
or
mov
stos
xor
and
ja
push
pusha
sbb
leave
mov
arpl
adc
pushf
les
push
cmpsb
stos
push
dec
mov
mov
cmp
dec
sub
pop
mov
or
jno
scas
xchg
inc
lods
or
iret
insl
xchg
ret
xorl
add
pop
int3
js
dec
test
ror
sbb
fdivl
sub
push
jo
mov
mov
xchg
push
mov
cs
daa
insl
and
add
jnp
cmpsb
int
lods
lret
aam
push
int
loop
add
lret
cmp
mov
ljmp
fidivrs
dec
insl
cwtl
xchg
loopne
dec
inc
hlt
aam
mov
lock
cmc
jp
fldl
outsl
aad
inc
or
sub
sub
cltd
icebp
cmp
push
jbe
xchg
sbb
adc
shl
pop
sahf
adc
pop
ss
mov
sub
mov
aas
ja
adc
subl
icebp
xchg
push
or
mov
mov
mov
loope
sbb
xchg
dec
mov
movsl
popl
test
mov
aad
cmp
adc
add
lods
lock
xchg
je
mov
dec
sub
cltd
shll
inc
adc
jbe
jae
scas
push
inc
xchg
mov
xor
aas
mov
pop
xorl
fsubr
and
cmp
mov
je
out
imul
popa
pop
sbb
push
mov
fwait
sub
out
pop
fsubs
jnp
addr16
xor
sahf
dec
or
jns
out
test
stos
dec
aad
add
dec
not
outsl
sarl
or
mov
in
out
adc
cli
and
jg
xchg
xchg
movsb
stos
popl
or
incl
mov
or
inc
pop
cmp
pusha
fistl
in
pop
bound
lds
mov
testl
mov
ja
jle
add
jo
mov
outsl
das
fmuls
add
out
lock
adc
aaa
loopne
test
mov
incb
call
xlat
enter
add
ret
fdivrl
aam
data16
mov
adc
jp
imul
jle
mov
xor
xchg
mov
add
gs
aad
stos
ds
lahf
daa
dec
bt
out
jp
pop
dec
push
lea
adc
pushf
adc
fstpl
pop
pop
mov
bound
jecxz
nop
lahf
pop
fmul
imul
push
fcompl
test
sbb
add
jecxz
add
test
nop
fcomp
mov
das
js
cmp
mov
add
out
mov
loopne
push
ljmp
lea
movsb
outsl
test
pop
sbb
cmc
stos
gs
xchg
lock
scas
or
mov
inc
lret
shlb
pop
adc
sbb
and
les
xlat
fwait
jecxz
push
lret
sbb
jg
pop
or
and
fsubl
lcall
xchg
sbb
push
les
ljmp
and
jl
mov
mov
mov
aad
pop
mov
dec
pop
xor
jns
adc
adc
scas
xchg
loop
add
int
push
sti
pop
jo,pn
sbb
sub
iret
outsb
xchg
fisubs
arpl
adc
sbb
test
test
mov
fcomps
fs
xor
push
pop
mov
sub
mov
inc
inc
jecxz
sbb
pop
or
je
ss
jns
arpl
fs
sarl
sahf
aaa
insb
lds
addb
lret
cmp
lods
aas
into
in
orb
sbb
mov
push
insb
fiaddl
dec
repz
cmpl
dec
pop
stc
xor
mov
xlat
push
test
cmpsb
mov
push
fwait
inc
pop
xchg
push
sub
mov
pop
pop
mov
inc
xchg
imul
hlt
mov
test
pop
or
push
fchs
out
popa
sar
cwtl
imul
push
loope
add
xor
mov
pop
cmpsl
dec
stos
mov
repz
dec
repnz
sbb
mov
or
push
jns
inc
cs
clc
mov
add
cmpsb
stos
mov
in
rolb
movntq
xchg
adc
notb
icebp
mov
push
push
cmpsl
outsb
decb
daa
ss
ja
iret
mov
push
ljmp
cli
sbb
cli
call
mov
and
adcb
add
push
fisttps
sub
mov
leave
push
imull
cmp
cmp
inc
adc
in
mov
lea
xorl
add
push
add
fnsave
int3
dec
loope
es
stos
sti
sub
dec
cmp
jb
mov
xchg
jecxz
popa
imul
repnz
jg
jb
fimuls
cmp
mov
and
jp
aam
push
jge
lds
jae
fistpll
mov
jbe
mov
hlt
sub
inc
pop
sbb
or
xchg
sub
lcall
xlat
icebp
jmp
push
dec
into
bound
je
decb
cmp
mov
jp
daa
mov
jnp
jb
gs
sub
jnp
sub
je
gs
fwait
imul
pop
pop
ret
mov
repz
adc
test
mov
lds
mov
jns
jno
mov
xchg
sbb
pop
xchg
push
dec
data16
sbb
lret
xchg
loope
sub
mov
mov
movsb
sar
sub
daa
roll
xchg
and
in
es
xchg
lret
ret
js
cmpb
push
sub
push
sub
negb
movsl
popa
jmp
cmpsl
pop
adc
cmp
adc
sti
xlat
out
cmp
les
fsts
and
push
jo
lods
dec
clc
cmp
xchg
cmpl
inc
movsl
xor
lret
outsl
int3
scas
pop
push
test
pusha
dec
xchg
sub
pushf
pop
in
in
arpl
mov
out
cmp
outsl
cmp
add
je
dec
inc
ja
inc
add
inc
xor
xor
pop
in
jae
mov
xchg
test
sahf
in
lret
sbb
adc
xor
sbb
sbb
add
mov
and
xchg
fidivrs
adc
add
mov
pop
lret
lcall
es
fcompl
or
rorb
push
dec
in
arpl
lds
jmp
xchg
sbb
testl
dec
push
mov
mov
pop
pop
sbb
out
and
xchg
outsl
lods
add
xchg
cmp
cwtl
jmp
push
lahf
jle
fcoms
mov
sub
jge
sbb
and
adc
push
inc
insl
insb
jbe
dec
inc
sbb
xor
cmpsb
rcrb
jbe
jge
insl
adc
les
js
movsl
mov
stc
fwait
mov
fistpll
rolb
inc
iret
lods
mov
movsb
mov
adc
movsb
mov
push
push
sarb
jne
mov
mov
imul
out
scas
lock
jmp
lahf
rorl
fidivs
clc
xchg
rorl
mov
add
dec
cltd
add
push
and
pushf
lahf
clc
repnz
push
sbb
adc
xor
cmp
not
or
xor
jl
fadds
pop
xchg
ret
cmp
sarb
stc
xchg
push
push
outsl
sbb
push
sarb
push
daa
pop
test
lcall
cmova
aam
aad
cs
test
scas
push
jb
jmp
dec
push
mov
decb
push
lret
sub
pushl
cltd
int
in
sub
sub
subl
movsl
add
sarl
data16
mov
les
mov
aam
sbb
shr
out
out
jnp
hlt
push
jmp
jnp
sub
add
imul
ret
add
push
aam
mov
shll
xor
leave
mov
mov
into
test
sbb
sub
and
stc
adc
jbe
jnp
adc
dec
pop
jne
mov
test
and
stos
mov
es
icebp
mov
je
push
push
add
push
icebp
mov
stc
loopne
out
out
fidivl
jo
add
dec
mov
inc
and
push
xchg
mov
mov
push
pop
adcb
push
movsb
outsl
lahf
inc
add
out
out
sbb
adcb
rorb
int3
mov
add
xor
jge
mov
push
ret
sahf
jge
push
call
shlb
js
add
xor
icebp
repz
je
and
movsb
call
dec
jb
adc
sti
xor
xchg
sbb
mov
inc
mov
fptan
cmpsw
sbb
inc
xor
dec
pop
ret
mov
sbb
movsl
les
repz
add
xorl
dec
cltd
inc
lock
test
push
test
out
mov
or
mov
mov
xor
mov
adc
xchg
jo
mov
or
mov
inc
icebp
testl
pop
mov
add
dec
mov
adc
push
mov
pop
out
xchg
and
daa
dec
stos
dec
loope
cmp
lcall
lret
or
clc
enter
dec
je
inc
hlt
pop
enter
mov
cmp
dec
fldcw
jns
sub
push
test
xchg
nop
lret
loopne
outsb
lds
sub
insl
push
mov
jne
iret
cli
popa
notb
out
int
dec
add
clc
into
insb
addl
xchg
xlat
push
mov
jo
dec
fisubs
pushf
jb
and
cmp
inc
and
mov
lcall
stos
jg
or
inc
cmp
sbb
cmp
cmc
dec
ja
pop
jmp
cmpl
les
sti
lock
outsb
pop
sti
mov
ljmp
ljmp
mov
mov
cltd
fsubs
sbb
mov
cmp
mov
cmp
sbb
xor
pop
mov
cmp
filds
cmpsb
outsb
stos
pusha
ss
or
mov
imul
or
imull
mov
adc
sbb
sub
xchg
sbb
add
in
loope
in
sbb
sbb
out
lahf
mov
jmp
arpl
aas
shlb
dec
and
xor
mov
insb
cmp
gs
dec
dec
in
pop
xchg
push
das
fwait
mov
mov
mov
imul
mov
push
imul
cld
xchg
fimull
xor
cmp
lcall
rcr
xchg
add
dec
sub
dec
subl
cld
cmc
mov
dec
iret
xor
lds
mov
push
cmp
in
les
std
das
sbb
cli
mov
popl
pusha
or
js
sbb
cmpsl
mov
imul
subl
call
out
lret
mov
or
ret
pushf
inc
xchg
mov
icebp
pop
test
test
mov
pop
xor
stc
pand
mov
sub
popa
out
sbb
or
arpl
bound
out
and
and
rcr
loope
loopne
shll
mov
das
adc
or
xor
pop
pop
or
mov
stos
jmp
dec
cltd
cli
testl
push
gs
in
out
es
push
inc
and
adc
jae
xchg
stos
cmp
clc
popa
lahf
out
mov
imulb
aam
notl
jp
andl
or
fisttpl
cltd
jns
inc
lock
sahf
mov
and
pop
cld
pop
outsl
out
mov
in
jge
jle
jecxz
sbb
xchg
mov
pop
ljmp
call
xor
lret
add
add
popa
push
pusha
mov
cmp
sbb
loopne
roll
fstpl
mov
jp
xchg
aas
lret
adc
sarl
cmp
jle
ds
std
mov
jnp
cs
and
add
fs
inc
add
insl
mov
es
ljmp
insl
imul
push
adc
add
fnsave
fisttpl
add
inc
mov
insb
sti
xor
enter
mov
in
or
sub
inc
push
loopne
in
pop
cmp
inc
fcomip
mov
jge
jmp
mov
js
hlt
push
sti
sti
xchg
sub
mov
ss
movd
sub
into
jge
adc
cwtl
xorb
xor
pop
push
loope
xchg
cmc
push
in
or
push
mov
je
add
adc
shl
xor
mov
pop
sbbl
mov
xchg
xchg
mov
or
lcall
nop
rcl
xchg
sbb
call
add
xchg
mov
std
and
ja
sub
xchg
call
repnz
cli
mov
xchg
fwait
aas
mov
stc
int3
insl
mov
sbbb
scas
cmp
xlat
stc
sbb
test
xchg
daa
inc
jo
mov
and
lods
jecxz
and
jg
lret
cs
divb
cmp
jle
sarl
push
test
mov
imul
xlat
jg
jns
push
dec
lock
js
outsb
xlat
push
mull
repz
jge
in
jb
fisubs
add
test
addl
and
push
js
sbb
jae
aaa
in
pop
push
add
xchg
fs
into
shr
in
or
mov
and
mov
shll
inc
je
nop
in
pop
dec
popa
test
sub
ret
push
loopne
stos
fists
xchg
ds
jo
std
pop
sub
xor
out
ret
xor
dec
inc
movsl
out
or
loop
jle
adc
int3
mov
and
mov
mov
cmp
sub
out
jbe
mov
adc
xchg
push
fnstcw
cmp
push
adc
mov
ss
frstor
jbe
lret
sti
in
lea
cmp
jg
sbb
push
dec
iret
mov
pop
push
sbb
cmpsb
fcmovbe
mov
imull
pusha
mov
fwait
orl
jae
int
mov
call
sub
push
jle
movsl
dec
sub
insl
push
enter
mov
and
jecxz
test
sbb
dec
push
adc
outsl
test
pop
push
mov
lahf
insl
jbe
mov
arpl
push
outsb
xchg
rcr
push
loope
mov
sbb
and
test
outsl
arpl
inc
sub
mov
gs
les
mov
lret
hlt
movsl
xor
aas
aad
xchg
mov
inc
ss
add
fwait
pop
mov
jg
dec
in
cmpl
clc
subl
out
inc
sbb
pop
jb
pop
iret
dec
adc
xor
aad
jae
shll
adc
cmpsb
rclb
dec
movsl
adc
dec
sar
in
cmp
into
xchg
ret
loope
ret
fimuls
cmp
in
imul
stos
mov
lret
cmp
insb
decl
cmpsb
mov
shl
and
lock
or
sbb
icebp
or
and
cmp
push
ficompl
negl
mov
arpl
adc
mov
arpl
js
dec
or
sbb
loope
insl
fstpl
fnstenv
push
stc
insl
jecxz
xchg
stos
inc
mov
ret
out
mov
push
push
or
mov
aad
loope
and
and
pop
imul
adc
rcrb
mov
rorb
call
inc
cwtl
in
push
adc
jb
rcr
mov
imul
xor
push
lods
inc
cmp
aas
xorb
sub
test
xor
cmpl
mov
and
sbb
iret
movntps
out
cli
jne
add
xor
adc
dec
lods
and
loope
daa
mov
dec
into
push
push
lea
sbb
dec
imul
mov
incb
dec
bnd
add
or
clc
xchg
jae
and
packssdw
mov
push
in
xchg
mov
pop
and
call
out
repnz
xor
inc
incb
xchg
jmp
js
pop
orl
dec
jge
add
mov
mov
mov
cld
mov
jnp
sarb
cmp
mull
lock
cmpsb
jmp
xchg
fdivrp
or
aaa
sbb
lods
adc
mov
pop
cmp
jg
stc
xor
sub
jno
sbb
adc
js
mov
insl
mov
or
andb
js
inc
mov
aam
dec
std
emms
mov
loopne
call
mov
out
inc
mov
incl
icebp
xchg
cwtl
mov
jae
push
adc
stos
add
xor
in
icebp
pop
out
rclb
xchg
stos
testb
xchg
pushf
ja
jnp
cmp
push
ss
adc
repz
pop
push
jb
jle
jbe
push
sbb
pop
mov
sub
sub
stc
imul
push
popf
add
lret
cmp
loop
or
ss
jle
jg
je
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
jmp
xlat
repz
xchg
mov
mov
xchg
fnsave
int
bound
out
mov
lret
sti
bound
cli
push
testl
mov
xchg
jne
jmp
pop
push
mov
loop
and
cli
clc
int
add
sti
data16
mov
out
bound
repnz
mov
loop
mov
xor
push
mov
mov
or
and
loop
and
push
outsl
jle
aad
push
jg
cmc
lods
cmpsl
push
and
mov
test
mov
inc
jl
pop
jns
push
popa
insl
sbb
pop
jp
test
jo
pop
iret
shrb
sub
loopne
xor
push
dec
mov
arpl
jg
mov
lret
jl
movsb
movsb
sub
movsl
inc
cwtl
mov
xchg
ret
pop
popf
in
add
sbb
dec
or
bound
pop
outsl
loop
adc
das
inc
shll
jne
in
jb
divb
shr
fs
mov
pop
int
xchg
inc
push
mov
jmp
or
es
sahf
ja
and
sbb
sbb
rorl
mov
push
inc
cmp
lods
pop
rol
lret
cli
ja
ja
icebp
idivb
leave
rcrl
movsb
push
ret
cwtl
sarb
adc
pop
dec
ficoms
scas
repz
jmp
pop
popa
dec
stos
leave
sub
mov
in
clc
xchg
mov
add
sub
movsl
rcrb
loopne
inc
or
out
sbb
add
test
ret
iret
sbb
inc
out
add
addr16
dec
pop
push
and
push
cmpsb
ljmp
test
mov
idiv
mov
jmp
jge
push
lahf
or
dec
daa
or
and
push
mov
jle
or
cmc
les
mov
mov
test
aas
jmp
xor
iret
push
bound
push
pop
sub
cmp
add
xchg
movsl
enter
cmp
cmp
add
cld
xor
enter
pop
daa
in
add
das
xchg
push
push
lret
repz
ds
aas
xchg
aas
pop
inc
xor
imul
cmc
or
cmp
or
lds
push
pop
ljmp
nop
rclb
adc
xchg
jb
aam
mov
data16
dec
dec
mov
mov
mov
lods
xlat
sbb
xchg
mov
clc
cmpsb
add
nop
jo
dec
push
mov
push
roll
lret
mov
ljmp
cmp
cmp
pop
adc
or
inc
stc
mov
and
int
les
inc
dec
cmp
test
inc
mov
add
xchg
pop
test
je
mov
std
mov
dec
gs
cli
pushf
pop
cmpsb
out
shr
dec
inc
push
daa
pop
xorb
push
sub
es
fidivrl
hlt
mov
lret
mov
push
xchg
scas
xchg
mov
xchg
lea
push
add
roll
test
push
movsl
mov
jnp
inc
cmp
push
mov
xorl
and
mov
cmc
or
nop
es
sub
or
pop
pusha
inc
stc
pop
cmp
push
or
sbb
xchg
enter
jns
imul
cli
adc
arpl
fiadds
inc
sbb
sbb
jp
jmp
lods
test
in
je
mov
dec
xchg
xlat
fnstcw
leave
fs
mov
push
cmp
in
call
out
xchg
ljmp
fs
and
jge
cmp
mov
cmp
adc
test
xor
dec
push
jge
cmp
adc
mov
es
mov
in
rcrl
jb
das
cmp
in
mov
fdivr
and
push
shl
xchg
fiaddl
sbb
gs
orb
stos
sti
jmp
or
out
repz
in
decl
adc
andb
sbb
pop
cmp
or
ss
shl
mov
orb
dec
sbb
or
fs
rol
xor
das
pop
cli
mov
imul
clc
xchg
mov
xchg
outsb
in
dec
mov
sbb
or
xchg
ja
popa
add
les
aad
or
addr16
enter
cmp
aaa
mov
pop
pop
sbbl
scas
into
sbb
sbb
ss
out
enter
mov
data16
gs
out
add
hlt
std
cmp
outsl
jg
lcall
mov
cli
cmc
or
dec
mov
xchg
and
rcr
loopne
lea
add
adc
and
sbbl
imul
pop
cmpsb
js
rcll
imul
imul
cmp
inc
jo
movsb
and
mov
mov
sub
mov
lea
xchg
mov
lahf
imul
pop
mov
popf
imul
rcrb
mov
leave
add
or
cltd
roll
sub
mov
outsb
movl
aaa
sbb
hlt
add
leave
mov
push
mov
and
mov
sbb
subb
out
mov
int3
add
js
pushf
mov
mov
jecxz
popa
or
fdivl
sub
int3
jb
dec
push
push
stos
mov
push
push
sub
cmp
cmp
int
cmpsb
adc
sbb
sbb
test
sub
or
out
popf
push
addr16
push
dec
push
dec
lahf
mov
repz
data16
int
scas
iret
imulb
add
sahf
or
mov
js
mov
movsl
xchg
fidivrs
or
mov
mov
test
shl
inc
push
adc
pushl
adc
xor
jecxz
shrl
cwtl
jbe
scas
je
xchg
mov
cmp
in
daa
add
scas
mov
push
sbb
test
movsb
adc
mov
xchg
sbb
das
in
add
and
lcall
or
pop
arpl
aaa
cmp
ss
mov
out
les
mov
add
dec
daa
pop
lock
cmp
pop
dec
pop
pop
push
inc
ljmp
inc
test
cmp
dec
push
or
push
ret
mov
lock
push
sub
mov
cmc
mov
loop
outsl
push
pusha
xor
xchg
in
adc
outsl
dec
lahf
subb
mov
out
cli
xchg
gs
ds
xor
imul
pop
push
jmp
fwait
sub
in
test
cmpb
out
fwait
cmpsl
ret
fxch
cmp
sub
dec
add
insb
or
xchg
leave
popf
xchg
gs
jge
insb
xor
stos
xor
adc
sbbl
xor
sahf
fiaddl
movsb
jl
push
pusha
jle
cmp
in
ds
mov
dec
fbld
cs
hlt
mov
in
push
ja
lret
mov
imull
out
sbb
cmp
mov
xor
mov
addr16
rcll
cmp
fcmovb
mov
das
push
into
in
popa
loopne
mov
cmpsl
jle
push
shlb
pop
and
sete
jae
lahf
cmp
sub
out
imul
add
sti
add
outsl
lcall
aas
pop
idiv
in
out
std
push
lods
mov
out
mov
pop
andb
shl
mov
jae
jecxz,pn
movsl
sbb
pop
lahf
mov
clc
lods
xchg
dec
fs
es
gs
jo
mov
shrl
mov
mov
mov
mov
adc
iret
jo
data16
sub
and
adc
pop
aam
xor
shrb
dec
xor
ljmp
push
cltd
addr16
sbb
sub
ficoms
mov
in
lods
in
adc
mov
pushf
orb
pop
jg
sub
aad
dec
jecxz
mov
adc
dec
hlt
mov
xchg
clc
iret
cmpsl
out
or
sbb
adc
mov
mov
shlb
test
repnz
dec
adc
inc
adc
fwait
call
push
cmp
loopne
sbb
add
rclb
bound
lock
sbb
pop
lds
pop
pusha
pop
movsl
imul
addb
inc
adc
mov
aas
jmpw
xor
xor
rcr
mov
xlat
sbb
and
notl
icebp
cmp
mov
packuswb
jae
dec
stc
jb
lret
repnz
lcall
ljmp
jns
xchg
lock
cltd
jle
rcrb
es
out
mov
or
jnp
jne
push
insl
jp
xor
std
adc
test
or
sbb
sub
aaa
dec
out
sahf
cmc
ss
push
jno
or
add
icebp
sbb
xor
pop
sbb
ficomps
mov
push
or
or
xchg
mov
arpl
xchg
and
adc
pop
xor
jne
inc
adc
push
push
nop
xchg
mov
mov
mov
sub
mov
sti
and
push
data16
inc
movsl
gs
andl
add
call
cwtl
cmpsb
xchg
fnstenv
inc
pushf
xchg
stos
js
ds
sar
mov
mov
insl
in
jbe
xlat
orl
sub
xor
cmp
cmc
sti
jb
icebp
or
loopne
popf
push
aam
loop
push
sysenter
dec
or
push
inc
mov
ret
mov
iret
fstpl
push
sbb
fisubrs
arpl
pop
xor
ret
mov
nop
or
jo
jmp
sbb
shrl
stos
dec
daa
jecxz
pop
adc
push
outsb
lods
jnp
mov
push
stos
mov
jne
cmpsb
jne
inc
push
sbb
and
nop
repnz
add
dec
cmp
lds
je
test
xor
sub
test
inc
in
ds
jmp
cli
or
adc
sti
pop
ret
insl
sub
iret
dec
fwait
jge
xor
and
jno
jmp
jg
mov
cmp
mov
movsb
sub
xor
cmp
inc
orb
test
lret
dec
mov
lods
jno
dec
mov
pushf
xlat
lahf
xchg
iret
mov
inc
vmovupd
inc
in
sarb
cmp
test
loopne
into
cmp
add
push
adc
xor
jmp
mov
push
pxor
aam
xchg
hlt
add
sub
cmp
push
divb
shr
jno
sbbl
push
ret
xchg
add
jno
mov
xor
and
xchg
bound
adc
pop
sbb
sub
or
mov
fnstenv
cwtl
ja
and
sub
sbb
cmp
enter
adc
leave
sub
lods
mov
in
movsl
dec
icebp
inc
xor
imul
jmp
push
sbb
inc
cs
dec
mov
jns
jbe
movsb
sbb
sub
jecxz
push
mov
pop
mov
jp
in
push
or
out
sbb
mov
jnp
add
je
pop
dec
dec
push
xchg
imul
xchg
or
mov
xchg
loop
dec
dec
std
add
mov
shll
js
and
push
push
inc
lret
dec
jle
xlat
mov
inc
dec
scas
stos
nop
pop
cld
adc
scas
dec
and
xor
lret
jecxz
mov
fiaddl
jne
adc
movb
in
mov
popf
push
test
pop
imull
js
push
push
push
and
fildl
test
lock
data16
dec
mov
ficomps
dec
mov
mov
ret
addr16
jbe
xchg
jnp
push
jge
push
dec
adc
pop
xor
lods
aaa
iret
in
xchg
mov
push
popf
in
xchg
pop
jae
mov
cmp
and
loopne
stc
arpl
jg
pop
mov
outsl
or
xchg
ret
push
jbe
test
lret
bound
cmp
sbb
fbstp
jo
pop
push
xchg
jne
idiv
jl
mov
mov
dec
inc
sbb
mov
sbb
outsl
add
or
pushw
cmp
adc
sub
lds
mov
mov
and
aas
sahf
fidivs
cltd
sub
scas
xchg
js
or
push
leave
xchg
adc
cwtl
mov
sahf
fs
and
addr16
in
adc
mov
xor
mov
mov
loop
push
stos
and
mov
lods
adc
dec
inc
lea
and
outsb
dec
dec
add
shl
les
dec
lea
pop
in
add
aam
fidivl
shll
sbb
out
ret
inc
lea
out
out
and
mov
and
cltd
or
mov
and
dec
mov
mov
addr16
or
jg
push
push
inc
push
aam
mov
sbb
xchg
out
mov
jns
sahf
push
add
inc
repz
popa
jmp
ss
xor
mov
sbb
xchg
ret
or
mov
out
dec
add
shll
mov
movsb
insb
mov
dec
add
outsb
jno
xor
stc
popa
xor
cs
pop
idiv
mov
adc
sbb
iret
sub
jmp
pop
shl
push
mov
popa
test
hlt
test
scas
out
xchg
push
fiadds
pop
mov
inc
iret
scas
ret
adc
sub
aam
pop
jmp
mov
mov
shl
bound
mov
repz
fistps
dec
pop
jmp
in
dec
imul
jbe
sti
je
aad
push
test
das
sbb
dec
mov
fldl
mov
mov
mov
je
in
cmp
addr16
and
pop
adc
inc
jae
mov
or
lret
gs
jecxz
cmp
shll
popa
and
jecxz
xchg
daa
mov
mov
xchg
add
jno
test
and
dec
int
js
ss
mov
in
cltd
ljmp
arpl
lahf
sub
pop
xor
lods
mov
ljmp
mov
jno
fcomps
adc
cmpsb
lods
pop
jecxz
inc
or
fdivrs
mov
dec
jle
shlb
aam
leave
jbe
xlat
rorl
inc
inc
xchg
shll
and
sbb
pop
sub
aad
aam
dec
addr16
addr16
xchg
mov
in
fildl
and
jp
mov
or
add
hlt
jno
nop
mov
mov
adc
shlb
jmp
sbb
or
pushf
das
popf
lods
mov
sbb
scas
lret
or
lea
fimuls
std
inc
enter
imul
sub
xor
jp
xor
loop
std
jns
ja
imull
out
pop
inc
test
mov
aas
add
dec
lods
push
and
movsb
inc
mov
sub
xor
mov
aad
imul
fmull
xor
lods
xchg
mov
jge
jg
aam
adc
in
sbb
subb
pop
andl
sub
lret
and
xlat
pop
mov
loope
scas
mulb
je
pop
push
mov
dec
mov
addr16
lret
fadds
mov
mov
or
add
int3
xchg
xor
jnp
push
lahf
jbe
jg
push
sahf
int3
cld
test
and
lcall
mov
cltd
jecxz
mov
jecxz
out
dec
jnp
or
repnz
push
inc
fwait
rcrb
jae
les
jae
mov
or
inc
sbb
sahf
test
pop
lret
leave
repnz
fcmovne
or
xchg
fistpl
outsl
or
sbb
fdivl
pop
ret
std
imul
cmp
or
sbb
cwtl
jmp
jle
lcall
out
les
pop
or
subb
repnz
das
jl
or
jg
outsb
jnp
mov
cmpb
push
mov
mov
push
sub
test
mov
enter
cld
jns
out
sbb
jecxz
jae
aaa
or
shll
adc
sti
push
inc
inc
jecxz
jge
sbb
xchg
adc
dec
loop
outsb
test
bound
push
jae
es
call
mov
mov
popa
pop
pop
dec
mov
fisubrs
mov
mov
add
cltd
jbe
test
push
iret
pop
in
orb
push
sbb
xchg
loopne
xor
push
sub
add
pop
inc
inc
push
and
sbb
mov
jne
aam
mov
aam
jbe
rcl
mov
jp
and
popa
push
inc
loopne
push
outsl
mov
or
das
cwtl
fwait
mov
daa
pop
cmc
mov
xor
xor
lock
pop
jecxz
cmp
dec
popl
stos
sub
pop
xor
xchg
lret
push
in
loop
out
inc
fstp
lcall
push
push
mov
mov
sti
push
cmp
and
pop
outsb
call
fwait
out
cmpsl
jle
outsl
adc
dec
cmpsl
outsb
mov
dec
movsb
mov
fstl
jl
push
aas
ja
out
imul
lcall
call
out
adc
imul
repnz
int3
jge
sbb
lahf
mov
sbb
adc
pusha
iret
dec
outsb
test
mov
pop
sbb
ret
pop
jl
dec
pop
pop
jle
and
sbb
ret
lret
add
xchg
cmp
andb
xor
pop
xor
jle
mov
sbb
jbe
loope
sbb
inc
es
mov
repz
mov
ror
push
adc
cmc
testb
or
out
push
scas
pop
movsl
mov
filds
fldenv
xchg
and
imul
xor
sbb
xorl
stos
push
test
xlat
repnz
lock
lods
sbb
fnstenv
cmc
jmp
mov
outsl
xchg
sbb
iret
out
jae
out
or
pop
mov
lods
imul
sbb
adc
stc
cld
lahf
fsubp
pop
xchg
test
sub
adc
lock
ja
cmp
xchg
rcll
inc
or
pop
insl
outsl
fimuls
les
scas
and
mov
dec
or
inc
call
jbe
dec
xchg
mov
movsl
clc
dec
lds
mov
rcl
adc
in
mov
xorb
mov
dec
jg
push
loope
cmc
inc
fmull
fisubrs
mov
pop
adc
iret
sti
inc
js
mov
inc
jge
dec
push
mov
mov
mov
xor
loop
mov
lret
ljmp
xor
adc
inc
arpl
and
adc
fistpl
xor
outsl
mov
shrl
cmc
push
ljmp
sbb
mov
push
push
push
stos
mov
insl
pusha
xor
sub
xchg
jb
into
std
mov
pushf
adc
adc
inc
hlt
ds
xor
push
dec
add
and
mov
jns
out
push
mov
mov
xchg
out
lret
data16
push
push
inc
ja
xchg
aam
sub
or
int
sbb
sbb
adc
push
movsl
sbb
inc
pop
test
or
mov
dec
or
push
leave
and
pop
pop
sub
inc
cmp
sbb
in
lret
movsb
rorl
xor
dec
lahf
inc
jle,pt
hlt
xorl
fwait
dec
push
ss
jbe
dec
enter
ljmp
mov
and
aaa
xchg
repz
test
push
icebp
jnp
lods
andl
out
cwtl
into
push
push
sbb
add
int
call
push
fisttpl
cmpsb
dec
ljmp
fildl
jo
loopne
mov
jbe
adc
sarl
adc
scas
mov
and
insl
jg
or
xor
or
push
in
push
mov
jno
jecxz
scas
sbb
out
and
sarl
sbb
orl
dec
push
or
addr16
inc
dec
cmp
cmpb
xchg
cmp
xor
add
movl
movb
fnstcw
popa
pop
pop
mov
jmp
fcoml
cmp
insb
adc
cs
mov
inc
add
out
jae
mov
inc
dec
loop
lahf
mov
jecxz
jge
and
push
ds
jo
lahf
cmpsb
or
call
jnp
imul
push
push
test
or
orl
mov
pusha
push
and
je
jmp
in
sub
xor
xchg
jg
int3
xchg
roll
pop
popf
pop
and
mov
mov
sub
imul
leave
sbb
imul
enter
test
test
leave
sub
rcl
cmp
pop
out
insb
jge
pop
pop
std
add
mov
mov
adcl
cwtl
addl
ror
mov
jge
pop
push
sarl
push
mov
imul
daa
scas
int
cli
adc
mov
stc
jl
out
add
xchg
sbb
inc
inc
clc
idiv
add
outsl
mov
lock
push
pop
pop
mov
cmp
cmpb
push
icebp
dec
iret
test
sbb
ljmp
inc
mov
movsb
push
adc
data16
jbe
and
add
xchg
fisttps
jbe
imul
insb
out
inc
sub
and
push
ret
mov
ss
xchg
xchg
pop
scas
jp
sbbb
fwait
xor
push
adcb
sub
shll
pop
lods
aam
fldcw
repz
js
inc
push
sti
fnsave
and
push
or
add
or
sbb
jo
mov
outsb
mov
mov
mov
mov
cmp
loop
cmpsl
jns
cmpsl
or
or
push
push
mov
pop
out
outsl
push
pop
xchg
fcoms
aad
xor
jae
or
xor
scas
ljmp
mov
mov
jmp
hlt
aad
sub
or
sbb
pop
sbb
and
and
or
das
pop
mov
mov
sub
addr16
push
lret
ss
movsl
daa
pop
xchg
notb
sbb
push
push
push
out
or
ljmp
sahf
mov
add
cmp
adcb
dec
bound
or
jno
sub
into
imul
or
sbb
jnp
ret
orl
mov
and
mov
adc
out
inc
sbb
repz
jne
mov
divb
lea
insb
movsl
fsubp
xor
fidivs
push
addr16
filds
sbb
es
mov
dec
loop
outsb
stc
jno
jge
dec
push
add
mul
inc
add
fld1
mov
lods
xor
sarl
add
mov
sub
jge
adc
sbbb
mov
aad
push
inc
xor
jnp
pop
lods
push
xchg
mov
push
cmc
mov
repnz
fsubl
lcall
mov
mov
inc
mov
pop
addl
sub
sub
pop
popf
or
outsl
mov
xor
jmp
test
subl
sub
movb
andb
repnz
push
jb
xor
out
scas
lock
jge
mov
inc
insl
xchg
lds
jo
sbb
cmp
xor
inc
dec
bound
stc
cmp
sub
inc
add
popf
adc
inc
mov
pop
jecxz
loopne
mov
nop
lea
movsl
enter
sbb
cli
andb
dec
xlat
into
add
xor
daa
xor
shll
inc
dec
insb
and
inc
aam
ret
push
and
mov
test
addr16
mov
popf
adc
jnp
sub
in
sub
iret
mov
loope
dec
fyl2xp1
fisubrs
out
mov
cmpsb
add
cmpsl
push
pushf
cwtl
popa
pop
dec
jns
xor
call
push
sahf
or
and
jae
or
addr16
ja
popa
adc
mov
pop
jecxz
lret
sbb
and
pop
in
add
jne
add
mov
fdiv
loope
mov
insl
cld
adc
xor
pop
mov
movsb
fcmovnbe
ficoms
mov
dec
push
jb
jp
test
mov
xlat
mov
out
jns
adc
lahf
xor
lahf
jecxz
dec
sub
int
and
test
dec
loope
pop
jbe
and
lods
cltd
ficompl
add
cmpsb
mov
inc
pop
fcompl
sub
jne
mov
mov
fsubp
sub
insl
les
icebp
aaa
addr16
cs
pop
and
cmp
shl
dec
movsb
sbb
push
push
mov
fwait
lret
xchg
and
xchg
fbld
sub
mov
push
mov
stc
sub
adc
sbb
inc
xchg
sub
mov
cmp
push
mov
pop
xchg
shrl
xchg
es
xchg
stc
lods
mov
fstpt
adcb
pop
int3
dec
push
dec
lock
jl
jl
add
xor
mov
dec
pop
cltd
dec
pop
adc
mov
cmc
pop
jle
lret
in
jbe
push
scas
xchg
jno
jb
imul
pop
loop
nop
mov
pop
rep
repnz
mov
enter
loope
dec
mov
xor
push
dec
adcb
fisttpl
mov
clc
xchg
and
pop
adc
std
fnstenv
je
dec
push
mov
or
jae
stc
int3
ss
into
xorl
or
dec
xchg
mulb
mov
sbb
psrld
pop
ljmp
mov
ljmp
xchg
mov
and
xorb
or
pop
out
sub
fdivrs
mov
lea
sbb
in
push
repnz
outsb
push
loop
adc
jns
push
lods
jns
mov
in
insl
mov
out
ljmp
sub
pop
rclb
testl
pusha
sub
xorl
sbb
add
xor
inc
jl
ret
or
push
inc
repz
jnp
push
popa
imull
fwait
jmp
ja
lods
call
pop
imul
sub
sbb
or
pop
jp
pop
fwait
mov
jge
xchg
movsb
xchg
sub
aaa
xchg
shl
jo
lods
aam
sti
fs
imul
lcall
sub
pop
in
into
subb
pop
stc
cmp
adc
fs
mov
sahf
cs
mov
xor
shlb
inc
mov
pushf
imull
hlt
xchg
leave
push
fwait
sub
mov
xor
bound
sbb
mov
lock
and
or
xchg
movsb
jae
mov
ror
in
repnz
stc
mov
dec
int
push
mov
mov
mov
scas
and
jo
inc
xor
leave
push
int3
lret
push
push
fiaddl
fistpll
imul
jp
mov
sbb
fdivrs
jle
shlb
loopne
xchg
fldl
pop
jne
bound
and
xor
ds
push
xor
sbb
decl
aad
adc
mov
mov
mov
sbb
jo
jno
inc
into
fsubp
mov
dec
test
rolb
mov
pop
cs
push
int
ds
xchg
or
add
jne
dec
into
pop
pop
xorl
arpl
pop
movsb
inc
into
mov
mov
out
out
xor
data16
xlat
push
das
mov
add
data16
push
or
jg
push
leave
cmp
xorl
or
mov
fwait
cmp
push
inc
push
and
scas
enter
pop
xor
cmpsl
dec
hlt
ret
in
dec
mov
and
repz
sahf
loope
xchg
in
outsb
jno
lret
mov
inc
jnp
mov
xor
test
sbb
jo
pop
add
int
imul
sub
int3
jb
push
ror
mov
call
push
push
repz
lret
cmpsl
fldt
mov
xchg
fdivl
sub
rcrl
sub
pop
lret
xchg
inc
fmull
addr16
mov
fs
popa
hlt
push
pusha
sub
inc
dec
test
cli
roll
cmpsb
mov
pusha
adc
insb
lods
ret
movl
in
add
lods
std
aad
pop
xchg
sbb
shrb
push
stc
mov
insb
hlt
fbld
fdivrl
lds
cwtl
add
cs
fsubs
popa
mov
push
xor
dec
dec
out
xchg
fwait
xlat
ss
dec
in
jb
sbb
mov
fisttpll
cmp
shl
sar
xor
xor
and
adc
xor
aad
movsl
ficomps
outsl
frstor
dec
cmp
sub
test
adc
out
repnz
lret
aam
xchg
cwtl
fs
xchg
lods
pop
xchg
xchg
js
lcall
mov
gs
dec
in
mov
sub
jecxz
dec
std
hlt
shrl
adc
pop
ds
jp
imulb
in
jmp
out
fs
xchg
xlat
jns
mov
and
jbe
mov
push
adc
lods
inc
sbb
fabs
inc
mov
fimull
js
pop
mov
cmp
fsub
cmp
pop
add
imul
fs
cld
gs
movsl
fisubl
mov
sbb
outsb
into
xchg
mov
cltd
call
mov
mov
push
sub
scas
push
push
fisubl
sbb
mov
jp
iret
das
into
mov
mov
jbe
addl
jns
lahf
push
stos
cs
mov
sbb
mov
push
mov
cmp
test
test
into
jns
lods
and
sti
sbb
faddl
lods
inc
or
dec
clc
sbb
jb
xor
xlat
jae
pop
lcall
ror
das
gs
arpl
lahf
dec
call
stos
pop
sub
jo
xlat
sub
rclb
arpl
xor
add
jp
cwtl
add
fwait
cmp
push
add
loope
mov
or
cmp
js
cmpsb
dec
aas
add
pop
xlat
push
lret
or
pop
mov
out
sub
adc
hlt
popf
mov
bound
in
iret
jno
aad
jae
push
ret
mov
mov
dec
scas
jg
loop
or
into
movsl
or
sbb
aam
stc
push
repnz
lret
jg
pop
adc
jge
rolb
jbe
mov
sbb
repnz
sub
mov
and
adc
mov
jp
xchg
cli
xchg
mov
popf
in
pop
mov
popf
jp
push
add
mov
cmp
sti
jns
ja
add
lcall
rorb
fisubl
in
das
out
cli
out
jle
add
push
or
dec
jnp
insb
push
xchg
aas
nop
lods
ffree
push
movsl
enter
add
jo
pop
lahf
mov
xchg
push
test
sub
data16
jge
pop
enter
out
push
mov
inc
jo
aaa
les
cld
fs
cwtl
mov
fmuls
aad
mov
push
cmp
clc
stc
test
mov
negl
es
loop
push
or
mov
mov
xor
add
pop
pop
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
pushl
push
pushl
push
push
push
pushl
call
jmp
movl
adc
mov
addl
jmp
into
or
jg
fildll
dec
mov
xor
or
pop
bound
jmp
aad
cltd
scas
cli
outsb
cmp
push
and
pop
adc
or
popa
roll
dec
stos
sbb
push
push
cmpsb
sbb
cmp
lock
lahf
fcmovnb
push
cmp
xsha256
cmpsb
aad
fstl
js
clc
cmpsl
add
mov
loop
sub
loope
loope
into
add
mov
adcl
jmp
push
sahf
arpl
arpl
push
xchg
xchg
mov
ss
daa
fisttpl
ror
nop
push
jo
xor
push
pushf
lds
mov
mov
inc
cmp
xorl
sub
jb
or
adc
test
dec
dec
das
dec
sbb
fbld
jle
mov
shl
mov
xor
cli
scas
inc
inc
and
cli
add
stos
mov
push
xchg
or
xor
sbb
mov
lret
mov
push
mov
sub
inc
test
pop
imul
jp
sti
mov
arpl
cmp
adc
adc
cmpsl
mov
fisttpl
aas
jp
test
mov
add
data16
sub
inc
outsb
frstor
mov
mov
ficoml
jecxz
frstor
bound
stos
xor
cmp
fisubrl
pusha
test
inc
scas
xchg
inc
jbe
and
xchg
mov
pop
push
popa
add
stos
test
mov
sub
dec
nop
test
vmovss
cmp
pop
test
in
aas
fs
push
pop
cli
int
push
shlb
or
push
mov
or
or
jo
adc
loopne
lds
icebp
push
loopne
dec
add
jb
lds
adcl
insl
and
pop
aas
or
add
mov
inc
shll
mov
mov
push
test
notl
xor
mov
xchg
push
cmp
arpl
pop
push
and
xor
xchg
adc
jae
ficoms
or
jno
in
insl
in
ss
pop
xor
or
and
in
aas
jbe
push
ffreep
inc
cmp
pop
or
or
adc
dec
or
ret
adc
pop
sub
cmpsb
jp
ja
push
cmpsb
mov
sbb
sbb
stos
fs
push
mov
jnp
rorl
xlat
movsl
pop
aas
test
test
fwait
loope
mov
push
lret
pop
mov
mov
inc
lret
inc
test
or
das
repz
mov
lret
cld
stc
cmc
mov
cmc
sbb
int3
cmp
mov
rorb
sub
jno
out
in
xor
jne
aaa
rclb
inc
sti
in
in
shlb
and
imul
xor
fcomi
dec
insb
in
mov
addb
popa
lcall
mov
ret
repnz
stos
pop
sub
in
adc
arpl
outsb
stos
sub
mov
mov
dec
jnp
mov
sub
jo
pushf
dec
cmc
lods
ret
push
int3
std
mov
mov
jae
add
lret
test
xchg
ds
outsl
cmp
or
stos
outsl
xchg
mov
jle
addr16
adc
xor
sbb
ret
xorl
mov
test
ds
mov
inc
xchg
ret
out
mov
loope
pop
mov
loope
cmp
push
adcl
push
clc
add
test
clc
je
pop
push
rolb
and
adc
xchg
test
int3
mov
jae
fnstsw
rorl
mov
mov
mov
push
mov
pop
scas
arpl
in
mov
cmp
repz
data16
sbb
sub
das
clc
mov
std
push
cld
mov
push
jo
xchg
adc
scas
and
clc
inc
dec
jmp
cltd
add
cs
xor
and
mov
jmp
lods
and
int3
rorl
pop
or
jge
push
mov
addr16
xor
jmp
adc
clc
ret
mov
or
jo
fisubrs
aaa
dec
jns
aaa
cmpb
push
lahf
xchg
adc
icebp
test
fs
scas
bound
int3
ret
rcr
mov
add
lock
mov
and
and
mov
test
sub
pmullw
push
pop
jno
or
mov
sbb
jno
jno
ss
xchg
shr
fisttpl
movsl
test
mov
mov
jne
cld
jae
addr16
aas
test
xchg
mov
xlat
scas
rcrl
jnp
inc
push
mov
xor
pop
fstpl
push
loop
add
jno
inc
inc
scas
xchg
mov
movsl
or
aas
stos
dec
data16
fs
add
inc
in
and
loop
sbb
mov
in
xchg
loop
les
xchg
lahf
sbb
mov
and
lods
cmpsl
fs
xorb
test
xchg
out
clc
jmp
into
ret
jl
fwait
cmp
repz
mov
xor
sub
out
push
mov
mov
ljmp
ljmp
sbb
jbe
dec
sub
xchg
scas
aaa
jmp
into
adcb
push
jge
mov
mov
jecxz
sbb
adc
loopne
mov
cwtl
out
incb
imul
loop
push
add
xchg
lock
mov
or
mov
jmp
mov
adc
jno
int
subb
mov
fisttpll
jecxz
sub
lock
mov
jns
test
mov
xor
into
movsl
je
enter
pop
jg
test
sti
pop
and
mov
add
cli
mov
pop
shlb
pmuludq
aam
cmp
jle
cmp
js
fwait
movsb
jno
pop
xchg
add
ja
out
mov
jae
mov
jecxz
sahf
xor
sbb
and
lret
sbb
pop
add
mov
xor
adc
shr
pop
xchg
jne
leave
shr
mov
dec
jg
sub
in
fisttpll
push
pop
insl
dec
std
mov
xorl
aad
movsb
ljmp
dec
out
clc
ds
push
lcall
pop
or
add
xchg
leave
sub
scas
jae
sub
js
xor
cli
pop
pop
outsb
pop
mov
pop
push
push
add
or
sub
mov
shll
cmp
push
lahf
fsubs
pop
icebp
xchg
dec
into
xorb
xor
push
inc
cli
mov
mov
dec
repnz
mov
xlat
movsb
std
sbb
mov
adc
movsl
shlb
cmc
inc
dec
fwait
int
add
xchg
push
pop
cmc
sub
mov
std
psadbw
mov
and
jnp
jge
cmp
lea
lods
call
loopne
sbb
stos
and
xchg
sbb
or
cmpsb
loopne
sbb
or
mov
icebp
movsl
cmp
mov
jbe
repz
outsb
mov
lea
scas
sti
mov
jo
mulb
cli
mov
mov
fistpl
dec
xor
xor
std
dec
jle
adc
repnz
scas
lock
mov
into
jns
sbb
enter
pop
jp
lds
push
mov
jo
out
fbstp
xor
dec
jle
std
push
push
jecxz
jg
xchg
xchg
sahf
jne
pop
imul
leave
in
dec
inc
mov
ss
sbb
icebp
push
ljmp
inc
mov
pop
cmp
inc
aad
shll
scas
les
inc
es
ja
and
dec
mov
sbb
pop
js
into
test
inc
icebp
jns
notl
dec
cld
mov
ja
add
dec
pop
in
add
stc
xchg
cwtl
mov
rorb
sub
sub
movsl
xor
sbb
test
sub
jns
inc
and
xchg
xchg
mov
mov
add
pop
push
push
mov
pop
fisubrl
jecxz
or
sbb
cld
test
shll
loop
inc
jl
ss
lea
dec
orl
xchg
sbb
std
sub
mov
inc
aam
mov
or
push
call
push
cltd
xchg
in
cmp
and
inc
sub
cmp
xor
adc
fstps
ss
movl
or
pop
mov
xlat
dec
test
test
add
xlat
lcall
gs
dec
jne
jge
in
insb
push
xchg
lret
lret
dec
or
push
dec
cmp
mov
cmp
dec
lcall
jns
ret
fisubl
inc
dec
mov
out
arpl
jmp
sub
popf
movb
sub
cmpsl
and
shlb
jp
jmp
pop
add
xlat
stc
jecxz
mov
mov
stos
jle
fdivl
fbstp
jge
fs
scas
lods
adc
insb
cld
add
rolb
jae
jns
mov
jle
push
imul
xchg
xchg
pop
les
pop
and
cld
dec
mov
aad
dec
sbb
and
pusha
mov
movsl
xor
mov
sbb
stos
das
test
jne
pop
xchg
jnp
sbbb
mov
adc
or
jp
mov
jo
xor
mov
pop
inc
cmpsl
push
test
cmpsb
pop
mov
mov
push
xor
ret
push
cmp
repnz
inc
xchg
vmovlps
scas
or
jo
mov
lcall
xchg
adc
cmpsl
fisttpll
lcall
pop
and
dec
and
lcall
mov
and
bound
enter
jmp
movsb
inc
mov
bound
xor
ret
jae
and
dec
inc
sub
and
push
push
xchg
cld
repnz
repz
sbb
fldenv
outsl
sahf
outsl
cli
dec
fisubrl
mov
insb
add
push
lret
mov
sbb
stos
js
sbb
xchg
sbb
out
iret
add
popf
mov
xchg
push
mulb
sahf
jo
mov
xor
out
and
lods
jno
sub
mov
and
mov
mov
nop
dec
shrb
ljmp
dec
jg
out
jns
in
add
cmp
rolb
jle
push
scas
xor
inc
repz
cld
pop
xor
sbb
pushf
sahf
sbb
cmp
mov
test
cwtl
mov
mov
lds
push
dec
shrb
cmpsl
inc
and
sahf
stos
std
xor
addl
addr16
xor
paddusw
jo
bound
and
pop
shrb
jg
jl
sarl
sbb
out
idivl
adc
ja
mov
mov
ljmp
shll
adcl
mov
scas
nop
testl
jbe
cmp
out
cmp
mov
add
outsl
cmp
or
shrb
enter
insb
js
cltd
es
cs
rcl
mov
test
sbb
aaa
sbb
xchg
inc
pop
loopne
cltd
stos
or
mov
adc
call
out
mov
lret
adc
jle
popf
mov
sbb
insb
sbb
sbb
fmulp
adc
inc
les
add
cli
jbe
xchg
and
loop
fistpll
aas
ret
test
movsl
dec
imul
lret
scas
xchg
test
adc
rorb
xchg
mov
add
xor
pop
fsubrp
add
lcall
add
scas
scas
imul
and
fs
push
js
adc
out
xor
call
lret
lahf
cltd
es
fldenv
or
xor
mov
jb
insb
cmp
jp
sub
jne
xor
xchg
cwtl
ret
jae
pop
loope
cmp
dec
inc
sub
jae
add
je
dec
popa
inc
inc
test
fstp
repz
push
fcmovb
push
and
repnz
jne
xor
jae
out
data16
sar
jmp
push
pop
or
sbb
add
imul
or
jne
cld
ja
push
pop
enter
dec
push
and
jbe
loope
sbb
mov
dec
fdivs
les
dec
sub
dec
sbb
icebp
stos
bound
adc
dec
shl
clc
push
mov
xchg
add
out
xchg
mov
jp
push
mov
outsl
lret
fisttpl
dec
lret
lock
xchg
add
mov
dec
mov
xor
push
pop
sbb
shl
mov
shrb
fbstp
pop
dec
jnp
push
adc
shl
cmp
xor
mov
lds
jmp
mov
cmp
xorl
mov
sti
jg
xchg
testl
push
or
lds
sahf
dec
inc
push
cmp
ret
cmp
sbb
ds
cli
dec
shrb
jmp
clc
imul
notl
or
add
cmpl
aad
or
cmpl
jo
dec
leave
mov
jae
rolb
push
cld
lcall
je
sub
nop
pop
pop
sbb
shrb
and
cli
sub
aam
dec
dec
mov
ss
jmp
sub
mov
pop
add
push
icebp
adc
sbb
push
pushf
in
mov
stc
mov
mov
jmp
idivl
insb
dec
arpl
xor
movsb
mov
pop
push
mov
loopne
stos
xchg
sahf
loopne
xlat
or
inc
or
sbb
add
in
or
jp
mov
mov
cmp
gs
ret
fxch
mov
push
out
adc
or
pusha
loopne
fldcw
jmp
pop
push
movsl
in
dec
xchg
orb
pop
aam
loopne
push
daa
pop
jno
fdivs
insl
ljmp
sti
popf
es
sub
adc
push
add
xchg
out
ss
cmp
push
arpl
pop
jge
mov
or
xchg
stc
ffree
mov
jb
popf
loope
ss
aam
mov
mov
sbb
fwait
enter
sub
outsl
cmp
dec
push
adc
rcll
pop
addl
test
mov
jge
or
lahf
add
xor
sti
lcall
jle
sbb
jae
into
jge
jae
fwait
dec
jo
cmpsb
xor
push
pop
aas
xor
pop
mov
cwtl
arpl
mov
mov
inc
jl
and
mov
out
rorb
fsubl
add
add
mov
sub
inc
cld
xchg
fnsave
out
outsb
xor
sub
mov
fstpl
mov
xlat
or
cmp
jp
sub
mov
push
push
lret
in
repz
inc
or
dec
mov
jmp
mov
push
ret
jnp
sbb
and
pop
gs
sbb
push
mov
xchg
mov
add
cmp
add
sbb
mov
sbb
push
repz
sub
push
fstl
cmpsl
dec
mov
xchg
xor
ret
add
lods
add
ss
arpl
lret
mov
in
mov
fcoms
fdivp
test
mov
dec
add
xchg
inc
clc
adc
movsl
xor
ja
movsl
ja
push
cmp
test
push
into
out
xorb
mov
adc
mov
pop
fsubs
repz
test
sbb
int
and
fabs
ds
test
mov
and
out
arpl
int3
xchg
cmp
xlat
adc
or
adcb
mov
insb
ds
rorl
sbb
ja
movl
leave
mov
nop
pop
and
push
ret
loope
rolb
stc
push
data16
test
in
push
fs
pop
aas
sub
inc
daa
test
pop
add
inc
xchg
xchg
inc
out
mov
xchg
cmc
xchg
pop
aad
or
inc
popa
sti
push
mov
mov
mov
rcrl
aad
fisttps
ficomps
mov
jne
clc
scas
les
pop
in
enter
push
repz
out
add
inc
pop
jb
xor
mov
shlb
mov
and
fists
pcmpeqw
xchg
mov
imul
stos
fmuls
mov
jmp
arpl
adc
mov
mov
xchg
stos
jge
aad
lods
arpl
adc
mov
mov
push
pop
and
mov
outsl
leave
dec
in
sub
ja
aad
dec
cmc
setl
or
mov
sti
adc
inc
push
pop
add
adc
stos
sub
out
leave
mov
rclb
sub
add
add
inc
data16
fidivrl
mov
mov
test
in
and
push
dec
idivl
mov
mov
iret
inc
inc
out
jle
cld
adc
frstor
push
sbb
mov
mov
lcall
and
arpl
ds
mov
mov
mov
add
movsb
js
or
or
mov
mov
daa
cmp
aaa
call
stc
in
push
mov
out
push
mov
xchg
jnp
jno
inc
add
jl
xor
sub
sub
sub
lds
and
divl
pushf
cmp
pop
testb
sub
sub
mov
fcmovne
lret
lcall
inc
dec
add
inc
ds
repnz
loope
enter
pop
test
fadds
cmp
lahf
pusha
sbb
test
xchg
repnz
xor
add
pop
sub
andl
into
test
inc
xor
sub
ss
add
sub
aad
insl
lahf
stos
das
enter
cmp
cmp
dec
mov
cmpsb
sub
roll
dec
push
cmpsl
fldcw
adc
sbb
pop
jnp
pop
sub
out
adc
pop
mov
mov
scas
es
push
push
int
sbb
aas
out
pop
xor
sbb
sbb
mov
stc
int
shrl
jbe
pop
push
aas
in
xchg
sbb
out
in
repz
jl
out
dec
adc
scas
dec
icebp
pop
out
cmpsl
ds
pop
fwait
sbb
pop
xor
sbb
adc
scas
gs
xor
inc
out
adc
test
add
insb
sbb
fwait
ss
int
movsl
lahf
cld
dec
mov
add
xchg
jp
mov
mov
add
mov
push
mov
inc
imul
inc
lods
and
fistl
dec
or
add
or
adc
xchg
popa
pop
fldenv
rcll
mov
inc
sti
jnp
out
jp
sti
stos
arpl
jns
pushf
cmp
out
dec
outsl
int
out
shll
adc
test
loopne
inc
sahf
mov
xor
rclb
lahf
enter
jg
jo
or
sbb
mov
gs
add
jge
adc
cmp
into
lock
cli
cmp
sub
lods
pushf
jnp
mov
sub
inc
dec
and
jg
dec
movb
mov
out
and
stos
lcall
jb
stos
mov
repz
jmp
cwtl
imul
stos
out
jno
cs
sub
inc
sub
inc
lcall
dec
ss
mov
aas
dec
cs
inc
xor
aam
jne
cmp
int
popa
insb
imul
sub
jnp
inc
sub
cmp
mov
js
push
xor
xor
popa
mov
adc
je
sbb
and
sub
mov
xor
mov
lds
loope
inc
es
mov
pusha
jnp
hlt
popa
adc
pop
test
sbb
mov
inc
cmc
aam
mov
xchg
adc
jnp
mov
cmpsl
mov
sbb
sbb
ds
jg
cmp
pop
scas
mov
int3
mov
lods
fdivrl
sbb
jb
test
jg
jle
sub
pop
push
loopne
mov
push
insl
push
insl
test
and
test
pop
or
inc
inc
and
add
pop
xchg
es
test
leave
filds
dec
xor
dec
push
sbbl
mov
imull
cmc
jbe
shll
arpl
repz
cmp
mov
and
and
iret
push
aaa
nop
cmp
cltd
sahf
mov
xchg
jmp
std
int3
js
pop
cmp
sbb
sahf
add
push
scas
mov
xchg
imul
jb
dec
mov
push
clc
cs
push
push
pop
or
add
adc
js
mov
jnp
popf
push
js
mov
xchg
int3
movsl
xchg
fildll
test
cld
call
sub
sbb
xchg
bound
div
xchg
mov
xor
mov
test
adc
or
out
push
pop
xor
xchg
sbb
mov
ret
mov
aas
decl
jns
mov
cli
enter
shlb
jg
loop
shl
pop
jle
lock
adc
nop
jb
and
jo
push
mov
aad
mov
lret
dec
mov
mov
xchg
gs
mov
out
mov
push
and
imul
xchg
or
ds
aam
xor
xchg
imul
sub
and
mov
fidivrl
adc
or
xchg
inc
adc
es
xchg
in
lods
pop
and
mov
mov
jbe
movsb
sbb
dec
lret
shl
popw
mov
call
dec
dec
scas
xchg
fcomp
jg
insl
jg
fildl
mov
pop
pushf
insl
scas
cmp
cmp
cwtl
sarl
jecxz
pop
jmp
lock
push
sbbl
cli
sub
cmp
les
gs
test
movsl
mov
mov
shlb
repz
mov
fists
outsb
push
sbb
jne
sub
sbbl
mov
je
cli
cmp
out
cmc
dec
add
sahf
rcrb
mov
and
pushf
outsl
cs
mov
dec
imul
sub
dec
sti
add
loopne
notb
jecxz
iret
ljmp
dec
mov
out
fnsave
adc
mov
add
ja
fiaddl
cmpsb
dec
iret
int3
mov
enter
xchg
push
pop
cld
or
pop
scas
bound
jbe
push
shr
or
fldenv
or
xchg
movsl
mov
mov
jl
lahf
fwait
push
pushf
push
mov
rol
mov
inc
adc
mov
std
mov
call
xchg
add
mov
stc
popf
fwait
sub
pushf
pop
jnp
sbb
add
adc
js
loopne
scas
fs
push
xor
inc
xor
stos
in
cli
lea
jns
loop
adc
and
lods
xorb
je
pop
adc
mov
int3
sub
xor
aas
sbb
les
inc
fwait
xor
ds
and
pushf
and
xchg
push
jmp
cltd
fucomi
out
nop
mov
dec
fadds
jle
cmp
xchg
cmpsl
mov
inc
mov
pop
or
movsl
mov
add
pavgb
icebp
jnp
mov
or
adc
test
add
ret
int
cmc
lds
out
inc
shrl
repnz
add
add
ljmp
xchg
xor
es
popf
adc
ror
mov
jge
je
adc
imul
mov
push
icebp
loop
and
outsb
mov
add
adc
scas
mov
stos
mov
arpl
jo
mov
gs
lds
push
inc
dec
xchg
add
lret
repz
andb
lds
cmp
sar
mov
mov
xchg
add
adc
int
push
aam
push
jmp
add
inc
aad
mov
push
mov
data16
imul
fisttps
das
rcrb
movsb
fmuls
xchg
mov
jbe
mov
mov
addr16
xchg
xchg
aam
hlt
adc
dec
aad
xor
insl
pusha
inc
ret
fwait
sub
loop
mov
pop
roll
enter
lahf
cmpsl
jo
lods
xchg
pop
cld
ljmp
mov
int3
inc
subl
notb
scas
or
jnp
call
addb
adc
and
inc
inc
sbb
test
jge
pop
mov
sbb
sub
lahf
movl
ss
fnstsw
sbb
into
stos
push
xchg
bound
cld
lret
pusha
add
pop
testb
loope
sub
xchg
ljmp
xor
lea
push
pop
lcall
cmpsb
lock
int3
cmc
int3
bound
mov
or
lcall
and
div
pop
push
cld
shl
addr16
lock
pop
inc
pop
shrb
inc
cmpsb
adc
sbb
jg
rorl
les
addr16
fnop
dec
cmp
xorl
pop
fdivrs
stos
mov
ljmp
sbb
repz
insb
push
pop
cwtl
loopne
iret
out
fldenv
jbe
mov
les
jge
xchg
xchg
xor
jle
es
xlat
add
lds
mov
mov
lea
lahf
cmp
movsb
jp
fistl
arpl
add
mov
or
pop
loope
or
cmp
sarb
lods
cmpsl
and
mov
sub
fld
fisubrl
and
hlt
adc
iret
leave
fdiv
cmp
xchg
inc
pop
cld
pop
arpl
push
jnp
lods
pusha
mov
sub
xchg
add
mov
nop
or
mov
imul
repnz
jne
pushf
pop
push
fldt
mov
rcll
dec
inc
rcrl
push
push
inc
sub
lahf
lret
mov
xor
jb
jl
iret
adc
fcomps
loopne
jnp
in
cmc
inc
leave
sbb
ret
mov
or
int3
dec
mov
mov
lret
popf
insl
dec
sbb
fidivs
les
inc
dec
fwait
dec
mov
mov
sahf
enter
or
sti
inc
aad
adc
std
pop
fbstp
notl
rolb
adc
add
dec
mov
inc
lret
stos
xor
xchg
adcb
leave
inc
call
not
push
ljmp
inc
in
adcl
std
daa
fs
jbe
push
cmp
inc
mov
js
mov
push
mov
push
mov
je
adc
pushf
pop
dec
inc
ja
test
fnstcw
push
in
sub
mov
ja
push
pop
and
cmp
testl
adc
cmp
popa
xor
rorl
stos
sbb
adc
daa
jecxz
and
xlat
loop
mov
lret
jg
push
scas
mov
out
sub
push
xor
jle
and
mov
fcmovnb
popa
cmc
cs
and
arpl
jmp
rclb
fisttps
dec
mov
sub
xor
out
lds
inc
cmpsb
push
ss
cmpsb
xchg
push
pop
or
inc
rcll
dec
mov
jns
roll
rcll
lods
aas
mov
aas
jge
int
leave
push
sub
mov
push
es
jg
adc
jecxz
nop
mov
lea
xchg
js
adc
daa
xchg
mov
test
nop
jp
enter
insb
rolb
add
mov
rcrb
into
push
faddl
mov
add
push
jle
call
fiaddl
ss
daa
loope
pop
dec
inc
dec
mov
out
test
lea
ja
pop
cmp
movsl
inc
mov
mov
sub
outsb
insl
dec
fisttpl
sbb
mov
scas
fdivrl
mov
cld
push
inc
adc
push
mov
mov
jmp
mov
in
dec
push
mov
xor
mov
xor
and
jns
dec
or
outsl
subl
mov
fs
and
decb
mov
xor
mov
sbb
inc
loop
enter
data16
or
xchg
aas
loope
add
movsl
dec
pop
xchg
les
pop
mov
rcrb
leave
push
cltd
in
ss
lret
xor
sub
cmp
push
pop
popa
push
add
inc
mov
push
and
int
push
data16
push
aad
xor
xchg
xlat
xchg
in
stos
pusha
data16
je
fcomp
shlb
fwait
jbe
mov
sbb
jl
arpl
lahf
cmpsb
es
and
xor
int3
mov
mov
enter
jne
and
test
push
xlat
jno
in
adc
lahf
dec
jne
mov
les
cli
mov
loopne
fisttpll
jg
or
pop
add
insl
cmpsl
sti
sub
and
adc
mov
jne
aaa
pop
lret
xor
jno
cli
mov
mov
add
or
or
dec
jmp
loopne
xchg
hlt
lea
dec
cmc
gs
pop
testl
mov
add
dec
xor
sbb
mov
std
xor
aad
out
daa
movsb
mov
or
jnp
dec
mov
xor
imul
ret
pop
dec
push
mov
cld
js
fwait
aas
out
pop
xor
and
rclb
pusha
repnz
jne
test
or
sbb
push
cmc
cli
add
inc
loopne
lret
lahf
cmc
test
adc
int
xlat
nop
pop
loopne
mov
lock
adc
fimuls
je
fsubs
pop
and
mov
sub
pop
fwait
insb
sbb
dec
out
add
pop
inc
mov
gs
stc
mov
leave
xor
hlt
sub
xchg
mov
push
dec
leave
pop
popf
sub
testl
stos
insl
imul
stc
iret
add
push
dec
xchg
and
xorb
jg
outsl
mov
hlt
shrl
mov
inc
shrl
in
push
xchg
and
dec
js
lds
enter
nop
nop
fists
jmp
test
dec
and
and
pop
fldcw
jle
popa
aad
xchg
sbb
pusha
stc
ficomps
dec
push
sub
cmc
xchg
movsb
push
lea
push
xchg
dec
add
ficoml
dec
push
mov
lock
push
xchg
jae
adc
jge
sub
or
pop
add
sqrtps
aad
pop
dec
mov
push
push
test
test
out
or
mov
imul
add
adc
mov
aaa
cltd
push
ljmp
push
mov
mov
sbb
push
mov
mov
addl
add
xorl
xor
movl
cmp
jne
mov
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
push
movl
cmpl
je
cmpl
jne
pushl
push
push
call
xor
add
dec
mov
jmp
movl
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
movl
mov
add
push
mov
xor
add
sub
and
mov
addl
mov
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
jmp
mov
subl
mov
inc
decl
std
and
int
bound
aam
mov
mov
lret
lret
fidivrl
mov
dec
and
stos
mov
imul
inc
ret
jo
mov
insl
popf
jecxz
roll
and
les
or
fisttps
push
es
xor
push
pusha
mov
jno
push
call
sub
inc
mov
cli
mov
inc
mov
lahf
jae
jnp
push
lret
xor
int
loop
cmp
lods
cmpsb
and
mov
xor
int3
in
adc
ret
add
mov
mov
inc
mov
inc
test
adc
cmpl
and
pop
jo
lods
sbb
movsb
adc
adc
cmp
jmp
cli
std
fdivs
pop
ljmp
sub
mov
mov
pop
testl
pop
jb
cmpsb
pop
inc
leave
pop
pop
adc
insl
rorb
xchg
lret
mov
xlat
ficoms
dec
arpl
inc
mov
sahf
or
jne
xchg
test
inc
imul
fs
cmp
pushf
xlat
jnp
out
aam
stc
cmp
stc
jle
lahf
ret
and
xchg
dec
fistps
enter
loopne
inc
xor
pop
push
cmp
xlat
pop
fcomp
call
enter
add
mov
inc
lcall
add
movsb
and
cmp
loop
lret
lea
jae
jge
jecxz,pn
mov
pop
movsb
imul
sub
push
ljmp
lds
es
paddb
jae
adc
mov
mov
sarl
ficoms
jae
sarb
push
inc
int3
push
xor
insl
lcall
lea
inc
pop
or
xchg
xor
mov
xor
add
jnp
pop
dec
shl
pop
out
lret
mov
mov
mov
jg
push
cs
push
jle
push
and
pop
jbe
xor
push
insl
aaa
test
add
repnz
mov
or
jl
in
cmc
aam
or
dec
nop
sub
dec
cmp
pop
xlat
popa
adc
add
sbb
mov
jmp
ret
and
xchg
pop
insb
mov
sbb
mov
cmp
ds
in
cltd
jg
jmp
das
sbb
xlat
lock
jl
sbb
add
clc
ja
lcall
rcrl
inc
fsubp
push
outsb
or
mov
mov
mov
aaa
clc
adc
repz
add
mov
cmp
and
ret
sub
add
out
dec
xchg
dec
inc
jl
inc
add
js
push
or
insl
jg
sub
xor
inc
stc
sarb
sbb
add
divb
or
cwtl
mov
push
sub
arpl
into
fcoml
call
in
push
insb
xchg
xor
xchg
dec
shlb
fisubs
sub
lret
push
push
testl
flds
movsl
into
inc
jle
inc
xor
inc
jp
xchg
xchg
fildl
loopne
ds
fcoml
add
mov
lcall
lods
mov
ja
fs
sub
push
jnp
pop
jl
or
cs
mov
jnp
lea
bound
aad
in
or
xchg
fs
cli
mov
mov
sbb
push
int3
sti
ss
sbb
in
fucomp
mov
cld
xor
dec
scas
or
imul
fistpl
lret
cmpsl
or
dec
xchg
rorb
int
pop
push
call
jbe
shl
imul
jg
sub
in
rcrl
sub
xor
lret
or
je
push
in
or
cmp
andb
or
mov
xchg
scas
adc
cmp
loop
std
mov
jl
mov
pop
jb
cmpsl
adc
das
imul
std
dec
xchg
dec
xor
jl
mov
faddl
xor
outsl
js
sarb
pop
out
and
js
xchg
iret
pop
insb
mov
cmc
cld
mov
mov
cld
sbb
sub
cmp
jle
cmp
pop
into
mov
mov
jge
es
xchg
push
xchg
pop
lds
cmp
insb
loop
jl
adc
push
je
lock
fcmovnbe
pop
fbstp
inc
sub
cld
mov
xor
cmp
push
scas
out
and
ljmp
lods
inc
inc
ljmp
sbb
sbb
sahf
mov
fnstcw
imul
setne
pop
bswap
fdivl
xchg
lret
xor
xor
test
push
adc
xor
xor
mov
repnz
add
icebp
or
push
cmp
cs
cld
or
out
mulb
das
es
push
shr
outsb
lret
movl
pop
movsb
xchg
repz
sahf
jl
in
and
dec
sub
inc
nop
sub
add
test
int3
push
shll
xchg
push
mov
mov
mov
push
imul
lea
in
dec
fsts
inc
cmc
xchg
movsl
mov
idivb
dec
xchg
repnz
lret
and
lods
fsubr
ja
imul
mov
jne
jns
mov
pushf
xor
push
stc
hlt
es
int
pop
push
or
adc
loop
mov
lds
jnp
enter
insb
popf
xor
ror
cmc
xor
mov
add
push
and
xor
shll
add
inc
popf
das
xchg
push
mov
add
xor
test
dec
xchg
mov
mov
in
sbb
movsb
adcb
xchg
xchg
movsb
dec
inc
xlat
cmpsl
lock
iret
push
inc
and
mov
sbbb
inc
lret
lahf
shrb
xchg
pop
mov
pop
rclb
out
ds
xor
sub
fchs
lcall
sub
mov
jbe
xor
popa
or
xchg
dec
xchg
or
test
cmp
mov
movsb
dec
ss
jb
cmp
jmp
in
dec
enter
test
dec
cltd
out
leave
jp
sub
or
cmp
pop
sub
test
es
push
cmpsb
inc
mov
adc
mov
aaa
notb
fdivl
lds
dec
out
jnp
imul
add
sbb
jle
mov
aaa
mov
mov
mov
cmpsb
test
test
int3
push
or
jae
xchg
cmpsl
push
out
lret
loope
pop
mov
aaa
cmp
test
dec
jecxz
push
out
pop
loope
lret
cmc
ret
dec
or
imul
sub
scas
lahf
lods
xchg
outsb
adc
int3
mov
or
jge
fidivrl
mov
mov
lcall
push
push
aad
push
pop
rolb
add
mov
into
lds
pop
xchg
dec
mov
and
pop
adc
push
add
cld
or
jb
mov
jg
jl
sti
inc
mov
jl
mov
ss
scas
js
pop
rcrl
jmp
mov
clc
fildll
inc
fnstcw
push
insb
or
and
mov
shrw
aaa
test
dec
popf
push
cmp
dec
cmpsb
outsl
cmpsl
pop
into
adc
test
neg
sbb
ss
xor
sbb
outsl
mov
mov
xor
movsl
lea
jnp
mov
fisubrs
jnp
xchg
dec
dec
int3
sub
das
jne
ja
and
push
adc
xchg
sbb
add
cld
xchg
cmp
shll
test
lock
int3
sub
jae
sbb
push
test
cmpsb
mov
dec
in
mov
and
stos
outsl
rcr
sti
cmp
xchg
scas
insl
js
imul
loopne
out
dec
cmp
push
dec
out
jmp
push
dec
sub
adc
sbb
mov
push
sarb
adc
xchg
ja
pop
gs
mov
jae
mov
jge
outsb
pop
xchg
push
lcall
add
cmp
adc
pop
add
scas
out
xor
jae
push
push
or
mov
mov
pop
xor
aad
add
mov
xchg
in
lahf
call
fidivrl
repz
lods
jb
mov
mov
addl
lret
popa
call
hlt
sbb
sub
jge
mov
mov
adcb
frstor
outsb
fs
in
xchg
mov
add
cld
mov
lcall
jns
pusha
inc
cmpsl
movb
push
ss
insl
ss
mov
sarb
jae
xchg
mov
xchg
test
pop
push
mov
shl
jecxz
pop
out
and
push
mov
mov
mov
mov
sti
cmc
out
ja
push
push
hlt
inc
in
inc
dec
cmp
ja
push
neg
xor
or
jle
cmp
or
dec
adc
pop
out
inc
rolb
movhps
mov
je
call
dec
jle
into
push
sbb
adc
fsubl
xchg
jns
lock
jg
and
add
add
das
or
outsb
pop
fmull
stc
ja
push
hlt
shrb
mov
int3
outsb
lock
jg
sbb
push
repnz
inc
adc
sub
jb
lcall
inc
pop
test
lret
mov
push
xor
and
arpl
adc
ljmp
repnz
dec
out
icebp
fidivrl
and
mov
adc
jns
test
std
out
iret
ljmp
movsb
inc
xchg
xor
lds
scas
data16
js
fs
movsl
mov
push
out
loopne
jns
js
loop
pushf
repnz
dec
sub
jns
mov
popf
mov
sub
rcrl
aaa
sub
xchg
adc
movsl
out
loopne
stos
sbbl
add
cmc
dec
mov
iret
mov
xor
rorl
xor
push
xchg
push
mov
push
cwtl
jns
push
pop
addr16
inc
dec
pop
ja
mov
lock
aaa
adc
push
insb
cmp
repz
inc
pop
mov
add
dec
push
outsb
outsl
or
dec
ds
out
outsl
pop
aas
sbb
push
and
inc
repnz
mov
xlat
popa
mov
ret
mov
loop
pop
shrb
fildl
add
aam
andb
xor
and
enter
dec
aad
jns
fiadds
jne
mov
mov
sbb
loope
mov
ss
pop
shl
inc
loopne
test
jnp
imul
fimuls
jne
arpl
push
loop
fcmove
pop
xorb
popa
inc
gs
movsb
pusha
les
mov
xchg
int3
and
pop
aaa
loop
mov
sahf
push
adc
cmp
dec
and
mull
or
cmpsl
xchg
lods
xchg
ja
fiadds
cmp
inc
mov
shll
add
out
popf
inc
mov
cld
fcmovb
lds
jns
xor
sbb
daa
add
loop
inc
add
insb
lea
jmp
push
sti
rcll
mov
sbb
jl
lds
popf
gs
mov
and
xor
stos
push
jno
movsl
jge
repnz
push
cmp
jns
testb
rcr
sbb
ffree
enter
inc
mov
inc
mov
push
mov
popa
out
out
imul
mov
mov
cld
repnz
sub
orb
std
inc
cs
jo
fsubrp
lods
mov
xor
imul
into
mov
loope
loope
ficoml
xchg
add
jnp
push
in
in
mov
out
xchg
andl
ret
xchg
inc
lcall
imull
int
inc
fnsave
lcall
lret
jl
je
loopne
jg
lods
push
pop
insb
icebp
dec
inc
shll
test
adc
popa
cmp
inc
jae
inc
mov
iret
adc
nop
aad
mov
cwtl
cli
xchg
rolb
or
xor
sbb
inc
outsl
scas
out
pop
movsl
lds
mov
pop
dec
xchg
push
mov
adc
sti
gs
test
sbb
xchg
mov
insb
inc
or
jg,pn
imul
and
and
mov
xor
gs
ss
pop
jbe
fsub
pop
pop
pop
push
ret
fists
xor
popa
pusha
inc
push
in
push
fstpl
aam
in
mov
pop
clc
mov
aaa
adc
out
stc
jae
imul
imul
imul
push
push
outsb
push
rcrb
jno
stc
sub
jae
xor
leave
adc
xchg
inc
mov
movsl
add
lahf
test
pop
ljmp
jle
pop
and
sbb
lock
mov
lds
movsl
push
push
jmp
lds
test
dec
mov
push
sahf
mov
xor
and
icebp
adc
pop
or
mov
addb
imul
cmp
fisubrl
stos
fnstenv
movsb
add
dec
xor
xlat
xor
or
adc
adc
sbb
inc
imul
jg
sar
nop
sbb
fldcw
into
mov
xchg
sbb
xor
mov
std
fsubrs
xchg
mov
adc
aad
pop
pop
std
mov
notl
push
or
push
sub
xchg
cmpsl
bound
mov
push
cmpsb
repz
ja
lock
leave
mov
mov
adc
or
mov
out
je
xor
lds
push
mov
mov
clc
rolb
dec
push
imul
std
xchg
lcall
testl
or
add
ja
jg
rclb
sub
ja
sbb
leave
pop
inc
or
push
push
pop
or
lcall
add
and
ds
sbb
mov
mov
inc
jnp
add
fldenv
cmpsl
push
cmp
push
or
mov
loope
mov
jl
xchg
sbb
push
and
mov
scas
mov
push
cmp
xor
aam
fmuls
mov
jo
mov
stc
shrb
add
clc
mov
pop
push
aam
std
mov
cmpsl
loop
push
stos
add
xchg
cmp
call
outsb
sub
dec
into
mov
dec
dec
enter
pop
xchg
popf
mov
fs
pop
inc
jo
cs
or
mov
mov
mov
cmp
push
gs
xchg
loopne
add
and
cwtl
push
push
nop
test
iret
aam
movsb
dec
fwait
adc
mov
mov
aam
into
dec
cmpsl
mov
leave
cli
push
subl
icebp
xchg
jge
js
and
shll
xchg
mov
mov
adcb
rorl
sti
mov
pop
cmp
xchg
sub
xor
ds
leave
aas
ljmp
or
outsb
xchg
push
outsb
xchg
push
lahf
jmp
pop
imul
fcmovne
and
addb
call
out
jae
add
pop
int3
add
mov
loop
add
pop
mov
jge
cld
xor
inc
push
sub
dec
sub
aaa
int3
jnp
xchg
fsts
sub
out
push
sub
repz
inc
pop
je
dec
in
dec
outsb
out
pop
add
sub
movsb
lcall
orl
jecxz
inc
out
cld
iret
insb
and
sub
cmpsb
mov
adc
scas
pusha
in
lret
xor
out
mov
mov
push
mov
data16
pusha
cmp
xchg
pop
lods
cmp
cmp
mov
dec
in
mov
aam
ljmp
popl
imul
mov
add
or
xchg
xchg
pop
dec
cmpsl
loopne
jne
adc
idivb
pop
stc
loopne
hlt
shrl
rcll
ds
pop
xlat
mov
pop
popf
gs
ljmp
leave
shrl
sbb
mov
xchg
pop
push
push
fldenv
ss
sub
sbb
arpl
js
mov
push
pop
xor
xchg
hlt
xor
rol
popa
ds
sbb
push
jle
movsl
ljmp
incb
outsb
dec
sbb
pop
rol
and
dec
pushf
icebp
cmpsl
and
hlt
jmp
loopne
cli
dec
aad
in
xchg
mov
adc
mov
push
jae
mov
in
loope
fidivrl
mov
push
xor
jge
fcmovnu
mov
cmpsl
cld
mov
es
xor
fnstcw
rcl
or
push
jge
mov
clc
cli
push
fidivs
fdivs
icebp
cmc
jbe
push
sub
lea
cmp
je
add
iret
mov
sti
dec
jnp
test
push
sub
and
addr16
inc
pop
inc
addr16
xor
hlt
stos
in
sub
push
and
and
dec
outsb
std
and
xchg
xchg
scas
in
test
pusha
adc
dec
inc
xchg
sbb
loopne
adc
push
stos
clc
or
lods
mov
add
out
xchg
jg
mov
test
insl
fwait
xor
or
inc
imul
stos
mov
jl
push
jb
popa
jg
sbb
xlat
insl
xor
cmc
mov
mov
mov
lcall
cmc
outsb
xchg
add
lret
push
in
movsl
aad
cltd
jb
or
sbb
addr16
sub
adc
andl
jmp
jae
ret
mov
dec
dec
and
nop
cmp
aaa
fs
jge
nop
pop
push
xchg
enter
or
ffreep
addr16
add
test
mov
and
pop
sub
add
pusha
movsl
popf
iret
clc
push
push
sub
aam
push
push
mov
mov
pop
push
mov
jnp
sub
cmp
aam
fwait
aas
xchg
aas
test
clc
adc
sti
iret
insb
dec
nop
pop
cmp
int
sti
stc
dec
xchg
aas
pop
shl
scas
push
loop
mov
stc
imul
pop
ljmp
out
aad
pusha
shr
stos
sub
pop
icebp
stos
sbb
stos
and
cmp
fwait
dec
add
rclb
mov
rorl
inc
test
cmp
xor
in
sub
ja
mov
push
mov
mov
add
movsl
or
mov
jg
dec
adc
push
les
arpl
ret
dec
fs
leave
and
jp
mov
ret
mov
enter
addr16
sub
shrb
pop
sbb
dec
or
rcr
jmp
cmpsb
cmovge
shlb
ljmp
xchg
mov
adc
push
or
lock
xor
pop
push
mov
xor
mov
sub
push
ljmp
inc
dec
adc
jp
and
mov
and
fldt
divps
or
lret
and
add
jg
inc
ss
data16
sub
popa
add
jo
cs
jnp
ds
cmp
adc
push
add
pop
ja
call
sbb
pop
les
jg
lea
or
scas
add
add
test
repnz
out
cli
mov
icebp
xchg
je
adc
adc
aad
rcr
popa
inc
and
pusha
rol
icebp
lret
push
loopne
gs
setns
adc
pop
nop
int
add
addl
cmc
mov
out
subb
push
dec
loop
adc
and
jge
test
jno
mov
mov
int3
les
ret
xorl
fsubrp
or
sti
test
mov
fwait
aas
nop
fcmovne
out
fstl
pop
mov
fs
fstl
je
adc
mov
iret
push
xchg
movsb
cmp
cwtl
das
cmp
loope
addr16
daa
mov
fucomp
inc
jecxz
cmp
xchg
pop
out
frstor
jp
mov
and
pop
pop
pop
mov
cld
js
mov
and
inc
sarb
or
jne
cmpsb
cmp
roll
mov
rorb
pop
pop
std
jle
call
mov
dec
push
lcall
cmc
insb
gs
mov
lret
sti
outsb
pop
test
xchg
mov
mov
bnd
nop
out
sub
jns
push
in
mov
fwait
add
mov
gs
mov
inc
jp
adc
cmpb
fwait
jge
fbld
inc
in
push
js
jno
clc
and
inc
fdiv
outsb
pop
cmpsl
jge
outsb
push
mov
gs
int
fcoms
mov
call
push
cltd
roll
inc
mov
mov
fdivs
inc
add
dec
jle
scas
daa
pop
sub
pop
jae
or
filds
int3
lds
or
popa
test
inc
scas
mov
insb
adc
cmp
xor
das
xchg
pop
test
dec
jno
push
lret
decl
inc
lcall
or
lcall
stos
repz
inc
push
sub
test
mov
add
ja
sti
rcrl
fistpl
outsb
mov
push
aaa
ja
adc
pop
arpl
shr
jl
mov
sbb
rolb
add
outsb
cltd
jp
sbb
pop
scas
popa
arpl
mov
pop
push
and
pop
cltd
dec
cmc
in
mov
sub
or
xchg
mov
inc
sub
mov
jmp
mov
les
adc
inc
test
or
ljmp
les
cmp
stc
dec
xchg
sub
pop
int3
ret
fwait
adc
dec
dec
xchg
aaa
stc
sahf
adc
icebp
mov
push
in
and
aas
lret
add
outsl
xchg
mov
pcmpgtw
dec
inc
jnp
movsb
scas
mov
stc
sub
inc
mov
es
in
pop
jns
lret
es
clc
lahf
roll
aad
inc
jbe
mov
inc
rorl
adc
int3
test
les
and
xchg
cltd
loope
cmpsl
xchg
sbb
cwtl
mov
jmp
jbe
fildll
dec
mov
in
push
popa
inc
mov
out
xchg
ds
imul
jp
push
xchg
pop
dec
push
mov
scas
hlt
call
cmp
or
xchg
jecxz
mov
push
pusha
dec
adc
mov
mov
pop
adcb
clc
les
cmp
and
stos
push
out
xchg
push
inc
in
push
mov
mov
dec
jne
neg
icebp
scas
ja
dec
jb
push
adc
mov
inc
and
xlat
popa
cltd
sbb
insl
dec
std
shlb
test
jp
jne
lret
xlat
and
mov
mov
xchg
sub
sbb
inc
mov
fxch
add
mov
repnz
loop
push
sub
mov
cmpsb
sahf
stos
lods
out
shrb
das
push
imul
shrb
jno
pop
stos
dec
mov
jecxz
js
ret
jb,pt
stos
xchg
cmp
mov
out
push
bound
add
popf
outsl
pusha
js
das
loope
ja
addr16
mov
xchg
push
cli
cmp
mov
sbb
cmp
mov
xlat
cmp
clc
and
lret
jp
mov
test
das
jbe
mov
sbb
sub
jnp
sbb
sti
mov
repz
mov
adc
jp
xor
nop
inc
push
inc
sub
enter
fldpi
sbb
notb
add
in
mov
push
sti
in
or
push
ljmp
and
imul
or
stos
lahf
adc
jb
lahf
or
add
scas
stos
mov
mov
xor
cmp
incb
imul
fidivs
out
jl
adc
mov
rorb
push
sub
xor
ljmp
mov
push
and
xchg
fcomps
inc
clc
into
and
std
push
or
addr16
mov
outsb
sbb
ret
icebp
jbe
inc
dec
inc
pop
enter
jne
mov
movsb
out
or
and
jecxz
test
por
loopne
jo
dec
pop
es
lret
xchg
js
dec
dec
imul
cmpl
mulb
inc
repz
xor
cltd
xchg
loop
and
ja
fidivrs
insl
mov
jg
pop
add
cld
mov
f2xm1
mov
and
mov
sahf
inc
mov
out
add
sbb
int3
int3
mov
js
xchg
repnz
add
scas
stos
adc
mov
popa
mov
outsb
push
and
aad
cli
xlat
ret
pop
jae
dec
inc
sahf
arpl
mov
adc
pushl
std
sbb
pop
cmp
lcall
xchg
cmp
mov
add
andl
imul
popa
inc
call
fldt
js
popa
cmpb
lahf
jecxz
or
cmp
xlat
hlt
cmp
fsub
sub
out
scas
rclb
xchg
arpl
jge
cwtl
jecxz
mov
cmc
loopne
mov
decl
or
pop
es
addl
pop
fidivrs
mov
add
lods
xchg
mov
dec
filds
in
pop
mov
std
cli
fstps
and
jnp
enter
cwtl
outsl
nop
scas
sbb
pop
or
jp
pop
push
sbb
dec
jbe
adc
cmc
notl
out
out
idivl
xor
mov
mov
sti
xor
sti
mov
dec
xor
pop
inc
jb
ss
inc
in
repz
mov
xor
bound
popa
ja
aas
mov
xchg
and
dec
mov
sti
mov
fmuls
lds
js
fsts
push
rolb
inc
mov
lret
sbbl
and
dec
fs
imul
xor
push
cli
outsl
or
movsb
cmpsl
out
xor
inc
push
lahf
inc
add
jbe
mov
mov
sbb
xor
jge
sbb
push
bound
cmp
aaa
push
iret
repz
movsb
push
icebp
pop
lcall
pop
sti
jne
and
xor
pop
push
fildll
cltd
sbb
inc
lods
jne
mov
ss
imul
lods
jge
inc
pop
cwtl
or
repnz
in
scas
movsb
mov
inc
and
mov
xor
sti
rorb
inc
or
cmp
mov
shll
out
dec
stos
adc
sub
sahf
into
adc
lahf
dec
sub
add
lea
dec
pushf
lcall
add
nop
aas
dec
add
xchg
xorl
scas
out
mov
inc
imul
add
pop
xor
cmp
sbb
stos
cmp
or
subb
dec
xorl
sub
in
xchg
jmp
xchg
cli
push
xor
fsubs
pop
das
lds
jmp
xor
loopne
int3
cmp
pop
cmp
xor
cld
push
stos
aaa
jne
or
mov
add
add
mov
inc
and
cmp
cmp
scas
stc
mov
push
icebp
ja
test
fisubl
faddl
les
mov
repnz
mov
pop
mov
pop
imul
xchg
xchg
addb
rclb
fnstsw
int
iret
aas
negb
imul
movsl
mov
scas
sbb
stos
fcmovnu
push
sub
sub
lods
test
push
and
daa
fnstenv
bound
pop
cmp
lret
dec
out
sub
icebp
pop
mov
out
sti
xlat
and
lds
xchg
xor
loope
jne
idivb
mov
xchg
movsl
lret
lods
push
lods
mov
outsb
sub
orl
test
fisubl
fcoms
sti
loopne
pop
clc
aad
mov
xor
arpl
shl
negb
fimuls
xchg
into
xchg
inc
xor
gs
adc
adc
cmp
test
push
push
std
and
fcoms
iret
loope
pop
inc
adc
mov
js
jns
ret
cmpsb
enterw
cli
push
dec
and
pushf
movsl
inc
pop
sbb
loope
fimull
mov
jo
jbe
rorl
mov
jno
mov
pop
xchg
stos
adc
pushf
add
add
rclb
outsl
mov
sbb
push
jp
js
add
cmp
lret
cmp
xor
jge
or
shll
fs
jl
dec
sbb
dec
jg
ror
jge
sub
xor
xchg
or
add
lahf
mulb
mov
dec
lret
rorb
icebp
in
addr16
jmp
scas
lcall
jl
and
jmp
and
stos
addr16
xchg
fwait
xchg
push
out
ret
jno
int
cmp
rcl
and
jge
fnstsw
ss
cmpsl
fs
mov
ss
xor
mov
dec
mov
dec
xor
add
ss
test
xor
mov
push
cmc
xor
inc
inc
push
push
cmpsl
push
mov
divb
insb
rcr
stos
push
xchg
pop
rclb
add
or
xchg
movsb
inc
sub
sarb
mov
cmp
mov
pop
sti
in
insl
test
std
hlt
mov
mov
rcrb
mov
jnp
pushf
mov
dec
sbb
mov
mov
cmp
pusha
dec
xlat
fs
sub
cmp
lahf
adc
pop
lret
out
shlb
add
mov
test
xchg
dec
adc
jg
mov
sub
nop
cmpl
ss
pop
sub
mov
sarb
sbb
cmp
int3
out
xor
fsubr
enter
jns
clc
shrl
sub
dec
xor
hlt
lahf
jb
mov
lret
aaa
pushf
cltd
xlat
mov
std
jge
cwtl
fsubl
jnp
cmpsl
stc
xor
les
test
jnp
dec
movsl
pop
cmp
dec
xor
in
xchg
gs
mov
rol
pop
loopne
pop
ret
mov
ret
popl
andb
push
jno
mov
notl
cmp
lds
and
test
mov
inc
mov
mul
insl
popf
or
movsb
adc
cmp
mov
jnp
mov
mov
rcrl
or
dec
rclb
out
ss
fs
pop
mov
lahf
adc
out
frstor
pop
out
dec
dec
jl
push
sub
roll
xor
arpl
and
imul
xchg
mov
sti
mov
pop
sub
ficomps
insl
xchg
out
ljmp
scas
mov
fldt
mov
scas
gs
xor
pop
mov
stc
sbb
addr16
lgs
arpl
out
daa
shrb
push
ret
xchg
ja
lret
mov
in
in
aad
pop
jbe
sub
cmp
sarl
or
mov
fld1
lcall
sub
aas
and
dec
mov
mov
stos
mov
pop
lret
sbb
mov
cmp
and
and
jns
lock
cmp
rcr
bound
dec
sarb
inc
adc
test
fisttpl
cmpsl
data16
repz
dec
fldt
out
and
pop
xor
sub
lds
cmp
or
jne
shrb
mov
dec
inc
addr16
pop
ljmp
repnz
arpl
mov
fwait
adc
mov
or
sahf
push
in
mov
repnz
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
jmp
aaa
dec
cmpsl
sbb
xchg
and
movsb
dec
add
int
bound
out
jne
insl
pop
movsb
mov
inc
and
repz
cmp
xor
jbe
jno
pop
xlat
std
cmp
out
push
shll
repz
scas
mov
pop
push
popa
stos
sbb
and
or
sbb
aas
xlat
lcall
inc
push
and
movsb
aam
xchg
dec
and
test
out
inc
mov
or
jno
sub
dec
out
fwait
push
notl
push
jne
lahf
xorb
or
out
xor
addr16
leave
and
sub
mov
jb
int
mov
push
mov
jecxz
daa
gs
out
or
push
mov
shll
jmp
mov
rcll
dec
pushf
test
push
mov
icebp
lret
and
mov
dec
push
or
xor
pop
xchg
loope,pt
mov
cmpsl
in
fwait
and
pop
dec
add
lcall
out
dec
movsb
mov
and
loope
jo
dec
or
jge
scas
and
pop
insb
push
mov
sbb
mov
cmpsl
out
jmp
fiadds
add
rcrb
movsl
fstps
xlat
movsl
or
hlt
ficomps
pop
adc
inc
add
mov
cmp
pop
cld
daa
testl
aad
fdivrp
mov
js
add
scas
aas
jge
cmp
dec
dec
or
mov
arpl
in
scas
xchg
sub
sub
cmpsl
lock
cltd
push
mov
movsb
xor
pop
test
test
leave
negb
sbb
dec
xor
test
addr16
pop
push
dec
enter
ret
pop
xchg
cs
test
test
imull
popa
int
cmpsb
test
and
data16
sbb
add
dec
rcrl
fcoms
js
js
popa
mov
sub
movsl
dec
insl
push
or
cmpsl
les
sahf
adc
scas
lahf
jo
in
in
dec
cmp
roll
jg
dec
sub
fistps
popl
jnp
dec
push
outsb
adc
fbstp
faddl
daa
fdivrs
pop
add
dec
repz
inc
mul
ret
or
mov
pop
jo
cmp
and
lcall
inc
or
gs
push
call
mov
lds
dec
sarl
enter
pop
xor
xchg
xchg
and
cmp
aam
cs
mov
lea
test
and
dec
add
ss
mov
daa
fsubl
dec
xor
push
jnp
clc
xchg
lods
js
dec
pop
mov
and
dec
mov
enter
icebp
negl
dec
aas
cmc
or
ror
js
xchg
out
test
repz
les
les
push
ds
addr16
sub
out
push
ss
daa
aaa
push
dec
aam
pop
aaa
sub
xchg
jle
inc
xor
jbe
test
outsl
and
int
int3
and
out
lcall
aam
imul
cmp
cmc
ljmp
xchg
popa
js
xchg
into
int3
sbb
mov
pcmpgtw
jle
shrb
xor
mov
popf
in
push
loope
inc
inc
in
push
lcall
jb
mov
adc
outsb
clc
mov
adc
std
ret
push
add
inc
loop
cs
out
mov
ret
xchg
xor
sti
test
jbe
inc
test
xor
adc
xchg
stos
sub
adc
sub
inc
mov
dec
mov
out
jmp
jns
or
or
or
mov
and
std
adc
and
test
cld
xchg
push
daa
sub
xor
ds
jge
xchg
or
mov
push
push
or
shll
cmc
jo
sbb
mov
lret
or
std
das
mov
mov
add
ds
bound
cmp
or
bound
sbb
lock
int
mov
aas
scas
jno
aas
ds
mov
mov
gs
jno
mov
cld
mov
enter
push
inc
mov
mov
add
outsl
fisubs
out
inc
mov
mov
repnz
jle
lret
sub
sarb
out
xor
sbb
in
mov
mov
int3
cmpb
dec
ret
insl
mov
mov
and
sbb
scas
mov
mov
scas
hlt
sbb
fdivrs
ljmp
mov
iret
or
xchg
pop
and
jbe
test
adc
xchg
scas
xchg
std
sub
push
fmul
js
movsb
fildll
cmp
sub
mov
popl
outsb
je
fistpl
sub
push
inc
jmp
bound
les
push
repnz
insl
imul
or
das
mov
aam
mov
xor
ja
add
xor
sbb
in
inc
jno
xchg
outsl
ret
sbb
adc
sbb
jp
pusha
cmpsb
test
cltd
aaa
pop
mov
mov
jnp
jbe
push
out
loopne
fldt
fmull
enter
pop
js
sbb
in
out
fdivs
repz
xor
dec
iret
insb
cmpsb
push
outsb
and
pop
push
mov
rcrl
iret
sar
fidivs
mov
push
enter
sub
into
pop
shlb
jmp
jle
test
mov
addb
iret
lret
scas
push
stos
pop
inc
pushf
lods
scas
out
sbb
loope
inc
jb
mov
pop
jns
mov
leave
inc
fdecstp
cmpl
test
jb
jg
mull
pop
das
inc
inc
std
push
idivb
aaa
push
sub
push
jo
xor
push
jb
iret
pop
movsb
orl
fsts
xor
pushf
push
mov
jmp
pop
push
lods
lea
mov
adc
mov
lods
shrl
jp
and
mov
jnp
lock
pop
cmpsb
inc
out
pop
lock
arpl
ret
outsb
mov
xchg
inc
das
outsl
mov
gs
xor
call
cmpsl
mov
sahf
stc
mov
sbb
sbb
and
sti
cltd
sub
dec
sbb
je
data16
orl
mov
jns
insb
cltd
stos
pop
js
jns
aaa
out
or
sbb
push
daa
lds
xor
jno
pop
lea
in
xor
lret
adc
jl
sahf
aam
pop
ds
mov
lds
jae
iret
xor
cmp
js
lret
mov
and
daa
out
lret
ss
stos
xor
inc
inc
stos
lods
cli
push
push
gs
cmc
test
leave
stos
pop
sbb
sbb
mov
sbb
and
fs
test
sbb
icebp
out
xor
mov
icebp
in
sub
nop
ret
gs
or
movsb
test
add
ficoml
jecxz
cs
or
jge
mov
fs
mov
jp
pop
pop
jne
stos
and
mov
test
mov
xchg
int3
jmp
imul
push
rorl
aas
iret
ja
pop
mov
aam
or
in
dec
inc
ficoms
fdivr
arpl
sbbl
adc
clc
test
bound
jp
jge
outsb
cltd
js
jmp
outsl
mov
xchg
scas
jb
add
or
dec
imul
adc
push
sub
add
hlt
iret
dec
imul
adc
sub
sbb
repz
ss
fxch
cmp
inc
mov
sarl
loopne
sub
cwtl
hlt
adc
xor
cmc
mov
fucomp
add
popf
push
xor
push
andb
sbb
pushf
add
fsubs
mov
cli
ds
ret
xchg
inc
cli
leave
mov
jne
sbb
insb
inc
test
cmc
xor
push
leave
push
cmpl
mov
scas
gs
iret
vpackssdw
add
xchg
dec
cli
popf
add
pop
daa
xchg
clc
cmpxchg
mov
imul
cmpb
mov
lahf
dec
pop
loope
out
push
or
fmuls
mov
call
movsb
xor
repz
lahf
movsl
mov
cmp
xchg
in
test
or
mov
push
stos
repz
mov
cmc
inc
cmp
adc
push
outsl
gs
sub
xchg
fisttps
fmulp
push
adc
leave
pop
sbb
xor
inc
xchg
push
orb
xchg
ret
shlb
or
add
arpl
rcrl
jnp
pop
gs
cmpsb
push
and
sti
mov
sbb
xchg
sub
js
mov
and
sahf
push
mov
sbb
dec
xor
push
das
ss
icebp
xchg
pusha
or
leave
mov
in
mov
jne
or
push
add
fcmove
inc
divl
cmpsl
sbb
and
sahf
add
mov
cmp
icebp
lds
mov
out
push
cmc
mov
fstps
das
mov
jmp
jecxz
or
cmp
loopne
sahf
mov
dec
loop
dec
mov
rcrb
into
dec
pop
mov
sub
scas
cs
shr
cmpsb
stc
jbe
mov
icebp
xchg
pusha
scas
sbb
dec
push
cmp
addr16
ds
mov
mov
push
cmp
ret
mov
sbb
cwtl
push
sbb
mov
xor
stos
jmp
out
xor
out
jecxz
xchg
xchg
sbb
nop
and
adc
lret
lret
cmove
xor
jp
inc
adc
hlt
into
xor
rorl
cmp
les
movsb
fldenv
adc
lds
popa
int
cli
mov
mov
addr16
shl
shlb
aas
test
call
iret
add
les
mov
or
fnstenv
pop
fs
lds
mov
add
lcall
or
popf
xchg
pop
jnp
jmp
mov
mov
or
lock
daa
movsb
inc
enter
sbb
pop
and
es
xacquire
enter
test
sub
mov
inc
in
into
mov
xlat
lret
shld
add
push
cli
mov
jne
xchg
add
add
push
dec
cmp
loope
lods
sub
sbb
into
mov
jnp
mov
into
jno
cli
imul
cmp
scas
and
pop
sbb
mov
lods
out
aad
test
lea
das
sbb
push
test
out
cmp
mov
jne
jge
lock
push
fs
cltd
outsb
xchg
pop
push
jae
lds
jl
xlat
cltd
mov
loopne
stos
loopw
dec
pop
push
fcoml
insb
xlat
cmpsb
std
mov
lahf
leave
mov
cmpsb
cmpsl
xchg
pop
mov
bound
mov
cltd
les
adc
sub
addl
aam
fistl
fldl
mov
shll
arpl
push
call
shrb
fwait
dec
daa
or
pop
je
add
sub
cmp
or
dec
cmp
sti
adc
dec
stos
out
sbb
addb
mov
lods
xchg
ret
daa
fistl
push
cmp
dec
stos
stos
dec
inc
sub
aaa
in
mov
xchg
xlat
push
int
lock
jle
lods
xor
and
fimuls
push
inc
enter
sub
ret
pop
pusha
pop
push
scas
pavgw
subl
xor
arpl
xchg
push
enter
xchg
cmc
test
xor
jp
cmpsb
test
pushf
adc
cmp
xchg
mov
outsl
es
popf
adc
outsb
dec
in
xor
dec
sub
cwtl
lods
aas
add
pop
push
sbb
adc
rorl
movsl
enter
ljmp
push
lcall
sti
enter
add
jg
jle
xchg
mov
icebp
xchg
repz
loope
inc
push
in
dec
in
mov
testl
jo
jno
fistps
jmp
xchg
cmpsb
popf
sub
inc
fildl
push
aas
jnp
push
add
fdivrp
jbe
stos
and
cmpsl
inc
xor
ljmp
out
push
or
jo
in
sub
lret
clc
lret
sbb
add
stc
mov
pop
cmp
int3
scas
shlb
outsl
mov
xchg
out
mov
movsl
cltd
dec
or
ljmp
cmp
cld
or
out
xor
stos
lcall
push
pop
or
cmp
bound
pop
push
sub
fidivrl
xchg
mov
je
stc
leave
insb
push
rclb
ds
add
test
push
gs
and
lret
lea
xor
and
adc
push
leave
iret
sbb
push
ret
test
jae
mov
xor
in
xchg
cmp
sub
xlat
mov
add
popf
add
lret
dec
jb
inc
push
inc
inc
ja
sarl
mov
jae
pop
xchg
mov
scas
dec
xchg
test
rclb
xchg
jg
mull
stos
jne
mov
push
inc
sub
out
pop
shrl
add
xor
mov
add
jo
loope
and
pop
or
mov
lret
dec
xchg
in
add
cmp
enter
out
jae
push
imul
push
sub
sub
mov
and
adc
or
push
pop
es
sbb
pop
das
cmp
xor
mov
pusha
mov
fidivrs
jg
pop
inc
push
mov
mov
xor
push
xchg
aam
orb
in
aaa
sub
sbb
lock
dec
fs
ljmp
cmp
jae
fstpl
imul
lcall
int
xchg
add
cwtl
adc
or
cld
insb
push
dec
jle
mov
mov
dec
stos
jl
js
scas
adc
idivb
xchg
pop
ja
stos
addr16
aaa
push
lret
xlat
mov
or
aam
andb
or
das
cmp
iret
popf
xchg
inc
iret
stc
stc
or
fdivp
fcompl
pop
inc
jns
fwait
dec
xchg
lea
add
icebp
xchg
int
fistl
arpl
outsl
mov
push
cs
pop
xchg
sbb
cli
and
daa
ret
and
mov
outsl
jg
leave
stc
cmp
lods
lahf
xor
push
jmp
mov
and
mov
dec
test
mov
push
out
xor
mov
adcb
aaa
outsb
hlt
pop
mov
cmp
or
add
leave
adc
hlt
fiadds
sub
in
sbb
daa
test
dec
and
in
xor
mov
fsubrl
push
sbb
mov
fildll
sbb
lds
inc
mov
pop
jl
into
cmpsl
test
aaa
xchg
mov
rolb
arpl
mov
add
xchg
jmp
lret
rorb
xchg
cmp
or
daa
fidivrl
ja
sbb
pop
xchg
leave
xchg
notb
xchg
fisubs
mov
sbb
pop
scas
out
mov
mov
sub
adc
xchg
mov
mov
fisubrs
sbb
and
sbbl
cltd
imul
daa
xchg
jl
test
mov
adc
dec
add
mov
push
cmpsb
rcrl
leave
fdivrs
es
fisubrl
loop,pt
mov
push
into
cmp
aaa
shl
mov
sbb
jne
sbb
insb
iret
call
cmpsl
pop
inc
mov
popa
jae
das
sbb
or
daa
cwtl
nop
lea
cmp
call
in
jmp
stc
mov
push
dec
stos
add
enter
and
sbb
clc
daa
sbb
insl
fdivrl
lock
inc
mov
popa
mull
mov
mov
sbb
cltd
mov
mov
lahf
lcall
data16
sub
pop
aaa
xchg
out
mov
add
sbb
mov
mov
icebp
dec
and
out
push
pop
ja
mov
xchg
push
xchg
cmc
xchg
ljmp
push
xchg
rcrb
daa
jge
jg
mov
add
add
scas
mov
jne
cld
in
mov
movsb
int
daa
pop
mov
sti
enter
or
add
out
xchg
xlat
imul
xor
mov
popa
xchg
in
sub
dec
push
fmull
imul
inc
inc
mov
inc
xor
dec
adc
jno
mov
jnp
sbb
inc
das
xchg
mov
pop
push
pop
test
push
inc
test
push
pusha
lret
dec
lahf
in
mov
add
sti
inc
rcll
cmp
ljmp
add
fsts
ds
daa
push
lods
add
pop
ror
and
add
std
mov
movsb
ficompl
mov
pop
inc
pop
sbb
in
mov
sti
mov
xchg
enter
out
jbe
sbb
push
xor
mov
mov
mov
prefetch
xor
test
push
sub
pop
mov
lahf
cwtl
in
jns
cmp
mov
push
jecxz
fbstp
dec
xor
inc
mov
push
sbb
inc
enter
jmp
push
insl
je
pop
and
pop
les
loop
loopne
push
popf
push
fldcw
xchg
ss
cltd
insl
loopne
dec
xor
dec
inc
into
pop
mov
test
mov
sbb
lock
push
sub
xlat
decl
dec
or
inc
decl
lock
xchg
sub
aas
cmpsb
pop
adc
mov
repz
xchg
push
pop
mov
and
int3
daa
pop
adc
mov
or
iret
loop
cmp
lock
out
daa
add
ja
adc
popf
shrl
add
cltd
mov
fldl
lret
and
adc
inc
movsl
sbb
or
push
imul
pusha
adc
push
lret
pop
sbb
mov
loope
test
popa
inc
ds
dec
aas
into
mov
push
cmpsl
stc
push
mov
xor
dec
lret
jg
sahf
sti
jl
xor
sti
xor
adc
pop
dec
xchg
xchg
aam
stos
jne
imulb
inc
or
fwait
hlt
lcall
pushf
fwait
xchg
je
mov
mov
xchg
lods
ret
ljmp
xor
ljmp
jns
jg
mov
int
and
add
ljmp
add
rcr
addr16
mov
fstpl
orl
sub
fisubl
jg
mov
dec
sbbb
fcmovnb
mov
addr16
sub
lock
fimull
stos
loopne
imul
jecxz
sahf
xor
inc
stos
outsb
push
ret
or
sub
add
mov
icebp
xchg
push
sbb
iret
sbb
loope
ljmp
ss
imul
aas
jecxz
jb
xchg
outsl
fisttpl
cmp
pusha
push
enter
sbb
mov
or
test
outsl
sbb
jp
inc
mov
xchg
cli
mov
push
rol
insb
pop
sub
in
jno
test
push
fnstenv
cmp
insb
aad
in
sarb
cmp
jecxz
xchg
mov
lods
aas
push
repz
lret
jbe
dec
or
push
sub
push
mov
nop
clc
lea
movsl
aam
scas
stc
and
adc
in
ljmp
jb
mov
insb
sbb
or
in
push
push
sbb
es
flds
rorl
lea
mov
imul
jle
dec
je
cmpl
push
add
mov
imul
xchg
mov
push
xchg
lcall
xor
pop
int
xchg
push
jg
sbb
cld
or
in
out
sbb
cli
test
fsubrs
dec
ret
mov
cmp
jne
cmp
sub
scas
and
mov
push
adc
movsl
jge
lcall
xchg
jmp
testl
stos
mov
pop
movsb
ffreep
data16
pop
add
ja
push
insl
cmpsl
fs
cmp
push
sarb
and
push
sbb
inc
pop
fdivrl
and
jmp
or
dec
push
pop
push
adc
xlat
cmpsl
and
xchg
out
mov
xchg
sub
jmp
das
sub
lea
pop
pop
add
das
add
mov
push
out
jno
int3
ljmp
test
jge
mov
fiaddl
inc
push
cmpsb
dec
imul
es
cs
or
cmpsb
add
imul
sti
mov
adc
std
jae
xor
dec
mov
mov
push
ljmp
jmp
jmp
mov
jo
ljmp
xlat
pop
dec
mov
int3
ljmp
sbb
mov
and
fbstp
ret
xor
out
rcll
mov
adc
dec
rcrl
and
add
outsb
fimuls
popf
hlt
das
ss
lcall
insb
lods
loope
lods
mov
sub
xchg
adc
mov
sub
jmp
rorl
loopne
or
js
xor
cvttps2pi
jecxz
repz
inc
jae
mov
pop
sub
pop
fdivl
out
fs
xchg
aaa
sbb
adc
xor
adc
int
imul
pop
loop
pushf
fdivrs
rorb
jne
pop
scas
mov
pop
lret
sbb
fnstenv
dec
or
mov
adc
pusha
jge
xchg
fidivrs
aam
mov
pop
sub
jmp
int
sbb
fs
xlat
xchg
jmp
add
das
cld
cmpsl
push
repz
and
and
pushl
mov
push
sub
add
js
test
mov
add
fwait
push
inc
push
xchg
xchg
mov
scas
sbb
or
popf
jae
je
test
cmpb
fadd
pop
fs
mov
push
enter
in
dec
xchg
push
addr16
mull
add
adc
loope
inc
icebp
inc
add
imul
sbb
lods
push
adc
insb
sbb
sbb
dec
aad
bnd
xchg
sbb
popa
mov
loope
je
movsb
xchg
into
xchg
scas
or
push
inc
push
inc
jl
das
mov
push
xchg
push
scas
inc
inc
fs
call
outsb
add
adc
lds
fchs
xor
mov
or
cmpsb
sub
shl
or
xor
or
mov
cmc
push
push
cltd
sbb
movsb
in
pop
jb
shll
in
fdivrl
add
and
loope
cli
fstpt
mov
mov
mov
fwait
orl
ljmp
sbb
gs
in
insl
xor
out
test
movsl
push
jl
cmp
movsl
xchg
ficomps
and
cmpsl
je
clc
daa
stc
jo
mov
shlb
incl
test
fadds
stos
mov
inc
jg
sahf
jle
loop
mov
mov
insb
aam
and
ss
into
or
mov
cli
mov
xchg
test
xchg
fistpll
and
inc
adc
mov
and
mov
pop
adc
xchg
fisubrl
rcrl
icebp
or
popf
xor
push
and
pop
rorb
lcall
jo
filds
add
sub
mov
xor
jecxz
inc
add
cmc
js
sbb
notb
lock
sub
test
scas
sbb
xor
adc
mov
inc
jns
jne
scas
lahf
js
jns
gs
jl
es
scas
imulb
mov
mov
mov
in
add
sbb
ds
lret
in
ljmp
test
leave
movsl
cld
xor
sbb
ret
sbb
mov
mov
mov
dec
dec
sub
dec
ss
rcrb
mov
cltd
imul
adc
out
dec
mov
call
lahf
cmp
das
xlat
pop
mov
sbb
pop
xor
adc
lock
pop
xchg
in
sbb
faddl
jle
testl
call
xchg
leave
add
mov
xchg
clc
enter
fidivrl
adc
jo
iret
jne
popa
popa
mov
das
mov
lret
pop
mov
sahf
pop
push
mov
xorl
pusha
or
or
mov
in
pop
inc
cmpsb
orb
add
scas
mov
pop
lods
scas
sub
or
fnsave
popa
add
int
push
fwait
adc
stos
or
xor
dec
or
sbb
sbb
rcll
aaa
ss
les
xchg
lcall
jb
mov
mov
add
hlt
lds
sbb
xor
pop
pop
sbb
movsb
movsb
jecxz
dec
lret
and
scas
int3
ljmp
push
test
dec
xorb
inc
aad
jg
mov
xlat
add
push
rcll
lds
mov
lea
xchg
addb
push
add
jmp
pop
mov
push
inc
jb
cs
das
aad
mov
jnp
cmp
mov
arpl
mov
mov
shll
add
mov
ss
iret
mov
pop
and
movsb
cli
out
jbe
xor
or
fisttpll
lret
adc
pop
loop
lds
mov
mov
stos
cs
sbb
push
pop
fmull
fldt
lcall
pop
xor
mov
jb
adc
jmp
mov
fdivr
in
daa
out
es
mov
jge
inc
xor
inc
mov
xlat
sub
jb
mov
ret
popf
adc
sti
cs
push
add
insb
xor
std
pushf
jae
mov
ds
xlat
imul
sbb
and
fisubrs
in
inc
sbb
and
imul
push
or
pushl
enter
lds
fsub
ljmp
roll
outsl
bound
mov
pusha
xor
arpl
xor
add
add
push
adc
shll
sub
dec
jecxz
popf
decl
lds
cli
xchg
aam
pusha
fsubrs
sti
or
mov
add
pusha
sahf
mov
mov
cmp
ds
imul
and
call
in
loopne
outsl
mov
mov
push
mov
out
enter
iret
inc
add
leave
orl
jecxz
lock
mov
push
in
dec
in
mov
mov
or
leave
push
in
call
aad
mov
lahf
sti
sahf
sub
cs
mov
js
sub
jbe
out
add
js
out
add
lds
pop
test
fwait
nop
cwtl
dec
loope
je
cmp
filds
ret
ljmp
cvtdq2ps
xchg
out
mov
test
mov
xchg
push
push
jbe
jmp
xor
sub
sbb
insb
fcmovnbe
arpl
adc
shl
cli
je
push
jg
mov
dec
mov
icebp
mov
stc
add
aad
lods
ret
shll
xor
jbe
mov
cwtl
mov
movsl
xchg
sub
int
or
loopne
jo
loope
aad
mov
fbstp
xor
fnstcw
in
jnp
scas
sbb
add
cmc
test
cltd
xor
xchg
or
orb
pushf
repz
sub
shld
fs
into
jge
mov
and
das
in
movsl
xor
mov
outsb
dec
int3
bound
and
xlat
mov
dec
je
aad
sarb
call
mov
cmp
es
addr16
scas
add
sbb
jp
push
push
punpckhdq
dec
inc
jecxz
mov
cmp
aas
sub
imull
lods
mov
pop
aad
cmp
fidivl
loopne
notb
dec
ja
scas
divl
in
mov
pushf
movsb
pop
add
cmpsb
push
add
sete
jg
in
inc
addb
push
in
loope
lods
inc
ljmp
pop
sbb
add
movsl
and
inc
inc
aas
leave
shrl
inc
push
mov
stc
mov
insb
jp
sub
push
aaa
addl
adc
mov
mov
aas
dec
loopne
add
cmp
mov
mov
pop
in
pop
cli
fisttpl
mov
stc
test
cmpsb
inc
movsl
out
pushf
cmpsl
pushf
loope
pop
push
adc
jp
out
mov
and
xchg
add
in
jb
pop
sbb
xchg
aas
test
test
clc
lret
jno
fdivs
out
test
cltd
imul
fdivs
test
mov
lahf
jecxz
aaa
adc
aad
push
add
testl
sbb
imul
out
inc
sbb
pop
test
adc
xor
jp
cmp
jb
sub
in
int
pop
daa
sbbb
jmp
cld
fldt
push
outsl
or
mov
mov
or
sub
dec
xchg
sub
inc
adc
cmp
mov
jns
pop
or
inc
icebp
hlt
scas
pop
aad
movsl
pop
inc
loop
lahf
sub
mov
sub
das
ds
in
stos
mov
rep
sub
or
shll
jge
pop
repnz
sbb
mov
inc
mov
ffreep
paddw
stos
ja
dec
inc
mov
lds
outsl
push
mov
push
pop
negb
pop
sbb
mov
outsb
xchg
sbb
icebp
and
int3
mov
cmp
adc
int3
mov
add
mov
mov
lret
sar
and
mov
stos
imul
das
sbb
push
jbe
imul
mov
push
and
sbb
cli
or
sbb
das
and
or
xchg
aad
divl
aaa
push
je
lods
out
test
ds
arpl
add
jg
cs
xlat
arpl
lds
arpl
xchg
ss
jb
flds
cmp
or
pop
cmpl
and
push
ds
mov
xor
test
ljmp
sbb
les
hlt
fcmovnb
push
inc
aaa
rol
out
xor
pop
xchg
sbb
pusha
push
adc
ffreep
mov
shr
xor
je
rorb
mov
in
loope
cli
and
fcoml
stos
add
xor
rcr
out
std
imul
inc
stos
sbb
mov
xchg
mov
imul
into
loopne
cltd
pop
mov
and
mov
rolb
jmp
mov
sahf
ljmp
pop
jo
push
inc
jl
pop
or
mov
popa
and
mov
in
adc
lods
ret
popa
dec
xchg
sarl
push
push
push
pushf
dec
fistpll
jns
mov
jnp
test
jmp
dec
lods
mov
and
push
cmp
pop
decl
jecxz
out
jmp
mov
imul
add
mov
mov
pop
leave
ret
pop
or
repz
sti
ja
stos
mov
pop
inc
scas
test
add
cmpsb
imul
std
adc
cmc
dec
sbb
imul
mov
jno
push
dec
inc
xchg
dec
adcb
dec
pop
xchg
insl
add
repnz
dec
dec
ret
xor
cmp
mov
das
xor
mov
pop
lahf
jg
imulb
add
push
std
xchg
mov
sbb
aaa
subl
test
aad
pop
cltd
mov
mov
xchg
fisttps
xor
gs
rclb
cmp
xor
rcr
bnd
jl
push
pushf
add
add
sub
adc
cmp
out
pop
xchg
push
pop
xchg
add
popa
pop
jmp
inc
incb
add
dec
jno
cmp
icebp
jmp
ja
popw
insl
popa
sub
pop
icebp
outsl
ret
out
push
arpl
fcomps
jle
roll
adc
es
cltd
std
cltd
lds
fwait
stc
cmp
mov
in
incl
lret
mov
adc
xor
and
mov
adc
xchg
das
mov
dec
mov
mov
or
jg
dec
mov
sarl
out
push
lock
or
cmp
adc
push
dec
jge
xchg
add
sub
sub
addb
xchg
add
xchg
xchg
xchg
mov
xchg
lahf
fdiv
adc
fcoms
sbb
out
and
aad
popa
or
dec
loopne
and
pop
adc
decl
xor
cmp
fcompl
inc
and
mov
mov
and
sbb
call
in
insb
insl
sbb
iret
fldt
loopne
mov
sbb
add
adc
xchg
das
and
sub
add
jmp
ss
fistl
fistps
xchg
or
cld
add
mov
cmpl
lods
jnp
jecxz
inc
mov
jmp
fnstcw
pushw
in
inc
mov
xchg
add
das
and
aam
aam
ljmp
je
filds
pop
xorl
add
cld
in
out
dec
out
inc
loop
dec
inc
xchg
pop
push
sub
insb
sbb
jo
aam
ja
xor
cmp
rcrl
lds
inc
jns
or
nop
nop
in
xchg
int
mov
in
sbb
push
sub
aad
test
pop
stc
sub
in
jne
adc
nop
in
scas
fisttps
xchg
test
pop
xchg
xlat
cmp
xor
out
cmp
test
xchg
and
out
pop
push
stos
dec
add
imul
xchg
add
scas
sub
call
pop
iret
add
add
add
mov
sti
cmpsl
mov
dec
mov
arpl
add
dec
repnz
out
sub
mov
fisubl
std
adc
pop
cmpsl
sbb
mov
xor
je
cmp
pop
pop
repnz
and
sarl
test
out
adcl
or
or
das
test
dec
divb
stos
test
sbb
mov
cmc
mov
testb
idivb
shl
and
lahf
pop
aad
pushf
xor
icebp
mov
outsl
mov
pusha
push
push
ja
in
mov
mov
and
into
lcall
ja
shlb
inc
aaa
xchg
jmp
mov
add
out
lods
cmp
stc
stc
js
lret
mov
add
sub
jmp
sbb
mov
ret
sub
pop
subl
popf
xchg
xor
call
xchg
dec
pop
cmpsl
push
lock
jg
dec
int3
addb
test
out
cmpsb
subb
mov
mov
xor
lret
jmp
xor
jge
xchg
out
mov
mov
pop
out
sub
iret
cmc
fisttpll
mov
mov
mov
and
lds
fucom
xchg
jmp
inc
lods
lcall
inc
scas
test
mov
out
pop
add
or
mov
aas
cmpsb
jge
lret
push
jge
add
push
xor
gs
aaa
push
out
in
mov
add
add
xchg
fcmovnbe
icebp
pop
inc
orb
nop
out
shrb
mov
outsb
outsl
adc
scas
cmpl
mov
movsl
pop
mov
popa
popa
sbb
ret
shrb
ljmp
test
sub
xor
inc
mov
out
sub
ljmp
xor
jecxz
ds
call
mov
int
popa
arpl
or
mov
in
fiaddl
pop
insl
cltd
loope
cmp
dec
jle
add
and
or
ljmp
and
dec
xchg
mov
dec
inc
sub
das
jle
jg
imul
push
pop
inc
xchg
add
push
inc
pop
test
xchg
xchg
xor
and
xor
cmp
mov
icebp
add
xor
out
sbb
stos
adc
mov
mov
jnp
mov
sar
scas
mov
mov
sub
pop
push
pop
je
repnz
std
inc
mov
push
adcl
mov
rcll
fnstsw
addr16
cltd
shl
or
pop
sbb
test
mov
pop
call
popa
in
and
mov
loope
out
imul
jne
sbb
subb
je
gs
fldenv
stos
mov
pop
mov
add
addr16
and
mov
mov
push
push
xor
add
lods
add
add
popf
adc
inc
jmp
dec
int3
push
mov
popa
cs
push
mov
mov
mov
sbb
and
sbb
xchg
aaa
sbb
xchg
and
mov
push
xchg
adc
bound
adc
dec
pop
pop
outsl
cmp
out
push
es
sbb
sbb
and
xchg
in
dec
xchg
push
imul
shl
lock
ret
push
test
enter
adc
roll
mov
cmp
lock
mov
cwtl
inc
lcall
xor
dec
enter
jmp
add
ret
or
ret
lods
sub
mov
mov
lods
add
add
add
lds
xchg
jo
movsb
stos
mov
jmp
fs
lret
pop
clc
cmp
xor
mov
out
mov
mov
push
xorl
ljmp
and
mov
inc
fwait
ret
movsb
and
lcall
imul
stos
in
inc
sbb
mov
fstpl
cli
cmpsb
pop
movsb
cmp
inc
imul
mull
xor
test
and
lea
lahf
lahf
mov
mov
test
and
and
or
stos
add
add
ret
pop
iret
fst
enter
ficoms
fmuls
add
add
xor
and
sbb
jle
lea
xor
aaa
push
sti
xchg
xchg
push
dec
sbb
and
pushf
int3
arpl
std
mov
fldcw
mov
lret
sub
cli
mov
jnp
push
fstpt
pop
cli
or
lds
mov
or
mov
xor
push
popf
push
lds
sti
pop
lods
inc
movsb
sbb
mov
loope
or
fwait
dec
mov
lds
loop
stc
push
int
xchg
push
push
mov
sub
or
out
add
add
lock
out
repz
mov
ret
in
add
neg
cmp
add
push
movsb
sbb
push
dec
xchg
push
jge
popf
dec
cli
outsl
mov
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
jo
add
inc
add
jo
add
inc
add
jo
add
inc
add
jo
add
inc
add
addb
addb
addb
addb
addb
addb
addb
addb
data16
jp
jbe
ja
js
jno
arpl
inc
dec
outsl
pop
inc
jb
jns
inc
pop
dec
add
add
in
aad
add
aad
add
mov
jns
xor
dec
cmp
dec
js
cmp
dec
inc
dec
jae
inc
dec
xor
dec
pop
pop
pop
push
cmp
dec
xor
dec
cmp
dec
js
cmp
dec
inc
dec
mov
dec
xor
dec
pop
insl
pop
bound
dec
jns
xor
dec
cmp
dec
mov
dec
inc
dec
pop
jge
jb
subb
xchg
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
lea
outsl
xchg
outsb
xchg
jle
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
popf
pop
xchg
outsl
mov
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
lods
pop
mov
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lahf
dec
cmp
dec
inc
dec
pop
mov
outsb
ret
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lods
dec
cmp
dec
inc
dec
pop
int
ret
outsb
sarl
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
fstpl
outsl
loop
jecxz
repz
aas
dec
lea
dec
lahf
dec
cmp
dec
xor
dec
pop
in
pop
loop
repnz
repz
jns
jle
jns
cmp
jg
xor
dec
xor
dec
cmp
lods
dec
cmp
dec
inc
dec
pop
or
outsb
adc
jns
aas
dec
add
je
inc
add
inc
add
inc
add
aad
add
add
aad
add
inc
add
add
aad
add
test
pushf
clc
insb
aam
add
inc
add
inc
add
inc
add
aam
add
inc
add
or
cmpl
push
orl
add
cmp
ds
add
inc
imul
in
incb
aas
cli
mov
add
xchg
pushf
clc
mov
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
ljmp
add
jbe
mov
pushf
clc
sbb
push
pop
es
add
rolb
sbb
add
mov
inc
add
pushw
addr16
pushw
push
es
inc
add
dec
cmpsb
dec
lahf
dec
movsb
dec
insl
dec
bound
dec
add
cltd
dec
pushf
dec
fwait
dec
insl
dec
bound
dec
scas
dec
lods
dec
lahf
dec
mov
dec
xor
add
dec
test
dec
fwait
dec
xor
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
jae
jo
jno
jbe
ja
je
jne
mov
mov
lods
jge
jge
jns
mov
insl
enter
jb
test
hlt
test
test
fnstenv
mov
push
or
xlat
out
add
scas
adc
jge
fidivs
leave
hlt
cmpsb
cmp
mov
cmpsb
and
and
cmc
enter
adc
jno
jp
pop
aam
add
adc
imul
insb
push
imul
push
insb
inc
push
inc
jo
dec
dec
pop
jp
jbe
pop
jo
inc
push
jb
inc
je
inc
jae
dec
gs
inc
push
jno
ja
dec
dec
dec
inc
jno
jae
dec
inc
inc
inc
push
dec
insb
dec
jbe
pop
jbe
inc
fs
push
inc
add
inc
outsb
imul
push
push
push
jne
insl
push
push
jo
addr16
pop
add
push
pop
inc
inc
outsb
popa
imul
jne
dec
add
bound
dec
ja
dec
inc
inc
push
add
je
bound
dec
bound
pop
outsl
push
inc
gs
dec
js
inc
js
arpl
add
add
add
jb
outsl
pop
dec
push
dec
jns
js
outsb
pop
jae
push
arpl
push
push
je
addr16
dec
inc
insl
inc
inc
inc
arpl
push
inc
popa
push
dec
imul
push
push
imul
dec
jns
push
inc
jo
imul
fs
inc
push
push
ja
jp
push
arpl
dec
dec
data16
imul
dec
cmp
dec
lods
out
mov
js
cmc
xchg
lods
add
add
push
dec
mov
sub
lahf
hlt
add
adc
dec
jbe
cli
sbb
sbb
aam
mov
mov
xchg
xor
adc
test
subl
shll
mov
dec
sbb
inc
faddl
das
mov
imul
fcmovne
out
sbb
mov
xchg
pop
push
cmpsl
imul
sub
rorl
lret
mov
push
or
pop
jbe
scas
movsb
sbb
cmp
inc
pop
jb
jbe
shl
xchg
cmpl
add
xchg
lods
sub
popf
sub
add
add
add
add
mov
push
mov
xlat
push
and
in
inc
xchg
add
lods
add
add
xchg
inc
inc
and
jl
jns
xchg
fs
mov
jmp
fnsave
ror
gs
xor
dec
and
out
mov
addb
pop
int
mov
mov
xchg
lds
inc
inc
sbb
or
xlat
sbb
mov
loopne
sbb
pop
push
test
jae
out
xchg
cli
nop
xchg
stc
jecxz
lea
xchg
sub
cld
cmpsb
fucomip
pop
mov
movntps
rorb
inc
jne
sub
lahf
cmp
test
jl
pop
dec
addb
push
ds
loope
push
add
add
stos
pushl
xchg
push
icebp
out
xchg
add
lods
add
add
jp
mov
fwait
mov
adc
jb
fcmovnbe
and
into
pop
fldl
out
jg
stos
inc
sti
and
add
cmp
mov
rorl
dec
mov
clc
testb
pop
xor
fdivrl
std
mov
or
push
inc
adc
add
jno
and
daa
icebp
xlat
aad
or
add
outsl
aas
mov
sbb
mov
les
enter
sbb
inc
cmp
fwait
mov
push
mov
lret
divl
popa
jl
and
mov
jno
dec
aaa
stos
mov
cmp
cmp
cmp
in
fimuls
pop
das
loopne
cwtl
add
lods
add
add
jl
insb
hlt
bound
rcrb
add
test
jp
mov
addr16
lcall
jecxz
or
les
jbe
cmp
adcl
imul
cmp
rcll
cmp
mov
fwait
cmc
out
xchg
pushf
ret
call
lea
dec
lahf
andb
mov
pop
js
xor
jle
es
mov
jno
sub
add
mov
xchg
adc
sbbb
ror
test
push
jb
add
enter
leave
pop
sub
cmp
jo
cmp
and
add
fnstenv
std
negb
sub
mov
xchg
mov
lods
add
add
lock
pop
add
mov
repnz
test
hlt
and
jb
addr16
addr16
jbe
loop
pop
mov
loope
ficomps
mov
push
dec
iret
clc
div
inc
dec
mov
gs
dec
repz
inc
jl
aad
negl
push
mov
pop
clc
jecxz
mov
lcall
rcll
push
xchg
cmp
dec
imul
ret
dec
sbbb
pop
imul
xchg
inc
sub
dec
sbb
jne
outsl
cmp
cmp
nop
cli
lahf
xor
bound
gs
fldcw
jg
mov
stc
xchg
pop
add
add
xor
jb
inc
mov
shl
cltd
add
lods
add
add
out
mov
in
jge
sub
loope
sbb
xchg
and
lock
and
add
jne
and
xchg
ret
pop
xor
test
add
pop
nop
add
aaa
aam
xchg
lcall
xchg
dec
push
imull
mov
xor
inc
xchg
imul
mov
sbb
inc
jb
pop
mov
cltd
mov
popl
call
jo
adcl
xor
lods
jge
dec
daa
das
fnstenv
inc
dec
test
xchg
outsb
xor
add
dec
in
fwait
scas
fdiv
pop
sub
push
mov
add
add
mov
mov
jns
sub
xchg
mov
mov
lret
sbb
or
jne
aad
jns
repz
out
int
sbb
sbb
xchg
aas
fidivs
mov
loop
adc
aad
icebp
mov
mov
fs
pop
mov
xor
cmp
and
xor
cmp
xchg
cmpsl
mov
cmp
mov
lcall
test
xor
push
jnp
push
cld
inc
mov
push
push
jl
or
add
push
add
xor
jb
insl
xor
and
dec
fwait
add
lods
add
add
adc
mov
cwtl
xchg
inc
in
ret
ret
mov
and
cmp
add
push
std
sarb
mov
push
dec
xchg
out
aam
subl
shl
cmp
jno
xorb
jl
pusha
cmp
xor
stos
pop
add
sub
jae
pop
es
push
mulb
dec
iret
scas
out
mov
sbb
out
lret
or
sahf
mov
lret
xchg
xorl
std
movsl
pop
jecxz
jp
mov
fnstsw
inc
lds
inc
test
popa
or
pusha
and
mov
dec
add
add
push
add
mov
out
daa
shll
add
lods
add
add
adcl
dec
push
pop
pushf
inc
mov
imull
lods
sub
sub
fcmovbe
das
add
inc
subl
fs
inc
leave
pop
xor
jmp
mov
add
jl
fwait
std
mov
loop
mov
andb
mov
inc
or
ljmp
hlt
data16
shl
cmp
cmc
push
clc
cmpsb
sub
inc
ret
adc
dec
pop
jecxz
and
inc
xorb
out
ficoms
test
test
xor
movsl
into
lock
jmp
into
adc
add
add
mov
jmp
fimull
inc
int3
pushf
push
test
add
add
sub
das
pop
fsts
jnp
pop
inc
popf
fadds
movsb
sub
outsl
xchg
mov
fsubr
gs
push
shll
sarb
adc
outsl
loop
cmpb
sar
shl
mov
bound
les
sub
aad
sarl
fiaddl
jmp
fstl
dec
mov
ds
iret
and
inc
pop
xor
pop
lahf
scas
cwtl
dec
sub
lcall
or
loope
xor
jo
in
loop
xchg
jecxz
inc
adc
or
cmpsb
loope
and
jnp,pt
jbe
fldenv
push
sub
lahf
fwait
pop
outsl
ret
mov
mov
add
add
pop
iret
pop
aad
ss
dec
push
mov
add
xchg
jns
jl
xchg
test
pop
cmpsb
shll
in
or
and
adc
loop
dec
addr16
lods
add
mov
push
fcmovbe
add
add
nop
adc
icebp
hlt
adc
mov
scas
xor
push
xchg
mov
or
push
mov
aad
xor
xchg
shl
mov
cmpsb
cmp
dec
mov
push
xlat
pop
into
xor
out
imul
sbb
stc
cld
enter
pop
jb
out
pop
mov
dec
pop
sarb
popa
mov
aam
push
ljmp
add
fwait
test
jg
sbb
or
sahf
add
lods
add
add
fidivs
mov
std
cli
out
push
call
scas
cmp
sbb
mov
mov
shll
push
movsl
mov
jmp
push
push
push
fistl
mov
stc
push
testl
jo
push
xchg
sbb
dec
xor
xor
rcrl
in
mov
add
fistps
ljmp
cmp
xor
subl
mov
cmp
outsb
sub
adc
push
lods
mov
out
adc
fisttpll
pop
cmp
cmc
adc
fidivrl
ljmp
add
add
add
add
lock
jle
repz
dec
adc
sahf
add
lods
add
add
jnp
fnstsw
jbe
jns
xchg
add
push
xor
pop
cltd
cmpsl
push
shrb
fildl
mov
cmp
movsl
sub
nop
popa
and
xor
jge
es
inc
cmp
add
push
jbe
lret
addb
bnd
addb
out
pusha
in
xor
dec
or
mov
je
xor
out
js
jecxz
cmp
inc
lahf
outsb
xlat
cli
cmp
mov
inc
push
jae
or
push
push
and
xchg
sahf
mov
push
adc
push
mov
dec
dec
push
pop
pusha
push
inc
inc
add
add
adc
adc
mov
lds
pop
lahf
add
lods
add
add
negl
mov
in
pusha
mov
test
add
stc
int3
in
jnp
push
xchg
mov
jge
mov
mov
adc
mov
xor
outsb
push
orl
jge
hlt
xor
xlat
add
add
or
mov
jge
sbbb
cmp
scas
or
das
je
lds
fimuls
das
popa
imul
xchg
loope
jae
and
aam
div
cmp
jns
pop
and
jmp
mov
push
scas
mov
adc
dec
xor
rol
mov
adc
add
add
mov
lock
mov
ror
and
add
or
sub
cmp
sbbb
int3
and
mov
into
add
xchg
sbb
push
lahf
cmpsl
mov
hlt
add
inc
popa
push
rclb
idiv
pushf
iret
sub
sbb
fidivrl
mov
psrld
pop
jb
out
xchg
and
bound
subl
adc
push
mov
sub
mul
retw
mov
lods
aad
cld
jge
sub
or
xor
enter
inc
push
cmp
add
fs
scas
ds
mov
add
sqrtps
cmc
das
sbb
xchg
iret
mul
cltd
ret
add
lods
add
add
fidivl
inc
xchg
lret
daa
pop
in
adc
imul
mov
pop
mov
add
mov
inc
repz
xlat
mov
inc
ljmp
sbb
out
dec
cmp
and
sarb
jmp
pop
add
ljmp
shlb
fwait
loop
orw
inc
nop
lock
les
test
xchg
inc
xchg
sbb
mov
je
sub
out
push
out
std
sub
jno
in
mov
jp
cmpsb
inc
or
jns
add
add
int
xchg
inc
cmc
sti
fildll
mov
mov
add
sbb
imul
sbb
cmp
xchg
xchg
mov
add
jns
idivb
cs
jle
bound
movsb
jge
aam
add
pop
int3
jge
xchg
dec
lcall
cvtpi2ps
sbb
std
and
popf
mov
bound
test
sahf
inc
adc
enter
iret
inc
dec
xlat
mov
call
cmp
mov
inc
mov
insb
addl
pop
ja
jge
dec
sarb
and
in
rorl
or
out
adc
js
ret
popa
dec
insl
cmpsl
mov
add
fs
testl
adc
adc
add
roll
pop
jnp
cltd
mov
jb
js
orl
stos
xor
fdivs
adc
std
mov
dec
inc
fiadds
in
xchg
dec
jmp
inc
stc
stos
je
adc
shlb
test
xchg
pop
clc
pop
sub
push
scas
jns
movsl
out
sub
dec
push
pop
scas
push
jb
jle
xor
addr16
jg
xchg
jne
cs
pop
sub
jmp
into
push
xchg
in
cmpsb
mov
ja
cld
out
test
xor
sub
add
daa
push
imul
pop
icebp
xor
add
fs
loopne
out
inc
jmp
into
insl
xor
jmp
call
cltd
std
insb
and
es
dec
data16
pushl
hlt
rcrl
lahf
bound
mov
das
push
insl
xchg
add
inc
pop
sbb
jno
in
dec
push
cmp
jmp
sbb
stos
push
fst
mov
je
push
push
mov
aas
sub
xchg
test
or
test
lock
sub
insb
pop
ss
shr
pop
mov
fcoml
lret
int
jae
cwtl
sbb
rcrb
mov
xlat
adc
adc
add
add
jne
jg
clc
cs
push
push
add
lods
add
add
cmp
enter
out
xor
lret
mov
jmp
jle
dec
lea
mov
push
shl
mov
out
fnstcw
xor
in
clc
xor
movsl
add
imul
mov
add
cltd
mov
jl
and
mov
and
stos
mov
mov
leave
es
adc
or
add
push
dec
popf
repz
lds
mov
pop
pop
cmpl
mov
add
imul
add
addr16
jbe
add
or
dec
mov
je
lcall
add
lods
add
add
sbbb
cli
leave
shlb
in
add
inc
sub
push
insl
loopne
subb
xchg
inc
pextrw
aas
push
hlt
mov
jmp
jg
mov
mov
leave
adc
insl
xor
hlt
mov
fninit
daa
mov
test
cmpsl
pop
xor
aam
rcl
jge
fbld
xchg
adc
push
sahf
jl
pop
mov
testl
cmp
dec
aam
sub
int3
ds
jg
pop
sub
cmp
imul
adc
add
out
jo
rcll
add
fists
dec
mov
xchg
adc
and
push
les
add
inc
leave
inc
or
xor
push
sahf
xchg
mov
imul
sbb
int3
or
jp
mov
loopne
aam
lds
xlat
push
notb
frstor
jno
or
mov
jecxz
clc
fucomp
inc
fwait
xor
js
xlat
iret
std
lds
and
and
and
aas
sahf
andl
iret
ss
cmp
cld
cld
add
in
bound
dec
repnz
pop
ljmp
andb
mov
movsl
or
mov
das
outsb
sar
inc
ss
adc
sub
mov
mov
add
add
add
add
fisttps
push
cmpsl
fstpl
jno
add
lods
add
add
scas
mov
rolb
and
movsb
pushf
sub
shlb
in
jns
jl
pop
popa
ljmp
ja
xchg
mov
ret
cmp
in
mov
inc
iret
imul
orb
push
jl
or
add
inc
lock
in
sub
repnz
lds
add
cmpsl
scas
jmp
pop
sbb
cs
mov
scas
push
int3
dec
into
inc
fisubs
out
adc
dec
xchg
jmp
adc
in
sbb
fstpt
mov
out
out
gs
aad
mov
enter
add
jle
out
sbb
mov
lea
add
mov
cmp
mov
repnz
out
jecxz
stos
jae
in
in
sbb
push
insl
jmp
xor
push
dec
into
loopne
fbstp
xchg
dec
pop
repz
sub
add
and
dec
das
insl
out
inc
aaa
out
cmc
pop
push
cli
cmpsb
leave
ret
push
cs
imul
jbe
mov
ss
pop
in
call
add
lea
stos
lea
movsl
and
sub
movb
inc
xchg
and
push
mov
cld
cwtl
xchg
out
jecxz
inc
push
mov
jb
mov
sub
imul
push
add
add
and
cmp
cmp
xlat
lret
lea
add
in
scas
adc
jl
fadds
adc
iret
xchg
ss
es
mov
jno
adc
in
and
inc
leave
out
adc
dec
je
repz
pop
mov
sub
stc
pop
imul
test
shll
test
shl
mov
inc
andl
cmpl
pop
cltd
jno
mov
mov
adc
inc
shrb
sub
cmp
and
push
loopne
cmp
mov
call
orl
mov
fisttps
jns
andl
rorb
insb
jo
iret
jo
loopne
add
add
popf
aam
cs
js
add
lods
add
add
repz
xchg
cmc
dec
test
test
push
pop
shlb
mov
jns
jle
mov
arpl
mov
jae
inc
jle
imul
sbb
fldt
xchg
adc
mov
mov
xor
cmp
mov
fdivs
mov
call
pop
inc
dec
and
sub
or
sbb
pop
pop
pusha
mov
and
stos
jns
sbb
ret
adc
rcll
gs
sbb
add
cmp
cwtl
sahf
sub
pusha
xor
jnp
lock
xchg
aas
xchg
add
hlt
mov
jbe
hlt
mov
and
cmpsb
js
adc
and
add
add
pop
stos
pushf
push
cmp
popf
mov
mov
pop
xor
test
ret
xor
mov
es
jo
es
cmp
sub
push
dec
push
dec
mov
pushf
test
jle
sub
pop
mov
xor
imulb
xchg
jae
pop
pop
mov
inc
out
rol
ljmp
pop
jp
mov
sarl
popf
test
cmpl
imul
xor
mov
sub
lret
lcall
cmpsl
ja
in
xor
add
xor
into
mov
sub
out
pusha
imul
lods
add
add
movsl
sar
outsl
and
dec
sbb
sar
xor
fidivrl
loop
test
ret
aam
cltd
call
sub
das
rol
inc
lahf
stos
out
fnstenv
adc
pop
cli
dec
popa
pop
mov
in
inc
out
test
mov
loop
sti
sbb
dec
xchg
xor
mov
mov
rcrb
in
imull
mov
sbb
inc
xchg
mov
xor
int
in
fwait
jnp
pushf
fisubs
shrl
sbb
pop
and
sbb
sar
ss
dec
push
xor
in
popf
cmp
pushl
add
fucomi
outsb
and
pop
mov
jg
add
lods
add
add
stos
test
sub
cmpsl
mov
outsb
mov
icebp
pop
jle
mov
outsw
lahf
rcrl
aam
insl
mov
mov
or
dec
dec
and
les
or
adc
leave
cwtl
mov
sub
sbb
ret
jle
and
pop
lahf
into
cld
xchg
xor
lock
imul
xor
add
pop
ss
outsb
ds
and
push
or
jnp
lds
pop
subb
cwtl
pop
mov
jp
xor
lods
ljmp
iret
test
stc
xor
add
add
mov
and
dec
sub
add
lods
add
add
mov
addr16
mov
jnp
lea
lods
stc
movsl
cwtl
das
shll
roll
out
adc
cmp
cli
sub
mov
xchg
daa
push
pusha
imul
pop
int
nop
fstps
bound
adc
mov
adc
in
jmp
cmpsl
lahf
push
cmp
movsb
jne
or
rcr
ja
push
xor
stos
iret
fisubrl
and
mov
fwait
adcb
outsl
cmp
jl
and
in
jbe
jno
mov
call
cmp
fnsave
sub
fsubr
mov
fldenv
hlt
cli
jo
jno
data16
mov
mov
and
jg
call
into
inc
mov
addr16
adc
xchg
add
lods
add
add
jg
dec
aam
adc
cmc
insl
pop
out
and
cmp
lahf
pop
mov
jl
mov
push
in
sbb
ret
lods
inc
or
lea
das
xchg
cmp
mov
adc
adc
rcrb
test
rclb
idivl
gs
xchg
fucom
leave
sub
outsl
push
mov
xlat
pop
lret
mov
push
and
mov
lock
jno
ss
adc
dec
loop
jecxz
out
inc
pushf
daa
lahf
outsb
rcrb
jns
popf
ret
idivl
cmp
dec
fadds
repz
add
sub
sub
imul
add
xchg
fidivs
xchg
mov
pop
int3
es
or
mov
popa
loopne
mov
lahf
jecxz
dec
in
push
cld
mov
iret
ljmp
cs
lcall
insl
lahf
xor
adc
and
sahf
xchg
xor
int3
imul
inc
out
lock
sub
cmp
in
enter
cmp
xor
shrb
scas
xchg
mov
push
leave
add
dec
add
and
cmp
add
xor
xchg
leave
je
sbb
notb
xchg
loopne
add
add
int3
sbb
out
loopne
lods
test
xchg
add
lods
add
add
fwait
sti
js
xchg
in
dec
dec
repz
add
into
shlb
movsb
in
lods
test
das
movb
cmp
test
out
enter
test
xchg
mov
outsl
xchg
lock
add
cmp
mov
mov
cmp
cmp
repz
jae
add
xchg
push
iret
movb
mov
xchg
out
clc
push
mov
cmc
sub
enter
ja
or
dec
and
movsb
mov
jb
cmp
int3
mov
cmp
bound
push
idivl
cltd
push
push
pop
pop
pop
lock
pop
add
add
test
fildll
sub
adc
loopne
add
lods
add
add
mov
cmp
leave
pop
imul
sbb
adc
mov
mov
std
adc
sahf
aaa
into
dec
xor
push
js
sti
jge
bnd
mov
lock
pop
jo
repnz
test
lret
xchg
je
or
aaa
scas
mov
ja
cmp
sahf
loopne
pop
push
outsl
cmp
sub
cmp
out
xchg
xchg
mov
xchg
js
mov
xor
fsubl
xorb
insl
inc
aam
imulb
repnz
add
lods
fcomi
sarb
add
add
add
lods
add
add
nop
sbb
adc
insb
sub
mov
push
dec
test
filds
loope
movl
leave
inc
insb
xchg
out
les
out
test
push
repz
mov
mov
or
adcb
sbb
idiv
sub
sub
shll
fwait
or
rol
jg
icebp
inc
insl
les
lods
int3
ret
aaa
imul
int
out
pop
loope
scas
push
sti
sub
push
imull
mov
add
andl
les
push
jl
cmp
jns
dec
int
aaa
xchg
pop
xorb
inc
std
loop
ljmpw
pop
imul
add
add
add
divl
dec
cmp
dec
mov
xchg
add
lods
add
add
testl
dec
shl
movsl
andb
ljmp
push
ljmp
xchg
mov
xchg
pop
sar
mov
call
dec
filds
pop
add
add
ret
int3
pop
push
in
inc
fildl
push
das
test
sbbl
sahf
mov
out
adc
jno
cltd
dec
pop
jb
popf
cmp
dec
push
cli
xchg
fnstenv
aad
fsubrl
arpl
pop
stc
mov
dec
jmp
insl
push
fsubrl
movsl
add
mov
sbb
mov
push
nop
mov
add
add
arpl
jge
mov
daa
sub
cmc
daa
out
add
lods
add
add
mov
arpl
cltd
jmp
in
xchg
xchg
mov
fwait
rcrb
int
add
pushf
vcvtsi2sd
orl
loop
sbb
fs
pop
lods
or
ljmp
add
mov
or
and
insb
fstl
push
adc
stc
jo
push
ret
int
or
sbb
and
sbb
mov
jo
jnp
std
and
inc
jmp
pop
repz
nop
jb
jl
insl
pop
xchg
push
xchg
stos
insb
loopne
sub
aam
add
add
ss
xor
and
adc
add
lods
adc
sub
add
cmpsl
push
jecxz
mov
dec
adc
inc
sub
popf
popa
fstps
inc
inc
inc
lods
std
mov
cmc
gs
dec
push
leave
jle
mov
or
scas
mov
mov
mov
dec
incl
push
sub
pushf
shll
js
int3
mov
or
or
aaa
push
xchg
outsb
jbe
inc
jl
push
adc
cmp
jmp
addr16
sub
test
jg
adc
mov
mov
add
fcom
mov
lods
xchg
sub
enter
aaa
out
mul
aaa
cmc
xchg
lcall
sbb
add
stc
jmp
dec
mov
insl
cltd
js
enter
ret
cs
pop
add
clc
scas
loop
mov
adc
fcmovnb
das
dec
dec
jge
cld
repz
nop
push
xor
push
outsb
adc
jo
push
adc
scas
jno
jnp
out
pop
andl
stos
fldenv
xchg
adc
push
or
jecxz
in
out
and
and
hlt
add
pop
adcl
pop
dec
cmp
pop
push
mov
jge
popf
adc
leave
pusha
icebp
test
in
sbb
lock
add
aad
out
fucomip
ss
cmp
fwait
ja
movsb
add
lods
add
add
repnz
sub
dec
je,pt
pop
cmp
or
fbstp
jp
cld
sbb
movl
mov
sbb
adc
aad
nop
mov
addr16
dec
divl
cmpsb
stos
lret
dec
adc
out
scas
pop
mov
lret
push
vpunpcklqdq
cltd
or
jno
or
sub
mov
mov
adc
adc
cs
cmc
ds
dec
movsl
gs
data16
add
rorl
push
xor
aaa
push
cli
xor
shl
aam
push
mov
sbb
sbbl
add
add
add
outsb
jbe
lret
outsb
negb
xchg
xchg
jb
add
lods
add
add
sub
arpl
js
imul
xorb
pop
test
shll
mov
add
int
hlt
lods
rcll
mov
mov
ljmp
xchg
mov
mov
rcl
ja
xchg
xlat
push
adc
loope
mov
loope
push
mov
cmp
or
in
repnz
negl
inc
push
xchg
cmp
jne
stos
ja
xchg
pop
mov
jnp
andb
jmp
subl
push
loope
subb
mov
cmp
add
add
add
add
push
les
in
lahf
sti
ja
rcll
cmp
cmpsb
add
lods
add
add
fwait
std
pop
les
notl
out
cwtl
subb
inc
fwait
pop
jmp
sbb
and
jae
add
outsl
jae
ss
aad
enter
sbbl
addl
cmc
jg
dec
pop
loop
ficoml
fisttps
subl
loop
jno
dec
lds
xor
inc
ljmp
inc
ss
imul
cli
xor
pop
add
stos
jb
ret
xchg
aad
jg
mov
cmc
fstps
adc
clc
mov
sub
int
sarb
cli
cli
shlb
scas
mov
sub
add
xchg
cmpl
push
loopne
lcall
add
lods
add
add
and
test
add
lods
jne
xchg
scas
clc
imull
cmpsb
adc
js,pt
aaa
jge
insl
jl
shlb
adc
ss
repnz
xor
test
or
addr16
ja
add
push
jg
testb
sbb
std
lahf
ljmp
and
add
jmp
adc
js
mov
orb
movsb
dec
jne
dec
int3
pop
in
xchg
xchg
pop
insl
jne
out
stc
aas
mov
sbb
mov
push
jl
rcr
into
ja
subl
jno
add
add
fincstp
shl
frstor
pop
dec
pushf
rorl
movsb
jns
add
lods
add
add
pusha
mov
cmc
pop
push
and
dec
clc
jb
jge
or
adc
rorl
pop
insb
xor
int3
outsl
aas
cs
enter
add
nop
test
mov
push
jae
lock
dec
dec
cli
add
inc
and
sbb
les
xchg
pop
push
dec
mov
rolb
jno
mov
pop
mov
mov
enter
out
lock
xchg
xchg
mov
pop
cs
lods
addl
out
or
faddp
imulb
divl
stos
push
push
lods
loopne
dec
push
mov
sub
mov
mov
add
add
aam
fnstsw
out
fcmovu
in
add
loop
test
add
xchg
in
stos
mov
or
test
pop
jle
and
adc
repz
push
jle,pt
dec
imul
dec
push
outsb
push
pop
add
mov
int
icebp
nop
ret
das
add
outsb
inc
sahf
js
out
mov
mov
dec
addl
loopne
mov
cmpl
mov
popf
js
and
sub
sbb
add
cmp
mov
fs
frstor
pop
ja
mov
dec
mov
je
insb
inc
cli
divb
add
sbb
inc
jecxz
mov
pop
gs
shrl
add
not
leave
call
push
adc
inc
xchg
ljmp
fisubrs
xchg
sub
stos
movsb
dec
sub
and
cmp
xchg
mov
aam
adc
xchg
add
inc
cmc
daa
cwtl
adc
fistl
or
mov
push
enter
mov
mov
adc
jmp
inc
pop
push
and
push
mov
or
jo
mov
cld
scas
mov
dec
ja
orl
and
aam
cmp
sti
inc
cmpsb
xlat
jecxz
sbb
sar
and
cwtl
add
and
movsb
jge
xor
call
sbb
outsb
and
add
mov
icebp
and
arpl
subb
add
push
push
push
lret
inc
lcall
push
sub
jle
push
bound
test
sbb
int3
dec
inc
int3
lahf
insl
enter
hlt
inc
shrb
inc
test
repnz
pop
xor
push
inc
mov
mov
call
xchg
setno
fsubrs
mov
repz
mov
sbb
jecxz
jnp
popf
loope
mov
insl
sti
push
xor
dec
push
add
mov
sub
sar
mov
popf
xchg
shr
cli
cltd
fsubs
push
pop
mov
shlb
dec
lods
movsb
dec
pop
or
lods
clc
add
add
xlat
repz
das
cli
fists
dec
es
or
stos
add
lods
add
add
add
push
or
adc
adc
mov
xchg
pop
xor
xchg
outsb
jmp
dec
mov
sbb
je
lahf
push
xchg
sbb
add
push
fsubl
inc
mov
jecxz
mov
outsb
push
and
lods
ss
xchg
adc
subl
sub
xchg
lahf
sbb
add
les
inc
dec
dec
repz
push
sub
sbb
fwait
data16
insl
test
pushf
fmull
lds
rcrb
xchg
push
adc
mov
fs
or
push
push
xchg
inc
inc
add
add
mov
push
adc
cwtl
out
adc
js
fisubrl
add
mov
push
mov
or
pop
fmulp
cmp
pusha
adc
andl
mov
stc
sbb
push
in
push
jne
ja
cwtl
or
lds
sub
mov
inc
push
mov
imul
dec
nop
es
in
out
addr16
push
mov
das
ss
fildll
rcrl
repnz
femms
fstps
aaa
dec
imul
sub
cmp
imul
xor
and
rorl
sub
aam
int
inc
push
xchg
imul
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
dec
pop
pop
dec
inc
xor
push
push
inc
cmp
pop
ss
pop
add
inc
pop
inc
pop
push
dec
inc
pop
cmp
dec
add
cmp
xor
aaa
inc
inc
pop
xor
pop
push
push
inc
push
cmp
push
push
inc
xor
xor
add
cmp
dec
cmp
pop
dec
xor
add
xor
pop
inc
dec
pop
pop
xor
pop
inc
xor
inc
dec
cmp
inc
cmp
ss
dec
add
xor
dec
xor
push
add
aaa
pop
push
dec
dec
cmp
inc
xor
add
pop
add
dec
add
xor
pop
add
add
push
add
dec
add
add
inc
add
add
xor
pop
add
xor
dec
add
push
add
add
cmp
push
add
push
add
add
add
add
add
dec
add
push
add
add
add
add
add
dec
add
add
pop
add
add
push
add
add
pop
add
xor
xor
push
add
add
add
add
inc
add
xor
cmp
add
add
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
lcall
add
add
add
add
add
add
add
add
add
cmp
add
add
jb
push
imul
aas
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
imul
