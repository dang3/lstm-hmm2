push
mov
sub
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
adc
push
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
pushl
pushl
push
call
xor
or
dec
mov
jmp
mov
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
and
mov
sbb
andl
or
movl
xor
or
xor
movl
mov
add
mov
add
xor
add
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
orl
xorl
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
subl
xor
dec
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
addl
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
mov
mov
mov
xor
mov
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
jmp
out
add
outsb
sbbl
hlt
pop
sti
inc
or
bound
pop
bound
sub
pop
add
pop
jne
lods
jb
jno
iret
lret
hlt
inc
aam
cltd
add
pop
jno
mov
daa
mov
shrb
adc
and
dec
fbstp
mov
jo
dec
pushf
pop
jae
sti
push
push
pop
cmp
add
push
jge
mov
mov
stc
inc
popf
xchg
in
fstpl
jg
cmp
mov
dec
loop
inc
orb
inc
pop
mov
xor
sbb
inc
add
dec
nop
xchg
dec
mov
pop
les
sub
vpsubusw
mov
test
bound
in
push
subl
imul
orl
lret
mov
push
jp
inc
or
cld
fcoml
loopne
test
pushf
cmp
pop
cld
mov
lret
test
xchg
test
sbb
sahf
jmp
in
movsl
push
and
cmp
sbb
xor
xlat
outsb
cmp
in
loopne
in
sar
sbb
je
push
cmp
adc
push
in
jmp
push
cmp
mov
pop
loope
adc
pop
pop
xor
xor
push
ret
pop
repz
bound
test
pop
inc
jbe
mov
jne
cltd
cmpsb
lods
xchg
mov
sbb
jne
adc
fmull
sbbb
sub
loop
popa
adc
into
jp
adc
pop
movsl
fmul
test
adc
push
je
out
pop
pop
mov
aas
leave
imulb
push
data16
xor
dec
cwtl
repnz
orl
leave
sub
cmc
pusha
pmullw
sbb
inc
imul
out
xchg
dec
fwait
stos
fisubrl
into
pop
stos
ds
jle
cltd
repz
movsl
jbe
add
addr16
nop
push
scas
out
out
push
cmp
jmp
mov
int3
fucom
dec
mov
sbb
sarb
testl
fistpl
outsl
sbb
jae
out
test
jo
addr16
and
jmp
cmpsb
mov
xchg
dec
inc
inc
push
jmp
jne
sub
xchg
inc
jecxz
dec
pop
jle
mov
xor
jg
dec
das
mov
mov
xor
lds
pop
jl
adc
and
out
leave
pop
push
pop
aas
xor
jmp
mov
mov
daa
pop
or
pusha
imul
pop
mov
xchg
xor
xchg
frstors
mov
push
xchg
outsb
sbb
popa
mov
adc
mul
jae
xchg
and
push
icebp
ja
lahf
sbb
sbb
aam
out
outsl
out
je
je
add
inc
cmc
mov
imul
repnz
pop
adcb
cmp
xchg
push
jb
push
jb
add
test
stc
dec
movsb
divb
mov
push
int
sub
repnz
and
fstps
pop
add
adc
xchg
loop
dec
cmp
mov
xlat
in
xchg
dec
xchg
pushl
push
or
je
mov
sub
call
in
mov
std
out
fldt
and
inc
cltd
sbb
add
pop
out
mov
sti
xor
push
push
lock
in
xor
xchg
cmp
sbb
popf
imull
pop
lret
push
pop
popf
xor
cmp
xchg
cmpsb
pop
xchg
pop
sub
paddsw
and
push
lret
xchg
dec
mov
stos
push
icebp
pop
in
out
inc
push
or
fldt
out
mov
cmp
xchg
imul
mov
insl
inc
dec
popa
movsl
cmc
jmp
popa
jne
cwtl
or
mov
ljmp
bound
outsb
xor
sbb
push
shll
clc
in
push
sub
rcrb
filds
jo
bound
rclb
jl
push
out
insl
in
or
mov
pop
sub
mov
sbb
push
sbb
xchg
and
mov
xlat
mov
pop
xchg
jb
lcall
sbb
pushf
inc
aas
shrl
leave
int
pop
xchg
fs
loope
shrl
pop
jno
and
mov
dec
adc
rcl
jno
mov
inc
gs
and
imul
repz
out
lcall
xor
push
xchg
add
dec
sbb
mov
fcoml
out
daa
pop
xor
lret
push
pop
mov
test
add
imul
lods
jbe
out
or
mov
jecxz
rorb
xor
xor
mov
pop
mov
pop
insl
xor
mov
sub
or
dec
or
sbb
mov
or
in
or
in
sub
lods
shlb
mov
or
and
dec
addl
jo
sub
shlb
push
call
mov
xchg
sub
push
ret
cmp
inc
dec
lock
loope
add
fistpl
hlt
inc
inc
shll
cli
ljmp
fnsave
loope
lea
cmp
jmp
and
outsl
loop
cmp
ja
ljmp
mov
xor
sbb
int
push
push
nop
mov
jg
sbb
lret
jne
inc
cmp
sbb
push
sti
mov
rclb
jae
add
inc
cld
lock
movsb
shll
in
aam
loope
xor
ficoml
push
pop
push
pop
and
jns
stos
jae
jl
std
into
inc
lret
fcmove
cmp
sbb
push
setbe
test
je
lret
lahf
fnsave
jge
lock
cld
lods
pop
mov
sbb
fwait
nop
sbb
icebp
inc
jge
sbb
daa
in
mov
lahf
orl
sahf
xchg
adc
lea
lods
test
lret
cmp
and
cmp
fisubrs
addr16
pop
mov
push
lock
and
xor
das
and
out
jle
inc
cmp
sbbb
jae
fbld
inc
add
push
setg
or
mov
jle
leave
or
push
push
push
ds
add
xchg
xchg
jb
aad
jg
cltd
ficompl
repnz
cwtl
lcall
adc
jnp
mov
inc
sbb
sbb
xor
mov
call
test
out
sbbl
ds
in
cmp
fdivs
push
pop
xchg
push
or
movsl
xor
sub
cmp
lea
xchg
cmc
out
fwait
mov
std
push
sub
pop
std
gs
ds
imul
lock
cmpsl
mov
pop
out
in
cmp
push
out
push
aas
fdivs
mov
push
jne
xor
push
fcoms
push
jbe
pop
insl
or
xchg
in
jnp
fwait
adc
and
cltd
in
mov
sub
jne
sub
loope
or
lods
leave
enter
cli
into
inc
sahf
scas
push
sub
faddp
loop
xor
mov
fdivs
outsb
cmp
push
sub
gs
pop
jmp
ror
sahf
mov
jbe
fcmovbe
rclb
adc
rcrl
lret
daa
mov
cmp
stos
dec
shr
and
dec
pushf
ja
sbb
mov
aad
jae
mov
imul
filds
add
dec
hlt
lods
mov
icebp
outsl
imul
inc
push
stos
jmp
dec
shll
enter
div
js
inc
testb
sbb
dec
pop
mov
mov
lahf
mov
jae
jo
std
movl
sub
sub
xchg
aam
int
xor
xor
call
inc
negl
adc
and
movsb
and
dec
imul
xchg
repz
cltd
addr16
cmp
imul
mov
jg
sub
cvtps2pi
inc
bound
cs
sub
movsb
fcomip
xchg
hlt
xchg
xchg
inc
push
ffreep
dec
adc
jns
push
mov
cld
mov
push
mov
push
out
cmpsl
xchg
xchg
sub
es
stos
mov
pop
jg
push
sbb
dec
add
lock
jbe
sub
inc
fs
pop
test
lds
fdivp
fsts
orl
cmp
inc
add
in
mov
dec
pop
insl
loop
dec
add
pop
imul
aaa
inc
mov
jg
pop
mov
sbb
add
pushf
and
sbb
pop
push
out
into
sar
cmc
std
sar
cmp
mov
jp
rcrb
in
sub
es
push
cmp
pop
test
sub
pushf
push
and
pop
leave
fyl2xp1
iret
lret
and
push
push
add
adc
shlb
add
outsl
aaa
cli
enter
jbe
mov
cmp
rorl
loope
mov
iret
lret
ljmp
push
push
or
jg
fisubrl
fstpt
insb
pop
setp
and
mov
cmp
movsl
jle
movsb
jle
sub
popf
cmpsl
jb
mov
pushf
in
xor
cli
xchg
ret
movsl
cltd
mov
adc
fbstp
inc
sbb
jmp
lea
jne
fs
inc
nop
inc
or
and
xlat
dec
cmc
iret
inc
sbb
fcmovnb
push
jge
mov
xor
lea
and
bound
xchg
pusha
push
lock
mov
cs
ds
fistpl
mov
inc
sub
repz
dec
cmpsl
imul
sbb
mov
xchg
push
jae
push
imul
outsb
popf
add
leave
cmp
add
dec
btr
pandn
mov
and
inc
roll
xchg
ret
pop
daa
shrl
push
and
cmc
mov
arpl
inc
or
mov
and
xor
add
test
ret
jns
scas
hlt
sub
mov
inc
int3
lcall
xchg
xlat
in
out
pop
bound
shl
jge
cmp
inc
das
jmp
fcmovnbe
shll
arpl
js
popa
cmpsl
icebp
andl
cli
sbb
pop
addr16
sub
xor
xor
mov
outsl
pop
nop
jge
imul
add
lds
cmp
aaa
fmul
daa
cmc
sub
dec
cmp
xchg
imul
cmc
addr16
stos
loopne
push
xor
pop
es
jl
and
push
push
mov
push
push
pusha
pop
push
into
lret
mov
shll
test
pop
pop
mov
push
xchg
dec
jne
leave
pop
xor
push
scas
dec
push
mov
adcl
cmp
gs
lahf
adc
fwait
mov
pop
fnstcw
scas
jge
and
jp
push
xchg
ja
push
and
test
lcall
cmpsb
negl
inc
xlat
test
negb
cld
push
fists
dec
jnp
mov
stos
adc
push
mov
bound
outsl
andl
xchg
arpl
rcrb
add
ljmp
push
and
mov
xlat
outsb
add
stc
rorl
sub
cmpsl
fsubrs
out
cmp
sti
cmpsb
scas
sbb
or
out
cmpsb
xor
dec
mov
or
sti
in
xor
iret
repnz
stos
mov
aaa
shrb
lcall
jle
rcll
add
cmp
in
sub
pop
jae
flds
xor
std
jge
push
pusha
pop
mov
add
fs
arpl
lsl
loop
stos
sub
or
dec
jbe
mov
lret
jp
jae
ret
mov
icebp
in
xlat
sub
jecxz
dec
push
nop
adc
nop
in
cmp
test
pop
pcmpgtd
lea
push
test
adc
or
cmp
jg
adc
adc
sub
jge
fdivr
lcall
lret
adc
fs
sbb
pop
mov
add
insl
cltd
test
nop
mov
mov
fsubl
jo
mov
adc
movsl
in
ret
or
add
or
imul
and
filds
loope
std
sub
or
xor
xchg
sbb
in
mov
out
adc
test
sbb
sbb
or
push
xchg
cli
icebp
mov
cmc
shl
fists
lea
mov
int3
gs
faddp
or
cs
pop
and
pop
jl
in
lock
and
or
sbb
xchg
pop
dec
movsl
pop
sbb
and
push
push
jb
call
mov
cmp
jo
sub
call
test
jo
lea
cmpsb
test
sti
mov
rcrl
and
sti
cmp
push
enter
fldlg2
shrb
hlt
lcall
movsbl
and
adc
push
sub
and
dec
mov
int3
jge
adc
cltd
outsb
push
cwtl
cs
negb
ds
hlt
leave
dec
mov
js
mov
int
mov
cmpl
pop
pop
xor
call
jns
ret
adc
sqrtps
jecxz
cmpb
xchg
je
out
cmp
daa
jmp
imul
pop
int
pop
cs
fs
inc
mov
mov
fistps
out
sub
mov
ret
mov
scas
xlat
jb
or
stos
out
test
int3
mov
mov
aas
mov
mov
cwtl
pop
fists
outsl
subl
inc
negl
mov
js
lods
repz
ret
cld
scas
add
push
push
jp
xor
rorb
mov
mov
xchg
or
jns
mov
pop
mov
imul
repz
mov
negl
inc
jle
inc
in
xor
leave
xchg
int
arpl
push
mov
sbb
or
push
pop
lret
adc
lcall
and
aad
cmp
into
std
mulb
shl
xchg
jg
in
dec
dec
sbb
sti
pop
aad
or
fcmovnu
inc
data16
xchg
mov
test
out
lcall
in
sbb
out
or
test
adc
xchg
pop
sar
daa
lea
in
and
mov
aas
pop
arpl
pop
ss
out
mov
loope
sti
int
rorl
jne
out
in
push
xchg
xchg
xor
xlat
test
fidivs
add
fiaddl
cwtl
test
pop
hlt
and
cmp
and
add
lea
mov
ss
dec
or
out
int3
test
push
fdiv
std
stc
mov
xor
pop
pop
mov
mov
sub
sbb
pop
mov
nop
and
xchg
fwait
xor
push
sti
mov
adc
and
xor
mov
xlat
into
test
dec
mov
and
adc
adc
ret
or
sar
sti
add
push
jmp
leave
ss
mov
mov
in
clc
lret
nop
and
insb
xchg
xor
movsl
std
adc
je
fsubrs
mov
setae
xchg
insl
add
mov
test
ret
or
enter
js
adc
cltd
imul
dec
sarl
push
dec
fsubr
mov
mov
jnp
mov
add
xchg
sbb
mov
fcoms
xlat
cmp
shlb
leave
leave
and
push
pop
clc
dec
xor
xchg
and
cmpsb
out
push
jp
imul
jg
mov
add
dec
arpl
jnp
movsl
xor
inc
push
fstpt
fldenv
rol
mov
xchg
sbb
push
leave
icebp
stc
lods
daa
fldcw
inc
popf
inc
xchg
les
in
xchg
cmp
sbb
and
sub
or
and
push
mov
push
pusha
daa
and
pop
push
cwtl
out
or
bswap
ljmp
cltd
test
ja
mov
xor
cmp
clc
xchg
sub
mov
xchg
ret
loope
and
jbe
xor
hlt
jbe
and
and
mov
jecxz
and
dec
call
stc
subb
filds
out
sarl
out
js
imul
aaa
out
add
int
or
push
sar
cld
into
xlat
test
add
jb
popa
fwait
call
jmp
or
pop
in
dec
xor
loope
fnsave
icebp
test
and
add
cmp
mov
cwtl
and
xchg
iret
jns
fsubs
and
xor
adc
mov
out
mov
mov
add
fimuls
pop
sbb
jb
xchg
call
jmp
jge
sub
stos
pop
popa
test
xchg
cwtl
cli
or
in
mov
dec
ffree
cmp
mov
xor
xor
sti
jns
xor
pusha
int3
and
dec
test
cmpsb
inc
xlat
aas
test
push
lret
sub
dec
mov
xchg
add
arpl
inc
jp
and
dec
jns
add
push
fldenv
xchg
cmp
out
pop
mov
test
enter
add
jne
or
dec
jp
adc
sbb
xchg
mov
xchg
sbb
adc
xchg
adc
lds
leave
ret
and
in
mov
hlt
aas
mov
and
mov
inc
add
mov
inc
iret
jo
jo
and
iret
fdivr
les
inc
ret
sbb
adcb
xor
das
xchg
adc
shrb
inc
fisubrs
sbb
mov
rcr
sbb
movsl
aaa
sbb
int3
jae
sbb
lcall
adc
sbb
add
fwait
test
jl
mov
loop
cmpsl
fsts
and
out
pop
add
dec
inc
cli
sub
mov
dec
or
jae
lds
fwait
cld
xor
inc
mov
nop
imul
scas
lret
int
ljmp
enter
std
cmp
out
and
jb
mov
sbb
ficompl
aas
push
testl
jo
pop
out
loope
sbb
pop
icebp
aaa
clc
dec
and
pop
aas
sbb
sbb
mov
ret
xchg
ja
xor
jp
into
int3
fadds
mov
cs
call
std
outsb
mov
mov
jle
lea
sub
jmp
int3
icebp
hlt
pop
cld
sbbl
lret
andl
push
mov
les
rorl
stos
shl
or
sub
add
insb
push
shll
sub
movsl
pop
jns
push
mov
xchg
mov
add
inc
jl
mov
jo
loope
and
pop
repz
stos
in
pop
int3
icebp
cmp
mov
cmp
icebp
fists
push
bound
popa
dec
mov
rcl
pop
inc
mov
adc
cmp
mov
sahf
in
lock
pop
sbb
mov
call
push
sub
je
lea
mov
mov
mov
nop
test
aad
rorb
cmp
jge
into
sbb
jmp
adc
push
and
add
into
arpl
enter
pusha
jb
addl
xor
or
out
xor
jmp
icebp
sbb
xchg
test
addr16
int3
mov
mov
lret
inc
pop
xchg
sub
js
mov
pop
bound
sbb
or
test
jne
pop
data16
jp
mov
int
pop
es
inc
push
push
clc
and
movsl
sbb
or
xchg
data16
pop
in
shll
out
sub
jb
pop
jmp
push
dec
and
pusha
push
ret
push
jae
or
nop
cli
xchg
xchg
pop
xchg
pop
popf
pop
sbb
mov
sub
and
scas
dec
shll
mov
inc
jno
insl
es
add
stos
add
rolb
mov
lahf
sub
push
pop
test
fsubr
jge
repz
out
mov
mov
jmp
inc
out
jb
or
jnp
clc
insl
jae
int
ljmp
xlat
lret
xchg
loope
or
xchg
dec
cmp
lret
andl
add
rcl
jb
xor
jbe
push
andb
cmc
xchg
sbb
sti
cmp
popl
enter
inc
or
pusha
andl
dec
adc
pop
out
enter
sbb
push
shlb
xchg
call
stc
dec
add
xor
sbb
fwait
inc
into
mov
popl
xchg
xor
inc
xor
pop
push
xchg
jle
lock
push
mov
dec
orl
repz
clc
mov
ds
mov
pusha
fadds
sub
adc
fnsave
mov
pop
jge
pop
add
xor
inc
es
daa
push
ljmp
cmc
mov
mov
ret
sbb
in
cltd
mov
pop
mov
push
xor
mov
dec
adc
js
enter
sub
adc
jp
sub
out
mov
sbb
jmp
sti
int3
in
fldcw
fisttps
sub
lahf
fmull
hlt
inc
inc
push
scas
sti
ret
xchg
jmp
lret
push
and
push
call
sub
hlt
mov
sub
ret
mov
mov
cmp
in
mov
in
inc
imull
cwtl
sbb
mov
sti
mov
push
outsl
adcl
and
fistps
inc
add
fbstp
fcomip
fucompp
mov
repz
iret
mov
pop
mov
imul
xchg
daa
inc
into
in
adc
sub
cmc
sbb
cmp
lcall
xor
sub
cmp
inc
cmc
sbb
mov
sub
bound
data16
cmp
or
push
sti
lods
sub
test
lea
push
lock
lods
fildll
adc
xor
push
loop
dec
jle
push
rcl
mov
popfw
and
inc
dec
jle
scas
int
dec
add
test
adc
sbb
add
add
pusha
icebp
aaa
mov
push
and
mov
xor
out
lea
pusha
popa
sub
dec
cmp
fcoml
popa
aad
test
pop
shrl
std
cmpl
ficoms
jp
stos
movsl
mov
test
cmp
ja
dec
cli
inc
pop
bsf
mov
int3
xchg
mov
jb
xor
mov
repnz
mov
mov
bound
add
call
out
mov
inc
xchg
outsb
mov
push
jecxz
mov
mov
mov
push
pop
sti
sbb
mov
jle
mov
adc
mov
mov
xorl
lret
jle
mov
scas
rolb
dec
mov
loop
ds
popl
and
cli
fwait
aad
lcall
or
cmp
dec
in
orl
sbb
adc
adc
negl
pop
cs
cmp
fdivrs
and
stos
cli
cwtl
push
lcall
test
sub
sahf
popa
dec
jecxz
xchg
ja
dec
push
inc
test
push
mov
gs
dec
out
pop
lock
in
push
loop
xchg
push
bound
sub
add
mov
movsl
test
clc
adc
pushf
pop
cltd
inc
in
sbb
pminub
jne
pop
scas
pop
and
adc
outsb
push
bound
lock
movsl
ljmp
xlat
negb
pop
jge
or
inc
dec
or
lea
and
ficomps
or
push
cmpsb
xor
aad
mov
std
out
cmp
out
xor
cmp
xor
push
ss
mov
or
rcll
cmpsl
sbb
fiadds
lods
cmc
lret
fs
mov
sar
and
aaa
ljmp
sbb
cmp
mov
test
xchg
add
imul
sahf
movsb
mov
out
push
lcall
and
pop
js
adc
negl
push
and
ror
push
jbe
mov
loope
xor
fiaddl
dec
subb
xchg
pop
push
popl
lahf
jae
jle
cmp
popf
sub
lock
xchg
or
cltd
js
adc
sahf
sbb
daa
out
and
orb
int3
mov
addl
jns
out
ja
sbb
push
or
iret
pop
mov
mov
loopne
add
fwait
mov
push
fisttpll
enter
clc
iret
imul
mov
test
mov
inc
scas
inc
iret
in
adc
and
inc
cmp
pop
fsubrs
push
divb
lods
testb
inc
or
mov
cmpl
or
js
xchg
daa
std
lds
ret
and
sbb
in
test
cmpsb
push
pop
mov
push
cmp
cmpsb
fnstsw
into
inc
outsb
xchg
add
loopew
mov
in
repz
mov
add
pop
scas
sub
addr16
scas
cmp
dec
adc
stos
mov
pop
sbb
cmp
adc
lret
push
std
in
xor
sub
and
cli
mov
cmc
mov
aaa
into
push
adc
jo
inc
cs
xchg
pop
arpl
xchg
pop
jns
pop
enter
lock
mov
xor
push
not
pop
stos
sbb
arpl
push
xchg
cmp
addr16
movsl
pop
in
push
push
lods
andb
in
adc
or
or
xor
mov
mov
in
divb
or
push
adc
dec
fsubr
scas
lock
sbb
ljmp
mov
fadd
nop
popl
push
in
xchg
data16
ret
scas
cmpsb
pop
imul
push
mov
xor
push
out
js
add
orl
mov
js
jmp
cmp
cmp
cmp
lret
adc
imul
cmp
leave
fdivl
int
sbb
mov
push
jns
inc
pop
xlat
adc
sbb
cmp
aad
sbb
cmc
sti
inc
int3
inc
xchg
daa
mov
cmpsb
push
repnz
jle
sub
or
lods
frstor
icebp
adc
int3
adc
sub
sbb
pop
jmp
jp
loop
movsl
sti
adc
test
xchg
in
repz
frstor
sbb
add
std
fisttpl
ljmp
pushl
jno
xchg
cli
inc
call
sub
dec
dec
adc
loop
dec
adc
mov
cmpl
cmp
adc
dec
mov
xchg
fisttps
movsb
mov
dec
sti
popf
jl
inc
jge
movsb
xchg
sarb
test
dec
adc
mov
mov
add
adc
aad
cs
sbb
daa
scas
lea
les
jmp
adc
mov
das
out
daa
outsb
mov
mov
in
test
repnz
mov
lcall
mov
xlat
jmp
mov
xor
xchg
test
mov
lret
pop
or
rcr
mov
aas
jmp
sub
je
xor
mov
mov
fsubs
outsl
or
mov
and
jnp
fsubrl
loop
push
sbb
pop
call
sub
jg
push
mov
jae
imul
inc
ret
jmp
bound
outsb
xor
or
movl
scas
hlt
and
cmc
pushf
loop
push
mov
jle
test
mov
repz
xchg
pop
aaa
xchg
and
jae
xlat
arpl
ja
call
dec
popa
lock
inc
bound
push
mov
sub
pop
movsl
xchg
cmc
add
jae
jl,pn
mov
mov
cld
pop
shrl
pusha
iret
loopne
mov
jl
lret
cmp
dec
lea
mov
fsts
loop
lods
mov
dec
pusha
dec
mov
rclb
or
lods
add
mov
xchg
sbb
and
sub
xchg
mov
loop
push
lcall
in
aas
call
push
add
push
adc
fstpt
and
out
jecxz
outsl
cmc
movsl
push
cwtl
jbe
jmp
call
mov
xchg
aas
mov
lds
inc
clc
pushf
lret
xchg
or
mov
xchg
pop
cmp
or
ss
fwait
cs
sub
dec
lcall
xchg
sub
jo
pop
xor
inc
adc
add
mov
sbb
cmp
icebp
sbb
sbb
std
dec
lcall
cld
fidivrs
cmp
cmp
int3
sub
mov
xor
cli
jecxz
pop
cmpl
xor
mov
xchg
push
repnz
addr16
stos
lahf
ja
mov
sub
movq
jmp
leave
inc
push
pop
sbb
and
mov
rorl
enter
imul
inc
and
call
cmp
xor
dec
jo
enter
or
lds
repnz
std
push
mov
inc
xchg
scas
dec
cli
cli
std
adc
imul
inc
adc
es
xor
jae
lock
ficompl
mov
and
pop
ds
xor
fsubs
mov
outsl
and
loopne
pop
subl
pop
sbb
xchg
fwait
sub
jl
mov
fisubs
lods
cmpl
clc
in
mov
pop
nop
andb
inc
movsb
rorb
lods
jnp
sbb
lret
sub
jp
sbb
cmpsl
insl
repnz
lcall
mov
pop
lret
and
mov
outsb
mov
sbbl
sub
addr16
cmp
inc
or
jbe
mov
push
lods
xchg
js
test
nop
fisubrl
jmp
mov
xchg
stos
ljmp
fcomi
push
mov
cmpl
xlat
mov
fstps
fsts
popa
sub
movsb
jmp
fnstsw
push
loop
test
or
jp
cwtl
test
lock
pop
loope
inc
loope
jae
and
sbb
inc
dec
push
bound
sbb
pop
stos
fdivs
xor
aas
in
in
cmpsl
ja
int3
pop
nop
xor
sahf
adc
sub
pop
fstps
adc
scas
and
test
sub
add
or
dec
daa
lods
out
or
jecxz
sarb
jecxz
arpl
cmpsl
adc
in
mov
test
inc
mov
inc
mov
mov
ljmp
imul
test
push
xor
in
jmp
push
pop
push
ret
jns
jmp
mov
cld
adc
and
mov
stos
iret
repnz
jne
or
mov
hlt
enter
cs
or
lret
rorl
jnp,pt
mov
ret
mov
mov
test
mov
and
xchg
dec
sbb
cmp
or
test
loop
add
sbb
idivl
addb
das
in
lret
mov
mov
sub
pop
or
xor
cmp
xchg
sbbl
xchg
sub
pop
mov
sbb
sahf
repz
imul
je
jo
xchg
bound
testb
jmp
push
pop
push
push
clc
or
emms
and
ss
xchg
cmc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
add
jmp
fnstenv
xchg
gs
test
sbb
pop
bound
pop
bound
scas
rclb
mov
sub
jo
out
imul
xor
push
and
jl
sub
popf
adc
and
mov
pop
nop
push
fadds
arpl
pop
dec
dec
lcall
loop
or
out
in
call
sub
addr16
or
aam
pop
hlt
andb
jb
mov
lahf
aas
movsl
fistl
cmp
push
dec
cltd
mov
cmp
sub
dec
int3
add
js
mov
lret
insl
cmc
push
sub
xor
or
stc
mov
push
xchg
mov
stc
clc
push
mov
syscall
js
in
xor
shrl
mov
call
addr16
int
inc
lea
icebp
push
cmp
icebp
pop
sub
mov
sbb
pop
fwait
xor
testl
ljmp
inc
dec
jno
icebp
loopne
and
fadd
pop
fistpl
repz
mov
push
aad
push
xchg
pop
sti
dec
mov
data16
add
sub
dec
xchg
subl
aas
gs
call
mov
and
mov
and
pop
in
push
adc
cmp
es
dec
out
cmc
add
jl
mov
sbb
inc
mov
mov
outsl
iret
lcall
push
and
scas
mov
dec
mov
ret
lea
popa
jmp
and
pop
mov
cmp
jle
jg
iret
cmp
mov
xchg
leave
mov
pop
into
data16
xor
inc
inc
cmp
inc
pop
jmp
xor
adc
xchg
or
cli
push
jbe
mov
or
loope
mov
popf
fiadds
mov
or
arpl
cmp
xchg
std
pop
add
addr16
inc
pop
push
sbbb
fmull
sbb
mov
jne
jo
es
ss
jmp
xchg
test
fisubs
and
ds
lods
sti
sub
push
orl
les
fstpt
adc
jle
fnstsw
adc
push
or
out
ja
and
mov
cmc
clc
fidivrs
je
or
jg
pop
lcall
in
sub
int
ds
adc
pop
pop
or
jle
mov
in
scas
push
sbbb
lahf
leave
call
rclb
cs
fnstcw
cmp
adc
sub
test
lahf
scas
mov
test
fwait
jl
xchg
stos
pop
test
adcb
pusha
les
int
nop
insb
das
rorb
pop
sbb
xor
xchg
jns
mov
fsub
xor
ret
sub
xchg
movsl
mov
rcll
loop
jae
push
mov
je
xor
lret
cmp
fwait
cmp
fisttpl
dec
bound
mov
pushf
lds
cmp
jp
add
mov
sbb
sub
dec
jns
xchg
inc
imul
and
sub
jne
dec
aas
mov
in
mov
push
js
int3
jg
stos
subl
les
stc
jo
lret
mov
lret
mov
push
pop
lock
lahf
pop
mov
sbb
outsb
and
jb
nop
rorb
mov
push
inc
imul
ret
int3
adc
ret
int
and
mov
imul
bound
inc
cmp
pusha
sub
xchg
lcall
xchg
adc
lret
and
cmp
sub
mov
movsb
fwait
adc
pop
adc
aam
into
mov
push
mov
mov
push
xor
fwait
inc
pop
out
popa
xchg
mov
xchg
sub
repnz
jae
cwtl
fdivrl
movl
sbbb
pop
pusha
mov
mov
pusha
cld
pop
sarl
pusha
adc
dec
shlb
cmp
inc
ficoms
int3
inc
sbb
cld
mov
negl
mov
inc
or
dec
fucom
xor
es
int
ja
mov
aaa
loop
and
mov
dec
mov
test
lods
adc
push
push
ljmp
mov
sub
pushf
jecxz
into
xchg
sub
int3
mov
push
lret
lcall
shll
ficoml
lods
push
gs
scas
jae
cwtl
add
js
sub
dec
insl
leave
cwtl
outsl
pop
sbbl
jnp
inc
in
aam
loop
test
mov
jb
xor
push
push
popw
test
inc
jecxz
push
cltd
pop
inc
sbb
enter
imul
add
fwait
cmp
setno
in
jb
cmp
push
xchg
mov
fs
insb
mov
mov
ljmp
mov
and
out
sarl
or
mov
negl
pop
mov
mov
adc
mov
sub
jg
movsl
xchg
jns
iret
orb
jo
dec
test
push
lret
outsl
sub
push
mov
loop
add
imul
sbb
xchg
outsb
push
jae
inc
jecxz
jecxz
and
in
aam
add
jecxz
outsl
xor
xor
jno
jbe
inc
jp
sub
das
lea
loope
inc
xor
sbb
xchg
push
cmp
repz
or
xchg
je
ficomps
stos
xchg
jl
mov
shrl
xchg
sbb
and
dec
cli
loope
ret
repz
push
pop
insl
les
mov
cmpsb
adc
outsb
pop
addl
xchg
idiv
stc
cmp
cs
mov
inc
in
ds
inc
js
sbb
xchg
sub
leave
cmp
add
loopne
iret
loop
in
popf
adc
pop
mov
and
push
call
ds
stos
hlt
xchg
cmpsb
ret
cmpsb
mov
repnz
ret
adc
mov
jl
je
cli
flds
push
mov
loopne
mov
lea
xchg
jg
imul
pop
mov
inc
pop
xchg
mov
scas
loope
dec
push
int
in
insb
cmp
pop
call
cmp
lods
jmp
mov
aad
aas
fildl
fdivl
adc
inc
mov
push
loopne
std
mov
loop
stos
sub
cld
pop
into
mov
mov
cmp
and
xor
or
shll
testb
mov
out
xchg
xorl
inc
dec
adc
in
hlt
insl
mov
mov
inc
fwait
movl
dec
sbb
inc
xchg
ss
mov
lahf
popa
insl
and
add
fwait
inc
sti
mov
dec
js
add
xchg
pop
push
subb
sti
sub
add
cmp
or
xor
and
pop
xor
nop
jecxz
push
add
xchg
sbb
cmpsb
les
mov
and
cmp
das
xor
stos
mov
sbb
mov
inc
rcrb
bound
arpl
inc
lds
loope
pop
lea
xor
les
mov
add
sbb
scas
sbb
rolb
add
nop
xor
inc
dec
repz
and
scas
inc
les
mov
out
popf
cmp
into
mov
nop
inc
xor
fxch
das
test
jl
loope
adcl
or
bsr
jecxz
xor
sbb
xchg
sarb
jp
cs
outsl
sti
sbb
and
mov
faddl
adc
mov
and
repnz
push
and
jl
cmp
pusha
xor
mov
xchg
movsb
outsl
push
mov
imul
popa
dec
pop
cmp
mov
push
mov
inc
jge
out
icebp
mov
pop
jge
lock
lds
push
loope
adc
pop
push
aad
jp
aas
sbb
or
cltd
xor
cmp
mov
xchg
int
mov
and
sub
mov
push
push
lods
add
lret
pop
nop
out
out
push
sbb
mov
aaa
ss
fldl
fmull
cmp
idivb
mov
lock
jb
sti
pop
pop
out
outsb
xchg
jl
mov
jmp
push
xor
adc
cmp
movsb
pop
pop
mov
inc
repz
xchg
jg
xor
cmpsb
jo
xchg
andb
pop
test
movsb
outsl
sub
insb
hlt
mov
jno
sub
mov
out
xlat
ja
repnz
mov
arpl
cltd
mov
push
lret
dec
xchg
leave
add
cmp
inc
or
mov
inc
push
test
mov
add
insl
and
popa
mov
sahf
inc
and
bound
xchg
adc
jnp
inc
in
insl
mov
bound
xchg
adc
push
fnsave
add
jns
std
cli
shrl
inc
popa
and
lock
dec
addr16
notl
push
cmp
ret
dec
sbb
jp
int
hlt
mov
fsubr
and
xor
jb
aad
mov
add
mov
adc
aam
mov
lock
mov
push
leave
aad
xchg
testb
mov
adc
push
xorl
xlat
in
cmpsl
bound
pop
scas
pushf
sti
mov
fcmove
xchg
mov
ficoms
movsb
outsb
dec
hlt
ficoml
push
and
adc
dec
pop
pop
imul
adc
cli
fists
stos
cmp
shlb
mov
mov
sub
pop
mov
dec
lahf
mov
or
pop
mov
sbb
mov
mov
jae
xchg
stos
aas
sub
and
fisubl
inc
fnsave
push
push
cmp
ljmp
out
arpl
sbb
pop
out
cmp
arpl
xlat
pushf
mov
mov
pop
mov
iret
push
into
push
sti
stos
stc
data16
fsub
movsb
dec
mov
das
cmp
nop
jae
xor
lods
dec
push
hlt
mov
arpl
push
dec
ret
pop
pop
sub
test
sub
dec
jp
xlat
cs
inc
sbb
fists
xchg
xor
dec
cmc
and
lcall
fdivrs
mov
outsb
jecxz
mov
test
pmaxsw
xor
inc
aaa
sbb
aam
ss
jg
cmpsb
in
jb
sti
pop
aad
jle
sbb
and
mov
rclb
pop
fcomps
push
hlt
das
push
dec
sbb
hlt
shl
mov
sub
mov
pusha
mov
fisubrs
fs
pop
jle
push
jno
aaa
inc
inc
daa
mov
std
dec
cmp
pop
xchg
fldt
mov
mov
mov
fbld
pop
int
xchg
ljmp
jo
or
inc
sahf
ljmp
das
mov
imul
sbb
sti
aas
cmp
cmp
or
jne
iret
mov
or
outsl
mov
sarl
jl
sbb
fadds
jmp
or
jp
inc
inc
loope
jle
sub
push
mov
dec
or
arpl
or
ja
sbb
les
xlat
cmp
test
lds
movsl
icebp
jae
ds
xchg
out
hlt
jnp
jb
lret
in
ja
es
xchg
sbb
sub
pop
push
loopne
insl
mov
fisubrl
test
xor
adc
inc
xchg
cmp
jne
cltd
mov
addr16
insb
sub
ss
shll
mov
adc
insl
inc
fnstsw
test
or
cmp
rorb
imul
push
adc
cmp
jbe
aaa
jb
je
cmpl
aad
hlt
xor
push
lock
mov
aas
add
sbb
xlat
xchg
cmp
mov
sub
je
roll
push
ret
repnz
jle
push
subb
out
and
jae
mov
iret
adc
hlt
push
cmpsb
mov
xchg
cs
and
adc
pop
xchg
cwtl
add
imul
jmp
sub
scas
add
and
xchg
pop
adc
sbb
cmpsb
push
lahf
add
jmp
nop
stc
fdivl
and
and
push
adc
jmp
rcrb
sbb
lcall
std
mov
clc
cltd
xor
mov
pop
pop
orl
and
jae
lret
or
push
dec
pop
xchg
test
and
hlt
cmc
cltd
push
addl
push
daa
mov
imul
nop
pop
rdmsr
cmp
lds
repnz
ljmp
fs
pop
inc
dec
mov
pop
dec
lret
add
xchg
mov
or
mov
and
push
push
movsb
push
cmp
push
mov
imul
sub
fdivl
shlb
and
dec
or
push
les
push
inc
cmpl
pop
leave
cltd
pop
sub
pop
clc
mull
sbb
or
and
jne
iret
sti
adcb
mov
fmuls
orb
ret
mov
mov
incb
xor
imul
ss
jne
or
adc
push
sti
pop
dec
fistpl
std
addr16
dec
dec
fldl
lds
scas
cs
cltd
inc
mov
je
incl
push
pop
ss
out
jmp
cmp
jle
sbb
sahf
test
cmpsl
cli
xor
scas
mov
rcll
pop
bound
jbe
jl
les
mov
mov
in
mov
push
aas
cmp
insb
add
out
xor
pop
test
cwtl
mov
into
pop
add
xchg
jno
loope
mov
imull
add
in
stos
mov
in
ljmp
js
mov
fistpl
mov
cmp
cmpsl
sbb
dec
or
xor
add
fdivrp
jmp
in
mov
mov
fidivs
in
xchg
out
cmc
jo
push
mov
fmuls
cli
data16
stos
sbb
btr
nop
jo
dec
sti
add
aaa
les
stos
test
pop
fs
mov
mov
mov
popa
push
xlat
push
add
lods
xchg
and
adc
es
dec
sbb
in
pop
pop
xchg
cmpsb
cld
test
mov
jp
les
add
movsl
xchg
sbb
scas
push
mov
adc
roll
pop
insb
push
lret
ror
insb
mov
int3
pop
aaa
call
js
in
insl
mov
dec
jp
jnp
and
jbe
in
cmc
test
rorb
push
lods
iret
xchg
push
pop
jge
bswap
bound
and
shl
inc
aad
ficomps
pushl
in
sbb
mov
ficompl
push
mov
sbb
add
jne
sub
lahf
sub
jmp
mov
into
out
mov
fs
sbb
push
jo
or
out
test
test
es
push
mov
nop
outsl
ja
mov
shlb
adc
jmp
xchg
push
js
loop
adc
xchg
mov
sub
dec
mov
int3
sahf
push
out
add
rcr
pop
movsb
jl
and
jle
dec
sbb
jae
mov
fcmovnb
push
je
cmpsl
ja
fimull
push
sarl
and
test
scas
sub
lea
xchg
sbb
dec
shrb
mov
movl
inc
hlt
mov
les
fs
push
jmp
inc
push
push
dec
push
mov
dec
pop
imul
das
pop
ficoms
out
ds
adc
scas
mov
pop
jb
add
push
cld
stos
dec
scas
xchg
adc
filds
in
loopne
gs
mov
int3
mov
enter
mov
out
mov
or
js
into
mov
add
aam
outsl
rep
and
sub
jne
mov
in
push
out
cld
sub
mov
in
inc
jnp
mov
scas
push
in
xor
ret
in
inc
mov
pop
sub
jae
nop
xor
and
in
add
adc
mov
movsb
into
dec
lar
jp
mov
iret
clc
sti
push
aam
cmp
out
jo
mov
fisttpll
and
inc
cmp
adc
outsb
xor
pop
sbb
add
shll
jge
and
testb
out
xchg
pop
fs
xor
jo
jnp
fidivs
inc
cmpsb
out
pusha
cmpsl
cmp
jl
dec
pop
adc
shr
inc
xchg
or
imul
aaa
push
xorb
cs
cmpsb
push
adc
mov
mov
inc
clc
sub
mov
jmp
xchg
fstps
xor
mov
imul
out
sub
ss
push
mov
into
dec
adcb
dec
jbe
lods
adc
scas
inc
fcoml
stos
pop
inc
jb
fcomps
push
and
lcall
aaa
adc
or
sbb
add
or
cmp
push
add
aas
call
jae
leave
mov
daa
xchg
scas
repz
sub
fdivrl
inc
in
mov
pop
jbe
add
add
mov
in
neg
cmpsl
bound
push
jns
mov
lods
push
jbe
mov
mulb
enter
cmp
test
fimull
and
xchg
test
pop
mov
jae
add
xchg
cld
cmpsl
imul
ror
push
test
cmp
push
aam
mov
out
cwtl
test
xchg
inc
dec
fs
sti
popa
inc
mov
sbb
lahf
cli
fldl
shll
cmp
jle
jge
cltd
loopne
int
jl
shll
ret
pop
push
outsb
aam
fstpl
xor
mov
push
xchg
mov
imul
loopne
inc
repnz
arpl
or
mov
movsb
hlt
lcall
dec
xchg
inc
push
push
mov
fwait
jb
push
sbb
push
dec
pop
insb
push
data16
dec
mov
loope
fildll
imulb
lret
arpl
or
push
jg
test
lret
pop
jo
cmpsw
mov
out
sub
pop
int
call
mov
jbe
push
test
dec
fdivl
fildl
xor
insl
push
cmp
mov
pop
scas
mov
rcl
add
sti
pop
ss
daa
lahf
cmp
ja
int
addr16
fistl
lret
sahf
sbb
div
into
das
sbb
ja
inc
cmp
int
xchg
pop
pop
jne
fisubrs
mov
out
popa
ret
pop
lret
cmp
push
sub
jge
push
repz
push
or
sbb
mov
cmpb
outsl
sub
cmp
push
push
shll
mov
cltd
mov
pop
sbb
pushf
enter
mov
cmp
jbe
jno
adc
lock
leave
sti
sub
out
dec
push
jb
jecxz
ljmp
out
cmp
mov
or
shl
cmpl
jp
cmp
pop
jge
pop
test
sbb
jecxz
jnp
jge
imul
or
xor
dec
xor
pop
xchg
ljmp
aaa
fidivs
jle
stc
fcoms
inc
hlt
dec
mov
cmc
and
out
dec
popa
dec
mov
jg
add
mov
fsubrs
xor
ficompl
push
and
xor
mov
lea
mov
mov
adc
fdivrs
xchg
xor
lea
rolb
add
popf
add
sbb
js
cli
mov
xlat
cli
jns
sub
jae
in
and
arpl
in
loop
sub
push
or
sbb
stos
inc
ret
xor
add
add
xchg
scas
sbb
push
inc
and
mov
jnp
rolb
and
sub
dec
pop
cmp
out
leave
nop
push
js
dec
lahf
push
lret
pop
shrb
jl
inc
cltd
mov
pop
out
cmp
or
or
in
mov
in
sub
test
int3
add
rorl
mov
divb
cmc
sub
std
push
pushl
mov
ja
dec
pop
mov
cmpl
cmpsl
push
and
adc
hlt
or
into
mov
add
lods
std
cltd
cwtl
nop
jecxz
dec
xchg
jmp
pop
jle
xchg
fstps
int3
and
xchg
inc
test
ss
and
adc
mov
lea
push
lods
mov
inc
mov
cmpsb
xor
add
enter
jae
add
insb
inc
mov
and
movsl
cs
jl
push
pop
push
or
jb
pop
test
das
mov
inc
mov
bnd
add
push
or
xchg
xor
das
sub
aam
leave
arpl
push
sub
les
add
dec
idivb
jne
loop
out
rcll
pop
ss
sbb
loope
sbb
iret
loope
aas
sub
mov
fs
mov
es
or
lods
sbb
loopne
shll
fisubrl
jb
pop
ret
or
sti
push
sub
pushf
in
jmp
mov
push
add
cli
pop
cmc
adc
and
jnp
cmpsb
push
imul
mov
sbbl
sbb
mov
aaa
pop
int3
push
aaa
imul
mov
cltd
js
imul
xor
xchg
jnp
ret
xor
leave
inc
adc
sbb
stos
fwait
sbb
pop
icebp
movsl
jmp
mov
inc
inc
xlat
pop
loope
aad
out
cmpsb
dec
xor
ljmp
lods
movl
sub
xor
inc
fwait
paddb
std
jno
jo
inc
mov
cmp
iret
or
repnz
dec
mov
fisubrs
xchg
shll
rcrb
xchg
ja
xor
inc
clc
and
xchg
pop
jl
jbe
mov
sub
ja
push
enter
fsubp
and
or
pop
cmp
js
inc
xor
fmull
mulb
add
shll
cld
movsl
cmp
aad
xchg
cld
fs
sbb
adc
rorl
xchg
mov
dec
push
ficompl
sub
pop
xor
clc
mov
mov
cld
int
les
sahf
adc
mov
addr16
inc
jmp
repz
add
add
mov
mov
inc
pop
add
ja
push
xor
ret
jne
push
dec
inc
and
out
dec
lds
loope
add
rclb
pop
mov
test
outsb
jns
fsubrs
lcall
push
jge
inc
inc
lret
pop
gs
jle
push
shll
lahf
icebp
jmp
xchg
data16
and
mov
push
mov
mov
ds
aas
arpl
lcall
test
sti
lods
lods
push
repz
jae
je
dec
clc
push
dec
mov
ljmp
cmp
lret
cmp
xchg
mov
xor
das
outsb
rorb
lods
mov
dec
das
pop
xor
out
add
mov
je
loope
inc
insb
jle
leave
out
cli
push
lods
xchg
jne
jl
lock
adc
stc
or
jb
sarb
ljmp
dec
ja
xor
mov
leave
or
aas
ljmp
mov
ret
ss
xlat
push
xor
shl
mov
adc
js
jo
sbb
ret
mov
inc
in
push
push
psubd
xorl
fidivs
and
outsb
mov
dec
leave
mov
or
jle
xor
test
xchg
mull
dec
mov
das
hlt
in
sub
rolb
lcall
jbe
sarb
jb
fdivrp
lea
dec
inc
xchg
mov
dec
mov
jnp
sbb
aas
fiadds
popf
dec
in
inc
and
mov
xchg
push
hlt
adc
xor
divl
push
iret
lret
lea
fst
int
mov
das
lcall
jb
sub
sub
add
or
sbb
jl
xor
dec
add
dec
lds
out
rorb
xchg
mov
push
adc
ret
fimull
push
shll
rorw
mov
lcall
aaa
orb
pop
or
lahf
lock
and
jne
sbb
roll
or
sahf
fnstenv
lods
enter
adc
push
stos
movsl
push
dec
mov
and
iret
jecxz
xchg
sbb
pop
adc
cmp
addr16
jo
insb
ja
push
fcomp
mov
inc
mov
inc
sub
aam
decl
mov
cmp
mov
jl,pn
mov
jecxz
dec
push
pop
test
adc
iret
pop
mov
ret
sbb
sarb
and
jp
lock
xor
out
into
sub
push
push
mov
mov
push
fdivr
dec
pop
sbb
or
pop
cmc
or
fsubrp
fiaddl
lea
mov
fwait
repz
mov
xchg
mov
in
fsubs
sub
xor
xchg
cmc
xchg
test
mov
lahf
popa
mov
adc
push
pop
lcall
mov
push
adc
mov
mov
inc
jmp
outsl
in
jp
daa
sbb
lret
pop
inc
lds
xchg
mov
sub
popf
dec
ret
out
sub
jne
pop
and
out
sbb
dec
test
lods
es
popf
xchg
ret
xor
lods
fnstcw
sbb
mov
popa
test
or
mov
and
mov
loop
movsl
testb
jg
xor
scas
iret
dec
sbb
rcl
mov
adc
fs
fdivs
test
outsl
sbb
imul
lcall
sub
sarb
out
out
pop
push
lock
mov
mov
lahf
fiaddl
sbb
ds
outsb
rcl
pop
ja
mov
push
mov
or
xor
inc
push
testb
mov
add
xchg
jno
sub
mov
sbb
xchg
insl
int3
clc
and
inc
mov
test
scas
enter
jb
in
fisubrl
and
dec
pop
lcall
addr16
dec
mov
push
rorb
shlb
inc
in
push
pushf
ret
cmpsb
cld
scas
ret
in
cltd
mov
movsb
or
pop
lods
shll
mov
lods
insl
pop
push
fwait
inc
int
gs
and
pop
js
imull
and
adcb
pop
ret
out
daa
mov
out
pop
jb
pop
or
stc
sub
mov
xor
cmpsb
ret
push
adc
aas
push
push
jbe
test
fstpl
jno
fstpl
or
mov
adc
in
add
mov
rorl
es
lcall
movzbl
push
mov
andb
dec
pusha
out
movsl
es
add
push
call
or
xor
outsl
sbb
push
sub
outsb
push
and
stos
ds
pop
roll
jb
lock
stos
outsb
and
sbb
push
push
cmp
mov
loope
xor
cmc
xchg
and
enter
test
cmp
dec
negb
push
push
sbb
xchg
adc
or
push
scas
pop
movb
out
call
push
mov
movsl
jbe
inc
mov
lods
cmpsl
pop
movsl
nop
rorl
nopl
insl
xor
inc
data16
dec
cld
mov
lcall
xchg
test
sti
jl
call
mov
xchg
shl
mov
pushf
vmovaps
dec
cltd
dec
sub
add
mov
mov
popf
mov
test
jns
pop
ret
xchg
stos
cmp
call
movsb
pop
hlt
stc
and
push
sbb
shl
mov
out
mov
push
sbb
inc
push
and
repz
lock
jle
and
inc
cmp
shrl
add
push
inc
sub
adc
imulb
jmp
mov
adc
dec
cmc
lret
loop
iret
subl
push
sbb
cmp
loope
and
jge
into
test
jne
jb
and
enter
pop
xchg
pop
or
test
popf
lahf
pop
je
pop
dec
push
xchg
pop
and
ss
mov
jle
xchg
jg
test
dec
hlt
add
xchg
jbe
xchg
mov
push
adc
pop
dec
or
js
pushf
push
int
add
aaa
push
cmp
cli
add
mov
daa
inc
in
adc
push
and
sub
cmp
xor
mov
idiv
ret
mov
adc
mov
push
fsubrs
adc
jo
stos
pop
add
jl
dec
mov
xchg
cmp
pop
inc
dec
sbb
ret
aaa
pop
lret
arpl
xor
xlat
lock
or
out
push
mov
pop
pop
mov
and
adc
lcall
jns
movsb
fwait
xor
mov
or
addr16
dec
arpl
repz
or
or
scas
and
or
and
sub
add
cs
imul
add
xorl
iret
sbbb
in
outsl
fs
mov
mov
push
mov
jge
movsl
inc
jle
push
jbe
push
je
out
sbb
sub
cmp
in
mov
adc
jnp
mov
pop
jbe
andl
in
jmp
xor
mov
jns
and
jbe
fs
mov
nop
ja
lret
mov
push
mov
inc
icebp
ret
out
push
dec
sti
ja
fisubrl
jmp
addb
clc
mov
jl
leave
mov
dec
add
ljmp
stos
xchg
jp
loopne
js
jne
push
loope
xchg
rcr
push
addl
push
jb
and
lock
mov
xlat
jl
mov
bound
sub
add
fsubs
jmp
jge
lods
cmpsl
cltd
cli
sarl
cmp
mov
sbb
enter
orb
jnp
cltd
filds
jb
stos
scas
ljmp
and
inc
pushf
aam
cmp
mov
jl
cmp
and
mov
pushf
int3
mov
dec
je
outsl
ds
jnp
sbb
pop
jecxz
cli
cmp
fisttps
jmp
inc
pop
xor
repnz
pop
xlat
sub
or
push
adc
dec
jae
rcr
loopne
icebp
jl
push
add
xchg
jne
sti
insb
iret
daa
rcll
test
mov
scas
stc
clc
mov
movsl
jp
sbb
sbb
mov
ljmp
stc
stc
jno
movsl
jge
lock
jg
and
mov
lcall
jg
pop
mov
mov
mov
aas
xorb
das
mov
mov
xlat
cmp
js
shlb
es
lret
ss
data16
add
mov
ljmp
test
adc
sbb
or
ds
lret
jns
cmc
popl
jl
sbb
xor
jno
jns
int3
in
push
or
push
sbb
inc
mov
std
stos
jo
call
xchg
leave
jnp
call
inc
pop
mov
dec
inc
mov
cs
out
fcmovu
jo
dec
inc
loope
xchg
mov
frstor
push
imul
mov
xorl
pop
cmp
sahf
mov
inc
xchg
cmp
sbb
xchg
mov
rcr
mov
inc
shll
mov
push
lods
xchg
popa
jne
mov
pop
mov
mov
push
mov
sub
addl
push
adcl
push
push
andl
push
lea
push
adcl
push
subl
call
call
andl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
movl
mov
mov
xor
or
mov
add
subl
mov
mov
movl
test
movl
je
subl
mov
mov
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
imul
mov
orl
add
sbbl
jmp
jecxz
cmp
sbb
filds
push
cmp
negl
bound
test
mov
add
mov
add
in
jno
pop
ds
imul
testl
xor
and
cli
inc
pop
scas
sub
cmpsb
enter
sti
sbb
xor
xor
sub
int
push
sti
in
or
lret
sbb
mov
fs
mov
mov
mov
add
mov
mov
aam
cltd
push
out
dec
insl
and
and
scas
testl
mov
jle
call
xchg
popa
mov
pcmpgtd
popf
test
or
insl
in
fstpt
add
or
xchg
mov
add
or
pusha
inc
out
addb
push
push
aad
cmp
ret
es
mov
data16
aad
out
mov
scas
push
inc
fcomp
dec
sub
mov
mov
pop
inc
daa
cmp
stos
or
inc
sub
ja
and
mov
pop
dec
fidivrl
xchg
jnp
cmpsl
adc
incb
imulb
aad
int3
in
out
and
jle
inc
aas
ds
xchg
adc
push
jmp
xor
push
outsl
cld
divl
add
adc
sub
and
dec
pop
dec
rorb
dec
adc
rclb
in
hlt
fadd
movsb
lahf
aas
adc
mov
mov
xlat
mov
sub
dec
movsb
sub
add
inc
dec
in
and
in
add
add
pop
adc
pop
jmp
fsubrp
mov
sbb
or
mov
jl
test
xchg
dec
in
stc
xorb
pushf
pop
sti
dec
lret
add
test
add
mov
mov
inc
ja
mov
push
sub
leave
sub
in
ja
push
push
lods
test
movsl
push
jg
retw
fs
xchg
ficoml
cmpl
aas
and
sbb
cltd
ficoml
mov
jp
mov
adc
insl
enter
insl
out
xchg
stos
xchg
dec
lea
xchg
and
outsb
push
stc
int
popa
inc
popa
mov
add
xor
push
arpl
mov
cmp
add
lods
inc
aam
sub
movsl
scas
mov
dec
loopne
mov
pop
mov
loop
inc
pushf
sbb
push
mov
mov
test
mov
negl
pop
lcall
enter
mov
pop
out
dec
jecxz
fwait
std
cmp
fs
push
mov
xor
ffree
mov
insl
aas
add
inc
idivl
adc
out
test
data16
addr16
add
clc
rolb
insb
cmpsl
mov
push
inc
loope
pop
cmp
testb
out
inc
ret
les
jecxz
pop
cld
mov
stos
cmp
sbb
sbb
mov
mov
in
mov
mov
pop
shll
in
jae
xchg
jp
incb
aaa
mov
rcrl
cmp
iret
mov
cmp
and
mov
sbb
jno
rcr
call
add
inc
iret
movsb
aas
test
mov
sar
xlat
pop
daa
lea
lods
adcl
sbb
mov
adc
testb
ffreep
push
fsubrs
into
xchg
movb
cmpsb
xchg
mov
and
scas
clc
shl
lods
push
cmpl
nop
fmul
and
aam
ret
int
add
xor
push
and
or
outsb
add
mov
jae
sbb
xchg
stc
aaa
fcmovnbe
fistps
sbb
mov
lock
ds
insb
lret
cmp
and
cmp
push
cmpsb
enter
test
lods
bound
jne
push
gs
mov
adcb
cltd
jne
pop
push
setl
or
ds
das
popa
mov
pusha
addr16
adc
rorb
dec
repz
xor
cltd
dec
pop
pop
cmp
mov
mov
sbb
popa
fcomps
outsl
add
pop
cli
inc
stos
aas
cmp
packsswb
xchg
shlb
call
outsb
insb
leave
add
popf
xlat
sbb
mov
int3
xor
aaa
pop
stos
enter
mov
push
mov
jno
mov
jge
gs
ja
int
sub
push
shrl
in
pop
adc
add
lock
fistps
cwtl
sub
addr16
test
push
fcom
sub
xor
mov
insb
cmp
ss
out
iret
aas
sub
jne
xchg
int3
jecxz
popf
jecxz
enter
sub
inc
sti
xchg
inc
out
bound
fcmovne
out
ja
pop
add
mov
push
clc
fdivp
dec
test
push
cmpsb
pop
movsl
inc
adc
imul
jmp
sti
push
mov
jle
imul
orl
lahf
fbstp
test
mov
push
fidivrl
lds
mov
sub
fcomip
sub
sbb
jecxz
sub
mov
push
in
inc
test
stos
sbb
xchg
or
mov
icebp
sbb
dec
and
shlb
lods
mov
test
gs
pop
pushf
jns
ja
mov
sub
js
movsl
pusha
fdivp
or
pop
shrl
adc
in
xor
pop
mov
adc
cmp
les
mov
inc
lods
addl
add
jb
mov
sarb
sub
cwtl
imul
lock
xlat
cmpsb
or
xchg
mov
push
and
adc
scas
rcll
pop
pusha
jnp
lret
jbe
mov
mov
sbb
push
dec
mov
xlat
xchg
mov
in
call
lock
test
and
dec
stc
gs
nop
out
xchg
xor
addb
sarb
cmp
or
fstpl
in
das
arpl
jg
inc
rcr
fidivl
int3
sub
movsl
sbb
fdivs
out
cmpsb
add
enter
aaa
loop
inc
xchg
mov
push
testb
dec
dec
jb
push
mov
aas
sahf
insb
dec
pop
loopne
rcll
add
mov
jl
ljmp
mov
mov
and
add
pop
mov
nop
mov
add
pop
mov
pop
aas
jge
sbb
lods
pop
xor
sti
cmp
sbb
xor
pushf
lcall
add
adc
sbbl
add
pop
mov
js
push
movsb
xchg
fstp
test
out
cmp
or
in
dec
clc
jge
shrb
mov
cmc
xchg
mov
rcrb
in
cmp
xchg
push
mov
int
lahf
jnp
jne
sub
mov
popl
and
mov
dec
xor
lds
or
icebp
into
je
dec
sub
and
add
ret
jle
push
mov
adc
sub
aam
mov
sub
xor
data16
testb
es
out
lcall
stos
rcll
push
mov
or
testl
add
jp
xorl
inc
out
mov
cmp
pop
push
push
jnp
lret
arpl
mov
cmp
fldenv
jmp
inc
adc
das
sub
dec
mov
je
lods
lcall
jb
or
loopne
dec
cmp
sub
test
add
outsl
shr
cmpsl
mov
push
mov
jmp
movsl
xchg
xor
pusha
in
inc
inc
xor
out
pushf
mov
and
mov
fsubrl
sbb
sub
xchg
and
adc
add
xor
lds
inc
ret
inc
enter
dec
int
dec
xchg
xor
jp
mov
test
jns
and
adcl
ljmp
sub
mov
mov
or
fstl
adc
hlt
pop
and
jns
call
leave
popa
ret
mov
and
sbb
inc
inc
add
out
test
sbb
xorl
imul
cmpsb
outsl
mov
loop
xchg
outsl
scas
movsb
mov
movl
mov
js
mov
inc
sub
push
icebp
cmp
repnz
pop
pop
in
loopne
aam
jmp
shlb
icebp
icebp
add
sbb
out
fdivrl
add
loopne
shll
cltd
int
in
sbb
fmulp
xchg
xor
xor
xlat
cmp
ss
ret
enter
out
adc
into
pop
and
sbb
push
ja
cwtl
and
mov
popa
jg
adc
les
and
push
xchg
int
mov
and
movsb
jle
adc
cmp
sbb
xor
mov
shrl
ljmp
jmp
in
inc
fs
fisttps
bound
and
les
or
fistpll
cmpsl
xorl
gs
ret
mov
stos
iret
lret
dec
fldl
adcl
out
nop
xor
sbb
ret
push
int3
ds
push
adc
aam
inc
out
adc
pop
insb
sub
and
jbe
lea
adcl
scas
out
popf
push
xor
lcall
mov
orb
pusha
jecxz
test
cmp
mov
std
jl
mov
pop
ficoml
or
sbb
add
lock
or
add
stc
inc
subb
repnz
xor
fisubs
lcall
lock
lret
or
aam
outsl
shlb
mov
mov
stc
push
sbb
push
and
and
mov
aaa
lods
dec
push
mov
lret
push
cmp
fsubrs
stos
push
addr16
ljmp
fs
pop
adc
out
mov
dec
add
inc
inc
repnz
and
in
adc
leave
das
stos
clc
jg
test
daa
mov
rcrl
pop
mov
add
dec
jb
push
add
cmc
mov
mov
pop
dec
andb
ds
jb
js
xchg
lock
pop
xlat
testb
sub
cwtl
testl
jecxz
jg
add
mov
and
mov
adc
adc
ret
dec
jle
push
loopne
dec
insb
cmpl
inc
adc
call
jo
xchg
dec
xchg
dec
das
in
sub
leave
push
pop
or
xor
pop
stc
ja
and
arpl
or
pop
out
in
icebp
mov
dec
imul
dec
lock
js
jmp
fiaddl
fbld
cmc
dec
movsl
fmuls
enter
call
xchg
and
int
xchg
sbb
andl
and
fistl
cmp
cltd
pop
outsb
test
daa
test
outsb
enter
cld
jo
pop
push
sbb
dec
xchg
inc
fistpll
int
mov
add
mov
cmp
jbe
dec
insl
mov
cmpb
mov
fists
lcall
dec
cmp
push
push
adc
jg
movsb
cmpb
cmp
or
fstpt
shrl
adc
xor
xchg
inc
or
into
jle
nop
dec
hlt
dec
les
lods
repnz
and
cmp
fwait
repnz
jo
insb
mov
dec
popa
mov
pusha
mov
xor
fsub
les
adc
shl
fsubrp
std
loop
or
jbe
pop
insl
push
push
lahf
loopne
rorl
mov
hlt
jo
imul
sbb
jo
mov
sahf
inc
daa
pop
jnp
imul
pop
xor
mov
jmp
sbb
mov
ss
push
mov
mov
fistl
pop
pop
add
pushf
fwait
mov
push
pop
sub
fisttps
je
imul
dec
ss
hlt
adc
cmp
sbb
jecxz
jp
into
jb
sub
shlb
dec
fidivl
daa
jg
in
popf
ss
pop
push
inc
test
push
pop
stos
fs
shlb
adc
daa
add
dec
xor
mov
sbb
pop
hlt
mov
jp
repnz
lea
xchg
rclb
lods
lahf
add
cmpsl
fstpt
xlat
daa
movsb
mov
imulb
jl
ljmp
stos
fmull
pop
dec
lret
mov
xor
nop
ljmp
aas
jp
imul
fwait
jns
out
and
aas
mov
cmp
aam
add
push
shlb
cmpsb
aas
leave
push
sar
test
pushf
stc
ja
icebp
and
arpl
loope
popa
sub
cld
call
cmp
test
mov
or
push
scas
fistl
mov
movsl
mov
jno
ja
insl
jne
xor
rcll
sbbb
pushf
sbb
ja
xor
cltd
repnz
jp
jmp
push
push
cwtl
fwait
jle
in
repz
jne
call
mov
in
cwtl
fwait
mov
or
mov
and
sbb
dec
data16
inc
pop
addr16
js
stos
or
adc
int
dec
mov
xor
adc
xor
into
mov
mov
movsl
mov
or
das
pusha
sti
mov
mov
jae
push
jge
leave
or
fadd
lcall
sub
jg
pop
jo
and
sti
add
fnstsw
lret
shrb
xchg
xor
into
lcall
pop
js
or
and
pop
in
sbb
bound
mov
xchg
sub
adc
and
call
std
mov
mov
and
roll
jo
das
loopne
add
add
push
rolb
cmp
popa
shl
mov
dec
jae
loope
inc
repz
nop
stos
add
cltd
dec
jl
push
lahf
ljmp
adc
ljmp
movsb
adc
mov
loope
rolb
jbe
ja
mov
jns
loopne
jmp
scas
daa
sub
jno
mov
or
andl
or
std
in
push
test
dec
int
pop
ret
jge
mov
and
fsubr
cmp
push
jecxz
ja
mov
dec
out
nop
stos
mov
stos
mov
xchg
fxch
loopne
aaa
dec
sub
mov
fst
xor
pop
push
hlt
out
add
leave
insb
inc
xchg
xchg
xor
fwait
repnz
out
loop
cmp
sbb
in
pop
rol
sbb
inc
sub
push
outsb
fwait
mov
jp
jmp
jp
pop
adc
add
jno
imulb
push
addr16
cmp
inc
and
in
iret
pushw
add
enter
out
push
aam
arpl
rcl
sub
lods
dec
orl
shr
jmp
stos
int3
mov
jle
pop
mov
das
ja
neg
sbb
call
lods
sbb
xor
pop
push
and
mov
dec
outsl
outsb
icebp
call
inc
xchg
cmp
sti
xor
mov
movsb
adc
inc
inc
inc
push
cmp
mov
xor
pop
sbb
push
add
push
adc
cmp
xchg
and
leave
mov
out
repz
into
mov
outsb
mov
js
fwait
lock
scas
and
sbb
add
rcrb
push
jge
sub
fdiv
sub
mov
das
lods
testb
xchg
push
adc
push
imull
cmp
xchg
mov
pop
stos
je
packsswb
jg
sti
cmp
jl
sub
std
lcall
push
mov
mov
inc
scas
sbb
sbb
es
mov
xor
loop
jbe
push
mov
jge
adc
jl
or
sub
into
in
push
or
push
sub
mov
inc
fdivrp
pop
and
jmp
jne
lock
or
loopne
ret
gs
and
gs
orl
loop
hlt
inc
jns
test
in
adc
cmp
lods
pop
stos
pop
pop
mov
xchg
adc
sub
sbb
mov
mov
ret
xchg
push
lea
mov
jmp
mov
mov
cs
repz
in
aad
mov
xor
ror
jp
loopne
das
aam
inc
mov
loope
orb
inc
outsb
push
pop
jl
or
jg
adc
test
pushf
pop
mov
addr16
test
jno
pushf
rorb
leave
xlat
mov
faddp
popf
xor
mov
sti
xor
adc
std
gs
into
mov
xor
cli
add
jecxz
xchg
and
sbb
cli
nop
inc
xlat
adc
test
lods
cli
mov
push
jne
sbb
mov
paddusw
xchg
xchg
aaa
mov
mov
jecxz
adc
shl
fidivs
mov
lahf
pop
xchg
insb
in
scas
add
movsl
inc
lods
cmp
lock
lret
fiaddl
int
mov
inc
jge
mov
adc
call
ficoms
fs
jne
or
pop
roll
shll
add
mov
cmpsl
mov
sub
or
fcompl
scas
xchg
xchg
lods
fistpll
mov
mov
fst
add
outsb
cmp
and
add
push
mov
addr16
aad
test
test
loope
fstpt
sti
sub
add
insb
lock
sarl
aam
jl
inc
icebp
or
js
mov
pop
inc
iret
dec
xor
cmpsb
xchg
arpl
sub
fnstcw
inc
fstpl
xchg
pop
cmp
and
mov
jo
mov
andb
lcall
pusha
sbb
cmp
sub
sub
fbstp
xchg
outsb
stc
mov
push
push
sub
rcll
and
xor
outsb
sbb
inc
push
lock
mov
mov
xchg
and
scas
sbbl
lods
sbb
or
sbb
pusha
scas
xor
loopne
sub
popf
and
cmp
lea
sbb
sub
pop
or
int3
xchg
loop
lret
push
inc
scas
shll
xor
aam
fwait
nop
mov
test
ss
lods
out
lods
mov
in
lret
push
pop
jmp
xchg
in
je
mov
loop
dec
sahf
mov
rcl
out
or
push
mov
hlt
push
mov
ret
je
mov
repnz
or
pop
mov
fisubl
out
ret
ljmp
dec
and
push
inc
in
dec
mov
lods
xor
push
pusha
stos
adc
jge
xor
mov
repnz
push
xchg
cmp
push
jp
pop
pusha
scas
mov
jle
in
cmp
lret
fnstcw
or
push
jl
orb
out
dec
mov
xor
call
push
jno
loopne
sahf
stc
mov
jbe
daa
add
or
iret
add
pushf
js
add
mov
in
rorb
movsl
rol
sbb
add
loopne
dec
mov
sub
mov
mov
and
sahf
test
mov
push
pop
mov
cltd
fwait
sahf
js
cmp
mov
movsb
lds
repz
lods
scas
inc
js
mov
in
les
fwait
sub
sub
cmp
push
push
sub
jne
out
bswap
fcomps
mov
neg
jp
iret
in
mov
jmp
dec
cmp
mov
cwtl
lcall
push
mov
mov
inc
in
inc
xchg
jb
scas
or
idiv
sub
out
std
or
push
mov
fisttpl
outsl
push
jl
adc
repz
popa
movsl
testl
movl
xchg
mov
mov
inc
cmpsl
lret
jno
dec
xor
cli
jo
shll
xchg
mov
add
sub
and
les
xor
loop
cmpsb
gs
addl
test
test
icebp
lods
sub
sub
adc
popa
pop
mov
or
sbb
or
xchg
sbb
mov
jg
scas
xchg
cmp
test
sub
mov
push
jp
stos
test
lretw
mov
mov
les
pop
repnz
pop
sbb
pop
xor
jl
dec
jle
xchg
cli
mov
and
adc
jge
sbb
mov
dec
push
xchg
dec
sub
test
jg
sbb
mov
mov
inc
or
pop
es
push
jecxz
sarl
dec
pop
pop
clc
jmp
adc
add
movsl
in
les
dec
and
loope
pusha
mov
test
pusha
lcall
ret
jne
jle
and
jl
aam
pop
cld
jne
push
aam
xor
in
je
out
inc
test
into
adc
lods
fiadds
xchg
adc
push
mov
in
insl
aaa
and
outsl
fwait
jecxz
mov
orb
test
outsl
or
jbe
mov
cltd
and
inc
jno
and
outsl
adcb
sbb
mov
shl
sbb
add
jo
cltd
mov
loopne
scas
jno
scas
nop
mov
out
inc
mov
ret
xchg
and
in
fprem
enter
or
mov
test
lahf
dec
fsubrl
aad
mov
rcrl
add
insl
rolb
ficoms
lods
pop
xchg
ljmp
cmp
lods
testl
addr16
dec
rorb
add
mov
adc
adc
xchg
cs
push
sub
and
rorb
add
stos
test
or
test
dec
jne
inc
sbb
shlb
xchg
ss
bound
add
ret
push
lods
cmpsb
lret
xchg
mov
imul
sub
gs
add
jae
orl
daa
ret
icebp
test
lahf
outsl
pop
adc
push
adc
xor
mov
je
add
rorl
sbb
pop
dec
push
push
fcoml
rorb
sti
lds
test
xor
addr16
fiadds
in
add
dec
jmp
jp
call
xor
mov
shlb
adc
xor
or
cli
cmc
ret
filds
ds
iret
mov
cmp
mov
jne
dec
pop
and
std
movsb
add
loopne
lea
xor
out
addr16
jmp
jle
test
lahf
fmull
fcomi
and
inc
aam
icebp
arpl
inc
or
mov
jge
sub
adc
fisubs
and
push
dec
sub
xchg
mov
push
or
mov
fisttpl
add
dec
mov
fldt
xchg
in
mov
pop
or
int3
fistps
call
cmpsb
xor
sbb
iret
sbb
mov
push
lret
incb
stos
cwtl
jb
arpl
and
fcompl
jp
mov
in
or
je
mov
mov
push
pusha
cmpsb
mov
xchg
pop
mov
popf
lods
pop
pop
decb
push
ds
lock
sti
aas
hlt
dec
outsb
sub
sub
out
popa
dec
add
fidivl
test
pop
adc
dec
pushf
imul
mov
nop
xchg
addr16
hlt
mov
das
mov
dec
push
data16
adc
pushf
ljmp
ret
dec
repz
cli
arpl
cwtl
hlt
or
outsb
imul
push
sub
cmp
pop
jnp
sarl
int
push
pop
dec
push
xor
bound
lock
decl
testl
push
sub
xchg
xchg
mov
scas
adc
jl
sbb
in
and
cvtps2pd
sub
or
and
enter
mov
aaa
jge
add
loope
sbb
das
iret
dec
lahf
push
test
xchg
fcoml
stc
mov
test
pushf
jae
sbb
inc
jo
std
loop
add
pop
filds
and
aam
fistl
in
cmp
lcall
inc
jle
loopne
cmp
iret
dec
inc
aad
add
pop
xchg
jl
jmp
mov
das
jge
adc
jge
mov
mov
add
mov
mov
mov
or
xlat
dec
clc
movsb
cmpsl
add
xor
mov
sub
lcall
mov
lods
imul
sub
xlat
push
test
ljmp
mov
mov
mov
inc
js
in
mov
and
call
rclb
cmp
or
jbe
mov
add
and
stos
lods
sahf
nop
in
pusha
xor
jmp
test
pop
or
push
repz
outsb
insb
and
cmp
inc
pop
test
mov
add
gs
cmp
movups
lcall
ret
sbb
jnp
push
lods
icebp
inc
mov
mov
and
pop
aas
enter
mov
xor
and
push
or
xor
daa
mov
pop
fldenv
aad
shll
xor
cmp
inc
iret
test
testb
scas
mov
and
dec
loope
arpl
popf
or
push
sahf
jg
decl
cmp
not
rol
push
pop
out
out
mov
dec
push
and
sti
je
ret
out
or
test
sbb
imul
inc
xor
es
repnz
push
repnz
out
ljmp
cmpsl
pop
cmp
xchg
ds
shl
daa
ret
lods
inc
push
fucompp
sub
andl
in
popf
inc
adc
lahf
mov
add
mov
inc
cmpsb
mov
test
cwtl
rcrl
cmp
sub
clc
jp
xchg
add
adc
and
dec
cwtl
add
insb
adc
dec
jg
stc
push
fwait
loopne
xchg
imul
jae
jle
inc
jae
pop
orb
sbb
insb
and
pop
push
dec
int3
pop
add
mov
inc
fistpll
nop
paddw
xchg
inc
jbe
sbb
pop
loopne
mov
mov
sbb
cmp
add
leave
sbb
xor
roll
push
mov
gs
js
pop
or
or
int3
jne
ljmp
add
movsl
pop
loope
dec
sbb
jg
popf
mov
sub
adc
fists
pop
jne
ss
into
stos
xchg
ficoms
push
and
pop
int3
and
aad
xchg
lahf
cmp
daa
ljmp
dec
ret
and
mov
mov
js
dec
je
inc
mov
fldl
sub
cld
sbb
inc
sub
or
scas
or
leave
lds
fs
out
push
leave
stos
add
cwtl
adc
cmp
mov
jge
cmp
inc
pop
adc
mov
jg
in
std
ror
xor
pop
xlat
dec
lcall
loopne
mov
jno
stos
inc
lret
repz
ja
sysexit
bound
inc
loop
mov
push
faddl
imul
fs
fs
xchg
push
pushf
mov
jmp
cmp
sub
adc
sbb
dec
test
fistps
pusha
lret
sbb
lods
dec
outsb
xor
xchg
xchg
in
mov
test
stc
gs
cmp
pop
pop
cltd
ja
lcall
pop
test
dec
in
inc
or
dec
into
jp
mov
ds
cli
xor
stos
mov
pop
lahf
sub
stos
les
mov
cltd
mov
xor
cmp
mov
dec
jge
mov
iret
popf
aaa
jae
adc
dec
mov
dec
fidivs
add
ret
mov
sarb
pushf
icebp
push
push
sbb
mov
clc
out
dec
jg
popa
lock
cmp
jnp
fldt
leave
in
inc
pop
sti
sub
xchg
and
filds
insb
shl
mov
daa
push
int3
movsb
push
jne
repnz
div
or
mov
out
mov
dec
cmp
xchg
sbb
mov
mov
inc
mov
or
das
xor
jl
dec
sbb
mov
jecxz
add
add
shrl
cli
hlt
cmpsl
sbb
pop
in
je
xlat
jp
push
lds
movsl
or
out
mov
push
data16
movsl
mov
fiaddl
data16
xor
clc
leave
cs
xor
leave
add
popa
mov
xor
inc
cmp
mov
push
movsb
add
stos
gs
sub
pop
pusha
dec
sahf
jmp
pop
push
aaa
jmp
insb
test
pop
inc
aam
rorb
dec
cmp
push
mov
push
orb
cmp
stos
rorb
xchg
jmp
shl
mov
and
xorl
sub
lock
ss
in
fxch
nop
inc
cmp
sub
sub
nop
popf
jnp
mov
sub
cmp
iret
aad
mov
pusha
adc
out
jecxz
outsb
push
les
jne
mov
adc
adc
push
jmp
movsb
mov
xor
ss
jns
fwait
shll
jmp
shrl
insb
ret
fnstsw
inc
scas
mov
xor
adcb
and
sub
mov
fistpll
in
mov
fisttps
lahf
adc
jns
adc
out
stos
jl
xchg
add
in
sbb
aad
cmpsb
out
push
jecxz
adc
lret
jl
inc
push
mov
ficoms
outsb
adc
outsl
mov
movsw
cs
nop
and
xchg
mov
pop
pushf
jl
and
xlat
leave
cs
lods
mov
pop
lds
jp
into
arpl
pop
xchg
or
js
mov
add
push
clc
jg
test
inc
cmp
or
push
pop
rcrl
lret
push
ja
arpl
mov
pusha
test
sub
mov
xor
mov
aam
in
ret
arpl
fdiv
push
cmp
aam
jp
ret
popf
cltd
outsb
xor
jmp
mov
cld
adc
ret
pop
pop
nop
dec
mov
inc
stos
sbbl
cmp
repz
pop
clc
add
sub
sbb
dec
out
xchg
mov
sub
mull
adc
stos
cltd
jbe
pushf
and
mov
xchg
or
adcb
jae
lcall
movsb
fcoml
cmp
xchg
sub
movl
mov
cmp
adc
mov
jo
mov
sub
mov
cmc
lods
jl
stos
mov
mov
bound
lret
inc
out
outsl
dec
and
sub
scas
mov
fs
aas
xchg
mov
sub
sbbb
add
lret
subb
shrl
xchg
int
mov
dec
mov
inc
mov
stc
ljmp
lods
sub
movsl
jbe
hlt
mov
add
fwait
jnp
movsl
pop
stc
dec
pop
mov
out
in
cwtl
push
out
mov
fdivl
lret
dec
scas
xchg
sub
and
and
out
ret
jle
call
in
add
add
jae
andb
push
xor
sbb
jl
cmp
xchg
push
cmpsl
sbb
add
add
jl
lods
arpl
or
mov
push
inc
and
mov
shll
mov
pusha
loope
mov
inc
push
lret
inc
gs
pop
mov
lea
in
mov
jle
hlt
dec
and
imull
or
popa
scas
ret
add
repz
xor
mov
sub
andl
mov
xor
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
sbb
mov
and
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
and
xor
add
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
xor
xor
add
add
mov
adc
mov
xorl
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
pushl
push
pushl
call
cmpl
jb
movzwl
sub
mov
add
mov
sub
lea
xorl
xor
subl
xor
cmp
movl
je
xor
mov
xor
orl
add
cmp
movl
jne
addl
pushl
call
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xor
addl
mov
subl
add
movl
cmp
movl
je
pushl
subl
pushl
andl
call
sub
mov
xor
xor
xor
mov
mov
xor
add
cmp
je
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
push
pushl
push
call
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
mov
xor
mov
mov
addl
add
mov
sub
mov
mov
addl
add
mov
inc
mov
subl
mov
orl
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
orl
xor
addl
inc
ret
push
mov
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
add
mov
and
cltd
push
mov
add
add
adc
push
push
mov
mov
sub
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
mov
mov
xor
xor
xor
andl
add
adc
xor
xor
cmp
jne
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
pop
ret
push
mov
push
mov
mov
add
movl
mov
adcl
mov
xorl
add
sbbl
xor
movl
cmp
movl
jne
andl
mov
dec
mov
and
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
adcl
movl
mov
mov
and
lea
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
push
pushl
push
call
cmpl
jb
xor
add
adc
mov
lea
dec
mov
mov
adc
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
inc
mov
negl
xor
add
andl
mov
mov
mov
sub
and
mov
incl
mov
andl
mov
andl
add
movzbl
or
push
add
mov
movzwl
sbb
mov
andl
mov
mov
xor
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
sbbl
add
movl
cmp
je
mov
jmp
mov
cmp
jne
movl
push
jmp
mov
mov
mov
cmp
jne
sbb
mov
mov
sbb
mov
xor
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
movl
mov
mov
sbb
mov
movl
mov
sbbl
xor
addl
add
movl
mov
sbb
mov
xor
inc
push
xor
mov
mov
add
addl
mov
mov
mov
sbb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
push
neg
jmp
mov
enter
imul
rcrb
cmpsl
sbb
or
bound
scas
or
dec
cmp
ljmp
jg
jbe
repz
ja
orl
push
xchg
pop
fldt
cmp
cmpsl
pop
hlt
add
pop
pop
push
fmuls
insl
lea
repz
fsubrs
xchg
push
loop
or
xor
pop
sub
inc
xchg
in
mov
push
popf
test
xchg
std
shrl
mov
mov
push
sahf
std
insb
mov
lcall
fidivs
jae,pt
lret
mov
dec
pop
xor
sub
repnz
in
pop
insl
add
dec
popa
outsl
shll
arpl
add
scas
cmp
sarl
xor
xlat
mov
xor
sbb
push
push
aas
pop
std
push
add
loope
out
xorl
mov
lods
jmp
dec
pop
dec
add
aas
cmc
cltd
mov
test
xchg
div
mov
sbb
cli
mov
push
rorl
pop
mov
scas
add
jo
or
jns
sbb
sbb
insb
mov
mov
push
jo
push
movsl
xchg
add
inc
xchg
pop
mov
inc
sub
lods
push
adc
dec
xor
xchg
jecxz
mov
pop
push
pop
inc
test
int
loope
jne
gs
cmpsb
inc
mov
jnp
test
cmpsl
mov
lret
rorb
mov
out
pop
push
mov
adc
lods
pop
loopne
xchg
add
and
push
sbb
ja
xchg
dec
adc
test
test
cltd
pop
dec
and
dec
insb
mov
repz
les
shlb
loope
ljmp
lods
sub
pcmpeqw
ljmp
push
fs
push
mov
std
sub
adc
mov
fmul
lahf
ret
cld
fdivp
enter
sub
jmp
cmp
dec
out
int
adcl
retw
sub
lods
cmpb
mov
dec
mov
inc
pop
jmp
and
xlat
imul
lahf
pop
pop
sub
outsl
lret
dec
push
aas
add
add
aaa
jno
shll
in
sbb
push
setno
sub
and
mov
cltd
andb
jp
cmpsb
dec
sti
xchg
scas
dec
or
fmuls
jns,pt
mov
test
jnp
sub
mov
dec
rcrl
sub
mov
mov
cmc
inc
sbbb
insb
pop
sbb
or
push
dec
add
lods
jne
aas
pop
mov
das
testb
dec
fistpll
aas
pop
rcrl
les
jae
arpl
lahf
ljmp
data16
push
mov
adc
in
out
les
in
shlb
xchg
and
out
pop
pusha
and
jle
jo
pop
or
rolb
int
dec
sti
or
inc
insb
sbb
cmp
mov
inc
repnz
sarl
mov
test
dec
and
fistps
mov
or
icebp
jb
out
jo
or
cmp
cli
lods
push
imul
push
inc
je
mov
arpl
outsl
push
pop
aas
mov
jmp
or
xchg
jnp
sub
iret
mov
sub
lods
rclb
jae
ss
push
push
or
hlt
inc
jmp
jb
sub
add
cmp
loop
and
test
cmp
xchg
pop
dec
dec
in
or
stc
xlat
scas
divb
sbb
mov
push
xchg
negb
pop
xchg
add
inc
repnz
xor
xlat
orb
enter
cmpl
or
data16
lea
popa
sub
xor
out
cmp
dec
jp
jae
mull
push
push
mov
jg
cmp
lds
push
jle
xchg
cld
negl
pop
mov
jae
popf
insl
xchg
fs
jmp
es
mov
out
add
daa
mov
jecxz
add
sub
pop
push
pusha
mov
push
stos
ds
mov
sarl
and
sahf
jnp
jmp
shl
mov
insl
int
inc
ficompl
push
add
pop
lahf
inc
pop
pop
loope
sbb
ljmp
movsb
outsb
or
xchg
in
inc
lret
pusha
pusha
outsb
test
scas
and
negb
jmp
or
jno
daa
lods
mov
movsl
jecxz
jae
outsb
xchg
mov
inc
mov
imul
call
cmp
sub
dec
mov
leave
aad
mov
sbbl
adc
mov
sub
insl
js
orb
fildl
pop
dec
movsb
inc
lcall
sub
or
jbe
imul
out
pop
mov
sbb
daa
or
je
xor
add
aam
xchg
pushf
inc
into
popa
or
jmp
mov
add
pop
in
lahf
lret
adc
push
dec
cld
dec
xor
shrb
sbb
mov
pop
int
push
mov
aas
push
push
xchg
test
push
xchg
cltd
int
push
int
jns
pop
xor
pop
or
popf
inc
cmpsb
mov
fnsave
jns
inc
and
movsl
xchg
insl
rorb
enter
hlt
or
sbb
mov
addr16
pop
into
dec
repnz
mov
pop
adc
lea
or
ss
arpl
mov
fmulp
int
dec
mov
sahf
lahf
lods
repz
push
mov
sbb
fdivr
dec
add
push
scas
cmp
mov
das
cmp
addb
cmp
lods
mov
xor
jg
test
inc
xchg
push
add
outsb
add
jge
xorb
addr16
sbb
ja
adc
insb
das
pusha
stc
stc
push
bndldx
ss
in
add
xchg
jbe
fs
in
mov
lret
dec
fimuls
out
and
imul
mov
fs
mov
mov
fsubrl
fdivrs
or
lahf
imul
rorl
out
pop
cmp
push
out
push
xor
push
loop
fwait
push
lcall
pusha
lock
mov
repnz
sbbb
leave
add
sbb
pushf
in
call
cmp
stos
xor
orb
cmp
cld
dec
loop
xor
pop
sub
testb
or
xchg
call
push
fwait
ss
gs
push
push
test
pop
das
popf
jns
sbb
lds
jecxz
cltd
xlat
in
test
mov
popa
rorb
subb
push
jle
push
loope
xchg
mov
popf
nop
insl
ds
lock
cmp
popa
adc
push
mov
jmp
and
mov
and
daa
pushf
mov
pop
adc
cld
icebp
sub
fistpll
add
push
sub
rorb
into
aad
into
notl
push
ds
adc
pop
shrl
jmp
fs
clc
les
fisubl
jecxz
jae
push
aaa
ss
xor
mov
in
movsl
sub
inc
adc
inc
dec
pop
loopne
push
dec
jl
mov
mov
mov
call
sbb
mov
call
jae
mov
ret
sbb
inc
mov
jae
mov
inc
dec
mov
fnsave
in
inc
and
xchg
xor
or
push
testb
loop
xchg
sub
adc
and
out
das
out
scas
cli
jp
sub
lahf
jmp
mov
push
pop
out
add
pop
jecxz
in
adc
cmpsl
shl
push
xor
jmp
pop
add
or
sahf
dec
fnstenv
push
or
rcrb
xchg
mov
fdiv
stos
das
bound
shlb
cmp
ficoms
out
es
ret
fwait
imul
stos
sarl
cld
xor
mov
mov
sarl
addl
push
call
add
in
mov
movsb
mov
das
mov
dec
mov
fistps
sbb
adc
mov
adc
repnz
cmpsl
sub
and
dec
imul
cld
in
cmp
popa
mov
int3
out
xchg
push
xchg
rorl
mov
movsl
mov
jb
dec
inc
xorb
mov
push
mov
adc
mov
jb
push
lds
aam
push
pop
ss
jmp
sub
mov
fmul
cmp
fldl
jp
loopne
fldl
enter
out
dec
ljmp
je
or
push
adc
xchg
xor
das
jns
adc
shr
xor
andnps
push
pop
jno
sub
lea
test
adc
ds
clc
in
je
mov
cmc
aas
sub
fistl
sub
pop
fimull
or
xchg
inc
rclb
inc
pusha
out
or
xchg
mov
push
fs
or
in
roll
jb
jle
mov
push
or
into
mov
fdiv
mov
fmul
push
sub
outsb
cmp
inc
stos
pop
jp
sti
cmp
seto
xor
jb
xchg
xchg
sbb
pop
lret
jg
lret
jae
shlb
decb
fisubl
vpmaddwd
cmp
mov
fs
mov
mov
comiss
idiv
fwait
pop
int
ds
cmp
fstl
sbb
shlb
mov
clc
xchg
adc
addr16
cwtl
and
inc
arpl
shrb
add
inc
in
pop
mov
push
stos
aad
inc
sbb
ja
mov
cmp
pop
add
fistpll
mov
xor
mov
mov
aam
lods
shll
xchg
fs
test
pusha
popa
sub
arpl
xchg
repz
popa
jb
imul
dec
mov
mov
imul
inc
inc
mov
and
aad
imul
divb
inc
push
aas
test
cmpsb
sbb
add
lock
inc
stc
lds
mov
call
mov
mov
cwtl
call
sbb
jno
cmp
and
cmp
jge
jnp
push
cs
pop
jge
cld
push
inc
jbe
dec
enter
sbb
mov
and
dec
out
jecxz
and
flds
and
mov
xor
imul
adc
out
lock
fisubrs
sub
daa
cmp
mov
movsb
adc
popa
jg
jb
icebp
orb
pop
test
bound
sbb
jne
cmp
dec
loopne
aas
mov
nop
repnz
popf
push
insl
ljmp
sbb
push
stos
jecxz
and
bound
push
nop
xor
and
movsl
into
or
call
das
dec
adc
push
xchg
adc
insl
pop
gs
shlb
mov
call
mov
mov
repz
xchg
push
add
popf
jecxz
inc
scas
mov
aam
pop
flds
bound
out
addl
jg
mov
lcall
das
pop
xchg
jmp
dec
hlt
cld
movsb
xchg
ljmp
and
sub
push
and
push
fs
rcrb
push
xchg
and
fcmovu
xorb
ss
testl
jge
mov
add
lock
mov
das
movsb
xor
scas
outsb
lahf
jne
xchg
imul
xchg
imul
sbb
xor
fst
jmp
in
push
push
loope
repz
sti
sub
sbb
push
xchg
clc
fsts
and
xchg
pushl
xchg
std
inc
xchg
pushf
sbb
mov
test
or
and
xor
ret
or
mov
sbb
xor
xorl
jns
repnz
xchg
mov
push
pop
fisttpll
and
test
lods
enter
scas
out
inc
test
stc
pop
dec
xchg
xchg
insb
jbe
ret
xchg
xor
push
pop
icebp
imul
pop
mov
lahf
ftst
loope
popf
cmp
inc
daa
push
rcrl
ljmp
pusha
lods
outsb
mov
mov
lds
pushf
mov
inc
es
sub
dec
pop
inc
ja
xor
fmuls
jns
jmp
inc
in
cs
lret
inc
or
inc
cltd
cmc
out
loopne
cmc
sarb
sarb
jle
pusha
inc
ss
dec
fnstenv
mov
testb
andl
test
dec
fcoms
shl
out
stos
cltd
mov
and
bound
pusha
es
pop
js
mov
add
call
cltd
xor
pop
cld
stos
and
push
daa
xor
and
testb
mov
push
mov
mov
and
mov
lods
jp
xchg
bound
lretw
addl
mov
loope
mov
sti
sti
int
dec
imul
aaa
loopne
imul
push
xor
xor
xor
scas
mov
out
std
leave
or
inc
ds
std
lret
aaa
cmp
lods
add
mov
mov
fs
inc
fisttpll
cmp
cmp
rorb
xchg
xchg
das
mov
mov
sub
push
jb
mov
out
enter
jl
and
xor
iret
jl
mov
push
fcomip
mov
jmp
outsb
and
jp
mov
addl
mov
dec
cs
into
sbb
xchg
in
pusha
int
dec
test
jmp
loope
add
jecxz
in
and
mov
push
dec
bound
xchg
sub
mov
aam
stos
icebp
xchg
ss
ret
xor
adc
je
add
rolb
nop
scas
leave
adc
xchg
xor
adc
pop
mov
jo
push
or
lcall
cmp
sbb
xchg
stos
and
mov
shlb
int3
pop
sub
arpl
push
mov
xchg
mov
mov
frstor
jne
jge
idiv
sbb
adc
jnp
cmp
mov
test
call
mov
fdivs
call
bound
insb
sub
fidivrl
rcll
stc
scas
fcomps
hlt
and
add
xor
inc
mov
cmpl
cmp
aas
mov
adcl
xlat
test
dec
push
and
or
and
lahf
nop
enter
daa
or
inc
dec
cmp
jl
int
jmp
popf
lods
das
ja
dec
jg
adcb
ja
mov
dec
sarl
insb
dec
adc
cltd
call
cmp
rorl
jecxz
add
imul
cld
mov
cmp
fwait
and
inc
sbb
inc
insb
jle
aaa
lret
mov
mov
insb
out
mov
xchg
andl
lret
or
nop
pop
jp
sahf
push
aam
cmc
push
test
dec
insl
xor
repz
stc
jl
ljmp
pop
cmpsl
push
and
stos
cmp
out
sub
rcr
sbb
je
je
jne
ret
sti
pop
rclb
mov
cmp
cld
sub
outsl
fisttpll
add
scas
out
push
sbb
push
call
adc
lret
push
arpl
inc
xor
lea
lods
inc
in
lahf
sub
icebp
adcb
mov
fisttpll
lea
lahf
or
xorl
mov
adc
dec
and
cltd
cmp
aaa
push
decl
lret
adc
push
cmp
sbb
les
sub
pop
shrb
aad
push
pushf
push
or
and
jp
push
stc
popa
push
outsb
out
push
js
aaa
les
movsl
or
adc
dec
mov
outsl
jge,pn
mov
push
xchg
sbb
ret
out
cltd
out
sub
add
in
daa
stos
and
push
jnp
mov
mov
cmp
dec
jle
or
fildl
lock
in
jl
push
and
sbb
insb
arpl
jecxz
adc
mov
sub
push
mov
out
mov
and
pushf
mov
cmp
or
inc
fisubl
jnp
add
repz
lods
xlat
fdivs
dec
adc
fisubl
pop
push
mov
xchg
sbb
loope
inc
js
mov
faddl
hlt
lock
stos
pop
lcall
push
imul
mov
shll
pop
ja
loope
repz
test
adc
add
lret
data16
das
jge
sbb
add
dec
sbb
sub
jno
dec
inc
scas
ret
nop
sub
mov
rorb
pop
inc
test
shrb
in
fistpll
xor
jle
cltd
and
cmpb
and
js
mov
jnp
pop
mov
cmpsl
les
lcall
in
frstor
add
dec
outsl
inc
jb
stos
xchg
cmp
lret
jo
jmp
cs
push
and
jecxz
mov
hlt
mov
aaa
jge
add
xlat
and
lahf
xchg
stos
cmp
stos
inc
dec
sbb
es
pop
ja
shrl
adc
jmp
and
sbb
cmp
push
xchg
push
xchg
adc
test
cmp
andl
jle
mov
out
fs
mov
clc
pop
cmpsb
inc
push
in
fiadds
sbb
or
add
dec
enter
push
lret
mov
pop
and
mov
add
xchg
cli
xor
mov
lods
push
cltd
or
cmpsl
sub
adc
enter
mov
imul
aad
rclb
sub
cld
xchg
nop
addr16
mov
int
test
pop
subl
cmc
jp
mov
cmpsb
inc
insb
fcmovb
push
pop
or
js
pusha
mov
mov
and
lods
out
orb
fcomp
aam
push
js
xchg
popf
push
and
push
cmpsb
out
pusha
pop
xor
loopne
call
js
and
daa
jmp
jl
out
mov
aad
jne
das
aad
cmp
lock
outsb
enter
mov
sbb
sub
repnz
mov
inc
inc
fistpl
or
fadds
das
pop
adc
lret
outsb
repnz
out
pop
cld
in
pop
fs
xor
std
fnsave
sbb
aam
repz
sarb
fstpt
sahf
movsl
shl
mov
cmc
inc
fildl
cltd
fwait
inc
iret
fists
push
iret
inc
insb
std
jmp
dec
bound
aas
sub
sub
xchg
mov
sub
ljmp
cld
mov
fcoms
cmc
ds
inc
aaa
cld
lcall
bound
cltd
imul
data16
gs
push
ja
cmp
mov
sbb
lds
mov
or
jg
lret
jg
bound
or
imul
xchg
xchg
adc
sbb
and
cmp
outsl
js
mov
in
xlat
dec
or
mov
pop
pop
sti
mov
inc
mov
push
sbb
fbstp
cltd
nop
sbb
jbe
loopne
adc
and
mov
call
mov
lods
mov
lods
mov
and
pop
adc
lahf
loop
cs
mov
call
inc
ss
mov
andb
std
jb
mov
rolb
add
pop
into
sahf
jno
adc
dec
xor
shlb
ret
ficoml
mov
rcll
sbb
test
outsl
lds
stc
xchg
and
sub
sbb
push
out
in
jns
enter
mov
aad
scas
push
mov
sbb
repnz
cmp
dec
sbb
xor
dec
fwait
dec
lret
dec
mov
adc
loop
fidivrs
sahf
iret
xchg
mov
ja
push
imulb
loope
and
and
and
icebp
jle
enter
adc
ja
or
fisubrl
pop
jle
or
and
cld
ret
mov
test
imul
jo
cmp
xor
dec
xor
dec
testb
fldl
dec
aaa
xor
repnz
add
cmc
lcall
imul
ds
repz
les
lds
xor
mov
jb
out
inc
xor
ret
push
xchg
push
pop
int
sub
dec
xor
nop
andb
loopne
mov
sarb
jle
jmp
push
adc
addr16
push
push
xchg
sahf
xchg
xchg
popf
int3
pop
sbb
arpl
lods
sub
jb
inc
or
xor
lods
fnstsw
adc
dec
dec
ja
pushf
int3
dec
lahf
xchg
mov
jecxz
jb
push
mov
pop
js
lock
sub
xor
arpl
sbb
adc
ret
iret
mov
cmpsl
jne
cmp
adc
dec
push
sbb
pop
sub
ja
add
push
loopne
repnz
xchg
jnp
lcall
adc
mov
clc
xor
xchg
ret
inc
sti
jae
jo
std
push
and
call
popf
test
jnp
lcall
add
rcl
adc
ss
and
outsb
cmp
add
daa
andl
scas
jo
std
adc
adc
push
leave
jl
fdivl
test
into
stc
ljmp
add
dec
add
sub
pop
pusha
mov
adc
push
iret
es
dec
cmp
repnz
sbb
andb
les
jbe
lea
subb
inc
sbb
jmp
das
mov
cmp
xchg
mov
or
jo
mov
insb
repnz
sub
sar
xchg
cmpsb
pusha
jge
cltd
fwait
and
mov
push
insl
push
mov
pushf
out
push
stos
jno
sub
aas
shrb
fsubrs
jns
int3
sub
jns
fmulp
sbb
mov
xchg
xorl
pushf
dec
test
mov
fnstsw
lcall
rcrb
push
ret
lds
gs
mov
popf
std
cli
add
xor
sbb
jb
xchg
pop
and
mov
fistpll
sub
mov
inc
movups
cmp
aas
inc
pop
pop
stos
and
sbb
das
add
sub
enter
negb
dec
rorb
mov
sbb
adc
out
adc
cld
inc
loopne
sub
icebp
sub
insl
fwait
inc
lcall
jno
pop
insl
fsubp
das
lret
pop
popa
add
mov
in
scas
inc
ss
hlt
xchg
fwait
adcb
test
xchg
mov
outsb
push
cwtl
push
daa
ds
pop
push
daa
out
iret
add
sub
jg
adcb
inc
jo
js
mov
push
out
hlt
stos
test
inc
dec
pop
stc
fwait
pusha
mov
pusha
mov
cli
icebp
aam
lock
inc
pop
sbb
dec
mov
in
fisubrl
push
lret
mov
sbb
dec
outsl
jge
xlat
adc
into
mov
xor
cwtl
xor
mov
pop
addb
or
fistps
xchg
pop
sbb
ret
mov
sub
add
insb
test
mov
fcomps
or
mov
je
pop
sub
iret
repnz
and
hlt
sub
cmc
aas
cmp
jle
rcl
cmp
fmull
fistps
add
imul
or
cmp
shll
jnp
ret
fildl
mov
mov
std
in
lret
cmc
adc
jge
pop
pop
xlat
clc
std
outsl
or
leave
mov
sahf
pcmpeqd
mov
xchg
inc
dec
std
clc
imul
xor
shrb
or
fcomip
inc
fisubrl
cwtl
mov
pop
nop
lret
fnstcw
ss
mov
xchg
ret
jecxz
sbb
sahf
or
aas
push
inc
movsl
xchg
cmp
faddp
cli
xchg
sahf
xchg
hlt
int3
xchg
into
push
cmp
fistps
pushw
popa
aad
or
lea
mov
sbb
movsb
pop
jp
ret
cmp
sub
add
pop
sldt
mov
cmp
xor
cmp
aad
andb
add
and
pop
mov
mov
pop
sbb
xchg
mov
jge
addr16
mov
xchg
aas
movsl
mov
xchg
subb
movsl
dec
bound
pop
fistpl
inc
pop
pop
mov
jmp
leave
mov
inc
in
shlb
mov
je
jnp
push
mov
pop
inc
insb
pop
mov
frstor
outsl
cmp
in
cld
loopne
lret
in
imul
lods
daa
iret
adc
adc
aad
inc
xorb
into
scas
push
pop
add
dec
mov
aaa
outsb
xor
push
lods
out
adc
gs
jns
mov
insl
test
fistl
shrl
mov
dec
sbb
scas
xlat
into
sub
xchg
imul
xchg
scas
cmp
lods
xchg
insl
dec
das
pop
mov
or
xor
inc
cli
mov
and
adc
sbb
jae
std
mov
pop
add
dec
xor
into
sahf
jb
fs
fimuls
jae
push
sbb
loopne
mov
daa
jmp
push
loope
ret
lcall
outsl
push
out
add
jp
pushf
dec
dec
decb
stos
out
arpl
push
test
cmpsl
push
pop
leave
test
sahf
fsubr
xchg
stc
pushf
xchg
repz
popf
nop
rcll
mov
jge
xor
pop
andb
and
scas
sbb
mov
sub
out
rcl
add
mov
leave
insl
adc
cmp
push
mov
lock
iret
test
sub
ret
mov
popa
jns
addr16
jg
loop
or
push
scas
lahf
pop
lret
push
das
insl
pusha
add
mov
sbb
jno
mov
dec
xlat
add
js
iret
nop
daa
mov
mov
dec
pop
addb
cmc
sbb
sbb
insb
imul
mov
imul
ljmp
adc
mov
in
jl
rcl
outsb
jae
xor
test
test
rcll
fcoms
std
int3
imul
xchg
lods
inc
les
lock
popf
cmp
dec
jg
sbb
int
cld
cmp
jecxz
gs
decl
xor
pop
sub
xchg
xchg
pop
shll
or
cmpsl
jno
adc
pop
mov
jbe
cmpsl
or
or
es
fyl2xp1
and
push
ljmp
inc
subl
sbb
xchg
cld
xchg
cs
out
das
ljmp
fbld
cmp
aam
add
icebp
dec
mov
mov
outsl
xor
adc
mov
loop
cwtl
cli
sbb
icebp
xor
lret
push
repnz
pop
mov
cmp
data16
call
sbb
ja
lea
shrb
loopne
iret
pusha
pop
dec
inc
jo
leave
dec
adc
sbb
lods
pushf
add
addr16
fstpl
shll
dec
inc
cmpsl
arpl
and
inc
mov
pop
repnz
mov
insl
pop
sahf
mov
push
into
sub
das
cmpsb
lods
lds
inc
iret
inc
mov
insb
fcomp
jle
fildl
fs
call
mov
or
adc
stc
cmp
jae
int
pusha
sub
mov
fs
sub
pop
inc
mov
fists
inc
inc
pop
or
push
lods
cmc
xor
push
repnz
cmp
jb
addr16
icebp
cmp
scas
push
sbb
cltd
fstl
loopne
fsubrl
or
jl
mov
jmp
fcoms
out
mov
sbb
clc
push
je
sbb
ja
mov
or
jle
out
shl
cmp
loopne
xchg
sarb
fdiv
repz
in
jl
adc
repnz
push
mov
jbe
dec
loopne
sbb
push
push
stos
hlt
jp
scas
pop
divb
mov
sbb
movq
mov
bound
bound
gs
xor
push
sub
cwtl
jge
sub
push
cmpsl
inc
andb
sbb
jb
and
cmc
cli
imul
pop
mov
sbb
mov
dec
enter
dec
xor
cmpsl
mov
out
in
in
xchg
and
mov
or
xor
mov
cltd
xchg
inc
mov
std
lods
xor
dec
mov
xor
fildll
jns
pop
jb
push
insl
inc
push
ret
pop
imul
testl
dec
aas
dec
mov
bswap
mov
sub
jge
in
xchg
mov
dec
clc
mov
popa
dec
push
icebp
fs
lcall
insl
fnsave
je
mov
gs
mov
lods
adc
cltd
cmp
sbb
and
push
out
push
int
push
sub
xor
mov
jl
sub
in
mov
shrb
sti
rcll
xchg
push
or
mov
push
and
mov
mov
fsubrs
repnz
stos
vpmaxsw
test
int3
lea
push
fisttpll
or
cmp
ret
arpl
cmpl
push
js
ljmp
sbb
pop
add
ret
inc
test
push
shrl
stos
les
and
out
xorb
ret
lret
int3
mov
aad
aas
mov
xor
add
test
cmp
pushf
jbe
xor
sbb
dec
aaa
gs
xchg
subb
shll
scas
lods
jb
pop
sub
int
mov
int3
inc
test
ljmp
xor
shrl
dec
dec
sub
mov
push
lods
rep
add
inc
dec
repnz
add
pop
lret
movsb
in
sub
pop
mov
lods
scas
in
test
cmp
stos
and
loope
mov
rol
es
sub
stos
fcompl
cmp
push
imul
ret
data16
xchg
mov
mov
sbb
mov
aam
shll
pop
mov
pop
ret
inc
pop
loopne
xor
in
push
sub
test
daa
ror
gs
inc
xor
xchg
test
xchg
push
movsl
adc
pop
repz
pop
aam
mov
pop
dec
cmp
aad
imul
aas
mov
lahf
or
jecxz
inc
cmp
jg
xchg
mov
push
dec
mov
stos
pop
xchg
sbb
ss
es
jo
addr16
push
jnp
push
ficomps
idivl
out
and
insb
test
cwtl
sbb
sbb
jnp
mov
hlt
mov
push
dec
cli
int
js
fsubl
jg
dec
out
pop
dec
loopne
adc
lret
xor
in
and
mov
shlb
push
outsb
xchg
mov
xor
loope
fs
out
popa
or
push
dec
push
cs
dec
sbb
dec
push
push
xchg
shl
cmp
rcr
das
jg
pusha
sbb
mov
loope
dec
hlt
xchg
js
jbe
inc
jecxz
not
fwait
push
je
cwtl
arpl
out
fimull
cmp
xchg
mov
and
mov
add
pushf
push
mov
pop
jae
adc
xchg
inc
je
push
mov
inc
scas
pop
cmp
cmp
pop
outsl
cmp
sbb
nop
in
sub
fdiv
jbe
insb
rcl
mov
pop
fnstsw
in
loop
jmp
xchg
push
test
fdivl
xor
rcrl
out
not
and
cmp
sarb
ljmp
sti
jl
mov
xchg
wrmsr
push
adc
push
or
mov
or
xor
mov
add
subl
mov
mov
mov
and
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
mov
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
movl
mov
xor
add
sbbl
mov
mov
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
mov
decl
push
and
pop
sbbl
sub
xorl
add
movl
adc
mov
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
mov
dec
mov
mov
addl
mov
xorl
xor
add
mov
lea
orl
mov
mov
xorl
xor
xorl
add
andl
mov
andl
lea
adcl
push
movzwl
add
mov
xor
addl
add
subl
push
mov
adcl
push
andl
pushl
addl
call
or
mov
and
mov
subl
mov
sbb
mov
jmp
cmpsb
or
imul
roll
dec
hlt
bound
pop
bound
xor
and
add
adc
jp
push
lods
repnz
in
cmpsl
int
jg
outsl
imul
shlb
add
movsb
cli
push
pop
xlat
cld
mov
adcb
xchg
fsubs
pop
mov
arpl
dec
jb
jns
mov
sub
and
lret
and
jl
addl
ds
jbe
sar
pop
dec
loop
xor
sbb
outsb
std
pusha
sti
cwtl
and
std
es
pusha
lds
fdivrs
xchg
mov
push
lret
xor
inc
or
shll
es
aam
loop
scas
loopne
sub
mov
notl
pop
nop
sub
leave
movsb
or
fs
mov
mov
aad
sbb
mov
lods
cs
add
lods
cli
out
mov
inc
and
mov
add
jno
cli
adc
push
xor
jno
adc
add
mov
xor
sbb
out
mov
pop
pop
ljmp
daa
push
rcll
movsl
push
jle
pop
out
pop
xchg
push
fistl
xchg
test
pop
pop
icebp
jge
mov
rcll
ss
jae
sbb
je
adc
push
cmp
mov
rorb
add
mov
insb
or
ret
fadds
insl
imul
stos
ds
or
push
sbb
in
dec
cld
jl
pop
cmpsl
imull
imul
mov
jo
jp
enter
xor
xchg
orl
cmp
fisubrl
sub
cmc
cmp
xor
adc
out
jno
loopne
mov
jns
mov
xor
xor
sub
sbb
pop
aaa
mov
ret
adc
lea
adc
shlb
adc
push
cmp
mov
ret
cmp
andb
movsl
jl
jns
and
mov
mov
out
pop
imul
lcall
and
stos
jne
or
cmc
inc
xor
movsl
out
insb
pop
lds
push
or
lea
sub
inc
add
sbb
push
jmp
scas
adcb
test
fld
dec
mov
mov
cs
sub
mov
lock
jmp
cmp
add
push
and
mov
sar
inc
dec
fcomps
cs
subb
neg
jbe
pop
imul
jns
cmpsl
jne
stc
fwait
fwait
aad
or
and
ret
pop
cmp
sub
add
xor
sub
aas
mov
nop
xchg
ret
cmp
xor
ficoms
dec
adc
sub
shll
inc
inc
and
ljmp
push
xchg
and
movsl
out
out
xchg
ret
xor
nop
fstps
sbb
xchg
fwait
jbe
jne
mov
mov
mov
dec
or
fucom
jmp
mov
jge
jnp
mov
je
imul
mov
jno
jge
lret
outsb
fwait
and
sbb
arpl
and
lret
lds
aam
push
into
jp
fdivrs
dec
cld
pop
cmc
pusha
cmp
neg
push
cmp
mov
sbb
mov
inc
fwait
pop
mov
data16
mov
insl
int3
cmp
add
cwtl
jge
push
in
and
test
push
daa
adc
sbb
lret
sub
dec
loope
repz
or
jg
mov
sbb
sti
int
jp
push
ja
ss
jmp
inc
or
adc
mov
jmp
std
inc
inc
xchg
stc
mov
pop
inc
test
mov
lods
adc
test
inc
cld
shl
lods
jmp
pop
loope
pop
fcompl
rcr
shlb
and
xchg
loop
inc
fs
stos
test
aam
js
add
pop
jecxz
push
test
hlt
dec
pop
xor
fidivrs
stos
mov
stc
or
repnz
push
mov
test
mov
popf
aas
mov
sarl
in
dec
cmpsb
cltd
mov
aas
pop
push
or
int3
mov
test
xor
cmp
ss
xchg
add
dec
shll
jecxz
negb
jae
leave
cli
iret
out
cli
cmp
mov
inc
sarb
gs
fcmove
xor
and
xor
adc
adc
stos
pusha
fdivrl
icebp
mov
pushf
insb
out
xchg
dec
repnz
mov
ja
stos
lds
rcll
popf
aad
cld
std
sub
into
push
dec
xor
testl
xchg
popf
lretw
jne
pop
mov
sub
loope
imul
sarl
xor
int3
mov
xor
jne
mov
repz
adc
popf
xchg
mov
leave
rorl
pop
add
or
add
loope
push
stos
and
jmp
movsl
fs
fstpl
pop
mov
cmpsl
and
sub
and
xorb
add
xor
xorl
int
push
mov
push
in
fmul
jmp
fisttpl
mov
in
insb
test
mov
mull
push
add
xchg
add
out
repnz
dec
adc
mov
pop
ja
xchg
adc
add
fwait
sbb
or
jmp
incb
push
sahf
cmp
cmp
push
dec
movsl
out
sbb
test
ja
or
jp
dec
std
sbb
hlt
and
rcrb
xchg
andb
jl
and
cmp
lret
jl
xchg
test
mov
lcall
xchg
fistpll
sarl
xchg
inc
and
into
inc
leave
cltd
je
xor
mov
and
cltd
pusha
mov
out
cmpsl
adc
or
pavgw
xorl
mov
movsl
addl
ja
xor
loop
push
imul
xchg
aam
push
aad
movsl
cmp
xor
sbbb
lahf
sub
cmp
inc
jge
push
xchg
cli
sub
inc
insl
xor
jno
aaa
and
jne
xor
jns
das
cmpb
adc
or
jb
lret
push
inc
mov
sbb
jp
daa
pop
pop
pop
sub
xor
outsb
sti
lods
push
int
insb
out
jmp
icebp
imul
mov
rolb
jg
or
mov
stc
in
sahf
syscall
mov
push
lds
inc
aaa
xchg
adc
subb
mov
pop
mov
fcoml
inc
ss
push
or
imul
in
mov
sbb
inc
push
and
sahf
cmp
add
test
clc
mov
popa
movsl
mov
jbe
push
fwait
outsl
mov
adc
mov
cmp
xchg
call
cmp
out
hlt
push
jb
js
pop
sahf
insb
insl
xor
data16
dec
popl
pop
mov
iret
sbb
insl
adc
push
rep
sbb
mov
pop
dec
imull
sbb
jnp
push
sbb
shr
ret
int
dec
sub
and
push
loope
adc
adc
mov
in
mov
xor
call
enter
jne
jmp
adcl
sbb
pop
les
pusha
add
xor
dec
mov
sbb
cmpsb
stc
std
outsl
imul
inc
pushf
outsl
add
enter
stos
pop
xlat
js
cmp
test
jg
sub
and
jo
enter
imul
shl
daa
out
cmp
imul
sahf
push
mov
stc
test
pop
aaa
push
inc
dec
xchg
inc
ret
rcll
roll
fstps
shl
addps
mov
mov
popf
add
out
mov
xchg
mov
dec
imulb
adc
cld
stos
addr16
int
cltd
mov
push
aam
movsl
fdivr
push
push
ret
mov
lods
sbb
repnz
fs
mov
xchg
inc
and
cld
inc
shll
fyl2xp1
cmp
pop
mov
xchg
std
cmc
mov
or
mov
ss
insl
fwait
push
mov
mov
xchg
and
push
inc
fmuls
xor
or
or
mov
xchg
std
and
fcoml
leave
movsb
repz
in
ret
xchg
mov
in
mov
mov
or
sahf
jmp
mov
pusha
fldcw
cs
icebp
lea
pop
popf
cld
or
push
bnd
pop
pop
mov
pop
or
es
and
xor
ja
add
lahf
mov
xchg
int
aam
push
scas
cmp
ss
pop
cmp
adc
daa
pop
or
sub
xchg
or
shll
mov
push
sub
cmpl
inc
jbe
jle
sub
add
lock
mov
das
les
inc
jmp
jbe
jecxz
jae
out
or
mov
xor
cmp
jo
jge
sub
lret
cltd
xchg
rcrl
mov
cmc
enter
iret
inc
out
xchg
adc
notl
repnz
dec
add
push
xor
fwait
iret
and
lods
inc
pushaw
hlt
and
xchg
cwtl
inc
sbb
cmpsl
lret
imul
or
dec
iret
jbe
mov
sub
frstor
sub
hlt
push
inc
neg
addr16
fldcw
xor
or
repz
fdivrs
data16
add
inc
jbe
or
sub
arpl
ss
jl
xchg
add
sbb
mov
cmp
out
and
repnz
mov
repz
inc
push
lret
into
and
adc
in
cmc
bound
sbb
or
mov
ret
sbb
sbb
into
mov
cmp
pop
mov
in
push
out
test
stos
in
and
leave
xor
aam
sub
jno
stc
add
fcomps
mov
pushf
mov
sbb
push
push
pop
pop
pop
mov
subb
sub
sti
or
adc
mov
stos
pop
clc
push
out
fsin
js
mov
loope
decb
ret
inc
adc
and
popf
adc
stos
pop
arpl
popa
jp
xor
rclb
inc
fdivrs
sub
in
enter
loop
jmp
jns
leave
rcl
testb
adc
push
add
xor
pop
pop
into
lea
push
stos
fwait
inc
push
mov
mov
mov
aad
inc
inc
test
jo
call
fistps
add
and
stos
adc
rcrb
imul
out
mov
dec
pop
cli
xchg
fcomps
lds
dec
mov
xchg
cmp
imul
call
int
cmpsb
fldcw
jl
gs
mov
dec
jge
dec
sahf
test
push
pop
and
cmpb
movsb
mov
sub
inc
sub
jno
mov
lock
jmp
add
jle
push
bound
push
rcrb
out
shll
outsb
mov
cmpsb
stc
mov
xor
push
inc
and
stos
popl
sub
pushl
cmpsb
push
pushf
bound
dec
shll
inc
cmp
andb
icebp
and
push
ljmp
xor
clc
dec
or
mov
pop
loope
sub
fcmovne
add
add
or
jne
mov
test
fcmovnu
jae
bound
fwait
popa
push
and
cmpsb
pop
leave
push
sub
inc
leave
cli
add
sub
in
jecxz
fstl
movsb
mov
stc
sbb
insl
pop
push
arpl
ficoms
sbb
fwait
arpl
pop
or
mov
sarl
shrl
sbb
add
hlt
adc
xchg
daa
mov
fnstsw
dec
adc
cmp
pop
cld
xchg
dec
fwait
and
pop
mov
dec
adc
pop
fbld
in
mov
jnp
gs
inc
iret
mov
inc
aas
pop
push
xor
jnp
jne
cwtl
sbb
jmp
or
addr16
mov
add
or
sub
sbb
inc
inc
notb
mov
outsb
out
test
push
addr16
or
and
inc
aas
push
les
dec
clc
mov
push
clc
xchg
jns
and
rcll
pop
popf
and
cltd
mov
lahf
ja
pop
roll
and
dec
shr
jle
dec
sub
ds
negb
xchg
and
jecxz
xorb
and
mov
mov
data16
jns
int3
std
pusha
mov
mov
xor
push
stc
add
push
push
sbb
sub
cmp
sbb
adc
repnz
mov
pop
or
push
sub
jno
jne
dec
testb
shll
push
push
sub
or
add
pop
xchg
ret
mov
mov
imul
shlb
testl
repnz
mov
add
fcomps
or
mov
daa
js
mov
dec
nop
adc
inc
push
negl
jno
pop
xchg
xchg
rcrb
movsl
add
push
sar
and
fdivl
daa
lcall
add
subb
inc
jle
nop
andb
xor
mov
pop
ret
sbb
mov
cltd
push
xlat
and
cmpsl
add
mov
movsb
das
ljmp
insl
movsb
dec
xor
ss
mov
add
fwait
cmp
mov
pop
lret
cmp
jnp
push
enter
nop
pusha
xor
mov
cmc
idivl
adc
or
movsb
sarb
mov
test
pop
outsl
jecxz
xchg
push
aam
es
mov
or
dec
ja
das
jg
pop
inc
mov
push
cmc
lods
adc
adc
lea
add
pusha
dec
mov
je
push
rol
daa
call
and
into
fsts
lock
dec
aas
add
pop
mov
mov
cld
in
mov
and
mov
jnp
outsl
gs
xlat
xchg
pop
pop
xor
lcall
push
movsl
pop
sbbb
adc
jnp
test
addr16
and
push
loope
enter
ja
orb
adc
pop
in
add
jb
enter
jb
movsl
scas
mov
fadds
cwtl
cmp
or
dec
and
mov
jp
lds
or
ffree
out
mov
pop
lret
aas
push
or
sbb
or
pop
fs
cmp
sub
enter
rcrb
cld
xor
push
movsl
ja
inc
xchg
test
inc
jno
std
iret
inc
inc
js
aad
out
mov
cwtl
fldz
vandnps
incb
sub
pop
cltd
push
xor
xor
inc
test
push
dec
sbb
xchg
rcrl
shll
xchg
shll
imul
mov
cld
inc
sub
mov
lea
outsb
dec
push
jge
aas
out
sub
jle
adc
fidivs
test
xor
imul
push
mov
mov
lret
fcmovbe
push
jge
lret
sbb
mov
gs
xchg
roll
sti
xchg
inc
sbb
dec
sahf
cmc
mov
fstpl
leave
jne
insb
sbb
loop
sbb
jecxz
xor
pop
cmp
sbb
mov
adc
sti
cwtl
pop
das
in
xor
and
adc
push
sahf
cltd
pop
ljmp
push
push
std
inc
cmp
ljmp
cmpl
mov
push
nop
adc
add
mov
xchg
dec
mov
dec
lahf
push
fistpll
aaa
fidivl
lahf
jecxz
sub
aaa
cmc
add
js
fcmovb
in
cmp
fnstenv
push
out
stc
test
movsl
xor
push
movsb
fcoml
adc
ror
lea
outsl
mov
xor
popf
xchg
mov
lods
shll
mov
mov
outsb
sbbb
and
pop
hlt
xor
loopne
inc
adc
or
ss
cmp
sub
sti
fmull
or
lahf
loop
mov
out
test
punpcklwd
iret
sub
or
fdivrs
pop
in
mov
jbe
push
sarl
stos
mov
aas
lcall
cmp
sub
ret
fldenv
xchg
test
pushf
sub
cmp
push
push
cwtl
mov
das
enter
out
pop
add
imul
lret
jae
movsl
inc
inc
mov
mov
and
cwtl
loop
mov
inc
repz
sub
decb
or
jnp
lea
loopne
in
sub
xchg
xor
shll
in
mov
int3
into
mov
out
loope
or
ss
cltd
or
add
adc
push
dec
or
fisubrs
js
mov
in
cmp
in
ret
fmuls
out
sub
and
orb
xor
mov
xor
xchg
jmp
mov
negb
bound
mov
dec
mov
dec
xchg
jnp
gs
insl
jge
orb
sahf
or
gs
fwait
push
mov
pop
test
xor
pop
inc
sub
jge
in
push
cmp
mov
dec
mov
mov
jb
xchg
test
push
test
and
repz
lahf
jno
cs
or
sbb
jmp
cli
sbb
ret
cmc
jmp
cmp
add
adc
pusha
lods
out
mov
mov
mov
mov
jl
mov
xchg
jmp
jge
jne
add
fsubrl
fs
pop
shll
lret
adc
mov
cmp
push
push
xchg
inc
cmpsb
mov
mov
jmp
out
pop
mov
add
mov
sarl
inc
sbb
xchg
test
lods
dec
ljmp
out
cmp
mov
add
cmc
and
add
xlat
hlt
sub
jp
dec
in
jmp
stc
xlat
xor
dec
stc
add
jbe
stos
repnz
xor
gs
scas
and
mov
lret
mov
movsl
or
xchg
pop
into
push
push
sbb
fcmovbe
jmp
fdivrs
mov
pop
rorl
in
cs
vmulsd
scas
xchg
xor
sarb
mov
sbb
xchg
mov
ret
sub
ficomps
push
inc
push
lahf
push
aaa
add
aas
mov
in
mov
adc
jl
xor
in
and
or
dec
sti
mov
je
divb
add
mov
mov
ds
adc
sti
lret
jo
fsubl
xchg
daa
es
call
mov
mov
lods
sbb
adc
inc
adc
pop
clc
sarl
shl
jp
ret
cmp
stos
lea
int
sbb
lods
insl
out
xor
adcl
xor
mov
cmpsb
ss
aad
movsl
pushf
and
daa
fcoms
movsl
fxch
dec
rclb
lcall
fisttpl
pop
add
aad
mov
xor
or
in
sahf
mov
ret
fisttpll
jmp
fwait
ljmp
out
or
les
addl
push
push
inc
dec
ror
js
push
adc
test
or
mov
icebp
dec
pushf
and
loop
das
jmp
mov
es
push
scas
pushf
imul
push
jb
je
adc
out
mov
mov
cmpsl
iret
adc
aaa
divl
clc
mov
mov
inc
mov
dec
mov
jnp
ljmp
daa
or
sti
addr16
push
cmp
or
push
mov
inc
mov
and
cwtl
int3
dec
cmpsl
iret
or
xchg
cmp
jle
mov
mov
movsb
xchg
mov
fsub
out
iret
ror
jge
lods
mov
mov
cld
sub
out
adc
repnz
lods
adc
sahf
insl
mov
adc
cwtl
push
jns
mov
loope
mov
xchg
aad
xor
sbb
int3
push
or
mov
mov
aas
and
jle
adc
and
sbb
faddl
push
cmp
icebp
add
add
ja
pop
pop
adc
nop
xchg
inc
ds
xchg
jns
ficoms
lods
out
test
inc
inc
lcall
mov
cmp
test
or
leave
loopne
rorl
cs
dec
dec
sarl
pop
mov
mov
mov
imul
mov
aad
leave
adc
pop
dec
push
mov
jo
cmp
sub
out
mov
mov
inc
jnp
mov
imul
sub
or
jne
jmp
mov
daa
mov
mov
cmpsb
les
inc
je
inc
and
push
ret
rclb
pop
rorb
iret
mov
sbb
dec
mov
fcoml
inc
mov
cmp
fnstcw
rcrb
lods
pop
iret
pop
lahf
inc
sub
cld
jecxz
cmc
flds
inc
popf
jmp
fwait
mov
mov
into
pop
movsl
sbb
push
mov
test
push
frstor
jno
and
in
lcall
mov
pop
in
add
cmc
jl
shr
fwait
iret
addr16
lock
divl
sbb
cmpsb
and
and
lods
loope
test
dec
cmpsl
and
jbe
dec
test
mov
packuswb
push
adc
xlat
push
jbe
lahf
push
lods
fs
adc
add
and
pop
add
ljmp
mov
push
lds
repz
setno
insl
xor
arpl
and
or
and
xchg
in
ss
and
dec
clc
cmp
push
push
ljmp
mov
pusha
cltd
mov
jl
outsl
pop
mov
test
mov
mov
mov
inc
mov
mov
int3
mov
sbb
jne
negl
xor
fnstenv
sbb
imul
sbbl
mov
push
stc
sbb
cmp
sbb
mov
sti
sbbl
and
cmp
int3
sti
adc
das
repz
mov
add
les
fldt
lret
fiadds
xchg
pop
test
lahf
push
fsub
inc
mov
pop
out
sub
fcomps
test
and
cmp
ret
and
sarl
pop
pop
xchg
into
xor
int3
iret
adc
mov
std
add
sbb
test
jp
inc
mov
adc
lahf
leave
sti
repz
cmp
enter
push
loop
cltd
jecxz
fnstsw
dec
das
push
outsl
and
push
out
push
int3
fldl
xchg
in
xor
jle
jle
mov
fildll
out
inc
add
push
sub
add
jmp
sub
repnz
mov
cld
dec
inc
and
jno
dec
loop
inc
mov
sbb
jle
pusha
cltd
cwtl
adc
iret
and
and
ficoml
inc
inc
add
mov
xlat
mov
jb
mov
jbe
fadds
xor
loope
in
sahf
fwait
push
and
cmp
add
sti
mov
aad
push
sti
mov
or
iret
out
push
std
dec
ret
xchg
pop
rcr
mov
mov
push
fwait
movsl
inc
xlat
or
jp
cmp
push
push
dec
sub
cs
jnp
sti
rorb
in
sbb
clc
mov
fnstenv
and
mov
sbb
xor
cmpsb
push
mov
rclb
aad
and
test
xchg
pop
clc
add
fxch
xchg
or
test
ja
add
jge
pop
cwtl
sbb
pop
divl
popa
xor
sub
pop
dec
sbb
xor
rol
push
pop
mov
add
aam
fisubrl
adc
das
out
cmp
jl
fbstp
out
sub
sub
daa
mov
mov
leave
sub
dec
adc
xchg
loopne
mov
lahf
xchg
lock
xchg
testl
rcll
inc
call
sub
jo
add
scas
rorb
stc
repz
cld
in
je
xlat
and
xlat
ss
imul
adc
xchg
push
inc
divps
aad
dec
and
push
add
inc
incl
cmp
clc
xor
mov
cmp
mov
sbb
sbb
testb
fadds
xor
ss
daa
inc
test
in
push
test
clc
mov
push
jne
shlb
xor
movsb
and
dec
jno
das
inc
daa
outsb
insl
loopne
jbe
sbb
call
cmpsl
jecxz
pushf
inc
scas
cmp
in
test
fists
xchg
dec
pop
aad
and
xchg
xor
or
mov
imul
popf
adc
dec
pop
sub
add
ficompl
xchg
mov
sti
dec
std
mov
fstpt
leave
mov
cli
xlat
adc
scas
mov
divl
pop
sbb
push
push
mov
out
pusha
push
cwtl
or
shl
xor
bnd
test
sbb
push
cmp
xor
lcall
or
xchg
lret
leave
jmp
into
movsb
rorl
dec
jae
popw
adc
mov
cmp
lret
adc
out
sbb
mov
push
pushf
or
vmread
sub
adc
xor
test
sub
cld
or
fadds
cmp
xlat
xor
outsl
inc
rcl
out
stos
outsb
clc
dec
iret
jb
add
or
jbe
adc
xor
stos
inc
pop
pop
stc
shll
and
mov
cmp
mov
sub
xor
sbb
sbb
pop
jmp
rcll
mov
fidivrl
or
sub
xor
lret
popf
sarb
inc
js
mov
test
dec
cmc
xor
inc
fistps
cmc
sub
es
xor
cmp
in
xchg
fistpl
adc
pop
pop
decb
mov
ljmp
xchg
fdivs
aas
aam
xor
xchg
bound
mov
push
cld
jecxz
sbb
addr16
and
outsb
mov
outsb
push
js
fnstcw
mov
fwait
jno
mov
out
push
out
daa
loope
mov
jecxz
mov
hlt
loopne
jo
pushf
sbb
daa
inc
or
bound
or
lods
adc
mov
pop
movsl
lahf
or
jmp
stc
jmp
fdivrl
push
sti
cmc
lcall
popf
mov
add
les
adcb
imul
dec
jg
mov
subl
push
push
inc
sub
fnstenv
add
daa
xchg
loope
outsb
pushl
fnstsw
adc
pop
test
xchg
sub
lods
push
jg
dec
jge
xor
mov
add
aas
sbb
inc
test
inc
jns
jg
dec
adc
xor
or
push
mov
dec
cmp
out
xor
or
outsb
mov
aam
loope
aam
and
mov
xchg
lcall
addl
push
sarb
jg
fsubl
cmp
fldt
lock
jno
add
fnstsw
sbb
into
xchg
aaa
mov
loopne
mov
inc
adc
push
push
or
stos
adc
je
pop
shlb
mov
dec
add
xor
sub
sbb
or
add
rcll
mov
pop
nop
mov
bound
jecxz
popa
int3
sbbb
xor
loope
fwait
xchg
adc
mov
stos
dec
aad
movsb
lahf
inc
pop
int
and
jg
lret
sub
push
sub
cs
lock
out
push
call
mov
popl
int
mov
pop
sti
jg
cmp
cmc
lcall
cld
and
inc
fdivrs
fisubl
out
in
dec
mov
mov
push
pushf
sbbl
or
call
add
jmp
addr16
push
pop
leave
xchg
ficomps
lret
imul
push
imul
popf
lahf
es
push
hlt
lds
mov
or
in
test
jp
das
rcrb
sub
in
aas
lret
popa
mov
inc
sub
divb
cmpsl
mov
aad
imul
add
je
test
mov
xchg
xor
pop
mov
push
jnp
outsl
ljmp
adc
lods
nop
mov
xchg
jae
fsubrs
enter
sarl
cwtl
push
add
in
sti
sub
aas
jno
cmc
insb
ret
jmp
mov
shl
andb
popa
decl
imul
hlt
inc
jne
mov
or
xrelease
mov
popf
imul
mov
mov
lret
xchg
mov
mov
xchg
add
inc
cmp
dec
push
addl
mov
xchg
mov
pop
mov
inc
in
jle
lret
mov
cs
stos
adc
int
gs
sbb
jmp
or
jae
inc
jne
ljmp
out
mov
mov
out
pop
in
pushf
lods
je
scas
inc
or
pop
xchg
xorb
arpl
in
ret
push
or
or
mov
pop
mov
push
loope
push
pop
mov
dec
sub
sbb
sub
push
inc
xchg
les
mov
jp
mov
mov
adc
xchg
xchg
mov
icebp
sti
cltd
aam
sub
adc
add
outsb
repnz
xchg
mov
mov
pop
stc
addr16
mov
ret
xor
clc
ss
push
loop
and
call
rdtsc
lea
mov
xor
sbb
clc
addr16
sbbb
mov
fisttps
mov
jge
enter
xorl
pop
adcb
loope
and
fwait
add
push
jne
imull
add
xchg
ds
push
cld
out
xchg
dec
pop
sbb
mov
push
cmpsl
add
push
push
imul
rclb
pushf
lahf
lret
mov
sub
mov
dec
out
pop
rorl
addb
call
fldt
movsl
test
test
xchg
or
mov
pop
mov
pushf
mov
jnp
add
repnz
and
and
into
cmp
je
sbb
stc
and
sub
movsb
pop
pop
pop
fucom
cmpsl
and
inc
cmc
jnp
psubusw
dec
loop
fidivrs
push
xor
ss
jo
and
insl
es
rcrb
aad
popa
mov
push
inc
ds
stc
push
cmpsb
lret
add
notb
sbb
mov
mov
pop
xor
addl
mov
add
jmp
sub
lea
mov
mov
mov
add
sub
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
mov
and
mov
not
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
pushl
push
pushl
call
xor
add
dec
mov
jmp
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
jmp
and
scas
jecxz
arpl
jns
cmp
xchg
jns
shll
or
bound
sbb
shl
scas
nop
sbb
cmpsb
in
xor
mull
xchg
adc
jmp
fldenv
mov
add
jnp
and
cmpb
iret
aam
add
add
sbb
sub
xchg
call
fmuls
mov
in
insb
pop
scas
dec
pop
daa
repz
xor
dec
dec
xchg
call
rorb
cmp
mov
adc
or
or
outsl
push
mov
aaa
push
pop
mov
shlb
cld
pop
cmp
sbb
pop
ret
imul
loopne
fisubrs
or
dec
sub
test
ret
or
push
push
lret
shll
adc
in
test
popa
test
movsb
inc
stos
in
sbb
sahf
dec
fisttpll
arpl
and
ror
daa
sub
or
mov
lret
scas
cmp
push
or
dec
sub
mov
ficoms
or
insl
dec
inc
ret
add
ret
xchg
test
ror
orb
add
push
aad
sbb
dec
test
fcmovnbe
cmpsl
call
dec
sub
lock
mov
inc
scas
arpl
or
lods
xor
pop
ljmp
adc
or
xchg
mov
xchg
pop
or
movsl
xor
lods
test
xchg
outsb
push
ss
es
lods
out
mov
loope
cwtl
pop
add
insb
cltd
imul
ds
lock
jge
outsb
popa
add
imull
call
test
mov
lcall
push
imul
lcall
enter
inc
divl
test
mov
mov
xchg
cmp
cmpsb
mov
mov
mov
adc
jbe
stos
inc
lret
popf
or
or
add
push
mov
xchg
imul
rcrl
pusha
out
pusha
add
adc
sti
rolb
frstor
outsl
pop
cmp
or
sub
inc
aaa
push
cmp
and
xlat
push
inc
repnz
or
stos
cmpsb
scas
push
out
adc
pop
out
add
dec
aad
and
jmp
cvtdq2ps
aam
test
jae
adc
mov
iret
mov
ret
mov
cltd
cmc
fsts
xchg
xchg
cmpsl
mov
jo
jmp
mov
jmp
pop
repnz
and
push
loope
scas
fiadds
sbb
mov
adc
lock
add
int
pop
scas
dec
cltd
repnz
mov
roll
fsubr
xchg
out
sub
mov
add
dec
lret
push
xor
adc
sbb
adc
hlt
repz
loop
mov
dec
mov
aaa
pushf
out
loopne
sub
arpl
xchg
call
inc
ret
sbb
jbe
pop
pushf
mov
std
fcmovne
mov
add
and
test
or
mov
lea
mov
int
mov
scas
xchg
mov
xlat
xchg
xor
das
jae
icebp
out
in
cmc
int3
add
xchg
test
insl
ss
cmp
js
ds
pop
addr16
mov
jecxz
aam
out
mov
std
cmp
pop
sbb
push
push
dec
fdivl
adc
lea
ja
sbb
adc
adc
xchg
ret
adc
cmp
pop
insl
xor
in
or
jno
jno
dec
add
and
jecxz
cld
adc
std
mov
xchg
ret
cmovb
cwtl
outsb
adc
ror
adc
aad
addr16
es
adc
add
lods
xchg
pop
sahf
loopne
imul
aam
aad
and
dec
cmp
dec
dec
dec
cltd
outsb
sub
inc
aas
sub
xchg
pusha
mov
fimuls
clc
cltd
or
int3
dec
int
xlat
sahf
lahf
mov
cmpsl
push
int
push
sub
cmpsb
dec
mov
sbb
ja
dec
pop
stos
outsl
push
jne
cs
outsb
sbbl
jnp
push
mov
notb
aad
shl
xor
mov
jnp
sub
mov
jne
mov
push
inc
push
test
stos
pop
int3
cmp
jg
sbb
ret
scas
lahf
push
sahf
cwtl
sub
test
and
test
rcl
or
sar
inc
pop
dec
push
sbb
lahf
int
imul
xchg
je
in
and
dec
dec
dec
fildll
fmul
sub
mov
les
insb
lods
dec
adc
mov
mov
fwait
hlt
add
fcompl
aaa
and
clc
mov
cs
inc
out
clc
movsl
mov
das
xlat
mov
in
scas
mov
push
mov
iret
push
gs
in
mov
daa
mov
pop
push
sbb
out
adc
incb
cmp
pushf
sbb
mov
xor
push
push
daa
mov
or
ret
dec
pop
ret
mov
mov
adc
stc
test
mov
ds
mov
sahf
je
roll
jae
push
xchg
in
jge
jno
pop
addr16
andl
ret
aam
add
int
mov
xchg
out
dec
js
pop
cmp
loop
outsl
rcrb
fldcw
jg
inc
xor
lahf
fsubs
cwtl
lea
mov
jo
sub
pop
pop
jae
call
or
clc
out
mov
into
or
jp
sbbb
pusha
xor
mov
push
pop
lret
enter
orl
movsl
push
fcmovnu
or
dec
inc
pop
pop
scas
sub
mov
loope
lods
add
pusha
pop
ja
jle
mov
sub
rolb
aam
adc
dec
mov
mov
bound
jne
iret
cmpsl
loope
jmp
inc
inc
dec
movsl
ror
movsl
stc
pop
or
les
inc
mov
dec
sub
imul
out
adc
std
mov
inc
xor
add
loopne
cmp
sbbb
lods
add
cltd
adc
pop
fisubrs
lds
dec
dec
push
mov
inc
mov
mov
sbb
inc
leave
xor
or
mov
dec
fsts
adc
pop
rcrb
cmpsb
scas
pop
js
popa
mov
sub
mov
mov
out
cmp
ljmp
cli
jmp
push
mov
fdivrl
loopne
mov
ret
mov
rcl
sbb
stos
call
cmp
mov
jae
inc
add
and
cmp
mull
inc
xchg
out
out
sub
ret
xchg
fsts
cmpsl
call
sti
fcomip
xchg
cmp
pusha
push
fsubrl
test
push
fisubs
inc
dec
mov
leave
fsubs
ficoml
or
fwait
loopne
in
dec
pop
std
mov
loopne
insb
mov
scas
push
xchg
jns
data16
mov
inc
bound
xchg
in
ret
js
inc
lods
bound
mov
xor
mov
sahf
mov
inc
and
iret
cmpsb
and
fisubs
cld
xor
jp
sahf
mov
xor
leave
imul
lea
ja
shl
or
ret
leave
pop
shlb
testl
mov
je
movsb
xchg
sar
loope
loope
xor
out
das
pop
sbbl
sbb
addr16
lock
sbbb
mov
stos
push
movlps
mov
sbb
ljmp
jnp
xchg
push
push
xor
pop
outsl
repnz
jbe
add
push
scas
cmpsl
subb
push
ljmp
in
mov
cmp
outsl
pusha
sbb
adc
frstor
inc
jecxz
push
cmp
adc
sarb
js
mov
add
and
sbb
cs
pushw
outsb
adc
stos
mov
jmp
lea
xchg
sbb
mov
cmc
xchg
jne
xrelease
fildl
cmp
and
lods
sti
call
mov
push
push
fwait
movsl
xchg
das
orb
lea
loopne
clc
mov
das
outsb
or
add
out
sar
test
push
xor
mov
pop
inc
aad
lods
fldpi
xor
or
ljmp
mov
push
or
xchg
jge
jmp
inc
push
xor
aaa
xor
xlat
scas
filds
push
or
pushf
outsb
cli
daa
xor
and
inc
mov
mov
lret
les
popa
mov
mov
test
subb
ss
cmp
sbb
add
inc
outsl
jp
and
ja
cltd
call
mov
xor
push
add
mov
lds
jno
push
pushl
frstor
ja
sbb
enter
adc
test
fmuls
jecxz
push
icebp
mov
or
mov
fnstcw
inc
add
into
lahf
popa
dec
xchg
movsb
xlat
xor
mov
cmp
jmp
out
and
fldt
imul
cmp
pop
push
jns
push
aas
mov
in
or
lods
ret
roll
lret
add
mov
mov
jp,pt
add
cmpsl
rorl
ret
addl
hlt
xchg
add
lahf
inc
repz
sbb
xchg
cmp
sbb
fisubs
lea
cs
int3
jae
mov
cli
adcl
mov
jo
loopne
mov
dec
shrl
jnp
mov
mov
cmp
jns
sbb
add
shlb
xchg
xor
jp
shll
ss
jge
nop
jb
xchg
or
cltd
int3
fsubrs
and
mov
cs
insb
fsubrp
jg
fildll
add
xor
xchg
js
push
out
stos
mov
sbb
pusha
and
sbb
xlat
push
imul
adc
nopl
fucompp
repnz
lret
fcoml
jle
mov
jns
emms
imul
xchg
and
or
das
mov
imul
adc
fisubs
pop
push
xchg
or
add
lods
popf
mov
xchg
sbbb
sub
pop
pop
shll
test
mov
stos
add
dec
jnp
decl
mov
sub
rolb
mov
jecxz
adc
hlt
add
sub
sbb
and
cmp
hlt
dec
push
mov
loope
adc
in
sub
mov
push
or
in
mov
fstpt
fdivp
adc
jo
jg
ja
mov
inc
xlat
sahf
sub
sti
lahf
and
lods
mov
adc
hlt
sbb
inc
jl
xor
sub
js
or
movsb
mov
insb
jle
push
hlt
push
cmpsb
pop
pop
or
push
lahf
or
mov
ljmp
sbb
add
cmp
sbb
enter
xlat
inc
rcr
test
sub
lock
or
mov
push
insl
pop
dec
mov
sbbl
ret
or
pop
dec
mov
fsubrl
xor
xchg
imul
fiaddl
sub
push
sub
inc
inc
mov
jnp
sub
push
sbb
pop
lahf
add
cmp
add
xchg
mov
mov
incb
inc
pop
pop
mov
pop
scas
mov
jecxz
ja
mov
xchg
mov
xchg
mov
mov
lods
adc
fs
sub
lods
cwtl
mov
mov
inc
inc
das
out
lods
stos
push
and
xor
cld
sbb
cmc
sbb
negl
test
xchg
scas
dec
xor
hlt
jae
xlat
mov
push
dec
mov
push
lods
roll
out
test
mov
pushl
dec
inc
inc
or
inc
push
cmovg
jnp
popa
cmp
xor
ss
sbb
and
sub
xchg
dec
cmp
in
cmp
jbe
popf
pop
xchg
mov
loope
call
pop
mov
popf
and
xor
sub
dec
lods
dec
add
imul
sbb
leave
cmpsl
push
divb
inc
mov
push
inc
std
cmp
leave
add
lds
or
push
inc
data16
mov
ret
mov
and
mov
dec
sbb
lret
dec
xchg
jmp
inc
std
imull
aas
scas
in
repnz
outsl
mov
push
mov
bound
pop
outsl
pop
icebp
movsb
jne
cltd
shr
cwtl
jmp
xchg
fisubl
mov
sar
push
sbb
aas
cmp
into
test
sti
shlb
lahf
lds
andl
and
iret
push
lahf
movsl
sbb
pop
mov
dec
cmpsl
pop
or
arpl
add
ret
push
pop
es
arpl
data16
fnstcw
add
gs
cmpsl
or
aam
and
loopne
inc
popl
add
push
clc
inc
and
data16
jecxz
iret
ret
cs
popl
push
cld
jl
iret
xchg
subl
pop
lea
adc
dec
or
shlb
ror
cwtl
adc
cwtl
dec
mov
and
int
sbb
push
fmuls
or
stos
inc
push
adc
pusha
xlat
andb
xchg
shl
dec
inc
fcoml
xchg
push
call
enter
lahf
adc
shll
pop
lea
cmp
jp
outsb
inc
lock
push
imull
mov
push
jnp
mov
fcoml
sub
call
mov
enter
sbb
lcall
out
stos
mov
fcmovbe
shr
sub
mov
sub
fs
mov
push
cmpsl
mov
or
dec
and
ljmp
adc
lods
js
leave
ja
js
adc
orb
aas
push
fsin
cmp
cmp
sbb
sub
icebp
sbb
or
adc
xchg
stc
pop
pop
jp
push
adc
sub
adc
xorl
scas
dec
movsl
je
jne
xor
popa
cld
aam
shlb
sbb
cmpsb
dec
dec
cmpsl
stos
jnp
xchg
movsl
and
ds
pop
mov
cli
add
jmp
mull
test
nop
in
fs
jmp
pushf
xchg
mov
mov
sti
pop
add
push
mov
xchg
pop
cmc
adc
pop
xchg
inc
cmp
cmpb
jge
add
insl
mov
outsb
or
out
cltd
sbb
mov
add
mov
stc
and
mov
mov
sbbb
fsubl
out
xor
in
aas
je
fsubrl
jl
imul
sti
push
add
mov
stos
orb
or
test
in
xor
imulb
jns
lahf
sahf
gs
mov
push
xor
push
and
jp
cmp
jno
or
adc
adc
hlt
data16
mov
cmpsb
jge
jb
pushf
ljmp
js
imul
insl
xor
in
jg
push
pop
jmp
or
push
decl
into
push
or
ret
push
jecxz
mov
call
out
jp
pop
hlt
out
call
test
outsb
mov
imul
xchg
jmp
and
cli
es
add
test
jne
jg
push
pop
das
sub
icebp
cmpsb
clc
mov
inc
pushf
dec
push
jno
xor
lret
out
jecxz
rcl
inc
les
popf
xchg
cld
xchg
outsl
insb
inc
mov
dec
and
jnp
mov
pop
icebp
leave
cmp
sbb
movsb
pop
sub
and
ljmp
rcll
jbe
mov
mov
sbb
jecxz
jbe
ss
jno
fistpl
das
pop
mov
test
cmp
xchg
pop
loop
push
sub
aad
mov
mov
imul
andb
xor
call
push
adc
ja
pop
mov
pop
pop
shr
jmp
or
mov
or
sub
mov
stc
call
mov
pop
pop
inc
xchg
dec
pop
mov
into
outsb
push
scas
es
pushf
pop
movsl
aam
mov
imulb
aad
mov
lea
push
sbb
call
fwait
pop
mov
adc
inc
roll
cltd
or
jno
inc
jge
mov
adc
and
pop
adc
inc
and
cmc
insb
push
adc
in
or
lds
and
test
mov
lret
mov
lret
js
add
sub
ja
loop
jl
jg
xor
aaa
push
add
fstpl
jmp
dec
int3
inc
and
pop
xor
mov
hlt
lods
addr16
inc
push
sbb
in
xlat
popf
cmp
fldcw
cltd
out
dec
xchg
push
and
mov
mov
test
jns
cmp
mov
xchg
outsb
scas
rcr
das
in
enter
pushf
loopne
testl
inc
pop
inc
cmp
push
jns
daa
negl
outsb
push
push
mov
pop
outsb
insb
lret
insl
jbe
sbb
adc
out
pop
push
mov
scas
jns
push
jmp
popa
insl
hlt
scas
fisubrs
cmp
pop
cld
test
insb
sbb
leave
movsl
push
dec
into
repz
xchg
mov
sahf
fstpl
or
xchg
sbb
idivl
aaa
jmp
dec
fwait
xchg
hlt
adc
pop
pop
jecxz
mov
shlb
loope
jmp
dec
daa
cli
jbe
adc
xor
lret
out
inc
and
sbb
mov
jle
inc
int
xor
sub
add
cmpb
lods
jmp
cs
cmpsl
imul
mov
lock
sti
loopne
mov
pusha
xchg
xor
loop
xlat
test
cmp
adc
mov
push
ss
cmp
mov
insb
and
dec
ror
xor
pop
shll
xchg
fwait
push
jnp
je
aad
negb
repz
push
pushf
push
cmpsl
xor
cmc
adc
sub
xchg
push
push
repnz
jnp
pop
xor
popl
dec
mov
and
lret
cmp
push
stos
sbb
imul
inc
call
clc
xor
pop
in
andl
sub
setbe
sti
pop
or
ljmp
fucomi
add
out
and
mov
and
out
xchg
pop
rcl
or
sbb
dec
jnp
xchg
sub
mov
add
xchg
gs
jns
push
jb
xor
or
adc
or
xchg
out
lods
cmpsl
mov
inc
dec
shlb
aas
mov
loop
bound
stos
dec
out
fcompl
pushf
call
xchg
out
mov
jb
jnp
das
xor
movsl
mov
aam
dec
mov
mov
mov
sbb
rorl
jge
int3
pushf
or
jg
fadds
push
popa
enter
fnstenv
sub
jp
adc
adc
or
pusha
add
into
adc
cmp
inc
out
sbb
pop
outsb
loop
mov
mov
mov
add
aaa
testl
les
pop
decb
push
push
rolb
pop
jmp
mov
jmp
imul
loop
lcall
imul
icebp
les
xchg
shlb
push
mov
jmp
sub
out
cmp
inc
outsl
les
sub
jno
inc
pop
sub
icebp
inc
leave
popa
cmc
movsl
movsl
int
push
dec
pushf
mov
mov
or
fstpl
xor
xchg
cmc
lods
mov
xor
and
call
or
nop
std
add
cmp
mov
movsb
xor
xchg
jge
stos
movl
aad
lods
inc
xor
pusha
push
adc
mov
push
sar
or
cltd
inc
mov
mov
xor
sub
sarb
push
xor
outsl
adc
sbb
or
cmp
mov
test
inc
mov
movsb
mov
test
stos
test
push
arpl
subl
dec
lock
fstpt
pop
xchg
adc
seto
fsubl
nop
xorl
mov
imul
mov
jle
cs
and
push
add
mov
xor
push
add
mov
cmpsl
adc
cld
sbb
inc
jo
push
push
daa
enter
and
daa
jge
xor
mov
test
lods
idivl
add
scas
push
mov
sar
jg
test
jecxz
shrb
sbb
dec
dec
sbb
test
and
fs
iret
push
andb
daa
mov
loope
sub
mov
cld
cmc
xchg
and
cmpsl
fisubrs
jno
cmp
and
and
cmp
sahf
jo
mov
pop
mov
shll
add
cmc
mov
es
fmull
lahf
ret
add
xor
push
ljmp
xchg
test
adc
pusha
fwait
xor
aas
call
xor
mov
popa
enter
sbbb
popa
rcl
mov
pop
andb
dec
lahf
pop
xchg
fimuls
xor
cmp
out
leave
test
pop
jle
ss
jle
xor
imul
shlb
dec
lea
add
cwtl
out
jmp
adc
adc
imul
adc
xor
xchg
or
fdivrl
mov
sbb
lret
jp
stos
xchg
adc
int3
enter
gs
push
sub
lahf
cmp
jae
orb
or
fsubrs
out
rcrl
subb
lcall
pop
adc
mov
divb
repz
roll
mov
neg
push
popa
icebp
inc
dec
ret
push
sar
lcall
lds
aas
repnz
push
int
imul
mov
mov
fndisi(8087
stos
sbb
fwait
dec
cmpsb
sbb
inc
mov
inc
mov
ljmp
jmp
fwait
leave
jnp
adc
mov
icebp
insb
pop
adc
mov
cmpl
sbb
out
jg
mov
pop
mov
fs
mov
dec
repnz
test
lods
leave
cmp
dec
loope
mov
sub
or
push
xchg
xchg
fs
xchg
icebp
or
loop
jns
fmull
xchg
dec
scas
mov
aad
cmpsb
fcomp
adc
lds
push
or
mov
push
ljmp
js
cmp
shll
mov
and
mov
outsb
adc
pop
sbbl
iret
xchg
fs
ljmp
xor
cwtl
sbb
push
test
aas
or
cmp
cmp
inc
jo
dec
movsl
arpl
mov
push
mov
add
scas
push
out
jne
cwtl
lds
inc
loope
movsw
lea
jl
jae
cld
nop
jno
out
addr16
sti
xor
xchg
or
ljmp
cmpsb
fwait
fwait
ss
push
shlb
lret
cmp
lret
sbb
mov
cmc
xchg
in
and
into
mov
adc
sbb
or
ljmp
xchg
lock
xor
or
mov
mov
mov
out
les
popa
ss
xchg
mov
xchg
loop
xor
dec
pop
add
cmpsb
jmp
test
mov
movsb
out
add
out
add
push
xor
outsl
pop
mov
xchg
out
and
test
loopne
sub
mov
mov
out
push
sub
sbb
in
das
inc
xor
xchg
dec
jle
aaa
mov
test
ljmp
mov
fcomps
pop
xor
test
jl
sub
inc
sbb
inc
inc
or
icebp
cmpl
inc
ret
pop
inc
xlat
push
fdivrs
loopne
iret
dec
sub
stc
add
icebp
iret
sub
movsb
iret
popf
fwait
int
sbb
ja
bound
push
fs
jge
cmpsl
sub
cmpsb
lahf
scas
sub
stos
dec
push
inc
cltd
aas
pop
push
inc
mov
mov
pop
pusha
fwait
cmpsb
mov
ss
jle
pop
dec
std
mov
dec
sti
push
pushf
and
cmp
and
mov
cltd
adc
cmc
ficoms
push
or
outsl
insl
loopne
bound
pop
xchg
ss
in
addr16
push
js
pop
jnp
repz
mov
cmpsl
cmpsl
xchg
inc
cld
push
adc
loope
and
stos
push
arpl
sbb
xchg
add
adc
test
cmp
rcll
leave
imul
imul
add
pushf
mov
leave
test
jg
xor
mov
jo
cmp
jmp
add
mov
pop
mov
cltd
add
mov
add
inc
pushf
xchg
outsl
sarb
dec
test
cld
inc
mov
lret
adc
mul
push
inc
pusha
xor
mov
sub
lea
mov
cmp
call
push
loopne
jne
popa
aam
mov
imul
test
call
in
lea
pop
imul
jge
lea
addr16
sub
sub
pop
mov
cmpsl
lock
mov
jnp
jmp
dec
cltd
dec
mov
push
popa
or
cmp
arpl
icebp
mov
dec
jmp
add
aaa
sbb
clc
insb
je
iret
cpuid
test
fistpll
dec
jmp
add
jb
sub
sbb
out
mov
fildll
popf
xchg
rcrl
xor
dec
insb
xchg
ljmp
adc
cld
cmp
mov
mov
testl
arpl
pop
sahf
stc
cmp
jge
data16
push
jnp
dec
jnp
cmc
dec
or
cmp
sbb
mov
mov
pop
cli
add
stos
and
icebp
lods
xchg
outsl
inc
data16
popf
add
or
test
fidivrs
sbbl
cmp
stos
out
andb
lcall
xchg
and
addr16
pop
mov
cmp
ret
push
lahf
loopne
scas
ficomps
lods
scas
outsb
jae
test
test
push
jl
push
sbb
sbb
and
cli
fistpl
jge
insb
in
cltd
jno
and
cmc
hlt
sbb
cmp
jb
jge
in
inc
int3
ds
xchg
pop
jns
dec
data16
shrb
push
mov
lea
pusha
idivb
fdivrl
mov
mov
or
mov
adc
xchg
add
aad
into
pop
mov
xor
xor
sub
js
sbb
shrl
jecxz
add
and
pop
jl
push
inc
fnstcw
or
rclb
fidivrl
sbb
jnp
fdivrl
cmc
call
int
adc
push
sbb
push
inc
aas
fmuls
dec
stos
jp
inc
and
xchg
aaa
out
cmp
sbb
push
mov
fs
xlat
lret
sbb
mov
insb
jle
sub
pop
fs
dec
lods
pushl
mov
pushf
xor
sbb
mov
sub
out
mov
test
xchg
andl
sbb
dec
shrl
divb
and
insb
fidivrs
sub
ret
mov
mov
cmp
fwait
push
sub
ret
outsl
das
adc
sub
jle
int3
mov
cmpsb
xchg
jb
dec
adcb
xchg
call
mov
mov
dec
dec
arpl
andl
mov
and
cmp
adc
xor
xor
dec
inc
gs
into
cmp
jp
sbbb
pop
fstpl
dec
xor
sbb
lods
xchg
xlat
out
add
jb
out
in
mov
cltd
in
neg
iret
mov
hlt
inc
pop
cmp
fwait
in
jae
insl
in
xchg
testb
mov
hlt
pop
dec
sbb
mov
lea
sub
sub
lods
pop
movsl
jno
mov
and
rorl
addr16
js
cs
add
sahf
lea
rolb
inc
ret
xchg
loope
enter
in
mov
sahf
subl
pop
lods
lahf
out
push
js
xor
pop
cmpsb
pop
jo
idivl
or
adc
inc
stc
adc
in
cmp
lds
int
xchg
or
bound
mov
xchg
lcall
aad
xlat
mov
dec
push
lret
cmpsl
or
das
out
and
inc
pop
ss
aaa
negb
daa
inc
subl
mov
pop
je
sbb
adc
imul
xor
inc
xchg
inc
fs
insl
das
dec
lret
bound
bnd
popa
pop
cs
jno
or
loopne
sbb
daa
aad
iret
mov
stc
sub
xor
sub
push
xor
mov
dec
inc
cli
mov
dec
sub
push
insl
out
ficoml
cwtl
mov
in
inc
pop
adc
inc
into
movsl
sahf
scas
xor
pop
enter
inc
insl
enter
in
outsb
testl
mov
test
inc
ret
jnp
loop
insb
mov
scas
sarl
aas
pop
out
adc
xor
sbb
and
add
pushf
pop
mov
push
cmc
out
xchg
sub
hlt
shrb
cmc
inc
jbe
int3
mov
mov
ficomps
outsb
insl
shl
jmp
jle
adc
imul
jae
adc
add
dec
test
cmp
movsl
mov
and
or
ds
push
roll
and
adc
mov
lret
or
fnsave
add
rclb
adc
mov
jp
sub
jo
das
test
outsl
push
sub
lcall
inc
sub
icebp
jge
sbb
jae
les
mov
sti
fs
fcmovnbe
push
and
out
and
mov
mov
xchg
xor
push
add
mov
stc
jge
scas
jno
inc
inc
insb
sarl
mov
mov
or
test
mov
imul
jb
pushf
lret
dec
stos
sub
loop
push
fdivs
jb
and
cmpsl
lahf
rcrl
xlat
mov
scas
stc
test
add
adc
rorl
stc
bound
int3
pop
jge
mov
leave
cmp
pop
gs
xor
and
mov
rcll
pop
cld
inc
scas
in
pop
sub
xor
js
fcoms
mov
shll
sub
mov
ljmp
jo
push
jl
push
ljmp
xchg
sub
mov
cmp
outsl
fs
out
fistps
test
or
rcll
and
push
dec
dec
inc
notl
aas
es
push
jg
cmpsb
pop
sahf
pushf
std
mov
dec
ljmp
sti
stos
das
and
ja
cmp
iret
aas
inc
mov
add
sub
test
ss
movsl
jg
and
pop
fwait
mov
xlat
dec
arpl
call
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
mov
mov
xor
xor
lea
mov
xor
div
mov
xor
add
cmp
mov
mov
jmp
lods
jbe
loop
jmp
into
mov
mov
or
into
loop
imul
jne
or
js
cltd
cs
jge
in
into
cmp
mov
test
mov
loopne
filds
sbb
lods
pop
pop
or
lahf
negl
mov
scas
call
mov
and
sahf
int3
mov
sbb
xlat
fdivl
mov
mov
sbb
insb
fcompl
arpl
mov
jns
fisubrs
jp
jmp
cmpsl
jecxz
jecxz
leave
les
adc
rorl
or
gs
mov
mov
lcall
dec
add
pusha
dec
push
inc
leave
mov
fsubp
jle
inc
xor
dec
cmp
ret
and
add
sarl
push
mov
jg
mov
sub
inc
js
inc
pusha
mov
movsb
testb
xlat
or
adc
add
or
out
ret
mov
dec
fnstsw
test
aas
ror
pop
jae
push
lret
mov
popf
imul
pop
pop
push
push
pusha
movsb
add
cmp
add
xor
sahf
lds
or
mov
ds
pop
insl
mov
cmp
pop
fwait
mov
jo
jp
fiaddl
mov
out
cltd
sbb
adc
xchg
shlb
ret
out
and
add
lea
pop
adc
scas
inc
pop
add
repnz
xchg
pop
aad
aaa
push
sahf
sahf
testl
lods
jle
lock
pusha
push
mov
pop
repz
sbb
xlat
out
negl
push
imul
push
insb
mov
call
mov
inc
xorl
mov
and
xchg
fisttpll
push
test
pop
arpl
mov
sub
fcoms
fwait
pop
popa
cltd
cmp
pop
cli
fyl2xp1
adc
outsl
cmp
fcmovnbe
andl
mov
arpl
xor
fmul
and
cmc
push
jecxz
insl
add
jge
push
mov
mov
xchg
jl
dec
pop
xchg
shl
ret
ret
js
dec
push
shlb
imul
daa
sti
rcll
jmp
fdivr
fucompp
repnz
jp
jnp
dec
push
adc
ja
jns
push
cmp
xchg
pop
dec
mov
loopne
sub
push
add
inc
push
push
aam
jp
add
mov
popf
push
and
mov
jns
inc
push
sti
add
dec
xlat
aas
addr16
jo
mov
or
mov
or
in
lods
scas
add
sub
pop
push
mov
xorl
push
pop
adc
outsl
test
cs
adc
cld
dec
cltd
xchg
das
jne
ror
xchg
sarb
mov
test
enter
pop
cmp
cmp
xchg
sub
xchg
filds
jnp
aam
and
enter
push
ficomps
cmp
imul
insb
xchg
popf
fwait
ret
or
sub
nop
mov
push
xchg
imul
fmulp
fwait
leave
add
sbb
cld
pop
in
aas
repz
inc
hlt
pop
jecxz
leave
mov
push
outsb
dec
adc
imul
and
cmp
pop
xor
mov
push
and
outsb
fdivl
or
mov
fcmovu
dec
fnsave
repnz
popa
into
push
add
xchg
xchg
ja
sbb
outsl
xor
fsts
fbstp
shll
and
xor
xlat
push
sbb
jecxz
inc
lcall
hlt
mov
dec
adc
ds
cmpsb
pop
xor
mulb
cmp
les
movsl
jo
shlb
add
fisubrl
sub
push
and
push
push
dec
jae
imul
mov
inc
mov
test
lds
and
lea
sbb
push
fdivrs
xchg
push
or
daa
loope
test
das
sub
nop
rol
mov
fs
testl
cmpsl
add
decl
ffreep
mov
cmp
bound
mov
dec
dec
and
cmc
or
push
add
ffree
pop
arpl
in
daa
or
and
and
pop
xor
pop
cmp
jge
fsubrp
push
mov
cmp
cld
stos
push
adc
out
in
cmc
sbb
jbe
or
imul
sub
or
adc
ret
ret
aaa
pop
mov
inc
pop
jns
cmpsb
and
cmp
mov
subl
movsb
xor
cmc
ret
sbb
dec
xchg
mov
rorb
faddl
jmp
daa
dec
sbb
test
mov
xchg
cltd
addr16
in
shlb
mov
sub
std
daa
or
shll
leave
fnstenv
movsb
jl
lahf
mov
repnz
insb
pusha
pop
jnp
mov
hlt
xchg
pop
jp
adc
mov
cmp
xchg
jg
popf
jne
cmpsl
data16
ljmp
jae
jnp
movsl
test
pop
cmp
and
push
mov
jbe
in
cmp
mov
paddb
ror
das
mov
xchg
outsl
inc
xchg
add
or
add
ds
or
jge
mov
sbb
xchg
les
pusha
jmp
pusha
mov
adc
in
xor
mov
xor
adc
mov
and
mov
cld
or
xor
sub
aad
dec
call
sbb
add
fiadds
push
pop
jo
fs
cmp
lock
push
out
fsts
subb
inc
xchg
ficomps
xlat
idiv
jg
adc
or
das
test
jg
jae
and
pop
data16
add
jmp
push
inc
orb
sub
xor
js
popa
cmpsb
xor
push
jbe
int
loope
ret
lods
push
jne
loopne
and
aad
sub
popf
push
adc
scas
mov
mov
add
push
fwait
cmpsb
mov
pop
fs
cmp
xlat
push
cmp
push
jge
stos
push
loope
into
push
les
jecxz
movsb
add
popa
xchg
ret
mov
jp
gs
sbb
mov
outsb
js
iret
lds
sub
int
aas
jl
ja
dec
inc
aad
mov
ficompl
scas
or
mov
add
iret
inc
arpl
shlb
ljmp
cltd
lds
jmp
lds
cmp
xor
push
mov
mov
push
lahf
stc
push
dec
das
mov
je
adc
ss
cld
loope
pop
jbe
aad
xor
xor
mov
and
cmp
dec
scas
lahf
popf
inc
xor
sub
into
mov
push
sbb
bound
pop
sti
das
or
in
xor
push
pop
nop
mov
cli
cld
xchg
andl
jp
outsl
and
jge
and
and
mov
mov
mov
stos
fimuls
scas
mov
sbb
xchg
cmpsl
inc
popf
rclb
add
out
cmp
cmpsl
ret
jns
imul
cmp
jnp
jb
movsb
out
cli
sbb
xor
pop
adc
pop
pop
loopne
jne
mov
mov
into
pop
pop
pop
xor
mov
jecxz
cmp
xchg
cwtl
adc
or
fcoms
xor
out
loop
pop
std
push
mov
or
ret
sbb
enter
mov
arpl
dec
jo
pop
push
pop
mov
add
scas
sub
push
cs
mov
xchg
jbe
fisttps
dec
adc
fstl
mov
jo
add
jbe
imul
fsubrl
sbb
jo
push
ljmp
pop
mov
cmp
in
test
std
sahf
subl
sahf
jnp
sbb
ficomps
popf
cmpsb
and
dec
push
cld
and
fnsave
stos
cmp
pop
lds
das
js,pn
out
inc
scas
and
bound
iret
fsubl
sbb
movsl
pop
jo
jg
stos
ret
xlat
rclb
pop
decl
in
int3
pop
mov
iret
inc
sbbl
cmp
xchg
xor
xor
adc
cld
jnp
dec
sti
pop
sub
outsl
sahf
inc
mov
cli
insl
inc
fildl
sbb
imul
xor
lret
sub
mov
inc
out
lea
aad
add
in
sub
imul
jb
scas
mov
dec
iret
stos
insb
push
mov
xor
clc
push
lds
jmp
shll
mov
dec
mov
pop
gs
add
mov
movsb
inc
mov
in
mov
push
xor
ljmp
xor
dec
movsb
jg
inc
mov
jle
clc
loop
dec
rorl
adcb
add
cmpsb
or
pop
sbb
inc
or
sub
xchg
pop
mov
dec
fists
movsl
add
test
in
or
pop
xor
cmc
ds
test
mov
gs
sub
jge
jns
nop
push
pop
mov
mov
mov
inc
xchg
push
push
fdivrp
movsb
sub
adc
dec
aam
rclb
jo
popa
mov
add
in
ficoml
add
aas
and
ret
xchg
incb
lret
xchg
push
dec
xchg
dec
dec
mov
test
leave
fnstsw
mov
mov
out
cs
ds
inc
scas
xchg
push
insl
mov
cmpsl
sti
enter
xchg
jno
mov
sub
adc
mov
notl
sbb
aaa
pop
mov
cmp
sbb
xlat
push
cltd
xchg
xor
sti
or
in
lods
cmp
clc
pop
movsl
jecxz
dec
push
cld
lea
imul
pop
push
dec
push
shlb
out
mov
loope
xchg
stos
shrb
lcall
mov
insb
aad
inc
js
jmp
adc
mov
jnp
mov
daa
vandps
pop
aas
dec
xor
sbb
push
sub
xor
movsb
sub
out
sub
mov
hlt
pushf
pop
cmp
in
je
mov
rcl
inc
jne
repnz
insb
mov
insl
jns
leave
pop
jg
push
test
inc
stos
scas
add
adc
lock
adc
fwait
les
push
sub
cmpsb
ja
or
lods
sarl
loopne
dec
pop
in
mov
push
int3
push
mov
cmp
pop
sbbb
xor
mov
in
ss
inc
mov
xor
mov
sarl
mov
int3
mov
rcll
dec
jge
sbb
mov
inc
pop
or
xor
out
cli
subl
add
pusha
movsl
pop
int3
pop
into
inc
sbb
adcl
dec
fcoml
nop
push
aam
loope
push
imul
mov
jg
push
lahf
or
jb
in
dec
dec
js
stc
jo
into
sub
xchg
mov
int
sub
pop
mov
pop
jae
push
jge
fstpt
popa
xor
dec
jmp
xor
inc
cmc
lock
movsl
mov
xchg
and
addr16
adc
cli
pusha
mov
pushf
leave
sub
jb
mov
ljmp
mov
sbb
xchg
adc
mov
pop
jl
notb
push
jne
cmp
fs
mov
mov
loop
dec
add
push
cmpsb
cmp
dec
pop
popf
clc
cld
cmpsl
mov
mov
push
ss
dec
adc
adcl
fdivs
and
dec
mov
addr16
in
das
inc
and
cs
es
orb
test
daa
mov
daa
aaa
mov
test
mov
inc
or
out
cmp
inc
add
and
adc
jmp
mov
add
outsb
cld
jg
movd
jns
inc
inc
mov
push
in
inc
cmp
loope
imul
rcl
cltd
pusha
movl
mov
cmp
xchg
retw
hlt
sub
andnps
sub
push
mov
lods
scas
sbb
imulb
mov
xchg
scas
arpl
push
aaa
shrl
mov
imul
and
imul
xchg
ret
out
push
sub
nop
dec
push
adc
inc
call
mov
adc
out
jb
cs
negl
push
test
dec
push
adc
pop
addl
mov
push
mov
es
jmp
ret
or
jecxz
sti
call
mov
cwtl
xorb
adc
iret
loop
push
adc
inc
pop
leave
sub
nop
cltd
fistpl
push
in
mov
jmp
mov
in
fs
dec
inc
stos
cli
loope
into
or
pop
fistpll
or
scas
ss
pop
mov
imul
sti
enter
cltd
cmpsb
aad
jno
sahf
orl
adc
leave
das
lods
jecxz
repz
stos
mov
scas
mov
jb
add
jae
clc
adc
push
pusha
into
mov
lcall
push
dec
sbb
jle
insb
fwait
scas
mov
add
lods
sbbb
inc
xorb
and
ljmp
inc
bound
sbb
mov
push
int
pushf
outsl
sahf
sbbb
sub
jecxz
iret
in
nop
stos
fwait
inc
add
shrb
inc
xchg
jne
adc
flds
repnz
add
add
lret
and
mov
inc
push
add
sbb
mov
xor
lds
das
sub
or
inc
inc
xlat
push
lea
mov
add
push
lds
push
push
ficomps
mov
sub
cli
mov
inc
roll
and
in
push
or
shlb
push
jl
je
lcall
popf
dec
mov
test
lcall
fmul
jecxz
jp
call
nop
pop
mov
xor
test
cmp
dec
xor
cld
and
or
cmovbe
and
xchg
mov
test
test
cmp
pop
jp
aam
dec
lahf
sub
xchg
lock
inc
and
add
add
cwtl
test
imul
mov
imul
mov
push
jb
mov
push
scas
insb
cmc
inc
popa
aaa
daa
xor
fnstcw
cli
adc
jl
lret
push
or
sbb
push
fmuls
mov
and
addr16
mov
sbb
stc
jb
adc
mov
rcll
mov
addr16
lret
xlat
add
jge
add
lods
aaa
lret
sahf
cwtl
out
cmp
fcmovnb
imul
and
daa
lea
cmp
mov
int3
dec
fnsave
lahf
jae
cltd
xor
mov
cmp
hlt
mov
enter
popa
fildl
out
bound
lret
jge
or
or
loop
sbb
movzbl
dec
rcrb
fistpll
icebp
clc
adc
push
pop
jns
xchg
shlb
cmc
xor
iret
roll
cmpsl
ffree
xchg
sub
xchg
pop
dec
mov
repz
adc
mov
shll
and
add
add
pop
cli
push
ljmp
inc
mov
shlb
push
inc
and
ret
sbb
cmc
sub
das
xor
rcrb
lcall
cmp
pusha
push
data16
pop
rorl
imul
dec
mov
shr
mov
sbb
pop
ret
in
dec
and
or
add
stos
loope
jle
mov
scas
fistpl
leave
test
addr16
scas
cld
push
sub
addr16
mov
push
fsubrl
inc
ror
outsl
xor
or
mov
lcall
jle
int3
xor
and
push
bound
cmpsl
add
sbb
push
jb
xlat
or
into
xchg
mov
xchg
or
ret
in
mov
mov
mov
ret
jecxz
mov
cmp
mov
pop
out
scas
push
xchg
pop
inc
sbb
out
test
hlt
mov
xor
push
insl
dec
inc
cmpsl
dec
xor
cmp
inc
lods
imul
scas
rcrb
push
mov
fs
and
movsl
inc
mov
mov
xchg
pop
push
xchg
add
fcompl
cli
jae
mov
mov
test
dec
sub
inc
clc
mov
push
mov
popa
sbb
mov
jns
std
test
sarb
loop
fsubs
out
xchg
out
and
pop
mov
adc
pushf
lods
push
or
cltd
jmp
ss
cltd
arpl
popf
sbb
cmp
jae
mov
ds
mov
push
scas
test
fistps
sbb
cmp
shl
and
pop
roll
ret
nop
xor
pop
inc
cmpl
rorl
and
stos
mov
insl
mov
ss
cmpsl
mov
negl
pop
fs
cltd
push
js
ret
dec
push
cmpsl
pop
call
dec
lret
and
xchg
push
out
pop
sbb
dec
pop
insb
fldt
test
shrl
cs
loopne
divb
loope
mov
jmp
cld
arpl
mov
pusha
or
sub
xchg
aam
or
sahf
arpl
je
int
das
mov
test
fsubrl
jl
sub
dec
adc
xor
mov
and
in
mov
inc
pop
popa
lahf
popa
dec
cwtl
mov
and
jg
movsb
andb
adc
and
inc
jb
xlat
xlat
dec
xchg
pop
xor
in
inc
ds
inc
shlb
pop
fwait
stos
mov
jmp
cmp
dec
bound
mov
je
xor
sbb
insl
insl
sti
lret
jno
insl
push
fmuls
lret
outsl
out
data16
mov
repnz
aad
push
cmc
xchg
adc
mov
mov
adc
jg
cwtl
jecxz
push
out
and
mov
cmpsl
mov
sub
jl
jg
pop
mov
and
int
mov
mov
das
out
sub
xor
xor
mov
jecxz
inc
mov
nop
pusha
xor
cmp
inc
dec
idivl
sbb
and
mov
clc
and
adc
xchg
and
cltd
dec
lcall
xchg
les
mov
loope
jl
add
lea
mov
mov
bound
cwtl
icebp
jge
mov
xlat
ret
divb
push
jbe
cs
push
in
pusha
sbb
cmp
inc
add
loopne
daa
lock
inc
jle
jmp
push
loope
aam
lods
add
movsb
xor
dec
sbb
push
add
sub
jecxz
adc
mov
xchg
das
jle
sub
push
in
jne
adc
add
test
cmp
inc
dec
push
cmpsl
daa
pop
mov
sub
mov
mov
out
loop
push
in
loope
jns
add
inc
and
cmp
adc
or
dec
das
rcl
mov
outsb
sbb
jne
in
leave
add
adc
add
in
dec
imul
aam
aaa
lahf
inc
sbb
push
cmc
xchg
sub
call
xor
lret
mov
scas
push
cmp
lcall
jl
lret
js
jle
jnp
mov
sub
lock
push
push
in
cmp
xlat
in
mov
xchg
addr16
inc
insl
push
hlt
insb
sub
imul
out
cmp
mov
mov
push
cmp
lods
xor
loope
cmp
int
xchg
mov
iret
in
jge
xchg
adc
call
out
imul
push
adc
or
cld
xor
ljmp
push
rcrl
cmp
ret
stos
xor
inc
mov
fmuls
je
or
mov
add
cmpsl
mov
or
clc
into
jmp
or
xchg
dec
pop
cmc
repz
jnp
mov
xor
stos
sub
hlt
fcomp
imul
mov
mov
push
inc
mov
dec
ret
shll
callw
add
flds
push
pushf
sbb
imul
mov
es
mov
add
incb
insb
cwtl
dec
add
jp
xlat
pop
push
dec
or
or
or
es
out
sti
loopne
mov
fisubrl
xchg
stos
push
std
test
push
fisubl
popa
js
fildll
fcmovnb
jle
test
call
mov
arpl
sahf
sti
in
std
dec
push
mov
xorb
loope
jp
sub
xchg
add
xchg
dec
std
ljmp
xor
xchg
ljmp
shl
sbb
pop
shll
rcrb
or
cmp
push
mov
fldcw
in
out
add
and
fimuls
pop
mov
loop
push
es
jg
xor
sbb
inc
cmp
ss
and
mov
jle
and
push
dec
pop
cmp
sahf
popa
clc
xchg
enter
jl
pop
jmp
fwait
mov
xor
fistl
addb
xchg
xor
ljmp
xor
scas
inc
in
shlb
cld
stos
std
jle
xchg
daa
lret
jg
data16
das
mov
mov
int3
inc
add
fidivs
mov
and
adc
push
adc
xor
jns
adc
push
pop
sti
jmp
leave
aad
lock
roll
and
out
repz
cmpsl
push
out
pushf
fld
push
mov
cld
adc
ja
faddl
in
cmpsb
fnstcw
scas
sub
sub
fucomip
es
cmp
pop
dec
call
sub
movsb
inc
dec
sub
pop
icebp
lea
sub
lods
test
ds
pop
and
in
decb
mov
dec
mov
int3
pop
jno
std
mov
adc
leave
imul
andb
clc
jne
mov
rcrb
jno
mov
and
outsb
je
or
cmp
addl
scas
xchg
orb
dec
push
sti
mov
bound
not
mov
inc
cmp
lret
rclb
jp
test
add
aas
xchg
add
in
or
ror
cmp
rol
frstor
jmp
stos
les
inc
outsb
sub
dec
mov
notl
aad
jge
pop
aaa
mov
xlat
dec
nop
dec
imul
movsl
data16
outsl
lods
popf
or
out
jp
add
pop
xor
das
addl
sbb
xchg
or
sub
sub
inc
jo
addl
iret
push
addb
xchg
mov
out
inc
pusha
repnz
scas
xchg
cmp
and
popa
and
xchg
adc
popf
cmp
mov
cmpsb
sbb
jle
test
inc
mov
popa
xchg
pusha
inc
scas
and
mov
aad
aas
cmp
push
adc
outsb
mov
test
sbb
imul
imull
ret
insb
popa
enter
fiaddl
inc
cs
inc
cltd
xorl
xchg
es
mov
pop
adc
or
enter
or
cmp
inc
mov
mov
adc
mov
dec
stos
adc
in
cmp
cmpsl
jl
insb
js
add
mov
pop
mov
cmc
fdivr
ret
ds
mov
out
pop
add
mov
cmp
sbb
or
inc
loopne
cmp
xchg
mov
gs
shlb
scas
addl
mov
or
jl
stos
mov
sub
sbb
das
rcrl
out
add
arpl
lcall
test
pop
mov
jno
imul
cmp
mov
xchg
pop
jmp
mov
push
loop
xor
test
stc
fists
cmc
mov
fidivs
cs
pop
mov
sahf
cmpsl
lea
dec
test
push
lods
test
dec
stc
in
arpl
mov
cs
mov
xor
insl
cmp
lea
add
cmp
mov
bound
shlb
or
popf
cmp
jl
rorb
inc
loop
dec
xor
xor
rorb
push
es
mov
pop
in
mov
pop
sarw
popf
les
sbb
or
cmpsb
imul
data16
fidivrs
std
fldenv
sbb
mov
jbe
cmpsb
mov
or
or
add
lret
mov
shlb
push
das
dec
mov
fld
gs
sub
sub
sarl
xchg
lods
je
cmc
repnz
push
lds
daa
inc
subl
xorb
cmpb
and
cmpsl
call
cs
push
push
jns
dec
rclb
stos
sbb
jl
imul
test
mulb
mov
mov
xor
repnz
ds
mov
jnp
loope
hlt
insb
pop
sbb
stos
stos
jae
xchg
popf
cmc
js
jnp
inc
ljmp
out
call
ss
jno
or
gs
cmp
cmp
stos
jg
cmpb
dec
nop
pop
and
jg
mov
adc
loope
xchg
pop
inc
or
icebp
sbb
nop
adc
clc
cwtl
pop
lcall
gs
dec
pusha
sub
jmp
xchg
sbb
adc
xor
scas
xchg
test
xchg
inc
rol
lcall
inc
lock
out
aas
jnp
mov
xchg
jecxz
ss
into
clc
loopne
add
sar
fistpll
xchg
es
jno
mov
jge
lods
js
rcll
pop
dec
jns
dec
push
pop
jbe
lock
mov
ds
cmpsb
and
jb
pop
sbb
inc
rcll
out
mov
fwait
orb
jge
dec
adc
push
enter
sub
push
jg
or
inc
fldcw
out
int
xor
pop
dec
imul
adc
add
push
aad
mov
ret
push
cltd
into
jnp
mov
cmp
sbb
sbb
add
nop/reserved
xchg
push
cmpsl
mov
stc
inc
orl
lret
xchg
ror
adc
aam
jmp
test
push
fwait
jecxz
fildll
inc
cmp
xor
cmc
push
adc
lds
cli
lds
ret
mov
imull
movsl
cltd
inc
pusha
scas
test
fs
sub
sbb
cwtl
push
mov
test
inc
sub
mov
pop
push
imul
push
icebp
xchg
and
ss
das
gs
push
jne
scas
pop
cwtl
mov
jl
mov
sub
imul
mov
test
sub
fsubl
inc
clc
sub
popa
or
lret
test
xchg
sbb
fldt
mov
jg
xchg
xor
fbld
jno
inc
cli
test
jl
dec
adc
cmp
xor
inc
xchg
mov
aad
or
and
add
adc
nop
repnz
pop
sbb
loope
jbe
or
lcall
lret
and
push
pop
pop
xchg
jp
add
mov
popf
jb
sub
stc
add
mov
mov
xchg
xor
mov
pop
js
mov
push
into
lcall
cltd
fisttps
scas
push
mov
jae
std
push
pop
pop
andb
dec
jnp,pt
lret
pop
scas
inc
jg
xor
jp
dec
jns
lahf
daa
mul
sahf
stc
cld
outsl
pop
push
push
jbe
aaa
cmpsb
out
xor
scas
in
adc
or
pop
data16
cmp
movsb
adc
mov
ja
shll
lods
repz
in
xchg
push
dec
fst
mov
hlt
and
pop
add
add
add
nop
sarl
pop
xchg
cmp
sub
jl,pt
aad
jb
les
aas
cmp
add
xchg
cmpsb
add
mov
adc
jle
decl
sbb
es
jmp
mov
push
cltd
inc
in
mov
jae
sbb
sahf
push
test
mov
int
push
jae
mov
cmpb
jge
mov
stc
shll
push
xlat
out
iret
pop
dec
push
mov
or
in
aas
es
popf
shll
cmpsb
fwait
hlt
lods
cmp
jae
or
sti
sbb
lea
fmuls
sbb
lods
loop
repz
in
jno
les
adc
lret
and
jg
dec
jl
lea
ss
xorb
add
ljmp
xor
enterw
fcom
arpl
pop
xor
repz
aas
or
test
xchg
cmp
dec
lret
popa
or
push
insl
lods
sub
ret
inc
mov
add
ret
popf
out
sbbl
insb
loope
stc
jmp
add
xor
insb
fistps
sub
es
frstor
pop
cmc
loopne
xor
fnstcw
cltd
dec
pop
add
cwtl
jp
inc
push
pop
adc
out
dec
cmpsb
pop
or
shl
mov
adc
arpl
inc
inc
movsl
movsb
roll
leave
popa
cltd
mov
pushf
lods
xchg
jp
cltd
cmp
adc
enter
push
jecxz
or
sub
xorl
ds
fwait
je
mov
pushf
jb
add
inc
inc
rcrb
jae
pop
adc
xchg
inc
out
inc
push
pop
mov
leave
dec
inc
cld
mov
pop
outsb
mov
xor
das
push
mov
fimuls
inc
jl
adc
mov
ret
lret
xchg
jl
enter
and
xchg
jp
mov
pop
gs
daa
cli
aam
xchg
jne
pop
in
adc
and
movsb
cmp
jbe
sbb
adc
sahf
inc
mov
mov
js
adc
push
gs
js
pop
adc
cmp
xchg
or
loop
mov
jns
mov
jno
adc
or
out
push
jb
sub
dec
dec
aaa
push
lahf
fsubl
inc
mov
xor
cmpsl
add
jg
pop
xor
loopne
lret
mov
fwait
sub
hlt
lcall
jae
es
add
mov
pand
fdivr
sbb
enter
popl
in
adc
das
js
addl
sub
loopne
inc
push
push
repnz
fisubrs
scas
rcrl
and
aam
and
ja
sti
adc
push
call
pop
je
sbb
mov
pop
mov
mov
aaa
or
psubb
xchg
insb
lods
cmp
int
fiaddl
jecxz
mov
sahf
and
lcall
or
cld
jno
push
lcall
xchg
data16
lods
xchg
arpl
fs
push
aas
cltd
cmp
mov
sbb
mov
test
add
add
movb
imul
mov
movzbl
mov
jmp
xor
add
imul
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
jmp
sbb
sbb
push
mov
mov
jp
cs
push
bound
pop
bound
cmpsb
aad
imul
outsb
sub
push
cmp
cmp
dec
std
cmpsl
test
stos
add
jp
adc
and
or
xlat
int
sbb
xchg
imul
test
pop
dec
mov
repnz
nop
cmpsl
pop
hlt
adc
xchg
loope
xchg
mov
jns
dec
mov
dec
shrl
mov
jl
scas
std
xor
lret
mov
lcall
stos
lds
sub
das
add
and
pop
push
and
scas
xor
adc
aaa
or
push
cmp
std
pushf
subb
and
scas
dec
jb
call
loop
xor
push
call
cmp
pop
and
or
aaa
mov
leave
pop
fistpl
ds
pop
push
sbb
xor
sti
jmp
sbb
daa
inc
sbb
leave
popl
test
jb
cli
dec
inc
les
dec
jl
pop
push
shld
jno
les
sbb
dec
cmc
int
push
je,pt
nop
mov
jnp
bound
and
push
ljmp
pop
scas
scas
inc
sub
inc
mov
es
scas
add
daa
adc
in
test
xchg
add
dec
lods
dec
sbb
nop
mov
sub
pop
mov
sbb
xchg
test
push
and
adc
mov
pop
addr16
adc
adc
or
aad
xchg
je
jne
push
xchg
aam
addr16
xor
test
int3
push
stc
jb
cld
sub
push
jl
add
mov
xchg
mov
xor
cmp
or
xchg
in
fldt
sub
xchg
mov
push
jg
lea
jmp
jb
pop
inc
or
xor
dec
jne
and
bound
xor
or
mov
test
out
jp
cmovle
rorb
cmpsl
lea
imul
inc
jbe
inc
jno
inc
mov
xor
mov
test
lcall
adc
mov
enter
xchg
push
daa
mov
jbe
push
or
std
dec
or
add
inc
call
push
or
les
es
mov
std
xchg
jns
and
add
pop
loope
pop
mov
lret
fnstsw
xor
ret
or
sub
xchg
mov
jb
adc
dec
sbb
subl
in
push
shl
lock
fwait
add
push
jns
and
fdivrs
sahf
xlat
sbb
movsb
imul
sbb
push
fadds
pop
scas
push
inc
push
mov
dec
jecxz
mov
adc
out
xchg
push
popa
pop
in
hlt
cmp
testb
mov
out
das
adc
xchg
pop
out
es
push
movsb
jo
aas
stc
and
insb
cmp
lods
mov
or
in
mov
mov
lds
lock
inc
repz
push
push
cmpsl
leave
xchg
jg
lock
pop
aam
add
sbb
inc
das
aam
lahf
fs
mov
jge
jne
sti
or
out
pop
aaa
and
inc
enter
ds
jmp
mov
mov
push
gs
mov
int
jle
test
inc
mov
call
or
add
orb
inc
fnsave
add
mov
je
aad
dec
pop
cltd
out
adc
clc
pop
repnz
nop
rclb
mov
sub
jge
ja
adc
addr16
mov
and
stos
sub
mov
or
aas
insl
popa
test
lahf
hlt
in
push
pushf
mov
jp
mov
mov
loopne
icebp
sub
mov
mov
or
ja
pop
lods
aam
or
cmc
dec
add
scas
lds
cwtl
es
aas
and
fs
sub
push
loopne
pop
inc
adc
jg
fs
jbe
lods
push
pushf
loope
and
jb
jmp
push
mov
leave
dec
bound
clc
and
add
ret
fmull
cmp
mov
dec
sar
je
test
pop
repz
sbb
fs
add
adc
mov
adc
out
aaa
in
push
insb
les
mov
xchg
popf
es
imul
dec
and
sub
dec
cwtl
ret
into
imul
nop
fldcw
push
adcl
lcall
pushf
data16
nop
bndstx
test
cld
mov
xchg
insl
loopne
sbb
xor
jnp
mov
in
pop
movsb
xlat
lret
aaa
cltd
jg
lods
push
shll
push
pop
out
es
or
mov
popa
pop
or
les
adc
popa
jne
pop
gs
sub
and
hlt
nop
aad
jle
push
mov
jl
lret
pop
mov
push
repz
in
jle
aam
fldt
push
jb
ja
jae
js
dec
lret
mov
sahf
push
inc
jbe
add
xchg
xchg
mov
cmpsb
pusha
and
cmpsl
xlat
std
inc
cmc
andl
push
and
daa
cmp
lock
mov
mov
push
jnp
add
and
xchg
add
pusha
mov
add
repz
jp
ret
add
xchg
jge
loope
mov
fnstenv
and
adc
cmpsl
insl
jne
xchg
inc
xchg
stos
mov
ljmp
outsb
mov
dec
fld
push
cmp
mov
outsb
pop
pop
mov
sub
add
and
int
or
aam
mov
jnp
les
jp
bound
dec
jg
jae
cli
cmp
rcrl
push
adc
test
shl
test
ja
jbe,pt
xchg
mov
loopne
sub
mov
sbb
xchg
xchg
out
or
pop
mov
fldt
iret
fstp
xchg
cmp
mov
adc
push
bnd
pop
bound
pop
ficomps
enter
sbb
ret
mov
gs
dec
insl
inc
cmp
jge
std
ljmp
mov
daa
sub
dec
bswap
mov
mov
sub
int3
xor
dec
ror
jmp
inc
push
jns
shlb
and
push
xchg
sbb
jmp
div
xchg
jge
adc
mov
jno
mov
popf
ret
jge
cwtl
dec
aaa
in
pop
ret
shl
sbb
mov
inc
out
jno
inc
dec
xchg
js
mov
lock
pop
addr16
mov
nop
fwait
aaa
sub
imul
pop
mov
cmc
mov
xor
mov
xchg
xor
cmp
lods
mov
jmp
mov
call
andnps
iret
and
outsb
cld
cltd
jp
xor
mov
mov
stos
or
push
push
stos
push
repz
leave
pop
roll
inc
adc
pop
ret
cmpsb
dec
pushf
test
pop
ja
rclb
push
leave
inc
xchg
fcmovnbe
in
add
aam
xchg
shrl
aad
xchg
mov
mov
mov
sbb
sub
or
and
in
add
les
mov
int3
pop
jp
pop
xor
or
fadd
pop
sti
add
mov
jnp
cwtl
ja
fsubrp
jo
cmp
fistpll
cld
in
frstor
xchg
mov
push
mov
pop
push
lret
ss
dec
mov
xor
or
or
pop
lds
out
test
pop
dec
push
xchg
filds
xor
mov
daa
hlt
ds
into
cli
jae
mov
sbb
mov
ficomps
or
pop
add
imul
nop
lcall
mov
jl
lretw
mov
out
idivb
mov
jno
mov
dec
push
das
bound
je
test
jl
lcall
ror
cmc
jg
and
loop
les
mov
sub
mov
movsl
loopne
loopne
popa
scas
stos
fucomi
fmulp
jge
sbb
aas
mov
jbe
decb
fs
lret
cwtl
fs
inc
jo
fcmovb
insb
imul
add
lahf
mov
shl
xor
sbb
and
scas
mov
xor
inc
sbb
push
andb
xor
add
mov
xchg
les
and
jle
dec
lret
imul
xchg
mov
xor
push
cmp
in
sti
stos
push
fldl
sahf
xchg
jae
jb
arpl
cwtl
repz
js
scas
cltd
jno
icebp
int3
sbb
dec
cmp
mov
jnp
js
dec
jbe
jg
inc
push
push
xchg
lods
push
inc
inc
ss
mov
xor
jg
enter
fcoml
ret
sub
mov
imul
and
cmp
adc
push
jle
fwait
sbb
pop
and
movsb
fildl
enter
push
xlat
push
xor
sub
jae
loopne
mov
cwtl
xchg
iret
in
loopne
xchg
mov
fucomi
jp
ficompl
cmc
adc
sbb
shlb
pop
adc
push
mov
xchg
cwtl
push
mov
mov
inc
pushf
xor
les
xchg
imul
test
xchg
imul
es
out
mov
jmp
mov
push
xchg
inc
bound
shrl
shll
pop
ds
jecxz
add
lods
in
dec
cmc
sahf
js
pusha
add
dec
jne
jo
pusha
icebp
stos
xchg
pop
inc
push
clc
dec
xchg
inc
es
mov
rcrl
sub
sahf
pushl
xchg
adc
pusha
sub
aad
fildl
pop
cmpsb
inc
pop
outsl
jmp
add
imul
insb
jmp
push
cmp
add
dec
and
cltd
lods
divb
xlat
dec
scas
dec
jge
push
and
icebp
jecxz
negb
outsl
dec
jae
test
cmp
mov
mov
shl
lods
or
push
cmc
filds
hlt
mov
fmull
mov
sub
adc
inc
sti
inc
ret
rorb
inc
fwait
cmpsl
mov
scas
sub
in
adc
pop
pand
loop
dec
in
jbe
and
pushf
iret
stos
outsb
std
push
mov
add
out
or
std
cltd
fstpl
mov
shrb
insb
push
mov
xchg
or
jle
das
dec
and
and
adc
sub
dec
fwait
or
in
push
dec
mov
mov
inc
sub
sysenter
mov
loope
or
cltd
lret
std
sub
repnz
adc
adc
les
nop
mov
mov
iret
daa
pop
test
mov
push
pop
lds
xor
push
push
call
dec
and
imul
dec
mov
cmpsb
mov
sub
andl
aas
push
push
cmc
add
jle
bound
sub
pop
jmp
jo
mov
xor
out
shlb
rorb
mov
pusha
and
loopne
jno
movsb
add
mov
pop
stos
iret
sub
test
js
jno
dec
inc
pop
push
dec
cmp
mov
adc
ss
cmpsl
call
xchg
mov
sub
jnp
jecxz
imul
pop
mov
in
lock
scas
mov
add
popa
mov
and
add
xchg
loop
mov
movsl
inc
pop
adc
movsl
or
cli
mov
cmp
lds
mov
outsb
mov
push
mov
add
xor
in
adc
lods
xchg
inc
ljmp
cwtl
push
and
xor
ljmp
mov
faddl
fistpll
in
push
andb
dec
mov
mov
imul
cltd
cmp
sbb
pushf
cmp
dec
lods
mov
jns
lea
push
mov
pcmpgtw
mov
fwait
xchg
pusha
xorb
repnz
aas
adc
test
push
xor
and
scas
xor
and
add
roll
push
arpl
pop
jmp
cs
mov
and
cmpsb
fistps
call
xorl
mov
lahf
mov
ffreep
and
cmpb
into
push
sbb
insl
push
jge
pushf
lret
or
and
cltd
lret
mov
das
xor
xchg
sub
cmp
xor
sbb
pop
in
out
jne
dec
mov
test
inc
aad
push
pop
repz
jae
movsb
daa
shlb
cmpl
rol
jmp
out
or
sub
mov
lods
ds
lods
mov
dec
repz
mov
jg
dec
xor
pop
inc
mov
movsl
push
sub
addr16
addl
pushl
sbb
fnstcw
in
xor
ret
fiadds
add
jecxz
sub
push
pop
xchg
mov
lods
or
and
push
inc
imul
out
and
test
bnd
pop
mov
imul
movsb
cmc
jp
psubb
ja
fcomps
jmp
cmp
into
cltd
into
jmp
sub
mov
inc
mov
mov
cmp
add
push
outsb
fwait
outsl
hlt
adc
jg
clc
aaa
daa
pop
shll
sahf
orb
enter
pop
adc
xchg
or
cs
mov
js
hlt
sbb
nop
xchg
push
je
outsl
scas
cmc
ret
fcmovu
fwait
lods
mov
jno
stc
cli
sbbb
cmp
in
cmc
inc
movsb
mov
andps
les
inc
shl
jno
xchg
cmp
jecxz
push
out
inc
sub
ss
int
adc
sub
ja
mov
rol
mov
cmpsl
test
std
call
xor
fidivs
out
aad
fwait
stos
dec
xlat
iret
clc
xor
test
aad
shl
pop
or
pop
push
dec
outsb
push
push
pop
scas
mov
popa
loope
les
or
mov
push
je
aas
call
gs
push
push
pusha
fs
mov
adc
clc
jbe
divb
jge
shll
int3
in
jmp
xchg
jns
mov
dec
cli
decb
push
or
push
adc
sub
pop
jno
outsb
push
in
jmp
jmp
pop
mov
and
push
lods
in
psadbw
cmc
test
std
fiaddl
xchg
xor
push
in
adc
in
dec
ret
mov
adc
and
mov
and
fmull
xchg
or
cmpsb
adc
sub
fcomip
dec
daa
bound
xlat
inc
xor
cmpsl
aas
inc
divps
cmpsl
inc
inc
adc
sbb
outsl
aas
repnz
lock
cs
pop
jmp
out
mov
nop
into
test
pop
mov
neg
inc
lahf
dec
hlt
or
in
inc
push
ret
in
mov
mov
outsl
popa
std
dec
push
imul
jb
or
int
andb
sbb
jae
and
mov
push
cmc
dec
hlt
fsub
ja
inc
and
into
ss
pop
xchg
or
shlb
out
mov
fists
xor
repnz
mov
icebp
push
pusha
leave
pop
fsubrs
and
rcrl
push
aam
loop
mov
or
push
testb
cmp
nop
gs
adc
pop
xor
dec
jg
push
jne
std
mov
adc
pop
mov
cmpsl
pusha
jb
dec
xor
insb
fstp
repnz
cmpsl
mov
aaa
xlat
mov
das
mov
aas
or
in
or
mov
stc
int3
sbb
test
xor
lret
jg
mov
sbbb
adc
lahf
test
and
loope
jecxz
leave
inc
jge
enter
push
pop
fmull
mov
out
mov
fnsave
jne
mov
fimull
sub
mov
dec
idiv
insl
mov
enter
or
fimull
adc
jecxz
js
ret
lea
inc
es
sub
jns
mull
jo
and
push
sti
out
je
imul
lea
int
sub
mov
fistl
or
xchg
fstps
sbb
arpl
push
push
add
xor
mov
test
sbb
stc
sbb
cmp
push
aas
test
push
lock
pop
pop
inc
in
cld
int3
dec
pcmpgtb
fmull
stos
jb
mov
div
rcr
jmp
pop
mov
cld
adc
test
fcmove
lahf
enter
out
xchg
pusha
scas
aas
sub
imul
loope
mov
shrb
loopne
push
test
imul
pop
out
int3
fiadds
test
inc
push
and
test
add
orl
jmp
push
pop
in
fwait
test
aam
int
test
js
inc
mov
lock
sbb
mov
filds
mov
add
sbb
mov
sti
imul
pop
outsb
or
mov
mov
pop
jle
pmuludq
xchg
pop
push
and
rorl
imul
repnz
dec
mov
dec
inc
xor
jp
bound
push
pop
xor
outsl
mov
ret
sbb
cltd
xchg
test
mov
addb
pop
mov
fmull
sbb
notl
xchg
add
inc
lods
inc
insl
stos
adc
gs
sbb
addr16
sbb
xor
mov
add
test
inc
shl
scas
mov
jge
imulb
inc
cmpsl
test
or
add
jp
mov
xor
xor
pop
jp
mov
push
or
add
push
pop
orl
and
je
scas
mov
in
stc
xchg
jb
loop
insb
mov
rorb
or
scas
fsubrl
inc
pop
aad
dec
scas
pop
mov
call
out
pop
xchg
call
adcb
fcmovnbe
mov
push
mov
and
gs
jle
lea
xor
cmpsb
add
sbb
mov
add
mov
xchg
loop
adcb
out
adc
adc
sbbl
push
jp
pusha
sbb
mov
cltd
mov
test
jns
cmp
aad
dec
sahf
mov
add
out
ds
mov
inc
and
push
xchg
adc
mov
adc
mov
mov
icebp
lcall
loope
jo
mov
dec
movsb
js
test
popf
test
adc
cmc
dec
jl
insl
pop
ret
inc
jbe
jno
jnp
inc
loopne
mov
inc
orb
sbb
lods
mov
scas
mov
dec
outsl
sub
cmp
push
mov
stc
in
cwtl
inc
add
popf
or
rcl
ret
in
push
mov
pop
into
outsl
dec
dec
xor
push
sub
jl
add
ljmp
xchg
imul
fcomps
addr16
data16
push
push
jae
adc
dec
mov
mov
jge
sub
jns
scas
inc
int
sar
out
mov
mov
inc
shll
add
movsb
sbb
push
stos
out
cmc
push
and
sub
xor
call
clc
in
imul
cmpsb
inc
iret
pusha
int
arpl
mov
insl
cld
insl
in
stos
push
decb
sbb
adc
mov
cmpsb
mov
jg
ret
xorb
inc
or
iret
push
mov
mov
mov
sub
mov
outsb
mov
scas
aas
iret
lahf
jb
imulb
adc
lock
dec
js
cmp
jmp
jp
rol
inc
xor
stos
mov
lea
stc
and
sbb
xchg
out
add
adc
add
xchg
jmp
adc
add
in
push
mov
repnz
sti
mov
push
iret
jns
push
cmp
xor
lcall
loope
mov
jmp
aaa
roll
mov
mov
adc
mov
add
mov
lds
es
call
jns
imulb
mov
or
push
xorb
lret
repz
popa
rcll
das
adc
xor
mov
push
mov
dec
add
jge
jb
aas
add
jbe
enter
or
stos
arpl
fcoml
dec
addr16
fstpt
ljmp
andb
cmp
jns
xchg
xlat
js
inc
insl
push
fildll
xor
scas
cmp
push
outsl
pop
jns
push
push
loopne
je
mul
xchg
inc
imul
test
shrl
and
into
mov
stos
notb
lock
repz
fcmovb
dec
cwtl
call
inc
divb
adc
mov
ds
insl
adc
mov
pmuludq
sub
pusha
subl
repz
mov
push
test
repz
loopne
imulb
cmpsb
mov
rolb
mov
push
inc
mov
dec
push
int
iret
stos
lock
push
cmc
jl
sub
dec
adc
and
xlat
add
clc
jbe
lods
jecxz
movsb
cmp
xor
dec
push
outsl
cmp
sbb
and
push
jbe
mov
iret
repnz
adc
inc
flds
clc
and
and
mov
bound
addr16
fmul
and
adc
imul
das
movsb
sbb
subb
dec
out
sub
jne
jns
mov
leave
push
bound
pop
mov
add
lret
mov
sbb
negl
cmp
test
and
fdivp
test
sub
inc
or
aas
sbb
mov
aam
inc
mov
inc
lcall
mov
cmc
and
fistps
mov
cmp
adc
std
push
mov
leave
jbe
inc
jmp
adcl
ret
cltd
xchg
add
enter
inc
jge
sar
sbb
and
sbb
test
ja
out
sub
jecxz
xchg
pushf
cmp
cmp
mov
mov
mov
or
inc
pop
loop
sbbb
cmp
jecxz
or
sti
xor
sbb
popf
xor
je
mov
je
mov
cmc
jge
sub
idivb
sub
lret
mov
push
mov
std
add
sub
fstpt
sub
mov
sbb
and
push
mov
call
inc
inc
add
or
scas
inc
dec
stos
sub
jg
xchg
adc
into
pop
js
sub
or
jb
fcmovb
movl
lret
in
add
scas
movsb
stc
orb
insl
push
test
pop
mov
cld
adc
push
xor
mov
jl
and
cmp
sbb
lods
mov
pop
cld
or
sti
cmp
outsl
fistpll
fcoms
movsl
negl
push
jne
gs
xchg
repz
mov
pop
test
sub
sub
inc
scas
mov
mov
je
fidivrl
push
int3
sub
mov
aas
sbb
imul
out
adc
push
or
hlt
popf
mov
adc
cmp
dec
xor
cmp
out
arpl
stc
xchg
sub
jl
aad
sbb
jecxz
cld
dec
rorl
xlat
fldcw
add
jge
jle
ret
xor
add
subl
mov
cmp
or
and
mov
mov
or
testb
xchg
sub
mov
repnz
scas
or
mov
xor
test
and
add
popf
cmp
or
out
outsl
js
mov
stos
std
sbb
cmp
in
ret
sbb
loope
dec
dec
push
pop
sbb
stos
std
push
scas
mov
repz
sub
xchg
xchg
push
push
dec
sub
shrl
dec
pop
cmp
repnz
cld
movsb
or
push
push
mov
or
jge
andl
pop
fwait
test
cmpsb
jbe
leave
outsb
adc
movsl
cmpsb
sbb
jmp
xchg
in
dec
push
sub
add
gs
shl
adc
out
lcall
push
leave
jae
inc
rcrl
xor
push
xchg
test
int3
xor
sahf
js
lods
loop
shlb
inc
shll
aas
and
dec
mov
xchg
pop
js
xor
dec
mov
int3
push
jle
sub
repz
out
cld
std
mul
stos
xchg
jl
xorl
mov
out
push
aaa
mov
jg
jne
dec
ficomps
xchg
adc
pop
imul
aaa
add
push
xor
mov
mov
fsin
pop
xchg
fsubs
xchg
int
push
xchg
xchg
cmpsb
movl
inc
sets
ds
pusha
mov
loop
jno
popa
mov
inc
push
rcrl
ds
fwait
aad
shrl
or
cwtl
add
push
dec
adc
lret
leave
outsb
inc
inc
repz
ud2
mov
cmp
cmpsb
arpl
push
ficoml
shl
iret
push
mov
xchg
cltd
xchg
push
mov
push
mov
jl
push
imul
cli
inc
addr16
or
fldcw
jg
xor
js
mov
aaa
neg
insl
jno
insb
dec
movsb
int
cmp
int3
iret
ss
mov
in
dec
iret
ljmp
insl
add
stos
loop
arpl
popa
mov
js
adc
fldcw
mov
popf
aad
mov
divb
pop
jl
jg
cmp
sub
aas
adc
add
mov
in
mov
add
daa
pop
jecxz
push
inc
paddusw
mov
stc
inc
cwtl
mov
icebp
or
push
xor
dec
popa
insl
icebp
or
negb
push
mov
jp
sahf
adc
mov
stos
movsb
fdivrp
xchg
shll
mov
pusha
and
xor
add
enter
mov
push
sub
fldt
inc
cmp
les
vucomiss
sti
js
jg
out
jmp
and
in
push
xor
testb
xchg
scas
adc
repz
sbb
mov
xchg
int3
ret
xor
sahf
pop
xor
clc
inc
add
adc
fcmove
test
not
lret
inc
sub
lahf
adc
leave
cmp
xchg
fcom
rorl
push
jne
mov
lret
js
cmpsl
sbb
lret
mov
movsb
add
repnz
cld
mov
pusha
mov
por
subb
pushl
dec
push
dec
movl
push
jo
es
xlat
add
lods
shlb
arpl
test
sbb
jbe
mov
lret
fldenv
punpckhwd
add
mov
pop
mov
aam
xor
fists
jo
clc
ret
aam
insl
test
jnp
lret
cmp
out
cltd
insb
and
adc
pop
leave
jmp
mov
fwait
cmpsw
sub
cmp
dec
das
ds
dec
ss
lea
sti
fimull
fiadds
enter
insl
fsts
jne
cltd
xchg
adc
inc
adcb
rcl
lock
push
inc
push
pop
adc
mov
int
je
jnp
sub
xor
jb
push
lea
lret
fstps
iret
push
jns
push
jp
adc
mov
bound
mov
test
inc
mov
stc
imul
xchg
mov
adc
dec
fwait
and
dec
addr16
jp
jmp
fsubs
pop
fwait
mov
sbb
das
xchg
jmp
insb
lods
ja,pn
inc
insl
test
push
stos
inc
jecxz
jmp
mov
stos
lods
ss
sbb
daa
repz
movsb
inc
arpl
ss
xchg
inc
rep
push
shll
insl
pop
dec
test
sbb
imul
insb
leave
add
sub
cmpsb
ljmp
cli
xchg
xchg
adc
pop
lds
movsl
int
mov
adcl
xor
push
loopne
inc
sbbl
mov
and
in
or
sti
push
mov
fcmovnb
jle
push
sub
aam
sbb
pop
jmp
or
adc
aaa
jnp
ffree
pop
ret
cmp
or
pop
push
outsl
and
test
fimuls
jno
loopne
jo
aas
iret
mov
mov
ret
xor
cs
out
xchg
add
and
sub
mov
clc
shlb
push
test
stos
sub
loop
testb
enter
and
out
sbb
sbb
push
mov
sub
mov
add
aaa
shrl
xlat
fsubr
or
mull
nop
mov
jbe
call
or
jmp
sbb
xchg
jle
aad
pop
jno
dec
pop
push
mov
jne
mov
cmpsl
mov
push
fisttpl
pushf
lds
mov
lret
cmpsl
rcll
adcb
cmpsb
pop
mov
inc
adc
pop
in
fstpt
add
and
cs
adc
sub
outsb
pop
sbb
or
sbb
xor
aam
loope
or
out
loope
ret
rol
pop
sbb
fldl
lds
dec
xchg
clc
mov
jmp
jo
or
adc
mov
cmpb
pop
stos
xchg
leave
std
jg
cld
neg
jo
push
test
or
mov
popa
cmp
mov
and
test
sub
icebp
data16
std
cltd
sbb
rorl
lret
pop
clc
pop
push
add
ljmp
subb
ljmp
lret
in
sub
pop
scas
sub
xor
outsb
dec
or
arpl
rcl
movb
mov
mov
jle
ljmp
sahf
fmul
add
pop
xor
test
fldcw
cmpsb
repz
mov
push
call
mov
call
or
xchg
ret
pop
std
xor
pop
shll
mov
cmc
dec
push
pop
mov
aam
push
loopne
bound
xor
adc
orl
pop
dec
hlt
ds
pop
add
pop
cs
es
cmp
and
dec
push
adc
dec
jb
jno
dec
sti
sub
mov
movsb
sbb
mov
popf
cs
aas
or
test
clc
movsb
cmp
data16
inc
sbbl
cmp
jg
pop
mov
lret
filds
mov
jmp
cmc
sub
mov
sbb
inc
sarl
dec
pop
insb
cwtl
xchg
and
cmpsl
cmp
test
and
push
push
shrl
mov
icebp
or
stos
sbb
cmp
cmp
pusha
mov
sub
pop
sub
rclb
neg
icebp
mov
negl
in
inc
and
or
stos
repz
pushf
std
inc
xchg
stos
add
ffree
andb
fbld
cmc
xlat
mov
sbb
sbb
mov
and
bound
xchg
lcall
testb
xor
or
popa
jp
fistpl
jb
add
repz
cld
ret
push
in
mov
cmpsl
lods
pushf
imul
ds
xchg
test
das
inc
insb
rcrl
test
push
or
mov
push
sbb
lahf
aad
addr16
insb
xchg
pusha
arpl
es
js
ds
stos
loopne
jp
push
dec
xor
cmp
dec
cltd
mov
in
out
jge
pop
das
loopne
adc
adcl
push
in
jmp
cmpsb
xchg
lret
dec
mov
movsl
xchg
dec
mov
fnstcw
bound
pop
bound
push
mov
cmp
jle
or
xchg
push
les
pusha
add
shll
lcall
loop
mov
shlb
stos
lea
test
js
mov
mov
cmpsb
clc
mov
ret
push
repnz
jo
jl
repnz
repnz
movsb
push
out
stc
scas
cmpsb
mov
stc
int3
fcmovne
movsb
and
mov
xor
or
or
stc
movsb
sbb
cs
mov
stos
pushf
xchg
lock
lods
and
ja
push
push
mov
lret
xchg
movsl
xchg
cmp
xor
jo
ror
cmp
xchg
mov
add
mov
shll
inc
dec
out
adc
aad
adc
sbb
icebp
or
pop
bound
ljmp
xchg
jecxz
jbe
or
popf
out
and
pusha
sbb
mov
ja
mov
pop
xchg
es
addl
xchg
jl
test
in
xor
sahf
mov
ds
cld
out
leave
rolb
je
shlb
mov
fdivs
pop
ds
stos
and
in
sub
mov
and
iret
dec
cmp
enter
add
cmp
sub
add
punpckhdq
repz
dec
push
add
imull
and
sarb
imul
ja
xchg
imul
jle
mov
dec
mov
mov
and
and
push
sbb
inc
scas
push
push
mov
sbb
xchg
ljmp
sbb
loopne
movsl
mov
mull
andb
rcr
shl
pop
imul
cmpsb
sub
xchg
push
mov
dec
jecxz
mov
out
xchg
mov
inc
insl
sub
in
dec
sahf
xorb
push
movsb
mov
arpl
mov
repnz
clc
add
jl
lcall
incl
aam
aaa
sbb
popa
jbe
pop
divb
testl
mov
sarl
cmc
and
data16
mov
mov
xor
inc
sbb
testl
or
jg
fs
mov
pop
mov
je
jge
inc
add
xchg
xor
push
cmp
push
xor
and
ljmp
stc
push
movsl
popf
aam
sbb
push
mov
popf
cld
xchg
add
pop
mov
push
lahf
sbb
cld
ds
roll
dec
cld
inc
cmpsb
push
pop
xor
xor
cmc
pop
fs
dec
and
loop
pop
aas
fnstenv
adc
dec
nop
mov
es
pop
bound
data16
sbb
push
push
popa
pop
dec
sub
pop
cwtl
sbb
test
insl
sbb
addr16
ss
mov
lahf
mov
mov
out
cmc
adcl
jbe
sbb
sbb
adc
insb
push
fists
xor
cmp
insl
pop
cmp
add
out
test
fcmovb
mov
add
call
pop
or
orb
pop
sahf
loope
in
stc
lcall
pop
hlt
xor
and
jge
cmp
shl
xchg
pop
pop
dec
lret
mov
push
sub
adc
jne
add
ret
ja
out
or
xor
push
fsubl
shlb
adc
leave
in
cmpsl
xchg
dec
bound
xchg
xchg
aam
ficoml
sbb
and
sahf
adc
aas
outsb
shlb
stos
in
sub
pop
jb
and
stos
mov
add
mov
ds
sbb
rcrb
pop
popa
loope
loope
inc
and
xlat
cs
fyl2xp1
std
xchg
rcrb
pop
push
cmp
jae
aaa
and
out
aaa
arpl
imul
jp
sbb
loop
iret
pop
pushf
dec
ret
cs
mov
or
jge
jl
jl
icebp
jno
lcall
push
lea
add
in
cmp
inc
mov
cmc
aam
or
xchg
jge
xchg
sbbb
cmp
jae
in
cmpsl
ror
lods
gs
fmull
push
sbb
fimull
lret
jne
sbb
sti
pop
lds
faddl
and
stos
in
sub
mov
push
out
and
mov
mov
decb
hlt
sbbl
rorl
fwait
push
movsl
fwait
xchg
add
mov
cmp
arpl
mov
xor
cmp
jg
or
and
sub
das
push
pop
pop
ds
dec
fcmovne
and
rorb
adc
sub
mulb
xor
add
movsl
stc
jo
mov
sub
mov
inc
mov
mov
cmp
outsb
incb
inc
sub
imul
je
sarb
push
mov
or
aaa
sar
inc
cmp
sub
pop
int
mov
inc
lods
adc
sbb
and
pop
ret
push
pop
jle
dec
cmpsb
aas
xor
pop
add
mov
rcl
dec
pop
pop
mov
test
pop
shll
or
add
inc
push
es
mov
xor
or
pop
ljmp
sub
and
stos
push
iret
mov
filds
cmp
outsl
cmp
popa
xchg
mov
subb
inc
xchg
sbb
rcl
fs
sub
push
sub
xchg
cld
mov
pop
popf
push
fists
and
into
mov
pushl
mov
arpl
je
scas
adc
xorb
or
pop
call
push
inc
sub
pop
mov
mov
lea
inc
dec
mov
mov
daa
mov
mov
in
pop
imul
stos
add
sbb
jbe
out
dec
mov
cmp
sti
mov
dec
jle
and
addr16
iret
inc
sub
pop
jb
pop
das
mov
mov
shl
adc
or
push
pop
fimuls
das
aas
lcall
in
mov
test
shlb
lds
cmpsl
mov
into
mov
std
sbb
mov
addr16
jmp
arpl
or
ja
into
test
add
enter
rcrl
add
mov
iret
mov
adc
dec
xchg
or
out
int
dec
inc
xchg
push
inc
push
add
out
notl
dec
test
xor
jno
pop
sbb
shlb
sbbl
jp
sti
dec
xor
jno
sub
adc
mov
mov
jmp
add
shrb
outsl
test
mov
sub
decb
xor
test
xchg
cwtl
push
outsl
jnp
and
cltd
aam
xchg
mov
xlat
xchg
repz
push
push
sub
push
out
cmp
in
scas
cld
inc
sbb
push
dec
pop
push
lods
mov
push
movsb
and
loopne
sub
inc
nop
inc
cmp
bound
pop
or
lcall
ja
jl
test
popa
cmp
fisubl
pop
fwait
inc
push
add
push
int3
xchg
inc
fidivs
mov
pop
cmpsl
push
mov
lods
lahf
dec
pop
loope
fld
sub
xchg
outsl
xchg
mov
pusha
insl
insl
bound
xchg
imul
xchg
cltd
lods
fldenv
pop
jmp
ljmp
push
and
js
xor
sbb
mov
pop
jbe
adc
push
daa
inc
popa
xchg
pushf
jge
mov
js
cmp
cmp
xchg
repnz
inc
enter
mov
or
mov
shrl
or
mov
repnz
or
jae
scas
sbb
cld
shlb
sti
jmp
push
xchg
mov
outsb
inc
mov
jmp
std
sbb
es
dec
xchg
mov
xchg
movsb
cmp
cmpsl
cmpl
pop
cmp
repz
and
int
das
dec
and
icebp
es
dec
and
add
mov
cmp
lds
cmp
dec
pop
push
shrl
popa
jle
cld
out
and
or
mov
aas
pop
mov
andl
popf
add
push
loopne
mov
dec
mov
and
rdtsc
mov
xchg
cwtl
ret
jecxz
mov
inc
cmpsb
ss
shl
inc
insl
roll
jp
push
xor
jae
mov
ja
hlt
mov
out
mov
cmpsb
sub
aad
cli
pop
xor
cmp
jns
or
mov
mov
jmp
push
jecxz
addr16
push
ret
ret
push
sbb
in
mov
call
add
call
fstps
jle
push
dec
retw
pop
int3
or
dec
sti
cmp
out
jg
jp
ss
stos
mov
test
add
call
dec
and
inc
xchg
jns
fwait
das
xchg
daa
xor
movb
shrl
ljmp
mov
xor
adc
jo
pop
xlat
icebp
repnz
dec
jne
and
mov
mov
outsb
cld
cmp
or
adc
sbb
mov
jb
push
jmp
cmpl
sbbb
push
cmp
lahf
fdivl
xchg
clc
add
lret
clc
push
cmpsb
nop
dec
sub
adc
ret
sub
mov
rcrb
aaa
call
push
fs
sbb
loope
cli
enter
int
inc
scas
fs
cltd
add
push
lea
fisubs
cli
lods
dec
imul
popa
jecxz
xor
insl
push
push
mov
scas
and
mov
pop
les
mulb
adc
fistl
rcrb
jbe
jmp
dec
inc
inc
push
movd
mov
mov
jge
lds
lods
adc
pop
insl
call
sub
fnclex
push
xor
imul
push
push
inc
das
cmpsl
imul
dec
subb
adc
push
pop
imul
and
imul
adc
test
ficompl
in
icebp
insb
es
and
lcall
cld
xchg
push
loopne
fwait
call
mov
lods
mov
cwtl
cmp
shlb
push
push
ljmp
sahf
lods
fisubl
inc
push
mov
imul
mov
mov
jl
jb
cmp
popf
bnd
jne
sbb
sub
inc
mov
movsb
rcll
inc
shll
or
fs
daa
in
pop
add
mov
sub
sti
jae
adc
shr
addr16
lcall
addr16
cmp
push
aaa
push
mov
sub
es
pusha
fidivl
lods
pusha
lret
xor
mov
in
mov
push
or
cmp
iret
es
cvtps2pd
and
ja
jmp
aaa
ljmp
push
add
lea
sbb
lahf
sbb
cmp
sbb
mov
mov
push
sub
flds
jbe
das
repz
push
shl
fisttps
in
cmc
cmp
jmp
movsl
jbe
bound
mov
pop
lret
pop
push
decl
jmp
pop
pushf
push
sub
xchg
rcl
sbb
shr
mov
fnstcw
fidivrs
add
hlt
mov
xor
cmp
inc
test
ja
dec
fs
cmpb
test
dec
cmp
int
fistpll
lcall
js,pt
dec
xor
clc
jne
call
inc
add
inc
push
xchg
fiaddl
inc
sub
mov
cmp
cli
sub
in
mov
aam
inc
rcr
adc
daa
xor
scas
stc
sbb
test
notb
cmp
outsl
test
and
push
and
cld
mov
mov
lock
push
loopne
xchg
add
push
test
dec
je
push
mov
loop
mov
imul
cmpsl
xchg
jno
inc
xor
pop
stc
mov
inc
lods
xor
push
rcll
adc
jns
sub
jmp
int3
pop
push
clc
sbb
mov
dec
aas
loop
pop
clc
cmpsb
push
pop
lahf
sub
insl
mov
lods
push
jae
enter
push
addr16
mov
sub
sub
iret
xor
stos
rorl
sbb
addr16
sub
sbbl
or
xor
mov
cmc
daa
or
cmp
or
mov
and
jbe
push
insb
xchg
mov
ficoml
lret
mov
ret
fxch
movl
inc
mov
std
nop
test
add
xor
add
sub
stc
sbb
xor
jge
lea
dec
jno
fcoml
and
fldenv
cld
push
js
stc
jno
dec
inc
out
mov
mov
sbb
push
popa
dec
and
jns
movsb
pop
aaa
mov
fxch
fs
dec
pop
std
jne
xlat
add
or
mov
out
out
add
jns
clc
mov
lock
lea
and
push
stos
xlat
xchg
inc
mov
stos
std
push
jae
jl
fldcw
call
in
mov
xchg
sub
jns
lcall
dec
mov
sub
jne
jge
cli
jns
and
xor
fildl
cld
ret
xor
push
xor
mov
arpl
mov
push
xchg
sbb
push
cltd
xlat
fistpl
add
mov
sbbb
int3
xchg
ds
fistl
test
repz
popa
scas
push
mov
hlt
int
mul
jp
test
jae
push
dec
push
mov
mov
xor
mov
pop
mov
aam
cmp
imul
pop
cmp
adc
add
cld
outsb
fwait
ljmp
mov
iret
dec
xor
pop
leave
lods
cwtl
jle
push
sbbl
mov
outsl
xchg
shl
and
pushf
xchg
sub
mov
jecxz
in
aad
repnz
xor
adc
kandw
add
xlat
rol
fstpt
addr16
out
lcall
imul
mov
sub
mov
push
cmp
push
xlat
rol
jns
lahf
mov
xchg
movsl
add
ds
add
pop
out
or
imul
icebp
xchg
pop
adc
in
mov
je
cmpsl
in
nop
jecxz
jne
iret
cmp
mov
push
mov
aaa
xchg
adc
dec
ds
lret
dec
sti
ss
jl
jnp
daa
or
mov
es
mov
andb
out
and
jno
fldl
xchg
or
push
xor
xchg
mov
cltd
xchg
aam
cmp
stos
scas
push
jle
cmp
pop
lahf
jp
addr16
adc
pop
mov
in
cltd
call
loope
call
sahf
je
inc
js
push
xchg
adcb
xchg
les
and
cld
jno
inc
push
aam
sbb
dec
push
cli
fsubrl
aam
frstor
ss
loopne
mov
push
int
std
inc
insl
pop
stos
mov
xlat
loop
js
movb
cmc
cmp
mov
stos
stos
out
adc
and
test
enter
jge
pop
arpl
push
pop
cmp
cmp
sub
mov
iret
out
mov
mov
ds
dec
mov
xor
lock
repnz
adc
pop
cmpsb
sahf
test
jp
xchg
jno
xchg
jae
mov
mov
lret
aam
test
push
cli
jmp
pop
cmp
andb
jp
pop
and
cmp
pop
jne
or
push
cmp
dec
inc
iret
mov
in
push
push
mov
adc
cmp
js
inc
push
mov
cmp
push
dec
inc
pop
jge
push
inc
aaa
aaa
add
inc
xchg
sbb
clc
rcrl
xchg
mov
fisttpll
mov
nop
sti
xlat
test
cmc
dec
cmp
test
dec
daa
sub
adc
divb
mov
in
adc
xor
or
ljmp
mov
mov
jnp
xor
inc
aas
cmp
mov
mov
xchg
sbb
mov
sub
xchg
dec
mov
imul
lret
add
adc
sub
rolb
push
mov
nop
sub
je
out
out
push
cmp
cld
xor
sbb
out
scas
or
xchg
mov
dec
jns
data16
hlt
and
lea
sbb
mov
jno
mov
fst
ss
inc
xchg
int
or
jo
xor
pop
test
pop
xor
fiadds
adc
nop
mov
mov
jno
lea
cltd
adc
fistpl
xchg
movsb
lret
mov
lret
dec
mov
xlat
stos
mov
in
push
dec
testb
pop
call
shll
out
je
jmp
ljmp
xor
loop
mov
cmp
xor
inc
out
dec
xor
fstps
mov
mov
xchg
inc
andb
mov
fnstsw
dec
movsb
popf
mov
pop
xor
addr16
ja
leave
out
aam
xchg
sub
leave
xor
js
les
add
push
mov
adc
lds
fs
iret
mov
lcall
add
lcall
mov
inc
jp
mov
test
sub
adc
cmp
ljmp
push
jne
test
mov
xlat
out
cmp
int
flds
push
mov
jno
jb
jb
mov
xor
out
mov
mov
push
lret
enter
sbb
push
mov
jmp
sbb
ds
pop
lods
or
sbb
out
xorl
test
mov
pusha
in
push
adc
cltd
mov
test
daa
push
xchg
testl
popa
inc
andl
out
xor
lea
sub
gs
lods
jle
cmp
adc
sub
jb
add
dec
scas
push
into
mov
mov
pop
or
mov
imul
bound
ret
aam
fmuls
lods
adc
mov
push
inc
mov
enter
dec
lock
add
dec
insl
push
js
dec
sub
lcall
iret
lahf
mov
pop
cmp
aad
outsb
sub
lcall
xchg
in
in
mulb
sub
stos
mov
inc
adc
adc
pushf
inc
or
sahf
jns
push
push
pop
mov
cmp
clc
data16
imul
mov
jns
lret
and
pusha
shlb
add
mov
pop
inc
insb
ljmp
or
outsl
dec
push
enter
push
shrb
daa
adc
push
pop
enter
pop
xor
mov
lcall
jl
push
push
cs
pop
rcrl
push
aaa
jl
les
jmp
lcall
mov
sbbl
sub
xchg
sbb
mov
jne
in
mov
scas
hlt
dec
test
xchg
jmp
fldl
repz
xchg
adc
add
inc
out
icebp
lods
icebp
dec
rcrl
lods
xchg
xchg
jbe
or
mov
test
pop
in
fstp
inc
mov
cmp
fmull
push
push
jae
adc
dec
mov
imulb
inc
adc
cwtd
add
ja
test
addb
push
jo
mov
test
insl
pusha
xchg
jae
ss
jbe
aaa
ljmp
jmp
adcl
dec
aaa
int3
xor
inc
mov
iret
sub
aas
xchg
cli
lahf
in
inc
and
cmp
mov
mov
out
fldenv
shrl
mov
adc
fmul
pushf
jg
js
rcr
lock
or
inc
mov
sar
jp
sub
pop
sbb
loope
mov
push
xchg
push
and
je
xchg
mov
inc
mov
negl
dec
mov
out
roll
xchg
loopne
push
repnz
push
clc
push
pusha
or
fsts
inc
sub
insl
jecxz
xor
pusha
pusha
int
and
shll
aas
sbb
decl
xor
cmp
mov
inc
inc
jo
mov
push
fidivrs
lret
mov
leave
mov
pop
enter
dec
lret
xchg
push
jnp
or
cmp
push
add
jge
pushf
movsl
mov
mov
movsl
addr16
dec
arpl
ss
enter
jo
scas
int
xor
nop
test
data16
clc
inc
pop
xor
int
into
sbbb
bound
lahf
mov
mov
push
and
sbb
ret
mov
push
jne
inc
imul
mov
cmpsb
fildll
cmpsb
xor
in
int3
shlb
jl
fbstp
pop
jo
jmp
lods
jbe
shl
sub
addr16
dec
push
push
cmp
add
pop
jle
ds
imul
add
inc
cmp
mov
pop
push
mov
imulb
xor
in
add
cmp
repnz
outsl
mov
inc
int
enter
ret
rorl
ljmp
or
add
dec
pop
xlat
dec
outsb
sar
lret
fidivrs
mov
cmp
xor
or
in
cmp
out
xchg
out
out
dec
jp
int3
dec
inc
push
mov
and
xchg
repz
mov
test
int
push
lret
sub
nop
test
fistps
test
test
rorl
out
aam
in
inc
jg
jne
xchg
adc
adc
sti
lods
mov
mov
jne
aad
mov
shll
or
and
lods
mov
mov
jl
mov
negl
ljmp
rcr
dec
push
ret
cli
aad
and
mov
ja
pop
mov
jge
cs
rolb
jbe
std
addr16
lock
mov
lahf
mov
mov
sbb
imull
pop
xor
inc
cmp
mov
lea
test
in
shlb
dec
pop
scas
push
je
int3
cmc
cmpsb
mov
imul
mov
mov
jmp
fisubl
shl
outsl
stos
je
add
cmp
mov
or
mov
jl
or
scas
js
push
inc
scas
stc
cmpsb
sarb
jne
loop
sbb
in
test
pop
inc
out
out
and
push
iret
push
mov
icebp
sbb
mull
pop
call
subl
pop
sbb
std
sahf
jl
insb
push
mov
or
fisubrl
inc
mov
xchg
dec
scas
inc
xchg
out
xchg
push
adc
add
cmp
pushf
pop
cmp
jmp
shlb
mov
push
stc
decl
ret
pop
ret
jae
add
mov
inc
cmpsb
jp
xchg
ret
std
push
xchg
sub
int3
fmul
sbb
adc
in
pushf
cs
shrl
insl
cs
mov
push
sahf
xor
mov
mov
adc
mov
leave
mov
pop
lcall
pop
xlat
jmp
daa
fisttpl
and
scas
aad
arpl
mov
fmuls
mov
js
pop
mov
mov
mov
cmp
inc
pop
sub
mov
mov
jmp
push
push
jns
das
dec
cmc
xchg
push
mov
adc
imul
inc
push
out
pop
mov
cmpsl
lret
jbe
mov
cltd
ja
int
and
stc
in
xor
imul
cli
shll
jo
outsb
aam
mov
lods
mov
mov
lcall
mov
bnd
jp
loopne
adc
test
and
sub
lods
mov
inc
adc
cmp
push
xchg
xor
js
fdiv
mov
mov
cmpsb
sub
cmp
jb
cmp
daa
sti
subl
cmc
out
mov
negb
sbb
add
xchg
mov
rorl
cmp
xchg
add
rorb
lret
stc
adc
jmp
cmp
out
imul
xchg
and
xor
xchg
mov
int
into
jmp
mov
hlt
rsqrtps
daa
aaa
fsubrs
jbe
fistl
shll
shlb
sub
cmpsb
sarb
xlat
pop
stos
icebp
xchg
insb
pop
iret
scas
test
lods
jle
mov
pop
fcomip
xchg
push
hlt
sub
pop
pop
imul
cmp
push
test
mov
xor
lods
shlb
ss
nop
fwait
rorb
pop
or
add
shll
push
leave
popf
adc
popa
cmp
push
jmp
fisubrs
mov
jge
pop
sub
ficomps
ret
pop
mov
inc
mov
xchg
das
cmpsb
pusha
pop
test
dec
pop
test
fldcw
int
push
repnz
ja
mov
mov
pop
cmpsl
cmp
pop
jnp
fistpl
gs
fstl
out
addr16
sub
pop
ss
loope
pushl
sbb
pop
mov
lahf
scas
push
idivb
pop
jbe
flds
arpl
out
or
loop
in
sbb
mov
push
lcall
adc
mov
pop
fsts
xor
jp
insl
cli
cmp
pushf
cmp
and
cmp
and
and
xor
cmp
out
aaa
movsb
push
push
adc
adc
loope
dec
fiadds
mov
loope
mov
sub
dec
mov
ljmp
cmc
ja
xor
hlt
fnstcw
loop
add
push
into
movsb
push
std
fistpl
cmpsl
jle
sub
or
shrb
in
fbstp
pop
inc
cli
push
js
mov
imul
fs
scas
mov
out
mov
dec
push
iretw
dec
add
lds
dec
xchg
push
in
push
fiadds
adc
cmc
rcr
xor
xchg
xchg
imul
add
fwait
enter
out
pusha
mov
aad
dec
cmp
xor
lods
sahf
leave
and
ret
or
enter
dec
inc
sbb
std
jo
repnz
das
lods
fisubrs
nop
cltd
jecxz
mov
lcall
push
gs
jmp
and
mov
sbb
inc
ret
testl
insl
lock
xchg
sbb
sbb
test
std
push
cwtl
xchg
gs
std
shlb
sub
sbb
cmp
movsb
inc
jecxz
nop
jo
movsl
cmpsl
sub
insb
sbb
mov
mov
push
into
in
cli
inc
lock
jae
add
mov
hlt
xor
add
out
cmp
adc
daa
and
jne
push
imul
ds
pop
lods
adc
insl
clc
sub
cmc
std
jns
mov
pusha
pop
andl
icebp
repz
push
pop
fwait
imul
pushf
cltd
or
les
in
inc
jns
test
xchg
fld
jne
std
cbtw
shrb
cs
and
jle
mov
jne
addr16
das
mov
sub
sahf
jmp
movsb
xor
mov
movsl
push
pop
pop
sarl
repz
insl
adc
add
lods
pop
inc
mov
bound
movsb
inc
push
clc
pop
testl
repz
mov
mov
popa
lods
xchg
dec
mov
jb
or
pop
test
ja
in
sbb
push
icebp
fisubl
mov
lods
jmp
mov
sbb
lahf
xchg
loopne
incb
xor
mov
jae,pn
inc
inc
inc
decb
push
lcall
pop
add
imul
push
test
aad
cld
inc
inc
ljmp
mov
imulb
mov
inc
ret
xchg
nop
iret
jae
pop
inc
pop
xchg
mov
in
fisubl
push
inc
and
outsb
cmp
xchg
addr16
popf
mov
roll
cmp
sarl
push
jge
mov
cmpsb
jo
lods
test
cmp
cmc
outsb
and
fsubrp
push
dec
cmp
jbe
push
adc
leave
test
mov
aaa
push
add
aad
cmp
and
in
mov
pop
mov
xchg
inc
sub
push
rcr
rcr
insl
repnz
movsl
bound
in
inc
ss
push
cmp
icebp
out
pop
sbb
push
cmp
inc
xlat
cli
mov
pusha
xor
rol
pop
aas
mov
cld
dec
notl
pop
pop
xlat
ja
add
inc
jl
notb
es
in
push
push
imul
insl
enter
mov
mov
out
cld
insl
stos
inc
cmpsl
xchg
in
adc
stos
out
clc
leave
mov
cmp
in
cltd
cmp
xor
leave
inc
cltd
or
pushf
mov
pop
or
ja
aaa
stos
lds
or
sbb
aam
shll
mov
lret
sbb
xor
dec
stos
cmpsb
fldcw
movsw
popa
mov
subl
shlb
jno
addr16
dec
pop
rclb
iret
jg
shrl
imul
and
out
insl
stos
cmp
lock
mov
mov
or
aas
pusha
push
das
or
aad
cmp
cli
lods
bound
sub
and
stos
popf
cwtl
jne
loop
scas
loope
loopne
enter
push
pop
out
sbb
add
jg
jmp
adc
inc
xor
in
pusha
push
mov
inc
hlt
in
pop
or
sub
and
fistpl
dec
pop
jb
shrb
push
rol
test
mov
mov
xor
jbe
les
mov
xor
xchg
xor
lds
jle
out
jb
sub
stos
js
cs
sub
in
mov
inc
mov
incl
xor
inc
inc
mov
pop
add
add
xchg
inc
fwait
sub
sti
gs
dec
cmpsb
jno
ss
add
cmpsb
mov
orb
pusha
dec
inc
push
fisubrl
insl
dec
out
sbb
sbb
add
iret
in
loope
jbe
test
in
outsl
xor
test
sbb
les
xor
xchg
loope
jne
scas
out
pop
sbb
cli
mov
mov
sti
jb
int3
mov
xor
and
mov
jmp
pop
icebp
andl
xchg
pop
js
call
std
pop
int3
xchg
rol
sti
mov
and
push
mov
push
rol
pushf
sub
das
fcomi
mov
inc
popf
in
cli
mov
xchg
pop
push
daa
test
xchg
sub
xchg
cmpsl
repz
sbb
jg
lret
and
sahf
dec
mov
lods
insl
mov
movsl
sbb
pfnacc
movsb
fisubrl
aad
sbb
mov
cmpsl
xchg
outsl
insb
and
xor
cmp
sub
lods
testl
add
test
out
int3
ds
sub
and
shr
dec
mov
fs
xchg
sub
mov
cs
je
pop
insl
jbe
fs
js
sbb
xor
xor
push
xor
jge
adc
imul
std
mov
inc
cmp
adc
pop
addr16
mov
int3
xor
xor
pop
mov
and
pop
jp
jnp
jb
daa
ret
stos
or
add
imul
add
mov
mov
mov
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
jmp
push
ja
cmp
add
adc
xchg
push
mov
xor
mov
popa
bound
pop
bound
es
mov
pop
es
ss
sbb
lret
scas
mov
sbb
jnp
dec
gs
mov
sub
insl
or
mov
jg
cmpsl
loope
sbb
pop
push
and
lret
xchg
xor
cmpb
mov
fdecstp
jge
cwtl
adc
jb
pop
cmp
out
pop
mov
sub
xor
das
xor
outsl
add
jl
repnz
push
in
out
sahf
addr16
testl
shl
jno
mov
fs
mov
cmc
movsl
pusha
popa
xchg
pop
cmp
ljmp
push
clc
push
pop
fcmovnb
jg
leave
scas
pop
or
xchg
mull
xchg
aam
data16
mov
in
xchg
icebp
sbbl
dec
movb
jle
fmul
sarl
cmp
xor
lods
shll
cmp
sarb
sbb
sar
lods
fists
js
test
push
and
pop
and
xchg
test
add
push
xchg
push
inc
pop
add
adc
inc
push
inc
loop
loop
movsb
lret
cmp
loopne
add
cli
mov
inc
in
mov
sub
inc
mov
sbb
test
insb
xor
xor
mov
bound
ret
mov
aaa
jle
dec
sub
jae
aaa
imul
sbb
bound
aad
push
imul
jg
pop
add
rol
jae
pusha
sarl
cmp
add
push
popf
inc
data16
xchg
out
fldl
aam
mov
mov
aas
jp
pop
pushf
sbb
mov
aam
inc
jg
push
sub
dec
ret
lea
dec
adc
in
mov
loop
lcall
nop
add
mov
xchg
xchg
in
arpl
xchg
push
dec
jecxz
xor
insl
or
int3
mov
push
cmp
jecxz
rclb
and
shrl
call
mov
mov
dec
push
pop
int
mov
psrlw
push
push
outsb
xor
sbb
mov
dec
enter
stos
fmull
add
daa
mov
fstpt
inc
imul
cmp
push
xor
mov
pop
jmp
dec
sub
mov
mov
out
push
pop
fdivrp
sar
xchg
daa
arpl
pop
add
test
lea
inc
cmpsl
imul
addr16
push
xchg
xor
shr
stc
andl
push
cmpl
lea
mov
shrb
cs
push
es
cmpsl
test
xchg
and
xchg
add
pop
adc
jb
fldl
out
sub
les
push
mov
xlat
les
shrl
mov
lret
dec
xlat
clc
lds
mov
and
sbb
shll
daa
cld
sub
add
aam
mov
bswap
insl
mov
push
xchg
pop
cltd
mov
pop
inc
mov
out
jnp
sbb
sti
imull
sub
push
push
ret
adc
sub
mov
iret
dec
mov
cmp
or
jle
mov
inc
mov
stos
mull
stc
int
sub
rorb
pop
add
imul
mov
xor
insb
mov
pop
fcmovne
inc
test
push
repz
insl
pushl
push
sbb
mov
fildl
sbb
test
add
and
jns
mov
daa
sbb
pop
mov
xor
cmpsb
jg
adc
add
jno
dec
lahf
enter
int3
add
or
push
push
adcb
mov
pop
pop
aad
ret
sbb
mov
popa
add
insl
dec
cmp
xor
dec
rcl
ds
popf
mov
mov
xchg
les
jle
decb
push
inc
jbe
mov
sbb
lods
jns
hlt
dec
int3
ds
lock
xor
loop
mov
push
or
mov
jbe
sti
mov
mov
mov
pop
inc
jmp
sbb
in
or
mov
jb
adc
push
push
mov
hlt
cwtl
mov
push
mov
add
dec
fsts
fdivrp
inc
ljmp
and
adc
xchg
fidivrs
push
popa
or
jns
jl
and
out
aas
fcomip
pusha
stc
xchg
jns
fstp
inc
lahf
sub
jns
mov
movsb
imul
jmp
std
cmpsb
xor
nop
mov
test
push
xchg
push
test
fists
xlat
mov
inc
mov
fmull
pop
orb
push
inc
idiv
xchg
jg
mov
mov
aam
lret
ftst
lods
unpckhps
xor
popa
sbb
pushf
sbb
jmp
imul
decb
jle
mov
std
xchg
mov
sbb
push
sub
cli
and
add
call
jp
out
cmp
leave
pop
popf
cmp
xchg
shl
inc
fsub
ret
fsubrs
mov
sbb
jnp
mov
stos
es
xchg
bnd
mov
cmp
outsb
out
pop
mov
lock
stos
jbe
int
int
cltd
push
xchg
pop
mov
add
dec
andl
inc
arpl
scas
mov
push
test
mov
enter
inc
insl
mov
add
aad
fs
sbb
das
mov
fwait
in
jb
dec
push
cmp
jmp
cmpsb
sti
or
jb
mov
lahf
loope
and
push
jne
pop
mov
cmp
xor
sahf
imul
cmpsl
cmp
mov
popf
pop
pushf
sbb
inc
lods
addl
mov
movsb
lret
dec
enter
cmp
jmp
jmp
dec
mov
xchg
je
xchg
mov
mov
popa
and
sbb
dec
data16
orl
outsb
fs
sub
iret
cmp
inc
aam
es
repz
lret
adc
enter
popf
cmc
mov
aas
sub
repz
ret
ds
mov
das
mov
sbb
bound
inc
rcrb
push
mov
sahf
jno
dec
mov
pop
ficoml
pop
dec
and
cld
sub
in
xchg
dec
sti
mov
inc
stos
in
test
pop
cmp
cmp
in
int3
jnp
push
or
pusha
pop
push
daa
sub
daa
push
insl
mov
rol
adc
cmp
inc
pop
ja
jns
lea
cmp
mov
ss
pop
push
lahf
jne
push
xor
xchg
lods
mov
push
loope
lods
in
pop
inc
mov
jecxz
aas
fdivrl
in
xchg
push
fwait
mov
repnz
les
pop
out
test
out
movsb
cmp
pop
mov
cmp
fwait
xlat
jb
repz
call
mov
fistps
sarb
divl
stc
and
sbb
ljmp
rorl
fstps
loop
dec
ret
into
js
mov
inc
imul
mov
inc
rol
dec
adc
dec
lods
arpl
inc
js
sbb
andb
mov
cmp
imul
mov
popa
xchg
push
pop
add
fs
enter
iret
mov
jb
xchg
or
jnp
data16
mov
add
inc
xchg
daa
lahf
cli
and
ret
loop
ljmp
and
cwtl
pop
jb
aas
inc
push
inc
mov
cmp
iret
pop
mov
or
and
leave
sahf
lds
les
leave
rol
jp
pop
lods
movsl
inc
rcr
subl
jecxz
lret
pop
scas
adc
xor
xor
ss
cmp
hlt
sub
push
push
fisubrl
mov
xor
enter
add
ljmp
or
dec
dec
movsl
pmulhuw
es
jbe
adc
pusha
les
adc
lret
iret
shrb
iret
ljmp
popa
gs
dec
sarb
add
clc
aam
sub
test
mov
mov
cmp
popf
cmp
movsb
jo
mov
inc
js
inc
aad
in
adc
shl
mov
xchg
nop
aad
bnd
out
pop
in
stos
in
pushw
fcmovu
popf
lret
and
add
test
out
adc
inc
iret
inc
mov
std
stos
dec
xchg
test
add
insl
inc
shll
ficompl
mov
lcall
mov
pushf
push
cmp
sar
incl
and
clc
fdivr
ss
lss
out
repnz
and
int3
test
push
cmp
push
rorl
scas
fdivrl
test
imul
and
mov
adcl
pop
mov
push
dec
dec
pushf
loopne
mov
or
and
dec
mov
rolb
dec
fstpt
enter
hlt
jae
hlt
sub
stos
mov
inc
mov
adc
mov
inc
je
cmp
popf
add
pop
insb
movsb
repnz
in
inc
fidivrs
push
lret
push
outsb
xor
xor
ja
loop
hlt
es
cmp
pop
out
decb
test
push
lds
call
lea
js
push
pop
dec
jg
xchg
cmpsl
pop
inc
jae
stos
jnp
je
xor
enter
sti
push
xchg
iret
int3
pop
sbbb
fdecstp
add
cmp
cwtl
out
fucomp
mov
das
adc
add
clc
sahf
imul
imul
testb
sbb
mov
mov
push
stos
dec
dec
push
shll
aaa
inc
or
pop
bndcu
iret
push
cmp
rorb
xor
fcmove
shlb
cmpsl
cli
push
xchg
outsb
out
test
ret
dec
sbb
repnz
dec
sbb
stc
pop
leave
inc
and
ljmp
cmpsb
sarl
cwtl
test
aaa
shll
jnp
leave
mov
cltd
je
jecxz
xchg
rclb
sbb
cmp
sbb
pushf
test
cwtl
push
sub
pop
pop
xchg
daa
cmpsl
xor
jno
cmp
inc
inc
jnp
mov
push
jo
dec
add
jmp
mov
inc
addb
mov
sbb
add
testb
xor
dec
pop
xor
and
mov
mov
mov
inc
xor
mov
lret
into
movsb
sbb
ja
aas
pop
mov
jb
call
mov
hlt
cmp
cmp
pop
fisubl
mov
shr
sar
xor
mov
adc
into
ljmp
or
mov
bound
mov
mov
movsb
jmp
push
and
es
or
push
mov
sbb
mov
out
popa
and
jle
and
and
xchg
leave
repz
rorb
sbbb
outsl
int3
out
sti
lcall
push
mov
add
cmpsl
inc
bound
sub
add
ja
jno
movsl
inc
mov
mov
xor
xchg
sub
repz
out
ss
or
cltd
movsb
outsl
and
push
movsb
push
nop
cltd
xchg
sbb
xchg
pop
test
popf
pop
push
ret
subl
pop
push
push
xor
dec
mov
insl
adc
in
adc
repz
inc
push
inc
cmp
loopne
adc
sub
pop
dec
loope
cmpsl
mov
clc
xchg
popf
sbb
cs
mov
cmpsl
xchg
bnd
sbbb
push
scas
aam
in
or
pop
jg
cwtl
jbe
and
mov
add
std
pop
push
std
mov
pop
fistpl
mov
sub
mov
push
adc
lds
rolb
popf
mov
stos
divb
pop
sahf
mov
xor
into
jns
mov
imul
ljmp
and
lds
dec
stc
lods
in
jns
cmp
cld
scas
testb
das
js
mov
popf
cmp
ljmp
jnp
mov
lock
mov
mov
mov
pop
lock
ret
fcoml
das
cmp
mov
jge
clc
mov
in
movsl
int3
cwtl
pop
xor
push
scas
std
cmp
fiadds
jo
inc
xor
stos
cmpsl
imul
std
stos
mov
and
sbb
stos
jecxz
iret
xor
xchg
xor
inc
fsub
sar
arpl
aad
sarb
dec
and
jo
push
bound
mov
inc
lock
ret
incl
dec
push
dec
js
xchg
lea
or
pushf
xchg
fldenv
in
push
sbb
scas
mov
out
hlt
call
xchg
jbe
loope
mov
lret
ja
mov
sub
pop
jmp
push
das
arpl
jecxz
jl
scas
or
test
cltd
sahf
xor
push
jne
loope,pt
fs
mov
std
int
enter
or
cmp
jns,pt
push
cmpsb
jle
mov
inc
push
pop
inc
call
xor
fwait
dec
sbb
in
nop
ss
das
arpl
mov
xchg
cmp
xchg
test
imul
pop
cld
inc
sbb
inc
addb
dec
fcompl
fs
stos
rcrl
adc
mov
jnp
dec
cmp
xor
pop
xor
jnp
jg
outsl
jl
mov
or
mov
mov
jmp
daa
sbb
sbb
jae
xor
ljmp
stc
xchg
mov
push
lock
mov
mov
cmp
jg
cmp
mov
mov
addr16
adc
paddb
je
jp
lahf
sbb
push
pop
jbe
mov
mov
sbb
jecxz
mov
push
daa
jmp
arpl
hlt
adcl
cmp
pushf
cld
xchg
cld
std
xlat
outsb
dec
roll
jbe
hlt
lahf
mov
mov
fsubs
ds
mov
mov
out
fcoms
add
pop
sub
sbb
inc
aam
or
insb
push
popa
push
jo
les
js
mov
adc
ss
xchg
dec
xchg
mov
sub
pop
or
test
fstpt
icebp
sub
or
mov
or
movsb
inc
sub
test
rolb
aam
jmp
aaa
leave
movsl
jae
sbb
cltd
add
xor
mov
cmp
pop
jns
aad
jo
sarl
and
stc
pusha
repz
mov
xchg
dec
sub
shr
jp
mov
inc
idivl
scas
inc
push
leave
pop
adc
inc
lcall
sahf
repz
in
xor
cmp
stos
adc
les
xor
jbe
and
aas
jl
push
repz
sti
faddl
lds
mov
stos
inc
lcall
call
fwait
sbb
jne
xchg
jmp
sahf
adcl
dec
push
pop
and
mov
fwait
sub
pushf
push
gs
imul
or
cmp
dec
ljmp
cmpsb
cli
xchg
std
stos
or
adc
push
push
jle
inc
inc
inc
cmp
xchg
jo
push
xorb
lahf
repz
repz
pop
bound
out
xchg
frstor
dec
mov
adc
push
test
and
insl
mov
mov
incl
add
add
xchg
jb
addr16
xchg
into
push
scas
dec
add
pop
outsb
cwtl
sub
xchg
loop
scas
ret
and
jg
out
lret
dec
das
jns,pt
test
loop
pop
scas
cs
icebp
adc
cmc
jg
das
add
shlb
sbb
ret
and
fs
cmpsl
cmp
push
ret
testb
sub
fcmovb
out
lods
arpl
inc
popf
nop
mov
imul
stos
das
inc
mov
ret
push
sbb
and
fwait
sub
xchg
mov
stc
pop
ffree
int
xchg
xor
leave
dec
jmp
push
daa
mov
jmp
xor
or
test
or
mov
cmp
pop
and
fldenv
jns
jb
ds
or
ss
and
xchg
insl
adc
inc
cmp
lcall
inc
pop
insb
pop
dec
xor
cmp
sbb
jbe
dec
ja
scas
xchg
je
and
cli
inc
mov
pop
xchg
shll
pop
mov
addr16
lds
mov
xor
xchg
in
sti
sub
add
pop
icebp
fisttpll
stos
sbb
ja
xchg
std
inc
out
or
aaa
ljmp
js
popa
jo
push
loop
mov
mov
movsb
pusha
fnstsw
mov
or
pushf
sarl
add
pop
cmp
mov
mov
imul
and
outsl
jp
adc
push
lret
push
fidivl
cmp
pop
fists
mov
outsl
movsb
idivl
pop
adc
push
iret
loopne
test
loope
xchg
ret
push
fmull
mov
cmp
push
stos
mov
in
lahf
sbb
xor
xor
stos
xchg
ror
jbe
push
jmp
jge
loop
jmp
les
adc
inc
in
adc
cwtl
imul
cwtl
aaa
pop
xchg
mov
xlat
test
call
out
cmp
xor
xchg
rorl
dec
inc
add
mov
and
xchg
ds
or
loopne
and
ss
mov
inc
or
pop
lods
jmp
ret
or
fsub
mov
push
out
mov
and
cmpsl
arpl
je
cli
ret
cmpsl
xchg
les
gs
cmpsb
out
clc
std
lea
loop
and
pop
aam
or
iret
dec
and
fsubr
jge
icebp
loop
movl
pusha
xor
mov
and
inc
aam
sub
push
fdivl
dec
dec
fdiv
jmp
mov
pop
cs
stc
lods
pop
jae
mov
sarb
in
mov
mov
push
daa
and
mov
cmp
in
popa
mov
cmp
inc
pop
mov
mov
dec
dec
mov
dec
sbb
int3
inc
cmpsb
mov
xchg
or
loop
jecxz
out
mov
and
fcomps
lock
hlt
leave
int3
out
mov
aam
or
sub
movsl
sub
xor
cs
mov
test
imul
mov
popf
in
sbb
sub
shr
nop
test
mov
in
fsubrs
mov
ja
lahf
sub
lret
in
out
cmpsl
jbe
shr
repnz
mov
sti
inc
into
fcompl
xor
fimuls
clc
sti
push
cltd
das
cmpsb
dec
push
adc
jns
jbe
xor
mov
clc
or
nop
pop
ds
in
mov
pushf
loopne
mov
mov
ljmp
xchg
jnp
adc
ds
decl
sub
adc
outsb
aad
sbb
xor
pop
iret
dec
lods
jecxz
ljmp
stos
dec
cli
dec
cltd
or
sub
aas
test
loop
adc
xlat
arpl
mull
ds
fldcw
sbb
adc
dec
fwait
push
or
sbb
mov
rol
xor
ret
movsb
mov
cli
jae
mov
or
push
lret
xchg
pop
and
xchg
ret
sar
inc
jmp
lcall
inc
xchg
inc
mov
inc
xchg
pop
and
rcrb
xchg
pop
in
fimuls
repz
cmpsl
mov
inc
and
into
add
add
dec
pop
movsb
pop
pusha
push
push
mov
mov
jg
iret
jmp
arpl
pop
xchg
in
lret
pop
pop
icebp
ss
sub
xchg
pop
cmc
sbb
dec
pop
clc
jp
and
int3
popa
int3
add
add
xchg
or
fs
sarb
jb
lods
inc
pop
stc
fistps
mov
fcomip
sti
imul
ret
lahf
lret
inc
adc
push
cmpsl
add
jl
push
mov
lret
xlat
in
push
std
mov
enter
xchg
push
mov
mov
call
dec
pop
and
nop
lret
jo
push
xor
or
addr16
or
dec
aad
cld
jb
das
ret
sbb
test
jae
pusha
xchg
in
lcall
cmp
xchg
scas
or
dec
dec
ss
add
dec
movsb
pop
jbe
push
adcl
inc
fldl
push
lods
lret
ljmp
shrl
shrb
sub
mov
lock
jns
nop
pop
push
push
fiadds
push
or
lret
stos
mov
lret
jnp
push
cmc
lock
mov
ret
lret
or
or
js
xor
jg
stc
shrb
sbb
xchg
mov
mov
daa
ficoml
sbb
mov
cmp
popf
xchg
cwtl
jb
jbe
mov
mov
je
fstpt
mov
push
mov
test
shr
jmp
xor
xchg
and
fsubs
cld
divb
fisttpll
lds
push
mov
jp
inc
adcb
insb
das
mov
xlat
mov
xchg
sub
push
imul
adc
repz
adc
or
pop
cld
loop
pop
enter
inc
pusha
mov
and
leave
cmc
ds
mov
js
jns
pop
fstl
fbld
ljmp
mov
mov
jecxz
push
mov
daa
dec
jge
sbbl
push
inc
push
outsb
xchg
mov
outsl
pop
lret
orl
jle
or
pop
sub
cmp
mov
icebp
inc
les
push
lods
aam
xor
pop
xchg
cs
popa
mov
orb
cltd
fnstcw
test
push
xchg
std
or
sbb
pop
movsb
jg
mov
adc
in
cmpsb
out
fsubl
mov
pop
pop
pushf
fidivrl
push
push
int3
xlat
jbe
popa
sbbb
jecxz
mov
popf
push
xchg
cmp
mov
mov
push
test
std
and
in
cmc
sub
mov
mov
and
fldt
popf
push
insl
icebp
in
fadd
subl
push
jmp
call
jo
aam
pop
adc
push
add
fneni(8087
movsw
sub
lret
mov
daa
sub
add
int3
js
mov
dec
jnp
pop
jae
inc
jmp
enter
add
add
push
lret
mov
push
into
or
je
cmpsl
lods
pop
out
stc
or
dec
mov
adcb
sub
jae
lcall
mov
lret
cwtl
xchg
mov
jne
inc
jb
mov
mov
fisttpl
testl
int3
lds
cmp
ret
dec
xor
and
jnp
pop
inc
fwait
and
adc
pop
inc
push
mov
aad
hlt
fisttpl
ja
dec
mov
dec
and
loopne
lret
jnp
mov
mov
lcall
adc
cs
daa
mov
in
fwait
dec
cwtl
cmp
dec
jb
pusha
cmp
add
sub
xorb
scas
inc
int
in
mov
jb
leave
mov
into
lea
add
aam
scas
mov
rcll
or
jecxz
movsl
repnz
add
mov
out
mov
imul
lds
jns
mov
cmp
mov
test
adc
fcmovb
xchg
mov
adc
lea
push
iret
lret
decl
mov
out
jg
mov
cmp
mov
jnp
jae
push
inc
mov
xor
inc
insl
pop
mov
shl
push
cmp
jb
loope
dec
dec
popa
inc
mov
dec
in
shlb
sbb
fucomi
fisubs
int
add
ret
pop
scas
shrb
xchg
cli
jns
adc
bound
dec
in
cmp
adc
in
cmc
outsb
movsb
jae
andl
jns
or
pop
fdivs
test
inc
add
std
das
sbb
fstps
and
xchg
inc
inc
inc
mov
jnp
sub
push
cmovnp
adc
jne
into
ja
in
dec
sbb
pop
cltd
mov
push
pop
dec
xor
jae
and
pop
insl
dec
daa
int3
dec
pop
dec
push
mov
mov
je
mov
push
mov
add
adc
sbb
xchg
or
sub
dec
adc
xor
mov
loope
mov
mov
xchg
ret
xor
stc
jge
xor
ss
daa
pop
int
in
lds
mov
pop
orb
mov
mov
mov
dec
xchg
div
adc
sbb
ffreep
mov
div
ret
mov
enter
pop
push
adc
inc
addl
data16
scas
sahf
icebp
mov
xor
aaa
fildll
cmp
jne
rorl
xor
mov
and
dec
xchg
insl
push
nop
adc
lods
mov
inc
and
sub
mov
sti
sub
xchg
xlat
ss
fmuls
or
loop
cld
movsb
add
mull
mov
xchg
outsb
xchg
dec
pop
out
jp
int
gs
mov
adc
adc
push
loope
ret
sbb
lds
fcoms
push
cmp
adc
addr16
ror
mov
sbb
inc
addr16
pop
push
dec
push
xchg
fs
cmp
dec
mov
sbb
sub
inc
jmp
jg
lret
repz
stc
shr
jno
cmpb
ret
adc
mov
sub
xor
lcall
out
fldenv
rol
sbbl
in
adc
and
outsl
int
das
decl
out
loopne
sub
pop
cmp
add
imul
lea
mov
out
scas
leave
mov
add
icebp
outsl
add
in
retw
ret
sub
push
and
mov
or
cs
dec
in
fimull
push
push
xor
add
jmp
xchg
cmp
fs
dec
pop
jne
push
mov
mov
push
lds
cmp
or
test
adc
hlt
or
adc
nop
shlb
lock
sbb
and
flds
sub
loopne
pop
mov
cmpsl
sub
arpl
daa
inc
pop
jmp
aaa
in
es
inc
inc
adc
fsubrs
mov
daa
jb
ror
xchg
mov
ss
cwtl
cmp
xor
sub
mov
dec
loopne
hlt
mov
test
push
cli
cmp
int3
dec
imul
cmc
mov
cmp
mov
shll
je
cld
adc
dec
aad
into
mov
push
test
and
xor
sbb
jb
dec
adc
pusha
cmpsb
sub
bound
mov
sub
inc
aad
ret
inc
and
mov
push
ret
pusha
cmp
jp
call
pop
mov
test
lods
mov
pop
stos
push
jae
ret
adc
xchg
sbb
dec
push
cltd
inc
adc
inc
pop
mov
and
jecxz
aad
cwtl
sbb
arpl
jl
sub
in
mov
mov
pop
sbb
stc
cmpsb
out
add
add
dec
outsb
sub
out
popf
insl
out
leave
test
popa
xchg
xchg
cmp
xchg
in
push
imul
push
fwait
jnp
aad
decl
and
fnstsw
cld
adc
lods
clc
mov
add
mov
fsubrp
xchg
stc
and
add
pop
pop
push
aad
mov
dec
xchg
inc
xlat
push
or
sbb
test
loop
stos
add
shl
outsb
pop
and
inc
xchg
stos
ljmp
add
mov
push
std
jl
mov
adc
adcb
movsl
inc
push
add
sbb
push
testl
jmp
push
and
aam
dec
xchg
popf
jae
xor
xchg
or
ret
cld
cli
mov
mov
cwtl
inc
xlat
inc
cmpsl
lret
xor
scas
loope
mov
loopne
xor
rcll
ficoml
subb
ds
dec
or
jne
mov
sahf
mov
out
pop
mov
mov
jo
popf
scas
mov
insl
lods
mov
jmp
push
loop
pushf
imull
mov
fsubr
pop
inc
or
sub
xchg
mov
xor
push
and
sub
pop
lods
mov
dec
xchg
je
sbb
pop
dec
mov
pop
add
inc
aas
fwait
xor
test
stc
sbb
in
xor
stos
jb
mov
loop
push
stos
leave
mov
lds
fistps
or
pop
lock
dec
pop
aad
mov
pop
popa
cmp
imul
jns
mov
jecxz
into
push
mov
add
cmp
data16
sbb
sti
nop
orl
lcall
aam
and
adc
fnstenv
in
and
mov
int3
or
xchg
in
pop
cld
out
or
inc
sbb
cltd
sub
mov
and
push
mov
pop
push
or
loopne
movsb
std
push
decb
sub
mov
and
add
sub
lret
sbb
or
push
xchg
cmp
pop
mov
push
cmp
data16
cli
cmpb
mov
xchg
push
popa
pop
in
loope
mov
xchg
neg
faddl
pop
xchg
roll
cmp
test
sub
stc
xchg
jmp
sub
cmpsb
icebp
or
dec
mov
mov
in
cmpsb
jns
cmp
repz
jb
cmpb
inc
jno
sub
jae
sbbb
push
loope
leave
xchg
rcrl
xchg
adc
sbb
fisubrl
enter
lock
data16
stos
and
adc
leave
cmp
icebp
subb
out
and
xchg
jg
xor
mov
push
push
dec
mov
cmp
pop
shr
loope
and
fwait
mov
adc
lea
popa
mov
divl
xor
adc
mov
cmp
fadds
push
mov
xor
push
repnz
cli
ja
in
or
test
rclb
or
xchg
sbb
dec
lcall
inc
sti
pop
cwtl
lods
and
aaa
sub
xchg
lahf
push
mov
dec
rcrb
or
scas
pop
sub
jmp
sahf
mov
pop
in
jp
jge
mov
jge
add
int3
aad
testb
scas
movsl
orb
cmp
arpl
sbb
adc
xor
cmp
push
dec
ss
and
ljmp
lret
fldcw
inc
fisubrl
mov
rolb
push
mov
xor
jl
loope
mov
push
sbb
shrl
jnp
dec
push
mov
xchg
ja
ficomps
inc
mov
mov
test
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
push
mov
movl
pop
jmp
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
or
push
movzbl
and
movl
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
andl
push
adcl
mov
mov
xor
mov
and
xor
mov
mov
sbb
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
dec
mov
mov
adcl
push
call
adcl
push
push
sbbl
push
movl
push
andl
push
push
orl
call
orl
push
andl
call
push
call
movzbl
mov
mov
movl
cmp
movl
jne
movl
adcl
pushl
andl
pushl
pushl
orl
call
xor
mov
or
mov
mov
mov
sub
movl
lea
mov
adc
lea
notl
mov
mov
mov
sub
and
mov
mov
mov
and
mov
mov
xor
mov
add
movl
mov
movl
mov
movl
cmp
movl
jne
orl
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
push
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
sbb
mov
andl
mov
movzwl
add
xor
add
andl
xor
or
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
and
mov
adc
mov
xor
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
orl
add
andl
xor
or
inc
mov
cmpl
jne
pushl
push
pushl
pushl
push
push
call
cmpl
jb
mov
andl
xor
xor
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
mov
mov
mov
mov
xor
add
mov
sub
add
mov
notl
mov
mov
neg
mov
sbbl
mov
sbb
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
inc
mov
subl
xor
xor
andl
add
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xor
xor
add
mov
subl
xor
orl
xor
add
movl
lea
mov
mov
mov
cmp
ja
or
mov
add
xor
lea
addl
mov
adc
mov
inc
xor
lea
xor
add
mov
or
mov
mov
mov
movl
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
decl
mov
adc
movl
adc
mov
mov
sbb
mov
xor
sbbl
add
cmp
movl
je
mov
movl
mov
xor
orl
xor
subl
add
sbbl
add
adc
xor
sbbl
xor
mov
mov
or
mov
xor
mov
add
adc
xor
xor
movl
mov
movl
mov
movl
cmp
jne
mov
cmp
movl
je
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
add
adc
xor
mov
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
lea
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
lea
push
pushl
call
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
je
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
mov
mov
mov
xor
lea
xor
add
adc
xor
mov
xor
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
addl
mov
sbbl
xor
sbb
mov
add
not
movzwl
mov
movb
sub
lea
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
push
pushl
pushl
pushl
call
mov
dec
mov
jmp
sub
mov
xor
adcl
sub
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
inc
push
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
movl
sub
mov
xorl
push
andl
mov
xor
mov
push
add
jmp
movl
mov
movl
mov
inc
movl
cmp
movl
jb
sbb
mov
decl
xor
add
movl
jmp
mov
jmp
ud1
mov
std
mov
xchg
loopne
add
add
bound
dec
lret
pop
push
sub
push
xchg
xchg
xor
test
cmc
and
clc
add
mov
push
xchg
and
mov
jb
dec
mov
out
adc
xor
int3
push
mov
push
jge
dec
out
loopne
jne
and
pop
push
add
lret
adc
lods
les
cmp
sub
cwtl
jno
iret
cmp
incl
sahf
sbb
mov
sbb
pop
sub
push
mov
outsl
xchg
mov
pop
rcrl
jb
dec
mov
push
in
dec
gs
add
sbb
and
stos
xor
or
lea
adc
or
xor
cld
in
pop
daa
pop
inc
xor
pop
xchg
sbb
push
mov
mov
xor
fxch
out
inc
sub
mov
jp
cwtl
cmp
inc
sub
lea
push
mov
popa
cmp
cmpsl
mov
jmp
insb
push
int3
xchg
sbbb
stos
daa
pop
add
and
mov
mov
and
bnd
shl
dec
imul
les
xor
data16
insl
or
stos
mov
mov
fisubs
xor
jmp
or
or
aad
das
lcall
sub
aam
call
imul
mov
sbb
fs
sahf
mov
bound
jae
dec
push
mov
pop
lea
int
mov
outsb
jg
divl
push
cs
xchg
cmpsl
xchg
scas
mov
insl
mov
lods
xchg
cmp
cmp
out
cmp
loope
pop
dec
jg
mov
xchg
adc
adc
push
test
push
mov
test
ret
incl
jg
fwait
xor
ljmp
sub
orb
hlt
push
push
cs
adc
xchg
lret
jb
lock
rolb
scas
and
fwait
dec
mov
lock
aaa
addr16
xchg
jnp
cmpsb
xor
mov
jmp
lea
or
imul
cmpsb
jg
leave
mov
test
mov
insb
or
rol
mov
xchg
fmull
outsb
data16
je
in
scas
add
stos
pop
xchg
cmp
ja
sub
fs
arpl
scas
rorb
loop
outsb
mov
fs
fadds
rcll
adc
add
jo
mov
and
mov
loop
xchg
sub
push
add
rcll
int3
pop
hlt
xorb
stc
push
ret
lret
clc
cltd
mov
aas
mov
sbb
mul
and
and
dec
sub
call
cld
add
mov
inc
mov
and
pop
dec
addl
push
adc
push
mov
inc
ja
orb
cld
imul
inc
cmc
push
leave
test
daa
jb
cmpsb
rclb
cwtl
push
push
imul
cmpsb
xor
rclb
out
and
mov
je
adc
add
fwait
fs
dec
mov
repnz
scas
dec
mov
lds
mov
cmpsb
mov
adc
movl
das
and
jge
or
leave
mov
and
clc
add
addr16
movsl
push
ljmp
dec
mov
inc
les
xor
add
mov
and
sub
add
sbbb
xchg
mov
or
fdivs
in
mov
int
imul
int3
stos
sbb
xchg
insl
mov
stos
push
and
push
jp
cs
pop
push
lret
push
lahf
xchg
adc
movsl
add
add
in
pop
into
pop
lods
inc
icebp
adc
jle
mov
repnz
inc
adc
dec
xchg
or
shl
adc
icebp
cmp
test
adc
loop
sbb
aad
mov
jo
cmp
push
fdivl
stos
sahf
sub
pushf
iret
in
rcll
int3
clc
out
inc
imul
repnz
lods
fbstp
std
mov
in
sub
mov
xchg
fwait
lret
mov
ljmp
in
jae
sbb
inc
hlt
push
repnz
lret
push
lahf
and
or
dec
jne
fdivr
pop
mov
lea
addr16
xchg
fwait
inc
int3
mov
fisttps
std
aaa
xchg
add
mov
adc
xor
mov
mov
sub
psubusb
dec
scas
jo
push
xor
xor
sahf
inc
ficompl
dec
popf
sub
daa
in
fs
cwtl
or
test
clc
push
pusha
mov
testb
push
push
sbb
and
fcomps
leave
cmpsb
int3
fisttpll
lcall
hlt
push
lds
fcompl
dec
inc
movsl
sub
inc
push
loopew,pn
push
fisttpll
mov
adc
dec
add
movsl
aaa
cmp
bound
push
das
jp
xchg
jmp
xor
or
push
jmp
lods
bound
mov
test
insb
mov
mov
aaa
mov
or
rorl
in
dec
and
jns
bound
iret
mov
pop
es
stc
imul
in
dec
addb
ss
es
cltd
ljmp
cmp
inc
movsb
mov
fwait
sub
ret
roll
pop
add
sysexit
xor
pop
pop
push
xchg
les
inc
arpl
loope
adc
lea
icebp
testl
push
jp
movsb
sbb
outsb
xchg
adcl
jg
in
imul
hlt
shld
jae
icebp
lea
cmpsb
insb
add
dec
test
lcall
xchg
xor
inc
jp
shrb
push
subb
cmp
inc
push
std
mov
add
inc
jno
imul
mov
dec
xchg
std
sub
and
add
pop
gs
push
std
adc
jmp
jmp
fucom
dec
xlat
add
mov
decb
inc
mov
and
repnz
bound
cmp
int
pop
js
xchg
push
scas
stos
into
aaa
insb
fsubrl
pushl
and
incb
popa
ss
jns
addr16
adc
divl
sbb
mov
cmp
fsts
mov
dec
lea
arpl
movl
out
xor
cmp
stos
cmp
jmp
test
ret
mov
loopne
and
stos
fisubl
xlat
xor
sbb
das
leave
push
xchg
adc
mov
and
fcmovnu
in
fmull
jecxz
in
mov
enter
arpl
rcll
pop
sti
pop
cltd
dec
add
ja
pop
push
xor
sbb
cmp
or
cmp
rclb
and
push
jmp
inc
or
push
lds
ja
pop
push
test
dec
ljmp
nop
out
sar
in
sub
sti
in
dec
xor
flds
push
jne
out
cmp
aas
call
cmp
and
lret
sbb
mov
dec
or
push
jmp
stos
or
call
mov
sub
lcall
dec
dec
add
cmp
aas
or
cltd
sarl
mov
mov
mov
popa
push
or
fs
mov
je
add
std
nop
loope
cmpsl
mov
aad
shll
dec
imul
adc
cmpsl
jb
jno
mov
mov
aaa
jl
adc
xchg
mov
mov
jae
pop
or
popa
roll
fidivs
pop
call
pop
pushf
sti
jl
mov
jge
nop
xor
mov
pop
inc
pop
in
xlat
push
inc
lahf
jbe
and
push
xchg
mov
cld
jo
inc
pushf
dec
cmp
and
dec
pop
es
add
ss
or
mov
pop
or
cmc
pop
and
outsl
mov
xchg
ss
ret
xor
dec
cmpsl
mov
aad
mov
mull
out
or
mov
cmp
mov
std
xor
sub
push
popa
sbb
and
mov
nop
nop
shlb
lods
xor
je
movsb
jmp
pop
jb
fldenv
insl
test
jno
cmp
orb
fistpl
sub
push
movsl
xchg
ljmp
scas
gs
cld
outsb
xchg
inc
cmp
dec
data16
movsb
repnz
add
sahf
or
ret
dec
repz
nop
insb
lock
fcmovnb
jae
mov
enter
orb
jne
lea
into
mov
xchg
jmp
pop
dec
xchg
cmpsb
out
fcomps
jecxz
mov
inc
imul
gs
movsl
andb
adc
xchg
insb
and
pop
inc
inc
into
mov
xlat
xor
pop
aad
cs
lods
cmp
jno
xlat
popf
cmp
cmp
inc
pop
add
out
dec
sub
rol
aam
cli
and
ljmp
repz
pop
xor
inc
xchg
mov
scas
inc
aad
aas
imul
sub
shl
out
add
mov
push
insl
mov
cmp
mov
lds
xchg
shld
and
add
and
mov
xlat
xchg
daa
pop
mov
adc
fisttpl
shlb
rcrb
cld
jp
enter
stc
add
mov
pop
xor
dec
xchg
sub
cmp
aam
dec
jbe
mov
clc
mov
shlb
mov
inc
cmpsl
lods
insl
leave
loope
xchg
xchg
rorb
sahf
in
mov
das
pop
adc
push
mov
mov
aaa
shrl
mov
dec
pushf
xchg
dec
movsb
imul
test
sub
stos
sbb
stos
loope
inc
push
dec
xchg
mov
sbb
out
ds
movsl
pop
cmp
mov
ss
cltd
xchg
xchg
divl
cmp
push
scas
stos
or
add
lret
gs
mov
cmp
cmp
xor
inc
call
mov
mov
sub
frstor
call
hlt
inc
sub
aam
sbb
adc
pusha
insb
jp
ja
pop
daa
fistps
push
jmp
dec
push
rcrb
imul
or
lods
xor
xchg
ret
mov
xchg
imul
sbb
sbb
adc
push
pop
and
popa
call
adc
push
mov
fsubr
or
xor
sub
push
and
stos
outsb
mov
in
ret
je
xchg
std
mov
push
lret
jecxz
push
movb
test
lea
xchg
mov
in
xchg
pop
and
xor
cmp
sarl
aaa
pop
mov
xlat
xor
pushf
loop
nop
push
mov
inc
dec
cs
sbb
fwait
cld
jb
adc
dec
mov
xlat
mov
dec
ficoml
aad
jbe
pop
loope
ds
repnz
sahf
popa
dec
mov
fsubrl
aad
fsubrl
add
das
fstps
iret
and
and
out
andl
mov
das
pop
stos
ljmp
gs
data16
arpl
add
dec
mov
push
pop
xchg
in
mov
cmp
inc
fs
popa
sub
cld
hlt
bound
pop
and
push
loope
pop
test
clc
cmp
shll
arpl
cld
data16
jmp
pop
notb
sub
jnp
push
stos
jge
addr16
jo
sub
test
lret
lahf
imul
adc
mov
jae
bound
sbb
aaa
jno
aam
incl
ss
pop
arpl
gs
dec
and
cmp
or
rcl
in
sbb
xchg
jmp
shl
outsl
or
sbb
fwait
jmp
mov
jo
jns
int
xor
or
addl
shlb
jb
ficoms
cld
xor
push
in
mov
stc
popa
testl
and
sub
dec
into
insb
outsb
rolb
repz
xor
repz
jp
loop
ljmp
jecxz
mov
pop
push
aad
pop
ret
outsl
mov
pop
mov
fmull
sbb
in
push
ds
mov
fisubrs
imul
testl
lcall
adc
stos
or
addr16
repnz
adc
sbb
xor
fs
inc
push
test
add
ret
test
addr16
jnp
jns
mov
mov
test
call
xchg
loop
xorb
dec
les
notb
jp
cmp
sbb
std
or
cld
sbb
xor
ljmp
xchg
scas
and
nop
aad
inc
sub
dec
pop
mov
mov
xor
pop
shrb
popf
outsl
aaa
aas
xor
cmp
adc
push
pop
add
adc
mov
add
sub
mov
ffree
add
test
inc
sub
mov
mov
fbstp
lcall
or
scas
push
leave
into
rcrl
leave
adcb
jge
inc
sbb
xor
bound
js
inc
inc
jb,pn
jb
or
and
enter
sbb
stos
ds
test
outsb
insl
xchg
dec
add
adc
mov
mov
dec
xor
insl
xchg
stos
movsb
scas
or
push
cmp
jp
xor
mov
and
jmp
ja
inc
dec
cmp
movsl
jnp
aam
sbb
adc
ret
lahf
xor
mov
adc
cmpsl
mov
inc
lret
pop
pop
ja
cmpsl
iret
adc
sub
mov
or
mov
xlat
xor
mov
pusha
insl
loope
xor
and
xor
ss
xor
stos
mulb
fadd
push
stos
adc
aam
loopne
or
and
out
xchg
movsl
xchg
inc
aad
test
cmp
xlat
mov
mov
mov
adc
mov
xchg
add
mov
stos
adc
test
jno
xchg
mov
loopne
push
rolb
out
addl
sar
pop
inc
div
push
mov
pop
mov
add
jns
mov
mov
xchg
fbstp
lea
roll
mov
je
or
pop
push
sarl
and
xchg
mov
rolb
mov
mov
jp
mov
jnp
pop
jle
mov
ret
mov
dec
sub
cmp
xchg
xchg
xchg
in
and
jge
jnp
push
push
sub
mov
inc
fsubrs
out
orl
outsl
arpl
repz
jne
add
in
scas
pop
and
and
mov
cmc
or
jmp
inc
or
mov
daa
jmp
insl
pop
mov
lods
cmp
fnsave
or
add
pop
xchg
out
in
fmulp
cmp
call
adc
sub
cmp
push
mov
xor
decb
xchg
rcrb
mov
into
pop
and
add
xor
jb
shll
push
int3
ffree
enter
jns
dec
ljmp
std
mov
ja
rclb
out
xchg
cltd
push
jno
and
mov
aad
cltd
sub
or
sbb
test
out
or
jb
xor
pop
sub
jns
mov
cwtl
jae
xor
mov
mov
pop
movb
es
mov
out
imul
in
test
mov
inc
cmp
dec
dec
das
pop
ret
pop
push
rolb
out
add
add
enter
imul
push
jl
ss
cmc
adc
jb
aam
xor
cli
mov
lods
mov
sbb
leave
push
ret
push
xchg
and
mov
je
xchg
sub
and
addb
xor
push
pushf
mov
push
aaa
push
sbb
stos
int
dec
lods
aas
aam
fidivrs
push
out
outsb
leave
mov
bound
sbb
mov
ja
lcall
xchg
lret
cmp
dec
popa
adc
inc
pop
cmc
addl
adc
cmp
lret
jge
xlat
pop
outsl
lods
mov
mov
cli
mov
jo
stos
push
repnz
roll
or
inc
aam
cli
cmp
and
mov
sub
dec
mov
mov
mov
repnz
lret
xchg
push
imul
out
ss
mov
sub
mov
pop
add
jae
cmp
lcall
xchg
and
inc
adc
push
add
adc
outsb
test
in
loop
cmpsl
sub
push
push
mov
mov
or
sub
jb
push
lret
adc
pop
ret
out
popf
pop
mov
mov
loopne
mov
arpl
imul
add
sub
cmc
out
push
clc
cmc
std
push
pop
daa
xor
jl
lea
aas
xchg
push
lock
ja
addb
daa
fnstsw
lods
mov
sbb
pusha
lods
sub
sahf
mov
andl
xor
daa
fdivrs
or
cwtl
jno
test
pusha
dec
mov
jnp
fwait
sarl
hlt
jnp
test
out
mov
fists
xchg
mov
cltd
mov
mov
inc
fwait
imul
lcall
in
in
inc
adc
mulb
lcall
fisubs
sub
orb
mov
push
pop
faddp
mov
sub
arpl
mov
dec
int
inc
ljmp
adc
xchg
data16
loop
lods
jp
pop
push
pop
xchg
push
insb
sbb
out
movq
or
adc
push
mov
cmp
popf
add
aam
mov
mov
loopne
jecxz
sbb
andl
push
inc
mov
mov
fwait
adc
idivl
gs
jne
add
dec
rcr
mov
stc
sub
inc
mov
xchg
cmp
cmp
clc
add
faddl
xchg
out
fstpl
out
adc
cmp
xor
xor
sub
mov
lahf
test
dec
imul
mov
cmpsl
out
and
add
push
pop
sbb
pop
push
inc
aad
cmpsb
inc
mov
fcomi
lret
fcoml
sub
mov
ja
adc
es
in
insb
push
jae
test
mov
adcl
dec
inc
mov
frstor
pop
mov
repnz
hlt
push
push
jle
lock
and
sarl
lds
dec
sbb
test
pop
das
fsts
push
push
enter
inc
push
jbe
cmp
push
push
or
fdiv
adc
aas
in
loope
mov
call
aam
pop
fs
xchg
fwait
les
pop
mov
sbb
in
push
es
xchg
fldcw
out
xor
dec
and
fsubrl
lods
lods
jne
cld
scas
and
jg
push
inc
insb
test
iret
lea
nop
mov
or
jb
scas
imul
xchg
inc
mov
sbb
dec
std
inc
stos
jge
mov
xchg
and
call
mov
cmc
lcall
xor
fwait
sbb
popa
aam
xchg
aad
xchg
dec
nop
dec
xor
test
jmp
lret
xor
cltd
jp
mov
loope
or
adc
xchg
and
lahf
xlat
call
add
pop
xlat
js
jg
inc
repz
xchg
mov
pop
push
shl
mov
les
xor
mov
dec
sbb
sub
fwait
pop
adc
dec
call
lea
daa
adc
sub
jnp
rol
test
fwait
jl
arpl
and
aaa
or
pop
out
cmc
or
out
xor
bound
xchg
outsl
testl
cli
imul
leave
jg
cmp
iret
pop
in
mov
fucom
mov
cmp
mov
push
fs
daa
cwtl
inc
scas
es
jecxz
mov
and
push
lods
icebp
sub
or
in
clc
dec
xor
xor
stc
rcr
adc
jmp
data16
adc
cmpsb
aad
cli
push
push
pop
dec
rorl
aad
mov
and
fistpl
lods
movsb
mov
pop
clc
mov
in
cmpsb
fnstsw
push
inc
pop
aam
push
loop
push
rorl
call
es
xlat
or
dec
sub
mov
sbb
jo
xchg
mov
pop
clc
pop
ja
test
mov
jge
lret
in
inc
lret
pop
ret
movsb
jecxz
es
xchg
outsb
daa
mov
or
nop
pop
je
imul
xor
add
test
xchg
jae
mov
orl
test
repnz
add
movsl
push
lods
pop
dec
pop
xor
mov
in
gs
jg
inc
cltd
xor
mov
test
cmpsb
mov
mov
jle
or
out
sub
jae
push
fldcw
cmp
dec
scas
pop
mov
dec
popa
test
rcll
push
ret
daa
fstps
mov
int3
add
repz
dec
xor
and
aam
mov
iret
leave
test
inc
sub
jae
xchg
divb
lods
sub
push
xchg
je
push
push
call
data16
cld
mov
and
push
adc
icebp
sahf
ficoml
out
inc
and
or
cmpsb
addb
aaa
int
or
repz
bound
mov
ss
dec
daa
add
mull
or
inc
das
dec
aaa
sub
andb
je
imul
test
pusha
cltd
fistpl
lcall
les
jns
push
adc
add
sub
mov
nop
xchg
out
das
daa
rcr
add
frstor
push
addr16
in
adc
loopne
ds
stc
sub
test
or
divl
add
hlt
add
cwtl
jnp
ror
test
dec
and
xlat
fdiv
loopne,pt
dec
add
push
mov
or
pusha
rorl
inc
jl
hlt
rorb
and
daa
mov
pop
jecxz
fistpll
aam
fnstsw
sahf
inc
mov
ret
aam
ror
and
mov
inc
xor
popf
outsl
inc
hlt
xorb
jl
add
je
iret
pop
xchg
adc
xchg
aas
test
pop
lods
inc
mov
mov
xchg
cmp
jb
pop
adc
nop
pop
cmpsb
stos
cmc
lret
or
ret
xchg
inc
or
inc
sub
mov
mov
jmp
push
mov
inc
jnp
or
xchg
movd
jecxz
jne
int
mov
loopne
ret
push
adc
lea
sbb
stos
cs
add
js
inc
ja
add
mov
loop
cld
out
rolb
lret
push
mov
dec
jecxz
in
mov
ficoml
xchg
cmp
mov
push
or
movsb
xor
inc
mov
xchg
inc
inc
js
cmc
jne
mov
test
pop
cld
lcall
add
mov
fists
push
mov
daa
mov
stos
pop
or
imul
div
add
adc
dec
mull
aam
push
mov
out
nopl
push
andl
enter
add
jge
inc
cmp
adc
xor
imul
imul
lea
in
pop
push
inc
dec
aas
cli
cmp
jg
push
cmc
mov
mov
call
rcr
fwait
cltd
in
push
and
jmp
es
fistps
add
stos
test
mov
mov
es
xchg
scas
push
test
aad
std
inc
sub
pop
xor
daa
mov
ljmp
sub
das
pmaxub
cmp
push
sub
stc
add
sbb
aas
enter
lea
popa
add
push
ret
sub
or
scas
mov
rorl
pop
mov
xchg
ds
jnp
and
repz
scas
cmp
movsl
fidivrs
xchg
sbb
stc
mov
aaa
ret
dec
scas
xor
sbb
imul
outsl
cmp
cmpsl
outsb
imul
pushl
cmp
push
jmp
push
pop
dec
outsl
mov
inc
cltd
mov
inc
pop
and
fcmovu
sub
stos
jp
sarb
sar
sbb
sub
sub
jp
dec
cltd
xor
scas
loopne
ljmp
cmp
sahf
mov
push
adc
movsl
push
or
out
int
call
mov
sbb
mov
stc
push
dec
popa
adc
movsl
scas
mov
dec
pop
jl
or
arpl
leave
mov
ja
mov
jae
push
movsb
mov
jbe
mov
mov
adcb
addr16
add
jnp
orl
push
pop
push
and
add
add
insb
loope
ret
testb
je
mov
push
sti
out
iret
ljmp
xor
pop
loop
inc
lea
je
insl
mov
das
cmp
std
je
mov
dec
sub
ret
push
arpl
push
mov
loopne
xlat
jbe
cmp
pop
popa
add
sahf
out
loope
fbld
popa
ljmp
icebp
leave
stc
sbb
pop
inc
shrl
pop
add
dec
scas
popf
xchg
and
adcl
imul
pop
gs
sub
inc
lcall
xor
imul
push
orb
ljmp
insb
sub
mov
adc
mov
test
lods
pop
and
insb
mov
xchg
pop
push
mov
xchg
cs
jecxz
inc
or
mov
and
test
cmp
repnz
inc
lcall
cmpsl
push
test
add
and
and
cmp
test
data16
mov
fdivs
subl
enter
mov
sub
outsl
fsubl
insl
aad
mov
mov
addl
lahf
jns
cmp
inc
inc
jmp
mov
jbe
mov
call
and
and
dec
nop
xor
sbb
cmp
es
shr
jle
shlb
ficomps
xor
je
mov
cmp
mov
or
imul
subb
mov
pop
adc
add
lods
mov
mov
sub
int3
ja
xor
adc
jl
mov
je
pop
fcompl
sbb
fisubrs
dec
and
aad
push
das
xchg
out
jb
lret
sbb
leave
stc
fsubs
jmp
das
mov
xor
xor
push
mov
cmp
jmp
insl
ss
sahf
mov
loopne
inc
xchg
stc
jbe
xor
ja
stos
repz
inc
sbb
imul
push
push
mov
inc
sub
inc
sbb
pop
dec
cmpsb
push
lock
jl
add
fwait
repnz
and
addl
js
aaa
lods
xor
sti
xor
ret
addr16
or
mov
and
push
xchg
bound
mov
pop
in
xchg
imul
mov
and
das
in
jae
sbb
jae
mov
sbb
push
lcall
push
cmp
pop
movsb
inc
push
call
sahf
fwait
push
pop
sub
mov
in
bound
inc
enter
dec
push
sbb
iret
mov
cmpsl
loopne
cmpsb
pushf
sub
mov
or
out
std
iret
push
sub
mov
out
fistpl
lods
movsb
repz
bound
cmc
mov
decl
enter
push
addr16
cltd
fs
sub
cltd
xchg
mov
nop
leave
inc
xchg
repz
mov
lcall
sub
in
data16
pop
fnstcw
inc
rorb
mov
popf
sahf
mov
push
or
cs
pop
cmp
jp
mov
or
jecxz
jmp
mov
iret
ds
adc
fstl
adc
push
push
push
jmp
fnstsw
inc
push
adc
ret
push
lahf
rclb
mov
fsts
cmpb
sub
stc
push
sbbb
add
push
add
ret
sbb
in
sub
or
adc
jo
dec
jl
and
sub
inc
iret
lods
lret
cmp
adc
fidivs
scas
and
popa
mov
pop
sbb
movsb
push
dec
test
ja
div
movsb
sti
popa
es
repnz
hlt
mov
loop
lods
sti
add
stos
cli
ss
subl
rcrb
stos
xor
push
scas
cmp
cmp
dec
fdivr
pop
daa
adc
lods
mov
icebp
lods
push
xchg
ds
cltd
mov
mov
lods
adc
xor
jb
xchg
xor
jnp
push
loopne
test
push
adc
cmp
fnstcw
mov
adc
or
add
push
es
hlt
mov
and
sub
clc
and
pop
mov
ret
inc
dec
mov
and
add
inc
push
or
jmp
test
or
jo
mov
popf
dec
add
and
mov
test
jns
iret
daa
sub
sbbb
lcall
inc
aaa
mov
mov
movsl
testb
xchg
outsl
fcompl
pop
adc
test
jns
mov
pop
mov
sbb
in
pop
dec
xchg
xchg
jmp
test
add
loop
lahf
sbb
jecxz
inc
cmpsl
dec
std
mov
xchg
add
jno
mov
adc
inc
sub
iret
in
repnz
test
daa
sbb
sar
inc
pop
sbb
cs
imul
out
ret
scas
inc
xchg
test
pop
fs
mov
lret
int
add
fcoml
imul
nop
not
lret
dec
xchg
push
imul
and
leave
rclb
xor
mov
pop
pop
aaa
mov
cltd
subb
jmp
ss
pop
and
xor
add
xor
or
repnz
dec
xor
ror
out
jae
xchg
and
or
ret
jmp
daa
in
or
test
cli
xchg
mov
ret
and
cmpsb
jl
mov
aad
cltd
es
adc
dec
inc
pop
add
test
push
and
cmpsl
in
bndldx
fldl
or
sbb
insl
clc
test
adc
dec
cmp
inc
push
cmp
inc
xor
sbb
rcrl
xchg
push
mov
mov
jns
jle
ljmp
jae
in
bound
dec
cmc
cmp
add
fsubrp
sub
stos
push
scas
lds
sbb
repnz
clc
outsb
mov
pop
jp
and
and
or
mov
insl
add
enter
fnstcw
aaa
ret
sbb
bound
addb
xchg
pop
in
int
scas
mov
pop
jge
cmpsl
daa
stc
xor
dec
hlt
cmp
pop
sarl
sub
and
fsubrs
push
repnz
add
and
inc
add
inc
push
lcall
sti
inc
jae
fisubs
add
call
jae
gs
lret
sbb
scas
outsb
mov
enter
push
push
clc
dec
sbb
es
fcoml
aaa
xchg
aaa
comiss
fcomps
pop
fistpll
adc
dec
mov
pop
xchg
adc
push
xchg
mov
sbbl
xor
andl
mov
addl
add
andl
movzwl
notl
mov
and
mov
movzwl
xor
add
mov
mov
mov
inc
movl
mov
movl
cmp
movl
jne
mov
add
mov
xor
addl
add
mov
or
mov
xor
add
mov
movl
movl
movl
movl
movzwl
mov
mov
jmp
mov
add
mov
sbb
mov
orl
xor
xor
adcl
sub
adc
sub
movl
xor
mov
and
mov
or
mov
lea
mov
orl
mov
movzbl
xor
mov
lea
not
mov
xor
or
adc
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
push
pushl
pushl
call
cmpl
jb
orl
mov
sbbl
lea
and
mov
and
mov
mov
movl
lea
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
mov
adcl
lea
mov
not
mov
mov
and
mov
mov
sbbl
lea
orl
mov
mov
xorl
xor
sbbl
add
jne
jmp
xor
add
mov
sub
and
mov
subl
mov
xor
orl
xor
sub
sub
xor
mov
mov
mov
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
pushl
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
xor
add
adc
mov
mov
mov
sbb
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
jmp
rcrl
imul
dec
sbb
loope
popa
bound
bound
leave
enter
add
std
xlat
test
push
enter
imulb
mov
in
add
mov
dec
cld
inc
int3
test
js
sbb
adc
outsl
icebp
add
jnp
sbb
sbb
imul
or
xchg
out
jae
aaa
sub
pop
inc
mov
xor
daa
dec
fimull
test
enter
stos
ret
jae
cmc
push
addr16
push
xchg
aam
xchg
nop
les
xlat
ss
scas
shll
xchg
and
pop
adcb
in
shrb
and
dec
lds
push
add
test
cmp
loope
rolb
out
jg
jmp
test
mov
iret
sub
rcl
xchg
jl
mov
jecxz
leave
fcompl
lds
dec
lret
mulb
add
mov
addb
ja
in
ret
in
rcrb
and
cmp
leave
ja
mov
cmpsb
mov
jl,pt
add
xlat
aad
or
jo
mov
add
sbb
xorb
jae
xchg
in
add
outsl
add
shlb
mov
mov
xor
pusha
lock
dec
mov
add
fs
adc
das
pushl
lahf
repnz
dec
pop
lods
movsb
mull
pop
inc
test
stos
dec
add
stos
pop
dec
call
mov
cmpsl
push
and
and
test
dec
mov
or
pop
fnsave
pop
and
fidivrl
add
inc
mov
gs
mov
mov
aas
jb
js
xor
cmp
popf
pusha
mov
xor
jge
inc
ret
push
jnp
popa
add
test
add
mov
in
push
mov
and
xchg
arpl
arpl
cmpsb
push
stos
leave
push
fwait
or
lods
jne
add
xchg
add
or
or
sbb
push
cmpsb
push
cltd
addr16
jne
pop
es
fucomi
popf
movsw
pop
xor
das
arpl
xor
sub
mov
loopne
fimull
mov
inc
push
xor
nop
xchg
test
cmp
test
push
xor
or
enter
xchg
test
dec
ja
mov
dec
into
adc
cmp
sbb
loop
add
sub
adc
in
push
stc
mov
cmp
dec
push
jmp
jns
shll
fs
incl
or
into
lret
in
fsubs
add
ficoml
hlt
dec
cmpb
cld
out
imul
pop
test
pusha
out
shlb
pop
push
xchg
sbb
ss
out
xchg
out
xorl
js
adc
gs
and
mov
dec
push
in
andb
and
aaa
sbb
clc
cmpsb
xor
xor
mov
loop
mov
mov
repz
pop
jl
fcompl
das
subb
xchg
stos
lcall
dec
or
or
hlt
jecxz
mov
jnp
in
dec
push
jne
adc
and
push
dec
loop
icebp
xchg
cli
jle
into
cmp
bound
shlb
cmp
sbb
jp
lock
and
sti
push
add
jnp
pop
data16
xchg
es
mov
scas
ror
rorb
jp
mov
test
jb
inc
mov
mov
lcall
dec
insb
fsts
mov
push
lods
push
and
int
cmp
pusha
es
fmull
mov
jmp
jmp
cmp
push
dec
xor
outsb
inc
pop
andb
std
int
cmp
sub
addr16
add
and
fstps
ret
fimuls
dec
mov
mov
inc
imul
fistpll
adc
and
in
pop
rclb
cmp
orb
test
inc
movsl
les
pushf
or
lods
jmp
jne
add
sbb
jno
pop
pushf
sahf
sbb
sbb
ret
inc
fistl
fisubrl
dec
fs
adc
and
pusha
jnp
and
clc
adc
jo
daa
test
aaa
jne
mov
test
pop
fs
adc
fnstcw
xor
mov
out
cli
cmp
ret
loope
icebp
bound
mov
sub
pop
push
mov
inc
mov
jae
ret
nop
clc
pop
lret
shr
pop
mov
mov
jecxz
inc
dec
sbb
pop
cmp
idiv
shl
xchg
stos
andl
stc
pop
pop
cltd
and
mov
pop
adc
repz
fisttpl
pop
xchg
mov
int
mov
mov
icebp
iret
bound
pop
rol
es
sub
xor
xor
repz
sar
xchg
add
xchg
imul
mov
iret
in
insl
gs
dec
test
mov
sbb
out
dec
add
jp
mov
cltd
gs
push
mov
fisubl
shll
ljmp
mov
insb
push
push
mov
xor
or
repz
adc
mov
inc
pop
sub
mov
fcmovnu
and
push
sub
out
test
aam
sbb
mov
mov
pop
out
pop
out
jmp
lret
pop
xrelease
inc
std
jmp
add
test
jnp
lods
movsb
scas
xor
add
ja
or
aad
mov
int
outsb
outsb
mov
sti
imul
push
stc
fdivs
hlt
mov
or
pop
subb
inc
push
in
insl
mov
int
inc
into
sbb
fwait
dec
mull
aaa
loop
push
push
jle
xchg
mov
rorb
out
sub
mov
pop
cwtl
cmpb
filds
das
sub
dec
nop
imul
mov
add
addb
mov
jnp
ljmp
jno
neg
lods
mov
fs
leave
loope
lahf
adc
cmovae
push
pop
gs
adc
dec
imul
mov
aaa
pop
xor
mov
out
push
sub
dec
out
fcomps
imul
andb
and
cmp
sub
jg
bound
adc
cmc
pop
jecxz
and
pushl
or
pop
daa
stos
dec
and
rcrb
mov
adc
sub
enter
int
cwtl
mov
and
pusha
xchg
cmp
inc
fdiv
sub
imul
in
lcall
push
stc
add
add
rcr
flds
aas
sub
cmp
xchg
pop
xchg
xchg
xchg
pusha
das
xor
insb
add
sub
in
mov
es
lods
jle
aaa
icebp
xchg
pop
sub
movsb
stos
adc
and
in
xchg
loop
cmpsl
pusha
mov
lahf
outsb
iret
pop
adc
sub
push
loopne
ss
cmp
arpl
loop
sbb
mov
mov
les
mov
jge
mov
sbbb
pop
dec
or
push
mov
popa
cmc
ljmp
sbb
sub
mov
add
subb
or
dec
gs
mov
and
aad
std
push
pop
add
or
scas
fadd
dec
cmp
sub
jle
xor
or
or
fcomps
shr
mov
push
inc
shlb
add
lods
and
mov
sbb
cmp
adc
push
xor
insb
jns
and
stos
js
push
cmc
cli
dec
test
dec
mov
jnp
pop
mov
mov
inc
sub
popa
rcrl
arpl
pop
jb
adcb
lret
push
sbb
and
cltd
dec
loope
stos
int3
stos
pop
mov
push
pop
lret
adc
dec
cmp
int3
cmp
fs
inc
inc
xchg
cmc
pop
mov
pop
xor
es
push
push
call
and
cmp
iret
mov
neg
push
add
jb
lcall
pop
mov
test
mov
insb
rcrb
jb
xchg
popa
and
cmpsb
xchg
sub
sbb
push
dec
outsl
and
pop
dec
mov
and
movsb
mov
jg
cmp
cmp
aad
fidivs
mov
cmc
fwait
dec
ds
and
sub
icebp
xchg
sbb
mov
sahf
or
out
sub
inc
pop
mov
sbb
rol
add
rep
insl
sbb
ss
nop
cmp
insl
adc
outsl
jl
enter
stc
ljmp
std
or
push
push
fidivrl
outsb
sbbl
dec
mov
divb
imul
pop
and
cmp
push
inc
in
mov
sbb
rorl
hlt
icebp
xlat
out
mov
bound
jb
pop
loopne
clc
add
int
leave
mov
scas
subb
add
iret
mov
xor
xchg
mov
lcall
lcall
vaddsubps
call
mov
push
mov
in
jns
xchg
sub
dec
jo
mov
mov
and
or
adc
dec
push
frstor
add
cmp
sbb
cwtl
cmp
jne
dec
ja
xchg
push
aas
loope
inc
jge
andl
jb
iret
push
pop
push
push
xchg
mov
pop
mov
add
psubq
je
push
mov
xchg
lcall
pop
rol
jns
xlat
mov
xchg
lcall
xorb
mov
mov
insl
or
inc
lds
pop
loop
dec
sub
cs
xchg
repz
clc
scas
mov
mov
jmp
leave
push
out
jne
lret
and
cs
mov
shll
cmp
sub
push
idivl
scas
fs
clc
jb
test
stos
sbb
mov
and
fwait
insl
push
mov
in
mov
cmp
cwtl
inc
cld
dec
sbb
mov
push
cwtl
lret
sti
mov
add
xchg
shr
mov
jmp
dec
sub
stc
clc
test
pop
arpl
daa
out
and
mov
movsb
mov
mov
and
mov
fwait
call
jg
lods
jge
jge
add
add
mov
cmpl
push
fmul
nop
xor
ds
and
rclb
add
jbe
cmpsl
movsl
dec
pop
sahf
je
inc
outsl
cmp
lea
jp
lahf
scas
jns
cmpsb
xchg
inc
pop
mov
mov
sbb
pop
sbb
sti
pop
pop
or
fmull
shlb
loopne
out
scas
mov
lock
pop
push
add
jno
or
sbb
daa
fwait
std
ljmp
push
pop
xlat
and
lock
jmp
mov
stc
dec
hlt
out
jmp
push
add
icebp
add
cwtl
ss
es
popf
inc
subb
pop
sub
arpl
ret
aam
lret
push
ret
js
orl
lds
jecxz
dec
stos
sbb
or
in
into
scas
or
push
fnstcw
push
sub
push
lea
sahf
mov
xchg
addb
in
mov
and
add
movsb
cmp
cmp
xor
int3
jg
add
into
stos
or
hlt
stos
cmp
jb
or
jno
out
lods
insb
cwtl
mov
inc
addl
add
lea
sarb
xchg
out
jle
mov
inc
push
sbb
dec
and
sbb
sbb
push
adc
test
push
push
mov
std
inc
sbb
lods
stc
ds
addb
shll
pop
dec
insl
sub
push
add
leave
and
inc
mov
or
sub
and
mov
sbb
mov
jbe
rol
bound
lret
dec
push
scas
add
cmp
ds
mov
pop
lcall
pop
nop
mov
xlat
push
subb
cli
mov
dec
loop
xorl
pop
cmp
add
repnz
stos
scas
and
in
scas
or
push
adc
out
add
jnp
ds
call
scas
jno
mov
mov
sar
test
push
popa
fdivr
iret
jge
fsubl
xchg
push
mov
cmc
int3
fmull
fs
fcoml
push
inc
xor
mov
mov
mov
enter
out
jnp
mov
mov
test
cmp
mov
movsb
lret
fsubrs
sbb
jae
pop
and
sahf
mov
xchg
sub
lcall
mull
sahf
imulb
inc
push
xchg
pop
cli
xchg
lea
je
xchg
aam
jns
and
sub
sub
inc
fmuls
icebp
in
scas
insl
pop
mov
mov
rcrb
sub
mov
lea
je
mov
mov
fs
jns
jnp
jnp
aam
cmp
lea
pushf
jne
dec
out
pop
mov
mov
and
das
in
and
je
xchg
xor
jno
jmp
sub
inc
push
ja
adc
scas
push
es
push
std
lret
jmp
push
pushf
xchg
daa
sub
shll
xor
in
popa
add
xchg
aam
xchg
push
inc
xchg
hlt
push
rorb
aad
cltd
xchg
jle
or
cmpl
lods
es
jecxz
lahf
lds
or
lret
lcall
add
jecxz
cltd
or
mov
mov
pop
test
lods
mov
repnz
adc
mov
jmp
inc
stos
stc
cld
sarl
cmpsl
es
or
ds
je
mov
jle
fstpl
push
incb
js
add
add
sub
and
mov
jne
mov
sbb
mov
push
sbb
movsl
pop
aaa
mov
jnp
pop
in
and
je
mov
lea
sbb
xor
push
lret
push
push
push
mov
mov
adc
xor
insb
jno
mov
sbb
pop
cmp
das
sub
es
dec
stc
jae
cmpsb
mov
jmp
sbb
gs
adc
dec
add
and
push
mov
jmp
xor
sti
push
pushf
movzbl
outsl
pop
push
in
jl
sub
in
ret
rorl
and
adc
data16
insl
xchg
fcoml
pop
sarl
adc
loop
fsubrs
adc
mov
push
adc
add
cltd
lret
in
lds
popf
push
ss
ret
pop
push
iret
dec
mov
mov
xlat
or
inc
mov
xchg
movsb
mov
stos
mov
xchg
outsb
cmp
xchg
mov
inc
addr16
xor
mov
ljmp
stos
jae
pop
and
pop
fistps
out
dec
aam
push
sub
stos
das
hlt
xchg
jp
rcll
mov
bound
mov
pusha
and
sub
jae
inc
push
clc
adc
xchg
icebp
ja
xchg
bound
outsl
mov
dec
fidivs
jmp
or
insl
xchg
inc
and
ficoms
stc
lret
nopl
pop
jg
sub
dec
xor
daa
sub
hlt
or
popa
test
inc
rcl
call
inc
pushf
dec
sti
call
inc
or
mov
out
fmuls
and
cmpsl
add
and
pop
inc
add
jnp
rcll
push
fs
xor
and
add
roll
sbb
cmp
fmuls
sqrtps
sbb
jo
fisubrl
mov
jmp
fsubr
mov
dec
mov
std
jae
xchg
sub
into
mov
push
mov
xchg
bound
add
and
jge
das
mov
out
std
aad
mov
lea
push
test
adc
mov
imul
mov
push
pushfw
xchg
outsb
movsl
cmc
xor
mov
out
and
and
adcl
in
leave
xor
pop
out
pop
push
xor
pop
leave
out
pusha
scas
and
lods
jecxz
mov
in
or
les
adc
xsha1
cmpsb
mov
mov
mov
add
jae
out
cmp
adc
popf
cmp
pop
push
jno
inc
test
movsb
cmp
sub
mov
gs
in
bound
dec
popa
test
arpl
jmp
aam
pusha
stc
xchg
iret
xchg
cld
or
adc
ret
les
subb
jne
cmp
or
or
mov
or
or
push
movsl
jmp
fnstcw
movsb
sbb
insb
iret
pop
push
adc
ja
arpl
movsb
in
mov
dec
jne
dec
sbbl
fucom
pusha
aam
jb
mov
int
and
and
repnz
pop
and
aas
cmpsl
loope
loop
add
xor
jb
xor
and
mov
fsubrs
mov
stos
cmp
add
mov
scas
sahf
lcall
nop
adc
sbb
pop
xor
mov
mov
cmc
mov
cmpsl
push
je
xor
fsubl
jae
or
inc
jl
sub
inc
dec
jno
cli
rorl
push
rcrl
movsl
dec
je
xor
lea
push
hlt
loope
sbb
dec
popa
pop
jo
je
out
pop
adc
and
shl
fisubrl
loope
subb
push
mull
jg
push
flds
inc
fsubrl
nop
cmp
sbb
scas
xchg
pusha
ds
inc
mov
jle
jnp
push
pop
cli
jno
push
lock
mov
lea
xor
jne
cmc
in
fmuls
call
dec
lret
mov
add
pop
add
xchg
jno
xor
ds
jecxz
lods
mov
mov
sub
in
pop
dec
xor
scas
sbb
arpl
fdivrs
mov
mov
cs
daa
push
push
std
lds
cmp
push
cmpsl
test
aam
cmp
push
ror
loopne
mov
fs
sub
test
andl
ficompl
mov
jle
loope
mov
in
fisubrs
xchg
jl
fs
aam
filds
pushf
and
sbbl
in
mov
stos
out
adc
fwait
pop
gs
add
ficomps
sbb
sub
mov
in
or
or
aad
adc
xchg
mov
cmp
ficomps
add
push
mov
push
out
ljmp
dec
mov
inc
push
or
fwait
and
fmuls
xor
pop
xchg
push
loopne
cmpsb
mov
cmp
mov
inc
ja
push
popf
shrb
cmp
dec
mov
gs
xchg
cmovle
rol
ror
push
in
push
js
loope
pop
mov
push
out
cli
push
push
mov
push
inc
xchg
stos
pop
dec
jmp
shlb
adc
test
jno
jle
scas
scas
jp
xlat
inc
fdivs
xor
cmp
test
jecxz
push
dec
jb
test
dec
sbb
fwait
push
mov
jnp
push
int
and
mov
int
ret
sbb
fsub
js
and
fwait
xchg
pusha
xchg
lock
jne
iret
sbb
pop
xor
movsb
paddq
out
cmp
xorb
arpl
jns
jae
lods
inc
lock
movsb
mov
or
pop
xor
push
adc
fimuls
dec
in
add
sub
aas
cmpsb
mov
lods
add
xchg
faddp
mov
arpl
pop
decb
mov
mov
hlt
jge
je
in
enter
shlb
xor
push
cmp
or
imul
push
and
pop
mov
mov
cmp
lds
pop
add
ja
test
out
test
adc
and
out
fistl
fidivl
jne
fcomip
xor
adc
inc
bswap
cmp
mov
mov
inc
in
jmp
mov
out
std
inc
and
adc
and
cmc
adc
inc
add
mov
pop
mov
outsb
mov
mov
cmp
into
call
or
out
gs
xchg
cmpsl
xor
in
or
in
mov
movsl
push
mov
aam
xchg
cmp
loopne
fs
sub
pop
nop
inc
or
mov
xor
xor
and
int
stos
jne
jp
gs
cmp
pop
pop
in
sti
add
sbb
mov
mov
in
sub
push
bound
mov
mov
adc
mov
mov
popf
imul
js
or
xchg
dec
dec
sub
fcoms
jge
test
inc
and
hlt
xchg
insb
js
add
mov
mov
les
loop
push
jmp
loop
jecxz
jmp
xor
sbb
cmpsl
cmpsl
out
cmp
lods
and
jp
inc
movsb
icebp
cmp
inc
cmpsl
out
jno
fadds
xchg
mov
loope
cmpb
adc
ds
push
mov
enter
sahf
fldcw
pop
out
xchg
iret
xchg
in
dec
jnp
pop
inc
or
push
mov
je
rcll
sbb
int
mov
push
inc
jae
adc
stos
inc
nop
or
add
push
rorb
inc
mov
and
loope
xor
ljmp
push
insb
js
rorb
jg
into
cmp
aam
stc
sbb
arpl
scas
lds
lds
push
push
pushf
lahf
push
dec
pushf
push
inc
cmp
adc
push
cmp
xor
fisubrl
inc
shl
push
adc
adc
cmpsb
std
adc
sbb
add
iret
sub
ss
mov
jne
sbb
cmpsb
sub
dec
in
sahf
push
mov
ljmp
inc
test
in
or
clc
ds
jo
mov
nop
cmp
adc
push
mov
loopne
repz
adc
iret
sbb
aad
pop
add
xlat
ljmp
ja
pop
jne
jecxz
dec
and
dec
inc
ja
clc
popf
sahf
scas
outsb
and
icebp
mov
fistl
test
cmp
shr
cs
fcoml
addb
push
fisttps
sbb
and
bound
inc
flds
addr16
es
mov
mov
and
into
imul
mov
and
sarl
sahf
xchg
sub
incl
add
test
adc
mov
imul
bnd
sub
out
lds
cmp
jo
icebp
dec
inc
in
negl
ljmp
rolb
cmpsb
cmp
ret
push
test
test
loop
insl
sub
sbb
je
daa
jnp
ja
cmp
mov
push
outsl
mov
adc
dec
dec
xlat
add
xor
outsb
out
imul
mov
sbb
fcomip
pop
dec
lahf
or
les
xchg
or
mov
std
test
subl
or
sarl
push
mov
popa
clc
les
xchg
idivl
jne
adc
add
sbb
data16
fnstcw
cltd
das
xchg
shlb
add
stos
fndisi(8087
adc
pop
mov
lods
sub
pop
ljmp
ja
ljmp
stos
rcl
mov
fsubrl
aas
push
ds
sbb
les
decb
sbb
mov
movsl
addb
sbb
fidivrl
and
dec
icebp
dec
stos
out
negb
and
je
cmp
dec
mov
lods
cmpps
imul
mov
test
jnp
mov
loopne
out
mov
aam
lods
mov
push
bound
lods
ja
sub
fldenv
pop
mov
rcl
inc
cs
test
mov
pop
lret
lock
mov
sbb
inc
xor
cmp
stc
add
fimuls
and
scas
mull
fcoms
pop
sahf
cwtl
add
adc
iret
push
pop
mov
and
xor
dec
ljmp
pop
outsl
push
adc
scas
cmp
ret
pop
fbstp
or
xchg
dec
icebp
push
sub
cmpsl
dec
sub
xor
push
mov
out
push
jns
gs
cmp
push
js
inc
cmp
and
push
adc
je
shrl
mov
loope
js
fsubl
add
mov
add
cmp
xchg
aam
aam
pop
scas
and
movsl
adc
mov
mov
sbb
repnz
daa
in
inc
sub
insl
lea
mov
scas
dec
cmp
sub
dec
jb
and
pop
adc
aam
mov
loope
shl
ja
enter
adc
or
xchg
dec
and
push
clc
mov
jo
ljmp
or
leave
rcl
into
pop
xchg
inc
mov
repnz
mov
icebp
xchg
aaa
add
adc
jnp
out
mov
cmp
sarb
mov
xor
call
mov
push
inc
cmpsl
cmp
pop
jmp
ljmp
movsb
aad
fisttps
mov
jp
xchg
sahf
xor
fdivs
dec
mov
in
and
repnz
dec
mov
sub
pop
jne
aaa
enter
fnstenv
inc
loop
mov
dec
cmpsb
jbe
lahf
icebp
sub
inc
and
push
pop
mov
pop
cwtl
cmp
sub
loopne
mov
out
outsl
enter
pop
lahf
jecxz
lret
shll
mov
or
mov
fbstp
test
in
and
jmp
mov
shrb
ljmp
mov
aad
pusha
mov
lahf
sbb
dec
insb
ret
popa
mov
or
popa
cmp
popa
vpsubsb
movsl
push
es
mov
lods
cs
popf
sbb
cli
mov
mov
xchg
ret
fnsave
push
push
jno
test
xor
stos
or
jecxz
add
sbb
push
mov
nop
push
mov
mov
insl
push
cld
clc
push
inc
inc
xchg
insb
insb
push
daa
sarl
fcoms
fistps
movsb
inc
out
in
das
xchg
addb
imul
sbb
fdiv
ficoml
sti
mov
ja
mov
cs
in
cli
pop
clc
outsl
stos
movsb
jmp
inc
xor
ljmp
push
iret
imul
pop
into
push
outsl
mov
pop
out
xchg
inc
xchg
adc
fimull
mov
pextrw
test
mov
adc
mov
fsubs
mov
outsl
icebp
cmpsb
and
jb
cltd
and
scas
inc
lret
xor
enter
push
or
push
sbb
inc
and
xor
mov
mov
data16
or
xor
mov
popf
mov
jmp
mov
jbe
and
pop
nop
xor
dec
mov
and
xchg
or
loopne
push
xor
xor
sbb
fs
dec
push
mov
aas
jp
pop
push
clc
jp
adc
xchg
or
scas
add
test
push
mov
xor
outsl
lds
dec
pop
fstpl
add
sbb
sarb
ret
mov
das
lret
insl
dec
dec
test
fsubrp
cmpsb
mov
lods
insb
add
and
fldl
js
pop
jecxz
sub
leave
mov
cmp
clc
cmp
stos
push
cmpsb
jno
stos
test
iret
jnp
lret
in
dec
dec
bound
sub
dec
mov
jmp
stos
bound
in
pop
xor
cmp
mov
sub
push
mov
cwtl
lock
xor
pop
push
mov
out
outsb
push
dec
and
pop
sub
fnstcw
add
xor
test
repnz
mov
popf
cmp
orl
sub
lret
dec
lret
out
dec
cmpsb
cld
sahf
mov
subb
and
lds
cld
or
cmpsb
cmc
cltd
lock
add
imul
fcoml
rcrl
and
push
pop
fisttps
das
repz
jbe
cmp
gs
push
fwait
lods
repnz
fstl
pusha
jbe
mov
addr16
fsubp
loopne
inc
les
push
cmp
dec
pop
jl
shll
mov
nop
push
push
dec
mov
loope
aaa
stc
mov
xor
mov
sub
push
dec
js
jnp
fnstcw
cmp
lahf
sti
insb
pop
xchg
and
xor
daa
mov
incl
mov
push
pop
push
cmpsb
push
push
or
imul
mov
incb
xlat
inc
dec
lret
add
or
fidivrl
fnstsw
aad
aad
in
imul
cwtl
ss
out
sbb
xlat
jbe
push
mov
fsubl
in
add
and
adc
dec
mov
sub
jmp
out
into
add
lret
cmp
lods
pushf
test
jp
add
cmc
test
lods
cwtl
adc
xor
jp
jecxz
jle
jo
adcw
cwtl
in
mov
jb
out
dec
stc
data16
pop
shll
popa
mov
jl
outsb
sar
pop
xor
xor
and
mov
inc
xorl
inc
int3
out
lods
mov
out
pop
leave
mov
add
lea
jmp
lds
adc
fstl
fisttpll
push
faddl
mov
pop
jle
cmp
adc
add
xchg
cmp
iret
pop
jle
mov
dec
xor
cmp
inc
jge
mov
sub
xor
adc
inc
jns
ret
lods
push
lahf
jbe
inc
int
sub
aas
mov
out
ljmp
sti
xchg
jns
repnz
cmpsl
mov
repnz
mov
mov
sbb
dec
movsb
or
adc
test
clc
jge
add
sbb
lock
dec
pop
push
adc
test
fs
fdivrl
inc
jae
push
add
ret
xor
jmp
jge
rclb
dec
sub
dec
fsub
sbb
jg
js
xchg
jle
out
lds
xor
jle
loop
in
pop
mov
mov
adc
repz
sub
fs
fs
cmp
cmp
xchg
jbe
stc
mov
ficoms
add
ja
xchg
sbbb
cmc
in
inc
daa
mov
adc
rol
jo
xor
push
nop
and
fadd
leave
mov
mov
inc
lcall
pop
les
stos
in
jne
cld
mov
stos
jns
sbb
jge
insl
stc
jp
xor
rcr
mul
jmp
rorl
jnp
popf
inc
or
in
leave
dec
xor
mov
mov
ljmp
jne
mov
inc
call
lods
sbb
dec
push
scas
mov
ss
and
dec
and
sub
mov
cmp
xchg
jne
jg
mov
jbe
push
sbb
push
mov
push
mov
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
jmp
dec
xor
test
mov
or
bound
bound
or
xor
loop
stos
lds
jl
pop
ds
jnp
into
sbb
fimuls
std
pshufw
and
sub
data16
adcl
testb
or
fldenv
popa
dec
cld
cmp
mov
pop
test
int3
or
mov
cmp
mov
add
jg
sub
ret
push
cvtps2pi
inc
dec
in
pop
loop
sbb
mov
dec
sbb
fimull
mov
jne
cmp
push
movsb
sub
lds
adc
sbb
das
mov
ficoml
push
cli
cmp
mov
loopne
sbb
lea
inc
inc
push
call
sub
ret
xor
mov
fwait
rcrb
cs
in
je
out
jmp
loopne
sub
cli
push
jo
rcr
add
mov
push
fwait
inc
out
mov
fisubrs
dec
jae
jecxz
sub
int3
cli
sub
insb
test
andb
imull
mov
dec
jns
sub
adc
cli
mov
sbb
movsb
mov
mov
in
ret
stos
xor
jae
fldcw
xchg
sub
pushl
sbb
add
mov
sti
push
jle
cmp
dec
or
sub
pop
loope
dec
shll
hlt
lods
push
inc
daa
add
or
inc
test
subb
mov
imul
inc
jge
dec
add
loope
fcompl
ret
test
les
cli
pop
push
ror
add
inc
sarb
jmp
dec
sbb
add
inc
shrb
xchg
aas
in
loop
or
aam
adc
ss
ljmp
adc
std
mov
push
insb
outsb
pop
out
mov
jmp
in
mov
xchg
sbb
divl
push
subl
mov
jg
lret
aas
pop
sub
mov
dec
ljmp
mov
adcl
fsts
cs
fisttpl
xchg
lods
je
insb
cltd
pop
and
mov
mov
cwtl
sub
and
mov
xchg
sub
gs
stos
mov
sub
xchg
mov
or
or
cmpl
fisubrs
pop
and
jg
lcall
dec
xchg
lret
mov
fwait
inc
outsl
sarb
xlat
push
dec
and
or
xchg
in
pop
int
fidivrl
rcr
repnz
aaa
cmp
rcl
or
mov
add
adc
mov
sbb
mov
mov
inc
sahf
lea
add
add
leave
sub
pushf
bnd
jecxz
ds
in
pusha
call
mov
xchg
std
dec
mov
sub
adc
sbb
mov
and
adc
bound
or
adc
sbb
xrelease
icebp
dec
int3
mov
mov
sahf
test
mov
push
iret
out
or
addl
ss
je
inc
int
comiss
pop
sti
mov
mov
pop
js
addr16
mov
xchg
push
movsb
test
cli
lods
jl
scas
dec
loopne
pop
add
sbb
mov
in
fwait
outsl
push
add
in
clc
daa
inc
jb
add
dec
fldcw
add
pop
push
stc
mov
pop
icebp
loopne
nop
mov
cmp
scas
jp
into
mov
addb
sarl
fucomip
inc
fcoml
repnz
je
loopne
jbe
push
mov
pop
push
pop
mov
xchg
mov
dec
mov
movsl
inc
dec
dec
dec
pop
pop
lods
popw
cmp
dec
dec
mov
mov
inc
mov
or
clc
inc
jne
dec
dec
pop
push
mov
inc
xor
xchg
out
repz
addr16
mov
sbb
cwtl
xor
cli
cmp
lret
cmc
lret
cltd
cmc
dec
loop
sub
test
rcr
rclb
rol
pushf
enter
insw
pop
xchg
cmpsb
scas
mov
sub
in
aas
xchg
mov
and
dec
repz
cmp
add
xor
dec
fnstsw
push
xchg
push
xchg
jge
int
pop
gs
mov
lret
mov
mov
sbb
xchg
movsb
jbe
scas
loope
out
cltd
pop
cmp
les
out
popa
clc
lea
fdivrl
add
subl
out
pushf
arpl
adc
out
and
jbe
pop
insl
daa
int
insb
leave
call
pop
xchg
test
xor
fistl
adc
dec
mov
xor
out
mov
jno
jno
in
xchg
xchg
xor
adc
arpl
push
sub
nop
pop
in
cmp
xchg
mov
pop
jo
pop
ret
xchg
sbb
pop
jbe
repz
mov
xor
mov
fucomip
aaa
dec
enter
mov
int
or
cli
xor
in
stos
mov
popf
dec
push
add
lret
out
push
jle
int
in
add
lods
stc
mov
mov
and
jl
cmp
mov
mov
sti
and
mull
les
mov
out
pop
push
push
aad
xchg
jmp
and
sarl
mov
push
lcall
or
repz
xchg
xchg
scas
xor
sbb
xchg
mov
sbb
mov
lahf
in
ret
repz
xchg
dec
mov
enter
dec
dec
test
aam
push
in
dec
sub
push
jno
out
sti
and
insb
notb
scas
push
jmp
in
cmp
xchg
repz
jmp
jnp
inc
or
lcall
dec
mov
xor
pop
ss
and
xchg
and
add
loope
jbe
and
lea
lea
cld
mov
out
hlt
adcb
repz
in
mov
int
aam
mov
cmpsl
fisubs
sbb
mov
dec
movsb
loope
mov
ds
xor
test
shl
insl
add
push
mov
test
mov
dec
xorb
mov
mov
lods
inc
and
push
mov
nopl
cwtl
pusha
xlat
pop
fisubrl
notl
mov
push
cmp
js
insl
mov
popa
adc
mov
push
mov
cmpsb
mov
lahf
xor
jb
xchg
data16
fdivr
ss
xchg
fs
inc
lods
xor
cmp
add
and
lock
fistl
js
xchg
shll
push
hlt
mov
pop
scas
xchg
or
out
pop
iret
sub
out
pop
pop
into
das
and
imul
cmp
mov
push
cmp
jmp
pushf
xor
je
ret
out
orl
inc
sahf
loope
leave
pop
gs
xor
mov
loop
and
xchg
adc
push
and
jmp
cli
imull
movsb
cmp
imul
ret
pop
xchg
mov
nop
adc
and
lods
xchg
jo
rorb
stos
xchg
out
cltd
dec
jae
fs
jp
mov
push
nop
sub
lahf
out
adc
and
xlat
mov
mov
xor
cltd
mov
push
inc
mov
lret
jg
out
or
cltd
jp
aam
xor
scas
adc
xchg
sub
xchg
aas
orl
ljmp
movq
jo
mov
test
test
testb
cmp
roll
pop
out
loope
push
scas
les
shrb
mov
call
or
inc
adc
mov
lods
cmp
dec
cmp
lds
jecxz
jecxz
dec
push
cmp
xor
nop
cs
iret
out
test
mov
pop
cld
mov
adc
jmp
cmp
aaa
jno
test
outsl
and
lods
mov
jbe
fwait
pushf
fistps
int
inc
or
jns
push
dec
lret
push
repnz
mov
sbb
sub
mov
mov
in
cmp
dec
inc
aaa
push
dec
pushf
out
outsb
sub
jecxz
in
jle
dec
and
mov
iret
add
xlat
mov
movsb
mov
sbb
cmp
decb
inc
dec
pop
cmpsb
and
ss
jmp
and
aaa
loop
in
mov
and
add
sbb
cmpsl
fmulp
andb
stc
in
xchg
push
arpl
pop
adc
in
cltd
push
xor
enter
lret
push
subb
xor
arpl
jp
jne
pop
scas
mov
mov
fildl
movsb
test
or
and
dec
push
loop
mov
xor
jecxz
pop
ret
int3
rolb
add
repnz
xor
cmpsb
xchg
cmp
rcll
cmc
and
popf
push
inc
out
cmp
cmpsb
mov
dec
push
fildll
add
inc
mov
fistpl
jns
movb
lock
cwtl
rol
add
adc
test
les
mov
rcrb
fwait
lcall
cmpsl
sbb
test
fsubs
cmp
xor
loope
cmpsl
divl
mov
rcrb
or
cmp
cwtl
inc
repz
out
jae
enter
xchg
pop
stos
int
jns
dec
push
test
mov
leave
std
sbb
adc
jns
xchg
testl
lock
test
dec
pop
scas
xor
jle
jle
inc
stos
aam
add
xor
imul
sbb
aam
push
cli
loope
add
into
cmpsl
movsl
int3
test
mov
movsb
or
inc
xchg
jo
sbb
sar
fwait
das
dec
mov
test
push
mov
mov
cltd
sbb
icebp
pop
jb
sub
inc
mov
mov
nop
add
xchg
adc
mov
clc
fmuls
push
stos
jbe
or
or
xor
fldcw
jnp
loopne
or
inc
jp
daa
inc
into
mov
sbb
push
mov
cmpsl
xchg
fstpt
mov
push
test
pop
add
and
jg
xor
shlb
jb
jae
mov
nop
out
aad
fimuls
mov
inc
push
cmp
das
xchg
shl
sahf
push
aaa
lods
call
inc
loopne
cmpl
movsl
push
push
dec
data16
adc
repnz
insl
xor
ljmp
stc
aaa
xlat
xorb
daa
mov
mov
push
lret
cmpsb
add
lahf
cmp
fidivrl
mov
and
fildll
or
xchg
bound
outsb
mov
sbb
imul
jnp
sbbb
and
pusha
sub
sub
fnstsw
and
add
leave
sbb
ret
inc
xchg
xor
and
xor
push
aam
push
pop
pop
pop
repz
xlat
jb
mull
hlt
pop
enter
das
pop
lods
cmpsb
lcall
mov
xchg
dec
stos
cwtl
mov
dec
enter
adc
scas
test
scas
jne
inc
cltd
out
adc
fcmove
cmp
sbb
jo
jb
inc
mov
mov
lcall
pop
aaa
test
mov
fwait
push
insl
jmp
push
lods
fnstenv
stos
rorb
aad
dec
test
sub
inc
xchg
and
jp
clc
adc
pushf
push
jle
xor
test
sub
cmp
jle
dec
test
lods
in
jnp
fnsave
popf
addb
ja
sahf
sub
pop
fbstp
adc
call
sbb
out
loope
xor
je
xchg
js
gs
cld
or
pop
cmp
adc
mov
enter
cmc
fisubrl
leave
push
mov
ss
addr16
or
jne
xchg
data16
mov
lock
xor
push
and
les
adc
stc
loope
mov
xchg
mov
inc
or
test
aam
adc
sub
dec
negl
and
insl
pop
or
cmp
loopne
ret
jg
add
popa
jmp
rcrl
dec
fldl2t
inc
mov
push
inc
in
pushl
jne
fcompp
push
adc
ret
shlb
add
pop
ds
push
mov
or
leave
test
test
fnstsw
xchg
nop
push
mov
sbb
adc
pop
dec
scas
mov
out
mov
daa
je
sub
mov
mov
pop
sbbb
xchg
or
cmp
fwait
insb
jns
jo
sbb
cmp
or
hlt
dec
push
push
scas
mov
or
mov
gs
jge
aas
cmp
lock
andl
sti
inc
pop
xchg
in
jns
push
cmp
push
push
pop
imul
mov
mov
cmp
test
out
ds
ja
aas
scas
popa
xchg
adc
sbb
mov
sub
sub
mov
or
movsl
sub
scas
and
adc
je
bound
jmp
xchg
aaa
mov
xchg
clc
in
mov
movb
or
popf
pop
bound
nop
ja
xchg
loopne
dec
adc
into
rcrb
push
addl
mov
in
xchg
faddl
jbe
jmp
sbb
dec
out
lods
and
mov
and
lea
or
cli
adc
sub
fdivs
loop
sti
mov
xor
insb
aad
cli
mov
div
je
movsb
push
mov
xchg
xchg
int3
mov
sbb
ja
lock
loop
or
sbb
xchg
es
jmp
jb
ljmp
jae
popl
xor
daa
sub
popa
and
add
mov
dec
pop
mov
lds
mov
mov
mov
mov
subb
mov
xor
jae
inc
pop
inc
ret
movsl
cwtl
scas
shll
fdivs
enter
inc
adc
mov
add
xor
xlat
sbb
shlb
mov
mov
mov
test
sub
fsub
ja
mov
cltd
fimull
xlat
hlt
push
leave
xchg
in
adc
mov
fxch
rep
push
add
xor
xor
sbb
inc
sbb
inc
out
sbb
inc
cmp
gs
cli
data16
adc
push
cmp
jl
insb
movsb
jnp
leave
hlt
xchg
xchg
loopne
xchg
in
stos
sub
pusha
out
lret
sbbl
rolb
adc
and
cmpsb
daa
mov
fldcw
or
sahf
cmpsb
insl
adc
sbb
out
cmpsl
insl
adc
sbb
inc
mov
jnp
cli
xor
neg
sub
lea
push
adc
mov
add
adc
inc
jno
hlt
push
imul
aas
arpl
mov
cmp
xchg
test
cmp
pop
add
cmp
int
or
xor
pop
imul
clc
xor
jo
shll
mov
sub
nop
in
xor
push
fimuls
mov
inc
jnp
popf
std
shlb
xor
fadd
add
mov
cwtl
fwait
add
pop
out
sub
fwait
sbb
inc
or
cmp
cmp
fadd
jg
lret
push
xchg
dec
imul
dec
and
xlat
outsl
adc
out
mov
dec
push
mov
sbb
negb
cmp
xchg
xchg
and
not
xor
push
lcall
sbb
in
lock
and
fs
aaa
mov
insl
sub
jno
outsl
call
outsl
jns
lret
inc
scas
hlt
dec
enter
adc
lods
int
hlt
add
mov
add
int
xchg
inc
mov
add
loope
mov
mov
out
inc
ret
loop
in
loope
enter
repz
jge
push
sbb
and
subl
adc
jnp
jmp
xor
adc
inc
mov
push
or
std
clc
int3
lds
mov
inc
ficoms
subl
sub
add
add
and
mov
jmp
stos
orb
sqrtps
lds
adc
mov
mov
packsswb
pop
movsb
and
stos
dec
or
pusha
pop
faddl
in
dec
lods
fcmovu
pop
mov
or
dec
insl
push
push
aas
pop
ja
add
xchg
loopne
cmc
xchg
pop
mov
pop
jmp
xchg
fs
cli
nop
cmpsb
nop
shlb
incb
insl
sbb
jecxz
sti
arpl
js
mov
xlat
addr16
rcll
or
stos
push
fldcw
sbb
rclb
cmp
push
push
je
sbb
push
inc
xor
jmp
cmp
push
ljmp
fnsave
ljmp
sbb
les
lods
out
scas
pushf
and
xor
aaa
aad
sbb
std
sbb
aad
xchg
lea
imul
fwait
cmp
push
sbb
ret
add
push
int
mov
and
dec
xor
mov
lret
outsb
xor
das
int3
iret
jnp
inc
arpl
xor
nop
and
sarl
loop
nop
mov
fcmovnu
mov
iret
ja
and
addb
dec
pop
enter
and
dec
js
cli
and
pop
cmp
rorb
fildl
lea
lea
mov
push
mov
outsl
push
xchg
cmc
add
xor
xlat
test
rcl
aas
mov
inc
xchg
or
sub
push
sbb
fbstp
xchg
ss
and
faddl
test
loopne
lret
adc
cmc
jns
jb
mov
and
test
daa
sub
dec
or
testl
fiadds
sahf
into
cmp
cmp
in
inc
cs
sub
sti
xorb
cld
loop
mov
sub
daa
push
cmovbe
jo
cs
or
dec
xchg
and
ret
sub
insl
or
aad
jno
jno
sub
mov
jl
inc
sbb
xor
pop
scas
jl
imul
outsb
dec
icebp
cmp
sahf
sub
dec
lds
xor
xchg
xchg
insl
test
scas
mov
dec
cltd
dec
rorl
sbb
add
and
mov
inc
dec
leave
ss
ret
dec
mov
push
test
test
push
fldl
ss
movsb
dec
push
jl
mov
bound
add
gs
std
popa
sub
out
pushf
jno
mov
icebp
ja
lods
inc
pop
xchg
test
pusha
imul
in
xor
mov
push
mov
inc
gs
mov
push
daa
pushf
cltd
call
dec
addr16
mov
arpl
in
out
sbb
test
push
push
pusha
mov
mov
mov
xor
pushf
or
lods
xor
cmpsb
mov
or
scas
gs
clc
sub
inc
xchg
stc
jge
aas
adc
or
sti
push
push
cmp
xchg
xchg
mov
int3
outsl
pop
cld
push
mov
xor
divb
jbe
cwtl
xor
into
mov
dec
test
fxch
xor
cmp
jbe
or
lock
fnstenv
pop
add
imul
mov
int3
lods
cmc
lock
lret
cmp
outsb
idivl
sbb
mov
dec
fwait
mov
push
dec
pop
in
mov
sbb
xchg
mov
pop
into
and
add
dec
das
and
cmpsl
add
adc
xchg
mov
lret
and
cld
aam
inc
fdivr
subb
leave
test
mov
pop
ss
cld
ret
jp
fidivs
aam
stc
cmp
push
ret
jge
sti
popa
cmpsb
fidivl
push
popf
faddl
stos
lea
push
cmc
and
mov
inc
dec
mov
mov
shll
mov
out
call
push
cltd
out
pop
test
outsl
and
adc
dec
push
sbb
lods
cwtl
push
out
mov
test
icebp
js
jecxz
adc
fld
cmp
sub
shrl
fwait
imul
lods
ljmp
stc
cmp
sbbl
fxtract
imul
js
stos
pop
jmp
fildll
mov
push
sbb
cmpsl
fstps
nop
sbb
ret
adc
mov
dec
mov
jb
pop
mov
lods
sub
cmpsb
out
mov
or
mov
sarb
inc
pop
call
or
xor
jge
test
cmc
xor
push
sbb
fstpl
fcmovb
jae
insb
mov
pop
sub
inc
mov
jnp
push
mov
test
scas
mov
iret
cmpsl
xabort
jbe
xchg
das
adc
ret
jmp
pop
mov
dec
cs
test
aas
pop
cwtl
cmc
or
push
sub
inc
push
repz
push
nop
xor
push
mov
mov
js
adc
mulb
popa
cmc
ss
xchg
arpl
movsb
inc
insl
ds
in
dec
ror
mov
jo
and
loop
push
push
rcll
mov
sbb
xor
push
in
fldl
cmp
loop
jnp
rcrl
daa
imul
pusha
mov
or
sub
pop
lret
aam
dec
lret
push
iret
lock
fistpll
gs
xchg
call
pop
cwtl
and
nop
and
out
lock
add
in
je
in
pushf
in
jge
xchg
lods
inc
fucom
jne
sarl
mov
movsb
adc
or
mov
jne
ss
mov
das
add
lods
movsl
insb
jnp
xor
rcll
repnz
dec
in
movsb
insl
xchg
inc
pop
test
xor
lret
jmp
push
push
mov
mov
cli
mov
mov
ss
and
xchg
sbb
lcall
xor
int
jb
push
mov
mov
push
add
cmpsb
fimull
mov
cmc
sahf
outsb
push
rcll
test
or
pop
mov
xchg
pop
push
pop
jp
push
jae
arpl
xchg
cmp
lods
mov
xchg
adc
in
notb
outsb
mov
popf
or
ljmp
aad
testb
cmp
jbe
pop
nop
lock
out
data16
imul
pop
push
leave
and
divl
mov
cmp
js
inc
cmp
mov
mov
rcrl
add
dec
int
fstl
xchg
fbld
mov
mov
push
xor
xor
sub
je
lret
add
das
adc
shlb
hlt
cmp
sub
fcompl
push
ds
pop
ret
and
add
out
mov
std
cmp
xchg
xchg
fistl
and
push
xchg
mov
pusha
test
jno
xorl
add
push
or
mov
or
mov
cli
mov
adc
jbe
sarb
test
push
jp
das
mov
jno
movsl
pop
xor
xchg
and
mov
mov
jp
cmp
mov
xorl
fildl
mov
xor
idivb
cmp
dec
wbinvd
clc
and
ret
dec
mov
dec
mov
mov
mov
sti
lods
and
pushf
or
addb
scas
cmp
adc
xlat
lea
aas
rorb
pushf
or
outsl
sub
pushl
sub
dec
imul
sub
xchg
jnp
xor
mov
aam
call
imul
ret
push
xor
sbb
jge
mov
xor
jne
jmp
mov
out
das
in
rcr
jne
mov
js
push
jbe
jecxz
sbb
sbbb
push
add
or
aas
push
jns
jns
iret
imul
lea
ret
fidivs
test
cmp
and
cmp
xchg
pop
test
mov
mov
loopne
and
fs
testb
and
icebp
out
fsubs
jns
cwtl
mov
movb
div
js
daa
mov
and
je
into
das
mov
faddl
xor
mov
cli
cmp
pop
aaa
mov
shrl
loop
add
test
dec
mov
add
mov
or
dec
mov
loopne
xor
inc
out
shrl
jg
mov
aam
lcall
out
mov
xchg
cmp
sahf
cmpb
ds
cmp
xor
rcrb
cmp
in
nop
push
fmulp
inc
ret
cmp
bnd
ja
dec
adc
in
pop
pushf
adc
std
and
popa
cmpsl
push
lret
jbe
das
daa
xorl
jmp
sti
test
mov
imul
push
pop
bound
xchg
enter
pop
fisttpll
shrl
lret
inc
dec
sub
xor
push
divb
scas
sbb
scas
cmpb
imul
pop
repnz
xor
mov
notl
mov
or
add
and
xchg
sub
movb
mov
sub
mov
rclb
adcb
ret
cmp
js
popf
adc
int3
lock
out
mov
int
je
mov
cmp
or
popf
pop
lock
ja
adc
dec
fistps
and
fcmovu
les
popf
bound
das
adc
das
lret
mov
enter
clc
pop
shl
decl
subl
jl
dec
pop
cmp
rolb
stos
push
inc
cmpsb
jmp
pop
inc
nop
push
dec
lahf
cld
call
xor
xor
jmp
jge
mov
insl
jmp
sub
jp
mov
pushl
and
enter
fwait
jg
sti
dec
loop
cmp
std
stc
in
rolb
mov
insl
or
and
inc
mov
and
repnz
xchg
aaa
in
les
mull
repz
push
cmpsl
or
mov
push
xchg
lret
inc
pop
cwtl
dec
aas
fs
in
mov
rcll
lcall
scas
sbb
mov
sub
mov
fmull
pop
push
pop
or
or
cs
jae
push
bound
and
into
loope
inc
jno
lds
pcmpeqw
ljmp
add
pop
push
and
mov
shlb
mov
sub
mov
outsl
inc
cmpsb
jae
imul
jl
adc
fistpl
xor
lcall
push
iret
or
int
and
adc
test
hlt
or
mov
mov
jno
xor
test
inc
and
out
mov
sarl
je
dec
add
gs
pop
inc
fnstsw
ja
mov
neg
pop
or
jae
pop
mov
add
fwait
xchg
or
inc
mov
addb
mov
dec
xorl
test
fstps
dec
ret
movsb
sub
std
cmovae
outsl
dec
push
cmp
add
jnp
push
inc
data16
jne
push
sbb
dec
xorb
ljmp
jae
rorl
stos
out
dec
in
out
adc
and
jo
or
and
sbb
cld
int3
lahf
dec
push
jne
sub
cld
or
xor
add
aaa
ret
mov
jns
dec
icebp
cmp
jae
xor
mov
aam
ret
cs
cs
repz
ss
jo
sbb
jge
push
je
ljmp
das
xchg
js
bound
lret
mov
ds
arpl
outsl
lods
mov
sub
lds
and
mov
test
push
xchg
dec
mov
cli
mov
mov
loop
dec
push
rol
mov
or
sbb
cmc
testl
xchg
cmc
or
int3
bound
push
dec
lods
mov
pop
roll
add
pushf
fcmovb
push
test
xchg
call
adc
pop
push
push
push
and
in
sahf
std
daa
and
and
dec
into
sub
leave
lods
sti
shr
pop
ret
int
dec
arpl
call
bound
sti
ret
cmpsl
movsb
in
push
stos
sarb
mov
pushf
cld
pop
jno
pop
and
push
movl
push
stc
pusha
jmp
shlb
and
jne
mov
pop
jno
add
mov
sbb
outsb
sub
leave
pop
mov
je
inc
adc
shll
xor
mov
pusha
adc
adc
adc
xor
jmp
in
stc
test
jb
lds
add
jg
test
jmp
mov
cld
mov
sub
inc
mov
xchg
scas
inc
fwait
in
arpl
fmul
cli
shll
jno
in
mov
add
push
pop
mov
movsb
mov
jne
out
out
pop
or
inc
jp
sub
rorb
fsubl
jb
and
hlt
movsb
sub
inc
popl
add
pop
outsb
fidivs
filds
mov
jne
inc
outsl
mov
xchg
xor
test
repnz
fs
mov
aam
ss
jp
repz
mov
faddl
sbb
repz
pop
push
in
or
scas
fists
pushf
mov
pop
mov
imul
gs
pop
inc
cmp
sub
nop
loop
femms
jle
mov
xor
mov
out
mov
sbb
rolb
pushf
add
mov
cmp
sub
and
add
xor
lea
mov
int3
and
bound
movsb
mov
jb
mov
pmulhuw
loopne
scas
add
lret
jmp
sbb
out
xlat
mov
xor
sbb
leave
xor
ret
int3
dec
pop
pushf
xor
test
outsb
mov
mov
push
sub
dec
lcall
popl
insl
add
inc
cmc
imul
popa
fiaddl
xor
insb
pop
sub
xor
sahf
aad
pushf
mov
in
xlat
and
sub
jge
int3
pop
incb
aad
or
adc
dec
test
movsl
pusha
and
xchg
mov
pop
xor
inc
mov
movsb
cmpsb
jge
out
cmp
stos
out
test
nop
lock
ljmp
out
pop
into
rcl
imul
dec
ss
mov
inc
dec
cmc
jp
lahf
stos
imul
inc
xor
or
push
jmp
cli
or
mov
push
repnz
cmc
xor
int3
mov
mov
ss
adc
dec
pop
push
lahf
dec
push
push
les
rol
jp
scas
repz
push
ljmp
add
and
jns
insl
ljmp
mov
arpl
enter
scas
cli
push
js
cmpsl
jmp
mov
or
sti
xchg
cmp
insl
dec
popf
adc
pop
cltd
sub
jnp
or
stc
lcall
or
lret
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
pop
or
repz
sti
ja
stos
mov
adc
add
add
cld
lcall
jl
mov
cmpsl
cmc
push
test
movsb
jb
jns
jle
push
mov
loopne
icebp
dec
mov
or
xchg
and
andl
shlb
rcll
mov
mov
sbb
pop
jo
loope
out
mov
or
fstps
popa
push
adc
mov
add
add
add
shrl
adc
cmp
out
pop
xchg
push
lahf
int3
add
bound
add
dec
scas
aas
mov
xor
shrl
mov
xchg
fcomip
test
outsl
fdivrl
loopne
pop
xchg
jnp
aam
xor
dec
fsts
adc
enter
out
add
pop
out
jo
dec
fs
xchg
ds
lds
out
push
lock
push
out
pop
pop
je
xor
add
add
pop
sub
sub
addb
int
add
add
mov
arpl
mov
inc
add
rcrb
cmpsl
lds
push
fndisi(8087
icebp
mov
jns
mov
pop
aas
jnp
in
movsb
addr16
adc
enter
sbb
push
popf
xchg
add
inc
ret
in
sbb
inc
and
ficomps
push
inc
pop
add
add
add
das
and
aam
aam
ljmp
je
das
push
jb
arpl
add
bound
add
imull
lret
iret
bound
test
out
cmp
push
cs
mov
ja
test
and
dec
fucomip
pop
popa
push
adc
test
push
out
pushf
inc
jnp
dec
loopne
xor
scas
rcr
push
mov
mov
pusha
or
sub
inc
adc
jae
in
loopne
adc
loope
add
add
add
mov
sti
cmpsl
mov
dec
mov
add
add
inc
push
lods
outsb
mov
push
mov
sbb
cmc
xor
idivl
leave
leave
push
out
data16
test
insl
jecxz
xchg
stos
sub
sub
pop
mov
push
aaa
mov
jno
and
fisttpl
lock
shll
mov
add
add
add
out
lods
cmp
stc
stc
scas
inc
or
add
add
lods
rolb
cmp
jp
jl
xchg
sub
movsl
insl
dec
mov
fs
xor
std
xchg
pop
aas
dec
test
mov
and
adcl
inc
daa
dec
fldt
aaa
idiv
addl
mov
cmp
add
into
or
jb
in
pop
repnz
pop
pop
fwait
add
add
add
push
xor
gs
aaa
push
jbe
aas
mov
add
bound
add
push
int
es
repz
push
fadds
xchg
sahf
int3
out
mov
and
outsb
out
sbb
xchg
sub
fidivrs
inc
inc
mov
push
dec
push
jl
mov
jbe
pop
push
aam
lea
xchg
add
pop
xchg
lock
xor
xor
lock
jo
fs
int
cmc
divl
add
dec
inc
sub
das
jle
jg
imul
push
addl
jae
sbbb
clc
fistpl
in
out
test
ljmp
fs
fnstenv
in
push
cmp
outsl
xchg
dec
and
in
inc
add
bnd
lea
or
xor
clc
aaa
data16
add
mov
fimull
loopne
jecxz
test
dec
sbb
xor
add
add
addr16
and
mov
mov
add
loop
add
add
jae
stc
push
dec
outsb
inc
sahf
dec
shrl
mov
lods
cmp
jmp
cmpsb
and
stos
push
imul
inc
cmp
xchg
mov
je
sbbl
push
arpl
stc
mov
lds
movsl
popf
inc
sbbb
lock
xchg
and
mov
icebp
pop
jle
push
dec
adc
add
sbb
aad
add
add
add
or
ret
lods
sub
mov
inc
jno
add
bound
add
sbb
xor
daa
aam
push
gs
fmul
rcrl
stos
cmp
aam
std
xchg
aas
outsb
jmp
movsl
fisttps
iret
lahf
in
jno
xchg
in
xor
in
cmp
adc
lahf
xor
sbb
or
pop
push
pop
pop
sub
mov
push
xchg
or
insl
and
andb
sbb
add
add
add
fld
add
ror
outsl
clc
rolb
aas
shl
add
bound
add
das
cmp
push
cmp
xchg
lahf
cmc
iret
scas
cmp
cmc
xor
cld
inc
ret
loope
jmp
movsb
es
push
stc
lock
push
xor
push
lock
test
popf
rcrb
call
sbb
add
ret
fistpll
inc
pusha
push
add
add
add
popa
pop
lock
out
repz
mov
ret
in
jmp
jl
xor
add
add
sub
xchg
ret
jne
int3
repz
mov
add
add
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
insb
jp
jbe
ja
js
jno
inc
inc
push
jno
ja
dec
dec
dec
inc
jno
jae
push
arpl
sbb
cmp
inc
add
sbb
out
or
dec
xchg
dec
scas
dec
ds
js
cmp
dec
inc
dec
jae
inc
dec
xor
dec
pop
pop
pop
push
cmp
dec
xor
dec
cmp
dec
js
cmp
dec
inc
dec
mov
dec
xor
dec
pop
insl
pop
bound
dec
jns
xor
dec
cmp
dec
mov
dec
inc
dec
pop
jge
jb
subb
xchg
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
lea
outsl
xchg
outsb
xchg
jle
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
popf
pop
xchg
outsl
mov
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
lods
pop
mov
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lahf
dec
cmp
dec
inc
dec
pop
mov
outsb
ret
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lods
dec
cmp
dec
inc
dec
pop
int
ret
outsb
sarl
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
fstpl
outsl
loop
jecxz
repz
aas
dec
lea
dec
lahf
dec
cmp
dec
xor
dec
pop
in
pop
loop
repnz
repz
jns
jle
jns
cmp
jg
xor
dec
xor
dec
cmp
lods
dec
cmp
dec
inc
dec
pop
or
outsb
adc
jns
aas
dec
add
lcall
add
sbb
stos
sbb
sbb
jbe
inc
add
inc
add
sbb
ficomps
inc
add
mov
inc
add
inc
add
inc
add
sbb
lret
add
sbb
ficompl
inc
add
inc
add
or
sbbl
or
inc
add
inc
ds
insl
push
inc
imul
in
incb
aas
cli
mov
add
xchg
pushf
clc
mov
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
ljmp
add
add
jbe
mov
pushf
clc
sbb
push
pop
dec
or
add
or
insb
inc
inc
add
add
add
push
add
push
push
add
push
push
add
add
push
add
add
inc
add
dec
cmpsb
dec
lahf
dec
movsb
dec
insl
dec
bound
dec
add
cltd
dec
pushf
dec
fwait
dec
insl
dec
bound
dec
scas
dec
lods
dec
lahf
dec
mov
dec
xor
add
dec
test
dec
fwait
dec
xor
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
jae
jo
jno
jbe
ja
je
jne
mov
mov
lods
jge
jge
jns
mov
insl
enter
jb
test
hlt
test
test
fnstenv
mov
push
or
xlat
out
add
scas
adc
jge
fidivs
leave
hlt
cmpsb
cmp
mov
cmpsb
and
and
cmc
enter
inc
inc
add
jp
jle
inc
add
sbb
or
adc
imul
insb
push
imul
push
jp
dec
push
arpl
dec
dec
data16
imul
inc
push
jb
inc
je
inc
jae
dec
gs
dec
dec
pop
jp
jbe
pop
jo
inc
gs
dec
js
inc
js
dec
inc
inc
inc
push
dec
insb
dec
jbe
pop
jbe
inc
fs
push
inc
add
inc
outsb
imul
push
push
push
jne
insl
push
push
jo
addr16
pop
add
push
pop
inc
inc
outsb
popa
imul
jne
dec
je
bound
jns
bound
dec
ja
dec
inc
inc
push
add
outsl
inc
dec
outsl
pop
inc
jb
jns
inc
pop
dec
add
bound
pop
outsl
push
dec
insb
inc
push
inc
jo
add
add
je
insb
jae
inc
insl
je
push
push
addr16
jo
js
pop
dec
push
dec
jns
js
outsb
pop
jae
push
arpl
push
push
je
addr16
dec
inc
insl
inc
inc
inc
arpl
push
inc
popa
push
dec
imul
push
push
imul
dec
jns
push
inc
jo
imul
fs
inc
push
push
ja
fisttpll
mov
js
mov
loope
iret
aad
add
add
notl
lds
lea
push
pop
shlb
mov
and
shrb
mov
sbb
cs
lods
cwtl
inc
or
push
jae
mov
or
sub
add
jae,pn
adc
sub
or
and
in
jae
xor
cmp
add
push
xor
add
add
add
sub
cli
jl
xlat
push
adcl
mov
bound
add
mov
movlps
dec
fadds
mov
dec
sbb
xchg
and
jecxz
push
mov
cmpsb
sub
xorl
fisubrs
adc
xor
ret
mov
addb
adc
mov
dec
add
arpl
insb
aad
adc
cmc
cmp
push
pop
jnp
push
xchg
dec
data16
add
add
mov
jg
ljmp
push
xchg
add
bound
add
mov
loopne
pop
cld
xchg
jne
xor
xchg
mov
cmpsb
inc
pop
out
push
mov
cmp
push
mov
les
lret
stos
mov
mov
push
jno
icebp
sarb
mov
and
lcall
popa
push
mov
cmp
scas
sub
sbb
mov
out
cwtl
mov
add
add
cmp
cmp
in
fimuls
les
cmc
add
bound
add
xchg
xchg
jo
adc
sahf
mov
leave
pop
jge
cs
into
lods
sti
jmp
fstl
ret
lcall
test
cwtl
enter
in
jbe
loop
push
pop
das
in
pop
loopne
fimuls
mov
je
insl
xor
repz
sub
mov
push
cmpsb
jge
jp
icebp
sbb
add
add
mov
sbb
std
negb
sub
mov
xlat
add
bound
add
sbb
ret
cld
shr
lods
add
call
scas
testb
lcall
rsm
add
outsb
fwait
xor
xchg
dec
mulb
mov
outsb
fdivrl
jnp
sub
jo
sbb
and
lds
add
sbb
out
loop
mov
push
sub
lcall
add
add
add
xor
jb
inc
mov
jo
xlat
add
bound
add
mov
es
enter
popa
sub
dec
mov
je
loope
push
stos
mov
mov
addr16
lea
sbb
or
xchg
cltd
aas
repnz
loopne
outsl
pop
movsl
inc
mov
cmp
out
out
sahf
xchg
cli
andb
mov
cs
pop
sti
imul
divb
add
add
add
dec
in
fwait
scas
fdiv
pop
sub
add
fadds
add
add
out
cwtl
cmp
push
cmpsl
loopne
cmp
es
shl
mov
push
xchg
jge
xor
outsb
adc
in
imul
sub
adc
ffreep
shl
sub
mov
or
js
or
rorb
cmp
pushf
out
cmpsl
push
adc
lcall
testl
add
add
push
add
xor
jb
insl
xor
and
jge
add
bound
add
mov
out
jmp
jae
jg
aaa
sub
jmp
jno
sahf
adc
dec
mov
jle
jecxz
lock
in
outsb
mov
repz
sahf
mov
test
mov
test
mov
loope
notb
mov
sahf
pop
shl
mov
outsb
movsb
cld
cmp
lcall
adc
add
add
add
cmp
add
mov
out
cmp
add
fadds
add
add
mov
adc
shld
and
push
lahf
ret
nop
sub
test
mov
cwtl
add
aas
fsubl
adc
sub
mov
icebp
inc
mov
cli
int
xor
test
xchg
inc
dec
adc
out
xor
push
div
inc
add
add
add
jmp
repz
fimull
mov
xchg
cmovno
add
bound
add
fldt
sahf
test
jb
xchg
dec
pop
mov
add
loop
pop
push
repz
mov
mov
fstps
roll
cmp
fsubl
inc
jl
jg
fidivrs
mov
inc
leave
xchg
and
xor
pop
cld
daa
dec
push
mov
addb
add
lret
xor
add
pop
inc
pop
iret
pop
aad
ss
dec
je
nop
mov
bound
add
dec
mov
inc
outsl
pushf
movsb
movsb
ja
test
cmc
int
cld
xor
call
pop
jne
push
sbb
int3
pop
xor
and
sbb
out
cwtl
rcrb
mov
inc
mov
int
out
xchg
jae,pt
dec
std
mov
mov
loopne
xchg
push
lods
sbb
push
fs
cmp
cltd
add
add
add
fwait
test
jg
lds
clc
popl
add
add
xor
fnstsw
mov
das
mov
xorb
fldenv
fwait
mov
sub
in
sub
in
lahf
clc
outsb
addr16
add
jae
adc
rcrl
mov
repnz
bnd
fsubrs
leave
jno
lods
hlt
cwtl
iret
or
cltd
mov
test
test
mov
add
outsb
jae
lret
jle
repz
adcl
add
bound
add
mull
or
imul
test
pop
nop
lcall
jge
inc
cmp
pop
int
in
dec
jg
pop
xchg
je
mov
mov
mov
flds
idiv
mov
cmp
mov
push
jae
sub
dec
notb
pop
jge
test
mov
sbb
add
add
add
adc
adc
mov
lds
leave
fiaddl
add
add
loope
mov
ljmp
sub
ret
add
dec
imul
ja
out
adcb
stos
mov
mov
cmp
arpl
inc
sbb
iret
je
test
push
push
dec
shl
rclw
push
jne
add
repz
mov
fimuls
xchg
ss
push
test
aad
add
add
add
cmp
mov
rcrb
dec
cmp
bound
add
cmpsb
je
xchg
iret
icebp
in
jbe
daa
aas
lahf
and
in
xchg
mov
mov
add
or
mov
and
loop
push
fucomip
shlb
or
jns
mov
mov
popf
les
lcall
mov
pop
jmp
sub
pop
cmp
mov
adc
add
add
add
sqrtps
cmc
das
sbb
xchg
iret
inc
in
pop
fildl
add
add
daa
mov
data16
bound
fs
jnp
call
imul
mov
jecxz
mov
aam
in
mov
leave
sahf
dec
pop
fildll
push
cmpsl
icebp
sarl
dec
std
lods
mov
push
sbb
inc
inc
sbb
push
jle
ficoml
cmp
add
add
add
int
xchg
inc
cmc
sti
fildll
dec
mov
add
bound
add
rorb
cmp
daa
xchg
mov
mov
mov
xchg
and
jo
roll
daa
add
xchg
push
insb
adc
pushf
dec
mov
fs
stc
scas
pop
mov
fists
pop
pop
or
cmp
cmp
push
mov
or
call
xchg
lods
mov
add
add
add
adc
testl
adc
add
add
loop
mov
jmp
mov
scas
cld
pop
movsl
dec
icebp
fsub
push
lahf
sbb
xchg
sahf
xchg
in
add
bound
mov
pop
or
int3
pop
movsl
shl
popa
jmp
test
mov
pop
adc
push
mov
das
dec
mov
pop
push
xchg
ja
sti
test
mov
add
add
add
daa
push
imul
xchg
ret
jecxz
mov
add
bound
add
cmp
roll
push
out
jns
xchg
and
in
push
and
repz
and
jnp
xor
fdivrl
das
shrb
add
out
insb
add
xor
pop
pop
add
in
xchg
sbb
or
dec
sub
or
or
xchg
je
add
add
add
add
jne
jg
clc
cs
push
jmp
add
bound
add
mov
adc
xchg
bound
ljmp
jmp
xor
mov
inc
pop
or
mov
out
inc
pusha
mov
ds
sub
mov
shrb
jle
jbe
ror
leave
addr16
dec
xor
push
sub
pop
in
add
test
loope
add
add
add
or
dec
mov
je
lcall
add
bound
add
arpl
xchg
es
mov
sbb
cmp
lock
in
es
jmp
cmc
aad
ljmp
mov
lahf
pop
xchg
in
sahf
vpmacssdql
addr16
aaa
mov
xchg
jge
iret
or
add
inc
inc
in
and
inc
jns
mov
mov
lock
mov
add
add
add
push
mov
mov
xchg
adc
mov
imul
aam
sbb
mov
jbe
xchg
pop
mov
enter
mov
dec
lock
sbb
test
pusha
cmp
int3
sub
cli
pop
jo
rcll
movsl
lret
shlb
jge
out
xchg
rorl
xchg
lret
cmp
xchg
sub
in
inc
rcll
cmp
push
aad
add
add
add
xchg
fcmovu
fisttps
push
xchg
xchg
sub
adc
add
bound
add
sbb
xor
jge
std
adc
in
call
dec
inc
aad
ficoms
cmpsb
or
popf
inc
cltd
in
mov
mov
push
stos
out
inc
and
jne
push
xlat
std
dec
jae
pop
adc
out
mov
stos
or
xor
stos
out
fwait
sub
and
es
or
jp
in
mov
add
add
add
jle
out
sbb
mov
rolb
add
add
sbb
mov
sub
adc
cs
pop
mov
in
mov
mov
and
adc
shlb
or
push
xchg
inc
or
hlt
in
push
adc
sub
mov
mov
imul
mov
mov
in
rcrb
add
add
add
jo
and
cmp
xlat
push
stos
aad
add
bound
add
jl
pop
pop
push
addl
adc
pop
or
cs
lret
mov
ds
lea
addb
hlt
nop
or
lret
stos
and
lea
sub
fcompl
push
repnz
scas
adc
popa
jno
jnp
mov
pusha
or
pop
and
jg
mov
incl
add
add
add
popf
aam
and
sahf
aaa
roll
add
add
push
negl
jnp
stos
in
sbb
push
popf
jle
fiadds
inc
mov
adc
int
or
shll
sbb
inc
inc
push
xor
loopne
jno
adc
pop
inc
sbb
dec
and
sbbl
jecxz
lea
shl
and
xchg
add
push
stos
mov
pop
fadds
mov
add
add
add
hlt
mov
jbe
hlt
mov
and
cmpsb
pop
leave
push
xchg
add
add
sub
add
sub
pop
fldt
loopne
dec
pop
addb
scas
dec
out
sub
jno
iret
dec
adc
add
shlb
jmp
jmp
outsl
in
lcall
mov
xchg
add
lret
add
add
add
xor
into
mov
sub
out
in
sbb
sti
roll
add
add
and
jg
xor
faddl
sbb
imul
loope
addb
rcr
popfw
add
inc
cmc
rclb
lods
loope
insl
stos
and
cmc
and
xchg
sub
and
leave
sahf
sti
bound
push
pop
add
jmp
cmp
mov
roll
add
add
add
in
outsb
and
pop
mov
pop
rolb
add
add
push
pop
stos
and
lds
cmc
fwait
ror
mov
ficoml
dec
or
sbb
xor
and
aas
jno
jo
push
mov
rcrl
scas
pop
addr16
test
frstor
jl
cmp
pusha
insl
mov
push
notl
repnz
cmp
or
add
add
add
add
mov
and
fistpll
add
add
sub
mov
sub
repnz
or
jmp
adc
sbb
sbb
stos
xorb
lret
pop
and
push
clc
xchg
dec
nop
dec
push
adc
jmp
repnz
idivb
ljmp
ret
in
js
jmp
push
fnstenv
iret
cmpsl
or
add
add
add
mov
and
jg
call
into
inc
mov
cmpsb
test
push
and
add
bound
add
sub
or
roll
sub
add
sbb
add
fcompl
je
jno
inc
adc
adc
or
stos
xlat
lds
mov
mov
dec
rorl
push
pop
sbb
inc
cmp
push
push
fldt
mov
cmc
xor
push
scas
lcall
sub
sub
xchg
and
add
fisubrs
cwtl
sar
repz
or
out
adc
add
add
adc
sarl
bound
add
gs
pop
in
out
test
in
pop
inc
pushf
jae
sub
sbbb
push
inc
mov
fidivs
inc
negl
lea
sbb
in
lcall
scas
or
fimull
hlt
and
cli
stos
mov
jne
std
mov
add
add
add
int3
sbb
out
loopne
lods
adc
add
bound
add
mov
ret
jmp
stos
lods
push
repnz
test
xor
bound
rolb
jno
dec
jge
sub
cltd
add
cmp
dec
dec
pop
in
xchg
rcrb
div
insl
jnp
mov
mov
dec
ja
js
pushf
mov
sbb
cmp
adcb
add
add
add
push
test
fildll
mov
aam
add
add
lods
push
pop
aam
xchg
fcomi
gs
xchg
orb
adc
or
std
mov
push
std
xor
push
jnp
add
adc
and
mov
sub
inc
test
cmc
scas
popf
cmpsb
pusha
xchg
adc
das
loopne
push
movsb
xor
out
in
in
in
and
jg
mov
repnz
mov
xchg
add
add
add
fwait
loope
sub
sarb
add
dec
ret
add
bound
add
cmp
cmpsl
pop
stos
in
cli
subl
cltd
rol
lods
mov
dec
shll
add
mov
add
dec
mov
stos
pop
jne
fsubrs
lods
push
or
xchg
sbb
jne
sbb
dec
sbb
loop
bound
aad
orb
xchg
popa
popf
mov
cmp
add
add
add
or
ja
dec
cmp
dec
rolb
add
bound
add
insb
dec
jb
mov
sub
and
mov
fsubrl
test
inc
adc
mov
xchg
cmp
push
add
push
lcall
jae
jae
aas
pusha
mov
int3
fwait
out
pop
mov
mov
jbe
lret
scas
pop
mov
out
add
adc
sub
int
clc
jbe
add
add
add
arpl
jge
mov
daa
cmpsl
test
xchg
add
bound
add
test
call
test
fwait
out
cli
je
stos
push
inc
pop
inc
ja
pop
push
push
movb
fdivrs
add
xorb
leave
gs
pop
jae
inc
and
jge
insb
push
jg
mov
in
adc
pushf
stc
dec
dec
lcall
push
scas
xchg
movl
ss
xor
and
push
xor
fldl
add
add
cli
clc
xor
or
xchg
ljmp
xchg
ret
sbb
mov
push
push
lods
push
inc
ret
popa
aad
push
sbb
loop
push
push
lea
lea
in
jno
mov
andb
dec
pop
jp
dec
mov
stos
aad
fisubs
jmp
aam
enter
add
add
aaa
out
mul
aaa
cmc
xchg
lcall
ja
add
bound
add
mov
pop
sbb
or
jle
adc
pop
add
js
sub
bound
add
ret
dec
aas
aas
loop
and
mov
dec
pusha
sahf
dec
mov
inc
jl
dec
imul
ret
outsb
inc
cmp
inc
inc
in
add
xchg
sub
dec
add
mov
fst
add
add
add
push
aad
out
fucomip
ss
cmp
cmp
add
bound
add
into
cmc
inc
jae
mov
jnp
xchg
dec
add
sub
or
cld
sub
mov
cmp
push
xor
lods
outsb
int
pop
or
jmp
fwait
sbb
and
stos
stos
shlb
xchg
ja
addl
push
xchg
jnp
ret
fdivs
push
jbe
mov
add
add
in
cld
fisubrl
sbb
inc
xchg
cmp
add
bound
add
dec
push
jmp
xor
cmp
inc
and
jge
test
lds
inc
ss
fdivl
adc
cli
add
sub
sub
mov
loop
lds
nop
xchg
and
jo
mov
push
cmp
jg
frstor
and
lods
jmp
repz
mov
dec
fsub
cmc
push
fcomi
mov
add
add
add
cmp
paddsb
nop
sarl
fiadds
add
add
and
jp
insb
mov
ss
in
lret
dec
mov
xchg
fnsave
enter
inc
lds
js
sbb
mov
jg
push
sub
dec
pushf
pop
flds
shll
dec
sbbb
push
test
sub
sbb
pop
mov
loope
in
cmp
in
add
add
add
jle
call
cli
lcall
add
bound
add
shll
xchg
lahf
mov
fimull
ja
pop
sbb
test
jmp
mov
subb
push
ret
dec
and
shll
xchg
mov
cmp
add
mov
or
xlat
adc
dec
movsb
call
outsb
mov
cmp
stos
call
loop
push
aaa
shl
xor
popf
mov
add
test
and
pop
dec
inc
fistl
add
add
and
ljmp
aaa
mov
out
jmp
and
fstl
and
in
sub
out
mov
out
mov
call
fs
and
mov
cld
js
xor
fiadds
clc
lahf
pop
outsb
jno
mov
iret
js
sub
mov
sbb
add
outsl
mov
jmp
push
fcmovu
in
adc
ret
filds
add
add
fsubp
test
add
push
dec
mov
insb
cmpsb
pop
adc
cmpsl
je
push
arpl
rclb
lods
loop
jo
mov
jp
sti
dec
jae
out
rclb
cmpsb
xchg
orl
and
hlt
loopne
mov
xlat
insl
lret
push
xchg
mov
add
lock
push
push
push
cmp
or
aaa
add
add
add
stc
sbb
inc
jecxz
mov
sub
add
bound
add
jbe
leave
mov
pop
mov
jmp
sarb
mov
cmp
xor
repz
jecxz
inc
aaa
sub
dec
xlat
mov
out
or
inc
jge
in
and
je
jbe
test
dec
subb
fldl
mov
mov
fisubl
jae
push
push
add
add
add
mov
mov
icebp
and
lds
add
add
pop
mov
fwait
sub
ja
loopne
mov
iret
pop
inc
lock
push
mov
sbbl
adc
fbstp
bound
incb
stos
addr16
jmp
lods
lock
cmp
push
aam
and
jnp
push
mov
enter
jecxz
jae
bound
add
add
add
xlat
repz
das
cli
fists
dec
es
add
cs
add
bound
add
pop
inc
xchg
lods
pop
loopne
jg
shl
pop
mov
outsl
xchg
xchg
add
jge
and
xor
lods
mov
pop
sarb
xor
adc
aaa
dec
jb
loop
push
test
jns
pop
inc
xor
gs
mov
xor
repz
call
testb
fldt
pusha
mov
sbb
les
pop
add
add
add
adc
push
adc
cwtl
out
xor
cmpsb
push
dec
loope
add
add
dec
loop
loopne
inc
mov
pop
fadds
sub
jp
push
xor
dec
aas
dec
pushf
push
das
iret
fisubs
sub
out
cmpsl
jg
scas
mov
aaa
xlat
lods
inc
mov
xor
subb
aas
cmpsb
mov
lahf
call
push
lret
imul
test
cmp
rolb
add
add
add
inc
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
inc
cmp
pop
ss
pop
cmp
inc
inc
dec
pop
pop
push
dec
inc
add
xor
cmp
xor
aaa
add
xor
push
inc
dec
push
pop
inc
push
cmp
push
push
inc
xor
xor
add
cmp
dec
cmp
pop
dec
xor
add
xor
pop
inc
dec
pop
pop
xor
pop
inc
xor
inc
dec
cmp
inc
cmp
ss
dec
add
xor
dec
xor
push
add
aaa
pop
push
dec
dec
cmp
inc
xor
pop
pop
dec
push
xor
add
dec
xor
ss
xor
xor
push
push
add
push
pop
push
cmp
xor
pop
dec
dec
push
cmp
dec
xor
xor
xor
pop
add
pop
inc
xor
push
xor
inc
add
xor
xor
pop
dec
dec
xor
add
pop
aaa
push
dec
push
pop
inc
add
dec
pop
inc
dec
xor
xor
push
pop
push
inc
inc
pop
cmp
push
pop
push
inc
add
pop
pop
dec
inc
inc
add
inc
pop
xor
dec
cmp
xor
ss
pop
dec
pop
add
push
xor
pop
xor
pop
xor
xor
push
push
inc
add
push
xor
xor
pop
ss
cmp
pop
xor
xor
push
push
xor
push
pop
inc
xor
push
inc
aaa
inc
add
ss
dec
pop
pop
inc
push
pop
push
dec
inc
add
xor
dec
add
cmp
xor
inc
add
inc
add
add
inc
add
add
add
add
cmp
dec
add
pop
add
push
add
xor
cmp
pop
add
add
inc
add
add
xor
inc
add
push
add
add
add
dec
add
add
add
pop
add
add
add
add
dec
add
add
pop
add
add
add
add
xor
add
add
push
add
cmp
pop
add
add
add
add
inc
add
add
inc
add
push
add
cmp
push
add
pop
add
add
add
add
dec
add
pop
add
add
dec
add
add
add
xor
dec
add
add
add
add
add
dec
add
add
inc
add
push
add
add
add
dec
add
add
push
add
xor
pop
add
add
dec
add
xor
pop
add
add
add
dec
add
xor
pop
add
add
xor
dec
add
add
add
xor
pop
add
add
push
add
add
inc
add
push
add
add
inc
add
pop
add
add
push
add
add
add
add
add
inc
add
addb
addb
addb
addb
addb
addb
addb
addb
addb
add
add
add
xor
ja
add
add
xor
add
add
add
add
add
add
add
sub
add
sub
add
xor
add
daa
mov
add
cmp
add
add
jb
push
imul
aas
inc
outsb
jne
push
imul
popa
je
outsl
outsb
jae
je
.byte
