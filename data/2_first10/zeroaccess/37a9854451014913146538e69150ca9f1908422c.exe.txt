push
mov
sub
xor
jmp
into
rcr
aad
mov
daa
mov
jle
js
xlat
cmp
fld
pop
push
or
bswap
and
sbb
inc
bound
mov
or
mov
and
lods
fadds
pusha
out
outsl
adc
sahf
add
dec
lods
pop
sub
mov
lds
adc
xchg
icebp
dec
loopne
dec
call
mov
sub
sbb
xchg
sub
repz
out
cli
in
xchg
cmp
jbe
xlat
sub
add
sbb
xor
adc
fisttpll
cmp
arpl
rclb
fistpl
and
inc
push
aaa
adc
fstpt
dec
repnz
cmpsb
inc
push
or
fs
xchg
in
addl
cmp
pop
pop
cmp
xchg
cmp
add
cmp
fsts
sti
adc
dec
js
hlt
cmp
pop
push
sub
cwtl
mov
in
and
and
and
mov
hlt
aad
push
enter
daa
out
mov
jne
out
cmp
mov
movsb
cld
add
adc
mov
mov
outsb
mov
dec
jns
leave
jl
xchg
add
cmc
out
lcall
pop
imul
sbb
sbb
xchg
popa
or
cmp
adc
xchg
push
xor
xor
adc
data16
mov
lret
lods
aam
call
or
add
cs
and
push
and
inc
iret
pop
popf
inc
imul
out
jo
sbb
fsubs
pop
fmulp
imul
xchg
cld
mov
in
jle
into
mov
mov
mov
aad
adc
adc
inc
mov
push
les
add
sub
cmp
in
mov
cs
lretw
jp
sarl
pop
push
data16
test
inc
push
inc
dec
mov
jo
jecxz
fsts
subl
out
scas
push
mov
test
rorb
lds
imul
xor
or
dec
sbbb
gs
cld
test
dec
jno
ret
mov
nop
std
xchg
pop
xchg
mov
test
in
sub
js
mov
aaa
dec
cmp
pop
jg
jne
out
inc
add
adc
mov
mov
or
mov
movl
mov
mov
push
or
push
add
mov
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
adcl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
sub
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
jmp
leave
rol
leave
int
fimull
leave
rclb
jae
jb
jle
js
jle
js
mov
jmp
fdivrs
lods
jns
pop
inc
push
cwtl
aas
add
push
or
push
int
into
das
mov
jb
imul
jge
jl
lods
fnstsw
out
in
icebp
xchg
arpl
and
pop
or
and
pop
push
jno
aam
scas
xchg
test
pop
dec
cmp
push
add
cmp
adc
and
je
push
push
add
xor
mov
dec
rol
test
sbb
jno
repnz
jecxz
sub
aam
sahf
add
mov
jbe
insl
lahf
pop
jbe
lea
daa
mov
jecxz
sub
dec
dec
andl
shlb
push
xor
icebp
stc
popa
dec
adcl
pop
mov
inc
je
test
pop
scas
pop
jne
push
pop
insl
pop
insb
mov
mov
xlat
cmpsb
aam
int
std
shll
cmp
setb
mov
sahf
jl
mov
notb
xor
test
in
std
ja
cwtl
adc
jo
xchg
jnp
sub
pop
stos
jae
sbb
pop
fwait
outsb
xor
hlt
mov
int3
lds
sbb
nop
xor
cmc
dec
mov
cmp
insb
arpl
push
out
xor
std
outsl
inc
pop
popa
cmc
aam
cmp
jb
sbb
xor
std
aam
push
out
xchg
jnp
dec
add
stc
scas
cmpb
or
push
bound
stc
sub
jmp
jo
jmp
pop
stos
sarb
data16
insb
mov
lods
add
mov
stc
loopne
pop
xchg
out
lods
pop
mov
sarb
adc
mov
sub
dec
xor
xchg
sti
sbb
outsl
xchg
dec
rclb
or
ss
ss
or
test
leave
cmpsb
push
push
mov
fsts
push
fistl
mov
mov
xchg
xor
lea
out
dec
push
ss
mov
bound
cmp
sbb
daa
mov
dec
fstl
sub
add
pop
int
clc
addr16
adc
mov
and
js
leave
jge
ds
dec
lret
dec
push
outsb
sbb
inc
jo
push
sub
aam
push
jno
shr
dec
das
pop
int
fwait
xchg
test
dec
sub
add
xorl
mov
adc
lea
orl
mov
xor
mov
neg
mov
xor
jmp
ret
ret
leave
lret
ret
out
repz
jecxz
loope
add
jle
js
cmp
cld
out
xchg
or
xchg
inc
sub
insl
push
dec
inc
mov
mov
out
jns
fwait
cltd
sbbb
dec
add
ljmp
add
data16
jbe
icebp
test
fmuls
ljmp
sub
sbb
je
adc
icebp
pmaxub
sub
mov
cmp
fidivs
cltd
pop
push
push
push
outsl
or
out
lahf
inc
ficoml
comiss
cmpsb
shrb
in
insb
ljmp
or
imul
ss
shll
sub
mov
into
mov
push
sbb
mov
out
shl
test
div
sbb
sti
sahf
cli
into
popa
sahf
mov
sbb
adc
inc
mov
xchg
mov
adc
xor
fisttpll
mov
adc
lcall
lret
lds
outsl
repz
call
setge
arpl
popa
push
xor
adc
mov
sbb
fcompl
imul
fcompl
cmp
cwtl
inc
jb
sbb
push
imul
xor
xchg
ljmp
xor
adc
fwait
lock
cltd
cwtl
and
xor
xor
mov
or
int
xor
int3
mov
and
jle
lahf
inc
add
mov
jne
rolb
adc
or
loopne
and
push
test
aas
lret
push
out
and
fwait
lds
lock
xlat
insb
mov
outsb
adc
rolb
jmp
insb
push
addr16
xchg
xlat
sub
push
adc
or
loope
cmp
rorb
mov
sbb
xorb
pop
adc
in
cmp
jbe
insb
testl
inc
jp
jb
movsl
push
movsb
test
mov
pop
sti
sbbl
jge
xor
jne
movsb
jecxz
mov
out
stc
xor
add
jb
stos
inc
lret
mov
sub
jle
test
fwait
pop
leave
pusha
and
or
mov
lret
inc
leave
stc
lahf
xchg
pushf
add
and
int3
adc
sbb
outsl
push
cld
xchg
gs
movb
lret
jge
lahf
and
shl
divl
add
mov
sbb
movl
lea
jmp
xlat
ret
ds
fcmovnu
loope
xchg
lret
lcall
js
movlps
xchg
xchg
loope
addl
pop
cmp
push
gs
insb
pop
push
fisttps
xchg
cs
aaa
cmpsb
pop
pop
push
stos
push
stc
das
out
clc
and
sbb
inc
lods
imul
imul
scas
lods
jecxz
jno
fnstcw
jle
out
sub
inc
dec
mov
pop
add
cmp
daa
aam
pushf
sub
add
push
addl
cmp
mov
jecxz
mov
in
push
sbb
leave
fdivs
imul
lahf
lahf
daa
jp
enter
mov
fidivrl
into
je
ds
add
mov
mov
pop
jae
loop
popa
sti
xor
xor
adc
repz
ja
or
cld
or
lahf
mov
inc
addr16
movsl
out
loopne
clc
mov
outsb
xchg
pop
cli
sarl
pop
mov
call
and
cwtl
iret
lcall
or
inc
movsl
imul
xchg
jnp
adc
dec
adc
jecxz
and
fs
cmp
sarb
je
rorb
mov
mov
test
jae
cld
lret
or
rcl
jno
mov
add
mov
jg
pop
xchg
fstps
ljmp
sbb
dec
mov
mov
sbb
sub
int
dec
push
xchg
stc
movsb
adc
pop
jns
int3
aaa
mov
fcmovnu
mov
jbe
or
mov
dec
cmp
dec
ljmp
int
jl
data16
and
lea
call
xchg
xor
cld
mov
add
mov
gs
sub
rep
xor
xchg
mov
inc
cmpsl
test
mull
cmc
fildll
movsl
stos
popf
pushf
jecxz
pop
lret
ret
mov
push
xchg
cmpl
cltd
push
call
push
pop
popa
or
xor
adc
mov
add
cltd
add
test
inc
ljmp
adc
dec
jbe
outsb
std
andl
xor
stc
scas
inc
fwait
lret
xchg
cmp
add
add
or
add
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
sbbl
mov
decl
xor
add
mov
movzwl
and
mov
mov
mov
adcl
mov
xorl
mov
mov
movzwl
jmp
lret
iret
cmp
aam
leave
fldcw
lret
pop
jbe
add
js
jle
js
sub
addl
fistl
pushl
and
repnz
push
xchg
sub
sub
fildll
jmp
cmp
sahf
and
xchg
dec
inc
mov
push
fildl
push
fxch
sbb
mov
cmp
sbb
aad
aam
in
mov
or
dec
testl
repz
xor
ficoms
movsb
mov
je
cld
push
xchg
loope
fldt
cmp
fnsave
cmp
addb
mov
cld
xor
mov
lea
adc
out
cli
inc
pop
mov
loope
or
pop
push
loop
inc
cmp
jns
ss
cmp
xchg
js
cmpsl
mov
in
loope
jo
xor
push
leave
test
scas
pop
ljmp
lds
daa
cmpsl
pop
ret
push
out
pop
fwait
repz
rcrl
out
les
aas
sbb
cwtl
mov
lret
shrl
and
jmp
popa
lret
leave
stos
cmp
mov
into
xchg
sbb
adc
ds
inc
and
mov
iret
mov
adc
push
or
jb
pushf
dec
stc
or
mov
cmp
mov
cld
hlt
pop
push
bound
int3
pop
pushf
cltd
int
dec
dec
and
incb
mov
xchg
rcll
xor
aam
push
rol
push
popa
pop
addr16
xor
movsl
insw
xor
ror
fsubr
shrb
aas
mov
push
add
push
add
xchg
hlt
addr16
mov
cmp
push
pop
push
movsb
jp
std
or
mov
fistl
sbbl
adc
add
in
xlat
loopne
lock
pushf
loopne
sar
sbbl
or
push
inc
fldl
dec
cmp
nop
add
cmp
jae
dec
jb
addr16
mov
pusha
cmp
push
jg
xchg
cwtl
rorl
dec
xor
lcall
subb
insl
jecxz
ss
enter
imul
out
mov
mov
mov
cmc
setb
mov
sahf
adc
jne
and
jns
mov
sbb
dec
aaa
int3
add
fwait
push
insb
loopne
data16
jbe
int3
and
imul
movsl
sub
or
rolb
cmp
mov
test
add
icebp
cmpsl
inc
add
inc
or
add
add
add
or
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
jmp
mov
jmp
rcl
ret
fld
aam
push
shl
cmp
add
js
jle
js
enter
loop
hlt
sub
xchg
xor
ficomps
mov
fisttpll
or
mov
jnp
repnz
call
mov
leave
movsl
mov
and
and
test
out
movb
cmp
add
mov
adc
mov
jge
repnz
int3
sbb
jnp
das
ficoms
filds
dec
sahf
xchg
xchg
xor
mov
lock
outsl
stos
sub
lods
in
cmp
push
lcall
cmpsb
test
lcall
mov
inc
fldt
push
aam
xor
scas
hlt
dec
out
movsb
lcall
cli
adc
mov
dec
dec
sub
ficoms
mov
outsl
std
int3
jae
imul
in
gs
pop
adc
loop
or
mov
lods
pop
inc
mov
mov
sbb
insl
mov
adc
inc
loopne
sub
mov
sub
clc
je
aaa
insl
inc
or
and
mov
sbb
mov
cwtl
mov
jge
sbb
pusha
movsb
push
call
inc
dec
push
js
sbb
pop
jecxz
je
fucomi
bnd
icebp
in
add
xor
in
pop
xchg
sbb
fiaddl
out
outsl
xlat
mov
ss
xchg
sbb
iret
arpl
jb
mov
sbb
adc
test
add
adc
test
xor
jbe
lea
xchg
and
es
es
jne
ljmp
aam
dec
test
mov
lds
cmp
in
cmp
mov
mov
cmp
popf
adc
orb
adc
dec
cmp
popf
push
test
in
mov
jl
fcmovnbe
xchg
aaa
sbb
cmp
ds
scas
lret
ds
mov
mov
in
sub
lods
adc
jb
cmp
jo
sub
sub
fsubr
imul
jp
test
addr16
add
mov
jbe
arpl
sbb
or
sbb
add
jo
dec
inc
fldt
pushf
xchg
stc
out
xor
andl
add
cmp
jne
mov
mov
sbbl
xor
add
jmp
xlat
cmp
fxch
mov
lods
pushl
or
jle
js
out
cs
out
stos
aaa
dec
sbb
and
es
jge
and
cmpsb
js
push
dec
cmpsl
fsubs
movsl
nop
arpl
add
daa
cmp
ljmp
bound
std
and
mov
imul
adc
ss
insl
jo
pop
negl
outsl
push
std
cmp
fsubl
jo
mov
dec
mov
jge
or
sbbb
pop
ljmp
xchg
test
or
repnz
test
dec
and
rcll
je
sahf
sub
int
insb
push
cmpsb
mov
pop
rcll
mov
or
dec
lcall
pop
jno
in
add
mov
sbb
dec
je
sub
cs
pop
xchg
sub
cmp
mov
imul
js
pop
mov
mov
lahf
aas
jle
jnp
mov
push
push
icebp
rcr
add
mov
in
pusha
rolb
sub
inc
and
movsl
mov
dec
dec
mov
leave
iret
xor
pop
shl
aas
mov
push
mov
test
iret
adc
sbb
or
pop
ret
add
insb
nop
jmp
cld
mov
mov
mov
xor
mov
pop
xchg
or
xor
cmc
les
cmp
cmpsl
jbe
lea
xor
arpl
mov
cltd
adc
pop
inc
enterw
shrb
loopne
rorl
imul
outsb
cmp
addr16
or
jns
push
rcrb
mov
sub
hlt
inc
adc
enter
daa
mov
out
xchg
clc
mov
lahf
mov
hlt
bound
dec
cmpsl
mov
loop
push
sti
fimuls
adc
je
pop
add
xchg
dec
mov
fs
aam
ud2
or
sub
adc
or
push
popa
mov
ficomps
adc
pop
sbb
sub
fwait
imul
mov
xchg
sar
hlt
mov
hlt
push
mov
fsubrl
aad
idivl
loope
jns
add
pop
jle
outsl
lods
jmp
out
inc
push
xchg
mov
push
and
mov
pop
cmp
lahf
mov
cmc
mov
test
or
add
mov
jmp
aas
lret
ret
aad
flds
inc
fs
jne
mov
js
jle
js
dec
push
dec
xchg
movsb
sarb
jmp
mov
pop
mov
inc
cmp
and
sub
fidivrs
inc
jno
stos
adc
mov
mov
push
cmpsl
fs
xchg
push
icebp
addr16
das
adc
loop
jne
nop
and
sbb
jmp
out
pusha
add
mov
repnz
jle
inc
cmp
popa
insl
jbe
scas
daa
sbb
add
sbb
pop
jmp
cmp
add
inc
jnp
xor
stos
sub
push
sbb
mov
xor
mov
bnd
cmp
add
sub
cld
maxps
scas
sti
fsubl
xchg
out
mov
outsl
dec
xlat
cmpsl
jo
dec
jne
sbb
xchg
sbb
xor
and
mov
pop
pop
or
jp
adc
ja
in
addr16
jp
add
or
in
mov
sub
mov
es
adc
push
icebp
push
pop
imul
pop
nop
dec
jl
int3
idiv
mov
cmpsb
lcall
loopne
testb
ljmp
addr16
adc
je
sub
inc
or
das
pop
loop
mov
mov
jp
ret
or
in
mov
idivb
leave
movsl
sub
nop
cmp
stos
xchg
xor
shlb
out
dec
push
adc
sbbl
stos
cmp
ret
and
int3
pop
mov
push
idivb
adc
jbe
pop
cmp
repz
mov
mov
pop
clc
sub
or
test
lds
lods
sub
inc
in
adc
adc
rol
popf
stc
lock
call
mov
jmp
jp
mov
sarl
sub
mov
je
push
xor
cld
inc
movsb
or
ret
movsl
addb
cld
cwtl
lock
and
and
pop
adcb
xchg
push
mov
push
or
inc
dec
pop
push
dec
jb
sti
push
dec
dec
pop
rcrb
sub
lds
pop
sub
cmp
sar
movsb
clc
mull
xlat
jp
lcallw
xor
stc
cmpsl
ja
loop
jmp
nop
pusha
call
inc
mov
int3
xor
adc
into
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
lea
xor
sub
mov
movzwl
cmp
mov
movzwl
jg
xor
jmp
ret
ror
into
fcmovnbe
out
dec
stos
sub
js
jle
js
pop
loop
push
jnp
adc
sbb
daa
fisubrs
push
insl
out
fstps
mov
in
aam
neg
push
movntq
bound
popf
addr16
cmp
stc
lds
and
sti
xlat
out
xchg
dec
push
adc
gs
test
add
sarl
test
out
add
or
push
fchs
mov
add
negl
mov
xor
xchg
fs
jo
mov
icebp
mov
mov
xchg
lds
dec
cmp
pop
dec
or
inc
aaa
or
mov
sub
adc
ds
sahf
mov
scas
lods
xor
mov
xchg
add
mov
loop
out
and
cmc
shr
mov
jmp
test
stc
outsl
in
jge
fs
decl
mov
insb
daa
ss
jmp
cltd
pop
adc
mov
xor
jecxz
add
and
add
and
inc
jae
test
ficoml
cmp
mov
jbe
adc
jge
xchg
cmp
or
push
xchg
iret
xchg
imul
in
mov
or
frstor
nop
daa
lret
ret
rcrb
mov
popf
xchg
sub
cmp
popf
adc
and
sub
jmp
mov
nop
fs
and
push
stos
aam
lock
fildl
jecxz
lret
jne
inc
and
mov
xlat
sbb
lcall
bound
lods
xchg
dec
xor
push
popf
cwtl
jne
decl
push
mov
mov
outsb
jmp
out
imul
std
mov
mov
and
push
pusha
xchg
rorb
xchg
popf
aaa
stos
inc
or
and
mov
test
dec
cmpsb
out
dec
inc
push
insb
inc
add
bound
sbb
jg
sub
lret
jne
jle
loope
shl
cmovae
pop
sbb
jno,pt
jge
fistl
hlt
adc
divb
pop
outsb
fldt
adc
dec
sbb
repnz
jmp
lods
xchg
cmp
je
aaa
insl
out
jecxz
sub
stos
jno
lods
repnz
cmp
xor
inc
inc
jge
mov
lcall
int
rcr
aad
bound
sbb
cmp
jle
js
jmp
xchg
test
in
ljmp
xchg
fidivs
shrw
dec
addl
inc
rorl
xchg
or
dec
pop
jb
jl
int3
push
mov
xchg
inc
bound
pushf
pop
shl
ss
outsl
and
inc
aad
fdivrs
fwait
dec
fbstp
mov
inc
sbb
push
pop
cmp
lcall
sbb
push
lret
ror
cvtps2pd
cmp
es
fdivs
xor
push
fldenv
lahf
or
or
inc
enter
push
mov
jbe
paddusb
xor
jno
sbb
out
mov
jg
rcrb
sub
dec
xor
cwtl
popa
cltd
call
fildl
mov
inc
setle
sub
mov
cmpb
cmp
lock
push
dec
push
fstl
icebp
ljmp
cmp
mov
repz
mov
and
xchg
hlt
or
cwtl
lcall
mov
lods
ret
out
lods
std
jbe
call
cmp
push
testb
mov
push
fnstcw
aam
add
or
in
mov
lret
imul
push
or
adc
mov
xorl
ljmp
nop
movsb
sahf
insb
loope
pop
xor
jg
push
or
mov
ret
addr16
pop
ds
mov
lahf
shlb
adc
int3
pop
aaa
cmp
lret
cwtl
sbb
cwtl
push
dec
jbe
lret
and
mov
add
add
add
mov
fsubrl
ljmp
and
test
jp
bnd
aad
aad
adc
out
icebp
nop
cmp
mov
arpl
sub
pop
das
insl
push
aas
pop
lahf
mov
mov
div
xor
pop
sti
pop
xor
inc
jne
into
push
sarl
fcoml
loope
rcll
xor
sbb
lcall
repz
scas
add
pop
icebp
je
pushf
fistps
adc
sub
outsl
adc
sub
add
sub
icebp
xchg
aaa
jp
jo
xchg
out
aas
lea
cmpb
push
xchg
xor
cmc
mov
out
and
imul
lock
repnz
daa
mov
aas
movsb
fsubs
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
jmp
leave
vpsubusw
leave
repnz
cld
sbbl
js
jle
js
jo
xchg
cwtl
xor
sbb
dec
mov
inc
lahf
imul
cltd
cmp
scas
loop
inc
mov
sub
test
insl
inc
sbb
sbb
mov
aad
or
insl
test
mov
insl
jbe
inc
jg
addr16
mov
jno
pop
shlb
pop
dec
jae
outsb
jbe
push
dec
push
xchg
icebp
push
mov
xchg
dec
fldcw
sub
inc
into
sub
dec
movsb
aad
outsb
test
dec
push
add
call
mov
mov
movsl
jbe
repnz
andl
orl
push
aad
sbb
push
outsb
sti
mov
cli
scas
fstpl
popf
or
sub
lahf
test
mov
push
sti
mov
sahf
xor
and
fadd
sahf
filds
pop
divl
cmc
loop
jmp
test
adc
js
push
add
js
bound
xor
lret
mov
sahf
sti
jno
mov
into
movsb
dec
adc
leave
cmp
js
fistpll
arpl
movsb
fwait
cwtl
sbb
pop
call
insl
dec
push
sub
mov
mov
aas
fldl2e
pop
icebp
cs
fildl
push
inc
aaa
mov
push
loope
push
lsl
fbld
out
enter
scas
jae
cld
jns
xchg
inc
movsl
add
dec
int
aas
cmp
enter
jne
scas
and
dec
jle
mov
addl
sbb
push
push
cmp
and
orb
pop
rcrb
pushf
in
dec
cmp
test
out
push
aad
cltd
adc
insl
xlat
inc
into
es
sub
and
imul
std
jp
xchg
jecxz
dec
cmpsb
lcall
sbb
ss
mov
mov
mov
jae
cmp
fsubl
push
andb
fisttpll
out
data16
cmp
push
fcoms
and
xor
ret
sbb
mov
clc
aam
lcall
pop
push
out
addl
or
fwait
adc
mov
mov
repnz
addr16
in
fwait
outsb
ret
mov
bnd
aas
mov
repz
jbe
fmull
xchg
push
frstor
clc
cld
push
xchg
mov
mov
inc
xor
mov
mov
jmp
ror
ror
ror
test
xchg
push
mov
js
jle
js
sub
push
test
popa
fwait
inc
jns
and
cmp
mov
roll
imul
cld
into
xchg
scas
movsl
or
xchg
fsubs
outsl
or
outsl
jecxz
adc
or
push
in
inc
sbb
hlt
mov
or
jl
arpl
imulb
mov
add
mov
rcrl
push
into
push
pushf
add
pop
jb
aas
sar
mov
loope
leave
xchg
sub
cmp
add
or
inc
mov
and
imul
mov
xchg
mov
jb
mov
sbb
or
push
and
jmp
roll
gs
push
sbb
mov
dec
cwtl
jp
cmp
out
jmp
and
fstpl
ret
cld
ficomps
mov
data16
movsb
push
add
pop
imul
shrl
call
rcrl
ss
movb
pop
sub
fcomps
mov
push
je
inc
jae
push
adc
jp
inc
pushf
test
cwtl
rcrl
push
dec
sub
insb
pusha
mov
es
scas
lock
push
cmp
xor
cli
xor
test
sub
jge
cmpsb
nopl
fidivrs
fdivs
mov
xchg
aaa
mov
cmpsb
add
jo
mov
inc
push
fcomp
push
lret
out
enter
test
xchg
dec
cmovg
aaa
sub
repnz
cltd
mov
cmp
pusha
adc
inc
cmpsl
in
hlt
mov
les
lds
sub
fnstcw
adcb
mov
mov
fs
orb
out
push
gs
sub
les
lods
and
or
pop
cmc
xchg
rcr
mov
daa
jmp
pushf
out
add
iret
adc
mov
xor
loopne
fisubrs
and
fcoms
mov
fisubl
and
pop
add
shl
jg
out
je
jb
inc
in
pop
fcomi
push
sub
popa
pop
pop
jp
cltd
xchg
inc
jl
mov
push
mov
movsl
jg
mov
inc
icebp
gs
fisubrs
lds
cmp
mov
inc
pop
inc
or
push
fimull
dec
adc
sub
jno
xor
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
jmp
cmp
cmp
rcr
fidivl
insl
cmp
js
jle
js
adc
lcall
in
repz
dec
stos
imul
cmp
dec
add
test
xor
btc
dec
pop
in
cmp
jmp
sub
adc
out
rcrb
ss
jecxz
dec
or
outsl
mov
and
cmp
mov
lods
pop
jp
xchg
outsl
mov
add
jno
xchg
stos
mov
inc
and
sbb
shlb
and
loope
xor
iret
add
or
dec
xchg
jo
jl
fs
pop
or
jmp
jecxz
clc
inc
ss
xchg
sbb
mov
cmp
fs
lret
jl
xchg
loope
popa
idivl
andl
pushf
jae,pt
xchg
jnp
xchg
cmpsb
call
mov
sub
popa
xchg
jp
mov
lock
mov
sub
push
cmpsb
pusha
into
xor
in
cmp
mov
cmp
pop
repz
fidivl
adc
repnz
dec
sbb
sbb
movl
xor
ss
ficomps
movsb
addr16
fidivs
or
test
jp
sbb
repnz
shl
shrl
les
push
inc
mov
fxch
int
jns
push
enter
inc
push
mov
dec
sbb
out
inc
mov
push
mov
in
shrb
jne
stc
sub
ret
mov
mov
jp
out
mov
stos
cmp
popa
dec
orb
insl
mov
mov
or
call
js
movsl
scas
aam
or
mov
dec
and
cmp
shlb
xchg
loope
xlat
dec
les
sub
lea
cld
pop
dec
adc
mov
pop
dec
adc
adc
orb
sarb
sbb
test
push
lea
cmp
xor
mov
add
xchg
inc
leave
mov
adc
and
iret
xor
repnz
repnz
insb
enter
jne
and
sub
insl
pop
insb
jp
add
jb
test
or
lcall
cld
push
cmp
out
cmpsb
sbbl
jge
inc
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
jmp
xlat
aas
mov
fwait
clc
movb
sbb
jle
js
pop
inc
pushf
lcall
xchg
mov
cmpsl
sbbb
xor
mov
insb
outsl
std
lock
pop
inc
add
lods
loope
loop
dec
flds
add
pusha
push
mov
les
lret
xor
and
jb
leave
cltd
cli
in
test
lret
mov
jb
test
in
cli
out
aam
arpl
adc
sbb
or
and
xchg
ja
les
jno
leave
mov
int3
subl
mov
test
add
add
add
out
push
xchg
rcrl
pop
dec
pop
pop
xor
lahf
mov
ret
and
je
repz
pushf
jecxz
cmp
or
dec
iret
movb
mov
imulb
pop
and
mov
add
das
pop
mov
adc
in
xchg
subl
push
lods
sahf
fxch
out
or
mov
lret
jle
in
sahf
mov
jl
cli
mov
je
clc
addr16
cwtl
dec
push
lock
mov
dec
lds
jp
pop
dec
fisttps
xchg
arpl
or
cmp
sbb
jns
push
pusha
mulb
xor
jle
call
mov
inc
push
or
pop
xchg
cmpsl
jl
add
mov
or
cmpsl
push
dec
mov
divb
dec
std
adc
in
xchg
jno
or
leave
sti
jbe
pop
add
ret
or
xchg
mov
xlat
xor
push
sbb
repnz
cmp
popa
lds
hlt
negl
jp
loop
loopne
jne
lahf
les
mov
and
push
ss
add
iret
shl
xchg
lret
sbb
mov
mov
aad
sub
ret
mov
shrl
push
repnz
or
imul
into
jle
loop
stos
das
mov
add
call
in
clc
mov
cmpsb
fcom
jb
out
mov
jge
shl
cwtl
mov
ja
mov
es
or
mov
push
ret
mov
test
in
mov
jb
xor
aad
sbb
jnp
mov
jmp
into
rol
ror
mov
pusha
loopne
adc
js
jle
js
adc
sub
repz
mov
or
jb
push
inc
loop
mov
mov
mov
mov
sub
mov
fidivrl
mov
mov
lods
push
jb
adc
lret
movsl
xchg
repnz
xor
lahf
fadd
dec
inc
cli
jns
mov
movsb
stos
repnz
add
jle
cli
xor
fcompl
mov
add
jbe
pop
aam
test
lcall
mov
mov
mov
jbe
push
insb
into
flds
xchg
mov
jmp
sbb
cltd
adc
shlb
inc
mov
pop
push
push
adc
loopne
test
scas
std
mov
or
mov
dec
mov
sub
cmp
xchg
js
xchg
out
nop
fs
pop
dec
mov
dec
and
xchg
std
ds
jp
cwtl
idiv
scas
jge
stc
mov
in
sahf
popa
pop
cmp
jmp
add
fcomps
bound
sbb
das
lret
sub
pop
push
pop
cs
cli
testl
xchg
xchg
les
or
rolb
jle
sbb
fnstcw
sub
adc
pusha
xor
jmp
lods
sbbl
jne
shll
pop
and
daa
lock
clc
fsubr
out
ret
mov
sbb
das
push
inc
into
fldcw
in
mov
loope
aas
inc
inc
xchg
cltd
outsl
nop
jl
push
popa
in
test
dec
mov
js
mulb
idivb
scas
cwtl
mull
jne
jnp
imul
test
imul
fimull
or
add
cmp
into
mov
mov
mov
ret
test
xlat
push
jno
adc
data16
mov
loopne
adc
inc
cmp
stos
mov
add
lods
addb
mov
mov
xlat
xchg
addr16
insb
jmp
add
sbb
lret
pop
and
push
lods
stc
outsl
cmp
add
inc
jg
clc
dec
cmpl
mov
mov
ljmp
jle
pushl
shrb
mov
or
sarl
iret
mov
adc
inc
mov
add
xor
cmp
je
jmp
leave
rol
rcr
rcr
ss
fwait
and
js
jle
js
jmp
jb
lea
xor
js
adc
testl
xor
and
imul
mov
dec
mov
inc
aaa
in
push
cmp
jnp
mov
jg
clc
popf
outsl
push
dec
dec
movsb
jne
pop
push
xor
push
mov
xor
mov
aad
xchg
mov
xchg
inc
nop
cmpsb
mov
mov
add
aad
pop
in
shlb
pop
or
fidivl
cmp
enter
ss
mov
xchg
mov
fsubp
cmp
mov
out
lcall
sti
xlat
jg
mov
mov
imul
sti
rorb
pop
jecxz
pop
cmp
mov
daa
fbstp
push
sbb
iret
mov
sbb
lds
and
aam
mov
icebp
loope
addl
repz
xchg
subps
movsb
sbb
mov
ja
sarb
jnp
mov
adc
in
ret
mov
mov
sub
andl
sete
je
xlat
mov
inc
inc
ret
and
mov
pusha
test
lret
pusha
fidivl
and
sbb
pop
xchg
mov
jle
jo
mov
xchg
les
fiadds
cmpl
dec
xchg
lea
fldl
call
mov
pop
arpl
nop
mov
in
xchg
inc
add
in
jae
sahf
rcll
fistpll
sbb
gs
push
test
enter
push
inc
pop
inc
jge
jbe
cmp
mov
test
sahf
push
insb
mov
mov
daa
std
sub
jmp
pop
rcrb
lcall
insb
inc
mov
out
cmc
mov
into
ret
mov
add
inc
lds
mov
clc
cmp
pop
pop
add
sahf
pop
andl
cli
ret
and
xchg
mov
inc
aam
jge
sbb
mov
sub
pop
popf
jg
mov
pop
std
loop
in
xchg
xchg
mov
dec
mov
fcmovbe
imul
add
hlt
test
jno
inc
inc
in
sbb
mov
loop
movsb
rclb
mov
arpl
or
mov
xlat
cmp
sbb
inc
adc
jno
arpl
loop
add
dec
clc
xor
add
mov
jmp
jmp
ds
lret
fldenv
jb
jne
and
jle
js
or
xlat
xor
scas
pop
push
sbb
outsb
push
jmp
in
lret
mov
mov
in
out
jmp
cmp
cli
pushf
les
adc
xchg
pop
or
pop
sub
pop
mov
mov
stc
test
sbb
ror
push
xor
sub
dec
inc
out
movswl
cli
pop
add
mov
sti
fwait
fwait
or
xchg
mov
popa
lret
outsb
orb
ret
enter
sbb
jbe
popa
pop
jge
movsl
js
cmp
es
inc
xchg
and
add
lahf
xchg
cmp
in
ficoms
andl
ljmp
mov
pop
jp
pop
cmp
sub
int
in
jl
rorb
inc
and
sbb
pop
fldcw
xor
ljmp
mov
test
pop
cli
dec
in
shl
jbe
test
mov
pop
xor
cltd
pop
sub
pop
adc
push
dec
ss
shll
icebp
and
xor
filds
xchg
lcall
push
pop
push
cld
js
sub
mov
sbb
adc
fmull
or
cmc
sti
nop
jecxz
sahf
cmp
lret
jne
push
mov
mov
dec
push
lcall
lods
sbb
in
imul
pop
out
mov
cmp
pop
cmp
pop
setle
in
pusha
imulb
loop
add
push
std
dec
cmc
pushf
sbb
push
jg
movsl
jbe
fsubrl
dec
lods
lds
ja
iret
xor
xchg
jmp
inc
dec
push
dec
icebp
cmp
mov
xchg
mov
std
push
jg
and
push
ljmp
daa
ficomps
scas
add
cmc
repz
dec
push
ljmp
in
mov
pop
aam
adc
out
push
inc
fucomip
cmp
pop
cld
in
mov
mov
inc
shl
in
aas
sub
cmp
daa
repnz
shr
mov
neg
push
push
and
push
mov
scas
ljmp
xchg
js
mov
pop
test
clc
sub
cmp
push
mov
jecxz
push
lods
mov
cmp
adc
xor
test
scas
cmp
and
sub
test
movsb
cmp
jne
mov
add
add
mov
mov
mov
jmp
aas
leave
enter
fxch
mov
and
sahf
es
jle
js
xor
push
scas
add
jnp
sbb
xor
lods
inc
popf
stos
mov
push
fstpl
cmp
in
push
pop
out
int3
rcl
or
arpl
or
leave
dec
lret
push
xchg
mov
push
dec
cmp
or
mov
pop
je
je
jecxz
ret
sbb
ja
or
daa
enter
lret
mov
sbb
xor
andl
in
hlt
mov
push
iret
push
scas
stos
or
ret
mov
xor
into
mov
ljmp
mov
mov
mov
xchg
scas
xchg
out
fs
jl
pusha
adc
push
mov
popl
inc
pop
cltd
sbb
gs
lret
jmp
shrb
mov
add
arpl
dec
sbb
imul
or
insl
pusha
das
or
pop
iret
inc
aad
adc
rcr
sub
fisubs
inc
mov
cmp
xlat
icebp
xchg
lcall
cmpsb
mov
das
push
and
insb
xor
mov
roll
popl
pushf
jnp
sbb
sbb
jbe
ret
jl
test
jmp
lcall
pushf
arpl
jecxz
dec
xchg
popw
ds
ret
xor
ss
pop
jns
movsb
lods
mov
push
cli
leave
jns
dec
fcmove
stos
or
test
sub
inc
and
fs
gs
inc
cmpl
cmpsl
sub
adc
jns
push
out
bound
xchg
pop
clc
popa
mov
decb
aaa
outsb
adc
pop
xchg
fwait
in
hlt
add
jae
bound
xchg
call
dec
mov
dec
je
pop
sub
jg
fldenv
mov
pop
test
cltd
mov
or
push
xor
iret
cltd
stc
xchg
sub
mov
scas
sub
cli
int3
test
or
mov
pop
mov
les
mov
notb
push
test
ja
cltd
xchg
xor
mov
jecxz
jmp
outsb
pop
pop
jmp
dec
movsb
sti
pusha
mov
aaa
mov
inc
pop
lar
mov
or
ljmp
pop
jbe
gs
sub
adc
sub
jmp
cltd
in
add
aad
cltd
fs
imull
or
or
lods
and
repnz
mov
dec
call
inc
inc
inc
mov
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
mov
add
push
xor
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
decl
movl
mov
not
jmp
rol
lret
leave
lret
leave
lds
dec
inc
insb
push
jno
sbb
js
dec
jle
js
in
aad
pop
pop
stos
pusha
jmp
mov
add
imul
scas
fistpll
dec
jnp
bound
andb
aam
ret
cmp
gs
mov
push
xor
push
push
mov
mov
imul
jle
lret
mov
mov
js
jns
dec
sbb
movsl
xchg
loope
cmp
mov
xchg
or
in
cmp
leave
jl
cmp
xor
lods
jae
fildl
jb
jo
ss
mov
jne
imul
test
mov
add
push
mov
adc
jno
push
stos
dec
ja
jnp
xor
push
push
cli
dec
push
cmp
mov
lret
jle
ss
dec
or
pop
leave
push
or
jb
mov
mov
cwtl
jae
mov
dec
mov
add
icebp
push
pop
and
in
iret
fildll
sahf
jl
jno
push
xor
mov
adc
jb
sarl
test
outsl
js
popa
and
mov
mul
jno
add
adc
call
pusha
mov
shlb
enter
fimull
and
jmp
loopne
addl
dec
pop
mov
pop
push
out
shlb
pop
inc
jge
arpl
xor
push
test
pusha
mov
adc
out
rolb
cltd
xor
push
dec
test
pop
lds
movl
and
add
adc
xchg
andl
mov
pusha
and
fs
jno
xchg
imul
pop
xor
sub
aas
fbstp
jnp
mov
sub
mov
and
pop
sbbb
inc
int
lret
and
push
addl
out
enter
dec
fisubrl
push
cltd
call
or
mov
jae
andb
je
dec
push
jp
sarl
pop
inc
pusha
cmp
or
pusha
xchg
imul
loop
fcomps
sbb
insb
mov
lods
ret
pop
inc
lods
pop
repnz
xor
dec
adc
push
and
jecxz
arpl
cld
leave
lret
push
pop
or
cwtl
in
sahf
or
mov
mov
push
add
sti
jg
pop
lods
addr16
inc
xchg
adc
push
mov
scas
repnz
pusha
jmp
xchg
xor
xchg
lds
push
jne
call
dec
pmullw
ds
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
push
push
push
push
call
jmp
xor
jmp
rol
int3
pop
test
lcall
jle
js
fisttpl
mov
shr
adc
push
ds
push
inc
pop
xor
xchg
pop
sbb
push
fldcw
or
mov
jg
push
jno
xchg
mov
rcll
es
lds
inc
sbb
push
mov
jl
mov
dec
incl
rolb
or
call
cmpsl
les
xor
mov
push
mov
sub
and
dec
jne
and
popa
jge
or
aad
mov
test
movsl
roll
out
mov
out
imul
out
mov
mov
subb
jbe
jo
jecxz
fwait
call
mov
cmp
fcompl
fnstsw
ret
xchg
into
xchg
push
ffreep
aas
ja
fucom
sbb
arpl
inc
sub
or
inc
mov
pusha
rolb
push
incl
lods
test
cmp
xor
pop
ffree
lret
adc
jecxz
dec
add
test
test
push
jb
fs
xchg
mov
cmp
pushl
rcll
js
lahf
lcall
ret
fisttps
out
or
cltd
push
cwtl
mov
lret
in
je
push
xor
jo
ss
sub
or
jae
cld
add
into
pop
jp
and
dec
mov
lods
push
bound
jns
ret
jmp
add
dec
loope
xor
sarl
cmc
gs
aaa
xor
dec
ja
in
sub
lcall
mov
lcall
add
pusha
mov
jnp
xchg
adc
ffree
push
pop
mov
mov
mov
pop
test
or
test
imul
push
aaa
or
push
lret
jb
lock
mov
insb
push
jne
icebp
jp
loop
sahf
adc
jl
dec
inc
mov
add
scas
sub
incb
mov
jo
jmp
data16
test
shl
inc
pop
inc
adc
je
loopne
cmc
or
pop
in
lcall
sub
ds
aas
inc
js
mov
xchg
jns
repnz
ret
out
cmp
or
push
scas
inc
insb
std
add
xor
in
push
ret
xchg
cmpsl
adc
push
fsubr
and
popf
je
insb
mov
js
cmp
out
cmp
mov
cmc
jle
aad
adc
sub
sbb
jbe
cltd
test
shlb
mov
cmp
fnstenv
es
outsl
aas
mov
inc
mov
push
je
push
sbb
add
dec
in
xor
add
or
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
sub
mov
jmp
enter
aam
mov
int3
push
dec
gs
xchg
inc
js,pn
dec
jle
js
cmp
push
push
mov
cmp
mov
inc
bound
push
popf
xchg
inc
test
insb
bound
push
xlat
ja
movsl
adc
addr16
push
dec
dec
insl
shl
push
cmc
push
mov
ja
mov
pop
call
mov
mov
cltd
push
jbe
nop
mov
gs
adc
sbb
js
dec
sub
jecxz
int3
push
lret
movsl
out
sub
sub
jg
xchg
hlt
int3
or
dec
fcoms
add
leave
cmpsl
add
into
icebp
xchg
int3
mov
movsb
xchg
inc
movsl
movsl
dec
pop
mov
mov
xor
inc
cmp
xorl
cltd
daa
jecxz
sbb
test
xor
bound
mov
imul
addr16
push
mov
sti
test
repnz
mov
sbb
inc
sbb
clc
lcall
sub
sbb
fildl
adc
add
stos
add
xor
xor
mov
inc
out
xorb
push
xor
sbb
out
or
mov
pop
mov
pop
pop
insl
pusha
sbb
mov
cwtl
inc
xor
dec
add
mull
subl
stc
addr16
div
inc
sub
addr16
push
ret
test
xlat
call
inc
mov
fdiv
jmp
repz
dec
mov
lcall
jae
xor
aad
test
ljmp
xchg
mov
or
cmp
or
fbstp
pusha
pop
ja
cwtl
mov
pop
jl
lods
xchg
pop
out
mov
inc
or
add
mov
push
push
cwtl
pop
pop
mov
movsb
cld
mov
inc
mov
movsb
jae
pop
repz
rcll
cltd
fsubs
lds
negl
repz
repnz
stos
inc
cwtl
xor
mov
fistpll
pop
push
mov
inc
mov
push
setnp
ss
lods
mov
lods
mov
fcomip
loop
xlat
movsl
pop
mov
test
mov
inc
lret
sbbl
ret
das
mov
pop
mov
ret
cltd
movl
pop
mov
xchg
mov
push
mov
ret
jb
leave
mov
decb
mov
push
inc
fadd
cmp
pushf
cs
jge
imul
mov
xchg
popa
mov
inc
insl
adc
es
mov
add
or
mov
subl
mov
mov
fwait
in
cld
xchg
das
sbb
push
mov
mov
movsb
je
or
pop
push
pusha
xchg
xor
and
xchg
in
sti
nop
mov
bound
xor
pop
push
mov
add
cmp
je
mov
mov
xor
jmp
rcl
leave
aad
xor
add
jae
fwait
xor
dec
jle
js
mov
jo
cltd
mov
hlt
imul
neg
ficomps
adc
xchg
es
test
and
jecxz
dec
jno
pop
ljmp
and
inc
sub
mov
push
xor
pushf
pop
fimull
sub
fcoms
sub
loop
subl
sti
push
sbb
push
xchg
sub
addr16
xchg
xlat
jo
fs
dec
xchg
sub
in
inc
ffreep
ljmp
lret
daa
pop
sahf
mov
adc
push
orb
pop
jb
ja
shrb
add
jl
jmp
dec
add
lods
add
out
cmp
xor
mov
jecxz
inc
mov
sti
roll
test
xchg
repnz
or
adc
mov
cmp
clc
ja
stos
add
test
je
outsb
sub
cmp
stc
mov
std
push
adcl
outsl
sub
or
jle
jg
outsb
mov
mov
icebp
cmp
mov
or
fwait
mov
mov
jno
xchg
outsb
cmp
dec
stos
cmp
mov
xchg
pushf
lret
pop
lahf
inc
in
sub
popa
push
add
jmp
add
xchg
shlb
xchg
hlt
popa
pop
jno
bound
pop
inc
jl
addr16
push
cmp
inc
cli
sarb
in
ret
in
in
repz
inc
gs
addb
xchg
and
sahf
ds
ret
stos
scas
test
jae
jmp
adc
repz
adc
int3
inc
lea
push
push
addr16
or
imul
cmpsl
jbe
mov
int3
mov
rcll
aaa
stc
test
pop
push
ret
rcrl
inc
push
push
nop
fsubrl
lods
rcrl
add
push
pop
cmp
pop
and
xchg
add
rcl
add
dec
and
int
and
xchg
cmp
sbb
xor
fs
stos
xor
xor
jecxz
mov
shlb
mov
sub
bound
mov
das
push
inc
adc
fst
inc
outsl
mov
outsl
shr
into
push
inc
or
rclb
and
adc
add
fnstenv
dec
int
jnp
cmp
pop
or
call
lock
shlb
cwtl
pop
out
scas
mov
lods
push
adc
or
fisttpl
mov
mov
mov
fs
xchg
push
sub
nop
mov
sub
or
mov
inc
push
xor
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
jmp
aas
rol
int3
aad
dec
sub
ds
jle
js
aam
ret
mov
sbb
pop
cld
cmp
cmp
pushf
cmp
pop
mov
addr16
pushf
fs
std
decb
inc
clc
cmp
in
jl
cmc
das
sub
lret
dec
fstpl
jg,pt
addr16
call
mov
arpl
mov
je
std
outsb
xchg
push
push
mov
adc
in
lret
sahf
rcll
stc
sti
dec
in
int3
mov
dec
repnz
sub
rorb
mov
push
mov
sbb
push
cwtl
aad
aas
bound
sarb
dec
hlt
jmp
xor
jne
aam
icebp
xor
mov
lret
jl
lret
cmovge
push
les
or
jl
out
jge
repnz
js
fs
cmp
mov
mov
test
pusha
adcl
mov
sahf
ss
je
ret
js
jb
push
xor
es
xchg
jb,pt
aad
push
std
in
ret
ds
jp
cwtl
jo
inc
and
lcall
nop
pop
cs
sbb
jl
nop
mov
rcrl
mov
mov
add
fistl
pop
or
push
jno
fidivs
xchg
and
mov
outsb
inc
imul
pop
aad
and
aad
pop
xchg
jns
adc
xchg
test
xchg
xchg
and
dec
hlt
pushf
call
leave
repz
mov
mov
dec
out
fstps
push
hlt
push
inc
arpl
cs
outsl
xor
jmp
call
int
stc
cmpsl
aas
inc
mov
das
jo
cmpsl
push
dec
adc
and
fistps
cmpsb
gs
cli
sub
inc
fiadds
inc
popa
cltd
cmp
ljmp
inc
dec
or
cmpsb
scas
shlb
ret
push
lahf
or
inc
xchg
xchg
imul
jp
xchg
cwtl
xchg
xor
lock
fidivrl
or
cmpsl
out
es
int3
dec
stc
inc
aam
dec
cli
subb
xor
outsl
mov
in
push
scas
insb
cld
adc
loop
cmp
test
push
arpl
dec
sub
mov
ret
rcrl
lods
out
jl
mov
mov
push
rcrl
nop
aas
jb
xchg
enter
cwtl
mov
ja
jns
xchg
int3
cmp
movsl
or
sbb
ret
dec
int3
xchg
pop
dec
repz
mov
enter
mov
mov
insl
sub
jmp
roll
cld
outsb
mov
div
jge
mov
jnp
dec
movsl
out
outsb
pusha
mov
aas
ljmp
pop
mov
jnp
mov
jmp
int
rol
ror
aad
inc
jecxz
fdivr
mov
in
cmp
jle
js
movsl
sbb
adc
sahf
shll
test
mov
adc
je
add
loopne
in
loop
adc
push
outsl
mov
imul
mov
out
cltd
fs
lret
jne
scas
movsb
hlt
or
mov
insl
mov
adc
and
inc
mov
or
xchg
xor
mov
sbb
call
lds
jge
sbb
std
or
ss
popf
int3
mov
xchg
ror
and
into
and
rorb
push
pop
ja
dec
jne
xchg
jnp
sub
ds
pop
sub
stos
in
test
movsb
cli
mov
push
out
repnz
rclb
hlt
cwtl
dec
jg
push
inc
movsl
xchg
mov
pop
in
mov
push
idivb
out
and
stos
jno
hlt
or
or
jbe
push
xor
or
push
add
cwtl
hlt
rsqrtps
nop
mov
mov
cmp
mov
and
out
jbe
imul
add
dec
mov
jp
mov
pop
fwait
shrl
inc
cli
xchg
repz
out
cmpsl
push
mov
pop
add
mov
repz
mov
imul
or
xor
int3
stos
push
daa
xor
sub
push
adc
xlat
cmc
push
inc
pop
das
inc
inc
icebp
cmp
icebp
data16
in
hlt
adc
pop
in
mov
jle
jb
hlt
adc
in
lea
push
pop
cmp
or
xchg
or
fsubs
inc
rcr
add
push
out
addr16
jno
iret
dec
cwtl
xchg
js
loopne,pt
and
stos
mov
jecxz
mov
jg
cmp
fs
fnsave
push
add
push
out
mov
xor
jge
cmp
add
cld
scas
xchg
cmpsb
add
pop
aam
add
clc
adc
movsl
inc
lds
jbe
xchg
mov
push
stc
inc
popf
in
movsb
mov
lcall
test
fs
lds
push
push
je
xlat
jnp
sub
aas
mov
clc
push
xor
ja
sub
cmp
inc
pushf
jmp
pop
into
fidivs
outsl
dec
adc
jb
outsb
or
cld
add
adc
mov
sub
add
xchg
inc
lret
cmp
jle
ljmp
add
jo
lcall
mov
jbe
push
push
flds
scas
push
shlb
xchg
and
sub
or
push
dec
jns,pt
and
jge
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
jmp
rol
lret
ret
shrl
insb
dec
sub
js
jle
js
in
inc
cmp
xchg
push
stos
xor
sub
aaa
out
iret
and
cmpsb
adc
pop
cmp
mov
outsl
pop
jo
roll
mov
cs
inc
shlb
inc
jbe
mov
arpl
movsl
clc
mov
hlt
adc
loop
pop
mov
sbb
xor
inc
insl
push
js
lock
pop
mov
in
jb
add
ljmp
popa
and
xchg
dec
mov
pop
mov
mov
mov
jmp
add
lcall
or
in
xchg
add
data16
mov
pop
icebp
sarl
jmp
jne
jb
or
jae
stos
in
and
jnp
call
mov
addr16
stos
push
in
add
or
and
clc
or
cmp
cmc
icebp
inc
daa
loop
lret
out
xor
mov
dec
pop
dec
adc
lods
xchg
adc
fsts
imul
insl
ja
sbb
iret
clc
xor
pop
ss
sbb
push
xchg
leave
insb
in
mov
pop
into
and
or
and
es
fidivl
inc
cmp
push
cli
in
sbb
adc
mov
cwtl
xchg
dec
cmp
adc
add
es
xchg
and
js
ljmp
ljmp
imul
out
push
divb
jb
xor
cs
jo
cwtl
and
adc
mov
divb
mov
and
je
scas
std
in
xchg
les
data16
jl
js
enter
jno
shll
push
mov
nop
adc
das
fsts
inc
pop
sbbb
add
jecxz
sbb
fldcw
push
xor
outsl
dec
rcrl
aam
and
dec
adc
and
lds
mov
or
xlat
add
hlt
mov
pop
mov
adc
mov
lods
hlt
sub
adc
mov
mov
jecxz
dec
and
push
or
sub
aas
stos
test
ja
addr16
xor
xchg
push
loop
das
adc
mov
sub
movsl
fcoms
mov
movswl
into
out
pushf
iret
lcall
mov
push
cwtl
mov
call
into
jno
mov
repnz
lret
loop
mov
lods
gs
dec
cli
popf
data16
add
mov
fimuls
lods
mov
jge
jne
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
jmp
cmp
fnstcw
jecxz
dec
pop
mov
cmp
dec
jle
js
fnstsw
add
call
stos
aas
lds
mov
inc
leave
ror
mov
leave
jl
repz
out
fistps
cmpsb
or
dec
hlt
mov
sbb
inc
jno
icebp
daa
push
push
leave
adc
out
loop
mov
xlat
mov
pushf
roll
add
xor
pop
data16
lods
imulb
and
mov
scas
pop
xchg
jb
dec
jle
out
jae
mov
dec
out
xchg
jb
adc
cld
cmp
push
stos
sbbl
rclb
daa
out
mov
repz
incb
out
lock
cmc
pop
cmpsl
pop
xlat
subb
xchg
bound
mov
rorb
sbb
jmp
out
incb
xchg
imul
jne
xchg
sub
lret
dec
test
mov
and
cmp
push
jns
add
inc
pop
add
adcb
call
fidivrl
in
je
push
rcll
sbb
or
mov
jo
push
dec
mov
mov
sub
or
push
sub
mov
aas
inc
scas
scas
mov
and
sub
inc
xor
fiadds
popf
sti
popa
ljmp
out
icebp
scas
inc
insb
insl
mov
repz
push
rcrl
test
bound
pop
iret
repnz
decl
sub
jnp
pusha
icebp
mov
pusha
insb
sbb
inc
pop
push
iret
mov
lret
iret
push
outsl
stos
add
dec
mov
call
dec
xor
and
out
xor
popa
mov
test
jp
cwtl
popw
out
hlt
jp
sbb
xchg
pop
test
dec
jle
mov
nop
push
lret
jb
sbb
add
lahf
movl
lret
imul
xorl
inc
inc
rorb
pop
jne
mov
stos
adc
outsl
clc
je
xlat
push
push
pop
ljmp
and
jbe
push
ljmp
push
lods
and
mov
repnz
mov
and
cmp
sbb
add
in
call
subl
adc
mov
xor
icebp
add
stc
jae
repz
test
ror
jbe
cmovae
sub
or
aad
pop
icebp
inc
inc
fs
xchg
or
cmp
mov
jae
repnz
sti
cmpsl
mov
xlat
jns
inc
out
sub
es
push
lea
fisttps
pop
mov
xchg
dec
rcll
es
insb
or
arpl
shr
jmp
add
rol
ror
leave
rcr
aaa
mov
ret
dec
mov
js
dec
jle
js
push
pusha
divl
in
fwait
les
add
jmp
enter
mov
pop
cmc
sbb
pop
add
cld
jae
ds
subb
call
scas
fwait
xor
pop
dec
loop
mov
xor
stc
sti
out
aas
leave
insb
cmpsl
scas
xchg
fstpt
and
pop
sub
enter
int3
jge
xlat
call
lahf
mov
adc
pop
adc
jecxz
cwtl
lods
sbb
ret
xchg
mov
bnd
mov
lock
fildl
test
lret
in
lods
cmp
in
jbe
stc
push
add
cmp
mov
or
lods
orb
outsb
inc
cmpsl
mov
std
add
lods
push
inc
scas
mov
xchg
jg
sbb
cmp
cmp
cmp
outsl
pop
ficomps
xchg
dec
cmpsb
mov
js
lret
stos
add
xor
lods
xchg
mov
cmpsb
add
pop
leave
insb
jo
cld
pop
lret
cmc
andl
fidivrs
cmc
in
stos
test
orps
or
mov
jp
popf
loop
add
mov
push
gs
push
adc
imul
ret
out
rcr
fists
xor
fsubr
pushf
gs
pop
jbe
jae
ds
popa
jbe
int
pop
sbb
xor
add
xchg
fdivr
add
sub
out
in
into
push
jp
xchg
rcrl
loopne
ljmp
in
iret
clc
or
or
int
mov
test
hlt
or
push
aad
sbbb
push
push
inc
jae
ret
sub
aaa
pop
shrl
lock
pop
dec
sbb
dec
mov
push
push
ret
dec
lods
xor
leave
sbb
cmp
aas
scas
paddusw
jmp
cmp
jge
inc
lods
cmpsl
mov
lods
push
adc
add
xlat
xchg
xchg
xchg
mov
jl
lret
scas
add
fidivrs
adc
cmpsb
pop
rolb
adc
mov
rclb
sub
sti
pop
es
std
jmp
cmp
mov
pop
xor
cmp
fs
and
popf
mov
insl
data16
cmp
loop
inc
and
xchg
cltd
les
mov
pop
sarl
insl
xchg
ret
cmp
jnp
push
in
cwtl
addl
push
adc
push
js
dec
aam
dec
xchg
jecxz
mov
das
out
ja
sti
mov
xchg
dec
stos
jb
sahf
cwtl
imul
rcrb
icebp
push
pop
shll
cld
xor
addr16
mov
jb
jmp
add
iret
rcl
lret
ror
xlat
lods
and
enter
mov
js
dec
jle
js
or
stc
fldcw
xor
jo
fwait
inc
mov
adc
hlt
fsubl
movsb
nop
pushf
and
imul
shll
rcll
cs
scas
and
outsl
clc
cld
jle
mov
dec
sbb
addr16
mov
ss
dec
fwait
ljmp
sub
xchg
push
sub
adc
stc
fcompl
andl
pusha
adc
push
sbbl
out
inc
popf
jne
outsb
sub
mov
jp
cli
pop
ja
add
cltd
popf
dec
mov
xchg
mov
sahf
jb
shlb
mov
insb
inc
adc
add
add
cmpl
add
test
out
push
mov
loopne
push
adc
fldl
cmp
es
fiaddl
loope
jle
xor
popa
daa
mov
push
cmp
loopne
pushf
jno
push
in
rorl
mov
mov
inc
pop
and
add
outsb
xchg
popf
test
xchg
frstor
xor
xor
jb
mov
inc
mov
into
sbb
sub
mov
add
push
pop
lods
mov
jmp
cmc
xchg
dec
daa
add
test
mov
xor
movsb
ja
sub
aas
mov
pop
cld
mov
sbb
xor
cmp
mov
aad
out
loopne
lret
enter
fwait
outsb
mov
pop
jb
jmp
iret
in
mov
jae
jg
ljmp
imul
fwait
daa
push
es
popf
inc
xor
loop
pop
outsl
mov
xor
out
push
mov
mov
leave
fwait
xchg
aaa
sti
shl
mov
xchg
cwtl
lods
mov
lds
shll
call
pop
and
dec
push
cmpsl
arpl
xor
flds
sahf
ficompl
jp
inc
and
mov
xor
pop
out
pop
cmpsb
cwtl
sub
xor
pop
adc
scas
adcb
sub
lods
xchg
push
jp
ja
cmpsl
std
lock
imull
pushf
negb
ja
mov
push
ja
fcoms
cmp
loopne
movsl
mov
pop
pop
cmovae
cmp
sahf
push
out
mov
scas
sahf
mov
xchg
loopne
xor
add
dec
sbb
or
sub
out
xor
jmp
jle
push
jns
scas
xor
dec
les
sub
out
or
icebp
lcall
mov
mov
lcall
or
or
bound
mov
mov
dec
mov
sbb
int
aam
mov
mov
jmp
aas
ret
rol
sbbl
icebp
faddp
js
dec
jle
js
dec
insb
fmul
lret
xchg
pop
out
mov
out
outsl
jb
sub
and
adc
adc
add
pop
or
lahf
lock
pop
jle
push
lcall
aad
repnz
lahf
popa
call
dec
imul
arpl
je
push
mov
arpl
rorl
sti
jb
push
xlat
lods
cmp
and
insl
idivl
cwtl
xchg
js
insl
andl
cmpsl
outsb
cli
lcall
push
and
icebp
ret
std
aad
pop
or
and
jne
push
vmread
orl
cmp
jg
loope
rorl
shll
mov
fwait
push
jp
addl
xchg
loop
int3
jbe
jae
mov
cmp
jns
adc
lret
test
js
dec
fbld
shr
adc
or
sbb
inc
cmp
jg
movsb
sbb
sbb
push
icebp
xchg
add
mov
and
adc
mov
xor
push
popa
je
shlb
add
cmp
cmp
jg
jmp
in
jecxz
rcl
adc
jbe
sbb
outsb
pop
jnp
jae
into
fcoms
push
xchg
inc
mov
test
xor
jmp
push
inc
lcall
enter
mov
aas
push
push
ffreep
shrb
popa
ja
loop
roll
mov
pop
inc
mov
mov
pop
pop
mov
lret
jl
push
rorl
lock
fs
xor
fnsave
jne
cmp
test
aas
mov
mov
ret
dec
and
sbb
insb
lcall
mov
jmp
sti
ret
js
icebp
scas
push
adc
mov
shrl
jno
lods
sub
sub
arpl
in
xchg
jle
push
lret
push
jle
into
inc
out
pop
and
sahf
stc
adc
push
push
push
int
or
sbb
mov
xchg
cmp
jae
jge
mov
xchg
repz
inc
mov
push
fs
jle
pop
daa
lods
xchg
lret
fcomps
lret
sub
arpl
jp
andb
aas
add
into
or
unpckhps
adc
andb
xchg
add
dec
push
mov
push
in
xchg
mov
xor
into
inc
xor
and
das
push
int
mov
sub
adc
outsl
stos
aad
mov
cmp
xchg
xchg
dec
jmp
iret
and
pop
and
jmp
or
push
fisubs
outsb
stos
out
popl
and
sbb
xchg
test
leave
mov
push
pusha
pop
and
or
mov
jmp
ds
cmp
mov
lods
cmp
js
jle
js
jb
adc
push
xchg
adc
mov
add
daa
cs
insl
jnp
icebp
mov
mov
jge
out
xor
mov
out
in
jb
mov
pop
mov
dec
outsb
add
dec
ljmp
das
cmpsl
repnz
or
stos
mov
cmp
and
fcmove
jb
stc
xchg
lea
adc
jbe
push
fucom
or
xor
rcrb
dec
jmp
cmp
jg
outsl
fnsave
sbb
arpl
adc
hlt
aam
pop
mov
subl
pushf
xor
in
dec
sbb
iret
mov
xor
pop
sbb
les
xchg
xor
ljmp
or
loop
jb
mov
add
pop
out
stos
loopne
xor
out
mov
clc
sub
fsubrl
pop
in
int
mov
jmp
or
xorb
fwait
push
adc
mov
cmp
push
stos
out
cld
ret
or
jae
call
dec
jge
imull
push
jle
aas
xlat
sub
test
addb
cmp
icebp
push
je
and
adc
pop
xchg
and
or
xchg
std
nop
or
in
cs
jecxz
push
add
push
pop
and
push
bound
loop
imull
mov
push
fimull
es
jle
rcll
jnp
push
fs
std
jnp
lods
mov
orl
jne
stos
mov
movsl
mov
cmpsl
lds
in
cmp
in
pop
cli
mov
xor
pop
adc
jp
loope
push
mov
call
xchg
mov
and
fsts
cltd
or
jle
sti
pop
outsb
xor
gs
sub
cmpl
cmp
std
inc
in
movsl
cmp
mov
and
push
fsts
jo
jno
mov
sub
andl
stc
test
cmpsb
push
jg
ljmp
loopne
shll
lods
push
ret
xchg
hlt
add
fdivrs
scas
pop
add
sub
push
mov
iret
sahf
ret
aam
xor
loope
rcrl
xchg
scas
push
outsb
pop
lea
movsb
mov
mov
fbstp
movsb
cli
xchg
sbb
push
cmpsl
cmp
mul
ret
push
scas
inc
out
subl
and
rorl
cmc
pop
fmull
mov
jle
inc
mov
pop
add
les
lods
jge
addr16
jns
or
mov
scas
aad
mov
pop
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
and
mov
jmp
int3
vpmovmskb
fcmovnu
leave
in
loop
out
mov
leave
js
fs
js
movsb
ljmp
pop
push
xchg
cld
mov
xor
sbb
cld
pop
rolb
rcr
loop
xor
shlb
aam
pop
not
jg
fucomp
push
in
cld
mov
inc
cmp
bound
xlat
dec
push
aaa
sbb
push
mov
int3
pop
or
pushl
int3
loopne
push
inc
push
gs
dec
inc
mov
pushf
scas
add
fidivl
fidivrl
add
adc
push
lret
jmp
loopne
mov
push
xor
jge
cmp
xor
jle
subl
jmp
ret
aas
jl
add
daa
jle
xor
pop
mov
inc
cmc
clc
and
popa
jo
out
loope
xor
pushf
out
popf
push
xor
xchg
mov
ror
add
or
dec
pop
sub
les
orb
cmc
pop
push
movsb
mov
popa
cli
push
xchg
shlb
dec
cmp
or
bound
mov
jae
xor
adc
fsubl
push
add
inc
loopne
cmpsb
mov
repnz
jl
jg
dec
or
add
insl
repz
mov
mov
jnp
les
push
xlat
sbb
ficoml
mov
xor
mov
push
pusha
cmp
dec
jnp
cmp
cli
aad
out
dec
add
call
jnp
test
xchg
sub
xacquire
ljmp
das
mov
out
dec
mov
out
pop
pop
test
outsb
imul
rcr
lret
test
jle
and
add
sub
or
ret
out
inc
jecxz
mov
sbb
popa
jno
inc
mov
fimull
jp
dec
xchg
xchg
sbb
add
xchg
pop
add
pop
push
xchg
das
mov
fstp
in
leave
mov
dec
and
pop
orl
mov
jno
sbb
rorb
inc
into
stos
fsub
mov
lret
add
loope
adc
rcl
nop
adcb
push
inc
fwait
das
pop
mov
pop
lods
jns
dec
adc
lcall
jns
hlt
sub
aam
pop
jnp
pusha
daa
fwait
cmpl
cli
jnp
pop
mov
ror
lahf
push
popa
lret
fbstp
inc
stos
xor
mov
es
inc
stos
ja
sub
push
popa
popf
lods
jno
dec
icebp
mov
push
pop
and
pop
out
dec
ss
mov
jmp
and
lods
xchg
push
addr16
lock
cltd
push
les
stos
mov
icebp
ret
mov
setae
imul
fcmovnbe
jns
std
xor
or
repnz
mov
nop
das
mov
dec
ret
or
sub
xor
cmp
roll
pop
sbbl
mov
add
add
dec
add
xor
subl
mov
xorl
jmp
rol
cmp
aam
rol
mov
and
jno
enter
js
jle
js
out
sbb
pop
add
repnz
je
jnp
push
pop
xor
or
adc
js
xchg
sub
adc
push
sbb
std
cmp
cs
aas
out
jb
cmc
pop
jns
stos
pop
je
mov
xchg
adc
and
pop
into
xchg
nop
insl
dec
dec
jae
adc
add
data16
lds
jp
cmp
fsubrl
jo
and
jmp
fs
jae
sub
ror
sub
fistl
lods
sbb
and
jno
cmpb
ret
cmp
jnp
pop
addr16
repz
mov
add
or
gs
xor
adc
bound
xchg
xchg
out
aam
add
add
test
mov
sbb
cmpsb
lret
fidivrs
inc
jb
hlt
loop
pushf
push
dec
pop
jp
and
and
xor
rorl
push
jno
add
sub
into
pop
cmp
push
push
out
sub
and
int3
in
xchg
in
popa
cwtl
push
es
sub
push
jne
mov
fs
xor
stos
clc
mov
test
pushf
pop
fisubl
xchg
je
mov
or
fldenv
insb
cmp
outsl
neg
stc
jns
lods
mov
pushl
cld
pop
and
nop
sbb
incb
sub
into
aam
mov
nop
dec
js
ret
mov
loopne
push
aas
cmpb
notl
repz
sbb
fidivs
popa
jp
jb
push
mov
cld
shlb
iret
int3
in
inc
inc
push
mov
inc
fcoml
test
mov
testb
inc
jbe
pop
daa
lret
mov
xor
dec
jne
shrl
and
xor
sub
jbe
mov
insb
lock
adc
clc
or
jnp
lds
jbe
pushf
jmp
das
cmpsl
scas
sub
mov
mov
jecxz
fadds
add
enter
sar
jl
and
jg
dec
dec
gs
int3
push
or
inc
or
stos
lahf
mov
mov
sbb
stos
adc
stos
xor
aad
aam
adc
jns
mov
cmpb
fnstsw
pop
movsb
jbe
jmp
cwtl
enter
in
pop
inc
mov
cs
fwait
xor
orb
jg
pop
and
shrl
dec
dec
mov
fwait
repz
ss
fadds
sub
int3
pop
jae
test
cmp
cli
xchg
out
data16
aas
xchg
xor
lds
leave
xchg
inc
dec
adc
or
push
out
xchg
cwtl
scas
and
out
add
sbb
movzwl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
adc
mov
xor
add
sub
jmp
cmp
rcl
rol
ficoml
out
lods
pop
int3
js
fs
js
test
mov
daa
sub
repnz
adc
add
mov
lcall
push
and
rcrl
sti
dec
popf
mov
xor
or
sahf
insl
jae
jb
xchg
xor
je
enter
cmpl
call
sub
jmp
cld
cmp
sub
into
mov
addl
and
xchg
ja
sbb
mov
movsb
xchg
mov
sti
jne
and
xchg
scas
xor
lcall
and
xor
and
mov
jns
ret
test
jg
sbb
dec
lea
mov
rol
cmp
repz
jb
fdivrs
push
je
or
add
push
pop
or
jl
sar
leave
lea
add
cld
dec
pop
mov
mov
dec
cmc
sub
jmp
push
sahf
inc
je
cmc
fidivrl
faddl
daa
inc
xchg
shl
pop
in
cmpsb
popf
sbb
mov
outsb
lods
int3
xor
push
stos
mov
rcll
inc
insb
and
fistpl
jb
jae
xchg
jmp
push
gs
inc
pop
aad
ds
adc
pop
jne
and
add
adc
and
cmp
aaa
ss
or
cmpsb
xor
std
fsub
add
movsl
lret
pop
pushf
test
xor
out
fwait
pop
shll
loopne
jmp
or
mov
hlt
pop
ds
ds
aam
test
sahf
mov
jae
mov
test
mov
lahf
xor
sub
imul
cli
ljmp
or
push
mov
lock
xchg
movsb
in
into
inc
push
icebp
stos
mov
inc
mov
cmp
and
mov
loopne
jp
pop
popf
scas
adc
or
mov
xchg
ret
iret
mov
sbb
andb
xchg
ja
rorb
push
rcll
hlt
out
out
fadd
jmp
xor
sub
add
push
mov
in
imul
mov
negl
rolb
jbe
scas
sbb
mov
mov
push
xchg
xor
jecxz
inc
fisttpl
cmc
sbb
or
push
jl
loope
icebp
xchg
sbb
out
lods
sbb
jae
add
or
in
fsubrp
adc
imul
shr
adcl
mov
jle
daa
in
xchg
in
in
sbbl
or
inc
jg
inc
incl
add
add
add
or
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
jmp
jmp
iret
lret
aad
in
mov
inc
sarl
fs
js
inc
cs
ss
pop
mov
mov
je
lds
pushf
and
lods
leave
jo
add
data16
in
js
aad
enter
mov
ds
jecxz
out
push
dec
or
inc
int3
and
dec
cmp
adc
pop
in
dec
add
inc
dec
push
mov
xor
push
sub
sbb
mov
pop
test
jle
addr16
xor
jno
cmpsl
push
adc
add
insb
mov
adc
out
jbe
jmp
sub
push
sti
call
and
loopne
scas
stc
push
jle
inc
subb
adc
pop
aas
into
xor
lahf
in
or
sub
push
dec
adc
dec
or
mov
sub
mov
cmpsb
pop
int
insb
lock
lret
out
shrb
ret
cmc
and
insb
push
call
jb
sub
aad
mov
outsl
ret
add
adc
std
in
std
push
outsb
lret
xchg
adc
ljmp
call
push
sbb
ret
dec
jp
lods
pop
cmpsl
cwtl
dec
xchg
hlt
xor
push
shrb
xor
cs
sti
fucom
arpl
fcoms
fmull
cmpsb
pop
out
lret
mov
movsb
movlps
xlat
in
int
push
mov
imul
call
pop
xchg
dec
adc
lret
sbb
test
aas
loope
mov
ds
mov
pop
ror
push
or
shrl
adc
cmp
mov
lahf
lock
insb
movsb
jb
fistps
xchg
sub
jecxz
inc
rorl
int3
loopne
imul
push
mov
outsl
xchg
pop
and
sbb
inc
cmpsb
dec
and
jno
mov
inc
inc
add
cmpsb
bound
cmp
push
pop
aaa
movsl
push
push
mov
dec
jg
jle
negb
xchg
les
dec
stc
xor
mov
imul
dec
cmpsb
xchg
dec
test
or
or
mov
fadd
xchg
scas
pop
fisubs
adc
fbld
sbb
and
cmpsb
adc
xor
and
fcmovne
std
incl
mov
push
inc
imul
jge
stos
pop
pop
mov
sbb
xor
lock
inc
jno
sbb
sub
mov
inc
or
mov
sub
ljmp
mov
in
movsl
push
in
cltd
pop
out
or
out
call
and
ss
or
into
stos
inc
xchg
icebp
js
shrb
in
adc
adc
xchg
dec
jle
mov
lret
call
dec
mov
xchg
ss
ror
jg
mov
inc
incl
add
insb
add
mov
xor
sub
sbbl
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
movl
mov
mov
push
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
xor
mov
jmp
cmp
cmp
ret
shll
dec
xlat
lock
js
fs
js
pop
adc
dec
subb
adc
cmc
imul
ja
insl
jmp
mov
cmpsb
mov
popa
sbb
or
sbb
add
fistl
es
xlat
sub
dec
mov
ret
into
loopne
mov
add
mov
cmp
xor
stos
sub
mov
mov
jae
xor
jb
movsl
inc
pop
cltd
sbb
test
sub
xlat
stos
adc
bound
out
test
dec
lahf
repz
fsubr
mov
lea
xor
stc
jecxz
test
xchg
lahf
cmp
fsubrs
std
sti
mov
testl
js
movsl
jae
mov
repnz
adc
out
inc
incl
jno
outsb
shlb
mov
push
lcall
in
sar
pop
int
mov
cmpsl
sub
jp
out
and
outsl
out
xlat
inc
sub
adc
ss
pop
cmp
dec
pushf
inc
sbb
and
jp
pop
in
pop
cltd
mov
fiaddl
xor
pushf
aam
fsubl
shll
cwtl
mov
out
mov
divb
in
jbe
mov
outsb
mov
repnz
mov
clc
jmp
dec
xchg
js
cmp
pusha
adc
in
inc
jne
out
fs
test
fwait
repz
call
fwait
in
inc
dec
lret
push
sbb
sahf
test
ja
lret
mov
sub
xlat
or
mov
push
or
fldenv
test
inc
pop
fsubrs
out
test
push
sub
push
and
aaa
cmp
pop
xchg
cmp
xchg
je
imul
faddp
xchg
xchg
push
shlb
push
and
xchg
push
ss
mov
lahf
shrb
push
add
mov
divl
das
sbb
jne
roll
aaa
xchg
rcr
lods
fidivs
rclb
xchg
lret
int
mov
in
and
mov
lcall
push
rep
sahf
popa
adc
or
sar
je
cmp
cmp
add
mov
es
mov
cli
dec
mov
ret
mov
dec
mov
sti
pusha
sbb
pop
push
movsb
roll
rorb
scas
push
inc
ljmp
dec
sub
aaa
mov
into
das
stc
jmp
lretw
xchg
mov
ja
sub
xchg
mov
or
mov
sub
adc
stc
ret
sub
inc
lea
pop
in
xchg
pop
shr
sti
shll
adc
pop
leave
testb
adc
push
jge
jno
aas
rcr
pop
sub
ror
or
inc
test
mov
mov
mov
movzwl
xor
add
mov
mov
mov
inc
jmp
ror
lret
fcmove
rcl
adc
xchg
xchg
sti
js
pushf
fstpt
fs
js
push
cmp
fs
adc
mov
das
adc
addr16
into
sbb
in
sub
inc
andl
or
adc
push
jb
adc
push
subl
push
and
ret
or
out
cltd
arpl
out
mov
and
in
outsb
mov
scas
add
fstpt
shlb
inc
out
rolb
mov
pop
imul
push
fldt
or
sahf
inc
rol
popf
jno
shll
or
mov
call
rorl
ss
aam
fsubl
stc
xor
or
xor
pop
xor
adc
push
ljmp
and
mov
jae
jmp
adc
cmp
nop
pop
lret
rorb
jecxz
int
je
aas
scas
filds
cmp
mov
incb
sub
ss
push
jns
orw
adc
imul
pushf
cmp
mov
or
xchg
lcall
or
xchg
out
ds
mov
mov
and
lahf
les
in
xor
jmp
std
aaa
leave
stos
fbld
add
mov
inc
xor
ret
outsl
xor
ljmp
mov
orb
cmp
jb
mov
call
cmpsl
add
jnp
push
loope
add
sbb
sbb
mov
push
mov
inc
cs
imul
adc
icebp
rorl
mov
dec
xor
cmp
gs
xchg
cmp
inc
push
pop
repnz
daa
aaa
mov
movsl
push
push
pop
scas
push
mov
sub
sbb
mov
popa
ljmp
jmp
loopne
rcrl
sar
pop
cmpsl
jbe
out
xchg
call
mov
mov
ret
sar
adc
push
jle
dec
testb
adc
or
mov
xchg
mov
js
imul
shrb
das
clc
enter
xchg
dec
mov
cltd
push
or
jecxz
stos
cmc
xor
lods
cmp
test
jbe
sbb
cltd
fldt
bound
push
das
arpl
pop
dec
cmp
cltd
mov
bnd
xorb
stos
subb
or
jg
pop
cmpsb
rcll
stos
xor
pop
xor
aad
push
test
dec
xor
add
sahf
or
pop
mov
pusha
fstpt
int
xor
pop
mov
push
adc
test
cwtl
cmp
jne
pop
pop
mov
mov
jmp
lret
ret
fld
add
fsub
js
cmpsl
mov
js
fs
js
mov
adc
fidivl
repz
mov
jb
mov
xchg
sahf
mov
or
test
inc
repz
in
mov
mov
push
insl
jl
outsb
sbb
mov
iret
ds
ja
push
idivb
mov
imul
repnz
mov
adc
pop
dec
xchg
push
lret
jmp
in
inc
xchg
jno
push
cmp
xchg
pushf
xchg
dec
mov
cltd
inc
jae
sbb
into
out
jo
xchg
sbb
or
iret
outsb
jg
imul
ja
or
popa
jge
int3
sahf
inc
inc
fisubrs
lahf
arpl
movsb
dec
inc
int
jl
rorl
mov
and
inc
sbb
mov
lret
cmp
fcoms
enter
cmpsb
cmp
ja
and
add
clc
cmp
inc
addr16
iret
add
mov
in
bnd
pop
orl
xor
test
aam
divl
jo
add
jle
int
test
aad
mov
cld
or
mov
or
ds
push
mov
roll
pop
divl
push
popf
mov
daa
leave
lds
push
or
or
pop
hlt
mov
pop
cs
xor
loopne
cmpb
mov
test
mov
fistps
xchg
pop
mov
inc
insl
push
js
xor
mov
add
ja
mov
xchg
loop
shll
or
stos
sbb
pusha
adc
xchg
jl
in
mov
jae
aaa
inc
mov
scas
cmc
pop
ret
push
mov
sub
sbb
jne
or
cmc
test
pop
ror
out
imul
jge
adc
nop
lods
inc
int
imul
les
cmp
mov
xor
mov
call
xor
pusha
jecxz
jecxz
pop
pop
xorl
mov
adc
mov
jae
adc
jne
icebp
cwtl
lods
fsubrl
pop
mov
mov
fdivrs
jp
mov
mov
inc
gs
loop
repz
pop
fs
out
ret
into
ficoml
dec
adc
mov
daa
bound
int3
fwait
inc
push
dec
aam
dec
in
push
imul
jno
xor
mov
dec
jnp
ret
test
mov
xchg
rol
or
sbb
pop
int3
jb
dec
sbb
lret
js
xorb
xchg
add
and
mov
hlt
lcall
nop
and
mov
cmpsl
mov
out
loop
fwait
cmp
xor
or
inc
inc
cmp
lods
cmc
mov
roll
mov
mov
xor
add
mov
mov
jmp
ret
ror
rcr
rcl
push
add
cmp
fnstsw
fs
js
leave
ffreep
push
or
daa
hlt
xchg
sub
stos
idivb
xor
in
mov
in
push
std
lds
jae
push
xchg
sub
sbb
mov
sbbb
stos
fistps
cwtl
shrb
add
mov
sti
stos
push
je
jne
sbb
adc
adc
bound
ret
aad
adc
sub
or
in
popa
lods
pushf
and
mov
stos
daa
fwait
test
mov
fistl
push
sahf
rolb
in
adc
adc
fcmovnbe
sub
lods
lea
inc
mov
shll
add
cmc
jae
mov
xchg
dec
xadd
push
dec
adc
mov
add
nop
mov
mov
pop
sub
mov
mov
inc
inc
mov
rcrb
jle
rcrb
icebp
inc
mov
je
in
loop
xchg
loope
dec
divl
pop
push
xchg
leave
lods
pop
nop
push
bsf
ret
xor
inc
hlt
ret
jmp
movsl
inc
fldt
mov
lret
fstps
push
add
pop
jmp
mov
pop
fadds
je
pushf
das
sub
add
jne
in
addr16
adc
and
adc
lret
xor
fstpt
cmc
rcrb
adc
imul
rcrb
adc
mov
in
pushf
xchg
outsl
jnp
inc
xor
mov
inc
enter
mov
rcl
cmp
sbb
mov
inc
hlt
imul
bt
scas
insl
inc
insb
xor
sarl
adc
popa
sub
dec
xor
lods
bound
jae
insl
nop
rcr
shlb
inc
leave
pusha
add
push
sub
scas
orb
sahf
filds
cld
stc
jmp
jg
or
test
adc
add
movsl
mov
stc
cmp
jmp
cltd
movsl
xchg
xlat
inc
shll
cmc
sahf
and
xor
test
or
daa
xchg
in
dec
mov
in
mov
aas
je
jne
cmp
push
pop
mov
sub
int3
pop
pop
mov
or
jecxz
adc
cmp
ret
ljmp
xor
pxor
jecxz
dec
pop
push
imul
jne
push
jecxz
cmp
jnp
mov
xchg
mov
popa
push
add
stc
sbb
sbb
jno
pop
mov
in
pop
in
push
inc
in
push
inc
jge
mov
insb
ss
mov
enter
fidivs
js
fisttpll
sbbb
adc
adc
adc
mov
push
sbb
push
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
jmp
cmp
rcl
fcmovu
into
leave
xchg
loopne
js
fs
js
fmuls
xchg
pop
ss
fimuls
cmp
cwtl
adc
push
repnz
mov
sub
pop
add
add
sub
leave
cld
xor
leave
sub
dec
cs
jp
jne
lods
je
pop
jmp
cmp
dec
dec
stos
adc
aaa
dec
out
mov
pusha
jg
stos
or
hlt
and
movsl
scas
fs
jb
sbb
int3
jg
repnz
sub
mov
pop
jnp
dec
daa
roll
pop
xchg
push
cmc
push
mov
imul
lods
jno
adc
adc
push
and
or
lahf
jno
out
pop
inc
fstpl
fs
and
or
int
push
std
arpl
xchg
sbb
pop
add
rclb
pop
and
mov
movsb
fdivrs
std
ds
adcb
dec
fld
shrl
mov
xchg
fistps
popf
fstl
mov
mov
push
or
aaa
pop
les
mov
cmp
daa
mov
jmp
and
fsubrl
jmp
push
jmp
push
shr
inc
jle
jne
xor
and
jbe
sbb
sbb
ljmp
test
loopne
add
xchg
add
cmp
imul
rolb
adcl
insb
fisubl
cmp
je
shrb
out
lcall
imul
je
or
bndldx
fnstcw
lcall
mov
xchg
out
or
mov
cmc
mov
into
out
int3
mov
rcl
xchg
roll
jecxz
repnz
jge
test
daa
jo
shl
xor
cli
sbb
stos
stos
pop
int
mov
jmp
inc
movsb
lock
jno
enter
cs
daa
jl
data16
mov
cs
ret
arpl
mov
imul
test
push
repz
push
inc
cmp
mov
pop
adc
in
push
cmp
insl
enter
call
and
xlat
ret
pushf
inc
or
mov
jg
xor
push
nop
mov
push
inc
mov
rorb
jecxz
or
inc
mov
fcomps
test
jl
pushf
divl
leave
enter
aas
xchg
pop
addl
stos
stc
mov
inc
mov
add
or
out
fs
jg
xor
clc
xlat
lret
lock
stos
into
mov
sbb
jle
dec
stos
push
stos
popf
enter
lods
pop
inc
ret
mov
push
dec
lea
mov
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
jmp
aas
fld
add
sahf
inc
movb
int3
out
js
jle
js
mov
sbb
in
clc
adc
mov
icebp
repnz
lea
clc
stc
stos
icebp
fwait
dec
xchg
pop
cs
push
out
stos
sbb
jne
mov
pop
imul
js
lock
add
add
jecxz
dec
mov
out
push
stos
xorl
lahf
pop
addr16
loopne
push
cmp
sbb
cs
repz
mov
sbb
cmpsl
mov
xor
lret
fstp
push
push
in
cmc
out
xor
mov
roll
ficoms
and
mov
xchg
mov
pushf
inc
sbb
and
das
pop
mov
imul
outsb
cld
xchg
add
adc
out
or
mov
mov
cs
lock
mov
push
xchg
ja
mov
jmp
pushl
aad
push
inc
nop
stc
adc
cmpb
lret
ss
jae
cmp
outsb
sub
lret
or
leave
mov
push
add
lret
fs
push
mov
push
xchg
out
add
clc
js
imull
pop
cmp
movsl
movl
fs
inc
stc
push
push
pop
adc
pop
adc
ja
fstps
adc
aam
adc
sarl
fimuls
fildl
or
out
in
enter
ret
xor
push
xorl
cmp
add
push
popf
loop
jno
adc
jae
add
out
add
clc
inc
xchg
jle
fildll
aad
jecxz
push
ja
out
xchg
adc
xchg
popa
arpl
mov
xchg
pop
sbbb
cs
fsts
mov
inc
cmp
xor
test
iret
pop
stc
push
fcomps
sbbl
lahf
punpckhdq
push
push
xlat
std
ljmp
push
jbe
std
xlat
mov
adc
mov
cld
ljmp
jl
cli
lahf
jns
mov
out
pop
xchg
dec
fidivrs
outsl
scas
cmpsl
push
and
ja
lcall
lods
adc
jnp
imul
loope
push
and
mov
notb
cmp
dec
daa
mov
and
jmp
dec
mov
and
inc
notl
clc
jl
jns
jne
xchg
sbb
lock
enter
mov
jmp
inc
enter
jle
mov
push
mov
xchg
adc
mov
push
cmp
push
xchg
fwait
sarb
add
ret
push
mov
push
xor
push
jmp
cmp
aad
mov
loope
sahf
cmp
js
cmpsl
jle
js
mov
bound
jl
dec
dec
add
pop
enter
fsubs
mov
cmp
xchg
jb
mov
je
lcall
rol
pop
mov
ficoms
scas
jp
mov
pop
fnsave
out
mov
outsb
fiaddl
dec
jns
hlt
dec
scas
cli
popf
pop
dec
sub
sbb
ss
sbb
xor
mov
sbb
jnp
enter
das
imul
je
daa
jno
pop
jl
sub
mov
std
addb
lock
add
dec
test
arpl
sub
sub
mov
call
in
lret
pop
push
xor
xchg
and
push
dec
xchg
xchg
xor
loope
adc
push
stc
das
mov
repnz
pop
xor
shll
jmp
or
xchg
add
jbe
mov
xchg
pop
addr16
imul
add
inc
scas
mov
sbb
leave
dec
loope
div
xor
jo
out
push
imul
and
push
cmp
scas
aam
mov
mov
lret
icebp
sbb
cmpb
cwtl
and
mov
cmp
mov
xchg
insb
sub
xchg
adc
mov
push
test
mov
mov
mov
or
lcall
jb
sub
leave
jnp
sub
aas
mov
cmp
insb
xchg
pusha
add
add
xchg
sub
jge
out
mov
jno
out
mov
cmc
and
addb
pushf
mov
sbb
outsl
in
es
inc
and
daa
inc
std
mov
cmp
mov
sti
test
xchg
push
gs
mov
pushl
je
jecxz
ror
cmp
pop
lock
in
xor
add
js
es
mov
lds
nop
jmp
pop
popa
jl
add
dec
aas
outsl
cmp
daa
das
jno
out
clc
push
fmuls
push
fs
out
xor
ret
loope
repnz
and
push
lcall
jbe
push
add
jb
shrb
cmpsb
fimull
les
mov
pop
loopne
inc
sbb
test
loop
fsubrl
cwtl
dec
xor
stc
je
sub
je
lret
sub
and
inc
nop
das
mov
push
and
clc
mov
movl
movl
mov
add
push
mov
mov
add
mov
mov
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xor
mov
mov
orl
add
add
xorl
imul
mov
jmp
cmp
lret
stos
adcl
mov
clc
addr16
nop
das
scas
xor
push
pop
jl
pusha
sub
or
mov
in
mov
sbb
sub
jecxz
std
xor
add
lds
aam
in
pop
in
test
idivb
mov
or
or
mov
negb
shl
jnp
out
push
iret
push
sub
push
inc
sbb
cwtl
ja
jbe
ljmp
fwait
and
sbb
push
push
mov
jnp
lret
int3
subl
int3
mov
ds
sbb
mov
shr
outsl
fisttpl
add
test
mov
lock
push
mov
lods
lcall
ret
test
mov
out
inc
xchg
incl
cld
xchg
sbb
into
sbb
aam
nop
outsb
or
xor
and
cli
cld
mov
inc
inc
lock
popf
cmp
inc
scas
sub
out
cs
jmp
inc
mov
cs
rolb
dec
cwtl
out
subl
jo
dec
inc
jns
stos
cmc
scas
lret
pop
fstps
mov
arpl
cmp
cmp
insl
cmp
adcl
out
dec
xchg
jl
gs
lods
mov
add
stc
push
in
leave
mov
adcb
add
add
fwait
outsb
cld
popf
adcl
faddp
lahf
fiadds
inc
outsl
ljmp
sbb
jnp
jno
mov
xchg
pop
dec
pop
out
dec
out
sbb
aam
loopne
sbb
pusha
rorb
mov
xchg
loop
xor
push
or
pop
mov
rol
inc
test
int
sub
cmp
cli
faddl
in
fldl
mov
loope
inc
jp
add
xchg
in
or
pop
outsl
cltd
pop
mov
xor
pop
cmpsl
add
dec
push
movb
xchg
cli
mov
bound
les
xor
cmpsl
das
adc
lock
pop
cmpsl
mov
fisubs
out
roll
imul
movb
or
cmpb
dec
sbb
in
mov
pop
out
lahf
sub
and
fisubrs
sbb
push
lcall
lods
xchg
mov
pop
loopne
mov
stc
int3
jae
daa
dec
repz
cli
or
mov
adc
mov
cmp
movl
jne
jmp
lret
cmp
mov
arpl
js
jle
js
imul
mov
cs
xor
push
lods
dec
inc
cmp
cmpsb
or
mov
mov
mov
jecxz
jg
out
mov
adc
out
idivl
push
lds
daa
dec
push
call
sub
cmp
dec
mov
testb
int
ret
mov
push
mov
jmp
scas
pop
mov
dec
pop
mov
inc
sahf
xchg
popf
mov
call
int
inc
bound
lea
lods
lret
test
xchg
dec
in
ss
addb
aam
push
lea
dec
stos
mov
call
fildl
push
jb
sub
ret
popa
pop
shlb
sbb
push
cmpsb
gs
int
adc
push
in
dec
lret
lret
test
mov
iret
dec
test
sbb
jnp
incl
inc
lds
xchg
pop
outsb
cwtl
in
out
cmp
xor
jl
loope
mov
shrb
mov
cltd
cmp
xchg
sub
mov
aaa
push
fisttpl
cmc
movsl
sahf
rcrl
adc
lods
enter
jmp
pop
ror
int
int3
test
mov
lahf
pop
ret
nop
jbe
testl
sarb
xchg
push
test
aam
icebp
out
pop
cmp
cwtl
jno
out
push
mov
jbe
imul
ret
sahf
and
bound
mov
stos
loopne
arpl
cmpsb
sub
in
loope
lds
ljmp
add
sbbl
arpl
cmpl
jg
dec
sub
dec
dec
inc
xlat
inc
shl
push
push
stos
push
push
and
cmpl
stos
test
ret
adc
jns
das
mov
mov
push
inc
push
arpl
xchg
mov
insb
inc
mov
mov
sbb
pop
xor
sub
sub
sti
cmp
push
sar
mov
xor
mov
aas
clc
clc
fistpll
mov
jg
fld
adc
mov
js
lods
push
jmp
icebp
push
jns
gs
push
je
mov
pop
or
and
nop
mov
in
call
enter
cmpsb
xchg
cmp
mov
sti
xor
loop
inc
xchg
push
mov
popa
push
jno
or
cmp
mov
mov
add
cmp
sbb
es
adc
scas
push
mov
addl
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
jmp
xlat
leave
lret
aad
leave
adc
sbb
in
js
cmpsl
jle
js
mov
jp
dec
nop
rclb
mov
test
fcomi
cli
sarl
inc
mov
or
push
xor
loop
fldenv
sbb
pop
xor
xchg
enter
push
dec
daa
es
inc
jle
movsl
orl
aam
xlat
lretw
pop
add
mov
ret
xor
xchg
dec
fmulp
push
xchg
and
mov
and
jmp
call
dec
fwait
dec
adc
mov
fwait
leave
ss
mov
lret
cmp
in
add
sti
xlat
icebp
loopne
cmc
and
mov
dec
test
push
pop
cmc
mov
sub
and
lret
cmpl
pop
fwait
lods
inc
mov
iret
xor
xor
jp
roll
in
xor
aad
out
and
jl
js
dec
test
pop
aaa
sub
shlb
test
mov
fwait
jp
xorb
fs
stos
loop
lods
inc
mov
popa
inc
dec
mov
shll
push
popf
dec
mov
pop
aad
jb
sahf
aaa
jp
pop
cmp
or
fwait
outsl
aaa
xchg
and
dec
je
sub
scas
xchg
sahf
fwait
dec
pushf
imul
add
adc
sub
pop
xor
mov
adc
inc
shlb
fisubrl
inc
push
call
icebp
adc
cmpl
or
mov
out
xchg
enter
pop
and
pusha
imul
mov
push
inc
mov
xor
ret
pop
insl
nop
lcall
jbe
in
mov
lea
mov
adc
jmp
or
and
data16
pushf
or
mov
mov
stos
inc
sti
pop
stos
lods
mov
jge
push
mov
push
outsl
fcoms
sbb
sbb
jbe
xchg
jg
dec
push
sub
inc
xchg
or
call
iret
inc
add
xor
pop
mov
sbb
xchg
mov
leave
call
or
inc
or
mov
mov
xchg
fs
xchg
orb
test
xor
mov
push
inc
dec
xchg
jge
leave
adc
jl
outsb
or
or
nop
std
fdivl
push
xchg
ds
outsl
aam
scas
pop
jbe
lret
and
xchg
add
lahf
dec
shr
sub
push
jnp
mov
dec
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
jmp
leave
enter
xlat
enter
sub
js
jle
js
mov
push
out
push
push
xchg
scas
add
mov
imul
je
mov
rcrl
cmp
pop
sbb
mov
sub
sbb
outsb
das
lret
cmc
pushf
cs
pop
push
pusha
aas
jg
adc
stos
je
fistl
aas
pop
dec
sub
sbb
add
jae
xor
xchg
add
cmp
fucomi
inc
push
arpl
mov
leave
adc
cli
pop
xor
or
int3
and
push
mov
cmp
cmp
mov
jno
idivl
mov
je
xor
ljmp
enter
pop
mov
mov
mov
in
xor
cmc
divl
adc
call
gs
jmp
call
repz
popw
xchg
lods
mov
insb
insb
mov
mov
mov
adc
inc
shl
jmp
movsl
or
mov
loope
sub
push
and
loop
jbe
rorl
pop
pop
xor
push
out
cmp
cltd
rcr
jg
sbb
xchg
ss
pusha
lahf
out
push
es
fdivl
add
or
in
add
test
add
lea
pop
jle
ret
dec
cmp
adc
jmp
push
iret
sub
push
sub
dec
stos
inc
push
pop
das
call
in
xor
xor
fisttpll
mov
jbe
mov
or
leave
cld
sub
adc
mov
cwtl
cmpsb
stos
dec
jge
js
and
sub
jae
repnz
imul
rcrl
xor
in
hlt
sti
es
imul
mov
ss
dec
mov
xchg
cwtl
jle
movsb
adc
lock
es
pusha
cltd
jg
and
mov
mov
inc
std
testl
shlb
ds
sahf
ror
mov
mov
sbbb
cmp
daa
pop
test
rcl
fcomp
ror
out
ds
jae
lahf
popf
sbb
dec
inc
dec
fwait
cltd
nop
push
inc
or
aaa
aaa
pop
jmp
sbb
cmp
int
pop
mov
or
cmpsb
repz
push
dec
push
mov
dec
dec
daa
fcompl
aaa
jmp
cli
mov
xor
shll
inc
lahf
mov
enter
mov
pop
ret
cmpsb
dec
ds
xchg
mov
push
sbb
push
pushf
shrb
adc
push
mov
movl
mov
mov
mov
movl
movl
cmp
jne
xor
jmp
lret
rcl
xlat
fxch
fsts
sbb
mov
js
push
jle
js
xor
cmpsb
jle
frstor
pop
add
mov
inc
aam
into
imul
movsb
cltd
cmp
inc
fsubr
popf
imul
push
out
fs
sbb
nop
gs
popf
pop
cld
fwait
stos
aam
mov
dec
adc
cmc
jae
test
xchg
pop
punpckhdq
flds
mov
je
mov
cmp
xor
mov
pusha
mov
xchg
loope
adc
ds
out
lret
cmp
jge
mov
cmpb
sarl
out
cmpl
fwait
lahf
adc
xlat
ffreep
mov
mov
xchg
lock
adc
xchg
cltd
dec
test
ret
lock
mov
std
imul
cld
cmpsb
cmp
and
adc
mov
xchg
push
and
jns
xor
sub
fisttps
cmc
loop
sahf
push
cmp
scas
int
dec
out
loopne
inc
inc
mov
inc
mov
in
mov
dec
fnstsw
and
or
mov
dec
sbb
cmp
xor
jp
pavgw
jg
dec
lock
aaa
mov
shl
inc
adc
icebp
and
or
mov
xor
xor
pop
adc
jnp
adc
fld
fistpll
daa
enter
sbb
mov
pop
lret
test
pop
xchg
pop
dec
pop
fcoml
out
xchg
xor
lods
cli
incb
stos
pop
fs
mov
jg
stos
xor
adc
mov
jno
adc
fists
cmp
and
jle
subl
cmp
adc
lods
and
mov
leave
lods
sub
dec
outsl
adc
cmpsb
push
stc
mov
loope
outsb
xchg
js
pusha
daa
cmp
adc
rclb
shrb
loopne
stc
mov
dec
clc
sti
xchg
sti
xchg
flds
inc
enter
xchg
add
adc
jo
stc
repnz
fwait
cmpsl
or
fsubrp
cmpsl
insl
lods
add
mov
push
mov
fists
cmc
rorb
push
out
test
ss
xchg
xorl
mov
into
and
sub
add
scas
lret
in
mov
ljmp
or
add
inc
xchg
push
push
out
call
out
rorl
mov
xor
and
lods
push
fcoms
adc
data16
fsubs
xor
cmpsl
push
and
repz
mov
sbb
push
aam
push
out
ret
mov
sbbl
mov
xor
and
mov
add
neg
mov
orl
movzwl
sbbl
not
xorl
and
jmp
ret
int3
leave
rcr
sahf
inc
imul
hlt
js
push
jle
js
jp
sub
dec
sub
mov
addr16
outsb
and
xor
ljmp
fucomip
mov
jnp
add
mov
pushf
inc
or
push
scas
dec
mov
jge
mov
and
push
subb
cs
lea
loop
sub
add
cmpsl
and
scas
inc
jae
mov
dec
loope
adc
dec
jle
addr16
cmc
fwait
inc
mov
and
push
mov
cld
pop
sarb
or
shrl
push
cli
mov
dec
and
jne
adc
insb
push
fisttpll
and
inc
and
mov
and
jg
jnp
idiv
adc
mov
jns
cmpsb
test
ja
xchg
adc
rcrb
mov
test
ret
push
insb
jmp
sbb
add
jecxz
jg
fucomip
pusha
jne,pt
jecxz
and
pop
std
adc
test
sub
cmpsb
stos
mov
das
int3
pop
hlt
xor
stos
push
stc
imul
mov
sub
mov
xchg
hlt
ja
and
jbe
scas
cmc
out
mov
outsb
sub
dec
call
addr16
dec
mov
ljmp
mov
ret
fwait
pop
xor
shlb
push
ds
mov
and
inc
xchg
test
lret
arpl
insb
inc
stos
je
lcall
cli
sub
push
cmp
adc
repnz
xor
mov
push
out
sbb
adc
lea
rcl
loope
sub
jb
dec
cmpl
iret
cmc
push
lods
imul
pushf
inc
jle
xchg
ret
pop
pushf
pop
repnz
jns
popf
sbb
pop
mov
stos
xchg
shl
sub
lods
xchg
inc
repnz
addr16
mov
aaa
add
and
jmp
in
cmp
jp
fwait
jmp
out
test
push
sbb
out
and
je
popa
outsb
push
sub
xchg
inc
mov
insb
add
es
inc
xadd
int3
call
lcall
andl
jnp
dec
es
cmc
pop
addl
icebp
inc
or
cmc
mov
stc
ljmp
dec
pop
pop
push
mov
int
adc
jo
nop
xchg
mov
notb
test
lret
xchg
push
shl
sbb
adc
rolb
int3
pushf
movsb
insb
push
test
jb
mov
outsb
mov
inc
adc
xchg
pop
inc
fstps
add
cmpsl
xchg
loop
clc
rcrb
dec
or
add
xorl
mov
pushl
call
test
je
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
mov
sub
xor
movl
mov
xor
or
sub
imul
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
add
jmp
cmp
ret
ror
into
jge
enter
adc
stc
js
je
js
data16
and
test
pop
cmpsb
lods
inc
notl
push
and
dec
es
dec
scas
mov
dec
filds
adc
mov
mov
add
push
fmuls
sub
pop
stos
xchg
das
lret
pop
or
test
in
inc
test
mov
test
and
inc
mov
fistpl
add
mov
or
inc
scas
jg
cmp
lods
add
hlt
mov
mov
jnp
and
push
ret
adc
adc
pop
std
dec
lcall
mov
cmp
mov
sub
xchg
dec
sbb
leave
mov
arpl
cmp
sub
rorb
inc
das
and
js
shrb
pop
mov
adcb
in
arpl
add
es
call
xchg
mov
mov
mov
jge
and
add
xchg
jl
insb
lock
in
out
mov
lods
leave
sbb
imul
jp
sub
adc
add
subl
addr16
dec
pop
mov
dec
mov
out
ret
lret
dec
sub
inc
lea
jb
iret
pop
fmul
sar
jo
insl
or
sub
sub
test
cmpsl
gs
or
int3
out
les
pop
aas
dec
push
mov
addr16
stc
mov
xchg
inc
imul
add
nop
ror
loope
in
test
xchg
mov
das
enter
push
jno
cmp
mov
negb
xchg
int
add
lcall
sub
in
rcrb
fcmovnb
adc
dec
push
imul
jnp
out
mov
mov
fldl
loop
xorb
push
mov
loope
in
ja
mov
cmc
int3
mov
sbb
xchg
lret
ds
add
test
jp
sub
pop
popf
imul
std
pop
out
in
cmpsb
shlb
cmp
mov
pop
inc
or
mov
mov
pop
or
inc
xchg
jo
add
int
call
pop
adc
xor
xor
js
js
out
arpl
xchg
xchg
lods
dec
in
sbb
dec
dec
outsb
bound
or
push
scas
fs
div
xorb
push
ljmp
pop
in
sbb
cltd
inc
mov
jg
mov
and
data16
ds
pop
addr16
pop
push
je
push
stc
push
jo
insb
mov
ret
ret
aam
call
outsl
or
int
inc
add
cmpsl
inc
add
mov
add
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
lea
mov
mov
sub
and
mov
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
push
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
mov
jmp
ror
int
dec
xor
jge
add
js
je
js
pop
mov
cmp
adc
scas
loopne
cmc
push
test
cwtl
push
add
xor
add
mov
mov
mov
sbb
inc
mov
ja
fucomp
inc
ds
cltd
xchg
mov
repnz
adc
sub
sub
mov
mov
sub
pop
aad
gs
jmp
es
inc
out
add
test
test
shl
inc
test
pop
std
hlt
mov
js
pop
mov
cwtl
sbb
into
jmp
mov
rcl
or
xchg
mov
lret
repz
jns
jns
popf
sbb
push
or
cmp
jmp
lea
jnp
movsb
js
arpl
ja
test
xor
aad
bound
xchg
out
xlat
sbb
outsl
test
movl
lods
loope
test
add
pop
cmp
adc
aaa
mov
sbb
pusha
pop
dec
call
jge
ss
out
adc
insb
push
pop
and
call
ljmp
pop
in
cli
popf
pop
lcall
mov
and
sbb
adc
or
cmp
sbb
sbb
dec
jge
mov
jo
outsb
jge
push
fdivr
xor
lret
std
adc
cs
sbb
dec
aad
add
jae
lods
test
pop
dec
movsb
lret
sub
sub
lods
inc
fmuls
mov
mov
dec
fnop
xchg
movsb
arpl
xor
xor
and
cmpsl
stos
push
test
aas
jnp
xchg
and
in
lock
inc
dec
arpl
icebp
xor
ljmp
push
cltd
pop
jmp
add
mov
or
sub
imul
bnd
test
fwait
adc
int3
mov
jbe
xor
or
test
test
jae
push
mov
jl
in
mov
inc
lcall
add
and
cmp
imul
jle
mov
aam
sub
mov
mov
cmc
aas
into
cmc
sti
jmp
lds
nop
mov
cmp
lahf
incb
loope
push
pop
or
xlat
push
jno
insb
std
push
or
jb
aad
push
lock
ret
add
sbb
ljmp
xchg
mov
loopne
jge
scas
adc
shlb
mov
adc
fwait
in
lods
jb
push
inc
xchg
stos
sbb
sbb
out
js
clc
repnz
adc
ds
int
out
xlat
xchg
cmpsb
mov
inc
sbb
mov
mov
mov
xor
mov
jmp
xlat
rcl
aad
vmovapd
iret
aad
cmpl
jle
js
jae
adc
ret
out
xchg
jno
push
lcall
inc
sahf
cmpsb
lods
je
xor
sbb
lea
inc
jbe
pop
jne
mov
xchg
dec
shrl
sbb
fdivp
cmp
mov
in
arpl
jns
sub
adc
fdivp
fimull
push
dec
out
inc
fadds
jb
xchg
xor
jbe
pop
je
inc
cmpsl
leave
out
jns
int3
sbb
mov
cmpsb
lea
lods
xchg
push
mov
fwait
sub
das
lret
lods
xchg
inc
daa
pop
xchg
sbb
and
fldenv
mov
add
pop
scas
ds
aaa
repz
in
or
enter
gs
jne
push
cmp
add
adc
inc
mov
lods
mov
gs
and
adc
aaa
sbb
in
push
lcall
ret
or
dec
imul
jecxz
mov
out
rcrb
dec
outsl
mov
dec
in
dec
pop
inc
jl
and
inc
fstpt
xchg
fld
and
call
add
add
out
lret
fildll
xor
mov
cmpsb
jp
int
aam
dec
loope
mov
mov
mov
dec
out
add
push
sub
pop
imulb
sahf
fcmovnb
xchg
imul
sbbl
sbb
test
in
mov
fnsave
xchg
jp
sbb
xchg
enter
leave
pop
dec
and
test
call
aaa
dec
cld
cmpsl
jecxz
xchg
cmp
cmp
loop
and
mov
in
sbb
jge
imul
sub
adc
or
shll
add
mov
cmp
or
iret
out
and
and
int3
jnp
lret
xchg
mov
push
mov
push
movsb
jmp
mov
popa
pop
jmp
and
push
xor
in
mov
in
mov
gs
repnz
dec
scas
stos
push
sbb
addb
std
popa
pop
das
and
test
dec
lcall
clc
push
lods
lods
popf
fs
adc
mov
mov
xchg
cmp
repz
fsubrs
jmp
repnz
cmc
ja
out
dec
adc
movb
push
jmp
lret
sub
rorb
cmp
sbb
and
int
cltd
movsl
jnp
jb
hlt
adc
mov
dec
lea
call
jnp
mov
testl
cmpsb
sarl
mov
adc
cmp
jmp
lods
lret
fcoms
dec
adc
or
jnp
sbb
xor
xor
add
add
div
mov
movl
cmp
je
movl
lea
mov
mov
jmp
aas
aas
iret
iret
xlat
xlat
fists
push
psubsw
jge
cmpb
jle
js
dec
xor
lds
mov
daa
subl
popa
adc
xor
popf
cli
sti
mov
fisubrl
outsb
sarl
sub
and
cs
mov
mov
pop
add
repnz
enter
jns
dec
imul
or
int
subl
xchg
rcl
out
popl
sub
sub
das
sub
push
sub
pop
call
push
adc
shl
subb
jg
adc
push
je
cld
pushf
jmp
popa
and
ja
add
mov
mov
add
cmp
xor
addr16
addr16
sahf
cmp
cmpsl
mov
mov
in
testl
push
mov
pop
fwait
mov
test
jle
cwtl
pop
inc
adc
mov
mov
mov
push
jbe
pop
inc
dec
stos
or
mov
loope
cmc
lods
mov
inc
aaa
sar
in
ficompl
cmp
std
std
imul
mov
je
xchg
into
cmp
loopne
test
sbb
xor
push
adc
fistl
or
and
sbb
cmp
mov
mov
addr16
lret
bound
jns
xchg
std
jb
jge
out
dec
pop
fsubp
int3
enter
test
xor
mov
cmc
mov
jne
cmpsl
dec
call
fdivl
mov
fisttpl
or
and
ljmp
cmc
sbbl
xchg
enter
and
pop
shll
xchg
sbb
aam
jge
sub
add
jle
mov
push
movsb
sbb
daa
or
ds
xchg
out
mov
shrl
fwait
out
pop
rclb
xor
sahf
clc
repz
push
lahf
mov
pop
push
int
adc
shll
lock
dec
repnz
dec
or
lods
ficoml
sub
cltd
push
int3
mov
mov
test
mov
fistpl
xor
xorl
and
rol
xchg
xchg
inc
and
popl
push
push
or
subl
out
or
shlb
mov
mov
les
popa
les
out
lock
cmc
imul
cmp
outsl
cwtl
inc
loope
adc
or
in
mov
testb
mov
bnd
rcll
jmp
movb
sub
push
push
bswap
shll
gs
stos
rol
pop
bound
sub
pop
insb
or
xchg
or
jge
addr16
jmp
subb
in
test
mov
jmp
sarl
fcmovne
mov
fsubr
out
push
sbb
test
je
js
cld
insb
mov
shll
mov
adc
jmp
into
out
std
or
lcall
sbb
and
test
dec
cmpb
inc
mov
ret
inc
flds
xlat
dec
test
xor
add
divl
push
sub
scas
inc
sbb
cmpsb
lock
xchg
sub
insb
xor
pop
push
sub
cmpsl
stc
mov
testb
das
in
xchg
test
cltd
cmp
xor
fnstenv
and
rorb
fnsave
aam
lods
jmp
xor
nop
push
push
fcompp
out
push
ds
stc
insl
pop
xchg
mov
sub
vpmacssdql
mov
push
xchg
stos
xchg
inc
popf
test
clc
pop
aas
daa
test
outsb
jmp
les
inc
sub
and
mov
add
leave
mov
fdivrl
xchg
xchg
push
fsub
and
sub
mov
stos
cmp
les
addr16
fnsave
push
insl
ret
pop
es
daa
mov
cltd
xor
xorl
push
cmp
out
xchg
add
ss
enter
clc
repz
sub
push
clc
adc
mov
fldt
cltd
loop
lods
movsb
fucomp
xchg
push
jge
or
lahf
push
das
test
sbb
stc
add
jno
loope
loopne
xor
cmp
pop
dec
or
and
jno
int
rcrb
scas
dec
mov
gs
jge
lcall
mov
stc
dec
push
cmp
repz
insb
pop
sbb
aam
pop
mov
mov
ljmp
push
sarw
mov
or
inc
int
inc
mov
frstor
in
sahf
cli
mov
bound
xchg
mov
clc
inc
adc
jge
ss
je
inc
sbb
adc
mov
shr
push
test
int
dec
and
sub
nop
pop
xor
in
mov
cs
or
cmp
dec
movsl
mov
jne
push
add
mov
cld
push
lret
xchg
jecxz
lods
pop
imul
push
lretw
movb
cmp
in
fwait
cmp
push
stc
jg
int3
jns
sub
mov
mov
call
sbb
or
mov
add
ret
mov
adc
js
mov
dec
jbe
cs
or
dec
testb
inc
sbb
test
test
sub
sub
sub
mov
mov
mov
add
mov
sbb
xor
ljmp
cmpsb
cmp
jmp
rol
leave
fcmove
rcl
pop
mov
lds
je
js
outsb
mov
addr16
sbb
sub
int3
inc
pop
out
sub
xchg
push
jecxz
adc
les
fwait
aad
cmp
sub
lcall
or
push
jmp
lahf
outsl
sbbl
pop
popf
mov
mov
loopne
push
pop
push
fmull
pop
push
bound
ljmp
test
arpl
adc
sub
xchg
xor
lahf
mov
sub
inc
popa
jmp
jg
pop
ret
add
in
leave
and
ljmp
shlb
or
jecxz
jecxz
lahf
mov
pop
hlt
or
mov
and
sub
fnsetpm(287
jbe
inc
ljmp
push
in
pop
in
dec
out
mov
lea
adc
into
hlt
mov
mov
cltd
imul
lock
xchg
ret
into
or
or
sbb
or
and
inc
pop
push
cmp
push
sti
xor
mov
or
and
and
in
ret
and
mov
daa
mov
fnstsw
mov
pop
fmul
icebp
hlt
cli
js
bound
push
mov
mov
push
cwtl
lcall
ss
cltd
cmpsb
cltd
dec
xchg
dec
loope
js
or
and
jp
lret
filds
pop
shlb
testl
and
mov
outsl
xchg
orb
cs
pushl
pushf
jl
cmp
shrl
ds
mov
xchg
xor
fstps
ds
add
shl
and
jecxz
rorl
rcrb
add
negl
jnp
xchg
lods
xor
fiadds
fincstp
cmp
movsb
jbe
dec
pop
cwtl
fwait
stos
sbb
das
std
or
test
pop
movsl
decb
daa
test
or
jge
in
add
dec
insl
xchg
ret
enter
cmp
sbb
xor
fld
adc
cltd
mov
mov
js
sbb
popa
jns
push
repz
push
cmp
lahf
cld
ljmp
jns
call
pop
ret
nop
or
and
push
mov
cmp
jnp
leave
test
push
mov
jg
test
inc
inc
jp
ss
mov
aas
arpl
xor
mov
mov
aas
cmp
xor
push
inc
out
aad
cld
out
jmp
xchg
pop
int3
popf
loop
repz
bound
out
mov
aad
push
adc
cs
push
fiadds
adcb
sbb
jae
adc
fs
sub
fcomi
outsb
daa
les
inc
xor
aam
scas
xchg
jle
shll
test
add
mov
orl
mov
xor
add
pop
pop
pop
leave
ret
mov
add
jmp
leave
xlat
ret
rcl
leave
fldcw
mov
js
je
js
dec
pop
adc
xchg
mov
or
pop
dec
es
adc
outsb
sahf
sbb
out
inc
mov
push
mov
lahf
pop
dec
cmpsl
mov
orl
mov
pop
mov
jae
out
jnp
arpl
das
sub
pop
pop
into
mov
arpl
aaa
int
sbb
adc
sub
inc
xor
hlt
les
mov
les
adc
ret
mov
mov
xchg
std
pop
jns
add
lea
enter
aad
popf
mov
lods
pop
sub
int3
sahf
cmp
pushf
test
rclb
loopne
mov
leave
dec
xor
mov
icebp
rorl
lock
jge
enter
shll
movsb
inc
lret
mov
ret
cld
insb
or
daa
ja
jb
cltd
push
cmpsl
shr
xor
fadds
test
jno
push
jle
dec
mov
jle
mov
jmp
imul
xor
lret
mov
test
std
fimull
sub
jbe
sbb
mov
sub
push
pop
pop
cs
sarl
jmp
add
add
test
jle
and
mov
mov
ficompl
mov
fadds
xor
xor
cmp
add
pop
push
sti
sub
repnz
mov
daa
xor
out
in
add
icebp
ljmp
sahf
mov
test
into
pop
insb
cwtl
xor
stos
aas
or
out
mov
cmpsl
clc
in
movb
call
or
xchg
jo
mov
push
jmp
mov
adc
cld
icebp
xorb
out
and
sub
loop
sbb
je
and
mov
cld
out
cmp
data16
cmp
addr16
clc
cmpsl
out
push
imul
xchg
in
cltd
mov
test
mov
ror
mov
add
subb
cmp
shll
inc
rclb
loope
adc
push
adc
xlat
cltd
insl
test
sub
std
and
cmp
out
pop
adc
fildl
inc
scas
push
sbb
push
pop
out
test
int
or
or
inc
les
jnp
in
push
data16
pop
jg
or
rorb
xchg
sahf
and
push
jb
popa
test
loop
xchg
dec
cld
mov
subb
out
mov
mov
or
push
jle
adc
sahf
add
gs
pop
cmc
sbb
pop
fimull
add
add
and
pop
mov
xchg
lods
pop
and
lahf
and
cmp
or
aad
sbb
test
jnp
test
add
add
sbbb
jmp
into
aas
ds
rcl
add
stos
rol
xor
mov
je
js
gs
pop
popf
jbe,pt
xor
xor
ss
pushf
cmp
les
pop
arpl
cmpsl
sbb
cs
popf
imul
adc
push
jbe
xchg
nop
jp
sbb
clc
int3
mov
out
dec
sub
fdivrs
clc
scas
pop
sti
aam
inc
mov
pusha
dec
lret
inc
mov
data16
inc
mov
data16
sub
sbb
adc
or
xor
aad
iret
fstl
and
insl
cli
bound
xchg
cwtl
add
or
sub
and
pop
enter
out
mov
push
lods
mov
test
jge
shl
imul
mov
mov
mov
movsb
popf
mov
sbb
fwait
mov
pop
rorl
xchg
addb
push
lods
scas
fs
pop
sbb
and
or
gs
dec
mov
fcmovu
and
pop
cmp
es
mov
and
push
pop
jmp
jno
js
push
shlb
lods
jno
xlat
push
pusha
movb
movsl
jne
pushf
mov
out
popa
xchg
insl
sub
or
mov
xchg
lock
cmpsl
ret
or
ror
mov
lret
xlat
jle
xor
fadds
pop
ljmp
add
out
cmpsl
and
loopne
call
push
cmp
imul
arpl
or
pop
test
xor
xorb
lea
popl
mov
pop
jmp
push
lea
mov
cli
aad
sbb
jb
push
jns
adc
ss
mov
test
cmp
adc
xchg
daa
call
ja
shrl
in
xor
arpl
stc
in
adc
or
or
into
lcall
sahf
sbb
or
inc
mov
xchg
mov
sub
outsb
xor
xchg
mov
fsub
and
sbb
adc
pushf
mov
mov
das
sub
aad
rorb
or
mov
pop
out
mov
sbb
in
andl
lods
pop
je
das
inc
mov
lret
jmp
lods
jbe
ret
sbb
push
popf
adc
sti
dec
mov
imul
xchg
les
scas
iret
xchg
jl
loope
in
jnp
scas
or
imul
ds
ud2
into
rorb
cmp
and
mov
fldcw
jmp
xor
shll
jns
cmp
aas
adc
push
sub
std
xchg
je
add
inc
stc
or
adc
add
pop
adc
sub
repnz
aas
arpl
popf
js
xor
call
jle
cli
je
mov
xorl
jmp
mov
jmp
ds
ror
rcl
fisubrl
xchg
jge
or
sub
xchg
js
je
js
xchg
adc
add
sub
arpl
sbb
or
pop
sti
and
leave
xchg
lock
xlat
leave
jmp
xlat
popa
std
mov
nop
sub
pop
je
test
pop
hlt
sbb
jmp
cmpsb
test
pop
mov
iret
loopne
sub
mov
std
in
or
jno
jnp
and
cmp
jmp
test
enter
loop
ds
jno
js
decl
std
ja
lret
ficoml
rcrl
ja
mov
cltd
or
xlat
pushf
dec
add
or
push
xchg
std
outsl
pop
out
into
mov
test
jp
jg
addb
pop
xchg
xor
or
inc
push
mov
lcall
sbb
inc
mov
imul
pop
sub
mov
in
mov
or
out
xchg
rolb
mov
adc
pop
sbb
cmp
adcl
repz
imul
out
jp
mov
mov
cmpsl
push
mov
fbstp
clc
imul
stc
inc
cwtl
out
subl
or
iret
inc
js
stc
lcall
sbb
mov
fmuls
aas
push
daa
push
push
and
aam
mov
inc
jmp
stos
push
repnz
dec
ljmp
aaa
inc
fldcw
pusha
xchg
xor
add
dec
das
pushf
shrl
lcall
push
push
mov
or
pop
fisubl
js
or
sbb
jg
test
sbb
gs
push
xchg
dec
call
push
pushl
nop
dec
jmp
jecxz
push
mov
xchg
push
into
mov
repnz
divb
pop
jmp
popf
dec
jne
adc
push
cmp
or
xchg
js
out
inc
sbb
fiadds
xor
imul
mov
lock
mov
and
and
jle
pop
lea
pop
aam
push
cmp
xor
scas
dec
loope
fildl
push
subl
out
dec
sub
mov
push
fisubs
inc
or
push
out
mov
mov
sbb
test
xchg
loop
and
push
push
jmp
push
insb
or
xlat
or
dec
or
insl
cmpsb
fstp
and
xchg
jbe
out
mov
loopne
ret
movsb
xor
jo
lods
fcmove
push
stos
lds
sbb
sbbl
jg
jge
cmc
cld
aam
mov
xor
mov
or
jmp
mov
jae
dec
scas
dec
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
jmp
int3
into
lret
ror
ficoml
cmc
ss
insb
ds
js
je
js
xchg
mov
jg
int3
outsb
shrb
das
fwait
sub
mov
xchg
mov
xchg
mov
stos
adc
lahf
lds
dec
aas
in
loopne
mov
sub
leave
loopne
out
xor
addr16
add
rclb
loopne
mov
scas
mov
dec
push
out
movsl
inc
pop
adc
cltd
mov
mov
mov
jbe
pop
xor
xchg
je
divb
or
bound
mov
jg
mov
jmp
mov
mov
push
xlat
cmpsb
mov
inc
push
jg
lret
inc
inc
mov
ds
jle
or
mov
mov
iret
cwtl
out
pop
adcb
dec
mov
notl
mov
push
push
div
jp
mov
adc
movsl
xchg
enter
push
loopne
fstps
add
jmp
movsl
movsb
cwtl
ficomps
mov
jne
mov
xchg
xchg
es
xor
push
sub
adc
jle
jnp
shll
fsubl
rcll
rcll
xchg
mov
mov
xor
test
sub
out
insl
das
sub
lock
dec
test
outsb
dec
pop
dec
lds
int
inc
cmp
popa
push
inc
in
jo
fiadds
jnp
clc
addr16
push
xchg
push
xor
mov
push
test
test
into
sbb
jae
adcl
addr16
mov
int
pop
mov
mov
or
call
repz
popa
xor
popf
in
psrld
repnz
movsb
push
jmp
movsl
nop
stos
dec
or
inc
pop
mov
mov
pushf
add
mov
or
dec
push
mov
sub
cmp
lret
in
enter
mov
outsb
pop
add
mov
xor
inc
and
push
nop
pop
mov
or
test
int3
hlt
repz
in
xchg
inc
imul
stc
decl
xor
add
aam
jbe
stos
dec
mov
dec
lcall
sub
push
stos
mov
mov
xlat
lds
mov
les
push
into
push
inc
enter
in
mov
das
and
shl
fs
insb
add
stos
fmull
and
sbb
jp
adc
fs
arpl
test
das
or
mov
pop
xorl
clc
imul
and
push
adc
ret
mov
jge
mov
xchg
inc
mov
mov
and
scas
loope
decl
push
pop
scas
xor
aaa
jb
inc
sub
fldt
or
sbb
mov
mov
jmp
xlat
cmp
ds
js
adc
cmp
fstpt
fwait
js
je
js
push
das
or
push
addr16
add
mov
cmp
scas
cmp
xchg
out
mov
jp
repnz
mov
sub
adc
inc
lahf
push
pop
or
std
pop
lcall
push
xor
pop
je
jbe
outsl
fnsave
pop
ljmp
aad
pushf
out
xor
push
pop
jbe
movsb
jmp
xlat
in
in
int
addb
add
pop
push
mov
push
pop
adcl
cltd
stos
adc
mov
or
add
repz
pop
xor
mov
inc
push
xchg
inc
gs
pusha
mov
or
sub
xchg
mov
bound
mov
pop
mov
sbb
lds
mov
sub
jb
xor
loope
jmp
mov
cwtl
in
inc
adc
imul
in
ds
int3
or
add
loope
sub
mov
mov
rcll
and
insb
sahf
dec
loope
pop
sahf
mov
out
sbb
cli
in
lahf
sub
popa
insl
sub
mov
lock
sub
add
or
pop
mov
les
mov
push
sbb
cmp
es
subb
cmp
stos
inc
inc
outsb
xchg
jnp
xor
add
movl
outsl
and
jbe
cmpsb
pop
test
jmp
pop
jecxz
mov
and
hlt
dec
mov
jne
mov
cmp
ljmp
sbb
mul
fisubs
push
lods
pop
add
mov
push
pop
lret
lods
sahf
cmp
sbb
jge
jmp
notl
cli
loope
cmp
rcrl
xchg
clc
nop
mov
daa
in
aad
or
call
jo
out
stc
data16
pop
push
cmp
test
cmp
aad
je
clc
mov
orl
or
ja
fs
rcrl
and
imul
ret
jns
insl
mov
and
add
negl
int
popf
xchg
adc
gs
shl
sbb
mov
ret
dec
xchg
xchg
and
jecxz
jecxz
mov
arpl
xor
jo
push
push
lods
cmp
xchg
int
testl
adc
ss
pop
outsl
popa
xchg
fimuls
loop
push
dec
jae
arpl
or
sub
enter
and
mov
fldcw
or
fs
lods
dec
xor
push
iret
ret
nop
inc
ficompl
imul
mov
add
scas
je
insl
aad
xor
pop
nop
fcoms
fwait
xor
in
out
push
fadds
cltd
xchg
push
ret
dec
ror
pop
mov
xor
add
movzwl
mov
xor
lea
add
jmp
cmp
fcmove
xchg
fnstenv
cwtl
js
je
js
hlt
mov
mov
dec
push
mov
sti
or
and
jb
gs
ss
call
fs
outsl
mov
std
nop
out
test
cmc
int3
movsb
dec
incb
pop
xor
cmpsl
pop
xor
pop
lret
gs
inc
push
dec
add
cmp
shlb
xor
lret
push
shll
jbe
mov
sbb
or
fistpll
scas
mov
sub
aad
push
or
pop
push
cmp
jb
and
dec
xchg
dec
mov
mov
insb
test
cmp
outsl
testl
mov
adc
sub
push
stc
pop
ss
jns
adc
scas
ficomps
div
push
xchg
aas
js
or
sbb
mov
and
inc
out
bound
sbb
and
pop
cli
mov
inc
dec
inc
push
push
fiaddl
test
lcall
jbe
std
test
stos
or
inc
out
xor
and
mov
jnp
inc
and
mov
out
jo
mov
ss
xor
std
subl
test
dec
inc
mov
jnp
int
imul
xchg
cmp
mov
gs
xor
icebp
stc
mov
cmpsl
addr16
imul
inc
mov
cltd
and
movsb
repz
mov
inc
int3
dec
cli
adc
push
xlat
outsb
rolb
mov
rcl
cld
imul
pop
das
addb
lret
mov
push
sti
sub
arpl
repz
in
inc
xchg
outsl
jne
inc
mov
inc
mov
mov
icebp
in
xchg
loop
add
sub
dec
jae
inc
jp
pop
insl
pop
mov
cwtl
xchg
jmp
mov
ljmp
xor
rorl
aam
loope
jl
mull
or
add
mov
std
nop
push
outsb
and
pushf
std
add
rclb
loope
into
adc
or
std
ret
scas
or
je
pushf
xchg
aam
imul
in
adc
pop
inc
inc
aad
aam
lcall
add
sub
out
push
dec
or
push
imul
cmp
sub
push
jge
cltd
push
cmc
pop
iret
inc
xchg
lret
lcall
stc
jecxz
aaa
ss
mov
cwtl
cmc
jne
lahf
jo
filds
in
push
xchg
enter
push
sub
js
or
xchg
dec
lods
in
inc
cld
mov
outsl
pop
inc
pushl
out
pop
stc
pop
jmp
xchg
and
dec
push
outsb
lods
repz
in
jle
ror
sbb
cltd
xor
mov
loop
sahf
sbbl
mov
sub
cmp
test
inc
pop
pop
mov
xchg
ljmp
clc
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
jmp
rol
leave
rcr
mov
jbe
mov
je
js
dec
mov
bound
mov
pop
lret
rclb
mov
or
dec
sbb
jge
out
cmp
mov
adc
icebp
fiaddl
add
add
jl
or
sarb
ds
mov
sbb
ja
xor
test
ja
mov
mov
pop
xchg
stos
lret
mov
ret
sti
in
cmp
jl
xchg
dec
add
cmc
cmp
cltd
jle
mov
push
sbb
shr
cmovl
shll
in
mov
pop
loope
push
cltd
cmpsl
test
rol
mov
jns
pop
push
jns
xor
mov
roll
xor
xchg
xchg
xor
add
inc
icebp
bound
int3
cmova
test
cld
jns
adcl
scas
cmp
cmp
adc
add
and
xlat
leave
out
add
pop
cmc
repz
mov
jbe
sahf
lock
sbb
push
jmp
test
mov
in
sahf
ret
xchg
jo
sbb
mov
notl
mov
xor
stos
xchg
push
jo
cmp
ror
and
push
jmp
add
xlat
cmp
ror
lods
jnp
inc
aad
pop
mov
sahf
xchg
subl
ljmp
icebp
fnstenv
xor
imul
push
jo
jb
add
movsl
cmpsl
jo
es
mov
cwtl
jp
insl
jle
hlt
out
repz
dec
sub
adc
lods
xor
subl
adc
test
dec
mov
pop
neg
xchg
or
push
mov
mov
imul
inc
fwait
adc
xor
subl
imul
ljmp
test
push
and
int3
jae
cmc
ret
mov
gs
jae
xchg
aad
mov
xor
jge
or
sbb
ret
lret
and
adc
adc
xchg
das
hlt
int3
xor
mov
lahf
insb
or
jne
sub
fs
mov
push
jb
fisubl
jl
jl
sbb
lahf
or
fwait
enter
adc
xor
ljmp
insl
push
mov
dec
adc
push
jle
mov
hlt
js
imul
div
or
dec
sbb
in
imul
push
jecxz
cmp
push
push
inc
jns
jo
hlt
pop
cli
add
hlt
or
push
pushf
es
sbb
xor
adcb
shll
cmovne
outsl
cmp
xchg
dec
mov
in
scas
insb
add
sub
scas
mov
add
jno
sbb
mov
jl
jae
push
push
or
scas
push
lret
cmpxchg
cmp
adc
add
rol
ror
aad
xchg
mov
aad
ja
call
je
js
sbb
xor
mov
imul
data16
ds
es
repnz
jb
aaa
sahf
int
dec
push
and
add
je
jg
and
fsts
in
xor
rolb
mov
inc
mov
and
and
cwtl
or
add
lcall
jb
xchg
iret
in
pusha
ss
jns
daa
lahf
jecxz
inc
push
push
adc
sbb
xchg
cmc
stc
popf
push
shll
mov
cmp
adc
push
mov
sbb
xchg
aas
leave
inc
leave
stos
push
insl
repz
pop
pop
cwtl
ret
jg
and
shrl
in
into
mov
mov
cmp
inc
push
jns
pop
shl
mov
xchg
inc
push
inc
mov
in
cmp
mov
flds
stos
pop
gs
sub
cmc
lds
jns
xchg
ds
pop
movl
lret
sub
mov
sub
inc
ja
xchg
jmp
fnstenv
jns
cmp
std
mov
or
stos
loop
hlt
dec
mov
leave
pushl
mov
mov
testb
adc
andb
jecxz
and
and
pop
jmp
cld
pop
ss
rorb
lds
push
shufps
inc
in
cli
insl
pop
pop
out
mov
jo
xchg
xchg
and
daa
cmp
xchg
xchg
pusha
in
mov
cmp
aaa
dec
sarb
outsl
ret
and
cmp
in
jne
repnz
xchg
jg
shlb
jle
mov
pop
mov
dec
pop
inc
mov
mov
out
dec
movsb
xor
and
hlt
push
repz
dec
mov
loope
dec
adc
ja
leave
mov
sub
mov
negb
call
push
cltd
pop
adc
ds
addr16
movsl
add
mov
push
stos
jle
shlb
cld
jl
sbb
imul
pop
add
xchg
imul
xchg
jge
push
outsb
push
clc
jecxz
dec
shlb
jnp
xchg
push
test
fsubrl
fwait
adc
ljmp
cmp
jg
or
or
cltd
stc
sub
outsl
add
add
iret
jo
repnz
xor
call
push
negl
or
sbb
xchg
fwait
add
int
sub
sahf
cwtl
pop
ficoml
loope
dec
insl
push
adc
dec
ficompl
sub
xchg
in
xchg
daa
or
jl
push
shrl
pop
jmp
hlt
test
fcmovb
iret
mov
lahf
nop
sbb
mov
out
mov
movsl
mov
and
int3
ljmp
dec
test
push
mov
je
mov
jmp
push
mov
sub
sbbl
mov
xorl
jmp
ror
mov
fcmovbe
push
aad
push
xchg
sub
sub
js
loop
push
aam
std
mov
sub
dec
sub
adc
add
out
sbb
imul
cmp
jnp
testb
or
inc
push
lds
cltd
and
insl
xor
xor
mov
lds
and
ja
data16
gs
cmc
xchg
dec
sub
pushf
inc
dec
ret
lret
rcrb
negl
or
jb
dec
pop
sti
sbb
clc
adcb
in
and
mov
test
aaa
add
sub
mov
dec
or
xor
xchg
cmp
stos
pushf
lods
mov
xchg
adc
test
rol
leave
add
shlb
pop
leave
cmpsb
lods
ret
mov
clc
lock
xchg
add
pop
lahf
in
testl
pop
push
fisttpll
and
outsl
adc
adc
cwtl
cwtl
aad
push
jp
push
inc
test
test
sahf
cs
dec
push
add
imulb
sbb
scas
mulb
lret
mov
add
fdiv
sub
inc
out
mov
aas
out
fs
ret
fidivrl
and
pop
push
mov
sbb
sbb
push
mov
scas
inc
cwtl
shrl
mov
cmpl
leave
dec
gs
push
pop
sbb
jbe
inc
sbb
dec
mov
mov
adc
loopne
jp
out
outsl
add
iret
stos
ja
add
sub
fisubrs
ja
sarl
jno
xchg
popf
roll
int
push
cwtl
sub
pop
jmp
inc
pop
push
pop
addr16
cmp
or
in
shrb
xor
lcall
mov
out
cmc
jno
push
xlat
push
lds
inc
fwait
or
sub
cmpsb
dec
frstor
popf
mov
xor
fs
popf
add
imul
fstp
cmp
jbe
ret
jb
adc
addr16
idivb
aaa
sti
mov
aam
jg
ja
sub
rcr
and
sub
inc
das
int3
lldt
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
movzwl
xor
mov
xor
or
mov
adcl
add
subl
push
mov
adcl
mov
negl
xor
jmp
int
iret
lret
and
push
pusha
in
jnp
or
movsl
js
xor
inc
and
cltd
lds
pusha
popf
lea
xchg
leave
mov
sbb
dec
es
mov
xor
push
adc
das
dec
adc
rclb
mov
or
mov
jge
scas
cmpsl
lods
sbbl
test
mov
xchg
add
dec
or
stos
sbb
pop
lock
pop
fwait
push
cmp
insb
push
lds
andl
inc
rclb
jl
cld
pop
add
call
mov
pop
sbb
les
hlt
xor
jge
in
lea
fidivrs
push
cltd
xchg
dec
mov
dec
mov
cmpsl
mov
cmp
cltd
lods
mov
pop
inc
inc
and
sbb
pusha
nop
insl
jo
inc
push
lahf
sbb
filds
rcrl
dec
in
int
xchg
aas
jne
adcb
inc
subb
mov
icebp
dec
mov
inc
stos
je
lods
popf
stc
xchg
xchg
mov
push
shr
fmull
je
inc
mov
push
xchg
hlt
pop
sub
mov
mov
inc
int
jae
cmp
rorl
shr
xor
xor
dec
shrb
push
inc
ficoms
fmuls
sub
addb
aad
push
mov
and
adc
movsl
xor
lods
fdivrs
dec
xchg
or
jmp
pop
inc
cmpsb
xchg
out
jae
or
hlt
inc
sbb
shl
mov
xchg
sub
adc
inc
mov
mov
xlat
mov
stc
mov
insb
aaa
fcomi
lods
ret
scas
mov
outsl
jae
fldln2
sub
enter
dec
push
lods
test
addl
js
icebp
icebp
cmpsb
xchg
cmp
pushf
inc
pusha
nop
cwtl
sbb
xchg
add
mov
and
push
and
sbbb
cmpsb
jmp
push
or
mov
mov
out
sbb
hlt
or
xchg
test
icebp
or
nop
sub
sub
ret
out
insl
adc
fwait
xlat
clc
stc
fs
movl
movl
andl
add
jmp
cmp
jne
mov
mov
mov
mov
mov
movl
mov
mov
movl
jmp
movl
jmp
leave
ret
enter
fld
int
fdiv
pop
je
in
stos
js
xor
mov
xor
pop
out
inc
and
icebp
push
addl
push
inc
cmc
mov
sbbl
dec
nop
shrl
cmpl
loope
mov
sti
cmpb
int
lds
xchg
ret
popa
sbb
push
or
mov
movsl
insb
movsl
filds
mov
lock
mov
cmp
imul
adc
and
jg
in
mov
sub
xor
inc
ret
insb
ret
pop
jmp
dec
inc
nop
bound
push
sub
int
fs
xor
inc
sahf
pusha
xor
aaa
ss
jae
pop
pop
fmull
movsl
jl
adc
pop
dec
shlb
xchg
mov
xorb
out
repz
or
ltr
nop
cmp
sbb
pop
adc
hlt
lds
push
incb
mov
je
adcb
in
pop
daa
fldl
idivl
or
xor
outsl
mov
out
mov
ret
xchg
xchg
jmp
cmp
sub
ds
cmp
arpl
lock
push
sub
pop
scas
inc
or
cmp
mov
fidivrl
adc
xchg
or
or
mov
and
test
aaa
push
dec
xchg
ja
jmp
xchg
add
ss
inc
jno
sub
fimull
cli
xchg
fwait
inc
dec
cmp
outsl
pop
adc
push
shr
jb,pt
in
movsl
decl
cmp
and
dec
es
mov
dec
jno
fs
and
out
gs
jns
insb
jecxz
ja
lret
jne,pt
mov
and
jle
mov
xchg
out
mov
jp
std
mov
es
adc
mov
push
jmp
push
xchg
xchg
adc
mov
jae
xchg
push
or
fadds
repnz
rcrb
das
int3
adc
out
jbe
stos
fisubs
xor
adc
outsb
inc
in
sbb
xorl
add
mov
test
add
lds
add
add
lret
aad
lea
leave
pop
test
js
xchg
push
sarl
inc
mov
push
adc
pop
mov
jae
rolb
and
lods
mov
or
fsubr
add
pop
movsl
add
dec
ds
mov
adc
jmp
in
loopne
lahf
dec
mov
xor
call
inc
in
xor
dec
test
mov
jl
jmp
in
sub
mov
cmp
scas
sete
mov
pop
rorb
pop
cmpsl
dec
leave
scas
sti
push
pop
test
pop
ds
jp
imul
push
sbb
gs
add
das
outsb
ljmp
mov
jp
insl
dec
jno
push
pop
pop
jg
sub
mov
dec
xchg
pop
std
adc
sbb
enter
mov
pop
jbe
cltd
adc
cld
sub
jl
inc
insb
pop
fldenv
fldl
cmp
pop
xchg
dec
dec
pop
and
imul
dec
mov
sub
add
cli
push
xor
xor
jp
fisubs
out
push
cwtl
jbe
xchg
hlt
cwtl
daa
lahf
and
mov
jb
out
enter
add
pop
in
repnz
push
add
sub
cltd
mov
mov
fisubs
dec
lret
push
xchg
sub
push
in
jne
lea
fwait
test
add
lret
dec
cmp
cwtl
cltd
sarb
test
enter
daa
shll
or
pushf
dec
mov
sbb
mov
jb
sub
sub
xorl
fdivl
out
vpaddsb
push
push
pop
sbb
cltd
pop
mov
mov
movsl
int3
xor
and
vpmacssww
rolb
mov
sbb
mov
cmpsl
pop
mov
or
sub
shll
xor
mull
lcall
fldt
shlb
loope
adc
outsb
insb
cmp
shrl
lds
xor
or
test
add
icebp
cmpsl
inc
add
inc
or
add
or
add
adc
inc
popa
add
mov
jmp
enter
ret
push
in
pop
dec
aas
sub
xor
xchg
push
cmpsl
mulb
cmp
dec
in
add
pop
dec
jno
sbb
andl
push
and
fs
pushw
mov
and
mov
mov
shll
sub
adc
bound
xor
movsb
ret
cmp
jge
arpl
pop
pop
aaa
sub
ficompl
insb
fstps
mov
push
cmpsb
push
into
nop
or
fs
loopne
sahf
mov
inc
mov
lock
cmpsl
ds
lahf
popa
inc
lock
fisubl
jbe
adc
mov
pop
lahf
inc
mov
dec
xchg
inc
xchg
push
or
pushf
mov
adc
pop
sarb
fisttpll
mov
pusha
mov
movsb
pop
popf
push
loopne
out
inc
xchg
test
dec
cmc
add
sub
fidivrs
daa
pop
test
les
jo
xchg
popf
mov
loopne
shll
or
lret
cmp
aaa
xor
xor
inc
and
jnp
and
cmp
outsl
xchg
mov
inc
mov
push
and
adc
sahf
sbb
xor
daa
mov
in
repz
mov
adc
and
or
pop
mov
es
adc
pop
jbe
pop
xor
mov
arpl
pop
cmp
call
pop
push
ja
repz
shrb
jnp
mov
out
test
hlt
pop
jl
loopne
jl
loope
call
fmul
rcrb
sti
scas
es
fwait
cld
cwtl
xor
pop
adc
adc
leave
inc
dec
jne
jp
push
sbb
xor
fadds
xchg
popf
in
and
lods
xlat
inc
push
adc
and
repz
mov
frstor
icebp
push
xor
leave
or
pop
in
and
lds
xor
mov
cld
push
sbb
mov
outsl
aad
mov
inc
or
xchg
add
and
cmp
mov
mov
inc
mov
popa
repz
daa
add
test
jno
in
sub
addl
push
adcl
call
movl
incl
cmpl
movl
jb
movl
jmp
cmp
jne
sbb
movl
mov
mov
mov
mov
movzwl
and
mov
adcl
xor
jmp
rol
leave
leave
leave
leave
rcrb
inc
mov
lods
js
xor
mov
mov
jbe
std
xchg
aaa
out
mov
push
in
cmp
notb
or
jmp
idiv
mov
fwait
mov
jo
xor
xor
push
jb
sbb
sub
xchg
int3
mov
push
xchg
hlt
popa
dec
mov
pop
mov
das
sbb
jns
sbb
add
xchg
fs
rorl
decb
lock
push
push
push
mov
loope
lods
sub
mov
addb
dec
enter
push
lret
push
fucomi
imul
add
les
repnz
cs
lcall
inc
xchg
mov
adc
mov
loop
orl
in
add
outsb
push
ja
add
and
test
fadds
inc
aaa
clc
push
shrl
push
mov
cmp
adc
cli
and
mov
insb
gs
sub
enter
push
inc
inc
mov
dec
jmp
pop
ljmp
dec
je
push
loop
push
dec
test
sub
or
loop
cmp
xchg
sub
call
pushf
data16
je
fstps
shr
sub
add
xchg
jnp
mov
and
adc
and
jb
pushf
mov
pop
cmpsl
pushf
test
lret
cld
jg
shlb
jge
xlat
cmpsl
xchg
out
nop
or
jle
dec
mov
hlt
repnz
fimull
push
lds
xchg
sub
dec
cmpsb
push
jecxz
and
mov
cmpsb
adc
mov
test
lock
jo
idivl
ret
sbb
je
xchg
int
push
lcall
mov
mov
pushf
jge
sbb
push
aas
push
dec
fdivl
dec
jns
clc
mov
loop
test
inc
xor
sbb
pop
paddsw
dec
jbe
push
xchg
sub
ret
mov
notl
lea
mov
mov
xor
add
mov
lea
push
mov
jmp
ds
roll
inc
call
js
jle
js
pop
cs
jbe
sbb
lds
shrl
sub
jecxz
push
pop
test
mov
mov
shl
outsl
cltd
add
xor
inc
add
sub
addl
sbb
fbstp
sbb
insl
xcrypt-ecb
cmpsl
iret
mov
push
inc
jae
inc
jno
repnz
push
std
add
xor
bound
inc
cmp
xchg
jp
movsl
inc
xchg
or
shl
data16
lods
add
fistps
xchg
adc
xchg
add
dec
push
insb
xor
and
xchg
je
fisubs
fisubs
mov
aam
mov
jne
test
fcomip
cmp
stos
xorb
jo
fcomi
loop
xor
les
mov
lret
pop
mov
dec
push
xor
rclb
jg
add
fwait
mov
rol
gs
shll
fcomp
shll
cwtl
int3
xor
and
test
jno
shl
sbb
ja
ret
ljmp
pop
scas
mull
test
loope
push
lock
es
adc
shlb
xor
sti
mov
jns
test
fsts
ljmp
vpaddb
and
xchg
sub
xor
mov
bswap
add
push
adc
insl
pause
xchg
shl
stc
pushf
inc
pop
cld
in
mov
xchg
call
in
jnp
jge
or
jecxz
cmp
jle
in
aad
xchg
and
mov
pusha
jnp
jb
stos
sbb
sub
sub
and
pushf
mov
sub
dec
mov
xor
test
add
insl
inc
mov
pop
sti
push
pop
pop
adc
popf
cmp
pushf
es
mov
leave
ljmp
ss
dec
iret
out
sbb
out
lahf
fsubrl
and
mov
xor
xor
add
push
jmp
xlat
lret
fcmovu
aas
cmp
push
cmp
fidivrs
mov
js
jle
js
xchg
repnz
mov
inc
mov
shll
addr16
int
sbb
sub
rorb
jns
bound
fmul
fbld
mov
iret
jns
xchg
or
mov
fwait
xchg
and
and
roll
push
dec
out
pop
leave
and
and
dec
aas
repnz
xchg
inc
jns
out
data16
or
fisubs
jge
iret
dec
in
ficompl
dec
sub
mov
loope
ljmp
in
adc
test
cld
mov
dec
cmp
insb
lcall
xor
xor
or
xorb
pusha
and
sub
dec
jecxz
das
lret
aas
mov
add
mov
mov
push
les
sbb
rcl
dec
push
lcall
ficompl
push
loop
pop
sub
cwtl
cli
jle
sbb
jg
mov
fstp
out
push
pop
movsl
mov
mov
les
xlat
xor
pop
inc
arpl
pop
sbb
and
hlt
in
pushf
jmp
fcmove
xlat
loope
fmull
adc
jnp
push
mov
xchg
in
stos
push
pop
imul
jecxz
in
outsb
adc
mov
jge
data16
mov
iret
dec
mov
lahf
sar
pop
jns
cmc
iret
iret
sub
in
mov
jo
pop
xor
fwait
push
cwtl
pop
enter
jae
frstor
mov
adc
xchg
scas
mov
mov
test
movsb
fcmovnbe
xchg
jmp
mov
push
fimull
fcompl
out
cld
sbb
push
mov
aaa
xchg
mov
and
repz
addl
rcrb
inc
fwait
test
hlt
sbb
xlat
ret
push
gs
xchg
aaa
shr
jmp
jbe
fiadds
in
mov
mov
cmpsb
lret
popf
push
lret
add
sti
cld
cmp
shl
jl
mull
inc
jp
push
sub
dec
xchg
movsl
add
jo
int3
hlt
dec
fdivrl
mov
push
pushl
call
jmp
cmp
jne
mov
jmp
sarl
ror
leave
dec
cmc
adc
mov
js
jle
js
xchg
inc
ret
addr16
fidivrl
sbb
out
out
mov
cmpsb
scas
les
out
inc
ds
or
cmpsl
jb
mov
mov
sub
out
sub
lods
xchg
or
push
xchg
sarl
mov
rolb
shrb
cmp
test
cmp
andl
inc
lcall
mov
inc
and
xor
jne
in
rol
adc
gs
out
mov
jl
jecxz
mov
dec
add
sub
pop
mov
jge
inc
xor
add
pop
in
addr16
sub
mov
jge
clc
lret
bnd
pop
cmp
ljmp
add
mov
inc
les
call
push
test
fdivl
adc
mov
fnsave
adc
push
or
stos
movsb
inc
ret
sti
push
dec
push
out
pop
jmp
add
jle
cmp
mov
mov
clc
lahf
and
cmp
push
lock
xchg
mov
ret
rclb
lock
shl
mov
dec
popa
cmp
fcoms
cmp
repnz
xlat
das
sbb
ljmp
and
test
pop
jg
inc
popa
mov
test
xorb
xabort
test
sarb
xor
movsb
clc
loop
sub
inc
ljmp
xor
and
mov
mov
mov
add
sub
sbb
add
stc
sbb
sbb
fwait
fcomi
loopne
in
inc
jecxz
js
sub
lods
cld
jg
sub
push
outsb
rolb
mov
push
lret
push
lahf
outsb
es
sbb
je
data16
pop
jo
push
jns
sub
mov
std
pop
pop
ret
xchg
in
xor
mov
lods
push
call
mov
outsb
fiaddl
mov
inc
mov
xchg
lea
push
fcmovne
mov
push
out
push
push
inc
mov
cmp
adc
xor
mov
movb
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
jmp
leave
fcmovbe
sar
rcrl
mov
pop
mov
mov
js
sub
sahf
pop
stos
cld
mov
inc
inc
iret
bound
sub
fidivl
xor
add
cld
aas
repz
fisubs
mov
movsl
sub
xchg
xchg
xchg
dec
mov
mov
push
push
pop
cwtl
mov
repnz
xorl
ret
pusha
addr16
rcll
push
pushf
sbb
rcrl
out
dec
jns
xchg
clc
aas
or
push
hlt
icebp
insl
leave
cmp
arpl
out
repz
mov
and
cmp
sub
mov
jecxz,pn
push
lret
inc
xor
insb
or
fmull
inc
in
in
add
shlb
mov
mov
rolb
xor
fldcw
pop
inc
fsts
cld
js
or
dec
cltd
inc
xchg
lcall
jg
mov
arpl
xor
mov
out
pop
inc
cmpl
negl
popf
daa
dec
cld
lock
mov
push
ja
sub
gs
adc
hlt
aaa
les
in
adc
xchg
scas
sub
ds
hlt
rcll
adcb
std
push
adc
movsb
dec
mov
rcrl
or
or
addr16
rolb
and
adc
in
jns
and
or
sub
jo
fcmovnu
es
jb
sbb
les
loop
and
rclb
test
stos
rolb
sub
std
mov
sbb
in
movb
in
pop
sub
pop
adc
jl
jb
and
sub
ja
clc
ret
cmp
sarb
pop
mov
iret
push
and
loopne
lret
std
mov
jo
aaa
add
mov
les
jmp
xchg
pop
add
aam
cmp
or
or
adc
xchg
rolb
inc
pop
cltd
push
cmc
cli
jbe
out
imul
jae
xor
stos
sub
mov
or
lea
cmp
jne
mov
pop
xor
pop
add
pop
leave
ret
push
mov
sub
push
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
movl
jmp
cmp
aad
xlat
jecxz
ja
test
int3
lods
hlt
mov
js
push
mov
movsl
push
cmp
mov
sbb
iret
lret
lret
push
sbb
enter
inc
lcall
and
dec
sub
aaa
ljmp
mov
aam
in
dec
lcall
fwait
push
leave
pop
jg
sbb
cs
jle
xor
in
popf
lret
in
cmp
fistl
lcall
mov
push
into
mov
test
pop
jb
mov
lds
push
frstor
sub
pop
data16
lods
in
popa
mov
jb
add
aam
mov
ret
movl
ret
test
int
rcr
rcll
cld
or
nop
insb
cmp
jo
fisttps
in
push
mov
mov
leave
test
dec
and
mov
dec
and
fs
pop
inc
adc
push
add
fiadds
cmp
push
mov
push
xor
popa
scas
mov
xor
sti
arpl
jae
mov
aas
gs
fdivl
sub
icebp
fldl
pusha
mov
stc
inc
std
jns
ss
inc
xor
out
jae
pop
data16
inc
mov
data16
inc
js
or
testl
cmpsl
or
scas
cmp
inc
mov
loop
mov
mov
mov
cmpl
push
data16
xor
jp
push
add
dec
test
mov
mov
or
lods
out
jl
stc
ds
imul
cltd
sbb
stos
jge
sub
xchg
xor
adcl
loope
push
mov
sbb
lret
nop
mov
sbb
add
test
jo
inc
lods
test
or
sbb
mov
adc
js
dec
sahf
mov
sbb
std
out
add
jnp
mov
js
pop
fdivl
orl
xchg
xor
stos
sbb
cmc
xchg
lret
push
das
mov
push
inc
fcoms
cld
jecxz
inc
insb
sub
add
loope
xchg
dec
repnz
mov
push
inc
andl
add
popa
mov
or
mov
mov
xor
add
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
add
mov
xor
jmp
lret
ror
leave
lret
push
xchg
lds
fs
mov
js
call
inc
sbb
data16
sub
fcom
stos
xchg
pop
xlat
and
sub
jp
imul
sti
sub
sbb
lods
cmpsl
shlb
pop
inc
ljmp
stos
mov
inc
in
outsl
jge
xor
mov
movsl
aad
and
es
inc
sbb
xorl
push
jmp
xor
mov
push
fsts
dec
out
decb
xchg
aad
push
cltd
ljmp
cmpsb
xor
lret
jne
cmp
jg
push
sbb
mov
dec
sbb
mov
inc
inc
or
push
and
mov
outsb
push
rcr
mov
mov
adc
jnp
pop
movsl
xor
pop
das
call
mov
pop
ljmp
jnp
mov
sub
mov
add
iret
outsl
or
adc
jns
insl
inc
call
sbb
loope
ret
adc
cwtl
sub
test
mov
push
or
push
mov
fnsave
shl
cwtl
out
jp
pop
dec
sub
mov
scas
aas
popa
popf
mov
mov
pop
and
pop
xor
imul
push
rolb
mov
movb
mov
adc
es
dec
js
rolb
iret
rcrb
inc
add
lods
out
jae
push
hlt
mov
and
sub
sbb
fs
xor
nop
and
adc
sbb
in
xchg
pop
rol
adc
movsl
mov
fcomp
inc
sbb
aas
arpl
dec
ret
jl
xchg
hlt
out
ficoml
inc
pushf
mov
jmp
or
pusha
and
lods
xchg
xor
inc
xor
and
subl
push
push
jnp
ljmp
jb
movsb
ret
xor
daa
rorb
push
xchg
cmp
movsb
and
cli
xor
ja
bound
in
shll
int3
lret
imul
pop
repnz
mov
mov
push
dec
int
call
sub
pop
jmp
int
outsb
das
rcrb
andb
popf
leave
icebp
sahf
xor
pextrw
and
pop
ret
mov
arpl
add
add
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
and
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
andl
xor
jmp
enter
fcmovnb
aad
push
and
cmp
movsl
shl
mov
js
fadds
xor
cmp
mov
cmp
xchg
lods
andb
xchg
xchg
adc
dec
je
clc
pop
sbb
idivb
es
sub
icebp
mov
jae
out
sub
push
push
push
mov
out
test
mov
fwait
outsb
ljmp
or
lock
repz
xchg
sbb
jge
jnp
sub
add
in
or
xchg
movb
mov
dec
mov
pop
dec
xor
lahf
xor
jecxz
loopne
or
jmp
mov
jle
dec
dec
push
and
and
inc
jl
lcall
and
xchg
add
ffree
lahf
rclb
push
xchg
jmp
xor
sub
push
decl
mov
sti
fadd
ret
xchg
test
xor
outsl
in
sti
stos
xor
jg
stos
ss
pop
sub
mov
sub
add
test
adc
inc
scas
adc
aad
push
lock
inc
bnd
mov
mov
rorb
ret
pop
jns
mov
sub
dec
inc
push
xchg
dec
fidivrl
push
jb
sub
and
insl
out
cmp
clc
lcall
and
dec
dec
xchg
push
inc
leave
scas
add
lret
push
mov
enter
sbb
je
inc
add
push
add
add
nop
cmpsb
add
adc
sbb
hlt
pop
cmp
cwtl
imul
cmp
mov
jns
mov
enter
lods
sub
inc
outsl
add
xchg
inc
cmpsl
mov
pusha
notb
push
and
jl
leave
clc
inc
icebp
fadd
mov
jns,pt
mov
je
dec
notl
sbb
or
je
xlat
lea
push
mov
es
cmp
and
stos
fisubl
test
ret
push
decl
lcall
push
mov
mov
jl
lahf
xchg
nop
mov
push
out
pop
lds
add
mov
mov
xchg
dec
mov
inc
push
pop
dec
push
int
push
imul
ror
adc
clc
aas
ja
js
cmp
add
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
add
mov
xor
movl
or
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
and
movl
sub
movl
and
movl
orl
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
pushl
call
jmp
movl
mov
xor
movl
cmpl
je
cmpl
jne
push
push
push
push
call
xor
or
dec
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
call
jmp
decl
mov
movl
jmp
ret
sarl
shrl
js
in
js
sbb
pop
dec
add
xchg
jmp
icebp
insl
std
or
mov
int
sub
cmc
add
fsts
cmp
shrb
or
outsb
outsl
fsts
xor
xchg
push
aaa
sbb
inc
cmp
je
xor
and
ja
das
inc
stc
cwtl
cmpsb
pop
and
pop
pop
pop
xchg
bound
data16
mov
icebp
jp
add
inc
push
addl
hlt
jbe
hlt
xchg
in
xchg
jl
shl
daa
cwtl
inc
out
dec
outsb
xor
sbb
xchg
xchg
nop
mov
test
pop
pop
ret
mov
call
mov
sbb
sub
loopne
mov
outsl
jbe
xor
push
imul
mov
dec
stos
mov
push
sub
xor
sbb
aad
test
int3
inc
loop
js
inc
add
adc
les
xor
jge
add
ror
ret
out
jge
sahf
push
lret
aam
stos
in
rcrb
push
insb
rolb
fisttps
mov
and
jb
push
sbb
mov
arpl
dec
cltd
dec
stos
jle
jmp
cmp
mov
cld
xor
jae
fucomip
and
inc
out
push
mov
sbb
and
and
adc
out
movsl
or
mov
jo
cmp
sbb
shll
cmc
push
inc
xor
ret
push
mov
add
push
in
addl
sarb
aam
int3
pushf
push
sub
ljmp
add
jo
scas
fwait
push
mov
out
pop
daa
fmull
ja
aas
pusha
movsb
repnz
fadds
xchg
sbb
loope
rol
adc
test
orb
add
fistps
add
xchg
sti
lods
mov
pusha
pop
sub
push
pop
bound
loop
lds
mov
iret
dec
dec
mov
pop
pop
jno
aas
push
xchg
sub
add
push
and
dec
xchg
pop
pop
dec
in
xchg
xchg
add
add
movsb
jb
gs
mov
imulb
shll
sarl
cli
movl
jmp
ret
ret
lret
test
and
js
jle
js
imul
mov
mov
inc
xchg
xchg
nop
xor
mov
data16
push
mov
lock
movsb
fistpll
sti
repz
xchg
hlt
daa
mov
and
fdivl
or
and
aaa
movsl
sarb
adc
mov
push
jns
xchg
xchg
pop
dec
pop
xor
mov
pop
inc
out
scas
dec
push
stos
fsubr
bound
pop
shlb
js
or
ss
jp
shr
inc
adc
lahf
xchg
ljmp
jae
cmc
cmpsb
movsl
loope
loopne
mov
or
jb
mov
jg
mov
jbe
cmp
outsl
jnp
jp
aas
push
arpl
sarl
hlt
subb
jp
cmp
andl
popa
add
cli
mov
cmp
inc
mov
dec
xlat
mov
xlat
cmc
dec
cmp
fldcw
and
mov
adc
in
xor
mov
xor
das
pop
data16
popa
pop
mov
in
fadds
cwtl
test
repz
mov
mov
fsubrs
mov
in
movsl
mov
xorb
jmp
popa
setg
xchg
and
addr16
push
fs
movsb
cmpl
mov
ret
ret
out
andb
sahf
sbbl
add
mov
mov
jecxz
rcrb
mov
cld
xchg
nop
push
mov
sub
outsl
sarb
mov
mov
outsl
out
out
stc
loop
mov
mov
mov
pop
fistps
cmc
push
into
mov
or
pop
dec
cmp
push
hlt
or
sahf
cld
ficomps
das
outsb
pop
sub
lods
insb
dec
pop
fnstenv
pop
pushf
ss
lds
ficompl
aas
dec
pop
mov
inc
lahf
dec
adc
mov
xchg
fcomps
lret
xor
pop
lret
pop
xor
cli
iret
xchg
dec
jmp
int
sbb
jo
jl
push
push
test
aas
sahf
fmul
xchg
sbbb
pushf
cmp
aam
je
test
pop
popf
out
das
mov
adc
aam
sub
cmpsb
lds
movsl
ss
out
stos
stos
or
in
pushf
sti
inc
xor
mov
stos
inc
pop
shlb
test
movl
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
jmp
cmp
fcmovnb
cmc
into
inc
jge
jne
lea
js
jle
js
lret
jmp
sbb
mov
inc
popf
inc
dec
jbe
leave
mov
fstpl
push
push
cld
insl
adc
xchg
testl
test
jnp
dec
inc
popa
add
sbb
in
push
mov
mov
movsb
dec
in
ss
aam
push
lods
jo
push
jle
es
pusha
fwait
pop
mov
subb
fdivr
mov
xor
mov
call
test
subb
sarl
cmp
and
out
and
cmp
xchg
push
jnp
push
popf
outsl
pop
pop
inc
inc
adc
xor
aad
mov
cmp
dec
cmpsl
xchg
and
dec
sahf
sbb
call
daa
js
mov
dec
dec
jg
jae
add
adc
fld
mov
inc
push
cmp
lods
in
imul
outsb
jne
cmp
add
enter
ret
push
loopne
jns
stc
idivl
sub
mov
nop
aam
push
lcall
adc
sarb
pop
mov
push
xor
push
inc
mov
mov
fwait
inc
xchg
xor
aad
dec
sbbb
in
xchg
ret
les
das
adc
out
cmp
push
cmpb
inc
scas
mov
fnsave
adc
call
int
dec
js
or
mov
xor
jb
jbe
dec
jb
pop
jnp
out
jbe
outsb
lods
pop
repnz
in
jb
jnp
jo
les
testl
inc
jecxz
pop
mov
add
lcall
lcall
mov
xor
mov
xor
roll
jnp
push
xchg
lods
xchg
sub
pop
fwait
pop
sahf
movsb
aas
sbb
js
movsl
fdivrs
or
sbb
xor
jb
or
outsl
cmp
sti
js
pop
or
lods
pop
out
out
cmpsl
mov
js
sub
cmp
shrb
idivl
call
pop
xor
and
cmc
scas
sub
mov
xor
add
cmp
jb
mov
mov
xor
xor
add
add
imul
mov
jmp
mov
leave
dec
mov
std
adc
dec
js
in
js
pop
and
add
sbb
sbb
or
jp
andl
lcall
clc
test
nop
xor
cmp
stc
aam
push
pop
sbb
ret
xchg
loopne
jb
leave
jnp
cld
xor
sub
mov
sbb
int
std
xor
or
or
orb
push
mov
cli
push
cmp
adc
push
movsb
pop
inc
mov
nop
push
cld
xchg
in
pop
add
ljmp
mov
push
sarb
into
aam
fdivp
lret
mov
movsb
mov
xchg
rorl
data16
xor
out
jmp
adc
fidivrs
pop
pusha
out
jne
mov
pop
or
data16
aas
sub
int3
loopne
mov
jle
xchg
push
mov
jo
jb
sub
sbb
add
xor
push
jb
xchg
iret
pop
ret
inc
sub
cmp
scas
dec
dec
cs
out
in
mov
sub
pop
sar
in
jl
or
pop
fsubs
rcll
xchg
xchg
inc
pop
dec
mov
xorb
xchg
add
push
scas
xor
and
sub
pop
lods
ret
push
rcll
out
pop
loop
and
lock
adc
mov
sbb
das
dec
dec
sub
mov
lods
fs
xchg
mov
sub
ja
xor
clc
jb
bound
out
fnsave
int3
repz
test
cmp
push
lahf
and
ja
bound
pop
notb
lock
stos
cmp
add
aad
mov
ret
mov
pusha
push
push
xchg
call
test
testb
pop
xchg
pop
ds
sahf
jns
jno
sub
inc
mov
mov
xchg
xor
movsl
and
daa
dec
aaa
cmc
adc
stos
xor
push
popa
push
add
fs
jne
jo
es
int
jno
rcrb
addb
xchg
push
mov
icebp
pop
jb
mov
movsb
idivb
fidivs
daa
jg
mov
jbe
jg
fiadds
gs
inc
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
jmp
sarl
int
ret
xchg
daa
and
pop
pop
out
js
in
js
leave
cmp
loopne
mov
pop
pop
clc
inc
filds
pop
jns
pop
imul
push
push
rclb
pop
xchg
push
in
fistps
and
inc
pop
cwtl
fbld
push
mov
test
fildll
pop
pop
push
pop
test
dec
xor
out
xchg
cmc
mov
loope
insl
xor
push
pop
lahf
les
in
test
rcrl
push
lahf
in
orb
inc
cmpsb
push
cld
xchg
loop
js
gs
and
fidivl
das
je
loope
xor
adc
sub
sti
mov
test
cs
xchg
pop
push
jne
adc
sbbl
repnz
inc
imul
cmc
xchg
sub
fnstenv
jge
sub
lds
imul
in
cs
out
push
outsl
loop
js
fs
fs
out
add
inc
in
adc
add
fbstp
push
sub
xor
pop
nop
push
jnp
stos
in
inc
push
repz
jo
sti
mov
addl
adc
mov
sub
cmp
sub
and
jecxz
xchg
enter
sbb
xchg
dec
aam
jge
lret
xlat
icebp
mov
mov
push
mov
jae
mov
shlb
cmp
push
mov
rorb
mov
pop
push
negb
jl
push
sarl
jmp
jno
pop
dec
mov
and
rep
mov
js
dec
adc
in
roll
mov
xchg
pop
or
cmc
add
cmp
mov
hlt
jb
lret
mov
loope
dec
mov
lods
mov
mov
dec
pop
jnp
mov
ficoml
fistl
dec
ret
and
mov
int3
fwait
aas
cmp
sub
and
lock
mov
cmp
sbb
data16
cmp
mov
cs
pop
mov
push
sbb
ret
mov
jo
push
pop
hlt
negb
aaa
test
mov
xchg
adc
xor
ret
dec
inc
sbb
loop
movsb
add
cmpsl
nop
or
call
test
ss
xlat
loop
inc
pop
mov
lods
xor
stc
test
pop
add
mov
nop
ds
outsl
and
enter
cli
imul
push
push
cltd
add
jmp
ret
int
into
xchg
jle
neg
mov
dec
js
in
js
sub
mov
inc
out
add
ds
loop
cmpsb
cs
imul
shlb
aad
out
inc
cmp
pusha
stos
daa
xchg
fiadds
cmp
jmp
movsb
mov
out
test
lds
jmp
into
leave
mov
fldt
addr16
or
shlb
pop
iret
hlt
jbe
push
sbb
jo
pop
cltd
out
sbb
xor
sub
mov
addr16
orb
xchg
push
cltd
mov
mov
mov
lahf
and
lahf
or
push
rcrb
repz
mov
inc
inc
push
jne
int3
call
push
dec
cmpsb
icebp
repnz
fs
lret
jecxz
xchg
add
pop
aad
fistps
popf
addr16
js
jge
mov
es
or
repnz
cmp
pop
mov
ss
jae
in
out
bound
xor
mov
sub
jno
inc
mov
mov
xor
sbb
fs
in
add
popa
xor
fisttps
ja
out
lea
ret
sbb
pop
scas
or
pop
cli
push
outsl
cmp
fimuls
push
fimull
cwtl
or
jnp
xchg
xor
fsubrl
xchg
arpl
lahf
push
dec
mov
loope
in
js
call
lcall
cs
cmpsb
mov
cmp
fcoms
movsb
in
inc
dec
mov
add
push
push
loopne
insb
and
and
inc
inc
insl
rorl
imul
xor
inc
cwtl
inc
mov
daa
imul
sbb
sbb
nop
mov
and
subps
pop
das
in
mov
adc
gs
push
inc
xchg
sbb
cli
adcl
cmc
shll
jb
mov
mov
push
mov
dec
in
aam
leave
dec
clc
imul
aad
or
filds
pusha
cld
out
xchg
lods
push
aam
sub
xor
test
cmpsb
mov
out
lds
data16
nop
mov
add
dec
mov
xor
daa
rclb
cwtl
cmp
faddp
repnz
pushf
sub
movsb
std
xor
adc
inc
xchg
aas
rcll
mov
imul
mov
mov
jmp
cmp
ret
fcmovnb
aad
pop
adc
adc
test
js
jle
js
jge
int
test
pop
movb
mov
mov
fucomp
mov
sbb
unpcklps
pusha
vmovlps
pop
dec
pop
cld
ficoms
or
movsb
imul
mov
cld
repnz
push
pop
es
adc
jmp
or
loopne
push
mov
sub
je
pop
xchg
scas
int
adc
xchg
adc
dec
pop
subl
dec
lods
bound
test
xor
rorl
push
mov
add
clc
nop
pop
icebp
loope
test
adc
das
sbbb
jp
ss
fnstcw
arpl
test
repnz
shl
push
xorb
adc
pop
popl
sbb
or
inc
jns
in
jb
mov
scas
or
mov
mov
roll
out
in
or
dec
xchg
dec
subb
movsl
jb
and
push
scas
dec
xchg
inc
xorl
sub
out
bnd
cmp
and
jno
push
or
ds
cmpsb
xchg
lret
rolb
mov
ds
push
xchg
sti
mov
jg
inc
mov
cld
test
movsb
and
and
cmp
rorb
movsl
es
sar
je
jge
fdivrl
jecxz
and
cmp
push
mov
loope
out
inc
stc
push
lock
jge
fsub
andl
cmp
fimull
xor
adc
jp
mov
in
jecxz
bound
mov
and
sub
xchg
jb
sub
movb
in
inc
sbb
mov
pushf
int
cmp
xchg
inc
js
rclb
imul
je
and
pop
call
and
mov
pop
xchg
push
jecxz
push
ss
push
inc
into
jge
in
inc
cmp
add
inc
and
mov
mov
outsl
dec
outsb
xchg
in
loope
cld
mov
cmpsl
adc
cltd
dec
jle
or
stc
mov
xlat
push
cmp
in
sti
dec
aad
pop
loopne
add
inc
aaa
icebp
ljmp
pop
incl
dec
aad
enter
outsb
mov
add
mov
push
sub
fistpll
fucompp
addl
add
ror
fcmovnbe
fld
ud0
pop
rclb
mov
js
jle
js
pop
xchg
in
addr16
fsts
xlat
andb
xchg
cmpsl
addr16
cs
js
jmpw
push
pop
sbb
adc
mov
lock
insl
and
jg
hlt
nop
jne
pop
fidivs
subl
dec
shr
stos
and
jo
push
loop
xchg
mov
xlat
sahf
push
fstpt
and
test
repz
sub
mov
cmp
fs
pop
arpl
imul
adc
sub
clc
mov
mov
inc
or
data16
arpl
sbbl
daa
jo
cld
lcall
in
orl
add
mov
jae
scas
stc
out
dec
sbb
dec
icebp
and
jb
jmp
xor
repnz
mov
sub
int
cmpsl
jmp
pop
cld
dec
scas
mov
das
out
sbb
pop
test
hlt
dec
arpl
pop
rcr
jo
and
pop
sbb
xchg
xchg
mov
mov
jb
shrl
movsb
cmc
jecxz
cmp
mov
pop
jns
dec
xchg
jmp
out
add
insl
cltd
mov
xor
out
rcrb
cld
rcrl
cli
push
iret
int3
lcall
sub
xor
push
mov
lods
inc
inc
lea
pop
adc
cmp
test
mov
inc
xchg
xchg
movsb
dec
inc
dec
adc
or
adc
xchg
mov
sbb
jbe
inc
xlat
and
mov
or
or
fisttpl
leave
xchg
or
aad
loop
insb
movsl
and
cld
push
and
jo
sub
mov
aad
adc
pushf
inc
jb
push
mov
jnp
push
xor
adc
xor
repz
addl
popf
mov
xchg
jl
push
inc
dec
ds
jno
add
bound
addr16
jo
or
sbb
xchg
add
hlt
push
xorl
cmp
and
test
insb
push
sbb
loop
or
popa
out
fstl
shrl
loop
and
inc
sbb
ja
mov
jmp
mov
mov
xor
xor
jmp
aas
lret
iret
aad
jo
lods
testl
jle
js
scas
pop
xchg
add
int
xor
into
cltd
xor
mov
in
fcoml
xor
jge
jbe
jmp
arpl
cmp
scas
sahf
mov
pop
sub
fsubl
adc
scas
mov
xor
in
mov
outsb
mov
push
jle
fildll
inc
and
shrb
push
inc
cld
leave
lcall
mov
fwait
lods
cli
jae
add
or
sbb
retw
icebp
rolb
rcrb
sbbb
rcll
lods
sbb
ret
inc
pop
ret
push
add
daa
pop
dec
adc
gs
cmp
jge
imul
add
pop
call
in
push
sbb
cmp
adcl
push
xor
or
cmpsl
repz
cmp
add
es
jae
cmc
aaa
push
pushl
ss
je
mov
shlb
inc
xchg
nop
jo
xchg
addr16
sar
push
lods
scas
sbb
gs
pop
adc
sahf
cmp
xor
or
fwait
cmpsl
aas
frstor
sub
mov
shrb
and
xlat
push
mov
mov
push
push
lahf
jp
and
stc
add
ss
mov
mov
dec
neg
xor
cmp
or
sbb
dec
mov
outsl
in
cmp
je
lret
rolb
xor
mov
and
jbe
imul
pop
jecxz
lret
adc
add
sbb
jle
jecxz
xlat
test
xchg
cmpl
adc
into
imul
add
push
cwtl
mov
fldenv
push
cmp
mov
jns
cli
dec
sbb
and
sti
mov
in
inc
mov
leave
outsl
mov
cmp
xchg
shrl
aaa
dec
xchg
das
and
lock
inc
mov
and
pop
popa
lret
mov
jle
add
cmp
add
and
pop
popf
fwait
sbb
pop
and
test
mov
faddl
ret
nopl
iret
testb
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
jmp
lds
ds
fxch
adc
add
add
push
js
in
js
or
lcall
or
int3
sbb
and
xor
or
mov
lret
dec
in
pop
pop
outsb
inc
add
sahf
aaa
mov
loope
arpl
xor
pushf
cli
out
cmp
inc
cmp
pop
shl
pop
inc
rcll
ret
adc
aad
and
add
scas
sti
pop
inc
xchg
sbbb
jg
clc
into
mov
leave
mov
mov
cmp
mov
or
xlat
pop
cmp
ss
sbb
jbe
in
mov
aad
xchg
gs
and
rorl
idiv
hlt
outsb
imul
mov
mov
icebp
in
imul
pop
test
jp
adc
sub
xchg
fsubrs
stos
cmp
mov
rcrb
sbb
scas
inc
xlat
mov
xor
xor
cld
mov
gs
add
out
mov
sbb
xor
dec
jae
push
mov
shl
in
push
jb
cli
pusha
cmpsb
scas
jbe
dec
sbb
adc
dec
iret
adc
jge
loope
outsl
jb
cli
xchg
jnp
enter
sub
repnz
mov
mov
scas
and
cmp
imull
fisubs
bound
mov
arpl
ja
je
lcall
bound
sub
fcomi
mov
loopne
pusha
imulb
push
jo
xchg
cmp
xchg
outsl
dec
mov
or
and
adc
mov
fwait
in
stos
clc
lds
push
clc
dec
scas
adc
push
xor
mov
and
push
inc
scas
pop
loopne
add
add
mov
test
xchg
lret
inc
aaa
imul
inc
nop
cmp
test
jg
sbb
push
pop
int
sbb
xor
adc
and
flds
mov
mov
pop
push
fbld
jo
cmp
cmpsl
mov
cmp
cmp
icebp
ss
gs
jbe
clc
cmp
push
xchg
mov
test
jnp
je
mov
movb
xchg
imul
fnstcw
ss
lods
fildll
add
add
into
ror
rcl
into
jbe
inc
data16
js
in
js
push
lret
push
xchg
scas
push
test
cmpsl
and
les
insb
je
fisubl
mov
sub
arpl
mov
pop
pop
in
popf
jnp
jle
je
fwait
mov
xchg
sbb
jecxz
dec
insb
lcall
mov
mov
mov
xchg
loopne
cmpsl
stc
and
push
jecxz
xor
fiaddl
pop
shlb
and
inc
nop
adc
push
push
in
dec
sbb
dec
das
pop
imul
cwtl
js
sub
add
jmp
lds
cmpsl
pop
shr
lahf
pop
std
fs
imul
pusha
mov
shrl
add
or
int
in
mov
jne
stos
lret
adc
repnz
les
inc
fstpt
cmpb
pop
jae
add
cmc
add
xlat
call
mov
push
stos
adc
sub
sbb
or
push
mov
push
shl
or
movsl
and
xchg
add
insl
arpl
scas
scas
dec
mov
mov
sbb
int3
call
jo
mov
inc
in
sbbl
pop
jmp
rol
push
aad
addr16
mov
int3
insb
sub
in
cmp
cmp
lods
xor
clc
cmp
push
sti
adc
sub
mov
repz
pop
fisttpll
orl
xlat
cwtl
or
xor
insb
inc
mov
stc
inc
popf
inc
int
into
sbb
stos
add
xor
test
test
fildl
popa
or
lret
jmp
jp
lods
mov
cmp
mov
push
jmp
daa
bound
jb
addr16
mov
cmp
push
pop
mov
cmc
scas
dec
jg
scas
fwait
push
jp
dec
mov
dec
sub
or
sub
jno
ss
jl
pop
repnz
in
jns
mov
xor
popf
test
movsb
and
enter
push
dec
loope
repnz
jp
xchg
mov
cld
sbb
in
icebp
sub
sbb
pop
or
mov
pusha
mov
add
push
add
pop
add
fcmovb
daa
enter
and
add
imul
jmp
aas
xlat
xlat
lret
xlat
lret
rcr
and
or
push
inc
xchg
pop
js
in
js
dec
or
je
adcl
push
add
mov
adc
mov
cmp
add
xchg
outsl
mov
cld
test
mov
push
fwait
movsb
mov
pop
repnz
loop
arpl
bound
mov
jnp
out
pop
imul
xchg
adc
dec
cli
sbb
push
inc
mov
cmpsl
jae
fimuls
xlat
xor
dec
in
sbb
push
and
stos
cmpsl
test
lahf
push
mov
popa
lock
adc
mov
lock
xchg
rcr
js
pop
lods
xchg
sub
outsl
inc
pop
mov
call
mov
shll
iret
scas
and
and
and
outsb
testl
or
addr16
lds
pop
and
arpl
hlt
jp
cmpb
lahf
mov
out
outsb
pop
ss
lahf
mov
stos
xchg
inc
cmp
xchg
sbb
negl
aaa
faddl
stc
test
and
das
push
dec
fiaddl
outsb
in
cld
mov
sbb
xor
mov
int
jmp
sub
dec
mov
mov
ds
aad
jno
lea
wrmsr
subb
push
hlt
mov
aas
mov
xor
mov
les
xchg
mov
dec
shrb
xchg
in
es
adc
rolb
mov
add
sub
sub
xchg
out
mov
and
ds
sahf
and
ret
jge
sahf
sub
jp
mov
dec
faddl
pop
stos
and
lahf
add
mov
pusha
lret
les
lods
cmp
cmpsb
into
xchg
or
push
cltd
lock
ja
mov
clc
gs
or
sti
jge
sub
or
ja
aas
leave
mov
jbe
jo
inc
pop
sub
test
int3
add
loopne
xchg
mull
in
jge
xchg
xor
push
fists
sahf
pop
cwtl
mov
mov
repnz
xchg
sbb
sbb
repz
jns
push
popf
push
xchg
insl
out
dec
mov
mov
adc
sbb
enter
addr16
jge
mov
sub
cmp
ja
jmp
rol
xor
dec
mov
fstpt
jle
js
mov
popw
shlb
fistps
sub
aam
clc
clc
daa
xor
cmpsl
xor
cltd
wbinvd
stos
jecxz
mov
lret
sbb
js
lcall
sbb
lods
outsb
mov
pop
push
add
and
add
aam
fsubrl
sub
lea
sub
mov
mov
lock
fidivs
ret
je
insb
xor
stos
add
imul
mov
dec
js
inc
ss
iret
xchg
dec
outsl
fldt
xchg
mov
xor
dec
je
out
data16
xor
repz
loope
icebp
in
mov
inc
insl
mov
sub
sub
pop
rcrl
rol
repnz
mov
int
dec
popa
mov
or
out
loop
cmp
mov
mov
sub
cmp
add
cmpsl
or
adc
dec
push
pop
aam
pop
adc
inc
xchg
or
mov
or
cmovg
push
aas
aad
jns
lahf
adc
outsb
xor
out
outsl
adc
and
mov
inc
jg
rcr
adc
outsb
adc
mov
fists
and
push
xchg
cmpsb
cli
mov
add
fdivs
rorb
xchg
movsl
sub
sbb
push
jmp
adcb
fisubrs
mov
movsl
faddl
fdivrp
jle
addr16
xor
idiv
sbb
fwait
mov
jne
lds
cmp
inc
jmp
push
sbb
cs
dec
mov
or
pop
fidivs
test
or
out
notl
mov
ret
test
scas
lahf
arpl
cmp
push
in
sub
mov
fldl
dec
push
je
xor
je
pop
adc
dec
nop
push
pop
push
jge
test
mov
rcll
pop
aam
add
cmp
xchg
and
idivb
pop
or
pushf
xor
mov
je
loopne
insl
outsb
orb
out
and
fisubs
push
int3
mov
cmp
or
xchg
outsb
xlat
rcll
jb
subl
push
mov
pushf
test
mov
enter
daa
stc
jmp
sub
push
shr
call
push
enter
xor
xor
add
add
imul
mov
jmp
iret
leave
into
xlat
fcmovu
aad
cli
je
sti
in
push
js
in
js
call
je
mov
pop
mov
int3
jbe
out
das
aam
mov
stc
mov
mov
cli
add
jge
jle
mov
loopne
lds
lea
ret
xlat
mov
jl
inc
psllq
jl
sub
out
test
jno
loopne
and
push
xchg
lock
mov
aad
mov
adc
aaa
push
jecxz
pusha
xchg
sbb
jmp
cli
and
push
fisubs
loope
xchg
cmp
sarl
mov
cmc
addr16
jbe
jg
push
call
jp
cmpsb
mov
ljmp
mov
adc
enter
xchg
push
mov
gs
es
push
fldl2e
add
cli
pop
cltd
mov
scas
dec
jns
xorb
orl
lods
sub
addr16
mov
cs
outsb
mov
pop
je
pushf
repnz
sbb
pop
xor
in
jecxz
push
lret
inc
push
daa
sti
cltd
test
pop
cmp
mov
xchg
push
fidivrl
push
cli
add
into
fs
and
xor
sub
rorl
dec
inc
jbe
lods
mov
ret
clc
lcall
sub
mov
js
xor
cmp
adc
jne
out
fistps
dec
sub
cli
add
add
xor
mov
icebp
pop
popa
add
cmpsb
fistpll
in
add
cli
dec
enter
cs
sub
cmp
pop
add
ret
jl
sub
mov
cmp
sbb
addr16
out
sbb
xchg
and
mov
sub
test
mov
xchg
xor
or
stos
jg
pop
cmp
imul
fisubl
xchg
jbe
sub
mov
push
arpl
adc
mov
xchg
rorl
and
je
push
fwait
scas
mov
mov
cmp
sbb
fists
xor
lods
adc
mulb
sub
lret
lahf
scas
or
out
sbb
and
and
push
repnz
xchg
inc
mov
or
cmp
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
jmp
into
cmp
fxch
sub
loope
clc
xchg
pusha
js
in
js
and
mov
ljmp
sub
out
aas
push
ds
jle
test
jae
dec
cmp
out
out
lret
jp
cwtl
dec
movsl
outsb
insl
fidivrl
cmp
shrl
xor
and
xchg
xor
dec
fisubrs
jns
xchg
testl
int
jmp
pop
mov
movsl
leave
outsb
push
fisubrl
mov
push
push
pop
add
dec
mov
sbb
pusha
in
movsb
fnstenv
fildll
xor
dec
adc
repnz
xor
imul
pop
pop
ljmp
cmp
xchg
mov
xchg
repnz
inc
and
in
jb
add
mov
inc
mov
mov
mov
xchg
in
sbb
sti
test
cli
push
addr16
sbb
inc
and
cmp
jp
xchg
in
pop
inc
mov
sbb
lcall
jp
inc
inc
ljmp
gs
push
int
push
in
mov
cmp
xor
xchg
jle
or
cmp
jne
adc
push
rorb
sahf
std
test
sub
jbe
outsb
adc
mov
or
mov
fcoms
in
adc
arpl
add
bound
push
pop
cld
mov
test
push
rcrb
jp
mov
stos
test
leave
xchg
jle
negl
imul
adc
in
add
dec
xor
in
mov
mov
ljmp
xor
add
xchg
push
and
pop
cwtl
dec
mov
xchg
dec
or
or
mulb
aam
leave
fsubl
add
lock
and
test
test
mov
sbb
int3
adc
pop
test
sub
stc
mov
xchg
fxch
mulb
lods
mov
jnp
outsb
mov
sbb
mov
mov
test
mov
icebp
int
jb
xchg
int
xchg
js
jo
in
loopne
stos
add
and
into
adc
lahf
daa
mov
rcr
nop
and
pop
lock
ficomps
cmp
aas
test
pop
lock
cmp
mov
jbe
jmp
rol
ds
into
rcl
adc
lods
or
jle
js
in
js
fstpt
add
in
fstpt
push
test
xor
std
popa
xlat
mov
jnp
addl
jecxz
lcall
das
jle
adc
fmul
test
das
adc
out
ja
push
xor
push
imul
sahf
push
je
cmc
icebp
aas
xlat
fwait
and
je
mov
or
xor
aam
pop
loopne
rolb
xor
adc
inc
mov
mov
dec
dec
sbb
daa
pusha
int
incb
add
movsb
rclb
pop
mov
mov
sbb
mov
inc
mov
adc
lods
mov
adc
push
mov
jnp
in
repnz
ret
loopne
roll
das
adc
mov
pushf
or
lahf
jae
sbbl
adc
ds
in
scas
fnsave
lret
scas
inc
test
inc
jo
pushf
lea
leave
mov
pushf
decb
dec
or
or
std
clc
popf
jb
ficompl
popf
pop
mov
mov
cmp
sti
push
jge
xchg
dec
cmp
loope
test
jno
adc
sub
out
test
jl
pop
mov
mov
mov
std
jg
lock
sub
fmuls
adc
or
push
push
out
mov
das
xchg
aaa
jle
movsl
jecxz
pop
test
outsb
and
fwait
subl
sti
out
jecxz
ds
stos
sub
ja
lret
cmp
stos
pushf
fwait
inc
pop
inc
mov
outsb
out
jbe
iret
testl
iret
bound
sahf
jno
bound
insb
ljmp
bound
outsb
cmpsb
sarl
test
add
xor
aad
insb
dec
push
mov
lods
sub
cli
add
out
cmc
push
cmp
test
lds
and
test
imul
and
push
cmpsb
mov
mov
int
cmp
jecxz
inc
cmp
outsl
out
aam
pop
out
push
jno
mov
divl
mov
rol
dec
xchg
push
nop
jle
sub
ret
or
call
push
sbb
repnz
ret
fwait
aad
lahf
shlb
dec
xor
jmp
jb
jb
gs
mov
mov
xor
xor
jmp
rol
enter
fcmovnu
xchg
add
inc
ljmp
js
jle
js
push
repz
lret
sti
cwtl
or
xor
insl
inc
sbb
xchg
lret
hlt
add
pop
cmp
insl
mov
inc
push
icebp
mov
fildl
jp
pop
mov
jnp
pop
faddl
outsb
fsub
pop
lock
int
mov
mov
lods
push
jmp
shld
push
adc
ds
outsb
push
xor
pop
and
imul
cmp
ret
sbb
mov
and
sbb
mov
push
jbe
outsl
pop
fwait
loopne
mov
outsl
aas
out
loop
xchg
loope
das
lods
sub
mov
iret
daa
cwtl
imul
out
je
mov
aad
push
push
test
push
fwait
popf
test
aaa
jmp
dec
js
jmp
stos
xchg
inc
xchg
fisttps
rcl
mov
cmp
popf
adc
mov
or
or
call
push
or
sahf
imul
mov
mov
fcomi
cmp
xorb
std
inc
push
cmp
pop
dec
pop
loopne
shrl
cmc
adc
push
std
enter
xchg
and
jge
lcall
in
mov
pop
add
mov
jnp
xchg
add
push
adc
mov
cmp
add
push
and
mov
das
xor
mov
mov
fisubrs
mov
jmp
mov
inc
push
xor
arpl
nop
xchg
push
jmp
or
lods
movsl
clc
cs
imul
mov
scas
mulb
jmp
mov
inc
mov
lahf
fidivl
and
pop
and
mov
mov
mov
cwtl
fcmove
mov
std
add
lock
jno
in
out
push
cmp
mov
push
and
push
shrb
cwtl
sbb
mov
or
mov
fidivs
loop
mov
xchg
push
in
lods
and
inc
int
into
xlat
mov
in
push
or
lret
in
xchg
mov
insl
or
inc
out
mov
lcall
jge
sbb
jge
in
cmp
adc
xlat
mov
aas
js
mov
add
push
inc
in
in
dec
repnz
adc
pop
arpl
rorl
scas
xlat
mov
mov
mov
mov
add
movl
jmp
fcmovnu
shr
movsl
xchg
loop
js
push
imul
cmpsl
mov
rcrb
dec
hlt
inc
lods
test
pop
xchg
adc
fstpt
pop
xchg
sbb
in
pop
mov
jo
cmp
cmp
or
gs
loope
aad
sub
lea
js
push
ret
cmpsl
pop
pop
lods
rcll
cmp
pop
ss
jb
mov
mov
jae
mov
subb
push
xchg
push
es
sarl
outsl
mov
loop
cmp
sub
sbb
sub
nop
jp
je
or
adc
fidivl
mov
cwtl
scas
out
add
enter
iret
cmp
pop
xchg
mov
popa
addr16
jnp
push
adc
shll
jge
loope
and
lods
movsl
mov
aad
mov
ja
push
jbe
sti
push
push
jle
fwait
or
push
jmp
jb
push
inc
jo
or
or
xchg
xchg
push
add
in
fildll
dec
inc
or
sar
mov
cwtl
sub
cmc
xchg
xchg
pushf
aad
add
rcrb
mov
or
xchg
ljmp
cld
pop
enter
cmp
aaa
arpl
jg
adc
push
leave
inc
inc
pop
xor
mov
js
adc
cmp
les
pop
movsb
and
loop
dec
cmpb
adc
mov
fistps
cwtl
jb
cmp
pop
cmp
das
dec
push
mov
dec
dec
xor
ja
mov
div
inc
dec
cs
in
push
movmskps
add
mov
test
add
dec
push
loope
dec
je
ficomps
xor
inc
sahf
dec
jae
lods
add
imul
enter
push
pop
push
sub
mov
ret
add
test
and
stc
jno
mov
mov
ds
xchg
xor
cmp
dec
test
jns
xchg
sub
inc
in
xchg
mov
mov
jno
test
push
sbb
pop
ficoml
xor
xchg
push
out
inc
sub
dec
je
rclb
mov
aas
sbb
jg
imul
mov
mov
rcl
cmp
rol
sbbb
mov
mov
jmp
jmp
iret
ret
rol
fcmovnu
mov
cmp
cmp
jle
js
mov
mov
inc
aas
jnp
jo
cmpsl
jae
xor
out
inc
outsl
shlb
jbe
inc
push
inc
pop
ss
out
int
push
sbb
mov
push
addr16
xchg
das
push
imull
dec
mov
pop
lahf
xchg
adcl
popf
bound
cltd
addr16
stc
adc
icebp
lret
clc
imul
roll
imul
or
mov
xchg
and
out
iret
addb
add
cmc
imul
push
mov
fnstenv
pop
mov
notl
mov
xchg
ljmp
mov
stos
mov
stc
xchg
cmpsl
test
mov
mov
lods
adc
pushf
inc
adc
xchg
and
dec
ds
dec
lcall
mov
shrb
dec
jl
repnz
adc
lea
jmp
loopne
shrb
dec
mov
mov
or
adc
lods
std
ss
jnp
inc
dec
push
lods
dec
lret
push
mov
cmpsl
enter
in
jo
cwtl
dec
inc
pop
je
inc
fdivrl
sbb
stos
push
dec
mov
jns
inc
xor
and
cmp
mov
daa
das
fldcw
mov
jno
arpl
dec
bound
cmp
jne
outsl
inc
jb
mov
je
rolb
in
testb
ret
out
aad
jae
add
aad
call
stc
push
inc
mov
xchg
mov
dec
push
fsubl
mov
fidivrl
lret
xchg
iret
adc
ret
les
or
push
fisubl
stc
aam
idivb
sbb
js
xchg
dec
imul
cmp
mov
in
adc
fcmovbe
pop
and
rcl
ret
inc
pop
push
mov
mov
movsl
mov
inc
test
pop
loope
dec
mov
shlb
inc
leave
mov
inc
mov
jns
push
sub
xlat
mov
push
or
outsl
xor
sti
daa
aas
aad
push
inc
inc
lret
xor
push
inc
lods
pop
cmpsl
mov
jno
or
cmpsl
shlb
je
movl
movl
jmp
int
ror
fcmove
leave
sub
jne
leave
bound
jle
js
cmp
and
lahf
xchg
sbb
mov
leave
lret
icebp
les
in
inc
mov
mov
xor
ficomps
popf
jno
jle
mov
int
xchg
adc
into
jge
mov
xor
push
pop
push
mov
inc
dec
pop
and
jg
push
push
jecxz
test
adc
loopne
xchg
inc
xor
push
repz
bound
rcr
dec
dec
aaa
push
pop
sub
popa
add
lea
and
xchg
add
cwtl
jecxz
clc
dec
adc
cwtl
gs
mov
int3
leave
inc
xchg
jbe
inc
das
lods
mov
ret
insb
in
in
dec
scas
add
test
dec
xor
cmp
test
pop
ds
or
and
rclb
inc
xor
mov
add
jbe
jp
xor
bound
cmpsl
cmp
fisubrl
jne
push
push
push
hlt
adc
adc
adc
push
cmp
into
add
lock
fstps
lods
mov
ja
ficoml
push
rorb
or
mov
popa
add
mov
lds
pmullw
xchg
dec
push
mov
out
cmp
xchg
adc
pop
cmp
add
test
mov
sbb
mov
adc
int3
pop
mov
mov
aas
xchg
mov
sbb
popf
or
mov
aaa
jns
fistpll
mov
ja
push
push
sbb
shlb
xchg
popa
inc
and
jb
pop
pusha
cmc
test
mov
pop
dec
add
xchg
pop
or
mov
loope
cmp
cmp
adc
xlat
push
mov
jb
mov
data16
stos
or
and
add
xor
mov
repz
mov
ret
js
cmpsb
lret
int3
dec
xchg
outsl
pop
out
pop
push
enter
jmp
enter
out
sub
push
fstl
adc
test
adc
or
outsl
loop
cmpsl
xlat
dec
sub
mov
lret
or
xor
adc
mov
mov
pop
xchg
outsb
adc
ds
aam
mull
fs
and
add
jmp
mov
xor
add
jmp
ret
xlat
data16
in
cmpsl
pop
pop
jno
js
jle
js
mov
nop
repnz
outsb
and
movsb
sub
jnp
sti
in
pop
ss
dec
and
mov
sbb
fcmovnbe
inc
lea
xchg
stc
mov
add
push
xchg
out
leave
cmp
push
les
jae
xchg
iret
inc
add
xlat
or
or
insb
divl
lret
adc
mov
and
loope
or
fwait
mov
mov
pop
mov
out
sub
pop
scas
ss
xchg
jnp
and
add
in
mov
in
mov
jae
adc
push
jbe
mov
scas
aas
adc
inc
jb
out
test
mov
test
imul
push
int3
test
aad
call
add
dec
inc
cmp
aad
mov
call
das
add
dec
stc
out
das
and
or
mov
jb
or
pop
lods
insb
push
add
cmpsb
rcrl
imul
in
jb
aas
dec
push
lock
out
mov
sub
xor
sbb
leave
or
sahf
int3
dec
inc
push
leave
pop
rorl
xchg
xor
dec
ds
sub
ss
flds
and
xorl
cs
adc
aaa
movsb
mov
jno
inc
lds
add
mov
leave
ja
push
pop
jecxz
push
fmul
lret
add
sub
xchg
fildll
inc
in
fldenv
enter
sub
in
test
or
stos
out
push
sbb
dec
push
cmpsl
in
jle
ljmp
sub
cmpsb
popa
push
clc
std
pop
sub
add
inc
ret
cmc
mov
outsb
mov
insb
mov
inc
push
repz
divl
jae
mov
popf
lahf
dec
loop
pop
dec
stos
and
daa
fstpt
stos
je,pn
inc
rorb
jns
sahf
mov
hlt
mov
lcall
pushf
xchg
mov
in
jp
out
loope
fsubs
out
xchg
or
xorb
jnp
jno
push
mov
pop
into
push
mov
jae
inc
dec
repnz
ret
dec
in
jb
push
push
je
or
mov
mov
jmp
int
xlat
enter
shll
std
xchg
push
pusha
xchg
cld
ja
js
jle
js
xor
push
inc
inc
stos
ljmp
test
mov
pop
imull
push
mov
test
aaa
sub
adc
and
pop
or
jge
cmpl
mov
movsb
std
and
ds
inc
add
and
xor
sbb
push
push
loope
mov
aam
cmp
push
pop
loopne
push
mov
inc
jno
lahf
cmp
icebp
gs
pop
mov
shll
xlat
div
pusha
movsl
xchg
sub
or
jge
sub
daa
mov
add
xor
scas
mov
aam
ret
fdiv
aam
cmp
xlat
rorb
adc
rcll
jl
mov
and
ret
rcrl
mov
lods
std
dec
xor
cmp
push
mov
inc
mov
mov
push
xchg
push
jl
push
pop
and
adc
call
pop
cmc
jmp
call
dec
jno
mov
mov
movsb
addr16
sbb
mov
cwtl
xchg
xchg
pop
test
data16
mov
aaa
xor
xor
popf
jo
into
loopne
sub
lods
add
loope
pop
js
lock
and
sub
xchg
xor
hlt
addr16
out
test
cld
inc
loop
adc
das
icebp
jns
rolb
mov
in
sbb
ret
sbb
jge
cmp
mov
divb
lcall
lret
aad
scas
jno
xchg
cltd
xor
aam
leave
mov
mov
lahf
bound
cmp
and
mov
jb
dec
jl
jne
pushf
fcoml
aas
sbb
roll
pushf
lret
mov
dec
hlt
xchg
loop
je
fstp
scas
in
rcrl
cmp
mov
or
fidivrl
adc
adc
bound
push
mov
lods
add
and
insb
mulb
lock
movsl
movsl
negl
popa
mov
in
adc
mov
or
test
adc
imul
notb
lea
mov
nop
jp
test
repz
pushf
fldl2t
daa
mov
cld
add
dec
dec
fnsave
lods
dec
jno
test
mov
jno
stos
mov
adc
hlt
xor
add
mov
mov
mov
mov
jmp
aas
cmp
cmp
sbb
sarb
imul
js
ret
lock
arpl
add
cltd
cmpl
jns
inc
mov
clc
aaa
addr16
fdivr
loop
jb
stc
mov
lahf
inc
fcoml
xchg
mov
inc
jns
in
loopne
mov
into
jp
xor
rclb
lods
adc
jne
pushf
xor
daa
cmp
sti
sub
cmpsl
lds
add
adc
and
imul
pop
enter
inc
aad
or
addl
fcomps
dec
stos
ja
xchg
push
dec
xchg
fimuls
cld
jle
pushf
cmpsb
mov
adc
mov
repz
mov
sbb
push
outsb
and
or
stos
sub
int
xchg
dec
xor
sub
jno
loop
inc
aam
push
std
dec
ret
pop
lods
cltd
outsb
add
cmp
bound
data16
in
push
icebp
cmpsb
icebp
sub
mov
ja
cmp
or
inc
push
fwait
mov
icebp
je
imul
sbb
sub
sbb
sub
movsb
clc
clc
popf
add
inc
out
ss
sub
ljmp
and
loopne
xor
cmpsl
test
xor
adc
fidivrl
test
cmpsl
repz
push
int
jp
pop
add
leave
addr16
lea
cmc
xorl
xchg
push
insb
int3
mov
push
and
push
and
lds
out
movsb
mov
adc
and
cmpsb
and
sbb
lahf
xchg
imul
cwtl
inc
sub
inc
push
push
imul
sub
stos
mov
or
xchg
adc
bound
imul
push
pop
pop
lods
cmpsl
inc
xor
addr16
sub
and
int3
jno
adc
cmpsl
push
and
fs
js
cmp
xor
xchg
aas
stc
sbb
testl
cltd
rcll
stos
xchg
cs
iret
aam
dec
in
cwtl
mov
xchg
xchg
xchg
in
faddl
push
cmp
inc
cmpsl
addr16
fcmovb
pusha
or
insb
sub
push
mov
pop
mov
fnstcw
sbb
push
push
js
sahf
xchg
out
mov
insb
mov
jp
push
add
movsl
and
lock
stc
cwtl
js
mov
test
js
dec
mov
test
push
lret
mov
xor
add
mov
mov
mov
mov
xor
jmp
cmp
pop
in
inc
imul
jp
js
jle
js
ds
in
sbb
gs
cmp
mov
sub
inc
jg
repz
xchg
xchg
sbb
push
cwtl
adc
mov
pop
push
jg
imul
lock
mov
xchg
movsl
mov
lods
mov
jg
push
aam
push
ss
rorl
lea
sbb
inc
jae
jb
adc
add
pop
lcall
aaa
test
insl
psraw
sub
push
push
or
mov
xchg
sub
cmp
push
xor
sub
push
sub
dec
jae
bound
and
out
mov
fwait
inc
jb
popa
loop
xchg
fisubrs
shrl
dec
cli
mov
xor
arpl
in
add
jmp
cwtl
scas
cmp
ds
adc
or
add
xchg
push
inc
bnd
test
sbb
sub
pop
inc
das
loope
cmpsl
repz
sub
jo
sub
push
dec
xchg
cli
hlt
jne
cmp
ds
cwtl
sarl
cli
push
pop
xor
fisttpll
inc
push
jno
in
mov
outsw
dec
xor
loop
lods
pushf
mov
sarb
and
sbb
ljmp
mov
mov
test
push
fldenv
ds
push
aas
imul
push
push
pop
ja
sub
rcrb
lcall
enter
or
jmp
add
pop
cmp
dec
fwait
jns
and
lock
in
cmp
adc
hlt
or
movsb
fldenv
lret
xlat
fsubl
pushf
xchg
jle
aaa
sbb
sbb
shl
sub
lahf
clc
cmp
and
cmp
faddp
dec
rcl
fsub
mov
pop
and
std
test
or
ror
dec
mov
cmpb
xchg
shl
fbstp
in
jae
lods
fwait
not
fisttps
imull
push
in
lea
jo
iret
cld
mov
test
or
sbb
push
rclb
mov
cli
cmp
xor
fdivs
push
fdivp
test
xchg
loope
mov
sub
in
mov
mov
jmp
enter
cld
imul
jp
js
js
jle
js
cmp
aam
pusha
sub
push
packssdw
pop
xor
sbb
pop
jno
mov
adc
xor
xor
in
rclb
testl
jno
fwait
xchg
popa
nop
mov
mov
insl
daa
adc
ljmp
loope
notl
shrb
lret
adc
mov
repnz
push
or
jo
in
sbb
sub
or
add
aaa
dec
sbb
xchg
add
arpl
fmuls
jmp
cmc
pusha
sti
and
mov
and
fisubrs
mov
sbb
testl
pop
and
jns
lret
mov
aad
dec
ja
out
pop
scas
xchg
popa
das
movsl
sbb
icebp
pop
fs
sub
and
das
cld
mov
inc
xchg
adc
jnp
inc
inc
sarl
push
inc
mov
call
sub
leave
out
push
or
mov
out
push
test
ljmp
pop
ret
enter
dec
jp
nop
adc
push
cmc
cmpsb
add
ja
das
les
outsb
push
iret
outsb
dec
adc
dec
inc
jns
repz
lahf
dec
xor
mov
push
outsl
adc
rcr
pop
loop
idivb
jno
lea
loop
mov
cltd
pop
adc
popa
push
stc
mov
cmp
rclb
cmp
fisubl
sub
pop
and
mov
pop
imul
popf
rcrb
jl
adc
push
and
out
xchg
lahf
mov
jb
or
insl
insl
aas
inc
into
mov
mov
or
cmp
dec
push
cmc
cmp
push
mov
or
mov
cmp
push
pop
push
mov
nop
orl
out
jp
into
pop
call
test
jb
mov
mov
sti
movsl
test
jne
mov
rcll
dec
dec
lahf
aad
fcoml
lock
dec
test
push
xchg
xor
imul
mov
jae
jecxz
scas
mov
jne
cmpsb
mov
push
movsb
mov
movsb
lods
nop
iret
imul
mov
nop
jnp
in
loop
xchg
xchg
mov
mov
xor
xor
add
add
jmp
ror
ror
leave
leave
mov
fs
js
jle
js
cmp
push
jo
fstpt
pop
or
mov
mov
aad
push
mov
and
mov
lcall
shll
jbe
push
dec
lea
lahf
xor
clc
je
xchg
mov
cmp
pushf
cmc
mov
mov
sti
fldl
mov
cld
jbe
add
and
lock
mov
lea
cli
out
mov
mov
jns
int3
clc
repnz
push
imulb
or
insl
push
sbbl
push
call
or
xor
movsb
inc
jns
add
out
clc
and
xchg
lods
repz
sti
pop
pop
pop
xchg
jb
sarl
push
mov
inc
pop
imul
xchg
mov
sub
push
jne
sbb
les
mov
sti
push
mov
mov
loope
pusha
js
add
test
imul
insl
push
inc
sbb
inc
fstps
cmp
popf
xor
scas
dec
pop
shr
outsl
xchg
rol
pop
mov
sub
test
and
push
xchg
add
inc
test
pop
movsl
shl
enter
inc
ret
lds
push
add
xchg
push
test
xchg
cli
enter
mov
scas
out
push
mov
pop
aam
stc
fsubs
and
dec
ret
dec
lods
shl
inc
clc
mov
pusha
popa
in
adc
imul
dec
test
dec
andl
in
cmc
xchg
jg
lcall
ret
pop
mov
pop
addr16
mov
fwait
leave
ja
fistpl
pop
pop
jb
pop
cmp
mov
adc
pusha
scas
inc
pop
sbb
mov
dec
popf
or
or
aam
rol
pop
pop
cmp
div
or
test
fstpl
sub
std
inc
mov
dec
rdmsr
hlt
mov
push
inc
shrl
sub
sub
cmc
push
fcmovu
stc
sub
cmp
rclb
mov
inc
jg
into
pop
shl
fadds
mulb
rcll
in
ficompl
enter
mov
insl
shl
inc
into
sbb
rcll
jbe
ret
loop
imul
add
mov
mov
mov
xor
add
imul
mov
xor
jmp
enter
lret
fxch
flds
xchg
loope
mov
jg
in
js
mov
mov
mov
hlt
jae
shlb
adc
fstpl
sub
mov
dec
rolb
ja
nop
aaa
lahf
mov
arpl
mov
loopne
in
jg
mov
add
ret
ja
movsb
dec
in
loop
or
push
mov
in
dec
imul
es
mov
mov
inc
orb
loopne
xor
loop
sub
aaa
xlat
sbb
mov
test
mov
xchg
fcoml
and
repz
mov
cmp
sbb
cli
int3
push
insb
inc
xchg
jecxz
inc
fwait
int
pop
adc
pop
ret
fnstsw
xchg
cli
pushl
push
stos
and
sub
movlps
cmp
pop
sbb
inc
cmpsb
inc
pop
xchg
scas
lock
pop
push
push
xchg
clc
dec
or
push
enter
into
lock
imul
xchg
sub
sbb
data16
in
push
mov
popf
jae
out
sub
inc
mov
cmpb
add
sbb
or
arpl
lea
hlt
sbb
pop
cmp
inc
and
in
nop
push
stos
outsl
cmp
jle
ficomps
aam
aad
lea
add
pand
stc
sbb
cmp
imul
jnp
dec
push
pop
stos
sub
inc
mov
push
movsl
imul
int3
jne
daa
loop
cmpsb
push
ljmp
and
jo
xor
in
jbe
mov
fiadds
test
mov
pop
lods
ret
out
or
xchg
out
mov
sub
sub
and
jnp
fsubs
les
xor
or
in
and
aam
ss
mov
inc
xchg
movsl
xor
dec
xchg
ss
pushf
xorl
inc
das
push
push
cli
ret
pop
shll
jb
sub
lds
push
or
or
mov
cmp
fistl
in
jl
leave
mov
or
js
mov
gs
les
adc
pop
inc
repz
fnstcw
std
add
js
fwait
lcall
sub
mov
mov
xor
add
jmp
ror
iret
aam
insl
js
repnz
pushf
add
jg
in
js
in
cwtl
ja
fsts
and
push
je
add
pop
mov
mov
stos
cmp
or
xchg
push
mov
imul
repnz
aaa
pcmpgtw
dec
in
call
ljmp
fcoml
mov
xlat
jns
les
fstps
cmp
lods
cmp
addb
icebp
push
jle
xor
ja
dec
bound
out
outsl
ss
mov
dec
push
xchg
int3
gs
gs
lock
cltd
mov
adc
scas
push
jnp
dec
adcl
lret
or
int3
dec
jmp
pop
out
jl
xor
shrb
fisubrl
scas
inc
cwtl
jge
rcrl
enter
shl
fmull
into
jg
gs
bound
ja
cmp
xor
cmp
idivb
xchg
add
clc
aad
sbb
or
sahf
push
lahf
dec
cmp
push
dec
orb
dec
into
popa
out
adc
push
inc
mov
iret
es
cmp
loopne
out
xchg
loope
sahf
rcl
xor
and
push
ret
cld
sub
adc
fldcw
add
inc
cmp
dec
or
nop
clc
lcall
add
push
fmull
data16
sub
adc
mov
mov
xchg
lds
jp
cmpsl
mov
and
rcr
adc
fucom
push
sub
loop
pop
shlb
ss
xchg
and
inc
stos
mov
insl
sub
fstpt
in
jae
sub
leave
jge
sub
inc
in
lea
jns
and
loop
sbb
rcr
lds
shrl
cld
pop
ficompl
inc
xlat
sbb
mov
xor
sub
or
and
fwait
cld
mov
out
inc
inc
mov
sub
jo
movsl
insb
insl
inc
adc
sti
imul
sbb
push
bound
xchg
push
add
stos
inc
cmpb
cs
pushf
enter
add
in
fs
adc
sbb
dec
inc
frstor
int3
push
jns
data16
jl
mov
cld
xorb
dec
xchg
in
in
out
or
adc
dec
inc
push
mov
les
mov
cmpsl
lret
fisttps
rclb
imul
mov
jmp
rol
leave
rcr
rcr
enter
pop
inc
mov
js
jle
js
jge
divl
jp
or
xor
push
out
arpl
jecxz
je
les
mov
nop
inc
scas
xchg
stos
je
push
xchg
push
enter
and
xlat
cs
shrl
out
push
xchg
mov
or
shlb
enter
pushf
xlat
inc
ja
jg
pushf
jne
cmpsl
clc
ret
push
dec
leave
dec
outsl
sbb
andnps
into
push
stos
subb
insl
mov
xchg
fld
shrl
push
shrl
aam
sub
mov
inc
cmp
repnz
arpl
adc
loopne
out
rcr
add
out
les
ds
xor
pop
or
pushf
test
xor
push
push
or
and
int3
pop
cmc
enter
cmc
cld
inc
scas
fldl
loop
jmp
aaa
sub
mov
das
cmc
mov
cli
jae
aad
xorb
lods
cmc
inc
push
pushf
xor
mov
xchg
lods
out
into
cwtl
int
push
cmp
loopne
mov
xor
cmp
dec
out
mov
inc
cld
add
mov
and
imul
cs
inc
sbb
inc
cmp
push
leave
lods
lods
leave
or
dec
sahf
adc
rcl
in
ss
cmpsb
adc
mov
into
or
cmp
inc
insl
rorl
aas
das
scas
dec
fistpll
sub
xlat
rcl
mov
add
push
jno
sahf
cmp
sub
cs
fildll
sub
adc
jl
int3
jp
adc
pushf
mov
dec
test
jp
repz
jns
add
pusha
lds
sub
jecxz
arpl
dec
xor
daa
sub
xchg
cltd
xor
iret
movsl
insb
rclb
jmp
and
and
cmpsb
mov
and
sub
fimuls
xchg
or
jle
and
aas
add
push
lahf
push
or
lret
sub
arpl
imulb
clc
pop
xor
pop
cmp
int3
cltd
es
daa
adc
stc
inc
sub
popf
mov
testb
iret
popf
lods
outsb
jecxz
mov
loope
fsubr
addl
add
aas
int
aam
mov
andl
in
js
sub
sbb
mov
and
ficoml
pop
cmp
pop
or
inc
mov
dec
pusha
int
in
mov
dec
and
jge
into
dec
aad
fimull
xchg
xorl
and
dec
jbe
movsb
shr
in
outsb
popf
jnp
sub
lret
test
sub
or
pop
clc
or
das
mov
icebp
test
rcll
pop
fmul
hlt
jns
jae
mov
les
das
lock
aaa
fwait
sbb
pop
clc
lret
test
imul
bound
adc
popa
jno
xchg
shll
in
xchg
aam
jno
rolb
in
cltd
nop
test
mov
cmp
insb
popa
xchg
cmp
jnp
add
jno
mov
ret
rcr
aas
pop
js
and
mov
push
into
imul
sub
push
data16
daa
repz
dec
push
icebp
xchg
rcr
mov
test
lods
adc
dec
lahf
jp
mov
int3
stc
outsb
orb
fistpll
jmp
adc
add
mov
cmc
fcmovne
je
repnz
dec
push
jo
pop
fdivl
test
shlb
dec
repnz
inc
cli
mov
es
push
inc
mov
aas
out
jo
dec
pop
cwtl
cmp
cmp
cmpsl
sbb
and
int
mov
dec
pop
inc
insl
add
imul
add
test
in
add
sub
xchg
nop
cmc
clc
data16
icebp
out
add
ret
xor
outsl
adc
int
arpl
sbb
in
std
fmuls
icebp
cli
jmp
xor
add
adc
mov
dec
xchg
mov
xchg
push
mov
inc
xor
bound
pop
in
xor
xchg
out
mov
int
lock
jo
loope
lods
sub
xchg
or
cmc
mov
inc
shl
or
andb
mov
shll
xchg
loopne
sarb
test
dec
repz
iret
das
imul
xchg
dec
call
mov
clc
cmp
add
sbb
adc
pop
insb
inc
push
sub
sub
lea
cmp
jbe
mov
mov
xor
add
jmp
vpmovmskb
fcmovnu
addl
jmp
in
js
xor
mov
cmp
mov
je
adc
mov
xchg
xor
pop
jb
and
inc
sti
cmp
xor
adc
jl
clc
cld
rclb
or
dec
adc
stos
inc
adc
icebp
pop
shll
aaa
jge
nop
mov
adc
stos
pusha
lock
js
jl
push
outsl
xlat
test
fwait
pop
dec
mov
push
fs
loop
dec
jmp
addr16
sbb
je
cmp
jecxz
pop
jmp
mov
fwait
sub
cwtl
icebp
stos
mov
fwait
scas
inc
and
pusha
xor
test
sarl
push
xchg
adc
inc
mov
add
inc
mov
enter
mov
sub
out
lea
out
fstl
push
mov
xchg
inc
sub
pop
adc
pavgb
clc
dec
rcrb
sti
aaa
lahf
and
repz
mov
xorl
xor
dec
into
mov
mov
pop
push
mov
lods
cwtl
cmp
jmp
sbb
inc
pop
and
xor
dec
call
xchg
aaa
or
iret
out
jmp
jns
inc
adc
mov
xchg
xor
mov
push
fistpl
sbb
mov
sahf
cmp
sub
movsb
aaa
jmp
mov
jne
int3
ds
jae
aaa
sub
xchg
mov
test
cmp
adc
rclb
xor
sar
nop
pop
scas
inc
lea
stos
iret
pop
cmp
nop
sub
ja
aas
aaa
pop
dec
test
in
in
outsb
push
call
fcmove
movb
adc
jb
lcall
ljmp
clc
sbb
pop
ds
sub
dec
scas
cmp
imul
out
scas
cli
mov
clc
adc
push
jmp
sub
mov
arpl
lahf
shl
cltd
arpl
mov
sub
sti
clc
adc
aam
adc
inc
int3
lds
mov
sbb
add
imul
mov
jmp
lret
ret
vpand
ret
sbbb
je
movq
jle
js
pop
push
gs
or
outsb
out
pop
ret
sub
lret
repz
mov
jecxz
mov
mov
xor
or
xchg
push
sbb
dec
or
sub
outsl
imul
jbe
sub
insb
dec
nopl
orb
push
divb
bnd
mov
jecxz
pop
sub
fdivrs
mov
insl
xor
inc
loopne
push
daa
fs
push
pop
es
or
xorl
lods
leave
and
mov
and
jg
sbb
ret
arpl
sti
pop
inc
push
adc
arpl
stc
mov
out
add
push
clc
std
dec
jecxz
jmp
or
hlt
insb
movb
push
push
cmp
pop
dec
mov
filds
sbb
int
mov
ds
cmp
out
mov
movsb
or
outsb
mov
enter
les
fimuls
inc
shlb
and
out
jbe
clc
push
outsl
cmp
loopne
mov
insl
mov
dec
mov
hlt
inc
movhps
scas
neg
jmp
or
xchg
lcall
mov
sub
nop
sub
cs
loope
fildll
je
adc
out
push
aas
push
inc
loop
in
data16
mov
mov
inc
imul
xor
push
jp
sbbb
and
arpl
jmp
xchg
mov
jnp
dec
pop
sub
cmc
std
mov
adc
xor
in
push
sub
xchg
jnp
rcrb
mov
mov
repz
loopne
lods
lods
sbb
lock
sbb
jno
cld
imul
sahf
mul
mov
sbb
adc
cli
mov
jecxz
sub
sbb
cmp
mov
mov
mov
adc
lods
cmpl
cli
pop
je
xchg
aad
dec
adc
cmp
inc
lcall
out
dec
les
ljmpw
std
cmc
mov
sub
loope
xchg
insl
mov
cmp
mov
inc
sbb
fistpll
ficomps
popa
shlb
jg
lods
jl
mov
test
pop
add
mov
add
stc
andps
fsubrs
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
jmp
rcl
aad
leave
lcall
in
js
inc
scas
fs
loop,pt
push
xchg
leave
dec
stos
shlb
dec
adc
test
das
punpcklbw
bound
mov
xchg
or
cs
push
xlat
lahf
mov
repnz
jg
ret
cli
xchg
xchg
mov
jmp
adc
or
jne
bound
inc
push
in
roll
out
cmp
sub
fidivl
hlt
mov
mov
push
icebp
frstor
cmp
sahf
iret
int3
dec
mov
xchg
xchg
mov
rorb
out
mov
int3
outsb
imul
sub
push
push
sahf
xor
jnp
mov
cmove
negl
test
pop
fidivrs
push
daa
sbbb
push
dec
push
sbb
clc
repnz
aad
pop
icebp
or
or
rorb
push
int3
pop
in
sub
sub
ljmp
lods
aas
out
cmp
stos
cmp
mov
xchg
repnz
pop
jg
repz
push
jge
adc
mov
push
lock
test
inc
mov
cld
out
clc
push
inc
xchg
sub
insl
sahf
inc
std
loop
push
subl
es
adc
sub
into
xchg
xor
inc
enter
or
add
jbe
cmpsl
mov
lock
cmc
sbb
movb
mov
sub
insb
or
xlat
mov
xchg
movsb
jl
fisttpl
adc
mov
loop
sub
pop
imul
shr
xor
insl
push
out
xor
test
int3
jl
iret
roll
mov
mov
fldt
int
into
mov
push
or
test
push
xchg
aam
sub
outsl
dec
pop
inc
fsub
inc
inc
cltd
in
rol
aam
dec
leave
xchg
js
and
or
popf
test
or
jae
xchg
ss
xor
repnz
dec
gs
mov
sbb
xor
jo
lret
xchg
cmc
aad
adc
xor
les
out
mov
sbb
mov
andb
pop
add
xor
add
imul
cmp
jmp
int
cmp
int3
leave
aad
xchg
mov
dec
imul
js
repnz
push
push
xchg
fstpt
into
cmp
popa
mov
sub
inc
jo
int
jmp
loope
test
arpl
mov
mov
testb
sbb
jae
xor
mov
sbb
pop
cmp
fistpl
dec
xchg
movl
pushf
and
sbb
in
jbe
jo
iret
mov
jmp
loop
shll
xchg
stos
test
or
dec
je
push
leave
inc
sti
pop
push
cwtl
jl
in
fdivrl
lods
mov
inc
sub
xor
out
jmp
mov
and
mov
lcall
dec
mov
jmp
sarl
in
cmp
pause
fcompl
mov
loopne
mov
aaa
loope
mov
cltd
loopne
push
out
mov
push
aaa
cwtl
stos
sbb
pop
gs
in
inc
mov
xchg
ds
and
es
lret
ds
sti
lds
push
mov
test
pop
jne
lret
imul
es
je
pop
or
jbe
sbb
mov
imul
aam
cli
lahf
mov
ja
mov
aad
out
test
sub
aas
sub
sub
filds
jne
insl
in
shlb
test
jecxz
xor
fs
add
jmp
jns
sub
xchg
adc
fstps
hlt
mov
push
in
or
push
jmp
ja
lea
fstps
or
or
add
call
sub
stos
out
imul
popf
cltd
lret
scas
cmp
jmp
test
test
hlt
jp
sbb
scas
xchg
sti
mov
jnp
mov
ds
push
jnp
cmpsl
mov
mov
rcrl
sub
and
dec
cmp
daa
lret
inc
adc
shrl
mov
mov
fwait
and
cmp
cmc
sbb
cli
cld
out
mov
jl
xchg
push
dec
aam
clc
cwtl
add
or
ret
cmp
and
lods
lcall
leave
ret
push
mov
sub
movzwl
xor
push
andl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
push
call
jmp
push
xor
add
push
push
xor
pop
or
xor
sub
mov
div
push
sbbl
call
movl
inc
movl
cmp
jb
movl
incl
movl
lea
inc
mov
andl
lea
xorl
mov
or
mov
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
mov
andl
mov
xor
xor
xor
mov
sub
add
mov
mov
mov
movzbl
cmp
mov
mov
mov
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
or
mov
xor
xorl
add
addl
imul
movl
mov
movl
jmp
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
movzbl
xor
mov
xor
add
and
mov
negl
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
not
add
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
mov
add
mov
mov
xor
xorl
add
movl
cmp
movl
jne
movl
push
subl
pushl
pushl
subl
call
mov
mov
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
call
jmp
or
mov
mov
movl
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
adc
mov
movl
and
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
and
mov
mov
andl
mov
addl
xor
xorl
xor
add
mov
xor
orl
xor
add
lea
movl
mov
movl
cmp
ja
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
call
cmpl
jb
sbb
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
mov
mov
mov
mov
movl
movl
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
push
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
into
int
rol
shl
out
stc
aaa
and
js
jle
js
scas
lahf
mov
out
push
adc
push
cmp
or
fsubrl
lret
xchg
scas
jno
mov
sbb
ja
add
or
jg
or
inc
or
sahf
popa
data16
test
dec
mov
xlat
and
in
in
fisttps
and
inc
ror
sbb
lods
test
popa
dec
test
push
cltd
mov
push
andl
cmpsl
int3
fisttpll
lcall
sbb
or
shll
mov
jns
inc
xor
fisubrs
sbb
imul
xchg
dec
mov
xor
pop
inc
pop
inc
pop
ret
das
fsubrl
sbb
jb
mov
sti
or
imul
and
cmp
adc
sbbl
and
std
popa
idivb
pop
fidivrs
inc
adc
insl
and
stos
or
out
push
dec
repz
in
jae
push
push
add
lods
and
and
push
movsl
sbb
pop
jne
xchg
and
inc
dec
ljmp
xor
xchg
add
ret
dec
add
shlb
mov
jo
faddl
mov
stc
mov
movb
mov
icebp
jo
sbbb
jb
adc
push
mov
xor
inc
stc
push
sbb
aaa
cmp
mov
add
mov
and
mov
cli
dec
test
pop
rol
sbb
or
inc
movsl
lcall
out
adc
aad
mov
mov
ja
push
cmp
sub
fcompl
pop
pop
jo
fldenv
ljmp
mov
dec
shl
jae
add
push
outsl
pop
dec
negl
test
push
jnp
dec
rcrl
sbb
pop
sti
sbb
or
push
mov
pop
mov
loope
xchg
jle
push
scas
mov
aad
mov
hlt
or
pop
xor
jl
adc
cmp
mov
in
push
inc
or
mov
das
fdivp
cmp
dec
dec
cmp
repnz
xchg
or
andb
and
or
out
add
dec
into
xlat
loopne
mov
mov
fdivr
push
xor
in
jae
lret
aam
dec
int
repnz
xlat
mov
push
in
je
push
ds
outsb
jns
inc
jp
jle
cli
fadds
add
adc
add
mov
movl
movl
mov
push
jmp
lret
xlat
fcmovnbe
lret
test
pop
rcrb
and
xchg
jle
js
lahf
adc
les
negl
jno
test
push
mov
inc
fcoms
fbstp
cmp
push
push
outsb
cmp
xor
flds
bnd
test
lea
int
cmpsb
sbb
mov
icebp
cmp
fistpl
jg
jp
rcrb
sub
cltd
sub
lret
insb
mov
fadds
xchg
sub
mov
call
rcrl
movsl
xor
or
divb
enter
cltd
imul
clc
mov
movsl
inc
pop
or
lods
sub
out
int
jae
shll
xchg
pop
lret
pop
jae
sub
test
sbb
push
es
inc
pop
movsb
mov
mov
push
shl
data16
pop
fmuls
sub
lea
insl
add
popf
ds
jae
call
ret
adc
pop
cmpsl
out
sbb
xlat
jmp
fcoms
mov
cmp
js
scas
jnp
shll
sub
mov
test
js
sbb
or
sub
push
lock
sub
sbb
jge
cmpsb
jno
ss
mov
add
test
jno
sbb
pop
decl
fs
inc
ds
cmp
xchg
mov
inc
xor
jns
adc
sub
stos
sub
je
push
pop
jge
stc
clc
data16
adc
mov
in
mov
mov
fildll
rcl
in
ja
aad
ret
nop
push
dec
inc
xor
out
popf
xchg
loop
inc
sbb
faddl
repnz
sbb
lds
test
inc
call
push
dec
fnstcw
cmp
nop
les
cmp
xchg
xor
add
adc
xor
sub
xor
xchg
jne
sub
inc
dec
dec
mov
lret
hlt
mov
push
js
into
lahf
mov
dec
sti
outsl
lds
je
xor
add
push
lcall
rdpmc
jl
or
xchg
push
xor
adc
dec
mov
inc
inc
push
pop
push
push
cmc
adc
adc
test
sub
xor
adc
cmc
push
outsb
jae
divb
int
pop
push
adc
bound
inc
out
adc
mov
mov
pop
cmc
ljmp
push
mov
ret
inc
dec
stc
in
cmp
orl
cmpsl
inc
add
insl
add
mov
mov
push
mov
mov
mov
cmp
movl
je
mov
mov
xor
subl
add
cmp
je
jmp
into
xlat
ror
aad
rcr
stos
imul
scas
jmp
sub
sbb
xchg
jle
js
loopne
jle
xchg
mov
jb
jg
pop
cmp
insb
push
fsts
sbb
push
cmp
cmpsl
out
mul
jecxz
adc
enter
fs
out
mov
jae
or
pop
mov
pop
dec
xorb
lret
clc
jecxz
fdivrl
pop
inc
test
mov
cmc
cmp
outsb
lahf
mov
adc
dec
dec
adc
mov
xchg
xchg
loop
out
or
aam
fdivrl
movsl
and
push
andl
loope
inc
ret
in
xchg
inc
mov
shlb
adc
mov
jb
pop
lahf
push
adc
cld
data16
mov
rol
pushf
mov
fwait
decl
and
mov
aaa
mov
stc
stos
dec
sarb
std
mov
push
xchg
adc
cwtl
adc
stos
jmp
enter
xchg
xor
pushf
lea
xchg
xor
and
inc
lock
or
aaa
push
mov
jo
ret
jno
lods
push
test
push
pop
xor
or
int
shlb
jae
aad
mov
popa
adcb
pop
mov
rorb
je
mov
dec
jmp
jns
pop
in
xchg
orb
pop
jne
lcall
add
lea
pop
mov
add
mov
scas
adcb
cmp
lods
cwtl
insl
mov
xor
ss
dec
cmp
mov
xchg
inc
adcb
mov
mov
outsl
out
dec
dec
pusha
cmp
fsub
dec
lods
mov
in
inc
gs
dec
jb
aas
test
mov
sub
jae
into
xor
ret
inc
pop
push
jg
or
in
int
scas
xchg
aaa
mov
bound
rorb
scas
cmp
daa
mov
push
xchg
mov
daa
inc
ret
mov
sarl
jle
pop
test
das
je
fwait
mov
cmp
ja
sbb
incl
adc
dec
fwait
arpl
sub
jmp
or
xchg
cmc
cs
into
rcrl
mov
lret
mov
inc
add
jo
fwait
inc
lahf
scas
bound
lret
inc
rorl
add
cli
add
pop
sbb
mov
pop
dec
cmpsl
mov
call
ret
and
inc
cld
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
add
push
pushl
pushl
mov
addl
jmp
ret
leave
leave
leave
lret
add
adc
js
enter
je
pushf
pop
jns
mov
js
dec
addr16
insb
jnp
push
cwtl
inc
or
cmpsb
int
jns
jno
lock
adc
mov
cmp
lock
ss
add
adc
jecxz
cmp
cmc
rcrb
nop
fisttpl
sbb
jb
hlt
shl
loop
nop
icebp
mov
jmp
ret
sbb
jle
dec
out
pop
icebp
mov
mov
sub
lahf
xor
push
dec
stc
enter
imul
dec
lods
jecxz
add
jo
xor
popa
and
mov
jmp
adc
xor
push
lds
cmpsl
and
cmpl
fs
xchg
mov
popa
je
xor
test
or
out
loope
pop
adc
fidivrl
scas
xor
xchg
xchg
mov
aam
rcl
gs
push
add
push
sbb
int3
push
ss
cs
mov
mov
cli
clc
jns
jg
ljmp
movzbl
frstor
mov
pop
xor
xchg
push
inc
rclb
push
push
sub
sub
jae
push
andl
pop
xchg
imul
pop
movsb
mov
and
mov
test
jmp
test
mov
sub
outsb
fs
aas
sbb
shrl
inc
repnz
adc
mov
push
mov
xchg
scas
jb
mov
aad
mov
push
sub
lahf
popf
add
lret
movsb
xor
mov
test
stos
sahf
jo
sub
enter
test
cmp
in
bound
xchg
fldenv
xlat
ljmp
cmpsb
lea
out
mov
fstps
lret
or
push
push
stos
cmp
lds
jp
mov
bound
es
mov
xchg
push
or
movsl
stos
dec
dec
pop
or
sub
add
sbb
fildll
imul
jns
inc
xchg
and
mov
xchg
inc
mov
jns
cwtl
and
mov
out
mov
std
inc
lock
movsb
jl
insb
std
jl
rcll
in
jp
xchg
sub
in
cmp
dec
inc
sub
lods
fildll
ss
loope
leave
dec
pop
outsl
cld
and
dec
iret
fstl
rclb
jmp
pop
pop
je
jp
shll
insl
mov
movsl
shrl
rcrb
add
mov
mov
jmp
ret
int3
int3
aad
leave
roll
push
jp
fstps
js
push
push
cmp
ret
lds
pusha
and
and
int
cld
mov
push
jb
jo
popf
or
add
push
mov
dec
sbb
shlb
test
loop
xchg
stc
pop
scas
and
fildll
xchg
and
jno
mov
xchg
sbb
or
repnz
popf
out
jmp
and
pop
data16
sbb
push
jge
mov
xchg
mov
or
cmpsl
into
xor
inc
pop
mov
and
daa
lock
mov
fdivs
test
cmp
ret
imul
ret
jno
adc
push
and
push
pop
inc
inc
out
mov
xchg
xchg
pushl
arpl
ja
pop
xchg
inc
sbb
adc
jg
xor
push
stos
xchg
dec
mov
imul
ret
xchg
in
adcl
clc
mov
sbb
fdivrl
mov
sbb
push
insl
mov
adc
xchg
into
fildll
cli
iret
adc
xchg
sbb
repz
test
jne
adc
mov
mov
mov
shl
cltd
pop
push
or
sarb
outsl
mov
mov
jp
sti
push
adc
push
cmpsb
push
xor
sub
rcrb
cld
push
popa
add
add
dec
jmp
jle
inc
test
jmp
inc
clc
or
test
imul
rcr
sbb
loope
dec
jne
outsb
jnp
jmp
fdivl
xchg
xor
inc
mov
adc
test
push
mov
add
stc
mov
mov
adc
pop
js
fcompl
push
sahf
fnstenv
mov
or
add
enter
in
jp,pt
stos
jge
xor
mov
les
and
jmp
loope
pop
push
lods
xchg
fs
call
loopne
fldl
add
sub
or
ljmp
add
cltd
push
mov
cmp
arpl
xchg
push
push
inc
rcr
mov
xchg
fisubs
xchg
pop
cmp
das
stc
dec
cmp
jb
imul
fistpl
sbb
jno
std
cmp
mov
xor
add
rcl
pop
nop
js
lret
popf
dec
bnd
jae
mov
mov
jmp
jmp
ds
int3
lret
xchg
aam
cmpsl
std
sub
jbe
jg
xchg
jle
js
adc
and
ljmp
pushf
lahf
mov
sub
xor
nop
cli
out
mov
xchg
push
leave
cmpsl
lcall
jecxz
add
xlat
addr16
imul
movsb
adc
jne
mov
addr16
scas
jns
jbe
scas
push
in
inc
adc
rclb
sti
pop
dec
clc
ja
push
outsl
inc
mov
inc
fsubs
data16
cmpsl
push
jge
adc
inc
add
int3
push
push
pop
push
fwait
xchg
decb
add
orb
rcrb
das
mov
jb
cltd
in
frstor
mov
out
xor
cmpsb
std
adcl
lods
jae
dec
mov
or
push
shrl
sub
dec
cmpsb
fstl
enter
decl
fnstsw
test
sub
aas
xchg
cs
or
xchg
test
andb
sub
imul
inc
sub
inc
in
dec
jge
inc
in
cmp
fstp
adc
ficoms
sbb
ds
push
and
pop
outsl
jae
fsubs
in
aad
dec
or
inc
in
sbbb
stos
xlat
mov
dec
loopne
push
subb
pop
jno
jp
repnz
punpckhbw
push
mull
stos
leave
sub
test
sahf
and
cli
or
xchg
loopne
or
lret
sub
fimull
nop
pop
sbb
cwtl
and
inc
mov
mov
movsl
out
into
notl
outsl
jmp
add
inc
int
in
faddl
inc
xchg
xchg
out
loope
popf
add
pop
cwtl
in
jnp
jbe
ret
adc
cmp
mov
mov
pop
mov
add
je
xchg
sbb
mov
jl
adc
dec
inc
push
leave
inc
lret
mov
inc
jns
fdivl
sbb
mov
xchg
adc
ljmp
jae
mov
ret
push
imul
pop
jmp
pop
xchg
movsl
outsb
fdivr
stc
sub
xchg
pushf
out
add
lea
loop
mov
jns
or
pop
or
mov
cmc
and
add
xchg
arpl
add
cmpsb
jle
lods
vmovaps
xchg
and
jmp
lea
or
int
out
inc
pop
jnp
mov
or
aas
and
fnstenv
inc
mov
out
adc
test
ja
dec
mov
jmp
rol
iret
fcmovbe
fcmovne
mov
jnp
pushf
xchg
and
xchg
jle
js
sbb
out
in
and
jne
mov
mov
int3
add
cmp
mull
cmp
shll
push
cltd
nopl
xchg
into
push
cmp
subl
stc
scas
inc
mov
aam
outsl
ret
in
loopne
fistps
sub
mov
outsb
and
loopne
sub
push
sahf
inc
call
jne
jmp
daa
add
inc
bnd
cmpsb
rolb
pop
dec
dec
inc
rol
push
xor
sbb
cmp
leave
pop
adc
mov
std
ret
cmc
xchg
sahf
repz
repz
jbe
loopne
sub
add
imul
or
cltd
mov
imul
push
dec
ficomps
js
adc
addr16
in
test
mov
dec
jmp
pop
test
add
cmpsl
js
xor
push
jecxz
ret
sbb
push
shll
scas
sub
mov
clc
dec
sub
ret
xor
jae
adc
push
pop
stc
lahf
mov
mov
mov
jb
mov
dec
call
mov
push
pop
push
lds
imul
into
mov
ret
iret
lahf
repz
arpl
pop
and
lahf
pop
push
dec
and
pop
push
fbstp
mov
sbb
mov
lcall
jecxz
repnz
jp
jecxz
fldl
jle
and
outsb
fwait
ds
lods
jmp
xchg
xor
push
and
lcall
add
mov
enter
fildl
test
pop
pop
push
jo
or
mov
or
add
add
data16
or
mov
xchg
jae
push
lds
push
xchg
jge
jnp
sub
push
pushf
add
outsl
les
insb
in
jmp
pop
sbb
inc
adc
add
xchg
cmpsl
xchg
pop
adc
int
pop
adc
jo
xor
xlat
lahf
and
sub
subb
xor
mov
xchg
sti
xchg
das
fnstsw
sbb
in
dec
hlt
xor
rcrl
sahf
inc
jle
icebp
adc
sbb
mov
sbb
dec
rcll
adc
xor
jo
lea
out
xor
icebp
pop
cmp
push
gs
mov
shlb
mov
int3
xchg
and
fwait
sub
jns
mov
mov
add
cmp
jne
mov
xor
add
mov
mov
xor
jmp
xlat
cmp
fcmovne
push
lcall
sub
js
jmp
andb
adc
imul
mov
jmp
mov
out
icebp
xchg
push
cli
clc
xchg
and
fwait
jno
rorl
mov
call
ds
pop
andb
popa
xlat
mov
adc
popf
push
out
sub
dec
sbb
push
movsb
adc
jns
out
fstpl
xchg
ds
cmp
mov
imul
pusha
stos
pushf
xor
btr
jb
fildl
fstl
and
clc
dec
add
dec
pop
leave
jg
aas
mov
or
test
dec
and
or
mov
cltd
mov
sub
stc
adc
ret
and
pop
adc
in
jns
mov
sarb
or
push
jno
shr
mov
or
jp
xor
sub
mov
imul
and
call
push
adc
les
jle
and
jp
ret
xor
cmp
cs
je
sbb
shrb
scas
pop
outsl
xor
aaa
loopne
sahf
mov
out
mov
stos
pop
fistps
mov
mov
sub
xchg
mov
movsl
xor
cmp
pop
mov
je
cmc
dec
sbb
scas
out
jg
aaa
jecxz
fildl
mov
adc
pop
mov
popa
lock
cltd
fsubs
clc
xor
data16
aas
mov
pop
jle
mov
int3
test
sbb
pop
pop
push
add
xor
and
adc
arpl
adc
xlat
mov
mov
fs
xchg
push
and
loop
mov
ret
test
lcall
movsb
scas
xor
push
popf
in
pop
lcall
push
movsl
push
xlat
push
stc
std
jmp
inc
cltd
jbe
xchg
pop
lret
loop
mov
sbb
mov
sbb
cs
and
in
mov
cwtl
mov
stos
imul
cltd
sahf
lea
sub
daa
jb
push
dec
aad
out
bnd
adc
test
pop
fnsave
xor
clc
stc
pop
fs
mov
cmpsl
cwtl
xlat
cmp
sbb
jo
int3
int3
icebp
icebp
push
out
jg
cmp
sub
and
jmp
add
mov
add
ret
xlat
leave
rcr
rcr
xlat
cmp
loop
sub
xchg
jle
js
mov
inc
lea
outsl
outsb
ja
ss
or
mov
loop
mov
imul
les
lret
int3
jmp
push
lock
inc
lret
dec
jle
pop
sub
push
jle
xlat
movsl
dec
jecxz
test
xor
add
cmp
jge
xchg
aam
mov
stc
pop
int3
lods
test
pop
out
call
aas
pop
ret
mov
xchg
test
scas
mov
jns
ljmp
iret
pushf
and
outsl
jb
sbb
pop
fwait
mov
and
fwait
cmp
ret
insl
dec
repz
aad
repnz
push
pop
adc
arpl
add
fwait
std
hlt
xchg
iret
ret
push
dec
xchg
das
pop
adc
inc
int
sbb
ret
addb
loopne
xor
pop
lcall
sub
sarb
mov
popl
inc
dec
stos
lret
out
imul
adc
fsts
inc
jecxz
test
pop
add
loope
fwait
inc
insb
inc
repnz
pop
mov
pop
stos
ja
lret
ret
push
lock
mov
addps
mov
lds
xchg
and
clc
xchg
movsb
aad
cmpsl
popf
sahf
xchg
xchg
scas
rclb
aad
jl
mov
shl
sbb
stc
dec
stos
enter
loope
in
push
pop
fld
shrl
jge
mov
jbe
stos
jge
aam
pop
pusha
sub
shlb
push
or
pop
xchg
push
aaa
cld
and
pusha
ret
jo
mov
mov
cmp
xor
adc
push
orl
imul
scas
pop
adc
les
lcall
hlt
insb
jbe
adc
mov
cmp
push
call
xor
add
adc
pop
jb
nop
ficoms
data16
mov
cmpsl
pushf
cmp
loopne
leave
cmp
enter
outsb
pop
pop
dec
jbe
pop
cli
xor
out
out
sbbl
or
sub
fmul
pop
cs
outsb
cs
fndisi(8087
stos
je
adc
mov
movb
cs
aas
movsl
lds
jmp
sub
lods
loop
push
fld1
pop
popa
adc
xchg
out
pop
adc
mov
ret
enter
sub
dec
xorb
in
movsl
cmpl
and
mov
push
repnz
and
push
jg
ljmp
call
mov
xor
pop
jmp
rcl
rcl
rcl
and
sar
cmp
jl
sub
xchg
jle
js
sub
and
lods
leave
add
dec
popf
mov
xchg
test
ja
adc
jle
aaa
jne
and
sbb
mov
push
test
mov
incb
sbb
ljmp
stos
pop
mov
pop
pop
xor
mov
hlt
arpl
jmp
mov
push
iret
idivb
cmp
int3
pop
inc
icebp
leave
orb
adc
add
push
sub
jns
push
loope
jl
lret
xor
outsl
adc
cmp
cmp
fidivl
popf
stos
and
pop
test
cmp
adc
mov
les
shl
xchg
sub
inc
in
mov
mov
jns
jmp
sub
jb
pop
xchg
dec
xor
push
ss
das
push
jp
loopne
or
pop
add
jg
mov
and
adc
and
push
lods
test
cmp
stos
jge
or
mov
fs
jmp
js
mov
xor
in
out
xchg
inc
and
add
je
jno
lds
push
out
mov
or
or
push
xchg
adc
scas
mov
xor
xor
or
jne
loope
sub
and
mov
cmp
mov
inc
push
jnp
scas
adc
test
inc
rcrl
mov
aam
jp
movsb
or
aas
roll
xchg
jnp
or
and
mov
adc
push
inc
dec
xchg
jo
test
xchg
adc
loope
mov
inc
xor
imulb
adc
xchg
lea
sbb
or
adc
jge
ret
cmc
pmaxub
cmpsl
add
or
out
mov
mov
inc
shll
cs
jmp
push
dec
inc
push
cmc
xchg
sub
dec
std
fucomip
cmpsb
cli
in
test
cmc
cmp
pusha
push
icebp
xchg
pop
cmp
push
mov
push
das
stos
movsb
pop
cmc
les
decb
pushf
push
negb
jbe
pop
push
pop
fidivs
mov
ljmp
cmc
mov
add
fdivrs
pushf
sub
and
mov
mov
inc
stos
stc
dec
mov
je
rorl
jl
jmp
iret
pushw
or
negl
push
roll
pop
leave
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
dec
movl
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
mov
mov
add
xor
cmp
jne
mov
mov
jmp
ror
xlat
cmp
jns
sub
loopne
je
jg
jg
add
xchg
mov
mov
cs
xor
cmc
sahf
jp
pusha
insb
pusha
es
leave
mov
sbb
mov
add
lcall
scas
movsb
sub
stos
mov
adc
push
mov
nop
sbb
int
mov
jnp
out
mov
leave
jecxz
or
mov
js
loopne
imul
jge
cmp
jne
outsb
cmp
test
sahf
dec
push
stos
sub
js
imul
ret
mov
jl
ds
jg
div
pushf
ret
mov
push
mov
lret
or
sbb
mov
mov
jmp
cmpsb
ss
push
inc
xchg
mov
fisttpll
sub
int
fsts
sbb
adc
push
idivb
xchg
jge
stos
cmpsb
push
xor
jb
and
sysexit
lret
jns
stos
and
ja
ret
jecxz
push
aad
sbb
xlat
push
mov
mov
add
push
sarb
out
mov
call
not
and
repnz
subl
lcall
sub
mov
orl
or
jbe
jle
repz
out
push
pop
into
loop
xchg
mov
popf
int3
push
shll
fdivr
mov
repz
sti
mov
test
movl
mov
push
jno
jno
cmp
pushf
test
rclb
xor
ds
and
dec
loop
xchg
mov
jg
data16
mov
jecxz
or
sbb
dec
mov
adc
ljmp
adcb
mov
mov
int
idivl
lods
xor
negb
push
lcall
push
mov
jg
pushf
mov
pop
test
lock
lahf
add
jmp
cmp
aad
aad
popa
adc
jmp
xor
add
sbb
pushf
mov
add
in
pushf
pop
sarb
repz
incl
xor
pusha
stos
out
dec
lcall
loopne
jecxz
mov
fdivrp
add
shrl
mov
sbb
movsl
push
sar
xchg
cmp
pusha
scas
add
fsubs
adc
adc
outsb
fistps
fisttpll
call
sbb
outsb
mov
aaa
jne
out
cli
ljmp
shl
out
push
jle
mov
sbb
inc
movsl
loop
ss
adc
movsb
rorl
loopne
pop
scas
push
xchg
incb
mov
pop
iret
or
push
int
popf
frstor
jno
sbb
xchg
ffreep
or
and
aam
pusha
sub
pop
push
xchg
ds
les
inc
in
add
daa
and
mov
es
mov
outsl
mov
push
cmpsl
or
dec
jge
roll
mov
test
cmp
xchg
jle,pt
dec
jmp
stc
pop
insl
sbb
jg
mov
into
out
inc
mov
outsl
outsl
xchg
mov
xchg
mov
push
bound
into
mov
pop
jmp
and
jne
jecxz
mov
dec
popf
outsl
xlat
mov
mov
stc
sbbb
jo
jnp
mov
lock
lods
mov
fisubrs
jb
add
repnz
xchg
push
cmp
jnp
jns
fistpll
xchg
xchg
or
mov
jmp
mov
xchg
sbb
sti
mov
and
imul
push
fs
mov
ret
or
imul
sti
pop
xchg
in
jmp
inc
inc
and
test
iret
xor
or
and
xor
pop
cmp
rorl
sub
fstpl
sbb
jae
in
cmpb
aaa
cltd
lock
in
jle
repnz
inc
xor
decl
dec
in
mov
lret
test
scas
adc
mov
or
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
jmp
cmp
int3
leave
fnstenv
or
pop
adc
jg
add
fucomi
sbb
mov
jae
sbb
test
mov
add
fstl
repnz
lds
in
aad
pop
push
fld
dec
ds
lahf
xor
rcll
orb
xlat
mov
push
cltd
xor
push
mov
add
fstpl
cmpsb
jae
pop
test
ja
shrl
outsl
mov
jmp
mov
pop
cmp
or
jb
xchg
sarl
inc
inc
das
pop
jl
push
or
cmpsl
in
icebp
mov
mov
daa
xchg
popf
repz
cmp
sbb
mov
mov
test
jmp
jb
movsl
jg
negb
mov
push
push
mov
push
icebp
fidivs
sub
fsubrs
xor
js
xchg
jno
mov
and
je
mov
pop
add
xchg
cmp
or
add
mov
xchg
imul
xor
push
inc
mov
dec
sbb
lods
cmp
xchg
xchg
mov
sidtl
mov
sub
test
cli
jle
icebp
fmull
sti
sbb
scas
dec
push
mov
sub
push
cmp
mov
push
les
add
inc
sbb
mov
cld
adc
cmp
icebp
aad
mov
or
cmp
scas
xchg
push
fs
push
xlat
fcmovu
bound
sbb
and
sbb
lds
call
adc
add
sahf
imul
adc
enter
mov
inc
das
mov
and
leave
lret
pop
ljmp
cmpsb
stc
push
cmpsl
add
fstl
adc
sub
mov
mov
sbb
mov
leave
idiv
dec
add
shlb
xor
gs
xchg
pop
aaa
shll
add
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
adc
mov
inc
mov
andl
xor
orl
add
movl
mov
not
movl
mov
movl
mov
mov
push
movl
mov
mov
cmp
movl
je
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
jmp
ret
ret
leave
lret
incl
cmp
jnp
js
add
adcb
hlt
lds
push
inc
out
ljmp
fnstenv
ss
xor
mov
mov
jo
in
sub
js
cmp
rclb
mov
mov
out
cli
inc
jge
mov
dec
divb
sub
mov
das
stc
or
sub
or
test
insb
popf
lock
test
enter
pop
out
or
les
sarl
flds
hlt
movsl
idivl
xor
fnstenv
push
adcl
std
jbe
jmp
adc
push
cltd
sub
cmp
jns
mov
cmpsl
or
mov
push
pop
adc
leave
push
dec
jb
jl
movsl
xchg
mov
int3
push
jns
mov
roll
jnp
dec
add
pop
fisttpll
cld
out
repnz
and
jle
cmp
pusha
cld
std
mov
nop
push
es
cmp
and
faddl
push
jl
lds
mov
int
mov
pushf
mov
pop
shl
ja
mov
jl
lods
in
add
xor
inc
and
test
mov
scas
mov
xor
mov
clc
mov
icebp
mov
jp
jns
cli
push
je
jl
addb
mov
js
dec
stos
fwait
sbb
outsb
xor
adc
iret
inc
cmp
loopne
dec
cmp
sub
popa
mov
lret
idivb
sbb
xchg
std
imul
pop
rol
lcall
stos
stos
mov
in
lcall
mov
jnp
loop
or
enter
ja
adc
cmpsl
ficoml
xchg
das
test
stos
mov
das
mov
sub
sub
mov
jnp
xchg
lcall
fs
je
inc
add
add
lcall
into
dec
mov
nop
push
push
xor
rcrb
sub
mov
cmpsb
aad
fisubs
dec
mov
cmp
xchg
xor
mov
push
std
mov
or
loope
xor
icebp
hlt
jl
mov
or
pop
or
pop
mov
sub
push
mov
ljmp
jns
loop
cmp
xchg
mov
xchg
jl
aad
aam
inc
mov
mov
idiv
out
in
imul
cli
mov
mov
clc
push
into
and
pop
inc
xchg
inc
cmc
addl
repnz
and
int3
push
adc
sub
sbb
inc
ret
call
xchg
mov
sbb
inc
push
sub
xor
lea
xor
jmp
sarb
xlat
xlat
loope
pop
dec
pop
xor
js
jle
js
xchg
test
arpl
cmc
jle
mov
mov
out
jb
ret
mov
lods
xchg
daa
dec
or
fldcw
or
push
inc
dec
sbb
lock
sub
scas
mov
mov
test
and
sub
sti
fcomi
xor
xchg
fisubrs
neg
dec
testb
mov
mov
jbe
adc
push
cld
push
loopne
das
daa
and
xchg
ss
mov
add
cmp
sbb
bound
js
dec
mov
jnp
out
pop
popa
cmpsb
stos
add
in
push
mov
sbb
mov
popf
mov
faddl
mov
ljmp
xor
jnp
sub
push
ljmp
push
jp
mov
inc
mov
pop
mov
lods
cld
cmp
push
dec
cwtl
outsb
call
ss
mov
scas
pop
pop
inc
sub
out
mov
adc
sbb
sbb
xchg
shl
mov
sub
add
and
icebp
mov
sarl
popl
dec
add
or
sbb
add
fnstenv
scas
mov
leave
jae
or
cmp
xchg
iret
dec
pop
lods
pushf
lea
clc
or
xlat
inc
sub
mov
jae
sbbl
mov
pusha
subb
mov
mov
push
push
jp
push
into
or
cltd
cmp
sub
cli
lcall
jb
ret
test
inc
mov
addr16
pop
mov
mov
and
insb
fildl
sub
or
aas
aam
into
ret
cld
or
xchg
fwait
insl
cld
fwait
idivl
out
pusha
pop
data16
inc
mov
cmp
add
mov
jl
sub
sub
jnp
add
icebp
cmpsb
dec
jbe
mov
stos
and
xlat
jg
adc
into
add
movsl
add
or
int
lods
jo
xchg
pop
cmp
xchg
stos
cmc
insb
pop
xchg
push
mov
or
sub
fstl
pusha
divb
xor
jne
outsb
pop
mov
mov
add
sub
ljmp
ja
jo
mov
roll
nop
xchg
dec
mov
mull
aam
push
lahf
sub
mov
lea
mov
ds
jno
adc
push
cs
add
sub
test
push
mov
movsb
pushl
mov
mov
das
cmp
and
dec
outsl
mov
aam
lldt
sub
mov
in
and
sbb
mov
fnstcw
nop
pop
ds
cld
rcrl
jne
push
mov
pop
bound
fcmovb
bound
dec
mov
stc
cli
repnz
sub
inc
stc
jmp
jmp
int3
les
aam
ror
mov
mov
js
jle
js
shlb
lea
jmp
and
mov
adc
lock
jecxz
inc
jb
lock
add
int3
mov
xlat
sbb
add
inc
push
mov
call
ljmp
jbe
push
jmp
add
inc
cmp
shrb
iret
jae
push
inc
xor
sbb
out
or
cmc
jecxz
data16
jns
pop
repnz
and
mov
fdivl
sbb
mov
sbb
outsl
in
ret
push
inc
cmp
movsb
jg
mov
cltd
mov
xchg
in
mov
jle
or
test
gs
repz
pop
ds
sti
cmpsb
lea
int
xor
loope
cmp
jae
mov
fcoml
out
xchg
pop
orl
or
xor
in
pop
stc
rcrl
incl
andl
scas
pushf
mov
adcb
out
pop
push
xor
int3
mov
adc
mov
loope
rclb
int3
mov
popf
notl
sahf
adc
or
sub
shll
and
xchg
jp
rclb
rcrb
cmpsl
adc
lock
inc
movsb
bound
fisttps
mov
mov
xor
xchg
mov
adc
in
or
mov
aaa
addl
sbb
lock
dec
inc
fmuls
mov
fmuls
arpl
pop
fadds
and
je
add
pop
push
and
roll
xor
jb
incb
jne
push
in
inc
sub
inc
sub
inc
shl
xchg
add
fwait
dec
in
jns
cli
popl
insl
cmp
adc
sbb
push
lds
scas
data16
dec
test
add
and
or
pop
jbe
pop
pop
and
sub
outsl
hlt
push
xor
adc
and
cmp
lcall
xor
inc
xor
test
int3
add
int
mov
jb
mov
xor
inc
ss
std
dec
mov
aas
mov
push
mov
lret
sub
ror
hlt
leave
aad
mov
push
dec
and
stc
and
pop
xor
mov
and
sarb
mov
in
out
frstor
or
mov
inc
fs
add
test
push
inc
mov
mov
or
sub
scas
ficoml
pop
push
lret
adc
lea
pop
pop
loopne
pop
or
fsts
fisttps
adc
test
add
mov
xor
add
mov
mov
xor
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
jmp
cmp
rcl
fcmove
test
imul
jnp
js
call
jne
jo
movsl
push
sti
loope
adc
pop
dec
xchg
adc
mulb
pushf
push
arpl
inc
jo
pop
xor
pop
rcll
inc
dec
inc
and
xchg
sbb
pop
outsl
lea
xor
shr
add
shrb
mov
lahf
cmc
ljmp
mov
push
sub
lcall
mov
ror
sarb
clc
adc
mov
lock
mov
jae
push
sbb
jo
mov
push
mov
int
loop
pop
or
loope
mov
iret
adc
orl
or
lret
jo
cltd
rorl
shrl
inc
xchg
cmpsl
add
popa
dec
movsl
xor
add
jle
lahf
mov
push
test
repz
pop
jne
jbe
push
jo
inc
out
mov
jl
cmp
jle
subl
ss
mov
les
push
or
movsl
sti
scas
ja
pushf
mov
mov
inc
push
fimull
gs
sub
dec
push
fsubp
xchg
sbb
jae
jno
imul
ja
subb
int
jmp
and
cmc
mov
jmp
or
stc
pusha
lea
pushf
stos
aam
cmp
cmp
leave
lret
sarb
pop
bound
adc
cmp
xor
xor
push
gs
movd
xor
pusha
mov
gs
pop
adc
insb
fidivrs
or
cli
xchg
or
inc
inc
int3
mov
shr
loopne
call
xchg
pop
hlt
adcb
repnz
lea
cmpsb
sub
xor
sbbl
jl
mov
mov
sbb
mov
lret
push
pop
andb
pushl
push
pop
dec
inc
movsb
cmc
dec
inc
std
sbb
push
push
dec
push
es
orl
push
ror
shlb
and
pusha
push
pop
jle
les
xchg
shlb
xchg
shlb
mov
sub
stc
fbld
inc
cmp
dec
popa
fs
jmp
or
xlat
and
dec
xchg
mov
es
data16
sbb
negb
rcrb
jmp
sti
stc
cld
push
cmpsb
adc
scas
fdivrs
pop
mov
xor
cmp
test
movsb
cmp
cmp
into
mov
add
push
jnp
push
dec
popa
out
cmp
stc
stos
inc
fisttps
push
fimull
ss
pop
push
out
cmp
mov
xlat
xchg
mov
scas
mov
popf
clc
add
pop
loopne
cmp
push
sbb
fbstp
aad
xor
push
inc
add
add
adc
into
ret
ret
lret
xor
stos
push
leave
aas
xor
jnp
js
mov
xchg
gs
jo
sbb
jge
dec
xor
cltd
ss
ret
jo
rol
lds
push
and
cmp
push
inc
insb
mov
pop
sub
hlt
xor
inc
mov
scas
inc
sarb
rcll
dec
sub
imul
xlat
adc
lahf
sub
int3
sbb
adc
popl
pop
sbb
mov
sub
inc
dec
iret
scas
xor
mov
je
add
cli
pop
fisubrl
mov
enter
push
xchg
rcrb
stos
insl
loopne
das
pop
scas
or
loopne
shll
fisubrl
mov
add
sahf
pop
cmp
mov
sbb
dec
cmpsl
jl
stos
push
mov
cld
sbb
es
cmp
adc
mov
jl
xor
mov
subl
out
test
xchg
cmpb
dec
cmp
out
into
jp
fmull
rep
repnz
test
jbe
inc
xchg
mov
cmp
inc
ret
fsubrs
outsl
inc
jmp
scas
jb
int3
aas
push
xor
sub
ds
iret
inc
cmp
rolb
mov
cli
add
out
xchg
sub
xchg
es
and
jns
mov
loopne
pop
or
pushl
scas
jno
or
mov
xor
mov
addr16
pop
loop
jg
mov
inc
cmp
dec
inc
cs
sarl
rcr
adc
mov
fs
jne
adc
pushf
pop
add
jmp
into
fdiv
mov
jle
dec
pop
shlb
sar
fs
ds
inc
test
and
scas
iret
bound
loop
ds
test
add
outsl
out
and
push
outsb
imul
and
xor
sub
stc
in
mov
test
inc
popf
js
dec
pop
cmc
sbb
test
icebp
nop
dec
xchg
inc
jae
mov
sbb
sbb
jle
push
sbb
xor
mov
loop
mov
cmp
pop
ljmp
and
xchg
loop
fldenv
mov
test
sub
fcmovu
pop
cli
das
fbstp
shll
dec
jns
push
repnz
jl
stc
or
js
incb
push
jo
xchg
in
sahf
inc
int
inc
aaa
sbb
loopne
add
mov
sub
inc
pop
xchg
sbb
mov
mov
icebp
and
js
fisttps
cmpsb
pop
and
xor
jne
jbe
mov
test
inc
xor
jmp
jp
test
je
enter
and
movsl
xor
jl
and
pop
adc
jge
xor
sub
xor
add
add
rol
leave
shll
mov
sarb
jle
js
jo
mov
push
mov
fsubl
dec
shll
sub
loope
mov
stos
jo
sbb
hlt
into
cmpsb
jne
sbb
dec
std
mov
sub
in
lods
jns
out
inc
xorl
pop
stos
out
push
incl
sub
mov
mov
sub
and
jp
push
dec
sub
xlat
xchg
mov
pusha
jae
cmp
out
clc
pop
outsb
int
sarl
mov
mov
mov
cmp
mov
adc
aas
rcll
inc
and
xchg
cmp
call
mov
shlb
stos
jmp
fmull
cmp
cmpsl
sbb
loopne
sub
aam
sub
jmp
cmp
fistpl
mov
std
inc
xchg
daa
cmpsl
insb
pop
mov
adc
scas
scas
ja
aas
loopne
rorl
icebp
pop
and
and
pop
addr16
jb
in
jmp
jge
push
mov
jns
lods
outsb
adc
adc
nop
dec
pop
sub
inc
cmp
dec
mov
and
and
addr16
and
aas
in
xchg
jbe
xlat
sahf
mov
scas
jnp
fadd
mov
push
shl
push
insb
dec
pop
xor
xchg
mov
mov
test
fmuls
mov
or
mov
pop
in
xchg
mov
jns
fucom
mov
insb
jns
xchg
jle
mov
nop
cmp
gs
jg
mov
add
fldt
xchg
sbb
xor
xor
ficoml
or
jg
push
push
xchg
adc
scas
hlt
cmp
jg
adc
xchg
loope
loope
sub
add
mov
sub
repz
sbb
ret
pusha
push
out
pop
adc
negl
dec
ret
lock
push
and
movsl
int
mov
repz
pop
dec
mov
mov
mov
inc
sahf
xchg
and
cmp
mov
out
sub
mov
dec
cs
fs
pop
dec
and
sti
sbb
mov
cs
ja,pt
lods
gs
sub
inc
rcll
or
iret
iret
push
aam
repz
ficompl
arpl
mov
mov
std
adc
cmp
xchg
mov
inc
inc
add
cmp
lods
add
and
loopne
roll
xor
pop
inc
push
repz
rol
xor
fcoml
int3
arpl
add
mov
cltd
mov
int3
pop
jns
mov
sub
mov
mov
leave
cmpsl
xorb
sub
fdivrl
jnp
inc
fs
imul
int3
mov
mov
sbb
adc
xor
jno
gs
in
test
xorl
add
add
mov
leave
ret
push
mov
sub
jmp
rcl
ret
into
rcl
daa
jle
mov
inc
aaa
or
jg
adc
js
jns
insb
jo
add
lgdtl
fnstenv
and
sbb
jne
jmp
pop
insb
push
outsb
fcoml
test
add
cs
int
mov
orb
in
lret
xchg
add
jmp
out
fisubs
xor
push
dec
or
mov
adc
push
jnp
and
jns
cld
icebp
mov
aam
and
pop
shlb
nop
imul
mov
and
adc
cmp
paddd
lcall
inc
iret
jnp
dec
pop
dec
mov
sarl
inc
daa
add
cli
mov
mov
imul
and
xor
repnz
stc
lock
mov
testb
cwtl
push
inc
out
add
mov
loopne
mov
nop
lret
and
test
inc
jns
cld
aad
mov
adc
out
popa
push
mov
jne
xor
push
xchg
pop
push
lock
loope
jae
popa
cli
mov
fwait
jbe
mov
addl
pusha
mov
cld
pop
stos
sbb
mov
xchg
dec
adcb
xor
stc
xchg
fidivrs
push
sub
cld
inc
pop
pop
stos
popf
gs
mov
mov
mov
iret
mov
inc
lds
sub
cmp
mov
insb
and
xlat
sbb
xor
sub
push
lahf
test
mov
out
test
push
outsl
loope
ds
push
icebp
test
jne
push
stos
push
fcom
inc
dec
ja
cld
negl
xor
cmpb
dec
cmc
and
int3
xchg
call
cltd
imul
inc
ljmp
pop
inc
in
push
add
cltd
push
fs
jle
scas
imul
push
dec
pop
sar
xchg
pushf
mov
pop
jnp
or
imul
or
cwtl
mov
inc
cld
cmp
jge
inc
add
add
add
leave
add
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
adcl
movl
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
and
push
add
mov
and
xor
movzbl
adc
mov
adcl
add
incl
mov
mov
push
movl
push
test
movl
je
jmp
lret
fld
scas
inc
adc
loop
cmp
adc
js
ret
das
fwait
cmp
push
lahf
arpl
jge
loope
daa
inc
inc
mov
mov
cmp
xchg
jmp
push
fsubs
test
iret
adc
nop
dec
or
and
inc
jl
cltd
sarb
out
add
sahf
cmc
push
sti
in
loopne
fiaddl
ja
xchg
jp
or
mov
add
inc
sbb
jecxz
insb
inc
xor
jle
inc
jecxz
add
mov
out
sub
mov
pop
sti
pop
rcr
leave
cld
inc
xor
inc
mov
movntps
cmp
and
popa
or
adc
push
xchg
cli
dec
scas
sub
push
mov
jbe
jb
add
pop
bound
mov
cmp
outsl
mov
aam
xorl
jmp
mov
xchg
dec
push
xor
fs
cld
shrl
push
fbstp
sub
call
pop
push
bound
lea
out
iret
mov
push
xor
mov
icebp
mov
dec
into
pop
cmpsl
dec
adc
mov
sub
fisttpll
sub
in
lods
outsb
or
outsl
or
vmaxpd
push
pop
sub
dec
repz
jnp
stos
jle
leave
mov
in
out
add
adc
scas
sahf
cld
mov
popa
xchg
ficompl
sub
cmc
out
cmp
in
aaa
insl
loopne
push
es
fisubl
ret
and
or
adc
test
jmp
mov
stos
push
sbbb
mov
pop
repz
push
ljmp
cmp
jno
sub
dec
inc
sti
pop
daa
fneni(8087
push
test
test
push
cmp
inc
call
mov
stos
mov
loop
lds
mov
push
cmp
pop
popa
in
pop
and
dec
mov
and
mov
cs
dec
dec
xchg
lahf
out
aaa
cmpl
push
bound
mov
add
mov
mov
imul
xor
mov
add
sub
mov
mov
notl
xchg
addl
jmp
iret
iret
xlat
xlat
iret
xlat
cmpsb
call
shlb
leave
jg
adc
js
aaa
inc
mov
subl
dec
fistpll
xorl
sbb
cmp
loop
jle
add
mov
push
and
mov
xchg
jle
xor
xchg
and
sahf
mov
mov
or
mov
pop
dec
int
test
ret
popf
xor
push
dec
lods
sbb
push
cmp
cmp
sbb
fnsave
repnz
scas
test
dec
cmc
mov
das
je
leave
add
rorb
ds
add
lea
adc
je
mov
lret
push
in
rorl
xor
cmp
dec
adc
mov
xor
cmc
or
inc
cmp
aad
jle
fistl
loopne
xor
push
cmpsb
or
subl
push
cmp
insb
adc
ja
shll
pop
ja
aaa
and
dec
in
mov
adcb
mov
mov
repnz
xorl
push
insb
repz
andb
jae
sub
jnp
imulb
loopne
and
push
mov
aaa
notl
push
in
mov
push
jno
or
loope
xor
fwait
lods
jnp
push
cmpsb
mov
imull
or
push
jno
cmpsb
xadd
adc
mov
sahf
out
ja
sbb
pop
lret
nop
ds
cltd
jp
cmp
inc
testl
mov
mov
fcoml
jae
and
sub
rorb
je
jl
add
aam
dec
addr16
int
sbb
sub
mov
and
stos
xchg
fnclex
mov
push
sbb
int
fstpl
push
xlat
sahf
rcrb
mov
movsb
aas
scas
inc
lret
repnz
mov
idiv
sbb
mov
aas
add
je
inc
pop
xchg
xchg
jmp
cmp
imul
pop
sar
cmp
mov
jnp
xlat
adc
xor
xorl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
adc
mov
and
mov
add
mov
mov
adcl
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
adc
add
mov
mov
jmp
cmp
fcmovbe
aad
xorl
adc
jg
adc
js
in
inc
inc
popa
pop
sbb
out
pop
mov
mov
sub
push
cmp
mov
adc
loope
mov
pop
jle
push
imul
xor
aam
test
dec
in
cmp
push
and
cmp
out
xchg
push
hlt
cmp
adc
adc
mov
in
add
hlt
cli
stc
cmp
icebp
cmpsl
imull
lahf
mov
or
push
hlt
cmc
insb
xchg
cmp
xor
inc
outsb
and
sub
add
or
push
mov
test
inc
aaa
dec
out
out
jno
mov
test
ret
pop
mov
cwtl
mov
int
adc
out
pushf
lds
iret
fwait
xchg
cltd
icebp
inc
test
ret
arpl
orb
imull
push
jo
mov
into
mov
pop
mov
cmp
lret
scas
inc
popa
mov
gs
pusha
and
mov
pop
mov
jns
or
hlt
daa
adc
je
push
in
lea
xor
inc
add
adc
clc
jne
jno
leave
and
in
popa
mov
mov
repnz
test
lret
mov
adc
lds
ds
test
xchg
ret
js
push
adc
es
das
cmp
loope
outsl
aas
test
cmp
pop
stc
scas
or
cmpl
lds
mov
push
jo
xchg
repnz
ss
in
inc
ror
fsubr
test
jns
outsb
cwtl
mov
add
xor
call
subb
mov
pop
test
lret
lret
mov
aas
loope
add
imul
flds
outsl
pop
mov
push
jecxz
imul
jo
pusha
cltd
push
out
mov
leave
add
dec
std
pop
fcoms
and
jne
cmp
fsub
lods
sbb
into
inc
xlat
aam
pusha
sbb
daa
in
mov
repnz
mov
add
inc
mov
xor
sbbl
add
movl
cmp
movl
jmp
into
ror
leave
push
or
mov
int3
xchg
call
jle
js
dec
jno
subl
sub
cld
insl
pop
insl
push
insl
nop
pop
sahf
push
jle
call
jno
xchg
call
hlt
ud2
leave
dec
add
loope
mov
outsb
inc
sbb
int
mov
push
xlat
mov
ret
in
int
and
loopne
cmpsb
test
out
and
dec
cmpsl
sbb
stos
inc
je
mov
lods
inc
movsl
xchg
dec
mov
mov
push
and
jb
dec
gs
sbb
dec
pop
daa
mov
lahf
and
fsubrl
daa
mov
dec
out
jl
jecxz
mov
adcb
sbb
jmp
test
and
pop
stos
dec
fwait
sbb
xchg
cli
cwtl
lds
push
xchg
add
imul
shll
hlt
mov
in
std
xchg
cmp
inc
pop
leave
lods
outsl
sbb
jecxz
outsb
sbb
mov
stc
push
outsb
mov
adc
test
vcomisd
fmul
cmp
or
adc
addr16
shl
inc
shrl
xchg
sbb
call
shll
jge
xlat
lcall
add
xchg
push
rep
shrb
jb
or
xchg
popl
push
sbb
mov
dec
add
scas
jb
fdiv
cwtl
mov
sub
stos
push
out
test
mov
pop
push
jmp
jmp
mov
jecxz
sbb
insb
hlt
mov
and
mov
xor
call
add
mov
loopne
jns
inc
mov
cmpsb
lds
push
mov
push
lds
out
pop
and
stos
subl
inc
dec
add
mov
sub
mov
mov
add
aaa
sbb
out
pop
loope
or
mov
insb
lcall
mov
repz
shll
int
inc
out
sbb
mov
jne
addl
pushl
orl
call
and
mov
jmp
aas
into
leave
int
into
fwait
orb
or
adc
js
jle
js
or
es
sbb
mov
arpl
push
inc
out
inc
in
cmp
dec
jno,pt
je
push
pop
cmp
lret
js
jmp
inc
jg
mov
adc
adc
cli
cltd
mov
mulb
push
clc
adc
fistps
mov
js
stos
mov
add
dec
cs
cmc
pop
cmpsb
sub
shll
mov
dec
cs
popa
push
pop
sahf
je
mov
adc
mov
test
lret
xchg
leave
adc
loop
xchg
pop
mov
mov
clc
inc
loop
insb
loope
cltd
and
das
cmc
imul
out
add
adc
sub
cli
stos
test
sub
pop
pop
mov
or
stos
push
inc
xchg
push
sub
pop
mov
mov
jne
cmc
aad
jno
icebp
sbb
xlat
inc
inc
sahf
ret
jne
mov
add
stos
adc
push
lods
pop
push
scas
or
pop
xchg
mov
xchg
pop
lock
rorl
inc
scas
adc
shl
cmc
jmp
cwtl
xchg
lods
les
ror
out
mov
imul
lcall
dec
xchg
into
cmp
mov
fdivrp
dec
in
mov
shrl
sub
push
shll
push
clc
xorb
adc
test
sub
sahf
mov
aaa
jecxz
pop
adc
sub
jmp
mov
test
mov
xor
int
mov
aaa
fstps
jmp
ljmp
ljmp
jno
cmpsl
push
xor
setp
in
arpl
mov
lcall
adc
fmuls
in
gs
mov
inc
xor
fs
cltd
js
std
xchg
adc
xorb
cmpsb
cmp
dec
sub
sbb
cmp
sahf
cmc
and
in
imul
dec
dec
or
iret
icebp
scas
leave
adc
push
cmp
mov
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
xor
xor
dec
mov
jmp
mov
movl
xor
add
cmp
movl
je
pushl
subl
pushl
call
jmp
les
iret
rcr
leave
push
push
in
je
push
push
jecxz
sarl
adc
js
adc
fwait
ret
dec
mov
sahf
ficoml
aas
inc
inc
in
jns
sbb
pop
cmpsl
inc
sub
popa
xchg
fisttps
pop
mov
pusha
loopne
jns
mov
pop
sahf
push
popf
subl
lods
inc
sub
sar
hlt
lret
inc
cld
es
in
lea
add
add
dec
mov
cmp
dec
notl
fmull
sub
mov
in
les
nop
ret
push
scas
les
xor
movsb
mov
es
cmp
jmp
frstor
jns
xchg
gs
icebp
add
push
loop
int3
adc
movsl
pop
popa
lea
pop
jo
in
xor
or
xchg
lea
sub
and
arpl
subl
mov
es
dec
scas
push
mov
in
sbb
mov
movsb
cmpsl
mov
push
lahf
sub
push
jp
inc
inc
or
notb
fcmovu
in
jmp
cld
jb
in
xchg
sbb
inc
mov
adcb
mov
std
enter
cmc
pop
or
mov
push
or
icebp
popf
mov
into
dec
or
lea
daa
sub
sub
jbe
pop
jp
insl
xchg
and
and
aaa
jne
data16
or
jecxz
data16
mov
mov
and
jge,pn
gs
in
je
fcompl
jnp
xor
jbe
sti
pop
lahf
shll
sub
add
xchg
dec
lahf
push
out
jae
lret
sub
jmp
in
push
push
sub
nop
inc
into
pushf
xor
or
aas
mov
lcall
je
test
mov
jns
das
sub
aas
xor
outsl
cwtl
movsl
rcr
dec
rorb
xor
out
in
les
mov
adc
out
insb
xor
out
ds
jno
mov
add
add
sbb
add
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
mov
add
lea
mov
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
jmp
lret
cmp
rcr
leave
mov
and
add
jg
adc
js
aam
aad
mov
xchg
lods
aad
mov
jp
or
cmpsb
pop
jns
mov
ss
sub
mov
and
xlat
xchg
imul
cmp
jae
lcall
mov
mov
pop
xchg
lea
mov
lret
das
dec
and
pop
loopne
ret
or
ret
test
std
add
arpl
jnp
sahf
pinsrw
cmpl
cwtl
ret
push
imul
jg
imul
or
xor
push
xor
xchg
push
push
dec
cwtl
jl
adc
push
and
mov
mov
push
ja
shrb
push
add
imul
pushl
inc
pusha
out
pop
jmp
push
rorl
movl
jge
jne
test
dec
xchg
push
movsb
dec
in
fisttpll
sahf
loop
pushf
cmc
mov
adc
test
mov
ret
stc
fs
stos
jge
push
and
movsl
and
push
add
cld
es
repz
jae
aaa
jae
dec
loop
stos
push
shrl
das
cli
std
dec
div
push
popf
jb
and
loope
loopne
inc
pop
inc
cmp
loopne
xchg
mov
fdivr
jbe
push
aas
std
mov
daa
cmp
push
sbb
xlat
sbb
das
loopne
std
arpl
pop
test
sti
jp
imul
or
adc
mov
adc
sub
xlat
xor
je
ret
pop
lods
inc
dec
outsb
adc
mov
icebp
aas
cmpsb
xchg
scas
add
xor
into
ds
and
scas
cltd
xor
push
and
imul
dec
mov
push
add
jae
fsts
sub
repnz
xchg
push
push
or
loopne
mov
pop
inc
clc
or
dec
mov
ja
insb
je
pop
and
adc
in
sub
jnp
loopne
lea
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
jmp
rcl
xlat
int3
aad
fcmovnu
ss
inc
add
rcrb
jle
js
push
pusha
pop
pop
dec
mov
test
fisubrl
pop
cmc
or
out
jns
outsl
sub
ret
int3
or
aad
xchg
jge
cmp
jp
add
pop
fsubrs
jno
rorl
clc
inc
or
push
imul
bound
mov
mov
dec
pop
and
pop
out
jg
scas
imul
clc
xchg
mov
push
jno
add
cmc
cld
in
pop
pushf
mov
icebp
pop
push
test
aam
out
sbb
jge
mov
push
stos
fsubs
rcr
out
jmp
movsb
sbb
mov
mov
pop
stc
lret
lods
aaa
mov
outsb
std
push
arpl
xchg
pop
or
mov
pop
idivl
adc
lcall
pop
mov
push
mov
std
jg
insl
insl
xchg
push
fisttpll
cmp
xor
xor
pop
fistpl
mov
dec
mov
ret
rcr
dec
test
push
fimuls
sahf
jb
lret
and
mov
lds
jle
out
pop
pop
loope
aas
dec
xchg
add
jge
dec
xlat
jmp
xchg
test
bound
xlat
mov
mov
test
sarb
lds
jbe
insl
jbe
push
pop
roll
mov
jae
pop
scas
addb
mov
int
mov
lds
mov
jae
jge
sub
adc
mov
jmp
pop
sub
aas
sbb
in
jecxz
pop
sbb
popa
outsl
mov
movsl
xor
sub
das
add
insl
jnp
lret
sub
add
hlt
cmpb
push
adc
mov
cli
jne
shll
jp
dec
mov
loopne
mov
pop
push
test
out
jo
sub
nop
pop
push
dec
daa
fcoms
push
jle
inc
popa
dec
movsl
test
dec
cmp
cmp
jle
push
add
add
add
add
sarl
leave
cmp
pushf
mov
dec
pusha
fstpt
adc
js
jne
sbb
stos
bnd
shrl
ljmp
lcall
cmc
mov
sti
out
out
cld
adc
xchg
ds
xor
mov
dec
sbb
pusha
adc
cld
xchg
add
daa
leave
adc
jae
xchg
sub
je
or
into
mov
clc
pop
adc
in
push
or
stos
fdivrs
and
call
pushf
pop
or
lret
in
inc
inc
cmp
and
or
psraw
loopne
xchg
cmp
cld
xor
adc
pop
pusha
shlb
adc
fwait
cmp
es
jl
sub
in
fmul
dec
shrb
push
mov
stc
mov
int3
pop
push
out
adc
fmuls
push
add
daa
stos
dec
loop
pop
fmuls
mov
mov
pop
fisubs
fildl
stc
roll
sbbl
hlt
jno
lock
pushl
sub
jns
loop
add
xor
aas
xor
cmpsb
and
mov
add
aam
fs
sbb
or
stc
jl
jne
lahf
inc
fcomps
sti
adc
lds
sbb
mov
mov
inc
mov
out
jns
pop
and
cmp
sti
mov
and
cltd
mov
loop
push
lret
ja
sti
repnz
insl
out
data16
cli
pop
mov
les
out
aad
xlat
jns
push
lret
push
test
and
testb
push
popf
xor
jg
and
in
pop
dec
dec
pop
add
mov
pop
sar
leave
cwtl
repz
jmp
dec
mov
rolb
xor
add
ret
aas
fxch
rcr
mov
shl
sbb
jg
adc
js
jl
sbb
and
cmp
mov
lret
ja
push
xchg
xchg
ficompl
cmp
inc
inc
rorl
inc
jnp
mov
sbb
sbb
xchg
pop
bnd
xchg
adc
xor
add
jge
lock
sub
in
leave
call
mov
lcall
or
cmp
jns
cmp
loop
jmp
pop
xor
cmpsl
pop
int3
mov
and
xor
inc
stos
scas
mov
xchg
lock
mov
or
inc
pop
out
mov
adc
or
xchg
inc
mov
jge
push
xchg
mov
ret
xor
jns
je
stos
lcall
jmp
ljmp
jp
sub
insb
sub
jp
lcall
mov
popf
int
je
lods
lret
jnp
or
dec
dec
lret
sbb
or
scas
les
popf
lods
and
mov
subl
ja
stc
add
test
mov
test
mov
movsl
xchg
or
or
push
lret
ss
imul
pop
sub
mov
adc
bound
dec
cmp
js
jbe
lea
lea
xor
out
pop
arpl
jmp
cmc
mov
xchg
sbb
gs
dec
das
add
int
mov
adc
mov
pop
movsl
pop
into
jmp
xor
stc
inc
mov
lock
sbb
icebp
xchg
xchg
inc
gs
popa
fsub
js
jbe
jb
jae
aad
in
negb
cmp
cmp
dec
adc
sbb
rcr
and
xchg
inc
std
dec
sub
fidivrl
mov
xrelease
mov
and
adc
out
jo
imul
lods
and
mov
mov
lret
jmp
int
int
fnstcw
cmp
adc
jg
adc
js
stc
pusha
loopne
es
mov
insb
mov
add
xor
xchg
aas
ljmp
sti
lahf
sub
mov
mov
xor
inc
repnz
push
hlt
dec
xor
test
sub
leave
and
es
in
loop
pop
xor
push
push
fwait
out
sub
jnp
rcr
xchg
sub
mov
jmp
dec
mov
dec
fdivrs
lods
imul
call
addr16
jp
xchg
mov
mov
sbb
xchg
std
dec
stos
pop
jb
or
dec
enter
outsl
inc
and
loope
push
and
out
jge
aad
add
sub
fnstcw
push
jbe
pop
or
pop
pushf
imul
xchg
nop
addr16
mov
xor
cmp
pop
mov
movsb
jge
int
repz
xchg
inc
mov
and
push
cld
adc
ja
ds
cli
movups
inc
cmp
adc
js
nop
mov
inc
dec
in
outsl
mov
xchg
xor
or
cltd
leave
fwait
lods
xchg
cmp
add
pop
jbe
pop
out
pop
movsb
inc
adc
and
call
sbb
mov
push
xchg
xchg
cmc
movsb
pop
or
mov
jbe
aad
sbb
arpl
jnp
movsl
icebp
mov
stos
or
mov
push
dec
jns
dec
stos
mov
pop
fisttpll
mov
sub
iret
and
push
cmp
stc
and
cld
add
clc
out
push
sti
push
loope
ffree
push
xchg
cli
inc
lret
xchg
ret
xchg
ret
dec
xchg
lock
andl
mov
mov
imul
inc
push
mov
dec
imul
mov
outsl
ja
mov
dec
cmp
outsb
adc
inc
outsb
pushf
xlat
push
mov
je
arpl
ja
sti
mov
jp
or
mov
inc
in
xor
add
iret
enter
fcmovnu
xlat
push
rclb
sub
jg
adc
js
jg
jbe
rclb
nopl
rolb
sbb
xchg
addr16
pop
stos
sub
jecxz
imul
bound
out
or
pop
les
and
xor
lods
into
xchg
jle
loop
call
xchg
inc
and
mov
or
and
fs
or
mov
xchg
and
dec
cmp
sbb
sub
adc
add
push
push
and
lcall
leave
ja
out
sub
jns
xor
sub
andl
xor
cmpsl
or
push
fwait
pop
cmpsb
cwtl
inc
pop
mov
mov
cmp
cmpsl
unpckhps
cmpsb
sahf
in
and
pop
and
sbb
push
sbb
jp
cmpsb
test
pop
cs
inc
pushf
sarb
or
mov
and
inc
ss
mov
arpl
jmp
jecxz
mov
and
repz
in
push
sbb
sbb
enter
cmp
sahf
adc
sub
rclb
inc
cltd
test
test
fcomp
xchg
ljmp
mov
je
je
cmp
arpl
neg
movsl
jns
inc
push
addr16
loope
popa
jns
sub
lds
sub
push
repz
dec
test
dec
loope
dec
pop
lahf
pop
inc
adc
mov
data16
sti
nop
inc
aas
je
test
sub
int3
daa
fadds
or
sahf
cltd
inc
fwait
cmp
mov
in
nop
pop
cmp
xlat
cmp
xchg
stos
pusha
mov
sub
aam
cmp
xchg
ds
outsb
cmpsl
xlat
aad
and
filds
sar
push
add
mov
insb
cmc
arpl
jo
ret
inc
jae
sbb
insl
test
testb
sahf
sbb
cltd
inc
dec
push
hlt
outsl
inc
push
pop
out
cmp
xor
scas
shrl
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
jmp
int3
lret
fxch
leave
mov
push
hlt
ss
mov
shl
js
jle
js
lods
mov
and
adc
negb
adc
stc
sbb
pop
jle
test
and
adc
cmp
push
call
pop
pop
push
dec
cmpb
out
mov
pop
jl
pusha
mov
lret
and
push
xchg
je
movsb
push
inc
mov
pop
adc
pop
shlb
xchg
or
sbbl
xchg
and
std
popf
push
xchg
inc
adc
push
or
loop
clc
pop
inc
jb
cld
ljmp
aad
mov
xor
mov
add
daa
and
int
adc
mov
push
clc
xchg
inc
mov
clc
divl
jle
jmp
jae
add
push
mov
xchg
xor
jle
pop
ljmp
in
jo
je
ret
test
icebp
add
cli
or
adc
xchg
xchg
cmp
mov
fcmovne
push
inc
cmpsb
cli
das
in
outsb
sbb
test
inc
jbe
lret
inc
mov
scas
cltd
push
mov
xor
leave
sbb
dec
inc
stc
inc
addr16
repnz
cmp
fs
gs
mov
mov
push
mov
cs
pushf
lcall
cwtl
or
jl
cmpsl
movl
and
sbb
insl
mov
popf
popf
arpl
outsl
in
mov
or
xor
mov
cmp
dec
in
addr16
add
cmp
dec
mov
xor
xlat
idivl
adc
mov
jg,pn
rcrl
mov
inc
inc
inc
movsb
sub
dec
lock
idiv
ret
inc
or
pop
idivl
fldcw
xor
push
xor
xor
pop
test
dec
sub
xchg
cs
jge
fldcw
jle
fmuls
push
out
dec
push
jl
xor
add
jmp
int
int
rcl
int
cmp
and
fsub
jg
adc
js
push
test
inc
std
xchg
jb
and
out
enter
daa
sbb
or
es
enter
dec
jle
xorl
cmp
sti
adc
and
add
fisubrs
nop
lods
mov
pusha
fadds
add
push
sbb
jle
push
xor
in
dec
jns
sarl
sbb
xchg
cmp
lea
sub
sarl
inc
js
fcomps
jns
jp
or
add
and
push
ds
repz
xor
mov
sbb
subb
je
mov
mov
cwtl
or
lods
pop
mov
dec
jmp
add
call
jno
out
pushf
aam
push
mov
pop
fsubrl
scas
test
cmp
mov
push
inc
fistpll
sub
mov
dec
mov
es
fs
add
dec
dec
dec
cmpb
push
mov
fcmove
lahf
roll
hlt
ljmp
pusha
clc
sbb
xlat
ret
xchg
mov
sahf
cwtl
pop
aas
dec
lahf
inc
mov
mov
jb
mov
cmpb
nop
or
xchg
iret
lds
hlt
add
shrl
shlb
cmp
aam
negb
jbe
cmc
add
inc
push
push
push
mov
imul
jbe
testl
movsb
test
hlt
mov
inc
sarb
into
jbe
pop
push
xchg
and
ds
mov
push
pop
inc
leave
cltd
xchg
or
push
rcrb
jno
das
add
cs
sub
adc
jp
mov
frstor
cli
lret
int
add
and
xchg
dec
insb
dec
jecxz
dec
adc
dec
test
and
pop
insb
pop
jg
xchg
daa
xlat
sub
and
outsl
pop
repnz
cmc
mov
push
mov
or
imul
mov
jmp
lret
xlat
vpsubusw
lret
xor
pop
mov
out
js
jle
js
scas
mov
int3
inc
loopne
test
popf
push
xor
sub
xor
fcomip
cmpsl
dec
cmc
inc
mov
scas
out
cs
xchg
dec
mov
or
ja
repz
into
xchg
adc
push
mov
mov
int
sbb
lods
pop
jbe
sbb
add
daa
dec
ds
sub
arpl
xor
pop
push
mov
and
cmp
lret
test
mov
add
imul
lods
mov
test
mov
daa
and
test
sbb
xor
xchg
rorl
popa
push
das
dec
mov
mov
jl
out
lret
jbe
dec
test
push
fsubrl
xor
push
or
lds
outsb
mov
or
sub
jno
insb
and
push
fcomp
das
push
int3
jle
push
adc
pop
in
daa
ljmp
inc
fs
loop
mov
imul
add
rorb
jge
loope
push
sbb
andb
fsub
inc
xchg
fwait
mov
push
push
fcmovnu
or
orb
or
or
pop
aas
repnz
lcall
pop
je
rorl
test
in
mov
int
pop
shrl
jmp
or
cmc
frstor
mov
lods
rolb
movsb
out
inc
mov
sti
inc
mov
lds
mov
fsqrt
jle
inc
lahf
stc
and
push
dec
mov
push
cs
jb
push
xor
test
fildl
es
je
cmp
jne
mov
sub
std
aas
out
jae
shl
mov
stos
dec
std
test
cmpsl
xlat
ljmp
jge
lock
push
inc
cwtl
or
sbb
and
pop
repz
xchg
jne
push
scas
pshufw
dec
rcr
and
ja
sub
and
lea
rorb
mov
test
push
or
mov
xor
add
enter
iret
rcl
mov
nop
sahf
scas
mov
jg
adc
js
inc
in
mov
pop
pandn
pop
jae
sbb
lock
fisttps
int3
out
das
fists
ret
in
add
add
lds
jle
cli
jl
aaa
mov
inc
mov
adc
xlat
or
pop
out
pushf
pushf
loope
je
std
sbb
mov
dec
movsl
mov
addr16
xchg
in
insl
mov
add
mov
lcall
int3
or
xor
scas
jl
inc
imulb
adc
cmc
out
arpl
rcll
and
pop
xor
ret
lret
pop
rcrb
adc
ret
and
insl
insb
or
ret
ret
sub
mov
dec
xor
jb
xchg
adc
lods
xor
lret
sbb
and
push
stos
lahf
sti
pop
aas
jge
push
gs
and
adc
lea
and
jle
stos
aaa
ret
fimuls
push
addr16
lret
jb
ret
inc
cmpsl
nop
mov
fdiv
jb
xor
jb
repz
roll
xchg
xlat
push
pop
jno
movsl
mov
or
sub
push
lahf
pop
inc
faddp
test
ret
lods
roll
daa
jb
fwait
fwait
jle
fimull
cmp
mov
leave
jb
cwtl
stc
dec
xor
rcrb
cmc
ds
mov
push
and
data16
gs
popf
mov
mov
add
gs
jmp
mov
pop
call
sahf
inc
test
jmp
and
fisubs
sbb
mov
sti
dec
pop
pop
xor
nop
push
xor
mov
stos
repnz
fstps
adc
jecxz
inc
jb
add
sub
mov
mov
cld
negb
sub
pop
je
adc
mov
or
hlt
push
mov
jle
rol
mov
xor
add
into
leave
leave
rcr
fldcw
stc
push
mov
jg
adc
js
pop
sub
loopne
nop
jecxz
xor
enter
sub
bound
fmul
jg
xchg
lahf
cmp
jb
dec
or
jmp
pop
or
sbb
divl
fwait
lahf
xchg
mov
add
pop
add
fcmovnbe
fs
mov
mov
lldt
out
call
pop
ds
inc
mov
pop
mov
cmp
jbe
in
push
repnz
lods
aad
jge
enter
sub
xchg
lret
inc
cmp
dec
repz
sub
and
jbe
cwtl
or
and
mov
and
add
fstps
stos
jp
add
fcoms
inc
cmp
adc
lret
inc
cld
movsl
mov
lret
jp
mov
sub
mov
cld
outsb
mov
jp
mov
jp
outsb
nop
call
repnz
aaa
cmp
imul
inc
sub
adc
mov
les
xor
dec
ret
cmp
aad
mov
popf
pop
jno
leave
int3
test
sbb
or
sbb
mov
pop
jnp
mov
fdivrs
add
jl
in
aad
aaa
pop
sbb
cmp
out
push
add
jecxz
lret
scas
add
hlt
cld
data16
aad
push
iret
sti
push
aam
aad
pop
xor
loop
sar
in
push
gs
xchg
adc
sahf
inc
mov
mov
mov
shrb
lret
call
pushf
and
shrb
xchg
in
subl
mov
mov
adc
ror
push
sub
call
sub
stos
test
mov
inc
xor
inc
add
sub
push
jecxz
add
je
lahf
sub
jnp
ds
and
dec
push
js
or
aas
sub
xlat
pusha
aam
addl
iret
mov
bound
xor
cmp
jne
mov
jmp
mov
mov
jmp
mov
xlat
movsb
inc
and
call
js
rorl
insb
fildll
and
cld
cli
arpl
ficoms
leave
loopne
std
je
or
mov
or
pop
push
xor
add
iret
push
enter
jns
mov
mov
mov
cmpsb
out
mov
mov
jno
adc
push
testl
dec
repz
and
mov
push
test
mov
les
mov
xor
mov
stc
cmc
rol
push
add
aam
pop
sub
mov
das
xor
mov
fsub
inc
xchg
outsb
xchg
fwait
push
xor
push
sbb
dec
addr16
jbe
cltd
inc
lods
aad
scas
cmp
push
jns
imul
aam
mov
ja
andl
inc
jns
or
lods
test
fldl
addr16
sub
in
mov
rcrb
test
sbb
nop
or
aam
aad
jnp
sbb
sti
int
call
movsb
stc
inc
mov
int3
jle
xchg
lcall
addl
pop
xchg
das
mov
jb
xlat
js
ljmp
sub
pop
xor
ror
mov
ja
mov
push
dec
sub
popf
in
xchg
in
lret
sub
add
mov
ds
xchg
sbb
xchg
mov
popf
sbb
fcoml
hlt
jg
mov
xor
jo
mov
xor
bound
roll
pusha
cmp
cmp
jo
or
dec
mov
dec
or
or
pushf
lret
cli
jae
js
in
jmp
mov
lds
out
jns
cmp
f2xm1
jg
jg
fbstp
mov
in
divl
or
push
sbb
or
adc
repz
jno
cmp
dec
jne
jnp
and
mov
sbb
xor
adc
fildll
lods
inc
xor
add
jmp
cmp
rol
jb
dec
pop
xlat
sub
cmc
push
out
jg
adc
js
xchg
shlb
cmpsl
movsl
into
gs
repz
cmpsb
adc
pop
loopne
xor
scas
pop
and
pop
insb
nop
mov
push
aaa
inc
popf
aaa
mov
adc
repnz
mov
or
sarb
xchg
shr
sarb
xor
sub
mov
subb
and
sub
push
or
loope
enter
out
sub
mov
jp
out
xchg
jg
pusha
loope
adc
in
lret
mov
mov
cli
ror
xor
sti
in
jae
or
test
mov
je
std
pop
into
fdivrp
outsb
popf
mov
aam
add
std
sub
scas
cmp
pop
jo
adc
fnstenv
cmc
push
add
scas
inc
or
sbb
psadbw
test
push
dec
sub
mov
rep
and
inc
cmpl
add
or
iret
sarb
aaa
lea
sub
fsubp
sub
mov
dec
dec
repz
adc
stos
stos
movsb
call
dec
and
aam
inc
ret
jne
mov
sahf
dec
and
ret
jno
cld
cwtl
jecxz
lods
test
jg
add
xchg
sub
imul
fwait
jb
jmp
fnsave
in
and
ss
sbb
xchg
subb
addr16
outsl
sbb
and
enter
cmp
mov
hlt
cmpsl
cmp
shr
mov
and
jle
inc
inc
mov
rorl
out
stc
or
sbb
mov
outsl
or
add
or
push
test
mov
jne
push
dec
pop
xor
sbb
fiaddl
sbb
in
or
cs
fwait
movsb
pop
loope
mov
jmp
rol
enter
lret
pop
jp
sarb
push
jle
js
lcall
mov
add
inc
testb
int3
sub
and
push
dec
sbb
int
iret
ja
mov
sub
outsb
inc
push
jb
and
adc
push
xchg
cltd
jno
pop
adc
sahf
and
cltd
adc
or
into
ss
mov
xchg
daa
scas
jge
push
in
push
add
lahf
xchg
cwtl
sub
ljmp
inc
enter
out
mov
aas
jle
dec
mov
jg
repnz
lea
mov
mov
xor
popf
dec
xchg
leave
cld
jnp
xor
cld
enter
pop
inc
xchg
mov
fsubrs
movsb
lock
lds
fdivrp
mov
pop
iret
cmp
cltd
fnstsw
movsb
xchg
xchg
loope
push
inc
mov
cmp
mov
jmp
dec
mov
jbe
pop
xchg
stos
inc
sbb
xchg
fidivs
loope
xchg
cmp
cmpsl
gs
adc
fimuls
imul
scas
cmp
xor
push
cmp
hlt
int
ss
jb
mov
pop
int
cmp
dec
sahf
mov
int3
pop
cmp
and
ja
sbb
leave
or
xchg
adc
add
js
int3
gs
inc
pushf
sbb
push
lcall
xor
pusha
push
aas
jb
jae
adc
inc
push
js
dec
arpl
les
in
pop
loope
mov
stos
xchg
xor
fnstsw
std
stos
jmp
data16
lahf
dec
lret
test
or
sbb
lods
mov
adc
fidivs
rorb
sub
movsb
pop
popa
dec
ss
xchg
push
enter
ss
lods
and
pop
scas
inc
jge
or
and
add
push
gs
daa
sbb
add
push
sbb
sbb
rcr
fisttpl
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
jmp
mov
iret
leave
rcr
aad
mov
stc
std
add
jg
adc
js
mov
and
cmpl
leave
and
cmpsb
xorb
call
jo
ret
ret
jo
sti
push
push
xchg
xchg
out
sbbl
adc
adc
adc
roll
mov
mov
sarl
mov
out
idiv
dec
or
stc
mov
sarb
popa
test
cmp
into
outsl
xchg
and
mov
xor
jge
sub
mov
push
addr16
push
xchg
mov
mov
jecxz
loope
js
fdivrl
xchg
sub
cmp
lods
test
and
getsec
pushf
adc
pushw
fmull
jp
subb
jno
mov
mov
lcall
test
aaa
sub
inc
xchg
ds
mov
sti
sub
push
mov
jl
mov
pop
paddsw
bound
fistpll
push
int
xlat
rcl
out
dec
jp
mov
xor
sbb
xchg
aaa
inc
jle
xchg
dec
lods
movsl
sub
aam
sbb
dec
test
mov
rcrb
fs
cmpb
sbb
lock
push
xor
arpl
pop
dec
es
push
jle
mov
jge
je
test
inc
test
popf
ret
and
cmp
jnp
enter
mov
mov
sbb
das
xchg
movsb
fwait
addr16
das
int
mov
popf
shll
pop
inc
dec
pushf
dec
aam
lcall
icebp
mov
push
jmp
push
or
xchg
inc
inc
cmpl
repnz
push
sbb
cmp
jge
adc
inc
cmp
clc
and
and
cmp
inc
lods
ror
mov
inc
xor
or
pushf
decb
xor
insl
inc
adc
add
dec
inc
add
dec
xor
add
pop
mov
pop
jmp
rcl
ret
ror
aad
andb
jmp
sti
sahf
sbb
jg
adc
js
aas
stos
and
out
fdivrs
jo
das
and
sbb
outsl
add
fcoms
adc
iret
xor
cli
int
pop
mov
mov
cmp
incb
ret
mov
cmp
sub
or
loope
bound
stos
test
scas
decl
out
mov
cmp
loop
and
loop
adcl
dec
mov
data16
xor
bound
loopne
movsl
mov
or
lds
xchg
rcrb
test
mov
ror
pop
fcmovne
call
leave
adc
cmp
test
xor
mov
dec
fdivr
imul
mov
mov
aaa
adc
jo
popa
xor
decb
pop
or
inc
ds
leave
iret
hlt
xchg
out
pop
jmp
cmpb
data16
xor
adc
les
mov
in
pop
test
push
cmp
xor
out
lret
mov
sbb
lcall
xor
cmpsb
dec
ficomps
sbb
mov
gs
mov
insb
sub
add
insl
pusha
faddl
add
in
inc
testl
stc
andl
fcom
fwait
mov
jnp
add
fstpl
cmpsb
and
dec
fwait
adc
mov
sbb
sub
jnp
loope
das
dec
and
and
icebp
shl
movsl
adc
test
and
repnz
jbe
mov
testb
cwtl
loopne
xchg
xor
pop
xor
push
stc
pop
mov
insb
cltd
add
arpl
mov
mov
das
cmp
iret
stc
xchg
dec
das
lock
mov
jb
pop
cmpsl
kmovw
sub
icebp
scas
ret
ja
sub
dec
les
rcrl
pop
fldenv
fbstp
js
xor
decl
sti
or
adc
cmc
cmp
fists
xchg
std
push
pop
jmp
into
iret
into
ror
aad
aad
mov
push
and
cmc
jg
adc
js
and
dec
xchg
sub
out
je
lret
xchg
pop
mov
push
xor
push
sbb
jbe
hlt
sti
xor
into
jecxz
loop
jbe
jno
sub
sub
adcl
aas
and
lahf
xor
sub
jns
jecxz
lock
sub
enter
xchg
push
sub
cmp
xor
popa
inc
cmp
add
jge
add
xorb
xlat
fimull
rcr
mov
or
and
sub
jg
out
in
jne
repnz
das
pop
cmp
dec
das
out
cmpsb
mov
idivb
xlat
cmpsb
shl
ror
mov
jnp
xchg
mov
cmpsl
scas
addl
cs
dec
cli
fcom
mov
mov
mov
xchg
jecxz
and
push
das
xchg
xor
adc
pop
jae
push
xor
stc
push
push
add
xor
push
popa
add
sahf
enter
fs
popf
pop
cmp
std
lcall
fprem
mov
push
add
and
sbb
bnd
cwtl
cli
cwtl
hlt
test
mov
sub
cmpsb
ss
sub
les
les
push
fisttps
out
adc
test
and
movsb
std
xchg
lods
ljmp
xor
push
popf
xchg
cwtl
add
and
loopew
pop
lcall
push
cmp
cli
xlat
int
cli
aaa
dec
jecxz
or
push
mov
cwtl
and
push
add
adc
jp
adc
mov
or
jno
pop
and
mov
jmp
ds
sbb
stos
push
in
mov
dec
pusha
or
mov
les
adc
fmuls
popa
pop
pop
shlb
movsl
sarl
data16
rclb
pushf
add
sbb
pop
mov
ss
aas
mov
dec
inc
adc
jne
out
and
lret
fnstenv
mov
jle
leave
ret
sbb
add
flds
add
flds
add
flds
add
add
dec
flds
add
add
flds
add
add
add
sbb
add
flds
add
flds
add
add
rcr
add
loopne
add
ljmp
add
add
push
fiaddl
add
fiaddl
add
add
fiaddl
add
fiaddl
add
add
dec
fiaddl
add
add
fiaddl
add
add
js
add
xchg
add
mov
add
lcall
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
add
add
fildl
add
fildl
add
add
push
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
faddl
add
add
sub
add
cmp
add
dec
faddl
add
add
data16
add
add
mov
add
pushf
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
fldl
add
fldl
add
add
dec
fldl
add
add
pusha
fldl
add
add
test
add
mov
add
sahf
fldl
add
add
fcmovu
add
out
fldl
add
fldl
add
fiadds
add
fiadds
add
fiadds
add
add
pop
fiadds
add
add
fiadds
add
add
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
filds
add
filds
add
filds
add
filds
add
add
filds
add
add
mov
add
cwtl
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
loopne
add
add
sub
add
loopne,pt
add
add
data16
add
add
xchg
add
xchg
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loope
add
loope
add
loope
add
add
push
loope
add
add
jb
add
test
add
mov
loope
add
loope
add
loope
add
add
add
loope
add
add
adc
add
and
add
xor
add
loop,pt
add
add
pusha
loop
add
add
xchg
add
cwtl
loop
add
add
int3
loop
add
loop
add
loop
add
loop
add
jecxz
add
jecxz
add
add
xor
add
inc
jecxz
add
add
fs
add
add
mov
add
mov
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
in
add
in
add
in
add
add
dec
in
add
add
push
add
jl
add
mov
add
cwtl
in
add
in
add
in
add
in
add
in
add
in
add
add
ds
add
add
pop
in
add
add
jle
add
nop
in
add
add
mov
in
add
in
add
in
add
in
add
out
add
out
add
out
add
add
add
push
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
pop
out
add
add
jbe
add
xchg
add
cwtl
out
add
out
add
out
add
out
add
out
add
call
add
and
add
xor
add
dec
call
add
callw
jp
add
xchg
add
xchg
call
add
mov
add
call
add
in
add
lock
add
or
add
sbb
add
add
add
or
add
add
add
das
and
add
add
pop
add
add
add
add
and
pop
aam
add
add
add
add
add
add
add
add
push
aam
add
add
xchg
inc
add
imul
add
add
xor
jp
jp
outsb
je
je
jo
aas
dec
imul
gs
jb
imul
inc
inc
dec
push
inc
dec
push
inc
inc
cmp
add
add
aad
add
fildl
add
rolb
add
aad
add
rolb
add
add
add
add
add
loope
add
xlat
add
ss
add
adc
add
inc
jmp
add
sbb
add
flds
add
flds
add
flds
add
add
dec
flds
add
add
flds
add
add
add
sbb
add
flds
add
flds
add
add
rcr
add
loopne
add
ljmp
add
add
push
fiaddl
add
fiaddl
add
add
fiaddl
add
fiaddl
add
add
dec
fiaddl
add
add
fiaddl
add
add
js
add
xchg
add
mov
add
lcall
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
add
add
fildl
add
fildl
add
add
push
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
faddl
add
add
sub
add
cmp
add
dec
faddl
add
add
data16
add
add
mov
add
pushf
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
fldl
add
fldl
add
add
dec
fldl
add
add
pusha
fldl
add
add
test
add
mov
add
sahf
fldl
add
add
fcmovu
add
out
fldl
add
fldl
add
fiadds
add
fiadds
add
fiadds
add
add
pop
fiadds
add
add
fiadds
add
add
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
filds
add
filds
add
filds
add
filds
add
add
filds
add
add
mov
add
cwtl
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
loopne
add
add
sub
add
loopne,pt
add
add
data16
add
add
xchg
add
xchg
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loope
add
loope
add
loope
add
add
push
loope
add
add
jb
add
test
add
mov
loope
add
loope
add
loope
add
add
add
loope
add
add
adc
add
and
add
xor
add
loop,pt
add
add
pusha
loop
add
add
xchg
add
cwtl
loop
add
add
int3
loop
add
loop
add
loop
add
loop
add
jecxz
add
jecxz
add
add
xor
add
inc
jecxz
add
add
fs
add
add
mov
add
mov
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
in
add
in
add
in
add
add
dec
in
add
add
push
add
jl
add
mov
add
cwtl
in
add
in
add
in
add
in
add
in
add
in
add
add
ds
add
add
pop
in
add
add
jle
add
nop
in
add
add
mov
in
add
in
add
in
add
in
add
out
add
out
add
out
add
add
add
push
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
pop
out
add
add
jbe
add
xchg
add
cwtl
out
add
out
add
out
add
out
add
out
add
call
add
and
add
xor
add
dec
call
add
callw
jp
add
xchg
add
xchg
call
add
mov
add
call
add
in
add
lock
add
or
add
sbb
add
add
add
or
add
cmc
add
outsl
outsb
je
outsl
insb
data16
add
add
jns
je
insl
add
fwait
add
jo
imul
je
insb
add
ljmp
jo
add
je
ja
jae
add
add
jb
outsl
insb
insb
add
add
imul
add
outsl
ja
outsl
ja
jb
add
add
imul
data16
add
gs
popa
jo
pop
je
jo
add
mov
pop
pop
insw
outsl
fs
xchg
add
popa
insb
outsb
jne
add
add
jb
outsl
imul
sbb
ja
jae
popa
je
add
outsl
ja
add
fwait
add
jo
pop
arpl
insl
outsl
fs
loope
jae
arpl
data16
fildl
pop
popa
insl
jae
pop
gs
je
add
imul
add
je
push
add
popa
insb
je
insl
add
data16
add
or
gs
add
sub
arpl
arpl
add
add
outsb
add
sahf
add
jae
bound
gs
add
add
ja
arpl
data16
js
imul
ja
jae
arpl
add
jo
gs
push
add
arpl
inc
imul
pop
gs
je
sbb
jae
jo
imul
pop
arpl
imul
gs
jb
push
je
arpl
add
mov
pop
pop
jae
je
jae
jb
popa
je
gs
add
jb
pop
pop
addr16
popa
imul
pop
add
gs
jb
jb
add
and
arpl
jo
add
std
add
jb
outsl
jne
add
add
jb
outsl
jb
add
push
inc
push
push
cs
insb
add
inc
add
gs
outsb
push
gs
js
gs
imul
gs
ljmp
insb
gs
je
jb
bound
gs
js
add
pop
add
outsb
fs
imul
outsb
addr16
outsl
je
imul
outsl
outsb
push
add
mov
insb
dec
popa
insl
gs
imul
add
push
popa
insb
imul
add
inc
imul
inc
push
dec
outsl
je
imul
outsl
outsb
add
cmp
gs
push
inc
js
arpl
imul
add
add
je
jb
outsl
jb
je
inc
insb
popa
jae
add
add
outsb
fs
gs
inc
imul
popa
imul
je
jo
gs
bound
arpl
js
add
add
gs
popa
insl
gs
imul
insb
gs
je
je
add
add
je
popa
jae
inc
jb
outsl
jb
add
bound
inc
jb
add
or
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
js
push
gs
fs
imul
gs
push
dec
outsb
outsw
add
dec
popa
imul
outsw
add
add
je
outsl
arpl
gs
outsb
outsw
inc
add
push
add
fs
imul
js
add
outsl
add
je
imul
popa
je
add
incl
inc
gs
outsl
arpl
gs
outsb
outsw
push
add
rolb
je
arpl
push
add
repnz
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
cmp
dec
jo
outsb
inc
imul
outsb
addr16
add
stc
add
inc
popa
fs
je
imul
add
add
gs
je
inc
jbe
outsb
je
add
insl
add
outsb
insb
outsl
arpl
imul
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
pop
add
insb
jae
gs
popa
insb
jne
add
jo
jb
popa
je
add
dec
add
insb
gs
jnp
inc
outsl
insb
fs
je
imul
push
gs
gs
outsl
outsb
imul
imul
add
imul
in
add
gs
je
push
push
add
rolb
inc
jb
popa
je
inc
imul
outsb
addr16
add
mov
inc
outsl
insl
jo
jb
push
je
imul
add
imul
gs
arpl
add
out
inc
jb
popa
je
push
gs
popa
jo
outsl
jb
inc
add
faddl
push
gs
jb
push
push
add
gs
dec
outsl
add
add
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
inc
add
je
je
jb
jne
dec
outsb
outsw
push
add
add
push
popa
insb
imul
addr16
jb
jne
add
in
push
gs
outsl
insl
insl
push
imul
add
push
jns
je
insl
push
imul
insb
gs
imul
dec
outsl
jbe
inc
imul
add
jae
jb
insl
jo
inc
add
inc
gs
je
imul
inc
js
add
fldl
inc
jb
popa
je
dec
jne
gs
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
jno
inc
gs
dec
push
xor
mov
inc
push
je
dec
push
add
fldl
push
gs
dec
inc
imul
jne
inc
outsl
outsb
je
popa
insl
imul
add
gs
je
dec
inc
push
add
inc
gs
jns
je
insl
push
popa
insb
gs
gs
outsb
je
imul
jb
popa
je
push
arpl
outsb
add
inc
gs
popa
jo
outsl
fs
lahf
add
gs
je
dec
popa
insb
data16
outsb
gs
popa
insb
gs
gs
add
je
popa
insb
gs
gs
outsb
je
imul
jb
popa
je
inc
imul
bound
imul
inc
js
push
gs
dec
jne
push
add
push
gs
dec
jne
push
add
dec
add
je
outsl
outsb
je
popa
je
add
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
insb
imul
inc
gs
gs
inc
popa
arpl
add
jnp
inc
gs
gs
inc
insb
imul
inc
jb
popa
je
inc
jb
jae
dec
outsb
imul
add
je
imul
add
gs
popa
jns
jne
add
popa
je
push
outsl
insb
imul
add
add
jne
inc
outsl
outsb
je
popa
insl
imul
add
popa
je
inc
imul
imul
xchg
inc
jb
popa
je
inc
imul
add
gs
je
push
outsb
add
popa
je
inc
dec
inc
push
arpl
outsb
add
addl
imul
add
inc
gs
gs
jb
jae
push
popa
insb
gs
gs
outsb
fs
add
jo
add
push
gs
dec
gs
imul
push
gs
insb
imul
je
add
lar
jb
popa
insb
imul
arpl
add
je
gs
inc
outsl
insb
outsl
jb
add
inc
outsl
arpl
add
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
add
je
dec
inc
imul
imul
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
je
bound
je
jb
arpl
add
add
jae
jp
push
popa
insb
gs
add
push
imul
add
add
arpl
gs
insb
imul
xchg
add
gs
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
insl
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
popa
je
inc
inc
push
add
popa
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
mov
inc
gs
imul
dec
jb
inc
js
add
dec
xor
cs
insb
add
jb
jns
popa
jb
je
add
ja
outsl
arpl
push
arpl
add
fs
insl
popa
addr16
add
mov
je
gs
popa
add
gs
jb
jns
outsb
jne
stos
add
ja
outsb
imul
arpl
mov
inc
gs
insb
addr16
jb
arpl
add
inc
arpl
popa
je
dec
gs
outsl
popa
jb
dec
popa
jns
jne
add
data16
je
imul
add
je
imul
js
inc
add
and
fs
outsb
jo
je
mov
imul
outsl
ja
jo
popa
je
add
mov
push
popa
imul
jne
dec
fs
add
dec
add
je
outsb
jne
sub
inc
gs
outsb
jne
adc
push
imul
outsb
outsl
ja
gs
popa
addr16
add
push
add
je
arpl
insb
insb
push
outsl
jae
add
add
jae
popa
addr16
outsl
js
js
add
imul
je
jo
popa
je
push
outsb
add
mov
dec
outsl
popa
fs
outsb
jne
add
add
jo
outsb
fs
outsb
jne
add
inc
jb
popa
je
dec
arpl
dec
outsb
imul
insb
add
je
imul
outsb
addr16
add
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
cmp
arpl
popa
imul
outsb
add
addb
outsb
data16
popa
je
push
arpl
add
arpl
outsl
jo
jo
outsb
jne
add
gs
jae
inc
inc
add
add
outsb
fs
gs
popa
addr16
add
fildl
dec
outsl
jbe
push
imul
mov
inc
jb
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
stos
add
fs
jne
jae
jb
add
push
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
xor
push
gs
insb
popa
jae
dec
outsl
outsb
addr16
add
inc
jb
popa
je
push
imul
push
add
outsl
outsb
imul
outsb
jae
jb
dec
outsb
jne
je
insl
push
add
add
data16
je
arpl
scas
add
fs
jne
jae
jb
add
add
push
jae
push
imul
arpl
add
js
inc
gs
imul
js
push
add
push
add
je
insb
addr16
je
insb
dec
inc
add
mov
outsl
ja
jb
insl
push
outsl
imul
outsb
jae
jb
dec
outsb
jne
add
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
push
add
add
je
outsb
jne
je
insl
inc
outsl
jne
je
add
gs
arpl
push
add
add
push
imul
popa
jae
inc
js
add
ret
add
fs
imul
add
outsl
jae
inc
gs
je
jo
add
imul
jae
popa
addr16
add
out
dec
jo
outsb
inc
gs
je
jo
add
and
push
arpl
insb
insb
push
imul
add
mov
imul
xor
jb
outsl
dec
gs
push
add
xor
push
gs
popa
jb
je
outsl
jae
daa
add
je
gs
outsl
popa
jb
push
jns
gs
add
imul
jae
addr16
add
push
push
imul
add
gs
je
inc
imul
jb
insl
push
add
je
push
gs
imul
js
push
add
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
cmc
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
inc
gs
imul
outsb
addr16
add
fldl
inc
jno
popa
insb
push
arpl
add
je
arpl
insb
insb
push
outsl
jae
add
imul
imul
add
insb
insb
push
imul
dec
outsb
push
outsb
fs
gs
popa
addr16
js
pop
add
gs
je
dec
arpl
inc
jb
insl
push
gs
jne
arpl
add
inc
outsl
jo
inc
arpl
insb
gs
je
jb
popa
bound
add
push
imul
outsl
arpl
add
bound
jbe
outsb
je
faddl
inc
outsb
jne
push
imul
adc
inc
gs
outsl
jne
insb
gs
insb
imul
add
cwtl
add
je
outsl
jns
imul
add
popa
jb
jb
jbe
add
add
outsb
fs
gs
popa
addr16
add
mov
inc
gs
jb
insl
gs
jb
arpl
or
push
imul
je
gs
add
add
je
jne
jae
jb
push
inc
gs
imul
add
inc
insb
addr16
je
insl
dec
outsb
je
sbb
arpl
gs
imul
add
add
je
outsb
jne
je
insl
dec
inc
add
outsl
addr16
outsl
js
popa
jb
insl
inc
add
arpl
outsl
push
push
outsb
outsl
ja
add
inc
push
outsb
jne
popa
imul
add
add
jo
imul
arpl
add
dec
outsb
push
arpl
cltd
add
inc
insb
addr16
jne
je
outsb
inc
push
add
mov
jb
outsb
je
inc
add
inc
gs
jns
je
insl
dec
outsb
jne
add
push
imul
popa
jae
inc
js
add
pusha
add
gs
je
dec
outsb
jne
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
dec
outsb
jne
je
insl
dec
outsb
outsw
push
add
mov
fs
outsb
jne
add
inc
gs
outsl
jo
imul
dec
add
je
jb
jo
add
cmp
push
gs
jne
jae
jb
outsl
jae
add
add
jo
imul
gs
js
add
jp
push
push
jb
je
add
imul
popa
jae
push
add
scas
add
fs
arpl
inc
add
add
je
popa
jb
je
outsl
jae
jnp
push
push
jb
outsl
jb
add
inc
gs
jne
dec
outsb
jne
add
add
imul
arpl
dec
fs
jb
insl
inc
imul
jns
push
push
inc
push
xor
cs
insb
add
push
dec
inc
dec
dec
xor
cs
insb
add
push
dec
push
jne
jns
push
push
inc
insb
inc
inc
push
in
inc
add
in
inc
add
or
dec
addr16
xor
dec
cmp
jp
cmp
dec
es
jae
and
dec
push
push
pop
push
cmp
dec
addr16
xor
dec
cmp
jp
cmp
dec
es
insl
dec
and
dec
push
bound
arpl
dec
bound
dec
jae
cmp
dec
xor
dec
push
jb
jae
orl
nop
jge
aas
dec
dec
xor
dec
ds
inc
dec
cmp
dec
xor
dec
push
sbbb
setae
jl
jge
aas
dec
dec
xor
dec
ds
inc
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
mov
or
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
mov
mov
ret
or
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
ret
psrlq
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
popa
dec
xor
dec
xor
dec
ds
xor
dec
push
loop
jecxz
repz
jl
jge
jl
jge
ds
jg
xor
dec
xor
dec
ds
inc
dec
cmp
dec
cmp
add
add
adc
jl
jge
aas
dec
add
outsb
jmp
inc
add
inc
add
in
inc
add
in
inc
add
inc
add
inc
add
in
inc
add
test
pushf
clc
data16
add
inc
add
inc
add
inc
add
inc
add
jmp
inc
add
in
inc
add
test
jb
inc
add
or
inc
add
fstl
inc
add
inc
inc
mov
jne
mov
incb
mov
jmp
add
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
and
pushf
clc
sub
add
jmp
inc
add
imul
pushf
clc
popf
jmp
add
pop
jmp
add
add
inc
add
inc
add
add
add
inc
add
add
dec
add
dec
add
add
add
add
inc
add
add
dec
add
inc
add
add
dec
add
add
add
add
jmp
add
dec
pop
dec
inc
dec
inc
dec
pop
dec
inc
dec
add
dec
xor
add
pop
dec
pop
dec
add
dec
xor
dec
inc
dec
pop
dec
inc
dec
add
dec
xor
add
pop
dec
inc
dec
dec
dec
push
dec
inc
dec
pop
dec
xor
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jge
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
xlat
lds
ret
fidivs
into
mulb
push
sbb
jno
add
add
mov
das
shlb
rolb
inc
push
outsl
push
push
jmp
add
in
adc
jae
inc
jae
popa
push
pop
pop
outsb
jbe
jns
push
imul
je
jns
popa
push
push
push
dec
imul
popa
jp
arpl
push
imul
jp
jb
outsl
push
inc
inc
push
imul
push
jb
add
push
insb
pop
ja
je
bound
add
push
dec
je
push
jne
popa
jns
dec
push
dec
dec
pop
pop
dec
push
add
adc
push
jge
add
sub
cmp
sbb
xor
nop
int
mov
fsubl
out
cmp
popa
add
mov
clc
mov
dec
sbb
mov
pop
fadd
adc
push
out
out
push
push
addb
les
into
in
imul
xor
mov
jne
push
sub
les
lods
fdivl
daa
push
jecxz
jge
scas
cltd
test
mull
or
cmp
xor
pop
or
daa
push
inc
cli
xor
jo
inc
xor
mov
out
jbe
inc
jg
imul
fistpll
adc
or
repz
jge
es
mov
popf
push
xor
sub
clc
jne
jl
and
ret
fisubs
mov
clc
and
jge
sbb
xlat
sbb
aaa
pop
in
sbb
je
jbe
xor
xor
in
aaa
pop
pop
lock
mov
lods
xchg
adc
mov
sbb
int3
aaa
and
mov
insb
mov
dec
mov
rorl
pop
scas
aaa
pop
aas
cmp
out
pop
adc
add
lahf
sub
lods
mov
adc
mov
jmp
jp
adcl
ret
cmp
aam
or
enter
fstps
pop
xchg
into
sub
adc
push
je
sbb
test
add
dec
jno
and
loope
mov
arpl
int
dec
mov
sub
ret
roll
mov
inc
mov
push
inc
cltd
ds
jp
sbb
adc
sub
cmp
xor
xchg
inc
mov
pop
aas
imul
jge
pusha
ror
cwtl
pop
xchg
testl
cmc
add
pop
dec
dec
mov
xor
lcall
and
pop
pop
outsl
sahf
mov
int
pop
repnz
addr16
shll
stos
ficoms
inc
les
xor
stos
sbb
push
dec
and
push
in
xchg
or
pop
adc
sub
hlt
jb
movsb
pop
mov
icebp
pop
jmp
ror
dec
cmp
les
mov
insl
or
rcl
inc
ljmp
imul
dec
stc
add
js
repnz
mov
popf
outsl
jne
jp
sub
test
jp
addr16
or
sbbl
jo
mov
aam
xchg
xorb
jmp
xlat
mov
xor
repnz
mov
pop
sbb
cmpsl
vcvtps2dq
lret
lcall
pop
sub
outsl
pop
push
xchg
idiv
ss
cmp
jg
out
dec
iret
popa
int3
cmc
pop
pop
jnp
movsl
imul
adcl
int3
jo
mov
sbb
push
insl
adc
lret
outsb
add
or
xchg
dec
jl
dec
mov
nop
xor
add
jb
fldt
cld
js
lods
movsl
pushf
addr16
ja
xchg
mov
push
or
pop
xchg
adc
icebp
xchg
lret
fistps
in
mov
mov
dec
inc
popf
and
scas
jo
cmp
dec
dec
or
and
mov
addb
iret
stos
test
mov
pop
add
push
xchg
clc
sbb
add
pop
aam
xchg
cmpsb
out
dec
push
or
mov
jo
repnz
hlt
test
push
les
in
jl
lock
mov
mov
out
mov
daa
icebp
push
pop
test
cmc
popf
pop
inc
adc
cmp
js
mov
das
mov
jnp
push
dec
sub
in
mov
push
and
es
mov
mov
pop
sub
sub
add
lcall
pop
insb
xchg
lret
add
xor
pop
add
adc
add
lea
mov
adc
repnz
out
test
push
sub
mov
jnp
xchg
pushf
jae
pop
pop
in
arpl
popa
jecxz
loopne
cmp
or
fs
adc
mov
and
into
push
stos
pop
jl
xchg
and
dec
into
push
xor
push
adc
cmp
jbe
push
sarl
cmpsb
nop
cli
into
jcxz
or
jg
sbb
inc
xor
inc
out
sbbb
sbb
mov
fadds
fs
push
out
nop
mov
ret
loope
imul
pop
add
inc
adc
out
push
addb
or
cmp
pop
popf
cmc
mov
ss
je
mov
and
imul
test
push
mov
xlat
lock
inc
mov
jno
and
add
int
out
adc
inc
xchg
fdiv
insb
jo
jno
mov
lret
stos
xor
pop
cmc
test
pushl
push
stos
pop
les
fwait
xchg
mov
aam
lret
out
in
or
js
jb
fwait
out
sbb
pop
shll
mov
rsqrtps
adc
enter
sbb
cltd
fisttps
or
inc
push
adc
or
shrb
push
mov
movb
stos
out
jmp
movsb
sub
or
stc
loop
pusha
mov
popa
sub
bound
xor
hlt
push
es
push
mov
sbb
movsb
fnstenv
cli
mov
lret
adc
mov
sbb
dec
ret
dec
xchg
sbb
hlt
cmp
arpl
ffree
mov
xor
insl
xor
data16
ror
fildll
stc
das
es
les
and
inc
repnz
dec
mov
fcmovnbe
int
clc
enter
test
lds
cmp
loopne
or
push
adc
xchg
aam
add
mov
rcrl
mov
out
adc
cmp
pusha
iret
lock
fsubrl
xchg
clc
push
sar
jnp
scas
add
addb
add
jne
cmpsl
pop
mov
mov
push
out
loopne
ds
mov
mov
mov
stc
icebp
pop
jno
jecxz
xor
dec
mov
add
add
add
dec
inc
pop
inc
pop
pop
shrb
and
mov
rolb
add
es
mov
lcall
xor
xor
add
out
shrb
push
jo
mov
xor
dec
xchg
scas
icebp
std
gs
dec
rcl
adc
cmpsl
int
stc
adcb
in
jge
jb
sub
inc
xor
lret
or
rorl
idivb
cmp
push
loopne
mov
popa
pop
fadds
pusha
xchg
adc
pop
jl
aad
cli
mov
aas
popa
add
mov
gs
push
sbb
cmp
xchg
daa
rcr
jmp
xchg
adc
enter
mov
lahf
shll
lods
push
sti
jb
adc
or
rcrl
arpl
je
int
in
jb
fldcw
and
pop
test
aas
xor
or
and
mov
mov
cmp
mov
movb
dec
ds
ljmp
sub
adc
cmpsl
sub
mov
fdivp
or
sbb
mov
sub
arpl
cmp
push
repz
fbstp
push
out
or
push
or
mov
xchg
dec
insl
mov
and
in
xchg
or
mov
lods
mov
insb
inc
sbb
mov
xchg
push
push
mov
jne
and
mov
test
faddl
pusha
xchg
out
or
jecxz
addr16
rcl
add
roll
mov
dec
jle
cs
push
imul
xchg
mov
push
cli
cs
cmpl
sti
dec
outsb
xlat
pop
aam
lret
and
bnd
sub
popa
mov
xchg
and
dec
inc
bound
mov
jnp
idivl
inc
ljmp
test
jb
aam
dec
jo
push
pop
pop
inc
movsl
negb
mov
and
mov
loopne
sar
jecxz
adc
xor
ljmp
xchg
mov
gs
xor
aas
xchg
mov
xor
pop
cwtl
movsl
push
xor
add
jne
test
jo
sub
in
pop
mov
pop
out
clc
and
mov
sbb
mov
aam
mov
lret
inc
mov
inc
imul
xor
cld
push
into
fwait
mov
jbe
cli
mov
fs
scas
jnp
sub
adc
mov
jecxz
cmc
push
stos
push
pop
mov
outsb
das
popf
shlb
scas
jb
cmp
scas
imul
or
lahf
aam
stos
fisttpl
iret
pop
out
cmpsb
loope
loope,pn
dec
lods
push
sbb
ja
jae
mov
cmp
and
aam
outsb
adc
stos
iret
imul
sbb
xor
mov
stos
les
stc
movsb
push
adc
xor
push
xchg
je
pushf
in
lods
ss
mov
rcrb
push
sub
sbb
mov
aas
inc
into
mov
out
mov
push
cmp
jg
pop
inc
or
xchg
jle
test
call
mov
lcall
addl
pop
and
cld
xchg
mov
ret
mov
fnstenv
push
xchg
dec
cmp
outsb
push
notb
cwtl
lcall
sbbl
nop
das
push
cmp
ret
cmpsb
pop
imul
jle
sub
add
test
or
stos
xor
push
movsl
inc
scas
push
lods
loope
pop
mov
or
sub
cmp
cmp
xchg
sbb
std
xchg
fwait
sub
push
cld
scas
out
popf
js
fidivrl
leave
mov
or
jne
dec
jle
divb
loopnew
fidivrs
lock
xchg
and
pop
orb
push
test
or
jle
daa
iret
sbb
pop
std
xchg
sbb
pop
push
inc
add
inc
test
dec
insl
add
jp
leave
and
inc
mov
jae
sahf
ja
dec
dec
and
andb
push
push
push
add
adc
and
dec
xchg
cwtl
add
xor
iret
push
adc
arpl
movsl
add
dec
les
movsb
gs
repnz
rcll
jmp
xchg
or
or
push
push
lar
sahf
ss
dec
add
sub
dec
xchg
xchg
sub
popf
push
and
daa
pop
mov
cmp
js
fstpl
mov
add
pop
jl
lock
mov
pop
insl
je
or
pushf
cmpsb
mov
fwait
movsbl
sub
mov
insl
xor
push
rolb
loop
cmc
fidivs
lret
lea
push
sub
lds
mov
cmc
call
outsb
ds
jle
arpl
xchg
jmp
cmc
popa
jo
ret
sub
xchg
aas
xor
adc
inc
ret
aas
test
adc
lods
std
jns
test
loope
insb
and
ret
and
jle
enter
cmpsb
mov
pop
call
push
pop
cmp
pop
pop
rcll
add
sbbb
push
scas
mov
stos
inc
push
and
pop
push
stc
cwtl
outsl
xchg
fdivl
cmp
pushf
ret
scas
orl
fldl
mov
mov
loop
popa
dec
cmpsb
call
sbb
rcrb
mov
xor
loope
add
addr16
mov
jnp
cmpsl
bnd
loop
aam
decl
imul
ja
aam
mov
and
mov
mov
sbb
lcall
popa
inc
and
and
jno
roll
js
pop
mov
xlat
call
repnz
push
xor
push
add
and
cmp
repz
mov
pop
aaa
jns
mov
imul
adc
stos
in
outsb
push
lods
and
mov
cmp
inc
idiv
iret
es
loope
lret
icebp
out
inc
push
icebp
pop
mov
aaa
cs
and
flds
add
add
add
dec
push
pop
push
pop
dec
mov
dec
push
or
cwtl
pushf
push
mov
add
adc
jp
cltd
jne
pop
adcl
int3
sar
neg
mov
insb
add
sti
ss
notl
das
xchg
std
imul
sub
lock
mov
sub
leave
jmp
pop
mov
out
add
shll
mov
leave
and
pop
and
push
es
lods
int3
fldcw
xchg
arpl
aam
mov
idivl
lods
or
sub
stos
mov
test
add
test
imul
or
xlat
adc
popf
xor
xor
addr16
sub
enter
xchg
mov
mov
ja
inc
insb
rcll
jl
mov
mov
aam
fiaddl
int
or
lods
push
int3
mov
sub
add
int
fcmovnbe
xchg
fucomi
jmp
gs
lds
xchg
xchg
push
fwait
adc
xor
push
popa
jg
mov
push
xor
add
push
mov
aas
push
lret
rep
negb
mov
ret
mov
call
repz
pop
mov
insb
test
in
fldcw
and
mov
cld
imul
repnz
mov
push
cmpsl
mov
sbb
sarw
loop
shll
adc
adc
push
sbb
mul
in
ja
popf
jp
shlb
add
mov
xchg
aam
inc
test
lret
sarl
ss
push
mov
out
mov
int
shl
pop
xor
mov
xchg
jno
mov
cmp
addl
adc
out
repz
stos
dec
popf
mov
xor
dec
adc
push
pop
dec
mov
dec
fwait
sub
pop
int
aad
xor
pop
pop
aam
nop
add
and
fiadds
push
adc
add
or
inc
nop
in
shl
add
push
es
sbb
loopne
movsb
xchg
mov
shrl
loop
inc
inc
xchg
adc
pusha
push
xchg
lret
shrb
sub
adc
lahf
sahf
mov
dec
decb
in
gs
mov
mov
and
sbb
mov
mov
pop
sub
lahf
les
jle
negl
mov
movsl
jmp
sub
iret
inc
adc
cmc
xor
xchg
push
sub
imul
ljmp
mov
adc
push
rcrb
push
repz
scas
fimuls
mov
mov
insb
mov
mov
mov
sbb
fstpl
jp
cs
and
sti
push
out
sbb
or
and
jg
ret
inc
enter
fcmovnbe
xchg
fnstsw
dec
sub
call
in
dec
adc
in
dec
in
ds
xor
push
xchg
mov
std
scas
outsl
mov
fisttpl
xchg
mov
sbb
popl
js
jmp
sbb
in
lea
mov
lods
jb
push
pop
mov
jp
lea
pop
dec
adc
scas
pushf
or
mov
out
das
sahf
aas
jne
fs
mov
mov
jb
and
dec
dec
test
outsl
clc
xor
push
cmp
out
pop
fistps
cld
or
xor
cwtl
push
mov
lds
inc
and
mov
or
mov
cli
lods
mov
enter
lods
jno
cwtl
and
xchg
out
mov
popf
xchg
int3
xor
movsb
inc
or
imul
inc
add
and
outsb
jne
aaa
jae
int
insb
fsubrs
iret
outsl
data16
pop
sub
out
dec
dec
dec
or
mov
mov
or
jo
inc
sbb
imulb
lahf
mov
jecxz
ret
fnstenv
and
add
xchg
jbe
repz
ficoml
push
dec
bound
mov
int3
mov
in
xchg
shrl
xchg
lock
je
stos
jno
cwtl
stos
lock
movsb
shl
cmp
and
mov
mov
xchg
and
aam
lret
sbb
jne
jns
adc
mov
jmp
pop
mov
dec
xor
je
ljmp
jb
xchg
test
xchg
inc
lock
ret
sbb
or
cltd
pop
sub
pop
out
scas
mov
adc
dec
pop
fiadds
shl
push
outsb
or
adc
mov
xchg
xchg
add
adc
add
mov
popa
or
pop
sub
dec
in
out
push
js
clc
shll
adc
loopne
mov
xor
sub
mov
icebp
sbb
rcrl
out
cmp
push
in
pop
pop
mov
aam
les
jg
mov
mov
dec
das
out
iret
adc
rolb
mov
jp
outsb
ficompl
pushf
mov
push
adc
pop
mov
sbb
aam
or
pop
dec
retw
into
jge
test
xor
xchg
dec
clc
test
pop
cmp
xchg
flds
dec
loope
inc
sub
out
jle
stc
or
adc
into
popa
mov
push
aas
and
push
add
cwtl
dec
push
aam
ror
sbb
add
nop
out
or
mov
mov
push
or
dec
dec
imul
repnz
idivl
mov
loope
pop
dec
int3
mov
or
sti
loope
xchg
divb
sarl
imul
lret
leave
repnz
and
cmpsb
adc
inc
int3
shlb
mov
jb
ss
cld
add
sti
or
addr16
cmpsb
inc
insl
cli
push
shll
leave
mov
das
insl
mov
call
push
or
int3
mov
outsl
dec
inc
sbb
insl
xchg
add
lods
aaa
sbb
inc
lcall
mov
xchg
mov
inc
sti
pop
jnp,pn
data16
add
add
add
inc
dec
dec
pop
pop
push
sub
xchg
mov
push
nop
add
addb
add
movsb
bound
icebp
mov
lea
mov
fwait
les
mov
mov
sub
pop
mov
ret
scas
popa
in
fcoml
lret
sub
notl
add
xor
pop
push
dec
aad
clc
dec
xor
orb
divb
adc
pop
add
fcomp
jge
or
js
mov
lock
push
pop
repz
movsl
fidivrl
lret
mov
adc
rcl
daa
and
cmp
and
mov
push
sbb
lret
pop
pop
ror
in
inc
pop
insb
test
test
jecxz
xor
push
decl
in
inc
pusha
imul
dec
xchg
mov
out
adc
add
push
aam
mov
mov
andb
cmp
ret
xchg
mov
pop
xor
adc
push
loopne
mov
sbb
jle
xor
jl
pop
push
mov
fsubr
sub
lret
ret
mov
cmp
xchg
mov
test
test
sub
icebp
and
add
fcmovnbe
pusha
inc
cmpb
leave
insb
icebp
movsl
fisubl
data16
pop
add
shr
dec
dec
mov
test
mov
out
jmp
test
mov
dec
cmp
cmc
cwtl
popf
push
gs
roll
jnp
mov
test
ss
lret
pop
je
cmp
mov
stos
inc
lods
imul
cmpsl
shlb
push
jno
xor
enter
loopne
sub
cltd
rorl
ror
test
sbb
adc
inc
test
ret
lods
adc
es
std
mov
push
push
mov
dec
xchg
mov
inc
jae
shll
push
lcall
fwait
jecxz
lahf
popf
pushf
mov
lods
mov
add
js
mov
jne
inc
mov
repz
fidivrs
in
and
sbb
sbb
sub
call
lods
dec
std
iret
cmp
pop
mov
outsl
fcmovb
inc
inc
pushf
inc
and
add
lahf
dec
mov
add
les
pushf
cmp
dec
mov
adc
dec
orl
out
loop
or
add
popf
sub
cwtl
push
jne
adc
xor
adc
ret
gs
test
jno
fsubrs
nop
push
jae
xchg
lret
pop
lock
cwtl
push
mov
mov
incl
cmp
dec
add
movsb
mov
add
inc
mov
push
jg
xchg
ja
mov
mov
cmp
jecxz
jmp
adc
inc
mov
xorb
xchg
push
xchg
orb
fcmovbe
mov
leave
repz
cmpb
mov
adc
sub
les
inc
mov
xchg
movsl
jg
loope
vpmacssdql
xchg
popl
ja
mov
sti
dec
aas
pop
popf
rcr
fwait
inc
lods
inc
icebp
std
pop
in
dec
xchg
pop
lret
cmpsb
add
scas
shrb
xorb
pushf
sub
inc
stos
icebp
ss
testb
add
insl
and
loop
mov
outsb
cmpsb
add
fisubrl
jmp
push
push
js
iret
sub
cld
pop
and
bound
jge
insb
xchg
mov
mov
xor
scas
jle
adc
jae
cltd
aad
cmovb
pop
repnz
dec
push
mov
inc
mov
sbb
cmc
push
cmp
out
mov
and
cmp
rolb
adc
mov
cwtl
dec
scas
mov
sub
mov
xlat
sub
mov
push
inc
inc
mov
mov
int3
lock
jmp
jecxz
mov
sbb
mov
cmp
xor
xchg
pushf
mov
fmuls
cmp
inc
xchg
xor
jmp
flds
xchg
xchg
add
mov
mov
xchg
push
sbb
mov
push
adc
stc
mov
xchg
movsl
sub
sub
js
mov
out
push
les
lea
inc
xchg
xor
lret
bound
xchg
cmp
jecxz
movsl
add
mov
pop
sbb
push
sub
jecxz
inc
and
aas
mov
adc
add
dec
push
rcl
add
xchg
push
mov
xor
jmp
push
cmp
lock
lret
in
pop
or
cmp
mov
dec
ds
pusha
lods
call
xor
jne
cld
mov
aam
dec
aaa
push
pop
adc
iret
and
cmc
add
mov
fwait
push
cmp
or
aam
pop
adc
mov
or
sbb
adc
dec
scas
jno
sub
push
popa
test
add
test
pop
sub
data16
dec
pop
mov
and
flds
xlat
pop
pop
and
xor
sub
mov
test
push
lcall
aaa
mov
int
mov
push
ret
insb
mov
dec
ret
mov
ror
pop
stos
ds
mov
enter
stos
or
xchg
or
mov
rcrl
push
dec
xchg
imulb
add
flds
jle
mov
pop
adc
jl
rol
adc
push
rolb
fiaddl
cwtl
or
shlb
push
xor
fwait
add
push
stos
mov
sbb
jns
les
mov
and
daa
ss
rclb
sbb
mov
jo
insl
adc
dec
push
ja
cli
push
cmpsl
push
inc
xchg
lret
lods
inc
out
gs
inc
jne
pop
cmp
sbb
sahf
dec
cmp
mov
cld
mov
insb
mov
into
mov
inc
mov
cmp
cs
sub
loopne
push
stos
loope
repnz
or
add
add
dec
dec
dec
inc
dec
sub
xor
pop
xchg
add
addb
add
inc
fimuls
lock
pop
push
adc
js
into
cmc
popa
and
sbb
sub
add
fists
add
pop
addr16
sarl
mov
in
mov
jae
push
jmp
sbb
add
sub
fiaddl
or
pop
and
push
test
lds
jl
lock
repnz
sub
add
push
repz
and
mov
jae
stos
or
xor
and
push
movsb
jge
xchg
mov
inc
lret
test
adc
push
push
imul
pop
fwait
mov
sub
cltd
nop
lods
jecxz
out
push
jp
lahf
mov
push
push
call
stc
add
lret
push
test
mov
hlt
mov
mov
shll
je
out
mov
aam
repnz
mov
jp
scas
pop
xor
arpl
lret
out
inc
js
inc
mov
sbbl
add
mov
lods
sahf
gs
scas
cmp
jmp
jbe
pop
imul
lods
and
push
and
adc
xor
mov
pop
pop
jbe
inc
repz
clc
cmp
lock
lea
push
sub
mov
clc
sbb
subb
push
lret
scas
pop
les
push
stos
addr16
cmp
shll
cmp
mov
xchg
pop
push
in
pop
aad
lahf
test
dec
adc
mov
addb
xchg
fs
sbb
jbe
sbb
pop
enter
subl
fnstsw
jno
ret
ret
pop
adc
mov
aam
adc
push
push
inc
lods
xor
mov
repz
stos
mov
jno
mov
push
aam
xor
repz
repz
push
or
cmpsb
roll
jle
mov
pusha
fmuls
add
out
mov
mov
pop
fists
ljmp
outsb
inc
pop
push
pop
mov
cltd
cmp
sub
pop
imul
outsl
sti
sbb
push
and
leave
call
xor
inc
lods
lret
adc
adc
jno
xor
fmuls
fadds
dec
cmpsl
out
mov
xchg
negb
fcompl
push
jne
xchg
cmp
lds
and
add
out
add
jo
pop
mov
imul
sub
mov
sbb
cld
cmp
insl
pushf
xchg
adc
jns
shr
mov
outsl
ds
insl
sub
fistl
inc
pusha
adc
aam
dec
pop
add
pop
cwtl
xor
dec
inc
scas
movb
and
and
test
push
fimuls
push
data16
jns
es
aaa
mov
rcrl
loopne
mov
xchg
mov
mov
int
fdivr
inc
xor
and
cwtl
push
xchg
sarb
adc
mov
push
fwait
call
cmp
sub
sub
test
movl
cmpsl
repz
into
inc
popf
xchg
add
fwait
iret
mov
dec
pop
repnz
adcb
cltd
or
popl
push
ret
sbb
or
cmp
lahf
xchg
push
decb
daa
xchg
ret
test
out
orb
cmpsb
test
stc
and
jb
gs
mov
jb
and
aad
les
adc
stos
xchg
stc
add
jo
sbb
test
fistpll
out
sbb
inc
ljmp
loopne
pop
inc
mov
into
lcall
aaa
je
mov
xor
or
rcrl
sub
mov
pop
push
jge
jmp
les
xchg
jne
test
das
paddb
adc
mov
ljmp
xchg
faddl
inc
rcrl
fiadds
add
inc
les
xchg
or
sbb
lahf
dec
pop
jmp
add
cwtl
fdivp
mov
mov
push
mov
pop
pop
xchg
bound
lcall
mov
gs
movsl
sub
sub
mov
push
adcl
sbb
into
daa
jns
ja
cmpb
fcoml
sahf
test
movups
xchg
leave
call
in
enter
xchg
cmp
push
or
or
loope
jmp
iret
push
add
inc
int3
xchg
sbb
pop
test
rclb
vpaddb
aad
jns
shrb
push
sbb
jl
mov
repnz
jmp
jmp
or
inc
and
dec
aam
fs
mov
jmp
sbb
sarb
push
dec
das
es
inc
cmp
inc
es
hlt
pop
sbb
xlat
and
aaa
pop
mov
and
and
ret
or
cltd
and
xor
inc
jmp
add
rcrb
inc
sbbb
inc
mov
sub
icebp
push
xchg
add
xchg
xor
das
fsubrp
adc
out
inc
push
nop
jns
jbe
es
inc
ret
ret
inc
and
les
mov
out
push
mov
dec
jne
xchg
mov
fdivr
cwtl
mov
lock
mulb
mov
in
gs
push
andl
inc
fstpl
mov
lret
dec
std
idivl
cltd
stc
scas
jle
lahf
mov
pop
sub
into
mov
xchg
jae
pop
imul
inc
fsubrl
mov
push
lock
mov
fimuls
push
xor
inc
or
out
sub
sub
mov
loopne
cli
sbb
mov
addr16
pop
cmp
int
mov
dec
lret
rclb
or
inc
add
idiv
jo
loope
sub
fadd
adc
cltd
mov
ret
adc
lret
push
push
sbb
and
push
xchg
stos
mov
out
xchg
out
mulb
popa
ret
mov
sarl
add
jmp
fwait
cmp
add
dec
xor
jns
inc
add
add
add
push
dec
inc
push
pop
pop
push
dec
cmp
or
xor
addb
add
stos
jmp
sahf
fwait
outsl
add
push
xchg
nop
imul
mov
add
adc
lds
into
push
pushf
mov
imulb
arpl
push
lods
into
jno
push
sbbl
stos
and
jo
in
xchg
incl
or
pop
pop
prefetch
mov
pop
ljmp
sub
jle
add
cmpsl
ficoms
xchg
xor
jnp
in
jo
push
jb
sub
addr16
inc
add
outsb
fnstcw
jne
lods
dec
test
add
aaa
xchg
jge
lret
cwtl
sub
loopne
xchg
sbb
mov
push
sarb
punpcklbw
dec
sbb
out
mov
lcall
sahf
cmpsl
ror
xor
out
mov
adc
in
outsb
ja
or
sub
out
fcomps
xor
sbb
xor
in
mov
sbb
jns
jmp
pop
addl
test
pop
repnz
in
aas
loope
mov
jbe
ja
xchg
push
xchg
pop
add
adc
xor
inc
cld
les
sub
cmp
and
mov
cmp
imul
cld
sub
data16
lret
mov
pop
add
sti
adc
inc
adc
pop
sbb
pop
pop
in
lret
jmp
sbb
xor
iret
mov
enter
dec
das
daa
loope
sbb
jno
sbb
iret
daa
add
fs
fistpll
cmpsl
insl
fadds
stos
ljmp
push
cmc
call
mov
mov
dec
jmp
dec
xchg
jns
push
into
xchg
aam
mov
or
sti
mov
fwait
lods
push
sub
push
or
shl
add
dec
xor
mov
pop
and
cmp
mov
stos
inc
pop
mov
sub
jl
mov
jecxz
mov
mov
imul
mov
mov
outsb
mov
mov
xor
stos
cmp
int3
adc
aas
std
inc
aam
jns
aas
pop
sti
loopne
fistps
das
push
pop
inc
lods
add
mov
xor
dec
adc
and
rcll
cmpb
mov
xchg
out
pop
shlb
in
test
hlt
inc
lods
push
inc
jp
jb
xlat
ss
jno
jo
jbe
in
popa
into
stos
arpl
rcll
sub
in
cmpsb
int3
mov
shll
or
pop
mov
cltd
shl
sahf
mov
repnz
call
push
pop
push
push
pop
mov
stc
test
fldt
jae
xlat
lock
lahf
pop
enter
in
ss
call
cli
add
nop
lret
pop
mov
push
sarl
frstor
sbb
push
inc
cwtl
daa
push
dec
cmpsb
jae
mov
fs
pop
xchg
bound
sahf
xor
inc
adc
mov
movsb
cmc
push
push
fldl
pop
mov
mov
out
enter
aad
sub
decl
jecxz
stc
popa
clc
sub
bnd
mov
sub
or
mov
pop
test
inc
iret
jbe
xchg
aas
sub
xor
dec
cmpsl
fwait
in
or
mov
and
cwtl
jns
dec
es
icebp
ljmp
mov
sbb
ret
sbb
cli
sbb
and
pop
add
or
cmp
cmpsb
les
push
popf
fnsave
mov
dec
inc
cmp
and
sti
mov
mov
mov
lods
leave
cld
data16
xchg
fisttps
push
push
adc
aaa
lret
dec
stos
adc
and
andl
stos
jecxz
push
pusha
add
mov
popf
nop
mov
sbb
mulb
icebp
clc
dec
xchg
add
data16
test
push
mov
adc
lea
add
pop
clc
dec
sub
cwtl
cmpsb
aaa
out
adc
stos
xor
sub
pop
pop
shr
sbb
iret
pop
jo
les
jae
cwtl
ret
xchg
xor
jb
jp
cmpl
aas
les
xchg
mov
decb
mov
sarl
ret
insl
loope
push
sub
xchg
adc
xorb
sub
shrb
dec
cmp
ret
loope
lea
fildll
pop
push
shrd
jo
jnp
dec
stos
inc
in
outsl
clc
out
or
ljmp
or
fcoms
sbb
lds
mov
push
ret
add
jae
or
jmp
push
lods
and
std
pop
scas
mov
xchg
push
sub
xor
dec
xor
sti
sub
insb
xor
jnp
push
xor
jbe
sbb
ljmp
jecxz
push
in
jb
pop
or
loopne
stos
leave
fdivs
mov
adc
adcl
fcmovu
xchg
xchg
fmuls
pop
mov
ret
or
pop
sbb
push
cmpsb
and
nop
inc
and
adc
sub
bound
out
xorb
jecxz
std
ror
aas
jae
pop
add
xor
mov
or
js
hlt
sbb
and
xchg
pusha
loop
xor
sub
adc
xor
mov
dec
or
popa
addr16
fwait
lods
icebp
jo
inc
je
iret
ret
addb
sub
mov
roll
fldenv
leave
adc
and
fsubrl
iret
jne
sub
jle
gs
jno
cmpsl
sub
mov
mov
cmp
nop
xor
cmc
rorl
xchg
lea
pop
dec
rcrl
pop
xchg
inc
addr16
jge
or
popa
and
mov
jge
cmp
add
and
cmpsb
xchg
xchg
dec
jnp
outsb
cmpsb
pop
and
dec
stos
jp
jns
mov
inc
movsl
cmp
ret
add
add
add
push
pop
dec
inc
dec
push
pop
pop
push
inc
cmp
pop
pop
movsb
add
addb
add
ss
lcall
lods
adc
movsb
arpl
out
shrl
js
adc
int3
cmovl
jno
mov
mov
dec
pop
out
add
ret
mov
xchg
or
cli
jecxz
push
test
adc
inc
sbb
insl
and
sti
std
sbb
pop
xchg
pop
xor
insl
loopne
sub
jbe
repz
and
in
cmpsb
jp
mov
fwait
and
xchg
sub
loop
cmp
lds
sbb
mov
xor
xor
sbb
inc
push
mov
fimuls
pop
and
rcll
insb
push
daa
xor
bound
out
inc
inc
mov
fnstenv
sbb
mov
in
add
nop
arpl
pop
js
xor
add
cmp
scas
mov
arpl
push
arpl
inc
bnd
sbbl
dec
out
jo
stc
cmc
pushf
sub
mov
andb
dec
das
adc
add
or
hlt
repz
fbld
pushf
cmp
lcall
rol
mov
mov
in
jbe
cmp
out
mov
imul
loop
dec
sbb
adc
xchg
in
loopne
lea
xchg
and
fwait
cmpsb
addr16
movsb
movsl
ret
call
cmp
mov
mov
test
in
sub
loop
aad
jge
jmp
int3
push
sbb
inc
xchg
jle
mov
push
inc
repz
fldt
xor
lahf
mov
lock
push
pop
lock
loope
push
mull
push
lock
jge
xlat
sbbb
mov
lods
les
add
mov
in
xchg
stos
add
ja
sub
testl
add
or
outsb
cld
int3
les
dec
les
and
test
pop
push
add
loop
into
mov
xchg
inc
adc
pop
lods
push
mov
cmc
inc
stc
dec
push
adc
test
inc
add
call
dec
stos
adc
inc
movsb
mov
jmp
insb
sub
lock
fldenv
icebp
out
adc
add
shrb
cli
aas
jp
jns
jns
inc
push
adc
xorb
fsts
lods
clc
test
jmp
aaa
loope
pop
enter
inc
imul
and
data16
fidivs
pop
jp
cli
gs
aaa
cmpsl
cs
pop
adc
rolb
leave
ret
add
cmpsl
xor
rcrb
mov
out
repnz
jne
movsl
jmp
out
shll
sbb
stc
fldenv
data16
adc
scas
push
test
and
sub
ficoms
pop
das
jo
push
cld
fdivrl
jbe
cmpsl
das
xchg
jl,pt
cmp
cltd
insl
out
ret
and
mov
ffree
adc
loope
mov
imul
ss
inc
fcomp
push
popf
lret
jg
in
rcr
add
aaa
test
or
jge
jecxz
mov
jo
mov
xor
mov
scas
push
inc
iret
push
or
push
cwtl
std
lahf
lret
cwtl
push
jbe
sahf
clc
iret
jmp
xchg
jmp
sti
mov
insl
ss
xchg
fildl
push
outsl
inc
or
jbe
fwait
pop
sub
aas
lret
pop
xchg
enter
in
sub
cmp
mov
mov
xor
cli
inc
rorb
inc
or
pop
mov
xchg
dec
loope
test
mov
wbinvd
stos
loope
imul
leave
loop
xchg
sbb
push
jge
out
sub
lods
and
shrl
jb
mov
jle
inc
ffreep
cmc
jmp
add
inc
xor
or
jg
pushf
mov
add
fdivs
pop
inc
subb
leave
push
adc
imul
icebp
fiaddl
adc
imul
ret
mov
xchg
aas
rcll
jo
cmpsl
pop
stos
sbb
adc
add
outsb
sub
jns
pop
dec
add
roll
sbb
gs
jne
xchg
test
mov
cmpsb
cmp
sbbl
inc
sub
mov
rcrb
adc
push
jb
xlat
pop
dec
test
sahf
loopne
xlat
inc
jle
fldl
or
and
or
inc
push
cmp
mov
js
push
iret
loopne
aad
cmp
mov
jne
push
xchg
data16
dec
mov
mov
incl
enter
and
in
xor
cmp
push
icebp
jecxz
repnz
xor
aam
sub
cmc
je
lret
add
sub
mov
push
inc
into
push
mov
ljmp
jmp
xor
push
cli
nop
push
mov
mov
push
sub
pop
dec
add
fsubr
xor
outsb
ja
stos
adc
test
mov
pop
sbb
xchg
mov
fldl
jmp
out
in
xor
mov
dec
call
das
roll
daa
fistpl
sub
dec
dec
mov
sahf
fisttps
lods
loopne
data16
mov
stos
add
dec
in
push
inc
cmp
mov
jns
loope
es
flds
out
sahf
sub
arpl
dec
gs
loopne
incl
ljmp
mov
imul
jmp
lahf
xchg
jne
jle
dec
jp
xchg
mov
pop
push
jne
or
jecxz
add
mov
shl
loop
mov
inc
pop
push
lahf
enter
mov
dec
lock
sti
jns
mov
les
test
and
js
jle
or
lock
icebp
adc
push
insb
adc
mov
js,pt
add
pop
cmp
ja
lret
pusha
dec
pop
inc
push
pop
adc
scas
testb
push
add
add
add
push
inc
pop
pop
pop
pop
push
dec
mov
aad
fisubrs
add
pop
stc
push
cmp
xchg
inc
adc
sub
push
lcall
xchg
insb
loope
cli
imul
inc
and
jle
xor
les
fnop
ret
or
into
push
xchg
dec
dec
aad
jns
movsl
jecxz
movsl
jecxz
xor
add
mov
mov
xor
outsl
push
mov
mov
push
and
js
dec
jno
add
testl
and
cmp
push
push
cmpsb
jecxz
ret
xchg
ret
and
shl
pop
mov
in
scas
test
js
cmp
xor
fistpll
xor
inc
adc
add
mov
mov
dec
flds
jnp
das
cmp
lret
or
in
dec
push
dec
lahf
mov
lock
mov
jnp
call
sub
pop
fcomps
xchg
adc
adc
mov
movsb
es
sbb
or
int3
cmc
subl
imul
rorl
pop
jl
xor
pop
push
loope
mov
pop
testb
jl
std
xchg
outsb
sub
bound
cwtl
jge
cld
inc
pusha
xchg
call
mov
xlat
pop
pmaddwd
mov
fistl
and
rcll
ret
dec
inc
inc
lods
sbb
add
add
lods
fisttps
out
lods
xchg
in
test
in
adc
fidivs
fcoml
and
test
es
xor
jl
popf
mov
sbb
lods
js
pop
imul
cli
sub
sti
pop
sub
mov
and
testb
xchg
mov
jnp
addr16
cli
push
push
mov
sti
xchg
cmp
inc
jmp
sbb
push
mov
loop
mov
sub
sbb
lods
mov
cmp
test
pop
int3
add
fisubrs
lahf
mov
les
sti
popa
rorb
test
sbb
sarl
dec
ljmp
fsubr
outsl
sbb
pop
add
ds
test
call
add
inc
cltd
dec
dec
stc
fbld
mov
fs
jmp
cs
add
cmpsl
push
mov
inc
sbb
or
dec
pop
push
icebp
les
pusha
shlb
jge
push
call
daa
mov
push
sbb
imul
add
pop
pop
enter
test
lods
fcomps
shl
js
xchg
push
dec
test
mov
stc
cld
mov
data16
jmp
cld
dec
repnz
inc
xchg
cmpsl
bound
gs
mov
push
int
into
mov
fldenv
mov
push
xor
mov
test
out
fs
mov
out
pop
add
int
push
int
add
xor
ss
pushf
test
cltd
adc
xor
std
dec
inc
scas
cs
xchg
mov
xor
adc
mov
aaa
ja
sbb
sarb
stos
ret
clc
mov
push
inc
xlat
sbb
outsb
jecxz
xchg
jecxz
pop
daa
cmp
ficompl
fimull
xchg
aam
out
mov
sub
icebp
mov
lods
icebp
cmp
mov
jbe
aaa
enter
pushf
or
in
fmull
jb
mov
pop
sub
mov
jb
xchg
addr16
adc
inc
mov
mov
clc
cmpsl
mov
das
xorb
pushf
fwait
scas
or
in
lods
cld
or
test
scas
push
pushf
jbe
orl
and
aaa
fadds
test
xchg
sub
mov
mov
inc
jmp
mov
mov
je
loope
mov
mov
bound
out
mov
mov
repz
int3
cld
mov
leave
pop
movl
adc
lahf
mov
and
dec
and
sub
pop
fisubrl
xchg
mov
aas
sub
popa
jl
fwait
mov
inc
adcb
or
sbb
ss
jg
loope
aam
cld
add
daa
pop
xchg
daa
jge
push
push
call
sub
sahf
xor
into
mov
sub
icebp
stc
movsl
xor
push
leave
shlb
cmpsl
adc
cmpsl
pop
pop
mov
mov
sub
ja
xor
jmp
pop
jl
arpl
cmp
fdivrs
in
rclb
lods
mov
xor
or
xor
std
mov
gs
push
mov
xor
shll
mov
icebp
mov
les
shl
add
mov
hlt
adcl
mov
mov
outsb
pop
out
jmp
xor
negl
lcall
cwtl
repz
cwtl
dec
inc
insb
xor
inc
push
mov
sub
xchg
push
jbe
xchg
rorb
jmp
push
shlb
mov
dec
lds
clc
sti
adc
jns
mov
dec
ds
cmpb
xchg
out
jmp
enter
insl
sub
mov
lea
jne
dec
push
andb
paddusb
push
sbb
xor
nop
inc
pop
and
mov
es
sub
sub
loop
cwtl
and
insl
cli
sti
addr16
lock
xchg
insb
das
sbb
mov
push
sahf
mov
cmp
bound
shlb
ja
push
pusha
cmp
xorb
inc
dec
fcompl
dec
fucomi
test
sub
and
lods
in
repnz
mov
les
insb
cmp
aas
pop
flds
inc
fadds
push
cwtl
sub
mov
mov
or
mov
scas
lock
push
or
mov
and
je
mov
mov
jnp
add
or
add
pop
div
popa
jo
jge
into
sub
add
inc
xor
aam
fidivrs
sbb
mov
fnsave
cmp
sub
ss
in
dec
or
add
add
add
inc
push
inc
push
push
push
outsl
pop
mov
xor
add
addb
add
jb
shll
xchg
and
aas
jecxz
and
dec
testl
loope
out
mov
mov
xor
test
inc
cmp
insb
pop
add
stos
dec
in
arpl
or
push
or
or
cmp
mov
sbb
or
dec
sbb
lcall
jge
sbb
adc
pavgw
test
jmp
jo
mov
out
jae
leave
iret
and
pop
aas
stos
pop
dec
mov
loopne
std
gs
mov
xchg
out
cmp
add
repnz
hlt
les
sub
mov
lcall
and
push
sub
xchg
ds
jge
cmp
xor
xchg
xor
mov
rorb
add
roll
jmp
push
push
popa
mov
mov
ds
lret
test
adc
push
jg
aam
mov
xchg
mov
mov
cmc
data16
scas
pop
imul
out
in
cmp
js
in
sbb
iret
gs
dec
xor
xor
mov
adc
xchg
xor
dec
pusha
adcl
adc
insb
cli
out
pop
sbb
cs
inc
jno
bound
ret
pop
add
jne
outsb
into
xchg
test
das
push
sahf
sarl
addr16
loopne
pop
outsl
pop
popa
inc
mov
xchg
int3
loope
push
add
dec
inc
jmp
adc
je
xchg
jbe
push
pop
cmp
adc
sub
cmpsl
xchg
ret
stos
mov
jecxz
pushf
fst
aad
adc
xor
push
sarb
mov
mov
xchg
cld
dec
sub
scas
in
cwtl
mov
sbb
rcrb
xor
adc
xor
inc
mov
mov
mov
mov
dec
adc
and
movsb
iret
xchg
enter
hlt
mov
dec
nop
pop
scas
shlb
outsl
sbb
test
cld
out
mov
sbb
mov
aas
xchg
mov
in
cmpsl
test
adc
push
mov
or
imul
test
push
repz
xchg
and
push
fldt
adc
dec
jge
push
or
jbe
cmpsl
stos
in
aam
stos
adc
call
gs
mov
push
stc
shrl
inc
sub
roll
jnp
mov
dec
mov
test
cmp
loope
sub
arpl
pop
enter
es
ja
loopne
xor
push
jmp
xor
cld
sbb
xor
ljmp
mov
rol
iret
fwait
jecxz
jns
bound
cmp
test
sub
andb
xor
sbb
inc
insl
pushf
pop
xchg
fcompl
or
inc
scas
or
fwait
mov
cmpsb
fldcw
dec
inc
addr16
mov
lret
sub
repz
or
sbb
push
cmpsb
add
repnz
mov
in
negb
jg
lret
inc
mov
inc
dec
leave
xchg
sub
shll
xor
into
lds
or
scas
mov
push
pop
jl
push
iret
in
jge
sbb
push
stc
lahf
insl
cmpsl
inc
pop
pop
jmp
inc
ret
dec
add
clc
xorl
xchg
js
add
movl
pop
out
jns
xchg
or
adcl
pop
mov
test
mov
mov
mov
cmp
xchg
fisttpl
pop
inc
sub
pop
insb
lret
das
cltd
sub
jns
cmpsl
out
idiv
arpl
popf
xchg
sub
fst
ret
sbb
xchg
dec
add
mov
and
xchg
push
outsb
pop
sbb
out
push
jmp
jge
out
inc
dec
lret
jno
shl
icebp
fwait
add
cwtl
or
sub
dec
jns
fdivl
adc
test
cmpl
faddl
jb
stos
jnp
inc
movsl
cmp
cmp
cmpsl
mov
mov
scas
lea
cs
int
sar
movsl
mov
rclb
lret
inc
mov
cli
dec
push
or
cmp
shld
and
inc
push
sbb
frstor
mov
dec
jmp
jp
es
scas
xor
push
push
dec
bound
pop
ss
push
push
xchg
fcomip
push
xchg
or
fwait
jb
or
fucom
cltd
pop
push
pop
sbb
sub
xchg
test
subl
dec
or
mov
mov
mov
mov
popa
mov
scas
fwait
sub
pushf
xor
pop
fisubrl
outsl
icebp
push
leave
pop
stos
out
repnz
nop
jle
cmp
cwtl
mov
ja
int3
and
pop
xchg
sbbb
mov
jge
mov
xchg
xchg
les
jp
out
push
popa
mov
iret
lds
mov
iret
sahf
mov
jae
sub
jmp
jle
fwait
push
sub
in
call
cwtl
xchg
roll
jbe
add
xor
push
inc
jno
xchg
adc
jmp
mov
bound
xor
mov
adc
imul
xchg
cmp
pop
cmpsl
xchg
mov
pusha
outsl
scas
add
data16
sahf
mov
inc
mov
insb
fmulp
aaa
cmpl
aam
dec
add
push
scas
sub
ja
jle
fisttpll
stos
out
push
shlb
mov
arpl
sti
imul
notb
pop
push
lahf
add
mov
mov
loopne
dec
cwtl
fs
sarl
nop
push
xchg
dec
fists
sbb
dec
setno
gs
outsl
addr16
test
gs
cld
jge,pt
mov
xchg
mov
pop
add
xor
je
mov
mov
and
add
add
add
push
dec
pop
dec
pop
push
stos
mov
stc
mov
add
addb
add
sbb
xor
xchg
sar
mov
test
setbe
or
addr16
xor
jo
push
mov
das
cmp
sub
lods
lret
ljmp
fcomip
jecxz
cmp
xlat
cmpsl
loop
rolb
jmp
fbld
out
ljmp
mov
fsubrl
ds
cmpsl
mov
jne
cmc
es
xor
add
out
mov
das
cmp
loop
cli
pop
push
sbb
mov
outsb
lahf
pushf
insb
jge
cmp
fidivl
adc
add
inc
mov
adc
xchg
cwtl
mov
scas
mov
cmpsb
push
adc
lods
adc
and
jge
dec
pushf
ret
mov
addr16
mov
and
stc
call
jge
dec
pop
xor
movsl
dec
cmpsb
xchg
call
push
sbb
popa
orps
push
add
gs
out
test
xor
mov
mov
adc
push
insl
mov
jp
dec
pop
arpl
lahf
cmpsb
xchg
popf
dec
mov
or
ret
outsb
and
mov
int
cli
sarb
dec
xchg
mov
jecxz
mov
movsl
rolb
xor
stos
mov
jo
int
inc
gs
adc
mov
psubsb
dec
scas
popa
inc
call
pop
fidivl
test
sahf
aas
fcomi
fisttpl
jg
movsb
loopne
mov
mov
int
std
pop
pop
out
int
sti
xor
push
xor
mov
ja
jnp
pop
hlt
test
inc
push
mov
aas
ficoml
jecxz
xlat
jae
hlt
fidivrl
aas
std
cmp
mov
into
push
lret
mov
js
ja
mov
hlt
out
sub
icebp
enter
movsl
mov
shlb
lods
and
out
shlb
in
enter
or
dec
push
cmp
outsb
push
test
xor
jmp
test
xchg
fs
dec
or
push
mov
movhps
pop
bnd
loopne
int
leave
int3
cmc
ljmp
sbb
in
cmp
xchg
mov
ss
inc
push
dec
fmulp
jg
jne
sbb
scas
jno
or
pop
dec
pop
data16
lret
mov
sub
mov
and
cs
ljmp
shrb
pop
or
adc
fildll
scas
pop
mov
cmpps
lahf
ret
sbb
arpl
pop
popl
leave
fistpll
xchg
stos
sub
sub
sbb
cmpsl
shrb
xor
xlat
sahf
sub
jmp
mov
push
outsb
testl
jl,pn
and
push
out
xor
mov
lds
lret
adc
dec
call
mov
cltd
test
pop
enter
push
adc
in
xlat
and
sub
and
gs
add
in
negb
ret
xor
imul
sbb
cmp
out
shlb
jecxz
stc
lret
jmp
and
push
clc
call
cs
mov
mov
and
aam
es
jmp
or
jne
sbb
and
sub
adc
add
int3
loope
out
dec
test
outsb
lcall
shrl
push
push
cmpsb
mov
xorl
rcrl
mov
out
data16
adc
in
jbe
dec
xchg
push
scas
dec
adc
inc
lea
mov
xchg
and
sti
or
into
xchg
pop
movsl
ret
pop
jnp
cmp
mov
popf
ja
enter
adc
test
lods
inc
and
xchg
test
mov
fs
and
dec
sahf
imul
xchg
mov
stos
cmp
dec
movsb
fwait
pop
vcvtss2sd
out
push
ds
inc
movsb
jecxz
mov
lahf
mov
sbb
add
in
inc
push
jnp
mov
cmpsl
fisubs
inc
addl
enter
pop
adc
fnstenv
imulb
testl
adc
pop
std
xor
xchg
repnz
mov
cltd
pop
mov
into
pusha
cmpsl
leave
std
pop
rclb
dec
div
call
enter
loopne
pushf
push
fnstenv
divb
add
xlat
adc
pusha
push
aas
sub
pop
das
stos
lds
rcrb
ror
cltd
cmp
fnstenv
mov
lods
mov
and
es
push
fnstcw
gs
outsb
and
or
adc
dec
repnz
out
lea
mov
cmpsl
rol
ljmp
lret
lahf
push
push
push
dec
push
inc
fnsave
dec
sub
cmpsl
cmp
pop
cmp
xchg
int
jbe
push
icebp
add
loop
movsb
and
cwtl
rorl
ret
cmp
push
sub
and
jne
mov
cmp
movsl
insb
push
and
aam
out
mov
scas
dec
jnp
iret
adc
loop
test
mov
jge
pop
mov
or
out
inc
mov
aad
pop
mov
fcoms
stc
inc
xor
in
mov
add
xchg
cmp
adc
jbe
adc
mov
cmp
jl
pop
ror
xorb
into
popf
push
jae
movsl
sbb
xor
rep
inc
repnz
xor
cmpsl
jp
cmpsb
mov
mov
mov
mov
mov
jns
mov
add
xor
loope
cwtl
sti
xchg
pop
std
add
mov
out
enter
imul
rolb
test
popf
sub
xchg
cmpsl
jnp
add
pop
out
cmp
adc
push
add
insb
movsb
mov
mov
push
mov
mov
es
add
jecxz
cmp
out
imul
inc
mov
andps
mov
scas
inc
repz
sub
mov
rcrb
jo
fldcw
stos
bound
pop
mov
out
aaa
enter
push
add
add
dec
push
pop
push
pop
dec
idivb
jns
add
add
imul
je,pn
xlat
mov
out
or
in
cmp
test
das
adc
in
insl
xchg
cld
add
add
hlt
mov
jle
clc
cmpl
cmp
mov
sub
shlb
sti
rcrl
and
push
adc
clts
inc
ss
loop
sarb
add
test
mov
ror
adc
mov
pop
ss
loope
or
cltd
fdivp
pop
jl
fsubl
dec
xor
mov
adc
lods
stc
mov
cli
push
pop
and
adc
xlat
mov
fwait
test
mov
repnz
ret
sbbl
sarb
or
nop
stos
cmp
dec
outsl
outsb
cmp
stos
repz
push
sbb
jmp
scas
fdivl
je
pop
pop
jecxz
bound
int3
mov
push
movsl
aam
lds
pop
fimull
cltd
shl
outsb
add
jae,pn
adc
inc
test
mov
push
cs
lods
arpl
repnz
les
mov
pop
iret
call
subl
sbbl
fwait
adc
sarb
push
dec
jae
movsl
cmpsl
xchg
adc
into
gs
jb
addb
mov
out
je
jecxz
cltd
lcall
dec
cmp
and
xor
andl
dec
mov
xorb
jl
mov
adc
popa
pusha
test
leave
jnp
std
and
push
mov
movsl
push
mov
sub
and
repnz
out
dec
add
mov
dec
jg
pop
cmpsl
or
mov
lods
or
xchg
mov
call
ds
sub
xor
jmp
fistpll
cld
push
loope
push
cld
jo
mov
add
sbb
adc
or
adc
daa
sub
sub
xchg
cmpsb
je
aaa
in
mov
mov
add
rclb
outsb
cmc
jl
mov
psubusw
adc
test
sti
lods
sbb
xor
cmp
sbb
cwtl
mov
shlb
leave
lods
aas
cmp
push
cmp
sar
scas
sub
sbb
roll
fucomip
xlat
sub
dec
jne
mov
or
mov
add
lret
pop
xor
ljmp
cmc
jb
push
xor
push
shrl
out
cmpl
rep
mov
xor
adc
or
add
push
repz
inc
inc
or
add
pop
dec
mov
outsl
cmpsl
fdiv
inc
inc
movsb
fisttpl
jp
add
ljmp
arpl
push
sbb
or
loope
xchg
dec
mov
jnp
outsl
repnz
jo
and
mov
mov
rcrb
scas
xchg
lock
jle
add
cmp
and
mov
pop
shl
pop
sbb
test
int3
hlt
incb
add
jg
xlat
adc
and
mov
int3
sub
sub
lahf
adc
repnz
leave
mov
fmuls
roll
icebp
mov
mov
ja
add
mov
popf
jge
xor
rcr
hlt
lods
push
mov
xor
lock
outsl
dec
cld
cwtl
lock
aaa
cmp
and
push
sub
out
je
ja
scas
xchg
inc
fdivl
jg
mov
mov
sub
stos
addb
out
sub
xchg
cmp
fninit
mov
lock
out
xchg
push
jle
inc
sbb
test
inc
mov
aas
jge
ss
cmp
add
incb
int
std
repnz
mov
mov
and
int
sub
daa
pusha
sbb
sub
mov
adc
sub
sub
das
xchg
sbb
jg
mov
mov
dec
mov
cli
push
fdivr
cmp
fsts
sub
decl
lret
mov
cli
lret
and
sbb
fsubl
dec
inc
into
xor
cmpsl
mov
dec
ret
mov
mov
out
cli
pop
pop
ret
nop
xchg
les
mov
add
in
push
mov
ss
and
push
sbb
cmp
xchg
sahf
xor
jl
push
iret
lret
push
jmp
lea
lahf
mov
dec
movsl
cmpsb
in
rorl
sub
aaa
jae
pusha
jnp
movsb
mov
pusha
xchg
clc
push
data16
jb
js
adc
pop
push
xchg
jns
pop
movsb
xor
std
daa
add
adc
xor
enter
jb
mov
xchg
outsb
cmpsb
cltd
and
mov
cmpl
jl
sbb
cltd
test
adc
mov
das
nop
imul
sbb
arpl
pop
lods
pop
mov
sbb
mov
or
shlb
flds
add
jmp
cmp
int3
xlat
jl
mov
cmc
push
sbb
mov
mul
dec
out
leave
test
pop
adc
je
jbe
loopne
push
sub
das
add
push
aam
xchg
mov
cwtl
popa
cmpsl
out
jg
fildl
in
ljmp
or
xchg
mov
mov
test
rclb
call
cmpl
xor
inc
mov
inc
cmpsb
scas
add
cli
adc
mov
inc
add
mov
rcr
mov
imull
lret
in
loope
push
lock
add
adc
pop
xchg
mov
hlt
sbb
ficomps
and
pop
rol
mov
in
das
test
pop
mov
jg
xchg
adc
in
pop
dec
dec
dec
bnd
xchg
xor
xchg
jbe
out
push
xchg
shrb
xchg
push
push
adc
ljmp
lds
sub
dec
lods
xor
dec
mov
push
nop
shr
je
stos
push
lods
shr
sbb
scas
add
add
add
pop
pop
dec
push
dec
push
pop
pop
mov
call
add
addb
add
daa
sub
lcall
std
notl
add
xchg
cmp
mov
or
pusha
or
cmp
xor
inc
sbb
data16
lcall
mov
and
sub
out
xor
jmp
movsl
adc
in
adc
adc
or
cmp
test
pop
das
ret
lds
imul
cmp
out
cli
aaa
sbb
scas
jae
je
xchg
adc
cmp
xchg
mov
dec
fisubl
outsb
mov
jecxz
mov
push
enter
adc
test
insb
inc
pop
inc
outsl
jno
jb
aaa
or
adc
pop
popf
fcoms
rcr
repnz
jbe
adc
fbstp
mov
push
fdivp
lods
jae
cwtl
cmp
cli
mov
enter
ret
stos
loop
shrl
call
xchg
push
or
repnz
es
in
mov
jmp
sub
hlt
xchg
inc
pop
shr
cwtl
jle
mov
xchg
popa
cltd
push
mov
je
sarl
cmp
out
adc
and
mov
fcmovne
mov
leave
lret
adc
pusha
push
sub
stos
pushf
test
mov
test
lret
cmp
test
adc
outsb
mov
movsl
insb
mov
add
mov
out
rol
mov
mov
xchg
out
cwtl
mov
or
shl
addb
imul
cltd
addr16
lods
out
popf
or
scas
and
subb
mov
jb
sbb
outsb
add
addr16
dec
lds
fadds
lea
sahf
xchg
imul
loopne
pop
pusha
scas
out
jmp
sbb
cmp
or
test
stos
pop
dec
sbb
sahf
call
pop
dec
cmc
cmc
das
pop
out
xlat
jno
pop
test
pop
mov
cs
add
jno
lret
xor
mov
mov
mov
add
dec
das
pop
inc
xor
rcrl
fmull
or
je
mov
cwtl
xchg
ja
jae
and
pop
cmp
je
xlat
jns
rorl
xchg
nop
es
mov
jp
int3
xchg
adc
xchg
sub
jo
sub
adcl
fs
cld
cmc
sbbb
jbe
jbe
or
jg
cmpsb
inc
xchg
adc
frstor
push
test
pop
or
mov
ret
cmp
sbb
js
xchg
daa
pushf
les
dec
hlt
push
sbb
mov
loope
in
inc
jnp
dec
add
inc
ja
xchg
xor
js
xor
test
and
scas
jnp
cli
fsubrs
int3
push
orb
cmp
inc
adc
cmpsl
push
in
in
mov
mov
and
jb
call
or
push
insl
mov
jl
add
mov
cmp
adc
mov
scas
mov
lahf
js
xchg
push
mov
insb
cwtl
imul
jmp
hlt
cmp
popf
inc
jae
mov
sbb
popf
cmp
inc
push
sbb
dec
pop
lahf
ficompl
ret
inc
mov
dec
push
aas
lods
daa
test
or
cs
sahf
pusha
mov
mov
in
leave
repz
jl
outsl
mov
loop
dec
jbe
loope
iret
ret
pop
cmpl
cmp
gs
fiaddl
jp
xor
inc
cmp
sub
aas
out
and
jle
jecxz
js
mov
fldl
dec
int3
insl
xor
fidivl
cs
cmpsl
ds
sbb
xlat
xchg
xchg
mov
mov
jnp
xchg
jle
je
pop
add
jle
or
push
sbb
cwtl
adc
mov
insb
rclb
fiaddl
jo
roll
mov
mov
ret
add
cmp
jnp
cld
leave
rclb
and
mov
scas
fwait
lret
rcrb
mov
mov
pusha
mov
dec
xor
rcrl
pop
mov
cs
data16
jns
mov
xor
xchg
sub
or
lret
xchg
das
jbe
fcomi
jl,pt
lret
pushf
cmpsb
and
cwtl
dec
push
aas
mov
test
pop
mov
jle
test
adc
fs
sahf
jo
fnstcw
shlb
jl
je
lock
xlat
sub
and
push
stos
adc
daa
mov
jb
push
sub
scas
adc
dec
hlt
clc
mov
sub
cmp
cmp
ja
sbb
xchg
outsb
mov
push
cmp
jae
and
cmpb
mov
icebp
mov
mov
or
and
jae
sbb
jne
add
dec
xor
ficompl
pop
xor
shld
in
pop
mov
out
sahf
stos
sub
cmp
mov
jne
sti
fdivs
inc
fst
pop
sbbb
or
sbb
loop
repnz
pushf
sbb
lret
das
mov
or
push
es
xchg
in
ljmp
insl
pusha
repnz
pop
pop
sub
sar
dec
push
mov
push
outsb
int
cmpsl
mov
inc
xor
shl
in
lret
cs
nop
and
cmp
pop
pop
sahf
sub
enter
push
cmpl
push
movsb
cmp
inc
mov
push
mov
fincstp
fs
xchg
mov
cmp
sbb
sub
sahf
fbstp
xor
or
xor
pop
cwtl
out
sbb
sbb
cltd
fstpl
lea
adc
pop
shlb
and
repz
shll
cmp
insl
mov
lea
data16
shrb
cmp
sub
rolb
testb
out
add
add
add
push
push
push
inc
push
test
sahf
addr16
push
add
scas
pop
lret
push
mov
je
mov
in
add
push
mov
cmp
or
outsl
mov
sub
iret
fdivrl
call
pop
jl
mov
mov
xchg
sub
ja
cmp
fwait
inc
mov
cmpl
cmp
dec
adc
lea
mov
out
sbb
inc
xor
jb
add
dec
and
lahf
hlt
aas
out
pop
mov
jp
lret
btr
shrl
lcall
enter
mov
mov
inc
push
pop
popf
inc
test
and
pop
pop
mov
ds
out
xchg
int
pop
cwtl
inc
push
call
fsubp
daa
outsl
aam
inc
jmp
std
inc
in
pop
mov
jge
push
lods
inc
pop
and
test
jno
fisttpl
sub
dec
dec
loope
pop
xchg
iret
xor
pusha
shlb
aad
xor
movaps
test
push
push
test
or
mov
push
mov
movq
add
leave
or
dec
jnp
fimull
mov
jge
lret
std
fmul
cld
es
sub
cmpsl
jle
push
cmp
les
in
dec
inc
pop
enter
loopne
mov
add
pop
jmp
or
ret
lods
aas
pop
fmul
je
ds
push
ret
stc
ss
cmp
icebp
lock
inc
clc
jo
mov
cld
xchg
rolb
ficompl
in
idivl
ja
cld
cli
adc
jl
bound
inc
outsl
leave
add
fdivl
adc
xorl
jmp
orl
add
and
xchg
pop
push
adc
adc
lds
sbb
push
pop
push
sub
mov
xor
addb
fisubs
push
and
pusha
sbb
mov
addr16
jbe
add
push
popa
lods
xchg
je
mov
cs
mov
nop
cmp
into
xor
sub
hlt
and
sub
add
std
scas
jl
and
test
mov
pop
or
bound
or
xchg
filds
nop
cltd
stos
test
inc
jb
lds
incl
imul
rorl
and
inc
dec
push
push
xor
xor
gs
in
ja
cmpsb
sub
std
ds
lods
push
scas
mov
xlat
rclb
inc
sub
not
or
cmp
push
jle
mov
aam
sbb
jb
ret
std
jbe,pt
stc
mulb
and
andl
mov
in
inc
in
frstpm(287
int
enter
lds
xor
mov
jb
push
sbb
js
xchg
or
loopne
lahf
mov
push
or
ljmp
sahf
stos
outsl
lods
mov
fdivrp
shr
cmp
add
push
in
push
jg
les
insl
lret
divb
es
add
xorb
popa
jp
adc
loope
jnp
pop
out
mov
loop
popa
inc
xor
mov
loop
test
sahf
sbb
sbb
or
popa
push
jb
dec
cmp
nop
fsubrp
xor
xchg
and
add
popa
dec
inc
mov
sub
push
cwtl
lock
and
mov
pop
aam
adc
xor
push
subl
scas
pop
lods
out
pop
mov
test
stos
dec
mov
fistpl
shrl
sahf
test
sbb
jp
sbb
mov
sbb
jns
gs
cmp
cs
lods
mov
nop
adc
and
sbb
pop
sbb
call
decb
sub
adc
xchg
std
pop
and
or
mov
mov
and
cltd
add
insb
cmpsb
daa
shl
mov
inc
test
xchg
repnz
dec
in
mov
adc
mov
cli
pop
lea
test
loope
xor
mov
add
out
pop
es
or
push
test
faddl
inc
and
es
or
mov
repnz
gs
sub
cli
sbb
xlat
xchg
mov
push
addr16
aas
xchg
movsl
std
insb
dec
pop
imul
inc
adc
pop
mov
pop
xor
dec
cmpsb
jbe
mov
sub
inc
testb
out
mov
adc
cmp
adc
test
popa
hlt
push
adcb
popw
test
popa
stos
lahf
dec
mov
repz
sbb
mov
inc
cmp
addr16
push
sbbb
push
xchg
aaa
pop
lds
iret
mov
jnp
sub
test
jns
lds
push
ret
arpl
mov
pop
xor
cmc
mov
mov
cmp
mov
pusha
aam
sbb
mov
jg
test
and
fs
sub
xchg
fsubs
push
fnsave
aas
xor
lock
repz
xor
pop
sbb
movsl
push
cmp
stos
shl
scas
insl
lea
mov
movsb
lahf
jle
subl
cli
cmp
mov
imul
jecxz
jo
cmovns
mov
stc
cmp
dec
jmp
imul
pop
arpl
stos
por
out
mov
mov
or
arpl
loope
add
and
mov
bound
pop
mov
push
lcall
into
add
inc
or
push
xchg
xchg
imul
cmp
sub
mov
and
jb
int3
inc
add
jecxz
insb
add
mov
insb
arpl
mov
rolb
and
jl
iret
sti
lret
mov
xor
and
imul
dec
pop
int
loopne
fwait
mov
add
add
add
dec
inc
pop
dec
pop
pop
inc
cwtl
inc
loop
outsl
push
sbb
roll
add
je
adc
mov
addl
call
aam
cmp
mov
ret
adc
mov
xlat
cmp
and
jp
fs
inc
cld
aam
repz
adc
adc
pop
rolb
jmp
arpl
jg,pt
or
cmp
outsl
mov
pushl
hlt
in
jb
jl
loope
outsl
push
push
push
jns
push
int
in
stos
lds
testl
fwait
cmp
fisubs
out
mov
sbb
sbb
xchg
lods
test
in
fidivrl
mov
enter
pushf
mov
add
push
or
arpl
popf
pop
rcll
cmc
nop
in
test
out
and
imul
mov
repz
jnp
dec
push
adc
inc
mov
pop
cs
sbb
fdivrs
add
sar
push
sub
xchg
lret
iret
xor
jns
pop
stos
mov
pop
jp
fmull
clc
cld
add
lret
adc
fwait
out
lcall
push
inc
stos
mov
jg
lods
push
jb
sub
or
add
adc
out
add
aam
enter
adc
mov
ficomps
insb
pop
outsb
ret
ss
cmp
into
in
rcl
shrb
into
lods
push
movsl
sub
xor
out
out
or
orl
inc
sub
stc
repz
shl
jl
inc
cwtd
ret
andl
cmpsl
jnp
sbb
nop
in
push
pop
add
xchg
mov
insl
dec
hlt
sub
cmpsb
popa
pop
dec
popf
idiv
cmp
in
mov
jo
sbb
sub
shlb
jae
icebp
jno
mov
orb
mov
pop
mov
cmpsb
les
scas
pop
xor
jge
fsubrl
inc
and
fwait
dec
mov
adc
adc
popl
dec
idiv
xchg
pop
pop
stos
sub
pop
int
testl
das
adc
cmp
xor
push
push
jp
dec
mov
push
js
leave
and
jp
mov
sbb
mov
enter
outsb
data16
mov
hlt
push
adc
mov
inc
push
stc
fstpt
pop
in
push
push
sbb
cmp
filds
xchg
jns
sbbb
or
ljmp
cltd
mov
inc
cmp
les
andl
xchg
and
jno
insb
test
push
mov
lret
push
stos
mov
enter
xor
ret
push
xorb
jbe
jge
call
lds
aas
rolb
xor
sbb
mov
out
test
sub
rcrb
sbbb
fists
push
dec
mov
pushf
cwtl
adc
rcl
jecxz
out
jo
jge
xchg
inc
or
sti
xlat
push
es
imul
mov
xchg
leave
sub
lcall
push
dec
sub
out
adc
js
gs
pusha
pop
or
lret
xchg
ljmp
scas
or
leave
das
insl
sbb
pop
jle
in
dec
jbe
or
es
jno
mov
cmp
gs
ss
shlb
mov
xor
cmp
mov
fildl
and
lret
popa
ficomps
pop
call
pop
dec
out
nop
lods
add
and
pop
in
adc
nop
fstpl
incb
dec
push
lods
mov
push
ret
arpl
rcrb
inc
xchg
cld
mov
andl
adc
pop
test
in
pop
inc
loop
adc
fdivrl
lret
push
jo
shr
dec
gs
cmp
sub
fsub
clc
arpl
lea
test
loopne
mov
mov
ljmp
sbb
dec
sub
adc
mov
cltd
ds
add
loop
cmp
outsb
adc
out
cld
mov
jle
mulb
or
fstpt
or
out
adc
test
mov
pop
or
scas
sbb
inc
addb
push
cltd
rcl
jnp
mov
mov
in
cmp
and
jge
test
mov
push
popa
fistl
imul
shll
or
mov
fmull
inc
pop
jp
mov
and
popf
std
fisttps
das
stos
mov
inc
dec
sahf
jg
out
add
push
cmpsl
cwtl
and
adc
call
in
add
mov
pop
iret
mov
data16
and
insl
push
test
cmp
lcall
das
inc
and
outsl
mov
xor
test
dec
sbb
mov
xorb
sbb
mov
sub
movsl
in
adc
mov
lods
inc
mov
mov
ljmp
sub
fsubs
mov
mov
cli
sub
cmp
and
sub
jle
mov
mov
pop
daa
mov
sub
movsb
orl
andl
mov
int3
scas
cmp
stos
stos
jbe
enter
in
adc
repz
push
clc
add
jg
fiadds
jg
cltd
adc
nop
gs
int
rolb
cs
in
js
push
cmpsl
mov
stos
mov
cltd
push
into
stos
jns
push
sbb
shrb
add
cmpsb
ja
jne
xor
in
test
movl
imul
rclb
jnp
out
and
inc
pushl
fstpl
sbb
push
cmp
cmp
jp
fisubrs
xchg
les
add
xchg
enter
mov
dec
movsl
ss
scas
je
mov
scas
push
push
adc
jmp
sarl
insb
dec
and
dec
jg
mov
mov
dec
or
adc
mov
add
add
push
push
push
push
push
inc
rorl
popf
std
pusha
mov
fadds
add
xor
ret
and
nop
mov
test
popa
lea
or
dec
push
rcr
cmp
jae
inc
mov
inc
je
or
mov
mov
push
loop
sbb
add
mov
pop
aaa
mov
dec
inc
insl
negl
aaa
or
aaa
stos
pop
add
cmpsl
ss
jo
jmp
mov
xor
push
shl
ret
xchg
or
xor
sub
adc
xchg
mov
jbe
aad
mov
sub
sub
pop
divl
aaa
xor
cltd
push
ja
xor
insb
add
mov
sbb
sbb
cmpsb
push
mov
adc
movsb
mov
inc
adc
sub
call
test
push
mov
mov
nop
jmp
xor
adc
divl
fisttps
fistpl
inc
xchg
push
jg
leave
sub
subl
movsb
mov
lods
rclb
fsubl
pop
push
movsl
int
jp
adc
lcall
dec
cmp
xor
outsb
cld
imul
push
lret
mov
or
sbb
pop
imul
ret
int3
icebp
jo
sub
loopne
lods
repnz
adc
test
dec
cmc
xchg
movb
cltd
mov
gs
dec
cmpsb
mov
negb
cwtl
ds
push
in
out
mov
xchg
fwait
imul
inc
rcl
sahf
ja
ss
addr16
loopne
sbb
and
movsb
pop
imul
ss
andl
dec
cmp
cwtl
and
shr
cli
in
adc
inc
sub
pop
lea
mov
imul
or
rcrl
inc
pop
ja
xchg
test
outsb
cmp
push
and
imul
clc
es
loop
imull
cmp
cmp
popf
mov
sbb
fwait
pop
test
add
cltd
shrl
std
xor
fdivrp
mov
jno
xchg
dec
mov
inc
ret
fcompl
movsb
jne
mov
add
popa
push
jno
mov
fs
mov
clc
cld
fsubl
dec
xor
sbb
pushf
push
and
cmp
sub
adc
lds
push
sar
sbbb
or
aas
das
jbe
adc
fimuls
outsb
lcall
in
jbe
pop
rcl
jo
dec
unpckhps
jl
nop
add
inc
adc
shrl
pop
arpl
lahf
or
in
xor
mov
push
sub
repz
xchg
ss
cld
adc
xor
dec
sub
mov
fdivr
or
movsb
push
jo
stc
mov
add
ss
adc
inc
sub
jl
jge
bound
in
sub
mov
fidivl
in
movsl
leave
inc
orl
dec
lret
mov
test
and
xchg
out
test
test
adc
frstor
pusha
aad
or
xor
xchg
pushf
xor
xchg
cmpsb
or
aas
mov
and
test
loopne
mov
mov
jg
call
xorl
mov
mov
cmp
shlb
xor
adc
popf
xor
push
pushf
and
roll
imul
nop
add
add
lret
enter
stos
adc
shll
sbb
or
and
mov
popf
nop
iret
andb
sahf
sbb
or
sub
xchg
xchg
lcall
mov
call
xchg
pop
push
dec
sub
fwait
cltd
out
and
cmp
bound
jmp
les
push
lret
mov
ret
or
iret
pop
out
jmp
test
ror
lock
movsl
or
es
movsb
sub
call
mov
shl
add
add
hlt
pop
cmpsb
inc
test
outsl
insb
rorb
sub
stos
addr16
mov
and
or
jnp
aaa
sar
pop
movsb
repz
sub
test
lcall
in
inc
or
jo
ret
xchg
pop
int
cmp
js
push
mov
jmp
mov
pusha
sbb
jns
and
mov
lret
gs
dec
lods
sbb
jl
ret
lahf
or
lea
cmp
jecxz
movsb
jl
notl
jnp
pop
imul
dec
mov
or
fldcw
sub
popa
cltd
icebp
and
and
in
push
cmpsb
dec
lahf
pop
or
cwtl
stc
cld
mov
in
sbb
outsl
loop
and
mov
mov
mov
adc
in
cmc
out
fsub
fwait
in
shll
jo
arpl
xsha1
cmpsb
or
ljmp
stc
mov
cmp
xchg
enter
aas
lock
jecxz
mov
je
mov
mov
addr16
push
xor
push
mov
push
inc
pop
pop
dec
or
les
jns
out
sub
adc
scas
ja
enter
daa
or
sarb
adc
cmp
fyl2x
cmpsl
dec
sub
jle
cmpsb
out
and
push
in
fs
mov
testb
stc
sbb
push
aaa
xor
in
mov
jecxz
pop
pop
dec
xlat
push
mov
call
bound
sub
daa
xor
jl
sub
inc
fstpl
pop
inc
test
scas
dec
jns
sub
pop
jg
xchg
xchg
popf
dec
call
mov
loopne
shl
lahf
push
sbb
push
ror
lea
shrb
inc
jmp
dec
xchg
pop
scas
mov
push
cld
mov
dec
sub
cmp
insb
lods
or
imul
aaa
add
mov
xchg
sub
push
clc
pop
outsb
orl
movsl
in
push
stc
xchg
sub
add
add
add
push
push
pop
push
pop
pop
xchg
stos
mov
in
out
fiadds
add
mov
mov
sahf
xchg
repnz
push
pop
out
sbb
push
in
std
fiaddl
js
divl
sub
cmp
shr
or
mov
add
pushf
outsl
pop
lahf
cmp
xchg
mov
mov
mov
sub
js
arpl
fbld
test
pushf
out
mov
or
fildl
mov
xchg
push
into
mov
iret
xor
sub
sub
push
adc
sub
xchg
outsb
gs
fs
sets
addb
or
xor
mov
pusha
iret
jne
mov
rolb
cmp
inc
and
cltd
aaa
push
sub
fcomps
push
insb
cwtl
imul
push
xor
cmc
or
sti
pop
icebp
call
or
bound
test
data16
push
jbe
call
lret
mov
aas
xchg
jg
pop
adc
cs
dec
popf
scas
test
scas
add
nopl
mov
fucomi
lods
stc
mov
push
add
loop
sub
js
jecxz
jle
call
mov
shll
mov
in
mov
jmp
or
pop
pop
sub
mov
lret
push
int
pop
adc
cmp
inc
push
mov
inc
push
dec
loop
inc
adc
jg
adc
outsb
mov
movsb
mov
pop
aas
xchg
jnp
pop
cmp
out
or
xchg
push
add
cmp
jb
imul
ret
lret
popf
jecxz
jp
push
xlat
psrlw
jg
pop
cmp
jmp
mov
sub
lahf
push
test
jae
mov
out
rcrb
xchg
xchg
xchg
enter
jns
inc
push
mov
mov
pop
inc
sahf
cld
mov
cmp
pop
jl
mov
outsl
xor
mov
lds
push
cltd
cltd
ss
inc
xchg
inc
test
scas
fs
cmp
icebp
xchg
rcrl
fmul
ficoml
adc
push
loop
lods
cmp
add
je
fwait
sahf
xor
lcall
jnp
mov
and
or
mov
aad
pop
dec
pop
sbb
mov
repz
neg
lods
sub
out
ljmp
cmp
jl
cmp
into
mov
in
insb
jno
cmp
lret
cmpsl
sahf
mov
jmp
mov
fistl
xchg
xchg
cmp
aas
mov
shll
xorb
dec
fdivrs
add
mov
mov
sbb
push
pop
gs
xchg
pop
mov
outsl
pusha
cmp
int
icebp
jmp
dec
and
sbb
add
xor
subl
adc
rolb
hlt
inc
cs
ja
inc
add
cmp
sub
fistl
mov
cs
ja
adc
inc
pop
dec
mov
cli
in
fadd
dec
xchg
adc
fisubrs
mov
adc
jecxz
pop
mov
add
sbb
test
mov
ret
leave
pusha
arpl
mov
sti
push
loop
mov
jne
leave
mov
mov
xor
sarl
mov
std
fnstcw
add
ljmp
fsubp
mov
lea
int3
inc
sub
ds
leave
sub
mov
adcb
sub
aas
in
outsl
dec
inc
jnp
mov
xchg
push
mov
xor
outsb
arpl
test
add
sti
test
bound
loop
jne
xchg
push
mov
pop
and
mov
jl
ffreep
push
stc
hlt
stos
aaa
adc
nop
mov
pop
scas
stos
and
fnsave
cmp
ljmp
jg
add
cmp
jl
lret
loopw
jno
jbe
repz
dec
in
xor
or
pop
mov
mov
mov
nop
rorl
mov
sub
pop
push
bound
fcoml
inc
movsb
mov
dec
mov
mov
xchg
sub
movsb
int3
cmc
inc
sub
lea
pop
ret
addr16
push
call
ds
fwait
or
int
and
xchg
add
dec
test
inc
test
dec
push
push
lock
xor
sti
xor
addl
loope
push
jae
or
push
add
adc
mov
ja
ret
xorl
add
addl
movsb
sbb
fisubrl
xchg
aaa
mov
push
add
mov
dec
int
ret
mov
inc
or
pop
xlat
pop
and
sub
jmp
fnstenv
sti
xor
sbb
das
lea
cmpsl
ljmp
lcall
inc
rorb
pop
arpl
imulb
outsl
xor
mov
pop
lea
sahf
cltd
sbb
aas
in
movsl
jae
je
pop
lds
dec
shlb
adc
loope
cmp
pop
js
sub
push
xchg
cmp
ss
push
cltd
adc
mov
test
mov
das
and
or
mov
xor
mov
add
pop
push
stos
mov
addr16
decl
aam
repnz
xchg
pop
inc
jl
pop
mov
pusha
xchg
in
fcmovb
aaa
test
lcall
andl
in
pusha
subb
imul
imul
loop
mov
ss
dec
pop
dec
xchg
xchg
nop
cltd
popf
test
ss
mov
ficoms
fsub
mov
mov
aad
mov
in
sarb
dec
sub
sbb
rcr
fwait
addb
lahf
mov
ret
jl
out
scas
add
pop
jmp
call
ret
xor
out
xor
out
dec
decb
sub
cmc
jo
insl
aam
fld
cld
sti
lea
jnp
nop
gs
jbe
and
adc
and
jb
add
add
add
dec
inc
push
push
pop
push
dec
pop
idiv
bound
addb
add
ficoml
icebp
arpl
mov
mov
mov
add
test
mov
fiadds
push
push
mov
push
icebp
dec
bound
test
in
inc
inc
mov
mov
out
sbb
das
loope
cmp
insb
fnstcw
fidivrl
cmp
jecxz
xchg
je
test
inc
aam
mov
cld
and
enter
mov
das
pusha
div
pusha
jb
cmp
jmp
mov
dec
adc
sar
jg
and
andl
adc
ds
add
cmp
in
mov
add
arpl
js
in
pop
test
stos
mov
pop
in
mov
and
xchg
iret
xchg
mov
and
cmp
hlt
pop
push
jo
aas
dec
xchg
mov
push
and
adc
and
push
adc
adc
es
or
cwtl
inc
sbb
sbb
mov
push
xlat
push
cmp
loope
or
out
dec
mov
or
pop
test
pop
mov
stc
cmpb
cmovbe
shlb
mov
pop
jg
and
insl
adc
sti
or
popf
aam
xor
iret
push
jle
movsl
lock
outsl
popf
jecxz
xchg
mov
jns
or
or
add
inc
ret
in
and
mov
mov
xchg
adc
cmp
mov
inc
aaa
test
rorl
adcb
rdpmc
int
ret
lahf
cld
pushf
inc
repnz
iret
add
jle
xor
in
inc
loope
imul
inc
cwtl
jge
jne
fwait
aam
push
xchg
inc
mov
inc
sbb
push
dec
add
enter
sbb
sbb
push
ret
inc
data16
adc
and
jb
adc
shrl
aam
cmp
mov
sbb
cmp
sti
cmpsb
adc
mov
stc
or
shlb
ds
sbb
fwait
adc
lods
cmpsl
pop
mov
pop
cli
xchg
scas
gs
mov
test
out
pop
dec
lea
adc
icebp
popa
ds
test
push
lahf
scas
adc
aaa
lock
lock
stc
lock
cmp
ret
aas
sub
sub
adc
xor
xchg
ja
daa
shrl
cld
mov
out
push
mov
cmp
faddl
adc
inc
mov
repnz
add
jl
gs
mov
pop
fistps
pusha
mov
jb
les
sbb
fisttpll
and
mov
jbe
jle
fsubs
push
add
push
js
sub
cli
lahf
andnps
sub
cs
and
add
jl
ds
int3
stc
lret
pop
and
movb
pop
xchg
push
in
orl
cmp
push
cmp
pop
cmp
dec
cmp
mov
stos
notl
pop
sbb
push
addr16
pop
into
fisubs
loope
iret
je
and
pop
or
push
mov
inc
xor
in
jle
or
cltd
mov
ds
imul
mov
fsub
pusha
jge
push
mov
mov
call
dec
dec
sbb
std
mov
mov
sar
or
std
push
xor
push
mov
sbb
es
push
mov
mov
push
cmp
sar
jle
mov
add
imulb
lea
add
mov
xorl
inc
ja
add
dec
jecxz
test
addr16
repz
mov
pop
mov
or
cmp
sbb
inc
or
jl
jo
aaa
or
sbb
inc
cld
pop
pop
push
repnz
push
xor
and
scas
jecxz
ljmp
fs
pop
scas
fs
fst
cmpsb
cld
push
test
les
xchg
sub
jbe
fistpll
mov
cmp
fwait
and
in
mov
xchg
loope
adc
xchg
cmp
repz
sub
xchg
mov
xor
mov
sub
fists
and
mov
jnp
pop
repz
jnp
dec
and
xlat
mov
mulb
cmpsl
sbb
pop
iret
cmp
cmp
imul
sbb
int
cmp
jnp
iret
pop
rcll
in
lea
ds
daa
mov
scas
pop
push
popa
test
aaa
in
mov
jmp
fmull
das
cmova
inc
adc
sbb
pop
out
out
cmpsl
sub
xchg
psubd
push
xchg
fdivs
mov
das
loopne
dec
sub
iret
iret
stc
sbb
lret
fistpll
loope
mov
lock
jno
dec
pop
dec
bnd
aam
icebp
daa
sub
mov
lret
fidivrs
xor
fsubr
or
ret
mov
sub
ljmp
lret
dec
push
pop
push
fidivs
in
push
ja
pop
push
push
je
mov
outsl
daa
pop
sub
pop
rcrl
sub
jb
aam
jnp
clc
loop
pop
icebp
inc
mov
mov
aad
aad
test
das
xor
push
in
xor
pusha
jmp
scas
sbb
xchg
shl
xor
xlat
or
call
jg
jne
sarl
and
gs
imul
pop
ret
xchg
jbe
xor
push
in
xchg
into
sub
jmp
mov
scas
cs
stos
out
testl
mov
insl
xchg
test
pop
addr16
outsb
iret
pop
pop
les
jge
enter
stos
lds
jg
sub
inc
lcall
sub
call
outsb
test
stos
pop
pop
mov
mov
sbb
add
shl
scas
mov
pop
out
out
sbb
js
inc
push
sahf
adc
adc
es
les
lcall
add
add
inc
pop
inc
pop
pop
pop
mov
push
mov
or
movsb
bnd
add
xchg
std
jmp
addr16
pop
inc
inc
mov
inc
outsl
sbb
popa
mov
dec
shll
inc
lods
sub
movsb
cmp
movsb
jp
adc
jp
push
aad
lret
ljmp
test
fs
clc
movsb
or
sub
and
sti
inc
imul
cmp
in
xchg
cmp
out
popf
push
into
mull
jmp
xchg
fs
pushl
jge
mov
sti
pop
mov
or
jns
mov
imul
in
or
mov
lods
jae
mov
xor
imul
ja
push
mov
popa
jb
shl
sti
mov
sub
scas
data16
push
cmp
int
pop
xchg
mov
pop
sti
pop
aad
add
loope
popa
shlb
push
mov
jmp
iret
aam
shrl
adc
mov
ljmp
mov
mov
inc
stc
xor
inc
and
add
icebp
xchg
lahf
mov
cmc
mov
push
fcomip
pusha
out
jae
imul
divl
lock
sbb
sahf
repz
stc
std
cmpsb
cwtl
fsubrl
pop
push
push
pop
movsb
inc
decb
inc
data16
pop
mov
insb
jne
pop
jbe
clc
jb
pop
imul
mov
aaa
mov
ss
mov
add
jb
stos
sub
mov
scas
inc
dec
sub
inc
stc
sbbb
mov
scas
bound
dec
xor
in
xchg
dec
cmpsb
mov
sub
sub
lcall
jmp
sarl
xchg
orl
aaa
ljmp
in
adc
sbb
mov
mov
loope
adc
syscall
xlat
data16
xor
adc
push
jmp
ljmp
pusha
aaa
xor
sti
ror
push
push
pop
adc
jo
popa
shlb
mov
cmpsb
pop
xchg
mov
xchg
add
shl
ret
sahf
int3
ret
es
pop
sbb
pop
push
roll
std
sbbb
add
xor
xchg
or
arpl
fisubl
movsl
sub
mov
mov
push
imul
mov
in
icebp
push
ljmp
push
jecxz
mov
cmp
xor
pop
pop
mov
jmp
clc
cmp
ljmp
inc
mov
mov
adc
xlat
dec
loop
int
jno
div
xlat
jb
repnz
jnp
or
mov
popf
inc
and
decl
icebp
sbb
inc
mov
mul
mov
fwait
cmpsb
fmull
popa
mov
fisubrl
or
add
adc
mov
rol
shr
adc
test
ss
xlat
jge
cmp
add
out
add
cmc
lcall
stos
cmp
push
sbb
or
roll
mov
jmp
subb
add
pop
addl
and
das
shrl
push
add
push
and
enter
sub
inc
jnp
push
pop
lret
inc
sbb
xor
xchg
call
lods
jnp
gs
mov
mov
sahf
iret
mulb
mov
test
pop
jl
jg
je
fcompl
mov
cmp
mov
decl
sahf
mov
xchg
das
enter
clc
push
stos
inc
inc
dec
notl
mov
xchg
xor
xchg
rorb
dec
scas
adc
mov
ljmp
xchg
adc
test
mov
out
leave
adc
sub
mov
stos
jb
lret
and
push
lds
inc
int
cmp
xor
clc
mov
insl
xchg
test
dec
stc
lret
inc
icebp
sbb
adc
sbb
cmp
pop
inc
test
js
cli
and
nop
push
mov
in
mov
cmp
and
arpl
adc
and
test
xor
jmp
sub
arpl
je
lahf
sub
int3
xor
ljmp
test
ss
sub
leave
lods
xor
add
pop
mov
mov
or
push
fsubl
push
sbb
push
adc
mov
push
mov
push
pop
je
loope
pushf
test
push
les
iret
dec
and
xlat
xchg
clc
out
mov
ljmp
repnz
mov
fnstenv
xchg
jmp
xor
mov
stos
int
cli
fnsave
cmc
js
mov
in
imul
and
shrl
popf
in
add
inc
clc
xor
mov
sti
push
leave
jns
scas
mov
push
iret
cs
mov
dec
popa
scas
inc
push
popa
int3
mov
jmp
pop
pop
adc
push
jmp
jnp
aaa
cmp
adc
xor
xor
icebp
imul
in
sub
daa
dec
nop
adc
xor
xchg
or
in
mov
mov
popf
ljmp
and
xor
inc
push
outsb
jnp
lods
xor
stos
xchg
fsubs
mov
jbe
pop
inc
stos
xchg
mov
jmp
xchg
jae
dec
insl
pshufw
leave
push
adc
sahf
dec
imul
push
jbe
jne
push
cmc
cmpsb
data16
inc
lds
push
call
jge
aaa
aas
subps
push
mov
aam
pusha
jb
insb
inc
out
mov
jae
cmp
dec
call
mov
pop
inc
pusha
aad
inc
std
ss
and
xor
xor
mov
lret
sub
call
shll
adc
jae
mov
aas
add
dec
loopne
or
dec
xor
aad
pop
rcrl
je
jg
imul
out
mov
ret
movsl
repnz
in
pop
pop
jb
add
add
add
dec
push
inc
push
pop
push
pop
pop
ss
imulb
sti
xchg
je
add
addb
add
add
movsl
pop
push
imul
bound
not
cmp
data16
fstpt
sub
cmp
mov
sbb
sub
packsswb
dec
or
mov
xor
cli
jnp
and
dec
mov
xlat
cmp
repnz
jge
js
inc
subl
shll
xchg
pop
lcall
decb
xor
lock
xchg
jo
fdivr
cltd
nop
pusha
pop
aaa
fistl
shlb
cld
ds
popf
loope
jo
add
mov
and
mov
pop
fmull
dec
mov
roll
xchg
xor
inc
es
xchg
xor
std
push
es
gs
dec
adcl
xor
int3
push
test
xor
sahf
fwait
dec
cmp
add
sbb
outsb
push
icebp
ja
push
mov
jae
or
inc
mov
cltd
sarl
mov
and
mov
out
ds
pushf
cwtl
and
orb
push
pop
xor
mov
gs
stos
and
mov
cmp
xchg
les
cmp
push
ds
lods
mov
cs
inc
xchg
mov
xor
loopne
push
jecxz
subb
cmpsl
stos
shrl
fistl
inc
xor
in
scas
hlt
movsb
inc
pop
sub
fstpl
pop
jnp
ljmp
iret
or
in
mov
sti
imul
xor
es
je
sbb
popa
push
cmp
or
sahf
out
dec
xchg
sub
fs
or
dec
movsl
sub
push
dec
xor
aaa
es
xchg
and
std
pop
adc
flds
test
aam
cmpsl
jp
cmp
cli
stos
push
xchg
dec
dec
mov
jp
adc
lds
or
or
shlb
xchg
xor
inc
mov
and
decb
movb
pop
aad
int3
jmp
or
cwtl
fpatan
jae
lods
mov
adcb
pop
lods
cwtl
xor
aaa
jg
mov
imul
mov
jle
push
adc
movsb
pop
pop
sbb
mov
adc
ds
inc
jmp
cmpsb
ficoml
mov
jns
push
mov
adc
mov
shl
out
inc
mulps
fs
pop
sbbl
outsb
daa
lret
call
jmp
and
orb
fs
sub
push
outsl
xchg
dec
repnz
xor
mov
jno
adc
scas
fnstsw
jg
sub
lcall
cmp
lahf
and
dec
push
inc
es
adc
push
enter
ficoml
mov
insb
mov
outsb
daa
loop
sub
mov
popf
lcall
hlt
sbb
mov
ja
popa
je
daa
pop
lods
and
jae
mov
mov
or
test
mov
add
xchg
outsb
aam
mov
in
jmp
push
loopne
jge
dec
push
dec
mul
addr16
mov
xchg
adc
sub
mov
dec
js
sti
xlat
ret
mov
pop
mov
out
testb
test
addr16
xor
daa
arpl
ss
sub
jle
adc
std
es
aam
nop
sarb
mov
cmp
mov
xchg
sbb
clc
add
or
loopne
lret
xchg
add
fcomip
push
out
cmp
mov
jl
mov
pop
and
orl
hlt
imul
mov
sbb
iret
mov
das
xchg
adc
or
xchg
aam
sub
mov
testb
add
push
lea
push
push
clc
shrl
sbb
ret
in
jb
or
add
fnclex
push
fcmovu
or
rorl
mov
or
test
mov
pop
push
popa
dec
mov
dec
sbb
in
test
pop
cwtl
mov
add
mov
call
lods
add
push
aam
clc
xorb
jbe
movl
mov
add
cmp
dec
scas
and
push
std
daa
push
sbb
loop
sub
sub
std
or
xchg
jl
addl
pop
out
sub
add
mov
fstps
add
in
cli
add
icebp
pop
jb
cmp
in
jge
jle
sbb
repnz
int3
inc
hlt
push
movl
xor
icebp
idivb
pop
out
pop
xlat
jo
pop
popf
lock
cmpsb
std
xchg
sti
xor
pop
leave
clc
or
push
sbb
fdivs
mov
js
shl
push
cmp
sbb
push
xchg
insl
cmp
pop
int3
xor
cmp
adc
les
mov
adc
leave
outsl
add
add
cwtl
out
movsb
xor
daa
ja
push
cmc
fisubl
jp
inc
adc
push
adc
loopne
lret
adc
int3
xchg
inc
pop
xor
aas
push
xchg
inc
cwtl
in
data16
cmpsb
cli
sar
in
mov
xchg
clc
dec
insl
sti
cmp
test
sbb
mov
ds
mov
jae
xchg
cmp
dec
loopne
std
cmp
je
inc
outsb
pop
bound
xor
cmp
add
test
mov
pop
insb
adc
aam
jl
pop
push
push
into
leave
mov
popa
or
imul
ret
incb
jbe
mov
mov
nop
jge
int
gs
jmp
cmc
cs
int
cs
jb
and
imull
inc
stos
fsubr
push
aad
hlt
movsb
bound
lret
cmp
pusha
movsl
pusha
mov
icebp
or
jg
sub
add
add
add
inc
push
dec
inc
pop
pop
dec
push
dec
push
enter
adc
add
add
sub
andb
mov
stc
jmp
inc
cmpsl
in
add
stc
call
pusha
mov
xchg
mov
shlb
dec
notb
addl
cmovbe
jge
dec
push
pop
and
sti
and
test
jae
xor
add
pop
cmp
cld
movsb
mov
add
scas
xchg
shr
dec
out
inc
fisubrl
or
mov
clc
lock
fsubs
cmp
jno
inc
pushf
lock
sbb
lret
in
xchg
sti
jno
adc
mov
inc
aas
pop
std
xlat
jge
or
inc
adc
aam
mov
xor
imull
adc
fprem1
adc
push
mov
cmp
push
lods
sub
leave
shll
jb
data16
pusha
mov
fimuls
bound
cmpb
push
aam
or
imul
int
mov
mov
mov
pop
daa
or
adcb
int3
int
cltd
call
push
inc
imul
xchg
xchg
pop
cmp
daa
imul
inc
jo
cmp
mov
and
idiv
aaa
mov
sbb
repnz
test
pop
and
call
ds
jg
imul
xchg
fwait
in
mov
movsb
iret
push
mov
addr16
mov
hlt
outsb
aad
rcr
cmpsl
mov
loop
jmp
aaa
or
outsb
and
or
js
outsl
sub
in
push
sub
hlt
cmc
ja
mov
or
arpl
mov
sbb
mov
jge
je
push
and
dec
inc
gs
xchg
mov
gs
sahf
es
mov
test
es
inc
arpl
mov
jecxz
push
fwait
xchg
jno
fimuls
xor
popf
push
mov
fwait
inc
cmpsl
roll
lock
stos
notb
leave
adc
cmp
repz
inc
inc
int3
int3
mov
jne
cmp
jns
aam
aaa
or
cmpsl
add
inc
mov
jbe,pt
shl
pop
in
es
rolb
imul
jne
mov
push
mov
shlb
mov
or
xchg
cmpsl
jecxz
jmp
aam
icebp
pop
pop
cmpsb
shl
mov
mov
xor
ret
mov
dec
mov
test
data16
pop
aaa
dec
sub
dec
test
insb
iret
aam
push
fnstenv
and
or
mov
or
xchg
sbb
cmpsb
ficoms
push
fisubrl
xchg
xor
sbb
data16
inc
mov
aam
dec
lcall
sub
dec
js
fildl
push
cmpsb
insb
mov
nop
shrl
testl
loop
lcall
dec
cmp
aad
dec
ja
lods
test
popf
mov
xlat
bound
pop
pop
cmp
int
stos
dec
mov
mov
cmp
inc
pop
adc
ret
push
nop
lods
out
and
adc
out
idivl
imul
sahf
sbb
loope
loopne
sbb
call
out
adcb
mov
pop
or
jns
sti
sub
cli
fmull
inc
ficoml
hlt
inc
pop
fmull
inc
aad
lret
sub
cmp
aad
pop
xor
push
mov
jecxz
adc
pop
mov
inc
cmp
sarb
clc
loope
mov
add
shrl
into
jmp
xchg
test
mov
mov
push
lds
add
cmp
fldt
sub
or
xor
cmp
shlb
stos
fadd
cltd
ficomps
cmp
push
sbb
or
lock
movsl
pop
scas
mov
push
rcrb
push
inc
add
xchg
xchg
aaa
or
lcall
xor
pop
or
fwait
cs
in
jmp
in
and
fcmovb
push
dec
icebp
xchg
push
jnp
mov
pop
ljmp
lock
out
clc
inc
inc
add
aad
clc
jae
ljmp
fildll
ja
ljmp
or
dec
inc
xchg
shl
jo
fmuls
push
mov
addr16
push
movsb
repz
jle
mov
sub
movsl
push
mov
xchg
movsl
imul
inc
les
movsb
in
sti
cmp
pop
jecxz
inc
rorl
xchg
shll
cmp
imulb
dec
lret
xor
shll
fs
in
cmpsb
add
cmp
mov
ret
xor
jle
xchg
add
xor
push
push
pop
and
or
and
fsts
ret
das
orl
adc
jmp
sub
mov
aad
loop
xchg
shll
pcmpgtw
jp
int3
jmp
or
mov
inc
aas
xchg
out
adc
outsl
rcl
cmpsb
aas
stos
jecxz
sbb
movsb
mov
lods
and
inc
fprem
push
push
jbe
mov
xor
pop
cli
outsl
dec
jb
fiaddl
and
sahf
mov
inc
loopne
dec
adc
pusha
jg
mov
addr16
add
divb
divb
jnp
mov
dec
lea
outsl
pop
cwtl
fs
sahf
mov
push
mov
and
data16
xchg
and
imul
fldenv
xchg
data16
xchg
sbb
dec
lahf
jecxz
sub
jl
inc
repz
sub
push
mov
push
mov
cs
sbb
lea
lods
fmull
int3
lret
mov
dec
sub
in
dec
lret
cmp
adc
in
in
sahf
into
mov
xor
icebp
es
andl
lods
cltd
push
jnp
add
push
dec
push
test
andl
mov
xor
dec
inc
push
push
test
ss
das
aaa
icebp
sbb
jno
xlat
ljmp
xchg
dec
outsl
dec
push
ja
shl
jbe
sahf
cwtl
into
je
and
loop
add
mov
mov
or
dec
add
add
add
movl
cmp
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
cwtl
mov
xor
add
mov
mov
xor
lret
ret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
ljmp
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
fs
decl
mov
test
add
xor
add
mov
or
inc
mov
popa
mov
cld
inc
cmp
lea
and
incl
mov
cld
add
xchg
sar
inc
incl
mov
xor
add
nop
inc
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
in
inc
call
add
incl
out
aas
call
add
add
test
wrmsr
jae
add
mov
add
add
mov
addl
mov
mov
dec
nop
mov
fadds
add
lea
pusha
push
incl
call
mov
mov
cld
mov
add
cmp
mov
mov
push
nop
incl
cld
add
mov
cld
push
nop
inc
add
add
in
xor
add
movl
test
ljmp
int
sub
add
filds
cmp
je
movl
jne
mov
cld
js
cmp
inc
call
add
add
add
xor
inc
add
mov
add
fmuls
cld
call
decl
add
push
es
inc
mov
decl
mov
call
inc
mov
add
mov
cld
mov
call
sub
cld
movb
xor
push
inc
mov
in
inc
lea
dec
cwtl
mov
or
rorl
call
add
jge
mov
cld
lea
call
push
incl
mov
xor
add
cmp
jne
movl
add
mov
cld
test
mov
xor
test
mov
mov
mov
add
add
mov
add
push
mov
cld
sarb
pcmpeqw
xor
lea
add
cmp
mov
test
clc
pushl
lea
int3
inc
call
jne
xor
jmp
mov
mov
incl
pushl
aaa
mov
jmp
mov
mov
cld
clc
ret
test
pop
xchg
add
inc
decl
and
add
push
jbe
mov
or
inc
enter
inc
mov
int3
add
cmp
rorb
inc
add
fadd
rolb
inc
fmull
inc
test
cwtl
clc
xor
inc
cmp
pushf
mov
test
clc
dec
inc
mov
pushf
rol
movsb
incb
inc
mov
test
clc
pushf
inc
decl
push
cld
jge
cmp
add
jmp
les
mov
lock
clc
inc
add
jge
xor
cmp
paddb
mov
test
dec
test
pop
xor
add
add
psraw
sub
mov
lock
shl
rolb
movl
jmp
pushf
inc
mov
xor
add
mov
enter
xor
add
sub
cmp
fmuls
test
test
cmp
pushf
xor
add
inc
dec
cmp
sarl
inc
jmp
mov
dec
xor
add
add
dec
test
out
rolb
add
dec
mov
mov
ret
xor
add
add
dec
inc
mov
ror
add
scas
mov
xor
xor
add
mov
clc
rol
mov
mov
dec
jbe
mov
call
rdpmc
roll
add
inc
rorb
jmp
inc
inc
mov
clc
test
clc
lret
inc
into
mov
clc
enter
sub
ret
mov
addr16
clc
add
loopne
dec
into
mov
or
inc
push
mov
in
cmp
ja
mov
inc
cwtl
mov
clc
mov
xlat
lret
inc
into
mov
in
scas
lret
mov
mov
sub
mov
mov
clc
loopne
push
lret
mov
adc
jb
add
in
sub
cmp
mov
mov
add
mov
in
into
dec
xor
roll
xor
sub
add
mov
inc
xor
add
inc
xor
sub
test
clc
enter
incl
jmp
mov
inc
mov
cwtl
lret
xor
mov
lea
xor
add
inc
dec
mov
push
mov
or
dec
inc
xor
push
mov
add
inc
decl
add
inc
mov
cwtl
add
add
pushl
int3
xor
add
mov
call
mov
add
mov
in
ret
iret
enter
in
or
adc
push
dec
inc
mov
jb
mov
cld
scas
orb
movb
push
push
xor
mov
call
mov
in
jge
mov
int3
add
xor
dec
pushf
xor
add
mov
rolb
mov
xor
orb
dec
leave
mov
rolb
add
xor
rorl
jb
add
clc
inc
jb
mov
cmp
shrb
clc
add
cmp
inc
adc
inc
test
mov
cld
orl
jbe
mov
dec
mov
mov
mov
or
dec
int3
xor
add
mov
xor
add
adcb
add
inc
mov
xor
dec
mov
hlt
add
push
inc
dec
sar
shl
lret
mov
adc
inc
and
cmpl
cmpb
mov
cmp
jne
mov
mov
rcrb
or
dec
inc
add
or
test
xchg
mov
movsl
inc
cmp
pushf
orl
mov
into
decl
push
lret
inc
into
decl
push
into
call
lret
add
add
mov
clc
inc
inc
mov
push
push
add
mov
cld
mov
into
rorb
xor
jne
call
mov
mov
call
add
rolb
add
add
inc
push
cmp
mov
test
clc
test
addb
jmp
in
or
xor
hlt
mov
xor
add
inc
sbb
pushf
inc
add
movsl
test
clc
incl
cmp
push
movsb
jne
push
clc
test
cmp
les
inc
push
aas
sbb
dec
add
inc
add
enter
add
add
out
sbb
dec
mov
sub
mov
add
cmp
or
incl
mov
mov
lret
inc
into
mov
int3
scas
push
mov
call
sub
mov
mov
cmp
pushf
mov
faddl
test
mov
in
ret
add
add
mov
in
ret
mov
in
inc
rol
sar
or
add
add
test
clc
lret
inc
into
cmp
pushf
scas
mov
inc
cmp
ja
mov
mov
clc
mov
mov
in
lret
ret
into
mov
scas
cmp
add
jmp
mov
mov
inc
enter
xor
add
cmp
shufps
add
dec
sub
cmp
ja
mov
lods
mov
inc
dec
mov
lret
rol
or
inc
scas
xor
add
add
inc
mov
inc
lret
mov
clc
lret
scas
ret
mov
hlt
push
scas
sub
mov
add
mov
movsb
inc
dec
cmp
pushf
xor
rcrl
sar
rolb
xor
jmp
mov
xor
mov
rolb
test
cwtl
shll
mov
xor
add
mov
add
inc
xor
rdpmc
roll
loopne
push
in
mov
adc
jb
add
jmp
mov
test
dec
dec
xor
add
dec
mov
dec
in
xor
xor
add
jbe
mov
test
dec
mov
loopne
inc
add
rol
scas
mov
mov
hlt
dec
inc
mov
loopne
lret
test
clc
scas
inc
mov
fdiv
roll
cwtl
cmp
pushf
cmp
inc
mov
inc
dec
xor
add
loopne
dec
rorl
add
lock
ret
xor
mov
rolb
xor
call
enter
mov
fmul
push
dec
xor
ret
xor
dec
jne
mov
cld
loopne
push
add
incl
incl
mov
lock
lret
add
xor
inc
scas
mov
shl
inc
decl
call
ud0
adc
inc
xor
lock
add
ud0
sbb
xor
sub
push
add
mov
cld
inc
xchg
mov
xabort
icebp
mov
lret
or
dec
pop
or
jb
add
inc
mov
fadd
ret
add
int
sub
add
inc
inc
mov
cld
mov
mov
clc
push
pushl
movb
int3
or
lea
insb
incl
push
movb
leave
les
in
call
inc
cld
mov
cld
xor
std
mov
clc
test
je
mov
cld
add
add
faddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
in
add
push
and
incl
fmull
inc
nop
ljmp
lea
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
js
inc
inc
int
inc
sub
add
int3
mov
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
icebp
or
out
mov
pop
push
cmp
sar
incl
inc
ljmp
push
mov
and
inc
push
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
cmp
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
cmp
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
js
data16
idiv
inc
fadd
mov
andl
flds
pop
push
in
incl
loopne
inc
jmp
addl
mov
inc
call
outsb
inc
js
divb
mov
orl
jb
decl
mov
test
inc
rorb
adc
mov
mov
cmp
test
pushl
mov
add
jmp
pushf
decl
add
data16
add
add
test
dec
mov
mov
inc
cmpb
mov
add
push
mov
call
mov
data16
test
out
lea
test
inc
ljmp
decl
test
incl
test
rclb
test
inc
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
in
xchg
aam
call
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
cbtw
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
inc
test
decl
xor
add
inc
xorl
mov
lea
inc
lcall
pushf
roll
add
add
test
decw
mov
jmp
lea
faddl
xor
lea
test
decl
mov
dec
clc
call
lea
lea
test
popf
push
add
xor
cwtl
mov
incl
push
push
inc
shlb
lea
call
test
incl
clc
call
jmp
inc
jnp
add
mov
mov
data16
inc
lea
test
inc
dec
test
cmp
mov
pushl
lcall
incl
pop
mov
mov
decl
mov
mov
test
incb
incl
cmp
pushf
inc
mov
hlt
test
cmp
pushf
or
pop
lock
test
clc
mov
lahf
lret
mov
add
add
rorb
mov
incl
cld
mov
add
jge
test
sbb
xchg
call
push
inc
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
cmp
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
cmpl
pushf
xor
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
cld
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
cwtl
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
out
adc
jne
mov
fcomps
add
incl
mov
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
add
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
cmpl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pop
jmp
mov
xor
lea
cmp
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
cwtl
pushf
xor
jne
mov
icebp
icebp
shl
mov
cmp
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
cmp
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
clc
add
dec
hlt
xor
mov
in
jge
mov
dec
cmp
xchg
mov
add
cmp
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
cmp
fdivl
test
push
add
cmp
sets
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
adc
inc
inc
push
cld
jne
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
or
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
lldt
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
into
out
lret
dec
mov
ljmp
xchg
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
rol
out
add
add
and
fs
incl
js
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
cmp
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
idivb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
data16
pushf
inc
mov
hlt
test
mov
cmp
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
ss
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
cwtl
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
data16
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
orps
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
data16
add
data16
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
cld
js
popa
data16
into
push
data16
pop
xor
add
cld
cld
add
ss
add
into
ret
pop
add
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
xor
pop
mov
je
xor
mov
xor
pop
cmp
jne
mov
cld
push
pop
inc
stc
aaa
test
clc
test
xor
fs
or
cld
mov
push
push
lret
aaa
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
data16
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
cld
push
add
add
add
lret
lock
lret
cmp
pushf
jge
aaa
cld
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
xor
add
mov
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
xor
add
data16
dec
fisttps
add
ret
lea
add
cmp
pushf
add
add
inc
test
xor
push
cwtl
push
xor
inc
cmp
jbe
mov
or
inc
test
cmp
in
hlt
push
push
push
push
mov
cwtl
cwtl
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
cmp
pushf
jb
add
inc
daa
inc
inc
xor
dec
cwtl
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
cmp
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
cmp
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
std
lock
inc
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
cmp
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
aas
add
push
add
mov
cld
inc
add
rcrl
mov
mov
or
xor
enterw
jmp
ret
inc
mov
add
rorl
icebp
or
inc
inc
mov
or
jne
mov
rolb
add
cld
ret
dec
mov
mov
jmp
mov
mov
sub
mov
in
test
add
add
cmovge
add
cld
mov
adc
mov
xor
cmp
jne
mov
adc
push
test
clc
xor
xor
dec
adc
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
cmp
pushf
push
movl
dec
inc
andb
pushf
push
xchg
fsubr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
cmp
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
cmp
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
add
xor
add
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
and
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
movsb
sar
enter
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fcomps
clc
mov
mov
mov
clc
mov
cmp
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
fdivr
testb
dec
clc
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
sarl
pushf
add
mov
xor
test
clc
dec
inc
xor
setl
lret
rol
dec
test
inc
lea
lea
mov
xor
bswap
rorb
roll
add
cmp
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
cwtl
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
fiadds
xor
jb
add
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
cmp
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
cwtl
mov
jge
decl
jl
adc
pop
cmp
add
adc
test
adc
jbe,pn
add
adc
clc
pusha
adc
jp
adc
mov
pop
adc
inc
adc
pop
cmpsl
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cmp
add
xor
add
pop
adc
adc
in
adc
bound
adc
shlb
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
adc
ds
adc
add
add
pop
adc
cltd
outsb
adc
ja
adc
jne
adc
arpl
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
test
add
test
add
adc
add
adc
and
adc
ret
pop
adc
loopne
adc
add
aas
adc
xor
inc
add
test
add
test
add
inc
add
inc
add
inc
add
sbb
adc
inc
bound
add
adc
jecxz
adc
pushf
xor
add
or
add
inc
adc
jno
inc
add
inc
add
inc
add
inc
add
test
add
test
add
xor
push
xor
add
push
pop
ss
ss
xor
add
pop
dec
dec
dec
xor
pop
xor
add
push
xor
dec
inc
dec
cmp
pop
inc
add
dec
pop
push
push
inc
xor
push
add
push
pop
dec
dec
dec
dec
dec
add
cmp
aaa
dec
cmp
push
inc
add
inc
pop
dec
xor
xor
push
xor
push
xor
dec
push
inc
xor
cmp
add
dec
xor
xor
xor
xor
inc
add
xor
dec
push
xor
dec
xor
dec
xor
dec
inc
push
pop
inc
xor
add
inc
ss
push
inc
dec
inc
add
inc
xor
dec
pop
cmp
cmp
push
pop
push
pop
dec
push
dec
dec
inc
pop
dec
xor
push
inc
pop
xor
add
push
pop
inc
push
dec
xor
pop
dec
xor
inc
inc
dec
pop
push
dec
xor
dec
ss
aaa
aaa
dec
dec
add
ss
inc
inc
xor
dec
ss
pop
dec
dec
inc
inc
dec
xor
xor
xor
xor
inc
dec
xor
add
xor
xor
pop
add
cmp
inc
dec
inc
xor
pop
inc
inc
add
dec
pop
dec
xor
dec
xor
dec
pop
push
dec
dec
cmp
xor
pop
inc
pop
push
pop
cmp
pop
dec
dec
pop
add
pop
pop
push
xor
xor
xor
push
push
add
dec
add
add
dec
add
inc
add
add
xor
pop
add
add
add
add
add
push
add
xor
pop
add
inc
add
add
push
add
add
xor
xor
xor
xor
pop
add
add
add
inc
add
add
dec
add
add
add
add
add
add
cmp
dec
add
add
pop
add
dec
add
add
dec
add
dec
add
add
inc
add
add
dec
add
pop
add
pop
add
add
dec
add
add
aaa
add
xor
inc
add
pop
add
add
inc
add
push
add
pop
add
xor
push
add
add
dec
add
add
inc
add
inc
add
add
add
cmp
push
add
pop
add
add
inc
add
add
push
add
add
add
add
add
xor
cmp
dec
add
dec
add
cmp
inc
add
add
inc
add
dec
add
pop
add
add
xor
add
inc
add
add
pop
add
cmp
push
add
pop
add
add
add
add
add
push
push
inc
push
pop
fisttps
inc
movsl
mov
jl
mov
add
push
cmp
js
jbe
arpl
popa
push
pop
outsl
insl
dec
inc
push
jbe
pop
push
js
insb
insb
dec
addr16
push
jb
push
insl
push
bound
push
arpl
pop
jo
dec
inc
push
insb
inc
dec
jne
jbe
jo,pn
bound
