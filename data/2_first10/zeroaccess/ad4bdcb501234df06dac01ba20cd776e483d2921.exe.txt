push
mov
sub
mov
mov
mov
sbbl
sub
push
mov
mov
mov
sbb
add
mov
orl
orl
mov
mov
inc
mov
adcl
mov
sub
mov
mov
sbb
xor
mov
adc
orl
orl
lea
mov
add
mov
mov
mov
xorl
add
xor
or
mov
and
jmp
and
xor
sbb
mov
xchg
scas
push
push
push
push
cmp
cwtl
test
cmp
sbb
push
popf
popa
mov
rolb
push
mov
testl
movsl
dec
sbb
xor
pop
cmp
dec
rcl
inc
inc
push
jl
pop
mov
dec
dec
dec
rorb
or
mov
daa
bound
scas
test
mov
pop
push
inc
fdivs
imul
mov
jecxz
add
cmpsb
inc
fucomp
loopne
mov
hlt
push
rcll
out
jmp
rol
lret
mov
xor
push
and
inc
fiaddl
cmc
sub
ds
loop
ret
dec
cmp
mov
jns
and
mov
enter
rorb
in
jb
imul
iret
movsl
add
jb
xor
mov
mov
ja
fdiv
push
dec
push
dec
mov
out
test
jne
dec
fistps
inc
sub
mov
and
cmc
mov
jge
sub
push
popf
js
adc
mov
xchg
mov
adc
shlb
rcrb
sub
icebp
loopne
roll
jae
mov
inc
sbb
push
arpl
fs
sub
dec
jle
add
cmpsb
fldcw
fstl
push
mov
lahf
jbe
push
mov
iret
imul
inc
testb
js
scas
outsl
fsubl
mov
jo
pop
adc
sbb
pop
andl
test
fadds
push
clc
das
gs
pop
frstor
adc
adc
repz
mov
push
cld
xchg
pop
je
fwait
ret
or
repz
mov
das
sbb
push
lods
jl
imul
jb
push
out
dec
std
stos
push
test
out
ret
call
fnsave
dec
push
int
pop
sbb
loope
add
in
jnp
adc
pop
and
int3
mov
aas
bound
movsb
add
shlb
cmp
ds
mul
xor
je
jecxz
jecxz
and
lods
or
inc
movsl
test
mov
xchg
mov
push
fbld
xchg
in
in
pop
mov
cmp
sub
push
mov
mov
inc
inc
test
cmp
sbb
pop
loopne
or
aam
das
cmp
or
dec
dec
bound
pop
mov
push
add
roll
hlt
js
leave
lock
into
hlt
mov
mov
pop
sbb
push
fwait
mov
inc
push
in
loopne
push
or
test
xsha1
cmpsb
mov
or
jmp
dec
bound
pop
inc
pop
push
fxtract
lods
andb
jne
xorl
xor
xchg
push
pusha
outsb
pop
mov
push
sub
lahf
adc
jno
cpuid
jo
jecxz
sub
es
jno
cmc
add
shlb
cmc
cmp
cmp
scas
mov
sbb
enter
jg
sbb
xchg
xchg
aam
rcll
addb
xchg
pop
pop
cmp
dec
pop
sbb
negl
insl
mov
ljmp
cmpsl
lcall
jo
in
xchg
ljmp
push
aaa
fs
mov
mov
pushf
xor
mov
mov
fists
mov
mov
xor
dec
lahf
cld
mov
out
stc
mov
scas
add
cwtl
addb
mov
adcb
xlat
std
mov
dec
sub
pop
es
ja
xchg
cmp
xor
xor
cwtl
enter
int3
cld
cld
sub
push
add
add
fmuls
push
neg
jecxz
fbld
jno
xorl
loop
repz
jno
jbe
sar
ss
pop
mov
xchg
mov
or
pop
loopne
and
xor
andb
lock
test
pop
fcomps
pop
xchg
or
enter
xor
pusha
pop
jns
mov
sub
jbe
mov
repnz
lret
lock
in
or
jo
jecxz
test
sahf
inc
xor
lock
ljmp
jno
add
imul
aas
iret
fdivs
sub
sbb
adc
cmp
movb
mov
pop
loopne
clc
lock
xchg
pop
mov
or
xor
scas
jecxz
sbb
imul
pop
sbb
xlat
and
pop
shrb
repz
mov
sbb
mov
shll
shrb
xchg
sub
jle
jmp
and
lock
mov
mov
push
pushf
push
mov
jg
xchg
out
pusha
gs
movsw
add
pop
gs
jns
dec
or
loopne
dec
popf
pop
popf
in
pop
in
adc
arpl
test
jg
cmp
jne
and
mulps
mov
jle
aaa
pop
mov
ret
ljmp
pop
leave
clc
jmp
xor
test
mov
xor
mov
add
mov
jmp
fdivrs
lds
xchg
pop
and
outsl
jbe
cmp
add
push
sarl
aaa
push
xchg
mov
pushf
pop
and
insl
fcmovnbe
icebp
jne
fisttpll
xchg
popa
push
lock
add
cltd
add
push
es
test
dec
loope
push
cmpsl
push
jne
in
pop
pop
popf
push
test
xchg
dec
sub
inc
lds
mov
std
mov
negb
repz
aaa
aam
aam
jl
test
in
xor
out
aaa
mov
imulb
dec
jl
jg
fcomps
push
cltd
add
xchg
or
mov
mov
dec
xchg
pop
or
xchg
aad
dec
mov
das
popf
aam
fxch
push
xchg
aaa
and
cmpsl
fcompp
xchg
shll
lret
decb
cmc
stos
add
jne
arpl
stos
rcll
repz
jg
shrl
push
out
pop
jo
lea
jb
push
mov
pushf
int
and
cld
in
loope
rcrb
xor
xchg
xlat
fbld
jnp
pushf
jl
das
xchg
push
out
xor
xchg
xchg
inc
jno
xchg
imul
ja
addb
mov
shl
les
jle
loop
mov
lea
aad
jg
and
push
jb
mull
addr16
sub
lock
outsb
and
insb
mov
and
pushf
dec
adc
daa
mov
frstor
dec
rclb
sahf
adc
inc
sbb
mov
jae
fprem
push
lret
mov
mov
int
loope
negb
mov
insb
xor
sbb
jl
push
stos
repnz
mov
in
push
sub
ret
dec
sub
jg
loopne
sbb
loope
movsl
daa
push
and
pop
xchg
vphadddq
mov
cmc
jp
cmpsb
inc
fbld
mov
mov
mov
push
addr16
dec
adc
icebp
cs
rcrl
movsl
cmp
gs
or
xor
inc
cwtl
xchg
dec
push
and
adc
movsl
mov
mov
cld
inc
scas
out
repnz
into
and
clc
ret
rcr
add
pop
mov
pop
loop
sub
mov
dec
jb
mov
jecxz
jle
cmc
push
data16
jno
mov
mov
sbb
je
mov
es
fisttpl
jmp
mov
or
testb
mov
lahf
ret
xor
push
lahf
pushf
cmp
pop
fcmovu
enter
xor
inc
rclb
and
test
fisttpll
in
push
and
sub
cltd
movsb
jmp
adcl
pop
arpl
xchg
lea
sbb
daa
fmulp
cmp
and
cmp
rol
jmp
fwait
add
sahf
sub
cwtl
stos
out
test
add
add
lods
lret
push
and
mov
add
mov
ss
out
add
test
out
or
jg
ficompl
sbb
pusha
mov
mov
aaa
enter
adc
push
and
mov
ss
pop
adc
mov
ja
jno
sbbl
cld
std
cmp
fwait
mov
ret
adcl
cmpb
mov
pop
ljmp
rcll
mov
out
xor
int
cmp
push
and
lods
mov
push
inc
xor
inc
sub
cwtl
dec
movsb
int3
sub
sub
outsb
sahf
push
push
ret
cmc
mov
mov
pop
scas
xor
sbb
push
mov
cmp
mov
fsub
push
cmpsb
push
mov
adc
jb
jle
and
sub
xchg
pop
mov
ficompl
mov
test
xor
push
pushf
xor
hlt
hlt
push
sub
test
aaa
stos
or
inc
sbbl
out
push
xchg
add
addb
push
dec
push
mov
loopne
or
call
iret
sahf
cmp
mov
sbb
in
jmp
das
sbb
jbe
test
stc
jmp
xor
or
ret
je
push
cmp
rcr
call
jle
sahf
jge
mov
pop
movsb
pop
dec
mov
or
inc
mov
call
imull
jge
test
xchg
shll
fst
push
jns
imul
mov
push
push
mov
inc
push
mov
or
mov
repnz
and
push
jle
cmc
popl
cwtl
push
add
imul
sub
call
add
addr16
das
cmp
jl
push
mov
sahf
ret
jp
mov
stc
enter
mov
in
pop
sbb
add
push
inc
outsb
lret
scas
and
ret
lods
clc
dec
test
aad
cmp
xchg
push
mov
mov
stos
xor
lahf
std
ljmp
push
fwait
sbb
add
or
add
clc
dec
rclb
dec
into
mov
test
sbb
mov
shrd
shr
not
mov
dec
mov
xor
adcl
xor
movl
or
adcl
mov
neg
movl
movl
cmpl
movl
movl
movl
movl
jmp
movl
mov
je
push
pushl
call
andl
subl
and
orl
xorl
mov
sub
movl
movzbl
or
jmp
in
in
testl
loop
test
cli
push
push
cmp
mov
pop
insl
jmp
mov
arpl
mov
addb
sub
jl
test
adc
cmpsl
jle
rclb
loope
push
andb
or
mov
leave
outsl
and
jmp
movsl
into
jb
mov
jo
sbbb
shll
inc
loopne
js
jo
movsl
sub
sbb
adc
and
dec
cs
addl
add
push
jno
add
adc
push
push
xor
inc
pusha
cmpsl
fidivs
shr
and
insb
addb
flds
jge
mov
jbe
jae
loop
out
add
iret
test
add
cli
fdivrl
mov
addl
into
lcall
popa
stos
ja
movsl
call
mov
mov
push
mov
add
jmp
pushl
sbb
xor
sbb
loope
mov
test
rcr
adc
movsl
test
lods
inc
pop
addr16
dec
pop
sbbl
jo
dec
shrl
fcoms
inc
push
out
movsb
cmc
mov
ljmp
push
xchg
push
into
mov
popf
mull
dec
sahf
test
nop
jo
in
adc
lahf
js
into
mov
mov
insl
cmp
jp
push
cld
inc
adc
in
mov
stc
cli
xchg
jl
pop
jne
mov
sub
je
movsl
inc
arpl
test
push
cld
push
daa
js
mov
sbb
popf
push
xchg
inc
or
js
xor
inc
fincstp
jmp
insl
iret
sub
dec
adc
sbb
add
loope
jne
sub
into
shlb
xor
mov
test
pushf
sti
lcall
sti
mov
loop
mov
pop
test
ds
sub
xor
push
dec
push
out
out
push
lahf
stos
in
jp
mov
in
cmp
xor
mov
sbb
adcl
jno
notl
jne
inc
lods
dec
int3
lock
mov
rcrb
ret
and
cmp
mov
test
mov
lea
mov
ss
xchg
sbb
imul
xacquire
bound
adc
imul
arpl
lahf
dec
mov
ss
mov
pop
inc
call
iret
jnp
int
aam
cwtl
adc
ret
nop
jbe
mov
lods
push
in
adc
test
mov
jno
mov
pop
xchg
mov
and
das
out
pushf
ret
mov
dec
xchg
ret
push
shl
ljmp
or
movsb
or
insb
mov
xor
xchg
cmp
sti
add
lahf
xchg
mov
leave
outsb
leave
ss
cld
lret
test
frstor
cmp
sbb
sub
pusha
rorb
jae
and
gs
pop
sub
scas
mov
mov
lcall
xor
in
add
stos
mov
jns
addr16
movsb
jle
push
adc
ss
addl
sahf
pushf
and
push
push
pushf
pop
shlb
pop
push
xchg
mov
ja
push
sbbl
orb
hlt
scas
and
or
outsl
pop
out
cmpsl
pop
pop
fstl
cld
into
mov
sti
dec
daa
loope
imul
out
sub
xor
sbb
pop
push
or
sub
push
inc
das
subl
sub
lret
outsb
or
jmp
and
jge
pop
pop
aas
fs
rcl
test
sbb
std
lcall
fwait
mov
push
jp
jecxz
xchg
mov
and
add
cwtl
mov
pop
mov
inc
xor
mov
aad
pusha
dec
push
neg
scas
pop
cmp
out
lret
dec
es
mov
lods
fs
fdiv
sbb
mov
mov
jmp
or
xchg
scas
inc
adc
outsb
std
xor
fldt
cld
jl
popf
mov
push
jnp
sub
mov
push
dec
add
rcrl
push
lret
lea
loop
jg
pop
into
cmp
sub
lods
into
mov
outsl
jno
inc
cmp
mov
xor
frstor
pop
es
xor
lea
sbb
bound
inc
popf
dec
sbb
in
mov
rol
mov
aaa
jl
cltd
mov
inc
mov
cmp
dec
nop
bound
xor
test
gs
scas
mov
lea
movsl
movsl
mov
inc
push
in
pop
aas
pushf
push
js
sbb
push
js
out
jecxz
adc
add
mov
adc
mov
and
pop
lcall
and
in
dec
adc
and
fcomps
inc
shll
jnp
xchg
inc
or
push
ret
push
ret
imul
and
inc
clc
cmpsl
jp
xchg
movl
movl
and
jmp
loope
mov
scas
sbb
dec
lret
loop
ljmp
notb
push
cmp
sahf
outsb
adc
xchg
pop
dec
repz
mov
lds
xlat
sbbl
stos
inc
adc
xchg
dec
cmp
xchg
hlt
or
adc
icebp
jb
fsubl
test
pop
adc
or
jo
fsts
aad
push
dec
out
jae
inc
push
xchg
enter
sub
pop
mov
adc
jp
pusha
add
mov
or
clc
ficoml
pop
aad
sub
mov
mov
add
pop
pushf
mov
sti
sbb
push
xor
pop
test
mov
hlt
sbb
mov
mov
mov
sbb
int3
mov
push
popf
push
dec
arpl
push
mov
mov
pop
popf
out
popa
pavgb
fidivs
push
mov
fnsave
lods
or
scas
push
icebp
mov
loopne
cs
arpl
lcall
cld
ljmp
sub
mov
mov
xor
aam
jmp
jp
cmc
icebp
push
out
inc
xchg
adc
xchg
add
mov
scas
mov
mov
cmp
push
lods
or
orl
pop
aam
push
enter
in
mov
mov
adc
clc
mov
jo
cmpsb
inc
mov
cmc
xchg
cs
pop
xor
sub
jns
mov
xor
popf
outsl
imul
push
dec
or
sahf
adc
iret
pop
inc
icebp
xchg
mov
fdivs
outsb
jecxz
xchg
pop
cmpsb
push
dec
dec
push
into
sbb
xchg
outsl
pop
outsl
and
jbe
loope
adc
or
jb
ret
push
and
add
addr16
cmpxchg
sbb
sbb
or
pushf
push
stc
fists
iret
in
daa
xlat
adc
inc
mov
mov
and
lcall
jbe
pop
xchg
mov
std
add
push
shll
or
test
test
mov
mov
adc
mov
cli
and
ja
jbe
cmp
add
sub
add
xchg
movsb
push
or
test
aam
mov
pop
xchg
sti
add
push
add
add
dec
jge
ds
adc
sarl
or
xor
imulb
sahf
ret
dec
fdivr
inc
int3
xchg
addr16
mov
push
fucomi
inc
outsl
mov
sar
dec
mov
lods
inc
xor
std
loope
test
xor
and
stc
movsl
fcmovnbe
movsb
jmp
or
push
sub
sarl
imul
or
lea
push
fwait
int3
cmp
xor
mov
movsb
dec
loope
adc
push
ficompl
insb
jno
scas
lret
mov
pop
lahf
mov
adc
sbb
adc
jl
movsb
rcr
push
outsb
addr16
outsb
icebp
shlb
aad
mov
mov
sbb
fnsave
arpl
xchg
add
loope
sbb
in
cmp
and
xchg
xchg
dec
mov
push
mov
inc
mov
push
xor
sbb
push
ljmp
ds
lret
fs
lds
test
testl
or
adc
fmul
mov
push
std
and
fiadds
mov
aas
testl
mov
xor
dec
jnp
imul
fimuls
mov
push
int
dec
jle
out
enter
cmpsl
adc
js
mov
inc
sbb
cmp
outsl
and
fldt
cmp
in
mov
jae
lret
inc
inc
cld
or
mov
int3
cmpsb
push
jns
bound
imul
pop
or
mov
sub
shl
push
shll
pusha
cmc
mov
ret
or
clc
enter
daa
nop
jbe
sbb
aad
or
push
and
xchg
popa
je
xor
fstpt
jl
fiaddl
jl
dec
mov
mov
sbb
lods
jmp
pop
adc
sbb
mulb
adc
mov
jns
cmc
adcb
mov
and
pop
orl
inc
aas
mov
sub
into
mov
jne
jmp
push
sbb
cltd
or
or
xor
into
in
popf
scas
test
mov
push
dec
xor
push
cs
adc
ja
fdivrp
scas
adc
xor
mov
incl
mov
dec
stos
imul
test
fstpt
aas
cmp
daa
push
cs
mov
xor
inc
mov
cli
in
pushf
or
popf
fstps
cmp
mov
inc
sbbb
jp
shll
addb
arpl
and
jmp
pop
xchg
lods
ds
cmc
les
adc
or
fsub
pusha
sub
xchg
push
pushf
jb
lcall
test
lods
push
fisubrs
adc
jbe
aad
lcall
pop
sahf
dec
bound
fidivrl
inc
xchg
sbb
add
movl
cmpl
movl
movl
jmp
notl
jg
push
pushl
push
push
push
call
xorl
adcl
xor
or
or
sbb
movl
mov
add
mov
movl
sbb
movl
movl
movl
jmp
cmpsb
in
ficoml
adc
xchg
jmp
push
push
cmp
mov
pop
push
into
shl
mov
xchg
jns
out
lods
stc
mov
dec
aad
fcmovb
sahf
stc
push
nop
out
pop
jbe
or
jl
pop
and
loope
push
clc
movsb
cmp
bound
lret
cltd
repz
insb
insb
rcl
aad
outsb
jge
pushf
and
and
in
sarl
inc
pavgw
pop
push
cmpsb
sbb
add
hlt
rclb
aad
test
xchg
inc
sbb
adc
cltd
xchg
sub
repnz
mov
test
and
adcb
push
pushf
and
fisttps
cmp
movsl
sub
jmp
mov
jnp
divb
jg
inc
outsl
pop
lea
jbe
pushf
pop
divb
jae
add
xchg
aas
jbe
ret
cmpsb
das
inc
push
lods
jg
mov
push
aad
int3
mov
dec
or
sarb
cmp
xchg
mov
add
outsl
in
ljmp
in
les
inc
out
orl
sti
inc
aaa
mov
dec
std
test
scas
sbb
jbe
aad
inc
rcll
and
js
dec
stc
stos
icebp
out
xchg
movsl
xchg
insb
and
stc
dec
adcl
sbb
cmp
lea
xlat
and
scas
push
jp
xchg
fiaddl
lea
jmp
jp
test
aad
pop
pop
sub
sti
push
fistpl
add
push
pop
pop
scas
sbb
push
lods
test
sahf
or
xchg
xchg
enter
pop
mov
loop
outsb
ret
sahf
movsb
mov
in
mov
cmp
sbb
into
nop
adc
ficomps
cmp
ljmp
jl
imul
mov
cmp
shlb
xor
and
inc
scas
das
cmpsb
repz
sbb
lahf
or
ss
cwtl
push
aam
lock
outsb
inc
dec
xchg
sbb
mov
xor
or
out
jbe
cmp
pop
mov
mov
loope
roll
ds
mov
sub
sbb
inc
lea
cmp
cmp
pop
sqrtps
in
dec
lahf
or
adc
fcmovnu
sbb
or
sbbb
sti
cmp
inc
test
and
lret
dec
lret
push
mov
pop
enter
gs
push
das
rcll
cli
ret
lock
cld
into
mov
mov
dec
xorb
push
adc
out
arpl
xchg
sbb
sbb
stc
pop
dec
outsb
mov
sub
imul
adc
or
out
scas
mov
inc
jl
test
fcos
jle
dec
into
sbb
jg
xchg
mov
or
mov
cmp
mov
and
mov
mov
push
cs
aaa
shrl
dec
rorl
xchg
das
dec
std
mov
stos
subl
xor
push
add
stos
imul
adc
mov
mov
dec
fldt
sub
repnz
sub
mov
dec
dec
mov
test
sub
scas
int3
jno
loop
test
sub
adc
jmp
stos
repnz
je
add
adc
call
fidivrs
add
rolb
cld
ret
data16
rcll
and
repz
incb
mull
jnp
mov
mov
in
sbbb
sub
insb
push
ds
or
xor
xor
pusha
jae
popf
rcrl
xchg
pop
gs
out
iret
fbld
aam
mov
mov
faddl
and
fdivrl
popf
into
lods
movsl
cmp
and
movsl
pusha
ds
stc
sub
andb
adc
cwtl
fsts
adc
daa
hlt
stos
xchg
cld
cs
dec
or
jp
mov
aas
lcall
lock
xchg
aas
fsts
xchg
popa
fldt
je
ficoml
inc
sbb
mov
adc
sbb
loope
sub
repnz
imul
aaa
loop
cmp
xchg
pop
mov
pop
sub
lock
cmpsb
cmpsb
adc
add
jmp
mov
sbb
mov
mov
push
dec
and
sti
xor
push
xor
or
aam
scas
xchg
mov
pop
mov
mov
push
into
mov
enter
add
push
pop
loopne
pop
xchg
jmp
cmpsl
sub
mov
pop
shrl
xor
lret
fwait
ss
sbb
sbb
negb
mov
push
mov
jne
inc
repnz
pop
fs
out
addb
push
les
pop
adc
sbb
mov
push
jmp
push
je
cmpsb
fwait
xchg
ljmp
xor
xor
xchg
lret
ja
push
cmp
addr16
xchg
adc
jbe
inc
push
rcr
xorb
push
shl
movl
movl
movl
cmpl
movl
movl
jmp
movl
not
jne
push
call
add
addl
addl
subl
adcl
add
addl
sub
movl
movl
movl
movl
add
movl
movzwl
and
movl
xor
movl
inc
movl
movl
cmpl
mov
movl
jmp
movl
not
jne
push
pushl
pushl
call
xorl
orl
andl
and
addl
decl
xor
cmpl
movl
movl
movl
jmp
mov
movl
jge
push
call
addl
subl
addl
sub
orl
andl
cmpl
movl
movl
jmp
mov
movl
jl
call
xorl
andl
orl
xor
mov
shl
mov
andl
push
incl
push
push
push
addl
call
mov
addl
mov
subl
xor
not
mov
add
mov
sub
sub
cmpl
movl
mov
movzbl
mov
jmp
movl
mov
jl
push
push
pushl
call
xor
or
mov
sbb
sbb
mov
add
mov
sbb
movzbl
or
mov
mov
mov
mov
xor
lea
jmp
out
decb
lock
fsubrs
cmp
int3
ficoml
imul
and
lock
ficoml
adc
ja
jbe
mov
mov
and
pop
lock
dec
xchg
cltd
jecxz
andb
scas
out
addr16
fsts
xchg
mov
and
test
ret
xor
js
ss
adc
pop
mov
push
sub
and
mov
jle
ficomps
sbb
shrb
int
pop
push
mov
ljmp
inc
add
add
fmulp
insb
cwtl
repnz
dec
js
cmp
add
mov
fidivl
adc
scas
and
lcall
fmull
mov
mov
jle
and
pop
fnstsw
push
cmp
div
adcl
jae
fidivrs
addr16
mov
fcoml
inc
mov
inc
xor
stos
call
inc
xor
lahf
push
mov
push
push
cmc
xchg
mov
lahf
add
inc
dec
and
pop
sbb
xchg
inc
and
lods
push
and
aad
sub
test
into
aaa
rorb
pusha
out
jae
cmp
pop
mov
popa
orl
sbb
imul
in
sbb
insb
xchg
and
stos
push
mov
mov
jb
sbbb
jmp
or
shlb
out
push
mov
sbb
aad
adc
mov
add
xor
cmpsb
mov
pushf
adc
mov
fimull
or
mov
sbb
int3
xor
movsl
pop
sub
in
je
xor
mov
movsb
les
outsb
pusha
call
ds
stc
xor
xor
add
andb
jmp
xchg
cmpsl
pop
test
in
leave
addr16
clc
mov
adc
lcall
adc
lods
fimull
pop
ret
mov
ror
ror
or
adcl
jecxz
ds
push
adc
out
or
not
mov
popfw
push
add
add
push
inc
push
in
jl
push
pop
lahf
cld
adc
lcall
pop
xorb
ss
mov
mov
adc
in
push
xor
cli
scas
scas
inc
xlat
mov
rcrb
pop
push
jp
lds
fprem1
inc
test
lds
adc
fisttpl
repnz
dec
jo
cmpsl
jo
or
mov
test
in
cltd
cmp
enter
mov
mov
fimull
jge
iret
jge
jle
push
pop
in
popa
leave
jns
or
mov
int
push
or
xchg
jmp
xor
insl
mov
or
ljmp
clc
nop
and
scas
mov
cmp
outsb
in
or
sub
outsl
bound
ficompl
aas
aam
or
mov
loopne
xchg
dec
cmp
and
mov
cld
jb
in
repz
push
sub
pop
pushf
dec
movsl
sbb
xor
movsb
jbe
dec
jb
lods
xchg
sbb
rcll
add
cld
jg
insl
mov
roll
push
dec
sbb
sbb
mov
dec
shlb
xor
aam
push
or
push
xchg
es
sub
xor
dec
fadds
sbb
dec
cmp
mov
sbb
das
lods
rorl
js
push
jne
xlat
imul
or
mov
jno
popf
cli
pop
enter
enter
push
jb
jb
out
or
push
pop
lea
lcall
jae
xchg
add
adc
mov
stos
adc
sbb
psubsb
xchg
cmp
mov
mov
je
cld
or
lea
int
and
enter
cld
sbb
hlt
sub
int
in
sti
push
dec
iret
movsb
sub
lods
out
loope
dec
dec
mov
add
pusha
xchg
mov
adc
ljmp
outsl
rclb
fwait
jns
sbb
js
lods
sti
inc
bound
cs
inc
cmp
pop
loopne
pop
push
sub
data16
lcall
jg
cmpsb
pop
subb
xor
mov
lret
push
dec
ret
call
insl
iret
add
ret
in
addr16
imul
mov
ret
test
lods
andb
dec
jmp
add
mov
mov
sub
mov
rorb
call
ds
lahf
insb
and
or
lods
jmp
and
pusha
mov
dec
xchg
test
int
outsb
cmp
pop
hlt
lahf
xchg
sub
dec
stos
push
clc
idivl
fbstp
lret
add
mov
mov
push
scas
inc
divl
pusha
cmp
pop
jbe
jge
mov
roll
int
mov
xor
fisttpl
ret
and
stos
das
adc
xchg
dec
inc
mov
cmpl
in
cmp
add
adc
mov
movzwl
jmp
movl
jg
pushl
call
add
xor
subl
sub
or
xor
mov
orl
or
and
mov
adc
mov
mov
adcl
or
adcl
xor
cmp
jne
andl
mov
subl
mov
and
shrd
shr
sbb
mov
and
mov
shl
addl
xor
subl
jmp
add
sbb
sbb
clc
sbb
jb
and
push
push
cmp
mov
adc
push
xchg
movsb
jle
and
in
int3
sub
outsb
inc
adc
xchg
push
push
xchg
or
test
in
je
movb
pop
or
dec
fldcw
scas
xlat
and
push
sbb
or
cmp
lahf
sub
shll
add
cmpsb
adc
cs
push
stc
xchg
movsb
pop
std
cmpsl
xlat
cwtl
mov
inc
scas
lahf
sbb
pop
lahf
arpl
mov
into
or
jns
es
lods
adc
mov
and
cmpsb
cmp
ljmp
jmp
xlat
jns
leave
push
xchg
push
lret
andl
or
mov
mov
insl
or
or
test
rclb
sub
mov
setge
mov
xorb
shll
pop
and
inc
cwtl
cmc
orb
and
hlt
mov
push
mov
lret
bound
mov
inc
add
data16
out
push
cmp
mov
int3
insb
mov
addr16
mov
loope
arpl
jb
mov
jbe
add
in
or
push
inc
or
cmp
jno
in
rcrb
xlat
adc
ja
or
js
cmp
mov
sub
mov
mov
push
sub
push
mov
out
popf
es
adcb
sub
fs
add
mov
xor
or
dec
adc
xor
popa
mov
negl
xor
sti
cmp
outsl
in
sub
pop
ret
lds
bound
jmp
dec
pop
sbb
sub
push
jb
fstpl
mov
ret
xorb
outsb
pop
inc
dec
shlb
and
cs
mov
arpl
scas
or
inc
je
loop
scas
jnp
adc
sub
xchg
mul
jmp
les
mov
adc
jae
adc
int
test
and
adc
inc
dec
loope,pn
loop
notl
sub
jg
into
mov
mov
push
jne
inc
inc
loope
jmp
or
dec
out
push
jle
mov
loopne,pt
xor
repz
xchg
stc
inc
aad
lock
in
inc
pop
mov
pop
les
and
lock
popf
pushf
rorb
xchg
or
data16
xor
mov
sbb
mov
add
fisubs
aam
fmuls
popl
into
jne
mov
xor
aam
in
mov
sbb
push
mov
popf
mov
inc
ss
aad
ss
data16
jmp
add
jmp
in
sub
lods
or
inc
add
mov
pop
in
mov
inc
xchg
je
push
xlat
mov
and
loopne
aas
mov
shl
jp,pn
mov
outsb
sbb
xchg
push
xchg
sbb
js
xchg
jecxz
fstps
dec
enter
sarb
or
arpl
mov
aas
dec
sbb
adc
cmpsb
fsub
add
xchg
sub
loope
inc
xchg
jae
icebp
xor
shlb
mov
or
and
or
imul
sbb
clc
push
cmpsl
add
and
inc
pop
jmp
jbe
mov
xchg
add
push
cli
int
sbb
roll
les
adc
push
repnz
jne
scas
rol
rcrb
ror
jl
pop
adc
imul
cli
les
outsl
clc
out
repnz
jae
pop
into
lret
push
xlat
dec
push
cwtl
push
lock
mov
mov
add
cmp
jge
negl
add
lock
and
jg
mov
andl
fldcw
sahf
sbb
sub
and
lea
push
ljmp
ret
fsubrl
nop
fst
jno
and
repnz
fistpl
dec
add
xor
dec
inc
pop
and
push
xchg
jo
popa
xchg
loope
xchg
cmc
cmp
jbe
push
mov
xor
ret
lcall
pop
sub
ja
ficompl
add
ret
sti
lds
adc
jne
lcall
mov
fisubl
mov
das
xor
sbb
popa
cmpsb
ss
jnp
lds
xlat
fidivrs
shll
sarl
sarl
mov
ja
adc
jno
loop
loop
addb
mov
jmp
inc
testb
popa
sbb
jnp
aad
roll
nop
add
xchg
test
pop
pop
pop
pop
push
fistps
dec
mov
and
jmp
jge
imul
inc
rcll
ss
mov
dec
inc
pop
outsl
or
das
or
xor
fistl
jns
out
lcall
in
mov
xor
lret
xor
jle
repnz
xchg
insl
pop
or
cmp
js
ljmp
mov
out
dec
push
push
push
jle
push
cmp
loopne
sbb
pop
sub
mov
push
xor
jmp
fwait
or
rolb
scas
add
add
shl
mov
inc
add
test
daa
cmp
sbb
pop
pop
scas
and
lods
mov
push
cmp
addr16
cmp
shr
mov
clc
jecxz
gs
popf
adc
pop
sub
sbb
ja
jp
ja
jp
mov
xor
addr16
xchg
jl
mov
xor
test
xlat
or
leave
cmpsb
cmp
inc
sub
inc
repz
sub
dec
repnz
enter
aaa
xchg
adc
inc
or
fsubrl
mov
filds
jae
sub
and
sahf
inc
pop
jo
mov
jb
dec
add
push
fstpt
and
gs
mov
mov
jbe
sbb
push
test
jb
sbb
into
in
pop
fucomp
add
lahf
mov
test
cltd
fwait
andl
pop
pop
sbb
jp
stos
xchg
sub
or
out
sub
mov
loope
popf
rep
jge
xchg
loope
mov
into
xchg
push
mov
int
sbb
in
in
sarb
fstpl
xchg
inc
mov
insl
push
pop
fistpll
cs
push
xchg
pop
in
xchg
dec
pop
ja
fisubs
pop
dec
inc
inc
push
outsb
or
mov
je
data16
sub
ljmp
lock
imul
mov
push
scas
push
fnstenv
push
aad
xchg
xchg
hlt
in
cmpsl
in
ja
imul
lcall
jge
and
loop
lock
fcompl
push
mov
test
dec
aas
shll
lret
es
fdivrl
shr
pop
ret
stos
bound
pushf
inc
pushf
pop
pop
out
mov
push
xchg
in
repnz
pop
and
daa
test
and
cld
push
jb
push
xchg
data16
xor
mov
cld
adc
ljmp
jecxz
add
mov
mov
mov
add
cmp
sub
sahf
xor
xor
sub
scas
cmp
mov
inc
and
push
jmp
jecxz
dec
scas
fmul
hlt
shlb
aad
dec
fiaddl
xchg
repz
ss
xor
add
cmp
jnp
xchg
inc
in
pop
xchg
push
int
inc
push
mov
cmp
pop
jne
pop
out
leave
leave
and
jecxz
loop
sub
iret
idivb
pop
push
push
iret
cltd
and
jg
xor
xchg
sbbb
stos
dec
pop
push
mov
xchg
cmp
loope
es
inc
fucomp
xchg
inc
and
and
mov
roll
je
stos
scas
lcall
xor
dec
jnp
imul
cmp
or
mov
xchg
dec
aam
xor
mov
mov
mov
mov
sbb
mov
sbb
sti
fs
inc
repnz
dec
and
cs
ja
cmp
enter
fs
add
cmc
outsb
adc
adc
scas
rolb
scas
or
mov
push
leave
movsl
and
cwtl
imul
loopne
inc
pop
inc
sub
push
out
lds
int3
scas
pop
push
xchg
sbb
rolb
jo
mov
pop
test
pop
mov
adc
add
int
jnp
jmp
mov
or
in
jmp
test
sbb
push
cmp
lret
cs
add
push
dec
jbe
outsl
fiadds
daa
and
repnz
iret
inc
adc
outsb
mov
daa
xor
cmc
jge
inc
es
or
xor
test
jl
lcall
xchg
push
cli
data16
xchg
cld
or
push
lea
lahf
mov
inc
pop
jns
rcll
in
jecxz
inc
xchg
adc
fstpt
add
int
popf
das
outsb
lods
adc
imul
js
sti
mov
xor
sti
and
sbb
xor
mov
call
fidivrs
out
sbb
push
aam
xchg
pop
xchg
ja
sub
mov
pop
xchg
pop
cmovl
out
mov
je
out
sub
and
scas
mov
cmp
sbb
inc
cli
sbb
repz
xchg
lds
std
cwtl
and
sub
lds
lret
xor
shl
xchg
and
cmc
push
mov
xlat
inc
add
pop
xor
push
aad
mov
push
je
dec
loope
repz
mov
jmp
pushf
imulb
jmp
popf
mov
sar
lret
dec
xor
enter
aaa
push
cltd
stos
test
adc
mov
stos
and
mov
pslld
cmp
mov
mov
mov
xchg
mov
in
and
mov
sbb
aad
ret
and
stos
les
push
push
movsl
sbb
push
test
mov
movsl
push
jle
dec
jp
es
pop
sbbl
es
pop
lret
inc
ja
iret
fadds
dec
mov
cli
ja
cmp
xor
xlat
push
out
mov
test
pop
cmp
jno
xchg
flds
xlat
test
xorl
sbb
or
dec
in
movl
cmp
movl
jne
or
mov
cmpl
mov
not
jmp
movl
mov
jb
push
call
xor
adc
orl
mov
mov
sub
xor
mov
xor
or
sub
sub
movzbl
add
mov
movzwl
or
mov
xor
mov
mov
adcl
mov
shrd
andl
mov
add
mov
xor
sbbl
shr
mov
addl
xor
andl
or
addl
shl
cmpl
mov
movl
mov
mov
jmp
movl
movl
jl
pushl
call
or
xor
xorl
incl
add
not
sub
mov
mov
sbb
mov
add
mov
and
mov
mov
mov
or
mov
xor
jmp
xlat
mov
push
xor
cli
loopne
xchg
push
push
cmp
mov
inc
shrb
pop
xchg
or
pop
insl
js
mov
push
jne
cmp
es
nop
test
aad
xchg
sbb
mov
cld
sbb
sbbw
pop
add
dec
xchg
xchg
nop
into
inc
jge
lcall
xor
ret
imul
pusha
adc
das
jecxz
scas
pop
or
divb
shll
jnp
cmpl
mov
push
and
ret
add
cs
mov
popf
cmp
cs
aas
mov
pop
push
in
push
lahf
adc
mov
add
sub
scas
adc
nop
xchg
mov
arpl
jl
xchg
pop
xchg
push
cs
movb
inc
mov
sub
jno
dec
add
aam
xor
sub
or
pusha
jecxz
repz
push
mov
lret
pusha
push
aam
pop
or
mov
xor
pop
mov
push
fdivrl
movsb
repnz
mov
mov
das
movb
and
movsb
pop
sub
fsubl
xor
dec
lahf
cmp
and
and
aam
fwait
je
das
push
dec
mov
pop
xor
gs
pusha
cmp
add
and
aas
xlat
dec
pop
or
shrb
sbb
out
and
adc
mov
cmpsl
cwtl
pop
jb
shrl
loop
movsl
sub
xchg
mov
inc
push
repz
xchg
mov
mov
dec
addr16
pop
cwtl
loope
push
test
mov
test
imul
or
mov
sahf
sub
adc
outsb
bound
or
jbe
and
lahf
inc
mov
xorl
insb
scas
inc
lcall
fstpt
sub
push
mov
push
cltd
jae
xchg
push
outsl
fs
jmp
test
cmp
das
or
mov
das
inc
mov
cmp
jmp
xor
cwtl
dec
inc
mov
push
scas
pusha
movl
fcomp
icebp
and
xor
repnz
test
sbb
xchg
test
imul
pop
or
or
addr16
cmp
jecxz
mov
add
push
sbb
shl
imul
jbe
pop
insb
adc
xchg
push
xchg
bound
xlat
mov
adc
inc
cmp
jg
leave
xor
cmp
xchg
and
cmp
movsb
jp
mov
dec
mov
mov
pop
push
repnz
cld
dec
xchg
scas
lret
mov
out
add
inc
jmp
test
dec
test
mov
xchg
cmp
mov
pop
test
mov
jae
std
or
addr16
fisubl
add
mov
dec
xor
lret
mov
mov
cs
adc
pop
jmp
sar
xchg
movsl
adc
pop
xor
add
or
cmp
mov
xorl
cld
xchg
inc
scas
sub
std
aaa
daa
sub
xlat
sbb
mov
aaa
lret
adc
mov
add
mov
inc
cmp
push
mov
aad
sub
xor
mov
decb
pop
pop
jp
daa
lock
rclb
push
and
insb
cld
xchg
push
aas
cmp
leave
xlat
shll
ljmp
daa
mov
xor
je
push
sbb
xchg
fsubl
dec
push
ss
jle
push
repnz
insl
insb
or
in
inc
push
mov
js
and
sub
jo
xchg
push
mov
divl
adc
and
dec
adc
movl
into
lock
inc
jg
ds
fmull
repz
jb
sub
orl
clc
cmp
ret
mov
adc
adc
and
out
jb
mov
out
sahf
fisttps
mov
and
push
ds
clc
ret
xchg
push
pop
fsubl
shl
cmpsl
and
jge
dec
xchg
sbb
push
pop
xchg
ret
sbb
pushf
leave
ret
dec
xorb
sbb
xchg
icebp
cmp
push
loop
jp
adc
sbb
aad
jle
or
push
sbb
roll
cmpsl
push
scas
negl
dec
xor
cmp
arpl
lea
fidivrs
int3
out
js
xchg
ja
rol
cmp
fstpl
cmpl
imul
jp
das
jno
mov
int
aad
popa
add
lret
fmull
xor
les
std
sub
ret
adc
inc
push
pop
fiadds
pop
into
pop
loope
jae
pop
leave
push
shrb
mov
push
mov
cmc
sub
adc
jne
sbb
xor
movzwl
ret
adc
and
stc
jnp
and
hlt
int
xor
jns
xlat
das
clc
jns
lods
pushf
scas
inc
outsl
ljmp
movsl
cmpsl
scas
movsb
stc
sahf
cmp
lahf
adc
arpl
push
lods
roll
cmp
shr
mov
mov
xor
mov
andl
xor
shl
adcl
xor
or
jmp
xchg
fcomps
xor
insb
jp
push
xchg
sahf
mov
mov
push
cmp
inc
jecxz
in
inc
push
ret
cld
xchg
mov
ret
pop
adc
lret
sub
push
xor
xor
fisubs
dec
testb
jae
push
and
pusha
cmp
xchg
outsb
inc
out
mov
push
test
push
inc
sbb
mov
sub
jl
lock
add
and
stc
outsb
mov
and
cli
cmpsb
push
pop
pop
iret
sub
push
inc
cmpsl
in
push
cmpsb
adc
cld
mov
and
ror
xchg
cmp
les
sub
inc
int
addr16
test
sub
sahf
inc
insl
inc
stos
rorl
enter
jns
fs
test
xlat
repnz
loopne
loope
xor
xchg
mov
mov
loope
lods
gs
fbstp
mov
push
xlat
iret
sahf
loope
mov
cld
stc
and
sub
ret
ljmp
dec
sbb
arpl
pushf
mov
dec
cmp
add
sahf
out
out
cmp
and
xchg
cmc
sub
mov
jmp
mov
pop
ljmp
pop
mov
stos
push
mulb
shrb
mov
push
les
in
pushf
stos
cmp
dec
lods
push
pop
gs
lods
inc
xor
xor
test
addr16
lock
in
xor
mov
adc
add
push
xchg
dec
outsl
or
xchg
jp
add
pop
or
jno
jp
sbb
and
ljmp
mov
xor
ja
cwtl
cmp
inc
aas
inc
bnd
dec
das
das
lods
dec
or
add
add
lea
stc
and
sahf
faddl
push
sbb
pop
pushf
inc
icebp
and
scas
ss
jmp
mov
arpl
rorl
arpl
push
mov
lahf
mov
pop
mov
or
popa
pop
pop
andb
and
leave
mov
push
fisubs
cmp
pop
out
sbb
mov
push
xchg
adc
cld
and
add
cltd
mov
add
jne
xchg
jbe
bound
or
mov
icebp
imul
gs
pop
out
mov
cli
inc
aam
mov
ret
icebp
std
popa
mull
pop
pop
add
int
xor
int
rolb
fistpll
bndstx
out
test
inc
jbe
xor
jecxz
push
lcall
fidivrs
ljmp
sbb
aaa
lcall
xlat
nop
outsl
dec
sbbl
clc
out
dec
dec
call
out
cmp
inc
xchg
dec
ret
adc
addl
dec
out
mov
cmp
push
dec
cwtl
cld
imul
leave
sarl
push
fld
in
mov
dec
addr16
push
jl
cmovs
or
jp
push
testl
xchg
das
inc
arpl
xchg
and
xor
popf
popa
nop
lahf
mov
sub
inc
xchg
push
hlt
enter
mov
or
xorl
ror
lahf
les
xchg
sahf
push
push
ds
scas
repnz
push
xchg
sti
andl
jp
int
mov
cmc
xchg
or
fsts
fwait
test
mov
push
mov
dec
fwait
popf
xchg
xlat
add
or
jbe
ret
enter
popa
cmp
add
xchg
add
test
leave
add
daa
xor
jne
idiv
adc
add
ret
enter
flds
sub
out
inc
mov
and
cwtl
rcl
ficompl
movsb
nop
jmp
mov
ljmp
push
int
pop
add
push
inc
inc
mov
push
cli
sbbl
xor
cld
mov
adc
outsl
push
out
stos
sbb
xor
pop
lds
mov
es
mov
jp
sub
sbb
sub
adc
das
je
maxps
inc
out
mov
clc
mov
movsb
out
pop
mov
das
push
pop
cmp
or
out
outsl
insb
sub
pusha
xchg
sahf
fmull
in
push
iret
inc
ss
arpl
stos
cmp
sahf
jecxz
andl
fistps
cld
lret
sub
adc
test
inc
movsl
push
ja
push
sub
push
add
pusha
jle
mov
mov
scas
mov
dec
xlat
jge
sub
sarl
xor
iret
and
xor
paddusb
lret
lahf
push
imul
adc
or
push
int3
mov
gs
add
push
xlat
ja
jnp
mov
push
fisttpll
cmp
imulb
rorb
test
lods
loope
xchg
fdivl
jnp
loope
inc
nop
lahf
das
fabs
or
inc
loop
xchg
xchg
aas
jns
jg
fwait
loope
pushf
jecxz
push
pop
enter
in
adc
dec
mov
jmp
je
mov
inc
pop
sub
mov
ret
and
or
subl
mov
cmpl
mov
mov
movl
jmp
movl
movl
jae
call
and
subl
add
mov
xor
xor
mov
shrd
shr
dec
mov
mov
cmpl
mov
movl
mov
jmp
mov
je
push
push
call
mov
sbb
orl
or
adcl
xorl
or
mov
orl
xor
sbbl
xor
notl
or
orl
jmp
mov
inc
test
sub
fcomp
dec
int3
outsb
lock
push
push
jo
jge
push
push
dec
outsb
push
dec
pop
dec
rorl
das
cmp
outsl
fldt
xor
xchg
rcl
notl
and
sub
cmp
out
mov
mov
xchg
hlt
push
jnp
ljmp
inc
cmp
add
mov
lea
cwtl
dec
lcall
push
ds
daa
xchg
into
cwtl
roll
test
es
cmp
movsl
daa
inc
inc
add
adc
sbbb
pop
cld
sbb
xor
int
mov
imul
in
inc
push
aas
xor
jge
sbb
cld
push
mov
lahf
mov
imul
xchg
jmp
aas
out
imul
test
in
aam
xchg
cli
les
dec
sahf
mov
and
inc
stos
iret
adc
dec
add
lcall
out
dec
les
sbb
lods
loopne
jb
stos
pop
jl
and
lret
mov
sbb
inc
cmp
dec
mov
lds
push
js
sahf
push
in
imul
xor
mov
addr16
clc
xchg
and
inc
mov
pop
lock
test
xor
fistps
adc
cmp
sbb
dec
mov
imul
fs
add
jle
and
jno
sub
test
shlb
addl
scas
jp
nop
and
enter
inc
xor
inc
add
xchg
mov
mov
cltd
and
cmp
lret
lcall
cmpsl
and
add
rolb
adc
sbb
int3
icebp
add
outsl
fmull
bound
adc
aaa
jb
and
out
stc
mov
scas
stos
daa
inc
neg
std
add
push
mov
jmp
add
lods
pop
packsswb
jns
adcb
roll
bound
cld
in
test
dec
dec
push
pop
pop
cmp
les
jne
mov
sbb
inc
add
sbb
cmp
xchg
mov
pop
mov
xchg
lock
jne
in
lea
sbb
inc
pop
pop
mov
lods
or
popf
leave
in
inc
mov
rcll
mov
pop
xchg
lret
adc
sti
icebp
mov
mov
iret
ds
jl
dec
fmull
in
es
cmp
sbb
push
les
addr16
repnz
xchg
jbe
dec
add
sbb
mov
outsl
jl
dec
and
out
xchg
ret
sbb
xor
mov
jnp
rcrl
sbb
add
cmpsl
xchg
jbe
fwait
cmp
ja
mov
or
adc
cltd
stc
wrmsr
push
bound
pop
pusha
mov
loopne
xchg
fwait
mov
xchg
inc
push
std
sahf
dec
push
je
jns
cmc
mov
pusha
mov
mov
out
sub
stos
out
inc
outsb
ds
ja
push
sbb
pop
arpl
movsb
xchg
mov
push
mov
lret
dec
es
fmul
cltd
jg
cmpsl
xchg
cmp
cmp
adc
cwtl
inc
in
jecxz
pop
in
mov
mov
and
pop
out
pop
xchg
pusha
mov
xchg
mov
mov
int3
jnp
add
mov
loop
stos
call
sbb
fdivrs
les
scas
xchg
jge
pop
pop
mov
cmp
movsb
pop
mov
cwtl
pop
pop
mov
out
and
lods
cmp
fsubrs
jmp
pop
clc
pop
ror
ficoml
mov
mov
xchg
xchg
and
hlt
cmpsl
cmpsl
fidivrl
fidivrl
imul
mov
scas
lods
fldl
push
and
push
rcll
fsubrl
pop
incl
imul
mov
and
sbb
and
cmp
xchg
scas
movsl
add
testl
adc
jecxz
sub
and
sbb
push
leave
fxch
cwtl
sub
popa
arpl
test
add
int3
push
or
popa
pushf
sbb
adc
leave
clc
mov
cmpsl
popa
stos
sub
in
xor
aam
mov
add
dec
leave
mov
in
sub
adc
dec
inc
pop
and
int3
sbb
mov
add
inc
gs
cld
xor
push
jg
dec
rorl
sub
cmc
aam
out
or
stos
or
aad
or
xor
push
sbb
mov
jne
imul
out
pop
aad
imul
inc
loope
jne
jnp
negl
dec
imull
cmp
jge
ljmp
cwtl
mov
iret
mov
das
add
and
ja
scas
lods
pusha
into
lds
cmpl
je
ss
mov
and
ljmp
fistps
scas
pop
iret
out
imul
loope
lea
mov
movzwl
or
mov
mov
subl
shrd
shr
cmpl
mov
movl
movl
jmp
not
mov
jbe
push
push
call
mov
add
xor
or
add
orl
add
movl
add
not
mov
mov
or
mov
jmp
loope
adc
adc
push
fsubrs
adc
push
push
fwait
xor
ss
lods
mov
aad
inc
xchg
mov
push
rcll
loope
inc
mov
outsl
pop
hlt
lock
arpl
dec
pop
lds
dec
bound
push
jl
cltd
jmp
cmp
test
jb
es
and
aaa
inc
ret
adc
cmc
add
xor
incl
test
inc
cmp
mov
mov
cmp
aaa
out
mov
cmp
adc
ljmp
ljmp
dec
or
insb
das
lcall
sbb
push
add
fistpl
xchg
pop
and
sti
push
inc
addr16
pusha
lea
sbb
xlat
scas
lret
xchg
inc
xor
add
lahf
cmp
mov
ja
inc
ja
mov
imul
int3
push
inc
push
push
into
sub
add
in
stc
xchg
jge
pop
mov
or
mov
cmc
ds
lods
sahf
push
jge
clc
push
repnz
jle
sub
test
fstl
inc
jb
jl
dec
mov
loopne
cs
roll
dec
rorb
outsb
data16
jns
jne
push
add
push
mov
pop
into
adc
ljmp
jmp
insb
mov
inc
or
in
adc
mov
adc
notb
push
add
mov
mov
inc
mov
mov
pop
cltd
inc
pop
hlt
push
pop
in
scas
and
mov
push
pop
test
out
bnd
mov
aam
jl
adc
push
pop
or
push
sbb
pop
std
xchg
aad
mov
adc
pop
ret
std
mov
stc
arpl
xchg
add
dec
into
scas
imul
jg
sbb
int3
pop
jo
cwtl
lods
cmp
int3
or
or
inc
lcall
outsl
cmp
sbb
or
dec
dec
sbb
bound
out
pop
into
sub
and
leave
mov
cltd
dec
mov
push
andl
or
inc
in
mov
mov
cmp
jmp
or
mov
sti
test
pop
push
pop
lods
cwtl
mov
out
sbbb
pop
ss
test
icebp
pop
sbb
mov
rorl
lcall
xchg
test
mov
or
insb
add
sub
mov
push
push
cs
jecxz
rorb
movsl
dec
dec
hlt
mov
outsl
sub
dec
scas
ss
push
add
mov
xor
inc
stos
sub
add
xchg
stos
mov
push
push
ret
mov
in
dec
ret
push
pop
xchg
sbb
mov
daa
nop
push
ss
mov
push
pop
push
add
inc
cmp
notl
call
push
out
popf
imul
ds
es
mov
mov
in
xor
popa
dec
orl
insb
daa
jg
sbb
mov
cmpsl
pop
ljmp
scas
and
pop
insl
or
cmpsl
push
xlat
xor
cmpb
jle
xchg
rorb
inc
lret
sbb
stos
push
idivl
popa
add
sub
pop
cmp
dec
dec
jns
fs
mov
enter
jne
fs
xchg
xchg
push
cmp
lcall
jmp
ret
clc
call
insb
xor
push
adc
jg
in
cmp
cmp
imul
addl
sub
notb
dec
push
adc
mov
xor
icebp
fnstsw
js
push
mov
dec
std
sbb
lahf
imul
adc
xor
sub
jl
ljmp
dec
cmp
movaps
mov
adc
xchg
pop
lods
and
iret
shl
mov
into
mov
ljmp
cs
pop
jmp
push
lds
ret
xchg
sub
enter
cld
imul
cmp
arpl
mov
cwtl
push
es
hlt
pop
jns
in
sub
fadds
mov
cmp
mov
mov
push
ret
leave
adc
repnz
xor
sbb
pop
lea
shrl
out
adc
sbb
outsl
pop
jns
dec
mov
and
mov
pop
inc
push
push
adc
mov
ror
jnp
data16
xor
loop
lahf
mov
adc
pop
leave
adc
xchg
jbe
lahf
mov
adc
mov
aas
pop
test
adc
cli
add
xor
xor
push
push
pusha
stos
push
jmp
jb
mov
adc
aaa
xchg
jg
xor
movsl
jb
ret
pop
xchg
push
dec
jg
inc
into
daa
call
cmp
xor
fmuls
mov
mov
fldcw
mov
cmpsl
xchg
in
fisubrs
jo
push
mov
movzbl
sub
xor
mov
orl
xor
orl
or
shl
subl
imul
mov
mov
shrd
incl
mov
mov
xor
shr
and
mov
movzbl
or
mov
mov
addl
xor
andl
or
sbbl
shl
addl
sub
movl
mov
cmp
mov
mov
jg
xorl
mov
adc
mov
shrd
orl
mov
xorl
mov
xor
shl
xor
addl
or
xorl
shr
mov
mov
mov
or
mov
shrd
subl
jmp
fwait
push
dec
mov
xchg
sbb
inc
push
je
dec
test
xchg
push
push
cmp
cmc
sub
aam
cld
pop
dec
and
mov
pop
gs
mov
test
pop
movsb
xchg
aad
pop
sbb
add
and
mov
inc
mov
imul
xor
popf
dec
adc
cmp
int
jl
pop
aad
fldt
sub
mov
push
jo
loope
jnp
inc
lret
fisubl
cmpsl
in
mov
mov
mov
inc
leave
dec
adc
inc
add
jnp
sub
sbb
stos
pushf
gs
hlt
mov
call
mov
jno
mov
jp
sbb
push
add
int3
jno
ljmp
sbb
mov
xorl
mov
clc
push
xor
jp
hlt
lcall
mov
pop
movsb
repnz
daa
fnsave
adc
lret
mov
hlt
inc
icebp
fs
in
mov
xlat
cmc
insl
in
add
iret
mov
sarb
aas
cmp
xor
fstps
nop
cli
jb
rorl
and
sub
jecxz
xchg
jbe
jl
out
and
repnz
mov
adc
lods
pusha
decb
mov
jne
dec
mov
and
xchg
xchg
fstl
cmp
notl
or
int
aad
mov
and
imul
leave
jl
lcall
lods
xchg
pop
pop
jp
adc
test
ficompl
sbb
leave
cmp
inc
into
fisttps
int3
divb
push
and
inc
lods
mov
xor
mov
fs
incl
movsl
fadds
mov
mov
dec
dec
and
fucom
cmpsb
mov
lret
pushf
mov
push
or
pushf
loopne
mov
repz
je
adc
cmp
sub
sti
addr16
bound
mov
push
sub
or
loop
mov
push
xor
notb
ja
add
push
inc
mov
jp
pop
hlt
xchg
mov
aad
mov
cmp
ljmp
mov
cltd
sbb
xchg
fwait
fwait
xchg
sub
test
xchg
cld
push
inc
test
shlb
rcrb
dec
or
xlat
mov
jbe
inc
push
mov
fwait
inc
lods
and
sbb
mov
sbb
sub
cmpsl
push
adc
nop
cmp
andb
cltd
mov
cmp
fimull
fnsave
or
dec
sub
movsb
ret
mov
mov
aam
xchg
movsb
mov
shll
mov
subb
jns
cmp
out
or
add
cmpsl
decl
cmp
mov
icebp
mov
lods
pop
cli
push
mov
jge
xor
addr16
sbb
dec
push
cmp
cmpb
inc
pop
and
xor
lret
or
cmp
inc
js
jp
mov
lcall
cwtl
adc
mov
test
fcmovnbe
je
xorb
mov
shll
test
push
inc
outsb
mov
fldt
dec
xor
and
test
aad
jbe
loop
and
sub
mov
mov
lret
fs
repz
lret
sti
xor
loopne
xor
dec
je
xor
in
push
test
ds
jnp
pop
mov
sbb
xchg
out
mov
cltd
ss
fstpl
inc
xchg
pop
lahf
fcomps
popa
sbb
push
ret
mov
pop
dec
in
fs
pop
mov
and
push
dec
mov
xchg
sbb
in
xlat
bound
orb
fisubrs
leave
int
into
in
nop
lret
adc
adc
or
and
ret
add
shll
clc
scas
cmp
inc
add
pop
je
in
push
add
adc
xchg
mov
jmp
fnstenv
addr16
xor
mov
xchg
pop
push
xchg
sahf
pop
es
iret
arpl
loop
sub
pop
or
outsb
lods
lods
hlt
pop
add
movsl
mov
inc
xchg
movsl
cmpsb
stc
movsb
mov
xor
or
insb
test
mov
arpl
fistl
inc
notb
xchg
repnz
jo
add
pusha
pop
xchg
cmpsb
imul
iret
sub
push
mov
mov
dec
push
push
mov
scas
push
add
dec
fisubrs
nop
inc
mov
shlb
jp
daa
xchg
jns
outsb
cli
popa
mov
repnz
lcall
shll
imul
cmpsb
mov
ds
xlat
nop
mov
insb
or
push
mov
in
mov
jbe
dec
inc
imul
cs
lods
in
loop
xor
jbe
int
std
inc
push
enter
outsl
xchg
repnz
jge
pushf
ss
je
arpl
pushf
jb
or
inc
jno
sarl
fsub
xor
xor
mov
sbbl
pop
push
cld
shr
sub
mov
or
mov
and
mov
xor
orl
xor
jmp
fisttpl
mov
xor
sbb
add
cmp
mov
ret
loopne
dec
repnz
sub
imul
popf
pop
inc
adc
and
mov
stos
les
sbb
popf
xchg
aad
ljmp
call
scas
xchg
into
xchg
cmp
jmp
xchg
and
sbbl
and
adc
movsb
js
sbb
and
jle
push
sub
sub
data16
jmp
jns
add
mov
cmp
ljmp
pop
fldenv
gs
mov
cmp
jo
iret
enter
stos
mov
adc
rolb
in
cmp
addr16
cmc
jge
fdivr
sahf
shll
pop
jnp
adc
repz
adc
sti
mov
add
mov
insl
and
ss
scas
aam
xchg
outsl
pop
pop
std
xor
rol
pop
scas
into
xorl
xor
mov
jge
int3
pop
daa
mov
adc
dec
inc
out
push
ljmp
jge
push
pop
push
testl
xchg
stc
pop
xchg
in
cmp
rcrl
and
lea
cmpsl
rorl
dec
loopne
mov
and
js
testl
jnp
leave
sub
insl
fs
or
or
lahf
sub
and
das
ficompl
sub
adc
sub
lock
mulb
ja
mov
jp
stc
push
jge,pn
push
je
mov
and
jno
rcll
inc
xor
jl
add
movsb
sbb
mov
inc
add
jmp
xchg
mov
push
call
dec
sub
mov
shll
shll
mov
add
movsl
icebp
inc
mov
js
push
cmp
std
ds
mov
mov
stos
jb
out
repz
jnp
test
jnp
repz
cmc
push
rolb
mov
ficoml
inc
xchg
lret
or
mov
inc
insl
cmp
arpl
xchg
jnp
mov
pop
into
dec
push
jae
dec
jge
cmp
push
jecxz
in
and
adc
push
sbb
push
jp
cmpsl
sbb
fdivl
fdivr
ljmp
in
rep
adc
mov
int
sti
in
scas
cmp
mov
push
or
push
rcrl
push
cmp
sub
bound
inc
mov
nopl
adc
sub
mov
mov
xchg
imul
xchg
and
test
mov
push
mov
adc
lods
mov
lods
mov
lahf
xchg
repnz
cwtl
loope
in
out
inc
sub
pop
subb
repnz
inc
les
sub
pop
aaa
mov
or
daa
mov
jb
add
repz
aas
jg
shll
mov
and
mov
cltd
into
ja
xor
in
and
mov
push
jg
in
mov
pop
mov
sub
sub
add
out
je
shlb
xor
push
mov
gs
jmp
mov
mov
sub
mov
jmp
pop
out
scas
sarb
push
cmp
stc
jl
mov
std
xchg
lret
nop
sub
jno
out
outsb
gs
xchg
mov
pop
add
add
push
pop
fisubrl
pushf
jb
lods
mov
stc
cmp
dec
cmp
jmp
xchg
ret
out
sbb
and
jno
ret
insl
sarb
sbb
lret
cmc
jp
push
je
fimull
mov
lret
out
or
orb
fisttpl
inc
inc
dec
push
jge
jle
mov
mov
shl
inc
dec
lock
adc
sub
fwait
cmp
jle
mov
pop
xchg
or
fisubrl
data16
push
ret
push
jl
mov
dec
inc
pusha
push
sub
lcall
push
les
mov
cmp
xchg
push
and
push
pushf
sti
rcl
sbb
int3
mov
dec
lret
sbb
lea
mov
sbb
lahf
jns
xchg
lods
inc
ret
or
dec
loopne
inc
fisttps
mov
adc
inc
out
mov
adc
aas
lret
mov
adc
icebp
outsb
lea
test
and
jo
jge
gs
dec
jo
cmp
xchg
push
in
pop
mov
adc
jg
test
bound
jo
pushf
imul
enter
or
jae
mov
add
xor
aaa
outsl
cmp
xchg
adc
mov
mov
mov
sub
imul
xor
jae
fcmovne
loope
mov
pop
add
sar
fs
pop
mov
pop
call
daa
lret
sbb
test
and
xorl
or
shl
subl
imul
sub
movl
jmp
sub
mov
mov
sbbl
shrd
mov
mov
xor
adcl
jmp
bound
imul
push
pop
fsts
std
mov
shrb
cmp
ljmp
jno
dec
cwtl
xor
rcrl
mov
push
sub
ljmp
dec
pop
mov
pop
and
push
adc
or
mov
sub
or
jne
mov
add
or
sbb
pop
mov
fists
lret
in
xor
daa
cmp
icebp
in
ret
mov
test
out
repz
cld
cltd
loop
mov
rcll
push
add
les
lret
out
xor
xor
sarl
sbb
mov
dec
sub
aaa
and
scas
enter
push
popa
imul
lcall
cli
test
insl
daa
inc
push
lea
xchg
push
aam
imul
fwait
push
rcrl
imul
pop
inc
xor
xchg
jne
add
mov
xchg
mov
cs
fsubrp
test
and
inc
jb
popf
mov
stc
push
imul
or
xlat
mov
sub
pop
xor
cmp
xchg
iret
pop
xchg
loop
je
ret
cmp
adc
sub
inc
ljmp
and
daa
cmpsl
push
push
imul
aad
rol
fldenv
xlat
add
jae
mov
into
cmpsl
test
in
ret
push
inc
inc
test
pop
lods
push
stos
ljmp
sbb
cltd
sar
sub
lea
mov
icebp
inc
jno
clc
test
aam
pop
out
inc
xchg
cld
test
aaa
xor
aas
cmp
call
pop
sbb
pop
mov
mov
repz
cmpsl
test
stos
es
test
pop
js
jp
cmp
pop
aas
mov
das
aam
and
cld
pop
xlat
jnp
sub
adc
popf
xlat
pushf
test
aas
mov
xchg
clc
jp
int
xlat
push
test
mov
cmpsl
gs
jmp
adc
jb
icebp
shl
ss
mov
movsb
adc
cmpsl
cmpsb
sub
data16
pop
jo
aad
xchg
mov
aas
xor
iret
icebp
dec
shrb
pusha
cltd
inc
insl
mov
push
inc
dec
stos
cmp
sahf
aaa
pop
push
out
inc
ror
push
jmp
dec
xchg
push
sbb
js
dec
int3
iret
mov
andb
andl
xchg
pop
and
ret
add
add
mov
and
cmc
stc
jp
std
and
and
mov
cltd
pop
leave
add
daa
outsb
jp
stc
iret
mov
inc
in
mov
or
mov
pop
nop
sbb
mov
mov
mov
lds
mov
ror
jnp
sub
enter
dec
scas
xchg
xchg
bound
cli
bound
mov
sbb
mov
incb
lcall
mov
fwait
jno
adc
dec
jecxz
in
mov
inc
xor
repz
popa
enter
stos
shll
adc
mov
aaa
pop
in
add
test
rcll
or
xor
pop
jns
insb
fnsave
shlb
mov
sbb
pusha
into
mov
add
lret
mov
mov
adc
ficoml
jge
pop
scas
mov
jg
int
mulb
push
push
push
out
ret
pusha
jp
leave
fcmovnbe
stos
arpl
in
jmp
push
pop
add
pushf
push
or
repz
ret
test
fisttpl
out
dec
sub
lds
xor
inc
lahf
or
or
sbb
movsb
xchg
xchg
adc
adc
jle
nop
mov
call
mov
jns
stos
sbb
dec
subl
inc
mov
std
into
mov
das
lret
jns
or
mov
int
pusha
popa
add
sbb
xchg
mov
mov
push
adc
imul
imul
pop
mov
cmc
mov
fcmovnu
sti
push
sub
mov
incl
and
bound
adc
cwtl
inc
std
mov
into
inc
push
and
fs
cmp
test
xlat
jb
mov
mov
push
jle
push
ds
jmp
add
iret
push
jb
inc
xchg
xlat
pop
xor
subl
cli
xchg
and
adc
pop
jnp
out
fst
iret
insb
aam
sub
int
push
cmp
or
shll
iret
out
xor
lds
lock
mov
and
into
cmp
in
outsl
push
add
fsincos
jbe
push
push
dec
bound
mov
insb
push
inc
shll
pop
imulb
cltd
push
mov
pop
fldl
push
mov
gs
push
in
movsw
xor
test
xchg
pop
xchg
mov
adc
xchg
loope
es
add
push
dec
daa
adc
xchg
xchg
pushl
push
loopne
iret
mov
mov
sarl
adc
ret
push
sarl
pop
ja
fucomi
movsb
inc
push
leave
xorl
or
shr
xor
mov
mov
cmpl
movl
mov
mov
jmp
movl
je
push
call
xor
or
xor
add
inc
or
adcl
mov
cmpl
movl
movl
jmp
movl
jle
pushl
push
push
push
push
push
call
inc
dec
sbbl
sub
cmpl
mov
mov
not
jmp
movl
jae
push
push
call
add
xor
andl
sbbl
adc
xor
xor
add
mov
mov
shrd
addl
jmp
loope
ja
xor
pusha
pushf
sub
scas
jb
popf
mov
push
cmp
and
fwait
mov
sub
ss
rcll
dec
inc
mulb
test
out
outsb
xor
pushf
and
bound
or
hlt
mov
xchg
scas
cs
push
and
jmp
mov
pop
push
adc
scas
cmpl
mov
hlt
lahf
popa
insl
out
frstpm(287
xchg
sub
std
mov
data16
dec
pop
adc
cmp
pop
aas
inc
cmpl
inc
lea
lret
popl
rorl
inc
push
sub
sub
mov
in
imul
pop
fiaddl
or
jae
mov
stos
xchg
mov
dec
xchg
vpsadbw
mov
jmp
jns
test
mov
jl
or
pushf
cwtl
shlb
sbb
imul
adc
aam
inc
aad
mov
pushf
push
ret
pop
out
mov
ficomps
xlat
fnstsw
adcl
stos
das
ss
or
rolb
inc
xlat
pop
jb
nop
push
mov
adc
cmp
sarl
push
sub
cs
push
test
add
scas
mov
pop
mov
out
pop
xchg
cltd
insb
test
cli
sub
lock
add
cmp
dec
hlt
mov
dec
insl
mov
and
mov
cmp
sub
outsb
cmp
inc
pushf
outsb
incb
dec
sbb
push
out
push
jg
add
ja
out
dec
mov
js
sub
dec
xchg
pop
adc
std
cmp
scas
xchg
xchg
xchg
sbb
pop
jle
adc
mov
enter
js
jns
lret
xor
jp
jmp
cmp
or
out
xor
rep
ja
adc
sbb
fwait
dec
in
mov
bound
pop
lret
push
inc
add
mov
push
ret
loopne
sbb
sti
mov
jno
fsubs
mov
xor
leave
lret
mov
mov
ret
inc
out
arpl
or
push
js
pop
and
jnp
mov
inc
push
xchg
out
icebp
jle
mov
sbb
insl
ss
jne
cmc
shlb
pop
sti
push
add
fldcw
xorl
rcr
test
dec
and
xor
notl
push
nop
cli
lret
lock
nop
dec
repz
and
movups
sbb
sub
dec
in
adc
mov
cmpsl
dec
shl
sbb
hlt
fistps
and
shlb
push
iret
dec
inc
test
imulb
cmp
mov
sbb
das
inc
xlat
inc
leave
movsl
repz
int3
fidivs
das
jecxz
mov
int3
lret
pop
mov
aam
mov
shrb
mov
mov
add
sub
cmp
adc
popa
add
cmp
test
or
loope
movsb
cmp
dec
mov
pop
mov
jl
pop
shrd
fwait
movsb
mov
pop
fbld
cli
and
out
mov
fdivs
jmp
les
loope
mov
fiadds
scas
adc
add
pop
xor
andl
sub
fdiv
std
out
rcrl
cmp
mov
push
lods
push
mov
push
stos
pop
call
jmp
jmp
add
or
add
sbb
jae
mov
ss
jmp
xchg
popf
shll
out
outsl
push
outsb
push
mov
subb
adc
jecxz
add
push
fldt
mov
cmpsb
bound
mov
or
je
das
subb
out
mov
es
pop
adc
lea
pop
xor
or
or
jg
jecxz
fldl
push
lods
xchg
outsl
dec
sub
fildl
scas
fmull
xlat
sub
jmp
lods
int
jmp
and
in
inc
pop
int3
mov
andb
fstpt
in
out
aaa
push
cmp
decb
daa
dec
sbb
jle
mov
sbb
addr16
pop
push
sarl
adc
sbb
decl
or
jge
xchg
aaa
jecxz
fwait
loopne
pop
mov
jne
push
dec
faddl
scas
lds
mov
pop
mov
jl
dec
das
mov
int
sbb
lret
inc
int
les
ss
and
std
push
sbb
jo
xchg
sub
jns
cmp
mov
mov
div
aad
mov
mov
mov
fsubrp
cltd
dec
gs
icebp
fisubl
call
stc
cmc
scas
cwtl
test
lds
leave
outsl
jb
int3
icebp
data16
je
add
push
gs
xchg
mov
inc
and
lcall
aas
lods
jbe
pop
or
out
sbb
lds
inc
jb
ffree
ss
or
sbb
stc
sub
push
ljmp
psraw
imul
inc
into
rclb
pop
and
aad
push
iret
jp
rcll
movsb
ficoms
out
dec
ret
ror
in
and
push
sub
pop
jno,pn
xchg
jp
pop
push
shll
push
test
ljmp
sbb
add
add
mov
orl
xor
orl
xor
or
orl
shl
decl
add
add
sbb
mov
sub
mov
movzbl
sub
mov
shrd
shr
sub
mov
cmpl
movl
mov
movl
jmp
movl
movl
jne
push
push
push
pushl
call
and
sub
inc
adcl
dec
mov
mov
xor
mov
xor
shl
xor
or
xor
add
adc
mov
jmp
jle
fucomp
sbb
test
mull
push
cmp
cs
test
loopne
mov
arpl
sbb
cmp
push
adc
cmpl
and
dec
rcrb
cmp
adc
or
nop
int
mov
cs
pop
jp
push
adc
jge
notl
sub
sub
arpl
shlb
add
cmpsb
ret
mov
push
insb
insl
cwtl
pop
cmp
mov
pop
or
clc
repz
aam
sbb
jge
pop
stc
stos
xor
mov
fdivs
cwtl
add
lods
addr16
xor
js
pop
in
lods
mov
imul
aas
xchg
pop
outsb
daa
outsl
mov
fnstcw
and
push
xchg
xor
rolb
inc
dec
sbb
leave
iret
pop
push
cmp
adc
jle,pt
data16
shrb
lods
jmp
pop
gs
in
or
pushf
mov
repz
push
outsb
cli
nop
cmp
mov
addr16
xor
xor
pop
mov
jne,pt
shll
mov
add
imul
out
add
aam
fildll
imul
push
mov
cmpsb
mov
cmpsl
cwtl
cmpsb
jmp
jecxz
adc
addr16
and
xor
nop
lods
outsl
push
mov
repnz
cmp
cld
leave
outsl
pop
dec
ret
push
mov
xchg
movsb
push
xchg
scas
and
push
dec
dec
data16
push
xchg
es
je
jmp
mov
push
cmp
jb
in
inc
bswap
sub
xchg
loope
dec
inc
aas
ds
xor
cs
and
dec
push
int3
dec
and
mov
imul
lahf
sbb
pop
test
in
mov
in
test
fldt
aas
popa
jae
add
fdivrs
insb
idivl
in
cli
fnsave
fsts
lret
mov
dec
js
sbb
rcrl
pop
in
outsb
lods
and
sbb
and
and
or
xor
or
inc
push
mov
hlt
lock
xor
dec
aas
and
es
mov
pop
pop
std
dec
pop
inc
in
inc
dec
mov
mov
jmp
inc
sbb
std
and
les
jb
xor
loope
cmpsl
and
mov
gs
lret
shlb
mov
ljmp
cmpsl
mov
push
push
adc
push
xor
jbe
lods
popf
shrl
cmp
ficoml
pop
mov
mov
add
aas
mov
addr16
movsb
and
push
dec
pop
jae
mov
test
fistps
xchg
pop
pop
push
shll
jbe
test
loop
jae
mov
faddl
cs
push
and
push
pusha
cmp
xor
aam
or
dec
inc
popf
mov
stc
rcll
or
push
push
imul
lock
dec
decb
ds
aas
push
or
sub
stc
jne
xchg
push
xchg
lret
add
xchg
nop
mov
adc
push
mov
lds
rclb
imul
into
cmp
addb
mov
mov
insl
jbe
cmp
jl
sarb
sub
inc
iret
mov
mov
rorb
sti
cmp
pop
dec
inc
and
lret
icebp
movsl
loop
pop
or
inc
push
rcr
mov
ja
dec
scas
xchg
outsb
das
inc
mov
test
ss
rcl
pop
mov
lock
xor
push
jno
xlat
stos
decl
and
test
les
out
inc
ret
nop
and
aaa
loope
sti
fdiv
in
pusha
cld
test
insl
sub
xchg
and
lea
cmpsb
jmp
mov
ret
push
movsb
add
insb
mov
cmc
outsb
popa
pop
push
mov
scas
pop
adc
sbb
icebp
int3
daa
aad
sub
add
imul
push
movsb
lcall
dec
decl
stos
xchg
repz
dec
lds
std
clc
in
inc
mov
bt
jno
sbb
lcall
pop
into
sbb
jge
test
xlat
push
pop
test
jle
insl
ficompl
push
jae
gs
sub
dec
add
mov
dec
ret
test
orl
xlat
rorb
sarb
mov
in
scas
lcall
xor
mov
fucomp
aas
push
add
dec
stos
and
and
dec
adc
popf
and
fs
fbstp
sbbb
incb
xor
arpl
call
adc
sahf
decl
xchg
das
stos
inc
aas
or
mov
jne
push
cld
movl
sbb
mov
or
mov
sub
movl
and
mov
movl
mov
movl
add
mov
sbbl
mov
xorl
jmp
mov
or
sbb
pop
push
sbb
push
push
cmp
push
mov
mov
xor
pop
js
daa
xor
sbb
or
loopne
xor
rorl
fwait
std
ficompl
sbb
xorb
mov
cmpsb
xor
das
mov
lea
mov
sti
arpl
sub
mov
xor
ret
jecxz
sbb
daa
movl
push
and
fsts
adc
xchg
insb
dec
fisttpl
inc
adc
dec
adc
sub
adc
push
shrl
xor
imul
fisttpll
sbb
inc
or
lahf
in
outsl
sbb
inc
shlb
dec
cmpsl
pop
push
xchg
jo
cli
sarb
push
roll
inc
mov
fs
popa
pop
data16
or
loope
sahf
fdivl
stos
xchg
jo
leave
push
sub
dec
adc
or
sbb
stos
mov
xor
mov
fbstp
and
bound
adcl
sub
lea
lret
or
push
movsl
rorl
xchg
push
mov
loope
pop
stos
jmp
cltd
ljmp
cmp
ret
xor
int3
mov
scas
xor
loopne
aaa
outsl
mov
scas
xor
sub
jb
push
adc
stos
mov
inc
pop
xor
jg
push
ljmp
pop
cmp
sub
push
push
xchg
or
test
outsl
js
inc
aaa
adc
scas
mov
push
mov
sub
push
fidivrs
popa
call
int
inc
pushf
add
outsb
sbb
jb
dec
lret
xchg
mov
sub
dec
add
dec
inc
lea
cmp
nop
inc
inc
sub
inc
mov
pop
pop
mov
lock
cwtl
mov
adc
cmp
jne,pt
aam
outsb
mov
adc
dec
cld
cmp
sbb
das
mov
and
add
popa
mov
pusha
xorl
mov
les
imul
jp
loop
mov
fisttps
ret
mov
sbb
jb
pop
mov
test
popf
test
push
clc
jae
mov
ljmp
rcl
sarb
out
or
jns
xor
shrb
hlt
lret
dec
mov
push
outsb
adc
lret
dec
cmp
mov
mov
mov
das
imul
cmp
jne
and
popa
inc
and
jbe
pop
iret
rclb
push
cli
push
pop
out
cmp
xchg
test
arpl
jmp
cmp
mov
mov
imul
xchg
int3
jbe
mov
mov
daa
pop
inc
jbe
stos
shlb
push
movl
fidivrs
sub
xchg
cwtl
push
xchg
cli
mov
mov
mov
sub
ljmp
loopne
sub
and
push
push
push
lea
xlat
adc
aas
out
add
push
inc
fldcw
fiaddl
mov
dec
lds
pop
adc
mov
imul
js
loope
and
jb
aad
fisubs
and
sub
data16
les
js
cmp
lret
pop
mov
ds
xchg
cwtl
orl
std
ljmp
test
cmp
xchg
ret
mov
test
xchg
cmp
in
xchg
in
lahf
cs
flds
cmp
inc
pop
dec
push
cmp
leave
test
dec
dec
push
mov
rorb
add
insb
gs
pop
mov
repz
mov
mov
cltd
dec
sbb
movsl
std
jle
stos
fwait
cmp
mov
outsl
fisttps
inc
xchg
sub
out
push
outsb
das
pop
vcmpps
sbb
cltd
inc
mov
mov
adc
sub
test
push
movsl
push
add
xor
jmp
lahf
nop
hlt
xchg
in
cli
repnz
jae
jnp
mov
xchg
lret
xchg
rcrb
pop
adc
in
out
std
sbb
int3
out
sbbl
jnp
pop
or
xchg
pop
daa
push
sbb
inc
push
add
icebp
lahf
faddp
movsb
mov
fs
mov
in
gs
jp
imul
insb
dec
push
ret
test
loop
pop
mov
push
in
xor
mov
dec
pop
pop
xor
pop
inc
jbe
jge
push
cmc
push
xchg
sahf
iret
cld
out
mov
test
jb
pop
sbb
adc
inc
fsubrs
xor
pop
repz
sbb
and
aaa
adc
mov
shlb
gs
popa
sbb
ret
pop
push
add
or
inc
push
rcll
iret
jbe
notl
in
ret
jp
ror
and
sub
roll
jl
imul
jge
xchg
or
adc
jbe
js
nop
daa
jae
sbbb
dec
push
pushf
or
xor
jmp
sbb
xor
jp
or
lods
enter
inc
sub
add
mov
repnz
movl
movl
mov
jmp
movl
ja
push
push
push
push
call
adc
orl
movl
and
movl
mov
mov
sub
addl
shr
orl
mov
mov
xor
shl
and
xor
or
lea
sbb
mov
mov
mov
and
shrd
mov
sub
shr
or
jmp
xchg
xchg
pop
test
mov
fsubrs
cmp
or
into
movb
das
mov
inc
sub
push
int3
insb
into
dec
cli
js
int
mov
or
aam
jae
aaa
sub
mov
clc
cli
fildll
mov
outsb
in
mov
popa
ljmp
clc
fmull
and
pop
xchg
ret
data16
xor
mov
data16
outsb
pop
call
adc
jne
mov
pusha
jge
dec
out
inc
adc
popf
std
pop
ss
and
mov
sub
fisubrl
sbb
int
fcoml
ret
filds
jne
imul
jo
loope
push
mov
cmp
or
rcrl
mov
push
sbb
mov
ljmp
rcrb
hlt
and
jo
dec
pop
imul
lods
mov
add
push
adc
ret
mov
push
adc
mov
xchg
cmp
enter
adc
lock
pop
shll
mov
cmp
xor
sub
movsb
insl
mov
pop
int3
ror
add
xchg
pushf
jbe
es
pop
fs
insl
cmpsb
dec
add
jle
pop
ss
lea
and
aad
pop
pusha
and
in
and
out
aaa
pop
out
ljmp
orl
insb
rcl
xchg
movsl
inc
fst
jl
iret
aaa
adc
dec
mov
mov
pop
sub
push
mov
fwait
jl
dec
or
mov
loop
mov
inc
pop
bound
inc
dec
pop
std
inc
fs
xlat
adc
cmp
jp
cltd
dec
jns
mov
shrl
add
loope
mov
cwtl
cwtl
jg
sbb
cwtl
adc
xor
popa
ret
sarb
jp
std
roll
cmpsl
push
xchg
pop
mov
pop
xor
cmp
mov
mov
notb
fildll
out
xchg
xchg
cld
xchg
push
push
sbb
outsb
in
out
dec
add
xchg
dec
and
dec
stos
mov
scas
in
call
lret
mov
adc
aad
mov
pop
push
inc
or
insl
sbb
outsl
sbb
xchg
dec
int
dec
sbb
xor
ret
push
xor
pop
shll
mov
push
ss
loop
adc
test
lret
xor
mov
mov
and
leave
dec
fstps
mov
mov
cmp
fmuls
and
icebp
pop
cmp
and
or
js
push
cmc
xchg
mov
cmp
popa
or
mov
jno
hlt
or
mov
lock
add
jae
mov
fsub
mov
ja
jae
sub
sbb
test
xchg
fcoml
jp
pop
sti
ljmp
pushl
and
arpl
push
ret
adc
fldcw
cmpsl
cmpsb
xchg
push
mov
scas
or
aad
sub
push
adc
dec
or
hlt
es
inc
sub
scas
ljmp
xchg
in
add
mov
inc
mov
test
add
loop
enter
imul
leave
push
jmp
mov
shrb
push
enter
sti
jae
aas
subb
and
fisubrs
ljmp
inc
in
into
jns
jbe
popl
lock
push
jae
pop
icebp
cli
pop
jecxz
bound
ds
addr16
push
sbb
mov
mov
pop
aam
jmp
std
out
push
push
das
sbbb
sbb
lea
xchg
lods
inc
jns
jb
out
mov
sbb
pop
in
cmp
movsl
data16
jmp
mov
sbb
cmp
stc
sti
dec
test
pushl
push
jge
nop
mov
aam
ds
xor
stc
and
inc
cmp
sub
call
xor
xchg
je
cmpsl
mov
orb
push
mov
fisubrl
mov
inc
std
jl
aas
movsl
adc
fnstsw
pushl
and
cwtl
lahf
dec
mov
mov
inc
mov
and
into
mov
push
inc
decl
cmp
bound
lods
and
lcall
adc
dec
sub
mov
stos
xor
repnz
cmp
jno
inc
mov
or
popa
pop
lods
das
and
out
jnp
sbb
imul
pop
lret
mov
aaa
xlat
mov
mov
cmc
push
sarl
pop
cmpl
adc
sarb
insl
cmp
mov
gs
leave
xor
jae
add
lret
fisttpl
aad
lcall
push
sub
xor
push
in
xor
dec
iret
mov
mov
push
lock
dec
out
xor
sub
leave
or
dec
imul
bound
mov
and
mov
mov
adcl
shl
mov
xor
xor
sbbl
or
mov
mov
or
xor
mov
subl
jmp
in
imul
pop
je
pop
mov
jnp
push
cmp
movsb
mov
mov
sbb
cmpsl
fs
les
pop
cmp
fisubrl
lcall
inc
jbe
ja
push
subb
adc
test
or
mov
fildll
call
jne
fimuls
jg
leave
lcall
sub
adc
inc
std
jmp
into
pop
xor
in
mov
cmp
cmpsl
push
inc
dec
test
push
mov
out
pop
nop
movsl
fiadds
mov
xor
cwtl
and
mov
icebp
sub
xor
mov
pushf
dec
mov
cmpl
jmp
dec
inc
mov
xor
pop
inc
into
insl
dec
pop
rorl
js
pop
shlb
sbb
js
loop
pop
insb
push
mov
lds
in
add
mov
mov
mov
and
mov
les
mov
mov
in
mov
xor
test
add
sbb
pop
dec
shrb
xchg
orl
test
push
outsb
les
outsl
mov
out
mov
inc
rolb
jp
pop
imul
popl
push
imul
adc
cmp
int3
cltd
mov
push
pop
pop
shrl
cmp
addr16
mov
dec
dec
je
roll
xorb
sub
scas
push
mov
mov
xor
shrl
icebp
sbb
pop
in
cmp
adcl
push
rcr
jl
xchg
int3
xor
dec
imul
mov
jne
inc
xor
dec
inc
xchg
inc
hlt
les
ja
and
pop
jnp
aam
test
scas
ficoml
iret
push
mov
inc
mov
mov
xlat
jl
push
dec
rcrl
jns
mov
scas
xor
push
push
adc
insb
stos
jbe
test
fsubrp
add
movsl
test
push
je
fldenv
inc
sub
scas
fimuls
imul
mov
sub
popa
shlb
lods
sub
loop
push
ds
out
outsl
shrb
mov
mov
add
jle
jmp
add
xor
push
xor
nop
cmp
xor
jmp
xor
imul
into
in
inc
daa
sbb
stc
es
sub
sbb
outsl
ror
lahf
or
aas
cmp
dec
adc
shrl
mov
aad
adc
or
jnp
add
dec
adc
pop
inc
dec
bound
push
push
xchg
dec
cli
xor
pushf
fsts
push
hlt
dec
xchg
push
jg
std
sbb
xchg
push
or
in
dec
repz
cmp
repnz
enter
mov
jo
xor
mov
push
lods
fcmovb
mov
sub
ljmp
aam
adc
dec
adc
clc
pop
push
stos
pop
js
fisubrs
inc
fwait
push
sub
fiaddl
sbb
js
sarb
and
cli
nop
cwtl
adc
xor
daa
fwait
add
inc
sarl
cmp
adc
push
push
aas
jl
daa
in
std
and
xchg
inc
sub
adc
cmpsl
dec
lea
cmpsl
add
inc
enter
shrb
adc
mov
pushf
das
pop
dec
and
lds
push
ljmp
adc
stc
insb
jecxz
jge
cwtl
mov
cmp
mov
jmp
fmuls
clc
cmp
rcrb
sbb
adc
cltd
and
fists
inc
xor
push
pop
aaa
imul
repz
out
mov
inc
loope
and
and
imul
push
test
mov
call
movsb
divl
out
push
mov
xchg
sub
aaa
push
pusha
lret
call
scas
cmc
aam
fbstp
and
add
insb
sub
mov
loopne
fwait
mov
push
adc
sbb
cmp
or
rcll
outsb
push
push
inc
lods
jb
lahf
sbb
sbb
movsl
pop
pop
lret
mov
lods
mov
das
outsb
cmp
xchg
jae
jnp
fwait
test
cli
ljmp
ja
iret
in
repnz
add
mov
pushf
pop
pop
dec
movsl
pop
loope
xor
xor
or
mov
mov
scas
add
adc
cmp
lret
test
fldenv
hlt
iret
sti
add
mov
rorb
adc
push
cltd
and
int
cmp
rcl
ret
js
lahf
mov
iret
add
icebp
pop
pusha
xchg
mov
or
and
push
sub
outsb
adc
sub
insl
imul
jecxz
mov
loope
ljmp
fisubrl
aad
add
jmp
jmp
pusha
cmp
in
add
lahf
cltd
cmp
mov
and
shrd
xor
shr
addl
mov
xor
mov
xorl
xor
shl
sbb
xor
cmpl
mov
movl
mov
jmp
movl
jne
pushl
pushl
pushl
call
xor
add
and
mov
sub
add
xor
mov
or
adc
adcl
or
cmpl
movl
mov
jmp
movl
movl
je
pushl
pushl
push
pushl
call
sbbl
subl
add
sub
and
cmpl
movl
movzbl
mov
jmp
mov
movl
jge
pushl
pushl
call
xor
sbb
mov
mov
sub
sub
movzbl
or
mov
lea
mov
mov
mov
shrd
shr
mov
mov
jmp
add
inc
and
stc
adc
push
push
cmp
inc
in
hlt
aad
stc
addl
xchg
jae
jle
inc
lock
bound
ret
into
cmc
cmpsl
cltd
add
mov
mov
scas
in
lret
pop
inc
mov
push
and
cmc
dec
shll
pushf
cmp
cmc
adc
and
dec
popa
push
lcall
sub
jnp
add
xor
icebp
or
gs
cli
int
pusha
or
lcall
xor
pop
cmp
cwtl
or
stos
nop
cmp
and
imul
push
inc
adc
and
stc
jmp
mov
mov
pop
adc
or
jne
aaa
cmc
cmp
push
and
imul
testb
fstl
jl
cld
push
mov
sub
jns
push
jp
je
mov
cmp
fwait
dec
adc
pop
scas
push
std
mov
add
and
je
lret
lcall
testl
dec
inc
sbb
rolb
je
inc
lcall
ret
push
xchg
pop
mov
sbb
mov
sub
lcall
pop
arpl
xchg
test
jp
int3
cmpsb
imul
or
lea
jb
mov
pop
add
pop
mov
sbb
mov
adc
xchg
int
jb
sti
in
jbe
mov
mov
int3
aam
lret
cmp
popf
int3
push
ljmp
dec
dec
icebp
out
inc
inc
pushf
jmp
and
into
pop
insl
or
mov
repz
testb
adc
mov
in
and
mov
scas
sub
pusha
jno
in
mov
pshufw
shll
stos
lods
ds
out
dec
test
mov
mov
gs
stc
jns
cmpsl
testl
in
pop
and
or
pop
divl
imul
adc
das
jb
lahf
dec
jae
clc
sub
inc
and
daa
mov
addl
adc
xchg
aaa
sti
cwtl
rorl
or
insl
mov
mov
mov
pusha
dec
mov
mov
loope
push
ret
ss
push
call
mov
adc
inc
add
jp
hlt
adc
je
or
inc
xor
movsb
out
or
stc
xchg
add
jae
xchg
stos
and
scas
xchg
test
jns
aad
pop
ja
movsb
jp
rcl
sbb
xorb
dec
cmp
adc
hlt
add
mov
jbe
mov
les
andl
xlat
jns
mov
repz
dec
ds
test
stos
add
jnp
xchg
pushf
jb
imul
setne
aas
pop
test
sbbb
bound
push
aaa
testb
pop
mov
mov
inc
imul
push
adc
fdivl
lret
aam
lahf
fs
inc
inc
cmp
lock
cmpsb
cld
sub
dec
dec
sub
negb
test
pusha
mov
adc
movsl
enter
fistps
mov
mov
cmp
hlt
pop
push
stos
ret
push
push
pop
adc
cmp
xchg
in
or
jae
or
sub
mov
test
or
and
sub
sbb
sbb
xor
or
adc
sub
dec
push
jns
repnz
call
in
push
popf
jns
call
push
cmp
fdiv
shrb
orl
inc
jo
xor
cmpsb
mul
lret
xchg
add
sub
popa
ds
and
sub
pop
int
sarl
int
adc
add
int
push
popa
or
lods
loope
sub
xchg
test
or
icebp
out
xchg
iret
xchg
jecxz
jne
pop
call
jmp
cmpsb
loopne
or
iret
or
cli
mov
clc
inc
inc
fsts
cmp
push
mov
movsb
xchg
sahf
cmpl
adc
je
in
mov
hlt
loopnew
jno
mov
test
mov
mov
mov
out
and
nop
pop
addl
rcll
popf
les
sarl
arpl
sub
rep
fsubp
mov
push
add
sub
mov
movl
or
and
xchg
aam
xor
jmp
xor
dec
or
inc
jb
pop
mov
jno
jl
xchg
dec
arpl
xchg
push
scas
inc
leave
mov
les
jmp
jnp
mov
lcall
push
dec
or
add
aam
or
pop
cmp
movsb
xorb
xor
mov
dec
or
fbld
stos
add
jl
daa
or
rcrb
push
shr
xlat
or
loope
mov
jmp
out
inc
mov
push
sahf
pop
sub
mov
aam
push
push
cmp
movsb
mov
dec
testl
test
and
pushf
add
sbb
push
out
mov
ret
ljmp
cmp
je
xchg
jg
mov
fld
xchg
jae
adc
mov
shll
sti
aam
jmp
cmp
hlt
movsl
imul
cmp
jl
jp
in
loope
adc
cltd
mov
mov
inc
inc
nop
insl
jg
test
mov
pop
ds
test
stc
lock
push
cmp
jmp
in
clc
cmp
sti
cs
and
pop
push
dec
inc
lods
xchg
dec
repz
xor
pop
jnp
mov
ficompl
jmp
in
loop
inc
in
cmp
and
inc
sub
sahf
mov
lcall
lret
mov
ja
push
negl
mov
aad
pop
ret
dec
inc
test
ret
sahf
nop
push
mov
sub
push
loopne
int3
call
outsl
cmp
add
movsb
and
cld
mov
sub
outsb
cmp
mov
sbb
out
push
push
out
leave
iret
scas
cmp
dec
rcrb
cmpsb
test
mov
fists
mov
leave
xchg
jge
mov
fldcw
faddl
inc
inc
cmp
xchg
dec
push
inc
and
lret
pop
test
in
xor
stos
jno
inc
sti
mov
sub
sahf
sbbl
mov
dec
pop
cld
sub
jbe
mov
xor
push
mov
pop
les
add
or
or
dec
dec
aas
daa
test
jge
inc
push
xchg
cmp
inc
rorl
mov
mov
adc
jmp
add
cmp
sahf
insl
push
ja
mov
test
cli
out
loopne
jbe
icebp
add
int3
sub
pushf
push
xchg
sbb
rcrb
adc
test
ficomps
sbb
in
pushl
xchg
xorb
jb
ficoml
sub
int3
push
mov
jb
push
ret
data16
cs
cmp
imul
push
push
xor
insl
popa
out
andl
mov
mov
aam
lahf
pop
xchg
arpl
loop
push
jo
sub
pop
dec
lea
mov
mov
inc
xor
dec
inc
in
shr
sub
mov
movsb
xor
or
les
and
test
rcrl
xchg
xchg
inc
lods
adc
xchg
hlt
mov
in
mov
jno
out
and
das
pop
and
adc
fs
xlat
adc
sub
pop
addr16
xor
xlat
mov
push
dec
cmp
aad
pop
and
gs
xor
xor
shlb
aas
fnstenv
fsubp
dec
int3
and
sahf
pushf
cltd
inc
sbb
ret
jno
je
cmp
and
scas
insb
xor
insl
daa
mov
stc
pop
inc
int3
rorb
cltd
pop
pop
xchg
imul
out
jno
mov
sahf
xchg
ret
push
jae
cmp
inc
add
jmp
xor
adc
repnz
xchg
popa
or
mov
sub
mov
sub
or
test
pop
add
push
cwtl
and
pop
push
jecxz
in
sbb
daa
xor
sbb
mov
fldl
test
das
inc
or
mov
and
hlt
pop
xorl
xor
sarl
adc
adc
dec
jge
adc
xchg
inc
add
or
add
dec
jp
lahf
cli
dec
rcrl
sub
loopne
xor
pop
xlat
mov
call
gs
mov
dec
test
filds
sbbb
adc
repz
jo
lret
mov
imul
fisttpll
jae
sub
js
stc
stc
shl
imul
aas
dec
pop
sti
dec
or
into
dec
adc
scas
lcall
inc
movsl
mov
xor
sbb
push
popa
orl
dec
fs
mov
push
adcb
js
xor
dec
cs
dec
adc
call
mov
aaa
lods
pop
lods
aaa
out
je
decb
das
aas
call
xchg
imul
and
xchg
sub
arpl
jae
fcoml
add
popa
std
not
fwait
pop
loope
push
iret
lret
sub
sbb
js
mov
gs
xchg
xchg
rol
clc
xor
stos
add
mov
xchg
and
push
and
in
das
add
cld
cmp
add
mov
inc
adc
fs
pop
aam
imulb
push
dec
xor
ljmp
pop
cltd
aas
arpl
push
inc
and
mov
jnp
xchg
mov
test
call
jbe
jp
xlat
cmp
or
cs
mov
xlat
rcll
dec
dec
popl
cmp
mov
int3
sub
mov
push
jns
mov
sub
shr
test
test
dec
push
mov
call
push
cmp
mov
ss
popf
xor
mov
jb
outsl
fdiv
movsl
pusha
and
and
test
adc
dec
add
insl
add
js
or
sbb
or
push
repnz
xor
pushf
dec
cltd
stos
stos
sbb
jnp
jne
sbb
rcll
sti
mov
or
imul
fs
mov
das
das
or
flds
in
lock
mov
std
repnz
or
push
and
out
cmp
stos
push
cmpsl
popa
push
leave
xor
jmp
lods
nop
movsl
shlb
and
xor
loop
loope
push
lock
lahf
imul
insb
pop
sub
cmp
mov
jb
addb
adc
je
ds
lahf
dec
push
lea
push
mov
popa
iret
push
mov
mov
js
js
push
out
push
xor
inc
inc
orl
cmp
xchg
pop
and
jle
xor
adc
pusha
arpl
mov
pop
cmp
nop
cs
aas
popa
fdivr
add
dec
subb
addl
mov
aaa
pop
xor
pop
lea
sub
or
jno
mov
call
fwait
std
ss
repz
clc
mov
push
rorl
rorb
adc
into
lcall
insl
pusha
addr16
cmpsl
adc
xchg
xchg
int
mov
inc
enter
dec
add
xchg
dec
addr16
inc
pop
mov
lcall
into
adc
jne
sti
nop
fcmovnu
and
data16
and
je
add
mov
mov
xor
jne
hlt
sbb
pop
inc
add
dec
sahf
sbb
fldt
inc
popa
icebp
sbb
out
xor
push
adc
cmpsb
add
out
out
inc
test
mov
fsubrs
mov
xor
test
cmp
test
shl
mov
mov
jb
cmp
into
inc
int3
pop
lock
sbb
int3
jg
dec
inc
pusha
push
inc
inc
sub
call
xchg
scas
add
outsb
cld
dec
fwait
push
cmc
and
into
jle
adc
jns
mov
sbb
xor
movl
mov
test
adc
into
sub
sub
xor
sbb
mov
xchg
add
push
xchg
xchg
gs
fwait
sub
push
sub
rcrl
lods
jbe
cmpsl
movsl
sbb
push
int
jge
loopne
std
jno
or
mov
rol
repnz
lods
add
sbb
dec
ret
jp
outsb
and
cs
int3
test
rcr
jl
push
loope
clc
aad
push
adc
in
cltd
gs
lods
cmc
cmpsl
sub
mov
pop
mov
shlb
aaa
sub
ret
jae
daa
xchg
xor
inc
loope
jge
les
mov
loope
xor
repnz
jl
and
outsl
leave
sbb
movsb
stos
arpl
push
cmp
pop
jg
xor
mov
data16
sub
pop
adc
lods
add
test
add
sub
xchg
mov
mov
sbb
xchg
push
inc
jns
popf
adc
int
pop
jle
and
movsb
popf
push
add
add
sub
push
xchg
sbb
subb
xor
push
loop
fnstcw
test
test
or
lret
outsl
or
out
pop
stc
push
push
jmp
sub
data16
stos
fidivrl
ss
cmc
leave
push
pop
xchg
movsb
andl
in
push
and
pushf
pop
dec
pop
icebp
push
mov
mov
cmp
int
mov
fcmovnbe
aas
pop
inc
in
shr
divb
int3
dec
adc
sbb
mov
xor
sub
xor
cwtl
outsl
inc
sub
cmp
fimull
addr16
mov
imul
hlt
sub
sub
aaa
pop
pop
call
in
arpl
sub
pop
inc
and
icebp
dec
xchg
daa
mov
into
stos
inc
or
xchg
nop
cmp
cmp
daa
subl
jle
movsb
sbb
pop
and
cmp
mov
push
orb
dec
rolb
pop
rol
xchg
imul
jg
insl
pop
add
fcmovbe
into
mov
roll
lcall
push
out
orl
dec
gs
mov
push
dec
pop
sub
sahf
mov
push
das
mov
aad
sti
test
ret
mov
imul
add
dec
adc
mov
aad
fdivrp
stos
mov
ror
aaa
xorl
or
icebp
xor
shll
mov
aas
shlb
fwait
sti
mov
stos
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
jmp
sbb
push
sbb
mov
bound
push
cmp
mov
mov
mov
adc
mov
repz
push
pop
or
nop
cmp
pusha
clc
jne
inc
cmp
sbb
mov
inc
pop
notl
mov
out
mov
and
data16
pop
or
mov
inc
pop
movl
bound
cwtl
mov
lock
xor
out
icebp
add
add
sbb
xchg
sbb
loop
bound
aas
out
bound
sbb
pushf
ret
push
and
pop
xor
inc
cld
add
dec
add
sbb
inc
or
add
add
cmc
lods
xorb
xor
push
fstpt
dec
jle
sahf
fisttpl
dec
jmp
lret
and
mov
call
sahf
ljmp
mov
jecxz
mov
in
jecxz
inc
fcmovu
mov
mov
mov
inc
arpl
imul
pop
jecxz
and
mov
jb
fisttpll
aad
aad
mov
push
cmc
popa
jo
adc
ljmp
sbb
test
sub
addl
push
lds
shlb
jl
dec
add
test
ret
movsb
subb
adc
and
cmpsb
mov
adc
push
sbb
jo
popl
mov
xor
add
xor
hlt
inc
cmp
jp
imul
jnp
fldcw
stos
push
imull
xchg
sti
cmpsb
jmp
dec
out
rcr
fisubs
jnp
inc
dec
mull
and
adc
hlt
in
xchg
subl
mov
subl
and
ret
sbb
jo
pop
or
ds
dec
mov
lds
mov
fdiv
push
inc
push
pop
xor
xchg
out
cmp
lea
push
push
testl
cld
pushf
es
xlat
adc
and
mov
sar
hlt
push
xlat
push
ss
and
and
repz
lods
cmp
sub
rol
test
cwtl
dec
mov
mov
xchg
and
mov
mov
jecxz
movsl
mov
jno
out
test
shll
jno
xorb
aas
dec
aad
push
das
arpl
cmp
cmp
cmpl
pop
mov
pop
imul
or
outsb
call
popa
lret
insl
xor
adc
push
fnstsw
dec
jo
xor
cmp
loop
xor
jl
jmp
les
and
jecxz
cltd
andl
cmpsl
jo
loopne
dec
sahf
jns
jmp
mov
popa
fmul
je
push
leave
mov
iret
sub
cmp
inc
mov
jbe
xchg
aas
cmp
or
lret
mov
outsl
stc
dec
imul
into
cmp
pop
ljmp
iret
cld
cli
mov
mov
inc
inc
mov
int
mov
rorb
add
sarb
sub
xchg
or
adc
outsl
getsec
push
xchg
sbb
lods
cmpsb
out
cmpsl
jo
push
cmp
popf
cld
in
loop
xor
shlb
jge
sbb
in
int
and
mov
cld
cwtl
mov
popa
xchg
out
in
inc
mov
sbb
adc
ret
dec
inc
mov
inc
scas
gs
divl
mov
aad
cmp
mov
and
lahf
sub
sbb
notl
sbb
sahf
inc
sbb
fstps
mov
imul
mov
mov
lret
dec
cmp
in
lea
movsb
pop
add
xor
addr16
les
adc
in
arpl
leave
cld
mov
loope
sbb
add
aam
and
jecxz
pop
mov
rol
aad
nop
gs
movsb
add
adc
sub
jmp
inc
adc
xorb
dec
ret
xchg
das
loopne
dec
das
pushf
inc
jl
lds
adcl
sbb
pop
pop
xchg
mov
xchg
jp
dec
ss
push
and
sbb
push
adc
dec
push
xlat
mov
test
or
insl
cmpl
dec
sbb
mov
jnp
push
pop
repnz
scas
mov
lret
rorb
in
cmp
lods
mov
add
insl
sbb
out
fimull
les
test
push
in
subb
and
cmp
mov
cmpsb
pop
leave
jmp
xchg
cltd
stos
add
rol
and
mov
mov
ljmp
cmp
adc
pop
cmpsl
aam
cmpsl
push
cmp
ds
cmpsb
sahf
test
adc
adc
mov
inc
xor
dec
lock
xor
shl
mov
xor
or
mov
mov
jmp
inc
dec
aad
fcoms
inc
loop
ds
or
cmp
push
pop
pop
bound
in
mov
loop
stos
shl
cmp
mov
push
outsl
or
sub
fidivs
sub
and
fnsave
mov
sbbl
push
fwait
int3
jbe
or
push
std
push
roll
andl
sbb
add
jno
ss
pop
cmp
aam
sub
xor
rolb
or
xchg
xchg
adc
lds
xchg
dec
push
push
mov
inc
xchg
mov
outsb
pop
xchg
lahf
testl
and
daa
mov
lods
dec
or
and
push
mov
ja
hlt
pusha
popf
loopne
cmpsl
xchg
push
scas
out
enter
cmp
in
adc
in
rcrb
leave
sbb
push
xchg
jns
jns
and
mov
addl
in
lret
test
pop
daa
inc
add
lret
and
cltd
mov
bound
lods
loope
sbb
push
xor
ss
pusha
lock
pop
xchg
cmp
pushf
icebp
pandn
xchg
sub
fwait
inc
cs
and
xor
push
cmpsb
fnstsw
pushf
xchg
das
hlt
sub
pop
aaa
pop
bound
outsb
shr
jg
inc
add
pushf
cmp
mov
cmp
stos
push
int3
add
jl
and
jb
test
aam
call
pop
xlat
xchg
inc
xorl
xchg
outsl
or
mov
bound
cmp
imul
inc
xchg
xor
aaa
sub
out
ja
mov
sbb
fwait
movsl
mov
xor
out
loopne
inc
addl
jp
add
pop
bound
outsl
inc
data16
mov
and
sahf
jo
out
ja
movsb
mov
mov
stos
sub
insb
xor
dec
and
pushf
dec
pop
movsb
inc
shr
lock
pop
out
ds
call
inc
rcr
leave
adc
aad
imul
push
iret
cli
push
jnp
pop
gs
adc
adc
inc
das
mov
add
insl
popf
jnp
sub
cld
ljmp
jae
and
pop
sub
add
lock
cmp
test
fimull
dec
push
lds
cmp
sbb
mov
les
pusha
insb
ja
lds
lea
test
add
sub
mov
sbb
and
adc
sbb
lea
sti
cwtl
pop
cmp
fisttpl
cmp
jg
jp
xor
fldenv
js
or
stos
dec
in
imul
jne
inc
sbb
sub
idivl
jno
ficomps
pop
mov
pusha
mov
jbe
adc
xchg
or
cmp
enter
mov
dec
rclb
jno
call
adc
int3
popf
out
pop
scas
jns
inc
fs
pusha
or
popa
test
push
jg
push
push
adc
rolb
add
adc
mov
xor
aaa
rcl
adc
repz
cmp
xor
lods
fs
ret
pop
inc
ret
stc
xlat
mov
xor
xor
inc
cwtl
xor
and
and
adc
int3
adc
mov
imul
mov
jb
out
ficoml
outsb
adc
test
push
loopw
mov
sar
pusha
adc
test
jl
jb
pop
dec
lds
dec
ret
mov
mov
mov
call
movl
test
inc
xorl
int3
nop
shlb
jne
sub
fwait
jg
adcb
jge
push
cmc
or
mov
xchg
dec
lods
adc
inc
out
adc
adc
and
bound
adc
and
call
cwtl
dec
jp
or
pop
shll
scas
add
pop
inc
dec
cmpsb
or
sbb
push
aas
add
lods
mov
movb
cwtl
xor
fldcw
mov
enter
leave
lock
loope
ficompl
xor
bound
sub
hlt
sbb
mov
xorl
inc
cltd
add
dec
pop
ds
dec
loop
bound
xor
jmp
push
pop
mov
movsl
shl
sub
movsl
jp
sahf
out
test
dec
push
mov
pop
mov
pop
mov
fnsave
sbb
mov
fnstsw
subl
xor
dec
pop
pop
loopne
add
and
jge
cmp
mov
in
pop
sti
xlat
lods
movsl
lahf
pop
mov
test
sbb
fistpl
jg
bound
sbb
cwtl
sbb
mov
mov
xor
push
sbb
je
jno
pusha
addr16
pop
dec
lret
hlt
xor
cltd
jge
popa
push
movsl
pusha
mov
movsb
pop
mov
mov
mov
addb
add
mov
mov
shrd
shr
mov
mov
jmp
dec
adc
adc
xchg
inc
mov
jns
jb
or
push
cmp
lret
fsubr
inc
rol
xor
fsub
shr
in
daa
adc
jmp
mov
adc
push
sub
div
lahf
daa
pop
in
jne
int
cmp
jge
push
xchg
and
fisttpll
repz
xchg
loope
dec
add
jo
cmp
scas
mov
mov
test
mov
in
and
or
dec
ret
xor
mov
sbbl
inc
cltd
ret
inc
jae
cld
jle
fs
xchg
push
jns
inc
insb
dec
add
adcb
jns
call
xor
and
pop
out
dec
cld
addr16
in
aad
dec
push
jle
movsb
addr16
mov
icebp
js
jp
cwtl
cltd
pop
xchg
les
adc
sbb
data16
xchg
or
das
add
out
pop
outsl
mov
sub
ret
jbe
cs
sbb
loop
jl
imul
add
and
dec
sbb
add
sub
dec
clc
clc
pop
cli
subw
push
fsubr
ret
je
fcomps
mov
pop
bound
jno
ljmp
fiaddl
andb
sbb
outsl
sahf
aad
add
shll
mov
xchg
test
or
fildll
lods
xor
or
add
and
popa
loope
push
sbb
imul
xchg
mov
outsb
gs
pop
stos
xor
pop
xchg
xor
sbb
pop
add
leave
sub
sub
test
add
or
add
testb
enter
insl
test
in
mov
test
scas
mov
outsl
xor
fildl
mov
xor
scas
mov
das
add
mov
add
pop
shl
xor
inc
shlb
or
dec
push
jmp
xchg
scas
aas
adc
push
xchg
sarb
xchg
and
fs
mov
aas
sbbb
and
call
or
mov
js
and
cltd
nop
pop
jmp
xchg
imul
xchg
stc
shrl
cld
orb
push
sub
pop
adc
test
lds
push
push
inc
mov
fstl
arpl
shr
inc
pop
addr16
and
fcoml
fsubs
dec
es
mov
lock
popa
shlb
sbb
je
xor
push
mov
cmp
mov
push
jae
sub
add
decb
or
pop
ficoml
in
mov
cltd
mov
push
iret
out
int
mov
mov
scas
fcmovnbe
adc
aad
cld
into
mov
jecxz
push
cmpsb
xchg
xor
ficomps
scas
pop
lock
repnz
imul
cmc
xor
pop
mov
push
mov
xor
push
xchg
xchg
dec
fimull
out
out
loope
pop
int3
push
lret
pop
dec
xor
push
insl
cwtl
lahf
pop
add
xchg
jnp
cs
outsl
xchg
mov
out
or
xchg
ficoml
inc
lret
mov
int
repz
jg
enter
shll
xchg
arpl
xchg
mov
pop
sahf
outsl
rcrl
jns
pop
mov
sbb
test
and
fildl
lock
mov
iret
test
loope
sbb
in
cmpsl
and
adc
sub
pop
movsl
in
jle
fsincos
push
hlt
xor
repnz
pop
fsubr
jl
adc
xchg
in
mov
movsl
or
push
movsb
cmp
mov
xchg
cmp
loop
into
mov
xor
out
mov
outsb
adc
orb
mov
mov
push
push
fstpt
ds
mov
or
iret
xor
in
les
lret
lea
pusha
cmpsl
paddsb
push
xchg
sub
add
les
enter
mov
insb
fnstsw
ds
jecxz
jb
imul
mov
sbb
mov
dec
sub
adc
pop
aad
or
push
mov
lret
mov
ss
jecxz
jl
xchg
inc
add
or
mov
mov
rcrl
adc
addl
jb
aaa
xor
lock
xor
adc
stos
fiadds
mov
cmc
xchg
inc
mov
cmp
popa
xchg
mov
testl
cmp
incb
push
jnp
xchg
cwtl
aam
cmc
clc
sub
add
jmp
mov
aas
push
js
imul
das
sbbl
fld1
icebp
jle
nop
cwtl
push
idivb
lods
lds
call
push
jp
ficoml
scas
xor
repz
sbb
adc
inc
sub
cld
xor
xor
or
lea
jmp
dec
outsl
cltd
js
cmp
mov
mov
add
data16
mov
add
push
stos
mov
ss
add
mov
xchg
jbe
sbb
xchg
inc
inc
adc
sbb
mov
fbld
mov
sub
dec
dec
stc
cmpsb
rcll
ficompl
insb
add
dec
sbb
fsubrl
xchg
movsl
xchg
outsb
and
idivb
sub
sub
sub
xchg
jecxz
and
into
insb
xor
hlt
sbbl
fwait
xor
cltd
or
mov
cmp
dec
das
push
push
fcoml
sbb
dec
pushf
cmc
adc
jns
push
lea
and
loopne
loope
mov
xchg
add
pop
daa
pop
mov
xor
bswap
jmp
or
in
out
loope
cs
add
shll
push
lret
xor
push
lock
ret
push
push
sbb
mov
dec
sbb
mov
and
cmp
pop
in
test
fs
insl
test
stc
rolb
sbb
dec
jge
insb
jns
jg
jle
movsb
lret
lahf
pop
aas
das
movsb
mov
into
add
cmpsl
dec
sbb
nop
sbb
push
call
lea
fidivrs
stc
inc
and
lret
inc
in
insb
int3
xchg
and
mov
cmp
lahf
mov
in
ffree
repnz
fildll
adc
push
sub
dec
stc
leave
push
cmp
stos
mov
jnp
xor
mov
test
mov
xchg
arpl
dec
cmp
insl
add
in
test
andb
test
and
add
das
cwtl
xchg
ror
subb
lahf
inc
jp
sub
push
loopne
mov
and
ds
pop
in
fdivp
inc
mov
sub
pop
jno
lcall
loop
rcr
or
mov
push
out
inc
test
pusha
aas
ud0
mov
mov
insb
mov
in
xchg
jecxz
repnz
push
xor
sbb
sub
in
push
test
push
xor
xchg
test
cli
push
inc
cmpsb
dec
stc
lock
cs
cmp
pop
jmp
xor
mov
aas
push
mov
ret
xor
jle
or
loop
push
adc
sbb
push
gs
xchg
jmp
sub
cmp
mov
dec
jo
xchg
jne
rcrb
ds
aam
pop
in
int3
stos
mov
insl
jne
push
and
movsl
jge
jbe
inc
fmulp
mov
cmp
or
fwait
call
cltd
shl
pop
inc
stos
dec
inc
dec
jnp
outsb
jnp
pop
movsl
out
dec
mov
add
data16
push
cmpsb
or
xchg
mov
test
ret
rcrb
stc
lock
cmp
pop
or
push
test
xchg
in
jecxz
xchg
mov
adc
leave
les
repz
nop
adc
aas
les
pop
and
adc
mov
cld
adc
and
rol
lcall
frstpm(287
add
in
nop
inc
cmp
aad
xchg
popa
scas
jmp
decb
sahf
dec
cltd
out
sahf
mov
jle
sub
cmpsl
cmpsb
cmp
xchg
sbb
cmp
xor
mov
mov
out
fdivl
scas
sbbl
push
mov
jns
sub
dec
sarb
sti
daa
mov
xchg
addr16
sbb
imul
lret
sbb
test
mov
push
ficompl
push
dec
jmp
sub
ja
xchg
mov
rcl
daa
cmc
aam
lock
mov
sbb
gs
mov
sti
mov
cltd
mov
fdivl
push
sbb
shll
push
popa
or
jb
ret
sub
inc
es
cmp
inc
or
and
cld
or
xchg
icebp
dec
iret
pusha
sbb
pop
idivl
inc
mov
cmpsb
pop
mov
test
leave
inc
sbb
rcrl
cs
in
adc
test
lahf
sub
and
nop
outsl
enter
mov
sub
call
and
pop
lods
das
pop
cmp
sub
lds
mov
cltd
pop
xor
cmp
popf
std
pop
leave
pop
fimull
adc
jecxz
rcrb
cli
cmpsl
and
addr16
mov
jb
xchg
mov
and
les
cmp
data16
std
fnstcw
mov
or
or
sbb
mov
dec
inc
pop
addl
movsl
mov
jl
jle
fimull
dec
dec
xor
stc
ret
loop
aas
xor
fadd
lods
cmc
sub
sub
dec
adc
add
dec
mov
lods
xor
stos
mov
jg
enter
cmpl
pop
push
xor
sbb
add
ss
fucomi
dec
push
mov
push
and
adc
sbb
push
xchg
xchg
inc
xor
pusha
out
sub
cld
and
int3
mov
shl
mov
jmp
lret
movsb
cli
jo
sbb
and
insb
mov
aad
mov
push
cmp
sub
sub
fdiv
pop
iret
ds
xchg
dec
xlat
cmp
or
call
mov
xchg
jne
fisttpll
clc
ja
push
push
mov
dec
push
jb
sub
mov
fldl
ds
ss
cmpsl
jbe
sarl
xor
or
mov
add
sub
sub
cmc
sahf
pop
out
push
adc
iret
lods
mov
leave
sbb
pop
jmp
lcall
cli
xchg
pop
mov
dec
arpl
adc
in
jle
xchg
movsl
sbb
jnp
mov
push
fsub
shrl
aad
xchg
fmul
ljmp
arpl
sbbl
adc
iret
imul
sub
sub
ud1
sub
pop
enter
rcrl
enter
inc
pusha
stc
jle
xchg
push
mov
sbb
mov
push
ret
push
jle,pn
adc
xchg
loope
xor
cld
adc
jl
lahf
pop
dec
pushf
vxorps
mov
jmp
subps
dec
add
ror
int3
aad
mov
jnp
cld
dec
and
fimull
mov
xabort
jbe
aaa
pop
sbb
inc
mov
popa
xchg
loopne
jmp
pop
cmp
out
fcoml
jmp
push
mov
jbe
ljmp
adc
shrb
push
es
cwtl
minps
push
xchg
es
lahf
inc
add
dec
lea
and
or
fstpl
cmp
cwtl
and
insl
les
or
sarl
pop
adc
add
mov
xchg
lahf
or
add
push
push
pushf
dec
or
dec
lcall
inc
xor
mov
add
adc
pop
loopne
leave
sbb
sbb
xchg
pop
stos
cmp
add
aad
repz
xor
xchg
icebp
je
jnp
cmp
adc
add
dec
leave
inc
push
mov
mov
addr16
imul
pop
sahf
cld
pop
pusha
and
push
xorb
jae
addr16
fistpll
ret
and
pop
mov
shlb
mov
repz
adcb
sbb
cld
mov
mov
hlt
stos
test
ret
fadds
adc
int3
cmp
pop
cwtl
iret
fidivl
ds
sub
das
lret
mov
or
das
dec
stos
ret
cmpsb
mov
pop
xor
push
and
test
jne
mov
add
xlat
add
cmp
add
push
xchg
pop
nop
cmp
std
fisttpll
in
mov
xor
pop
xlat
mov
cmp
lcall
mov
dec
cli
push
adc
xor
sub
cwtl
inc
scas
test
sbb
add
jmp
pop
add
jo
and
andb
pusha
fiaddl
jmp
int
sbb
bnd
repz
add
fnstcw
pop
imulb
pop
jbe
hlt
testl
push
sahf
das
out
sbb
and
cmpsl
hlt
push
fistl
imul
out
movsl
dec
pop
ret
mov
mov
repz
aad
cmp
cld
cmc
sub
inc
dec
cmpb
pusha
popf
push
cltd
mov
mov
sub
add
imul
scas
lret
pop
test
jecxz
pop
loopne
mov
push
out
in
mov
adc
add
cmpsl
sbb
pop
jno
cmp
jp
hlt
cmp
mov
mov
loope
imul
sub
mov
or
cmp
cltd
xor
add
push
inc
sahf
add
pop
insl
mov
pop
aam
scas
out
adc
jo
jns
neg
xor
xchg
cwtl
jb
push
jae
jecxz
lock
insb
dec
clc
rorl
sbb
in
int3
sub
mov
test
pop
cmp
add
icebp
in
ds
inc
push
fidivl
ret
pusha
sub
jge
lods
movsb
subb
and
jnp
test
add
insl
cs
pop
and
aas
and
test
repnz
push
ret
cli
lock
clc
or
aad
aam
lcall
xor
jmp
rcrl
shrb
cwtl
mov
addr16
negl
mov
push
lret
mov
popa
aad
xor
xor
and
std
data16
mov
popa
inc
pusha
into
sbb
jno
addr16
cmpsl
add
adc
lock
int
jle
and
pop
xchg
inc
jns
sub
out
loope
test
testl
jns
jge
xlat
or
insb
and
test
fdivl
fs
jns
bound
inc
push
pop
pop
cmp
loope
adc
inc
or
mull
jmp
into
in
sub
sub
lods
enter
add
add
orb
js
xor
outsb
and
push
push
cmp
cmc
dec
ss
sbb
pop
or
fcoms
lret
xchg
sub
pop
sbb
push
xchg
repnz
stc
mov
push
and
pop
mov
daa
add
cltd
lods
in
pop
jb
jle
stc
jge
cmpsb
pusha
popa
mov
orl
arpl
testb
cmp
or
fistl
lock
ja
fimuls
mov
popf
in
scas
popf
daa
or
cwtl
dec
daa
push
aad
jecxz
js
jge
mov
xchg
arpl
sub
divl
and
jnp
sub
and
mov
fcomps
outsb
fmulp
dec
jns
push
add
inc
jmp
adc
outsl
sub
repz
cmp
shrl
ljmp
cmp
loopne,pt
rorb
sub
es
mov
mov
xor
mov
xor
pushf
adc
insb
mov
sub
fimull
mov
mov
jge
fs
mov
addr16
fs
repz
add
dec
push
pushf
xchg
add
and
clc
js
mov
sahf
pop
scas
sti
mov
lret
and
mov
fdivrl
das
in
clc
fimull
mov
sbb
aad
mov
outsl
andl
xchg
fmul
and
rcrb
fcmovnbe
lret
add
scas
out
and
sbb
mov
addr16
cltd
mov
xchg
scas
or
lds
dec
inc
dec
jno
cs
mov
out
aaa
test
add
cltd
shl
call
scas
sbbl
push
mov
mov
cmp
push
mov
dec
ds
pop
or
xchg
pop
int3
pop
sub
lock
in
pop
push
call
pop
sub
push
rcrl
mov
push
mov
in
xchg
adc
push
pop
add
shlb
dec
jp
loopne
ja
inc
push
jle
leave
jae,pn
inc
enter
mov
pop
jg
test
cmp
jne
jecxz
lock
aad
leave
insl
popa
xchg
popf
pushf
fcmovu
sbb
push
mov
push
aas
xorl
add
push
imull
pop
and
adc
push
jo
mov
xor
in
add
movsb
jno
dec
inc
push
fs
sbb
mov
add
out
call
add
ja
imul
or
das
out
gs
addr16
orb
aam
hlt
and
repz
add
jb
jg
scas
or
dec
mov
insl
mov
jmp
mov
jmp
jg
cltd
rorl
aad
test
fisubrl
fnstenv
inc
sti
mov
xchg
pop
cmp
inc
out
loop
jns
mov
fdivrl
dec
fsubrp
mov
mov
adc
cmp
adc
dec
push
sub
push
mov
js
push
test
stos
shl
push
gs
jnp
aam
jo
aaa
pop
xchg
ljmp
in
mov
pop
inc
lea
out
cmp
xchg
inc
stos
jmp
pop
sbb
push
adc
ss
sub
push
das
repz
push
and
add
pusha
add
and
int3
dec
lret
inc
xor
push
cmp
lcall
cmp
icebp
shl
pop
aas
ja
bound
jnp
xchg
outsb
mov
dec
jns
push
sbb
xchg
xchg
loopne
mov
mov
and
fists
iret
out
ret
jno
adc
xlat
pmaddwd
jnp
ss
subl
in
mov
mov
fs
cld
rclb
xchg
dec
sarb
into
xor
xchg
dec
sarl
rorb
cmp
fnstcw
xor
and
pop
pushf
cmpsl
aad
jmp
mov
daa
jmp
insl
mov
cld
push
xchg
xor
mov
je
cwtl
divb
xchg
cmc
fcomi
ja
in
mov
sbb
pop
stc
jo
jb
mov
push
pop
push
dec
and
xor
mov
cld
in
insb
lds
jns
dec
inc
movsl
ljmp
fsubrl
add
sub
repnz
pop
jge
push
mov
jge
push
xor
mov
mov
ss
test
sbb
mov
test
mov
push
mov
and
jge
jp
sub
adc
mov
stc
adc
mov
adc
dec
xchg
and
xor
aaa
imul
ret
jle
sub
aad
adc
in
stc
add
pop
cli
dec
jge
or
ret
add
dec
pop
lahf
xlat
repnz
sbb
sti
imul
xchg
mov
psadbw
dec
out
push
imul
mov
xor
xor
or
mov
shl
jmp
sbb
adc
aad
into
sti
mov
dec
fs
ficoms
push
cmp
push
lods
out
mov
movsl
loop
jbe
cs
dec
mov
movsb
movsl
mov
pop
jle
loopne
ficompl
aaa
xor
dec
jno
or
mov
jae
dec
lea
mov
mov
in
insb
xor
add
xor
cmp
mov
jl
icebp
std
mov
stos
js
mov
xcrypt-ofb
cmpsl
imul
movsl
outsb
dec
jecxz
lahf
sub
jns
mov
push
xchg
pop
das
mov
xchg
aas
and
xor
test
cmp
jns
imul
fidivs
movsl
inc
mov
jbe
popa
movsl
push
sbb
insb
mov
push
pop
jge
cmpsl
dec
xchg
out
xchg
ffree
xor
fists
loope
jnp
out
xchg
or
pop
push
clc
mov
cltd
hlt
rorl
push
mov
or
addr16
ljmp
aam
add
xor
jmp
fidivs
xchg
and
insb
pusha
and
sub
push
xlat
add
add
out
scas
insb
inc
and
cld
shr
mov
sbb
and
int
push
ds
out
add
fsubrs
std
or
test
fcmovb
push
jo
or
pop
lds
ljmp
sbb
mov
fmul
aam
sub
mov
dec
add
inc
rorb
rcrl
cmpsb
cs
xchg
cmpsb
pusha
lcall
adc
and
inc
push
xchg
xchg
xchg
mov
and
fwait
loop
mov
cmc
pusha
mov
xor
pop
mov
cmp
movsl
xor
rcll
hlt
jbe
jge
out
pop
orl
lods
pushl
and
sub
cmp
int
mov
pop
out
ljmp
pusha
pop
mov
xor
add
shr
out
fsubrs
addb
pop
pop
mov
addr16
das
cmpsl
xor
and
aas
fimull
adc
into
fadd
mov
insb
sbb
push
mov
pop
mov
cs
push
loop
cld
add
icebp
mov
aad
into
dec
xchg
mov
insl
subb
push
xor
sar
fnstenv
out
aas
shl
scas
ljmp
icebp
out
jmp
scas
mov
jno
std
movsl
dec
xor
push
scas
xchg
pop
mov
add
cmc
aad
andb
ds
mov
push
negb
cmp
lret
test
adc
divps
sbb
fwait
pop
mov
daa
cwtl
into
jmp
xchg
jns
pusha
cmc
push
rcrb
imul
dec
loop
aas
pop
inc
aaa
out
pop
lahf
arpl
and
cwtl
jo
pop
loopne
cmp
imul
add
push
pusha
cli
pusha
stc
xchg
jl
enter
lock
cli
stos
ret
dec
repnz
loop,pn
mov
and
mov
int
mov
mov
dec
pop
pop
jmp
add
and
push
inc
ljmp
cs
adc
lea
cmc
scas
adc
jle
shlb
stos
cmc
add
lods
rorl
adc
mov
mov
aas
dec
cli
cmp
stos
inc
arpl
adc
test
or
int3
lcall
add
mov
push
pop
cmpsl
jns
lahf
popf
out
call
ss
push
jo
push
stc
ja
pop
subl
adc
jbe
mov
push
test
pop
rcrb
mov
add
pop
pushf
orb
add
dec
movsl
cmp
and
fsubrs
jecxz
movsl
loopne
das
loopne
mov
xchg
pop
loop
jo
int3
fisubl
fwait
cwtl
mov
sar
cld
rclb
mov
out
test
sub
sbb
into
sti
in
add
jnp
xchg
sub
dec
cmpsb
mov
jne
add
mov
push
and
sub
sbb
inc
shll
test
dec
in
mov
roll
mov
sbb
sub
mov
fbld
loop
nop
movb
or
shr
fwait
rolb
push
mov
or
push
mov
mov
loop
sbb
test
iret
pop
in
and
stos
push
sbb
in
pop
das
cmc
in
test
test
adc
test
xchg
dec
mov
xchg
lret
and
loop
and
fisttpll
bound
push
out
shll
pop
mov
mov
jns
lahf
mov
stos
scas
rorl
clc
mulb
shr
xlat
repnz
xchg
xchg
dec
cmp
jg
sub
xor
test
icebp
jno
lret
aam
lods
add
add
loopne
movsb
lods
jbe
xchg
lods
sbb
clc
loopne
mov
jl
imul
ja
xchg
xchg
mov
adc
inc
shrb
es
mov
mov
mov
or
mov
mov
jmp
and
sbb
in
and
push
jae
push
push
cmp
push
out
mov
push
sbbb
fistpll
mov
inc
les
and
mov
sub
arpl
adc
xor
cmp
into
xchg
adc
in
add
push
insb
xlat
xchg
shr
jno
stos
rcr
and
jo
shr
mov
adc
xchg
ror
dec
repz
out
xchg
test
adc
rolb
lea
sbb
ret
dec
mov
shl
dec
xchg
sahf
or
and
mov
hlt
add
ficomps
mov
out
sbb
sarl
arpl
or
stc
mov
loopne
mov
add
repnz
stos
mov
mov
dec
movl
mov
in
push
inc
in
adc
jnp
or
dec
hlt
mov
and
push
add
idivb
in
dec
fldt
jmp
xchg
or
jge
mov
and
sbb
cld
icebp
cmp
test
pop
pop
frstor
dec
andl
pop
inc
mov
add
mov
jp
stos
loop
mov
dec
cwtl
ret
fcoms
push
sub
inc
bound
and
insl
mulb
inc
adc
jg
sub
insb
int3
xor
dec
sbb
jl
xchg
out
xchg
leave
xor
stos
inc
and
sbb
add
mov
rcrb
dec
dec
xchg
loopne
jno
std
mov
pop
dec
loope
fildll
test
nop
aam
push
add
sbb
xchg
ret
les
arpl
xchg
pop
jb
adc
call
scas
enter
inc
fidivl
repz
push
xchg
xlat
lds
push
push
and
lea
lret
ja
add
push
jae
lds
insl
push
cmp
out
or
cmc
add
fldenv
mov
xchg
pop
insb
push
pop
shlb
jno
add
cmpsb
pop
jb
pusha
ret
sub
stos
push
sbb
and
mov
enter
sub
dec
cmp
pop
ja
jne
jno
cmp
mov
sub
lahf
lar
repz
lods
lods
cmp
call
push
stos
jl
or
cltd
ja
inc
cld
dec
push
rorb
enter
xchg
test
adc
mov
test
xor
stos
fbstp
cmp
xor
xchg
loop
faddl
in
push
movsb
hlt
xchg
jge
jns
mov
dec
fwait
outsb
inc
mov
and
js
cmp
mull
push
inc
or
negb
into
test
xchg
sbb
fs
insl
popa
shrl
push
or
sbb
arpl
jg
add
pop
pop
and
add
and
subb
xchg
jmp
leave
loop
mov
xchg
negb
jecxz
adc
xor
fsubrs
loop
in
and
or
and
in
fisubrs
jg
into
dec
iret
push
scas
or
sbb
scas
mov
in
inc
sbb
inc
enter
test
gs
push
leave
push
xchg
jns
leave
xchg
pop
data16
mov
pop
mov
mov
pusha
aad
add
sti
fnstenv
dec
js
cmp
jle
pop
add
stos
out
dec
clc
enter
js
jecxz
mov
mov
mov
lods
mov
std
rol
call
and
leave
cmp
jg
xchg
jle
mov
aaa
sub
cmp
or
cmpsb
add
lods
mov
ss
push
sbb
jg
push
adc
incl
ljmp
xchg
and
lret
je
ret
and
xchg
sahf
test
out
mov
in
insl
push
stos
scas
loopne
jo,pt
or
sti
les
and
test
push
dec
add
and
rcrb
shl
rorb
mov
in
mov
mov
iret
pop
xchg
or
mov
in
popf
popa
xchg
mov
sub
sbb
rclb
push
out
mov
cmpsl
mov
popa
jl
mov
mov
sbb
cld
or
and
aam
inc
add
loop
jmp
clc
and
mov
dec
adc
push
ljmp
sub
stc
mov
dec
jmp
jg
mov
lods
out
inc
sbb
scas
mov
inc
dec
jne
imul
add
sti
fidivrs
pop
and
out
pop
sbb
push
stos
push
xor
out
and
sbb
pop
inc
mov
repz
add
mov
fmul
stos
jae
in
inc
cmp
loopne
mov
xchg
lock
push
or
or
rcrl
stc
mov
fs
adc
es
mov
sti
test
add
dec
mov
mov
pusha
cltd
roll
arpl
cmp
loopne
ja
addw
sub
je
test
mov
sahf
popf
push
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
jmp
lock
mov
enter
dec
mov
push
push
cmp
mov
in
sbb
pop
cmp
incb
xor
xchg
dec
bnd
push
xchg
ret
xadd
in
rcll
xor
inc
xor
pop
mov
cmp
adc
xchg
popf
add
cmc
cmc
cli
fildl
jbe
out
dec
push
fwait
xchg
push
popf
sub
xlat
xchg
jmp
les
in
xchg
jecxz
cmc
cpuid
repz
insb
push
insb
inc
test
mov
inc
out
xchg
jp
inc
sub
ret
testb
pop
hlt
loop
jmp
xchg
inc
das
mov
bound
lds
test
mov
sbb
sbb
pop
sbb
mov
xlat
mov
adc
mov
aaa
leave
push
sub
cli
pop
ficompl
ljmp
pop
jbe
mov
jnp
push
mov
movsb
adc
mov
das
js
or
inc
pop
or
cmp
out
xor
jo
add
ss
sarl
popf
ret
add
jecxz
xor
sub
adcb
cld
mov
adc
fsubs
icebp
outsb
js
pop
aas
clc
sub
sbb
xchg
mov
sub
jae
outsl
lcall
inc
mov
loopne
int
andb
adc
cmc
push
cmpsl
jg
and
shll
mov
fldenv
in
mov
add
int3
dec
push
popa
push
dec
mov
dec
mov
les
mov
pop
imul
bound
jbe
cmp
ret
in
cli
and
in
movsl
cmp
add
add
call
imull
popa
xchg
cmpsl
gs
pop
jae
sub
ret
fcomi
and
lods
sub
sti
es
push
ljmp
cld
dec
adc
dec
jns
adc
lret
lds
sbb
pushf
loopne
cmp
cmp
imul
inc
and
jmp
push
loopne
stos
add
cmpb
sbb
xchg
or
lods
mov
mov
sub
call
cmp
xchg
cmp
mov
idiv
pusha
mov
in
stc
jnp
js
cmp
push
js
xchg
push
jne
push
sub
lahf
push
sbb
xor
outsb
jmp
pop
scas
loop
movsl
out
pop
xor
mov
sbb
sbb
stos
rclb
push
in
mov
add
orl
push
lods
or
outsl
pushf
movb
mov
and
pop
test
mov
sbb
repz
clc
out
movsb
je
jge
or
mov
mov
jns
in
test
lods
add
or
mov
xor
clc
jle
aas
test
call
mov
stc
jl
iret
mov
jno
leave
mov
loop
insl
sbb
jmp
sbb
mov
sbb
outsl
in
jnp
xor
mov
xchg
push
lods
xchg
jecxz
dec
cltd
daa
mov
sarl
mov
jp
adc
mov
add
scas
out
jb
mov
shrb
sub
mov
xchg
in
gs
dec
pop
arpl
pop
test
ss
sbb
aaa
insl
ds
xor
mov
push
inc
stos
imul
mov
cmp
ficompl
mov
push
push
sti
loop
in
cmp
insl
test
dec
mov
cs
adc
jecxz
loope
movsb
scas
sub
leave
nop
lea
adc
mov
popf
mov
scas
add
push
mov
mov
sbb
adc
test
repnz
add
repz
sub
cmpsl
stos
gs
bound
sbb
ret
mov
outsl
xchg
sahf
sub
jns
sbb
and
jp
xchg
repnz
mov
sbb
mov
mov
sbb
jnp
xchg
pop
loopne
mov
cmp
loope
jns
test
sub
out
mov
sub
cmp
call
xchg
lods
cmp
pop
mov
push
or
movsb
xchg
fcmovbe
jo
mov
mov
mov
popl
loop
cmpsb
add
sahf
insl
sub
out
sar
inc
ficoml
lock
adc
cmp
sbbb
sub
push
insb
sti
jp
mov
xchg
lods
mov
out
popf
push
into
xor
cmc
mov
pop
jno
into
cld
mov
loope
xchg
loop
sbb
repnz
fmull
int
stos
mov
das
cmp
pop
jnp
sub
lret
dec
xor
fists
dec
mov
test
push
xchg
sbb
test
add
bound
inc
sub
out
lahf
or
xor
xchg
arpl
fnstcw
je
jmp
ret
adc
and
push
dec
outsb
sahf
shl
cli
cmpsb
push
daa
jno
dec
inc
lahf
add
shlb
xchg
sahf
inc
sbb
test
pop
xor
orb
and
xor
mov
jmp
mov
sbb
cltd
cmovbe
adc
outsb
xlat
mov
push
cmp
cmp
out
stos
adc
pop
xor
or
lock
stos
jl
pushf
sahf
fsubrs
pop
push
fs
push
mov
jae
mov
icebp
jae
adc
add
add
add
sbb
mov
call
test
fidivl
xchg
in
fs
clc
nop
cwtl
pop
sbbl
push
sub
das
mov
jno
mov
jecxz
ss
cs
dec
loopne
cmp
sub
xchg
sub
dec
dec
insb
xchg
outsl
sbb
lret
sti
add
mov
das
mov
into
mov
inc
fnsave
adc
pop
jnp
mov
in
pop
push
cmp
insb
mov
inc
mov
in
gs
lret
test
fildll
cwtl
sbb
push
sub
jnp
mov
test
subb
test
dec
adc
push
cli
xor
adc
dec
shl
cli
inc
mov
inc
sahf
pop
sahf
sbb
mov
in
jge
stc
in
pushf
jb
divb
je
shrl
mov
arpl
lock
mov
jb
or
cmp
sub
in
mov
scas
sbb
jmp
lods
add
int3
decb
xlat
dec
jecxz
rcll
mov
ss
shrb
mov
sbb
fstpt
jge
adc
add
out
fdiv
or
rcrl
fld
jne
dec
mov
cli
lcall
inc
dec
mov
or
jl
or
xlat
dec
push
ret
sub
or
sbb
decb
xchg
in
mov
pop
int3
gs
mov
adc
jb
or
xchg
je
pop
jl
arpl
daa
xor
xor
cwtl
lcall
or
adc
xor
imul
sbb
pop
mov
into
push
sbb
dec
test
push
jmp
cmp
mov
add
cmp
xchg
and
cmpsl
mov
jae
jge
lds
es
addr16
les
mov
into
fnstcw
daa
rolb
or
jecxz
and
aad
bound
xchg
pop
dec
loopne
sbb
dec
pop
aam
cld
or
test
or
int
adc
mull
fildl
xchg
xchg
push
sahf
mov
sahf
sub
or
shl
xlat
mov
jecxz
jl
sbb
cmpsb
mov
xor
push
cmp
icebp
sub
xchg
mov
repnz
pop
stos
enter
movsb
std
popa
adc
shrb
cmp
mov
xchg
or
jmp
sarb
lret
pop
pop
mov
call
pushf
stos
jp
mov
pop
movq
ret
int
cmp
cmp
iret
dec
cmpsl
rolb
dec
mov
push
sbb
shll
mov
adc
dec
nop
test
or
arpl
xchg
push
push
mov
clc
aas
mov
adc
and
jg
cld
push
icebp
pop
inc
adc
dec
inc
mov
cmp
fimull
mov
push
fwait
clc
adc
out
fsts
pushf
es
insl
or
repz
insl
pop
mov
cld
cmpb
sub
mov
sub
cmp
mov
xor
test
mov
or
mov
or
sub
faddl
mov
or
xor
mov
jmp
test
clc
insb
xor
orl
mov
inc
mov
dec
test
xchg
outsl
xor
int
cmp
cltd
jns
adc
fsubs
or
cmp
sahf
inc
ljmp
dec
cmc
mov
or
imul
sbbl
jp
mov
push
dec
xor
dec
lds
mov
and
xchg
shr
mov
sbb
aad
dec
hlt
lds
bound
cmpsb
imul
mov
ret
mov
sbb
jmp
dec
leave
cli
mov
mov
int3
inc
pop
and
add
jl
test
cld
or
add
mov
fimull
iret
ja
pop
inc
vmulps
cmpsl
mov
cmpsl
mov
aaa
jb
or
out
fimuls
mov
dec
dec
jle
sub
sub
xchg
jne
dec
mov
push
adc
mov
adc
adc
into
divb
in
push
out
dec
lahf
push
sbb
and
xor
jge
inc
adc
lods
fmull
jne
inc
test
mov
imul
add
xlat
sbb
test
inc
jecxz
lock
aam
aam
sbb
adc
cmp
rolb
pop
sti
mov
out
adc
add
sub
xchg
push
sub
mov
aas
mov
cltd
mov
mov
repnz
shlb
dec
sbb
or
mov
mov
shrd
shr
mov
mov
mov
xor
jmp
sbbl
das
je
jb
stos
push
push
cmp
pop
mov
popf
loopne
push
out
mov
bound
pop
cs
pop
sbb
aam
xchg
mov
insb
int3
mov
adc
and
add
dec
int
xchg
call
pop
xlat
push
in
push
push
jp
sarl
or
outsb
jmp
jno
lret
pushf
aas
mov
loopne
jne
in
aaa
sahf
aaa
xchg
add
jnp
icebp
jns
cmp
jns
lods
jmp
scas
push
repz
fsubrl
dec
sub
lods
inc
push
jb
addps
hlt
adc
and
sbb
not
stc
daa
fisttpl
inc
int
mov
sbb
aam
pop
andb
ss
push
dec
mov
or
aam
imul
pop
and
gs
cmpsb
loopne
xor
es
sahf
inc
sti
or
add
mov
adc
push
push
mov
call
call
adc
dec
mov
shll
enter
xor
adc
mov
lods
push
mov
in
or
daa
mov
pusha
in
sbbl
jo,pn
icebp
add
xchg
test
add
clc
shll
or
hlt
sub
and
sub
sbb
and
dec
dec
leave
mov
jno
xor
push
push
mov
outsl
mov
int
mov
rcrb
xor
jbe
inc
sbb
xchg
shl
mov
movsb
test
xchg
jno
mov
imul
in
cmp
jmp
aaa
mov
mov
pop
sbb
inc
cli
mov
es
adc
or
lcall
les
sub
into
pop
test
dec
push
mov
lds
out
cmp
jne
vandnps
cmp
pusha
adc
add
pusha
mov
xor
test
pop
movsb
sahf
mov
dec
mov
adc
andb
loopne
and
sub
adc
dec
inc
xchg
jl
or
lock
sub
fidivrs
shl
lret
popfw
jge
movsl
subb
cmp
mov
ljmp
popa
in
or
inc
shll
in
jge
flds
pop
cmp
inc
rclb
lret
sbb
daa
jge
fstps
fnstsw
in
mov
jmp
in
add
jmp
nop
mov
cmp
mov
inc
or
repz
pusha
adc
mov
and
cmp
sti
imul
or
mov
rcrl
sbbl
ret
in
lcall
out
mov
mov
or
jne
notb
in
sbb
mov
push
rcrb
sbb
out
iret
int
test
and
aaa
leave
lock
loop
leave
scas
add
cmp
das
inc
xchg
sub
inc
push
push
mov
push
mov
pop
shll
mov
movsb
les
mov
lret
fbstp
adc
aam
inc
sbb
and
cmp
mov
mov
jae
popf
mov
dec
data16
xchg
xor
dec
xchg
mov
les
movsb
out
jbe
sbb
xor
xor
cs
xlat
or
adc
mov
xchg
insb
sti
insl
xchg
mov
sarb
mov
in
mov
fwait
dec
out
push
testb
xchg
bound
lahf
inc
adcl
and
mov
in
adc
faddl
data16
mov
cmpl
ja
pop
aam
adc
iret
or
push
sub
cmpb
das
call
addr16
subb
aad
sbb
push
outsb
inc
mov
mov
lcall
ja
repz
fisttpl
fwait
mov
movsl
aas
xchg
jno
divl
rolb
dec
outsb
push
cmp
dec
xor
cs
insl
or
mov
rolb
xchg
rol
xor
pushf
sub
push
stc
dec
stos
cmp
jo
push
dec
in
fidivs
stc
daa
incb
mov
imul
sub
das
int
pop
int
mov
xlat
cmp
jg
inc
mov
dec
stos
out
ficompl
fwait
movsb
adc
xchg
push
inc
or
loopne
outsl
cmpsl
sti
mov
adc
rorb
jecxz
add
jle
cmpsb
or
andb
out
lcall
test
je
mov
push
add
dec
push
rolb
loopne
dec
cmp
dec
sub
jbe
push
enter
imulb
mov
nop
adc
int
and
lcall
loop
xor
xchg
cmp
movsb
je
pushf
sub
addl
aad
mov
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
mov
jmp
push
cli
test
fs
pop
jb
shrl
sub
push
push
loope
icebp
adc
adc
sahf
xchg
aam
push
cmp
pop
shlb
inc
inc
enter
or
fildl
ljmp
xor
das
cmp
sahf
loop
add
ja
adc
fnstenv
mov
fcoms
repz
outsl
icebp
pop
inc
xchg
fisttpll
lcall
inc
les
flds
pop
jmp
dec
xchg
xor
pop
inc
pop
pop
mov
pop
lret
mov
sub
xchg
movsb
mov
lock
mov
js
fidivl
outsl
loop
outsb
enter
inc
pop
scas
popa
mov
ds
cmp
ss
subb
inc
xchg
sbb
pop
sub
shrl
popl
lret
push
sbb
xor
sbb
xor
inc
jmp
int3
mov
fiadds
push
test
stos
out
pop
jnp
lret
pop
mov
cmp
loopne
mov
mov
loopne
out
xchg
mov
inc
adc
or
imul
cmpsb
fcomps
and
fs
lods
aas
adc
cmpsl
shll
pop
or
mov
push
test
cli
insl
xchg
fucomp
cltd
insl
lahf
rcrb
ds
mov
loop
pop
repnz
imul
mov
cmpsl
test
push
mov
or
push
ja
jbe
stc
enter
mov
fsubl
mov
out
xchg
pushf
in
sub
sbb
addb
dec
add
dec
add
fwait
jmp
aas
add
xchg
mov
mov
lods
mov
mov
aas
loope
nop
mov
iret
push
shll
pop
data16
fidivrs
nop
scas
dec
and
iret
jae
lods
in
ds
sub
lods
fs
push
cli
imulb
inc
aam
insb
cmp
jp
out
and
pop
adc
test
call
push
push
dec
pop
mov
cli
xchg
cmpsl
pushf
scas
pop
pop
bound
xchg
sub
sub
sub
mov
cmp
or
mov
add
int
es
dec
xor
leave
inc
ljmp
sbb
pop
and
mov
mov
aas
dec
gs
out
cld
mov
loopne
xor
rcr
mov
xchg
jne
inc
and
popa
add
mov
adc
push
push
pop
loope
test
sbb
stos
sbb
cmp
adc
inc
lea
push
call
ffree
insl
inc
imul
inc
stos
xorl
inc
jnp
jle
xchg
pop
xchg
lods
sub
and
cmp
and
inc
jb
movsb
out
add
and
out
and
add
popa
and
cwtl
jecxz
mov
mov
pop
rcrl
mov
dec
andb
fs
cmc
cmp
inc
iret
push
add
outsb
mov
push
call
fmuls
das
and
out
into
mov
inc
addr16
sbb
fsubrs
fisubs
mov
push
dec
lahf
ret
inc
xlat
popa
pop
loop
fidivrs
pop
jl
xchg
leave
mov
pop
int3
in
xchg
pop
jb
pop
fwait
xor
jecxz
xchg
test
xlat
cmpsl
mov
inc
ss
pop
aam
icebp
mov
mov
dec
mov
ss
inc
or
data16
stos
xor
mov
aas
aam
push
pop
gs
cmpsl
lods
sub
addr16
dec
rolb
or
jae
repnz
inc
rcll
pop
test
shlb
daa
dec
cmpsl
inc
repz
es
fildll
std
in
ficompl
out
sub
sub
rol
mov
add
leave
lret
or
cmpb
cltd
cmp
jbe
sub
mov
fnstsw
ret
addr16
imulb
cmpl
sub
bound
xor
jge
push
adc
sub
dec
mov
xchg
push
mov
mov
xchg
sti
mov
fprem1
hlt
test
fdivl
and
inc
or
sub
andl
mov
in
mov
inc
adc
jg
mov
das
pushf
push
push
adc
mov
enter
xchg
insb
lcall
jmp
cltd
test
sub
shrb
xchg
pop
mov
clc
pop
push
dec
dec
push
mov
push
negl
xchg
pop
orb
add
and
jns
shl
xchg
mov
push
fwait
pop
xchg
mov
sub
mov
cs
jnp
sbb
inc
xchg
xor
lcall
mov
inc
xchg
push
das
ljmp
repnz
mov
ret
in
jb
push
out
add
or
in
jno
mov
sub
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
jmp
sahf
or
jp
cmp
sub
mov
add
push
cmp
or
test
add
fcomi
in
mov
mov
add
in
loop
hlt
dec
cmp
out
mov
pop
sti
pop
dec
pop
add
xor
shrb
in
mov
in
jge
fiaddl
aaa
mov
addr16
sbb
lahf
outsb
pop
mov
pop
cwtl
les
test
hlt
jae
incb
adc
pop
dec
popl
cmp
mov
in
popa
jecxz
fcom
sub
jno
in
adc
add
xchg
jl
xor
cmp
inc
arpl
or
jbe
adc
adc
test
es
push
or
insb
mov
shll
fstl
fsubs
xor
testb
neg
mov
icebp
int
fucomip
xor
sete
cmpsl
fmul
cmp
xor
mov
into
sub
aad
pop
and
das
pop
xchg
data16
mov
clc
mov
mov
ss
cmp
shlb
sbb
mov
cmp
das
sub
repz
cmpsl
adc
fldcw
pop
xchg
mov
stos
inc
leave
movsl
jns
fdiv
push
movsb
leave
mov
jmp
cmpsb
shrb
push
or
repz
pop
mov
imul
or
fwait
xchg
mov
mov
loope
dec
dec
test
divps
scas
fwait
shl
cld
cld
neg
cmp
mov
ficomps
out
jo
sub
cmp
loope
xor
or
les
dec
lcall
mov
jo
mov
test
movsb
mov
jb
cli
stos
push
enter
mov
iret
pop
xchg
or
push
mov
mov
lods
mov
xchg
scas
pop
adc
pushf
sbb
sti
dec
aaa
andb
cli
cmp
subb
and
in
into
dec
jmp
cmp
xor
and
lea
xchg
cwtl
add
fucom
xor
pop
orl
inc
cli
test
clc
pop
mov
sbb
mov
cltd
mov
inc
xchg
pop
movsl
inc
test
mov
inc
and
mov
leave
adcb
fisttpl
testl
sahf
hlt
mov
push
shlb
sub
xchg
xor
jns
xchg
movsb
xchg
stos
stc
fcoms
fstpl
fwait
or
rcr
sahf
sub
aaa
lock
test
call
jno
jnp
stos
std
pop
xor
lock
jle
and
aad
sub
add
dec
pop
ss
lock
repnz
stos
in
stc
daa
in
push
ds
out
cmp
testl
jne
cli
pop
sbb
and
cwtl
orl
arpl
loop
inc
adc
xchg
jl
mov
scas
mulb
add
movsb
aaa
aam
jo
mov
repnz
push
dec
sbb
jmp
cmp
xchg
push
clc
lcall
test
jb
ljmp
out
add
cmp
mov
mov
sbb
in
sarl
xchg
or
or
xorl
adc
push
xor
jnp
mov
andl
jmp
dec
mov
adc
xchg
fldl
cmp
aaa
add
call
test
mov
push
push
and
inc
iret
call
pop
outsb
nop
mov
sbb
pop
and
xchg
jle
je
jae
andb
pop
mov
dec
in
push
lea
lds
pop
js
sar
xorl
cmp
loope
jo
imul
lcall
fs
sbb
and
xchg
mov
dec
out
mov
frstor
call
pop
cmovp
sub
dec
test
call
dec
pop
cmp
sbb
lods
sbb
pusha
in
scas
adc
fucomp
xor
dec
pop
and
and
and
into
jp
cld
andb
adc
movsb
push
add
ret
lea
adc
rol
fistl
or
push
push
test
pop
mov
enter
or
jg
push
shrl
aaa
jle
cmp
sub
and
clc
lds
fdivs
add
popf
mov
push
js
sub
adc
xlat
add
lcall
mov
mov
sbb
xor
pusha
fsubrs
cmp
push
jg
out
scas
mov
inc
orb
jp
aad
xchg
out
cmc
pop
jmp
addr16
inc
mov
ds
fs
xchg
jmp
mov
mov
push
sbb
add
fnstenv
adc
dec
aas
shl
mov
push
fs
jae
shlb
sbbb
dec
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
jmp
and
adc
xor
mov
xchg
mov
mov
push
cmp
sub
xor
lret
pcmpeqd
lcall
sbb
leave
mov
and
and
jnp
push
push
lods
lea
insb
std
ret
addr16
sub
jns
lods
xorl
xchg
shlb
loop
push
int3
pop
clc
cmp
jno
dec
lea
js
test
push
xchg
cmp
stos
jge
or
dec
add
jnp
in
mov
push
add
jns
push
sbb
or
push
ret
pop
dec
jmp
jb
mov
fdivrl
sub
arpl
push
pop
in
iret
adc
cltd
cmp
jns
es
push
pop
cs
das
or
xor
je
mov
xchg
data16
dec
icebp
stos
insl
adc
adc
and
xor
shll
cmpsl
add
outsl
xchg
adc
inc
sbb
dec
lods
es
stos
mov
test
mov
int
stc
enter
cli
lds
out
pop
test
mov
push
ja
inc
mov
push
mov
scas
imul
rorb
aam
insl
xor
mov
cmpsl
mov
scas
jno,pt
popa
pusha
add
mov
mov
test
jo
xchg
pop
sbb
fisubrl
sbb
xchg
jp
mov
adc
sub
insl
mov
xor
dec
mov
pusha
mov
pop
stos
xchg
inc
add
stc
adc
jge
ss
adc
push
jns
xor
stc
out
push
mov
xor
dec
mov
aas
cmp
enter
sbb
cmpsb
aas
decb
add
and
shrb
jns
insb
sub
pop
xorb
mov
push
les
sub
xchg
shrl
pop
xchg
cmp
adc
inc
inc
mov
push
push
jle
dec
stc
add
ja
xchg
lock
and
pushf
cmp
inc
push
cmp
pop
xchg
arpl
neg
adc
int3
mov
fildll
add
sbb
or
call
cmp
icebp
sub
ror
fucom
jns
das
add
jae
mov
xor
sub
daa
lock
cld
and
push
fwait
mov
mov
imull
mov
and
jmp
mov
cmpsb
dec
xor
dec
mov
aas
add
divl
es
cmpsl
call
fsubl
and
sbb
add
movsb
in
or
mov
xchg
test
popf
jo
daa
push
call
fstps
and
mov
out
xchg
rorl
dec
push
repnz
shrl
xchg
xacquire
ret
inc
sub
in
mov
imul
cmp
or
add
incl
jl
cmp
popf
pop
and
xchg
dec
sub
iret
cmp
repnz
std
insb
popf
xor
pop
adc
xorl
inc
daa
wrmsr
xor
add
jnp
enter
ljmp
xchg
pop
data16
push
sbb
push
mov
mov
shr
out
mov
pop
in
fsubl
insb
push
movb
xchg
and
jl
cwtl
cmp
loop
addr16
shrl
or
dec
cmp
xchg
push
jp
push
add
xor
stc
jmp
ret
sbbl
repz
insl
nop
mov
bound
mov
adc
testb
push
sbb
mov
fs
test
fwait
mov
pushf
pop
jae
in
icebp
mov
out
cmp
ret
arpl
xchg
add
xchg
pop
push
lods
and
mov
sub
in
outsb
xor
inc
das
into
gs
push
mov
int
jg
push
sti
out
arpl
mov
xchg
outsb
mul
mov
xor
jmp
push
lds
sub
ss
cmp
mov
mov
xor
outsl
sub
push
dec
jecxz
jns
sbb
lret
dec
lret
mov
mov
jbe
mov
or
adc
lds
ss
pop
repnz
mov
sbb
scas
subl
mov
push
xchg
push
xchg
popa
out
dec
pusha
jle
xor
add
push
jecxz
jbe
sar
rorb
adc
pop
push
pop
lret
in
iret
lea
xchg
jle
leave
loopne
je
inc
aad
mov
sub
les
pop
orl
cmp
and
push
dec
add
dec
ja
pop
cld
pop
pop
loop
int3
sub
xchg
sbb
xor
ficompl
sarl
mov
pushf
pushf
jecxz
or
xchg
and
cmp
enter
ljmp
adc
xor
mov
mov
xor
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
jmp
mov
jle
sub
mov
mov
xchg
push
cmp
rcl
add
notl
cmp
add
out
mov
cs
and
push
hlt
popa
loop
sub
scas
pop
or
xchg
clc
aaa
push
push
sahf
addl
sub
dec
add
push
cmp
sub
xor
cmp
outsb
test
xchg
and
insb
cmp
fidivs
in
iret
shll
cli
xor
test
iret
mov
dec
push
mov
std
adc
arpl
fwait
jbe
mov
fcomps
clc
xor
or
nop
dec
mov
push
mov
cmp
in
rol
and
push
not
mov
fadds
in
ds
and
stc
sbb
insb
inc
adc
xor
iret
dec
mov
fdivrs
push
in
aam
mov
sbb
out
les
lret
mov
test
fistpll
jecxz
stos
cltd
mov
outsb
loopne
ret
cmp
lret
insl
jmp
aad
mov
loopne
das
cmp
jecxz
push
xor
sbb
pop
jo
pop
push
adc
jmp
push
and
mov
out
jnp
push
andb
addb
nop
mov
sbb
mov
popa
and
push
fbstp
dec
mov
les
in
fildl
xchg
add
pop
fstpt
adc
inc
pop
jbe
outsl
xchg
jl
cmpsb
hlt
in
dec
mov
sti
mov
and
lahf
cmp
loop
push
int
jnp
clc
in
shlb
xor
lods
movsb
sahf
lods
cmc
in
adc
xor
dec
adc
pop
push
out
mov
and
out
fidivrs
cmp
pop
pop
and
or
jb
insb
lock
in
xchg
or
inc
in
xlat
aaa
mov
bound
pop
jg
scas
jno
hlt
cwtl
pop
xchg
out
inc
and
mov
pop
movsl
test
test
dec
shr
jns
mov
data16
pop
loop
rcll
xor
cmp
mov
das
push
adc
jae
pop
mov
push
mov
in
mov
push
sbb
push
pushf
test
dec
ret
xor
stc
dec
push
and
iret
xchg
gs
mov
addr16
pop
insl
pop
inc
dec
pop
lcall
mov
outsb
stos
mov
push
mov
inc
dec
lahf
sub
scas
dec
out
daa
lods
mov
jecxz
popf
ret
pop
test
das
fisttpl
mov
test
adc
pop
lods
adc
inc
cmp
leave
pop
push
xor
enter
xchg
dec
sbb
xchg
jg
mov
xchg
push
clc
adc
push
inc
scas
and
push
andb
push
add
ss
repnz
sub
aas
mov
and
sub
and
xchg
xchg
jnp
dec
out
insl
xor
repz
jnp
and
xlat
mov
push
test
mov
push
adc
test
sarb
adc
xchg
loop
mov
mov
insl
call
stc
sbb
cltd
pop
push
jecxz
inc
stc
cwtl
pop
cld
lret
addr16
xor
push
mov
xchg
sbb
jg
add
mov
jne
pop
lcall
xchg
jb
or
xlat
repnz
ss
jle
mov
cld
lahf
xlat
ja
mov
inc
out
jecxz
pusha
insb
xchg
sbb
dec
cltd
mov
lods
lahf
add
cvtpi2ps
dec
adc
jle
cmpsb
mov
pop
inc
dec
inc
subl
push
adc
in
jge
fcomip
mov
icebp
faddl
stos
or
lea
lea
push
pop
xchg
sub
cmp
addr16
or
pop
nop
rorl
and
cltd
adc
or
in
outsb
cmpsb
andb
xlat
mov
pusha
jne
cwtl
nop
pcmpeqd
loope
in
push
gs
xchg
addb
mov
inc
rorl
pop
mov
mov
inc
mov
lods
fmul
mov
ret
adc
mov
rolb
jo
cli
fidivrl
jge
loopne
mov
mov
fdiv
mov
pop
jg
sbb
testl
fidivrl
cmpsl
push
jno
nop
adc
or
lds
fdivr
mov
movsl
and
fcoms
cld
adcl
testl
inc
pop
or
mov
mov
jne
inc
pop
mov
in
xchg
decb
test
insb
sub
stc
shlb
jmp
dec
cmp
das
fcmove
xchg
inc
push
scas
mov
push
in
pop
push
out
std
hlt
lock
xchg
lret
add
adc
fnstsw
pop
adcl
dec
jnp
cli
jmp
into
ret
fisubrs
daa
pushf
inc
in
in
pop
add
mov
cmpsb
mov
mov
loop
out
pop
imull
rcrb
stos
in
xchg
cmp
adc
popa
cmpsl
jns
mov
mov
shrd
mov
mov
xor
shr
mov
jmp
inc
jecxz
sbb
sub
mov
mov
cmp
adc
out
mov
lahf
mov
enter
psubw
in
sbb
lret
mov
push
leave
cmp
andl
xlat
adc
scas
xor
lret
inc
leave
mov
add
mov
xchg
test
xor
sbb
jo,pt
xor
push
clc
xor
incl
and
dec
or
stc
mov
and
aam
sbb
xor
jbe
xchg
or
pushf
sub
xchg
pushf
push
pop
sbb
mov
ret
arpl
mov
or
enter
push
push
push
pop
push
mov
or
add
in
cmp
sub
imul
jno
in
out
loope
repz
xlat
inc
jb
fisubrl
in
inc
inc
imul
lods
lahf
adc
push
mov
lea
pmovmskb
mov
test
jbe
fsubl
jmp
sub
out
bswap
cmpsl
jmp
mov
xor
inc
push
and
adc
mov
cmp
lock
test
jmp
sub
lock
in
sub
push
and
cmp
add
cmp
cmp
inc
cmp
jmp
in
out
out
repnz
push
xchg
cmp
inc
cli
cwtl
inc
sti
add
dec
popf
into
mov
add
xchg
mov
das
ficoms
scas
mov
cmpsl
fcompl
addr16
arpl
mov
dec
jno
out
fnstenv
cmp
shll
fsubrs
push
out
adc
aad
gs
mov
aad
mov
adc
loope
jnp
fiaddl
add
adc
or
out
fdivrl
pushf
pop
and
pop
xchg
out
imul
cmp
aas
push
ret
lahf
jns
sub
cld
ss
in
jae
xor
scas
mov
cwtl
mov
lahf
sbb
jnp
sahf
jmp
push
arpl
lret
arpl
jg
in
into
stos
fdiv
aaa
int3
xor
mov
jge
and
loop
jl
xor
pop
adc
enter
inc
sub
sub
imul
inc
mov
movsb
std
xor
stos
jne
push
dec
fcmovu
cmc
and
and
stos
pushf
lock
sti
jbe
xlat
test
pusha
mov
cmp
lahf
xor
and
call
jge
ret
or
stos
sub
test
xchg
xor
test
lds
pop
sbb
cmp
fisubrs
iret
aas
xor
adc
aam
xor
add
cmc
je
js
movb
test
dec
sub
cld
lods
mov
mov
insb
pop
xchg
sbb
sub
pop
dec
adcl
test
dec
pop
sbb
cmpsl
mov
mov
shlb
jns
sti
stos
insl
leave
ds
inc
je
mov
and
mov
inc
add
jno
adc
sbb
ja
sub
cmp
mov
push
shrl
xor
push
pusha
dec
loop
aas
dec
mov
pop
xchg
imul
icebp
jmp
add
out
mov
sahf
add
push
daa
push
es
lcall
mov
ret
push
jae
jg
jns
sti
xor
arpl
orl
test
or
inc
xchg
jmp
shlb
xchg
lcall
sub
sbb
jno
popa
mov
in
bound
adc
pusha
mov
in
cmp
push
sub
loope
jmp
movsb
inc
xchg
mov
std
stc
out
in
add
inc
mov
mulb
gs
pop
mov
dec
cmpsl
andb
pop
addb
inc
pop
outsl
daa
scas
jp
mul
loopne
scas
add
dec
inc
dec
pop
in
sub
add
pop
adc
cmp
icebp
jge
pop
and
adc
and
ficomps
movsb
jp
pop
lcall
adcl
je
fcmovnb
or
ss
pop
sub
or
dec
rcr
mov
jno
shrl
or
adc
cmc
mov
sub
stc
xlat
add
call
sub
icebp
xor
or
mov
cmp
int
sbbb
mov
pop
lret
std
shr
lret
push
shlb
inc
sbb
cmp
in
test
jb
cmpsb
inc
lea
jbe
jmp
popa
pop
cmp
mov
std
mov
dec
stc
bnd
idivb
cmpsl
sub
sbb
mov
shlb
push
scas
aas
nop
fbstp
dec
push
hlt
jge
cmpsl
cmp
lea
mov
xchg
mov
jno
xchg
jmp
imul
sahf
mov
push
lea
jns
cmc
fs
rol
loopne
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
jmp
shlb
and
and
test
xor
push
push
cmp
mov
je
or
add
mov
inc
mov
lret
cmp
jecxz
cmpsl
sar
cli
scas
clc
mov
xor
mov
add
xchg
mov
in
jno
adc
pop
lahf
mov
inc
sbb
jl
and
pop
cmp
sbb
mov
aaa
ds
sub
mov
mov
stos
test
daa
dec
push
pushf
pop
pop
adc
call
xorl
xchg
cmc
bsf
sbb
pop
adc
test
loopne
push
insl
inc
out
ficompl
dec
dec
jp
fnsave
xchg
dec
inc
stc
dec
inc
dec
fistps
pand
movsb
inc
shll
sub
inc
sub
fidivl
mov
loope
xor
out
mov
ja
xchg
and
psrld
sbb
push
outsl
jle
mov
out
jbe
push
push
cltd
leave
add
dec
sti
fbld
sub
inc
scas
mov
xchg
and
lods
les
call
in
mov
sub
lods
repz
adc
divl
mov
popa
cmp
ret
xchg
adc
push
inc
push
and
les
sbbl
bound
loopne
cmpsl
insb
sbb
and
je
mov
mov
pop
jae,pt
add
aad
scas
int
pop
xchg
dec
mov
jno
das
add
ret
mul
push
cld
mov
mov
dec
imul
inc
cld
adc
cmp
fcmovbe
cmp
sub
jno
adc
arpl
jo,pt
test
mov
leave
pop
imul
stc
push
lret
add
push
add
sub
iret
movsb
jae
push
sbb
nop
jmp
aas
ja
cmp
mov
inc
jle
push
pop
ja
inc
jae
dec
cwtl
rorb
cmp
xchg
loop
mov
negl
popf
out
enter
cmp
sbb
ja
mov
jp
adcl
push
or
aas
and
mov
cs
jle
lcall
js
pop
insl
sub
int
xor
push
inc
ret
cltd
dec
test
enter
imul
in
fsubrl
ljmp
insl
push
lcall
outsl
sti
sub
scas
mov
jae
test
dec
jmp
mov
dec
and
pop
cmp
xchg
popa
adc
add
mov
sbb
mov
lcall
xchg
and
shll
sbb
lds
mov
imul
add
xor
or
or
lods
mov
in
cmpsb
aad
push
or
push
dec
mov
cwtl
jle
xchg
aaa
div
imul
insb
xor
sarb
jge
jnp
inc
or
imul
jno
fisubrl
sbb
jge
or
loop
iret
shll
lock
lcall
sbb
repz
xchg
push
les
push
inc
lret
add
and
sub
movsl
xor
mov
scas
stos
jb
sub
aad
sub
enter
dec
mov
fstpl
xor
stos
enter
and
lahf
roll
xchg
lea
xlat
out
and
sub
adc
loope
inc
jnp
pop
pop
push
pop
or
mov
xchg
sub
xchg
pop
testl
pop
idivl
cltd
aam
stos
add
cmpsl
jmp
cmp
pop
jnp
loope
add
repnz
jnp
pop
testl
sub
sub
inc
loop
push
loope
cmp
jmp
mov
imul
cmp
adc
lret
imul
xor
mull
lretw
and
mov
fucomip
popf
pop
outsb
enter
lods
sub
mov
popf
lcall
aaa
xor
mov
lahf
repz
in
dec
movups
andb
loop
and
int3
push
lret
in
cmpl
pop
cmpl
in
dec
testb
push
in
mov
dec
dec
je
pop
sbb
mov
ret
pop
imul
inc
imul
jge
clc
popf
sbb
add
out
jb
dec
cmpsl
dec
fldl
sub
ret
and
cwtl
test
xor
arpl
jbe
jg
daa
lods
lahf
sti
mov
jo
inc
ret
and
cltd
dec
andl
pop
mov
cmc
scas
mov
ds
loope
cld
inc
sbb
fldt
jnp
outsl
inc
in
in
inc
jb
js
fisubrs
scas
in
jne
or
dec
out
adc
addr16
gs
ret
or
test
push
add
mov
mov
mov
mov
mov
jmp
shr
ror
shlb
loopne
pop
jecxz
scas
inc
pushw
push
cmp
test
push
inc
test
scas
mov
cmpb
cmp
sbb
popa
sub
stc
xor
sti
push
dec
mov
aas
mov
lcallw
addr16
mov
adc
outsb
int
xchg
pop
xchg
push
pushf
mov
lcall
dec
pushf
sbb
in
arpl
repz
and
cmp
iret
pusha
add
pop
stos
mov
repnz
mov
mov
xchg
push
arpl
lods
xchg
mov
and
mov
es
or
add
addr16
sub
aad
hlt
and
xchg
mov
and
or
into
dec
in
andb
in
std
out
lds
into
jmp
add
lcall
gs
adc
xor
inc
inc
and
push
ret
fsts
inc
or
repz
pop
stos
push
fiaddl
add
xchg
iret
ret
lret
mov
negl
loop
out
and
or
pop
lods
rcl
pop
xorb
mov
mov
fidivl
or
fs
ja
push
daa
insl
addl
imul
out
or
fsubl
xchg
xor
xchg
adc
add
inc
mov
cwtl
subb
dec
inc
or
adc
push
lret
addr16
ror
xor
pop
ljmp
scas
movsl
add
popa
add
xchg
xor
mov
subl
in
cli
rcl
scas
ja
mov
sbb
icebp
mov
out
mov
enter
cmp
pop
ret
in
adc
es
insb
add
push
not
cmp
stos
mov
jno
sub
mov
mov
push
sbb
push
arpl
daa
enter
mov
dec
add
mov
sti
es
into
mov
jge
loop
push
je
sti
fs
or
mov
jge
inc
sti
test
dec
cld
pusha
ds
adc
jp
xor
popf
dec
pop
cmc
insb
sti
aam
push
xchg
mov
out
mov
lcall
sub
xor
jmp
out
push
and
pusha
push
xchg
scas
ficoms
cmp
int
mov
insl
lret
xor
das
aam
fldl
and
loop
loop
add
lea
andl
mov
ja
inc
mov
xchg
inc
or
dec
pop
in
adc
repz
icebp
mov
nop
cld
pop
cmp
sbb
sbb
cld
fcmovb
sbb
shll
out
loopne
mov
cld
ror
popf
and
sbb
fnsave
stos
daa
jge
push
daa
aam
xchg
and
lods
pop
mov
faddp
add
loope
xchg
push
dec
in
jl
sti
mov
hlt
movsl
add
mov
sub
or
push
xor
xchg
fsubl
shll
cltd
out
and
pop
dec
mov
cld
xlat
add
lods
loopne
mov
xchg
lcall
mov
mov
jge
xchg
dec
add
lcall
xchg
lds
and
inc
xchg
mov
sbb
lock
fcmove
sub
inc
into
iret
mov
dec
mov
xchg
movsb
fwait
movzbl
fistps
pop
shlb
push
sarb
into
xor
xor
pop
and
pop
aaa
cmp
push
xchg
mov
movl
xor
lret
and
pop
repnz
adc
add
mov
ficoms
psubusw
fisubrs
mov
mov
jnp
bound
pop
mov
sbb
js
push
adc
cmc
dec
shlb
and
sub
push
stos
adc
call
mov
jbe
pushf
shlb
add
add
mov
aaa
stos
dec
divb
leave
xor
into
imul
cmpb
fdivrl
into
add
shrb
into
pop
pop
xchg
scas
in
pop
je
sub
ss
lahf
in
cmpsb
sbb
add
dec
mov
dec
sti
pop
sbbb
out
jnp
mov
xor
xchg
cwtl
mov
sub
push
adc
fadds
fmull
push
pop
faddl
push
xchg
sbb
or
orl
lcall
pusha
add
sub
clc
push
cmpl
or
cmc
dec
dec
sbb
adc
push
scas
inc
subb
push
and
test
sub
push
pop
xchg
pushf
xlat
outsb
and
jmp
cmp
lods
jae
xchg
xchg
into
adc
mov
cmp
and
rcrl
cwtl
movsl
sti
outsb
rorl
ljmp
jne
in
jg
ret
adc
jo
inc
rcrb
repnz
inc
test
out
shlb
mov
add
popf
push
pop
mov
sahf
mov
mov
testl
outsl
jae
call
dec
push
jno
loop
rol
push
mov
jmp
mov
adc
sbb
cmp
jne
es
dec
mov
insb
push
push
push
cmp
out
sub
jns
cli
fstpt
popf
test
cli
xchg
xorb
push
mov
mov
fists
push
rcl
movsl
cmp
xchg
adc
ds
imul
les
insb
and
push
cmp
bound
adc
dec
fistl
int3
data16
jae
and
js
cmc
jmp
orb
xor
mov
std
mov
mov
xor
dec
mov
sub
mov
xchg
sub
mov
mov
xor
mov
push
pop
dec
test
imul
and
pop
mov
movsb
push
cld
loop
sahf
pusha
or
mov
push
aad
push
call
inc
push
or
sbb
jge
loop
jl
rcrl
xchg
mov
push
push
cmc
dec
fistpll
jmp
push
mov
cli
mov
jmp
stc
jnp
xor
inc
in
fisubs
les
test
outsl
push
mov
outsb
sbb
orl
repz
addr16
pop
int3
cmpsb
push
rorb
cli
push
jecxz
push
data16
jg
xor
mov
xchg
mov
int
dec
dec
or
jbe
sub
flds
push
xchg
add
insb
les
mov
das
pop
int3
loopne
ret
movsb
sbb
out
or
mov
adc
lret
test
jbe
pop
movsl
push
mov
or
pop
inc
ret
inc
aas
icebp
sbb
popf
inc
movsl
pop
movsb
pop
and
ljmp
jg
js
add
iret
jns
cld
sbb
inc
inc
test
pop
xor
movsb
cmpsl
ds
mov
pop
lock
outsl
roll
lret
xchg
inc
mov
mov
sub
jp
xchg
dec
and
insb
xchg
dec
add
mov
jmp
xchg
add
in
push
decl
pop
mulb
in
and
mov
xchg
inc
mov
ja
int
and
xchg
loope
aad
lods
loopne
int3
leave
imul
add
popa
pop
xor
shlb
mov
push
cmp
std
add
shlb
xchg
dec
lds
int3
hlt
xchg
pop
adc
ret
imul
mov
inc
leave
push
sbb
bound
sub
mov
repz
daa
into
xor
mov
cmp
cmc
mov
mov
xchg
test
negl
das
xchg
push
jle
scas
cmpsl
test
fldcw
add
ret
add
jmp
pop
push
mov
mov
or
inc
std
and
pop
cld
and
loop
test
mov
nopl
jg
dec
mov
mov
roll
cmp
dec
push
and
movsl
and
and
pop
mov
mov
cs
lea
sub
cmpsb
add
push
fistps
addr16
and
imul
insb
jecxz
cld
rcll
insl
lds
into
inc
pop
sub
rcrl
inc
add
in
mov
cmp
jp
pop
pop
or
aaa
test
arpl
hlt
std
dec
push
adc
adc
cmpsl
idiv
pushf
arpl
and
dec
mov
arpl
cli
mov
in
int3
push
or
fcmovnb
mov
scas
push
lret
push
jae
pushf
mov
sub
push
flds
mov
jl
and
movsb
loope
adc
jl
xor
stos
sbb
das
add
imul
adc
inc
lods
push
inc
pushl
xor
add
xor
dec
out
fsts
push
imul
pop
in
test
shrl
int3
data16
insl
lcall
add
sti
inc
aas
cli
aad
mov
push
mov
adc
and
sbb
arpl
dec
cmp
add
daa
les
jp
movsb
mov
shlb
sbb
pop
adc
xchg
leave
jnp
cmp
test
cmpsb
outsl
push
mov
cmpb
test
andb
test
pop
aaa
out
test
mov
jae
shl
daa
std
jnp
dec
dec
call
sub
arpl
test
xchg
pop
std
push
movsl
movsb
imul
jle
mov
pop
popf
push
add
add
aad
stos
clc
xchg
sub
sarb
movsl
in
sub
mov
jp
cmp
repz
mov
inc
bound
add
into
sub
add
cwtl
fcompl
xchg
cmp
cmpsl
or
sbb
mov
ds
icebp
nop
cmpsl
mov
out
mov
mov
lock
adc
test
stc
sub
orl
in
xlat
andb
adc
push
jae
sbb
subb
adc
cmpsl
dec
stc
cmpl
inc
rorl
ret
out
adc
add
rorb
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
jmp
ret
and
cmp
outsb
pop
dec
mov
cmp
sbb
in
fdivr
xor
lret
shl
mov
adc
and
jns
sbb
movsl
mov
mov
sti
lods
pusha
sbb
push
loope
cli
pop
pop
sbb
xchg
or
pop
or
pop
insl
mov
leave
cmpsl
popf
pop
push
mov
mov
lods
and
pushw
lods
jge
cmp
ja
cli
add
cmpsl
xor
je
loopne
js
cmp
cltd
frstor
mov
adc
jae
aad
xchg
adc
jnp
cmp
in
sbb
rcll
paddw
dec
cmpsl
jns
daa
popf
jge
lahf
dec
pop
stos
int
ret
xchg
mov
fsubr
jle
jo
pop
mov
repnz
mov
pop
lret
xlat
jl
dec
punpckhwd
mov
test
pop
sub
push
imulb
sbb
shlb
inc
dec
inc
cs
stos
or
test
mov
push
jecxz
mov
mov
dec
sbb
adc
or
sub
daa
jecxz
mov
add
sbb
xor
jge
bound
adc
aam
mov
xchg
xor
movb
sahf
xor
dec
and
fiadds
add
ja
sub
pop
aas
scas
daa
dec
pop
enter
fildll
jno
pop
xorb
pusha
imul
fdivs
scas
movsb
bound
xchg
or
je
test
push
xchg
dec
dec
inc
sbb
sub
adc
jbe
adc
mov
xor
ljmp
sbb
hlt
fildl
fldenv
enter
inc
test
cmp
dec
pop
jl
mov
repnz
mov
push
push
jg
and
mov
or
decb
adc
loopne
out
dec
mov
or
aad
test
dec
pop
sub
in
dec
xchg
dec
inc
insb
lcall
mov
mov
mov
negb
and
and
out
adc
les
push
jns
jo
daa
sti
jnp
int3
mov
jne
add
mov
mov
ror
out
mov
xor
and
arpl
cs
jge
jno
cltd
lea
stos
outsb
enter
addr16
jmp
jb
inc
mov
or
and
push
push
mov
or
and
lea
or
jmp
and
stc
insb
pop
test
frstor
movsl
fcoml
iret
lods
jmp
pop
insb
adcl
lret
iret
aam
out
push
push
add
cltd
add
or
sbbl
into
aas
mov
popf
sbb
mov
sbb
iret
sti
dec
or
orb
cmpsl
jp
in
sbb
sarl
dec
pop
push
mov
ficoms
jmp
divl
mov
test
sub
inc
hlt
les
mov
insl
pop
js
mov
mov
int3
movsl
add
ss
ret
fisttps
mov
ljmp
jecxz
push
leave
insb
xor
add
xor
jae
xor
loope
adc
adc
dec
popf
lcall
xchg
or
xchg
mov
enter
rcl
ret
adc
cmpsl
outsl
and
push
lcall
sbb
aam
mov
test
sti
loopne
scas
dec
sub
mov
iret
adc
xchg
push
xchg
outsb
lock
subl
inc
stc
dec
js
mov
and
aam
test
aam
ja
aam
dec
push
adcl
rcrb
inc
pop
lods
and
push
incl
test
pop
pop
mov
mov
movsb
sub
bound
or
js
pop
lahf
lahf
xchg
or
dec
arpl
popf
ds
mov
push
push
lods
cmc
and
mov
popf
jp
cwtl
shrb
sbb
pop
xor
xor
in
sub
dec
jno
nop
jo
aam
xchg
leave
daa
or
mov
mov
xor
push
pop
cmpsb
mov
push
push
push
fnstsw
sti
gs
in
push
or
xor
sbb
mov
or
push
shrl
cmp
mov
shl
pop
add
lcall
pop
jb
jne
mov
daa
mov
mov
out
xor
stos
mov
es
les
mov
loopne
in
pop
in
test
push
ret
pop
sub
xchg
out
aam
shlb
clc
jmp
jle
adc
inc
out
cmc
xchg
jp
jl
mov
in
jle
sbb
and
insl
cmc
pop
dec
aad
push
ret
shrb
adc
movsb
adc
repz
pop
mov
out
sub
xchg
xor
or
xor
push
xor
mov
jmp
jl
mov
inc
jmp
sahf
mov
inc
push
push
cmp
add
aam
adc
mov
andb
push
xchg
pop
or
aam
inc
cmp
mov
jo
sbb
push
sarb
nop
mov
andb
push
sub
add
ret
loope
jge
jnp
cmp
sbb
outsb
pop
ret
test
xchg
cmpsl
jo
ja
xor
mov
leave
xor
cmpsl
or
cld
rorb
test
mov
and
fdivrs
xor
xor
or
dec
xchg
sahf
jmp
movntps
addr16
jnp
xor
dec
inc
sbb
pop
movsb
inc
into
push
ds
lea
sub
mov
xor
js
mov
mov
test
cmpsb
mov
sahf
and
cmpsl
stos
movl
inc
xor
bound
outsl
xorb
adc
cmp
pop
adc
lret
cmp
popf
cs
nop
aaa
mov
idiv
mov
sti
cmp
mov
bound
lea
mov
cmp
push
out
sub
sar
cmp
imul
popa
frstor
cltd
sbb
jns
push
xchg
andb
insl
jnp
call
outsb
mov
sbb
fwait
cmp
js
jle
and
stos
test
aam
dec
in
sub
fsubrl
mov
mov
cmp
dec
clc
push
and
mov
sub
popl
fcmovnbe
fndisi(8087
imulb
jnp
pop
sbb
out
out
mov
lret
add
jmp
imull
or
push
jg
cmp
cmpsb
into
cmc
aas
aad
into
pop
lret
fstl
push
push
ds
push
inc
enter
mov
xor
xchg
sbb
xor
stos
adc
movsb
cmp
daa
jg
test
sbb
aam
xor
push
inc
add
sub
adc
fwait
out
sahf
int
rclb
scas
fstp
xor
xor
dec
dec
jns
cwtl
push
mov
jbe
mov
inc
jg
cmp
bound
cmc
test
push
fldl
xchg
js
nop
js
lret
popa
notb
push
imul
es
gs
decl
bound
mov
add
push
fs
shrl
and
iret
xor
push
cmp
es
test
orb
mov
mov
out
xor
mov
pushf
cwtl
mov
and
push
push
out
sti
cmp
mov
xor
lret
cmp
xchg
mov
repz
sahf
repnz
js
clc
outsl
pop
pop
mov
adc
xor
pmaddwd
cli
movsl
mov
xlat
movsl
fildll
mov
xor
jne
gs
and
fsubrs
fs
das
mov
out
les
add
dec
fmuls
test
jb
sbb
pusha
xor
sub
fisubrs
cmp
aaa
cmpsl
adc
inc
aam
aas
jl
data16
xor
into
lahf
mov
fcoms
or
sub
fidivrl
iret
add
dec
stos
cmp
ret
fwait
mov
insb
mov
xchg
mov
xchg
cmp
clc
pop
pop
in
inc
outsb
sub
mov
sbb
add
pop
fnstenv
push
mov
sbb
xchg
adc
cmp
push
pop
mov
scas
repnz
sub
xor
out
ret
add
cmp
push
adc
popa
out
stos
sub
fadd
push
mov
adc
cmp
xor
mov
inc
mov
pop
mov
dec
inc
in
sub
dec
sub
lcall
mov
jns
insl
xchg
add
jmp
orb
xor
sbb
pop
push
pop
pop
movsb
test
inc
cmp
movsl
push
push
add
xor
mov
cltd
aam
push
in
cmp
jmp
arpl
out
aas
mov
xchg
pop
add
mov
cmpsb
xlat
add
inc
adc
cmc
inc
xchg
dec
inc
jb
sbb
dec
xchg
inc
jge
mov
add
dec
pushf
xchg
push
push
push
aas
sub
stos
push
jno
cmp
ficompl
jge
dec
ret
and
pop
mov
inc
sbbl
push
jge
jecxz
or
dec
or
incb
xchg
adc
in
shl
push
jae
pop
addl
xor
or
or
cmp
or
std
jb
test
pop
push
call
enter
test
aas
push
shrl
mov
cmp
cmp
mov
lods
adc
add
sub
jp
add
shrl
mov
sub
and
mov
movb
push
sarb
pop
popa
mov
cs
xor
jns
lea
push
inc
sti
push
lock
fsubl
movsl
test
popf
out
mov
iret
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
jmp
jle
addr16
push
ds
dec
clc
pushf
outsb
lret
push
cmp
xlat
addr16
pop
in
shlb
testl
shll
cli
cmpb
repnz
std
push
adc
sub
lret
sahf
out
adc
bound
and
sub
daa
mov
imul
negb
lret
xlat
sbb
stos
pop
arpl
push
jecxz
push
cs
aas
out
lock
sub
cmp
insb
xchg
and
xor
aad
in
mov
out
or
xchg
sub
sub
mov
gs
lea
jbe
sub
inc
pop
push
ds
mov
notl
sub
xchg
es
jb
stos
sbb
mov
out
out
inc
dec
ja
sbb
fcomp
jne
subl
lahf
stos
mov
sbb
lcall
cli
or
pop
dec
stos
int3
ja
jae
cld
inc
inc
mov
mov
rcl
xor
and
pop
mov
pop
fmuls
cmpsl
pop
lcall
popa
lcall
push
int
xor
jg
das
push
mov
mov
shrl
arpl
jp
add
cltd
cld
mov
mov
push
sub
push
or
fs
clc
pop
mov
bound
mov
or
xchg
rorb
inc
call
mov
xchg
push
push
add
sub
push
adc
mov
in
xchg
sti
or
inc
movsb
rcr
pop
lcall
popa
aam
outsb
setle
pop
es
adc
fsubrs
sub
push
mov
jo
sub
rcll
pop
movsl
int3
cltd
test
xchg
xchg
mov
lret
mov
xor
xchg
data16
mov
mov
sbb
push
enter
test
push
inc
pop
jle
push
icebp
jno
mov
sahf
dec
inc
cwtl
shlb
pop
push
inc
pop
addr16
inc
fimull
imul
xor
addr16
jno
fcoms
and
mov
out
call
in
jp
lahf
or
cmp
mov
inc
adc
mov
push
pop
xor
jnp
pop
sbb
pop
mov
cmp
fbld
or
or
mov
xchg
dec
lds
aam
lret
leave
cld
dec
in
loope
jae
cmp
arpl
fucomp
mov
bts
dec
orl
movsb
mov
test
adc
pop
xchg
insl
adc
cmpl
jo
mov
pop
mov
bound
adc
xchg
mov
adc
addr16
aas
pop
dec
pop
mov
ret
xchg
sbb
jns
sbb
jne
sub
dec
xor
push
mov
in
xchg
jl
cmp
je
xchg
cmp
test
or
fstps
rorb
sub
iret
or
rclb
mov
pusha
movsb
fs
data16
pop
pop
gs
adc
js
jo
dec
mov
mov
sbb
mov
sbb
or
mov
inc
xor
imul
cli
push
jecxz
fwait
pop
lret
stc
mov
fisubl
inc
std
xchg
sbb
mov
je
bound
sub
cmp
call
outsl
ret
inc
jl
dec
in
adc
insb
nop
aas
jge
es
sbb
pop
adc
xchg
shl
mov
jmp
xchg
mov
nop
lcall
push
stc
add
xchg
jns
mov
mov
mov
jl
or
or
out
mov
stos
inc
jge
and
fs
bound
pop
mov
arpl
loope
jns
shll
inc
jo
jle
mov
into
inc
leave
inc
xchg
in
repnz
pop
xor
xchg
int
mov
dec
popa
sbb
lret
adc
popa
lret
pop
iret
loopne
pop
xor
mov
in
pop
xchg
mov
int3
fcmovnbe
jp
pop
jnp
fs
or
loop
outsb
in
inc
fs
out
or
ss
sbb
in
shll
xchg
aaa
jne
pop
mov
xor
push
mov
push
rorl
inc
push
jge
fldenv
in
es
jns
icebp
and
mov
mov
addr16
jp
mov
les
mov
test
out
mov
pop
mov
movsl
dec
sub
clc
aam
xor
sbb
jns
fcmovu
jle
dec
dec
cli
fldt
or
dec
jbe
push
add
push
and
jl
in
adc
ljmp
gs
ficompl
std
fisttps
sub
pop
and
andl
mov
mov
mov
bound
dec
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
jmp
repz
sbb
jmp
mov
xor
push
cmp
mov
ss
dec
add
out
test
add
fnsave
les
xor
pop
cmp
das
aas
jp
mov
xchg
test
out
cwtl
or
inc
jnp
jo
xor
jbe
push
aad
jmp
xchg
sub
out
aas
mov
bsr
inc
cmc
bound
mov
jnp
adc
pop
sahf
loope
sbb
sub
inc
into
push
cltd
xchg
push
sub
adc
adc
test
dec
repnz
cwtl
fwait
stos
or
fdiv
lock
push
insl
ror
fs
jp
mov
mov
xchg
fs
inc
addl
dec
xor
cli
arpl
out
shll
inc
jae
xor
daa
ljmp
jle
add
adc
ja
arpl
mov
jle
xor
push
cmc
push
mov
xor
pop
inc
in
cld
or
addr16
or
push
jb
insb
jp
ja
adc
es
xchg
sti
inc
leave
xchg
in
and
jns
roll
pop
jbe
xor
ljmp
ret
and
mov
dec
addr16
inc
lea
xor
add
xchg
add
jmp
addl
xchg
xchg
dec
fldl
or
jmp
test
lret
fisttps
sahf
xor
mov
push
mov
push
lahf
pusha
inc
push
in
scas
jmp
adc
fisubrs
mov
bnd
add
enter
mov
ficomps
icebp
stos
adc
insb
ret
xchg
push
jg
call
shll
add
out
das
dec
mov
mov
ret
addr16
sbbl
ljmp
jmp
mov
mov
imul
cmc
test
lcall
mov
cmp
pop
push
test
jns
xor
scas
test
pop
sbb
jnp
cmp
lret
arpl
lret
xor
jno
movsl
cmp
or
shlb
xor
mov
lea
jns
push
iret
fisttpll
jne
nop
adc
inc
in
xchg
iret
mov
idivl
fcmovnu
sbb
cli
fwait
add
hlt
mov
adc
and
fsubrs
cli
and
or
test
mov
sbb
pop
jae
stos
xor
repz
and
jge
jae
push
push
add
imul
mov
cs
jne
in
xor
inc
mov
lods
cmp
test
cmp
mov
icebp
mov
xor
scas
sbb
add
sbb
scas
jnp
and
mov
sahf
fs
popa
xchg
push
sbb
mov
inc
adc
mov
arpl
jp
in
cmp
xor
pop
inc
insl
push
xor
clc
sub
fisttps
xor
mov
dec
push
dec
inc
je
push
mov
mov
in
mov
aad
xlat
pop
jo
ljmp
adc
push
or
xor
imull
loop
mov
mov
scas
mov
xchg
data16
mov
cmp
xor
or
clc
mov
les
int
push
xor
push
inc
sub
mov
insb
push
add
cli
jg
push
inc
dec
mov
insb
pop
cmp
mov
push
mov
cmpsb
and
sbb
bound
cltd
xor
xchg
dec
adc
sub
in
or
sbb
imul
fsubs
and
scas
shll
call
cmp
enter
or
sar
mov
and
push
push
clc
jmp
out
mov
shlb
mov
test
cmpsl
xchg
fwait
jo
push
mov
call
lret
divl
and
lods
sub
pusha
and
mov
cwtl
pop
fisubrs
arpl
mov
xchg
test
mov
push
ret
in
and
jae
sbb
fldcw
pop
pop
sbb
mov
loop
xchg
or
add
fcom
out
jge
xor
xchg
xor
mov
ljmp
out
sbbl
aad
mov
sbb
push
adc
sbb
and
leave
lds
and
sti
xchg
popa
push
xchg
push
mov
in
or
mov
jne
jmp
aam
push
sub
cwtl
mov
xchg
and
sbb
and
or
incb
inc
popf
sub
stc
mov
adc
xchg
pop
xor
or
outsb
sub
and
fnstcw
test
mov
pop
sbb
pop
xor
gs
mov
enter
dec
test
icebp
mov
loop
in
mov
rorl
mov
push
and
sub
dec
testl
cmp
ljmp
adc
sbb
dec
or
inc
mov
mov
movl
mov
movl
mov
jmp
xchg
jbe
pop
adc
mov
pop
shrb
push
es
push
cmp
outsl
xchg
add
out
xchg
add
jno
pushf
cmp
in
rclb
loope
push
push
ret
mov
gs
rorb
jecxz
cmp
loop
adc
outsl
stos
fnstenv
cmp
jl
mov
inc
fidivl
pop
bound
cmpsb
cmp
cmpl
cwtl
addb
les
lret
scas
lcall
sbb
adc
pop
add
shrb
push
outsl
and
inc
cli
mov
and
cmp
and
in
add
rorl
mov
subl
ficomps
or
repz
cld
test
call
stc
push
enter
xor
cmpsl
rcrl
loope
aad
dec
lods
fst
adc
cld
push
je
jle
je
lret
mov
inc
xchg
movsl
imul
sub
mov
dec
mov
in
sbb
cwtl
shrl
orl
push
pop
mov
andb
and
lahf
or
cmp
adc
adc
leave
pop
test
ret
xor
add
sbb
popa
mov
hlt
mov
mov
adc
adc
js
xor
adcb
pusha
push
push
sarb
xchg
cmp
jge
push
inc
mov
mov
aaa
ja
xchg
mov
pop
enter
daa
cs
das
adc
push
add
fdivl
or
ret
std
lret
mov
or
adc
mov
vunpcklps
arpl
mov
sub
xor
push
jge
int
aad
pop
sbb
ss
xor
insb
sub
xchg
pop
daa
add
into
lahf
ss
mov
aad
push
movntq
out
push
movsl
mov
stc
lcall
push
xor
lods
add
cmpsb
stos
pop
pop
dec
popf
adc
pop
mov
test
cmpsl
sahf
mov
loop
push
push
in
in
sbb
test
std
lock
rcl
in
iret
das
ja
mov
mov
sbb
hlt
rcrb
insl
in
outsb
subl
and
rcll
sahf
mov
aam
es
arpl
outsb
mov
mov
pop
mov
xor
popf
jle
mov
mov
mov
lods
or
cwtl
and
dec
lods
js
roll
mov
xchg
loop
int
dec
push
rcr
test
jns
fiaddl
in
mov
jne
je
fidivrs
sub
pusha
and
jecxz
in
lods
jb
jp
sub
inc
insl
adc
jmp
out
cmpsl
xlat
pop
mov
leave
xchg
ljmp
sbb
pop
xor
adc
inc
push
mov
adc
cli
jge
cltd
xchg
or
push
ja
adc
add
and
push
pop
in
pusha
xchg
fcmove
mov
lret
clc
cs
sub
jno
mov
xlat
popf
pop
stos
daa
call
push
out
daa
pop
pop
push
adc
shlb
add
nop
iret
aas
sbb
scas
jg
dec
xlat
and
in
sbb
add
sub
pop
fsubs
dec
fs
test
in
lahf
lret
out
insl
mov
fdivs
hlt
mov
push
inc
and
inc
jmp
cmp
aad
lret
xchg
ds
enter
es
mov
cmp
add
insb
add
sub
roll
dec
lea
sbb
dec
xor
sub
mov
clc
pop
inc
adc
jl
stc
add
loope
pop
lret
xchg
jge
or
movsl
inc
sahf
fidivrs
jno
mov
shll
lcall
inc
mov
test
xorl
sub
repz
mov
ret
cltd
xchg
xchg
sub
jno
or
adc
mov
popf
jecxz
mov
push
iret
ud0
push
lock
lcall
push
addr16
xchg
xchg
dec
aam
cmp
das
ret
aas
cmp
dec
mov
mov
xchg
push
sbb
adc
cld
push
sarb
or
call
lret
inc
pop
iret
movlps
sbb
adc
sbb
push
lea
jb
xor
test
xchg
fstpt
mov
cmp
mov
cmp
sahf
sarb
dec
pop
pop
aas
fcmovne
jae
dec
and
in
roll
mov
cli
aam
cmpsb
ss
pop
and
adc
and
sbb
icebp
xchg
adc
ljmp
sti
lret
adc
subl
xor
test
das
and
xor
cmp
xchg
sub
dec
arpl
jnp
into
and
mov
add
lcall
lret
xchg
fwait
out
fildll
shrb
jl
jo
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
jmp
xchg
lret
cs
push
adc
mov
mov
push
push
cmp
mov
rep
inc
test
fwait
inc
lods
orb
cmp
stc
dec
pushf
cmp
mov
les
das
sarb
mov
sub
mov
ja
push
pop
mov
mull
dec
adc
add
cld
or
xchg
pop
mov
push
or
mov
dec
xor
out
pusha
nop
mov
mov
sub
pop
sbb
leave
pushf
xchg
aaa
sub
xor
fnstenv
mov
pop
pop
fs
loop
push
lods
xor
lea
gs
or
push
push
pop
stos
sbb
pop
jno
call
push
or
sbb
push
xchg
jle
popf
or
stos
ja
xchg
ja
push
pop
inc
add
stos
adcl
adc
ss
add
mov
ja
mov
leave
repnz
mov
sbb
add
rorb
pop
sub
and
cmpl
pop
jb
out
sub
fldt
sub
sbb
cmp
test
inc
repz
aas
mov
pusha
mov
and
into
lret
mov
push
imul
into
pop
mul
insl
pop
je
fwait
mov
inc
jae
jnp
cmpl
pop
dec
orb
enter
pop
dec
inc
imul
negb
push
inc
mov
imul
dec
pop
and
cmp
pop
cmc
rclb
test
add
das
push
cs
nop
xchg
jo
and
jp
mov
imul
inc
insb
clc
pop
xchg
xlat
and
jg
ret
nop
ljmp
fwait
loopne
and
jecxz
xchg
test
adc
adc
inc
inc
adc
stc
mov
and
lcall
sbb
fstpt
xchg
pop
stos
cmp
test
jmp
cmc
and
add
ljmp
lds
and
shll
push
cmp
or
andl
push
sub
cltd
test
cmp
testl
daa
adc
push
loop
jne
mov
popa
movups
xchg
std
fs
movsl
out
imul
lret
inc
test
xchg
dec
cmp
push
loope
pop
pop
in
xor
add
stc
mov
or
je
and
sub
mov
cmpsl
jl
dec
or
sti
dec
ret
add
test
fs
add
stc
bound
ret
dec
push
jae
fchs
sub
jmp
outsl
adc
push
inc
outsl
cli
push
xor
test
or
jecxz
mov
pop
xor
sub
fsubr
or
mov
popf
loop
mov
ficompl
mov
ret
cmc
ret
aad
addb
push
lahf
lock
and
and
pop
ljmp
push
imul
fdivp
cmp
jle
popa
adc
pop
dec
add
aaa
aaa
fnsave
sbb
inc
ret
pop
and
cmpsb
scas
in
fisubl
mov
xor
cmpsb
sub
inc
fldcw
pusha
js
test
fwait
dec
nop
imul
ss
inc
loope
rcl
cli
dec
shr
iret
pop
cli
dec
cmp
repnz
pop
enter
push
stos
pop
lcall
jecxz
lea
clc
sub
data16
ffree
inc
aaa
out
push
mov
out
mov
loop
inc
out
jecxz
call
sarl
xchg
push
pop
jo
fdivrs
lret
ds
out
inc
addr16
out
lock
xchg
and
mov
push
xchg
idivb
cmp
jmp
fdivs
mov
sub
pop
mov
jp
lret
scas
movsl
leave
je
scas
mov
mov
lods
jo
pop
cli
push
dec
push
jbe
adc
dec
enter
mov
and
adc
and
pushl
add
je
pop
inc
idivb
push
mov
adc
dec
pop
push
sub
xor
in
test
sbb
lahf
xor
push
pop
repz
xchg
sub
lods
mov
fidivl
loopne
hlt
and
sbb
ljmp
and
pushf
push
sub
mov
xor
dec
pop
push
xor
jmp
loope
push
fwait
sub
xchg
loop
jl
sbb
add
mov
ljmp
loopne
dec
cmpsl
sub
fsub
mov
inc
add
push
sbb
push
sbb
rcrb
andl
xchg
popa
and
xchg
mov
lret
sub
scas
mov
in
lcall
repnz
inc
sbb
sarb
mov
pop
scas
add
lcall
movsl
mov
xchg
mov
dec
lcall
inc
push
sub
dec
cmp
pop
push
push
cltd
scas
mov
sub
lret
je
imul
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
jmp
xchg
fadds
mov
out
shrb
mov
or
cmp
test
aaa
jmp
lods
in
aad
mov
dec
push
cmp
dec
xchg
xor
push
and
and
sti
fwait
jbe
inc
mov
pop
push
cli
in
movsb
xor
rol
out
pop
popf
xor
outsb
sub
pop
or
push
pop
clc
sbb
xor
inc
sbb
test
fimull
je
mov
jb
dec
and
fsubrl
fisttps
push
testb
xchg
test
mov
nop
or
in
push
pop
mov
xchg
out
ss
fadds
bnd
sub
cmpsb
lahf
push
dec
fistl
push
push
leave
add
and
xorb
lea
cwtl
roll
cli
jl
fs
push
and
jmp
icebp
les
add
xchg
pop
mulb
lcall
pushf
push
inc
mov
add
push
scas
mov
cmp
push
int3
xchg
dec
shll
into
xor
es
cmp
outsl
addr16
and
or
cmpl
pop
xchg
pop
rorb
jge
popa
testb
xchg
push
and
sbb
inc
pusha
pop
and
fsts
mov
subb
xor
mov
andb
mov
sbb
pop
xchg
push
sarl
sbb
popa
sub
pop
push
and
xor
cmp
shlb
loope
repz
lock
mov
in
mov
outsb
mov
or
sbb
clc
or
aas
mov
fsub
sub
test
clc
aad
adc
fdivrl
xor
or
inc
nop
ret
movsl
xchg
jecxz
mov
adcl
pop
mov
pop
mov
jae
cmp
movsb
sbb
mov
loope
iret
xor
sub
es
repnz
jns
jg
sbbb
sahf
inc
push
ljmp
fucomip
mov
inc
xchg
jge
in
hlt
pop
sbb
loop
mov
mov
popf
roll
mov
pushf
fmuls
shl
arpl
int
inc
and
loope
cld
mov
cmp
cmp
xor
arpl
scas
sub
lcall
mov
into
inc
inc
jns
scas
xchg
sub
mov
sub
push
jmp
out
mov
push
lret
dec
repz
and
cli
pop
push
jb
mov
aad
aaa
in
rclb
repz
inc
jbe
add
and
sahf
mov
add
insb
mov
push
leave
ja
mov
sub
decl
mov
cld
mov
mov
or
pop
das
inc
repnz
jbe
pop
orl
inc
sub
xchg
inc
dec
jge
mov
aaa
pushf
mov
outsb
or
js
hlt
pop
mov
into
lahf
int
pop
ljmp
or
addl
call
adc
aaa
push
js
jge
pop
in
shr
aam
mov
sub
xchg
inc
out
addr16
pusha
sbb
int3
dec
inc
xor
mov
jp
ljmp
stc
ret
stc
out
scas
cmp
subl
lods
add
in
push
fcomip
push
sub
arpl
adc
aad
insb
imul
cmpsl
loopne
xor
clc
xchg
adc
push
jns
arpl
test
addb
arpl
jne
xor
mov
push
or
ds
pop
in
and
cltd
loopne
repnz
mov
add
push
out
inc
mov
xchg
and
dec
lcall
andl
fwait
jb
cmpsl
and
xchg
fnstcw
sbb
repnz
cld
mov
inc
add
neg
rorl
leave
out
mov
stos
xor
add
orl
in
fwait
add
push
jmp
leave
jb
ret
in
jns
movsb
pop
mov
scas
mov
pop
mov
stc
out
dec
cmp
lods
dec
cs
mov
jle
mov
or
outsl
insl
lock
sbbl
fst
inc
mov
sbb
rcr
adc
mov
cmp
mov
inc
addr16
enter
sbb
cwtl
clc
loopne
adc
lods
out
popa
fs
out
cmc
daa
inc
mov
sub
mov
push
insl
cmp
push
mov
add
inc
lds
sbb
xchg
bound
lods
andb
std
mov
sub
adc
aas
lret
test
loop
add
and
mov
pop
mov
push
loop
xchg
int
data16
mov
insl
pop
ljmp
popf
cltd
jmp
cmpsb
push
loop
pop
roll
sub
add
stos
movsb
add
mov
lods
enter
add
mov
add
les
jle
nop
outsb
push
mov
or
cmp
mov
xor
mov
lock
or
or
adc
inc
jb
mov
bound
push
outsb
lock
scas
xchg
push
or
ljmp
mov
jg
xchg
pop
sbb
sbb
clc
in
lea
mov
adc
mov
shll
sbb
xor
push
pop
int3
jmp
insb
mov
scas
push
cltd
fsubrs
jp
pop
orl
push
cwtl
mov
mov
jmp
in
and
inc
and
lds
xchg
mov
cmpsb
mov
pop
xor
jecxz
arpl
add
pop
jns
cmpsl
lock
pop
rclb
arpl
test
je
pop
or
cmp
aas
or
cs
aaa
sub
sbbb
insb
dec
push
das
pop
out
sub
jnp
xlat
sbb
fdivrl
xor
cmp
mov
inc
jne
ja
mov
dec
xchg
cmc
shlb
jl
dec
in
subl
out
cmpsl
push
jne
pushf
xchg
test
push
in
xchg
dec
jns
rcll
les
jge
lret
xchg
jns
scas
into
jecxz
mov
adc
lret
jne
das
mov
sub
xchg
outsb
jl
out
ja
or
push
mov
mov
sub
es
ljmp
in
jmp
into
and
repz
pop
or
sarb
testb
pop
cmpsl
fsubrs
je
lret
lcall
dec
call
dec
cwtl
es
stos
xchg
sarl
jmp
bound
push
test
jp
and
mov
aam
adc
test
pop
add
fsubp
xchg
jns
push
sbb
add
adcb
adc
in
fistpl
mov
pop
mov
ret
cmpl
je
mov
in
lahf
mov
outsl
cmpl
mov
inc
xor
cmp
sarb
or
call
out
fadds
call
scas
adc
add
dec
mov
cwtl
inc
gs
stc
mulb
add
pop
push
mov
dec
mov
cmp
fists
adc
xor
sub
loopne
cltd
out
fistpl
inc
push
mov
fsubl
add
xor
jae
sub
pop
add
mov
xlat
cld
mov
test
and
rorb
or
mov
or
and
hlt
mov
sahf
loopne
es
xor
pop
or
inc
cwtl
out
fadds
daa
jmp
sbb
roll
cld
cs
lret
nop
cmp
pop
pop
stos
add
cmp
out
das
popl
sti
out
lahf
mov
xchg
lahf
cli
jnp
mov
lahf
jmp
pop
cmp
lret
cmp
mov
stos
pop
mov
mov
out
pusha
aas
pop
repz
adc
dec
push
ds
mov
push
rcr
inc
sbb
stos
jg
push
adc
andb
mov
xchg
enter
add
jns
add
in
icebp
mov
cmp
push
stc
std
cmp
lret
inc
fwait
rcrl
cwtl
ret
pop
push
pop
subl
pop
sahf
jmp
jmp
int
fcompl
mov
pop
jb
mov
jp
push
insl
or
xor
or
sbb
inc
insb
lods
rcrb
enter
xlat
jns
movsl
fs
lret
cmpsl
inc
xchg
sbb
ret
jecxz
jge
mov
sub
orl
lret
xchg
mov
stc
jle
popa
aam
pop
mov
arpl
es
data16
mov
lcall
add
call
push
movups
lahf
inc
mov
stos
in
mov
lods
xlat
adc
movsb
out
mov
jecxz
rclb
sbb
adc
arpl
add
shll
jne
lcall
or
fcoml
mov
hlt
mov
lcall
xor
dec
sub
in
icebp
jns
xchg
aas
pop
scas
sbb
and
mov
cmpsl
dec
sbb
push
test
pop
mov
imul
daa
aad
arpl
sbb
xor
clc
mov
fucom
imul
mov
cli
iret
sbb
subb
dec
outsb
repz
mov
popa
pop
adc
xchg
adc
pushf
and
jne
popa
push
imul
inc
sub
pop
dec
sub
shll
movl
int3
push
test
addr16
nop
lds
dec
or
sub
arpl
push
cmp
adc
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
jmp
sahf
push
sub
sbb
inc
adc
subb
repnz
cmp
test
out
cwtl
and
pop
push
mov
adc
push
insb
and
or
adc
stc
and
push
aad
pushf
cmp
arpl
pusha
in
jmp
in
in
lahf
fdivrs
lcall
outsb
pop
or
or
lods
in
lahf
inc
or
in
sub
sub
mov
ljmp
cmp
jg
inc
clc
sub
mov
rorl
dec
js
clc
outsb
mov
or
cmp
scas
std
add
adc
rorl
imulb
lea
mov
inc
out
jns
push
cmp
and
jp
sbb
inc
pop
cmp
sbb
sub
pushf
mov
mov
cmp
add
sub
icebp
xchg
insb
sbb
xchg
cmp
dec
lahf
sti
fwait
mov
push
ljmp
jb
stc
icebp
cmp
add
mov
fs
pop
icebp
add
fistpll
loopne
cmp
mov
icebp
and
jmp
mov
lods
inc
pop
inc
insb
add
mov
out
gs
in
mov
jnp
push
filds
leave
lock
leave
daa
outsl
adc
adcb
and
inc
sbb
jo
adc
xor
add
adc
nop
in
iret
push
lret
jecxz
hlt
dec
scas
sub
cmpl
adc
push
test
loopne
sub
jnp
fs
push
roll
add
or
push
lds
push
inc
rcrl
pushf
pop
ss
sbb
jno
pop
ds
xchg
arpl
or
inc
std
aad
mov
lods
mov
sub
inc
scas
jg
addl
inc
lret
and
fs
fwait
adc
xchg
das
loopne
ja
push
mov
mov
in
sub
aas
and
cltd
push
or
lods
xchg
mov
xor
mov
mov
xchg
cwtl
push
test
adc
or
xchg
aaa
pushf
mov
imul
mov
lock
or
stos
out
mov
cmp
adc
bndstx
cmc
push
adcb
xchg
addr16
popa
js
cmp
mov
fscale
push
in
jge
jp
arpl
repnz
popa
add
xchg
mov
fisubrs
shl
or
testl
jae
fs
push
fnstcw
push
push
sbb
out
ljmp
fldl2t
pushf
repz
mov
and
lahf
fstpl
mov
jns
cli
mov
ret
ja
test
gs
cmpsb
adc
push
sti
ja
aad
cmp
test
adc
ds
js
mov
testb
jns
push
pop
scas
adc
aas
inc
xchg
cmpsl
mov
inc
xchg
out
inc
push
sbbb
mov
aad
mov
dec
dec
inc
movsl
cltd
sub
js
cmc
pop
hlt
lahf
shll
dec
mov
push
popa
movsb
jmp
enter
mov
add
out
loopne
or
mov
int3
jb
aam
imul
into
pop
lret
repz
std
aam
repnz
fisubrs
jg
aam
lret
fists
int
dec
shl
pop
lods
out
mov
fistps
xchg
jns
xor
out
push
add
clc
cmpsb
dec
inc
cwtl
pop
add
adc
in
xchg
pusha
sub
pop
test
into
push
loope
mov
xchg
fistpll
xor
in
push
ficoms
or
adc
inc
jmp
fwait
test
cli
dec
mov
pop
xchg
stc
lcall
pop
pop
fildl
repnz
mov
or
and
sbbb
bound
or
or
xchg
push
mov
dec
mov
es
cwtl
call
jno
and
stos
cmp
jecxz
test
je
pop
mov
adc
push
pop
loope
cmp
js
cwtl
fnstsw
pop
inc
dec
outsb
cwtl
test
xchg
jp
nop
fbstp
jl
out
pop
ret
jno
out
xchg
idivb
adc
cmpb
dec
jo
inc
jb
mov
fmuls
lret
jno
push
push
adc
xchg
mov
sub
loopne
or
mov
mov
shl
pop
mov
jb
or
or
add
flds
das
popa
mov
das
inc
adcb
and
aam
add
inc
xchg
and
and
in
jbe
dec
xor
int
loop
cli
dec
popa
mov
adc
dec
popf
pop
jp
mov
sahf
jl
hlt
mov
jb,pt
nop
bound
lods
fwait
mov
dec
xchg
stos
push
mov
or
lds
fcompl
test
mov
xchg
inc
cmp
or
cwtl
mov
jae
sub
pop
insl
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
jmp
jb
jecxz
sub
push
xchg
das
mov
jb
lock
cmp
insb
jno
lcall
adc
sub
mulb
stc
aam
and
test
sahf
mov
jno
pop
dec
dec
mov
sbb
lahf
pop
and
fiaddl
iret
fnstenv
push
add
ss
sbb
in
gs
push
mov
js
mov
push
cs
and
jg
push
fs
or
addl
jmp
jg
sti
fwait
nop
jnp
jb
mov
pop
and
mov
ljmp
push
adc
cmp
xchg
fistl
xlat
xor
into
scas
lcall
jno
stc
jmp
xchg
std
mov
adc
lret
movsb
xchg
icebp
rol
jns
sbb
mov
sbb
cmpsb
sub
sub
nop
cwtl
pop
dec
add
xor
mov
dec
jecxz
jne
repz
cltd
pop
into
test
ds
cltd
cmpsl
cmpsl
lods
pop
pop
dec
push
jmp
inc
xchg
adc
cmp
pop
scas
arpl
js
clc
or
or
push
clc
aas
pop
push
test
mov
mov
fidivrs
mov
nop
ret
mov
fadds
test
mov
cwtl
mov
aad
imul
sbb
lods
dec
xchg
stc
fcoms
out
sub
lock
and
pop
add
dec
fdivr
test
pusha
xlat
fldenv
fisubrl
sub
fcompl
in
flds
sti
push
adc
lcall
scas
or
mov
xchg
inc
rclb
loope
or
xor
stos
jae
mov
inc
ret
and
das
xor
sub
xorb
in
xchg
cli
subb
les
in
outsb
jle
fists
or
mov
jb
lods
mov
sarb
insb
adc
mov
pushf
adc
jle
js
stos
std
dec
in
jo
aaa
sbb
addr16
and
cmp
icebp
lods
in
dec
shll
mov
lock
std
out
inc
xor
xor
movsb
pop
das
push
jge
pop
push
jg
lea
and
out
daa
sbb
jne
shrl
xorl
jg
jb
orl
cmp
cmp
adcb
neg
pop
dec
sarl
aas
jle
mov
pop
pushf
push
mov
shrb
in
mov
in
ja
outsb
je
insl
stos
mov
test
jg
cmpsb
xor
dec
mov
imul
cmp
test
dec
loopne
sti
out
mov
shlb
hlt
mov
subl
lahf
jp
jl
lret
daa
int
sbb
insl
ss
add
pushf
and
mov
test
int
dec
xchg
clc
sub
scas
mov
add
and
fisubrs
mov
mov
sub
xchg
sbb
ret
jl
cmpsl
out
bswap
jae
adc
addl
mov
out
or
cwtl
jbe
add
mov
cwtl
cmpsl
cmp
pop
addl
ficoms
lret
jb
jns
xchg
mov
ljmp
int3
pop
icebp
pop
repz
xchg
xor
cli
jns
xor
push
fildl
sub
stos
cltd
dec
and
sahf
pop
stos
sbb
jge
cmp
test
loope
mov
cmp
dec
stos
mov
stos
add
or
cmp
xor
pop
pop
adc
mov
inc
shll
jp
movsb
xchg
int3
idivl
iret
dec
pop
add
jge
lock
jb
adc
mov
pop
fs
lods
aaa
jne
xchg
shl
inc
xor
mov
stos
in
add
jne
adc
sbb
and
aad
andl
mov
sub
stos
jbe
out
push
ds
inc
jle
ss
add
xor
inc
fsub
mov
int3
shlb
mov
xor
jle
pop
jle
xor
xor
or
ret
and
rcr
das
jecxz
xor
mov
inc
inc
popf
jle
lcall
je
add
add
and
ja
popa
add
push
cmovge
daa
mov
mov
ficoml
mov
push
add
xchg
push
fdivs
iret
icebp
jns
pop
iret
mov
or
mov
or
aaa
adc
out
push
jl
pop
inc
clc
and
aas
and
or
push
bswap
syscall
movsb
js
cmp
xchg
ss
loopne
add
jb
das
bound
xchg
dec
mov
xchg
lock
pusha
sbb
es
sbb
jae
fldl
pmulhrw
mov
jl
idivl
dec
or
adc
pop
mov
rcll
shll
jbe
adc
lods
xchg
cli
sub
in
mov
mov
shll
mov
scas
cli
dec
punpcklbw
repz
cmc
iret
inc
paddd
and
or
mov
or
shl
mov
mov
jmp
arpl
and
stos
sub
scas
xchg
push
or
cmp
mov
iret
movsb
sbb
xor
cmp
push
enter
sbb
mov
mov
js
test
xchg
mov
imul
mov
jnp
jne
dec
mov
lods
into
lret
pop
lret
inc
inc
movl
imul
mov
mov
jp
stos
loope
pop
inc
fsubrl
es
les
pop
mov
mov
cmp
addr16
add
cmp
bound
pop
sbb
imul
xchg
test
out
out
xchg
mov
sahf
out
push
loop
outsb
push
add
aaa
sbb
popa
ja
test
bound
adc
or
push
xchg
jne
push
call
dec
xchg
iret
js
push
repz
push
mov
loop
push
int
je
jb
roll
and
or
stos
loopne
clc
lods
aaa
jl
pop
adc
sub
mov
loopne
rclb
hlt
xor
mov
pop
jmp
gs
aam
adc
dec
inc
pushf
pusha
into
pop
jb
cmp
xchg
push
shl
lcall
lods
fucomp
push
pop
pop
sbb
cmc
push
push
xchg
aam
roll
xchg
xor
in
dec
rcrl
aaa
sbb
outsl
out
fildll
in
xor
bound
inc
fiadds
hlt
add
leave
into
out
or
xor
int3
xlat
fs
mov
xchg
xor
xor
scas
mov
inc
flds
les
cmp
mov
sub
pop
xchg
xchg
mov
mov
push
jo
pop
dec
add
or
sbbl
out
popf
jge
sub
pop
push
inc
sar
pop
loop
mov
and
sub
shll
hlt
dec
in
add
test
cmpsb
dec
xor
jns
shlb
add
pop
mov
cmpsl
dec
add
rorb
fiaddl
sbb
inc
subl
cmpxchg
fisubrs
movsl
pop
int
cld
add
pop
decl
mov
inc
test
inc
stos
adc
rclb
inc
cmp
test
outsb
sbb
dec
je
cmp
scas
adc
mov
push
fwait
outsl
or
imul
sub
fwait
or
cmp
sub
mov
orb
ds
push
repnz
cli
daa
sbbl
mov
cltd
cmp
cmc
sub
mov
sub
adc
popf
cmp
xchg
xchg
and
iret
pusha
add
lcall
jnp
pop
pushf
fwait
push
addb
sbb
pop
cmp
and
lock
clc
test
leave
shl
insb
ds
jns
xor
xchg
imul
pop
mov
xlat
jae
out
adcb
sub
push
insl
test
mov
imul
ds
cli
call
mov
ja
ror
addr16
sub
icebp
fs
jg
xchg
jmp
adc
push
pop
jg
add
es
sbbl
jge
mov
dec
jae
cmp
pop
jle
fs
mov
pop
cld
cmp
mov
mov
cmp
push
inc
in
lds
xor
push
ret
ret
sub
push
sub
mov
inc
sbb
cwtl
int
sti
repz
mov
and
or
and
add
jecxz
call
add
mov
add
push
in
sbb
outsb
add
dec
inc
hlt
stos
xchg
dec
adc
add
shl
or
ds
cmp
sbb
icebp
mov
inc
ret
nop
inc
sahf
in
mov
mov
mov
dec
inc
nop
lds
fisttpll
out
out
adc
lods
insb
repnz
xchg
fildll
add
fistl
inc
cwtl
data16
cli
sub
add
xchg
pop
xchg
and
inc
adc
aas
test
adc
clc
mov
adc
fmull
test
mov
mov
fcompl
jge
sahf
lcall
sub
xor
jbe
lret
lahf
dec
shll
jmp
mov
call
mov
cmp
ret
nop
and
or
cs
inc
dec
xchg
psadbw
stos
arpl
pop
fwait
add
das
scas
fsubrp
div
test
test
pop
rcl
mov
jne
sbb
mov
in
push
and
inc
pop
imul
test
clc
mov
cmp
ret
shll
jbe
jae
push
gs
and
aas
pop
push
jns
gs
xor
cmp
cmc
add
sub
and
push
inc
stos
fidivl
mov
xor
js
out
rorb
and
dec
push
push
daa
in
push
les
pusha
ss
jg
add
push
movsb
xchg
sub
imul
divb
add
mov
xor
mov
arpl
loop
and
push
push
add
pop
aas
aam
loop
jmp
mov
xor
xor
xor
or
je
shlb
push
cmp
ljmp
out
mov
cmp
mov
push
test
mov
sub
cs
stc
test
pop
pop
xchg
ja
call
cmp
iret
pop
nop
imul
shll
or
movsb
mov
cmp
mov
adc
cwtl
or
and
inc
jne
popl
insl
cmpsb
push
shrl
pushf
aaa
pop
add
es
stos
icebp
or
xchg
jle
add
js
in
push
rcl
push
lds
inc
ljmp
ss
push
fimull
cmp
jle
sbb
and
sbb
adc
mov
cmp
in
nop
push
xor
ljmp
mov
sbb
pop
jmp
loopne
test
lret
and
sub
loopne
xor
mov
mov
cmpsb
iret
mov
hlt
cmp
or
mov
test
jp
lret
lret
int3
ljmp
sub
imul
jl
aad
push
fstpl
hlt
dec
jno
pushf
or
insb
or
sbb
fidivl
popf
pop
scas
mov
lods
aaa
jno
pop
out
mov
adc
scas
or
repnz
mov
sub
jge
es
int3
fists
iretw
insb
inc
xchg
movsb
incb
shll
faddl
xchg
dec
fildl
cltd
inc
push
and
adc
mov
imul
es
fsubr
in
insl
and
sbb
bound
lods
nop
int3
sbb
test
sti
pop
pop
gs
add
push
push
sub
shrb
repz
pop
sub
jns
dec
ds
mov
pop
push
mov
mov
push
and
pop
sbb
ucomiss
pop
js
xchg
cmpsl
xor
rolb
ljmp
scas
mov
mov
in
sub
fiadds
enter
imul
aaa
mov
pop
lahf
test
xor
mov
adc
lods
loope
mov
popa
and
mov
out
cld
imul
mov
mov
inc
adc
shlb
mov
lock
add
sub
rolb
inc
and
push
inc
call
push
loopne
jo
cmc
xlat
dec
add
std
jo
sti
mov
jns
pushf
cld
push
or
stos
mov
and
inc
mov
iret
add
sub
cltd
psrlq
add
stos
sti
pop
ds
or
sti
js
in
imul
lods
mov
dec
jnp
ret
push
sub
test
jmp
mov
cmp
shlb
mov
add
in
mov
mov
roll
fisubrs
fisttpl
mov
adc
or
fs
fsub
mov
popl
xlat
push
jns
jne
ffree
sysret
jmp
lret
shlb
into
cmp
adc
enter
jbe
gs
jns
popf
xor
enter
movsl
cmp
stos
lcall
iret
xor
ret
scas
cmpsb
mov
push
shl
pusha
mov
outsl
dec
fsubr
std
jle
fisttpll
lret
push
mov
push
xchg
sub
test
fwait
out
mov
cmpsl
jnp
or
out
xchg
fwait
adc
xchg
mov
xlat
sub
and
ds
mov
iret
mov
pop
jl
push
loope
cltd
mov
ljmp
outsl
ljmp
movsl
movsl
inc
sub
subl
mov
xchg
push
push
andb
cltd
bound
stos
fstpl
mov
sbb
mov
hlt
ret
pop
int
dec
push
add
dec
adc
incb
add
xor
into
mov
mov
mov
mov
fmul
xlat
xchg
cmpb
dec
adc
mov
inc
jno
ja
movl
push
mov
cli
sti
data16
mov
iret
das
shrb
sbb
add
roll
push
sbb
dec
lods
je
out
mov
cwtl
pushf
lods
sub
test
xchg
xchg
mov
in
cmp
add
pop
sub
test
xor
xchg
mov
pop
fwait
lods
cld
mov
jmp
add
adc
cwtl
mov
test
test
sbb
call
mov
adc
sbb
das
xchg
push
mov
in
xor
pop
enter
gs
popf
sub
mov
adc
mov
jae
and
pop
push
push
pop
scas
ljmp
divb
mov
add
pusha
mov
fbstp
cmpsb
cmp
inc
lret
flds
or
add
cmp
mov
test
enter
je
sbb
and
cmp
jbe
andb
mov
and
pop
xchg
and
mov
shlb
mov
mov
mov
xor
jmp
movsb
outsl
test
movsb
ss
sahf
cmp
add
test
iret
or
cmp
add
dec
je
adc
jnp
pop
pop
into
adc
jne
jb
cwtl
loop
nop
sub
adc
add
xchg
into
fisttps
lock
mov
into
fnstsw
lahf
scas
rcll
cmp
and
fildll
fs
in
outsl
stos
sbb
push
dec
lds
push
fcmovne
out
jle
inc
sub
hlt
lods
sbb
pop
imulb
out
mov
es
inc
mov
andb
dec
inc
lea
sbb
lret
mov
mov
int
mov
hlt
lea
loop
pop
pop
lahf
popf
sbb
mov
add
mov
push
dec
shlb
repz
dec
nop
aad
xchg
lret
and
das
add
popf
jmp
movsl
rorl
icebp
xchg
push
sub
bound
shlb
adc
gs
mov
imul
fdivr
mov
add
cmp
cmp
and
mov
mov
int
aam
jno
push
mov
jg
stos
pushf
push
inc
sub
cwtl
mov
inc
test
popa
mov
or
pop
sub
push
andl
or
pop
aad
ss
jns
dec
lcall
cmc
dec
pop
cmp
outsb
lahf
push
jle
cmp
das
ds
inc
mov
sbb
jo
xor
out
shlb
arpl
out
pop
inc
dec
xchg
das
mov
ljmp
sbb
add
fidivs
ljmp
leave
gs
push
xor
mov
or
stos
cmp
xor
mov
or
adc
adc
and
scas
fiaddl
push
cmp
and
push
pushf
or
js
push
cmp
sbb
cld
mov
mov
jno
xor
insl
sub
dec
jecxz
das
and
loopne
aad
add
jo
hlt
hlt
pop
mov
jno
and
and
push
pop
jge
xchg
addl
xor
mov
xchg
repnz
sahf
dec
sbb
inc
xor
sbb
into
movsl
dec
mov
test
adc
xor
nop
xchg
clc
lcall
rol
jp
mov
push
aaa
sub
pop
cmp
mov
scas
outsl
add
stos
add
sbb
test
xchg
mov
mov
mov
aad
sub
mov
cmpl
int
pop
fmuls
mov
or
push
das
aas
js
repz
js
jnp
movsl
outsb
jmp
pop
add
cltd
decl
adc
cmp
lods
add
sbb
fnstenv
in
mov
mov
jl
mov
popl
clc
je
rorb
lods
push
stc
dec
jnp
xor
ds
loope
imul
lds
ss
pusha
fdivr
mov
dec
jbe
jae
push
mov
ljmp
mov
hlt
dec
mov
mov
mov
incl
cmp
cmpsb
addb
dec
inc
cmc
fs
pop
aad
daa
xchg
rcrl
sub
cwtl
outsb
fsub
xchg
xchg
push
and
fdivr
mov
or
fisttps
xchg
loop
in
fiadds
cmp
xor
mov
rolb
stos
mov
mov
push
lret
mov
pusha
mov
sbb
jae
gs
popf
icebp
int3
lret
jo,pn
das
hlt
ss
xor
ret
jno
sbb
stc
dec
xor
inc
in
xor
or
dec
sbb
sahf
hlt
xchg
sbb
or
test
popf
jo
pushf
sahf
fistps
test
insb
or
sbbl
loope
enter
cwtl
cmp
int3
lds
push
jl
sarl
xor
sub
sub
imul
outsl
jl
xor
aam
fdivrs
mov
fwait
or
aad
cmp
push
hlt
xor
mov
fcoms
cmp
mov
push
mov
clc
xchg
and
clc
mull
inc
aam
and
lods
repz
jne
adc
or
inc
mov
andb
filds
push
inc
icebp
mov
mov
pop
into
or
xchg
fdivrl
pop
out
jae
push
bound
jbe
adc
lcall
andb
cmpsb
mov
gs
sub
in
movsl
mov
test
mov
dec
dec
xchg
push
push
xchg
pop
dec
adc
add
in
loop
fcmovnu
insb
mov
dec
cmp
or
jo
xorb
loop
ret
mov
cltd
push
ret
and
sub
mov
mov
dec
fldenv
mov
inc
sbb
pop
test
dec
jge
pop
cld
push
inc
nop
test
xor
push
ret
push
rcr
insb
add
and
pusha
cltd
add
dec
ficomps
jo,pn
in
das
sub
add
cmp
in
sub
inc
sbb
inc
xor
cmp
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
jmp
scas
rcrb
and
ja
lods
scas
int3
lock
stc
mov
push
push
fcompl
push
jle
or
mov
mov
mov
mov
sahf
xchg
lea
into
mov
xor
imul
xchg
scas
dec
add
jnp
leave
sbb
sahf
add
xor
aaa
xchg
mov
cmp
cmpsb
sti
sbb
fs
sbb
sbb
les
mov
fwait
mov
adc
mov
popa
fistl
add
dec
xlat
jmp
dec
mov
mov
inc
lcall
sti
out
cltd
mov
mov
mov
xchg
fs
fidivrs
into
pop
lret
out
iret
outsl
pop
lods
mov
fadds
jmp
xor
mov
push
mov
mov
cmc
pop
int3
mov
mov
repz
setp
pop
fwait
mov
push
mov
cld
mov
addr16
push
cmp
pop
sbb
push
add
jmp
pop
sbb
add
push
testb
cld
fcomps
cltd
mov
mov
xor
pop
pop
fwait
xchg
rcr
sub
mov
in
daa
jne
push
cmp
aas
push
out
addr16
movsb
inc
jg
push
into
lret
negl
inc
fnstsw
cli
jbe
xchg
daa
out
aas
loope
repz
dec
dec
mov
cli
jno
and
jns
sbb
add
sbb
nop
mov
insl
hlt
and
dec
mov
repz
pop
mov
or
xchg
push
bound
loopne
pop
je
mov
mov
jl
cs
loop
push
arpl
mov
es
popa
adc
mov
inc
jae
aas
push
pop
mov
int3
add
cmc
or
sbb
lods
xchg
dec
insb
enter
test
jo
dec
imulb
adc
pop
or
jl
call
inc
xor
in
out
fsubr
js
in
pushf
xor
stos
lock
jbe
loopne
pushf
push
mov
xchg
dec
xchg
xor
sbb
pusha
in
push
cmp
jns
bound
out
pop
ds
adc
arpl
dec
fistps
pushf
pop
mov
push
rol
enter
aaa
int3
scas
cmp
xchg
popf
data16
gs
mov
inc
or
add
dec
xor
dec
imul
sub
jo
xor
sbb
push
loop
mov
adcb
or
xor
nop
or
pop
and
push
jns
repz
jne
inc
mov
dec
int
cmp
stos
pop
mov
jbe
ds
negb
add
jno
cmp
jmp
mov
add
int3
push
xlat
inc
mov
xorb
jae
xlat
lods
int
dec
data16
bsf
mov
jecxz
fisttpl
lock
ret
ror
mov
xchg
repnz
jnp
cmp
lea
sub
enter
pusha
ret
and
loopne
ret
cltd
fisttpl
shlb
in
push
call
add
jno
push
lahf
rclb
xchg
lods
and
and
mov
repnz
jae
cltd
push
daa
jne
jae
pusha
jno
jbe
add
popf
push
ds
cmpsl
dec
stos
jb
mov
adc
push
lret
jp
aam
mov
popl
adc
aaa
push
out
xor
gs
mov
lea
std
lret
fisttpl
sbbb
nop
scas
icebp
out
scas
jle
lret
stos
out
stos
jl
add
mov
ljmp
cwtl
mov
jle
sub
out
jns
lcall
add
cmc
test
push
stos
pop
mov
dec
fstl
dec
aad
test
imul
addr16
xchg
cltd
and
pop
push
je
or
fcoms
js
lahf
jae
pop
pop
int3
pop
cmpsl
es
fxch
xchg
es
pop
into
mov
ficomps
cmp
fisttpll
test
sub
push
mov
test
cld
mov
int
and
out
addr16
rorl
out
mov
fstps
out
jne
sbb
mov
out
repz
add
mov
sub
insb
and
and
addr16
adc
and
cmpsb
lret
dec
repnz
out
jbe
insb
cwtl
fstpt
cmp
aaa
in
imul
adc
jno
and
bound
mov
ficoml
lret
scas
push
mov
in
xchg
sub
mov
bound
pop
mov
xchg
shr
lea
stos
leave
fcmove
ret
sub
addr16
mov
mov
dec
xchg
fwait
mov
mov
lret
xchg
mov
push
push
outsb
jne
pusha
inc
stos
je
and
dec
and
int
cltd
lcall
jno
fstl
sahf
and
aad
xlat
movsl
inc
xchg
xor
mov
jmp
inc
mov
inc
inc
nop
scas
shl
test
mov
push
cmp
repz
sub
stos
jecxz
xchg
sahf
clc
into
push
lret
or
mov
iret
jb
popa
pop
jno
movsl
call
fidivrs
out
outsb
jmp
mov
fwait
roll
pusha
shrl
push
outsb
sub
mov
mov
inc
jo
xlat
lods
dec
mov
scas
in
test
and
bound
mov
cmpsb
cmp
cmc
imul
pop
pop
scas
jb
dec
fcmovu
ja
pop
sub
clc
rcll
dec
sub
ds
mov
nop
ja
jne
cmp
jecxz
outsb
inc
cmp
mov
xchg
jge
add
hlt
fwait
and
xor
pop
add
and
icebp
dec
lret
xchg
or
xchg
aam
pop
pop
popa
inc
and
sbb
mov
maskmovq
testl
or
fwait
cmp
sti
and
sbb
stos
dec
add
push
cmp
fcoms
andl
or
mov
repz
pop
cmp
cmp
inc
push
andl
push
movsl
cmp
scas
insl
jmp
div
inc
mov
push
mov
jae
jge
je
lret
repz
mov
jnp
add
sbb
adc
lea
mov
jns
jno
out
adc
lret
push
je
jge
lea
add
and
sub
mov
out
sbb
sar
or
add
jmp
mov
or
std
aad
pop
test
dec
push
daa
push
xchg
stos
sub
dec
push
mov
ds
jo
loop
and
adc
sub
push
hlt
rclb
aas
ss
or
pop
jg
fisttps
nop
std
subb
scas
xchg
ret
cmp
push
inc
fsubl
scas
pop
cmp
lea
dec
cmp
ret
mov
jp
cmp
aas
xlat
test
into
sarl
lods
lahf
lds
xor
out
and
outsb
hlt
mov
inc
nop
imul
lods
push
outsl
and
cmpsl
cmp
insl
sub
ficoml
push
jp
dec
repz
movsb
lret
dec
adc
add
sahf
inc
adc
mov
movsb
out
insb
jne
mov
dec
loop
insb
jbe
inc
jo
loope
mov
fcompl
push
das
cmp
icebp
imul
test
mov
push
sbb
and
and
lods
cmp
loopne
jns
roll
fucomp
xor
fs
inc
xchg
ret
mov
add
mov
fsubrl
clc
xor
push
fndisi(8087
inc
arpl
xchg
cmp
icebp
xor
adc
je
jne
lock
sub
mov
gs
push
loopne
ljmp
mov
mov
cmp
add
xchg
sbb
or
in
loope
lods
xchg
adc
cli
fdivl
mov
mov
cmp
adc
repz
in
add
adc
xchg
push
dec
sub
fwait
std
cs
xchg
loopne
sbb
clc
sbb
add
cmpsb
xor
sub
testl
mov
pop
arpl
pusha
test
adc
add
pop
scas
jnp
push
jge
push
scas
xchg
iret
mov
in
lock
push
andl
or
ret
es
data16
fisubs
mov
mov
sub
cld
mov
out
sbbl
divb
sub
mov
adc
adc
sub
adc
pop
cmc
lods
add
xchg
push
sbb
mov
or
fwait
addr16
mov
divl
mov
cmp
dec
pop
add
push
outsl
adc
mov
cmc
and
xor
mov
pop
mov
les
inc
cmpsl
jbe
cmovs
push
cmp
jno
aaa
icebp
pop
sahf
push
outsb
xor
push
fs
or
jb
or
cmp
add
bound
mov
pop
add
pop
push
imul
lahf
mov
dec
mulb
popa
ret
xor
out
outsl
sbb
sbb
push
js
or
repnz
mov
das
pop
inc
cmp
dec
imul
mov
sbb
xor
pop
push
inc
inc
mov
dec
inc
repnz
xchg
aad
add
sbb
adc
dec
add
mov
adc
jae
mov
sbb
cs
out
les
adc
dec
mov
mov
rol
sub
push
jecxz
xchg
icebp
icebp
dec
pop
pop
ret
fwait
pop
add
mov
popf
sbb
cld
jnp
ret
stc
sub
fcompl
sbb
dec
clc
push
out
and
xchg
in
push
in
or
mov
cwtl
jecxz
adc
sti
scas
insl
mov
aas
push
jnp
sub
or
mov
pusha
cmp
in
sbb
stc
push
movsb
ret
mov
pop
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
jmp
and
mov
loopne
lods
scas
sbb
mov
push
cmp
in
fmul
mov
mov
stos
sbb
cmp
xchg
mov
pop
iret
out
clc
out
aaa
cmc
push
insl
adc
lahf
inc
sub
sub
into
ljmp
call
test
scas
arpl
fstpl
repnz
cwtl
aad
mov
adc
shlb
int
cld
sbb
js
push
xchg
pop
cltd
popf
xor
fwait
ja
jl
aad
push
sub
push
cmp
jl
mov
mov
ret
mov
fimull
mov
push
into
sub
push
cltd
jle
and
scas
sar
fs
mov
add
pop
stc
aad
dec
js
pop
pusha
icebp
inc
adc
daa
stc
in
out
movsb
mov
out
insb
sahf
ja
or
imulb
clc
and
push
orb
push
loopne
scas
mov
sbb
fstps
loopne
lods
cs
mov
jle
aas
cs
push
sbb
fnsave
mov
mov
push
lahf
fisubs
xor
lcall
cmpsb
int
lahf
ret
movsl
or
rcl
nop
pop
fcoml
cltd
inc
pop
and
jp
add
xlat
jb
mov
inc
js
jg
rolb
or
ljmp
dec
loop
add
rcrb
loop
inc
test
mov
clc
and
pop
jno
push
xor
call
movsl
xor
pusha
xlat
adc
jns
jae
adc
nop
aad
repz
pop
sub
into
or
add
xchg
movsb
pop
adc
out
sahf
mov
adc
fmull
push
pushf
pop
adc
das
pop
mov
sub
ret
and
add
mov
dec
pop
cmpsl
sub
dec
popl
popf
movsl
or
add
popa
sub
test
dec
push
mov
sub
sub
outsl
or
jns
fstl
pushf
jmp
aam
inc
xlat
bound
jp
ds
push
bound
scas
adc
inc
xchg
icebp
jb
jecxz
scas
push
and
cs
mov
mov
cmp
mov
inc
lock
lret
mov
dec
fisttpll
or
cs
and
gs
lahf
xor
inc
ds
js
sarl
data16
or
out
bswap
cmp
pop
cmpsb
sahf
ja
fildl
dec
int3
mov
cli
pop
fsts
xchg
dec
cmpsl
cmp
jecxz
stc
loop
add
cs
lea
sbb
mov
lcall
or
sti
gs
ret
mov
sahf
mov
cltd
jb
lret
call
lods
loopne
aam
rcll
xor
clc
adc
push
scas
add
or
jno
adc
sub
mov
mov
mov
inc
jle
add
adc
cmp
dec
lds
fwait
mov
fdivrs
ret
arpl
shlb
inc
jne
rcrl
stos
movl
divb
add
sahf
out
scas
popa
cmp
inc
cmp
xor
mov
sbb
mov
mov
inc
ret
push
xchg
sub
in
sub
sbb
mov
cmp
lret
js
xchg
mov
rolb
jbe
in
into
ret
pop
pop
test
xlat
xchg
clc
loope
xchg
xchg
or
dec
stos
mov
nop
sbb
clc
insb
mov
aam
push
sub
xchg
add
je
in
scas
popf
out
and
bound
jmp
out
aam
xchg
add
cmpsl
cmp
adc
sahf
inc
push
inc
xor
or
arpl
lods
lret
hlt
cmpsl
push
loop
clc
cltd
inc
pop
sub
adcl
jmp
mov
mov
inc
movsb
xor
imul
or
cmc
rolb
les
mov
cmp
ja
sbb
scas
mov
mov
fisttpl
cwtl
mov
and
jns
in
test
sbb
sbb
xor
ficoms
mov
pop
inc
fists
add
add
sub
sub
adc
jb
es
decb
cltd
jns
adc
adc
mov
sub
repz
mov
dec
loope
nop
add
pop
jae
iret
outsb
dec
xchg
push
push
scas
imul
xchg
xor
xchg
adc
cmp
fcomp
sbb
inc
mov
imul
or
cwtl
bound
in
out
or
mov
xor
lds
call
mov
and
iret
jge
dec
mov
push
sti
xchg
add
jne
cwtl
es
push
jne
out
mov
cmc
mov
ret
enter
push
insb
xchg
lods
and
adc
ret
ds
jge
xchg
insl
adc
push
jl
mov
push
or
cwtl
cltd
sti
in
and
xchg
je
adc
add
mov
add
sub
pusha
clc
fistps
shlb
rol
push
mov
mov
xor
mov
mov
jmp
or
jns
stc
repz
jp
or
cmp
popf
dec
sub
sub
ret
lds
pop
test
addr16
popa
lods
loope
mov
in
mov
lahf
addr16
mov
dec
pop
jp
fnstenv
jg
mov
js
je
mov
aaa
gs
push
xchg
jge
das
js
mov
mov
hlt
cli
ja
pop
adc
rorb
and
rcl
lret
pop
es
xchg
pop
ds
jae
sub
mov
loop
cmp
xor
nop
xchg
xchg
mov
dec
adc
mov
es
repz
dec
les
xor
and
push
lds
xor
cmc
pop
jg
inc
test
adc
inc
mov
fucomip
clc
rorb
adc
push
jge
sbb
js
in
mov
shlb
mov
push
inc
je
or
push
test
mov
adc
lods
sub
or
cmpsb
mov
xchg
aaa
push
les
inc
mov
mov
jmp
jne
mov
cmp
xchg
popf
outsb
add
cmc
iret
pushl
push
out
sbb
jno
sub
dec
xor
xchg
into
adc
mov
fs
adc
out
out
cmpsb
pop
mov
ret
lret
mov
scas
imul
sub
mov
and
popf
test
sarl
mov
jnp
popf
cmc
ret
push
orb
into
sub
and
mov
repz
data16
mov
testb
popa
ja
push
sbb
aam
push
push
xor
std
iret
mov
in
push
or
inc
mov
mov
and
adc
scas
cwtl
inc
pop
xor
xchg
stos
push
das
add
stc
je
in
rcll
notl
or
cmp
inc
or
ja
stc
mov
gs
mov
mov
ficomps
push
xlat
nop
test
mov
push
shrl
mov
push
icebp
loope
adc
movsl
hlt
dec
push
mov
push
testb
loopne
lret
jmp
inc
pusha
inc
dec
add
cmp
pop
jns
and
or
mov
pop
xor
sub
pop
xor
pop
push
mov
stos
xchg
enter
push
rorb
bound
gs
insl
in
lock
cmp
iret
ljmp
mov
mov
fdivrs
adc
pop
pop
sub
enter
popf
xchg
pop
pop
pushf
cmpb
sbb
out
mov
mov
mov
jb
cli
scas
mov
ljmp
mov
sbb
shrb
jns
fwait
ret
pop
sub
pop
inc
sti
sbb
xchg
jns
mov
xor
pusha
cmpsb
mov
out
out
inc
lahf
jg
out
sub
mov
arpl
leave
scas
fwait
push
and
mov
mov
sarb
mov
dec
lahf
cld
jmp
dec
or
stos
mov
sbb
adc
or
out
pop
and
in
dec
xorl
or
pushf
je
ss
push
flds
push
jl
mov
mov
dec
mov
pop
cli
fld
and
cwtl
xchg
fs
fcom
cmp
inc
enter
cmp
pop
xchg
pushf
cld
sahf
sub
rcrl
xor
add
add
jae
xchg
add
testb
outsl
orl
push
rclb
lret
cltd
add
mov
loopne
mov
shl
nop
dec
inc
xchg
cmpsl
test
lahf
mov
xor
dec
jo
pop
push
adc
shll
rcll
xor
pop
aad
stc
or
mov
ds
inc
test
cmp
xor
add
lret
and
jle
jae
sbb
andl
pop
mov
inc
ret
test
cmp
lods
inc
pop
add
mov
mov
xlat
imul
inc
cmp
cmpsb
cmp
or
adc
push
or
jbe
push
out
add
push
mov
mov
das
pop
xor
pop
jbe
or
push
in
mov
loope
push
aam
jecxz
aaa
jmp
push
push
push
ds
ds
jmp
shlb
stos
dec
jp
dec
test
std
cmp
sbb
mov
stc
dec
push
loope
pop
cmp
ds
lock
movsl
outsl
sub
sub
add
push
sbb
lds
or
push
shll
pop
sbb
sub
adc
mov
fildll
loope
add
push
pop
xchg
mov
dec
int
jne
std
popa
sub
xor
shll
push
jmp
and
sbbl
fmul
push
imul
psubusw
and
cmpsl
addr16
xor
cmp
pop
fnstcw
enter
push
mov
imul
adc
jmp
mov
or
mov
mov
push
pushl
jmp
aaa
or
js
stc
sub
pop
push
mov
mov
or
cmp
lock
xchg
clc
cld
dec
jne
or
mov
mull
mov
inc
mov
faddl
ds
decl
push
inc
aaa
xchg
into
ja
adc
mov
lds
mov
pop
stc
es
lods
hlt
into
mov
movsl
int3
adc
mov
sub
and
add
lea
arpl
arpl
aam
adc
mov
out
ja
mov
pusha
addl
in
dec
aad
jg
hlt
xchg
pop
sub
sbbb
sbb
orl
rcrb
fistpl
sub
enter
ds
push
lahf
pop
pop
dec
hlt
or
repz
mov
push
mov
cs
das
or
lods
and
dec
or
or
push
iret
adc
sbb
push
pop
nop
mov
std
test
hlt
mov
iret
jb
xchg
loope
xchg
mov
jge
xor
push
xchg
rorl
sbb
dec
add
cmp
xchg
cld
jmp
rcrl
pop
cwtl
inc
leave
loopne
fisttpll
xchg
subl
rorb
xchg
movsb
jg
jp
cwtl
rclb
iret
aam
sbb
xchg
mov
scas
xor
jo
push
js
jne
pop
stos
jecxz
xor
push
stos
mov
xchg
popf
fdiv
in
fldt
xchg
outsl
jge
bound
dec
mov
sub
bound
lcall
cmp
ret
jns
jl
movsb
jg
cmp
test
mov
scas
mov
pushf
mov
shrl
outsl
loopne
mov
repnz
les
test
push
push
xor
adc
add
xchg
cmp
fsub
sub
xor
sub
dec
sahf
outsb
cmp
xchg
iret
in
cwtl
xchg
mov
sub
adc
idivb
add
lret
leave
adc
cltd
mov
mov
jmp
dec
push
dec
push
dec
dec
ja
inc
mov
mov
xchg
dec
stos
xchg
inc
adc
jno
cmp
arpl
out
adc
mov
jae
pop
xchg
addr16
popa
mov
sahf
sbb
mov
jmp
push
inc
sub
pop
push
jbe
iret
mov
imul
ljmp
push
das
adcl
cmp
jb
xchg
xor
adc
imul
jo
mull
sbb
inc
xchg
xor
in
or
ffreep
or
movsb
arpl
scas
lret
rorb
dec
in
mov
cmp
int3
mov
adc
or
enter
dec
pop
mov
popf
sub
lret
loopne
jmp
sbb
adc
adc
dec
popf
jl
dec
clc
lock
push
movsb
sbb
inc
loopne
aad
and
pop
mov
sub
xor
inc
arpl
idivl
es
ljmp
and
lcall
inc
mov
mov
mov
cwtl
fcomps
xchg
iret
and
mov
pushf
in
lods
call
aam
or
add
dec
push
or
inc
mov
mov
jmp
jmp
sbb
pop
mov
sub
inc
and
add
xchg
cli
xchg
add
cmp
mov
mov
dec
inc
push
test
filds
cmp
xchg
cmpsl
dec
pop
rorl
gs
das
xchg
mov
or
mov
pop
int3
add
sbbl
dec
xor
mov
lds
fwait
push
fs
mov
or
popa
add
inc
jae
xchg
hlt
xor
ds
out
adc
adc
and
lds
adc
sub
xchg
or
xor
in
imul
cld
xchg
push
pop
pusha
mov
das
test
cli
enter
sub
leave
gs
add
pop
inc
jnp
loop
outsl
stos
bnd
xchg
test
shll
popa
mov
inc
jno
push
cmp
xchg
jnp
xchg
imul
adc
fbld
in
int3
adc
sub
fnstsw
insb
das
decb
pop
pop
sub
lea
xchg
gs
dec
cli
or
jns
jp
ja
dec
das
dec
xor
call
loop
jle
mov
pop
je
scas
add
popa
pusha
adc
add
stc
loope
popf
movsl
pop
push
movsl
or
in
lahf
xchg
out
adc
shlb
scas
lret
imul
test
sbb
or
jp
jnp
outsl
xchg
ds
push
popf
in
cltd
ljmp
or
add
pop
cltd
or
ss
inc
ror
lret
add
and
shlb
mov
push
add
push
call
mov
mov
shrd
shr
shr
xor
jmp
repnz
pop
loop
fsubrs
fimuls
push
push
mov
shll
inc
ds
xor
insl
cmp
sbb
lods
xor
dec
fistps
push
adc
mov
xor
cmpsb
pop
lret
sti
sub
mov
or
mov
ljmp
das
jbe
scas
push
dec
loopne
dec
push
xor
data16
mov
imul
bswap
subb
dec
jae
cmp
add
mov
xor
pop
inc
add
and
xlat
rcll
aam
stc
andb
mov
adc
inc
xrelease
fidivl
loop
add
std
je
mov
xlat
js
repnz
xor
jmp
mov
and
sbb
rsqrtps
add
lret
inc
loop
jns
cmp
es
ret
imul
push
jp
in
mov
outsl
lods
inc
cmpsb
ljmp
icebp
push
testb
cld
and
add
inc
sub
and
jp
add
std
popa
sub
cmp
jne
dec
clc
mov
mov
xor
add
add
insl
out
xchg
sub
cmp
test
mov
and
test
test
in
mov
push
cwtl
mov
xor
sub
mov
mov
ret
loopne
cmp
jp
and
lea
in
jmp
bound
add
pusha
or
xchg
mov
imul
and
push
mov
or
pop
push
leave
insb
repz
jecxz
rcrl
sbb
sbb
mov
aaa
xor
ret
inc
shll
scas
jecxz
inc
out
nop
cli
dec
pop
mov
xor
mov
dec
lret
jl
mov
enter
xlat
scas
lods
sub
jle
sbb
jne
jo
pop
daa
mov
push
xchg
sbb
in
lds
xchg
mov
jmp
dec
ja
rol
insl
enter
lret
aam
xchg
xor
mov
dec
xor
daa
xor
fsubrl
shlb
fistpll
mov
mov
std
jno
xchg
adc
pop
inc
fsubl
fisttpll
add
dec
sub
daa
mul
scas
aaa
jno
fdivrl
cmc
inc
movsl
pop
and
add
sbb
jb
mov
fcmovnb
push
js
fs
add
push
mov
mov
xchg
int3
mov
push
aad
jnp
add
push
fadds
clc
jb
and
push
mov
jo
aam
sub
nop
mov
repnz
orb
mov
xchg
and
push
xchg
and
xchg
cmp
pop
and
js
imul
aam
fisubrs
jmp
add
jl
xchg
mov
gs
mov
pop
and
fwait
int3
dec
lds
mov
or
mov
pop
pushf
js
stc
sub
adc
cmpsb
adc
push
mov
jge
scas
sbb
sbb
mov
out
sub
cmp
push
test
adc
and
clc
and
jmp
cs
ljmp
fnstenv
adc
iret
dec
pop
adc
cmp
and
adc
js
add
jb
out
lahf
add
jo
dec
mov
mov
ret
sahf
sub
sub
lods
mov
dec
insb
mov
test
lods
pushf
add
or
es
and
sarb
push
into
stc
mov
aaa
adc
iret
popf
movsl
sub
mov
xor
xchg
js
out
cld
in
adc
jl
sbbl
das
scas
mov
or
dec
cli
push
icebp
aas
inc
mov
scas
jo
sub
push
dec
shll
pop
pop
push
rcr
mov
rolb
call
js
xchg
cli
ficoml
jne
mov
xchg
jge
xor
loop
decl
or
add
scas
jnp
push
ja
loope
xchg
sub
loope
mov
int
or
mov
aas
outsb
mov
in
cmp
dec
out
xchg
sahf
push
xor
dec
fs
popa
sub
sub
sahf
inc
push
dec
pop
pop
outsb
or
lds
adc
test
imul
jns
insb
pop
push
jo
xchg
mov
mov
jge
lret
pusha
in
les
cmp
std
dec
dec
test
sbb
mov
cmpps
pop
cmp
test
inc
cld
sub
sub
and
and
mov
outsl
enter
xor
sbb
cmpsl
loopne
fldl2t
inc
icebp
and
mov
hlt
mov
ljmp
out
shl
dec
pxor
js
mov
cmpsb
jo
jle
xchg
popa
cmp
scas
loopne
int
out
mov
jge
fidivrl
adc
rcl
cmp
rcrb
shll
push
xor
mov
mov
jmp
in
and
dec
mov
xorb
jnp
push
cmp
add
push
sbb
sub
insl
adc
push
jb
outsb
fnstsw
sti
adc
loop
push
xchg
mov
in
xor
into
jle
adc
sbb
fistl
sbb
sahf
jle
jle
mov
rcll
daa
cwtl
outsl
jg
sbbl
bound
std
popf
xor
test
movsl
leave
fdivrl
loopne
add
or
test
in
jo
call
inc
jmp
test
xchg
inc
inc
fildll
mov
jne
xlat
shrl
in
pextrw
daa
ljmp
adc
add
inc
out
or
push
negl
push
sbbl
outsb
sub
scas
scas
or
push
fcmovnbe
shl
sti
push
packuswb
push
sbb
ja
ficomps
arpl
add
push
and
jae
inc
jg
mov
mov
aaa
sarl
enter
jo
ja
movsb
mov
jns
and
push
scas
inc
je
ret
add
je
sub
ret
popa
dec
xor
push
insl
into
sub
stos
pop
es
mov
or
iret
adcl
mov
jg
xor
pop
xchg
out
mov
mov
mov
imul
pop
jno
lea
mov
push
mov
cwtl
addr16
popf
cmp
je
imul
std
mov
cwtl
or
pop
push
cli
lods
popf
xchg
sbb
add
sbb
std
int
mov
dec
int
mov
mov
mov
mov
mov
add
xchg
ljmp
xor
leave
or
and
stc
mov
pop
int3
cmpsl
fwait
sub
lods
call
in
pop
aad
push
mov
incb
lock
mov
push
or
mov
adc
test
lret
stos
sti
mov
sar
mov
aaa
mov
cwtl
push
mov
negl
sbb
cmp
cmp
ror
jbe
fisubrl
rclb
cwtd
sbb
fneni(8087
shl
repz
sbb
fstpt
mov
scas
jp
stos
adc
ror
outsl
insl
gs
jmp
mov
loopne
inc
lea
push
jecxz
or
aas
fwait
and
aam
inc
stos
xor
jns
outsb
ret
cli
test
cmp
or
pusha
pop
mov
pop
outsl
mov
sbb
lret
push
cmp
mov
jmp
cmpsl
pop
sbb
iret
push
push
mov
or
push
pop
sub
out
in
int3
mov
cmp
xlat
mov
cmp
mov
repnz
cmp
jne
mov
rorl
jne,pt
xor
sub
cmc
pop
sub
or
or
lds
sub
dec
rcrl
or
fcompl
insb
repz
adc
out
pop
imul
mov
mov
lock
pop
xchg
fimull
in
stos
gs
lock
inc
pop
cmc
mov
cmp
insb
mov
lahf
test
and
in
cli
cld
jno
cltd
test
mov
xor
std
mov
out
inc
or
push
in
imul
cmp
or
xchg
pop
stos
lds
fsub
mov
push
fwait
cmp
jg
mov
pop
jae
mulb
shll
pop
push
inc
mov
adc
jmp
xchg
in
pop
imul
sub
inc
push
ljmp
mov
ds
mov
jo
sbb
inc
lret
aam
cli
sbb
fbstp
xor
lea
add
sbb
mov
dec
sub
inc
es
dec
xchg
adc
pop
jle
mov
lcall
cwtl
std
cmp
stos
adc
cwtl
pop
sbb
xchg
sbbb
push
in
xchg
loopne
pop
pop
rolb
mov
sub
dec
sarl
cmp
xor
sbb
mov
mov
and
mov
psrlw
int3
dec
ret
add
repnz
cmp
xor
mov
and
insb
testb
ja
mov
fisubrs
cmpsl
adc
mov
iret
and
cld
jle
cmc
lea
into
jae,pt
dec
jnp
push
jnp
lahf
sub
or
push
scas
push
mov
xchg
outsb
clc
cld
pop
inc
jb
xorl
in
sbb
fmuls
dec
outsb
and
add
fistpll
jae
xchg
mov
negb
cli
dec
out
lods
decb
mov
pushf
int3
fiaddl
mov
int
push
stc
movsb
mov
mov
out
cs
ret
sub
push
sbb
cmpsl
insl
outsb
adc
mov
leave
push
xor
cmp
jl
shll
std
cli
inc
mov
push
push
push
call
shld
shl
jmp
lods
jecxz
sarb
sub
hlt
gs
je
shlb
push
cmp
in
push
sub
or
test
insb
xor
pop
lds
movl
cmpsb
or
mov
cwtl
add
cmpsb
mov
or
dec
mov
nop
into
enter
leave
xor
jge
nop
push
push
xchg
xchg
in
leave
xchg
push
cli
movsb
and
ss
xchg
push
orl
push
cld
fs
fcoml
jns
jns
push
iret
dec
vpshlq
in
mov
or
or
or
lods
stos
loop
mov
test
inc
add
sub
mov
aam
cmp
into
push
or
xlat
xor
addr16
imulb
sub
pop
sub
in
dec
sbb
shl
lds
movsb
sub
add
fucomi
ss
jmp
adc
cli
jg
lret
dec
xchg
add
aam
lahf
push
pop
nop
imul
mov
ljmp
inc
pop
repnz
fnstenv
lods
mov
adc
mov
sbb
mov
xor
das
or
lret
mov
cmp
jo
dec
mov
mov
push
push
or
loopne
xchg
adc
push
mov
or
add
ljmp
stos
inc
xchg
sub
inc
repz
add
add
xchg
mov
out
or
call
in
mov
ret
cmovne
popf
xor
aam
outsl
pop
and
dec
cmp
outsb
xor
push
mov
sub
mov
sub
and
jle
mov
sub
and
out
inc
je
dec
sbb
std
sahf
add
repz
or
lods
push
movsl
movnti
sub
add
js
mov
ret
sbb
mov
out
sbb
lret
push
pop
pushf
inc
add
aad
pop
rclb
lret
cmc
inc
mov
es
ret
add
pop
push
int3
pusha
movl
test
push
cwtl
les
mov
pop
cmc
pop
call
loope
xchg
in
je
or
shlb
mov
add
int
push
pop
int3
xchg
mov
fstp
lahf
sub
call
sarl
std
add
xchg
stc
fidivrs
cmpsb
push
xchg
mov
mov
xor
xchg
loope
mov
rol
or
add
gs
icebp
dec
mov
xor
dec
js
or
cmpsl
mov
dec
insb
sbbl
pop
in
shr
icebp
jp
lock
gs
aaa
mov
fs
xlat
mov
mov
sub
mov
nop
xchg
pop
jns
int3
push
mov
sbb
mov
shrb
inc
jmp
cli
adc
pop
sbb
and
addr16
push
fstpl
cmpsl
push
test
enter
inc
loop
or
pop
or
add
pop
outsb
sub
int3
imulb
movsl
es
ds
daa
add
pop
stc
xor
cld
je
jne
dec
outsb
jle
sarl
adc
nop
add
jp
dec
loop
call
in
and
lret
push
lret
enter
sbb
cltd
sbb
popf
insl
xor
lods
mov
dec
mov
int3
and
jae
movsb
sub
sub
mov
cwtl
jge
dec
push
jb
pop
andl
ljmp
shlb
daa
or
imul
mov
nop
jbe
mov
sahf
inc
mov
sub
std
stc
mov
push
lea
scas
push
fcomps
pushf
jecxz
outsb
insl
adc
mov
pop
fwait
std
enter
shrb
dec
push
push
stos
cmp
pop
lahf
xor
xor
inc
pop
out
ds
leave
mov
adc
mov
test
ja
sbb
loope
shll
dec
sar
out
push
scas
jmp
xlat
xor
andb
jne
jns
loope
lret
pop
fcoml
mov
push
jecxz
dec
sti
ror
leave
xor
push
mov
sub
jb
mov
xor
leave
pop
dec
push
loop
ret
xor
mov
nop
stos
pusha
stos
push
cmp
mov
sbb
pop
add
cmp
adc
dec
cmp
iret
jl
jne
cmp
ret
dec
jge
xor
sbb
push
mov
popf
xor
pop
test
pushf
cmp
xchg
pushf
inc
push
fimull
push
or
push
sub
pop
enter
out
xor
test
jo
aam
inc
and
xor
popf
dec
call
sub
sub
int3
push
mov
aam
pop
push
mov
mov
add
andb
pop
inc
jne
sbb
adc
jmp
fistps
mov
sbb
std
in
sbb
pop
jge
jmp
daa
call
push
pop
ficoms
ds
fcomip
add
push
popa
xchg
mov
mov
cmpsl
shrl
dec
fs
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
mov
or
mov
mov
mov
shl
xor
mov
mov
mov
jmp
testl
mov
mov
outsl
or
cmp
jo
stc
mov
push
cmp
je
sbb
repnz
stc
xor
lock
xorb
stos
ret
mov
cmp
test
add
stos
es
dec
pusha
es
adc
jle
push
daa
add
or
add
inc
jl
pop
arpl
jne
das
nop
sbb
out
es
mov
rcl
mov
push
sbb
cmpsl
push
cli
repz
lret
int
xor
add
fsubl
pop
lcall
push
cmpsl
imul
shll
cmp
shl
fildll
lcall
out
mov
roll
repnz
fs
sub
testb
shll
shrl
icebp
imul
push
or
jecxz
and
cmc
aam
mov
inc
cmpsl
ss
lret
dec
xchg
stc
cli
bound
mov
lods
jecxz
fisubrs
int3
lret
lcall
mov
sub
push
shrl
cmp
cmc
inc
jb
shll
push
pusha
jns
push
jo
xchg
pop
jne
scas
add
dec
lahf
mov
sbb
and
cltd
insl
hlt
fsubp
rolb
in
pop
jae
add
cmp
mov
stos
dec
mov
pop
sub
push
mov
and
or
pop
data16
mov
jne
daa
mov
insb
xchg
adc
sub
pop
movsb
sub
pop
insl
insb
data16
int
mov
sub
imul
sbb
mov
out
sahf
cld
and
push
xor
pop
pop
xor
test
push
and
adc
xor
add
xchg
stc
scas
lret
daa
mov
lcall
pop
xor
and
cmp
mov
add
pusha
iret
mov
stos
sub
icebp
jp
cmp
in
mov
cs
in
jmp
ja
sub
clc
xor
fwait
dec
pop
and
fwait
xor
lcall
pusha
outsl
lods
jecxz
push
scas
popa
dec
pop
dec
ds
jns
cmp
jmp
xchg
inc
aas
mov
mov
sbb
push
mov
mov
hlt
jns
pop
test
hlt
sub
into
sbb
add
xchg
pop
mov
scas
call
popa
repnz
xchg
push
xor
or
push
cli
mov
adc
jg
idivl
dec
cmp
sti
in
push
lods
leave
ljmp
or
data16
inc
jb
imulb
cltd
rcl
push
dec
mov
sbb
mov
xor
test
repnz
fimull
call
cmp
fdivs
xchg
push
pusha
sbb
adc
out
dec
in
adc
pop
nop
in
push
ljmp
pop
ja
and
sub
insl
outsl
in
aas
aad
and
out
jns
xor
pop
xchg
dec
pop
cmpsl
mov
test
cmpl
ror
je
mov
ja
pop
jp
test
jbe
lret
push
dec
mov
mov
xchg
jnp
fcoml
lret
lds
dec
daa
xor
fldln2
out
movsl
pop
pop
sahf
xor
aam
sti
jle
stos
and
shl
popf
xchg
add
outsb
idivl
daa
mov
lret
sub
jb
xlat
std
negb
fidivs
cmp
add
fimull
push
dec
xchg
jge
pop
imul
mov
in
bnd
inc
push
loop
in
jnp
xor
mov
mov
addr16
shl
scas
lahf
repnz
ds
xchg
jle
mov
push
mov
nop
cmp
lea
pop
idivb
cmpsl
mov
jmp
nop
adc
push
mov
jno
cltd
out
cmp
xor
aam
mov
rcrb
addl
lahf
xchg
ss
fxtract
pusha
addr16
xchg
arpl
fisttps
loopne
in
inc
out
daa
adc
xchg
mov
loope
sar
lods
leave
jbe
pop
adc
and
fcmovnbe
mov
jns
sahf
std
push
dec
scas
sub
xchg
test
insb
nop
cmpsl
cmpsl
bound
stos
clc
loop
sbb
sbb
xor
push
inc
xchg
call
xor
sahf
popf
nop/reserved
scas
or
push
loop
push
jle
les
cmpsl
push
sbb
les
test
dec
daa
lret
or
repnz
dec
addr16
cmpsl
pop
imulb
add
inc
mov
enter
aam
mov
loop
int
repz
dec
xchg
sbb
int3
dec
pop
stc
dec
add
cmp
jle
cmp
fiadds
fwait
add
lods
mov
pusha
xchg
jmp
or
and
enter
xchg
imul
sbb
sbbl
mov
test
std
pop
xor
lahf
inc
xchg
mov
outsb
mov
xor
popa
jecxz
lret
push
pop
push
push
adc
int3
add
repnz
xor
shrd
jmp
xorl
mov
and
jmp
xchg
pop
or
cmp
pusha
mov
int3
repnz
loopne
insl
adc
push
sbb
dec
fs
cmp
into
std
sub
adc
cmp
xchg
ss
or
sub
lds
jecxz
andl
push
mov
sbb
and
sub
cmp
sahf
movsl
add
mov
incb
lcall
aaa
xchg
aam
adc
stos
dec
roll
jnp
adc
out
inc
mov
lods
adc
das
arpl
cmp
scas
add
ja
xchg
scas
or
xchg
adc
cmp
jnp
in
std
ss
push
mov
pushf
das
out
jp
pop
mov
ss
les
xchg
dec
cmp
loopne
jg
je
mov
aas
icebp
into
mov
sbb
lret
pusha
mov
insb
add
movsl
push
mov
int
dec
shl
push
inc
mov
call
adc
in
lds
sub
shll
xor
mov
pop
ss
das
cmpsb
add
cmp
mov
and
xor
mov
pushf
pop
aad
test
cwtl
jecxz
cmp
mov
call
ja
out
out
xor
push
inc
test
pop
jmp
sub
lcall
mov
xor
loope
int
insl
mov
mov
ljmp
mov
mov
or
pop
daa
xor
in
out
inc
int3
fmuls
sbb
add
sbb
add
jecxz
and
mov
adc
jnp
push
cld
imulb
push
sbb
clc
lret
cmc
jb
and
sahf
cmp
mov
cmp
xchg
mov
inc
mov
jo
negb
lds
pusha
insl
shll
jae
xchg
mov
cmp
outsl
xor
dec
and
sti
push
lahf
dec
and
pop
insb
ret
xchg
pop
and
and
scas
mov
inc
je
testl
push
dec
and
cmp
cmp
push
arpl
lcall
mov
fildl
rolb
xchg
pusha
pushf
cmp
mov
out
icebp
and
rcrb
in
and
mov
inc
sub
xor
push
pushf
aad
mov
aas
jge
popf
popa
add
pop
insb
pop
leave
in
out
clc
lret
jge
xchg
test
fidivl
jge
pop
adc
rcll
xchg
push
outsb
fiaddl
xor
jns
push
daa
lea
cmpsl
adc
outsb
lods
mov
loope
lret
dec
mov
cmp
mov
xchg
aas
in
pop
jb
rol
aam
clc
ja
adc
cmp
lret
sub
cmp
leave
jns
jmp
jmp
gs
fldt
in
loop
aas
inc
or
fwait
xlat
mov
adc
dec
mov
xor
fs
lock
int
mov
mov
jo
loope
dec
inc
xrelease
cmp
jnp
mov
lods
xchg
xor
ret
jp
dec
jecxz
outsb
ds
pop
push
inc
inc
outsl
mov
mov
pop
or
hlt
lds
and
jno
jle
test
and
sbb
fcomps
xchg
mov
mov
inc
mov
pop
jmp
sarb
add
cmp
cmc
sahf
cmovns
adc
sbb
mov
ja
mov
iret
sub
loop
xor
push
mov
inc
pop
ud2
lods
fisubl
sti
adc
je
into
push
sbb
push
pop
fstpl
mov
mov
aaa
pop
xchg
push
sbb
sub
lock
jbe
imul
aam
nop
int
cmp
leave
cli
and
add
jns
mov
inc
push
lods
int3
sbb
mov
mov
loopne
test
add
add
sbb
and
mov
out
xor
adcb
test
cmp
int3
insl
mov
lret
mov
imul
mov
xor
sub
xor
fiaddl
xor
rorb
xor
imul
sbb
jg
jns
push
fistpl
mov
arpl
dec
push
xor
xor
ficompl
cli
rorl
sub
mov
test
mov
shl
movsb
shl
out
mov
lds
jg
icebp
add
fstpt
mov
lods
movsb
add
daa
jo
dec
add
lahf
insl
loope
jecxz
jle
nop
shr
fildll
scas
mov
div
sub
xor
xchg
cmp
inc
rcrl
ja
add
stc
frstor
xchg
jge
xchg
sub
push
sbb
ret
aad
ret
lods
mov
adc
jns
repz
add
mov
in
jge
ficomps
jo
mov
add
cmp
fadd
shrb
cwtl
mov
lods
xor
mov
mov
fcmovu
push
stos
pop
pop
test
cmp
adc
cltd
mov
hlt
scas
in
inc
fldt
pop
sub
lds
aas
xor
shr
or
or
cmp
jne
cmp
jmp
arpl
cmpsb
adc
xchg
outsb
push
push
in
mov
pop
or
cmp
inc
shl
pop
arpl
arpl
icebp
xor
ss
adcb
cld
pop
mov
add
stos
imul
pop
div
cmpsb
xor
mov
ss
adc
cmp
cwtl
adc
pop
pop
in
adc
hlt
aaa
dec
pushf
nop
leave
mov
push
movsl
bts
cmpsb
in
sub
cmp
mov
fstl
xchg
in
and
jb
pop
ds
std
or
xchg
mov
jle
repz
fldlg2
in
fistpll
sbb
xor
ljmp
add
imul
jae
push
mov
das
out
test
or
movsb
or
jns
xchg
lods
popa
addb
jge
mov
inc
xchg
xlat
repz
and
int3
fwait
xor
dec
xchg
insb
jle
popa
pop
out
addr16
jge
les
and
dec
push
mov
push
xchg
lret
nop
dec
das
adc
sysexit
pop
scas
test
sbb
loope
add
cmp
pop
mov
cmp
lea
jo
test
fcmovu
or
push
jae
nop
sti
test
or
xchg
sbb
leave
mov
xchg
inc
mov
sub
scas
lock
test
mov
jl
dec
xor
mull
pop
andl
bound
cmp
cmpsl
data16
or
outsl
or
cs
adc
sub
gs
icebp
jns
popa
sub
shrb
fimuls
idivl
arpl
dec
jns
adc
insl
mov
fistps
adc
dec
movsb
leave
cmp
add
pop
mov
pop
gs
jno
loop
jl
xlat
enter
shl
mov
int3
lods
xor
push
ljmp
jo
mov
aam
int
inc
cmp
rcl
sub
cld
stos
cmp
add
jns
push
je
sub
ss
push
cmpsl
nop
cmp
lods
mov
jmp
loop
shrd
or
push
sbb
out
dec
push
and
cmp
sbb
ljmp
in
sbb
cs
daa
sbb
dec
aad
add
stos
ficoml
ror
fldcw
std
sub
mov
xor
rolb
sahf
shr
inc
inc
push
leave
iret
mov
jl
test
cmpsl
jbe
mov
pop
test
pop
sahf
cs
pop
jg
stc
jmp
sub
adc
mov
mov
insb
xor
cld
mov
iret
inc
xchg
stc
inc
insb
xor
lcall
movsb
push
or
pushf
enter
ja
mov
sub
das
lock
mov
jge
popf
sbb
mov
sub
mov
call
mov
aas
dec
xorb
xor
mov
fildl
and
xchg
es
leave
sbb
mov
aas
hlt
jmp
dec
sub
aaa
dec
stos
mov
sbb
pop
mov
movsl
or
jne
int3
xchg
mov
stos
pusha
cmp
mov
jecxz
test
mov
dec
lods
sbb
sub
mov
xor
popa
or
shl
sar
push
cmp
aad
testb
push
mov
out
lret
ja
mov
enter
push
cs
movsb
xchg
adc
dec
dec
cmp
das
mov
pushf
xchg
cs
push
call
push
inc
outsb
inc
sbb
sbb
jne
lods
xchg
enter
jbe
mov
bound
fistps
pavgb
dec
shr
push
pop
push
jp
call
out
pop
xor
outsb
shrb
movsb
popf
xor
je
jbe
dec
test
or
data16
and
push
sub
les
add
out
push
gs
pop
test
repz
xchg
aad
dec
push
push
fisubrs
scas
hlt
cmp
outsb
sub
fiadds
mov
in
and
movsb
xchg
adc
mov
mov
sti
jae
adc
jnp
repnz
testl
jecxz
mov
dec
or
dec
das
repz
xor
push
hlt
xchg
fwait
pop
push
mov
test
add
mov
mov
les
jb
cmp
fwait
test
shrl
popa
nop
cmpsl
sahf
adc
sbb
dec
dec
mov
jo
push
xchg
out
xchg
hlt
lea
jp
enter
jg
mov
xor
mov
inc
adc
cmp
call
lahf
sbb
inc
mov
lcall
or
repz
rcrl
fs
sbb
or
push
addr16
sbb
xor
sub
mul
ret
insb
cmp
jne
inc
movsb
inc
dec
rcl
pusha
mov
out
xchg
cmpsl
pop
mov
adc
pop
inc
pop
jnp
jge
je
pushl
pushl
pushl
jmp
mov
push
inc
push
sbb
add
mov
jns
test
inc
or
cmp
int3
sub
sub
mov
cmp
add
cmpsb
clc
inc
das
insl
sbb
sbb
leave
push
xchg
sbb
pop
dec
push
lds
jg
lods
lcall
mov
cmp
push
out
insb
test
sub
xor
jge,pt
or
je
pop
xor
pop
pop
xchg
mov
jo
shr
mov
andl
popf
dec
xor
pushf
jbe
lea
int3
das
popa
push
popf
push
adcl
pop
mov
imul
push
sub
cmp
sarl
fsubrs
out
shl
xor
sbb
jno
dec
repnz
stc
dec
repnz
pushf
xor
xor
int3
push
cltd
cmp
jl
xor
sub
mov
mov
lea
pop
cli
xchg
scas
inc
jbe
xchg
mov
mov
pushf
and
pop
enter
aad
push
inc
adc
jb
sbb
mov
scas
mov
jmp
subb
jmp
dec
cwtl
push
and
mov
sbb
add
dec
pop
test
mov
mov
lea
cmc
push
inc
jle
cmpsl
pop
mov
out
mov
mov
jecxz
ret
lahf
dec
mov
testb
ja
xchg
dec
stos
and
and
sarl
push
adc
ss
mov
add
jmp
xchg
push
aam
add
pop
in
jmp
jo
xchg
js
arpl
je
mov
xchg
outsb
cmp
and
cmpsl
imul
lret
imul
pop
pop
mov
xor
cmp
scas
xor
add
sar
jne
adc
icebp
sub
aam
sbb
sbb
sbb
clc
lods
sub
pop
insl
inc
xor
or
push
or
dec
cltd
xor
test
push
icebp
mov
mov
ja
dec
lods
pushf
fs
add
mov
stos
and
xchg
test
mov
movb
jo
xchg
pop
bound
lcall
dec
in
sub
dec
bound
xor
xor
or
sbb
mov
pop
cwtl
and
out
rolb
lret
add
push
push
or
into
pop
xchg
push
movsb
or
cmpsb
ds
xor
lret
daa
sbb
pop
out
xchg
lods
add
fistps
push
sahf
jmp
negl
push
in
out
leave
mov
enter
rclb
repnz
in
jne
test
pop
sub
xor
adc
add
push
xchg
insb
sub
in
push
movsb
fdivrp
add
repnz
pop
jmp
scas
push
rclb
cmp
cmc
jg
jno
add
das
inc
fildl
movsl
and
mov
push
cwtl
movsb
push
sbb
dec
or
dec
pop
aad
jge
pop
mov
jno
push
and
dec
add
lock
test
test
mull
cmp
aad
push
xchg
pop
jp
cld
xor
arpl
mov
push
movsl
orl
inc
xchg
push
ljmp
jmp
or
jecxz
jge
cmp
pushf
in
stos
add
xorb
mov
bnd
dec
add
int3
out
fs
notb
out
xchg
pop
and
insl
es
lods
mov
mov
loop
ja
movsb
xor
shrb
xchg
jae
ds
scas
andb
mov
push
daa
mov
enter
arpl
les
push
dec
inc
scas
xor
sarl
ss
add
xchg
jnp
push
hlt
addr16
xor
out
aaa
roll
or
sub
and
xchg
push
pop
cli
lahf
xor
and
jo
repz
cmp
inc
addr16
gs
repz
fwait
cmpl
lods
call
lahf
cmpsb
mov
add
lret
mov
add
lods
mov
and
cmp
clc
cmp
mov
fldt
cmp
pop
ljmp
cwtl
push
popf
mov
dec
test
js
cld
nop
mov
lock
aaa
rclb
cmpsb
test
pop
add
jge
add
xchg
inc
in
scas
cwtl
gs
mov
sarb
rolb
lea
lea
adc
pop
aas
cmp
jnp
clc
mov
outsl
aas
mov
loopne
movsb
bound
movsb
mov
add
fstpl
mov
ret
push
enter
addr16
mov
mov
loope
fwait
adc
lret
mov
push
and
add
or
aaa
mov
push
xchg
push
xor
rcrb
mov
cli
rcr
fistps
ljmp
cltd
lods
adc
dec
add
cmp
cli
jecxz
fwait
lods
or
or
hlt
pop
into
sahf
dec
push
jnp
push
sahf
dec
or
loop
xchg
adcb
je
test
insl
dec
sahf
fnstcw
mov
icebp
mov
jb
add
test
jge
pop
mov
inc
xchg
mov
test
inc
scas
sbb
push
mov
add
les
cmp
xchg
sub
call
dec
js
enter
stos
mov
pusha
es
aam
mov
inc
dec
stos
inc
mov
psllw
mov
or
push
repz
dec
jnp
test
sbb
jmp
sbb
sbb
ljmp
pop
dec
lock
jnp
ret
jno
jl
or
adc
data16
or
movsl
shlb
inc
or
xchg
fnstcw
fs
add
je
add
nop
popa
push
and
xor
not
mov
repnz
lds
pop
inc
mov
mov
in
stc
sbb
dec
lcall
push
enter
cmp
sbb
dec
je
adc
pusha
jg
clc
or
jb
subb
repnz
cmp
in
scas
cmpsb
addb
scas
ret
loop
and
test
test
jae
mov
jg
add
xchg
les
add
js
mov
push
cmpsb
dec
movsb
dec
test
shrb
int3
jp
out
adc
cmc
pop
addb
mov
cwtl
mov
shlb
adc
add
out
adc
and
fbstp
jmp
je
rcll
adc
int3
push
sbb
lcall
pusha
cld
jmp
bound
test
sti
xchg
or
sub
ret
cli
fucom
pop
outsl
loope
mov
movsb
ja
leave
out
inc
mov
xor
nop
and
fwait
mov
mov
cmp
and
mov
sub
push
icebp
lret
mov
xor
jo
sub
lock
pushf
call
and
incb
loope
pop
or
cmp
pop
xchg
enter
mov
cwtl
ret
inc
je
cli
xorb
dec
jecxz
dec
and
prefetcht0
push
jmp
jbe
jle
mov
adc
out
mov
in
jge
incl
movsl
jns
xchg
lret
mov
xlat
jnp
dec
or
and
out
lcall
cmpsb
inc
sub
adc
sbb
inc
adc
loopne
jbe
mov
push
push
push
add
pop
pop
jl
and
lods
pop
in
adc
repnz
adc
lret
orl
rcrl
xchg
repnz
inc
push
ss
push
mov
lods
pop
aas
stos
popa
push
adc
xchg
std
jbe
mov
scas
leave
jmp
and
dec
jmp
dec
sarb
shlb
sbb
jae
pop
aas
jle
mov
lock
pop
sub
jo
xchg
sarl
xchg
cs
jl
inc
xor
pop
pop
cld
outsb
stos
push
cwtl
xor
push
insb
js
loopne
add
pop
enter
push
or
pop
imul
add
jle
scas
adcb
and
clc
std
test
xlat
and
jl
outsb
add
fcmove
sbb
out
andb
mov
pop
jecxz
or
mov
adc
jne
test
fidivl
sti
imull
mov
mov
out
mov
out
add
add
mov
roll
inc
aad
sub
mov
aad
dec
xchg
andb
in
dec
mov
push
aas
xor
stos
add
adc
push
mov
pop
xor
mov
cmp
add
enter
inc
lahf
sub
push
inc
cmp
xlat
lahf
std
movntps
lret
cmpsl
cmc
les
dec
repnz
mov
adc
or
mov
enter
mov
aas
outsb
dec
jl
cmp
xchg
pop
cmp
das
test
outsl
add
sbb
out
jge
or
bound
stc
ss
mov
out
dec
inc
jmp
test
fstpl
dec
fnsave
out
ja
jmp
jb
outsl
and
frstor
xlat
mov
ret
lods
aaa
sub
loope
in
imul
add
adc
sbb
ret
scas
or
adc
sbb
addb
xor
mov
mov
aam
int3
cmpsl
xchg
sbb
ds
jecxz
xlat
int
sub
insl
ja
in
in
arpl
daa
test
movsb
mov
out
lcall
adc
dec
loopne
add
daa
into
xchg
xor
repz
cmp
clc
dec
pop
cmp
xchg
pushf
and
mov
daa
bound
jg
mov
jle
scas
cmp
sbb
and
push
cmp
fwait
push
in
inc
dec
sbb
mov
pop
cli
mov
push
jo
dec
dec
xor
les
fsubrs
fcmovnbe
push
mov
pushf
in
dec
mov
push
mov
adc
push
aad
mov
ret
out
cmp
sahf
cs
xchg
pop
int
cmp
mov
add
pop
leave
ret
movl
cmp
movl
jae
movl
cmp
movl
jae
shrd
movl
shr
ret
neg
mov
jmp
fldenv
inc
cmp
pop
adc
inc
xor
dec
shrb
cmp
in
push
push
or
mov
clc
sub
inc
in
rcrl
and
mov
mov
sbb
push
push
pop
mov
or
repz
mov
inc
cwtl
scas
or
mov
and
lcall
dec
xor
incb
add
xchg
fmull
pop
or
lods
filds
and
insb
xchg
adc
push
or
imul
sbb
movsl
fiadds
aam
jp
rolb
das
dec
rorb
jecxz
mov
adc
cli
mov
cmp
inc
orl
imul
fdivrs
and
clc
sbb
push
jg
mov
cmc
push
xchg
repnz
cmp
js
xchg
and
pop
jmp
xchg
ss
sbb
dec
loop
out
lret
fisttpl
test
mov
push
aas
or
in
jge
mov
jg
jne
scas
rorb
or
and
adcl
xor
aam
aad
xor
pop
nop
mov
lea
inc
dec
sti
mov
push
out
cmpsl
repnz
mov
fnsave
inc
sbb
mov
repnz
jnp
int
dec
out
mov
mov
movsb
jle,pt
inc
imul
pop
jp
mov
add
lcall
icebp
mov
xor
xor
cmpl
sub
pop
xlat
das
adc
inc
sbb
outsl
mov
mov
dec
sub
pop
or
loope
push
in
lds
test
mov
mov
fisttpl
fsts
cmpsl
adc
and
adc
xor
pop
push
mov
das
sbb
mov
cmp
fdivl
ss
movsl
sarb
sbb
push
cmp
xchg
sbb
fwait
sti
clc
pop
pop
fsubr
clc
cld
sub
ljmp
mov
push
fstpl
shl
and
jns
xchg
push
dec
in
mov
push
adc
cmp
jecxz
push
test
sub
sub
push
add
xor
sbb
scas
fsubl
jmp
xchg
push
dec
in
dec
xchg
push
lret
int
test
push
pop
jbe
lea
sbb
dec
cmc
add
jne
xchg
es
cmpsb
pop
cs
xchg
mov
dec
rcll
jmp
push
lcall
dec
pusha
mov
shlb
pop
add
cmpsl
ret
mov
mov
adc
into
sub
aaa
or
push
pop
cmpsl
stc
pushf
test
insl
dec
mov
push
dec
jno
enter
mov
lock
and
xchg
push
roll
mov
push
mov
inc
and
ja
lods
xor
in
rorl
inc
iret
mov
gs
xchg
sub
outsl
add
cmp
test
mov
mov
inc
or
cmp
cmp
inc
sbb
push
inc
push
gs
jg
mov
mov
jne
mov
insb
mov
bnd
lahf
add
call
inc
lods
cmp
in
subb
adc
mov
in
fnstenv
xchg
sbb
lock
rorb
clc
sub
and
pop
xchg
cmc
les
push
jnp
loop
rcrb
xchg
add
dec
repnz
jbe
dec
dec
pop
or
cmc
inc
scas
jae
dec
push
add
das
cmp
repz
das
xor
in
shl
mov
mov
hlt
dec
inc
and
stos
mull
test
cltd
xor
mov
sti
int3
xchg
xchg
repnz
add
pop
dec
mov
cmpsl
out
adc
roll
jb
dec
repz
fnstcw
mov
push
je
pushl
imul
rcr
mov
mov
les
dec
jno
mov
push
add
sub
mov
or
bound
add
sbb
push
je
mov
push
cmp
pop
jl
push
out
jno
xorl
xor
repz
jns
sbb
je
jne
adc
popf
cmp
cld
mov
inc
jmp
push
clc
xchg
add
xor
and
sub
cmp
fsts
mov
xchg
jae
pop
and
or
movsl
jne
aam
push
sub
sbb
jecxz
lds
mov
sub
inc
test
push
cmpsl
sub
aaa
adc
rolb
ret
xor
xor
ret
push
mov
sub
sub
movl
xor
mov
mov
sbb
mov
movl
sub
mov
sbb
movl
cmpl
mov
mov
mov
jmp
mov
jbe
pushl
call
subl
movzbl
and
mov
add
orl
sbb
sbb
sub
movl
xor
movl
cmpl
mov
mov
mov
jmp
mov
jne
push
call
adc
sub
xorl
dec
movl
movl
movl
mov
subl
mov
jmp
mov
dec
fdivs
adc
std
cs
popf
sub
or
push
push
push
and
sub
jno
jmp
notb
pusha
in
sub
xchg
nop
shll
sarl
add
and
mov
xor
xor
jle
mov
lods
xor
ffree
popa
inc
jo
xor
data16
mov
dec
inc
cmpsb
std
loop
scas
pop
dec
smsw
in
movsb
std
adc
fnsave
mov
movsl
mov
pushf
rcrb
pop
ljmp
add
fildl
sbb
ja
cmp
mov
inc
inc
cmp
xchg
pop
inc
das
movsl
mov
fsts
pushf
bound
movsl
xor
inc
or
iret
or
xchg
les
jl
inc
cmc
xchg
rcrb
pop
jne
mov
ret
mov
fsts
mov
jb
lock
jo,pn
pop
mov
or
mov
mov
mov
je
dec
pop
inc
cmp
loope
push
pop
sti
loop
fs
hlt
lret
scas
pop
jbe
lret
push
mov
xor
mov
movsb
push
ret
sub
mov
rcr
dec
out
popf
adc
fs
es
jmp
pop
push
lret
ficoml
jbe
movsl
jp
rorl
mov
inc
enter
lods
push
mov
xor
mov
push
ficomps
adc
push
js
lret
dec
out
and
adcb
sub
xchg
jg
leave
mov
adc
lahf
or
xor
mov
jge
adc
add
add
or
call
stos
enter
negl
jmp
insb
mov
mov
pop
jnp
sbb
imul
lds
add
inc
fidivrs
loopne
jb
sbb
je
xorl
jmp
pop
xor
movsb
popf
jno
mov
sub
lds
push
xor
lret
cmp
jg
and
push
cs
jge
pop
push
or
jbe
int
adc
dec
cld
lods
std
cmp
mov
and
pop
mov
out
imul
push
cmpsl
add
adc
cmc
popf
or
mov
in
sbb
popa
nop
mov
mov
outsl
adc
pop
cld
pop
sub
insl
sub
mov
cmp
iret
rclb
jno
sub
add
imul
loope
push
mov
sbb
stos
into
mov
cmp
and
je
jnp
enter
scas
repnz
mov
add
dec
sub
pop
cmpsl
or
stos
sub
dec
shrb
sbb
xchg
xor
dec
dec
inc
adc
add
test
xor
sbb
jbe
mov
call
push
gs
popf
cwtl
sub
push
dec
ret
iret
in
push
dec
test
dec
enter
out
mov
lcall
ret
out
inc
sbb
jb
mov
stos
mov
out
dec
sub
pop
dec
cmc
jbe
mov
mov
add
jo
lret
xorl
dec
inc
outsb
rorl
iret
lcall
inc
adc
out
in
cmc
jb
int
ds
fstpt
add
or
pop
xchg
lods
add
xchg
lds
sti
iret
decb
add
les
mov
jmp
push
rcll
popf
loopne
pop
jnp
push
cmp
in
aad
cli
bound
cmpl
xorb
dec
cmc
push
daa
int
jae
cli
sub
popf
dec
imul
xchg
lock
ljmp
push
scas
sub
scas
inc
iret
hlt
and
dec
pop
std
mov
cmpsb
out
xchg
shll
add
rorl
mov
pop
push
inc
cmp
mov
mov
into
and
push
or
aad
xor
mov
addl
sub
mov
push
mov
sbb
cmpl
mov
mov
mov
jmp
notl
jge
push
call
adc
xor
xor
and
sbb
mov
mov
sub
add
xor
xor
or
sbb
mov
mov
jmp
test
sub
cmp
cmc
push
int
or
push
push
push
mov
xchg
aaa
stos
push
adc
bound
std
jns
test
stc
and
xchg
dec
inc
adc
mov
dec
add
dec
andl
ljmp
jp
push
ss
mov
std
aas
ret
mov
or
sub
dec
xchg
xchg
pushf
addr16
lods
push
mov
push
or
lock
or
push
cltd
je
cld
pop
repnz
mov
mov
subb
pop
and
adc
enter
cmp
scas
neg
cmp
push
outsb
mov
inc
es
mov
push
outsl
push
mov
dec
or
push
ret
sbb
mov
and
mov
adc
add
push
cmp
and
pop
popf
je
popf
stc
mov
mov
mov
adc
add
js
xor
jnp
call
into
mov
pop
fucomp
insl
outsl
jp
ljmp
outsb
movsl
js
aam
enter
mov
shll
sahf
out
jbe
ret
push
sbb
jmp
in
xlat
mov
xchg
push
cs
xchg
int3
out
stc
andb
jge
push
xor
adc
xor
in
hlt
in
jnp
aas
cmpsb
incb
clc
shlb
ret
fcoml
inc
adc
push
into
mov
int3
loop
les
ds
push
ret
jl
lcall
repnz
mov
loope
andb
icebp
ret
dec
and
sub
notb
mov
push
adc
popa
mov
roll
cmc
adc
ret
bound
pop
fbstp
shrb
cmp
dec
test
fs
lahf
mov
bound
lret
sbb
cwtl
jae
and
mov
mov
jle
sbb
push
pushf
pause
xchg
int3
cs
rclb
mov
push
andb
sbb
leave
jae
sbb
in
orl
adc
shl
in
inc
lahf
xlat
int3
xor
add
daa
lcall
jg
xchg
and
inc
out
mov
lods
jg
push
push
je
out
lods
dec
ret
arpl
xchg
xchg
xor
jmp
repz
mov
addr16
mov
add
push
mov
cmp
imul
adc
jl
mov
dec
std
mov
xor
sti
and
and
mov
mov
mov
std
mov
scas
adc
xor
ja
mov
dec
int
sbb
jae
mov
mov
loope
add
lods
xor
and
add
out
push
dec
lock
inc
push
daa
lea
bound
inc
ret
mov
dec
inc
xchg
js
xchg
xor
ffreep
fnstsw
imul
and
jg
jg
lret
out
push
pop
mov
mov
lcall
sbb
mov
aas
xchg
and
mov
xchg
test
jg
ljmp
cmp
mov
xlat
dec
jo
xorb
xchg
aaa
or
push
xchg
iret
xor
xchg
cmp
jge
outsb
dec
push
and
fnstsw
ficompl
int3
or
lods
mov
and
inc
setb
call
or
enter
and
pop
push
mov
test
sahf
test
data16
mov
inc
dec
pop
lret
lds
addr16
scas
jg
add
ret
jne
popl
xchg
dec
lcall
in
sub
ds
pop
adc
lahf
xchg
ljmp
pop
dec
cmp
xor
in
shrl
fwait
test
cmp
lods
aas
or
test
pop
dec
out
push
adc
lret
popa
jnp
fcmove
xchg
cmp
dec
push
push
subl
push
xorl
push
jmp
xor
inc
or
xor
and
fwait
ds
jge
or
push
push
push
and
sub
push
mov
xchg
sahf
push
add
bswap
dec
xchg
imulb
jl
fsubr
push
pop
rcll
sti
pushl
cli
mov
popf
mov
icebp
imul
mov
test
or
loop
stc
loopne
mov
pop
shll
dec
xor
sahf
cwtl
js
outsl
clc
inc
xor
push
mov
cmpsl
mov
sahf
jmp
fnstcw
movsb
lods
lret
test
popf
rorb
ja
and
mov
pop
mov
arpl
aam
push
fsub
mov
test
xlat
mov
xchg
rol
arpl
fdivrl
aam
das
repnz
stc
mov
push
mov
or
pop
pushf
imul
lods
mov
sar
xor
cmp
jl
daa
rcr
les
mov
sbb
dec
cmpsl
mov
gs
fwait
in
outsl
dec
lret
xor
xor
inc
negl
andb
cmp
pop
movsl
sti
dec
pushl
cmp
dec
xchg
adc
inc
sub
xor
call
add
neg
xchg
stos
dec
leave
js
pop
pusha
jnp
shrb
and
sub
mov
push
and
pop
cwtl
loopne
sahf
shll
test
push
sub
pop
add
cwtl
adc
xor
les
loope
mov
bound
int
lret
es
lods
or
xor
out
leave
xchg
outsl
movsl
pop
xor
pusha
popf
mov
aad
pop
shll
scas
pusha
push
cmpsb
mov
jecxz
push
sbb
jbe
and
int
stc
or
int
adc
rolb
lock
jle
jl
mov
jp
ja
movsb
xlat
or
add
cs
sbb
xor
into
jge
out
mov
lods
lods
aas
shrl
push
pop
lret
mov
outsb
adc
sub
inc
ja
sbb
cmp
and
outsl
adc
lods
in
xor
xlat
xor
xchg
sbb
cmp
sarl
ja
adc
ret
mov
fsubrs
and
adc
stos
push
cmc
sub
mov
push
lahf
ja
sbb
push
pop
push
cltd
pop
xchg
movsl
jmp
inc
and
nop
jno
stos
lods
mov
bound
out
adc
and
fcoms
or
adc
das
roll
in
push
mov
lea
mov
dec
push
dec
xor
or
pop
or
and
aam
sbb
test
clc
and
insl
push
jecxz
clc
mov
movsb
mov
je
pop
pop
aas
xor
movsb
jns
daa
lds
repnz
stos
test
xor
in
dec
bound
shlb
jno
jmp
sub
sub
fisubl
mov
test
popa
push
leave
jae
jno
add
xlat
add
cmp
jmp
cmp
pcmpgtd
call
scas
lcall
repnz
xor
dec
outsl
or
inc
sub
mov
aam
or
adc
dec
push
stos
pop
mov
sbb
les
iret
xor
inc
adc
adc
jo
mov
sub
inc
je
xchg
mov
cli
insl
insb
cmp
mov
jp
push
mov
xor
stos
push
cmp
jmp
sub
push
les
mov
rorb
fcmovnu
int3
adc
jge
sbb
cwtl
ret
mov
add
pop
lret
dec
andl
push
ss
sbb
cld
in
jmp
pop
jb
negb
pop
notl
add
paddusw
or
imul
jp
adc
ret
mov
std
rolb
jl
stc
jecxz
mov
jecxz
shrl
inc
stos
lea
in
cld
dec
inc
cmp
mov
not
cmp
dec
sub
add
inc
add
add
adcb
fs
and
xchg
shlb
push
push
push
push
cmp
jge
in
ret
je
push
jp
cltd
out
aas
xlat
xor
mov
das
push
enter
sbb
cld
popf
out
ja
sub
dec
cmp
loopne
enter
lcall
cmpsl
push
xchg
jl
das
out
mov
push
ja
xbegin
xor
xor
jecxz
and
stos
xor
mov
fincstp
incl
sub
pop
push
cltd
pop
jbe
addb
aam
fwait
xchg
mov
sahf
into
inc
cmp
push
dec
push
mov
mov
jns
adc
jmp
pop
sub
mov
fldenv
test
mov
rol
or
dec
cmp
jg
xchg
push
gs
or
outsl
cmp
pop
mov
gs
outsw
into
xor
push
push
popf
or
mov
arpl
call
repnz
popf
aad
aad
inc
add
inc
in
sbb
cmp
loope
fisttpl
adc
repnz
add
cmp
mov
out
pop
cmpsl
or
or
sub
fldenv
jl
sbb
andl
jbe
jmp
je
enter
inc
mov
add
mov
jae
fcmovb
jnp
in
test
and
and
je
pop
sub
sub
insb
dec
add
or
pushf
out
mov
addr16
imul
mov
shrl
dec
stc
xorb
push
cwtl
pop
stc
mov
ficoml
das
data16
pop
shll
jbe
cmp
xor
imul
outsb
xor
in
mov
loope
mov
aas
repz
sub
popa
rcl
movsb
or
out
mov
pop
aam
sub
adc
inc
adc
fdivrl
sbbb
sbb
imul
lcall
cmp
insl
int3
je
add
ljmp
stos
xlat
mov
mov
aaa
xchg
aas
movsl
movsl
cmp
mov
push
orl
mov
jmp
in
daa
jno
negl
mov
cmp
pop
mov
lahf
pop
cli
test
loopne
in
clc
jnp
jg
js
in
sub
cmp
pop
lahf
out
xchg
mov
lods
sub
in
push
or
push
mov
into
jg
mov
push
in
mov
sub
push
les
jbe
mov
inc
jno
arpl
scas
icebp
xlat
fiaddl
out
add
shrd
mov
add
je
push
into
add
mov
push
out
push
scas
sub
or
adc
cwtl
cmp
jns
fcmovb
mul
mov
pop
or
jo
and
mov
inc
loop
push
dec
or
push
xchg
ret
push
test
sub
cli
shll
adc
xchg
xor
push
notl
or
pop
lcall
jmp
and
cmp
mov
aam
and
arpl
push
lods
in
jmp
xor
cs
mov
stos
pop
lods
sbb
cmp
es
xor
add
xlat
arpl
les
rclb
insb
dec
imul
cmc
dec
loopne
push
fcmovb
fwait
and
test
shld
mov
adc
add
cmp
mov
adc
shl
push
fcmovb
pop
jnp
sarb
add
mov
or
or
inc
mov
loop
push
add
mov
scas
movsb
movsb
fdiv
inc
mov
cld
jge
addl
sub
inc
test
mov
jge
sub
sysenter
jb
add
dec
xchg
pop
ja
or
data16
lock
sbb
mov
adcl
mov
xor
and
sbbl
xor
and
cmpl
mov
mov
jmp
movl
ja
pushl
pushl
call
sub
xor
adcl
and
adc
and
mov
and
cmpl
mov
mov
mov
jmp
mov
jle
push
call
movzwl
sbb
mov
andl
sub
sbb
sbb
mov
or
add
mov
movl
mov
mov
sub
and
movl
jmp
mov
or
and
pop
jp
push
mov
add
push
push
test
fsubp
xor
mov
test
add
nop
cmp
mov
ss
out
sub
adc
mov
outsl
adc
adc
push
movsl
sahf
loope
shlb
push
mov
fwait
push
mov
xchg
lea
fmull
adc
mov
mov
fidivrl
pop
jns
ret
mov
sub
les
lret
out
aad
pxor
out
inc
pop
dec
sub
xor
or
in
jnp
inc
mov
iret
loop
push
sub
pop
xchg
cmpsl
jbe
and
xchg
shlb
mov
dec
fnsave
lods
push
outsl
mov
mov
lods
xor
iret
sub
lods
fbstp
nopl
mov
outsb
int3
jmp
push
sub
in
adc
stos
push
lods
loope
adc
sub
shlb
add
outsl
ret
xchg
jmp
mov
or
mov
adc
inc
cmpsb
test
mov
sbb
addr16
jno
scas
jg
fcomps
inc
mov
nop
js
mov
adc
repnz
xchg
sub
xchg
leave
lret
in
inc
addr16
bound
mulb
xor
push
dec
lahf
stos
out
jmp
incl
imul
in
or
scas
rcrb
fs
jns
and
inc
aam
xorb
dec
lret
js
addr16
enter
je
lret
lret
or
push
add
jnp
popa
movsl
jg
dec
std
iret
sbb
decl
xor
icebp
in
and
bound
xor
incb
lret
pop
sbb
out
jmp
lahf
fs
adc
sbb
lahf
inc
push
jnp
dec
stc
pop
sbb
push
dec
divl
mov
loopne
sarb
push
pop
or
in
mov
adc
adc
sub
aaa
dec
jns
or
sub
jle
int3
adc
cmp
cmp
arpl
andl
insl
insb
into
jg
sbb
jmp
push
push
sarl
loopne
daa
push
cld
mov
push
and
and
and
jns
aad
aad
push
push
out
cmc
pushf
mov
stos
mov
adc
mov
adc
movl
addl
mov
movl
mov
xor
mov
and
mov
add
push
adc
sbbl
push
negl
and
orl
and
subl
push
push
orl
call
movl
mov
mov
mov
cmp
ja
movl
jb
cmp
movl
jae
adc
movl
movl
sub
movl
cmpl
mov
not
jmp
not
jbe
pushl
push
pushl
push
push
push
push
call
sub
sub
sbbl
xorl
addl
mov
mov
sub
add
movl
xor
movl
movl
mov
cmpl
movl
mov
jmp
mov
mov
jl
push
call
sub
sbb
or
andl
sbbl
adc
mov
mov
mov
add
mov
adc
mov
or
or
add
adc
xor
xor
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
and
mov
and
mov
push
push
push
push
call
push
push
push
push
call
mov
mov
add
mov
adc
mov
and
mov
and
mov
cmp
jne
cmp
je
movl
movl
mov
mov
push
push
push
push
call
xor
xor
or
or
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
xor
shr
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movb
movb
movb
movb
mov
movzbl
mov
movzbl
shl
cltd
idiv
mov
movzbl
movzbl
or
mov
movzbl
cltd
idiv
mov
movzbl
movzbl
cltd
idiv
movzbl
and
mov
movb
movb
mov
mov
add
add
mov
imul
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
adc
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
mov
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
adc
push
push
push
push
call
mov
mov
mov
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
xor
mov
mov
add
mov
shrd
xor
shl
shr
or
xor
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
mov
imul
mov
imul
xor
or
mov
mov
xor
mov
and
sub
xor
xor
add
div
mov
jmp
movl
mov
movl
movl
mov
mov
or
xor
mov
sub
xor
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
imul
sub
imul
xor
add
mov
mov
xor
mov
and
sub
xor
xor
mov
div
mov
sub
mov
add
xor
add
mov
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
or
push
sub
push
push
movzbl
and
mov
mov
shrd
cmpl
mov
mov
jmp
movzbl
jbe
push
pushl
call
and
mov
add
sub
subl
adcl
xor
or
mov
sub
add
shr
mov
mov
inc
xor
cmpl
mov
movl
mov
movl
jmp
mov
je
pushl
push
push
pushl
call
and
sub
mov
mov
sub
sub
sbb
not
mov
xor
cmpl
mov
movl
movl
mov
jmp
movl
movl
ja
push
push
call
sbb
mov
adc
xor
or
mov
adc
movl
and
sub
adc
movzbl
adc
mov
xor
or
sub
or
or
movl
mov
mov
or
shl
cmpl
mov
mov
movl
jmp
mov
mov
jae
pushl
pushl
call
mov
mov
sub
or
mov
sbb
mov
orl
adcl
mov
mov
sub
or
mov
xor
shrd
adc
xor
adc
shr
mov
inc
mov
xor
xor
or
sub
mov
mov
add
mov
xorl
mov
mov
sub
mov
mov
xor
xor
sub
and
mov
cmpl
mov
movl
jmp
mov
jl
push
call
decl
or
adcl
or
neg
sbb
mov
or
mov
orl
shl
subl
xor
adc
shld
cmpl
movzbl
movl
mov
movzbl
jmp
movl
movl
je
push
push
push
call
xor
add
mov
sub
xor
add
inc
movzbl
or
mov
movl
xor
add
and
mov
mov
shl
and
mov
or
xor
or
mov
xorl
xor
xor
movl
inc
movl
movl
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
je
xor
mov
mov
and
xor
shld
cmpl
not
movl
mov
jmp
movl
jl
pushl
call
mov
xor
add
andl
sub
xorl
sbb
sbbl
shl
xor
mov
cmpl
movl
mov
mov
mov
jmp
mov
jne
push
pushl
push
call
subl
incl
subl
movzbl
or
mov
sub
adcl
andl
mov
xor
movl
cmp
movl
jne
movl
cmp
je
cmpl
movl
movl
jmp
mov
movl
jg
push
pushl
push
push
call
mov
sbb
xorl
dec
sbb
mov
xor
xor
sub
add
mov
adcl
mov
neg
xor
shl
sbb
mov
xor
shr
orl
or
cmpl
movzwl
not
jmp
movl
je
push
call
sub
sub
mov
or
add
xor
adc
xor
xor
or
and
sbb
mov
xor
mov
mov
adc
mov
mov
xor
xor
sbb
mov
cmpl
movl
movzwl
jmp
movl
mov
jg
pushl
push
push
call
and
sub
adc
xorl
dec
addl
mov
and
mov
or
mov
cmpl
movl
mov
jmp
movl
jg
pushl
call
or
add
xor
dec
orl
mov
push
pop
sub
mov
add
mov
lea
mov
mov
mov
xor
xor
shr
shl
or
mov
movl
mov
mov
xor
xor
shr
shl
or
push
lea
push
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shr
inc
xor
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
movl
mov
xor
mov
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
mov
xorl
or
not
mov
movl
jne
cmpl
notl
movl
movl
jmp
mov
jge
push
pushl
pushl
pushl
pushl
push
call
sbbl
xorl
orl
orl
orl
sbb
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
imul
add
xor
add
mov
mov
sub
imul
add
xor
div
mov
mov
jmp
movl
movl
movl
movl
mov
mov
or
mov
imul
add
xor
mov
div
mov
mov
xor
sub
mov
mov
mov
xor
sub
mov
sub
mov
add
mov
mov
sub
and
add
xor
mov
div
xor
add
mov
mov
sub
imul
add
div
mov
xor
mov
sub
mov
and
or
sub
xor
mov
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
push
pushl
pushl
call
test
jle
xor
jmp
movl
or
movl
adc
movl
movl
cmpl
mov
not
jmp
mov
jb
push
push
push
pushl
pushl
push
pushl
call
not
add
sbbl
or
add
sbbl
xor
xor
or
add
movl
cmpl
movl
mov
jmp
notl
movl
jbe
push
call
add
movzbl
and
and
xor
xor
or
add
xor
or
sub
movl
or
movl
xor
xor
mov
sub
and
push
cmpl
movl
mov
mov
jmp
mov
movl
ja
push
pushl
push
call
subl
xor
add
xor
mov
sub
mov
adc
orl
movl
mov
or
mov
push
subl
push
subl
push
call
sbbl
mov
mov
sub
mov
sbbl
push
sbbl
push
addl
push
push
sbbl
call
mov
sub
mov
subl
add
movl
mov
adc
mov
subl
xor
decl
mov
xor
mov
or
movl
movl
movl
xor
movl
cmpl
movl
mov
not
jmp
movl
mov
jle
push
push
pushl
push
pushl
push
call
adcl
or
sub
addl
or
movl
cmpl
mov
mov
jmp
not
je
pushl
push
pushl
push
call
sub
and
and
sub
adc
negl
push
not
movl
movzwl
and
mov
mov
or
mov
adcl
push
push
negl
push
notl
call
mov
movzbl
add
mov
mov
subl
push
orl
push
adcl
push
addl
push
movl
call
and
mov
cmpl
mov
mov
jmp
mov
movl
ja
push
pushl
pushl
push
push
call
orl
movzwl
add
mov
movzbl
add
sub
movzbl
sub
adc
mov
xor
add
mov
orl
xor
xor
mov
sbbl
xor
adcl
xor
cmp
jne
cmp
movl
jne
sbb
movl
andl
movl
dec
movl
mov
inc
imul
mov
mov
and
xor
sbb
mov
div
pushl
xor
adcl
and
xor
cmpl
mov
movl
mov
jmp
movl
movl
jbe
pushl
push
push
push
push
call
andl
xor
or
sbb
mov
sbb
subl
pushl
cmpl
mov
movl
movl
jmp
not
mov
jle
pushl
push
call
and
add
sbb
sbb
mov
push
pop
div
sub
mov
notl
sub
adcl
add
sbbl
imul
and
xor
pushl
addl
pushl
pushl
orl
pushl
pushl
xorl
call
not
movl
cmpl
mov
mov
not
jmp
notl
movl
jb
push
pushl
push
pushl
pushl
call
adcl
sbb
orl
sbb
add
or
movl
mov
sub
mov
xorl
sub
movzbl
sbb
mov
mov
xor
xorl
xor
orl
div
imul
incl
xor
sbbl
pushl
orl
pushl
sbbl
call
and
movl
cmpl
mov
movl
notl
jmp
movl
movl
jb
pushl
push
pushl
pushl
call
and
or
or
and
adcl
xor
xor
xor
xor
sub
add
sub
movzwl
and
movl
cmpl
movzbl
not
movl
jmp
mov
not
jg
push
push
push
call
and
dec
mov
or
mov
mov
or
mov
add
movzwl
and
mov
movl
cmpl
movl
mov
mov
mov
jmp
mov
mov
jb
push
pushl
pushl
push
call
movzbl
and
and
mov
mov
sub
sub
adc
xor
xor
adc
xor
movl
add
mov
adc
mov
mov
adc
mov
negl
push
subl
push
xor
xor
push
push
call
addl
add
mov
adc
mov
adc
movl
movl
cmpl
mov
mov
jmp
mov
jle
push
pushl
pushl
push
push
push
pushl
push
pushl
call
and
xor
xor
xor
or
mov
xor
decl
mov
mov
sub
add
movl
adc
movl
movl
mov
xor
mov
xorl
mov
sbbl
mov
addl
movl
andl
mov
call
lea
xor
or
sbb
mov
mov
mov
sub
and
lea
cmpl
movl
mov
jmp
mov
mov
jge
pushl
call
andl
sbb
mov
adc
mov
incl
adc
and
adcl
xor
mov
mov
and
mov
mov
sub
mov
cmpl
movl
mov
jmp
movl
jae
push
push
call
inc
sbbl
xor
sbb
movl
xor
xor
shl
movl
shr
xor
xor
or
or
mov
mov
sbb
mov
cmpl
movl
movl
jmp
movl
mov
jbe
pushl
pushl
push
pushl
call
sbb
mov
xor
add
mov
mov
adc
subl
sbb
negl
lea
addl
mov
or
mov
mov
mov
sub
shrd
shr
mov
adc
mov
adcl
xor
xor
orl
or
mov
orl
push
pushl
orl
lea
addl
push
shl
call
lea
xorl
push
andl
mov
sbbl
mov
lea
push
movl
mov
lea
sbbl
mov
subl
mov
addl
mov
push
notl
call
orl
push
adcl
push
orl
pushl
adcl
call
mov
adc
mov
add
mov
cmpl
movl
notl
jmp
mov
jle
pushl
call
neg
sbb
notl
not
adcl
mov
shr
shl
or
mov
xor
mov
lea
mov
lea
mov
mov
sub
lea
xor
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
xor
mov
mov
or
mov
shl
xor
or
mov
mov
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
cmpl
movl
movl
movzbl
jmp
mov
ja
push
push
pushl
call
movzwl
sub
addl
xorl
mov
or
mov
sbb
sbbl
movl
sbb
push
and
push
movzwl
and
push
xor
movl
movl
movl
or
mov
cmpl
movl
movl
mov
movl
jmp
movzbl
mov
jae
pushl
push
pushl
push
pushl
push
pushl
push
push
pushl
pushl
call
movl
adc
adcl
adcl
cmpl
movl
movl
movl
movl
jmp
mov
jne
pushl
call
xorl
xorl
xorl
addl
subl
adcl
addl
xor
neg
mov
subl
xor
div
cmpl
mov
movl
mov
movl
jmp
movl
jb
push
call
sbbl
sbb
sub
and
or
add
adc
imul
cmpl
mov
movzwl
mov
jmp
mov
ja
push
pushl
pushl
call
movl
notl
sub
sub
adc
sub
mov
xor
sbb
and
mov
andl
xor
orl
div
addl
sub
mov
xor
mov
cmpl
mov
not
movzwl
jmp
not
jae
pushl
call
add
and
addl
and
negl
movl
or
movl
cmpl
movl
mov
mov
jmp
movl
mov
ja
push
call
andl
xor
add
add
mov
mov
xor
dec
subl
mov
sub
movl
movl
mov
adc
add
neg
xor
xor
xor
dec
imul
sub
mov
and
or
sub
andl
mov
movl
cmpl
movl
mov
movzbl
jmp
mov
jae
push
push
push
pushl
push
call
add
or
xorl
adc
sbb
not
movl
adcl
movl
cmpl
movl
mov
jmp
movl
mov
jle
push
call
or
adc
sub
dec
incl
adc
sub
movl
movzwl
sbb
mov
mov
imul
mov
and
imul
sbb
imul
mov
incl
and
sub
or
cmpl
mov
mov
mov
mov
jmp
movl
mov
ja
push
push
push
push
call
mov
adc
mov
not
xor
mov
mov
add
mov
and
movzwl
add
movzwl
xor
mov
mov
xor
addl
mov
mov
addl
lea
sub
mov
movl
movl
andl
movl
mov
xor
movzwl
or
mov
or
xorl
add
mov
addl
or
and
add
cmpl
movzwl
mov
mov
jmp
mov
movl
jb
pushl
pushl
push
push
push
push
pushl
push
call
mov
add
addl
add
sbb
add
sbbl
xor
mov
movl
sbb
movl
movl
mov
cmpl
movl
mov
movzwl
jmp
movl
je
pushl
call
add
and
add
xor
sub
add
mov
xorl
sub
cmpl
mov
mov
mov
jmp
movl
movl
jb
push
call
add
movzwl
add
and
sub
xor
xor
add
mov
movzwl
or
mov
xorl
lea
not
or
xor
sub
andl
mov
addl
movl
movl
mov
and
add
imul
mov
andl
imul
xor
and
mov
div
adcl
sub
cmpl
movl
mov
jmp
movl
notl
jbe
push
call
not
addl
andl
xor
adcl
mov
cmpl
mov
mov
movzwl
jmp
mov
mov
jbe
push
push
pushl
push
call
add
adc
movzbl
and
sub
mov
add
mov
movl
movl
movl
xor
add
add
mov
or
mov
xorl
xor
div
sub
imul
cmpl
movl
movl
movl
jmp
movl
jb
push
push
pushl
push
call
and
mov
xor
sbbl
notl
adc
cmpl
movl
mov
movl
jmp
movl
movl
je
call
or
adcl
negl
sub
or
adc
xorl
adc
add
dec
mov
sbbl
xor
movzwl
sub
mov
xor
mov
div
and
xor
mov
movl
movl
and
movl
xor
movl
mov
mov
orl
sub
dec
shr
sub
cmpl
movl
movl
jmp
mov
notl
jl
push
push
push
call
add
sub
and
adc
adc
add
addl
sub
mov
imul
xor
mov
xorl
and
mov
andl
sub
orl
mov
mov
sbb
movl
xor
movl
xor
mov
add
or
mov
subl
or
and
sub
mov
mov
adc
mov
movl
movl
not
movl
or
movl
movl
movl
movl
notl
mov
cmpl
mov
movl
movzwl
jmp
movl
jl
pushl
push
push
push
pushl
call
and
subl
subl
sub
inc
cmpl
mov
movl
mov
jmp
movzwl
jg
push
call
mov
sub
not
sub
sbb
mov
or
add
cmpl
mov
movl
movl
mov
jmp
movl
jge
call
xor
mov
or
mov
and
subl
add
and
adc
sub
andl
mov
subl
sub
mov
andl
imul
imul
neg
mov
andl
or
mov
lea
xorl
push
subl
call
neg
mov
mov
sub
imul
and
add
and
andl
sub
or
xor
mov
orl
div
xor
cmpl
mov
movl
mov
jmp
movl
jg
pushl
call
sub
sub
or
add
mov
mov
sub
imul
xor
cmpl
movl
mov
jmp
movl
jb
pushl
push
pushl
pushl
pushl
call
xor
adc
sub
xor
and
mov
mov
sub
xor
cmpl
mov
movzwl
mov
jmp
movl
movl
jb
pushl
pushl
call
adc
andl
or
xor
incl
and
add
mov
movl
inc
movl
xor
or
xor
movl
sbb
movl
movl
cmpl
not
movl
movl
mov
jmp
mov
mov
je
push
push
call
xorl
adc
adc
and
sbbl
add
movl
mov
mov
sub
movl
or
movl
movl
adcl
movl
xor
movl
movl
or
mov
adc
mov
mov
add
mov
xor
and
neg
sub
sub
or
imul
cmpl
mov
movl
mov
jmp
mov
mov
jb
pushl
call
sbb
xor
add
mov
sub
xor
and
decl
mov
lea
sub
mov
mov
andl
mov
mov
xor
cmpl
not
movl
jmp
movl
notl
jae
pushl
push
push
push
push
call
sbb
orl
sbb
neg
xor
add
sub
orl
add
adc
mov
lea
and
mov
cmpl
movl
mov
mov
jmp
mov
ja
push
push
push
call
adc
movzbl
xor
or
or
movzwl
sub
sub
add
mov
cmpl
movl
movl
movl
mov
jmp
not
mov
jae
push
push
push
push
pushl
pushl
push
call
adc
xor
orl
sub
xorl
movl
movl
movl
sbb
movl
or
mov
mov
mov
sbbl
xor
subl
xor
mov
call
cmpl
movl
mov
not
mov
jmp
movl
movl
jle
pushl
push
pushl
call
add
movzbl
add
and
inc
neg
xor
xor
mov
mov
and
mov
mov
xor
xor
mov
adcl
call
or
or
cmpl
mov
mov
not
mov
jmp
not
mov
jne
push
call
xorl
mov
mov
sub
adcl
sub
sbb
sbb
mov
neg
mov
subl
xor
sbbl
xor
mov
adcl
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
sub
push
mov
mov
add
push
inc
mov
or
movl
jne
mov
xorl
mov
mov
add
mov
xor
adcl
div
mov
mov
movl
div
mov
jmp
mov
movzwl
or
mov
mov
adc
mov
mov
sbbl
shr
movl
rcr
orl
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
movl
cmpl
je
and
add
mov
mov
mov
mov
pop
pop
pop
leave
ret
movl
cmp
jae
cmp
movl
jae
shld
shl
ret
andl
mov
subl
xor
and
movl
shl
ret
xor
xor
ret
