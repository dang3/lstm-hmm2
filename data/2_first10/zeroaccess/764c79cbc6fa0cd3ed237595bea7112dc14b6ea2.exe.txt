push
mov
sub
andl
push
mov
movl
push
movl
push
call
adcl
test
movl
je
orl
xor
movl
jmp
subl
push
push
xor
subl
inc
subl
push
sbbl
push
xorl
call
test
movl
je
incl
xor
jmp
xorl
push
mov
addl
push
adcl
push
push
andl
call
test
movl
jne
sbbl
push
xorl
push
orl
call
andl
test
movl
jne
push
push
call
test
movl
jne
orl
push
push
sbbl
call
xorl
test
movl
jne
movl
push
push
push
adcl
call
test
movl
jne
push
subl
push
adcl
push
orl
call
decl
test
movl
jne
push
orl
push
call
subl
test
jne
addl
push
adcl
push
call
sbbl
test
jne
orl
push
push
orl
call
test
movl
jne
movl
push
push
push
call
test
jne
push
push
orl
push
movl
call
test
jne
sbbl
push
orl
push
call
test
jne
push
andl
push
subl
call
xorl
test
jne
push
subl
push
adcl
call
xorl
test
movl
jne
addl
push
orl
push
andl
push
call
adcl
test
jne
orl
push
push
push
call
test
movl
jne
push
push
subl
call
adcl
test
jne
orl
push
subl
push
call
xorl
test
movl
jne
push
push
sbbl
call
test
movl
jne
adcl
push
push
push
movl
call
test
movl
jne
adcl
push
push
sbbl
push
call
adcl
test
movl
jne
xorl
push
addl
push
orl
call
test
movl
jne
decl
push
andl
push
orl
call
test
jne
subl
push
xorl
push
andl
call
test
movl
jne
push
adcl
push
movl
push
xorl
call
addl
test
movl
jne
push
orl
push
addl
push
andl
call
test
jne
adcl
push
orl
push
subl
call
test
jne
orl
push
andl
push
call
xorl
test
jne
orl
push
orl
push
call
test
movl
jne
push
subl
push
adcl
push
addl
call
addl
test
movl
jne
addl
push
push
push
call
test
jne
subl
push
xorl
push
subl
call
notl
test
movl
jne
push
negl
push
call
xorl
test
jne
subl
push
notl
push
orl
call
test
jne
orl
push
push
andl
push
call
subl
test
movl
jne
push
andl
push
push
call
subl
test
jne
push
push
call
orl
test
jne
addl
push
subl
push
call
test
movl
jne
xorl
push
push
subl
call
test
movl
jne
push
push
push
movl
call
sbbl
test
movl
jne
push
andl
push
orl
push
call
andl
test
jne
push
orl
push
call
test
jne
push
subl
push
orl
call
orl
test
jne
push
push
call
test
jne
andl
push
push
push
call
movl
test
jne
push
sbbl
push
push
orl
call
test
jne
adcl
push
subl
push
call
test
movl
jne
push
adcl
push
movl
call
decl
test
movl
jne
xorl
push
movl
push
addl
call
test
jne
andl
push
push
push
xorl
call
orl
test
movl
jne
notl
push
orl
push
subl
push
xorl
call
test
jne
subl
push
subl
push
call
test
jne
push
xorl
push
call
test
jne
push
orl
push
addl
call
orl
test
movl
jne
push
orl
push
push
call
orl
test
jne
push
push
notl
push
adcl
call
sbbl
test
movl
jne
adcl
push
push
orl
call
sbbl
test
jne
push
addl
push
andl
call
xorl
test
jne
sbbl
push
addl
push
call
subl
test
movl
jne
push
orl
push
push
addl
call
test
movl
jne
push
incl
push
push
andl
call
movl
test
jne
addl
push
andl
push
call
test
jne
push
notl
push
call
test
jne
push
push
addl
call
test
movl
jne
xorl
push
push
adcl
push
sbbl
call
test
movl
jne
adcl
push
push
sbbl
push
subl
call
test
jne
incl
push
movl
push
subl
call
test
movl
jne
push
andl
push
addl
call
test
movl
je
addl
xor
jmp
movl
mov
mov
adc
mov
inc
mov
movl
lea
xor
mov
lea
dec
mov
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
adcl
mov
sbb
mov
xor
mov
mov
adc
mov
add
movl
mov
movl
mov
cmp
movl
jne
mov
mov
sbb
mov
xor
mov
mov
xor
sub
add
sbbl
mov
xor
mov
xor
add
andl
mov
xor
mov
mov
mov
mov
mov
mov
sbb
mov
mov
add
mov
mov
mov
not
movl
movzbl
add
mov
mov
orl
xor
orl
add
movl
jmp
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
adcl
mov
xor
andl
lea
orl
push
mov
and
mov
subl
xor
sbbl
lea
push
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
sbbl
pushl
andl
call
sbb
mov
mov
xor
lea
add
mov
mov
xor
xor
subl
add
mov
subl
xor
lea
mov
movl
cmp
jbe
sub
mov
xor
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
add
mov
or
mov
movzbl
sbb
mov
mov
sub
xor
movl
mov
mov
movl
cmp
jne
decl
lea
adcl
mov
lea
andl
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
test
movl
je
sub
mov
sub
mov
mov
mov
mov
sub
mov
mov
mov
andl
xor
add
inc
mov
cmpl
jne
call
cmpl
jb
orl
mov
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
cltd
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
mov
sbb
mov
add
adc
xor
andl
xor
mov
sub
mov
mov
dec
mov
mov
movl
xor
mov
mov
and
add
mov
adcl
xor
mov
mov
xor
movl
mov
movl
cmp
movl
jne
mov
mov
cmp
movl
je
mov
mov
adcl
mov
xor
addl
add
movl
adc
addl
xor
xor
movl
cmp
movl
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
inc
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
and
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
adc
mov
push
inc
mov
addl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
addl
mov
xorl
push
adc
mov
andl
add
cmp
movl
je
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jb
mov
xor
xor
add
add
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
jmp
xchg
add
xchg
mov
dec
ja
push
in
outsl
scas
jp
jp
dec
pop
jp
adc
pop
cmp
popa
cmp
mov
push
xor
fdivr
insb
inc
imul
jl
push
iret
pop
dec
cmp
cli
xchg
dec
jg
mov
sub
data16
push
jg
jmp
xchg
fimuls
mov
imull
add
push
cli
es
or
imul
pop
add
jo
les
sbb
je
arpl
xchg
pop
mov
repz
cmp
or
sub
xor
push
jecxz
mov
test
inc
push
dec
or
repz
faddl
push
stc
push
push
mov
inc
sbb
pop
adc
test
int3
xchg
jne
cmp
push
pop
loopne
lods
fs
mov
push
ds
pop
das
push
pop
inc
xor
outsl
out
rcll
xor
popf
out
push
mov
arpl
jmp
scas
xor
xchg
popf
jb
inc
pop
cs
pop
mov
sbb
mov
mov
jle
mov
mov
pushf
bound
fistpll
xchg
mov
in
mov
leave
cmp
int
adc
mov
popf
loop
std
maskmovq
idivl
adc
popf
mov
popl
or
pop
jae
iret
out
adc
lods
sbb
jnp
clc
mov
xchg
pop
push
add
xchg
sub
and
dec
cld
mov
mov
std
in
lock
mov
mov
dec
mov
xor
or
mov
push
cmpsb
mov
fst
das
add
stos
mov
pop
mov
add
clc
in
mov
mov
mov
popa
jne
cmp
sarl
adc
mov
cltd
mov
cld
xchg
loope
orb
jnp
icebp
sbb
bound
and
xor
xchg
pop
mov
lret
daa
pushf
jnp
or
shll
ds
push
xchg
pop
rolb
sbb
mov
inc
adc
cltd
popf
das
stos
inc
add
cmp
cmp
inc
test
jl
dec
adc
pop
mov
or
sbbl
mov
mov
jmp
or
push
fs
xchg
out
xorb
jnp
jmp
enter
imul
jb
fildll
xor
pop
je
cmpsl
pop
fstpt
dec
xchg
hlt
cmpsl
dec
bnd
pusha
and
and
mov
push
sbb
push
call
add
call
cmp
je
cmp
hlt
mov
imul
jmp
sub
sbb
fwait
lea
mov
dec
lret
int
mov
dec
in
jecxz
fwait
lret
sbb
inc
push
jp
adc
jb
push
push
fwait
sbb
je
add
test
out
mov
mov
setp
aam
lcall
mov
adc
xchg
jnp
scas
push
sbb
mov
mov
xor
sbb
sbb
in
cs
aas
cli
ss
mov
pop
mov
divb
cmp
test
pop
xlat
stc
outsb
jecxz
fdivr
and
jmp
mov
lret
pop
jl
mov
data16
and
cmpl
stos
inc
aas
aad
lds
push
lock
scas
sbb
inc
test
in
stos
enter
testl
lock
in
jbe
repnz
test
iret
mov
scas
jle
inc
cmp
jl
and
xor
in
bound
push
mov
shll
lret
in
push
cmp
mov
adc
in
lods
outsb
dec
pop
push
mov
sbbb
sub
mov
jp
sbb
lea
push
and
fisttpl
cli
dec
or
pop
fisttpll
dec
mov
bound
jle
mov
sbbl
imul
fidivs
sbb
out
mov
push
or
in
pusha
nop
das
scas
test
sub
es
lock
nop
outsb
popa
enter
and
jne
fwait
dec
popf
lahf
aad
push
mov
push
sti
pop
fmul
outsl
xchg
pop
inc
jecxz
mov
repnz
inc
jp
pusha
inc
into
loope
cmp
lcall
icebp
pop
pop
sahf
xrelease
push
cmpsl
sbb
ljmp
and
mov
pop
cli
inc
jno
add
jmp
add
sub
int
insl
adc
sub
lds
int3
lahf
pop
lods
mov
stos
dec
add
adc
in
in
lret
mov
pop
ficoml
xor
mov
push
inc
inc
pusha
in
xchg
inc
test
repnz
push
or
fimull
xchg
jae
mov
dec
push
fs
lcall
xorb
lcall
sbb
mov
inc
fsts
inc
insl
loop
pop
jg
jb
add
cld
pop
mov
fwait
xchg
xchg
cmp
inc
dec
and
sbb
and
in
sub
or
int
in
iret
xor
mov
shlb
dec
in
xor
mov
es
jne
inc
mov
jno
iret
cli
adcl
pop
mov
mov
data16
cmc
xchg
fsubl
fwait
inc
test
out
rolb
popf
mov
mov
adc
adcb
rcrb
clc
cltd
inc
mov
ja
and
movsb
cmp
loopne
push
adc
sub
flds
aad
in
lds
rcrl
xchg
test
cli
rcl
xlat
cltd
inc
xchg
or
mov
push
cmp
add
ret
int
mov
and
mov
dec
int
push
es
add
cmpsb
test
push
stos
xor
push
dec
add
pop
stos
push
insb
pop
jnp
fwait
nop
mov
ret
gs
in
and
cs
pop
push
ret
sub
fwait
jbe
icebp
aam
loop
mov
addb
push
lods
dec
mov
push
stc
lds
in
aad
sbb
lret
shl
aad
cmp
cltd
add
jne
mov
stos
sub
cmp
mov
and
test
mov
lret
out
and
pusha
out
fstpt
sbbl
xchg
repz
cmc
orb
outsl
or
fidivs
scas
out
into
ja
imul
mov
pop
jp
lea
adc
aad
test
mov
xchg
push
mov
dec
sbb
fsubr
mov
jnp
test
aad
pop
inc
std
dec
sbb
test
dec
push
inc
xchg
push
sbb
xchg
ret
cltd
or
cwtl
mov
jbe
add
gs
or
fiadds
sahf
shlb
cmp
movsb
shlb
rcl
mov
pop
pop
sub
adc
mov
in
daa
imulb
scas
std
mov
sbb
pop
jmp
xchg
pshufw
cmp
cmpsl
fs
jae
xor
fisttpll
push
xor
cmp
dec
and
sub
dec
mov
inc
test
aaa
xor
jge
cmp
inc
lret
mov
fdivl
inc
rorl
xor
mov
ss
and
fs
dec
sti
adc
mov
leave
mov
mov
sahf
ja
cld
lcall
xchg
iret
jnp
mov
in
xchg
jl
dec
test
int3
cmp
std
or
insb
mul
xor
or
aaa
pop
dec
adc
iret
loopne
xchg
les
in
and
push
xchg
adc
mulb
push
notb
add
out
inc
in
fisubrl
repz
jo
sub
ret
cmp
push
aam
pop
add
inc
es
rclb
fidivrs
or
mov
adc
pop
xor
addr16
popf
push
dec
insb
jmp
push
dec
mov
sarl
fsubrs
fidivs
sbb
mov
scas
mov
mov
aam
mov
lds
xor
add
aaa
outsl
push
cmp
stos
inc
and
lcall
dec
nop
scas
addr16
jmp
bound
mov
lret
fsubrl
addr16
push
and
ja
mov
out
gs
test
clc
xor
orb
ret
sbb
idivl
push
cmp
lcall
es
jecxz
mov
jbe
sub
shll
add
outsb
lahf
mov
inc
push
push
add
dec
mov
lea
rorl
cltd
cmp
jno
mov
dec
xchg
lcall
xchg
lret
mov
add
out
loop
dec
push
fimull
jns
inc
loopne
dec
or
jp
push
pushf
je
fldenv
dec
mov
xor
jns
mov
adc
test
and
pop
sbb
dec
enter
data16
jp
xchg
iret
jbe
add
add
add
lret
cli
sbb
push
mov
mov
inc
add
pop
aaa
and
in
push
dec
pop
mov
lret
push
call
je
jl
dec
sti
push
cwtl
lea
mov
idivl
repz
hlt
out
mov
push
sub
jnp
jns
ss
push
pusha
cmpsl
mov
fcoml
out
mov
imul
test
adc
fwait
mov
jmp
mov
shr
mov
pop
std
scas
push
mov
aam
jns
jcxz
movsl
add
loopne
mov
cld
dec
xchg
pop
lcallw
mov
fcomi
nop
sub
arpl
repnz
std
add
mov
andb
popa
jp
pusha
mov
mov
repnz
dec
in
mov
imul
das
pop
and
xchg
jecxz
xchg
pop
pop
jne
adc
add
hlt
roll
mov
mov
mov
adcb
cs
pop
mov
push
sub
sbb
sub
cmpsb
stos
and
xchg
mov
or
jo
xor
mov
add
ds
jae
cmp
aaa
and
jns
gs
cmp
icebp
mov
lret
dec
shrl
test
dec
push
ret
rorb
sbb
mov
inc
in
in
stc
in
pop
in
imull
jecxz
pusha
and
lods
iret
dec
xor
xor
jp
cs
pushf
loopne
cmp
pop
inc
jg
mov
movb
in
pop
icebp
shll
js
pop
push
in
loop
clc
pop
fldcw
mov
je
mov
sbb
fs
mov
mov
xlat
mov
or
pop
and
imul
push
adc
out
xchg
in
stc
insb
mov
notl
sarl
cld
jl
jno
shrb
cltd
decb
sbb
test
ss
addr16
sub
insb
dec
dec
scas
or
je
movsb
loop
inc
lods
hlt
mov
add
in
jnp
pop
cmp
lock
daa
fsts
loop
push
jmp
lea
jbe
fidivrs
dec
out
cmp
add
dec
pop
test
sub
shl
repz
push
flds
lds
gs
out
xor
xchg
arpl
mov
ljmp
jge
mov
lods
cmc
inc
insb
mov
stc
stos
xor
or
lock
jne
leave
inc
push
mov
pop
push
or
sub
fistps
inc
punpckhwd
fbld
jae
dec
rol
iret
xlat
ss
fstpt
icebp
fisttpll
cltd
cmpsl
insl
push
inc
popa
sbb
lods
dec
and
push
lea
fcmovu
fwait
lea
push
mov
cmpsb
add
sub
xchg
mov
in
xchg
and
mov
add
pop
js
jmp
int3
push
stos
nop
and
jecxz
adc
lods
aad
popf
mov
js
and
mov
pop
sub
out
fimull
mov
lret
fcompp
xchg
fimuls
ret
inc
pusha
inc
mov
insl
std
into
jge
negb
mov
sub
cmp
dec
mov
or
jae
arpl
push
dec
pop
add
loop
movsb
stc
shll
mov
lcall
mov
mov
cmp
jl
pop
popf
in
pop
ds
sub
sub
adc
insl
jmp
mov
inc
jns
mov
and
mov
jl
out
add
xchg
fisubl
lret
fs
nop
fwait
das
lret
clc
or
jle
into
cmpsb
xorl
cmc
mov
lea
inc
push
sbb
pop
xorl
out
mov
or
mov
add
les
shrb
lret
mov
adc
fisttps
push
jns
mov
dec
ds
or
lods
shl
outsb
xchg
cmp
sub
sbb
pop
xchg
js
xchg
jns
js
popf
push
push
push
arpl
and
dec
adc
outsl
mov
or
andb
jae
mov
and
cmc
push
leave
jecxz
lcall
lret
pop
sub
lds
lcall
lds
sub
ljmp
outsb
push
add
pop
xor
jmp
or
shl
ss
test
cmpsl
sub
idiv
and
mov
sahf
mov
ljmp
popa
inc
dec
dec
ret
int
xchg
adc
mov
jbe
iret
lcall
mov
xor
out
jmp
test
fcmove
ror
lods
or
aas
jmp
outsb
push
fsubrs
mov
testl
fs
adc
subb
je
les
cmp
sbb
shr
daa
push
pop
pop
or
inc
xlat
push
pop
nop
sarb
and
les
icebp
sub
ljmp
int
sub
enter
xor
arpl
cmp
aas
add
call
push
dec
shl
popa
mov
ja
je
xor
das
mov
cs
sub
push
jp
cmpsb
cmpsb
cmp
pop
mov
xor
arpl
cmpl
jae
das
loop
daa
popf
mov
int
cli
adc
stos
pushf
inc
icebp
testl
mov
dec
pop
or
int3
pop
sbb
ds
mov
ficomps
dec
mov
test
popf
push
popl
add
std
daa
xorl
int3
cmp
in
push
sbb
shrl
das
cmp
mov
jp
out
pop
mov
cwtl
mov
push
fxch
jl
push
imul
and
add
add
xlat
cmpsl
std
xor
xor
clc
stc
push
or
sub
xchg
mov
ljmp
imul
fnstenv
outsb
pop
pop
mov
pop
test
loope
pusha
clc
or
pushf
and
mov
es
je
out
out
mov
pop
jg
hlt
std
hlt
and
stos
dec
iret
gs
stos
roll
pop
mov
and
les
xchg
leave
sbb
adc
pop
xor
fnsave
dec
jmp
pop
ljmp
jnp
and
jp
or
stos
add
popf
xor
or
daa
dec
xchg
das
sub
jno,pn
mov
add
mov
les
cli
dec
mov
xchg
push
popa
mov
mov
mull
mov
repz
test
test
pop
cld
pop
popa
fcmovnb
fcom
imul
xor
push
test
and
stc
fdivl
inc
and
ss
dec
fistps
daa
mov
and
sbb
push
dec
out
addl
mov
lcall
mov
add
scas
repz
push
adc
sbb
lods
andps
push
sbb
das
push
jb
imull
add
lret
and
in
and
in
movsb
cmp
lret
inc
cmp
test
lock
pop
ss
pop
sti
mov
in
mov
call
aad
test
cmp
add
or
sbb
mov
cmpsb
cmp
in
push
xlat
jp
and
shl
test
mov
iret
jo
push
xchg
lahf
mov
subl
or
mov
xchg
push
ja
and
leave
pusha
xor
sbb
lcall
test
rcl
adc
in
ret
mov
call
xor
loopne
jb
or
push
lcall
sti
ficomps
and
mov
jne
mov
ds
sub
insl
push
sub
pop
and
add
sub
push
push
jo
and
xorl
cltd
aad
popf
shll
dec
xor
loopne
xchg
addl
lea
lods
ficompl
push
insl
dec
mov
pop
inc
fs
enter
lock
fsin
lcall
sti
or
mov
mov
push
jecxz
pop
pop
outsb
hlt
lcall
outsb
add
mov
enter
test
mov
nop
pop
xchg
inc
sbb
jmp
push
stos
xchg
pop
pushf
bound
add
nop
adc
test
push
mov
dec
cmpb
cs
mov
sbb
sub
and
ss
outsl
or
or
imul
stos
hlt
std
push
inc
push
mov
push
mov
and
es
push
ret
ja
adc
cmp
xchg
lods
jle
sbb
jb
fcoml
fsts
daa
aas
or
fisubl
arpl
or
and
mov
test
jp
adc
aaa
ljmp
add
pop
cmp
in
or
cmp
lea
in
mov
mov
cltd
or
clc
adc
xor
aad
ret
mov
icebp
enter
shll
pop
dec
arpl
mov
shll
adc
insl
pop
fwait
addr16
xorb
xchg
repz
fsubl
shr
xchg
push
in
dec
add
orb
pop
std
xchg
and
sti
push
pop
jge
lods
scas
or
jmp
cmp
aam
divl
pop
xlat
xor
ja
xchg
shrl
scas
es
test
jno
adc
adc
and
mov
xchg
xchg
and
lahf
dec
or
push
add
xor
push
add
ja
xor
pop
data16
push
sti
add
sbb
cld
inc
jbe
fbstp
faddl
or
mov
int3
sbb
iret
int
xor
dec
mov
xchg
lret
fdivp
stos
bound
push
or
add
xchg
jne
gs
icebp
jmp
jno
test
sub
inc
mov
out
fs
inc
bound
dec
lcall
push
mov
and
sbb
add
jbe
hlt
nop
imull
push
add
in
adc
xchg
mov
cli
mov
jo
std
or
jo
incl
adc
stc
aam
xor
jns
add
inc
mov
lds
filds
and
movsl
push
mov
mov
mov
xor
enter
jne
fildl
inc
xor
scas
mov
stc
fstpl
jl
fidivrl
aaa
cmp
ljmp
jmp
loopne
ficomps
xor
and
lret
pop
mov
jbe
fdivl
ficompl
mov
mov
shlb
out
dec
inc
icebp
jle
xor
mov
mov
jmp
mov
dec
out
inc
jno
fs
js
ja
pop
push
mov
sar
push
inc
andb
adc
loopne
pusha
push
jno
mov
jnp
pop
xor
mov
cmp
divl
jp
add
cmp
xlat
cwtl
and
xor
inc
fisttpl
dec
subl
test
pop
dec
push
pop
test
and
fnstsw
ds
add
lret
mov
cmp
adc
pop
xlat
lret
sub
bound
stos
push
adc
inc
icebp
popf
outsb
xchg
das
jp
and
negl
arpl
push
adc
jmp
push
insb
out
push
jg
movsb
adc
pop
or
push
or
fldenv
insb
xor
inc
loopne
ljmp
loopne
lahf
push
inc
add
ja
repz
pushf
cmpsl
jnp
mov
shlb
push
dec
mov
and
jle
sbb
mov
shrb
sbb
ja
movsb
push
and
fwait
loope
sub
mov
gs
das
aam
add
mov
add
adc
shr
push
scas
fdivs
dec
rolb
add
inc
mov
inc
xor
add
shrl
or
int3
cmp
jecxz
mov
or
jge
xor
jo
mov
ret
xor
pop
add
shr
sub
cmpsl
shl
inc
mov
subl
mov
scas
and
pop
cmp
repnz
test
into
lret
aam
shlb
push
test
mov
out
inc
mov
in
frstor
push
dec
push
lahf
addr16
sub
inc
fldenv
enter
aaa
das
mov
dec
pop
jne
ret
fs
ror
mov
fwait
cmpsb
add
mov
pop
fstl
repz
aaa
sarl
inc
stos
or
sahf
dec
cltd
pop
dec
inc
testb
in
mov
push
xchg
rorb
sbb
aad
fwait
sub
rcl
xor
jbe
cld
mov
in
push
gs
and
sbb
and
mov
or
inc
inc
xor
leave
int3
and
movsb
out
mov
insl
lea
xchg
movsb
aas
xor
adc
or
sub
adc
and
jb
testl
add
xchg
repnz
sbb
int3
add
mov
adc
into
mov
inc
stos
and
vpor
lods
rcll
lods
add
scas
cmp
add
xchg
mov
shll
fbld
dec
push
outsb
mov
adc
std
gs
jo
and
rorb
imul
push
push
ret
sub
cmp
lret
fwait
push
xchg
xor
xlat
das
xor
dec
imul
fstps
mov
xlat
shlb
xchg
pop
mov
pushf
mov
cld
sbb
cmp
sub
stc
out
scas
cmp
push
daa
addr16
repz
jns
mov
das
fisubl
sub
pop
adc
lret
rcll
mov
push
push
mov
scas
mov
dec
stc
mov
repz
rclb
dec
inc
pop
fcmovnb
pop
das
rorb
std
mov
lcall
test
mov
mov
outsb
cmp
sbb
and
or
in
mov
mov
out
das
push
fisttpll
pop
pop
pusha
mov
mov
nop
repnz
cmp
shlb
mov
ret
jnp
cmp
cmpsb
and
adc
enter
leave
out
fisubl
push
nop
jns
or
mov
fimull
xchg
mov
jecxz
and
dec
pop
xor
pop
sbb
mov
int
inc
adc
or
fimuls
dec
mov
mov
jo
loope
addl
pop
shrb
push
pop
sub
add
or
dec
lods
test
cmp
ljmp
or
out
stos
xchg
test
repz
mov
pop
arpl
movsb
lret
dec
es
pop
xchg
ja
sub
and
movsb
aaa
sarl
pushf
stos
xchg
mov
and
icebp
ret
aad
ret
add
xor
js
fsubr
mov
and
imul
pop
dec
pushf
iret
in
mov
jmp
inc
jbe
les
pop
mov
int
sub
aam
push
es
pop
lret
lds
jp
movsb
fisttpl
cmpsb
mov
mov
sbb
lods
push
ljmp
imul
xor
outsl
mov
xchg
shll
into
push
outsb
scas
dec
ds
aam
dec
les
jno
jp
fisttps
add
add
jg
xor
je
ret
inc
iret
lods
mov
movsl
dec
or
add
sub
movsl
cmc
dec
test
int3
int
vpunpcklbw
push
jb
cmc
xchg
aas
aad
out
cli
xchg
into
inc
cmp
pop
inc
test
adc
xchg
pop
faddl
imul
push
xchg
xchg
jb
mov
mov
sbb
repz
mov
mov
mov
out
aad
repnz
xor
add
inc
cmp
sbb
lods
jle
iret
test
xor
in
insb
loopne
adcb
gs
push
sbb
lods
movb
pushf
hlt
out
movsb
cs
jno
dec
adc
push
dec
pop
cmpsl
xor
lcall
clc
test
pusha
lret
arpl
adcb
cmpsb
pop
fistpll
roll
jmp
or
cltd
xrelease
pop
pop
mov
mov
mov
push
movsb
mov
gs
pop
mov
stos
stc
fld
repnz
push
sub
mov
sub
iret
and
fisubrl
lret
mov
cli
ret
jecxz
in
roll
push
push
daa
mov
xchg
pop
push
cmp
push
cmpsl
fisubl
insb
stos
mov
shlb
bound
addr16
movsb
cmp
sub
jno
inc
mov
cmpsb
cmp
jo
stc
imul
sbb
mov
cmpsb
inc
lahf
scas
mov
popf
cld
jg
sub
push
jecxz
jno
xchg
inc
popl
lret
std
dec
jb
ja
cwtl
jle
add
and
sbb
movsl
or
data16
mov
xchg
pop
adc
xlat
mov
fbld
push
sbb
or
cmp
in
push
dec
cmpb
lret
js
dec
test
das
mov
gs
pop
cld
mov
aam
lahf
scas
xor
ljmp
ret
inc
xlat
and
pop
test
push
and
sub
xchg
push
hlt
lods
xchg
rol
sbb
dec
cli
imul
inc
cltd
movsb
lret
dec
push
cmp
inc
fwait
cmpsl
ficomps
cmp
in
cmc
mov
adcl
sahf
int3
cmp
pusha
jle
lret
cmc
cltd
out
cli
loop
and
insl
out
pop
adc
into
sub
fmuls
lahf
and
cmp
mov
dec
or
pop
pop
jmp
cmp
jmp
xlat
test
mov
fldl
jecxz
pop
mov
xchg
sub
pop
and
dec
out
xchg
fildl
dec
mov
xlat
std
iret
pop
adc
cmp
adc
enter
mov
and
inc
pusha
xchg
xchg
push
ficomps
nop
mov
jno
shl
imul
ljmp
cltd
add
cli
mov
lock
fstps
mov
loope
sub
insb
shl
scas
out
cmc
cmp
adc
int3
sub
faddl
int
lds
stos
ja
inc
into
inc
pop
ret
stos
lret
cmp
sbb
aas
add
fsts
out
lcall
mov
mov
stos
jmp
xchg
lds
shl
cltd
in
cltd
outsb
jo
mov
xlat
xor
cli
mov
dec
stos
xchg
and
je
cs
shrl
or
rclb
dec
test
mov
clc
xor
jno
mov
iret
pushf
pop
xor
pop
mov
stos
add
imulb
outsl
cmp
fisttps
cs
or
cmp
adc
fs
cld
adc
inc
out
mov
les
stc
icebp
imul
in
push
jp
idivb
cmpsb
test
add
xchg
fadds
sub
mov
xchg
outsb
int3
int3
mov
jecxz
out
aad
mov
mov
jo
xchg
fsts
mov
xor
cmpsl
cmpsb
adc
push
std
cmc
out
adc
sub
jno
fmuls
mov
roll
imul
cmc
loop
or
pusha
in
jl
mov
adc
xchg
daa
es
aad
insl
sysret
cltd
xchg
scas
push
push
mov
es
mov
rclb
cmpsl
jb
test
fcmovu
adcl
aaa
sub
hlt
aam
sub
push
inc
cs
mov
adcb
mov
mov
mov
push
lock
lods
enter
mov
xchg
pushl
and
inc
scas
cmp
ja
fwait
dec
dec
jmp
sub
dec
and
fistps
stos
das
fdivl
daa
iret
insl
lea
mov
ljmp
sbb
mov
adc
jne
jae
pop
pop
clc
adc
pop
out
aam
repz
movsb
or
mov
movsb
and
pop
movsb
mov
jg
out
add
nop
cs
inc
shr
pop
mov
or
cmpsb
ret
int3
in
xor
jae
inc
mov
fcom
sub
enter
inc
push
pop
outsb
inc
sti
adc
ret
les
iret
insb
cld
adc
xchg
test
mov
daa
jp
dec
pop
xlat
ja
pop
fxch
test
jg
mov
test
jecxz
jmp
insl
mov
add
cmp
daa
lods
push
push
dec
xchg
mov
stc
jge
and
xchg
adc
testb
fisttpl
cmpb
loop
mov
cmpsl
dec
lahf
push
repnz
or
dec
loop
frstor
sub
stos
mov
fdivl
push
dec
imul
cltd
xchg
in
add
mov
lods
add
test
or
add
cmp
mov
es
inc
pusha
and
es
or
sbb
test
lret
or
dec
daa
repz
ffree
sbb
mov
cmc
fcoml
int
ljmp
jno
mov
ret
mov
enter
out
and
lea
daa
lods
cmp
je
or
mov
ss
mov
and
mov
mov
aam
xor
in
jbe
lcall
adc
insb
imul
pusha
loop
cld
and
test
jp
loop
fbld
scas
mov
fs
xorb
lcall
ljmp
test
in
insb
and
mov
neg
leave
std
mov
insb
sub
in
sbb
int
mov
cs
in
add
xlat
cmpsb
add
repnz
in
jl
ret
jb
sub
sbb
pop
loopne
out
lods
jmp
and
rcll
dec
push
in
fwait
push
les
jle
mov
lcall
push
icebp
sub
push
shrb
outsb
lret
lea
lret
dec
sbb
fildl
movsb
sti
aam
pop
dec
lret
mov
mov
add
dec
xchg
lcall
nop
addl
sbb
int3
aaa
ror
out
data16
inc
push
inc
outsb
inc
dec
add
xor
pop
sub
dec
stos
test
jge
fs
fimuls
jl
xchg
and
mov
xor
cmpsb
mov
repnz
nop
add
sub
jbe
mov
in
pop
fcomps
cli
sub
and
cld
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
sub
movl
mov
movsbl
or
mov
sub
sub
mov
xor
mov
sbbl
xor
movl
cmp
movl
jne
xorl
mov
andl
push
mov
xorl
add
mov
and
mov
mov
add
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
subl
push
push
push
lea
push
lea
adcl
jmp
outsl
or
or
outsl
ss
dec
pop
jp
ljmp
in
je
jge
adc
push
sbbl
inc
dec
lret
xor
pop
inc
sbb
sub
cmp
pop
mov
and
inc
imul
mov
mov
repnz
pop
xchg
test
adc
xor
or
hlt
add
sbb
fmuls
cmp
divl
pop
jp
inc
sub
cwtl
or
std
adc
movb
sti
call
adc
add
or
mov
mov
jmp
mov
push
xor
or
outsl
cmp
push
mov
and
loope
pop
xchg
call
jg
outsb
out
jae
jnp
aam
push
ficomps
push
mov
lret
cli
push
fcmovnu
arpl
cmp
ret
jge,pn
xor
xor
or
or
subl
push
jg
and
mov
les
xchg
push
scas
je
out
xorb
scas
repz
pop
ljmp
lods
popa
or
ret
movsl
xor
mov
push
ret
inc
jge
fimuls
in
xchg
int
or
daa
xor
shrl
pop
hlt
jmp
push
fcoms
ret
pop
sahf
adc
leave
testb
sub
lret
jo
pop
mov
pop
loopne
xor
dec
popa
out
pop
jnp
in
scas
add
sub
push
jb
mov
pop
xor
dec
push
push
scas
lcall
adc
push
push
bound
mov
sub
xor
rcrb
push
jb
pushf
shl
shr
jle
jecxz
fcomp
gs
bound
jmp
cmp
sub
jmp
xor
jmp
negl
mov
mov
xchg
ret
push
sub
mov
fdivl
mov
in
or
addr16
sbb
mov
arpl
rcl
mov
out
adc
loopne
pop
mov
fisubs
sub
daa
dec
jns
sub
int3
jno
cmp
popf
mov
imul
mov
test
sti
js
push
or
lret
push
ret
mov
xor
fidivrl
in
inc
aam
je
add
push
and
jnp
popa
arpl
scas
imul
scas
fnstenv
cmp
xchg
stos
lods
fmull
roll
mov
std
push
andl
pop
insb
mov
mov
push
outsl
pushl
hlt
frstor
lcall
jns
sbb
jno
add
mov
popf
jne
scas
das
xchg
aad
push
or
mov
lahf
mov
movb
or
mov
cli
lods
das
testl
repnz
jno
xchg
add
jg
sahf
addr16
xor
inc
pusha
and
or
nop
fldcw
or
pusha
lea
ljmp
xchg
imul
xchg
leave
mov
repz
xchg
xchg
mov
cmc
mov
rclb
stos
loop
out
xor
xchg
cltd
xchg
sub
movsb
es
outsb
push
subl
jl
xchg
ret
repz
insb
mov
icebp
lock
lret
lock
add
pop
cmp
mul
aad
mov
leave
lock
mov
cmp
xor
jbe
mov
sti
fcomp
outsb
out
test
jbe
sarb
mov
dec
add
test
mov
scas
and
xlat
inc
mov
movsl
sbb
mov
cld
cmp
out
ret
dec
maskmovq
idivl
jp
sbb
popf
sub
in
cmc
sub
push
mov
dec
adc
adc
inc
inc
lock
mov
push
sub
rcll
mov
movsl
stc
cwtl
xchg
cld
mov
jnp
or
mov
out
hlt
mov
mov
es
inc
and
in
nop
addr16
xchg
jl
add
xor
repnz
jl
xchg
repnz
push
in
xor
inc
sti
outsb
xchg
cmp
test
adc
cmp
mov
sub
cmc
outsb
shrl
mov
xchg
sti
jmp
les
inc
jg
ret
push
pop
xchg
pop
push
sarb
dec
cld
addr16
or
stc
mov
lock
aad
add
test
daa
loop
cs
mov
jae
loopne
mov
fstpt
jge
and
addr16
ror
xor
dec
xchg
mov
mov
add
ljmp
out
and
adc
pop
pop
bound
icebp
sbb
decb
mov
in
lahf
addb
xchg
sub
mov
or
std
test
clc
sub
lcall
and
test
xchg
leave
cmpsb
dec
xor
into
cmp
push
aad
mov
movsl
out
and
xchg
scas
add
pushf
cmpsb
push
cmp
adc
ja
xchg
or
enter
mov
and
into
ret
jle,pt
inc
subl
sub
mov
jae
jp
pop
dec
xor
push
nop
outsb
xchg
mov
lock
shr
or
mov
mov
sub
pop
lods
jle
scas
pusha
int
cmp
lret
ljmp
cmpsb
mov
push
push
rclb
add
sarl
das
loop
pushl
adc
fsub
pusha
mov
xor
push
popa
sub
mov
ret
sbb
mov
cld
sbb
pop
arpl
xchg
decb
mov
inc
inc
dec
popf
and
cmc
popf
pop
mov
fcmovne
xor
add
fcmovnbe
mov
scas
scas
dec
popfw
adc
cmp
cmp
dec
or
push
and
sbb
in
or
aaa
sub
aad
push
sub
sbbb
popa
pusha
jmp
lret
and
rolb
xor
and
xchg
mov
xor
aas
push
fnsave
inc
push
loopne
add
xchg
xor
or
push
mov
mov
pop
mov
push
jb
inc
cmovs
lret
int
gs
adc
test
ja
bound
pop
jnp
lahf
les
add
jl
clc
test
and
movl
sub
mov
or
iret
mov
pop
xor
sbb
ret
jle
fsts
cmp
dec
shrb
jo
adc
std
in
or
inc
mov
dec
scas
pop
xchg
and
cmp
pop
rcrb
scas
test
add
jae
fcomps
push
mov
test
les
jecxz
pop
mov
popf
sub
out
div
jno
pop
stc
iret
cmp
aad
or
inc
mov
mov
sub
adcl
shrb
xchg
inc
test
jle
pushaw
xor
repnz
sub
jg
cltd
xchg
sub
dec
fstl
aas
pop
ret
xor
xchg
andb
fistpll
mov
leave
rorl
and
mov
leave
push
lahf
pushf
stc
jp
ja
sbb
mov
icebp
lret
aas
pop
mov
or
pop
adc
cmpb
jp
setl
pop
lods
mov
xchg
iret
dec
push
aam
bound
sti
pop
xchg
mov
loop
sub
loopne
ret
pop
outsl
enter
pop
fmuls
lea
sbbl
sub
mov
sbb
les
mov
lret
cs
xchg
fnsave
sbb
add
stos
inc
xchg
stos
mov
subb
push
mov
rorl
mov
lret
inc
out
mov
js
mov
xchg
negw
push
gs
cmp
sbb
mov
clc
scas
shll
push
sub
jle
or
dec
sbb
sbb
add
in
fadds
mov
pop
jae
data16
lahf
push
test
or
repnz
push
and
jl
mov
jmp
iret
xchg
inc
cltd
sbb
lcall
mov
fstps
mov
stos
or
loope
dec
mov
and
xchg
js
and
repnz
js
insb
leave
pushf
stos
or
sub
pop
pop
rcrl
xor
js
popa
test
inc
xlat
and
aam
push
hlt
loop
inc
push
popf
sub
in
icebp
aas
scas
adc
mov
xor
das
addr16
repz
dec
pop
fcoms
fildl
lods
mov
fnstsw
cmp
jle
mov
mov
pop
test
out
repz
test
sub
fisubrl
mov
push
jo
scas
sahf
outsb
mov
loope
sahf
cs
cmp
cs
xor
loopne
fidivl
jge
out
xchg
cmp
mov
mov
sbb
push
push
add
add
inc
icebp
cltd
test
adc
mov
cltd
bound
xchg
cs
loopne
mov
mov
stos
cmp
lea
loop
cmp
inc
dec
es
pop
negl
jge
push
cwtl
popa
pop
popf
or
pop
sbb
jg
and
outsb
lcall
jp
les
xor
xchg
lcall
lret
xchg
jbe
push
mov
sub
push
pop
iret
imull
arpl
je
push
jno
and
ss
sub
cli
or
mov
pusha
push
push
jge
inc
leave
addb
and
dec
leave
mov
inc
xor
ljmp
stc
or
popw
jb
push
fidivrs
fcomip
pop
inc
sub
jb
fstl
jecxz
in
je
sbb
jmp
imul
dec
out
testb
lea
xchg
add
xchg
xchg
div
popa
aam
movsl
add
neg
movsb
cltd
and
cwtl
call
and
xor
cmp
cmpsb
pop
and
shll
int3
xor
sub
and
jecxz
clc
sbb
test
lods
icebp
pop
jb
and
inc
dec
or
adc
aas
cltd
int
test
and
xchg
sbb
pop
dec
out
cmp
push
mov
aas
jns
jecxz
xchg
stc
mov
out
inc
ret
adc
fucom
inc
fcmovnu
les
mov
cmp
pop
js
xchg
mov
pop
xchg
dec
mov
xlat
mov
fwait
lock
dec
clc
in
or
xchg
pop
imull
xchg
repz
mov
xchg
vmulpd
add
mov
addr16
add
xchg
enter
adc
movl
and
and
mov
cmpl
jl
pop
sub
fidivrs
out
dec
xor
pop
xorb
jle
or
mov
cli
inc
int3
sti
add
int
lret
sub
jle
inc
adc
hlt
arpl
mov
mov
pop
clc
jae
or
inc
cmpsb
sbb
xchg
pusha
mov
jmp
stc
stos
insb
mov
jecxz
xlat
fsub
add
fwait
push
jmp
nop
test
popl
test
cmp
xor
shlb
aas
xlat
mov
shlb
shll
fisubrs
jp
ds
push
mov
pusha
cmp
ss
cmp
or
popa
adc
icebp
dec
js
out
and
lock
scas
cmp
je
push
sub
push
je
fcmovbe
xor
int
push
dec
icebp
inc
pop
lds
or
mov
cmpsb
adc
ss
pop
add
loop
xlat
push
jmp
xchg
push
xchg
test
cmp
push
out
add
cmp
sub
inc
fbstp
xchg
dec
mov
or
je
lret
push
push
cmp
ss
data16
jge
sub
push
pop
sbb
lds
dec
test
add
jecxz
or
jns
shrl
aad
inc
sbbb
mov
pop
inc
pop
jl
mov
cmpsb
mov
ljmp
xchg
bound
int3
pop
imul
loop
int3
xchg
std
xchg
in
mov
jae
daa
mov
lea
push
ljmp
push
mov
xchg
sub
subb
stc
out
push
aam
dec
cmp
adc
cmp
daa
sbb
push
jne
repz
sub
in
push
lret
jns
int3
repnz
inc
out
mov
push
addl
outsl
leave
out
dec
sub
sub
pop
mov
inc
orb
imul
inc
sub
or
xor
inc
negb
pop
cmc
or
pop
movsl
out
adc
xor
push
mov
shll
mov
in
pop
push
dec
xchg
les
sahf
dec
sbb
aad
call
cmpsl
daa
ret
cmp
adcl
sahf
pop
out
repz
sbb
push
xchg
jge
movsb
jno
repnz
fwait
dec
pop
adc
lret
popf
lock
cmp
mov
outsb
xor
inc
and
or
xchg
xchg
clc
xchg
mov
dec
cmpl
shlb
stos
and
stc
cld
xchg
stos
loopne
popa
inc
lods
lock
icebp
lock
addr16
cld
cltd
loopne
xchg
sbbb
test
out
lret
cmp
mov
cwtl
jp
mov
loop
xor
sbb
xchg
push
test
ds
enter
cmp
add
sub
pop
pop
lret
jecxz
and
jle
dec
mov
insl
xchg
or
into
inc
cwtl
int3
mov
mov
in
sub
clc
jae
imulb
mov
mov
in
mov
packuswb
ljmp
adc
push
sbb
lret
sbb
and
inc
ret
mov
dec
mov
popa
jle
insb
mov
fidivrl
cld
push
push
add
rcrb
out
lret
jnp
fisubs
cli
inc
out
lods
stc
loopne
arpl
add
test
dec
stos
js
and
jae
aad
cld
mull
mov
jno
pop
adc
pop
pop
fdivp
pop
cmpb
or
push
clc
jmp
adc
xchg
adc
or
icebp
fs
add
stos
push
enter
js
fcmovnb
daa
shlb
and
jge
sub
sbb
cmp
adc
pop
mov
scas
std
fimull
shr
pop
push
push
or
loop
or
int
mov
test
arpl
ljmp
mov
pusha
gs
inc
push
mov
xor
jecxz
subl
push
pop
inc
cli
lret
add
push
in
sbb
pop
mov
test
jg
cmp
scas
loop
cmpsb
dec
lds
mov
shlb
jmp
pop
popa
mov
in
ss
mov
int
mov
mov
fucomp
jge
fadds
pushf
and
sbb
imul
sbb
or
adc
nop
rcr
mov
mov
out
add
inc
rclb
or
push
jns
add
insb
or
call
jo
mov
mov
sarb
das
xor
icebp
xor
jecxz
fxch
orl
adc
xchg
dec
aaa
int
sbb
hlt
adc
dec
pusha
stos
loop
cmpb
cmpb
mov
mov
cmpsl
sbb
imul
or
shll
je
push
lods
add
adc
dec
rorb
popa
lret
ja
les
inc
pop
inc
xchg
popf
cmp
pop
addr16
in
sub
mov
out
loope
mov
decl
xchg
out
mov
in
call
lahf
push
js
jb
mov
xchg
inc
mov
lahf
pop
insl
xchg
cltd
lock
cmp
cwtl
fsubp
cmc
mov
mov
or
ljmp
stos
pop
mov
stos
jl
into
sbb
ljmp
imul
ror
outsl
or
cmp
stos
dec
rcll
stos
popf
push
stos
xchg
insl
xchg
xor
scas
adc
gs
out
pop
stc
sub
repz
leave
push
cmp
pop
and
in
rcr
inc
mov
daa
pop
mov
ret
imul
or
sbb
clc
xchg
cmp
fucom
or
cmpl
xchg
inc
fsubrs
mov
push
fwait
lret
outsb
aaa
pop
mov
loope
sub
ss
aam
jnp
add
cmp
fildll
je
adc
sbb
aaa
pop
jo
pushf
cmp
jbe
adc
sbb
add
push
clc
sbb
dec
dec
mov
int
ret
out
addr16
xor
test
stos
addr16
lea
lahf
lcall
mov
imul
int3
repnz
mov
adc
mov
mov
jp
fcompl
jae
dec
push
and
push
and
mov
lahf
sbb
fldenv
mov
mov
in
shll
cwtl
xor
jne
test
sti
je
cld
mov
dec
xlat
loopne
shll
mov
ja
mov
push
sbb
fidivs
cmpsb
jne
push
lock
add
xor
test
loope
mov
imul
add
lds
aad
cmc
xchg
xchg
shlb
ret
sub
movb
rcrl
mov
clc
sub
jle
ss
ret
lahf
mov
loop
in
mov
push
add
push
js
mov
cmp
iret
pop
call
lahf
das
mov
jp
or
clc
lock
mov
cmpsl
jb
insl
loope
sti
adcl
xchg
lahf
movsl
movsb
cmpb
repnz
notl
addb
ficompl
rcl
cwtl
mov
pop
xlat
fisubrs
clc
pop
enter
std
inc
lcall
test
jnp
fdivr
fimull
ret
sub
mov
fnstsw
addl
aad
pop
sub
ret
ljmp
dec
mov
in
mov
adc
sti
addr16
mov
and
cmc
aam
les
and
fs
dec
stos
pop
icebp
adc
inc
adc
add
jo
xchg
lods
push
jb
push
push
dec
mov
shl
add
mov
cmp
and
inc
notl
stos
dec
cld
mov
aam
mov
sub
jp
lds
mov
adc
push
iret
mov
cmp
push
cmp
dec
sbb
sbb
xchg
push
inc
sub
repz
dec
cwtl
mov
fdivrs
add
out
push
clc
sysexit
ds
sbb
mov
mov
xchg
lea
cmp
sbb
jns
jo
test
in
sub
adc
mov
imul
loope
in
shl
push
xchg
push
pop
loope
pop
out
or
pop
push
dec
sbb
push
out
loope
xor
dec
lods
rcrb
out
mov
mov
lds
push
push
ret
xchg
push
outsl
mull
or
xchg
pop
push
inc
sub
dec
loop
or
lock
or
mov
mull
hlt
sahf
sbb
cli
nop
xchg
xor
lods
mov
xchg
dec
daa
xor
ret
iret
clc
int
sarl
out
out
enter
fiaddl
dec
mov
fs
sub
lods
fsubr
xor
inc
mov
in
lock
mov
or
sub
insl
lcall
nop
inc
mov
add
mov
xor
je
xchg
mov
aad
lahf
cltd
mov
mov
scas
rsm
dec
push
dec
mov
cmp
imul
into
ljmp
mov
clc
aaa
adc
inc
not
sub
pushf
push
aas
pop
push
xchg
sbb
xor
and
xor
xor
mov
cmp
cmp
mov
fnstcw
addl
sub
loopne
out
negb
mov
imul
insb
xor
adc
fldt
cmpsl
hlt
dec
andb
inc
loope
mov
sub
rcrl
aas
sub
push
pop
in
adc
inc
push
or
xchg
and
xor
jns
std
pop
sbbl
inc
ds
mov
cmc
xor
push
jae
and
sbb
into
jl
and
fisubrs
jnp
dec
call
jle
inc
cmp
movb
inc
rcll
es
aaa
nop
ljmp
mov
push
mov
add
mov
add
mov
lahf
loopne
push
and
and
iret
iret
or
sahf
sbb
pop
cld
mov
mov
push
je
dec
push
xchg
stos
and
aaa
push
mov
lds
in
cmpsl
and
dec
mov
stos
jnp
mov
gs
roll
lods
xor
dec
nop
pop
into
jne
push
imul
push
mov
js
xor
ss
stos
inc
inc
or
pop
mov
cmp
movsl
sub
aas
scas
mov
sti
inc
dec
mov
adc
pop
add
ret
add
mov
test
loope
mov
stos
mov
sbb
rcr
sbb
mov
or
cld
sti
sub
fcompl
pop
cmp
mov
lea
into
int
ror
test
pusha
pop
dec
out
das
or
adc
cmp
and
pop
inc
and
call
cmpsb
mov
aaa
fildll
add
jmp
xor
mov
adc
sti
out
jo
into
loop
ljmp
cld
test
mov
xchg
loopne
xchg
jmp
orb
push
mov
ds
loopne
and
fmuls
scas
and
and
popa
sahf
sbb
and
outsb
outsl
nop
ret
insl
mov
stc
les
xor
cmp
jno
decb
sbb
cmpsb
push
inc
leave
fisubrs
and
mov
mov
imul
push
inc
or
js
jecxz
fs
and
sbb
lods
std
sbb
mov
icebp
aas
adc
or
mov
fwait
sbb
js
xor
mov
lods
or
jmp
cmp
or
daa
inc
sahf
out
into
mov
push
aad
and
mov
mov
mov
hlt
and
fisttps
in
pop
idivb
mov
popa
mov
jmp
jnp
dec
pop
es
lods
loope
xor
shrd
adc
idiv
ss
inc
arpl
xchg
sbb
lcall
fsubrs
sub
inc
xlat
les
sub
inc
add
pause
aad
mov
ret
pusha
adc
rcl
lock
and
xor
sbb
iret
fsubr
and
push
mov
mov
push
add
inc
scas
call
push
je
dec
push
pushf
bound
or
ficoms
jmp
sbb
push
stos
sbb
jmp
rcrb
sbb
lods
lcall
or
pushf
jbe
push
mov
jno
pusha
adc
or
cmp
and
fstpt
mov
int
ja
insl
adc
jmp
mov
inc
nop
jmp
push
lret
leave
outsb
shl
cmp
mov
shrl
out
push
repnz
shrl
fs
enter
jl
lcall
std
addr16
stc
out
addr16
jl
arpl
push
jg
arpl
mov
out
loope
mov
iret
xor
sahf
cmp
js
in
or
out
adc
sbb
xchg
scas
and
jmp
lret
xchg
xchg
and
shr
xchg
hlt
push
inc
lods
lcall
popf
sbb
mull
in
mov
ret
js
rorl
je
xchg
jp
fwait
mov
inc
fmuls
xchg
imul
outsl
push
xor
inc
cmc
inc
das
jnp
inc
mov
dec
mov
js
mov
fcompl
push
mov
out
add
push
scas
jns
mov
push
mov
add
dec
movsl
mov
inc
adc
sbb
pop
mov
je
inc
rolb
dec
rclb
iret
cltd
lods
dec
ret
jne
aad
xchg
dec
pop
push
loope
notb
iret
movsb
aaa
mov
jb
dec
cli
adc
jmp
je
movsb
lcall
dec
sub
in
jne
adc
daa
xchg
out
adc
ficompl
stc
jle
and
or
repnz
movsl
and
sbbb
push
lret
push
or
sbb
jge
inc
push
inc
jb
sahf
cli
leave
pop
movsl
cmp
mov
pop
xor
cld
mov
pop
jb
inc
popa
pop
or
sub
orl
pop
inc
subb
test
sub
mov
and
add
lea
adc
insl
inc
cmpsl
xchg
jle
mov
cs
les
push
xchg
iret
in
adc
fisubs
push
jnp
or
sbb
pop
lahf
and
stc
jnp
mov
dec
dec
adc
cmp
mov
jmp
mov
adc
lret
popf
jmp
addl
mov
rorb
mov
ss
and
fisttpll
pop
sbb
sbb
inc
ljmp
push
xlat
gs
mov
pop
sahf
mov
jae
pop
pop
imul
sub
out
mov
add
sub
push
setne
xchg
jecxz
sub
rorl
mov
adc
push
mov
mulb
add
cmp
jb
cs
in
push
aad
cs
in
rcll
imul
pop
add
outsb
ss
push
xor
dec
in
dec
rcl
std
mov
xchg
sarl
push
jb
push
movsb
out
out
js
inc
mov
mov
clc
adc
loopne
nop
inc
mov
sub
jns
daa
outsb
addr16
xor
popa
mov
mov
data16
movsl
lea
stos
inc
jb
push
push
rcrb
loopne
mov
lods
xchg
scas
fists
in
mov
mov
gs
jp
xchg
insb
mov
out
test
sub
jno
adc
and
movsb
je
inc
stc
loop
fcoms
aam
int
daa
mov
int
adc
xchg
fucom
push
test
pop
rcrb
lahf
add
xchg
push
out
jno
cmp
lds
daa
leave
pop
dec
jbe
divb
ja
jnp
or
mov
mov
or
pop
sub
outsl
xchg
imul
fsubrl
leave
insl
hlt
xchg
pop
mov
sbb
shlb
out
pusha
pop
call
lea
push
or
or
dec
movsb
in
xchg
jnp
pop
addl
pop
push
sbb
push
adc
hlt
and
xchg
xorb
xor
sub
ret
inc
xchg
cmovnp
stos
sarb
mov
adcb
std
xor
ja
mov
daa
in
sub
ret
pop
add
mov
jmp
jle
mov
ret
mov
sbb
pop
xchg
push
add
jge
mov
xorb
jecxz
in
jae
xchg
push
sub
mov
pop
sub
push
jae
mov
sbb
mov
pop
leave
js
add
jle
pop
fsts
out
data16
call
xchg
in
xchg
std
dec
pop
out
les
mov
lods
jno
and
je
aam
les
adc
or
ja
ffree
iretw
outsl
sub
out
stos
je
sub
sbb
pop
push
js
push
out
adc
sbb
idivl
push
sub
addps
stc
mov
mov
unpckhps
cmp
jb
jmp
call
pop
add
mov
mov
test
fistps
scas
inc
xchg
mov
enter
dec
fcoml
test
inc
push
inc
xor
sahf
lods
addr16
add
push
test
sub
add
and
in
xchg
jns
repz
add
jae
not
popf
ret
mov
fcom
pop
ret
pop
arpl
mov
inc
arpl
shlb
inc
popa
jl
test
imul
lcall
pop
and
pop
and
call
out
inc
aaa
lahf
hlt
cmp
cli
mov
pop
je
mov
rcrl
cmpsl
mul
xchg
xor
xlat
adc
mov
inc
popf
cltd
adc
mov
jno
sub
sub
xor
aad
and
cmp
je
and
dec
cmp
out
std
in
into
or
xchg
jge
in
xchg
mov
inc
scas
arpl
xchg
adc
je
or
add
push
push
mov
in
out
je
popf
sub
xchg
xchg
clc
inc
fisttpll
mov
xchg
fs
dec
scas
mov
lds
jle
push
repnz
xor
popf
mov
add
daa
mov
repnz
push
loop
add
and
xor
pop
sahf
lret
push
adc
call
popf
xor
lods
adc
out
jecxz
fbstp
hlt
sbb
mov
shlb
xchg
mov
test
lds
cs
lahf
push
push
frstor
and
mov
fidivl
xchg
add
xor
movsl
insb
sbb
mov
pop
stc
test
mov
and
xchg
out
xor
adc
fbld
mov
cld
xchg
xchg
and
xchg
pushf
xor
test
jecxz
fldt
sub
sar
negb
mov
and
sbb
or
jbe
pop
adc
mov
cltd
int3
adc
cltd
movsb
test
cmp
outsl
call
push
outsb
xor
jbe,pn
or
mov
into
push
mov
push
adc
das
mov
jns
mov
out
mov
sub
cltd
push
fsub
adc
xchg
lock
stos
push
xor
mov
subb
pushf
ficoms
stos
lods
push
sbb
jo
jp
sbb
sbb
adc
pop
icebp
lret
jle
sbb
pop
push
mov
pop
sbb
mov
imul
ss
inc
addb
jne
adc
div
dec
cmp
jbe
mov
adc
inc
imul
imul
jp
adcb
arpl
xlat
test
loopne
movsb
iret
inc
inc
dec
inc
pop
je
push
sbb
dec
int3
mov
jmp
mov
xor
ljmp
adc
dec
xchg
aas
cmpsl
rol
fsts
shrl
les
cs
cmpsl
cld
xchg
push
or
insb
push
push
out
popf
popf
mov
or
imul
daa
mov
outsl
movsb
jle
lret
call
push
enter
jo
cmp
fdivl
push
pushf
jbe
pop
enter
jno
mov
jae
xchg
jmp
xchg
xor
push
mov
cli
pop
stos
sbb
pop
call
ja
stos
inc
pop
arpl
inc
dec
aam
test
pop
cmpsb
ds
xchg
dec
cmp
mov
inc
dec
jle
out
xor
adc
jmp
lds
lret
jmp
sbb
test
jge
sti
jns
ret
frstor
outsb
jb
and
cmp
and
push
jecxz
dec
jne
ret
pop
mov
test
jmp
mov
repnz
dec
lcall
jb
je
rorb
fsubs
fwait
dec
inc
fwait
dec
aaa
xor
addb
and
cld
ret
mov
inc
cmp
adc
ret
pop
testl
popf
add
pop
js
and
xchg
lds
hlt
int3
cmp
test
in
stos
mov
in
adc
bound
pop
xchg
push
addr16
sub
inc
dec
out
dec
ds
add
push
andl
call
notl
push
push
xorl
push
andl
call
sbb
movl
movl
mov
mov
inc
xor
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sbbl
mov
add
mov
sbb
mov
test
movl
je
movzwl
sub
mov
movl
mov
mov
mov
xor
imul
mov
mov
sub
and
mov
add
xchg
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sub
mov
sub
xor
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
mov
jnp
mov
sbb
frstor
or
cmp
jp
pop
jp
jns
inc
test
mov
int3
mov
pushf
jle
mov
or
push
divb
mov
push
jnp
inc
das
and
dec
das
fs
xor
addr16
test
push
mov
iret
scas
hlt
add
cld
push
mov
jge
cwtl
adc
dec
repnz
adc
insl
inc
ja
xor
icebp
sbb
ret
out
push
adc
pop
push
mov
frstor
test
loope
pop
insb
pop
pushf
mov
lods
hlt
arpl
stos
mov
and
adcb
mov
xchg
insl
inc
ret
in
lret
mov
jb
call
ffreep
test
jg
mov
adcl
jo
mov
dec
cmp
loopne
mov
push
dec
adc
sahf
inc
pop
loope
mov
pop
in
and
adc
mov
dec
fildll
mov
repnz
call
enter
mov
mov
push
and
adc
shll
nop
mov
aam
pcmpgtb
fstpl
mov
ds
sub
add
into
fs
pop
mov
je
and
test
enter
addr16
pop
mov
test
das
mov
jnp
in
push
sar
dec
insb
jnp
jnp
mov
adc
imul
je
push
xor
inc
inc
xchg
pushf
jg
ss
loope
fidivl
inc
add
js
cmp
addr16
aas
mov
dec
xchg
jbe
and
sub
dec
xor
mov
arpl
xor
dec
sub
jg
pop
sahf
jns
jmp
push
pop
gs
or
dec
cld
jns
mov
xchg
sub
divb
sbb
jae
jno
fnstsw
pop
aam
fimuls
imull
ret
test
stc
mov
cs
mov
add
pop
out
jmp
dec
out
mov
push
sbb
and
jle
pop
mov
sub
fwait
sbb
fbld
cs
pop
fmuls
lds
xchg
jmp
xchg
les
jge
cmp
clc
orb
pop
addr16
lock
jbe
sub
das
in
mov
xchg
xchg
jl
jo
inc
fnsave
lock
lods
outsb
fimull
je
dec
fldl
pop
jae
shll
sub
fbld
pop
clc
xchg
fs
xchg
lea
stos
clc
or
pushf
dec
addr16
lret
pop
fwait
and
je
mov
fwait
add
xchg
push
pop
frstor
addr16
call
or
loop
popf
push
or
shr
mov
bound
adc
mov
xchg
mov
faddl
xchg
sbb
or
test
mov
clc
mov
mov
adc
sbb
add
aaa
test
lahf
lahf
pusha
dec
ret
testb
repz
ret
pop
cs
sbb
mov
aas
sbb
dec
repz
adc
mov
fs
ret
sti
inc
aad
mov
cltd
repnz
js
ror
mov
mov
xchg
or
lds
loope
push
scas
and
xchg
dec
sub
jbe
fidivl
mov
in
loopne
mov
test
fdivrs
pop
and
jns
movsb
rorl
cli
xchg
push
inc
dec
sbb
lods
push
add
lods
mov
dec
jmp
mov
xchg
das
sub
ss
mov
ja
jae
mov
add
lds
sub
mov
std
stos
and
push
lods
enter
outsl
imul
inc
arpl
mov
ja
pusha
pop
test
dec
mov
sti
sbb
mov
fbld
jecxz
fdivrl
ljmp
adc
jmp
in
ficoms
jb
sbb
test
jmp
out
cmp
imul
cmp
dec
pop
or
inc
jmp
js
mov
in
push
scas
mov
imul
xor
or
and
pushf
les
cmp
das
fwait
les
jp
popa
clc
pop
cmc
jge
cltd
sub
addr16
test
loope
mov
popa
dec
ret
jne
mov
cld
arpl
xchg
pop
mov
bound
mov
les
or
lret
scas
inc
xor
jecxz
clc
push
or
jg
sbb
ja
shlb
mov
or
add
stc
jns
xchg
cmpsl
xor
or
mulps
ja
hlt
and
add
mov
into
xor
or
dec
push
xchg
ljmp
popa
out
test
nop
sbb
lcall
outsl
dec
jmp
push
popa
jecxz
push
mov
fadd
xchg
das
scas
sbb
sbb
fmul
xor
sub
and
mov
xlat
sbb
jbe
mov
rcrl
and
and
pop
mov
jbe
mov
jl
lret
les
rclb
sbb
std
fidivrs
xchg
mov
icebp
sub
mov
or
test
out
dec
dec
fisttps
rcll
imul
test
insb
fcmovne
push
hlt
stos
and
push
xor
jne
or
mov
jo
dec
popa
push
jnp
negb
cmp
inc
ror
sti
mov
repnz
or
iret
adc
lock
mov
add
push
xor
lock
mov
mov
pop
mov
push
dec
dec
xchg
push
dec
sub
lock
out
insb
repz
popa
insb
outsb
dec
xchg
lret
inc
lcall
insl
into
stos
pop
int
fldl
in
cmp
push
jb
iret
cmpsb
cmp
dec
jbe
inc
out
cli
xchg
mov
and
sub
ret
mov
cmpl
inc
scas
xor
cmp
into
jmp
js
dec
mov
clc
outsl
add
xor
sahf
mov
xchg
pushf
out
push
dec
clc
jne
sbb
mov
push
pop
mov
and
jecxz
aad
stc
xor
test
lock
push
scas
cmpl
mov
rcrb
shr
sbb
enter
test
inc
inc
or
out
add
mov
out
movsl
data16
mov
inc
stc
jmp
inc
and
lods
fwait
inc
sbb
dec
pop
cli
scas
pop
rorb
shrb
push
adc
push
add
mov
out
jle
inc
xor
popa
lret
lret
cmp
out
lahf
aad
outsl
xor
lret
fstps
mov
push
test
push
pop
jbe
in
sub
ljmp
lds
xchg
das
loopne
test
add
xchg
lock
cmp
inc
mov
mov
fisttpl
pushf
sbbl
sbb
mov
push
cwtl
jle
pop
lret
lahf
mov
mov
movsb
jns
dec
fildl
mov
in
stc
or
shll
mov
jne
fidivs
jmp
mov
dec
es
rorb
es
bound
jae
pushf
mov
dec
arpl
xlat
rcrb
add
push
ljmp
jno
dec
xchg
adc
fmul
mov
adc
repnz
repz
push
sbb
jg
or
ds
ret
das
or
in
mov
pop
push
movsb
dec
outsb
inc
mov
lea
pop
and
pop
fs
sub
lods
cmp
call
lods
xor
jg
loope
jmp
pop
test
xchg
out
hlt
mov
js
std
sbb
add
testl
and
pop
push
jae
popf
loopne
cmc
outsl
repnz
enter
jmp
dec
imul
ljmp
push
push
pop
cmpsl
push
adc
mov
cli
int3
je
pop
cltd
aaa
jne
cmpsb
sub
fwait
sub
dec
sub
and
xchg
lcall
lcall
push
mov
adc
jl
jg
mov
pusha
add
movsl
out
jne
jns
loop
mov
rcl
fwait
mov
push
pop
push
pop
mov
sbbl
push
mov
movsl
mov
push
call
ret
lods
ret
in
xlat
int
aam
xchg
test
and
fldcw
mov
jns
and
xor
mov
mov
xor
cmpsl
cmp
pop
dec
pop
ljmp
mov
xor
cli
divb
add
aas
xor
fidivrs
mov
xor
scas
pushf
push
adc
sbb
arpl
mov
xor
call
pop
mov
lods
leave
or
jmp
stos
movsl
mov
inc
arpl
sysret
mov
or
out
je
adc
roll
jo
cli
fwait
mov
add
add
clc
stc
outsl
xlat
loope
mov
mov
or
data16
gs
mov
mov
push
mov
xlat
add
push
mov
mov
push
test
dec
sub
jno
stos
dec
or
push
xor
add
or
imul
mov
sub
scas
xchg
test
pop
lret
xchg
inc
push
and
das
imul
in
xchg
loop
in
fists
and
push
mov
dec
mov
ljmp
lock
pop
mov
mov
fistpll
adc
mov
cs
and
xchg
dec
pop
outsl
mov
repnz
adc
jb
cli
notl
sub
in
mov
mov
fsubrs
cmp
push
cmp
cld
dec
mov
loopne
cmpsl
jnp
je
subb
pop
sub
decb
mov
popa
cmp
iret
dec
aad
ja
xor
pusha
icebp
cmp
outsl
dec
mov
fstpt
push
add
mov
mov
and
mov
mov
pop
add
mov
aam
sub
mov
adc
scas
leave
pop
gs
call
cmp
ret
push
add
push
xchg
daa
push
shlb
pusha
adc
or
insb
lds
jno
xchg
lods
dec
jno
add
inc
sbb
dec
xchg
adc
ljmp
add
sti
insb
xchg
neg
xor
je
neg
xor
in
jb
hlt
aaa
add
xlat
or
outsl
popa
jnp
and
in
adc
add
rolb
ds
pop
xchg
xor
push
jbe
out
inc
stos
lea
ret
aas
lds
sarl
imul
inc
subl
outsb
dec
xor
xchg
jno
fstpt
jbe
fs
add
out
jno
int
cmpsb
add
dec
mov
sub
push
push
leave
push
lcall
in
out
add
xchg
adc
les
das
arpl
dec
les
cli
lods
aad
ja
lock
aad
xchg
mov
mov
sbb
fwait
sarb
jae
jns
inc
xlat
cmc
xor
pop
pop
inc
leave
lret
addr16
xchg
sbb
pop
stc
ficompl
js
sbb
cmp
loopne
ljmp
xchg
mov
out
cli
aad
pop
lods
js
cwtl
xlat
xlat
or
int
inc
jns
pop
xchg
rorb
dec
cmpsl
lds
andl
jb
xchg
cs
addl
xchg
mov
add
xor
fidivl
inc
add
loopne
sub
push
or
ja
ficomps
dec
jecxz
adc
ss
loop
sub
scas
xchg
dec
leave
push
mov
ds
dec
out
scas
icebp
sarl
jle
lea
dec
out
sub
sub
leave
or
into
fidivl
push
lods
cmpsl
sub
gs
and
push
adc
jl
mov
out
in
xchg
push
and
mov
dec
sub
lock
aaa
fisubs
jecxz
lock
cmp
test
rcrl
lcall
jge
mov
int3
in
xchg
outsb
rcl
or
lods
cmp
iret
fimull
cmp
xchg
sub
and
mov
out
aaa
imul
mov
ja
pop
or
jmp
lock
fbld
shr
xor
test
xchg
sub
adcl
fldl
ss
mov
lahf
enter
dec
sbbl
inc
mov
outsb
icebp
test
mov
jge
jbe
inc
or
adc
int3
mov
mov
shll
ja
inc
inc
add
mov
push
fcmovnb
inc
mov
add
out
repz
jge
pushf
inc
dec
xchg
testb
or
loop
int3
lds
xor
nop
pop
imul
daa
icebp
dec
movsb
jbe
and
loope
mov
sahf
mov
jno
stos
stc
dec
or
inc
gs
xchg
sub
push
hlt
mov
and
jmp
mov
dec
xor
popa
jmp
fidivrs
fdivl
in
push
pop
insb
sub
aas
js
les
xchg
push
mov
pop
fucomi
fsubp
jg
shlb
pop
aad
xor
ret
mov
or
jnp
or
and
pop
jne
mov
test
cs
lea
and
fstpl
das
sbbl
mov
xchg
push
xor
or
js
xlat
out
inc
pop
test
dec
add
into
stos
inc
sub
daa
cli
adc
or
int3
mov
push
inc
arpl
shll
ljmp
xchg
sbb
ds
rolb
cmp
and
and
pop
ret
nop
xchg
test
sub
loopne
js
sub
adc
arpl
xor
mov
xchg
xchg
test
mov
stos
push
hlt
loope
cltd
or
jns
jns
cmp
inc
fidivrs
rorb
adc
mov
mov
std
fs
ja
push
jae
iret
leave
ja
add
xor
cmp
or
or
or
mov
mov
fldl
loope
jnp
sbb
inc
movsb
into
ljmp
xor
sub
xor
cmp
xchg
jecxz
mov
aad
ret
add
jae
sbb
mov
dec
xchg
or
outsb
mov
jno
out
and
cld
lods
jae
pop
shrb
cld
arpl
cmp
in
pop
adc
sub
outsb
enter
cmp
add
in
xor
aam
xor
push
fucomi
rclb
pop
movsb
ds
fstps
js
sub
jmp
mov
addr16
aas
fildll
mov
add
inc
pushf
in
mov
dec
jle
sub
ljmp
pop
ret
sub
push
nop
fs
test
or
mov
aas
sti
lret
stos
cltd
cmpl
xchg
jmp
das
mov
mov
addr16
aas
mov
rol
out
incb
mov
xor
xlat
jge
mov
mov
pop
call
ja
leave
scas
add
gs
xor
fnstsw
les
jle
ss
or
gs
jle
mov
mov
xor
dec
xchg
inc
cld
dec
test
rclb
lret
jb
icebp
lahf
mov
jl
cwtl
cwtl
in
xor
sub
cmp
mov
sbb
cltd
dec
aad
adc
pop
inc
sbb
or
out
arpl
loopne
xlat
insl
sahf
bound
addr16
push
jo
in
dec
jp
dec
fnstenv
mov
iret
mov
mov
dec
push
inc
xor
pop
adc
call
adc
mov
push
aad
adc
pop
mov
fld
add
push
push
xlat
add
sbb
xchg
or
add
dec
pop
sti
lcall
fists
out
jmp
aas
mov
movsb
inc
dec
enter
out
adc
xor
or
pop
jns
push
jg
ss
sub
or
das
scas
clc
adcb
sbb
cmpsl
loopne
inc
and
inc
sahf
daa
filds
loop
and
adc
push
in
movsb
std
jnp
push
les
ret
jmp
cld
add
jae
shrl
imul
xchg
jbe
push
shrb
nopl
mov
cmp
inc
pop
mov
mov
cmc
loope
adc
in
add
inc
sub
sub
mov
mov
popa
mov
jno
jl
mov
or
mov
sbb
fwait
ja
push
andl
jecxz
xlat
cltd
test
lret
into
lea
repz
repnz
push
mov
cmp
and
ds
and
add
add
pop
fcoml
pop
sbb
test
lret
ds
and
inc
mov
mov
fisubrs
outsb
enter
mov
mov
xchg
pop
neg
or
ja
dec
es
pop
fldenv
iret
jno
jne
sub
push
sub
sbb
stc
movsl
popa
shll
inc
fwait
mov
icebp
outsb
cmp
pop
jge
into
js
pusha
dec
imul
sub
xchg
add
mov
fcomps
das
and
jge
lock
ds
pop
xchg
pop
sub
popa
and
dec
out
pop
push
out
sub
xor
cld
jg
lods
fisubl
xchg
nop
jp
jp
jle
and
stc
lds
sbbb
xor
loop
andl
sbb
mov
push
xor
cmp
push
pop
sub
inc
out
out
sub
xor
ret
in
movsb
cmp
ljmp
fidivrs
testl
jnp
push
das
xchg
sar
incb
loopne
mov
sbb
mov
or
xor
loope
aad
shlb
jle
dec
xor
outsl
mov
add
test
mov
bnd
repnz
ret
xor
push
fdivr
pushf
add
imulb
sbb
leave
or
cwtl
cmpsl
stos
bnd
hlt
xchg
jmp
das
jne
bound
sub
fldl
pop
mov
fadds
repz
lret
sub
xchg
jp
mov
fstpl
shl
call
cmp
adc
movsb
xlat
mov
test
fnstenv
fists
loopne
pusha
xchg
jb
cmp
ffreep
cmp
pop
andl
mov
jne
jno
jl
ret
daa
leave
jne
jbe
xor
aaa
adc
cmc
jnp
pop
sbb
scas
or
dec
out
sbb
sbb
lock
and
minps
adc
inc
rep
test
add
sahf
aam
pop
push
imul
leave
imul
cmp
inc
xor
jl
loopne
fisttpll
jp
mov
cwtl
fsubr
pop
sbb
cpuid
pusha
dec
adcb
cld
cmp
sub
lock
xlat
ret
cltd
fs
or
and
mov
call
dec
cmovbe
es
aaa
cld
mov
pop
adc
push
pop
add
pop
jmp
lock
bound
sbb
ret
cmpsl
inc
ds
mov
push
or
ljmp
test
jae
outsl
xor
in
repnz
inc
js
ds
sbb
daa
jne
jmp
jae
fwait
and
int
popf
cmp
and
and
aas
hlt
das
ret
dec
and
inc
push
mov
cmp
cltd
xor
cld
and
jl
lea
jg
mov
lds
push
or
dec
scas
push
and
mov
xchg
add
popa
push
pushl
clc
pop
push
sub
insb
adc
xchg
mov
mov
movl
outsl
xchg
mov
sub
mov
lcall
push
sub
ljmp
xchg
pop
fiadds
mov
les
push
pop
fistps
popf
orl
inc
out
leave
push
lret
pop
inc
lret
lods
repnz
mov
sub
mov
int3
mov
popf
lcall
xor
mov
jb
jae
ret
mov
jno
ss
inc
lods
outsb
nop
add
push
cmpsl
jb
into
mov
pop
inc
push
inc
adcb
push
aad
cltd
push
lahf
cmp
aam
mov
sbb
push
sarl
sub
mov
push
dec
xchg
sub
aad
adc
daa
andl
mov
jle
stos
add
cmp
mov
outsb
jae
push
subb
xlat
call
jbe
add
in
dec
les
stos
out
and
mov
jno
dec
push
in
je
jnp
jl
scas
dec
push
int
push
daa
sbb
inc
xor
sub
cmpsl
rclb
imul
mov
jl
subl
adc
leave
or
outsb
outsl
daa
jae
iret
test
dec
fdivl
icebp
mov
movsl
pop
lahf
insb
test
xchg
dec
and
orb
rcr
xor
xchg
and
and
cwtl
loopne
mov
xchg
adc
jnp
push
inc
fbstp
lock
outsb
fisubrs
push
mov
lods
fcompl
xchg
sbb
pop
insb
inc
or
and
lods
rcll
fcmovb
call
add
add
jae
stc
lds
mov
cmc
or
leave
or
push
mov
sti
in
mov
dec
sub
jge
dec
and
nop
jp
jns
mov
push
dec
xlat
lods
stos
mov
dec
or
movsl
mov
fwait
mov
jmp
out
clc
cltd
mov
fiaddl
push
xchg
outsb
mov
add
cmp
dec
cli
outsl
nop
test
xchg
xor
push
and
add
insb
add
orb
mov
fildll
jp
xchg
out
bound
xor
scas
pusha
mov
adc
daa
pushf
js
jno
cmpsl
andl
jmp
or
sub
ljmp
and
repnz
imul
popf
sahf
mov
dec
pop
insl
mov
jae
call
std
push
add
sub
push
clc
pop
add
dec
bound
sbb
popf
dec
loope
subl
ss
into
jmp
jb
cmovg
sbb
aaa
bound
data16
lahf
hlt
imul
cli
mov
or
sub
pop
xorl
scas
rcrl
out
icebp
cmp
cmc
dec
sbb
push
jno
sbb
and
adc
dec
fimuls
and
aaa
xchg
jns
xchg
add
mov
fst
push
push
loop
sub
add
sbb
fistpl
mov
ficompl
xchg
mov
sbb
cld
movsl
push
jne
out
sub
and
out
stos
je
cld
idivb
test
push
cmc
mov
fidivrs
js
orb
pop
add
call
ds
bound
ljmp
jae
cltd
jmp
dec
fistl
push
pop
jnp
sahf
sti
mov
cmp
sub
mov
pop
pop
adcb
lock
or
addr16
rcrl
lcall
push
jecxz
inc
xor
inc
mov
mov
pusha
cmpsb
clc
push
cwtl
sbb
addr16
dec
mulb
xchg
mov
hlt
sahf
dec
popf
ret
shrl
inc
pusha
lcall
mov
sub
sbb
xor
and
insb
jg
sub
jp
stos
pusha
mov
sbb
pushf
pop
pop
int3
xchg
int3
insl
aas
add
lgs
fisubrs
aad
add
lds
push
or
fdivp
hlt
adc
sub
xor
pop
out
mov
push
inc
out
push
push
add
adc
int
imul
scas
stc
les
inc
insb
movsb
sub
loope
pop
cltd
leave
scas
hlt
addr16
jl
fidivl
xor
cli
rol
pop
xchg
popf
mov
jns
dec
outsl
mov
adc
imul
dec
scas
pop
in
push
stos
enter
xchg
push
jle
adc
cs
int
adc
shll
dec
shl
aam
test
mov
pop
xor
mov
mov
fwait
scas
call
xor
push
push
pop
sub
mov
push
fs
arpl
lret
push
xor
icebp
in
pop
push
xchg
push
in
inc
test
sbb
rolb
sbb
movsl
aad
inc
cli
jmp
and
push
mov
enter
pushf
mov
fiaddl
cwtl
hlt
adc
imul
aas
iret
sahf
int3
push
sub
sub
daa
dec
sbb
mov
xchg
ror
cmp
sub
jae
loope
orl
test
push
mov
fldcw
daa
addr16
sub
inc
lds
push
and
in
and
loope
outsb
sub
pop
or
ds
fnstsw
testb
adc
fmull
mov
mov
fsts
fidivl
pusha
pusha
sub
lods
loop
adc
roll
add
inc
in
inc
push
adcl
pop
ss
mov
push
rorb
int
mov
inc
xchg
xchg
sti
aad
xchg
jl
and
cmp
ror
in
movsl
sub
or
adc
fldl
and
fcomps
lahf
fmull
sub
jnp
push
pop
into
sbb
sar
rorb
push
and
stos
mov
dec
rcrl
mov
jns
scas
ljmp
aas
xchg
xchg
add
mov
iret
pop
mov
in
inc
mov
mov
leave
mov
sub
addr16
pop
sarb
mov
inc
mov
jne
movsb
mov
rcrb
pop
pop
das
js
xor
aad
sbb
or
mov
sbb
xor
popa
lret
cmp
and
es
sub
test
jns
hlt
repnz
push
test
push
sahf
sbb
add
mov
pop
je
xor
mov
test
popa
les
icebp
call
cmp
sbb
aas
cmp
icebp
xorb
les
in
fmul
mov
movsl
insl
bound
movsl
fmulp
sub
ss
mov
xchg
shlb
repnz
and
leave
inc
mov
cmp
pop
pop
int
dec
ss
incb
cmpsl
fimuls
pop
sarb
mov
xor
jle
sbb
insb
movsl
out
pop
jp
mov
lcall
jo
cltd
dec
imul
jg
loopne
pop
aam
xchg
dec
xlat
mov
out
fs
or
pushf
fisttps
jmp
cmpsb
test
iret
jmp
add
jle
mov
cld
test
xor
mov
jp
icebp
shrb
stos
xlat
bswap
jo
sti
in
enter
xor
jp
repnz
ja
push
inc
sti
icebp
xchg
pop
jmp
jns
ret
push
pop
or
cmp
or
push
push
fcomps
or
fisubrs
pop
mov
lock
insl
pop
test
mov
add
mov
adc
xchg
mov
add
adc
adc
push
aas
shrb
scas
push
sub
arpl
jg
push
or
hlt
out
mov
sub
int3
sub
call
pushf
pop
jmp
fwait
dec
dec
mov
pushf
loopne
rolb
inc
movsl
dec
mov
xor
pop
cwtl
cmp
aam
out
xor
lret
jnp
out
in
xlat
mov
cltd
ljmp
mov
ror
xchg
adc
pop
push
jbe
adc
xor
sub
sarl
add
outsb
je
jno
pop
sub
add
pop
out
sahf
push
adc
in
fs
add
in
fcompl
cmpsb
arpl
cmp
mov
cmp
cmp
jmp
inc
sub
cwtl
and
xor
dec
pop
int3
jne
xchg
pop
add
sub
sbb
fcmovnu
dec
movsl
dec
shlb
mov
jo
add
icebp
pop
inc
pop
jnp
mov
lods
add
aad
xor
enter
cmp
sbb
out
mov
inc
sub
fistpll
or
pop
dec
divl
add
loope
lret
pusha
scas
stc
mov
push
jb
xchg
popl
sahf
sbb
pop
adc
xchg
out
jb
test
aam
or
sbb
fisubl
mov
sub
jmp
mov
pop
inc
inc
std
cli
inc
dec
pop
mov
mov
jb
and
aaa
pop
cmp
mov
aas
fs
xchg
in
mov
inc
test
sub
inc
mov
icebp
dec
mov
dec
outsb
sub
adc
neg
adc
adc
xor
jge
test
push
cmc
pop
mov
mov
arpl
sub
arpl
call
enter
add
push
frstor
xchg
jne
out
push
iret
and
gs
cmp
sub
pop
sub
xchg
cmp
outsl
jne
xchg
mov
imul
mov
fcmovnbe
das
push
popa
xor
jmp
dec
mov
sbb
imul
loopne
cmp
lahf
push
and
push
push
push
or
mov
push
xor
jp
xchg
std
mov
sub
add
sahf
les
xchg
mov
scas
int
movsb
mov
mov
push
lcall
ljmp
ss
cmp
loop
ja
push
loopne
imul
cmp
adc
mov
push
test
adc
sub
sbbl
aaa
lcall
fsts
cmp
jl
int
add
imul
cmp
and
xchg
divb
or
insb
mov
lea
aas
push
stos
imul
xchg
add
cmp
and
xchg
movsl
cwtl
or
repz
repnz
inc
inc
xchg
shll
adc
pop
push
shl
pop
pushf
int3
mov
hlt
into
jl
cmp
sbb
das
mov
jecxz
je
cmpsb
xchg
add
push
pusha
pop
loop
sbb
mov
divl
sub
dec
mov
out
dec
sbb
mov
xor
adc
adc
and
jb
clc
mov
jno
cli
popf
mov
mov
ret
mov
adc
les
or
dec
lods
inc
mov
add
or
stc
popf
jmp
sbb
adc
push
popf
das
inc
gs
popf
ss
jle
xor
or
push
insl
jle
jl
add
mov
pop
dec
pop
mov
or
outsb
pop
cli
imul
nop
std
lahf
out
pop
mov
xchg
mov
aas
dec
test
stc
inc
push
or
addb
dec
sarb
fsubl
add
pop
xor
cmp
push
jge
push
inc
dec
enter
mov
jne
stos
and
cmp
push
pop
dec
inc
pop
or
imul
pop
jnp
jne
push
or
jge
je
fs
clc
mov
fisttpl
pop
iret
pop
rorb
mov
in
call
jg
sti
aas
mov
cmpsb
gs
shrl
pop
out
mov
int
xor
mov
mov
jmp
lret
dec
js
call
mov
adc
je
rclb
in
repz
mov
fdivrl
jns
pop
dec
add
sbb
xchg
jb
xlat
clc
je
mov
daa
push
shr
dec
out
mov
xor
push
repz
mov
push
cmp
in
scas
mov
add
enter
mov
add
add
add
add
xor
cmpl
jne
push
call
cmpl
jb
sbb
mov
mov
xor
xor
incl
add
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
xor
mov
or
mov
xor
add
mov
decl
mov
xor
add
sbb
mov
sub
lea
xor
xorl
xor
cmp
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
or
mov
xor
sbbl
add
movl
cmp
movl
jne
pushl
adcl
call
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
xor
mov
mov
mov
movl
cmpl
je
cmpl
jne
call
xor
add
dec
mov
jmp
xor
sbb
mov
xorl
add
movl
cmp
je
addl
pushl
pushl
orl
call
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
and
mov
and
mov
mov
decl
xor
add
movl
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
sbb
push
mov
adc
mov
push
mov
adc
mov
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
andl
movl
mov
adc
jmp
gs
jne
jle
imul
jp
adc
ja
jne
inc
xchg
ficoml
push
jle
in
mov
dec
sub
pop
popf
sub
mov
data16
xchg
arpl
aaa
mov
mov
fucomip
inc
and
jl
mov
mov
popf
aaa
repnz
ja
xchg
lret
das
push
imul
or
loop
add
stc
push
xchg
sub
cmpsl
ret
sbb
cmp
pop
or
gs
adc
ret
addr16
repnz
inc
mov
pop
jnp
push
incl
sti
shll
and
insb
fsub
xchg
add
mov
push
push
xlat
and
push
sbb
enter
or
movsb
xor
adc
mov
imul
mov
lretw
xchg
xchg
cmp
in
jns
into
shl
mov
mov
dec
sub
sub
scas
fstps
pop
in
inc
jns
pop
out
dec
sub
pop
or
js
mov
loope
jmp
in
out
pop
scas
data16
sahf
sub
mov
pop
mov
pop
jle
jp
pop
cmp
push
dec
cmpsl
inc
and
xor
sbb
les
xor
sub
push
push
dec
mov
xchg
mov
and
jmp
mov
adc
cs
mov
and
stc
push
cmp
mov
mov
sub
mov
pushf
add
adc
rcl
mov
mov
mov
mov
adc
pop
in
ret
std
jno
mov
rcll
mov
pushw
inc
loope
mov
in
fsts
xchg
loop
pop
out
cmp
in
push
rclb
mov
cmc
adc
test
sub
and
sbb
aas
xor
lret
mov
call
movsb
lcall
or
xchg
lea
dec
pop
lods
add
addl
dec
mov
in
xlat
or
jecxz
inc
out
mov
pop
sbb
jae
aad
or
movsb
adc
in
gs
fmuls
movsb
push
inc
push
stc
sub
lcall
in
cld
mov
iret
hlt
imul
pop
lods
loope
push
clc
mov
test
lret
andl
xor
mov
test
jecxz
sbb
adc
pop
fwait
into
inc
mov
pushf
call
mov
inc
sbb
mov
movsl
js
cwtl
cwtl
mov
insb
mov
jns,pt
rcr
inc
xchg
adc
mov
popa
fistpl
in
cmp
pop
aaa
fbstp
adcl
mov
cmp
add
je
adc
clc
lcall
or
pop
cwtl
js
jnp
sub
mov
in
add
notb
lock
cs
js
lods
cmp
xor
push
xlat
or
dec
fxch
ret
jmp
idivl
sub
jmpw
cmp
push
xor
rorl
jecxz
sbbb
pop
inc
adc
add
jge
std
arpl
mov
movsb
mov
insl
shll
sub
push
dec
imul
nop
iret
adc
add
mov
imul
insb
mulb
xor
negb
cmp
xor
jbe
pop
pop
pop
testb
jnp
aam
rclb
dec
push
xchg
inc
clc
mov
das
insl
xor
sub
xchg
cmpsb
fdivl
dec
inc
jns
nop
or
mov
adc
sub
popa
and
movsl
pop
or
xlat
fwait
push
cmpl
imul
pop
imul
lea
jg
or
push
out
ret
testl
pop
push
subb
repz
add
notb
out
push
inc
stos
push
enter
in
cmp
mov
jns
cmp
mov
mov
xchg
subl
pop
andl
shufps
fisubrl
xchg
xor
fstpl
inc
push
sahf
or
add
leave
sahf
rcl
pop
repz
adc
sbb
jg
ret
adc
push
xor
push
push
push
lret
push
movsl
mov
scas
cmp
adc
mov
or
addr16
mov
pop
xchg
inc
mov
shlb
sbbl
shll
dec
pop
shll
fucom
lods
es
pop
push
jbe
xlat
mov
add
xor
pop
shl
xchg
add
jo
and
pushf
adc
mov
fs
mov
inc
js
das
sub
push
push
repz
adc
shrl
inc
mov
aas
aam
lahf
mov
aas
scas
cmc
out
in
sar
arpl
or
or
arpl
stc
mov
notl
ret
sub
int3
fnstcw
mov
ret
dec
xorl
in
dec
adc
jle
in
iret
xchg
test
cld
sahf
pop
nop
out
xor
mov
inc
movsl
or
scas
push
pushf
jmp
adc
mov
xchg
cmpsb
sub
aaa
loope
mov
hlt
pop
adc
cmc
ss
mov
inc
add
xchg
push
int
repz
cmpsl
inc
stc
push
sub
xchg
int3
pop
lock
mov
inc
xchg
cmp
xchg
cmp
fisttps
inc
mov
adc
insl
clc
aad
les
sbb
int3
decl
xchg
add
and
shll
out
push
pop
data16
insb
mov
ret
push
aad
loop
inc
jl
pop
add
rclb
pushf
push
sub
loope
or
push
dec
ds
rolb
mov
movl
iret
test
sub
out
sbbb
inc
inc
jge
loopne
clc
repnz
call
push
repz
jnp
mov
mov
test
rclb
pop
adcl
cmc
cmp
cltd
inc
add
shl
in
mov
add
sub
leave
fnsave
jmp
mov
add
rorl
cmp
lret
rorb
sbb
mov
lea
mov
add
pop
inc
jp
adc
push
inc
pop
out
inc
and
pop
add
or
leave
or
pop
jmp
inc
mov
or
sbb
mov
push
xor
or
mov
outsb
adc
sbb
mov
adc
rorb
xchg
mov
add
jae
xlat
jecxz
xchg
mov
clc
xlat
stos
outsl
arpl
ret
adc
mov
pop
pop
xchg
movsb
jle
test
and
xchg
and
mov
xorl
loope
jmp
inc
lret
add
jmp
xchg
stos
xchg
test
addb
out
ljmp
push
xchg
in
nop
ljmp
push
push
out
sbb
mov
subb
pusha
jle
popf
xchg
icebp
adc
sarl
in
lods
add
ds
add
in
dec
sbb
insb
out
jnp
aaa
addr16
jno
in
mov
dec
mov
push
dec
add
in
mov
inc
xchg
hlt
cltd
mov
add
and
sub
and
mov
mov
cmp
inc
mov
rcll
ss
lds
icebp
std
repnz
cli
mov
dec
ljmp
xchg
sub
out
cmp
in
cmpsb
push
and
cmpsl
dec
lahf
arpl
push
imul
push
gs
mov
or
in
mov
int3
fwait
imul
sbb
pop
xchg
xor
dec
out
popf
stc
inc
jmp
bswap
xchg
sar
pop
ret
jne
hlt
mov
jb
iret
pop
aad
dec
or
mov
pop
dec
inc
mov
sub
mov
fcompl
pop
cmp
out
cli
xor
andb
arpl
arpl
gs
jns
imul
inc
xor
shll
cmp
test
jae
daa
sbb
dec
insb
mov
dec
jge
push
ret
aaa
insl
in
xorps
adc
icebp
iret
mull
and
jle
stc
iret
sub
fwait
xorb
xchg
or
ret
in
js
addb
idivl
ss
mov
xchg
sbb
jge
sbb
sti
lods
js
repz
sub
movsl
pop
imul
dec
addr16
lods
mov
loop
lret
test
ret
adc
sub
push
xchg
orb
andl
jecxz
nop
pop
scas
into
pop
xor
lea
cmp
and
mov
mov
pop
addr16
dec
test
aam
imul
fisttpll
out
in
mov
lock
mov
ret
enter
jbe
stc
loopne
jmp
daa
outsl
test
clc
cmp
imul
jns
sti
push
mov
out
mov
xchg
push
jb
xchg
sarl
jmp
pop
ds
shl
sub
sbb
stos
std
jl
jecxz
push
adc
push
or
mov
not
add
inc
cs
push
xchg
adc
in
cmp
clc
xor
scas
rcr
and
xchg
dec
out
inc
sbb
in
test
or
lcall
sarl
xor
rcrb
outsl
icebp
jmp
adc
adc
repnz
jns
cmp
xchg
mov
fsubrs
xchg
das
insb
pop
dec
into
iret
dec
iret
mov
mov
fbstp
push
or
adc
fstpl
adc
pop
adc
adc
push
je
xor
sub
jae
outsb
jnp
cmp
and
sbb
aas
in
or
cmp
pop
sub
jae
inc
add
int
sahf
popa
cmp
out
call
xchg
clc
dec
pop
push
pop
jl
out
mov
cmp
test
movl
ljmp
xor
std
and
lret
aaa
movsl
dec
sub
push
ret
movsl
icebp
inc
scas
addl
outsl
or
mulb
cmp
and
into
cmp
repnz
movsb
aaa
data16
sahf
fisttps
jmp
xchg
dec
mov
out
pop
or
sbb
sahf
inc
cmp
movsb
pusha
adc
push
imul
or
xchg
es
xchg
mov
jge
pusha
cmp
lahf
rorl
sbb
xor
adc
gs
and
cmp
mov
insb
out
pop
shlb
rcrb
or
roll
enter
shrl
pushaw
push
dec
jge
sub
xchg
inc
cmp
mov
mov
sbb
lock
jle
adc
dec
shl
push
or
jno
or
out
push
cmovg
es
sub
insl
xchg
loop
clc
jmp
shrl
ror
xchg
fimuls
orl
subb
inc
add
xchg
lret
sbb
mov
xchg
jp
or
add
movl
xor
in
inc
daa
pop
sti
dec
fisubrs
cs
dec
pop
xchg
stos
jg
dec
leave
push
adcl
loopne
jne
pop
fistpll
pop
push
jge
sub
mov
out
xor
xchg
leave
ror
sbb
in
mov
movsb
movsb
mov
dec
mov
add
xor
mov
insb
mov
jle
jge
int3
jne
mov
aam
cmp
test
lods
into
sub
ror
pushf
dec
out
adc
jns
push
dec
cmp
adc
negl
addr16
cmp
sarb
faddl
adc
pop
adc
filds
mov
pushf
xor
iret
ficoml
sub
out
mov
imul
fdivrl
jge
lret
sbbl
out
sub
int3
lock
push
imul
pop
mov
pop
pop
dec
mov
outsb
xchg
jl
test
dec
movsb
fsubrs
cltd
sub
xlat
mov
popa
cmc
xlat
sbb
adc
sbb
cltd
loop
xchg
sub
lods
ror
and
sub
rcl
xchg
dec
scas
mov
inc
int3
dec
negb
jg
aas
push
data16
xor
dec
je
out
push
imul
aaa
sbb
lods
movups
sub
pop
fs
test
xor
in
sbb
sub
shlb
stos
xor
loope
pop
nop
xchg
es
dec
add
repz
pusha
mov
cwtl
stos
dec
into
shr
add
mov
xchg
je
rcll
jp
push
dec
das
bound
pop
test
mov
scas
and
inc
dec
fbld
jae
dec
inc
xor
dec
in
or
pop
inc
pop
aaa
xchg
hlt
out
fcoms
loop
xor
pop
sub
xchg
xchg
insb
jle
ret
mov
pop
add
lea
out
push
cli
subl
lea
cmp
repnz
repz
mov
cmp
inc
test
push
push
fsubrp
sarb
push
lcall
ja
xadd
nop
xlat
lea
stos
loopne
push
sub
test
and
out
sahf
jecxz
fdivr
inc
pusha
lahf
inc
and
lret
stos
lcall
dec
pop
sbb
movsl
repz
js
frstor
xor
scas
cmc
push
out
imull
sub
dec
add
push
int3
cli
mov
jne
jp
ret
mov
inc
or
xchg
pop
cmp
sub
leave
xor
loope
sahf
or
cs
sti
cmp
add
shl
cli
xchg
test
test
add
orb
cltd
mov
jecxz
and
push
cs
ret
mov
pop
push
stos
das
lock
test
jnp
mov
mov
in
aas
shlb
dec
addr16
add
out
jnp
xchg
lds
add
xchg
push
and
out
sbb
jns
adc
mov
insb
jo
pop
jns
sbb
lods
iret
popa
dec
scas
cmc
aaa
pusha
das
cltd
lret
test
push
sarb
not
movsb
in
lcall
fsubr
mov
jg
test
push
cmp
push
mov
out
rolb
push
into
mov
sub
ret
dec
mov
daa
push
xor
push
push
sub
icebp
sub
pop
xchg
sub
push
les
and
sub
rorl
xlat
mov
fdivs
stos
xlat
cmp
shrb
in
out
lods
dec
pop
mov
cmp
sbbb
xchg
test
clc
mov
sbb
mov
repz
int3
ret
ja
or
push
repnz
mov
loopne
mov
xchg
clc
repz
insl
xor
xchg
cmpsl
out
outsb
jg
fisttpl
ret
sahf
mov
shrl
std
out
sbb
pushf
mov
add
daa
in
movsb
in
aad
sbb
mov
out
adc
dec
inc
das
push
pop
aam
sub
inc
lret
push
stc
data16
popa
pop
mov
filds
movsl
je
cli
mov
mov
mov
test
aaa
sub
xor
inc
loopne
mov
scas
out
cmp
mov
test
fstpl
jg
fnstsw
gs
lea
cwtl
lahf
sbb
repnz
faddl
mov
mov
push
cs
push
mov
in
lahf
andl
mov
mov
out
jns
ljmp
inc
std
sub
movsl
hlt
call
in
cmp
pop
popa
push
into
xchg
mov
fcomip
rclb
scas
pop
filds
das
xchg
and
fstl
dec
push
imull
jle
inc
dec
mov
daa
aas
movsb
stos
push
aad
jno
clc
mov
mov
das
mov
inc
mov
test
mov
pop
mov
add
mov
cmpl
dec
ret
rorb
cmp
cmpsb
test
jnp
xor
cmp
rcr
dec
inc
cwtl
fldcw
dec
repz
mov
jp
pop
sub
movsl
jne
arpl
adc
add
jne
xor
sub
in
lcall
dec
xlat
sbb
cmpsl
je
adc
add
pushf
out
into
xchg
mov
pop
and
std
mov
mov
mov
xor
or
sbb
sbb
into
xor
push
jg
xor
pop
push
add
mov
add
dec
xchg
lret
into
push
sbb
into
cs
push
call
and
pushf
push
insl
in
insl
pop
sbb
mov
xor
xchg
sarb
fldl
lea
and
mov
cwtl
xor
sub
in
insb
jo
aam
fidivs
clc
cmp
dec
stc
jle
pop
mov
pop
jge
cmpsl
ljmp
loopne
lods
pop
sbb
pop
push
and
leave
fdivrl
outsl
mov
jnp
imul
and
jl
out
xchg
addb
xchg
adcl
insb
xchg
loope
jbe
in
dec
lahf
sub
arpl
push
incl
xorb
pop
sub
push
sbb
mov
ret
sub
pusha
xor
fwait
imul
jno
pop
jne
in
or
scas
cmp
out
sub
sbb
xchg
pop
push
dec
mov
fs
jnp
bound
lock
push
mov
xchg
cmp
shrb
sub
or
xor
repz
and
xchg
xlat
je
xor
inc
mov
in
sbb
daa
xor
inc
fsubp
pop
xchg
dec
adc
repz
push
mov
jne
or
clc
in
cmc
loop
pop
repz
adc
lcall
dec
mov
ret
mov
dec
movsl
test
and
push
xor
sbb
das
in
jmp
shll
shrb
xchg
inc
int3
adc
shlb
pop
sub
cltd
imul
xor
mov
dec
ja
push
enter
jno
inc
pop
jae
jmp
add
xchg
ret
leave
jbe
nop
test
out
out
push
jg
call
and
sub
loop
mov
pop
mov
xchg
pop
and
inc
movsb
or
lret
cmpsl
mov
sub
inc
lock
or
lret
or
ja
mov
mov
mov
stos
sbb
pusha
jae
lcall
insb
add
dec
mov
popa
lds
jmp
nop
ds
jns
iret
int3
mov
dec
ja
aad
jle
jbe
leave
mov
das
xor
shrb
inc
imul
dec
gs
aas
insb
mov
push
inc
fsts
rcrl
testb
scas
cltd
adcl
movsb
inc
push
jne
scas
lcall
negb
int
adc
mov
add
xchg
es
pop
cmovno
fisttpl
pop
xchg
popa
xchg
mov
cmp
cmc
push
xchg
mov
jo
xchg
stos
mov
mov
aaa
cmp
sbb
or
cld
fwait
push
or
enter
jl
test
je
js
pop
mov
loop
xor
mov
jne
cmpsl
insb
out
test
fistps
les
imul
aaa
mov
pop
inc
mov
ja
dec
pop
leave
out
lret
xor
adc
xchg
inc
jp
std
enter
sub
sarb
jo
inc
movb
test
and
in
out
xchg
jg
fimuls
push
jae
scas
int
shll
inc
in
loopne
enter
shll
aam
push
jle
test
and
out
inc
sahf
pop
jne
aaa
sub
dec
in
adc
inc
movsl
lock
lock
iret
sbb
mov
lds
add
sub
jbe
aam
xor
lcall
lea
sub
sahf
pop
out
stc
loope
xchg
adcb
out
enter
dec
sub
dec
lret
mov
lahf
in
or
div
inc
fucomp
int
pop
mov
int3
jae
int3
push
cmp
daa
leave
push
xor
stos
mov
adc
cld
push
stc
out
cs
adc
mov
mov
es
jbe
or
shll
popf
repnz
sub
sbbl
arpl
cli
dec
out
jae
stos
scas
shll
or
and
sub
daa
xchg
inc
pop
leave
push
xchg
and
into
add
cwtl
mov
loop
cs
cli
inc
sub
insb
loop
das
push
clc
popa
mov
and
mov
bound
mov
int
sbbl
bound
jl
lods
fdivrl
or
mov
lret
fldenv
cmp
sub
dec
repnz
jb
mov
hlt
test
fwait
cld
add
push
mov
sbb
cltd
gs
cmp
add
imull
stos
pop
pop
sbb
sbb
and
inc
movsl
and
and
jnp
jae
insl
out
mov
lret
or
jmp
xchg
fwait
dec
fcomi
xchg
push
cmp
jno
lahf
imul
imulb
xchg
insb
ja
push
xchg
lods
repnz
fadds
les
mov
xor
andl
mov
shlb
insb
aas
fwait
js
lret
pop
jbe
stos
nop
mov
or
push
imul
adc
add
jmp
dec
xchg
or
push
xor
pop
sub
mov
pop
jp
jnp
fwait
cwtl
pushf
mov
jp
repnz
push
inc
jb
xor
testl
popa
arpl
in
and
push
cmp
aad
mov
in
enter
scas
xor
jmp
push
jecxz
and
lret
cmp
insl
imul
sarl
in
aam
aad
sbb
mov
mov
dec
daa
divb
dec
cli
fdivrl
jne
shrl
lds
gs
hlt
dec
and
xor
xchg
xor
adc
inc
xor
sub
mov
scas
inc
aaa
dec
pop
fstpt
jg
jae
jecxz
cmpsl
fwait
xchg
mov
std
jmp
das
and
in
jnp
and
sub
jns
jle
push
inc
xchg
adc
or
aas
mov
rorl
loopne
mov
xchg
in
mov
sbb
adc
pop
cmpsb
out
sub
testb
je
imul
int3
adc
jno
notb
rclb
scas
loopne
cmp
inc
ss
ficoms
lcall
push
lock
xlat
jge
stc
pop
insb
lds
fimuls
out
mov
mov
lret
push
lods
mov
pmulhw
inc
rorb
mov
fstl
jmp
into
mov
popa
int3
into
clc
dec
in
das
addb
punpckhwd
push
sub
and
sbb
sub
enter
or
pop
das
mov
inc
adc
add
adc
adc
mov
arpl
inc
mov
push
adc
xchg
dec
and
xchg
bound
fistps
mov
rolb
orl
dec
or
push
xlat
scas
jl
mov
inc
mov
xchg
inc
int
aaa
rclb
cltd
mov
shll
in
xor
jp
pop
adc
lahf
aad
pusha
ret
dec
fdivrl
sahf
cld
fcompl
mov
xchg
inc
in
test
test
xor
in
clc
cwtl
ja
or
xchg
gs
sbb
into
iret
dec
ss
fucom
mov
pusha
aad
pop
movsb
pop
push
test
push
sub
addb
xchg
aam
pop
mov
mov
lods
lock
pop
mov
pop
mov
imul
fwait
out
lock
jo
fs
imul
push
fwait
outsl
push
inc
in
sub
push
and
dec
mov
mov
movsl
aaa
jnp
xorl
cltd
in
mov
cmp
jg
cmpl
cmc
lret
jo
jne
sbb
xor
int
data16
push
icebp
jo
jg
out
inc
jg
inc
xchg
out
out
in
ret
xchg
int
mov
scas
fistpl
mov
jnp
in
lds
aaa
scas
out
push
aad
mov
sahf
in
inc
je
cmp
and
jge
jne
mov
movsl
xor
mov
aas
cmpsb
mov
jle
and
imul
cld
shlb
sarb
push
inc
mov
inc
pop
out
popf
popa
xor
cmp
test
fstpl
test
lret
test
rorl
mov
out
push
mov
mov
fadd
push
lea
jle
outsl
fidivrs
push
stos
testl
mov
xor
add
jbe
xor
addr16
inc
shl
jo
js
outsb
in
lods
fs
adc
jecxz
xor
fnstsw
cli
orb
cmp
add
mov
out
xor
cs
int
inc
lahf
push
stc
sahf
jmp
inc
stc
mov
outsl
cltd
or
jp
aaa
push
inc
mov
lcall
dec
push
sub
push
scas
mov
cli
aam
pop
in
fsts
sahf
fs
inc
dec
mov
bound
imul
mov
xor
xchg
add
repz
sub
sub
insb
pop
int
ja
pop
jecxz
push
inc
dec
inc
arpl
push
xchg
jb
aas
shlb
xlat
mov
stc
bound
cs
xchg
fidivrs
mov
mov
popf
bound
cmp
mov
dec
push
xchg
loopne
inc
or
push
inc
mov
mov
mov
jl
iret
xchg
fisubs
mov
mov
imul
push
adc
clc
pop
mov
out
call
xchg
sahf
enter
push
lds
ret
add
inc
lcall
mov
sbb
push
andl
or
jnp
js
test
sbb
add
mov
out
push
dec
lock
pop
mov
test
fimuls
mov
xorb
mov
jp
mov
cmp
push
xchg
ss
movsl
ss
add
insb
pop
pop
lods
js
sub
fimull
or
stos
adc
gs
test
cmpsb
testb
cmp
in
and
je
mov
gs
jmp
into
lock
in
push
divb
stos
pop
dec
in
inc
pop
mov
xor
or
arpl
adc
shll
popa
std
into
push
jo
es
mov
test
mov
loope
ljmp
addl
jmp
lret
sahf
orb
es
ljmp
xchg
inc
in
ficoml
loope
mov
int3
fimull
mov
dec
dec
pop
dec
roll
push
lret
fnstsw
sarl
iret
push
xor
cmp
mov
pop
sub
mov
in
jecxz
sub
data16
lahf
les
dec
jne
push
fwait
jns,pt
arpl
adc
lcall
and
ficoms
adc
jle
insb
test
aam
mov
adc
fmul
mov
add
popf
mov
and
pop
mov
in
test
jge
ffreep
mov
int
pop
or
mov
cmp
cld
pop
mov
data16
ja
mov
lret
nop
inc
push
mov
inc
shrb
sbbl
iret
imul
lcall
xlat
scas
hlt
push
fs
sub
cli
lret
inc
pop
adc
add
movsb
repz
jecxz
insb
lock
or
cld
cwtl
pusha
pop
sti
xchg
movsb
outsb
jle
or
xor
push
inc
or
jbe
mov
jb
pop
sbb
orb
and
gs
pusha
ret
mov
jb
adc
les
addr16
ret
xchg
je
pushf
add
clc
sarb
test
imulb
iret
repz
andb
mov
push
mov
movsb
leave
or
add
mov
outsb
mov
out
fwait
push
sbb
inc
stos
mov
pop
add
xchg
pop
jg
mov
sti
add
mov
or
jecxz
call
mov
adc
xchg
mov
daa
or
xchg
repz
out
cli
subb
repz
xchg
push
jb
mov
hlt
pop
bound
int3
xchg
pop
dec
pusha
clc
push
cmc
jg
inc
mov
jmp
mov
gs
rcrb
stos
jnp
out
dec
fiadds
push
popa
and
icebp
pushf
push
mov
ret
jns
and
dec
mul
mov
pop
test
mov
pop
sbb
cmp
sbb
mov
and
in
xchg
in
cmp
sub
xchg
loope
adc
pop
cs
sbb
fcos
or
inc
xchg
jns
add
inc
and
inc
call
jbe
cmp
je
xchg
out
mov
pop
sub
push
mov
mov
incl
test
out
xchg
and
sysenter
jecxz
mov
arpl
orl
jae
add
pop
cmpsb
cs
pushl
dec
mov
mov
dec
je
mov
stos
jne
and
addl
sbb
repnz
aam
mov
fstl
mov
sub
jb
arpl
push
lahf
mov
fisttps
xchg
pop
lahf
nop
push
lds
cmpsl
fldt
rcr
pop
sbb
pop
shlb
cld
cmp
lock
mov
out
cmpsl
push
push
jmp
push
fidivs
xchg
je
mov
ljmp
in
and
push
inc
add
inc
add
or
fimuls
push
pop
xchg
mov
aas
insb
fldl
nop
movsl
push
insl
rorl
insl
cmp
sub
jl
push
mov
scas
rorb
pop
xor
mov
or
sub
pushf
mov
test
cwtl
iret
popa
xchg
sbb
fdivrs
mov
add
sbb
mov
dec
cmpsb
addl
push
inc
je
jp,pn
push
nop
es
movsb
pop
test
dec
jo
insl
mov
cmp
iret
decl
pop
sbb
sub
xchg
pop
test
jge
aas
dec
cltd
in
addr16
mov
jb
rorb
pop
mov
push
or
icebp
int3
adc
repz
sub
mov
sbb
xchg
and
mov
sub
jl
sbb
cld
adc
cmp
mov
mov
lds
es
movsl
xor
push
fmuls
mov
inc
and
rolb
cmp
lcall
cmp
mov
lock
lea
stos
lods
fiaddl
add
clc
ljmp
pop
xchg
push
ret
adc
push
or
cmc
nop
ret
jl
nop
jg
inc
mov
test
popf
imul
mov
movsb
mov
lock
cmp
xor
xchg
sbb
or
iret
jl
xor
mov
mov
loope
cmp
lds
fistpl
loop
sbb
loope
dec
inc
stos
int3
push
repz
scas
popa
leave
dec
dec
mov
scas
popa
in
test
sub
xor
in
enter
sti
jg
xchg
mov
sbbb
scas
sbb
dec
cmpl
inc
mov
push
in
jg
fsin
jmp
xchg
out
ss
mov
ret
mov
ret
inc
fdivrs
mov
or
mov
mov
sbb
sub
mov
xorl
mov
mov
movl
cmpl
je
cmpl
jne
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
sub
mov
and
mov
mov
orl
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
mov
mov
mov
mov
sub
mov
sub
add
mov
orl
sub
mov
or
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
adc
lea
and
mov
movzbl
sub
mov
push
mov
movzbl
sbb
mov
lea
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
xor
xor
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xorl
mov
mov
mov
sbb
mov
xor
addl
add
negl
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
add
mov
mov
add
sbbl
push
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
movzwl
add
mov
adc
mov
sub
xor
mov
subl
jmp
fildll
push
mov
mov
pop
sub
mov
in
jp
pop
jp
inc
sbb
test
jnp
test
mov
push
lea
mov
sbb
movsl
ja
cltd
or
jmp
sub
cmc
pop
idiv
ja
leave
jno
in
jmp
xchg
int3
shr
fcmovb
adc
pushf
test
xchg
out
les
pop
sbb
fcoml
push
fwait
jbe
mov
fistl
mov
js
adc
fstps
pop
dec
push
data16
or
leave
mov
sbbl
push
jmp
shrb
out
xchg
int3
jp
stc
or
outsb
adc
call
cmp
xorl
xor
pop
ficoms
mov
adc
jns
pop
insb
repnz
dec
jo
push
movsl
mov
or
or
cmpsl
mov
test
daa
xchg
dec
pop
push
push
xor
pop
iret
cmpsl
and
xor
js
push
xor
fs
data16
mov
or
dec
fstl
sbb
cmp
insl
cmp
adc
push
ljmp
shlb
push
cmpsb
lea
std
enter
ljmp
iret
shll
hlt
pop
imul
push
xchg
dec
mov
loope
imul
xor
xor
outsb
xchg
jge
shl
xor
and
in
fldt
xor
scas
aam
xchg
or
into
dec
repnz
aas
loopne
dec
jno
in
push
push
add
test
ds
iret
lret
jae
add
mov
aas
inc
rol
addr16
mov
movl
fdivs
mov
mov
fcmove
and
sub
push
repz
std
pop
pop
mov
push
iret
sbb
adcb
dec
adc
addb
pop
cmp
test
std
fdivrs
jge
sub
adc
je
in
or
add
push
test
and
test
push
mov
and
lock
mov
je
sub
fwait
out
xor
inc
adc
sub
inc
pusha
aaa
stos
arpl
pushf
or
call
sbb
or
jg
cmpsl
mov
fwait
test
insl
inc
jg
sarl
jae
ja
cwtl
jl
sbb
inc
adcb
adc
clc
dec
push
loopne
add
sub
lods
xor
arpl
ret
ret
mov
jmp
cltd
lods
adc
int3
les
into
add
push
ljmp
repz
pushf
in
xchg
nop
fdivs
xor
mov
daa
movsb
push
lock
scas
adc
inc
and
dec
loope
ljmp
das
outsl
les
daa
js
push
arpl
mov
cmpsl
jl
jae
dec
in
xchg
cmp
and
push
pop
jmp
jb
test
adc
aad
adc
es
mov
xchg
mov
sub
mov
sbb
dec
mov
lcall
pusha
int3
test
call
push
sbb
mov
sbb
xchg
adc
sub
rcll
push
ret
jns
xchg
jnp
into
into
lods
xor
shr
dec
int3
xchg
lret
pop
lods
addr16
cmp
daa
add
adc
scas
popa
sbb
jne
pop
loop
add
push
movsb
fdiv
add
repnz
mov
pop
or
stc
xchg
push
int
or
mov
scas
repz
int
repz
pop
mov
in
shlb
xchg
mov
dec
mov
and
cltd
lods
pop
sbb
jmp
aam
mov
inc
push
push
jae
orb
sarl
movsl
in
xchg
jb
pop
inc
leave
dec
jl
idivl
xor
or
les
leave
ljmp
je
movsb
and
mov
inc
add
jle
lods
fidivrs
lds
dec
mov
cmp
jmp
aad
cmp
das
mov
xchg
pop
pop
idivb
add
leave
jmp
nop
push
jno
flds
cmpsb
arpl
mov
jg
xor
xor
sub
inc
and
cmp
mov
mov
mov
cmp
mov
outsl
inc
mov
inc
sub
jl
xor
sti
pop
loopne
cmp
xchg
inc
lret
xchg
xchg
dec
aam
mov
cmp
cmpb
sub
lods
outsl
xchg
jge
jp
push
inc
mov
lods
inc
jge
xchg
jp
xor
lea
fistpll
mov
jb
xor
lods
push
push
sahf
jns
inc
jmp
test
add
mov
in
xorl
daa
and
jmp
aas
push
mov
adc
jb
adc
sti
into
loopne
fcomps
add
jmp
pop
lret
or
add
or
xchg
das
dec
jbe
jbe
shl
repz
add
sub
out
mov
inc
mov
mov
repnz
mov
push
pop
cmp
mov
clc
mov
and
shlb
scas
inc
pop
hlt
insl
adc
xor
xlat
or
inc
pop
js
or
push
jo
in
orl
divb
repnz
cld
test
adc
pop
and
inc
outsb
cmpsb
pop
adc
addr16
sti
or
fisubs
in
fstpt
and
sub
lods
aaa
ret
fists
cmp
jne
pop
movsb
cmp
stos
mov
out
hlt
dec
pop
test
loopne
pushfw
imul
jbe
sub
inc
inc
ljmp
shl
jns
insb
or
and
mov
inc
mov
xchg
cmp
cmpsb
inc
pop
mov
stc
loopne
roll
jns
rol
test
cmp
je
in
and
pushf
dec
pop
mov
jg
add
jmp
add
mov
mov
in
or
cmc
mov
and
loope
sub
popfw
sbb
adc
cs
fimull
in
sub
push
decb
jp
pop
and
es
or
lds
fstpt
daa
cmc
ss
in
out
sbb
adc
push
les
xor
sti
sub
call
rorb
or
dec
dec
fwait
or
jns
or
ja
seto
push
dec
cmp
and
sub
xchg
ret
scas
adc
mov
jo
dec
lea
loop
jae
xchg
movsl
sbb
out
popf
cmp
out
jmp
or
push
mov
inc
and
shr
dec
js
mov
lea
cmp
and
adc
js
xor
out
flds
out
data16
test
pop
or
inc
addr16
pop
pop
sahf
inc
ret
push
ret
lcall
inc
sub
mov
adc
nop
jl
add
insb
imul
push
out
add
or
mov
ret
add
sti
repnz
push
mov
aas
sub
cmpsb
push
xor
add
pop
aam
sub
test
clc
sub
mov
push
inc
pusha
mov
pop
fmul
in
inc
inc
or
push
or
imul
arpl
out
adcl
mov
loope
mov
pop
movswl
ja
clc
aam
adc
mov
mov
sti
gs
mov
lock
mov
cli
sub
es
fnstenv
add
clc
cmp
aad
add
lods
and
sbb
xor
mov
popa
and
fwait
sarl
adc
outsb
xor
std
enter
hlt
in
add
cmp
add
dec
cwtl
ret
loop
cmpsb
ja
clc
ds
leave
cmp
loope
adc
shlb
cmpsb
jecxz
lret
stos
mov
push
ficompl
push
push
mov
sahf
adc
enter
fistpl
fnop
lahf
lea
into
inc
gs
outsl
es
xorb
leave
adc
pop
mov
mov
leave
mul
cmp
push
dec
mov
jl
and
jp
dec
clc
mov
pop
inc
enter
xchg
mov
cmp
shll
mov
cmc
cmc
adc
push
xor
iret
cld
dec
lods
adc
out
sub
push
lcall
dec
add
add
scas
adcl
out
stc
mov
sub
mul
sub
movsb
out
rcr
call
mov
sub
lds
int
mov
inc
inc
or
pop
sub
mov
je
and
xchg
xlat
xor
les
in
dec
xor
scas
test
xor
or
aaa
lret
iret
xor
negb
push
cmp
mov
neg
push
test
insl
add
add
test
notb
xlat
push
mov
cmp
idivl
mov
xor
mov
insl
push
adc
ds
adc
jge
cmc
loope
cmpxchg
add
add
mov
dec
stos
ja
cmpsl
push
jbe
mov
mov
dec
push
inc
je
scas
mov
lods
xor
adc
stc
in
insb
pop
fwait
or
icebp
pop
inc
ds
fs
std
cmc
enter
xchg
loopne
test
in
les
loopne
sub
push
repz
push
enter
test
jne
lcall
mov
inc
cmp
xchg
push
adc
lahf
mov
lods
mov
mov
jl
xor
push
lahf
push
enter
lret
testb
push
cwtl
sub
in
mov
mov
stos
std
or
dec
mov
pusha
jbe
dec
fucom
nop
mov
adc
lret
iret
sbb
mov
arpl
in
push
mov
mov
fwait
ret
cmp
push
ds
mov
sub
mov
xor
push
sub
and
leave
jl
nop
hlt
push
xchg
fistpll
fsubrl
scas
push
jge
mov
dec
in
jge
shll
test
loope
and
sete
in
enter
push
sub
dec
fnstenv
push
das
loope
xchg
push
sbb
ljmp
xor
sub
rcr
cld
hlt
add
cwtl
jns
jno
inc
cmp
rol
addr16
pop
int3
sub
add
dec
rcrb
adc
push
cmp
mov
push
pop
ficompl
add
lds
push
and
and
fistpll
int
out
or
mov
movsb
and
daa
mov
xchg
sbb
mov
jecxz
sbb
xchg
adc
ss
leave
sbb
das
and
jnp
clc
push
sub
cwtl
cmp
sub
mov
and
vaddps
xchg
mull
mov
jne
out
scas
fsubrp
adc
push
lret
jecxz
ret
add
adc
mov
inc
mov
fisubrl
xor
imul
imul
jo
mov
xchg
pop
icebp
xor
jno
jl
sub
jmp
mov
andb
jmp
cmp
push
mov
dec
xor
xchg
test
sarl
fdivrs
rcll
or
mov
repz
test
xorl
and
add
or
cmc
fstpl
in
outsb
shlb
inc
mov
into
test
mov
nop
or
imul
lods
rorl
mov
cmpl
arpl
sar
sub
int
mov
adc
sahf
mov
mov
pusha
popf
pop
bound
movsl
testb
xor
subb
cmpsl
cmp
nop
fildl
mov
sbb
out
iret
and
nop
inc
sbb
dec
imul
cmp
leave
sbb
gs
repnz
mov
jo
lret
xchg
and
xor
mov
and
bound
mov
or
es
in
inc
xor
add
mov
imul
lock
jp
icebp
push
loopne
mov
xor
adc
cmp
imul
scas
ficomps
push
pop
push
ficomps
inc
jg
jbe
sub
or
int
mov
mov
add
mov
aad
sbb
mov
pop
fwait
inc
pop
je
add
or
dec
out
clc
jbe
lds
mov
pop
xchg
jp
inc
in
add
fsubp
or
dec
mov
adc
cld
rclb
mov
loop
mov
je
sbb
or
cmp
sub
cmp
call
add
stos
xor
jne
mov
decl
sub
mov
mov
cld
cli
iret
pop
or
movlps
jmp
ljmp
icebp
and
fmul
pop
inc
dec
fsubrs
jae
incl
lds
jmp
sub
icebp
add
mov
dec
push
shr
js
int
and
mov
xor
int
int
jo
mov
movsl
int
test
push
sbb
cmp
sub
push
mov
or
jmp
pop
xchg
cli
daa
iret
fs
and
xor
push
push
lock
loope
ror
aaa
add
push
in
sbb
push
cmc
or
dec
mov
test
repnz
xor
inc
mov
inc
in
mov
sbb
adc
cmp
iret
addr16
testl
in
setl
mov
rorl
or
inc
lret
sub
outsb
adc
add
hlt
aas
andl
dec
daa
mov
bound
dec
int3
out
xchg
loopne
dec
pop
enter
lds
mov
cmp
sti
dec
dec
and
in
jns
in
fcmovnb
aaa
ja
and
jl
frstor
arpl
jne
loopne
pusha
sti
pop
cmp
mov
test
push
pop
add
push
leave
stc
outsb
xchg
xlat
dec
stos
or
mov
mov
xorl
xor
aaa
mov
sub
mov
es
fldenv
test
test
mov
inc
xchg
mov
cmp
push
data16
std
shl
add
mov
gs
dec
bound
adc
mov
cwtl
enter
lods
test
outsl
out
jg
jno
mov
mov
and
sbb
stc
jp
sub
add
sbb
push
or
cmp
mov
mov
rclb
gs
es
inc
imull
hlt
sub
aam
mov
scas
sahf
aas
lahf
mov
arpl
push
mov
hlt
rol
loopne
pushl
stos
test
fisubrs
push
andnps
xor
xchg
shl
jmp
lret
inc
sar
hlt
mov
fwait
rcll
ret
jmp
daa
ja
cmp
mov
js
xor
adc
movb
into
sub
and
push
shll
dec
lock
cmp
xchg
sub
pop
mov
pop
adc
enter
xchg
dec
std
cmp
jl
add
adc
xchg
sub
dec
pop
inc
push
sbb
loopne
mov
mov
mov
rcl
data16
iret
imul
sbb
mov
out
cmp
mov
dec
data16
ja
into
cli
cmp
arpl
jo
in
outsb
sti
jae
inc
push
scas
icebp
cmp
xor
mov
testb
adc
cmp
dec
push
mov
push
add
xor
push
pop
int3
mov
pop
jl
imul
push
add
sbbl
jns
xchg
out
sbb
dec
jmp
mov
outsb
mov
sti
in
subb
cmp
out
sub
je
add
mov
imul
push
cmp
mov
push
repnz
repz
fstps
sbb
pop
push
mov
aaa
mov
sub
dec
mov
pop
xorps
mov
dec
in
pop
fucomp
adcb
leave
cmpsl
jle
subb
mov
pop
xor
add
push
dec
loope
jle
sbb
pop
pop
mov
test
shlb
bound
inc
pop
scas
pop
ds
sbb
dec
or
sbb
jecxz
shrd
stc
adc
add
add
mov
cmp
dec
cmp
cmpsb
jg
xchg
add
insb
mov
test
int
sub
adc
insb
gs
int3
stc
adc
jae
out
ljmp
fisubrs
in
push
mov
add
scas
xchg
push
mov
cmc
mov
jno
or
sbb
sub
xchg
stos
cmc
and
xlat
repnz
repz
xchg
mov
push
negb
mov
cmpsb
add
xchg
jge
dec
or
popf
jmp
push
fdivl
sub
cld
fildl
sarb
xor
cmp
pusha
inc
cld
insl
mov
ds
push
cmp
mov
jl
cs
mov
into
cmpsb
cmpsl
jmp
mov
push
jge
adc
xor
repz
inc
mov
fs
clc
cli
cli
or
jno
push
prefetchw
iret
push
cmp
and
mov
xchg
dec
test
fs
jb
xchg
outsl
sbb
test
fmulp
imul
sub
jp
data16
and
pop
ficoms
lea
pusha
ds
pop
and
xchg
or
aas
jp
mov
mov
adc
std
xor
push
push
call
mov
jo
iret
dec
mov
dec
dec
inc
mov
sbb
jmp
push
fwait
vpsrld
and
or
or
out
and
shrb
mov
pop
cmp
fs
repz
and
fisubrl
and
js
inc
push
test
lock
xchg
push
push
ja
inc
mov
mov
inc
cmp
ret
cmpl
jne
push
jecxz
jmp
cmp
and
dec
mov
jmp
dec
jp
adc
mov
dec
mov
jbe
fs
adcl
pop
xor
fsubrs
xchg
aas
fsubl
xor
je
jns
mov
jne
arpl
rclb
insb
sbbl
test
add
shr
jmp
or
mov
lret
repnz
pop
data16
lock
xchg
ret
mov
stc
cmc
rcrl
cmc
pop
dec
fwait
cwtl
mov
mov
in
dec
or
or
ljmp
je
cmp
or
enter
jne
and
je
loope
lea
in
fiadds
ret
ss
and
and
xchg
or
and
test
push
andb
mov
int
adc
push
cmp
mov
fsubrp
cmp
cmpb
sub
cmp
sarb
inc
push
add
call
repz
arpl
sub
sahf
mov
cmp
xchg
mov
jne
pop
jge
or
cmp
sub
sarb
push
je
loop
scas
or
sbb
xchg
and
rol
adc
add
test
aam
push
imull
mov
outsb
inc
es
hlt
pop
cltd
lcall
sbb
or
cli
outsl
orb
repz
mov
jmp
jl
mov
sar
unpckhps
mov
jno
inc
ret
mov
dec
scas
jno
xchg
xor
loopne
test
mov
mov
adc
mov
add
push
adc
hlt
shll
push
lods
flds
jb
dec
lret
xlat
aam
lods
push
xchg
or
cmp
and
into
repnz
push
in
jmp
imul
into
jmp
jno
fnstsw
rclb
cltd
mov
add
ret
jnp
negb
cmpsl
loope
mov
fldenv
jmp
pusha
loope
dec
inc
repz
repz
insl
mov
data16
ret
stos
pop
sbb
or
fists
incb
movsb
mov
out
dec
jno
cmpsb
popf
out
ret
test
out
push
test
aam
lds
in
jmp
add
dec
sahf
xor
adc
filds
xchg
movsb
repz
rol
insb
pop
in
into
jle
scas
push
stc
repnz
or
mov
jne
loopne
js
xchg
lock
xor
sub
mov
test
and
inc
test
aaa
jo
rcrl
in
dec
mov
in
jns
or
xor
xor
jo
jle
mov
cld
in
outsb
mov
push
mov
xchg
shl
lret
cmp
dec
in
cmpb
mov
test
adc
adc
xchg
ret
mov
insb
pop
pusha
shl
inc
sbb
push
add
hlt
xchg
stos
out
adc
in
jecxz
pop
inc
xor
dec
pop
sub
cmp
loop
out
arpl
pop
adc
icebp
dec
sbb
push
cs
subl
and
jno
dec
sar
repz
adc
adc
lock
jecxz
jle
scas
cmp
jb
in
mov
into
addr16
fcom
push
xor
es
sbb
das
mov
cmpl
test
outsl
shl
xchg
inc
je
dec
cmp
jne
cld
xor
popf
adc
dec
inc
add
dec
out
mov
mov
push
pusha
jne
jge
icebp
call
sbb
fnstsw
xchg
pop
xor
xchg
insl
pusha
into
loope
push
nop
int
sarl
xor
movl
push
jae
pop
add
es
mov
mov
pop
pop
rorb
jae
xchg
cmp
clc
dec
or
iret
and
fisttps
pushf
in
and
fcmovne
and
sbb
loop
dec
in
mov
and
fldcw
out
pop
sti
or
loopne
mov
pop
out
lods
mov
into
imul
stos
pop
cmp
outsb
sbb
ljmp
test
and
xchg
pop
jnp
orb
in
movsb
gs
cld
jg
mov
sbb
scas
test
push
adc
cmc
fs
push
scas
in
push
jns
add
shll
pop
loop
xlat
ja
xchg
xor
cwtl
xor
mov
insl
ss
std
imul
xor
call
sub
lret
jg
inc
mov
test
pop
lcall
adc
xlat
sub
or
imul
fistpll
test
out
pop
mov
les
lret
adc
sub
in
add
xor
movsb
stos
mov
xlat
sbb
orl
aad
mov
push
jo
sub
pusha
aad
arpl
xchg
scas
loope
fucom
lcall
and
mov
divb
hlt
xchg
xor
xchg
xor
and
push
outsb
mov
imul
mov
jns
mov
xor
fdiv
ds
arpl
fistl
pop
nop
or
dec
lock
ficompl
shlb
outsl
inc
jno
inc
sub
outsl
cwtl
mov
popa
xor
loopne
mov
jnp
ret
mov
out
ficompl
and
dec
gs
lret
shl
movsb
add
inc
cwtl
xor
cmc
rclb
cmpsl
fdivl
push
clc
sbb
push
sbb
les
inc
sub
insb
mov
xlat
jbe
nop
sahf
xor
or
jns
lret
jno
icebp
mov
inc
xchg
jns
call
jge
imul
jp
inc
jae
cmpsb
inc
cltd
repz
mov
adc
rcll
mov
and
and
cmp
orl
aaa
pop
pop
add
jnp
lahf
pusha
pop
shl
ret
adc
and
xchg
jnp
pop
dec
push
out
jp
dec
inc
ret
and
mov
dec
sub
jle
mov
enter
mov
add
push
mov
and
dec
pop
mov
lret
xchg
je
test
push
dec
ja
in
insb
xchg
fwait
mov
inc
ds
imull
add
lret
lcall
mov
pushf
insb
test
sbb
xor
mov
hlt
lahf
aas
push
shl
inc
insl
cmp
test
cmp
jecxz
int3
movsb
mov
ret
lret
std
ret
cmp
or
sahf
or
outsl
mov
sar
std
cmp
and
aaa
sub
cmp
add
mov
add
rorl
push
aam
and
fbld
jecxz
and
test
and
test
loopne
rorl
inc
lods
shrl
fadds
stc
ret
fwait
xchg
mov
dec
dec
aam
push
push
iret
movsl
in
push
pop
inc
sbb
pop
ja
cmpsb
xchg
jbe
mov
test
rclb
rclb
addb
cmc
loope
out
sbb
or
movsl
in
inc
mull
jno
loope
sub
cld
or
sub
int
push
or
mov
inc
mov
sti
ja
pushf
push
imul
add
repnz
pop
push
mov
xchg
cmp
xor
adc
jp
rclb
out
jb
sub
dec
inc
les
mov
cmc
pop
sbb
negl
xchg
lds
sahf
inc
fists
out
or
sub
movsl
lret
dec
out
fdivr
cmp
cmp
js
clc
mov
adcl
push
ja
loopne
push
push
push
sbb
in
leave
pushf
mov
cmpsl
sub
xchg
dec
push
clc
sbb
xor
xchg
loop
or
das
mov
in
in
lahf
lock
jne
loop
fs
push
add
jecxz
or
cmp
scas
dec
insb
ss
xchg
push
stc
mov
lds
subb
stc
jb
out
or
inc
mov
test
sbb
lcall
add
mov
loopne
and
iret
ljmp
mov
stc
dec
test
pop
shlb
rcrl
mov
or
pop
push
mov
mov
adc
insb
in
and
addr16
call
mov
inc
cmp
jb
cmp
jmp
enter
or
cmpsl
sub
cli
lahf
data16
incb
fdiv
dec
fsubp
popf
sub
out
adc
adc
mov
packsswb
out
or
inc
les
or
mov
or
dec
jge
mov
jp
jbe
mov
mov
leave
pop
or
outsl
call
loop
cwtl
int3
mov
xor
dec
fnsave
jg
imul
pop
fimuls
popf
fidivrl
fwait
pushf
cmp
jle
cmc
out
daa
xor
jl
inc
into
cld
jp
dec
push
insl
or
sub
ljmp
xchg
fwait
out
and
shl
icebp
popl
inc
pop
jne
jp
xor
mov
mov
push
add
or
fdivrs
push
mov
cmp
xlat
movhlps
fs
cmp
imul
inc
mov
jo
sbb
jmp
push
and
test
push
icebp
jae
icebp
das
dec
mov
insb
bound
cmp
xchg
pop
sbb
daa
cld
sub
jnp
gs
push
xchg
das
pop
gs
xchg
stc
cwtl
cmp
mov
sub
and
adc
out
loope
xor
pushf
dec
mov
xchg
pop
dec
out
cmp
lret
pop
fdivrl
test
popf
addl
out
sub
sbb
sub
sarl
xlat
xchg
mov
sahf
sub
in
test
rcrb
loope
lods
insb
dec
lcall
dec
fidivrs
xchg
cwtl
fdivs
xchg
outsb
jecxz
and
clc
popf
or
popf
cmpsl
enter
mov
or
pop
int
mov
adc
jl
pusha
call
mov
adc
loop
adc
mov
add
jge
jo
lds
pop
out
xor
sub
push
into
jnp
cmpl
hlt
std
or
les
fldl
ljmp
fnstcw
cmc
js
lret
push
adc
jle
push
inc
adc
cmp
pop
mov
aad
mov
xlat
push
ljmp
lcall
mov
js
push
push
or
dec
or
sub
mov
js
addr16
push
les
arpl
int3
cmp
std
mov
and
popa
out
or
jmp
push
mov
lock
test
movsl
xchg
js
mov
mov
sahf
xor
mov
xchg
push
mov
cmp
jp
adc
dec
stc
adc
cmp
xor
out
push
adc
mov
iret
add
mov
loop
pop
push
cmp
add
push
xchg
test
into
dec
adc
pusha
pop
push
xchg
lods
aam
or
in
jne
push
mov
mov
pop
mov
sahf
mov
xlat
mov
xchg
sti
testb
add
out
and
jne
fnstcw
add
js
inc
out
jbe
out
cs
inc
sub
cmp
outsb
popf
add
decb
insb
pop
insb
and
js
mov
mov
sbb
fnsave
std
jnp
adc
and
imul
imul
std
repnz
je
ss
movl
xchg
push
in
mov
cltd
lret
lret
push
adc
xor
rcr
add
and
sbb
or
lret
pop
insl
mov
iret
xchg
pop
sbb
pop
ret
test
mov
or
xchg
pop
pop
push
jle
out
jg
sbb
ror
pop
add
and
ljmp
fcomp
iret
xor
je
push
movsb
cld
mov
outsl
repnz
jp
xor
cmc
xchg
stos
and
dec
lods
xor
enter
inc
lcall
push
das
mov
cltd
dec
popa
sarl
aad
mov
sbb
sub
jge
lahf
inc
mov
xor
push
dec
pop
add
jecxz
xchg
mov
xor
mov
or
aam
lods
add
into
cmp
pop
cmp
pop
rcrb
push
js
pop
mov
stos
ret
dec
shll
test
pop
dec
fidivl
push
lods
mov
xchg
and
loop
inc
repnz
inc
mov
aaa
or
adc
lahf
test
mov
adc
mov
sub
clc
insl
dec
inc
lea
movsl
adc
xchg
jl
xchg
std
jne
xor
xor
xchg
mov
hlt
adc
inc
mov
mov
or
iret
imul
push
inc
cmp
insl
mov
pop
shrb
pushf
cmp
outsb
sub
push
inc
mov
cmp
shr
and
mov
in
push
push
lods
pushf
aas
add
xchg
imul
imul
ds
cmp
mov
push
sbb
in
scas
mov
pop
loop
mov
jae
sbb
xor
mov
push
sub
fs
jecxz
out
aad
lret
repnz
cmp
fmul
inc
dec
push
jecxz
in
mov
lret
sbb
insl
call
out
xor
cmp
lods
push
xchg
adc
ret
into
mov
in
pop
aam
pop
xor
xchg
jbe
push
or
cli
cmp
jnp
push
out
xchg
xor
aaa
pop
hlt
push
lods
hlt
rcrb
loope
mov
sbb
addr16
out
addb
cwtl
ja
sbbl
jge
cmp
mov
jbe
decl
xchg
shll
daa
sbb
jns
pop
arpl
mov
pusha
and
dec
pop
xchg
gs
mov
mov
cmp
mov
mov
notb
add
insb
xor
movl
je
movl
mov
movl
jmp
mov
mov
cmp
movl
jne
movl
push
movl
jmp
mov
mov
mov
cmp
movl
jne
mov
xor
movl
cmpl
je
cmpl
jne
push
push
push
push
pushl
push
call
xor
xor
dec
mov
jmp
adcl
add
movzwl
xor
mov
mov
mov
xor
mov
or
mov
orl
xor
movl
add
movl
imul
dec
mov
andl
xor
adcl
add
cmp
mov
mov
push
movl
je
addl
mov
add
movl
cmpl
je
cmpl
jne
call
xor
add
dec
mov
jmp
sub
mov
neg
mov
subl
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
jmp
rorl
xchg
mov
pop
jmp
dec
xor
pop
pusha
leave
jp
adc
jp
dec
dec
lahf
jne
xor
mov
scas
pop
pop
sarl
imulb
dec
das
stc
imul
jge
fildl
mov
add
sub
mov
loop
fisttpl
in
lods
pop
dec
sub
in
or
scas
mov
ds
inc
push
cmpsl
notl
gs
pop
jnp
movsb
pop
push
rcrb
sub
xchg
jns
pop
push
shll
mov
mov
adc
cld
cmp
pushl
cli
xchg
sub
push
icebp
mov
aaa
xor
and
mov
les
stc
mov
push
stos
xchg
aam
loop
jg
add
mov
movsl
pop
and
sti
xchg
int
push
push
or
imul
sub
push
push
mov
mov
jmp
rdmsr
gs
mov
jno
sar
cli
jne
jle
xchg
pop
mov
or
outsl
adc
imul
test
add
mov
loope
scas
add
fcom
repnz
xchg
jno
int
decl
dec
adc
in
mov
sub
jmp
nop
mov
and
mov
inc
mov
fs
mov
xor
test
in
and
jg
fstpl
je
in
mov
lret
rcrb
xchg
in
scas
sti
scas
hlt
push
popf
pusha
daa
je
jg
rcrl
xchg
mov
mov
sub
jg
ja
inc
adc
pop
outsl
out
scas
ss
rcl
cmc
mov
push
je
std
aam
insl
push
push
or
repz
andl
insb
adc
sub
dec
jecxz
into
jl
sub
shll
xchg
xlat
in
movsl
leave
out
dec
cwtl
sbb
stos
jno
out
inc
dec
or
rorl
fsubs
arpl
pop
stc
add
xor
jl
cmc
mov
jno
push
pop
ret
add
ret
adc
outsl
jp
daa
sub
js
xor
inc
inc
xor
in
popw
out
int3
loopne
fdivs
or
mov
mov
mov
movl
int3
test
in
outsl
scas
mov
repnz
iret
iret
jo
sbb
mov
xchg
lret
fisttps
rolb
add
mov
xchg
ret
pop
lods
lock
push
clc
push
add
and
stc
repz
cmc
xchg
testb
cmp
jmp
jmp
inc
inc
jl
sbb
sub
imulb
int3
sub
cmp
xor
mov
and
fs
sub
inc
jmp
jae
inc
pop
pop
ss
repz
ljmp
out
mov
lods
out
shll
jns
test
push
dec
rcrb
adc
mov
out
int3
sbbb
jne
mov
stos
aam
mov
inc
inc
gs
int3
push
shl
adc
mov
xchg
cs
pop
shlb
mov
lods
mov
stos
push
pop
cmpsl
lds
shl
and
dec
xchg
bound
pop
sub
mov
orl
pop
dec
in
pop
push
addr16
push
shl
gs
fs
cltd
lret
jo
inc
sub
cmp
outsb
into
dec
mov
push
jo
js
adcb
sub
pop
in
xor
sub
xor
or
enter
mov
mov
adc
xchg
ljmp
xorl
pop
and
mov
xor
fprem1
and
ret
xor
test
neg
jbe
lret
cmp
loop
leave
out
xchg
ja
and
add
into
jmp
mov
lret
inc
mov
or
add
rcl
jmp
in
mov
mov
sbbl
lods
inc
pcmpeqd
xor
in
adc
mov
inc
jns
fstpl
xor
cld
xor
movsl
mov
cmp
add
nop
mov
loopne
enter
mov
leave
out
add
jbe
and
sti
pop
sar
shll
jmp
xchg
sti
pop
jp
xor
in
lret
ds
dec
mov
outsb
inc
lods
mov
mov
popa
out
leave
jnp
xchg
lods
loopne
or
out
pop
cmpsl
call
push
cmp
inc
outsl
mov
adc
lods
push
lods
jb
dec
iret
and
mov
pop
inc
adc
popa
sbb
adc
out
call
scas
push
jno
outsb
jl
fsub
xor
mov
mov
mov
or
xchg
cmp
mov
xchg
push
pusha
lret
mov
mov
sbb
jno
jge
pop
sub
fucompp
orb
into
lods
lods
ret
or
jge
inc
enter
jge
fiadds
and
dec
mov
gs
aam
pop
and
ds
rcll
pop
add
out
call
mov
sbb
add
lret
push
sbb
sub
and
push
and
add
inc
push
pop
sbb
insl
mov
mov
aas
push
push
sub
and
inc
xor
insb
lret
and
icebp
inc
adc
addb
stc
movsb
cmp
push
push
sbb
and
cs
push
cmpsl
int
jecxz
push
insb
mov
or
jecxz
repnz
xor
cmpsl
negb
pushf
mov
push
movl
xlat
adcb
mov
cmpsl
xor
xchg
into
jl
gs
mov
outsb
xchg
mov
xchg
or
stc
outsb
data16
leave
xor
mov
adc
in
loop
js
add
mov
lahf
cmpsl
imul
push
sbb
dec
add
out
push
push
dec
aad
leave
cltd
das
push
daa
and
mov
popf
das
fs
idivb
hlt
adc
js
in
leave
aad
js
pop
cmp
mov
inc
lcall
adc
mov
push
mov
fidivrs
mov
fwait
cwtl
js
mov
mov
shll
cmc
faddl
adc
popf
cmp
hlt
pop
stc
mov
sbb
push
fsubr
lods
cld
pop
fadds
movsb
lcall
arpl
inc
jo
fnstsw
dec
aad
jnp
call
xor
rep
es
jp
fwait
ja
sub
jecxz
or
ss
sub
mov
mov
cld
test
sarl
pop
push
mov
dec
jl
sbb
test
in
dec
sbb
sub
mov
in
push
xchg
mov
into
xchg
push
adc
sub
pop
inc
inc
adc
pop
xchg
sbb
add
mov
mov
fs
pop
daa
jmp
enter
pop
je
dec
jae
push
push
pop
lds
ret
sbb
movsl
add
sbb
pop
sub
cld
sub
inc
popf
cmp
jno
xchg
movsb
fsubrp
inc
pop
shlb
cmp
insb
scas
mov
mov
adc
inc
movsl
mull
cmp
cmc
xor
adc
pop
fwait
out
adc
dec
in
adc
push
shl
jo
mov
mov
call
in
adc
or
fisttps
sar
jmp
and
mov
fs
mov
aaa
push
gs
out
inc
cmpsl
pop
hlt
mov
inc
stc
pop
jp
fidivrs
jp
iret
test
pop
fcomps
lea
add
xor
jae
sub
test
ds
dec
pop
mov
xchg
push
pop
pop
lret
jnp
setbe
fsubrl
xor
int3
jns
ret
vpmaxsw
push
movsl
xor
mov
cmp
mov
mov
push
notb
mov
jmp
dec
mov
cmp
xor
mov
int
stc
xchg
imul
sub
shll
das
inc
xchg
cwtl
sarb
xor
sbb
sbb
xor
push
or
sbb
sti
js
pusha
popf
mov
cltd
push
xchg
and
sub
adc
sbb
push
imul
sbb
call
and
and
inc
nop
jle
into
add
xor
lea
cmp
sbb
jp
pop
push
pop
icebp
sbb
lahf
mov
add
mov
int
popf
xchg
and
push
inc
or
push
arpl
and
clc
mov
insb
out
sbb
or
jp
repz
jp
inc
in
mov
int
or
cld
pop
lds
inc
call
jae
std
int
shrl
dec
or
adc
xchg
sub
es
push
cmove
or
imul
fs
lods
lods
lret
mov
add
sahf
lock
xchg
test
inc
pop
fiadds
sbb
add
lahf
out
lods
clc
sti
pop
pusha
mov
jnp
ret
shlb
dec
xchg
sbb
adc
movsb
xchg
ds
mov
orl
push
sti
jp
mov
dec
adc
inc
mov
movsl
xchg
add
add
mov
push
cmp
loop
push
jmp
nop
faddp
inc
icebp
ds
pop
and
and
push
iret
das
pop
js
leave
push
jp
pop
sbb
or
mov
push
mov
hlt
add
sub
into
pop
std
aaa
test
dec
movsl
jo
ljmp
mov
or
xor
pop
stos
mov
xor
nop
cmp
cmp
pop
or
pop
mov
mov
push
jge
daa
fsubrs
imul
rolb
lods
sbb
int
sub
inc
mov
ja
cmc
daa
add
andl
shlb
divb
test
cmp
mov
insb
push
mov
jmp
xor
call
lahf
jb
pop
xchg
incl
or
outsb
and
pop
push
daa
mov
fadds
int3
jne
out
mov
out
push
int3
jl
arpl
icebp
sub
and
cwtl
pop
test
xor
cld
inc
gs
sub
sub
inc
cmp
fcomp
fstpt
mov
cmpsl
jb
push
std
adc
loopne
xor
sub
jge
cs
mov
int
xchg
loope
fstps
jo
dec
mov
pop
dec
jmp
mov
in
leave
cmpsl
mov
nop
fisubl
out
xor
outsb
or
cmp
add
sbb
lcall
inc
push
hlt
daa
jne
xor
aas
fiadds
and
push
cmp
test
xor
sar
outsl
pop
push
inc
or
jle
xor
sbb
cmp
test
out
test
out
hlt
imulb
xchg
jmp
pop
das
leave
test
inc
adc
mov
pushf
sbb
outsl
cwtl
arpl
inc
dec
jecxz
sub
sub
test
test
jns
dec
fldt
sbb
cmp
data16
push
js
pop
lret
aad
jae
lock
mov
dec
sbb
sbb
add
notl
and
push
mov
popf
mov
cmp
mov
fcmovu
adc
or
xor
call
inc
jle
mov
lods
xorl
notb
jp
jmp
je
and
sahf
cmp
xchg
fisubrl
fisttpll
mov
mov
or
sbb
insl
add
aam
jle
ret
cmp
inc
outsb
xchg
leave
pop
aas
test
fmull
jl
imul
inc
cs
xchg
sbb
pop
cmp
mov
cmc
cmp
sbb
and
scas
xchg
mov
cmp
fcomps
popa
pusha
roll
push
lret
push
lret
hlt
rorb
ds
negl
dec
and
lret
dec
lock
cmp
xor
cmp
test
aaa
ljmp
les
push
loop
mov
inc
and
stos
orl
rcl
push
test
cmp
aas
mov
jge
push
hlt
lods
rolb
jmp
jmp
mov
repnz
nop
sub
pop
imul
add
sub
mov
jmp
sbb
add
in
imulb
movzwl
pop
jnp
shl
pop
add
jae
fisubl
pop
arpl
or
jge
add
not
pop
ret
xchg
mov
xor
inc
xchg
cmpsb
jl
jecxz
pop
sub
loop
xorl
pop
pop
dec
test
push
scas
mul
sahf
push
stos
adc
push
es
pop
dec
je
push
test
xor
cmpsl
inc
jnp
add
dec
in
sbb
mov
lahf
nop
enter
xchg
sbb
sti
add
neg
add
loopne
jmp
sub
cltd
push
mov
cld
sarl
fxch
rclb
rolb
jb
scas
icebp
jno
mov
lods
and
repnz
adc
sbb
les
xor
stos
or
mov
lahf
mov
sub
lahf
sti
xor
push
ljmp
mov
out
push
ljmp
das
or
ja
popf
fdivrs
js
stos
shll
dec
jle
push
pop
bound
imul
subb
loop
scas
inc
pop
ret
pop
xchg
cmpsl
test
xchg
sbb
dec
dec
popf
mov
aas
nop
mov
or
jg
push
sub
mov
fmuls
popf
cmp
push
xor
movsl
addr16
scas
mov
sbb
aas
jo
lcall
loop
and
ret
or
bound
hlt
repnz
or
filds
out
jmp
mov
dec
xor
cmc
mov
dec
sub
icebp
push
xor
ds
lods
lods
push
or
or
mov
inc
js
sarl
movsb
mov
mov
push
inc
adc
mov
mov
stos
cld
mov
fwait
sbb
out
je
or
inc
out
popa
dec
dec
in
std
sub
push
mov
aas
mov
sub
adc
push
movsl
bsr
fdivl
add
or
std
mov
imul
add
adc
ds
jl
dec
and
cmc
lock
negl
cmpsb
imul
dec
loopne
mov
dec
mov
stos
inc
loopne
mov
cli
inc
jg
mov
dec
test
sub
lcall
in
stc
add
jo
adc
sub
stc
adc
in
pushf
movsl
popa
push
cmpsl
sbb
or
xlat
shll
iret
pop
xchg
sub
mov
sub
xor
inc
add
fimull
in
jnp
and
jns
push
push
cmp
out
fwait
sbb
xchg
aad
mov
lds
mov
fnstcw
addl
push
sbb
pop
xor
mov
jbe
imul
out
fs
imulb
xorl
add
sub
cli
push
xchg
add
pop
fadd
lahf
add
lea
div
scas
adc
shll
fcomp
stos
aad
xchg
outsb
jmp
in
idivl
pop
pusha
jnp
jne
cmp
mov
test
pop
fbstp
sub
ret
mov
and
insl
ror
cwtl
lahf
xor
popa
pushf
cmc
inc
pop
and
cltd
mov
inc
cmpsl
clc
or
sbb
fmull
xor
pop
push
dec
lret
test
sbb
int3
rcrl
lods
mov
cwtl
mov
rcll
lods
or
addr16
les
inc
adc
and
xchg
push
or
mov
lret
out
ret
fists
lea
int3
jne,pt
dec
sub
jle
test
sbb
jb
lods
mov
or
inc
push
fwait
pop
sbb
mov
fdivrs
add
push
clc
icebp
pop
out
fnsave
loope
je
daa
sub
repz
add
filds
mov
jge
popl
outsb
ret
pop
jns
add
jo
mov
lcall
orl
inc
aaa
pop
mov
das
jnp
adc
movsb
mov
fwait
or
jo
popa
ljmp
insl
push
add
sbb
popa
sub
mov
fwait
popf
movsl
popa
inc
and
loop
or
pop
testl
and
jg
popa
and
mov
fst
jg
xor
test
cmc
push
xor
mov
inc
jmp
pop
inc
fisubrl
xor
addr16
jno
lcall
outsl
inc
pop
xchg
pop
les
jecxz
push
cmp
ds
shlb
mov
adc
popf
adc
mov
andb
aas
cltd
imul
cmp
adc
repz
test
push
adc
cmp
push
fmul
xchg
mov
jo
xchg
xor
std
stc
repz
in
xorb
movsb
shl
gs
fwait
dec
les
scas
enter
fists
adc
push
loope
push
dec
lods
xchg
push
jae
xchg
imul
pop
out
movq
repnz
faddl
cli
adc
fchs
mov
sbb
xchg
nop
cmpsb
in
and
jp
aam
fdivl
mov
lods
or
inc
ret
movsb
gs
xor
mov
out
sbb
pushf
adc
arpl
push
aaa
stos
inc
gs
inc
leave
clc
dec
xor
scas
push
out
cmp
in
pop
cmp
or
adc
movsb
push
cmc
add
dec
or
sub
insb
outsl
xchg
fld1
sub
aam
out
aas
cmp
ja
lret
pop
insb
popf
insb
bound
mov
dec
add
mov
test
mov
stos
repz
ljmp
jecxz
mov
std
add
xchg
dec
aad
jne
movsl
aas
in
dec
xor
inc
test
or
loopne
xchg
jge
lds
in
fwait
sbb
pop
adc
stos
jns
sbb
aas
or
pop
outsl
loop
lret
std
xor
rcrb
lahf
mov
ja
jo
das
push
mov
mov
fidivl
lret
xor
fs
mov
cmp
pop
fs
test
addr16
movsb
push
or
pop
mov
push
scas
sti
mov
lea
sbb
push
mov
ja
cmc
shlb
sbb
les
insl
daa
cltd
shll
popa
push
pop
cmpsb
imul
cwtl
lds
sub
mov
push
aad
pop
mov
xchg
ds
int
dec
and
or
mov
icebp
dec
mov
jae
ficoms
std
fisubs
sti
ds
sbb
jg
out
or
sbbl
inc
lret
hlt
es
out
jnp
cmpsb
jmp
icebp
in
or
idivb
out
sub
sbb
lret
jae
mov
add
ret
js
jg
daa
test
jbe
and
push
lock
daa
pop
push
pop
cld
xchg
xchg
add
mov
dec
int3
mov
cwtl
aas
inc
ja
add
jmp
jno
jnp
mov
arpl
aam
dec
dec
outsl
xor
fmuls
mov
fnsave
dec
adcl
adc
jnp
jns
mov
push
icebp
sahf
jnp
gs
push
rcrb
dec
cld
insl
inc
jp
repz
jp
sub
cltd
or
jecxz
insl
xchg
and
xchg
adc
call
sar
out
loope
js
sbb
cld
repnz
outsl
xor
pop
dec
pop
dec
je
dec
iret
xchg
adc
scas
jge
xchg
fwait
ret
push
and
cli
mov
fdivl
int3
mov
imul
inc
andl
jle
into
push
dec
mov
push
cmp
pop
leave
enter
cli
stos
test
lock
jle
dec
mov
adc
xor
xchg
iret
xchg
ret
ja
daa
push
scas
mov
inc
inc
movsl
stc
stos
mov
xlat
fbstp
ja
pop
mov
ja
scas
in
jns
mov
insl
dec
cwtl
std
sub
test
jp
xchg
clc
jb
or
jecxz
sbb
add
nop
hlt
cli
imul
jno
out
data16
push
jp
in
xchg
cwtl
mov
test
mov
imul
push
jg
jp
ljmp
dec
stos
push
mov
orl
mov
pop
ret
cmp
mov
or
pusha
outsl
dec
orb
push
adc
test
jae
rcl
mov
fs
xor
femms
imulb
hlt
push
push
cmc
mov
aad
and
push
xchg
ja
mov
ret
xchg
int
js
mov
jge
out
push
orl
and
cmp
inc
inc
mov
stos
jle
inc
test
out
repz
in
add
push
aas
cmp
xlat
cmp
scas
xchg
mov
loopne
or
sbb
jecxz
pop
cmpsl
mov
xor
out
mov
mov
mov
pop
mov
fidivs
mov
pop
inc
imul
xchg
out
cltd
and
and
dec
jbe
cmp
xchg
dec
jb
test
repnz
iret
add
call
leave
sub
mov
xor
mov
out
test
xchg
xorb
mov
inc
jl
adc
adc
cmpsl
leave
inc
jno
adc
and
mov
sbb
or
test
sbb
sub
jp
int3
shrb
cltd
sub
lods
mov
mov
ret
push
arpl
and
jno
mov
daa
push
and
sub
jne
mov
mov
adc
jge
inc
repz
mov
mov
scas
and
or
sbb
scas
inc
xchg
sbb
xchg
in
cmc
aaa
popa
stc
dec
cs
cltd
pop
xor
cmp
xchg
xchg
jb
mov
loop
stos
pop
push
ficoml
aaa
js
imul
stos
les
xor
js
inc
ret
dec
inc
mov
lcall
add
and
mov
mov
scas
nop
lahf
cmpsb
mov
movsb
mov
in
roll
mov
push
aad
shll
jg
add
xchg
out
push
gs
mov
iretw
cli
inc
pushf
out
and
cmp
insb
lea
imul
scas
pop
fucomip
stos
adc
adc
mov
xchg
aad
out
inc
jo
sbb
movntps
sahf
inc
mov
cmpsl
out
and
fsubrp
cltd
sbb
sbb
std
test
jo
pop
inc
jbe
push
inc
cmc
out
jecxz
mov
inc
or
repnz
jge
test
pop
sub
lahf
mov
int
mov
movsl
xor
push
pop
mov
and
test
push
fcmovnb
gs
cmpsb
jns
int3
repnz
test
sbb
aam
sarl
sti
push
or
inc
cmp
push
push
shrb
push
sbb
fbstp
rcrw
mov
loope
dec
sbb
adc
xchg
rcrl
mov
dec
inc
xor
imull
xchg
mov
mov
mov
js
mov
xor
push
sub
mov
add
jecxz,pt
adc
lods
add
incl
pop
sbb
mov
cmp
shrb
mov
faddl
dec
insb
mov
sbb
mov
pop
mov
in
fiadds
fsubrp
int3
lods
pop
xchg
or
mov
pop
mov
in
loop
push
fidivs
xlat
popf
jge
js
ja
push
ja
test
in
rcrl
mov
imul
mov
jp
cmpsl
cmc
pop
mov
push
add
adc
dec
mulb
mov
test
jns
sub
or
xchg
pop
divl
out
mov
push
jne
aad
adc
push
ss
dec
xchg
aas
jo
popa
clc
pop
push
nop
jne
and
xlat
sahf
sbb
jg
lretw
mov
nop
inc
adc
clc
cmc
ds
pop
outsl
add
mov
add
pop
jbe
mov
pop
pop
filds
call
sbb
enter
stos
movsb
movsb
cmpsb
loop
loopne
xor
add
pop
jl
int3
jge
mov
pop
dec
jmp
daa
js
ja
mov
cltd
xchg
xlat
aas
scas
or
inc
in
mov
jo
nop
jb
ret
ljmp
add
pop
fwait
jmp
mov
sbb
jne
popf
push
nop
xor
mov
and
push
add
in
jle
repnz
sbb
sbb
adc
lret
pop
add
into
orl
mov
mov
int3
sub
sub
xor
push
lahf
idiv
rcrl
pusha
cmpsb
lock
lock
insl
mov
pusha
xor
mov
mov
and
lea
mov
ljmp
cmc
xlat
jo
cmp
dec
int3
je
outsb
cwtl
add
mov
push
mov
fadds
bound
jbe
pop
outsb
or
sti
mov
and
xchg
sub
push
fisubrs
lcall
in
adc
pop
pusha
or
mov
xor
push
daa
xor
pop
push
mov
stos
jae
mov
mov
inc
stc
insb
xchg
gs
jae
rclb
fisubrl
inc
jmp
sub
leave
xchg
mov
repnz
and
pusha
sti
cli
dec
andnps
jnp
push
pop
xor
pop
mov
mov
add
dec
sub
add
inc
sbb
fsubs
or
jb
sbb
inc
cld
out
adc
outsl
les
call
inc
sub
adc
pop
inc
addr16
aad
sub
popa
ja
rcll
lret
dec
out
in
loopne
call
mov
xchg
push
out
hlt
adc
adc
insb
add
jmp
xchg
call
mov
cli
add
mov
jb
insb
ljmp
or
scas
fwait
sbb
dec
sub
inc
lock
ret
es
pop
mov
rcl
mov
jecxz
leave
movsl
jmp
aaa
aad
insb
or
imul
test
pop
xchg
jmp
lahf
std
ja
jbe
mov
mov
dec
mov
xchg
sti
out
sub
test
mov
or
push
cmp
inc
sbb
sbb
cmpsb
cmp
lret
arpl
sub
xchg
and
cmp
adc
jmp
aam
xor
dec
out
jnp
pushf
outsb
call
cmpsb
movsl
mov
shll
and
dec
sti
jno
push
repnz
scas
mov
mov
in
mov
lcall
dec
cltd
xor
imul
push
xor
adc
xchg
stc
lods
add
push
pop
js
jg
inc
call
dec
jmp
test
pop
mov
cs
jb
out
scas
xor
fisubs
repnz
xchg
test
sub
je
add
fcmovnb
dec
cwtl
icebp
in
loope
xchg
hlt
jecxz
lods
in
sub
sub
scas
or
adc
cmp
arpl
pop
in
dec
scas
in
adc
dec
xor
int3
frstor
std
and
aaa
jbe
int3
into
in
mov
mov
ja
out
xlat
xchg
jmp
push
xlat
dec
dec
int3
ret
stos
ret
dec
repnz
int
dec
xchg
out
mov
push
stos
sub
addr16
out
inc
or
or
adc
fs
push
mov
test
aas
gs
sbb
xchg
movsb
fs
jb
adc
push
int
inc
fnstsw
fists
test
and
das
inc
push
cmp
xor
icebp
adc
enter
les
inc
pop
fidivs
mov
sbb
jge
wrmsr
pop
je
mov
push
xchg
inc
pushf
sub
fistpl
flds
stos
add
mov
xor
cmp
int
arpl
push
fwait
xor
icebp
hlt
data16
sub
dec
add
push
das
cmp
xor
jns
dec
mov
jge
dec
pop
xchg
bound
mov
cli
stos
in
les
or
in
leave
inc
inc
lock
or
mov
fldenv
fmuls
lea
sbb
shrl
sub
dec
jg
das
bound
and
fldl
push
out
push
sbb
push
mov
rolb
mov
and
dec
cmp
mov
jae
xchg
mov
pop
push
fsubr
lods
adc
shlb
mov
out
in
mov
leave
inc
ja
xorl
pop
dec
jmp
addr16
push
pop
jo
push
jnp
and
fcmovnbe
and
mov
test
or
pop
int3
cmc
add
mov
inc
xchg
into
clc
fnstcw
inc
stos
mov
xchg
sub
pop
or
gs
sub
xorl
lret
jnp
sub
out
mov
nop
mov
cmp
adc
pop
aas
gs
lock
cs
mov
hlt
rcll
or
sbb
adc
ds
ds
sub
loopne
xchg
push
sbb
jno
mov
mov
rcrl
loopne
das
adc
xchg
push
jecxz
or
pop
test
adc
jecxz
inc
push
dec
sti
cld
movsb
xor
mov
sub
faddl
imul
dec
pusha
dec
mov
sub
mov
ret
cmp
std
xor
xor
mov
xchg
dec
add
mov
out
in
dec
jns
and
cmpxchg
lret
xor
lcall
adc
xor
xchg
das
nop
inc
xchg
cmp
pop
test
inc
pop
out
pop
cwtl
hlt
mov
out
es
fisttpll
and
xor
ret
fisubl
aas
pop
hlt
adc
bound
test
push
nop
mov
cmp
ja
jl
adc
mov
arpl
dec
jb
lcall
xchg
push
rcl
xor
or
pushf
sbb
xor
dec
orl
jno
xlat
mov
push
scas
mov
mov
cmp
dec
or
lcall
aad
fcoms
lahf
outsb
jnp
in
lcall
adc
mov
sahf
jbe
xchg
daa
insb
cmp
cli
xchg
add
push
jmp
pop
add
je
or
leave
out
scas
mov
and
pushf
pop
inc
push
aas
mov
push
int
ds
push
dec
test
les
jmp
addr16
push
arpl
adc
popa
cmp
in
push
mov
mov
int
ljmp
movsb
sahf
push
std
xor
xchg
or
mov
shrl
ds
pop
xor
mov
dec
popa
xchg
aas
test
xlat
sub
cmc
adc
je
leave
ror
xor
push
push
aad
addr16
xorb
sub
xor
push
arpl
loopne
push
xor
scas
sbb
sub
pop
sbb
mov
mov
orb
testb
or
imul
gs
mov
rolb
scas
xor
pop
shlb
imul
stos
and
mov
dec
and
sub
cltd
push
and
mov
sbb
cltd
xor
cltd
fadds
dec
mov
test
xchg
pop
inc
sahf
and
inc
int3
jbe
jbe
repz
xchg
jmp
push
leave
sbb
cmp
aad
jle
adc
sub
movsl
sbb
in
inc
cld
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
push
mov
mov
sub
and
mov
orl
mov
xor
xor
xor
add
sub
imul
movl
add
push
adc
mov
mov
xor
or
adc
mov
mov
or
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
add
xor
addl
mov
addl
add
sbbl
add
addl
imul
movl
mov
movl
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
push
mov
push
movl
mov
and
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adcl
xor
sbbl
add
mov
mov
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
xor
mov
adcl
mov
subl
xor
mov
xorl
add
movzbl
sub
movzwl
mov
mov
add
movb
lea
mov
xor
mov
mov
andl
mov
sbb
mov
xor
orl
sub
adcl
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
andl
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
push
mov
xor
movl
xor
xor
or
mov
adc
push
add
mov
add
xor
mov
movl
push
add
jmp
mov
movl
mov
inc
cmp
movl
jb
movl
mov
addl
xor
xorl
add
jmp
movl
cmpl
je
cmpl
jne
pushl
call
xor
xor
dec
mov
jmp
mov
sbb
mov
sbbl
mov
xor
orl
mov
addl
add
movzwl
mov
mov
subl
movzwl
xor
add
mov
mov
inc
not
mov
movl
cmp
movl
jne
mov
mov
xor
add
mov
sbb
mov
xor
add
andl
xor
xor
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jb
sub
mov
adcl
movl
movl
sbb
movl
add
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
sbb
mov
or
mov
xor
inc
add
mov
mov
mov
je
mov
mov
xor
jmp
aas
xor
es
hlt
and
sbb
icebp
in
mov
ja
scas
jp
push
pop
jp
adc
push
mov
ret
ss
es
push
sbb
xlat
inc
fnsave
loope
test
adc
mov
mov
aaa
mov
xlat
jecxz
cs
enter
repnz
fcmovnbe
imul
rcrl
mov
call
xlat
insl
icebp
sbb
cwtl
mov
cmpsb
test
xchg
adc
xchg
adc
mov
rcrb
mov
push
xorl
pop
loopne
lcall
sbb
stos
push
push
pop
stos
sub
add
dec
add
les
jp
xor
inc
stos
push
pop
mov
cmp
xchg
push
jp
push
mov
hlt
mov
cmp
xor
sarl
addr16
ds
idivl
or
pmulhuw
aaa
sahf
mov
lcall
stos
lods
inc
repz
lahf
ljmp
cmp
enter
or
fdivl
pushf
adc
sub
ss
mov
mov
aaa
je
mov
lahf
imul
mov
cmp
xchg
add
cmp
add
and
add
aad
into
stos
sub
push
sub
push
stos
js
xchg
cmp
jo
mov
ret
dec
arpl
int3
xchg
pusha
xor
sbb
sbb
bound
push
movsl
les
push
cmp
stos
push
cltd
add
roll
mov
repnz
int3
sti
je
lds
jae
fwait
pop
xchg
and
icebp
movsb
mov
adc
pushf
out
pushf
jns
xor
lods
fisubrs
mov
es
repz
dec
mov
push
inc
and
cli
jp
negb
or
sti
mov
int3
push
sub
adc
sub
leave
pop
mov
mov
ficompl
pop
xchg
or
cmp
xchg
imul
fwait
xlat
fucomp
mov
fildll
popa
stc
fs
dec
push
or
cmpsb
es
fstpt
jns
stos
cmp
jp
jnp
xchg
sub
sub
aad
jl
std
sub
add
les
pop
rcrb
outsb
add
bswap
add
fimull
ljmp
rclb
jmp
lods
add
fmuls
dec
and
jbe
adc
mov
clc
cmpsl
add
push
add
dec
inc
ljmp
adc
cmpsb
mov
and
mov
pop
mov
push
dec
push
xlat
mov
in
and
arpl
mov
sub
pop
dec
test
mov
ret
sbb
rorb
arpl
adc
sub
inc
push
cmp
enter
xor
jmp
enter
cltd
pop
push
adc
dec
rorb
daa
insb
cwtl
cltd
dec
je
rorb
mov
xchg
push
xchg
push
jb
or
add
dec
adc
pusha
je
mov
cltd
leave
dec
aas
adc
in
into
pop
in
jns
aad
sbb
int3
filds
and
or
push
icebp
cmp
push
xlat
inc
mov
push
push
sbb
rcrl
cmp
dec
pop
mov
fisttpll
add
cmc
xor
das
mov
inc
jmp
repnz
daa
out
mov
lds
xchg
push
fldl
pop
jns
in
pop
adc
adc
divl
adc
inc
ret
xchg
adc
dec
inc
push
lcall
sbb
je
outsl
sub
in
mov
movsb
add
jle
xchg
hlt
pop
addr16
push
fnstsw
sub
push
cs
push
roll
mov
push
pop
inc
jne
pop
into
in
loope
sub
ret
mov
sbb
sbb
inc
das
or
push
pop
and
lock
or
je
imul
mov
ret
xor
adc
mov
push
fstpt
cmp
lcall
ds
inc
lock
and
movsl
psraw
lret
cmp
loope
test
mov
lret
mov
stos
or
repz
lock
cmpsl
sub
xchg
xor
sbb
shll
jae
xchg
in
icebp
jne
cmpsl
stc
sbb
je
pop
xor
das
xchg
add
lock
cmp
xchg
xchg
inc
stos
pop
lods
push
mov
push
mov
cmpsl
iret
xor
pop
xchg
add
cwtl
xchg
ja
pusha
inc
mov
adc
mov
push
sahf
pop
sub
mov
lret
jg
cmc
pushf
aad
je
in
arpl
ret
in
icebp
shrb
pop
outsb
cmp
mov
ret
mov
cmpb
sbb
push
cmp
cmp
pop
cmc
push
fwait
stos
cli
sbb
ficomps
outsl
fmulp
gs
add
outsb
sarb
adc
aaa
pop
shrb
add
jno
ss
sub
or
pop
mov
jns
push
addr16
inc
daa
icebp
pop
push
add
mov
lcall
cmp
sub
movsb
xor
cmp
into
pop
bound
cli
adc
and
mov
lods
fisubs
add
out
fwait
dec
xchg
mov
mov
mov
sub
mov
sti
push
adc
fsubl
lods
pop
js
push
in
mov
insb
addr16
cld
lret
aam
in
xchg
nop
mov
mov
insl
fprem
xchg
mov
dec
outsb
adc
inc
push
idivl
outsb
cmpsl
je
push
mov
sub
rclb
push
jecxz
jp
xlat
pop
pushw
push
add
sahf
in
cmp
aas
test
push
and
mov
subl
in
shll
hlt
je
rcll
andl
in
sbb
jge
dec
daa
mov
mov
outsl
jnp
imull
daa
xor
add
add
xchg
pop
hlt
lahf
fmulp
insl
cmc
pop
mov
and
paddb
adc
sub
stos
pushf
adc
mov
fistl
clc
add
cld
out
mov
push
jno
push
les
jbe
bound
mov
pop
xchg
pop
jecxz
push
jne
xor
scas
adc
jno
jne
pusha
push
jle
enter
cmp
lds
dec
lret
add
adc
inc
popf
and
mov
ja
sub
lahf
outsl
inc
std
fstl
sahf
aas
push
in
in
jnp
adc
dec
xchg
daa
fnstcw
test
out
fwait
out
ds
sar
lcall
ds
mov
adc
testl
xorl
adc
push
xor
or
push
dec
jg
push
das
xchg
cmp
test
xor
call
rclb
cmc
or
sub
pusha
dec
das
adc
mov
adc
cmc
mov
leave
sub
sbb
fnstsw
fsubrl
arpl
jne
jbe
repz
imul
cwtl
mov
jnp
testb
jo
nop
ljmp
cmpsl
xor
jnp
xor
fnstsw
cmp
stos
imul
mov
cli
push
ret
xchg
dec
cwtd
xchg
dec
or
xchg
ljmp
in
xchg
cld
fxch
scas
repnz
inc
icebp
sbb
test
popa
add
xchg
ret
pop
repz
pop
xlat
iret
add
mov
dec
mov
dec
jne
mov
in
outsl
lcall
ret
arpl
inc
xlat
lods
mov
in
pop
inc
sub
stos
loopne
pop
cmp
or
or
jecxz
mov
jne
xchg
dec
add
push
mov
test
hlt
addr16
dec
jnp
ss
cmp
test
adc
nop
lea
jp
xchg
ret
push
scas
xor
data16
mov
aad
xchg
adc
xor
push
mov
sub
push
aam
test
cmpsl
stos
not
aas
and
sub
and
test
push
pop
loop
jns
out
gs
jb
adc
scas
js
xor
inc
push
jb
lret
insb
divl
sti
push
ds
subl
and
adc
enter
ret
iret
mov
mov
clc
ret
pop
mov
push
sub
xchg
sbb
xchg
add
mov
in
inc
sti
popf
arpl
pop
jbe
or
jecxz
cmp
out
ljmp
cmp
push
lret
mov
mov
repnz
or
out
ss
pop
int
insb
lret
or
sub
out
inc
cmpsl
cmp
enter
jnp
addr16
cmp
pop
les
js
mov
add
xor
inc
in
icebp
out
add
pop
mov
popa
sbb
or
and
inc
rcr
adc
test
inc
mov
pop
sbb
fs
add
jge
lock
movsl
je
mov
cli
sbb
fldcw
mov
jl
hlt
sbb
out
mov
jbe
insl
call
push
mov
sub
pop
push
fwait
and
pop
sub
push
rolb
sub
fidivrs
mov
incb
fildl
adc
cs
int
popf
and
enter
in
sbb
xchg
xchg
inc
pusha
cltd
pop
fists
cld
sarl
int
push
test
mov
sub
xor
push
xchg
mov
inc
es
daa
jmp
bound
leavew
jle
mov
ljmp
int
arpl
pop
js
add
xlat
or
out
push
inc
cltd
jno
das
mov
das
mov
imul
add
int3
pop
push
mov
pop
andl
les
sti
jmp
lret
lea
insl
or
push
add
sub
sub
mov
dec
dec
movsb
jge
push
in
testb
fisttps
sub
movsb
aam
outsl
sbb
jbe
in
dec
or
neg
add
sbb
push
adc
jmp
sbb
cld
mov
push
out
and
fnsave
cmp
pop
push
inc
loope
pop
pusha
mov
push
mov
movb
mov
ficompl
and
push
inc
xchg
cmp
in
mov
push
dec
sbb
popa
insb
jns
fisttps
insl
inc
lahf
mov
enter
xorl
icebp
inc
sbb
dec
mov
shl
xor
cmc
lods
pop
setge
xchg
jns
outsb
dec
xchg
and
repz
push
jno
test
push
push
movsb
fsubrl
mov
xor
sub
mull
xor
inc
mov
cwtl
pusha
xor
into
aas
xchg
pop
loop
sub
mov
leave
in
sbb
cmp
negl
mov
push
push
pushf
or
add
cmp
cltd
mov
inc
out
sub
inc
jl
mov
aaa
movsl
fcoml
mov
repnz
push
into
jno
and
js
sub
inc
fstpl
or
ret
adc
inc
pop
shll
xchg
std
scas
push
out
nop
movsb
nop
fisttpl
leave
aam
pop
jne
xchg
adc
sbb
rolb
daa
jns
rcl
lea
cmpsl
pop
or
ss
aam
sarb
mov
cld
mov
ljmp
shll
inc
xchg
call
inc
iret
icebp
out
lahf
xchg
mov
imul
cwtl
mov
insl
sbb
xor
push
jnp
idiv
aad
lret
ss
push
xchg
cwtl
in
leave
inc
adc
adc
xor
push
pop
xor
xor
mov
push
jmp
push
icebp
addr16
mov
or
fxch
outsb
daa
push
mov
push
bound
mov
scas
inc
das
hlt
les
mov
xor
addl
pcmpgtw
inc
mov
mov
sub
fs
and
icebp
gs
pusha
xor
mov
dec
sbb
jg
cmp
data16
int3
rorl
jns
and
rorl
test
movsb
dec
xor
dec
data16
adc
xchg
and
and
lahf
sub
mov
loope
push
fwait
jmp
outsb
es
iret
inc
pushf
inc
dec
fidivl
mov
sbb
jg
or
jne
scas
lock
shlb
fidivrl
xlat
push
dec
sub
pop
adc
jmp
lds
insb
xchg
aam
data16
popa
adc
cmp
xor
loop
rolb
pop
rcrb
stos
mov
sbbb
jnp
nop
ret
ret
dec
jnp
ja
mov
mov
fidivl
int3
sub
dec
es
pop
sbb
outsl
push
xchg
and
inc
dec
testb
jp
clc
pop
pop
scas
fcmovbe
and
mov
push
dec
inc
xchg
add
pop
lahf
jp
xchg
cmp
sbb
imul
xchg
add
stos
jg
adcb
pop
xor
xor
inc
stos
leave
aaa
shrb
jbe
pusha
mov
loope
mov
enter
adc
adc
imul
dec
dec
mov
mov
and
pop
movsb
scas
div
xor
ja
mov
pop
pop
fisubl
pop
sbb
dec
stc
int3
inc
cs
xchg
inc
or
sar
movsl
mov
shl
xor
xchg
andl
out
aaa
add
jnp
shll
dec
scas
in
adc
ss
inc
push
xchg
jne
xchg
jmp
jg
pop
jae
iret
inc
scas
dec
aam
jnp
pusha
pop
js
add
cld
adc
fistps
inc
xorb
aaa
cmp
jns
xchg
or
pop
es
sbb
or
icebp
mov
push
jae
push
xor
mov
icebp
inc
add
cmp
pusha
lock
cmp
test
pop
std
nop
xor
mov
and
adc
inc
inc
scas
mov
cmpl
xor
and
jnp
jp
mov
cmp
sbb
push
mov
int
jbe
xchg
test
andl
sub
loop
xchg
cmc
xchg
jae
icebp
in
ja
js
std
popa
je
or
enter
or
popa
sti
insl
mov
dec
fcmovnb
loopne
jecxz
mov
or
lret
mov
xchg
scas
xchg
inc
sahf
lods
ds
mov
cltd
cmc
popf
mov
jl
icebp
mov
inc
icebp
lods
pop
cmc
hlt
mov
adc
lret
cwtl
jbe
shll
mov
int
inc
jp
adc
sub
push
idiv
enter
sub
les
fsubrl
movsb
aam
inc
push
addr16
or
and
inc
jns
movsl
lock
mov
mov
fs
mov
lods
or
mov
loope
aad
lcall
push
sub
mov
jg
sub
pop
mov
icebp
imul
out
sarb
and
fldt
push
nop
adc
es
addl
mov
ljmp
out
ljmp
in
or
divl
pop
icebp
push
roll
std
movsl
mov
pop
jb
rcll
jno
daa
arpl
sbb
mull
dec
pop
addr16
aaa
out
scas
jae
cmp
lds
insb
or
adc
ret
fmul
lahf
jbe
lcall
and
mov
pop
jg
cmp
and
pop
xchg
cli
inc
mov
adc
mov
jle
xor
fsubl
scas
cmp
xchg
sub
hlt
repnz
fcomps
xchg
dec
pop
sub
jmp
mov
pusha
dec
push
ss
sahf
addr16
xor
xor
dec
add
lret
add
insb
inc
xchg
std
cmp
addr16
jg
das
xchg
push
jae
lcall
cld
push
shrb
stos
notl
int
data16
ljmp
in
push
mov
shrl
adcb
in
and
cmpsl
fidivl
jno
pop
repnz
mov
sbb
push
push
addr16
movsl
ja
adc
push
sbb
in
fs
cs
popf
lock
adc
test
imul
and
scas
mov
lcall
lods
push
pop
jl
dec
jbe
pop
bnd
and
mov
out
cmc
pop
mov
xchg
js
jno
movb
cmp
popa
lret
xor
push
pushf
mov
ja
sub
fcoms
add
pop
mov
fdivrl
adc
loope
and
scas
xor
les
out
shrl
add
fistpl
or
leave
pop
xchg
incl
push
popf
lods
mov
jmp
bnd
jmp
pushf
roll
cmp
cmp
inc
and
mov
or
mov
jno
fadds
aad
sub
loop
lahf
mov
cmp
and
xchg
jl
loopne
adc
jbe
xor
fsubl
mov
sbb
arpl
pop
sbb
add
dec
inc
pop
adc
pusha
pop
or
xchg
std
insb
push
outsl
adc
rcrl
fldl
call
xchg
lret
jmp
insb
je
cltd
mov
mov
xor
ret
mov
push
jg
cli
cmp
roll
xchg
sbb
fimuls
push
aad
or
cmp
imul
loop
int3
push
stos
mov
iret
in
stc
push
std
and
or
sub
dec
mov
test
mov
outsl
ret
xchg
sti
icebp
dec
cltd
adc
mov
pop
add
sbb
push
and
xchg
or
stos
ds
cltd
fiadds
mov
arpl
ret
ret
push
cmp
icebp
repnz
sub
mov
or
dec
add
pop
out
and
mov
mov
movsl
push
stos
push
add
in
xchg
aam
mov
jecxz
mov
sti
mov
daa
sub
adc
test
xchg
sbb
mov
cwtl
lahf
mov
fwait
mov
and
jp
mov
data16
push
icebp
aas
pop
aas
pop
je
jecxz
adcb
repnz
mov
ret
push
mov
push
or
pop
adc
cld
cld
pop
dec
cltd
mov
icebp
out
rcll
mov
sub
jnp
test
insb
jae
sti
cmp
mov
jb
xor
push
cli
xchg
jae
rcr
mov
int
add
push
cmp
insl
cli
dec
mov
imul
enter
cmc
adc
push
cmpsl
push
or
mov
mov
jle
xchg
or
or
lea
int
sbb
andb
mov
push
mov
gs
adc
mov
xor
arpl
js
in
xchg
stos
add
fsts
add
test
jns
xchg
sub
lahf
stc
adc
pusha
mov
xchg
mov
add
pop
rol
jle
rcr
aaa
imul
cmp
mov
xor
adc
adc
rep
jno
mov
aam
stos
call
push
iret
cld
ret
dec
push
mov
mov
push
inc
adc
cmc
addr16
sub
adc
cmp
mov
mov
mov
mov
pop
shrl
cltd
lcall
dec
jle
pop
out
push
adc
addl
pop
addl
test
xchg
dec
add
test
jns
ret
adc
fs
les
adc
inc
add
bound
mov
subb
xchg
mov
pop
inc
rolb
test
js
pop
daa
lret
ret
scas
pop
loop
jb
sbb
mov
xor
sysret
pop
clc
lahf
or
int
lahf
sbb
and
mov
adc
lods
fwait
sbb
das
shrl
and
mov
imul
dec
xchg
jbe
pop
adc
mov
fdivrs
scas
pusha
test
adc
dec
test
mov
std
jns
cmpb
xchg
rol
pop
cwtl
insb
cmpsl
gs
and
loopne
in
fists
cmp
sub
xor
sbb
cld
fimull
ss
inc
insl
dec
xchg
add
sbb
cmp
icebp
iret
pop
jge
aam
push
fimuls
iretw
or
mov
es
bound
jge
popf
fnstsw
push
aad
int
fldt
aaa
adc
in
lea
lock
pop
lods
and
inc
mov
out
jae
stc
inc
fwait
push
enter
pop
mov
sbb
jne
repz
adc
sbb
inc
xchg
mov
in
push
or
xchg
ds
xchg
icebp
fcompl
pop
mov
cmc
insl
or
outsl
adc
jp
loope
ss
insb
adcl
insb
mov
cmc
pop
adc
push
inc
add
ficomps
fidivrl
aas
mulb
jae
lret
dec
and
data16
cs
sub
jmp
test
inc
mov
sbb
sbb
arpl
fnstcw
outsb
and
fsubrl
jns
dec
xchg
ret
sti
lods
movsl
jmp
and
in
sub
xor
xchg
and
jp
fsubp
lods
mov
dec
add
arpl
mov
push
addr16
das
adc
inc
sub
aaa
mov
stc
lret
dec
clc
sbb
jbe
lahf
je
fnstsw
mov
add
popf
mov
aas
add
dec
ret
aaa
mov
add
mov
or
pop
inc
into
imul
mov
push
sub
add
lock
std
aaa
pop
adcl
xchg
pop
dec
jl
jae
out
cmp
xchg
ja
fimuls
outsl
sbb
jns
hlt
pop
add
ljmp
mov
ja
mov
mov
insb
clc
sub
add
cs
loopne
cmp
test
pop
push
mulb
adc
push
dec
jl
adc
daa
push
movsb
xchg
cmpsl
icebp
das
jnp
xor
cwtl
or
xchg
incb
out
imul
mov
cmp
das
sub
and
add
fwait
xchg
bound
jbe
cmp
paddsb
sti
loop
mov
cmp
call
sahf
andb
xchg
add
push
mov
mov
lock
pop
cmp
cmp
lods
insl
pop
sbb
call
and
add
daa
rclb
mov
and
loope
push
mov
scas
mov
sahf
bound
jae
and
sub
pop
lods
clc
in
cwtl
rcrb
ret
push
test
sub
lret
xchg
jmp
test
fadds
cwtl
pop
mov
sbb
push
leave
popa
push
shl
mov
insb
in
popa
pop
xor
std
fcoml
lds
adc
inc
call
xchg
int3
jecxz
adc
cltd
cmp
enter
mov
jne
mov
mov
arpl
xchg
and
sub
loopne
xor
pop
call
xchg
mov
mov
mov
inc
jno
push
lock
jmp
pusha
cmp
out
xchg
pop
fs
scas
lea
mov
cmp
nop
dec
sub
sahf
movsl
jp
push
stc
add
imul
je
fidivs
push
add
lods
bound
ja
or
je
dec
add
movups
aaa
jae
pop
sub
xor
movsl
ret
xchg
sti
mov
inc
push
sbb
test
fsubrl
sub
icebp
ss
rorl
cmpsb
jp
sti
es
aaa
loop
lahf
clc
aaa
jecxz
jecxz
jg
cmp
scas
adc
pop
pop
rclb
or
leave
mov
int3
inc
or
cmp
inc
add
mov
insb
or
outsb
cld
xchg
sub
out
push
testb
push
or
adc
std
cwtl
mov
or
bound
inc
jbe
push
data16
int3
mov
es
mov
mov
jp
sarb
in
in
pop
scas
cli
loope
adc
jae
sub
rcr
push
pusha
or
ffree
arpl
xor
test
ret
sbb
aas
push
pop
xchg
das
pop
lret
cli
cld
add
mov
loopne
dec
cltd
cmp
xchg
pop
and
jecxz
inc
arpl
jle
repnz
mov
mov
mov
inc
test
dec
push
rcrl
shlb
fbstp
cmp
fdivs
rolb
cmp
mov
dec
loopne
out
stos
popa
dec
inc
dec
data16
mov
or
cwtl
mov
pop
fstpt
adc
jnp
mov
ljmp
mov
test
jnp
fistl
or
and
xchg
mov
mov
aam
cmpsb
in
nop
inc
lret
adc
mov
adc
mov
pop
movsb
sub
fiaddl
aad
sub
inc
std
cmc
pusha
mov
fld
cmp
into
xor
and
push
and
call
inc
out
add
popf
jle
enter
ljmp
push
add
scas
andb
inc
repnz
pop
sub
mov
xor
inc
insb
sub
or
push
mov
into
inc
movsb
shrb
xchg
out
adc
jp
mov
aad
jmp
dec
je
cmp
fdiv
fldcw
test
ret
sti
scas
xchg
pushf
in
pushf
jecxz
pop
popf
in
xchg
in
ret
and
dec
popa
repnz
xor
mov
fidivl
mov
fisubrs
mov
sarb
xchg
ss
mov
mov
sub
dec
xor
add
sub
arpl
cli
out
push
push
fidivrl
mov
pop
dec
movsl
or
icebp
jg
jo
loop
jmp
jno
sbbb
inc
mov
xchg
out
shrb
mov
xchg
iret
hlt
xlat
and
jnp
ror
fstps
repnz
aaa
lcall
test
mov
in
and
aaa
fcmovnu
lods
push
std
mov
sbb
lea
cmp
sti
mov
imulb
xchg
sub
lahf
mov
clc
cmp
jecxz
mov
push
xchg
cli
inc
push
in
pop
push
jecxz
js
jnp
cmc
or
aas
insl
push
pushw
hlt
xchg
mov
mov
mov
fldl
cmp
jmp
iret
popa
push
arpl
lods
jo
imul
mov
mov
pop
mov
push
dec
fnsave
pop
aas
mov
pop
pop
xor
dec
loopne
stos
mov
repnz
xor
or
xor
lret
int3
jne
aas
jnp
dec
xchg
lods
sahf
fs
mov
out
or
push
xchg
inc
insb
sbb
sub
push
in
xchg
roll
fimull
shlb
rol
test
lds
push
out
jmp
aaa
aam
sub
cltd
fisttpl
inc
jge
movsl
mov
or
or
jae
ljmp
stos
jbe
cs
xchg
out
cltd
mov
mov
and
push
sbb
aad
inc
aas
sub
pop
aas
jno
inc
dec
mov
sub
ja
sub
fmul
mov
test
xchg
idivb
ss
pop
fs
add
fistps
pop
cwtl
or
and
push
cmp
iret
pop
jge
mov
and
sbb
pop
fs
xor
dec
inc
shlb
mov
dec
jae
cmp
mov
dec
lods
push
das
sbb
jno
jmp
push
jo
enter
fcompl
xchg
xchg
mov
iret
bound
pusha
pusha
mov
lock
ljmp
cmp
xchg
imul
pushf
orl
push
ss
or
enter
jge
jbe
inc
mov
jbe
dec
cwtl
das
pusha
sbbb
mov
popf
inc
mov
cld
adc
lret
xchg
and
sub
inc
dec
or
enter
repnz
cmpsl
jle
sbb
mov
xlat
and
add
lods
mov
mov
inc
fcoml
jb
stos
adc
push
rorl
mov
sub
imull
inc
mov
push
outsb
mov
or
lcall
add
stc
xchg
test
repnz
xchg
push
or
mov
daa
aas
test
jecxz
shll
flds
fsubr
imulb
out
mov
sbb
je
imul
push
test
outsb
xor
std
xlat
sub
pushf
andl
out
mov
in
cld
outsb
sti
cld
data16
aas
or
xor
jns
repz
push
gs
xor
inc
hlt
js
inc
cmp
mov
mov
ss
or
hlt
ja
je
mov
inc
add
rcr
hlt
popa
push
call
jae
xchg
inc
fidivs
es
psubq
jl
test
mov
sub
dec
inc
xor
mov
xor
aas
ja
push
scas
js
push
insl
dec
ljmp
mov
mov
push
fldt
movsb
push
jo
jo
pop
ret
cwtl
mov
aas
lahf
pushf
xor
mov
out
insl
aad
leave
cmpsl
jge
xchg
xor
mov
cltd
imulb
pop
ss
out
sbb
es
xchg
daa
ret
push
sbb
sub
data16
stc
lods
test
xorl
out
scas
sarl
rorb
aas
aaa
cmp
cli
xor
roll
nop
mov
dec
imulb
cmp
in
mov
mov
ret
mov
xor
sbb
call
test
mov
push
dec
out
ret
pop
jns
in
sbb
loopne
mov
lgdtl
gs
add
mov
add
test
xchg
cmp
sbb
in
rclb
ds
sbb
and
jno
jmp
xorl
add
je
fs
pop
negb
cmpsl
mov
mov
cmp
push
mov
mull
sub
test
adc
movsb
loope
xor
sub
add
scas
js
loop
stc
pop
cwtl
add
adc
stos
pop
cli
rorb
ds
sub
ja
jae
in
jl
jbe
pop
sbb
fisubl
sub
stos
fwait
add
js
addr16
cwtl
mov
mov
popa
sarb
aaa
ss
shl
mov
cmpsb
pop
clc
mov
push
outsb
inc
enter
jo
test
fsubrs
sbb
or
sbb
shrb
hlt
and
pop
sub
add
jns
ret
enter
inc
sub
outsl
daa
shll
movsl
and
sbb
shll
cmp
loop
cmp
inc
notl
pop
adc
inc
shll
xchg
xchg
rcrl
xchg
cmp
mov
in
mov
mov
loope
jp
clc
in
fdivl
mov
cmp
jp
leave
hlt
adc
shl
sbb
or
pop
sbb
push
add
xchg
aas
pop
cltd
je
xchg
or
int
daa
xchg
push
pusha
add
sbb
insl
lcall
bnd
cmpsl
sahf
or
lock
nop
xor
rorb
rorb
pop
xchg
lock
ss
sub
mov
add
push
out
push
in
call
movl
mov
rorb
ret
dec
mov
mov
sar
and
cmp
jl
pop
rorb
addr16
mov
idivb
dec
sbb
popf
xor
sbb
lock
lods
inc
mov
cli
jle
loopne
sub
aad
imul
xor
jno
cmp
xlat
push
mov
leave
mov
jne
out
dec
fsubr
inc
frstor
add
sub
test
enter
cmpl
or
hlt
pop
lret
sbb
xchg
fdivrl
fadds
add
sub
adc
xor
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
and
mov
mov
movl
add
andl
imul
mov
mov
mov
add
subl
or
mov
mov
mov
and
mov
movzwl
sub
mov
andl
add
xor
sbb
mov
and
mov
mov
addl
add
and
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
sub
mov
lea
sub
mov
sbbl
mov
incl
mov
addl
sub
adc
add
subl
mov
mov
orl
xor
addl
add
movl
jne
movl
jmp
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
subl
xor
xor
sub
sub
xor
mov
mov
movl
jmp
pop
loope
mov
jnp
ror
scas
pop
cmc
sub
mov
jae
jp
pop
jp
pop
js
jmp
xor
aad
mov
stos
pop
test
orb
cld
push
mov
adc
pop
fiadds
popa
mov
das
es
jno
push
incb
mov
fs
cs
xchg
jge
push
rol
insb
inc
mov
shl
and
js
mov
push
fstps
jne
shll
push
leave
adc
sub
sub
inc
mov
mov
rolb
aas
insl
mov
or
in
cmc
bound
data16
inc
je
lcall
push
inc
clc
xchg
repz
or
lods
ss
icebp
xor
imul
push
gs
pop
or
jmp
stc
mov
mov
stos
mov
js
mov
mov
mov
fisubs
xchg
icebp
mov
lock
fdivl
in
pop
push
mov
mov
adc
movsl
push
movsb
iret
test
rolb
pushf
xor
dec
and
xchg
or
sbb
jae
stos
sbb
mov
push
xor
sub
push
ja
cld
xchg
fsubrl
sbb
push
inc
adc
sub
loope
adc
mov
adc
sti
add
jle
or
or
leave
int
adc
add
jbe
sbb
push
inc
push
shrb
pop
inc
xlat
xchg
sub
cwtl
add
imulb
rorb
leave
call
xor
push
inc
nop
add
mov
loop
fs
dec
repnz
inc
sub
leave
add
ret
addr16
and
xchg
fstpt
iret
adc
roll
ja
repz
imul
je
mov
mov
cmp
dec
cmpsb
leave
loope
cmpsl
js
cmp
sbb
and
mov
jmp
and
sbb
cmp
sbb
movsl
insb
jl
ja
mov
jnp
jbe
aam
mov
xor
or
mov
inc
cs
insl
jecxz
ret
mov
push
and
pop
es
jle
and
pop
push
arpl
jns
in
hlt
sbb
mov
ret
pop
das
cmp
psrld
jbe
sub
lds
enter
lret
xchg
lock
aad
inc
pop
mov
or
scas
inc
fnstsw
sub
daa
xlat
pusha
cmp
cmp
and
jl
aam
outsl
jns
dec
and
pop
mov
add
loope
xchg
dec
mov
lret
mov
mov
jno
fcom
mov
sbb
xor
inc
xchg
inc
adc
sbb
push
push
addr16
adc
jbe
and
and
neg
clc
mov
pushl
cmp
adc
or
adc
orl
and
fisttps
shll
roll
push
inc
sar
mov
rcr
int3
and
fldt
sub
fbld
nop
dec
out
movsl
pop
mov
jno
jle
testb
popf
jmp
or
jb
inc
nop
stos
cmp
movsl
inc
daa
lods
test
xchg
push
sub
inc
fcmove
stos
cwtl
add
sti
ja
push
ficompl
jg
xchg
call
adc
or
add
dec
jns
xchg
add
inc
mov
mov
ret
or
popa
sbb
sbb
dec
mov
lahf
cmp
or
rcl
inc
sbb
clc
aaa
xchg
sahf
mov
fs
pop
mov
push
xchg
out
and
mov
pop
aaa
inc
lcall
jl
fldenv
pop
sub
dec
fnsave
xchg
scas
mov
cltd
insl
into
or
mov
dec
fxch
leave
mov
loop
adcb
xorl
ja
or
out
outsb
test
xchg
outsl
jle
pop
jnp
cwtl
pop
jp
add
imulb
push
mov
add
stc
or
shl
jmp
jo
xchg
sbb
lds
in
nop
jno
xorb
fwait
pop
into
rclb
mov
mov
mov
addr16
jae
jnp
clc
shl
mov
mov
aas
test
mov
cmpsl
adc
mov
fsubs
dec
fldpi
pop
aam
or
loop
filds
ud1
shl
mov
xlat
mov
sarl
and
mov
jae
test
cmp
jmp
sti
out
sub
testl
out
loope
out
mov
add
xorl
iret
mov
mov
add
lods
and
cmp
adc
shr
loope
jnp
mov
adc
in
fildl
testl
push
cmp
test
push
test
push
jns
aaa
mov
mov
pushf
mov
push
sti
push
sub
jecxz
shlb
pop
mov
leave
xor
sbb
mov
popf
mov
push
mov
or
orb
mov
mov
scas
nop
repz
adc
adc
pop
adc
lock
jle
jecxz
in
orb
insb
arpl
lahf
mov
xor
repnz
and
scas
sub
int
jg
xchg
cs
xchg
test
jmp
mov
fs
ljmp
andb
xchg
add
stos
rcrl
or
out
jmp
sbb
movsl
and
pop
sarb
push
mov
jmp
cwtl
push
or
bound
ss
movsb
adc
push
or
mov
mov
outsb
jne
pop
dec
cltd
flds
pushf
and
stos
jmp
xchg
cld
push
mov
addb
push
into
xor
lea
jmp
jg
ljmp
lret
int3
or
jo
popa
aam
les
sbb
shll
incb
push
add
inc
pop
pop
mov
rcr
jno
outsl
sti
scas
and
call
adc
in
inc
mov
jns
dec
in
or
fcomps
adc
rcll
jle
cli
or
mov
std
mov
leave
shlb
and
xchg
jecxz
daa
xor
inc
mov
int3
mov
mov
dec
ror
push
rcrl
jl
pop
pushf
xchg
and
fisubrs
sbb
sbb
aad
repz
jmp
out
out
lock
push
clc
dec
dec
outsb
je
jae
fsts
arpl
dec
daa
mov
cmp
lret
ds
loopne
mov
mov
pop
xchg
pop
sub
insb
fs
unpcklps
jecxz
das
cwtl
mov
mov
pop
es
mov
inc
jns
daa
cwtl
into
adcl
test
shlb
add
out
icebp
pop
aas
cmp
repz
test
pop
idivb
and
push
scas
imul
xor
and
les
lahf
push
push
inc
cmpsb
xchg
push
cltd
into
scas
pmaxub
sbb
test
sti
sub
bound
je
js
sub
sbb
mov
fstl
notl
inc
and
pop
dec
int
push
lret
mov
push
repz
repz
jmp
roll
mov
inc
pop
pushf
ss
mov
das
xchg
lods
adc
mov
lcall
inc
mov
aad
inc
mov
push
pop
adc
outsl
xchg
cmp
test
sub
ret
pushf
and
push
dec
call
mov
sub
push
push
clc
out
rcll
mov
ljmp
sti
adc
push
icebp
lret
imul
shlb
xchg
aaa
movsb
cmp
cmpsb
daa
sbb
lods
fbstp
jmp
add
gs
and
ja
pop
or
aaa
xchg
in
xchg
test
adc
cmp
fcoms
mov
out
cmc
sub
lret
push
enter
aad
xchg
xchg
lahf
and
das
mov
mov
gs
push
lock
mov
or
lret
pusha
lcall
and
out
cmpsl
pop
out
mov
js
mov
xchg
inc
idiv
test
adc
mov
mov
sbb
or
cmp
mov
xor
outsb
jnp
scas
and
out
mov
sub
fmull
jl
rcll
jb
icebp
cwtl
and
shll
js
pop
lods
sti
dec
push
ficompl
cmc
pop
cwtl
and
test
pop
mov
cmp
xor
pop
cmpsb
jb
popf
dec
mov
inc
fwait
add
adc
nop
sub
movsl
mov
push
cmp
pusha
iret
imul
add
cmp
das
mov
add
and
je
mov
push
test
jae
inc
fstps
push
push
xchg
sub
lcall
mov
shrd
sahf
cwtl
pushf
jne
jno
xchg
sub
inc
subl
fmul
inc
adc
dec
push
adc
and
out
cmp
xchg
in
push
adc
ror
mov
cwtl
dec
mov
in
in
dec
ds
push
test
test
cmp
outsl
and
gs
push
retw
or
stc
sub
shlb
outsl
lcall
lret
aam
lret
das
fxch
push
popa
jns
lds
je
fsubrl
nop
stc
addb
xchg
fiaddl
fwait
test
dec
jbe
mov
xor
xchg
jge
push
and
xor
xlat
xchg
push
scas
push
pop
cmp
gs
fwait
xorl
mov
jno
int3
pop
mov
movzbl
out
add
orl
jo
xchg
pop
or
sbb
sahf
mov
je
pushf
jno
mov
xlat
mov
push
dec
insb
adc
movsl
hlt
push
repz
nop
call
mov
loop
call
xor
cmp
stos
mov
call
jno
xchg
xchg
addr16
out
inc
repz
pop
icebp
xchg
loopne
test
es
popa
and
ds
sti
jp
call
ret
hlt
out
xchg
xchg
lret
jle
in
mov
dec
dec
mov
jge
lea
dec
icebp
cmp
push
mov
fnstsw
inc
add
mov
sbbl
inc
inc
in
xchg
xor
mov
es
sub
jnp
fldl
imul
out
inc
dec
mov
sub
xchg
pop
pop
sbb
xchg
in
xchg
push
shlb
int3
pop
sub
xchg
cmp
mov
lahf
add
sub
adc
lock
push
pop
aad
mov
inc
popa
and
sti
jmp
inc
pop
adc
lret
xchg
scas
rclb
in
dec
iret
nop
outsl
mov
ret
adc
xchg
dec
cmp
inc
mov
push
mov
sub
add
or
incb
inc
aas
aam
jl
pop
test
shlb
adc
cmpsb
inc
jmp
mov
sarl
xchg
pushf
dec
ss
adc
fucomi
sti
xchg
mov
xchg
rcll
cltd
jg
xlat
jae
push
xchg
clc
xchg
sbb
jb
sti
jae
or
movq
push
fbld
jp
sbb
or
lahf
shll
mov
and
mov
xor
cs
fsubrs
lcall
xchg
aaa
or
xchg
loop
mov
mov
xchg
test
push
mov
mov
or
je
fsubl
add
xor
leave
push
mov
sarb
mov
or
pop
daa
cmc
lea
pop
shl
xchg
push
pop
das
stc
mov
decl
into
cmp
loope
cmpsb
mov
jg
cmp
sbb
out
sbb
fcoms
dec
mov
push
and
dec
xchg
add
fwait
out
or
stos
sbb
sub
xchg
les
std
add
mov
xlat
outsb
ror
add
sti
loope
insb
sbb
jmp
sub
jbe
insl
ja
push
adc
jnp
and
loopne
inc
cmp
test
cmp
pushf
add
cltd
mov
xchg
xor
adc
dec
orb
cwtl
or
movsl
cmp
ss
push
cld
mov
das
ret
ds
ss
das
sub
pop
cmpsl
fbld
iret
add
sub
insb
sbb
cmp
sbb
sbb
sarl
sub
cli
add
mov
cwtl
inc
xchg
or
lea
jp
sbb
scas
mov
cltd
mov
pop
mov
popf
inc
sbb
xor
push
sti
test
mov
rorl
pop
shl
mov
xchg
dec
mov
jo
mov
and
and
push
sub
inc
clc
adc
xor
lret
aad
cmpsb
inc
gs
fldt
dec
push
dec
add
fadd
nop
repz
mov
xor
ja
in
add
mov
xor
out
xor
fbld
cmp
pop
cmp
add
push
inc
in
pop
add
ds
in
scas
movsb
rcrb
jbe
cs
or
popf
inc
dec
lahf
mov
jge
push
xchg
popf
rcl
jno
xchg
and
and
xor
icebp
cltd
into
mov
jge
loop
mov
mov
rorl
adc
xchg
divl
jne
dec
sub
aad
ljmp
xor
cltd
inc
mov
dec
mov
ds
cmpsb
cld
lods
xchg
push
pop
pop
lods
sub
xchg
cmp
xchg
orb
push
fxch
andl
je
test
mov
fildll
jg
scas
lods
xchg
repz
push
rcrb
xchg
enter
fiadds
imull
dec
dec
movb
sub
mov
xchg
hlt
scas
movsl
push
ret
lds
repnz
pop
loopne
push
inc
jle
mov
ljmp
pop
jbe
jo
mov
scas
cmpsb
test
inc
dec
adc
js
xor
inc
mov
std
aam
xor
sub
mov
mov
mov
shr
push
push
pop
sub
mov
or
in
and
sub
js
inc
not
aas
dec
push
xchg
jbe
insl
push
jl
dec
pop
xlat
in
pop
shrl
pop
inc
rcrl
popf
dec
test
mov
nop
push
mov
jmp
retw
sub
mov
xor
jno
cmc
mov
cmp
mov
fs
mov
adc
cmp
dec
leave
int
pop
notb
hlt
xchg
add
mov
dec
pop
std
fldt
mov
or
mov
ss
in
xor
xor
pusha
mov
sbb
push
arpl
clc
repnz
fcomps
mov
cmp
cltd
xchg
jo,pt
dec
push
dec
dec
shrb
jle
frstor
scas
xor
dec
jno
pop
fsts
or
jb
add
pop
mov
dec
adc
mov
stos
insb
mov
lcall
ja
xlat
test
sub
dec
dec
movsl
outsb
xchg
lods
sahf
test
rorb
xchg
dec
fiaddl
testl
xchg
dec
add
xchg
fdivr
dec
mov
pusha
push
add
movsb
inc
fs
ror
daa
xorps
shll
jg
push
adc
inc
faddl
mov
sbb
lds
mov
loopne
xor
jg
scas
repz
mov
in
jns
sub
into
xor
cmp
jns
push
mov
xchg
sbb
xor
test
jecxz
add
jl
cmp
out
test
xchg
les
mov
pusha
ds
push
mov
imul
xchg
push
pop
lds
not
jecxz
xchg
outsb
loopne
movsl
xor
scas
addr16
outsl
push
inc
outsb
mov
push
mov
xor
andl
out
data16
mov
imul
insl
xchg
dec
mov
clc
mov
pop
inc
inc
mov
push
icebp
mov
shrb
xor
mov
ja
fidivs
dec
sub
pop
out
std
and
in
shl
mov
adc
pop
jge
mov
jle
std
popf
adc
jae
mov
test
jae
add
xchg
push
cmc
jmp
mov
roll
jle
inc
cli
rcr
out
scas
cmp
mov
mov
cmp
pop
sbb
mov
into
inc
shrl
ret
into
pop
dec
dec
pusha
stos
xchg
enter
stos
push
push
inc
fstps
jb
dec
ret
sbb
sub
or
xchg
ljmp
shrb
js
mov
data16
mov
mov
mov
incb
dec
insl
xchg
das
daa
cs
in
cmp
in
js
ror
sub
ss
mov
inc
lea
sarl
add
cmp
xorb
push
jp
mov
pop
mov
push
and
add
gs
popf
push
test
shl
or
xchg
testb
cli
and
mov
repnz
push
add
insb
aaa
xchg
insl
insl
lods
nop
adc
int3
iret
mov
shr
stc
lock
dec
sahf
push
pop
cmc
dec
test
and
in
rorl
sbb
int
mov
lock
mov
pushl
push
mov
jo
imul
mov
repz
shr
loopne
inc
xorb
lds
sbb
mov
pop
lods
push
stos
cmp
dec
mov
fst
push
sbb
pop
in
rcl
test
pop
sub
sbb
inc
jns
xchg
test
push
jmp
aam
lods
loope
or
pop
pop
push
lods
mov
addl
xchg
lret
sbb
or
jle
inc
shl
add
jns
sub
fisubl
and
popa
cmp
xor
sbb
dec
iret
inc
loope
xor
divl
or
mov
cmp
adc
ret
adc
xlat
xchg
test
ljmp
cs
sbb
jne
mov
xor
pop
lahf
in
iret
jns
loope
jo
sbb
sub
das
fadds
gs
inc
hlt
sbb
sbb
xchg
xor
sbb
dec
dec
push
xor
sahf
mov
xchg
test
pop
in
mov
fs
xlat
ficoms
leave
mov
iret
fsubrl
xchg
imul
outsl
ljmp
add
std
cmp
out
xor
cld
jns
out
cmc
cmp
xchg
mov
jge
movsl
and
jmp
cwtl
ljmp
ficompl
out
push
cli
sahf
add
ss
xchg
cmovo
rorb
in
outsl
jl
add
inc
sahf
pop
sub
lcall
mov
int
lods
add
mov
mov
xchg
add
adc
mov
push
pushf
sbb
imul
cli
mov
ret
xchg
sar
push
testl
outsl
stos
or
pop
andl
pusha
and
int
cmpsb
jp
mov
lret
jmp
andl
push
sbb
cmp
add
sub
fs
enter
mov
in
push
inc
jnp
test
clc
fldl
flds
movsl
xor
je
push
divl
ljmp
xor
mov
daa
cmpsb
or
jp
push
lret
std
dec
sti
sti
push
jmp
jnp
pop
mov
dec
out
jns
dec
push
imul
mov
test
fstp
pop
add
enter
xor
addr16
das
adc
bound
mov
stos
inc
jns
inc
add
and
stos
aad
mov
push
xor
cmp
jl
aam
push
push
pop
fisubrl
jmp
pop
aam
adc
hlt
jmp
inc
mov
xor
and
push
popa
mov
lods
inc
ljmp
es
xor
lods
mov
test
cmp
cmp
mov
mov
dec
push
jp
pop
mov
sbb
and
int3
dec
mov
cmpsb
push
leave
repz
pop
dec
out
mov
xor
dec
inc
mov
mov
test
lods
jb
xchg
sbb
subb
fstl
aad
jl
jnp
xchg
push
insb
and
addr16
imul
push
push
push
icebp
jl
sbb
sub
pop
and
cmp
jge
cmc
inc
popf
pop
cmpsl
lods
mov
mov
repnz
js
aad
daa
or
inc
mov
sahf
xchg
sbb
xor
push
push
sub
aam
dec
test
fdivl
inc
xchg
adc
xor
sub
dec
pop
sub
jb
xor
jg
addb
dec
lds
rcrl
sub
pop
mov
mov
jnp
out
dec
orl
nop
add
mov
add
movsl
es
or
je
cwtl
lret
and
xchg
mov
cwtl
adc
repz
add
dec
js
push
fs
sub
stc
aad
les
adc
nop
pop
xor
mov
arpl
xor
ljmp
mov
loop
push
stos
fimull
push
add
bound
clc
mov
sbb
xor
xchg
and
jle
add
add
jbe
std
mov
mov
pop
jp
sbb
cmp
jl
jb
ja
jo
or
push
call
mov
fadds
pop
dec
cmp
scas
iret
das
imul
std
sahf
mov
orb
ss
in
mov
pop
mov
clc
mov
popf
adc
ds
fmull
jmp
rorb
dec
jge
sti
push
xchg
popa
adc
frstor
out
mov
ret
cmp
sbb
mov
icebp
into
jecxz
xchg
jle
inc
lods
jmp
jnp
testb
sbb
mov
adcb
xor
ret
lret
test
and
xchg
inc
add
or
xchg
das
idivl
xor
mov
add
into
xor
mov
or
lods
stc
and
jmp
jo
icebp
mov
dec
shrl
jno
shlb
in
or
dec
and
pop
pop
daa
jp
das
shrl
lahf
pop
mov
adc
xchg
pushf
icebp
sbb
mov
in
or
outsb
test
xchg
daa
mov
mov
cwtl
arpl
jecxz
sbb
repz
ja
rcl
pop
cld
jns
mov
or
xchg
push
add
lret
mov
popf
push
adc
in
movsb
fsub
lock
loop
sbb
in
lods
int3
pop
xchg
sub
fidivrs
adc
call
pop
lahf
movsl
or
push
pop
mov
and
sbb
in
ljmp
xor
data16
mov
xchg
sub
inc
pop
and
mov
or
xlat
call
sahf
je
cld
mov
mov
adc
test
dec
in
mov
and
add
fcomps
mov
cld
test
stc
enter
xor
cltd
sbb
test
cmp
xchg
pop
push
sbb
shrb
stos
stos
or
jae
adc
rep
pop
rcrb
imul
lds
add
fs
fs
mov
dec
popa
shrb
mov
sbb
pushf
mov
rcrl
mov
lea
lret
into
scas
int
fisttps
pusha
dec
adc
cli
pop
xchg
fisubs
pusha
xchg
sub
mov
mov
push
ds
xchg
jl
sbb
insl
pop
hlt
js
adc
xchg
dec
dec
pushf
inc
loope
push
addr16
lret
dec
mov
mov
mov
sub
xor
shrl
mov
ja
sub
push
stos
shrl
pop
enter
cwtl
xor
test
push
je,pt
sbb
xchg
lock
movsl
shll
jecxz
lds
xchg
jle
sub
mov
jne
or
out
xchg
xor
push
mov
sbb
std
enter
mov
jb
pop
lods
daa
lahf
dec
lods
fs
mov
xchg
arpl
repnz
dec
mov
add
xchg
stos
add
jge
add
jbe
or
insl
sbbl
fdivs
shll
xor
jae
aaa
movl
das
mov
or
adc
pop
cmc
lret
movl
notb
sub
add
pop
ss
sbb
popl
mov
xchg
lret
imul
pushf
stos
popa
cmp
loopne
clc
mov
push
js
dec
movsb
orl
push
add
ficompl
jmp
aaa
and
lods
dec
or
xchg
and
inc
sub
cmp
enter
dec
xlat
push
sub
jmp
cld
jae
mov
cmp
xchg
jmp
adc
rcrl
scas
arpl
mov
dec
jbe
jne
jb
ds
jge
sarb
xor
stos
mov
mov
xor
mov
and
pop
and
mov
xchg
adc
pop
mov
cwtl
das
imul
lcall
cmpsb
mov
cmp
mov
pop
sbb
add
addr16
dec
arpl
scas
push
movsl
cmp
jmp
sti
pop
leave
jp
popa
cltd
jecxz
call
out
pop
lcall
push
jns
int
mov
loopne
xchg
mov
outsl
ja
jb
xchg
add
movsb
cmp
aam
jns
int
pop
inc
cmc
fidivl
adc
xor
cmc
in
or
xchg
jbe
sbb
in
inc
ljmp
loopne
jbe
repnz
mov
pop
dec
sub
std
jle
enter
inc
cmp
push
dec
inc
stos
dec
sbb
or
loope
mov
leave
std
dec
pop
cmp
repz
scas
out
pop
test
stc
and
and
stc
cmp
sbb
cs
leave
or
jbe
sbb
cmp
adc
push
and
pushl
jb
call
xchg
std
mov
les
push
adc
das
xchg
adc
inc
mov
pop
jae
push
and
cs
add
fadd
xchg
or
sbb
inc
into
daa
xchg
jns
jnp
adc
mov
xchg
test
mov
or
fwait
mov
aaa
or
pop
rol
shl
shlb
add
mov
bnd
inc
mov
add
mov
dec
mov
scas
repnz
push
in
sub
cmpb
mov
mov
inc
mov
or
inc
aad
sub
out
xor
repnz
jl
inc
or
jne
dec
mov
cmp
mov
sahf
dec
int3
ja
sbb
data16
and
cmp
scas
es
mov
mov
xchg
add
dec
xchg
sub
mov
mov
in
and
rcl
mov
repz
enter
int
call
stos
cmp
adc
sub
push
test
stos
std
ret
sbb
lock
sarb
mov
lret
xchg
rcrb
insl
stos
dec
xor
dec
mov
sbb
or
cmpsb
add
jmp
mov
test
lds
je
push
jns
mov
mov
add
xor
outsl
test
fimuls
add
jo
push
add
in
pop
outsb
test
insb
insl
add
clc
push
dec
push
cmp
aaa
add
or
mov
ret
pop
dec
xchg
adc
popa
fstpl
lret
sub
sbb
mov
cmp
sbb
xchg
dec
jne
pop
jne
out
add
js
fdivrp
mov
js
push
jle
in
push
out
push
xchg
push
xor
sarb
test
shl
addr16
add
call
pop
or
out
or
cld
and
test
ret
jp
or
jmp
stos
int
pop
or
xchg
cli
sbb
inc
jns
sub
or
cli
and
insb
das
sbb
dec
stc
rcll
mov
fisubrs
adc
test
dec
push
adc
daa
pop
sbb
es
mov
inc
or
push
cmp
push
add
jae
lret
adc
adc
sbb
lods
pop
mov
cmp
fidivs
mov
hlt
daa
repz
ficoms
xchg
out
repz
iret
mov
xchg
es
dec
xor
jo
sub
out
and
push
stos
lds
loope
loope
cmc
sbb
ljmp
mov
and
jp
pusha
and
scas
xor
xchg
clc
les
das
out
push
jmp
addr16
dec
inc
andb
fstpt
xchg
jmp
jp
aaa
pop
xchg
lods
sub
ljmp
pushf
dec
je
decb
sbb
push
scas
mov
pop
inc
lret
xchg
push
lock
outsb
mov
les
jb
adc
pop
mov
mov
push
or
subl
mov
stos
arpl
into
sbb
mov
mov
adc
and
es
daa
ret
add
dec
movsb
test
mov
adc
mov
jae
into
xor
or
js
xor
sarb
out
stos
xchg
int3
or
mov
call
fcos
les
inc
push
outsl
mov
insl
js
je
cmp
jae
dec
in
jmp
mov
shrb
jecxz
jo,pt
mov
stc
das
pop
push
mov
inc
xchg
inc
enter
jle
lret
pusha
mov
fsubl
pop
fidivl
orl
js
aas
mov
sbb
cmp
pop
cli
pushl
out
test
adc
cld
xchg
mov
test
xor
inc
jge
inc
pop
sub
je
jmp
cmp
sarb
fmul
ss
xchg
jecxz
push
arpl
jno
inc
mov
in
or
icebp
and
cmp
sahf
jns
push
inc
mov
mov
cmp
stos
arpl
pop
in
jae
sbb
pop
movsb
inc
cli
pop
loop
sub
mov
cld
pop
aas
dec
call
push
jbe
xor
sub
inc
fisttpl
and
call
add
add
inc
cmp
mov
dec
hlt
ret
mov
and
push
sbb
cmpsb
sub
mov
sti
sbb
add
jmp
in
or
nop
dec
sbb
roll
inc
mov
fnsave
dec
push
lahf
inc
add
dec
dec
mov
scas
xor
scas
enter
imul
mov
cld
out
lock
xor
lea
jne
imul
xor
sub
cmp
imul
shl
sbb
out
mov
in
outsb
mov
andb
jb
gs
push
lahf
movsb
iret
xor
pop
orl
jecxz
or
add
or
dec
xorl
adc
jmp
xchg
dec
pop
dec
mov
rolb
mov
mov
mov
jmp
roll
popa
xchg
cmc
inc
loope
push
mov
or
cld
lret
dec
sar
push
ficompl
in
add
inc
sbb
inc
mov
bound
rclb
cmp
icebp
sahf
sub
dec
inc
in
ret
rorl
rcrl
xor
lds
mov
fwait
addr16
push
cmpsb
scas
popf
pushf
sub
pop
lea
push
int
mov
pop
push
sbb
xchg
add
stc
fwait
decl
imul
popf
pop
sub
jecxz
std
dec
cli
ret
and
cld
dec
icebp
ret
mov
jmp
mov
subl
jmp
sbb
sub
jnp
mov
aaa
fisttps
push
jns
push
pop
jp
hlt
or
aas
xchg
sbb
test
jbe
jo
je
jecxz
xchg
test
repz
loope
dec
rolb
jno
outsb
adc
lods
addr16
scas
cmp
jecxz
out
sbb
cmpsl
enter
cmp
stos
adc
jns
fld
inc
dec
jo
mov
jp
mov
add
lds
push
xor
outsb
cmc
inc
pop
mov
enter
pop
into
xchg
repz
int3
repnz
orb
lret
and
sahf
mov
imul
fmul
cmpsb
lcall
test
dec
or
dec
mov
xor
inc
push
fisubrs
jmp
sar
pop
arpl
sbb
and
sbb
lea
jecxz
sahf
lahf
jne
jge
xor
enter
jns
movsb
push
adc
out
inc
loope
and
test
dec
cltd
imul
aas
stc
scas
in
mov
mov
mov
sbb
mov
fbld
enter
push
ja
int3
ror
rclb
cmp
repz
das
mov
clc
mov
add
fsubl
cmp
inc
cmp
enter
mov
sbb
xchg
arpl
inc
pop
add
rcrb
sti
lods
cmp
mov
rorb
mov
xchg
cmp
push
test
push
mov
aam
mov
jb
adc
stos
pop
mov
xchg
cmp
repnz
std
push
leave
in
xchg
mov
pop
int3
pop
ss
fcomps
add
or
ret
addr16
rcrb
iret
aad
hlt
xchg
fcmovne
mov
jns
xlat
mov
daa
xchg
push
js
sbb
loope
push
mov
shrl
cltd
xchg
movsl
and
pushf
loop
in
cs
pop
cmp
into
loop
mov
lock
stos
repz
test
push
js
adc
mov
xchg
jnp
adc
adc
aad
mov
adc
std
popf
movsl
push
loopne
xchg
repnz
mov
jbe
cmc
jbe
xchg
ss
dec
pop
cmpsb
mov
roll
xchg
fsubrl
jno
out
das
mov
jecxz
cwtl
dec
pop
shrl
mov
neg
fnstsw
es
fisubrs
stc
adc
outsl
vfrczss
cwtl
mov
jge
shr
in
js
pusha
dec
pop
mov
jg
inc
or
mov
sub
adc
cli
lea
ss
push
insl
imul
movsb
and
jl
xchg
cmp
gs
stos
stos
sbb
gs
mov
pop
testb
insl
popf
adc
fidivrs
cld
lea
jecxz
xchg
dec
cmp
jle
pushf
cmp
fldcw
fcomps
cmpsb
xor
fs
xchg
cmp
mov
into
pop
xor
enter
aam
sbb
xchg
push
fsubrs
outsl
mov
sbb
popl
pop
movsb
lods
add
iretw
lds
xchg
inc
or
int
adc
lea
imulb
fcomps
hlt
cmp
outsl
rcr
shlb
ret
ljmp
cmpl
mull
call
ljmp
std
push
sub
repz
xor
sub
popa
and
nop
mov
cld
lods
iret
sbb
outsl
icebp
mov
add
or
loope
mov
mov
adc
mov
sarb
lods
or
mov
xchg
aas
inc
insb
mov
imul
add
jne
mov
pop
dec
iret
js
sub
and
cmp
push
lods
int
testl
sbb
ss
loopne
adc
sub
leave
ja
aam
mov
jmp
mov
shr
push
fsubrl
cmp
gs
xlat
pop
jp
in
lahf
nop
repnz
mov
jmp
js
inc
xor
pop
push
push
push
das
mov
movsb
adc
jg
push
fcompl
sub
xchg
inc
mov
mov
test
ficoml
shrb
xchg
mov
fadd
mov
mov
gs
in
imul
mov
jne
das
jp
sti
popf
mov
test
dec
int3
fsubs
inc
mov
cmp
jb
stc
clc
pop
mov
shll
cmp
lock
mov
gs
adc
out
int3
jbe
insl
lds
out
movsl
in
outsb
pop
mov
cli
xchg
push
dec
pop
jb
mov
arpl
aas
add
iret
ss
mov
mov
test
or
mov
or
pushf
test
repz
jae
scas
cmp
pop
or
or
pusha
bound
add
sub
pop
repz
mov
cmc
pusha
hlt
pushf
in
xchg
pop
adc
mov
sbb
pushf
fnstcw
fmull
shll
lock
cs
mov
out
push
shrb
mov
out
mov
cmp
mov
ret
jns
mov
ret
jecxz
and
and
call
lock
out
loope
and
cli
xor
pop
int
jae
dec
in
popf
insl
lods
std
jns
jp
iret
jbe
out
cmp
and
add
cmp
inc
outsb
nop
je
push
xor
es
popf
lock
push
cmp
mov
mov
shlb
push
out
xchg
dec
jne
mov
std
insl
lods
je
xchg
sub
or
es
or
leave
pop
cmp
cmp
lds
cmpsl
iret
jg
btr
int3
sub
adc
jle
in
mov
gs
ja
dec
xor
mov
adcl
or
cmp
or
xor
inc
push
sub
sti
lahf
sbb
mov
ljmp
xchg
inc
test
test
pop
out
and
pop
cld
sub
pop
cmp
into
es
pop
or
xor
je
sub
in
ds
test
pop
xor
inc
inc
lods
or
repnz
mov
divl
insl
jg
jae
es
or
inc
ja
mov
xor
sub
imul
test
loop
stos
pop
push
fsubs
xor
cwtl
inc
mov
lret
pusha
sub
gs
gs
xor
add
sbb
xor
jns
pop
imul
pop
inc
mov
arpl
aas
sbb
sbb
daa
or
call
pop
xchg
sub
dec
mov
or
mov
in
aas
sbb
shr
adc
add
frstor
mov
mov
stos
movsb
sbb
xlat
loop
jge
mov
and
dec
sti
aad
pop
mov
outsl
mov
pusha
pop
or
sbb
repnz
xchg
and
js
es
inc
cld
xchg
sub
lcallw
sub
pop
jle
mov
scas
aad
jne
jge
jns
jg
ss
and
outsb
jae
repnz
pop
push
pcmpgtb
in
repnz
add
popf
cmp
mov
dec
sbb
imul
imul
add
dec
cs
sub
sar
or
shlb
mov
sahf
mov
inc
and
xor
sub
je
imul
aad
std
sub
add
mov
popl
aaa
es
mov
bound
add
jno
ror
and
or
sbb
push
lahf
and
and
int
xlat
aam
cmp
sbb
faddl
add
cmp
adc
arpl
out
push
push
outsb
call
pop
hlt
jo
inc
stc
or
data16
pop
in
test
push
push
test
push
jno
mov
nop
movsb
cli
mov
fnsetpm(287
ficoms
or
clc
inc
fnstcw
mov
outsl
dec
xchg
test
dec
push
push
dec
nop
fdivrs
pop
cmp
and
push
aaa
fbld
clc
mov
in
rcll
mov
dec
loope
sti
xchg
xchg
lods
push
out
cld
sub
lcall
orl
jo
stos
mov
pop
adcb
out
mov
push
and
repnz
add
cmp
mov
decb
cmpsb
pop
insb
add
add
in
and
aaa
mov
jno
and
jg
hlt
sub
fwait
jle
bound
pushaw
push
mov
repz
jae
loop
icebp
sti
xor
mov
cmpxchg
fs
into
cltd
int3
in
inc
rcll
push
leave
inc
mov
jae
push
insb
xchg
mov
pop
iret
jae
std
repnz
xor
mov
scas
jecxz
inc
into
cmpsb
push
pop
das
pop
lock
xchg
sub
mov
sbbl
jb
add
jmp
out
dec
pop
repz
inc
xchg
inc
xor
mov
xchg
adc
aam
ja
mov
mov
jmp
andb
test
or
sub
cmp
adc
add
sahf
push
mov
sub
pop
and
ljmp
mov
xchg
mov
jmp
pop
nop
cli
and
pop
lcall
xchg
adc
inc
test
push
fists
push
movsl
cwtl
sbbl
adc
hlt
and
mov
xchg
pusha
ficomps
test
pop
cmc
movsb
icebp
cltd
mov
sub
add
xor
sbb
fs
mov
pop
jge
popf
dec
mov
sub
mov
shrb
sub
cmpsl
mov
test
jmp
dec
add
mov
js
out
or
dec
fxam
inc
fnstsw
mov
divb
mov
sub
jg
mov
inc
mov
jb
adc
mov
adc
je
cmp
nop
or
ret
cld
aam
adc
mov
lods
cmp
ljmp
jp
sub
xor
and
xchg
or
add
les
gs
inc
cmp
xor
outsb
mov
dec
and
js
into
pusha
cmc
xchg
ja
mov
test
xchg
dec
fists
addb
adc
inc
fwait
push
test
and
sbbl
xor
sbb
pop
fs
xchg
test
fwait
call
loop
ja
ficoml
dec
in
je
lods
imulb
fcmovnb
testl
jmp
in
mov
xchg
das
adc
ror
cmp
mov
pop
aas
std
pop
cmp
inc
mov
xor
mov
rcl
in
popf
lods
popf
add
bnd
mov
imul
or
add
movsl
mov
jns
scas
cld
test
add
push
out
inc
rcll
fcoml
test
loop
pop
pop
mov
inc
les
int
jbe
test
lods
test
stos
cld
sahf
cmp
adc
lods
aad
test
aaa
ficompl
mov
or
and
push
sbb
jns
mov
or
fisubrs
in
out
push
ja
inc
dec
insb
aad
dec
push
dec
dec
nop
mov
arpl
mov
xchg
cli
in
sbb
or
mov
repnz
dec
pusha
sub
subl
cmp
and
cmp
mov
cmp
push
out
loope
mov
cmp
stos
lods
jae
xchg
mov
sbb
jns
outsl
iret
push
xor
sub
lods
addr16
add
inc
mov
mov
jb
mov
addb
fcoms
ret
movsl
ss
shr
pop
mov
jae
pop
in
pop
add
and
pop
hlt
cmp
and
inc
cmp
mov
repz
pop
mov
call
xchg
and
sub
inc
scas
out
jge
arpl
mov
cli
pop
loop
add
or
frstor
test
loopne
mov
cwtl
sbb
or
or
jge
fadd
push
loop
mov
outsb
popa
and
ret
mov
ja
jp
lcall
jecxz
dec
sub
jnp
cmp
mov
cmpsl
sbb
cmp
dec
mov
js
jae
mov
cwtl
and
cmp
xchg
lret
das
lods
xor
shrb
sahf
mov
in
lods
es
add
sub
mov
ret
xchg
xchg
rolb
xor
xor
lret
xor
js
add
pushl
cmp
enter
jl
sub
shl
mov
loop
push
and
negl
imul
mov
sbb
jb
pop
pushf
mov
lods
fwait
xor
jns
cmp
repnz
jo
pop
xlat
rcll
jno
fdivrl
loopne
pop
ss
mov
xchg
mov
cmpsl
and
lret
sub
lahf
mov
sbb
lret
scas
jns
cmp
inc
mov
push
call
add
jmp
in
popl
es
add
mov
aas
mov
inc
je
dec
fwait
pop
jmp
je
rclb
fldenv
inc
xor
dec
or
add
gs
fstpl
adc
into
push
test
outsb
xchg
jge
faddp
ljmp
daa
loop
xor
les
and
dec
xlat
mov
addr16
cmpsl
xchg
jmp
push
mov
stos
jg
push
fwait
scas
add
popf
push
les
orb
sbb
inc
or
and
mov
mov
dec
cwtl
xchg
outsl
adc
sbb
xchg
inc
push
outsl
idivl
insb
xchg
pop
sub
jp
or
push
push
pushf
cld
iret
inc
inc
cmpsb
xor
insl
testl
push
xor
mov
stos
pop
mov
xorl
out
jo
sub
push
daa
xchg
mov
cmp
fcmovb
stos
mov
iret
pop
sub
pop
sahf
dec
test
sbb
int
mov
jecxz
cltd
addr16
xlat
outsl
out
fadds
test
addb
js
or
dec
pop
int
bound
bnd
lods
sahf
and
add
push
push
shlb
clc
fwait
cmpl
dec
mov
mov
sub
in
dec
cli
popf
mov
aam
fdivr
jl
lret
lret
xor
dec
add
jnp
push
push
xor
lock
push
or
or
pop
ljmp
xor
inc
test
js
adc
dec
inc
hlt
ret
int3
inc
or
lds
cmc
sub
mov
out
mov
mov
lret
shll
mov
mov
dec
jne
int3
stc
xchg
jb
ljmp
leave
xchg
cmp
jl
leave
gs
mov
push
std
cli
and
sahf
movsb
out
jg
and
or
sahf
loope
lods
arpl
fadds
lods
jg
sbb
test
adc
inc
in
inc
jo
lret
ljmp
filds
hlt
adc
hlt
into
adc
outsl
pop
dec
lret
xchg
leave
mov
sbb
call
pop
mov
test
mov
fwait
and
sbb
inc
scas
or
int3
pop
or
jmp
mov
mov
push
sti
int
nop
ja
push
aad
inc
leave
ret
or
fcmovne
shll
mov
in
loope
mov
jo
fisubrs
xor
loopne
mov
cmpsb
je
pop
cmpsb
jbe
fmul
dec
scas
xor
in
ja
mov
cmpsb
push
jae
sub
outsl
call
sub
loopne
sahf
insl
cltd
rclb
fcmovnbe
roll
fcmovb
sub
jp
dec
enter
ss
xchg
and
das
mov
pop
or
xor
repnz
jg
cltd
add
loop
xchg
nop
jg
idivb
pushf
ds
cli
mov
stos
adc
loopne
mov
dec
and
sub
lods
adc
sbb
pushf
sti
fstpt
dec
or
sarb
mov
js
inc
pop
jbe
add
push
andb
push
and
inc
cmp
add
xlat
dec
cs
mov
dec
xor
out
lahf
fsubs
out
pop
inc
pop
les
cli
inc
cmp
into
xchg
cwtl
ja
or
mov
cmc
aam
xor
popa
dec
pushf
in
sbb
cmp
testb
and
repz
sbb
pop
pop
mov
ljmp
fisubl
or
or
pushf
and
gs
pop
roll
cli
scas
mov
inc
movsb
test
jo
mov
jnp
loopne
dec
jp
jecxz
mov
adc
cmpsl
push
imul
jecxz
das
repz
add
cld
mov
push
xchg
mov
xchg
insl
arpl
rorl
sbb
jb
xor
jae
andb
xor
push
popf
dec
shr
sbb
sub
sarb
lds
dec
aas
insl
push
or
fdivs
test
adc
clc
push
out
xchg
in
rorb
sub
sti
mov
fs
loope
cli
outsb
jmp
sbb
repnz
ret
jge
inc
and
int
js
gs
fdivrl
mov
negl
dec
out
lcall
pop
cmp
jge
dec
repz
testb
jecxz
mov
mov
mov
adc
mov
jle
loope
sbb
fnsave
daa
or
popa
mov
jmp
push
mov
push
mov
jmp
mov
mov
cmp
leave
out
jg
xchg
imul
stc
and
dec
mov
mov
cli
pop
xor
pop
out
aam
xor
inc
jnp
lahf
add
mov
cmc
ljmp
or
lds
inc
cmp
xlat
dec
dec
ret
test
test
pop
lea
inc
int3
fpatan
inc
mov
leave
es
dec
pop
in
mov
push
xchg
mov
xchg
dec
repz
add
aas
sub
jp
mov
imul
inc
or
ficoml
jo
jns
out
mov
add
adc
lahf
data16
dec
mov
mov
stos
add
fstl
cmovge
imul
das
clc
dec
adc
or
dec
xchg
and
pop
add
lods
mov
arpl
cmp
push
sbb
movsl
mov
push
out
in
dec
cmp
sbb
fldcw
popf
pop
lret
sub
loope
and
adc
scas
frndint
stos
aas
mov
mov
int3
repz
adc
aam
cmovns
sahf
push
pop
mov
out
mov
nop
inc
push
pop
jmp
testb
pop
mov
xor
xchg
mov
vmovupd
daa
mov
fdivr
aad
lea
scas
lret
scas
jmp
jo
rcrb
out
add
and
adc
push
jmp
aaa
aaa
or
xor
js
mov
adc
mov
mov
xchg
rcrb
mov
test
mov
mov
add
ja
jno
scas
gs
iret
inc
add
aaa
or
xchg
push
cwtl
push
imul
xchg
sub
scas
add
adc
popf
pushf
adc
push
test
ja
outsb
mov
pop
stos
xchg
daa
lods
pushf
cmp
sbb
jne
dec
mov
and
push
or
mov
pop
mov
and
repz
lods
adc
jb
pop
pop
nop
inc
pop
leave
lock
inc
push
sbb
pop
stos
mov
pop
fs
pop
lret
cli
in
push
sti
or
jl
adc
pop
xor
inc
and
push
push
sarl
mov
and
dec
mov
dec
cwtl
lods
loope
daa
lock
add
mov
out
cli
sbb
cmp
shl
mov
dec
jnp
insb
mov
jo
mov
sti
and
dec
pop
adc
mov
fidivl
sub
fwait
stos
sbb
enter
mov
xor
bound
aam
mov
mov
popf
xor
call
popa
xchg
adc
fidivl
jbe
dec
stos
xchg
adc
pop
enter
sbb
sbb
cltd
pushl
cmp
jl
pop
and
and
and
dec
notb
xlat
pop
mov
xchg
cmpsl
sbb
dec
pop
out
insl
jge
pop
dec
mov
into
pop
daa
mov
leave
mov
int3
or
std
out
int
sub
or
xor
cmp
dec
ja
mov
dec
jl
fcomps
int3
push
mov
scas
and
jo
inc
sub
xchg
loopne
mov
cltd
push
xorb
fistpll
or
mov
daa
das
add
popa
outsl
les
cmpsl
ret
mov
adc
repz
in
scas
fs
pop
jne
mov
fcmovu
sub
adc
xchg
jecxz
inc
fs
insb
and
imul
test
mov
insl
ss
push
out
and
inc
cmp
test
inc
stos
push
pop
mov
mov
cmp
xchg
cmp
xor
movsl
dec
testb
repnz
xor
lods
and
mov
add
shll
sar
xor
sbb
cltd
push
cmp
jnp
sbbl
xchg
fs
add
rorl
sbb
mov
pop
faddl
push
jmp
sbb
dec
shll
dec
inc
ss
test
ljmp
jbe
out
sbb
shrb
mov
stos
aaa
mov
push
dec
fimull
xchg
dec
mov
cmc
mov
or
dec
sbb
push
pop
jmp
mov
bound
jmp
insb
test
sub
test
outsl
scas
lcall
sub
pop
push
cmp
or
mov
xchg
and
dec
rorl
mov
enter
jl
psllw
or
jle
adc
outsb
push
pop
aad
iret
shlb
pop
xor
loop
enter
shlb
cmc
lcall
test
ja
aas
or
mov
je
pop
pop
rcrb
sbb
std
dec
mov
idivl
xchg
mov
xor
aaa
jnp
sub
xchg
lock
movsb
xchg
sbb
pop
std
sbb
sti
and
mov
jbe
dec
add
jns
and
fldl
lret
mov
xchg
pop
sbb
lods
insl
push
push
pop
bnd
fsubs
test
push
std
push
xchg
clc
pop
mov
xchg
inc
repz
mov
std
add
add
sub
pop
and
xor
faddl
out
or
xor
cmp
mov
out
scas
inc
mov
and
jp
loope
cmp
inc
enter
mov
int3
shlb
sub
fcmovnb
daa
push
lock
and
dec
mov
imul
xchg
ja
cwtl
lods
add
add
add
dec
xchg
mov
ljmp
aad
pop
mov
jnp
mov
add
andl
dec
lock
pop
ficompl
inc
stos
jecxz
loopne
push
sbb
ljmp
mov
adc
cmc
mov
mov
in
inc
ljmp
sbb
gs
test
int
loopne
aad
andl
mov
subb
add
dec
shr
xor
insb
fstl
xor
jne
cmpsl
sbb
or
call
cmpb
outsl
mov
mov
xor
xchg
pushf
movl
add
mov
xchg
outsb
dec
dec
adc
cmp
adc
icebp
add
mov
sbb
sar
or
mov
rorl
pusha
xchg
scas
movsl
mov
out
sub
aas
pop
aad
inc
adc
mov
push
cmpsb
ret
test
fidivrs
lock
pop
sbb
divl
ret
pop
push
jmp
mov
mov
dec
mov
inc
lock
jb
out
scas
lcall
fwait
and
outsl
fistps
dec
sub
shl
ds
lret
xchg
dec
pop
aaa
je
stos
push
pusha
dec
fnsave
mov
push
jg
and
xchg
push
jmp
pop
aam
mov
inc
cmp
divb
xlat
xchg
add
ret
fcompl
call
loope
xchg
loopne
push
pop
push
or
mov
outsl
ja
jle
int3
jl
mov
dec
insl
int3
jns
mov
mov
mov
into
into
and
xor
add
int
add
sub
pop
push
pop
dec
pop
or
cmpsl
in
test
and
clc
adc
movsl
push
divb
inc
cmpl
aam
adc
inc
mov
cli
jbe
cmpsl
add
xlat
addr16
jns
gs
mov
loopne
or
dec
aad
fwait
push
dec
pop
adc
clc
pop
inc
jg
push
stos
cmp
enter
add
cmp
sarl
sarb
mov
sub
lret
scas
icebp
stc
cmc
mov
mov
leave
mov
push
or
push
sarb
push
push
pop
xchg
jb
xor
push
dec
pop
jbe
sti
std
mov
jp
add
sbb
add
jecxz
mov
dec
sub
mov
push
push
sbb
sub
mov
and
push
fldcw
pushf
and
out
mov
mov
mov
pop
mov
shr
adc
stos
mov
bound
mov
inc
imul
std
sbb
stos
fsubrs
mov
inc
cmp
lods
jo
fldcw
lahf
inc
jle
and
mov
xlat
push
cmp
jae
and
call
lds
xchg
jo
push
add
sti
add
arpl
adcb
or
xchg
pop
shlb
sbb
cmp
pusha
jae
mov
popa
mov
pushl
xor
pop
sbb
lret
jg
push
cmpsb
dec
scas
ds
mov
inc
pop
jmp
mov
fcmovnbe
jnp
and
sub
in
sbb
negl
sub
enter
push
dec
mov
and
inc
jmp
adc
inc
sarb
cld
movsl
aaa
mov
xchg
push
dec
add
or
bound
and
mov
jbe
test
ss
cmp
dec
mulb
add
mov
data16
push
add
push
mov
aaa
and
mov
mov
stos
int
jno
add
fdivs
sub
jb
or
movsb
pop
loopne
mov
imul
in
arpl
andl
add
in
mov
xchg
xor
add
jecxz
jge
cmp
ja
or
cmpsl
inc
int3
xchg
xchg
scas
adc
adc
ja
into
or
xor
sbb
scas
push
daa
jl
daa
or
aam
add
mov
outsl
inc
push
mov
js
lret
inc
and
inc
and
adc
icebp
jg
dec
add
push
mov
sbb
and
cs
push
jbe
aas
pop
fmull
sbb
cmp
fcompl
jmp
ljmp
repnz
aaa
fnstsw
flds
mov
cmpsl
in
pop
add
not
popf
fistpll
enter
and
roll
bound
adc
inc
xchg
xor
dec
inc
and
nop
or
pushf
xlat
mov
data16
cmovle
ret
add
or
xchg
fstp
and
movsb
push
sub
mov
sti
add
in
xchg
test
gs
or
subb
int
mov
hlt
sbb
es
iret
daa
lods
imul
jb
cmp
sbb
or
add
add
fnsave
lcall
sbb
and
pusha
and
jmp
ret
add
icebp
dec
add
add
mov
popa
cmp
int
dec
xor
push
faddl
or
test
int3
cmp
pusha
je
fwait
shll
popf
mov
xchg
lret
fisubrs
adc
sti
fidivl
push
mov
xchg
sub
and
andb
cs
adc
les
cwtl
call
push
scas
pop
aaa
pop
add
xchg
and
scas
dec
mov
loopne
ja
xchg
adc
mov
mov
mov
in
lahf
mov
lcall
aad
int3
or
sbb
sub
call
cmp
sub
xor
shlb
int3
mov
pushf
mov
test
cmp
fidivrs
dec
incl
or
xor
jnp
test
sub
mov
mov
add
std
nop
xchg
mov
jb
lcall
ficoml
dec
pop
jo
mov
clc
dec
gs
push
call
mov
mov
jecxz
xchg
shr
xor
mov
jnp
sbb
scas
mov
dec
lret
push
push
mov
negl
stos
popa
and
insl
xor
mov
or
adc
cmp
add
xlat
cmp
sbb
mov
mov
jns
cwtl
mov
adc
add
jns
neg
data16
ljmp
pop
sub
inc
sahf
scas
fbstp
and
and
stos
test
or
fstps
ds
clc
fdivrl
gs
bound
dec
cmpl
jmp
movsl
cmc
dec
les
popa
mov
outsl
cmpsl
stc
movsl
sbb
daa
dec
popf
leave
js
xchg
lret
stos
repnz
out
test
push
jmp
icebp
rep
jno
push
aam
test
lcall
xor
adc
push
es
test
push
mov
stc
inc
pushf
repnz
aam
push
cld
movsb
and
out
lea
dec
loopne
bound
mov
or
int3
mov
adc
notl
jns
nop
and
push
sub
jae
int3
shrl
push
mov
push
fistpl
cli
adc
mov
push
add
xchg
icebp
movl
ljmp
push
jmp
pusha
push
into
jle
xchg
push
sahf
and
jmp
and
aas
call
test
and
test
enter
cmp
mov
das
stc
jmp
repz
sahf
xchg
outsb
bound
mov
sti
and
jbe
fiadds
fwait
in
jnp
mov
fwait
xor
dec
push
sbb
jnp
out
push
xor
test
jne
dec
aaa
cld
pop
ss
add
xchg
rcr
and
inc
int
ds
jg
sbb
adc
pop
dec
icebp
sub
fisttps
mov
out
sub
pop
mov
mov
adc
fldt
mov
xchg
outsb
mov
dec
pushf
mov
and
ret
pop
movsb
mov
fwait
mov
pop
push
add
loopne
mov
push
fidivrl
fildl
stos
cmc
cwtl
sub
and
aad
fldl
ljmp
jl
mov
stc
cwtd
xor
pop
cmp
sbb
stos
mov
lret
push
dec
lods
jno
les
cs
push
decl
xlat
addb
jmp
mov
inc
mov
pop
jne
fs
fucomi
adc
scas
xchg
xlat
jno
xchg
insb
imul
rcrl
iret
jo
mov
aad
sbb
or
push
nopl
pusha
addr16
xor
xchg
dec
jecxz
jb
add
mull
mov
mov
test
xchg
xchg
stos
aas
cwtl
dec
lods
adc
pop
out
in
ret
loope
test
mov
call
dec
xchg
cmpsl
inc
clc
sub
pop
pop
mov
fdivr
stos
mov
mov
xchg
pop
fsubrl
cmp
clc
sbb
adc
je
pop
clc
addl
xor
xor
sub
sub
sub
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sub
xor
neg
mov
mov
mov
add
orl
imul
subl
mov
mov
mov
adcl
add
sbbl
or
xor
mov
mov
and
mov
orl
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
jmp
rcrb
iret
ja
jno
into
fidivs
or
xor
jp
pop
jp
pop
fcoml
outsl
movsb
loope
fbld
mov
in
imul
push
sbb
sbb
add
sbb
jl
sub
out
enter
sti
lods
or
mov
pop
shll
cltd
repz
xchg
out
xor
or
xor
out
sub
mov
leave
jle
adc
or
sti
int3
push
and
arpl
ja
xorb
mov
repz
jnp
loopne
xor
in
xor
xchg
out
xchg
xor
nop
or
cs
sub
xor
xchg
lods
add
pop
mov
fists
inc
insl
add
push
adc
cli
les
enter
imul
out
test
call
mov
jnp
mov
xor
repz
iret
insb
xor
mov
jmp
push
mov
aas
lds
aas
sbb
out
scas
mov
repnz
sbb
jecxz
fcmovbe
scas
xchg
adc
and
jb
pop
subb
mov
and
into
jecxz,pn
pop
shlb
mov
mulb
and
or
xor
stos
idiv
test
inc
leave
mov
mov
aaa
mov
push
in
inc
frndint
push
mov
ficoms
cmc
xor
inc
addr16
nop
movb
xchg
push
andl
idivb
sbb
push
push
repnz
mov
xchg
mov
xchg
in
dec
inc
xchg
icebp
xchg
inc
dec
jge
mov
and
leave
dec
ret
fwait
mov
pop
out
cmp
lahf
stc
das
clc
sbb
in
rcll
mov
ret
mov
jne
xor
xchg
pop
mov
xchg
xchg
sbb
mov
mov
shlb
sbb
rol
jg
mov
stos
mov
les
inc
mov
out
dec
dec
cmp
and
inc
cmp
in
popa
add
call
pop
adc
cmp
mov
jns
lret
cmp
mov
fsubl
push
aad
lcall
jle
fwait
sbb
xchg
mov
adc
stos
mov
push
out
add
pop
pop
sub
dec
pop
xor
mov
dec
imul
sub
lcall
repnz
xlat
adc
shl
mov
cmp
cmp
imul
sbb
inc
mov
pop
iret
inc
jb
cmc
mov
sub
push
push
inc
clc
pop
and
add
in
cmp
adc
fdivr
xchg
stos
fwait
mov
lods
scas
mov
mov
fwait
arpl
loopne
fsts
or
sbb
orb
mov
in
mov
push
flds
dec
sbb
ss
mov
dec
cmpsb
sub
sub
insb
mov
jne
dec
pushf
ds
hlt
out
rolb
push
jle
pushf
ja
or
test
loop
push
cmp
push
das
rcrl
sbb
dec
in
mov
mov
loopne
xchg
mov
jle
ret
push
outsb
adc
add
or
jne
and
pop
xchg
push
fs
sahf
leave
jo
enter
mov
jg
addr16
mov
push
aaa
mov
dec
and
jbe
popf
hlt
addb
sub
outsl
lret
jns,pt
mov
scas
fwait
add
ret
sqrtps
fs
sub
mov
push
js
xchg
mov
jg
jg
adc
and
cmc
mov
add
outsb
pushf
pop
xlat
fstpl
or
fsubr
jns
jl
cmp
shrb
in
pop
inc
cmp
pop
push
movsl
lea
ss
es
fcmovne
xchg
and
movsl
mov
daa
jp
xor
repnz
xor
aas
xor
mov
stc
dec
test
ljmp
xchg
mov
xchg
mov
xor
lock
in
into
outsb
arpl
pop
dec
daa
jle
add
nop
inc
adc
clc
push
adc
stc
mov
mov
in
xor
jae
loope
dec
fcom
push
xchg
popl
es
mov
jb
cltd
loop
jle
xchg
je
in
mov
xorl
dec
mov
sarl
pmullw
mov
leave
xor
out
cmpl
call
fsts
xchg
ja
mov
cli
pop
pop
pop
aam
cmp
add
ljmp
clc
test
shl
or
cmc
inc
fnsave
je
pop
sbb
lret
mov
dec
mov
pop
add
mov
je
sub
sbb
xchg
imul
lea
mov
dec
dec
pop
test
lock
lahf
div
sar
movsb
lret
mov
push
push
ljmp
mov
movsb
lea
jno
ret
in
sub
cmp
gs
insb
pop
leave
cmpsb
pop
mov
cmpsb
dec
insl
pop
pop
sqrtps
sar
lods
jg
scas
mov
and
test
mov
not
jo
or
int3
and
dec
adc
or
cmp
les
and
lds
inc
popa
and
add
jg
punpckhbw
call
push
inc
xor
push
cmp
out
out
xchg
sub
sbb
push
mov
mov
adc
lea
jo
xchg
sahf
jns
pop
mov
sbb
pop
push
les
add
adc
decb
sbb
lods
dec
and
inc
jae
add
push
jmp
test
mov
je
mov
jo
pop
test
pop
imul
les
mov
mov
add
mov
je
pop
xor
pop
mov
add
adc
inc
call
inc
sub
data16
jmp
dec
sub
add
sti
out
imul
mov
pop
mov
cmp
pushf
jae
add
sbb
ds
push
bound
push
sti
add
adc
mov
ror
into
call
shl
adc
jb
lcall
jne
dec
cmp
push
and
in
imull
lret
lds
cwtl
push
mov
mov
or
mov
jecxz
cmp
mov
jg
les
fsubl
fcmove
cs
sahf
xor
popf
mov
cmp
xlat
xchg
add
pop
ja
outsb
mov
fisubrs
dec
andps
stos
inc
das
mov
adc
fimull
jl
test
insl
adc
popa
mov
shll
movsb
push
inc
sub
lods
cmp
std
lret
popa
adc
xorb
mov
pop
push
lea
gs
ja
pop
es
and
xchg
jg
fsubr
mov
imul
sbb
dec
mov
push
cmpsl
inc
jecxz
and
popf
xor
mov
adc
imul
data16
xchg
pop
mov
addr16
inc
sbb
pop
cld
nop
xor
call
pop
test
mov
imul
xor
and
scas
and
inc
nop
fiaddl
mov
daa
jns
out
scas
push
mov
rolb
mov
orb
lods
lahf
pop
mov
shrb
idivl
jbe
outsl
pop
or
mov
cmp
pop
loop
jnp
fcoms
mov
inc
fcomps
es
inc
mov
scas
pusha
add
sbb
in
cltd
test
jbe
in
mov
jne
mov
push
cltd
push
scas
data16
shrl
cmp
and
dec
jnp
shr
pop
mov
jg
mov
mov
sbb
mov
sub
fists
push
outsl
inc
mov
out
add
xchg
push
mov
push
dec
jnp
stc
lock
movsl
cmc
mov
add
add
loop
les
imul
inc
fldenv
inc
and
movsb
jne
dec
mov
lock
sbb
jmp
fnsave
mov
fucomip
in
test
popa
push
pop
mov
ljmp
and
xchg
jo
fwait
mov
cmp
sub
mov
mov
pop
dec
in
test
insl
dec
pop
xchg
xchg
ret
addb
cmpsl
mov
popa
inc
jle
outsb
pop
sbb
cmp
insb
in
out
mov
aam
iret
xchg
rcrb
mov
mov
xchg
mov
les
mov
sub
push
icebp
inc
rcr
imul
rcr
xor
add
lds
or
xor
and
cmp
jle
adc
gs
into
test
flds
add
bound
insl
pop
cmp
out
cwtl
push
xchg
and
in
outsb
jns
cmp
into
xchg
cmovle
jns
inc
or
mov
mov
clc
push
push
jl
pop
in
iret
sbb
mov
sarb
push
aaa
and
jge
fbstp
stc
fistl
xor
jmp
mov
sbb
inc
cltd
test
ljmp
inc
xchg
cli
gs
adc
sahf
imul
sbb
loop
movsb
test
cmp
pop
sub
pop
movsl
aaa
push
rclb
xchg
jo
rcll
sbb
fwait
js
add
jmp
popf
pop
add
jne
repnz
inc
lods
les
inc
mov
add
pop
ds
fdivrs
lock
sbb
shll
xor
out
sub
xchg
fwait
push
arpl
fistps
in
not
sub
lods
loope
inc
clc
iret
cltd
movsl
push
and
xlat
ret
je
scas
push
add
xor
dec
jb
sahf
and
mov
pop
dec
outsb
mov
pop
jle
sbb
pop
mov
xchg
cmp
push
sub
mov
add
pop
jae
add
mov
mov
add
shr
xorb
lret
jge
leave
lods
inc
movb
mov
add
adc
sbb
outsl
jle
inc
loop
push
inc
dec
stos
stos
add
shl
cmc
dec
push
jp
cmpsl
ja
fldenv
ffreep
sub
or
cs
lahf
ffreep
aam
jo
mov
icebp
insl
into
add
xchg
rcll
fwait
mov
or
pusha
ljmp
mov
pusha
mov
mov
lcall
inc
inc
xchg
add
icebp
ja
int3
sub
insl
jl
lods
or
je
movsb
hlt
xlat
add
jge
adc
xchg
bound
loop
and
pop
mov
jns
sub
es
fsubrl
jns
mov
aaa
aaa
pop
and
mov
xorl
enter
adc
ret
dec
in
scas
push
pop
stos
and
cmp
mov
stc
int
aad
push
scas
sbb
jno
sahf
ja
imul
dec
ja
in
pop
rolb
int3
shr
jp
xor
push
loope
jp
or
push
lahf
shll
mov
dec
pushf
test
lahf
cmc
sub
push
push
loop
mov
jge
mov
and
movsl
cmp
sahf
sub
arpl
inc
into
push
or
sub
arpl
iret
pushw
stos
lock
cwtl
flds
mov
lret
jno
sbb
in
xchg
xchg
testl
subb
dec
add
scas
jge
xor
fimull
leave
or
jns
adc
fistps
push
pop
cmp
addr16
add
push
pop
mov
loop
push
int3
xor
fldenv
dec
xorl
out
sub
jl
adc
pop
test
cltd
stos
mov
outsb
aas
cld
push
adc
loope
adc
out
aad
data16
ficoml
imul
add
pop
std
fiadds
pop
std
fmuls
or
cld
mov
test
scas
test
mov
cmp
push
icebp
sub
jle
or
add
or
sbbl
sbb
push
insl
push
jne
sub
sub
xor
test
aas
std
lds
dec
or
mov
iret
shr
daa
mov
jmp
fists
xchg
outsl
in
sbb
and
add
mov
lods
xor
fsub
jecxz
or
mov
je
push
sub
jae
pop
cs
adc
push
rorb
or
cs
fsts
popf
xchg
cmp
vphsubdq
cmp
dec
adc
xchg
sbb
or
adc
mov
ljmp
push
xchg
push
test
adc
ds
mov
pop
js
std
push
in
in
mov
mov
push
jmp
inc
or
cmp
ljmp
push
mov
sbb
jo
aas
sahf
shlb
jmp
push
sbb
frstor
add
mov
xor
rorb
jns
dec
mov
lock
dec
mov
xrelease
xchg
jo
dec
fimuls
mov
xchg
add
aam
sbb
mov
adc
sub
movsb
dec
add
jl
lret
pop
into
out
rcr
mov
popf
iret
push
imul
out
cmp
insl
sub
xor
adcb
cmpsb
jle
push
mov
push
lcall
mov
xchg
push
mov
fstp
adcb
jae
jmp
shll
fisubrs
mov
incb
popf
jge
pop
xchg
lods
sahf
cld
pop
pop
sbbb
lds
das
inc
sbb
inc
inc
and
xchg
repnz
dec
outsb
jne
sbb
xor
scas
les
cs
lret
mov
lea
cmp
outsl
jl
cmp
mov
fildl
fimull
pop
add
sub
jl
or
mov
adc
dec
decb
aaa
int
or
adc
sar
pop
mov
pop
sub
mov
sbb
push
cmp
sub
sbb
rorb
jp
push
mov
dec
mov
andl
je
mov
addr16
xlat
mov
xchg
sub
sub
ret
movsl
dec
push
out
cmp
xor
lea
cmpsl
bound
lret
mov
fcoms
inc
inc
mov
sti
add
mov
daa
fnstsw
inc
repz
fildll
jno
sbb
mov
lods
push
lahf
push
in
or
ljmp
pop
imul
lock
cmpsb
pop
test
js
pop
rcrb
push
fisubs
cmp
push
enter
sti
icebp
mov
insb
mov
xchg
lods
loopne
mov
and
outsb
out
nop
pop
push
cmp
jp
aad
fsubp
loopne
ja
ja
dec
mov
xchg
stos
out
jno
mov
or
mov
jmp
pusha
jg
cld
mov
pop
popa
add
add
mov
mov
ffreep
push
ss
cmpsl
sub
sub
adc
lds
nop
adc
pop
inc
sti
inc
sbb
pushf
fildll
in
xchg
mov
iret
mov
enter
add
test
sti
jle
int3
mov
or
add
rorl
addr16
sub
sub
in
popa
loope
ss
pop
ficompl
mov
into
adc
lods
ret
cmpsl
rcl
orl
mov
sbb
out
rclb
mov
and
outsl
add
lcall
gs
mov
ret
popf
inc
pop
arpl
ret
in
pop
bound
sub
pop
imul
mov
dec
lods
lcall
mov
inc
mov
inc
fldl
out
xchg
fcompl
lret
cmp
push
push
test
cmp
jb
pop
xor
sahf
sub
pop
das
cmc
pushf
jl
mov
add
cltd
fisttpl
sahf
aas
mov
dec
lret
dec
jns
cli
cmp
mov
cs
pop
push
sbb
outsl
cwtl
mov
jae
adc
call
test
sbb
test
push
jae
pop
inc
stos
xchg
lcall
lock
cli
out
mov
adc
pop
in
push
out
sub
and
mov
jo
jnp
mov
and
mov
jl
out
mov
idivl
dec
sahf
push
and
addl
or
mov
addr16
xor
iret
jle
cmp
pop
inc
push
cli
rcrb
insb
push
adc
fldenv
mov
inc
sbb
loop
loop
into
sub
fwait
aam
lock
or
xchg
cmp
into
mov
repnz
push
mov
enter
bound
popa
push
mov
xchg
rcll
std
sub
jp
loopne
push
xor
clc
bound
dec
dec
push
inc
pop
and
das
insl
stos
repz
inc
cmp
je
iret
pop
fnstcw
jle
sub
scas
sub
jae
xchg
movsl
dec
les
inc
out
outsl
call
in
into
jg
mov
and
sbb
aas
inc
aaa
sub
and
sbb
jbe
mov
repnz
mov
xchg
mov
jge
outsb
movsl
cmp
inc
sub
dec
outsl
aas
sub
mov
cmc
mov
or
and
mov
insb
dec
mov
scas
dec
push
les
push
cmp
out
in
rcrb
outsb
mov
dec
jae
insl
xchg
frstor
sub
add
outsl
dec
loop
ja
and
lock
into
push
xchg
lret
pop
sbb
dec
out
pop
adc
pop
dec
enter
pop
and
push
mov
and
jae
pushf
scas
mov
jae
ret
lods
popl
lods
into
or
daa
and
pop
push
dec
sub
ds
sahf
xor
or
nop
jns
js
xorb
iret
sub
into
faddl
and
inc
cmp
adc
push
sub
ljmp
je
outsl
mov
adc
jecxz
sti
jae
push
test
push
push
neg
inc
mov
xor
sbb
loopne
inc
add
repz
jecxz
push
push
mov
add
pop
jge
mov
in
dec
lcall
push
mov
cmp
cld
insl
mov
pop
jecxz
pop
fdivrl
or
rcrb
mulb
jmp
cli
add
mov
cmpsb
pusha
pop
pop
pop
in
icebp
int3
cmp
addr16
insb
push
xchg
push
pop
imul
mov
mov
or
jo
cli
or
ljmp
dec
pop
popa
add
aam
xor
sarb
mov
jle
outsb
xor
jecxz
jmp
stos
test
pop
lahf
in
push
push
not
mov
leave
sbb
loop
out
fucom
imul
fidivrl
mov
sbb
lcall
popa
lods
bsr
arpl
jae
jg
test
xchg
aaa
scas
stc
adc
ficomps
int
push
jns
xchg
movsl
xor
adc
xor
dec
negb
inc
and
ret
inc
test
cmp
xchg
and
and
cmp
ret
push
push
incb
cltd
add
mov
out
mov
xlat
fs
lcall
mov
shlb
sbb
rorb
xchg
inc
inc
fwait
jecxz
mov
dec
dec
fimull
lods
js
mov
or
push
jl
and
push
mov
imulb
mov
cld
and
xor
and
ret
sti
outsb
xor
xor
daa
dec
ret
jg
daa
inc
out
int3
call
and
into
mov
jmp
mov
decl
add
and
push
loopne
adc
loope
jmp
lahf
repnz
mov
imul
addr16
addr16
mov
adc
mov
fmuls
out
inc
and
push
jno
adc
inc
stos
je
incl
adc
aad
add
cld
loopne
dec
xchg
aad
hlt
dec
jbe
xchg
mov
add
cs
mov
or
adc
fs
mov
jb
mov
mov
imul
and
popl
out
cmp
pop
scas
mov
xor
jb
and
mov
es
add
mov
or
leave
ficoml
bound
mov
in
pop
enter
fdiv
jp
int
pop
jnp
fstpl
stc
icebp
xor
dec
xchg
mov
inc
ds
lcall
mov
push
mov
orl
inc
ret
push
mov
cmpsl
ret
mov
je
inc
push
addl
ficomps
and
pop
mov
sbb
test
or
imul
loope
pop
xor
fsubrl
gs
int
mov
mov
clc
push
iret
push
inc
mov
push
popf
stos
pop
lcall
cmp
jae
mov
mov
lods
cmp
arpl
jno
pop
imul
lahf
in
test
pusha
push
xchg
or
sbb
imul
stc
int3
cmp
cmp
mov
rclb
ljmp
fwait
pop
push
mov
and
jno
xlat
inc
daa
push
push
xchg
add
cmp
and
out
adc
int3
inc
repnz
add
xchg
mov
test
rclb
add
in
movsb
fwait
push
nop
xchg
inc
push
dec
or
mov
add
pop
mov
pusha
cli
ret
out
sti
aaa
or
in
jbe
pop
out
add
mov
pop
outsb
push
jo
push
into
js
outsb
rcll
cmpsb
lods
or
mov
rcrb
mov
mov
fwait
fwait
cmpl
ss
inc
aaa
and
push
dec
inc
add
mov
in
movsl
repz
xchg
imul
or
sub
mov
lock
xchg
call
ja
dec
or
stc
aam
dec
jge
push
xor
addr16
js
pop
pop
dec
lahf
or
add
add
icebp
push
sub
push
adc
fcoml
push
js
iret
lret
movsb
fildll
dec
mov
hlt
sub
mov
mov
js
sbb
sub
fdivrs
mov
xchg
or
fdivs
cmp
jl
and
cmp
mov
mov
out
dec
sti
jns
cmc
orb
inc
mov
imull
xchg
wrmsr
cltd
inc
dec
aad
data16
xchg
xchg
inc
out
call
sbb
sbbb
jecxz
insl
daa
loopne
adc
enter
aas
sbb
cmp
fstpl
iret
xchg
jne
mov
pop
mov
jmp
jne
test
movsb
sbb
xor
push
data16
sahf
nop
testl
fnstcw
jne
push
adc
ss
fsubrs
ffree
dec
mov
test
xchg
roll
enter
pop
inc
ficoml
xchg
and
cmp
sbb
cmp
adc
je
mov
push
daa
dec
cmp
jmp
lret
and
mov
aad
jb
cltd
jns
pop
pop
mov
push
mov
loopne
lcall
out
imul
fnstcw
xchg
into
push
mov
xor
rclb
out
cwtl
jle
add
hlt
pop
mov
add
das
add
sub
sbb
push
rcrb
push
and
push
xchg
adc
or
or
movsl
test
jne
push
mov
scas
imul
xchg
rcll
lock
push
xor
mov
add
fsubs
in
and
adc
pop
stos
aaa
aas
xchg
sub
dec
fcoms
cmpsl
loopne
pop
mov
aad
ljmp
arpl
or
shrb
sub
fiadds
cmp
sbb
add
das
icebp
test
sub
das
enter
mov
add
cmc
rorl
insb
in
mov
mov
push
mov
adc
sti
add
xchg
imul
movswl
sub
pushf
add
iret
mov
repnz
scas
sbb
or
int
push
mov
inc
sbb
push
ds
inc
setg
push
cmp
push
aam
and
lcall
repnz
js
in
es
mov
fbstp
notb
jmp
pop
xchg
xchg
push
mov
mov
pushf
dec
pop
xchg
in
sbb
mov
mov
lcall
cmp
movsb
pop
mov
sbb
sbb
hlt
insl
mov
jmp
movsb
imul
add
cwtl
sbb
sbb
les
adcl
out
xchg
sti
and
sub
ja
ret
add
fdivl
scas
out
mov
sub
xorl
shlb
xchg
outsl
fucom
ret
adc
stos
pop
repnz
adc
out
adc
out
add
hlt
xchg
insl
xchg
xchg
mov
mov
shll
out
int
int3
loope
stos
daa
dec
sub
cli
mul
dec
or
mov
pop
adc
dec
test
mov
sub
cmpsb
mov
adc
or
cwtl
mov
imul
push
in
in
dec
lahf
inc
cmp
push
ret
mul
xlat
fildl
pop
lods
loop
test
rcll
mov
stc
aaa
enter
icebp
test
sub
insb
in
sub
hlt
aam
iret
sbb
xchg
lods
sbb
jne
adc
add
in
sahf
movsl
sub
sbb
dec
mov
fwait
arpl
js
ljmp
sahf
adc
pushf
loope
sub
dec
cli
ljmp
sub
adc
arpl
shrb
ja
jne
inc
rorb
into
test
sbb
mov
mov
mov
inc
fnstsw
fidivs
cmc
icebp
in
mov
in
lods
xor
or
sbb
imul
je
fmull
xchg
mov
fcomps
scas
lret
dec
push
dec
cs
pusha
sub
lret
mov
jne
mov
pop
ljmp
mov
test
cmpsb
mov
or
mov
or
push
negl
lret
repnz
mov
les
adc
aaa
sbbb
sub
ja
lret
push
sub
movsb
scas
or
jl
or
icebp
pop
and
das
cmp
add
sarl
jmp
pop
adcb
mov
inc
mov
int3
cmp
add
and
lcall
mov
incb
sbb
out
scas
adc
xor
push
test
inc
insl
jae
mov
push
cs
pop
popa
sbb
das
dec
call
lret
cmp
inc
rcrb
sub
out
cmp
push
in
mov
and
test
mov
loopne
insb
idiv
xor
mull
inc
scas
mov
or
loopne
mov
mov
into
mov
stos
aaa
mov
xor
aad
inc
test
cmp
pop
jno
mov
sbb
pop
lahf
adc
jecxz
mov
pop
insb
lock
fildl
pop
and
xchg
arpl
or
fsubl
test
push
ret
dec
sub
pop
dec
mov
nop
adc
mov
xchg
inc
mov
push
movsl
sub
lahf
mov
mov
push
jecxz
add
adc
movsb
sbb
mov
mov
adc
push
gs
pushw
and
or
outsl
test
fcoml
sbb
in
subl
push
or
js
sub
adc
int3
jae
xchg
cmp
pop
cwtl
hlt
inc
add
push
stos
in
movsb
jb
adc
pushf
xchg
push
bound
or
jno
and
ret
dec
popf
fldcw
inc
scas
cmp
mov
xchg
cltd
push
cmp
lcall
xchg
insl
add
iret
pop
add
testb
and
frstor
jo
fucomp
mov
push
dec
or
push
add
lret
lret
repnz
rorl
cli
jae
dec
adc
xchg
mov
iret
imull
or
jge
in
lret
fs
push
jns
and
inc
mov
test
nop
fildll
fsubs
sbb
int3
add
mov
loopne
mov
outsl
jle
fwait
cmc
and
addl
fnstcw
push
xchg
inc
call
arpl
sub
xchg
or
add
stos
insb
push
sub
int3
sbb
mov
push
xchg
ss
xchg
jmp
enter
jnp
inc
adc
jg
adc
xor
out
loopne
mov
sub
jp
cwtl
pop
push
rcr
in
mov
or
in
mov
jne
test
xor
fstl
dec
mov
mov
xor
mov
or
neg
xchg
xchg
mov
or
das
addr16
and
jp
out
mov
lock
jmp
xor
sub
cmc
push
lods
pop
test
outsl
lock
fstpl
mov
test
push
and
pusha
loope
sub
les
jp
dec
sub
inc
mov
push
adc
loopne
mov
leave
or
and
cmp
mov
cmc
mov
hlt
push
sahf
cmpb
jge
pop
test
cmpl
and
or
jp
jle
push
xchg
mov
inc
mov
outsb
push
lods
inc
mov
or
stos
stos
hlt
xor
dec
lcall
aad
jns
fidivrl
cli
jge
cmpsb
outsl
mov
xchg
xor
push
test
gs
stos
adc
inc
xchg
mov
ljmp
dec
push
std
push
fldenv
addl
xchg
stos
xchg
cmp
mov
xchg
mov
fdivr
sub
dec
in
mov
stos
lea
pop
add
mov
mov
push
jl
arpl
xor
and
xor
cltd
jns
aad
pop
xchg
das
or
pop
je
call
add
out
jp
lret
ljmp
mov
jb
popf
xchg
scas
ljmp
and
outsl
jge
cmp
cld
enter
or
xchg
mov
sbb
mov
inc
jnp
cmp
fwait
mov
insl
pushf
dec
jp
arpl
mov
pop
ljmp
jo
inc
movsl
jne
sahf
test
and
jecxz
pop
mov
push
mov
ljmp
adc
scas
repnz
sub
sarl
mov
jp
xchg
mov
xchg
sti
cltd
sbb
inc
pop
out
cmp
nop
mov
lea
fcomps
ret
addr16
adc
mov
fadds
dec
sbb
cld
cmp
sub
icebp
sub
xor
addr16
int3
into
in
in
imul
xor
dec
jmp
sarl
jmp
xchg
shll
pop
inc
adc
icebp
cli
fiadds
or
sahf
add
jp
arpl
js
mov
lcall
test
mov
mov
popf
stos
mov
and
leave
and
pop
pushf
icebp
add
sub
stos
mov
pop
xor
or
stc
out
ss
movsb
dec
jp
shl
lods
add
jns
mov
imul
scas
je
into
or
jns
shr
add
mov
inc
push
cmovs
nop
les
adc
in
xor
ja
and
and
lahf
arpl
push
sub
inc
stos
repz
mov
lds
xor
or
adc
sub
mov
repz
or
clc
or
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
jmp
out
dec
mov
jne
jae
or
cltd
dec
dec
ss
imul
jp
dec
popa
push
cli
mov
mov
jnp
out
push
cmp
rolb
test
out
add
shrl
add
sbb
aaa
or
inc
xor
push
cmpsb
xchg
pop
push
movsb
cwtl
js
pop
mov
lea
mov
andl
sub
push
push
mov
rcrl
loope
adc
ret
stos
outsl
pop
pop
xchg
jecxz
mov
mov
inc
xor
cmpb
xor
lock
jo
dec
push
xor
scas
mov
sub
or
stos
jmp
icebp
jb
sub
xchg
and
cld
inc
loopne,pn
pop
pop
ds
fcoml
mov
mov
aas
mov
inc
sub
gs
or
and
aad
repz
xor
jl
xor
inc
xor
aad
lds
loopne
adcl
xchg
adc
lods
sub
sahf
lret
fisubs
out
bnd
sbb
stos
setno
das
adc
xchg
mov
in
xchg
sbb
shrb
loopne
jo
adc
lds
adc
fimuls
add
inc
inc
rcrb
mov
sarb
jo
dec
inc
iret
movsl
das
xchg
mov
iret
sbb
cmp
adc
les
mov
pushf
pop
xchg
sub
rorl
adc
dec
cltd
repnz
inc
roll
add
push
leave
push
repz
or
stos
insl
push
xchg
push
xlat
mov
lea
push
xchg
dec
popa
scas
insl
jp
in
pushf
rorb
ja
sub
fcmovbe
push
pop
stmxcsr
cmp
pop
bound
jl
int
mov
jecxz
in
dec
xchg
je
lahf
test
inc
cld
repnz
inc
inc
fsubs
loope
cli
xchg
xchg
enter
or
scas
fs
int
lret
inc
mov
mov
fadds
fdivr
sub
fisubs
sbb
lock
outsl
mov
or
push
dec
ds
vmovsd
adc
mov
stc
dec
fisubrs
dec
repz
out
shlb
add
out
add
add
jo
inc
pop
lds
mov
push
lock
ja
mov
xor
movsb
pusha
adc
enter
or
in
jle
xlat
cli
mov
xor
loopne
adc
es
jl
mov
lret
or
dec
sarb
pop
pop
scas
sbb
and
mov
xchg
movsl
mov
mov
test
les
in
and
mov
push
dec
jo
lret
lret
pusha
inc
clc
cs
ljmp
mov
aaa
xor
fildll
iret
sahf
ja
pop
jb
add
mov
outsl
xor
push
xor
test
cltd
xorb
sub
insb
mov
data16
and
cmp
scas
and
daa
mov
inc
gs
adc
data16
in
data16
mov
mov
push
movsb
inc
jle
mov
cmpl
mov
test
es
aad
clc
inc
das
xor
js
mov
ljmp
ret
fistps
dec
add
or
mov
sub
nop
and
cmc
sub
cmpsb
call
push
push
not
shll
icebp
mov
mov
or
xchg
jns
inc
ficoml
sub
jg
mov
gs
fdivp
fidivrs
pushf
mov
or
push
sub
push
fsubs
mov
pop
and
lods
mov
dec
jp
jb
push
ljmp
into
sbb
rcrl
out
adc
xchg
outsl
sahf
inc
adc
pop
cmp
popf
fnstcw
cmpl
push
jle
jbe
ljmp
hlt
bts
stos
call
pushf
out
mov
call
jbe
ss
das
pop
test
out
sub
sbb
gs
cli
push
imull
mov
sub
mov
push
ljmp
jno
outsl
sub
addr16
sbb
mov
cmp
add
std
addl
mov
adc
xor
mov
std
push
into
stos
xchg
pop
jp
adc
dec
dec
orl
dec
mov
push
inc
adc
xor
jnp
daa
loope
mov
sub
stos
cmp
cmpsl
or
out
sub
jnp
push
dec
popl
nop
bnd
inc
pusha
or
sahf
mov
mov
fisttps
inc
gs
divb
add
and
lock
std
adcb
add
in
xor
cltd
fsts
push
out
nop
adc
loop
repz
test
adc
into
jbe
and
idivl
jae
inc
mov
mov
stos
mov
inc
xor
mov
sub
jne
ljmp
xor
bound
popf
addr16
sub
and
clc
out
lds
test
div
sub
adc
sub
mov
xlat
imul
nop
cmpl
daa
cmc
cmp
dec
loope
add
pop
popf
xchg
nop
sbb
hlt
aad
jg
cmp
jmp
jbe
add
inc
add
push
mov
jnp
adc
and
mov
xchg
inc
jo
inc
inc
add
and
call
sub
fisubl
jns
fcomi
nop
dec
xor
dec
mov
leave
jnp
mov
mov
xor
mov
stos
lcall
ret
xor
adc
mov
filds
lods
push
add
into
inc
and
mov
and
jle
das
scas
pop
ret
dec
aaa
pop
push
sbb
scas
push
cltd
cmc
aas
in
adc
in
into
push
add
ret
xchg
inc
mov
xor
daa
mov
adc
pop
int
cmpsb
sub
inc
push
sbb
movsl
mov
and
inc
or
xchg
or
mov
and
adc
add
outsl
sbb
pop
mov
mov
dec
dec
push
pop
addr16
inc
cltd
xchg
int
movsl
adc
cmp
dec
xor
jae
out
push
sarb
and
pop
clc
pop
outsl
add
sub
cs
mov
fwait
push
pop
inc
xchg
movsl
out
jae
dec
test
hlt
mov
mov
adc
inc
cmp
add
mov
pusha
push
mov
cmc
xchg
cmp
mov
inc
inc
xor
enter
pop
push
clc
repz
cmp
pusha
inc
inc
push
adc
add
xor
outsl
inc
adc
add
cmp
cwtl
movsl
rcrl
aam
stos
cmc
fbld
outsl
popa
sub
test
push
xchg
imul
fdivs
jnp
shl
popa
call
gs
aas
jae
imul
test
lret
roll
or
pop
ljmpw
dec
push
push
jo
mov
repz
sbb
cmp
push
push
test
inc
cld
jne
cmp
xor
out
pusha
jmp
pusha
sbb
adc
adc
orl
jne
imul
ret
sbb
adc
outsl
jns
fisttpll
dec
in
loope
sbb
mov
xchg
or
push
insb
mov
adc
cld
push
mov
int3
xchg
inc
sbb
mov
push
dec
repz
cmp
xor
mov
mov
push
iret
fidivl
push
mov
inc
cltd
add
push
sahf
jae
fdivp
sub
std
stos
pop
push
loop
jecxz
inc
pop
arpl
movsb
adc
dec
or
mov
xor
inc
xlat
aas
ret
dec
test
add
daa
sub
ds
adc
pop
or
cld
outsl
mov
pop
mov
test
xchg
mov
adc
jg
in
pop
mov
ret
xor
or
enter
mov
mov
push
dec
loope
clc
inc
icebp
ret
adc
xchg
mov
jp
testl
lods
je
clc
fs
scas
scas
loope
inc
or
std
lds
sub
sub
jge
clc
fnstcw
in
dec
test
ljmp
aas
mov
xorb
xchg
or
jno
ret
jg
jl
adc
je
loopne
es
int
add
jg
mov
mov
or
add
push
pop
imul
sub
or
dec
jmp
ss
mov
jno
jg
xor
shlb
rol
mov
sti
jo
push
lret
xchg
xchg
cld
add
pop
rcr
fadds
jae
cli
xchg
or
add
inc
pop
dec
push
sub
leave
cwtl
lret
into
pushl
fmuls
insb
xchg
into
and
shll
test
push
arpl
pop
idivb
mov
xchg
jp
je
pushf
mov
jecxz
mov
test
out
sub
popa
adc
in
test
inc
pop
push
call
dec
sub
dec
lcall
into
inc
mov
add
xor
or
es
xor
jp
inc
push
inc
add
add
aas
ja
mov
mov
or
mov
ja
imul
add
or
loop
rolb
jnp
icebp
pop
mov
push
cli
in
in
push
cmp
movsl
adc
inc
pusha
scas
xor
loopne
mov
addl
xchg
lahf
fbld
cmp
jmp
sub
in
dec
xorl
push
pop
jge
aaa
pop
xchg
ret
jg
outsb
adc
test
add
inc
push
aas
jecxz
add
adc
loope
or
or
push
xor
cmp
addr16
lret
adc
repz
cmpsb
cmp
add
hlt
sub
in
add
xchg
pop
push
dec
push
das
mov
out
jge
jmp
xchg
xchg
pop
scas
pop
pusha
cmpsl
shll
sbbl
fcos
psubsb
adc
mov
int
dec
pop
addr16
rcrb
ret
and
jno
mov
inc
add
push
shlb
in
mov
push
jno
fwait
lds
xchg
imul
xor
rcrl
loope
mov
and
ja
dec
fsubrs
or
cli
imul
jo
mov
or
xor
xchg
roll
add
and
loope
or
es
mov
imul
arpl
or
dec
dec
notl
mov
adc
mov
xchg
mov
outsb
leave
sub
ds
sbb
data16
ret
push
push
movsl
call
xchg
call
jmp
je
sbb
das
xor
push
jo
and
cmp
lahf
sub
add
mov
sub
mov
je
jp
add
adc
xor
fs
dec
call
scas
mov
or
adc
lret
push
fildl
and
mov
sbb
in
xor
in
scas
xchg
or
mov
mov
dec
fldenv
fstpl
fwait
jo
inc
lret
xor
mov
mov
sub
ljmp
xchg
or
ficompl
fdivp
fisubl
mov
cli
lcall
jae
push
inc
xor
inc
in
dec
cltd
pop
out
jno
inc
adc
inc
inc
lcall
aam
fs
xchg
in
pop
mov
imul
sub
int3
mov
mov
mov
mov
notl
push
xor
push
jnp
xor
lret
xchg
xchg
rorb
mov
inc
std
and
aam
jb
mov
stc
lahf
sub
lods
lea
dec
ss
xor
lods
test
test
add
sti
loopne
test
pop
sbb
test
dec
or
stos
cli
jb
adc
or
cli
inc
dec
push
enter
mov
push
mov
add
cltd
outsb
in
dec
pop
fildl
cmc
push
or
and
pop
inc
mov
fst
xor
inc
enter
mov
push
repz
out
aaa
lds
das
mov
adc
push
xor
loope
stc
outsb
dec
mov
dec
sbb
into
mov
sub
lock
pop
hlt
jg
push
nop
aas
or
push
inc
jbe
in
sbb
jl
mov
aad
movsl
movsl
push
xor
mov
iret
inc
cli
jle
enter
inc
xchg
xchg
push
not
mov
sbb
jb
popa
jnp
sar
xor
sbb
mov
jmp
in
test
ror
enter
out
pop
enter
inc
scas
outsb
les
test
and
cs
sub
jae
js
jns
push
gs
repnz
add
mov
sti
cwtl
sbb
cmp
pop
dec
mov
stos
cmp
test
les
std
xlat
inc
push
rcll
dec
mov
decb
sub
jnp
je
cmpb
lock
push
cli
ror
sti
in
imul
inc
jg
pop
mov
enter
es
jb
jg
les
fs
rcrb
mov
push
data16
popf
push
insb
fisubrl
jnp
addr16
call
mov
lea
int
sbb
push
rcrb
inc
xchg
mov
shrb
xlat
mov
mov
xchg
mov
push
mov
cli
dec
bound
mov
xor
sbb
ret
fs
js
je
lock
rorl
sub
or
pop
iret
jle
xor
int3
cld
ror
hlt
cmp
jnp
mov
fs
and
ljmp
or
fdivrl
or
or
bnd
and
divb
fs
or
sub
outsb
fwait
lods
sbb
push
dec
int3
adc
sbb
mov
cmp
cmp
jl
fdivl
pop
loopne
mov
mov
push
or
enter
ljmp
jae
aam
or
jmp
shlb
sub
ljmp
mov
sbb
add
clc
add
cmp
push
dec
lods
sbb
shlb
push
add
add
and
or
in
sub
jle
xorb
rorb
sbb
and
popf
jbe
sub
mul
test
into
insb
xchg
pop
inc
add
jns
xor
adc
pop
ja
or
push
inc
mov
ret
fidivrs
pop
push
cmovae
mov
loopne
xor
xor
push
aas
insb
pop
pop
fwait
or
pop
sbb
xor
jl
cmc
addr16
hlt
xchg
push
push
mov
cmp
mov
adc
idivb
lahf
sbb
cmp
daa
cwtl
mov
and
scas
or
sti
xchg
out
jg
fmull
jnp
xchg
pop
jae
cltd
ljmp
lock
mov
push
adc
mov
aad
dec
aad
lahf
movsl
negb
stos
test
cmp
and
mov
mov
dec
sub
mov
repz
xor
in
dec
ficompl
not
push
sub
pop
mov
jge
aam
or
push
shlb
cmp
icebp
dec
leave
leave
gs
dec
js
js
add
mov
xchg
jmp
sub
add
fadds
and
mov
popf
test
out
jmp
jnp
mov
aaa
test
mov
pop
dec
repz
stc
xchg
pop
out
mov
xchg
jge
cmp
hlt
bound
add
cwtl
cmp
and
inc
out
push
mov
or
and
mov
fsubs
loop
sub
jecxz
test
mov
das
stos
fcoml
mov
sahf
js
lret
dec
inc
inc
xor
pop
sbb
jb
stos
out
enter
jmp
pop
cmp
add
adc
add
jg
loope
jne
and
xor
jmp
jmp
sbb
pop
das
test
jnp
mov
push
bound
jo
lods
push
dec
dec
imul
cmp
andl
adc
and
int3
or
aaa
adc
aaa
and
test
sbb
add
mov
fstps
mov
test
frstor
xor
push
pop
pop
aas
cmp
jnp
lea
cmpsl
loopne
outsb
sub
cmpsb
sub
push
adc
call
pop
cmpsl
iret
clc
cltd
idivb
fcomp
fs
ficomps
and
cmp
jne
jle
in
push
addr16
hlt
lcall
stos
xchg
xor
outsb
repnz
cmc
add
and
fnstcw
shlb
out
mov
mov
rcrl
incb
push
shll
negl
rclb
fcomip
leave
adc
lock
or
mov
sbb
mov
jle
in
xor
scas
jno
push
popf
jecxz
cwtl
pop
jp
enter
shll
out
insb
aaa
mov
sub
loope
out
icebp
flds
imul
pop
das
xchg
jmp
xchg
pop
push
scas
push
fisubl
stos
lods
pop
test
mov
addb
shrl
shlb
int
testl
leave
jmp
mov
or
data16
lods
sub
imul
pop
jmp
adc
gs
sbb
or
mov
iret
push
lahf
fdivs
inc
jl
xor
cmp
je
mov
mov
lret
addr16
push
ja
es
je
hlt
pushf
iret
mov
aas
xor
push
sbb
push
inc
cmpsl
out
jns
jle
int
int3
aas
and
sti
xor
lods
sbb
mov
ret
loop
or
mov
dec
pusha
mov
mov
shr
andl
pop
add
imul
addr16
lods
int
jns
jne
mov
sub
imul
aaa
test
call
mov
xor
adc
int
push
jb
lret
push
outsb
lods
pop
gs
dec
jno
lods
pusha
push
cltd
cmc
clc
inc
test
js
push
and
add
dec
mov
mov
push
cli
inc
outsl
lahf
pop
inc
inc
lods
in
mov
inc
push
lock
cmp
cmp
sbb
mov
pop
push
mull
inc
cli
sahf
push
sub
cld
scas
hlt
push
daa
jno
or
and
into
xlat
jle
pop
lods
lock
push
ljmp
or
jl
adc
jle
push
fs
and
jle
popa
push
int
mov
dec
fs
cmpsb
int
adc
dec
xlat
int
jns
int
pop
add
mov
stos
nop
mov
sub
push
sbb
mov
inc
mull
mov
and
loopne
aas
pop
dec
inc
das
mov
fcomi
movsl
pushl
mov
cs
es
add
test
movsl
push
in
imul
cli
cmp
fldcw
add
mov
jo
loope
inc
movsb
fisttpll
sarl
and
mov
fdivs
xchg
sbb
push
and
mov
pop
mov
jl
sbb
cmpsb
dec
sti
cs
mov
cltd
leave
sbb
lds
daa
stos
in
and
mov
adc
push
outsl
sub
dec
sub
jb
frstpm(287
filds
jnp
ja
fadds
sbb
movsl
aad
adc
ficomps
je
jnp
mov
loop
flds
aad
jp
add
loopne
nop
jb
ja
fbstp
movsbl
dec
in
insl
push
lock
cmp
lcall
cmp
test
pop
xor
sub
addr16
push
or
pop
cmp
loope
xlat
xchg
repz
inc
add
inc
add
lea
nop
cmp
testb
aad
and
push
roll
ljmp
lods
sbb
dec
out
std
aam
test
fisubs
or
push
not
nop
das
loopne
loop
dec
sahf
push
mov
in
ficompl
dec
dec
pop
and
xchg
add
das
add
incb
cmp
dec
movsb
iret
mov
mov
or
fucompp
out
xchg
push
and
xchg
test
adc
shlb
xor
xchg
lret
push
mov
ljmp
shll
out
es
jmp
cli
push
out
jge
lea
lea
sbb
xor
adc
in
xor
cmp
jle
lahf
jge
fxch
js
das
call
xor
cwtl
or
cmp
dec
xor
sub
or
mov
xchg
test
outsl
les
xlat
adc
mov
ljmp
mov
clc
push
stos
push
stc
gs
jmp
lods
mov
cltd
mov
movsb
push
imul
fidivl
xchg
lahf
adc
or
mov
jno
push
sub
and
stc
rolb
lock
daa
lahf
nop
lds
jmp
sub
aaa
pusha
into
iret
orl
sbb
add
ror
repz
shlb
js
lret
fstpl
mov
pop
test
and
mov
daa
ret
sbb
insb
addr16
loope
das
sbb
push
adc
outsb
inc
push
out
int
push
push
jo
les
xchg
enter
mov
shll
add
inc
xchg
or
sbb
ds
sarl
sub
por
das
addr16
pop
ljmp
js
repnz
testl
mov
testl
mov
sahf
adc
and
andb
sub
aaa
jle
push
loope
and
ror
push
in
pop
imul
sahf
stos
or
shr
imul
add
jmp
out
adc
pop
jnp
mov
lahf
loopne
xor
pop
into
add
sbb
jge
pop
push
add
xchg
jb
sbb
sub
pop
jmp
and
lret
lret
ljmp
sub
xor
sub
mov
add
mov
mov
ret
or
stos
and
in
subl
add
xor
pop
ds
in
sbbb
and
mov
pop
sub
repnz
int3
push
xor
jns
repnz
stos
adc
push
mov
imul
jae
mov
xchg
stos
popa
test
push
in
pusha
adcb
cwtl
cmp
pop
mov
dec
inc
or
in
fs
clc
and
fcmovnu
mov
sub
jge
cld
pop
les
fisttpll
and
ja
enter
pop
fadd
pop
lcall
out
insl
mov
lret
xchg
mov
scas
ljmp
jecxz
add
push
mov
mov
frstor
lods
adc
in
add
dec
lcall
daa
std
fcoml
mov
jge
pop
imul
jno
xor
pop
imul
adc
xchg
cmp
xchg
iret
das
fildl
loope
ss
mov
stos
sub
sub
sbb
dec
sub
sahf
push
comiss
push
lea
xor
mov
shrl
cli
xchg
ret
ds
push
dec
arpl
pop
aaa
ds
out
add
push
xor
mov
popf
js
loopne
mov
xchg
xchg
mov
or
pushf
out
jp
sbb
fwait
ljmp
fnstenv
test
jbe
scas
fdivrs
scas
or
aam
imul
ss
adc
bound
insb
mov
or
dec
pop
sub
in
hlt
test
mov
push
sti
xor
or
jle
lahf
jmp
lcall
dec
scas
les
add
xor
xchg
call
jnp
inc
inc
mov
cmc
pop
out
mov
dec
ds
pushf
lds
sar
arpl
inc
dec
mov
xchg
or
jle
and
rclb
iret
add
xchg
sub
dec
fucomip
inc
pop
icebp
les
pop
inc
adc
push
insb
and
ror
stos
add
daa
popa
lahf
sub
dec
loop
pop
leave
es
sahf
fistps
repnz
shl
hlt
lcall
outsb
mov
sub
pusha
scas
daa
imul
stos
or
adc
test
rcrb
sbb
outsb
mov
lds
dec
sub
xor
and
std
dec
lcall
adc
lea
and
dec
pop
lea
xchg
faddl
dec
or
inc
cmc
xor
loop
clc
push
cmp
inc
mov
loope
pushf
in
xor
jl
and
cmp
pop
xor
cmp
mov
aam
sti
pop
inc
mov
pop
repnz
pusha
dec
mov
or
ret
fst
fwait
dec
std
vpsrlw
cmpsb
mov
jle
shll
and
ret
in
and
in
pop
inc
dec
mov
lret
int
outsl
daa
xor
or
add
les
add
es
add
pop
pop
dec
ret
or
aam
push
mov
add
pop
cmp
jb
lcall
pop
xchg
push
push
scas
movsl
add
ret
xlat
ljmp
xor
add
pop
insb
rol
mov
lcall
lea
lret
out
fisubrs
mov
xchg
sbb
imulb
xor
insl
mov
mov
mov
loope
mov
pusha
and
lock
lahf
mov
mov
daa
adc
mov
int
aas
icebp
mov
adc
repz
mov
sub
mov
adc
pop
sbb
pop
imul
dec
mov
push
out
fs
dec
ss
stos
mov
nop
pop
xor
cmp
mov
sub
rolb
fwait
das
inc
shlb
pop
mov
nop
out
inc
in
xchg
push
and
ss
or
outsl
mov
sub
sbb
clc
lock
mov
mov
mov
xlat
xchg
insl
adc
int
mov
and
inc
lret
cld
movsb
jmp
rcrl
dec
movsl
and
pusha
mov
ja
in
mov
pop
aam
cmc
cli
push
inc
fsubrl
lcall
popf
sti
and
xchg
jnp
imul
xor
mov
popl
jno
add
loope
push
stos
add
adc
adc
rorb
roll
jbe
xor
and
pop
iret
pop
dec
mov
ss
mov
xor
test
sti
xor
arpl
mov
cmp
xor
sti
adc
xor
cmp
jmp
inc
push
adc
mov
xchg
sbb
xchg
subb
aad
orl
orb
jmp
jo
jecxz
push
xor
push
pop
push
add
dec
adc
mov
aam
or
sbb
fcomps
jbe
addr16
sbb
cmpsl
imul
addb
sub
dec
mov
cmpsl
test
or
cmpb
cltd
add
mov
sub
adc
add
mov
outsb
call
movsl
loop
repnz
das
inc
cs
xor
cmp
fwait
jbe
jmp
add
jmp
jns
add
mov
in
aas
fldl
cmp
cld
xor
dec
inc
cmp
sub
sub
lds
sbb
adc
sbb
fs
inc
xchg
stos
add
cltd
xor
dec
sub
clc
add
cli
xor
add
or
orl
les
aam
popf
test
mov
fxch
cmp
pop
cmp
lock
mov
imul
xchg
push
shll
mov
sbb
xchg
stc
mov
sahf
cmp
and
mov
ret
sub
pop
xor
push
cmp
dec
leave
sbb
mov
fnstenv
cmpsl
cmp
push
lahf
lret
lret
xchg
repnz
xchg
dec
pop
fstp
test
fisubl
out
sub
pushf
cmpsb
jno
mov
or
inc
in
adc
add
pop
and
adc
imul
addb
dec
lahf
fs
jne
popa
jmp
mov
dec
sbb
mov
push
int
push
pop
xor
inc
mov
std
stc
fcompl
je
jle
in
inc
mov
or
push
ret
jge
jns
mov
sbb
repz
and
mov
fwait
xor
sub
fisubl
out
stos
ja
add
cwtl
rclb
xchg
fdivrp
aaa
aaa
cmp
mov
pop
gs
sbb
xchg
mov
sbb
dec
mov
jl
dec
inc
lret
out
popf
and
test
nop
pop
lret
scas
cmp
mov
ffree
sbb
imul
adc
movsl
mov
adc
push
int3
std
xchg
push
nop
or
jl
mov
push
adc
fs
lock
cmp
cmp
pushf
adc
xor
adc
lcall
loopne
add
and
jg
sbb
xchg
jne
sbb
lcall
push
adc
xchg
imul
test
sahf
cmp
mov
repnz
dec
jo
xor
xor
pop
mov
mov
xchg
sub
icebp
cmp
test
lea
fwait
cli
jmp
adc
fs
cs
in
or
sti
adc
test
scas
mov
push
aas
pushl
addb
xchg
xor
cs
jp
gs
push
mov
adc
filds
int3
xor
mov
mov
mov
sti
jno
cmp
sahf
cli
mov
mov
jmp
das
or
mov
jp
cmpsb
jge
in
dec
adc
ss
mov
sbb
mov
fsubs
mov
push
pop
fists
mov
enter
aaa
jg
mov
shrl
inc
mov
scas
inc
xchg
mov
mov
adc
and
cmp
fldl
les
outsb
jo
into
into
lret
psubd
mov
ljmp
es
sbb
xor
popf
subl
in
insb
add
jne
xlat
fidivrl
iret
mov
mov
push
mov
lcall
inc
sahf
xchg
pmulhuw
add
repz
jg
ss
or
into
xor
lret
ss
dec
or
in
fmuls
xchg
pop
in
dec
adc
adc
scas
adc
sti
xor
cwtl
daa
jbe
jp
inc
test
jp
test
rolb
leave
sbb
xchg
in
mov
jnp
mov
js
push
mov
pop
movsb
scas
into
and
mov
cld
inc
mov
das
or
lea
cli
cmp
stos
pusha
xlat
mov
out
out
rcrb
mov
js
cmpsb
mov
lea
push
ret
and
mov
imul
lock
leave
dec
inc
lcall
dec
popa
and
outsb
push
adc
leave
pop
xor
fildll
jge
sub
add
mov
mov
jbe
sub
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
jmp
xchg
pop
and
mov
jo
push
mov
xchg
std
jns
push
pop
jp
cmp
flds
fwait
dec
fwait
cmp
hlt
mov
mov
gs
fcoml
and
cli
inc
or
cmp
push
mov
ficomps
jb
or
sub
cs
cmp
add
dec
mov
pop
int
aas
jp
pop
adc
out
push
dec
add
mov
loopne
sti
pop
add
xor
aaa
in
scas
mov
aam
xchg
mov
enter
xchg
adc
push
or
mov
rclb
rcll
inc
jno
mov
dec
jns
jg,pt
sbb
xor
cmc
mov
aas
hlt
hlt
cmp
mov
inc
mov
shl
pop
movsb
lcall
enter
lret
inc
int
insl
push
pop
jo
lods
or
xchg
out
add
and
pushf
popf
jge
movb
ja
cmp
xchg
ret
lret
mull
adc
mov
lret
inc
jnp
es
or
aaa
mov
inc
mov
outsb
jmp
cld
inc
xchg
test
fisubrs
cmp
sub
sub
movsb
jge
shr
jbe
sbb
inc
and
mov
cmp
push
stos
out
loopne
int
mov
lods
mov
lret
ror
arpl
cmp
and
mov
add
pop
sti
or
out
test
dec
divl
mov
stos
push
leave
mov
in
push
fld
sbb
data16
inc
aas
pop
rcl
dec
push
mov
fsub
xchg
aas
ffree
test
or
jmp
jns
fsubl
dec
popa
out
jmp
pop
add
or
mov
lods
adc
aaa
dec
clc
jae
daa
in
add
mov
movsl
jge
pop
mov
or
xchg
adc
int3
mov
mov
sub
pop
mov
xor
fwait
je
or
xor
mov
cmc
shrl
dec
rcrb
cs
mov
xor
stos
incb
clc
lcall
daa
pop
inc
sub
sar
icebp
loopne
pop
stos
adc
fstpt
lock
aaa
movl
bound
jg
mov
int
or
mov
outsb
insb
xchg
fwait
push
das
stc
fnstsw
mov
push
cli
insl
mov
inc
pop
mov
and
jge
inc
mov
pop
in
xor
dec
imul
dec
lret
cmp
stc
insb
cmp
xchg
jmp
xor
push
fwait
add
jmp
dec
push
lods
ret
cli
inc
xor
rolb
xlat
les
and
push
lret
popf
imul
out
pop
jecxz
push
test
mov
stc
xor
ds
jae
popa
dec
mov
push
repz
cmp
mov
sub
lea
pop
xor
hlt
les
cmpsl
test
cmpsl
push
xchg
out
and
stos
cld
rcr
mov
pop
mov
cmpsl
sbb
dec
lods
out
mov
fxch
daa
push
and
pusha
mov
into
sbb
mov
mov
dec
arpl
mov
cmpsl
add
rol
sbb
lret
pop
clc
pusha
movl
icebp
jo
jmp
jnp
test
orl
xor
insb
movsb
mov
cmc
xor
scas
xlat
inc
xchg
nop
cmp
xor
push
cmpb
push
dec
push
in
outsb
imul
xchg
mov
inc
xchg
leave
lret
lds
pop
in
fsub
xlat
mov
and
in
pop
mov
jecxz
xchg
hlt
mov
sbb
aas
xor
lods
stos
aas
cmpsl
lret
arpl
cmp
pop
push
jnp
or
sahf
xor
sbb
and
mov
lret
pop
repz
add
jle
mov
mov
in
out
cmp
std
sbb
into
adc
hlt
mov
sti
pop
imul
jo
dec
rcrl
inc
or
mov
leave
push
mov
cmp
and
scas
mov
int
dec
add
lret
in
cmpsb
mov
repz
jg
jp
loope
adc
mov
adc
jge
leave
and
in
push
mov
xor
jbe
scas
stc
inc
insb
mov
mov
adc
insb
add
adc
and
or
loope
inc
mov
scas
insb
sub
mov
out
xchg
sbb
push
adc
aaa
push
imul
pop
xor
sub
lods
inc
and
je
push
shl
in
inc
sti
ljmp
xor
mov
and
gs
aaa
add
inc
les
push
push
xchg
dec
cltd
adc
addb
lds
dec
mov
add
les
aad
mov
pop
movsl
fcmovb
iret
add
adc
push
add
inc
into
movsl
add
fidivrl
inc
mov
push
cmp
jb
sub
lea
fdivrl
fucomi
adc
ja
mov
mov
or
inc
arpl
je
push
xchg
pop
sub
cmp
negl
pop
dec
stos
inc
pop
nop
pop
loope
dec
lret
ja
subb
jp
dec
push
cmp
sub
or
and
repz
adc
or
pop
xor
sub
fstp
and
mov
sbb
xchg
cmpsb
adc
test
arpl
jle
dec
add
out
add
jp
imul
movsl
xchg
jo
vmovss
adc
lahf
dec
sbbb
fcoml
ret
popa
dec
inc
fs
inc
mov
shrl
push
adcb
adc
fcoml
sbb
fstps
cwtl
lret
fsubl
cmp
outsl
mov
mov
mov
mov
ret
push
dec
push
leave
outsb
xchg
icebp
mov
pop
sbb
adc
jl
pushl
sbb
sbb
xor
sbb
test
cld
adc
mov
movsl
xchg
lret
lods
and
mov
dec
pop
insb
pop
test
sysexit
addr16
jmp
sarb
push
xor
jne
dec
sbb
test
fistps
cli
testb
mov
bound
scas
std
mov
pusha
cmpsl
push
cs
mov
lea
test
jle
push
loop
or
orl
cld
popf
jno
mov
neg
xchg
pop
ficoml
shr
insb
nopl
mov
xchg
ror
stos
imul
lcall
push
add
sbb
daa
pop
pop
lods
fcomip
sub
imul
stos
movsl
int
iret
js
ljmp
sbb
xor
setbe
sbb
sarb
mov
addr16
out
movsb
lret
into
sbb
inc
loopne
push
fistpll
fsubrl
xor
ret
mov
jo
outsb
lods
scas
jge
jl
std
xorb
in
movmskps
aam
lahf
sub
iret
stc
std
ret
testl
pusha
pushf
mov
push
dec
xor
cmp
adc
dec
inc
push
pop
cmp
pop
sub
lcall
jo
cltd
or
jbe
rcrb
sbb
insb
push
mov
ret
adc
lahf
js
dec
notl
shlb
enter
pop
in
stc
xor
sub
push
roll
fdivrs
and
xchg
inc
dec
mov
scas
push
and
sti
mov
dec
xor
mov
cmpsl
call
out
xchg
sbb
mov
sbbl
jg
cmp
xorl
imul
mov
or
ljmp
adc
sbbl
enter
std
call
shll
xor
in
test
cmpsl
iret
lods
es
stc
mov
gs
sub
orb
ret
mov
pop
aas
cmpsb
sti
popa
fistpll
inc
jae
enter
hlt
movsl
sti
shlb
icebp
clc
cltd
movsl
out
add
sbb
cpuid
addr16
jecxz
insb
int
add
xchg
loopne
xchg
fidivs
in
mov
cmpsl
jp
ds
push
shlb
loope
orl
je
pop
lods
in
sbb
jle
loopne
jecxz
mov
xchg
cmc
movsb
add
sub
mov
cli
or
fcmovu
cmp
xchg
sti
jge
and
shll
fcomp
ret
sub
ret
insl
xchg
mov
jb
cmc
mov
push
ret
es
cmpsl
adc
in
ds
add
int3
in
imul
data16
cmp
push
push
xor
xchg
push
xchg
push
ret
fdivs
adc
jecxz
and
pushf
sbb
ret
imul
mov
pop
mov
jl
inc
or
sbb
push
adc
jl
test
ret
out
pop
test
push
shlb
add
inc
test
or
push
xor
test
test
push
les
loop
mov
jnp
mulb
push
ja
xchg
rorl
push
mov
jne
movsl
aas
or
out
xor
movb
sbb
popf
sub
sbb
xor
adc
and
aaa
add
push
adc
mov
bound
cli
xchg
mov
loopne
mov
add
mov
cs
ret
ret
std
dec
mov
mov
rorl
scas
lcall
xchg
xchg
leave
enter
adc
es
sub
cmp
fdivrl
mov
dec
in
mov
pop
fstl
lahf
icebp
jecxz
fidivs
fdivrs
ja
pop
pop
push
leave
inc
dec
bound
test
testb
cmpsb
and
pop
xchg
daa
aas
je
mov
push
ss
aad
in
push
mov
cltd
out
adc
inc
stc
loopne
loope
cmpsl
test
mov
loope
fmul
sbb
dec
xchg
out
push
xor
lods
push
shlb
jno
pop
hlt
sbb
dec
lea
push
mov
mov
shr
mov
push
mov
inc
in
stos
stc
test
fbld
inc
pop
mov
ljmp
jmp
iret
hlt
addr16
nop
push
mov
push
outsl
and
jl
xchg
add
cwtl
mov
xor
mov
cmp
ret
jmp
dec
ret
dec
shlb
xor
pop
fcomp
add
mov
push
cmp
mov
test
jle
push
stc
mov
push
faddl
testl
mov
pop
rclb
sub
pop
jae,pn
xchg
and
arpl
mov
lcall
das
lods
or
aaa
inc
pop
lret
dec
cmp
into
fisubl
in
lock
add
pop
sbb
out
mov
into
clc
sub
dec
jno
pop
cli
mov
les
jns
imul
or
or
cmp
sbb
das
ficomps
pop
pop
arpl
inc
idivl
mov
mov
or
movsl
rcl
adc
popl
and
iret
jmp
xchg
test
imul
pusha
js
sub
xor
ljmp
sub
fcmovu
mov
push
jmp
imul
add
sti
movsl
sub
mov
mov
push
lcall
data16
pop
xlat
enter
jle
jo
je
cwtl
aaa
and
adc
jecxz
cmpsb
sbb
push
fildl
imul
imulb
jae
daa
gs
and
sub
mov
cmp
hlt
xor
xchg
cld
mov
and
and
jns
jl
aam
pusha
imul
cmovg
imul
and
dec
loopne
mov
cwtl
mov
pop
mov
lret
test
inc
fdivl
mov
add
push
ficompl
ret
lds
scas
fwait
pushf
popl
mov
lcall
inc
ja
push
mov
jnp
inc
enter
insb
pop
xchg
adc
shrl
test
les
jno
pop
jne
pop
rolb
out
cmp
xor
xchg
movsb
dec
mov
scas
lcall
mov
push
adc
sbb
pop
mov
cmp
mov
xor
pop
mov
and
dec
mov
add
out
or
popf
aas
subb
cld
adc
jns
sbb
or
ret
and
aas
aas
rcll
push
jg
repnz
enter
leave
push
loopne
mov
popa
cli
sub
add
mov
addr16
inc
cmpsl
les
sti
cwtl
shl
mov
fs
lret
jbe
cmp
fscale
inc
xchg
out
add
lret
fs
out
push
push
pop
jl
aas
insl
xchg
sbb
pop
sbb
jmp
or
ss
dec
idivb
cmp
bound
inc
and
sbb
dec
inc
mov
fdiv
stc
push
mov
inc
inc
cmp
test
xor
imul
gs
cmp
inc
notb
testl
clc
pop
cmc
popa
iret
pop
aaa
jle
outsb
jno
pop
cmp
test
and
xchg
stos
push
push
js
repz
outsb
and
out
ret
jmp
xchg
imul
cmp
xor
bound
scas
ljmp
imull
pop
ljmp
dec
scas
add
inc
les
cmc
sti
lods
test
mov
mov
jb
push
mov
push
leave
inc
mov
pop
and
mov
aad
pusha
cmp
add
ret
xor
scas
push
xor
push
adc
or
mov
add
inc
mov
cmp
in
out
shlb
repnz
dec
pop
ror
pushl
shlb
mov
xor
push
cltd
add
xor
je
cmp
xchg
arpl
lods
movsb
std
enter
fmul
push
and
lea
pop
ja
lcall
add
fimuls
sti
push
dec
push
movsl
dec
test
xchg
mov
adc
sub
jb
jns
les
sub
std
clc
sbb
lods
sbb
test
adc
fistpl
mov
int
sbb
and
fsubs
outsb
mov
xchg
sbb
inc
aaa
sti
push
and
xor
nop
fstl
lret
mov
dec
aad
or
or
sahf
jg
fs
fisttpll
cmp
cmp
nop
negb
inc
adc
loope
or
outsb
xchg
inc
inc
imul
or
xchg
add
jl
or
cmc
int
sub
add
pop
imul
test
cmc
mov
pop
in
or
jne
cli
mov
push
push
add
push
add
test
dec
pop
pop
data16
iret
shl
jge
inc
or
shrb
mov
jg
and
mov
inc
push
out
jg
imul
popf
movsl
stos
bound
pop
sub
pop
outsl
jb
adc
push
add
iret
lds
pop
mov
outsl
out
mov
dec
and
fbstp
pop
mov
dec
cmp
addb
dec
xor
xor
mov
fildl
pop
inc
mov
popa
adc
call
lock
cmp
pusha
cmc
sti
adc
lds
cmp
sbb
iret
mov
in
adc
and
or
dec
cmp
shrl
aam
std
push
cmpsb
sbb
outsl
imul
cmp
pop
addr16
add
mov
scas
outsb
ret
shl
cwtl
stos
sub
divl
ja
mov
or
or
cmc
mov
in
add
scas
add
sub
mov
js
movsl
fistps
mov
scas
mov
add
dec
hlt
pop
jae
push
xchg
cmp
lcall
aam
mov
test
fstps
push
ret
or
xor
sbb
std
push
fimull
je
sbb
dec
popf
stos
jg
mov
adc
add
inc
jg
xor
push
xlat
fstps
or
mov
sub
inc
cli
repnz
add
mov
int
mov
mov
popf
xchg
xchg
xchg
mov
inc
xor
lret
cmpb
fsubrp
shrl
push
mov
sbb
stos
scas
daa
in
mov
dec
sbb
adc
aam
cmp
dec
dec
cmp
sti
mov
loopne
aam
arpl
in
inc
jmp
cmp
inc
mov
fstl
mov
dec
adc
pop
into
je
xchg
adc
dec
mov
pop
jmp
psubsw
pusha
sub
dec
xlat
xchg
or
sub
movsl
sub
icebp
or
sahf
mov
cmp
mov
sub
add
aad
jbe
pop
cli
jbe
xchg
or
jle
cmp
or
cmpsl
daa
dec
sbb
movsl
fldt
js
in
mov
dec
clc
pop
add
sbbl
or
push
cwtl
mov
push
push
stos
fiadds
mov
mov
cmp
stc
mov
fidivs
jae
je
pop
adc
jp
into
mull
sub
ss
xor
stos
inc
or
push
pop
push
cmp
dec
sub
jbe
lock
cmc
in
or
movsb
xchg
xor
dec
mul
pop
pop
mov
loop
lods
jle
adc
push
mov
fsubrs
cmp
mov
hlt
jg
testl
xchg
cmpsl
pop
pop
push
jmp
pop
mov
sub
cmpsl
cwtl
add
mov
mov
jge
add
adc
insl
push
jbe
or
mov
fistl
inc
movsl
repz
add
cmp
lcall
sbb
push
and
add
lahf
mov
cltd
loope
nop
xchg
pop
inc
shld
ja
aas
mov
mov
shrl
movsl
jo
int
mov
xor
icebp
repnz
lret
test
stc
inc
aam
xchg
pop
or
jmp
push
shrb
fcmovbe
aas
jbe
stos
xchg
lods
cld
inc
jno
rcrb
xchg
outsl
mov
popa
int
and
imull
outsl
outsl
movsb
lcall
cld
out
js
pusha
and
xchg
inc
clc
mov
sub
ret
inc
cmpsb
add
mov
push
pop
cmp
push
mov
inc
cmpsl
add
jns
dec
mov
in
orb
adc
sbb
ret
fwait
sbb
ljmp
cld
sbb
jmp
jnp
push
and
test
fisttpll
decl
jno
xor
xchg
dec
xchg
es
test
push
shlb
cmp
data16
xchg
mov
xchg
jno
or
dec
mov
mov
pop
pop
mov
out
mov
lds
cs
sbb
bound
lret
daa
in
test
push
cwtl
inc
pusha
cmp
sbb
stos
scas
andb
xor
mov
dec
xchg
sbb
push
and
vpavgw
movsb
pop
test
movswl
cld
loop
ret
pop
dec
sbb
stc
mov
mov
out
lcall
jg
shll
jnp
adc
dec
push
or
aam
icebp
lcall
mov
cmp
add
xor
arpl
pop
pop
jge
out
and
fnstcw
ret
popf
push
lret
lret
repz
in
dec
daa
lret
loope
xor
adc
sbb
pop
push
ss
in
testb
lea
cmp
sub
pop
mov
or
jmp
rol
inc
lcall
data16
roll
sub
sahf
fidivrs
pop
test
inc
inc
mov
popa
enter
inc
and
sub
mov
shll
jge
leave
pusha
out
fistl
icebp
ja
add
push
dec
jle
inc
add
mov
jbe
adc
mov
nop
push
xchg
les
bound
and
inc
aad
xchg
mov
xchg
int
pop
into
adcb
sbb
xchg
inc
int
aas
dec
push
out
in
add
cwtl
inc
lock
les
pop
sahf
and
jecxz
xor
dec
ja
pop
hlt
cmc
mov
push
or
jge
cli
or
test
push
pop
data16
aaa
in
sahf
lahf
stos
lcall
adc
sbb
sbb
push
test
xchg
push
call
ds
mov
int
shrl
push
mov
pop
adc
mov
mov
fbstp
sub
inc
out
add
dec
cli
cmp
fimull
push
push
dec
imul
xchg
pop
xor
inc
sub
les
outsb
dec
stos
cwtl
dec
icebp
adc
xor
sub
xchg
sub
and
shlb
iret
js
clc
int
dec
aas
push
mov
or
xchg
aad
inc
mov
nop
repnz
xchg
adc
push
ficoms
push
insl
addl
out
mov
lcall
popa
shr
shr
into
mov
nop
lods
inc
hlt
aaa
mov
xchg
or
pop
aaa
minps
out
enter
incl
mov
in
xchg
int3
xchg
imul
sbb
cmp
pusha
xor
mov
nop
dec
xchg
fisubl
cs
sbb
inc
push
out
push
fidivrl
cmc
adc
sub
or
add
popf
shlb
into
repz
xchg
inc
in
mov
add
inc
jne
out
cmovbe
fsubp
mov
dec
outsl
fldt
xchg
les
int3
cmp
add
sub
push
sbb
mov
add
rorb
stc
push
jno
cmp
clc
das
xor
sbb
or
out
push
mov
cwtl
in
loop
leave
rclb
sahf
das
mov
add
pop
pop
enter
ja
or
push
xchg
jnp
lods
shll
incb
mov
js
nop
fyl2x
dec
cli
jp
jl
add
mov
xor
cmp
in
mov
pop
cmp
ret
mov
lret
pop
cmpb
cld
pop
sbb
ret
mov
outsb
or
jge
out
cltd
push
repz
or
fucomip
aam
fwait
stc
ds
aam
mov
sti
pop
add
aad
push
inc
leave
clc
aaa
pusha
push
pop
mov
dec
inc
les
xor
lock
sbb
sub
add
push
add
jp
xchg
sub
mov
inc
push
mov
mov
ja
add
xchg
mov
pushf
mov
in
mov
fmull
js
andl
scas
xchg
mov
adcl
sti
nop
fs
jb
dec
xor
lds
movsl
scas
dec
xchg
sbb
imul
sbb
repnz
add
mov
adcl
cmpsl
jmp
mov
dec
cmp
ss
lods
or
jbe
push
pop
mov
or
jbe
and
in
test
lcall
test
fiaddl
std
sbb
inc
jle
push
jbe
mov
mov
xchg
bound
enter
mov
rorb
xchg
jg
sbb
cwtl
mov
outsl
cli
dec
ds
push
rcr
cmp
cld
xchg
push
ficomps
sbb
ds
dec
mov
cmpsl
cmp
cmpsb
push
nop
cli
add
into
dec
repz
cmc
dec
mov
loop
enter
fucomip
xchg
out
mov
pusha
inc
xor
andl
shl
xor
xchg
push
js
repnz
das
cld
push
or
push
adc
sbb
dec
adc
in
test
sub
psrlq
out
inc
jmp
in
pop
add
jle
sbb
int
dec
lock
add
clc
test
mov
scas
lcall
sub
sti
clc
rcrl
in
cmpsb
mov
arpl
xor
add
jl
pusha
sub
xchg
or
jnp
shl
inc
orb
push
adc
xor
push
cmp
andl
xchg
aam
pop
sti
add
iret
jbe
mov
mov
fnsave
cmpsl
push
dec
xor
das
inc
fnstcw
mov
je
mov
sub
mov
jge
sar
sarl
mov
mov
repz
or
mov
jne
test
je
stos
or
call
mov
stos
push
cs
lods
rcrb
cmpsl
nop
jo
loopne
or
ljmp
sub
push
mov
loopne
add
shrl
mov
mov
sbb
lret
imul
outsl
ret
xchg
pop
cmp
mov
bound
xlat
into
xchg
rorb
push
adc
shll
dec
repnz
mov
dec
js
xor
shlb
subl
and
jge
add
sbb
insb
dec
test
or
push
in
cmp
mov
shr
mov
popf
jle
xor
loop
mov
ss
ret
addr16
mov
stos
scas
ds
push
inc
push
out
dec
imul
ljmp
mov
jmp
aas
xchg
ja
xor
adc
fstpt
sbb
jp
movsl
mov
pop
imul
sets
xchg
sub
in
test
inc
bound
imul
mov
sbb
pop
dec
ds
jmp
jg
dec
adc
ret
pop
or
sti
adc
int
fwait
add
inc
dec
ret
pushf
cmpsb
xchg
jmp
aam
xorb
bound
out
ficoml
aaa
push
xor
shll
mov
bound
leave
cwtl
mov
pushf
cwtl
push
lret
mov
dec
xchg
daa
mov
ljmp
xor
pop
popf
push
std
pop
ret
push
mov
stos
push
lea
arpl
dec
jecxz
add
sub
pop
stc
mov
sbb
scas
addr16
or
dec
inc
mov
xchg
jnp
lock
cli
outsl
fnstenv
enter
cld
pop
add
inc
hlt
test
xchg
add
inc
or
xchg
inc
xchg
jo
nop
popa
pusha
mov
push
xchg
mov
in
inc
xlat
jnp
add
or
xchg
mov
xchg
testl
neg
stos
mov
cmp
enter
test
loope
add
inc
sahf
mov
push
add
icebp
add
mov
insb
pop
jo
ds
les
cmp
cmp
lock
xchg
adc
out
loop
pop
out
sbb
test
cmp
outsl
lock
nop
push
xor
out
mov
jg
mov
xor
cmc
movsl
decb
das
mov
inc
add
pop
push
mov
divl
es
mov
test
pop
fldt
xchg
scas
adc
dec
mov
sub
js
push
stos
sbb
outsl
pop
jae
popf
daa
push
pop
inc
jmp
outsl
xchg
mov
std
dec
hlt
in
jnp
pop
xor
mov
jl
in
repnz
inc
sbb
daa
mov
push
mov
push
push
add
push
add
and
rcrb
insb
mov
call
scas
popf
rolb
and
scas
jae
xchg
pop
dec
fdivl
dec
inc
push
cwtl
int
mov
add
xchg
into
push
popa
sbb
mov
xchg
or
dec
and
rcrl
mov
mov
lcall
pop
jl
mov
mov
es
roll
mov
fists
stos
jbe
pop
addr16
lea
cwtl
fists
push
pusha
shlb
sub
incb
sahf
inc
add
mov
xchg
and
rcrl
pop
xor
jbe
ret
out
adc
push
xchg
test
shl
adcl
inc
push
mov
pop
pop
inc
or
inc
add
fistps
fildl
push
or
sub
nop
push
addr16
stos
mov
mulb
lret
in
mov
leave
sbb
and
jbe
gs
cli
test
insl
leave
cmpsb
in
dec
xchg
mov
stc
and
ret
mov
leave
dec
adc
adc
shr
pop
adc
cmpsb
xor
mov
fstpt
inc
popf
sbbb
jb
pop
xchg
das
xor
pushf
inc
imul
sbb
inc
sbbb
das
movsl
sbb
pushf
enter
mov
and
insl
ljmp
mov
push
stos
or
inc
dec
stc
mov
shlb
shlb
sub
push
scas
xor
jecxz
mov
push
insl
mov
mulps
nop
adc
mov
out
pop
lret
xchg
or
push
mov
mov
shrl
movsl
hlt
cwtl
pop
fdivrl
adc
shrb
cmc
shlb
and
xor
mov
clc
loopne
stos
stc
loope
or
xor
mov
push
cli
iret
loop
sub
jne
add
iret
fbstp
out
leave
jecxz
mov
mov
jno
cmp
and
shlb
shll
mov
imul
jo
test
or
out
jnp
shll
insb
mov
push
adc
jnp
or
fs
inc
and
lods
lret
mov
pop
je
dec
mov
mov
mov
sub
int3
mov
pop
inc
sub
fsub
mov
sarl
jb
fisttpl
jge
jnp
loope
dec
jnp
pop
dec
notb
jnp
cmp
jmp
cmpsb
repz
aas
push
outsl
sbb
inc
in
xchg
jmp
cwtl
xchg
negl
aaa
and
xchg
dec
or
dec
pop
lock
lods
cs
mov
push
add
push
pop
and
fs
ljmp
cmp
add
sahf
add
and
xchg
adc
scas
mov
xchg
xchg
sahf
cmp
cmp
imul
outsb
push
inc
jbe
or
inc
pop
fdivrs
icebp
lcall
repz
rep
loop
lds
mov
pop
fiadds
shlb
test
movsb
mov
sub
push
daa
bound
lods
popa
jno
ljmp
mov
adc
mov
lods
push
xlat
add
loopne
mov
in
popa
push
je
dec
jg
ret
sub
jbe
in
les
lret
test
adc
outsb
out
pop
sub
inc
bound
sub
mov
popf
idiv
sbb
dec
jecxz
ljmp
mov
push
ljmp
rcr
fistl
sub
cmp
jmp
jae
lods
inc
add
push
jle
push
mov
dec
xor
push
add
rcll
test
fwait
js
sbb
push
movl
std
notb
in
push
xor
test
daa
xchg
imul
test
aas
test
adc
lods
fbld
lods
int3
sarb
add
daa
ja
outsb
mov
lret
add
out
mov
xor
stos
mov
movsb
out
repnz
lcall
inc
pop
js
stc
insb
clc
jge
fs
arpl
js
cmp
stos
mov
jmp
pop
push
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jmp
out
call
ljmp
fwait
add
jp
adc
int
mov
sti
rorl
lret
out
jno
cmpb
scas
fistpl
addr16
stos
outsb
sbb
xor
push
cli
xor
into
ret
movsl
mov
jbe
sub
jp
cvtps2pi
xor
insl
xchg
lods
stos
inc
push
hlt
push
mov
xchg
rcr
mov
ret
adc
adc
cwtl
pop
xchg
mov
inc
ja
hlt
ljmp
xor
sti
nop
les
leave
adc
rorl
inc
mov
push
xchg
prefetcht1
jl
jbe
mov
jecxz
sti
lcall
clc
sahf
push
stos
or
loop
rcrb
xchg
adc
test
in
outsl
fisubs
push
aas
insl
repnz
jns
pop
xchg
inc
call
and
dec
add
in
add
repnz
fs
jns
cmp
iret
cltd
or
mov
dec
gs
pop
and
fsubs
mov
jge
jno
add
mov
inc
push
into
jns
rcl
imul
int3
mov
xchg
movsl
das
insl
faddl
push
lcall
filds
cmp
push
inc
loope
loop
ds
loop
sub
cs
aaa
dec
sbb
adc
in
jns
mov
nop
xchg
test
and
arpl
ror
lret
sub
pop
ss
or
push
into
js
and
pop
xchg
pushf
js
ja
rcrl
test
lods
cwtl
cld
dec
bnd
push
test
xlat
sbb
out
pop
mov
call
xchg
adc
cs
aas
push
pushf
icebp
orb
and
sub
std
push
scas
mov
or
jb
add
inc
add
daa
enter
negb
loope
dec
push
test
loopne
pop
push
ja
or
or
nop
xlat
in
or
ss
popf
jge
pop
xor
stc
dec
cltd
dec
pop
idivb
les
jb
adc
jnp
clc
cmpsl
pushf
leave
repnz
add
shlb
and
je
ud2
lcall
aas
insl
lret
inc
call
jge
rclb
jge
mov
mov
insb
scas
and
mov
icebp
mov
pop
dec
rorl
jl
and
jns
cwtl
addr16
arpl
mov
mov
outsl
jnp
addr16
pop
jne
bound
inc
cs
jno
std
jb
add
dec
divb
jge
maxps
call
fcmovne
sub
sub
mov
js
add
js
aaa
sub
pop
call
xlat
or
adc
out
in
push
inc
adc
loop
inc
push
in
and
lret
mov
mov
daa
cld
testl
imul
pop
fmull
fwait
jle
mov
inc
dec
addr16
pop
xchg
std
inc
push
and
inc
aam
stc
add
push
cmpsl
jno
add
repnz
sub
and
mov
sbb
cmp
jecxz
pop
fldcw
push
add
pop
add
bound
and
and
aam
mov
std
xchg
dec
testb
nop
sub
test
fldenv
cs
and
cli
add
inc
into
lds
lods
cmp
aaa
sub
in
adc
pop
aad
mov
inc
movsl
sbb
inc
repz
add
or
pop
cwtl
dec
pop
push
ja
xor
adc
out
test
inc
add
mov
sbb
xchg
dec
aas
es
push
mov
test
shl
aam
lods
stos
leave
push
pop
pop
cltd
push
cmp
dec
or
push
xchg
push
sub
shll
sub
jb
repz
out
push
dec
pop
sub
lahf
pop
loop
pslld
push
std
xchg
arpl
fidivrs
sub
in
mov
cmp
push
shll
mov
mov
mov
and
rolb
sub
mov
ret
and
dec
sub
inc
cmp
mov
je
xor
pushf
loop
adc
aas
xchg
test
loop
out
sub
mov
sbb
push
xchg
bound
or
lahf
cmp
mov
mov
scas
leave
nop
mov
mov
pop
and
mov
sub
fnsave
mov
mov
and
or
call
inc
mov
pop
xlat
mov
dec
loopne
outsl
je
push
shll
mov
sti
xchg
out
rcrl
xor
lret
aam
int3
inc
mov
out
sub
and
xchg
mov
ret
push
clc
pop
loop
mov
sbb
mov
js
andb
js
dec
inc
pusha
cmp
dec
movsb
loopne
cmpsl
ret
jne
push
mov
sub
pop
dec
sti
aad
les
lds
jnp
ss
xlat
fmull
mov
mov
stos
and
cmp
aam
rolb
and
into
pop
sahf
pextrw
pop
sbb
mov
sbb
and
cmovg
aad
stos
fdivl
pop
push
int
push
int
and
xor
frstor
mov
or
addr16
je
pusha
mov
mov
mov
fistl
xor
cmp
ret
out
jne
cmp
sbb
and
rcrl
popa
iret
aam
loopne
adc
sub
rcl
mov
dec
das
mov
inc
pop
jle
xchg
cmp
push
nop
pushl
outsb
lcall
cmpsl
jp
or
jns
adc
gs
aam
xchg
xchg
bound
gs
adc
or
mov
push
stos
cmp
ret
shlb
stos
and
pop
sbb
mov
jnp
xchg
insl
mov
adc
int3
test
mov
jnp
sub
lret
loop
mov
xchg
stos
mov
fs
mov
addb
add
adc
xchg
xlat
mov
xor
jne
cltd
les
popa
shr
pop
and
mov
push
mov
enter
iret
adc
dec
mov
or
faddp
arpl
push
xchg
mov
hlt
enter
insb
in
lret
inc
ljmp
sub
out
sub
clc
jge
lods
bound
stc
lds
bswap
or
xchg
and
cmp
jmp
aas
lock
loopne
dec
lahf
clc
leave
shlb
xor
out
xor
jge
pop
arpl
stc
add
sbb
test
ljmp
adc
shlb
dec
dec
loopne
stc
fistpl
aaa
inc
fldcw
aam
stos
xchg
js
jne
icebp
cmp
clc
inc
mov
loope
mov
rorb
nop
nop
jecxz
shrl
jp
xchg
or
daa
pop
push
cmp
repnz
loopne
ret
mov
jns
pop
adc
dec
sbb
inc
test
add
pop
jno
push
push
adc
jp
in
xchg
daa
rol
xchg
dec
xchg
mov
nop
aam
inc
or
ret
inc
cmp
cmp
xorb
std
imul
lock
cmp
clc
inc
push
xlat
xor
rolb
xor
xlat
loop
loope
or
stos
inc
inc
lods
and
imul
fists
push
add
cmpsb
cmc
stos
cmp
or
jno
xchg
adc
push
pushf
jnp
fs
jg
push
xchg
mov
test
jl
jecxz
sbb
dec
adc
lret
sub
out
in
repnz
xor
stos
push
mov
cmp
popa
insb
stos
js
aas
fwait
mov
cmpsl
data16
jp
leave
enter
movsl
xchg
mov
cmp
mov
add
pop
sti
mov
push
fiaddl
bound
add
xchg
xor
fisttpll
xchg
push
xor
out
mov
mov
dec
mov
ss
sbb
stc
fldl
mulb
test
dec
sbb
pushf
cmpsb
inc
mov
out
call
fisttpll
out
test
aas
les
lret
lds
jle
xchg
dec
mov
and
mov
push
lcall
mov
aaa
ja
mov
jo
mov
rcr
lods
mov
call
and
movsb
add
and
jb
jns
pop
fnstsw
insl
xchg
lea
push
out
xchg
mov
push
les
mov
sbb
add
cmp
inc
mov
cmpsl
pop
push
jl
ret
mov
fwait
sbb
out
cmp
lods
jle
fildll
cmpxchg
loop
fisubrs
test
mov
cmp
pop
dec
jp
es
rep
sub
xchg
mov
dec
inc
out
movsl
rcrl
dec
lods
mov
mov
sbb
insl
leave
lods
test
inc
mov
jle
push
lea
cmp
xlat
mov
xor
or
sbb
sarl
out
fldt
int3
clc
in
lods
pop
icebp
rorl
inc
mov
jae
pushl
dec
loopne
xlat
ss
rcll
push
add
push
pop
pusha
pop
dec
push
or
xchg
lock
push
sarb
mov
push
jmp
arpl
mov
aad
aas
dec
xchg
cmpsb
fnstsw
push
adc
push
leave
adcl
jg
ss
mov
arpl
inc
icebp
scas
scas
int3
aas
daa
mov
sar
adc
bound
sbb
in
dec
add
iret
hlt
jge
cwtl
loope
sub
lds
mov
sahf
sbb
jg
inc
adc
mov
data16
adc
mov
dec
cmp
lahf
enter
lret
test
or
jl
mov
mov
jp
mov
psadbw
popf
lret
xor
js
xor
and
adc
fisubrl
sahf
cli
adc
push
sub
push
mov
cld
mov
enter
std
ficoml
or
jb,pn
movsb
mov
les
sbbl
iret
mov
es
das
add
sub
cmpl
mov
icebp
fmul
test
push
inc
xchg
xchg
rcl
sub
pop
push
pop
pop
pop
mov
loopne
aas
mov
inc
in
fistps
push
or
push
xor
inc
push
dec
fdivs
insl
mov
sbb
add
aam
gs
xchg
iret
stos
cltd
xor
xchg
mov
sbbl
mov
cmp
enter
or
cmpsb
pop
arpl
fucomp
imul
clc
and
insb
lds
setnp
test
mov
test
int3
addb
mov
hlt
pop
sbb
xchg
inc
xchg
adc
or
testl
sbb
and
notl
call
mov
das
xor
int
addr16
in
imul
mov
arpl
sbb
lret
dec
push
ret
ljmp
rclb
sarl
sub
cmp
jo
frstor
js
jae
push
add
insl
cmp
in
lret
jns
push
std
les
inc
push
pop
mov
lds
sub
xor
xchg
shrb
cltd
testl
sbb
rolb
testl
pusha
icebp
idivb
lahf
adc
cmp
lods
loopne
jecxz
cltd
adc
stos
rcrb
mov
adc
cld
icebp
cmpsl
push
push
mov
cltd
xor
icebp
push
cmp
pop
lods
in
int
sub
add
push
sub
mov
sub
cmp
in
mov
incl
andl
rep
ds
xor
rorl
cmpsl
fisubl
int3
xchg
mov
and
shl
mov
cld
lods
add
and
fmull
mov
ss
inc
mov
xchg
aaa
repnz
push
test
cld
std
cs
test
and
adc
in
xchg
cld
js
jo
add
out
test
dec
cmpb
jp
mov
mov
ja
mov
fnstenv
dec
pop
or
out
int3
sub
stc
sub
mov
pop
mov
dec
stos
and
xchg
inc
or
and
imul
incb
aad
mov
popa
iret
in
data16
nop
dec
inc
leave
mov
inc
or
and
lret
mov
scas
mov
js
xchg
mov
scas
jge
xor
cmpb
pop
sbb
mov
push
pusha
fidivrs
lret
pop
lock
mov
adc
and
jmp
push
sub
cli
test
xor
nopl
arpl
sbb
and
mov
mov
xlat
mov
cli
movsb
sbb
inc
movsl
add
scas
scas
adc
out
xchg
call
ret
push
icebp
out
outsb
and
pop
pop
inc
inc
cmp
mov
lds
repnz
in
movsb
mov
cmp
xchg
das
notl
movsl
xor
ja
mov
in
and
addr16
dec
mov
and
mov
inc
mov
jecxz
push
lret
dec
and
push
mov
in
aad
add
pushf
xchg
adc
inc
ds
cmp
stos
movsb
sbb
sbb
ret
pop
and
jg
out
dec
dec
and
and
movsl
lods
xchg
test
push
pop
push
inc
and
cmpsl
dec
es
jg
mov
mov
push
adc
add
jmp
rol
cltd
rol
pop
xorb
xor
sbb
inc
lods
pusha
or
xchg
jecxz
nop
mov
sub
repnz
int3
test
sbb
ret
mov
add
pop
popf
pop
dec
mov
inc
popa
idivb
stos
mov
inc
xor
jge
xor
pushf
jl
sub
dec
sbb
adc
popl
repz
xchg
push
aam
sub
dec
jle
fnsave
pop
hlt
or
push
or
daa
bndstx
pushf
mov
dec
xchg
xchg
xor
clc
jbe
movsl
es
push
push
aam
arpl
lret
pop
adc
rorl
sti
lods
cld
fdivrs
dec
jl
lcall
jo
test
rclb
shlb
mov
iret
xorl
or
cltd
inc
ss
out
xor
ficoml
push
aaa
popa
xchg
mov
lahf
subl
mov
lea
test
mov
dec
sbb
repnz
hlt
fnstcw
mov
aaa
and
std
push
jl
cltd
mov
or
sbb
aam
mov
cltd
inc
inc
xor
stos
jge
sub
xchg
jo
jns
adc
dec
repnz
and
mov
movsl
adc
test
xlat
imul
inc
sub
sub
out
shlb
mov
jmp
jmp
mov
xor
xor
or
in
cli
test
mov
dec
xor
andl
push
pop
xor
pushf
addb
push
jne
sahf
xchg
aas
add
sbb
mov
and
dec
sub
fwait
inc
mov
fisttpll
sahf
fsubrs
adc
xchg
jg
xchg
jecxz
pushf
stos
or
sub
mov
fmull
nop
sub
mov
ss
sub
cld
xor
xchg
xchg
add
sub
jecxz
mov
addr16
pushf
mov
fcmovbe
push
push
scas
xchg
hlt
out
xchg
add
pop
in
or
ljmp
rorl
and
lds
push
dec
pop
fisubs
push
fcomip
mov
jb
sbb
xor
mov
xchg
outsl
addb
int3
into
imul
out
loop
or
and
idivl
add
stos
int3
and
mov
mov
dec
xchg
into
sbb
push
cmp
insl
js
mov
stos
fwait
js
xchg
cmp
insb
das
movsb
lcall
dec
add
inc
cs
shl
adc
out
insl
pop
ss
divb
mov
xrelease
cmp
or
sti
call
stc
call
and
jne
inc
in
out
jnp
aam
xor
jg
pop
adc
lock
arpl
inc
test
inc
loopne
negb
dec
cmp
fldcw
pop
push
insb
and
fistpl
and
push
and
mov
test
je
cmp
fisubs
negl
lea
mov
mov
sahf
pop
outsb
mov
jne
fmul
jecxz
inc
data16
movsl
jg
push
mov
rorl
add
cmp
fadds
out
enter
mov
inc
jmp
flds
pop
test
ds
int
jnp
xlat
outsb
push
inc
cmp
fbld
insb
mov
fisttps
mov
dec
push
or
mov
cli
imulb
movhps
mov
adc
xchg
push
inc
sbb
pop
dec
sub
adc
loop
popa
xchg
add
cmp
sub
pop
jp
xchg
mov
pusha
push
fisubl
adc
mov
mov
sahf
lcall
cltd
stos
jns
adc
jmp
es
scas
scas
clc
mov
inc
outsl
jno
xor
adcb
pop
xchg
rcpps
nop
dec
sub
and
push
jmp
adcb
or
pusha
or
into
jmp
clc
push
aad
pop
dec
loop
push
lock
sub
fcoml
xor
mov
pop
rclb
or
enter
xlat
dec
xchg
lock
movsl
lcall
jae
js
mov
loope
not
dec
cs
xchg
mov
aaa
or
push
ds
inc
pop
adc
xor
and
inc
insl
sbb
dec
negl
je
jae
nop
push
mov
imul
shl
les
std
shrb
lahf
cltd
xor
mov
mov
mov
jb
push
push
fsubrs
scas
clc
dec
jne
lods
jg
push
and
stos
cmpsl
fcoms
pop
dec
in
cmp
adc
scas
aam
loop
mov
xchg
mov
stc
pushl
leave
cli
aas
cld
push
push
mov
sbb
add
lahf
or
adc
shl
dec
subl
xchg
push
jle
nop
pop
movsb
dec
and
xchg
inc
std
dec
into
mov
push
lds
jecxz
stos
xchg
sub
pop
push
cmpsb
cmpsl
orb
inc
pop
lret
stos
push
loopne
aas
sub
fldl
add
sarb
xchg
mov
sub
cmp
into
shll
int
lahf
or
adc
sbb
js
sbb
aas
fistl
sub
pop
push
std
mov
or
mov
sbb
aad
ret
ja
mov
sahf
loop
popf
cltd
imul
cmc
add
adc
sub
insb
jl
adc
dec
aad
xor
jb
das
mov
mov
or
mov
mov
loope
xlat
sbb
sahf
call
and
adc
lret
push
int
jne
xor
cwtl
repz
mov
sub
and
jne
push
icebp
repnz
mov
add
ret
xorl
jnp
sarl
sbb
addr16
push
sub
add
cmc
mov
mov
mov
pop
adc
inc
repz
jl
ret
ret
and
mov
pop
adc
cmpsb
or
ret
call
aas
sbb
mov
pop
jp
in
addl
loop
inc
lahf
mov
cmpsl
mov
mov
aam
arpl
into
add
ret
sti
dec
cmp
int
sub
ljmp
add
jno
xlat
js
cmc
add
xchg
shlb
test
jne
cmp
mov
popf
xor
lds
xchg
fwait
inc
mov
pop
mov
xchg
dec
dec
je
adc
in
subb
and
dec
inc
nop
mov
mov
inc
fisttps
jns
inc
adc
push
aaa
cld
nop
out
mov
icebp
xor
js
addr16
cltd
sti
rclb
sbb
icebp
std
push
in
lar
pop
icebp
ss
mov
icebp
cmpsb
dec
sbb
adc
les
pop
lock
or
filds
les
movsl
sub
cmp
adc
aas
dec
adc
dec
aaa
ret
jp
push
xchg
insl
ja
and
mov
dec
std
repnz
add
xor
cmp
sub
fwait
clc
imul
jmp
shlb
sub
je
push
inc
add
push
xchg
dec
ljmp
cli
mov
cmpsb
pop
enterw
pop
sub
xchg
jmp
fwait
sub
adc
push
rcrl
lock
lret
andl
aam
jmp
aaa
test
adcl
pop
lcall
and
test
lret
pusha
sbb
and
leave
std
jmp
call
aad
adc
fisubl
pop
out
shlb
push
popa
xlat
mov
lret
iret
inc
sub
inc
mov
jo
add
aas
sbb
out
cs
mov
mov
sub
push
xchg
fnsave
adc
xchg
adc
dec
cmp
fsub
mov
push
cmpsl
sub
loope
fyl2xp1
dec
ret
mov
insl
inc
or
jmp
stos
in
dec
roll
pop
cmc
push
sbbb
lcall
popf
pusha
stos
ja
test
dec
xorb
sub
mov
adc
mov
inc
mov
ljmp
jmp
lret
sti
es
test
movsl
lods
out
lea
fwait
mov
arpl
sub
loope
inc
xchg
loope
sub
testb
outsb
inc
test
push
pop
sub
mov
mov
hlt
adc
stos
mov
cli
lea
pop
xor
jno
mov
inc
inc
je
adc
mov
iret
pop
cmp
mov
stos
push
imul
xchg
aas
jnp
xor
shlb
inc
aas
add
mov
xchg
lock
add
idivb
movaps
mov
loopne
lea
jb
cli
lahf
lods
filds
or
rorl
sbb
pop
mov
stos
subb
xchg
mov
cmp
cmc
dec
add
pop
sbb
xchg
jp
shr
mov
test
dec
jge
cmp
cmp
jecxz
or
loop
push
rcr
push
fsubrp
or
jo
mov
or
aas
mov
jl
sbb
add
daa
and
in
fs
das
push
addb
mov
adc
gs
cwtl
loopne
push
mov
lods
or
mov
push
pop
sti
add
outsl
inc
add
aad
ja
in
scas
add
icebp
add
adc
sahf
and
dec
inc
sbb
dec
notl
add
out
lock
repz
pop
xchg
mov
mov
xchg
ss
push
fadds
cs
subb
shlb
pop
sbb
jp
pop
addb
cmp
and
ja
inc
xchg
ror
lods
and
dec
mov
push
lahf
pop
fs
nop
lock
insl
movsl
lods
rorb
lret
movsb
pop
xor
push
test
aas
pop
dec
xor
adc
cmp
xor
mov
lods
inc
movsl
icebp
pop
sbb
mov
dec
in
cli
fidivrs
jnp
mov
dec
cmp
push
pop
pusha
cwtl
xor
cmp
popa
repz
jecxz
jno
cmp
ret
pop
std
imul
dec
cltd
inc
ds
push
ret
lahf
in
je
fidivl
int
push
or
inc
rcrl
in
sub
jns
sbb
rcrb
jl
daa
dec
push
xor
cmp
movsb
rcrl
push
adc
and
arpl
mov
les
std
rcrb
adc
xchg
jp
js
test
fisubl
mov
xchg
pop
fwait
fmul
fyl2xp1
xor
or
or
into
in
pushf
mov
mov
in
data16
lock
jmp
nop
stos
pop
mov
inc
dec
aad
dec
xchg
dec
es
clc
in
ljmp
or
lods
into
push
orl
ds
loope
mov
xchg
mov
data16
and
lods
sbb
lods
mov
aad
rclb
je
and
inc
jbe
push
sub
mov
dec
adc
sub
testl
xlat
and
popa
mov
pop
mov
cmp
sbb
dec
imul
dec
sub
sbb
jb
add
iret
ror
js
out
push
loop
arpl
stos
or
mov
jnp
push
stos
in
sub
mov
lds
mov
dec
dec
arpl
rcll
je
or
mov
and
add
inc
pop
nop
mov
scas
mov
arpl
in
pop
fstpl
pop
lea
nop
stos
fmull
dec
jns
cmc
out
dec
mov
cli
fcomi
andl
mov
adc
cmpsl
sbb
mov
enter
cmpsb
push
les
xor
aaa
inc
mov
push
dec
pop
dec
push
push
fbstp
out
imul
xor
or
xor
paddusw
mov
cmpsl
ss
test
ret
rorl
sub
flds
popl
lock
movsl
rclb
cltd
add
dec
daa
and
xchg
insl
fst
xlat
cmp
push
mov
xor
sub
pop
je
mov
out
jnp
scas
cmpsl
mov
lret
mov
arpl
dec
lea
push
aam
stos
sub
sti
mov
cmp
and
inc
test
jmp
cmpsl
outsb
ja
in
add
or
xor
das
dec
insl
lods
mov
cmp
mov
imul
add
cs
notl
sahf
cmc
arpl
mov
das
adc
xchg
stos
sub
or
fisttps
fildl
push
inc
imul
or
lds
cmc
pop
xor
out
icebp
xchg
in
lcall
pop
push
jl
cmp
xchg
dec
dec
pop
inc
pushl
test
aaa
stos
push
or
xchg
daa
adc
and
mov
inc
sbb
fstl
das
pop
lret
mov
jecxz
xor
adc
jge
in
cmp
ja
cmp
mov
mov
mov
sub
out
cmpsb
or
ror
sub
outsl
roll
loop
inc
or
inc
sbb
iret
call
pop
xor
lret
aaa
sub
jb
add
jge
scas
dec
std
cli
adc
add
mov
dec
leave
cs
jge
lcall
repz
mov
xor
mov
sti
aas
add
bound
shlb
mov
out
orb
xchg
ss
fsubrp
aam
xchg
mov
mov
out
nop
out
dec
arpl
push
aam
jg
mov
jnp
jb
jb
pop
jle
xor
cmp
pop
scas
pushf
mov
movsb
daa
mov
lret
mov
adc
lcall
iret
cmp
addr16
loop
in
xor
push
mov
sbb
xor
pop
mov
lcall
shrb
in
xchg
fldcw
clc
pop
shll
jno
add
icebp
pushl
add
in
hlt
clc
in
loope
add
outsl
pop
popf
lods
xchg
xor
fs
rclb
sbb
popf
xor
mov
lcall
and
test
loopne
push
ret
scas
mov
adc
fdivl
jno
sbb
cmpsb
xor
push
jb
push
add
sti
push
xor
gs
jecxz
dec
mov
aad
pop
xchg
popf
mov
clc
push
ret
add
je
out
lcall
xor
push
add
push
addb
ljmp
ret
adc
xor
sbb
push
std
dec
andb
mov
and
mov
xor
cmpl
cmpb
divb
cmp
and
sbb
mov
push
pop
fistpll
pop
cld
scas
xchg
mov
inc
aad
in
jmp
mov
add
std
je
aas
xor
cmp
mov
lods
into
iret
push
pop
or
sbb
cmp
daa
add
ret
pop
sbb
imull
iret
mov
lcall
pop
push
nop
test
mov
sub
int
cld
imul
adc
cmpsl
and
push
or
mov
mov
lcall
push
jae
xchg
mov
add
dec
hlt
push
cmp
shl
push
xchg
ret
pop
inc
mov
into
ret
mov
cmpl
jne
jg
outsb
or
fsubs
pop
cmp
div
push
out
inc
rcrl
movsl
int
pop
pop
ss
stos
cmp
jns
inc
dec
js
hlt
pusha
iret
and
mov
leave
sub
pop
mov
mov
out
addr16
clc
fnstcw
mov
mov
ret
inc
aad
out
movsb
add
fildll
inc
push
je
cmp
mov
icebp
xchg
lea
ljmp
and
push
fimuls
sbb
cli
test
push
and
cli
pop
hlt
jnp
cmp
pop
into
stos
inc
dec
test
dec
cmp
pop
xchg
mov
clc
negb
shlb
sub
pop
mov
outsl
cmp
sub
dec
rclb
out
popf
lahf
mov
xchg
call
in
faddl
loop
push
lcall
sub
call
and
fcoms
shl
dec
mov
jge
jp
bound
imul
shlb
mov
dec
pop
sbb
pop
aam
pop
xchg
ficoms
and
insb
adc
insb
rcl
rcrb
lea
jb
jge
pop
outsb
cltd
xlat
scas
cmp
pop
add
dec
imul
insl
pop
add
bswap
inc
and
xor
xchg
push
bswap
xchg
lock
aas
fistpll
js
in
dec
inc
movsb
repz
mov
rorb
call
sub
inc
add
daa
xor
pop
add
mov
jo
mov
sbb
into
xchg
inc
cmp
or
adc
pop
je
int3
dec
mov
lods
fsubrs
mov
std
push
test
mov
xchg
outsb
stos
mov
in
sub
xchg
lods
xlat
testl
mov
cmp
sbb
sub
cmp
pop
jg
xor
orl
ljmp
pop
cmc
cwtl
mov
fsubr
push
mov
aaa
xchg
mov
js
pusha
inc
and
dec
adc
and
or
stos
push
push
test
fstl
pop
fwait
pop
popl
mov
sub
test
push
ret
and
or
mov
pushf
hlt
sub
xchg
xor
sub
inc
or
lcall
pop
iret
repnz
pop
mov
insb
or
cld
mov
add
loope
out
sbb
je
xchg
mov
inc
ljmp
jb
popa
dec
test
repz
or
cmp
data16
mov
cwtl
sarl
lret
insb
jle
aad
adc
sar
sub
add
jne
or
xchg
jne
sbb
sbb
mov
push
pop
add
scas
or
lret
xorb
es
pop
add
sti
push
pop
rcl
or
mov
scas
adc
mov
mov
sub
js
movl
mov
mov
and
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
jmp
sub
addr16
jnp
jne
jne
negl
cmpsb
jns
push
pop
jp
mov
push
xchg
shrb
xchg
fldenv
jmp
and
outsb
jnp
xchg
cltd
and
scas
or
and
sahf
inc
sbb
dec
sub
mov
mov
cmp
in
pop
sbb
inc
test
mov
cmp
xchg
push
xor
loopne
push
cmc
inc
and
jns
mov
jo
cmp
mov
lods
jp
into
xchg
inc
imul
dec
dec
push
pop
sahf
and
add
cli
sbb
mov
mov
shrb
dec
pop
lea
es
inc
adc
add
popf
in
xchg
aad
mov
push
lea
xor
ljmp
in
shll
and
in
outsb
hlt
jne
xchg
or
stos
or
std
sub
je
push
shrb
sbb
leave
pop
xchg
leave
lods
inc
ret
xchg
out
fdivl
stc
rcrl
jle
aad
outsb
cmp
jns
adc
add
in
dec
fistpl
inc
add
cltd
push
out
cli
jle
bound
subb
stos
add
inc
sbb
sbb
xchg
cmp
or
repnz
dec
int3
rcll
mov
add
rol
sbb
xor
inc
push
ret
jge
cmc
rorb
sbb
inc
aad
mov
mov
pop
or
ret
imul
cld
loope,pt
dec
dec
inc
xchg
out
sahf
adc
push
cmp
scas
das
sbb
sub
pushf
push
rcrl
and
pop
sub
push
xchg
mov
mov
outsb
stos
das
lods
sbb
pop
outsl
or
sbb
push
mov
push
push
jae
sub
xchg
pop
fistl
push
adc
mov
pop
or
sti
push
pop
jmp
cmp
and
repz
out
test
in
outsl
add
loopne
fadds
rcrb
sbb
icebp
mov
js
gs
xorl
fdivrs
add
push
pop
xlat
ret
pop
push
jnp
pop
negl
mov
pop
repnz
adc
fdivrp
push
push
jne
gs
out
cmpl
xchg
fidivl
push
adc
xchg
sbb
adc
or
pop
repz
cmp
aam
sbb
push
rclb
leave
scas
push
int3
orl
rol
or
dec
jle
data16
jecxz
and
push
loopne
gs
xor
xchg
add
push
xchg
lret
sarb
shrl
ljmp
jmp
pop
xor
mov
or
inc
cli
sarl
cmpsl
les
js
jns
mov
div
inc
inc
xchg
mov
mov
roll
test
mov
inc
std
adc
enter
xorb
int3
pop
mov
hlt
cmpb
lahf
scas
mov
ja
pop
xor
mov
movsb
or
mov
push
cmp
xchg
cli
jge
sbb
iret
adc
cmp
xchg
mov
sub
and
add
xchg
jnp
fimull
xchg
aaa
fcmovnbe
dec
je,pn
dec
fcomps
dec
cmp
jb
mov
int3
mov
push
mov
push
sub
pop
jbe
or
add
or
jecxz
test
cmp
aaa
fsubl
and
stc
dec
jmp
or
pop
imul
cmp
ret
xchg
cmp
loope
push
xor
iret
xor
rcrb
fwait
adc
leave
roll
fstps
inc
xor
sbb
xor
push
push
fwait
inc
xor
mov
fwait
jns
shrl
and
test
jecxz
push
test
push
fidivs
adc
dec
sub
cmp
std
rcl
jns
lahf
stos
je
jge
into
push
mov
inc
dec
movsb
call
nop
call
cmp
cmp
xchg
in
xchg
pop
pop
outsl
sub
and
jne
adc
and
sbb
lahf
das
lahf
mov
add
int
mov
add
jne
in
cmp
sub
pop
andl
dec
scas
ret
ss
cmp
mov
test
and
shr
xor
mov
ja
in
push
xchg
add
xchg
rcll
insb
jne
xchg
pusha
push
mov
mov
dec
hlt
fists
movsl
pusha
cmpl
in
scas
inc
inc
in
in
or
insl
and
adc
mov
jnp
mov
fwait
outsl
mov
aam
cmpsb
scas
addr16
rcrl
in
push
in
mov
sub
negl
lret
jne
ficoml
mov
nop
sub
out
cmp
stos
call
sarl
add
arpl
push
xor
mov
es
xchg
xchg
gs
pop
mov
inc
add
lret
mov
or
in
int3
push
push
arpl
and
sub
in
sub
pusha
sub
ficompl
cmpsb
pop
fcomps
xchg
leave
xchg
jb
inc
jno
jl
mov
push
xchg
stc
arpl
jecxz
hlt
pop
idivb
cmp
pop
fisttpll
inc
ljmp
jne
mov
xchg
inc
ret
popf
mov
push
les
adc
pop
push
and
gs
sub
push
addr16
andb
les
popf
push
add
sub
test
pop
leave
jbe
jp
add
xor
xchg
add
loop
fdivrl
inc
into
ret
nop
push
leave
mov
ret
sub
scas
adc
or
movsb
push
daa
adc
dec
mov
adcl
xor
fs
dec
data16
push
es
scas
push
lock
arpl
divw
pop
imul
jmp
ss
push
cmc
or
scas
rclb
mov
aad
lea
jo
pop
sub
add
adc
jmp
arpl
adc
jns
mov
xchg
pop
notb
aaa
and
pop
neg
cmpsl
addr16
or
stos
cmp
fdiv
xlat
enter
xchg
xchg
scas
sub
lea
and
scas
je
xchg
adc
adc
pushf
jo
cmpsb
orl
addr16
movsb
lods
rolb
aam
and
xchg
mov
fcompl
add
in
jno
out
out
rcrl
sbb
dec
jne
and
insl
push
sbb
je
lcall
jmp
mov
in
rclb
sbb
xor
jnp
imul
insb
notb
iret
pop
nop
je
mov
adc
pop
aad
cmp
sarl
jecxz
lahf
or
fs
shlb
sbb
add
add
inc
add
jae
ret
aaa
aam
ret
and
rcrl
xor
jl
ret
test
inc
sbb
and
xor
adc
iret
adc
cmp
cmc
push
enter
sbb
push
insl
cli
test
rolb
or
cmpxchg
sub
stc
mov
sub
lahf
push
icebp
loop
mov
into
daa
pop
dec
mov
call
jecxz
in
fidivs
popa
lods
mov
in
pop
lock
gs
xchg
cwtl
sub
sbb
jae
out
fstpt
push
out
jp
in
lea
int3
arpl
jge
cmp
ljmp
enter
jae
fs
cmpsb
cmp
iret
xor
dec
sbb
or
jae
aam
call
lds
jno
mov
mov
jne
sahf
jle
mulb
out
int3
mov
addr16
add
sti
mov
mov
mov
lods
idivb
xchg
es
or
xor
xchg
lods
cmp
xlat
insb
jecxz
das
dec
jmp
cmp
sbbb
aad
faddl
fcompl
mov
mov
and
fldl
mov
dec
pop
mov
push
sub
fsts
out
cwtl
into
shlb
dec
aad
stc
imul
cmp
dec
adc
cmp
in
add
les
int3
xor
daa
je
sahf
push
mov
inc
adc
in
cmpsb
arpl
inc
and
inc
inc
cmp
subb
lea
insl
gs
push
adc
jns
xchg
sar
iret
stos
fs
add
gs
icebp
push
fwait
jbe
mov
xchg
pop
push
scas
cmp
sbb
pop
push
mov
fisttpl
add
lahf
dec
outsl
mov
push
in
jne
fs
inc
into
sub
in
clc
push
jbe
push
mov
popa
pop
cmp
outsl
es
jae
jmp
sub
fsubrs
cmp
dec
out
xchg
pushf
and
mov
popa
xor
jg
or
lret
and
mov
bound
mov
sub
push
fmuls
mov
xchg
gs
fdivl
mov
mov
mov
fcomip
call
mov
mov
xor
jge
sub
or
mov
and
mov
daa
pop
and
jle
cli
dec
xchg
enter
push
cld
cmp
mov
dec
sbb
loopne
test
leave
outsb
lcall
push
loop
jp
ds
ss
int
stos
or
xchg
lods
enter
sbb
ds
in
fsubs
fiadds
lock
shlb
add
cmp
mov
test
scas
nop
gs
js
push
fsts
xchg
or
adc
or
lods
xchg
stos
add
pushl
push
jae
inc
and
xor
adc
pop
mov
imul
push
data16
jg
movsb
or
mov
in
mov
scas
and
jl
jo
sbb
adc
pop
add
in
adc
andb
rolb
lcall
out
loope
dec
inc
fwait
push
test
insb
adc
sub
iret
jne
out
cmc
loope
jp
dec
sbb
pop
pop
add
mov
jo
cltd
xchg
jae
repnz
lock
das
bound
xchg
inc
xor
stos
adc
ss
mov
mov
mov
test
gs
cmp
ffreep
xchg
add
cmp
call
mov
inc
cs
xchg
sahf
ret
sub
xor
pop
xchg
dec
sbb
addl
xchg
std
ss
dec
sub
push
lret
movsl
pop
and
mov
sub
or
faddl
icebp
jp
fcoml
das
int
fwait
cli
mov
mov
cmovne
pop
das
mov
jecxz
mov
mov
orl
aaa
sti
sub
add
loope
sarl
mov
and
adc
repz
insb
xchg
add
mov
in
addr16
rcr
sub
cmpl
mov
add
pushf
sti
outsb
mov
mov
or
adcb
mov
pushf
pushf
or
inc
xchg
repnz
xor
cmp
add
fprem
insl
ret
jecxz
sub
mov
mov
mov
or
or
sbb
daa
lods
rolb
sub
imul
cmp
sub
cmp
add
inc
xorl
push
shrb
ret
inc
ficompl
and
mov
scas
dec
push
cwtl
imul
inc
mov
in
cmp
xchg
sbb
lcall
add
mov
push
inc
sbb
mov
mov
mov
addr16
inc
dec
mov
pop
cmp
sub
xchg
jbe
lea
das
imul
hlt
clc
lods
nop
sub
inc
cwtl
pushf
nop
js
sahf
push
xchg
cmpsb
push
ret
push
movsb
jmp
or
sbb
sbb
dec
inc
fisubrs
and
repnz
testl
sti
jne
mov
sbb
stc
adc
lahf
loopne
loopne
hlt
sbb
xlat
sbb
pop
arpl
dec
jne
adc
hlt
test
jmp
lea
aam
inc
das
pushf
sub
fnstsw
popf
test
aad
daa
scas
xlat
pushf
rcr
ss
addr16
imul
push
test
mov
mov
cwtl
cmpsl
pop
push
in
add
add
mov
mov
sarb
in
insl
dec
es
push
dec
fsts
outsb
or
ret
jge
mov
std
mov
repz
sbb
adc
push
es
add
aam
push
cmp
fs
jg
movsl
pop
jae
sbb
or
cmp
leave
jae
push
push
in
pusha
xchg
imul
inc
fadds
outsb
adc
stc
shll
sbb
test
popa
stos
cmp
sbb
jno
adc
mov
rcrb
dec
and
pop
push
je
jp
hlt
ret
into
out
jbe
pop
in
xchg
sbb
bound
mov
sub
int3
adc
nop
cmp
je
fldl
les
test
roll
lcall
and
adc
jg
jge
push
xor
sbb
xchg
aaa
sub
cli
add
lcall
jnp
xlat
cld
sbb
icebp
mov
shlb
xlat
loope
enter
push
xchg
jnp
imul
imul
loop
push
push
jp
rcrl
test
jg
es
hlt
sub
jle
notb
repz
lods
and
push
out
loope
mov
test
push
inc
push
jnp
adc
stc
push
lret
lods
movb
arpl
repnz
pop
cli
jnp
inc
dec
pushf
scas
mov
fcompl
and
lods
pop
inc
fcmovu
in
jno
cmp
xor
cmpsb
ds
lds
aam
xor
pop
sbb
mov
out
into
pop
sahf
mov
test
ret
scas
mov
pop
sbb
dec
mov
mov
mov
in
test
mov
movb
fstps
ret
pop
sbb
dec
lcall
adc
sub
add
add
mov
leave
xchg
dec
fcomip
jp
sub
cmp
movsl
insl
mov
push
lcall
sub
mov
jbe
int3
mov
pop
daa
jmp
sub
mov
mov
inc
xor
and
sbb
mov
pop
cpuid
jae
les
adc
outsl
push
pop
and
pop
pop
pop
imul
out
mov
gs
sub
xchg
loop
cli
adc
loop
lods
lods
psubsw
into
jb
sbb
std
sub
lods
mov
out
rcr
push
pop
xchg
jns
jo
pop
fcmovbe
addb
movsl
pusha
cmpsb
sbb
jno
xchg
sbb
sti
inc
nop
xchg
pop
int3
repnz
cmp
insb
loopew
iret
xchg
lret
movsl
cmp
jp
aas
xchg
fisubs
sub
ficoms
xlat
rorl
lock
packssdw
mov
pushf
movsb
xchg
test
aad
sbb
aaa
jb
outsl
or
mov
inc
cmp
mov
sti
mov
sbb
sub
cmpsl
frstor
inc
jb
dec
stos
dec
mov
jg
mov
inc
test
sub
and
sbb
popl
dec
cs
dec
or
es
adc
cmpsb
out
inc
sub
cs
push
out
lahf
fiadds
push
inc
fists
mov
out
sub
mov
jnp
inc
sbb
mov
pop
psubsb
inc
int3
or
inc
bound
xchg
push
outsl
popf
push
inc
adc
lods
mov
cmp
and
je
bound
rcrb
xorb
mov
sbb
or
jp
arpl
xor
inc
lcall
stos
imul
adc
int3
ss
jne
data16
jb
inc
into
ja
sub
adc
jno
push
mov
movsb
xor
imul
cltd
cld
dec
ficoms
inc
sbb
jmp
mov
and
movsl
stos
push
dec
lahf
dec
fnstenv
hlt
daa
fidivrl
and
mov
cmp
mov
aam
jns
ficomps
inc
dec
and
and
inc
add
mov
in
movsb
sub
mov
aad
roll
mov
in
add
sahf
jmp
sbb
lods
imul
jle
movsl
lods
cmpsl
xor
lret
leave
sbb
add
xchg
dec
jbe
outsb
mov
cmp
out
push
cs
test
or
xchg
dec
sbb
sbb
xor
inc
push
mov
mov
cmpsl
lret
dec
and
sbb
and
push
push
shl
adc
xchg
iret
inc
sbb
cmp
imul
lods
cs
xchg
arpl
and
fdivs
xchg
cmpsb
jl
jge
pop
xchg
cmc
push
out
ret
sbb
mov
test
mov
lret
add
repz
arpl
jle
jge
push
xor
hlt
sbb
cld
ljmp
push
adc
icebp
push
pop
stc
xor
push
lea
cmp
out
cs
iret
mov
mov
lahf
cmp
sub
pusha
shll
out
mov
jns
arpl
orb
leave
or
enter
pop
push
cmp
push
enter
sbb
hlt
shl
je
sahf
mov
push
rolb
loop
sahf
xor
fwait
xor
xchg
mov
outsb
fsub
inc
adc
int3
ficompl
ret
pop
movsb
xor
xor
js
mov
mov
subl
and
rol
mov
daa
or
mov
sbb
xor
pop
push
aad
inc
mov
les
pop
xor
mov
and
fwait
lods
imul
hlt
mov
push
data16
xchg
mov
lret
xchg
mov
jnp
inc
and
icebp
das
pop
sti
dec
cmc
mov
inc
xor
cmpl
mov
add
push
pushl
and
leave
jno
int3
addb
in
js
js
jns
into
jb
sub
xor
mov
ds
fsubs
adc
and
add
movsb
sbb
outsl
inc
mov
enter
in
shlb
sbb
and
mov
subl
xchg
mov
fcoms
xor
pop
fdivl
and
clc
nop
in
mov
repz
push
je
and
fnstcw
push
faddp
mov
bound
push
cmp
lock
orl
insl
aad
inc
loop
data16
adc
scas
mov
push
movsl
inc
out
push
xchg
sbb
lretw
or
inc
push
movsl
sbb
fcomps
or
fadd
or
xchg
push
test
jecxz
and
cwtl
xchg
mov
mov
ret
ret
repnz
flds
mov
add
rol
adc
fmuls
ljmp
push
xchg
stos
mov
or
loope
adc
out
in
cmpsb
outsl
push
in
fistl
fnstsw
in
mov
or
sarb
jmp
out
out
lret
and
jg
imul
mov
or
inc
shrl
adc
fisubl
ficoml
out
xor
or
sbb
ret
adc
xor
mov
mov
iret
mov
push
popf
inc
popa
cmc
inc
adc
js
sbb
jmp
adc
fstpt
dec
out
push
or
xor
dec
cmp
dec
xchg
in
cld
shlb
jecxz
test
test
aas
sbb
jl
cwtl
pusha
mov
loopne
icebp
leave
scas
movsb
icebp
mov
jnp
mov
lea
jnp
cmp
xlat
insl
stc
jo
dec
stc
mov
push
sub
inc
cmp
mov
mov
mov
xchg
xchg
mov
push
xchg
inc
add
sub
pop
jo
sub
push
pop
and
jle
fsubr
xchg
pop
ds
dec
jle
and
or
test
int3
pop
ds
and
add
es
sahf
lds
xor
pop
je
into
xchg
fiadds
test
sub
cli
jnp
or
add
mov
iret
xor
sbb
mov
scas
push
sub
repz
popl
push
icebp
fldcw
xchg
cmp
roll
call
ljmp
sub
mov
dec
cmp
and
dec
sub
mov
gs
dec
push
call
das
movsb
xchg
add
dec
jb
sub
pop
dec
mov
inc
xchg
inc
or
fiadds
mov
or
push
or
stc
les
xor
xchg
cmpsl
outsl
or
repz
imul
adc
xlat
mov
lret
sbb
pop
cmp
addl
xchg
mov
and
lcall
push
test
sbb
inc
daa
cmc
push
push
hlt
fs
test
out
xlat
cmc
xor
in
fldenv
movsb
sub
ret
adc
sti
pop
xor
jno
or
push
lret
shl
dec
mov
imul
roll
aad
pop
xchg
sarl
and
cltd
and
lods
fadds
hlt
xor
or
in
lcall
scas
loop
xchg
cwtd
mov
jge
bound
or
in
add
mov
mov
stos
daa
xor
mov
xchg
lea
sub
ljmp
cmpsb
pusha
nop
adc
gs
stos
xchg
dec
add
mov
js
sub
push
xor
out
jmp
xor
loopne
pusha
xor
nop
push
out
dec
adc
jecxz
xor
sti
jnp
and
notl
notl
push
xor
add
sti
mov
adc
mov
aad
icebp
push
in
mov
jb
fnstcw
mov
icebp
out
add
and
cmp
imull
sbb
movsl
cmp
sub
shll
rcrb
and
loop
aam
insb
outsb
pushl
xchg
or
mov
sbb
les
ljmp
repnz
or
dec
cmpsb
push
lcall
push
sti
inc
push
test
add
jno
sbb
pop
mov
mov
test
mov
and
cltd
add
push
cmp
cmc
dec
and
inc
scas
xchg
dec
mov
test
pop
in
xchg
dec
and
imul
fs
jge
nop
pop
pop
test
adc
insb
jns
shll
in
push
jecxz
test
fsub
push
subl
mov
enter
inc
xchg
mov
adc
jp
xchg
mov
mov
jo
push
dec
pushf
sbb
and
clc
mov
aas
inc
pop
sbb
mov
pop
insb
push
mov
andl
scas
dec
push
xchg
fisttpll
mov
inc
mov
lret
xchg
cwtl
sahf
je
ds
fmull
ja
addr16
mov
lods
jb
push
test
xchg
push
xchg
cmpsl
xchg
loope
and
faddp
scas
lods
mov
lret
xchg
sbb
sub
mov
rolb
js
mov
push
je
fistpll
ret
arpl
faddl
mov
jmp
hlt
sub
arpl
loop
movsl
lock
inc
mov
add
and
out
orl
in
cmp
ss
lcall
jg
movsl
rcrl
sti
push
mov
pushf
outsb
fisubl
in
icebp
daa
testl
or
shrb
inc
mov
flds
push
dec
mov
jecxz
imul
or
sub
call
pop
sahf
jne
mov
loope
mov
jne
movsl
rolb
inc
add
xor
inc
mov
push
sbbl
cmp
test
mov
xor
dec
fnstenv
rcl
inc
add
movsb
sbb
or
in
xchg
or
add
pop
sbb
push
aad
int3
stos
pop
xchg
cmp
fdivs
jp
sarl
or
or
xor
sbb
add
inc
cld
xlat
test
dec
mov
push
and
std
fs
xor
fwait
clc
add
nop
cmp
lods
daa
test
mov
mov
mov
testb
aaa
dec
sub
pop
cltd
push
imul
jo
outsl
mov
mov
sti
sbb
mov
jns
call
or
add
int
scas
mov
adc
inc
dec
lods
jbe
lods
jle
scas
outsl
cmpsl
sahf
lea
mov
mov
dec
adc
fdivl
and
mov
mov
add
mov
retw
std
xchg
test
adc
loope
and
sub
jne
enter
cmp
sarb
inc
aaa
out
idiv
xchg
jg
inc
stos
lods
in
xor
and
cwtl
mov
jl
fnsave
scas
push
mov
sbb
pop
jbe
iret
jb
mull
adc
xchg
mov
mov
mov
sbb
lcall
sub
fyl2x
dec
mov
or
punpckhdq
ret
lods
mov
shll
sub
adc
andb
jbe
mov
dec
sbb
sub
pop
jne
in
push
cwtl
in
test
cmpsl
add
mov
jno
or
leave
enter
add
popa
xor
push
fisttpl
adc
push
popf
iret
rolb
mov
lods
or
jns
ret
adc
pop
add
cmc
push
cwtl
test
or
arpl
push
xor
mov
ret
daa
push
test
add
in
jp
mov
daa
cwtl
inc
out
add
rclb
adc
push
sbb
cmp
jo
cmpsb
cmp
lds
mov
adcb
mov
addb
cmp
adc
mov
cmp
pop
stos
repz
xchg
and
or
or
pop
stc
push
ret
popf
sbb
in
imul
add
ret
dec
in
mov
das
aas
jle
in
enter
repnz
and
shll
adc
repz
mov
push
or
out
sbb
mov
mov
sbb
sub
or
or
xlat
dec
cmp
sbb
fcmovbe
out
pop
dec
mov
xor
lret
jno
jae
inc
add
into
xchg
ljmp
jb
jns
sbb
les
sbb
repnz
adc
outsb
xchg
es
sbb
push
push
popf
adc
movsl
fistps
jno
jmp
and
xor
and
ss
test
mov
push
xor
mov
pop
loope
in
and
pop
mov
jge,pt
sub
repz
xor
xchg
ret
jg
mov
jbe
inc
push
adc
es
pop
lea
mov
cwtl
test
lods
ret
or
iret
sub
les
mov
sub
inc
xor
iret
js
inc
mov
icebp
mov
push
in
in
xchg
or
cld
fwait
cmp
inc
imul
aas
adc
lods
in
pop
sub
cltd
and
frstor
jae
in
pop
sub
jle
cmp
adc
push
add
aas
dec
pop
imul
std
aas
leave
test
rorb
jno
mov
add
sub
pushl
xchg
xchg
inc
cmpsb
or
jecxz
mov
xchg
in
adc
outsb
cmc
mov
je
js
loope
xor
hlt
adc
add
bound
jmp
cmc
adcl
repnz
or
sbb
scas
mov
sarb
pop
mov
stc
mov
fcmovbe
adc
xor
mov
shlb
pop
sub
pop
rcr
pop
arpl
stc
out
imul
aaa
mov
inc
inc
rclb
sub
leave
stos
std
push
fdivrl
sub
fcomi
cmp
mov
icebp
push
push
sti
and
inc
cltd
stos
sti
pop
fwait
daa
dec
or
aas
push
adc
mov
pop
and
xchg
icebp
push
inc
int
push
and
icebp
jne
pop
in
pop
iret
add
and
lea
jmp
cwtl
enter
les
divb
fistpl
push
sbb
sub
mov
push
sub
shll
xlat
mov
in
dec
or
test
lret
cmpsb
ds
inc
gs
or
cld
jle
mov
bound
test
dec
xor
cmp
or
popl
pop
xor
jmp
push
push
and
push
jne
jbe
gs
or
in
add
pop
insb
into
fwait
daa
outsb
icebp
xor
mov
fisubl
or
js
lods
je
or
movsb
shrb
out
cmp
dec
sarl
leave
cmp
shrb
xor
mov
mov
mov
cmp
ficomps
pop
pusha
popf
mov
pop
loopne
mov
xchg
or
jne
icebp
cmp
out
in
daa
push
nop
test
mov
scas
xchg
in
or
dec
mov
sub
and
pop
int
cmpsl
jns
int3
mov
cmp
not
cmp
mov
mov
pop
ds
push
enter
fists
lock
xchg
out
movsl
sarb
aas
dec
imul
push
cmp
push
scas
lahf
int
sub
arpl
pop
popf
mov
pop
and
mov
arpl
sub
test
mov
fdivrs
arpl
cwtl
mov
popa
sbb
pusha
loopne
shll
push
sub
mov
mov
and
pop
sub
insl
mov
lahf
jbe
fcoml
loope
push
das
mov
arpl
dec
mov
mov
mov
xchg
pop
ljmp
ret
or
shrd
in
fwait
dec
mov
popa
daa
and
or
cs
dec
je
xor
add
add
adc
cld
stos
mov
push
push
out
jge
adc
mov
lds
into
pushf
mov
push
sti
cmp
or
loopne
lret
inc
loope
cmpsb
movsl
mov
das
dec
lock
cmp
push
ljmp
in
push
jb
mov
jnp
mov
inc
das
les
and
mov
js
jmp
popf
dec
sub
mov
push
frstor
lahf
adc
daa
add
mov
je
jae
out
fcomip
lret
je
sub
or
dec
sub
inc
cltd
mov
jge
negl
pop
mov
fnstenv
inc
sbb
add
pop
punpckhwd
inc
xor
or
xchg
rcrl
das
sbb
shrl
cmc
xor
lea
pop
push
out
add
push
gs
pop
into
inc
into
repz
adc
jbe
lods
push
aas
inc
mov
and
dec
imul
adc
das
mov
jecxz
xor
sub
sbb
fimull
xor
cs
and
outsl
inc
push
setns
sbb
movsb
dec
push
lret
xchg
or
test
ficoms
fwait
jge
fnstcw
xchg
loopne
cmpsb
dec
iret
mov
inc
lahf
sub
lahf
fldenv
sub
mov
sub
fcompl
cmc
loope
add
or
in
dec
daa
jle
xchg
clc
cmp
aad
xchg
popa
test
int
mov
mov
divl
add
xlat
sahf
daa
insl
test
arpl
mov
sbb
sub
mov
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
jmp
imul
scas
repnz
jp
data16
ljmp
shr
out
mov
fstpl
jmp
jp
mov
xchg
cmpsb
js
scas
pusha
mov
push
push
scas
push
cmp
lods
insl
mov
test
sub
and
jns
xlat
dec
dec
push
icebp
scas
fs
aad
push
das
dec
jns
sbb
sarl
mov
aas
xchg
xchg
xchg
ret
dec
xor
push
jae
outsb
mov
test
shl
in
mov
shlb
push
stos
and
dec
cmp
out
test
fcoml
leave
orb
cmp
mov
repnz
xor
out
dec
movsl
and
pop
leave
dec
cmp
jbe
out
stc
into
fidivl
cmp
repz
cmpsb
xor
out
jecxz
mov
cltd
push
subb
xchg
iret
es
lods
pop
push
xorb
repnz
arpl
add
and
mov
fsubrl
inc
movsl
aas
lea
dec
loopne
mov
in
cltd
repnz
dec
adc
xor
push
nop
repz
mov
pop
and
in
stc
insb
dec
scas
push
jmp
insl
inc
stos
inc
pop
imul
adc
or
inc
pop
enter
dec
scas
ret
test
jmp
push
and
repnz
xchg
insl
adc
adc
xchg
sbb
shrb
inc
call
or
add
cmc
and
pop
and
pop
jae
pop
stos
imul
cmp
lret
inc
pusha
mov
mov
leave
push
lea
arpl
mov
nop
inc
sbb
mov
cmp
add
daa
pop
and
icebp
dec
or
push
aaa
push
cmp
xchg
add
clc
dec
in
ss
pop
sbb
loop
mov
sbb
dec
sbb
hlt
jg
jbe
in
inc
jl
or
add
inc
es
cmpsb
stos
rol
ljmp
xchg
xor
or
pop
fs
inc
int
cltd
into
mov
pop
arpl
mov
repnz
and
adc
lea
loop
insb
jmp
addl
scas
push
and
ja
ds
xchg
xor
repz
dec
xchg
in
loope
inc
int3
or
test
mov
sbb
mov
add
iret
fnstenv
lahf
addr16
mov
lret
ljmp
jbe
scas
pop
bound
jae
pop
das
xor
xchg
jae
test
dec
adc
cmp
mov
sub
jl
push
push
push
sub
das
jl
outsl
lods
mov
insb
inc
lahf
outsl
xchg
xchg
sbb
outsb
dec
mov
jae
mov
and
adc
faddl
daa
push
lahf
push
mov
jp
cmp
in
sub
ret
lahf
cs
mov
push
push
xchg
and
jb
mov
mov
sub
lret
mov
inc
loope
mov
in
pop
sbb
out
pop
inc
lahf
ja
outsl
adc
mov
pop
int
pop
jne
shrb
jl
rorb
out
outsl
lret
cmp
mov
mov
push
leave
mov
jbe
js
aad
or
enter
insb
cmp
gs
pop
xchg
subb
push
callw
movsb
push
ljmp
notb
sbb
cmp
jb
jnp
imul
add
push
xlat
es
fdivl
or
mov
pop
jo
out
lahf
idivb
cmp
mov
add
jl
popl
jge
clc
jns
mov
test
cli
enter
mov
data16
dec
jne
jl
ja
jmp
ds
cli
inc
adc
pop
inc
gs
push
jl
xor
push
dec
xor
icebp
push
push
fdivrl
mov
jno
test
jle
push
and
loop
in
push
add
push
imul
enter
push
mov
inc
jns
xchg
xchg
xor
scas
enter
dec
push
cmp
inc
jb
inc
out
push
pop
push
add
popa
test
dec
inc
jg
icebp
mov
pushf
push
popf
into
int
dec
adc
add
push
mov
stos
mov
mov
cs
sub
lret
and
stos
adc
dec
mov
adc
out
fwait
jmp
inc
jnp
mov
fs
xchg
pop
mov
and
cmp
or
test
popa
loopne
mov
in
xor
cwtl
enter
shrl
fcomp
or
cwtl
in
xchg
push
enter
gs
dec
fadd
ds
gs
popa
xchg
cmp
sub
lret
add
mov
inc
xor
adc
jecxz
shl
xor
pushf
adc
popa
call
aaa
jb
out
inc
sahf
int3
cmc
pop
or
sar
xor
aam
fnstsw
jns
sarb
push
jne
inc
dec
roll
cmpxchg
inc
das
lret
adc
mov
inc
lret
pop
aas
enter
dec
sbb
or
and
cmp
jae
and
icebp
cs
push
dec
test
clc
cmp
outsb
fbld
xchg
add
stos
cwtl
ret
rcl
sub
mov
mov
mov
cmp
cmp
mov
push
xchg
loop
inc
or
fiadds
jne
pop
push
out
loop
int3
jne
push
pusha
add
ds
inc
pop
sbb
lret
mov
mov
cmp
push
fwait
nop
xchg
jge
rcll
mov
adc
dec
clc
xor
stos
repz
jbe
int3
pop
mov
aad
sub
pop
dec
jp
out
mov
jl
jns
ds
jge
xor
cli
ficomps
loopne
or
jno
push
fst
lret
sahf
cmp
pop
jl
jbe
mov
sbb
test
dec
lea
xor
jae
dec
pop
push
orb
adc
std
push
dec
mov
mov
insl
test
adcl
pushf
jp
or
push
orl
cmp
xor
fisubl
pop
das
out
pop
out
mov
mov
xchg
dec
cmpsl
mov
xchg
nop
pop
push
dec
ja
adc
aam
pop
dec
mov
push
xchg
cmp
lods
push
or
jne
mov
fdivs
jno
imull
cmp
mov
pop
iret
xor
dec
ja
lods
sbb
xor
fisttpl
pop
stc
cltd
xor
fdivrl
sti
dec
out
ja
popa
or
popf
add
nop
pop
push
sbb
xor
xchg
xchg
loopne
psrld
jp
data16
xor
jle
nop
scas
stos
dec
xchg
inc
add
cs
subl
xor
pop
imul
je
sti
insb
lock
sarl
movsl
xchg
jno
push
or
xor
loope
int
shlb
jp
icebp
movsb
jecxz
int3
dec
adc
pusha
inc
pop
sbb
jl
sar
jl
push
inc
in
inc
push
push
or
test
add
lahf
xor
les
bnd
aad
or
or
cmp
data16
fsubrl
js
mov
mov
out
daa
in
ja
cwtl
inc
xor
push
fisubs
in
call
sbb
shr
mov
mov
xchg
mov
mov
cmp
mov
push
xor
sbb
mov
jbe
add
outsl
or
and
testb
sub
xor
andl
mov
stos
out
mov
ret
mov
inc
and
in
int3
ficompl
xor
mov
inc
call
and
sti
mov
cmpsb
mov
dec
adc
pop
les
inc
mov
pop
lods
adc
xor
xor
mov
push
xor
sub
cltd
mov
mov
out
mov
and
adc
push
mov
add
mov
mov
repz
jo
mov
cmp
dec
or
push
push
jl
bound
aad
mov
sub
sbb
arpl
jp
push
fcompl
xchg
popa
mov
lds
fs
mov
clc
sti
jns
adc
movsb
mov
xchg
sbbb
xchg
ljmp
out
push
fucomp
push
cwtl
out
lock
cmp
mov
ret
les
rcr
push
fwait
rcrl
in
arpl
mov
mov
cld
mov
sarb
jl
dec
fldl
ret
popf
mulb
inc
fsubrs
mov
jnp
add
cmp
fdivrs
adcb
daa
sub
scas
cmp
in
xorl
pop
and
fisttpl
cli
outsb
into
mov
loop
pop
dec
or
cli
fdivp
jae
mov
cmpl
adc
dec
mov
lods
push
cwtl
les
push
mov
cld
aaa
int3
scas
movsl
mov
and
daa
hlt
pop
add
mov
arpl
push
lods
adc
or
sub
inc
pop
push
mov
pusha
and
sbb
cmpsl
sbb
mov
xlat
xchg
data16
xchg
mov
stos
sbb
loope
push
push
sub
fsubrl
mov
repnz
outsb
test
jge
mov
push
dec
in
test
dec
leave
mov
and
fisubrs
add
pop
jl
pop
mov
incl
shrb
cmp
aad
push
pop
je
or
push
push
and
movsb
rcll
repz
mov
push
cmp
iret
xor
sbb
fld
jne
in
hlt
mov
xor
ret
mov
jne
icebp
push
pop
test
xorb
push
out
adc
mov
imul
hlt
push
std
mov
xchg
mov
mov
adc
add
adc
push
sub
add
movb
cmp
cmp
xchg
in
cmp
push
rcr
mov
sub
lods
fimull
fimuls
fisubrl
xor
dec
aam
loop
fstl
sub
subl
mov
and
mov
sbb
cli
adc
xchg
mov
jnp
xor
xorl
repnz
cmp
add
sti
pop
daa
fstpt
cmp
push
or
xchg
inc
cmpb
xor
repnz
fisubrl
sbb
fnstcw
and
outsl
icebp
pop
push
scas
fs
repz
sub
aaa
pusha
arpl
mov
mov
imul
mov
inc
ret
mov
mov
lahf
mov
cmp
popl
dec
fwait
in
xor
leave
test
or
dec
cmp
mov
push
icebp
lahf
add
dec
mov
push
cli
sbb
push
jmp
out
mov
sbb
movsb
scas
push
push
test
movsl
inc
mov
and
popf
cmp
or
imul
jp
inc
lock
add
sbb
fwait
or
pop
pop
leave
ret
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
rolb
add
inc
add
rolb
or
inc
add
rolb
adc
inc
add
rolb
sbb
inc
sbb
xlat
dec
add
add
add
add
cmp
dec
add
xor
add
hlt
xlat
dec
add
add
orb
add
add
add
add
add
add
js
add
jl
add
orb
xor
dec
add
add
inc
jns
popa
insl
imul
aas
inc
gs
jae
jb
bound
arpl
arpl
imul
gs
bound
arpl
arpl
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
add
push
push
inc
push
cmpsb
imul
inc
scas
add
clc
push
lods
stos
in
add
add
pop
inc
jne
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
push
movb
movb
push
movb
xor
movb
xor
pop
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
push
mov
inc
pop
cmp
jb
lea
mov
mov
mov
mov
mov
cmp
jne
movl
movl
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
lea
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
dec
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
lea
mov
movl
movl
lea
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
mov
xor
mov
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
add
mov
mov
mov
mov
mov
mov
lea
mov
cmp
jb
mov
mov
mov
add
cmp
jae
sub
add
mov
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
and
add
push
call
test
jne
and
jmp
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
sub
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
pushl
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
lea
add
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
mov
add
mov
mov
xor
add
mov
push
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
mov
add
mov
cmp
jne
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
push
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
xor
add
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
andl
mov
mov
add
mov
mov
mov
add
andl
mov
mov
mov
mov
mov
mov
lea
mov
xor
mov
add
incl
cmpl
mov
jb
movl
movl
movl
movl
movl
movw
movb
xor
lea
mov
xor
sub
inc
mov
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
lea
push
mov
pushl
call
mov
test
je
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
movzwl
movzwl
mov
xor
mov
xor
mov
add
add
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
mov
add
cmp
jb
mov
mov
xor
mov
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
mov
add
cmp
jb
mov
mov
xor
mov
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
jmp
mov
xor
mov
lea
mov
mov
mov
mov
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
sub
xor
cmp
jne
xor
jmp
xor
inc
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
xor
add
mov
movl
movl
movl
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
jae
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
add
mov
add
mov
mov
mov
inc
mov
jmp
leave
ret
push
mov
push
push
movl
movl
xor
inc
je
mov
xor
add
cmp
jne
jmp
mov
xor
add
mov
sub
mov
mov
xor
add
mov
add
mov
jmp
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
pushl
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
push
pushl
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
mov
xor
mov
sub
add
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
add
push
lea
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
