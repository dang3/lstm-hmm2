add
add
adc
cmp
add
add
adc
add
add
add
add
add
add
add
adc
add
add
xor
add
xor
add
add
jb
push
imul
aas
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
imul
add
add
add
mov
add
inc
and
or
mov
xorl
add
adc
movzwl
mov
mov
sub
mov
and
movb
sbb
lea
xor
xor
adc
mov
mov
mov
sub
mov
mov
xorl
xor
sub
adcl
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
movl
push
sub
movl
and
mov
push
mov
xor
or
mov
andl
push
subl
add
movl
jmp
movl
mov
movl
mov
movl
inc
movl
cmp
jb
sbbl
mov
addl
xor
subl
add
jmp
add
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
orl
mov
sbbl
xor
xor
mov
add
andl
movzwl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
neg
mov
movl
movzwl
xor
addl
add
movzbl
mov
mov
movl
inc
mov
mov
cmp
jne
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
mov
addl
xor
add
mov
xorl
mov
sbbl
xor
add
mov
movl
movl
movl
mov
movl
mov
movl
mov
jmp
xorl
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
adcl
mov
negl
xor
xorl
xor
orl
sub
movzbl
adc
sub
xorl
xor
not
mov
addl
mov
mov
orl
lea
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
pushl
push
push
call
jmp
mov
mov
subl
lea
neg
mov
adc
mov
addl
mov
addl
lea
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
xor
mov
sbb
mov
xorl
mov
lea
xor
mov
mov
mov
adcl
lea
not
mov
mov
mov
lea
mov
dec
mov
xor
orl
add
movl
jne
movl
jmp
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jb
xor
xor
sub
mov
xor
xor
addl
sub
movl
sub
xor
movl
mov
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
jmp
add
xchg
dec
xchg
in
sbbl
adc
dec
mov
sbb
bound
pop
bound
xor
cmp
jns
jne
lds
jno
fld
std
dec
push
jae
inc
mov
scas
inc
push
cmp
loop
inc
push
jg
insb
mov
mov
jbe
loop
jg
icebp
and
or
xchg
xor
fsub
jno
sbb
out
loop
add
adc
jae
movsl
or
mov
cmc
push
xor
aam
in
loop
mov
xchg
mov
jmp
and
adc
xor
sub
dec
sti
scas
xchg
xor
xchg
dec
clc
pop
dec
push
adc
jmp
sbb
fcompl
inc
loope
inc
mov
pop
add
sub
outsb
dec
and
mov
adc
lds
test
frstor
shlb
sub
mov
mov
sub
ficoms
mov
adc
mov
sbb
insl
add
mov
outsl
imul
or
mov
stos
inc
lret
dec
push
sub
jbe
ss
sbb
mov
sti
mov
add
cmp
in
and
js
inc
pusha
repnz
stc
jns
pop
fnstsw
shlb
pop
jne
mov
xor
clc
enter
dec
cmp
repz
loop
cmp
mov
and
jmp
repz
cmc
aam
xor
repz
adc
test
cwtl
in
push
mov
popa
or
scas
lock
ret
ret
cmp
lods
les
pop
subl
aam
sbb
mov
jg
inc
cmpsb
mov
icebp
inc
imul
adc
adc
ljmp
inc
xor
cmp
addl
sarl
and
fildll
outsb
xchg
sub
mov
lock
or
mov
xor
std
clc
insl
mov
jb
outsb
lods
add
popa
mov
ficompl
pop
jo
push
xor
jg
clc
sbb
jg
adc
pushf
mov
cwtl
lret
aam
inc
aas
adc
negl
mov
movsb
inc
mov
xor
cli
movsl
popf
ficoml
mov
imul
enter
cmp
outsl
test
cmp
stos
out
mov
les
repz
mov
hlt
pmuludq
cmp
lret
cmc
bound
cmp
shlb
add
push
aas
xlat
xchg
push
xchg
cmpxchg
sbb
mov
dec
jge
adc
jmp
adc
jmp
cmc
jp
lret
dec
out
cmpsb
pop
arpl
out
jge
or
in
push
xchg
imul
std
mov
sarb
icebp
cmp
imul
lods
negl
in
out
insl
mov
xorb
cmpsl
or
test
test
jge,pn
loope
in
mov
imul
mov
hlt
in
cmc
cld
jecxz
in
in
sub
mov
aam
inc
ds
jmp
les
and
jbe
mov
repz
cmp
int3
jge
jnp
mov
add
dec
mov
sahf
mov
mov
ficompl
ja
inc
add
fwait
je
loope
adc
pushf
or
mov
push
hlt
push
inc
inc
in
add
pop
lret
dec
ret
jmp
ljmp
xchg
cmp
inc
add
orb
pop
mov
xchg
aam
movsb
mov
dec
pop
unpcklps
ljmp
adc
fadd
ja
pushf
mov
jmp
inc
adc
popf
lock
sub
mov
int
mov
lret
inc
fsqrt
loopne
incl
sbbl
mov
lret
adcb
sbb
cs
ds
ret
repz
mov
dec
dec
ds
sub
mov
fcoml
mov
mov
add
mov
sbb
dec
lret
push
xchg
ret
pop
or
cmp
pop
movsb
pop
popf
test
nop
lret
pusha
mov
pop
fs
cmpsb
test
repz
dec
js
pop
fists
sub
pop
pop
jge
scas
mov
xchg
pop
sub
add
cmc
in
add
xchg
ficompl
repnz
pop
jmp
repz
fs
test
add
or
outsl
sahf
mov
add
mov
inc
push
repz
or
xchg
fwait
sbb
add
dec
cwtl
inc
sbb
or
fidivl
dec
pop
push
aam
sarl
cwtl
xor
aam
daa
xchg
pop
mov
and
lock
stos
sub
test
sub
push
and
fdivs
jmp
and
shrl
mov
xchg
scas
sbb
xchg
xchg
inc
and
test
or
stos
jle
test
push
stc
xchg
pop
xor
cli
mov
and
jmp
mov
mov
nop
outsb
shll
fstpt
mov
cmpsl
movsl
and
aas
push
sub
hlt
rclb
and
add
popf
push
jno
cmp
jne
aad
mov
lods
test
xchg
movsl
aas
and
sti
mov
push
jle
sub
pop
push
xlat
push
adc
xchg
shlb
cmpsl
insb
push
xlat
cltd
dec
inc
stos
cld
jb
test
ljmp
adc
iret
xchg
sbb
cltd
xchg
in
add
mov
or
sbb
jmp
mov
ss
int
pop
jg
push
mov
dec
pushf
mov
ficompl
push
inc
ljmp
cmp
inc
insl
les
jno
cld
hlt
jns
je
jmp
gs
cld
in
jp
scas
mov
dec
ss
jl
mov
jecxz
jp
lret
push
addr16
jge
push
insb
imul
pop
lea
or
mov
mov
ds
push
fcompl
pop
mov
xchg
sbb
inc
cld
push
stos
jl
sub
out
call
aam
jo
stc
xor
pop
sbb
dec
rorb
fistpll
mov
sti
push
cltd
rorl
in
jl
jmp
jle
popa
ret
jl
popa
and
inc
loopne
sub
push
xchg
sbb
add
insb
loopne
lock
roll
inc
aad
xor
push
ret
nop
cmp
sub
mov
insb
mov
lret
std
xchg
faddp
mov
pop
aaa
jecxz
fimuls
out
enter
icebp
cmp
insl
ss
sahf
pushf
cmc
and
aas
inc
lds
pop
pop
sbb
lock
call
insl
cli
or
int
test
insb
push
insl
les
cmp
adc
mov
push
and
out
outsb
dec
mov
loop
mov
dec
test
pop
jmp
jecxz
cmp
pop
lea
lock
test
cmpsb
or
add
or
lock
xchg
adc
dec
pop
addb
loopne
aad
mov
leave
popa
dec
pop
sub
mov
loope
and
add
ret
lds
dec
dec
push
ljmp
xchg
out
imul
sbb
not
out
addl
jg
sbb
imulb
push
pop
dec
sub
dec
insb
jecxz
push
movsb
jb
adc
mov
xchg
add
mov
jmp
inc
outsl
xorb
inc
push
std
ret
aaa
lcall
bnd
addl
cs
les
pop
push
pushf
push
sbb
cmpsl
pop
push
lock
lea
jecxz
je
pop
je
sbb
out
adc
subl
loopne
dec
repnz
lahf
sbb
push
es
add
jmp
push
mov
cmc
pop
mov
xchg
pop
movsb
rcrb
iret
jecxz
or
popf
inc
cli
cmp
aam
in
adc
outsl
sti
and
fs
in
mov
sub
icebp
inc
adc
cli
stos
mov
fldenv
add
pop
push
test
lock
xor
int
lods
fcompp
arpl
aam
int3
les
inc
sbb
pop
pop
je
inc
fwait
arpl
xor
call
pop
ret
jp
in
clc
xor
or
imul
lea
sbb
inc
mov
test
daa
nop
inc
loopne
pop
sbbb
les
sbb
insb
cwtl
push
inc
je
stos
jmp
or
xchg
mov
out
cmpsl
cmp
adc
jnp
inc
mov
xor
inc
das
cmp
sub
jo
in
push
imul
arpl
outsl
enter
jp
xchg
xchg
aam
rcr
ljmp
inc
mov
mov
and
icebp
ret
jb
pop
icebp
push
cltd
out
das
dec
movsb
sub
lock
pop
das
scas
mov
or
cmp
push
push
nop
cmp
xor
adc
mov
pusha
dec
add
inc
adc
push
cmp
call
adc
cmp
test
push
xchg
xor
xchg
mov
cli
jle
ljmp
cmpl
lahf
mov
sbb
jle
mov
adc
fldt
fiaddl
cmp
jnp
pop
pop
jnp
in
mov
xchg
pop
or
mov
mov
mov
inc
pop
pandn
mov
insl
lcall
std
push
cwtl
stc
sub
stc
in
std
aam
jae
xor
loope
cmp
rorl
test
jb
lods
jb
mov
mov
subl
mov
int
cmpl
js
jp
jg
sub
adcl
mov
iret
pop
pop
and
mov
outsb
fwait
es
lock
dec
add
das
test
mov
fnstsw
sub
push
into
and
mov
lds
pop
mov
repnz
inc
arpl
sbb
ficoml
insb
jb
lret
mov
in
inc
mov
pop
adc
adc
inc
xchg
jl
mov
test
pop
imul
add
sub
ret
inc
lret
cmp
xchg
fcoms
push
aaa
jnp
mov
pop
lcall
scas
mov
ds
int3
clc
stos
xchg
mov
push
xchg
insl
jl
sub
pop
xchg
mov
testb
fnsave
sar
lods
and
pop
xor
push
daa
mov
or
mov
dec
pop
pop
sbb
push
lea
inc
add
testl
test
test
popaw
cmpb
add
add
outsb
mov
inc
subl
outsl
sbb
pop
cwtl
push
lahf
out
jp
push
push
jbe
push
scas
push
loope
popf
xchg
fldt
mov
jmp
out
into
idiv
sub
scas
fs
shlb
in
shl
es
dec
mov
pop
push
fisubrs
ds
add
icebp
mov
or
lods
jg
sub
js
aam
sti
add
push
jp
sbb
mov
mov
jecxz
fisubl
aam
adc
je
shlb
or
fst
imul
pop
jmp
jne
push
inc
mov
mov
mov
fadds
sbb
icebp
jnp
mov
xchg
cmp
movsb
es
xor
jg
icebp
mov
inc
dec
pop
les
cmp
filds
and
mov
test
lcall
daa
shrb
mov
fwait
sbb
xchg
sbb
shl
jo
cmp
clc
mov
stos
repnz
leave
clc
sub
push
faddl
or
adc
mov
mov
mov
push
insl
sub
int3
fistl
popf
or
xor
inc
icebp
out
dec
mov
push
mov
sbb
scas
adcl
cmpb
jns
pop
jg
pop
lcall
ja
je
adc
sbb
lods
add
dec
jl
cld
fnstcw
push
xchg
lods
ret
ja
out
nopl
mov
mov
mov
fucomp
sub
rcrl
push
int3
sub
xchg
popa
nop
roll
jmp
pop
in
push
xchg
fisttps
pop
mov
push
fiaddl
stos
or
movsl
mov
hlt
icebp
shl
jae
lea
fwait
mov
clc
lea
mov
nop
xchg
xchg
icebp
jl
pop
aad
in
leave
icebp
nop
fs
add
adc
push
pop
pop
fldcw
dec
shll
jg
ret
test
stc
pop
dec
ss
adc
pop
xor
jg
xor
jg
push
push
aad
sbb
movsb
sbb
dec
popa
mov
aaa
gs
popf
xchg
pusha
jg
leave
addr16
add
sub
cmp
cmpsb
cltd
mov
jmp
pop
add
pop
xor
in
lods
call
les
mov
adc
push
push
sub
xor
mov
insl
in
xchg
pop
mov
mov
das
pop
pushf
je
add
push
fsubr
xchg
mov
mov
ja
iret
mov
push
mov
or
and
test
add
add
es
inc
out
clc
out
xor
pop
mov
and
mov
std
arpl
mov
loop
cmp
inc
cli
add
xchg
mov
xor
nop
sti
add
pop
leave
pop
clc
mov
cld
outsl
xchg
mov
add
jae
mov
mov
std
add
pop
loope
ret
popf
rclb
pop
and
mov
ss
out
int
aaa
inc
test
popf
decb
jo
cltd
fcmove
aad
add
cmp
xlat
inc
pop
shlb
push
xchg
fidivl
fbld
fldcw
and
sbb
or
xor
dec
inc
lods
push
jl
or
lret
push
xor
cmpsb
repnz
sbb
sbb
adc
das
or
insl
mov
or
mov
bound
rcr
and
clc
test
mov
into
add
not
lahf
push
mov
push
mov
dec
jmp
orb
lcall
jno
mov
dec
and
xchg
or
xchg
push
loope
ds
cmc
inc
ja
add
and
pusha
dec
insb
mov
in
test
pop
movsl
jno
mov
jo
mov
test
or
divb
and
in
imul
inc
adc
addr16
sbb
xchg
sub
rcrl
fldl
sub
push
int
js
cld
sbb
jge
out
imul
movsl
jbe
push
icebp
ret
not
or
stos
add
push
inc
fistpl
movsl
popa
xchg
sbb
inc
shl
pushf
into
lahf
andl
add
clc
xor
mov
sbbb
idivl
mov
cltd
add
scas
mov
inc
movsb
mov
rcr
jmp
or
cmpsl
sbb
mov
mov
pop
and
mov
adc
jecxz
fistpl
flds
lods
data16
addr16
xchg
dec
cmc
jns
push
xor
out
adc
sahf
orl
sti
cmc
xchg
clc
in
xchg
lahf
rcrl
and
mov
loop
repnz
hlt
imull
ds
int3
ret
out
and
outsl
lret
fsts
insl
mov
jnp
in
inc
sub
in
and
adc
xchg
mov
out
cmp
pop
add
imul
pop
mov
mov
or
adc
rclb
sbb
lods
pop
sbb
pushf
push
hlt
jns
mov
rcr
imul
fstps
cld
pop
mov
mov
add
ret
out
sub
rcrl
fs
inc
outsb
xchg
mov
pop
inc
jne
jl
pushw
xor
sbb
xorb
xchg
lahf
jno
rorl
or
jge
mov
fbld
sub
insb
rcl
jge
arpl
cvtdq2ps
loope
jne
or
aas
les
loopne
jge
sbb
jp
add
pop
pop
divb
iret
sbb
jle
sbb
shll
push
popa
push
mov
mov
inc
int
lea
mov
in
shl
leave
jae
sti
sbb
repz
fsts
movsb
xlat
mov
mov
mov
pushf
insb
outsl
pop
lods
leave
loopne
mov
inc
push
lea
or
imul
shr
inc
mov
out
xor
push
icebp
dec
pop
fs
std
push
test
sbb
xor
xor
xor
fstp
mov
in
jb
rorb
scas
aaa
mov
test
cltd
mov
insl
and
lods
push
add
adc
and
xchg
or
add
notl
out
push
adc
or
pop
addr16
push
lods
jno
test
icebp
pop
dec
and
jl
imul
or
cmc
add
adc
dec
sbb
inc
cmp
cmp
mov
cld
ja
divl
fs
sbb
leave
into
cmpsb
test
icebp
jge
mov
mov
pop
gs
cmc
jge
jne
mov
sti
mov
and
iret
scas
test
fldenv
nop
or
mov
add
mov
insb
push
and
pop
insb
cmp
or
fidivs
dec
xchg
mov
sub
or
ja
divb
int
jnp
push
data16
or
mov
lds
mov
cmp
mov
push
jbe
das
xchg
inc
test
mov
and
mov
inc
cmpsl
pmulhw
mov
iret
mov
in
pop
test
lods
jecxz
jp
dec
js
dec
movsb
int
loopne
jo
daa
outsb
in
sub
int
inc
addr16
mov
mov
stos
pcmpgtb
adc
inc
rorl
lods
test
lret
add
inc
dec
inc
mov
sub
rolb
ret
rorl
dec
xchg
xchg
xchg
jnp
mov
xor
jg
ret
sbb
xchg
imull
or
lret
shll
or
loope
or
dec
out
sub
cmp
cmpsl
out
adc
sbb
enter
js
and
mov
mov
mov
lock
out
inc
add
xchg
sahf
xchg
inc
sbb
rcrb
pop
fstpl
rcl
inc
xchg
jl
pop
mov
mov
sarl
mov
mov
orl
xchg
stc
push
test
sub
adc
sbb
inc
push
stos
dec
clc
push
cmp
push
fidivs
jp
lcall
gs
aas
cmp
sbb
adcl
mov
popa
int3
dec
sbb
jbe
div
pop
data16
or
loope
jbe
hlt
dec
xor
jne
jae
subb
mov
inc
or
cmp
jne
cmc
dec
cmpsl
adc
adc
and
xlat
mov
std
imulb
das
push
xor
mov
mov
cmp
push
outsb
outsb
push
mov
loope
insl
cltd
aas
andl
out
shll
dec
xor
stos
lds
lods
jbe
push
lock
out
cltd
push
xchg
xor
xchg
jb
in
mov
lock
sub
xlat
or
repz
adc
shll
bound
loop
aam
sbb
mov
push
sahf
or
push
lea
mov
inc
test
add
int
iret
bound
pop
imul
gs
in
or
jge
repz
aad
adc
mov
and
add
cwtl
sub
sub
jno
xor
insb
test
call
iret
rorl
test
testl
in
inc
fucom
add
dec
pusha
mov
cwtl
xchg
ret
sbb
xchg
pop
mov
bound
sub
dec
jp
lods
int
adc
call
xor
xlat
xor
inc
sbb
mov
mul
jne
loop
aam
jmp
adc
pop
jg
stos
movsl
lahf
les
and
cmp
jbe
xchg
push
sbb
outsl
dec
xor
mov
jbe
das
test
in
mov
dec
pushf
or
test
pop
and
jle
test
push
out
xchg
mov
ljmp
inc
inc
dec
mov
rcll
push
or
out
fildl
mov
mov
jecxz
jge
into
repz
loopne
iret
ja
mov
pop
aad
add
shlb
test
sbb
add
daa
test
or
in
pop
in
bound
popa
sub
addr16
sub
and
movsl
or
xor
lcall
push
fwait
sub
insl
and
cld
jmp
sub
sti
add
test
movsl
dec
jg
icebp
in
adcb
sahf
test
jae
sub
add
inc
mov
xchg
stc
xor
je
shlb
lret
mov
inc
cmp
sahf
push
sti
lods
out
jg
das
jbe
or
sub
repnz
lea
shl
mov
dec
sub
and
leave
hlt
mov
pusha
adc
xor
fiadds
lcall
or
and
sbb
and
aam
sbb
int
jnp
add
xchg
cwtl
jns
test
loop
rolb
repz
sub
movsl
fwait
mov
cld
push
fistps
insb
sarb
jo
or
add
repnz
cmpsb
lock
test
enter
fsubrl
cmpsl
jne
fmulp
sbb
cs
rcll
fildl
mov
mov
loope
imull
sub
xor
mov
pop
adc
popf
xchg
lds
pop
pop
dec
xor
rcll
test
mov
ds
jge
cmpsl
popl
les
testb
aas
and
cs
int3
divb
pop
stos
mov
orl
pop
into
adc
jae
daa
in
inc
adc
int
cmp
and
shll
xchg
mov
xor
mov
imul
cmp
inc
popa
adc
mov
push
jb
or
addr16
lock
mov
ret
jge
xchg
leave
cmpl
ret
jp
push
jb
fmul
push
fmulp
adcl
ret
in
test
pop
mov
mov
fs
sub
push
imulb
out
mov
or
bound
ss
jns
mov
push
fadds
mov
ret
cld
sub
fmull
xchg
fcmovb
arpl
imul
je
cli
push
loope
sub
mov
popa
nop
inc
test
adc
popa
and
push
add
aad
dec
aas
test
xchg
mov
pop
mov
stc
in
xchg
fucomi
cmp
mov
notb
cmp
sub
adc
test
adc
inc
loope
xchg
dec
int3
adc
lock
xchg
cmc
daa
bound
or
cmp
dec
loope
or
inc
ret
nop
icebp
in
dec
popf
addl
lea
cli
dec
cs
xchg
add
or
dec
mov
and
sub
cmp
adc
push
pop
rorb
add
scas
leave
push
in
fnstcw
adc
mov
scas
xchg
push
pop
mov
lds
fs
sub
rol
push
mov
test
imul
in
test
xchg
push
lock
push
rcrl
or
pop
xchg
shll
cmc
push
and
push
push
xor
sub
push
ficomps
dec
add
add
pop
mov
in
mov
fisubrl
mov
fnstenv
lods
pop
sbb
jb
aad
ret
lret
inc
ss
das
xchg
call
push
daa
fbstp
mov
sub
or
scas
mov
sbb
pop
test
add
inc
add
lock
stos
fchs
cld
pop
pop
mov
in
shlb
subb
pop
sahf
pop
mov
cmc
shll
shl
push
pusha
addr16
xchg
stc
add
mov
jp
xlat
sub
dec
in
lcall
in
cltd
cmp
add
and
shlb
sub
out
sbb
daa
mov
pushf
jg
mov
aaa
push
adc
inc
leave
int
test
push
cwtl
pushf
jne
dec
jbe
int
pop
outsb
xchg
in
jp
out
push
jns
ficoms
subl
mov
xor
ret
inc
mov
mov
mov
jg
mov
sbb
lahf
push
mov
ljmp
rcrl
sbb
mov
sub
jmp
jne
aad
std
dec
or
fistpl
sbb
sarb
sbbl
jmp
shl
sbb
cmp
subb
or
adc
and
cmp
incl
movsl
or
cmp
insl
stc
dec
movsl
pusha
xchg
or
push
add
jmp
add
lret
rcr
jecxz
mov
mov
int3
ljmp
lods
pop
popf
jle
inc
mov
push
jp
sti
adcb
xor
daa
adc
test
jo
dec
enter
xor
xchg
dec
insb
lret
pop
fidivrl
mov
sub
pushf
jne
add
lods
mov
push
add
jp
mov
test
dec
mov
sbbb
daa
jl
jp
pop
cmp
mov
scas
jo
ds
mov
int
cmovo
andb
imul
jmp
lea
je
and
icebp
movsb
push
push
fnstcw
xchg
or
jp
push
cmp
outsl
lods
xchg
push
out
push
lock
and
lods
nop
lods
ficoms
clc
imul
cmc
inc
ds
mov
add
bound
sbb
add
sbb
xchg
adc
mov
shrb
cld
lods
and
or
gs
sub
mov
scas
je
adc
daa
daa
pop
daa
les
enter
jno
das
mov
pushl
sbb
je
push
dec
sub
mov
lret
dec
out
out
stc
mov
outsb
inc
ljmp
sub
sahf
outsl
xchg
push
mov
rep
imull
dec
subl
addl
popa
pop
clc
jbe
out
sarb
mov
xchg
leave
jns
cld
jnp
popl
popf
rstorssp
mov
rcl
data16
jo
jp
fistpl
mov
inc
xlat
xor
rclb
mov
adc
rclb
xchg
mov
testl
aam
movsb
fsubl
dec
jecxz
out
lahf
fstpl
mov
sbbl
mov
jb
jno
jl
sub
sub
fistl
int3
scas
lahf
mov
lcall
repz
aaa
mov
cmp
sub
testl
jo
les
jne
xor
jbe
std
add
push
fdivs
xlat
fidivrs
mov
ret
cmp
jmp
jo
jnp
sub
add
mov
and
outsl
xor
mov
stos
fsubrl
or
bound
mov
sbb
push
hlt
js
scas
jns
push
mov
dec
sub
dec
jecxz
in
adc
xor
adc
in
adc
pop
in
mov
in
jbe
jns
dec
loope
cmp
ljmp
popf
jae
cwtl
xor
inc
mov
cwtl
imul
test
mov
mov
xor
mov
mov
mov
dec
jg
add
imul
leave
jb
push
fs
or
mov
cmpsb
popf
push
and
xor
inc
rcrb
leave
daa
cmp
jns
pop
push
adc
adc
sub
js
aas
addr16
cmp
ret
ds
pop
fdivs
xor
and
mov
pop
dec
push
sbb
imul
xchg
ret
fcomip
push
cmp
std
leave
adc
ds
cmp
ss
mov
push
loope
push
data16
pushf
enter
in
or
or
cmp
mov
lret
push
mull
in
das
popf
push
aad
and
in
incb
pop
dec
shrb
cmp
mov
incb
xchg
leave
jb
dec
pop
or
lods
fstps
jbe
jne
or
pop
xchg
in
sbb
lods
xchg
andb
mov
or
push
xchg
adc
adc
pop
add
shlb
mov
sub
es
rcl
lret
cmp
mov
bound
mov
or
rcpps
cs
jbe
sbb
jge
mov
jmp
or
or
addr16
or
sub
bound
xchg
dec
ret
or
test
clc
cmpl
pop
cmpsb
mov
adc
inc
mov
xchg
xchg
call
pop
xorb
cmp
and
mov
xor
arpl
and
iret
nop
cli
arpl
mov
ret
decb
in
xor
jg
fcoml
dec
jne
test
aad
add
ret
or
std
jnp
jl
orl
in
iret
std
dec
mov
cmpsb
cmpsb
je
inc
call
cwtl
cmpsb
lret
cmp
inc
sub
out
xlat
mov
mov
cmp
sub
sbbb
repz
or
out
pop
or
jbe
add
pop
sub
sbb
loope
jno
outsl
cmp
ljmp
movb
adc
outsb
dec
ja
pop
sbbl
dec
lahf
lcall
xchg
out
popl
cmp
adc
in
xorl
cmp
xchg
pop
push
mov
repz
test
or
sub
and
cltd
call
or
out
push
test
dec
push
inc
aaa
prefetch
or
test
je
or
stos
dec
jno
lods
mov
adc
mov
mov
fldl
int
and
sbb
push
push
jg
adc
scas
aas
adc
nop
enter
sub
xor
lret
fdivl
mov
xorl
add
sarb
pop
cli
fwait
std
push
into
stos
shrl
xlat
jecxz
sub
sub
stos
cs
js
enter
cmpsb
int
lahf
pushf
fucomp
test
adc
stc
sub
add
push
cmc
stos
lods
pop
ret
mov
sbb
mov
push
movsb
movsl
or
arpl
repz
xchg
pop
push
push
mov
loop
xchg
mov
push
idivl
cmc
pop
and
lock
jg
test
cmp
lret
xor
inc
jne
push
sti
mov
inc
or
in
push
mov
sub
jno
mov
repnz
stc
js
scas
rcll
lds
ror
nop
add
mov
cmp
mov
or
sbb
out
loope
out
inc
sarl
mov
out
add
jmp
lret
mov
lods
cmpb
push
ja
push
ja
mov
iret
mov
cmp
cli
test
mov
ljmp
test
jae,pn
imul
loopne
ret
pop
addr16
dec
mov
and
movsb
shlb
mov
push
xchg
dec
sbb
call
dec
loop
repnz
lds
add
push
std
sub
add
jo
adc
dec
bound
xor
out
cmp
in
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
jmp
pop
stos
sbb
gs
push
lds
inc
test
pop
bound
pop
bound
in
iret
adc
lahf
xor
push
mov
xor
push
jge
out
pop
xchg
push
mov
inc
insl
call
sar
shrl
in
adc
sbb
sub
adc
add
jne
int3
or
xor
sbb
push
xorl
scas
pop
jmp
mov
push
push
mov
sub
les
push
or
insl
inc
lock
sbb
jne
inc
cmp
push
int3
repnz
daa
add
fsubl
jne
divb
ss
sbb
out
movsb
out
jns
ret
movsb
mov
cmp
insb
bound
movsl
fidivs
sahf
sbb
mov
in
scas
sti
jb
mov
mov
dec
subb
and
movsb
cmpsl
fdivs
test
popf
sub
gs
into
movsb
and
inc
dec
scas
pop
dec
and
call
ja
mov
jg
sbb
call
test
xor
popa
je
mov
addl
and
clc
fucom
mov
push
push
shlb
mov
mov
adc
fwait
adc
xchg
jae
lds
les
or
inc
loope
mov
mov
push
adc
adc
and
sub
leave
pushf
je
add
negl
sub
add
ror
aas
xor
data16
stos
adc
repnz
lcall
lret
push
popa
clc
aam
adc
mov
fbld
out
cmp
sub
dec
hlt
shlb
fs
sub
add
push
inc
js
mov
js
inc
sub
ja
cmp
sarl
rcll
fsubl
push
loopne
std
dec
scas
adc
mov
or
adc
popf
rcrb
mov
sub
pop
movsb
cld
lods
add
cli
or
mov
cmc
sbb
int
test
out
hlt
pop
lcall
push
adc
sbb
inc
repnz
ret
xchg
jns
rorl
xchg
lock
inc
cmpps
dec
sub
nop
cmc
gs
cmc
nop
cmp
daa
inc
xlat
mov
adcl
sub
nop
dec
adc
mov
mov
pop
jne
pop
scas
or
adc
lret
mov
gs
mov
sbb
repnz
xorl
xchg
inc
ljmp
cmpsl
aam
cmp
xchg
xor
pop
loope
in
pop
cmp
sbb
or
jns
push
scas
mov
xchg
or
subb
cld
mov
xchg
stos
popf
cmc
ficoml
rclb
cltd
int3
arpl
and
mov
testl
xor
add
outsl
lea
sbb
popa
xor
inc
inc
adcb
sti
icebp
adc
jno
pop
lahf
jnp
in
test
jmp
push
jg
xor
mov
setle
mov
insl
test
xlat
cmp
mov
add
out
mov
jmp
in
mov
dec
jnp
in
popf
push
xchg
sub
iret
or
inc
int3
adc
sub
sahf
adc
fildl
cmpb
aam
push
mov
fimull
jae
pop
mov
sub
cwtl
sbb
push
outsb
pop
mov
dec
sar
ds
mov
mov
test
jae
sbb
std
repz
fsubrp
push
out
fsub
lret
es
repz
inc
sub
pop
scas
int
mov
adc
mov
cmp
push
int
push
and
scas
add
add
mov
add
xchg
xor
xor
adc
addr16
dec
sub
cltd
outsl
cmpsb
fldl
jo
repnz
rorl
xchg
sub
fidivrs
mov
mov
insb
imul
mov
pop
add
inc
ja
mov
xor
imul
pop
sbb
cmp
enter
les
lret
adc
out
push
int
lret
nop
pop
sbbb
rol
lods
push
hlt
mov
outsb
stc
mov
pop
sti
lock
subb
popa
mov
sbb
fwait
or
pop
scas
adc
lret
outsl
lea
in
dec
xlat
sub
xchg
psllw
jb
and
test
adc
pop
std
push
fcoms
mov
mov
cmpsl
mov
nop
sub
in
es
data16
int
jmp
lret
sti
fcmovnb
sbb
and
sub
pop
jno
mov
mov
mov
inc
xchg
lahf
js
ljmp
fiadds
jl
shll
jbe
mov
and
xor
push
sbb
jns
add
sarl
mov
cs
pop
ss
jmp
repnz
stos
sarb
ss
inc
pop
popl
xor
pop
jmp
push
add
mov
xchg
js
das
es
fistpl
sub
inc
outsb
jp
in
daa
fnsave
cmp
and
inc
movsb
fdivr
popf
loopne
xchg
aad
inc
xor
add
sahf
add
lods
add
nop
cs
xchg
inc
int
ds
jecxz
ss
out
in
add
cltd
mov
sbb
add
push
cmp
nop
sub
sbb
mov
adc
push
std
push
fsubrl
jl
inc
shlb
push
rcr
mov
int
and
push
mov
loope
inc
frstor
push
bound
insl
xchg
leave
and
mov
dec
sarb
bnd
test
mov
aaa
xor
mov
dec
out
xchg
xlat
xchg
fchs
bound
push
in
jne
cmp
mov
add
inc
xor
mov
out
mov
jno
repz
cltd
pop
and
inc
out
jg
or
std
dec
iret
aaa
push
push
mov
pusha
add
cmc
or
outsl
pop
mov
and
dec
bound
inc
mov
jb
pop
inc
jno
aaa
add
repnz
inc
dec
das
mov
xor
imul
test
out
rorb
fistpl
cmc
dec
adc
add
cltd
pop
pushf
arpl
sub
push
cmp
ljmp
adc
push
fstpt
aaa
or
mov
jno
sbb
xchg
stc
rclb
imull
lahf
or
jae
pop
adc
jle
jae
stos
enter
xchg
add
fsubr
push
repz
bnd
cmp
repz
xorb
ret
clc
pop
or
sbb
sbb
dec
pop
test
adcl
outsb
jns
rorb
cwtl
iret
loopne
or
push
sub
xchg
cmpsb
sbb
xchg
mov
mov
pop
lea
movsl
fbld
mov
ffree
out
shld
fcmovne
mull
push
sub
dec
xor
stos
mov
xchg
jae
rcll
inc
push
and
push
mov
loopne
lahf
jo
ja
mov
std
shlb
dec
popf
int
xchg
sbb
ss
stos
scas
xor
sub
nop
fcoms
or
das
push
rcrl
pop
dec
mov
add
andb
xchg
scas
icebp
gs
in
fwait
mov
xor
cmp
adc
out
lcall
into
mov
adc
mov
sahf
xchg
icebp
shrl
cmp
xor
xchg
int3
shrl
jne
mov
dec
test
xchg
push
push
icebp
fldl
push
in
mov
jns
mov
frstor
mov
shll
mov
xlat
fsubs
aam
jne
subb
popf
pusha
inc
cmpsb
add
sbb
push
or
into
and
iret
sub
es
popf
pcmpeqw
sub
sbb
ds
cld
test
fstps
xchg
subw
out
or
lock
cmp
and
insb
loop
std
dec
out
fsubrs
std
sbb
xchg
xchg
sbb
mov
xorl
mov
inc
call
xchg
mov
mov
outsb
jb
mov
std
add
xor
out
xor
ret
add
push
and
enter
icebp
mov
popa
cmp
loopne
pop
mov
mov
fsubs
pop
mov
adc
inc
loopne
jns
xor
fs
subb
and
popf
and
or
add
vpunpcklwd
ja
mov
je
xor
test
movl
xchg
jae
in
add
ficoms
or
cmp
pop
dec
sbb
mov
pop
sahf
iret
jl
cmp
xchg
insb
data16
cmp
mov
add
pop
xor
aad
popa
and
fsts
adc
ret
filds
sbb
mov
fisubrs
dec
dec
pushf
das
rcrl
xor
and
sbb
movsb
scas
jmp
fidivl
fists
dec
cmp
stos
xor
sub
test
mov
bound
sbb
repz
fldt
xor
scas
lret
in
sub
lock
popf
and
or
mov
inc
sahf
stos
cmp
popf
inc
cmp
push
test
gs
and
xor
into
pop
aaa
scas
dec
pop
xlat
and
andl
cmpsl
cmp
test
mov
adc
mov
and
movsl
xchg
push
lcall
cwtl
lret
pop
or
bound
push
mov
mov
in
dec
lock
pusha
scas
sahf
stos
push
mov
jg
ret
and
push
push
lahf
data16
xchg
int
jg
sbb
mov
xor
mov
add
xor
shl
dec
add
ljmp
cli
inc
idivl
mov
pop
mov
inc
rcr
fidivrl
outsl
jge
mov
pinsrw
push
les
shll
or
je
popa
push
leave
or
comiss
out
cmpsb
lock
and
cmpsb
stos
ds
or
insb
sbb
or
adc
xchg
rclb
ss
jmp
sub
lahf
adc
rcrb
jg
or
adc
inc
insl
cmp
push
dec
ss
iret
pop
in
shr
out
pop
mov
inc
pop
push
ret
adc
push
add
dec
add
adc
pop
inc
cwtl
scas
add
cmpsl
or
dec
ss
in
mov
adc
pop
or
inc
subb
mov
dec
in
scas
shlb
xchg
es
cs
fisttpll
or
gs
stos
jle
jne
out
add
insb
or
mov
xchg
leave
sub
push
jle
mov
out
sub
clc
xchg
mov
repz
xchg
cmp
adc
in
push
jmp
fcomps
shl
popa
cmpsl
inc
push
arpl
jnp
fcomi
mulb
xchg
or
dec
ds
mov
xchg
or
adc
push
sub
or
and
mov
push
packssdw
mov
sub
or
sub
subb
sbb
xchg
in
loopne
add
push
addr16
lock
hlt
incl
orb
aad
pushf
mov
xor
add
add
dec
adc
adc
fstp
lods
scas
pop
adc
sub
cli
sti
xchg
cs
cmp
repz
push
imul
sbb
rorb
mov
stc
imulb
cld
jbe
mov
and
lahf
sti
dec
mov
inc
inc
pop
fisubrs
inc
mov
popf
loope
ret
movsb
int
in
add
std
stos
fwait
imull
lock
andb
pop
push
cmp
mov
pop
xor
add
loop
dec
inc
inc
jp
xorb
scas
into
data16
jg
in
pop
cmp
testl
hlt
lea
aad
push
cmc
bound
pop
push
aad
fsubrs
and
sub
pop
inc
xchg
mov
cmp
imul
adc
or
das
cmp
and
mov
cmp
cwtl
insl
fcomp
sarl
movsl
cmpsl
sub
dec
and
rol
add
aaa
sti
mov
test
nop
mov
ss
mov
lock
leave
lss
out
xor
imul
xchg
les
mov
add
lods
out
add
inc
negb
sti
sarl
clc
shrl
add
loop
dec
enter
jnp
aam
push
dec
je
push
push
xor
cmp
insl
fists
dec
inc
pusha
pop
push
lret
rcrb
std
pop
test
loop
rcll
aam
pop
sti
iret
xor
es
push
neg
push
outsl
out
mov
lods
pop
xchg
sahf
jnp
enter
stos
dec
mov
sub
loope
jb
push
test
je
push
stos
rol
je
jb
lock
sti
add
sub
xor
or
cltd
loop
andb
adc
mov
jae
pop
loope
xor
fsts
xor
clc
or
mov
mov
lds
loop
inc
and
jge
add
and
pop
lcall
loopne
lret
mov
jg
mov
cmpsl
dec
or
aaa
test
inc
lahf
push
scas
xor
sbb
inc
stos
mov
jmp
add
ret
mov
out
test
inc
xchg
lahf
and
iret
inc
ds
adc
repnz
pop
push
and
adc
lcall
psrad
push
inc
lret
notb
arpl
aam
sub
or
test
shrb
push
outsl
jmp
push
in
push
cmp
lds
push
jecxz
mov
push
dec
frstor
fsubl
sub
sub
je
xor
and
xchg
or
and
sbbl
lret
mov
push
pop
pusha
jo
aad
scas
out
jae
adc
pop
addl
aam
in
ret
sub
mov
push
repnz
sub
leave
or
push
inc
or
push
or
mov
cmp
and
negb
imul
mov
jl
push
imul
sub
or
imul
shlb
push
lahf
mov
sbb
sub
push
and
push
stc
cli
sbb
sub
gs
sub
lcall
pop
mov
mov
frstor
adcl
inc
stc
cmp
and
lock
std
jns
test
in
je
pop
lret
data16
xor
ror
mov
std
xchg
rolb
sub
pop
sti
insl
xchg
jne
test
pop
sbb
insb
in
pop
inc
xor
inc
jae
xchg
std
mov
int
aas
lods
mov
sbb
sbb
jecxz
rcpps
and
aaa
aas
push
push
adc
cmpsl
icebp
ret
stc
sbbb
mov
cmc
ljmp
push
popf
imul
scas
into
xor
mov
dec
mov
mov
aas
inc
out
pop
jge
xchg
adcb
cs
dec
js
dec
outsb
cmp
stos
aam
call
loopne
sub
cld
jmp
cmp
xchg
outsl
imul
cmc
jb
mov
inc
ret
mov
jp
outsl
jle
mov
pop
ret
sbb
or
lods
hlt
mov
not
or
xor
lcall
cmp
mov
and
xchg
xor
add
xchg
cmp
xchg
xorl
ljmp
imul
es
jmp
lods
pop
in
cmp
shr
and
mov
dec
and
test
jmp
xchg
notl
inc
dec
lds
mov
daa
sbbb
loopne
dec
xor
scas
rep
jbe
in
out
mov
sub
push
or
fcmove
dec
add
inc
mov
push
mov
sub
jnp
loop
jecxz
ja
hlt
xor
and
jecxz
mov
shl
negb
lahf
sbb
jne
jg
arpl
sti
pop
testb
ds
mov
add
hlt
insb
incl
xor
jno
xor
loop
repz
jb
dec
sbb
mov
in
mov
add
xchg
aaa
mov
lods
push
lods
jmp
or
stos
pop
cmp
data16
mov
add
xor
test
pop
test
mov
xchg
mov
negb
daa
xor
mov
test
shr
cs
sbb
adcb
cmpsb
xchg
push
jl
inc
pop
jno
ret
mov
xchg
lods
fwait
outsb
mov
jmp
sti
test
or
insb
jae
fidivl
pop
mov
mov
mov
and
mov
dec
imul
sarb
push
sbb
lds
movsb
scas
lea
push
jbe
push
arpl
mov
divl
std
sbb
push
addb
aad
sub
out
xchg
out
pop
push
pop
out
cmp
push
adc
mov
jne
sbb
dec
xchg
dec
xlat
mov
sub
sbbl
or
scas
mov
fbld
push
add
jecxz
mov
dec
imul
test
or
out
cs
icebp
dec
repz
xchg
fsubs
cmpsl
imul
arpl
dec
pop
dec
inc
popa
jno
les
mov
add
sub
rclb
jnp
scas
sbb
cltd
dec
and
inc
inc
or
adc
fbld
gs
cltd
inc
rcr
test
loop
es
add
pop
inc
loope
stos
das
dec
and
sub
sub
nop
fidivrs
xor
mov
cltd
scas
mov
mov
jl
cmp
mov
leave
jno
aas
daa
inc
fsubs
jnp
scas
divl
mov
push
mov
jne
pop
add
fidivrl
push
xor
out
dec
push
subl
push
cmpl
adc
mov
lret
fdiv
dec
sub
xor
cwtl
xor
leave
je
outsb
sbb
sub
xchg
push
enter
jns
adc
mov
adc
cld
nop
pop
adc
mov
and
arpl
mov
jns
rclb
pop
mov
push
mov
cmp
imul
lahf
xchg
test
pop
mov
shrl
push
pop
push
cmp
test
std
xchg
xor
pop
movsb
lea
pop
lret
movb
movsl
xor
das
adc
rcll
xor
push
jmp
in
movsb
sub
shr
es
ljmp
movb
xchg
divb
lcall
sahf
push
jo
sbb
insb
pop
ret
pop
lods
mov
mov
jnp
fnsave
rcrb
sbb
jg
cmp
rcll
adc
sbb
push
xchg
sbb
mov
js
sbb
popa
dec
sub
jg
push
sti
dec
push
cmp
inc
lahf
mov
pop
int3
xchg
dec
ja
inc
ja
out
sbb
dec
aad
rcrb
outsb
dec
mov
test
int
cltd
xchg
divl
in
push
ss
sub
xor
dec
inc
fs
xor
xchg
xlat
push
push
mov
and
fcmovnb
pop
stos
scas
or
daa
clc
jns
sbb
loop
pop
pop
xchg
int
or
inc
mov
jne
dec
aam
aaa
mov
pop
cmp
ret
pushf
mov
push
arpl
or
pop
pop
lods
or
inc
cmpl
pop
addr16
push
nop
cmc
iret
lods
fdivrl
mov
shl
shrb
popa
neg
push
xchg
loop
leave
fldt
adc
pop
lahf
dec
add
inc
test
data16
je
inc
testb
fstpl
adcl
mov
jo
cli
dec
xchg
pushw
jp
test
push
pop
cmp
cli
jo
inc
adc
push
sti
mov
inc
and
stc
jae
lds
imul
lods
adc
adc
mov
or
scas
in
or
push
int
out
test
fisttps
mov
inc
scas
rcrb
out
aad
fcomi
pop
jmp
inc
xchg
repnz
xor
fcmovne
and
mov
fcompl
test
ss
mov
inc
popa
mov
mov
sarl
inc
add
mov
out
out
sahf
sahf
scas
mov
add
lret
popa
ret
and
cs
cli
test
fnstcw
xor
jo
ret
lds
jle
out
jecxz
or
pop
loop
aad
mov
pop
ss
insb
pop
out
jecxz
lcall
shll
jb
jge
mov
popa
adc
cltd
cmpsb
enter
aaa
sbb
rolb
pop
adc
cmp
push
outsb
lock
jecxz
sub
add
pop
pop
lods
adc
pop
xor
sub
dec
pop
sbb
addr16
cmp
adc
sbb
out
popa
adc
sub
lea
dec
add
adcb
or
stc
idivb
and
clc
push
lret
divl
sti
test
add
stos
arpl
cmp
and
fildl
dec
enter
cmpsl
add
adc
and
std
out
lods
addr16
daa
sti
sbb
push
xor
jp
inc
fs
pop
dec
ja
popf
push
and
insl
sub
xor
pop
mov
pusha
into
das
or
pop
and
hlt
jmp
inc
mov
mov
shl
mov
call
loop
repz
cli
cmpsl
into
das
adc
push
lods
mov
js
add
setp
or
pushl
leave
lods
test
movsb
mov
stc
je
sti
loope
enter
lret
and
int
push
dec
aas
inc
xor
daa
fisubrl
mov
xor
and
loope
lahf
push
xor
or
dec
ljmp
adc
jmp
pop
sbbb
lock
jp
add
jns
lods
jmp
insl
clc
scas
sbb
jmp
and
cli
lds
pcmpgtd
stos
in
pop
sarb
sub
out
test
mov
aam
gs
push
dec
outsl
iret
push
xor
dec
push
sti
outsl
in
pop
divb
add
mov
scas
mov
sub
cmpsb
ds
push
cmp
pusha
or
in
scas
and
popf
dec
mov
push
xchg
imul
fsubrs
int3
enter
cmp
jb
or
xchg
leave
addr16
movsl
gs
dec
adc
out
loop
dec
mov
hlt
push
cmp
xchg
out
mov
or
rcl
jl
mov
sub
jno
dec
iret
loopne
lea
sbb
ljmp
jmp
xchg
scas
xchg
sarl
pop
or
mov
mov
dec
add
adcb
sar
mov
jecxz
lea
jb
adc
sbb
clc
jle
push
test
mov
lret
jmp
jmp
push
mov
sub
cmpsb
mov
dec
sbb
jmp
push
insl
movsb
mov
out
test
pop
pushf
mov
xorb
add
pop
mov
push
loope
cltd
outsb
cmp
mov
jb
es
dec
int
out
sub
les
cmpsb
sub
shlb
fwait
pop
out
sbb
stc
xsaveopt
pop
inc
add
sbb
mov
fcomi
mov
jae
cmpsb
test
cmp
imul
sub
inc
dec
mov
fs
cmpsb
pop
xchg
add
ja
shrl
jns
stc
cmp
pop
jp
pop
push
repz
cmp
test
mov
leave
pop
cmp
lods
mov
or
add
daa
and
sub
dec
pop
int3
or
xchg
jl
xlat
push
and
push
lea
cli
xor
xchg
cmc
cmp
cmpsb
nop
xor
outsl
pop
out
add
movsb
subl
push
mov
roll
and
pusha
mov
jl
cmc
fbstp
divb
or
add
ret
int
and
cmp
ds
aaa
leave
clc
pop
outsb
sub
jo
int3
cmp
pushf
out
aaa
repnz
xchg
shl
ret
xor
sbb
outsl
inc
sub
push
inc
xchg
push
sub
dec
es
mov
rcrl
cltd
add
ljmp
cmc
inc
rol
shll
jne
inc
insl
dec
push
xor
xchg
add
add
mov
mov
mov
shufps
in
cmp
or
clc
xor
repnz
loope
sbb
int3
arpl
and
xchg
ja
std
jb
sub
jbe
imul
js
push
js
mov
stc
addr16
cmp
sarl
outsl
xor
add
and
and
jns
and
adc
xchg
mov
jb
push
test
popf
js
clc
mov
stos
cmp
adc
rolb
xor
cmp
cwtl
or
pop
hlt
lea
cmove
orb
mov
cmp
xchg
and
push
into
sbb
pushf
bound
xor
int3
repnz
gs
test
sbbl
xchg
insb
dec
fcmovnb
mov
lods
push
push
sbb
sysret
jl
andl
xchg
dec
out
xor
mov
test
cs
arpl
and
push
or
push
shll
xchg
movsb
adc
movsb
orb
lds
fldcw
cmp
mov
mov
add
dec
nop
out
jl
les
cmp
xchg
adc
inc
push
imul
lods
or
mov
imul
ficoml
dec
lods
lea
add
xor
cmp
dec
das
cmp
cmpsl
fiadds
daa
mov
lret
mov
dec
pop
ret
ja
mov
divss
add
inc
gs
cmpsb
jp
cltd
mov
and
and
fdivp
dec
mov
sbb
or
ds
pop
in
pop
arpl
push
dec
arpl
addr16
scas
inc
imul
sub
mov
js
mov
jae
push
adc
and
test
cwtl
add
aaa
stos
imul
push
sbb
inc
cmp
xchg
cld
jg
cmp
arpl
int
decb
sbbb
xchg
mov
out
js
push
es
cs
mov
xlat
add
dec
dec
add
test
xchg
cmp
js
loope
lcall
mov
adc
cld
or
movsl
gs
in
inc
sbb
inc
cld
popf
arpl
mov
ret
pop
mov
sub
out
dec
fucomi
outsl
mov
pop
ja
fucom
popw
aam
mov
cmp
push
xchg
lock
ret
stos
in
loop
or
and
pop
push
pop
dec
mov
inc
jp
sub
sbb
leave
push
lods
outsl
mov
jb
and
mov
arpl
data16
inc
mov
lods
cmp
sub
stos
dec
decb
ja
out
lds
jmp
mov
popf
jg
aaa
push
paddsb
mov
mov
or
jo
jge
inc
add
dec
sbb
jmp
icebp
jmp
mov
sar
repz
ljmp
stos
and
dec
mov
inc
jb
into
mov
push
xor
mov
lock
shrl
fnstcw
rclb
icebp
inc
fidivl
arpl
addb
dec
jns
std
push
std
add
jnp
imul
incl
cmp
inc
add
push
cli
push
cmp
jb
sbb
pop
es
and
dec
sub
out
aas
fsubs
mov
and
bound
cmp
imul
jbe
mov
sub
cltd
les
aas
jnp
add
test
or
jle
loop
pop
sbb
and
hlt
pop
aad
jnp
ja
pusha
push
shlb
dec
mov
stc
xor
xchg
dec
push
push
xor
cwtl
mov
mov
lahf
pop
enter
iret
iret
stos
xor
push
sub
loopne
nop
and
jmp
mov
xchg
sub
jge
stos
sbb
jne
add
mov
clc
pop
or
xchg
sbb
add
adc
mov
pop
and
pop
push
sbb
and
cmp
nop
ret
mov
push
mov
repnz
stos
mov
int3
sub
inc
sarb
fwait
out
outsb
lahf
mov
push
inc
xor
mov
mov
cmp
ds
insl
jmp
roll
mov
loopne
and
push
pop
out
mov
or
int
cs
nop
fdivr
dec
jp
ret
or
insb
jns
nop
adc
dec
xchg
ret
inc
mov
pop
hlt
and
loop
mov
leave
sbb
xchg
fildl
mov
cmpsb
jp
adc
fisubs
pop
and
cld
aas
mov
pop
pusha
push
and
dec
jmp
xor
adc
lcall
gs
repnz
push
imul
dec
mov
mov
dec
mov
push
icebp
inc
sti
add
jns
add
xor
sti
insl
jecxz
psrld
push
xor
rcr
fmuls
daa
dec
mov
fdivrs
add
cmpsl
cmp
jo
imull
movsb
popa
outsb
daa
sub
test
std
out
push
cmovle
pop
scas
xchg
rorl
mov
out
jae
adc
je
fs
rorl
xor
repz
xor
negl
repnz
movsl
mov
pop
inc
addr16
push
jno
cwtl
pusha
lds
je
sbb
incl
lcall
fstpl
enter
lahf
sarl
adc
mov
js
xorl
ret
xor
in
push
mov
jnp
je
push
mov
jg
pop
daa
pop
pop
lret
outsl
pop
fcoml
jle
mov
jecxz
pusha
je
lahf
xor
shrb
les
andl
shlb
mov
aad
outsl
xchg
repnz
ljmp
sbb
fcmovnb
iret
stc
fwait
cmp
stc
inc
hlt
int
inc
lods
inc
lahf
test
mov
xlat
mov
aaa
fimull
xlat
mov
or
mov
jb
mov
das
sahf
lods
adc
fidivl
or
testl
sub
push
pop
iret
ffree
push
adc
dec
mov
sbb
sub
std
push
mov
ds
cmpsb
and
cmpsb
push
stos
inc
mov
sub
adc
outsl
inc
xor
adc
pop
sbb
cmpsb
push
outsl
sbb
lock
xchg
jge
ds
lods
push
and
ss
xchg
cmp
stos
loop
test
mov
mov
sahf
ja
add
iret
loope
mov
adc
adc
cld
jg
fisubrs
mov
and
xlat
daa
pop
dec
fcmovnu
xlat
mov
cli
xchg
das
in
sbb
push
xor
jl
xchg
jne
outsb
push
pop
mov
mov
add
jmp
mov
pop
xlat
jmp
mov
xchg
jb
pop
cmova
pop
dec
and
add
mov
test
xor
push
xchg
stos
and
dec
pop
mov
cmp
popf
jae
xchg
jno
and
orb
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
jmp
inc
push
add
imul
push
inc
and
pop
bound
fcoms
clc
pop
cmpsb
dec
dec
xor
jecxz
pop
lret
mov
cwtl
or
cmp
push
imul
jle
or
adc
call
jecxz
fstps
fsubr
mov
push
addr16
movsb
mov
xchg
xchg
xorl
pop
sbb
push
roll
mov
sub
xor
xchg
test
out
inc
mov
pushf
loop
scas
stc
insl
enter
test
aad
xlat
scas
fimuls
lods
lret
mov
outsl
lret
pop
xor
adc
xlat
shrl
mov
push
push
mov
test
dec
pop
jl
sub
cmpsl
jle
cmp
add
lahf
sub
cli
lods
inc
xchg
sub
or
test
out
fstl
push
push
xchg
dec
push
dec
pop
in
loopne
push
lret
stos
fisttpl
sub
xchg
arpl
xchg
adc
adc
adc
xchg
xchg
mov
jmp
jb
call
or
jo
in
sti
jle
ss
xchg
dec
push
es
shl
mov
daa
lods
jb
inc
adc
mov
ljmp
xchg
stos
mov
or
fmull
jbe
sbb
and
aas
cmc
xor
inc
dec
xor
pop
rolb
jne
cs
xor
mov
cmp
in
fisubl
add
aaa
fsubrs
and
cmp
or
xchg
bound
pop
cmp
into
into
stc
lcall
mov
jmp
mov
jecxz,pt
popf
sub
hlt
test
add
test
cmc
sub
addb
cld
out
cmc
mov
nop
inc
std
mov
dec
filds
gs
jne
adc
mov
pop
jp
mov
fs
ss
sub
cmpsl
fldcw
cmc
pop
sub
sub
lcall
rolb
fwait
pop
dec
or
adc
add
dec
push
jg
fnstsw
mov
mov
cwtl
jg
pop
outsb
shl
xor
add
xchg
push
pop
xchg
push
insb
in
cmpsl
icebp
das
sbb
loop
lea
inc
adc
aad
gs
push
add
dec
jbe
lcall
add
cltd
jle
pop
and
fnstenv
icebp
pop
cmp
add
xchg
mov
xor
push
jbe
cltd
sub
ja
xor
mov
pop
sub
xor
xor
dec
lds
sbb
sub
ss
cmovo
fisubrs
mov
stos
ja
mov
loop
nop
pop
jb
mov
push
aad
popa
cmp
dec
mov
jmp
movsl
js
inc
mov
jmp
xlat
jo
push
jl
sub
rol
or
ret
and
mov
ja
fidivrs
pop
stc
test
cmp
decl
or
lret
inc
mov
xchg
sbb
sbb
imul
lods
pusha
rorl
cld
cmp
lahf
psrld
fs
daa
dec
gs
sub
xor
and
push
data16
mov
loop
sub
or
mov
popa
mov
mov
aaa
jmp
js
push
jecxz
xchg
fcomps
push
fisttps
mov
inc
aas
sbb
jp
rcll
lock
scas
xor
repz
fists
xchg
mov
in
xchg
jg
outsb
add
sbb
mov
and
mov
fadds
repnz
fistps
insl
cmp
sbb
inc
mov
push
dec
push
sbb
mov
adc
lahf
in
popl
rcrl
or
mov
mov
cltd
loope
xchg
sub
and
or
or
jae
or
filds
imul
aad
cld
int
stos
rcrb
jmp
mov
aad
test
cld
jmp
sub
pop
dec
aas
outsb
add
mov
sti
adc
popf
pop
cmp
mov
mov
scas
out
adc
or
or
mov
cld
add
int3
lea
out
addl
dec
repz
and
cmp
push
add
les
scas
cmpsl
fldenv
push
adc
add
popf
sbb
pop
inc
jecxz
pop
jl
rcrb
xchg
jmp
iret
mov
and
inc
lahf
cmp
cmp
ficoms
push
out
dec
cs
xchg
or
std
divb
xchg
or
shl
clc
cmc
inc
fisubrs
fwait
cmp
cmp
lret
cmp
mov
xchg
ret
stos
cmp
cmp
cwtl
outsb
or
stos
xlat
clc
push
and
mov
stc
adc
and
mov
xchg
xchg
push
lret
push
fcomps
mov
sbb
mov
jge
aaa
insb
pusha
nop
inc
imul
jo
icebp
pop
jle
adc
pop
inc
sbb
gs
inc
shl
cs
clc
cmp
pusha
dec
mov
cmpsb
cmp
js
pop
call
loopne
lea
cmp
lods
and
push
fidivrl
and
jae
xchg
rolb
push
sbb
pop
jp
and
sub
inc
cmpsl
xor
fdivp
orl
test
sub
push
sub
jne
mov
push
jo
xor
dec
xor
iret
jo
inc
lcall
idivl
iret
insl
fs
fwait
call
insb
movl
mov
rorl
jmp
leave
jbe
xchg
nop
or
dec
fdivr
aam
push
lret
push
int
dec
in
daa
xor
adc
notb
inc
xchg
idivb
stos
insb
test
stc
testl
das
inc
cs
insb
in
popa
sahf
jne
shll
inc
lcall
push
pop
cmpsb
mov
sub
pop
pop
sbb
filds
add
fnstenv
sbb
lods
sub
add
stc
push
mov
mov
fcompl
xor
out
push
js
sbb
js
cmp
or
lahf
cld
xor
and
lods
push
inc
sti
sub
out
pushf
jns
cwtl
ret
lcall
ja
mov
sti
jno
inc
lods
lret
imul
add
push
scas
std
fs
push
fucomp
test
test
or
inc
sbb
sub
push
jg
movsl
push
lret
inc
lahf
mov
jecxz
xor
lcall
scas
jecxz
xlat
cs
sbb
cmpsb
dec
lock
ret
pop
ja
pop
mov
aas
insl
dec
sbb
push
cs
dec
and
inc
lock
out
addr16
addr16
mov
test
adc
lods
loopne
sub
std
mov
lock
mov
aam
sbb
xchg
fadd
je
rdmsr
inc
jb
into
mov
jno
ja
out
or
xchg
cmp
mov
xor
mov
repz
std
aaa
lods
jg
inc
ljmp
orl
pushf
movsb
arpl
repz
movsb
insb
int
jno
jbe
aam
dec
jo
ret
arpl
pop
sub
jae
mov
jns
or
into
imul
adc
pop
aam
mov
decl
insl
push
enter
aad
rol
jg
or
lods
adc
push
mov
or
add
cmp
mov
insb
out
jno
in
call
cmp
mov
out
unpckhps
es
scas
mov
pop
pop
shll
mov
stc
fisttpll
mov
in
dec
xchg
sub
xor
aam
push
scas
mov
or
fucomip
dec
int3
out
imul
mov
daa
inc
push
pop
mov
imul
repz
js
jle
xor
stos
push
shll
mov
xchg
clc
pop
cmp
pop
or
sbb
fldt
xchg
dec
pop
pop
notb
loope
cmp
stos
test
inc
mov
xchg
pop
adc
lds
fs
popf
push
lcall
xor
xchg
dec
cwtl
lods
push
out
ret
mov
push
leave
imul
fucom
mov
lret
inc
iret
das
cli
lock
xor
xlat
dec
mov
popa
je
sub
mov
pusha
push
dec
push
jae
aas
add
out
dec
mov
mov
gs
mov
inc
popf
shl
lock
cmp
call
aaa
loope
mov
mov
sbb
pop
stos
test
dec
loopne
shl
out
sahf
jae
outsl
fdivrs
jbe
sub
fwait
out
pop
add
mov
ret
jl
cltd
in
cmp
fidivrl
fdivrs
mov
xchg
leave
loopne
mov
inc
mov
mov
icebp
and
adc
out
push
aad
jnp
xor
scas
in
or
lock
sbb
sbb
out
fistl
jp
xchg
lret
out
pop
mov
hlt
add
test
ret
mov
inc
pop
and
sub
pop
ficompl
jg
adc
adc
add
loope
out
ja
insl
mov
cmp
aad
sbb
inc
test
jmp
sub
push
pop
jg
fidivrl
in
mov
popf
mov
cmp
ds
call
mov
stos
mov
outsl
push
jbe
inc
xchg
and
pop
das
push
in
icebp
testb
mov
and
aas
inc
mov
sti
jmp
aad
int
cwtl
rcrl
jns
filds
aas
xchg
int
imulb
ret
sti
mov
xor
cmp
aaa
xorb
out
cmp
mov
pop
inc
mov
and
pop
cmpsl
mov
mov
xchg
sub
xchg
jl
sti
jle
push
ss
repnz
les
jecxz
add
xor
mov
mulb
jno
add
loope
pop
leave
push
sbb
mov
xchg
test
fwait
sbb
popf
mov
aad
push
xchg
sub
xor
push
clc
xor
mov
mov
mov
stos
mov
sub
jnp
and
aad
out
xlat
add
jp
fwait
push
test
inc
lcall
scas
xchg
outsl
pusha
cmp
inc
sbb
adc
mov
or
js
fs
sbb
cmc
mov
sbb
leave
mov
sbbb
add
sbb
fwait
push
mov
or
iret
sbb
in
rcrb
mov
enter
icebp
lcall
repnz
pop
rcl
imul
add
push
inc
mov
andb
ja
add
inc
mov
out
add
add
or
dec
std
jecxz
mov
and
sub
jecxz
mov
or
mov
lock
dec
mov
loop
lret
push
fdivl
push
jecxz
push
jne
sub
dec
push
mov
and
movsb
pop
add
and
pop
add
sub
bound
adc
shlb
xchg
test
int
fwait
push
stos
jecxz
arpl
cmp
int3
mov
test
aam
mov
dec
jb
dec
sub
bound
testl
mov
imul
push
popf
push
mov
push
mov
push
pop
incl
repz
add
or
xchg
pop
push
mov
xor
mov
ret
lock
dec
pop
xchg
or
jae
scas
enter
mov
sti
jnp
inc
or
aad
xor
fdivs
push
out
cmc
in
add
mov
scas
icebp
adc
inc
or
adc
enter
mov
cwtl
sub
mov
mov
fs
and
in
ljmp
lret
repz
adc
pop
and
xchg
jne
fld
cli
dec
jns
jmp
rcll
mov
mov
sti
xor
cld
pusha
xor
fistpll
add
adc
sub
jmp
mov
std
mov
fwait
push
sbb
lea
ficomps
xor
sti
push
or
cmc
push
shrb
mov
push
push
ljmp
dec
out
xor
int
sbb
mov
ffree
jbe
mov
enter
jle
testb
aad
dec
add
cmp
daa
mov
add
pop
dec
cmpxchg
cmpsl
dec
push
enter
es
sbb
arpl
jnp
push
push
and
loope
shr
sub
add
mov
push
sahf
push
adc
adc
xor
xchg
cld
mov
sbb
or
cmp
das
je
inc
cli
popf
mov
and
or
jno
test
mov
xchg
add
and
mov
or
mov
jne
mov
mov
outsb
push
push
or
mov
arpl
enter
fsubp
imul
dec
paddd
or
pop
leave
push
xchg
loope
mov
aam
adc
cmp
imul
push
xchg
mov
std
dec
mov
xor
push
add
faddl
nop
addr16
or
adc
jge
ljmp
lea
dec
outsl
pop
lea
cmc
mov
out
icebp
xchg
push
pop
mov
jns
add
mov
or
sub
addb
push
push
pop
jns
sub
fdivl
or
pop
cmpsl
mov
test
cmpsl
jno
mov
add
add
fwait
push
add
lock
mov
loope
test
orb
and
xchg
dec
cmp
jae
xor
rorl
adc
adc
scas
dec
adc
or
pop
or
cmp
int
jb
jmp
inc
in
jg
hlt
adc
in
mov
fdivp
ret
mov
cmp
scas
ljmp
and
stos
lock
xor
cmp
sub
mov
pop
or
cmc
pop
push
adc
push
mov
repz
lods
inc
nop
or
cwtl
dec
mov
lret
popf
je
sbbl
inc
enter
icebp
mov
mov
dec
adc
mov
xchg
mov
mov
mov
test
lods
js
mov
pop
loope
sarb
add
inc
scas
aaa
shl
sbb
jp
sbb
pop
aas
add
xor
jnp
and
and
push
hlt
jo
xchg
cmpsl
ficomps
dec
dec
ljmp
outsb
mov
mov
push
pushf
shll
adc
pop
push
adc
add
and
icebp
rolb
sub
mov
push
mov
sub
out
sub
pop
sbb
xchg
lea
add
mov
mov
jne
mov
jmp
mov
push
jg
ret
in
mov
ror
icebp
ret
sub
cs
mov
add
inc
sub
sbb
out
adc
aas
les
iret
fsubp
js
sub
cwtl
loopne
sbb
aam
push
add
jbe
sbb
or
mov
arpl
bnd
cltd
mov
iret
aas
les
mov
test
sub
cmpsl
pushf
push
and
fs
mov
pop
xchg
shll
xlat
sbb
push
loop
bound
fsts
cmpsb
lds
rcrb
rclb
pop
sti
xor
pop
fildl
sbb
xorb
fdivrp
shlb
mov
mov
ud1
jnp
inc
js
inc
adc
cmpl
adc
mov
sub
hlt
fstpl
mov
push
push
cs
push
cmp
andb
aas
out
es
cltd
mov
and
xchg
jmp
xchg
mov
pusha
mov
mov
movsb
cld
test
int
push
test
jbe
jae
sbb
jp
lea
add
in
lcall
leave
nop
aad
aas
mov
in
je
lea
add
leave
loop
repnz
stc
or
push
lods
call
fisubrl
loopne
cs
cmp
inc
push
adc
inc
and
ja
lods
ss
in
pop
xor
pop
inc
dec
cwtl
mov
push
add
sbb
dec
loopne
clc
pop
jp
test
inc
test
dec
ficompl
xor
lcall
bound
sub
mov
xor
pusha
mov
jg
mov
ret
inc
test
push
into
and
pop
mov
cmp
fstpl
out
ja
ja
pop
fisubl
int
call
enter
sbb
shl
jbe
out
insl
jecxz
or
in
hlt
inc
imul
lea
lods
add
push
jge
clc
fcomps
daa
fwait
movsl
scas
pushl
jnp
or
push
sahf
shl
cs
lea
pop
out
imul
jnp
mov
pop
pop
pop
add
test
cmp
out
push
loope
cmp
cmp
icebp
js
inc
negl
pop
mov
insl
and
fdiv
pop
add
ljmp
stos
outsb
test
fisubs
xor
in
call
stc
js
mov
inc
xor
out
sbb
dec
mov
dec
clc
ss
mov
inc
and
arpl
nop
inc
cmc
ljmp
out
mov
pop
xchg
or
cmpl
out
movsl
sub
xchg
mov
mov
loopne
ljmp
push
insl
mov
ret
icebp
shrb
mov
in
xchg
out
sbb
int3
mov
mov
xor
fbstp
mov
inc
pushf
loop
cmpsb
inc
sbb
xor
leave
sbb
int
cli
rcll
repnz
out
dec
mov
mov
and
xchg
or
in
sbb
xlat
xchg
lret
jno
jae
mov
jle
add
lods
leave
sbb
std
xlat
mov
ret
movsl
inc
inc
gs
call
fs
stc
sub
iret
xor
clc
sarl
fcmovnbe
mov
adc
push
cwtl
cwtl
fs
cwtl
aaa
mov
and
sub
adc
mov
sub
push
sub
fmuls
cmp
test
xchg
mov
sub
jno
add
pop
inc
ficompl
mov
jl
xor
je
movsb
mov
push
in
bound
jne
mov
pop
sbb
js
mov
and
cmp
adc
dec
cmpsl
inc
test
mov
fwait
and
pop
jg
lods
lods
pusha
xor
dec
pop
hlt
lahf
jne
enter
or
lea
lods
add
add
dec
jle
xchg
stc
in
inc
repz
cld
cmpsb
divl
xchg
mov
ret
cmpsb
das
mov
pusha
pop
in
into
loopne
jmp
cld
in
or
out
out
subb
push
daa
enter
xor
dec
les
push
jecxz
inc
add
pop
insl
or
out
fdivl
insl
imul
pop
add
push
enter
into
stos
outsb
mov
lods
sbb
ljmp
movsl
xchg
push
aas
push
mov
mov
int3
icebp
sub
lcall
mov
mov
sub
sbb
rcll
add
xchg
xchg
daa
ret
adc
sbb
inc
adc
push
addb
jb
xchg
and
xchg
pop
sub
mov
lcall
mov
add
sub
pop
mov
fisubl
xchg
cld
jmp
cmp
shl
fcomip
rcl
add
cmpsl
scas
mov
sbb
test
mov
inc
push
imul
ret
les
ljmp
push
add
lcall
dec
dec
pop
insb
mov
jno
add
mov
xor
dec
movsb
jg
cmp
xchg
ljmp
jo
or
mov
pop
ljmp
and
sbb
mov
in
lea
movsb
jg
mov
and
iret
dec
es
jns
dec
int3
aam
dec
je
or
pushf
out
mov
div
out
repnz
in
stc
cltd
xchg
mov
pop
mov
cs
cld
xor
in
sub
sub
cmp
test
shrl
addr16
dec
arpl
jo
jnp
xor
add
add
adc
jecxz
xchg
bound
pop
repz
or
pop
cmpsb
cli
sahf
sti
loop
sahf
inc
add
mov
in
mov
cwtl
or
and
xor
jne
ret
scas
sub
or
mov
mov
les
movsb
dec
icebp
test
test
lea
lcall
scas
aam
add
in
add
popa
bnd
lret
pop
push
hlt
and
je
lods
enter
ret
push
outsl
stos
rcll
push
mov
fbld
mov
jae
das
lods
push
add
push
pop
in
andb
int
xor
dec
push
or
sarl
aam
hlt
addl
arpl
adc
insb
lds
in
mov
dec
insl
jbe
push
inc
lret
out
aas
mov
lods
jne
cli
and
loop
aam
cltd
sbb
mov
xchg
rcrb
repz
mov
loopne
inc
jmp
loop
add
pop
push
popf
or
mov
bound
xor
fimull
and
cwtl
cmpb
insb
out
mov
cli
adc
addl
test
or
mov
das
pusha
or
cmp
jns
loop
or
icebp
sub
and
call
clc
inc
rcll
arpl
ss
aas
clc
fldl
cli
xchg
sarl
jb
popaw
and
mov
leave
idiv
ret
hlt
imul
push
jo
iret
jecxz
bound
imul
xor
xchg
fs
loope
es
push
dec
insl
icebp
sbb
inc
jne
outsb
inc
bound
jb
loop
cmpsl
test
sbb
sbb
xchg
int3
into
adc
fiaddl
sub
jno
shl
pop
mov
push
leave
cli
xor
xchg
int
fwait
sbb
dec
in
cmp
or
push
mov
sub
jecxz,pn
lahf
sarb
jns
cmp
daa
rorl
stc
cmp
xchg
es
adc
cld
int
mov
jnp
lret
fwait
jl
in
mov
aaa
push
sub
dec
cli
xor
repnz
mov
xchg
loop
mov
pushf
jne
fisttpl
mov
and
aas
loope
cmp
das
xor
mov
dec
iret
es
loopne
and
das
mov
stos
idivl
add
push
or
mov
jmp
movsl
lock
sub
into
scas
out
pop
ret
pop
icebp
or
pop
movsb
rolb
shlb
xchg
xchg
inc
dec
mov
cwtl
ja
pop
cli
push
mov
cwtl
adc
cmpsl
pop
lods
out
inc
dec
sar
stc
dec
js
mov
sti
mov
ljmp
sub
ror
jae
xor
lds
imull
inc
mov
andl
xchg
adc
cli
xor
popa
fildll
sub
not
stc
rorl
cmp
lods
stc
dec
xor
inc
adc
mov
sub
sbb
ja
pop
loope
aad
inc
je
fdivr
lock
dec
mov
pop
push
cmp
lahf
cmp
jb
bound
repz
and
xchg
andl
jl
push
in
xchg
push
xchg
ja
fmull
leave
jecxz
mov
cmc
addb
aad
xchg
stos
mov
mov
add
clc
add
popf
jno
fwait
mov
fildl
stc
mov
mov
enter
jl
js
jnp
shrl
sbb
pop
bnd
sbb
popf
pushf
and
sub
das
stc
icebp
fdivrl
push
inc
add
repz
fimuls
sahf
and
jae
cmp
jle
sti
inc
cmp
shl
push
test
loop
mov
xchg
rcl
cs
inc
outsb
lds
pop
pop
in
jno
gs
cmp
test
mov
sub
xlat
mov
cli
dec
sbb
ror
or
mov
mov
mov
sahf
test
leave
push
mov
mov
inc
dec
imul
mov
push
test
add
test
pop
imul
push
jne
push
mov
ljmp
sbb
popa
loopne
sub
repz
or
sbb
mov
sbb
test
xchg
inc
and
enter
vpshad
jnp
fsubl
lahf
cmp
into
divb
iret
inc
test
pop
movsb
xchg
cld
mov
sbb
shr
icebp
mov
push
int
inc
aas
push
mov
dec
xor
daa
push
aam
aad
inc
mov
push
jns
das
and
xor
fiadds
push
fsubp
pop
in
in
adc
or
or
dec
sub
call
flds
xchg
andl
mov
cmpps
movl
jne
jo
pop
fwait
pushf
into
push
lock
pusha
movsl
mov
adc
xorb
mov
es
shll
mov
adc
in
jl
es
sbb
cwtl
xor
std
pop
addb
fidivrl
pop
and
xor
jge
jmp
arpl
mov
sbb
inc
jns
jo
sbb
dec
mov
stos
out
add
push
clc
adc
out
mov
aas
and
mov
and
and
call
es
or
dec
ret
sub
mov
ja
xchg
neg
mov
popa
mulb
mov
adc
jmp
paddw
push
or
or
mov
mov
sub
xchg
sbb
push
lods
icebp
arpl
inc
adc
test
cs
xor
mov
enter
xchg
inc
mov
test
adc
adc
in
fbld
dec
movsl
cmpsl
fldcw
adc
add
or
jecxz
loope
mov
in
pop
mov
popf
int3
pop
xchg
sub
pop
js
mov
push
out
stc
lock
into
inc
scas
jb
out
push
in
fmull
ret
push
clc
sbb
ds
jecxz
pop
rcll
std
sti
out
js
jbe
addr16
or
testl
test
sbb
inc
movl
mov
xchg
cmp
es
and
cmp
adc
sbb
mov
or
and
loope
loope
popf
dec
push
push
out
jo
les
inc
mov
pop
pusha
lods
adcl
add
add
mov
fs
push
push
fstps
and
fdivrl
or
mull
mov
pushf
jg
adc
andb
aad
mov
jbe
inc
cmp
sub
xchg
movsb
push
nop
dec
aad
fdivrl
inc
cmpsb
mov
and
aam
pop
mov
and
adc
xchg
mov
inc
std
movsb
lea
nop
mov
xchg
aam
jno
rep
aad
mov
subl
and
and
mov
mov
dec
pop
mov
mov
push
sbb
pushf
lret
and
in
fsts
fsubrl
cmova
invd
xor
pop
mov
ror
mov
icebp
loop
xchg
pusha
ja
mov
and
fs
mov
adc
mov
outsb
inc
cwtl
fdivp
cmpsl
lods
jp
lods
jmp
and
or
mov
jle
rcr
out
fnsave
mov
int3
lods
popa
cmc
jnp
xchg
jns
adc
jno
outsl
push
in
jnp
and
insb
repnz
adc
popf
fs
daa
pop
js
cmc
imulb
xlat
mov
add
orb
rcl
and
jecxz
mov
inc
scas
lahf
mov
inc
es
mov
xor
cmp
insb
std
jno
icebp
pop
ljmp
pop
in
mov
cs
sub
pop
cmpsb
adc
sbb
mov
ret
and
movsl
sub
cmpsl
cmpb
out
push
cld
insb
inc
imul
dec
mov
pop
shrb
or
movsl
imul
into
add
lods
daa
adc
call
popa
sbb
arpl
inc
decl
icebp
rol
inc
out
pop
add
push
stos
and
dec
cmpsb
rolb
and
loop
pop
jnp
cld
andb
mov
add
or
cmp
in
sub
and
adc
aad
adc
xchg
pop
clc
sysexit
leave
adc
jg
jmp
lahf
fnstenv
and
or
xchg
int3
inc
xor
imul
pop
adc
adc
loope
sti
pusha
dec
and
lds
test
push
or
mov
test
mov
repz
mov
mov
fiaddl
ja
push
mov
mov
cmp
je
mov
xchg
insl
insb
sbb
or
add
popa
xor
fucomi
leave
cmp
inc
dec
and
dec
and
add
xlat
fbstp
push
int3
shl
xchg
rcrl
sbb
mov
push
sbb
or
into
pusha
int3
sbb
push
dec
jae
mov
pop
mov
mov
pop
subb
jg,pn
pop
or
fstpl
dec
sub
jl
mov
cli
movsb
sbb
jl
mov
arpl
in
sub
cmp
push
pop
not
or
in
iret
pop
sahf
lcall
cld
out
outsb
mov
cmp
jbe
or
xchg
cmp
popa
add
jl
jl
push
sbb
mov
dec
int
sahf
imul
cmp
cmp
pop
test
mov
and
insb
arpl
lods
insl
xchg
icebp
out
movsl
out
test
outsl
mov
sbb
outsl
inc
inc
adc
dec
data16
mov
pop
cmp
push
outsl
inc
push
aam
xchg
adc
mov
cli
loop
inc
fisubs
imul
inc
loopne
push
fisubs
pop
push
pushf
mov
cmpsl
or
xchg
in
push
or
in
rorb
and
in
out
pop
mov
cmp
xor
sub
add
repz
xor
xor
adc
pop
out
xchg
incl
dec
mov
in
int
int3
adc
int3
insl
sarl
pop
jne
xorb
dec
mov
dec
jo
sub
sti
jnp
call
inc
mov
inc
or
mov
xor
push
pop
mov
mov
mov
xor
inc
sahf
inc
lods
mov
mov
aas
shl
mov
push
jo
roll
sub
xchg
lock
inc
push
or
mov
mov
adc
scas
lcall
imul
mov
add
das
stos
mov
stos
aas
rcll
mov
mov
xor
adc
orb
in
mov
xchg
sbb
jne
sbb
pushf
sub
leave
ret
push
mov
movl
movl
pop
jmp
xor
orl
inc
ret
push
mov
sub
sbb
mov
mov
add
mov
dec
movl
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
mov
xor
push
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
andl
mov
movl
push
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
dec
mov
xorl
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
sub
adcl
push
orl
push
sbbl
push
push
andl
lea
push
notl
push
xorl
jmp
movsb
xchg
sub
out
arpl
pop
lds
sbb
cmp
bound
sarl
mov
pop
cmc
mov
sub
inc
push
or
orb
test
adc
clc
movsb
fucomip
out
enter
jecxz
mov
popa
xchg
mov
repnz
int
pusha
adc
lea
in
lcall
sbb
sub
cmpsl
dec
xor
sub
cmp
fsts
xor
cld
mulb
jno
cmpsb
push
cmp
addr16
enter
and
dec
in
jl
push
pop
rcrl
jnp
lcall
fstpl
mov
dec
in
dec
inc
or
dec
jns
jecxz
outsb
mov
call
fnstsw
ja
xor
mov
imul
loop
or
mov
push
mov
inc
mov
pushl
xor
adc
inc
fbld
mov
pusha
mov
xchg
mov
cltd
sub
xlat
xchg
stos
and
xchg
scas
and
push
xchg
dec
je
sahf
push
shll
dec
mov
mov
sbb
rolb
cmp
or
cmpsb
das
addb
sbb
ds
and
sbbb
add
xor
retw
and
scas
daa
adc
xor
mov
add
and
rolb
jo
jns
add
inc
int
hlt
mov
hlt
pushf
xchg
fdivr
es
inc
movsb
mov
fistl
jle
addl
aas
add
or
cmp
mov
cmp
cmpb
dec
arpl
and
lods
push
inc
gs
in
in
inc
or
insb
out
fs
arpl
out
jne
sub
adc
mov
sbb
mov
jne
out
outsl
mov
pusha
or
push
push
add
sbb
mov
popa
xchg
pusha
aas
jb
or
push
mov
pop
mov
mov
mov
sub
and
mov
mov
int
jmp
pop
std
inc
movsb
sub
cwtl
cmpsl
jmp
in
test
push
mov
sub
mov
dec
mov
xchg
dec
aad
cmp
mov
aaa
or
popf
pop
xor
sbbl
bound
push
pushf
sti
sbb
inc
js
sub
movsl
mov
ret
pushl
shlb
and
loop
mov
mov
sbb
adc
push
pop
mov
mov
push
dec
push
das
mov
outsl
inc
cs
mov
fadd
and
adc
das
sub
fs
mov
mov
std
push
aad
outsb
and
sbb
fildll
and
loop
push
nop
inc
mov
push
pop
inc
sub
mov
out
cmp
and
or
pop
and
fs
cmp
add
and
xchg
ret
mov
mov
andb
cmpsl
push
mov
lahf
aam
mov
xchg
pusha
out
fidivrl
and
into
push
mov
mov
push
lea
invd
sub
xlat
jmp
sub
cmp
nop
xadd
pop
pop
sbb
imul
xor
add
popf
inc
pop
jb
lock
push
repz
and
add
add
js
bound
push
arpl
pop
out
lods
xchg
rcll
sbb
ret
xchg
xor
inc
or
cmp
push
pop
lahf
sub
aas
inc
mov
cli
xchg
insl
push
pusha
aam
iret
insb
push
and
xchg
fstpt
loope
ja
xchg
mov
addr16
insb
test
pop
sbb
mov
dec
nop
push
add
lcall
xchg
mov
cmp
lods
in
inc
adc
pop
daa
les
mov
cmpsb
xorb
std
stc
mov
mov
dec
sub
mov
ficoms
das
stos
xchg
pop
arpl
adc
cmp
mov
lods
int3
test
lock
push
dec
fs
shll
outsb
inc
fcomp
cmpsl
mov
inc
jp
pop
mov
mov
add
in
push
xchg
push
adc
pusha
sub
sub
inc
stos
addr16
push
aam
mov
lahf
pusha
cmp
into
push
lahf
and
ja
stc
push
movsl
lret
insl
xor
or
rcr
data16
push
push
lock
pop
int
add
push
gs
cli
rcrl
sub
loop
int3
stos
ja
xor
sbb
lret
jl
stc
jo
push
push
cwtl
sub
stc
xor
int3
push
outsb
jg
pop
cmp
lods
stos
out
rcrl
xlat
push
mov
xor
not
and
addr16
ljmp
cmc
das
cmpsb
addr16
adc
repz
add
add
push
fwait
popa
inc
outsl
and
ljmp
pop
xchg
xor
dec
in
xchg
int3
outsb
and
mov
pop
jp
int
push
mov
lret
xchg
cmp
pop
jno
pop
mov
adc
sub
dec
pop
jp
sahf
loopne
pop
mov
jmp
pop
mov
cmp
and
inc
push
movsb
int
shrl
or
and
fcmovnbe
lcall
push
xor
add
pop
xchg
or
mov
cli
and
xrelease
mov
jae
das
xchg
insl
cmp
out
out
cwtl
sbb
loop
sbbl
les
cs
fisubrl
dec
dec
sahf
ljmp
mov
push
sbb
jne
push
sub
imul
pop
xor
cmp
xchg
ljmp
ljmp
jo
std
ficomps
push
cmp
xor
popa
js
and
inc
insb
lods
lahf
cmpsl
or
jmp
and
push
dec
aad
mov
daa
pop
sub
dec
jbe
mov
cmp
dec
sub
add
out
add
ror
mov
sub
out
xchg
dec
ret
push
mov
add
mov
sbb
iret
andb
aad
inc
add
loop
cmp
jo
enter
insb
inc
gs
dec
mov
daa
xchg
call
mov
dec
xor
not
out
mov
ja
sbb
add
dec
jl
mov
jns
es
fstpl
cs
sub
or
and
push
jns
mov
ficoml
rorb
jae
push
push
lea
cmp
in
lods
pop
lods
aaa
or
mov
cmc
push
xor
pop
dec
adc
sub
mov
jno
mov
js
cmpsb
dec
jg
orl
xor
addr16
clc
ror
pushf
cmpl
insl
and
adc
mov
divb
xchg
test
pop
adc
mov
push
sarl
xchg
lods
mov
shrl
and
out
xchg
dec
mov
pop
push
int3
mov
push
imul
xchg
popf
jo
movsb
fbld
mov
push
mov
loopne
movsl
ljmp
pop
sub
lds
pop
imul
sub
mov
lock
int
scas
dec
inc
xor
into
std
pop
push
arpl
imul
cwtl
cmp
and
les
adc
dec
decb
cld
pusha
jo
out
fnstenv
push
push
in
inc
push
fdivrs
xchg
pusha
mov
inc
movl
sub
mov
in
ss
fldcw
lret
nop
loope
nop
pushl
incl
mov
test
push
stos
mov
pop
in
jnp
pop
mov
push
out
push
mov
sbbl
stos
or
or
out
jno
lcall
cld
jg
xchg
repnz
add
jbe
or
xor
mov
cmp
mov
inc
int3
mov
dec
icebp
ret
clc
lret
pop
sub
mov
mov
insl
xor
mov
std
sub
clc
decb
xor
call
cmp
dec
jnp
lds
movsb
sub
scas
es
arpl
inc
dec
jae
and
sbb
push
ficoml
adc
mov
rorb
sarb
sub
shll
imulb
mov
cmp
notl
jl
mov
jo
sbb
fs
mov
cli
dec
xchg
les
adc
adc
lret
lahf
dec
jae
mov
or
aas
pop
cltd
jmp
icebp
imul
repnz
je
inc
test
aad
fcmovnu
xchg
xchg
xchg
pop
aaa
xchg
movsl
scas
and
fimuls
pop
loopne
sub
inc
dec
movsl
xchg
mull
jo
cmp
hlt
cmp
push
ss
push
insb
adc
pop
sbb
cmpl
fildl
shrl
cmp
pop
pop
dec
pop
cmpb
xchg
cmp
ja
aaa
loope
cmc
jbe
repz
aam
icebp
push
inc
xor
sub
out
push
inc
mov
jl
aam
nop
pop
mov
in
xchg
push
shlb
aam
out
and
and
nop
ret
or
push
dec
cwtl
and
ja
clc
imul
add
sbb
in
sub
les
xorb
push
out
push
mov
pushf
xchg
mov
shr
mov
add
data16
sbbl
call
cmp
test
jp
jge
es
arpl
cmc
lret
jmp
mov
scas
pusha
xchg
inc
lock
or
mov
xor
shr
loopne
ss
lock
sti
les
lods
jl
jle
fdivl
add
test
and
pusha
jae
xchg
mov
rolb
cs
shll
mov
scas
rcrl
out
aas
push
mov
sbb
daa
or
fsave
pusha
repz
int3
xlat
jmp
mov
push
mov
lods
loopne
push
rclb
jb
mov
mov
pop
int
int3
enter
sti
and
xchg
sarl
push
cmpsl
imul
and
xchg
cmp
mov
xchg
dec
jle
cs
lret
mov
add
jo
adc
sub
pop
fisubrl
cmpsl
shll
jno
lods
mov
lods
dec
mov
movsl
pop
inc
xor
pushf
xor
pop
ss
icebp
aam
mov
adc
sub
mov
test
or
fbstp
mov
or
mov
sarb
push
jns
mov
daa
loopne
push
stc
int
mov
les
pop
mov
push
fmull
sbb
and
adc
addr16
sbb
add
cld
call
int3
jb
inc
into
push
test
sbb
push
scas
xchg
lcall
repz
cmp
test
jae
jne,pn
mov
mov
gs
mov
inc
cmp
clc
push
scas
rorb
and
aaa
mov
push
cmp
sub
in
cmp
push
push
cmpsb
xor
inc
xchg
std
inc
inc
pop
lds
mov
or
add
mov
xor
cmpsb
hlt
add
pop
push
movsl
loope
out
mov
mov
jno
mov
cs
fs
lea
sbb
sub
movsl
push
fcmove
adc
lds
jl
sub
in
dec
mov
xor
loop
enter
mov
in
and
pop
sbb
sbb
xor
fs
fldcw
ret
pop
xchg
icebp
pop
sbbl
scas
js
imul
sbbb
aas
sahf
iret
imul
fwait
into
bound
dec
fnsave
icebp
test
hlt
jl
lock
cmp
fmul
ficomps
and
test
cwtl
lcall
into
and
push
jmp
sub
sub
pop
fldcw
insb
das
outsb
ds
sbb
in
rolb
cld
xor
mov
insb
sti
lret
push
rol
ss
lds
pop
xchg
adc
mov
adc
arpl
cltd
nop
pop
or
mov
jge
cmpl
dec
or
adc
or
push
adc
and
sub
jl
rorl
arpl
movsb
sbb
es
dec
stos
mov
data16
dec
ret
dec
jne
pop
xor
lret
and
adc
mov
int
push
jecxz
push
or
stos
rclb
sahf
push
push
sub
incb
or
add
les
xchg
movl
add
jp
movsb
mov
stos
loop
dec
and
outsb
into
sti
mov
daa
inc
scas
js
in
xlat
and
cmp
or
mov
cld
mov
fwait
scas
jnp
jecxz
aaa
cvttps2pi
lods
jle
xchg
ljmp
pop
popf
push
test
pop
jnp
jmp
or
cmp
sub
roll
pop
mov
jl
mov
in
inc
hlt
jge
inc
cld
cwtl
pop
adc
and
xchg
mov
movsb
lret
or
adc
add
xchg
sti
insl
adc
inc
jmp
iret
frstor
push
mov
sub
push
test
cltd
xor
mov
xorl
stc
xor
and
adc
mov
out
insb
cmp
inc
mov
jo
sbb
mov
push
inc
cs
or
jnp
mov
push
ret
lahf
cmp
pushf
xor
push
jns
out
mov
fstpl
xchg
lods
nop
push
negl
ret
lods
testl
orl
add
fdivl
pop
leave
insl
xchg
sbb
movsl
jp
test
rorb
bound
in
add
xor
lret
push
aam
inc
mov
dec
addl
lods
xchg
jmp
sbb
dec
sub
loop
dec
out
jnp
sbb
arpl
sbb
popf
pop
pop
jmp
xchg
aaa
call
push
or
loop
jmp
mov
shrb
scas
ss
inc
idivb
add
and
jb
aad
cld
jo
inc
les
lret
mov
inc
roll
mov
aaa
pushf
pop
mov
movsl
pop
jl
xchg
test
das
and
push
shlb
dec
dec
sbb
rcrb
xor
mov
js
pusha
aas
xor
call
push
mov
push
movsl
lods
mov
cs
stos
int3
add
sbb
ljmp
xchg
ds
push
pop
out
pop
lds
imul
aas
ficoms
ret
cld
fucom
loope
inc
data16
mov
pusha
inc
sub
dec
out
and
mov
add
jle
inc
lret
popa
movsl
cmc
or
arpl
jns
and
popf
dec
fcoml
out
sbb
add
xor
sahf
cld
mov
movsb
mov
lcall
fxam
sub
jmp
test
push
addr16
repnz
repz
inc
mov
adc
test
mov
unpcklps
hlt
cmp
lret
aam
sub
jo
sub
aaa
outsb
leave
stos
inc
add
notb
jge
mov
jb
aad
fisubrl
xor
push
sbb
dec
and
add
gs
ret
inc
adc
les
dec
leave
shll
out
push
idivl
outsl
adc
mov
adc
lock
es
adc
or
xchg
add
loope
scas
cmp
jp
out
iret
mov
sti
jo
sub
test
sbb
outsb
lods
push
imul
shrb
mov
fs
lea
pop
sub
jmp
out
or
xor
xchg
inc
jge
jle
or
loope
clc
inc
xchg
adc
mov
jmp
sub
int
jno
pop
int
fbstp
das
cmp
push
pushf
xchg
imul
pop
sub
outsl
inc
aaa
mov
inc
aas
add
fisubl
loopne
pop
cmpsl
xchg
mov
push
movsb
adc
das
in
jp
leave
repnz
push
or
movsl
mov
pop
or
mov
push
add
movsb
xor
lahf
loopne
mov
and
fbld
pop
mov
nop
dec
and
out
sub
mov
cmp
loopne
fnstenv
outsl
xchg
data16
and
es
out
jb
aam
mov
scas
movsb
out
mov
sbb
pop
jmp
sub
fbstp
int
jmp
or
out
decl
xchg
icebp
mov
ret
loopne
out
mov
sti
scas
loopne
test
aad
pop
mov
in
mov
add
fs
inc
sahf
rcr
daa
sub
sub
sub
and
mov
jns
mov
inc
test
in
cmp
xchg
sbb
iret
insb
ret
sti
int
xor
pop
jnp
loopne
int
cmp
lock
ret
adc
inc
inc
add
mov
and
nop
or
inc
inc
cli
cwtl
out
xchg
mov
dec
mov
lret
call
sub
mov
mov
sbb
dec
pop
push
cmp
jo
mov
and
pop
loopne
cmpsl
inc
in
sbb
es
or
sbb
imul
adc
sbbl
daa
int
mov
add
or
out
testl
imul
jns
push
frstor
sahf
adc
inc
out
jge
test
xchg
inc
daa
jl
mov
popa
pop
stc
xchg
cmp
imul
sbb
or
jb
movsl
jb
mov
fbstp
sti
fbld
lcall
test
sbb
test
movsl
jbe
test
repnz
jb
push
sub
dec
or
xchg
jmp
sub
jae
or
sub
xor
imul
test
rolb
fdivrs
imul
out
push
iret
pushw
sahf
ficomps
test
jg
iret
push
pop
add
adc
jb
xor
cmc
cld
rcrl
xor
pop
inc
in
mov
outsl
add
inc
imul
aad
lcall
pop
mov
test
mov
dec
out
jmp
inc
mov
jecxz
int
fdivrs
lds
push
push
sbbl
pop
xchg
clc
mov
andl
xlat
mov
hlt
fdivr
sbb
or
mov
xchg
mov
mov
jne
lds
adc
add
xor
ficompl
sbb
xor
popa
add
fimull
test
mov
pusha
into
leave
sub
fcmovb
pushf
pop
mov
or
jle
subl
add
xor
sub
dec
xor
pop
inc
sub
test
shlb
mov
in
mov
test
fldt
pop
add
loop
jno
dec
inc
imul
int3
mov
mov
mov
xchg
icebp
mov
scas
or
lds
mov
dec
and
push
stos
dec
jecxz
cmpl
mov
sub
imull
xor
orb
ja
dec
lods
fstps
pop
cmp
pop
and
fsubrp
in
js
adc
add
push
jnp,pn
push
cmpsb
test
sub
adc
mov
push
adc
fwait
das
lahf
and
fsubr
jno
das
in
lea
popa
ljmp
shrb
cmp
fsubr
push
fistps
ja
cmpsb
inc
fistpll
or
mov
pop
dec
out
add
xchg
aad
jmp
pop
cmp
pop
xor
inc
cmp
mov
push
jmp
and
in
or
pop
xchg
push
icebp
sbb
lock
sub
mull
addl
mov
fwait
test
insl
cmp
out
add
repnz
adc
shll
arpl
xor
sbbb
test
sbb
loope
jecxz
pop
repnz
jnp
cmp
jp
and
pop
insl
das
stos
mov
mov
in
jnp
or
cmp
stc
jns
daa
ret
test
test
je
dec
sub
gs
push
mov
pop
shl
mov
jne
gs
mov
in
lahf
jne
orl
sti
inc
push
ss
enter
cs
add
xchg
dec
cltd
mov
cmp
fnstsw
push
in
xchg
lods
std
pop
mov
daa
pop
inc
jnp
inc
dec
sarl
mov
jg
lret
jge
mov
das
gs
lcall
int
sbb
xchg
lahf
xchg
push
mov
mov
test
gs
xor
cmc
sub
jbe
stos
jnp
push
add
adc
aam
mov
ficompl
mov
xchg
mov
push
lahf
dec
fistps
mov
das
movsb
sub
push
adc
push
adc
rcl
shll
scas
mov
bound
pop
pop
mov
inc
push
testl
repz
es
fnsave
roll
mov
mov
add
mov
and
mov
movsl
in
aas
inc
fidivs
fstpt
cltd
popf
sahf
popf
cmpsl
mov
jb
inc
dec
push
imul
sub
pop
xchg
sbb
cs
pop
fmul
arpl
pop
in
mov
and
mov
lods
xchg
jns
push
add
adc
mov
xor
ret
or
cmp
imul
add
imul
daa
shr
adc
pop
xchg
add
push
push
jbe
dec
push
test
pop
xchg
cmp
add
jb
andb
test
xlat
add
cmp
sbb
test
pop
test
pusha
and
mov
fsubrp
fstpl
call
sbb
inc
mov
inc
mov
hlt
mov
mov
mov
xor
sbb
rclb
sub
sub
xor
outsb
cmpsl
inc
jp
jp
inc
fcmove
imul
push
fs
jle
ljmp
jbe
jns
mov
add
dec
insb
loope
sub
push
clc
cld
pusha
push
xor
and
cmp
test
out
loop
cld
cmpsl
jle
ret
dec
and
mov
pop
xor
cmpb
movsl
imul
xor
std
or
inc
fcmovnbe
jg
scas
pop
mov
pop
pop
dec
or
mov
fs
inc
adc
in
jnp
lock
cli
gs
in
sbb
xor
gs
push
into
scas
outsl
inc
sbb
sub
xchg
cmp
dec
cmp
in
inc
cmp
pop
inc
xchg
icebp
or
sahf
idivb
jg
fs
mov
lods
inc
jl
pop
xchg
lods
pop
gs
fsubs
mov
fnstcw
fdivrs
stos
lock
aaa
adc
sub
ljmp
sbb
mov
cmpsb
shl
int
pop
sub
xchg
or
sbb
test
xchg
into
dec
jo
aam
pop
and
and
inc
mov
sbb
stc
dec
mov
xor
adc
and
push
insl
or
inc
inc
pop
divb
andb
add
xor
mov
mov
out
rcl
adc
test
stc
mov
inc
xchg
fdivp
jl
sub
popf
cmp
cld
lcall
arpl
lock
fmuls
jae
les
mov
pop
fs
or
xor
into
pop
xchg
lea
push
lret
adc
leave
cmp
mov
push
mov
test
mov
insl
sbb
test
packuswb
or
int3
lcall
mov
outsb
or
movsb
cmp
rcl
cmp
add
inc
cmp
mov
push
fcom
repz
lods
sbb
flds
push
divl
inc
xor
lds
insb
ret
pop
xchg
std
or
outsl
gs
js
sub
mov
push
mov
inc
push
or
mov
inc
fnstsw
in
test
shr
jp
xchg
je
fstpt
mov
mov
mov
mov
dec
and
or
aas
movsb
push
test
enter
in
ret
ret
xchg
cmp
pop
clc
mov
loop
cs
push
and
enter
imul
lds
or
xor
sti
cwtl
mov
push
push
dec
dec
mov
int
dec
jnp
adcl
int
adc
push
imul
sub
incl
ja
call
out
xor
popa
jp
loop
pop
stos
and
push
in
xchg
pop
pop
repnz
xor
popf
mov
inc
push
imul
call
sbb
sti
push
cmp
or
mov
mov
push
mov
xlat
shrb
push
lret
gs
push
cmpsb
popa
xlat
or
movsl
xor
dec
cmp
pop
test
cmp
jl
sahf
jo
adc
shlb
dec
iret
stos
mov
sub
cmp
mov
mov
fcomps
stos
push
fists
mov
cmp
mov
jecxz
sub
jg
add
jle
mov
pushf
push
movsb
clc
enter
and
or
sbb
push
mov
sbb
rcrb
jecxz
mov
dec
loopne
jg
push
add
inc
inc
shll
dec
es
and
subb
cmc
push
dec
test
dec
out
inc
ret
test
mov
hlt
inc
bnd
jae
dec
xchg
sbb
mov
xchg
mov
cmp
movsl
das
dec
popa
inc
fs
push
xor
cmp
int
dec
in
ja
mov
mov
popa
call
mov
cmp
aad
fsubrl
mov
addr16
xchg
xchg
fs
mov
mov
mov
popa
mov
mov
mov
cwtl
mov
xor
jge
mov
loop
call
cmc
sub
add
xor
or
test
mov
add
dec
orl
xor
cmp
jns
jno
int3
test
jae
arpl
out
fiadds
sub
jo
cmp
adc
jae
cs
mov
adc
pushf
fmulp
mov
sbb
sub
mov
sub
mov
add
leave
push
lds
cmc
fwait
xchg
xchg
jo
push
lret
push
outsb
ja
jmp
pop
fisubrl
xchg
fldt
or
mov
sbb
mov
in
out
ljmp
jmp
or
mov
jns
pop
leave
ljmp
and
push
mov
jg
xlat
test
push
lods
mov
outsb
xor
cwtl
cmp
jle
push
adc
mov
mov
adc
push
js
sbb
dec
shl
dec
test
das
adc
xchg
adc
dec
add
and
sbbl
out
stc
iret
gs
sbb
mov
or
in
xchg
jle
sbb
dec
mov
call
stos
xor
aas
inc
stos
aam
insl
iret
pusha
data16
cmp
int3
or
popa
sub
pop
fists
lret
in
pop
in
out
out
mov
sub
pop
jp
mov
xor
fmull
in
jg
push
xor
mov
pop
xor
nop
and
pop
and
scas
aam
sbb
mov
into
ss
popa
cs
cs
sbb
test
xchg
push
andl
jecxz
test
pushl
ror
cmpsb
sbb
cwtl
jbe
mov
pushf
push
stc
and
jnp
outsl
insl
cmpsb
lret
dec
xchg
cmp
icebp
hlt
loop
mov
je
pop
mov
dec
jno
cwtl
int
test
mov
jecxz
pop
sub
cs
inc
jbe
enter
add
ljmp
into
pop
rclb
cmp
jge
jmp
lea
and
cs
int
test
xchg
cmpsl
add
dec
js
jl
jge
dec
es
cli
dec
pop
pop
push
std
mov
mov
mov
jo
dec
sarl
lret
mov
add
arpl
xchg
and
jno
fwait
push
in
and
mov
adc
ds
dec
stos
pop
adc
mov
push
lock
lcall
lret
jbe
icebp
mov
add
pusha
movsl
nop
dec
repnz
mov
out
je
xor
jge
dec
pushf
cmp
in
std
lods
ljmp
cmp
or
movsb
in
adc
cmpsb
lret
leave
test
jmp
mov
push
jp
cmp
call
adc
lods
add
int3
add
xor
mov
and
mov
mov
jmp
mov
sbb
mov
inc
pop
rcr
sbb
lea
sbb
mov
mov
jp
fidivs
push
jae
stos
mov
jae
dec
out
sbb
arpl
cmp
test
fs
std
lds
and
pop
aad
mov
mov
sub
cmp
clc
roll
sub
push
aas
pop
push
cmp
and
and
pushf
xchg
lods
pop
shlb
add
and
cmp
mov
repz
frstor
or
dec
sbb
outsb
hlt
mov
addb
xchg
pop
gs
cmp
popf
int3
inc
dec
jae
mov
aas
or
or
mov
fcmovnb
xor
ljmp
jl
jno
hlt
sub
rclb
cs
mov
mov
jmp
loope
mov
shll
leave
pop
or
add
jmp
test
pop
push
and
ret
xor
mov
mov
mov
dec
adc
pop
repz
mov
mov
pop
and
test
dec
mov
fsubr
ja
adc
mov
fisubrl
shld
int3
sub
jnp
cmp
inc
push
fwait
mov
pop
lcall
shl
fadd
mov
pop
inc
jne
ds
jb
pop
ret
stc
push
xor
fwait
aam
mov
add
and
mov
imul
sti
jae
ror
jae
int
sub
jl
scas
mov
or
fiadds
movsb
dec
mull
sbb
mov
sub
out
lret
scas
mov
aam
stos
fadds
enter
repnz
sti
inc
sub
ss
adc
jno
imul
cmpsb
push
imul
dec
lock
mov
outsb
arpl
loopne
mov
dec
mov
or
pop
arpl
pop
fs
lods
cld
jecxz
shll
rclb
inc
sub
xchg
out
or
in
fistps
inc
test
ss
push
sarb
lea
or
or
aad
mulb
dec
rclb
cmp
divl
push
sti
xchg
dec
js
and
cmp
mov
cmpsb
mov
jo
sbb
mov
cmp
shl
inc
adc
test
leave
out
xchg
icebp
in
jno
inc
out
loope
fdivrp
xor
adc
pop
hlt
mov
push
sbb
scas
xor
test
pop
or
into
scas
dec
ret
adc
xorl
sbb
mov
aad
add
push
inc
add
xchg
mov
inc
add
adc
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xor
xor
xor
movl
or
movl
mov
or
mov
xor
or
mov
or
xor
not
mov
orl
add
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
xor
xor
mov
sbb
mov
test
je
and
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
mov
adc
mov
imul
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
add
xchg
or
mov
movzbl
sbb
sub
mov
sbbl
xor
and
add
mov
movl
mov
add
xor
addl
add
mov
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
movzwl
adc
mov
xor
add
add
mov
or
mov
inc
xor
mov
mov
adc
add
mov
subl
sub
lea
xorl
xor
xor
movl
cmp
movl
je
sub
mov
andl
xor
addl
add
movl
cmp
movl
jne
pushl
call
mov
mov
xor
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
push
pushl
push
call
jmp
or
mov
add
movl
cmp
movl
je
subl
pushl
andl
pushl
decl
call
orl
mov
mov
sbbl
mov
xor
addl
add
movl
cmp
je
mov
mov
mov
xor
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
mov
add
sub
mov
mov
inc
mov
add
mov
xor
mov
or
mov
orl
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
jmp
fidivl
jb
xor
ss
add
cwtl
call
pop
bound
lods
lret
jae
sarl
mov
push
inc
loopne
adc
jae
push
jecxz
pop
cmpsl
xchg
add
push
mov
mov
pop
inc
das
aam
xor
dec
dec
scas
in
test
mov
cmp
xchg
fadds
rcl
mov
aaa
lret
mov
xor
stos
aad
and
xor
inc
test
fcmovnbe
jns
mov
ljmp
sub
mov
cmpsb
cmp
mov
lods
jb
xorl
xchg
hlt
add
insb
xor
mov
ja
or
data16
repnz
pusha
push
mov
aad
daa
in
imul
in
pop
jp
xchg
xchg
cmp
sahf
imul
cmpsl
icebp
mov
jo
xchg
repnz
dec
rorl
fcomps
sbbb
mov
dec
mov
sbb
popf
les
jmp
pop
mov
jne
loopne
data16
imul
test
stc
add
int
ss
insb
sub
test
cmp
adc
or
in
jb
cmp
mov
pop
cmp
mov
gs
hlt
sarl
iret
jmp
mov
dec
mov
jge
mov
mov
and
popf
stos
mov
enter
movsl
xchg
cmc
ret
mov
daa
mov
outsb
int
push
pop
mov
pop
je
jnp
sub
and
inc
repz
out
pop
rcl
push
ficoml
add
mov
lret
mov
push
pop
xchg
mov
js
jns
test
int
jmp
jns
sbb
popa
lds
mov
js
or
ret
ds
bound
lods
push
or
add
sbb
sahf
stos
mov
je
outsl
in
lret
aad
popa
in
adc
mov
mov
imul
xchg
outsb
cmp
mov
push
pusha
adc
xchg
ss
nop
iret
mov
xchg
jp
mov
push
test
in
gs
daa
xor
xchg
arpl
jecxz
adc
pop
xchg
jl
out
push
xchg
addl
int3
ljmp
pop
call
outsl
mov
mov
jp
sbb
imul
sub
imul
mov
stos
insl
xor
mov
mov
xchg
xor
pop
rorb
push
int3
jbe
in
loope
pop
stos
pop
xor
or
scas
cltd
aaa
xchg
mov
mov
nop
cmp
rorb
hlt
inc
xchg
fnstsw
inc
add
and
xchg
mov
test
bound
out
pop
adc
or
imulb
inc
and
push
or
pop
pop
mov
fldenv
loopne
pop
lret
add
shlb
xchg
cmp
adc
sti
push
outsb
out
subl
aaa
xchg
mov
rol
add
fs
adc
loopne
or
cmpsb
ret
pop
inc
mov
inc
hlt
out
dec
loop
flds
sub
mov
cltd
mov
add
movsb
push
inc
fnstsw
push
and
lahf
mov
inc
pushf
dec
stc
stc
and
cmp
cmpsl
jae
push
int
ficoms
in
shlb
push
adc
mov
mov
push
fdivrs
xor
dec
fdivrl
test
pop
xchg
mulb
xlat
cltd
dec
pop
push
repz
cmp
outsb
pop
sbb
mov
add
jmp
sub
and
repz
popf
push
pop
iret
add
or
or
lods
and
loop
cmpsl
je
lods
rorl
sub
lcall
sub
jne
sbb
in
cmpsb
xchg
shll
mov
cld
pop
popf
fmulp
lock
call
jle
xchg
daa
hlt
or
jl
jnp
dec
xchg
xchg
mov
add
mov
lcall
jle
xchg
repnz
mov
cmpsl
mov
ja
lret
test
loopne
movsl
add
mov
mov
fs
dec
movsb
data16
mov
xor
xor
mov
jmp
and
mov
mov
in
enter
aaa
add
push
push
ja
sub
outsl
lcall
aaa
dec
aas
cmp
std
out
in
rcrb
pop
jmp
hlt
test
jl
mov
loopne
ds
jle
mov
fmuls
sahf
xchg
int3
inc
jecxz
xchg
orb
ret
lea
push
xor
push
jnp
fisubl
add
sbb
push
push
cmpsb
mov
mov
stos
outsb
loop
or
enter
adc
inc
jle
rorb
dec
sub
and
jecxz
lcall
sub
fdiv
in
or
lea
nop
mov
call
es
xchg
inc
jge
rcll
pop
adc
or
fstpt
dec
mov
sub
pop
iret
lret
mov
fldcw
cmp
ljmp
subl
xchg
cmpsl
inc
pop
or
adc
shl
icebp
dec
data16
xchg
dec
pop
adc
int3
outsl
pop
xchg
mov
lcall
lret
rorl
lahf
adc
dec
ret
add
xor
and
mov
out
mov
scas
xchg
popf
pop
daa
int
je
ficompl
sub
pop
jmp
cmpsl
lcall
cmp
or
insb
into
hlt
out
gs
xchg
xchg
push
sbb
or
imul
inc
cwtl
lea
stos
cs
sarb
fcomps
jbe
dec
fisubrl
pop
dec
icebp
push
pop
sub
test
aad
mov
mov
leave
lea
mov
nop
lods
adc
test
lret
arpl
mov
push
hlt
or
lahf
pop
popa
scas
out
cltd
pop
pop
data16
lahf
push
pushl
test
xor
mov
push
pushf
cmp
in
jmp
sbb
inc
dec
pushf
scas
mov
adc
pop
jnp
inc
dec
dec
sub
pop
test
icebp
pop
xchg
mov
addb
loop
push
gs
in
pushf
stc
cld
xor
out
mov
insb
or
mov
inc
xor
pop
or
add
insl
jbe
rolb
sbb
imul
aam
pushf
xor
pusha
movl
and
sub
int
fcomps
call
loopne
ja
xchg
in
js
mov
push
lds
push
xor
stc
popf
cmp
sub
dec
sub
imul
lret
inc
mov
push
adc
negb
pmaxub
rclb
xchg
sbb
ja
icebp
adcl
data16
inc
into
mov
cmp
faddp
adc
cltd
mov
shld
mov
mov
xor
or
sub
xor
xchg
in
xchg
and
mov
scas
add
into
push
mov
adc
xchg
popa
jnp
in
add
sbb
adc
stos
outsl
ficoml
sub
sub
inc
daa
insb
pop
cmp
add
xchg
push
into
sti
cmpsl
xchg
mov
cmp
adc
dec
iret
and
push
pop
movsb
jns
ffree
mov
cmp
push
xor
fsts
inc
push
push
push
scas
cmpsl
sub
pushl
mov
sub
cmp
out
jg
sub
push
mov
scas
mov
adc
cmp
fisttpl
popf
jl
js
pop
sbb
mov
sub
insb
into
mov
add
mov
mov
test
mov
rcrl
inc
mov
jae
push
test
icebp
test
mov
cmpsb
jl
add
xchg
fs
shrl
xlat
cld
push
cmp
mov
cmp
ret
stos
xchg
fcomi
pop
or
imul
xchg
std
fisubrl
aaa
cs
cmp
pop
adc
cmp
out
mov
cld
and
cmp
sub
pop
dec
push
mov
adc
pop
jp
jg
dec
out
into
dec
adc
add
jae
xor
imulb
aam
ficoml
neg
fdivrl
data16
shll
jbe
pop
fidivrs
add
add
xlat
ljmp
or
pop
incb
shll
inc
xchg
cs
xchg
dec
les
lahf
and
push
sub
cmp
add
xor
dec
mov
insl
push
mov
xchg
jb
aas
ret
test
dec
add
popa
scas
je
sbb
dec
push
out
pop
pushf
stos
sbb
push
push
mov
xchg
cmp
aad
jne
cltd
push
adc
insl
cmpsl
rorl
pop
icebp
divb
popa
addl
xlat
cld
add
cmp
push
mov
pop
and
jo
ret
mov
cmc
mov
mov
cmp
movsb
fsubrs
sahf
in
sbb
inc
cmpsb
mov
pop
repnz
inc
jmp
fisubrl
xchg
pop
mov
loope
in
pusha
add
inc
push
mov
cmp
outsb
imul
hlt
jo
pop
cmp
jecxz
movsl
test
add
loop
icebp
gs
push
aad
mov
sub
lret
jle
push
cwtl
xchg
loopne
out
test
adcb
jnp
xchg
scas
rorl
mov
repz
add
mov
negb
xchg
cmp
pop
or
pop
inc
and
movsl
push
xor
stos
push
cmc
dec
inc
enter
xchg
lods
push
int
inc
mov
and
pop
ja
lds
pusha
test
or
mov
subl
arpl
cs
sub
add
cwtl
adc
sbb
lret
and
cmp
jg
push
fcomps
pop
icebp
or
repnz
insb
or
sbb
shrl
out
decl
xchg
ds
daa
lret
mov
xchg
lods
or
dec
insl
into
jbe
mov
cmp
mov
and
imul
dec
outsb
push
xchg
jge
xchg
iret
int3
mov
loopne
mov
and
or
mov
adc
or
bnd
stos
loop
iret
mov
rcr
adc
jmp
out
add
and
pop
push
addr16
sti
push
mov
sub
push
in
hlt
xor
sbb
cltd
mov
stc
mov
popa
mov
sbb
ficomps
jge
and
adc
dec
je
and
and
jecxz
iret
into
adc
jns
pop
mov
dec
inc
push
cwtl
and
in
icebp
cwtl
push
loope
sub
xor
add
mov
push
in
jne
loopne
dec
adc
rorl
lcall
and
pop
pop
adc
sbb
jle
jnp
ja
loope
jns
lds
addr16
inc
add
and
aam
out
call
repnz
stos
push
xor
fst
xor
leave
daa
add
push
jecxz
das
lods
push
andl
cld
repnz
decl
mov
rcll
aad
dec
sbb
sbb
ror
adcb
cmp
or
mov
cmp
jp
pusha
mov
dec
mov
pop
loopne
sbb
jnp
add
mov
cwtl
sbb
mov
ljmp
and
xlat
sub
shll
mov
mov
bound
xlat
mov
lahf
orb
rorb
and
aam
pop
pop
add
fcoml
pusha
dec
push
mov
mov
xor
mov
push
xor
jge
add
mov
mov
cld
into
int3
adc
cmp
push
sub
xor
shll
and
ficomps
popf
idivl
insl
xchg
inc
movsb
sbb
and
xor
jns
sub
aaa
sbb
clc
xchg
lcall
xchg
inc
lahf
mov
rclb
xchg
movlps
loope
sbb
stos
adc
dec
adc
jns
push
lcall
jmp
loop
mov
sub
add
aas
test
int3
add
in
xor
cmp
into
repz
inc
jns
lret
sub
mov
jbe
dec
repz
dec
inc
insl
loop
orl
adc
sub
fbstp
inc
adc
mov
in
adc
sbb
in
pop
mov
mov
cmpsl
cmpl
addr16
fsubrs
xor
stos
inc
lods
dec
mov
mov
cltd
rcl
mov
mov
nop
arpl
push
in
lcall
lods
add
mov
rcll
pop
push
shr
mov
aas
and
int3
cmc
xchg
cmp
mov
daa
stc
push
out
lods
mov
jecxz
imul
sbbl
fsubs
inc
pusha
pop
cmp
push
mov
xor
push
push
cmp
jne
push
cmp
mov
xchg
cvtpi2ps
test
inc
and
pop
or
pop
test
pop
andb
push
pop
fxam
jl
pop
ss
sbb
inc
push
mov
out
or
add
xor
sbb
dec
movsl
loop
movsl
sahf
adc
push
jmp
fisttpll
pop
aas
push
hlt
jne
lret
xchg
dec
push
or
sbbl
les
xor
push
roll
in
mov
movsl
jp
xor
sub
pop
jbe
stos
inc
sub
icebp
rorl
divl
or
in
push
pop
xchg
or
int3
inc
mov
out
or
lret
mov
popa
jno
fwait
repnz
push
test
add
or
jge
and
mov
add
mov
pop
roll
lods
adc
outsb
jne
gs
scas
or
or
cmpb
iret
mov
cmp
push
fbld
xchg
cwtl
incl
mov
xlat
hlt
lahf
scas
dec
stc
xchg
push
adc
in
sbb
sub
ljmp
or
in
call
pusha
mov
xor
clc
movsl
inc
inc
cwtl
rclb
xor
add
mov
cmp
sub
popa
fwait
test
bound
sub
mov
mov
movsl
into
inc
xchg
outsl
xor
nop
jge
lods
test
in
sub
out
or
movsl
icebp
xor
adc
sub
cltd
mov
shrb
in
mov
add
out
mov
xor
or
fsub
rcrb
daa
xor
mov
dec
pop
jnp
scas
ja
mov
das
pushf
pop
imul
pop
dec
sbb
ss
dec
push
jg
mov
push
stc
mov
dec
rcrl
mov
out
push
sub
xor
cmpsb
sbb
xchg
xlat
push
mov
aas
pop
into
aas
call
lret
xor
fld
jmp
leave
pusha
inc
dec
adc
sub
cwtl
or
dec
out
xchg
or
iret
icebp
data16
adcl
test
jae
or
int
push
mov
lret
adc
push
mov
sub
shlb
cld
or
lea
es
popf
push
out
adc
cltd
bnd
dec
shrb
adc
sti
js
orb
or
insl
adc
rorl
push
imull
lcall
sahf
sbb
sub
divl
sbb
loopne
loop
lret
leave
sbb
faddl
jmp
inc
and
outsl
jmp
push
inc
sarb
push
jge
mov
mov
or
daa
sbb
pop
pop
or
test
ficoms
rclb
dec
sub
mov
mov
leave
jns
or
out
pop
cmpsb
sahf
push
icebp
dec
inc
and
shl
xor
inc
lret
fld
jle
arpl
mov
cmp
jle
jmp
dec
inc
repnz
mov
xor
nop
jle
loopne
fdivrp
fdiv
xor
hlt
lods
or
xchg
pushf
aaa
add
push
out
out
mov
mov
fnstsw
mov
mov
push
imul
mov
xchg
ret
imul
dec
sub
push
outsb
fidivrl
out
sub
mov
dec
nop
imul
inc
shll
sub
lea
idivl
int3
jae
cmpsb
dec
sbb
push
addb
aad
cmp
jo
pop
int3
stc
pop
test
aaa
lret
or
insl
mov
and
cmp
popa
sbb
fs
inc
sbbl
push
cmpl
pop
shll
addl
insb
fimuls
fcmovnbe
fs
repnz
movsb
sbb
negb
and
enter
jle
add
xchg
daa
mov
jno
and
and
mov
out
testl
lahf
les
sbb
movsb
aaa
mov
push
and
mov
cli
pop
mov
out
out
pop
bound
stos
or
xchg
movsl
int3
nop
cmc
enter
pop
jge
and
dec
adcl
inc
adc
rclb
adc
shlb
sbb
rol
outsb
cs
lods
inc
lahf
lods
das
adc
adc
jne
dec
xchg
dec
pop
sub
dec
mov
lock
cmp
movsl
pop
inc
lahf
mov
pop
mov
in
dec
mov
aam
push
adc
push
push
repz
cmpl
mov
sbb
cmp
mov
jns
mov
add
mov
andb
loopne
add
cmp
sub
jmp
mov
mov
mov
popa
fistpll
push
test
mov
sbb
bound
into
inc
js
fsubrs
out
inc
repz
push
inc
mov
fadd
add
sub
movsb
dec
sbb
aaa
xor
or
lods
xchg
cmp
jge
pop
mov
pop
test
test
ret
daa
mov
iret
xor
mov
jns
dec
push
repz
cmp
and
xor
in
dec
and
xchg
jge
or
jp
xor
adc
pop
mov
jle
push
in
mov
and
inc
in
sbb
mov
adc
in
and
dec
mov
pop
pop
mov
add
popf
sub
iret
xchg
xor
jbe
xor
fs
push
scas
outsb
lahf
lret
std
xchg
xchg
adc
loopne
sbb
mov
lcall
push
imul
mov
jmp
sub
lcall
fcmovne
push
push
bound
icebp
sbb
fnstsw
orl
inc
rcrl
clc
fistpl
je
sbb
cld
ja
or
leave
or
mov
sbbl
push
leave
or
addr16
in
mov
push
adc
sbbl
in
arpl
push
insb
pop
scas
insl
dec
jl
dec
mov
adc
sub
dec
push
dec
test
int
inc
sub
xchg
push
push
ds
mov
outsb
loopne
pop
in
add
mov
sub
insl
adc
int
mov
jno
inc
cltd
shlb
xchg
dec
pop
push
mov
xchg
daa
and
pop
xchg
lock
sbb
lods
test
lret
hlt
sbb
add
sub
jmp
push
push
cmp
lcall
mov
scas
arpl
stos
xor
inc
shl
inc
ja
xchg
inc
fadd
xlat
rorb
cltd
ret
in
lods
std
add
cmpsl
push
inc
into
jbe
mov
pop
ja
inc
mov
mov
sub
lret
es
cwtl
into
pop
xchg
lock
loop
push
cmp
adc
push
popf
inc
mov
or
scas
andb
lds
xor
add
cmp
in
jbe
or
or
mov
inc
rcll
addl
cs
fsub
into
clc
es
das
fists
inc
xchg
pop
call
insb
mov
mov
negl
sbb
in
in
scas
cmp
mov
add
mov
mov
cld
lea
or
ja
shlb
sbb
or
nop
or
xchg
divb
movsb
insb
mov
jae
cs
repnz
cmp
call
clc
shll
out
shrb
les
add
mov
pop
xor
jno
mov
cltd
repz
pushf
cmpsb
fsub
xchg
inc
xchg
push
pop
xor
adc
xchg
or
fdivrl
inc
movsl
lret
sub
mov
xlat
xchg
out
add
ja
loopne
add
outsb
in
pushf
push
ret
shrl
and
int
jmp
sub
test
cltd
mov
in
inc
push
push
in
pop
xlat
mov
iret
and
out
xchg
mov
xor
cmp
pop
aam
js
rorl
movsb
mov
mov
push
push
imul
cmp
fstp
jmp
test
cs
stos
pop
iret
fsubrl
jmp
mov
xchg
push
pop
fidivrs
subl
dec
nop
rep
or
ficompl
out
sub
xor
test
add
jo
or
jae
in
js
cmpsb
adc
mov
mov
mov
enter
jl
dec
sbb
xor
lahf
mov
ds
out
out
cmp
dec
int3
xor
pop
cld
nop
ljmp
jecxz
test
out
dec
or
mov
out
insb
xor
push
lret
mov
push
mov
mov
mov
jecxz
arpl
or
fdivrs
or
fcmovu
cltd
pop
dec
sbbb
cmpsl
or
ja
xor
stc
add
sti
stos
orb
dec
cmp
inc
or
inc
cmp
inc
xchg
ficomps
in
insl
out
pop
cmp
add
gs
fldcw
aam
jno
sub
rcl
add
mov
jmp
mov
test
fidivs
cwtl
pop
inc
iret
dec
push
and
in
pop
pop
sbb
pop
fwait
push
adc
dec
test
cmp
roll
sub
xor
and
mov
pushf
add
cwtl
cwtl
in
mov
mov
push
xor
insb
mov
stos
sbb
push
inc
ljmp
adc
and
dec
loop
test
add
pop
and
dec
in
in
sub
jmp
add
xlat
sub
les
jns
out
stos
add
xor
xor
cltd
adc
mov
hlt
xchg
cmp
fsubrs
jns
adc
mov
data16
sbb
addr16
xor
sbb
test
aaa
add
and
dec
mov
pop
inc
repz
ret
jnp
jg
loop
xor
idivb
xor
in
aad
loopne
push
leave
push
mov
into
xchg
and
pop
push
loope
mov
sarb
out
inc
pusha
aad
sti
mov
iret
dec
int
insb
lods
jo
sub
jg
pop
or
lock
jns
cmp
insl
pop
sub
dec
cmc
mov
cmp
sbb
mov
mov
dec
inc
pop
mov
lret
mov
mulb
mov
lods
out
sbb
add
stc
in
jae
pop
incl
and
scas
dec
pop
test
aad
scas
sub
inc
les
pop
add
andb
cmp
call
or
mov
sti
inc
jge
pop
add
cmp
sbb
ds
mov
rdpmc
mov
add
js
test
popa
jbe
test
mov
mov
imul
inc
ficoms
jmp
dec
adc
data16
mov
xchg
ds
add
test
pop
cwtl
push
notl
nop
sub
andb
cmp
insl
faddp
int3
mov
lds
mov
mov
fs
pop
add
test
pop
int
sbb
fsubl
xchg
fidivrl
inc
fistpll
addr16
xchg
pop
int
add
dec
xor
jmp
jno
push
movsl
pop
iret
sub
into
push
inc
psllw
popa
and
ds
jle
jmp
ja
sub
pop
mov
fidivs
cwtl
decl
lret
jns
int3
inc
cmp
rcll
push
mov
mov
pusha
pop
sbb
xchg
lret
fstl
cmp
cwtl
xor
scas
cli
daa
mov
cmp
inc
add
inc
mov
pop
jmp
adc
je
xor
out
adc
fcomps
ss
in
setl
bound
das
stc
push
add
inc
pop
mov
ficoms
pop
leave
aas
adc
aad
or
inc
adc
push
je
mov
scas
mov
and
mov
cs
int3
adc
pop
lds
cmp
jo
lcall
add
cltd
jmp
cld
inc
fildl
cld
pop
mov
clc
ret
outsb
ds
dec
mov
xchg
inc
sbb
push
leave
je
addb
repz
test
mov
mov
lahf
sbb
mov
sahf
xchg
xchg
movsl
mov
std
xchg
xchg
pop
push
cmpsb
jbe
xchg
dec
test
inc
bound
es
lods
add
xchg
and
push
and
in
jo
dec
mov
or
js
movsb
test
adc
test
xor
int3
mov
sbb
cmc
insb
cmc
sahf
push
mov
xor
xchg
cmp
and
ret
push
sub
lret
mov
popa
fcompl
jmp
push
or
outsb
rorb
sub
dec
lret
sbb
in
jle
bnd
mov
xchg
sbb
mov
outsb
pop
ds
scas
adc
lret
inc
std
push
dec
and
test
arpl
add
flds
nop
adc
pop
mov
mov
dec
js
std
lcall
mov
sub
xchg
inc
loop
mov
pop
ds
ret
hlt
mov
sbb
push
test
shrl
add
xor
cwtl
add
cs
xchg
sub
xchg
cmc
aaa
or
mov
or
inc
mov
test
leave
xchg
call
xorl
dec
mov
mov
pushf
xchg
push
push
push
lea
mov
mov
mov
scas
mov
xor
clc
idivl
fs
inc
inc
pop
pop
fcoml
stc
movsl
lods
sbb
or
in
arpl
pop
in
dec
popa
stc
push
add
add
jl
scas
outsl
stc
fwait
mov
bnd
adc
and
pop
pavgb
cmp
div
push
je
mov
push
sub
int3
clc
arpl
je
std
addr16
adcl
int
scas
mov
cli
ss
outsl
cmc
push
jmp
push
xchg
sbb
hlt
jg
outsb
stos
out
sar
movsl
out
stos
xor
leave
mov
fcom
lret
lds
xor
mov
and
pop
or
rclb
dec
rcrl
and
cmp
imull
mov
lea
xor
cmp
in
mov
in
xor
aaa
mov
inc
lea
lcall
ss
add
int
je
adc
add
or
mov
bound
fdivrs
testl
xlat
mov
mov
insb
xor
jge
xor
add
leave
adc
into
jno
mov
imul
adc
subl
lcall
mov
pop
mov
pop
push
inc
pop
in
out
push
sub
mov
xchg
pop
daa
aaa
fdivr
xchg
addr16
jp
inc
out
enter
das
add
popa
sahf
notb
sub
push
cmpsl
push
mov
imul
xchg
test
int3
in
in
lea
rorl
adc
or
arpl
push
or
push
rcr
decb
gs
adc
sbb
sub
ds
sub
inc
daa
aaa
sub
ljmp
inc
out
mov
push
jo
adc
pop
loope
imul
xor
dec
test
or
pop
fadd
jmp
popf
cmp
jo
xor
jnp
push
cmpsl
cld
or
cmpsb
sbb
dec
dec
in
add
adc
call
mov
cs
fnstsw
dec
std
sbb
insl
cmp
and
cmp
test
push
xchg
out
les
test
cmc
push
xor
and
inc
cmc
gs
inc
xlat
jl
aad
cmpsl
cmpsb
push
imul
loop
jo
add
sahf
inc
inc
nop
pushf
add
add
xchg
ja
mov
sub
mov
inc
dec
aas
scas
out
mov
das
pop
push
jmp
out
mov
mov
cmc
xchg
imul
inc
mov
push
sub
cmp
pushf
jno
and
ror
sub
pop
add
ss
inc
jge
xor
daa
jns
je
jns
add
cmpsb
sbb
and
sub
stos
in
lcall
aad
adc
lret
xor
push
push
jae
in
pusha
lcall
insl
mov
test
dec
shll
fs
nop
push
cmp
loop
inc
cld
test
sub
iret
mov
js
out
push
test
gs
sbb
mov
pop
push
call
stc
data16
cmc
std
jmp
jg
jge
lock
leave
cmc
pop
push
aas
jno
cmp
ljmp
inc
stc
pop
inc
adc
add
mov
hlt
jmp
mov
aaa
fidivs
xchg
ror
push
mov
inc
mov
sub
cs
cmp
xor
push
cld
shll
popl
inc
pop
cltd
ljmp
xchg
and
and
or
sahf
push
ds
cli
push
in
xchg
insb
mov
push
add
in
cmp
sub
aad
xchg
xor
movsb
filds
sub
cmp
pop
add
rorb
addr16
loop
push
ds
pushf
pop
xchg
fcompl
jb
movsl
ljmp
cli
xchg
xchg
ror
lcall
mov
or
int
mov
push
sub
ret
pop
jb
nop
and
push
test
xor
xchg
fisubs
sub
addr16
call
inc
aaa
sbb
insb
mov
and
fildl
sbb
test
xchg
mov
leave
pushf
xor
jl
xor
out
fs
cwtl
push
mov
fsubr
push
sahf
shlb
pop
mov
adcb
pop
mov
push
dec
pop
xchg
xchg
movsl
mov
andl
repnz
inc
push
mov
loop
shll
stos
ficoms
bound
mov
mov
cmp
enter
imul
inc
popa
out
and
inc
std
ljmp
int
adc
mov
aam
pop
sarl
xchg
mov
adc
filds
cmp
or
call
fwait
clc
push
popa
ret
sub
cwtl
aas
inc
mov
ds
imul
xchg
sub
fwait
inc
adc
std
mul
fcmovb
inc
xor
into
jo
push
or
xorl
cmp
cmpsl
jnp
xor
or
lods
add
out
pop
dec
mov
sahf
fsubrs
add
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
jmp
jl
pop
call
andb
push
mov
pop
bound
sub
testb
xchg
sbb
data16
push
rcr
adc
cmp
jmp
jle
dec
jmp
aam
cli
pop
sbb
push
pop
les
sbb
adc
jnp
lods
push
addb
sbb
dec
loope
adc
mov
cmp
cmp
sbb
popf
addl
test
into
insb
xor
jge
mov
loop
mov
cld
enter
bound
mov
cli
cmp
test
mov
gs
dec
mov
in
pop
adc
xchg
repnz
movsl
std
inc
sahf
and
sub
sub
sub
leave
mov
mov
or
push
cmp
adc
loope,pn
or
aam
jbe
imul
rep
adc
mov
pusha
rep
push
fiadds
sbb
cmp
cmpsb
inc
loopne
push
add
lahf
sbb
pop
arpl
xchg
cmc
les
jp
and
into
and
pushf
je
pop
lods
jbe
scas
jbe
sub
or
jnp
daa
pop
jo
xchg
jns
leave
xchg
out
dec
cs
jbe
rorl
cmc
jbe
iret
fistps
aam
out
push
adc
pusha
popf
xorb
leave
movsl
stc
iret
js
stos
add
andb
sub
push
insb
in
das
ret
mov
add
mov
dec
outsl
movsb
jns
bound
shrb
arpl
sahf
in
push
mov
in
mov
sbb
adc
aaa
add
push
add
xchg
xchg
push
loopne
lods
rcll
pop
pop
cmp
gs
rol
mov
dec
jae
pop
repnz
lock
push
pop
into
sbb
xor
mov
or
sub
inc
in
cs
pop
xchg
pop
sahf
adc
shl
push
fldenv
nop
inc
ja
cmp
ret
icebp
dec
xchg
mov
jg
lcall
mov
ss
ret
movsl
movsb
es
pushf
sbb
repnz
jnp
xor
xchg
mov
add
xchg
mov
xor
out
les
adc
mov
outsl
sbb
aam
dec
and
scas
in
sbb
pop
popa
mov
push
mov
adcl
xor
sbb
subl
cltd
pushf
rorl
push
cs
hlt
mov
mov
push
or
std
fs
mov
insl
jmp
jl
es
mov
ret
ljmp
insl
movsl
pushf
pop
fmulp
jl
and
jp
cltd
xor
push
cmp
shrl
mov
cmp
cmp
pop
add
adc
nop
pop
es
ret
imul
add
jb
fs
stos
mov
and
fsub
outsl
jg
push
mov
out
add
cltd
jmp
dec
sub
stos
nop
int
pop
inc
jp
jbe
int
fists
shll
jmp
movsl
fs
fwait
jp
xlat
in
add
imul
mov
mov
test
push
push
dec
xor
fcmovb
xchg
data16
jecxz,pn
les
inc
mov
imulb
pop
mov
xchg
cltd
movsl
in
rcrl
xchg
fdivr
add
inc
jno
sahf
aaa
pop
xor
pop
test
add
push
or
and
into
fidivrl
cmovp
into
cmp
add
jmp
pushl
xor
pop
fnstsw
cmp
dec
daa
mov
pop
mov
mulb
pop
sbb
movsb
and
sbb
push
aam
sub
in
dec
jecxz
or
cltd
or
or
into
orb
mov
notl
stos
aas
into
mov
jl
dec
adc
mov
push
stos
sub
and
mov
cmc
sbb
xchg
lret
mov
icebp
pop
cld
lret
out
jmp
es
imul
sub
js
ja
in
mov
sti
ret
jo
int
ret
xor
mov
fwait
and
out
mov
sub
rcrl
cmc
xchg
cmp
adc
leave
loop
popf
movsb
push
xor
jns
leave
adc
out
push
adc
mov
jo
sbb
loopne
sahf
lock
shlb
pushf
dec
ja
add
push
xchg
cmpsl
movsb
add
dec
pop
lods
mov
inc
insl
xor
lods
data16
mov
push
and
std
or
push
push
or
sub
and
push
inc
test
aas
sbb
inc
mov
es
jmp
jo
and
lcall
adc
jno
sbbb
mov
sbb
pop
pop
jnp
or
cmp
fdivs
cmpsl
push
mov
xchg
imul
cmp
mov
sub
jecxz
setbe
outsl
xchg
dec
mov
arpl
popf
test
cmc
adc
jne
jmp
sbb
jg
or
clc
sbb
jb
loope
jecxz
push
push
outsb
sbb
jle
jecxz
fidivs
rorb
dec
fwait
cmp
iret
mov
add
hlt
imul
lods
sahf
sbb
aas
push
add
orl
into
jns
fcmovnbe
movsl
outsb
fildl
loop
repnz
mov
pop
int
fdivrl
rcr
jb
cmp
lds
imul
sub
mov
icebp
adc
insb
cmpsb
or
clc
adcl
ret
call
lea
push
inc
or
jae
jne
jge
sbb
loop
inc
or
imul
mov
jb
inc
cmp
jne
xchg
ss
mov
enter
dec
pop
sbb
push
inc
je
iret
arpl
fstpl
mov
xor
dec
adc
in
sub
aam
add
das
push
ss
sub
sub
repz
adc
movb
push
add
and
stos
cmp
mov
lds
ret
in
fs
lea
cmpsb
ret
cmp
lahf
jb
mov
sub
sbb
ljmp
test
popf
inc
repz
sahf
into
cmp
jne
jo
mov
xchg
fwait
adc
cmp
jecxz
or
or
adc
or
push
cltd
in
dec
outsb
jo
xchg
push
and
jae,pn
jns
and
dec
in
scas
or
ret
nop
cmp
and
or
sub
stos
int3
push
inc
imull
mov
mov
repnz
or
lds
add
and
push
call
dec
pop
xor
in
daa
mov
stos
xor
mov
popf
ljmp
idivl
mov
inc
jl
gs
mov
sbb
inc
pop
jno
mov
stos
int3
dec
sbb
mov
sahf
shrl
mov
sbb
push
test
sbb
xchg
fcmovne
sbb
dec
insb
daa
jl
cmp
arpl
imul
cmc
sub
jae
and
sti
repnz
jae
jno
adc
clc
and
insl
inc
mov
pop
push
jl
gs
mov
or
shl
stos
test
clc
push
xchg
xchg
jl
hlt
inc
add
pop
xlat
lods
lcall
mov
mov
jmp
test
ret
hlt
jp
xor
fwait
fidivs
pop
out
sti
test
mov
mov
cld
enter
cmp
int
sub
jb
stc
inc
popa
inc
imul
aaa
jb
inc
sbb
jge
dec
sbb
dec
add
xor
call
mov
or
cmp
push
bnd
or
sub
or
lods
test
cwtl
dec
out
pop
loopne
pop
mov
mov
fists
pop
lahf
add
jbe
inc
push
nop
xchg
pop
mov
outsb
inc
add
adc
daa
imul
outsl
shll
fisttps
add
jl
jle
pop
adc
push
fcom
sub
pop
aas
in
icebp
mov
jl
xor
sub
xchg
adc
xor
push
sbb
mov
dec
adc
mov
add
pop
adc
xchg
insl
push
pop
ficompl
push
xor
inc
jno
out
sub
dec
jmp
out
ret
sbbl
jne
int3
xchg
fs
pusha
or
mov
scas
dec
dec
jle
fiaddl
stos
xor
shl
lods
mov
insb
add
out
outsl
mov
inc
cmc
xlat
iret
loop
cmpsb
pushf
xchg
sbb
or
jne
roll
fldcw
sub
adc
jl
mov
mov
sbb
fnsave
mov
int3
lods
push
ja
inc
sub
cwtl
bound
stc
in
mov
loopne
pushf
mov
loope
sub
or
xor
lret
cmp
add
scas
mov
mov
pop
sub
push
jle
jecxz
and
xor
and
and
inc
sub
cmp
adc
cs
aaa
stos
ret
cmp
pushf
movsl
mov
pop
sarl
adc
and
xchg
in
bound
mov
cmp
ds
xchg
xor
adc
mov
add
loope
xor
hlt
mov
lea
xchg
test
out
test
fcmovnb
test
repz
push
hlt
xor
mov
pop
jbe
subl
fstpl
push
fsubs
mov
aam
clc
sbb
push
xchg
imul
or
cltd
in
mov
lahf
leave
pop
data16
es
xchg
aaa
icebp
and
cmp
jg
mov
js
jno
mov
mov
sub
hlt
gs
add
dec
xchg
cmpsb
mov
jmp
lahf
push
lret
dec
rorl
sbb
adc
scas
mov
push
in
jae
movsl
mov
jns
negl
or
mov
cltd
outsl
aam
add
xor
aam
lret
xchg
and
into
sbb
inc
fcmovnbe
mov
lods
fnsave
sbb
or
dec
sub
xorb
inc
pop
mov
and
cli
adc
jno
xor
mov
inc
and
push
cwtl
add
popa
mov
adc
adc
xchg
jo
lds
or
pop
jno
mov
mov
loope
mov
movsl
repz
mov
aaa
xor
xor
add
add
mov
sbb
jp
ljmp
push
into
jns
sbb
or
lret
incb
and
scas
pop
cmp
inc
lock
insl
mov
lds
sbb
adc
fcomps
pop
imul
test
jmp
loope
in
inc
rol
ret
hlt
fldl
lcall
rol
mov
in
push
and
mov
jne
add
iret
jbe
ds
hlt
add
mov
xchg
mov
mov
add
dec
ss
jl
adc
ja
pushf
shr
shll
xor
lods
jp
aas
sbb
rcrl
insl
loopne
rclb
mov
insb
jno
and
xchg
stc
stos
jo
out
dec
mov
cmp
inc
arpl
sahf
clc
or
xchg
adc
xchg
int
hlt
aaa
es
js
iretw
outsl
sub
fiadds
push
jae
outsb
sbb
bound
mov
inc
pop
js
jae
and
imul
pop
xchg
mov
mov
inc
add
push
and
inc
xlat
bnd
lret
jns
imul
int
cld
fldcw
sub
adc
jbe
outsl
cld
push
int3
xchg
pop
mov
push
xchg
inc
repz
fnstenv
movsb
leave
cs
mov
in
jae
repnz
ficoms
aas
dec
xor
sub
mov
scas
lods
sbb
std
leave
sti
rcrb
movsl
in
lahf
in
movsl
cmc
jb
mov
ret
ret
repz
jbe
outsl
add
dec
dec
fdivl
mov
test
mov
push
xchg
pavgw
cs
outsl
rclb
dec
dec
mov
mov
or
lcall
mov
mov
mov
mov
loope
mov
loopne
into
xchg
jbe
test
lcall
iret
push
idiv
rclb
sbb
mov
test
loop
stos
mov
sub
and
mov
xchg
push
lahf
push
lods
lods
jnp
outsl
lahf
insb
sbb
popa
sbbb
insb
pop
popf
mov
push
outsl
pushf
loope
jb
push
lods
fsubs
jecxz
xchg
inc
push
shrb
and
test
jg
aad
mov
pop
xor
into
cwtl
push
mov
aad
mov
das
out
mov
inc
ret
loopne
jecxz
aam
icebp
and
xchg
ljmp
adc
mov
xchg
test
mov
push
xlat
lea
je
mov
sbbb
das
ret
cmc
mov
pop
jge
pop
sti
mov
or
sub
add
inc
fwait
xchg
imul
std
cmp
xchg
sbb
dec
mov
and
js
rcrl
notl
lods
gs
iret
test
mov
push
pop
in
sub
scas
movsb
jne
lahf
push
in
sub
cmp
inc
push
ss
jmp
mov
aam
daa
cmp
cmpsl
out
cs
sub
lds
push
bnd
and
dec
in
hlt
jbe
mov
add
cltd
stos
sbb
mov
xlat
sub
jge
imulb
or
sub
shr
mov
dec
adc
jge
pop
sbb
jno
ret
pop
mov
mov
imul
mov
sbb
cmp
mov
lahf
push
lds
insb
adc
out
add
jne
cs
lret
popa
mov
mov
dec
cmc
dec
pop
adc
mov
add
aad
cmp
jp
pushf
xlat
jecxz
sbb
or
ret
sub
cli
jns
out
mov
inc
cvttps2pi
and
pop
mov
loop
sub
lea
xor
pop
popa
insb
call
lods
adc
add
in
cmp
pop
add
or
ja
outsb
adc
insl
sub
or
loop
and
sbb
mov
mov
mov
aaa
imul
and
out
loopne
es
ror
test
aas
pop
sbb
insb
orl
js
push
idivl
jne
inc
push
adc
xor
popf
xchg
inc
and
cld
jl
dec
xchg
and
push
sub
loope
push
daa
pop
ja
mov
in
movsl
xlat
push
insl
and
shlb
cwtl
fisttpll
rcrb
jbe
mov
pop
add
jecxz
clc
sub
fnsave
ret
lds
enter
xchg
add
jnp
dec
into
add
lods
cmp
jl
push
in
adc
outsb
insb
dec
inc
push
stc
cmc
test
mov
mov
scas
sub
jmp
adc
rolb
mov
mov
push
cltd
mov
xor
mov
bound
arpl
sbb
stc
jg
push
aam
aad
push
sti
dec
outsb
inc
or
in
rorb
push
hlt
adc
xor
lret
test
inc
mov
xchg
or
push
push
and
jmp
jg
in
push
out
xor
ja
lds
pop
cld
dec
in
and
pop
out
dec
inc
gs
subl
je
aas
pop
sbb
icebp
test
decl
jecxz
sub
lcall
imul
sbb
or
loope
sub
inc
testl
mov
xor
subb
cmpsb
ja
jns
repnz
pop
mov
clc
scas
push
stos
popf
addr16
and
fwait
jne
mov
mov
std
mov
or
dec
adc
sub
cmp
add
test
stos
adc
jg
or
cmp
mov
jno
loope
in
mov
sub
mov
add
dec
mov
add
in
push
mov
add
push
push
xchg
xchg
ficoml
cwtl
call
inc
scas
adc
aas
js
pop
mov
and
jae
dec
adc
sub
mov
mov
mov
ss
pop
ss
dec
ret
push
fbstp
add
xor
inc
rcl
mov
dec
mov
sub
pop
arpl
aad
aad
push
out
mov
ds
push
inc
inc
xchg
sub
xchg
sbb
mov
data16
cmpsl
pslld
and
insw
out
jns
cmp
mov
pop
in
es
add
or
ss
fsubl
push
and
andb
outsb
test
mov
inc
test
cmc
js
outsl
add
push
data16
pop
sbb
repnz
lahf
jo
movsl
sbb
mov
loop
int
dec
jne
xchg
sahf
push
mov
mov
lcall
xchg
cmpsb
subl
jns
aaa
daa
sbb
das
inc
and
sub
bound
mov
adcb
sets
daa
jns
inc
js
and
adc
call
cld
je
in
scas
mov
call
xorl
push
pop
mov
mov
fdivrl
and
in
call
cmc
jno
outsl
fwait
stc
xlat
inc
cmp
ds
push
int3
and
icebp
loopne
enter
pop
sbb
mov
ficoms
leave
stos
in
int3
xor
xor
rolb
pushf
ja
aad
fwait
mov
mov
dec
xchg
mov
jge
and
jne
pop
cmp
sub
notb
aam
push
or
repz
jne
ljmp
mov
dec
dec
cmp
fnstenv
jmp
fmul
jb
mov
mov
add
sar
mov
je
mov
mov
push
stos
dec
jno
cmp
sub
cld
push
mov
outsl
lcall
clc
or
mov
es
jl
add
stc
cltd
push
mov
jo
test
test
testl
insb
jo
les
outsl
fnsave
pushf
call
dec
out
sub
and
push
xchg
sub
popf
imul
cmp
lods
cs
lods
aad
test
cmpb
cmp
mov
lahf
fists
sub
cmpsb
mov
frstor
fdivl
test
icebp
xchg
or
lods
pop
sub
and
push
cmpsb
jle
cld
in
dec
insl
mov
data16
aad
xchg
test
mov
and
push
sti
inc
jl
inc
pop
cmp
das
ret
xorl
or
ret
sub
fdivs
adc
jge
mov
mov
lods
mov
and
loop
ret
shlb
mov
pop
shl
sarb
loop
mov
and
adc
mov
xchg
cmpsb
loopne
addr16
das
adc
and
or
lock
push
mov
rclb
xor
mov
add
addb
xchg
push
jl
or
ljmp
adc
lock
leave
into
orl
ss
sarl
aaa
sbb
ds
stos
movsb
fmull
sbb
imul
subl
xor
aad
mov
dec
test
and
or
lods
in
mov
mov
psubsw
shrb
cmpsb
fisttpl
cmp
iret
add
inc
sbbl
dec
mov
jns
popa
faddl
mov
jge
pop
push
mov
lock
pop
test
cltd
cld
sbb
lahf
fcomp
mov
test
jns
pushl
jo
push
pop
inc
adc
rcrb
mov
nop
or
ljmp
inc
dec
pop
xor
stc
sub
pop
push
lcall
lahf
xchg
sub
mov
leave
inc
les
xor
jo
hlt
mov
mov
imul
jno
adc
cltd
push
pop
mov
das
ss
inc
and
icebp
roll
pop
scas
loop
add
xor
jb
fwait
call
test
xor
adc
loop
out
and
or
add
mov
push
fsubs
cmp
mov
adc
xor
daa
push
jle
dec
leave
dec
in
sub
jnp
test
jne
lock
dec
cmp
out
fcomps
or
enter
pop
enter
rcl
push
das
loopne
mov
sbb
mov
sbb
scas
mov
enter
pop
mov
out
addr16
rcpps
ficoml
in
add
mov
adc
push
cmpsb
popa
cmp
imul
mov
je
sub
mov
cltd
adc
addr16
xchg
jo
mov
mov
jl
adc
loopne
mov
sub
lock
pop
push
hlt
xor
or
push
mov
popf
fst
idiv
xor
inc
mov
jns
filds
cmp
pushf
je
cmp
push
cwtl
and
mov
repnz
mov
mov
aaa
pop
xchg
push
dec
out
cmp
fstl
adc
mov
bnd
ret
jmp
int
or
jle
ja
sbb
xchg
pop
data16
jb
ss
cltd
aad
imul
mov
sub
cli
or
xchg
or
xlat
leave
in
cmp
adc
lock
repnz
movsl
les
xchg
nop
popf
sahf
jl
lods
adc
mov
mov
insl
js
movsb
scas
pushf
ja
jl
in
lret
sbb
std
mov
jo
popf
inc
lretw
and
xchg
mov
push
adc
stc
loop
dec
dec
push
dec
sub
outsl
mov
jmp
jns
hlt
push
test
push
add
cltd
je
add
inc
mov
add
out
std
pop
aaa
ss
repnz
arpl
insb
pop
loopne
sub
xor
push
addr16
mov
mov
fstpl
push
aas
icebp
sub
mov
roll
ds
and
in
inc
or
shlb
mov
dec
push
ret
addr16
bound
aam
push
iret
xchg
add
cmpl
sbb
xchg
pop
xor
je
xchg
sbb
out
mov
pop
and
test
cmc
mov
dec
dec
mov
dec
into
dec
ficompl
adc
idiv
lret
jbe
push
xlat
scas
push
push
jge
and
cmp
and
mov
xor
loope
movsl
repz
xchg
test
out
outsb
mov
add
icebp
pop
mov
sbb
mov
div
adc
fisttps
movsl
push
popf
test
push
mov
and
mov
roll
xchg
and
push
out
cmc
mov
fcoml
ret
faddp
das
repnz
shl
xchg
xchg
xor
rcll
cmp
test
mov
pop
mov
jmp
dec
cmpsb
ds
add
sbb
test
stos
push
lock
and
lcall
pop
dec
jns
xchg
bound
inc
or
lea
push
int3
insb
jge
push
xchg
inc
lods
sub
ds
lea
push
pop
cmp
in
push
xchg
and
mov
gs
fmuls
xor
xchg
popl
or
inc
mov
mov
mov
test
das
ds
iret
ljmp
mov
push
sub
inc
and
les
pop
in
scas
xchg
ljmp
mov
mov
xor
mov
fidivrl
cltd
mov
inc
xchg
in
mov
test
into
rcl
sub
mov
sbbb
fnsetpm(287
gs
xor
scas
outsl
int
xlat
or
das
pop
lds
into
popl
cmpsl
mov
lods
addb
lock
adc
dec
ficoml
xchg
fdivrp
fidivl
int3
repnz
das
out
push
call
fs
mov
mov
and
pop
mov
test
pushf
scas
and
sub
and
push
scas
push
jl
aas
xchg
add
sub
xchg
push
inc
int3
sahf
aaa
sub
pusha
sahf
mull
xchg
aas
cmpsb
fldcw
dec
mov
xchg
add
gs
stos
add
movsb
sbb
dec
popa
lods
aas
outsl
ljmp
test
cmpsl
arpl
sbb
mov
mov
pushl
mov
out
js
into
push
stos
js
lods
rol
lret
pop
loopne
pop
mov
mov
jmp
push
sbb
in
mov
mov
push
imul
pop
cld
mov
sbb
stos
pop
orl
loope
les
pop
nop
dec
hlt
cmc
and
pop
fprem1
rolb
mov
pop
loop,pt
movsb
fwait
adc
sub
sub
sbb
ret
lock
adc
mov
push
inc
test
dec
push
xchg
decb
pop
data16
fucomp
pop
cmp
cmp
negb
js
push
imul
mov
and
push
adc
sub
icebp
and
movsb
mov
fstpt
decl
mov
pop
add
movsl
out
mov
cwtl
ret
fisubrl
stos
cmp
into
xor
cli
loopne
mov
rclb
push
push
add
mov
push
out
mov
jno
scas
aam
sub
pop
or
stos
pusha
std
xchg
rol
ja
or
adc
add
mov
pushaw
sahf
imul
mov
pop
fmull
mov
or
mov
sub
scas
push
xchg
test
jae
cld
ficoml
xor
sub
jge
jae
das
add
jns
cmp
sbb
jb
idivb
popa
divb
push
sbb
lods
xor
in
cs
xchg
pop
stos
mov
xor
sahf
or
xor
pop
xor
neg
and
mov
cmc
gs
adc
cs
jge
or
xchg
rcrb
mov
mov
scas
loopne
dec
xor
fstpt
sbb
leave
test
aas
fcoml
cld
jbe
in
fwait
jle
sub
mov
sbb
push
and
addr16
outsl
sub
movsb
dec
xor
in
push
dec
popf
scas
jae
xchg
ljmp
dec
iret
dec
sbb
dec
xor
adc
in
pop
aaa
dec
mov
cmp
in
fwait
and
aad
lret
cmp
pusha
sbb
cld
mov
mov
pop
dec
or
popf
mov
out
lods
jp
ret
enter
inc
ror
push
push
sbb
push
sub
mov
out
add
std
dec
dec
movsb
mov
sbb
cmp
cmc
ret
outsl
dec
mov
pop
in
and
arpl
cmp
repz
lods
push
and
mov
movsb
pop
daa
fwait
enter
xor
aam
sbb
mov
dec
cmc
je
xchg
lods
lods
in
mov
sbb
adcb
ljmp
sub
cwtl
rcl
xchg
inc
or
adc
mov
ljmp
or
xor
mov
xlat
popa
mov
mov
pop
sub
mov
aas
stos
cmpsb
sti
xor
stc
out
or
and
jns
scas
adc
rorb
xchg
ja
adc
sti
push
cmp
outsl
jmp
push
loop
rorl
dec
sbb
mov
movsb
and
xchg
xchg
call
jbe
pushf
push
add
pop
leave
sbb
and
lods
xchg
sub
mov
pop
add
lea
test
aas
cmp
jp
mov
and
cltd
cmp
in
xor
lret
stos
clc
mov
pop
int3
test
sub
imul
cs
pop
ljmp
loopne
mov
cs
lods
pop
fcmovb
mov
mov
xor
mov
and
xchg
pop
push
xchg
push
mov
cmp
push
cmpsl
lahf
inc
mov
fwait
push
mov
out
xor
push
pop
push
or
std
and
push
out
enter
pushf
notl
je
dec
aaa
faddl
cld
cwtl
lret
push
arpl
popa
jl
les
out
mov
cmpsb
xchg
das
lea
push
loopne
and
mov
daa
sbb
adc
dec
dec
xor
pop
sarb
inc
add
inc
dec
ss
mov
push
mov
scas
xor
inc
movsl
fldcw
dec
ljmp
push
cmpsl
inc
ja
sbb
jle
insb
mov
jge
adc
leave
mov
inc
sti
outsl
push
int3
lahf
mov
in
ljmp
sub
adc
hlt
std
ja
lcall
imul
sbb
ret
xor
and
pop
mov
inc
arpl
and
push
pop
jo
mov
or
pop
stos
xor
sbb
int3
inc
lds
nop
test
jle
hlt
sub
inc
xor
jne
daa
jl
adc
push
pop
add
mov
js
pop
lock
push
addr16
mov
das
adc
cmpsb
daa
hlt
aam
xor
subl
dec
movsl
or
lret
stc
xchg
mov
cmp
mov
jno
mov
and
das
pop
sub
jmp
pop
scas
clc
daa
mov
ret
in
stos
and
std
test
inc
mov
adc
add
adc
jnp
jp
adc
add
push
fimull
jns
pop
daa
fsubs
iret
movsl
inc
shr
ja
int3
imul
stc
pop
fxch
lret
shrb
hlt
and
stc
fcoml
in
mov
sbb
fldenv
fstl
ss
and
leave
mov
cmpsb
sbb
xchg
clc
std
lea
lock
aas
or
in
cli
mov
orb
movsl
and
cltd
mov
sub
mov
push
mov
sbb
adc
outsb
into
test
or
push
dec
adc
xchg
xlat
xchg
xchg
or
sbb
mov
pop
push
mov
mov
int3
mov
mov
mov
testb
xchg
sbb
in
jmp
imul
push
das
js
shr
lea
call
aam
mov
ror
test
jno
incb
mov
dec
jno
cmp
mov
sub
pop
dec
jmp
cmp
js
cmc
fisubs
dec
jge
bound
adc
stos
loope
icebp
movsl
scas
sbb
pop
dec
fdivl
jo
pushf
cmp
dec
fs
xor
cmc
and
adc
enter
bound
cmp
rcrl
shrl
movsb
mov
leave
out
push
popa
adc
jbe
inc
and
adc
cmpsb
xchg
ror
sub
pop
lods
dec
aad
mov
dec
cs
mov
sbb
out
lock
bound
mov
hlt
out
ss
subb
jle
scas
pop
clc
sbb
xor
mov
lock
xchg
std
mov
sbb
xchg
add
mov
inc
inc
lcall
pop
imul
xor
in
adc
enter
testl
insb
xacquire
push
cwtl
test
idivb
scas
js
or
cmp
sbb
mov
jecxz
jb
xchg
je
sarl
aam
bound
aaa
cmpsl
fmulp
add
jp
das
jne
xor
fs
or
jbe
stos
loope
push
cmp
test
sbb
dec
inc
roll
scas
xchg
out
cmpsl
ret
lods
mov
xchg
sahf
mov
jnp
push
jae
les
push
in
sub
push
push
aaa
in
sbb
decb
popf
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
addl
mov
or
mov
mov
xor
andl
add
orl
mov
andl
xor
add
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
mov
mov
mov
movzbl
and
cltd
push
addl
mov
add
movl
adc
or
push
push
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
adc
mov
mov
movl
mov
andl
mov
xor
orl
xor
orl
xor
andl
add
adc
xor
orl
jmp
mov
arpl
jno
rcrb
cmp
xor
mov
enter
or
jns
sbb
sub
imul
cli
adc
mov
imul
lcall
daa
add
cmp
mov
adc
mov
lcall
add
xor
mov
pop
aad
lcall
inc
lea
jecxz
push
ljmp
jo
sbb
inc
push
cld
inc
cltd
int
sub
push
and
sub
stos
out
jecxz
xchg
pop
mov
sbb
xchg
jmp
repnz
jae
xchg
call
loope
xor
pop
jge
ret
push
xchg
xor
ret
or
cmp
or
lods
or
js
add
test
dec
xchg
or
dec
sti
pop
mov
mov
or
jb
xor
mov
imull
lock
xor
dec
das
sub
jae
cmp
hlt
dec
sub
into
movsb
shl
mov
push
popa
adcb
cmpl
cmp
lods
mov
xchg
jge
aas
xchg
cld
loopne
in
cmc
shll
sahf
loopne
popf
pop
mov
inc
jmp
push
cltd
pop
stos
insb
adc
pop
rcrb
mov
push
and
pop
sbb
pop
sti
repnz
mov
lea
outsl
pop
cli
rcrl
sbb
inc
aam
xor
enter
push
adcb
test
mov
loop
stos
rorb
fcomps
jo
cld
mov
call
jno
hlt
add
inc
cmp
pop
adc
leave
hlt
push
nop
mov
es
jnp
test
orb
mov
hlt
subb
jp
je
fldenv
fmulp
and
repnz
loope
lcallw
mov
not
xchg
cli
dec
sbb
outsb
pop
ficoms
cmp
xor
cwtl
mov
push
clc
hlt
popa
push
ds
xchg
int
mov
mov
cmp
adc
dec
mov
std
adc
ret
popa
cmpsl
push
sbb
cld
orb
data16
xchg
mov
insl
xchg
subl
daa
fstl
roll
frstor
stos
mov
scas
and
sbb
sub
pop
jp
push
or
jge
sti
movsb
push
cmpsl
jmp
sbb
into
mov
xor
mov
push
fisttps
push
mov
inc
push
lds
les
shlb
adc
mov
cwtl
lret
cltd
fucomp
xchg
lea
or
pop
incb
add
test
call
mov
cmp
push
and
push
push
dec
dec
test
cmpb
push
hlt
add
xchg
int
adc
xchg
dec
inc
les
cmpb
jmp
push
inc
bswap
pop
mov
out
ret
jmp
aaa
pop
sub
jmp
xchg
mov
mov
mov
xchg
insl
nop
mov
pop
jns
cmpb
imul
les
mov
inc
movsb
pusha
clc
mov
mov
ret
test
icebp
or
insl
ret
pop
fldt
adcb
mov
test
test
rorl
jecxz
cmp
fcompl
mov
or
leave
out
pop
jecxz
cwtl
gs
shll
imul
divb
aas
add
stc
push
das
sub
xchg
push
sbb
pop
adc
mov
lods
inc
testb
fidivl
mov
inc
push
outsb
stos
pushf
out
pop
cli
cmpsb
xchg
mov
addr16
adc
gs
xlat
xchg
aad
and
mov
sub
loope
and
pop
jno
ja
mov
cmovl
adc
insb
or
pop
xor
jecxz
mov
testb
in
cmpsl
sub
cli
mov
repz
incl
out
adc
bound
sahf
cmpsl
or
sub
dec
mov
mov
fsub
jne
loop
push
mov
daa
pop
loopne
jmp
cld
xor
pop
jb
or
sub
sub
dec
hlt
ret
mov
mov
nop
jmp
call
push
out
push
out
add
jmp
ret
std
cmpsl
lods
xchg
clc
insl
int3
pop
mov
or
loopne
or
les
out
rorl
idivb
sarl
addr16
inc
dec
lret
sbb
in
das
mov
mov
push
xchg
out
imul
int
inc
daa
push
arpl
jns
cmp
jb
dec
movsl
push
pop
push
xor
jmp
cmp
shll
clc
mov
lods
pop
xchg
and
jg
test
inc
icebp
test
fmull
insb
cmp
lcall
aad
sbb
fadds
lahf
mov
sbb
inc
insb
cmp
mov
cmp
sub
lret
shlb
dec
call
in
pop
push
cmc
mov
ljmp
movsl
ret
xor
mov
lret
ret
std
dec
jnp
or
mov
das
adc
xchg
sub
les
in
mov
aas
sub
loopne
mov
fistps
sti
mov
scas
cmpsl
dec
mov
lea
sbb
add
loope
rolb
ret
xor
iret
xor
mov
mov
rorl
lcall
mov
stc
mov
push
call
sub
xor
pop
enter
les
scas
pop
push
adc
push
xchg
fiadds
xor
cmp
stos
fldt
out
clc
mov
bound
fisubrs
jecxz
mov
add
pushf
sub
add
xchg
shll
adc
xchg
cmp
jnp
into
fucomp
and
mov
dec
sub
inc
lahf
mov
push
pop
test
outsb
xor
test
inc
gs
shlb
pop
inc
inc
cltd
xchg
or
pop
fdivl
sbbb
clc
jbe
mov
push
jne
sbb
arpl
scas
sbb
stc
cmp
inc
das
inc
jno
pop
sahf
mov
rclb
addr16
cmp
mov
jmp
ss
push
fcoml
push
xlat
js
add
mov
jmp
mov
push
inc
roll
cmp
and
mov
dec
outsb
sub
or
jae
jns
push
xchg
cli
pop
jp
inc
mov
add
adc
sbb
divl
cld
outsb
popa
scas
push
fisubrl
stos
mov
adc
lods
in
ret
xor
xchg
negb
mov
hlt
jbe
pop
dec
cwtl
adc
and
enter
arpl
outsl
mov
or
add
stos
adc
fwait
add
in
adc
movsl
dec
rclb
push
push
xorb
push
inc
orb
sbb
jl
decb
or
rorl
push
jle
popl
mov
jnp
fucomi
popa
or
add
ss
pop
pop
pop
clc
or
xor
dec
sub
aas
mov
cld
aad
movsb
test
sti
pop
sbb
ds
push
rcr
adc
cld
iret
lcall
idivb
sub
cvtdq2ps
push
pop
add
jmp
mov
ss
push
cmp
cmc
adc
lds
xchg
cld
cmp
std
xor
popf
clc
jns
out
xchg
sarb
adc
jne
imul
pop
std
dec
aam
or
add
rcll
out
shlb
shrb
adc
and
ud0
insl
sbb
fcom
ljmp
xlat
aad
and
xor
daa
mov
inc
stos
cmp
mov
jg
push
cmp
daa
sarb
jl
jg
lahf
adcl
lods
dec
aam
lahf
dec
jp
inc
shr
dec
movsb
stos
dec
xor
rcrl
sbb
pop
mov
mov
test
cmpsb
sbb
mov
loope
adc
fnsave
inc
pop
fistpl
je
sbb
shll
adc
push
in
xchg
dec
cmp
or
jmp
pushf
push
rcr
jge
push
sub
ljmp
lock
enter
push
scas
xchg
cmc
bound
mov
mov
scas
imulb
jbe
je
add
and
cld
daa
jg
mov
outsb
and
pop
xchg
sbb
stos
jl
dec
pushf
inc
xor
xor
iret
dec
je
adc
inc
out
out
cmpsl
add
div
jns
in
mov
push
mov
orb
inc
int3
jo
inc
das
mov
fadds
loope
inc
pop
xor
test
mov
mov
cltd
pop
gs
jbe
jle
ss
shl
jnp
movsl
das
mov
dec
into
in
jp
in
add
in
cmp
pop
rcll
ja
sbb
sub
sub
pop
mov
or
jl
jg
fnstenv
xchg
fnsave
icebp
xchg
or
test
or
inc
popa
mov
int
mov
and
push
repz
mov
inc
sbb
mov
inc
cld
int
cmp
test
adc
nop
xor
xchg
dec
and
ja
arpl
sub
mov
movsl
push
pop
sub
mov
aam
mov
sti
fmull
mov
lcall
mov
shrb
jl
jp
adc
pop
pop
sahf
daa
or
jo
es
add
out
hlt
mov
mov
cmp
fiadds
out
pop
lods
shr
xchg
sub
insl
xchg
stc
xor
imul
lret
outsl
int3
fstps
adc
cmp
pop
xor
int
movl
push
outsb
dec
xchg
popf
sahf
movsb
pop
jmp
gs
add
in
sub
xor
repz
mov
pop
leave
xor
jne
cmpsb
int3
out
and
in
ljmp
bnd
or
jo
xor
pop
js
sbb
cmpsl
pop
outsl
push
repz
stos
xchg
call
mov
data16
fwait
sub
aas
sti
and
imul
addl
add
out
and
mov
jns
mov
dec
out
jo
iret
cmp
lcall
xchg
les
rcrl
push
xchg
icebp
jae
sub
and
push
mov
repz
pop
insl
popf
decb
das
addr16
cli
stos
push
jbe
pop
mov
outsl
xchg
lods
mov
jbe
xor
add
mov
stc
call
and
inc
aaa
sbb
cmp
clc
fwait
mov
mov
aad
out
rol
jp
xor
movsl
scas
in
push
stos
fldenv
cmp
pop
inc
ss
test
fcomi
or
mov
sbbl
insb
xlat
push
fldt
add
cmp
sub
js
xor
and
xchg
maskmovq
testl
call
sbb
daa
inc
movb
arpl
sbb
pop
pop
fnstsw
lret
jbe
dec
and
mov
mov
lods
dec
sahf
sub
xchg
iret
xlat
popf
inc
ljmp
jg
es
add
jl
mov
loopne
fucomip
es
mov
mov
aad
push
jne
xchg
repz
jle
lcall
js
shlb
notl
push
inc
popf
jns
jo
jge
sub
js
or
cld
pop
dec
sbb
mov
cld
subb
dec
push
dec
lea
mov
jle
push
mov
fisttpll
sti
sub
jecxz
scas
push
or
pushf
mov
outsl
inc
jns
pop
aad
sbb
movsb
jl
jp
and
or
and
fbld
cmp
aas
and
cmp
push
cmp
lcall
cmp
imul
outsb
dec
fbld
ret
xor
mov
shl
push
add
jecxz
repz
cs
sbb
lret
sub
pusha
inc
mov
and
aas
jmp
int
or
mov
jb
pop
addb
sub
and
push
jl
xor
scas
rcl
mov
dec
mov
lods
pop
adc
cltd
jmp
xor
jns
ja
fnstcw
movb
ss
and
xor
or
scas
jno
cmpsl
clc
cli
push
dec
mov
sub
enter
cwtl
rolb
shlb
or
ficoms
das
hlt
mov
dec
and
movsb
dec
mov
jbe
loope
in
cmpsl
ds
lret
shrb
dec
push
ficoms
pop
sbb
lds
mov
loopne
mov
mov
aam
in
jp
inc
out
push
mov
mov
and
adc
pop
cmp
enter
fs
test
xchg
cmpsl
out
pop
rcl
jbe
out
popa
fisttps
push
dec
stos
aas
ror
sbb
jp
mov
jge
mov
outsl
outsl
jne
int3
lods
cvttps2pi
clc
push
xchg
push
pop
pop
mov
xchg
shl
jne
addb
jo
pop
fstpt
fistps
inc
bound
add
cmp
in
push
insl
faddp
repnz
xlat
dec
outsl
cmc
xchg
jle
fistl
movb
mov
pop
jae
ficomps
test
insl
pop
rorb
push
cmp
aad
jp
xchg
aaa
mov
dec
sub
call
push
mov
cmp
data16
add
arpl
int3
arpl
outsl
and
sub
imul
addr16
or
insb
leave
inc
lods
scas
cmp
popa
sbb
lahf
xlat
addl
pop
sbb
push
pusha
das
out
cli
loop
xchg
inc
test
test
into
adc
jno
mov
or
js
movsb
sbb
lods
icebp
jmp
cli
andb
and
mov
nop
leave
add
out
fwait
ds
iret
scas
sbb
push
xor
in
dec
xchg
es
xchg
out
adc
pop
mov
outsl
test
xchg
mov
sub
or
lret
push
fdiv
xchg
sti
in
pop
mov
add
aaa
inc
push
xor
jle
mov
mov
aad
xlat
das
mov
daa
cmpsl
out
sbb
sahf
adc
test
ret
add
lods
or
int3
pushf
repz
xchg
sbb
or
inc
mov
dec
mov
mov
iret
push
iret
xchg
andl
mov
dec
pusha
scas
repnz
xor
and
mov
rcrb
das
xor
pop
sbb
faddl
or
inc
sbb
aas
jno
jecxz
push
adc
and
xor
jl
fbld
xor
push
sbb
push
add
push
cmc
sbbb
mov
inc
push
pushf
hlt
ja
adc
call
fcom
xchg
insl
or
fucomp
xor
cmp
cmp
aaa
xchg
test
inc
add
dec
jle
mov
fildl
pusha
in
aas
xchg
or
rcr
addr16
push
popf
mov
je
fdivrl
testb
xchg
mov
xor
sub
cmp
cmp
imull
imul
ljmp
cmpl
insl
push
push
add
repnz
push
cmp
neg
mov
sti
xlat
movl
test
and
cmp
dec
cmpsb
sbb
out
xchg
imul
imul
lock
xor
loope
addl
cmpsl
div
out
xor
push
arpl
lods
jne
ds
pop
pop
dec
pop
xlat
shl
repz
jmp
stc
adcb
jge
fnstsw
cmpsl
or
leave
inc
idivb
mov
inc
inc
lea
repz
add
ja
insl
fwait
jb,pn
inc
stc
aaa
insb
mov
dec
out
mov
ret
xchg
mov
pop
fmul
insl
stos
jnp
data16
gs
in
mov
js
xlat
into
dec
cmc
test
xchg
push
cmp
pop
aam
or
insb
jb
fwait
call
and
sbb
fnsave
sbb
sub
aas
mov
test
movsl
xchg
fld
sbb
dec
cmpsb
pop
movsb
cmp
xor
xchg
push
inc
mov
adc
notb
out
jp
dec
ror
insb
mov
mov
add
in
and
sarb
pop
xchg
ljmp
xlat
xor
ffree
js
lock
adc
imul
jne
daa
pusha
mov
push
jns
orb
pop
enter
mov
or
mov
loope
dec
mov
sbb
iret
mov
or
iret
add
xchg
int
mov
in
push
jbe
sub
cmp
cmp
aaa
mov
adc
icebp
je
add
sub
pop
mov
cmpsl
imul
xchg
incb
inc
mov
imul
sbb
stos
jo
popf
addb
nopl
lret
scas
mov
push
das
dec
fisttpl
fisubs
mov
icebp
mov
into
jg
mov
orl
push
lret
clc
ds
shrb
or
sub
inc
aad
adc
mov
mov
push
push
je
cmp
xchg
mov
rolb
ret
test
leave
adc
sub
in
mov
push
jmp
pop
rcrb
cmpsb
scas
mov
or
jbe
sahf
push
mov
and
ficomps
mov
push
ljmp
pop
pop
dec
xchg
inc
pop
cmp
cmp
es
jge
inc
sbb
dec
dec
inc
ljmp
lret
ds
int3
ljmp
xor
cwtl
icebp
clc
cmc
fmuls
xor
xor
fs
pusha
push
cmp
xchg
call
xchg
test
mov
pop
and
mov
pop
ret
lret
mov
jae
scas
push
mov
mov
out
inc
pop
sbb
inc
shll
or
push
adc
repnz
jae
pop
and
sbb
out
cld
sti
add
jp
hlt
nop
jge
sahf
js
fwait
pop
or
lret
dec
cmp
inc
jne
popf
and
xchg
ret
je
jecxz
inc
les
sub
fadds
ljmp
add
pop
sub
fs
xlat
out
hlt
bound
dec
jne
mov
aam
pop
cli
push
cli
out
or
nop
jno
mov
adc
ret
test
test
push
push
pop
enter
sub
lret
stc
fwait
in
in
mov
jb
jae
arpl
loopne
and
cmpl
lret
sbb
or
mov
xchg
fwait
aad
jbe
cmp
mov
adc
inc
xchg
data16
jp
sub
hlt
add
sub
mov
or
or
jns
xchg
stos
stos
mov
lea
popa
lods
push
or
test
mov
jnp
rorb
pop
adc
daa
dec
cli
mov
pop
cmpsl
xor
jbe
test
dec
loope
dec
xchg
ja
gs
dec
lock
test
push
imul
outsb
shrd
mov
xchg
popa
repz
shrb
xor
mov
mov
inc
add
or
fisubl
shlb
test
inc
test
inc
and
or
ja
or
pop
pop
test
mov
lea
lcall
repz
jb
mov
cmp
pushf
cmpsl
ds
adc
pop
inc
pop
mov
stos
mov
mov
gs
ret
and
pop
repz
or
adc
popf
xchg
loopne
push
pop
insb
xor
outsl
imull
sarb
jo
ja
subl
stc
xchg
pusha
ret
inc
xchg
sahf
sub
std
outsl
enter
into
or
xor
pop
in
out
inc
rcrb
push
inc
cmpsb
mov
pop
mov
pop
mov
fidivrs
dec
testb
push
mul
icebp
das
dec
ds
mov
incl
mov
cs
push
mov
inc
mov
movsb
stos
insb
in
neg
cs
or
and
and
push
and
pop
cmp
pop
mov
mov
inc
xorl
push
jbe
in
mov
cmp
pop
std
sub
je
fdiv
mov
lret
loopne
mov
test
insb
out
inc
xor
outsb
in
pop
psrad
loop
or
jp
pop
jo
loope
jae
fcmovnb
repnz
orb
add
inc
cmp
adc
subl
dec
ret
fistps
movsb
fdivs
in
testl
add
push
test
mov
sbb
jl
xchg
or
inc
pop
orb
pop
lret
push
inc
js
pop
ljmp
jae
xor
ficomps
fstpl
fcoml
jnp
out
movsl
push
push
out
mov
push
dec
lea
ljmp
sub
cltd
rcrb
cmp
js
das
adcl
xor
fs
jmp
cmp
add
les
jae
cmc
call
js
pop
std
jg
int
leave
mov
std
inc
int3
fldcw
loope
sub
xchg
pushf
cmpsb
shr
mov
mov
bound
or
f2xm1
ret
push
sbb
jg
aaa
jl,pn
int
adc
sub
out
jnp
adc
jns
mov
inc
adc
daa
pop
aas
shlb
cmpsl
loope
in
retw
std
jge
xor
in
std
imul
rorl
cs
or
fwait
es
popf
js
pop
adc
dec
xor
into
repz
pop
leave
sarl
dec
inc
in
dec
pop
xchg
push
stc
dec
nop
cld
enter
icebp
out
insb
stos
lahf
mov
inc
iret
movsl
or
jl
loop
ret
jp
and
dec
sahf
test
add
push
xchg
push
fldcw
int3
xor
mov
pop
bound
adc
out
lahf
cmpsb
mov
push
xchg
or
cli
jge
pop
movsb
push
sub
std
pushf
mov
mov
cmp
mov
enter
xor
sub
in
movsl
ret
mul
pusha
xlat
cmpsb
loop
sub
mov
dec
add
adc
daa
push
mov
push
or
addr16
adc
repz
arpl
cld
adc
dec
or
in
clc
nop
int
pop
push
pop
nop
fs
fidivrs
and
cltd
insl
push
mov
lea
stos
pop
cwtl
or
int3
xchg
and
xchg
loop
bnd
shlb
std
xor
dec
jno
movsb
sbb
mov
das
sti
pop
push
mov
sahf
and
and
out
jge
jge
push
xor
pop
cmpsb
push
dec
lods
or
test
mov
and
js
es
cmp
outsb
in
not
add
test
loopne
jp
orl
dec
adc
ret
dec
sbb
fcmovu
in
dec
inc
dec
ret
dec
out
testb
cmpsb
into
pop
push
push
std
pop
dec
mov
data16
sub
push
in
adc
pop
movsl
jbe
push
add
mov
sub
xor
mov
inc
repz
cltd
pop
ja
jno
movsb
push
data16
dec
adc
add
push
sbb
push
push
lahf
lea
int3
arpl
mov
fwait
rcl
or
mov
popf
sahf
fwait
add
xor
movsb
test
or
inc
cmp
je
sbb
push
cmp
cli
les
xchg
inc
fnstcw
cltd
cmp
rcr
daa
and
test
push
jg
imul
sub
inc
and
movsb
sbb
dec
adc
dec
shl
cld
dec
imul
dec
sbb
add
dec
test
cmpsl
push
adc
adc
adc
dec
pop
fidivs
push
lahf
out
mov
js
lods
std
clc
inc
sub
fwait
jl
stos
dec
fwait
xlat
jbe
movsb
or
rcrb
push
test
jecxz
lahf
push
xchg
xor
mov
test
ja
inc
add
lods
das
pop
sarl
jmp
es
push
and
dec
xor
rcrb
mov
or
xchg
xchg
movsb
xor
mov
ret
daa
leave
xchg
add
inc
or
mov
arpl
loop
or
push
mov
fst
mov
stos
jge
xchg
inc
mov
cmp
lret
fistpl
outsl
pop
push
mov
mov
test
or
push
cmp
or
out
lcall
cmp
stc
mov
jbe
cmp
popf
cli
ficomps
mov
fld
xchg
and
inc
add
lret
mov
nop
les
in
mov
jge
push
fists
test
cmc
ss
pop
je
cmp
mov
adc
aas
arpl
jge
push
push
xor
cmp
cmp
fistpll
movsl
xchg
test
or
test
movsl
ljmp
pop
ret
js
jg
adc
mov
sub
adc
aaa
movsb
jns
mov
cmp
add
xchg
adc
jno
pop
inc
lods
fisubrl
gs
jbe
jge
and
jae
or
jg
out
jae
stos
or
cld
stc
enter
jle
sub
ljmp
sbb
cwtl
mov
lods
xchg
push
cmc
decb
mov
lahf
jns
mov
cmpsl
in
testb
push
xlat
xor
movb
sbb
jbe
sbb
jmp
xchg
sub
data16
push
mov
pusha
fidivrs
test
mov
dec
cltd
repz
lcall
imul
mov
loope
test
jno
pop
js
mov
pop
stos
andl
xchg
sbb
push
mov
stos
jg
adc
rclb
sub
fnsave
jb
xor
lcall
adc
aaa
mov
stos
xchg
push
fmuls
pop
aam
lods
add
popa
into
push
fdiv
pop
pusha
mov
ucomiss
scas
daa
mov
mul
xor
mov
mov
mov
mov
cmp
and
push
mov
mov
dec
or
fs
inc
xorl
test
lock
cmpsb
add
cmp
stc
jae
movsl
add
insl
repz
into
pop
cmp
adc
or
xchg
mov
cmp
or
mov
into
fldl
xor
stos
mov
leave
fdivr
ss
ja
inc
adc
adc
push
cmp
mov
sub
stos
jmp
add
rorl
or
cmp
pop
movsl
sbb
movl
scas
notl
ds
or
dec
pop
repnz
cs
repnz
orb
cltd
fnstcw
icebp
sub
stos
insl
fiadds
nop
xchg
cmp
rcrl
sbb
mov
daa
roll
add
push
cmp
mov
in
and
sbb
sub
jp
mov
mov
pushf
xchg
dec
add
fbstp
xor
pushf
jb
xchg
push
addr16
dec
or
inc
xor
and
jo
mov
popf
test
addr16
shrl
mov
mov
shlb
push
pop
push
fldpi
repnz
lods
push
jp
adc
pop
cli
and
imul
mov
cmovp
fcomps
or
mov
cmp
sar
pop
ret
mov
icebp
cmc
mov
adc
jo
imul
out
mov
adc
mov
call
aam
movq
mov
adc
jp
scas
aas
out
adc
cmp
mov
adc
push
lcall
sar
cmp
mov
add
popf
jmp
les
adc
push
cmp
sahf
push
mov
mov
lods
mov
jae
cmp
dec
push
cmpsl
je
nop
sbb
repz
adc
push
adc
ds
push
loopne
lods
inc
stos
pop
out
dec
hlt
mov
jge
mov
out
mov
inc
cmc
jge
sub
sub
xchg
dec
icebp
btc
mov
lahf
das
ret
out
cs
inc
cli
stos
mov
cmp
ds
and
push
je,pn
popf
and
mov
bnd
call
jecxz
mov
fnop
daa
dec
push
push
test
fwait
cmp
popf
dec
jge
pop
pop
dec
jnp
das
out
loop
sbb
or
and
xchg
fisubrs
push
shl
mov
adc
and
or
loope
shll
add
sbb
xchg
fnstsw
xchg
sub
cli
aaa
rorb
xor
adc
mov
popa
loopne
inc
pop
iret
cld
xlat
stos
lds
xor
icebp
orl
adc
add
aam
into
stc
jno
mov
push
test
inc
incl
cmp
cwtl
js
clc
mov
dec
push
outsl
repz
dec
test
mov
iret
cli
mov
mov
jb
mov
pop
out
cltd
and
fiadds
out
cmp
ret
cmp
xor
inc
mov
pusha
cmp
dec
or
stc
bound
mov
inc
dec
add
dec
es
pusha
inc
setne
xor
out
push
and
sub
jae
xor
mov
push
mov
mov
or
mov
mov
iret
outsb
cwtl
in
subl
dec
cmp
roll
gs
pop
mov
inc
jnp
add
adc
je
sti
aam
cmpl
leave
ror
push
out
dec
add
jge
inc
mov
call
hlt
loopne
repz
xchg
ljmp
mov
jl
pop
push
movntps
mov
add
insb
mov
rcr
lahf
aaa
orb
idivl
iret
xor
sub
sahf
mov
mov
xorb
out
insb
mov
clc
leave
cmpsb
mov
icebp
xor
loop
jb
in
jo
mov
mov
jns
xchg
bound
xchg
leave
fisubl
sbb
mov
out
cltd
mov
andb
insb
rorb
push
test
sbb
test
dec
cmp
pop
adc
das
int3
jne
pop
mov
cld
pop
add
aam
incl
mov
cwtl
mov
shr
mov
in
sbb
lods
test
and
fadds
sbb
push
test
xchg
push
clc
pop
pop
adc
jb
clc
mov
out
xor
sti
test
pushf
adc
push
daa
sbb
inc
jno
xor
adc
call
jmp
mov
rcl
fnstsw
movsb
int3
hlt
adc
lahf
in
fstpl
or
jnp
sbb
dec
xchg
adc
fs
repnz
mov
pop
add
data16
and
imul
or
push
es
sub
divb
test
out
test
loope
adc
or
inc
mov
das
xchg
js
lcall
outsl
push
enter
std
lods
pop
pop
data16
in
inc
lcall
daa
js
hlt
wrmsr
push
into
sbb
gs
dec
mov
jno
push
fisttpll
aad
aad
test
pop
dec
js
mov
and
rorb
pop
inc
or
jecxz
cmc
aad
xchg
adc
hlt
subb
movsb
stc
imul
cmp
inc
jno
mov
sub
add
xor
add
mov
loop
sbb
xor
cmp
jne
movl
cmp
movl
je
sub
mov
mov
mov
subl
xor
add
adc
xor
andl
xor
movl
cmp
movl
jne
movl
cmp
jne
mov
mov
xor
mov
mov
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
pop
ret
push
mov
sub
addl
push
xor
push
xor
mov
add
mov
xor
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
and
andl
xor
movl
movl
and
mov
mov
xor
xor
add
mov
orl
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movzbl
sub
mov
sub
xor
mov
addl
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
adc
mov
xor
xor
xor
sbb
mov
mov
mov
sub
imul
addl
movl
cmpl
je
cmpl
jne
pushl
pushl
call
xor
or
dec
mov
jmp
mov
orl
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
xor
mov
addl
sbb
mov
sub
mov
andl
xor
mov
mov
mov
dec
mov
andl
xor
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
jmp
test
icebp
arpl
scas
push
fld
mov
push
pop
bound
and
ljmp
push
test
dec
iret
mull
fdivl
xchg
xchg
in
ja
mov
xor
mov
or
xchg
das
rcrb
jb
dec
jns
and
les
xor
mov
clc
vfmaddsub213ps
stos
push
jne
xchg
icebp
daa
mov
test
pop
adc
xchg
xor
out
cmp
shll
addb
mov
dec
ror
inc
mov
mov
iret
pop
test
insb
cmp
stos
aam
jge
movsl
xor
ja
mov
mov
and
loopne
repz
inc
push
pusha
jmp
xlat
sbb
mov
inc
sub
cmp
xor
inc
mov
cmc
cs
cwtl
push
add
das
mov
js
sub
rcrb
push
cmc
roll
cmp
js
xor
in
lock
lods
xor
popa
pop
shrb
xchg
xchg
fsubr
daa
stc
sub
push
cmc
pop
push
mov
sti
movsl
cld
pushf
loope
clc
pop
adc
mov
mov
or
test
xor
cmp
insl
push
idivb
and
xor
iret
adc
cmp
sti
cmpsl
push
mov
inc
dec
stc
mov
xlat
pop
rolb
sbb
dec
in
shll
or
divl
movsl
inc
and
movsb
js
push
adcl
shrl
mov
in
adc
fcoms
in
icebp
fsubl
cmc
and
push
fs
lods
or
imul
int
xchg
je
stos
fldcw
add
push
jge
inc
ja
sbb
mov
decl
test
push
lret
pop
test
shl
inc
cmp
je
or
mov
ss
mov
leave
scas
dec
mov
inc
sti
push
pop
bound
in
inc
mov
jno
ja
pop
mov
js
jecxz
int3
or
sbb
pop
jmp
es
das
adc
inc
dec
mov
mov
outsb
fstps
adc
xchg
inc
dec
dec
mov
mov
test
scas
cltd
xchg
addr16
sub
pop
data16
stos
mov
xor
fucomip
inc
cmc
dec
fs
aad
cli
insb
mov
cmc
cmp
mov
sbb
mov
hlt
jo
outsl
or
xchg
nop
subl
in
push
roll
loopne
repnz
in
pop
mov
mov
inc
mov
aam
fidivs
jg
stos
mov
cmpb
sbb
ljmp
and
mov
negl
inc
lds
ret
imul
xchg
out
hlt
cmp
jmp
rcl
stos
cmp
shr
jecxz
dec
jbe
jmp
rcl
in
inc
push
mov
ja
lret
jne
iret
ds
out
icebp
inc
das
roll
addr16
xor
pushf
dec
jb
lea
pop
fwait
in
xchg
inc
or
sub
cmp
subl
mov
xchg
mov
movsb
lock
sub
pop
sbb
xlat
mov
cmc
daa
cmpsb
xchg
xchg
inc
pop
or
add
or
cmp
leave
jle
pop
inc
cmpsb
dec
sbb
dec
js
scas
sahf
xor
lahf
cmc
jnp
sti
mov
cltd
cmp
sub
sahf
cld
xchg
fdivr
jno
rorl
xlat
hlt
lret
outsb
sbb
jo
rclb
je
mov
dec
mov
ficoms
jp
outsl
cmp
test
or
lods
rolb
jge
insb
mov
mov
mov
push
dec
and
mov
adc
mov
insb
outsb
out
sbb
inc
push
sub
imul
push
bound
idivl
mov
cmp
int3
test
and
in
mov
daa
js
mov
adc
test
test
cmpsl
lret
dec
in
in
mov
add
xor
lds
jle
out
dec
dec
mov
cmp
xchg
xchg
xchg
xchg
roll
jb
pop
mov
cwtl
dec
mov
or
into
mov
pop
cmc
outsl
push
js
in
rcrl
cmp
mov
mov
roll
jno
push
jbe
pop
and
mov
pop
add
jb
mov
cmp
inc
int3
sbb
jp
mov
fnsave
lahf
lcall
pop
push
sub
inc
mov
pop
mov
mov
inc
popa
or
mov
iret
ret
mov
add
rcll
fistps
fnstenv
push
mov
sbb
icebp
int3
je
pop
mov
mov
cli
adc
pop
xchg
jg
movsb
insb
jne
and
pop
and
sarl
inc
jb
mov
mov
mov
jmp
push
fcomps
mov
xchg
repnz
xor
or
shrl
xlat
rorb
mov
xor
and
imul
xchg
stos
jne
jne
jecxz
xchg
je
xchg
cmp
adcb
cmpsl
and
mov
xlat
mov
ret
add
scas
loopne
mov
rcrw
jns
sbb
rcll
pop
loop
aaa
adc
xchg
mov
jno
dec
cwtl
xor
fucomp
in
notb
mov
and
pop
sbb
sbb
popa
adc
ja
adc
aaa
aam
fsubr
fucomp
pop
inc
adc
test
jnp
movsl
dec
dec
ret
sub
out
loop
pop
loope
scas
outsl
mov
pop
fs
jne
lea
pusha
xchg
mov
cmp
jbe
dec
iret
int3
adc
movsb
xlat
ljmp
outsl
pop
cmpsl
es
cltd
cmp
mov
test
repnz
xchg
imul
and
stos
sub
das
xor
outsl
mov
sahf
int
int3
leave
dec
jge
cmc
push
push
std
xor
ds
jmp
pop
sub
mov
pop
and
mov
mov
xor
xor
cmp
xchg
push
leave
sbb
mov
inc
dec
dec
fidivrs
sub
jae
jg
xor
outsb
rcrl
jge
mov
sti
sbb
dec
loopne
inc
jne
pop
imull
or
outsl
ds
inc
loop
push
mov
mov
xchg
push
cs
aad
push
mov
dec
mov
imul
mov
repz
lods
mov
cli
std
sub
cs
fiadds
lret
pop
rcl
jnp
pop
push
cmp
mov
or
lods
inc
and
insb
aam
sub
or
mov
rcll
fs
icebp
repnz
and
sarb
cmp
push
cltd
push
cmpsl
jge
jg
mov
fwait
aas
xchg
scas
lahf
into
mov
adc
ret
pusha
xor
leave
xchg
push
movsb
ret
ficomps
addl
sbb
and
dec
je
inc
mov
or
pop
push
add
mov
divl
sbb
and
or
mov
iret
inc
out
movsb
adc
movzwl
movsl
xlat
addr16
mov
add
and
cmp
mov
pop
xchg
mov
adc
mov
sahf
out
mov
daa
xchg
scas
cmp
test
arpl
xchg
fldenv
sub
push
test
jno
js
cmp
mov
mov
jl
mov
pop
cli
push
inc
insl
jnp
adc
fldt
loope
movsl
sbb
mov
add
jns
inc
aaa
xchg
or
int
mov
dec
xchg
push
xchg
aaa
jae
add
mov
ljmp
scas
mov
xchg
or
mov
xchg
and
ret
lods
test
dec
scas
dec
mov
mov
adc
outsl
insl
push
repz
xchg
pop
push
and
mov
leave
jecxz
loope
imul
imul
cltd
into
sti
loop
push
push
xchg
xchg
jbe
mov
aas
sub
int
push
jmp
in
xor
mov
ja
sahf
mov
or
cs
std
jl
lret
shlb
xchg
test
pop
mov
add
hlt
mov
push
into
fwait
mov
mov
repz
add
imul
int
sub
and
mov
mov
rcll
dec
pop
fadds
iret
cli
mov
pop
rol
je
shrb
xchg
inc
add
pop
mov
jne
mov
fisttps
xchg
cmp
inc
je
and
ffreep
lods
xlat
pop
mov
iret
ror
xchg
adc
test
cmp
sbb
lret
push
in
jge
shll
int
xor
cmpsl
and
testl
pop
and
pop
xchg
dec
cmpsl
xchg
outsl
fstl
test
insl
cmp
repnz
cld
jmp
mov
rorb
leave
inc
xchg
xchg
out
cmp
pop
ficoms
push
pop
cwtl
cmp
sbb
sahf
mov
sbb
add
les
and
adc
jl
adc
bound
stc
iret
push
lock
mov
insb
xchg
stc
and
dec
or
lret
mov
rcrb
pop
stos
loopne
fsts
cmp
xchg
mov
fbstp
pop
xchg
adc
push
lcall
cmp
cs
xchg
cmp
cmp
add
sarb
into
or
or
popf
in
aas
mov
out
fstpl
cmp
sahf
pop
mov
sub
xor
jecxz
mov
xchg
inc
ljmp
mov
testb
push
cmp
leave
mov
movsl
outsl
loopne
push
xchg
inc
movsb
cmp
rcl
loope
in
xchg
add
into
or
bound
inc
loopne
mov
xor
jno
pop
clc
xor
mov
mov
mov
mov
xchg
dec
jg
xor
ss
cld
adc
dec
adc
std
mov
sub
push
mov
test
pop
adc
cli
shrl
dec
xor
ljmp
push
pop
lea
mov
dec
add
add
int
add
pop
sub
sub
lea
bound
dec
jge
jae
jo
mov
push
aam
scas
iret
mov
push
mov
addl
push
pop
mov
mov
lcall
ljmp
ret
cmp
subb
push
test
out
jecxz
jge
inc
shr
mov
add
in
fsubrl
xchg
push
pop
sti
pop
xchg
mov
enter
push
mov
dec
loopne
xchg
and
fsubrl
arpl
xchg
sarb
mov
int
mov
js
push
aam
shll
aas
xlat
aas
inc
fistpll
push
add
cmpsb
mov
sub
stos
je
cmpsb
in
les
in
daa
xor
pop
pusha
or
inc
ret
rcrl
push
sub
push
notb
mov
cmp
push
pusha
cmp
mov
sahf
lret
jns
sub
jle
lret
mov
ss
hlt
dec
test
hlt
pop
and
inc
dec
jmp
cmc
divl
push
xchg
adc
cmp
jle
jnp
aaa
iret
jg
arpl
jmp
mov
mov
push
inc
adc
jno
fsub
push
mov
mov
push
dec
cltd
outsb
pop
inc
dec
jmp
sub
add
adc
mov
inc
mov
out
pop
push
push
add
test
and
fsts
shrb
or
repz
imul
ss
xchg
orb
icebp
repnz
inc
add
cmc
mov
bound
out
out
jp
call
sbb
pop
sbb
mov
stos
cmp
sbb
sub
mov
adc
ret
jecxz
int3
jae
loope
sub
mov
mov
mov
aas
add
int3
jmp
cmp
mov
das
hlt
jns
sub
add
aaa
rclb
cmp
jo
mov
shll
scas
pop
clc
and
js
cli
lds
jne
std
adc
or
clc
mov
or
stos
movsl
xor
inc
xchg
pusha
sbbl
cmpb
jp
mov
repnz
pop
push
cwtl
push
fsts
shrb
push
in
adc
mov
xchg
mov
jg
xchg
add
movsl
xor
xor
inc
mov
pop
adc
cld
mov
adc
mov
adc
cmpsb
cmp
repz
jbe
mov
sbb
inc
sub
xchg
shr
test
jbe
iret
dec
enter
mov
sbb
in
push
mov
dec
mov
dec
fistl
jnp
rorl
cmpsl
jl
sbb
xor
pop
push
inc
mov
js
xchg
mov
jl
and
xchg
mov
xchg
mov
sub
inc
mov
ja
fldt
cmp
mov
xchg
sti
mov
clc
jg
jo
mov
push
out
cmp
inc
iret
fmull
mov
dec
fimull
mov
adc
xor
xchg
xchg
mov
cmp
pop
inc
sti
xchg
data16
sti
mov
popf
mov
xor
imul
daa
ret
ret
xor
pop
sbb
arpl
in
sti
jbe
jo
add
and
bound
dec
subl
cmp
sbb
cwtl
jge
xlat
dec
inc
mov
icebp
add
jle
and
movsl
mov
mov
push
test
sbb
sbb
pop
aas
test
fisubs
mov
int
inc
or
cmp
pusha
and
orl
xorl
iret
ficomps
dec
push
loop
cwtl
mov
cmp
fnstenv
jl
mov
xrelease
xor
lds
mov
cmp
add
xchg
loope
cli
dec
daa
sahf
cmp
movsl
stos
fwait
les
mov
adc
mov
mov
or
pop
cld
ss
shl
das
sub
mov
add
insb
xor
add
xchg
add
sub
add
pop
sub
push
into
jb
mov
push
sarb
sbb
sti
repz
lret
push
adc
push
mov
mov
out
scas
popa
int3
push
stos
pop
shl
es
cmp
mov
and
push
push
cld
xor
and
stos
dec
mov
aad
in
jecxz
jns
mov
sub
dec
dec
in
dec
cmp
movl
stos
add
es
nop
shll
popa
arpl
shrl
js
push
ss
or
sub
push
and
sarl
popf
jne
xor
cmp
jo
xlat
jne
jmp
ret
sub
out
stos
mov
dec
inc
mov
jecxz
stos
mov
stos
mov
xlat
in
inc
sbb
xchg
in
lcall
sahf
cmp
cwtl
inc
push
push
mov
mov
xchg
insl
out
xchg
out
out
xchg
into
sbb
inc
sub
icebp
dec
insb
jecxz
xchg
lret
inc
jns
and
adc
inc
pop
icebp
mov
jl
addl
xor
ljmp
shlb
adc
imul
cmp
movsl
in
and
push
aad
xor
popa
push
out
jg
sub
mov
and
adc
dec
mov
xchg
push
pop
inc
out
mov
jbe
fdivr
loop
or
sub
push
fidivs
and
push
jns
xor
repz
dec
dec
daa
or
in
and
pop
or
ret
cmp
inc
xor
pop
xchg
and
lcall
add
test
fcomi
dec
xor
cs
fdivrl
lock
sarl
lods
lods
cmovge
xor
gs
mov
int3
enter
xor
xchg
pushf
sbb
jnp
adc
in
stos
mov
insl
mov
faddl
pop
mov
push
sahf
fidivs
cmp
sbb
in
imul
add
xor
mov
loop
arpl
imul
je
sti
loop
cmpb
dec
int3
sub
pop
xor
rolb
movsl
fcmovnb
pop
hlt
pop
lea
push
icebp
inc
gs
push
add
push
sbb
inc
sbb
pop
addr16
dec
push
push
push
add
xor
in
cmp
or
adc
stos
sub
clc
jo
cmp
dec
insb
push
xorl
mov
sbb
gs
xor
jle
and
mov
sub
test
lods
push
cmp
dec
cs
push
jae
sub
cmpsl
inc
and
inc
xchg
pop
push
notl
jo
pop
cltd
or
jo
sbb
stos
xchg
cmp
jmp
sbb
xor
xchg
ficompl
push
cwtl
sub
jb
inc
cmpsb
dec
jae
pop
cmp
or
jp
inc
push
jl
outsb
lods
outsb
push
setg
mov
add
stos
cmp
fwait
stos
aas
push
ss
insl
outsb
and
popf
lret
in
inc
mov
adc
sbb
cmpsl
sbb
xchg
push
or
call
mov
push
sub
out
lahf
cli
call
jl
add
mov
fldcw
mov
mov
or
dec
sub
cmp
std
mov
popa
mov
testl
push
in
int3
adc
mov
add
jg
outsl
arpl
clc
pusha
sti
icebp
or
mov
cs
fsts
lret
xor
lods
sbb
decl
push
lcall
repnz
scas
mov
jne
test
cwtl
xor
xchg
mov
mov
cmp
popf
fnstsw
xchg
push
test
insb
cs
rorb
unpckhps
movsb
mov
ret
add
pop
sub
shll
imul
dec
fdivl
imul
dec
int
jg
out
sbb
popa
out
out
mov
add
fsubrs
push
in
add
pop
adc
xchg
daa
aaa
cmp
adc
mov
cmp
hlt
cmpsb
push
pop
xchg
inc
mov
les
je
mov
hlt
adc
and
push
ucomiss
js
mov
add
or
add
sub
cwtl
daa
pushf
jne
mov
add
or
jle
ss
push
xorl
cltd
xchg
sbb
data16
loope
jl
jbe
inc
mov
movsb
ss
mov
std
xchg
push
fistl
int3
cmp
dec
sbb
lods
cld
sti
mov
dec
jb
mov
jecxz
xchg
xchg
lahf
dec
imulb
stos
mov
push
xchg
pushf
int
push
pop
lock
in
push
pop
mov
dec
ret
and
jno
movsb
inc
dec
into
shlb
adc
outsb
or
xchg
movsb
jmp
and
mov
adc
imul
not
mov
out
out
data16
xor
mov
arpl
mov
mov
mov
pop
lds
pop
mulps
push
cmp
out
stos
aad
xor
mov
and
dec
popl
outsb
inc
mov
mov
dec
jae
inc
roll
in
loop
jne
push
jbe
xchg
pop
jmp
push
push
mov
pop
xor
mov
cmpsl
pop
pop
fs
fiaddl
in
sahf
out
and
dec
and
push
xorl
inc
sub
cmpsl
loop
xchg
daa
cs
int
aas
cmc
inc
adc
dec
mov
mov
data16
adc
sub
imul
xor
push
incl
push
sbb
pop
fnsave
dec
js
jae
jnp
push
insl
push
and
das
add
cmp
add
bound
test
mov
popa
stos
mov
insl
subb
cmp
xor
hlt
pop
xchg
inc
shrl
push
pushw
mov
cld
test
adcb
pop
pop
push
test
jmp
lods
call
hlt
lds
and
push
cs
aas
lea
movsb
jno
inc
in
aaa
jno
dec
and
jno,pn
mov
push
sbbl
cmp
loope
mov
fisttps
hlt
jmp
cltd
sbb
xchg
xchg
inc
mov
fwait
mov
int3
xchg
xor
rorb
jge
sbb
fisubrs
sarl
lcall
out
sub
mov
cmp
shlb
bound
insb
scas
movsl
sbb
movsl
scas
movl
dec
scas
imul
jmp
test
jne
push
cmpb
mov
dec
pop
xor
std
ss
fs
cs
mov
sub
cltd
adc
in
and
imul
stc
adc
loopne
and
pop
jae
pop
jno
pushf
xchg
sub
stos
pop
lahf
push
and
inc
jne
pusha
fs
xchg
aad
cmp
sub
mov
jae
scas
xchg
data16
lcall
outsb
jae
stos
clc
fistl
bound
pop
cmp
mov
and
cs
mov
jecxz
push
or
mov
pop
shrb
movsb
adc
scas
lret
pop
arpl
cli
cmp
jno
out
cmp
sbb
lret
mov
adc
inc
repz
add
stos
in
mov
pop
ss
cli
pop
cmp
or
xchg
arpl
ret
inc
mov
sahf
fstpl
push
cld
repnz
and
lds
dec
and
stos
pop
or
sbb
mov
stc
pop
cmp
stc
mov
out
pop
repnz
pushf
mov
stos
stos
lea
out
ds
adc
dec
jae
cmpsl
leave
mov
test
outsb
push
cwtl
mov
and
into
cltd
mov
hlt
inc
movl
dec
xlat
cld
rcrl
iret
jle
inc
int3
mov
mov
push
inc
and
xchg
xor
adc
sbb
inc
inc
test
je
push
fisttps
and
lea
clc
adc
arpl
in
mov
out
notb
gs
and
xlat
sbb
lcall
andb
jmp
loope
pushf
mov
call
idivl
or
pusha
jge
sqrtps
xor
sbb
das
movsb
jmp
mov
ljmp
test
aad
add
add
xchg
scas
fwait
xchg
je
pop
subb
sbbb
loop
fdivrs
mov
dec
mov
pop
sub
loope
mov
inc
jbe
orb
hlt
mov
adc
movsb
sbb
lcall
je
loope
ljmp
stos
vsqrtpd
mov
xor
xchg
repz
pop
jnp
divb
mov
imul
test
pop
pop
loop
je
scas
stos
mov
ret
jns
call
push
mov
arpl
pop
popf
leave
mov
mov
jbe
rorl
call
sub
cmp
pop
adc
pop
push
inc
mov
std
ds
mov
bound
mov
cwtl
lock
bound
and
and
lret
pop
movsb
out
fidivrs
dec
xorl
ret
push
sbb
aaa
mov
cli
rcr
bound
ret
inc
adc
xchg
pop
aaa
push
push
jne
js
xchg
xchg
pop
sbb
lcall
and
mov
repz
rcrl
sbb
xor
movsb
lahf
sbb
pop
xor
xchg
xor
clc
ret
inc
and
loopne
inc
cli
hlt
enter
mov
test
cmp
or
sub
and
push
or
mov
dec
out
dec
xor
sub
mov
cmp
sbb
inc
mov
xchg
dec
pop
push
mov
in
out
fwait
push
or
fldl
sbb
mov
pop
fdiv
into
test
ficoms
ficomps
leave
icebp
fs
cltd
fwait
xchg
mov
movsl
mov
pop
enter
pop
sub
fcomps
pop
pop
or
add
sub
cmp
push
ret
mov
ficoms
movsb
out
dec
or
cmp
pop
subps
out
stos
mov
mov
in
and
add
sbb
sub
ret
lcall
lock
push
cmp
movsl
xor
pop
jle
popa
lret
dec
stos
push
mov
mov
pop
adc
push
lcall
je
ret
and
std
adc
push
jb
das
mov
scas
cmc
int3
out
test
fwait
push
or
jne
aad
xchg
icebp
adc
stos
out
pop
dec
lock
and
iret
rcll
fs
dec
and
in
movsb
add
xor
inc
cmpb
jl
mov
xlat
sti
lds
sbb
pop
movsl
icebp
pushf
jb
cmpsb
nop
mov
xchg
das
lcall
aaa
sbb
repnz
insl
push
dec
lock
cmp
repz
xchg
jne
jnp
push
int3
lods
sbb
pop
cmp
cli
js
test
das
mov
mov
xchg
out
ficoml
mov
xchg
insl
jo
xchg
mov
add
xor
je
shlb
inc
fsub
test
jb
loop
hlt
adc
ret
xchg
pop
mov
out
pusha
scas
mov
cmp
add
cld
lret
pop
mov
nop
bound
cmp
mov
scas
mov
gs
sbb
jp
sbb
add
or
dec
mov
mov
lods
in
in
popf
jns
dec
inc
xor
divl
fistpl
jno
xchg
mov
sbb
test
xchg
mov
punpcklwd
sub
nop
cltd
jmp
ret
jge
fsts
cmp
mov
aam
int3
fisubl
roll
fmulp
leave
sbb
dec
pop
jp
cmp
jo
enter
or
das
in
add
sub
xor
cmp
xor
xor
lock
fs
loop
sbb
outsl
scas
push
push
push
add
push
fdivrs
inc
fldcw
lods
lds
sbb
test
inc
sub
push
xor
daa
sahf
fstl
rolb
lahf
push
les
pop
in
cli
jne
pop
enter
pop
xor
or
dec
ret
xor
adc
adc
in
and
mov
add
stc
rcr
sti
popf
mov
pushf
mov
jle
fsubrs
jle
xor
pop
dec
jnp
je
pop
jmp
movsb
or
clc
mov
iret
mov
mov
push
cmp
push
inc
mov
cmc
jns
out
imul
mov
inc
and
mov
ret
mov
das
les
mov
push
mov
or
cmp
into
out
mov
clc
pushf
mov
cld
mov
bound
loop
cmpsl
xlat
add
sahf
jo
xchg
nop
or
or
addr16
aad
xor
addb
cmp
mov
pusha
mov
or
outsl
dec
into
sub
adc
shrl
pop
jmp
mov
or
clc
xchg
je
into
sbb
fstpl
cmp
pop
rolb
pusha
jb
jb
fldl
pusha
pop
popf
push
mov
addr16
inc
mov
sbbl
dec
pop
pop
mov
mov
mov
pop
mov
insl
pop
shl
je
imul
incl
cltd
inc
repnz
or
lds
add
push
adc
adc
jne
test
xchg
sbb
out
jmp
mov
fisubl
out
mov
loope
jmp
in
dec
adc
shll
pop
out
in
imul
sub
repnz
or
dec
xchg
mov
pop
mov
movsb
mov
sub
mov
lret
mov
divb
aad
cmp
ret
sahf
push
imul
xchg
movsl
mov
pop
mov
or
push
lret
xlat
mov
test
test
xchg
pop
cli
sbb
adc
in
lret
sahf
fdivrl
movsb
movsb
ss
dec
add
or
pop
or
popf
xchg
ret
loop
jae
or
shll
test
out
pop
mov
stc
mov
test
mov
popf
jmp
ret
ds
sbb
arpl
nop
xor
repnz
xor
sub
mov
mov
sub
adc
cmpsb
popa
sbb
add
sub
outsb
ss
nop
frstor
pusha
push
fimuls
and
mov
in
fdivr
sbb
xor
ret
lahf
mov
cmc
cld
out
dec
popf
mov
loopne
pushf
dec
jecxz
inc
add
rcrl
mov
pushf
icebp
mov
in
addb
out
ja
push
add
inc
scas
mov
pushf
mov
pop
cld
lret
iret
mov
xabort
adc
dec
xor
stos
ror
rcr
xlat
mov
dec
jl
pushf
mov
subl
mov
jecxz
popf
shlb
daa
pop
or
out
scas
stos
sub
jp
stc
div
inc
enter
cs
inc
push
mov
lret
fwait
push
lods
jo
les
push
pop
jne
nop
mov
push
pop
dec
or
or
add
inc
sub
xor
in
outsl
and
dec
jmp
mov
or
mov
xchg
jnp
mov
scas
popa
clc
mov
test
pop
sbb
ffree
in
cmp
mov
adc
cmp
sbb
xor
and
sarb
and
inc
shlb
roll
mov
dec
xchg
cltd
push
cld
mov
lock
leave
add
arpl
test
outsl
ror
fdivl
mov
test
insl
xor
call
ds
in
push
testl
js
xchg
jecxz
pushf
sub
lcall
mov
adc
adc
pop
inc
shrb
shrb
adc
mov
inc
xchg
cmc
loop
icebp
nop
dec
js
dec
loope
jge
push
fwait
xlat
xor
mov
lret
in
sar
sbb
and
mov
mov
leave
inc
add
and
inc
lds
mov
int
sub
lods
inc
push
jne
inc
lods
ljmp
or
pop
sarl
jmp
jp
out
push
and
mov
inc
outsl
mov
or
jecxz
sbb
fwait
stos
push
push
adc
or
lcall
stos
test
loopne
movsl
push
stos
mov
push
sbb
bound
scas
cmp
out
xor
enter
repz
cmp
xchg
cli
loope
scas
inc
aas
mov
cmp
dec
jae
dec
ljmp
mov
mov
inc
cld
out
xchg
pop
pop
imul
bound
xchg
mov
adc
sub
cltd
into
push
push
dec
xor
stc
outsb
js
aas
fadds
pop
ss
jle
gs
enter
mov
xlat
outsb
stc
and
adc
mov
in
push
stos
xor
mov
loop
or
mov
movb
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
jmp
jp
int
ret
add
pop
ret
repz
bound
bound
push
loope
fcomp
in
dec
push
cmp
mov
ja
js
std
dec
dec
into
cmp
scas
orl
lds
sbb
inc
sbb
addl
dec
icebp
cmp
add
push
dec
ret
aad
dec
add
ljmp
mov
push
add
fisttpll
repz
cmp
jmp
push
jae
push
push
xor
insl
inc
cmc
lret
mov
add
add
and
sahf
rorl
movsl
or
jae
xchg
in
clc
out
jecxz
aad
push
test
cmp
add
imul
sarl
mov
ret
das
lea
sbb
jmp
bound
addl
jmp
imul
mov
and
adcl
mov
mov
jmp
inc
mov
je
inc
mov
fcomps
push
jl
xor
push
add
in
dec
addl
sub
inc
movsl
les
push
sarl
dec
int
sbbl
sahf
orl
dec
sub
mov
pushf
out
scas
inc
outsl
cmp
testb
xchg
push
mov
ret
sahf
sbb
push
add
fisubrs
or
adc
jle
push
subl
pop
testl
dec
in
rclb
dec
jns
or
bound
pop
test
rcrl
rol
xlat
sub
xchg
hlt
mov
shrb
jl
adc
inc
mov
in
xlat
jp
fstps
js
test
dec
jns,pt
mov
std
je
jmp
aad
and
aam
data16
adc
fwait
mov
repnz
int3
jle
out
nop
mov
fs
jmp
jb
loop
sahf
push
fnstenv
test
xchg
push
dec
inc
inc
sbb
push
pop
out
adc
mov
xchg
cmpl
data16
daa
shr
ret
jg
call
orl
adcl
push
ucomiss
jl
cs
pusha
push
outsl
ds
jne
fsubl
mov
mov
cmpsl
cwtl
std
xor
dec
push
push
push
sbb
in
mov
cmpsb
add
aas
cmp
jecxz
inc
stos
testb
push
mov
mov
or
xchg
fisttpl
pop
and
mov
popf
dec
mov
in
xchg
cmpsl
pop
and
std
sub
xor
test
shl
lcall
div
pop
jle
xor
mov
sub
xchg
xor
icebp
jno
outsb
mov
push
cs
nop
sub
popa
dec
mov
lahf
subb
adc
or
jnp
xor
cwtl
sbb
jae
das
and
adc
and
adc
addr16
ljmp
cmp
pusha
fistps
out
gs
pop
adc
mov
adc
push
xchg
fs
aas
sub
add
outsl
pop
test
in
rcrl
inc
dec
xchg
pop
in
or
jl
and
or
pop
sbb
aam
dec
cli
aam
sub
push
in
pop
test
aam
js
push
out
loop
push
mov
and
rorb
inc
pop
jmp
adc
inc
cmp
mov
cmp
sbb
int3
and
or
outsb
out
xor
add
xchg
cld
jo
cli
or
add
pop
stc
out
arpl
adc
cmpl
sarl
adc
pop
cmpsb
adc
inc
push
mov
bound
stos
scas
lods
loop
cld
movsl
jl
out
popa
cmp
paddq
das
scas
incl
pop
push
mov
adc
push
mov
mov
mov
pop
dec
xchg
push
and
mov
mov
mov
mov
aad
dec
mov
jg
out
lds
pop
int3
fistps
xchg
adc
xor
stc
xor
dec
jg
loopne
shlb
jns
dec
xor
adc
add
out
lahf
jg
stc
sub
push
jb
mov
inc
movsl
mov
sbb
sbb
or
sbb
daa
pop
pop
mov
jmp
dec
pop
xchg
and
xchg
movsb
shll
jg
add
pop
mov
jl
mov
pop
aad
inc
andl
push
std
test
repz
mov
cmpsb
inc
jne
ja
xchg
xor
inc
pop
push
in
scas
mov
lahf
in
mov
mov
sti
pusha
jle
and
xchg
lods
popa
dec
ret
std
cs
jnp
jbe
ror
and
mov
mov
fcmovb
jl
cmp
adc
and
xchg
daa
sbb
fldenv
cmp
dec
daa
sub
dec
test
push
or
psubq
or
mov
je
jae
negl
pop
mov
add
test
icebp
push
mov
mov
or
mov
pop
je
ret
xchg
popf
dec
out
inc
cmp
jge
cmp
nop
cmp
fcomip
mov
mov
add
mov
inc
lret
fcomps
repz
mov
fimuls
pop
into
inc
mov
pop
mov
jnp
popf
sbb
mov
out
jns
jmp
scas
int
lea
imul
pop
pushl
sub
rorb
pop
leave
repnz
movb
cmp
lea
insl
call
push
and
mov
fists
sbb
sub
xor
jne
aad
sbbl
icebp
and
inc
jle
cmp
push
inc
mov
dec
push
xor
cltd
stos
jno
jbe
push
outsb
sub
adc
repnz
das
call
mov
adc
ficoms
inc
movsl
and
subl
mov
lret
stos
or
pusha
lock
inc
pop
aad
mov
jecxz
lret
imulb
pop
iret
loop
adc
xchg
lret
outsb
pop
cli
mov
lahf
mov
mov
leave
dec
push
fldl
popa
hlt
adc
test
mov
pushf
dec
jecxz
or
outsb
cwtl
stos
jo
add
fs
popf
mov
inc
sbb
andl
jge
jl
mov
shrb
mov
cmp
int3
inc
push
sbb
sbb
aam
adc
lock
pop
stc
jbe
or
shrb
bound
jmp
xchg
jb
jp
or
fistps
cli
jb
jp
mov
lods
adc
iret
cmp
mov
mov
in
dec
enter
sbb
jns
pop
loope
pop
add
ret
iret
push
add
jle
mov
pop
and
lret
mov
outsl
movsb
push
cltd
jns
in
jo
jg
stos
out
add
inc
clc
mov
push
out
pusha
imul
mov
ljmpw
pop
mov
push
inc
nop
adc
and
outsl
jp
xor
or
cmpsl
testb
xchg
mov
adc
cmp
idivl
adc
pop
adcl
popf
or
pusha
pcmpeqb
repz
or
inc
gs
repz
scas
lcall
push
mov
fisttps
fiadds
push
xchg
rorb
aad
or
jle
bound
xchg
xchg
adcl
mov
xchg
mov
cmp
mov
cltd
jle
sub
mov
push
xorl
xchg
xchg
pop
mov
addl
jbe
je
mov
in
in
mov
rcl
push
cmc
shl
addps
sbb
je
adcb
sbb
add
mov
mov
lock
or
xchg
ljmp
fimuls
push
mov
jmp
sbb
lret
test
gs
neg
jmp
dec
lahf
dec
test
jnp
in
popf
and
lret
jmp
dec
addl
add
pop
lock
cwtl
jae
add
insl
mov
mov
fiaddl
sti
lahf
inc
xchg
xchg
jmp
and
repz
fnstsw
adc
leave
aas
test
addr16
arpl
xor
sti
push
jmp
fwait
mov
pop
xor
dec
dec
adc
incl
lret
jl
push
sbb
jg
jl
push
popa
ljmp
jns
add
jno
shll
shrb
mov
and
mov
mov
lods
daa
add
add
add
adc
xlat
shlb
jb
cmpl
cmp
or
sub
movsb
add
inc
pushf
push
sbb
dec
xor
inc
push
shlb
popa
dec
test
inc
ja
push
pop
pop
les
ss
jb
xchg
mov
mov
cmp
cmp
dec
or
popf
adc
adcb
xor
aas
inc
es
cmp
daa
xlat
sbb
jmp
sbb
and
cmp
je
cmpl
xchg
jp
push
xlat
pop
cli
pop
xor
aam
xchg
mov
stos
aaa
testb
jl
fmuls
and
mov
ja
push
fisubrl
test
push
xchg
sbb
xchg
repnz
test
js
pop
pop
mov
mov
scas
xor
test
xchg
mov
xor
data16
mov
ret
add
inc
xchg
cmc
lcall
inc
xor
xor
repz
xchg
and
jge
inc
inc
jo
icebp
std
mov
je
stos
mov
add
loopne
lcall
data16
add
aam
jge
enter
cmp
aam
jle
sub
imul
cmp
add
add
movl
je
subl
sub
xor
repz
xchg
mov
jmp
leave
daa
pushf
sbb
xchg
sbb
push
ss
cmc
bextr
shll
rclb
inc
test
mov
dec
rcr
dec
jl
lods
and
or
mov
sbb
ja
je
aad
clc
aaa
notb
jbe
mov
and
popf
push
out
jle
push
xor
pop
pop
and
js
lret
loope
mov
jp
sbb
clc
sbb
mov
jmp
in
imul
mov
push
jns
pusha
movsb
lods
sbb
in
fadd
lcall
pusha
and
nop
dec
jle
xchg
jne
cbtw
loope
pop
out
cmpsb
int3
insb
pop
cs
jle
std
mov
pop
pop
stos
jb
add
movsl
pop
cli
jecxz
fldenv
cmpb
sbb
mov
pop
mov
loopne,pt
mov
or
aad
or
sub
aam
mov
daa
mov
bound
jo
xchg
sub
adc
pop
bound
in
aad
aam
insb
jnp
dec
adc
fisubrl
xchg
sahf
rcll
aad
xchg
in
shrb
xor
bound
int
xchg
call
in
lds
data16
enter
shrl
out
jmp
sbb
inc
cld
jmp
movsl
aas
repnz
scas
dec
pop
push
inc
push
bnd
mov
pop
sbb
ds
or
fs
rcrl
sbb
or
enter
cwtl
fsubrp
aad
out
fs
es
jecxz
jp
sub
xor
dec
outsl
jp
pop
cmc
mov
pop
mov
push
hlt
nop
cmpsl
call
sahf
adc
xlat
cmp
push
outsl
movsb
mov
lcall
rolb
addr16
push
ret
mov
jno
out
jb
imul
adc
xor
dec
gs
movzbl
pop
pop
cli
lock
and
out
outsl
sub
insl
clc
mov
incl
loop
adc
aas
stos
jmp
push
and
das
loopne
mov
xchg
test
jb
cmp
notb
jl
sti
adc
insb
aad
mov
add
lret
mov
shlb
jo
jp
mov
pop
lods
dec
adc
test
dec
leave
xchg
and
leave
mov
sbb
cmp
cmp
adc
inc
stc
xor
sti
inc
nop
mov
dec
cmp
mov
jne
es
add
push
nop
std
es
sbb
push
jge
int3
mov
cmpsb
cmpsl
mov
mov
inc
sbb
das
mov
rorb
xchg
pop
fisttps
inc
mov
fs
sbb
pop
leave
nop
inc
push
mov
push
inc
mov
idivl
xchg
dec
sbb
aas
dec
insb
fs
rcrl
pop
ja
sar
pop
fisubl
test
xchg
add
adc
mov
inc
pop
xchg
mov
xchg
insl
xchg
pushaw
add
sbbl
lahf
negb
sub
or
pop
iret
add
cmp
loope
mov
or
xchg
mov
adc
mov
mov
sub
rclb
movsl
in
shlb
xor
insb
scas
pop
jge
push
in
jmp
int3
shlb
repnz
jb
pop
mov
push
cli
mov
inc
push
fistpl
add
shlb
or
and
xchg
or
sarb
mov
shll
pop
mov
mov
push
xchg
lahf
push
and
jp
sbb
ja
jnp
hlt
fmul
mov
push
sbb
push
loope
sti
push
out
mov
cmp
adc
mov
iret
subb
dec
and
mov
xor
in
lret
and
mov
rorl
imul
push
pop
movsl
lcall
mov
xor
or
pop
ljmp
in
outsb
aam
and
inc
pop
jge
loop
test
jg
daa
xchg
inc
daa
repz
xor
ret
or
jecxz
pop
notl
jnp
sub
and
mov
mov
lock
push
pop
ljmp
inc
push
outsl
add
ljmp
jmp
rcl
xchg
mov
test
xchg
das
out
insb
loop
mov
adc
adc
test
dec
adc
xor
adc
sti
xchg
pop
loopne
and
test
xlat
adc
jmp
pop
movsb
je
sub
lock
adc
cwtl
lret
mov
sbb
fnsave
cmp
mov
xchg
shll
jmp
jp
enter
test
int
dec
pusha
adc
jl
push
mov
push
add
jo
pop
sahf
stos
mov
pop
or
inc
mov
mov
aad
cli
xchg
mov
mov
icebp
popf
add
mov
xchg
cmp
rorl
data16
xor
mov
sbb
adc
push
jae
jmp
lcall
sub
sti
psubusb
je
into
sub
xor
mov
jl
lret
in
cmp
jns
xchg
fmull
adc
les
pop
cmp
cld
lcall
inc
std
jg
push
mov
sub
lock
repz
push
popf
jmp
xor
rorl
pop
sub
adc
jb
jg
gs
lods
fsubrp
cmpl
fdivrs
mov
xor
or
xchg
lret
push
int
push
mov
sub
pop
push
inc
fdivs
lods
data16
sbb
cmp
push
dec
pop
mov
xor
dec
mov
xor
test
insb
sti
icebp
and
arpl
frstor
popa
outsb
fstps
and
negb
sbb
inc
leave
out
imul
nop
xlat
sahf
lcall
push
mov
out
daa
mov
iret
mov
movb
call
sbb
gs
xchg
ret
pop
mov
das
pop
adc
subl
jl
xchg
dec
daa
push
es
into
mov
mov
ljmp
stc
and
jo
sub
ds
loopne
inc
int3
shlb
mov
xchg
std
xor
into
inc
sub
mov
leave
orb
in
cmp
sbb
or
leave
jge
fbld
sbb
repz
into
es
sbb
adc
int
mov
jae
push
sub
divb
mov
lea
pop
dec
ja
sti
hlt
dec
mov
add
ret
loope
inc
inc
out
jbe
cmp
or
xchg
inc
leave
aaa
mov
xchg
xchg
xchg
call
sbb
add
mov
sbb
pop
dec
jne
cwtl
adc
push
out
cld
arpl
xchg
mov
test
xlat
or
in
xor
sahf
in
inc
aas
adc
sahf
mov
mov
divb
loope
movsb
nop
push
ret
loopne
inc
xor
lret
ljmp
inc
in
adc
add
mov
mov
movsl
jg
pop
push
pop
stc
aad
sarb
push
sub
dec
sub
scas
push
cwtl
popf
adc
add
adc
repnz
sub
nop
push
movsb
jno
hlt
jl
in
iret
add
into
xor
filds
das
ret
sbb
nop
ror
rcl
addr16
arpl
push
mov
add
jns
in
enter
jno
push
cli
int3
push
push
dec
sbb
leave
and
sub
jmp
or
dec
inc
mov
sbbb
cli
push
outsl
cli
xor
insl
adc
mov
push
movsb
mov
mov
jno
fucomi
fiaddl
and
mov
xor
ds
mov
fisttpl
or
je
in
into
inc
test
stos
addl
sti
les
add
sub
cltd
out
in
inc
mov
xor
pop
mov
xchg
cwtl
sahf
lcall
xchg
enter
imull
popa
sbb
in
enter
push
sbb
push
dec
sbb
shlb
sbb
cmp
lret
sub
das
lock
lds
call
fs
add
jnp
gs
mov
loopne
movsl
loop
jns
test
rolb
aad
or
arpl
imul
cmc
or
mov
pop
mov
jle
mov
dec
jnp
ljmp
xor
mov
sbb
lcall
mov
dec
dec
loope
xchg
and
inc
mov
sahf
jp
cmpsl
mov
sbb
ja
pop
imul
adcl
loope
andl
test
aad
std
dec
scas
leave
cmpsb
adc
inc
bound
adc
push
leave
lea
pop
push
jl
popl
mov
rcrl
mov
in
inc
imul
imul
jns
cmp
js
or
xlat
ds
dec
xchg
es
add
in
dec
pop
lea
cs
scas
sbb
and
add
sti
jb
iret
inc
mov
jg
pusha
mov
iret
repnz
sbb
sub
push
inc
aas
sbb
fs
nop
sbb
ret
pop
xchg
cmp
rolb
pop
mov
jp
and
push
clc
shl
mov
pop
mov
test
sub
dec
and
jae
cwtl
andl
loope
and
int
jbe
loop
ss
data16
xchg
and
data16
cmpsb
enter
sbb
cli
mov
lcall
int3
xor
repnz
out
adcb
cmp
xchg
stos
lret
test
adc
lds
lcall
sub
out
popa
adc
addr16
or
pop
mov
or
inc
int
add
and
xchg
rolb
fucomp
add
dec
xchg
add
pmaxub
in
rcrb
xchg
inc
out
imul
cmc
arpl
xchg
mov
test
dec
mov
mov
pop
mov
loope
push
add
cld
jmp
adc
popf
aas
and
inc
cmpsl
imul
orl
dec
jb
add
adc
das
sub
xchg
clc
cmp
aam
dec
sbb
js
push
cltd
xchg
mov
mov
mov
push
les
aas
test
add
fs
jge
push
pushl
lods
and
pop
out
cmc
sti
shl
dec
into
inc
and
mov
jmp
pop
bound
sti
shr
js
mov
dec
nop
in
inc
push
lds
lock
xchg
cmpsl
jae
ja
insl
sbb
fsubrl
stos
mov
sti
out
cli
mov
bound
test
sbb
xor
jge
or
insl
fsqrt
sbb
xor
xor
call
ret
mov
loope
mov
mov
xchg
push
push
cmp
dec
decb
fstl
ljmp
xchg
mov
dec
icebp
popa
xchg
dec
in
jnp
lds
jge
or
gs
sti
test
out
jo
ljmp
fnsave
fdivl
gs
aaa
push
inc
mov
loopne
ficomps
jo
cmp
mov
mov
mov
xchg
adc
in
pushf
adc
pop
jo
mov
in
xor
pop
mov
out
pop
fs
bound
inc
cmp
cmp
and
xchg
and
repz
or
xor
call
jb
sbb
icebp
int
or
lret
push
xor
test
xor
iret
cltd
mov
mov
fnstsw
pop
sahf
aad
push
push
hlt
stos
loopne
add
sbb
and
dec
mov
js
cmp
mov
pop
iret
icebp
jl
je
aam
pusha
clc
dec
ljmp
jns
cld
push
sahf
sbb
sbbb
js
jmp
jnp
jns
or
movsl
pop
sbb
mov
aam
add
dec
enter
iret
jo
cmp
es
cli
lcall
jmp
ja
cmpsl
inc
adc
xchg
inc
das
loopne
jmp
or
gs
dec
in
push
adc
jb
sub
lahf
mov
es
insb
fcomps
aam
cmpsl
or
push
je
scas
test
dec
or
aaa
mov
dec
xchg
fbstp
inc
adc
cli
pop
sub
pop
jno
add
je
inc
cwtl
lods
add
inc
add
adc
stc
mov
sub
and
inc
loopne
jl
mov
mov
lods
mov
inc
mov
mov
mov
jns
add
and
shrb
ret
fsubs
into
and
lock
sub
test
mov
push
cld
push
lods
lods
pop
or
sahf
and
nop
jns
insb
jge
xchg
mov
sub
cmp
aad
xchg
mull
inc
aaa
pushf
loopne
lea
stos
mov
addr16
rcrb
jbe
ss
inc
cmp
adc
mov
sarb
sub
mov
push
mov
inc
imul
pop
scas
push
dec
xor
insb
ds
add
or
mov
mov
or
shlb
pusha
insl
mov
rcr
dec
add
int3
dec
bound
aad
aad
and
sti
adc
dec
pop
adc
test
push
stos
cwtl
push
mov
inc
out
not
mov
mov
or
outsl
test
cmp
loopne
dec
xchg
das
xor
fdivrs
out
sbb
cmp
insl
fiadds
sub
xchg
andb
mov
scas
lods
adc
or
sub
cmpsl
imul
pop
test
stc
int3
lret
pop
mov
or
or
sarb
cltd
scas
mov
shll
sbb
nop
pmaddwd
mov
dec
cmpsb
cwtl
xchg
push
ret
test
mov
and
les
call
pusha
sub
cmovge
pushf
out
lods
fs
sbb
test
scas
xor
mov
outsb
cmp
mov
jbe
std
adc
jecxz
pop
es
daa
pop
ss
cmp
inc
je
pop
cmpsb
sar
in
sub
pop
xchg
push
ja
popf
test
in
fstps
pop
mov
cmp
mov
sbbb
and
add
mov
ret
add
ret
jnp
test
sbb
fldcw
and
mov
inc
pop
aam
jle
mov
fwait
cmp
daa
das
jo
xchg
aas
adc
loopne
mov
mov
adc
sub
push
lret
cmp
enter
inc
xchg
adc
insb
aaa
stos
or
sbb
xchg
bound
push
jp
addr16
mov
mov
mov
and
mov
addr16
push
clc
popa
push
scas
js
and
ss
pop
xchg
out
mov
cmc
arpl
stos
int3
fists
js
sub
sahf
call
dec
jb
pop
push
rcrb
push
addr16
and
xchg
and
js
out
cmpl
into
outsb
adc
repz
mov
cmpsl
or
test
xchg
int3
pop
adc
inc
dec
in
in
leave
mov
pop
sti
cwtl
test
mov
pop
jp
cmpsb
or
and
mov
pop
scas
jno
ljmp
andl
je
sub
or
sub
mov
pop
fisubs
lcall
cmp
ret
or
cmp
sbb
lds
hlt
out
loopne
daa
lret
xchg
mov
jae
cmpsl
mov
lock
inc
push
test
mov
sbb
ss
mov
movsl
es
mov
cwtl
xchg
sbb
jnp
push
pop
in
and
push
mov
xor
jmp
fldcw
and
xchg
and
insb
push
sub
popa
xor
xchg
xor
test
push
push
xchg
aad
and
pop
sti
dec
push
jl
xor
mov
je
push
xchg
mov
xchg
xlat
aaa
dec
jbe
xchg
popf
push
cmpl
adc
jle
jno
loop
mov
mov
lods
and
mov
sbb
jbe
pop
dec
or
or
sub
hlt
or
icebp
push
fwait
push
adc
add
and
mov
push
dec
adc
popa
lcall
icebp
jb
iret
push
push
js
out
xchg
jl
pop
cmp
cld
lods
out
imul
cmp
fcoml
add
inc
mov
in
push
sub
fsts
add
adc
cmp
ljmp
sbb
sbb
inc
xchg
sbb
cmp
inc
or
hlt
xor
adc
insb
xor
push
mov
mov
push
xlat
pop
sub
arpl
shll
jg
mov
test
mov
sub
cmpsl
xchg
jae
outsl
mov
gs
lds
outsl
icebp
outsl
lods
jl
pop
adc
lcall
pop
xchg
clc
test
or
stc
mov
pop
pop
push
xchg
cmp
test
pop
ja
in
lea
ret
fdivr
and
or
into
aad
xor
outsb
push
dec
push
jmp
mov
movsl
xlat
cli
jle
or
push
je
out
or
sbb
mov
aam
mov
cmp
sbb
mov
aam
gs
inc
lcall
jno
or
cmpsb
dec
mov
xchg
outsb
push
adc
pop
rorl
cmp
movsl
xor
xor
mov
xchg
adc
jno
add
cmp
int3
out
and
cmpsb
cli
mov
push
jns
es
sub
add
sbb
idiv
mov
lods
xor
push
aam
mov
ss
lret
jecxz
push
aad
fimuls
call
xchg
push
in
xchg
inc
lahf
mov
rorl
repz
popf
test
jmp
mov
xor
lcall
sar
sahf
mov
enter
enter
aaa
sbb
ja
jmp
fisubl
xchg
rcr
xchg
or
mov
mov
ss
int3
les
dec
push
hlt
sbb
xlat
arpl
mov
cmp
inc
nop
lret
jl
or
jns
and
ds
repz
imul
xchg
rorl
notl
fdivrs
dec
inc
js
dec
imul
test
jo
mov
or
cmovge
adc
stos
out
sbb
and
push
in
mov
pop
jle
xchg
and
jnp
aam
sbb
and
popa
lcall
add
rorb
out
imul
xchg
rcrb
ficompl
testb
fsubr
xlat
jbe
jne
rorb
out
inc
pop
sub
bound
xor
cwtl
cwtl
lret
pop
sub
ret
dec
shlb
fwait
jmp
push
ljmp
ds
xor
adc
sub
cltd
cmc
sub
lds
int3
push
int
call
fldcw
xor
stos
into
dec
ret
cmp
xor
pop
dec
cld
push
ficomps
sbb
push
rcrb
sub
xor
js
filds
fucomi
out
and
xchg
mov
push
imul
pop
faddl
ret
adc
cld
stos
pop
mov
lock
out
dec
icebp
in
lea
dec
xor
mov
jbe
daa
pop
imul
movsb
fcmovu
jae
jae
jo
lock
xchg
loope
adc
inc
mov
popf
out
out
adc
add
sub
bound
pop
shlb
addl
aaa
or
cmpsl
cmpsb
pop
jle
je
sti
mov
mov
add
repz
ret
mov
icebp
ss
mov
push
insl
xor
push
out
cmp
fadds
mov
jmp
adc
in
and
mov
jl
into
and
ret
rcl
xor
sbb
push
xor
sbb
mov
dec
jg
das
pushf
int
fsubp
stos
mov
mov
jge
xchg
popf
inc
lods
cwtl
les
mov
and
in
and
mov
sub
sbb
inc
push
stos
push
mov
imul
enter
mov
or
mov
lea
jae
mov
pop
jl
mov
mov
cwtl
mov
daa
dec
insl
and
stos
jmp
cmp
fiaddl
loop
sub
je
lods
popf
mov
xlat
outsb
cmp
pusha
outsl
lea
adc
loopne
xchg
jbe
mov
adc
into
jno
xor
jb
pop
lea
push
pop
dec
xchg
loopne
pop
mov
inc
fisttpl
jne
sbb
sbb
aaa
fdivrp
notl
mov
add
push
mov
mov
mov
or
pop
and
pop
push
loope
pop
mov
je
sahf
call
push
inc
inc
push
hlt
inc
je
or
fimull
dec
imul
mov
js
ficompl
test
jae
ret
jle
xchg
push
cs
jge
insb
jnp
ret
jae
clc
lcall
mov
add
scas
mov
inc
mov
cmpsb
out
dec
sbb
scas
movsl
cltd
mov
push
stos
mov
xor
cmp
sbb
mov
xlat
in
xor
and
sub
cmc
jg
jne
mov
mov
mov
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
lea
mov
sub
mov
and
push
sub
mov
sub
mov
orl
lea
subl
mov
add
mov
mov
adcl
mov
xor
subl
add
mov
mov
add
mov
mov
add
mov
subl
mov
add
add
push
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
addl
mov
adc
mov
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
adcl
mov
mov
mov
add
xor
or
jmp
paddsw
mov
inc
xchg
inc
jp
popa
pop
bound
cmp
sbb
rcll
add
sti
mov
jbe
pushf
push
push
xchg
pushf
ret
das
pop
aam
pusha
or
xor
outsl
ret
popf
dec
insb
test
mov
jb
rol
cmpsb
jnp
aaa
xchg
loopne
and
in
daa
push
fidivrl
push
cld
pop
test
inc
mov
mov
mov
add
call
push
mov
mov
insb
add
gs
lods
push
sahf
xor
add
push
inc
sbb
rorl
sar
aaa
dec
fwait
inc
push
iret
pop
cwtl
sbb
push
rcrb
push
in
jg
dec
inc
nop
cmp
mov
stc
inc
out
mov
fs
aas
jne
shrb
cmpsb
fcompl
ljmp
scas
xor
movsb
bound
into
gs
jl
nop
addl
jbe
cmc
mov
cwtl
dec
mov
out
test
mov
iret
cmp
mov
jne
and
jnp
imull
lcall
jp
fucomp
sbb
test
jnp
fsts
insb
insl
lods
or
push
pop
push
cmpsb
or
cmp
mov
sub
popf
push
mov
les
pop
push
sbb
dec
fisttps
or
push
outsb
shrb
pop
push
cmpsl
mov
or
sbb
push
clc
aam
loope
add
stc
xlat
outsb
inc
in
sbb
mov
loop
sub
dec
fnstenv
dec
hlt
test
pop
or
stc
insb
inc
cltd
in
mov
and
add
mov
dec
add
js
and
fiaddl
gs
jle
lret
pop
mov
cmp
xorl
mov
and
or
or
ret
fs
pop
imul
je
cli
insl
imul
ja
push
fldt
gs
das
mov
outsl
xlat
outsb
mov
cwtl
jno
push
fcmovu
cld
fwait
lods
xchg
cltd
add
push
mov
mov
lds
xor
cmp
imul
daa
sti
pop
dec
jo
dec
push
dec
shl
or
mov
mov
xchg
sub
pop
dec
repz
cmp
lea
xlat
mov
repz
push
jge
inc
cmp
mov
dec
mov
call
cmc
cmp
jge
aas
fnstcw
mov
pop
stos
push
dec
fcmovnbe
push
inc
xor
ficompl
sbb
pushf
add
push
das
mulb
mov
pop
lds
hlt
push
and
push
dec
jns
mov
cld
xor
push
adc
xchg
vpmaxsw
fwait
push
outsb
dec
xor
daa
inc
loopne
inc
lds
xlat
rcll
push
cld
fsubs
push
pop
inc
cwtl
sqrtps
vcvtss2sd
pop
jg
pop
cmp
dec
scas
sbb
mov
in
jecxz
scas
inc
stos
dec
scas
push
push
arpl
out
popa
jg
jl
insl
mov
or
lahf
call
cmp
stc
sub
test
cltd
mov
mov
xchg
cmp
lret
pop
roll
fimull
jmp
push
shrl
or
js
inc
jbe
cmc
jge
pop
mov
sti
jne
sub
jge
test
ja
adc
dec
xchg
outsl
add
sub
mov
clc
out
in
inc
pop
loope
push
out
inc
adc
lods
add
std
mov
push
icebp
popf
push
jno
push
sbb
pop
adc
mov
add
push
and
add
dec
repz
push
mov
and
jl
mov
mov
cmp
sbb
jl
xchg
sahf
out
and
jae
or
cmp
enter
add
aas
ss
popa
and
popa
std
mov
and
cld
hlt
cmp
in
mov
mov
fists
mov
or
cwtl
sub
and
mov
int3
fsubp
or
mov
fmuls
scas
push
pop
or
add
push
mov
pop
mov
cld
jae
bts
dec
cmp
or
mov
sub
lods
sub
imul
jg
and
pop
hlt
lock
aam
ror
add
jbe
aas
dec
cwtl
xchg
jns
shll
scas
jo
sub
or
clc
jmp
mov
sub
or
aam
jmp
mov
and
mov
fdiv
outsb
stc
fcmove
fs
loope
mov
mov
adc
cmc
int3
xchg
in
sub
pusha
mov
sbb
jmp
and
mov
jo
mov
stc
jae
and
jg
adc
sbb
mov
cld
ret
adc
sub
sub
or
push
ficoml
iret
mov
sub
cltd
sbb
out
adc
pop
into
dec
divl
lds
fnsave
xchg
ljmp
dec
pop
stos
mov
inc
fs
mulb
xchg
pop
popa
xor
mov
or
fxch
mov
dec
pusha
out
ss
jne
cmp
jbe
pop
out
stos
aad
mov
in
xor
mov
pop
insl
sub
mov
push
mov
stos
aaa
dec
ret
gs
jl
xchg
int
jno
lcall
push
mov
jns
dec
dec
into
adc
xchg
ja
fs
push
mov
fprem1
mov
imul
jp
test
jnp
mov
pop
imul
xchg
push
movsl
or
and
adc
lock
out
mov
loope
hlt
add
jbe
cmp
fsubrs
shll
arpl
rclb
push
sub
test
push
cmp
insl
pop
mov
mov
jo
adc
das
mov
dec
xlat
and
scas
mov
mov
sbb
inc
adc
mov
lds
mov
or
mov
pushf
fldt
fnstcw
push
inc
ret
add
shlb
push
mov
sarl
lret
jae
insb
rcr
add
lcall
test
cmpsl
sbb
es
xchg
jp
jns
lods
inc
inc
movb
sub
mov
or
ja,pt
sbb
movsb
push
ret
dec
jl
mov
mov
inc
push
scas
xor
or
stos
in
inc
insb
jne
sbbl
lahf
call
jno
jle
shrb
dec
lret
filds
sbb
out
mov
mov
and
jmp
sub
add
add
in
dec
es
xchg
mov
je
rorb
pop
pop
cs
sarb
push
out
cmpsb
cwtl
mov
out
or
int3
and
mov
xchg
dec
fcmovu
ljmp
imul
inc
js
pop
pushf
jmp
cmp
xor
add
aaa
inc
shlb
repz
es
ss
xor
sbb
aas
mov
bound
mov
in
das
mov
mov
adc
jns
imul
lret
xchg
or
xorb
fcompl
data16
mov
push
out
arpl
loop
cli
fiadds
jl
orl
mov
xchg
cmp
stc
jl
add
cmp
outsl
test
sbb
and
repz
jmp
jb
ret
mov
jo
jmp
cmpsb
out
mov
xchg
stos
out
cmp
test
xchg
lret
dec
scas
ret
cmc
lods
mov
inc
ja
dec
in
fs
and
mov
and
xchg
jl
and
jl
divb
test
adc
mov
icebp
testb
out
jl
dec
cmp
xor
push
fimull
xchg
push
in
pop
mov
jns
outsb
adc
dec
ret
mov
call
cld
fwait
push
shll
repnz
and
rorl
insb
pop
mov
adc
out
cs
lods
pop
pop
sbb
lcall
dec
sbb
in
adc
fcompl
aad
out
jle
adc
in
or
clc
jnp
dec
arpl
ss
mov
cli
mov
add
cmp
add
pop
arpl
test
mov
mov
sub
mov
mov
or
push
mov
rep
mov
lods
insb
adc
lea
incl
xchg
lcall
das
pop
dec
pop
xor
inc
inc
cmp
push
bound
xor
outsl
inc
jo
sbb
mov
pushl
loopne
dec
fcmovnu
cmpsb
mov
add
cmp
inc
push
mov
call
xchg
mov
mov
pop
movsb
xchg
call
sub
rorb
aad
xchg
enterw
pop
inc
divl
imul
xchg
add
push
fistl
loope
movsl
push
adc
dec
or
lea
mov
sbb
inc
jb
cmc
add
stos
pop
cmp
icebp
icebp
and
int3
pop
dec
mov
add
sbb
cmp
pop
pop
jae
inc
mov
xor
imul
ljmp
jb
and
xchg
clc
les
pop
addr16
inc
shll
loop
dec
mov
jbe
dec
xchg
fnstenv
jns
sub
rcll
pop
add
xchg
lret
hlt
xchg
sbb
int
xchg
mov
mov
xor
jno
stos
and
jecxz
push
jle
mov
xor
mov
mov
xchg
outsl
dec
mov
fcomps
adc
test
mov
push
lret
mov
cmpsl
pand
scas
hlt
inc
aam
ficompl
cmp
dec
mov
daa
lods
pop
mov
lock
pop
pop
into
psrlw
mov
xchg
scas
ss
jbe
push
das
add
inc
push
jo
out
ds
push
jp
fists
js
jmp
out
mov
cmpsl
add
ja
add
sahf
sahf
pop
lods
add
mov
mov
pop
repz
clc
or
xor
jmp
lahf
pop
pop
fisttpll
adc
adc
and
xor
cmp
sahf
ja
adc
inc
mov
das
cwtl
negl
leave
xor
out
aad
es
mull
in
fs
sub
arpl
mov
xchg
call
mov
test
or
cmp
adc
int
mov
or
pop
lods
popf
fisttps
ffree
xor
and
fiadds
stos
and
adc
sub
xchg
jbe
jno
sub
dec
hlt
mov
sbb
push
pop
jo
mov
mov
inc
push
cmc
scas
hlt
ljmp
rcr
loopne
or
jmp
rep
fldt
sbb
mov
data16
cmp
pop
add
adc
insb
lret
mov
mov
in
out
mov
orb
mov
outsb
jne
inc
imul
adc
cmp
cmp
movl
dec
je
ds
jg
jbe
fsubrp
out
into
inc
jg
out
in
push
dec
popf
jp
jo
out
mov
mov
mov
xor
rolb
jno
sahf
mov
lods
insb
fs
push
xor
xor
aam
mov
inc
fdivs
jnp
push
dec
and
cmpsl
xchg
or
in
adc
out
shrl
sbb
or
mov
imul
outsb
push
jbe
push
xchg
pop
xlat
shll
inc
sbb
mov
scas
cwtl
outsb
fisttpll
sub
rclb
ss
jnp
inc
aaa
popf
push
xlat
adc
lock
je
inc
push
mov
push
xchg
rcrb
lock
dec
imul
int3
loop
lahf
xor
movsb
push
push
dec
inc
sbb
test
out
insb
ja
std
sub
jo
jle
pop
mov
jno
ja
mov
scas
jmp
cs
jo
jb
add
lret
call
xlat
outsb
outsb
xorl
inc
jbe
loopne
cmp
mov
xor
mov
pop
int3
imul
pop
add
mov
sbbl
roll
sbb
ljmp
imul
mov
movsl
mov
outsl
xchg
stos
pop
mov
test
es
sbb
or
add
cmpl
mov
leave
add
rolb
shrb
pop
scas
mov
sbb
sbb
xchg
xchg
pop
xlat
adc
dec
sbb
test
jbe
in
loopne
cmp
je
sbb
sti
xor
push
jae
in
pop
imul
cmp
ret
cmp
stos
mov
adc
jp
andb
bts
insb
cmp
and
scas
fdivp
inc
pusha
andl
xlat
pop
inc
cmp
xchg
ds
fistps
aam
daa
mov
test
xor
int
lret
rcrb
cld
imul
dec
mov
xor
jg
sub
sbb
icebp
popf
fnstcw
fsubr
ljmp
xchg
xchg
jp
cli
mov
fimull
sbb
xchg
adc
or
das
sbb
and
lret
inc
mov
lea
iret
add
jmp
pop
sbb
jbe
sbb
lods
mov
adc
pop
sub
movsb
outsb
push
fidivs
faddl
les
pop
push
and
dec
xor
and
jnp
inc
and
jle
or
xorl
aad
sahf
repnz
out
xchg
and
stos
repz
fnsave
mov
sbb
aaa
into
fldt
iret
dec
jle
leave
addr16
cmp
xor
clc
fmull
adc
iret
loopne
pop
jl
pop
sahf
cmpsb
sarl
mov
push
mov
xlat
inc
fbld
loope
shrb
sbb
mov
dec
and
loopne
sbb
cmpsl
xchg
jne
jp
add
cs
xchg
pop
push
dec
test
pop
cmpsb
in
xor
divl
cmp
push
xor
sub
jecxz
roll
clc
in
test
mov
aad
idivb
or
and
jp
test
cmp
imul
stos
cmp
cmp
mov
pop
in
adc
mov
and
or
iret
or
push
fldl
arpl
fsubrl
popa
inc
pop
cmpsb
dec
flds
push
xor
shll
in
mov
mov
outsb
shll
or
xor
shll
hlt
jns
push
cmpb
scas
push
mov
xchg
mov
sub
adc
pop
mov
fcmovnbe
fcoms
cwtl
shl
ja
repz
push
mov
inc
ror
jns
xchg
xchg
jb
subl
mov
sti
dec
adcb
mov
addl
pushf
shll
cmp
lods
shll
mulb
lock
pop
sbb
jmp
xor
pop
test
mov
insl
ficomps
inc
test
sbb
bnd
mov
mov
cmpb
stc
loope
ja
mov
cs
cmp
dec
pushl
rclb
cmpsl
daa
lret
movsl
mov
or
out
test
popf
xchg
xor
cmp
sbb
mov
mov
mov
sahf
sti
adcb
sbb
pop
lret
xchg
push
int3
das
or
adc
fdivp
out
pop
dec
ljmp
jnp
pop
xor
fildl
adc
push
dec
ja
push
adc
adc
aad
or
push
lods
jmp
mov
xchg
jo
cmp
daa
mov
pop
xchg
add
jae
or
repnz
cmpsb
lahf
data16
cmpsl
mov
xchg
pushf
loope,pn
sbb
lods
lret
nop
add
bound
arpl
mov
dec
xchg
or
pop
loope
sub
int3
pop
and
adc
je
xlat
sub
push
pop
jle
mov
add
xor
xlat
lods
push
fs
xor
push
push
mov
sub
push
ss
push
and
out
outsb
push
push
lods
adc
out
pushf
mov
cwtl
adc
les
js
push
and
inc
jno
imul
jl
leave
int
loope
lods
imul
stos
sahf
mov
xchg
fimull
or
rcl
mov
push
int3
or
rcrb
in
movsl
lods
jl
dec
mov
sbb
sub
loop
dec
stos
inc
pop
hlt
inc
cmpsl
cmp
and
and
sbb
insb
shl
fildl
je
daa
jo
mov
test
es
push
mov
push
pop
jb
pop
aas
cwtl
pop
jbe
es
jl
cmp
dec
push
imull
pop
imul
bnd
adc
mov
mov
sub
out
loope
sar
inc
dec
hlt
lcall
int
sti
or
pop
pop
cmp
pop
stc
push
ja
jae
push
test
jmp
push
in
outsb
or
mov
mov
outsl
dec
push
inc
lds
mov
je
and
loop
xrelease
inc
mov
in
pop
sub
les
xor
mov
cmp
mov
or
jl
jno
testl
mov
test
adc
cld
popa
push
xorl
cmp
hlt
sbb
xlat
ret
sbb
outsl
inc
sti
imul
popf
enter
shrl
js
jg
sub
xor
dec
cmp
or
jmp
test
out
out
mov
test
jecxz
mov
push
dec
outsl
je
xchg
aas
cld
rcrl
int
sub
enter
jg
sub
aaa
pop
inc
jp
sti
xchg
sahf
add
pop
aas
dec
mov
and
mov
and
jns
loope
loopne
fiadds
mov
mov
insl
ficoms
fwait
xchg
cs
inc
sub
shll
or
pop
cmp
popa
push
rcrb
subl
jb
jbe
pop
and
fst
mov
push
mov
ret
jbe
mov
mov
nop
mov
xor
mov
cmpb
leave
loop
cmpsb
and
int3
mov
mov
dec
in
jbe
or
out
sub
add
dec
inc
popa
sahf
cmpsl
movsb
pusha
fdivrl
movb
and
dec
outsl
and
nop
clc
adc
add
mov
and
lcall
jg
addb
mov
fcoms
add
rcll
or
int
push
jnp
push
push
sub
sbb
mov
jno
dec
mov
and
xchg
add
dec
mov
add
cmc
int3
movsb
lcall
mov
mov
sahf
dec
pushl
xlat
jg
sub
lock
or
mov
mov
testb
inc
jne
sub
inc
addr16
syscall
xor
je
push
enter
mov
or
mov
lea
daa
xchg
mov
in
push
imul
cld
mov
jecxz
movsb
xchg
inc
mov
idivb
pushl
test
fcomip
daa
in
xchg
test
mov
cwtl
pop
push
sbbb
pop
cmpb
out
das
adc
mov
test
mov
std
sbb
popf
mov
mov
gs
inc
xchg
add
stc
pushf
add
xor
dec
mov
lret
fwait
ret
das
rclb
inc
rorl
fstpt
lret
rcrl
pushf
mov
fs
mov
mov
in
sbb
adc
outsl
dec
pop
mov
jl
dec
inc
xchg
cmpsb
sbb
mov
mov
in
fdivs
inc
adc
rorb
bound
pop
lret
sti
jb
loopne
mov
dec
aas
psrlq
std
sbb
lea
ds
scas
jo
in
push
std
cltd
cmp
sbb
xchg
addr16
shrl
jns
push
int3
stos
push
cmp
adc
fldt
or
test
fstps
ret
aas
int3
fmuls
aas
les
push
and
sarl
repnz
cs
cmp
and
fdivl
mov
push
or
nop
jg
adc
stos
jge
int
dec
decl
daa
stos
sbb
sub
test
fidivl
add
pop
cltd
int3
push
movsl
sbbl
mov
int
iret
outsb
or
imul
dec
inc
sbb
mov
mov
xor
add
jmp
mov
ja
pop
sbb
adc
inc
scas
jno
arpl
xchg
stos
imul
lea
xchg
sarb
jg
orl
js
std
loopne
in
lds
cmp
daa
dec
cmp
int3
ror
adcl
jmp
fisttpll
mov
stos
movsb
mov
mov
push
push
fcmovu
shrd
cmp
xchg
dec
xor
pop
fisubs
jae
in
cmp
or
fidivl
es
cs
ss
push
cld
nop
xor
enter
adc
outsl
ret
and
xor
les
add
and
imul
das
packuswb
fdivrs
mov
out
pop
sarb
mov
sbb
into
inc
loop
dec
pop
cltd
lods
mov
lcall
mov
repz
in
and
orl
imul
pushf
xchg
sub
or
or
outsl
xor
ret
lcall
pop
sbb
add
iret
xor
xor
xchg
test
rcrb
sbb
mov
push
push
mov
cmp
cmc
lods
jo
sbb
inc
push
outsl
inc
adc
pusha
inc
cltd
loopne
stos
callw
or
cmp
push
mov
xchg
inc
pusha
push
lret
sbb
test
leave
adcl
xor
mov
shrb
lret
inc
int3
jl
inc
push
icebp
xchg
and
mov
adc
jl
popa
stc
and
stos
shlb
hlt
push
sub
xor
out
jle
fildl
mov
sahf
adcl
push
rolb
pushf
jl
ss
lahf
add
cli
push
cmp
push
sti
mov
pushl
dec
insb
lret
sbb
ret
pop
jnp
inc
insb
pop
out
mov
loope
adc
imul
or
js
cs
insl
sub
jecxz
dec
adcl
mov
sub
dec
movsb
push
inc
ror
mov
or
cmpsb
adc
sbb
das
int3
fmull
or
mov
ds
mov
daa
stc
inc
stc
pop
iret
fstl
cltd
dec
test
sbb
cli
jb
cltd
leave
in
ss
out
scas
std
push
mov
imul
fsubrl
sub
sub
jne
enter
in
movsl
lret
push
gs
cmp
jg
das
push
inc
jne
push
lods
push
aad
imul
repnz
js
cmp
sub
pop
xchg
pop
mov
cmc
loope
aad
xchg
out
jno
or
pop
pop
ds
pushf
outsl
les
sbb
mov
fisttpl
or
outsl
test
loop
int3
test
and
add
xor
sub
pushf
leave
dec
cltd
stos
lea
out
js
insb
push
aam
pushf
int
mov
fcom
test
xchg
mov
fisttps
imul
dec
mov
ss
pop
aas
inc
popl
fildll
add
push
in
inc
mov
notb
sbb
cmp
shlb
sti
aad
add
call
jbe
and
jb
clc
cmp
mov
nopl
pusha
xchg
sbb
inc
mov
dec
fdivl
xor
mov
data16
push
mov
iret
cmpsb
mov
sahf
pop
push
or
clc
mov
jmp
lods
aam
test
push
ljmp
cmpsb
inc
cmp
mov
jecxz
int
psllw
or
or
fistpl
mov
cmpl
rorl
mov
mov
fs
jge
leave
cmpsl
sub
jb
lea
outsb
xchg
mov
cltd
jo
and
cmp
and
ror
adc
cmpsl
lods
outsl
adcl
inc
pop
xlat
fcom
sbb
pop
test
fsubrs
imul
hlt
cmp
iret
stos
adc
push
cmp
mov
inc
jp
inc
sub
negb
cs
clc
jne
movsl
push
jo
mov
in
sahf
dec
test
adc
insl
and
or
cmpsb
cltd
fidivl
and
jb
sub
and
jbe
popf
cli
push
pusha
add
aas
adc
popa
sbb
or
out
fldenv
mov
xorl
push
daa
popa
popf
aas
mov
jne
ds
xor
xchg
scas
data16
fwait
jno
popf
out
ljmp
sub
jl
out
cmpsb
cltd
push
hlt
addr16
xchg
in
pop
ficoms
jbe
mov
sahf
add
pop
and
or
cmp
lcall
aaa
pop
cmpsl
es
outsl
mov
xchg
cli
out
imul
cltd
jbe
aaa
jle
push
add
xchg
loop
jg
adc
rorb
shrb
outsl
pushf
mov
inc
or
mov
cmpsb
ret
shll
inc
je
cmp
dec
fstl
ret
mov
jge
pmovmskb
mov
lret
push
or
mov
adc
leave
lret
jns
xor
jno
sub
je
shlb
out
push
fcoml
sarb
add
dec
out
fnsave
jae
lcall
insl
jmp
addr16
into
xchg
cwtl
inc
jp
sbb
inc
sub
out
nop
xor
mov
rclb
push
iret
mov
lds
xchg
cli
test
sub
stos
pop
imul
add
cmp
fimuls
cmp
add
add
mov
iret
loopne
mov
cli
test
imulb
push
or
or
imul
ljmp
pop
mov
rol
xor
xor
fucomip
adc
fldl
roll
mov
lcall
pop
inc
sbb
jp
and
aas
sub
lods
push
out
out
popf
cmc
sahf
in
xchg
out
nop
or
andl
lods
test
inc
mov
dec
fbld
sahf
pop
add
test
cmp
outsb
daa
loopne
pushl
mov
pop
movsb
xlat
gs
mov
pushf
and
aam
jle
push
sub
sub
mov
out
mov
and
in
cli
stc
sar
icebp
imul
ljmp
dec
mov
out
jmp
cmc
cli
inc
pop
push
bound
add
push
cmp
push
inc
imul
mov
out
hlt
call
ljmp
cld
xlat
fstpl
push
pop
mov
scas
std
cltd
lahf
sbb
sbb
inc
ret
jp
sbb
int
and
ja
jbe
or
loop
stos
das
jmp
inc
dec
pop
or
add
jb
push
and
call
jb
outsl
lods
add
loope
cmp
sub
sbb
test
pop
xchg
idivb
jg
movsl
insb
pop
xchg
testb
push
mov
insl
jmp
pop
pop
xchg
mov
fsub
sbb
push
orl
or
scas
xchg
out
push
adc
xlat
dec
ret
in
mov
test
inc
mov
xchg
scas
push
std
out
xchg
mov
mov
and
fisttpl
std
lahf
cmp
jbe
out
out
sub
js
dec
cmp
fucomi
mov
xor
jecxz
push
push
mov
clc
orl
cmp
sar
and
dec
cmp
subb
inc
decb
jo
jp
add
or
dec
shrl
roll
gs
shrl
nop
popf
push
pop
arpl
sub
and
jl
nop
or
and
mov
pop
mov
shll
sub
mov
cmpsb
lds
ret
jg
inc
xchg
cltd
pop
repz
cmp
popf
sbb
xchg
pop
call
push
xchg
cs
sub
sbb
xchg
xor
push
test
incb
and
popf
mov
cmp
popf
inc
clc
lcall
loope
push
sbb
push
mov
jbe
xchg
xchg
jne
mov
cmp
fnsave
jo
nop
mov
pop
cltd
arpl
push
rcrb
cmpsb
mov
dec
xlat
icebp
mov
ret
dec
inc
sbb
sub
std
fcompl
jbe
inc
aam
sub
imul
fs
push
sbb
out
jne
mov
test
xor
mov
pushl
push
mov
lret
sub
aas
push
cmp
in
outsl
nop
push
cli
jle
cmc
xor
int3
sub
cmp
dec
jp
sbb
jl
jae
in
je
xor
pushf
and
test
incl
pop
lock
push
xor
push
and
lods
cmc
xchg
insb
and
sub
and
sbb
addb
cltd
in
outsb
lcall
test
cmpsb
aam
cmp
aad
add
popf
cmpsb
js
shl
cltd
jno
sti
js
xor
pop
inc
dec
jp
jo
or
ljmp
nop
popa
push
shlb
cvtpi2ps
cmpsb
cmp
mov
ljmp
pop
sub
mov
cltd
lea
or
int
addr16
pop
inc
pop
pushfw
or
xorb
andb
loopne
leave
stos
cs
dec
or
jb
push
pop
cmp
les
mov
push
push
mov
repz
js
iret
xor
dec
in
jecxz
ficoml
mov
sbbb
test
push
mov
je
inc
daa
cmpsl
adc
dec
adc
aad
in
mov
aas
mov
xor
into
call
pop
int3
shrb
loop
repz
xor
addr16
push
mov
pop
mov
push
cs
sub
lcall
movswl
pop
dec
loop
pop
xchg
rol
insl
adc
orl
orb
sbb
xor
pmaxsw
pop
cmpl
add
orb
andb
je
jecxz
add
out
pusha
xor
movsb
cmp
not
gs
shll
daa
sbb
xor
lahf
lds
cld
mov
mov
aam
pop
fldcw
push
sub
pop
fiadds
cmp
add
inc
ss
gs
aas
jb
pop
cmp
ret
mov
cmpsl
and
scas
jmp
mov
daa
pop
mov
sub
jmp
jecxz
divl
rcr
inc
popf
das
lods
push
clc
adc
mov
push
xor
and
xchg
out
out
push
fcmovnb
stos
jecxz
stos
jge
jge
icebp
aas
inc
xchg
jbe
push
jg
scas
xor
mov
adc
fdivs
sbb
mov
push
cmp
dec
cmp
or
hlt
inc
lret
adc
push
test
pop
cmp
sub
test
fidivrs
test
dec
je
push
adc
inc
dec
jb
arpl
jo
lcall
xor
stos
and
inc
mov
and
push
pop
inc
jp
dec
lret
sti
outsl
mull
ss
ret
cmp
jg
inc
sti
adc
cli
fcomps
popa
hlt
xor
das
out
daa
scas
test
lods
sbb
rcrb
cltd
negb
movsb
jl
popl
ds
mov
das
pop
mov
push
push
push
pop
nop
divl
fdivrs
add
jg
adc
test
movsl
jno
adc
in
scas
fwait
xor
call
cli
xchg
pop
jle
lea
test
int
xor
addl
les
addl
add
movl
cmp
je
mov
jmp
mov
movl
cmp
jne
push
movl
jmp
mov
mov
movl
cmp
movl
jne
mov
xor
add
mov
and
xor
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
negl
add
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
inc
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
andl
xor
incl
add
andl
imul
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
jmp
dec
cmp
orl
push
mov
mov
filds
popa
pop
bound
mov
xchg
out
add
sahf
xchg
push
lock
mov
mov
cmc
jge
adc
pop
out
jge
mov
and
rcr
push
fidivs
clc
sub
jae
sbbb
les
les
mov
xchg
imul
sbb
mov
lret
sub
jo
sub
enter
fs
push
push
dec
mov
jg
cmc
adc
jo
mov
movl
shrb
sbb
add
jl
and
movsl
adc
adc
mov
jno
dec
mov
jp
and
pop
leave
cmp
and
jns
cmpsl
xchg
stc
rorb
repz
andb
jl
ficomps
loop
push
add
xchg
dec
or
fnstcw
mov
cmc
push
cli
adc
jns
data16
lods
rol
push
mov
jne
or
add
inc
xor
imul
rolb
fdivrs
dec
aam
mov
jo
pop
jmp
rorb
fisubrs
mov
push
or
mov
shll
sbb
add
clc
sti
gs
fdivl
lret
mov
lcall
xor
je
xlat
jbe
mov
adc
aam
jle
add
jp
jne
daa
or
push
dec
sub
push
shll
cmp
lods
mov
addr16
cmp
add
pop
les
mov
dec
pop
jb
inc
arpl
xchg
and
dec
fmuls
xchg
cwtl
imul
mov
lock
neg
sti
cmc
or
fmul
or
aad
out
push
cld
sbb
fimull
std
frstor
mov
push
js
push
divl
mov
dec
repnz
pop
loopne,pt
mov
repnz
xor
xchg
lret
movsl
dec
mov
stos
dec
jg
fs
fsts
and
push
std
out
in
dec
stos
push
jp
fistps
js
cmpsl
mov
fwait
jnp
and
nop
rolb
cmp
pushf
inc
out
fildll
dec
int3
shrb
xchg
subl
fldt
call
inc
push
leave
lret
lock
push
or
dec
gs
adc
out
push
and
mov
sbb
repz
xchg
repz
xchg
gs
and
push
push
add
loop
sti
jge
arpl
nop
mov
fwait
outsl
dec
jae
xchg
shlb
repnz
clc
ficompl
xchg
fmulp
inc
jae
push
dec
add
repz
xchg
adc
fisubl
cmpsb
cmpsl
ret
adc
sub
test
nop
iret
xchg
adc
xchg
push
ss
push
mov
call
fsubrl
xchg
sahf
mov
lods
inc
mov
lds
fildll
adc
inc
inc
incl
xor
out
in
lea
pop
sbb
add
xlat
shl
in
xlat
pop
cmp
scas
pop
lret
fnstenv
lds
outsb
dec
mov
add
add
insb
sub
adc
sarl
pop
mov
jno
add
mov
and
cwtl
cmpsb
repz
cvtps2pi
push
cwtl
mov
pop
iret
or
mov
push
xchg
push
clc
inc
cmp
lea
push
ja
mov
jmp
scas
mov
ret
iret
fsubl
add
in
cmp
pop
xor
ficomps
pop
or
daa
sub
sarb
xchg
scas
adc
mov
nop
lds
cmp
xor
cli
mov
dec
add
adc
movsb
inc
and
mov
leave
popf
push
adc
aad
aam
cmp
mov
shrb
mov
xor
sbb
push
cmpsl
cwtl
repnz
test
sub
push
sub
lret
mov
ret
push
add
pop
mov
mov
loop
or
movsl
ja
jl
cmpsl
xchg
mov
lds
cwtl
imul
sbb
loope
fldl
je
inc
sahf
mov
and
sahf
mov
jb
stos
jb
cmpsb
cltd
adc
cld
test
les
pop
ret
pop
in
xchg
roll
xor
pop
test
in
push
sbb
and
leave
inc
xor
mov
cwtl
and
and
aam
dec
dec
test
dec
cmp
das
push
pop
nop
out
dec
orl
orb
jmp
imul
scas
fistps
cmp
push
call
shll
fs
jns
sub
out
sbb
mov
cltd
pop
pop
inc
push
insl
jp
shll
and
xchg
jns
in
pop
inc
je
rorb
or
lret
xchg
lods
push
aaa
scas
fsub
testb
sbb
andb
in
cli
in
aas
dec
mov
scas
mov
imul
xchg
outsl
dec
aas
mov
clc
push
jp
sbb
dec
int
lock
xchg
xchg
insb
cmc
mov
inc
cmpb
sub
lcall
cmp
xchg
sahf
sbb
insb
pop
ds
xadd
push
ds
imul
mov
divl
or
test
gs
fisubrl
dec
nop
mov
clc
das
gs
sub
shll
fs
fidivl
mov
scas
cmpsl
xchg
idivl
or
inc
scas
gs
repnz
cmp
push
jl
inc
adc
jo
push
cmp
cld
jnp
rcrb
lods
fisttps
xor
xchg
push
inc
jb
in
mov
adc
mov
int
andb
push
dec
or
push
rcrb
dec
and
push
outsl
xor
sub
xor
push
or
jnp
loope
pop
push
add
fwait
mov
sub
insb
icebp
lods
jecxz
adc
sbb
loopne
push
mov
add
roll
push
sub
das
jmp
ret
mov
cmp
sub
sbb
inc
je
push
inc
pop
xchg
lcall
jns
rolb
movq
cmp
pop
mov
cmpsb
cwtl
xchg
lret
dec
fdivs
fstps
sbb
push
inc
pop
push
aaa
cmc
jo
test
cmp
aad
scas
and
mov
jbe
sub
test
add
inc
mov
jae
sbb
pusha
mov
icebp
pop
xor
cmp
mov
push
lods
jo
xchg
sbb
cmp
mov
mov
cmpsb
in
cmp
ficomps
cmp
daa
xor
mov
sbb
shlb
mul
push
pop
in
es
sbb
add
pop
imulb
push
xorb
xchg
pop
add
ljmp
xor
add
jmp
dec
adc
stos
fnsave
xchg
pop
pusha
or
dec
shlb
adc
imul
xchg
movsl
sub
adc
clc
inc
mov
or
sti
sbb
jle
mull
sub
mov
sbbl
pop
lods
pop
jmp
test
daa
pop
pop
jecxz
mov
sub
inc
cwtl
jae
gs
fwait
out
jmp
push
adc
fwait
dec
ja
repnz
movsb
xchg
fimull
mov
cmp
jmp
dec
jnp
cltd
fdivrl
cmp
inc
and
roll
in
dec
xchg
ss
les
roll
dec
push
jp
das
ret
mov
test
lods
jp
inc
ja
scas
aad
daa
scas
xchg
lds
js
dec
xor
add
dec
inc
stos
clc
mov
add
mov
sub
and
ja
inc
sub
cmp
shlb
ja
adc
sub
push
xor
fldl
adc
test
lock
mov
mov
test
push
push
xchg
fsubrl
xchg
pushf
sub
lds
loop
in
push
insl
dec
add
dec
add
mov
push
fsubs
js
mov
adc
mov
mov
add
test
scas
xlat
dec
jne
js
jbe
sub
inc
cmp
push
test
mov
inc
add
sbb
daa
into
test
jmp
das
imul
dec
mov
sub
jmp
fadds
xlat
in
mov
lea
mov
xchg
cmp
inc
test
jl
add
call
push
das
jne
and
mov
cmp
jmp
sbb
jl
lock
test
mov
dec
es
and
out
mov
mov
xchg
mov
mov
cmc
ja
mov
mov
dec
bound
and
inc
das
xor
dec
jne
mov
jb
or
mov
fisttps
and
lods
scas
dec
push
cwtl
notl
fwait
jl
popa
imul
adc
push
dec
outsb
lock
popf
cwtl
xchg
and
mov
call
adc
mov
ficompl
adc
add
fwait
es
xor
push
lods
cld
jns
dec
fisubs
cmpsb
jmp
cmp
xor
sbb
das
push
jmp
stos
pop
sub
or
popa
pop
xor
mov
xor
xlat
push
mov
negl
or
jnp
mov
cmp
popf
adc
ss
mov
stos
push
test
dec
mov
fidivs
shr
cmp
lret
lea
push
sahf
jno
dec
add
notl
xchg
mov
std
xor
dec
mov
xchg
mov
pop
jno
pop
fs
cmp
jp
jge
int3
in
lahf
rclb
ljmp
sbb
mov
popa
insb
inc
test
mov
mov
pop
cmc
mov
add
dec
cmp
cmpsb
mov
mov
jecxz
clc
push
dec
sbb
add
cmpb
hlt
dec
clc
push
sarw
mov
jp
enter
jnp
fisttpll
sbb
call
mov
mov
ljmp
decb
pusha
xchg
xchg
js
enter
xchg
loope
jne
rclb
pop
mov
popa
sti
rcrb
lcall
and
push
jae
mov
mov
cwtl
fstpl
pop
or
lret
mov
stos
push
outsb
testb
adc
sub
fbstp
adc
insb
and
and
nop
push
pusha
orl
out
or
mov
mov
adc
lods
mov
daa
xor
iret
push
dec
and
ja
sbb
aam
or
adc
inc
mov
push
mov
cmpsl
add
clts
test
mov
cmpsl
cmp
sahf
mov
sbbl
imul
loopne
adc
js
inc
int3
jb
sbb
js
push
xchg
mov
in
add
pop
mov
je
mov
lds
jo
div
sub
out
push
movl
cwtl
xchg
ljmp
push
xchg
cmpb
imull
repz
mov
mov
or
loope
or
push
add
cmp
mov
add
in
xlat
mov
lret
push
repnz
mov
mov
lret
mov
ljmp
mov
dec
outsl
add
push
pop
std
dec
ljmp
sub
pop
in
imulb
cs
les
jge
ja
scas
leave
scas
add
pop
push
lods
add
popf
push
mov
je
mov
xor
out
push
sub
push
pushf
into
inc
xchg
or
iret
cmp
popa
push
sarb
repnz
daa
adc
sbb
iret
loopne
push
nop
stc
insb
sti
out
mov
push
popa
dec
sub
add
mov
mov
scas
ret
mov
xchg
mov
imul
inc
cltd
aaa
mov
addr16
mov
add
sahf
imul
out
mov
xchg
js
mov
jnp
sub
lods
ret
ret
push
pop
gs
push
cmc
sbb
fnstsw
shrb
insb
cwtl
add
pop
jle
movsb
jecxz
enter
stc
pop
insb
mov
repz
pop
push
add
sub
shrl
xorb
mov
ret
push
popa
push
adc
sub
rcrl
arpl
popf
nop
divl
xchg
pop
pop
push
roll
dec
push
aas
insb
iret
inc
jg
dec
inc
loopne
hlt
inc
roll
cltd
inc
popa
mov
mov
inc
in
inc
inc
adc
xchg
lods
lods
jp
xchg
int
jle
adc
mov
jle
sahf
flds
push
cli
mov
repnz
sbb
dec
je
pushf
sbb
in
dec
pop
sbb
cmp
or
or
mov
ss
ds
movb
cltd
push
icebp
or
std
cmp
inc
inc
dec
pop
mov
push
out
aaa
sub
mov
push
ds
mov
xchg
jno
enter
pop
dec
push
dec
sbb
mov
inc
enter
xchg
inc
filds
in
inc
inc
outsl
jnp
das
cmc
and
dec
xchg
orl
test
outsb
sub
fsubs
fwait
xchg
jo
xchg
cmpsl
loopne
and
pop
or
sub
int3
das
xor
rcll
loop
adc
imulb
lea
jo
lea
xchg
and
sbb
arpl
inc
in
mov
sarb
fs
cmp
enter
es
cmp
and
loopne
dec
push
or
int
sub
or
hlt
pop
sub
shlb
js
mov
cmpsb
mov
test
sbb
add
out
sub
mov
sbb
hlt
push
dec
jge
sbb
jecxz
push
jb
int
test
push
jae
loop
cmpsb
pop
in
sub
imul
xor
mov
imulb
fptan
mov
cld
jge
xchg
outsb
je
mov
or
dec
fisttpll
add
jo
jg
in
gs
cmp
jge
inc
or
sub
aaa
out
movmskps
std
cmc
xchg
push
jmp
mov
into
and
adc
imul
jcxz
cmp
decb
xchg
push
and
lret
loop
inc
xchg
ret
sub
outsb
andl
movsb
pushf
out
in
xor
jge
les
stos
shrl
push
xor
loopne
addr16
clc
dec
cmpb
push
stos
jg
and
mov
inc
xlat
dec
jecxz
and
loopne
pop
fwait
mov
dec
sub
jle
pop
call
mov
cltd
bound
xacquire
mov
fldenv
shrb
jl
cld
rcrb
mov
int
cmp
add
sbb
mov
xlat
jne
lds
push
es
dec
push
pop
out
in
daa
inc
in
mov
insl
cld
cli
inc
and
clc
test
mov
cli
imul
les
cmc
jbe
xchg
adc
cmovns
xchg
aaa
adc
jbe
daa
movsb
leave
xor
stc
mov
mov
jns
flds
sub
push
mov
leave
push
push
dec
add
out
out
cltd
push
out
sub
and
ret
pmulhuw
outsb
shll
jnp
cmc
pop
andb
or
xor
xchg
xor
mov
fs
dec
aas
bound
movsl
adc
mov
add
push
adc
aam
in
inc
cmp
sub
mov
daa
inc
stos
push
sub
jnp
push
dec
dec
inc
push
xchg
dec
push
movsl
lods
xor
add
sbb
fimuls
jmp
dec
adc
jmp
and
popf
in
jno
cmp
adc
sub
sub
cwtl
or
jns
loop
ds
mov
lahf
and
mov
aas
fwait
xchg
jne
in
jp
pop
inc
andl
add
xchg
loop
push
sub
add
and
repnz
leave
mov
jo
xchg
mov
cmc
push
inc
and
mov
cmp
adc
and
add
loope
in
jl
push
scas
add
adc
inc
xor
ret
aas
push
jge
jnp
gs
aas
cmp
sahf
pop
jle
bound
ja
shll
int
mov
call
test
push
mov
and
enter
jno
faddl
jmp
xchg
jp
ss
das
mov
fdivl
cmp
xlat
lar
sbb
jp
pop
enter
and
pushf
test
cmpsl
ficomps
in
pushf
adc
push
jns
or
in
xor
xor
daa
cltd
sbb
xor
xchg
mov
xchg
ret
jmp
ss
push
add
add
mov
push
shl
pop
dec
mov
mov
xorb
dec
inc
xchg
xchg
pop
std
pop
push
push
sub
gs
sahf
sbbb
call
or
pop
push
rolb
lods
jl
iret
xchg
repz
pop
xor
lret
mov
cmpsl
les
sbb
add
push
test
sub
xchg
hlt
cmpb
insl
sub
xorb
gs
mov
cmp
hlt
cs
aam
and
xor
pushf
lds
jne
jg
insb
push
aam
jecxz
int
lahf
lahf
ljmp
adc
pop
popf
insl
cmc
stc
jbe
xchg
in
pop
mov
mov
push
popa
cmpsl
cmp
xor
cmp
ljmp
ret
mov
orb
sar
push
mov
in
inc
xor
mov
sbb
out
mov
jmp
movsb
int
addr16
data16
push
insl
pop
mov
scas
mov
sbb
je
push
cwtl
jae
sub
andb
ja
popf
xor
pmuludq
das
fucomi
mov
sub
movsb
mov
icebp
addr16
jno
aaa
leave
test
dec
mov
loopne
filds
test
andl
inc
push
rcrl
sub
dec
ja
test
jmp
xchg
fdivrl
xchg
and
insl
pop
jns
in
movsl
pop
mov
sub
fidivl
movsb
jnp
lods
fs
xlat
repz
mov
dec
data16
and
cmpsl
repnz
popf
test
sbbb
js
lock
sbb
cmp
test
xor
aas
stos
fdivrl
ficompl
xchg
leave
push
xchg
and
call
dec
fidivrl
mov
and
or
or
xor
movsb
add
in
cmpsl
push
arpl
in
pop
adc
inc
mov
and
and
inc
dec
pusha
xor
mov
fisttpl
sub
hlt
mov
test
and
mov
and
inc
xchg
and
fdivrl
aas
lret
pop
adcl
cli
cs
and
xchg
xor
gs
mov
lea
arpl
xchg
stos
pop
lock
jg
aam
jne
adc
jbe
xchg
xadd
and
mov
inc
std
bound
and
sbb
loopne
push
mov
adc
repnz
aas
repnz
pop
lret
pop
adc
aam
push
inc
or
push
lea
mov
inc
outsb
inc
lock
mov
mov
mov
loop
sti
pusha
inc
cs
push
mov
nop
pop
sbb
aam
pop
outsl
xchg
sbb
jnp
nop
stc
cmp
lods
mov
jae
xlat
push
push
loopne
jg
jge
jne
adc
stos
or
sbb
inc
jae
stc
fisttpl
cmpsl
and
sbb
jge
cmpsb
fs
xor
mov
xchg
lcall
add
and
rorb
in
in
aaa
or
mov
into
jg
insb
mov
shr
lret
loopne
add
les
xlat
test
in
adc
inc
mov
outsl
or
int
mov
aam
inc
enter
inc
aaa
xlat
sub
xchg
mov
mov
adc
outsb
adc
test
inc
xor
sbb
cmp
push
and
xchg
scas
fcmovu
pop
mov
sub
js
xchg
out
notl
arpl
pop
pop
out
add
sbbb
or
pop
stos
lcall
in
arpl
inc
mov
pop
dec
adc
xor
cmp
xchg
stc
push
fcomps
aaa
cmp
aaa
mov
xor
mov
mov
insb
js
mov
lods
les
adc
ljmp
or
jnp
sub
adc
test
enter
push
xor
dec
push
pushf
add
pop
xchg
imul
mov
add
and
mov
outsb
je
xchg
cmp
pusha
mov
testl
js
cmp
cmpsl
bound
sbb
movsl
fmull
dec
cmp
and
adc
popf
add
adc
orb
aaa
sub
dec
push
aad
sub
outsb
sbb
sarb
out
in
xor
mov
and
mov
outsl
dec
xlat
xor
fpatan
mov
mov
sarl
fcmovne
cmp
inc
adc
inc
insl
aam
stc
pop
popa
icebp
into
sub
xor
xchg
addr16
xchg
push
repnz
lret
sub
out
in
enter
dec
dec
mov
sbb
test
xchg
or
pop
test
mov
dec
pusha
fsubrs
mov
push
mov
pop
xchg
iret
pop
mov
sbb
test
pop
cwtl
iret
mov
pop
subl
cli
add
mov
outsb
fbld
mov
add
xchg
cmpsl
scas
sbb
xor
ffree
sbb
and
adc
add
xor
xchg
les
pop
add
fdivs
jg
add
popa
mov
and
mov
xchg
lahf
in
jmp
popa
push
mov
xor
aas
mov
out
mov
ljmp
cmp
push
mov
pop
cmpsl
icebp
xchg
test
inc
insb
leave
adcb
push
cmp
or
in
add
loope
cmpsb
fs
ficompl
sbb
fwait
sbbb
outsb
cld
arpl
xchg
mov
ds
ds
adc
out
les
add
or
mov
sarl
dec
repnz
xor
mov
shrb
and
andl
out
andb
mov
ds
adc
negb
jb
test
jmp
daa
jp
sbb
ja
cld
dec
fucomp
fdivrs
xchg
sub
mov
xor
xor
cltd
xchg
push
loopne
mov
adc
paddq
jo
icebp
lret
lock
add
dec
xchg
cmp
popf
mov
stos
out
repz
push
ds
mov
pushf
shl
imull
jo
in
cmp
scas
inc
dec
sbb
sar
in
push
pop
ja
inc
stos
xchg
je
ror
mov
rorb
mov
or
push
movsl
lock
dec
repnz
inc
sub
outsl
push
pop
lret
in
sbb
aas
fisubrs
cmpsl
adc
cltd
cli
mov
cs
push
bextr
out
lea
and
iret
sub
scas
cmp
xchg
push
dec
sahf
add
and
daa
rclb
push
fistps
sub
leave
int
push
or
inc
mov
push
scas
fwait
add
or
rcrl
dec
cltd
inc
dec
pop
dec
cmp
ljmp
push
shll
daa
sbb
xchg
cmp
xor
inc
and
push
cmp
repnz
mov
bound
jmp
cmp
inc
cmpsb
les
in
xchg
inc
cld
mov
xor
dec
pmaxub
push
mov
fidivrl
inc
loopne
pop
mov
lock
aam
les
pushf
cmpsb
xchg
jmp
cmp
push
pop
arpl
cli
lea
ffree
gs
or
cltd
dec
xor
mov
in
insl
out
mov
and
push
aaa
out
jbe,pn
mov
push
std
or
test
outsl
push
push
orb
inc
scas
mov
mov
repz
jnp
cmp
stos
mov
xor
xor
xchg
cmc
data16
push
inc
push
outsl
stos
push
adc
jo
mov
mov
mov
cmp
push
pushf
popf
lods
jle
and
or
mov
jl
jmp
and
out
fsubr
xchg
inc
sarl
jg
cmp
and
sub
sbb
sub
xchg
scas
push
xor
ret
test
and
cmc
mov
pop
shrb
xor
icebp
daa
imull
sbb
push
push
cmp
iret
mov
in
cmp
sub
cmp
or
pop
movsl
daa
in
add
xor
sbb
mov
jmp
ficoml
movsl
lahf
cmpsl
add
mov
mov
inc
push
adc
out
pop
gs
insl
inc
xor
adc
sub
pop
aam
sahf
aam
xor
or
dec
cltd
out
xlat
sbb
xchg
jecxz
int
sub
aad
movsl
sbb
push
stos
xchg
cmp
int3
mov
scas
mov
call
daa
jno
pop
cltd
lahf
push
lret
xchg
dec
out
jl
je
loopne
adc
jns
cmp
test
adc
mov
clc
push
inc
push
loope
lahf
loope
test
sub
or
test
lea
add
mov
ds
shll
xchg
cmpsl
adc
rclb
jge
std
inc
stos
inc
loop
stc
les
adc
fmulp
inc
xchg
sbb
in
mov
repnz
pop
test
mov
cmovbe
mov
popl
out
clc
add
sbb
std
bound
test
lcall
icebp
mov
inc
sahf
popf
jne
out
hlt
and
fcomip
insl
jnp
ljmp
and
sbb
mov
dec
adc
call
push
lret
test
jne
insb
lods
lret
xor
int3
sti
or
js
inc
mov
into
sub
cs
pushf
sbb
scas
call
fcompl
pop
iret
push
xchg
in
into
cmp
test
loopew
inc
mov
lcall
adc
outsb
push
xchg
dec
and
xor
cld
rcrl
pushfw
push
ss
adc
subb
cwtl
xchg
mov
or
test
sbb
adc
fstpl
nop
push
das
ror
add
dec
or
aas
add
jg
rcll
in
loopne
jp
lods
cmp
mov
mov
jae
addb
pusha
lcall
loope
hlt
and
cmpl
rclb
fists
fdivr
fldt
adc
mov
fs
aad
filds
dec
sub
fs
movsl
sub
pop
dec
push
push
divl
jmp
xor
int
cltd
int
push
fstl
outsl
repnz
jmp
fadd
mov
fisubrl
vcomiss
mov
cs
stos
out
out
and
inc
jo
mov
imul
rol
inc
dec
mov
lock
xlat
push
roll
and
bound
fbld
ffreep
out
add
mov
loopne
mov
mov
nop
jne
jmp
sahf
scas
dec
sbb
shll
add
loop
or
sub
mov
xchg
notl
sbb
mov
push
cmc
mov
add
addr16
xchg
sub
pop
js
hlt
scas
xor
fmuls
xchg
push
sbb
adc
mov
push
adc
mov
dec
pop
test
lock
stos
push
cltd
xor
aas
repz
fs
inc
push
mov
mov
xchg
add
and
int3
inc
or
jg
iret
xchg
xchg
rcrb
sbb
jo
mov
adc
int3
sbb
push
adc
dec
xor
sahf
jmp
movsb
in
inc
xlat
push
fistps
inc
cmc
pop
mov
xor
nop
xor
sub
xor
je
jge
imul
push
or
inc
fs
in
mov
nop
adcl
aaa
fwait
cmpsb
sbb
sbbb
xchg
jp
insb
jg
or
les
mov
insb
mov
mov
rclb
add
aaa
add
sbb
cmp
push
cmp
idivb
sbb
add
mov
pop
enter
ja
inc
movsb
mov
adc
mov
xor
cmp
xchg
dec
popa
add
dec
mov
sub
lods
cmp
xchg
out
cmp
pop
test
leave
sub
addr16
xchg
movsb
insl
cltd
imul
pusha
ss
sarl
and
movsl
arpl
cmp
icebp
arpl
pop
mov
xchg
inc
push
mov
add
pop
mov
xor
faddp
js
std
imul
daa
out
fs
bound
inc
xor
and
inc
loope
jnp
in
fld
test
dec
mov
pop
imul
ret
xchg
jg
mov
aas
fcmovb
leave
fdivr
addr16
xorb
jg
mul
push
sbb
cmp
fldenv
cmc
andl
stc
dec
xchg
popa
repz
inc
jp
mov
inc
mov
mov
int3
push
aam
daa
lods
mov
neg
and
xor
sbb
loopne
lea
sbb
lock
push
movsb
aam
push
dec
mov
xchg
loopne
push
arpl
jmp
sub
subb
stc
add
dec
mov
push
inc
sub
cmpsb
push
pop
mov
mov
out
xchg
mov
gs
sti
lcall
rorb
cli
loopne
fstpl
xchg
xor
aaa
add
mov
mov
cmp
adc
sti
sub
sti
stos
fnstsw
xor
scas
adc
test
pop
mov
mov
mov
lret
mov
stos
les
das
sbbl
jne
insb
xchg
mov
pushf
cmp
notl
or
daa
add
iret
test
stos
inc
notl
js
xor
out
lea
arpl
inc
sbb
inc
dec
mov
mul
cmp
out
sub
xor
mov
pop
xchg
es
jbe
orl
xlat
insl
ja
inc
dec
sbb
sbb
pop
inc
dec
js
movsb
es
cmpsb
xor
jo
test
xchg
pop
dec
imul
out
add
nop
push
stos
pop
test
push
ljmp
les
jge
add
and
not
call
cli
xorb
pop
int
xlat
fdivl
jns
rol
aas
add
mov
push
lret
popa
push
scas
and
xchg
addr16
insl
pmaxub
scas
dec
mov
js
sub
or
lcall
fxch
push
testb
shl
fildl
lds
xchg
mov
xor
inc
jo
sub
mov
lret
nop
sbb
mov
xchg
sbb
clc
test
or
femms
sub
aam
loop
or
sbb
repnz
nop
movsb
pop
or
daa
mov
xchg
jb
imul
data16
xchg
mov
mov
clc
lods
or
lock
adc
pop
les
ja
xchg
scas
loopne
xchg
add
jbe
and
lret
fucomi
jns
loop
lret
push
pop
clc
cmpsb
mov
mov
in
mov
les
cmp
int
cmp
fwait
mov
out
loopne
jns
cmp
xchg
pop
push
gs
iret
roll
pop
minps
mov
cmp
iret
sbb
xor
mov
jns
fst
pop
out
xchg
xchg
cwtl
iret
pop
loope
dec
pop
add
pushf
inc
and
jae
stos
jno
mov
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
push
movzbl
sub
push
adcl
push
xor
xor
mov
sub
mov
push
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
xor
or
dec
mov
jmp
sub
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
pop
push
subl
call
adcl
push
xorl
push
addl
push
push
andl
push
andl
push
sbbl
push
subl
call
push
push
push
push
push
push
subl
call
xorl
dec
movl
jne
push
push
push
call
orl
test
je
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
add
imul
mov
not
mov
mov
mov
cmp
movl
jne
addl
movl
orl
pushl
pushl
pushl
call
adc
mov
mov
sbb
mov
mov
add
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
movl
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
pushl
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
movzbl
xor
mov
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
cmp
jne
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
lea
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
push
mov
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
lea
push
pushl
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
inc
push
sbb
push
add
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
or
mov
mov
xor
mov
mov
sub
sub
mov
add
xor
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
jmp
icebp
push
inc
movsl
cmpsl
mov
aaa
and
xchg
sbb
pop
bound
add
sub
dec
mov
mov
shll
xchg
imul
lods
rcrb
adc
add
or
mov
aas
and
iret
cmp
incl
cmc
mov
call
out
cmp
jp,pt
ret
lods
scas
push
xchg
fwait
sub
daa
test
jle
push
aas
mov
cmp
outsb
cmp
loope
lcall
push
fwait
int
add
mov
ds
fwait
aaa
adc
inc
movsl
sarl
fnsave
hlt
cltd
movsb
sahf
sbb
push
ret
sti
dec
xchg
mov
test
cmp
outsb
xor
push
jns
je
pop
fidivl
dec
gs
sub
and
fsub
or
andb
pop
mov
add
lds
popf
push
out
ficoml
sbb
mov
jl
gs
mov
mov
aad
aas
test
stos
push
insb
cli
lahf
mov
movsb
xchg
mov
push
sti
into
rclb
and
into
add
hlt
cltd
sub
hlt
pop
lods
sbb
add
sub
pop
mov
loop
xchg
adc
pop
sbb
lahf
adc
mov
and
add
add
or
push
aam
sbb
mov
lods
loope
inc
dec
data16
sbb
ret
mov
cmc
int3
sbb
inc
mov
sub
fwait
jne
sbb
xchg
notb
jno
jl
ss
out
mov
xchg
test
in
testl
sbb
pop
jge
jl
in
fidivrs
xor
pushl
repz
mov
dec
pop
adc
decl
mov
ret
nop
xlat
sar
imul
push
adc
into
in
dec
out
in
push
jo
and
mov
test
pop
inc
rcr
insl
pop
sbb
mov
shll
jmp
xor
jae
jno
es
out
in
lods
push
jecxz
sahf
andb
sbb
in
inc
push
scas
repz
pop
je
jo
add
xor
mov
ja
ss
mov
or
xchg
jbe
sub
fwait
mov
or
inc
jle
cwtl
xor
adc
add
ss
cld
mov
addb
iret
jb
int
xor
mov
adc
xorb
push
mov
sbb
pop
xchg
scas
jo
inc
daa
add
daa
fldl
cmp
xor
gs
pop
pop
mov
jo
stos
cmp
ss
mov
dec
aaa
pusha
scas
push
jp
mov
cmpsb
push
test
xchg
ror
test
jns
xlat
or
fsubrs
cltd
mov
pop
push
je
cltd
cmp
jbe
shrb
push
mov
insl
pop
repz
lods
jecxz
sub
pop
mov
movsl
pop
call
mov
jnp
and
adc
ds
lods
fs
cmc
jo
out
jg
rorl
jo
movsw
mov
lds
bound
repz
or
mov
cmp
xchg
jmp
ret
or
sub
or
call
dec
push
dec
push
into
scas
das
inc
arpl
jo
lods
inc
sbb
pop
mov
cmp
andl
nop
inc
enter
idivb
push
push
xchg
dec
xbegin
jge
iret
xchg
adc
cs
dec
fimull
push
inc
dec
fsubr
jmp
pop
lahf
mov
mov
mov
sti
mov
movsl
pop
popf
jo
mov
cmp
mov
sub
iret
xchg
xchg
mov
and
inc
inc
cld
insb
jg
inc
test
xchg
les
mov
into
shlb
dec
mov
loopne
push
dec
inc
inc
xchg
xchg
fcomps
push
dec
mov
or
inc
addl
out
sub
xor
cmpsb
mov
pop
cmpsl
jmp
push
bnd
cmc
dec
rcll
adc
dec
or
clc
mov
pop
jns
cmpsl
ljmp
sub
andb
fisubl
int3
jae
xor
pop
es
stc
pop
or
push
jle
loope
popf
pushf
mov
and
lcall
ds
adc
inc
dec
sub
cmc
sbb
call
mov
shll
addr16
mov
mov
xchg
bound
das
jecxz
movsl
idivb
xor
adcb
fldcw
pop
int
jg
imul
add
fcomps
pop
cltd
scas
outsl
xchg
stc
movsb
push
repnz
jle
imul
leave
sub
inc
in
fdivl
call
sub
ds
mov
int3
mov
leave
cmp
arpl
lcall
and
fwait
jae
pop
mov
pop
xorl
add
dec
mov
and
sub
loope
push
les
movl
ds
loope
and
mov
cmp
jp
lret
xchg
outsb
inc
xor
mov
mov
ljmp
jns
cmp
aas
in
scas
jp
leave
jmp
fcompl
push
fst
push
mov
dec
loop
mov
dec
sub
add
pop
xchg
jae
aad
stc
cmp
sbb
pop
into
mov
loope
adc
movsb
in
mov
mov
push
popf
adc
add
scas
mov
jo
dec
les
test
pop
movsl
in
push
es
xor
jo
leave
mov
movsl
mov
sti
gs
fcoml
mov
aas
repz
ja
dec
imul
in
sub
push
stc
cmp
rcl
hlt
pushf
mov
and
pop
stos
or
je
mov
popf
insl
daa
loopne
sub
adc
mov
lret
xchg
je
dec
mov
lcall
icebp
imull
ljmp
test
repnz
or
inc
mov
loope
andb
bound
pop
lods
bound
in
test
xchg
dec
adc
jmp
pop
arpl
push
push
sub
js
mov
cld
inc
lock
int3
mov
xchg
sbb
sbb
lods
jmp
pop
sub
xchg
jmp
std
scas
lret
sbb
scas
mov
and
std
inc
inc
imul
or
xor
jb
cli
or
xchg
or
jne
fs
ss
dec
movsl
inc
in
mov
in
bound
jge
cwtl
pop
xchg
xlat
pop
jns
int3
and
pop
push
mov
push
mov
mov
jl
fcmovnu
and
jmp
test
iret
jmp
rcll
lock
insb
adc
xor
dec
lahf
test
xchg
icebp
call
add
add
icebp
sbb
sbb
mov
and
sbbb
dec
inc
fcompl
aaa
jl
jns
movsl
das
rcll
rorl
icebp
push
or
mov
xchg
mov
out
lret
and
xor
fdivrs
jp
cs
sbb
jmp
add
mov
pop
stos
test
fdivrl
movlps
and
test
ja
lcall
push
js
enter
add
test
pop
mov
test
inc
push
adc
int
lock
stos
cmp
decl
rorb
sub
inc
xchg
mov
adc
sub
mov
cltd
stc
roll
subl
and
mov
or
test
popa
push
dec
and
hlt
shlb
pop
dec
and
jae
xor
sub
inc
bound
ret
add
pop
dec
add
jge
popa
fistps
push
in
sub
sti
push
push
lods
ret
sbb
pusha
test
stos
push
sbb
dec
addr16
mov
adc
stc
fsubrs
test
ret
ja
jbe
lcall
add
stos
inc
out
mov
stos
xor
xchg
cwtl
scas
std
movsl
lret
sub
jb
mov
and
dec
stos
cmpsb
out
push
loop
inc
fldl
subb
call
lods
fbld
hlt
lods
mov
iret
cmp
shll
das
sbb
int3
repz
jae
nop
jb
push
out
jns
js
adc
bound
lods
sahf
hlt
fcmovnbe
and
pop
mov
push
stos
aaa
aas
imul
fisttpl
mov
inc
push
sub
xor
je
jmp
aad
mov
test
sub
in
rol
push
adc
ret
push
cwtl
pop
shlb
scas
push
movsb
mov
jbe
mov
adc
xchg
add
sarb
adc
cli
jnp
mov
sti
mov
dec
fistl
inc
dec
pop
addr16
popa
aaa
mov
push
and
mov
mov
std
mov
pop
cmp
into
dec
lahf
mov
cli
inc
xchg
jg
icebp
and
inc
mov
cmc
push
sbb
xor
out
rclb
or
sub
js
cmc
aas
jg
iret
xor
and
jbe
jno
mov
ljmp
jo
jge
pop
insb
jnp
mov
jle
sub
ds
adc
mov
es
popf
push
addr16
mov
test
inc
mov
pop
and
or
je
int
cmp
fcomps
mov
cmpl
push
std
dec
out
sbb
lret
pop
out
fistpl
pop
sbb
lds
cltd
mov
lock
mov
push
cmpb
sub
xchg
or
push
rorb
loop
call
mov
jecxz
inc
and
scas
and
sbb
aas
jmp
pop
es
fwait
pop
aad
jmp
pop
repz
std
jno
adc
int3
ss
lcall
loopne
mov
rorl
lcall
popa
cmp
cmp
xchg
jbe
pop
push
jge
sbb
pop
fsubs
fbstp
push
neg
push
out
scas
daa
mov
fdivl
sub
xchg
pop
sbb
mov
icebp
pop
pop
inc
sub
mov
dec
shr
and
cwtl
daa
fistl
xchg
sti
or
mov
mov
push
push
mov
test
lea
mov
xor
xor
ja
lret
adc
inc
mov
ds
ret
jmp
adc
movsl
nop
fs
cmpl
cld
jb
fldcw
add
shl
push
or
mov
adc
or
adc
outsb
or
push
jo
in
pop
cbtw
rclb
pop
imul
or
xlat
push
stc
add
dec
adc
add
push
dec
fwait
insl
add
push
and
and
clc
jp
cmpl
int3
iret
xchg
xchg
mov
jmp
or
jl
sbb
cmpsb
dec
pop
insl
hlt
inc
outsl
mov
add
dec
and
add
dec
lock
mov
dec
rorb
mov
test
add
jmp
mov
fisubl
adc
push
pop
jl
cmp
sub
sub
push
cs
fidivl
fwait
sub
push
xor
mov
add
dec
lcall
cmp
scas
rcrb
cmp
cmp
ret
in
nop
jbe
add
imul
loopne
das
cvtps2pd
iret
int
add
scas
test
cld
cmp
adc
and
xor
jge
xchg
cwtl
mov
xor
jp
mov
roll
push
addr16
inc
fdivrp
add
inc
divb
lods
xor
push
dec
inc
icebp
lcall
sub
aas
pusha
and
or
sub
dec
ficoms
out
cld
jecxz
pop
mov
add
sti
les
popa
shlb
adc
pop
ds
pop
fisubrs
shrl
inc
jo
dec
sti
popa
fbld
push
xchg
movsb
xchg
jge
dec
or
std
adc
fnstenv
adc
repz
in
and
dec
add
out
cmp
adc
and
js
jle
sti
push
stos
jnp
and
xchg
sub
push
xchg
jbe
daa
into
test
cmp
mov
mov
les
jecxz
cmpsl
popf
rcl
sub
xor
out
dec
mov
call
add
cltd
mov
mov
inc
lret
push
and
inc
xchg
orl
fstps
or
xchg
mov
nop
mov
notl
mov
or
repz
fistpl
clc
or
dec
xor
sub
xchg
out
ja
add
or
movsl
xchg
xor
das
mov
out
movsb
fdivrs
mov
fdivl
mov
pop
dec
adc
fmulp
pop
iret
jb
sub
clc
fwait
shll
adc
mov
xchg
adc
mov
xor
dec
dec
sti
gs
xor
push
bound
lret
outsl
in
sbb
or
add
cmpsl
lods
insb
jbe
jg
cmpsb
mov
jnp
mov
ficompl
sub
imul
stos
and
ss
stc
es
fxch
push
xorb
inc
cmp
ret
js
xchg
pop
inc
dec
mov
and
in
in
mov
ja
fimull
hlt
mov
arpl
cmp
cmpb
and
adcl
adc
pop
sub
or
pop
jns
cmc
mov
adc
shlb
pop
pushf
jnp
push
mov
decl
adc
sbb
lds
ss
sbb
cmp
mov
fwait
hlt
mov
mov
out
sub
lods
in
scas
vreducess
pop
mov
xlat
xor
xor
outsl
in
mov
xor
mov
movsb
cmpsl
dec
mov
xchg
test
pop
lds
push
mov
ss
loope
negb
mov
and
popa
arpl
mov
and
xor
pop
test
ljmp
aas
push
pop
out
dec
mov
clc
inc
fdivrs
clc
pushf
test
lods
addl
repz
mov
dec
fisttpll
pusha
or
fcoms
push
inc
xorb
cs
jbe
int3
repz
inc
cs
jne
arpl
scas
adc
ss
lcall
sub
xor
je
inc
sub
iret
sub
cmp
in
sahf
mov
loopne
cltd
pop
xchg
adc
add
lret
mov
jno
test
lods
add
cmp
repz
aaa
jl
dec
push
add
push
enter
xchg
jle
hlt
outsl
js
inc
ret
fsubrl
lock
fs
inc
and
sub
fbstp
xchg
sub
cmp
and
pop
arpl
js
push
insl
dec
and
fldcw
das
jns
rcr
cmp
lods
xor
sti
xchg
pop
pop
neg
xchg
inc
adc
pop
push
xor
adc
cli
lret
stc
mov
popf
roll
mov
cltd
mov
mov
pop
pushf
pop
sub
push
stos
ret
mov
in
mov
adc
outsl
loop
rolb
jge
xchg
ret
cmp
xor
jmp
sbb
aad
ret
sti
xchg
xchg
mov
repnz
or
hlt
xchg
scas
sbb
jno
add
jle
rorl
jo
movsb
int3
sub
add
push
cmp
cwtl
dec
cmc
lods
inc
shll
xchg
xchg
adc
hlt
repz
xor
fists
sti
or
dec
mov
mov
es
clc
stos
idiv
outsb
jg
stc
pop
es
inc
loop
pop
pop
inc
flds
ret
mov
xchg
inc
mov
pop
xor
pop
cltd
or
mov
pop
test
xchg
dec
push
fisttps
clc
or
mov
push
in
mov
scas
test
push
jnp
les
pop
sub
mov
test
sub
jg
mov
jecxz
pusha
mov
sbb
adc
inc
cmp
loope
call
ds
stc
pop
sub
sbb
push
lcall
stc
dec
cmp
cmpsb
adc
sbb
jnp
movsb
jno
push
mov
adc
sub
leave
lret
test
int3
lea
ljmp
shl
stc
xchg
add
sub
mov
cmp
faddl
push
xchg
jecxz
sbb
sbb
fcoml
clc
cltd
insb
mov
repz
lret
test
inc
fisttpl
clc
test
push
push
xchg
inc
int3
fmuls
cmpsl
jnp
adc
sub
fsub
outsb
es
push
hlt
mov
pop
and
push
xchg
ret
in
push
stos
jne
add
cltd
cwtl
inc
fisubs
xor
int
jecxz
gs
iret
iret
fucomi
icebp
sbb
ret
jp
fsubl
pop
xchg
cmp
loope
cmp
jbe
pop
jp
pop
sbb
jmp
adc
xchg
adc
es
inc
xor
imul
mov
es
pop
and
mov
add
outsb
push
scas
mov
pop
lcall
movsl
sub
mov
pop
fbld
cmp
scas
sub
nop
outsl
ja
mov
data16
sbb
mov
mov
test
jnp
add
jb
mov
mov
adc
jmp
xor
cs
or
iret
test
push
loop
int3
pop
lret
mov
push
mov
test
mov
das
insb
add
sti
jns
mov
inc
out
fs
mov
cld
pop
enter
aaa
jl
pop
aam
test
jecxz
and
or
sarb
dec
pop
fists
mov
in
push
scas
jecxz
test
inc
mov
xchg
xchg
xchg
fmull
lret
cwtl
leave
loop,pt
ja
jb
cmp
int
push
ret
push
pop
pop
mov
inc
iret
pop
mov
mov
mov
std
pop
inc
out
imul
ret
imul
idivl
mov
insb
test
outsl
cmp
pop
xor
cmp
pop
xor
mov
mov
dec
inc
mov
lret
ret
gs
mov
cmp
jae
scas
jmp
das
fidivs
aam
jmp
int
daa
scas
cmpsb
mulb
lea
add
adcl
iret
js
sbb
mov
aad
mov
pushl
fs
jecxz
jbe
or
mov
stos
lret
dec
push
push
fs
dec
mov
out
pop
xor
add
xor
mov
jne
jle
sbbb
mov
inc
sub
inc
nop
iret
pop
cmpsl
dec
adc
sbb
and
add
repnz
fs
addr16
push
lret
popa
xchg
pusha
stos
and
adc
pop
push
fs
mov
call
mov
test
add
js
rorb
nop
and
and
jb
nop
pop
inc
and
cmc
decb
shl
popa
add
out
fidivs
fstpl
dec
xchg
test
fdivrl
dec
out
and
pop
test
mov
mov
add
mov
and
sbb
xor
nop
adc
js
adc
aam
sbbb
fadd
xchg
dec
lahf
pop
call
call
loop
or
nop
mov
lods
movsb
pop
test
imul
sub
adc
cmpsb
jg
insl
inc
movsb
pop
fldenv
xor
and
icebp
leave
out
pushf
xchg
pop
dec
ljmp
sub
xchg
sar
sti
mov
test
push
sbb
jae
addr16
pop
add
fcoms
mov
pop
out
decb
jae
xchg
std
clc
sub
and
mov
cmp
mov
ds
sbb
mov
sbb
les
loop
outsl
cmp
iret
stc
mov
cli
cmp
pop
mov
clc
mov
pop
xor
jg
popf
inc
lods
sub
ret
icebp
pop
subl
adc
test
sbb
or
pop
inc
inc
ffree
fsts
and
and
not
push
out
test
cwtl
xor
les
subl
in
inc
xor
mov
shlb
lret
or
js
pop
iret
movsl
push
pop
cmpsl
jb
mov
test
gs
aas
inc
add
sub
xlat
scas
mov
andb
lret
xor
lods
repz
mov
pop
mov
iret
insl
mov
dec
push
stos
jge
pop
stos
mov
ret
mov
push
popf
pop
nop
hlt
cmp
pop
mov
mov
sub
shrb
inc
mov
push
ret
cmp
push
pop
add
mov
js
mov
dec
ja
into
xchg
or
ss
sbbl
pop
and
mov
dec
sub
and
cmp
fdivl
aad
dec
sti
int3
rcll
ltr
mov
xchg
pop
push
push
push
fldl
mov
insl
mov
lods
mov
fcoml
mov
cs
pop
xorl
bound
movsl
push
test
dec
sbb
pop
das
js
jmp
jge
push
dec
sarb
je
sbb
loopne
std
sbb
int
mov
imull
or
lea
fistpl
mov
inc
pop
dec
je
popa
lcall
rcl
cwtl
std
mov
ljmp
sarl
icebp
test
pop
add
pushf
cmp
hlt
pop
xor
adc
lock
test
xor
lods
cmp
cltd
push
arpl
xor
mov
mov
das
or
mov
daa
out
mov
clc
stc
adc
add
lock
and
cld
in
enter
sbb
add
dec
fidivl
fwait
sbb
push
or
cmp
xor
sbb
divl
nop
inc
jno
insl
xor
inc
imul
push
cmpl
mov
pushf
cmpsl
sbb
outsl
hlt
test
cmp
add
outsb
push
insb
scas
xchg
jmp
lahf
sub
cmp
cmpsb
movl
xor
mov
test
cwtl
cmp
jmp
test
jge
hlt
test
lcallw
jae
ljmp
pop
and
es
mov
cld
lea
mov
cmp
pop
ljmp
in
pop
jge
pop
lods
ds
aam
lds
add
stos
mov
cli
sti
sub
and
add
cltd
out
leave
push
and
pushf
push
pop
sbb
js
jns
in
mov
xlat
aaa
jecxz
fs
js
pushf
movsl
inc
sbb
shll
mov
incl
lcall
daa
mov
daa
xchg
mov
out
jge
and
cld
shl
clc
cmp
dec
cmp
or
mov
add
and
imul
mov
icebp
sti
mov
fldl
rcrl
outsb
mov
cmc
ss
cwtl
in
add
fisttps
andb
stos
int
xor
in
inc
dec
add
cmp
push
and
mov
movsl
sbb
dec
ja
mov
sbb
cmpsb
jbe
mov
daa
rol
jmp
or
clc
cmp
lods
xor
mov
inc
shr
int3
ljmp
lock
add
movsb
lahf
cmp
repz
cmp
add
sub
mov
icebp
pop
dec
push
add
mov
pop
adc
dec
pop
aam
mov
push
add
add
jae
movsl
stos
pop
sbb
and
stos
shll
scas
call
inc
std
sbb
lret
sahf
mov
xor
sub
mov
mov
out
and
cld
mov
sub
sub
mov
arpl
in
dec
addr16
sub
push
xlat
jns
push
stos
cmp
sub
jb
or
rorb
sub
movsb
ror
loope
imul
pop
push
jmp
mov
mov
lret
pop
mul
popa
dec
addr16
inc
fistpl
mov
adc
call
jne
mov
ffreep
bnd
jp
xchg
jns
loop
cmp
adc
repz
ret
mov
xor
mov
out
mov
cmp
mov
cmpsb
mov
popf
or
push
pushf
jl
andb
sub
in
arpl
sbb
imul
mov
sub
cli
pop
sbb
pop
cmp
jns
or
add
push
int
loope
loope
xor
dec
pusha
jo
sbb
nop
pop
aad
stos
xchg
adc
ljmp
xchg
xchg
or
push
xchg
mov
mov
loope
xchg
shrl
aaa
or
sarb
xchg
sub
insb
fidivs
es
rolb
mov
movsb
lea
aas
int
adc
mov
xor
iret
lcall
add
inc
ja
push
inc
push
add
jns
test
sbb
mov
and
jmp
cmp
or
jbe
lcall
into
outsb
cmp
xor
repz
lahf
jle
fisttps
push
or
jmp
or
rorl
sub
mov
mov
cmp
sub
pop
jne
iret
mov
pop
pop
cmp
sub
sbb
loope
pop
fnsave
xor
cs
scas
sub
stc
test
xchg
mov
or
xchg
adc
andb
pop
lds
dec
insb
jne
jbe
pop
xor
cmpsl
outsl
pop
inc
sub
mov
xchg
inc
sbb
loope
mov
or
adc
or
pusha
push
out
sbb
rorb
xchg
stc
bound
xor
cmpsb
inc
das
jne
jecxz
sti
jns
inc
inc
and
scas
jne
push
inc
xor
cs
jp
xchg
xor
cmp
jo
xchg
enter
xor
push
mov
call
cmpxchg
xchg
mov
outsl
je
xor
lcall
outsl
mov
cmpsl
add
xor
movsl
addr16
mov
icebp
xor
xchg
insb
push
dec
sub
test
scas
lahf
sub
loop
xchg
sub
rclb
adc
jne
mov
hlt
mov
jmp
or
mov
fwait
inc
or
pushf
xor
js
out
orl
push
cmp
jmp
andl
dec
xchg
inc
jne
ljmp
pop
loop
xchg
sti
enter
mov
lret
movsb
xchg
and
pop
les
inc
jg
out
adc
les
movsb
addb
rcll
imul
mov
int3
fsubr
inc
pop
decb
enter
loopne
mov
mov
cwtl
lods
add
shlb
mov
xchg
jl
imul
add
call
in
or
int3
cmc
adc
ljmp
add
push
mov
movb
inc
arpl
out
int
or
icebp
fildll
sbb
js
xchg
dec
frstor
popf
sti
pop
mov
out
es
lahf
pushf
push
jp
scas
push
push
cltd
ss
fsubr
mov
and
push
scas
and
aas
movsl
cmp
clc
mov
jb,pn
lahf
adc
jb
xor
ss
mov
pop
inc
ds
push
dec
push
cmpl
repnz
fsubp
mov
cmp
in
push
cwtl
mov
mov
mov
pop
pop
sbbb
add
mov
mov
popa
mov
add
mov
int
mov
push
sarb
daa
pop
jno
xorl
mov
movq
push
xor
and
and
fsts
lods
cmp
fcomps
mov
xchg
dec
cmp
dec
test
pop
leave
nop
pop
js
dec
sub
or
cmpl
adc
out
push
xchg
ret
pushf
mov
mov
into
xchg
ljmp
inc
dec
or
lret
imul
shr
imul
add
jmp
outsb
jle
fnsave
jp
lds
push
cmp
insl
fmull
dec
jbe
sarl
leave
xor
dec
mov
ljmp
cmp
dec
mov
pop
or
ficompl
inc
gs
stos
push
int3
pop
pop
scas
stos
ja
and
sbb
sub
pop
sbb
adc
xlat
push
push
jmp
das
scas
xchg
push
cmc
lahf
jo
in
iret
xor
push
daa
mov
or
jle
pop
push
js
inc
stc
mov
scas
pop
addb
and
bswap
sahf
ficoms
stc
dec
pop
aas
imul
aaa
imul
popf
stc
mov
fcomps
in
mov
dec
mov
pop
decl
mull
xchg
or
or
iret
and
jg
insb
xchg
popf
stc
in
jp
sbbl
pop
cmp
cmp
les
test
mov
push
jle
sbb
or
nop
ret
pop
push
and
adc
lahf
loop
in
fcomp
push
inc
cmpl
pop
or
std
cmp
jnp
xor
pop
inc
cld
shr
bound
fwait
push
adc
aad
jmp
loope
push
lock
jp
mov
inc
movsl
jnp
xchg
jno
adc
lock
push
jbe
mov
in
mov
lret
stc
xlat
inc
mov
xlat
lcall
and
and
pop
dec
sbb
fnstenv
pushf
ret
adcb
jbe
jle
pop
push
adc
scas
or
mov
adc
lea
or
pop
push
mov
mov
add
pop
or
in
insb
dec
add
arpl
popa
mov
es
andl
out
push
dec
fbld
flds
xchg
sbb
sub
insl
addr16
loope
daa
jle
xor
push
dec
xlat
jo
loope
je
dec
imul
push
xchg
mov
nop
enter
ret
jae
ss
sti
into
out
sub
mov
mov
fcomps
adc
mov
ret
xor
mov
iret
arpl
dec
mov
mov
or
push
int
sti
repnz
andl
adc
out
push
push
inc
mov
cmp
test
scas
dec
clc
iret
adc
xor
fldenv
shl
and
fxtract
pushf
iret
mov
fstps
pop
fisubrs
mov
pop
cmp
lds
out
lods
ret
pop
call
or
mov
inc
mov
add
mov
gs
push
mov
filds
mov
lret
imul
mov
cmp
bound
sub
les
and
test
jb
lret
jg
inc
adc
sbb
adc
les
jno
cli
idivb
cli
mov
sub
icebp
cmp
mov
mov
mov
in
sbb
push
pushf
push
pop
sub
mov
loop
add
std
mov
icebp
or
sbb
inc
pop
jb
stos
cmpsb
shl
push
in
cmp
lcall
mov
or
xor
xchg
outsl
sub
outsl
iret
ror
stos
mov
or
dec
loop
aas
adcl
lret
fbld
movsl
jne
fwait
rcl
lahf
iret
add
shll
dec
push
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
mov
sub
or
mov
mov
mov
movl
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
push
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
and
add
xorl
mov
mov
xor
mov
sbb
mov
sub
mov
mov
mov
push
not
pop
adcl
sub
add
mov
or
movl
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
and
mov
andl
movl
mov
subl
mov
movl
mov
mov
sub
mov
addl
xor
add
orl
mov
xorl
lea
subl
mov
subl
mov
xor
subl
add
mov
andl
lea
sbbl
push
and
mov
subl
xor
add
sbbl
push
and
mov
adcl
push
andl
pushl
xorl
call
inc
mov
add
mov
mov
mov
xorl
xor
mov
xorl
add
jmp
adc
lea
movl
cmpl
je
cmpl
jne
push
pushl
push
call
xor
add
dec
mov
jmp
and
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
sbbl
sub
sbb
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
jmp
iret
and
daa
mov
jle
jmp
popa
bound
bound
pop
dec
xor
fbstp
movups
mov
mov
bound
pop
popf
pop
cld
cli
jne
adcl
arpl
mov
movsl
dec
inc
mov
push
cs
mov
push
sbb
pop
sbb
mov
pop
cli
das
testl
aas
xor
and
fs
or
mov
mov
mov
insl
shlb
inc
icebp
add
les
icebp
dec
sub
push
mov
sbb
fcmovb
mov
lret
and
and
enter
xchg
mov
popa
cmpsl
sbb
jo
daa
mov
xchg
aaa
jge
xchg
loopne
fiaddl
dec
mov
sbb
je
xchg
mov
lret
hlt
test
insb
les
jg
xor
mov
pop
dec
fisttpl
adc
leave
sbbb
adc
jg
inc
mov
inc
aad
mov
push
xor
data16
pavgb
dec
aaa
push
mov
shl
fs
popa
xchg
lods
fstl
out
int
inc
pop
pushf
jle
das
les
das
sub
stos
stc
or
adc
sahf
sub
pop
ret
sahf
ret
xor
lret
dec
lret
subb
push
push
mov
stos
fcmovne
adc
fistpll
mov
jbe
dec
dec
cmp
and
clc
cs
and
or
xchg
jp
mov
int3
aaa
inc
pop
dec
lods
add
cld
dec
xchg
rcrb
nop
ret
push
dec
add
lock
push
add
cmp
fs
sbb
loope
out
sti
inc
pusha
loopne
lret
jbe
xchg
loope
sub
fdivl
ljmp
inc
out
movq
or
ja
stos
jg
jnp
mov
lods
jge
ds
push
arpl
and
jmp
es
lret
leave
imul
xlat
shr
mov
mov
es
cld
call
push
aas
sbb
sub
jmp
mov
sti
push
mov
mov
loope
push
ljmp
rcll
or
adc
inc
inc
data16
adc
pop
inc
je
ss
jge
aad
mov
mov
dec
lea
add
fdivp
xchg
and
xchg
xchg
sti
pop
pop
dec
add
push
cmpsb
mov
mov
int3
ss
mov
push
push
call
lock
push
and
add
fucomp
lcall
mov
adc
and
xchg
pusha
repz
dec
adc
cmp
jge
sti
cltd
in
xchg
pop
popf
mov
out
pand
mov
push
sub
adc
fdivrs
loopne
or
roll
iret
jbe
call
sub
inc
fstpl
and
and
mov
inc
or
mov
repz
mov
jno
int3
sbb
in
insb
mov
inc
dec
repnz
or
movsl
mov
iret
ljmp
arpl
pop
daa
mov
popa
bound
nop
ljmp
mov
mov
rcll
addl
cmpsl
fcomp
movsb
inc
jge
loopne
dec
pop
dec
pusha
dec
inc
insl
xchg
cltd
in
sbb
add
dec
gs
add
lods
or
and
pop
cmp
xchg
std
push
xor
dec
hlt
inc
mov
ljmp
sub
je
out
insl
ret
sbb
iret
cmpsb
push
cwtl
icebp
pop
imul
ds
lods
shrl
push
fs
fildll
push
lahf
push
rcll
imul
fwait
lcall
dec
mov
je
sbb
cmp
frstor
sub
jmp
roll
imul
aaa
subb
in
pop
out
fwait
sbb
dec
shll
push
sbb
pop
xor
mov
adc
in
jnp
test
data16
imul
dec
or
push
and
cmp
mov
cmpb
jo
popa
stos
stos
movl
cmp
push
and
jecxz
jno
pop
ja
ljmp
jecxz
cmpl
test
add
int3
arpl
cld
and
repz
and
in
and
ss
dec
sahf
mov
lock
lock
push
xor
sti
xchg
push
adc
xchg
inc
pop
lds
cmp
lcall
push
inc
scas
jl
jge
mov
mov
xchg
and
jno
in
addr16
stos
mov
lcall
lea
ret
je
rorb
fmull
or
decb
cmpb
xor
lea
inc
in
push
jb
cli
xor
inc
stos
lcall
or
mov
sbb
jbe
pop
sub
mov
pop
in
sbb
gs
cmp
imul
jb
fmul
pop
int
jbe
testl
iret
add
sub
and
inc
loop
adc
rdtsc
popa
ja
icebp
lods
xchg
lods
sbb
hlt
movsl
and
inc
dec
and
fwait
xor
pop
addr16
pop
xchg
into
adc
sub
cli
outsl
lcall
jl
xchg
shrl
inc
xchg
xor
mov
outsl
xor
mov
jl
pop
shlb
mov
sbb
stc
mov
adc
adc
rol
xchg
loope
and
ffree
mulb
out
rorb
dec
add
aaa
and
jmp
xchg
mov
sub
lods
adc
jp
mov
enter
mov
xchg
fcmovbe
int
dec
jg
xchg
xor
xor
lods
cmpsb
shll
pop
popf
jecxz
sbb
xchg
adc
xchg
lea
subl
fdivl
xor
sahf
sbb
cld
ret
popf
and
and
or
xchg
aad
inc
fldenv
daa
pop
pop
jecxz
add
ret
adc
push
jo
shlb
mov
sbb
push
jbe
lahf
movsl
pop
out
inc
adc
arpl
flds
out
setle
xor
pop
aaa
lds
push
jns
jae
cmpsb
mov
sub
fwait
imul
or
push
out
stos
mov
scas
sub
jns
fsubrs
sub
jp
leave
testb
mov
mov
or
rcrl
andl
mov
add
imul
lahf
mov
lahf
and
scas
xchg
adc
inc
or
push
int
jo
add
popa
in
jmp
or
leave
out
push
aaa
jnp
loopne
push
pop
mov
psubusb
push
adc
inc
push
sahf
lods
test
aad
loopne
cmpsb
ja
rol
add
lret
mov
push
ja
shr
mov
daa
lret
jnp
icebp
jg
lds
into
jge
push
lret
mov
aaa
cmpsb
jnp
stos
outsb
xchg
or
std
sahf
dec
les
pop
adc
and
jno
cmp
cmp
sbb
in
pop
lods
sbb
cmc
mov
push
or
or
and
xchg
les
xor
jle
or
or
push
lock
cmpsb
mov
out
pop
movsl
cmp
inc
loopne
into
sub
push
and
jb
fcomp
iret
mov
sub
mov
sub
fmul
adc
xchg
push
ljmp
sti
loopne
jp
mov
mov
and
cld
push
jb
inc
test
adc
add
icebp
addb
adc
push
lods
test
jge
lea
fistps
push
loopne
mov
fnstenv
out
decl
iret
rclb
sbb
cmp
adc
stc
scas
mov
jns
ret
pop
xor
iret
mov
mov
lods
iret
add
out
xor
arpl
mov
mov
sbb
xor
fdivrl
push
add
scas
xor
adc
addr16
mov
inc
movsl
nop
popa
jmp
movsb
fisubl
pushf
nop
sbb
popf
sbb
mov
lods
mov
adc
adc
imul
mov
cli
inc
add
pop
out
push
test
or
xor
push
or
dec
push
stos
cmpsl
cmp
int3
or
xchg
and
dec
mov
or
push
sahf
inc
bnd
daa
jle
xor
cld
es
es
cmp
shrl
stc
lret
push
leave
fistps
pusha
arpl
movsl
insl
addr16
xchg
popa
push
fadd
push
testb
stos
mov
js
mov
sub
xchg
mov
jo
stos
stc
shrl
mov
xchg
mov
dec
insb
shlb
rcrl
ficomps
aam
pop
sub
mov
xor
leave
call
xchg
xchg
rcll
imul
fisttps
inc
ret
pop
insl
jae
aaa
addl
and
xor
leave
inc
stos
imull
fsubrs
pusha
test
xor
pusha
inc
sub
out
xchg
les
sti
loopne
ret
test
out
push
icebp
xor
mov
std
adc
xchg
dec
call
roll
inc
icebp
or
and
push
aaa
ja
arpl
mov
cmc
xor
xchg
jne
inc
fs
xor
jnp
fwait
popf
test
lock
xor
div
call
cmp
stc
daa
jmp
mov
pop
out
lods
out
pushf
rorl
xor
div
or
cmp
push
mov
and
sub
fdivrl
and
add
mov
pop
js
imul
push
inc
cld
xchg
cmp
jb
xchg
xchg
aaa
mull
decl
rorl
or
gs
clc
inc
shl
addr16
dec
in
pop
push
xchg
adc
repnz
pop
mov
sub
jno
add
lret
pop
dec
or
mov
inc
popa
dec
or
jbe
push
lahf
jle
xchg
lea
mov
les
mov
test
es
jge
loopne
jb
test
ret
push
mov
mov
xchg
dec
push
sbb
arpl
ficomps
mov
ret
test
outsl
sbb
int3
jg
mov
push
pusha
int
sub
mov
fldcw
xchg
daa
dec
dec
arpl
in
jmp
add
inc
lods
push
in
jge
adc
inc
int3
out
mov
mov
jns
leave
pop
stos
out
add
pop
mov
lods
sahf
or
sub
aam
in
cwtl
in
ret
xchg
ds
dec
jb
adc
mov
sar
sbb
pop
mov
sahf
ficoms
icebp
pavgb
add
ss
or
jne
jl
lret
xchg
rcrl
xor
in
jp
xchg
adc
push
aaa
inc
sti
mov
scas
push
sub
cmpsl
push
adc
lahf
sub
cmp
lds
mov
push
int3
xchg
sbb
xor
sbb
lahf
inc
push
pusha
inc
mov
adc
cmp
adc
inc
push
sbbl
shrb
mov
sub
pop
mov
push
mov
jbe
cli
push
jecxz
stos
popa
loope
xor
out
or
sub
cmp
lock
xchg
mov
sbb
xor
out
fidivrs
cltd
mov
xchg
jae
pop
fs
jge
lods
outsl
bound
nop
pop
sbb
xor
or
cltd
dec
aaa
jbe
fiaddl
jmp
cs
call
mov
mov
movsb
xchg
das
adc
aam
xchg
or
sbb
out
test
mov
pop
ss
ret
pushf
push
dec
cmp
ja
jns
loopne
cmpl
pushf
mov
ror
mov
mov
pop
cli
adc
cltd
and
inc
fsubl
mov
in
es
loope
mov
mov
xor
pop
pushf
xor
nop
pop
mov
mov
jl
pushf
jno
sub
dec
insb
outsl
test
xchg
xlat
pop
inc
fdivrs
mov
mov
adc
ss
ret
shll
sahf
test
aam
pushf
fisubrs
push
es
js
push
std
adc
add
mov
in
jbe
add
add
sbb
add
and
push
xchg
mov
stos
ja
pop
sub
cs
lret
dec
into
test
add
or
fsubrs
fildll
sarl
movsb
jmp
push
mov
fs
mov
adc
stos
cmp
fidivs
aam
fidivrl
xchg
inc
xchg
movsl
pop
sub
or
inc
lock
xor
add
out
stc
sbb
fs
lods
mov
push
loop
mov
les
lods
add
mov
or
loop
popa
or
push
xchg
je
in
aas
sub
mov
jo
mov
add
dec
test
dec
test
jge
cld
inc
lret
xchg
push
aaa
cltd
movsb
sbb
xor
or
push
push
out
fwait
lods
pushf
sbb
xor
inc
inc
je
jnp
lods
fnstsw
push
mov
es
pop
mov
fs
push
jae
out
ljmp
imul
xchg
xchg
or
dec
xchg
push
dec
sub
insl
cmc
adc
xchg
fucomp
aam
and
mov
xlat
mov
push
mov
add
lret
pop
ret
pop
mov
jge
pop
lahf
clc
xchg
test
cs
mov
iret
sti
mov
xchg
lret
aaa
stos
sub
mov
or
andb
fmuls
test
cmp
jno
sbb
or
xchg
push
cs
out
clc
addr16
int3
stos
lods
adc
inc
adc
in
daa
data16
scas
out
in
daa
jae
and
mov
and
cmpsl
cli
scas
lds
xchg
push
mov
sarl
xlat
cmp
pusha
aam
test
push
pop
syscall
dec
adc
mov
aad
js
mov
lods
loopne
add
sbb
mov
aas
test
mov
in
rolb
bound
add
sarl
push
shrl
pop
adc
and
lcall
scas
jbe
lcall
imull
cmp
xor
inc
adc
mov
adc
stos
mov
inc
xor
in
jae
and
mov
sub
movsl
push
lods
out
xchg
daa
aaa
inc
outsb
mov
gs
fdivrl
xor
fldt
mov
xchg
xlat
test
inc
and
inc
mov
aad
xor
adc
cld
ficoms
push
inc
aas
jae
jecxz
mov
adc
pop
mov
mov
cmp
xchg
adc
dec
add
mov
or
cmpsl
fsubs
aam
out
negb
insl
mov
xor
mov
test
and
into
xlat
cmpsl
sti
lods
test
sar
cwtl
pop
shrb
adc
pop
cmc
out
push
outsl
out
in
fldcw
xchg
fmull
pop
or
movsl
sbb
inc
jbe
loope
dec
lret
cmp
pusha
test
or
rcrl
shlb
lock
jns
jmp
aas
test
popa
xor
fimuls
int3
cmp
xchg
int
add
mov
iret
shrl
sbb
xchg
dec
repnz
jne
fldenv
ds
fwait
jl
inc
cmp
xorb
push
in
push
push
js
iret
or
mov
mov
in
shlb
adc
sub
sub
lods
lret
in
xor
push
mov
js
inc
test
iret
push
fwait
je
pop
mov
cmpsb
in
inc
ss
and
es
loop
fnsave
cmp
popa
jle
fbld
xor
cmp
sti
lcall
mov
nop
pusha
mov
mov
jecxz
std
mov
je
xchg
pushf
imul
xchg
out
add
adc
rorb
or
xchg
pushf
imul
mov
jmp
mov
jge
stc
mov
addb
mov
pop
adc
stc
ss
decl
inc
adc
push
pop
lods
xor
lock
mov
jmp
xchg
jge
jge
fsts
test
bound
xor
cmpsl
mov
insl
mov
cmc
and
xor
sbb
nop
push
test
call
int
std
mov
loopne
es
dec
dec
clc
dec
loopne
sbb
fs
or
aas
jp
pop
les
mov
lods
cmp
or
xor
pop
pop
jnp
jb
jno
shl
mov
push
lret
movsl
das
es
cmp
cld
fisubrl
cmp
mov
mov
fisubrs
test
popa
pop
sbb
pushf
and
cwtl
cmpsl
rorl
test
cmpb
imul
mov
add
dec
dec
je
aas
xor
int3
in
test
je
inc
sbb
icebp
push
xchg
mov
mov
xchg
daa
xlat
sti
mov
daa
imul
dec
mov
mov
cltd
mov
ret
out
xchg
bound
outsl
xchg
push
mov
inc
int
push
movhps
push
or
and
mov
rcrl
rcrl
adc
sbb
cmpsb
aas
cmp
clc
push
xchg
cmp
adc
dec
pop
outsl
aad
arpl
push
cmp
push
add
es
stos
jge
xor
pop
ret
fs
enter
jl
int3
jbe
popf
mov
adc
shl
out
pop
rcrb
iret
das
lock
add
std
jp
jno
movsl
enter
push
sbb
lret
fs
aas
pop
aaa
lahf
cmp
in
add
mov
shlb
or
inc
fsub
clc
pop
aaa
pop
sbb
mov
lock
addr16
shrl
sub
dec
imul
mov
in
aas
mov
jg
or
imul
mov
lds
mov
mov
push
aam
outsb
rorb
in
add
cmp
hlt
mov
jmp
push
sti
out
mov
enter
rclb
xchg
and
lods
mov
push
mov
int3
popf
cwtl
sub
sbbb
out
jg
enter
dec
loope
aad
out
adcb
sbb
sarb
inc
repz
mov
adc
push
xchg
jmp
jl
int
in
xor
inc
jge
sub
or
cmp
incb
jmp
inc
call
push
jmp
jns
ffree
pop
or
inc
mov
sub
lret
in
sub
sub
cmovs
out
add
or
sahf
sub
outsl
movsb
fs
das
jp
cltd
lcall
add
pop
stos
mov
sbb
rclb
push
push
jno
adc
ffreep
inc
mov
cmp
lods
lahf
or
mov
ss
shlb
into
out
data16
mov
ss
or
pop
aas
fdivr
adcl
push
add
pop
mov
outsl
js
lret
sub
mov
mov
stc
das
sbb
inc
lods
jno
pop
mov
mov
push
pop
mov
sub
xchg
loope
xchg
fwait
xchg
nop
xchg
out
jnp
jmp
int3
push
ret
xchg
cmp
push
mov
nop
inc
das
pop
jb
push
pop
popa
lea
sub
inc
data16
cmp
jle
mov
dec
fs
sbb
add
test
jbe
jno
insb
movsb
or
sarl
inc
iret
in
test
sub
pop
in
jo
dec
out
mov
jge
lret
cli
leave
push
push
cmp
pop
stc
fadd
hlt
jl
xchg
cmc
incb
sbb
mov
mov
or
or
stos
test
inc
stc
int3
xor
movsl
into
jne
lds
repnz
push
je
xor
cmp
mov
inc
mov
and
add
xor
xor
push
sbb
jmp
or
lahf
mov
dec
in
stos
pop
jl
xchg
mov
in
xchg
insb
cmp
jno
or
fcomps
xchg
sbb
inc
repz
xor
push
scas
test
popl
or
push
mov
bound
and
fsts
ret
sub
inc
pop
and
repz
xchg
cmp
in
cmpsl
fwait
and
pop
or
iret
push
mov
fadds
dec
aaa
mov
xchg
sahf
in
mov
jp
cld
das
inc
cwtl
out
fadds
jae
or
sub
js
and
xchg
ret
jmp
sbb
dec
and
scas
inc
pop
es
dec
arpl
es
mov
out
out
push
mov
jae
aas
repnz
call
insb
cmp
mov
call
pop
xchg
and
or
stos
jo
sub
push
lcall
in
testb
xchg
push
xchg
and
sub
mov
in
or
jmp
mov
shrl
imul
mov
outsl
cmp
and
mov
das
sub
in
aaa
xor
jp
call
aaa
add
rcrb
dec
in
mov
mov
lods
out
addr16
pop
das
pushl
mov
sbb
dec
jb
in
mov
push
dec
push
jo
loopne
cld
cld
mov
test
xorl
popa
fcompl
inc
fsubr
stos
shrb
test
xchg
mov
add
inc
cmp
cmc
repnz
test
out
push
xor
std
dec
jbe
pop
add
cmp
pop
jnp
mov
xchg
int
leave
shll
adc
into
xor
xor
loop
int
fsts
pushl
movsb
imul
mov
pop
in
orb
out
aaa
lock
mov
sub
addr16
mov
enter
sbb
xchg
xchg
push
lods
sarb
xchg
cwtl
lods
out
inc
sub
mov
cwtl
lcall
lea
add
mov
or
pop
pop
es
lahf
fsts
cmpb
scas
mov
out
push
cs
sbb
out
call
dec
ljmp
leave
sahf
xor
test
je
xchg
jae
rorl
jne
jb
xchg
cwtl
jae
jbe
fs
jno
stos
daa
pushf
decl
xchg
add
aad
stos
push
dec
mov
sub
lock
sbb
xchg
push
ja
push
ficomps
xchg
mov
dec
in
lahf
inc
dec
or
xchg
inc
mov
xchg
int3
sahf
dec
mov
mov
sub
loope
xchg
aam
sbb
mov
outsb
xor
addr16
out
in
add
push
sub
outsb
mov
cs
gs
add
mov
adc
jns
fldenv
in
sub
es
jae
cmc
fwait
mov
inc
lods
ljmp
fcoms
jp
testb
dec
das
push
or
outsb
lret
in
push
xchg
ret
mov
lods
rclb
shl
sub
dec
inc
mov
out
pusha
sbb
leave
ret
mov
fstl
lods
scas
ror
aad
mov
jle
inc
scas
clc
push
call
ret
cmp
mov
inc
ja
inc
aas
lock
in
mov
add
sub
fsts
mov
inc
aad
sbb
fsub
out
xor
jg
mov
sub
pop
push
jg
jnp
mov
adc
test
pop
outsl
pop
xorb
or
lods
movsl
adc
jecxz
mov
mov
cmp
fwait
push
pop
adc
ss
jp
xchg
pusha
subb
sbbb
jmp
mov
add
jge
mov
pop
in
test
outsb
clc
sbb
ret
mov
pop
call
xor
int
div
jl
xchg
jge
mov
jge
mov
and
cs
xchg
fsubrl
inc
mov
inc
and
mov
xchg
out
xor
fmul
sub
pop
mov
lea
rcrb
dec
ljmp
popf
xchg
pop
cmp
mov
cmp
dec
dec
jno
sbb
sbb
rorl
in
sub
jecxz
clc
sti
adc
sbb
lea
push
adc
push
xor
xchg
fcoml
hlt
loop
jbe
lock
jg
je,pt
sahf
push
clc
lret
adc
cli
add
sbb
mov
je
push
push
mov
sub
out
ret
test
jp
dec
shll
aaa
idivl
jmp
ret
dec
repnz
pop
cmpsl
loope
into
outsl
jge
jp
mov
push
imul
push
pop
mov
fcmovbe
iret
sub
jno
sbb
mov
adc
data16
mov
ret
mov
ja
xchg
and
jnp
mov
pop
mov
popa
nop
and
jo
jmp
arpl
ja
fsub
aam
mov
xchg
or
push
data16
mov
call
fwait
and
rorl
xlat
fdivs
sub
add
jo
enter
imul
enter
addl
xor
daa
xchg
sbb
jns
out
cld
std
inc
outsb
loope
imul
and
cli
cmp
test
std
ficoml
arpl
mov
rcrb
push
lret
xor
data16
push
add
inc
pop
orl
xchg
and
adc
add
loopne
pop
movsl
mov
out
aas
inc
pushf
inc
and
dec
movsb
in
and
pop
popa
adc
popa
in
mov
mov
push
loope
or
arpl
ja
jnp
add
lods
jo
xchg
pusha
mov
pop
jo
dec
lret
mov
js
push
mov
outsb
jg
loop
push
daa
and
cmpsb
or
icebp
arpl
xchg
push
in
adc
addr16
cld
repz
icebp
xor
add
inc
add
cmpsb
adc
inc
aam
test
mov
jge
ljmp
lcall
sub
cmpsl
mov
push
jno
into
push
cmp
adc
out
movsl
imul
xlat
mov
aam
add
cmp
or
lar
add
adc
inc
xor
enter
es
mov
cmp
pop
dec
or
outsl
cmp
loopne
mov
lea
sbb
sub
in
mov
enter
cli
mov
lahf
jno
mov
mov
cmpl
dec
sbb
imul
addr16
out
mov
adc
fdivrl
pop
out
dec
fmul
mov
sbb
or
arpl
out
sub
xchg
pop
cmp
lds
das
mov
xor
fwait
push
xor
ret
pop
bound
mov
adc
adc
dec
stos
push
cli
js
jae
gs
cmpsl
aas
ret
jle
js
mov
mov
ss
lods
lcall
ficoms
rorl
mov
mov
into
push
and
dec
in
loopne
sti
mov
in
test
in
ffree
cwtl
icebp
frndint
mov
push
mov
outsl
ljmp
data16
inc
insl
inc
in
mov
stos
xchg
int
fs
dec
aas
jae
leave
mov
fmull
fwait
daa
mov
das
outsl
ja
xor
arpl
xor
lods
mov
add
pop
jno
cs
iret
mov
dec
aas
add
push
outsb
mov
scas
mov
lods
ss
pop
pushl
xchg
mov
inc
daa
cmp
test
mov
push
out
ds
ds
imul
arpl
mov
ficompl
sub
adc
aam
pop
dec
icebp
mov
cmpsb
push
mov
in
xchg
xchg
cmc
aaa
ja
bound
pop
mov
add
xor
push
insb
mov
lock
push
fstpt
data16
add
mov
mov
cmp
daa
movsb
mov
jo
jns
insl
mov
leave
or
xchg
inc
lds
lds
in
mov
add
inc
xlat
xor
cmpsb
mov
cld
inc
addr16
push
dec
and
out
pop
push
stc
lahf
cltd
add
mov
in
add
fwait
push
mov
call
xor
xchg
andl
mov
orb
pop
ret
sahf
stos
push
dec
jb
dec
push
aam
inc
pusha
outsb
jne
shlb
mov
mov
popf
pop
nop
add
pushf
ljmp
push
movsl
xchg
das
jbe
cmpsl
xor
adcl
filds
add
mov
sbb
call
lds
aam
sbb
push
pop
add
in
loope
out
icebp
sbb
xchg
adc
enter
cmc
push
insl
cli
jle
pop
rsm
sbb
push
xor
in
cwtl
push
jae
cmp
cmp
clc
dec
fsubrs
sub
out
sbb
ss
daa
les
pop
js
cmp
mov
mov
dec
mov
cwtl
pop
adc
sbb
pop
leave
xchg
pop
mov
xchg
das
shlb
gs
adc
lods
dec
out
hlt
fidivrs
test
clc
or
cmp
imul
fmull
push
pop
mov
notb
jmp
into
sbb
xor
in
es
inc
xchg
dec
pop
aam
call
std
ss
in
jl
shlb
cmp
push
jmp
sbb
jo
jbe
push
inc
and
jnp
mov
testb
pop
pop
pop
leave
xor
mov
xor
hlt
gs
cmc
inc
xor
inc
mov
push
repz
mov
lods
inc
stc
loop
mov
fldt
cmpsl
xchg
iret
ds
mov
pop
leave
xor
sbb
sub
hlt
add
pop
aas
ret
push
lds
mov
popf
add
pop
jmp
xchg
mov
mov
lahf
jns
ret
xchg
decl
fcomps
movsb
pslld
test
dec
ret
pop
out
jmp
adc
push
xlat
jns
popa
pop
pop
fs
fwait
movsb
stc
sub
andl
add
fwait
pusha
ja
sbb
dec
adc
popa
outsb
mov
mov
jle
scas
rclb
xor
in
popa
sub
and
mov
mov
or
mov
test
or
sub
lock
push
mov
lock
cwtl
ret
dec
mov
jns
ficoms
dec
inc
jno
fs
fucomi
outsl
es
add
lret
pushf
enter
pop
push
iret
fwait
mov
test
mov
movsb
out
mov
out
sub
pushf
bound
push
pop
lret
sub
xchg
cvtdq2ps
mov
adc
test
push
insl
fwait
jo
popa
scas
sbb
mov
pop
inc
pop
lea
push
lahf
dec
push
ficomps
pop
movsl
jle
inc
mov
rcll
push
cmp
sbb
xchg
int3
sbb
stc
mov
rcll
mov
ss
loop
popa
add
cmpsb
inc
mov
movsb
stos
ljmp
dec
pushf
cmp
iret
loopne
repnz
mov
mov
ss
iret
push
fbld
pop
lea
js
xchg
pop
jl
popa
xlat
int
int3
inc
inc
add
push
mov
out
mov
rcrb
cmc
cmc
call
loopne
stc
dec
pop
sbb
add
mov
ret
dec
rclb
mov
jns
inc
dec
flds
xor
fcompl
iret
arpl
jns
loop
xchg
and
cmp
test
lods
or
push
fcompp
lcall
mov
dec
mov
out
or
repz
mov
sqrtps
add
mov
pop
repz
or
leave
jb
mov
gs
adc
filds
in
daa
divb
push
adc
adc
pop
hlt
jbe
inc
out
jno
push
repnz
push
cwtl
push
cmp
push
mov
add
fsubl
jle
out
or
mov
bound
bound
push
xchg
out
dec
shll
or
cmpsl
pop
mov
fcoml
lcall
jno
and
dec
jae
es
shl
ja
pop
push
inc
pushf
or
scas
jns
xor
sbb
cmpsl
jmp
xor
outsb
adc
out
and
loope
lock
pop
sub
xchg
dec
xor
or
xor
mov
add
and
stos
mov
pop
stos
dec
inc
lock
push
enter
roll
cmp
mov
mov
cmp
xor
xchg
push
inc
jns
shr
push
xor
stos
or
int
mov
push
sub
or
push
xor
and
or
sbb
vmread
mov
icebp
mov
out
test
xchg
adcb
add
push
ret
add
cmp
stos
pop
dec
mov
and
cld
repnz
pop
adc
mov
push
les
inc
xorl
jb
daa
mov
jl
iret
in
imul
push
mov
dec
or
jns
dec
call
pop
or
adc
gs
out
shr
sbb
add
fwait
daa
mov
jns
xor
movsb
inc
push
xchg
jecxz
arpl
loopne
jmp
dec
xor
sub
or
xor
mov
lret
push
dec
lret
sbb
stos
jg
inc
stos
xchg
mov
jns
insb
or
gs
dec
adc
pop
mov
jae
dec
push
and
je
decb
cmp
adc
icebp
push
shll
ret
and
clc
sbb
jns
jmp
push
push
int
ljmp
out
in
adcl
enter
add
pushf
push
or
sbb
mov
inc
sub
jo
xchg
mov
jge
stos
cmp
arpl
jmp
sbb
mov
sbb
fldenv
add
push
adc
xchg
push
push
sti
mov
mulb
dec
mull
movsb
subl
sarb
dec
nop
stc
jp
repnz
and
pusha
add
or
es
mov
imul
mov
or
movsl
stc
loope
sub
push
sbb
push
notb
lret
adc
sysenter
and
es
dec
hlt
adc
adc
mov
mov
pushf
rol
mov
push
cmpsl
lds
test
add
aaa
popa
mov
mov
scas
out
int
dec
stos
jle
sti
es
aam
fstpl
out
lret
or
insl
cwtl
cli
push
jnp
cmovbe
pop
mov
outsb
adc
scas
xor
jnp
add
and
out
out
push
mov
jl
int3
stc
dec
jno
lret
mov
jle
jbe
dec
xchg
sub
sub
clc
xor
imul
or
jbe
pushf
or
test
mov
out
lahf
iret
add
in
leave
ret
lret
jno
popa
std
inc
movsb
and
or
push
jb
test
sbb
push
and
jo
fdivrs
pop
xchg
mov
cwtl
mov
int3
mov
and
test
shlb
cld
cmpb
scas
sti
fucomp
out
lret
xchg
dec
ja
jge
ret
mov
cmpb
icebp
lods
xchg
lds
fisubl
pop
mov
adc
or
pop
fcoms
jnp
divl
lcall
xchg
mov
fdivrs
aad
loopne
adc
aaa
lods
cmc
mov
sub
adc
add
jnp
jmp
add
pop
jg
push
mov
add
add
lods
fs
test
jo
xor
iret
lods
cmc
cmp
jecxz
icebp
mov
or
clc
ficoml
das
mov
pop
lret
pop
in
nop
jg
xor
inc
pop
js
in
out
fists
lcall
xor
nop
ds
mov
into
sti
jge
jo
bound
icebp
push
mov
jmp
cmp
cld
fdiv
push
cmc
cmp
mov
out
xchg
les
imul
jecxz
mov
sti
stc
int3
aam
sbb
pop
xchg
jo
pop
sub
sub
mov
ja
cld
mov
jle
add
mov
std
push
testl
and
adc
push
dec
sbb
mov
stc
bound
add
jno
addr16
jge
imul
pop
jo
repz
xor
xchg
add
int
and
fs
push
out
pop
js
sahf
inc
inc
fistpl
jle
nop
add
enter
outsb
flds
mov
stc
mov
jns
and
or
mov
mov
and
cmpsl
xchg
js
xor
or
addr16
repz
ret
jae
sbb
das
ficomps
incl
movsl
cmpsl
lea
shlb
and
adc
mov
sub
xor
outsl
jg
in
xorb
mov
mov
cmp
imul
pop
or
in
subl
push
mov
sarl
push
dec
add
inc
fstl
inc
pop
adc
cmp
push
mov
je
movsb
mov
insb
mov
cmp
or
mov
call
cmovbe
outsl
data16
sub
inc
ret
jns
ficoms
cmpsb
or
add
inc
sahf
shl
mov
rclb
xor
add
adc
push
pop
pop
sub
fnstsw
shl
ret
lock
mov
mov
into
pop
sub
jbe
adc
mov
lea
scas
mov
movsl
xor
mov
or
fisttpl
pop
xchg
inc
adc
sub
mov
js
push
cwtl
mov
mov
sub
jns
push
pushl
jle
mov
loop
xor
test
notb
lahf
jne
xchg
call
daa
add
scas
lods
dec
xchg
pop
xchg
mov
mov
lea
in
jmp
push
or
dec
and
and
or
lea
mov
fcomp
daa
ja
xchg
pop
adc
sbb
mov
test
das
inc
mov
rcr
icebp
mov
fbstp
or
push
mov
push
dec
xchg
sub
xor
add
sub
xchg
xor
lods
popa
xor
mov
stos
push
movsl
cmp
push
sub
pop
mov
fmuls
sahf
pop
lods
xor
push
push
jb
xchg
nop
cmp
test
push
pop
inc
imul
jno
ds
mov
sbb
inc
imul
cmp
lods
mov
push
or
outsl
jg
rclb
mov
shr
and
out
out
push
cmp
xor
je
sub
mov
and
jp
xor
rcll
xchg
xor
jbe
pushf
bound
sub
pop
mov
mov
pop
cltd
loope
sbb
inc
mov
in
inc
aad
daa
sbb
es
push
imul
xchg
pop
mov
mov
sbb
inc
adc
jle
loopne
xchg
nop
andl
sub
pop
int3
scas
lret
xchg
sbb
mov
rorl
mov
jbe
push
xor
sti
adc
push
or
push
add
bound
arpl
mov
or
xor
pop
push
xchg
out
mov
scas
jge
in
lret
mov
xlat
pop
fdivl
dec
stc
sbb
aam
mov
pop
test
mov
int3
daa
test
pop
fnstenv
insb
add
add
out
cmovs
loope
aad
repz
imul
sahf
pop
cmpsb
mov
dec
mov
ss
and
and
data16
rorl
lock
xor
sti
lods
add
mov
jne
aam
jno
push
mov
sub
lea
mov
roll
stos
addr16
rcll
popl
cs
sub
loopne
xchg
mov
ror
mov
jno
nop
add
mov
xor
insb
sarl
dec
sub
cmpsb
mov
nop
push
adc
out
test
jmp
test
repnz
out
les
sbb
push
fidivrl
or
xor
add
push
dec
xor
pop
jle
mov
mov
fadds
fst
das
pop
jo
jg
fists
test
xchg
mov
movsl
xchg
mov
mov
push
jp
dec
lcall
and
jg
sti
jo
pop
add
sub
cmpsl
pop
xchg
dec
ss
mov
mov
xchg
test
rorl
inc
sahf
outsb
mov
dec
divb
mov
push
clc
fadd
call
sbb
fs
int3
scas
add
scas
or
ljmp
adc
sarl
or
xchg
arpl
aad
jo
pusha
pop
and
push
xchg
mov
dec
mov
cmpl
jnp
aam
clc
adc
repz
sbb
ljmp
sub
inc
push
ds
pop
mov
adc
or
jmp
subb
imul
orl
fnstenv
lea
push
inc
and
shll
inc
mov
mov
adc
ret
jns
stc
pushf
rcrl
rorl
jne
cmp
cmp
xchg
mov
cwtl
jg
ljmp
aas
ljmp
inc
sbb
pop
jmp
pop
mov
mov
outsb
fadd
into
test
or
mov
push
in
dec
outsl
sub
daa
daa
or
lcall
push
fdivl
or
mov
lds
adc
cs
jl
lret
data16
call
and
push
mov
lea
scas
mov
adc
jno
addr16
cmp
push
add
test
adc
call
cmc
cmpb
push
hlt
outsb
movsb
and
fisubrs
xor
filds
stos
pop
jae
insb
popf
lods
les
lcall
push
sbb
movsl
jmp
int3
push
jbe
inc
test
fists
imul
sbb
adc
push
or
cmc
mov
rcrl
jne
repnz
fcmovnbe
adc
sti
test
cli
push
enter
add
jle
jle
ret
sbb
cmpsl
pop
iret
nop
aad
mov
outsl
fwait
jbe
js
sub
xor
enter
adc
sbb
jns
in
loope
iret
inc
mov
in
out
cmp
mov
add
dec
aam
add
fs
scas
adc
inc
push
jge
outsl
fnsave
xlat
sub
loop
cmpsl
pop
xor
and
lods
les
push
out
jnp
mov
decl
mov
mov
call
xchg
fcmovne
ss
xchg
mov
js
jbe
mov
loopne
pushf
push
xor
mov
addr16
jl
and
movb
lcall
pop
popa
js
orb
repz
out
pop
scas
inc
xchg
in
xchg
adc
push
iret
jne,pt
mov
sub
pop
xchg
rclb
sbb
in
das
aaa
sahf
rcrb
mov
mov
out
push
xchg
mov
inc
inc
ret
out
sub
jno
bound
stos
sbb
lahf
sbb
push
out
inc
pop
cmovge
hlt
shrb
imul
push
mov
test
loop
stos
dec
cltd
mov
inc
fistl
mov
xchg
push
xchg
xchg
add
dec
adc
pop
jecxz
jno
push
shll
int3
cmpsl
xchg
stos
xor
and
sub
mov
sbbb
add
out
and
add
loope
mov
sbb
cmp
aad
jl
mov
dec
lret
jno
ret
mov
dec
insb
pop
inc
or
and
push
xchg
fwait
cli
dec
dec
fistpl
xchg
lahf
lcall
popa
imul
insl
and
push
and
cld
mov
cmp
xor
filds
sbb
cmp
rorl
pop
subl
imul
and
add
out
rcrb
add
dec
sbb
fcompl
cs
mov
roll
pusha
pusha
movsb
xor
lds
add
movsb
stc
jp
aad
stc
test
movsl
int3
jnp
mov
pushf
sbb
mov
xchg
negb
push
mov
pop
push
shll
adcb
jecxz
in
scas
xchg
adc
aaa
cli
cmpsl
sbb
out
jns
mov
fistpll
push
scas
mov
rclb
jmp
mov
das
leave
fsub
push
mov
sub
xchg
mov
and
xchg
pop
mov
add
or
cmpsb
inc
hlt
dec
lods
or
cli
fsub
adc
stc
gs
xchg
mov
fsub
pop
cwtl
jge
das
clc
ds
pop
mov
insb
mov
mov
add
lahf
xchg
jbe
mov
mov
sub
pop
jo
mov
mov
pop
mov
or
ja
push
add
add
and
pop
push
jp
test
int3
dec
cmp
adc
add
xchg
mov
mov
lret
xchg
and
in
aam
jge
xchg
jbe
iret
mov
mov
xchg
test
rcl
imul
mov
arpl
pop
push
jg
cmpsb
lret
push
daa
mov
shrl
and
xor
popa
xor
add
jb
sbb
pop
shlb
dec
lea
js
shl
ljmp
fdivl
push
lock
sbb
lods
sbb
jns
cmpl
xor
lahf
push
aad
mov
inc
jl
mov
ljmp
inc
cmp
xchg
subb
add
pop
or
rcl
xchg
cld
sbb
cltd
adc
xchg
dec
xchg
inc
mulb
dec
popf
movsl
mov
decb
shll
cmpsl
movsl
sbb
test
cs
test
sbb
loope
rorl
and
add
fcmovnu
movsb
lds
pop
dec
cmpsb
aaa
mov
jg
or
xor
mov
nop
and
mov
mov
mov
jg
jno
jne
push
jg
lret
cmpsb
sbb
sub
int
je
mov
mov
add
push
sub
mov
idivl
cltd
dec
push
fnstcw
add
push
adc
iret
push
mov
mov
lock
xor
shrl
jmp
arpl
push
dec
xchg
out
inc
into
mov
jae
and
cmc
insl
push
pop
mov
and
mov
cmpsl
repnz
ja
pop
pop
sbb
or
lret
dec
adc
aam
mov
push
js
fwait
adc
cwtl
mov
and
mov
aas
fdiv
pushf
shrl
loope
mov
mov
adc
add
xor
clc
xchg
mov
call
cmp
sbb
add
xchg
adc
dec
rcrb
daa
cmp
lcall
and
and
lcall
push
jnp
stos
loop
nop
xor
ficomps
js
ljmp
pop
test
mov
and
add
jge
mov
arpl
mov
pushf
push
cmp
aad
nop
sub
jl
inc
imul
test
roll
repz
lret
iret
cltd
and
inc
xchg
imul
xor
add
push
addr16
leave
xlat
loop
mov
or
int3
aas
fwait
add
hlt
inc
push
repz
enter
add
mov
adc
sti
int3
out
repnz
lcall
mov
inc
mov
ljmp
ss
add
cmp
add
push
pop
pushf
jecxz
nop
cmp
rcr
ss
ja
xor
xlat
int
adcb
inc
sti
jns
mov
push
ss
arpl
mov
popf
sti
cmp
cld
loope
pop
sub
add
mov
jmp
lods
push
or
inc
loopne
cmp
push
xchg
sub
addr16
jns
lret
js
divl
out
push
push
test
or
insl
jecxz
mov
loop
dec
je
add
mov
cmpsl
push
mov
jg
out
rclb
cmp
lock
out
sbb
push
push
or
jmp
out
cmp
cmp
lock
xor
repz
test
test
cmc
ret
mov
int3
push
push
mov
sbb
hlt
sbb
lret
insl
cmp
in
adc
loop
mov
inc
jne
mov
lret
pop
in
mov
mov
cmp
fdivrs
xchg
mov
mov
lcall
xchg
adc
inc
inc
sbb
in
gs
lahf
cmpl
jbe
or
imul
jb
test
jb
pop
and
pop
into
push
jmp
sub
cld
test
in
or
pop
inc
movsl
popf
pop
hlt
scas
test
pusha
iret
add
sbb
jmp
lea
sub
sti
fcomps
inc
cmp
dec
lahf
xchg
mov
cs
mov
out
push
jnp
iret
dec
mov
mov
test
inc
and
scas
pop
xlat
sahf
not
dec
popa
mov
dec
push
in
out
roll
bound
pop
cmp
mov
dec
cmp
xchg
inc
mov
sti
adc
sub
bound
push
in
inc
or
mov
test
insb
aad
in
xchg
mov
dec
dec
jno
xor
jo
adc
cmp
xor
jno
iret
xchg
and
push
addr16
mov
popf
test
push
and
sbb
sbb
inc
std
inc
inc
aaa
popa
rol
ljmp
ret
mov
insb
push
sbbl
das
pusha
outsl
pop
fcomps
push
mov
fs
xchg
xchg
mov
cmpsb
adc
push
idivb
jl
add
aam
icebp
xchg
pop
xchg
sub
cmpsb
fucomp
fstpt
sarb
and
pop
pop
ss
and
xchg
lds
cld
pushf
pop
pop
xchg
ds
scas
sarb
mov
sub
mov
pcmpeqw
adc
xchg
dec
fcomip
into
mov
add
mov
push
sbb
out
stos
fwait
gs
or
outsl
sti
cmpsb
dec
mov
shrb
test
inc
js
lcall
enter
in
outsb
bound
lcall
sbb
cmp
sub
fs
movsb
mov
lahf
mov
into
sbb
xchg
outsb
dec
outsb
adc
aas
cmc
cmp
lahf
xchg
sbb
adc
lcall
das
ud0
cmp
mov
lea
mov
dec
pop
xor
push
mov
lcall
mov
imul
mov
ret
cmpsl
sub
pop
jno
adc
sub
enter
add
or
xor
ljmp
adc
mov
ret
mov
cli
dec
add
out
cmpsb
bswap
test
sub
mov
xchg
and
js
sbb
pusha
push
mov
mov
int
adc
push
jge
cltd
xlat
dec
stc
push
lret
sahf
mov
fdivrs
add
cmp
clc
lahf
push
sbb
aas
ljmp
lahf
cmp
test
movsb
fcmovne
push
movl
xchg
xor
cs
xchg
mov
xor
add
movsl
lock
pop
push
pushf
push
ss
sub
movsb
cmc
xlat
jmp
fmuls
call
mov
aam
aam
dec
in
xor
sahf
xor
movsb
push
stc
subb
sahf
cmp
addr16
push
mov
pop
pop
inc
into
jle
ret
mov
inc
int
pop
push
inc
fbld
subl
xchg
iret
sub
cmp
and
mov
push
faddl
mov
ja
push
nop
xor
sub
test
mov
out
xchg
sub
inc
mov
testb
cmp
add
xor
lods
mov
pushf
cmp
xchg
pushf
sahf
push
outsl
imul
cwtl
aas
and
cli
lds
gs
lret
pop
push
shrb
ds
out
xchg
mov
xor
repz
xor
jge
andl
addr16
addr16
and
out
jge
mov
push
in
xchg
imul
jle
and
testl
sbb
mov
aas
repz
push
loop
orb
pop
mov
jo
xor
inc
ret
nop
jge
mov
jns
scas
cmp
out
or
jp
xchg
add
sarb
addr16
iret
xchg
adc
push
in
rorb
lret
push
xor
xchg
cld
pop
icebp
cwtl
dec
movsb
cmpsb
xor
cmp
les
lods
cwtl
in
std
mov
dec
adc
jle
mov
pop
adc
popa
push
fs
fwait
lds
mov
adc
push
xchg
push
push
lret
outsl
jg
gs
and
adc
aam
jns
insl
addr16
jle
int
sbb
jg
imul
sub
aas
cs
or
mul
mov
scas
mov
inc
call
mov
sub
jp
icebp
bnd
mov
imul
sbb
add
and
pusha
xchg
inc
mov
mov
mov
inc
sub
mov
jno
push
adc
dec
aas
xlat
cmpb
add
in
mov
dec
and
jae
mov
mov
xor
mov
cmpsb
in
lods
xlat
imul
lret
pop
mov
mov
sbb
pop
aaa
nop
fxch
push
insl
clc
sub
push
sahf
cmp
dec
insl
lods
push
push
scas
cld
sub
outsl
popf
clc
sub
movsl
and
int3
das
push
out
adc
dec
adc
insb
rcll
pop
mov
fstpl
push
popa
imul
sub
jno
in
cmp
sti
add
into
movsb
idiv
fadds
jmp
sti
add
dec
loopne
mov
cmp
dec
pop
loopne
mov
loopne
and
addr16
push
cmp
wbinvd
int3
cmp
mov
pusha
lds
lahf
inc
dec
fnstenv
cmp
test
adc
mov
stos
cmp
cmpsl
js
push
addl
and
mov
stc
sub
mov
rcl
fcomps
ret
loopne
pop
mov
sub
mov
scas
popf
ss
out
lea
push
xor
or
inc
mov
lret
out
repnz
pop
lahf
fwait
sub
movsb
jmp
sub
xor
scas
in
movsl
dec
mov
jns
scas
inc
int
mov
fwait
pop
lahf
rolb
sbbl
mov
in
jae
sub
sti
jl
rorb
popa
push
loopne
movsb
inc
jge
xchg
inc
add
mov
iret
xor
arpl
inc
push
call
and
nop
ret
repnz
push
cmp
mov
add
inc
loop
ds
stos
popf
loop
mov
jo
sarb
imul
and
popf
test
fld
ret
hlt
dec
in
mov
sub
aad
mul
sti
int
decb
je
dec
cmp
test
xchg
pop
imul
fdivrl
jno
mov
psubd
les
scas
pop
inc
pop
jg
iret
insb
and
fidivrs
daa
es
xchg
pop
jne
or
arpl
lods
xlat
jb
cmp
lods
mov
xchg
movl
push
inc
and
push
mov
movsl
in
jecxz
or
push
dec
mov
mov
jp
imul
insb
cli
pop
add
adc
pop
jno
push
jg
aad
mov
adc
lcall
pop
xchg
mov
lret
stos
imul
dec
js
xchg
dec
inc
xchg
cli
push
call
mov
mov
mov
add
test
fwait
rorl
pop
and
and
int
adc
fcoml
insb
fcmovnu
imul
or
sbb
icebp
xor
enter
jecxz
pop
xorb
cltd
popa
loop
xor
cli
sbb
loope
daa
ljmp
sbb
xchg
inc
add
inc
adc
mov
pop
jp
ret
adc
in
mov
ss
cmp
insl
js
fbld
addr16
cmp
push
repz
addr16
pop
push
out
repz
mov
and
pushf
mov
ds
ret
std
push
mov
sbb
xchg
xor
pop
jge
mov
xchg
add
imul
sbb
fs
push
iret
mov
pop
pushf
mov
loop
jbe
mov
cmpsl
fsubrs
mov
sti
cmovl
stos
mov
outsl
aaa
test
fsts
add
mov
neg
imul
xchg
and
push
cld
nop
jo
jb
pop
jecxz
into
in
jno
imul
pop
sarb
cmp
leave
jae
int
lret
out
aas
pop
scas
cmpsl
or
mov
jbe
and
inc
pop
mov
mov
add
insl
sbb
shr
mov
pop
push
cltd
cmp
xor
cmp
adc
add
lods
fnsave
jmp
adc
lahf
sti
das
mov
jg
mov
ficoms
jne
std
adc
shr
sub
lds
mov
sbb
mov
and
inc
pushl
or
jns
xor
cmp
dec
inc
lret
aas
mov
sub
xchg
mov
xor
push
mov
lods
fmuls
popf
mov
jecxz
push
sbb
in
shrl
mov
mov
xchg
lcall
inc
aaa
pop
in
cmp
push
jl
push
mov
je
ja
add
dec
sub
repz
xor
arpl
mov
sbb
sbb
xor
pop
repz
inc
sub
jmp
xchg
lods
dec
mov
mov
mov
test
dec
cmp
or
int3
pop
dec
sbb
insl
stos
cmc
sub
dec
popf
pop
popf
fucom
in
jp
pop
mov
sub
arpl
xor
jbe
mov
pop
inc
divb
dec
mov
dec
cwtl
pushf
cmpl
aaa
push
insl
mov
ficoml
mov
faddp
add
dec
sub
ret
and
pop
addr16
shrl
imull
dec
aad
xlat
xchg
int
mov
mov
js
mov
mov
out
xlat
push
jo
dec
mov
aas
in
or
mov
es
dec
lret
push
lds
shll
or
pusha
or
or
cmpl
inc
std
loop
dec
and
push
fisubrl
punpckhbw
and
xor
mov
mov
shrl
jns
or
xchg
sbb
dec
and
fisubs
xor
mov
scas
mov
clc
cwtl
inc
loop
rcrb
lods
aas
fcoml
aam
sbb
mov
jmp
jae
sub
repnz
les
sbb
lret
push
fistl
and
push
xor
mov
out
jno
mov
in
cmpsb
mov
cmp
pop
test
add
xchg
sbb
loope
mov
xchg
or
in
pop
sub
dec
rcl
in
out
int3
in
mov
mov
lock
jle
jge
mov
faddl
mov
std
cmpsb
adc
xchg
cmp
and
test
dec
add
mov
imul
and
push
loopne
shlb
movsl
mov
pusha
push
das
fisttps
jne
sub
sahf
cmc
adc
scas
mov
push
decb
or
add
inc
jmp
xchg
xlat
add
dec
js
adc
mov
aas
divb
fsubs
sub
daa
fimuls
shl
aad
fstl
int3
fildll
sbb
dec
push
addr16
cmpsl
in
std
jae
mov
push
jbe
repz
fcmovnb
inc
dec
xchg
xor
movsb
into
rcl
inc
push
pop
add
mov
leave
push
out
adc
mov
stos
repnz
je
jbe
es
out
cwtl
mov
cltd
add
sbb
clc
pop
ret
lcall
mov
xchg
imulb
sahf
xor
imul
adc
cmp
outsl
aad
or
and
iretw
mov
jg
sbb
sbb
or
push
mov
insl
movsb
xchg
insl
ss
js
jmp
fmulp
add
cli
xor
xchg
shlb
mov
lahf
repnz
dec
mov
sarb
xchg
mov
sbbl
sub
insb
add
clc
sbb
jl
push
jg
sbb
jo
add
jae
xor
push
leave
insl
pop
ss
cmpsl
testb
jmp
movb
mov
jbe
es
dec
cmpsl
dec
out
test
sbb
jl
jge
push
sbb
cs
sbb
push
cld
or
in
cs
push
loop
pop
dec
ffree
add
jmp
inc
cli
sub
jns
xchg
shrb
sbb
mov
mov
sub
push
mov
pop
js
cmpsb
sarb
inc
sbb
xchg
xor
dec
xor
cwtl
outsb
inc
dec
xorb
jge
arpl
push
insb
inc
rcrb
lahf
inc
add
les
movsl
dec
or
icebp
ror
mov
loopne
jb
xchg
fdivs
push
cmp
test
clc
jnp
test
out
imul
dec
hlt
inc
jp
cmc
ss
mov
mov
push
xchg
push
das
movsb
mov
jle
sahf
pop
adc
inc
jae
jmp
pop
leave
in
filds
adc
adc
mov
pop
push
daa
mov
mov
add
push
sub
loopne
cwtl
xor
scas
test
in
insb
mov
cmp
cs
nop
les
scas
pop
push
into
push
xor
rorb
mov
xchg
daa
pop
mov
std
ds
mov
fs
jecxz,pn
inc
stos
xor
sub
das
ret
test
pop
cmp
sub
fdivrl
faddl
in
cwtl
ja
pop
sbb
lods
leave
xchg
leave
lahf
sub
sti
xor
mov
sbb
pushf
sbb
inc
mov
cli
pop
fisttpl
mov
mov
or
or
jg
jmp
push
out
cmpb
mov
inc
sti
ret
xchg
aas
add
ret
ljmp
push
pop
cmp
stc
sbb
pop
ds
mov
shrl
repz
fiaddl
jmp
mov
mov
jns
xchg
add
or
arpl
in
push
sub
add
jb
add
mov
pushl
rorb
decl
hlt
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
jmp
mov
stos
arpl
jg
xchg
xchg
adc
mov
popa
bound
adcb
inc
mov
or
jg
inc
ror
shll
inc
jl
lea
inc
pop
xchg
outsb
pop
pop
dec
gs
dec
sbb
sub
dec
in
add
and
daa
loopne
inc
shlb
sub
outsl
in
or
hlt
xor
hlt
push
xchg
stc
jg
mov
aas
dec
mov
push
dec
xchg
inc
pusha
test
clc
jp
ds
cmp
pusha
jns
push
xchg
aam
lret
inc
xor
scas
addr16
and
mov
icebp
mov
dec
das
jl
mov
push
cs
addr16
ret
adc
xchg
pop
mov
fs
daa
adc
scas
lret
fidivrl
jo
faddl
push
pop
xchg
mov
add
cld
mov
jbe
les
ret
scas
aad
mov
cs
pop
lret
imul
jno
adc
ret
notb
or
mov
xchg
shll
and
movhlps
inc
dec
in
jbe
enter
pushf
nop
pop
shrb
mov
jo
loopne
pop
ja
cmp
mov
mov
aad
in
xor
adc
push
mov
adc
pop
add
incb
xor
sbb
loop
adc
and
mov
call
sub
cwtl
aad
je
sbb
jae
in
jo
inc
xlat
push
mov
out
out
mov
and
into
mov
sbb
stos
shrb
es
outsl
pop
iret
loopne
xor
push
pop
cmp
out
scas
fldenv
dec
add
mov
jmp
sahf
test
shrl
dec
fcoms
nop
jbe
sub
in
in
fmuls
mov
xchg
mov
js
add
cmp
push
mov
mov
and
push
inc
adc
sarb
hlt
dec
sub
clc
pop
mov
add
pop
jge
jbe
push
sti
int
sbb
clc
cld
mov
jb
mov
sti
cmp
ds
lods
and
lret
imul
sub
or
rorl
sbb
out
push
jae
inc
dec
rorl
xrelease
jb
repnz
scas
xor
enter
and
pop
pop
adc
inc
jecxz
js
bound
fildl
cltd
test
rolb
nop
xchg
repnz
mov
movsl
xchg
mov
ds
test
or
sbb
and
xchg
push
cld
daa
out
ret
jbe
cmp
aas
lret
jae
mov
push
xor
jne
cmp
cmp
push
bound
in
aam
in
and
add
cmp
jmp
out
xchg
mov
inc
or
pop
imul
arpl
nop
int
xor
xchg
mov
adc
in
imul
out
xor
xor
sbb
movsb
cmp
cmp
cmp
std
and
or
into
bound
mov
add
mov
aad
mov
dec
data16
dec
hlt
xor
repz
push
movsl
and
mov
inc
mov
sub
mov
mov
pop
sti
push
mov
cs
dec
jae
and
xor
pop
cmpb
add
mov
fdivr
pushl
sar
dec
mov
inc
jbe
inc
cmc
lods
mov
jnp
popa
xor
cmp
in
jo
add
mov
mov
mov
add
negl
inc
fwait
shll
add
inc
lea
mov
dec
or
repz
insb
push
xor
loop
inc
jb
xor
std
dec
xchg
or
stc
xor
lret
inc
or
and
pop
divl
add
mov
jo
mov
shlb
sub
cmpsb
data16
jno
cmp
push
sub
pop
and
xor
push
mov
stc
out
mov
scas
xor
or
jb
inc
jno
nop
int
lock
mov
cld
pusha
pop
jb
xor
cmp
dec
std
pusha
fcompl
mov
invd
sub
shlb
add
aas
bound
pop
pop
insl
in
jl
adc
mov
mull
fstp
daa
test
pop
stos
jmp
push
add
add
out
scas
xchg
or
inc
push
sub
lcall
jne
leave
jl
inc
add
fadd
xchg
inc
insb
icebp
xor
add
jp
pop
std
cmpsl
adc
sahf
and
mov
aas
aad
jbe
pusha
in
sbb
push
jecxz
push
jbe
mov
cmpb
push
and
out
daa
leave
jp
push
clc
add
dec
mov
push
movsb
add
fidivrs
sub
mov
ja
sahf
jno
shlb
push
mov
shll
outsl
inc
push
int3
xchg
inc
add
in
sub
pop
out
rorb
sbb
loope
lahf
push
add
cltd
insb
rcrl
mov
mov
call
lea
loop
cmp
mov
divb
push
pop
into
dec
dec
and
cwtl
mov
jnp
mov
pop
jae
rolb
lods
clc
pop
adc
test
xchg
repnz
push
shl
mov
inc
inc
inc
pusha
int
or
dec
gs
cltd
stc
fcomi
inc
pop
dec
mov
adc
xlat
sbb
shrb
jns
push
jmp
fdivr
jae
pop
scas
sub
fsubrs
mov
icebp
lods
mov
mov
xor
movsl
popa
xor
sahf
mov
clc
xchg
cmp
jle
cmp
aam
imul
std
ljmp
les
cli
lds
lret
pop
mov
jecxz
cmpl
pop
in
aaa
xchg
mov
aad
call
sub
mov
aam
ja
mov
clc
les
push
ficompl
cmpl
jecxz
outsl
inc
and
or
xor
aad
loope
popa
mov
mov
xchg
push
xchg
xchg
add
adc
dec
repz
fwait
ljmp
pop
mov
adc
add
xchg
inc
inc
cld
test
inc
push
icebp
jns
mov
or
shrl
xor
xchg
sub
int
pop
les
dec
bswap
fidivrl
rcl
and
ljmp
xchg
out
jb
xchg
hlt
daa
stc
sub
dec
xor
jle
xor
fiadds
pop
je
jge
mov
nop
jecxz
iret
sub
mov
mov
lds
and
ljmp
jecxz
fildll
ret
push
dec
int3
adc
fsubrp
adc
sub
aam
inc
cltd
dec
xchg
xchg
stos
jae
punpckhdq
ffreep
jne
xchg
add
fwait
test
jge
xchg
xchg
mov
and
mov
xor
mov
imul
jl
jg
int3
imul
bound
and
push
sub
fwait
cmpsb
std
xchg
cmp
mov
movsb
xchg
push
insl
dec
loopne
cwtl
test
jg
in
addr16
xchg
mov
or
lcall
insl
popf
adc
negb
popa
enter
push
sub
imul
mov
cli
mov
dec
jge
lcall
mov
mov
pop
fnsave
in
lock
xor
or
repz
mov
stos
icebp
fcomi
mov
mov
stc
and
cmpb
addr16
mov
mov
xchg
sbb
xchg
ret
mov
sbb
in
aaa
int3
cld
cmpsb
sub
pop
aam
testb
xabort
xor
lods
cmp
loope
xchg
outsl
xor
sbb
dec
loope,pt
and
sub
push
and
les
push
das
lods
das
loop
call
jp
sbb
imul
push
scas
mov
jnp
hlt
jne
xchg
lahf
xchg
xor
sub
pop
lods
clc
test
mov
bound
arpl
cmp
mov
sub
stos
mov
aas
cmpsb
add
stos
xor
in
loop
mov
imul
sub
mov
adc
js
ljmp
push
push
push
sbb
cmpsl
push
xchg
dec
or
sahf
outsl
push
mov
mov
out
jae
call
adc
loopne
jge
fldlg2
adc
test
pop
or
push
fimull
xchg
mov
movsb
clc
pop
inc
cmp
shl
lods
iret
subl
lahf
mov
and
pop
push
imulb
ds
push
cmpsb
test
dec
jbe
xor
fstps
mov
cmpsl
ret
mov
sbb
cld
pop
cmpsb
insl
adc
add
fistpll
rolb
pusha
shlb
ja
ja
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
push
mov
push
mov
xor
movl
mov
sbbl
mov
addl
add
xorl
xor
movl
cmp
movl
jne
mov
mov
or
mov
add
mov
adc
mov
mov
xor
adc
push
addl
mov
xor
xor
xor
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
subl
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
pushl
pushl
pushl
call
jmp
movl
movl
dec
mov
add
push
mov
adc
mov
sbbl
xor
sbbl
xor
subl
mov
sbbl
add
movl
add
incl
imul
mov
movl
cmp
jne
and
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
insl
push
push
jo
addr16
pop
inc
push
jb
inc
je
gs
dec
js
inc
js
arpl
inc
push
jno
push
inc
inc
add
inc
inc
add
or
dec
xchg
dec
scas
dec
ds
js
cmp
dec
inc
dec
jae
inc
dec
xor
dec
pop
pop
pop
push
cmp
dec
xor
dec
cmp
dec
js
cmp
dec
inc
dec
mov
dec
xor
dec
pop
insl
pop
bound
dec
jns
xor
dec
cmp
dec
mov
dec
inc
dec
pop
jge
jb
subb
xchg
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
lea
outsl
xchg
outsb
xchg
jle
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
popf
pop
xchg
outsl
mov
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
lods
pop
mov
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lahf
dec
cmp
dec
inc
dec
pop
mov
outsb
ret
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lods
dec
cmp
dec
inc
dec
pop
int
ret
outsb
sarl
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
fstpl
outsl
loop
jecxz
repz
aas
dec
lea
dec
lahf
dec
cmp
dec
xor
dec
pop
in
pop
loop
repnz
repz
jns
jle
jns
cmp
jg
xor
dec
xor
dec
cmp
lods
dec
cmp
dec
inc
dec
pop
or
outsb
adc
jns
aas
dec
add
jp
inc
add
inc
add
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
add
inc
add
inc
inc
add
test
pushf
clc
jb
inc
add
inc
inc
add
inc
add
inc
add
inc
add
ds
add
inc
inc
add
inc
inc
add
or
cmpl
push
orl
add
cmp
ds
push
inc
imul
in
incb
aas
cli
mov
add
xchg
pushf
clc
mov
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
ljmp
add
add
jbe
mov
pushf
clc
sbb
push
pop
in
add
push
inc
add
or
jl
inc
add
jne
je
jns
jb
addr16
imul
add
addr16
addr16
pushw
push
jle
inc
add
dec
cmpsb
dec
lahf
dec
movsb
dec
insl
dec
bound
dec
add
cltd
dec
pushf
dec
fwait
dec
insl
dec
bound
dec
scas
dec
lods
dec
lahf
dec
mov
dec
xor
add
dec
test
dec
fwait
dec
xor
add
add
mov
mov
mov
mov
mov
mov
mov
jae
jo
jno
jbe
ja
je
jne
mov
mov
lods
jge
jge
jns
mov
insl
enter
jb
test
hlt
test
test
fnstenv
mov
push
or
xlat
out
add
scas
adc
jge
fidivs
leave
hlt
cmpsb
cmp
mov
cmpsb
and
and
add
add
cmc
enter
push
inc
add
jp
pop
inc
inc
add
inc
inc
add
in
adc
pop
inc
inc
outsb
popa
imul
jne
dec
je
bound
dec
bound
inc
push
push
ja
jp
push
arpl
dec
dec
data16
imul
add
add
push
imul
push
je
push
jbe
jo
dec
dec
pop
jp
jbe
pop
jo
push
jbe
ja
js
jno
inc
inc
inc
push
dec
insb
dec
jbe
pop
jbe
add
jae
dec
gs
insb
jp
add
fs
push
inc
inc
outsb
imul
push
push
push
pop
outsl
push
dec
je
jo
add
inc
dec
outsl
pop
inc
jb
jns
inc
pop
add
dec
dec
dec
inc
jno
jae
push
arpl
add
bound
dec
ja
dec
inc
inc
push
push
add
outsb
dec
jno
jbe
insb
inc
push
add
add
add
add
jbe
imul
insl
je
insb
jae
inc
insl
je
push
push
addr16
jo
js
pop
dec
push
dec
jns
js
outsb
pop
jae
push
arpl
push
push
je
addr16
dec
inc
insl
inc
inc
inc
arpl
push
inc
popa
push
dec
imul
push
push
imul
dec
jns
push
inc
jo
imul
fs
inc
add
inc
add
rolb
or
inc
add
rolb
adc
inc
add
rolb
sbb
inc
add
cmp
inc
aaa
dec
ss
xor
dec
add
xor
dec
inc
dec
xor
dec
xor
dec
inc
xor
dec
pop
xor
dec
pop
xor
pop
inc
push
aaa
xor
pop
cmp
xor
aaa
push
xor
pop
add
push
xor
dec
inc
add
xor
xor
inc
dec
cmp
xor
pop
pop
push
add
cmp
xor
add
dec
pop
push
inc
xor
inc
push
xor
dec
inc
xor
xor
push
cmp
pop
xor
aaa
pop
xor
push
add
push
pop
xor
inc
inc
ss
inc
dec
add
dec
pop
push
cmp
inc
add
pop
xor
pop
cmp
inc
dec
add
xor
pop
dec
inc
push
pop
push
add
dec
pop
xor
pop
push
inc
inc
dec
add
push
pop
inc
pop
xor
inc
dec
xor
push
xor
ss
xor
inc
pop
push
push
inc
pop
xor
add
dec
pop
inc
inc
push
dec
push
add
dec
pop
ss
xor
add
xor
add
dec
add
inc
add
add
push
add
add
pop
add
xor
dec
add
add
pop
add
add
add
dec
add
push
add
inc
add
xor
pop
add
push
add
pop
add
xor
inc
add
add
cmp
push
add
add
push
add
inc
add
add
pop
add
push
add
add
add
pop
add
add
add
push
add
dec
add
inc
add
add
add
add
add
push
add
add
add
dec
add
xor
xor
add
pop
add
add
add
pop
add
dec
add
add
add
dec
add
add
xor
add
inc
add
inc
add
add
push
add
add
pop
add
add
add
add
aaa
add
add
push
add
add
pop
add
push
add
pop
add
add
add
add
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
