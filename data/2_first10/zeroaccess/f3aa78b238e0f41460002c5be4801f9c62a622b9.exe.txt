push
mov
jmp
cwtl
jb
inc
pop
pop
cltd
lret
inc
scas
dec
inc
mov
jle
jno
jle
xor
xor
ja
or
test
cmp
int3
adc
sbb
mov
or
rorl
out
mov
or
dec
sbb
loopne
add
mov
xor
jbe
fisttpl
jecxz
and
xchg
dec
incl
mov
loope
pop
sub
jae
lret
lcall
mov
loop
cmp
sub
or
sbb
outsl
insl
je
cmp
jns
popl
shll
movb
sahf
mov
daa
sbb
addr16
in
test
cld
int3
cmp
jb
inc
or
dec
mov
mov
daa
pop
sub
mov
mov
test
loopne
and
inc
push
pop
fdivl
cmp
sub
ds
icebp
mov
popa
xchg
pmulhw
sbb
adc
std
pop
in
jae
mov
lock
mov
pop
jecxz
aas
mov
cmp
enter
inc
pop
xchg
mov
jnp
loop
xchg
sub
dec
mov
adc
sti
cmp
leave
pop
std
inc
mov
test
mov
push
xor
pop
lcall
lods
loop
sub
mov
repnz
sarb
push
push
push
adc
je
mov
clc
xchg
pop
xlat
inc
jnp
xchg
and
cltd
lret
fldt
cmp
les
cmpsb
sub
jns
inc
xchg
push
pop
mov
cmp
cld
jno
xchg
mov
mov
mov
xchg
sahf
out
jnp
test
push
inc
mov
push
or
das
inc
int
movsl
mov
jmp
mov
dec
fistps
push
lret
pop
idivb
addr16
mov
sbb
ss
insl
inc
mov
mov
pop
rcrb
repz
cltd
fmul
call
ja
inc
cmpsl
cmpsb
pop
outsl
fadds
mov
aaa
xor
mov
out
js
push
movsb
outsb
xchg
fstpt
sbb
adc
ja
lods
cmp
icebp
cmpsl
push
enter
add
jae
in
push
inc
loop
sbb
push
mov
sub
mov
sti
add
sbb
orb
loope
es
mov
push
xchg
jbe
cmc
mov
sbb
sarl
insl
adc
jb
stos
xor
hlt
sub
add
xor
mov
rolb
les
sub
aad
sbb
adc
jbe
loope
paddsb
rorl
mov
out
negb
test
push
icebp
in
inc
sbb
push
adc
sbb
push
loop
leave
lods
xchg
sarb
movsl
mov
repnz
pop
popf
clc
adc
jo
std
mov
mov
add
jle
mov
jbe
es
inc
enter
jp,pt
fcmovbe
test
loope
mov
cltd
popa
in
ds
sub
xor
xor
cltd
mov
movsl
pop
aas
shr
adc
je
jo
xlat
fs
sub
pop
mov
mov
dec
mov
repz
movsb
push
and
lahf
jne
xor
mov
lods
jge
sub
movl
sbb
movl
sub
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
sub
lea
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
and
mov
jmp
sub
ljmp
jmp
or
jno
jle
and
jmp
in
mov
ss
imull
mov
pop
outsl
icebp
lods
jp
push
sbb
push
cs
mov
adc
push
push
lret
sbb
mov
xlat
and
cmp
xorb
nop
cmc
fistl
test
fidivs
mov
andl
ds
scas
or
jg
xchg
mov
xor
stos
popf
ds
pusha
and
mov
stc
or
adc
add
push
add
dec
leave
push
scas
lds
ret
fcmovne
rclb
mov
mov
mov
dec
test
and
fisttpl
lcall
mull
ljmp
pop
mov
mov
or
daa
mov
push
mov
add
rolb
jns
dec
pop
sbb
inc
enter
inc
inc
fcmovnb
mov
mov
movsl
fidivs
lods
push
and
push
lcall
and
inc
test
xor
or
jbe
mov
mov
add
jmp
adc
out
pop
mov
fcoml
mov
cmc
int3
cs
pop
lahf
ljmp
mov
add
mov
fdivrl
int
je
sub
dec
sahf
sbb
mov
pop
movsl
movsl
jge
xchg
cs
call
lods
push
adc
xor
jecxz
pop
mov
push
mov
movsb
inc
push
xor
sahf
fs
jbe
outsb
mov
fcompp
sub
cmp
loope
dec
clc
add
outsb
hlt
out
xchg
bound
nop
ret
shll
dec
arpl
sub
lock
in
cs
inc
pop
xor
daa
or
loop
ss
mov
test
aas
and
popf
outsb
push
out
mov
xor
mov
push
mov
lods
popf
pop
xor
shufps
stos
add
repnz
pop
in
push
jle
cmpsb
jge
fidivrs
andb
pop
mov
mov
int
out
lahf
sbb
add
mov
or
in
mov
mov
pop
lahf
jp
sub
jbe
fcomps
icebp
pop
xor
or
testb
rcrb
movsb
sub
stc
arpl
jb
jecxz
mov
arpl
dec
pop
or
adc
fistpl
adc
imul
inc
mov
or
jbe
mov
pop
std
pusha
jp
mov
adc
dec
adc
fs
ja
or
cmpsb
into
pushaw
int
sub
jnp
push
dec
or
lret
lods
push
mov
sub
fdivl
jbe
or
lahf
push
push
call
imul
leave
and
test
pop
daa
pop
stos
pop
vpminsw
popf
sti
sub
stos
out
mov
sarb
ss
aas
push
sbb
jp
enter
scas
mov
stos
mov
sti
in
lret
shll
bound
add
sbb
stc
orl
adc
iret
faddl
xchg
enter
cmpsb
movsl
leave
inc
aas
sub
adc
data16
inc
pop
cmp
loopne
sbb
push
lea
xor
mov
mov
xor
push
sbb
push
adc
mov
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
addl
mov
or
mov
mov
xor
mov
sbbl
xor
xor
xorl
add
add
sbbl
jmp
ret
imul
mov
cmc
lret
push
jne
jle
jno
jle
lret
out
add
data16
repz
popf
ds
icebp
fidivrs
mov
push
jecxz
cmp
into
mov
addr16
cmpsb
inc
adc
fcmovb
popf
sbb
ljmp
popa
lcall
sbb
test
sub
xor
test
daa
subl
rcr
imul
push
js
cmp
jae
jmp
mov
insl
cmc
jl
pop
popl
push
pop
xchg
push
lcall
cmpsb
xchg
push
xchg
sarb
jae
dec
fs
loopne
je
fcmovne
push
or
push
and
push
pop
pop
sbb
into
add
mov
gs
call
add
jne
clc
dec
pusha
sub
mov
dec
aaa
aaa
cwtl
xchg
mov
push
popf
xor
fs
lcall
cltd
shrb
orb
mov
fldcw
xchg
fdivl
xchg
cltd
arpl
mov
decb
aad
mov
enter
add
mov
pushf
fists
shll
pusha
test
imul
cmp
outsl
scas
mov
xor
mov
stc
xor
ret
xor
inc
sbb
pop
mov
mov
sbb
lret
dec
dec
mov
sbb
add
push
sub
add
rol
popa
xor
xor
mov
xor
jmp
popa
mov
sub
push
rolb
xchg
mov
in
lock
xchg
cmp
or
push
or
incl
aas
ficomps
lahf
aaa
sbb
call
aas
int3
cmp
cmp
sbb
enter
push
jns
iret
sbb
cs
aad
insl
cmp
ljmp
push
pushf
test
testb
sbb
mov
outsb
ret
cmp
cmc
cmp
daa
jno
in
je
inc
jb
sub
insl
sarb
xor
pop
and
loope
cmpsl
in
fisttpl
cmc
jns
xor
test
mov
pop
pop
jg
adc
xor
inc
mov
pop
into
mov
cld
je
arpl
popf
pop
aaa
jne
lea
mov
add
mov
mov
and
sbb
inc
stc
mov
stos
sbb
jae
fstps
sahf
lret
lahf
into
xor
fstps
repz
mov
repnz
xchg
pop
lock
inc
jb
dec
cmpsl
test
mov
mov
add
add
jne
adc
mov
mov
popf
jo
je
or
into
push
pop
add
sbb
or
iret
pop
scas
dec
in
mov
cmovns
jno
insl
adc
inc
push
ret
cmpsl
andb
ss
shrb
shrl
testl
sbb
mov
and
mov
cld
jno
cltd
push
scas
jge
mov
int3
mov
std
jmp
cmp
add
aad
flds
movsl
fsubrs
das
xor
icebp
ljmp
xor
into
flds
pushf
jbe
jne
loopne
push
lret
scas
cmp
inc
inc
push
xchg
stc
sbb
sti
daa
jge
xchg
push
ror
lret
pop
div
movl
jmp
pop
nop
jl
jge
and
jns
pop
stos
sarb
jno
jle
jb
icebp
inc
mov
mov
pop
cmp
and
add
adc
dec
das
push
and
sub
popa
or
cmp
inc
jle
pop
outsb
cmp
int3
shlb
pop
mov
repnz
cwtl
rcll
xchg
pop
mov
sbb
imul
pop
rolb
aad
cmpsb
movsl
sub
loopne
dec
pop
sbb
leave
or
fs
clc
and
sub
and
add
mov
jno
enter
rep
imul
xor
pop
inc
out
popf
test
out
sbb
cltd
push
sbb
mov
sbb
push
or
cwtl
lahf
push
aaa
mov
mov
or
popaw
add
jg
subl
js
popa
and
push
hlt
mov
lcall
cmp
adc
ret
push
bound
jne
and
sbb
gs
xchg
outsl
and
xchg
mov
jp
call
js
dec
lahf
arpl
imulb
inc
add
shufps
push
movsl
in
test
out
outsl
loopne
int
cmpsl
shll
js
data16
scas
cmp
push
xor
mull
sub
inc
mov
pushf
fldt
xor
mov
stc
cwtl
jae
add
rorl
test
mov
jl
addb
out
bound
inc
das
inc
and
inc
push
add
out
repnz
add
cmp
xchg
shrd
les
xchg
mov
sbb
push
into
xorl
xor
ret
sub
jno
cmpsl
fsubs
sbb
enter
xchg
cmp
out
adc
lcall
jnp
mov
adc
push
lods
mov
sbb
popa
jne
jge
pop
add
xor
cltd
push
cmpsb
sub
cmp
sub
rorl
cs
cmp
test
mov
arpl
pop
pop
bound
sub
pop
out
and
mov
insl
mov
test
dec
pop
fisttpll
movq
in
cmp
ret
xchg
jo
inc
lock
sub
jb
faddl
mov
and
shll
inc
mov
adc
cmpsb
inc
push
pop
testb
into
stos
call
add
adc
popf
or
repz
adc
xchg
dec
push
lcall
js
pop
outsb
cmpl
jo
xchg
or
clc
xchg
sbb
in
push
inc
push
fdivs
inc
scas
stos
mov
xchg
and
sub
mov
or
subb
fsubrs
xor
ss
loopne
add
mov
or
add
decl
pop
and
dec
jno
xchg
or
push
pushf
add
or
loopne
adc
dec
xor
fptan
shrl
xor
pusha
cmpsl
push
test
sub
and
mov
adc
je
pop
fs
adc
out
stos
inc
mov
xchg
add
lock
pop
insl
icebp
dec
lock
xor
mov
push
das
lcall
sub
je
lret
xchg
outsl
jno
push
loopne
inc
aam
dec
add
movl
cmp
movl
je
movl
sub
lea
mov
sub
mov
not
jmp
inc
test
xchg
mov
rorb
into
or
jle
jno
jle
pop
ret
and
int3
cmp
enter
mov
lods
jne
mov
cltd
ljmp
xor
push
and
fcomps
jecxz
out
insl
leave
mov
mov
pop
jb
mull
inc
jl
dec
idivl
popf
mov
push
fsubrs
lea
aad
rclb
xchg
dec
in
lret
cmpsb
sub
cmp
rolb
insl
icebp
rorl
fldt
ja
inc
jne
adc
xchg
movsb
adc
mul
cltd
leave
sub
xchg
lcall
dec
jnp
push
icebp
rcl
mov
xchg
xchg
push
add
xchg
pop
rorb
aad
popa
push
cmp
daa
iret
sub
mov
shll
mov
dec
jmp
lea
pushw
mov
adc
gs
mov
mov
in
aaa
fisttpl
leave
or
pop
adcb
xor
data16
pop
jno
subl
xor
dec
movsb
icebp
pop
jg
es
pop
pop
jp
aas
dec
mov
dec
cld
mull
sub
data16
adc
cmp
cmp
pop
div
inc
xorl
push
xor
xchg
sub
pusha
sbb
test
lahf
dec
insb
mov
repz
jmp
cmpb
pushf
fidivl
mov
cmpsb
and
rorl
jbe
adc
pop
push
adc
sub
enter
and
push
pop
inc
fsub
and
sbbl
fldt
push
std
ret
in
mulb
lods
ret
inc
psubb
fstpt
sbb
je
mov
int3
out
lods
inc
outsb
xchg
mov
jmp
and
cmpsl
test
out
and
mov
add
or
mov
outsl
mov
mov
cs
and
jp
repnz
shlb
and
fs
sbb
sub
jne
movsb
mov
mov
rorb
rclb
sbb
rcrl
xor
adc
je
dec
push
dec
lret
imul
ss
mov
in
ds
jo
jge
nop
mov
rclb
test
xchg
jp
sbb
add
jns
cmp
mov
mov
or
mov
daa
fs
scas
repnz
xchg
stc
popf
call
sbb
mov
aam
subb
adc
insb
outsb
xchg
and
xor
bound
enter
dec
mov
xor
inc
cmp
aad
shr
dec
dec
cmp
repnz
mov
and
cmp
arpl
ljmp
movl
mov
cmpb
rclb
xchg
mov
nop
loopne
jle
rorb
gs
in
add
int
shrb
fs
adc
popf
mov
pop
dec
xlat
inc
test
scas
outsb
sbb
push
out
xor
jp
jg
fimull
repz
pop
leave
mov
or
dec
dec
icebp
adc
and
ds
mov
mov
sbb
push
jnp
call
dec
lcall
xor
shll
cltd
sbb
push
out
push
push
inc
stc
ret
mov
imul
movl
mov
movl
mov
cmp
movl
je
and
mov
jmp
inc
xchg
ljmp
dec
xchg
jnp
nop
fists
jle
xorb
lcall
scas
mov
dec
fs
jmp
andb
repz
jl
mov
popa
ficoms
xchg
hlt
jb
daa
add
push
jne
mov
mov
jbe
xor
or
inc
push
insl
sub
mov
pop
popf
and
std
xchg
push
repnz
mov
cld
jp
jmp
ss
test
int3
mov
sbb
movnti
jne
and
mov
lret
push
add
lret
cmp
jo
push
push
js
sub
cwtl
jo
loop
pop
mov
adc
mov
jnp
push
rep
rcrb
mov
and
xor
mov
loopne
js
iret
xorb
jne
jp
push
sarb
mov
les
outsb
dec
dec
sbb
xor
jle
mov
out
or
ljmp
add
sub
fs
test
xchg
jne
sti
pop
out
enter
adc
shll
out
sub
daa
or
add
loop
add
js
or
pop
mov
inc
push
shll
arpl
lret
pusha
pcmpeqb
shlb
mov
sub
pop
bound
xchg
out
shrl
dec
pop
jmp
jmp
int
aas
jb
out
add
cmc
mov
mov
mov
repz
std
pop
and
mov
in
mov
xchg
call
sub
and
hlt
push
adc
push
jmp
pop
inc
gs
add
shrl
mov
mov
mov
lahf
pop
inc
movsl
mov
push
add
jbe
out
dec
idivl
pusha
pusha
fnsave
xor
xchg
push
adc
jg
into
in
jae
popa
fnstcw
jae
pushl
and
clc
cmp
mov
mov
mov
in
fcoml
and
js
dec
subl
dec
lods
mov
cld
push
das
push
xorb
ret
in
or
mov
add
sarb
scas
imul
and
push
jge
jle
add
xor
pop
in
cwtl
std
stos
in
lahf
ret
ret
cmp
sti
jp
dec
pop
fadd
xor
mov
jae
scas
int
loop
cld
in
loope
leave
outsl
daa
xchg
jp
jns
dec
adc
add
mov
adc
pushf
add
loopne
mov
mov
adc
icebp
mov
add
add
pop
or
mov
in
data16
int3
lods
mov
ds
int
addb
sub
push
xor
jo
jmp
fmul
out
jno
repz
and
fiadds
pop
sbb
inc
inc
jle
shlb
scas
mov
mov
push
sub
insb
leave
jno
insb
mul
xor
out
dec
out
push
sub
dec
loop
xchg
xchg
in
push
mov
pop
mov
je
jg
jns
outsl
iret
loop
pop
or
jge
nop
int3
ss
popa
mov
xchg
push
mov
dec
in
in
ret
test
adc
cmp
mov
pop
testb
mov
jmp
inc
pop
sub
ret
and
or
mov
xchg
stc
or
orl
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
jmp
clc
inc
adc
xchg
jge
pop
movsl
pop
dec
push
mov
add
xorb
je
bnd
mov
add
dec
in
fsubs
jle
dec
dec
loope
mov
aaa
negl
mov
push
fwait
sub
sub
inc
xlat
xor
mov
lock
dec
andb
xchg
cltd
mov
pop
push
popf
inc
xchg
jb
sub
outsb
stos
and
faddl
mov
add
adc
scas
add
push
movsb
fdivrs
clc
lods
and
pop
aas
dec
jp
mov
add
xor
scas
and
imul
stos
jg
je
dec
movsl
mov
iret
fsubl
add
aam
mov
lahf
les
dec
lea
iret
jnp
fs
cmp
pop
mov
xor
lods
imul
test
lods
hlt
push
sub
lahf
mov
dec
dec
or
push
jb
popa
dec
ds
pop
mov
mov
out
mov
mov
xchg
pop
sub
aam
sbb
cli
and
push
mov
pop
sub
insl
insl
daa
fistl
or
stos
sahf
nop
jb
out
out
sbb
std
push
loope
ret
mov
jo
mov
loope
jbe
adc
in
or
in
or
out
push
bound
push
push
adc
ja
mov
cmc
je
pop
push
jnp
adc
xchg
pop
dec
ss
xchg
es
ret
jo
xor
inc
push
mov
and
cmp
xchg
cmpsb
adc
out
and
fcmovnu
mov
or
test
xchg
mov
push
imul
rclb
jnp
push
enter
negl
or
push
sub
pop
fisttpll
pop
fisubrl
sbb
sub
jne
sti
push
outsb
js
roll
sbb
lock
outsb
rolb
lcall
cmc
jecxz
sub
movsl
sub
in
les
lahf
imul
xchg
in
lahf
xchg
jne
lret
out
mov
call
shlb
fcomi
dec
inc
xchg
sub
add
mov
loop
or
jge
cmpsb
gs
lcall
xchg
cs
mov
cmp
in
movb
pop
mov
inc
lea
mov
int
pop
call
pusha
fdivs
xchg
sbb
jge
add
bound
popa
gs
push
push
data16
adc
in
push
pop
int
les
push
lea
lret
mov
or
add
and
iret
out
mov
fnstenv
fdivr
jo
mov
call
dec
push
ja
adc
repnz
or
dec
jb
sahf
sbb
stos
mov
pop
hlt
mov
ret
xchg
fnstcw
icebp
lret
sub
into
imul
std
dec
add
cwtl
notl
pusha
push
sbb
pop
cmp
clc
enter
gs
sub
movsl
aam
sahf
popa
fmuls
or
rclb
negb
int
aad
ss
xchg
xor
push
jl
sbbb
sbbl
fwait
and
cmpsl
xor
fwait
je
fimuls
add
and
fsubrl
bound
es
xchg
push
es
lahf
dec
sub
scas
or
pop
or
xor
out
mov
out
in
add
sub
popf
sbb
add
lret
decl
call
sub
mov
inc
lock
jmp
jmp
adc
repnz
mov
test
inc
je
push
leave
or
jle
xorb
loop
inc
push
outsb
cmpsb
insl
xchg
sbb
hlt
and
iret
inc
mov
negl
popf
mov
push
jecxz
outsl
jno
inc
stos
sub
shlb
call
and
loopne
cli
stos
subl
lds
hlt
roll
jb
lret
cmpsb
push
dec
shll
cmp
jle,pt
fbstp
lods
sbb
mov
hlt
int3
push
clc
and
call
sub
daa
push
ds
cwtl
pop
out
or
call
pushf
stos
cmpsl
sbb
jg
js
ret
leave
out
xor
sub
xchg
push
insl
jb
mov
fidivrs
daa
fsubl
mov
dec
or
scas
aam
es
cmp
push
ss
mov
aas
aaa
cmpsl
fcoms
sub
inc
jp
ret
push
dec
lds
mov
push
jl
pop
sbb
xchg
add
bound
sbb
mov
sarl
jecxz
sub
xchg
mov
dec
push
repz
cmpsl
iret
push
nop
cmp
inc
arpl
pop
js
int3
mov
sub
lods
loope
jno
movsl
inc
shll
addl
jl
or
adc
dec
mov
in
je
test
arpl
sub
adc
in
add
adc
sbb
dec
inc
sub
jne
int3
pushf
fwait
pop
pop
arpl
pop
cli
push
and
sub
dec
sar
or
pop
adc
sbb
and
js
inc
aas
pop
sarb
mov
lea
arpl
jne
dec
je
add
mov
mov
or
shr
sub
mov
push
cwtl
loop
inc
aad
xchg
cmpsb
xor
repz
loopne
push
jg
nop
jl
fistpl
or
mov
sbb
inc
aaa
lea
push
pop
push
into
adc
daa
mov
notl
inc
cltd
fimuls
pop
mov
xchg
imul
pop
leave
scas
sar
das
adc
add
scas
mov
pop
leave
imul
adc
jmp
fcomps
inc
bound
ja
mov
sbb
test
xor
xor
aas
inc
and
xchg
pop
inc
jb
inc
aam
ret
imul
xchg
add
cld
in
out
jmp
out
inc
mov
cmp
fnstsw
scas
into
aas
in
aam
int3
fwait
insb
rcl
xor
push
xchg
xchg
sti
pusha
push
pop
lret
mov
stos
in
mov
imul
push
jecxz
dec
mov
mov
js
stos
mov
std
mov
push
push
or
cmp
mov
loop
inc
or
push
inc
lds
das
cld
cmp
and
bnd
es
xchg
insb
loope
out
xchg
pop
nop
popf
dec
lea
repz
fimull
add
push
xchg
sub
adc
mov
daa
je
cmpsb
push
out
out
rcll
icebp
decb
sbb
repnz
pop
call
ja
imul
sbb
mov
inc
daa
adc
push
dec
jb
fmul
mov
mov
call
js
sbb
divb
dec
stos
in
stc
mov
dec
mov
jmp
jl
sub
jge
jge
inc
sbb
fldt
sbb
xorb
ret
or
and
mov
ret
lods
mov
or
cltd
adc
int
cs
dec
jle
sub
sub
test
stc
lret
cld
cmp
sub
xchg
lock
mov
push
cmp
cmp
in
popa
jne
pop
xor
into
shr
test
mov
out
sahf
add
mov
popf
ret
push
lcall
js
sub
jmp
es
jnp
mov
xor
fcmovnu
addr16
shlb
aam
sbb
inc
sbb
imul
rcll
insb
cld
out
push
sub
addr16
movsl
xchg
loopne
fs
dec
enter
push
xchg
and
mov
and
addr16
jge
cwtl
scas
dec
mov
push
sbb
rcrl
icebp
jae
sbb
int3
jmp
sbb
repnz
rorl
inc
push
decb
lea
cmp
add
xchg
lret
ds
dec
popf
nop
pop
dec
test
dec
mov
jne
mov
or
subl
in
mov
mov
and
sbb
aam
int3
pushf
dec
xchg
aam
mov
push
cltd
jge
aas
sub
xchg
pop
mov
loopne
add
lds
in
jno
pop
imul
pop
movsb
jo
clc
sarl
cmp
and
sub
mov
inc
or
mov
fdivrp
or
fldcw
pop
pop
cld
scas
jo
andl
cmc
and
popa
ja
fildl
mov
mov
jnp
fs
ds
lea
psubw
mul
lods
jae
push
push
cmp
addr16
adc
mov
add
sti
add
loope
imul
pop
mov
xchg
cmp
subb
arpl
mov
out
xor
xor
int3
in
add
add
insl
into
inc
or
loop
jl
pop
xor
in
pop
repnz
add
std
mov
jp
sub
out
pop
jge
mov
fcomps
pop
lret
dec
cmpsb
xchg
or
xchg
inc
test
andl
fwait
sbb
outsl
imul
push
add
js
push
adc
test
jl
or
mov
das
inc
lock
mov
and
fcmovne
jmp
mov
insl
iret
test
mov
data16
inc
mov
mov
stc
sub
jno
enter
lret
movsl
addr16
push
shlb
stos
dec
xor
jne
xor
pop
pop
add
mov
xor
adc
xor
push
xchg
dec
popa
pop
adcl
inc
push
aad
cmp
scas
fsubrp
push
aas
or
rcrb
mov
jmp
dec
xor
aad
lret
aas
or
ss
out
xchg
push
aad
pop
mov
outsb
sub
cwtl
stos
stc
push
pop
push
iret
insl
inc
jne
icebp
fdivl
lcall
lret
xor
sbb
push
rclb
scas
jns
push
sub
pop
aaa
xor
pop
icebp
pop
femms
add
mov
cwtl
test
sarl
add
and
xorb
mov
mov
jns
cmc
rorl
lods
fistl
aas
mov
xor
jmp
nop
cltd
fstl
xlat
push
mov
lods
mov
xorb
popf
int
sub
pop
or
scas
push
xor
das
ljmp
xor
push
or
jbe
mov
aas
pop
xchg
xchg
fmull
mov
hlt
pop
sub
inc
push
jg
push
or
cmpsl
jns
pop
inc
or
mov
repnz
nop
imulb
enter
or
lcall
jo
lahf
ljmp
cmc
mov
and
ret
ja
mov
xor
out
ds
add
loop
loopne
aas
rol
push
std
xchg
sub
orb
outsb
cmc
xor
cld
add
push
xchg
insb
ret
insb
addr16
movsb
sahf
sbb
cli
test
fwait
std
dec
inc
leave
mov
sub
jnp
mov
inc
clc
shl
inc
lahf
xchg
dec
fldl
je
xchg
push
std
out
lds
cmc
sbb
adc
or
add
mov
mov
add
sti
stos
push
clc
subl
cwtl
rorb
jns
adc
stc
out
shrl
sbb
adc
mov
leave
jns
shll
mov
lret
cmp
rcl
jmp
lods
add
test
in
pop
mov
outsl
jbe
stc
sbb
add
fdiv
push
inc
pop
lds
cmpsl
or
push
gs
loop
add
sbb
mov
leave
imul
mov
icebp
neg
add
stos
fsubrl
lret
fs
xchg
mov
jecxz
adc
rorl
scas
sahf
fs
cmpsl
push
ds
repnz
divb
mov
dec
adc
pusha
movsl
and
jmp
cs
mov
out
aam
jb
sub
stc
add
mov
xorl
dec
jns
xlat
imul
push
jnp
inc
aad
ret
fld
roll
out
pop
adc
adc
cmp
sbbl
push
cli
rclb
mov
inc
xchg
leave
mov
pop
movsb
xor
inc
pop
and
ljmp
out
inc
cli
stc
xor
sarb
loopne
ja
adc
inc
shl
icebp
push
jae
jp
push
iret
jno
mov
lock
aam
movsl
pop
in
repnz
xchg
cmpsl
jp
jmp
cld
xchg
push
rolb
and
loop
imul
sbb
pusha
ljmp
push
je
mov
xor
ret
dec
mov
inc
call
push
push
inc
mov
loop
and
inc
sbb
setne
push
jmp
cmpsb
pop
xor
jnp
in
push
jnp
add
out
lods
leave
mov
les
xchg
std
add
push
leave
lods
movsb
sbb
or
fwait
cltd
jle
push
imul
pop
pop
mov
xchg
lcall
out
pop
push
push
inc
mov
icebp
ss
or
out
adc
fwait
jl
sbb
cs
add
mov
out
push
xlat
in
stos
test
insb
push
mov
in
cmpsl
mov
mov
pop
loope
testl
pop
cwtl
pop
dec
cmp
icebp
push
scas
leave
aad
sub
xchg
js
or
iret
lret
pop
and
or
daa
push
adc
hlt
sbb
mov
jp
test
ja
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
push
mov
andl
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
add
mov
xor
mov
xor
mov
or
add
adc
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
adcl
xor
xor
add
mov
movl
movl
movl
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
adc
movl
or
movl
movl
xor
movl
mov
xor
mov
add
cmp
movl
je
movl
push
movl
jmp
mov
mov
sub
or
mov
sub
mov
xorl
sub
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
mov
andl
xor
xorl
add
movl
cmp
movl
jb
addl
mov
add
mov
xor
add
and
mov
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
sbbl
xor
add
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sbbl
add
sbbl
imul
xor
mov
add
mov
sub
movl
cmp
movl
ja
mov
xor
orl
add
jmp
mov
mov
xor
xor
mov
adc
add
add
imul
mov
sbb
mov
or
mov
sub
cmp
ja
jmp
ljmp
insl
imul
shlb
jg
jle
mov
cltd
in
fnstenv
xchg
add
mulb
mov
xor
mov
cmpsb
mov
or
push
addb
lods
push
ja
addl
shll
lcall
int
jl
test
addr16
jae
hlt
jns
jb
aam
aaa
sahf
push
stos
mov
sbb
pop
int3
push
mov
lret
adc
lcall
sbb
enter
aad
or
xchg
sub
jle
jecxz
cmp
sbb
and
fisttpll
std
std
aas
push
aad
pop
push
testb
cmpsb
movsb
jne
adc
mov
jle
out
andb
inc
scas
dec
fiaddl
dec
xchg
divl
add
stc
imul
addb
cltd
daa
mov
ds
mov
jnp,pt
xlat
pop
push
xor
sti
rclb
mov
push
rcrb
hlt
add
xchg
push
repnz
negb
in
sbb
sub
mov
fxam
out
push
sbb
insl
xchg
sbb
fisubl
popf
dec
enter
mov
popa
sbbb
insl
std
jae
repz
int
arpl
mov
mov
scas
mov
lret
or
cmc
xchg
jne
jne
mov
push
push
add
push
mov
add
pop
inc
mov
mov
lods
push
in
stc
add
add
xchg
scas
outsb
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
jmp
rorb
push
mov
push
stos
mov
fildll
ret
adc
mov
jle
inc
mov
mov
rol
outsb
and
inc
lods
ljmp
sbb
jecxz
cld
sbb
es
push
sarb
lret
sbb
imul
push
in
mov
out
rorl
lret
pop
out
xchg
outsb
jl
jae
fwait
jl
cmp
testb
fdivl
add
lds
xlat
repz
int3
mov
test
ja
fstps
std
dec
loopne
sub
ja
jo
rorl
popf
mov
imul
pusha
fstpt
sub
push
repnz
push
test
fnstcw
lret
outsl
add
xchg
and
mov
adc
rcrl
xchg
add
sarl
fldcw
dec
ljmp
clc
sub
iret
das
inc
std
pop
inc
jle
repz
dec
sub
addb
shl
jno
inc
pop
nop
stos
fidivl
shl
sbb
je
sbb
into
mov
sbb
inc
xchg
dec
call
out
mov
loope
dec
sti
pop
inc
add
mov
add
adc
out
pop
int
mov
repz
push
jmp
xor
sahf
sub
inc
cmp
cmpsb
test
stos
mov
aad
xchg
ret
mov
imul
push
push
mov
insl
roll
dec
mov
aas
push
pop
inc
mov
jmp
mov
mov
jmp
fs
popf
insl
pop
gs
xchg
popl
push
adc
jle
jg
jle
pop
hlt
mov
mov
mov
int3
dec
xchg
in
inc
ss
rcrb
mov
nop
pop
loope
sub
push
mov
inc
jl
in
add
add
fs
data16
rcr
lret
mov
push
or
shrb
push
dec
cwtl
cmp
mov
or
dec
push
movsl
add
push
pop
or
cmp
sub
pop
loope
jg
shll
xor
xchg
in
fistl
mov
sbb
mov
vmovups
xchg
testl
jno
movsl
mov
cmp
int
push
adc
jb
fs
daa
in
dec
or
xor
movsl
cmpsb
adc
js
loope
lret
cs
dec
pop
rcrl
pop
xlat
dec
lock
xlat
loopne
bound
pcmpeqw
movl
jge
mov
in
in
sti
mov
inc
xor
test
xor
fdiv
jo
xchg
and
mov
int3
cmpsl
sbb
xchg
cmpsb
add
es
lods
jbe
es
iret
int3
adc
dec
call
and
adc
in
xchg
or
movl
icebp
fscale
in
add
mov
ljmp
xchg
inc
push
inc
loop
sub
jbe
and
js
cmp
jne
into
pop
xor
xor
jmp
xchg
push
int3
jns
imul
cmp
loop
push
jle
mov
jle
jns
std
cli
das
mov
ss
aad
andl
xchg
and
into
dec
es
xchg
shl
out
inc
mov
sbb
and
or
push
roll
cmp
jmp
std
mov
push
ret
popa
frstor
shlb
and
cmp
jmp
gs
out
mov
cwtl
sub
xchg
test
lock
jp
cmp
xchg
mov
cmp
mov
ffree
jne
mov
jo
and
dec
movsl
jl
xchg
stos
insl
sub
stc
xchg
cmpsb
xchg
push
stos
imul
dec
je
fwait
addr16
jp
in
lea
xchg
add
dec
sahf
inc
loope
push
das
mov
add
sub
sub
inc
sar
jne
mov
pop
rclb
jl
out
imul
fists
mov
es
rolb
adc
adc
mov
sbb
scas
or
sahf
sub
or
jecxz
cmp
push
jg
and
fmull
pop
inc
or
sub
dec
dec
out
mov
and
mov
or
je
daa
aaa
roll
pop
fmuls
js
jge
sub
push
js
jge
sbbb
pop
or
sub
add
dec
mov
subb
add
pusha
in
add
xor
add
mov
xor
add
leave
shlb
or
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
jmp
hlt
mov
add
pop
mov
aam
pop
jle
mov
jle
cvtps2pi
inc
push
push
pusha
loop
or
cmpsb
shl
lods
rol
dec
xchg
sahf
dec
inc
lods
dec
dec
scas
xchg
sub
imul
jae
lahf
xchg
lahf
fxch
lods
pop
xor
in
push
call
popa
mov
push
pop
jno
cmp
inc
lahf
add
mov
jmp
and
dec
mov
dec
sub
mull
xor
cltd
dec
or
imul
cmc
and
jns
aad
fdivp
xchg
cli
inc
sti
push
mov
push
std
adc
loope
mov
bound
jae
mov
and
mov
cwtl
sub
das
inc
add
mov
inc
lret
pop
sbb
add
aam
pop
pop
pushf
inc
les
xor
push
rorl
xchg
dec
mov
scas
xlat
mov
push
es
fldl
jnp
shrl
and
xor
js
add
mov
ret
xor
loop
shlb
xor
popf
mov
mov
scas
mov
push
and
inc
icebp
adc
cld
sahf
or
fidivrs
fs
cmp
rcrb
mov
popa
mov
and
jge
mov
add
mov
das
cmp
dec
mov
cmpsb
out
leave
loope
xchg
in
adc
jge
mov
leave
imul
inc
imul
push
pop
daa
xchg
loop
dec
cmp
cs
bndstx
push
jae
arpl
xor
out
fsub
hlt
outsb
lods
pop
nop
push
inc
pop
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
jmp
dec
push
dec
push
cmpsl
xor
pause
imull
jle
mov
jle
push
pop
push
out
push
dec
jns
cmpsb
cmp
jnp
mov
inc
jno
fdivr
xchg
repnz
scas
out
mov
cmp
adc
out
cmp
push
sbb
cli
mov
jns
inc
push
movsb
mov
jae
push
pop
sub
lds
inc
dec
outsl
gs
movsb
sbb
imul
hlt
test
pushl
addb
adc
sti
lret
mov
jno
leave
cmpb
sub
jne
inc
push
mov
lahf
xchg
lcall
mov
mov
xchg
dec
rcrl
add
cmpsl
fdivr
mov
pop
cmp
pop
xchg
add
fadds
inc
mov
jecxz
aad
push
insb
mov
das
out
mov
xor
or
popa
xchg
inc
sbb
or
push
xor
pusha
xor
add
and
mov
out
add
mov
sub
adc
lret
mov
or
push
jmp
xlat
pop
in
and
mov
andb
aad
jnp
out
or
add
jb
pop
jne
mov
mov
stc
dec
push
stc
popf
movsb
push
add
jae
cmp
inc
mov
mov
loope
cmpsb
scas
mov
jl
xor
adc
sub
ss
mov
xchg
or
xor
add
cmp
xchg
fwait
lods
pop
sbb
pop
push
xor
add
mov
mov
mov
mov
jmp
andb
addw
std
add
jle
mov
jle
lret
jne
inc
sbb
mov
xchg
in
leave
cmp
xorl
je
mov
das
xor
xor
pop
pop
adc
adc
cmpsb
lret
in
or
xchg
cs
addr16
enter
mov
imul
mov
and
pop
xor
ss
lahf
dec
inc
in
inc
fimuls
push
cli
xchg
mov
add
xchg
inc
sub
inc
nop
stc
or
push
fwait
dec
sti
dec
mov
cltd
jle
jecxz
imul
addr16
shrb
xchg
js
adc
mov
scas
sahf
or
cwtl
pop
and
cs
push
xchg
sbb
das
fistpl
jl
sbb
or
dec
in
cmpsl
ficompl
jmp
cmpsb
cmp
lods
fwait
jb
sahf
dec
sbb
fistl
jmp
push
push
icebp
negb
or
mov
sub
mov
push
aaa
mov
xor
inc
dec
cmc
pop
sbb
mov
lcall
mov
outsl
into
jns
popa
bound
mov
pop
push
into
dec
xor
shrb
clc
push
mov
lret
repnz
stos
fildll
jg
cli
das
test
rolb
enter
pusha
add
movsl
rclb
mov
jnp
fidivrs
das
push
gs
xor
cltd
adc
mov
pop
hlt
and
xor
inc
data16
pushf
inc
mov
sbb
mov
push
in
jmp
test
xor
push
mov
xor
loopne
insl
xchg
sub
jle
jg
jle
loopne
push
roll
push
pop
ds
mov
inc
rcll
leave
iretw
cmc
dec
jne
loopne
outsb
cmp
push
iret
fcomip
mov
call
clc
xor
fwait
lock
cmpl
hlt
popa
pop
orb
popa
lahf
out
fwait
jne
lock
jbe
sub
test
adc
inc
loopne
push
dec
mov
test
or
lds
jg
pop
imul
jp
fisttpl
xchg
mov
daa
dec
mov
subb
push
push
bound
clc
push
sti
je
pop
fs
aaa
push
call
icebp
sub
or
cmpsl
add
int3
das
stc
sarb
and
or
into
or
sarb
in
lods
cmp
add
lahf
xchg
mov
insb
movsl
in
movsl
jae
les
jnp
pop
push
in
sbb
in
cld
and
or
pop
mov
push
adc
sbb
dec
out
stos
leave
imul
lods
insb
and
sub
es
inc
xchg
das
aaa
add
inc
lods
pop
out
sbb
int3
mov
test
repz
pop
add
sbb
add
push
push
mov
pop
ret
xor
outsl
mov
stc
jns
fsubrs
imul
popf
icebp
sar
loopne
jmp
push
xor
jle
or
imul
imul
testb
add
cmp
movhps
dec
add
push
mov
mov
mov
mov
mov
xor
add
jmp
in
push
adc
movsl
aas
push
in
add
mov
jle
test
lcall
inc
jle
inc
jmp
xorb
js
outsb
repnz
cmp
push
fistpl
inc
pusha
out
adc
sbb
into
push
shrb
roll
xor
ret
fsubs
jge
dec
cli
in
cmp
subb
mov
into
inc
shrl
cmp
int3
mov
or
dec
sbb
fiaddl
xor
cmpsl
cmpsb
jns
or
add
popf
fiaddl
inc
test
lds
imul
shll
insl
mov
sub
cmp
xchg
inc
jb
push
mov
or
mov
aas
and
mov
cmp
push
push
push
std
push
pusha
xchg
xchg
mov
mov
dec
cmp
stos
sti
or
mov
adc
sub
inc
sbb
pop
push
in
fwait
pop
negb
mov
cmc
pop
lock
daa
insb
fidivs
sub
or
shl
out
leave
jno
in
into
dec
jno
jge
scas
and
sti
rol
rcll
jmp
pop
mov
xchg
jbe
cmp
pop
mov
or
movsb
fistpll
fcomps
jl
push
ret
and
sub
mov
xor
add
repz
xor
call
lcall
cs
jb
xchg
add
and
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
jmp
testl
xchg
and
dec
jl
mov
jg
jle
mov
pop
pop
cmpsl
mov
sbb
scas
add
icebp
pop
push
mov
push
fcoml
rdtsc
ljmp
stos
test
fistl
js
mov
mov
jg
and
nop
in
or
push
mov
xchg
dec
arpl
pop
cmpb
mov
out
idivb
jb
jle
add
mov
lret
push
jnp
sbbl
arpl
jmp
mov
mov
cmp
pop
jp
cmp
andb
jmp
mov
jne
lods
inc
pop
bound
shrl
inc
bound
cltd
sub
mov
inc
pop
mov
jb
mov
std
leave
int
pop
add
fnstenv
cmp
andnps
les
mov
stos
sbb
mov
jge
xor
pop
adc
jge
ljmp
add
and
xchg
xchg
dec
xchg
js
add
push
repz
repz
mov
add
xchg
push
xchg
out
jns
fs
ds
jle
hlt
adc
call
loop
pop
into
xor
jecxz
aam
shlb
ljmp
lock
xor
push
push
jae
mov
out
leave
pop
sub
not
std
and
xor
hlt
xchg
cld
ss
mov
clc
add
imul
jmp
mov
jns
dec
mov
loopne
and
and
mov
jle
rcll
insb
inc
clc
fsubp
insb
jae
pop
xchg
daa
loopne
inc
jne
scas
cmpb
cltd
push
dec
pushf
leave
sarb
gs
insb
xor
inc
pop
pop
push
adc
lahf
xor
pop
xchg
mov
pop
nop
stc
dec
daa
xchg
mov
mov
push
push
xchg
lods
lods
repz
sbb
addl
cmpsl
bound
or
sub
mov
pop
aad
mov
and
lcall
cwtl
sub
sub
adc
test
shrl
dec
fs
and
mov
insb
lock
dec
inc
shll
aaa
icebp
test
jmp
pop
test
or
cmp
sti
jnp
js
jmp
aad
add
push
inc
add
fisubrl
cs
or
add
js
inc
mov
nop
inc
xchg
enter
divb
xor
sbb
mov
xchg
cmp
adc
xor
jge
xchg
repz
mov
cs
jge
test
sahf
in
sub
mov
lahf
xchg
mov
xchg
cmpsl
movlps
inc
xchg
or
test
xor
inc
in
ja
and
push
push
mov
gs
mov
add
ja
jne
xchg
xchg
add
sub
bsf
mov
mov
sahf
nop
xor
rorl
rorl
xor
cmp
jbe
mov
mov
xor
add
jmp
pop
mov
sbb
or
xor
and
mov
jle
xchg
jne
mov
mov
aad
mov
sbb
cwtl
push
frstor
sbb
rorl
lods
data16
fnstsw
stos
mov
mov
xchg
mov
nop
sbb
xchg
mov
rolb
cmpsl
pop
mov
popl
int
ja
test
dec
inc
mov
cli
cwtl
jge
pop
pop
fs
xor
insb
lds
test
adc
ret
jne
and
insb
addl
cmp
lret
repz
out
sbb
lods
insb
cmp
icebp
shlb
ljmp
xor
dec
fs
cmp
jno
out
push
jge
pusha
mov
mov
xlat
jae
mov
ret
sbb
sbb
mov
push
fsubrp
movsb
pop
dec
jmp
std
movb
mov
popf
iret
or
in
repz
push
insb
jbe
mov
stc
mov
cmp
dec
lret
pop
outsl
flds
or
insl
ret
verw
ret
cmp
push
lods
sahf
dec
loope
xchg
test
es
mov
andl
pop
and
pop
hlt
addr16
aas
leave
dec
ja
ja
pop
xchg
mov
mov
aas
shlb
leave
imul
mov
jmp
sbb
pop
test
repnz
imul
movsb
pop
lahf
xor
sbb
inc
jno
xchg
mov
jle
push
std
sub
add
xlat
push
push
fisubl
pop
cwtl
mov
jge
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
sub
or
push
or
mov
sbb
mov
movzbl
add
movl
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
push
mov
xor
mov
push
mov
add
jmp
sub
in
cmpsl
insl
ret
mov
mov
and
jle
jno
jle
in
push
push
ds
inc
xlat
in
lods
repnz
pop
cmp
jmp
add
and
lods
jl
clc
stc
xchg
sbb
aad
xchg
adc
stos
lods
movsl
and
cmp
inc
idivb
stc
addb
push
iret
fs
cmpl
mov
lret
js
lret
sub
cmpsb
les
popl
pushf
mov
xchg
ret
stos
addl
inc
popa
sti
add
pop
rcll
pop
mov
leave
push
dec
icebp
mov
mov
js
jl
adc
mov
subb
std
insl
cmp
scas
mov
bound
mov
xchg
jecxz
addr16
cmp
cmp
loop
adc
inc
sbb
repz
mov
mov
mov
fsubrs
add
mov
xlat
stos
cmp
xor
mov
or
mov
or
pop
cmp
sub
jp
aad
push
dec
add
jne
sub
add
aam
pop
lods
call
ret
dec
sub
filds
nop
push
insb
jmp
aaa
testb
pop
lret
lret
push
loope
adc
xchg
jmp
cmc
push
jnp
cmp
cmpsb
stos
push
lock
and
inc
xchg
sbb
stos
jecxz
cli
fisubl
outsl
push
pop
and
outsl
mov
cmp
ret
pop
fisubrl
jns
cltd
xlat
inc
mov
std
xor
push
add
push
xor
cmc
mov
adc
add
inc
call
ficoml
jns
adc
mov
loopne
rcrb
sbb
xchg
test
pop
out
push
mov
shll
enter
lcall
ret
adc
sub
imul
imul
lea
rol
mov
repnz
push
icebp
loopne
nop
lret
es
jno
mov
or
aas
stc
pop
mov
and
js
xchg
or
aad
jns
dec
dec
push
push
sahf
jno
inc
inc
jp
movsb
movb
aam
xor
sub
push
icebp
loop
pop
movsb
sbb
jb
add
inc
scas
xchg
xchg
std
push
or
daa
sub
movsb
cmp
sbb
ja
xor
mov
insb
dec
push
mov
sub
fimull
inc
call
xor
xor
mov
icebp
sub
in
fs
add
fistps
inc
fsubrp
mov
outsb
ret
in
xchg
incb
dec
mov
int3
fidivl
and
mov
sbb
les
movsl
leave
mov
sbb
jae
mov
push
fsubrs
sbbb
lahf
psubsw
add
jnp
in
push
sub
rcll
movsl
test
daa
js
ja
stc
mov
and
and
stos
aad
js
or
hlt
arpl
ror
mov
push
repnz
jl
cli
xchg
cli
rep
shlb
icebp
adc
imul
imul
stos
mov
pusha
dec
pop
push
and
add
mov
pop
add
sbb
pop
sbb
sbb
in
inc
mov
rcrl
pusha
in
mov
in
inc
push
mov
arpl
cmp
pop
mov
cmpsb
or
test
add
fiaddl
cwtl
das
cld
xor
insl
lret
cmp
je
mov
mov
xor
mov
jmp
cmpsb
loop
fmuls
jge
xor
jmp
cmp
mov
mov
loope
fbstp
jg
fldenv
movsb
movsl
mov
into
leave
ret
int3
scas
pop
sbb
sub
pusha
xchg
sahf
dec
and
test
aas
std
mov
inc
std
in
sub
mov
lods
fwait
in
cmp
test
or
into
inc
shr
mov
jl
pop
and
jmp
dec
dec
stc
sbb
ljmp
stos
xchg
xchg
fists
lock
jp
cmpsl
push
mov
popa
cltd
jne
pop
or
rcrl
outsb
jb
mov
std
pop
cmp
popa
lea
mov
movl
add
jg
adc
sbb
notl
xchg
push
ss
pop
aaa
push
push
push
push
das
sbb
push
test
fwait
fs
aam
add
mov
or
mov
adc
xchg
sahf
or
jns
jne
js
inc
shr
mov
dec
jmp
lahf
js
and
aad
dec
xchg
in
or
and
mov
js
jp
ficoms
push
jae
or
imul
sub
add
push
hlt
pop
rolb
cltd
in
out
aaa
nop
fiadds
mov
shrb
inc
xchg
stos
xchg
test
cmp
outsl
add
mov
stc
shlb
leave
pop
int3
scas
dec
pop
mov
inc
cmp
mov
lock
lock
mov
out
dec
push
mov
push
loopne
clc
out
inc
cmc
cmpsb
dec
pop
mov
xchg
pop
sar
outsl
roll
out
lret
or
adcb
dec
dec
xchg
insl
adc
movsb
dec
mov
into
iret
iret
push
sub
lcall
xchg
xchg
and
xchg
je
sbb
mov
xchg
xlat
pop
rclb
cmpsb
out
or
jecxz
out
pushf
or
adc
inc
xchg
cmpsb
gs
pop
push
jno
cmp
imul
jge
lret
pusha
ret
mov
mov
mov
xchg
repnz
in
daa
push
lock
lock
nop
dec
lea
mov
cmc
test
cmpsb
xor
lret
leave
cs
push
aas
ljmp
leave
icebp
icebp
inc
aad
xchg
jge
out
fnstsw
mov
stos
sub
std
loopne
js
mov
push
iret
cmpsb
xchg
inc
test
jbe
ja
iret
mov
dec
push
out
push
lds
add
mov
pop
out
pop
xchg
shr
test
adc
push
sahf
sub
mov
gs
pop
pop
cmp
push
mov
push
fisubrs
mov
inc
and
pop
sbbb
cmp
jae
push
mov
pop
nop
inc
jecxz
jne
sti
inc
push
push
ja
mov
mov
or
cli
jp
cmp
cmpsl
loop
enter
in
sbb
insb
icebp
jb
push
aad
into
sarb
mov
dec
sbb
sahf
sbb
movsb
cmp
notl
sub
pop
popf
sub
ret
fbld
lret
mov
pop
mov
pop
adc
cmp
and
sbb
and
subb
inc
mov
lods
sub
fistpl
jecxz
or
sar
std
daa
arpl
xchg
ljmp
jae
clc
mov
pop
idivl
sub
xlat
jo,pn
pop
icebp
lds
js
and
lods
fsubrs
fincstp
or
adc
roll
cmp
ja
push
jmp
mov
mov
mov
xor
jmp
testl
arpl
jl
jno
cmp
mov
mov
loope
shrb
movl
inc
add
clc
sti
push
out
jle
inc
rolb
mov
sbb
gs
push
movsb
push
dec
jnp
cmp
xchg
pop
rclb
jnp
pop
pop
jo
idivl
xor
sub
xchg
cmpsb
mov
daa
xorb
sti
or
outsb
inc
enter
mov
pop
and
jl
in
cmp
xor
jecxz
into
outsl
fs
pop
mov
outsb
aas
pop
jo
jmp
mov
adc
mov
jmp
cmpsl
jbe
stc
mov
inc
jge
jmp
std
stos
add
inc
loop
dec
add
aas
push
or
mov
sahf
mov
js
popf
cmp
inc
mov
test
or
mov
jns
cmpsb
aas
imul
ret
jge
mov
enter
or
das
sahf
inc
dec
sub
or
lret
roll
out
dec
mov
mov
xchg
in
mov
mov
mov
cmp
pop
lds
cltd
jno
lds
pop
pop
mov
fnstenv
ds
subb
lods
sub
shll
inc
mov
pusha
sub
in
call
fcmovnb
and
ds
push
push
sahf
ds
xchg
dec
std
dec
dec
add
addb
xor
adc
inc
ffreep
push
xchg
adc
fisubs
pusha
cmp
rcr
mov
outsl
mov
leave
mov
in
fwait
pop
insl
cmovge
in
call
ss
or
xchg
jle
insb
dec
inc
arpl
imul
insl
rorb
jg
insb
repz
fiaddl
sbb
jp
add
push
lret
dec
fldl
lahf
push
in
push
or
mov
inc
mov
jl
sub
xor
inc
pop
adc
mov
mov
imul
cmp
mov
xor
addl
xchg
imul
sbb
push
pop
push
fdivp
jmp
shll
dec
cmp
stos
dec
mov
jb
push
into
pop
and
jecxz
and
das
cmp
xor
cmp
pop
pushf
outsb
push
stos
outsb
test
nop
xchg
clc
movsl
mov
and
loop
inc
push
xor
arpl
rcrl
pusha
dec
pop
ja
cs
idivl
ljmp
lods
or
mov
xchg
xchg
mov
in
jmp
pop
outsl
scas
add
ret
push
cmp
cmpsl
rcll
mov
xor
insl
sbb
cmc
pop
xchg
aas
push
cmp
and
push
outsb
push
iret
faddl
cmp
sub
add
inc
xor
add
shll
jae
push
cltd
mov
lea
cmp
jne
js
jno
add
xor
nop
hlt
popf
xor
test
xor
pop
rol
mov
jnp
in
and
in
iret
push
repnz
jae
add
mov
stc
sub
ficomps
out
arpl
pop
out
sbb
xchg
sub
sbb
ud2
inc
inc
mov
mov
fs
mov
xlat
shr
lcall
popf
in
adc
into
insl
adc
add
pop
in
sub
es
mov
jle
fisubrs
loope
xchg
ss
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jmp
fdiv
es
jge
jge
jae
dec
pusha
and
and
aas
jle
mov
and
pop
dec
dec
lret
and
adc
or
arpl
jb
out
xor
cmc
mov
popf
clc
pop
jg
ja
push
aad
dec
mov
bound
js
gs
mov
xor
jl
cmp
sbb
mov
pop
mov
lcall
jns
add
push
insl
push
fisttpl
jb
subl
jl
cwtl
lret
mov
imul
aas
fwait
sub
addr16
and
add
mov
das
hlt
adc
stc
pop
movsb
pop
pop
add
aas
push
fisubrl
and
sub
lea
xor
fcmove
adc
xor
repz
xor
xchg
sti
out
clc
test
dec
cmp
inc
sbb
iret
inc
mov
jns
ret
bound
add
cmp
sub
into
cmp
mov
and
mov
mov
and
mov
push
loop
sahf
push
dec
inc
add
in
leave
bound
jae
fisttpll
jns
dec
pushf
sub
ljmp
inc
shlb
pop
or
xor
jmp
data16
jl
stos
mov
ret
dec
loope
movsl
sbb
hlt
xor
ljmp
in
cltd
xor
push
fiadds
push
rorb
mull
aaa
add
adc
mov
xor
push
push
fsubr
jl
daa
in
cmp
pop
push
sub
or
mov
inc
aam
cli
adc
inc
adc
fisubs
icebp
mov
aas
pop
stos
xor
push
cmpb
popf
out
lret
sbb
aad
inc
pop
xchg
loope
pop
push
xor
mov
subb
push
pusha
jge
dec
stos
fiaddl
jp
rcr
cmpsl
imul
movsb
or
sbb
adc
icebp
jl
lock
mov
mov
andps
stc
movsb
xor
iret
mov
xor
mov
sub
test
jne,pt
enter
push
in
push
daa
xor
push
cmpsb
out
inc
mov
je
cmc
jp
cmpsl
dec
mov
stc
bound
and
test
enter
scas
insb
in
mov
mov
fildll
cmp
mov
test
rorb
add
xchg
iret
or
lret
mov
or
mov
shr
out
cmp
and
or
cmpb
lahf
pop
fnstsw
daa
push
pushf
xchg
mov
push
shrb
xor
xor
ss
mov
jmp
int3
ficomps
pop
mov
movsb
mov
mov
and
dec
sub
movsl
mov
int3
and
and
xchg
stos
daa
pop
mov
insb
and
jmp
xchg
stos
jo
jne
pushf
jno
push
out
push
incl
sub
cmp
cmpsl
out
aas
imul
sbb
ja
mov
test
dec
cwtl
lret
pusha
icebp
repnz
inc
jecxz
repz
fbstp
sbb
in
dec
aad
repnz
mov
adc
mov
and
cmp
and
sarl
add
mov
push
and
cmpsl
inc
out
std
inc
push
mov
in
cmp
and
push
stos
add
mov
dec
sub
imul
add
addl
pop
push
and
xor
xrelease
adc
stos
imul
xchg
imul
ds
cmc
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
add
mov
xor
sub
incl
mov
push
sbbl
mov
xor
movl
cmp
movl
je
mov
decl
jmp
fcmovnb
dec
filds
jnp
cmp
fidivs
jle
jmp
jle
lret
fists
push
outsb
inc
and
cwtl
ja
inc
insb
and
xchg
cmpsl
test
dec
xchg
arpl
pop
push
pushl
stos
dec
popa
sarb
and
mov
or
fistl
sti
dec
xor
ds
in
sub
adc
fbstp
push
mov
xchg
sub
and
scas
add
xor
lods
aad
or
stos
mov
fistps
sub
xchg
adc
mov
das
xchg
push
mov
daa
and
cmp
mov
out
and
out
std
mov
orb
mov
negb
push
movsb
lods
sbb
and
aaa
push
mov
cmpsb
ret
mov
jae
xchg
and
jo
cld
or
je
xchg
arpl
stos
cltd
fwait
sbbl
add
mov
outsb
std
orl
in
mov
mov
add
icebp
jecxz
into
movsl
insl
enter
ss
addr16
sub
sbb
iret
pop
lods
addr16
mov
sub
mov
out
add
mov
dec
std
push
pusha
mov
sub
notl
jge
repnz
cmp
popf
adc
ja
mov
je
fcompl
cmp
rorl
inc
rorl
cmpsl
scas
ljmp
jle
mov
testl
cltd
pop
fwait
pop
jl
cli
nop
out
fildl
fdivs
mov
repnz
cmp
jns
lods
xlat
add
mov
mov
fadd
mov
lahf
push
lods
jecxz
in
fcoml
repnz
jge
fdivrs
decl
imul
or
add
cmp
orb
push
inc
fistl
cwtl
ss
sub
dec
int3
leave
fstpt
fxch
stc
clc
flds
jno
inc
test
fdivs
mov
jae
imul
fs
out
cltd
xchg
push
push
jge
mov
mov
pop
sbb
mov
add
lahf
icebp
jl
aam
imul
mov
scas
loopne
push
sbb
cs
into
imul
jecxz
inc
addb
loope
mov
push
or
les
dec
mov
out
cmp
add
adc
sbb
and
icebp
sbb
cmpb
or
adc
outsb
aas
push
test
loop
mov
sbb
inc
in
mov
negb
cmp
mov
loop
push
sub
sbb
ret
and
fisttpll
stc
adc
icebp
les
js
or
call
test
pop
stc
or
std
push
cmp
mov
shlb
cmp
pop
stc
cli
inc
stos
push
mov
adc
dec
sub
add
sub
sahf
cltd
lahf
imul
mov
mov
stc
jb
jle
stos
mov
loopne
scas
pop
loop
in
or
fildll
scas
adc
xchg
ficompl
jp
jmp
scas
fld
cld
fdivrl
sbbl
sub
xor
movl
cmp
movl
jne
add
mov
add
movl
jmp
mov
xorl
xor
add
movl
jmp
xchg
fcmove
pop
fstpl
dec
lods
sbb
jle
jno
jle
mov
icebp
cld
or
cmp
call
mov
outsb
fs
stc
ljmp
ss
or
lds
icebp
cmp
add
jb
fs
and
sbb
std
jbe
ss
clc
or
lods
and
add
addr16
cs
and
add
pop
fcmovnu
int3
jne
filds
add
cs
iret
adc
cmpsb
or
std
dec
mov
addr16
mov
xlat
inc
mov
mov
sbb
lods
jle
dec
push
adc
jl
in
icebp
xor
das
sahf
dec
stos
xchg
cmp
daa
mov
and
jo
iret
scas
psrlw
test
dec
and
pop
mov
add
cld
mov
and
in
xchg
fnstcw
fsubl
adc
int
das
adcb
mov
fs
in
addr16
pop
push
cmpsb
out
add
sti
sbb
xor
cmp
imul
push
lcall
push
jnp
xorb
test
dec
enter
cmp
add
lods
lret
sbbl
je
adc
adc
outsl
pop
clc
ljmp
ds
push
push
aad
sbb
sub
push
gs
mov
nop
push
inc
cs
imul
scas
or
inc
pop
aad
push
sub
into
outsl
out
mov
stos
faddl
testb
pop
adc
ja
sub
mov
xchg
sbb
inc
jl
or
xlat
or
stc
das
js
data16
mov
jns
xchg
pop
dec
outsl
xchg
xor
mov
push
push
mov
cld
cmc
imul
push
sub
lods
stos
stos
push
push
scas
jle
push
mov
and
jns
jbe
or
addb
ja
repnz
fcomps
jle
add
iret
and
gs
dec
into
les
push
or
push
sub
xchg
lret
pop
mov
addr16
cmp
and
in
sbb
cli
pop
lcall
std
cmp
xlat
xor
cmpsl
aam
push
es
inc
flds
sub
and
pop
inc
fcomps
out
inc
std
pop
jle
sub
cmpl
out
mov
test
push
scas
loop
or
xor
pop
lret
cli
arpl
dec
xorl
xchg
js
xchg
pop
call
and
pushf
test
xchg
aaa
popf
adc
adc
or
jns
adc
dec
arpl
je
dec
dec
jns
pusha
mov
test
pop
and
inc
xchg
out
lods
mov
lods
cmp
xor
and
cmp
jbe
push
imul
loopne
fisubs
sbb
cmp
loope
aad
pop
mov
mov
stc
xor
call
pop
inc
mov
aam
outsb
pop
fldcw
aad
repnz
aaa
pop
fwait
pop
shll
adc
push
lret
jg
and
js
xchg
test
dec
clc
inc
xor
sbb
cmp
push
jecxz
push
mov
mov
xor
jmp
repz
inc
or
pop
inc
and
sub
test
jmp
cmp
jle
jmp
jle
fprem1
fildl
add
dec
dec
dec
cmc
sub
dec
ds
ficomps
in
fs
mov
sub
jle
jmp
mov
mov
lahf
repz
sti
xchg
mov
fstpl
and
rol
push
test
push
mov
xor
sub
dec
xchg
cmp
mov
jbe
mov
addr16
inc
xorl
divb
stos
sarl
sbb
inc
lea
aam
dec
sub
movsb
inc
xchg
mov
sub
pop
gs
cmc
loop
cmp
mov
pop
mov
fstl
sbb
push
cmc
pop
imul
mov
jno
jge
pusha
aas
fs
imul
xor
out
aam
int
mov
das
pop
stc
add
add
sbb
dec
mov
dec
call
or
out
push
cmp
xor
pop
xchg
lahf
sub
pop
dec
adc
adc
lret
or
mov
inc
aaa
jnp
imul
and
push
fsubrl
mov
mov
dec
pushfw
popf
dec
adc
mov
or
xor
pushf
cli
mov
int
dec
pop
lret
scas
stos
or
std
cmp
xor
jge
mov
into
inc
jp
xor
lahf
mov
lret
push
scas
xchg
push
mov
mov
filds
cli
rolb
pop
out
inc
mov
mov
inc
dec
sub
andb
lea
fmull
out
nop
push
mov
lods
imul
dec
cmpsb
or
cmp
loop
and
lcall
sbb
cmp
leave
in
adc
add
insb
push
aam
add
xlat
jne
cmp
loope
cwtl
mov
jno
or
xchg
sub
and
inc
jmp
sub
js
inc
mov
and
imul
and
enter
sbb
sti
mov
mov
mov
sub
add
in
mov
mov
fnstenv
pop
jp
push
mov
or
outsl
loop
pop
xchg
imul
or
sbb
push
mulb
xchg
ret
mov
sub
xchg
repz
out
cli
pop
mov
std
repz
mov
cmp
xlat
sub
aaa
xchg
xchg
fcomip
mov
in
adc
mov
jmp
imul
sbb
inc
xchg
mov
notl
data16
leave
mov
jno
test
fidivrs
cmp
jg
imul
xor
push
adcb
mov
mov
mov
lods
aas
jno
mov
dec
dec
cmp
mov
or
add
addr16
jns
test
inc
or
icebp
adc
int
fsubrs
or
aad
bound
xchg
dec
push
nop
imul
hlt
sub
pop
fiaddl
out
fsubl
clc
push
mov
fstl
out
cmpsl
les
add
pushf
mov
ret
and
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
xor
sbb
mov
xorl
add
addl
movzwl
mov
xor
movb
lea
andl
xor
or
inc
mov
cmpl
jne
push
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
mov
xor
sub
negl
mov
movl
cmpl
je
cmpl
jne
push
push
call
xor
xor
dec
mov
jmp
movl
add
movl
jmp
rclb
cmpsb
js
pop
mov
xchg
int
jle
jg
jle
push
out
mov
aam
mov
or
popf
sbb
mov
sub
pop
out
cwtl
lods
fcmovu
bound
adc
bound
mov
and
cwtl
and
scas
sti
pop
cld
sub
add
mov
ja
xor
adc
mov
cli
das
shr
add
mov
mov
aas
mov
in
mov
adc
andl
ret
insb
movsl
lods
add
lahf
sahf
iret
push
add
or
sti
sarl
fcmovb
xorl
inc
mov
gs
jbe
les
push
xchg
inc
adc
jne
jne
sti
or
movsl
popa
insl
xchg
andb
movsb
push
xchg
mov
push
insl
pushf
sub
shrb
pop
pop
jb
mov
jns
ret
mov
mov
mov
dec
insl
push
pop
hlt
pop
rolb
in
out
sbb
jp
sbb
aad
pop
imul
add
or
lahf
clc
cmp
stos
loopne
push
and
lock
sbb
mov
and
add
and
test
fnstenv
dec
or
out
add
mov
push
mov
sub
xor
mov
subl
add
jmp
mov
mov
movl
inc
jmp
mov
jbe
pushf
pop
dec
fsubs
mov
mov
sarb
jle
dec
xor
ljmp
cmp
cmp
fdivs
stos
push
cmp
cmc
add
jne
mov
call
and
pop
xchg
pop
les
inc
mov
xor
shl
add
jae
jp
dec
dec
push
cmpb
out
dec
mov
dec
ss
rcl
mov
mov
cmp
xchg
inc
pop
mov
cmp
xchg
adcl
adc
notb
pop
fwait
dec
pop
xlat
sub
pop
pop
imul
sub
add
sarl
mov
mov
cmpsb
jnp
push
push
jle
xor
es
dec
cmp
repnz
jl
jl
sbb
shll
fisubs
pusha
mov
xor
stc
ss
movsb
or
jmp
and
test
imul
lret
mov
mov
cmc
jne
rcl
cmp
mov
xchg
and
cmpsb
mov
cvttps2pi
dec
and
fwait
xlat
mov
pop
test
and
dec
add
xchg
sub
and
fcmovnu
sbb
add
lods
ror
mov
das
cmpsb
sahf
dec
loope
insl
adc
jg
adc
jno
cmp
push
xchg
lret
ret
call
cmp
jb
mov
mov
xor
add
cmp
je
push
push
jmp
insb
lds
cmpb
xchg
pop
outsl
jp
in
sarb
jg
jle
cmp
hlt
jl
scas
push
outsl
cs
mov
dec
jg
aas
out
mov
aas
mov
add
popa
jge
add
jne
mov
mull
lock
or
cwtl
test
cwtl
add
outsb
xor
fs
and
mov
scas
scas
cmp
pushf
mov
imul
movsl
cmp
jmp
adc
or
mov
addr16
shll
inc
pop
pop
mov
push
push
push
fiadds
incb
fdivr
add
ljmp
arpl
push
xchg
cltd
inc
inc
popa
rorb
pop
fstl
es
mov
aas
jae
jae
ret
sarl
cltd
and
stos
sti
add
leave
insl
aas
ljmp
or
and
mov
aaa
lea
sbb
in
mov
add
data16
or
out
mov
adc
fsts
aam
xchg
or
mov
sbb
pop
leave
xor
adcl
and
stos
jle
sub
cmp
inc
sbb
ds
mov
pop
negl
adc
jecxz
loop
imul
mov
jmp
fcomps
fbstp
or
inc
push
xchg
mov
sbb
xchg
push
or
jl
add
jae
cmp
cli
vpaddw
incl
cwtl
sti
push
inc
sarl
jg
jle
sar
dec
jmp
xchg
jecxz
addl
lods
sti
movsl
js
addl
adc
push
push
test
cwtl
add
fwait
out
mov
je
mov
adc
in
mov
mov
mov
push
test
aad
xlat
xchg
popf
xchg
mov
lods
or
mov
call
pop
mov
pop
xchg
pop
mov
xorb
mov
lahf
and
jae
fbld
lods
test
lret
cmp
dec
arpl
cmpsb
jg
jp
mov
and
or
hlt
jecxz
pop
jp
dec
sbb
test
into
call
imul
jl
fldcw
cmpsb
cmp
ret
mov
jb
fwait
icebp
mov
sub
mov
ficomps
outsl
sub
inc
mov
cld
lock
mov
outsb
push
mov
arpl
pop
and
icebp
push
daa
xlat
cwtl
inc
test
lods
adc
cmp
test
pop
mov
xchg
push
aam
fwait
sub
outsb
out
jmp
jge
shrl
or
add
mov
test
mov
add
pop
adc
rolb
cld
int
sub
mov
push
push
aam
sbb
mov
adc
scas
xchg
inc
cmp
cwtl
int
jbe
cs
jle
inc
mov
add
inc
xchg
add
add
jmp
push
fsubs
pop
xchg
push
xchg
add
jle
jg
jle
pushf
push
ret
or
mov
push
mov
js
in
mov
aam
sahf
push
in
in
dec
sti
push
fiaddl
pop
cmp
lcall
push
jl
mov
stos
pushf
jg
pop
cmp
in
bound
mov
int
outsl
icebp
cmp
ljmp
cmp
aaa
xor
jl
jnp
insl
lret
je
push
mov
pop
adc
xchg
jns
cmp
loopne
pop
mov
adc
mov
dec
push
ret
push
in
sub
mov
mov
dec
fadd
lret
hlt
inc
xor
sbbl
jmpw
out
mov
daa
cltd
mov
es
fldcw
pop
gs
xor
hlt
add
add
test
imul
fldenv
jo
lods
push
push
adc
lcall
inc
das
mov
xor
mov
mov
xor
dec
xchg
push
jo
pop
inc
and
mov
push
pusha
xor
int3
sub
add
in
xchg
ficoml
lret
xor
xchg
add
push
xchg
cmp
inc
aas
push
outsb
test
pop
bound
mov
jmp
inc
adc
pop
movb
fdivr
or
ret
xlat
ljmp
sub
sbb
ja
sbb
aaa
cmp
movzwl
mov
jmp
xchg
sbb
cmp
inc
push
cwtl
pop
xchg
mov
jle
jg
jle
push
sbbb
or
shrl
add
rolb
mov
cli
les
adc
and
hlt
inc
push
clc
mov
fnstcw
sub
jge
sbb
loopne
cmpsb
xor
jbe
mov
ljmp
cli
jno
xor
sbb
popf
pop
pushl
out
arpl
jbe
xchg
popf
dec
cs
pusha
aad
mov
test
sub
fmuls
arpl
sbb
daa
jge
xorb
adc
jno
aaa
lahf
xorb
xchg
cmp
test
mov
jp
stos
cmp
sahf
inc
push
adc
in
hlt
incb
fwait
jne
int
jae
es
adc
aas
into
nop
dec
jg
movb
sbb
xor
loop
je
ljmp
mov
std
movsl
pop
sbbl
fs
fidivrl
rcrb
push
imul
jae
rcrb
or
pop
cmp
mov
xrelease
and
scas
mov
sub
jmp
push
scas
hlt
add
pop
inc
xlat
lods
in
test
or
pusha
xor
add
add
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
jmp
fistpll
aas
or
or
jmp
jle
dec
repz
shl
jge
jle
sarb
jle
daa
rcrl
lcall
insl
sbb
movl
or
scas
jo
jo
imul
out
and
jns
jecxz
lds
jno
push
into
icebp
mov
cmp
dec
cwtl
jmp
aam
sbbl
out
pop
popa
cltd
push
push
mov
add
je
cmp
jo
fnstsw
mov
lcall
in
add
addb
fwait
jae
mov
pmulhw
cmp
jne
and
aaa
loopne
fwait
lods
dec
ret
push
enter
insl
sbb
push
xor
cli
out
rcll
psubsb
bndldx
cli
test
pushf
stc
or
jns
mov
cmp
push
iret
inc
jg
mov
sbb
mov
ja
add
add
mov
pop
sub
mov
jl
sbb
push
push
sarl
out
jp
sub
pop
mov
ror
inc
fldcw
xor
pop
mov
fcoml
or
gs
in
gs
mov
add
js
and
pop
pop
xor
test
dec
mov
sub
rcll
mov
inc
clc
mov
xor
add
mov
mov
xor
add
jmp
mov
rorl
dec
rorl
or
and
jle
sarb
jle
xchg
mov
loope
pop
add
test
or
push
pushf
sub
into
scas
sub
out
cmp
pop
orl
fwait
or
push
jg
js
xchg
adc
mov
mov
hlt
sub
lret
cmp
out
cmc
lock
rcr
fs
std
ljmp
stc
cmp
add
in
je
out
adc
mov
insl
in
add
cmc
aaa
es
push
cmc
scas
inc
sub
push
xor
in
lahf
dec
add
out
xlat
inc
inc
testb
xor
push
cmc
cmp
dec
adc
cwtl
push
sub
dec
roll
xchg
jno
or
std
jnp
jmp
xchg
insb
loopne
arpl
xchg
iret
sub
lret
mov
mov
dec
mov
pop
repz
add
mov
push
addb
std
pop
cmp
or
shrb
fldcw
jge
test
jns
fmull
fcmovbe
lret
gs
lods
jbe
adc
dec
cmp
ret
mov
enter
adc
cmp
daa
lods
pop
lret
cmp
testl
cli
add
sbb
xchg
adc
dec
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
jmp
xchg
mov
or
mov
mov
dec
jmp
jle
jg
jle
jnp
leave
lret
add
clc
fwait
xchg
add
andl
aam
adc
cmc
aaa
mov
jg
xchg
inc
or
les
pop
cmp
or
fdivrp
mov
nop
pop
or
pop
shll
andb
leave
loope
in
mov
adc
fsubl
outsb
dec
aad
shll
in
mov
xchg
dec
pop
sub
jp
lds
add
pop
sti
loop
lahf
mov
pusha
in
mov
pop
es
test
adc
lds
shll
jmp
jl
jns
in
cmp
lcall
or
orb
pop
outsb
imul
imul
mov
outsb
and
popf
push
outsl
push
inc
test
xor
push
and
ret
lahf
mov
lea
ss
ret
cmp
fisubrl
leave
cmp
or
sbb
outsb
mov
xor
movsl
adc
std
dec
sbb
js
jne
dec
or
adc
xor
lea
push
xchg
insb
push
fimull
sbb
js
sub
inc
cmp
cs
cld
out
pop
icebp
fdivs
bound
inc
icebp
negb
mov
jae
aad
shll
mov
mov
addl
jmp
test
cmp
jge
xor
imul
sarb
jle
mov
repz
push
mov
movsl
enter
mov
mov
mov
and
ljmp
pop
lret
mov
inc
fbstp
xchg
clc
push
sub
js
pop
into
dec
xor
repz
es
test
aaa
push
adc
sbb
xor
cmpsb
outsl
sub
sbb
and
in
and
pop
popf
pop
push
movl
ja
lret
pop
lods
jl
jb
dec
mov
movsb
add
nop
jmp
mov
loopne
push
rolb
lret
in
call
lret
into
xor
jmp
push
or
mov
lock
inc
popl
cmc
sbb
and
xchg
outsl
js
addr16
or
cmp
xchg
jmp
xor
cmp
popf
adc
add
aad
sbb
xor
mov
lods
mov
inc
int3
sbb
enter
mov
sub
stos
test
fnstenv
into
sub
leave
addr16
inc
mov
or
dec
nop
inc
loopne
fidivrs
divl
les
add
movsl
mov
push
pop
mov
pushf
fwait
rcrb
cmp
outsb
adc
jae
cmc
out
notl
jg
or
roll
rcl
sub
mov
mov
xor
jmp
dec
sbb
fstpl
inc
inc
jmp
addr16
fstpt
sarb
jle
add
sbb
lods
cmpsb
adc
rol
sub
stos
lods
call
repnz
push
mov
les
ljmp
test
cmp
mov
xor
inc
or
cmp
cmp
adc
adc
inc
stc
sbb
xchg
mov
xchg
fiaddl
lahf
xchg
pop
or
adc
ja
jae
divl
inc
mov
sub
cli
push
cmp
outsl
xchg
mov
adc
push
cmp
mov
pop
xchg
xor
jmp
lock
je
ret
jp
stos
insl
out
test
mov
mov
inc
sbb
push
pusha
pop
cmp
cmp
loop
lea
addr16
sbb
lret
and
xchg
gs
push
pop
jle
arpl
mov
mov
xlat
in
inc
xchg
imulb
clc
cmp
outsb
out
adc
jne
mov
cmpsb
add
loopne
pop
mov
shl
dec
mov
addr16
repnz
push
lods
xchg
ror
lods
mov
sub
hlt
pop
push
cmp
push
mov
cmc
lret
push
jo
lret
lods
xor
cmp
mov
std
cmpsl
pop
movsb
test
es
fcompl
js
imull
xor
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
movl
neg
mov
movzwl
adc
mov
mov
subl
xor
add
adcl
mov
mov
adc
xor
or
push
movzbl
or
mov
adcl
mov
add
mov
xor
mov
mov
mov
or
mov
dec
mov
sbbl
mov
mov
adc
mov
orl
mov
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
pushl
push
call
cmpl
jb
mov
xor
add
pop
leave
ret
push
mov
mov
jmp
cs
orl
cmc
outsl
leave
xchg
jle
push
jo
jle
iret
incl
lahf
test
cltd
pop
xchg
sub
pop
jbe
pusha
test
xchg
xchg
jae
pop
stc
scas
sbb
adc
or
push
std
aam
jns
and
mov
mov
sbb
popf
mov
sbb
pop
mov
shrb
adc
push
add
rorl
lods
dec
pop
push
ja
jmp
cmp
sbb
pop
xor
push
lahf
cmc
push
cli
nop
xchg
fs
push
jmp
test
push
xchg
lahf
loop
dec
imulb
inc
imul
cmpl
outsb
in
mov
mov
clc
add
jmp
cmpsl
and
add
bound
lods
xchg
xor
xor
xchg
nop
or
inc
in
push
iret
inc
pop
jmp
insl
sbb
sub
sbb
sbb
push
sti
aaa
xchg
mov
jo
dec
adc
push
fsubrl
add
test
jg
pushf
stos
adc
push
cmpsl
lds
lcall
std
mov
std
sbb
add
cmp
or
push
fsts
mov
add
fwait
pop
sub
xor
insb
jbe
sbbb
fcompl
sbb
ds
jl
dec
jae
mov
xchg
aas
push
xor
in
xchg
add
xchg
shrb
mov
hlt
push
ret
mov
insl
xor
cwtl
scas
push
fimull
push
call
inc
mov
push
add
rcll
cmp
mov
add
repz
cmc
sbb
jbe
inc
clc
xor
ret
cmp
xchg
cltd
imul
fldl
and
xor
ret
jg
jno
jae
or
sbb
adc
adc
mov
lods
rcll
xchg
in
adc
fsubs
jl
das
sub
xchg
sub
int
mov
imul
outsb
push
arpl
ret
xor
sbb
cmpsb
movsl
sub
cmp
enter
adc
loope
jmp
sub
sub
push
popa
mov
out
std
lods
not
adc
aaa
les
sti
fmulp
popl
scas
not
test
int3
jl
or
ds
and
leave
fisttps
leave
in
push
notl
mov
adc
mov
outsl
out
out
movsb
inc
add
sub
cltd
sbbb
loop
cs
in
pop
insl
shll
mov
mov
sahf
inc
and
loope
fiadds
xchg
ss
push
sub
lret
sti
push
fs
and
out
lret
dec
pop
addr16
inc
sbbb
mov
div
mov
and
jmp
out
xchg
imul
bound
ja
insl
inc
fistpll
push
jo
jle
pop
inc
popl
pop
cmc
scas
xor
mov
ficompl
outsl
add
adc
mov
and
mov
shlb
popa
jg
jle
xor
inc
jns
jmp
sub
sbb
hlt
roll
jg
cld
cmp
mov
lcall
fisttpl
addb
mov
xchg
scas
pop
inc
das
scas
test
rcll
or
push
add
test
in
loope
ss
lret
stc
add
xchg
ror
cmpsl
mov
jmp
psubusb
stc
xchg
adc
mov
cmp
xchg
dec
sbb
outsb
jl
cld
or
aam
mov
push
out
mov
mov
decl
cli
sbb
repz
inc
loop
out
mov
lahf
add
fnstcw
add
subl
sbb
mov
mov
inc
icebp
push
push
repnz
xchg
imul
mov
movsl
inc
mov
ja
lods
rcrl
jae
jb
aad
arpl
or
int
mov
or
mov
pop
adc
mov
aaa
xadd
fldt
mov
cmp
inc
mov
sti
mov
mov
mov
popf
push
and
or
cmpsb
sub
or
or
mov
dec
adc
xchg
jge
cmp
aas
addb
call
decl
dec
pop
cmc
or
das
push
mov
shlb
gs
mov
mov
or
cltd
sub
fdivs
sbb
rcrl
call
cmp
stc
mov
cld
mov
cmp
inc
or
jne
fimuls
lods
or
cmp
out
xchg
push
fwait
pop
push
adc
cmp
pop
mov
pusha
sbb
out
scas
stos
addb
pop
shrl
daa
mov
xlat
std
or
repz
and
popf
js
dec
clc
mov
adc
out
push
ljmp
test
outsb
gs
fwait
push
movsl
cmpsl
jp
imul
add
std
adc
lea
xor
loope
pop
lret
movsb
aam
adc
clc
xchg
inc
je
test
mov
pop
adc
xor
jg
cltd
xchg
xchg
ds
clc
outsl
stos
sub
lcall
mov
nop
pop
or
fcoml
mov
mov
sub
aad
bound
sbb
pop
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
adcl
movl
mov
sbb
mov
xorl
mov
xor
jmp
jno
test
gs
or
movsb
outsl
fsubs
jle
inc
jg
jle
int3
ss
cwtl
jnp
aam
inc
or
push
pop
loop
enter
insl
push
mov
jnp
subl
les
or
sbb
fisubrs
pop
mov
pop
clc
xor
rcr
movsb
mov
cs
sbb
xchg
jecxz
xchg
push
xor
cwtl
shll
cld
lcall
jno
mov
stos
mov
in
push
and
dec
adc
stos
inc
xchg
test
das
mov
daa
add
lret
xor
cltd
xchg
mov
ret
sbb
mov
and
nop
or
out
mov
inc
or
insl
push
dec
lahf
cmp
cwtl
xor
bound
pop
add
test
fs
sbb
aad
cmp
mov
mov
push
sbbb
shlb
call
adcl
shrb
in
iret
xchg
mov
lret
es
aam
dec
sub
aam
std
pushf
aad
push
sahf
dec
and
rcll
shrb
jmp
push
mov
jbe
nopl
movb
cmp
sub
cltd
mov
sub
das
aas
push
scas
jle
and
scas
mov
popf
dec
aam
add
loope
jnp
pop
jle
lret
cmp
sub
fnsave
into
je
sti
cwtl
pop
mov
dec
aam
add
jo
repnz
in
addb
adc
mov
mov
inc
push
movl
mov
add
inc
xchg
xchg
jnp
dec
and
push
icebp
popa
and
imul
fsubp
pop
imul
cli
sbb
fisttpll
icebp
push
mov
aam
xor
xor
movsl
fstpl
add
popf
jb
add
add
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
jmp
test
pushf
dec
pushf
inc
pop
cwtl
mov
aaa
and
cs
jle
inc
jg
jle
push
fs
ds
iret
rolb
sti
add
pop
lcall
ret
mov
mov
xchg
fisttps
or
ja
xchg
call
pop
testl
ds
mov
xchg
add
push
call
imul
call
sub
dec
mov
loop
rcrb
inc
adc
shlb
mov
sub
and
lcall
ficompl
jle
mov
mov
test
hlt
int3
add
scas
insb
ss
in
data16
and
dec
pushf
shl
nopl
rolb
and
mov
rolb
shlb
sahf
push
daa
or
sahf
pop
fstps
xor
jbe
adc
adc
jno
and
sub
mov
mov
outsb
bswap
pop
loopne
arpl
mov
mov
scas
cmp
push
pushf
leave
test
xor
ret
lods
jp
sub
test
js
or
ss
mov
and
mov
cmp
aad
push
sbb
push
mov
push
jae
jbe
lcall
lods
sub
sbb
pop
dec
xor
stos
cmp
sub
in
loop
jb
loop
ret
sbb
lds
push
sbb
repz
fnsave
cmp
xor
daa
jecxz
inc
xor
sbb
jge
and
cmp
pushf
out
fmull
sti
pop
sub
cld
aam
incb
js
mov
or
fisttpl
inc
fsubr
lret
popa
add
xor
cmp
pop
adc
push
dec
sub
cmp
jo
fildl
add
leave
ret
push
mov
sub
push
sbbl
push
push
xorl
push
sbbl
call
sbbl
test
je
orl
xor
jmp
orl
push
call
sbbl
test
movl
je
push
push
adcl
call
jmp
subl
call
cltd
cmp
movl
jne
cmp
movl
jne
subl
push
call
jmp
negl
push
adcl
call
test
jne
andl
xor
xor
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
mov
and
mov
movzbl
sbb
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
adc
movl
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
lea
mov
add
lea
inc
mov
inc
mov
mov
orl
mov
add
mov
xor
xor
adc
mov
xor
xor
mov
add
mov
mov
mov
cmp
mov
movl
je
mov
xor
adcl
add
imul
movl
mov
jmp
xor
adc
add
mov
mov
mov
sub
or
mov
xor
add
mov
subl
mov
add
mov
negl
xor
decl
add
movl
cmp
jne
mov
add
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
add
mov
orl
mov
mov
not
mov
xor
add
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xorl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
xor
or
dec
mov
jmp
and
add
mov
lea
and
mov
mov
adc
mov
mov
sbbl
mov
sbbl
xor
add
movzwl
and
mov
addl
mov
or
lea
mov
sub
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
xor
xor
dec
mov
jmp
movzbl
or
mov
xor
xor
add
mov
mov
sbbl
movl
mov
sbb
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
pushl
pushl
pushl
pushl
push
pushl
push
push
push
call
xor
xor
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
mov
movzwl
add
xor
movl
mov
mov
add
mov
xor
xor
sub
mov
orl
xor
movl
add
movl
cmp
jne
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
or
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
xor
or
dec
mov
jmp
mov
xor
adcl
add
movl
cmp
jne
xor
add
sub
mov
xor
mov
incl
xor
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
sbb
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
adc
xor
xor
mov
andl
sub
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
not
mov
mov
subl
mov
andl
movzwl
add
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
adc
mov
subl
mov
xor
add
xor
mov
mov
xor
sbbl
add
andl
xor
subl
sub
orl
mov
subl
movzwl
sub
movl
cmp
movl
mov
movzwl
movl
jg
xor
sub
adcl
sub
mov
jmp
notl
xor
lea
mov
mov
mov
not
mov
movl
cmp
movl
je
movl
mov
movl
movl
movl
jmp
mov
cmp
jne
mov
mov
movl
movl
mov
movl
mov
mov
mov
mov
mov
mov
mov
movl
cmp
movl
jne
addl
mov
sbb
mov
xor
xor
mov
add
mov
movzwl
subl
not
sbbl
and
mov
movl
mov
jmp
andl
xorl
mov
notl
pushl
adcl
call
xorl
test
movl
je
jmp
movzwl
mov
cmp
jne
movl
mov
movl
movl
movl
jmp
movl
mov
movl
cmp
jne
sbb
mov
andl
mov
movl
xor
xorl
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
jmp
mov
cmp
jne
mov
movl
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
mov
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
andl
mov
sub
push
mov
add
push
call
incl
cmpl
jb
mov
mov
mov
mov
mov
movl
movl
mov
xor
add
mov
movl
movl
mov
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
lea
mov
je
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
call
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
and
movl
mov
orl
mov
adcl
add
sbbl
xor
movl
cmp
movl
jne
xorl
jmp
lods
inc
movsl
es
lods
inc
pop
push
cmpsb
mov
rcl
jle
fbstp
jle
push
pushf
ss
mov
sahf
mov
cmovle
movsb
outsl
or
test
icebp
add
or
xchg
push
add
movsb
add
test
xchg
popa
inc
inc
imul
insb
ret
out
andl
in
aam
movsl
lds
repz
sub
lret
xchg
dec
inc
mov
jno
loopne
xchg
loope
push
fimuls
lods
repz
xor
sahf
mov
xor
fs
jp
push
fbstp
repz
dec
mov
push
int
mov
mov
popf
fiadds
adc
jne
sbb
mov
sahf
scas
and
outsb
or
dec
mov
out
adc
imul
stc
scas
pushf
call
repz
jae
pop
add
fidivs
xchg
add
push
inc
andl
pop
xchg
add
fcompl
movsl
mov
aaa
xchg
push
adc
sbb
sbb
popa
insb
push
rorb
negb
dec
push
jl
shlb
pop
insb
xchg
xor
or
add
aam
push
fnsave
jns
out
scas
jo
pop
or
nop
or
andl
jmp
or
jecxz
es
lret
lods
clts
push
inc
lret
in
cmc
xlat
push
and
sub
lcall
iret
xor
aas
jno
push
and
cltd
sub
mov
jl
cmp
and
lahf
pushf
popa
xor
insb
dec
rorl
or
pop
repnz
mov
mov
xlat
pop
sbb
mov
pop
xchg
lahf
inc
ds
aaa
adc
clc
pop
mov
iret
cmp
loope
bound
jbe
popf
into
mov
stos
push
push
sbb
test
jecxz
shlb
mov
test
cli
xor
add
mov
addr16
movsb
testb
jb
das
cmp
cmp
jnp
mov
push
std
cmp
std
stos
imul
push
lods
leave
ljmp
das
inc
test
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
sub
add
and
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
jmp
mov
pop
outsb
adc
jnp
xor
shl
mov
jle
fbstp
jle
shll
lea
or
fs
sub
lea
pop
mov
popa
xchg
stc
or
pop
mov
or
dec
adc
or
xor
aam
arpl
xor
and
aaa
and
test
mov
lods
inc
pop
xchg
aas
xchg
shrb
add
loop
gs
into
popf
mov
rcrl
enter
jbe
dec
cmp
out
ljmp
scas
insb
pop
insb
sub
lret
sarb
leave
adc
xchg
rcl
sub
jb
clc
pop
addb
movsb
push
add
shl
cmp
pop
shll
mov
test
and
or
mov
adc
push
scas
divb
mov
repnz
jge
or
aas
jge
ret
pop
sub
ret
imul
sub
in
mov
clc
leave
mov
bound
and
jl
cs
or
addl
pop
add
mov
out
mov
fidivs
shll
or
push
ja
jmp
test
mov
and
xchg
push
ljmp
imul
push
xlat
mov
add
in
mov
cli
mov
loop
out
adc
pop
mov
movsl
mov
repnz
push
stos
test
jge
js
divl
mov
stc
sub
lock
sbb
and
loopne
sub
adc
mov
pop
pop
xlat
rolb
mov
sbb
test
lahf
dec
or
loopne
leave
arpl
xchg
cli
sbb
or
ljmp
shrl
or
imul
fnsave
mov
jmp
mov
push
jne
lds
aad
push
mov
test
outsb
xchg
inc
mov
roll
xchg
mov
push
xchg
lret
adc
dec
mov
outsl
lds
xor
xchg
push
mov
xchg
xchg
orl
cli
add
sti
pop
mov
or
inc
pushf
jl
lret
ret
decl
ja
popa
or
fwait
adc
sbb
mov
sbb
xor
fidivrs
xchg
or
push
add
ret
push
mov
push
inc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
sub
xor
movl
sbb
jmp
imul
jge
dec
jb
jmp
sbb
popa
adc
jg
jle
jmp
dec
test
jmp
outsl
push
inc
mov
roll
cmpsl
or
and
aad
xor
loop
das
jnp
cmpsl
jnp
fs
jns
test
lea
push
add
bound
sub
loope
dec
inc
rclb
enter
sahf
movsb
jns
mov
mov
jecxz
loopne,pn
sahf
lods
xlat
and
scas
fadds
rcrl
jl
jg
sbb
sbb
aas
ljmp
jbe
orb
dec
insl
stc
movsl
outsb
in
adc
lcall
lods
push
inc
sarl
adc
cmp
xlat
jb
dec
xor
outsl
dec
mov
in
lahf
das
dec
or
pop
shrl
jge
mov
inc
xor
jne
push
js
loopne
mov
xor
adc
test
mov
mov
fisttpl
lcall
div
movq
loopne
mov
flds
out
push
divl
mov
cmp
pop
fsubl
and
in
jae
xchg
or
lcall
mov
push
int3
mov
das
sub
ret
imul
cmpsl
shlb
enter
int3
andl
pop
aam
jns
mov
inc
mov
mov
xchg
jae
pop
dec
ss
jmp
lret
lea
fistl
fcomps
inc
mov
out
popl
xchg
adc
outsl
lods
loopne
jb
dec
ret
sbb
and
clc
push
xor
in
mov
loopne
test
scas
add
mov
fistps
dec
and
sub
cld
xor
mov
push
or
mov
add
mov
xor
xorl
xor
dec
mov
add
addl
add
imul
mov
movl
cmp
movl
jne
mov
mov
jmp
fisubrl
cld
mov
adc
push
jge
loop
in
jle
pop
jg
jle
push
mov
mov
icebp
mov
aas
idiv
test
arpl
mov
dec
ja
jmp
ret
inc
sub
sbb
xchg
lcall
lods
movsb
popf
insl
add
cmp
pushf
stos
loop
dec
add
inc
fsub
test
ss
sub
sarl
inc
mov
sbb
adc
add
mov
mov
loope
mov
xchg
call
pop
roll
and
rcl
aaa
lret
lea
sbb
xor
in
mov
sbb
pop
ja
imul
mov
out
or
mov
adc
fiaddl
popf
adc
jae
enter
fidivrs
mov
or
mov
mov
adc
lret
push
iret
ret
xchg
shll
test
insb
test
lcall
lea
ss
dec
hlt
inc
ljmp
jnp
js
int3
adc
popa
popf
data16
outsl
xor
xor
pop
cs
notb
loope
sbb
cmp
clc
insl
cmpsl
mov
xor
push
hlt
pop
jmp
cmp
mov
add
stos
sub
mov
mov
and
sbb
mov
pop
loop
movsb
lcall
add
in
dec
jecxz
mov
jb
ds
stc
ficompl
in
data16
imul
data16
push
ljmp
xor
or
cs
in
sti
leave
mov
cmp
mov
clc
cmp
jbe
enter
mov
int3
fwait
stos
scas
xor
xor
add
jmp
pop
icebp
lds
fs
xchg
imul
pop
push
out
jle
pop
jg
jle
mov
sbb
arpl
dec
ret
or
aad
mov
add
ret
call
std
mov
xchg
outsl
repz
addr16
dec
push
subb
inc
push
das
les
in
dec
lahf
pushf
adc
sbb
jae
and
cs
cmp
xchg
sub
jmp
sub
pop
cmp
jp
test
jbe
addr16
and
pop
repz
ficoms
bound
pop
push
sahf
fucom
fcmove
mov
jae
idivl
rorl
aam
dec
mov
stos
xlat
scas
and
mov
lret
inc
and
push
xor
mov
imul
movsl
nop
call
cli
pop
std
push
add
add
ficoml
lea
inc
mov
jmp
call
push
fwait
cmpsb
loopne
addl
aaa
cmp
repnz
sbb
cmp
push
popf
daa
and
lock
push
dec
dec
sbb
and
pop
mov
and
cmpsb
xor
lods
loope
jb
lods
jne
loopne
outsl
push
adc
in
xchg
or
sbb
iret
pop
aam
xor
arpl
dec
mov
int
cmp
and
insb
shlb
icebp
sbb
inc
fsubp
mov
mov
lret
cmp
loop
test
movsb
push
and
lods
mov
in
jl
rcrb
add
dec
test
jo
jecxz
sahf
or
movsb
cmp
inc
jecxz
jne
adc
cmc
adc
cld
cltd
mov
dec
int3
sub
insb
dec
jp
jns
popa
cmpb
cmp
or
mov
aaa
repz
push
ss
add
imul
jmp
mov
mov
mov
mov
mov
jmp
aad
outsl
mov
std
jge
outsl
stos
lock
mov
jle
jg
jle
jae
adc
ret
inc
lods
jle
clc
pop
iret
popf
mov
cmpb
jo
xchg
jne
fwait
out
cltd
out
aam
pop
sti
aad
adc
je
out
or
jo
inc
mov
add
outsb
iret
test
rcll
in
add
cmp
shll
inc
mov
fs
in
lcall
mov
xlat
arpl
mov
aas
out
addr16
nop
mov
jno
fmuls
pop
xchg
movl
testl
cwtl
hlt
sbb
xchg
bound
pop
lret
sbb
fdivs
jge
dec
rcll
mov
adc
inc
cld
out
cmp
mov
icebp
add
fiaddl
lcall
enter
pushf
pop
mov
ljmp
aaa
sbb
mov
cmp
adc
push
cmp
inc
cwtl
jne
dec
xor
jbe
xor
and
cmpsl
inc
xchg
mov
stos
outsb
or
inc
or
inc
jecxz
dec
arpl
out
jnp
cltd
out
enter
sbb
andb
mov
sub
lods
mov
insb
ja
adc
sub
fs
jo
sbb
fcomps
adc
sarl
clc
pop
mov
jge
call
sub
jo
movsl
icebp
jne
xchg
lods
push
dec
loope
jns
jp
sbb
dec
sti
in
clc
xchg
into
add
push
pop
and
cmp
and
xor
mov
xor
push
push
xor
hlt
mov
sub
mov
std
mov
sub
fwait
shrl
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
jmp
faddl
insl
jns
pop
xchg
xor
loop
jle
jg
jle
xchg
mov
or
in
xchg
mov
out
aad
pop
push
or
lods
lret
jmp
and
popf
push
scas
lahf
and
sbb
sahf
lret
sahf
pushl
dec
movsl
xor
out
dec
push
jecxz
adc
mov
add
int
pop
and
ret
cmp
fwait
mov
outsl
mov
daa
cmpsl
mov
inc
shrb
movsl
pop
dec
sub
dec
xchg
js
or
shlb
mov
push
sub
dec
push
xchg
pushf
cmpsl
jae
mov
or
cmp
push
mov
popa
hlt
push
and
jo
mov
jns
mov
cmpsl
je
ficoms
pop
daa
icebp
lods
push
and
fs
mov
mov
nop
loope
aas
sub
fdivl
sti
mov
int
ss
inc
xchg
xor
imulb
pop
pop
jno
push
push
pop
scas
lahf
repnz
adc
sti
pop
inc
push
jne
push
add
popf
inc
jns
cmp
sbb
repz
mov
movsb
call
sbb
int3
stc
xor
fidivrl
mov
xor
jg
adc
ret
shlb
xchg
in
mov
cmp
cmp
or
sub
push
and
rcl
add
scas
mov
gs
pop
out
cld
sub
inc
out
add
scas
hlt
sbb
fwait
inc
sbb
xor
negb
cs
push
iret
push
and
stos
dec
and
out
pop
stc
into
sbb
sbbl
leave
mov
ja
out
aas
xor
jns
leave
ret
push
mov
sub
mov
mov
sub
imul
jmp
adc
inc
and
scas
add
cmp
in
jle
jg
jle
mov
aaa
push
push
in
test
fisttps
adc
in
mov
stos
push
mov
and
jle
push
testb
dec
cld
or
lds
jne
mov
subl
add
lar
fs
ret
push
in
lcall
push
sub
or
orl
pushf
insb
packssdw
dec
xlat
adc
fwait
loopne
out
aas
std
addr16
push
das
pushf
xor
daa
sub
mov
addr16
pop
in
jp
jl
mov
xlat
sbb
sub
cmp
add
lcall
inc
xlat
cmp
outsb
dec
mov
ds
push
adc
paddusw
imul
sahf
jno
xchg
addr16
lock
adc
or
sbb
sbb
imull
and
add
testl
test
xor
daa
inc
arpl
mov
jno
pop
mov
cmp
sahf
scas
gs
roll
sub
push
adc
fildll
incb
or
jmp
jecxz
xor
add
fs
shlb
mov
xor
add
adc
add
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
movl
or
mov
push
add
mov
mov
sbb
xor
mov
sub
mov
xorl
add
xorl
mov
mov
xorl
push
subl
push
andl
test
movl
je
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
and
mov
mov
movzbl
xor
imul
or
mov
xor
add
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
dec
mov
xchg
sub
xor
jmp
mov
add
aad
jl
mov
or
mov
jg
jle
lds
xchg
jns
lret
cmp
out
mov
fprem1
loop
adc
add
mov
jno
gs
shl
pop
les
lds
data16
mov
jnp
ljmp
add
mov
jmp
xor
lods
xchg
xchg
rcrl
mov
sub
fld
xorb
sbb
enter
popf
les
mov
mov
or
mov
pop
fnstenv
cli
lds
test
rcl
jmp
sub
arpl
dec
push
unpcklps
mov
dec
mov
and
mov
es
and
cmp
enter
xchg
shrl
push
arpl
jle
cmp
out
ljmp
in
jnp
fstpl
mov
mov
cwtl
scas
clc
sbb
cwtl
inc
rcr
pop
cmpsb
pop
add
xchg
xchg
push
mov
outsb
inc
mov
fnstenv
outsb
rcrb
inc
test
stos
or
jl
mov
push
jmp
mov
push
cli
mov
and
mov
or
jmp
gs
xor
pop
xchg
lods
mov
data16
jle
aas
jg
jle
inc
pop
push
pop
push
out
xor
mov
imul
mov
sbb
sbb
cmc
and
inc
adc
jo
movsl
or
adc
rol
pop
and
int3
push
lea
scas
sbb
addr16
shlb
bound
je
ds
int
sub
cli
push
rcl
fcoms
aad
js
bound
push
into
lods
lret
xchg
aad
cmp
outsl
insl
subb
out
sbb
imul
jp
mov
aam
and
test
out
pusha
mov
xchg
gs
ret
stc
out
push
sarl
inc
and
adc
mov
mov
mov
sbb
pop
pop
sbb
adc
adc
out
imul
enter
hlt
sti
mov
or
mov
push
adc
out
inc
in
xor
icebp
sub
cld
lea
mov
pop
test
dec
int
popa
mov
sarl
call
push
mov
or
jb
or
jmp
dec
addr16
bound
mov
adc
stos
xchg
cmc
into
arpl
repz
jne
sbb
mov
xor
mov
negl
xor
sbbl
xor
add
mov
mov
mov
je
xor
mov
xor
xorl
jmp
mov
inc
aam
push
mov
andb
ds
jle
aas
jg
jle
mov
inc
cmpsl
cmp
sbb
or
mov
pop
mov
pop
or
pop
int
add
pop
jnp
mov
xor
push
movsl
repz
in
add
in
inc
adc
stos
push
pop
cmc
popf
inc
es
mov
adc
cmpsb
rolb
test
mov
jl
pop
pop
or
sub
mov
sbb
cmp
and
sub
into
nop
outsl
mov
aas
mov
add
out
shlb
je
shll
pop
dec
out
rclb
ljmp
mov
jle
shl
hlt
xchg
loopne
repnz
repz
daa
xchg
jmp
sbb
cmp
or
outsl
cmp
daa
jp
fmuls
cli
stos
out
int
cmp
outsl
repz
fsts
into
jb
cmpsl
movl
lahf
aas
push
mov
ja
mov
jns
nop
test
sbb
or
cmp
mov
std
mov
movsl
inc
pop
fidivrl
mov
or
jge
xor
int
in
jl
xchg
imul
arpl
ret
movl
cmp
movl
jne
orl
pushl
call
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
call
cmpl
jb
mov
xor
mov
addl
xor
jmp
jns
mov
pop
insl
jns
lods
iret
loopne
cltd
cmpsl
pop
ud0
jle
aas
jg
jle
jp
out
lock
adc
aad
mov
sbb
add
cmp
adc
out
jo
int3
or
mov
sbb
addr16
cmp
std
or
aas
sub
xlat
mov
js
mov
xchg
dec
inc
stos
jge
push
push
popl
int3
push
mov
add
mov
add
inc
popa
xor
aam
or
rolb
and
jle
sub
mov
dec
xchg
sub
and
jno
inc
lea
in
cwtl
sbb
pop
test
push
mov
inc
xlat
not
jnp
adc
popa
mov
mov
divl
xor
sahf
ficompl
shrl
add
pop
and
out
stos
jle
cmp
mov
jbe
inc
je
cld
mov
add
popa
repz
push
cwtl
sub
out
enter
sbb
es
rcll
and
xor
aad
mov
xchg
adc
cltd
and
adc
lods
in
ds
xchg
popl
cltd
lahf
int
add
sub
fwait
xchg
cld
jg
sbb
sbb
lahf
cld
rorb
movsb
sub
add
cmp
movl
je
sbbl
pushl
andl
pushl
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xorl
mov
add
mov
xor
orl
add
cmp
movl
je
add
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
sub
mov
jmp
fldl
xor
cmp
add
jle
aas
jg
jle
mov
pusha
ljmp
xchg
adc
and
leave
daa
cwtl
out
rol
outsl
clc
sbbl
dec
pop
movzbl
rcr
xor
popf
mov
call
test
out
jg
cmp
popa
movsb
add
jmp
in
inc
movsb
xchg
push
jmp
or
xor
jno
or
push
cmp
test
imulb
ret
mov
je
fsubl
add
push
sub
fistps
leave
adc
cmpsl
dec
std
pop
and
sub
cmp
or
cmp
es
scas
xchg
push
bound
mov
loope
mull
adc
fwait
rol
xchg
add
inc
mov
fists
ret
js
pop
jg
sbb
or
gs
fisubl
sub
mov
into
mulb
mov
mov
cmp
add
aam
xacquire
mov
pop
and
in
gs
push
stos
adc
loop
test
pop
sub
loope
xor
fsubrl
shll
adc
test
pop
dec
fmuls
jo
inc
in
mov
sbbl
jmp
fmull
cld
popf
mov
scas
adc
jle
aas
jg
jle
jb
xor
xor
adc
xchg
jmp
adc
xchg
ljmp
call
xor
add
mov
pop
mov
std
in
popa
das
cmp
mov
xchg
subb
push
daa
daa
inc
mov
ret
jb
push
mov
mov
movsl
xlat
sbb
test
imul
popf
ljmp
js
sbb
jne
and
push
mov
jno
dec
push
inc
xor
jg
testb
and
jns
pusha
push
jecxz
add
pop
add
jo
inc
xor
sub
mov
out
loopne
cmpsl
bound
or
fiaddl
arpl
push
jge
out
xchg
inc
int
mov
fiaddl
fwait
in
js
pushf
inc
jno
lock
imul
js
mov
aas
shlb
dec
mov
outsl
movsl
mov
pop
mov
in
ret
push
stc
mov
adc
xlat
jp
mov
mov
jno
fisubl
xor
mov
xchg
out
mov
pusha
inc
fsubl
js
notb
je
sub
shrl
cmp
mov
enter
jns
sbb
inc
add
or
inc
add
mov
mov
orl
mov
add
mov
xor
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
pushl
push
call
cmpl
jb
mov
mov
add
xor
jmp
xchg
leave
popa
jge
jge
fldenv
test
lods
gs
xor
jle
aas
jg
jle
jl
mov
push
movsl
rcrl
add
adc
inc
pop
push
hlt
nop
xor
out
insl
js
xchg
xchg
lds
mov
inc
mov
and
out
pop
mov
sbb
shrb
call
dec
xchg
cwtl
mov
xchg
mov
push
push
pop
call
insb
test
shll
sub
mov
loopne
rorl
add
imull
pushf
push
lods
test
stc
jnp
fs
insb
adc
stc
lcall
iret
sbbb
outsl
fwait
enter
mov
lahf
xchg
ljmp
cmpsl
add
lock
pop
push
push
je
lret
jb
xchg
inc
jbe
sub
xlat
outsl
adc
add
push
sub
cltd
xor
sbb
mov
into
sub
lcall
fscale
clc
arpl
stc
xor
inc
push
scas
jb
pop
push
xchg
jae
add
repz
in
adc
xchg
insl
cli
sbb
xchg
movsl
insl
mov
loop
add
test
loope,pt
insb
dec
push
push
addr16
in
dec
jne
xchg
push
insb
push
aam
push
or
inc
imul
popl
dec
in
mov
mov
add
jmp
lea
pop
imul
jle
aas
jg
jle
pop
adcl
mov
sbb
push
or
pop
inc
and
or
loop
push
les
sbb
in
push
jb
dec
repz
aad
das
lock
push
call
cli
scas
outsl
ficoml
jp,pn
push
sbb
mov
or
mov
pop
jo
push
push
mov
mov
xor
cmp
out
std
cmp
cmp
into
arpl
mov
jo
imul
push
arpl
xchg
lgs
insw
gs
xchg
pop
ds
xchg
add
adc
pop
test
cwtl
jl
je
mov
jmp
cmc
aad
lds
lods
mov
dec
xor
mov
mov
repnz
xchg
lock
cmc
jg
cmp
out
dec
enter
lods
ljmp
pop
sub
xor
mov
xor
in
cmpsl
rcrb
xchg
mov
xorb
ljmp
loope
divb
jecxz
ret
and
repnz
jo
insl
jbe
sarb
lahf
mov
pop
add
add
stos
ja
popf
stos
and
sti
push
rclb
shlb
jle
pop
jecxz
out
inc
push
inc
adc
arpl
dec
mov
test
adc
sti
cmp
xchg
sub
jle
mov
cmp
insb
repnz
pop
push
and
ss
and
push
ret
out
stos
jo
jmp
mov
pop
adc
test
ss
mov
shl
mov
jo
arpl
jbe
stos
mov
fistl
mov
xchg
and
scas
ss
adc
mov
les
or
sbb
stc
push
shlb
repnz
in
mov
jno
fstp
jmp
sbb
test
mov
or
inc
xchg
movsb
adc
in
sti
std
and
mov
jb
jecxz
mov
push
push
push
fsts
cmp
shr
cld
or
scas
dec
or
mov
mov
jns
add
mov
mov
sbbb
out
inc
jne
mov
out
int
fs
xor
cwtl
xor
jl
inc
int3
shl
dec
push
ja,pn
mov
xor
outsl
lret
mov
push
cmp
jge
aad
ss
inc
subl
leave
mov
push
pushl
pushl
call
mov
jmp
push
sahf
sbb
fdivrl
or
cmp
jne
jle
aas
jg
jle
mov
xchg
in
or
ret
inc
movsb
add
stos
inc
jns
jb
push
fcoms
mov
add
out
popf
mov
and
es
lea
mov
mov
xor
add
cmp
sbb
sarl
das
sub
loope
test
fldt
dec
cmp
xchg
scas
gs
icebp
mov
fisubrs
mov
and
ljmp
add
call
jb
pushf
je
stos
outsb
sbb
xlat
jb
hlt
pop
push
mov
sahf
and
cmpsl
insb
leave
add
aam
mov
outsl
dec
lds
sub
into
xor
je
pusha
mov
fistps
test
cmp
fldenv
mov
or
dec
ret
jle
cmpsl
test
pop
adc
or
cwtl
shll
fs
inc
fs
aas
into
sbb
cmpsl
enter
lods
lea
mov
mov
and
and
mov
pop
pop
sub
leave
dec
dec
test
hlt
shlb
mov
orb
sbb
push
in
fimull
or
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
jmp
pop
mov
jl
xchg
movsb
jbe
push
pop
ss
aas
jg
jle
push
dec
inc
add
dec
repz
pop
mov
aam
jg
mov
ljmp
ss
addr16
sbb
cli
leave
lods
and
adc
insb
mov
cmovle
inc
ret
scas
insb
hlt
lret
xchg
into
or
idivl
or
shll
fcomip
jae
mul
ret
or
jg
lods
cmc
inc
xor
sbb
cld
addr16
shll
loop
aaa
sub
iret
movsb
push
xchg
insl
fldcw
push
inc
jno
xor
out
cmp
loopne
lock
scas
push
or
xchg
sarl
popf
cmovb
pushf
aad
xchg
push
mov
xchg
ret
rorb
push
mov
in
rclb
cmpb
arpl
aas
bound
arpl
sbb
daa
mov
les
jge
test
es
sbb
push
sub
leave
movsl
mov
mov
test
push
cmpsl
push
std
mov
jnp
inc
sbb
loop
jmp
jb
jae
insl
insb
idivb
mov
inc
and
jns
es
sub
mov
mov
add
mov
mov
test
je
mov
push
pop
push
jmp
stos
xchg
fwait
adc
hlt
lcall
jle
aas
jg
jle
test
cmp
imul
and
mov
sub
adc
hlt
xchg
int3
incb
or
push
fdivl
sbb
inc
bound
pop
xlat
mov
js
stos
dec
xorl
fcmovb
mov
fisttps
cmpsb
clc
xchg
and
xor
mov
clc
in
cmp
xor
xor
jno
lods
xchg
and
push
pop
push
fwait
sub
nop
fsubs
mov
jns
pop
sub
push
insb
ja
xor
out
mov
add
push
mov
cltd
inc
xlat
inc
jnp
call
outsb
jnp
xorl
xchg
je
dec
jne
xchg
and
ljmp
bound
mov
cltd
sub
in
sub
adc
mov
movzwl
pop
push
jo
pop
ficomps
or
and
sahf
mov
in
mov
leave
dec
push
insl
mov
cmpl
and
xorb
imul
iret
or
jbe
push
mov
xlat
pop
and
dec
popa
dec
and
nop
rcl
fisubrl
cmp
aad
gs
mov
pop
jmp
jmp
and
lods
lret
movsl
sub
stc
dec
hlt
jle
aas
jg
jle
stc
mov
decb
jnp
pop
call
fwait
pop
orl
sbb
xchg
cmp
sbb
int3
push
pop
mov
jp
dec
test
out
xchg
popa
dec
outsl
repz
cmpsb
scas
loop
scas
arpl
les
dec
out
ja
adc
stc
push
test
xchg
or
addr16
mov
out
loopne
shrb
dec
pop
add
jno
add
out
inc
ss
fnsave
pop
subl
imul
jge
dec
sti
pop
mov
ss
scas
sarb
or
faddp
push
sbb
mov
clc
gs
aas
jnp
and
cltd
decb
cmp
out
icebp
mov
mov
adc
sahf
lret
push
xor
xchg
ljmp
adc
shlb
cmp
xchg
imul
cs
out
adcb
je
xor
sbb
loop
pop
jbe
aaa
repnz
pusha
mov
and
repnz
addl
push
pop
push
mov
fidivl
cmp
jge
sub
lret
sub
xchg
dec
mov
imul
sub
mov
jmp
jp
rcr
std
jnp
mov
jl
sub
aas
jg
jle
or
aad
cltd
loope
fs
test
adc
mov
pop
dec
jnp
out
xlat
sub
shll
mov
cwtl
sbb
or
add
cwtl
cld
or
add
cmp
mov
outsl
subl
sbb
inc
es
incl
addr16
dec
xlat
gs
dec
jbe
into
popf
push
rcr
jg
movsb
mov
add
pushf
and
mov
jecxz
push
rcrl
aaa
jmp
add
popa
shlb
adc
aad
ljmp
dec
sub
add
and
mov
aaa
sti
test
in
mov
inc
lds
mov
push
jbe
push
insb
jne
iret
jne
adc
test
outsb
xchg
loopne
into
sub
fsubs
fildl
jne
push
das
lea
xchg
mov
imul
mov
rcl
test
inc
adc
imul
jo
int3
xchg
inc
pop
xchg
mov
mov
pop
dec
fnsave
pusha
loope
jne
dec
sub
out
cltd
adc
imul
sbbb
inc
cld
mov
jmp
test
test
jge
cmp
mov
jle
aas
jg
jle
jnp
xchg
jo
pusha
subl
push
jge
cmp
xor
jmp
outsl
jg
inc
and
enter
push
ss
mov
nop
mov
fisubrl
lea
cmp
and
xchg
push
mov
cld
mov
and
insl
loop
icebp
fwait
push
jl
pop
push
dec
rcrl
mov
cltd
hlt
insl
sbb
xchg
xchg
ja
push
cmpsl
adc
inc
pusha
jge
mov
subl
or
sbb
sbb
addr16
pop
adc
ret
js
sub
orb
pop
and
ret
lds
mov
jno
pushf
sbb
sbb
xor
in
jbe
negb
mov
adc
loopne
ds
inc
adc
add
cmp
ret
les
add
icebp
daa
or
jle
xor
pushf
sub
add
cmp
lret
insl
lahf
add
nop
out
cli
xchg
les
ss
sbb
dec
bound
jle
sahf
pop
outsb
lcall
ljmp
jmp
mov
pop
pmulhw
arpl
sbb
mov
sbb
push
xchg
sarl
ret
add
add
jge
out
mov
leave
decl
jg
jle
int3
xchg
loope
aad
jecxz
mov
shll
mov
and
loop
jecxz
push
inc
mov
cmpsb
mov
jmp
fnstcw
fmul
cs
sbb
stos
sarl
xchg
cld
pop
sbb
push
push
aam
sub
jae
repnz
imulb
ljmp
pushf
sbb
push
bound
mov
dec
adc
addr16
addl
int
nop
pop
vpmacssww
jge
cwtl
xor
mov
iret
dec
stos
insb
lods
inc
ds
es
popf
xchg
scas
popf
enter
inc
repz
xor
aad
inc
xor
pop
xchg
pusha
insb
lahf
cmpsb
pop
and
stos
sbb
cltd
iret
scas
inc
mov
and
xor
jns
ja
ret
loopne
scas
lock
aad
out
test
mov
aam
or
jae
adcb
push
jmp
sbb
rorb
stc
or
shll
sahf
cmp
fxch
mov
or
sub
or
push
scas
add
mov
sbb
dec
sbb
inc
ds
push
adc
cmp
cli
mov
jmp
inc
or
add
mov
imul
mov
jmp
inc
sbb
gs
jae
ljmp
jle
jg
jle
fsubrp
cld
shll
jo
cld
sbbl
and
cwtl
mov
jo
sbb
mov
push
dec
add
cmp
gs
out
mov
add
xchg
rcrb
data16
and
ds
mov
lods
mov
enter
in
lea
pop
mov
fstps
sbb
xchg
fwait
add
testl
in
popf
or
loop
push
lahf
or
rcll
inc
or
cmpsb
notb
push
repz
cmp
aas
push
cmp
pop
rorb
rclb
sub
inc
push
jne
fildl
push
sbb
push
shl
dec
jmpw
cmp
stos
cli
mov
mov
mov
fadd
inc
pop
xchg
jecxz
sub
add
arpl
iret
enter
scas
movsb
cld
dec
pop
je
loop
scas
sbb
or
aad
bound
loope
xchg
ficompl
les
movsb
fisubs
cli
dec
mov
movsl
outsl
cs
hlt
cli
lret
and
fld
push
sbb
sub
out
nop
add
out
fs
push
pusha
cmp
out
jae
mov
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
jmp
jno
cmp
jge
in
pop
xor
sbb
dec
movsl
or
jg
jle
add
loopne
lahf
cli
popf
jo
in
ljmp
je
test
imull
or
ljmp
in
sub
fcoml
sub
and
int3
jmp
inc
mov
xchg
aas
fstpl
pop
std
mov
shll
fstl
mov
imull
test
scas
cmc
mov
shld
cwtl
cmp
cwtl
push
rolb
leave
fs
lods
pop
pop
xor
dec
paddd
rcrb
mov
adc
out
sti
stos
dec
daa
lods
push
rorb
rcr
cld
scas
mov
push
adcl
mov
popa
jns
rorb
jnp
movsl
push
mov
ja
pop
push
jecxz
int3
pop
mov
test
cmpsl
dec
add
sti
lret
add
sahf
stos
cld
jns
adc
fcmovnbe
or
add
cmp
add
cmpl
std
cmp
jge
pop
in
push
jmp
push
xchg
into
out
jnp
mov
inc
inc
fimull
fucom
in
add
outsb
in
out
sbb
sub
jne
mov
dec
xchg
clc
cmpsl
enter
nop
fcomi
scas
pop
in
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
jmp
cs
jecxz
jnp
aad
lock
enter
into
mov
aas
jg
jle
xchg
ret
xchg
outsb
mov
sbb
jecxz
mov
sbb
jmp
xsha256
cmpsb
xlat
sbb
inc
sub
xchg
test
clc
jae
xor
inc
pop
jno
hlt
fsubl
cmp
fadd
shrl
pop
cmp
call
iret
cld
inc
push
repnz
cmpsb
enter
mov
inc
lcall
or
mov
cmp
test
mov
cli
fs
das
daa
test
mov
add
sti
push
and
mov
out
jns
pop
or
pop
inc
jns
test
pop
out
or
rcrl
insl
repnz
xor
jge
cmpsb
dec
lahf
cwtd
xor
shl
test
xor
jl
jne
fisubrl
daa
push
adc
lcall
or
push
sahf
xchg
dec
push
jg
decb
lods
popa
arpl
jle
daa
mov
into
inc
xlat
stos
sbbb
gs
rcrb
out
dec
testl
ljmp
pop
push
or
push
adc
mov
fcomps
mov
push
addl
adc
roll
imul
jmp
into
jb
pop
inc
pop
fisttpll
push
lea
aas
jg
jle
aam
and
push
pop
in
jo
sub
popf
pop
mov
pop
sahf
fdivrl
inc
pop
ror
mov
push
adc
pop
cmc
frndint
insl
mov
push
mov
das
and
sub
stos
cltd
cwtl
xchg
dec
cmpsl
xorb
xchg
sbb
aas
inc
shr
imul
addr16
cwtl
mov
dec
xchg
or
and
imul
or
das
or
into
fimuls
cmpl
lock
insl
andps
add
mov
test
lea
out
das
les
inc
icebp
dec
xchg
mov
xchg
and
filds
adc
cwtl
iret
mov
arpl
mov
push
addl
data16
push
gs
mov
das
mov
int3
gs
jnp
mov
xor
cmp
dec
add
mov
sti
and
pop
paddusb
lcall
mov
sbb
push
jb
push
mov
mov
lahf
xor
xchg
fmuls
add
mov
sbb
mov
jg
and
adc
and
pop
pop
int3
pop
or
pop
add
dec
xor
mov
jmp
out
cmp
jp
sti
inc
aaa
mov
push
pop
inc
mov
aas
jg
jle
jb
inc
jl
pop
or
mov
inc
inc
jo
leave
leave
pop
pop
es
rorb
nop
pop
or
int3
jecxz
or
test
pop
push
popf
pop
inc
fisubs
xchg
dec
je
inc
lock
add
into
lods
dec
and
shl
push
je
daa
movsb
jmp
mov
icebp
jge
in
jno
mov
mov
mov
mov
ljmp
loope
adc
out
pushw
mov
sbb
fistps
mov
cmc
rcll
fnstsw
dec
and
sub
mov
xchg
pusha
lds
mov
or
inc
sub
or
out
js
shl
inc
xchg
les
xchg
jmp
push
adc
sbb
xchg
and
jno
stos
in
fsubs
in
pop
push
push
cli
das
daa
xor
xchg
arpl
pusha
js
cmp
add
sub
xor
icebp
aad
push
sub
pop
xchg
dec
xchg
popf
pop
jns
cmc
sarl
scas
in
pop
roll
ss
imul
or
xor
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
jmp
xchg
pop
mov
cmp
push
mov
jle
aas
jg
jle
push
cmp
xchg
es
push
fadds
pop
add
fldcw
adc
ret
or
pop
inc
push
mov
leave
loope
in
push
mov
sti
loopne
aam
sub
incl
jge
jge
int
mov
dec
cmp
mov
sub
pushf
mov
popl
fnstsw
push
and
push
xor
pop
outsl
lock
add
cmp
sbb
pop
inc
lcall
dec
or
dec
adc
mov
repz
inc
mov
fldl
dec
push
scas
lods
lahf
repz
shr
dec
adc
push
inc
and
out
out
fdivrs
push
cwtl
pop
lahf
pop
cmp
shlb
roll
mov
add
mov
sbb
dec
mov
je
cmp
jbe
jge
aaa
aad
lods
sbb
lea
cmpsl
push
cwtl
mov
mov
xlat
andb
out
and
pusha
test
adc
bound
clc
dec
inc
sbbl
jl
test
test
cmp
test
jle
aas
cs
sbb
lods
jg
adc
gs
call
push
test
jecxz
shll
fucomi
pop
add
add
arpl
imul
mov
cmpl
xchg
ret
sub
clc
xor
cmc
pop
outsl
push
popf
call
shrb
xchg
jbe
pop
push
dec
test
ja
push
cmp
adc
je
jns
fwait
int
es
aam
test
xchg
pop
sub
bound
sbbb
sbb
pushf
cmp
mov
ds
lods
push
les
xchg
mov
sbbl
dec
or
stc
cmp
dec
in
ss
sarb
scas
nop
outsl
and
push
adc
inc
loope
sub
in
bound
xchg
hlt
mov
and
outsb
pop
out
out
aad
out
loop
sub
mov
cs
imul
das
jge
test
out
mov
push
int3
das
cmp
out
xchg
repnz
or
jge
xchg
scas
and
xchg
add
lea
test
cmp
int
rclb
stos
movsb
stos
or
lea
das
hlt
push
mov
jae
jmp
and
pop
vrcpps
enter
int
dec
lock
push
loop
es
adc
ret
and
sahf
or
and
inc
jmp
jae
aas
mov
cmp
jmp
cmpb
jg
jle
pop
pop
inc
rclb
or
pop
lret
xchg
cmc
mov
sbb
push
xor
es
stos
sbbb
shll
mov
mov
les
sub
ret
push
push
adc
iret
push
add
mov
aad
sbb
sbbb
jo
inc
and
loope
movsb
push
jb
add
jb
jmp
loope
addr16
adc
inc
aam
in
roll
es
ficomps
inc
xchg
xor
mov
sbbl
sub
sbb
rorl
jmp
dec
push
pop
sbb
bound
xchg
mov
js
xchg
mov
rcl
mov
sub
in
mov
enter
sahf
mov
mov
mov
int3
shll
int
mov
cmp
movsb
in
sub
or
xchg
push
popf
or
push
inc
and
lock
or
mov
dec
fidivrl
and
mov
inc
shrb
push
outsb
data16
mov
cmp
pop
adc
test
add
add
pop
add
add
cmp
mov
push
ja
fs
cmpl
jg
jle
xchg
in
inc
push
aad
scas
pop
sahf
mov
out
sahf
mov
or
dec
icebp
push
dec
mov
test
inc
xchg
inc
lea
fsub
adc
pop
inc
mull
pop
test
sub
shrb
push
js
push
and
or
sub
pop
outsl
push
jo
mull
jg
adc
shlb
push
dec
dec
lret
sahf
and
jb
shrl
shll
daa
and
test
sub
add
sbb
dec
aas
sub
jbe
inc
shl
aad
adc
push
ret
push
into
fnstsw
nop
add
rcrb
push
repz
aad
push
push
test
adc
sub
gs
jecxz
inc
les
xchg
addr16
addb
pop
adc
in
stc
xchg
lds
add
outsb
shrb
inc
sbb
xor
sub
and
push
add
mov
cs
inc
mov
pop
mov
sbb
out
xchg
lcall
shll
push
inc
inc
add
pop
push
loop
hlt
add
loope
aaa
aam
sti
pop
xchg
push
mov
fstl
add
sti
lret
jns
rclb
cmp
jle
jg
jle
push
push
mov
int3
rclb
push
cmpb
jns
xchg
pop
mov
aas
fistps
imul
push
scas
push
cmpsb
rsm
fistpl
movsb
ror
int
jne
scas
jns
mov
mov
dec
pop
out
sbb
add
add
mov
lea
cld
mov
add
mov
ret
xchg
and
sub
stos
data16
jp
addr16
jo
lock
dec
js
in
pop
addr16
inc
mov
xchg
std
into
mov
inc
adc
inc
mov
imul
mov
jmp
mov
add
hlt
in
pop
xor
pop
in
out
xchg
orl
and
lods
je
xchg
insl
mov
inc
mov
out
mov
fmulp
cs
mov
mov
mov
pop
das
ret
pushf
mov
dec
cmp
shll
insl
mov
in
cmpsb
mov
sti
mov
dec
mov
sti
or
das
rcrl
das
push
xor
test
fwait
sbb
push
cmp
stc
pop
adc
inc
jb
stos
insl
hlt
testl
insb
insb
test
ss
cmpsb
pusha
fldt
mov
btc
sbb
push
pop
push
pop
inc
xchg
jmp
ss
or
mov
jmp
xor
xchg
aas
jg
jle
jg
mov
outsb
aas
mov
test
jmp
lcall
or
sbb
sbb
out
sub
mov
jecxz
fadds
ss
and
loope
push
xchg
sub
mov
inc
push
xor
ret
xchg
aas
xchg
cmpsl
mov
leave
sbb
lods
sbb
in
lahf
repz
jns
insl
sub
shrb
jne
mov
icebp
cmpsl
aam
test
cmp
xchg
xor
lret
lods
sti
negb
inc
jne
xchg
xchg
xlat
mov
cmp
pushf
add
leave
cwtl
mov
inc
jb
bound
imul
push
into
sub
movsl
sahf
and
aam
jmp
aad
or
clc
cmpxchg
shl
scas
mov
lea
mov
fwait
or
int3
sbb
cmp
xchg
loop
ja
push
sub
xchg
cmp
and
imul
ja
imul
sub
aas
cmp
mov
dec
mov
loop
dec
and
insl
xor
fcom
lret
dec
fdivp
pusha
inc
dec
aaa
call
xlat
or
fildll
push
sub
hlt
aas
cmp
dec
dec
mov
push
inc
inc
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
jmp
mov
pop
pop
in
pop
roll
xchg
aas
jg
jle
mov
dec
gs
mov
pushf
int3
fdivrs
dec
mov
mov
dec
push
sbb
in
pop
cld
inc
or
nopl
insb
jmp
jnp
dec
adc
xor
sbb
in
jg
mov
scas
cmc
fldenv
cwtl
push
les
in
popa
pushf
adc
jecxz
repnz
xor
jno
jns
add
shl
ret
inc
sbb
btc
rcll
jp
jo
pop
adc
repz
pop
cmp
add
rol
and
shl
cmc
pop
cmc
dec
jns
aad
frstor
shl
cmp
inc
fcomps
xchg
lahf
jmp
xlat
ficoms
mov
lock
xchg
icebp
mov
inc
adc
push
imul
push
push
xor
jb
jnp
pop
push
movsl
and
inc
sarb
ds
pushf
xor
mov
outsl
stos
call
jecxz
sti
dec
mov
adc
xor
jle
aas
shll
inc
sahf
adc
push
in
or
ret
mov
mov
fs
adc
int3
mov
pop
pop
pop
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
hlt
clc
lret
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
rorl
test
inc
aas
inc
lea
pushl
mov
mov
loopne
ljmp
mov
add
incl
xlat
lea
inc
ljmp
incl
aaa
add
repnz
ffreep
aas
add
mov
incl
or
mov
xchg
roll
mov
cmp
dec
lds
add
adcb
add
add
mov
cld
push
decl
push
mov
call
mov
add
test
ljmp
mov
fcom
add
mov
add
add
add
add
push
inc
push
fisttps
test
add
jecxz
roll
inc
jle
test
jmp
incl
loope
jne
mov
cld
incl
mov
mov
add
call
int3
mov
add
add
xor
mov
cld
jle
push
add
add
inc
inc
mov
decl
add
inc
lret
cld
push
mov
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
pusha
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
popf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
or
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
adc
adcb
or
inc
lret
inc
iret
jb
mov
enter
xor
mov
pushf
lea
add
inc
mov
xor
add
mov
fmuls
xor
mov
aad
pushf
xor
mov
clc
enter
mov
test
clc
incl
mov
test
cmp
pushf
inc
mov
popf
push
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
rdtsc
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
popf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
popf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
sysexit
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
popf
shll
lret
or
add
in
push
mov
arpl
int
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
popf
lret
cmp
call
inc
inc
mov
mov
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
arpl
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
test
clc
inc
inc
mov
sub
mov
dec
arpl
inc
add
dec
arpl
inc
add
inc
add
movsl
pushf
inc
dec
lea
push
xor
pop
lods
incl
mov
rcrb
test
inc
inc
add
pushf
orb
xor
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
rdtsc
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
popf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
sysexit
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
popf
shll
lret
or
add
in
push
mov
arpl
int
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
clc
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
popf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
loope
inc
call
inc
mov
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
sub
test
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
rolb
jne
cmp
pop
mov
push
inc
lea
inc
inc
rorl
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
in
push
push
incl
mov
loope
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
ret
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
in
in
sub
inc
in
push
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
loope
inc
stc
xlat
ss
aas
in
ret
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shr
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
insb
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
add
sub
aad
inc
add
add
xlat
insb
inc
inc
and
dec
add
inc
fnstcw
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
les
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
or
movsl
fiadds
jae
or
loope
inc
xor
pop
inc
shr
inc
and
inc
add
add
out
clc
inc
ret
inc
mov
leave
sub
add
add
sbb
stc
test
lea
mov
dec
int3
mov
movb
dec
ljmp
or
jge
shl
xor
add
rdpmc
sbb
mov
in
cmovne
jecxz
inc
mov
sbb
mov
add
loopne
inc
dec
and
inc
mov
leave
movl
inc
add
inc
xlat
sbb
xor
dec
mov
mov
fadd
inc
rcl
inc
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
mov
cld
mov
mov
pop
sar
cmp
jne
mov
loopne
pushf
jae
add
add
add
jmp
mov
pop
add
add
decl
mov
mov
data16
mov
add
add
data16
ljmp
pop
jle
inc
sbbb
test
jmp
push
jne
lea
movl
sar
mov
loopne
rol
ljmp
push
inc
inc
mov
cwtl
movl
add
add
call
incl
xor
jne
mov
ret
out
mov
push
xor
mov
mov
mov
lcall
and
push
mov
decl
mov
jp
mov
mov
jl
decl
mov
push
decl
orb
xor
call
test
mov
into
xchg
loop
xchg
lods
ret
in
inc
dec
in
xor
add
mov
mov
incl
jno
data16
add
mov
fmull
aam
call
push
mov
xor
add
subl
mov
add
pushl
push
lea
mov
sar
orl
fs
add
add
adc
add
test
inc
incl
dec
mov
mov
push
xor
push
inc
xorl
mov
push
inc
adcw
movl
clc
push
inc
data16
push
pushf
data16
dec
in
test
xor
in
add
decl
mov
lea
push
push
test
inc
inc
mov
push
shlb
test
cs
incl
data16
test
incl
incl
mov
lcall
leavew
xchg
inc
pushl
call
lea
mov
enter
mov
xor
sbb
sbb
dec
mov
mov
movl
mov
mov
sar
sub
mov
add
inc
mov
or
addb
xor
pushf
js
add
mov
inc
xor
lcall
cmp
movl
lcall
dec
inc
mov
mov
mov
nop
ret
add
jne
test
jne
decl
call
sbb
stos
mov
mov
inc
cmp
push
cwtl
inc
add
lcall
test
mov
adcb
add
add
movl
mov
inc
add
cmp
incl
inc
push
xor
add
mov
and
incl
lea
pushf
or
jmp
decl
mov
loopne
movl
sbb
out
mov
push
push
test
mov
cwtl
inc
add
movl
add
add
pushl
or
rorb
cld
sbb
inc
mov
movsb
add
push
movb
jmp
mov
clc
mov
incl
mov
cmp
push
add
xor
add
mov
mov
mov
hlt
movsb
add
add
mov
dec
inc
mov
add
add
add
mov
mov
push
decl
decl
xor
add
push
xchg
inc
incl
jnp
mov
pusha
add
test
decl
ret
add
mov
cli
incl
test
add
or
cmp
add
sub
mov
mov
add
inc
dec
mov
add
mov
inc
push
push
mov
mov
adcl
add
push
add
push
test
decl
mov
sbb
incl
movl
add
add
mov
push
push
test
decl
inc
push
xor
and
call
test
incl
decl
inc
decl
arpl
int
xor
mov
cwtl
pushf
add
mov
mov
incl
adc
addb
adc
push
inc
add
mov
mov
push
adc
mov
mov
addl
incl
inc
cmpsl
mov
add
mov
cmp
movsb
mov
sbb
addb
hlt
add
mov
hlt
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
sub
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
cld
cmp
xor
cld
or
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
popf
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
pushf
call
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
lea
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
xor
pop
jmp
mov
xor
lea
xor
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
popf
pushf
xor
jne
mov
icebp
icebp
shl
mov
pusha
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
cmc
add
dec
hlt
xor
mov
in
jge
mov
dec
xor
inc
hlt
xor
add
icebp
add
mov
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
add
xor
add
mov
cmp
setge
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
clc
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
inc
adc
inc
inc
push
push
jne
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
xor
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
push
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
inc
lldt
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
lret
lret
dec
mov
in
and
or
in
xchg
add
add
push
inc
xor
add
push
push
inc
jmp
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
shlb
add
add
and
fs
inc
test
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
inc
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
inc
popf
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
popf
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
pushf
idivl
cmp
je
push
loopne
dec
mov
int
mov
movlhps
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
inc
icebp
add
add
mov
mov
enter
pop
jne
mov
pushf
mov
sub
cmp
jne
xor
in
xor
movl
clc
add
ret
decl
ss
dec
push
jle
popa
data16
into
arpl
add
mov
push
cld
add
inc
pushf
add
into
ret
pop
push
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
cmp
pop
mov
je
xor
mov
cmp
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
pushf
clc
mov
test
cmp
fs
or
push
mov
push
push
lret
xor
pushf
mov
mov
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
dec
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
push
push
add
add
add
lret
lock
inc
lret
xor
pushf
jge
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
mov
in
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
mov
adc
dec
fisttps
add
ret
lea
add
xor
add
inc
test
xor
push
popf
push
xor
inc
cmp
or
inc
test
xor
in
hlt
push
push
push
push
mov
popf
popf
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
popf
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
leave
call
in
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
push
inc
add
pushfw
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
jne
mov
mov
movl
clc
dec
push
ss
pop
aad
xlat
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
clc
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
popf
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
dec
inc
mov
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
aad
xlat
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
mov
sbb
nop
mov
addl
mov
jne
mov
pushf
push
mov
xor
add
lret
add
rorl
mov
mov
mov
fimuls
mov
xor
mov
or
dec
add
or
out
loopne
jmp
lret
xor
je
mov
mov
sbb
mov
fmuls
mov
mov
mov
sbb
sbb
add
movl
leave
mov
push
mov
add
mov
or
mov
or
inc
add
in
add
mov
adc
xor
adc
inc
popf
mov
push
add
cmp
pushf
mov
dec
fwait
dec
jmp
or
sbb
or
dec
lret
dec
rcl
lret
inc
or
sar
lahf
inc
mov
inc
or
iret
add
mov
adc
inc
add
add
dec
mov
mov
ret
inc
add
push
or
test
test
clc
pushf
inc
mov
lock
inc
mov
test
mov
mov
sbb
scas
dec
mov
xor
jb
add
add
add
mov
or
mov
adc
inc
mov
or
inc
inc
cmp
hlt
inc
jne
mov
inc
bound
clc
push
inc
inc
cmp
cmp
dec
mov
push
idivl
or
inc
inc
add
push
loopne
mov
or
xbegin
mov
or
mov
hlt
inc
inc
mov
xor
add
adc
inc
clc
xor
add
or
dec
test
clc
jb
mov
clc
pushf
inc
mov
xor
shr
add
hlt
mov
push
xor
test
clc
mov
mov
clc
mov
xor
mov
hlt
shlb
clc
fmull
mov
in
icebp
dec
decl
loopne
test
clc
dec
inc
mov
in
dec
push
xor
push
mov
push
mov
clc
cmp
inc
test
add
add
jne
lea
cmc
adc
inc
inc
xor
jb
add
inc
rorl
xor
mov
adc
mov
ret
push
push
lea
cli
add
or
mov
xor
mov
add
jne
lea
lods
psubsb
cmc
lret
inc
xor
add
inc
inc
mov
xor
test
clc
dec
inc
xor
setl
lret
int3
rorl
add
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
loopne
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
or
add
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
call
xor
mov
in
rorl
iret
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
in
or
mov
xor
inc
or
iret
add
cmp
jge
mov
in
add
mov
mov
clc
test
std
iret
decl
xor
mov
in
enter
inc
mov
or
jmp
push
decl
xor
push
jne
mov
in
add
dec
test
dec
add
cmp
or
mov
dec
push
lea
xchg
mov
call
inc
mov
or
mov
iret
movsb
mov
push
xor
cmp
jne
lea
lods
dec
call
cmp
cmp
decl
add
fadds
mov
lock
inc
test
xor
add
sbb
xor
rdpmc
testl
or
mov
rolb
iret
cmp
cmp
xor
decl
mov
add
mov
jmp
orl
pop
inc
pop
mov
loopne
mov
push
rorl
push
add
inc
push
popf
dec
xor
add
adc
adcb
add
or
fadds
call
cmp
dec
mov
ret
mov
adc
add
add
mov
movsb
push
inc
add
adc
xor
add
add
mov
incl
mov
push
inc
decl
call
mov
mov
xor
lea
adc
add
dec
xorb
add
pcmpeqw
mov
pop
push
leave
or
xor
in
adcl
xor
push
dec
in
or
inc
inc
mov
push
and
mov
jb
add
inc
mov
or
jl
sbb
dec
xorb
add
xor
mov
add
dec
dec
adc
push
sbb
inc
push
decl
mov
or
mov
test
jge
xor
pushf
or
push
or
inc
or
jb
call
mov
mov
adc
and
lea
or
ret
je
sbb
mov
mov
je
pop
and
push
and
and
incb
and
pop
adc
in
ret
mov
pushf
incb
jge
mov
cmp
adc
push
decl
adc
mov
into
scas
mov
das
inc
jne
and
and
lea
jb
xor
adc
xor
jne
sbb
.byte
inc
pop
pop
