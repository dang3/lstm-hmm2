push
mov
sub
mov
mov
and
mov
andl
mov
inc
mov
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
subl
push
mov
mov
sub
add
push
mov
xor
xor
mov
sbbl
add
andl
mov
mov
sbb
mov
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
push
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
sbb
mov
mov
mov
sub
add
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
mov
movl
sbb
mov
and
xor
add
adcl
mov
mov
mov
mov
mov
and
mov
adcl
mov
and
mov
xor
push
neg
pop
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
add
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
movl
mov
and
movl
mov
xorl
mov
mov
orl
mov
and
mov
xor
movl
add
mov
adcl
lea
sbbl
mov
mov
or
mov
adcl
xor
add
mov
lea
andl
push
mov
movl
xor
add
andl
push
subl
mov
xorl
push
subl
pushl
xorl
call
andl
mov
inc
mov
cmpl
jb
jmp
push
pushl
pushl
call
cmpl
jb
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
movl
mov
incl
mov
lea
incl
mov
movzbl
or
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
pushl
push
call
jmp
mov
sbb
xor
sub
mov
sub
mov
mov
movzwl
movl
mov
mov
cmp
movl
je
add
mov
mov
sbbl
xor
xor
lea
mov
orl
xor
div
mov
xor
mov
xor
orl
xor
orl
sub
cmp
jne
mov
mov
add
mov
mov
subl
xor
addl
xor
add
add
movl
mov
movl
cmp
movl
jae
and
lea
not
mov
mov
xor
xorl
add
lea
mov
mov
mov
cmp
jbe
addl
addl
movl
jmp
addl
addl
sub
mov
xorl
xor
decl
inc
sbbl
incl
addl
add
cmp
movl
jb
notl
mov
xor
mov
movl
xor
xorl
mov
sub
add
mov
adcl
xor
sub
andl
ror
movzwl
sbb
xor
mov
mov
mov
adc
mov
orl
jmp
pop
mov
pop
mov
add
mov
addl
subl
and
cmp
sub
cmp
jae
jb
fcmovu
imul
jb
int3
bound
lea
xchg
xchg
inc
mov
sub
push
rol
repnz
sub
nop
ss
mov
aad
jb
adc
and
aaa
jo
lods
sub
mov
notb
test
pusha
push
and
cmpl
fwait
dec
or
jecxz
imul
xchg
ss
leave
int
outsb
cmc
pop
imul
or
mov
shll
imul
jno
add
mov
add
inc
mov
mov
addr16
loop
sahf
push
inc
push
mov
lods
push
pop
sti
adc
int3
jne
idivl
insl
loopne
inc
insl
xor
pop
subb
aas
sbb
dec
xchg
repz
dec
cs
push
sub
xchg
dec
fcompl
push
das
mov
dec
sub
push
lahf
int
xchg
sbb
push
cmp
inc
xchg
aas
mov
movsl
or
je
mov
stos
popf
adc
fisubs
sbb
gs
call
into
push
adc
add
scas
and
mov
repz
jns
scas
into
adc
cmpsb
sub
out
mov
sub
push
fildll
lahf
jmp
add
add
out
gs
pop
jbe
sbb
in
mov
jae
mov
or
dec
mov
mov
adc
mov
push
push
mov
fsubr
pop
sbb
faddl
insb
xchg
mov
insl
sub
sbb
sub
pop
insl
cs
mov
dec
jb
popa
sub
mov
cld
push
test
xor
xchg
ret
pop
adc
cmp
mull
enter
or
stos
ffree
jg
jp
jbe
push
lahf
sbb
outsl
enter
scas
nop
xor
cmpsl
push
adc
jp
add
cwtl
dec
pop
cli
insl
add
into
pop
icebp
in
int3
test
sbb
mov
mov
adc
xadd
daa
mov
sbb
adc
in
push
fwait
outsb
loope
ret
lret
in
pop
xchg
and
es
je
inc
mov
aaa
lock
clc
mov
mov
aad
sbb
xchg
push
mov
inc
shlb
loop
cmc
filds
xchg
inc
mov
imul
push
jmp
sahf
and
imull
les
mov
mov
fld1
out
push
and
jb
dec
lea
dec
push
ret
push
or
mov
pop
sub
push
jmp
fnstsw
lret
sbb
jne
pusha
push
mov
out
jmp
sbb
push
or
xchg
roll
jg
pusha
sub
and
add
cmp
pop
ffree
push
dec
pop
mov
idivb
imul
adc
add
icebp
add
rcrl
xchg
cmp
mov
mov
bswap
mov
fimull
mov
mov
addb
sbb
test
sbb
mov
cmp
xor
xor
mov
arpl
pop
add
mov
fwait
sar
scas
mov
leave
lods
pop
fiaddl
xor
popf
fs
xchg
dec
push
mov
int
cwtl
loop
ja
add
lea
lret
xchg
cwtl
cmpsl
fwait
punpcklbw
sub
mov
test
ds
scas
xchg
fidivrl
sub
jp
es
fs
outsl
add
sub
and
add
push
push
mov
or
inc
arpl
xor
insl
xchg
and
add
or
fs
out
cmp
lea
test
mov
push
xchg
and
addr16
shll
jecxz
inc
mov
loop
push
jno
rcl
ljmp
les
jmp
mov
addr16
xor
inc
leave
mov
jne
push
xor
sbb
call
test
sub
fldt
xorb
mov
pop
in
mov
sub
adc
jecxz
mov
shl
pop
popw
lret
xor
mov
dec
push
xchg
mov
add
push
insb
scas
dec
add
xor
adc
shll
sarl
clc
push
jmp
pop
pop
adc
cmp
pop
arpl
xor
leave
dec
jg
mov
ret
mov
loopne
jno
andl
cmp
test
mov
shrl
mov
lea
addl
scas
jae
insl
adc
movsb
xchg
add
adc
fsubp
sbb
xchg
and
int3
cmp
popf
lcall
pop
ds
or
jno
pop
add
dec
adc
enter
test
lret
lods
add
adc
mov
cltd
enter
push
xor
xchg
test
out
dec
clc
sbb
push
loop
imul
ret
imul
mov
ficomps
fwait
pop
ljmp
pop
sbb
xor
fmuls
or
js
aas
cli
test
push
sbb
adc
push
jp
call
leave
dec
jae
jmp
cmp
xor
cmpsb
nop
cmpsl
mov
imul
push
sbb
cwtl
fmull
stos
xor
les
in
cwtl
mov
pop
and
jno
inc
adc
shll
jl
push
sbb
clc
inc
out
mov
in
adc
in
popf
inc
movsl
jp
and
mov
fstpt
insb
mov
xor
dec
jbe
fwait
sbb
int3
fmull
mov
xchg
mov
jb
cltd
or
pop
jo
cmpsb
cmp
sarb
sahf
gs
jmp
fsubrp
mov
imul
inc
pop
and
mov
pop
imulb
adc
xor
push
stos
and
xchg
mov
loope
popf
cmp
repnz
cmp
dec
mov
dec
lret
call
dec
jg
xchg
cmc
xlat
and
cli
add
xor
hlt
add
adc
mov
insb
repz
ss
divl
or
jmp
dec
mov
popf
inc
mov
push
dec
jmp
jl
aaa
fs
jl
lret
lods
dec
hlt
xchg
fs
repz
xor
int3
mov
push
bnd
out
jecxz
lahf
repnz
out
pop
xchg
fmul
insb
xor
jg
test
mov
cmp
cmp
push
mov
cmp
shrl
or
inc
pop
mov
fsubrs
pushf
xchg
inc
jmp
push
cmp
loope
cmpsb
mov
mov
scas
popf
shlb
leave
lds
mov
mov
mov
add
cmp
ret
jnp
push
rcll
js
pop
mov
and
es
mov
jne
pop
inc
cmp
int
adc
pop
xor
mov
jle
sub
sbbb
mov
xor
dec
pop
mov
jns
add
fwait
lea
adc
add
das
addr16
fcompl
stc
mov
call
dec
es
adc
or
push
aaa
sbb
xor
inc
mov
and
xor
xchg
push
cmp
mov
call
mov
sbb
push
adc
adc
mov
mov
cli
in
mov
jo
pop
xor
push
xchg
or
cmp
sar
test
cmp
mov
sbb
pop
mov
dec
rolb
or
nop
ds
push
pop
add
daa
sub
dec
fcomp
ret
xor
loop
arpl
inc
and
jno
fcmovnb
nop
mov
nop
xchg
pop
sti
mov
loop
out
into
call
xchg
fnsave
dec
xor
es
sbb
jns
data16
inc
jns
test
mov
les
ljmp
insl
cmpsb
mov
pop
adc
xchg
xchg
or
loopne
rolb
imul
mov
sbb
mov
jmp
mov
inc
xor
lret
mov
sbb
ret
popl
and
add
inc
es
aad
das
je
mov
mov
lds
sub
push
dec
and
lock
pop
cltd
sahf
enter
daa
xor
jo
addr16
cs
fwait
test
mov
insb
jo
aad
hlt
jmp
daa
jge
xlat
or
sbb
mov
push
arpl
mov
in
outsb
jbe
mov
push
repnz
inc
sbb
popa
sahf
lea
or
pop
sub
pop
sub
push
shl
mov
push
int
push
leave
jne
into
andl
add
dec
add
cmp
outsb
xorb
leave
repz
push
add
icebp
int
and
pop
pop
mov
lahf
pushf
ljmp
cmp
mov
mov
insl
sub
xchg
das
add
sti
inc
xchg
xor
rcll
add
mov
push
inc
cli
mov
lods
test
pop
les
mov
pusha
stos
mov
fcmovnb
test
imul
adc
cmp
sbb
sbb
mov
jecxz
mov
sbb
lods
sub
dec
loope
ljmp
sub
test
xchg
mov
mov
dec
mov
aaa
mov
mov
push
lods
rcr
jno
sub
push
mov
in
pop
push
out
sbbb
pop
xchg
cmp
hlt
mov
notb
ja
fisubs
pop
xchg
out
aam
or
pop
lods
out
pop
outsb
pop
lahf
das
or
pushf
mov
lret
and
lods
adc
roll
ds
iret
iret
jbe
fsubrl
mov
arpl
jecxz
dec
push
lcall
in
ret
inc
iret
xchg
popa
cld
and
pusha
sbb
cmp
lods
in
dec
push
lea
nop
subl
in
jle
loope
stc
mov
push
aas
xchg
loopne
adc
mov
xor
loope
xchg
cmp
adcl
clc
mov
cmp
fstl
loopne
stc
xchg
mov
arpl
jecxz
mov
pop
lea
jmp
jecxz
jp
adc
ljmp
jae
in
and
int
add
push
cmc
and
xlat
push
sub
mov
inc
in
fmuls
lahf
ja
xchg
or
xchg
cmp
cmp
iret
dec
cmc
xchg
pop
insb
out
fdiv
mov
jle
pop
repz
stos
add
push
mov
in
ds
jne
pushf
or
dec
mov
inc
int
lock
jae
jmp
cld
sbb
negb
xlat
clc
pop
hlt
mov
or
pusha
orb
mov
lcall
mov
add
enter
push
ret
mov
lret
add
rcll
jmp
fidivs
imul
andl
pop
cs
pushf
push
scas
push
fidivs
movsb
mov
fcoms
push
ret
aad
test
aad
mov
pop
and
int
outsl
rorb
inc
push
push
testl
sbb
mov
int3
aaa
ja,pn
ss
cmp
add
xchg
mov
outsl
mov
ret
mov
repz
mov
loope
imul
pop
adc
rcl
cmc
adc
nop
imul
filds
add
jecxz
imul
je
inc
shll
pop
jl
insl
fnstenv
xchg
test
and
xor
pop
add
xchg
pop
mov
pop
jae
xchg
dec
test
addr16
popa
addr16
ret
or
int
jnp
loop
das
push
cmpsl
inc
adc
jno
jle
ret
add
xchg
loopne
push
cmp
pop
cmp
imulb
ss
test
mov
cmp
sti
pop
inc
sub
cmp
and
push
mov
ret
inc
je
cwtl
mov
push
xchg
stos
xor
pop
iret
adc
data16
out
mov
mov
jns
int3
xchg
mov
and
sbb
scas
mov
cmp
repz
fcomip
addr16
pop
call
pop
and
pop
mov
mov
sbb
pmulhw
mov
push
rol
mov
fwait
mov
insb
xor
fsubs
jg
js
insb
dec
daa
inc
frndint
jle
sub
dec
jae
mov
push
into
adc
adc
outsb
fstpl
xor
add
adc
addr16
jno
pop
lcall
repnz
jno
jae
stos
scas
inc
fucomp
repz
xchg
mov
int3
xchg
int
adc
xlat
je
add
push
jno
mov
outsl
dec
stos
leave
fdivl
out
push
mov
dec
and
sub
push
dec
arpl
repz
xor
jnp
cmpb
mov
and
jmp
daa
push
movsl
jmp
lahf
fwait
and
pusha
hlt
cmpsl
pop
pop
sti
mov
and
mov
mov
fildl
pop
add
sbb
out
or
push
sbb
pop
and
lcall
jge
jno
pop
mov
pop
scas
ljmp
stos
pop
add
ss
movsb
aam
xor
xchg
xchg
pop
inc
testl
pop
cmove
int3
sub
inc
push
loope
lds
adc
add
lret
add
and
dec
das
imul
cmp
fnstsw
ficoml
ss
fsubr
div
scas
repnz
and
mov
into
test
cmp
jnp
shll
pop
inc
xchg
enter
movl
lods
sub
incl
pushf
shlb
pushf
push
lea
xor
mov
or
and
es
scas
cs
add
jne
iret
add
or
je
stc
add
fwait
mov
mov
cld
jb
and
sbb
in
mov
mov
cltd
lahf
sub
mov
ret
test
outsl
ret
mov
xchg
push
out
fidivl
pop
xor
imul
sbb
inc
imulb
jns
icebp
scas
and
dec
mov
insl
lret
sbb
in
xchg
push
push
mov
loop
jle
test
stc
gs
pop
rcl
or
sbb
xlat
pop
sub
push
and
pop
adc
insb
or
mov
cmp
in
movsl
lcall
mov
int
sti
roll
repnz
aaa
cld
push
jns
add
std
popf
shr
cltd
in
lds
jp
outsl
iret
iret
cmp
dec
imul
jno
int
adc
xor
inc
mov
or
jge
nop
fdivrs
aaa
ljmp
enter
out
and
call
jl
in
jl
pop
or
es
lds
xor
xor
xor
lods
mov
stos
sarb
cmp
adc
add
ds
sbb
mov
orl
jno
cs
xlat
das
insl
mov
xchg
nop
push
xchg
and
mov
daa
cli
mov
movsb
xchg
xchg
add
sub
sysret
sbb
adc
push
dec
dec
jns
inc
sti
cmpsb
xchg
std
mov
arpl
mov
dec
aaa
jg
mov
jle
cld
and
enter
ljmp
in
aas
iret
mov
dec
adc
cmp
lret
sbb
pop
jne
or
jo
cmp
fistpll
test
push
jge
mull
xor
stos
jmp
imul
out
mov
dec
daa
sub
push
in
dec
clc
dec
cmpsb
int3
sbb
outsl
pop
test
orb
push
add
pop
xor
or
std
jecxz
pop
jp
xlat
xchg
icebp
xor
aam
aaa
lea
icebp
xchg
popf
xchg
into
or
push
in
subb
pop
dec
in
sbb
mov
sbb
fnstsw
stos
loope
sub
pop
sub
jp
dec
inc
jl
pop
push
jno
ret
xor
ret
adc
sbb
mov
mov
add
orl
xchg
and
scas
in
lret
adc
sub
xchg
add
xchg
xchg
sahf
fcmovnbe
mov
aaa
test
sbb
push
cld
int
or
cmp
aaa
pop
xlat
lds
in
add
mov
cmp
into
test
pop
arpl
les
pop
dec
lock
sbb
test
mov
jns
sbb
cmc
lret
dec
aas
push
push
adc
roll
xchg
mov
pop
mov
ret
mov
adc
js
xchg
mov
sub
lock
xor
pop
sub
imul
out
fwait
or
lods
fs
xchg
inc
popa
push
mov
adc
cwtl
cmpsb
cmp
pop
test
xchg
popa
adc
mov
ja
push
daa
out
testb
or
lcall
pop
inc
roll
and
std
subl
and
cmp
xchg
sub
xor
lcall
test
mov
mov
incl
jl
sub
jbe
mov
shr
or
xchg
jo,pn
outsl
add
add
sbb
or
scas
xor
aad
push
out
sahf
dec
xor
dec
adc
cmc
mov
nop
lock
xchg
fistpl
xor
mov
jno
and
pushf
push
jo
mov
xor
ret
popa
pop
test
jle
out
or
push
push
repz
lock
xchg
mov
out
mov
adc
jl
dec
jne
std
divb
stos
jae
jo
and
pop
push
int3
addr16
shll
adc
testb
xor
lods
dec
push
pop
pop
xor
stc
add
sub
loope
jge,pt
bound
sbb
jb
arpl
mov
inc
xchg
push
sub
lcall
push
xchg
stos
pop
jno
cltd
fstpl
jg
cmp
mov
arpl
push
sub
ds
lret
into
es
in
ret
movq
shr
jo
xchg
xor
aam
cltd
push
insb
shlb
loope
sahf
and
pop
iret
sbb
mov
stos
cmp
jp
inc
sbb
add
adc
out
add
jecxz
xchg
pop
pushf
or
outsl
andb
loop
out
mov
pusha
iret
icebp
in
outsl
add
out
adc
jbe
push
rcrl
ret
or
or
bnd
aad
adc
adc
inc
stos
mov
pop
push
xor
mov
dec
xchg
shlb
push
lock
xor
jecxz
pop
enter
add
jb
std
jb
and
sub
or
inc
shl
pop
push
pop
add
mov
jno
fidivl
mov
xchg
or
int3
shll
mov
xchg
mov
jne
jne
cmpl
sub
inc
lret
cmpsl
iret
add
xor
push
data16
xchg
lock
pop
push
sbb
pushf
movsb
jnp
ja
cmovge
and
test
push
cwtl
ret
aaa
cmp
mov
mov
test
sub
js
push
cmpsl
mov
loop
mov
mov
adc
mov
jle
repnz
jecxz
cmpsb
mov
inc
in
insb
js
push
loope
jle
ret
loope
mov
out
mov
jbe
into
fnstsw
je
idivl
and
cltd
cmp
jns
add
fidivrs
dec
push
lcall
nop
sti
fisubrl
add
inc
and
xchg
mov
outsb
int
dec
sub
popf
push
gs
out
jno
loopne
or
daa
add
mov
inc
inc
fwait
adc
aas
lock
fisubl
sub
mov
loopne
or
push
ret
add
adc
mov
or
data16
call
mov
add
jns
cli
or
popa
popf
dec
imul
mov
imul
and
jge
xchg
stos
mov
cmp
psrlw
dec
lods
mov
imul
fnstcw
test
cld
push
xor
notb
lcall
je
adc
or
scas
dec
clc
push
lcall
ss
adc
mov
sbb
stos
mov
push
pop
cmp
push
ret
cmp
jbe
or
or
adc
mov
cli
mov
cmpsb
or
adc
sub
jo
cmp
push
int
loop
int
cmpsl
xabort
and
fidivrl
jb
popa
sub
mov
lock
cmp
in
dec
lds
dec
pop
add
cltd
into
sbb
mov
jg
pop
add
cltd
push
out
loope
jp
mov
test
and
outsb
bnd
mov
repz
cmp
and
xchg
sti
out
jg
cwtl
daa
lds
inc
jbe
jmp
jo
jno
gs
leave
adc
push
add
rorb
movsl
outsb
movsl
leave
pop
inc
addb
mov
outsl
addr16
sub
xor
jg
pop
and
jnp
ds
pop
cmp
dec
in
ret
xlat
outsl
incb
test
xlat
stos
insl
pop
movzwl
in
and
mov
inc
add
xchg
popf
imul
cmp
sbbl
jmp
xchg
adcb
lods
lds
jecxz
jno
adc
sub
xor
in
setg
aad
or
leave
fisubs
inc
xchg
fwait
push
mov
xchg
in
fnstenv
in
out
jbe
lret
loope
pop
lods
sahf
push
jmp
dec
push
xlat
add
stos
dec
pop
cmpsb
cmc
push
cmp
syscall
push
pop
inc
cmc
pop
and
adc
push
in
mov
inc
sub
sbb
test
pushf
mov
das
fisttpll
cli
and
movsl
lcall
sub
repz
push
ror
pop
mov
add
imul
cmp
cmp
cmp
repz
mov
outsl
fwait
lcall
dec
add
shrl
adc
outsb
xor
pushf
inc
mov
clc
loop
cmpsl
ds
jns
bound
cmp
pop
and
lea
adc
jne
dec
sbb
es
gs
push
lods
pop
andb
pop
dec
inc
pusha
pusha
inc
or
dec
enter
add
push
stos
arpl
fmull
scas
cwtl
lods
aaa
or
ss
mov
add
add
iret
ds
sub
xchg
lods
pop
mov
mov
sbb
dec
push
xchg
pop
or
stos
push
sarl
mov
sbb
iret
jge
sbb
sub
lret
push
sub
pop
out
adcl
pop
repz
dec
fxch
mov
xchg
push
jmp
subl
sbb
push
test
xor
mov
push
fsubrs
sbb
popf
sbb
cwtl
mov
stos
jbe
push
out
test
add
ret
mov
add
lock
movsbl
les
test
bound
sti
xchg
test
lret
data16
pop
nop
call
ret
mov
loop
inc
mov
les
fdiv
cld
xchg
hlt
clc
pushf
fisubl
jb
out
lods
xchg
gs
lea
mov
mov
mov
jnp
cmp
sarl
push
test
pop
ja
pushf
inc
fldcw
inc
mov
dec
cmc
daa
mov
out
sub
mov
or
lds
mov
inc
test
push
pop
adc
insl
scas
lret
in
fmul
mov
cmp
hlt
cmp
call
gs
add
jno
xor
push
cmp
cltd
mov
dec
pop
daa
cmp
sti
push
adc
adc
sbb
add
insb
sbb
add
jmp
xor
jno
cmp
jb
lods
push
pop
out
mov
ret
mov
lock
add
inc
or
cltd
or
out
jmp
data16
pinsrw
insl
adc
mov
cmp
xor
bound
popa
in
or
sbb
enter
mov
xchg
int
pop
push
add
jmp
out
mov
jne
push
fiadds
std
fmull
bnd
mov
mov
icebp
dec
cmp
jne,pn
xor
xchg
sar
sub
mov
shrb
sarl
shrb
push
and
stos
pop
test
in
mov
mov
mov
out
xor
push
push
adc
nop
mov
lcall
push
dec
ret
sbb
sub
lahf
mov
js
dec
cmpsl
jg
sub
cmp
dec
mov
xor
mov
out
pop
lret
adc
dec
pushf
cmp
ret
push
fst
fstpt
icebp
mov
int3
fwait
pop
xchg
xor
leave
lods
lcall
mov
insb
and
add
jnp
in
loope
jne
jge
add
xchg
cmp
imul
aam
push
xchg
int
lret
push
jb
int3
fs
lret
cmc
or
and
icebp
imul
push
in
insl
push
popf
mov
test
or
mov
inc
sbb
push
hlt
adc
inc
xchg
ret
mov
jle
sbb
mov
aas
aas
sub
movsl
dec
xchg
xor
popf
repnz
jno
in
xchg
div
imul
jns
mov
inc
pop
inc
xor
mov
inc
or
mov
jb
mov
cmp
cmpsb
loop
cmp
es
xor
imul
dec
mov
mov
sub
ret
inc
cmp
dec
andb
loopne
popa
push
sbb
push
push
mov
adc
outsb
fildll
or
cmp
jle
sarl
cs
xor
jg
rcrb
pop
lea
mov
sti
bound
push
inc
cld
xchg
cltd
shll
or
push
insl
int3
adc
cmp
lret
inc
mov
inc
xor
push
imul
pop
push
fisubs
ja
lods
mov
jbe
pop
mov
jne
addl
test
add
push
xchg
into
sub
inc
jge
mov
adc
add
sub
jecxz
or
cmp
gs
mov
cmc
not
shll
pusha
pmulhw
je
outsb
dec
pop
movsb
es
push
orl
lret
cwtl
or
outsl
je
and
adc
push
xor
pop
and
sbb
xor
or
cltd
popa
aam
hlt
scas
xchg
push
xor
rclb
test
sbb
pop
push
push
rolb
xor
test
or
aam
jecxz
push
xor
push
ret
xchg
mov
rolb
in
mov
lcall
push
cmp
adc
insl
xor
pop
sub
jl
sub
sarb
jle
cmpsl
dec
jecxz
mov
pop
mov
adc
inc
pop
push
dec
push
fstps
dec
adc
jg
imul
aas
mov
inc
dec
mov
out
icebp
xchg
xchg
sbb
mov
add
in
cwtl
loope
add
mov
imul
mov
mov
sbb
cmp
movsb
sub
or
iret
call
sahf
dec
xchg
imulb
xchg
sbb
mov
in
repz
add
lahf
sub
subb
mov
les
add
cmp
cmp
mov
add
mov
mov
leave
lret
xor
jge
js
ret
ret
or
clc
popf
rol
lahf
data16
testb
fisubrl
sbb
cs
fisubs
pop
dec
call
mov
xchg
enter
mov
imul
mov
cmpsl
std
xchg
mov
aaa
pop
sti
fs
scas
push
add
filds
mov
dec
mov
xor
mov
lea
jbe
ljmp
icebp
test
cwtl
inc
sub
out
maxps
fcomps
xchg
fcomps
and
ret
sub
inc
je
aaa
out
sub
addb
and
pop
xor
sti
mov
movsl
xchg
stos
test
loope
daa
xchg
mov
jmp
sbb
repnz
jle
stos
jae
xor
shl
ror
les
sar
dec
mov
push
andb
fstpt
xchg
or
clc
fwait
mov
test
into
pusha
imul
rcr
cmp
mov
mov
adc
rclb
bound
dec
xchg
rcr
enter
sub
pop
clc
or
inc
mov
rcrl
jmp
aaa
dec
jns
mov
xchg
test
enter
adc
lcall
bnd
fidivrl
pop
subl
jb
ss
sbb
stc
mov
pop
mov
jns
outsb
sbb
jle
scas
sub
mov
lock
rcll
mov
pop
add
mulb
fnsave
je
std
stc
das
leave
mov
fimuls
imul
and
sahf
outsl
and
jg
inc
lcall
sbb
and
stos
and
fidivrs
out
jb
and
pop
xlat
xchg
lcall
hlt
xchg
loop
lea
dec
add
jae
mov
pop
test
push
xor
and
jbe
loope
push
scas
sti
ds
hlt
xchg
xor
cltd
or
mov
dec
arpl
stos
div
fldcw
bound
sbb
xor
sbb
adc
push
aas
jae
jmp
jp
cmp
jb
repz
push
stos
cmp
push
das
iret
std
pop
js
xor
fildll
cmp
jge
push
inc
jmp
lock
outsb
xchg
andb
leave
loope
je
push
dec
sub
mov
add
jp
rdmsr
lock
lret
sbb
lds
sub
ljmp
stc
out
inc
outsl
cmpsb
cmp
cmp
pop
aam
lods
decl
push
push
scas
lds
movsb
jb
cmpsl
lahf
into
add
scas
fwait
sub
lock
dec
cmc
add
push
test
imul
outsl
fiaddl
cmpsl
iret
and
loopne
cmpsl
out
cli
push
sbb
fistps
cltd
out
add
jno
ret
fnstcw
lock
bound
jne
or
daa
or
push
jecxz
ss
pop
out
hlt
sub
mov
xor
inc
sbb
jmp
cld
push
aam
or
inc
gs
gs
dec
das
mov
fcompl
pop
shll
xchg
sti
call
mov
and
xor
repnz
jg
test
pop
cli
xor
and
ret
pop
filds
jae
push
cmc
pop
ljmpw
mov
jnp
add
add
xchg
jecxz
pcmpgtb
out
in
pop
cmp
and
pusha
and
sbb
sub
push
rcl
aad
push
hlt
adc
aaa
je
push
jne
cmc
jns
xchg
stos
out
in
xchg
mov
sbbl
lcall
mov
lret
jae
cmp
je
inc
mov
pop
push
xchg
dec
and
inc
xlat
jge
insl
xor
push
dec
sub
mov
dec
push
xor
ss
call
jbe
gs
add
pop
test
sub
jae
bound
icebp
fs
sbb
fmul
push
cli
sbb
xchg
mov
arpl
mov
add
out
fnstsw
testl
aaa
push
inc
pop
je
bnd
outsl
xor
sub
xor
cmp
jne
or
mov
andl
mov
adcl
xor
xorl
xor
sub
sub
mov
mov
xor
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
jmp
mov
and
out
mov
frstor
pop
addl
push
lods
or
into
jecxz
push
scas
push
sbb
shll
int
out
cmp
inc
mov
repnz
aam
loope
das
add
mov
cmpsl
mov
jmp
or
and
inc
add
sub
mov
mov
negl
int3
call
stos
cld
gs
jno
push
fldcw
xchg
inc
and
shr
jbe
sub
fldt
pop
loop
or
adc
add
cld
cmp
sbb
ja
mov
push
scas
sbb
and
adc
lret
jne
push
mov
leave
xor
push
push
xchg
xchg
or
lea
cmp
dec
cmc
mov
insl
fnstsw
and
decl
jle
jnp
insl
sbb
pop
pop
arpl
push
das
outsb
dec
sbb
fsub
std
xchg
push
neg
ss
or
iret
mov
jecxz
cwtl
clc
push
cmpsb
push
xorl
cmpsl
xor
imul
addr16
cmp
sbb
int
andl
sbbb
imul
inc
shl
push
hlt
cltd
pop
inc
cmc
imul
mov
dec
inc
lcall
xor
fnstcw
popa
mov
xchg
jge
fistps
aaa
ds
xchg
mov
push
mov
adc
outsl
jmp
xchg
cmpsb
insb
inc
gs
in
lea
lods
das
pop
xor
loope
sbb
jmp
add
inc
cmpsl
fidivl
cmp
mov
hlt
in
cmp
mov
cmpsb
pop
dec
jno
jmp
inc
mov
cmpsl
sbb
dec
add
sbb
add
pop
ja
sbb
movsl
leave
cltd
xchg
add
gs
nop
rol
jmp
lahf
call
pop
pop
or
jge
jno
fstps
sbb
ds
jle
mov
int3
cmp
aam
jnp
push
js
jnp
pop
cmc
jne
cmpsl
sub
xor
pop
dec
pushf
sysenter
cmpsb
mov
sti
negl
mov
push
inc
mov
or
pop
jl
rol
inc
pop
fcomip
cmp
mov
push
xchg
push
mov
xor
aas
xor
orb
xchg
ficoml
icebp
inc
mov
out
mov
cmpb
dec
push
imul
mov
shr
push
movsb
loope
call
cmp
fcmovnu
insb
mov
loope
mov
out
movsb
psubb
jle
mov
call
call
nop
jge
repz
lahf
cld
je
fs
sub
and
movsb
and
jnp
pop
mov
mov
inc
ret
sbb
out
cmp
or
sbb
cmp
shll
pop
mov
dec
add
jns
fs
out
cld
pop
in
in
cli
leave
ja
leave
pushf
push
mov
hlt
push
fs
stos
das
adc
movsb
pusha
sub
xor
in
pusha
push
xor
mov
imul
not
cmc
test
xchg
movsl
popa
loopne
cli
fcom
sbb
sbb
divb
sub
cld
add
imul
xchg
sub
data16
in
aas
mov
dec
xor
dec
iret
mov
cmp
and
sub
push
fdivrs
repnz
into
add
divb
aad
popf
inc
popa
out
adc
xchg
dec
mov
lods
push
ja
cmpsl
lods
xchg
dec
jmp
movsl
jp
in
or
add
lahf
jge
fdivrl
mov
pop
jno
lods
lods
xchg
ficomps
xchg
cmpsl
sbb
jne
cmpsl
cmp
jns
outsl
jmp
sub
push
fsubs
loope
adc
inc
add
sbb
data16
lcall
lods
cltd
adc
shlb
fdivr
inc
mov
adc
push
or
push
and
cmp
sbbl
out
sub
lds
dec
cmp
ja
lret
bound
adc
cs
cli
push
push
sub
pop
test
loope
xor
add
push
xchg
push
pop
jae
adc
cli
popf
outsl
inc
xchg
stc
aam
inc
mov
int3
shrb
es
xlat
xor
push
sbb
test
jno
push
and
movsb
stc
dec
xchg
arpl
and
fwait
mov
mov
mov
lods
add
and
aas
add
outsl
cmp
in
aam
icebp
sti
rclb
pushl
cmp
orb
les
js
mov
iret
jle
cmp
shr
es
mov
dec
and
mov
rcrl
in
xchg
int
int
frstor
cmp
mov
xor
push
push
icebp
fwait
scas
push
ret
or
xchg
xchg
jns
movsl
sbb
jle
mov
insl
idiv
fsubr
je
dec
push
pop
mov
xchg
dec
pop
sub
test
leave
mov
fs
cli
popf
pop
sahf
hlt
add
jl
push
ret
mov
adc
aam
mov
jecxz
sub
js
scas
or
daa
dec
xor
sub
jbe
mov
jg
sub
imul
mov
lcall
popf
inc
fnstenv
sti
or
cwtl
sub
subb
mov
test
push
int
fnstsw
bound
in
sbb
mov
add
out
daa
push
lods
fmulp
insl
pop
inc
enter
mov
outsb
bound
jo
in
inc
adc
insb
inc
mov
cmp
and
xchg
mov
pushf
xor
inc
enter
jbe
fimuls
bound
insb
add
xor
adc
adc
sar
inc
ljmp
imul
inc
add
jg
mov
mov
xlat
xchg
divl
test
push
bound
ficoms
lea
adc
cmpl
sti
das
arpl
int3
jns
iret
out
mov
push
mov
add
pushf
ljmp
pop
test
out
xor
add
sar
inc
cwtl
xor
loopne
mov
cwtl
jb
xor
stc
fistl
outsb
popa
cmc
inc
push
dec
clc
mov
pop
clc
pusha
sbb
aad
movaps
and
jecxz
mov
mov
pop
jb
xlat
les
sub
pop
popa
and
ret
hlt
jae
mov
inc
call
sbb
das
add
push
sar
imul
sbb
hlt
or
jp
in
aad
push
aas
call
mov
fmulp
xlat
jns
cs
xchg
mov
xchg
lahf
pop
jno
mov
sbb
jge
mov
pushl
adc
hlt
test
aad
xor
cltd
inc
pop
sbbl
dec
jmp
int
popf
push
sbb
ror
repz
and
mov
add
adc
xchg
leave
icebp
loopne
leave
arpl
nop
into
out
add
mov
jne
dec
sub
and
inc
push
xchg
movsb
push
into
mov
clc
sub
dec
adc
pop
push
sahf
pop
mov
jmp
push
mov
inc
test
cmpsl
pushf
into
mov
pop
call
inc
arpl
mov
addr16
xchg
mov
jno
subb
or
ss
push
add
out
mov
pop
mov
mov
sub
test
mov
test
clc
mov
push
into
nop
mov
pop
mov
test
clc
popf
push
sub
mov
fcoms
cltd
fdivs
add
adc
movsl
insb
dec
cmpsl
push
push
cmp
out
pop
mov
scas
mov
cld
std
aas
fs
or
test
cltd
or
sbb
mov
clc
mov
cmp
mov
icebp
dec
jno
shlb
cs
sbb
std
cmpl
test
rcll
mov
cld
int
mov
jl
dec
lods
out
cmp
push
and
je
in
in
add
scas
ss
arpl
js
sbb
sub
mov
xor
ja
pop
mulb
rorl
push
loop
inc
push
out
jge
push
lret
sbb
ret
int
and
xor
adc
cmp
jbe
add
ja
and
sub
test
daa
dec
mov
xorl
cmp
mov
push
imul
lods
cmp
out
add
loop
dec
test
sarb
int
in
xor
cli
imul
test
enter
jp
push
daa
and
cmp
movsw
dec
sbbb
mov
mov
test
dec
sets
or
and
dec
test
mov
add
push
out
mov
scas
js
sbb
mov
inc
loopne
pop
stos
mulb
imul
dec
gs
cld
mov
xor
jne
dec
mov
insl
dec
adc
adc
xchg
mov
bound
arpl
loop
mov
faddl
shlb
in
bound
out
in
dec
gs
cmp
inc
inc
rorb
ss
inc
pop
js
out
add
cmp
mov
adc
stos
push
dec
das
in
adc
adc
mov
jmp
imul
pop
cltd
js
mov
frstor
adc
push
jae
jl
ss
mov
xchg
mov
stc
mov
push
cmp
rol
movsb
pop
cmpxchg
xchg
fnstcw
aaa
dec
out
push
imul
rcr
std
in
gs
shrl
outsb
cmpsl
or
add
or
dec
inc
addr16
mov
inc
lods
pop
les
inc
push
pushf
in
repnz
dec
pop
sub
popa
leave
pushf
or
and
cvtdq2ps
add
loope
cmp
sahf
imul
fs
xor
lods
js
sahf
dec
call
incl
lock
mov
or
cmp
mov
insb
adc
pop
loop
xchg
push
cltd
inc
dec
test
push
sbb
lahf
in
lcall
jnp
sub
fwait
pop
lret
in
sub
mov
lcall
popf
scas
mov
stos
imul
scas
pop
lret
rorb
sarb
mov
jns
gs
shlb
mov
and
xchg
and
push
jl
adc
addb
je
inc
cmp
popa
ss
std
mov
movsl
pop
mov
insl
imul
clts
sti
inc
sub
or
jmp
sub
lret
xchg
std
fwait
jns
inc
loope
mov
out
das
js
push
adcb
jae
pushf
inc
and
xchg
inc
mov
notl
dec
jbe
cld
insl
push
mov
mov
popf
scas
ds
sub
idivl
mov
cmp
sbb
stc
ljmp
sub
addr16
mov
mov
pop
nop
data16
add
and
sti
subl
inc
xor
subl
dec
sub
jl
mov
cmpsb
ljmp
pop
es
xchg
sub
loop
adc
sbb
pop
sahf
jle
ljmp
mov
jno
lret
dec
das
mov
add
es
or
jnp
cltd
mov
jp
jb
jo
cltd
mov
ret
insl
adc
jb
pop
pop
or
jl
and
dec
mov
lret
cmp
aad
or
or
andb
mov
fwait
jbe
mov
iret
movb
mov
or
cld
sbb
ljmp
out
dec
mov
xchg
adc
stos
jmp
cmp
and
or
insb
and
lret
scas
mov
pop
in
iret
pop
outsl
cmp
jno
jmp
mov
loopne
cmpsl
push
jle
adc
push
addl
mov
stos
imul
out
cmp
mov
xchg
movb
inc
in
shrb
loop
daa
adc
movsl
adc
imul
dec
mov
scas
cwtl
lcall
into
pop
daa
jmp
outsl
fsub
mov
int3
xchg
cs
adc
push
jecxz
cmpb
add
xor
outsl
xchg
out
xor
arpl
outsl
mov
or
shrl
call
outsl
pop
cwtl
dec
mov
adc
add
stos
cmovnp
jg
sub
jge
lret
rol
mov
iret
xor
outsb
lods
sbb
loopne
cmp
mov
js
xchg
sub
addb
leave
mov
inc
adc
mov
icebp
loope
and
pop
jne
or
jp
lret
adc
clc
or
mov
or
rcrl
inc
es
daa
clc
testl
loope
mov
push
movl
jns
das
jp
fnstenv
cltd
stc
dec
mov
xor
lds
in
repz
cmpsb
add
adcb
adc
push
loopne
hlt
add
repz
ss
cmpb
mov
ds
add
jg
mov
rcll
shlb
jg,pt
cmp
pushf
orb
jl
cli
xchg
sub
in
add
outsb
sbb
cmp
xchg
jg
loope
push
ljmp
jne
adc
xor
mov
inc
add
scas
push
dec
mov
call
mov
xchg
jne
aaa
outsb
mov
fbld
jl
popf
sub
sub
xchg
fcmovne
xor
inc
jmp
repnz
js
jecxz
cwtl
sti
mov
jmp
xchg
add
imul
xchg
repnz
push
in
add
stos
aad
push
push
les
lods
into
dec
add
pop
cmpsl
jnp
dec
pop
out
mov
inc
repz
fdivr
or
out
jge
or
mov
cmpb
add
popa
test
lods
repnz
xchg
sub
leave
lods
push
xchg
adc
movsl
fs
lods
arpl
outsl
jne
pop
aas
pop
arpl
lret
cmp
bound
mov
call
fiaddl
or
test
push
xor
cmp
in
imulw
sub
dec
aad
xor
dec
lahf
in
fucomp
dec
push
cmp
fmull
push
cmpsb
jmp
mov
shlb
cmp
pop
cmc
lds
dec
pusha
sbb
push
in
lcall
inc
data16
fiadds
ja,pn
push
push
and
cs
push
popa
push
mov
ret
xchg
iret
ret
or
mov
xchg
pop
or
ret
mov
cmp
cmpsl
loopne
sub
outsb
movsb
dec
add
vmread
jecxz
xor
add
arpl
rep
andl
push
hlt
add
imul
xchg
fstpl
insb
pop
cltd
mov
popa
call
inc
dec
shlb
adc
data16
and
fnsave
mov
mov
push
outsb
std
xchg
pop
icebp
jmp
scas
ret
push
jns
mov
or
or
sub
arpl
dec
inc
jb
cmp
sub
sub
dec
pop
cmp
loopne
xor
imul
jnp
adc
movsb
lahf
jp
add
mov
mov
add
xchg
mov
mov
jo
mov
jne
sub
popa
lock
fldenv
stc
into
mov
add
popa
xlat
arpl
add
adc
inc
test
cmp
ljmp
jns
or
mov
mov
lret
scas
mov
push
add
aad
and
mov
fidivs
lds
out
aaa
cmp
inc
sbb
lcall
scas
pop
jbe
sahf
sbb
aam
push
mov
and
cwtl
js
or
and
out
mov
hlt
adc
outsb
loope
insb
pop
leave
aas
jbe
test
push
sbb
popa
repnz
cli
outsl
in
into
mov
sti
fstpl
dec
lock
pop
mov
loop
addr16
icebp
aaa
sbb
sahf
mov
mov
imul
push
gs
sub
flds
sbb
fisubs
clc
cmp
mov
mov
add
lret
adc
mov
push
mov
fisttpll
out
cmp
push
jecxz
aaa
xor
repz
sbb
xor
fs
mov
inc
arpl
jecxz
out
cltd
daa
lcall
cmpl
lcall
mov
outsb
mov
push
out
jmp
nop
mov
jge
popf
xor
aad
es
test
stc
fcomip
jp
rorl
loope
jle
cmp
jg
jns
lahf
into
hlt
aam
adc
das
outsl
push
xchg
int3
jb
aaa
push
xchg
sub
not
xchg
pushf
andb
pusha
jl
rcrb
sbb
fstpl
fs
arpl
inc
xchg
repnz
jo
ss
and
pop
cmp
es
or
mull
sbb
pop
pop
outsl
pop
sub
aas
adc
cmp
pop
icebp
pop
je
ret
add
xchg
xor
jmp
popa
ret
pop
fidivrs
sbb
sbb
cmpsl
arpl
in
inc
adc
dec
dec
xchg
movsb
outsb
pusha
sahf
mov
add
stc
inc
loopne
mov
pop
shll
lock
lcall
icebp
pop
jmp
aad
sbb
enter
pop
rolb
mov
inc
pop
add
adc
sub
je
repnz
push
pushf
out
lcall
sub
into
mov
adc
cltd
stos
pop
or
fldenv
and
pop
xchg
addr16
adc
rol
or
push
rorb
fs
aam
jecxz
xor
js
rolb
pop
data16
lcall
inc
cli
mov
inc
subl
inc
mov
and
std
sub
scas
call
outsl
jno
add
popa
and
std
filds
gs
mov
sub
push
mov
popf
enter
aaa
sbb
shlb
stc
clc
xchg
cmp
test
ficomps
mov
adc
pop
cli
sub
cmp
hlt
lods
inc
sub
lea
in
in
cli
inc
mov
sbb
dec
cld
or
sub
or
mov
or
lret
adc
dec
ret
in
leave
pusha
mov
pop
push
mov
xor
fsts
jp
inc
mov
std
adc
pop
mov
xchg
pop
ffree
xor
orl
xor
dec
or
cmp
mov
jns
pcmpeqb
pop
cwtl
or
xor
insl
xor
adc
mov
leave
sti
mov
inc
subl
dec
mov
mov
sahf
sub
xor
mov
insl
test
sbb
clc
xchg
sbb
das
push
xor
fldenv
add
cmp
repz
lds
adc
xchg
push
mov
or
test
mov
mov
mov
mov
pop
fisubrl
push
push
dec
pusha
sub
mov
out
lahf
lahf
add
dec
add
loop
sub
xor
int
or
outsb
daa
dec
sarl
xchg
leave
mov
push
or
push
adc
mov
int3
idivb
push
jbe
inc
xchg
xchg
lods
mov
out
dec
jge
fdivp
jns
add
int3
xchg
mov
cwtl
mov
ja
and
shll
lahf
enter
dec
fdivrl
dec
stc
pop
xchg
jl
ja
dec
mov
push
jno
mov
loop
inc
cmc
call
mov
gs
xor
incl
mulb
les
ljmp
push
xchg
out
push
sub
addr16
cmp
mov
repz
ss
test
push
hlt
gs
sbb
cld
call
add
dec
mov
icebp
test
inc
loopne
sub
sti
int
aaa
stc
pusha
push
stos
cmp
mov
pop
call
fstl
mov
mov
xchg
inc
xchg
xchg
sub
jle
ret
push
dec
xchg
rcrb
mov
cmp
dec
stos
je
cld
cmp
mov
orb
xchg
enter
jl
pop
push
mov
cld
movsl
addr16
push
xchg
lods
xor
jp
out
push
pop
jbe
lahf
cmp
xor
mov
stos
mov
fwait
aam
jl
adc
cmpsb
jl
or
stos
in
cmpsl
fidivs
ret
inc
sbb
push
adc
jp
fcompp
push
je
mov
jno
dec
xlat
xchg
push
mov
mov
sub
jne
mov
adc
ss
mov
ss
jns
loopne
mov
fbstp
je
mov
pop
sbb
rolb
movsb
sub
decb
outsb
sub
sbb
outsl
push
mov
cmp
jae
mov
mov
or
insb
and
xchg
pop
xchg
jbe
add
lods
pop
out
mov
in
clc
mov
and
jnp
or
xor
out
test
repz
mov
lock
and
inc
pusha
sub
mov
test
movsl
or
ds
jns
xchg
push
jge
push
ret
popf
mov
repnz
cli
cmp
sub
or
and
in
ja
jmp
insb
jbe
jo
dec
cmp
test
mov
xor
dec
jae
ret
out
push
fbld
cmovns
sub
mov
aad
push
scas
fbstp
js
dec
dec
inc
icebp
push
in
sbb
stos
mov
fldl
mov
test
mov
call
test
out
cmp
and
jne
cmp
mov
lret
cmpsb
scas
mov
lds
leave
addb
stos
stc
mov
adc
imul
fisubrs
loope
cmp
dec
jno
inc
inc
imul
xchg
and
fdivrs
sbb
mov
fs
nop
stos
xor
push
imul
push
aas
mov
std
pop
cs
sbb
int3
mov
mov
xorl
pop
shll
shlb
add
adcl
xchg
xor
inc
aad
fistpll
out
push
jg
lcall
dec
es
leave
dec
mov
pop
aas
imul
iret
cmp
jne
xor
dec
nop
push
sbb
sub
add
pusha
fstpt
in
xlat
inc
mov
aam
int
int3
push
movsb
scas
jno
imul
pushf
cltd
out
adc
imul
ficoml
out
fadds
inc
push
in
mov
add
movsl
push
mov
sub
mov
dec
mov
test
imul
stos
dec
jg
movsb
add
loopne
test
cmpsb
lods
insl
insb
repz
add
cs
pop
daa
inc
push
in
sti
bound
js
test
adc
cmovp
xor
pop
outsl
inc
jno,pt
clc
imull
scas
aam
jnp
scas
mov
mov
hlt
cmp
mov
nop
sbb
adc
fsubp
mov
cmp
xchg
mov
inc
shll
test
push
xchg
sub
fcmovne
sahf
imul
mov
cli
dec
add
jo
or
stos
mov
stos
es
popf
jge
push
mov
mov
sbb
pop
xor
inc
popf
adc
in
ljmp
pop
xor
stc
aad
adc
insb
daa
cmp
or
out
xchg
pop
mov
mov
sbb
jae
ret
orl
sbb
stc
pop
fstps
andb
cmp
mov
in
inc
mov
sub
jne
pop
add
inc
pop
xor
clc
push
std
mov
sahf
cmpsl
arpl
sub
hlt
adc
pop
pop
mov
faddl
into
pop
negl
pusha
xor
or
xchg
sbb
orb
and
test
adc
pop
dec
sbb
or
je
adc
push
jns
xchg
ljmp
xor
sub
dec
out
movsb
push
xchg
fsubs
jns
mov
mov
adc
insl
sub
lahf
mov
ss
pop
mov
jg
push
fadds
cs
and
jbe
inc
ds
sbb
out
mov
push
ljmp
mov
jo
inc
sub
shl
add
inc
inc
imul
pop
subb
lds
loope
rol
insl
nop
xchg
jg
mov
andl
daa
insl
lret
inc
pop
imul
in
popa
sbb
lret
rcrb
pop
adc
arpl
xchg
mov
shld
add
inc
lods
imul
imul
and
sbb
lcall
in
push
mov
sub
dec
aam
add
inc
jl
adc
lret
cs
ss
or
push
jno
jle
xchg
push
test
and
sti
sahf
popa
int3
and
and
xor
sbb
aad
mov
xchg
cmpl
aas
cmp
dec
xor
add
mov
ret
in
xor
mov
sbb
adc
std
cmpsb
push
mov
fadds
lret
call
daa
or
fwait
pop
pop
jp
mov
es
pusha
dec
cltd
mov
gs
mov
push
stos
shll
cmpsb
adc
lock
inc
int
in
loope
mov
adc
adc
push
push
ret
add
testl
and
lahf
fwait
lret
outsb
js
shl
adc
lea
sub
xor
xlat
repz
cli
inc
jl
cwtl
lret
add
fnstcw
cmp
int3
xor
call
mov
add
push
push
cmp
loope
scas
lret
movaps
jnp
mov
outsl
add
adc
std
movsl
push
mov
mov
xchg
lahf
out
inc
mov
inc
or
mov
divl
repz
xor
fwait
cmc
int
out
jge
sbb
imul
xor
sub
inc
mov
icebp
add
fs
mov
sbb
out
loope
mov
pusha
push
dec
cmp
xor
filds
push
jl
test
cmp
mov
push
jae
mov
arpl
xchg
adc
xor
dec
js
je
rcl
divl
mov
and
inc
aaa
inc
cs
mov
push
lea
es
shr
shl
sub
cmp
and
ss
shl
clc
push
add
jnp
cltd
mov
aas
lods
pop
inc
xor
divb
outsb
test
ficoml
out
ljmp
cmpsb
dec
push
pop
fistps
dec
sbb
incl
dec
xor
adc
hlt
test
and
adcl
js
addl
inc
std
adc
std
cmpsb
arpl
pop
gs
dec
pop
ljmp
cmp
or
push
dec
cmp
icebp
inc
push
or
dec
push
push
dec
jnp
movsb
loope
in
enter
popf
mov
scas
pop
fst
fisttpl
sub
add
inc
out
mov
cmp
jae
ret
loop
sbb
addr16
sahf
jne
jns
push
scas
mov
xor
xor
push
rcll
std
iret
mov
fld
jecxz
adc
xchg
lcall
pop
pop
cmp
xor
int3
sub
xchg
test
inc
testl
push
dec
arpl
das
mov
shrl
daa
add
divb
std
jle
lods
xchg
jg
push
fistpll
cli
iret
aas
inc
loop
xlat
scas
inc
out
ret
test
ds
and
fdivs
aaa
jae
int
dec
clc
aas
sti
outsb
xor
xchg
lods
js
fstl
pushl
lcall
sub
push
scas
and
inc
arpl
jecxz
xchg
test
inc
and
popf
je
lea
mov
sti
add
cli
mov
aam
aaa
add
loope
call
shlb
adc
inc
pop
sbb
push
mov
xchg
hlt
decb
sub
push
and
cmpsb
cmc
jno
push
andl
dec
sub
jmp
mov
xchg
in
ret
push
xlat
je
scas
and
xor
repnz
xchg
sub
iret
out
adc
sbb
iret
andl
xor
xchg
pop
cmp
out
and
popf
push
inc
dec
outsl
sti
add
out
jno
lret
mov
jb
pushf
loope
in
fmul
xorb
xlat
jg
push
mov
xlat
adc
dec
in
inc
cmp
leave
rcll
inc
fidivs
or
inc
test
xchg
dec
les
add
or
std
shlb
leave
into
or
out
push
leave
push
aam
dec
leave
loopne
movl
or
in
cmp
ljmp
mov
sub
leave
cli
mov
movsl
int3
mov
dec
daa
mov
in
adc
push
addr16
mov
stc
ret
in
add
or
sub
scas
mov
cli
add
mov
xchg
gs
inc
mov
popf
mov
sbb
out
push
jl
dec
and
mov
and
pop
aas
repnz
ss
insb
pop
test
pushf
dec
lss
pushf
cli
xchg
cmc
mov
movsl
or
int
mov
pop
scas
add
pop
in
das
xchg
xor
add
arpl
pop
int
mov
push
lds
call
pop
cmp
and
pop
mov
bound
xlat
sti
inc
iret
das
mov
jno
call
xor
xlat
inc
das
adc
jo
pop
pusha
rcll
mov
repz
pop
jae
and
inc
pop
cmp
leave
iret
mov
rcrl
fisttpll
adc
sbb
ret
sahf
call
pop
push
outsl
add
in
sbbb
rsm
and
lret
aam
jp
repnz
pop
pop
clc
sarb
xor
add
aaa
cmp
cwtl
jle
in
fstps
mov
cmp
mov
ficoms
test
dec
dec
mov
cmp
js
mov
xor
data16
mov
add
pop
and
outsl
stos
adc
cli
icebp
pop
lret
or
sbb
adc
inc
cmc
jnp
xchg
cs
ja
pop
mov
push
inc
cmp
xlat
popf
test
and
add
pop
addr16
dec
dec
mov
and
aad
ss
xor
mov
bound
aad
stos
inc
sub
ret
mov
shrl
sti
dec
push
and
or
mov
xchg
xor
adc
mov
cmp
xchg
cltd
xchg
sub
adc
pop
mov
push
iret
xchg
fstp
sub
add
cmp
inc
jge
test
lods
sub
jb
jecxz
movb
xchg
fisubrl
adc
rcr
pop
inc
in
and
add
rorb
mov
cmp
adc
and
pop
mov
subl
xchg
jl
jb
sarb
adc
sbb
pop
fcomps
xchg
adc
out
enter
sub
mov
add
ficoms
adc
cli
inc
mov
push
and
xchg
mov
dec
push
lds
out
sbb
subb
and
je
xchg
leave
imul
loop
movsl
and
inc
outsb
pand
xorb
es
cmpsl
int3
dec
mov
jae
and
sbb
sub
inc
rorb
out
aam
outsl
mov
sbb
rclb
push
fs
fstps
jmp
adc
mov
loop
push
xchg
mov
aaa
push
jns
push
out
inc
and
das
or
in
adc
adcl
mov
adc
iret
pop
nop
xorb
aaa
call
lcall
jns
cmc
add
sarl
xchg
mov
loop
cli
pop
add
aas
test
ret
mov
aad
jo
fsubs
inc
mov
or
movsl
sbb
push
ret
sbb
sbb
lock
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
jmp
movsl
mov
sbb
scas
mov
nop
in
jae
pop
cmp
adcl
push
shrl
imul
mov
cmp
push
dec
ss
mov
add
cmpsl
arpl
call
sbb
mov
loopne
daa
icebp
lahf
dec
mov
sub
cli
push
lcall
xchg
mov
clc
rclb
push
loope
lods
sbb
je
jl
repnz
les
mov
lds
test
fs
xor
out
pop
jnp
scas
stc
mov
mov
in
push
adc
cmp
fstps
inc
daa
clc
unpckhps
xor
mov
jne
mov
repnz
and
xchg
mov
mov
adc
sarl
imul
pop
cmc
pushf
dec
test
out
dec
mov
sub
stos
mov
or
test
jb
vaesdec
test
arpl
xchg
cmp
roll
aas
cmpsb
xor
inc
dec
call
mov
push
loop
cmp
jb
sbb
pop
add
or
xchg
aad
in
sbb
cmp
scas
xchg
mov
shlb
cmp
jbe
std
mov
out
mov
dec
adc
fsubrl
or
lret
dec
push
xor
and
pushf
mov
xchg
scas
lods
imul
sub
and
sarb
repz
cmc
sbb
pop
loop
push
out
cmp
lahf
sar
neg
imul
xchg
push
mulb
mov
lcall
mov
cmp
in
push
jmp
lcall
fwait
pusha
mov
hlt
cmp
mov
int3
adc
pop
cmpl
cmp
cs
adc
dec
jnp
in
sbbl
lcall
mov
shrl
push
cmp
pop
in
xchg
dec
mov
push
or
lret
icebp
mov
jg
es
aas
jmp
dec
pop
pop
mov
rolb
xor
push
jp
fisttpll
lret
movsl
xchg
xorb
movsl
push
mov
or
or
fsubl
adc
jecxz
xchg
pop
dec
ja
add
stos
out
into
pop
cmp
ret
lea
cli
xbegin
in
xchg
mov
push
filds
out
mov
push
mov
pop
mov
pop
xchg
gs
loope
mov
aad
hlt
ja
xor
hlt
in
sbb
inc
jb
imul
fisttpll
pop
mov
ss
xor
adc
idivl
fidivrs
fidivl
sbb
rol
push
mov
mov
xor
inc
pop
test
pop
ja
lds
mov
and
mov
xchg
leave
jnp
fmulp
or
jne
mov
das
xchg
in
jmp
out
dec
insb
outsb
or
xchg
add
jns
pop
cmc
shlb
sub
dec
in
mov
and
xor
mov
leave
push
test
divl
cli
xlat
mov
or
sub
jecxz
push
cs
or
movsl
aad
or
dec
mov
or
xor
jecxz
mov
mov
loope
popfw
mov
sub
xlat
pop
xchg
jae
rorl
push
mov
fisubs
inc
jmp
inc
fwait
add
jnp
js
cmpsl
test
test
add
sbb
jp
stos
test
xlat
dec
mov
inc
rolb
mov
mov
jl
mov
es
ret
or
test
out
pop
jge
andl
aas
pushf
ds
pusha
push
jo
xorl
subb
test
rcr
lret
mov
push
lret
and
into
ret
pop
ret
mov
mov
inc
inc
fists
jg
jl
or
test
add
mov
mov
mov
add
notb
jge
sti
fstps
sbb
scas
push
xor
sbb
addl
ja
rcl
mov
mov
addr16
inc
push
pop
sbb
movsb
mov
subb
mov
stos
add
jae
inc
repnz
adc
int3
out
js
dec
sub
mov
cmpsb
rcrb
add
xchg
mov
mov
sub
lods
add
mov
sbb
mov
xchg
push
add
rclb
sub
aas
stc
push
sbb
fdiv
lret
lea
and
cmpsb
stos
lea
push
xchg
in
ror
inc
fucomip
jno
test
lods
mov
ficomps
cmp
pop
and
or
nop
in
sbb
mov
or
in
and
mov
jo
in
push
in
cmpsl
sti
or
arpl
adc
push
imul
rorl
mov
sub
imul
enter
rorl
decl
sub
cwtl
ljmp
jp
in
sti
sahf
cli
jns
push
or
rcr
divl
mov
sbb
imul
push
in
push
arpl
or
fld
insb
mov
mov
mov
ret
nop
xor
mov
arpl
push
pop
dec
jne
mov
sub
adc
subl
and
jo
jbe
fld
jmp
adc
ja
mov
fidivrl
push
js
xchg
pop
fisubrs
mov
cmp
xor
lea
jae
int3
repz
sbbb
stc
push
dec
outsl
stos
mov
push
add
iret
sbb
pop
push
fdivrs
or
and
repz
cli
adc
mov
sub
dec
jge
mov
push
add
jns
xlat
xchg
pop
mov
add
pop
divl
pop
jg
push
sbbl
jmp
cli
stos
imul
and
in
lods
mov
sbb
sbb
fmul
fldl2e
ss
ss
cld
fisttps
hlt
inc
and
adc
movsl
lock
mov
jnp
fildl
sub
adc
or
jle
mov
and
fidivrs
sub
ljmp
lock
xchg
push
frstpm(287
adc
loop
cwtl
movsb
popf
movsl
gs
aas
pop
add
sahf
rolb
push
push
imul
add
inc
sbb
mov
cmp
shll
xchg
sbb
scas
add
and
cmp
mov
sub
jbe
es
mov
jo
inc
mov
mov
gs
outsl
adc
addr16
out
and
jne
jnp
add
ljmp
mov
je
std
push
das
add
jno
fiadds
sbb
mov
sbb
add
push
mov
add
loop
sbb
mov
cmp
mov
stos
rorb
mov
imul
dec
xchg
cmp
xchg
cld
ret
xor
outsb
in
adc
pop
shl
aas
popa
call
lret
pushf
adc
scas
cs
xchg
leave
stos
dec
pop
daa
scas
adc
dec
movsb
cmp
sub
scas
jne
ds
mov
inc
loopne
arpl
aas
nop
xor
lods
das
cmc
sbb
adc
loopne
outsb
xlat
insl
into
pop
lds
cmp
jns
stos
test
sub
inc
stc
pop
mov
inc
xor
les
cwtl
cwtl
jl
mov
movsl
mov
inc
pop
pop
lcall
mov
mov
test
stos
outsb
loopne
pusha
test
daa
loopne
mov
ljmp
lahf
out
mov
rolb
and
xchg
sbb
pmulhuw
pop
pop
into
jmp
dec
in
fldt
fs
cld
mov
mov
iret
ret
cmc
sti
mov
repnz
mov
pusha
push
or
call
movsl
test
decl
mov
xor
push
loope
dec
pop
sbb
inc
cmc
jle
into
mov
jnp
mov
dec
mov
arpl
gs
cmp
fldl
out
dec
mov
adc
sub
or
xor
xchg
in
ja
inc
fdivrs
insb
in
adc
jg
xchg
int
push
jp
push
sahf
aam
or
iret
push
sbb
push
or
adc
mull
jg
cmp
lods
mov
jg
sub
cmp
loopne
insb
pop
outsb
or
out
xor
out
out
dec
jle
dec
ret
sbb
cmp
push
fs
and
and
or
popa
dec
sbb
lea
pop
aaa
dec
lds
and
mov
jge
orl
sbb
negb
xchg
fs
ret
mov
popf
std
js
mov
ss
push
cmpsb
push
pop
aam
shll
lcall
mov
xor
out
leave
loope
cmp
fisttpll
and
cmpsl
mov
mov
xor
jno
jae
push
dec
mov
push
fdivrp
or
inc
dec
xchg
stos
jmp
fdivs
mov
js
xor
nop
cs
xchg
mov
sbb
pop
xchg
xchg
ss
cmp
jg
add
arpl
pusha
fisubl
mov
push
pop
ds
mov
icebp
shl
adc
and
and
repnz
mov
lods
shl
dec
pop
pop
in
loopne
daa
cmp
in
test
mov
cmp
iret
xchg
scas
pop
adc
lock
rcr
dec
je
mov
test
lock
xchg
dec
and
pop
mov
adc
mov
xlat
stos
rorl
sub
jmp
mov
out
lahf
iret
fwait
or
lds
shrl
in
push
sbb
movsl
dec
inc
lret
aas
cmc
mov
fdivs
ret
mov
repz
fcomip
mov
mov
push
bound
roll
call
or
or
mov
out
jg
dec
cmpsb
nop
pop
dec
sbb
sbb
ror
out
xchg
xchg
addr16
sbb
loope
loop
pop
mov
mov
or
jecxz
cli
sbb
mov
pop
outsb
movsl
mov
scas
sbbb
jae
dec
cltd
or
cmpsl
pop
subl
push
hlt
adc
or
adc
adc
dec
lcall
shll
xchg
or
mov
xor
fnstenv
shlb
loop
out
lahf
push
inc
jp
jle
xor
out
mov
xlat
pop
pop
outsl
jae
pop
mov
nopl
fsubl
adc
int
xor
sahf
jae
xor
adc
push
dec
and
mov
xchg
push
cmp
dec
lcall
cmp
push
cmc
shlb
push
sbb
jp
jle
xchg
cpuid
lock
inc
das
xchg
sbb
jb
pop
addr16
shl
mov
fwait
repnz
sbb
mov
jmp
pushl
jmp
testb
gs
push
aam
subl
lods
sbb
xor
dec
into
out
and
adc
arpl
jns
in
xchg
add
ror
shl
scas
push
sub
ss
jbe
or
push
and
push
push
and
out
cmc
adc
out
aaa
jnp
mov
sub
in
scas
mov
lods
clc
call
pop
movsb
rcrl
xchg
mov
imul
add
bound
mov
jp
push
xchg
movsb
cmpsb
mov
jmp
addr16
sbb
aaa
sub
sarl
rolb
sbb
push
lret
popa
fistps
lock
lods
fstpl
cmp
xchg
mov
pop
pop
add
push
adc
inc
cmp
stc
int3
jb
lcall
aad
inc
lds
inc
xor
bound
sbb
cmp
es
jnp
or
add
sbb
add
mov
ss
jle
cmc
xor
in
mov
pop
sub
jae
loop
ljmp
fisttps
cwtl
push
or
ljmp
and
pop
test
test
gs
jle
cld
xchg
xchg
stos
jbe
pop
fisubs
test
add
stos
adcl
fwait
inc
mov
mov
data16
lahf
ret
rcl
adc
mov
mov
push
add
jge
push
shll
mov
jl
in
mov
jg
adc
push
decl
in
test
out
sbb
push
lret
push
subb
in
adc
pop
push
xor
sbb
testb
aas
scas
out
adc
push
in
pop
xchg
stc
dec
dec
cmp
cmp
test
ljmp
dec
sub
lahf
test
sbb
loop
dec
mov
fisubrl
pop
dec
fidivl
stc
mov
or
mov
fwait
mov
movd
out
cmp
cmp
out
lods
cmpl
jl
mov
int3
cmp
mov
push
lcall
jo
stos
and
or
and
pop
fs
mov
inc
repz
mov
ss
mov
hlt
push
in
nop
jmp
pop
inc
addr16
mov
rorl
imul
and
xchg
pop
lea
cmp
rolb
into
or
es
dec
cmpl
movl
sub
lods
scas
pop
mov
jb
aam
mov
push
inc
inc
pop
rclb
adc
cmpsb
and
cmpsb
fdivrp
xchg
or
jecxz
lcall
cmp
cmp
into
xchg
push
cltd
repnz
arpl
dec
call
imul
inc
mov
pusha
repz
pop
pop
leave
lock
xchg
cmpsb
popf
jmp
xor
int3
mov
jg
iret
notb
cmpsl
idivb
imul
sub
daa
int3
pop
mov
loopne
nop
xor
in
js
lods
leave
mov
outsb
dec
adc
push
out
scas
pop
scas
jbe
sbb
jo
xchg
jle
sbbb
popa
mov
jae
int
mov
in
jno
jbe
dec
shrl
cmc
mov
sub
cmp
mov
testb
out
add
xchg
pop
mov
dec
xor
out
sbb
and
pop
pop
loop
gs
pusha
test
push
hlt
push
xchg
arpl
imul
daa
mov
xorb
insb
or
ds
cld
jno
shlb
sbb
movsl
adc
pop
push
pusha
inc
loope
push
into
mov
aaa
cmp
push
cmp
out
pop
test
cli
mov
repz
repnz
js
push
into
addl
mov
dec
mov
xchg
pushf
movsl
pusha
add
jb
push
xor
out
jmp
jecxz
inc
cld
cmpb
mov
fcoms
lret
add
enter
test
subb
fucomip
pop
pop
pop
xchg
mov
enter
sub
adc
in
lock
cltd
cmp
and
in
xchg
jg
scas
jno
mov
pop
jo
cld
pop
into
adc
in
test
fdivrl
iret
fwait
orl
aaa
add
xor
std
xchg
lods
fisubl
fbld
pusha
mov
xchg
into
sbb
loope
and
not
shl
and
in
stos
pushf
rclb
xor
inc
out
mov
cmp
loopne
dec
mov
aaa
push
ret
je
fs
sti
add
push
notl
divb
jmp
jl
and
sub
add
adc
ret
movsl
xor
jno
dec
clc
mov
mov
in
mov
sahf
and
pop
jbe
lds
pop
xor
add
fbld
js
jne
sbb
shrl
xchg
cmp
jge
mov
jmp
xchg
fs
lret
mov
or
stos
adc
inc
pop
jns
mov
dec
dec
aam
push
sub
aaa
mov
adc
adc
sbb
adc
push
xchg
dec
and
cmovne
inc
adc
clc
mov
jmp
push
mov
mov
mov
insb
or
in
mov
xchg
repz
jle
and
sbb
jae
mov
jmp
movsb
adc
or
insl
fcmovu
test
dec
adc
repnz
mov
inc
jno
pop
dec
sti
loop
or
push
mov
cmp
movsl
adc
movb
xchg
jbe
subb
subl
in
dec
pushf
add
adc
pop
mov
repnz
add
fldl
pop
add
adc
arpl
cmp
in
and
jp
xchg
and
mov
repz
mov
pushf
aas
icebp
dec
sub
cmc
adc
icebp
ror
cld
sar
movsb
clc
cwtl
mov
lcall
add
and
xlat
or
jne
lods
mov
dec
shlb
jge
fs
or
xchg
mov
adc
insb
in
push
jae
test
push
stc
cs
loopne
and
cmp
dec
pop
push
mov
ret
mov
ljmp
inc
or
mov
lret
scas
fldl
loop
dec
lahf
mov
jbe
int
subb
dec
cmp
test
cwtl
xor
cltd
lock
or
push
dec
xchg
jecxz
push
stos
add
dec
lods
cmp
jg
fsubrs
fcmovb
inc
jno
popa
sub
or
sahf
pop
insb
sbb
jl
inc
push
adc
xor
mov
add
icebp
lea
int3
sarl
fwait
mov
jecxz
cs
sub
sub
jmp
pusha
inc
stos
mov
inc
sub
add
cmp
push
dec
mov
xor
clc
in
sbb
popl
jle
jnp
mov
push
push
lock
xchg
cmovle
clc
inc
icebp
dec
arpl
xor
and
insl
inc
shlb
mov
dec
wbinvd
xor
bound
lock
jbe
hlt
jmp
icebp
xchg
dec
int3
cmp
mov
jge
pop
enter
or
mov
mov
sbb
mov
jbe
mov
mov
mov
jo
in
xorl
sahf
rol
nop
fstps
xchg
rcll
rcrl
enter
dec
subb
mov
mov
lea
add
inc
jmp
jcxz
sbb
sahf
imul
out
push
scas
jl
insb
or
push
push
sahf
adc
lret
cmc
dec
ds
adc
sub
or
adc
mov
cmp
push
scas
fwait
pop
in
inc
pop
add
scas
lods
dec
test
jae
ret
jne
cmp
mov
cmpsb
mov
insb
jne
push
cmp
push
cmp
call
mov
adc
mov
cmp
mov
or
cld
pop
xor
mov
jbe
push
lea
ja
jns
mov
mov
jmp
jg
pop
gs
inc
jmp
jb
sbb
ljmp
pop
aam
mov
inc
jp
pop
push
leave
bound
ret
mov
imul
mov
dec
push
adc
mov
sub
lahf
ja
pop
add
jbe
fcoml
sub
push
push
loope
pop
stos
movsl
add
or
pusha
int
mov
fcomip
fucomp
cmp
xlat
aad
daa
push
mov
sbbb
sahf
adc
adc
imul
xchg
or
hlt
outsb
dec
fs
das
movsb
fisttpl
sub
mov
std
jae
and
cmc
and
pusha
or
push
push
rcrl
push
push
imul
mov
addr16
loopne
js
xor
cltd
mov
lock
jo
in
jp
mov
add
ret
inc
push
pop
out
fdiv
decb
in
loopne
outsb
lea
int3
sti
roll
pop
arpl
mov
out
call
imul
xchg
mov
jle
ss
add
in
xlat
mov
push
clc
xchg
outsb
inc
fwait
jl
push
fmul
pop
cmp
mov
mov
push
adc
adc
lret
adc
pop
sub
in
pop
pop
mov
popf
xchg
movsl
xor
jl
mov
inc
add
aas
pop
dec
lret
dec
mov
push
mov
pop
dec
jne
jnp
xchg
sbb
ret
jbe
ja
and
fwait
push
jecxz
xor
mov
lret
jae
pop
cmp
ret
dec
pop
test
cs
cli
fs
xchg
push
int
jb
mov
xlat
push
idivb
dec
leave
sbb
cld
ljmp
stos
psubsb
jno
adc
xchg
nop
enter
fnstcw
jecxz
xor
bound
repnz
test
repz
rcr
pop
jmp
sbb
cmp
mov
dec
scas
aam
enter
cmp
add
movsl
mov
clc
cmp
lods
out
xchg
dec
daa
jb
sub
mov
xchg
pop
mov
pop
dec
ds
cmpsb
push
jnp
inc
sub
int
loopne
mov
sahf
in
jp
jb
fisubs
jl
cvtpi2ps
and
addr16
shll
cmpsl
jmp
test
lret
cmc
pop
add
inc
in
mov
stos
es
pushw
in
pop
adc
add
mov
xor
out
cs
clc
pop
add
and
gs
mov
pop
sti
mov
xchg
out
pop
sub
xlat
jle
dec
shll
loop
push
ja
push
push
cwtl
jb
sti
sub
fisttps
fmul
push
xchg
cmp
fs
jbe
aaa
scas
jg
mov
fcompl
adc
or
das
push
ret
sub
xchg
sub
mov
mov
mov
mov
iret
jbe
test
cwtl
pop
nop
mov
mov
ss
sbb
dec
sub
cmpl
gs
incb
push
dec
pop
inc
push
cmpsl
push
ret
mov
out
sbb
ja
rolb
xchg
add
cmp
gs
je
std
nop
lret
and
and
xchg
inc
scas
pop
jns
or
das
mov
aad
push
add
ds
lods
outsl
xchg
add
inc
mov
imul
xchg
xchg
icebp
lds
ja
sub
dec
xor
push
imul
sub
mov
icebp
mov
xchg
arpl
gs
sbb
in
pop
rclb
cmp
int
aas
mov
testl
cmpsb
and
loop
cmpsl
test
sub
std
cld
cwtl
in
call
mov
dec
push
push
pop
mov
lea
ss
inc
test
xchg
movl
call
xlat
icebp
subb
lods
sub
cmpsb
lcall
mov
mov
push
jmp
incb
sub
cmp
push
pop
push
out
push
lods
test
fnstenv
out
mov
shl
int
and
fcomi
jno
bound
loope,pt
sti
repnz
addr16
movsb
push
mov
idiv
nop
out
test
jb
lds
std
stos
mov
push
lock
mov
dec
pop
or
xor
lods
fildll
jl
pop
jns
xchg
lods
push
pop
jg
and
cmp
xchg
xchg
xchg
sub
shrb
mov
push
stos
cmp
and
mov
push
and
fbstp
add
cmp
mov
int3
xchg
out
imul
dec
cmp
cltd
or
sbb
in
imul
push
clc
and
add
inc
xlat
sub
stc
cli
in
push
je
adc
cmpb
imul
mov
mov
pop
xorl
cmp
push
or
stos
pushf
shll
inc
mov
lea
int3
mov
in
push
mov
sahf
addr16
and
push
mov
and
mov
add
mov
or
mov
repz
jecxz
jb
je
neg
and
fistl
ror
repz
sub
mov
pop
xchg
leave
and
inc
inc
mov
cmp
jbe
xor
pop
xchg
sub
subb
repnz
xorb
cmp
test
mov
stos
das
xor
rcll
xchg
mov
push
insl
xor
pusha
cmc
mov
mov
aam
jecxz
fdivs
xor
sbb
nop
jecxz
mov
dec
pop
adc
lret
pop
repz
ret
or
les
es
mov
jno
dec
adc
jp
pop
and
jle
sbb
ret
xchg
cs
out
cmp
xchg
xor
mov
jo
mov
xchg
dec
pop
les
fbstp
cmp
cmc
stc
nop
je
mov
shr
mov
adc
adc
decb
dec
adc
addr16
mov
hlt
cmpsl
add
jno
dec
and
jo
jne
iret
lret
dec
adc
and
inc
popf
imul
inc
cmc
imul
ljmp
cmpsl
pop
jne
addr16
test
xor
xor
leave
stos
and
or
inc
leave
fsubs
and
mov
push
mov
fcomps
dec
imul
mov
adc
dec
or
push
or
and
jno
loop
mov
and
xor
mov
pushf
cmpsb
sti
sub
xor
cltd
ret
ss
lods
fcmovbe
push
fdivrp
adc
sbbb
cmp
mov
jmp
repnz
gs
cli
pop
xor
inc
inc
cli
loop
or
test
cwtl
sbb
and
cmpsl
shll
fwait
pop
subl
orb
arpl
scas
mov
mov
je
xor
mov
cmc
push
xchg
aas
adc
inc
jns
test
jns
jne
mov
loop
leave
jnp
imul
test
fidivs
xorl
jp
jg
repz
aas
adc
mov
pushf
sarl
bswap
inc
or
mov
insb
or
jo
jle
sbb
sahf
inc
lahf
loop
fildll
or
popl
aaa
dec
dec
clc
mov
push
adc
jecxz
test
mov
mov
xchg
aad
lods
adc
adc
mov
mov
mov
nop
ljmp
xor
lahf
movsl
fistps
or
sub
test
sub
fnclex
ss
sbb
pop
out
inc
pop
push
fbstp
and
inc
xor
xchg
xchg
push
or
fidivs
in
push
jmp
fnstsw
jb
loop
sbb
add
sbb
xor
pushf
adc
movsl
ds
xchg
xchg
outsb
inc
pushf
cmpsl
mov
adc
popa
std
mov
fwait
xchg
loopne
push
jp
xorb
pop
xchg
add
mov
shl
sub
jne
jns
jo
insl
dec
fs
sub
das
daa
outsb
ret
mov
jl
push
mov
fnstsw
adc
jb
mov
push
dec
sbb
xor
pop
sub
sub
es
pushf
mov
cmp
repz
rol
push
push
movsl
dec
into
push
xchg
in
sbb
test
push
std
pop
repnz
adc
dec
mov
sub
bound
aad
push
bound
test
test
push
sahf
outsb
mov
inc
mov
dec
jbe
cmc
rcl
dec
jne
and
inc
lret
jb
mov
xor
scas
xor
nop
pop
sbb
test
popf
inc
leave
fcoml
add
lcall
xchg
sbb
lds
loop
mov
adc
sarb
lcall
std
and
mov
push
jb
mov
aam
icebp
lahf
icebp
pop
pop
pop
cwtl
stos
mov
lret
mov
cmpb
push
cmc
push
shlb
mov
pusha
enter
mov
xor
and
mov
popf
and
pusha
xor
mov
cli
cltd
out
scas
push
pop
sti
ficoml
cmpsl
fldcw
fdivrl
insb
mov
addr16
sub
cwtl
loope
jno
mov
test
inc
push
jecxz
dec
out
push
mov
push
pop
sub
adc
mov
rorb
sbb
je
xor
dec
xor
imul
mov
xchg
insb
dec
push
adc
pushf
or
mov
shll
mov
enter
dec
rcrb
push
sub
mov
mov
push
mov
pop
jp
mov
inc
fnstenv
gs
daa
mov
addl
hlt
mov
daa
je
loop
shr
xchg
popa
mov
push
rcrb
jbe
add
cwtl
sub
push
icebp
push
xchg
sbb
or
jno
sbb
mov
test
outsl
dec
in
fdivrl
mov
mov
inc
push
dec
in
cmp
popf
xor
adc
insl
push
andb
cmp
lret
mov
and
shrl
push
xor
inc
lahf
add
lock
dec
pop
or
pop
pop
lahf
aas
repnz
inc
lods
gs
xor
inc
ja
sbb
popa
sbb
pop
inc
inc
lcall
test
mov
sbb
jo
inc
xor
pusha
pop
call
and
xchg
icebp
ret
or
xor
push
repnz
xorb
jp
mov
lret
call
push
jno
adc
mov
stc
xchg
rcl
js
mov
mov
data16
sbbl
pop
fisttpll
sub
inc
aad
movsb
pop
cltd
aad
mov
cld
and
fiaddl
pusha
ror
lret
jg
aas
sbb
mov
bound
lods
aas
adc
fisubl
pop
xchg
or
push
fisubs
and
or
xorb
mov
stc
out
mov
jns
fildl
das
xor
sub
or
sahf
incb
or
int
mov
lock
cmp
jmp
xor
xor
push
mov
pop
daa
dec
fnstsw
sahf
add
push
imul
lds
cmp
lods
add
mov
ja
aaa
in
aaa
cmovg
in
fsubr
push
aas
xor
pop
cmc
pop
xchg
sub
out
shll
pop
pop
mov
lods
scas
push
mov
xor
push
or
ss
fdivr
cmp
pop
out
mov
mov
std
or
add
std
inc
test
addr16
mov
insl
mov
jle
jle
insb
xlat
mov
test
cmpsl
mov
div
sub
fdivrp
daa
aas
aad
leave
loop
arpl
pop
fstp
mov
lock
dec
jno
hlt
cs
enter
dec
movsl
push
repnz
int3
xor
pop
jne
inc
popa
mov
fisttpl
fs
out
jg
mov
in
icebp
std
scas
or
fmul
cs
out
fimuls
mov
cs
stc
test
in
mov
lea
add
jnp
cmpl
push
cmpsl
pop
add
pop
into
adc
cmpb
out
jb
xchg
lods
pop
in
mov
lods
cmc
cwtl
rep
jg
xchg
xchg
add
push
lahf
stc
xchg
push
jo
out
or
jp
or
push
es
in
xchg
push
dec
push
les
sub
in
pop
dec
xor
push
xchg
jmp
aas
ljmp
in
adc
pop
insl
insl
fildl
cmpsb
adc
test
pop
jb
rorb
lret
divb
imul
das
arpl
sbb
mov
sub
in
jg
cmpsl
stos
lods
negb
xchg
pop
cli
cmc
cmp
shl
add
repnz
daa
popa
push
ret
mov
jnp
mov
sbb
xchg
aam
lock
xor
pop
mov
jecxz
repz
inc
pop
addr16
repz
aas
lret
adc
push
insb
mov
and
icebp
jge
inc
mov
pop
test
pusha
pop
in
mov
sub
xchg
cmp
dec
ss
stc
int3
jge
lahf
pop
add
cld
mov
rorl
scas
add
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
xor
andl
inc
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jle
jmp
call
cmpl
jb
movl
push
adc
movl
subl
mov
push
mov
adcl
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
orl
add
andl
mov
mov
addl
test
movl
je
movl
cmpl
je
cmpl
jle
jmp
push
call
mov
dec
mov
jmp
mov
sbb
mov
addl
mov
mov
xor
xor
add
and
mov
mov
and
xor
mov
and
mov
add
sbb
mov
mov
xor
mov
or
mov
add
or
mov
orl
mov
xor
mov
xor
mov
add
mov
sub
sbbl
lea
xor
xorl
xor
movl
cmp
movl
je
xorl
mov
subl
xor
adcl
add
cmp
movl
jne
pushl
call
mov
not
mov
adcl
mov
addl
xor
add
movl
cmp
movl
je
pushl
sbbl
pushl
call
mov
xor
mov
xor
mov
xor
add
movl
cmp
movl
je
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
call
jmp
mov
add
sbbl
mov
mov
mov
sbbl
add
orl
mov
jmp
push
mov
andb
test
or
addl
clc
push
sub
or
das
cwtl
xor
xchg
test
divb
leave
cmp
or
xor
xchg
sbb
xchg
add
lcall
cmp
jp
adc
or
rcr
xchg
fistps
mov
pushf
hlt
pop
inc
fisttpl
adc
ss
mov
cld
xchg
shll
xchg
fisubs
dec
test
pop
push
pop
in
mov
push
jnp
lea
mov
pop
xchg
push
and
and
out
out
mov
lods
subl
cli
shlb
repnz
jb
jns
sti
gs
outsb
add
fmull
cmp
inc
mov
or
lret
push
cli
fdivs
je
or
ret
testl
pop
lock
decl
decl
mov
pop
mov
clc
xor
js
rcll
pop
sub
daa
das
shl
xchg
lds
out
cmpsb
out
fcmove
sti
jne
dec
std
cmp
cwtl
arpl
xchg
nop
xchg
in
cmp
shl
add
dec
dec
outsl
adc
sar
jbe
or
push
cmpsb
imul
adc
sub
mov
nop
arpl
jnp
loop
mov
or
adc
fsub
arpl
das
pop
push
lahf
sti
mov
mov
stc
sub
push
aam
cmp
mov
aam
shlb
and
lods
test
sub
push
inc
dec
push
aas
loopne
jl
fwait
scas
mov
sub
mov
ror
mov
jo
adc
jl
xchg
lods
cltd
cmp
aas
xchg
rclb
add
les
or
dec
int
xorl
jb
aam
and
and
out
mov
call
push
pusha
jg
lea
in
dec
dec
dec
mov
int3
aaa
loope
xor
div
mov
cs
or
movsb
sbb
stos
and
sub
call
dec
mov
pop
enter
sbb
sti
cmpsb
pop
mov
out
test
dec
sbb
xor
lods
xchg
shrl
out
xchg
push
mov
jno
mov
cld
sarl
fcomp
mov
decl
mov
insb
clc
fdivrs
push
or
or
insb
xchg
out
pushf
cmp
outsb
repnz
mov
cld
sub
stos
movsb
or
in
sahf
inc
ret
cmp
cmp
push
outsb
call
inc
pop
add
add
inc
js
pop
lods
loope
mov
test
and
out
mov
mov
sbb
leave
cld
xchg
imul
push
push
push
cmp
in
cltd
and
add
jmp
xchg
jno
fwait
push
sub
cmp
mov
popf
stos
rclb
pop
pop
in
cmp
inc
mov
int3
sti
sub
rorb
lods
jo
outsl
inc
mov
dec
rolb
stc
adc
xor
adc
adc
inc
mov
sbb
lcall
addl
dec
inc
rol
mov
mov
pop
mov
not
cmpb
rclb
into
xchg
popf
insb
and
nop
movb
sar
lret
or
xchg
subb
inc
cmp
pop
roll
jo
push
test
sbb
repnz
inc
daa
push
shll
mov
mov
add
push
mov
jg
adc
loope
jg
lods
sti
add
xchg
inc
jbe
out
jnp
movsl
xlat
adc
mov
add
sbb
frstor
and
cmp
scas
cmp
pop
stos
jle
cwtl
ja
cmp
xor
subl
sbb
fidivl
scas
jge,pn
xchg
cmpb
adc
mov
lret
dec
cmpsl
lret
outsl
sub
test
push
jg
xor
or
mov
ror
rolb
std
sbb
sbb
ljmp
dec
outsb
mov
mov
sahf
sbbb
es
mov
jae
ja
sahf
insl
mov
loop
inc
pop
mov
pop
decl
or
push
and
std
pusha
push
sbb
inc
ds
xchg
lcall
jp
or
sbbb
pusha
repz
mov
aam
mov
mov
sahf
mov
pop
subb
mov
pop
jg
call
imul
add
dec
xor
xor
and
xor
hlt
leave
daa
mov
out
xor
int3
mov
movsl
cltd
mov
sbb
insb
jae
inc
jbe
xor
testb
jo
mov
mov
inc
mov
jmp
aad
arpl
mov
xchg
aaa
pop
popa
xchg
jbe
push
push
xor
dec
mov
add
imul
test
xor
sti
and
add
fs
push
add
notb
das
mov
cmpsl
mov
inc
xchg
push
and
inc
cmp
xor
sub
sarb
pop
hlt
lods
test
push
in
bt
pop
sbb
ja
push
cs
stos
sar
cmp
xchg
loope
add
mov
repnz
push
call
sub
fisubl
sahf
pop
or
jb
sbb
xchg
das
scas
movsb
mov
test
or
icebp
dec
sub
jmp
mov
adc
outsb
dec
out
mov
cmp
and
icebp
cmp
xlat
movsb
fwait
sbb
cmpb
push
lret
pop
mov
push
lcall
cmpb
pop
pushf
xchg
into
jecxz
cmpsb
ja
stos
pop
daa
clc
dec
xchg
xchg
pop
loopne
shl
fldenv
loope
mov
addr16
repz
mov
test
pushf
loopne
popa
xchg
sub
inc
jnp
jb
add
cmp
shr
jmp
mov
mov
into
inc
pop
mov
dec
icebp
jle
icebp
hlt
mov
neg
repnz
shlb
dec
jbe
jb
sti
mov
cmp
xlat
daa
xor
push
dec
mov
add
push
mov
vunpckhps
sbb
mov
ds
mov
arpl
push
pusha
push
outsb
inc
pop
popf
cld
fidivrl
lcall
xor
dec
out
je
and
xor
test
call
jg,pn
or
xor
loope
movsl
xchg
sbb
cmp
scas
ljmp
pop
jbe
jmp
pop
loop
test
adc
fiadds
jl
push
mov
and
push
sbb
add
fldcw
jg
mov
cmp
jmp
lcall
movsb
out
lds
in
shrl
decl
cltd
jp
ljmp
and
bound
cmp
clc
mov
inc
xchg
push
xchg
and
mov
push
jl
push
lods
pop
cmpsl
lahf
pop
mov
dec
subl
insb
mov
in
add
xlat
arpl
daa
in
jle
filds
pop
adc
sar
mov
arpl
addl
dec
lcall
push
out
test
fstpt
lret
sbb
xchg
xchg
movl
mov
movsb
pop
ja
ss
dec
cmp
fstpt
pop
scas
aad
mov
push
mov
pop
pop
stos
add
pop
xchg
clc
js
les
mov
lahf
nop
fsubrl
pop
mov
dec
xor
adc
repnz
jl
sti
push
mov
push
in
push
pop
popf
sub
sub
mov
inc
std
shlb
xor
stos
sub
rorb
xor
nop
sti
or
jne
test
dec
ja
jg
sub
jle
jge
into
jle
loop
mov
xor
jno
lahf
in
inc
push
mov
dec
mov
sub
out
xor
mov
pop
outsb
or
movb
xchg
out
std
jl
push
jb
imul
xchg
mov
push
out
xchg
test
mov
and
repnz
inc
lahf
xchg
push
popf
hlt
in
dec
jle
adc
lss
loop
sub
mov
repnz
movsb
dec
cmp
orb
xchg
iret
cmp
mov
sbb
lods
cmpsb
mov
and
sub
idivb
int
inc
or
nop
stos
cld
mov
lcall
cwtl
sbb
movsb
xor
pop
mov
or
out
cmovp
and
and
out
sub
dec
inc
jno
clc
push
add
cli
lcall
cmpsb
dec
mov
div
jb
std
cmp
add
push
adc
cmc
fistl
repnz
xchg
xorl
jbe
adc
dec
jo
mov
jmp
xchg
shrl
lods
xchg
pop
mov
js
test
mov
loop
adc
adc
test
cmc
mov
mov
dec
icebp
jecxz
aaa
scas
frstor
jecxz
cmp
enter
push
out
xchg
jo
fadds
rcl
sbb
jo
mov
sbb
cmpsb
imul
sbb
mov
lods
cld
aad
scas
cmpsl
lret
loope
fisubs
mov
pusha
lcall
push
mov
fisttpll
xchg
mov
daa
sbb
adc
fdivs
test
add
push
mov
push
js
jo
shlb
out
dec
adc
movb
rclb
jmp
sbb
jns
lea
mov
shlb
sar
test
mov
dec
scas
scas
push
hlt
insl
rolb
and
push
int
add
add
or
mov
or
test
lea
dec
mov
adc
aam
push
loope
bound
lds
xchg
clc
std
push
pop
adc
push
out
and
test
xchg
xor
lea
cmpsb
sbb
jb
adc
dec
push
pop
push
pop
dec
iret
mov
push
xchg
xchg
xchg
sahf
lret
mov
rclb
inc
xchg
loopne
iret
call
lcall
daa
stos
test
mov
jns
jle
cmp
test
dec
data16
mov
nop
repnz
push
ret
das
pop
cmpsb
test
and
and
cmp
add
dec
inc
adc
cmpsb
aaa
xchg
clc
jl
mov
xchg
sti
movsb
movsb
mov
loope
xor
mov
hlt
xchg
into
inc
add
out
rcll
scas
dec
xor
push
lods
dec
stos
in
mov
push
in
adc
int3
pop
idivb
test
imul
inc
jmp
mov
sub
xlat
fidivl
stos
jb
xchg
aam
sbb
cmp
and
js
loop
or
lcall
gs
lock
into
push
push
daa
dec
hlt
and
and
xor
cmc
xchg
push
push
pop
jg
jl
push
mov
or
nop
enter
push
mov
adc
int
lcall
leave
loop
and
adc
aaa
lods
inc
cmp
inc
mov
push
loopne
ds
add
dec
jae
repnz
mov
outsl
jmp
lret
imul
mov
mov
jo
push
stos
pop
stc
enter
xor
or
inc
out
andl
mov
or
jge
xchg
xchg
lret
movsl
and
mov
jbe
push
in
dec
mov
and
mov
cmp
int
inc
enter
rcrl
sub
int3
lds
push
push
not
fmul
ljmp
fdivrl
mov
movsb
mov
sbb
jp
add
cld
dec
loopne
mov
leave
mov
and
movsl
mov
ljmp
rorb
shl
cltd
js
aad
arpl
cmpsb
mov
nop
mul
scas
xchg
push
add
lea
lret
aas
sub
and
inc
add
sub
cmp
in
cs
mov
sahf
push
cmpsb
repnz
sub
xchg
outsl
and
fsts
repz
stc
pop
ret
sbb
fstl
int3
pop
out
cld
sbb
jmp
dec
sbb
jg
sub
jp
push
ljmp
jo
stos
fisttpl
and
push
mov
xchg
mov
inc
sub
jl
popa
or
jmp
cmc
sbb
stc
popa
pop
sbb
jecxz
enter
push
jo
pushl
dec
mov
xchg
sbb
outsb
jge
adc
bound
sbb
outsb
out
mov
pop
adc
out
dec
xor
mov
pop
hlt
outsb
or
inc
adc
or
stc
or
shll
mov
daa
dec
xchg
imul
mov
fidivs
sub
outsb
fiaddl
pop
test
testl
and
xchg
jns
push
sbb
fcompl
loopne
mov
in
push
movsl
mov
mov
pop
insl
stos
mov
es
rcl
das
pop
fistpl
pop
pop
lret
sub
adc
ljmp
stos
pop
lret
insl
inc
adc
popf
test
rcl
xchg
jns
mov
pop
cmp
addr16
cmp
movsb
push
dec
cmc
decb
push
jno
cmpsb
stos
mov
mov
mov
jae
cwtl
pop
int
and
cmp
sbb
adc
mov
add
mov
pop
push
mov
imulb
xchg
jl
cmp
lcall
in
dec
les
flds
loopne
adc
inc
mov
add
mov
jmp
jle
imul
xor
push
xchg
in
xorb
jp
jnp
inc
xor
call
sub
fstps
lock
jmp
rcrb
xchg
aaa
sbb
aad
cmp
jp
adc
sub
jl
sub
faddl
sbb
xlat
push
xor
mov
pop
loop
movb
mov
jle
cltd
mov
sti
xor
pop
add
jmp
stos
add
cmp
lods
dec
cmp
mov
pushf
sbb
stc
mov
dec
add
ds
mov
fimuls
call
out
push
xor
sbb
adc
sub
mov
mov
scas
aad
rorb
xchg
xchg
mov
data16
pop
into
outsb
imul
out
daa
clc
inc
mov
loop
test
mov
mov
inc
lods
push
xchg
and
clc
or
sub
jno
sub
mov
loopne
imul
lock
loope
aad
push
dec
stos
mov
sub
sbb
or
sbb
xchg
les
test
iret
cmc
jae
jg
cmp
in
pop
mov
xchg
pop
lret
ret
inc
fisubrl
mov
inc
cmpsl
enter
adcl
fisubrs
jecxz
pop
add
shl
rep
xchg
sahf
push
test
fistpll
push
outsl
or
xchg
insl
mov
mov
stos
hlt
mov
push
fwait
ret
adc
push
push
jo
fdivs
ds
mov
lcall
lods
lahf
test
icebp
xlat
push
mov
in
xchg
lret
lds
and
in
nop
jecxz
inc
popf
jmp
dec
and
lods
and
test
sbb
adc
cmp
dec
scas
mov
fwait
je
mov
std
mov
xchg
call
lret
jnp
movsl
xchg
outsb
push
jb
aad
pop
jmp
pop
mov
jbe
pop
xchg
movsl
jno
pop
cli
and
and
sub
mov
jbe
mov
in
mov
jl
ror
sbb
or
jno
nop
pop
subb
lret
mov
orb
add
mov
call
aad
jmp
push
push
lea
pushf
jb
mov
dec
stc
das
arpl
rcrb
nop
outsl
jl
sbb
push
pusha
dec
into
inc
adc
sub
jb
mov
js
pop
test
pop
outsl
pop
icebp
popf
push
mov
mov
push
adc
pop
out
cmpb
or
outsb
fwait
fs
inc
dec
loopne
aas
sub
jbe
cmp
lret
or
or
mov
xchg
jne
or
shlb
into
loopne
popf
xchg
xchg
scas
push
jle
out
mov
fwait
call
jb
stos
cltd
mov
aaa
iret
cmpsb
adc
outsb
pusha
or
inc
js
mov
inc
sbb
jl
and
icebp
xchg
hlt
repnz
rcrl
test
and
data16
daa
clc
mov
jae
test
push
dec
xchg
pop
push
leave
loopne
leave
pop
push
pop
dec
sbb
push
push
clc
cmpsl
outsl
test
mov
or
sti
cmp
and
inc
test
sti
test
popw
or
fists
push
test
lods
sbb
mov
jecxz
mov
and
cmp
mov
jp
jns
fwait
movsl
lcall
adcb
jo
lods
xlat
jge
cmp
pusha
in
cli
lcall
mov
mov
pop
mov
mov
lahf
xor
pusha
out
das
jns
ds
or
xchg
aam
sbbl
dec
push
xor
mov
dec
lea
xor
rolb
xchg
sbb
jle
pushf
xchg
shll
lock
xor
mov
push
inc
pop
xchg
gs
outsb
movsl
pushf
test
mov
xchg
xchg
out
lahf
pop
int3
mov
pop
fidivrl
test
add
xchg
xchg
or
test
stos
jg
mov
pop
mov
cmp
sti
mov
inc
cmp
je
mov
int3
test
jle
pushf
fisubl
lret
mov
pop
jnp
test
insb
mov
xchg
dec
addr16
imul
jg
cmp
dec
push
aaa
arpl
insb
aas
jmp
repz
aad
cmp
in
test
mov
dec
test
daa
fnstsw
cld
pusha
sub
cmp
arpl
pop
dec
mov
stos
mov
push
dec
int
les
loop
stos
cwtl
je
jo
jbe
movsb
icebp
mov
ja
jne
insb
in
out
jl
jecxz
and
inc
sub
lock
out
mov
ds
movsb
adc
xchg
daa
test
mov
and
jne
mov
cwtl
rcl
rol
shr
and
pop
out
lea
aaa
cmc
cmp
stos
jns
fistpll
icebp
lods
in
test
xchg
imul
insl
adcl
gs
test
cld
xor
dec
xor
xlat
lock
adc
and
mov
out
out
dec
cmp
mov
cmpsb
fcmovb
add
jne
sbb
mov
leave
inc
jbe,pt
outsb
dec
push
cmpsb
push
jnp
faddl
je
fiadds
in
ss
sub
cs
stos
outsb
pop
jae
popf
cmp
cltd
scas
cmpsl
das
out
hlt
mov
popf
mov
sub
mov
mov
stc
lcall
mov
sbb
cwtl
lret
xchg
std
jb
das
push
pop
imul
repnz
and
aas
or
add
fwait
dec
jns
mov
push
cmc
or
or
cld
stos
cwtl
inc
xor
addr16
cli
hlt
out
rorb
jns
inc
sbb
mov
fstps
popf
sub
lret
sbb
ljmp
push
pushf
ret
pop
lret
push
arpl
xchg
cli
cmp
scas
and
rolb
aas
addr16
add
jbe
xlat
pop
mov
out
xchg
cmp
dec
aas
fstpl
add
cmc
jne
mov
frstor
aaa
mov
inc
xchg
push
stos
sub
js
dec
inc
gs
push
icebp
jae
enter
sbb
jge
outsb
scas
pop
inc
into
push
dec
or
shrb
rcl
push
mov
sbb
pop
adc
mov
test
jge
xor
sbb
sahf
xchg
mov
cmp
and
out
fdivs
jnp
or
sahf
andb
frstor
push
mov
call
lcall
filds
jne
jno
and
xchg
mov
stc
sbb
adc
mov
sbb
cmp
lahf
adc
in
loopne
ss
inc
pop
push
inc
or
jo
push
mov
pop
fwait
mov
cld
test
das
loopne
or
inc
lea
ss
sarl
icebp
repz
and
or
pop
call
dec
or
fmuls
mov
push
mov
lock
add
movsb
xchg
adc
shll
sub
orb
inc
pop
insb
pop
add
push
dec
clc
fnstsw
pop
shlb
lcall
call
add
pop
out
adc
add
and
xlat
and
pop
push
push
mov
push
repnz
fdivrl
dec
mov
fidivrl
incl
xchg
sbb
pushf
sub
sub
and
je
dec
xchg
add
inc
aad
aam
pop
repnz
mov
dec
std
sbb
call
js
fcomi
fucom
into
mov
and
mov
dec
push
incb
daa
push
mov
cmp
pop
xor
xchg
orl
jo
jmp
jno
xchg
insb
lds
pop
xchg
xor
rcrb
shlb
push
or
mov
push
xor
xchg
bound
pop
mov
or
mov
cmp
subl
adc
dec
pop
pop
xchg
sbb
cmpsb
shlb
sub
addr16
jmp
xor
sti
lcall
je
movsb
jl
jns
test
ljmp
jne
cmpsb
addr16
push
lret
mov
or
cmp
test
mov
sub
mov
jnp
stos
shrl
lret
fistl
sbb
sbb
sti
or
mov
mov
mov
push
jp
ljmp
dec
xchg
pop
push
jbe
mov
sarl
repnz
fwait
add
sarb
mov
inc
xchg
aaa
loop
and
adc
lds
jp
pop
mov
dec
push
cmpsl
dec
pop
out
lock
shlb
aas
out
add
lock
xchg
test
sbb
jp
lods
jae
daa
sarb
cmp
inc
mov
pop
aaa
and
les
dec
mull
push
and
dec
cmp
xchg
movb
adc
mov
mov
stos
lea
repz
fcompl
lock
fistl
xchg
inc
shr
inc
loope
in
stos
mov
loop
out
adc
insb
push
xchg
xor
sbb
sarl
pop
jecxz
in
cmp
inc
jle
dec
fwait
add
inc
push
addl
aam
sub
es
fwait
loopne
xlat
xchg
sbb
pop
scas
sub
icebp
push
cmc
iret
sbb
pushf
stos
cmpsl
sar
cmpsb
orl
out
pop
dec
add
inc
jle
pop
push
xchg
call
nop
cmpsb
sbb
js
sub
adc
cmp
xchg
in
ds
cld
adc
add
cmp
lahf
cmp
cmp
test
mov
push
cmp
iret
xor
call
dec
add
cmpsb
mov
xor
mov
inc
scas
pop
aaa
aaa
int3
inc
add
loopne
fcompl
scas
or
dec
sbb
cmp
xchg
mov
xchg
hlt
lea
mov
movsb
dec
push
push
daa
js
leave
sub
mov
cmp
shrb
popa
imul
mov
dec
in
aam
sbb
dec
stc
and
out
movsb
xchg
fsubl
pop
pminub
mov
add
inc
adc
cmp
cli
jo
cmp
ret
push
or
shll
prefetch
or
sahf
and
arpl
movsb
or
inc
out
pop
and
stc
pop
mov
and
out
fisubl
ret
pusha
dec
mov
test
push
jg
push
add
fsubrl
fwait
icebp
or
push
enter
lea
sbb
fistpl
shl
test
cwtl
mov
outsl
or
add
mov
sub
ss
jg
lahf
in
push
xlat
cmp
jne
sub
jg
inc
test
inc
out
mov
pop
xlat
mov
mov
push
fnstsw
loopne
xor
pop
fdivrl
movsb
sar
jo
cwtl
sub
pop
ret
push
xor
or
xorl
mov
repnz
add
scas
sahf
mov
sub
jle
push
aam
pop
pop
add
jns
outsb
mov
icebp
add
inc
mov
mov
icebp
adc
aas
js
jbe
add
cmp
stos
jno
mov
sbb
fsub
mov
sbb
jno
ja
cld
mov
inc
xchg
fcoms
dec
mov
nop
pop
out
inc
scas
inc
and
jns
sbb
je
add
insl
adc
mov
and
mov
pop
xor
rclb
fistpll
jo
xchg
dec
jge
jle
mov
push
testb
enter
icebp
arpl
mov
js
sbb
push
jge
add
mov
sbb
ja
aam
lock
mov
mov
cmp
aam
scas
jno
mov
or
movsb
xchg
pop
dec
pop
popa
arpl
inc
mov
mov
inc
xor
push
adcl
int
imul
or
imul
mov
ret
loop
mov
jno
in
push
jg
jno
sti
lds
jecxz
ljmp
and
outsb
aas
pop
xchg
inc
lret
push
adc
lcall
pop
outsl
and
xor
ret
dec
outsl
xchg
lods
dec
scas
fmull
ss
push
pop
lds
push
mov
mov
mov
lods
mov
mov
pop
push
sbb
cmp
push
cmpsl
or
test
cmp
dec
xor
es
mov
loope
inc
mov
sbb
fwait
cld
addr16
push
imul
lret
or
ds
jp
mov
outsl
in
dec
popf
mov
jmp
rorl
aad
pop
loop
pop
aam
bts
pop
or
fwait
into
pop
add
adc
loope
rorb
cmp
mov
das
inc
inc
inc
lock
test
adc
push
sbb
sbb
dec
cli
push
push
dec
jmp
pop
or
add
in
fdivrl
je
icebp
js
out
mov
mov
inc
mov
or
mov
fsub
out
cmpsb
cmp
or
pop
xor
dec
stos
or
adc
punpckhbw
and
int3
jo
sub
push
shlb
sub
cmp
enter
jecxz
dec
pop
add
fnstsw
sahf
and
mov
push
or
divps
and
dec
out
rcrb
push
cli
aas
lret
sub
lcall
jns
lods
stos
pop
movsb
ss
movsb
imul
pop
in
and
imul
jecxz
pusha
mov
xor
insb
mov
iret
out
popa
mov
shlb
push
push
and
inc
push
fdivrs
ja
es
adc
psrad
daa
push
xor
inc
arpl
les
xchg
mov
pop
mov
stc
mov
dec
mov
pop
xor
push
sub
xor
mov
mov
adc
xchg
cwtl
inc
sbb
cmpsb
sub
sahf
std
cmc
arpl
int3
les
test
in
bound
dec
sub
or
stc
lcall
leave
rcll
call
add
push
lret
btr
das
loopne
jns
mov
push
test
xor
xchg
sub
cwtl
add
inc
lods
pop
xchg
add
push
add
mov
mov
inc
lret
xor
bound
les
insl
adc
arpl
lock
push
stos
adc
adc
jl
ror
or
mov
xchg
and
xchg
jo
ljmp
into
add
sub
sbb
loop
stc
jnp
mov
lret
mov
scas
nop
push
pop
jns
adcl
stc
pop
stos
add
mov
jae
repnz
rclb
cmpb
xchg
sub
cmp
js
pop
pop
scas
cwtl
pop
sbb
push
or
rcr
push
aas
stos
jae
imul
cwtl
mov
cmp
mov
mov
cwtl
xchg
pop
add
and
dec
push
xchg
xchg
lcall
ljmp
insb
leave
and
xor
jle
insb
xor
ja
sub
imulb
xchg
add
sbb
subl
push
popf
pop
test
aaa
shlb
mov
dec
adc
push
fdivs
repz
imulb
imul
insl
fnstsw
sbb
pusha
adc
fs
int3
mov
inc
jb
mov
insb
add
cmpsb
push
nop
push
lock
das
stc
into
jne
push
aas
mov
jns
daa
add
mov
lock
bound
fwait
adc
adc
popf
push
data16
inc
push
icebp
or
jle
fsubp
es
es
push
test
push
dec
sub
and
mov
xor
and
sbb
push
movsb
dec
push
lock
push
cld
mov
cmpsb
scas
mov
repnz
push
and
or
out
aad
ja
mov
int3
in
mov
adc
clc
fs
add
push
pushf
add
inc
mov
jp
or
scas
daa
xor
add
adcl
popa
xor
push
push
jns,pn
push
mov
loop
cmpsl
fcmovb
xchg
fwait
aad
iret
outsb
out
aas
mov
or
jb
ljmp
jg
aad
mov
cmp
adc
pop
inc
js
jno
sub
lods
cli
cltd
in
aam
mov
or
cmpb
sbb
je
dec
inc
jecxz
cmpsl
sahf
jl
cmpsb
add
add
sub
xchg
xchg
mov
mov
cmp
call
in
xchg
push
or
fwait
jmp
adc
std
movsl
sub
fnstsw
fnstenv
jb
sbb
inc
fldenv
and
sbb
xchg
dec
jle
lahf
ror
push
mov
ficompl
test
mov
lea
dec
add
push
and
push
and
fbld
jo
sbb
mov
xchg
push
sbb
gs
sbb
gs
out
sti
push
pop
xor
pop
sub
jl
xchg
mov
jae
int3
jmp
leave
mov
clc
mov
psrlq
ficoml
insb
push
mov
jo
lock
jmp
push
test
mov
into
jp
popf
fistl
icebp
movsb
aam
mov
adc
cs
mov
test
xor
mov
imul
mov
and
movhps
adc
in
cmp
xor
roll
adc
xchg
xchg
inc
pop
push
xchg
jns
outsl
rorb
xchg
stos
fstp
jae
dec
push
mov
and
cmpsl
std
mov
ret
pop
jno
or
and
cmp
nop
add
push
ret
jo
xchg
movsb
outsl
lods
in
arpl
cmpsb
iret
jmp
mov
jmp
xchg
aad
mov
lds
into
mov
cmp
mov
cld
rorb
dec
and
dec
movsl
loop
loopne
sbbb
repnz
in
cmp
out
dec
cmpsl
cmp
out
sbb
std
sbb
shl
xchg
rorb
and
jno
shll
xchg
sbb
loope
mov
push
bound
pop
ret
fwait
jne
inc
insb
push
in
rorl
jge
mov
shll
sar
mov
mov
lds
inc
push
loope
and
outsl
rcr
inc
test
mov
adcl
mov
jo
lods
lret
or
push
sub
xchg
lea
lahf
imul
sbb
leave
add
fcoms
sbb
ret
sahf
daa
pop
mov
cmc
jg
cmp
or
neg
mov
xchg
inc
popf
sbb
out
cmpsb
sbb
push
add
xchg
cwtl
mov
movzwl
or
mov
add
mov
movl
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
xor
mov
xor
jmp
add
cld
sbb
nop
andb
push
sub
addl
roll
mov
aas
mov
pop
xor
jge,pn
cs
lods
std
mov
pop
scas
xchg
aas
sbb
adc
and
sub
or
stc
jno
pop
jne
adc
push
xor
or
pop
fs
jae
aaa
dec
filds
je
push
sarb
sub
stos
mov
mov
test
fiadds
fisubrl
sub
addr16
xor
push
jb
xchg
sub
dec
push
cmpsb
inc
sbb
cwtl
adc
in
xlat
fisttpl
jp
push
mov
repz
aam
repz
es
pop
mov
adc
rolb
mov
xchg
call
lods
or
ss
cld
test
jp
lahf
sti
dec
imul
addr16
jl
xor
push
pusha
aad
ljmp
dec
test
inc
in
pop
mov
lcall
sahf
and
xor
and
add
lds
fidivl
dec
xchg
pusha
dec
icebp
mov
inc
mov
jmp
ror
and
sqrtps
movsl
mov
xchg
daa
aas
jmp
cwtl
jmp
arpl
jl
mov
mov
loopne
mov
sub
sbb
loop
loope
and
adc
jne
pop
loope
bound
pop
sarl
mov
scas
jbe
leave
loop
sbb
cmp
aaa
pop
adc
ret
rol
mov
adc
sub
das
es
in
mov
push
fxch
movsb
test
mov
push
outsl
push
sbb
dec
or
das
inc
xchg
addl
test
jo
adc
lret
out
jmp
mov
aam
shrb
xchg
lds
sarb
dec
add
lods
sbb
inc
xor
mov
arpl
cltd
je
ds
arpl
pop
adc
dec
or
mov
push
subb
mov
out
xor
push
out
push
fstp
cli
mov
pop
jae
popf
xchg
push
dec
mov
pushl
les
cmp
std
add
cmp
rolb
push
jo
fldenv
xrelease
movsl
sbb
mov
insb
mov
rcll
mov
fsubrp
dec
inc
cli
daa
popf
out
int
shll
xor
insl
stc
fidivrs
into
inc
int
sbbl
xchg
jnp
mov
or
and
xchg
out
les
jp
push
popf
or
test
stc
scas
cmp
cmpsb
jo
aaa
sbb
and
data16
hlt
cmpsb
bound
jne
cs
jb
xor
and
and
jne
inc
add
test
out
push
push
dec
xor
fsubrl
dec
xlat
inc
outsl
mov
xor
addr16
lcall
loopne
std
and
sub
inc
xlat
test
dec
push
xchg
scas
sti
adc
pop
sbb
dec
cmp
sub
test
xchg
xchg
jg
mov
mov
fiadds
adc
cld
in
cmpsl
cld
pop
ss
popa
mov
ljmp
out
sub
shll
sbbb
push
cmp
call
cmp
ret
mov
loopne
outsl
ljmp
sbb
mov
pop
pop
out
sbb
jmp
push
outsb
addr16
cltd
fmul
test
cmc
adc
gs
outsb
or
push
nop
add
cmc
test
dec
shll
sub
aas
mov
iret
or
setb
mov
ret
test
fsubrs
adc
xchg
pusha
addb
xor
push
adcb
push
jo
and
lods
adc
sub
push
aas
sbb
getsec
jl
jl
mov
mov
test
cmp
cmpsl
stos
je
call
push
cmp
push
sahf
in
loop
xor
adc
jecxz
out
xchg
aad
aad
push
adcl
pushf
data16
out
xchg
ss
and
inc
and
inc
test
ljmp
iret
inc
scas
movsb
add
mov
and
les
xchg
mov
sahf
divb
adc
in
es
stc
and
std
add
dec
sub
sub
pop
push
dec
ret
in
aam
xchg
adc
loop
cmp
and
cmp
adcb
mov
bound
bound
xchg
mov
jnp
aam
sarl
and
insl
popf
pushl
dec
adc
subb
mov
inc
xchg
sti
aaa
repz
js
in
or
mov
rcrl
lods
out
inc
call
mov
into
fildll
insb
pop
loope
sub
int
sub
fcoml
gs
sbb
jg
in
repz
mov
cmpsb
push
fildl
mov
jno
push
rcrl
aas
jae
cmc
test
sahf
xchg
xor
jb
mov
sub
jne
lahf
arpl
addl
push
xchg
xorb
call
imul
jp
in
or
adc
pop
addr16
and
loopne
mov
in
mov
fcmovnb
arpl
jg
cli
mov
ret
outsb
in
out
nop
pop
xor
sti
jmp
inc
mov
repnz
xor
xor
in
cmc
daa
adc
lock
cltd
dec
jns
jb
sbb
adc
add
dec
popl
stos
std
adc
rcl
lcall
frstor
rclb
outsl
lock
cs
in
es
pushf
add
sub
std
rolb
dec
mov
das
out
lock
jge
inc
insb
mov
jmp
inc
dec
imul
dec
std
jmp
mov
das
pop
lods
cld
inc
ds
mov
or
fimull
mov
or
pop
iret
frstor
pop
sub
inc
cmpsl
movsb
loop
imul
add
cmpsl
jge
insb
xchg
adc
stos
sbb
sbb
and
cmc
int3
jns
orb
addr16
mov
std
push
jmp
pop
clc
xor
enter
pshufw
dec
test
mov
or
sti
daa
push
js
ds
xor
int3
shl
and
adc
mov
scas
inc
add
xchg
mov
je
and
aaa
outsb
mov
mov
xchg
sub
in
and
int3
xor
leave
out
mov
insl
decl
jp
hlt
clc
js
loope
push
mov
mov
or
fnstsw
sahf
fwait
push
jg
xor
mov
inc
xchg
mov
sub
into
lods
aas
pop
and
xchg
aas
pop
jge
mov
mov
pop
xor
or
dec
mov
popf
dec
pop
fcompl
mov
or
fwait
pop
add
movsb
clc
cmp
loop
push
cmp
dec
cltd
dec
sub
mov
pop
adc
shlb
int3
lea
adc
mov
andl
jmp
test
sub
ss
shlb
imul
repnz
lret
xor
fisttpl
ljmp
repnz
lods
mov
adc
mov
imul
push
add
cmc
mov
push
cli
cmp
fisttpl
xchg
sbb
insl
cmp
ja
outsl
or
pusha
loope
cli
adc
out
and
xor
sbb
lcall
rorl
sub
mov
add
ficomps
push
mov
pop
add
cmp
cmp
mov
shll
out
mov
sbb
and
dec
sahf
ss
cld
push
xchg
repz
leave
ror
lret
push
clc
es
mov
icebp
xchg
sub
inc
dec
adc
test
xor
jns
test
mov
fmulp
lcall
and
mov
xchg
push
and
pop
fisubrs
add
lods
add
xchg
xchg
or
mov
addr16
mov
or
stc
jecxz
inc
and
inc
insb
xor
mov
jle
daa
les
imul
jl
shl
ret
ss
jl
popf
sub
mov
xchg
and
js
push
pop
rol
cmpl
js
stos
dec
mov
mov
sbb
pop
and
out
mov
sahf
aam
fnsave
into
loope
cltd
cs
popa
and
in
call
repnz
xchg
fdivrs
enter
jbe
push
jo
sarl
loope
lods
pop
cmp
mov
add
lds
xchg
mov
mov
add
outsl
sbb
daa
xchg
sub
fsubr
in
mov
daa
push
jmp
or
xchg
adc
mov
cld
jp
addb
cmpsl
arpl
test
in
icebp
pop
fistps
lret
dec
mov
push
test
mov
adc
add
mov
lret
add
adcb
sbb
in
out
xchg
sti
loopne
mov
les
mov
in
pop
cmc
mov
cmc
rcrb
xchg
inc
push
fidivl
cmp
test
call
loope
mov
loop
xor
inc
fdivl
jbe
jecxz
inc
inc
cltd
sub
mov
shr
js
and
xchg
mov
adc
xchg
inc
hlt
int3
ljmp
pop
fistpll
adc
ret
cmpsl
push
adc
lods
pop
sti
loope
es
jbe
mov
mov
lcall
sub
mov
mov
movsb
sub
inc
pop
push
daa
out
mov
mov
inc
fisubrl
adc
stc
mov
jns
pusha
sub
outsb
shr
xor
jb
fisttpl
xor
xor
adc
dec
jne
and
xchg
or
jno
scas
xchg
cmp
mov
jl
mov
lods
pop
jp
mov
xor
add
in
add
xchg
and
xor
xor
mov
ret
dec
ds
in
xchg
jbe
lock
mov
loope
pusha
dec
inc
sub
dec
int
inc
cmc
mov
ret
in
je
inc
pop
pop
in
push
addr16
push
push
cli
cmpsl
add
sahf
in
push
and
clc
std
cld
lret
fdivl
cmp
mov
dec
insb
push
adc
lock
pusha
adc
testb
xchg
jbe
adc
xchg
cmp
inc
shr
mov
movsl
js
shlb
xchg
jle
cli
inc
jecxz
pushf
jb
fwait
hlt
push
jle
jmp
sub
lahf
dec
fldt
negl
mov
pop
jne
je
cmpsb
lods
mov
imul
rol
push
sub
or
stos
pop
hlt
icebp
sti
lret
xor
jmp
jp
inc
adc
jnp
xchg
repz
jecxz
arpl
mov
xchg
sbb
push
in
js
js
and
sbb
xchg
mov
iret
cs
movsb
xor
cmp
aaa
jg
test
shrb
shll
sub
rcr
cmp
fdivp
dec
xchg
loope
hlt
aad
push
les
add
fsubs
mov
push
fldl
enter
cmp
jl
sbb
xchg
les
rol
jno
divb
inc
pushf
das
dec
imul
pop
pop
pop
sbb
dec
imul
lret
xlat
xor
or
lods
xor
dec
and
mov
in
sarb
sub
stc
cmp
or
xchg
mov
jns
push
orb
lds
ljmp
in
xchg
mov
sbb
pop
inc
inc
fwait
stos
and
clc
sbb
xlat
inc
cwtl
adc
or
push
jmp
sbb
popa
outsl
jecxz
jnp
js
xchg
fidivl
mov
jnp
inc
push
cmp
fisttpl
out
push
enter
sbb
mov
push
sbb
testb
dec
fucompp
sti
testl
or
jo
sahf
insl
sub
aad
dec
cmpsb
dec
fisubl
xorl
pop
adc
les
jl
outsl
push
scas
pop
in
hlt
adc
mov
lcall
pop
stc
adc
jo
push
lea
pop
mov
sarl
inc
scas
push
in
ret
sub
bound
dec
test
loop
add
mov
mov
or
cmp
loop
mov
jmp
xlat
out
inc
mov
arpl
dec
or
rclb
mov
adcl
pushf
pop
adc
sti
lods
jbe
out
sbb
sub
xor
ja
pop
ss
stc
ret
jle
push
inc
cmp
test
scas
xchg
popa
or
jb
in
shll
mov
jecxz,pt
cltd
and
sbb
hlt
aad
bound
sbb
in
nop
add
aaa
aam
daa
xchg
cs
pop
mov
and
and
mov
mov
or
pop
dec
mov
js
outsb
sbb
xchg
add
das
andb
jne
push
fs
cld
sahf
inc
ja
xor
or
xchg
mov
add
loop
push
imul
adc
pop
outsb
scas
xchg
and
pop
ficompl
add
outsb
push
pop
cmp
xchg
sti
jmp
or
push
jns
iret
cmc
cmp
xor
jns
ds
push
nop
into
pushf
icebp
fsts
pop
testb
pop
lods
or
xchg
test
mov
cmp
fimull
dec
pop
test
in
int
adc
push
and
jne
addr16
fwait
add
and
lock
ds
jp
push
cs
fistpll
out
push
nop
insb
mov
fdivrp
cmc
push
xor
popf
mov
popf
jns
aas
xchg
shll
sub
mov
stos
or
ljmp
xor
xchg
pop
push
insl
sub
mov
stc
jno
push
inc
gs
loope
lods
cmpsb
push
xchg
sbb
pop
ja
rorb
push
scas
lock
mov
dec
pop
mov
into
mov
rorl
pop
dec
notl
ret
pop
mov
mov
bound
cli
or
inc
into
fmul
pop
sarl
dec
movsb
pop
addr16
mov
int3
cmp
adcl
negb
pushf
divl
pop
lods
mov
sbb
sub
mov
aaa
dec
addr16
outsl
fs
pop
push
popa
or
cmp
popa
mov
and
mov
insb
jnp
testb
inc
lret
test
sbb
fnsave
andb
shrb
pop
pop
cmp
fsubrp
jne
push
add
sbb
mov
sbb
in
mov
push
dec
aam
js
inc
fsub
xor
mov
mov
cmc
ret
fwait
jo
data16
mov
repz
fisttpl
addr16
or
jecxz
pop
loope
jle
iret
cmp
sbb
sbb
test
xor
loop
aam
jb
insb
cmp
mov
mov
lods
mov
inc
push
mov
or
jbe
xchg
push
mov
cmpsb
test
scas
fs
cld
cmp
jae
cmp
sar
push
imul
sub
cmpsb
xor
mov
mov
loope
out
sbb
fnstsw
ss
rcrb
inc
out
pushf
loope
aaa
arpl
xchg
mov
fwait
pusha
addr16
arpl
jecxz
jl
ret
sbb
fdivl
cmp
mov
mov
or
xchg
ret
fs
in
cld
imul
or
mov
inc
push
pop
mov
repz
xor
leave
pop
fmull
arpl
ds
mov
ret
std
aad
or
or
and
xor
ja
inc
mov
stos
repz
outsl
jmp
cmp
out
ret
adc
in
inc
iret
adc
in
dec
xchg
push
sahf
fildl
pushf
outsb
ljmp
lods
adc
es
leave
in
hlt
insl
inc
jo
outsl
lret
jp
or
clc
sbb
push
xchg
add
rcr
sarb
mov
add
popf
scas
or
dec
jp
add
fcompl
iret
dec
inc
inc
int3
stos
rolb
pop
cmp
inc
daa
int
xlat
lea
stos
call
inc
cmp
or
push
icebp
test
sub
pop
adc
pop
xor
mov
int3
imul
mov
and
or
loope
push
pop
xchg
fstp
imul
out
pop
jae
push
xor
push
push
mov
call
xchg
aam
adc
or
test
fcmovnbe
and
pop
mov
mov
pop
lock
aam
cmpsb
push
xor
andb
addr16
movl
arpl
jb
adc
mov
leave
ss
mov
mov
pop
sbb
subl
or
dec
pop
cmp
arpl
and
xchg
aaa
adc
cld
mov
sub
jl
pop
idivl
mov
cmpsb
sbb
add
shrb
inc
push
add
and
inc
xor
sar
push
insb
pop
push
add
popa
clc
mov
ja
dec
push
sbbb
xor
fbstp
adc
es
es
pop
lods
push
cmpsl
imul
cmc
mov
daa
aaa
xchg
mull
fistpll
loop
push
or
shll
ss
sub
mov
inc
mov
imul
gs
popa
pop
pop
hlt
fdivrs
ret
add
scas
sub
loop
outsb
loop
shll
xor
out
fdiv
mov
es
or
and
or
imul
out
pushl
data16
arpl
stc
or
push
je
pop
test
jge
jecxz
cmp
icebp
adc
push
xlat
and
leave
sub
cwtl
lret
arpl
push
movsl
lea
mov
xor
fwait
fisttps
pop
adcl
shll
cmp
popf
xchg
test
call
cmp
adc
mov
lcall
sbb
push
add
jmp
notl
mov
mov
adcl
adc
xor
jns
sahf
pop
popa
fs
inc
cmp
xchg
sbb
and
jmp
pop
dec
in
xlat
xchg
sbb
repz
or
ret
cmpsb
and
test
pop
sub
add
test
pop
popf
jl
adc
mov
sbb
stos
and
xchg
out
ljmp
mov
mov
rolb
jno
insb
ret
push
imul
adc
adcb
cmp
lahf
in
sahf
inc
movsl
mov
push
dec
cmpsb
mov
shl
jnp
xchg
push
stos
nop
scas
mov
call
inc
cs
lds
push
adc
or
scas
int3
sub
ljmp
stc
insl
pop
xor
outsb
lret
add
cltd
xor
and
imul
subl
mov
fwait
cmp
add
mov
fildll
aaa
outsb
jo
out
mov
push
pop
cmp
sub
cld
mov
mov
in
dec
cmp
pop
fld
lods
or
jmp
cmpsl
cwtl
sbb
cli
jo
sbb
mov
xchg
mov
lcall
imul
cwtl
pop
adc
cmc
call
filds
into
pop
mov
mov
aaa
outsb
hlt
aaa
lods
out
or
lock
push
repz
cmp
pop
jbe
push
lcall
jno
sahf
sub
and
in
lods
dec
ret
cmp
inc
stos
pop
sbb
inc
add
xchg
mov
sahf
ds
inc
push
sub
cmpsb
std
mov
sub
fiadds
mov
push
and
jno
fcmovnu
hlt
loope
or
xchg
add
sub
mov
pop
cmp
ret
push
rorl
and
in
adc
xchg
aam
dec
fidivl
xor
sarl
repnz
imul
mov
repz
cmp
jne
mov
cmp
push
fisttpl
ja
sbb
and
dec
mov
mov
mov
mov
pop
lahf
push
mov
xor
add
iret
dec
and
data16
and
jge
fdiv
inc
int
lock
and
std
xchg
loop
mov
jnp
call
xchg
sub
jmp
dec
lret
push
adc
or
out
stc
dec
sti
or
or
pusha
mov
pop
lret
xchg
stc
cwtl
jo
cmp
fwait
inc
dec
mov
and
mov
sbb
lcall
fidivrl
stos
ss
adc
out
mov
ljmp
or
push
and
leave
dec
aam
lock
ja
and
mov
aam
ret
js
dec
xchg
xchg
mov
and
stc
rcrl
cli
out
leave
mov
call
push
imul
in
mov
jmp
aam
mov
fs
out
mov
cmpsb
jmp
inc
add
outsl
or
rcrb
icebp
xor
push
inc
and
divb
inc
sar
andb
add
mov
test
cmp
sti
and
sti
pop
pop
lods
rcr
cmpsb
inc
movsl
and
inc
or
je
bound
cmp
pop
or
push
insl
imul
pop
into
out
sub
pop
xor
or
movsl
ret
adc
scas
insl
sub
int
pop
or
sbb
fldcw
call
xchg
push
loopne
mov
ficoml
sti
cmpsl
and
pop
pop
cmp
jnp
das
arpl
jne
outsl
cmpl
sub
dec
clc
movsb
imul
fisubrs
mov
pushf
mov
pop
xchg
fldl
insl
xor
popf
aaa
cmp
aaa
insb
xchg
in
mov
jmp
fisubrl
std
pop
push
test
imul
or
sbb
sub
or
cmpsl
jnp
insb
sub
imul
cmp
jo
push
cltd
cmp
or
aam
or
int3
loop
loopne
push
or
jmp
add
adc
dec
stos
push
call
dec
add
stos
ljmp
mov
into
jne
dec
jae
insb
imul
sub
xor
or
pop
mov
cwtl
jo
dec
addr16
sub
rclb
jae
rclb
jl
inc
lods
and
and
xchg
add
and
mov
aas
push
sti
adc
pop
mov
mov
hlt
cmp
mov
shlb
call
xchg
cmp
fidivl
fcomps
push
fldcw
xor
mov
das
mov
cld
subb
xor
push
mov
pop
adc
sti
mov
dec
cmp
ret
loop
scas
das
jle
push
pop
movsl
pop
loop
sub
rol
jo
mov
cltd
loope
pop
push
push
or
ficompl
xchg
jns
fldcw
lea
add
jl
mov
xchg
push
and
addb
test
call
data16
adc
jae
or
into
in
test
lods
sub
or
lret
lds
out
cmp
add
push
and
loopne
lret
std
lea
sub
lahf
jmp
imul
sub
mov
rcr
jg
hlt
nop
push
mov
pop
and
mov
loope
dec
sbb
int
ret
sbb
les
cs
mov
mov
mov
test
out
mov
and
loopne
hlt
push
push
pop
arpl
jmp
pop
xor
pop
pop
sub
add
xor
and
mov
lods
mov
je
js
clc
pop
sbb
sub
pop
fucomip
mov
xlat
stos
sbb
out
nop
scas
add
sbb
lahf
xor
fmull
or
add
mov
xchg
inc
jl
pop
mov
out
xor
daa
fmul
inc
cmp
xchg
add
pop
shlb
repnz
lods
xchg
sub
test
pop
cmpsl
dec
xchg
adc
stos
mov
adc
in
lret
addr16
pop
sbb
shll
cmc
push
jle
jp
test
lods
out
movsb
sahf
ret
ds
lret
mov
js
cmp
lock
sbb
jle
mov
mov
xchg
cmp
cmpl
xchg
mov
and
std
stos
clc
or
and
lea
pop
add
adc
outsl
into
pushf
pop
xlat
inc
sbb
mov
xchg
xchg
push
cmp
push
jp
into
das
outsl
dec
popf
dec
or
pop
and
jbe
cmp
jmp
aaa
sub
fsubl
or
sub
jge
std
push
xchg
jecxz
add
mov
sahf
test
or
mov
pop
cmpsb
sub
push
hlt
xchg
scas
or
push
call
sbb
jp
inc
icebp
or
sbbb
or
into
jp
mov
repnz
xchg
jmp
imulb
fidivl
sahf
mov
push
pop
pop
cmpb
ljmp
sarb
imul
imul
and
cmp
push
movsl
std
mov
out
sub
fwait
cltd
push
mov
adc
and
pop
dec
cmp
xchg
hlt
pop
div
popa
repz
jb
fs
jb
adc
mov
ficompl
sbb
in
stos
loop
xor
push
jne
in
pop
push
push
std
shll
imul
lods
sub
ljmp
adc
outsl
mov
loop
inc
mov
xor
inc
daa
lods
cwtl
in
jp
jbe
jne
and
popa
loope
popf
mov
xor
outsb
stos
sar
jmp
push
cs
pop
scas
popa
cmc
adc
cmp
lahf
out
fwait
pop
ror
stos
pop
mov
mov
pop
call
loopne
jae
jmp
lds
fistps
into
jnp
ss
sbb
jno
daa
push
fs
dec
adc
jno
sbb
push
push
dec
repnz
inc
push
push
mov
lods
lcall
lahf
push
dec
add
pop
arpl
int3
or
mov
push
jl,pn
es
ret
sub
mov
mov
xor
or
xchg
xorl
xchg
inc
insl
lock
mov
add
in
bound
aam
sub
mov
fildll
stos
mov
push
adc
or
mov
arpl
leave
sub
lret
out
pushf
or
push
push
dec
jge
aad
loope
out
cmp
inc
test
push
adc
addr16
push
sbb
pushf
sub
hlt
cmpsb
cltd
xchg
nop
and
inc
fidivrs
sbb
pop
inc
out
dec
mov
mov
pop
popa
mov
add
imul
jecxz
mov
shl
or
pushf
mov
or
movsl
call
add
mov
dec
cmpsb
sub
mov
test
adc
jp
pop
lret
or
fnstsw
jns
dec
lret
inc
fisubrs
sahf
sub
push
jno
fs
scas
mov
pop
or
mov
into
ds
fidivrs
adc
jmp
in
push
push
mov
mov
cs
fisubrs
pmullw
mov
push
mov
xchg
add
jbe
inc
js
fsts
pop
xchg
add
xor
shl
cmpsl
and
imul
in
inc
popf
enter
mov
addl
shlb
pop
cmpb
outsl
jnp
jns
jno
sahf
fidivrs
xchg
pop
xchg
push
lods
and
negb
das
mov
mov
inc
out
xchg
adc
cmp
into
and
js
in
arpl
stc
mov
sbb
insb
jns
mov
mov
lret
ret
stc
jl
pop
inc
lahf
mov
ret
and
movsb
lea
pushf
xchg
adc
insb
ret
mov
pusha
mov
cmp
lods
loopnew
or
sub
incl
push
mov
popf
sbb
in
add
push
test
mov
pop
in
loope
jecxz
in
orb
jmp
mov
sub
adc
sbb
mov
mov
sarl
fdivl
adc
mov
in
jg
rcl
xchg
mov
mov
das
add
mov
cmp
cmpl
dec
mov
imul
jle
cltd
in
popa
cmpl
pop
xor
ret
arpl
pop
ss
push
and
push
nop
ficoms
jb
bound
cmp
mov
sbb
sub
jle
arpl
add
das
mov
icebp
xchg
jne
dec
outsl
and
dec
int
pop
leave
add
dec
jge
push
mov
daa
sub
xor
mov
adc
mov
or
bnd
adc
pop
ds
call
jne
ja
mov
mov
pop
aaa
adc
adcl
pop
int3
loop
popa
imul
jecxz
mov
sbb
xchg
jmp
ret
lods
and
sub
insl
sub
push
dec
dec
push
and
es
inc
movsb
lcall
or
data16
inc
cli
pop
fidivrl
loop
mov
fldenv
movsl
xor
inc
mov
sbb
xchg
inc
pop
dec
mov
xor
sub
adc
push
dec
add
filds
aam
test
int3
mov
jge
sub
mov
fcomps
sbb
cwtl
sahf
cmp
xchg
lea
push
add
mov
sbb
mov
lods
fldl
push
push
inc
pop
mov
xchg
imulb
pextrw
bound
push
popf
push
push
call
and
mov
jae
dec
sbb
mov
fldt
push
xchg
and
mov
jge
aam
pop
shrb
push
rcrb
xchg
pusha
sbb
pop
sahf
out
push
imul
inc
inc
insb
bound
aaa
data16
fmul
lds
call
push
and
add
xchg
ljmp
shlb
cld
test
fstl
movsb
sti
rcr
push
lret
bound
arpl
lret
ss
aam
loope
stos
movsb
lahf
out
and
mov
or
nop
addr16
fisttpl
mov
lret
movsl
fidivl
jno
hlt
aam
xlat
mov
sub
call
out
mov
xor
cli
sbb
movsl
gs
lret
leave
aaa
in
inc
sbb
mov
lock
xchg
fs
pusha
in
in
sub
in
push
xchg
popa
cmc
clc
in
int3
xlat
xor
inc
les
and
addr16
push
je
leave
mov
xchg
insb
mov
arpl
in
inc
or
mov
addb
repz
push
imul
cmp
data16
aas
push
mov
and
out
jp
imul
jne
add
sbb
jl
xchg
adc
mov
push
repz
imul
sub
sbb
rorb
and
addb
dec
dec
cli
xchg
jb
test
mov
mov
test
ds
stos
sti
jns
dec
jmp
push
inc
xchg
sarl
cmp
push
test
cmc
movd
sub
mov
sbbl
cmp
test
mov
addr16
arpl
or
pop
mov
or
lcall
loop
mov
sub
repnz
in
mov
loope
xor
ficomps
dec
or
ja
and
push
imul
mov
ret
add
decb
lods
push
sbb
mov
or
sub
pushf
add
in
add
xor
lret
push
dec
scas
popf
int
adc
lods
inc
neg
fmuls
mov
ja
jmp
cmpsb
fcomp
mov
mov
jo
jp
fs
pop
clc
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
jmp
add
mov
hlt
aas
push
mov
or
rolb
and
xchg
sbb
and
clc
ss
jns
scas
and
adc
jge
cmp
aad
push
jo
int
and
and
dec
mov
mov
jl
push
or
add
push
mov
inc
phaddd
ds
fs
inc
cmp
test
imul
lret
sbb
push
movsb
into
pop
inc
sti
xchg
loope
lret
popf
push
jl
jae
rorl
lock
mov
notl
mov
movsb
mov
iret
sbb
dec
adc
cwtl
adc
mov
adc
cld
mov
push
int3
pop
cvtps2pi
mov
scas
and
lea
add
lock
adc
mov
pop
ja
loope
pop
cmp
ja
insb
cmp
push
repnz
out
xchg
push
dec
cmp
sbb
mov
inc
push
cmc
push
cltd
push
iret
or
rorb
mov
dec
fldl
cmp
jns
push
xor
inc
out
test
rep
ss
ficomps
mov
enter
jne
filds
push
je
jb
inc
mov
cmpsl
test
lret
or
aad
rorl
and
mov
sahf
cmc
sbb
hlt
ret
popf
mov
sub
fimuls
sahf
aaa
filds
xlat
je
cmc
inc
dec
mov
push
xlat
dec
xchg
sub
pusha
xchg
mov
inc
push
fidivs
imul
and
es
fsubr
xor
cs
mov
adc
into
inc
lret
push
outsl
inc
push
inc
pop
mov
push
cmp
cld
pop
mov
adc
mov
pop
dec
sub
movsl
push
push
push
or
fisubrl
sahf
mov
fidivrs
mov
or
ss
push
add
sbb
leave
dec
inc
cmp
movsl
ja
or
mov
xchg
enter
popf
mov
out
xchg
gs
js
rclb
add
testl
fwait
in
dec
roll
fstpt
and
repnz
out
aas
add
repz
xlat
jne
adc
pop
int3
pavgw
lret
dec
or
loope
test
or
sub
cmp
mov
imul
sbb
dec
xor
jb
inc
push
lret
and
scas
pop
jge
dec
aad
repnz
cwtl
dec
lods
repnz
int3
inc
sbb
popf
dec
jno
pop
int3
mov
xchg
push
test
popf
cli
adc
inc
sbb
inc
or
movsb
xchg
add
add
jle
sub
fidivrl
xor
addr16
test
lock
rolb
dec
repnz
add
or
imul
xor
gs
adc
daa
push
xor
rolb
dec
lcall
fnstenv
fs
scas
add
add
ret
add
dec
cld
imul
adc
lcall
mov
aam
insb
cli
inc
cmp
add
xchg
ds
push
push
in
xchg
ja
xor
or
pop
loope
jne
cmpsl
xor
out
enter
mov
mov
or
mov
mov
cltd
cmp
int3
cs
mov
push
stc
rcrb
fs
imul
scas
xor
fistl
call
dec
adc
out
push
mov
pop
repz
scas
jne
daa
das
cld
pop
aas
mov
inc
shrl
mov
pandn
dec
sbb
cmp
push
and
sbb
mov
pop
cmp
ret
xor
push
data16
dec
aaa
sub
xchg
push
clc
sbb
in
jns
push
xchg
mov
cmpsl
je
jle
sbb
pop
pop
dec
cmc
je
mov
cwtl
clc
mov
mov
test
ret
loope
test
jne
adcl
lcall
xor
dec
xor
dec
lret
pusha
scas
loopne
jns
xchg
jb
jns
mov
testb
jle
hlt
sbb
mov
adc
xchg
push
jns
loope
stos
push
add
lahf
push
out
gs
mov
sbb
repz
addr16
les
mov
mov
andb
jnp
mov
mov
fldt
pusha
into
sbb
loopne
fdivrl
repnz
ja
lret
mov
mov
cld
js
adc
aad
xor
fwait
add
cld
fldt
push
subb
cmp
insb
pushf
sub
fwait
std
repz
mov
xor
sbb
cld
iret
mov
mov
adc
filds
inc
inc
ja
xchg
inc
sub
cmp
cmp
jno
mov
cmp
ret
mov
fwait
cmp
lahf
jb
stos
sbb
inc
enter
rep
ljmp
mov
pushf
out
jne
xchg
mov
sbb
dec
popf
andl
xchg
test
fstpt
cmp
loope
jle
cmp
add
jb
shl
push
xor
mov
jp
push
push
push
inc
mov
lea
repnz
lods
mov
je
add
jmp
xor
adcl
in
jg
faddp
cmp
addr16
cmpsb
imul
or
sti
push
in
fdivl
dec
cltd
mov
out
add
sbb
xchg
xchg
repz
clc
pusha
dec
arpl
mov
popf
popa
movsb
leave
jmp
mov
push
cmp
adc
pop
push
xor
dec
test
movsb
ret
ret
mov
test
call
push
fsts
add
lcall
int
pop
in
push
and
mov
jns
ret
add
fldt
xor
dec
mov
xor
fsubrs
pop
cmpsb
add
inc
std
cmc
dec
inc
jp
and
xchg
dec
fistpl
or
shrl
adc
into
mull
dec
xchg
jbe
mov
push
pop
pop
lods
test
jo
popa
loop
lcall
flds
jno
ds
xor
cmc
mov
add
das
fmuls
jnp
add
jecxz
and
les
lret
xor
movsb
sbb
dec
in
jecxz
fwait
stc
testl
and
and
push
arpl
xchg
mov
scas
sbb
adc
aas
je
and
rcll
rolb
mov
out
xchg
sub
sbb
jb
dec
ret
dec
fnstenv
lods
mov
inc
cmpsl
out
outsb
in
mov
lcall
or
push
push
inc
bound
roll
jge
inc
jnp
cmp
loopne
adc
ja
adc
jp
pusha
idivl
enter
xlat
addr16
pop
sarl
decl
or
adc
fnstsw
addr16
popf
fadds
pop
outsl
xlat
jg
lret
mov
cmp
sarb
and
stos
xlat
push
adc
lods
xchg
pusha
cmp
and
mov
fsub
pop
inc
push
sbb
pop
sarl
cmp
jg
jecxz
fnstenv
and
xlat
loope
push
push
or
push
aad
arpl
outsl
cltd
std
push
dec
adc
int
sbb
sub
mov
out
pushf
xchg
ret
movsb
xchg
frstor
jnp
jmp
repz
jg
popf
sar
nop
lret
push
std
iret
stc
rorl
jp
jbe
lahf
sbb
push
add
inc
or
cmp
out
pop
aam
sub
adc
sar
jne
mov
es
lcall
stos
mov
push
cmc
daa
aam
fsubs
xchg
cmovle
add
and
nop
test
or
pop
xor
xchg
jge
dec
cwtl
sub
cmpsb
cmp
sub
mov
push
mov
shlb
pushf
mov
ss
flds
pop
lret
cld
add
or
les
stc
and
or
shrb
inc
mov
imul
push
mov
gs
add
std
adc
jb
into
in
inc
test
repz
call
out
xchg
fldl
movsl
xor
jmp
popf
inc
call
inc
or
inc
mov
cwtl
sarb
test
stc
jno
scas
fldcw
adcl
mov
xor
cmp
mov
sub
xchg
loope
dec
aaa
loope
inc
outsb
mov
faddl
lcall
xor
sub
cmp
int
andb
ret
lret
sub
pop
push
mov
mov
cltd
cli
dec
into
adc
mov
insl
dec
add
fiadds
pop
je
cmp
ds
pop
dec
jae
cltd
lcall
std
rol
mov
push
jae
mov
mov
fidivs
scas
ljmp
or
scas
or
pop
leave
or
adc
dec
pushf
adc
das
sub
or
mov
and
adc
dec
adc
mov
mov
pop
mov
sub
and
cmp
adc
call
jne
iret
fdivs
mov
mov
pop
lret
push
and
stos
mov
add
cmp
jmp
add
fistpl
mov
jo
loope
test
pop
in
out
lods
inc
gs
test
pushf
pop
pop
push
aad
pop
sbb
mov
fnsave
cltd
adc
push
adc
in
fs
jne
ret
or
dec
jne
jle
jle
mov
cmp
or
lcall
test
fdivrs
shll
imul
push
push
pop
inc
std
fsubrs
sbb
xchg
push
cmc
daa
mov
in
outsb
aad
scas
cmp
rcrb
out
stc
and
cmp
lock
dec
sub
aas
xchg
mov
sub
push
dec
pop
fcmovbe
mov
out
and
xor
push
rcr
mov
aam
mov
pop
jbe
bound
sub
cmp
jae
mov
loope
loope
ret
fwait
int3
xchg
xchg
and
jae
pop
dec
push
and
hlt
adc
jno
xchg
push
jno
fcomi
in
and
add
xchg
pop
jnp
or
sbb
jmp
cmp
ret
das
push
bound
test
xchg
add
leave
adc
clc
ret
enter
arpl
vunpckhps
rcll
out
mov
dec
mov
in
add
test
or
cmpsb
fildl
pop
jno
test
mov
imul
sbb
jb
lret
and
test
inc
push
icebp
mov
jp
ljmp
sahf
or
sti
leave
add
pop
adc
stos
cli
scas
push
mov
sub
xchg
jle
dec
bound
pushf
sarl
mov
push
enter
inc
and
test
mov
repz
insb
pop
adc
movsb
mov
dec
jnp
cmpsl
sarl
jbe
ss
out
sahf
sti
mov
add
in
jmp
jae
outsl
cmp
or
rcll
mov
test
mov
sbb
mov
jne
test
mov
test
pmulhw
imul
std
gs
sub
or
jge
push
and
ljmp
or
dec
idivb
fbld
jge
lret
xor
add
pop
cmp
out
adc
push
sub
ss
pusha
mov
and
mov
inc
and
jge
jne
inc
xchg
scas
pop
popf
sbb
mov
jmp
push
xchg
aam
in
repnz
dec
cmp
and
js
sub
pop
adc
in
test
mov
flds
fwait
push
popa
sbb
sbb
in
stc
movsl
js
ret
pushaw
pop
cli
fcmovu
adc
mov
iret
xchg
loope
xchg
stos
shrl
mov
mov
shll
xlat
mov
mov
push
movsl
push
in
lahf
cltd
mov
dec
pop
loope
movsl
cmp
inc
fcmovb
pop
mov
pop
imul
inc
jne
jbe
sbb
push
mov
or
aaa
imul
cmp
iret
test
mov
movsb
mov
lock
add
mov
lods
arpl
insl
pop
cmpsb
imul
fisubrl
lcall
pop
pop
andl
repz
popf
xchg
push
jp
pop
arpl
arpl
push
fstps
jno
push
sahf
in
dec
sahf
in
cmp
addr16
test
adcl
jbe
mov
mulb
iret
sbb
push
xchg
pop
mov
cs
jge
icebp
popa
mov
enter
jnp
or
stos
jbe
fsubl
int3
push
dec
stos
and
cli
push
mov
popa
loop
pop
aas
dec
js
jae
or
fsubr
jp
fcmove
sbb
imul
xchg
movsb
jp
mov
cmp
inc
movsl
je
xchg
mov
cli
clc
jno
mov
in
and
repnz
cmp
icebp
das
or
dec
lret
push
mov
lea
mov
ret
inc
mov
fdivl
or
push
sub
out
or
out
test
sarb
cli
inc
and
inc
lret
push
cmp
es
inc
ljmp
incb
cmp
test
dec
fiaddl
dec
mov
sbb
xor
mov
icebp
dec
mov
pop
dec
pop
lret
cld
inc
cmp
pushf
icebp
jmp
cld
mov
ds
jmp
or
jmp
push
dec
lahf
jne
or
fmul
outsb
ljmp
outsb
jns
int3
stos
pushf
jmp
lahf
fs
xchg
into
mov
pop
adc
in
dec
scas
jns
repz
pusha
insb
add
pusha
adc
or
fldt
cs
lea
addr16
push
jne
adc
fbstp
lea
jae
mov
and
xchg
gs
pushf
arpl
xchg
lods
mov
cltd
fstl
ljmp
hlt
add
push
mov
imul
cld
mov
std
and
outsb
mov
pusha
and
int3
gs
mov
cli
stos
test
adc
sbb
orl
fsubrs
pusha
and
inc
scas
push
sbb
mov
insb
and
push
sarl
push
das
mov
dec
push
cmp
mov
push
imulb
pushf
add
cmp
jno
insl
inc
movsl
popa
aaa
add
mov
fcomip
adc
nop
sbb
inc
aad
pop
mov
ja
xor
ds
test
incb
inc
pop
jne
xchg
jle
aam
loopne
cmpsl
xchg
sub
mov
addr16
add
insb
mov
dec
daa
movsl
xor
movsb
mov
leave
ds
cmp
out
dec
adc
insb
sarb
lret
fsubp
jne
decb
aad
and
pop
lock
cli
dec
mov
sahf
inc
cmp
mov
sbb
scas
lret
scas
pop
mov
pop
fnstenv
scas
pop
arpl
cmp
sarl
lret
movsl
fstpl
je
jle
mov
lods
loop,pn
pusha
mov
mov
inc
lahf
jle
or
dec
add
mov
jp
push
addb
push
jb
xchg
clc
jno
mov
insb
inc
mov
loop
pop
rcrb
mov
mov
lcall
orb
mov
jl
or
push
sub
add
fisubs
aad
inc
dec
out
inc
mov
leave
mov
xor
adc
rolb
int3
push
mov
push
xchg
negl
shl
or
lock
sbb
adc
xchg
cmpsl
xor
ret
sub
and
hlt
cmpsb
pop
pusha
push
outsl
loop
scas
scas
int3
out
jecxz
imul
iret
adc
push
mov
mov
cmp
test
hlt
cwtl
bound
sti
loopne
call
mov
test
out
sbb
enter
faddp
adc
inc
mov
mov
std
mov
add
pop
sub
sub
orb
bound
dec
sbb
js
adc
sbb
pushf
sub
mov
fistps
mov
mov
out
test
dec
xchg
pop
ss
das
movsl
gs
lret
mov
decl
add
test
leave
dec
push
xor
outsb
push
adc
pusha
jg
in
fisubs
pushf
insb
and
movsl
outsl
dec
lcall
mov
mov
inc
add
fcmovne
or
clc
ds
pop
or
outsb
sub
cmc
inc
bound
mov
and
fdivr
dec
push
fsubs
outsb
dec
jg
es
mov
xor
call
hlt
sbb
aaa
mov
scas
mov
andl
and
imul
or
scas
int3
fistl
lea
jns
mov
push
pop
ljmp
jmp
jmp
imul
hlt
bound
in
pushf
mov
lcall
xor
fsubrl
jmp
push
jne
cmp
sbb
ret
inc
pushf
xchg
in
lret
mov
in
pandn
or
lret
jle
push
ficoml
jbe
or
cmp
stos
fdiv
shr
inc
xor
mov
adc
out
mov
popf
loopne
loope
ds
lret
xchg
bound
cmpsl
stos
push
push
mov
sbb
data16
cmove
popf
and
push
push
inc
xor
ficoms
mov
dec
cmp
dec
push
addr16
data16
or
adc
jecxz
outsl
adc
dec
xor
cmp
inc
incb
mov
in
aas
test
jmp
dec
nop
ja
imul
or
shl
mov
mov
mov
jae
or
sub
sub
rorb
and
pop
mov
jnp
mov
filds
add
pop
mov
es
inc
push
shl
or
mov
mov
mov
adc
iret
imul
loop
movsl
inc
mov
and
outsl
fdivr
lret
xchg
push
dec
mov
fists
cld
arpl
outsb
or
loopne
pushf
push
sub
xchg
mov
xchg
or
inc
loop
sbbb
pushf
push
out
stos
xchg
imulb
lret
lds
bound
in
cmpsl
je
test
xor
cld
scas
cmp
sahf
mov
orl
jo
add
mov
ljmp
sbb
daa
icebp
flds
iret
jmp
pusha
add
outsb
push
fdivp
maskmovq
notl
insb
clc
xchg
seta
ret
dec
int3
out
pop
adcb
sbb
std
lods
dec
jmp
jb
pop
push
iret
test
call
dec
rolb
test
fbstp
das
popa
mov
fsts
imul
add
mov
out
das
xchg
out
pop
fcoms
pop
aas
mov
mov
hlt
adc
push
out
mov
cmpsl
or
or
jp
xor
scas
push
mov
adc
push
jbe
mov
jns
ja
lret
addr16
push
pop
sbb
mov
ds
cmp
adc
pushf
mov
je
mov
gs
mov
jl
push
mov
add
pop
orl
sbbl
and
xor
mov
sub
cld
nop
loopne
pop
jmp
cmpsb
jecxz
fwait
xor
xchg
ret
mov
fwait
pop
dec
xor
dec
popf
mov
repz
sbb
imul
aam
bound
jns
fldcw
sbb
fcoms
jno
jns,pn
sub
inc
sub
fsubrl
mov
pop
cli
and
ds
imul
push
jmp
repz
dec
adcb
cwtl
je
stos
movsb
addr16
sbb
fcmovbe
in
mov
add
mov
sbbb
adc
xor
aas
cmp
int
jg
mov
popa
aas
int
repz
repnz
ds
xchg
sbb
imul
push
incb
loope
adc
pusha
dec
and
xchg
push
jnp
std
out
pop
pushl
and
bound
loope
movsl
or
jns
sub
lods
dec
mov
cwtl
and
stc
jns
shll
sub
mov
push
andl
push
repz
sbb
int3
xchg
aaa
mov
add
and
pop
cmpsb
dec
aas
push
lods
mov
pop
bound
fisubrs
jle
push
dec
sub
cli
xor
jae
in
repz
inc
xor
add
sbb
cltd
test
fnstsw
enter
xor
inc
jge
cmpb
xor
movsl
or
aaa
jmp
mov
sbb
push
cmpsl
test
mov
cwtl
mov
data16
pop
or
daa
jmp
movsb
add
xor
in
enter
cmp
or
mov
cmp
mov
xor
je
aad
and
mov
divb
cmpl
and
loopne
push
jmp
sahf
scas
lock
mov
push
rcl
mov
sub
pop
pop
fstpl
pop
shl
inc
cltd
testb
xchg
call
rorl
xchg
xor
mulb
or
sti
mov
into
inc
test
stos
and
xor
sahf
push
test
imul
repnz
pop
jbe
mov
jmp
mov
mov
enter
mov
movsb
xor
in
mov
jnp
pop
ficomps
fldt
inc
add
mov
fsubs
mov
push
aam
iret
repz
and
lahf
fs
dec
pop
push
pushf
cld
test
inc
rcrb
test
lods
pop
or
xchg
rolb
inc
test
lock
inc
fucomp
and
sbb
or
sub
inc
outsb
idivb
or
fcomp
movsb
or
nop
xchg
adc
add
cli
ds
stos
pop
out
gs
xchg
push
jp
and
add
into
fdivl
scas
jmp
js
bound
lods
int3
les
pop
adc
mov
jp
dec
std
cmc
fcoms
notb
xor
adc
xlat
xor
addr16
pop
mov
adc
in
push
mov
mov
cmp
sub
loope
sub
pop
mov
jo
sub
jmp
rclb
jmp
jp
fidivs
in
loop
xor
fs
cmpsl
cmp
out
cld
sub
in
add
mov
outsb
cmp
shlb
loopne
mov
cmpsl
leavew
or
rorl
cmc
in
jp
dec
or
rolb
in
insl
rcll
in
pop
add
mov
ds
add
into
inc
cs
or
imull
pop
out
cs
in
repz
xor
in
fistl
stc
mov
inc
inc
std
dec
and
jae
or
adc
lods
push
or
mov
leave
out
fisttps
add
jle
jg
xchg
xor
add
cld
je
ja
cmpsb
iret
xlat
rolb
mov
push
rclb
or
and
xchg
cmpsl
xor
in
hlt
dec
addr16
ficompl
xor
mov
inc
gs
jno
lahf
shrl
fstpt
outsb
xchg
push
popa
mov
lahf
or
add
add
outsl
xchg
fwait
mov
dec
mov
push
mov
rcl
mov
mov
jmp
sahf
push
sbb
fstpt
es
adc
xchg
jmp
stos
add
leave
cmpsl
mov
sahf
imul
addr16
cs
dec
inc
shrb
xchg
mov
and
mov
xchg
add
push
inc
or
push
adc
push
and
rol
dec
sbb
ja
pop
sub
add
je
mov
imul
ret
adc
cmp
ds
mov
cmp
insl
mov
or
scas
into
dec
jnp
ja
jge
adc
and
imul
adc
pop
sub
pop
xorl
loopne
jl
jle,pt
xlat
dec
sbb
xchg
int3
pop
add
sbb
inc
rcrb
pusha
fdiv
or
mov
fisubrs
nop
add
jo
test
sbb
sbb
add
push
lahf
sub
movsl
int3
shr
add
movsl
inc
inc
ss
inc
or
add
jl
test
jecxz
lds
rolb
bound
stc
jecxz
pop
popl
sbb
dec
fstl
in
std
pop
rcll
mov
imul
jle
scas
outsb
xchg
mov
in
jno
sbb
scas
dec
sub
lods
or
ljmp
sub
pop
loopne
xchg
test
cmpsb
adc
cmp
lcall
sub
or
mov
loope
mov
insl
fs
xlat
pop
mov
xor
push
xchg
cmpsb
add
loop
clc
int
dec
shlb
xchg
mov
hlt
rclb
and
lods
pop
pop
xlat
ret
jno
mov
add
scas
jbe
and
into
loope
adc
push
fisubs
mov
lock
cld
dec
sbb
xor
xchg
sahf
fstpl
je
sbb
or
cltd
ss
and
dec
std
jo
pop
mov
cli
jp
insl
push
cmp
mov
repnz
pusha
fcompl
add
adcl
fbld
loope
fdivrl
sbb
dec
push
sarb
shll
aad
lock
ret
std
jne
dec
rorb
push
mov
jns
mov
scas
xchg
pshufw
and
and
cwtl
adcl
loope
pop
push
jg
xchg
mov
rcrl
aas
mov
adc
cwtl
mov
gs
ljmp
cmp
lods
xchg
arpl
and
push
adc
xchg
sti
and
nop
ljmp
jo
imul
xchg
mov
dec
and
dec
sub
add
pop
sbb
add
leave
push
in
inc
mov
jge
ficoms
jecxz
sbb
adc
dec
lds
sahf
pop
mov
ret
pop
lds
xchg
pop
mov
sub
lods
push
ss
inc
cmp
into
iret
lds
sahf
mov
and
or
pop
sbb
in
aam
in
pushf
push
std
push
orl
test
and
mov
cltd
push
subb
fnstenv
xchg
jnp
rcr
mov
std
xchg
pop
mov
das
bound
lock
ds
inc
jg
cmpb
inc
dec
mov
jge
cwtl
cmpsb
add
loopne
test
lods
jmp
jo
scas
adc
mov
jnp
cli
adc
scas
add
mov
and
sar
or
jno
imul
gs
pop
dec
imul
jns
repz
ljmp
sbb
fiadds
pusha
pop
enter
xchg
cmpsl
inc
push
in
lret
test
inc
repz
cltd
ja
jp
push
add
loope
popaw
loope
hlt
mov
xor
mov
jmp
dec
mov
sub
push
xor
enter
out
cltd
mov
ficoms
call
inc
movsb
cmpsl
and
mov
jb
jne
arpl
aam
xchg
jo
mov
jo
jmp
xchg
adc
ret
xor
xor
mov
stos
xor
add
dec
shll
dec
icebp
into
in
adc
mov
ret
or
inc
dec
lret
stos
sub
movsl
xchg
mov
and
cld
mov
mov
enter
hlt
sahf
vorps
js
fsubl
mov
fdivl
push
add
mov
lret
xchg
sub
notl
cmp
push
adc
dec
xchg
cmp
mov
lahf
jb
sub
jg
aas
jmp
test
jbe
rcr
std
popa
mov
push
jl
push
sub
mov
dec
and
cli
or
sub
xchg
andl
scas
out
add
cmp
xchg
mov
incb
cmpsb
les
mov
repnz
movsl
aam
mov
popa
sbb
xor
loop
mov
xchg
mov
setle
scas
out
mov
and
pop
pop
push
rorl
icebp
cmp
adc
xchg
popf
push
push
mulb
out
mov
dec
push
mov
popf
loopne
fstpt
jecxz
js
cmc
inc
and
in
bound
push
test
xchg
out
or
int
cmp
adc
pop
dec
pop
pop
jo
jbe
frstor
dec
clc
pop
clc
arpl
pop
sbb
jmp
dec
mov
jmp
in
iret
jo
xchg
int
les
dec
jp
gs
cmp
sub
add
fstpl
push
cwtl
push
xlat
imul
outsl
pop
pop
push
mov
fldenv
rcrb
jle
dec
sti
sub
mov
ret
test
add
and
pop
xor
into
out
sub
jge
mov
fdiv
inc
mov
mov
fs
mov
ret
and
xchg
jae
data16
test
dec
push
insb
jmp
out
adc
lods
push
fistl
in
mov
dec
jae
inc
aam
mov
repnz
jns
xchg
aas
mov
add
mov
jne
mov
sub
cmpsl
cmp
or
pushf
xchg
dec
sub
pop
add
push
rclb
mov
clc
adc
ja
ret
pop
lcall
or
add
loop
loope
sub
xchg
jb
mov
push
fsubr
es
ljmp
push
xchg
jnp
pushf
aaa
movsb
push
or
shrb
cmp
sti
xor
loope
mov
jb
mov
repz
sbbb
loop
iret
adc
fisttps
out
or
mov
push
leave
xor
sbb
call
stc
cmc
push
mov
cmp
xor
xchg
lods
aam
stos
mov
mov
mov
dec
fwait
ds
lock
push
xchg
das
mov
mov
mov
fidivrl
xlat
jne
pop
fists
add
shr
jmpw
insl
mov
sti
xchg
add
jns
mov
xor
fnsave
sub
jle
ret
icebp
xor
sbb
leave
jle
test
xor
out
or
mov
hlt
dec
ja
cld
scas
pop
shrl
popfw
arpl
push
dec
sub
cwtl
cmp
call
nop
fisttpl
divb
in
xchg
int
test
xchg
jmp
sub
pop
sbb
repnz
pop
jecxz
mov
out
out
mov
mov
je
sub
es
or
mov
jl
cmpsb
fnstenv
push
cmc
fisubs
jmp
cwtl
push
lret
lods
sub
int3
sbb
mov
mov
rorb
mov
pushf
in
inc
in
inc
sahf
popf
fst
into
pop
sbb
popa
and
mov
mov
js
clc
inc
inc
fs
inc
ljmp
and
pop
sti
scas
cmp
mov
fcmovb
iret
mov
push
aaa
mov
aad
or
test
dec
sbb
fstl
sbb
pusha
stos
shll
ret
mov
adc
xchg
sub
push
xor
mov
mov
nop
mov
or
movsb
pop
mov
call
cmp
inc
adc
and
jb
fwait
push
nop
cwtl
test
sub
mov
push
mov
int
dec
nop
bnd
pushf
mov
repz
add
imul
dec
xchg
xchg
pop
popa
repnz
out
dec
loop
mov
mov
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
jmp
outsb
lods
or
mov
cmpsb
or
push
cltd
add
addl
mov
sti
sbb
push
xor
add
mov
sarb
outsl
repnz
aam
leave
mov
sarb
jp
ja
loope
mov
sbb
lcall
sub
push
stos
insl
imul
xchg
call
jmp
fidivs
mov
into
data16
scas
mov
fldt
or
in
xor
mov
gs
test
pop
lret
sbb
xor
scas
movsb
fwait
cmp
gs
push
leavew
les
mov
jnp
leave
xchg
and
pop
xlat
jp
std
jo
dec
insb
jne
mov
ret
adc
movsl
outsb
xor
pop
ffree
cmp
dec
inc
mov
mov
popa
mov
dec
xchg
dec
arpl
pop
mov
mov
in
jno
mov
js
lock
cmp
fiaddl
xor
in
push
out
jae
lds
repz
test
sbb
iret
ret
xchg
fcomip
cmpsl
mov
shrb
or
jmp
or
popf
mov
and
inc
jp
test
xor
xchg
dec
lahf
mov
enter
into
pop
push
int3
lret
mov
pop
outsl
mov
lea
mov
inc
sti
enter
cmp
fidivs
push
xor
add
ret
mov
push
add
dec
and
mov
js
loop
daa
jo
iret
arpl
out
fadd
xchg
stos
rcr
addr16
loope
nop
push
and
jae
sti
mov
enter
fmull
sub
hlt
fucomp
mov
ds
shrb
mov
enter
scas
inc
repnz
daa
xchg
fadd
in
jae
int3
std
call
popa
fidivrs
xor
das
xchg
inc
icebp
mov
fdivrl
js
jno
jns
mov
lcall
mov
sarl
lock
and
cmp
imul
xchg
mov
inc
adc
push
enter
lret
adc
mov
mov
adc
add
scas
pop
add
std
sbb
dec
mov
and
ja
imul
gs
add
cli
jae
fadd
in
movsl
aad
fists
iret
mov
fstpt
jnp
sub
and
cmp
ss
mov
dec
dec
jo
outsl
gs
pushf
scas
dec
xchg
outsl
movsl
xchg
jb
add
push
jae
js
test
dec
das
cmp
mov
mov
xchg
dec
pusha
orb
push
inc
in
cld
cmp
loope
jg
pop
xor
movsl
dec
push
sahf
push
mov
and
cwtl
mov
cmpb
pop
xor
pop
dec
es
cmp
imul
rcrl
push
imul
les
add
jnp
adc
fisttpll
dec
into
sub
lock
mov
das
sub
popf
ja
pop
pop
sbb
pop
sti
xor
stos
pop
aam
and
shlb
aaa
push
shr
sbb
mov
movsb
dec
std
cmp
jmp
cwtl
fildl
add
orl
ds
xor
test
and
lret
mov
pop
mov
insl
add
xor
sbb
cmp
or
xlat
out
movsl
xchg
fidivs
shrb
sbb
and
fmull
popf
cmc
xor
push
in
mov
sbb
sbb
and
dec
loopne
pusha
dec
pop
adc
int3
cmp
aas
jp
push
cmp
int3
mov
jnp
cwtl
inc
bound
jo
add
test
leave
imul
adc
sub
inc
lahf
adc
dec
jns
push
test
xorl
or
inc
mov
jp
fidivrl
and
inc
out
ja
add
adc
out
stos
out
pop
mov
sub
loop
in
gs
inc
mov
mov
add
popf
jmp
in
pusha
and
int3
inc
jge
stos
xor
mov
fistpll
loope
pop
sub
add
xor
mov
das
fbld
popa
outsb
push
mov
mov
dec
ljmp
out
out
mov
jnp
mov
mov
jb
enter
inc
xor
pop
aam
imul
notb
mov
pop
mov
dec
mov
pop
mov
fbstp
mov
xchg
aam
mov
fisubl
xchg
js
mov
aad
push
fmulp
daa
and
cli
jmp
and
cmp
cmc
push
mov
iret
cli
fiaddl
jae
push
mov
xor
pop
push
pusha
and
mov
lea
pop
outsb
fucomi
cwtl
out
filds
nop
or
pop
loopne
cmp
mov
or
daa
cmpsl
push
cmp
ljmp
mov
lcall
xchg
aad
mov
sti
cwtl
pop
sub
xchg
ja
xlat
push
mov
lea
loope
push
xor
mov
pop
dec
pop
in
test
adc
je
lahf
mov
dec
mov
data16
ss
add
shl
daa
pop
mov
xchg
pop
jns
int
movsb
xlat
push
sub
daa
inc
and
or
lods
mov
out
pop
mov
popf
ret
nop
mov
push
mov
sahf
nop
loope
xor
cmp
mov
cmp
pop
xchg
cltd
pop
mov
arpl
das
adc
sbb
lock
cmp
mov
mov
fs
cmp
shll
cmp
mov
xchg
inc
lea
add
ret
mov
cld
andb
stc
pop
ret
hlt
repz
loope
add
push
xor
std
and
xchg
stos
nop
push
inc
sub
imul
cmp
push
arpl
pop
rolb
push
gs
add
inc
push
lret
add
lahf
adc
pop
aaa
sub
sub
and
ss
pop
sbbb
mov
mov
jne
sbb
std
add
fnsave
inc
in
jp
outsb
shlb
and
icebp
pop
add
and
add
jp
add
std
bound
mov
mov
addr16
sbb
inc
xchg
sbb
push
and
mov
out
nop
mov
data16
and
push
test
in
pop
fsubrs
sbb
int
stc
dec
ljmp
jp
outsl
adc
es
hlt
mov
lods
sub
mov
sub
and
das
outsb
iret
js
fwait
aam
fmuls
daa
inc
imul
scas
sub
aaa
pop
mov
mov
pusha
sahf
jecxz
mov
push
dec
push
cmpsb
sbb
repz
sti
mov
xchg
outsl
sbb
enter
sbb
xor
mov
sti
insl
xor
loopne
ljmp
dec
out
lds
jno
mov
mov
mov
jmp
sbb
clc
cltd
cld
xchg
jns
xor
lods
imul
pusha
sti
ss
and
cld
pop
jmp
xor
or
inc
inc
mov
pop
sarb
scas
lea
add
out
mov
leave
test
sbb
inc
nop
pop
loope
addr16
fcomi
ret
cmp
add
out
sub
scas
insl
push
push
dec
add
push
xor
gs
aas
shrb
mov
stc
push
popf
scas
or
xchg
daa
add
in
popa
and
push
add
scas
cmp
sub
pop
sahf
out
xor
sti
pop
insb
decb
mov
pop
mov
mov
enter
xlat
and
adcb
cmp
xchg
mov
fwait
push
out
xor
mov
sbbb
lods
sbb
xchg
stos
xor
mov
les
repz
iret
pop
shll
test
movsl
mov
ret
popf
popf
adc
into
xchg
dec
shlb
and
cld
and
rol
pop
cmp
dec
lods
add
cmpsl
lock
shlb
loop
push
mov
cld
call
ds
sbb
mov
cmp
mov
rol
loopne
mov
xor
mov
sbb
push
cmp
sub
inc
mov
imul
sbb
xlat
xor
xorl
notb
xor
dec
cmp
fiaddl
mov
mov
mov
sahf
pop
cmp
jbe
adc
or
mov
cmp
subl
jne
int
ds
shll
fiadds
iret
jmp
inc
mov
or
jecxz
push
movsl
add
mov
testb
push
lock
iret
inc
xchg
daa
je
repnz
insb
mov
out
dec
jo
dec
insl
sbb
ss
bound
and
and
xchg
mov
rcrb
push
cmp
xor
lret
push
xor
jecxz
lods
cmp
mov
or
lods
mov
mov
ret
adc
cs
inc
or
mov
js
cmp
int
pusha
pop
pop
inc
pop
push
push
sbb
pusha
into
ss
ljmp
mov
mov
dec
push
daa
sbb
sbb
pop
mov
popa
sysret
cltd
lds
pop
add
dec
jecxz
pop
int
daa
adc
icebp
pop
sbb
inc
lods
and
shlb
faddl
fsubs
jg
pop
or
in
test
cmp
fwait
push
outsb
and
or
into
in
sahf
xchg
or
aas
pop
xor
jae
negl
mov
mov
mov
xor
stos
push
ficoms
pop
mov
js
mov
jb
and
dec
pop
sbb
mov
cmp
sahf
movsl
fcmovu
sub
cmp
out
mov
xchg
lock
inc
test
xchg
leave
fnstcw
idivl
jae
sbb
popaw
xchg
adc
push
inc
adc
inc
jne
sahf
fistpll
xchg
movsl
lock
int
mov
pop
loopne
and
sub
xchg
jmp
arpl
pusha
inc
mov
scas
loope
or
pop
sbb
fwait
jne
adc
mov
mov
dec
xchg
fldt
pushf
fsubr
data16
lahf
in
xchg
jbe
lahf
push
pop
xchg
inc
add
fs
movsl
jb
xchg
cmpsb
adc
mov
jle
jle
es
cmp
pop
sbb
xchg
jno
mov
fsubl
outsb
mov
ret
rclb
lock
adc
cwtl
lcall
pushf
xchg
aam
xchg
dec
push
ljmp
insb
sbb
jb
xlat
mov
and
mov
iret
js
mov
dec
and
inc
movsl
cmpsb
bound
push
orl
sub
dec
inc
lea
xchg
icebp
jecxz
add
inc
xor
mov
push
shl
jge
test
add
imul
mov
or
insb
jnp
lock
add
jo
xor
movsl
dec
adc
fstpt
push
jne
dec
xchg
xchg
xchg
sahf
pop
int
push
and
push
jbe
test
inc
mov
dec
ljmp
push
cmpsb
cs
and
jmp
test
inc
jg
pop
arpl
push
lret
out
scas
jo
stos
imul
ds
mov
xor
dec
in
lea
jle
and
and
nop
call
gs
mov
cmp
mov
scas
pop
add
xchg
lcall
sub
sub
mov
mov
in
fwait
add
or
cmp
aaa
scas
cs
mov
cwtl
lods
adc
jnp
iret
scas
mov
push
jns
aaa
jo
fisubrl
std
cmpsl
or
nop
dec
loop
jp
push
or
cmp
pop
and
inc
add
jno
cmc
popf
sub
lods
icebp
mov
addr16
stc
cmp
outsl
ret
or
inc
adc
pop
push
sbb
shlb
sahf
aam
pop
pushl
inc
ja
mov
fs
jae
sub
lods
adc
sbb
push
pop
push
sub
pop
test
mov
loope
pop
pusha
and
mov
cmpl
sti
outsl
inc
inc
push
inc
pop
ljmp
test
pop
mov
and
ret
rcll
scas
cmc
sub
adc
stos
lods
pop
add
sbb
mov
and
dec
mov
xchg
jae
mov
dec
adc
cmp
pushf
and
negl
add
inc
mov
add
mov
xchg
lret
xorl
repz
pop
cld
mov
jno
push
out
xchg
data16
mov
mov
lock
test
cmp
lds
and
sub
mov
mov
push
xor
fiadds
sub
fbstp
push
jmp
dec
dec
and
mov
bound
xchg
rcll
ret
add
cmp
fwait
popa
loope
aaa
cmpb
aam
sbb
dec
cmp
iret
inc
cli
bound
popf
lds
filds
ret
ret
mov
xchg
popa
rdpmc
inc
xchg
inc
sub
sub
sti
repz
push
xchg
mov
es
addr16
sbb
mov
or
mov
xchg
js
and
sbb
or
pop
inc
mov
jns
lock
dec
mov
push
xor
mov
inc
cmp
mov
dec
int
loopne
das
xchg
sbb
rclb
das
ja
sub
mov
int
xlat
je
dec
mov
and
cmp
dec
popf
mov
hlt
int3
inc
into
mov
cmp
je
push
in
ret
mov
cmpsb
mov
aaa
push
orl
lock
push
mov
iret
scas
inc
and
out
sub
hlt
or
sbb
or
xor
test
jmp
inc
dec
or
into
sub
dec
mov
push
xlat
mov
lret
enter
nop
insl
jmp
sbb
xlat
insl
sub
mov
inc
icebp
lret
mov
arpl
push
mov
cs
jg
mov
test
mov
scas
das
aas
loopne
sti
shrb
pop
shlb
int3
or
bound
mov
mov
cli
andb
outsb
bound
call
mov
sbb
jmp
sbb
ffreep
xchg
rcll
ret
mov
orl
into
and
dec
xor
movsb
loop
pop
xor
xor
outsb
repnz
or
adc
add
popf
stos
popa
jecxz
xchg
jecxz
cmpsb
lcall
movzwl
jb
push
mov
mov
ds
arpl
or
lcall
aas
dec
xor
mov
mov
xchg
hlt
add
insb
inc
mov
fnsave
into
mov
lahf
insl
ja
insl
lahf
xor
inc
movsl
or
pop
dec
add
je,pt
in
xor
mov
push
pop
dec
sub
dec
aam
repnz
loopne
insl
in
jo
sub
fdivs
test
or
inc
jne
cmp
arpl
cld
enter
mov
vpminub
mov
in
mov
mov
mov
jb
nop
sbb
xchg
xchg
insl
mov
push
or
out
mov
out
xor
cwtl
sub
jmp
pop
sbb
cmpsl
out
push
ss
lds
mov
push
xor
mov
and
shll
out
test
dec
ficoml
es
int
lea
dec
dec
scas
mov
fistpl
jl
add
inc
ss
sarb
nop
sbb
insl
fcomi
sbb
or
sub
fwait
je
jl
stos
mov
mov
ret
pop
icebp
cmp
dec
dec
iret
adc
xlat
rol
pop
sub
xchg
mov
outsb
pushf
jmp
adc
adc
mov
pop
lret
adc
stc
dec
nop
loope
rcrb
pop
call
movsl
imul
and
pop
fs
xchg
call
ljmp
and
cmp
and
jno
push
cld
clc
imul
ja
sub
int3
inc
sbb
jo
lods
cltd
or
mov
and
and
jns
jmp
adc
ja
sti
notb
mov
xor
jmp
dec
lods
aas
fnstsw
jb
jle
mov
loop
aad
push
je
pop
rorl
nop
popa
jp
fwait
lcall
sbb
ss
or
gs
fcmovne
daa
insb
repnz
push
test
mov
inc
out
jl
cmp
fistpll
xchg
pop
or
adc
out
jl
xorb
xor
sub
ljmp
jle
adc
cld
xor
inc
dec
in
push
pushf
add
gs
subb
or
dec
and
cmpsb
mov
xor
push
dec
pop
int
cmpb
xlat
aaa
outsb
pusha
mov
mov
icebp
ljmp
js
inc
ss
xor
int3
enter
mov
push
sub
adc
test
aas
xchg
ret
and
mov
int
adc
cmpl
sar
mov
mov
xchg
xchg
jmp
test
pop
cwtl
or
mov
or
sub
push
xchg
pop
inc
rorb
scas
adc
push
mov
in
das
adc
rol
int3
bound
jno
into
pop
stc
dec
xchg
and
lock
inc
jb
into
sub
dec
xlat
mov
pop
ljmp
add
sub
jo
mov
cmc
leave
out
in
add
mov
test
clc
add
stos
xor
test
cmp
sub
pop
outsl
jno
mov
add
push
sbb
aaa
add
arpl
idivl
fidivl
cld
xor
xchg
dec
mov
pop
aad
insb
jns
fcomps
mov
outsb
out
xchg
sbb
fsubp
jp
test
gs
mov
das
and
pushf
test
mov
cs
dec
mov
les
mov
push
adc
pop
divl
call
inc
and
xorl
inc
data16
push
nop
jbe
loop
iret
aad
aad
les
push
cwtl
xchg
xchg
pop
out
jae
popa
inc
test
add
jno
and
das
jnp
and
sbb
push
jo
mov
lahf
dec
xchg
mov
push
xchg
inc
or
les
sbb
xchg
in
inc
inc
add
gs
pop
push
shr
dec
jmp
pusha
ss
cwtl
xchg
xchg
into
add
mov
ja
and
pop
ja
gs
xor
je
iret
scas
mov
sub
mov
sub
inc
pop
lods
stos
sub
mov
mov
pop
cltd
push
xchg
addl
int3
shlb
xchg
push
mov
add
sub
js
push
aas
add
repnz
sbb
mov
and
pop
mov
or
cmc
iret
shlb
and
loopne
scas
inc
adc
adc
push
nop
and
inc
mov
sub
outsb
pop
xchg
rcll
xor
lods
std
out
icebp
xchg
and
lock
push
pop
mov
test
in
ret
mov
fcomps
mov
out
jle
xlat
mov
bound
adc
movsl
push
pop
mov
mov
ficoml
and
pop
leave
out
or
je
popa
mov
adc
cwtl
imul
pop
sbb
adc
out
lods
xor
xchg
add
sti
js
test
adcb
xchg
fisubrs
rcrl
xlat
cmpsb
or
jecxz
cmp
jp
push
inc
sub
jne
mov
in
push
cli
inc
or
int3
adc
rcll
pop
mov
push
lahf
pop
add
in
or
inc
int
dec
mov
inc
lock
xor
fs
jbe
jmp
push
icebp
or
add
jle
insw
ret
adc
sub
push
loop
and
sbb
mov
xchg
sub
adc
cmp
decl
pop
stos
es
iret
stos
dec
add
ss
stc
pop
dec
test
mov
jmp
aaa
mov
lock
call
lret
out
frstor
das
or
fwait
mov
mov
xor
pop
jp
iret
rcll
data16
fs
adc
xor
sub
loopne
out
pop
xchg
lret
pushf
cmp
mov
jl
fdivrp
push
insl
sbb
jbe
xchg
and
imul
cli
push
jo
sbb
shll
push
out
mov
inc
xchg
int
idivl
mov
sti
jbe
ds
dec
cmc
shlb
ja
sbb
pusha
fdiv
mov
jecxz
cwtl
mov
dec
addr16
out
popa
jb
mov
mov
shlb
xor
shlb
xchg
lret
mul
in
in
jl
imul
sub
idivb
dec
xchg
jbe
mov
lret
push
mov
std
jo
insb
int
movsb
jnp
mov
mov
cmp
je
xor
clc
sub
push
inc
repz
movsb
fwait
xchg
xor
gs
mov
es
addr16
dec
sub
leave
push
in
xor
pop
out
test
xchg
push
clc
cmpsl
jp
aad
fimull
cmpsb
dec
int3
mov
push
xchg
or
push
jne
test
jae
imul
int
mov
mov
push
and
in
popa
ljmp
jg
imull
inc
inc
sbb
push
loopne
mov
dec
fdivp
arpl
xor
divb
aam
jmp
mov
es
inc
xchg
popf
ja
pushf
lods
push
scas
push
test
pusha
jmp
mov
sbbl
jne
les
ja
mov
fistl
sbb
add
insb
fldt
xchg
pop
inc
in
test
dec
adc
daa
dec
bound
and
out
sahf
inc
mov
jl
cmp
xchg
aad
stos
orb
cmc
addr16
repnz
testb
in
int3
mov
rorb
jbe
mov
ret
add
mov
sub
cmc
jmp
push
pop
pop
mov
and
sub
mov
or
outsl
mov
imul
mov
imul
les
mov
jae
test
add
xchg
fiadds
decl
sub
ja
mov
and
xchg
stc
rorb
and
ljmp
push
adc
lds
lret
inc
outsl
int
add
jae
andl
into
xchg
lahf
adc
fwait
addl
adc
xchg
vpsubusw
inc
pop
pop
test
sub
out
adc
push
push
lret
mov
rcrb
nopl
jns
stc
stc
mov
out
pop
push
mov
and
daa
mov
jo
push
jl
lcall
cmp
cmpsl
adcb
int
shlb
rcrl
rcll
imul
mov
out
aas
or
scas
xor
xchg
or
mov
aaa
test
rol
nop
add
xchg
mov
sarb
sbbl
xor
iret
xor
mov
dec
pop
add
inc
push
stos
jle
mov
sahf
inc
or
inc
ds
xor
fwait
inc
cld
inc
dec
sbb
imulb
mov
xchg
mov
fsub
rcrl
sub
mov
xor
sub
popf
ja
fnop
push
sti
xchg
dec
or
test
mov
fcomps
sbb
es
mov
mov
sbb
iret
aad
xor
mov
pop
pop
inc
add
pop
lahf
ret
ret
push
sub
inc
lret
inc
rorl
daa
xor
xchg
lea
adc
inc
pusha
mov
roll
inc
push
mov
xchg
and
pop
cmp
cld
popa
add
mov
and
xchg
mov
cmpsl
in
sbb
cmp
stos
subb
frstor
mov
jne
cmp
jne
aad
enter
fsub
mov
lock
rorl
pop
or
add
mov
dec
dec
adc
xlat
scas
jecxz
and
xlat
sbb
mov
scas
push
sbb
sahf
pop
es
mov
ret
pusha
aad
dec
push
pop
movsl
mov
xor
mov
or
imul
out
mov
insb
mov
insl
xlat
out
cmp
pushf
jae
pushf
test
ss
enter
fs
aam
test
imul
xor
repz
fmuls
aad
pop
mov
xchg
test
imul
pop
xlat
testb
movsb
fsubrs
not
cwtl
jno
sahf
dec
mov
mov
mov
or
xchg
mov
into
fiadds
ljmp
xchg
adc
mov
add
notb
mov
push
rorb
push
cmpsl
call
cltd
ficoml
adc
je
fldl
fnsave
lahf
push
jl
nop
push
mov
cwtl
or
iret
jne
mov
cmp
enter
jne
int3
inc
into
mov
ds
mov
aaa
xchg
in
cmp
jge
inc
sahf
ror
or
push
inc
jno
mov
dec
scas
aaa
sub
enter
cmp
test
je
fidivrl
mov
mov
in
adc
pusha
les
jecxz
imul
in
push
sbb
or
lahf
pushf
and
cmpsb
sti
icebp
mov
lea
mov
mov
insl
rol
aas
mov
lods
pop
mov
sbb
shll
pusha
xchg
dec
sbb
push
xor
data16
fnstenv
cmpsl
and
or
mov
fyl2x
loop
adc
xor
pop
aam
or
fwait
test
inc
push
mov
and
jo
dec
push
dec
inc
jae
test
lahf
pop
ljmp
lcall
scas
push
in
out
aad
fcmovnbe
jmp
adc
jnp
decb
push
repnz
jle
push
test
adc
dec
fs
or
mov
ret
and
or
imul
pop
sahf
dec
jle
in
nop
in
sarb
mov
push
mov
dec
dec
dec
cmp
pop
push
inc
push
jmp
aad
inc
inc
lods
or
pop
test
add
dec
fwait
jp
push
clc
push
adc
cli
lahf
push
sbb
pop
icebp
pusha
sub
aam
icebp
sbb
cld
iret
mov
arpl
clc
sti
push
clc
lock
outsl
sbb
std
aam
mov
xchg
test
aad
mov
lret
bound
xlat
cwtl
cmp
mov
loopne
push
rcrl
pop
jmp
dec
sub
mov
enter
repz
popa
and
inc
shl
popa
sbb
enter
std
cmp
test
add
jp
and
push
enter
and
dec
test
dec
xor
loop
dec
je
dec
jnp
add
fwait
pop
dec
push
arpl
rcl
mov
push
dec
or
outsb
lret
and
xlat
imul
out
loop
ret
sub
int3
daa
ret
lret
loopne
adc
push
mov
mov
in
inc
jo
pop
aaa
and
jnp
or
fcmove
mov
sahf
mov
in
decb
pop
and
shll
push
dec
inc
mov
je
stos
sub
out
pop
bound
jge
add
stos
icebp
movsl
out
jmp
imul
mov
cld
enter
mov
pop
push
pop
mov
and
pop
sbb
call
mov
aad
jl
pop
gs
das
jae
popf
imulb
cmp
mov
mov
xchg
lahf
xlat
repnz
adc
push
call
pop
cmp
std
icebp
js
mov
pusha
push
nop
fdiv
sahf
mov
jae
out
test
dec
ret
nop
addb
das
bound
jb
lret
icebp
out
cmpl
test
sbb
mov
mov
push
sub
sub
add
xchg
icebp
xchg
push
shl
loop
std
push
jns
add
les
subb
or
mov
sbb
add
outsb
fucomip
movsl
lahf
fucomp
pop
push
call
sub
cmp
xor
jl
cmp
sbb
cmp
and
js
xchg
int
popf
sbb
xchg
mov
push
sub
outsb
daa
pushf
movsl
xor
mov
add
dec
cli
movsb
ds
sub
sbb
sub
out
or
addr16
sub
inc
jnp
in
jl
jbe
mov
sub
fildl
rcll
aaa
pop
jne
loop
mov
jo
cld
loope
mov
and
lds
mov
bound
jb
mov
xchg
inc
je
aam
cmpsb
jbe
push
dec
cli
stos
and
test
fsubrs
scas
imul
xchg
cmc
cmpsl
cmp
inc
mov
test
dec
mov
out
jmp
push
mov
cmp
fists
jle
inc
lds
xor
or
dec
or
and
pop
jb
and
ja
outsl
pop
popf
dec
mov
aad
push
aas
sbb
aas
sbb
adc
dec
js
imul
sbb
pop
bound
or
push
leave
xchg
aad
adc
sbb
jae
or
aam
ret
into
add
or
fstpt
andl
pop
sub
sbb
test
inc
test
mov
scas
adc
pusha
mov
push
dec
incl
pusha
push
clc
inc
add
cld
sbb
or
fwait
mov
or
addr16
aas
pop
jo
rcll
imul
arpl
xor
xchg
sub
inc
mov
dec
xor
sahf
in
sbb
xorb
push
ret
ret
xchg
js
jecxz
ljmp
xchg
test
mov
mov
stos
cmc
adc
arpl
jb
mov
aad
cmp
dec
imul
arpl
fnstcw
stc
xchg
fst
mov
mov
push
test
mov
dec
push
mov
stos
mov
mov
aas
movsl
and
adc
sbb
shll
popa
sarl
icebp
leave
mov
test
pop
and
rcll
add
cmp
mov
add
add
pusha
mov
add
std
inc
insb
popf
push
nop
lds
cmp
aam
rcrl
xor
shlb
mov
mov
inc
add
mov
inc
inc
mov
rcl
aam
cmp
in
and
dec
out
stos
jns
inc
jge
ja
mov
xor
ret
adc
in
mov
in
loop
test
jg
in
arpl
movsb
pushf
cli
fisttps
das
adc
add
xchg
or
or
insl
ljmp
mov
push
cli
adc
je
lcall
push
add
aad
test
sbb
mov
jb
jno
cmp
adc
xlat
test
add
cmp
inc
imul
rorl
ljmp
jg
inc
xor
repz
lret
push
mov
jecxz
or
pop
xchg
jns
outsb
dec
shrb
scas
mov
je
stos
mov
pop
mov
mov
jns
pusha
jae
sub
adc
add
in
mov
cmp
pop
push
dec
jg
fcom
jmp
mov
jno
pop
and
mov
add
fisttps
js
jge
jne
adc
mov
outsb
add
cs
xlat
xchg
push
sarb
mov
push
out
stc
cmp
outsl
and
mov
jo
cmpsl
adc
cwtl
sub
mov
and
in
test
cmpsl
inc
fimuls
arpl
je
test
stos
adc
outsb
gs
xchg
pop
incl
sbb
push
push
insb
jg
ja
fisttpll
cmpsb
ds
push
lret
mov
lea
jne
dec
leave
arpl
lea
outsl
out
sahf
sbb
pusha
and
lods
inc
jecxz
mov
jne
call
or
lea
inc
testl
in
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
and
movl
andl
mov
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jb
mov
xorl
mov
mov
sbbl
xor
xorl
add
mov
and
mov
and
xor
xorl
push
xor
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
movzbl
or
mov
mov
subl
xor
mov
add
andl
mov
inc
mov
cmpl
jl
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
mov
movb
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
pushl
call
jmp
lea
incl
mov
mov
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
call
cmpl
jb
mov
xor
movl
add
andl
mov
sbbl
movl
push
movl
movl
cmpl
je
cmpl
jl
jmp
push
push
push
call
mov
dec
mov
jmp
mov
or
push
mov
xor
xor
or
xor
mov
sbb
mov
mov
push
add
jmp
incl
mov
mov
inc
movl
cmp
jb
not
mov
xor
movl
add
jmp
movzwl
or
mov
adc
mov
adcl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
add
addl
movzwl
sbbl
mov
movzwl
and
mov
sbbl
movzwl
xor
add
mov
movl
mov
mov
inc
not
mov
movl
cmp
jne
and
mov
sub
mov
xorl
xor
and
add
mov
mov
sbbl
xor
add
adc
mov
addl
movl
movl
movl
movl
mov
movl
cmpl
je
cmpl
jb
jmp
push
push
call
mov
dec
mov
jmp
mov
mov
xor
add
movzwl
mov
mov
je
mov
subl
mov
xor
xor
notl
sub
notl
sub
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
subl
mov
mov
movl
add
andl
imul
mov
xor
mov
mov
add
mov
add
incl
or
mov
mov
mov
sbbl
add
xor
mov
dec
mov
add
mov
add
and
and
mov
xor
mov
subl
mov
lea
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
pushl
call
cmpl
jb
mov
or
mov
sub
movzwl
and
add
mov
andl
mov
xor
adcl
add
movl
jne
movl
jmp
xorl
mov
subl
sub
xor
movl
cmpl
je
cmpl
jbe
jmp
push
call
xor
or
dec
mov
jmp
mov
subl
mov
mov
xor
decl
xor
adcl
sub
sub
xor
mov
mov
mov
jmp
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
push
push
call
mov
dec
mov
jmp
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
addl
imul
mov
andl
mov
inc
mov
cmpl
jb
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
mov
addl
add
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
jmp
mov
mov
andl
add
movl
xor
mov
subl
mov
mov
xorl
add
xorl
and
or
mov
mov
sbb
mov
xorl
mov
lea
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
jmp
rcr
sbb
mov
nop
cs
or
loop
loope
mov
cmpl
push
push
lcall
stc
xchg
jecxz
adc
or
push
push
jecxz
pop
or
stos
sarl
aam
push
dec
shll
mov
in
fwait
outsb
aas
test
mov
out
add
inc
xchg
mov
or
loop
pop
aam
dec
lds
cmpsl
fists
jmp
aam
or
sbb
jno
shll
mov
ror
sbb
pop
popf
mov
pop
cwtl
insb
xor
sbbl
add
inc
cli
jg
inc
or
xchg
add
xchg
sub
nop
in
xor
mov
in
mov
pop
xchg
ja
xchg
aaa
and
dec
cltd
lret
or
ret
lea
sbb
out
dec
iret
adc
jmp
or
adc
mov
cmp
push
pop
jo
pop
push
or
xchg
push
dec
add
bound
aaa
jg
mov
or
fidivs
dec
out
das
dec
jmp
pop
lods
mov
jbe
pop
cmp
out
stos
aaa
fisttpl
lret
add
sbb
loope
rcrl
add
xchg
xchg
add
jne
jns
pop
in
jl
das
stos
add
call
push
arpl
daa
cmp
sahf
add
xchg
ret
pop
xchg
and
movsb
outsb
xor
push
xchg
push
leave
in
je
loop
out
dec
ss
push
js
push
stos
iret
and
jle
mov
xor
ret
fcomps
fisttpll
out
fisubrl
cmpsb
fwait
jp
inc
xchg
sub
dec
lds
cmp
iret
aad
in
repz
jg
mov
cmpsb
xchg
pushf
addr16
sbb
scas
lock
ret
ja
flds
add
jg
clc
mov
sub
mov
mov
inc
scas
aam
push
add
jae
call
mov
xlat
test
mov
inc
sti
lret
push
arpl
add
jp
loope
mov
mov
in
aaa
mov
lods
test
fadds
mov
rcl
cld
sbb
sub
dec
gs
mov
jg
pop
out
pop
outsl
iret
jnp
loopne
push
pop
outsl
push
cmovb
jp
and
sar
stos
cmp
mov
xor
mov
sbb
inc
jmp
pushf
out
cmpb
scas
sbb
or
gs
mov
fwait
inc
lar
icebp
sbb
lods
lea
mov
inc
addr16
sti
jmp
and
fwait
xor
loop
mov
in
loopne
lods
lea
fwait
je
cmp
pop
jne
fiadds
scas
out
int3
sub
ljmp
imul
inc
mov
xor
in
scas
add
sar
stos
or
mov
mov
divb
insl
sbb
xchg
or
mov
or
aas
mov
test
arpl
pop
cli
gs
and
into
dec
mov
add
cmp
call
inc
mov
sbb
inc
xchg
negl
sub
and
call
mov
fadds
dec
or
mov
rorl
push
lock
sub
into
rcl
mov
outsb
in
push
lods
mov
and
mov
mov
adc
add
xchg
jmp
int
out
jno
push
fstpl
sub
or
shl
inc
mov
push
test
arpl
sbb
mov
into
mov
shr
in
inc
and
lea
je
andb
lret
movsb
loop
xchg
sbb
pop
jno
call
adc
or
or
jae
sarl
jne
push
test
adc
fwait
icebp
pop
adc
mov
ljmp
dec
daa
adc
jae
pop
mov
cmpsl
ret
cs
andb
cmc
jle
push
popf
mov
pop
sub
mov
inc
icebp
test
bound
xor
je
decl
dec
adc
out
das
fcomp
push
adc
sub
scas
pop
cmc
repz
pop
sub
ret
pushf
mov
icebp
rcl
jge,pn
lock
mov
xchg
arpl
call
out
adc
insl
cltd
xor
fmuls
test
dec
pop
andl
stos
cmp
ja
fdivrs
cmp
mov
jo
dec
sbb
fidivrs
imul
xchg
xchg
outsb
pop
jne
pop
stos
dec
int3
clc
clc
jp
or
icebp
pop
adc
iret
pop
pusha
add
jmp
mov
das
pop
cmp
cmp
mov
xor
jns
add
or
xor
es
test
dec
pop
fsts
sub
pop
not
popa
lea
ljmp
sub
pop
cmpb
sti
pop
scas
push
lahf
dec
add
fdiv
hlt
xchg
jmp
insl
sub
dec
imul
sbb
lret
aas
and
fcomi
js
jg
sub
js
adc
mov
add
xchg
mov
daa
test
dec
mov
push
aam
sbb
test
jmp
fcompl
push
mov
xchg
fcmovu
dec
in
test
loope
mov
flds
jae
mov
daa
sti
mov
in
clc
xchg
iret
add
inc
adc
bound
enter
push
inc
dec
scas
pop
adc
add
mov
shll
mov
sub
push
xchg
inc
inc
popa
enter
aad
cmp
ss
inc
sbb
xor
pop
xor
and
out
adcl
dec
sub
xchg
test
iret
clc
sub
mov
in
add
dec
adcb
negb
adc
ja
xchg
pop
outsb
mov
leave
in
mov
punpckhbw
adc
mov
movsl
aas
inc
in
and
xchg
dec
cld
fsubl
flds
dec
leave
mov
push
cmp
xchg
stc
lret
lahf
pop
rcrl
inc
mov
push
sbb
sub
sahf
xchg
pop
dec
pusha
xor
cmp
je
ftst
andb
stos
sbb
out
xor
push
test
into
jnp
dec
inc
dec
mov
out
push
fsubr
add
stos
stos
adc
cmp
fimuls
addr16
clc
out
mov
rcrb
hlt
loope
inc
and
cld
mov
cmpsl
sub
rcll
pop
ljmp
sub
andl
push
add
mov
xchg
xchg
cmpsb
ja
dec
outsb
fucomp
xor
mov
movsl
flds
push
add
arpl
cmp
jo
push
inc
das
outsb
aad
daa
xor
bound
inc
sub
in
and
sahf
push
add
add
mov
daa
hlt
mov
fnstsw
dec
rol
aam
adc
hlt
jae
push
cwtl
aad
jns
sbb
fidivrs
outsb
fisubl
pop
sub
clc
test
dec
jno
lcall
sbb
iret
enter
ja
stos
aad
or
arpl
dec
loop
pop
cld
popa
jns
std
jmp
jmp
notl
loop
stos
sbb
lret
cmp
inc
outsb
cwtl
cli
push
pop
cmp
int3
jmp
jle
cmc
icebp
and
pop
xchg
mov
mov
jbe
pop
sub
adc
sbb
into
fidivl
jge
aas
shrb
mov
push
in
xchg
icebp
add
sub
mov
mov
data16
ret
pop
test
xchg
and
dec
cmc
out
gs
jno
sub
aaa
mov
add
inc
adc
sub
or
loop
les
pop
inc
imul
fdivr
and
push
frstor
icebp
out
mov
outsb
das
fcompl
push
xchg
fs
roll
mov
test
leave
lods
jp
adc
mov
add
fidivrs
dec
lret
jge
add
xchg
pop
fsubl
outsb
cwtl
fisubl
test
and
dec
out
inc
or
icebp
push
jae
movsl
repz
sbb
movsl
idivl
pop
testl
sahf
cltd
add
shlb
mov
icebp
shrb
mov
sets
pop
ljmp
cld
xor
add
les
mov
jne
mov
push
stos
jbe
lcall
pushf
adc
scas
mov
pushf
repz
jp
inc
push
lret
inc
add
xchg
xchg
sub
ds
mov
xor
insl
loop
aad
fcompl
and
adc
leave
jg
pop
jp
add
fisubl
mov
add
repz
cmp
xor
mov
cmp
mov
popa
mov
push
sbb
jge
out
push
fs
and
and
pop
and
loop
pxor
pop
jne
aas
xchg
lret
in
mov
mov
xor
lret
ret
dec
and
xor
lcall
mov
pop
cmp
mov
sub
outsl
push
adc
es
aam
loopne
arpl
pop
pop
and
inc
jb
adc
ja
movsb
jo
and
adc
clc
movsb
mov
and
lock
xlat
ss
xchg
xchg
icebp
jge
pop
and
and
das
pusha
sbb
push
sbb
andb
xor
jmp
or
fldl
mov
dec
push
cmp
out
push
mov
dec
inc
xor
mov
and
xchg
mov
icebp
mov
nop
out
dec
xor
adc
jns
sbb
mov
xorl
ss
fsubr
dec
fcoms
inc
daa
mov
and
cmpsl
or
lds
test
mov
mov
and
mov
jo
inc
inc
push
inc
mov
pop
xchg
fdivrs
dec
mov
addr16
and
cltd
cmpsl
pop
aas
xchg
inc
pop
leave
lods
push
mov
sbb
pop
sbb
aaa
cmp
jo
out
pop
in
aas
fdivrl
xchg
dec
dec
push
dec
inc
lock
es
cmpsl
sahf
leave
movaps
daa
fmulp
lock
leave
inc
xorb
or
mov
xchg
movsb
ret
mov
fbstp
ret
fadds
mov
pop
cmp
jge
add
cmc
sub
jae
xchg
adc
ret
sub
arpl
adc
es
popf
inc
jno
stos
xor
inc
aaa
mov
mov
das
mov
test
mov
test
sub
divl
and
loope
pop
decl
dec
adc
sti
mov
mov
out
adc
dec
lahf
mov
pop
movsb
lret
out
pusha
and
movsl
cmpsb
inc
shrb
sbb
add
push
gs
jl
out
sbb
push
mov
adc
or
cmp
fimull
bound
xor
pop
scas
and
fs
cltd
cmp
adc
pop
push
and
aaa
inc
push
sub
sbb
imull
jne
mov
fisubl
inc
int
inc
popf
mov
out
mov
dec
mov
adc
pop
and
icebp
mov
mov
bound
pop
mov
lahf
push
add
fdivrs
insl
mov
sub
push
or
mov
adc
push
xorl
lret
push
xor
add
dec
test
or
mov
imull
mov
ficoms
cmp
mov
lock
pop
mov
jmp
xor
lods
ds
xor
adcl
cmp
pop
push
lods
imulb
fcompl
or
cmp
scas
sbb
xchg
mov
in
insl
jmp
xlat
dec
fwait
push
scas
fiadds
cmp
mov
pop
sbb
jge
jl
xor
jg
cmp
xchg
fcos
mov
mov
out
or
fstpt
push
cwtl
fldl
and
test
xchg
and
pop
sub
shlb
outsl
outsl
sbb
fldl
bound
lret
test
sbb
fisttpl
pop
sub
aam
pop
adcl
and
ret
adc
lea
pop
out
inc
sti
inc
jns
mov
lret
loopne
inc
ds
dec
push
mov
or
dec
pusha
adc
mov
imul
sbb
dec
xchg
gs
jl
pop
mov
repnz
or
inc
jle
test
jl
inc
sbb
mov
in
push
nop
rcrl
icebp
mov
or
add
dec
cli
xchg
inc
mov
jge
stc
push
jp
pop
ljmp
fisttpl
sbb
jnp
and
cmp
sbb
mov
xor
push
pop
out
cmpsl
je
xor
fimuls
dec
addr16
call
mov
push
push
and
inc
aaa
mov
jns
fcmovb
push
imul
out
adc
test
or
add
sub
in
mov
rolb
mov
gs
dec
or
imul
std
insl
pop
mov
rorl
shr
popf
cmp
jp
insl
mov
inc
fs
lea
mov
add
dec
iret
dec
lods
shll
test
shlb
aas
mov
push
hlt
mov
cli
repnz
je
mov
daa
xor
pop
dec
hlt
sub
int
and
inc
inc
jo
cmp
mov
adc
xlat
mov
xor
popf
stos
data16
adc
mov
sub
out
cwtl
fcoms
pop
addr16
inc
loop
push
pop
adcl
mov
shl
in
mov
jnp
and
push
adc
mov
sbb
int
mov
mov
pop
bound
mov
ja
loopnew
ret
xorb
mov
popf
loop
arpl
mov
arpl
or
jg
aas
inc
and
sbb
loopne
push
fcomip
repz
dec
mov
fisubl
mov
imul
jp
dec
adc
in
js
ss
jle
jl
dec
cltd
dec
ss
jl
cli
addr16
push
and
inc
and
decl
mov
sbb
daa
pop
and
xor
ss
lods
or
push
aas
inc
xor
add
jg
mov
daa
or
test
adc
mov
movsl
ds
pop
inc
dec
mov
or
mov
add
ja
popf
popf
mov
push
rcrl
subl
shl
jo
imull
push
or
push
sti
and
pop
dec
enter
jbe
push
sbb
mov
mull
sahf
mov
sub
mov
or
in
movsl
cld
dec
cld
jge
push
sahf
push
and
dec
call
lods
in
scas
sbb
call
dec
nop
call
dec
dec
fld
adc
movsl
cltd
mov
mov
mov
dec
push
xorl
inc
test
scas
into
sti
xlat
lds
int
inc
jne
jnp
popf
rclb
adc
lods
cmc
or
inc
ret
cld
dec
pop
aaa
mov
jle
pop
jnp
mov
mov
bound
jmp
addr16
inc
add
add
scas
inc
sti
test
dec
test
and
pop
nop
popa
fnstsw
or
lea
adc
aaa
add
aaa
xchg
fldcw
push
adc
test
lods
shr
rolb
scas
imulb
mov
rol
xchg
fisubl
mov
sbb
pop
jmp
mov
adc
jge
pop
sahf
cmc
cli
dec
inc
mov
outsl
jge
outsb
inc
sub
scas
adc
sub
in
mov
mov
subb
or
lret
andb
jp
in
call
pop
movaps
xchg
pop
fldcw
xchg
jnp
leave
jp
frstor
mov
roll
test
dec
mov
mov
loope
ret
xchg
movsl
jmp
pushf
cs
push
add
add
cmp
test
mov
and
push
mov
lret
stos
iret
add
pop
addl
out
push
mov
mov
cwtl
cli
xchg
cmp
push
mov
sahf
push
hlt
push
lret
mov
scas
test
into
outsb
test
popa
scas
sub
mov
sarb
adcl
cmpsb
cwtl
push
cmpsb
jbe
imul
out
push
xchg
xchg
lods
sarb
sbb
pause
jmp
ja
in
cmp
inc
js
lods
inc
sbb
push
adc
test
sub
mov
loopne
and
ss
dec
sbb
sahf
cltd
lods
stos
push
sub
ljmp
movsl
pop
push
pushf
ja
ds
mov
push
in
pushf
es
or
add
or
dec
ret
dec
lea
push
mov
test
into
bound
inc
push
or
push
out
movsl
std
pushf
xchg
and
push
and
pop
rolb
rorl
iret
inc
popa
stos
sti
jp
pusha
push
insb
jnp
pop
push
xchg
mov
inc
lods
sbb
popa
scas
test
xor
jecxz
subl
xlat
out
cmc
cmp
inc
sahf
pusha
dec
scas
out
rcll
add
subb
hlt
xchg
test
jle
mov
and
cmp
insl
pop
test
rorl
fs
fstpl
je
rclb
inc
ret
dec
popf
in
mov
jecxz
mov
add
int3
push
sub
cwtl
push
xor
jae
pop
pop
fwait
cmp
or
pop
call
out
repnz
das
or
fwait
out
divb
vshufps
mov
insb
daa
sub
out
cmp
cmp
sub
mov
mov
mov
mov
fstpl
in
outsl
insb
cmp
xchg
pop
in
lar
bound
mov
ret
lcall
cli
inc
fs
add
mov
adc
sub
rolb
sub
jmp
cmp
push
pop
test
jp
xor
fidivrs
stos
lods
jns
adc
jp
mov
mov
les
adc
or
pop
rcr
clc
fldcw
jecxz
xchg
stos
mov
push
int3
stos
aad
xchg
pop
aad
repnz
in
test
inc
pop
scas
aam
dec
sub
imul
and
lds
mov
mov
lcall
jae
push
xchg
sahf
jl
mov
scas
pop
mov
sbb
shll
adc
aad
fwait
sub
jae
adc
sbb
jnp
in
push
xor
xor
insb
sub
sbb
and
add
mov
and
sti
rol
dec
sbb
pop
neg
cltd
mov
pop
aas
movsb
lods
fwait
bound
out
lock
xchg
jecxz
arpl
and
lods
test
xchg
or
xor
and
loopne
jae
jmp
mov
sahf
jle
xor
push
adc
sbb
mov
xor
pop
lahf
add
out
out
or
hlt
mov
in
pop
pop
sbb
mov
pop
mov
add
push
mov
sti
xchg
in
adc
inc
xchg
outsb
dec
std
mov
test
testl
je
cmp
test
test
dec
cmpsl
ja
xor
cmp
fsubs
and
outsb
scas
loope
add
dec
adc
adc
add
negb
dec
ror
push
fs
pop
pop
ljmp
and
dec
cmp
add
cmpsl
sub
in
ja
pushf
ret
nop
fildll
cs
add
fldt
dec
cld
mov
xchg
inc
xor
fnsave
mov
pop
push
pop
adc
pop
fcmovb
pop
int3
and
rcll
lods
mov
dec
into
mov
or
sub
add
jbe
mov
or
enter
mov
mov
test
and
aas
fldcw
lret
dec
orb
inc
arpl
in
xchg
dec
cmp
push
stc
ds
insb
in
fucomp
push
aaa
aam
into
add
insl
push
movsb
mov
in
push
xlat
sub
mov
int
add
push
scas
test
mov
int3
out
movsb
jno
cmc
sbb
sub
sbb
push
in
repnz
lret
inc
add
outsl
ret
cmp
sub
xorb
add
inc
and
cmp
push
movsl
je
shll
call
mov
mov
enter
mov
adc
dec
or
ret
push
mov
repz
mov
jp
xlat
or
xchg
test
das
in
loopne
cs
sub
pop
sarl
fisttps
pop
adc
xlat
push
outsb
shlb
push
aam
cmp
and
mov
cmp
pop
rcrb
or
popf
pop
popa
ss
or
bound
adc
int
add
imul
rcr
mov
shll
mov
jge
cmp
jecxz
sbb
repz
mov
jne
mov
in
or
mov
adc
insl
fadd
push
pop
or
push
into
cmp
lds
mov
pop
fidivrs
dec
outsl
ljmp
je
and
push
les
sti
clc
les
ljmp
dec
sbb
aaa
dec
sub
leave
mov
jo
sbb
enter
call
xchg
push
pop
sub
int3
pop
gs
add
mov
push
aaa
push
adc
test
leave
pushf
cmp
insw
jne
push
push
mov
inc
and
and
and
repz
adc
fcmovnb
inc
insl
mov
adc
inc
imul
sub
adc
mov
clc
repnz
mov
imul
cld
repnz
inc
lock
push
pop
repnz
cs
ja
movsl
mov
into
dec
aad
stos
shrb
lea
jo
or
sub
inc
inc
mov
sti
mov
call
xchg
ret
jnp
mov
jle
gs
fimull
jle
lea
out
out
adc
or
push
paddq
mov
repz
xchg
scas
pop
and
mov
mov
cmp
popa
ret
jbe
out
pop
mov
gs
add
call
dec
sub
int3
pusha
fwait
dec
mov
push
pop
fsubl
bound
add
inc
pop
sbb
mov
lret
lds
loopne
int3
cli
push
js
cmpsl
icebp
lahf
sub
adc
fnstsw
loope
mov
adc
mov
cmpsb
and
pop
test
ss
insl
sbb
call
jmp
push
daa
pop
int3
in
mov
pop
orl
and
xchg
mov
nop
daa
hlt
mov
jbe
cvtdq2ps
push
test
dec
mov
cmp
andb
cmp
push
test
push
mov
imul
push
popf
xor
imul
scas
sub
xchg
and
cmp
outsb
sbb
inc
xor
sahf
clc
dec
add
cld
add
es
rcrl
sub
push
jno
aam
cs
shll
out
cld
in
inc
test
lahf
jnp
adc
xchg
sub
ror
mov
xor
fs
outsl
insl
scas
push
stos
outsl
inc
inc
mov
or
mov
mov
or
pusha
scas
dec
mov
push
loope
add
sbb
mov
xor
push
sbb
mov
cmpsl
lahf
dec
xor
jbe
dec
dec
and
fdivs
add
mov
int3
jmp
sti
xchg
xchg
test
adcl
sub
xor
xor
xlat
aas
icebp
xor
ficoms
lods
dec
sarl
pop
xchg
fidivrs
stc
arpl
movsb
pop
push
xor
cli
out
jns
mov
jno
push
xor
and
mov
jb
jo
fsubr
sub
cwtl
fsts
mov
xchg
dec
xchg
xor
aad
mov
xor
pushf
loopne
mov
daa
cmpsb
xchg
cmp
and
mov
lods
clc
out
cmp
add
aad
adc
add
arpl
aas
out
mov
daa
out
testb
push
mov
mov
imul
jecxz
lret
add
loop
sub
in
adc
xor
inc
sarb
jecxz
push
aad
xchg
arpl
dec
inc
xor
jmp
xchg
mov
ljmp
and
push
inc
fisttpll
jp
in
jl
roll
and
mov
sarb
dec
push
xorl
repnz
into
add
push
or
test
or
insb
sbbl
adcl
enter
dec
into
popf
and
jecxz
pop
pop
leave
ucomiss
sarb
fcoms
mov
insl
dec
mov
push
sbb
push
lret
clc
add
sysenter
lock
out
jno
mov
or
aad
add
ret
sbb
xchg
aas
scas
pusha
dec
xchg
mov
adc
sahf
and
test
in
iret
pop
pop
addb
cmpb
es
fistpl
xchg
cli
stc
imul
mov
mov
jno
movb
sahf
inc
or
gs
iret
add
mov
mov
fwait
cmp
jno
add
push
dec
push
scas
jg
xchg
and
js
sub
ror
pop
cld
lahf
movsb
xor
pop
sub
push
and
sub
test
inc
xchg
pop
add
fs
jbe,pn
dec
and
imul
jo
push
sub
js
and
xor
dec
push
jbe
lock
daa
aam
xor
imul
mov
mov
adc
repz
sub
pop
sbb
inc
pop
xchg
ds
inc
jge
std
aaa
dec
outsb
ja
in
sbb
pop
insb
movsb
popf
dec
xchg
outsb
sbbb
fdivl
into
sub
arpl
sbb
push
leave
sahf
cwtl
mov
aas
mov
jmp
adc
jne
arpl
sbb
stos
iret
in
ficoms
mov
push
and
adc
inc
test
xchg
xchg
fcmovb
xchg
mov
xchg
or
outsl
test
out
shr
movsb
mov
ljmp
xor
clc
xchg
and
push
or
dec
ficoms
or
push
push
cmp
out
or
cmp
sub
mov
and
repz
clc
inc
sbb
mov
xor
call
push
dec
hlt
js
mov
sbb
ds
sub
cmp
xchg
mov
dec
lock
cmp
shl
jp
pop
cltd
sahf
fsubs
test
or
push
fisubrl
stos
and
push
dec
mull
popf
jmp
xchg
push
arpl
dec
push
cmp
jb
clc
xor
sub
lea
mov
stos
sub
icebp
mov
jg
inc
fucom
out
lds
cld
adc
mov
mov
outsl
fdivp
inc
jmp
adc
into
mov
adc
rcrb
ror
xchg
lret
arpl
mov
mov
popa
sub
aas
sbb
mov
std
lahf
or
cmpsl
scas
imul
je
out
iret
je
xchg
repz
adc
out
add
jp
xchg
hlt
aad
or
aam
pop
subl
pop
dec
xlat
xchg
imul
lods
xchg
xlat
mov
inc
rolb
lock
sbb
pop
imul
addb
lcall
adcb
and
add
std
sub
push
jo
push
shlb
aaa
cmp
jmp
jns
xchg
mov
and
aaa
push
and
push
fadd
repnz
sub
clc
jl
imul
jne
stos
mov
sti
xchg
into
jno
mov
pop
stos
cmp
and
gs
outsl
ficomps
fsub
cmpl
mov
xchg
inc
xchg
dec
nop
in
add
movsb
dec
pop
mov
xchg
pushf
mov
mov
mov
pop
stos
mov
adc
or
dec
div
and
jl
aaa
fcmovnu
lret
stos
aaa
xor
cld
mov
dec
scas
cld
aad
lods
inc
push
ja
add
sarb
jecxz
fisttpll
jno
sbb
and
or
cli
cmp
jno
push
faddl
bnd
daa
sbb
jno
mov
test
cli
lds
das
sbb
or
cwtl
mov
xor
and
xchg
or
mov
insl
dec
je
mov
lea
into
mov
mov
or
push
popa
xchg
daa
mov
xor
fucomi
bound
pushf
cltd
mov
std
mov
icebp
mov
xor
jo
pop
ret
ss
jg
mov
xchg
xchg
stos
mov
daa
cmp
ret
out
sub
cmpsb
or
adc
sbb
fwait
push
movsb
mov
mov
scas
jg
sub
out
out
sbb
inc
imul
fidivrs
movb
or
out
gs
imul
repnz
lods
push
push
jge
inc
mov
call
lret
movsb
dec
roll
out
or
ret
das
jle
das
mov
fmuls
inc
xchg
inc
pop
and
adc
fistpll
fstpl
frndint
mov
or
ds
adc
idivb
push
mov
call
test
cmc
movsl
sti
and
inc
test
lcall
xor
mov
ret
mov
push
sahf
sbb
push
jp
and
in
icebp
cs
mov
sti
xor
repnz
fldt
ret
mov
add
push
cmpl
sub
sub
stos
fwait
jle
mov
stos
mov
xchg
cmp
adc
stc
mov
mov
cmp
fsubs
xor
ret
fists
inc
jg
scas
pushf
hlt
and
xchg
xchg
pop
cmp
cmp
stc
imul
stos
mov
pop
imul
out
or
mov
push
cmp
sub
inc
adc
xchg
xchg
mov
ljmp
mov
scas
stos
sbb
andb
and
jge
lods
js
mov
sarl
and
loope
dec
push
mov
sub
or
sbb
nop
mov
sub
mov
sub
rorb
outsb
mov
add
movsl
sbb
xchg
je
adc
imul
movsl
mov
push
popl
repnz
icebp
call
xor
mov
fadd
adc
lods
xchg
outsb
mov
ljmp
mov
push
hlt
mov
sahf
push
mov
inc
js
sbb
jne
pusha
movsb
std
mov
lea
jbe
sti
and
loopne
cltd
push
shrb
mov
lods
test
inc
je
clc
inc
imul
jbe
push
jb
push
lahf
push
sub
push
xchg
adc
dec
fildl
sub
cltd
pop
dec
shrl
xchg
adc
sub
mov
mov
and
into
cmp
aam
out
fwait
cmp
pop
ret
pop
xchg
adc
jle
leave
loope
sbb
adc
mov
push
sbb
arpl
pop
mov
cmpsb
mov
adc
xchg
sub
in
push
xlat
cltd
hlt
sub
stos
sbb
rcrl
dec
pop
enter
inc
call
scas
mov
je
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
jmp
repnz
repz
add
addb
addl
loop,pn
clc
nop
pop
or
mov
push
aam
adc
sbb
cs
or
ljmp
fcomi
out
push
jo
sub
jle
cli
push
sbbb
loopne
mov
xlat
stc
pop
inc
dec
xor
jle
nop
push
adc
test
and
cmc
mov
insb
mov
inc
mov
loopne
leave
decb
lcall
in
xchg
loop
in
loope
jle
mov
shll
dec
add
sarb
inc
lret
xlat
mov
jnp
in
out
lock
jns
ficompl
sahf
jbe
test
jae
mov
xor
push
cli
lret
add
pusha
adc
add
xor
xchg
adc
fsts
mov
fdivp
mull
push
xor
adc
push
inc
popa
js
ret
and
mov
fsubs
arpl
aas
mov
cwtl
add
movsb
cmp
mov
or
mov
jnp
fmull
enter
mov
js
imul
inc
fsubrl
pop
cmc
shll
push
and
sub
es
orl
mov
add
movsl
push
xchg
cld
push
add
cltd
adc
shrl
mov
push
je
inc
xor
fistl
sub
mov
pop
daa
ja
data16
lods
jecxz
pop
rcll
and
add
or
fildl
sti
xchg
sbb
push
adc
push
jp
stos
fisttps
cltd
je
in
jle
mov
xor
shll
daa
and
mov
ds
stos
inc
mov
in
mov
hlt
mov
rcl
test
mov
leave
push
sbb
test
jo
push
mov
jecxz
sub
incb
addb
xor
popa
arpl
add
into
fs
shlb
imul
xchg
xor
sub
lods
xor
cmp
add
std
bound
popa
xor
cmp
jl
pop
mov
dec
add
je
mov
push
and
mov
cmp
add
pop
lds
cli
pop
mov
lds
pushw
push
into
fstps
dec
or
cwtl
lock
ret
sub
loope
pushf
stc
push
ja
shlb
lods
cwtl
xlat
mov
int3
rorl
and
mov
cmpsb
pop
sbb
scas
xchg
lret
push
or
fcomps
stos
orl
out
sub
sarb
testl
getsec
fisubrl
mov
jmp
sub
cltd
mov
clc
add
arpl
xchg
jns
pop
push
das
mov
int3
sbb
sub
inc
cwtl
js
jb
add
dec
cli
inc
mov
add
xchg
mov
push
sub
lods
das
jns
add
iret
test
push
or
mov
fadds
pop
mov
sub
pop
std
fsubrp
jbe
imull
fsts
in
xorl
mov
mov
lds
mov
shll
into
push
mov
and
inc
loopne
mov
mov
xchg
and
xchg
pop
test
push
adc
test
and
ja
inc
cmp
pcmpgtb
mov
cmc
jg
xchg
stos
cvtps2pd
aas
jmp
add
push
aad
dec
cld
mov
test
out
in
adc
sbb
push
pusha
cmp
push
cli
fcmovnbe
pop
xor
push
aad
push
jmp
dec
jp
sub
andb
pusha
pop
jb
mov
pop
push
push
ficoms
lds
popa
movsb
sub
in
adc
xchg
push
cwtl
in
push
and
shr
mov
inc
pop
incl
and
js
pop
xor
mov
mov
jl
int3
ret
dec
call
sbb
mov
stos
ss
pop
out
sbb
mov
lret
dec
cwtl
mov
xor
out
cs
mov
or
lock
clc
call
imul
fists
or
sub
xor
dec
in
dec
daa
das
subb
orl
loope
fwait
xchg
ror
leave
loope
pop
movsb
es
mov
insb
fidivrl
in
gs
rcrb
ret
xor
mov
jne
pop
xor
adc
bound
out
mov
cltd
jmp
pop
dec
xchg
cmp
xor
jecxz
xor
xchg
sarb
outsb
adc
jne
dec
pop
sub
fsub
and
adc
xchg
pusha
in
push
repnz
jnp
inc
xchg
jle
mov
mov
imul
or
and
xchg
ret
pushf
cmp
or
pop
jge
lcall
mov
loopne
sti
daa
movsb
jbe
push
orb
xor
sbb
shlb
and
xchg
adc
cmp
push
add
xchg
fwait
adc
mov
adc
push
sub
jae
addr16
sub
and
and
mov
push
aad
mov
xchg
adc
jo
mov
mov
cltd
hlt
outsb
out
rorl
mov
and
mov
sub
adc
adc
mov
cmp
int
lahf
add
jp
xchg
add
ja
pop
popf
cmp
fwait
xchg
jmp
xchg
insb
push
fwait
or
lea
pop
xlat
sbb
mov
jmp
cmc
xchg
and
ja
jp
test
dec
gs
stc
icebp
xor
mov
pop
dec
jnp
cmp
pop
push
nop
jle
add
and
xor
mov
adc
adc
test
add
dec
scas
loop
xor
adc
mov
push
add
mov
mov
loop
adc
xor
xor
inc
sbb
and
mov
xor
pop
cmpsb
into
pop
andl
dec
xor
ds
mov
lock
inc
lret
sub
mov
fsubrs
xchg
fdivrl
cmc
xchg
mov
pop
and
fidivrs
mov
leave
add
ss
add
sbb
mov
or
cmp
pop
pop
dec
cld
aas
pop
test
xchg
and
pusha
repnz
fstps
clc
ror
add
test
cmp
dec
scas
mov
hlt
outsb
nop
sub
stos
ljmp
add
jno
lret
mov
fildl
dec
es
aaa
cmp
mov
jle
call
pop
inc
into
mulb
adc
mov
push
test
xchg
test
repz
jle
sub
xor
ja
test
popa
sub
icebp
ss
lahf
mov
jbe
adc
mov
mov
lcall
fwait
xchg
out
add
popa
inc
and
xchg
addr16
jb
mov
lock
xchg
insb
add
in
jo
xor
add
mov
push
push
sbb
lods
je
mov
add
sbb
xor
hlt
sub
pop
push
cmp
aad
stos
mov
loope
xchg
mov
push
test
in
push
and
jge
lods
fs
subl
and
gs
movsl
in
mov
or
jo
test
mov
scas
iret
mov
call
sub
push
push
xchg
ss
lock
ror
xchg
cwtl
push
mov
and
sti
in
xchg
cmp
pop
popf
or
and
or
movsb
dec
push
inc
sahf
adc
scas
hlt
in
fisubrs
xor
iret
pop
lret
test
std
flds
pop
aam
outsl
arpl
adc
rcll
push
daa
out
xchg
inc
loope
jbe
ja
inc
mov
insb
xor
stos
xchg
xchg
sub
push
inc
enter
popa
mov
inc
and
call
cmp
imul
mov
cmp
lods
je
adc
cltd
pusha
dec
out
sub
sub
xchg
sub
movsl
repz
cbtw
jne
ljmp
adc
sub
mov
fwait
xchg
inc
add
fimull
or
jecxz
lds
hlt
mov
call
int3
adcl
sbb
add
cs
pop
or
cmpsb
push
jge
int
gs
push
out
nop
aad
xor
pop
jne
push
or
das
sbb
clc
sub
orb
xchg
cld
or
clc
mov
outsl
mov
or
insl
bound
xchg
cmp
daa
jne
add
out
sub
cmp
push
mov
daa
stc
mov
fwait
or
mov
adc
lock
fsubl
ret
data16
pop
lahf
sahf
mov
cmp
xchg
add
leave
xchg
mov
js
mov
and
and
shrb
je
fnsave
movsl
dec
into
andb
mov
jbe
push
out
add
and
roll
fisttpl
sub
repz
rcrb
mov
lret
sbb
int
cmc
pop
sub
lahf
icebp
bound
push
jae
pushf
mov
je
cmp
lret
mov
or
imul
loopne
pop
push
dec
insl
lea
xor
outsl
jns
xchg
inc
jb
xchg
xor
and
outsl
pop
jbe
das
and
ja
ljmp
pop
outsb
or
js
jmp
xchg
push
loopne
cmp
aad
push
push
sbb
dec
dec
adc
les
or
push
cmc
inc
mov
dec
sbb
jnp
mov
loop
mov
imull
mov
outsl
aas
jp
pop
fsub
adc
pop
inc
mov
and
popf
imul
shlb
push
js
loopne
add
sub
insl
mov
fisubrl
stc
pop
fwait
or
mov
in
out
push
lods
gs
test
lods
out
loopne
xor
imul
mull
pop
jmp
mov
call
clc
pop
sub
jle
and
pop
das
inc
cmp
mov
repz
adc
pop
mov
pop
jle
stc
inc
rcl
cmpsl
mov
push
mov
cmpsb
cmp
clc
push
jbe
mov
fidivrl
pop
and
rolb
aam
sbb
xchg
mov
inc
or
sub
fisubrl
sbb
mov
ja
push
add
fsubl
sub
xor
adc
adc
es
and
aaa
dec
mov
add
cmp
and
pop
shl
in
sub
dec
inc
popf
jecxz
xchg
inc
aam
xchg
push
inc
cli
xor
iret
enter
ljmp
repnz
js
add
mov
les
push
xor
int3
sbbb
call
xchg
jnp,pt
or
jno
fdivrp
hlt
sub
and
ds
aas
cmp
hlt
cld
jle
jl
adc
or
mov
cld
fisttps
xchg
popa
or
cmp
jne
ljmp
sbb
push
add
out
sbb
cmp
rolb
mov
fcomps
mov
xchg
movsb
push
adc
sbb
jmp
sub
push
outsb
mov
imull
std
pop
ss
outsb
pop
push
mov
adc
mov
xchg
mov
pop
or
fstp
mov
or
and
andb
in
fwait
iret
mov
cmp
insb
loopne
xor
fmulp
jge
enter
insb
and
loop
and
inc
ret
data16
ja
cmp
xchg
out
xor
aad
scas
sbb
sbb
add
mov
xor
addb
ja
sub
inc
push
jne
sbb
mov
aam
dec
shll
ljmp
gs
into
arpl
jnp
inc
push
push
stos
pop
cmpsl
push
dec
jg
scas
or
dec
adc
or
mov
rorb
cld
push
xor
notb
test
pop
iret
jecxz
xchg
mov
mov
xchg
xchg
mov
xchg
jae
mov
imull
outsb
jae
lcall
pop
sub
les
and
add
sub
aad
dec
dec
pcmpeqd
lahf
xor
lcall
aad
pop
jno
push
lret
outsb
cmpsb
jg
pushf
xchg
int
in
add
sbb
movsb
cmp
and
xlat
sbb
mov
into
add
xchg
xchg
in
cld
jecxz
pop
sub
mul
push
sub
dec
cltd
insl
inc
push
or
out
insb
jl
inc
push
jl
sahf
sub
add
sbb
jo
lods
dec
and
jne
jle
mov
and
es
add
pop
pop
xchg
cli
dec
sbbb
cmc
xorl
fs
push
or
xor
fisubrl
in
aam
or
mov
fidivrl
mov
leave
xchg
lcall
or
ljmp
jne
cmpsl
aaa
shrl
cmp
iret
addr16
xchg
mov
mov
push
enter
jp
xlat
cmp
xchg
jecxz
sahf
push
mov
cmp
mov
mov
sub
stos
and
or
inc
mov
or
xlat
or
xor
imul
pop
mov
repz
ficoml
lret
sub
sbb
sub
adc
aad
jmp
inc
mov
aam
dec
shll
sub
and
aas
xchg
icebp
movb
push
imul
ja
imul
mov
jg
mov
cltd
call
xlat
jb
cmp
lods
incb
mov
jp
jae
inc
cmp
push
cld
sarb
inc
or
and
mov
out
push
xor
jl
jecxz
lret
mov
sti
aas
pop
les
repnz
imulb
jbe
push
scas
sub
adc
call
out
lods
mov
mov
sub
adc
int
jg
jns
and
gs
push
mov
adc
fimuls
jecxz
rcrb
sbb
movsl
inc
sahf
and
mov
scas
cmp
inc
add
popa
fisttps
sbb
out
test
cmp
mov
xor
mov
fldt
xchg
jp
mov
inc
jo
xor
sti
sub
mov
sub
ret
int
movsb
jne
pop
mov
fistpll
mov
or
push
or
add
mov
or
cmp
lods
mov
aaa
les
out
xchg
cmp
add
sbb
pop
aaa
pmaddwd
sub
pushf
ljmp
push
jbe
pop
scas
push
insb
sub
aam
lods
das
outsb
fiadds
mov
out
lock
gs
rcrl
dec
arpl
cmp
mov
ret
out
xchg
add
inc
adc
out
popf
pop
inc
stos
movsl
jg
outsb
outsb
in
pop
and
pop
mov
lods
das
inc
and
addr16
xchg
or
mov
cmp
mov
enter
sub
mov
nop
in
jecxz
cs
sbbl
leave
adc
or
lcall
mov
pop
gs
icebp
jle
dec
and
jge
or
mov
daa
fists
push
mov
out
sub
mov
sub
addr16
mov
and
lret
mov
insl
cmc
insl
std
sbb
insb
jno
xchg
lods
inc
inc
enter
cmpl
lea
mov
ss
repnz
out
shll
and
repnz
sub
stos
out
lds
sub
sbb
cld
inc
push
lods
mov
icebp
cmp
cmc
ss
mov
adc
repz
outsb
jge
loopne
addr16
xor
lcall
and
test
test
aam
inc
hlt
adc
outsl
outsl
inc
icebp
loope
jno
mov
or
fwait
sti
mov
or
test
jae
and
loop
or
jmp
aad
cmp
out
lret
inc
mov
mov
xor
and
sbb
dec
ds
fs
loope
movsb
imul
mov
mov
sbb
ja
rolb
pop
movsl
enter
mov
mov
pop
fbld
or
xchg
lods
js
hlt
or
and
cmp
cmp
jmp
sbb
or
dec
add
jb
adc
icebp
mov
cld
mov
into
dec
daa
and
cmpsb
jl
inc
xlat
pushf
gs
rcr
and
xor
mov
orb
cmp
cmp
mov
arpl
sub
cli
outsb
add
mov
js
js
xchg
je
or
ss
jo
lcall
mov
out
movsl
les
popf
leave
cs
cmp
ds
or
xchg
lret
or
mov
push
es
mov
rclb
jbe
jmp
inc
xor
inc
mov
jge
ficoms
jecxz
mov
sub
into
jmp
enter
popa
adc
mov
or
adc
jge
in
adc
mov
aam
pop
pop
hlt
test
fisttpll
jnp
mov
setnp
cmc
sub
les
ds
mov
cmp
pop
daa
out
xor
enter
fidivrl
jbe
lds
ret
cmpsb
pop
adc
imulb
fwait
pushf
xchg
sbb
xchg
cmp
int3
sti
xchg
jne
in
rorb
pop
jb
pop
dec
adc
pop
fwait
push
jg
rcrl
int3
mov
lods
push
xchg
xchg
lods
cld
std
int
sarb
fucomi
sbb
pushf
aas
sbb
popf
mov
ret
adc
inc
or
std
repz
call
sub
xor
ja
or
push
je
in
fcomps
or
insl
outsl
movsb
pop
lods
stc
lods
add
cs
lods
leave
mov
jbe
mov
cmpsl
mov
cmpsb
add
popf
sub
gs
mov
sahf
mov
ljmp
mov
icebp
daa
into
mov
pop
ret
mov
jb
push
lea
loope
inc
mov
inc
scas
xor
push
ret
test
add
in
movsl
mov
lods
xchg
sbb
sahf
fcoms
ret
subl
es
mov
mov
mull
push
fstps
jno
call
mov
or
aas
cmp
data16
add
push
pusha
xor
stos
sbb
adc
hlt
fiaddl
fisubrs
mov
push
lcall
push
xor
leave
mov
rcll
or
or
push
xchg
inc
lret
pop
jmp
mov
jno
addr16
add
in
stos
in
insl
pop
inc
out
loop
inc
sbb
pop
xchg
test
test
or
outsl
mov
mov
mov
movsb
repz
loop
repz
fsts
daa
ja
jmp
lds
mov
ud1
or
cmc
pop
mov
mov
jmp
sbb
xchg
mov
std
pop
push
dec
cmp
mov
adc
add
pop
mov
mov
pop
push
jo
add
lock
inc
rcll
adc
shlb
mov
adc
mov
pushf
adc
out
gs
and
xchg
adc
adcb
and
dec
int3
in
idiv
dec
pop
mov
rclb
adc
xor
loopne
mov
clc
dec
in
jo
push
call
sub
std
xor
mov
and
movsl
lcall
xchg
mov
jnp
mov
fwait
pop
add
lret
mov
jb
repnz
cli
stc
subb
and
cmp
stc
adc
jmp
imulb
mov
xorl
ss
lret
cmp
adc
pinsrw
lods
sub
xor
adc
sub
movsb
fcoms
jbe
mov
mov
mov
lock
call
repnz
insl
cltd
not
jnp
pop
movsl
lea
scas
rcll
shlb
xor
int3
sbb
fildl
push
dec
mov
cmpl
push
outsb
popa
sub
lea
lock
fsts
test
jecxz
testl
outsl
push
push
fldenv
in
cmpsb
in
loopne
jbe
fcomi
mov
stos
adc
mov
and
jle
jb
mov
dec
sub
sbb
inc
rolb
cld
int3
push
dec
jo
push
pop
pop
xor
inc
les
mov
es
pop
shlb
inc
mov
cltd
sbb
sub
lret
sbb
add
push
jmp
xchg
cli
scas
fildl
jno
mov
movsb
aas
test
call
stos
inc
lea
inc
mov
rol
cmpsl
adc
sbb
pop
lcall
pop
jecxz
dec
fcmovne
adcb
xchg
push
aad
andb
shrl
out
testl
and
mov
cmp
ret
xchg
ss
mov
insl
mov
sub
flds
arpl
loop
jno
cmp
in
loope
and
scas
add
mov
cmp
xor
test
es
jno
mov
ja
lcall
xchg
or
rcr
repz
dec
dec
adc
ss
popl
or
or
inc
out
pop
mov
decb
xchg
xchg
push
aam
pop
fwait
shrb
dec
jo
in
xchg
std
pop
les
dec
lcall
adc
xor
mov
add
frstor
cmp
push
mov
fstpt
movl
pop
mov
or
data16
mov
inc
dec
out
lahf
test
stos
int3
cmp
out
and
cwtl
stos
lret
add
jo
adc
fistps
int3
jl
lret
cmpsb
jb
sahf
mov
jo
call
lret
dec
cmp
das
shrl
hlt
add
adc
int
mov
pop
popl
mov
repnz
mov
aaa
jle
dec
ljmp
fcomp
dec
cmpsl
cmpsl
cs
fistps
in
dec
jb
xlat
in
outsb
jb
shrl
xor
mov
mov
outsb
js
fwait
in
sbb
dec
jecxz
inc
jle
and
test
idiv
ljmp
push
mov
sub
push
cmp
lods
fadds
fbstp
mov
xchg
js
xchg
bound
or
inc
pop
xchg
and
add
adc
arpl
daa
sbb
add
dec
xchg
xor
jmp
test
pop
push
in
and
out
test
mov
cld
or
cmc
or
aad
les
insb
dec
negb
aam
push
enter
hlt
jnp
lahf
outsl
ret
and
xchg
clc
xor
cmp
jl
negb
sbb
add
jb
pop
pop
leave
lock
xor
add
push
insb
inc
in
loope
imul
cmp
and
xor
mov
push
fucomi
xchg
fisttpll
je
mov
push
ss
inc
fistps
popl
adc
cmp
mov
lahf
test
adc
stos
in
add
xor
addr16
scas
sbb
xchg
dec
insb
shlb
test
loopne
mov
lahf
pop
inc
les
dec
mov
inc
cld
jo
jmp
mov
xchg
aam
jne
pushf
mov
mov
push
stos
or
sub
pushf
cwtl
test
mov
jb
inc
mov
xor
mov
movsb
int
pop
mov
sbb
movsb
mov
fistl
and
stos
mov
bnd
adc
xchg
cwtl
int3
inc
mov
fnstcw
or
shrl
loope
or
in
mov
es
cmpsl
aas
test
inc
clc
mov
fstl
in
cmp
cmpb
inc
xchg
jmp
xchg
sbb
cltd
bnd
xor
addr16
mov
xor
ret
mov
xor
bound
mov
das
jmp
enter
data16
sbb
push
cmc
mov
or
cmc
lods
pop
or
cld
fcoms
movsl
mov
inc
test
xchg
lea
pmullw
rcrl
cmp
enter
pop
sub
lcall
cmp
or
sub
fidivs
sarb
fcmove
jge
jmp
leave
cmpsl
sub
test
call
xchg
pop
subl
shr
add
mov
cmpsl
dec
and
mov
jo
xchg
addr16
and
pop
outsb
in
out
les
mov
pop
sbb
mov
cwtl
adc
mov
jne
add
das
mov
inc
xor
xor
jo
in
cmp
dec
es
ja
ret
mov
push
and
sbb
xchg
xchg
cwtl
bound
into
push
cmpsl
dec
push
loopne
xor
adc
lret
lret
enter
jp
bnd
jae
adc
out
push
roll
fisubl
lcall
roll
fcompl
adc
or
iret
mov
sbb
bound
xchg
adc
jecxz
imul
pop
sbb
subb
add
and
fstl
pusha
xchg
add
pop
adc
mov
popa
fsts
fadds
push
cli
push
cmc
test
nop
ljmp
cwtl
jo
lods
push
fldenv
scas
xor
jmp
cmp
fwait
es
lea
xchg
adc
fstpt
push
in
cmp
push
cmc
cmp
add
and
and
mov
rorb
roll
push
sub
sbb
movsl
sahf
inc
sub
ja
pop
jb
cmpsl
stos
scas
lret
mov
cmp
sbb
je
cwtl
jl
mov
aam
mov
fdivl
xchg
loop
lahf
das
lret
cltd
xchg
jae
test
cmp
es
mov
adc
xor
popf
mov
cmp
add
mov
sub
mov
jbe
inc
lds
je
mov
mov
les
ljmp
fdivl
or
jae
push
mov
xchg
repnz
adc
ror
sub
rolb
sub
stos
adcb
mov
stos
aam
adc
dec
test
cli
add
scas
jo
ret
inc
xchg
mov
rorb
negl
shlb
movhlps
stc
mov
repz
mov
dec
imul
fiadds
jl
jmp
shll
cwtl
push
cs
add
cli
in
scas
out
scas
inc
stc
jnp
fabs
or
mov
add
mov
fsts
xchg
daa
ret
gs
lods
cli
test
out
insb
xor
stos
cmp
sti
inc
in
pop
push
repnz
push
stc
adc
lods
inc
imul
push
fistpll
les
xor
fs
push
cld
lock
sub
or
in
movsl
mov
adcb
fimuls
fmull
mov
aad
das
aas
sub
mov
cmc
in
int
lock
fldl
je
loopne
insl
dec
adc
cmp
and
pop
inc
ror
mov
xchg
add
das
sub
jmp
mov
inc
stos
movsb
frstpm(287
add
lahf
dec
test
sbb
mov
fsubs
xchg
sahf
arpl
mov
mov
loop
pop
lock
je
or
xchg
or
pop
jl
notl
andl
and
sbb
xchg
aaa
out
test
mov
add
cmpsl
mov
pop
and
cmp
fldl
inc
xchg
enter
std
inc
add
fisttpl
mov
data16
push
jle
cmpsb
movsb
in
push
pop
orl
push
insl
jnp
add
mov
pop
and
enter
add
mov
insb
daa
movsb
jbe
adc
inc
addr16
jb
ljmp
xchg
sub
jb
inc
or
out
std
mov
or
inc
sub
pushf
mov
filds
pop
data16
in
into
inc
imul
shr
add
xchg
xchg
pop
aad
sub
insl
mov
xchg
lods
leave
mov
sub
out
jbe
dec
pushf
mov
mov
data16
je
movsb
or
lcall
lret
cmp
insl
adc
pop
push
add
sub
dec
cmp
popf
pop
xchg
lods
rcrl
lods
subl
xor
jmp
xchg
test
insl
cli
aaa
jmp
leave
in
cmpsb
inc
xchg
call
hlt
adc
movsl
xor
pushf
jno
in
repz
mov
loopne
push
mov
or
fstps
fdivrl
loopne
in
xchg
adc
das
cmp
cmpsl
movsl
decb
pop
out
cli
lret
mov
inc
aaa
mov
xchg
mov
mov
jecxz
decb
xlat
jmp
jae
fs
jmp
dec
dec
mov
mov
push
hlt
sub
inc
loope
movsb
cmp
stc
dec
mov
arpl
or
aad
imul
mov
enter
ret
stos
mov
mov
fdivrs
loopne
adc
cli
std
pop
stos
cmpl
or
stos
stc
mov
dec
xor
pop
lods
dec
jne
cltd
cmp
pop
mov
rcll
out
movsl
mov
cmpsl
mov
stc
xchg
add
push
insb
jge
lods
fcomps
adc
jbe
pop
cwtl
leave
clc
adc
aaa
icebp
pop
inc
push
pushf
or
in
dec
fwait
mov
mov
pop
xor
lods
adc
cld
xor
mov
sbb
ds
out
push
jp
sbb
pop
movntps
jbe
iret
push
xchg
jge
pop
shr
lods
cmp
dec
dec
xorps
cmp
mov
and
push
sahf
nop
dec
lods
flds
adc
inc
mov
cmp
cmc
cmp
adc
xchg
outsl
push
inc
cwtl
xchg
dec
not
adc
push
jo
test
push
sub
dec
jo
dec
sub
bound
xchg
cmp
adc
movsb
lcall
stos
pusha
gs
in
scas
lds
pop
mov
mov
mov
add
ret
mov
jmp
or
daa
ja
jmp
pop
icebp
faddl
adcl
adc
js
or
sub
push
mov
fcmovnbe
xor
jl
and
xor
inc
aam
dec
mov
mov
pop
lds
aad
adc
fdivrl
cmp
cmp
in
push
test
cmp
dec
jmp
jp
add
iret
scas
pushf
mov
mov
adc
test
mov
inc
or
in
inc
jo
xor
jo
xchg
cmp
push
xor
shrl
adc
rcrl
pop
adc
lods
loope
cmp
outsl
mov
ficomps
xchg
xor
inc
mov
ss
imul
jle
mov
jnp
dec
sub
scas
mov
lods
mov
mov
sub
fwait
sti
call
enter
fwait
push
les
cltd
xor
sub
sub
jmp
adc
test
inc
rol
xchg
inc
addb
sub
inc
inc
movlps
inc
arpl
das
in
dec
leave
adcb
xchg
scas
adc
pop
addr16
cmpsb
lods
stos
int
and
leave
in
cmp
adc
std
arpl
mov
gs
jmp
ss
aas
dec
movsb
repnz
shrb
into
push
lcall
cmp
or
roll
sub
dec
add
and
jns
jecxz
ret
aas
and
idivl
dec
jb
enter
popf
lret
hlt
stos
cmp
inc
cld
add
cmpsb
mull
and
ljmp
dec
jp
xchg
mov
add
sub
xchg
imul
leave
push
cmova
sahf
and
cmpsb
or
sub
mov
jo
xchg
jp
pop
repz
popa
dec
cmp
shlb
jbe
xor
mov
lods
loopne
xor
mov
lods
imul
mov
js
sub
cmp
daa
pop
jge
or
pop
inc
pusha
roll
fs
filds
test
js
popa
cltd
jb
insl
setle
mov
cwtl
aam
xor
jg
mov
imul
add
jne
cwtl
ljmp
cmpsl
stos
lret
cmp
popa
out
xor
lds
ja
push
icebp
push
mov
xor
inc
cmp
or
in
sahf
shrl
les
mov
jmp
push
sub
clc
and
test
in
arpl
inc
lret
cmp
std
std
ds
ja
mov
inc
xor
pop
test
push
les
adc
pop
lahf
adc
cli
cmp
xchg
or
daa
jecxz
mov
or
xor
fimull
sub
or
daa
jge
fstps
sub
cmp
fnsave
insb
stc
inc
imul
popl
mov
imul
std
mov
sbbb
add
adc
cli
inc
and
ret
cmpsb
std
mov
pop
xlat
outsb
adc
mov
aam
bound
cld
xchg
mov
inc
pop
fwait
cmp
into
jmp
ljmp
fimull
std
in
mov
pop
movsb
mov
out
sub
test
iret
inc
push
lcall
xor
outsl
xchg
adc
movsb
mov
aad
inc
cmp
mov
cltd
mov
movsl
lods
sbb
inc
les
ds
xchg
test
dec
cwtl
ds
mov
and
fbstp
xchg
push
dec
mov
mov
std
enter
shl
sub
dec
jge
mov
mov
jg
or
xchg
imul
mov
pop
rcl
cmp
sahf
mulw
xor
xchg
out
push
mov
das
sub
mov
mov
pop
or
jmp
cmp
mov
add
add
sbb
xchg
clc
dec
jp
xchg
bound
cmpsl
inc
es
shlb
leave
das
in
jo
fucomip
mov
push
inc
xor
xchg
cmpsb
loope
sub
aas
mov
arpl
mov
lock
std
add
jg
aam
mov
movsb
sti
xor
mov
pushf
push
lcall
lods
sbb
pop
dec
mov
fadds
sbb
pop
fnsave
jmp
js
pop
mov
or
out
stos
mov
mov
push
inc
enter
pop
jno
fsubrs
mov
outsl
mov
sti
dec
push
or
lea
sti
jnp
push
pop
insl
in
ds
ret
add
insl
push
fnop
mov
orl
stos
fwait
shlb
aad
pop
divb
testl
xorl
cmp
and
sub
test
xchg
lahf
das
movsb
test
dec
repz
lret
or
repz
das
mov
adc
sub
dec
imul
inc
inc
pop
inc
shll
jo
out
icebp
mov
and
xor
mov
inc
push
push
mov
push
sub
or
fs
xchg
and
mov
add
cmp
dec
xchg
jge
or
aad
out
test
aam
mov
fwait
addl
xor
subb
mov
push
inc
xchg
push
jbe
cmp
mov
aaa
jl
xchg
aad
lods
cmp
ja
xchg
or
shl
cwtl
sbb
insl
jae
mov
cli
sahf
lods
push
ret
ret
sub
pop
cld
lds
iret
and
fisubrl
jge
inc
dec
scas
lret
rolb
movsl
cld
xchg
or
pop
xor
xchg
test
pop
leave
jbe
mov
ss
lea
and
or
xchg
add
xor
andps
push
cmp
push
push
popa
or
sbb
lds
popf
inc
jae
std
push
lcall
inc
jnp
fistpll
or
inc
rorb
fsubrs
cmc
pushfw
aam
arpl
jp
xchg
scas
ret
fisubrs
ret
sahf
sbb
dec
dec
sbb
int
or
jl
mov
cld
pop
cmp
outsl
add
test
inc
fmull
stos
mov
sahf
ja
scas
add
daa
and
fimuls
es
subb
jns
pop
sbb
pop
mov
mov
pop
push
dec
in
jge
push
ss
test
cmp
js
or
stc
add
cmp
test
mov
in
loop
ficoml
adc
pop
pop
in
gs
add
push
xchg
jno
adc
and
sbb
cmp
decb
mov
test
icebp
call
sbbb
xlat
cmp
mov
dec
imul
icebp
cld
int
jmp
sub
psubb
adc
add
es
in
shrl
xchg
pop
jbe
mov
andl
push
outsb
insb
iret
nop
shrl
ljmp
xchg
fnstcw
mov
lret
pushf
loop
push
cs
dec
in
xchg
lea
jle
test
ljmp
push
pop
shlb
dec
push
daa
jge
cmpsl
mov
push
dec
and
inc
push
ret
mov
outsl
pavgw
xchg
add
sub
sub
inc
push
add
mov
outsb
xor
loop
das
xchg
stc
sbb
mov
xor
mov
scas
mov
aaa
cwtl
adc
or
iret
inc
lods
pop
jmp
xor
testb
add
stc
nop
fcmovnb
fsubrl
jae
int3
sbb
push
roll
scas
mov
mov
xchg
mov
and
pop
or
nop
popf
scas
push
repnz
dec
push
cmpsl
movsb
mov
adc
jg
xor
jnp
xchg
out
add
lcall
cmp
xor
addl
add
cmpsb
push
or
stc
pop
mov
jp
pop
ja
xor
enter
push
push
inc
add
inc
sahf
jo
fistpll
je
rorb
push
je
sar
mov
cmp
push
jecxz
mov
lods
fbstp
lock
lods
mov
mov
bound
push
adc
int3
and
sti
aas
daa
push
jbe
loop
push
inc
shlb
add
mov
mov
roll
mov
add
jmp
pop
pop
pop
jae
clc
jns
xchg
dec
mov
mov
shl
lret
jp
mov
sub
add
lock
popf
aas
push
or
xlat
push
dec
xchg
rolb
adc
repz
add
mov
sub
inc
jl
stos
movl
cmc
pushf
into
and
jle
inc
and
sbb
frstor
adc
icebp
cs
imull
ja
jg
aas
repnz
lds
and
adc
sub
data16
je
scas
push
subb
test
les
lock
mov
out
mov
movl
mov
jb
mov
cmp
inc
mov
xchg
fcmovu
movsl
hlt
xor
cld
lret
js
jg
fisttpl
mov
mov
enter
roll
imul
aam
loopne
lret
leave
call
mov
pop
mov
xor
cmc
pop
scas
and
mov
or
push
sbb
or
and
cmpsl
ds
rcrb
das
in
cmp
xor
push
rcr
sub
add
cld
mov
or
push
std
std
or
les
lods
arpl
imul
enter
ficoms
push
rep
mull
inc
sub
popa
mov
mov
dec
mov
mov
dec
idiv
mov
hlt
mov
test
movb
in
sti
leave
jle
pushf
lcall
cmpsb
jecxz
adc
lret
fiadds
lcall
icebp
ret
movsb
fwait
push
jecxz
cmp
jns
xlat
fldcw
push
cmpsb
jne
lret
xorb
daa
hlt
stos
fsubrs
fdivs
push
movsb
je
add
and
inc
jge
in
fnstsw
in
mov
push
rcrl
popf
pop
mov
mov
xchg
test
sub
inc
cmc
add
and
ds
mov
fcmovnu
sub
dec
je
adc
jb
ret
pop
in
aas
mov
leave
cmc
fnsave
int3
and
lds
out
lods
mov
roll
dec
inc
mov
in
lock
xchg
jp
and
test
out
jle
popf
sarl
test
mov
and
lods
lcall
negb
mov
xchg
insb
mov
or
outsl
subb
mov
push
lret
js
sub
or
cmpsl
adc
cwtl
sbb
aam
mov
pop
cmp
push
mov
ljmp
mov
pop
xchg
repnz
movsb
add
fwait
add
fstl
fnstenv
insb
das
lock
or
mov
icebp
jno
imul
jb
fdivr
psadbw
test
arpl
pop
cmpsb
sbb
and
movsl
shl
aaa
xlat
pop
mov
push
jmp
loope
mov
test
sbb
shll
inc
xor
push
jl
into
lret
xor
dec
sti
lcall
nop
loop
popf
add
mov
int3
bound
jge
adc
add
inc
stos
jns
enter
mov
push
arpl
lock
out
adc
jae
dec
fidivs
xor
or
lcall
aaa
pop
xor
outsb
push
int3
push
xor
movl
out
jno
add
xchg
pusha
pop
mov
dec
fidivrs
adc
call
leave
push
popf
mov
xorb
js
mov
push
push
inc
icebp
mov
lahf
inc
aad
add
xchg
or
or
inc
or
xchg
jl
sar
adc
cmc
mov
dec
call
iret
dec
lahf
scas
mov
arpl
add
lcall
les
mov
mov
jbe
outsb
mov
mov
pop
and
jecxz
gs
sub
cmp
pushf
enter
pop
push
dec
pop
bound
scas
sub
xor
sbb
xchg
jnp
jne
jecxz
shrb
dec
loop
out
and
jbe
rcr
jo
aad
and
in
inc
xchg
inc
sub
pop
jns
bound
fs
cmpsl
xchg
pop
stc
ret
js
jl
cmc
xchg
xchg
add
stos
and
inc
xchg
fists
pop
jge
rcrb
cmp
cmp
mov
fs
dec
jb
push
sar
hlt
add
mov
ljmp
cli
jmp
jnp
mov
mov
loope
xchg
jl
jbe
test
je
dec
and
cli
out
inc
mov
xchg
dec
xchg
cld
jae
xchg
cmpsb
enter
xlat
cmpsb
pop
and
andl
sahf
mov
or
fadds
xchg
es
mov
push
mov
jb
pop
mov
stos
out
fsubrp
push
xor
and
cwtl
enter
dec
cmp
int3
scas
maskmovq
addr16
sub
lret
xor
mov
push
daa
push
inc
mov
mov
das
xor
mov
push
pushl
push
insl
dec
into
or
xor
adc
and
pushf
mov
jecxz
lods
jg
aam
xor
push
add
inc
push
fisubl
lock
scas
lret
ja
fldcw
pop
xor
adc
xor
push
add
adc
push
test
popa
mov
rsqrtps
xor
adc
push
inc
aad
sbb
mov
clc
arpl
sub
out
test
lods
jns
and
push
in
cli
pop
je
adc
dec
sub
sub
pop
pop
rclb
rorb
push
cmp
jge
xchg
testb
iret
add
dec
mov
pop
inc
dec
iret
sub
rcll
inc
mov
fisttpl
cmp
adc
pop
pop
jae
push
scas
movsl
inc
nop
stos
push
out
aam
scas
sti
xchg
pushf
arpl
int
pop
sub
xchg
xor
cli
arpl
cmp
stos
mov
dec
xor
daa
shlb
or
jmp
cmp
pop
lcall
repz
les
cld
jmp
hlt
or
es
mov
fidivrs
clc
js
nop
nop
ljmp
jnp
mov
inc
ja
rclb
int3
stos
js
cmpsl
iret
outsl
nop
test
mov
push
fstps
cmp
jp
rcrb
cmpsb
xor
jns
xor
mov
sub
jmp
xchg
loopne
aas
xor
xor
xchg
fnstenv
stc
jbe
fimuls
mov
mov
add
ficoml
or
mul
aam
cmp
push
add
push
fsubs
mov
push
mov
jns
jbe
addl
movsl
add
mov
pushf
cmc
push
jge
push
mov
jecxz
push
and
jbe
xchg
mov
mov
fsubrs
mov
aas
fs
mov
xlat
add
pop
out
jnp
mov
in
xchg
adc
jae
inc
ret
sub
hlt
cli
cmp
pop
push
jp
pop
std
cmp
test
mov
inc
xor
sbb
cwtl
or
es
pop
dec
sbb
adc
add
inc
data16
mov
jmp
mov
add
cld
adc
sub
sub
pop
cmp
push
bound
lcall
mov
dec
mov
out
ss
pop
xor
cmp
jo
fs
mov
into
xchg
daa
inc
inc
dec
stos
fldenv
es
ret
out
nop
xchg
enter
imul
incl
movsb
test
add
adc
mov
lret
movsb
cmp
push
fiadds
in
insb
cmpsl
out
or
or
rcr
push
imul
fdivl
bound
or
dec
pop
mov
adc
div
sub
add
rcrl
cltd
test
xchg
push
mov
aaa
pop
adc
xchg
movl
scas
dec
sahf
mov
pop
out
sub
out
lahf
incl
fsubrs
push
subps
int
cmp
mov
jbe
add
xchg
enter
dec
jmp
iret
fmull
xor
push
bound
sbb
jne
push
or
sahf
aad
das
test
xchg
dec
imul
push
xchg
xor
out
jp
sub
call
mov
cld
enter
iret
aad
mov
cmp
sarl
mov
mov
call
sbb
sub
in
jno
lret
loopne
test
rclb
sub
lcall
lret
and
in
sbb
pushf
sbb
out
mov
sbb
add
xchg
dec
sbb
rcrl
push
jbe
cmpsb
sub
xchg
push
cli
scas
enter
rcl
lds
cmp
pop
or
or
sbb
aaa
sub
xor
rorl
dec
xchg
add
jns
cmp
xchg
out
xchg
stc
push
sub
cmp
push
rolb
outsb
inc
icebp
das
out
pop
ds
and
inc
xor
out
in
das
fisubs
outsl
insb
cmp
push
ficompl
and
aaa
pop
sub
adc
sarl
arpl
outsl
xor
add
cwtl
xor
icebp
mov
push
loopne
ror
jecxz
scas
jb,pn
add
push
pop
sahf
mov
mov
mov
pop
pop
hlt
call
push
iret
mov
sub
shlb
lods
mov
arpl
scas
int3
adcl
rolb
stos
adc
sub
cmp
iret
shll
xchg
or
xor
idivl
push
inc
or
aam
jg
inc
jmp
leave
lods
xor
cmp
add
lods
and
pushf
inc
test
sub
movsb
or
call
popf
adc
sbb
das
jge
movsb
sti
jo
fists
mov
xlat
mov
leave
cmc
xchg
outsb
mov
andl
and
xor
je
cmp
jle
cld
cmpsb
repz
mov
mov
mov
xchg
lods
fcmovbe
jg
pop
pop
inc
sbb
dec
cmp
mov
sti
movsl
dec
imul
pusha
cmp
and
test
mov
popf
repz
pop
imul
dec
adc
lahf
cwtl
mov
sbb
and
mov
add
or
movsl
testl
push
insl
mov
xor
jmp
pop
sarb
bound
sub
out
movsb
pop
mov
lcall
inc
mov
jbe
sub
fisubrl
aaa
sti
cli
and
xor
dec
out
stc
fnsave
stos
loope
sar
push
sbb
or
mov
push
xor
cltd
sahf
push
shlb
sarb
lret
sub
sub
cmpsb
cmp
xor
xor
cmp
mov
mov
pop
outsb
and
lahf
mov
dec
mov
pop
add
xor
ret
scas
mov
outsb
mov
adc
cs
inc
mov
dec
jmp
fsubl
jbe
dec
jns
or
sub
ja
std
scas
gs
pusha
addr16
cmp
fisttpl
pusha
into
push
or
popl
push
jge
inc
add
mov
jno
dec
jno
mov
mov
pop
pop
repz
or
sahf
inc
lahf
sbb
sbbb
lock
pop
sbb
orb
sbb
push
jb
sub
jmp
pop
and
mov
and
mov
inc
clc
dec
push
mov
adc
fldl
popf
aaa
daa
or
js
jae
les
in
mov
hlt
addl
pandn
pop
pop
adc
pop
jns
pusha
or
shlb
mov
mov
add
or
dec
std
fwait
cltd
sarl
inc
lods
stos
lock
push
pop
fwait
xchg
daa
mov
sbb
cwtl
jbe
pop
push
insl
mov
sbbb
push
rorl
movq
pop
movsb
and
mov
ja
pop
add
stos
xchg
ja
add
stos
sbb
int3
in
or
add
pop
mov
push
pop
lret
mov
ja
orb
push
push
xor
push
mov
xchg
cmp
dec
mov
mov
mov
jns
fidivrl
fmuls
fcoms
ds
daa
lods
jae
jne
jecxz
mov
pusha
mov
orl
jp
aam
adc
mov
repz
cmp
ret
xor
insb
cvtdq2ps
sub
mov
iret
jg
inc
sub
xor
lahf
inc
and
mov
push
or
inc
int
cmp
int
push
stc
or
mov
jecxz
sbb
xor
outsl
daa
push
push
imul
push
pop
ljmp
mov
push
sub
call
push
jae
repnz
mov
ja
loope
sbb
rorb
iret
add
push
lret
push
sahf
mov
testl
mov
out
inc
sub
inc
fnstenv
inc
std
sti
xchg
das
and
ret
cltd
mov
cmpsl
mov
xchg
mov
popa
lret
popa
and
jmp
push
sbb
orb
cwtl
sbb
stos
sub
dec
mov
adc
ja
and
iret
mov
ja
in
in
xchg
shl
sub
xchg
shrl
sbb
inc
aas
insb
in
es
out
je
push
cmpl
rcll
loopne
push
incl
repz
xchg
push
and
in
sbb
sub
xchg
lods
push
mov
gs
ficompl
cmp
ficompl
mov
out
ds
pusha
add
mov
hlt
out
inc
stos
loopne
cmp
sub
pop
xor
neg
iret
pop
mov
adc
mov
jae
xlat
fdivrl
fsubl
dec
lcall
fisubrl
repnz
mov
loop
gs
dec
es
or
aaa
loope
aad
sahf
jecxz
or
adc
add
sti
bts
xchg
inc
pop
xchg
jmp
lods
outsl
jle
mov
idivl
jmp
std
mov
sub
pushf
std
mov
or
cmp
cmc
cld
dec
in
sub
and
scas
fcomip
test
pop
aam
out
leave
sub
popf
loopne
jno
fmull
or
sub
sbb
repz
pop
and
fiaddl
int
out
sbb
adc
jp
xchg
mov
xchg
sbb
fs
mov
jg
mov
sarb
cmpsl
mov
sahf
frstor
or
sbb
sub
pop
test
xchg
mov
shrb
hlt
test
cmpsb
test
imul
and
pusha
repz
lret
mov
out
loope
popa
lcall
ds
jle
stc
xchg
out
enter
cmpsb
cs
into
lret
push
xor
repz
test
push
aas
inc
es
mov
insb
into
cmp
cmp
jle
addl
aam
mov
int
xchg
xchg
out
jns
jp
outsl
mov
psubb
stos
mov
or
mov
jbe
jp
xor
jg
out
int
push
xor
jge
movb
ljmp
lods
sub
jne
cltd
xchg
lock
adc
pop
fcomps
jne
mov
stos
inc
or
insl
xlat
mov
and
unpckhps
int3
popf
add
jne
push
sbbl
adc
pop
jp
andps
out
adc
test
test
xor
inc
jle
insl
adc
jg
or
push
xchg
cwtl
out
fcmovu
jo
xchg
dec
cmp
iret
ljmp
insl
mov
pop
and
js
adc
jb
cmp
fistpll
test
aam
out
dec
sahf
sub
daa
shll
add
test
lock
cltd
shrl
call
pop
fidivrs
cld
pop
sbb
adc
pop
xchg
xchg
cld
mov
in
rolb
adc
push
sub
and
mov
jecxz
push
aaa
outsb
mov
jae
js
pop
adc
in
mov
sub
dec
loope
mov
and
dec
mov
stos
shll
adc
or
mov
leave
out
push
fists
fidivs
call
jge
ret
es
jae
and
cli
ret
in
popf
pop
out
int
pop
sub
mov
mov
in
insb
xadd
and
push
xchg
cs
stc
lret
pop
enter
pop
pop
ja
jns
fwait
jecxz
push
fiaddl
adc
fcomps
adc
in
fildl
xchg
dec
daa
mov
lea
in
mov
mov
popf
jns
jmp
arpl
addl
xor
dec
mov
iret
sbb
dec
mov
fs
and
jb
ficoml
pop
jge
jecxz
clc
dec
push
push
inc
rorb
out
xchg
xchg
push
in
mov
sub
mov
fdivr
dec
in
push
cmpb
loopne
shlb
jne
movsb
inc
std
jecxz
fistl
push
jb
out
fcmovbe
jp
xchg
jb
sbb
sar
popa
jae
adc
pop
add
and
mov
ja
pop
pop
mov
mov
push
sbb
jg
xor
cs
sub
sub
mov
ljmp
push
test
es
pop
rcl
adc
sbb
pop
push
push
mov
sub
imul
dec
fcoml
mov
inc
adc
inc
mov
fs
lret
clc
leave
scas
dec
jg
mov
inc
mov
imul
xchg
jg
xchg
inc
dec
cmp
jno
sub
loope
pop
add
cwtl
fisttpll
call
in
leave
insl
jno
sub
mov
out
cmp
popa
inc
push
cmc
and
loopne
sbb
xchg
aas
xchg
pop
inc
xor
les
sbb
movsb
push
jae
dec
movsl
mov
in
aaa
or
xchg
xor
ret
stc
pushf
adcb
mov
popa
push
inc
mov
mov
fwait
pop
sbb
in
pop
add
das
or
pop
and
fcompl
adc
js
jb
xchg
insl
mov
push
aam
dec
and
sbb
xchg
xor
pop
adc
push
dec
loope
dec
sbb
push
sahf
pop
cmp
scas
dec
mov
insl
cs
sar
push
rorl
pop
inc
add
push
sub
lock
loopne
jns
sub
adc
je
ljmp
cmp
std
in
jo
daa
add
int3
add
mov
pop
lret
mov
mov
pop
daa
xchg
cmpsl
push
out
sub
pop
or
stc
pop
pop
adc
rclb
cli
add
push
fcoml
and
sbb
pop
das
gs
call
mov
je
sub
loopne
negl
mov
push
add
call
movsl
inc
jo
push
ss
jns
fidivrs
adc
movb
out
add
fs
fsubl
xchg
scas
scas
adc
sub
sbbl
jo
adc
and
call
mov
adc
pusha
in
lret
and
xchg
mov
xor
sub
test
push
pop
xor
imulb
out
add
mov
mov
push
sarb
ret
and
cmp
xor
pop
out
cmc
fisubrs
mov
aad
push
loop
shll
xor
cs
repz
mov
bnd
mov
lea
inc
inc
and
xor
sbb
lahf
mov
adc
or
stos
movsl
or
or
je
and
jp
sbb
fcoms
mov
mov
xchg
pop
mov
outsl
jns
pop
mov
push
add
in
mov
mov
std
pop
mov
dec
enter
fldl
pop
add
icebp
or
gs
mov
mov
mov
fstpt
jge
mov
rcll
into
subb
pop
and
ficoms
xor
jns
mov
jp
push
adc
or
dec
inc
or
pop
jbe
cmp
add
faddp
cs
add
arpl
cmpsb
sbb
clc
pushf
sub
cmp
rcrb
sti
xor
out
insl
cs
clc
xchg
aas
jl
incb
into
cmp
sub
adc
lods
mov
dec
xchg
mov
cmp
loop
loope
loop
outsb
scas
mov
xchg
cmp
push
push
cld
jge
jns
cld
ss
adc
arpl
jo
inc
out
inc
jb
and
out
addr16
cmp
push
xor
pushf
es
daa
mov
add
fwait
mov
in
pop
test
push
sub
mov
and
xchg
xor
cltd
sbb
and
mov
repnz
movsl
dec
jnp
fidivl
clc
dec
ds
push
cs
fisttpll
shll
mov
mov
push
out
addl
sbb
jno
test
jp
loope
dec
hlt
sbb
jg
sub
push
testl
aam
stc
cmp
in
pop
clc
lods
sbb
repz
sub
or
stos
mov
int
addr16
loop
or
decb
push
in
or
ficoml
inc
xor
out
gs
xor
add
and
daa
mov
add
jle
cmp
popf
enter
enter
test
hlt
loopne
mov
pop
push
push
loopne
cmp
aad
testb
es
cmpl
xchg
loopne
mov
loopne
fwait
in
mov
scas
scas
inc
das
out
or
add
movsl
or
sub
movsb
adc
fmul
sbb
sub
inc
jo
cmp
lods
dec
xlat
sub
pop
fiaddl
sti
or
xor
idivb
daa
xor
aad
sahf
icebp
aas
movsb
jb
movsl
aaa
dec
jecxz
leave
lcall
lods
add
xchg
rcrb
daa
mov
mov
es
std
insl
mov
out
jge
xor
adc
push
mov
sarb
das
into
ret
scas
mov
inc
dec
ljmp
and
adc
fadd
jmp
lods
cmpsl
in
cmp
mov
dec
mov
test
int3
pop
xchg
mov
adc
xchg
xchg
and
sub
adc
mov
sbb
adc
mov
inc
testb
jmp
stos
out
sbb
push
movsb
xor
jbe
ds
mov
mov
cli
dec
js
rcll
adc
jo
xchg
call
aad
cmpsl
das
jno
xchg
cmpb
pop
jnp
test
jns
hlt
cmc
push
sub
dec
adc
add
fsubrl
cwtl
ds
jp
push
dec
cmc
into
popf
inc
pop
cwtl
push
sub
bound
rolb
stc
xchg
movsl
fsubrl
mov
xchg
fs
jecxz
lret
outsb
add
or
inc
push
movsb
daa
or
iret
int3
ss
in
aaa
dec
and
mov
jmp
dec
push
fwait
shrb
sbb
mov
adc
jge
and
dec
jbe
xchg
jle
fld
pushf
xchg
icebp
ret
or
add
adc
mov
jno
jg
sub
mov
fldenv
movsl
ljmp
xor
jnp
int
push
cs
dec
xor
fcompl
mov
sbbl
add
sub
rorl
in
push
movsl
push
fwait
in
jl
push
test
push
mov
cmc
insl
xchg
frstor
push
sbb
add
xchg
xlat
sbb
ds
fildll
cmp
pop
xchg
nop
pop
pop
in
aam
out
test
mov
repz
aam
or
sbb
insb
push
mov
lds
jbe
push
lock
inc
xchg
sbb
xor
cmp
data16
push
sbb
cld
jp
es
jns
arpl
fidivl
ret
jl
jp
mov
pop
sbb
xchg
sub
or
fisttpl
jle
xchg
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
jmp
aad
mov
mov
rorb
pop
xlat
xchg
daa
sbb
adcl
addl
popl
es
ficoms
push
test
adc
adc
jmp
cwtl
call
cmp
loopne
lret
or
jmp
js
xlat
lds
arpl
inc
dec
cmp
mov
leave
mov
cmp
jno
subl
or
pop
pop
fwait
cmpsl
stos
mov
jg
and
cs
mov
shlb
mov
sbb
out
jnp
aas
dec
loop
push
pop
sbb
fsts
les
imul
mov
jp
into
mov
cld
mov
in
gs
and
xchg
sti
mov
jp
jmp
mov
ret
scas
or
lret
xor
jge
xchg
jbe
sbb
fwait
mov
dec
ret
mov
add
push
js
inc
push
cmpsb
fmulp
inc
addr16
cmp
or
jo
aad
pop
repz
push
aad
aas
cs
or
filds
xor
push
loopne
sub
outsl
sti
dec
sub
jg
inc
xchg
clc
and
data16
sbbl
fnsave
jg
or
push
outsl
adc
loopne
push
shrb
repz
adc
xchg
mov
mov
and
nop
std
cmp
mov
add
pop
int3
in
fnsave
sti
sbb
scas
jge
jl
mov
sbb
adc
jo
mov
addl
and
add
and
arpl
repnz
jmp
mov
cmpsb
mov
subl
mov
call
mov
bound
jl
rcr
push
in
lcall
pop
xchg
mov
call
cld
xchg
adc
insb
pop
sub
sub
jg
iret
inc
in
inc
dec
shl
and
push
movsb
jge
jb
movsl
xchg
jno
dec
adc
in
in
iret
fnstcw
sbb
xchg
push
ljmp
lods
ds
xchg
push
dec
sub
lret
sub
cli
dec
push
clc
or
jp
inc
inc
inc
pop
dec
jge
out
inc
xor
and
xchg
adc
clc
push
inc
fdivrl
inc
inc
sub
mov
mov
jne
jge
fisttpl
xor
adc
clc
sub
in
jae
cmp
or
pop
xchg
xor
test
and
cld
lret
enter
mov
jno
in
inc
mov
js
adc
into
xlat
pop
ds
repnz
mov
icebp
xchg
mov
out
stos
int3
pop
sbb
xchg
jb
and
xchg
mov
imul
jo
in
cmp
mov
sub
outsb
mov
popa
pop
inc
cmp
xor
ljmp
jle
stos
adc
sbb
lods
fwait
mov
sub
xchg
out
scas
pop
cmp
ret
je
clc
pop
int
inc
repz
mov
adc
fldl
aam
push
into
ss
out
arpl
shrb
cmpsl
and
sub
je
pop
mov
push
insl
pop
push
or
clc
jnp
or
push
push
lock
add
stos
and
pop
jp
addr16
gs
lahf
insl
out
sub
inc
loopne
shl
in
test
inc
inc
inc
mov
fnstenv
and
push
cmpsl
data16
sub
inc
or
fsubrs
sbb
jp
and
xchg
push
mov
scas
popf
mov
jnp
cld
sti
test
pop
add
xchg
jae
clc
shll
jmp
rol
fdivl
loopne
cmpsl
and
and
outsb
popf
std
jp
inc
cwtl
test
out
sub
sbb
mov
subps
jb
jle
imul
add
clc
fiaddl
mov
cmpsb
mov
xlat
sarb
repnz
in
xor
inc
cmpxchg
fwait
out
xor
jns
std
add
in
or
mov
pop
sti
hlt
cmp
mov
mov
mov
repnz
push
dec
ds
jb
insb
leave
cmp
cwtl
rcl
outsl
xchg
mov
adc
cmp
popf
jecxz
and
lock
pop
adc
outsb
rcr
es
js
or
sbb
in
loope
in
int3
mov
mov
cmpsb
pop
inc
xor
or
lods
loope
and
jbe
insl
stos
in
leave
testl
shrl
jle
push
xchg
les
mov
push
cmpb
inc
cmp
rcrl
mov
dec
or
xor
dec
lret
sub
jle
je
outsb
pop
sar
sar
xchg
cmc
lahf
andw
inc
pusha
es
cmp
push
int3
cltd
pop
repz
jb
jb
sbb
or
test
jecxz
inc
push
mov
fisubl
sti
lahf
mov
sti
nop
inc
sub
xchg
icebp
pop
adc
push
fadds
ret
jmp
mov
seto
pop
shr
sub
push
ljmp
mov
fwait
sub
and
and
sub
orl
int
out
add
ss
jo
push
lret
xchg
aad
lea
subb
xchg
fmuls
mov
inc
ror
xor
fdiv
aam
aam
fisubs
popa
subl
jge
in
push
inc
stos
out
in
cmp
mov
adcb
pop
enter
jo
or
aas
jnp
pop
xor
std
aam
mov
js
pop
sbb
jne
in
jo
push
adc
test
xchg
and
dec
cmp
mov
dec
in
sub
in
mov
lock
jnp
xchg
mov
stc
movsb
mov
leave
add
xchg
pop
xor
bound
fisttps
notb
pop
sahf
and
int3
inc
scas
adcl
or
xor
sub
leave
call
or
dec
outsb
insb
in
dec
fiaddl
shrb
mov
xor
xchg
pop
fdivs
notb
icebp
jge
sti
pop
cmpsl
es
push
test
lret
loopne
icebp
mov
dec
pop
inc
rcrl
out
xor
xchg
push
and
ss
fwait
cltd
test
insl
push
test
xchg
test
xor
adc
or
and
push
jg
addl
adc
flds
mov
sar
in
cmpsb
push
ret
shll
es
xchg
lock
jle
decl
int3
mov
adc
pop
or
add
or
or
xchg
add
jmp
stc
in
out
jmp
ret
ret
add
cmp
in
imul
test
cld
fmull
mov
js
adc
mov
pop
in
in
icebp
orb
push
les
inc
pop
ret
xor
stc
repnz
add
xor
xchg
ds
push
sub
gs
and
fists
mov
add
and
add
sbb
sti
jmp
lcall
sahf
cmp
inc
or
imul
push
popa
mov
dec
fisttpl
repnz
fs
addr16
mov
mov
or
xor
and
cmp
pop
jp
hlt
rcrb
outsl
lahf
std
push
arpl
int3
shl
cltd
cmp
shlb
out
push
fnstcw
and
call
mov
mov
mov
mov
in
xchg
jle
dec
push
adc
sub
in
data16
sub
pop
pop
push
and
hlt
push
mov
mov
push
pusha
add
flds
outsl
mov
mov
std
adc
pushf
repz
push
sub
pop
push
adc
leave
clc
xor
sbb
dec
aaa
iret
les
hlt
mov
mov
jb
jg
fnstcw
inc
adc
mov
ss
daa
je
or
mov
lret
xor
and
xchg
jne
mov
and
imul
jmp
cmp
test
insl
add
ljmp
in
imul
daa
push
cmp
inc
jbe
sub
adc
into
mov
jg
sbb
fimull
cmp
mov
ja
pusha
and
xchg
mov
pop
sbb
fwait
scas
xchg
mov
shlb
xadd
subl
lods
cmp
rcll
pop
inc
inc
mov
sub
imull
iret
scas
sub
aaa
adc
cltd
lods
mov
sub
sbb
fsubl
pop
lea
adc
dec
xchg
add
movl
mov
jle
faddl
pop
inc
mov
jb
xchg
sub
mov
sbbl
bound
nop
sub
lods
inc
movsb
push
movsl
pop
jp
jb
cmp
pop
pop
and
nop
cmc
sub
mov
repz
out
push
or
sahf
adc
dec
sbb
dec
fisubrs
mov
dec
lret
mov
or
mov
lret
mov
jb
push
cwtl
psubb
sbb
push
fmulp
sbb
les
shl
in
fmuls
cld
arpl
jnp
fwait
pop
nop
cmp
imul
in
fimull
mov
mov
loopne
mov
and
jno
xchg
lock
inc
mov
adc
and
push
adc
call
test
es
repz
push
jmp
adc
cmp
lea
adc
jmp
push
jg
mov
jae
dec
outsl
ret
mov
jle
movsb
insl
fbstp
rorb
adc
dec
xchg
or
mov
cwtl
aaa
adc
iret
sub
push
cmp
push
sbb
push
nop
sub
or
jp
es
adc
xorl
pop
cli
sbb
xchg
inc
sti
in
push
in
add
push
xchg
mov
bnd
das
lods
int
pop
dec
sbb
js
push
mov
shr
sahf
jne
scas
lret
das
jbe
adc
or
das
out
push
les
scas
pusha
or
add
orl
lcall
xchg
in
add
jns
jecxz
ja
ret
daa
andl
pop
pop
inc
fstpl
jle
adc
push
and
jecxz
jne
xor
cmp
mov
cmpsb
in
outsl
lds
dec
ds
stos
aaa
mov
fs
ret
rorl
sti
fists
mov
jb
shlb
scas
mov
ljmp
jb
inc
fldl
js
push
inc
sbb
int3
sti
mov
shrl
xchg
fnstcw
and
lods
jns
adc
pushf
lods
in
stos
aad
shl
xlat
insb
xchg
inc
push
sbb
es
xchg
pop
jl
test
movsl
scas
pop
and
in
cmpsl
cmpsl
jno
jg
cmp
xor
lods
push
dec
fidivs
jne
ja
call
fsubrl
sub
int
stc
xorb
push
add
push
in
repnz
sub
sub
gs
cmp
dec
mov
loope
lods
cmp
minps
iret
mov
aad
add
sbb
ret
pop
mov
lods
dec
lahf
rcrb
movsb
out
or
lods
mov
xchg
or
or
sub
jbe
mov
daa
insb
jmp
inc
cmc
test
icebp
dec
and
sar
arpl
mov
sbb
push
sbb
ret
ret
incb
dec
clc
jns
jbe
lock
imul
lods
call
pop
pop
jmp
pop
inc
aaa
push
or
mov
mov
repz
stos
divb
cmpsl
jns
jge
jp
mov
adc
mov
xchg
test
out
ret
jecxz
loop
push
les
repz
xchg
or
rcl
addb
dec
lods
push
push
mov
pop
push
push
xchg
fsubl
mov
xchg
fisubl
sub
loope
gs
es
ret
mov
les
cltd
out
imul
add
aad
sbb
cmp
push
push
mov
sub
mov
sahf
aaa
mov
or
enter
gs
fcoml
inc
or
insb
lods
cld
mov
or
jecxz
cmp
int
aaa
mov
ret
jp
sbb
mov
rcl
xchg
test
xor
cmp
scas
push
shll
jb
cli
cwtl
loop
adc
pop
xchg
mov
pop
mov
push
in
in
es
pushf
mov
ret
pop
sub
pushf
xchg
dec
adc
pop
dec
and
in
push
cmp
inc
dec
inc
mov
jle
fbstp
jmp
xchg
fsubs
mov
ja
or
dec
lcall
loopne
jo
dec
leave
add
mov
cmp
sbb
lds
insb
mov
sbb
pop
and
and
inc
push
stos
dec
pop
cmpsb
daa
in
cmp
roll
data16
mov
push
mov
push
pusha
in
js
pop
ss
push
mov
bound
push
cmp
jp
xlat
movsb
rcll
cmp
and
outsb
inc
mov
xor
popa
mov
xchg
scas
sub
out
rcrb
inc
sbb
icebp
cld
dec
xor
inc
iret
fcmovb
and
mov
orb
nop
adc
and
lods
xchg
inc
add
sbb
in
add
inc
jo
rcrl
jne,pn
mov
mov
pcmpgtb
out
mov
pop
scas
mov
sbb
fstps
pop
out
add
int3
aam
mov
fldenv
or
sub
int
jle
push
mov
fildl
mov
cmp
int3
ljmp
cwtl
pop
xor
cmp
sarl
jl
icebp
inc
adc
jns
push
mov
aad
sbb
jge
jno
cmc
inc
adc
popa
fldt
and
movsl
into
xchg
jg
cmp
push
add
mov
popf
ret
in
dec
cwtl
fs
xor
pop
xchg
or
add
lds
pop
adc
addb
push
push
outsl
cmp
mov
and
mov
leave
loop
sbb
in
cmp
sbb
imul
ss
pushf
jge
scas
xchg
and
mov
push
out
test
lcall
fnstsw
or
shl
xor
sbb
cmp
popf
ror
jg
push
inc
cmp
iret
pushf
jne
out
and
dec
xor
in
stc
mov
mov
sbbl
push
out
lret
jmp
inc
adc
pop
mov
das
or
scas
data16
xor
ja
scas
pop
jo
or
jl
mov
div
xor
aam
cmpsb
adcl
cmpsb
xor
add
test
mov
cmpsl
push
pop
jl
xor
and
and
out
ss
repz
int3
aad
int
aaa
and
fstps
divl
test
in
jnp
test
inc
xlat
sbb
lcall
mov
xchg
mov
adc
sub
loop
mov
in
dec
jp
imul
fwait
pop
fisttpll
dec
dec
add
inc
mov
jne
sub
cli
cmp
loope
adc
cmc
imul
movups
mov
pop
pop
mov
add
mov
das
loope
add
ss
inc
cmp
jge
mov
cmc
dec
and
mov
or
cmpsl
fsubl
out
fld1
ficomps
cmp
pushf
jg
testb
shl
mov
clc
fnstenv
jmp
pop
mov
leave
push
push
xchg
fwait
popf
outsl
adc
xor
push
mov
pop
scas
pop
cmpsl
adc
mov
push
hlt
mov
idivb
jo
adc
das
lcall
add
fs
and
in
push
mov
pop
movsb
cmp
push
sub
out
adcl
or
rclb
cmc
daa
leave
jbe
inc
scas
int3
in
in
adc
cwtl
xor
jbe
xlat
xchg
inc
stc
mov
loop
in
push
lcall
js
mov
inc
sub
mov
adc
mov
or
arpl
jg
mov
dec
sbb
adcb
popa
fldenv
int3
daa
lcall
popa
leave
nop
lahf
sub
mov
mov
jg
dec
add
pop
pop
sbb
inc
xchg
adc
int3
sahf
insl
inc
jns
mov
add
cmpsb
lcall
push
aad
pop
jg
imul
jae
js
xor
clc
cmp
lcall
mov
aad
push
jl
ret
xor
jnp
lret
pop
xchg
out
adc
shl
fnsave
clc
dec
dec
xchg
sbb
mov
cs
aas
xchg
rdpmc
xchg
push
mov
hlt
or
mov
and
jnp
jno
or
inc
cli
cmp
les
jecxz
test
lcall
pop
jne
les
pushf
pop
imul
leave
mov
mov
pop
enter
es
fimuls
adc
call
out
test
aaa
jbe
push
outsl
in
cmc
xor
fnstcw
in
out
adc
mov
mov
sub
ficomps
pop
lcall
inc
jg
data16
dec
inc
add
bound
addr16
les
sbb
xchg
in
ljmp
and
clc
inc
in
pop
or
xlat
jnp
mov
inc
cwtl
sub
adc
push
mov
fdivs
shll
test
adc
add
dec
dec
pop
sbb
fbstp
inc
int3
nop
fists
cmpb
push
out
aad
pop
push
mov
pop
mov
out
pop
xchg
push
mov
imul
xchg
popf
cld
addb
mov
cmp
sbb
insb
fldlg2
cwtl
idiv
mov
and
popa
fucom
pop
jmp
cmp
add
lods
sahf
sti
jb
pushf
test
mov
and
inc
test
js
addr16
test
jmp
insl
push
dec
mov
in
sub
imul
inc
push
fsubrp
mov
ja
jg
mov
mov
jno
arpl
iret
iret
inc
push
hlt
in
scas
ja
dec
push
outsl
test
ret
das
in
pop
or
scas
sub
outsb
mov
lret
dec
into
xchg
xor
das
push
or
jb
test
sbb
sti
xchg
jl
push
push
scas
dec
pop
fbld
dec
cmp
mov
lock
test
rclb
pushf
arpl
mov
lods
and
or
push
xlat
mov
inc
cmp
fisubrl
insl
push
test
test
sub
dec
dec
mov
sub
rorl
dec
lods
fwait
mov
lds
outsb
addr16
sti
ret
in
jnp
dec
rcrl
in
popa
jo
inc
sbb
dec
fcoms
add
cmp
pop
mov
loop
add
jb
imul
push
outsl
ret
out
repz
inc
shll
lds
adc
cmpsb
push
xchg
mov
outsb
fs
test
xchg
mov
into
rcl
scas
test
cmpsl
aam
mov
sub
loop
pop
dec
mov
xchg
pop
aam
sbb
imul
icebp
lret
add
dec
dec
mov
rol
mov
or
sbb
test
cmp
jp
xor
enter
push
cmpsb
and
loopne
lret
jmp
cli
sar
movb
in
pop
loop
adcl
rcrb
idivb
insl
push
jge
ret
fcmovu
sti
pop
dec
sub
in
add
mov
and
mov
lret
loopne
adc
loop
jne
jecxz
cmp
test
cli
lcall
inc
mov
ret
inc
mov
xlat
mov
sub
sbb
inc
adcl
or
lcall
jns
pop
les
insb
popf
xchg
xor
mov
pop
outsb
push
mov
sub
aam
xor
jle
jmp
push
stos
lods
pop
pop
mov
sub
and
mov
cli
sbb
icebp
lds
addr16
add
icebp
insb
cmp
pop
popf
adc
mov
mov
mov
adc
shr
outsl
add
or
imul
fnsave
cmp
fwait
mov
out
push
iret
movsb
sarb
cmp
rcrl
cwtl
add
adc
sub
std
scas
jecxz
or
and
and
push
movsl
pop
shlb
push
mov
mov
jbe
mov
mov
xchg
inc
jmp
mov
cli
iret
aam
int3
push
xchg
fistps
insb
xchg
cwtl
add
push
jle
dec
or
or
sub
stc
cmpsb
fs
pop
out
or
and
jle
mov
hlt
jo
mov
add
or
loope
enter
es
jmp
mov
adc
es
call
pop
loopne
imul
rcll
pop
sbb
xor
mov
xlat
dec
int
ja
sbb
icebp
jmp
or
sahf
pop
add
dec
jecxz
and
and
and
jecxz
adcl
cmp
into
aad
sub
popa
pop
push
outsb
cmp
nop
sub
adc
and
mov
ret
jmp
push
notl
movsl
inc
push
sti
ljmp
call
imull
cld
mov
aad
jnp
sbb
notb
iret
inc
push
sbb
add
cmpsb
shl
mov
cmpsl
or
or
sbb
sub
pop
or
cmp
xorb
sbb
in
jle
scas
pop
dec
scas
xchg
leave
inc
jmp
lret
sub
fidivrl
aam
sub
cmp
loop
xor
adc
push
cmpsb
jnp
dec
lods
fs
iret
push
jl
mov
mov
jb
test
sbb
inc
aam
movsl
loope
icebp
mov
mov
push
sti
adc
dec
js
pop
dec
push
call
lret
icebp
test
data16
loopne
jge
dec
mov
jp
push
pushf
lcall
mov
cmp
repnz
ja
insb
cmpsb
sbb
jae
stos
pop
mov
xor
sbb
pop
es
outsb
into
mov
clc
int
sbb
and
push
push
xchg
aaa
pushf
lods
shrb
sub
sbbl
fsubrs
hlt
mov
adc
shrb
sub
rcll
jnp
bound
xchg
jb
mov
push
jge
cmp
xlat
jo
fxch
stc
mov
pop
aad
daa
cwtl
sbb
push
mov
push
push
je
cmp
fcmovnu
cltd
bnd
mov
es
sub
lahf
mov
filds
jnp
ficomps
cmpsb
adcb
jno
hlt
in
std
fldcw
incb
into
pop
cmp
mov
add
lret
nop
in
js
dec
cmp
fldcw
mov
xlat
mov
sbb
mov
pop
fs
or
or
je
mov
or
out
jl
push
lcall
cld
xor
ffree
dec
push
scas
xor
pushf
jg
test
cs
in
push
fs
lret
jb
lcall
pop
sub
je
loope
pop
jecxz
push
cmp
shr
mov
jbe
jbe
icebp
sub
dec
jmp
xor
adc
mull
idivl
or
and
into
movsb
into
imul
sahf
scas
iret
mov
scas
dec
leave
inc
xor
adc
or
fst
jmp
or
addr16
addr16
push
cmpsb
dec
sub
sbb
iret
mov
scas
je
daa
mov
sub
adc
xchg
cld
out
sbbb
mov
repz
nop
jg
mov
loope
hlt
pop
and
push
mov
fcomps
insb
shlb
in
add
shr
daa
xchg
pop
movsl
stos
mov
jns
mov
stc
sub
push
out
ljmp
cli
test
mov
ret
mulb
jp
jmp
call
je
jmp
add
xor
rclb
jae
sbb
and
fidivs
mov
test
pushf
pusha
fidivs
inc
mov
cmp
adc
shl
add
test
xchg
int3
nop
add
ss
scas
or
int3
cmc
mov
jle
shl
orb
jg
jp
mov
sbb
stos
mov
jns
enter
daa
cmp
in
out
xchg
dec
sub
cmp
lods
dec
imul
jo
and
outsb
scas
jecxz
cmc
pop
scas
fwait
test
sarb
in
lcall
dec
fdivp
cmpb
sub
ffreep
mov
dec
jb
sbbl
sahf
in
sub
and
mov
orb
jge
cmpsb
fs
cmp
icebp
in
adcb
ficoml
sub
daa
pop
or
xchg
push
and
pop
add
adc
imul
jl
xchg
adc
std
and
or
push
push
cmp
sub
adc
loop
ds
fidivrs
sahf
popa
ffree
xchg
sbb
out
add
xchg
xchg
mov
in
cli
adc
enter
paddq
push
mov
xchg
sub
paddsw
inc
lret
ljmp
adc
lods
in
pop
sub
jb
cmp
jne
aas
mov
or
pop
push
cmp
mov
xor
mov
inc
push
dec
sbb
stc
lock
cs
leave
jl
stos
imul
bound
test
mov
push
mov
add
mov
sbb
sub
cmp
sub
cmp
or
jb
pushl
xchg
ja
pop
pop
push
inc
add
fnstcw
cmc
dec
outsl
setb
inc
mov
jecxz
fldenv
lds
shrb
or
mov
stos
addb
rcl
in
sahf
out
imul
dec
lahf
mov
jae
push
iret
ds
dec
subl
lods
add
pusha
push
jge
imul
shrb
aas
pop
sbb
sbb
pusha
jmp
mov
add
inc
out
cmp
pusha
in
mov
sbb
icebp
cltd
lods
sbb
push
test
and
bound
sub
les
stos
divl
cmp
jbe
aam
scas
std
jp
add
or
je
fldcw
insl
or
inc
xor
mov
sarb
jns
test
inc
and
por
mov
daa
lret
xchg
pusha
push
xchg
push
and
mov
rorb
pop
in
pop
test
sarl
cmp
mov
xor
jno
test
cmp
dec
repnz
adc
lods
jle
inc
ret
and
push
and
add
aam
push
add
jmp
loop
xor
insb
add
ja
shl
jg
sub
jecxz
inc
add
mov
push
inc
test
or
in
add
in
cmp
xor
push
es
cltd
jae
ja
out
inc
fldl
mov
gs
inc
sub
enter
sub
sti
flds
std
hlt
sub
ret
pcmpeqw
ret
call
adc
mov
sbbl
ss
incb
cs
js
jo
mov
cmp
ss
lret
xchg
cmp
sbb
lods
mov
inc
inc
mov
sbb
and
cli
add
pop
dec
push
adc
shrl
loope
bound
sbb
hlt
fiadds
push
stc
or
push
or
push
aaa
add
mov
inc
pop
lret
ret
aaa
xor
nop
adc
fistpl
jno
cmc
inc
fnstcw
or
jae
imul
xchg
inc
jp
mov
in
push
addr16
aaa
daa
jge
jge
lret
pushf
xor
mov
push
aad
mov
sbb
jmp
and
xor
pop
xchg
push
push
icebp
outsb
nop
sub
or
mov
xchg
jp
dec
mov
ret
sub
mov
sbb
push
xchg
mov
cltd
and
sub
pushf
lods
movsl
pop
stc
and
leave
int3
xchg
mov
fsubs
jl
pop
and
mov
iret
and
jns
sti
stc
mov
fidivrl
in
cmpl
sbb
ja,pt
cwtl
fnstcw
pop
or
cmpsb
stos
add
inc
adc
test
icebp
addb
push
fwait
out
das
push
xor
inc
cld
inc
cmp
imul
test
sbb
and
cmp
out
hlt
or
out
popa
xor
sti
pop
push
sahf
mov
push
inc
je
adc
outsb
lea
lret
adc
inc
imul
dec
lret
cs
inc
fdivrl
xchg
in
sbb
lret
sub
popf
in
cmp
iret
push
into
out
jns
or
jno
or
sarl
jnp
mov
fisttpl
lret
lds
adc
xchg
out
test
xchg
xchg
xchg
cld
insl
iret
pop
invd
push
sbb
mov
mov
dec
shrl
aas
outsb
jns
xor
mov
lds
mov
aam
es
push
fidivl
insb
mov
fdivp
mov
pop
jg
std
inc
leave
mov
xlat
push
shl
dec
push
sbb
cmp
xor
inc
lret
and
dec
sub
lret
mov
inc
or
push
fsubrl
inc
or
nop
sub
movsl
lret
inc
add
cmp
mov
inc
rcrl
dec
adc
imul
mov
xor
out
push
fucomip
rcrb
and
mov
mov
pushf
dec
fisttpl
push
push
mov
xchg
cmc
push
cmc
add
in
inc
adc
lods
bound
mov
sbb
inc
push
or
lahf
sub
jne
xchg
add
jbe
test
sti
mov
mov
cmpsl
fdivrp
or
push
cmpb
js
sub
mov
out
sbb
sbb
jg
and
sbb
call
jb
gs
mov
imul
test
pop
movsb
mov
mov
sbb
insl
push
jle
mov
inc
icebp
fidivs
loop
movsl
in
or
mov
dec
hlt
setbe
sub
ret
repnz
cmp
jp
mov
cmpl
sti
push
bound
stos
addr16
bound
out
jo
cmp
jp
lds
xchg
inc
test
dec
dec
xor
mov
rol
xchg
mov
loope
scas
bound
push
or
jmp
cmp
sbb
les
xchg
mov
sub
dec
pop
sbb
cld
call
inc
push
jne
push
and
ja
cltd
rorl
mov
sub
jno
inc
test
aad
out
ss
pushf
mov
or
aad
ds
fcmovnb
xor
jmp
pop
add
mov
hlt
gs
in
fidivs
push
add
push
cmp
ljmp
sub
xor
lcall
add
xor
add
sahf
aaa
sub
push
inc
jo
pusha
inc
cltd
push
movsb
fmuls
add
push
mov
mov
mov
fwait
xor
sub
inc
push
jns
fdivr
push
jae
jno
dec
cmpsl
push
je
adc
push
inc
lcall
adc
dec
out
sub
jns
fnsave
sbb
test
mov
xor
into
sub
imul
xor
mov
dec
scas
xchg
push
ljmp
push
mov
pusha
cmp
mov
adc
addr16
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
notl
push
sub
push
sub
mov
mov
mov
inc
mov
or
movl
movzbl
adc
movl
adc
mov
add
mov
adcl
sub
adc
mov
xorl
xorl
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
pushl
pushl
call
cmpl
jb
mov
sub
mov
orl
mov
andl
mov
sub
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jb
mov
xorl
orl
mov
andl
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
movl
cmpl
je
cmpl
jbe
jmp
call
mov
dec
mov
jmp
mov
orl
add
mov
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
jmp
mov
mov
mov
neg
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
adcl
movl
subl
lea
movzbl
sbb
mov
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
call
jmp
lea
add
mov
xor
mov
mov
mov
sub
xor
mov
adc
mov
adcl
xor
orl
add
xorl
mov
andl
xor
add
inc
mov
cmpl
jge
jmp
push
push
pushl
call
cmpl
jb
mov
mov
mov
add
movl
cmpl
je
cmpl
ja
jmp
push
call
xor
or
dec
mov
jmp
push
sub
mov
mov
mov
mov
mov
adc
mov
xor
and
mov
add
movl
cmp
movl
je
notl
mov
jmp
mov
xorl
xor
push
add
xor
xor
sub
mov
add
movl
push
adc
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
push
push
pushl
call
jmp
mov
xor
subl
xor
movl
cmp
movl
jne
movl
cmp
jne
push
movl
jmp
mov
xor
adcl
add
subl
xor
add
movl
adc
subl
xor
orl
xor
movl
cmp
movl
jne
cmp
movl
jne
addl
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
call
xor
xor
dec
mov
jmp
xor
add
mov
subl
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
jmp
mov
movl
xor
add
adcl
imul
mov
orl
xor
add
movl
cmp
mov
je
movl
cmpl
je
cmpl
ja
jmp
push
push
call
mov
dec
mov
jmp
mov
orl
add
and
mov
mov
xor
add
imul
sbbl
mov
mov
mov
mov
xor
mov
sub
mov
jmp
mov
xor
mov
mov
mov
xor
mov
sub
mov
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
jg
mov
mov
xor
mov
sub
mov
jmp
mov
xor
add
add
mov
mov
mov
xor
add
not
and
mov
movsbl
cltd
add
adc
jmp
pop
push
xchg
dec
add
rcrl
rcr
stc
addb
iret
lea
add
dec
rcrb
ret
pop
dec
ud0
sbb
adc
pop
pop
xchg
adc
fldenv
inc
xor
adc
inc
int
jg
into
and
inc
jnp
fadd
mov
mov
das
sti
push
xchg
cmp
lea
dec
pop
xor
add
inc
inc
adcl
test
dec
lds
pop
out
xchg
aaa
test
clc
cmp
imulb
repnz
mov
scas
push
sub
aaa
scas
lcall
jns
call
mov
mov
rorb
out
push
and
mov
pop
adc
pop
add
fdivrs
dec
out
sub
jge
push
test
fidivrl
cli
mov
pushf
and
and
mov
in
jo
sbb
sub
adc
cld
das
je
cmp
push
lahf
add
sub
ss
aas
hlt
je
call
cmc
shll
mov
inc
adc
mov
inc
jb
mov
sub
movsb
roll
divb
and
mov
fwait
iret
and
dec
sbb
lods
stc
mov
shll
iret
mov
scas
push
xor
enter
sarb
xor
jecxz
xor
test
cltd
mov
sahf
sbb
jmp
scas
xor
mov
inc
add
dec
mov
adc
ffree
fisttpll
mov
jp
jmp
mov
fcmovu
repz
add
jno
lea
ret
cmp
je
mov
in
mov
cmpsb
ss
in
sbb
addr16
add
or
repnz
mov
mov
test
cmp
mov
push
ss
aad
sbb
mov
xchg
inc
dec
dec
or
lds
jns
and
pop
or
dec
loop
movsb
sbb
pop
push
popf
pusha
mov
popa
push
cmp
fisubs
lahf
call
pop
mov
loope
lcall
jb
cmc
push
out
cmpsb
and
pop
cmp
lcall
and
or
lock
jg
mov
insl
ret
sbb
les
sub
inc
dec
jo
sub
sub
cltd
mov
aas
rorb
lret
dec
mov
dec
lcall
pop
lcall
ja
aas
cmc
push
dec
jb
insl
adc
push
mov
pop
fs
inc
adc
popa
xchg
pop
imul
test
in
addr16
jnp
dec
inc
cmp
jp
sbb
popa
je
test
pop
fisttpl
mov
gs
daa
incl
out
fcmovb
mov
and
sub
sub
cs
dec
push
sahf
xor
pushf
scas
in
mov
stc
xchg
lods
xchg
push
out
push
idiv
mov
gs
xor
nop
or
loopne
iret
insb
popa
lret
sbbl
mull
mov
out
fnstenv
arpl
lcall
jg
movb
les
or
adc
je
push
jne
imul
pop
std
push
jl
fisttps
xor
add
sarl
hlt
loopne
add
xchg
mov
fmulp
jb
adc
gs
test
or
pop
fists
dec
pop
push
testw
lock
repz
jae
ss
pop
sub
scas
arpl
push
test
fidivrs
lahf
jbe
sahf
sub
dec
in
cmpb
inc
add
mov
mov
out
inc
xor
shlb
mull
cmp
cwtl
jg
stos
in
xorb
pusha
mov
mov
fstpt
xor
add
mov
iret
dec
out
inc
shrb
mov
xchg
push
addr16
int3
adc
das
iret
cmpl
out
and
sbb
je
mov
repz
mov
sub
aam
mov
pop
mov
jns
mov
jecxz
push
fs
mov
xlat
xchg
in
dec
jecxz
idivb
arpl
pop
add
lea
xchg
jp
pop
scas
adc
fisubrl
adc
js
jnp
ds
mov
xchg
fnop
cmp
rdpmc
pusha
dec
mov
mov
pushl
inc
push
cmp
je
sbb
xor
xchg
rcr
push
out
sub
fsubrs
pop
cli
sub
xchg
jmp
inc
push
fisttpl
ds
push
add
addl
arpl
jae
cld
icebp
cmp
mov
jae
jne
or
add
cmp
ret
xchg
push
sub
je
daa
stc
test
inc
sahf
jnp
iret
cli
insb
outsl
mov
pushl
cmpsl
lds
int
sbb
mov
sbbb
test
ret
shll
push
cltd
lret
xchg
add
mov
int
jb
icebp
dec
or
cmp
aad
xor
jmp
add
xchg
xchg
lock
jecxz
icebp
leave
inc
inc
out
cmp
xor
pop
sbb
ret
in
and
sub
out
sub
pop
or
mov
add
rclb
lods
pop
hlt
cmp
sub
inc
cmc
mov
xor
sbb
xchg
dec
push
jb
push
xchg
shl
rcll
mov
in
fnstcw
mov
and
sar
adc
jb
or
mov
sarl
fsubrl
inc
ja
ds
js
push
pop
cmp
pop
cld
icebp
or
push
and
pusha
lds
push
mov
mov
inc
mov
clc
pop
jp
popa
mov
mov
popf
aaa
jae
imul
mov
sbb
xor
push
addb
or
sub
icebp
cmp
out
xchg
jne
imul
fwait
je
pop
icebp
push
inc
clc
ljmp
jp
add
adc
es
cmp
mov
pop
xor
loop
mov
dec
jbe
cli
stos
js
push
lret
cmp
sbb
cwtl
sub
fisubrs
xchg
pop
cmp
sub
test
hlt
dec
mov
lcall
jmp
adc
scas
mov
mov
dec
ds
push
xchg
push
sbb
lcall
int
xor
cmpsl
jge
adc
sub
dec
jne
inc
xor
in
sahf
push
pop
outsb
lahf
add
xor
jg
xchg
sahf
mov
mov
mov
sub
jp
ret
icebp
fidivs
stos
mov
lret
push
inc
daa
stc
add
stc
loop
and
test
jno
mov
cmp
sbb
ja
push
mov
adc
adc
test
call
lods
cli
repnz
clc
rorb
adc
adc
dec
xlat
mov
aad
cmp
pop
mov
push
or
iret
xchg
mov
inc
js
std
xchg
and
imul
fcomip
and
xor
sahf
int3
or
jne
daa
shlb
xchg
pop
in
arpl
adc
pop
mov
aad
dec
cmp
imul
inc
jle
push
movsb
mov
ss
adc
notl
xorl
sub
fsts
mov
push
adc
add
pop
pusha
lret
pop
movsb
fistpl
sub
cmpsl
mull
xchg
push
les
and
addr16
nop
inc
cmpsl
pop
jg
cmp
xlat
sub
in
mov
push
out
icebp
mov
or
xor
or
push
sbb
fs
or
mov
inc
loop
mov
pop
sbb
or
cli
outsl
stos
and
stos
repz
jle
icebp
dec
pop
add
adc
ja
jns
in
mov
jno
mov
xchg
sub
jb
xor
xor
fldenv
or
fwait
xchg
sub
lret
pop
lods
int3
lods
int
xor
lods
mov
addr16
loopne
add
cmpsl
mov
inc
mov
mov
rcll
dec
cmpsb
mov
incl
add
fisubl
ret
fistpl
add
aad
ret
and
jle
daa
xchg
loopne
mov
hlt
dec
fimuls
mov
mov
mov
out
imul
call
add
pop
adc
bound
push
test
mov
sub
lock
cltd
outsb
xchg
push
add
fwait
sbb
or
sbb
call
mov
cmpsb
dec
sbb
xchg
lds
jp
and
cmp
addr16
adc
leave
dec
out
push
push
jbe
fmuls
xchg
pusha
out
cmp
sub
arpl
out
fidivrs
mov
scas
mov
mov
jo
or
js
sarb
inc
ret
inc
add
mov
fwait
int3
and
or
adc
frstor
dec
cli
bound
inc
in
popf
cltd
jle
mov
enter
sti
pop
cli
inc
mov
xchg
mov
hlt
call
psubusb
lds
outsb
addb
pop
loope
sub
loope
mov
push
hlt
or
or
fs
fstpt
add
cwtl
inc
pop
int
les
ret
jmp
decl
roll
fdivrs
int3
mov
pop
mov
adc
scas
stc
pusha
sbb
push
dec
lcall
add
subb
or
shlb
cltd
outsb
jmp
adc
fnstcw
in
push
jb
lea
fcmovne
cmp
mov
jle
inc
jge
cmpsl
hlt
test
mov
dec
fsubl
xchg
push
pop
out
pusha
fstp
popf
adc
ss
and
lods
shr
push
rorl
mov
adc
mov
pop
lahf
mov
inc
add
fs
aaa
push
mov
cmp
mov
adc
dec
mov
ss
fnstcw
push
sbbb
or
push
sbb
add
pop
sub
loope
ljmp
cmp
xchg
jle
mov
mov
and
cli
arpl
cmpsl
adc
bound
lahf
add
aam
dec
sbb
jle
pop
lret
imul
sub
mov
cmpsb
fwait
inc
mov
lods
shll
inc
dec
mov
jle
mov
push
int
std
and
jns
and
mov
test
ss
adc
jnp
loop
js
xor
push
pop
test
jmp
jge
addr16
pop
xchg
xchg
cmc
int
xor
or
and
dec
addr16
push
fildll
xchg
mov
mov
stos
adc
ss
jne
jle
in
push
mov
cli
jg
cmpsl
mov
enter
adc
inc
or
push
xlat
out
hlt
lock
pop
mov
pusha
ret
je
stos
inc
in
imul
dec
cmpsb
and
mov
add
mov
xchg
inc
inc
dec
adc
mov
mov
jmp
int
fdivs
add
outsb
and
xor
inc
xchg
mov
outsl
int
sub
pop
add
jg
test
arpl
pop
ficompl
push
pop
insl
pop
cmpsb
in
sbb
fwait
in
sbb
lea
popf
daa
or
and
insl
mov
lods
mov
outsl
bound
insb
popf
int
out
or
pop
das
test
cmpsl
jp
adc
dec
repnz
pop
pop
pop
lock
cmp
mov
mov
gs
into
dec
andb
jp
fdivl
call
rcl
repz
lret
push
cmp
jnp
cmp
mov
fwait
aas
xchg
addr16
lret
lds
push
mov
mov
push
sbb
sub
pop
add
mov
sbb
shlb
leave
dec
arpl
xchg
cmpsb
xchg
add
cmp
lods
xorb
fisttpl
cmp
xor
int
or
test
mov
push
scas
or
inc
outsb
cmpsb
push
add
fcomps
lcall
fidivrs
es
pop
xor
pop
popf
cmpsb
mov
mov
repz
iret
int3
and
jg
das
jmp
call
mov
cmpsb
fucompp
outsl
mov
into
iret
fnstcw
xor
imul
sbb
mov
cmc
std
fwait
test
jecxz
pop
cmpl
mov
sub
ljmp
inc
pushf
imul
cmp
pop
fnstcw
mov
jp
lock
adc
jp
mov
sahf
dec
cld
xchg
mull
test
in
add
sbb
sbb
outsl
icebp
mov
push
sti
lods
jge
cld
scas
dec
pop
dec
mov
lcall
mov
les
inc
lret
sbb
out
fcom
fiadds
jno
fisubl
ret
jecxz
ds
mov
lahf
popa
andb
mov
dec
mov
dec
lds
je
arpl
mov
mov
into
out
out
pop
push
dec
daa
scas
add
sub
movsb
mov
rcrl
jge
adc
adc
and
jae
jl
adc
aam
mov
jne
adc
imul
xor
adc
fmull
int
addr16
pop
mov
lcall
icebp
fs
ret
add
clc
stos
jno
pop
popf
and
xor
add
mov
mov
sub
xchg
dec
lods
test
loopne
or
pusha
ret
add
and
sub
cmpsl
enter
push
sar
sahf
push
aad
xlat
sbb
popw
in
in
inc
aas
mov
inc
fwait
xchg
sbb
mov
pop
out
add
movsl
aas
mov
jecxz
mov
sti
jns
leave
sbb
test
scas
shrb
add
jo
add
gs
loop
enter
pop
out
pop
lods
xor
push
jno
xchg
cld
xor
adc
xor
and
mov
rcrb
test
cmp
gs
push
mov
cmpsb
cmpl
add
ss
repnz
jecxz
xor
push
ret
cmp
pop
dec
aad
inc
pop
adc
lods
jmp
cmp
xchg
xor
pusha
testl
stos
rcrb
mov
adc
xchg
push
and
sub
jl
andb
sub
push
pusha
lea
mov
dec
lods
outsl
xlat
mov
cwtl
jl
inc
pop
lret
mov
ds
adc
xchg
sbb
add
jp
sbb
filds
jecxz
cwtl
sbb
and
pushf
fcoms
xor
inc
int
arpl
mov
add
xchg
mov
push
mov
mov
aas
xlat
inc
pop
or
jmp
add
xor
inc
leave
pusha
call
inc
cmpl
repz
insb
mul
dec
xchg
fisttps
outsl
push
addr16
test
xchg
inc
loop
jecxz
imul
in
repz
jmp
xorl
inc
jbe
outsl
mov
adc
cmpsl
push
insb
mov
push
dec
cmpsb
movsb
lahf
mov
mov
icebp
xor
movb
jg
lea
and
and
or
sub
loope
test
pop
xchg
jg
sbb
or
push
out
out
lock
pushf
cld
aaa
insb
and
mov
cs
add
cmp
adc
jecxz
adc
aas
push
hlt
test
in
notb
push
jnp
push
or
stos
js
sbb
mov
popa
iret
divl
lcall
fnop
rorb
cmp
pop
mov
xchg
in
dec
fldt
sbb
fmull
clc
pop
xchg
fwait
adc
jle
or
add
fs
lahf
sbb
xlat
and
mov
arpl
mov
iret
loop
stos
pushw
data16
lock
imul
or
pop
lret
in
dec
mov
mov
pop
daa
cmp
scas
jle
sahf
shl
sbb
das
jmp
frstor
add
fisttpll
es
cmp
or
pop
jne
cmp
cmpsb
cmp
or
into
pop
mov
test
loope
lods
sahf
inc
jle
call
push
shll
loope
stos
mov
insl
popf
adc
sbb
sbb
lock
data16
fwait
lcall
lods
es
addl
jle
rclb
in
pop
ret
and
pop
aas
cltd
hlt
cli
in
sub
push
cmp
cmp
sub
xchg
punpckldq
js
fcmovu
rcll
shl
sahf
push
lea
lret
or
out
mov
iret
cmpsl
pop
sbb
int3
dec
add
mov
int
pop
push
xchg
push
mov
cwtl
sbb
jo
js
cmp
jno
lds
jp
jne
dec
push
mov
sahf
adc
inc
xor
out
cmp
lods
fmulp
ds
rorl
inc
insb
imul
shlb
jmp
sbb
clc
sbb
sbb
mov
push
mov
mov
mov
push
or
loop
fisttpll
pop
andl
mov
cld
inc
fdivs
data16
mov
call
xchg
xor
or
mov
fmulp
fwait
and
pop
call
icebp
packssdw
sub
leave
dec
adc
cmp
pop
hlt
mov
add
push
shlb
sub
fbstp
jnp
repnz
in
push
repnz
pop
sarb
es
stc
fdivs
jl
cmpsl
cmp
xchg
xor
adc
outsb
cmp
pop
inc
mov
xor
call
sub
cld
pop
cmp
aad
addl
popa
mov
nop
les
or
iret
xor
hlt
lods
dec
or
pop
loop
cltd
pop
popa
add
ljmp
movsl
cmp
adc
addr16
xor
dec
pop
pop
movsb
in
scas
inc
sub
aad
inc
sbb
cmpsl
sub
mov
add
stc
adc
les
mov
jmp
mov
sbbb
jne
es
hlt
mov
dec
imul
pop
aam
dec
in
rol
inc
insl
lcall
js
mov
fcompl
out
call
push
lods
mov
pop
hlt
sbbl
comiss
or
ret
mov
mov
jle
rolb
stc
xor
outsb
push
lods
iret
push
scas
decl
lret
insl
rcrb
jae
loop
and
decb
pop
and
leave
orb
or
mov
push
pop
inc
lock
xchg
pop
xchg
int3
stos
out
lret
inc
jge
popf
jo
sbb
jl
pop
mov
cmpsl
xchg
jg
lods
sbb
xchg
stos
push
stos
jl
mov
sbb
cmc
sbb
pop
loopne
sbb
cmp
lcall
inc
jg
fnstsw
in
pop
push
xor
add
cmc
push
nop
or
test
sub
xchg
lcall
arpl
xor
adc
add
inc
pop
out
push
popa
mov
adc
ret
in
pushf
add
inc
lcall
dec
mov
sbb
inc
jl
hlt
js
ljmp
sub
packuswb
cmc
ret
pop
xchg
add
sbb
sub
imul
cmp
stos
js
ds
inc
cwtl
pusha
sti
mov
pop
stc
outsl
mov
in
ss
sub
iret
pop
out
clc
fnstcw
dec
iret
adc
pop
dec
ds
xchg
les
push
fwait
sbb
mov
iret
mov
out
les
fistl
lret
stc
inc
xchg
or
adc
ror
lods
jno
inc
rol
adc
lock
pop
adc
rep
mov
insb
and
cmp
leave
icebp
pushf
aas
test
inc
inc
xchg
add
cmpl
mov
loope
sub
into
mov
fwait
cmp
jg
xchg
dec
mov
xor
xchg
add
and
jmp
and
pop
cmp
adc
xchg
xchg
outsl
cmp
insb
pop
rolb
das
pop
push
lret
mov
fwait
xorb
sub
fs
aad
mov
pop
xchg
jmp
in
pop
loop
gs
inc
dec
stc
pop
fwait
mov
inc
dec
dec
pop
sbbb
or
xor
dec
and
xchg
sub
inc
movsl
or
xor
mov
push
inc
movq
bound
pop
pop
aad
and
mov
insb
pop
add
push
pop
ret
lea
add
xchg
push
lods
ja
icebp
pushf
xchg
add
mov
jp
cmc
mov
in
cmp
std
xlat
mov
js
jae
jno
cs
push
pop
mov
jge
out
cmp
xor
xchg
add
dec
push
push
adc
jl
dec
push
neg
adc
pop
ljmp
jo
jecxz
fisubs
das
sbb
mov
iret
and
scas
ja
push
cmp
cmc
test
mov
jae
bound
pushf
xor
aad
lret
push
ljmp
mov
xchg
dec
push
add
mov
lahf
add
and
insl
mov
clc
or
stc
add
inc
push
ss
mov
push
jne
lock
cmp
jmp
and
or
pushf
inc
mov
fs
roll
in
loope
push
sub
xor
addl
rorb
xchg
adc
inc
mov
pop
imul
or
pop
lahf
outsl
jno
std
jne
push
test
xchg
jmp
aad
add
loope
adc
xlat
pop
xchg
fbstp
ss
mov
xchg
sahf
pop
sar
add
pop
pushf
mov
cltd
push
test
aam
scas
notl
cmpl
scas
faddp
push
sub
mov
cld
movsb
int
leave
dec
push
popa
adc
jle
inc
xor
fwait
cmc
mov
sub
xlat
lods
sub
push
push
pop
sbb
xchg
mov
mov
lods
outsb
sahf
mov
sti
sbb
pop
jnp
pop
xchg
out
inc
rcr
adc
xor
cs
mov
xchg
sbb
mov
rcrb
pusha
decl
jbe
fucom
and
mov
push
fisubs
push
jle
dec
fisttpl
mov
into
dec
fdivrs
mov
sbb
pop
pushf
bound
movsl
push
xor
mov
fnstcw
adcl
dec
ljmp
xchg
call
mov
or
loop
mov
jl
adc
jge
test
fdivs
mov
and
mov
mov
outsb
and
ficomps
jnp
sti
jge
jl
fwait
popf
in
pushf
iret
inc
mov
sbb
mov
rorl
mov
xor
push
mulb
test
push
sub
mov
inc
cs
pop
mov
int
dec
scas
mov
xchg
loop
inc
stc
sti
sar
gs
mov
movsl
adc
cmp
imul
divps
popa
sub
pop
xchg
pop
imul
in
popf
loope
or
pop
leave
xchg
daa
sub
sbb
xchg
inc
loopne
mov
outsl
insb
aam
test
cs
add
lock
out
mov
add
or
mov
fs
inc
mov
sar
xlat
hlt
arpl
daa
sbb
mov
inc
jecxz
daa
jge
sbbl
cmpsl
sub
sub
sub
mov
cmpsl
movsb
push
inc
push
fnstenv
sbb
sbb
mov
mov
pusha
test
jb
es
add
pop
bound
cmpsl
movsl
mov
lds
inc
iret
jns
mov
jbe
out
jnp
ljmp
incb
cmpsl
int
data16
mov
pop
stos
aas
xchg
test
mov
add
fdiv
and
pop
lods
movsl
dec
xchg
adc
popf
lods
add
repnz
ja
inc
in
fcmovnb
into
movsb
cmp
aad
jns
xor
shlb
inc
lret
pop
adc
scas
cmpl
xchg
lahf
fstpl
stc
jns
sub
mov
lods
mov
ljmp
push
xor
xlat
loop
pop
dec
out
xor
pop
je
xor
or
dec
mov
aas
lods
xchg
mulb
jg
pop
lds
sahf
sbb
adc
scas
sbb
adc
adc
scas
subb
js
in
out
pop
mov
inc
mov
sub
fdivl
insb
sub
sub
lgs
jmp
and
jle
fsubs
pop
push
sub
mov
cmc
mov
sbb
jns
xchg
or
and
inc
sub
mov
sub
push
loop
add
jae
and
cwtl
add
mov
aad
addr16
dec
icebp
jge
pop
mov
or
cmc
mov
cmp
movsl
cli
das
and
inc
add
les
popf
sub
in
jmp
push
fisubrl
and
dec
or
stos
test
cwtl
inc
orl
data16
xchg
jo
addl
xchg
sbb
pop
mov
inc
pop
mov
fs
xorb
imul
dec
dec
cmp
das
cmp
push
and
push
dec
stos
pop
sub
sahf
mov
movl
mov
aam
cmpb
in
add
pop
dec
ret
ljmp
cwtl
loope
scas
and
add
cmp
push
test
jle
sub
bnd
jne
push
push
addl
dec
lea
inc
test
ret
shlb
mov
lea
nop
aam
leave
mov
xlat
ljmp
adc
and
xor
ss
sub
jmp
addr16
clc
scas
cmp
add
nop
inc
ss
lahf
and
inc
add
out
in
pusha
bound
mov
xchg
aas
fisttpl
mulb
push
xchg
fistps
xchg
int
pushf
push
xchg
bound
mov
mov
push
insb
fxch
sub
push
xchg
mov
not
addb
push
lcall
test
stos
mov
xchg
and
fwait
je
sbb
int3
cmpsl
mov
fcomp
xchg
pop
pop
mov
test
insb
ds
xchg
call
ret
lock
xor
push
dec
pusha
jbe
push
das
test
cltd
and
or
mul
stc
out
das
inc
sub
stc
aas
xor
out
cmpsb
outsb
add
aaa
es
add
push
mov
jnp
pop
nop
jo
mov
das
outsl
dec
stos
inc
imul
xor
push
pop
cmp
xchg
sahf
fbstp
sti
pop
push
mov
inc
dec
movsl
jl
fisttps
xor
inc
xor
mov
inc
dec
xchg
mov
xor
into
ja
test
shrb
push
outsl
jnp
xchg
jg
sahf
mov
test
mov
mov
sarl
jge
mov
cmp
pop
mov
dec
dec
cmp
arpl
repz
push
jno
mov
or
inc
mov
out
mov
dec
rcll
dec
or
mov
adc
int3
mov
xchg
hlt
pop
std
mov
sub
int
adc
lcall
outsb
pop
aad
jl
lds
push
adc
xchg
aas
mov
mov
test
and
scas
pop
push
sub
arpl
mov
enter
jle
pushf
std
or
sub
sarl
es
icebp
adc
imul
add
pop
subl
mov
cmp
outsb
cmp
sbb
lret
jno
into
mov
lods
js
shr
mov
outsb
je
cmp
add
xor
lcall
push
xchg
gs
rorl
adc
cld
out
loop
imul
jae
sub
mov
fisubrl
push
imul
movsl
mov
jmp
push
pop
mov
mov
sbb
fmulp
and
stos
sub
scas
inc
push
xchg
rcrb
scas
test
dec
out
insb
push
test
cmc
and
mov
fs
jns
adc
cmp
movl
ret
daa
sbb
in
dec
mov
enter
jle
ljmp
jle
daa
push
xchg
push
mov
or
xorb
jmp
push
sbb
cs
pop
jle
enter
mov
adc
cwtl
mov
jecxz
lock
cmp
adc
add
out
add
loop
popf
jecxz
mov
and
fsubl
mov
stos
xor
inc
add
push
mov
push
mov
dec
dec
arpl
mov
shlw
ja
push
sti
pop
daa
out
dec
stos
and
sbb
ret
xor
out
sbb
sbb
in
popa
std
lcall
ljmp
sbb
add
mov
pop
sub
pop
sub
xchg
in
pushf
hlt
sbb
sbb
push
inc
stos
xchg
lea
neg
pop
roll
xchg
call
pushf
sub
mov
addr16
mov
lcall
mov
sbb
into
adc
cmpl
sbb
pop
sub
insl
xor
fildl
adc
icebp
pop
adc
fs
inc
data16
mov
push
int
jbe
mov
xchg
pop
into
pop
mov
or
xchg
push
cmp
aad
aam
pop
jo
mov
pmulhw
lahf
jg
pop
push
scas
sbbb
ret
cld
popa
fs
or
cmpl
int3
jns
adc
lahf
or
push
mov
scas
xor
adc
js
sub
jge
add
pop
push
in
xchg
adc
mov
das
mov
push
test
mov
cmpsb
jl
mov
dec
push
jo
xor
sbb
and
repnz
jo
test
and
sub
fsubs
shrl
mov
adc
stc
ds
sbb
scas
out
mov
stc
xlat
cmp
adc
jae
push
ficompl
xchg
jae
test
out
fistps
xchg
jmp
xor
mov
icebp
push
lds
lcall
mov
test
movsl
dec
cmp
jle
pop
ficompl
mov
mov
iret
imul
sti
loop
fwait
mov
aaa
gs
mov
push
or
jnp
aam
jbe
in
leave
inc
mov
repnz
inc
in
in
pop
shrl
pop
mov
ljmp
dec
sbb
dec
push
push
fwait
sbbb
out
call
mov
lds
cmp
subl
mov
test
dec
adc
pop
ret
mov
sub
mov
in
push
inc
shl
rcrl
and
mov
add
mov
xchg
fstl
fildl
adc
mov
insl
rdpmc
xchg
dec
sahf
shrd
mov
roll
mulb
xchg
xor
mov
ja
dec
mov
or
sbb
xchg
push
mov
addr16
push
ljmp
push
pushf
mov
ret
or
xorb
mov
jmp
mov
repnz
inc
push
and
dec
lds
int3
insb
mov
enter
push
mov
loope
xor
out
and
adc
pop
push
sbb
push
testl
push
ljmp
sub
cmp
sub
daa
adc
xor
mov
sub
xchg
jecxz
enter
and
adc
sbb
push
adc
adc
adc
int3
hlt
aas
mov
dec
mov
mov
aam
ds
lds
adc
mov
lahf
and
xchg
cmpsl
push
in
jmp
or
dec
add
mov
cld
and
lods
je
stos
cmp
ja
mov
movl
test
add
add
and
inc
cld
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
je
mov
xor
mov
sub
add
mov
jmp
mov
mov
mov
mov
lea
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
mov
jmp
test
lock
orb
enter
pushl
dec
adc
addb
shrl
test
icebp
xchg
xchg
iret
pop
aas
pop
outsb
or
bound
outsl
mov
cltd
push
add
je
pop
cmp
aaa
dec
or
cmp
jae
icebp
push
dec
ud2
push
add
or
ds
adc
rorl
cmp
xor
cmpsl
mov
adc
and
pop
sbb
repz
pop
arpl
lods
shrl
fcoml
xor
cmpsb
popa
jp
cmp
ret
dec
and
xor
frstor
lret
cmp
repz
mov
xor
cmc
nop
adc
and
or
xchg
cmp
ds
sub
xchg
cmp
mov
mov
xor
cmp
mov
mov
adc
dec
or
insl
dec
scas
jl
or
push
jno
adc
sbb
pop
dec
xchg
fwait
cwtl
push
lea
outsl
or
and
push
sbb
push
adc
fsubrl
mov
jp
inc
jp
je
push
xchg
mov
pop
cmpsb
and
mov
push
rcr
pop
pop
lcall
stc
and
outsl
mov
pop
push
rorl
add
sti
sbb
in
inc
sbb
mov
outsb
cld
xchg
pusha
mov
pop
jp
divb
lock
add
shrb
movl
fs
addr16
or
mov
mov
push
dec
popa
and
cmp
pushf
bound
clc
inc
push
add
jnp
test
sub
mov
aad
icebp
daa
aas
insl
int3
mov
mov
fisttpl
loope
xchg
xchg
lahf
sub
inc
xlat
cmp
stos
imul
and
mov
std
jl
cld
dec
dec
sbb
mov
mov
sti
mov
in
call
stc
or
lods
cmp
nop
lcall
je
scas
fdivr
or
pushf
dec
mov
enter
leave
fidivrl
jp
filds
push
jo
xchg
scas
js
inc
cmp
clc
pushf
les
add
pop
lds
orl
jne
rclb
out
sub
out
fdivl
dec
scas
pop
ljmp
sbb
fnstsw
aaa
lods
mov
mov
push
xorb
mov
adc
mov
clc
in
push
test
scas
leave
repnz
jmp
insb
and
or
add
pop
mov
mov
push
or
xor
jo
les
xchg
pop
pop
arpl
push
sub
mov
lahf
ljmp
jne
repz
push
out
jg
subl
xor
cmp
imul
mov
stc
dec
add
add
pop
into
idiv
aaa
or
aam
push
es
sub
push
mov
dec
dec
ret
xor
inc
jnp
loopne
test
push
mov
adc
push
and
test
ss
ds
in
jb
jnp
mov
cmpsb
cltd
mov
jne
cmpsl
cmp
dec
out
pop
add
ljmp
push
fs
in
lock
cmp
loop
out
out
test
sahf
pop
add
mov
outsl
hlt
stos
fcompl
add
rsm
iret
adc
jbe
cmp
cltd
jg
insb
popa
arpl
insl
out
cmp
scas
repnz
inc
data16
xchg
pusha
out
cmp
lods
pop
outsl
scas
cmpsb
mov
pop
mov
mov
pop
jge
push
push
cmpsl
jne
pushf
dec
or
inc
test
xchg
xchg
les
pop
pop
imul
lock
or
in
test
lds
orb
je
lea
jmp
jecxz
mov
subb
cmpl
adc
add
add
push
fwait
clc
ret
push
cmp
aam
inc
xorl
imul
sub
inc
push
pushf
cmp
fistl
or
lret
mov
cmp
fwait
stos
das
mov
mov
push
jbe
out
shlb
adc
add
lods
aam
dec
xchg
sahf
enter
xor
adc
nop
adc
inc
dec
push
adc
repnz
xchg
mov
or
pop
mov
pop
push
repz
jmp
and
ja
int3
ja
push
out
cmp
dec
jge
and
add
pop
outsb
fistps
aad
in
xor
in
jae
lods
mov
imul
xchg
lods
and
and
dec
rcrb
cmp
xor
pop
dec
cmovb
lahf
jne
cmp
dec
scas
push
popa
add
jle
mov
fbld
push
test
xchg
repz
jp
or
fcom
das
pop
sub
fs
adc
mov
or
pop
pop
jle
xor
lahf
cmp
leave
ret
pop
dec
aas
mov
add
das
mov
adc
std
add
mov
aad
mov
clc
push
add
xor
cmpsb
jnp
addb
sbb
mov
lret
sti
inc
insl
jl
clc
popa
into
xlat
fs
jle
sbb
js
repnz
add
push
je
and
adc
pop
ja
fiaddl
js
cltd
out
fstps
fcmovne
inc
popa
outsl
mov
call
dec
push
cmpsl
pop
push
ss
sbb
test
std
ss
push
es
ds
and
jnp
fadds
jo
mov
in
or
test
push
aam
mov
push
ret
adc
xchg
movsl
lods
mov
movsl
push
pop
and
mov
movsb
add
jbe
fists
fmull
xor
sbb
in
scas
push
fidivs
mov
sbb
mov
jne
std
std
outsb
jnp
stos
adc
cwtl
jge
jae
addr16
outsl
rol
sbb
sbb
fwait
mov
cli
mov
decl
add
pop
int
jnp
jecxz
ret
inc
insl
cmpsl
test
arpl
lds
inc
add
adc
lock
mov
or
push
lock
lahf
outsb
lcall
sahf
add
pop
jae
in
add
popa
sbb
pushf
push
push
lcall
push
das
mov
lahf
sahf
sbb
das
test
gs
cmpsb
lods
inc
cmpsb
xor
push
jge
and
adc
pushf
sub
dec
push
xor
mov
cli
cmp
adc
mov
out
dec
and
das
xor
test
or
movsl
movsl
aas
xchg
mov
lret
insl
shrl
sub
cs
push
loop
cmp
hlt
scas
scas
jno
cmpsb
adc
ret
pusha
adc
jge
mov
inc
outsb
int3
mov
mov
stc
mov
mov
inc
xchg
cmp
jle
pushf
notb
enter
dec
ljmp
aam
and
in
fidivs
xor
movsl
outsb
fsub
push
fdivrs
push
cmpsb
adc
fwait
dec
mov
dec
scas
jns
sbb
jmp
xor
lods
cli
mov
pop
sbb
push
loop
mov
fbld
add
adc
inc
or
out
cwtl
fistl
cmc
mov
add
subl
sub
and
fnstcw
inc
push
mov
and
dec
inc
push
xchg
sbb
lock
scas
fsub
repz
pop
leave
xor
or
out
xchg
clc
adc
leave
sbb
or
fwait
jnp
sarb
jmp
xchg
cli
test
dec
push
out
mov
and
pop
mov
and
xor
loop
lret
js
sarl
outsl
stos
mov
push
lahf
cmc
mov
ret
dec
fisttpl
fnstsw
iret
xchg
icebp
sbb
data16
push
mov
and
xor
lcall
pop
shl
jp
inc
outsl
mov
xorb
jns
xor
call
pusha
das
mov
xorb
stc
or
imul
imul
fstl
stc
add
into
js
hlt
jle
cltd
dec
out
xor
stos
mov
cs
ret
les
or
pusha
dec
lret
inc
pop
movsb
push
scas
push
xchg
dec
testb
mov
xchg
mov
mov
xchg
cmp
in
in
add
pop
neg
xor
ficompl
repnz
leave
mov
sti
ss
sub
outsb
popa
cmp
and
jb
lret
mov
in
movsb
out
sub
mov
int3
mov
stos
loopne
sar
popa
mov
test
jnp
addr16
idiv
cmpsl
xor
in
sub
pop
mov
out
mov
pop
push
std
jnp
pop
mov
lock
repz
les
cmp
pop
lods
pop
mov
jbe
sub
pushf
mov
xorl
popa
xchg
movsl
orl
mov
lods
pop
push
movsb
jle
daa
dec
test
mov
fnstenv
or
dec
clc
fldcw
cmpsb
jns
push
ficomps
jp
out
jg
adc
mov
jbe
mov
sbb
ss
lahf
xor
push
mov
imul
push
xchg
jmp
cmp
mov
mov
cltd
int3
out
pop
or
aam
jle
cmp
adc
pop
cs
mov
arpl
pop
mov
mov
sub
adc
out
adc
inc
out
xchg
mov
pushf
pop
dec
pop
repnz
mov
sub
mov
and
xchg
sub
hlt
lods
mov
xchg
mov
cmc
int
jb
xchg
cmpb
in
push
jo
pop
mov
imul
jae
push
dec
aam
and
inc
mov
movsl
or
push
or
test
out
sarl
popf
in
xchg
mov
pop
inc
xlat
mov
loopne
inc
add
in
pop
in
inc
and
mov
sbb
lret
std
aaa
sbb
nop
scas
fldt
jecxz
int
outsl
push
fisttpl
jbe
in
push
in
pop
and
shrb
mov
inc
xor
add
outsl
movsl
cltd
adc
push
adc
push
scas
mov
test
iret
in
leave
lock
inc
lock
fsubr
add
mov
jle
movsb
enter
jb
repz
adc
filds
stos
jmp
push
mov
add
pusha
or
outsl
fldl
add
or
das
push
test
adc
inc
mov
mov
subb
or
pop
mov
sub
cmpsb
sarb
cmp
dec
add
lret
push
or
sub
mov
mov
stc
dec
and
xchg
dec
sbb
je
pushl
push
and
jae
shll
and
and
pop
cmp
sbb
mov
push
jb
loop
pop
and
push
mov
call
fcomip
mov
iret
cld
scas
adc
inc
aas
ds
fxch
lcall
inc
sbb
mov
pop
pusha
mov
and
lret
leave
push
push
mov
bound
push
xor
jno
cwtl
dec
cltd
fistpl
fwait
popf
sbb
test
jns
xor
mov
fcmovu
rcl
aad
push
lods
cmp
dec
mov
fdivs
mov
js
cmp
roll
sbb
cld
lock
ret
push
in
orb
jmp
movsl
icebp
enter
push
sarb
shlb
dec
pop
or
add
add
scas
mov
bound
mov
stos
push
sbb
xchg
mov
je
dec
in
jno
sbb
stc
outsb
jb
dec
and
scas
cli
lods
lret
add
cmp
sub
inc
and
push
jecxz
ficompl
pop
pop
adcl
jg
dec
fdivrl
mov
dec
pop
daa
out
aaa
push
jmp
mov
ret
cltd
jp
add
dec
xor
jbe
inc
inc
mov
imul
iret
mov
sbb
lods
cld
sub
rolb
xlat
and
aam
inc
push
jecxz
adc
mov
sbb
inc
popf
inc
add
push
sti
popa
inc
popf
or
in
xchg
ljmp
inc
mov
fmull
hlt
pop
jmp
mov
xchg
stos
sbb
push
adc
sub
loopne
pop
mov
jge
out
insl
ret
or
lahf
jg
jo
or
cmp
push
loope
pop
arpl
enter
std
test
pop
test
xlat
add
dec
xor
add
arpl
or
ret
rcrb
cmp
mov
sbb
loopne
sbb
mov
add
jbe
pop
inc
push
pop
iret
rcll
pop
sbb
into
stc
fs
jle
sub
mov
in
jnp
adc
jg
jle
test
mov
and
cli
mov
mov
push
iret
mov
mov
xchg
out
movsb
xor
enter
and
jne
test
out
mov
out
xor
inc
leave
mov
jnp
push
mov
mov
or
sahf
jle
push
stc
mov
or
jae
cmp
xchg
leave
mov
loope
les
stos
mov
xchg
jle
push
mov
mov
mov
push
push
jg
cs
cmp
or
fsubl
mov
xchg
rcpps
and
pushf
popf
adc
iret
or
scas
or
scas
mov
fistl
cli
and
ljmp
pop
jmp
rcll
sahf
shr
jl
xor
mov
arpl
push
add
out
decl
test
pop
dec
push
push
ss
push
in
dec
loopne
adc
or
add
mov
fisubs
sahf
into
js
and
and
shrl
pop
jns
jp
push
jmp
adc
sub
mov
cmp
jb
push
aad
pop
jecxz
or
or
mov
xlat
rclb
mov
add
pop
ret
inc
test
iret
adc
scas
mov
inc
repz
pop
sub
adc
dec
cmp
in
adc
adc
lds
cmpsb
fldt
xchg
clc
pop
out
sub
test
bnd
xchg
xchg
js
mov
mov
dec
xchg
dec
ret
adc
jp
or
and
jo
and
aam
jae
inc
addr16
int
or
in
test
cmp
inc
push
fs
mov
or
fcoms
outsb
out
or
and
mulb
loopne
dec
mov
nop
push
jne
mov
or
push
cld
test
test
xlat
jle
sbb
outsb
faddl
rcrb
mov
sbb
or
adc
mov
sbb
add
add
adc
dec
shrl
imul
dec
divl
mov
test
fwait
clc
sbb
inc
sahf
sub
in
xchg
lods
mov
mov
lods
pusha
hlt
pop
pop
or
lods
pop
push
test
ss
loopne
jl
clc
xchg
mov
stos
xor
nop
pop
lret
into
add
and
pop
out
je
daa
xlat
jb
gs
jge
arpl
out
jle
dec
les
jmp
jo
adc
xlat
aam
inc
push
and
mov
xor
cltd
fbld
je
pop
mov
jmp
ja
pop
fsubl
lods
ret
cmc
xlat
xlat
add
or
clc
inc
fimuls
shll
mov
loop
sarb
mov
or
enter
cwtl
test
xchg
cmc
and
mov
xchg
cld
adc
in
add
cmp
sarb
mov
pop
jns
adc
sub
push
or
nop
insb
pop
lahf
adc
sub
pop
cmp
add
mov
add
out
xor
sbb
jno
loopne
inc
adc
sbb
out
fistpll
stos
fcmovnbe
popl
sub
mov
ds
and
cltd
nop
in
fcoms
cmpsb
popa
cmp
into
jo
movsb
int3
les
out
pop
pop
mov
xor
mov
aas
cld
add
out
sbb
idivb
sub
adc
jbe
cli
push
jge
loope
and
popf
mov
add
add
shrb
rolb
inc
popf
xor
pop
adc
pop
jb
or
aad
cmc
cmp
xchg
and
sbb
adc
adc
dec
pop
jmp
pop
jle
jns
or
xchg
bound
inc
sti
inc
push
andb
movsl
icebp
imul
out
mov
je
xchg
clc
xor
pop
push
xchg
outsb
inc
xor
adc
or
inc
sub
xchg
adc
add
cmp
shrl
jmp
lds
into
lds
xor
stc
mov
cmp
pop
add
jne
inc
ret
add
mov
xor
pop
ja
push
cli
pop
pop
or
mov
dec
scas
mov
xchg
mov
into
stos
jne
lret
mov
dec
xchg
movsb
mov
loopne
mov
out
mov
mov
mov
xlat
call
movsb
test
mov
push
inc
xchg
xchg
pop
aam
loopne
inc
lods
mov
xchg
es
jo
arpl
xor
in
in
out
in
and
add
rolb
in
and
cmp
cmp
push
enter
aas
mov
mov
int3
aaa
mov
aam
andb
cmp
stos
test
and
cli
jle
lcall
addr16
mov
in
sbb
fdivl
aam
lea
icebp
mov
pop
and
shl
in
jge
sahf
and
cmp
push
jo
lret
mov
mov
mov
lods
dec
or
push
std
adc
mov
mov
pop
jmp
jge
aam
sub
jae
xchg
into
mov
addr16
xor
loop
push
mov
inc
iret
es
jno
inc
mov
dec
ljmp
sbbb
jle
jecxz
and
out
pop
idiv
push
adc
cmp
cs
pop
xor
lcall
es
repnz
sahf
sbb
sub
sbb
mov
push
push
or
xlat
lret
dec
sub
lret
lret
cs
and
aam
adc
sbb
ficompl
cs
loope,pn
mov
lds
jmp
jg
mov
insl
imul
out
cltd
mov
fldl
div
ficomps
sbb
movsb
xorl
test
xchg
sbb
das
jmp
dec
mov
sub
xchg
gs
adc
pop
ret
or
jb
mov
cmc
jmp
daa
push
in
loopne
or
push
mov
rclb
mov
sub
in
arpl
scas
int
mov
popf
addr16
pop
add
mov
xchg
call
lahf
aaa
xor
vandnps
add
dec
hlt
or
mov
loope
hlt
sub
sbb
sub
dec
push
imul
fists
xor
jns
fwait
mov
lds
push
inc
xor
repz
stc
outsb
ljmp
ret
cmpsb
les
xor
add
pop
inc
jbe
push
cld
mov
and
sahf
add
dec
cmp
out
test
and
subb
push
mov
fstl
pop
sub
inc
add
pop
cwtl
inc
mov
jnp
jo
imul
arpl
push
out
sti
aam
and
mov
sub
fcmovb
in
mov
enter
jae
fstpt
sbb
lahf
lcall
xchg
pop
ja
movsb
inc
insl
lcall
popa
pop
lods
cmp
jo
repnz
scas
daa
out
xor
push
push
cmpsl
filds
xchg
and
movsb
inc
xor
fisttps
je
xchg
jmp
int
dec
push
mov
lcall
adc
fxtract
shll
rcr
push
addl
and
bound
mov
repz
mov
push
mov
wbinvd
xor
mov
ja
lods
mov
or
cltd
cs
cmp
in
xor
sahf
and
jo
push
pop
push
xchg
inc
out
out
pop
daa
nop
fists
bnd
dec
out
iret
outsb
sbb
jl
push
dec
and
mov
outsb
cld
scas
xchg
pop
cmp
push
into
xchg
fistl
leave
decl
sub
mov
scas
push
mov
cld
mov
push
xor
sahf
imul
inc
mov
clc
jns
xchg
outsb
or
jmp
jbe
xlat
into
inc
lcall
dec
mov
ret
add
lret
mov
fs
nop
aas
cmpsb
xchg
sar
jl
cwtl
pop
mov
push
jnp
inc
or
fs
xchg
and
cmp
xor
je
cmp
fdivrs
jo
or
jnp
add
sbb
test
test
lcall
test
loopne
dec
mov
lahf
popa
sub
fnsave
jmp
xchg
cltd
sub
mov
cmp
and
mov
and
mov
fisubrl
test
cli
sbb
arpl
pop
or
mov
dec
xchg
jp
cmpsb
in
jbe
lods
stos
shll
pop
mov
mov
test
xlat
or
in
sub
mov
adc
scas
ja
mov
aam
ficoml
xor
xchg
push
fistps
add
gs
arpl
jg
dec
into
lcall
outsb
mov
inc
fidivs
daa
sbb
je
add
hlt
sbb
scas
lea
dec
lea
mov
xlat
or
lret
mov
mov
mov
xchg
popf
cmp
std
shlb
mov
idivl
sbb
pop
adc
loop
int
pop
adc
pop
loop
ret
jbe
mov
mov
mov
in
cld
add
jns
dec
fs
xchg
jge
or
cli
adc
es
add
xlat
push
in
and
jae
mov
jge
jb
pop
push
adc
sub
cmpsb
mov
jnp
out
xor
cli
nop
cmp
shlb
pop
rorl
lret
mov
pop
in
xor
xchg
test
and
cltd
enter
pop
push
inc
xchg
hlt
icebp
insl
scas
loope
outsb
push
and
sub
outsb
sbb
adc
push
jle
inc
scas
stos
aam
push
loope
pop
paddusw
sub
mov
mov
mov
das
nop
into
fwait
testl
xlat
mov
xor
fistpll
inc
sarb
xchg
sub
cs
push
movmskps
and
jns
test
and
mov
adc
bound
mov
lods
push
rorl
mov
orb
test
xchg
dec
loope
dec
adc
mov
push
test
js
jp
cmp
add
jle
sti
test
and
pop
stos
pop
outsb
xchg
dec
iret
insl
push
es
mov
inc
inc
and
ficoms
sbb
cmpsl
jp
gs
enter
enter
fdiv
out
out
in
push
cltd
xor
test
movsl
jnp
enter
mov
mov
push
mov
rcrb
push
ja
call
movsl
ret
mov
in
xor
cltd
jle
fstps
popa
xlat
sub
jne
mov
pop
int
sub
jb
js
ret
lock
xchg
and
bound
mov
scas
clc
sti
cli
jl
xlat
mov
cld
imul
mov
add
ljmp
shlb
data16
shlb
mov
into
das
or
and
cld
xchg
cmc
sub
mov
cmp
adc
dec
out
jo
jg
movsl
cltd
call
inc
pop
popf
lds
sub
subb
dec
or
insl
inc
xchg
mov
sub
cwtl
daa
inc
rcl
add
add
cmp
test
adc
cmp
and
dec
cld
add
mov
ret
imul
iret
ss
dec
lea
jmp
sub
pop
hlt
add
push
pop
subb
test
dec
mov
addr16
xchg
cs
adc
and
scas
inc
lcall
xor
shl
shll
jmp
push
inc
push
xchg
add
call
dec
mov
xchg
sub
sahf
cld
ja
mov
inc
pop
ja
or
add
dec
jecxz
pop
filds
pushf
scas
sub
cmp
enter
mov
inc
add
fdivrp
mov
lcall
sub
inc
fwait
xor
out
sbb
mov
xchg
sbb
data16
jae
int
les
lock
pop
sub
xchg
xor
jle
push
jno
jo
adcb
lds
xor
stos
jae
es
push
pushf
dec
in
hlt
push
pop
pop
push
jbe
popf
stos
movsb
lret
adc
inc
test
sub
xchg
mov
fldcw
inc
dec
nop
sub
dec
fistl
aaa
and
rorb
test
dec
mov
push
movsl
popf
adc
call
pmaxub
and
subl
inc
std
fnstenv
add
xor
and
lcall
movsl
xchg
mov
or
jnp
popa
sub
or
lahf
fxch
lret
or
loopne
jae
mov
stos
ja
popf
pop
ss
cmpsl
push
cmp
mov
sbbb
mov
adc
dec
inc
or
fdivs
jg
adc
inc
lret
shlb
jmp
cmpsb
or
repz
fadds
fwait
insb
int3
jb
test
inc
out
and
mov
adcl
nop
adc
mov
fsubp
mov
dec
sbb
push
mov
and
jg
pop
xor
sbb
lcall
insb
jge
lods
repnz
adc
mov
add
lea
jmp
lret
inc
pandn
in
sti
orb
scas
pop
mov
mov
lret
push
add
jge
std
sub
aaa
nop
ds
iret
fldcw
sahf
cmp
adc
cmp
sbb
sub
mov
cmp
test
ja
enter
push
ja
js
aam
mov
in
nop
jmp
mov
cs
adc
clc
xchg
or
shlb
lcall
lea
mov
roll
aad
mov
aad
mov
popa
test
f2xm1
inc
sub
xchg
test
icebp
andl
lods
fstps
popa
stos
cmpsb
jbe
jb
gs
xor
inc
loopne
cwtl
dec
jo
movl
mov
xor
test
fwait
scas
pop
xor
sub
and
cmp
pop
enter
je
in
in
sarl
sbb
jp
mov
popf
mov
dec
pop
pop
stos
mov
inc
cmp
add
or
xor
inc
inc
movsl
pop
cmp
mov
das
inc
scas
std
mov
or
fbld
pop
push
inc
sahf
push
hlt
fisttps
or
aam
mov
cmp
jmp
push
shll
movsl
bound
je
inc
or
mov
in
add
icebp
cs
push
imul
lret
cmpsl
mov
dec
fcomps
cmpsl
pusha
imul
jle
ljmp
mov
jmp
mov
fsubrs
rorb
lret
std
jno
call
cmp
push
gs
pushf
mov
dec
inc
ret
xor
add
mov
test
out
push
xchg
leave
jle
fimuls
jno
and
iret
jne
adc
test
xor
mov
aad
mov
or
hlt
out
cli
hlt
fwait
int
test
arpl
adc
lods
aad
sbb
xchg
push
xor
push
jl
xor
sbb
dec
mov
js
jmp
movsl
and
inc
sub
das
pop
std
inc
lret
inc
jmp
jg
insl
jp
out
xchg
inc
mov
xchg
adc
cs
add
arpl
into
mov
cmpsl
xor
sbb
ds
inc
or
stc
shrl
fdivr
push
and
loop
and
cmc
out
popa
nop
xor
or
sub
pop
add
adc
mov
xchg
sub
add
inc
loop
stos
fidivs
mov
mov
mov
dec
push
adc
xor
pop
push
or
lret
fstps
insl
inc
loopne
imul
cmovb
out
popf
dec
pop
movsl
lret
push
dec
jecxz
cwtl
cmpsb
aas
aad
sub
lds
sub
imull
mov
xchg
aad
mov
cwtl
pop
and
cmp
callw
cld
add
sub
jmp
call
shlb
testb
mov
sbb
insl
mov
lock
add
lods
adc
push
add
mov
dec
lds
cld
shl
mov
add
cmp
dec
aaa
fsubrl
notl
cmpsb
movsl
dec
cmp
push
ja
cmpsl
ja
addr16
sti
and
fisubl
inc
add
lret
sti
mull
addb
mov
adc
xor
pop
scas
loop
fiaddl
data16
movsl
dec
arpl
das
mov
push
push
bnd
inc
push
stos
loope
les
mov
cmpsb
pop
imul
andl
je
js
push
popf
sbb
adc
mov
sub
testb
jecxz
test
rclb
cwtl
hlt
sub
xchg
inc
loope
add
adc
fstpt
jp
dec
fisubl
sbb
test
dec
bound
js
clc
dec
ljmp
iret
cwtl
fbstp
fnstcw
dec
cltd
xlat
sub
mov
outsb
fwait
cmc
loopne
repz
pop
bnd
lret
dec
aaa
jmp
mov
idivl
pop
push
mov
js
jb
out
pop
inc
aas
prefetch
sahf
js
and
mov
idivl
jecxz
cmp
sbb
xor
mov
xchg
add
cmp
cld
addb
pusha
push
lret
aas
dec
fldl
mov
push
sub
fwait
ret
mov
xchg
lock
test
add
cwtl
call
ljmp
dec
mov
mov
xor
add
ljmp
push
xchg
or
jg
std
scas
or
out
prefetchw
or
movsb
in
pop
mov
lcall
mov
ja
fisubrs
and
shrl
mov
jnp
inc
test
xor
lret
subb
sub
les
addr16
shll
mov
add
cmpb
inc
outsl
sub
xor
addl
and
aas
push
shll
mov
mov
push
cmp
clc
out
shrl
aas
testl
aas
inc
xchg
outsl
jae
imul
mov
lret
mull
sub
mov
in
in
mov
sub
sbb
stos
bound
paddd
jb
mov
ja
shlb
xchg
and
cmove
mov
add
and
in
mov
test
stos
loop
xchg
inc
sub
in
sbb
push
pop
insl
xchg
sahf
pop
shll
jmp
js
mov
sub
dec
scas
popa
gs
mov
mov
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
orl
sub
sbbl
push
push
push
andl
push
orl
push
orl
call
subl
mov
lea
push
subl
push
movl
call
cmp
je
xorl
xor
jmp
mov
xorl
push
lea
push
push
push
subl
push
adcl
call
imul
cmp
movl
jne
orl
lea
andl
push
addl
push
andl
call
cmp
jne
addl
movl
or
mov
movl
cmpl
je
cmpl
jge
jmp
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
addl
movl
mov
or
lea
mov
xor
lea
sbb
mov
or
mov
movl
cmpl
je
cmpl
jl
jmp
push
call
xor
add
dec
mov
jmp
mov
mov
mov
mov
mov
sbb
xor
adcl
mov
addl
add
notl
mov
movl
mov
cmp
movl
jne
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jl
jmp
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
mov
adcl
xor
subl
add
addl
mov
mov
xor
notl
add
sbbl
mov
mov
sbbl
xor
subl
add
mov
andl
xor
xor
inc
mov
cmpl
jb
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xorl
mov
addl
mov
mov
mov
mov
addl
mov
orl
mov
mov
decl
mov
andl
xor
add
inc
mov
cmpl
jge
jmp
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
movl
sbb
mov
xor
xorl
add
jmp
lea
subl
push
addl
push
addl
call
movl
cmp
jne
push
lea
addl
push
adcl
push
push
orl
push
call
imul
movl
cmp
movl
jne
sbbl
lea
push
push
sbbl
call
movl
cmp
jne
mov
xor
mov
sbbl
xor
sbbl
lea
incl
push
add
mov
xor
lea
xorl
push
movl
mov
xorl
pushl
adcl
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
adc
xor
and
lea
mov
neg
mov
orl
xor
orl
xor
xorl
add
mov
addl
xor
movl
lea
movl
mov
cmp
jbe
xor
or
or
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
push
call
cmpl
jb
mov
mov
mov
movl
cmpl
je
cmpl
ja
jmp
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
movzbl
adc
mov
subl
sub
andl
xor
mov
lea
mov
xorl
lea
subl
mov
lea
subl
push
addl
push
call
movl
cmp
movl
jne
push
lea
xorl
push
push
adcl
push
push
call
imul
cmp
jne
lea
push
push
subl
call
movl
cmp
movl
jne
lea
addl
push
negl
push
addl
call
movl
cmp
movl
jne
xorl
push
orl
lea
andl
push
subl
push
adcl
push
xorl
push
orl
call
imul
movl
cmp
jne
orl
lea
push
subl
push
notl
call
movl
cmp
movl
jne
lea
push
subl
push
subl
call
movl
cmp
jne
addl
push
lea
push
sbbl
push
push
push
call
subl
imul
movl
cmp
jne
addl
lea
orl
push
push
andl
call
movl
cmp
movl
jne
andl
lea
adcl
push
orl
push
sbbl
call
movl
cmp
movl
jne
xorl
push
lea
orl
push
push
push
subl
push
call
imul
movl
cmp
movl
jne
addl
lea
orl
push
andl
push
andl
call
cmp
jne
orl
lea
subl
push
xorl
push
addl
call
movl
cmp
movl
jne
adcl
push
xorl
lea
xorl
push
adcl
push
push
sbbl
push
adcl
call
imul
cmp
jne
movl
lea
addl
push
notl
push
call
movl
cmp
jne
lea
xorl
push
push
addl
call
movl
cmp
movl
jne
push
lea
adcl
push
xorl
push
adcl
push
xorl
push
call
adcl
imul
movl
cmp
jne
lea
xorl
push
push
orl
call
movl
cmp
jne
addl
lea
movl
push
push
adcl
call
movl
cmp
jne
andl
push
lea
push
push
subl
push
sbbl
push
call
xorl
imul
movl
cmp
movl
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
lea
movl
push
movl
movl
push
movl
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
sub
mov
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
or
mov
push
movl
cmpl
je
cmpl
ja
jmp
push
pushl
call
mov
dec
mov
jmp
mov
xor
mov
push
mov
add
cmp
movl
je
movzwl
adc
mov
mov
incl
xor
andl
xor
add
addl
add
movl
adc
orl
xor
adcl
mov
movl
cmpl
je
cmpl
jge
jmp
push
call
cmpl
jne
xor
add
dec
mov
xor
xor
dec
mov
jmp
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
jmp
sbb
cmp
xchg
xchg
dec
push
loop
scas
test
mov
addl
addl
inc
roll
xchg
andb
or
fstp
inc
mov
in
shl
lret
add
pop
pop
inc
cmp
mov
loope
pop
mov
lds
shr
ss
xor
fdivrl
mov
test
inc
mov
pop
gs
dec
sub
pop
push
jo
and
add
jmp
aam
push
fadds
popa
push
jmp
fcmove
pushf
mov
cld
dec
mov
sbb
add
or
adc
pop
popf
mov
mov
jl
rcrb
mov
mov
je
mov
mov
icebp
into
inc
push
jo
or
mov
data16
lea
mov
ret
pop
clc
jmp
mov
pop
sub
cli
bnd
mov
xor
and
pushf
arpl
jmp
enter
inc
mov
mov
cs
or
xor
clc
data16
pop
ret
cli
lret
rolb
in
ret
es
fdivs
mov
inc
adc
outsl
xchg
and
cmp
or
int3
xchg
insl
push
mov
mov
scas
xchg
shlb
add
sbb
mov
in
xor
sbb
push
cltd
adc
sub
mov
and
jo
push
xchg
sbb
xchg
and
rclb
jae
aas
pushf
mov
ja
push
shrb
loopne
in
arpl
sti
sub
ja
outsl
adc
aaa
adc
mov
aam
mov
jl
out
mov
sbb
lods
push
clc
int
in
inc
mov
rcrb
mov
xor
push
cmp
cmp
fnstenv
jmp
ljmp
push
es
xchg
test
pop
sub
nop
push
data16
jg
test
fisttps
pop
push
aaa
jno
adc
outsl
pop
push
sub
fldcw
sub
mov
movl
or
xor
arpl
mov
or
roll
add
mov
or
cli
enter
lret
aad
hlt
into
pop
lret
adc
dec
int
mov
shrl
stos
loope
lret
dec
pop
addr16
enter
jmp
pop
fidivs
mov
outsl
xor
sbb
jnp
lock
in
sti
sbb
inc
push
popa
mov
pop
clc
push
and
dec
in
jne
xor
shll
cmp
shl
shrb
mov
xor
nop
jmp
arpl
fcom
dec
das
adc
scas
loop
or
data16
xchg
push
mov
and
ja
mov
adc
dec
ljmp
jmp
aam
fwait
aad
ss
cmpsl
daa
in
mov
aas
jnp
push
cmp
mov
xor
mov
mov
push
adc
fdivrl
mov
loopne
in
loop
aaa
mov
dec
push
into
call
cmpsb
adc
out
xor
cmpsb
outsl
scas
fsubl
lock
aad
jl
imul
push
test
dec
adc
std
add
mov
clc
bound
stos
fcoms
sahf
scas
test
loop
sbb
inc
xchg
call
cmp
in
insb
mov
xor
adc
fnstsw
push
pop
or
cmpl
jl
sub
lods
pop
jle
insb
or
stos
stos
das
out
sarl
or
xchg
pop
inc
aam
inc
dec
xchg
scas
rclb
pusha
ret
movsl
add
test
repz
pop
add
pop
outsb
aaa
sti
pop
adc
push
dec
and
into
dec
mov
mov
xor
notl
jle
mov
movsl
jl
mov
andb
hlt
ret
stc
or
insb
lods
fmul
lds
jp
xchg
gs
loopne
jne
inc
xor
mov
imul
loop
xor
xor
call
sub
bound
xor
lcall
pop
add
ret
add
test
insl
pop
stos
int3
push
jmp
jnp
mov
xchg
and
mov
mov
pop
pushf
cwtl
cmp
decb
fdivrl
rcl
and
lahf
push
jp
pop
and
bound
mov
jo
test
sbb
inc
and
dec
mov
adc
fcoml
sub
leave
int3
adc
roll
bound
cmp
js
outsb
jb
xchg
cmp
mov
pop
test
xor
mov
jb
adc
movb
or
insb
jno
nop
aam
jae
jo,pt
jno
jmp
mov
filds
xchg
adc
cld
jmp
xchg
xorl
pop
xlat
pop
xor
pop
test
cmp
stc
push
jl
lcall
fnstenv
aad
push
inc
andl
lea
mov
nop
adc
hlt
mov
pop
jo
stos
or
dec
push
mov
or
mov
sbb
jno
addr16
mov
call
jno
cmp
repnz
push
cmp
imul
push
inc
cld
pop
jno
jb
or
mov
xor
arpl
adc
outsl
fs
xchg
xor
sbb
sbb
aam
xor
out
fnstenv
in
bnd
nop
mov
cmp
iret
inc
fs
sbb
jecxz
out
notb
dec
in
call
push
and
pushf
xchg
sbb
icebp
mov
xchg
jb
bound
lcall
cmpsl
jle
mov
sub
hlt
iret
push
out
enter
mov
cli
fildl
jno
pop
jl
js
stos
in
lret
pop
push
hlt
and
pushf
mov
movsl
pop
in
cmpsl
xor
icebp
imul
gs
push
imul
xchg
cmp
cmp
lss
add
xor
loopne
pop
mov
icebp
mov
test
cmp
ljmp
xchg
inc
cli
mov
xlat
pop
punpckhdq
subb
adc
cmpl
fs
gs
fdivr
inc
or
into
sub
ds
sbb
inc
pop
sbb
ficompl
leave
sbb
push
pusha
or
sbb
or
inc
repnz
stos
sbb
sbb
mov
lds
sbb
cmpsb
lret
mov
call
inc
pop
mov
add
int
es
nop
daa
mov
jmp
repz
xchg
push
int3
xacquire
dec
adc
adc
ljmp
mov
push
mov
gs
jg
in
outsb
loope
flds
dec
dec
mov
rcll
jmp
pop
xchg
sub
data16
shlb
out
test
or
cmp
lret
sbb
in
sub
xor
push
hlt
mov
push
add
push
add
inc
jae
jl
lret
mov
add
ss
orb
leave
jle
add
imul
mov
stos
outsl
mov
sbb
ss
push
jae
xor
imul
aad
sbb
push
dec
icebp
mov
jb
mov
outsb
fstps
mov
das
shrb
cmc
mov
xchg
stos
int3
mov
dec
push
jmp
jle
dec
lods
pop
mov
inc
test
icebp
jb
sub
add
testl
dec
mov
pop
or
fcomps
lea
in
repz
es
inc
xchg
xchg
push
in
int
cli
jbe
mov
push
cmc
movsb
mov
testl
dec
and
mov
out
loopne
jb
ss
cmp
pop
push
sbb
jo
add
mov
enter
mov
lcall
pushf
xor
inc
nop
pop
xor
gs
das
pop
aam
out
mulb
add
and
xor
adc
cmc
sti
icebp
xor
ja
sub
xchg
push
cmc
test
sub
and
xlat
in
dec
inc
jns
mov
mov
das
mov
fwait
data16
cmp
sub
push
outsl
loop
int3
test
int3
push
in
imul
cmp
je
pop
fs
jmp
out
add
mov
mov
fidivs
mov
scas
cmpsl
add
dec
roll
push
mov
scas
pushf
push
mov
xor
jns,pn
sbb
adc
jmp
adcb
loop
xor
int3
popf
aaa
fbld
scas
add
imul
hlt
lret
jbe
adc
cmp
mov
cltd
xchg
xorl
hlt
sbb
sar
inc
sub
adc
bound
fsubs
push
mov
les
into
cmp
cmp
stos
xchg
les
push
fwait
add
mov
sub
cwtl
jne
xchg
gs
jg
popa
add
ss
pop
test
or
add
xlat
imul
mov
pop
lret
in
dec
add
pop
push
xorb
or
push
jle
sti
js
sarl
mov
push
mov
idiv
lea
pushl
sbb
cmp
jle
imul
fmulp
sbb
xchg
les
out
jne
sbb
testb
test
insb
lods
scas
arpl
and
push
pop
test
mov
test
sub
gs
sub
jl
mov
jne
jle
pop
enter
jl
xlat
push
xlat
dec
sar
inc
mov
leavew
outsb
sti
fsubrl
fs
aam
sub
ja
fadd
shll
inc
sub
xor
or
sbb
rcll
repnz
std
inc
mov
sbb
scas
xchg
xchg
leave
sbb
push
pop
push
shlb
and
test
clc
das
mov
adc
mov
add
in
mull
stos
fldl
ljmp
enter
push
in
adc
sbb
es
mov
mov
test
hlt
cmp
loope
and
leave
daa
inc
in
jno
mov
add
cld
cmpl
xchg
in
sub
int3
mov
mov
in
adc
jo
cmp
into
cmp
mov
xchg
xor
hlt
call
ds
ljmp
mov
stc
xor
pop
insb
adc
push
jl
lret
inc
inc
add
fldl
xchg
ficoml
enter
adc
push
mov
enter
int
enter
and
jae
cmp
and
add
mov
push
mov
pusha
out
mov
js
sahf
rorl
and
jns
sbb
adc
aam
jns
loopne
jno
andl
ljmp
inc
iret
lods
lret
cmp
insb
sub
push
jns
jmp
mov
mov
mov
push
stc
dec
dec
bnd
ret
js
pop
cmp
push
xchg
cmp
dec
jle
jmp
dec
inc
hlt
int
repnz
rolb
xchg
inc
adc
sbb
in
dec
cltd
add
mov
push
adc
sub
call
mov
pop
xor
xchg
insl
xor
xor
jecxz
mov
iret
cmpsl
sub
cmp
or
cwtl
xor
dec
push
and
sub
outsb
dec
jno
jge
mov
pushf
mov
dec
out
cmp
pop
jb
in
movsb
or
adc
iret
cmp
push
inc
fiadds
or
mov
xchg
xlat
or
fsubs
mov
push
inc
roll
jmp
push
sar
dec
sbb
aas
paddsw
adc
push
pop
push
ljmp
jnp
jne
xor
pop
fsts
jmp
mov
mov
fiadds
out
std
hlt
test
xor
xor
mov
mov
sub
push
icebp
pop
pop
xchg
xchg
push
fnstenv
mov
outsl
mov
lret
rorb
ljmp
loop
nop
lcall
inc
test
dec
dec
nop
daa
dec
cmp
pop
xchg
push
cmp
lret
call
xor
in
sbb
cmpsl
sbbl
jnp
inc
inc
cmp
testb
in
xchg
mov
or
das
imul
or
add
jl
sbbl
lods
jns
dec
push
movsl
fldenv
hlt
xchg
js
pop
aam
imul
mov
fiaddl
and
dec
add
fs
pop
cmp
ret
fcmovnb
inc
and
ja
sbbl
jp
jo
cmp
cmp
je
add
dec
mov
pop
cmp
xchg
cmp
sti
cmp
daa
xor
sub
cmpsl
dec
mov
or
or
aad
mov
ret
sub
xchg
xchg
pop
fimull
jmp
stc
cmp
xchg
loope
daa
jecxz
mulb
adc
xchg
mov
mov
loop
loope
arpl
xor
cmp
leave
nop
cld
das
push
insl
rorl
loop
inc
jb
incl
inc
sbb
in
mov
pslld
mov
mov
sub
push
inc
mov
ja
jbe
clc
mov
xlat
fcmove
sub
xchg
gs
sbb
pop
mov
push
push
sbb
ja
fmuls
lahf
aas
jge
andl
mov
popf
mov
pop
or
outsl
sbb
pop
ret
cli
bound
mov
test
add
imul
xor
push
adc
neg
mov
pushf
cmp
out
mov
stos
testl
jl
mov
mov
or
bnd
xor
push
addr16
adc
and
imul
add
pop
pushf
jb
and
int3
adc
xlat
je
lcall
hlt
adc
das
cmpsl
xchg
jns
cmpsb
fists
lcall
stos
sbb
jb
mov
sub
push
mov
pushf
dec
fdivr
jmp
popf
xor
sub
outsl
hlt
jne
pop
pop
jbe
inc
lock
and
addr16
mov
andb
or
mov
mov
pushf
mov
add
je
shll
xchg
sub
push
std
dec
inc
pop
je
push
mov
inc
out
xchg
out
pop
nop
jno
inc
fisttpll
stc
and
mov
bound
shrl
mov
or
aaa
jl
xlat
push
push
sbb
loopne
cmp
mov
xchg
push
mov
enter
pop
pop
xchg
ljmp
ret
ret
jbe
lock
pop
inc
mov
push
cmc
lret
xchg
shll
adc
jbe
cmp
pop
insl
mov
or
xchg
fildl
lds
nop
xchg
adc
aas
xor
and
lcall
mov
cmp
popa
insl
jg
jae
icebp
out
inc
in
mov
inc
es
inc
adc
add
faddl
push
loop
pop
in
jmp
into
pop
emms
inc
hlt
jnp
adc
fisubrl
mov
cmpb
mov
jns
mov
inc
or
lock
and
cli
sbb
decb
and
inc
xchg
scas
repz
stos
popf
mov
push
mov
pusha
xlat
push
aas
xor
enter
decl
pop
xor
cmp
cmp
mov
ds
inc
ss
addl
loope
scas
lock
mov
or
pop
mov
xor
lods
adc
into
and
or
fistps
push
fisttpll
call
pop
and
arpl
push
cmc
jmp
movsb
jo
in
cmp
sbb
jnp
pop
push
icebp
cs
push
adc
mov
mov
in
inc
jae
push
das
mov
or
sbb
sbb
push
mov
lock
repz
and
loop
pop
inc
addr16
mov
adc
jg
out
add
ja
lods
lcall
mov
mov
mov
loopne
or
out
lock
ja
movsl
mov
rdmsr
push
test
js
mov
sarl
ja
lods
jne
cmpsb
mov
dec
pop
sbb
xlat
popl
lahf
inc
insb
inc
clc
adc
out
mov
mov
jp
pushf
mov
cmp
mov
fbld
int
sbb
xlat
enter
sbb
push
arpl
add
in
and
repz
arpl
pop
loop
dec
ljmp
push
mov
pusha
imulb
xchg
cmpsb
mov
mov
sub
out
mov
add
xchg
dec
lods
mov
mov
mov
mov
xchg
test
xchg
mov
inc
push
sbb
pop
mov
adc
data16
xchg
sti
lahf
sbb
or
shl
sbb
in
sub
xchg
jns
lahf
fs
cmpsb
fdivrl
mov
roll
and
push
sub
je
sub
xor
or
pop
mov
xchg
test
nop
icebp
popf
sub
mov
pusha
arpl
mov
dec
bound
fcomp
fdivs
sbb
or
xor
negb
jb
sbb
inc
call
add
mov
mov
jnp
push
lcall
int
mov
lods
mov
in
inc
pop
aas
pop
push
mov
int
shll
or
lret
rolb
xor
pushw
sub
idivb
out
mov
int3
pop
lods
pop
dec
inc
adc
aas
add
mov
and
lods
sub
je
xorl
pusha
cwtl
mov
imul
push
hlt
lock
stos
mov
cmpsb
pop
and
inc
iret
adc
lcall
insb
fnclex
pop
xchg
and
icebp
fildl
jp
sub
pop
pop
add
cmc
dec
aad
les
mov
loop
jl
ja
loopne
leave
mov
test
shlb
jg
fdivrl
out
lret
arpl
mov
repz
stos
jbe
and
idivl
mov
adc
mov
xchg
jecxz
push
mov
inc
jg
test
jmp
sbb
stos
xchg
pushf
scas
cmp
loope
test
cltd
out
push
mov
in
mov
xchg
xor
push
dec
loope
mov
test
mov
and
lahf
push
sbb
pusha
xchg
loopne
jp
lock
xor
xchg
push
inc
js
jno
dec
imul
add
lds
mov
inc
dec
pop
movsb
lea
add
add
xlat
clc
mov
add
movsl
arpl
fcmovb
pop
dec
ds
fldcw
sahf
lods
adc
cmp
push
xchg
into
xchg
mov
fwait
pusha
scas
pop
imul
jg
inc
mov
sub
lret
dec
mov
test
mov
or
push
hlt
shrl
and
and
bound
inc
jmp
add
push
push
and
ficoms
and
jmp
dec
mov
ret
lcall
lahf
out
push
sub
lods
sarb
jge
push
dec
cmp
jns
test
or
cli
xor
jb
and
pop
push
add
xor
es
rcr
mov
iret
pop
mov
ss
movsb
jne
and
das
and
mov
cmp
mov
sti
test
out
cmp
sub
xor
fs
xor
aad
or
das
pusha
cmpl
push
inc
jnp
jmp
imul
adc
push
stos
push
xchg
test
inc
jnp
outsl
arpl
jmp
out
movsbl
cmp
jno
sbb
les
xor
nop
std
push
icebp
loop
push
xchg
inc
inc
sbb
std
pop
or
xor
jae
xor
sbb
cld
fdiv
xchg
add
or
bound
or
jbe
inc
aas
or
std
mov
dec
cmc
mov
push
leave
and
dec
in
mov
mov
iret
pop
inc
dec
bound
sti
loopne
adc
cmp
pop
push
rcl
je
or
popf
enter
ljmp
js
mov
jmp
xor
mov
dec
out
pusha
arpl
pusha
pop
pop
es
adc
out
jle
xlat
leave
imul
adc
bnd
clc
popf
fcmovnb
nop
cld
or
stc
cwtl
dec
stos
aaa
pop
sbb
filds
xor
dec
xchg
ret
xchg
lahf
int
xor
stc
mov
out
hlt
jne
shrl
ficompl
dec
loope
add
outsb
cwtl
bound
mov
cs
lds
clc
leave
icebp
cmp
decb
clc
mov
in
mov
sbb
stos
nop
mov
xchg
pop
sbb
mov
jp
xchg
ret
mov
mov
pop
and
mov
scas
fs
mov
pop
std
inc
out
mov
cmp
mov
sbb
fnstcw
addr16
gs
cmp
je
jmp
mov
nop
adcb
dec
out
rorl
das
adc
jne
xlat
mov
jb
out
int3
mov
in
and
mov
xor
lea
push
pop
sbb
push
leave
jae
xchg
call
sbb
cmp
data16
ret
cs
inc
xor
inc
cmp
pop
inc
arpl
dec
add
xor
add
mov
loope
sub
xchg
pushf
ja
sbb
lods
push
test
and
dec
inc
imul
cmp
cmp
fucomip
xchg
xchg
lods
outsl
mov
mov
shll
push
push
xchg
or
push
mov
push
lods
sti
std
xchg
rorb
xor
mov
or
shl
test
or
pop
and
push
push
inc
fucom
mov
mov
arpl
sub
xlat
cmc
rol
sar
pop
cmpsl
in
divl
in
outsl
cld
adc
xchg
pop
sub
and
repz
add
add
int
xchg
pop
sbb
xor
call
push
aas
sub
push
dec
add
lods
mov
into
inc
data16
sub
mov
mov
mov
or
bound
dec
std
push
movsl
mov
pop
leave
mov
or
or
ret
pop
cmp
or
insb
lods
jmp
andl
add
cmp
das
movsl
in
sbb
inc
test
xchg
pop
adc
dec
and
cmp
pop
lahf
fbstp
cmpsl
popa
jb
stc
pusha
outsb
mov
std
push
xchg
nop
inc
pushw
or
cs
cwtl
adc
out
ljmp
dec
and
push
cmc
pop
push
pop
push
jnp
push
pop
movsb
mov
mov
loop
mov
les
add
xor
stos
mov
loop
xchg
outsb
mov
xchg
dec
xor
lds
ds
mov
mov
aaa
ret
cs
xchg
imul
cmp
lea
aad
or
dec
or
clc
outsl
fwait
insb
push
sbb
aaa
arpl
add
push
sbb
mov
fmulp
movsl
mov
repnz
ja
in
jo
mov
and
or
mov
movsl
movsl
ret
out
arpl
test
mov
jge
fnsave
xorl
pop
push
dec
je
mov
cmp
arpl
dec
cmp
in
inc
fxch
out
fldenv
cwtl
mov
fildll
or
mov
xchg
and
sbbb
add
fmuls
pop
pop
std
ja
imul
pop
push
repz
into
into
lret
mov
inc
pusha
lds
sub
inc
adc
imul
adc
aas
adc
jne
icebp
sub
sbb
nop
movsb
test
aam
aas
out
sbb
and
jmp
movsb
lock
subb
mov
pusha
orl
lcall
stos
mov
push
mov
bnd
dec
mov
xchg
hlt
xchg
xchg
notb
shlb
fsubrl
add
xchg
and
daa
and
out
xlat
inc
xor
sub
hlt
adc
xchg
psllw
mov
fincstp
in
push
mov
adc
sub
dec
int3
push
cmp
test
fisubs
ror
aam
push
or
leave
inc
decl
sbb
ljmp
cmp
pop
loopne
push
jmp
cwtl
sbb
jns
mov
cmp
repz
shl
xor
out
xchg
jecxz
stc
je
pushf
push
mov
mov
dec
frstor
or
lcall
out
cmp
gs
je
cmp
imul
add
cmpl
cmp
neg
and
jnp
arpl
pop
adc
mov
in
dec
inc
jmp
inc
jmp
inc
mov
mov
loop
mov
rorb
rclb
lods
out
clc
inc
rorb
jp
mov
adc
das
mov
loopne
mov
inc
fwait
cmp
mov
mov
lods
xor
mov
mov
push
mov
cwtl
xlat
inc
jmp
pop
xchg
jmp
fldl
call
clc
fnstsw
inc
pushf
mov
pop
push
hlt
popf
or
fstp
add
testb
mov
fs
mov
aam
enter
xor
cmp
mov
mov
addl
mov
fstp
fbstp
je
lock
xor
inc
mov
aam
mov
rcrb
push
cmp
test
lods
in
rcll
sbbl
mov
mov
call
pop
push
stc
push
dec
cmpsl
fiaddl
in
adc
cmpb
dec
mov
mov
push
xor
push
xchg
mov
cs
add
add
ss
lahf
xlat
aam
mov
xchg
stc
sub
jecxz
ret
lahf
inc
sbb
push
in
mov
add
dec
jle
dec
push
inc
pop
xlat
in
mov
xor
jl
xor
lods
mov
xor
sbb
loop
inc
cs
sub
pop
pushf
lret
sub
xor
aam
scas
sahf
xchg
mov
cmpsl
sbb
andl
insb
int3
sbb
and
xor
mov
jmp
inc
mov
aad
pusha
cmc
push
lret
repz
cltd
shr
je
sahf
scas
push
and
cmp
add
lcall
push
jne
push
cld
mov
push
mov
test
adc
rorb
mov
jbe
cmpsb
lret
iret
xor
out
adc
mov
adcl
mov
and
rcrl
push
ljmp
mov
and
xchg
insl
mov
sar
rclb
lods
jnp
or
cmp
fistpl
fdivs
mov
imul
jle
pop
sub
pop
push
mov
fldcw
jmp
test
lret
mov
cmp
daa
iret
insb
mov
xlat
pusha
sbb
xor
inc
push
cmpsl
je
repz
fadds
dec
enter
push
bound
sbb
test
je
lds
jne
imul
sbb
mov
push
cmp
jle
xchg
jmp
inc
adc
mov
jne
test
jb
test
jo
pop
cmp
xchg
cmpsb
xor
sub
fsubrl
dec
pusha
addr16
or
xor
xorb
gs
adcl
mov
adc
cwtl
xor
or
jmp
insl
xor
sbb
add
xor
mov
sbb
add
fs
jns
add
add
lds
or
add
dec
imul
int
mov
add
xor
sti
xchg
cs
and
push
mov
mov
je
pop
mov
mov
sub
ss
lods
ja,pn
mov
inc
fsubl
clc
sbb
mov
dec
lods
scas
rolb
jno
push
popf
aam
pop
in
mov
push
sub
fidivrs
es
add
mull
xor
xchg
sarl
mov
je
adc
xor
mov
movsl
and
pop
mov
mov
adc
test
fldl
sub
js
ja
rolb
dec
int3
clc
fisttpl
pop
rcrl
and
imul
xor
push
xchg
das
incl
out
arpl
pop
ja
xchg
inc
inc
adc
stc
xor
adc
push
sbb
fldt
jne
xchg
mov
mov
ja
jp
push
arpl
jecxz
push
rclb
adc
cld
aam
dec
push
int3
jns
loop
dec
push
std
stos
push
or
outsb
or
add
std
or
mov
ljmp
mov
inc
jae
inc
inc
testl
js
frstor
or
dec
outsl
sahf
sbb
sahf
and
out
sub
dec
mov
in
add
cltd
loope
or
or
cmc
inc
mov
mov
scas
mov
pushl
and
mov
test
adc
adc
xor
int
or
lock
cmpl
push
pop
push
cmc
mov
icebp
repnz
pop
inc
fstp
sbb
repnz
xor
xchg
pop
aad
loop
jne
mov
xor
dec
in
cmp
pop
scas
loop
mov
inc
sbb
adcl
cld
dec
ss
repnz
cmpsb
xor
sahf
add
sbbl
inc
jmp
jmp
aad
and
data16
out
clc
mov
push
inc
xchg
enter
mov
pop
shlb
lret
mov
lock
lods
sub
push
xchg
xchg
psllw
out
pop
nop
fildl
icebp
in
pop
decl
push
outsb
push
test
jo
jl
imul
les
negl
or
vcomiss
daa
sbb
in
std
sub
imul
call
xchg
cld
dec
int3
cmp
movsb
jg
out
sar
sarb
or
cmp
lret
jo
mov
shlb
andl
in
fcmovnbe
dec
cmpb
mov
push
orb
es
aaa
test
lods
jl
fnstsw
fisttps
aam
cmp
lret
pop
xchg
pop
int3
and
mov
push
jo
cmp
add
aad
add
mov
cmc
nop
dec
fidivl
lret
lods
stc
push
inc
movsl
ljmp
in
jne
pop
insb
adc
aad
mov
scas
xor
sti
stos
push
xchg
dec
dec
cmp
xchg
and
xor
mov
lods
xchg
mov
stc
inc
cmp
lret
imul
and
insb
cmp
aas
stos
shlb
ja
leave
mov
sbb
fyl2x
cmpsb
or
repnz
test
inc
jmp
testl
push
pop
loopne
pushf
push
push
sbb
loopne
and
push
dec
lea
add
popa
mov
push
xchg
mov
rcll
pop
cmp
loopne
adc
mov
jno
test
mov
popf
bound
fsubs
lds
sahf
mov
stc
dec
mov
dec
xchg
scas
cmpsb
jb
cmp
jns
outsb
nop
sub
out
mov
pop
into
loope
nop
sub
cmpsl
push
add
lea
mov
push
sahf
xor
sbb
in
xor
and
cmp
push
sbb
cmc
das
addr16
add
sbb
jle
xchg
scas
into
cmp
jnp
sbb
repz
cmc
mov
jno
scas
push
mov
mov
push
cli
sub
icebp
mov
lds
lds
sbb
fdiv
sbb
cmp
roll
scas
ds
or
mov
clc
sarl
push
out
in
jo
xorb
in
add
or
shlb
call
jnp
std
movsb
icebp
or
ds
mov
subl
jne
sub
fidivrl
mov
sub
or
jmp
mov
xchg
xchg
push
mov
sub
out
add
loopne
inc
jns
mov
mov
pop
push
adc
xchg
lahf
in
and
movl
call
dec
jp
out
jp
scas
addr16
insb
or
pushf
clc
pop
pop
pop
leave
ret
push
mov
push
movl
movl
cmpl
je
cmpl
jb
jmp
push
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
or
movsbl
or
mov
addl
sub
movl
cmpl
je
cmpl
jl
jmp
push
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
xor
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jl
jmp
pushl
call
cmpl
jb
push
mov
mov
mov
sub
sub
mov
andl
movl
sub
push
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
pushl
call
jmp
mov
andl
mov
addl
mov
adc
mov
mov
and
xor
addl
xor
mov
mov
adc
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
push
test
add
add
add
add
add
add
add
push
cmp
add
add
add
inc
push
pop
or
test
rorb
push
sub
jp
add
add
inc
cmp
outsb
outsl
ja
and
pop
inc
imul
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
add
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
inc
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
inc
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
jl
lods
outsl
scas
hlt
add
testl
jbe
xchg
mov
cmpsl
loopne
pop
push
pop
notl
pushf
or
pushf
or
mov
lcall
xchg
pushf
sub
popa
mov
stos
mov
mov
jbe
xchg
mov
pop
pop
cmpsl
jae
pop
clc
push
stc
mov
xchg
cmpsl
test
lret
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
add
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
mov
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
