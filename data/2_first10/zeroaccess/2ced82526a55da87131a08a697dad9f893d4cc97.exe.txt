push
mov
sub
mov
movzbl
mov
mov
movl
movl
cmp
movl
jne
or
mov
adc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
mov
xor
sub
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
pushl
push
push
push
push
pushl
pushl
call
xor
or
dec
mov
jmp
add
push
xor
or
adc
mov
mov
add
movl
cmpl
je
cmpl
jne
pushl
push
push
call
xor
or
dec
mov
jmp
movzwl
not
and
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
push
call
mov
dec
mov
jmp
mov
mov
mov
push
mov
movzwl
mov
mov
mov
movl
movl
mov
jmp
sbbb
cltd
js
mov
out
or
pushl
jo
jo
jo
rcl
aad
ror
rol
pop
push
add
leave
add
xor
ret
adc
mov
add
mov
sbb
lods
sarb
or
sahf
jp
inc
lods
push
sub
mov
stos
js
roll
jmp
mov
dec
fcomps
pop
test
sub
mov
pusha
nop
mov
and
jmp
out
repnz
xchg
xor
jbe
xlat
and
add
adc
xor
or
fldl
xor
pop
push
or
pop
fstps
jno
mov
ja
sbb
xor
int
stc
add
movsl
das
fisttps
pop
push
les
ss
cmp
sbb
scas
dec
pushf
pop
cmc
ret
cltd
and
das
shr
es
mov
jmp
rcrb
push
cmp
inc
arpl
stc
pop
push
push
insl
sub
mov
test
inc
adc
ror
pop
arpl
es
or
insl
insb
call
dec
pop
jge
xor
and
ret
jns
cmpsb
test
in
jb
out
pop
cmp
sbb
xchg
mov
fnsave
or
push
jmp
addr16
dec
test
add
es
mov
outsb
push
cwtl
out
test
sbb
gs
mov
and
push
pop
loopne
in
cmp
xor
adc
inc
imul
outsb
mov
ja
out
roll
incl
sbb
push
xor
pop
lock
fidivrs
push
out
dec
enter
push
sub
pushl
shrb
test
in
fldcw
inc
xchg
push
loop
jp
or
push
in
pop
cmpsb
mov
mov
jecxz
lret
sub
fistps
shrb
mov
shll
inc
cld
jmp
clc
icebp
mov
icebp
ficompl
mov
jo
jle
jo
aam
cmp
sbb
bound
push
lret
adc
jmp
mov
push
fldenv
movsl
sbb
cmp
pop
mov
lcall
out
push
inc
daa
in
sarl
les
cmpb
outsl
jl
divb
pop
jmp
fists
pop
xchg
jge
add
jmp
jb
aam
jbe
adc
les
push
stos
mov
aam
out
dec
mov
std
mov
sbb
notb
inc
shrb
test
pop
cmp
xchg
and
rcrl
icebp
popf
mov
xchg
mov
jg
sbb
dec
popf
aad
imul
gs
add
mov
xchg
adc
and
cmpsl
pusha
jl
inc
shlb
sbb
xor
pop
pslld
cmp
lea
in
pop
and
outsb
sub
ret
sub
inc
andb
int3
and
adc
push
dec
outsb
or
sahf
out
in
fwait
push
xchg
pop
adc
clc
fists
aaa
test
data16
js
jno
lret
sahf
loopne
mov
push
cs
repz
fbld
mov
or
inc
cwtl
sarb
dec
pop
push
fmul
filds
mov
jp
fisttpll
or
mov
enter
cmp
dec
lods
test
imul
xchg
aas
push
std
adc
add
mov
out
push
in
or
int
inc
and
add
cmp
mov
mov
loop
cli
jmp
fsubrp
or
inc
cmp
outsb
shlb
clc
push
decl
jae
stos
sub
push
mov
lea
movsl
xchg
adc
les
sbb
fisttps
inc
rorb
fmuls
call
add
lods
dec
lods
imul
adc
inc
adc
jo
jo
jo
iret
loope
fucom
pusha
xchg
movsl
ret
ljmp
xlat
andl
scas
popa
dec
dec
xor
jo
mov
int3
in
test
push
int
pop
dec
sub
jns
mov
sahf
and
cs
aad
aaa
cmp
xchg
push
int
push
ficompl
addr16
and
mov
aaa
mul
arpl
xor
in
push
jae
shl
iret
mov
fistl
push
xorl
decb
aam
mov
cmpsb
xor
cmp
iret
out
lea
xchg
mov
cmpsb
fcompl
xchg
test
adc
lahf
stos
test
insb
out
inc
jp
lahf
inc
mov
sbb
inc
cmpb
mov
cld
out
pushf
clc
inc
or
mov
adc
mov
inc
mov
cmovno
fidivrl
loope
mov
addl
sub
mov
icebp
shl
ja
cs
xchg
cld
mov
mov
test
ret
repz
aas
mov
pop
shll
popf
fwait
mov
push
outsb
xor
movsl
push
imul
push
mov
adc
lods
add
xchg
mov
out
popa
daa
add
fs
pushf
sti
push
decl
stos
pop
xor
and
cld
iret
stc
mov
lods
or
mov
test
mov
out
in
mov
lret
fsub
icebp
dec
pop
cld
dec
mov
mov
and
stc
and
or
dec
cli
mov
in
insl
or
lea
lods
es
pop
enter
mov
sub
cmc
cmpsb
jp
cmc
pop
loopne
jmp
inc
out
je
inc
out
xor
lea
lea
popf
and
daa
lea
fimuls
scas
add
push
xlat
mov
mov
movl
mov
mov
xor
xor
xor
add
add
div
mov
cmp
je
movl
lea
mov
jmp
int3
sub
push
mov
sbb
jo
jo
jo
jo
shlb
pop
inc
pusha
imul
sbb
fwait
adc
xlat
pop
pop
repnz
inc
jo
sbb
push
mov
rol
inc
les
adc
mov
in
xchg
filds
inc
fsubrs
mov
pop
add
test
fcoms
loope
mov
pusha
xchg
dec
mov
aas
push
loop
fstl
sub
or
jb
push
add
insb
push
cmp
loopne
sbb
nop
dec
xor
lock
ret
push
pop
mov
cltd
inc
out
and
add
cmc
pushf
xor
inc
xchg
adc
cmp
jae
into
mov
pushf
stc
jbe
arpl
in
dec
jecxz
cmpsl
ja
movsb
lds
mov
or
insb
cmp
insl
test
or
push
out
cli
scas
sbb
mov
mov
mov
pop
jns
aam
cmp
ss
sub
lret
in
rcrb
cmpsb
add
fnstcw
incb
pop
hlt
mov
dec
mov
clc
jne
cmc
push
xor
stos
sub
xchg
sbb
jl
mov
push
push
dec
fidivl
mov
xor
ret
ret
repnz
or
out
adc
xlat
dec
subb
loop
stos
or
jmp
pop
jo
jnp
call
pop
mov
bound
jns
pop
dec
xchg
inc
mov
rorb
sbb
xchg
outsl
fwait
shr
sbb
shrl
into
pop
pop
sbb
rclb
push
jb
pop
xorb
addl
addr16
insb
mov
hlt
rorl
mov
inc
inc
jns
test
xor
mov
add
jae
sbb
lahf
lds
pop
out
push
sub
mov
outsl
push
shl
mov
orb
lods
push
push
mov
stos
fisttpl
addr16
fmuls
imul
mov
mov
cmp
je
mov
orl
jmp
mov
jmp
popa
ja
add
xorl
adc
mov
jg
push
jo
jo
jo
jo
xchg
fucomi
inc
cmp
leave
movsb
stos
push
mov
push
test
dec
push
pop
pop
mov
nop
aas
mov
sbb
pop
adc
mov
pop
loope
in
xor
dec
gs
aaa
pop
push
enter
push
xchg
mov
fldt
or
mov
pop
jb
popa
mov
push
loop
adc
cmp
inc
fucomip
jl
stc
cli
lcall
add
jns
fcoml
sub
inc
mov
sbb
dec
add
out
pop
push
std
stos
notb
ret
jbe
or
jo
xchg
push
jle
aad
test
out
cmp
fstpl
outsb
je
dec
aad
pop
ret
jecxz
dec
out
cmpsl
flds
fdiv
mov
aaa
sbb
pop
pop
fucomip
dec
dec
test
or
xor
addl
outsb
pop
insb
shrb
ret
sub
push
movsl
out
rol
mov
xchg
and
jge
call
xchg
std
je
xor
or
rclb
ret
pop
shrb
gs
hlt
or
dec
inc
sbb
mov
aaa
mov
pushf
scas
inc
or
mov
aaa
add
lret
sub
pusha
sbb
hlt
aaa
stos
shr
xchg
mov
cmp
xchg
shl
cwtl
je
and
dec
in
pop
mov
sub
es
mov
or
inc
fwait
outsb
ja
mov
xchg
mov
aad
filds
aas
pop
in
fwait
aad
and
leave
fcomps
mov
cwtl
xor
or
scas
jb
cmp
mov
cmp
inc
sub
testl
cmpb
cwtl
sub
pop
dec
insl
dec
mov
xor
loopne
mov
and
xor
stos
call
xchg
pushf
test
jl
fs
aaa
add
fucom
xchg
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
xor
jmp
cld
test
jb
stos
inc
inc
cmp
mov
push
jo
jo
jo
add
lods
adc
and
mov
dec
nop
jl
pop
lret
mov
push
xor
mov
pop
push
pop
mov
inc
outsb
jl
xchg
les
sub
ja
lods
sahf
and
insb
mov
add
adcb
mov
imul
in
fildll
xchg
imul
cli
add
inc
add
pop
mov
xor
sbb
cs
xor
or
movsb
pop
fisttpll
loope
mov
das
ds
pop
fwait
sub
stos
cli
and
fwait
cld
scas
or
jb
les
mov
sbb
xchg
adc
test
jns
push
pusha
mov
imulb
fiadds
xchg
sti
neg
mov
or
push
jle
std
mov
jo
xor
in
gs
jo
sbb
imul
test
inc
sti
in
ret
push
jge
leave
addr16
mov
fwait
stos
push
push
or
fisttpl
adc
jp
mov
adc
push
arpl
push
mov
out
scas
mov
test
dec
movsb
je
or
xchg
push
adc
call
dec
and
stos
pop
std
int
ss
fcoml
inc
jae
pop
insb
cs
hlt
add
push
or
loope
mov
lret
in
xlat
jno
lea
add
pop
lret
lret
cmp
bound
adc
mov
jae
push
subl
mov
dec
cld
test
dec
and
pop
out
cli
shlb
xchg
lret
mov
call
adc
mov
fildl
jae
into
xchg
cmp
rolb
pop
sahf
cwtl
mov
push
jo
and
testb
scas
jp
xor
jb
cmpl
dec
in
rorb
add
cmp
jmp
ret
gs
cmpsl
insb
and
pop
lcall
jo
jl
mov
inc
add
pop
jle
inc
out
popf
sub
lods
test
push
add
inc
cmp
test
call
cmp
scas
lock
cmp
sahf
push
add
adc
xchg
sub
aam
mov
adc
and
push
and
leave
adc
mov
pushf
icebp
mov
cld
pop
sub
push
inc
stos
and
add
mov
loop
lret
enter
adc
cltd
or
cmp
push
push
push
or
enter
xlat
mov
call
cwtl
xor
jae
dec
lods
movsb
mov
insb
add
cmp
fistpl
mov
mov
add
and
cmpsb
adcl
decb
leave
pop
mov
push
mov
dec
adc
fcmovbe
xchg
je
or
jae
xchg
dec
mov
push
push
cmpb
xor
not
lcall
aaa
push
sub
and
or
loopne
mov
aad
and
xchg
xchg
push
mov
sbb
test
push
int3
ja
add
mov
sub
popf
stos
call
dec
pop
ja
ret
in
inc
std
out
pusha
jl
pop
or
sahf
loope
xlat
cli
pop
sub
int3
mov
mov
cs
and
mov
sub
or
ror
pop
mov
loop
push
leave
pop
fldcw
inc
mov
and
fstpt
imul
stc
int
rdtsc
add
negb
mov
stos
out
mov
ja
and
stc
mov
push
movsb
jno
pop
data16
rcrb
mov
stos
push
scas
xchg
add
xchg
jecxz
popf
ret
push
add
add
pushf
lock
inc
daa
mov
xlat
cmpsb
scas
lods
adc
and
fistps
test
inc
in
xor
add
mov
mov
jmp
jp
sbb
cltd
ja
jno
sbb
sub
cmp
jo
jo
jo
jo
jle
jne
cwtl
outsl
mov
lock
inc
lds
mov
adc
stos
cmp
pop
adc
pop
icebp
divb
repnz
push
mov
lds
movsl
sub
inc
jmp
adc
sub
popf
shr
andl
stos
stos
mov
fdivl
mov
cmp
test
xchg
xchg
mov
jb
or
fs
js
sub
mov
stos
mov
dec
cmp
xlat
insl
jb
adc
and
push
rcll
cs
ss
adc
icebp
push
test
jge
xor
clc
in
gs
pop
movsb
and
in
xchg
mov
inc
cmp
aad
dec
adc
cmpsl
lret
add
sbb
sub
pushf
jns
sahf
pop
push
lods
mov
add
lods
scas
jecxz
fs
or
mov
arpl
fists
int
mov
mov
shrb
imull
sti
mov
int3
scas
lahf
xor
sub
pop
fadd
shrl
stos
dec
sub
jmp
add
nop
test
mov
aaa
mov
es
push
imul
sahf
adc
cmpl
adc
dec
addb
mov
leave
mov
cmp
mov
pop
mov
mov
mul
orb
inc
mov
jmp
sub
sbb
enter
cmpsb
mov
pop
jg
ret
jp
push
mov
xlat
dec
dec
icebp
fwait
xchg
aad
push
add
cmpsl
or
cmp
scas
jne
scas
sbb
cmp
xor
lea
add
mov
stos
mov
fs
fcom
adcl
gs
jae
outsb
mov
pop
shl
jge
ja
rorl
lret
mov
mov
xor
mov
add
movzwl
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
jmp
and
jae
xor
iret
jo
jo
jo
jo
push
push
adc
add
cltd
mov
aam
push
xchg
shrl
and
add
jo
pop
xchg
inc
push
mov
jmp
enter
mov
pop
imul
ffreep
ret
das
pop
insb
pop
popa
sub
xor
sbb
popf
roll
lds
adc
movsl
xlat
xor
ret
movsb
jp
stos
mov
lea
enter
dec
push
jne
cmpsb
or
xlat
mov
mov
pop
or
inc
inc
call
and
rclb
mov
xchg
in
fwait
inc
cs
lahf
adc
push
lods
imul
cmpsl
dec
jb
stos
mov
scas
dec
nop
pop
mov
popa
test
inc
js
es
jnp
das
fcmovne
mov
rclb
jb
repz
inc
push
fistpl
push
add
and
inc
xchg
fildll
push
adc
pop
mov
push
in
or
jle
mulb
cmp
sub
jo
out
jmp
aam
fdivrs
into
push
add
fbld
inc
pop
or
stc
jmp
and
add
cli
insl
mov
xchg
pop
pop
push
fldt
cmp
sub
je
movsl
outsl
rcll
out
sbbl
lock
push
ljmp
mov
movsb
mov
add
das
add
sahf
repz
ljmp
mov
loopne
sub
std
push
mov
pop
dec
or
daa
jnp
out
ss
and
add
aad
mov
mov
mov
mov
fists
cmp
rolb
jg
mov
bound
aas
fistpl
std
stos
es
mov
xchg
adc
jl
out
push
fldl
lea
aaa
jge
or
pop
into
add
inc
mov
and
mov
xchg
sub
cld
les
hlt
mov
xor
cmp
je
mov
addl
jmp
mov
cmpl
jne
mov
xor
add
test
jne
xorl
jmp
pop
pop
jmp
cs
add
popa
push
in
jno
imul
jo
jo
jo
jo
imul
divb
xchg
mov
jbe
fs
fwait
gs
sub
xor
mov
out
scas
mov
dec
jo
stos
cmp
icebp
xchg
mov
pusha
inc
fsubrp
subl
call
ja
inc
out
ja
adc
rcrl
addr16
pop
imul
in
stos
jae
fiaddl
mov
pusha
mov
push
jle
push
int3
jecxz
insl
fs
mov
sub
sub
sti
inc
loop
int
cmp
mov
mov
outsb
das
xor
imul
push
mov
popf
add
mov
inc
sarl
ljmp
mov
imul
xchg
mov
das
and
xchg
jo
in
add
inc
jecxz
fsts
ficompl
shl
fidivrs
xor
insb
pop
push
push
push
scas
add
cmpsl
pop
stos
movsb
sarl
cmpsb
push
lcall
pop
mov
push
xor
ret
mov
inc
insl
cmp
imul
and
testb
cmp
pop
mov
adc
cmpsb
mov
add
and
mov
dec
imul
jge
test
dec
cs
sbb
and
stc
and
iret
clc
mov
movb
js
or
lea
dec
cmp
icebp
lsl
sub
add
cmpsl
sahf
mov
and
leave
cmp
pop
ss
cmp
dec
cmp
cs
or
sbb
cmpb
jl
dec
mov
fadd
iret
push
xchg
insb
es
dec
dec
mov
and
pop
xor
dec
ja
mov
leave
ret
push
mov
sub
leave
ret
push
mov
push
or
push
movzwl
sbb
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
mov
mov
mov
xor
push
mov
or
xor
sbb
mov
sbbl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
jmp
imul
cmp
jae
jl
dec
mov
jo
jo
mov
test
cmpsb
icebp
test
jne
in
mov
rclb
sbb
mov
in
in
insb
int3
xchg
int3
push
pushf
pushf
xor
jg
lea
js,pt
mov
and
hlt
push
in
and
cmpsl
xor
inc
cld
dec
jb
push
out
test
push
data16
fisubs
data16
sbb
mov
rorb
cltd
add
std
mov
dec
add
je
int
lahf
popa
stos
in
sbb
adc
in
mov
jl
inc
adc
xchg
test
xchg
push
repnz
dec
imul
push
mov
sbb
dec
fstl
jg
xor
xchg
xorl
mov
sbb
pop
and
aaa
jl
int3
and
stos
fimuls
pushf
imul
xchg
js
gs
cmp
mov
pop
aad
xchg
loope
adc
hlt
nop
adc
sub
ljmp
pop
sub
out
or
inc
and
mov
call
adc
jg
call
sbbl
push
pop
in
lods
and
fwait
iret
sbbl
add
xchg
cmp
lahf
into
xor
lods
xor
test
mov
rcrl
jge
mov
inc
bound
out
xor
test
fstpt
cld
add
daa
test
loopne
push
sarl
xchg
jle
mov
add
pop
push
scas
ja
mov
jae
push
iret
call
ss
inc
test
push
xchg
movsl
cld
jp
stc
xor
lret
mov
mov
mov
or
pusha
les
cmpb
jae
inc
js
lahf
out
sub
sbb
pusha
ja
mov
cmpsl
fcmovu
add
fcoml
pop
nop
mov
mov
jge
addr16
call
out
push
jae
cmpsb
imul
mov
ds
jg
sbb
sbb
stc
and
dec
movsl
pop
roll
mov
xchg
aam
leave
mov
pop
sub
and
sbbl
adc
out
int
xchg
or
jp
shlb
sub
sub
pop
lret
pop
das
negl
dec
lcall
int3
sub
orb
push
mov
rorb
push
hlt
add
or
fadds
lock
push
jnp
iret
cmp
hlt
scas
mov
dec
mov
bound
sahf
movsb
jns
adc
add
cmp
ja
push
jmp
jmp
mov
ja
push
aas
xchg
out
insb
pop
add
mov
sub
je
inc
adcb
loop
rcrb
xor
not
test
xor
in
sbb
loopne
push
lea
imul
int3
xor
ljmp
int3
fisttpll
jb
jge
cmp
pop
imul
stc
pop
ret
in
jmp
push
pusha
test
xor
mov
addb
pop
mov
leave
push
in
movsb
fs
cli
adcb
dec
bound
xchg
lret
adc
fidivl
jmp
je
inc
gs
in
mov
pop
mov
andl
inc
lret
sub
or
pop
lock
outsl
imul
inc
mov
rclb
adc
shlb
inc
adc
or
jp
sarl
pop
fidivrs
stc
shl
inc
ret
inc
pop
mov
gs
popf
jecxz
jb
mov
and
ja
cmp
lcall
xchg
mov
add
ljmp
inc
cmp
shlb
jle
sarl
imul
mov
jne
mov
mov
fnstenv
and
lds
add
xor
out
push
pop
sub
xchg
and
mov
push
gs
mov
cmp
jecxz
xor
jl
repnz
mov
jbe
sbb
and
ficoml
es
mov
mov
negb
lahf
sub
lret
add
mov
stos
cs
nop
jns
hlt
test
add
jno
pop
xchg
sub
add
popf
jns
xor
dec
ds
lcall
mov
inc
bnd
sub
pop
sub
cs
mov
scas
test
loope
addr16
lahf
stos
icebp
push
ret
out
mov
jmp
fs
inc
aad
pusha
mov
imul
mov
xchg
inc
xchg
fdivs
cmc
ror
pop
insl
pusha
je
andb
pusha
aas
test
dec
push
movsb
sbb
cmp
std
mov
ret
dec
xor
mov
sub
lods
in
test
loopne
cltd
test
hlt
das
pop
sub
jl
loopne
cltd
cmp
sarl
clc
rcrb
mov
ljmp
adc
xchg
or
test
fs
mov
fisubrs
loopne
mov
cld
inc
sbb
ret
das
arpl
loopne
mov
cmp
aad
push
in
out
push
push
mov
mov
mov
xor
add
jmp
fistl
loope
lds
add
xor
jo
mov
gs
imul
cld
push
add
mov
ret
push
and
jae
xor
push
pop
ss
cmp
fcmovu
leave
mov
dec
in
sub
lock
lcall
dec
mov
add
jnp
jg
jge
das
and
inc
add
gs
aad
inc
mov
fstpl
push
add
sbb
shr
mov
movsb
pop
sti
js
imul
inc
fwait
dec
mov
out
push
mov
jbe
ds
fwait
movsl
xlat
add
inc
inc
lods
sub
bound
mov
pop
mov
mov
shlb
adc
cwtl
jo
ds
sub
out
xor
xchg
mov
mov
stc
inc
add
gs
pcmpeqb
lret
repnz
andl
cwtl
pushf
andb
inc
mov
rorl
inc
pop
xor
lahf
pop
mov
adc
cmp
insb
inc
mov
imul
mov
jecxz
push
loop
andb
stos
lock
inc
mov
push
xlat
insl
mov
lahf
shlb
dec
lahf
sbb
lahf
xlat
mov
sbb
jmp
ficompl
and
cltd
xor
aas
pop
dec
mov
ja
xor
mov
push
mov
xor
cmp
jecxz
cmpsl
mov
and
inc
sub
loopne
cs
out
mov
scas
and
push
insb
test
dec
jne
or
sub
gs
in
pusha
fiadds
adc
adc
icebp
aad
pop
icebp
cmp
fs
movsl
mov
push
mov
test
sbb
jge
addb
sahf
jle
dec
repnz
xor
mov
pop
push
fldcw
roll
pusha
mov
xor
out
jecxz
jmp
ja
das
ficoms
out
leave
sub
movsl
cmp
fstl
push
mov
into
addr16
push
outsb
and
aaa
call
leave
fstl
add
xchg
sub
sub
or
in
or
mov
lret
shl
sub
mov
fdivp
fisttpl
loop
es
stos
out
inc
add
jmp
jmp
xchg
icebp
xor
ds
xchg
sbb
mull
insl
mov
stos
cmc
sub
les
lock
cmc
cld
mov
stc
pop
pusha
icebp
cmpsl
aas
and
fists
movsb
int3
pop
vpmulhw
out
dec
ss
or
jge
mov
imul
mov
xor
add
jmp
jecxz
fcoms
out
icebp
icebp
pop
xchg
aaa
aas
mov
jo
mov
roll
loope
insl
rcll
aad
in
mov
test
pop
jnp
les
ss
mov
in
shll
sub
out
cmpsl
cmpl
test
movsb
jns
aam
sub
xor
adc
outsl
stc
jo,pn
mov
movsl
pop
pop
js
push
shll
dec
and
push
cltd
xor
jae
in
in
adc
daa
xchg
test
jmp
loop
push
insl
mov
add
loope
and
out
jnp
in
mov
jno
mov
or
nop
dec
imul
xchg
arpl
fwait
outsl
cld
mov
pop
cmp
jbe
movsb
in
xor
sbb
dec
and
adc
aam
or
sbb
mov
sbb
sub
hlt
xchg
sub
std
mov
bound
sarb
addl
cmp
arpl
out
mov
sub
addl
push
sbb
insl
mov
cmp
push
movsb
pop
arpl
pop
mov
ljmp
jmp
out
out
out
and
xchg
outsl
pusha
mov
adc
adc
inc
add
or
pop
or
jne
push
ss
xchg
xor
rcrb
sbbl
sub
pop
dec
lcall
sub
pusha
cmpsl
insb
pop
shlb
jle
gs
mov
cli
mov
fdiv
dec
rclb
out
out
sbb
jno
mov
nop
repz
jp
std
rsm
inc
orl
rcrb
cmp
xor
xchg
jae
inc
mov
insl
sub
mov
push
scas
adc
pop
test
xlat
mov
jns
cs
mov
dec
pushf
sub
xor
mov
and
sbb
push
ljmp
mov
gs
add
bound
jg
lret
adc
add
mov
mov
fld
adc
lods
add
xor
pusha
pop
add
shl
imul
movsl
mov
mov
add
add
in
mov
and
testl
mov
mov
in
dec
aas
or
xchg
xchg
or
aas
push
lret
into
aaa
dec
lret
or
push
aaa
mov
jne
xor
cmp
imul
lcall
sub
mov
out
xchg
pop
dec
push
sbb
in
lods
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
adc
mov
addl
mov
adcl
xor
adc
mov
andl
add
movl
movzwl
mov
orl
movb
not
lea
mov
or
jmp
out
out
jno
in
or
and
icebp
ffreep
js
jo
cmp
sbb
ljmp
scas
jp
mov
mov
icebp
pop
xchg
pop
ljmp
jnp
mov
sti
cltd
sub
jge
push
js
adc
xchg
nop
jo
inc
jno
or
jge
aas
adc
lea
add
cmp
imul
js
aas
lock
fsub
outsb
into
mov
and
std
mov
stos
icebp
stos
dec
adc
loop
nop
sub
popf
test
sub
pop
std
push
add
xor
sar
inc
and
add
scas
adc
loopne
cs
dec
inc
iret
shll
push
xor
ret
xor
pop
or
addr16
mov
push
sbb
push
cli
pop
cld
insb
shrb
xor
fidivrl
cltd
inc
push
dec
jne
sbbb
fcoms
add
dec
pop
jb
xor
aad
pop
mov
mov
test
push
push
fnstenv
mov
insl
sub
sbb
stc
aaa
hlt
xchg
jp
lods
es
iret
ret
mov
fisttps
aaa
cmp
add
loopne
dec
out
push
popa
and
xchg
dec
or
aam
scas
mov
rcll
mov
popl
xchg
in
das
add
enter
inc
mov
xor
xchg
add
je
aad
pop
movsb
loopne,pn
icebp
inc
push
dec
xchg
imul
icebp
sub
testl
mov
pop
sahf
cltd
test
cli
insl
pop
insb
and
jmp
js
or
jge
jns
sub
dec
add
dec
add
sub
xchg
in
movsl
mov
das
stos
in
push
gs
inc
sti
adc
cmpl
pop
dec
cmpsb
mov
pusha
mov
sti
mov
mov
jg
adc
add
shl
clc
popf
dec
xchg
jecxz
jne
int
aad
test
pusha
int
ljmp
cmpsl
js
dec
jne
push
and
mov
xchg
inc
add
push
lock
mov
ds
data16
add
xchg
add
bound
mov
mov
and
pop
jns
pop
adc
movsb
or
sarb
in
ljmp
shr
xchg
movsl
int
enter
adc
fadds
cwtl
imul
mov
cmpsl
addb
xchg
or
dec
push
mov
jle
call
inc
lret
sub
leave
imul
sbb
fcompl
aas
sub
jge
mov
dec
repz
jecxz
cmp
push
xor
mov
clc
xchg
mov
push
lahf
lahf
push
push
flds
leave
pop
lret
mov
mov
cs
repz
rcrb
out
mov
jl
pop
or
pop
lea
xorb
ror
inc
cmpsl
popa
ret
inc
decl
mov
imul
add
or
mov
subl
xor
sub
andl
mov
negl
movl
jmp
fists
cltd
mov
addr16
push
and
dec
lds
jo
cmp
xor
mov
mov
mov
and
xor
shrl
jg
mov
mov
pop
scas
push
call
dec
daa
add
imul
lret
aam
and
jle
ffree
out
jbe
pusha
sbb
shrl
outsb
mov
cli
ljmp
pusha
xchg
xchg
xchg
push
xor
cmpsl
mov
sahf
push
and
addr16
mov
ret
sub
mov
cld
jmp
lret
daa
pop
sbb
popl
mov
iret
or
aas
mov
lret
call
fcompl
shl
vmovss
add
lods
lods
ret
pop
push
test
cmp
outsl
call
inc
test
cmc
add
mov
cmp
fcmovbe
jmp
sti
cmc
negb
stc
cltd
jns
dec
inc
and
inc
lcall
fwait
jo
cwtl
insl
rcrl
cmpsl
adc
xchg
enter
pop
dec
and
push
push
mov
js
cli
outsl
mov
or
ret
or
dec
stos
shr
push
call
push
stos
and
cwtl
insb
mov
inc
scas
cmp
push
xor
mov
or
push
leave
push
div
aas
divl
adc
adc
jno
call
dec
ret
push
addl
sahf
mov
insb
rorb
shl
or
movsl
jle
rcl
cs
fwait
mov
jl
pop
sub
mov
xlat
fiadds
lret
fmull
and
pop
mov
push
mov
jns
rcrl
mov
and
jbe
add
mov
mov
pushl
mov
mov
adc
rcr
and
loopne
sub
dec
in
lret
fisubrl
ja
cmp
sbb
lock
lods
xchg
sub
jmp
pop
pop
mov
cmp
push
lods
sub
cmpsb
mov
pop
or
das
pop
pusha
in
push
push
xchg
in
test
sub
xchg
push
xchg
ret
fucomip
iret
inc
inc
push
add
out
lahf
dec
int3
xchg
frstor
cmp
rcrb
mov
xor
ret
cmc
add
pop
or
aam
add
scas
adc
imul
xor
nop
cltd
push
daa
jg
or
push
lret
sbb
out
push
and
aas
popa
shrl
sub
xchg
in
arpl
push
mov
leave
xorl
dec
add
leave
cmpsl
and
in
xor
movsb
out
mov
ret
out
insb
test
mov
data16
sbb
push
mov
inc
pop
into
mov
add
shl
xchg
popf
add
imul
mov
jb
sub
cmp
xor
jle
and
jg
lret
adc
stc
mov
mov
push
cmp
es
shll
test
imul
addl
test
push
or
push
xor
mov
adc
mov
add
movl
jmp
mov
movl
mov
movl
jmp
jge
lret
in
icebp
ss
adc
sbb
cmp
xor
mov
cmpsb
dec
add
mov
cmpsl
dec
lret
add
seta
add
inc
sahf
mov
adc
call
popa
in
dec
dec
enter
rcrb
addl
test
add
xchg
inc
pop
sub
aas
push
mov
outsl
loop
xchg
cmpsl
add
dec
adc
adc
sub
aaa
into
std
mov
andb
jmp
add
flds
push
lods
push
inc
lret
sbbl
dec
or
add
stos
rol
ret
jns
inc
aas
cmc
cmp
jle
xchg
sbb
xchg
js
dec
inc
and
shll
sub
and
cmp
mov
insl
mov
in
jmp
lahf
orb
sub
pop
out
pop
sahf
and
scas
push
or
out
out
sub
sub
lock
push
in
jbe
sub
call
and
scas
test
into
xor
jl
cmp
xchg
dec
imul
sub
pop
adc
inc
inc
fstl
pushf
rcrl
scas
xchg
pushf
in
cld
inc
ja
in
inc
mov
xlat
push
xlat
shll
daa
pop
dec
or
xor
movsb
int3
and
das
ss
daa
movb
ja
cmpsl
lods
push
pop
gs
pop
xchg
decl
cmp
sub
sti
inc
push
out
dec
or
fisttps
inc
ror
sbb
outsb
mov
addr16
fdiv
cmp
and
fisubs
nop
xchg
daa
adc
movl
test
mov
add
sbb
cld
add
aaa
insb
cwtl
add
repz
imul
or
rclb
mov
in
add
out
xchg
call
imul
jae
push
pop
mov
pcmpeqw
fsubl
mov
inc
mov
add
lcall
xchg
stos
jbe
or
xor
dec
adc
punpckhdq
or
dec
xlat
jmp
xchg
cmpsl
or
xor
or
jne
fsubs
out
fidivrl
xchg
je
pop
ljmp
arpl
xchg
int
repz
rclb
enter
js,pn
ficomps
xchg
and
xor
lds
arpl
popf
imul
lret
adc
xchg
in
scas
pop
fdivp
pop
mov
cmp
cmp
js
sbb
fwait
jge
scas
lahf
mov
pushf
xchg
fwait
adc
mov
xor
push
call
add
lret
xor
mov
shlb
incb
lea
xchg
pop
push
shll
and
mov
mov
mov
adc
fstpt
jns
loope
inc
jno
or
adc
testb
pop
cmpsb
jne
in
ret
roll
aam
jbe
add
das
and
xor
inc
nop
testl
dec
hlt
in
cmp
mov
out
adc
cmp
movl
jmp
leave
daa
rclb
repnz
jecxz
cmpsb
dec
cmove
jo
cmp
pop
ret
into
int
sub
xor
lcall
jae
sub
and
call
lret
aad
mov
pusha
adc
jne
arpl
pop
stos
bnd
cs
or
pop
jge
out
mov
xor
push
jnp
mov
sbb
pop
in
dec
orb
lcall
add
inc
iret
or
xchg
mov
xor
mov
imul
fstl
jb
lcall
shll
add
jecxz
fwait
mov
cmc
jnp
fiaddl
pop
or
lock
jmp
pop
test
mov
test
pushf
xchg
xchg
dec
rol
fldcw
xchg
aaa
xor
imul
dec
cmpsb
insl
mov
hlt
sub
jne
popa
mov
push
ret
dec
cmp
mov
pop
rcll
sbb
les
push
cmp
fs
sahf
adc
xor
repnz
cmc
push
dec
or
lea
outsb
cmc
cmp
mov
cli
push
roll
lods
scas
addb
push
rcrl
dec
and
lods
xor
adc
xchg
sub
lods
into
pushl
mov
sti
fistpl
sub
pop
dec
inc
out
pop
sub
cs
jge
xchg
sub
imul
xchg
out
sbb
sub
xchg
fs
pushf
or
pusha
in
push
push
mov
stos
int
rorl
insl
inc
xchg
inc
sbb
fldz
push
xlat
xchg
out
xchg
cmc
insb
test
cmpsb
and
dec
ficomps
arpl
sbbb
push
and
xchg
iret
xlat
dec
icebp
mov
jge
jno
sub
imul
adc
lahf
movsl
lahf
add
jge
out
loopne
fcmovb
shlb
sub
les
inc
inc
aad
add
arpl
lods
outsl
nop
not
icebp
in
push
mov
movsb
push
sti
in
in
cltd
fiaddl
ljmp
insb
aas
mov
lret
leave
mov
add
push
or
push
rcrb
lret
xchg
loop
push
lods
xlat
dec
idiv
mov
xchg
mov
push
enter
orl
push
push
dec
sbb
jg
adc
ss
movb
xchg
cmp
je
jnp
scas
outsl
ret
jbe
push
fucomip
mov
jge
out
scas
adc
aam
clc
mov
pop
sub
and
xlat
sarb
loope
dec
mov
push
cmp
in
pop
dec
inc
sti
pfrcpit2
mov
dec
ljmp
dec
xchg
out
addr16
push
and
or
cmpl
call
arpl
add
inc
out
addr16
fsts
xchg
mov
mov
inc
ljmp
or
movsb
inc
cmpsl
stc
mov
sbb
sbb
cmp
test
jno
pop
mov
mov
inc
loop
cmpsl
xlat
sub
xchg
ret
xor
test
mov
cmp
adcb
jmp
adc
mov
jmp
push
jge
add
jb
inc
sbb
stc
or
jo
cmp
aas
dec
je
loopne
cmpsb
popa
or
aam
dec
add
jae
xchg
cwtl
inc
pop
jmp
arpl
lea
js
or
ffree
inc
repnz
insb
push
testb
leave
jne
cmp
mov
das
xchg
pop
jp
iret
push
pop
rcll
cs
movsl
jae
scas
inc
aaa
sbb
ja
decl
cmc
sbb
shll
fwait
je
pop
in
jne
adc
dec
loopne
adc
pop
daa
jnp
or
push
add
dec
call
lds
mov
test
xchg
scas
outsb
dec
push
loop
call
cmp
cmp
pop
sahf
xor
lock
enter
cmpsb
mov
fidivrs
sarl
pop
push
inc
mov
jge
cmpsl
cmp
lret
pop
jns
and
frstor
insl
pop
rcl
sbb
jl
pop
pop
or
lret
cmp
dec
pop
or
jns
cmpsl
sub
ret
adc
mov
cmp
jmp
push
jl
push
icebp
loop
scas
mov
test
pop
dec
lods
inc
arpl
cltd
adc
lock
hlt
pop
test
mov
mov
fstpl
mov
mov
add
mov
mov
js
jmp
mov
mov
je
jl
mov
xchg
mov
push
jl
popl
mov
jo
icebp
push
dec
dec
jbe
xchg
cmc
mov
arpl
mov
cmp
jecxz
push
mov
fadds
fistpll
jge
or
sbb
jne
push
jo
lret
fsts
mov
cmp
and
jbe
pop
xchg
dec
xchg
mov
imul
mov
imul
mov
pop
push
rorb
pop
jp
mov
cs
add
out
lea
fs
js
xor
pop
out
cmp
pop
into
adc
mov
xchg
imulb
leave
mov
sub
cwtl
inc
mov
mov
mov
add
cmpsb
xchg
xchg
imulb
mov
pop
cli
push
out
xchg
mov
adc
xchg
push
fstl
mov
ljmp
sub
and
inc
pop
push
ljmp
cmc
mov
lds
mov
xlat
sbb
ret
push
ret
lret
scas
mov
fsubl
lret
xchg
insb
mov
or
xchg
fisttps
clc
dec
scas
mov
clc
sbb
cmp
sbb
mov
or
insl
mov
jge
popa
inc
iret
stc
rcrb
pop
imul
shll
test
incl
pop
mov
and
test
xchg
jns
add
dec
mov
add
pop
add
sti
jg
stos
or
fidivrs
cmp
cmovle
subl
dec
pop
fadd
rcrl
loope
movsl
fcoml
inc
hlt
xor
add
cmp
movl
je
add
push
adc
push
mov
mov
andl
xor
mov
add
addl
movzwl
andl
mov
sbbl
mov
addl
movzwl
sbbl
xor
addl
jmp
fdivl
dec
rsqrtps
icebp
inc
sub
in
push
jo
cmp
sub
cmp
xchg
gs
les
sarl
or
aas
test
sahf
jno
pop
rcrl
xchg
rcl
in
aaa
pop
addr16
orl
gs
mov
xor
popa
mov
orl
ja
jecxz
cmp
jg
rorb
push
imul
pop
repz
xor
add
sarl
shl
lea
inc
pop
pop
scas
xchg
mov
adc
mov
jmp
mov
lcall
inc
test
xlat
mov
test
pop
pop
mov
test
nop
out
nop
inc
leave
mov
lret
daa
mov
cwtl
int3
add
jl
inc
xor
psubsb
nop
lcall
xor
and
sbb
andb
dec
ss
inc
inc
test
xlat
outsl
cwtl
xor
cmp
pop
mov
clc
mov
bound
xchg
inc
inc
adc
fs
enter
enter
jge
fcoml
repnz
pop
xor
and
rcr
stos
leave
fstpt
arpl
sbb
clc
hlt
dec
xor
mov
adc
cld
xorl
jae
inc
out
lds
push
xchg
cli
mov
lret
cmc
jle
shr
pop
mov
mov
sahf
push
xchg
xchg
aam
lea
sub
adc
rcr
sbb
andl
popa
mov
test
cmp
mov
pushl
inc
inc
les
repz
add
adc
loop
ret
out
mov
stos
data16
cmp
sbb
pop
xchg
jmp
leave
pop
mov
aaa
dec
icebp
insb
lods
mov
cltd
fisttpll
rclb
ret
scas
jns
aas
leave
inc
ror
cmpsl
std
adc
push
fsts
notl
sbb
insb
lds
xlat
add
sbbb
fmuls
cmpsl
rolb
xor
insl
jno
lret
scas
jmp
jp
lahf
sbb
ja
jecxz
out
pop
mov
cmp
add
mov
fucomi
jns
jnp
fdivrl
fdiv
lea
adc
lahf
jae
les
fmull
hlt
hlt
repnz
fstps
cld
fcompl
xchg
sub
xor
cmp
fcoml
xchg
inc
sbb
shrb
xchg
pop
adcl
mov
inc
or
iret
orb
insb
xchg
push
xlat
xchg
sbb
mov
cmp
and
adc
push
cwtl
mov
sub
sbb
sbb
adc
inc
jl
sti
or
dec
into
gs
iret
mov
mul
pop
mov
jcxz
stos
lahf
push
pop
xor
inc
faddl
jecxz
jmp
push
fwait
mov
or
adc
les
sbb
aas
mov
in
jno
mov
add
add
mov
movl
mov
jmp
or
daa
arpl
fisttpll
icebp
imul
jo
clc
test
popf
sub
or
loopne
add
out
xor
mov
iret
or
aas
popa
mov
xchg
adc
push
mov
mov
mov
adc
cmpsb
push
adc
mov
sub
addr16
es
sbb
out
pop
cmp
xor
or
sbb
or
mov
xor
rolb
rclb
mov
dec
pop
outsb
fstpt
xor
cmp
out
jae
std
inc
in
or
cmp
fwait
jmp
mov
mov
pusha
adc
and
cltd
push
cmp
xor
mov
fwait
rorl
mov
sbb
test
mov
fcoml
jecxz
adc
jl
inc
add
mov
cmp
cmp
lods
loopne
mov
or
lods
adc
and
stos
xor
in
or
inc
mov
pop
push
push
dec
mov
add
pop
xor
lahf
insl
ffree
and
std
push
xchg
mov
je
dec
imul
mov
push
and
push
mov
sbb
stos
js,pn
lret
sub
adc
xchg
xchg
shlb
push
xor
and
lret
fidivs
inc
ljmp
pop
xor
ja
inc
xchg
shl
scas
insb
mov
pop
das
jbe
movsl
shlb
ljmp
lock
add
pushf
cmpb
jnp
adc
loope
add
mov
cmp
stos
push
push
push
clc
fstps
insb
enter
lret
sbb
stos
addl
ljmp
cltd
fsubrp
xchg
xchg
pop
sbb
std
out
test
mov
out
push
aaa
inc
std
or
cmpsl
std
mov
in
sbb
push
sub
hlt
push
pushf
jnp
push
ret
in
or
sub
es
mov
xchg
fs
push
testb
cmpsl
adc
popa
jbe
jns
cmp
movsl
lea
pushaw
in
sahf
imul
lods
je
push
lods
in
aaa
mov
xchg
mov
push
push
pop
incl
and
dec
addr16
pop
sub
mov
je
iret
iret
sti
fcomps
ja
xchg
and
and
cmpsb
out
lcall
pop
mov
subb
out
jno
rolb
and
cmp
jbe
lea
stos
pop
push
sbb
mov
adc
and
in
sbb
xorl
adc
sahf
cmpl
in
hlt
jo
popf
or
jno
fstpt
shrb
data16
jge
push
sbb
sarb
in
enter
jle
cld
push
mov
mov
push
inc
ss
jle
dec
push
jne
inc
sbb
jge
stos
daa
mov
inc
aas
lret
into
xor
leave
mov
jp
sub
jmp
add
push
or
cwtl
add
inc
hlt
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
jmp
xchg
roll
icebp
lods
add
ror
icebp
stos
push
sub
cmp
sub
mov
sbb
add
push
mov
fists
push
aam
jg
sub
mov
jmp
or
and
add
mov
cmp
je
shll
lcall
pop
and
insl
into
mov
mov
jnp
cmpsl
mov
mov
cmpsl
pop
or
lds
mov
cld
adc
jb
into
push
fisttpl
shr
cmp
jns
add
jo
xchg
filds
mov
das
gs
or
mov
aad
inc
sub
adc
mov
inc
dec
subl
mov
inc
cmp
cmp
stos
enter
mov
add
insl
sbb
popaw
pusha
jle
nop
or
push
sarb
dec
imul
mov
es
jno
push
jb
mov
mov
jmp
dec
mov
dec
lods
out
test
ret
xchg
and
sub
pop
scas
cmp
dec
push
idivb
test
pop
lret
fs
fs
and
pop
loop
mov
sub
jb
or
mov
xor
testb
mulb
xor
xor
lahf
les
dec
scas
aam
mov
cmp
dec
cmpsb
mov
adc
mov
and
sub
sbb
imul
popf
xrelease
frstor
repnz
orl
ja
sub
adcb
ja
push
jp
pop
sbb
mov
dec
repz
mov
cmp
fldl
or
call
data16
mov
pop
cwtl
stc
inc
cs
xor
or
sub
sub
leave
pop
outsl
xor
mov
dec
les
addr16
ret
mov
pushf
push
int3
sbb
rcrb
imul
push
sub
shr
orl
cltd
scas
pop
xchg
stos
pop
xor
iret
cmp
sub
xchg
lret
cmpsl
shlb
ja
and
mov
adc
and
add
dec
and
and
js
mov
push
push
fs
fwait
cmp
mov
ljmp
ror
pusha
shrb
xchg
sub
addr16
cli
jl
mov
and
pushf
rol
push
fwait
mov
aas
popf
sub
aad
or
divb
xchg
push
push
lret
sti
fidivs
movsb
cmp
sahf
jnp
icebp
ret
std
cmp
mov
cmp
stos
jge
pop
cmp
mov
pop
add
ljmp
and
xchg
jmp
adc
in
fcmovnb
sbb
sbb
fcomps
xchg
jle
cwtl
push
lret
orl
mov
mov
mov
daa
add
xchg
fucomp
insb
xchg
push
inc
push
jmp
mov
push
jg
das
push
inc
and
cmp
or
scas
pop
int
in
pushf
mov
bound
jmp
cmp
and
jbe
dec
fsubr
sub
mov
and
lea
aas
xlat
push
sbbl
movsb
mov
ret
push
mov
push
mov
mov
sbb
jmp
pop
scas
sbb
push
pop
mov
jle
scas
icebp
adc
jo
stos
jle
jo
mov
je
pop
dec
mov
mov
add
cwtl
mov
imul
fisttps
xchg
insb
mul
fcompl
push
lahf
orb
or
lret
jecxz
das
outsb
jno
inc
cmp
out
lods
pop
outsl
jbe
scas
inc
inc
lds
ret
inc
xchg
test
popa
dec
mov
xor
lods
xchg
jl
or
daa
xlat
or
mov
in
test
xor
stc
daa
sub
clc
outsb
cmp
mov
pop
mov
jmp
int3
lret
test
imul
mov
add
pop
and
xchg
je
xchg
test
js
in
push
xor
ja
lret
imul
cmp
or
shrl
daa
lods
pop
mov
loopne
adc
fs
test
hlt
pop
push
data16
fcmovnbe
test
or
divb
inc
xchg
bound
xor
jle
sahf
push
and
xlat
sti
imul
or
and
in
jnp
testb
test
pop
sarb
popf
sub
push
das
movsl
cmp
adc
adc
loop
test
xor
dec
pop
loop
jle
sarb
push
popf
mov
sub
mov
shr
xchg
loop
adc
xchg
pop
ret
lds
pop
aam
roll
cmc
ficoml
mov
or
out
xor
xchg
stc
and
jge
mov
fs
dec
std
push
aaa
adc
pop
aas
mov
mov
dec
or
shl
cmp
fsubl
ja
pop
pop
xchg
test
js
inc
pop
push
mov
scas
rcll
jl
pop
aas
sub
insl
cmp
cmp
in
movsb
aam
sub
xchg
mov
mov
jb
and
mov
jno
outsb
loope
push
mov
or
mov
bound
hlt
test
jbe
in
adc
lret
lret
mov
cmp
and
jb
adc
in
ret
les
xor
ret
jae
adc
xchg
adc
push
int
icebp
mov
xchg
push
mov
sbbb
cltd
imul
adc
leave
pop
mov
cmpsl
xor
adc
adc
adc
out
repnz
and
jecxz
mov
je
sub
xchg
fldt
or
sbb
mov
mov
xchg
call
enter
cmc
mov
mov
add
and
mov
jmp
ja
and
dec
xchg
xor
dec
xor
jo
sub
mov
roll
mov
jecxz
out
fbld
or
inc
push
jecxz
ss
pop
mov
or
hlt
movsl
dec
je
movsl
out
adc
sub
push
fidivs
pop
rcrb
ljmp
cli
lods
add
mov
push
mov
sub
popf
cmp
push
jl
and
mulb
add
mov
lds
lock
sbb
pusha
adc
ds
lret
movsl
cmp
mov
mov
dec
add
fisttpl
cmp
pop
add
or
aaa
sub
push
add
insb
mov
jae
mov
js
outsl
lock
mov
out
clc
cld
sub
pop
add
in
popf
daa
cld
or
test
ja
mov
loopne
cwtl
sti
adcl
jg
xlat
adc
and
cmp
jb
ds
daa
lea
out
in
out
test
jp
scas
add
pop
jmp
lahf
jo
orl
loope
lods
and
popa
hlt
push
bnd
adc
pop
add
adc
iret
hlt
out
jp
mov
inc
adc
ret
and
dec
in
cltd
repz
push
imul
dec
mov
push
mov
mov
mov
movsb
int3
push
jg
pop
in
sub
xorl
shll
inc
jle
sub
push
or
test
iret
mov
mov
cmp
mov
lgs
xchg
ds
sbb
jb
cmp
mov
ret
pushl
cltd
mov
andb
mov
pop
jbe
mov
mov
cmpsb
popf
ljmp
in
mov
mov
es
xchg
jno
cs
mov
jb
add
outsb
jns
jl
mov
rcll
mov
push
movsb
leave
mov
cwtl
mov
or
jg
out
imul
push
repnz
pop
cld
and
bound
popa
cltd
add
dec
out
pusha
sti
out
adc
scas
shl
std
mov
js
cmp
jl
jbe
or
xchg
mul
mov
adc
aam
dec
mov
fcmovu
mov
push
iret
push
lock
jge
mov
movsb
in
jp
mov
and
repnz
sub
lods
loope
daa
mov
idivb
fs
cmp
mov
sti
movl
and
movl
and
mov
sbb
push
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
push
call
xor
xor
dec
mov
jmp
mov
add
xor
and
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
jmp
xchg
imul
enter
jo
stos
jle
jo
push
xor
dec
push
out
lahf
out
repnz
xor
sbb
sbb
out
das
mov
sbb
jecxz
dec
add
ss
dec
sub
cmp
pusha
ljmp
fs
mov
dec
adc
mov
cmp
mov
ret
testl
into
test
or
jge,pt
cmp
jmp
negl
inc
and
jmp
imul
je
lahf
sub
mov
cmp
push
jmp
fdivrs
cs
pop
mov
adc
int3
mov
adc
sub
mov
jb
insl
fmull
and
in
out
pop
or
adc
shlb
dec
pop
mov
push
outsl
dec
cmp
pop
popa
aas
push
push
xchg
cmp
out
sbb
mov
test
jbe
mov
out
or
push
lods
js
push
push
test
ja
jbe
out
jne
imul
fwait
pop
mov
imul
adc
or
fldln2
stos
popf
fldl
push
lods
pop
and
jle
cld
jecxz
mov
movsl
scas
mov
and
enter
pop
es
idivb
out
and
insb
ret
cld
inc
rol
mov
getsec
jmp
test
pop
clc
inc
les
sub
outsb
es
and
jo
mov
scas
leave
scas
push
xchg
push
out
xchg
jmp
stos
pop
int3
sbb
and
dec
mov
stos
test
fmul
cmp
std
push
sbb
test
fisubl
cmp
nop
enter
jbe
loopne
xchg
inc
and
push
ret
ljmp
adc
in
or
adc
popa
mov
mov
lea
nop
dec
add
dec
pop
sbb
push
dec
aaa
push
add
mov
jp
dec
cmp
sbb
add
out
daa
sub
loopne
stc
cs
movsb
dec
inc
adc
xchg
ret
lock
fldt
bound
add
lret
adc
inc
mov
dec
push
cmp
push
inc
pop
test
xchg
xor
fst
into
subb
icebp
inc
fs
inc
scas
imul
or
push
sbb
pop
stos
and
jmp
push
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
addl
movl
mov
mov
adcl
mov
xorl
xor
jmp
fidivl
jle
jne
jb
sub
mov
jo
cmpsl
jg
jo
sbb
sub
inc
dec
pop
jbe
ja
ljmp
sbb
push
jae
pop
dec
adc
jecxz
mov
cmp
pop
mov
hlt
mov
mov
mov
adc
push
jp
push
test
mov
iret
ja
lock
test
adc
xchg
and
xchg
pop
mov
aam
pop
xchg
push
add
inc
cli
lret
sbb
sti
or
je
xchg
cmp
cmpsb
mov
rol
and
fiadds
out
gs
xchg
imul
shrl
ror
ss
insb
outsb
mov
add
jl
popf
inc
jb
call
enter
imul
sbb
aad
mov
cmp
stos
add
cmp
or
or
rclb
cmpsb
inc
aaa
pushf
mov
push
imul
ret
or
cmpsb
fwait
outsb
fmuls
out
cmpsb
dec
nop
xchg
insl
outsb
lret
jb
lcall
aam
inc
insl
cmp
mov
jl
hlt
pop
mov
sti
dec
fildll
and
jae
cmp
push
xor
jp
test
add
add
or
xchg
nop
mov
or
mov
insl
pop
dec
xor
inc
pusha
popa
sarb
inc
nop
pop
jle
test
xor
in
push
shrl
popf
out
sub
test
arpl
inc
scas
ret
mov
mov
push
dec
sahf
shr
cmpsl
inc
cmp
pop
dec
push
hlt
ret
add
jae
push
mov
push
ds
cltd
push
loope
bnd
sbb
xor
orl
mov
mov
xor
push
sbb
mov
or
mov
sbbl
add
adcl
mov
sbb
mov
adcl
mov
subl
mov
or
jmp
out
hlt
arpl
popa
xchg
insl
hlt
pop
xor
lods
gs
cmpsl
jg
jo
popl
xor
enter
rclb
cmc
add
out
rorl
testl
inc
pop
mov
mov
jmp
leave
adc
mov
adc
add
cmp
mov
push
les
mov
sbb
sahf
push
les
insl
sub
dec
int3
pop
orb
jge
lea
pop
ret
lea
pop
and
jg
scas
push
icebp
sub
mov
mov
ljmp
pusha
jbe
test
jecxz
pop
add
loopne
mov
movl
pop
pop
mov
popa
xchg
in
and
cmp
rolb
push
scas
or
adc
orb
xchg
jg
add
test
addr16
sbb
out
mov
pushf
test
sub
mov
xchg
aam
mov
xchg
aas
push
jb
mov
or
jbe
jmp
adc
fs
aas
or
push
jno
jo
test
xchg
iret
sub
cmp
dec
mov
arpl
inc
dec
inc
xor
cmp
sarl
dec
loope
xor
cs
xchg
lock
mov
dec
mov
loopne
test
jb
daa
jmp
and
adc
in
aad
jno
jp
push
not
and
mov
pop
cmpl
cmp
mov
inc
jmp
incb
and
or
jbe
pop
mov
mov
subl
mov
or
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
mov
xor
add
jmp
jge
gs
gs
sti
ret
pusha
jo
mov
cmp
jo
jg
jo
cmp
rcll
mov
jo
insl
xor
loopne
in
int3
mov
lock
sbbl
lret
dec
inc
pop
stc
push
xorl
std
xor
in
sbb
inc
cmp
int3
mov
dec
cmp
ja
js
mov
lcall
mov
add
in
jmp
cmp
lods
ljmp
ret
pusha
sbb
xchg
push
push
out
jo
cs
and
dec
push
add
int3
lahf
push
iret
js
bound
sub
cmp
dec
fsubl
cwtl
mov
pusha
scas
xor
sti
cmp
inc
fidivs
mov
dec
daa
aaa
leave
add
les
loop
mov
js
mov
mov
push
pushf
int3
adc
addr16
xor
mov
jl
data16
sbb
sub
push
pushf
icebp
or
mov
xor
mov
mov
xchg
imul
xlat
sbb
out
stos
addl
je
inc
mov
push
repnz
leave
cltd
ss
popf
cmp
fldcw
xchg
aas
sbb
jnp
xor
add
jg
mov
stc
sub
out
inc
fidivs
sti
pop
iret
fdivrl
es
pop
arpl
mov
and
mov
or
lock
jbe
cmp
lahf
lcall
pop
xchg
dec
ret
sbb
jo
ss
add
in
outsl
mov
jmp
sar
adc
mov
inc
gs
shrl
scas
mov
cmp
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
push
adc
movl
mov
sbb
mov
mov
xor
add
mov
sub
mov
sub
mov
andl
mov
mov
jmp
mov
jg
inc
rorl
jae
pop
dec
sti
xlat
xchg
xor
jo
loop
jo
std
adc
imul
or
jne
dec
cmpsl
push
sbb
xor
sub
sarl
stos
cmp
add
sbb
ljmp
stc
sub
or
adc
stc
fsts
adc
mov
push
push
daa
fcoml
ja
adc
sbb
adc
aad
or
add
es
lock
jb
std
rorl
js
loop
adc
pop
lret
test
cli
lahf
aaa
add
pop
ret
or
add
rcll
pusha
int3
insl
fdivr
out
movl
scas
cmp
fadds
cmc
movsl
adc
out
popf
push
stc
push
cld
bound
sub
xchg
je
sbb
cmp
sarl
test
loope
movsl
jne
in
xchg
stc
cmp
pop
shlb
cmp
cmp
jl
sub
push
pop
xchg
fdivs
pop
pminsw
decl
mov
repnz
ret
ljmp
push
pop
daa
fsub
aam
sahf
hlt
hlt
jns
pusha
cmp
add
and
pop
dec
adc
and
pop
out
mov
mov
jbe
mov
adc
or
xchg
cmp
adc
fwait
jb
test
cmpsl
outsb
push
pop
mov
xor
pop
cmpsb
lret
pop
sbb
popf
das
jno
jnp
sbb
shlb
ret
fldl
subl
loope
out
push
push
lods
push
int
adc
mov
xorb
ret
in
shll
xchg
loope
xchg
jmp
ljmp
mov
movsl
cmpl
ret
mov
int
push
fdivrs
adc
push
xchg
xchg
or
js
nop
jae
ja
and
adc
ret
mov
mov
cmpsl
movsb
nop
lret
sub
dec
mov
xchg
fstpl
jge
test
test
xchg
push
pop
push
filds
inc
pop
or
je
loop
lret
mov
loop
push
mov
and
popa
leave
mov
xchg
pushw
mov
and
inc
fmul
in
mov
imul
xor
popf
cli
xchg
ja
inc
pushf
push
cmpsl
pop
xchg
inc
push
sahf
pop
jbe
outsb
mov
xchg
xor
mov
mov
xor
mov
mov
adcl
mov
mov
orl
mov
subl
mov
andl
mov
mov
test
mov
jne
mov
jmp
sub
test
pushf
pushf
out
out
movsl
cmp
loop
jo
outsl
dec
leave
add
dec
inc
orb
rcll
imul
imul
outsl
test
mov
cmpsl
pop
adc
bound
and
push
add
int3
xor
mov
inc
daa
imul
pop
cmpsb
popa
ljmp
jnp
divl
leave
or
mov
call
shll
ret
add
mov
jno
cmp
inc
lods
inc
adc
shrb
xor
loop
jecxz
xlat
fbstp
fsubrs
repz
push
mov
pop
adc
cmp
in
out
mov
jns
push
lret
mov
jle
in
decb
sbb
dec
sahf
mov
enter
jle
mov
xchg
lret
dec
out
cmp
lea
jnp
xor
mov
jb
dec
les
push
outsb
aaa
sti
push
imul
mov
dec
add
sbb
lods
add
loopne
push
dec
jns
test
xchg
pop
aad
test
das
popf
jnp
sbb
adc
cmp
shl
cmp
in
xchg
popa
or
addr16
cld
xor
in
and
mov
mov
int
or
push
and
pop
scas
jl
jno
mov
xchg
xor
xor
loop
push
into
sub
cmpsb
push
fstps
add
inc
mov
pushf
mov
shr
sub
cmp
xor
xchg
push
iret
cmpsb
or
int3
leave
mov
loop
int3
imul
cmp
insb
lret
dec
stos
inc
test
cmp
xchg
imul
ss
sbb
loopne
mov
and
in
ja
andb
dec
jl
xor
xor
mov
add
xor
aas
clc
inc
mov
ja
dec
cmpsb
pop
jae
aas
inc
icebp
ret
mov
test
jns
pop
loope
add
push
lds
or
in
in
adc
jae
jg
pop
jbe
shr
fidivrl
orl
lret
es
dec
xchg
lods
aas
pop
cwtl
in
out
xlat
test
enter
popa
cmp
cltd
add
dec
and
pushf
jb
add
ret
push
mov
sub
mov
mov
mov
subl
mov
xorl
movl
incl
movl
subl
mov
push
push
push
movzwl
and
mov
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
sub
mov
add
xorl
mov
movl
jmp
inc
jae
pop
sub
jae
and
mov
jmp
rclb
lds
and
jo
xor
adc
adc
notl
repz
adc
jp
aad
stos
fs
sti
mov
mov
inc
dec
out
xchg
sbb
pop
inc
pop
sub
lock
sub
jno
bound
gs
popf
and
pop
push
pop
cmpsl
sub
stc
dec
cvtps2pi
mov
adc
jne
sbb
jmp
int3
jp
sub
inc
imul
and
mov
cmpsb
loopne
mov
mov
jl
insl
push
addl
scas
dec
xchg
mov
push
mov
mov
mov
mov
cmp
inc
add
push
xchg
insb
mov
arpl
out
push
dec
mov
mov
xor
xor
decb
sahf
imul
push
addr16
addr16
or
xchg
push
mov
dec
xor
jecxz
aas
inc
push
pusha
lods
mov
jnp
inc
or
rcl
jnp
shr
aam
inc
sub
mov
dec
in
xchg
mov
jecxz
stos
shlb
std
adc
mov
in
lock
repnz
inc
dec
lea
cmpsl
stc
or
aaa
lea
sarl
icebp
lea
dec
in
sahf
mov
pop
jge
lcall
dec
sub
je
or
xor
cmpsb
and
xchg
loope
mov
dec
adc
pop
lret
adc
sbb
scas
addb
lods
push
pop
xchg
cmc
fisttpll
ret
adc
xchg
sub
sub
cmc
inc
mov
mov
rorl
sbb
sarb
nop
fdivrs
dec
int
fstps
shl
out
mov
and
jp
leave
icebp
fcoml
inc
or
rorl
pop
push
mov
loopne
in
add
lds
add
clc
add
or
nop
mov
mov
fsubrs
cwtl
scas
and
scas
sub
sub
gs
out
push
jmp
iret
and
add
and
cmp
sahf
xor
sub
rep
lds
add
ds
imul
ret
xor
sbb
xchg
and
dec
inc
inc
pop
aam
mov
inc
bound
clc
lcall
out
cld
push
add
pop
xor
jp
cltd
mov
push
test
jge
cmc
cmp
sub
outsl
ss
mov
jnp
sub
cmp
push
jmp
out
cli
sub
push
mov
sub
arpl
jae
sbb
test
push
lcall
out
cli
sub
stos
cmp
and
loop
ret
stc
jns
push
in
gs
dec
add
adc
xchg
push
pushf
jmp
jge
or
fdivrl
shlb
jmp
mov
stc
stos
movl
adcl
movl
movl
add
jmp
sbb
sarl
lahf
popa
sti
arpl
inc
arpl
and
jo
xchg
dec
jns
add
cmp
mov
mov
sbb
lds
adcl
push
adc
pop
sub
clc
hlt
or
mov
movsb
aam
adc
daa
lcall
leave
popa
add
out
scas
or
cmc
inc
sub
xchg
and
std
in
mov
xchg
cmp
pop
push
or
push
jb
jno
inc
arpl
insl
roll
negb
fidivl
or
pushf
xchg
cld
int
lret
test
js
mov
xchg
xchg
and
inc
jb
cmp
push
push
adc
dec
in
add
subl
test
aam
int3
add
jmp
lcall
sub
or
outsb
pop
repz
jmp
mov
jnp
jecxz
lea
xlat
fmul
jns
xor
mov
jmp
jge
lds
inc
fdivl
inc
lods
and
lret
lret
push
lcall
mov
nop
dec
les
aas
push
xlat
xchg
jne
out
mov
sub
jae
mov
ljmp
in
adc
add
loop
xchg
add
std
cmpsl
repz
mov
mov
dec
push
pop
lahf
inc
js
fildll
aas
pop
pop
mov
dec
ficoml
loope
cwtl
icebp
dec
mov
push
push
and
adc
xor
xor
mov
jle
ret
adc
mov
in
inc
stos
add
dec
test
mov
movsl
add
lea
std
cmp
mov
mov
pop
pop
cmp
cmp
pop
mov
pop
mov
add
jae
push
xor
pop
sbb
pop
stc
push
mov
jno
ss
jo
dec
sbb
ret
repz
dec
sbb
dec
push
je
int3
fcomp
jno
sarb
mov
or
jb
jae
push
test
out
lds
rcl
push
pusha
rclb
out
ss
mov
xchg
fiadds
mov
cmp
test
out
fnsave
xchg
rorb
sub
or
dec
mov
sbb
inc
test
adc
divb
cmp
push
push
hlt
jns
push
sub
je
inc
fwait
aaa
push
and
push
inc
jg
sub
lock
sub
add
cmp
mov
inc
inc
ljmp
jle
dec
jp
push
mov
push
xchg
sbb
fsubs
fwait
push
jle
ret
mov
fwait
cwtl
xchg
cli
mov
ja
sbb
pusha
jge
dec
cmp
xchg
mov
inc
aaa
push
lret
test
movsl
mov
cmp
nop
loopne
fimuls
xor
pcmpeqb
andl
cmp
mov
xchg
aaa
or
xchg
sub
in
repz
decl
lea
mov
mov
in
pusha
xchg
and
mov
addl
xor
addl
add
xorl
mov
movl
movb
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
andl
add
orl
mov
adc
jmp
or
rcl
cmp
pop
jns
popa
in
mov
shl
jo
and
jo
lcall
xchg
jg
jns
fimuls
cmp
aas
aam
sbbb
jle
mov
pop
mov
rclb
aaa
fistpl
jbe
jo
inc
mov
xor
aaa
xor
jg
cmp
or
pop
stc
sbb
dec
movsb
imul
add
out
xchg
cs
mov
xor
pop
fs
and
pop
push
in
stos
dec
xor
push
push
popf
das
scas
das
push
push
mov
test
dec
inc
dec
xor
aam
aam
jae
insb
nop
xlat
cmpsl
or
mov
mov
mov
fbstp
push
mov
enter
mov
xchg
dec
ror
lods
xchg
jns
sub
push
ret
dec
xchg
xchg
outsb
test
jb
in
mov
lret
sarb
ds
push
add
adc
dec
xor
inc
repnz
pop
lods
mov
mov
dec
aas
adc
sbb
mov
shr
lret
ret
pop
shlb
adc
or
hlt
test
into
jg
sbb
pop
ja
xchg
and
in
call
push
jg
cld
stos
nop
mov
dec
inc
imul
js
je
stos
lock
lcall
hlt
add
jnp
pop
cmpsl
sbb
pop
mov
adc
ficoms
in
in
jo
out
adc
mov
leave
sbb
inc
jg
stos
jno
cmp
ss
pop
leave
lock
pop
in
sub
pushl
sahf
lds
fmuls
xor
in
into
xor
pop
jo
pop
xchg
gs
adc
xchg
dec
out
adc
add
repnz
addr16
mov
arpl
mov
add
jo
loop
outsl
stos
and
pop
jecxz
rorb
and
cmp
xchg
rclb
mov
push
push
pop
inc
lock
mov
jo
cmp
aam
dec
dec
popf
or
sti
lea
arpl
mov
adc
inc
adc
int3
scas
or
jbe
js
ret
sub
dec
xor
and
cli
jge
test
loope
sub
int
idivl
test
cltd
inc
mov
loop
lahf
and
addr16
fidivl
adc
shlb
cmovs
sbb
stc
es
mov
xlat
xchg
sub
fstpt
orl
lods
fdivrl
inc
popf
cmp
add
negb
or
cltd
cmp
jmp
dec
inc
ror
std
sti
std
or
dec
cmp
les
das
das
test
push
aam
ljmp
orl
lds
das
in
mov
loope
mov
jp
and
fdivl
movb
adcl
push
inc
mov
sbbl
xor
add
push
mov
orl
xor
addl
add
xorl
push
lea
push
addl
pushl
adcl
pushl
call
adcl
test
je
lea
sbbl
push
mov
jmp
xlat
and
insb
push
aaa
pop
push
push
sahf
fs
jo
and
jo
mov
jo
fs
pop
inc
push
mov
sbb
push
out
loop
cmpxchg
mov
sbb
in
mov
or
arpl
xchg
or
pop
inc
aas
popa
popf
sbbl
jno
mov
icebp
scas
int3
xlat
loopne
ljmp
daa
stc
fcomi
sub
push
sahf
js
mov
lods
mov
add
mov
push
or
mov
xor
dec
rcrl
addl
notl
sbb
arpl
aam
jae
pop
pusha
push
icebp
or
pcmpgtb
fmull
inc
stc
rcrb
jne
leave
das
cmp
out
add
pop
inc
sub
call
xchg
pushf
xchg
ja
inc
int
mov
bound
dec
mov
jns
fistps
adc
sti
dec
pusha
adc
mov
test
aam
enter
inc
loopne
push
lcall
test
inc
stos
push
enter
insb
notl
sub
imul
clc
push
jge
mov
push
out
outsl
imul
jmp
adc
nop
cmp
nop
in
mov
dec
pop
out
movl
cmp
icebp
scas
or
inc
xlat
mov
adc
std
neg
aaa
bound
pop
xchg
or
mov
aad
cltd
popa
cwtl
fcmovu
rcll
addr16
sbb
xchg
mov
cmc
loope
add
loope
jae
sub
loop
movsb
cli
incl
xchg
dec
pop
test
mov
mov
jg
cmp
std
fisttpl
pop
ficoml
in
xchg
cs
push
cmpsl
cmp
iret
sub
bound
xchg
mov
in
pusha
xor
push
jle
cmc
neg
nop
and
sub
scas
scas
and
repnz
adc
rolb
mov
fists
in
jl
pop
int
aaa
insl
sub
enter
es
dec
mov
mov
add
add
shll
jbe
jp
pusha
lret
dec
adc
aad
push
scas
cmp
inc
mov
jg
xchg
mov
jp
das
sub
pop
xor
sbb
dec
xor
jge
inc
mov
add
rcrl
push
xchg
mov
push
nop
mov
sbb
scas
or
lock
sub
repnz
imul
push
andb
jge
sbb
call
jmp
dec
loopne
add
adc
sbb
sbb
xor
adc
cmp
in
std
inc
pop
and
push
rorb
cmp
sub
jmp
fs
imul
xchg
mov
ds
imul
addr16
lods
and
mov
pop
inc
xor
xchg
sbb
cwtl
push
std
jne
repz
inc
push
daa
add
lahf
ds
and
arpl
sti
lods
xchg
ja
imul
mov
movb
push
mov
add
push
mov
mov
pushl
jmp
sahf
das
or
mov
mov
pop
mov
je
lock
and
jo
jne
sarl
incb
pop
mov
leave
incl
leave
xchg
mov
or
test
and
ficomps
xor
int
mov
or
adc
stos
das
inc
imul
sub
imul
rorb
add
les
dec
xor
addr16
or
jae
cmp
sbb
repnz
jle
into
mov
pop
xor
movsl
dec
cltd
mov
jne
jecxz
cmp
pmulhw
or
orb
enter
enter
rcr
jge
lea
mov
mov
sub
xchg
add
mov
sbb
jmp
stc
leave
es
ljmp
pushf
adc
ret
iret
cs
int3
pop
jl
add
xor
lcall
sub
sbb
add
inc
stc
jle
arpl
push
pop
lret
jns
popf
cmp
into
mov
test
cmp
cmpsl
fidivs
lea
les
arpl
jb
sub
inc
or
std
mov
test
aad
mov
fwait
cmp
jno
mov
stos
test
movsl
cwtl
movsb
dec
ret
loop
fwait
pop
test
inc
cltd
xchg
mov
dec
arpl
fs
xchg
aaa
pop
inc
int
je
jmp
mov
fwait
arpl
or
bound
stos
in
lods
xchg
pop
inc
jns
pop
push
jg
ss
cmpsl
inc
aaa
cltd
or
idivb
dec
in
subb
mov
outsb
enter
dec
mov
int
movsb
out
data16
pop
mov
mov
iret
mov
xlat
lods
aas
fstl
mov
push
xchg
jns
aam
mov
sbbb
and
add
or
push
lds
dec
mov
inc
leave
mov
sub
adc
push
out
xor
mov
jne
push
in
mov
mov
sub
aaa
in
cmp
outsb
shlb
arpl
int
nop
lods
cmc
fucomp
mov
inc
cwtl
shr
addr16
imul
mov
mov
mov
aad
sbb
adc
pusha
mov
rclb
sbb
pop
adc
pusha
shl
push
cmp
pop
push
sti
or
inc
rcll
fcmovb
ss
iret
enter
dec
pop
scas
imul
fdivrs
add
push
and
or
cmp
fisttpll
xchg
out
sbb
xchg
int
mov
popf
imul
fldenv
xor
adc
ljmp
pop
mov
dec
xor
adc
adc
outsl
pop
adc
clc
and
sub
push
orl
jp
shr
notl
aad
dec
inc
test
in
stos
mov
xchg
mov
sahf
int3
and
add
ja
lcall
into
js
add
add
shll
iret
sbb
je
mov
gs
ljmp
pop
les
cmp
clc
cmpl
jmp
in
outsl
pop
outsl
jne
data16
test
pushf
shl
addr16
and
jo
mov
iret
mov
gs
out
lea
xlat
cmpsl
jl
inc
push
insl
mov
cltd
cs
cmp
pusha
sbb
out
lds
sub
mov
popf
add
gs
push
mov
sbb
icebp
dec
mov
and
addr16
ror
adc
fiadds
daa
dec
sbb
loop
pop
sahf
rcl
js
aad
add
hlt
xor
adc
dec
lcall
add
std
sub
push
test
inc
aam
js
aad
shlb
ds
add
or
or
cmp
inc
xor
out
fisttpl
leave
jge
cltd
push
dec
pop
xchg
jge
out
loopne
popa
or
adc
jg,pn
lock
test
jmp
test
and
push
cmpsl
pop
add
lock
xchg
adc
xchg
mov
and
jecxz
mov
inc
das
push
sub
sbb
out
gs
pop
xor
imul
popa
inc
xor
adc
aad
outsb
sub
lahf
mov
popf
pop
popa
mov
test
insl
jecxz
lea
add
mov
scas
js
les
iret
jo
aas
push
xorl
ffree
mov
cltd
mov
aam
and
pop
lret
es
int3
scas
cmp
xor
add
leave
add
sbb
push
xor
andl
sbb
iret
iret
jmp
fwait
jnp
sub
aas
xchg
and
test
pop
nop
cwtl
addr16
sub
stc
jno
or
adc
mov
in
out
jle
xor
pop
and
in
inc
xchg
xor
inc
ret
les
add
pop
cwtl
inc
rcr
cmp
add
xor
int
xor
mov
ret
jg
loope
fidivl
iret
jo
mov
pop
push
mov
inc
mov
daa
inc
loope,pt
jle
mov
repz
cmp
cwtl
pop
or
push
or
push
loop
xor
mov
aam
leave
and
add
into
in
lcall
shlb
sbb
pop
subl
push
repnz
add
stc
iret
push
mov
int
cltd
dec
stos
aas
loopne
add
call
aas
jno
cmp
xchg
inc
out
mov
fisttpl
sbbl
sub
xchg
iret
pop
jl
out
or
fwait
aad
mov
stc
repz
jl
push
mov
push
mov
mov
nop
orl
adc
sub
push
push
cmp
and
fwait
mov
sub
inc
js
or
rcll
xchg
iret
test
gs
xor
loopne
aaa
stos
lods
out
adc
mov
aaa
in
sti
das
in
xchg
push
scas
jp
dec
addl
cmp
lcall
and
stos
mov
lea
mov
je
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
jmp
ja
mov
mov
mov
jo
jge
jo
add
pop
pop
rcl
jnp
push
push
pop
sbb
cmp
lea
cmpsb
out
mov
mov
movsb
pop
mov
fldt
cli
dec
xchg
ret
fcmovb
lahf
sbb
loopne
dec
insl
stos
nop
cmp
xor
sbb
add
or
mov
fldcw
movsb
in
pop
mov
pop
std
loopne
and
movsb
lcall
pop
lock
neg
mov
pop
loopne,pn
js
or
add
lcall
xchg
popf
cmp
lods
pop
lods
mov
push
push
xor
mov
xchg
pop
and
popa
sub
cmpsb
data16
into
xor
subb
cmp
shl
decb
data16
sub
mov
jmp
xor
sti
ficoml
cmp
mov
pop
push
push
arpl
std
sbb
popf
pop
lret
pop
fcompl
mov
jnp
nop
pop
lock
push
xor
shr
cmpsb
and
or
arpl
scas
adc
xchg
scas
lea
sub
jecxz
sub
enter
sub
pop
rcll
insb
xchg
jnp
dec
mov
and
lret
clc
lea
lcall
cmpsl
cwtl
jle
mov
jno
cmp
rcll
mov
mov
push
addb
jp
sti
sub
filds
das
xor
sti
sbb
fs
xchg
mov
and
dec
inc
cmp
cld
push
es
sub
mov
fisttps
rcll
enter
pop
mov
mov
lea
cmpb
jno
test
mov
cld
mov
jge
in
gs
sti
add
pop
shll
cmpsb
and
push
outsl
push
adc
roll
out
xchg
sub
jbe
addb
ror
nop
adc
fdecstp
sbb
in
std
jnp
mov
push
insb
adc
adc
sti
xchg
lahf
mov
outsl
pop
lods
mov
push
stc
pusha
les
aad
jbe
std
jb
add
fs
aam
push
mov
pop
pushf
inc
movsl
mov
adcb
cmpsb
push
mov
push
pop
jle
rcrb
dec
push
xor
jl
ljmp
xchg
aas
orb
mov
in
movb
adc
stos
mov
cmpsb
add
xorl
lret
jo
sahf
mov
jge
adc
data16
jmp
xchg
imul
dec
scas
xor
movsb
fcmovbe
mov
xchg
xchg
dec
inc
movsl
sub
pushl
ds
shlb
in
xor
xchg
imul
aad
in
loopne
pop
popa
push
sbb
xor
mov
dec
gs
push
imulb
sub
sbb
fs
mov
mov
inc
call
icebp
mov
call
dec
add
add
fisttpl
jp
xchg
mov
out
jo
and
jo
mov
jo
cmp
push
lcall
mov
sbb
test
mov
in
mull
cmp
xchg
sub
pop
out
or
mov
fsub
push
jmp
insl
adc
sbb
pop
stos
arpl
outsl
stos
mov
jp
addr16
sub
pop
push
push
and
xor
jecxz
popf
clc
in
inc
stos
ror
jmp
lret
push
sub
jnp
add
inc
cmp
test
push
outsb
adc
hlt
push
adc
rcrl
xchg
pop
jle
ja
mov
les
aad
int
frstor
mov
add
scas
shll
fsubl
gs
mov
aad
cli
inc
pushl
pushf
stos
sub
test
pop
mov
mov
rcll
or
in
in
jp
lret
stos
jnp
jb
sbb
mov
xor
insw
cltd
pop
mov
jno
dec
stos
xchg
sub
mov
cli
out
mov
or
es
dec
push
iret
and
repnz
and
fcompp
or
stos
add
mov
add
loopne
imul
lods
dec
in
outsb
mov
and
dec
adc
and
aas
sub
mov
cltd
ret
dec
xchg
mov
push
sbb
jno
add
push
add
mov
int
lcall
mov
mov
inc
in
iret
xchg
mov
ret
lock
arpl
cmp
nop
imul
hlt
mov
sub
movsb
jns
cmp
push
cmc
call
arpl
jne
jecxz
aad
lods
sub
or
outsl
dec
add
sub
in
and
jmp
arpl
mov
mov
add
es
popf
iret
lret
cmp
or
dec
mov
loop
dec
push
arpl
rclb
mov
shll
jb
jne
cmpsb
jns
and
das
xchg
repnz
iret
rorl
stos
inc
faddl
mov
jl
pusha
add
into
adc
ret
rorl
pop
in
push
inc
data16
xor
mov
push
es
mov
movsb
in
stos
ds
ds
insl
lret
aam
mov
jecxz
fdivl
add
mov
lods
and
adc
mov
pop
add
and
jl
popf
pop
bound
add
popf
add
divb
add
std
arpl
pusha
loopne
scas
int
pop
cmp
mov
jne
clc
adc
and
cltd
daa
rcr
cwtl
sbbl
rcrb
jecxz
sbb
mov
js
repnz
inc
cltd
add
inc
add
daa
inc
mov
fnstenv
sbb
jo
in
cmp
stc
movsl
cmp
popf
je
pop
out
jp
test
test
test
mov
add
inc
clc
push
cmp
clc
incb
inc
push
jmp
mov
fwait
xchg
fwait
jae
roll
jge
sahf
xchg
fdivl
and
jo
inc
dec
jnp
cli
mov
test
mov
jns
push
push
xchg
push
in
mov
jmp
iret
lret
dec
jae
push
jnp
rcrb
mov
lcall
flds
sbb
rolb
iret
add
gs
in
rol
imul
push
cmp
in
pop
adc
xor
or
and
stc
enter
fsubr
cmpsb
and
mov
arpl
lahf
mov
iret
push
cld
fstpl
movsb
push
cmc
ficompl
lret
mov
jnp
bound
mov
xchg
mov
hlt
xor
push
mov
jbe
lods
sub
fisubl
jae
bound
cli
and
dec
xchg
das
jbe
push
arpl
dec
mov
aad
hlt
out
inc
and
mov
jg
lahf
roll
nop
pop
das
push
lock
cmp
add
insb
add
pop
iret
scas
jle
stos
mov
ret
clc
dec
nop
ss
xchg
add
bnd
fldcw
std
lds
mov
add
mov
mov
out
es
jae
add
ret
jns
inc
cmp
and
std
push
xor
mov
or
pop
sahf
sbb
pop
ljmp
imul
fisubl
or
mov
xor
sub
fstpt
std
iret
adc
inc
mov
inc
mov
fidivs
mov
push
xor
cmc
jmp
cmp
lock
mov
push
add
push
pusha
push
mov
test
mov
xchg
xor
pop
add
mov
mov
shrb
jnp
test
cmpsb
icebp
aam
mov
inc
arpl
adc
sahf
adc
dec
xchg
xor
cwtl
mov
mov
jne
ja
pop
lahf
les
pop
orb
pop
in
add
cmp
call
lret
in
mov
jecxz
fmuls
fistpl
mov
cmp
sbb
cmp
push
test
sarb
setg
dec
sahf
push
mov
out
addb
es
push
xchg
popf
lds
mov
cmp
repz
popa
inc
fidivl
jg
mov
inc
inc
dec
xchg
cmpsl
xor
jle
jl
push
xor
mov
movsl
out
outsb
lods
fcmovnb
fidivrs
jne
dec
mov
arpl
ds
ss
jbe
aas
inc
cmp
insl
cmp
inc
pop
in
notb
and
aaa
in
aad
enter
divb
fnstsw
roll
adc
or
repnz
xchg
xchg
mov
lock
and
dec
adc
mov
std
dec
fdiv
pop
test
jle
dec
imul
inc
mov
adc
or
dec
movsb
rcr
mov
dec
xchg
decb
pushl
mov
mov
pushl
lea
jmp
mov
push
mov
bound
fwait
inc
fnstenv
and
jo
inc
mov
scas
ficomps
sbb
push
enter
in
xchg
push
fst
stc
pop
cmp
mov
inc
mov
add
dec
mov
adc
imul
sbb
lock
pop
pop
jno
cmpsb
clc
lret
adc
or
mov
aam
mov
and
lret
sub
or
enter
popf
enter
inc
xor
stos
xor
inc
and
insb
sub
aas
test
insb
subl
ds
cli
loopne
out
sub
sbb
add
sub
mov
into
arpl
inc
rcll
pusha
and
out
lahf
iret
xor
sub
cwtl
repz
push
out
lret
rolb
ror
cmp
lods
mov
lea
movups
xor
lock
imul
pop
inc
incb
lahf
mov
in
pop
jae
jmp
lds
mov
xchg
or
add
jne
inc
test
sti
push
sbb
cli
sbb
aad
sbb
or
push
mov
imulb
push
xor
and
popf
xchg
and
testb
xchg
dec
popf
mov
jne
loop
xchg
or
adc
xchg
cmp
es
pop
sbb
cmp
int
push
push
int3
and
push
adc
int3
mov
push
mov
xchg
xchg
fstps
aad
insl
notl
sbb
sub
je
mov
cmpsb
xchg
enter
and
ss
cli
clc
jnp
and
lods
or
or
pop
cwtl
dec
cltd
shll
out
gs
incb
jmp
iret
and
sbb
jmp
bnd
pop
xor
das
in
xor
sub
hlt
jg
pop
out
test
inc
sbb
push
xor
xor
pop
shlb
scas
imul
sub
adc
aas
push
mov
mov
rclb
inc
add
cli
mov
ret
sub
fs
jo
shll
jnp
mov
add
out
lsl
mov
adc
pop
cmpsb
pop
popf
cltd
pop
mov
lcall
push
cmpsb
sub
jb
es
or
in
shlb
jae
sbb
popa
xchg
aaa
enter
inc
mov
xchg
jl
fucomip
stos
outsl
and
adc
roll
cmpsb
test
jae
pop
das
xorb
outsb
and
jae
arpl
lds
jmp
jne
inc
cmp
and
dec
sub
fsubr
xchg
jge
int
repz
clc
mov
inc
ljmp
pop
sub
cmpsl
inc
aas
out
gs
enter
test
jecxz
jae
test
or
ljmp
repnz
or
inc
mov
push
adc
out
push
sarl
add
xor
xor
sar
xor
add
dec
add
add
out
out
xor
call
shll
lret
jo
and
jo
pop
jle
movb
vpaddd
test
push
xchg
cmpsb
leave
xchg
pusha
cmp
and
pushf
adc
test
imul
or
mov
xor
js
xor
aas
icebp
lods
stos
jbe
aam
pop
fidivl
xlat
ja
imul
iret
in
or
lcall
push
jns
jmp
mov
mov
mov
cld
sbb
idivl
hlt
dec
das
sub
or
in
pop
js
xor
sbb
sbb
daa
jne
sbb
inc
rcrb
rorb
sub
sbb
fnstsw
inc
adc
out
and
mov
pop
xchg
inc
sub
clc
lret
dec
inc
cwtl
aaa
xchg
loopne
imul
addr16
push
pop
mov
inc
icebp
jno
cmpsb
ds
mov
clc
xchg
jns
xchg
mov
xchg
xor
add
rclb
push
mov
fsubl
repnz
call
clc
fisttpll
lcall
pop
stos
pushf
mov
imul
xchg
movsb
xchg
pop
jb
sbb
out
cli
rcr
xchg
jle
test
or
sub
add
or
stos
aad
dec
js
add
es
pusha
adc
inc
jge
push
cwtl
adc
out
inc
sbb
jp
xlat
push
cmp
dec
jne
insb
int3
lea
or
inc
icebp
jnp
adc
fwait
pop
or
hlt
add
pusha
lods
jb
mov
ret
cmp
sahf
in
push
test
repz
push
lods
insb
rcrb
popf
adc
bound
jp
inc
push
loop
fidivl
sub
mov
push
out
cmp
cmpb
sub
or
sbb
clc
mov
sub
mov
sub
pop
jbe
popa
dec
xor
and
or
popa
or
popf
dec
out
movsl
inc
jns
pop
and
sub
lock
je
nop
dec
xchg
mov
dec
pop
push
lea
or
in
add
test
push
bound
jp
xchg
mov
and
push
xor
cli
jne
insl
mov
ja
addr16
sbb
sbb
repnz
insl
adc
test
xchg
bound
cltd
lea
lock
jmp
ficoms
arpl
addb
outsl
push
call
mov
pop
cwtl
xor
add
sar
mov
xchg
inc
out
arpl
push
jnp
movsl
xchg
lcall
scas
xor
in
fwait
test
dec
imul
mov
test
or
add
pushf
mov
cmp
int3
shlb
sbb
mov
and
mov
sar
mov
aas
pop
inc
int3
jo
push
adc
ret
mov
sbb
xor
add
xor
add
xor
jmp
push
pop
jmp
cmpsb
jnp
or
lahf
jo
and
xchg
daa
loop
jo
jge
jo
xchg
stos
clc
add
pop
push
adc
sub
sub
in
cmp
cmc
mov
mov
daa
shl
lods
jmp
add
inc
xchg
adc
jmp
repz
aam
cmp
pop
sbb
push
mov
shlb
mov
mov
and
xlat
mov
mov
dec
adc
loope
cmpsb
and
imul
fdivrl
vminss
dec
clc
dec
adc
jp
es
sahf
add
sbb
mov
push
int
xchg
enter
xchg
inc
ja
inc
cmp
into
mov
xchg
dec
js
testl
hlt
push
ficomps
xor
icebp
push
bound
loope
cmp
xchg
xchg
jecxz
sbb
lcall
jb
out
out
shll
cmpsb
stc
and
ljmp
xor
in
and
int
push
adc
push
out
jae
mov
mov
mov
sbb
into
or
das
xchg
mov
fs
xchg
nop
movsb
inc
insl
cmc
fwait
add
ss
pop
pop
mov
pop
xchg
fdivrp
ficoms
cmp
xchg
in
jg
mov
pop
jmp
inc
push
ja
or
dec
imul
std
addr16
adc
int
sub
add
js
imulb
pop
movsl
nop
test
dec
inc
and
lcall
push
sbb
aaa
mov
mov
pop
jmp
imul
fmull
ds
sub
sbb
outsl
test
cmpsb
and
std
xor
inc
mov
xchg
mov
adc
xor
mov
or
inc
mov
and
lahf
jno
repz
movsb
xchg
lcall
mov
stos
in
mov
xchg
mov
mov
push
jmp
popf
in
add
mov
scas
inc
or
mov
loope
mov
add
and
cmp
outsb
lahf
lret
icebp
punpcklbw
jno
inc
sbb
push
mov
sub
movsl
or
cwtl
subb
and
xchg
jl
or
lahf
daa
or
mov
or
or
xchg
sbb
cmp
cmpsb
push
data16
mov
inc
mov
push
mov
lods
rcrl
stos
rolb
loopne
mov
addr16
je
test
sub
sbb
lcall
loope
adc
lods
inc
xor
bnd
xor
xchg
mov
adc
jb
mov
sub
adc
rcrb
cli
ljmp
xlat
sub
push
xchg
mov
dec
pop
inc
dec
lods
pop
faddl
pop
mov
jns
mov
out
enter
daa
adc
sbb
mov
inc
in
push
fimull
adc
mov
mov
jmp
out
mov
ja
add
xchg
jl
xlat
out
jo
and
jo
push
push
fs
icebp
arpl
inc
test
cli
repz
mul
and
mov
adc
cmp
sbb
ja
mov
imul
pop
cs
push
or
enter
adc
sti
jne
daa
jle
cmp
add
mov
pop
or
or
scas
jno
sarb
cli
cmp
ljmp
push
and
addr16
int3
lahf
jecxz
inc
and
hlt
repnz
cmc
test
jmp
mov
dec
lock
jo
push
imul
outsb
mov
aas
fdivrs
push
pusha
push
cmc
inc
sar
xor
aam
mov
xor
and
jmp
xchg
mov
mov
and
fcom
negl
add
xchg
cli
ror
jle
iret
test
lock
lds
sub
sub
int3
and
or
push
pop
pop
rorb
imul
rep
dec
in
stos
mov
jmp
xchg
pusha
cmpsb
inc
repz
and
push
sbb
in
popa
adc
icebp
fsts
or
adc
mov
scas
mov
in
jp
stos
pop
in
stc
jmp
pop
loop
and
mov
dec
lret
xorps
mov
stos
adc
xchg
mov
sbb
pop
push
js
int
fisubrs
clc
lea
mov
push
dec
ret
mulb
or
int3
dec
je
inc
adc
push
je
mov
out
xchg
ss
dec
leave
dec
mov
pop
xchg
ret
inc
andl
or
adc
bound
or
jbe
fisubl
pop
mov
iret
adcb
jo
pop
gs
dec
and
push
ljmp
nop
adc
cmpsb
inc
loope
movsl
push
das
xchg
jmp
aaa
fistps
das
pop
mov
into
xchg
cmp
fs
mov
fbstp
cmp
mov
jns
pop
sub
test
fsubrl
fisttpl
imull
fcoms
pop
adc
ret
sub
push
adc
inc
xchg
loope
mov
and
cltd
rcrl
cwtl
push
push
cmpl
xchg
mov
cmpsl
inc
fsubs
sbb
aaa
pop
hlt
fidivrs
sbb
dec
adc
out
jb
stos
mov
loopne
cltd
out
dec
roll
ret
lcall
fs
and
std
stos
mov
mov
mov
xor
xor
sub
sbb
dec
outsl
lods
ja
sub
pusha
push
test
sub
adc
in
out
push
ficoml
mov
loope
sbb
iret
mov
div
or
mov
dec
cmp
insl
lret
push
int3
aaa
iret
sbb
and
sbb
mov
inc
inc
cmp
sub
dec
jbe
call
cmp
stos
cmc
insl
out
inc
cmp
or
pop
leave
ret
push
mov
sub
push
subl
mov
sbb
mov
mov
mov
sub
imul
mov
movl
neg
movl
mov
mov
or
mov
add
mov
adcl
mov
xor
xor
mov
sbb
mov
jmp
arpl
cmc
xchg
cmc
arpl
pop
das
testl
in
jo
lahf
jge
jo
push
pop
jmp
jecxz
xchg
xor
sarb
pop
gs
test
addr16
out
push
adcb
adcb
out
sbb
xor
cmc
mov
and
mov
xchg
push
in
fwait
push
sahf
or
sar
pusha
or
sbb
lret
jecxz
insb
add
jp
pop
ficompl
mov
divb
mov
pop
lret
inc
addl
shlb
decl
arpl
fsubrl
cmp
addr16
inc
rol
test
insl
inc
orl
xor
xchg
inc
loop
fdivr
lret
sub
insl
pop
xor
xchg
out
fucomip
jne
movl
mov
call
mov
mov
inc
add
shr
mov
mov
cmp
or
sbb
sub
shrl
testl
lods
stos
push
jl
fmuls
xchg
lock
aaa
out
push
xchg
sti
push
call
and
out
adc
mov
lcall
mov
out
jbe
sub
test
rorl
pushf
fnsave
dec
or
idivb
gs
in
fbld
sub
out
or
inc
cmp
mov
ret
jl
cltd
push
jge
or
out
mov
ret
fbstp
mov
push
jb
dec
push
fdivr
aad
inc
mov
adc
and
push
mov
inc
imul
and
xor
push
cmp
andl
fimull
in
xchg
sbb
in
push
hlt
fs
cmpsb
jno
jmp
inc
cmp
mov
lds
jno
jno
add
mov
out
bound
addl
dec
sub
cmp
mov
xchg
cmp
in
jmp
in
jnp
aad
int
mov
and
or
mov
out
jo
and
ffreep
ja
xchg
mov
pop
das
cmc
popf
divb
fsubr
out
movsl
gs
mov
cli
clc
mov
jbe
bound
je
inc
inc
push
push
ds
mov
mov
xchg
test
sub
adc
idiv
sub
mov
dec
adc
and
mov
push
xchg
inc
stc
dec
jecxz
repz
addr16
jae
insl
lods
lock
cwtl
push
xchg
or
ret
xchg
std
insb
fadds
xchg
xor
cmp
mov
fimuls
out
cli
adc
or
in
push
mov
dec
inc
out
lahf
or
fwait
add
dec
mov
sbb
incl
and
mov
adc
and
pusha
inc
test
sbb
xchg
xchg
stos
adc
inc
mov
rorb
stos
push
and
xchg
mov
cmp
pop
repnz
pop
iret
dec
into
dec
jge
nop
mul
idivl
dec
pop
dec
test
lea
outsl
adc
scas
movsb
cltd
scas
jns
jbe
xchg
or
mov
roll
sbb
out
rorl
cwtl
xchg
push
insl
pop
mov
mov
mov
inc
rcll
jecxz
xor
mov
lods
fs
xchg
and
test
fs
dec
sarl
loope
and
add
xor
mov
mov
and
xor
adc
add
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
adcl
jmp
xlat
mov
mull
mov
mov
dec
es
jo
mov
xchg
sahf
push
int
or
push
icebp
dec
add
jmp
pushl
loopne
pop
or
sub
in
loop
dec
push
cmpsb
rolb
sbb
in
jno
sub
daa
xchg
sub
repnz
and
out
xor
addr16
mov
jmp
cs
pop
jno
fucomip
fnstsw
mov
mov
cli
mov
aad
shll
sbb
cmpsb
cmp
outsl
shll
sub
push
lds
dec
cmp
loope
adc
push
or
inc
sub
leave
imull
loope
fisubrl
pop
lcall
pop
xor
xor
xchg
or
xor
xor
hlt
movsb
ljmp
ficoml
cli
xchg
add
mov
jg
mov
and
popf
cmp
cmpsb
ret
mov
mov
or
iret
mov
sbb
je
pop
popf
movsl
mov
xor
jmp
data16
inc
inc
testb
jns
popf
imul
inc
movsb
adc
cmpsl
mov
xchg
push
adc
xor
mov
add
lods
lahf
in
addl
mov
xchg
int3
jmp
inc
lods
rcll
jecxz
sub
rep
movsl
outsl
sbb
mov
lcall
cmp
xchg
fcompl
xor
jge
ret
faddp
cmp
pop
ss
push
add
call
inc
fwait
dec
jmp
mov
lret
movsl
and
roll
fistpl
or
cwtl
shrl
push
mov
cmp
outsl
adc
arpl
mov
fiadds
sbb
xchg
xor
enter
fisttpll
jl
pop
mov
outsl
push
ja
lods
in
sbb
adcl
icebp
push
and
lods
pop
pop
sbb
cli
add
push
nop
pusha
pusha
stos
ds
lea
dec
outsb
cmpl
mov
add
mov
xchg
inc
aas
and
mov
add
lahf
xchg
test
aam
in
pop
sub
push
xor
mov
fiadds
int3
popa
push
scas
fimuls
inc
push
pusha
out
and
call
pop
dec
xor
out
lahf
add
xchg
xchg
mov
and
jo
push
int
cld
sub
fiadds
stos
xchg
pop
and
pop
dec
pop
loope
int3
test
cli
jns
push
insl
lret
mov
call
or
jb
cmp
lea
out
ret
mov
cmpl
push
jmp
sbb
sub
mov
cwtl
and
fiaddl
pop
mov
xchg
adc
sbb
cmp
mov
pop
mov
test
bnd
adc
push
mov
fisttpll
cmc
or
int3
xor
and
xlat
xchg
push
aas
es
cmp
or
inc
call
push
push
pushf
inc
mov
mov
fnstsw
mov
jo
fisubrl
pop
xlat
pop
inc
dec
mov
arpl
push
aaa
and
fst
mov
into
cli
sub
out
neg
enter
xchg
and
lods
mov
cmp
divl
movsl
rorl
mov
js
cmc
push
lds
jl
inc
cld
roll
fdivs
test
aam
test
inc
add
add
add
sldt
add
rorb
adc
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
add
movl
andl
jmp
into
iret
cmpsb
cmp
sbb
loopne
adc
inc
cmc
jo
lahf
jge
jo
adc
and
mov
push
push
mov
push
orb
or
pop
mov
and
mov
call
add
xor
or
jo
fcmovnu
imul
loopne
movsb
push
sbb
data16
push
pusha
pushf
add
adc
mov
cld
xchg
aas
mov
lret
mov
cmp
mov
cltd
mov
or
mov
ljmp
dec
aaa
clc
je
mov
cltd
xor
dec
xchg
fimull
mov
divb
mov
xchg
xchg
ss
lds
loope
aas
xor
dec
in
movsl
ja
jle
sub
cs
imulb
or
jmp
xchg
mov
ja
movsb
jge
mov
lcall
push
out
inc
jne
xor
xor
cmp
fwait
ret
mov
enter
pop
xchg
scas
jnp
mov
push
movsb
push
in
idivb
ja
test
mov
pop
in
jae
cs
cld
pop
xchg
sub
rcrb
cmp
jmp
loop
movl
repz
fcomi
pop
jle
xorb
mov
mov
pop
bound
imul
scas
dec
mov
cltd
faddp
inc
imul
mov
mov
mov
push
insl
cmp
js
jmp
push
insb
shll
data16
jl
ljmp
sub
ret
cmpsb
add
es
push
cmc
jmp
xor
ljmp
movsb
and
jne
jp
hlt
and
test
call
fstl
bound
sub
push
into
out
lahf
testl
incl
adc
jnp
insb
fiaddl
mov
mov
dec
pop
lahf
mov
push
sbb
test
pop
sub
inc
sub
mov
inc
lcall
scas
mov
mov
xchg
or
fwait
mov
push
jg
push
pop
negl
shlb
rorl
add
pop
lea
mov
mov
ds
xchg
push
popa
jg
iret
mov
mov
out
fidivrs
lcall
daa
pushf
repz
loop
movsb
nop
cli
loopne
jg
mov
lods
cltd
jno
hlt
popa
dec
addl
pop
mov
stc
and
add
mov
rorl
in
adc
loop
imul
push
cld
inc
dec
xor
cld
test
sub
push
pop
stc
or
fwait
movsl
loope
gs
js
sub
adc
adc
xchg
add
lods
daa
xchg
add
loopne
outsb
mov
xchg
loope
lock
push
sbb
dec
push
sbb
aaa
outsl
in
or
mov
test
insb
mov
and
std
sub
push
inc
cmp
ret
mov
orb
xor
sar
mov
pop
xchg
sahf
mov
out
xchg
js
xor
les
loop
lods
in
dec
xchg
popa
xchg
xchg
icebp
leave
sub
mov
push
sub
rolb
fwait
cltd
add
mov
call
nop
arpl
or
repz
test
test
inc
add
add
add
rorb
adc
inc
mov
cmpl
jne
pushl
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xor
mov
movl
adc
mov
xor
sub
mov
add
movl
cmp
movl
je
movl
push
movl
jmp
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xorl
sub
mov
add
mov
jmp
addr16
xchg
jno
ja
dec
in
std
addr16
sarl
icebp
jo
lahf
jge
jo
jnp
ss
push
out
lds
fisubs
aaa
mov
dec
jp
aaa
add
into
jne
mov
inc
sub
and
int3
pop
xchg
fadd
cmpsl
lret
leave
sbb
pop
insl
and
pop
insb
push
sbb
xchg
cmp
adc
xchg
cmpl
ret
adc
sti
xor
out
pop
ret
sar
pushl
scas
xchg
mov
adc
xlat
fistpll
lods
ffree
dec
orb
call
xor
sbb
jl
sub
push
outsl
outsl
in
sub
jbe
popa
aaa
mov
shl
in
jmp
or
xchg
cmp
jns
ret
sbb
push
add
sbb
movsl
in
jb
mov
loop
jne
dec
adc
inc
popf
cltd
jb
inc
lods
inc
mov
inc
lock
out
pop
mov
xchg
dec
sahf
stos
inc
stos
push
addr16
inc
gs
adc
mov
or
pop
cld
lods
inc
push
ss
sub
pop
lea
es
lods
xchg
in
xchg
xchg
xchg
lret
lods
mov
mov
push
inc
dec
and
sti
mov
outsl
gs
daa
pop
jp
xor
xchg
pushf
fildl
roll
cmpl
imul
movsb
xchg
ficoml
popf
sarl
dec
pusha
aad
test
jge
pusha
fsubrl
insl
scas
add
loopne
pop
pusha
inc
mov
mov
sub
adc
stc
sbb
lods
inc
dec
in
aas
lahf
in
roll
sbb
mov
movsb
inc
ss
movsl
and
loope
adc
pop
push
les
sahf
mov
or
fnstcw
add
add
or
jns
cwtl
insl
repnz
into
push
sti
orb
fstpl
or
jl
aam
sub
jno
pop
sub
dec
and
jns
and
cmp
push
pop
sub
es
repnz
fimuls
pusha
jnp
sbb
push
sub
sub
sub
in
xchg
das
mov
lahf
andl
sbb
jecxz
in
xchg
int3
insl
sbb
xchg
sbb
test
ljmp
call
xor
push
sub
addr16
sbb
sub
jne
or
and
or
add
orl
or
je
enter
cld
icebp
mov
andl
int
mov
call
mov
add
sub
in
inc
mov
or
clc
mov
sarb
repz
jmp
adc
jmp
ds
mov
mov
aaa
mulb
cmp
jo
push
adc
bound
mov
pop
cmp
fcompl
test
or
mov
mov
btr
mov
jnp
jne,pn
sbb
les
push
xchg
outsl
jns
stc
insl
rorb
icebp
sub
mov
stos
into
mov
scas
testl
jmp
inc
mov
loop
movsb
je
inc
xchg
mov
sub
jae
enter
fildll
and
std
jae
or
push
cmp
int
lock
and
cltd
mov
sbb
iret
xchg
lods
test
lcall
xor
xorl
add
movl
cmp
movl
jb
mov
sbb
mov
xor
sub
xor
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
pushl
call
mov
dec
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
adc
add
sbb
add
imul
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
jmp
xor
mov
mov
jae
jg
ja
pushf
enter
jo
lahf
jge
jo
add
call
push
int3
lods
add
shl
jecxz
inc
sub
inc
xor
mov
scas
mov
sub
lds
inc
cltd
aam
xchg
add
sti
inc
xor
cmp
inc
leave
xchg
or
cmp
push
xorb
sub
sub
cltd
xchg
cltd
xchg
mov
es
dec
repnz
stos
aas
xlat
mov
out
dec
pop
xchg
push
jmp
add
or
mov
inc
add
cmpsl
mov
mov
cli
jmp
aad
xchg
fisttps
cld
addr16
fists
adc
lods
cmpsl
pop
and
das
jne
ret
jno
ds
xor
dec
fs
jno
out
lock
pushf
mov
pop
iret
or
les
pop
mov
push
push
push
out
jo
dec
icebp
xor
dec
jmp
and
lods
push
imul
and
iret
leave
les
mov
push
jns
pop
pop
xchg
addr16
pop
adc
sbb
test
mov
insb
movsb
jnp
dec
movsb
push
jge
sbb
cmpb
mov
xor
push
cmp
and
xchg
xchg
mov
fiaddl
sbb
out
inc
ja
push
and
jg
adc
insl
nop
fstps
inc
mov
adcl
movl
mov
sbb
dec
lds
testb
xor
dec
sub
and
and
push
es
test
mov
mov
sub
jle
popa
rcrl
mulb
dec
adc
inc
or
and
jbe
jge
pop
cmp
loopne
push
add
adc
cmp
lea
into
jnp
mov
inc
pop
test
and
and
pop
movsl
push
stos
in
call
mov
ret
mov
rorl
adc
fldcw
aam
sbbb
orb
fcomps
pop
push
shl
fldt
add
sub
xchg
sub
sub
jl
add
and
push
add
add
mulb
shrl
lock
dec
xor
out
outsl
insl
out
or
repz
adc
xor
sub
imul
dec
jb
daa
pop
sbb
add
ret
push
dec
jae
and
inc
stos
in
movsb
ljmp
mov
sub
out
or
jae
mov
mov
lds
sub
xor
pop
and
fsubs
scas
mov
sub
xchg
scas
lea
adc
lods
xchg
test
enter
pop
mov
cmpsl
fstp
push
scas
push
xlat
aaa
popf
fwait
shrb
aas
pop
ja
jmp
push
cmp
xchg
lahf
bound
push
cmp
sub
sbb
cmp
cmp
and
sub
jmp
cmp
std
sbb
stos
inc
fucomip
shrl
ja
shrb
and
inc
rorb
jmp
sbb
loop
push
test
sbb
dec
movsl
jp
xlat
ret
testb
shll
cmpsb
push
pop
cmp
lret
sti
sarl
les
jo
out
scas
or
sbb
add
jmp
shlb
sub
lret
mov
lret
jmp
lahf
jge
jo
pop
xchg
add
mov
test
jb
out
iret
lcall
sub
hlt
les
pusha
mov
lret
loope
mov
lds
push
dec
std
xorl
jnp
and
aad
into
hlt
xor
or
push
shr
fisttpll
dec
test
scas
ret
ljmp
sti
jo
inc
or
mov
push
cmp
hlt
std
mov
fnstenv
cmp
js
push
cmp
adc
inc
dec
mov
ret
pop
jae
pop
fs
pop
shl
or
add
loopne
lret
icebp
xchg
stc
mov
sahf
add
stos
fdivs
dec
mov
leave
lcall
jmp
cmp
fisubrs
pop
adc
mov
pushf
push
movsl
cld
aaa
xor
aam
test
xchg
xchg
xlat
mov
dec
or
inc
outsl
mov
mov
insl
es
sub
cmp
lock
mov
into
sahf
jo
mov
xor
sbb
inc
pushf
inc
mov
push
data16
outsb
sub
sbbb
pop
dec
add
call
push
push
fdivrs
jge
aad
das
xchg
rcrb
aad
outsl
jae
stos
or
pop
aas
mov
jg
hlt
aam
mov
in
push
xchg
jmp
mov
int3
dec
int3
testb
arpl
loope
jp
fdivrs
xchg
inc
cltd
das
rcr
lret
repnz
shrl
lock
push
roll
xchg
mov
mov
cmp
mov
int
mov
and
mov
ljmp
adc
jnp
jne
mov
insb
pop
pushf
cmp
mov
push
mov
fwait
ret
xlat
loope
push
inc
das
jecxz
push
arpl
sbb
adc
outsl
jo
sbb
test
sbb
stos
aaa
loope
pop
pop
pop
pop
addr16
push
dec
xlat
mov
shll
mov
inc
mov
mov
pop
xor
lfs
sub
lahf
lret
mov
test
adc
push
shlb
jl
jno
xor
pop
push
xchg
xchg
adc
lock
sbb
rclb
mov
es
xor
and
xor
sub
js
cmc
roll
jmp
or
out
lahf
fistpl
out
cmc
test
rorl
test
fnstsw
in
iret
fbstp
sbb
push
pop
sti
push
stos
adc
and
aam
sbb
loope
cmp
sbbl
xchg
sub
mov
loop
mov
pop
xor
xchg
sbb
arpl
xchg
mov
sub
inc
lcall
mov
push
mov
dec
movsl
std
xchg
mul
stc
xlat
popa
add
fwait
xchg
clc
jne
shrl
jbe
arpl
out
inc
inc
in
loop
pop
and
int3
lds
xchg
xor
jne
mov
subb
mov
add
sub
or
cmp
add
cmpsl
push
testl
or
aaa
test
out
ret
ret
ja
or
cld
rorb
hlt
xor
rorl
jae
or
mov
into
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
jmp
cmp
mov
loope
loop
pop
stc
push
roll
jo
pushl
daa
and
cli
mov
xchg
adc
and
inc
sarb
je
mull
lret
mov
xor
push
in
sub
mov
gs
fstpl
stc
mov
cwtl
and
mov
rorl
xchg
or
loopne
xchg
bswap
pop
std
in
gs
bnd
scas
fsubr
lea
push
xor
outsl
gs
lret
xchg
cmp
cmp
jno
test
pop
cmp
enter
mov
ljmp
mov
roll
inc
in
addl
inc
pop
pop
add
sub
jmp
mov
daa
daa
add
lds
gs
add
iret
and
rcl
ja
fwait
mov
pop
xchg
or
lahf
repnz
mov
mov
out
xchg
jb
sub
outsb
push
mov
mov
sub
dec
lods
ret
jl
popa
mov
push
fnsave
ret
lods
sbb
push
add
sbb
pushf
out
mov
lret
aam
and
sub
adcl
fdivp
add
scas
push
icebp
fucomi
test
adc
nop
xchg
rcrb
push
ljmp
lret
xor
or
mov
adc
jno
sti
and
out
or
bound
leave
lcall
pop
xlat
std
dec
out
nop
test
mov
insb
cmp
cltd
fstp
inc
test
pop
call
jns
inc
call
push
pop
inc
dec
frstor
push
push
test
push
jg
sbb
in
mov
imul
xchg
out
sbb
fwait
xor
cmp
orl
scas
int3
xor
jmp
enter
jno
lock
aaa
in
push
dec
push
mov
jae
mov
jecxz
pop
ja
fld
pop
int
scas
mov
pop
idivb
insb
jecxz
dec
movsl
jle
sbb
mov
mov
outsl
sub
fdivl
test
jle
dec
sbb
add
call
mov
push
scas
mov
push
mov
sub
mov
inc
and
pop
pop
mov
mov
test
fisubrl
sarb
inc
mov
loope
adc
jo
mov
sub
adc
push
out
pop
mov
test
std
dec
dec
ljmp
cld
sub
dec
inc
xlat
pop
inc
inc
add
mov
adc
sbb
cmp
jecxz
insl
in
jmp
int3
cwtl
std
xchg
out
data16
mov
sub
push
repnz
sbb
dec
pop
jmp
xor
sub
negl
xlat
fwait
xor
pop
push
mov
mov
cmpsl
cltd
cwtl
hlt
imul
dec
add
push
mov
dec
iret
sarb
jle
pop
cmc
mov
xchg
push
arpl
loope
adc
mov
and
push
pop
adc
and
lods
push
or
addr16
in
xchg
pop
add
pop
xor
cmpsb
push
or
lcall
xor
sbb
and
aad
idiv
int
inc
mov
jp
movsb
inc
fldl
lret
sbb
pop
imull
push
pop
mov
mov
out
pop
add
in
mov
push
jo
mov
xorl
rorl
mov
and
cmc
pop
xor
jge
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
xchg
fcomi
push
jb
mov
shlb
push
pusha
xorl
jge
jo
xchg
sbb
mov
sti
sub
stos
jg
push
and
pop
fdivl
enter
mov
or
xchg
cwtl
enter
xchg
arpl
add
leave
push
cmp
xchg
sbb
sub
lods
or
pop
push
xor
jbe
or
sbb
sahf
and
push
mull
push
xorb
in
jle
sub
push
mov
movsb
mov
rcll
push
xorl
scas
sub
push
inc
inc
iret
cmp
xchg
xchg
bound
scas
adc
and
lret
pop
enter
into
jne
jp
lret
loopne
xor
inc
mov
fwait
adc
cmc
loop
imul
xorb
scas
push
inc
scas
or
repnz
cmp
mov
enter
or
pop
and
and
loope
push
cmp
sbb
repz
dec
das
or
push
fcmovb
popa
pop
dec
rcrl
into
mov
hlt
out
and
push
in
sub
inc
and
lret
or
push
dec
int3
xor
dec
jb
insb
xchg
test
loop
repnz
xchg
popa
add
in
repz
adc
pop
mov
out
and
cmp
push
icebp
ret
xchg
imulb
mov
pop
adc
mov
outsb
pop
mov
cltd
cmp
in
xchg
adc
xchg
insb
mov
fsts
push
ljmp
rol
pop
dec
or
repz
push
pop
push
mov
pop
test
dec
add
dec
pushl
pop
pop
imul
add
adc
push
sahf
rcrl
mov
mov
push
inc
mov
ljmp
xor
fistl
and
lcall
mov
out
adc
jae
data16
sbb
mov
sbb
jns
hlt
les
lock
lods
fmuls
ds
inc
cwtl
cld
pop
enter
fisubs
mov
je
xchg
fisubrs
inc
loopne
nop
out
test
push
mov
dec
xchg
cs
mov
das
dec
movsl
cmpsl
popa
mov
dec
add
mov
sub
add
cmc
imul
add
cmp
orb
movsl
pop
dec
push
idiv
pop
inc
jns
mov
sarb
and
push
add
test
sub
nop
lods
or
loope
pushf
jno
sti
or
data16
aam
out
xlat
sub
mov
faddl
mov
or
jge
icebp
cwtl
dec
lahf
inc
mov
mov
pusha
cmp
and
fidivs
jecxz
cwtl
mov
push
lods
mov
hlt
loope
aas
pop
push
mov
sbb
xchg
mov
pop
push
into
fs
and
decb
adc
sbb
icebp
out
insl
shrl
stos
jl
lods
imul
xor
jmp
lods
push
lahf
jle
adc
out
xchg
push
fwait
push
pop
fisubs
sbb
pop
dec
xchg
mov
xlat
icebp
lea
movb
sbb
jb
imul
cld
sahf
ret
jle
sbb
jecxz
add
sti
and
jp
xchg
or
jle
out
sub
adc
outsb
adc
pop
insl
fmulp
iret
shr
inc
das
lds
test
or
adc
jo
fsubrl
adc
push
sub
fsubp
or
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
jmp
xchg
dec
inc
inc
inc
push
xchg
dec
fdivs
adc
shrb
jo
lahf
jge
jo
gs
lret
mov
cmc
push
popf
pop
xchg
sbb
jae
pop
icebp
scas
lret
inc
fstps
fcomps
test
add
xchg
push
dec
jle
cmp
rclb
loopne
push
mov
std
stos
cmp
jle
xchg
sub
fwait
or
xor
out
leave
sub
sub
lock
rolb
pop
add
fld
pop
mov
or
jecxz
jge
jnp
xchg
loop
and
clc
xchg
jnp
call
aam
aam
rclb
sub
ret
lret
push
test
dec
cmp
enter
lahf
pop
ja
or
xchg
dec
cmp
pop
or
adc
push
dec
adc
in
enter
jo
repz
dec
mov
cmpsl
aaa
sbb
xor
imul
adc
test
cwtl
ret
test
jno
divb
adc
je
mov
or
or
inc
out
push
or
in
adcb
ret
movsb
xor
xchg
mov
and
test
rcll
xor
and
fs
or
and
test
pop
pop
mov
push
push
mov
mov
test
jnp
in
adc
sbb
cmc
jl
outsl
ror
push
xchg
out
mov
add
jne
test
mov
leave
dec
add
inc
testl
frstor
call
cmpsb
aam
xor
out
sub
push
add
adc
mov
pop
inc
mov
xor
incl
lcall
test
and
cmp
push
out
int
nop
dec
pushl
daa
notb
sbb
adc
xchg
js
mov
xchg
adc
lret
push
test
cmp
adc
fcoms
xlat
xchg
mov
jnp
pop
dec
incl
adc
mov
loop
in
jg
and
insl
inc
test
add
cld
jmp
lea
jl
add
stc
pusha
mov
adc
std
int3
outsb
ja
cmp
dec
mov
jne
sbb
inc
jnp
add
out
incb
jo
out
in
push
jns
mov
ret
idivl
mov
leave
mov
adc
movsl
int
jno
xchg
popf
into
imul
in
and
in
jp
and
mov
psllq
icebp
rorl
and
scas
cld
shr
enter
shl
mov
scas
lret
and
in
push
or
loop
pop
inc
and
jno
cmp
je
imul
les
sub
jno
mov
mov
and
sbb
dec
or
mov
inc
xor
in
xchg
shlb
lds
push
pop
jecxz
sahf
mov
andb
fwait
push
or
and
sub
insb
pushw
jp
sub
aam
fstpl
pop
stc
add
movsl
imul
pop
cmp
mov
jbe
stos
loop
mov
shlb
sbb
cltd
sbb
je
xchg
xor
jo
fistpll
sub
out
pop
adc
cwtl
adcb
divb
pop
and
add
jle
jmp
mov
push
mov
adc
pop
jge
jne
push
les
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
jmp
lcall
out
mov
mov
lahf
jge
jo
push
cmp
inc
sub
loope
iret
mov
div
xchg
lock
insl
stos
mov
jae
mov
xor
in
push
mov
rorb
and
mov
or
jmp
testl
lcall
ret
add
fs
daa
dec
sub
adc
ret
sub
add
out
xor
in
pop
jne
jne
dec
fcoms
adc
pop
scas
push
mov
cmp
andb
and
movsl
cmc
push
into
cld
add
cmp
cmpsb
jbe
gs
pop
adc
out
add
enter
iret
enter
ljmp
mov
jno
xchg
and
cmc
in
popf
and
cmp
in
pop
dec
data16
int
adc
push
fidivl
dec
cmc
stos
arpl
add
repnz
inc
xor
das
fistpl
mov
xchg
mov
imull
xor
xor
cmp
fnstsw
xchg
xor
imul
ret
ljmp
cmpsb
out
sbb
fisubs
scas
pop
lahf
mov
mov
jae
adcl
pop
jo
mov
je
sbb
add
add
inc
cs
mov
in
xchg
pop
and
out
dec
in
dec
xor
lcall
xor
movsb
mov
push
cltd
cmp
add
repz
iret
in
mull
scas
rolb
lret
in
push
hlt
mov
sahf
cltd
enter
sbb
out
mov
xchg
or
add
dec
fdivrl
lret
inc
sbb
dec
lods
dec
into
jecxz
cmp
ja
lods
add
dec
insl
mov
mov
jmp
xchg
mov
es
xor
sbb
sbb
mov
das
sahf
inc
xor
test
pop
add
add
mov
and
lods
and
xchg
in
cld
cwtl
sbb
mov
mov
clc
or
cmp
xchg
xor
cmp
loop
jge
stos
jecxz
ds
popf
xor
jnp
push
lcall
std
mov
int3
in
pop
aaa
jg
ret
pushf
es
sti
out
mov
out
inc
fstpt
xor
cmpsl
icebp
test
pop
adc
or
fimull
mov
jp
rol
fbld
jb
push
jns
mov
lods
popa
dec
ret
cmp
fistpl
cwtl
mov
sar
jo
jl
mov
cltd
stos
rorb
rorb
in
test
cld
adc
lcall
test
jg
clc
jns
aas
jmp
loop
sub
sahf
pop
and
call
cwtl
test
push
xor
pop
rcl
inc
loop
xchg
jl
movl
ljmp
and
mov
bound
jbe
cmp
mov
mov
and
xor
ret
mov
shrl
inc
pop
out
jp
mov
pop
adcb
into
loope
push
inc
sub
rcll
sub
and
test
addb
gs
in
sub
sub
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
jmp
xchg
dec
push
adc
push
xchg
dec
lock
pop
xchg
sub
xor
jo
lahf
jge
jo
sbb
sub
jecxz
sub
sarb
lahf
aaa
addr16
ret
jg
mov
loop
push
mov
movsb
sbb
push
push
adc
or
arpl
xchg
cltd
push
push
out
xorl
out
pop
ds
adc
push
pop
inc
stc
add
xchg
jne
dec
arpl
shll
xchg
sbb
cs
mov
sbb
inc
testb
mov
ds
ds
call
repnz
ret
xor
dec
ret
loopne
mov
push
sbb
leave
or
jo
ds
dec
xchg
jnp
sbb
aaa
mov
dec
cld
sahf
adc
mov
pop
sbb
mov
call
pop
pop
xchg
xor
lds
gs
xlat
enter
insb
es
mov
cmc
mov
and
cmc
leave
jno
sbb
dec
mov
push
aam
call
daa
mov
sub
mov
xchg
or
xor
or
dec
sbb
out
xor
dec
or
sbb
les
inc
fimuls
or
mov
lods
rcrb
xor
mov
clc
pop
ret
std
jl
popf
or
imul
or
pop
into
xor
xchg
lahf
iret
dec
lea
inc
mov
mov
or
sbb
adc
inc
mov
bound
push
xor
movsl
add
and
cmp
pop
jbe
sbbl
test
call
pushf
mov
jl
ja
or
ds
and
or
xchg
pop
jo
push
mov
leave
loop
sbb
jl
testl
orb
adc
sub
mov
push
mov
mov
movsl
sahf
and
mov
dec
xchg
inc
addb
push
sbb
jb
inc
jle
dec
shr
jecxz
cmp
fsubrl
aaa
enter
stc
mov
sub
test
dec
cltd
neg
nop
pusha
push
cmc
mov
mov
dec
xchg
cwtl
in
xchg
sub
push
insl
jecxz
inc
pop
in
push
or
loope
int
mov
and
jl
in
cld
lea
mov
negb
jecxz
mov
push
xlat
mov
in
adc
out
loope
cli
shr
or
loopne
jnp
push
je
in
enter
adc
or
cmp
rcrl
frstor
and
adc
adc
lds
fs
xchg
jb
or
popa
jmp
mov
mov
sar
push
inc
inc
mov
jne
pusha
addps
sbb
xorb
notl
loop
sub
push
xchg
icebp
cmp
dec
movsl
pop
push
fisttps
aaa
pushf
push
jmp
adc
pop
pop
test
sbb
push
fwait
movsl
sub
sbb
or
pop
fbld
xchg
stos
jp
lret
adc
xchg
ret
mov
shl
add
arpl
incb
test
xchg
and
insb
shrl
cmp
xor
jns
dec
xor
adc
lret
adc
fsub
aas
jmp
cmpsl
sub
mov
sub
sbbl
mov
dec
ficompl
lret
add
icebp
into
pop
sbb
pop
repz
adc
add
mov
mov
mov
mov
xor
jmp
sbb
pop
pop
pop
pop
sbb
adc
xchg
rorl
lahf
jge
jo
movsb
or
lea
dec
stos
sbb
shlb
xchg
incb
scas
lock
outsl
adc
in
jns
test
or
call
add
xlat
add
or
inc
jne
push
mov
add
mov
ret
mov
jnp
xorb
sbb
xor
sbbb
jb
inc
jbe
pop
mov
jnp
bound
imul
or
jo
dec
repz
test
mov
or
inc
mov
mov
add
bound
icebp
sbb
ss
insb
jmp
jns
rsqrtps
imul
or
dec
pop
iret
jbe
mov
and
and
lahf
outsb
jle
inc
cmp
in
int3
int3
adc
xchg
std
test
into
fidivl
sub
cld
sahf
push
call
add
inc
fistl
outsb
push
js
xchg
inc
pop
sub
movsb
push
cmc
mov
es
xchg
fisubrl
fsts
push
xchg
cmp
push
dec
pusha
insl
dec
roll
inc
outsb
cmp
inc
cmp
popa
imul
mov
lahf
out
jl
sbb
mov
call
decl
xor
stc
inc
test
testb
mov
jge
shr
ss
jnp
or
sbb
pop
and
and
and
jno
in
loop
test
push
sub
sub
nop
cmp
sub
push
jb
inc
das
jle
in
jl
jl
and
stc
std
loopne
dec
dec
imul
pop
and
and
mov
sahf
dec
out
mov
xchg
lcall
in
push
inc
outsl
loope
xchg
popf
pop
ret
adc
out
movsl
jl
lds
rcrl
jle
bnd
imul
and
aaa
xchg
es
inc
push
cli
add
sbb
insl
hlt
loopne
dec
push
and
and
mov
ljmp
inc
mov
xchg
mov
std
mov
xor
rolb
pop
sbb
lock
leave
out
inc
ret
xor
dec
stos
ret
daa
repz
mov
sahf
mov
and
inc
adc
cmp
pop
repz
out
lea
sbb
pushf
xor
mov
mov
inc
mov
xlat
xor
fistl
push
out
sub
out
daa
push
mov
int3
jns
ds
and
mov
pusha
imul
adc
push
jg
fcoms
rcrl
inc
loop
sub
ret
mov
xor
mov
aas
arpl
scas
aam
shl
rclb
mov
jl
add
push
inc
mov
push
cmp
mov
ja
mov
cs
rol
scas
cs
pop
ljmp
pop
arpl
lcall
mov
xchg
mov
mov
repz
dec
jmp
or
jo
add
leave
inc
dec
pushf
ss
push
insl
fsubrp
idivl
movsb
es
cld
pop
scas
lds
fsubrl
scas
gs
mov
adcl
pop
repnz
xchg
or
outsl
xor
or
cmp
ljmp
add
out
xor
add
addl
clc
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jmp
mov
popa
jbe
xchg
orl
clc
or
jo
mov
fcomi
sbb
jp
mov
and
adc
fs
cmp
lahf
ret
dec
pop
movq
xchg
out
pop
and
add
xor
pop
arpl
jns
ficoms
in
cmp
imul
inc
cli
inc
mov
and
jle
incb
pop
ss
fidivrs
aad
and
cmp
andl
mov
aam
notl
xorb
push
inc
and
movsb
clc
adc
sub
scas
cmp
std
lret
push
xor
pop
pop
xor
jns
cmp
xchg
mov
xchg
xchg
ret
xor
mov
push
fnstcw
dec
imul
in
adc
negb
jbe
scas
ss
inc
push
loope
in
loopne
aam
loope
subb
xor
dec
out
addr16
pop
inc
xchg
cmp
mov
daa
adc
cld
je
frstor
dec
fldl
insl
das
pop
inc
mov
or
ss
leave
mov
inc
inc
adc
push
subb
int
push
std
hlt
pop
push
cmp
jle
cmp
push
sbb
push
subb
cmp
add
faddp
pop
sub
pop
add
mov
sub
or
addr16
sub
xchg
das
cli
xchg
dec
xchg
push
push
sub
clc
fdivs
mov
mov
popf
cmp
rclb
test
gs
dec
movsl
cld
dec
into
imul
cli
dec
loop
xor
mov
out
xchg
xor
and
xchg
cmp
imul
push
repnz
dec
mov
mov
cmovno
daa
movsl
int
cmpsl
rcrl
icebp
xor
add
mov
or
push
xchg
and
cmp
test
popa
cmc
div
add
mov
les
adc
add
and
push
jne
popl
pusha
mov
sub
dec
std
dec
mov
out
cmc
mov
es
clc
ss
adc
push
je
aam
insl
sbbb
rorb
sub
ss
stos
sbb
add
adc
add
cmp
fwait
xor
out
mov
cltd
mov
dec
mov
sub
lds
lret
xchg
lods
jmp
insl
loope
mov
sub
dec
popa
fildl
mov
dec
sbb
rolb
bound
loopne
jnp
test
push
out
icebp
cs
popa
ljmp
lcall
fsub
fiadds
push
inc
mov
jns
mov
push
nop
or
jmp
jbe
iret
fdivr
movsl
or
xchg
sub
pop
pop
test
cmp
sahf
mov
add
mov
es
push
lcall
insb
addr16
mov
fcmove
in
mov
mov
ljmp
mov
lods
shl
and
nop
add
xchg
push
pop
and
inc
pusha
cs
cwtl
sbb
in
lret
enter
aas
xchg
xchg
mov
cs
sbb
and
pop
xchg
add
fldpi
and
stos
inc
out
mov
xchg
sahf
push
push
scas
xchg
xchg
mov
std
jbe
mov
mov
xor
add
imul
mov
xor
add
jmp
xor
out
icebp
xor
cmp
lods
in
xor
jo
jge
jo
jbe
and
mov
mov
jg
jae
pop
cmp
adc
in
mov
lahf
sahf
xor
enter
pop
fidivrs
lcall
lret
rcl
mov
aam
out
out
cld
mov
cmp
insl
repnz
sub
inc
and
and
loope
fucomp
xchg
or
or
popf
xorb
or
loope
jno
sbb
push
fcmovu
into
inc
xor
jne
mov
cwtl
test
mov
or
add
xchg
cs
cmpsl
dec
mov
jl
xor
ja
ja
cwtl
jg
jg
scas
cld
shl
mov
xor
or
xchg
test
aam
cmpsl
cs
ficoml
xor
std
out
sbb
xchg
mov
popa
ds
loope
sub
push
add
and
cli
inc
gs
stos
mov
sar
pop
cmp
or
cltd
cmp
dec
cli
inc
cs
adc
dec
adc
jbe
cmc
jmp
insb
out
push
rorl
rcl
inc
fistpl
xbegin
xor
aaa
test
mov
jge
xor
insl
scas
mov
adc
push
jmp
rorl
pusha
je
popf
aad
ds
addb
sahf
xchg
out
xor
jns
dec
jp
test
xor
scas
psubb
pop
test
imul
and
notl
inc
jmp
cmp
sbbl
imul
dec
cwtl
iret
iret
sti
pushf
cs
loopne
cmp
add
pop
adc
sub
in
or
push
int3
inc
add
or
push
stos
mov
pop
inc
push
and
mov
nop
dec
aad
jnp
add
push
xchg
cmpsb
sub
mov
mov
pop
mov
ljmp
daa
ret
lcall
cmc
scas
pop
out
repz
ret
push
pop
mov
iret
mov
fisttpll
mov
cmc
dec
jnp
lds
push
fsubs
addr16
rorl
out
mov
push
pop
sbb
arpl
push
dec
popa
sbb
stos
pop
popf
lods
or
lods
mov
sarb
ret
mov
mov
xchg
inc
lock
inc
push
fistl
sti
movsl
cmp
test
push
pop
and
cs
inc
in
adc
in
pop
sub
push
xorl
cwtl
sahf
xchg
dec
mov
adc
js
in
push
test
or
sub
or
imul
dec
jg
jge
mov
adcl
xor
aam
cmpsb
bound
add
xchg
pop
xchg
sbb
lret
sub
adc
xchg
jle
in
mov
in
fiadds
sub
fmull
push
shl
aad
mov
sti
outsl
stos
jl
dec
popf
xchg
rclb
ds
xlat
dec
sbb
pop
cmp
mov
movl
adc
push
call
cwtl
ret
push
popl
dec
enter
dec
push
cmp
stos
xor
lret
adc
xor
xor
mov
sbb
mov
negb
enter
pop
movsb
bnd
mov
lea
mov
mov
xor
mov
sub
jmp
out
inc
push
jno
ljmp
pop
jle
leave
cltd
jo
lahf
jge
jo
lds
jns
and
test
cli
mov
xchg
xchg
adc
sahf
out
push
ds
mov
mov
and
jb
mov
sbb
sbb
sbb
rcrb
mov
xchg
sbb
mov
imul
pop
mov
pop
push
dec
test
xor
pop
xor
iret
jae
test
dec
mov
dec
into
xchg
mov
aad
push
and
sub
jmp
subl
sti
or
in
ret
sub
nop
pop
push
dec
cmp
test
arpl
stc
push
jnp
pusha
mov
push
mov
lret
lods
clc
popf
sub
cs
xor
out
addr16
imul
xchg
push
lret
push
jge
pop
mov
sbb
add
mov
fmul
push
repnz
sub
lcall
rclb
out
pop
jle
and
pop
mov
pop
rolb
dec
push
and
and
stc
and
jge
ja
popf
inc
adc
sbb
push
leave
mov
jno
icebp
popa
bound
loopne
sub
cmpsb
fsubp
push
sub
mov
or
lea
add
pop
notb
or
mov
loope
lock
sub
adc
out
movsl
add
inc
pop
jbe
xchg
pop
push
inc
xchg
push
dec
dec
aad
sbb
xchg
xor
pushf
loop
pushw
stos
das
and
adcl
push
sbb
pop
loop
les
mov
jno
imul
pushf
lea
daa
lret
and
xchg
std
adc
sbb
jmp
push
pop
ljmp
sub
jecxz
xor
pusha
mov
xchg
lock
cmp
pop
push
push
stos
pusha
jmp
cmp
clc
andb
jns
pop
clc
ja
lret
push
xor
bound
xchg
cmp
xor
sub
or
add
in
xor
cmp
shr
xor
repnz
lods
adc
in
ret
or
dec
xor
add
push
scas
adc
shlb
mov
dec
mov
es
mov
repnz
arpl
sbb
push
add
out
adc
add
mov
jo
add
pop
mov
jo
insl
or
push
or
mov
ds
mov
mov
shlb
push
push
mov
xor
sbb
or
popa
mov
mov
lret
scas
and
stc
pop
sbb
lods
loopne
aaa
movsb
xchg
movsb
or
xor
mov
xor
testb
ss
mov
pop
je
mov
hlt
push
ljmp
lds
fadd
test
xor
lds
rolb
adc
pop
pop
ret
push
ret
arpl
enter
aas
stos
adc
inc
out
rorl
add
scas
mov
out
loop
sbb
xlat
fsubs
mov
js
push
mov
pop
aaa
push
stc
sbb
xchg
sbb
ret
aaa
stos
mov
pop
notb
and
clc
int
pushf
cmp
adc
daa
sub
pop
or
test
loop
dec
ja
dec
pop
sub
dec
stos
fld
adc
mulb
mov
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
orl
push
sbbl
call
andl
test
jne
xor
movl
jmp
adcl
push
call
sbbl
test
movl
je
call
cltd
movl
cmp
jne
movl
cmp
jne
push
push
adcl
push
push
push
push
push
xorl
push
orl
call
movl
jmp
push
call
test
je
sbbl
push
andl
call
movl
jmp
push
mov
add
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
addl
movl
lea
adc
mov
adcl
lea
movl
cmpl
je
cmpl
jne
pushl
pushl
call
xor
add
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
or
mov
or
mov
mov
push
mov
subl
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
call
jmp
mov
add
mov
mov
mov
movl
cmp
mov
movl
je
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbbl
xor
andl
add
imul
mov
movl
jmp
sbb
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
or
xor
sub
add
mov
mov
mov
xor
add
movl
cmp
jne
subl
pushl
andl
pushl
adcl
call
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
adc
mov
mov
xorl
push
push
mov
xor
not
push
mov
add
sbb
jmp
sub
gs
mov
fstps
bound
jg
jo
pop
cltd
push
popa
rolb
and
out
or
xchg
imul
repz
adc
sub
xor
out
jbe
aad
enter
js
mov
scas
pop
inc
sti
loope
jbe
shl
inc
xchg
into
stos
cmp
mov
jle
cmc
push
sub
push
sub
dec
pop
gs
pop
enter
mov
iret
or
push
jnp
jo
xchg
sub
push
cmp
daa
or
mov
inc
out
dec
cmpsb
sbb
jbe
bound
jbe
cmp
ja
mov
dec
push
jle
jecxz
or
ret
jg
sub
repnz
mov
push
comiss
outsb
or
inc
lods
movsb
jnp
jbe
es
or
dec
inc
hlt
inc
push
clc
lock
adcl
inc
lds
negb
fnstenv
xchg
fucom
adc
andb
mov
sub
mov
rorl
inc
enter
add
je
enter
iret
inc
test
add
cwtl
rcrb
stos
xchg
cld
nop
push
mov
popa
sbb
jne
les
mov
arpl
pop
adc
fidivrs
xor
lock
mov
lea
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
imul
mov
sub
mov
and
mov
sbb
xor
add
mov
jmp
icebp
ja
pop
inc
scas
icebp
jno
push
inc
movsl
cmp
movsb
jo
ret
jg
jo
lcall
sbb
mov
loop
xchg
aad
xor
jns
mov
cs
cld
in
fwait
int3
insl
aas
into
std
insl
int
mov
xor
xor
stos
and
and
mov
sub
xchg
ds
xchg
mov
or
sub
clc
shll
pop
add
push
jbe
dec
pop
stc
gs
add
or
mov
js
push
mov
inc
or
push
aas
adc
leave
mov
ja
pop
inc
adc
or
cmc
push
lret
aad
notb
aam
mov
mov
jp
push
addr16
xchg
notb
out
jecxz
mov
push
add
popa
int
punpckhbw
popf
les
arpl
pushw
ret
pushf
mov
call
jne
out
adc
xlat
loopne
pop
mov
outsb
mov
iret
cmp
adc
cwtl
xchg
insl
lret
add
add
push
adc
xchg
stos
xchg
movsl
mov
mov
jnp
pop
pop
adc
mov
jle
bswap
add
fsubs
lahf
mull
lcall
in
insb
and
mov
adc
jl
xchg
movl
and
lea
mov
jmp
rorl
sbb
inc
hlt
mov
jo
push
movsl
std
out
ret
lcall
xchg
dec
push
testl
adc
cmp
clc
mov
call
cmp
jecxz
mov
mov
iret
outsl
mov
xchg
sbb
jne
push
sub
repz
lahf
or
jl
out
pushf
or
pusha
shr
mov
movsb
mov
jp
add
xor
outsl
xchg
pop
imul
adc
xchg
jmp
add
gs
int3
inc
mov
inc
inc
insb
call
or
lods
dec
test
fsts
jmp
lahf
jb
and
out
xor
sbb
pop
jg
pushf
fcmovbe
testl
cli
or
stos
adc
xor
inc
cwtl
insb
cli
rcrb
xchg
push
fwait
xor
cmc
rep
hlt
pop
mov
add
xor
mov
loop
sahf
arpl
leave
cmp
fiadds
movsl
inc
mov
pusha
mov
mov
lea
and
addl
push
ja
pop
dec
xorb
call
ljmp
mov
cmp
repnz
out
js
push
sub
stc
dec
push
js
iret
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
neg
mov
add
xor
add
sub
mov
mov
adc
mov
mov
adcl
jmp
cmp
in
fcomi
jecxz
icebp
xor
iret
cmpsb
std
mov
ret
jg
jo
ret
fcompl
xor
roll
cmp
cltd
xor
adc
push
loopne
popa
mov
andb
repz
jae
pushw
imul
in
insb
mov
fsubl
mov
or
inc
popf
ret
testb
shll
rcrb
mov
jne
mov
xor
clc
xchg
mov
mov
lds
push
loope
popf
jne
or
cmpl
xor
sub
insb
xor
imul
pushf
lods
insl
ss
xchg
cmp
jmp
lret
mov
mov
jle
xor
roll
popa
and
hlt
mov
test
mov
sub
std
mov
sbb
push
enter
lea
rcll
leave
pop
jne
xchg
push
mov
and
pop
filds
cld
mov
stc
xorl
aaa
adc
pusha
adc
xchg
in
arpl
sbb
inc
dec
and
mov
inc
sbb
jmp
notb
rolb
sarl
mov
mov
fcmovb
mov
je
xchg
es
stc
lds
add
inc
push
orl
mov
add
lock
aam
xchg
sub
push
mov
adcl
mov
xorl
movzwl
add
neg
movl
sbb
mov
mov
sbb
mov
xorl
xor
andl
add
cmp
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
movzbl
adc
mov
xorl
mov
andl
xor
notl
add
movl
cmp
movl
jmp
fistpl
shlb
movsl
fcomp
cmp
jo
ret
jg
jo
or
mov
or
sub
push
jecxz
lea
or
dec
sbb
inc
jge
xchg
push
iret
gs
pop
or
jno
int
pop
rcrb
mov
xor
dec
ficompl
pop
mov
rclb
aas
cmp
mov
mov
sti
ljmp
pop
jmp
sub
shl
sbb
faddp
jo
test
cmc
cmp
jne
pop
jecxz
in
push
stos
sbb
ljmp
insl
cli
push
loope
push
aaa
popf
cmpsl
adc
mov
int
sub
xor
xor
mov
ljmp
push
sub
or
mov
lock
cmp
push
clc
das
and
mov
xor
lock
lock
cld
and
sub
pushl
ds
mov
addr16
add
mov
arpl
add
sub
dec
mov
push
cmp
ret
stos
comiss
fcoml
jmp
dec
cwtl
testl
push
popa
repnz
fcoml
xor
test
lret
or
add
gs
inc
add
movb
mov
sbb
mov
adc
mov
movl
cmpl
je
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
lea
xor
sub
mov
movzwl
jmp
or
shrb
mov
inc
pop
mov
es
imull
jo
inc
jmp
pop
jecxz
xor
or
arpl
inc
push
mov
mov
xchg
add
cwtl
and
arpl
and
adc
jmp
cmpsb
aas
movsb
nop
in
lods
popf
fs
jge
es
pop
pop
jmp
push
sbbl
ficompl
in
inc
pop
push
test
loop
cmp
jbe
leave
pop
push
adc
mov
loope
lds
lods
in
mov
fcom
mov
adc
xorl
mov
enter
mov
cwtl
cltd
lock
cmpsb
cs
out
push
into
and
xor
scas
shlb
mov
fidivs
out
aam
and
mov
arpl
add
dec
cmp
pop
xor
adc
sbb
jbe
sub
call
sbb
push
xchg
xchg
jecxz
test
jb
mov
mov
imul
insl
and
xchg
out
fs
mov
inc
scas
adc
jb,pn
sub
jo
jecxz
das
shll
dec
rcl
mov
pop
push
xchg
jns
inc
mov
cmp
mov
movzwl
jmp
movntps
push
rep
mov
push
jle
aaa
popa
into
mov
jg
jo
in
arpl
add
fs
mov
or
xchg
sti
into
pop
lret
inc
dec
movsl
sarb
fs
dec
ds
jb
xchg
cmc
mov
inc
adc
mov
sbb
mov
in
cltd
push
mov
fwait
mov
divps
mov
fwait
popa
leave
fdivr
and
imul
jo
shrb
adc
push
std
lock
add
dec
pop
mov
push
pop
ret
sub
lret
xor
notb
sub
fimuls
sub
lret
imul
pop
sub
mov
pop
adc
cmpsl
sbb
stos
or
mov
mov
in
and
inc
sbb
stos
mov
lods
dec
lock
out
inc
bound
dec
adc
imul
sub
incl
jg
pop
dec
or
mov
xor
pop
jno
jg
xchg
scas
xchg
push
adc
push
cmp
ret
jns
pop
lock
jbe
call
mov
or
stos
int3
push
lock
adc
out
adc
jae
jb
or
and
inc
adc
pop
lea
das
inc
imul
jns
add
xor
sub
sub
mov
jmp
jmp
int3
push
icebp
xchg
icebp
je
in
pop
mov
stos
jb
or
jg
jo
arpl
xlat
cwtl
pop
aam
pop
mov
lods
lret
xchg
shrb
adc
jge
push
mov
pop
push
jmp
imul
sub
out
aaa
call
inc
dec
xor
sar
pop
push
inc
xchg
xor
fldenv
pop
mov
adc
in
cmp
aam
popa
lock
out
fsubrs
adc
stos
insb
jle
in
inc
push
insl
or
push
add
xor
push
push
in
loopne
cmpsl
stos
loop
xor
add
inc
sbb
out
add
and
mov
pop
lock
rorb
jp
pushf
adc
pop
pop
cwtl
xor
arpl
xchg
and
ds
in
out
push
inc
adc
cmp
fstl
mov
xor
adc
fsubrs
or
inc
jmp
push
xor
xchg
ret
icebp
mov
outsl
xchg
inc
and
imul
mov
mov
fldcw
push
ljmp
mov
jl
mov
cmp
lea
add
pop
out
jmp
xor
in
xchg
mov
or
inc
cld
mov
cmp
jmp
mov
enter
lea
leave
inc
inc
lods
fldenv
shrb
jo
out
daa
push
dec
ss
jle
lcall
mov
xchg
inc
add
addb
arpl
out
scas
shlb
pop
push
mov
fcomps
dec
adc
fcomps
cmp
mov
pop
sub
jmp
fucom
push
in
mov
fs
adc
jo
ds
cmpsb
outsb
mov
fcompl
imul
cmpsl
inc
jge
cmp
pop
push
nop
mov
xchg
cmpsl
ret
ljmp
retw
incb
out
aam
imul
mov
subb
ss
iret
iret
flds
shll
loopne
xor
insb
leave
outsl
mov
inc
pop
sub
and
lcall
push
data16
mov
xor
fs
add
mov
aad
sub
mov
push
push
mov
pop
int
push
js
push
subl
cmpsl
jne
enter
xchg
fnstcw
in
add
xchg
stos
mov
sbb
sahf
cmp
mov
imul
rcll
xor
pop
xchg
sbb
mov
inc
sbb
test
les
add
add
add
add
rep
popa
fdivrs
xchg
test
stos
jo
ret
jg
jo
in
leave
push
loopne
sub
xchg
iret
mov
xor
lods
frstpm(287
add
adc
inc
test
fisttpl
xchg
or
popf
inc
pushf
popf
sbb
adc
lcall
js
xchg
cld
mov
xchg
scas
jle
or
push
dec
imul
xor
xchg
dec
loope
fidivl
jl
jno
sbb
or
ljmp
in
push
cmp
fmull
fimuls
sbb
fildll
cmp
add
fwait
cmp
xchg
cmp
repz
xchg
sub
les
cs
imul
cmp
ss
push
jae
and
rol
iret
loope
or
cwtl
or
jnp
and
mov
cmpsb
popf
push
pop
js
ss
cmc
fcomip
inc
mov
cs
or
lret
aas
bnd
dec
pop
cwtl
xchg
or
push
addb
lock
pop
sti
mov
jge
shl
xor
sub
xor
fucomi
jp
inc
lods
stc
pop
jo
adc
fwait
jmp
jp
aas
repnz
mov
mov
stos
inc
ss
gs
jno
add
jne
shrl
cs
jle
and
inc
fucomip
pushf
xchg
pop
push
int3
mov
add
in
add
mov
mov
xor
add
cmp
je
mov
jmp
dec
int3
cmp
mov
add
sarb
dec
jbe,pn
jo
ret
jg
jo
das
into
cmp
mov
cmp
shl
xor
xor
sahf
push
add
dec
and
stc
jo
or
xor
repz
xchg
push
mov
int
das
pop
inc
ljmp
sub
xchg
decb
cmpsb
repz
jb
stc
or
test
test
notb
stos
imul
sarb
sahf
sub
imul
xchg
dec
dec
mov
pop
sbb
stc
push
push
inc
dec
fidivrs
jl
decb
jbe
push
jg
mov
sahf
cltd
jecxz
imul
jle
jmp
insl
mov
hlt
dec
and
xchg
pop
adc
adc
std
addl
ljmp
std
pop
jg
out
rep
xchg
mov
mov
rclb
jmp
mov
cs
cltd
in
iret
hlt
jne
and
incl
mov
mov
inc
fldenv
clc
push
rcr
ss
jb
leave
mov
sbb
cmp
inc
int3
outsl
xor
mov
loop
sbb
pop
out
out
enter
dec
dec
aad
mov
fnstenv
cmp
cmp
dec
aas
mov
lret
mov
jmp
inc
gs
icebp
imul
js
int
cmp
jo
movsl
push
imul
or
icebp
out
loope
adc
loop
pop
test
sub
push
pushf
cli
cld
cmp
xor
into
xor
push
fimuls
aaa
adc
pop
inc
repz
aas
les
inc
ljmp
push
push
xor
ficoml
dec
xchg
das
xchg
int
repz
jl
out
stos
cmp
cli
lea
shl
sub
int
cli
push
fmul
mov
sarl
mov
mov
loop
ja
mov
ret
test
push
movsl
lret
adc
push
lret
into
ss
or
ja
test
sub
test
sarl
dec
sbb
arpl
lret
sahf
mov
pusha
push
and
jb
ds
aaa
shll
fisttps
mov
push
jge
pusha
rcr
sbb
or
dec
pop
push
jecxz
sub
adcb
xchg
xor
scas
adcb
or
mov
lcall
cmpsb
xor
ljmp
jnp
jns
push
int
repnz
shrb
mov
lods
push
loopne
shll
dec
fsubrl
add
int
add
add
rorl
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
jmp
pop
out
dec
mov
mov
testb
dec
push
mov
jo
ret
jg
jo
lahf
push
int3
jo
lock
jno
loope
or
scas
popf
pusha
rolb
mov
inc
lea
xchg
pushf
xor
inc
test
sub
jg
pop
ret
fadd
cld
pop
repz
push
data16
mov
iret
test
stos
sbb
imul
xlat
adc
ret
xchg
add
sub
lahf
mov
inc
push
mov
add
jp
ret
lods
xor
lea
mov
rorl
scas
mov
inc
mov
out
pop
inc
rclb
mov
mov
call
rcrb
xchg
enter
dec
adc
mov
aad
sbb
or
pop
push
jg
shll
ljmp
movsl
sahf
int3
lret
jp
lea
daa
stos
addr16
cwtl
insb
loop
add
add
cmp
adc
jp
sub
sbb
ror
mov
pop
inc
daa
pop
pop
rcrb
loope
gs
stos
push
inc
push
clc
sub
jnp
cmpsb
stos
jg
test
mov
int
mov
mov
testb
inc
dec
icebp
add
push
mov
in
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
ds
adc
dec
xor
add
pop
mov
jo
jge
jo
sahf
aas
or
adc
lock
push
sub
call
sbb
xor
lock
pop
das
into
cmp
popf
sub
sub
or
out
insl
push
xchg
push
and
fldt
popa
pop
or
or
pop
pop
loopne
lret
pop
mov
cmc
mov
sub
sbb
xor
mov
in
mov
push
add
lds
fimuls
mov
dec
nop
mov
pop
push
dec
int
push
fwait
or
dec
fmuls
mov
or
mov
aas
mov
ret
adc
dec
mov
movsb
loopne
cwtl
cmp
hlt
mov
lret
xorl
mov
and
in
fwait
testl
in
mov
inc
pop
push
int3
adc
iret
sbb
rcl
pop
hlt
push
sti
mov
and
cli
jb
lret
sbb
xchg
pop
fdivrl
clc
jecxz
clc
mov
adc
lock
inc
pop
faddl
data16
jbe
or
rcpps
cmp
mov
mov
loopne
add
leave
xor
mov
cmp
sahf
mov
sbb
add
enter
adc
test
jae
or
push
in
out
jp
inc
ss
push
push
mov
and
nop
out
pop
adc
test
out
sbb
mov
push
jbe
xorl
aaa
mov
imul
sbb
imul
enter
push
mov
mov
sbbl
adc
shrl
lcall
shll
push
cwtl
test
add
dec
sub
push
sub
es
push
dec
jp
notl
clc
xor
xchg
mov
loop
jb
pop
adc
inc
mov
ret
mov
les
popf
lock
mov
insl
push
popf
jecxz
aaa
pusha
nop
jecxz
cmpl
ljmp
and
sti
lods
pop
sbb
imul
inc
xor
mov
cli
adc
and
dec
jmp
mov
add
add
push
xchg
xchg
fildll
cmc
xchg
cmp
cmp
lahf
cmpsl
sub
xor
mov
push
out
je
push
in
sbb
das
fwait
ljmp
push
jb
pushf
xor
inc
int
mov
in
cmpl
dec
or
pop
ja
sub
jmp
out
fcoms
cmp
incb
push
push
cld
imul
scas
aam
dec
fmul
leave
push
jmp
cltd
mov
inc
mov
add
outsb
adc
sbb
shl
call
sarb
adc
cmpsl
lea
lds
mov
clc
stos
clc
nop
pop
push
mov
insl
mov
aam
mov
out
in
xchg
xor
das
and
fnstsw
inc
std
jb
jb
mov
fisttpl
mov
or
or
push
xor
ret
inc
out
popa
push
pop
sbb
sub
insb
and
cwtl
por
mov
mov
push
ljmp
mov
out
push
negl
jmp
mov
cli
xor
testb
mov
mov
jo
jge
jo
fcom
or
ss
lahf
xor
push
cmp
fstps
dec
int
call
popf
sub
into
adc
mov
mov
aaa
mov
or
sub
fwait
icebp
mov
aaa
mov
fs
lea
testb
cld
mov
pusha
int3
sbbl
mov
les
mov
lock
pop
fs
mov
hlt
test
call
cmp
jbe
or
adc
mov
test
outsb
aam
loopne
rcll
mov
xor
pusha
test
jp,pn
das
in
xchg
sub
mov
out
inc
mov
cmp
xor
dec
sub
cmp
loop
cmp
mov
jg
ret
ret
push
out
fs
lret
mov
clc
arpl
repnz
cwtl
dec
inc
dec
aad
push
mov
xor
sub
mov
repnz
stos
fucomp
adc
xchg
test
mov
mov
cmp
mov
xor
push
cmpsb
shll
pop
nop
cmpsl
sbb
xchg
sbb
xchg
roll
adc
adc
cmpsb
mov
push
mov
jecxz
push
dec
mov
jp
stos
es
fiaddl
sub
inc
push
jge
push
push
rcrb
popf
or
cmp
mov
mov
cltd
jl
add
nop
or
xchg
xlat
sbb
je
dec
js
js
push
push
lods
mov
testb
push
bound
rol
jmp
loope
pop
ds
inc
fistps
das
leave
add
mov
xchg
pop
lds
adc
adc
dec
cs
dec
add
jge
xchg
scas
push
arpl
jl
xchg
lock
or
cmp
in
nop
adc
in
es
xor
cld
stos
add
jne
pop
ret
dec
pop
add
inc
in
fmuls
in
lret
mov
push
jg
hlt
adc
bound
cmp
jo
jb
mov
pop
push
lret
stc
pop
adc
or
int3
test
xor
mov
xor
or
jecxz
mov
les
add
push
mov
and
imul
mov
and
std
repnz
enter
sbb
clc
lahf
xchg
std
das
adc
mov
mov
mov
int3
loop
scas
dec
loope
lods
pusha
cmp
add
push
int
push
inc
or
xchg
sub
mov
jg
pop
sbb
adc
pop
stos
pop
xor
inc
lods
popa
mov
pop
bound
cltd
js
xorl
lahf
cmp
mov
enter
sbb
andb
loop
mov
jb
aas
ss
pmulhw
pop
push
dec
or
inc
push
insb
jns
push
jo
mov
lret
sbb
jg
push
cmp
int3
sar
enter
outsl
push
sub
xchg
push
fsubrl
int
ljmp
aaa
mov
leave
mov
xchg
pop
mov
mov
bound
gs
push
dec
or
xchg
cwtl
ja
jmp
ficoms
cs
or
mov
xchg
inc
sbbb
pop
mov
inc
cld
xor
or
loope
add
cmp
add
xorl
xor
movl
cmp
jne
mov
mov
and
mov
mov
movl
add
mov
jmp
fcmovnbe
aam
repz
push
jae
movsb
fwait
jge
xor
jge
jo
fsubp
ss
cwtl
inc
push
addb
add
out
lods
in
pop
lds
shrb
ds
aam
std
cmp
cwtl
jge
adc
push
push
pop
xor
pop
jmp
outsb
pop
dec
jb
pop
mov
test
mov
cmpsl
hlt
dec
add
xlat
inc
inc
andl
or
clc
or
push
scas
inc
sub
cltd
xchg
in
push
cmc
cli
adcb
les
rcr
jae
sbb
jae
adc
mov
push
pusha
xchg
test
jns
scas
dec
sub
xchg
jb
adc
in
push
lods
jecxz
in
int
hlt
inc
push
dec
jle
ud0
sbb
cmp
sub
or
sub
mov
sahf
out
ds
mov
mov
fdivr
pop
cli
sub
lods
or
mov
das
jo
daa
mov
lcall
fs
push
daa
cmc
rcll
ja
jmp
add
dec
jl
test
cmc
jno
xchg
aam
test
cmp
mov
cmc
sarb
cwtl
jns
ja
pop
cmpsb
mov
das
addr16
mov
pop
and
adc
pop
ja
ja
fistl
ljmp
mov
pop
pop
or
inc
mov
mov
mov
mov
xchg
xchg
mov
mov
lock
fisubrl
daa
and
mov
and
ljmp
rcr
lock
js
rcrl
xor
out
pop
sti
xchg
sarb
jp
imul
out
jl
inc
je
daa
or
in
in
add
es
outsl
dec
fcoms
sub
test
test
lods
inc
repz
push
add
movsl
cwtl
cwtl
push
add
jne
icebp
inc
pop
enter
and
xor
imulb
jp
out
lcall
xor
call
scas
mov
mov
stc
rcrl
scas
aaa
jb
cmp
add
insb
and
xchg
and
shlb
push
mov
rolb
xor
or
adc
or
mov
mov
mov
rolb
sbb
mov
push
adc
xchg
cmp
xor
sbb
dec
push
clc
ficoml
decl
sbb
jmp
sarb
xor
out
mov
xor
lds
sbb
sbb
push
divb
lahf
jns
outsb
mov
mov
mov
rclb
mov
sti
scas
cmc
arpl
pop
dec
rorb
adc
and
cld
ja
mov
mov
xchg
enter
loopne
mov
push
and
jmp
daa
jae
in
push
pop
mov
jnp
adc
mov
xlat
sub
bound
ljmp
dec
scas
and
mov
mov
je
add
or
idivb
cmpsb
imul
cmp
rcrb
repz
stos
fidivrl
hlt
push
aas
mov
push
pop
test
xchg
adc
jnp
jl
ljmp
inc
inc
je
sbb
mov
call
pop
loop
dec
loop
dec
cmp
lcall
ficompl
push
imul
cmp
jne
and
fninit
xor
loopne
fcmovnb
mov
sti
test
lcall
dec
sbb
ja
inc
ror
mov
add
mov
mov
add
mov
xor
sub
push
sbb
jmp
lods
das
mov
mov
lcall
pop
mov
jo
cwtl
sub
mov
push
arpl
add
and
cmp
dec
xchg
rcr
xor
js
xlat
lods
jae
das
aas
rol
ljmp
xor
test
in
fwait
push
or
dec
push
pusha
mov
or
rol
fisubl
test
test
lds
icebp
ljmp
push
and
push
insl
sti
mov
movsl
or
xrelease
repz
roll
dec
cmp
lock
lock
filds
cmp
jl
sbb
ljmp
inc
fcompl
jge
scas
popa
and
sbb
or
dec
jg
sbb
loope
xchg
jle
movsl
inc
sarb
dec
xchg
cltd
pushf
push
ret
push
inc
movsl
xor
pop
fstps
fimuls
cmovb
xchg
movsl
loope
or
inc
fsubs
pusha
mov
nop
lahf
xchg
push
aas
push
outsb
jb
mov
add
fcoms
rol
sarl
addr16
rorl
dec
sbb
dec
xchg
fiadds
rep
shrb
fisubrl
inc
or
inc
or
sti
mov
mov
jbe
je
jl
mov
add
mov
cli
clc
fisubs
daa
add
and
fbstp
sbb
faddp
out
jo
jp
pop
mov
push
into
add
and
mov
cmpsl
xor
jp
xor
adc
jg
and
scas
pop
loop
cmpsl
movsb
mov
cwtl
pop
xchg
arpl
fildll
lret
add
test
dec
call
cmpsl
popf
mov
inc
popf
loope
mov
push
xchg
lods
fldt
scas
ret
in
jp
add
sbb
sub
outsl
push
lret
shr
sbb
lret
std
adc
imul
fxtract
aas
cmp
adcb
clc
push
cmp
inc
push
lret
cmp
sbb
mov
enter
repnz
xor
into
mov
outsb
repz
mov
aaa
mov
add
add
xor
call
mov
xor
push
cli
jmp
cwtl
loop
inc
enter
faddl
mov
iret
pop
data16
ljmp
mov
sub
xchg
iret
lcall
mov
data16
mov
out
ljmp
pop
enter
fcoms
sub
adc
out
aas
push
fs
outsl
scas
inc
lret
xchg
adcl
ja
and
in
popf
ror
lret
and
jle
les
push
jae
inc
pop
sub
js
aas
ljmp
inc
jae
add
lret
inc
loop
mov
shrl
shlb
outsb
xchg
pop
js
sar
cmp
test
pop
dec
aaa
dec
repz
jp
enter
ds
je
sub
je
je
aaa
cmp
sbb
sbb
push
dec
pop
ret
and
sub
sub
pop
mov
ja
mov
jbe
xchg
pop
mov
push
adc
mov
jp
pop
add
pop
xor
pop
in
notb
scas
loopne,pt
loopne
sbb
mov
cs
jg
add
jns
pop
cmpsb
push
cwtl
fst
mov
push
repz
orl
add
jge
cmp
out
jae
xor
lcall
in
adc
add
inc
push
scas
popf
outsb
je
lds
jg
add
cltd
sub
inc
jo
sub
or
add
add
jmp
outsl
mov
or
imul
adc
loop
inc
jo
mov
jns
xor
jge
out
mov
rorb
mov
fs
in
xchg
xor
pop
mov
add
mov
sbb
orl
rcl
mov
movsb
aaa
lds
mov
ss
xor
and
jmp
xchg
scas
sbb
ljmp
cli
mov
sub
out
inc
push
ljmpw
je
mov
adc
mov
ja
call
xchg
scas
mov
push
xchg
test
dec
into
in
fldl
mov
cmp
lods
adc
addr16
test
movsb
mov
out
mov
mov
pop
push
jno
dec
mov
jno
inc
in
mul
xchg
adc
hlt
sub
sahf
xchg
aaa
sub
jo
inc
dec
sub
leave
cmp
dec
mov
jl
or
leave
lcall
aad
pop
pushaw
pop
inc
jg
xchg
xchg
cwtl
push
cmp
pop
mov
idivl
movsb
lods
call
cmp
ds
dec
jge
adc
add
in
jp
mov
loop
jg
mov
jg
shrb
dec
inc
scas
lret
mov
mov
cwtl
dec
and
push
les
or
xchg
aas
stos
inc
mov
ror
add
add
xchg
push
fcomps
push
pushf
jns
mov
push
or
adc
pop
cltd
lret
adc
hlt
lock
and
pushf
sbb
dec
pop
in
push
andl
sub
inc
inc
clc
pop
cmp
jge
cmp
mov
mov
xchg
test
cmpsb
fsub
sbb
rorb
inc
sarb
inc
adcb
xor
sahf
loope
jb
inc
mov
or
jmp
sbb
push
push
sbb
es
push
xor
sub
add
shlb
cld
mov
fs
pushf
in
test
ret
push
mov
lahf
xor
enter
ja
pop
jmp
sub
push
xor
jecxz
mov
add
mov
push
out
data16
das
sahf
adc
cld
sbb
out
xchg
xchg
insb
icebp
sbb
jnp
push
dec
or
lret
xor
sarb
clc
pop
push
pop
mov
mov
xor
daa
pop
jbe
adc
imul
mov
aas
out
pop
mov
or
repnz
mov
add
sahf
adc
das
icebp
jecxz
int
lods
sub
insl
add
pushf
bound
data16
scas
bound
push
or
mov
jmp
inc
popa
hlt
mov
jbe
sbb
pop
cmpsl
mov
mov
pop
js
sti
cmp
sub
xor
dec
imul
lods
outsl
sti
es
sbb
cmpl
dec
inc
divl
sub
mov
jl
jbe
adc
in
sbb
jb
dec
sub
xlat
jmp
mov
pop
push
cmp
inc
push
push
movb
jle
mov
mov
dec
lds
mov
pop
pop
incl
jb
jne
mov
sbb
add
shlb
inc
sbb
sarb
adc
push
lods
mov
stc
rcrl
mov
and
push
ffreep
xchg
int
rcr
and
dec
pushw
lods
jb
mov
rcrl
mov
sub
mov
cmp
leave
mov
adc
mov
sub
sbb
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
jmp
outsl
mov
jae
dec
cmpsl
repz
lahf
xchg
int
inc
jo
pop
jge
jo
pop
lahf
call
jle
xchg
lcall
aas
adc
aas
int
inc
mov
lds
imul
fidivrl
jle
std
fsubs
dec
and
dec
enter
push
movsb
xor
stos
inc
jle
xchg
sbb
and
add
mov
lcall
adc
push
in
pop
add
sbbb
pop
gs
jno
ja
or
es
ja
mov
sbb
fists
testb
jne
movsl
pop
dec
mov
test
adc
jmp
inc
es
xor
mov
idivl
je
in
lock
outsl
mov
iret
jg
mov
mov
dec
or
cld
mov
sub
es
cmp
cmp
xchg
pop
pop
lahf
or
test
or
or
mov
xor
sbb
cmpsl
iret
push
iret
sbb
sbb
push
popf
mov
add
cmp
ds
jns
push
mov
xchg
jo
stc
repz
pop
dec
pop
mov
insb
test
push
xchg
fldt
movsl
imul
mov
idivl
lods
ss
inc
add
ret
cli
inc
mov
mov
sbb
ljmp
sbb
xchg
insl
add
mov
adc
out
xchg
rclb
movsl
neg
push
enter
fstl
sahf
mov
arpl
push
js
cld
pop
adc
cmp
inc
int
inc
sbb
adcl
aad
cmpsl
ds
mov
in
mov
and
mov
add
mov
into
mov
pushf
mov
sub
ss
jge
imul
jae
xor
mov
push
xchg
cs
jae
mov
insl
dec
jne
add
lahf
add
test
jns
int
in
push
xchg
jae
repnz
cmpsb
pop
add
imul
jp
push
ds
add
test
sbb
jp
fsubr
bsr
and
push
pusha
in
mov
sub
addb
popf
mov
orl
inc
or
pop
lods
or
aad
xchg
daa
add
jg
aad
negl
ja
jl
sub
std
or
inc
sbb
jne
push
xor
imul
jge
aam
shl
clc
fsubr
sbb
mov
or
cmp
and
xlat
push
movsb
into
mov
aaa
inc
adc
dec
insl
sbb
dec
out
mov
push
jge
push
inc
lcall
or
divl
insb
fsts
add
xchg
cmp
cli
and
pop
dec
leave
push
pop
dec
test
pushf
xchg
out
shlb
fisttpl
popa
push
mov
adcl
inc
shll
inc
pop
mov
addr16
sub
decb
das
insb
neg
add
inc
adcl
jno
in
jne
inc
push
jmp
insb
xor
pop
sub
fwait
cmp
adc
xchg
sbb
cmp
in
outsb
enter
adc
repz
mov
es
or
das
in
pop
add
push
clc
xchg
inc
inc
cmpsb
pop
lcall
stos
or
inc
mov
inc
push
outsl
rcrl
rorl
stos
or
dec
aam
ret
mov
int3
iret
flds
dec
sbb
inc
rclb
jecxz
mov
pop
inc
mov
inc
add
sub
adc
mov
push
mov
xor
movl
jmp
xchg
shll
push
paddsw
es
jo
pop
jge
jo
stc
iret
fs
xor
jb
push
pop
mov
das
ret
sti
mov
insl
inc
nop
das
filds
outsb
add
xchg
lods
push
cmpsb
inc
fldlg2
dec
fnsave
xchg
lret
adc
jle
ljmp
paddsb
subb
dec
pusha
and
lock
or
mov
inc
imul
imulb
outsl
push
addr16
push
fldl
jg
pop
adc
outsl
shl
scas
vmovq
lock
or
lods
inc
into
push
iret
xchg
sbb
in
mov
xlat
jp
mov
pop
mov
mulb
mov
lahf
addl
pop
jne
jne
pop
cli
pop
pop
mov
dec
or
pop
push
test
shll
imul
pop
daa
std
subl
dec
loope
push
mov
jb
mov
test
les
daa
fdivl
cs
mov
dec
add
aad
lds
ljmp
jno
jae
adc
jmp
enter
push
mov
insb
setle
lds
popf
stos
jecxz
xchg
sbb
jne
movsl
fcmovbe
pop
jl
push
negl
jae
mov
push
sbb
ss
pop
and
ss
imul
xor
and
bound
inc
dec
arpl
sub
inc
cmpsl
jb
pop
imull
xchg
maskmovq
testl
ret
lcall
xor
lahf
adc
dec
mov
in
jnp
cmc
adc
fwait
hlt
cmpsl
pop
aad
push
dec
lock
mov
or
cld
mov
int3
add
stos
dec
add
mov
sti
jecxz
inc
mov
dec
fsubs
fsubrs
xchg
fnsave
push
mulb
jmp
dec
popf
cmp
mov
pop
adc
rol
xor
ret
imulb
mov
xchg
pop
mov
loop
popf
imul
add
dec
movsb
gs
fistpl
mov
sub
sarb
fldl
pop
insl
dec
or
arpl
cs
pop
mov
sub
fwait
mov
loop
mov
sbb
cwtl
rol
push
loop
insb
and
jae
mov
hlt
add
pop
mov
out
xor
lcall
fistl
in
cmpsb
fidivl
or
mov
fdivrs
pop
mov
jge
mov
sbb
push
mov
xor
test
shlb
push
cmpsb
sbb
movl
jecxz
push
ljmp
pushl
repz
xchg
mov
sbb
ret
add
test
aaa
std
mov
in
xorl
insl
lcall
ss
mov
add
es
push
repnz
inc
fisttpl
lods
ja
sbbb
int3
std
data16
fdivrs
movsl
cmc
imul
push
incb
data16
sub
pusha
fs
les
loop
jbe
sub
std
sti
les
pop
scas
loope
mov
sub
pop
bound
push
add
outsl
lds
and
ret
sbb
movl
mov
nop
lret
cmpsl
ja
ja
nop
and
jle
fldt
push
mov
shr
mov
lds
sbb
lcall
xchg
mov
loopne
xor
dec
stos
rcrl
stos
dec
sbb
lret
fadds
jbe
sti
inc
jmp
shlb
fs
pop
ret
andl
mov
test
pop
js
sbb
scas
ret
ror
add
sbb
movl
je
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
and
leave
adc
adc
call
mov
js
push
dec
jo
pop
jge
jo
mov
movhlps
loopne
pop
ficoml
cmp
or
into
push
and
push
fs
push
cld
popf
adc
and
jbe
inc
jp
jo
subl
stos
imul
adc
xchg
test
pop
adcl
hlt
fiadds
push
push
test
or
movsl
les
jbe
mov
loope
jns
inc
aaa
xlat
add
adc
push
out
cmp
shrb
cs
add
mov
mov
jl
mov
test
inc
inc
xor
mov
data16
mov
ds
lods
sub
push
push
insb
cltd
cmp
jmp
fnstcw
movsb
mov
and
shll
data16
cmc
mov
push
inc
fdivrs
mov
jp
loopne
ja
inc
push
sarb
pop
cwtl
inc
addr16
dec
sbb
pop
pop
push
push
jbe
mov
dec
bound
xorps
aaa
aad
and
fnstcw
inc
bound
or
adc
adc
inc
jns
jne
int3
fldcw
mov
mov
mov
jo
add
cmp
fwait
cmpsb
jno
negb
mov
enter
icebp
std
and
xor
daa
push
cmp
pop
ja
loop
mov
cmp
mov
imulb
sbb
or
bound
mov
cld
in
and
pop
sbbl
xchg
jge
inc
jnp
sub
cld
inc
popf
add
pusha
fucomi
and
in
mov
aas
add
shll
push
repnz
dec
popf
adc
loope
sub
out
xlat
arpl
out
push
or
imul
out
cmp
lock
pop
std
mov
jbe,pt
cltd
popf
add
xchg
xchg
pop
loope
ret
pop
fwait
sub
jge
out
mov
cmp
mov
sub
in
and
repz
xchg
xor
pop
pop
pop
push
push
imul
sbb
mov
out
pop
lods
push
test
mov
lcall
mov
mov
push
push
loopne
adc
push
lock
test
or
mov
mov
xchg
push
inc
adc
shll
rclb
dec
mov
push
cmpsb
repz
in
mov
clc
add
xchg
cmpsl
lods
or
and
mov
lcall
mov
out
and
hlt
push
push
and
mov
pop
add
sar
push
cmc
mov
in
xor
pop
jns
add
cmovne
adc
pop
mov
test
pop
add
dec
stos
mov
and
mov
cmp
sahf
inc
mov
push
in
aas
out
in
cwtl
outsb
jp
outsb
popf
mov
std
ud2
push
add
imul
sti
sbb
dec
adc
inc
or
add
jmp
mov
sarl
push
imul
push
jb
mov
dec
jbe
out
bound
push
cmpsl
push
mov
insb
or
sub
pop
fstp
orl
test
inc
ds
ds
jo
icebp
scas
mov
cmp
in
adc
movsb
daa
popa
mov
inc
subb
pop
lahf
sbb
lds
arpl
js
lret
xchg
pop
inc
addr16
or
repz
xchg
mov
sub
addl
xor
movl
cmp
movl
jne
jmp
js
stos
loopne
jae
cmc
pop
sub
divb
jo
pop
jge
jo
pop
cwtl
scas
jnp
mov
sub
int3
scas
mov
dec
push
bound
mov
jle
mov
sbb
das
sub
test
out
mov
sub
dec
insb
or
sbb
pop
adc
fwait
rcll
jg
and
fwait
add
in
xor
mov
pop
fisubrs
add
lcall
jp
xchg
cld
leave
cltd
or
das
ljmp
or
cli
adc
std
cmp
outsb
xchg
push
add
stc
and
mov
sub
mov
xor
push
mov
add
xor
in
mov
out
or
ljmp
pop
fucomip
xor
push
mov
add
mov
fwait
ss
pop
sahf
pop
pop
inc
fisubrs
xchg
negb
lods
jecxz
jmp
lcall
jle
inc
jno
es
push
pop
out
dec
outsl
pusha
fadds
pop
orb
test
inc
xlat
pop
pop
stos
mov
sub
mov
movsb
psllw
xchg
je
add
xchg
aaa
cwtl
push
orb
movsl
out
aaa
inc
xchg
mov
decb
mov
sub
xchg
jl
push
addr16
sbb
ud0
mov
sti
enter
fidivs
aam
sahf
je
mov
insl
pusha
outsb
xor
dec
jo
fbld
mov
aaa
and
xchg
pop
js
jge
mov
or
jae
cli
xor
dec
in
and
push
je
inc
in
int
cmp
stc
and
je
push
jne
mov
call
sbb
daa
enter
cmc
cmpsb
out
faddp
loopne
mov
cs
scas
add
sbb
push
push
roll
fiadds
push
into
jno
inc
jp
fs
inc
xchg
shrl
and
lods
mov
sbb
out
fs
leave
ds
cmpsl
xchg
testl
icebp
outsb
push
add
aas
lods
xchg
imull
inc
lods
cmp
or
stc
imul
xchg
dec
sahf
rcrb
in
lods
push
sbb
sbb
sub
sahf
jmp
sub
dec
mov
test
mov
jl
xchg
cmp
js
test
push
shrl
scas
push
outsb
adc
inc
and
es
pusha
ja
sbb
mov
leave
bound
mov
cmpl
pusha
and
pop
mov
repz
icebp
mov
dec
pop
sbb
pop
and
mov
mov
or
aaa
aas
mov
popa
sar
daa
decl
mov
stc
dec
xchg
xlat
ficomps
push
mov
pop
xor
xchg
sub
mov
push
adc
cmp
or
aaa
mov
dec
sub
int
daa
jbe
xchg
arpl
lea
jno
rolb
jae
push
xchg
mov
xor
dec
sbbb
jle
jno
mov
mov
mov
pop
cmp
pop
in
hlt
in
lds
mov
xor
data16
icebp
loopne
adc
pop
adc
std
fldt
movsb
sahf
dec
xchg
fucom
cmpsl
mov
call
mov
lret
ja
add
fwait
xchg
ds
jne
mov
daa
fisubl
fbld
cmovg
cmpsl
cmp
imul
lods
aas
std
fisubl
sbb
push
jne
or
mov
dec
push
xor
sub
ucomiss
adc
bound
clc
pop
cs
test
mov
sub
inc
add
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
jmp
mov
cwtl
test
jb
jb
xchg
adc
dec
pop
push
jo
pop
jge
jo
dec
adc
inc
push
dec
cltd
mov
dec
push
scas
push
cmp
or
pop
ja
repz
hlt
jae
shrb
fldlg2
popf
sbb
dec
mov
fisubs
les
xor
ds
das
andb
push
aaa
mov
clc
mov
cmpsb
fnsave
mov
sbb
test
mov
xor
sbb
jmp
xchg
cmp
mov
aas
sbb
in
cmp
and
jp
fildll
jge
hlt
pop
sti
dec
adc
scas
jo
in
add
addr16
cmc
push
jp
sbb
test
jae
push
mov
push
xchg
gs
or
inc
push
addr16
mov
movsl
sub
outsl
pop
adc
pop
adc
daa
sbb
add
jge
outsb
dec
iret
gs
mov
loope
xlat
outsl
call
jg
cmpl
into
and
jo
xchg
ret
mov
xor
and
xchg
xor
test
ja
dec
and
iret
stos
inc
add
loopne
or
sbb
lods
and
arpl
lret
sub
jmp
push
into
cmp
push
cli
and
mov
cmc
dec
shll
pop
ljmp
push
fwait
sub
sarb
cli
aas
sbb
jp
pop
mov
inc
push
dec
orl
pop
push
ss
pusha
adc
stc
cld
das
jle
loope
cmc
mov
insl
pop
fwait
cmp
xor
jb
popf
mov
scas
insb
rcrb
pop
shlb
repnz
mov
inc
ljmp
mov
mov
xchg
cld
lahf
add
xor
sbb
lods
mov
addr16
ds
clc
add
ja
cli
dec
jae
lock
pop
dec
fldt
testb
jae
lea
mov
arpl
test
mov
cmc
cltd
push
mov
adc
pop
xor
mov
push
or
push
xchg
es
daa
out
mov
and
mov
push
bound
pusha
call
mov
movsb
imul
xchg
mov
scas
cld
test
xchg
loope
repnz
aaa
cmp
sbb
decl
jb
and
cmp
cmpsb
adc
jbe
adc
jnp
push
sbb
pop
sub
mov
push
xchg
rcl
stos
pusha
dec
cmp
inc
xchg
scas
inc
jecxz
add
leave
sbb
pop
sbb
add
or
in
add
adc
outsb
ds
lds
or
rol
pop
xchg
mov
lds
xchg
daa
lock
push
sbb
das
mov
data16
mov
nop
lock
or
mov
cltd
add
scas
jge
mov
fldcw
cmp
shlb
jno
lea
sub
inc
push
movsl
xchg
mov
mov
or
aam
mov
ss
outsl
fstl
or
cmp
inc
mov
jle
xchg
mov
push
mov
lods
ficompl
add
loope
lret
xor
cmc
cld
inc
mov
pop
hlt
mov
push
daa
mov
mov
outsl
les
dec
es
mov
mov
ret
icebp
inc
clc
mov
test
mov
das
sbb
cmpsb
cli
call
push
xchg
jle
cmpsb
jnp
rep
jno
iret
hlt
xor
iret
add
push
push
inc
mov
jmp
cmpsl
jno
mov
das
xor
sbb
daa
add
and
push
mov
and
movl
pushf
sbb
outsb
mov
mov
mov
inc
or
mov
add
or
ret
push
mov
sub
and
movl
mov
adc
movl
sbbl
mov
subl
push
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
xor
sub
mov
sbbl
jmp
mov
mov
pop
dec
xor
and
dec
lock
pop
jo
mov
dec
dec
jl
scas
les
in
aam
subb
jne
jecxz
gs
inc
sahf
jmp
sbb
pop
xorl
sbb
mov
pop
outsb
mov
jns
cld
mov
push
mov
aad
fidivrs
fstpt
addr16
pop
mov
into
and
cmpsl
mov
sbb
aas
cmp
stc
rclb
daa
ret
xchg
mov
cmpsb
lods
xchg
jbe
stc
cwtl
push
push
push
imul
outsl
lcall
dec
mov
repz
je
pop
sbb
push
mov
fnstcw
loope
in
clc
scas
pusha
das
repz
ret
aas
sub
push
add
push
jle
push
mov
and
xchg
notb
cld
lret
movsb
mov
aad
jns
outsl
jnp
mov
roll
outsb
jl
cwtl
ficompl
push
clc
stc
fs
nop
rolb
mov
pop
repnz
dec
mov
js
popf
scas
loopne
lahf
in
testb
cmp
jg
into
xor
mov
pop
pop
aas
roll
les
idivb
dec
jns
sbb
outsl
add
cmp
and
inc
jl
stos
and
or
mov
dec
cld
popa
mov
outsb
adc
mov
mov
inc
lea
adc
sbb
mov
pop
xorl
cmp
jno
rep
push
out
rep
mov
leave
push
in
xor
xor
das
not
cld
xchg
or
pop
xchg
jp
mov
inc
pop
push
rorl
test
and
out
and
dec
rolb
mov
in
stc
pop
sbb
push
cmp
es
fstp
les
pushf
inc
add
movsl
mov
loop
popa
movsb
imul
xor
fdivl
mov
lcall
loop
stc
cmp
repnz
xchg
test
and
jo
loop
fcom
xchg
mov
addr16
xchg
xchg
add
scas
dec
jnp
mov
sub
jl
xchg
ss
pop
push
fmul
loop
aas
adc
insl
xchg
push
rcr
leave
cmp
jp
pop
dec
push
push
ja
inc
jge
setnp
xor
jbe
ret
cld
testl
mov
add
fdivl
leave
inc
cmp
loope
nop
add
sub
xchg
popf
cmc
sub
repz
pop
nop
call
fisubl
jmp
icebp
xor
or
inc
pop
xchg
hlt
mov
xchg
add
subl
jmp
hlt
xor
fwait
repz
inc
xchg
aaa
dec
adc
pop
pop
jo
mov
dec
jo
outsb
ja
notb
ljmp
dec
das
adc
enter
lea
or
loopne
mov
mov
sbb
xchg
fnstsw
stos
mov
sbb
xor
add
pop
in
lahf
mov
jb
mov
mov
sub
xor
mov
cmpl
fwait
scas
inc
out
and
adc
xor
ss
pop
inc
das
jle
xchg
xchg
lock
xor
cmp
and
pusha
aas
clc
sub
add
and
cmc
std
fcmovnb
imul
mov
mov
ret
pushf
mov
rcrb
js
int
push
jle
fidivl
dec
pop
push
sarb
push
clc
idivb
outsl
sbb
mov
xor
cs
imul
jnp
in
mov
mov
push
lcall
dec
jnp
inc
inc
dec
push
ret
jg
mov
xor
mov
push
pop
sub
dec
scas
cli
mov
mov
fistpl
lahf
lcall
lea
push
mov
cmp
loopne
push
in
xrelease
inc
mov
stc
int3
xchg
pop
gs
popa
out
jg
mov
mov
sbb
xchg
sub
scas
dec
xchg
fistps
cmp
push
and
mov
in
jbe
cwtl
jp
mov
jp
mul
dec
xor
dec
xchg
rdtsc
push
lock
repnz
and
and
adc
push
hlt
pop
jbe
xchg
outsl
repnz
mov
lahf
mov
sbb
xor
mov
dec
mov
cltd
paddusb
int3
stos
gs
lcall
dec
fistl
add
xchg
jb
sbb
icebp
jl
out
jo
mov
fptan
test
ss
xchg
xor
jno
dec
and
sbb
imul
mov
sbb
cmp
mov
hlt
insb
add
mov
sbb
add
mov
xor
or
jge
fwait
imul
mov
cmp
jecxz
dec
sub
std
push
pop
add
daa
out
cmpsl
ljmp
dec
int3
fidivrs
and
push
int
fadds
mov
push
adc
xor
lcall
cmpsl
push
xchg
xchg
imul
inc
mov
out
loope
hlt
into
or
jg
jp
xchg
xor
pop
call
sub
mov
dec
in
and
add
add
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
push
xorl
push
test
jmp
mov
mov
jne
jne
sub
dec
pop
push
pop
jo
mov
test
scas
mov
fwait
ret
andb
sub
daa
mov
lcall
mov
decb
fldenv
lods
outsl
test
lcall
testb
fnstsw
push
pop
les
pushf
xor
movsb
mov
mov
popa
mov
or
jmp
mov
in
leave
xchg
fldl
jmp
movsb
dec
data16
jecxz
outsb
push
divl
add
iret
inc
pushf
ja
mov
mov
out
test
cwtl
and
fstpl
adc
ficoml
popa
hlt
xor
nop
mov
push
fcmovu
mov
cmp
xlat
test
repnz
int3
xchg
arpl
loope
dec
inc
dec
push
fldt
jb
push
jge
dec
ljmp
adc
ficoms
in
sub
cltd
mov
sub
push
xlat
xchg
fwait
or
leave
jge
sub
scas
dec
movsl
lds
mov
push
adc
push
fdivrs
and
ss
fucomp
xor
fs
mov
and
push
mov
mov
icebp
in
js
mov
xchg
call
sarl
cli
sahf
ret
movsl
lret
movsb
stc
shll
mov
lret
sbb
mov
pop
out
jp
js
dec
outsl
hlt
mov
pop
xor
sub
add
sti
sahf
inc
sub
into
sti
xchg
push
iret
mov
xchg
movsb
dec
sbb
aad
sbb
push
loop
sbb
addl
push
cmp
pop
and
dec
mov
lret
cltd
loopne
cmp
inc
add
enter
mov
sbb
sti
pop
popf
sahf
scas
gs
rclb
mov
mov
mov
xor
mov
cltd
add
cwtl
adc
scas
jg
scas
jle
dec
shll
push
popa
xchg
push
push
mov
push
mov
pop
xchg
xor
mov
jge
int3
mov
inc
in
mov
lock
cwtl
leave
enter
lock
outsb
ljmp
fbstp
out
and
jp
repz
sub
sub
repz
movsb
xchg
scas
jp
inc
sub
push
xchg
xchg
xlat
out
dec
jns
dec
adc
add
lahf
xorl
mov
lcall
adc
fiadds
sub
fisubrs
mov
xor
in
xorl
cltd
dec
adc
fsubp
cmp
adc
mov
xor
add
add
mov
or
testb
std
inc
add
add
add
add
je
cmpl
jne
push
push
push
push
pushl
push
push
call
mov
dec
mov
jmp
and
imul
mov
add
add
mov
sub
mov
jmp
lret
sbb
inc
loopne
push
mov
rorb
ja
cmc
push
data16
mov
mov
mov
and
pop
les
or
cs
test
loope
std
push
push
mov
inc
test
xlat
pop
pop
mov
adc
pop
xchg
push
fisubs
sbb
sbb
push
jmp
pop
popa
fcmovu
pop
into
mov
sar
or
shll
js
lods
dec
push
push
xchg
hlt
in
add
push
jp
gs
or
sub
and
arpl
cmp
pop
inc
rclb
cltd
in
mov
sahf
fcom
push
jp
cmp
xchg
inc
mov
jbe
pop
or
and
lock
push
jp
cmpsl
int3
out
out
adc
add
adcb
sbb
mov
insl
mov
inc
les
dec
inc
js
pop
pop
sbb
subl
xor
inc
pop
sbb
mov
mov
ds
testl
mov
inc
iret
mov
xlat
mov
mov
mov
ds
sub
daa
adc
mov
sbbb
gs
dec
sub
gs
jno
test
call
fisubrs
xor
and
fimuls
aaa
jb
ss
and
sub
adc
mov
pop
mov
cli
xchg
js
jno
fcoms
roll
sbb
dec
pop
rcrl
stos
dec
xchg
cmp
outsl
out
lods
mov
adc
imul
sarl
stc
mov
xlat
jle
pop
jo
aam
or
repz
jno
iret
test
cltd
aam
mov
test
pop
fisubs
or
ja
sub
jne
jo
loopne
test
loopne
mov
add
or
cmp
leave
sbb
add
pop
mov
xchg
lahf
inc
dec
rolb
xlat
inc
push
cmp
arpl
mov
cmpsl
adc
cmpb
inc
shlb
add
xor
mov
jl
jnp
push
orb
inc
hlt
dec
out
sti
cmpsl
cmp
ss
sti
and
fwait
push
icebp
sub
cs
sti
mov
cmp
repnz
inc
in
pop
ljmp
adc
push
movsb
data16
in
cmc
add
cmpsl
lahf
xor
push
lock
xchg
aas
filds
mov
push
add
dec
popa
sub
ljmp
pop
mov
in
rcrl
in
dec
mov
test
in
dec
mov
inc
sub
sub
je
and
sbb
fs
stos
xor
xchg
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
xor
sub
xor
jmp
call
jno
popa
push
xchg
arpl
test
pop
fs
mov
mov
sub
and
flds
push
pop
dec
inc
mov
xchg
in
mov
add
sbb
cmp
ds
ja
movsb
ror
cmp
pop
stc
popa
addr16
pop
jg
out
pop
lds
push
fwait
into
int
push
cmp
mov
dec
imul
nop
test
sbb
jmp
jle
stc
push
stos
dec
dec
adc
pushf
xor
pop
lret
mov
icebp
das
push
jmp
daa
mov
loope
xchg
pop
add
rclb
stos
mov
popf
shll
mov
or
lret
fs
cld
pop
sbb
adc
and
mov
and
cmp
xchg
push
outsb
fstl
outsb
dec
xchg
and
dec
add
sbb
push
sbb
clc
in
fwait
cmp
push
scas
lcall
inc
adc
add
or
bound
xchg
or
fisubrs
sahf
inc
loopne
push
mov
addr16
and
adc
js
clc
popf
stos
mov
fisubs
adc
mov
outsl
lods
nop
dec
fisttpll
sub
mov
roll
push
lret
in
jg
dec
shrb
pop
cmp
aad
pop
sarl
call
ret
test
lods
out
ja
aam
stc
cmp
mov
cli
out
into
hlt
outsb
aam
lods
ficoms
mov
add
pushf
in
add
lods
clc
mov
push
push
xchg
in
push
mov
inc
arpl
jns
jge
adc
jno
jae,pt
stos
pop
scas
cmp
mov
dec
mov
and
mov
scas
shlb
add
outsb
inc
cs
and
cmc
dec
fucom
cmp
aaa
mov
xchg
out
addr16
mov
add
cmp
mov
mov
andl
outsb
roll
ss
dec
push
sbb
sub
inc
arpl
inc
aaa
pop
pop
pop
push
xchg
mov
mov
mov
jp
pop
push
es
add
mov
cmpb
gs
fcmovnu
push
arpl
jmp
clc
in
mov
ror
push
fisubrs
jge
setns
daa
cld
and
jne
cli
jno
fs
cmp
idivl
dec
pop
adc
data16
and
stos
ret
xchg
ljmp
push
dec
cmp
dec
mov
cwtl
adc
orb
div
pop
jmp
jle
jp
inc
inc
xor
jnp
push
mov
rclb
es
mov
hlt
insl
mov
push
lock
mov
mov
mov
adc
mov
xor
mov
xor
adc
xor
jmp
push
popa
jne
add
cmp
sbb
aaa
cmc
mov
jle
jo
mov
fs
jmp
cmc
push
mov
movsb
mov
roll
dec
dec
fnsetpm(287
mov
inc
sub
out
xlat
aam
mov
ja
push
push
xor
push
push
cmp
lods
stos
test
mov
and
movsl
inc
pop
mov
cmp
dec
cmc
inc
jae
push
lods
jne
xor
sbb
jns
sub
mov
lods
sub
popf
mov
jecxz
adc
mov
scas
push
push
minps
pop
aam
lahf
jge
call
shll
sbb
in
push
jne
out
and
lcall
pusha
jo
push
and
mov
cmpsl
aad
push
imul
in
lret
pop
adc
dec
jmp
jecxz
je
loope
jb
hlt
dec
jns
pop
lock
dec
cmpsl
popa
pop
sbb
add
gs
sbb
in
mov
ljmp
dec
fistpll
mov
add
sub
mov
sub
es
mov
call
imul
xor
xor
push
mov
sahf
data16
pop
xor
sub
pop
bound
fsts
lcall
out
fimuls
push
jle
inc
xor
push
clc
hlt
test
fisubrl
sahf
loop
insl
mov
sbb
dec
add
orl
pushf
int3
scas
mov
cmp
lds
add
and
hlt
rcl
loope
push
lahf
ss
push
mov
cld
stos
inc
lahf
sbb
loopne
xlat
pop
cmp
sahf
cld
pushf
adc
popa
jo
clc
bound
inc
insb
stos
add
mov
std
adc
repz
or
ds
sub
fstpt
push
fimull
loope
or
scas
jmp
aaa
xor
mov
xchg
out
dec
cmpsb
mov
stc
cwtl
clc
aaa
dec
jb
adc
fildll
imul
imul
ja
or
xchg
sub
push
xlat
es
and
cmpsb
mov
push
pop
movsb
aam
fbld
out
jmp
xor
nop
adc
mov
sbb
imul
cmpsb
xor
cld
jmp
cmpsb
mov
pushl
xchg
inc
bound
fadds
push
lret
adc
push
popf
cmp
mov
and
cmp
jnp
lret
cli
mov
shrl
jnp
fcmovbe
mov
loope
adc
clc
add
mov
mov
mov
je
notl
mov
xor
xorl
add
jmp
inc
mov
jp
adcb
mov
and
mov
pop
ret
fistpll
mov
lds
mov
add
into
pop
mov
push
int3
rorb
fwait
push
jns
fwait
es
pop
enter
push
and
out
push
mov
daa
push
loopne
dec
dec
mov
scas
inc
xchg
sahf
js
mov
jg
imul
insl
mov
daa
sar
rcrb
add
cmc
add
cli
popf
pop
lret
adc
subl
dec
pusha
jmp
imul
jmp
mov
mov
mov
cmp
adc
out
fsubrl
ret
outsl
lret
cltd
mov
movsl
repnz
mov
dec
mov
dec
mov
decb
or
cli
cmp
lods
imul
jnp
sarl
xor
movsl
lods
sub
int
mov
jl
popf
lods
jmp
pop
pushf
int3
mov
push
mov
sahf
rorb
mov
roll
adc
and
sahf
lods
push
cmp
lret
popf
and
ret
movsb
sti
mov
pop
int3
out
and
inc
or
test
xor
ret
jns
ja
dec
push
shl
pop
aas
cmp
movsb
fimull
lods
mov
jmp
shl
push
push
push
cmc
in
andb
sahf
imul
data16
mov
lods
lea
xor
or
dec
iret
int3
sbb
adc
jp
fs
subl
imulb
push
dec
bound
movb
xor
cmpsl
cmp
pop
push
pop
es
insl
inc
pop
mov
push
fisubl
mov
push
dec
cld
jge
adc
mov
pop
push
repnz
push
out
and
stos
mov
les
sbb
jecxz
test
mov
lods
mov
adc
ljmp
cs
not
scas
xor
lods
xchg
and
std
cltd
mov
cmp
test
xor
shl
jl
xchg
js
cs
aam
rcrl
fldt
jne
mov
ficoms
cld
insb
imul
xchg
cld
outsb
out
pop
sbb
sbb
or
jno
and
xchg
inc
inc
in
inc
movsl
pop
mov
movsl
lods
dec
ret
movsl
mov
inc
popa
das
stos
fistpll
push
testl
call
pushf
add
aas
mov
xchg
mov
pop
dec
sarb
test
add
adc
sbb
inc
sbb
sahf
cs
xchg
jge
ljmp
xchg
clc
jne
pushl
jmp
and
lods
shrb
in
ja
hlt
xchg
xor
jle
jo
pop
popa
push
sub
lret
cmc
add
stc
jnp
ss
mov
or
xor
loope
cmp
loop
fwait
out
mov
jmp
jno
or
inc
mov
into
loopne
pop
sarb
push
adc
fdiv
scas
fs
jp
sub
mov
pop
dec
push
ret
shlb
jp
pop
leave
and
inc
rcr
pop
test
outsb
adcl
divb
movntps
sarb
sbb
pop
int
mov
outsb
jmp
jae
rcll
jo
mov
dec
jg
xchg
aad
cmovbe
je
sarb
inc
adc
lock
and
lods
in
jl
test
sbb
addr16
jnp
add
jae
sarl
inc
fwait
aad
mov
adc
es
pop
lock
imul
pop
fwait
scas
popl
popf
xchg
addr16
push
and
inc
stos
adc
mov
add
and
jbe
dec
jge
int
xchg
cmp
inc
cltd
or
out
in
jb
cld
out
pushf
push
adc
dec
sub
mov
loopne
xchg
inc
jno
out
push
mov
out
les
call
cwtl
jns
dec
bound
mov
xchg
push
cld
pusha
adc
fstps
cmpb
in
dec
xor
adc
inc
sub
popa
sbb
out
sbb
ja
mov
fmull
inc
push
roll
push
inc
xchg
jne
push
xchg
lcall
and
stos
cmpsl
pop
jl
push
cmp
repz
stos
arpl
dec
ss
pop
push
imul
cmp
mov
cmpsb
test
sbbb
mov
stc
xor
adc
cmpb
dec
mov
movsb
mov
cmpsb
lret
jnp
insl
jae
bound
cmpsl
mov
add
and
push
dec
addr16
repz
outsl
out
aad
adc
xor
cld
mov
ret
sub
add
pop
push
popf
push
addr16
mov
rclb
mov
push
or
data16
cld
inc
loope
call
fsts
xchg
sbb
inc
lret
lea
dec
inc
cmp
ja
lret
xor
xlat
insb
out
mov
and
je
push
jno
out
pop
addr16
rolb
mov
push
inc
mov
lock
out
mov
jge
xor
mov
int
pop
sarb
jge
cmp
jnp
sbb
mov
test
sbb
sbb
pop
mov
ja
jmp
pop
insl
and
xor
insl
jp
or
cmp
orb
jo
mov
jle
cmp
lods
jns
aam
sti
daa
lea
jae
cmpsl
mov
daa
push
adc
test
push
inc
out
scas
mov
jns
pop
adc
daa
jp
imul
out
iret
inc
push
add
sub
ss
fs
call
xor
cmp
cmpsl
in
pusha
jl
inc
push
orb
cmp
aas
cmc
mov
cmpsb
inc
fsubs
data16
data16
lods
mov
loop
addr16
dec
add
sbb
pushf
shrb
cmpsb
mov
lret
mov
mov
sti
cmp
movsb
sub
movsb
xchg
push
addr16
shlb
push
stos
jbe
mov
data16
cmp
xor
push
daa
test
cltd
and
hlt
lods
lods
sub
and
out
mov
fsubl
add
xor
je
clc
xor
sbb
or
push
fwait
movb
and
sbb
jns
and
or
cmp
lods
daa
mov
test
inc
dec
mov
scas
call
mov
mov
lret
push
lds
dec
mov
adc
jle
in
insb
into
test
stos
pop
lret
insb
sbb
test
push
cmp
arpl
dec
jge
mov
mov
nop
dec
push
insl
rcrl
sub
pop
pushf
xchg
clc
lods
dec
cmpsl
hlt
enter
mov
sbb
bound
and
out
mov
cwtl
and
pop
insl
adc
jae
adc
xor
cld
ficoms
fcomps
add
repz
sub
ret
jo
xor
mov
mov
mov
xchg
mov
movsb
call
in
lret
sbb
pop
lret
mov
loopne
cmp
or
pop
mov
inc
in
push
adc
jbe
jns
je
inc
dec
cmp
in
dec
sbbb
cmp
fmul
push
push
repnz
cmp
lret
push
dec
push
pop
jbe
xchg
lret
xchg
out
mov
pop
aad
pop
or
pushf
mov
fmuls
push
out
push
inc
in
movsl
orb
pop
xchg
jns
idivb
jl
push
outsb
sbb
std
pop
aam
inc
leave
gs
movsl
mov
in
int3
dec
jmp
shl
jmp
dec
or
jo
sub
das
es
in
push
addb
gs
rol
es
dec
cli
fucomp
push
sub
sbb
cmp
push
fwait
sub
xchg
inc
xor
pop
in
cmp
push
cmp
shlb
int
jp
inc
loopne
inc
cld
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
xor
add
cmp
movl
je
pushl
decl
pushl
xorl
call
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
sub
mov
or
mov
adcl
xor
decl
add
movl
cmp
je
not
mov
mov
mov
xorl
jmp
lods
mov
loopne
outsb
push
repz
scas
shll
mov
jbe
jo
jle
jo
lret
fcoms
js
push
sbbl
push
mov
inc
not
mov
jbe
insb
jae
or
and
dec
rcrb
inc
xadd
inc
popf
adc
sub
xlat
insl
mov
adc
out
test
jmp
mov
les
lcall
xchg
jae
mov
cmpsl
cmc
fwait
rcrl
mov
sub
incl
fwait
cs
inc
sbb
xor
roll
fadds
loope
fistpll
add
mov
inc
mov
pusha
inc
adc
into
jns
mov
test
clc
pop
pop
xchg
sbb
mov
sbb
xchg
sbb
add
add
push
add
lahf
jl
punpckhwd
jle
jmp
jl
aas
mov
and
shll
lahf
sub
cmp
xchg
mov
dec
jnp
loop
popf
inc
pop
or
mov
sub
mov
call
push
int
clc
push
aam
cmc
push
test
sbb
mov
push
ja
push
jl
cmp
pop
imul
negl
xor
faddl
and
fistps
jmp
pop
fstps
sar
inc
jp
jl
popa
push
ss
mov
add
jmp
and
or
sub
outsb
jnp
adc
xchg
dec
aaa
lods
movsb
dec
mov
xchg
jg
cmpsb
daa
inc
pop
stos
in
jno
mov
test
sbb
leave
inc
xor
test
push
cltd
dec
pop
add
inc
push
out
icebp
adcl
inc
aad
movsl
roll
sub
outsb
xor
sbb
lods
aad
jmp
mov
fsub
and
mov
inc
add
in
insl
jnp
dec
mov
gs
jbe
test
gs
lods
ja
in
fcmovu
push
jg
mov
jmp
add
loopne
call
scas
in
xlat
inc
dec
xchg
pop
or
sbb
mov
aam
xor
xor
xor
fidivs
mov
loop
cs
mov
xchg
cmpsl
ret
out
jg
jp
mov
out
test
arpl
xchg
push
out
shl
pop
adc
cmp
cltd
adc
mov
adc
push
hlt
push
aas
cmp
lcall
add
push
in
cwtl
sbb
push
scas
inc
shll
jno
sub
and
inc
and
fwait
aaa
dec
sbb
xchg
xchg
out
xor
fisttpll
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
orl
add
mov
or
mov
mov
sbb
mov
addl
add
add
mov
mov
mov
add
neg
xor
and
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
pushl
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
add
lea
mov
push
jmp
add
xor
inc
cld
xchg
loop
or
jo
jle
jo
xor
rcrb
sub
mov
das
lahf
std
cmp
push
lret
outsl
cmpsl
int3
clc
adc
xor
pop
adc
aam
push
xchg
addr16
fdiv
je
fildl
enter
je
cltd
mov
out
out
push
push
lahf
pop
lret
mov
push
xchg
fcompl
xchg
and
bound
ljmp
iret
xor
lea
sbb
pop
inc
mull
stc
mov
push
xor
cmp
xchg
enter
pop
mov
cltd
push
repz
pushf
dec
psubd
lcall
jb
das
mov
push
pop
mov
ret
cltd
and
mov
leave
fcom
add
stos
cmpsb
out
clc
mov
jae
mull
pop
insl
jb
pop
push
dec
icebp
mov
adc
xor
out
sbb
aas
mov
pop
jmp
sbb
xor
xchg
out
std
adc
das
lock
call
shrl
loope
push
dec
inc
lahf
ds
cwtl
testl
add
gs
fidivrl
mov
mov
dec
xchg
mov
xchg
push
bound
test
rcll
pop
popf
jb
adcb
outsb
sub
aaa
in
cmpsb
push
iret
lcall
insb
sbb
je
jmp
inc
inc
jbe
xor
xor
dec
shlb
push
and
loop
xchg
pop
push
loop
fists
xor
sub
popf
jg
stos
test
xor
or
nop
pop
fs
lahf
mov
lds
cmc
inc
imul
cmc
pop
sbb
jae
or
mull
dec
add
int
aas
cmp
fsubrl
out
hlt
lret
rcll
jecxz
or
fdivrs
jl
loopne
sbb
imul
push
mov
or
mov
dec
adc
jbe
lods
sbb
fwait
lea
stos
and
in
pop
bnd
psllq
sub
ror
adc
sub
daa
pop
sub
dec
leave
in
mov
mov
icebp
xchg
or
shl
movsl
inc
neg
push
push
icebp
xor
int3
ficompl
sub
mov
mov
add
pop
jmpw
push
sub
add
test
xchg
shl
lods
jmp
rolb
xorl
insl
int3
inc
test
jno
clc
jbe
adc
adc
inc
or
pop
stos
sbb
inc
pushf
pushl
pushl
call
mov
jmp
ret
sbb
sub
jno
pop
or
shll
leave
jo
jo
jle
jo
rcr
test
mov
jmp
adc
stc
adc
lea
mov
add
shr
fs
dec
stc
cmp
in
pushf
pusha
call
mov
xchg
add
movsb
cmp
sbb
and
sahf
icebp
mov
stos
data16
iret
or
adc
adcl
and
jnp
and
lret
sbb
cld
jo
ror
test
ds
adc
or
mov
rcl
aaa
pusha
xchg
cmp
inc
stos
jg
dec
add
push
jp
push
loop
inc
jae
xor
imull
enter
push
fsts
pusha
jnp
pop
aad
std
push
sub
add
mov
cmp
adc
add
xor
sbb
mov
das
lret
add
sub
repz
addb
mov
sbb
insl
mov
enter
es
jb
inc
adc
cmp
lods
rcrl
jae
sub
cmpsl
push
and
gs
rcll
inc
sar
mov
mov
test
lret
xor
cmp
das
dec
pushf
jle
dec
iret
popa
jne
das
sub
pop
stos
sbb
fsubr
mulb
mov
push
jp
js
inc
cmc
jno
mov
outsl
aaa
mov
push
dec
in
inc
jge
data16
mov
mov
push
in
xchg
fs
scas
add
add
aad
mov
rorl
cmpsb
out
dec
jb
ret
outsw
and
fwait
loopne
mov
cmp
mov
and
clc
andl
inc
push
pop
pop
loop
pop
push
out
pop
dec
in
sbb
nop
ja
pusha
xchg
dec
clc
stos
add
sbb
clc
cltd
loop
pusha
jo
leave
sbb
cli
inc
lock
sbb
jg
cmpsb
and
cmp
add
cmp
push
mull
mov
xchg
inc
inc
dec
jg
rolb
data16
stos
notl
xchg
jl
jl
adc
adc
or
push
xchg
cmp
sbb
aam
dec
cmpsb
cli
aam
fwait
pop
inc
lods
rcll
add
in
cld
push
fisubs
ret
dec
add
mov
xlat
or
add
push
lea
xchg
nop
imul
enter
gs
repnz
jne
repz
mov
pushf
dec
stc
fcmove
or
in
lret
mov
stos
dec
rcrb
xor
adc
fstpl
ja
xor
mov
dec
clc
xor
jmp
add
mov
jb
jge
jge
or
jo
jle
jo
sarb
dec
dec
xor
lock
mov
imul
mov
ret
addr16
sti
outsb
lock
loope
adc
dec
cmp
fdivp
call
or
mov
mov
movsb
jns
xchg
sahf
mov
inc
sti
and
aas
test
clc
fcomps
fcmove
stc
aas
dec
mov
adc
mov
ja
fnsave
movsl
add
or
and
mov
adc
adc
jno
sub
sbb
out
in
lock
xor
loop
jl
test
out
jle
push
adcl
lcall
daa
loope
sub
aaa
insb
jmp
or
or
outsl
cwtl
int3
lods
call
adc
clc
adc
js
xchg
inc
mov
sahf
push
or
dec
mov
sbb
jno
pushw
mov
xor
notl
lods
nop
sbb
add
jo
lea
jns
pop
inc
loop
mov
mov
repnz
lcall
pusha
sbb
out
mov
cltd
orl
mov
hlt
js
push
popa
push
pop
sbb
pop
shrb
sbb
stc
pop
xor
testl
sbb
mov
sti
cmc
roll
xchg
or
repnz
icebp
lods
fildll
sbb
popf
mov
das
idiv
or
clc
testb
into
repnz
loop
cmp
inc
rol
jl
push
mov
int
loope
cmpsb
xchg
scas
and
popa
xchg
cmp
sbb
gs
imul
jns
add
sub
stos
and
icebp
inc
or
cmc
pushf
imulb
je
pop
out
lcall
xchg
cmp
dec
cs
lret
push
imul
scas
xor
push
dec
xor
push
sbb
and
test
jb
arpl
or
sub
shrb
mov
and
es
cmp
es
xchg
jb
push
repz
mov
call
rcrl
mov
bound
or
push
das
or
les
dec
gs
dec
pop
repz
enter
shrb
xor
into
idivl
sbbb
and
push
sbb
adc
adc
or
aam
dec
pop
mov
push
pop
imul
and
fwait
jbe
sbb
cmp
xor
iret
sub
ret
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
jmp
icebp
sbb
imul
outsl
stc
and
stc
add
jg
mov
notb
test
pop
push
lods
mov
inc
xlat
insb
jo
cmc
cmp
adcb
adc
xor
shll
mov
pop
inc
sbb
jb
lret
fstpl
addr16
orl
aas
in
mov
dec
push
and
stos
scas
mov
into
push
pop
sbb
dec
movsl
andb
cmp
in
lock
push
cmp
cld
mov
jmp
mov
dec
xchg
mov
mov
es
and
mov
sub
pop
lock
nop
scas
sbb
xor
adc
aad
inc
cmc
fbstp
jnp
scas
lods
adcb
push
test
loop
test
adc
and
ljmp
cwtl
cwtl
or
enter
push
push
test
mov
mov
mov
popa
or
jo
sbb
andb
ret
jmp
ret
iret
subb
xor
aas
sbb
push
in
es
inc
setb
fcoml
imul
mov
mov
test
adc
stos
push
push
imul
push
sub
sub
std
scas
cmp
dec
into
lcall
and
mov
adcl
popa
mov
push
jnp
daa
mov
repz
mov
mov
jae
loop
inc
inc
aad
adc
xchg
ljmp
xor
jns
aaa
xchg
je
xlat
pop
mov
into
test
shll
aad
testb
xor
out
jno
adc
cmp
xchg
dec
sbbb
shll
scas
xchg
out
iret
mov
stos
cmp
movsb
inc
xchg
test
dec
pop
mov
adc
insl
test
arpl
pushf
adc
sub
jmp
je
jecxz
popa
pop
jne
mov
pop
xor
mov
mov
pop
push
jb
hlt
scas
adc
in
mov
cmp
fwait
js
cld
inc
pushf
xchg
ffreep
fldcw
jno
lahf
js
dec
push
addl
test
lock
mov
push
and
and
inc
aad
out
and
popa
sarb
dec
aas
insb
in
pop
call
jo
pop
nop
movsl
loope
pop
incl
cmc
cmpsb
out
cmpsb
dec
adc
lret
pop
fadd
insl
push
enter
xchg
pop
xor
rorb
movsb
mov
in
pop
shlb
cli
mov
jmp
mov
fidivs
dec
and
or
add
sbb
test
push
xchg
fisubl
dec
xchg
lock
cmpsl
lods
push
jle
and
inc
mov
out
push
dec
pop
xchg
sub
xchg
dec
mov
imul
jmp
aas
fidivrl
sbb
bound
sub
icebp
pop
icebp
movsb
js
jo
jle
jo
popaw
lods
ret
in
ret
lcall
out
in
aaa
xchg
mov
sub
and
popa
mov
call
mov
arpl
dec
out
stos
cwtl
push
test
push
xor
or
mov
rorb
cmp
mov
das
cmpsb
call
cs
push
ret
sbb
xor
mov
push
lahf
std
cmpb
movsl
and
sti
mov
dec
sbb
popf
in
outsb
push
popa
inc
xchg
pusha
cmpsb
gs
mov
mov
jbe
adc
gs
shll
loop
stos
incl
sub
mov
mov
mov
imul
cmp
fidivrl
push
scas
or
shlb
aad
or
adc
push
mov
xor
mov
ret
nop
lcall
jmp
jp
sbb
push
adcl
cmp
mov
shrb
bound
push
push
lods
gs
xchg
daa
push
push
lahf
lock
fimuls
or
icebp
mov
sbb
outsb
out
je
out
and
or
xor
call
sbb
cmpsl
iret
aaa
xchg
loope
sub
push
push
stos
sbb
cmpsl
jle
or
and
in
xchg
jae
ficoml
addl
jle
or
clc
mov
outsb
shrl
push
sub
nop
xor
js
call
xchg
push
mov
mov
dec
cld
mov
mov
pop
lods
inc
testb
mov
insl
inc
dec
xor
clc
fimuls
push
cs
and
dec
sub
int3
aam
inc
shll
xchg
adc
pushf
and
cmpsb
sti
notb
inc
mov
cmc
call
fwait
js
bound
mov
jle
mov
stc
imul
adc
xchg
dec
test
int3
and
adc
in
push
xchg
sbb
sbb
push
adc
out
in
mov
mov
shlb
and
mov
mov
jo
cmpsb
jl
push
xlat
aaa
xchg
and
and
xchg
push
add
push
jne
gs
bound
mov
enter
into
mov
or
inc
dec
psraw
subl
sub
mov
xor
movsb
add
xchg
subl
sbb
dec
sub
stc
test
jecxz
cld
test
pusha
mov
adc
sbb
mov
sub
sub
dec
in
sub
loop
and
sub
mov
mov
mov
xor
mov
jmp
mov
jne
pop
push
fptan
lcall
mov
pusha
push
outsb
pop
add
mov
fdivrl
shlb
lret
xor
in
adc
pop
in
inc
sbb
xchg
mov
cmpsl
andb
addr16
clc
fimull
outsb
mov
ds
in
xchg
jp
jo
adc
cs
sar
aad
xor
add
or
jle
mov
clc
cwtl
sub
add
jnp
outsl
sbb
test
pusha
or
sahf
mov
js
pop
or
lods
test
dec
inc
mov
sti
inc
jae
pop
push
daa
jp
mull
in
lea
mov
xchg
jbe
cmpsl
and
dec
dec
es
xchg
fsts
imul
jo
ss
movsl
out
add
mov
rcll
push
sub
inc
xchg
jp
iret
lds
jle
push
cmpsl
or
mov
add
sbb
fcmovbe
xchg
sarl
lds
pop
stc
in
push
aaa
push
sbb
inc
mov
add
jns
jbe
inc
xchg
mov
je
xchg
out
mov
push
jmp
fnstcw
loop
mov
in
test
mov
add
pop
enter
test
ds
shrb
jmp
jl
adc
scas
mov
sti
bound
dec
neg
shll
and
push
out
out
or
pushf
int3
push
add
or
xchg
dec
sbb
stos
xchg
negl
cmc
add
jnp
popf
shrb
movsb
not
outsl
imul
ja
add
mov
cmp
sub
push
xor
push
or
fs
push
orb
mov
cmp
adc
pop
shll
fsts
ja
mov
xchg
in
pop
scas
mov
or
dec
lea
inc
ficoms
pushf
testb
mov
icebp
jbe,pt
lret
fcmove
sub
add
adc
push
inc
adc
mov
aaa
shl
sub
push
out
fistps
icebp
ljmp
push
arpl
lret
pusha
adc
cmpsb
mov
cltd
ss
dec
enter
and
into
inc
add
or
mov
mov
mov
insl
aas
pop
pusha
adcl
jns
or
xor
mov
mov
aad
test
lods
push
add
or
jo
mov
pop
out
stc
aam
pop
xchg
mov
inc
and
popf
jmp
adc
mov
rcrl
dec
out
mov
mov
fucom
dec
mov
mov
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
jmp
sub
sub
xchg
push
mov
cld
fcompl
add
mov
dec
push
imul
jg
jge
sbb
dec
imul
fs
or
pop
popl
div
mov
mov
inc
and
xchg
addr16
and
push
clc
sub
jo
and
mov
xchg
test
jle
enter
gs
mov
jns
inc
lcall
ja
ljmp
add
mov
inc
mov
xor
sbb
sarl
pop
es
popw
lahf
cli
jle
popa
ficomps
sarb
sarb
and
xor
sub
aas
mov
sbb
add
inc
cmp
in
insl
lret
push
sbb
mov
add
pop
mov
mov
test
cmp
push
das
stc
sbb
dec
sbb
imul
adc
repnz
pop
mov
cmp
and
mov
inc
cmp
sbb
sbbb
insl
lock
push
shll
rcrb
repz
mov
outsb
or
push
jo
sub
das
pop
fisubrl
jp
add
mov
xor
pop
pop
or
sub
jno
xchg
push
push
mov
pop
add
idiv
clc
incb
lcall
cmp
mov
mov
outsb
mov
inc
lods
mov
mov
test
jp
push
push
or
orb
fsubrl
mov
or
pop
testl
loope
xchg
scas
adc
fsts
mov
xchg
in
xlat
push
pop
ljmp
jbe
pop
dec
ljmp
out
add
xor
aas
and
mov
add
xor
movsl
jecxz
mul
fiaddl
xchg
insb
lret
test
or
arpl
and
sar
or
popa
add
dec
push
xchg
into
sbb
sub
jo
out
mulb
xlat
movhps
push
jnp
adc
cmpsl
enter
out
mov
scas
inc
cmp
in
daa
test
iret
insb
mov
insb
inc
cmp
dec
mov
pop
jl
mov
inc
mov
call
loope
pusha
sbb
pop
cmp
andb
sbb
dec
mov
lret
push
sti
insl
idivb
outsl
loope
mov
dec
push
addb
cmc
sbb
dec
outsb
in
enter
out
insl
repnz
loop
insl
or
jae
outsb
xor
add
div
mov
jmp
adc
inc
rolb
xchg
int
rcll
test
mov
sbb
jg
mov
mov
insb
inc
test
pop
sarl
jp
mov
mov
add
mov
sub
sbb
inc
xchg
cmp
push
xor
fadd
mov
movsl
ret
fimuls
outsl
sub
sti
sbb
adc
dec
add
jo
fists
sahf
mov
fwait
mov
sbb
dec
mov
call
icebp
mov
lea
je
xchg
mov
jbe
jle
xor
sub
sbb
push
inc
cmp
or
or
or
sbb
bound
mov
xchg
xchg
cmp
imul
or
fsubp
fisubrs
lock
mov
and
sbb
mul
pop
push
sbb
dec
dec
xchg
cmp
sbb
leave
out
das
push
jne
jle
sahf
xchg
sbb
and
dec
mov
push
insb
aas
cwtl
mov
push
jge
aaa
in
insl
push
mov
fisttpl
xchg
lcall
call
xor
inc
sub
pop
cmc
call
pop
aam
icebp
mov
data16
repz
arpl
dec
inc
mov
mov
ret
addr16
lock
ja
mov
lock
mov
gs
fidivs
into
sub
repnz
int
test
dec
test
rorb
or
sbb
andl
gs
inc
cmpb
pop
cld
add
loope
mov
int3
cmc
inc
daa
fidivrs
insb
pop
sub
into
ds
pop
sbb
mov
in
adc
rolb
mov
mov
cmpsb
clc
mov
sbb
repz
movsb
aaa
mov
shl
xor
push
cmp
inc
insl
test
or
xlat
lret
xchg
sub
shl
mov
sub
or
out
orb
cmp
std
pusha
leave
adc
mov
notb
pusha
pop
popa
cmpsl
mov
loopne
dec
jbe
scas
xchg
jge
sti
scas
ja
outsl
inc
adc
push
popl
mov
fmull
jnp
and
std
imul
not
ret
mov
fs
repz
pop
shlb
jg,pt
add
pusha
incl
jp
adc
adc
lods
sbb
dec
xchg
xchg
scas
mov
xchg
or
xor
dec
out
sbb
or
sbb
push
mov
sbb
inc
adcb
daa
lock
xorl
ret
pop
in
movsb
sub
dec
jg
cs
and
aad
inc
cmpsb
outsb
mov
xor
lea
jmp
sub
mov
popa
pop
xchg
aas
adc
cmpl
ret
and
cmpsl
dec
loope
enter
fidivs
rolb
xchg
lret
incb
push
add
imull
adc
adc
add
pop
mov
testb
andl
sbb
call
jle
jno
clc
mov
or
or
fdivrl
inc
jmp
pop
enter
pop
ja
sahf
lahf
sub
adc
ja
mov
mov
mov
mov
xor
jle
inc
fistps
hlt
stos
jl
adc
jo
mov
dec
filds
jle
in
mov
mov
add
inc
or
sub
std
inc
push
mov
mov
repnz
dec
push
fiaddl
nop
aaa
add
out
pop
xor
and
and
add
mov
imulb
jge
mov
jmp
mov
outsl
mov
mov
cmpsl
sbb
leave
adc
push
mov
sub
xchg
jmp
and
js
in
sub
pop
add
int
iret
add
aad
mov
repz
cwtl
insl
mov
adc
cmpsl
ret
pop
arpl
jle
push
xor
inc
cmp
sti
add
mov
mov
pop
inc
mov
push
inc
ss
ja
filds
adc
dec
fisttps
cltd
mov
out
rcrb
arpl
fidivrl
insb
lods
cli
push
out
into
xor
arpl
std
call
mov
xorb
sbb
int
mov
mov
insl
lcall
popf
icebp
js
cli
add
div
outsl
stos
pop
sbb
mov
xchg
shrl
xchg
mov
push
ss
push
int
arpl
jo
scas
test
repz
push
insl
loop
bound
lcall
or
gs
gs
or
outsb
mov
cmpb
mov
out
hlt
scas
dec
mov
mov
clc
xchg
into
pop
pop
rclb
int
cmpsl
jne
js
int3
push
inc
mov
aas
push
jle
loope
out
stos
outsl
in
repz
test
mov
xchg
cmpsb
out
ret
dec
fcom
adc
sub
adc
lods
push
lods
mov
jecxz
dec
stos
pop
in
mov
push
jle
jo
pushw
mov
arpl
clc
rclb
cld
cs
es
lds
loop
iret
mov
test
in
fldl
sub
fwait
pop
int
mov
into
in
rorl
push
or
xchg
mov
jmp
dec
fistpll
arpl
pop
jp
pop
movsl
imul
mov
jmp
mov
decl
mov
xor
or
loop
cmp
mov
sbb
mov
iret
xchg
div
aas
das
inc
dec
push
dec
loop
test
mov
lret
enter
repz
pushf
data16
and
mov
pop
mov
and
jecxz
push
shll
roll
call
pop
iret
sbb
mov
stos
jmp
inc
xor
mov
pop
shrl
in
jle
mov
test
insl
ret
xor
add
mov
fidivrs
add
jb
cmp
lds
pop
std
popa
or
fnstsw
mov
out
lds
cmp
pop
jp
cmp
jmp
add
imul
mov
scas
add
test
inc
cld
sub
mov
xor
imull
inc
fstpl
lods
cmp
cmp
mov
out
mov
nop
ss
lahf
mov
cmp
mov
addb
jl
out
fcmove
push
icebp
mov
cmpsl
insb
pop
aas
test
test
aad
mov
sub
sub
das
mov
and
xchg
push
sarl
lock
and
test
sub
pop
pop
out
add
dec
es
subb
out
push
rcrl
test
nop
jns
incl
and
add
jmp
sub
or
stos
insb
pop
add
in
inc
pop
push
or
mov
insb
xchg
add
sub
lcall
jp
push
mov
sub
sbb
daa
sub
clc
cmp
lds
cmp
mov
daa
mov
sub
call
add
arpl
mov
out
cwtl
fiadds
movsl
cmc
inc
add
mov
xchg
add
aad
mov
or
dec
cmp
fimuls
bound
adc
xor
mov
xlat
mov
das
loope
imul
dec
push
jmp
xchg
js
xchg
pcmpeqw
xor
popf
push
xlat
pusha
outsl
mov
push
les
ret
aad
mov
sbb
icebp
inc
jno
das
sarb
cli
xor
jae
jb
jnp
xchg
out
lret
or
popa
jb
bnd
imul
lcall
aad
and
jp
mov
add
aas
push
in
xlat
sub
cmpsb
cld
lret
movsb
aaa
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
jmp
adc
iret
cmpsl
aad
jae
jl
jge,pn
orl
jo
jle
jo
out
lahf
popa
hlt
push
lea
out
testb
dec
icebp
jno
stos
bound
jns
movsl
xchg
aas
test
fmul
mov
pushf
cmp
stos
or
stc
inc
pop
ds
sbb
xor
sbb
pop
adc
fwait
and
es
stc
popa
jp
mov
fwait
xor
sub
stos
cmp
int
push
popa
subl
ds
mov
call
dec
adc
fwait
or
lods
fwait
and
fmull
js
fisttpll
push
lods
ds
adc
adc
popf
fdivrs
aaa
rorb
mov
stos
nop
ficoms
icebp
adc
cmp
inc
dec
addb
xor
mov
outsl
out
lret
mov
pop
adc
lret
sub
ret
pop
stos
dec
pop
out
fdivr
add
xchg
lods
testb
sbb
sub
dec
mov
cmp
sbb
or
mov
cmp
push
fwait
dec
fdivrl
xor
in
dec
insl
push
in
dec
xor
push
dec
shr
fs
and
lods
lahf
je
mov
or
scas
push
call
loope
enter
sbb
je
inc
fsubp
dec
pushf
mov
adc
and
out
aas
popf
add
push
mov
cmp
push
pop
xor
jns
sahf
push
mov
mov
fdivr
les
pushf
das
xor
lods
loopne
push
inc
xchg
insl
push
js
pop
mov
mov
jmp
and
dec
dec
fsubrl
xchg
outsl
cmpsb
stc
mov
mov
mov
add
sbb
mov
inc
sbb
pop
mov
subb
mov
mov
cmp
push
and
out
stc
or
ja
mov
imul
xchg
cmp
adc
adc
call
call
ljmp
add
xorl
adc
pusha
out
pop
enter
hlt
cli
push
and
fmull
les
pop
sbb
outsb
jle
pop
daa
test
or
outsl
mov
ja
ret
pop
cli
mov
pop
push
adc
pop
in
pop
outsl
cltd
inc
push
pop
sub
setg
repz
adc
adc
xchg
and
fiaddl
mov
int3
in
sbb
and
or
aaa
aam
dec
sahf
shlb
jbe
in
mov
fs
stc
dec
cmp
testb
or
xor
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
jmp
or
shll
jno
jmp
lds
adc
adc
jo
jle
jo
pop
faddl
push
mov
jns
cmp
push
pop
or
mov
sbb
or
scas
loopne
mov
vmwrite
cwtl
in
cltd
nop
shll
sbb
jno
sbb
pop
mov
and
lods
sub
shlb
or
ret
xchg
ss
cmp
pop
std
mov
or
clc
leave
dec
and
mov
ret
inc
bound
jle
xor
out
push
jl
pop
out
jge
mov
scas
lret
push
and
mov
cmp
fisttpl
cmc
inc
adc
jge
inc
and
icebp
mov
cmpsl
cmp
cli
inc
fidivl
sub
jg
mov
fwait
jl
xor
sbb
xchg
inc
push
cmp
mov
sbb
mov
add
mov
add
mov
or
jmp
inc
out
loopne
dec
mov
insb
cwtl
pop
add
hlt
add
push
aam
sbb
sbb
shr
jp
xor
sbb
stc
cs
mov
mov
test
and
dec
imul
cmp
insl
jae
into
cmpsb
stos
lret
enter
inc
xchg
dec
andl
adc
jmp
shrl
mov
ret
mov
mov
pop
pop
loopne
jle
cwtl
fiadds
jnp
xor
xchg
repz
in
jmp
mov
push
rol
mov
jae
aaa
mov
inc
addr16
mov
mov
push
addr16
pop
mov
insl
test
fs
ds
inc
into
add
je
cmp
cwtl
fwait
sti
push
cmp
cmp
inc
ss
movsb
mov
sub
repz
push
jno
lret
dec
jl
subl
ret
out
popf
pop
imul
pop
into
incl
jmp
clc
fsubl
mov
movsl
xchg
ret
push
outsb
loopne
cmpsb
jle
push
fiaddl
lods
or
mov
inc
cmp
cmp
leave
xor
adc
dec
jb
push
pop
mov
sbb
fisubs
ret
ret
add
mov
jle
sti
daa
xchg
lea
mov
mov
inc
jp
sub
hlt
sbb
pop
in
sbb
test
pop
lret
aas
push
and
mov
movsb
xor
xlat
sub
int3
pop
inc
inc
jecxz
insl
out
fldenv
sub
push
rol
imul
xchg
adc
mov
fnstenv
pop
push
pop
inc
xchg
sub
jmp
cmc
icebp
lret
mov
test
jnp
pop
mov
adc
mov
mov
sahf
and
xchg
jne
and
loope
push
fidivs
xchg
enter
lahf
fwait
mov
ja
lods
lcall
sbb
inc
mov
xchg
test
jne
imul
mov
push
add
shr
lea
aas
lods
add
out
cmpsl
mov
adc
inc
push
sub
andl
xor
jecxz
push
dec
fcomps
inc
push
mov
mov
or
sub
jmp
aas
mov
inc
cli
xchg
mov
cwtl
pusha
outsb
cli
pop
and
das
sahf
imul
aam
xchg
xchg
cmpsl
lods
push
mov
rcll
andb
test
inc
outsl
xlat
test
pop
sarb
jecxz
fnsave
mov
inc
and
out
cmpl
add
fidivrl
test
sbb
dec
cld
outsb
sub
shlb
cli
and
push
das
movsl
cmp
dec
adc
cli
mov
jb
add
out
add
mov
dec
ds
scas
stc
aaa
inc
shlb
mov
inc
stc
mov
es
push
shll
push
fsubrp
enter
sahf
sbb
mov
lock
fsts
add
out
mov
shll
cmp
jb
inc
add
mov
inc
inc
mov
test
adc
push
jno
divl
imul
inc
fnsave
xorb
dec
aaa
jmp
xchg
aad
aad
jbe
cmpsb
jo
push
aaa
loop
das
sarl
hlt
and
and
les
fiaddl
scas
mov
hlt
push
lret
xchg
negb
cmp
lret
lret
push
out
push
in
xchg
ret
test
jecxz
mov
ret
sub
mov
xchg
or
in
jge
dec
mov
sbb
sbb
xor
xchg
pop
ja
pop
out
int
xchg
jns
add
push
and
xchg
push
cmp
mov
inc
repz
js
inc
inc
fistps
pushf
fs
mov
dec
pop
hlt
je
cmpsl
push
or
pop
sub
sub
fwait
mov
add
xchg
cmp
scas
adc
inc
xchg
inc
or
mov
test
mov
xchg
jp
stc
iret
pop
sahf
xor
call
pushf
add
sub
aas
sbb
push
sbb
arpl
sub
push
push
xor
jne
xchg
lods
xor
push
push
jb
lods
xchg
jmp
cmc
std
fs
jno
mov
aas
xor
jo
jle
jo
pop
mov
push
xor
xchg
cwtl
pop
bound
sahf
xlat
jp
xchg
mov
dec
sti
pusha
mov
addb
push
hlt
and
stos
lods
pop
decb
jp
sarb
xchg
and
jge
jb
shll
rcrb
loope
sub
jo
sarb
xor
aas
jns
xor
leave
fistpll
pusha
pop
and
mov
movsb
xorb
pop
pusha
lcall
pop
mov
nop
xchg
pop
incb
addr16
cmp
rclb
sub
sbb
dec
dec
lods
mov
dec
or
fwait
mov
cwtl
icebp
add
in
aas
fisubrs
pusha
mov
arpl
movsl
mov
xorb
leave
int3
and
xchg
jmp
mov
push
push
xchg
cmp
jb
mov
xchg
hlt
xorl
popf
adc
cmp
lcall
fdecstp
push
xchg
in
mov
xchg
repnz
cmpsb
cmp
scas
loope
and
jbe
mov
adc
lcall
sbb
out
dec
leave
shlb
sub
push
xchg
pop
mov
lret
rcrl
mov
xor
repnz
fidivrs
mov
lcall
push
rclb
dec
cwtl
sub
push
dec
push
dec
xchg
aad
popw
cmp
jl
leave
jnp
lock
notb
mov
ret
xlat
out
mov
add
mov
ret
movsb
cmovs
aas
icebp
adc
inc
sbb
xchg
cmp
xor
xchg
xchg
int3
fdivs
pop
push
js
mov
call
sub
add
xchg
sub
mov
scas
icebp
in
out
dec
and
scas
andb
sub
imul
push
imul
push
mov
js
cwtl
pop
sbb
lret
es
imul
sahf
faddl
push
adc
pop
sti
mov
test
or
je
cli
fdivs
jp
sbb
repz
adc
test
imul
xchg
popf
mov
mov
test
adc
and
xchg
or
test
cmp
mov
cmpsb
mov
jbe
mov
outsb
shll
sahf
sub
dec
cmp
add
sub
mov
clc
iret
sub
inc
fucomi
cmpl
loope
arpl
dec
ficompl
pop
sbb
test
push
and
movsl
testb
cmp
mov
xchg
pop
ret
out
xchg
add
lret
test
dec
mov
jmp
outsb
ds
loopne
outsb
outsb
mov
sub
jg
mov
inc
outsl
inc
test
ljmp
in
int
lahf
or
scas
fcmovnb
mov
arpl
aas
lock
sub
dec
mov
daa
bound
push
out
cmp
mov
mov
mov
sbb
adcl
push
mov
mov
adc
push
mov
out
ss
sahf
in
xchg
sbbb
jmp
adc
xor
lods
push
xor
mov
loope
iret
adc
mov
mov
add
adc
adcb
inc
clc
jmp
stc
mov
cmpsb
mov
mov
pusha
cmp
lret
das
lret
jnp
leave
pop
push
je
scas
daa
mov
adc
mov
or
hlt
out
stc
ljmp
shlb
mov
mov
lea
andb
insb
and
fs
fld
ficomps
push
mov
adc
dec
stos
popf
mov
mov
inc
call
mov
mov
add
in
loopne
int3
aad
inc
jp
and
pusha
ja
jb
xchg
adc
loop
xchg
mov
cld
popa
popa
mov
aad
in
gs
clc
testb
jl
rolb
xchg
push
mov
insb
push
sub
mov
mov
mov
xlat
out
push
add
push
mov
in
mov
cmp
inc
mov
cmp
sbb
xor
lock
dec
jge
daa
outsl
dec
adc
and
jae
mov
inc
add
xchg
test
sub
mov
or
jne
out
pusha
push
pop
fcoml
lret
add
jnp
push
push
fistl
movsl
loope
push
add
and
outsl
pop
dec
dec
daa
or
dec
or
movsl
mov
adcl
imul
mov
sub
loope
lds
in
cmpl
lcall
sti
ds
cmp
xchg
movsb
fcmovnbe
dec
cmpsb
clc
adc
sbb
mov
xor
cmp
jecxz
js
stos
xorl
cmp
jle
push
rcrb
out
push
and
cli
dec
into
adc
push
push
mov
icebp
xchg
pop
mov
push
aam
jle
js
mov
and
bound
mov
insb
and
aaa
adc
cmc
movsb
jno
in
mov
mov
dec
repnz
inc
rcr
sbb
add
mov
les
inc
inc
negb
out
pop
andl
inc
sub
mov
cmpsb
sbb
scas
roll
xchg
push
xor
mov
jmp
cmp
push
add
data16
and
adc
adc
aaa
sbb
mov
dec
adc
jnp
mov
das
scas
and
mov
loopne
stos
and
mov
bound
rcr
loope
pop
insl
fisttpll
hlt
jb
mov
adc
test
dec
xor
js
jne
call
mov
std
inc
push
clc
jmp
scas
xlat
idivb
cmp
lret
and
movsb
dec
pop
adc
repnz
test
push
scas
and
inc
gs
dec
xor
es
pop
mov
cmp
inc
daa
jne
fs
jae
jne
insb
scas
push
ret
outsl
mov
ret
mov
pop
mov
cmp
out
or
ficoml
ror
or
pop
add
jle
scas
bswap
into
xchg
hlt
rcrb
dec
insl
and
cmc
jne
mov
or
xorl
dec
sub
repnz
mov
or
insb
cld
or
orb
imul
cltd
daa
inc
dec
push
rorl
test
lcall
xor
jp
nop
xchg
jp
push
movsb
and
mov
mov
sbb
add
sub
push
das
in
push
out
push
fnstenv
sub
mov
imul
push
sub
lds
adc
or
xor
cs
in
gs
jbe
ret
mov
daa
sub
shlb
ds
pop
in
jae
adc
jbe
lret
jecxz
test
sbb
sbb
movl
jge
out
dec
test
sub
hlt
test
movsl
xor
cmp
xor
adc
out
dec
out
push
dec
xor
push
ja
imul
pushf
das
jb
and
pop
sub
xchg
xlat
clc
sub
jp
outsl
stos
xchg
cmp
mov
mov
mov
xlat
inc
cmp
std
or
js
adc
ret
movsl
hlt
add
or
or
push
je
dec
and
iret
dec
cmpl
or
bound
inc
adc
pop
and
jne
sti
mov
imul
mov
test
clc
fistpl
fldenv
xorb
test
scas
mov
sub
inc
fsubrl
mov
inc
aaa
jns
insb
or
mov
daa
mov
mov
xor
ret
mov
cmc
jbe
repz
add
push
mov
out
sbb
out
sbb
mov
pop
xorb
sub
mov
lock
sbb
cmp
in
jmp
add
mov
fwait
test
xchg
and
lds
dec
push
xor
xor
gs
inc
add
dec
jmp
fsubp
stos
mov
insb
leave
pop
sub
int3
lds
and
jg
mov
mov
sub
je
imul
cwtl
adc
sti
out
sbb
sub
jb
mov
jle
mov
lock
cmp
xchg
mov
sbb
stos
loopne
lods
repnz
andb
dec
rolb
mov
das
mov
test
inc
stos
cld
filds
xchg
and
dec
adc
in
clc
jecxz
and
xchg
jp
cli
push
or
mov
cmpsb
cmpsb
dec
daa
mov
adc
add
mov
jb
mov
testb
or
inc
sub
push
sub
sti
jmp
dec
mov
jno
in
sub
sarb
idiv
sub
and
mov
fdivs
push
push
dec
lcall
int3
xor
mov
jmp
xchg
fs
mov
jl
cmp
sub
sbbb
add
inc
dec
in
xor
in
cli
shr
mov
inc
lret
loop
fsubr
push
lods
lds
and
out
fistps
insl
cmp
pop
and
mov
mov
mov
ss
ljmp
test
xchg
push
jecxz
add
push
hlt
hlt
pushf
push
popf
addr16
xor
inc
js
lock
pop
mov
mov
sbb
dec
in
iret
xlat
mov
daa
mov
lods
ret
mov
jmp
loopne
sbb
add
icebp
jne
jmp
cli
dec
stos
pop
xor
jno
push
lahf
shll
xchg
pusha
cmpsb
mov
imul
popf
adc
dec
fmull
sub
loope
fnstcw
lods
jbe
or
ja
push
sbb
cmp
mov
aaa
fcomip
je
packsswb
cmp
outsb
sahf
pop
jb
sub
cltd
push
lods
push
popf
cmc
mov
add
mov
pop
pop
and
push
iret
orl
dec
leave
lods
js
dec
in
pop
inc
outsl
pop
stos
sub
mov
outsl
subb
inc
nop
movsb
xor
scas
cmp
jmp
sub
stos
popf
add
sbb
xchg
pusha
nop
dec
imulb
fnstcw
cmp
addl
lock
or
mulb
and
insl
aam
loopne
lret
pop
add
jg
sub
fdivs
pop
in
gs
pop
mov
fs
movsl
test
fbld
jbe
pusha
fmul
and
or
dec
push
out
sahf
jo
roll
dec
ret
and
imul
aad
ljmp
jp
jle
rolb
aad
std
loop
jle
out
push
cwtl
sahf
fnstenv
rolb
pop
hlt
pop
mov
pop
jmp
cld
pop
cmpsl
addr16
gs
mov
pop
mov
mov
jle
jo
inc
repnz
sub
mov
mov
jbe
adc
dec
push
pop
add
push
repnz
adc
sti
mov
sub
lods
cmc
mov
inc
pandn
inc
cmp
mov
test
stc
incb
adc
push
ret
js
icebp
jle
mov
add
pop
xchg
addr16
into
rcrl
out
jnp
mov
add
hlt
push
push
out
xchg
imul
call
xor
add
jo
mov
jb
inc
cmp
pushf
and
and
inc
shl
push
and
lcall
repz
cmpsb
or
add
pop
imul
add
adc
and
cmp
or
and
mov
xchg
sub
dec
mulb
test
cmpsb
xor
or
cs
test
das
jp
mov
cli
repnz
jmp
ljmp
js
loop,pt
int
es
cli
scas
sub
rol
bound
mov
out
or
mov
clc
jle
mov
mov
jge
mov
mov
test
lock
jmp
sti
add
dec
xchg
lahf
adc
mov
jae
or
into
sbb
adc
jmp
mov
xor
jns
ja
test
xchg
xor
add
or
dec
bound
dec
cmp
ja
and
std
shlb
cwtl
fsts
out
pop
mov
xchg
leave
jge
adc
dec
int
add
xchg
xchg
bound
iret
and
pop
movsl
into
mov
imul
ds
mov
leave
icebp
pop
stc
and
popa
dec
mov
test
fisubrl
pop
mov
jb
aas
pop
and
arpl
ds
nop
xor
sub
jg
iret
cmp
inc
adc
inc
movsb
push
outsb
sti
dec
mov
push
and
push
sbb
pusha
sub
loope
rclb
cld
pop
aaa
jmp
subb
cmp
jno
lret
jae
lds
xchg
fcoml
js
fimuls
loope
add
add
sbb
jne
lret
mov
and
mov
adc
cwtl
sbbl
xor
mov
xor
push
mov
call
shll
gs
xorb
push
xor
lret
cmp
aas
stos
sbb
popf
popl
icebp
push
jl
iret
xchg
insb
cmp
adc
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
in
inc
jmp
fisttps
jecxz
out
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
cld
add
test
in
in
cld
jge
mov
fsub
add
mov
add
add
mov
inc
push
fisttps
test
fadds
jmp
fildl
inc
jo
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
ret
cld
incl
out
xor
mov
cld
jo
or
add
push
add
mov
decl
add
inc
orb
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
push
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
pushf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
das
mov
mov
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
lret
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
enter
xor
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
cmp
pushf
or
enter
xor
pushf
inc
ds
pushf
inc
mov
lock
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
pushf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
pushf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
bswap
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
les
mov
mov
cmp
mov
add
xor
pushf
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
fs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
int3
lea
push
xor
pop
lods
incl
mov
pushf
jo
cmpl
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
pushf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
scas
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
pushf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
fdivr
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
and
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
faddl
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jo
inc
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
jmp
inc
push
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
int3
jne
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
loope
sub
inc
loope
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
out
inc
aas
jmp
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shl
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
pushf
add
rcr
inc
add
add
out
inc
inc
sub
dec
and
jo
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
ss
add
add
add
add
movb
or
dec
lea
or
movsl
fiadds
jae
or
in
pushf
inc
xor
pop
inc
shl
inc
sub
inc
add
add
loopne
inc
ret
inc
mov
leave
and
add
mov
sbb
sbb
stc
test
lea
mov
dec
sarb
add
inc
ljmp
or
jge
mov
clc
leave
inc
add
rdpmc
sbb
mov
cmovne
jmp
inc
mov
sbb
mov
add
out
add
sub
add
jo
leave
movl
inc
add
inc
out
stc
int3
jb
xor
or
dec
mov
movb
loopne
inc
lea
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
test
jne
orl
jmp
inc
jne
mov
mov
shlb
push
mov
gs
add
inc
dec
into
mov
jl
add
inc
mov
add
add
inc
or
inc
in
fsub
inc
add
add
call
pop
test
dec
jmp
pushl
loopne
movl
push
incl
mov
cwtl
movl
sbb
rorb
inc
rorb
test
add
add
push
add
mov
incw
add
xor
push
cli
popw
push
xchg
sbb
test
callw
adcl
mov
mov
push
fsubl
dec
inc
mov
lret
fistl
ljmp
jmp
in
lock
mov
xor
add
stos
data16
incl
data16
inc
shlb
add
addl
mov
add
push
lea
addb
jge
mov
rol
mov
rorb
orb
test
push
mov
orb
push
xor
aam
test
cmp
data16
dec
test
xor
lahf
mov
mov
data16
sbb
dec
mov
mov
add
jne
test
jne
sti
sbb
cld
jmp
inc
mov
data16
push
incl
test
sbb
lock
pushl
xorb
add
xor
movw
mov
sbb
mov
add
add
xor
inc
add
add
inc
jmp
addl
or
jmp
push
in
test
xor
mov
mov
push
add
decl
add
decl
movsl
add
add
push
xor
xor
mov
push
push
jne
mov
sbb
jne
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
sbb
sbb
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
call
add
orb
ret
incl
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
cld
or
dec
incl
push
add
mov
orl
add
push
xor
inc
mov
push
incl
inc
add
addb
mov
lea
je
decl
call
mov
hlt
call
mov
cwtl
mov
mov
addl
mov
inc
jmp
ljmp
mov
and
pushl
lcall
add
enter
add
adc
add
mov
xor
jmp
mov
in
inc
or
decl
jne
mov
mov
lock
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
sub
push
lea
jne
incl
jnp
mov
fs
sbb
out
or
ret
inc
decl
test
clc
lcall
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
sbb
addb
call
xor
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
xor
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
wrmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
pushf
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
or
inc
xor
pushf
call
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
call
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
xor
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
pushf
pushf
xor
jne
mov
icebp
icebp
shl
mov
pop
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
pop
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setl
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
adc
inc
inc
push
add
add
enter
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
cli
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
lldt
xor
sub
add
ror
dec
inc
cmp
cld
or
into
out
lret
dec
mov
loop
cmp
inc
daa
loop
out
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
out
add
add
and
fs
incl
jo
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
jno
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
ds
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
pushf
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
icebp
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
add
into
fs
mov
ret
add
add
add
ds
add
into
ret
pop
adc
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
cmp
pop
mov
je
xor
mov
cmp
pop
cmp
jne
mov
cld
push
pop
inc
stc
test
clc
test
cmp
fs
or
add
add
push
lret
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
xor
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
add
add
lret
lock
clc
inc
lret
cmp
ss
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
pushf
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
pushf
pushf
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
pushf
add
clc
cmp
or
add
xor
or
lea
or
enter
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
mov
adc
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
add
pushfw
add
add
mov
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
sub
test
clc
inc
add
hlt
leave
test
clc
inc
push
aaa
inc
pop
rorl
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
pushf
xchg
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
pushf
mov
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
pushf
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
pushf
popa
push
dec
inc
mov
clc
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
rcll
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
subl
mov
xor
pushf
mov
clc
add
mov
adc
inc
mov
mov
loopne
inc
mov
mov
nop
roll
mov
mov
dec
push
mov
xor
mov
mov
in
into
inc
iret
xor
add
mov
dec
mov
mov
mov
mov
xor
mov
clc
enter
mov
lock
mov
cmp
rol
enter
inc
adc
inc
clc
xor
add
mov
roll
add
push
mov
fsubr
inc
mov
adc
add
inc
test
xor
fmuls
test
cld
or
dec
ret
push
inc
dec
mov
mov
push
jne
mov
call
mov
mov
clc
mov
xor
adcl
inc
push
mov
clc
incl
mov
clc
rolb
je
mov
jne
lea
mulb
decl
fadds
inc
jmp
mov
roll
mov
lock
dec
ret
mov
mov
mov
fadd
enter
inc
cld
mov
xor
add
sub
xor
pushf
add
or
jne
clc
mov
call
jmp
mov
xor
xor
enter
clc
inc
inc
pushl
in
pushf
jne
mov
clc
dec
out
dec
mov
lea
cmp
lea
mov
cld
iret
mov
jmp
test
je
mov
fdivr
movl
lock
inc
lock
lret
imul
testl
dec
mov
fmuls
fmuls
enter
inc
dec
xor
add
mov
inc
inc
push
mov
lock
mov
fadds
rol
test
dec
push
decl
push
mov
add
cmp
add
loopne
add
dec
xor
pushf
mov
cld
iret
test
mov
in
dec
add
add
dec
mov
fmull
add
testl
test
add
add
mov
cld
mov
hlt
mov
add
cmp
add
mov
mov
call
dec
add
cmp
cld
iret
mov
dec
push
lea
mov
call
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
lock
iret
rorl
inc
mov
iret
add
xor
mov
or
push
shll
cmp
fmull
test
dec
dec
xor
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
sti
or
cmp
je
mov
ret
or
call
add
mov
cld
mov
xor
add
dec
jnp
mov
xor
add
mov
mov
xor
rorl
jb
add
ja
sbb
cwtl
enter
inc
decl
fadds
rorl
inc
xor
mov
or
inc
rcll
mov
xor
jb
add
shll
mov
xor
add
repz
inc
mov
xor
inc
mov
mov
jne
mov
test
inc
mov
mov
lea
xor
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
push
xor
enter
inc
add
cld
test
pushf
inc
xor
pop
push
incl
in
mov
push
inc
cmpsl
mov
or
add
add
add
icebp
je
mov
cld
rol
ret
add
lea
cwtl
jne
clc
or
incl
cmp
incl
lcall
or
push
mov
test
inc
mov
imul
dec
mov
push
dec
push
xor
add
push
incl
lods
inc
inc
mov
xchg
or
call
adc
orb
inc
inc
add
mov
call
push
push
dec
jo
push
dec
mov
cmp
cmovne
call
mov
lcall
leave
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
mov
mov
cmpb
add
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
xor
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
pushf
mov
jge
decl
