push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
or
mov
mov
mov
sbb
mov
mov
orl
push
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
push
jmp
enter
fldenv
add
mov
jl
jl
add
aam
ret
rol
in
lret
fmul
cli
icebp
fmul
aam
out
sar
rcl
xchg
mov
loopne
cli
jmp
leave
xor
icebp
xor
neg
aad
int
fnclex
out
repz
ljmp
out
ret
clc
fxch
in
leave
icebp
hlt
dec
cmp
rolb
repnz
in
fildl
shl
sub
shl
xlat
stc
aas
adc
out
out
test
mov
iret
cld
fdivp
jecxz
hlt
jecxz
aaa
ret
fcmovu
neg
in
iret
out
lock
in
lock
in
aad
jmp
sti
call
aam
int
int3
out
ds
fmulp
sti
out
fmuls
hlt
icebp
rol
repnz
aad
xor
lret
sarl
cld
hlt
cmp
ret
loopne
out
sti
xchg
jmp
ror
cmp
lret
fmul
clc
ret
add
jmp
in
mov
test
enter
vcmpss
out
cld
call
hlt
ret
ret
jmp
mov
in
leave
mov
xor
ror
rcl
rolb
std
shl
fmulp
in
call
adcb
repz
cmp
aam
addb
roll
out
enter
repz
lock
out
xlat
enter
not
test
xlat
neg
lds
stc
in
enter
mov
rcr
cmp
hlt
hlt
clc
cli
ljmp
ret
rcr
fcmovnb
mov
cli
mov
aad
jmp
xor
lret
shl
test
xlat
les
loop
loopne
das
iret
in
repz
imul
ds
in
rcl
in
loope
fsubr
fdiv
sub
shl
aaa
xor
repnz
xor
cmp
out
cmc
rcr
loope,pt
clc
test
mov
cmp
fst
aam
call
repnz
shl
repnz
decl
ror
leave
ljmp
lret
cmp
or
jecxz
out
std
add
out
out
mov
loop
out
cmp
int3
xor
cmc
xlat
int3
xor
aad
test
mul
int3
mov
nop
into
out
hlt
repnz
int
in
leave
shr
clc
rolb
sub
mov
xchg
lret
addb
lret
lret
aaa
test
not
addl
fmuls
jmp
in
clc
in
out
sti
ds
jecxz
into
flds
fdiv
not
aaa
cmc
int3
leave
icebp
addl
iret
into
out
out
ljmp
int3
cmp
aaa
aad
into
out
leave
cmc
out
mov
in
rolb
xor
fsubr
lret
into
cmp
cmp
div
test
iret
adcl
int3
cmp
fcomp
push
fdivr
fstp
ret
test
repz
mov
ljmp
repz
aam
ljmp
lock
fiadds
int
out
shll
repz
cmp
int
fdivrp
aam
ffree
cli
cli
test
fcmove
xchg
in
fucomip
test
xor
ret
sti
cmp
cmp
std
loope
faddl
repz
out
test
fnstenv
aad
int3
xlat
shr
cmp
test
and
rol
sti
loopne
roll
xlat
out
repz
xor
sbb
xchg
in
sti
fmuls
xor
cmc
xlat
lock
ljmp
not
in
loopne
ffree
xchg
out
icebp
ret
icebp
xor
in
cld
in
cmp
ror
loopne
or
loope
or
out
out
lret
lock
sti
cmp
cli
fdiv
fistpll
in
fxch
lock
aam
dec
in
loope
jmp
mov
hlt
stc
hlt
xor
jmp
ds
fdiv
ds
xlat
cmp
test
cli
fdivrp
not
stc
out
rorb
out
xor
out
lret
lock
inc
int
icebp
aam
fcomi
clc
aas
int
out
xchg
icebp
test
dec
or
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
enter
lret
xor
inc
ja
jne
addb
jl
add
lock
cmp
fcmovnu
iret
int
in
hlt
faddl
mov
loop
int
enter
jmp
rcl
push
jecxz
leave
adc
cli
loope
int
xorl
in
iret
cmp
aad
stc
loope
jecxz
shl
ret
ror
leave
test
ficoml
repnz
rol
cmp
into
cmp
add
loop
jecxz
in
out
xchg
sub
ss
repz
sti
out
ss
rcr
in
sti
xlat
fiaddl
test
fiadds
jmp
xor
ret
iret
rcr
cmp
repnz
test
sar
out
adc
mov
out
mov
int3
shrl
clc
int3
out
ss
std
leave
ds
fdiv
cmp
mov
xchg
mov
jmp
xchg
int
xor
fcmove
fcmove
int
sti
fsub
out
cmp
fimull
loopne
xlat
ljmp
rol
int
cmp
enter
repz
jmp
divb
out
out
icebp
hlt
cmp
cmc
out
repz
lock
xchg
mov
repz
int
icebp
out
divl
aam
fdiv
clc
ds
ror
jmp
les
out
sbb
cmc
cmp
out
sarl
cmp
aam
repz
std
jecxz
lret
out
mov
int
ror
aam
fdivrs
xor
shr
xlat
std
shr
clc
repz
aas
mov
faddp
jmp
std
leave
mov
test
out
shl
idiv
aas
loope
std
cmpl
jmp
enter
xchg
xchg
repnz
loope
jmp
int3
cmp
aam
cli
call
sti
std
icebp
test
in
in
loope
ljmp
fldz
cmp
cmp
lock
cmp
fsubp
aad
xchg
xchg
rcl
xor
out
sti
cmp
repnz
rcr
movl
decb
xor
imul
idiv
fnstsw
dec
cmc
fcmove
ss
jmp
sti
stc
out
call
loopne
lock
cmp
aad
stc
sub
xchg
add
test
addl
xor
leave
lock
in
clc
aam
cmp
repz
mov
lret
test
ljmp
neg
sarl
add
jmp
in
in
int3
test
mov
xor
ret
cli
xor
aad
cmp
idivb
incl
mov
int
out
jmp
leave
xor
aam
loop
repz
fmuls
out
enter
out
int3
aam
das
aam
int3
ss
xor
iret
int
fdivr
fmulp
shl
fmuls
lock
in
shlb
clc
jecxz
ror
enter
sti
out
jecxz
add
xchg
in
fcmovnu
int
in
jmp
into
cli
in
iret
in
icebp
fcmovnu
fsqrt
into
in
jmp
hlt
xchg
jmp
iret
cli
orb
repz
jmp
enter
loopne
call
loope
int3
nop
int3
cld
call
neg
fucomp
lret
out
sarl
cmp
cli
roll
jmp
std
xchg
int
into
xor
int3
int3
cmp
ds
cli
out
loope
fsub
out
nop
loopne
in
icebp
int
in
std
cmp
sti
cli
fpatan
loopne
ret
ret
cld
faddp
ljmp
out
xor
aad
shl
imul
icebp
hlt
cmp
sarl
faddl
std
stc
cli
in
xchg
xchg
in
xor
out
in
test
in
rcl
repz
test
ror
addl
das
cs
xor
int3
hlt
aas
cmp
fstp
std
cld
leave
sar
mov
jmp
sub
ror
out
in
lret
sarl
cmpb
xlat
loop
in
ljmp
and
fxam
aam
xor
out
not
ss
ror
fadd
loope
adc
jmp
test
in
xchg
lret
decb
lret
enter
cmc
cmp
fcmovu
inc
repnz
out
faddl
neg
xor
sti
xor
cmp
mov
mov
inc
add
add
add
add
je
cmpl
jne
pushl
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
push
adc
mov
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
mov
lea
mov
mov
sub
and
mov
jmp
lret
aad
fcmovu
adc
and
pop
sub
pop
jl
addb
jl
stc
cmc
iret
aam
fcmovnu
lret
xchg
jecxz
test
repnz
cmp
cmp
lock
in
repnz
sarb
xor
hlt
cmpb
roll
addb
cmc
shl
xor
out
cmp
cmc
xor
out
testl
incb
repnz
lret
fld1
cmp
cmp
cmp
orl
test
jmp
ret
out
aad
fcmovu
lret
rolb
repnz
mov
out
mov
into
shlb
ljmp
shr
addb
fadds
mov
nop
rorl
imul
fcmovne
shr
fucomi
clc
test
fstp
stc
test
xchg
orl
repz
fdivr
idivb
shr
shl
std
fdivrp
fcom
cmp
fcmovu
enter
mov
test
divb
lock
cmp
ljmp
call
neg
ljmp
leave
in
iret
loopne
ss
idivb
aam
fdivr
in
lock
mov
loop
addb
loop
fstpt
cmp
int3
iret
cmp
sar
aam
decl
sbb
in
sub
fsubr
sar
xor
lret
cmp
fcom
aam
jmp
icebp
ljmp
repz
loop
imul
lret
idivb
ljmp
cmp
stc
xchg
decl
cmp
jmp
sar
cmc
cmc
fndisi(8087
ljmp
xchg
xor
call
jmp
loopne
std
fdiv
faddl
clc
int3
lret
repnz
in
loope
lret
out
cld
cmp
out
rol
into
stc
aam
orl
mov
cld
cmc
shl
jmp
out
iret
icebp
fucomi
xor
fimuls
in
test
xor
shr
enter
fdivr
out
repnz
aad
loopne
iret
nop
mov
sub
loop
in
aaa
aad
ss
cmp
repnz
aad
cli
xchg
test
enter
call
loop
cmp
lret
idivl
int3
clc
lret
cmp
call
loop
cmc
enter
out
jecxz
sar
loop
jecxz
cmp
aam
cmc
cmp
int
in
sub
cli
add
sar
out
testb
nop
xor
ljmp
cmp
fadd
cli
lock
cli
hlt
stc
fimuls
popl
leave
cmp
enter
lret
int
inc
out
aad
sti
xrelease
cli
fucomip
stc
xchg
ljmp
out
stc
repz
leave
fst
out
jecxz
loopne
fdivrl
ret
sbb
cld
int
fmulp
repnz
in
rcl
out
aas
shl
loop
sti
fstpt
ret
sbb
fldl2e
lret
roll
in
shl
sarl
call
jecxz
add
lock
call
mov
jecxz
call
idiv
aaa
aad
iret
clc
fadds
loop
rcr
xchg
in
ljmp
mul
fdiv
not
rcl
aam
cld
ret
xchg
cli
fldl
mov
call
std
aas
fnstsw
ss
hlt
aas
test
into
loop
jecxz
in
ljmp
aam
out
loope
not
ret
fmulp
clc
call
icebp
lock
ss
out
cmp
cld
in
cli
ffree
jmp
mov
sti
jmp
mov
xor
int
cmp
std
inc
leave
aad
mov
std
call
aad
shl
mul
fucom
imul
cmp
dec
cmp
shl
xchg
jmp
sti
int
jmp
loop
nop
icebp
int
jmp
loop
fcmovne
cld
iret
lock
adc
rolb
ror
repnz
out
shrb
in
enter
cmp
clc
out
sar
lock
stc
sbb
decl
int3
loope
in
loop
out
rcl
enter
in
fldl
mul
repnz
loopne
mov
addb
cmc
xor
lret
in
jmp
test
xlat
cmp
inc
or
or
mov
orl
jmp
rol
aas
ror
daa
jae
lea
movsl
jl
or
add
in
call
xchg
xchg
loope
hlt
out
shl
xlat
cmp
int
in
xor
loopne
rcl
fcmovu
fmulp
in
mov
out
loopne
xchg
call
xor
aam
in
fdivp
repnz
enter
popl
hlt
icebp
xor
ret
cmp
ljmp
ds
hlt
jmp
lret
xchg
aaa
xor
repnz
das
in
push
imul
test
ret
xchg
out
fucomi
call
stc
lock
out
aaa
int3
ds
fdiv
xlat
cld
repz
jmp
leave
in
test
lret
aam
stc
enter
icebp
idivb
or
vpsubq
lret
sti
cli
mov
and
into
out
into
in
in
idiv
cmp
shl
ffree
cmp
mov
in
test
faddl
jmp
out
jmp
into
std
int
fiaddl
cli
rcl
jmp
addb
divl
loope
xor
in
shr
dec
stc
loopne
fcom
fadd
mov
leave
stc
fimull
loope
cmc
xor
aaa
repnz
jmp
rol
rcl
cld
mov
fldl
xchg
in
xlat
iret
loop
rcl
enter
ss
push
std
fdivr
lock
cli
mul
call
mov
sub
les
cmp
cmp
inc
cmc
xchg
jmp
mov
xchg
out
in
shl
in
hlt
out
jmp
lret
cli
shr
imul
sti
out
lret
mov
fsubrp
div
clc
idivb
hlt
fnstcw
sar
loope
cmp
loopne
hlt
test
int3
into
jecxz
enter
aad
cli
out
icebp
int3
shl
loop
stc
cli
in
mov
lea
out
loop
lret
lret
out
leave
xor
loope
rcr
loopne
iret
sarl
mov
les
flds
shl
lock
shl
ret
cmp
clc
frndint
shl
in
fldl
lret
fmulp
aaa
in
cmc
cmc
hlt
call
imul
cmp
fcmovnbe
repz
imul
mov
fmuls
out
into
loop
into
int
xlat
out
sbb
fnop
sti
stc
jmp
fisttps
jecxz
loop
in
jmp
rcr
repnz
fiaddl
ret
lds
fldl
jmp
int
aaa
lock
cli
ljmp
cmp
loopne
leave
out
xchg
and
jecxz
aam
fstp
sarl
fcmovbe
filds
and
in
enter
in
aam
jmp
lock
xor
out
out
clc
repz
test
sbb
aad
sti
fdivr
mov
rclb
out
out
cmp
aam
fadd
adc
out
xlat
mov
lret
xchg
jmp
icebp
xor
call
ds
adc
fsubp
sbb
fcmovbe
jecxz
rcl
shll
call
cmp
out
xor
incb
std
dec
dec
mov
cld
hlt
in
stc
iret
xor
into
ds
bnd
clc
hlt
fisttpll
addb
enter
in
icebp
addl
idiv
mov
lea
cld
loope
rcl
cmc
jmp
lret
cmp
cmp
jmp
xchg
test
xchg
into
out
out
aaa
leave
xor
cmp
out
xor
fdiv
aam
sub
cld
xchg
int3
icebp
aaa
in
hlt
idiv
loopne
incl
fiadds
fisttpl
out
int3
hlt
in
icebp
repz
out
cld
shl
cld
loope
rolb
in
orb
loope
int
xlat
in
div
icebp
iret
fdivr
icebp
loope
cmp
stc
loop
jmp
into
aad
enter
shl
cmp
cli
jmp
lock
ret
leave
xlat
ret
ret
xchg
sti
in
fst
in
repz
in
sub
int
xlat
in
cmp
cmp
repz
neg
fiaddl
test
ljmp
xor
int
loop
in
fmulp
in
orl
sbb
mov
add
add
mov
movl
lea
jmp
ror
rcl
fcmovnu
ror
and
jbe
adc
jl
addb
jl
std
loope
int3
xchg
sub
xor
fst
aaa
cld
lret
repnz
cmp
out
lret
cli
out
ffree
fucomp
ljmp
clc
out
call
in
std
jecxz
test
hlt
aad
out
sar
cli
call
lret
out
icebp
cli
fnstcw
rcl
cmp
std
rcr
xchg
jmp
out
add
loop
cmc
lret
xor
cmp
div
jmp
in
rolb
mov
int3
decl
mov
cs
out
rol
mul
jmp
addl
add
iret
clc
fldpi
fcomip
xchg
or
leave
repz
cld
repz
call
test
leave
orb
loop
mov
out
shl
test
cli
into
lock
into
fildl
aam
std
cld
call
out
fsubrp
ret
ljmp
fsub
and
cmc
aas
out
test
rcr
mov
call
xlat
clc
enter
int3
int
loopne
test
not
cld
mul
nop
int
in
out
xor
div
cmp
leave
sar
lret
lret
repnz
stc
aad
std
fisttpll
ror
lock
bnd
call
ss
iret
fidivrs
mov
div
fcomp
cld
mov
fmulp
fdivs
rcl
xor
std
fdivp
hlt
mov
idiv
test
jecxz
xchg
imul
xlat
les
cmp
ss
in
rol
enter
test
fldlg2
fcmovbe
cmc
mov
cli
aaa
out
ljmp
into
cld
xlat
repz
sti
addl
sub
cmp
rolb
fadds
sti
test
mov
out
rol
test
sub
enter
leave
jmp
clc
iret
loopne
test
out
in
jmp
fdivp
mov
xchg
fucomp
shl
ss
ljmp
xlat
shl
sbb
lret
out
in
test
in
repnz
cmp
loope
stc
fucomi
std
cmp
out
test
fsubr
loopne
lock
repnz
xlat
in
repnz
int
cld
in
hlt
loop
leave
jmp
in
out
in
stc
loopne
out
ss
ljmp
or
cmp
cmc
les
mov
icebp
incl
fnstenv
leave
hlt
repz
ret
rorb
cli
jmp
cmp
ficoml
iret
lock
shll
out
aam
std
cmc
fsubp
cmp
testb
fsub
xchg
lret
in
not
xor
lret
cmp
xor
leave
ss
aaa
cmc
shl
mov
fmul
loop
in
cli
call
jmp
sarb
cmc
lret
fcmovnu
loop
aam
roll
cld
lret
in
xchg
jmp
aam
sub
cmp
sar
in
iret
aad
ds
mov
in
mov
icebp
aas
vpaddsb
into
shl
xlat
lret
ss
fucom
repnz
aad
testl
jmp
xlat
not
cmp
in
cmp
std
shl
lock
xlat
fisttpll
cli
cld
xor
shr
xor
cmp
cmc
in
ds
mov
faddl
mov
test
das
int3
into
repz
loop
repz
into
repnz
clc
sti
fcom
addb
xchg
loop
out
repz
icebp
ljmp
cmp
repz
rol
ds
stc
xchg
mov
xchg
rcl
rol
repz
out
rcr
fldl
loop
shl
loopne
hlt
lret
and
xchg
lret
fsub
out
ss
fidivrs
repz
roll
ret
call
xchg
int
in
xor
int
int3
cmp
xchg
aam
mov
xor
pop
fcmove
lret
sub
in
lret
lock
cmp
fsub
in
repz
xlat
stc
call
out
jmp
xor
repz
fdivs
cmp
into
aas
in
adc
std
out
loop
lock
in
sub
into
lret
cmc
int3
sar
cmc
loopne
fdivp
ret
aas
test
ret
loop
fdecstp
fmuls
loopne
inc
in
mov
jmp
aam
into
lret
rcr
fstp
les
jge
lcall
jl
xchg
lret
sarl
loop
repnz
cmp
shl
add
cmc
in
jecxz
sar
lret
xor
sarb
in
cmp
leave
jmp
xchg
faddp
ror
out
xchg
shll
out
ret
fcmovbe
icebp
out
cmp
repnz
out
hlt
fucom
filds
or
in
out
fld
in
fcmovnu
fdivr
sti
fxch
iret
lds
jmp
loope
call
ljmp
cmp
not
aas
test
jmp
out
neg
xor
cmc
cmc
lret
cmp
xor
sar
out
cli
in
rcr
testl
aam
stc
jmp
div
cmp
iret
cmp
testl
icebp
mov
ror
aam
ror
repnz
std
rcr
ret
aas
ds
inc
int3
repz
mov
jmp
cmc
jmp
cmc
iret
iret
cli
repnz
cmp
cmc
in
call
in
int3
xchg
shr
shl
stc
lret
xlat
stc
cmp
aam
xorb
rcl
mov
cld
lret
testl
xor
lock
fnstenv
in
ds
in
loopne
xor
mov
call
clc
jmp
icebp
call
xor
icebp
into
rcr
repnz
flds
clc
fcmovnu
clc
clc
sbb
cld
jecxz
roll
int
cli
jmp
icebp
out
jecxz
icebp
aad
out
ljmp
jmp
divl
rol
iret
cmp
in
into
roll
clc
in
addb
in
mov
jmp
xor
xor
int
sti
ss
inc
fcmove
add
test
jmp
std
jmp
ljmp
int
ds
fsub
jmp
ljmp
or
aad
rcr
div
repnz
lret
icebp
fcomip
test
fildl
lret
fisttpl
call
leave
fnstenv
shl
ror
rol
out
loop
shl
rcr
out
call
cli
repz
in
shr
lret
in
shl
fdivr
int
repz
fstp
fcmove
clc
loope
in
ljmp
lret
xchg
jmp
in
xor
shl
xor
in
aas
xlat
jmp
and
out
xchg
xchg
hlt
rol
xor
not
fucomi
in
cmp
and
jmp
addb
jecxz
mov
rol
loopne
xor
cmp
into
ljmp
xchg
incl
sar
out
fdivp
xor
into
into
xor
std
ror
flds
xlat
adc
aam
imul
icebp
xchg
into
mov
aaa
ror
out
in
jmp
cmp
lret
iret
test
and
fimuls
nop
icebp
mov
xor
ror
rcl
ds
dec
out
test
cmp
fmuls
jmp
int
shlb
leave
not
enter
clc
clc
cmp
repz
cmp
mov
loope
fyl2x
jmp
in
out
mov
cmp
cmp
cmp
aaa
hlt
adc
hlt
fiadds
adcl
ss
lret
cli
fnstsw
lret
ret
jecxz
aad
sti
out
test
sti
mov
fcomip
hlt
repz
cmp
cld
hlt
cmp
ds
shl
ljmp
jecxz
in
sub
das
rcl
in
cmp
or
cmc
aad
xchg
loop
int
loope
in
xchg
in
lock
into
iret
sti
xor
out
xor
lret
cld
cmp
idiv
cld
stc
enter
lret
xchg
jmp
ror
ljmp
ds
lret
shl
mov
ffreep
in
jmp
loop
stc
fxtract
ret
out
hlt
into
cmp
out
test
lret
sti
xchg
fsubr
roll
shr
aad
ljmp
out
test
jmp
in
in
iret
icebp
nop
loopne
cmp
in
repz
lret
cmp
sub
xchg
out
icebp
test
out
repnz
stc
xlat
dec
cmp
rcr
cmp
call
int3
xbegin
iret
aas
xor
loopne
movb
mov
mov
mov
mov
mov
jmp
ret
rcl
rcl
aad
shrl
adc
dec
and
jl
addb
jl
lock
imul
jmp
loop
aad
imul
fucomp
aam
mul
xchg
iret
fdiv
call
xor
ljmp
in
xlat
shl
cmp
int
xchg
adc
in
aad
shl
lock
ror
bnd
inc
loop
loope
ljmp
xchg
aam
out
xor
lret
idivl
stc
clc
fucomip
loopne
loopne
enter
cli
fmulp
in
repnz
cld
sub
cli
fsubr
hlt
test
fst
rcl
mov
aam
call
sbb
jecxz
fxch
sti
cmp
call
cmc
aam
cmp
sar
std
faddl
mov
mul
aad
cld
in
idivb
jmp
test
fadds
incb
xchg
loopne
mov
fdivp
fdivrp
stc
cmp
xlat
jmp
mov
into
addl
out
loope
rol
rol
in
rcl
call
xchg
in
jmp
lret
rol
repnz
cld
ror
test
loop
out
repz
loope
call
out
fcomi
shr
fcmovne
lret
sar
test
cmc
jmp
out
clc
fucomi
out
int3
mov
ljmp
loop
int
call
addl
enter
mov
lret
out
cmp
lock
sti
icebp
rol
std
sti
shl
lock
std
enter
out
jmp
mov
xor
int
cmc
int
call
iret
lret
cmc
aam
enter
int
out
repz
rcll
repz
fsubr
out
shl
addb
sti
sbb
jmp
nop
in
ds
ror
std
lret
aam
hlt
repz
jmp
ds
lock
out
adc
xor
int3
repnz
cld
out
lret
cmp
ljmp
leave
loopne
in
call
xlat
in
in
pushl
in
iret
hlt
iret
lock
lock
stc
cmc
lret
in
mov
shl
shl
ror
aaa
aam
cmp
loope
fsubrp
mov
int
lea
int3
leave
aad
jmp
in
jmp
loope
mov
fstp
fadds
nop
hlt
xlat
enter
lock
cmp
ds
in
fnstsw
aam
enter
in
mov
xchg
jecxz
in
xor
leave
fcomi
fsubr
jecxz
aas
aad
out
in
loope
fisttps
fists
cmc
fstpt
xlat
xor
cmp
into
cmp
out
cmc
idiv
out
mov
iret
out
cld
xchg
sub
into
sti
int
ds
xor
in
test
cld
out
out
loope
leave
loop
add
fucomp
out
faddl
out
test
ret
adc
mov
in
loopne
test
xor
aam
fxch
out
int3
fsubp
fidivl
aad
jecxz
call
cmp
out
jecxz
jmp
out
fdivr
ret
repnz
into
into
out
in
rcl
aam
mov
in
xlat
sti
out
mov
in
into
xor
xlat
out
cli
jmp
loop
stc
loop
loopne
rolb
fiaddl
xchg
fdivp
xor
int
cmp
fucomip
into
cli
iret
in
aad
shl
mov
loope
enter
xchg
sti
jmp
out
test
in
out
shr
loopne
cmp
stc
call
rcr
aad
cld
test
into
addl
xor
lock
out
fnstcw
xlat
repz
aad
stc
fdiv
sar
out
mov
jecxz
cli
icebp
xor
aam
xlat
jmp
rcl
cmp
lock
idiv
cmc
std
fadds
clc
loop
and
call
out
fcmovbe
loope
in
clc
cmp
faddp
xchg
inc
cld
mov
out
xchg
out
aam
int
int
std
cmp
aaa
ss
cmp
std
out
xchg
out
mov
jecxz
aad
out
repz
imul
loope
cmc
fcmovnbe
sti
cmp
imul
sub
or
mov
xor
jmp
fprem1
in
fdivr
cmp
clc
inc
leave
cli
xchg
out
rol
shl
jecxz
in
aam
mov
jmp
sarb
enter
fidivl
mov
push
jl
add
fdivp
stc
repnz
repnz
enter
faddp
int
sbb
shr
xor
shl
iret
std
fcmovne
dec
sarl
cmp
cli
ss
idiv
int3
jmp
lret
out
out
in
std
in
fdivr
ds
loop
xchg
xlat
cld
std
lret
fdiv
mov
jmp
lret
cmp
lret
neg
fdivrl
lds
clc
ret
nop
mov
out
sub
xor
cmp
sti
lock
inc
sub
fildl
call
rol
jmp
fxch
adc
icebp
mov
lock
loope
fucomip
fadd
in
test
hlt
int3
fsubrp
int3
loop
leave
pushl
jmp
ret
loope
lock
loope
mov
in
loope
lret
call
jmp
in
lret
xlat
stc
test
fdivr
sarl
fadd
jmp
in
xchg
mul
stc
cli
repnz
jmp
div
xor
in
orb
cld
out
loope
cmp
mov
into
fdivs
xor
aas
cmp
loope
aas
icebp
xchg
mov
hlt
movl
into
enter
xor
int
aas
stc
div
incb
cli
call
mov
out
jecxz
mov
xor
sar
cmp
cld
out
clc
test
ljmp
sub
enter
int
fsubrp
cmp
jmp
testl
stc
int3
jmp
int3
aaa
cmp
cmp
addb
mov
flds
enter
ret
in
fdivp
xlat
fsub
cmp
ret
rolb
sti
xchg
fisttpll
xor
aam
cmp
enter
cmc
out
hlt
cmpl
xchg
idiv
xchg
mov
jecxz
in
cmp
sti
jecxz
xor
out
sbb
test
in
repz
lret
sti
sbb
cmp
xchg
loope
iret
mov
lret
ss
aad
idiv
cmp
cli
into
sar
cmp
inc
enter
test
jmp
repnz
cmp
jmp
sti
fucomip
jecxz
jmp
rcr
fucomp
pop
mov
mov
test
sub
leave
aam
cmc
jmp
fdivr
fildl
test
mov
fucom
mov
in
xor
enter
lret
ror
sbb
cmp
test
cmc
xlat
mul
jmp
xchg
fdiv
nop
loope
sub
jmp
jmp
cli
test
out
mov
jmp
fsubrp
xor
fcmovnbe
call
ds
cmp
roll
in
pop
ror
in
in
hlt
xchg
jecxz
icebp
cmc
call
fdivrp
cmc
xor
cld
cli
shl
repz
leave
in
popl
fucom
int
fldln2
enter
in
fcmovnbe
ffree
sar
cli
enter
mov
sar
cmp
cs
xor
shlb
cld
sub
ret
cmp
loopne
idiv
enter
enter
loopne
idivb
xor
lret
cmp
out
repz
clc
into
jecxz
in
jmp
jmp
in
ret
aam
jmp
cmp
sti
repnz
ret
in
xchg
lret
jmp
shl
das
int3
int3
ss
out
lret
test
cmp
ret
call
shl
aaa
das
lock
lret
loope
aas
cmp
ds
mov
repz
xchg
mov
loop
ljmp
int3
xor
int3
idivl
lock
out
fcos
cmp
ror
mov
jmp
out
hlt
xor
std
sub
sar
jecxz
enter
mov
fsubr
sti
xchg
lock
shl
out
shlb
call
cld
loopne
fldl2e
enter
xchg
repz
ror
lock
xor
xor
fdivrl
lock
ljmp
sbb
std
cli
int3
out
loop
loopne
mov
ljmp
fcmovbe
ds
int
loop
idivb
cmp
loope
out
lret
int3
jecxz
enter
rol
fxch
loope
aad
mov
add
mov
mov
mov
xor
add
cmp
jmp
iret
leave
rcl
fstp
leave
repz
sub
ret
and
add
test
loop
fiadds
loop
fucomp
in
call
in
cmp
fildl
movb
out
xchg
jmp
cmc
std
xor
aaa
not
call
adc
not
aad
pop
jmp
fisttpl
mov
into
repz
cmpb
hlt
in
iret
mov
dec
idiv
jmp
shl
loop
hlt
enter
int
repnz
cld
out
test
test
ret
cmc
shr
stc
xchg
decl
out
rcr
lret
cmp
jecxz
fsubrp
add
fsubp
ljmp
lock
in
jmp
fmul
cmp
std
ffree
rol
icebp
test
call
into
enter
lret
loope
cmp
fdivl
shr
cmc
xlat
cmp
in
lock
and
xchg
out
sub
loope
int3
sub
shll
repnz
std
out
repz
fldl
cmc
loop
loopne
lret
in
fucomi
jmp
xchg
out
call
bnd
fucomi
cmp
cmp
stc
loop
loope
fisttpl
in
shlb
out
leave
cmp
fcmovne
int3
ds
mul
cmp
loope
repz
rcl
mov
out
aaa
aam
cmp
fcmovnb
in
lret
lock
add
test
fnsetpm(287
fisttpll
ljmp
hlt
fsubr
jmp
fldl
div
loope
fimuls
cli
iret
call
aad
lret
in
jmp
cmp
std
icebp
testl
out
xchg
jecxz
cmc
jmp
out
jmp
aas
lock
cmp
icebp
loopne
mov
mov
loopne
xor
shlb
xor
jmp
fsub
in
fcmovb
mov
shl
out
call
nop
loope
leave
leave
xor
fpatan
fdivr
cmp
fst
call
lock
xchg
xor
xchg
jmp
fld
lock
in
enter
cmc
jecxz
ret
mov
lret
hlt
std
iret
fisttpll
leave
aad
xor
cmc
rcr
sar
cmp
aad
fmul
xchg
iret
in
cli
fcomip
ret
shr
cmp
dec
jmp
lret
div
fcompp
sar
jecxz
orl
in
ret
ret
clc
into
xor
stc
cmp
lock
enter
clc
in
loope
aam
loop
loopne
cmp
jmp
in
cmp
loopne
ljmp
dec
cld
xor
int
cli
call
out
into
cmp
out
shl
out
vpaddw
lret
ficoms
hlt
loop
rcl
ds
loop
cmp
cld
cli
jmp
faddl
xchg
stc
int
xlat
icebp
enter
lret
ds
sbb
hlt
out
mov
out
xchg
mov
xor
rcr
aaa
in
call
out
out
aad
out
cmp
loope
jecxz
jecxz
decl
lret
lret
aaa
int
aas
sarb
clc
repnz
ds
enter
enter
xchg
loop
sar
int
in
in
cmp
fdivrs
aas
jecxz
jmp
xchg
out
sti
faddl
out
sar
ss
fsubp
test
in
leave
mov
lock
out
in
ss
das
call
shl
in
mul
in
test
in
xchg
ljmp
aaa
in
clc
cmp
lock
cld
cmc
jecxz
sar
push
xchg
loopne
xchg
int
out
out
lret
enter
in
xor
movl
leave
sti
jmp
neg
sub
repz
shr
aas
fcmovb
xchg
fcmovnb
enter
fisttpll
out
into
xor
shl
out
cmp
repnz
adc
xlat
cli
rorl
mov
shl
test
test
test
out
loopne
cmpl
cmc
repnz
test
cmp
cld
enter
ret
in
fcom
divl
call
div
shl
out
out
sti
out
call
fcmove
std
jmp
call
into
in
fsubrp
cmp
sarl
xor
mov
jne
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
jmp
int
lret
xlat
int
es
setae
mov
jl
addb
jl
in
cmp
test
out
shrb
ret
iret
leave
cmp
lret
std
rcl
rcr
fadd
sbb
test
sbb
shl
nop
aas
shl
ret
fcmovnbe
lret
hlt
into
loopne
test
ret
sar
xlat
lret
frndint
xchg
mov
shl
jecxz
out
fdecstp
leave
int
loope
aad
xchg
fstp
ret
out
xchg
orb
jecxz
xor
into
rcl
addl
aad
test
mov
in
enter
aas
hlt
loopne
cli
call
loopne
in
addl
fdivrs
xor
icebp
in
lock
test
cmp
cli
mov
repz
out
rcl
fnstcw
fidivl
cmp
cld
in
ret
stc
div
jmp
jecxz
sti
rolb
lret
aaa
out
out
shl
jmp
cmc
enter
add
fld
cld
aas
loopne
mov
int3
rcl
ss
in
repnz
out
cmp
ror
cmp
rol
mov
in
enter
adcl
out
in
lock
lret
clc
aad
xlat
add
out
in
in
fucomip
aam
loop
cmp
jmp
rolb
rcl
hlt
cli
std
xchg
test
xlat
mov
enter
repz
ljmp
repnz
cmp
xchg
loope
stc
fdivr
clc
out
mov
mov
test
fdivr
into
out
out
sarb
shll
xchg
fcom
aam
xlat
in
mov
movl
les
out
out
xor
fucomi
in
repnz
cmp
les
mov
iret
out
sub
xlat
rcl
jmp
ss
icebp
aad
lds
loop
out
loope
in
hlt
cld
lret
call
cmp
and
aas
repnz
out
jecxz
jecxz
shl
fimull
cs
lock
out
xor
sar
std
in
rcl
std
loope
aad
sbb
ror
shlb
icebp
xlat
aam
std
lock
icebp
icebp
clc
div
mov
mov
cli
int
call
mov
xchg
ret
int
jecxz
ljmp
loopne
ret
cld
bnd
out
inc
out
out
loop
in
lds
in
lret
aad
icebp
clc
addl
enter
lret
std
aad
out
fdivs
shr
into
rcr
jmp
shl
repz
sbb
out
in
decl
fdivp
loope
sti
lret
into
cld
lock
jecxz
rol
mov
mov
or
lret
shl
test
aaa
cmp
in
hlt
icebp
not
lret
aam
in
std
loop
sbb
call
ljmp
cmp
fnstcw
cmp
fyl2x
hlt
frndint
out
fcmovbe
repz
xchg
mov
lret
mov
leave
cmc
iret
ror
aas
xor
loope
jecxz
ds
stc
loope
xchg
fcmovnu
mov
loop
aaa
out
ljmp
loopne
shl
out
cld
fcomp
in
lea
cmc
in
xor
out
iret
jmp
cmp
xor
cmc
in
test
ljmp
out
stc
aam
jmp
xor
fscale
fcom
cmp
test
aas
loop
fcomp
fmuls
loop
in
repnz
out
cli
rol
repz
xor
out
rolb
ret
xchg
sti
xchg
fmull
out
divb
stc
in
cmc
xor
clc
lret
cmp
sti
xchg
mov
loop
cs
in
out
cmp
std
stc
cmp
mov
lret
mov
xor
int
lock
ss
repz
into
iret
sbb
loope
out
int3
std
fxam
int3
cmp
aad
iret
into
shlb
cmp
fcmovnbe
repz
cmp
lret
clc
cld
mov
nop
in
out
cmp
repz
cmp
out
aaa
sti
iret
out
inc
out
aad
mov
in
ljmp
in
out
std
ljmp
in
addl
call
in
in
xor
ret
sar
jmp
cmp
out
loopne
out
loope
icebp
mov
jmp
into
les
rcr
fxch
enter
push
pop
mov
cmp
jl
addb
jl
in
test
rcl
shlb
out
enter
cmc
out
out
xlat
mov
out
mov
loopne
out
in
sarl
hlt
cld
aad
sar
cmp
mul
cli
sar
mov
sub
in
xor
in
fcmovbe
out
clc
int
hlt
fcom
mov
aad
loop
mov
sub
jmp
shr
ss
aas
stc
xchg
or
jecxz
cli
loope
icebp
mov
adc
loop
cmc
shlb
lret
fldlg2
int3
sar
roll
sbb
mov
mov
icebp
shl
cmp
sar
sar
ffree
test
ljmp
xchg
xor
divb
into
cmp
int3
sti
repnz
test
rcl
imul
push
test
xor
fucomi
in
xlat
jecxz
fdivrp
cld
hlt
aas
fucomi
test
jmp
std
into
dec
iret
fsubr
aam
jmp
out
sarl
ror
jmp
rol
cld
out
xchg
std
ljmp
jecxz
xor
shl
vshufps
loope
shll
test
cmp
into
fdivr
ljmp
int3
std
cmp
fdivp
cli
cmp
cld
rcr
out
out
test
out
movb
xor
call
cmc
loope
icebp
sar
sti
loopne
xlat
cmc
jecxz
test
out
adc
stc
xor
repz
xor
lret
cld
ret
rorb
mov
sbb
aad
jmp
xlat
xor
lret
out
shll
cmp
stc
int3
ret
mov
ljmp
lret
cmc
cli
test
fxch
cmp
aad
lret
movl
xor
ss
lret
jecxz
cmp
ds
mov
clc
div
call
out
repnz
xor
xlat
in
shr
aad
sti
icebp
std
test
neg
test
int
enter
mov
xor
out
icebp
sti
sarb
ret
fcos
repz
mov
addb
cli
filds
cmp
cmp
xor
iret
cli
xor
iret
fimull
jmp
movb
jecxz
fst
in
repnz
rcl
loope
lds
fsubrp
addb
xchg
sar
xor
xor
xor
into
cmp
fisttpll
test
xchg
in
incb
shlb
into
into
ljmp
aas
loop,pt
aad
cmp
jecxz
call
mov
sti
std
xor
cmc
jmp
std
aas
out
fisttps
call
xchg
loop
aaa
aam
in
cmp
xbegin
sbb
into
repz
cld
cld
cmc
mov
sti
out
icebp
cld
repnz
xor
leave
les
lret
shr
xor
in
repnz
aam
loop
fucomi
in
in
lret
out
loope
xor
ljmp
aad
cmp
shl
mov
jmp
jmp
int
iret
in
ror
xor
sarl
xor
sti
in
loop
roll
aam
mov
into
cld
in
iret
into
hlt
ret
ror
cmp
leave
cmp
jmp
or
out
mov
mov
ror
mov
out
aam
shl
enter
imul
aad
jecxz
ret
ljmp
shl
xchg
lock
std
repnz
lock
fadds
ret
xchg
loop
mov
fst
icebp
leave
lret
out
out
cli
cmc
icebp
fnstsw
ds
loop
lret
enter
lock
adc
shl
stc
ret
lret
cmp
fnstenv
repnz
std
stc
rolb
into
xchg
mov
ret
fdecstp
ljmp
fcmovbe
loope
rorb
fsubr
iret
test
xor
fcmovne
fidivrl
in
add
aam
out
leave
enter
enter
xchg
rol
aam
enter
stc
cmc
repnz
xlat
roll
dec
cli
xchg
loope
cld
xor
shl
cmp
std
sub
repnz
fcmovb
call
addl
dec
adc
into
jmp
enter
vpsubusb
sub
xor
inc
mov
add
int
xor
xor
in
fcmovu
std
fld
icebp
aas
cmp
fucom
ret
xlat
lea
cmc
xor
enter
leave
lret
fsubrp
sar
in
rol
in
sti
mov
ret
fsubr
out
in
fdiv
in
loopne
leave
stc
xor
jmp
fcomi
std
cmp
cmp
and
testl
xor
xor
fnstenv
ss
idivb
stc
repz
jecxz
fidivrs
rcl
clc
add
stc
std
fldl
into
loopne
aam
out
aaa
enter
rcr
sarl
and
stc
fsin
lret
cs
int3
in
jmp
into
xor
icebp
inc
fcmovnb
lds
fucom
in
out
xchg
call
std
std
idiv
repnz
loop
loopne
ret
xlat
cmc
out
mov
div
loopne
xlat
cmc
fucomi
lret
sbb
hlt
std
loope
cli
mov
fsts
out
out
hlt
shl
shr
out
fildl
aam
shl
ret
fucomp
loopne
cli
jmp
aam
aam
shlb
cld
cld
in
out
cmp
test
lock
test
leave
mov
iret
into
int
shl
xlat
cmp
enter
cmp
cmp
test
hlt
mov
aad
fiaddl
mov
iret
out
shr
das
cmp
out
ss
aad
shl
out
dec
jmp
test
aaa
call
cs
cmpl
clc
cld
mov
fmulp
call
cli
call
loope
aas
mov
fsubr
mov
das
repz
xor
fucompp
shr
stc
ljmp
fcmovne
fimull
loope
in
xor
xor
repz
jmp
int
ss
rcr
fsubp
out
loopne
mov
into
in
call
aad
roll
fld
div
clc
loope
int
ljmp
stc
repnz
cmc
into
fdiv
test
loope
xchg
sti
stc
xchg
mov
out
in
cld
rorl
hlt
xor
out
clc
stc
cmp
in
aam
mov
stc
orb
fmulp
addl
iret
icebp
lret
xor
fdivr
addl
into
into
aas
out
out
neg
xlat
fyl2x
xlat
cmp
xor
jecxz
test
int3
lret
xchg
jmp
fadd
icebp
sti
sar
jmp
clc
in
stc
into
mov
int
cli
mov
mov
in
xchg
loope
ss
cmp
cmp
sarb
xchg
filds
out
shl
aam
lds
imul
cmc
int
ljmp
hlt
jmp
out
mov
call
lret
iret
clc
ss
aas
jmp
aad
adc
addb
lret
jmp
test
xor
int
aam
cmp
clc
cmp
shl
repnz
ret
loope
testb
in
repz
out
loope
repz
cli
cli
sar
ds
int3
cld
std
repnz
loop
lret
movl
loop
ror
sti
xor
repnz
fidivrl
sti
aad
fcmovbe
lret
test
cli
call
ljmp
call
fadds
fcmove
cmc
hlt
mov
xchg
fcmovu
jmp
mov
xor
cs
neg
repz
jmp
xchg
ds
xor
jmp
fmull
lret
fxch
shr
cmp
iret
xor
test
std
test
sti
into
vpcomub
aad
in
lret
icebp
ss
into
cli
iret
rcr
lock
out
rorb
jmp
out
int3
aaa
xor
test
ffree
std
cmp
rcl
test
mov
iret
icebp
mov
repz
jmp
cmp
enter
jecxz
addl
out
test
icebp
nop
lock
aad
aad
repz
cmp
ret
xchg
fdivr
lds
clc
xchg
xchg
mov
xor
hlt
not
lret
icebp
fmul
aad
cmp
test
lock
enter
fiaddl
cs
out
xor
push
int
sub
add
mov
mov
mov
movzwl
add
mov
jmp
iret
int3
ror
fcmovu
frstor
movsl
je
fcmovbe
jns
les
jl
addb
jl
aas
cli
in
xorl
rol
repz
aad
ret
loop
sub
call
stc
rcl
fmul
xor
clc
shr
not
sar
xchg
std
out
in
fmulp
out
xor
shl
idivb
sarb
fninit
cli
std
mov
icebp
xchg
jmp
fcmovnbe
jmp
aaa
icebp
fdivr
rol
ror
shl
ljmp
lea
jmp
out
fsubr
jmp
fstp
sti
in
aad
lret
fdivr
xchg
out
in
fcomp
std
idivl
repz
xlat
aad
out
rol
clc
test
and
lea
aad
xor
fcom
cmp
fdivrl
hlt
cld
lret
ljmp
xchg
mov
ds
sub
out
ss
out
in
iret
ror
into
div
cld
faddl
loope
mov
xor
ret
in
ret
shl
sar
cmc
cli
test
fildl
shl
repz
les
jmp
call
cld
xchg
test
xlat
imul
fisttpl
icebp
ljmp
ror
cmp
into
cmp
ss
ret
jmp
loop
int3
shr
jecxz
fidivl
icebp
lock
cmp
icebp
ffree
jecxz
cld
in
addl
out
repnz
xor
ljmp
std
out
cmp
fistpll
rcr
in
fcom
mov
lret
bnd
shl
jmp
out
cli
into
std
rcl
stc
sar
jecxz
fildl
in
xchg
repz
out
shlb
fldl
ds
xchg
fdivp
and
sti
mov
and
aas
out
call
cmc
lret
lock
rol
xchg
call
fdivr
icebp
xchg
sub
into
out
out
aad
faddl
repnz
rcr
test
xchg
call
sub
xor
xor
rol
out
rcr
fsub
loop
fdivr
mov
loope
sbb
lret
loop
out
aas
loop
cmp
std
jmp
incl
aad
call
int3
leave
loope
iret
ljmp
in
cmc
out
div
idivb
in
out
jecxz
aad
fninit
mov
out
iret
mov
xor
lret
fcmovbe
fidivl
out
into
imul
or
loope
fcmovnb
xchg
mov
repz
lret
int
iret
loop
xor
cmp
rcl
cmp
in
shl
in
add
enter
std
xchg
cli
hlt
lret
int
loop
shr
enter
cmp
std
xchg
std
jmp
sti
mov
in
test
mov
ljmp
in
faddp
std
div
loopne
clc
stc
mov
mov
xchg
repz
into
in
out
ret
ror
ss
test
cld
imul
div
fucomip
in
dec
call
cs
bnd
hlt
loope
fadd
loope
in
std
int
call
call
icebp
cmp
cmp
out
aad
rcl
aam
mov
cld
rcl
sub
out
in
in
lret
fcmovne
cmp
loopne
cmp
hlt
out
hlt
hlt
xchg
mov
out
xchg
xchg
ljmp
jmp
inc
idivb
aas
out
aam
fsubr
out
mov
mov
lret
cld
xchg
aaa
in
not
iret
lret
fidivrl
loope
ds
aad
fucompp
orl
icebp
out
adcl
int
out
cmp
fcmovnbe
std
repz
call
out
mov
fisttpl
shr
xlat
out
stc
fidivrs
aam
cmp
cld
mov
mov
leave
icebp
out
cmc
xor
jmp
out
pushl
repz
loop
cmp
repnz
fmuls
call
out
out
int
leave
ror
aad
orl
loop
jecxz
mov
loop
ljmp
aad
rcl
fistpll
cmp
fcmovne
fnclex
addl
movl
call
cli
icebp
clc
in
fcmovnbe
fdivr
rolb
mov
enter
xchg
int3
les
shr
jmp
in
fimull
or
sahf
add
add
iret
leave
ret
int
xor
orl
jl
add
jecxz
in
jecxz
testb
out
shl
aam
repnz
xor
ror
fst
repz
rcr
mul
std
flds
in
fcoml
ret
clc
xor
jmp
std
int
xlat
loope
jmp
orl
call
repnz
cmp
mul
hlt
fcmovnbe
out
cmc
call
mov
fdivr
int
cld
in
lock
cli
out
iret
cmp
stc
rolb
xchg
fimuls
shl
xor
in
aad
frndint
clc
xor
cmc
loope
std
fcmovnb
xor
jmp
out
in
mov
rol
xor
repz
out
aam
loopne
cmp
idiv
shl
mov
mov
addb
lret
lock
std
fdiv
out
rcr
xchg
icebp
fcmovu
inc
fmull
lock
repnz
das
std
ljmp
shl
std
cmc
testb
xchg
loop
into
mul
aaa
cmc
lret
cmp
shr
out
loop
aas
sbb
test
std
enter
in
in
jmp
out
xor
cli
stc
hlt
cmpl
jmp
mov
lret
out
out
loop
in
into
xlat
lock
shl
aaa
shl
shl
cmp
mov
test
xlat
mov
fmul
rolb
cmp
xor
cmp
leave
shr
ljmp
faddp
idiv
loope
loopne
sbb
rcl
cmc
xor
jmp
bnd
cmp
in
in
jecxz
ret
test
in
out
cs
mul
stc
xlat
fcmovnu
sar
repnz
hlt
enter
cli
enter
cld
xchg
in
das
int3
out
xor
cmc
rcr
in
test
out
mov
lret
testb
hlt
cmc
ret
xor
cld
call
not
rcr
loope
ljmp
enter
shl
divl
xor
stc
lock
lock
jecxz
ror
cld
cmc
call
int
jmp
lock
lock
lock
aam
jecxz
neg
repnz
cmp
out
int
mov
cld
shl
icebp
out
lret
jmp
roll
fucom
repnz
ret
out
jmp
shl
lock
repnz
int3
call
stc
sbb
ret
incl
cli
mov
test
out
int
cmp
sti
aam
fdiv
into
clc
out
iret
rcr
push
enter
xor
xor
ror
lret
sti
std
iret
cmp
in
cmpb
icebp
sti
mov
ret
loopne
aam
int3
cmp
cmp
cmp
icebp
faddl
enter
in
ljmp
xor
in
not
xlat
ljmp
cmp
in
jmp
leave
leave
xchg
cmc
xchg
in
xlat
clc
ror
int3
ljmp
loopne
div
fcomip
loope
mov
addb
ss
out
icebp
std
aad
cmp
fiadds
out
in
ficoms
sti
sti
fxch
call
aas
lock
in
stc
fcmovb
or
in
fcomip
jecxz
hlt
loope
cmp
cmp
ss
rcl
lock
or
std
in
ljmp
clc
cmp
cmp
ljmp
call
mov
in
jecxz
aaa
xor
sar
lret
clc
enter
cld
loop
testb
fsubrp
ret
fdivs
fdiv
sti
lret
shl
lock
clc
xchg
xchg
out
xchg
icebp
leave
mov
test
sub
xlat
jmp
leave
leave
cli
cli
hlt
cmp
fcmovnu
aam
mov
out
mov
lret
xchg
int
les
lret
out
xor
xlat
or
cli
ret
fsub
loopne
in
sti
mov
icebp
xchg
rcl
in
jecxz
ret
xor
fcmovbe
lock
xchg
xchg
cli
ljmp
das
jecxz
int
cmp
aam
sti
out
mov
jmp
fsubr
mov
cld
das
in
leave
lock
div
fdivrp
loope
div
call
test
xchg
jb
add
sahf
add
add
ror
int3
iret
rol
shll
or
sti
sarb
jl
ffreep
movb
incb
loopne
leave
out
repnz
iret
cmp
ljmp
xlat
cmc
in
enter
xchg
fisttps
into
aaa
das
cmp
out
loope
loop
ret
lret
neg
mov
jecxz
jmp
in
das
cmc
fsubrp
test
aaa
cmp
jecxz
mov
in
xor
lret
sar
enter
hlt
aaa
fcom
cmp
shl
cld
out
fsub
ljmp
shl
sub
cli
fcmovnbe
cmp
cld
fnsave
xchg
fcmovnbe
loope
addb
rcr
lock
out
aam
cmp
lock
lock
lock
jmp
jecxz
flds
in
icebp
lret
fcmovnbe
xor
cmp
stc
not
loopne
in
fmul
fstp
addb
lock
into
aam
lret
cmp
idivl
cmc
fmul
jmp
orb
fidivl
les
in
clc
or
loopne
not
movl
xchg
shl
ret
xlat
lock
fidivs
into
rcl
in
int3
in
loopne
fcomp
ret
clc
test
mov
ds
ror
lret
ror
test
cmp
cmp
jmp
repz
lds
fld
in
sti
xor
jmp
icebp
out
rcr
test
stc
xchg
jmp
loop
lock
ror
enter
aas
sar
sar
aam
into
in
lock
lret
lret
mov
xor
int
aaa
in
cmp
aad
loopne
and
call
lret
in
out
call
out
rol
xor
div
repnz
xlat
aad
aad
inc
cmp
in
cli
call
mul
in
not
fcmovbe
cmp
call
out
clc
hlt
call
fsubr
out
nop
cld
ljmp
out
xor
cmp
lock
stc
enter
ljmp
xchg
call
ljmp
repnz
add
jecxz
repnz
fisttps
call
sti
neg
enter
lret
rcr
hlt
cld
test
cmc
fdivrp
loope
sbb
in
std
std
jmp
into
out
lret
in
cmp
jmp
sti
icebp
ret
movb
fsubp
loop
xchg
icebp
loopne
xor
in
cmp
incb
sti
and
std
in
ljmp
rol
out
xor
test
aas
xchg
jmp
mov
lret
test
rcl
ftst
lret
out
lret
stc
jmp
ds
fmuls
in
and
jmp
enter
call
clc
lock
not
sar
cld
call
in
push
ljmp
loop
xor
in
sarl
imul
fcmovu
ds
movl
das
jecxz
cmc
int
cld
out
sti
in
add
cmp
repnz
test
cld
fcmovbe
lret
out
cmp
ss
cmc
cmp
aaa
fxch
into
fdivrs
into
vpsubw
rol
jmp
mul
in
loopne
fiaddl
fmul
sarl
ljmp
shl
xchg
mov
cld
mov
jecxz
adcl
int
sbb
rol
hlt
mov
ds
in
lock
jmp
out
xlat
fsubp
xor
loop
shl
cmc
ffree
mov
mov
mov
in
into
out
in
out
out
out
int3
jmp
cmp
fld
fisttps
loop
fmul
mov
in
hlt
in
out
repnz
fcmovbe
cmp
cli
std
fucom
loope
ds
in
loop
fcmovne
fcoms
aad
shl
fldpi
repz
fsubrp
sar
std
shl
shl
loope
or
roll
lret
leave
iret
shl
shlb
fsubr
fnstcw
aam
lock
stc
rolb
in
out
mov
ret
iret
test
cmp
add
in
fdivrs
cmp
clc
aas
out
jecxz
ljmp
loope
lret
jmp
iret
cmpb
loopne
ds
in
mov
mov
into
sub
mov
movzwl
cmp
jmp
lret
rcr
int
orb
sbb
jl
addb
jl
sbb
xchg
rcr
hlt
divl
neg
clc
dec
cmp
clc
incl
lret
addb
loop
xor
hlt
ss
in
cmp
icebp
fucom
sti
sti
incb
les
xchg
repz
aad
loope
ret
ljmp
stc
cmc
ror
repnz
aam
fadd
jmp
icebp
hlt
xor
in
loop
repz
cmp
adc
fmulp
out
lret
cmc
xchg
icebp
icebp
leave
out
sub
int
fcomp
loope
fiadds
out
ret
mov
cld
nop
shll
ret
repz
iret
in
into
cmpl
aas
incl
ljmp
cs
xor
shr
jmp
stc
xlat
loopne
and
mov
div
not
test
fiadds
xor
cmp
sarl
fucom
push
cmp
xchg
mov
ret
into
sub
cmc
fcomp
lret
fcomp
aad
fiadds
jmp
sub
das
aaa
not
xlat
out
aas
aas
out
in
into
icebp
aam
xlat
into
fdivp
add
jecxz
in
ljmp
fidivs
ljmp
iret
stc
out
cld
out
cmp
fiaddl
ljmp
ljmp
ss
stc
enter
idivb
clc
repnz
testl
loop
ds
sti
fmul
enter
int3
aad
fsubr
loope
cli
hlt
fdivrs
loope
clc
jecxz
xchg
mov
xor
xlat
clc
out
aaa
fcmovnu
out
hlt
fadd
icebp
out
fldl2t
fsubr
in
loop
cli
leave
mov
cli
lea
enter
out
iret
ror
repnz
aam
faddl
out
in
xchg
out
std
enter
iret
cmc
int
in
cmc
enter
shl
loope
jmp
out
inc
lret
in
std
test
mov
roll
jmp
stc
cmp
fdivs
hlt
out
loop
loope
in
in
fildl
imul
icebp
lret
clc
std
sti
fdivr
rcl
out
sar
leave
fdivrp
int
fucomp
out
cld
int3
inc
ds
lret
incb
add
fsub
orl
mov
filds
ss
ss
icebp
cmp
loope
idiv
xlat
fiaddl
lret
mov
mov
cmc
rclb
aad
icebp
repz
fdivr
rcr
lock
test
cld
mov
out
mov
rclb
test
call
into
int
cmp
cld
cmc
jecxz
rol
jmp
stc
test
xchg
fsubr
ror
in
lret
enter
cmc
sbb
repnz
in
loope
loop
xchg
std
int
test
repz
jmp
int3
iret
fucomip
stc
xorb
fcom
out
test
sti
into
mov
int
cmc
xchg
repnz
fld
out
out
out
ror
roll
call
mov
iret
out
in
divl
out
xor
sarb
cmp
iret
cmc
xor
in
mov
aam
leave
lret
jecxz
in
mov
in
stc
cld
ror
or
cmp
cmp
in
xchg
mov
ret
in
xor
call
fsub
in
stc
loop
cli
decl
out
loopne
into
out
cmp
fst
ljmp
leave
loop
in
cli
loope
loop
decl
iret
sti
in
cmp
rcr
hlt
cld
ret
into
addb
fmull
xchg
call
cmp
out
ljmp
xchg
cmp
clc
fmul
loop
loope
ljmp
aad
jecxz
cmp
iret
fadd
lret
cld
fldlg2
repnz
enter
xchg
orb
ret
xor
hlt
aas
loopne
fcomp
repnz
cli
std
sti
std
loope
lret
out
into
xchg
xor
out
repnz
sti
in
ds
inc
repnz
xchg
addl
cmc
xor
ljmp
repz
xlat
jecxz
ret
sti
orl
test
out
shlb
not
cmp
repnz
aam
in
dec
call
movb
mov
mov
movzwl
jg
xor
sub
jmp
rcl
rcr
fcmovbe
xlat
ja
inc
mov
fadd
jl
addb
jl
rcl
out
cmp
out
repz
sar
sub
iret
mov
in
ss
cmp
fstpt
in
cmp
testl
loop
cmc
shl
int
in
call
out
loop
test
icebp
addl
call
lock
lret
faddp
mov
neg
mov
xchg
fildl
in
sub
ffreep
clc
vcmpss
fimull
fimull
lock
out
iret
and
xchg
rcr
rol
faddl
int
xchg
xchg
lock
int3
lret
cmc
aad
div
fcmovne
cmp
in
ret
ret
enter
fsubr
into
rcll
lock
cmp
div
neg
aaa
cmp
fdivr
hlt
or
fiadds
shl
lret
shlb
int3
cld
fcomip
testb
fucomip
jmp
jmp
ror
shl
sarl
cmp
shr
fcomi
aaa
xchg
cmc
leave
shr
loop
loopne
lret
out
repnz
jmp
fcmovnu
xor
fcmove
cmp
fdivr
lock
cmc
mov
testb
xchg
leave
ret
in
imul
iret
fsubrp
jecxz
loop
out
sar
loope
cmc
hlt
loope
jmp
shrb
loope
ss
in
into
jmp
cmp
div
sar
leave
into
mov
jmp
xchg
in
div
rcr
loop
das
out
xor
std
ror
clc
fidivrs
loope
clc
fcmovb
int
jecxz
cmc
mov
lock
cmc
fidivl
cmp
divl
int3
aad
into
fcos
add
aam
call
call
test
repnz
loope
lret
shl
loope
jmp
ffreep
in
call
in
rcl
fcmovne
cmp
fdiv
lret
in
test
neg
jmp
mov
xor
xor
cmp
fcmove
fcmovnb
fdivr
icebp
in
lds
ljmp
jecxz
call
aam
cmp
int
shr
ret
stc
cld
faddl
call
in
out
xor
enter
int3
sti
hlt
cli
ret
cmp
and
call
in
jmp
icebp
enter
out
not
fst
out
aas
in
loop,pt
inc
jecxz
enter
xchg
ds
ljmp
adc
cmp
fstp
lret
faddl
xchg
iret
in
std
fdivrl
neg
out
ss
fsub
rcr
fucom
in
jecxz
into
leave
int
out
test
into
leave
cmp
shl
in
lret
idiv
fmul
iret
cmp
aad
out
sub
icebp
or
hlt
xor
jmp
jmp
xor
cmp
repnz
stc
cmp
clc
call
fiadds
lret
mov
out
clc
xor
aam
loope
ljmp
leave
aad
in
into
xchg
mov
in
in
jmp
loope
clc
cmpb
rol
out
in
xchg
jmp
in
cmp
int
fcomi
icebp
jecxz
shl
clc
mov
out
leave
jmp
lret
loope
jecxz
jmp
aas
lret
out
lret
fiadds
jmp
xchg
mov
in
sub
xor
in
out
xor
addl
ljmp
out
ror
enter
lret
jmp
ss
out
sar
out
rcl
out
fyl2xp1
test
cli
in
repnz
jmp
icebp
fyl2x
rolb
loope
xchg
out
sub
shl
out
clc
iret
repnz
enter
fdiv
xchg
std
clc
hlt
cmc
in
jmp
loope
out
xor
int3
xor
xlat
fmulp
iret
cmp
add
xlat
cli
fcmovu
filds
loop,pn
icebp
xlat
xlat
cmp
repz
dec
loop
shl
sbb
not
mov
leave
lret
test
ror
sub
fcos
enter
xor
aam
mov
jmp
lret
out
fldcw
iret
mov
jmp
jmp
rcl
rol
fstp
in
shl
enter
add
les
cmp
idiv
cmp
fadd
out
mov
mov
iret
test
out
out
divb
aad
cs
repnz
xchg
cmc
ret
in
jmp
in
orl
hlt
fmul
jecxz
sti
cmp
fadd
xchg
test
sti
enter
shr
xor
out
cmp
aam
ss
ds
mov
addb
xchg
xlat
imul
cmp
enter
cmp
fdivrl
xchg
orl
lock
ljmp
lret
sar
in
out
out
adc
std
fdivr
hlt
test
loopne
icebp
sub
lret
lock
jmp
cmc
cmp
mov
adc
xchg
int
call
xor
cmp
aas
cmp
sar
fildl
mov
in
jecxz
std
in
ss
call
cmc
repz
out
fidivrl
aam
repnz
repnz
jecxz
in
cli
fmulp
out
jmp
cs
int
lret
hlt
out
div
rol
out
fadds
mov
jmp
out
out
test
xor
aam
aad
out
rol
out
repz
jmp
out
xchg
mov
ljmp
cmp
jmp
fsub
aad
incb
fadd
test
test
repz
out
jmp
cmc
loopne
cmp
test
rorl
jecxz
rclb
shl
int
int3
clc
fcomp
out
loope
cmp
repz
cmc
mov
mov
inc
ret
xchg
cmpb
jmp
shlb
pushl
adc
xchg
hlt
aad
rol
aad
fmulp
loopne
out
shl
in
jmp
hlt
xor
fcomp
xorl
lds
fcmove
or
in
fnstsw
shl
xlat
fdivrs
xor
sti
ret
loop
test
loope
jmp
fisttpll
xor
enter
repnz
in
icebp
loope
out
ljmp
xchg
mov
hlt
enter
cmp
aas
test
std
jecxz
mov
rorb
in
not
xor
int
fcomp
repnz
movl
lret
mov
xchg
fcomip
out
in
ljmp
cmp
sar
out
mov
lret
rorl
jecxz
cmp
aas
std
aas
cld
in
into
fisttpll
sti
mov
mov
lret
jmp
sub
jmp
fcomp
cmp
rolb
fcos
jmp
call
and
ss
xor
ss
out
lock
xchg
test
loope
mov
lret
jecxz
lret
lock
hlt
jmp
fsubr
repz
fst
test
idiv
out
orb
shl
hlt
test
aas
rcl
stc
sarb
test
ffreep
cld
test
lds
sarl
jmp
cli
fadds
fcmovb
shr
cli
and
cld
mov
faddp
vpmaxsw
int
icebp
ds
fiaddl
loopne
mov
dec
and
std
mov
in
xlat
sar
into
jmp
int
sarb
sti
test
int3
xchg
ljmp
fidivl
jmp
sti
xlat
std
rcl
xlat
xlat
cli
enter
mov
into
ljmp
xor
ljmp
int3
cli
xlat
cmc
fnclex
xchg
test
and
das
ljmp
cmp
into
jmp
out
int3
in
cmp
xchg
out
xchg
fsubr
call
aaa
fisubrl
iret
repnz
test
out
rolb
int3
jmp
ljmp
xor
in
lret
lock
aam
hlt
xor
not
hlt
test
hlt
call
in
loopne
xchg
vpsrlq
out
in
sar
into
test
aad
aad
hlt
loopne
in
stc
clc
out
out
xchg
icebp
les
ret
cli
neg
out
adc
cmp
out
sti
fsubr
out
roll
out
fcmovne
fcmovnbe
rcl
cmp
xor
lea
mov
jmp
mov
lret
fnstenv
outsb
jl
addb
jl
int
shl
rcr
std
jecxz
fmull
jecxz
repz
xor
cmc
in
xlat
fmulp
fmul
in
stc
std
cld
rolb
mov
rcll
sarl
rcl
out
into
xlat
clc
sti
loop
rcr
loopne
test
repnz
enter
ror
xchg
xor
enter
std
ror
cmp
aas
test
cli
faddp
fdivrp
lret
or
sti
mov
mov
not
xor
cld
call
cli
vcmpps
xlat
mov
vpsubusb
mul
lret
xor
jecxz
cli
sti
sar
fiadds
jmp
xlat
lock
fincstp
call
hlt
ljmp
repnz
fld1
xchg
jmp
xchg
cli
rcl
int
xor
ljmp
cld
repz
xor
sar
in
sti
hlt
mov
in
call
xchg
fcom
cmp
leave
cmc
fnstcw
cmp
loopne
ret
xlat
sbb
in
cld
in
in
xor
lock
cli
fnstenv
xlat
push
loop
in
fcomp
test
in
cli
fldln2
out
fsub
nop
loopne
ret
loop
fucomi
in
idiv
sar
int
cmp
aam
mov
filds
xchg
loope
das
stc
xor
rcl
cmc
fnstsw
cmp
in
into
into
mul
xlat
jmp
test
clc
in
cli
loope
jmp
int
out
iret
aad
aad
in
loop
cli
cmp
clc
jmp
in
aam
aaa
icebp
in
xor
fcomi
clc
lret
cld
into
ds
fsub
mov
in
jmp
test
xor
ljmp
aas
iret
out
repz
out
sti
std
xlat
mov
ljmp
enter
div
std
leave
iret
leave
ljmp
test
rorb
mov
xor
cmp
rcr
fcmovnbe
cmpb
add
stc
cmc
addl
jecxz
mov
in
fcmovne
out
int3
out
call
xchg
cld
cmp
lret
cld
xlat
loopne
in
int3
mov
std
int
ds
fucomi
xor
repz
in
loope
cmc
cld
add
loop
loope
mov
cmp
stc
xor
repnz
adc
cmc
clc
aad
rcr
movb
adcl
hlt
xor
repnz
ror
icebp
ret
xlat
stc
ss
fcomi
fucomp
loope
stc
lret
iret
in
shrb
int3
int
enter
std
jmp
cmp
clc
shl
in
orb
cmc
hlt
lret
repnz
out
loop
out
int3
or
out
aas
fdiv
test
incl
jecxz
repz
iret
neg
in
hlt
int3
xor
in
fnstsw
xor
loope
repnz
mov
out
subb
out
xor
cmc
lock
leave
aad
aam
loop
ffreep
loopne
cli
test
enter
in
int
ljmp
xor
fsubrp
sub
iret
clc
ds
add
ret
leave
int3
enter
sub
out
ror
jmp
out
jmp
repz
jecxz
sti
ret
in
in
fcomip
mov
out
lock
out
leave
int3
clc
shr
fcmovu
ss
not
int
lock
ds
mul
jecxz
adcb
ret
stc
cmp
in
fsubp
iret
sarb
std
fisttpll
std
fcomi
mov
cld
jmp
xchg
shl
xor
lret
in
cmp
enter
fabs
out
leave
fninit
ret
orb
loopne
loop
idiv
xor
fucomip
cmc
cmp
rol
enter
mov
fimuls
aaa
out
xor
jecxz
out
fucomi
cmp
loope
les
out
jmp
in
cmp
cld
into
aas
out
incb
loope
in
jecxz
out
divb
ljmp
cmc
imul
out
fucom
in
fcmovnu
in
out
sti
std
mov
ret
divl
fdivl
out
out
lret
cmp
loop
fcomi
xchg
repnz
xor
shr
shl
lret
call
cli
lret
fxam
enter
in
xchg
std
cli
loop
shl
enter
std
cmp
cmp
add
inc
hlt
cmp
je
mov
jmp
ror
lret
int
loopne
and
outsb
sarl
add
cmc
mov
leave
sti
mov
int
icebp
mov
fidivs
hlt
lret
test
rcl
loope
clc
fadd
and
cld
iret
fistl
ds
into
into
sub
into
lret
cmp
iret
aas
divl
fcmovb
fcomp
enter
jmp
cmp
loop
repz
sti
jmp
rcl
in
fdiv
cli
aad
jmp
fucomp
fmul
cld
xchg
orl
fdiv
jmp
out
leave
icebp
addb
in
mul
fdivr
out
fcmovnu
decb
sarl
shl
fmul
sub
xlat
shl
mov
lret
addl
cmc
int3
fcmove
into
sub
and
mov
out
xchg
repnz
rol
sub
cmp
in
div
cmp
mov
mov
loope
xor
out
jmp
flds
testb
sti
lret
xchg
xchg
out
loop
xor
cmc
repz
stc
xor
rcr
hlt
in
test
mov
loope
repnz
fdivs
lock
icebp
aaa
aas
into
loopne
rcr
aam
cld
xlat
out
fldl2e
iret
int3
xchg
into
jmp
icebp
cmp
xlat
ror
stc
in
aad
in
shl
loop
fsubr
cld
clc
test
loop
iret
and
test
xor
shr
lock
rol
jmp
mul
loopne
and
hlt
hlt
in
in
lea
icebp
int3
in
fincstp
divl
out
out
fistpll
fst
iret
hlt
incl
sti
lret
jmp
fsubr
xlat
lret
shr
fdecstp
stc
fucomi
cmp
fldlg2
adc
fisttpl
fldz
mov
out
adc
in
aam
xlat
cs
shr
icebp
aam
int3
repz
fsub
test
fcmovne
decb
stc
int3
std
fdivrs
in
aas
cld
shll
rcr
rolb
and
in
sarl
xor
stc
div
stc
xlat
loope
repz
rcl
aad
jecxz
and
mov
in
nop
std
mov
in
idiv
lret
iret
int
lock
sti
ret
inc
add
xlat
fmulp
in
ljmp
shl
fdivrl
cmc
aad
in
xor
fcmovnb
mov
leave
flds
test
jmp
shl
ret
jmp
out
sti
xlat
jecxz
out
sar
loop
idiv
iret
call
xchg
sbb
xor
sub
ds
fldl2e
sti
in
xchg
cld
jecxz
fildl
test
in
mov
out
idiv
xlat
rcr
stc
repz
enter
int3
out
aam
cmc
xlat
jmp
mov
jmp
xor
repnz
std
aam
cmp
jmp
ffreep
cmp
lret
test
decb
xchg
aad
cmc
icebp
cs
sarl
out
loope
cmp
fcmovnb
faddl
addb
xlat
fcom
sub
ss
cli
cmp
cmp
adc
xlat
xlat
in
cli
out
mov
cli
out
loop
icebp
into
aam
int3
int3
fcmove
sbb
fdivr
fdivp
rcl
stc
loopne
stc
out
mov
mov
shr
in
aaa
rcr
hlt
jmp
xor
aam
lret
add
ss
fld1
fimuls
loopne
cli
lret
sub
xor
aas
aad
hlt
fadds
ret
leave
jmp
loope
shl
rcl
stc
divl
in
idivl
shl
in
icebp
cmp
faddp
movl
in
int3
test
aaa
lret
sti
ror
shr
in
repz
aam
rol
rol
xlat
lret
in
enter
ret
xor
clc
shl
int3
cmp
idivb
fcmovbe
cmc
fdivrl
in
imul
loop
cld
cld
xchg
ficoml
int
xor
iret
fcmovbe
xor
ss
out
repnz
faddp
push
xchg
add
lret
loope
xchg
loopne
lret
sub
ror
faddl
fcmovbe
aas
out
hlt
cli
clc
ljmp
loopne
clc
out
sti
aam
out
hlt
ffreep
ret
loope
aam
aad
lret
mov
in
xchg
fsubp
xor
aaa
lret
out
ds
in
lock
cld
div
cmc
stc
dec
std
fsubr
icebp
nop
in
rcl
out
xor
leave
iret
rol
fmul
fdecstp
out
lock
add
xor
add
jmp
ret
lret
enter
dec
mov
jl
addb
jl
out
fucom
int3
jmp
out
xlat
ss
shll
int
or
ds
aad
adc
fisttpll
mov
xor
out
in
lock
icebp
out
loopne,pt
fnop
fstp
cmp
orl
lock
in
fdivrl
repnz
aad
cmc
mov
call
nop
test
out
shlb
repz
fxch
lret
cmc
in
shl
ret
test
mov
shr
ljmp
jmp
cmp
ret
loop
mov
mov
repnz
ret
xor
lock
fdivr
std
clc
int3
cmc
fcmovnb
cmp
in
cld
mov
cmp
in
aam
cmp
aad
test
decb
xor
lret
out
idivl
ret
loop
hlt
ret
fscale
out
cld
test
cs
lret
fcmovnb
cmp
in
loope
ret
cmp
ds
cld
addl
jecxz
fadd
lock
cmc
repz
xchg
mul
mov
sub
ss
cld
icebp
aas
sti
sti
iret
loopne
in
aam
aam
int3
cli
repz
fldcw
cld
ds
std
aas
fldl
xchg
ljmp
ret
sar
xor
lret
xor
adc
cmc
clc
rolb
in
jecxz
fsubr
int3
shr
fdivr
cmp
cld
testb
cli
sar
xlat
repz
ljmp
jecxz
shrl
fadd
cmp
cld
cmp
div
xlat
not
faddl
mov
ret
fcmovu
into
addl
icebp
hlt
xor
repnz
out
out
sar
stc
in
in
xchg
fucomp
addb
out
out
call
cmp
clc
jecxz
aad
cmp
mov
test
filds
test
mul
lret
in
xlat
cld
in
lret
icebp
rol
faddl
test
faddl
jmp
mov
div
xor
imul
leave
iret
xlat
pushl
in
fnstcw
test
loope
enter
orb
vpand
push
rcr
std
loop
rcr
mov
mov
cli
hlt
mov
xor
cmp
imul
lret
cmp
sarl
xchg
inc
loope
mov
fisttpll
loopne
stc
fisubrl
xor
ds
out
cmp
cli
loopne
idiv
leave
cld
fcmovnu
jecxz
std
in
test
hlt
cs
fst
lock
cli
fdiv
and
in
ret
cld
mov
ljmp
test
cmc
sub
in
cmp
stc
ljmp
hlt
out
lret
fsubr
xchg
mov
loop
xor
sub
cli
cmp
xlat
fistpll
out
cld
cmp
std
enter
out
mov
ss
aad
lret
in
lret
shl
int
rolb
shl
std
call
iret
loope
fxch
aaa
fucomi
out
repz
cmc
int
ds
aas
repnz
ffree
test
xchg
lock
jmp
into
rol
loop
idiv
cmc
call
loopne
fbstp
stc
aam
std
call
ljmp
out
lock
sti
cmp
fxch
fucomp
faddl
cli
movl
ret
ss
ljmp
test
in
fsub
in
cld
mov
div
shl
call
jmp
rcl
in
cld
cli
sbb
out
int
xchg
or
das
sub
int
sub
cld
call
fiaddl
testl
iret
jecxz
in
sub
lock
int3
iret
aad
xor
jecxz
mov
out
jmp
xchg
test
out
fsubr
rol
cld
shl
fcmovnbe
into
cmp
ret
test
or
xchg
lret
fcomip
loope
call
aam
cmp
sti
lret
sbb
fstp
ds
aad
out
loop
in
xchg
xchg
rol
into
aad
shl
lret
aad
fcmovbe
cmp
fcom
enter
in
in
orb
add
ret
aad
lret
enter
and
jl
add
xorb
fadd
rcl
cmc
repz
loopne
fiadds
in
call
jecxz
fsubr
fidivs
repz
lock
cmp
test
not
fadd
cmc
sti
ljmp
add
shr
out
call
shl
clc
test
jecxz
in
in
out
shl
nop
orl
fcompp
stc
cmp
in
repz
jmp
enter
out
xchg
mov
in
cld
int3
out
xor
aam
out
lock
repz
loop
fcmovu
jmp
leave
xchg
test
aas
xor
into
ret
rcr
shr
sar
adc
cmp
out
mov
test
nop
fmulp
decb
xor
out
aam
fxch
ljmp
shl
rcl
out
cli
jmp
test
mov
xor
icebp
out
rol
cmp
cmp
clc
out
xlat
ret
std
mov
icebp
addl
fxch
shl
cmp
cmp
loope
jecxz
enter
in
int3
out
fmul
cld
lock
in
out
lret
cmp
idivb
in
rolb
cli
iret
xchg
mov
rol
or
icebp
ret
in
cmc
out
std
jmp
int3
frndint
repnz
testb
jecxz
aad
out
sti
fscale
fstp
sar
repnz
out
roll
cmp
in
test
jecxz
icebp
int3
jmp
enter
xor
mul
fstp
test
leave
xchg
out
lret
mov
rorb
repnz
repz
sarb
clc
aam
rol
loope
lret
jmp
ret
xchg
out
into
in
adc
into
jmp
shr
xlat
sbb
xor
mov
loop
fsubr
int3
sti
stc
or
ds
out
leave
cmc
shll
xor
cmp
xchg
test
out
mov
int3
in
ss
fmul
dec
cmp
in
aad
xchg
out
repz
test
test
loop
lock
rcl
in
xor
cli
cld
icebp
aam
div
roll
loope
mov
out
out
enter
rol
out
sub
idiv
in
std
mov
in
hlt
add
cld
ror
iret
int
imul
repnz
out
cld
hlt
stc
int3
cmpl
jecxz
aam
test
xchg
loopne
into
ljmp
fsubr
repz
cmp
iret
stc
xlat
cmp
call
clc
clc
in
test
jmp
out
int
in
loop
in
int
ss
std
incb
loopne
test
enter
xchg
mov
aad
xlat
divl
xor
dec
lret
jmp
icebp
ffree
clc
test
cmp
fmulp
jecxz
sti
cli
out
ljmp
aad
xor
fsubp
rcr
test
leave
clc
fcmovbe
mul
mov
xchg
hlt
mov
xor
lret
cmp
lret
out
sti
jmp
xchg
xchg
xchg
clc
sub
loop
sub
lret
fstpt
enter
loopne
loope
repz
mov
fsubr
ret
ljmp
ret
xor
fcomi
int3
ljmp
inc
loopne
lea
popl
sub
cmp
int3
iret
lret
ret
leave
test
jecxz
mov
loop
jmp
aaa
leave
out
in
sarl
rcr
test
in
test
cld
lret
mov
mov
aaa
cmp
ljmp
fld
shl
std
enter
mov
leave
loopne
adc
vpmulhw
out
cmp
aas
icebp
lret
cmp
cmp
call
mov
fildl
icebp
loop
jmp
leave
jmp
cmc
cmp
sbb
aas
sbb
fcmovbe
in
jecxz
xchg
mov
ljmp
roll
repz
out
cmp
rcr
out
into
in
sub
out
enter
sti
fdivl
sbb
shl
cld
loop
test
out
icebp
clc
icebp
mov
loope
in
ret
aad
repz
imul
stc
icebp
in
fiaddl
shr
xlat
fdiv
lret
mov
out
int3
xor
aad
int
icebp
div
cmp
in
test
out
jmp
xor
clc
xor
add
jmp
rol
rcr
jbe
push
pusha
enter
jl
addb
jl
repnz
fistpll
sti
sarl
fldl
loopne
lret
or
jecxz
test
lret
sar
loop
into
ds
into
in
sbb
cli
fdivr
loope
xlat
orb
in
shl
stc
into
jmp
cmp
ds
ret
aad
aad
loopne
test
loop
loop
mov
call
dec
ljmp
adc
and
out
loop
in
sub
out
into
ror
xor
lds
cld
fsubr
into
fimull
jmp
aad
fcmovu
fcmovbe
xor
shl
fildl
lea
xchg
cmc
int
lret
lret
cli
int
cmp
sbb
rcr
jecxz
ds
ficoms
lret
aam
shl
stc
int
clc
sub
call
in
mov
shl
sar
xor
fistpll
jecxz
ret
out
out
xchg
xchg
lret
in
enter
std
dec
std
out
call
std
clc
lret
int3
xchg
call
rcr
fsubr
stc
xor
cmp
shl
sbb
jecxz
stc
ljmp
xor
loopne
call
neg
rcr
jecxz
fcmovne
addb
leave
stc
jecxz
icebp
fisttps
cmp
aaa
aam
test
cli
not
lock
loop
loopne
int3
fsubrp
iret
out
in
shll
div
sti
loopne
addb
fcomp
int3
xchg
iret
out
lock
repz
ror
shll
idiv
in
fst
int3
loop
cld
loopne
incb
test
lret
call
jmp
enter
fnstcw
jecxz
cmc
neg
ret
std
out
lret
int
mov
out
or
xchg
shl
xor
fnstenv
cld
sarl
sub
clc
sar
in
frstpm(287
lret
out
iret
xchg
aam
ret
idivl
hlt
adc
aam
fcom
cmp
movl
enter
neg
fnstcw
jmp
cmp
loope
imul
cmp
call
call
jmp
jmp
shl
clc
idivb
and
ffreep
cmc
lret
lea
out
mov
into
imul
cli
xor
stc
fistpll
sti
std
sarb
in
ret
sti
fisttpl
neg
ret
out
mov
decb
rol
call
out
fnsave
repz
sti
ret
leave
addl
xor
in
xor
aam
xchg
fcmovnb
icebp
rcll
loop
out
xor
enter
out
cmc
std
jecxz
not
dec
xor
mov
shr
loop
fsubr
aad
call
in
xor
out
stc
enter
xchg
in
mov
ret
into
fnstenv
out
cmp
repnz
not
rcr
cmp
idiv
and
out
shl
out
sar
cli
cmc
in
xor
adc
roll
neg
cld
iret
lret
and
in
aaa
ror
enter
hlt
cmc
in
sti
fucomp
ds
call
int3
iret
std
mov
ljmp
clc
fsubr
out
xlat
lret
out
neg
ss
fcmovbe
addb
test
subl
in
fdiv
adc
iret
out
ret
cld
xlat
aad
cli
loop
popl
xor
xor
in
cmp
fucom
clc
loopne
test
in
aad
mov
xchg
fnstsw
jmp
fsub
int
into
xor
jmp
fcomp
cmp
sbb
icebp
ret
lock
ds
add
fsubrp
leave
fucomi
out
xor
shl
jecxz
repnz
int3
sti
cmpl
lds
fdivp
clc
neg
mov
into
shl
int
aad
xlat
lock
rol
xlat
test
lds
int
out
jmp
out
xor
out
idiv
clc
shl
aaa
rol
fdiv
mov
fcmovne
out
xchg
jmp
ret
xor
loop
out
into
aam
sar
fst
neg
jmp
sti
decb
lret
xlat
out
hlt
cmp
je
mov
mov
mov
mov
lea
add
jmp
mov
fcmovnu
jnp
clc
mov
call
jl
addb
jl
cmc
testl
out
test
or
ficoml
ret
out
fcmovnu
lock
cld
stc
clc
clc
shlb
out
sbb
hlt
fisttpll
orb
iret
shr
in
cli
dec
jmp
out
xlat
ret
stc
and
mov
or
xchg
ds
hlt
in
aad
cmc
cmp
hlt
cli
in
cmc
fcmovnb
mov
leave
frstpm(287
ljmp
test
out
fcmovnu
cmc
aam
into
repnz
idivb
or
jmp
and
xchg
in
iret
jecxz
in
sub
cmp
repz
shll
sti
test
cli
mov
xlat
out
fisttpll
out
ljmp
fnstsw
lock
repz
and
ds
in
in
int
lock
test
hlt
into
rol
mov
cmp
fcmovu
cmp
jecxz
leave
in
fucomp
fst
mov
xor
aaa
out
in
out
lock
aam
cmp
fcmovu
hlt
filds
mov
xchg
mov
into
clc
icebp
int3
fnsave
hlt
icebp
jecxz
jmp
xchg
les
out
or
orb
aaa
lock
fstpt
cmp
aad
xlat
ret
fsubr
int3
fisttpl
jmp
in
aaa
fucomp
lock
out
in
ds
out
loop
dec
mov
lock
out
xor
icebp
stc
out
divb
rcl
lock
repz
call
in
out
xchg
shr
int3
xlat
xor
rcr
out
cli
sti
cmc
sbb
fcmovnu
mov
stc
lock
vpsllw
int3
out
sarl
cmp
fsub
idiv
fcmovb
aam
in
call
fmul
enter
jmp
lret
cli
ljmp
out
cmp
fiadds
leave
loopne
mov
xor
shl
fcmovb
cld
cmp
cli
cmp
xlat
fptan
jmp
xor
ret
in
lock
in
xor
int3
fdiv
int3
iret
xlat
roll
call
std
sti
leave
cld
call
test
out
icebp
ss
hlt
aam
cld
fidivl
repz
in
ljmp
orb
rcr
enter
aas
fistpll
sti
fdivrl
mov
stc
sub
xchg
repnz
out
shlb
enter
jmp
int
into
clc
cli
int3
repnz
hlt
leave
in
mov
xchg
jmp
xor
lret
jmp
ds
fdiv
in
cmp
fyl2xp1
xlat
loopne
orl
orb
repz
aad
aad
loopne
stc
jecxz
aad
out
ret
jecxz
in
xchg
xchg
out
xor
xor
leave
cmp
int3
cmp
fdivrs
call
lret
in
int
ljmp
loop
rol
lret
push
stc
loope
sar
clc
aad
aad
sti
out
in
mov
xor
cmc
aaa
out
cmp
aaa
repz
sbb
idivl
cmp
ret
lret
jmp
fmull
in
call
xor
in
xor
iret
fcmovnb
cmp
in
aam
xchg
in
out
enter
cmp
icebp
call
loope
rol
rcl
fdivr
lret
popl
test
cmp
vpaddsb
call
sbb
test
lock
hlt
lock
fcmovnu
in
std
hlt
leave
sti
not
fdivrp
rcr
repz
sti
mov
ljmp
aad
xlat
divb
out
out
repnz
aad
cmp
test
div
rcl
test
iret
nop
xchg
xor
cli
cmp
sti
cmp
fsub
cld
iret
cli
out
ds
lret
int
mov
repz
out
hlt
cs
rcr
idiv
aaa
fbstp
lock
std
adc
cli
bnd
fimull
adcb
call
rcr
loopne
rcl
addl
int3
in
fimuls
shl
int
fsub
sub
std
mul
fprem1
lret
mov
jmp
shr
xchg
rcr
fidivrl
aad
out
out
in
hlt
int3
cld
int3
ret
xlat
ror
xchg
int3
out
fisttps
icebp
icebp
repnz
ror
mov
jmp
int
xlat
int3
int
cmc
or
mulb
call
jl
loop
aas
in
fcmove
hlt
leave
ljmp
cs
call
cmp
ror
out
or
fsub
ffree
mov
mov
repz
or
aad
in
icebp
repz
int
hlt
cmp
shr
loopne
les
div
fucomp
stc
test
mov
icebp
out
ret
out
lret
fpatan
into
loopne
shr
mov
in
call
lds
iret
xor
rcl
cmp
out
fstp
cmp
fcmovnu
cli
lea
mov
shll
leave
ror
iret
loope
fprem
clc
addb
cli
call
or
repz
aaa
cmp
cmp
loopne,pt
repz
cld
loop
neg
test
in
fdivr
cmc
rol
jmp
aam
out
into
fpatan
fstpt
call
xchg
fistl
aam
in
int3
aad
into
int
repnz
hlt
loop
sti
leave
aad
in
aam
in
jmp
iret
xchg
sub
ror
into
cmp
xor
sar
leave
aad
std
mov
xchg
repz
icebp
lock
xor
shl
fptan
sbb
stc
xor
repnz
lret
lock
rol
aam
jecxz
aaa
xor
jecxz
rcl
fstp
jmp
in
fsub
in
jmp
rcr
cmp
cld
fmul
test
in
hlt
xacquire
rcr
loope
ljmp
shl
cld
sar
fcmovnu
sarl
shl
cmp
xchg
loopne
xchg
orl
lret
clc
int3
ljmp
fadd
out
cmp
aas
and
lret
test
ljmp
in
cmc
iret
aas
and
xlat
cli
shr
flds
fcmovnbe
xchg
mov
iret
mul
std
cmc
cs
ljmp
ds
jecxz
addl
cmc
jmp
cmc
ret
fcomp
icebp
shl
fsubr
in
ror
mov
out
stc
out
lock
sub
sar
xchg
test
xchg
mov
lret
lock
call
ljmp
in
mov
enter
fninit
repnz
icebp
enter
cli
cmc
cmp
out
int3
aam
fistpll
mov
idiv
cli
xchg
xchg
xchg
sub
xor
into
cmp
fstpt
into
or
fucomp
mov
fcomp
in
test
xchg
lock
stc
sti
in
lock
fucomi
clc
shl
cli
ret
shl
in
mov
std
xchg
jmp
lret
leave
shr
cmp
hlt
test
neg
xlat
add
int
mov
mov
out
out
lret
xor
cmp
fdivr
rol
aam
sub
aam
xlat
inc
in
sbb
xchg
icebp
jmp
out
jmp
into
divb
ffreep
jmp
xlat
cmc
fisttpll
nop
iret
sub
out
loopne
aaa
lret
leave
idivb
sbb
std
in
clc
mov
in
fld
test
mov
repnz
lret
rcl
aad
out
fcmovbe
xor
stc
xchg
icebp
sar
ret
int
mov
in
int3
out
out
ret
out
in
enter
icebp
repnz
cmp
add
testb
xchg
lret
int
out
sti
shlb
or
loop
not
lock
hlt
in
in
out
and
repnz
mul
xor
xor
into
cmp
not
xor
xlat
stc
xchg
or
fdivp
out
popl
int
lret
cmc
neg
cmp
addl
mov
decb
test
xlat
ss
xlat
test
int3
fnclex
lock
call
lret
cmp
std
fcomip
lret
out
ret
test
hlt
loopne
jmp
ljmp
xor
cmp
cmp
fstpt
aad
aam
lock
fsubp
in
test
leave
test
loope
call
repz
call
shl
aas
xor
hlt
mov
out
popl
and
leave
hlt
test
fcomp
not
cmp
fld
xchg
stc
clc
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
jmp
leave
aam
fld
fpatan
cwtl
jp
dec
out
push
adc
jl
addb
jl
test
out
out
xor
iret
loop
lret
aam
fdivr
and
aas
cld
aad
call
in
xchg
nop
nop
faddl
sti
xor
cmp
hlt
ss
hlt
fsubp
loop
sarl
jmp
orb
into
mov
ds
xor
ljmp
ror
aam
cmc
ljmp
out
sti
iret
xchg
idiv
aad
jmp
into
sti
jmp
cmc
cld
cmc
rol
sarl
leave
fucomp
in
mov
test
loop
sar
cli
jmp
sti
into
fst
enter
mov
mov
call
aam
into
icebp
clc
cmp
cmp
mov
rcr
lret
jmp
ljmp
aad
repz
cli
repnz
xlat
aas
rcl
ror
mov
fsub
icebp
in
incl
ror
shll
out
cmp
loopne
ffreep
sti
cmc
fcmovu
orl
in
xor
aaa
mul
lock
fdivr
push
std
stc
ss
fimull
cmp
out
mov
test
out
lds
int
loop
cmp
ss
idiv
or
cmp
icebp
repnz
loope
incl
lret
div
leave
hlt
loope
aas
cmp
in
fnstcw
sar
jmp
cli
imul
mov
enter
jmp
out
out
jmp
aas
sarl
inc
call
loope
lret
ret
repz
les
fdivs
aam
jmp
aam
cli
fcos
std
in
hlt
fimull
out
leave
icebp
xor
repz
out
repz
ljmp
add
fldl
jmp
out
sti
fdivrl
lock
mov
cli
mov
xchg
call
clc
jmp
sarb
cld
ljmp
fiadds
xchg
call
incb
loop
into
lret
adc
in
incl
in
xchg
mov
mov
loope
idivb
enter
shr
jmp
fucom
vpsraw
lds
mov
xor
iret
cmp
into
sti
fdiv
out
jecxz
out
cmc
enter
rolb
int
lret
rcl
in
xor
clc
iret
addb
ret
int3
std
mov
lock
jmp
fcmovnbe
stc
jmp
xlat
xlat
lret
aad
out
enter
xchg
xchg
std
loopne
into
shr
ss
lret
in
iret
xor
jmp
loope
testb
xlat
out
addb
xor
lret
int3
aad
not
xor
into
rolb
xchg
in
out
fiadds
cmp
xor
cmp
iret
shl
idiv
aam
fimuls
jecxz
xchg
and
ret
xor
aad
fnstsw
in
cmp
jecxz
fcomi
cli
lret
fxch
mov
loopne
shl
iret
hlt
cmp
enter
aad
jecxz
xchg
rorl
lret
mov
call
out
jmp
rcl
repz
iret
xlat
xor
lret
jecxz
clc
test
shl
divl
lret
lret
in
addl
mov
in
cmc
sbb
xor
out
ret
std
pushl
cmp
cmp
ss
div
cmp
ljmp
call
cmc
aaa
ljmp
stc
out
mov
cmp
lret
ror
icebp
repz
cmp
shl
sar
loope
in
fucom
std
test
sar
std
lock
int
stc
repz
lock
fdivrl
cld
sar
fxch
ds
leave
test
loop
mov
lea
ror
in
xabort
fdiv
fdiv
fnstsw
std
fcomip
loop
in
out
mov
enter
out
aad
loop
repnz
int3
fnstenv
rcr
aad
repz
inc
int
xchg
cmc
loop
jecxz
aaa
in
xor
std
rcl
stc
std
loope
cli
hlt
fildl
lret
cmc
repz
fadd
aam
repnz
xor
fcmovnb
shl
push
shl
out
cmp
int
faddl
jmp
ror
int
fcmove
mov
push
imul
jl
add
ljmp
enter
fildl
out
std
cmp
or
int
lock
nop
mov
out
shl
in
in
xlat
hlt
fdivrl
out
ret
loope
out
lret
xor
xor
out
int
shl
aas
icebp
std
loop
test
fld
call
int3
out
icebp
icebp
leave
into
aad
out
jmp
aad
ljmp
fcomip
enter
leave
leave
in
call
fcomi
cmp
out
sarb
or
aas
repz
sti
cmp
jmp
sar
out
cld
lret
rorb
lock
cmp
aaa
ds
cld
stc
in
add
aas
mov
jmp
aam
loopne
jmp
call
int
aad
fyl2xp1
adc
ljmp
adc
out
repnz
fldl2t
test
loopne
xlat
adc
xlat
xchg
adc
xchg
xor
ror
xor
cmc
ljmp
aad
cmp
jmp
fucomi
enter
mov
ret
in
lret
sti
ret
cmpb
sti
sti
repz
aam
fisttpl
ljmp
jmp
lock
call
out
aad
not
out
shl
filds
into
ljmp
xlat
out
repnz
ret
fst
shr
addb
fdiv
fildl
das
int
out
repnz
cmc
not
sbb
test
test
clc
ljmp
mov
lret
loope
jmp
int
rol
loope
cmp
ljmp
test
ljmp
out
ret
out
rcl
test
clc
mov
in
xchg
xor
in
enter
divl
clc
lret
shl
out
fadd
faddl
sti
roll
ljmp
fcmovu
fmulp
out
fdiv
and
mov
push
mov
shl
int3
call
shr
cmp
rol
test
clc
mov
xchg
in
fucomp
out
aam
cmp
cmp
sar
in
repz
sar
cmc
roll
int3
test
decb
stc
xor
clc
lret
lret
out
fcomp
xor
fld
leave
fcmovnb
xchg
in
xchg
shl
lret
lret
cmp
aas
clc
shl
rcr
out
mov
ds
jecxz
jecxz
out
in
loopne
xor
cli
repnz
cmp
cmp
test
into
cmc
not
mov
xlat
ret
push
fistl
stc
out
aam
lock
jmp
fcmovne
into
xorb
fdivrp
fldl
mov
lret
xchg
hlt
xchg
aad
rcr
cmp
cmp
cli
ljmp
fdivrp
ret
addb
ror
xor
aam
sti
cld
lock
fneni(8087
in
faddl
shr
mov
enter
out
aas
out
aad
aad
leave
jmp
in
std
xlat
mov
sbb
fucomip
cli
fsubr
int3
xchg
mov
sti
lret
out
cmp
out
xlat
mov
mov
aam
jecxz
dec
repz
in
shll
in
leave
rcr
icebp
fidivrs
neg
iret
out
rorb
xchg
in
decb
clc
repz
lret
rolb
lock
ffreep
mov
aam
iret
xor
call
ljmp
out
fcomp
test
lds
mov
out
rol
jmp
cmp
cmp
int3
aad
rcl
cld
hlt
in
hlt
into
roll
fucom
xchg
xchg
int3
lret
icebp
shrl
lret
sti
int
shr
cmp
addl
out
add
hlt
xor
leave
repz
test
idiv
cld
clc
mov
cld
out
cld
into
clc
xchg
iret
addl
jmp
ffreep
fcomp
hlt
fsub
test
call
nop
into
mov
ds
in
jmp
cmp
std
cmc
out
sti
lock
stc
cld
out
cli
ret
mov
loope
loop
in
idiv
clc
ror
aas
sar
repz
div
out
movl
cmp
je
mov
jmp
xlat
ror
ror
xlat
fisttpl
lock
jnp
mov
idivb
add
call
fsubr
cmc
out
adc
not
fld
xchg
cli
call
int3
fstl
in
rcl
not
jmp
sarb
cmp
mov
aam
cld
loop
xchg
in
jmp
xor
loop
cmc
in
idivl
fdivrp
neg
into
mov
addl
stc
repz
jmp
out
call
cmp
aad
sti
stc
sti
out
incl
lret
mov
std
in
mov
iret
test
icebp
aaa
lock
ds
imul
stc
incl
hlt
les
iret
loope
shll
ret
cs
xor
in
aas
repz
out
fcmovnu
aas
sti
aam
fst
cmc
jmp
int
in
cmc
xor
fdivrs
mul
ror
aam
ljmp
rcl
faddl
repnz
lret
loop
cmp
in
cld
fmul
repz
aas
out
in
testb
ror
int
fmul
jmp
int3
ss
iret
ret
sti
testb
xchg
out
iret
in
in
sti
repz
out
cmp
test
in
fcmovb
clc
sti
fnsetpm(287
fsqrt
nop
in
in
loopne
xlat
fmul
fiaddl
rcl
cmp
fcmovb
clc
xlat
out
mov
std
loope
loop
sar
out
cmc
cmp
rcr
fdivrl
fadd
repnz
loope
fisttps
out
rol
repnz
jmp
cmp
ror
imul
sti
lock
xchg
loop
leave
out
mov
xchg
sub
fxch
ret
aad
ljmp
out
shl
sar
aad
mov
sti
test
shr
out
in
cmc
rcl
std
ss
int
shl
fcmovb
fldl
std
xchg
xchg
shlb
iret
in
cmp
in
cmc
idivb
rcl
fxch
lock
and
jecxz
xor
in
in
int3
ds
cmp
loope
loop
in
fcmovb
jmp
in
aad
aaa
vpextrw
ds
ss
add
cmp
fmulp
clc
xchg
call
fnstsw
in
incb
test
testl
sub
xor
int
leave
fcmove
div
int3
jecxz
in
loopne
loope
loop
fldl
xchg
in
lret
xor
fdivrl
mov
leave
call
jmp
lret
fsubrp
imul
out
ret
aam
enter
int
icebp
cmp
jecxz
aad
clc
out
and
popl
in
lret
in
cmp
repz
cld
jmp
sti
fucom
call
enter
iret
aaa
ljmp
fcmovne
out
mov
in
sbb
fcmovnbe
leave
out
jmp
iret
rcr
sub
ss
cmp
icebp
cld
aad
rcr
cmp
std
xor
stc
xchg
iret
int
hlt
hlt
int3
iret
shl
enter
cmp
cmp
fdivrs
aas
rcr
decb
int
cli
fmull
call
fnstenv
iret
shl
fcmovnu
divl
cmp
cld
leave
fxtract
clc
mov
subb
jmp
stc
out
or
iret
fsubp
and
cli
aam
mov
fmull
call
lock
into
lret
aas
fcmovnu
filds
cmp
mov
xchg
aad
repz
out
cmp
fsubr
icebp
call
cld
roll
sub
int
int3
out
and
clc
aad
lret
jmp
cmp
ret
xlat
rcl
faddl
out
loopne
out
jmp
iret
shl
out
ret
shr
repz
jmp
test
lret
ror
lock
les
lock
xor
icebp
repnz
rol
ret
sti
hlt
loop
xor
fsub
ret
adcb
in
repz
int3
aaa
fucomip
hlt
cmp
fucom
clc
cld
std
out
loopne
repz
out
lock
sub
ljmp
lds
mov
cld
lds
loope
cli
std
leave
hlt
call
shl
into
cmp
fucom
test
into
lea
ljmp
mov
add
mov
jmp
leave
iret
xlat
rcr
flds
cwtl
pop
dec
sub
jl
addb
jl
fcmovu
adc
test
iret
fsub
cmp
ljmp
fucomp
das
loop
in
aad
ljmp
loopne
sti
stc
cld
mov
int
jmp
out
xor
cmp
int3
jecxz,pt
sar
ret
mov
mov
jmp
cli
ljmp
out
out
xor
or
cmc
fstp
fst
fldl2t
mov
fimuls
shr
out
mov
in
hlt
out
cmp
jmp
into
fcomp
xchg
movb
jmp
lock
in
hlt
div
aaa
fistpll
fdiv
rcr
sar
roll
out
sub
shl
out
cmc
shl
int
in
call
cmc
fcmovu
div
jmp
lret
out
rcll
das
iret
aad
sti
fldl2t
enter
xlat
cmp
orb
std
int
lea
in
fldt
aaa
int3
aam
rcl
cmp
ret
out
ret
mov
fmul
cld
loopne
call
cld
out
repz
fldl
mov
jmp
fdivp
cld
fldl2t
out
xchg
jmp
xchg
sub
xor
stc
cmp
sarl
out
rcl
cmp
enter
in
loope
out
divb
into
shl
call
shr
ds
test
fdivr
call
mov
call
aaa
lret
rcr
cmp
rcr
mov
sar
mov
test
leave
fsubr
lea
jecxz
icebp
rcr
lds
call
stc
in
cld
mov
ljmp
lock
out
aam
test
cmp
in
loope
test
xchg
sti
clc
loopne
in
sti
jmp
out
cli
ror
out
jmp
in
xchg
rcl
and
loop
ret
clc
mov
xchg
int3
stc
in
lret
shr
out
fcmovb
ror
cli
clc
lock
sti
mov
loopne
int3
lret
test
lret
ds
not
out
into
cmp
cmc
fxch
icebp
aas
fadds
addb
or
hlt
cli
lret
cmp
xor
movl
nop
fsubrp
test
int
cld
aaa
xor
iret
aad
shl
icebp
rcr
repz
mov
iret
out
call
out
in
loop
cmc
ror
cmp
cmp
ror
fld
rcr
hlt
aam
vpmacssdqh
repz
jmp
stc
in
fstp
sti
enter
out
shl
fld
sti
testb
jmp
lret
in
call
lret
rcl
cmp
rol
aam
sar
fdivr
out
test
shl
nop
xchg
cmc
xor
ljmp
cmp
icebp
sti
repnz
incb
cld
fistpll
out
fnstsw
out
out
clc
leave
testl
neg
sub
fmuls
loop
aam
int3
std
idivl
ds
xor
test
test
mov
mov
ljmp
out
jmp
xor
cmc
out
iret
aas
adc
cmpl
rol
frndint
shl
test
int3
iret
jecxz
leave
aam
jecxz
iret
fnstcw
lock
jmp
shl
hlt
mov
mov
cld
test
mov
out
shr
jecxz
xor
jmp
into
cli
lret
adc
ret
lock
ret
call
rcl
adcb
repz
jmp
hlt
out
rcl
test
hlt
mov
mov
iret
incl
iret
into
leave
ret
neg
aaa
stc
aad
cmc
cmp
adc
mov
mov
out
repnz
in
cmc
iret
jmp
fcmovu
ljmp
shl
rol
in
enter
loope
fmull
xor
test
sar
sbb
ffreep
jmp
fucomip
lea
lock
cmp
clc
aad
fcomp
jecxz
shl
ret
rorb
into
orb
cmp
sarb
xor
out
sarb
sbb
mov
loope
out
sti
roll
into
out
idivb
clc
fcmovnu
jmp
int
repnz
idiv
lret
cmp
adc
hlt
aad
in
sar
out
cmp
int
shl
testl
leave
int
int
int
mov
aam
mov
sbb
cmpl
sarb
testb
out
cld
fsubp
loope
out
test
repnz
jmp
lds
xchg
ret
in
test
mov
cmc
lock
ljmp
loop
out
test
loopne
loop
xlat
enter
xchg
in
loopne
shr
icebp
xor
aad
cmp
repz
test
jecxz
mul
test
out
int3
enter
xchg
test
call
shl
shl
into
cmp
roll
loopne
mov
mov
fldl
out
hlt
xlat
hlt
fcmovbe
cmp
fdivr
xchg
in
call
icebp
fcoml
int
clc
fcmovnu
idivl
cli
stc
int
out
aas
in
cmp
fisttpl
loope
iret
test
sti
cmp
aas
icebp
int3
idiv
cld
rcl
test
cld
xchg
icebp
mov
xor
xor
clc
cmp
in
incl
repz
flds
ljmp
in
repnz
hlt
stc
fidivrs
jecxz
fistpll
mov
cli
call
lock
shl
jecxz
out
aaa
cmp
rol
cld
shl
leave
lret
in
fninit
fcomip
test
repz
xchg
in
das
imul
into
cli
enter
shr
idiv
xlat
loop
mov
sti
loop
xchg
jmp
iret
aad
out
xor
leave
cmp
cmp
cmc
in
cmp
aam
stc
cmc
int
lea
aad
loop
cmp
repnz
cmp
hlt
std
leave
xlat
jmp
fcomip
ljmp
rcl
in
iret
not
aad
out
xor
fld
roll
xchg
mov
xchg
in
repz
xor
iret
hlt
cmp
fnstcw
out
loopne
cld
cmp
loope
call
fdiv
adcb
shrb
aad
aam
cmp
into
cmp
std
repz
testl
out
into
xor
int3
sar
fcom
fxtract
sarb
cmc
xor
sbb
loop,pt
loop
ljmp
rcl
imul
xor
cmp
int
clc
ror
cmp
fcmovnbe
sar
rolb
fisttpl
out
loopne
call
lret
aas
jecxz
aad
xor
enter
ret
mov
cmp
call
rcr
shl
loope
in
xlat
jmp
icebp
jmp
int3
call
aaa
cld
lock
vcmpss
int
into
lret
out
in
loope
aam
clc
das
aad
cmc
shr
stc
icebp
aam
test
sti
rolb
mov
rcr
shr
in
cmp
sti
lock
iret
out
leave
fiadds
rcl
cld
mov
int
iret
adc
in
nop
jecxz
jmp
fstpt
clc
aam
cld
int
std
ds
shl
out
test
stc
loopne
icebp
mov
out
rcr
shr
jmp
out
idivl
repz
cmp
call
loop
cli
jmp
mov
fmulp
lock
iret
fdivrl
loopne
ljmp
cmp
out
in
fsubrp
lock
repz
fcmove
stc
enter
int
sti
xlat
sti
movl
out
leave
sub
cli
int3
cli
jmp
cmp
rol
out
hlt
loop
leave
mov
fchs
shr
mov
lock
out
in
repnz
loop
aam
hlt
cld
ljmp
popl
out
fldl2e
cmp
fdivr
icebp
mov
loopne
out
nop
sti
mov
out
repz
clc
fcmovnu
cmp
idiv
xlat
and
fdivrp
repz
jmp
out
test
xchg
jecxz
int
aam
shr
in
lret
jecxz
lds
in
in
cld
out
test
jmp
neg
hlt
div
fdivrs
shr
jecxz
leave
hlt
fsub
int
fdivr
in
orb
sub
lret
iret
in
test
fstp
stc
jmp
in
mov
fdivp
loope
ret
aam
leave
clc
sar
fildl
cli
loope
push
xchg
decb
xchg
xchg
repz
iret
ljmp
int3
in
not
in
lock
stc
fisttps
add
add
aad
leave
lret
fstp
aad
mov
jle
mov
jl
addb
jl
jmp
loope
repnz
jecxz
lret
xor
jmp
neg
int
sar
aad
test
jmp
in
in
idiv
xchg
int3
xchg
aam
leave
loop
loop
fstp
sarl
hlt
ds
int
cmp
jmp
mov
ret
test
in
repz
fmul
das
cmp
out
fcmovnu
shl
hlt
in
lock
sar
movb
xchg
loop
fdivp
fcom
imulb
test
test
call
cli
mov
shl
sub
out
lret
repnz
fst
loope
test
lret
mov
stc
sti
or
rol
out
xor
loop
cmp
out
in
cmp
rolb
cld
testl
xor
aaa
not
cmp
lret
out
addb
aad
loopne
ret
iret
icebp
test
out
loop
int3
loop
ss
shl
fadd
cmp
into
test
aam
add
mov
icebp
mov
ds
cmp
int
out
cmp
ljmp
shl
jmp
sti
imul
fucom
sub
rcl
loopne
hlt
xor
aas
aas
fiaddl
repnz
orb
xchg
cld
call
xor
lock
cmp
cmp
aad
xlat
ret
fstp
lret
sti
nop
out
cmc
jmp
leave
fsubr
xor
fmul
idivl
cld
stc
in
jmp
out
lock
aam
cmc
fdiv
aam
rol
loope
hlt
out
ret
in
fabs
faddl
aaa
out
xor
in
repnz
lock
clc
jecxz
and
jmp
test
shl
clc
out
in
aas
aas
roll
fmull
sub
dec
into
lock
aam
loopne
repnz
int
int
incb
aam
cmp
int
roll
divl
ffree
out
out
into
aas
sar
fcomp
icebp
fmul
stc
loope
mov
mov
iret
mov
in
fstp
cmp
repnz
cmp
in
ds
in
sub
icebp
xor
aaa
in
xor
cli
fsub
sarb
jmp
test
iret
in
out
faddl
clc
lret
out
aad
fcom
in
fstpt
aas
ffree
out
shl
fsubr
test
out
out
dec
xchg
loop
call
ss
cmp
int
sti
in
in
out
incl
iret
std
mov
in
out
loop
fnstenv
aaa
leave
ss
fucom
cmp
fistpll
std
cmc
not
orb
xor
cmp
cmp
roll
aas
in
rol
fstp
clc
in
fisttpll
into
stc
xor
loop
fucom
int
repz
in
iret
loope
add
xlat
hlt
lret
lds
rcr
mov
cs
ror
hlt
cmp
icebp
rolb
fsub
test
repz
aad
iret
sub
aad
test
cmp
mov
in
mov
leave
lret
lds
icebp
test
aaa
sti
jmp
rcr
in
xlat
rcl
dec
loopne
adcl
loopne
hlt
cmp
shl
in
cmp
xchg
out
ret
lret
mov
rcl
rcl
into
icebp
lret
repnz
sar
clc
cli
xchg
filds
loopne
fcoml
ret
in
sar
cli
aad
aad
fst
mov
and
xchg
into
imul
loop
out
idiv
cmp
lret
cmp
in
cld
xchg
xchg
icebp
loopne
int
cmc
fxch
cmp
loope
rcr
mul
stc
les
fildl
lret
lock
loope
ss
repnz
ljmp
rol
xor
in
cld
lret
mov
aad
xor
out
fcmovne
loop
fiadds
loop
neg
out
lret
in
xchg
fcmovu
call
repz
jmp
aam
std
clc
lock
fld
xlat
rcl
call
or
lret
fsubr
ljmp
lret
int3
std
aas
cmp
neg
test
inc
or
or
xor
cmp
je
mov
mov
jmp
rol
lds
aad
aad
lcall
dec
mov
add
fadd
xchg
loop
aas
ror
rcl
int
xor
xlat
jmp
xlat
ret
ds
call
inc
out
out
out
nop
test
aam
xlat
out
lret
fdivp
int3
fildl
clc
clc
loop
jmp
out
xchg
ret
int
ret
ror
into
cmp
repz
fcmovnu
push
test
cmc
repz
int
fadd
fisttps
xor
rol
fmul
cmp
jmp
fucomp
icebp
cmp
cli
rcl
leave
xchg
mov
jecxz
in
out
cli
mov
shrl
aaa
fxch
cld
xlat
cmp
in
cmp
aas
in
loope
cli
fsubp
aam
fsub
mov
xchg
das
xor
imul
clc
call
testl
jecxz
in
mov
call
cmc
aam
lret
not
into
aas
sti
lock
aaa
cmp
jmp
xchg
in
shl
das
int
hlt
cmp
lock
sub
decl
mov
xchg
in
out
hlt
loopne
cmc
sarb
fsubr
cmp
cmp
xchg
cli
cli
mov
mov
std
loopne
aad
out
jecxz
hlt
ljmp
divl
repz
ret
loop
call
pause
jmp
aam
loopne
iret
leave
hlt
neg
cmp
fucomi
cmc
aam
cmp
shl
ljmp
fldl
repz
std
std
icebp
int3
stc
repnz
aad
rcl
hlt
rcr
mov
repz
into
xor
neg
fcmove
ror
clc
xlat
fcmovnbe
out
aam
out
in
out
in
test
nop
fiaddl
hlt
fnstcw
cmc
ljmp
divb
aad
faddl
test
out
out
lret
icebp
ror
out
aam
xor
fdivrp
cmc
sti
in
filds
neg
call
xchg
jmp
das
xlat
xor
aas
fst
mov
stc
hlt
mov
xchg
out
in
fildll
loope
int3
ljmp
lock
ret
hlt
loope
repnz
lret
lret
mov
icebp
int3
shl
icebp
sar
xlat
mul
jecxz
repz
cmpl
aam
ds
fmulp
int
test
div
xlat
idivl
cmp
loope
cmc
sub
fdivrl
leave
hlt
mov
test
in
ljmp
sti
in
repz
lock
xlat
cmc
fadd
ret
clc
std
test
into
sti
cld
mov
in
xorb
das
out
xor
cmp
fcmovnu
in
lock
test
ret
roll
leave
icebp
int
ror
lds
sarl
aam
lock
cmp
not
shl
sti
cli
xchg
mov
jecxz
out
in
leave
loopne
or
out
sti
idiv
ds
cmp
fdivrs
fildl
std
nop
ror
cmc
loope
loopne
xor
in
xor
xor
lock
out
ret
cmc
in
test
stc
mov
jmp
xchg
int3
in
aam
cli
xlat
aam
fcmovnbe
cmc
iret
lock
mul
imul
ret
call
cli
xchg
adc
xbegin
hlt
into
cmc
ror
aam
cmp
in
addb
mov
xor
hlt
out
out
enter
lock
mov
fdivp
fldl2e
mul
loopne
mov
xor
out
std
repnz
xor
cmp
std
std
idiv
fxch
mov
repnz
xlat
xor
out
cmc
out
icebp
cmp
stc
icebp
cmp
fsub
addl
xchg
out
out
aas
jmp
hlt
rcr
xor
aam
sti
cmp
cli
xchg
sbb
das
int
repnz
out
in
adc
cli
leave
stc
std
fldl
call
ret
test
in
int
out
icebp
add
filds
loopne
rorl
out
shl
bnd
xor
ror
aam
in
cld
loope
out
mov
jecxz
sbb
hlt
lock
cmp
cld
cmp
fcomi
div
leave
jecxz
enter
jmp
aad
loop
jmp
in
fcomi
lret
ss
loopne
leave
jmp
xlat
lret
jmp
xor
stc
sub
lds
lret
shlb
test
addl
neg
out
xchg
hlt
aad
movb
jmp
xlat
aad
rcr
fstp
mov
jl
add
lret
into
xor
call
cmp
ds
mov
jmp
out
rcr
xor
sti
call
fidivrs
icebp
cmp
hlt
ret
movl
ljmp
idivb
cmc
cmp
loope
cmc
test
les
xchg
mov
repnz
loope
xor
jmp
leave
cli
dec
filds
sti
add
add
orl
cld
cmc
fcomi
clc
ds
not
rorl
out
leave
lret
iret
out
lret
fnstcw
xor
int
icebp
into
out
loop
jmp
clc
test
xchg
in
lock
cld
fcomip
int
cld
sarl
mov
xlat
int
out
lret
cmc
shl
ljmp
neg
cmp
test
clc
fdivr
in
out
enter
and
sar
int
call
cmp
shl
loope
cli
fmulp
shl
xchg
xchg
out
add
loop
into
cmp
in
fistpll
clc
cmp
hlt
cld
aas
aam
or
shl
sub
iret
repz
idivl
out
into
cmp
rcr
repz
xchg
out
cld
into
loop
xchg
lret
int
clc
in
ljmp
out
clc
cmp
xchg
loopne
test
fcmovnb
int
shl
lock
in
rcr
xor
aaa
lock
fpatan
lret
clc
stc
incl
loopne
popl
xor
lret
hlt
out
out
sarl
cmp
aas
shll
ret
test
stc
faddl
ljmp
rol
repz
int
int3
ljmp
cmp
call
repz
xor
out
cmp
shl
shlb
cli
xor
out
jmp
enter
rolb
jecxz
int
into
xlat
sub
sbb
cli
in
ds
lret
mov
in
out
xlat
out
xor
iret
jmp
into
in
std
shl
fcmovbe
out
fdiv
leave
mov
int3
aam
shlb
cmp
mov
and
out
rcl
stc
fdivrp
lret
out
lock
test
jmp
fdivs
fdivr
into
hlt
sti
lock
ffree
std
aas
icebp
cmc
cmp
jecxz
fimull
shl
xlat
call
cmpl
rcl
stc
in
in
out
out
xchg
jmp
stc
rcl
jmp
into
jmp
test
roll
hlt
clc
ljmp
mov
ret
jmp
shlb
repz
cmpb
hlt
test
test
mov
out
mov
in
test
ret
aam
imul
cli
lret
sti
repnz
cli
shr
fldl
xchg
ljmp
xor
sarl
ljmp
cli
rol
ret
jecxz
test
lret
out
ret
shr
xor
stc
enter
out
loope
ror
cmc
aad
mov
loope
std
call
fcom
xor
fcmovnu
jmp
ss
ret
repz
aad
xlat
aas
mov
out
clc
lret
out
cmc
in
shl
sar
out
fdivp
sti
cmp
fucomip
test
ret
neg
xchg
fucomip
out
loopne
xor
ss
shll
fcmovnbe
ret
aam
lock
clc
fcmovnbe
lds
jecxz
xchg
cli
repz
xor
xor
icebp
in
cmc
aam
aad
divb
jecxz
loop
sub
std
jmp
into
xchg
ljmp
ss
fstpt
sub
repz
fcomip
jmp
neg
leave
lret
out
nop
xchg
loope
into
repnz
int3
xlat
hlt
out
xor
rcr
into
test
sbb
std
fmull
in
sub
ds
enter
jmp
fcmovne
cmp
sbb
mov
cld
in
lock
out
lret
sub
cmp
in
sti
lock
fistpll
cmp
shl
ds
sub
aam
loop
int3
test
mov
loopne
stc
aam
loop
in
aaa
fidivrl
in
sarb
cli
ror
sub
fisttps
mov
int
cmp
dec
ss
ljmp
dec
inc
lds
shl
vpsubusb
add
jmp
ds
leave
fstp
ret
lds
ret
jl
add
into
rcr
clc
loop
std
div
icebp
mov
int
cmp
mov
hlt
in
cmp
cmp
lret
or
mov
faddl
cli
test
nop
aad
cmc
xor
fsubrp
int
stc
fcmovb
loopne
fcmovu
loope
cli
loopne
in
jecxz
icebp
div
fmul
hlt
ss
cmp
aas
stc
into
hlt
std
cmp
std
xlat
mov
loope
icebp
rcr
hlt
loope
shr
out
repnz
aad
cmc
cmp
loopne,pt
sti
mov
jmp
sub
rcr
fcmovnbe
clc
idivl
lret
out
test
adc
loopne
loope
mov
into
rorl
rcr
lret
int
ror
rol
addl
ftst
jmp
jecxz
in
shl
ljmp
in
rcl
iret
cmp
cmp
aam
xchg
sbb
fsubp
test
iret
loope
aam
xor
enter
cmp
ljmp
vpavgw
fsin
sti
in
cli
out
in
loope
leave
ret
stc
cmc
iret
shr
std
repnz
sub
aas
jmp
popl
out
loopne
int
cmp
ss
ds
ret
fcomi
fsubp
std
ds
sti
out
shr
mov
hlt
xor
rcl
shlb
divl
clc
shl
cmp
cld
cmp
cmp
mov
out
jmp
mov
ror
aam
out
fxch
xlat
aam
neg
sar
xchg
jecxz
roll
loope
in
int
lret
leave
ss
ljmp
sti
loop
cmp
out
in
sbb
fsubrp
lea
int
xor
std
fidivrl
icebp
icebp
aas
repnz
ret
cld
clc
mov
fmuls
jmp
rcl
sar
cld
sar
ror
std
fadd
loope
jecxz
in
mov
test
ror
jmp
iret
cmp
sarb
std
icebp
cmp
sti
in
fimull
xchg
int3
call
rol
xor
lock
repz
sbb
addb
repnz
test
fldln2
rcl
ljmp
cmp
ret
and
orb
jmp
jmp
in
clc
std
repnz
xlat
xchg
lock
and
into
test
ljmp
sub
in
ljmp
loopne
cli
mov
mov
in
loope
faddl
lock
cmp
cmp
icebp
test
les
loopne
aam
ds
sti
lock
mov
out
out
idiv
xor
cld
ds
sarb
clc
xchg
ret
in
jmp
mov
in
leave
xor
fsub
rcl
shr
loope
shl
clc
ret
jmp
fmull
xchg
roll
out
fmul
lock
aam
cli
testb
jmp
out
loope
xor
sarl
fidivrl
repz
loopne
leave
movl
sub
test
fdivr
cld
in
jecxz
loop
in
xchg
lock
ret
xor
mov
lret
add
cmp
aam
aam
out
ffree
rcl
adcb
mul
call
cmp
shl
cli
xchg
repnz
addb
faddl
int
in
ljmp
cmp
loopne
test
cmc
add
orl
cs
std
xor
clc
adc
imul
cld
rolb
roll
ljmp
cmc
aaa
sti
ljmp
call
test
test
out
lret
in
shr
fsubr
roll
div
flds
loopne
mov
and
in
aaa
stc
test
rcr
into
rcl
cli
hlt
cmc
in
jmp
in
out
cld
aad
iret
into
cmp
cmc
cmp
xor
xor
in
cli
movl
loope
shl
stc
div
icebp
cmp
sti
lret
ret
fdivr
add
fcmovnbe
ljmp
out
int
jmp
int
std
iret
xorl
jmp
jmp
ror
int3
fcmovne
inc
clc
adc
sub
jl
add
xlat
rcr
stc
clc
rol
aas
ffree
stc
xchg
icebp
mov
ljmp
xlat
out
out
shl
rcr
fcmovnb
aam
in
cli
jmp
lock
lret
imul
cli
stc
shl
hlt
fcom
cli
push
hlt
loopne
out
fidivrs
fiaddl
mov
jmp
lret
int
leave
shr
lret
aam
fdivr
jecxz
rcl
cli
decb
repz
xor
xor
not
aad
call
ds
shl
mov
leave
aam
sti
jmp
cld
out
loope
rol
in
in
lret
clc
cld
fstp
std
sar
inc
ret
test
xchg
incb
fnstenv
into
out
out
out
aaa
cmp
fsubp
ret
cmp
loope
icebp
cli
sti
xchg
rorb
out
ror
cmp
ss
sarb
loope
enter
lret
jmp
cmp
in
ret
loop
out
std
fxch
fdivr
repnz
xlat
sbb
loope
lret
dec
cld
in
call
in
std
fcmovnbe
lret
aad
test
lock
mov
iret
out
out
icebp
out
shl
fdivs
sar
into
neg
cmp
into
out
sti
jmp
add
std
sti
leave
in
fmulp
into
sub
in
in
shl
in
fcmovbe
in
repz
dec
roll
std
hlt
fyl2xp1
loope
mov
jmp
hlt
call
repnz
cmp
xor
loop
rcr
cmp
testb
fcoms
mov
int3
in
shlb
out
ror
out
lret
cld
std
xlat
aas
ret
add
jecxz
ljmp
rcll
into
jmp
lret
hlt
hlt
int
shr
xchg
faddl
mov
in
lret
xchg
cmc
ljmp
das
fcmovbe
aam
lret
repz
addb
ljmp
orl
into
enter
ss
iret
loop
aaa
aad
lock
loop
clc
mov
xchg
loopne
idiv
leave
xor
fadds
adc
leave
test
mov
addl
xor
out
div
ss
repnz
lock
aad
rcl
ffree
enter
test
xchg
out
out
fldlg2
sarl
xor
into
cmc
ljmp
hlt
rolb
in
rcr
xor
aad
aaa
jmp
idivl
into
xlat
idivb
in
shl
cmp
in
iret
out
shl
icebp
cs
cmp
cli
fdiv
cli
ds
idiv
lock
aas
ds
mov
lret
mov
xchg
ljmp
aaa
lock
call
cmp
test
mov
jmp
sti
fsubr
xchg
out
repz
enter
out
sar
int3
fstp
sti
fcmovnbe
loopne
aam
fiadds
rorb
shl
cmp
dec
aam
div
hlt
fldl
aam
hlt
hlt
mov
in
ret
jmp
cmp
lret
fmul
stc
cmp
fsub
in
aam
mov
leave
lock
int
xor
repnz
leave
sub
aad
neg
lock
icebp
xchg
ljmp
sar
hlt
fnstenv
out
aad
stc
jmp
sbb
cmc
loope
addb
nop
mov
xchg
ret
int3
lock
aaa
lret
aas
aam
jecxz
cld
shr
test
std
mov
decl
cld
mov
repz
aam
neg
out
std
cmp
int
aam
ds
sti
ret
fld1
enter
out
ljmp
lret
out
sti
out
cmp
aad
int3
ds
cmp
ds
in
jmp
in
loope
fcomp
call
int
jecxz
out
cmp
cmc
repz
icebp
lock
aam
jmp
mov
fcmovnu
lret
fldl
ror
cmp
aaa
cmp
jmp
fdivp
rcl
addb
std
enter
ds
int3
shll
fnstsw
fcmovb
cmp
incb
cli
neg
sbb
xchg
xchg
xchg
mov
ds
into
jmp
cmp
out
roll
aam
in
aam
test
int
jecxz
repnz
std
out
stc
lret
hlt
rcl
aas
clc
leave
sti
cld
mov
int3
ljmp
int
in
cmp
lock
orl
or
or
jne
call
mov
cmp
jmp
lret
leave
aas
lret
int
pop
push
icebp
xlat
js
ror
lcall
repz
test
lret
std
ljmp
aam
in
fidivl
aam
repnz
fucomip
xchg
xchg
clc
mov
ret
mov
lock
jmp
repnz
cld
ds
addl
les
xchg
repnz
ss
xor
in
xor
int
fcomi
repz
ljmp
leave
cld
fsubrp
loopne
lret
xor
icebp
rcl
xor
cmc
not
out
ror
leave
vpmuludq
or
lock
jmp
fnstsw
fchs
in
repnz
ret
xchg
mov
lret
test
xchg
enter
iret
rcr
out
sbb
loopne
cmp
mov
test
ljmp
ds
icebp
loopne
leave
repz
out
in
shr
stc
aad
clc
mov
ret
xchg
test
shrl
divl
rcl
xlat
xor
cli
sti
ret
shl
rol
fdivr
aam
int3
out
in
int3
rcl
xchg
cs
cmp
fnstsw
cmpl
loop
jmp
out
call
rcl
enter
leave
ds
iret
hlt
aam
loop
cmc
xchg
sbb
icebp
xchg
mov
cmp
std
xor
cmp
or
cmp
hlt
neg
out
cld
std
jmp
mov
das
xor
into
hlt
fsubr
aas
shl
cmp
loopne
push
lds
xlat
xchg
fcmovu
mov
xchg
repnz
ss
xor
cmp
lret
ret
aam
cmp
jmp
leave
orb
aaa
shl
vpmovmskb
aaa
lock
cli
adc
test
mov
and
lock
ret
jmp
out
adc
iret
imul
adc
fsub
sub
fimull
loop
not
div
in
cli
in
iret
fadds
orb
test
fsts
shl
aad
repnz
in
aad
cmp
div
jmp
bnd
call
cmp
int3
cli
std
cmp
in
and
lret
addb
fsubrp
ret
mov
aad
aam
int3
int
aad
lret
imul
inc
mov
into
icebp
repnz
fcomp
into
lret
cmp
xor
loopne
inc
aas
inc
test
test
out
jmp
xchg
in
icebp
test
ljmp
loopne
ljmp
fnclex
test
out
cli
and
mov
mov
loope
out
int3
fcomi
icebp
stc
ror
fdivr
sarl
fcmovb
fadd
fstp
in
sti
fcmove
ffreep
neg
enter
shl
shl
rcl
aas
cmc
mov
cmp
mov
mov
out
xchg
jecxz
repnz
shll
xlat
incl
in
loope
out
lea
lret
out
lret
iret
in
lret
in
leave
in
neg
cmp
int
xlat
fld
aam
mov
out
mov
shl
nop
int
into
out
mov
aaa
fnsave
int
ret
cmc
aas
in
cld
sti
aad
int3
xchg
std
in
mov
in
lds
hlt
fcmovnu
cli
repz
cmp
ljmp
mov
fndisi(8087
into
clc
call
enter
in
lret
lret
cli
fdivr
in
inc
enter
xchg
in
out
xor
out
aad
cmp
cmc
cmp
neg
add
clc
loop
mov
into
cmp
sub
in
xor
call
ljmp
fiadds
incl
shll
clc
call
int
repnz
int
loop
adc
in
hlt
stc
in
ror
fmul
mov
out
xor
aam
ss
pushl
fld
aam
cmp
xchg
fsub
incb
imul
fcmovb
clc
lock
aas
iret
lret
int3
in
aad
shr
repnz
enter
xchg
xchg
jecxz
mul
cmp
fcmovbe
aaa
xor
leave
clc
jmp
ds
mov
out
or
mov
xor
xor
xlat
enter
in
cmc
roll
repnz
sbb
mov
call
in
fpatan
cmc
sti
rcr
fidivrl
div
shl
cmc
aam
movb
test
jl
decl
jmp
iret
iret
ror
ror
xlat
fnop
and
xor
sbb
jl
addb
jl
test
mov
out
mov
shl
repz
cmp
int3
ds
ljmp
leave
jmp
lret
cli
jecxz
lock
xchg
lock
shl
fsubrp
cmp
lret
stc
xlat
rcr
aad
fiaddl
test
jmp
cmc
ss
clc
out
stc
aas
call
ret
loopne
mov
ljmp
xchg
xor
in
cs
ror
in
cli
lret
in
std
out
test
sar
int
jmp
ret
cmp
int
std
loopne,pt
imul
rol
leave
shl
mov
call
enter
cmc
mul
sti
mov
sub
mov
out
loope
das
lret
stc
ror
fnstsw
repnz
div
inc
xlat
out
rol
roll
flds
xor
xor
cmc
stc
xlat
int3
cmp
sar
loope
les
call
out
mov
ret
lock
ljmp
cmc
rcl
repz
and
in
in
mov
mov
in
int
clc
out
hlt
lret
cmpb
lock
roll
cli
fchs
loope
fsubr
mov
out
into
jmp
cmp
sarl
lock
ffree
loopne
fcmovne
in
xchg
and
rcl
mov
lock
aad
xlat
int
lock
repnz
fcmove
imul
test
out
out
out
pop
leave
out
xor
cmc
rcl
add
loop
rol
call
test
xchg
mov
sarb
stc
aaa
call
cmp
icebp
loop
aam
xchg
test
mov
xchg
lret
in
cmp
jmp
out
int
int
and
roll
into
int3
adc
fidivrs
das
xor
lret
xor
idiv
aas
repz
in
loopne
mov
in
xchg
loope
mul
fldl2e
fld
cmp
sarb
cld
lock
sti
mov
or
jecxz
jmp
fstpt
icebp
cmp
iret
loop
into
loopne
rolb
jecxz
loop
std
in
mov
divl
cmp
in
cld
rcl
fincstp
fucom
addb
cmp
into
in
into
out
out
xchg
div
fmul
cld
int
ds
in
cmp
xlat
mov
out
fbstp
jecxz
fnstenv
stc
jmp
aaa
fcomi
cmp
mul
cmp
mov
fimull
in
xchg
out
in
stc
ljmp
sti
hlt
into
clc
xchg
out
fisttpl
enter
and
aaa
enter
enter
cli
cmp
loope
push
test
fiaddl
xchg
nop
xor
leave
clc
xor
iret
lret
jecxz
iret
cld
jmp
out
cli
cli
ret
mov
jmp
in
xor
stc
fcmovnbe
std
into
xor
into
push
ds
inc
addl
in
in
shl
aad
iret
jecxz
lock
ds
out
icebp
and
out
fdivrp
aam
mov
into
cli
int3
into
jmp
out
in
int
cli
aad
icebp
out
repz
clc
loope
shl
jmp
call
int
cmp
cmp
into
iret
push
fmul
aad
fnstcw
out
call
fiaddl
xor
ljmp
std
sarb
fdivrl
fxam
fisttpl
in
out
lock
cmc
xchg
int3
int3
sub
int
loop
clc
aas
into
int3
cld
sar
fnstcw
into
shr
fdivr
aam
in
ficoms
icebp
cmc
shll
in
in
lock
lret
sarb
rcl
into
into
out
in
int
leave
and
jmp
nop
xchg
loope
in
cmp
fxch
rcr
ss
push
ffree
sub
lret
cli
mov
enter
in
in
ss
in
cli
loop
aaa
loop
sar
cmc
sar
test
neg
lea
stc
into
xor
xor
shr
cmp
idivb
in
in
faddp
loopne
repz
test
lret
in
idivb
out
das
out
sar
loopne
hlt
aam
orb
in
sbb
xchg
fdivp
shr
jmp
int3
xor
jmp
cmp
test
sti
repz
in
aam
adc
cld
mov
pop
leave
ret
push
mov
sub
leave
ret
push
mov
mov
jmp
xlat
enter
fcmovbe
cmp
rolb
fisubl
jl
xchg
icebp
das
repz
xor
cld
loopne
lret
out
std
cmp
mov
ret
repnz
into
mov
cmc
fstp
out
cmp
ljmp
stc
leave
jmp
int3
loopne
mov
lret
mov
shl
ror
cmp
aad
cmc
repnz
rol
shl
sar
out
call
dec
xchg
xor
clc
in
in
cmc
lock
lret
shr
fmulp
rorl
int
xchg
loope
jmp
iret
in
ret
sar
cmp
cmp
ljmp
xchg
ljmp
mov
aad
int
shl
xlat
aaa
cmp
fdivr
lret
sar
fdivr
xlat
rcl
rorb
fmulp
xchg
cs
jecxz
jmp
cmp
cmp
mul
hlt
jecxz
ret
fpatan
fsubrp
ret
xchg
mov
faddp
shlb
aaa
xor
cmp
fucomip
aam
cmp
xlat
repz
xlat
or
jmp
lock
out
xor
cmc
loopne
call
fdivrp
idiv
sti
aad
fst
lret
testl
rcl
lock
dec
int3
int
test
aam
jecxz
aad
out
jecxz
in
lret
xchg
loop
enter
out
rcl
movb
aad
repnz
ret
xchg
shl
xor
out
fidivrl
aas
loopne
sbb
loopne
addl
in
mov
fcmovnbe
vpandn
idivb
idiv
in
inc
ret
cli
in
in
xlat
idiv
in
mov
loop
lock
shl
stc
and
sar
jecxz
mov
out
xchg
loope
int3
leave
xor
lock
shl
clc
fdiv
rcr
icebp
cli
test
clc
in
int3
sti
xchg
lret
call
xor
lock
cli
hlt
ljmp
loop
ret
sub
sti
fucomip
sub
stc
cs
xlat
jmp
sarb
icebp
ret
push
xchg
sub
test
lret
shr
out
jecxz
jmp
ret
xlat
cmp
lret
out
out
rol
mov
xchg
xchg
sub
lret
in
enter
fdivr
cmp
jecxz
sti
repnz
ljmp
xchg
lret
cmc
sti
aad
lret
ds
in
neg
cld
xor
in
mov
test
nop
mov
hlt
out
out
idiv
fdiv
sarl
neg
fisttps
repz
xlat
loope
out
out
in
fsincos
idiv
fstp
aas
test
xlat
clc
mov
int3
out
clc
mov
dec
ljmp
enter
cmp
fsubr
hlt
mov
in
mov
shl
int3
ror
aam
shl
in
shl
cmp
cld
div
hlt
loop
lret
mov
out
aam
aad
stc
std
fucomip
int
fsubrp
into
icebp
out
aam
incl
or
ret
xlat
cld
out
in
faddl
test
stc
fidivrl
mov
xabort
out
sub
in
cmp
clc
clc
aam
fcmovne
cld
in
aam
xchg
loop
mov
loope
fstp
xchg
jmp
xor
in
aam
leave
into
incl
cmp
shl
in
and
ret
fcomp
int
out
shll
cmp
into
out
aam
in
clc
aam
cmp
fdivr
or
fiaddl
movl
fcomp
cmp
idiv
xor
out
cld
lret
in
out
test
lret
cmc
ljmp
aam
enter
lds
mov
ret
out
int
enter
loopne
out
stc
ror
lret
in
call
fnstenv
fcomi
repnz
and
test
rolb
loope
in
ss
xor
int3
ret
jecxz
addl
or
shr
jmp
jmp
out
cmc
hlt
loope
lret
aas
fcmove
loopne
fadds
mov
fdivp
xor
jecxz
repz
int
iret
aaa
in
aad
xor
xchg
loopne
hlt
jecxz
sub
xchg
jb
add
add
or
mov
sub
mov
sbbl
push
inc
jmp
aas
lret
lret
xchg
mov
jl
add
lock
loopne
fucomip
xor
lds
fsubr
int3
ror
fcmovbe
into
lock
xchg
cli
out
ljmp
cmc
hlt
cmp
call
sti
aad
in
icebp
ljmp
iret
loope
aad
sub
hlt
xor
in
icebp
in
lret
in
fsubr
sbb
shr
and
fstp
int3
xchg
xchg
out
xor
les
xlat
int
cmp
aad
hlt
call
xchg
lret
lret
mov
in
int
out
aad
cmp
stc
int3
iret
fnstcw
icebp
xchg
xor
jecxz
fisttps
aam
lret
cmp
leave
rol
fmul
out
cmp
out
xlat
cmp
mul
out
loope
incb
sub
test
xor
xor
call
repz
xlat
test
fisttpl
stc
lret
cli
jmp
lock
in
lret
xor
into
stc
out
mov
out
iret
sub
repnz
loop
int
lret
repz
shl
int
lret
repz
cmp
add
in
xchg
iret
jecxz
lock
lret
into
fucomi
repz
in
jecxz
aaa
test
out
hlt
fildl
enter
sub
in
shl
fld
ror
add
aas
loopne
jmp
mov
sti
loop
sub
xacquire
int
call
neg
loope
cmp
into
cmp
leave
loopne
cld
mov
out
hlt
xchg
out
aad
repnz
fucom
aaa
out
rcr
loop
rol
xchg
shl
iret
mov
cli
rcr
ljmp
ljmp
ret
aam
test
loop
cmc
jmp
fcmovnb
mov
repz
das
stc
lret
out
cld
shl
cmp
shr
lock
in
xchg
in
fxch
sti
and
xchg
das
clc
icebp
in
jmp
in
xor
sti
test
cld
fisttpll
ljmp
in
repnz
cld
icebp
lret
testb
ds
loope
test
mov
fsubr
aad
divb
lret
clc
loope
fistpll
out
in
movb
dec
jmp
lret
aam
jmp
in
ss
aam
cmp
loopne
rol
xchg
clc
xchg
ret
in
fcomi
int
icebp
into
xor
mul
shl
aas
ljmp
fdivr
out
lret
mov
shl
rcl
xor
aaa
ss
cmp
repz
loopne
in
loope
imul
test
into
repnz
jecxz
repnz
xor
cld
into
clc
ror
sti
clc
cli
fsubr
fmull
imul
cs
in
div
icebp
fldz
ljmp
add
out
testb
loope
jmp
sti
repnz
lret
cmp
test
shl
sar
xchg
xor
fmul
call
in
leave
iret
xor
cmp
iret
ds
into
testb
loopne
sub
jecxz
lock
ret
lret
fdiv
aad
aad
sti
int3
aam
out
hlt
loop
lds
xchg
loope
xor
xlat
repnz
rcr
sar
aam
in
loopne
aas
repz
mov
jmp
into
adcb
ret
in
jmp
rcl
fincstp
ret
rcl
cmc
jmp
int
lock
aam
loop
out
out
xor
cmc
cmp
loopne
cmp
xchg
cld
ljmp
loop
stc
shl
xor
leave
cmc
cli
sti
iret
cli
xor
ss
out
shr
in
lret
iret
xchg
fcomip
mov
aad
clc
in
xlat
not
clc
loopne
cmp
in
aam
out
cmp
fsub
out
fcoml
shl
jecxz
lds
cmp
loope
out
imul
cmp
mov
ljmp
xchg
rorb
cmp
fsubr
repnz
lock
clc
cli
lds
pop
jmp
mov
call
fstpt
sti
aad
in
xlat
sarb
loopne
cld
shl
xor
ss
sar
in
fsubrp
int
shl
cmp
mov
subl
xor
jmp
ret
lret
ror
lret
sub
sahf
in
xchg
int3
inc
lock
jl
xlat
std
lret
out
test
repz
xor
jmp
enter
cmp
ljmp
shl
sarb
mov
out
xor
push
idivl
test
out
fcomp
mov
loope
popl
int3
jmp
iret
aam
jmp
addl
test
repz
repnz
repnz
sar
cmp
xlat
xlat
xchg
out
mov
ljmp
loopne
int3
idivl
cmp
enter
rolb
jmp
int
decl
aas
ss
lret
cmp
xlat
out
test
sub
iret
fstp
std
rorb
shrl
aam
aaa
jmp
out
aad
mov
clc
hlt
shl
out
jmp
jmp
cld
shlb
std
std
jecxz
stc
repz
cld
fsubr
cli
test
stc
mov
mov
xchg
fsub
fldln2
stc
sar
lret
aas
xor
xor
cmp
cmc
cmc
std
loop
addb
loopne
aam
fsubr
sar
sbb
sbb
loop
fdiv
jmp
addb
xor
aad
iret
repnz
stc
jmp
in
xchg
jmp
sbb
int3
test
cli
icebp
repnz
cmp
test
mov
decl
lret
repnz
out
ljmp
repz
addb
into
jecxz
out
in
ror
icebp
out
out
aad
fcmovnbe
cmp
rorl
jecxz
mov
in
jmp
clc
clc
int
xor
lret
sub
ret
jecxz
shl
cmc
jmp
leave
rol
test
jmp
jecxz
fcomi
cmp
call
ret
aas
fdiv
fcmovb
ret
cli
ljmp
sub
enter
enter
repnz
test
les
cld
ror
mov
ss
out
aaa
cmp
cld
fnstsw
xlat
inc
aam
cli
or
jmp
nop
into
xchg
shr
xor
xor
xor
jmp
out
aam
leave
jmp
xlat
push
mov
ljmp
hlt
out
idiv
cmp
std
adc
hlt
aad
cmc
incl
xchg
adc
enter
fdivrl
fadd
mul
cmpb
ret
rorl
aam
stc
cmp
out
cmp
loopne
int3
fidivrl
repz
ret
cmp
fsqrt
in
repnz
hlt
ljmp
cmpl
ffreep
int
orl
jmp
lock
fcomi
lret
aad
std
roll
fadd
in
mov
ss
out
out
ror
jecxz
clc
ret
ret
test
test
in
icebp
leave
int3
xchg
xchg
shl
out
xlat
sti
leave
hlt
icebp
out
cld
aam
aam
sub
cmc
rcr
int
out
sbb
mov
out
xor
out
call
cmp
aas
cmp
xlat
test
out
fsubrp
xchg
xor
in
lock
icebp
cmp
sarb
iret
cmc
clc
repnz
ret
loop
out
loop
mov
popl
rcl
std
icebp
cmp
std
test
cmc
push
aam
fisttpl
out
xchg
icebp
ljmp
xor
loope
flds
aam
xchg
fcom
mov
in
ss
repz
rol
out
loope
repnz
test
call
cmp
rorl
int3
ror
enter
in
aam
and
ss
filds
in
into
mov
ljmp
fsubrs
out
rol
cmp
sub
lock
call
leave
mov
repz
clc
aaa
ret
int3
rcl
fucomp
std
int
repz
cmp
leave
ljmp
in
rol
ret
idiv
int
not
cmp
je
jmp
iret
aad
aad
aad
aad
mov
jnp
test
flds
jl
ret
cmc
rcl
aad
and
stc
loopne
in
rcr
ror
xor
cmp
repnz
rol
out
fxam
addl
rcr
in
jecxz
divl
out
xor
leave
sarb
out
enter
ret
xor
aam
fprem
loop
sub
fucomip
test
ss
sti
enter
cld
iret
fcmovnbe
fxtract
repnz
jmp
icebp
lret
cmc
cmc
xor
lock
repz
fcmovne
stc
aas
cmc
frstpm(287
sti
mov
enter
out
or
iret
cmp
clc
lret
repz
int3
into
faddl
test
mov
ffreep
in
xchg
xor
shl
xor
cmp
cmp
sbb
stc
enter
sti
rclb
loopne
jmp
loop
fdivr
xor
mov
leave
fcmovu
loop
xchg
repz
std
lock
ljmp
jmp
ljmp
xor
clc
int3
ds
cld
cli
cli
in
xlat
xchg
fadd
clc
jmp
xchg
lock
hlt
cld
jmp
out
cmp
fdivrs
incb
leave
loopne
jmp
cld
icebp
out
jmp
mov
xor
div
repz
jmp
fadd
ret
fsub
div
lret
lret
loop
rcl
xchg
cld
vpsrlq
loop
int
into
cli
cmp
cld
jecxz
sti
fiaddl
xchg
fdivrp
fucomip
test
xor
into
xor
in
not
rcr
cld
out
flds
std
icebp
xchg
out
fucomp
repz
xor
ljmp
ss
cmp
out
shl
aam
incb
xchg
xchg
sub
cmp
call
std
repnz
repnz
in
std
fadd
mov
leave
in
hlt
imul
cmp
cmp
out
lret
fdiv
and
fdivr
call
in
xchg
out
cs
repz
cmp
cld
shl
fadd
shl
vpaddq
loopne
int3
test
xchg
cld
fmull
in
in
iret
sti
lock
sar
loope
aad
cld
out
call
mov
shl
ljmp
clc
hlt
in
ss
aad
cmp
sti
xchg
mov
xor
out
cmp
aaa
in
lret
std
not
out
xchg
ljmp
fsubp
mul
ss
les
cld
cld
leave
out
iret
repz
fidivrl
std
lret
cli
int3
incl
faddp
icebp
rcl
sub
in
cmp
in
ds
stc
sar
fchs
leave
in
lret
iret
fcmovu
icebp
lret
aam
lds
icebp
cli
aam
std
fisttps
les
out
xor
ret
shlb
jmp
neg
frndint
loope
shl
incb
xchg
cld
shl
shr
shl
jmp
leave
cmp
adc
cli
fsub
sti
xchg
addl
aad
iret
repz
cmp
std
in
cmp
and
neg
idiv
call
in
loop
ljmp
leave
iret
imul
rcr
clc
xlat
clc
fdivrp
incl
in
fisttpll
shl
repz
xor
out
fcmovnu
jmp
cmc
mov
mov
ffreep
test
imul
jmp
ljmp
xor
cli
repnz
int3
aas
call
ret
shl
cli
rcl
testl
out
xlat
lret
lock
cmp
cmc
aad
movb
jmp
ljmp
cmp
out
fyl2x
shl
test
jmp
leave
in
loopne
jmp
aam
ret
cmp
out
lret
int
aas
rcl
test
in
fsubr
jmp
into
jecxz
rcr
cmp
xor
fcomp
add
cmc
ret
jmp
fcomp
cld
repz
iret
xor
xor
repz
cli
xor
repnz
shl
cmc
stc
call
mov
icebp
fsubrp
xlat
in
xor
cmp
lret
sub
mov
sub
subl
xor
movl
cmp
movl
jne
xor
jmp
ds
ret
ds
jmp
mov
inc
mov
jl
add
rolb
ror
out
jmp
test
ljmp
out
aaa
out
cmc
shl
stc
cmp
stc
ds
rol
enter
into
xchg
in
rorb
jmp
loope
cmpb
sti
ret
int
in
loopne
mov
stc
cmp
xor
fdivp
aas
icebp
test
out
repz
in
in
call
aam
enter
iret
fcmovb
std
test
cmc
loopne
fmuls
out
mov
hlt
out
iret
xor
fst
jmp
aas
cld
aam
in
sar
jecxz
fdivp
cli
xchg
xlat
mov
out
in
div
xlat
in
repz
shll
shl
fyl2xp1
ljmp
clc
aam
ffreep
fstp
sar
ror
jmp
leave
aaa
ret
sar
repz
jmp
xor
ret
rcr
cmc
cmc
icebp
xor
repnz
in
addb
iret
stc
aad
fidivrl
fidivrl
int3
cmp
cmp
jecxz
loopne
cmp
sbb
loope
xchg
leave
xbegin
aam
idiv
in
loopne
clc
aad
std
call
fucomp
call
sub
xor
in
jmp
rolb
out
in
sar
jmp
mov
fucomip
int
fsubrl
in
fcom
cmp
aad
rcr
loopne
cmc
cmp
aad
in
loope
int3
xchg
iret
fidivs
enter
xor
iret
iret
cli
cld
out
out
hlt
xchg
loop
xchg
orl
lret
enter
aad
cmp
ret
bnd
xchg
loope
icebp
cli
mov
fdivp
fmul
shll
cli
cmc
cmp
fstpt
hlt
icebp
stc
sti
cli
in
cli
jmp
jecxz
loope
jmp
iret
aam
sti
iret
lret
lock
int3
test
fcmovu
rcl
clc
mov
int3
cmc
fsubrl
xor
cs
repz
loope
cmp
aad
sbb
fcomi
sar
sub
loop
mov
icebp
ljmp
fcmove
jecxz
ds
out
adcb
in
out
hlt
icebp
std
xor
int3
sti
not
jmp
icebp
cmp
ret
mov
icebp
shr
mov
fucomp
leave
int
ret
aaa
cli
fidivrs
repnz
aas
rcr
test
test
and
in
in
adcb
enter
lock
ret
sarb
lock
sti
loope
mov
jecxz
mov
push
in
loope
ret
std
cmp
filds
fcmovne
cli
test
into
out
kmovw
in
xlat
fucomp
int
jmp
ret
stc
test
cld
mov
ret
pop
xchg
cmp
int3
ret
out
repnz
ss
test
cmp
sub
out
mov
call
jmp
ret
fld
clc
stc
call
shl
loopne
out
in
adc
hlt
cld
fcomp
lea
loop
ret
cmp
rcl
icebp
dec
int
int3
stc
shr
out
enter
in
mov
das
ror
lret
cmc
in
aaa
int3
stc
ror
cmp
fsubr
std
repz
enter
fists
aam
rcr
iret
cmp
xlat
testb
repz
neg
xchg
loope
lret
mov
das
loopne
out
fpatan
fstp
repnz
loopne
rol
stc
rolb
out
test
xchg
mov
out
enter
cli
cmp
out
ret
neg
mul
aad
sti
out
xchg
mov
xchg
call
call
leave
int3
cld
shr
in
out
rol
fdiv
loope
shl
test
fmulp
in
in
test
xor
icebp
shr
cmc
xlat
clc
lret
rcl
shl
cmc
aas
orb
test
leave
fnsetpm(287
xchg
adc
leave
xor
out
cmc
in
clc
fmul
cmp
ret
ret
cli
repz
loop
faddl
out
xor
cmp
shr
fdivl
cmp
rcr
ret
test
jecxz
lea
addl
shr
sti
cmp
out
neg
hlt
loopne
rcr
hlt
icebp
cld
test
in
loopne
jmp
fsubrl
inc
add
add
jmp
mov
andl
xor
jmp
ds
rcr
fcmovbe
rcl
aad
sbb
fisubs
mov
jl
cmp
jecxz
fdivrl
fcom
out
mov
fadd
icebp
rorb
aad
out
aam
lock
cmp
in
int3
flds
test
jecxz
and
rcl
repz
aam
cmp
cmp
fxch
cmp
ljmp
ror
icebp
ljmp
int
aas
ljmp
loope
xchg
out
test
call
mov
xlat
lret
into
out
cmp
leave
out
repz
rcl
ret
cmp
cmc
cli
jecxz
neg
icebp
adcb
sti
lret
xlat
cld
cmpl
hlt
out
ret
rcl
call
in
loopne
test
xor
xlat
sti
xor
stc
sti
dec
lret
loopne
out
aad
ret
mul
mov
mov
ret
xchg
aas
int3
repnz
jecxz
ror
fucomi
clc
lock
cld
repz
loop
hlt
int
orb
shl
xor
icebp
fsubr
ss
fdiv
hlt
test
cli
ret
jmp
ljmp
mov
nop
in
out
cli
into
out
not
not
fnstsw
clc
fidivrs
enter
mov
mov
jmp
rcl
out
in
aam
loope
lret
aam
xlat
and
in
add
jecxz
mov
mov
in
xor
out
xor
lret
in
aam
in
sbb
enter
incl
mov
shl
aaa
ret
ss
fxch
jecxz
icebp
clc
rcr
icebp
jmp
in
call
iret
xchg
xor
in
jmp
xor
cmc
aas
cld
iret
icebp
test
fscale
lret
jmp
in
xchg
out
out
vpxor
cmp
idiv
adc
hlt
sti
fsub
shl
int3
enter
jmp
in
call
fcomip
std
lock
les
and
fists
lret
iret
fcmovnbe
int
repnz
loope
mov
movl
sti
cmp
fldl
rcl
fadd
fsubrp
xchg
cmc
loopne
ret
cmp
cli
cmp
loope
loopne
ds
out
fucomp
xchg
repnz
aam
out
in
out
shr
ds
cmp
cmp
lock
ret
rorl
in
xlat
iret
ljmp
out
xlat
repnz
cmc
aam
loope
idiv
ret
lret
shl
loopne
leave
stc
xor
in
hlt
in
sar
xlat
fdivp
xchg
faddl
aam
xor
sti
repz
mul
int
push
mov
jmp
loop
out
fsub
mov
jmp
mov
loopne
enter
out
cmc
sar
aad
cmp
std
test
fcmovnu
jecxz
vpmaddwd
ror
cmp
cmp
shl
aam
out
aad
test
in
mov
xlat
into
enter
ss
aad
lret
neg
test
les
enter
in
ss
cmp
lret
ss
in
aad
cmc
cli
mov
testb
in
repz
in
lock
sti
ss
clc
loopne
xrelease
mov
std
shl
in
in
xor
lret
fsub
cld
ror
repz
sti
ret
mul
mov
in
ljmp
into
cld
fidivrs
into
fnstsw
fstp
shl
cld
fdivp
mov
ds
in
sti
cli
shr
aam
xor
into
fstpt
enter
repnz
fadds
out
loopne
fildl
jecxz
stc
in
icebp
cli
iret
aam
ljmp
adc
aam
leave
int
mov
out
jecxz
int
repnz
cld
idiv
cmp
cli
test
ds
xchg
mov
repz
enter
aad
cli
rolb
cld
jmp
sar
repnz
in
int3
loop
fdiv
ds
sar
clc
mov
out
in
int3
in
fadd
incb
ret
sub
mov
xorl
jmp
ds
aam
aam
aad
inc
dec
push
pop
mov
mov
jl
in
enter
cmp
fmulp
cld
ss
aad
mov
xlat
fsubrp
cmp
sub
repz
cs
out
icebp
into
fucomp
repnz
out
cmp
out
loopne
fisttpll
loope
int
jmp
lret
std
call
fcmovu
ds
fnclex
fsub
cli
ret
out
faddl
call
into
fptan
in
iret
xor
shl
fld
faddl
loope
out
mov
xchg
hlt
in
in
clc
cmp
xor
in
sar
xlat
sarl
test
cmp
clc
jecxz
leave
jmp
out
into
divl
enter
in
clc
neg
fdiv
in
in
into
cmpb
test
fildl
jecxz
iret
call
out
cmp
aad
cmp
xor
test
fdivr
repnz
mov
clc
ret
mov
in
lret
repz
jecxz
sub
jmp
enter
aaa
cmpl
test
std
rolb
mov
icebp
lret
int
ret
cmp
push
fstpt
xorb
shl
loope
mov
test
test
out
cmc
aad
loopne
xor
xor
xor
hlt
loope
sti
adc
mov
test
loopne
xchg
xchg
aaa
fdivp
jmp
cli
fcmovu
enter
shl
stc
cmp
mov
cli
in
call
aaa
std
fdivs
cmp
sarl
ffreep
neg
stc
les
lret
mov
in
jmp
ljmp
cli
cmp
into
xchg
mov
xchg
lret
iret
mov
in
sub
div
call
xor
lock
ret
fimull
mov
cld
int3
ljmp
out
clc
in
cli
iret
iret
fdivr
fdivr
fstpt
addb
lret
sub
cmc
lret
in
cmp
in
out
stc
xor
xor
repnz
cmc
hlt
lret
lret
mov
in
in
aaa
sti
shll
call
loopne
cld
jmp
fsubrp
int
loop
xchg
fimuls
fucomi
leave
ss
xlat
shl
ffreep
ret
ret
lret
xchg
lock
in
lret
out
iret
xor
lret
int3
fdiv
shl
mov
lea
xchg
fldl
aam
shl
cld
fdivr
ds
in
repnz
fucomi
mov
lock
aaa
out
ljmp
cli
aas
in
fldl
jmp
ficoms
cmc
ret
out
shr
fdiv
leave
sar
into
repz
test
roll
popl
call
aaa
cmp
out
call
out
cmp
cld
stc
in
testl
idiv
xor
in
xor
cmp
stc
xor
sti
iret
clc
ret
rol
test
loop
repnz
repnz
lret
cmp
out
xlat
fiaddl
popl
call
shr
xor
in
cmp
adc
enter
jecxz
fdiv
loopne
aam
call
fcmove
cmp
fadds
test
sbb
filds
repz
shlb
cli
fdiv
aad
shl
cmp
cli
adc
sub
rol
in
aad
xor
cmp
xor
les
cld
lret
rol
jmp
fxch
in
fcomp
cmp
out
shl
in
lret
loope
repz
in
shl
xor
ljmp
std
in
ffreep
call
nop
iret
and
in
in
clc
xor
int
ss
aam
aas
hlt
fidivs
aas
repnz
inc
std
cmc
cmp
enter
repz
in
repnz
in
cmp
cli
lret
in
in
or
stc
lret
jecxz
in
out
das
ds
out
in
lock
out
shl
fstp
cld
mov
aas
fmul
fmuls
xor
xor
out
in
in
int
sub
icebp
test
loopne
ret
or
xor
add
notl
mov
movl
jmp
mov
xor
or
sub
add
jmp
ret
aad
fstp
int
ja
imul
pop
inc
jl
flds
jl
cli
out
int3
xchg
loop
rcr
in
lret
lret
cmpb
in
test
test
cmp
lds
out
test
iret
lret
jecxz
lret
xor
mul
aad
mov
ljmp
repnz
jmp
xor
cmc
icebp
clc
jmp
ret
add
idiv
xchg
call
aam
out
iret
out
cmc
addl
dec
inc
adc
leave
rorl
xlat
lock
out
fcomip
cmp
cmp
out
loop
mov
std
cld
in
int
jmp
into
xor
cmp
fsubrp
repnz
in
sar
test
out
std
xchg
into
xor
aad
jmp
jmp
int3
jecxz
aam
addb
mov
iret
decl
lret
sarb
repnz
cli
ffreep
cld
cmc
fdiv
neg
in
cmp
jmp
xchg
xor
in
jmp
cmp
ds
fstpt
ret
fcmove
lret
xchg
sar
in
cmc
icebp
xor
fyl2xp1
cli
fcmovu
cmc
stc
cmpl
repnz
jmp
leave
xchg
sti
cmp
out
icebp
cld
shl
loopne
in
out
sarl
aad
icebp
loop
stc
lock
hlt
adc
int
fdivrp
fistl
ret
les
fnstcw
cld
out
cld
cli
std
div
stc
in
fxch
in
movl
cmc
xor
int3
fcom
in
int
ror
aas
fprem1
mov
fadd
clc
fsubr
cli
adcb
lds
in
fmul
aas
cld
in
frndint
std
sar
shl
sub
out
fimull
jmp
xor
into
in
ffree
int
frstpm(287
rcr
sti
aad
in
mov
mov
lret
xchg
or
xlat
lock
sarl
sarl
incb
ds
leave
cmc
cld
lret
std
jmp
stc
in
in
iret
les
cmp
cmp
shl
mul
cmc
mov
testb
cld
iret
repnz
jmp
ljmp
cld
hlt
ds
cld
fndisi(8087
clc
out
mov
ror
cmc
out
jmp
fcmovnu
neg
in
enter
fiadds
test
out
fprem
xchg
in
out
shl
ret
icebp
aam
cmp
int
repnz
test
icebp
rorl
iret
in
ljmp
iret
in
enter
rcr
ret
lock
orl
ret
ljmp
cmp
cmp
add
shl
jecxz
out
enter
call
xorb
hlt
into
fcmovu
idiv
aad
loopne
clc
aas
lds
addb
xchg
xchg
fcomip
iret
loopne
out
cld
fnstsw
fmulp
repz
in
repnz
mul
into
icebp
jmp
xlat
fdiv
fcmovnbe
in
cmp
aaa
xor
aaa
cmp
movl
jecxz
xchg
shr
icebp
ss
out
std
cmp
fdivrl
aad
out
idiv
clc
mov
ljmp
jmp
neg
repnz
repnz
sti
enter
sti
mov
int3
xchg
cmc
lock
in
in
out
fcom
clc
aad
cmp
cmp
stc
ret
fldl
loope
test
test
out
repz
cmc
test
test
fucomi
jecxz
neg
loopne
mov
rorb
ret
fdiv
cmp
fidivrs
fdivrs
repz
loopne
clc
lds
xchg
ret
hlt
stc
cmp
aam
jmp
test
rolb
stc
mov
loopne
cmc
adc
hlt
ljmp
xor
icebp
repz
ljmp
fsubrp
and
in
fcomip
aas
ds
loope
fcmovnb
out
ds
clc
out
sti
loope
lea
aam
fidivrl
aaa
cmp
fstpt
xlat
loopne
cmp
add
notb
nop
in
lret
rcl
jmp
shl
clc
stc
fnstcw
fldlg2
ds
cmc
cmp
cli
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
push
pushl
call
jmp
mov
mov
jmp
iret
ror
fstp
xlat
ret
dec
or
inc
jl
flds
jl
xchg
loopne
stc
ljmp
loop
shr
ljmp
cmp
xor
call
call
fsubp
call
fidivl
into
in
in
in
aad
aam
add
jecxz
loopne
addb
or
xor
lret
in
xor
fdivr
sti
lock
fdivr
ret
fadd
imul
fildl
aad
divb
cmp
in
out
and
stc
addl
faddl
xchg
aad
out
fdivs
xlat
lret
sti
cmp
aam
ffreep
clc
repz
sti
clc
test
fucom
jmp
cli
jmp
lret
lock
aad
std
hlt
test
fcoml
xor
xlat
repnz
ss
lret
iret
std
add
call
ljmp
xchg
jmp
ljmp
jmp
cmp
in
cld
fstp
ds
mov
xchg
shl
jmp
in
call
into
cmpl
cmp
loopne
ret
fucomi
int3
ljmp
in
iret
xor
std
cmp
cmp
out
out
xor
loopne
jmp
hlt
sub
in
cmp
cmp
cmp
fldl
out
loope
loop
test
mov
aam
fmul
cmp
fcmovbe
sar
aad
loop
icebp
xor
mov
out
orl
aam
cmp
aad
loope
cld
test
cld
test
div
mov
test
mov
mov
call
rcl
lock
repnz
jecxz
aam
neg
sbb
jecxz
in
cli
int
xchg
mov
enter
shr
out
test
iret
xor
aas
call
test
in
call
into
ljmp
int3
lock
cli
lds
sbb
movb
sub
leave
clc
int
ljmp
fidivl
out
lock
sbb
lret
xor
xlat
lret
out
int
fcmovnu
sti
fcmovnbe
clc
rcl
in
fcmovnu
std
loope
ror
out
jecxz
icebp
loop
in
cli
ljmp
clc
xchg
shl
mov
xchg
mov
xchg
xor
int3
fcmovbe
cmp
xor
aad
rcl
in
inc
stc
lret
adcl
aaa
into
out
int
sti
stc
idivb
stc
into
fld
adc
enter
jmp
rol
cmc
xor
int
int3
out
idivl
test
xor
cmc
lock
in
in
loope
mov
out
fcom
ljmp
std
ljmp
in
in
test
out
xchg
lret
mov
std
xlat
in
mov
xor
cli
out
idivl
std
std
or
in
orb
repz
jmp
fmul
rcl
in
mov
aam
addb
addb
cmp
rcl
std
stc
sarl
shl
sub
mov
jmp
ss
cmp
lret
cli
push
ftst
rcr
cmc
out
stc
int
lret
loope
ror
repz
fxam
into
cmp
filds
out
shr
xchg
test
leave
out
loopne
lock
loopne
cmp
leave
fnstsw
fdivrp
out
jecxz
std
jecxz
jmp
lock
int
xlat
call
out
xlat
out
cmp
clc
rcr
sar
xchg
and
ljmp
xchg
test
aad
leave
fdiv
cld
jmp
iret
in
fdivrp
rolb
xlat
cld
mov
icebp
cld
fcomip
cmc
mov
lock
in
ss
hlt
out
loopne
fstp
cmp
ljmp
loop
out
shl
mul
call
fnstcw
in
test
loope
fcomi
fiadds
nop
fists
fcmove
aaa
enter
not
ds
cli
lock
loopne
loopne
in
call
jmp
rcl
loopne
shl
neg
call
in
sbb
test
add
lret
aam
fstp
fisubrl
push
int3
test
lahf
and
add
aad
sar
in
leave
jmp
in
repz
xor
call
cmp
lock
cmc
ret
flds
sti
shl
int3
in
int
aam
lds
stc
in
xor
iret
aaa
std
out
loopne,pt
leave
leave
jmp
testb
mov
jecxz
enter
sti
cmp
out
xlat
icebp
in
stc
in
mov
enter
call
aam
jmp
cmp
aas
cmp
repz
aad
hlt
aad
fsin
test
cld
adcb
in
out
lret
xor
repnz
and
mov
loop
xchg
aam
jecxz
enter
sarb
shl
repnz
sar
fcmovbe
in
int
loopne
mov
iret
lret
cmp
cmp
rolb
ret
in
addb
loop
call
aas
cmp
xlat
std
cmp
faddp
aad
sar
lret
loope
sbb
stc
repnz
xor
aaa
loope
repz
test
mov
enter
std
test
xchg
sub
ljmp
int3
std
jecxz
fsub
sar
loopne
test
clc
repz
ret
xor
int3
rcr
neg
loope
add
stc
fisttpl
adcl
mov
cmc
leave
fcmovbe
xor
aad
cmp
incb
or
shr
shr
ds
xlat
flds
xchg
ffree
repz
clc
ljmp
in
jmp
out
sti
cmc
repz
repz
out
out
not
mov
enter
mov
int3
loopne
iret
stc
cs
jmp
jmp
stc
icebp
shl
rcr
cmp
fcomi
in
fldl
rol
rcr
aaa
ds
cmp
fcmovu
ret
addb
loopne
in
aaa
leave
ljmp
call
aam
rcl
cmp
lret
enter
stc
iret
sar
aad
xor
xor
mul
fistpll
cmp
jecxz
lock
fcomi
out
cli
mov
loopne
in
enter
jmp
out
ror
aam
aam
cmp
sti
rolb
sti
movl
out
rcl
in
cli
iret
iret
idiv
rcl
cmp
out
dec
call
mov
in
shr
sarl
clc
aad
xlat
shl
iret
loopne
cld
cld
sub
std
fdivr
repz
xchg
iret
shl
jmp
fstpt
cli
lock
loop
loope
mov
call
in
out
ficoms
stc
hlt
repz
cmp
into
xor
icebp
cmp
sti
xchg
xlat
fmuls
xchg
call
xchg
shr
loope
iret
lock
jmp
test
fadd
jmp
mov
loope
shl
enter
aaa
cmp
cmp
flds
test
std
jecxz
in
jmp
jmp
cmp
ss
loop
hlt
fdivrs
jmp
xchg
loopne
faddl
shl
rcr
fucomp
lock
aam
hlt
xchg
cmc
sub
fimull
repnz
cli
sarb
int3
xor
xchg
fisttpll
xchg
lock
aad
in
int
aam
int3
jmp
hlt
lret
in
lock
filds
jecxz
test
shr
ret
jmp
fsubp
aad
sbb
fucompp
div
xlat
mov
loope
icebp
into
in
sarl
cmp
ror
ss
xlat
jecxz
lock
fmulp
in
aam
out
iret
loop
leave
fstpt
fucomi
adc
cmc
sar
hlt
fimuls
jmp
jecxz
aam
out
ss
out
ljmp
test
in
out
stc
fcomp
mov
stc
lret
xor
lret
into
repnz
cmp
fld
loopne
hlt
fsub
ret
mov
adc
xor
loop
out
xor
cmp
cmp
sub
add
pop
pop
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
jmp
iret
into
ret
ror
aad
addb
movsb
and
add
idiv
aas
out
xlat
cld
std
sbb
int3
fisttpl
aam
rcl
cmp
enter
in
fucomip
fcompp
std
and
fisttpll
jmp
hlt
xlat
out
call
rol
testb
cmp
int
in
xchg
loopne
cli
hlt
aad
ror
icebp
sar
out
sti
test
repz
mov
int3
mov
iret
out
cmp
neg
lret
icebp
sti
repnz
ds
jmp
out
in
int
xchg
ret
rol
aam
ds
fchs
ret
loope
repnz
fcomip
fucomip
xchg
shl
rorb
xlat
out
in
int3
xor
ret
repnz
loope
fadd
call
lret
xchg
enter
ss
call
rol
out
fsub
mov
xchg
or
xchg
in
enter
iret
out
int
clc
xor
repz
ds
ljmp
iret
ljmp
leave
in
sarb
ds
sub
in
add
ljmp
jmp
cmp
cmp
cmc
ror
rol
xlat
sar
test
lret
orl
cmp
in
in
fxch
repz
out
or
fucomp
xchg
ds
xor
clc
stc
cmp
in
into
ss
rolb
fadd
ljmp
xchg
in
ss
into
lret
lock
neg
clc
aas
std
fmul
loop
sti
out
icebp
icebp
iret
cmp
jmp
ret
shr
lret
xor
rcl
out
addb
cmc
xchg
out
xchg
mov
xor
lock
stc
aam
fptan
loopne
fcmovnbe
leave
clc
call
fstp
shl
in
loop
cmp
leave
into
fcomi
cmc
adc
aas
sarl
call
test
loopne
idiv
cmc
lret
aam
ljmp
xchg
xlat
addl
loope
loop
ffreep
ret
jmp
in
fsubrp
fst
in
filds
test
in
addl
repnz
in
xor
call
std
into
testb
ljmp
xchg
ds
lret
sti
div
fcmovne
rcl
loop
in
cmp
jmp
loopne
repnz
fnstcw
xor
lret
jmp
rol
loopne
cli
call
lret
fists
rol
xor
ror
iret
loope
push
cmp
lock
or
repnz
sub
cli
sti
rcr
xlat
int3
xlat
ss
into
test
xor
inc
out
fisttps
into
enter
fdiv
fidivl
hlt
jmp
faddl
call
xchg
mov
clc
fsubrp
repnz
hlt
test
icebp
testb
int
nop
xchg
aas
shrl
repnz
std
cmp
fsubr
clc
clc
clc
hlt
roll
clc
sti
mov
mov
aad
int3
hlt
sarb
in
ss
hlt
int
clc
mov
xlat
clc
call
fcmove
xchg
in
int3
shlb
in
xlat
clc
clc
in
out
div
repnz
out
ret
shr
ret
loop
into
sti
roll
call
fcomi
call
sar
fscale
in
cld
xchg
dec
test
xlat
out
aad
cmp
cld
ss
fdiv
shl
fmulp
mul
addl
jmp
xor
sub
lock
out
call
cmc
repz
xlat
jmp
aas
sti
std
stc
jmp
faddp
in
into
enter
enter
cmp
sarb
sbb
fdivrp
mov
sub
out
aaa
icebp
cli
jmp
jmp
loope
and
in
sar
iret
loopne
imul
fldln2
out
repnz
lock
cmp
ffreep
lock
loop
jecxz
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
pushl
pushl
push
pushl
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
adc
mov
add
mov
orl
xor
sub
mov
xorl
add
movzwl
movl
mov
movl
movb
sbbl
lea
dec
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
orl
mov
mov
xor
incl
sub
xorl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
jmp
ret
rcl
rol
aad
nop
push
pop
push
or
push
jl
lret
jl
jecxz
xchg
loop
cmc
ss
lock
jecxz
cld
sarb
out
neg
shl
mov
lret
mov
and
xor
xor
in
xor
repz
fldl
cmc
int
loop
jecxz
aad
lret
sti
ljmp
xchg
out
fadd
loope
jmp
xchg
test
out
xlat
iret
cli
jecxz
repnz
lds
jecxz
addb
mov
loop
lret
ror
call
sar
rcr
fcmovnu
fdivp
fdivrp
mov
ffreep
das
hlt
leave
clc
imul
std
lock
cmp
iret
test
and
loop
fcom
or
lret
out
nop
mov
xor
call
fiaddl
iret
cmp
fucom
aad
in
int
lret
lret
rol
cmp
ror
cmc
iret
cmp
xor
ret
hlt
mov
mov
xchg
shl
xchg
fisubrs
ss
roll
cmc
out
ret
xchg
lret
fildl
loope
hlt
fcmovne
enter
cmp
rol
into
fsubp
cmp
ljmp
sbb
xchg
shl
cmp
int
icebp
sti
iret
shr
std
out
sub
xchg
and
mov
sub
int
leave
cmp
ss
icebp
fdivrs
fsub
inc
fsub
fmuls
xchg
lret
in
jmp
ror
ss
iret
clc
jecxz
cmp
cmp
aad
fsub
orl
ret
icebp
stc
ss
out
fdivs
out
lock
loop,pt
fsubp
cmc
vpsubw
call
mov
sti
int3
iret
cmc
aam
lret
aas
cmc
test
fnop
lret
out
into
jecxz
mov
lret
leave
icebp
cmpl
out
cld
idiv
mov
idivl
loopne
sub
call
ret
mov
xlat
repz
call
cmp
sti
lret
mov
nop
std
out
shr
xor
into
clc
cmc
dec
idiv
in
cmp
loopne
out
xlat
movl
shl
out
aaa
cmp
fucom
repz
shr
fsubp
test
push
loope
out
ljmp
cmp
iret
shl
xlat
fucom
leave
repz
mov
mov
sub
ret
lret
icebp
repz
incl
out
in
cli
mov
enter
xchg
in
xor
cmc
loop
out
imul
cmp
loopne
cmc
test
enter
cli
jecxz
loope
out
xor
sar
cmc
lret
rcr
loope
loop
xlat
les
lea
into
ret
lret
fdivp
fstpt
std
fdivrp
rol
mul
idiv
xlat
aam
lret
incl
sub
loopne
xor
fdivrl
clc
cmp
xchg
iret
cmp
in
shr
cmp
lret
lret
fcmovb
fadd
out
and
enter
into
repz
out
in
cmc
cmp
cmp
enter
test
test
cli
leave
loop
xchg
jmp
repnz
repnz
xor
cmp
lock
stc
rcr
or
rcr
filds
out
out
xor
leave
sub
xor
icebp
cmc
cmp
aaa
ret
idiv
sar
cmp
ljmp
xchg
sub
cmp
out
fdivr
not
out
cmp
clc
lock
jmp
mov
mov
iret
cs
aaa
repz
aam
repnz
ss
loope
mov
fildl
xchg
fsub
cmc
xchg
rol
lds
xor
cmp
test
rolb
ror
stc
fstp
in
rorb
loop
divb
in
out
sar
iret
clc
cmc
int3
adc
mov
leave
ljmp
out
in
jecxz
xor
xor
ror
aam
loopne
cli
rol
jmp
xchg
rcl
xor
repz
movl
mov
mov
push
xor
mov
add
jmp
jmp
aad
shlb
pop
mov
pop
jl
lret
jl
roll
add
adc
in
in
in
cmp
cmc
xchg
ror
xor
lret
cmp
fdiv
aas
rol
incl
std
fsub
xor
int3
sub
sub
fsubr
cmp
shl
test
icebp
sbb
mov
loope
loopne
shr
ss
cmp
enter
icebp
fdiv
rcr
icebp
test
leave
loop
into
lret
out
out
ret
xor
fdivrs
jecxz
roll
ret
fucomp
xchg
test
iret
int3
repnz
mul
cmp
lret
cmp
sbb
aad
fisttps
lock
sub
loop
fdivl
out
cmc
hlt
aam
aas
jmp
mov
int3
mov
xlat
xor
int3
ror
sarb
lret
lock
hlt
les
out
xchg
int
into
ret
rcl
cld
div
in
fdivr
lret
clc
out
add
lret
testb
xchg
cld
sub
out
call
idiv
shl
hlt
xchg
sti
hlt
loope
in
leave
loop
lret
int3
ss
clc
aad
xlat
out
in
ss
out
shl
xlat
rcr
loope
enter
out
loopne
and
lock
xor
loopne
cld
cld
aas
fldz
fiadds
fldl
lret
jecxz
xor
enter
clc
xor
cld
lock
shl
aad
cld
cmc
cmp
sbb
jmp
into
lret
jmp
aam
fsubr
in
test
cli
fcmovu
lret
int
test
rcl
xor
xlat
in
cld
cmp
sti
jmp
lds
xlat
mov
jmp
lock
shl
mov
ds
in
cmp
cmp
in
loope
rcr
cli
and
in
xlat
sti
test
sub
fdiv
shrb
lock
into
sar
fcmovnu
fdiv
xchg
cmc
aam
in
fdiv
call
xchg
aaa
xor
lock
lock
out
out
stc
fdivrs
cmp
aas
loopne
sub
jmp
test
fstl
aam
lret
sarl
loope
shl
in
repnz
rorb
jmp
lds
int3
xor
fyl2x
incl
cld
vpmaxub
aad
xchg
jecxz
int
ljmp
lret
std
cmp
int3
std
fst
orb
in
mov
sbb
repz
int
cmp
cmc
cmp
adc
fdivr
fucomip
lea
ljmp
out
repz
adc
stc
jecxz
icebp
fisttps
sbb
shl
adcb
ret
sti
imul
rcl
ljmp
cmc
xchg
cli
lea
xor
ror
xor
cmc
in
loope
faddl
mov
xchg
cld
leave
sub
imul
loop
sarb
fdiv
cmp
cmp
test
ret
cli
std
hlt
shlb
cmp
rcl
xor
xor
int3
jecxz,pt
fdiv
in
clc
loopne
jmp
cmp
jmp
jmp
sti
rcr
jmp
dec
shr
mov
std
xlat
clc
xlat
lret
sar
sub
jmp
stc
les
fdivr
fsubr
test
int3
addl
int3
jmp
ret
jmp
repnz
stc
cmp
out
icebp
clc
orb
out
int
nop
jecxz
in
int
ror
aam
clc
out
sar
sarb
repz
hlt
clc
cld
decb
loop
hlt
int3
ret
stc
out
jmp
fcom
roll
loopne
ret
or
jmp
clc
xor
sti
iret
icebp
int3
ds
fmul
rcl
cmp
fcomi
mov
mov
out
iret
out
test
loop
aas
lret
cmc
loop
fdivr
shr
stc
fincstp
int3
out
test
stc
in
out
sti
mov
loope
ror
xlat
enter
cli
clc
idivb
aad
fld
fadds
xchg
add
add
rol
aad
aad
fcmovne
scas
push
mov
cld
adc
js
pop
jl
lret
jl
test
int
shl
aam
stc
repnz
in
jmp
sar
adc
enter
fiaddl
call
xor
xor
rcr
call
cmp
cld
not
jmp
loopne,pt
mov
cmc
xor
out
leave
call
xor
out
lock
mov
or
jecxz
xchg
hlt
into
icebp
cli
jmp
ljmp
xchg
out
xlat
faddl
push
aad
das
lret
iret
cmp
cmp
in
aad
shl
aas
rcl
mov
ror
out
cld
out
in
lock
int
ret
xor
xor
xlat
ljmp
lds
fldz
addb
out
clc
cmp
rcl
fdivrp
icebp
cmc
in
iret
std
cld
fdivp
sti
les
in
mov
ret
xlat
ret
fsubp
addl
lret
test
or
jmp
loop
into
sarb
hlt
xor
aas
in
fdivrl
loope
idiv
ret
in
cld
clc
iret
repz
imull
sti
cmp
icebp
div
out
test
mov
in
lock
xchg
shll
in
aaa
icebp
iret
neg
sbb
out
aam
lds
test
jmp
int
jmp
cmp
ffreep
icebp
aam
test
ret
cmc
in
fmul
jmp
out
cld
call
ljmp
out
div
int3
aad
repz
stc
shl
sar
loopne
in
inc
jmp
jmp
imul
int
hlt
shr
xor
xlat
in
xchg
out
rclb
fcmovnbe
in
in
repz
and
xlat
int3
std
clc
fadds
into
ret
into
cmp
iret
cli
call
in
cmp
xchg
ficoml
decl
divb
div
and
fsubrp
shl
mov
mov
loop
int
xorb
into
int
xor
jmp
repnz
repnz
xchg
enter
xchg
xor
ljmp
cli
jmp
cmp
div
aad
loope
lret
sti
decl
jecxz
xchg
out
repnz
vshufps
rcl
not
aad
mul
loop
out
mov
sub
aaa
aad
leave
xlat
into
int
into
ret
lret
fucom
jecxz
filds
lret
sti
xchg
xchg
icebp
ljmp
fsubp
cmp
idiv
test
cmp
leave
out
xchg
jmp
xlat
xlat
ret
xlat
xor
call
fdiv
test
ds
lret
test
loop
shr
aad
div
test
shl
jmp
rcr
into
cli
hlt
xlat
loope
jmp
add
fadds
hlt
jmp
lret
call
fdivrl
cmc
sar
shl
ret
jmp
jmp
mov
loope
fcomi
ret
sti
imul
aad
loope
rol
aad
mov
cli
mov
filds
in
jecxz
divl
hlt
out
enter
in
fsubr
shl
cld
fldl
mov
mov
decl
neg
stc
in
hlt
cmp
cmc
lock
int
leave
out
fldl
xor
aad
sti
out
fdivr
cmp
cld
std
sarl
out
out
enter
enter
jmp
stc
fcmovne
aaa
cld
ror
ss
lock
jmp
in
enter
ds
shl
leave
xor
cmp
rcr
jecxz
testb
out
in
mov
rcl
neg
shll
aad
fcomp
loopne
out
clc
ret
ror
jmp
cmc
shr
cmp
shr
cmp
fmul
repz
fsub
add
fadd
vcvttpd2dq
out
std
lock
shr
xor
repz
in
fdiv
call
fxch
stc
sbb
stc
xchg
aas
repnz
lret
fadds
xchg
xlat
ds
movl
test
decl
hlt
xor
add
cmp
je
push
push
mov
mov
jmp
aad
xor
insb
out
scas
and
jl
add
fnop
int
fmul
xor
repz
sar
xlat
in
clc
mov
in
call
repz
into
incb
cmp
mov
mov
mov
ds
aam
lret
cmp
cmp
idivl
clc
sti
and
xabort
in
jecxz
lret
aam
out
out
xor
lock
int3
rcr
sti
cli
mul
fadd
mov
mov
icebp
repnz
icebp
enter
out
lret
jmp
clc
cmc
fnstcw
rol
or
mov
shl
test
ret
cmp
sar
xor
fprem
in
fucomip
rcr
out
sti
loope
jmp
orl
jmp
jmp
ljmp
loope
in
sar
out
cld
aas
int
in
mov
nop
loopne
sub
jmp
into
cli
cmp
cmp
adc
in
decl
lock
call
into
shl
out
rcl
in
cmp
fptan
cli
jmp
icebp
lock
into
shl
call
cmp
cmp
into
test
incb
xchg
repz
clc
stc
fdivr
cld
int
shl
fsub
ljmp
ret
xchg
repz
aaa
xor
icebp
cmp
aam
repnz
ds
loope
test
fildl
out
in
fldz
in
ljmp
sarl
lock
clc
jmp
imul
out
ljmp
jecxz
int3
rcl
lret
fdiv
in
in
fcmovu
ret
std
cmc
loop
mov
fdivr
in
out
leave
out
xor
xlat
clc
sar
cmp
loopne
fxch
out
sti
test
and
in
out
fcomi
call
rcl
sarb
cmp
ljmp
lock
mov
fcmove
fprem1
xor
repz
clc
cmp
test
fmul
xlat
mov
mov
cld
hlt
sub
fstp
out
shr
int
rol
fadd
repnz
xlat
not
int3
cld
ret
xchg
fucomip
stc
in
int
cmp
neg
ret
fcmovbe
ds
in
test
loopne
repnz
loopne
out
cmp
cmp
cmc
fdivr
lock
cli
mov
out
mov
mov
mov
xlat
into
ss
fld
clc
aaa
stc
aaa
cmp
fucom
stc
aam
cld
stc
fisttpl
lock
int3
shll
icebp
repnz
aam
aam
in
aas
fadd
mov
ret
shl
mov
in
shr
shl
xor
sti
int
cld
xor
xor
loope
clc
cmc
loope
fadds
into
cmc
xor
ret
lret
leave
int
cli
cld
aaa
fildl
inc
ret
in
incb
jmp
hlt
lock
icebp
ret
rcr
repnz
mul
sti
hlt
in
fsub
xchg
pause
sub
out
cmp
lock
aaa
out
cli
lock
cmp
ror
fxch
lea
xchg
mov
lret
aad
repnz
cli
or
out
stc
into
ret
jmp
out
test
iret
lock
fcomp
ljmp
aas
fscale
dec
test
rorb
sar
jecxz
xchg
loopne
aam
shl
out
enter
iret
test
fcomip
leave
sar
ljmp
out
and
repz
xor
cmc
test
aad
faddl
cld
lret
lret
hlt
out
fmul
lock
repnz
sar
loop
call
adc
or
xchg
aad
xor
out
aad
clc
loop
shl
enter
fcomp
in
fcoml
sar
ss
int
ljmp
call
in
call
call
int
ds
shr
shl
out
ror
cmp
cmp
icebp
repnz
out
testb
ror
div
ljmp
out
ret
cmp
repnz
xchg
add
add
jmp
ret
int
lret
sub
ret
inc
out
fs
lret
jl
ret
mov
test
fimull
rcr
out
xor
into
cli
aad
cmp
sar
hlt
sar
filds
xchg
into
sar
mul
ss
jmp
cld
cmc
shl
aam
sti
fchs
fdivrp
nop
lock
in
loop
in
repz
std
lock
aam
repz
stc
enter
in
out
xchg
fcmovnu
nop
sub
iret
enter
cmp
fdiv
push
fcomi
out
cli
stc
in
leave
fsubr
lea
cld
in
into
iret
icebp
aaa
in
cld
cmc
cmp
repz
addb
in
out
test
ljmp
cmp
out
cmc
sub
loopne
out
xchg
test
fisttpl
aam
int
jmp
shr
cmp
aam
loop
fmuls
test
cmp
std
leave
into
shll
cmp
sbb
inc
fcomp
in
fisttpll
in
leave
jmp
in
int
xor
aaa
cmp
cld
fistpll
filds
jmp
hlt
loopne
icebp
lret
into
lea
clc
rcl
in
lock
sarl
cmp
cmp
enter
in
lret
mov
out
ret
cmc
leave
lock
sarl
call
clc
hlt
fsubp
cli
shl
int
and
xchg
out
out
xlat
hlt
out
leave
cmc
aad
mul
stc
repz
loope
out
out
jmp
xchg
cld
mov
rcr
imul
aaa
aaa
cmp
into
out
loopne
loop
aad
in
in
fsubr
mov
aad
into
clc
out
cmp
into
fidivrs
cmp
cmp
mov
fld
mov
out
sub
ret
loop
in
jmp
ljmp
lock
lock
into
out
cld
cmc
shrb
lock
lret
loope
icebp
or
out
ret
mov
ret
hlt
xlat
test
fcmovne
test
sub
ljmp
in
fadd
out
clc
hlt
call
std
loop
addb
in
fdivr
fucomip
cld
cmp
ds
in
sbb
clc
mov
call
rcl
in
ss
xor
stc
cmp
icebp
rorl
enter
rolb
cmc
aaa
xor
rcl
idivl
rolb
and
cld
in
fldl2e
mov
pop
jecxz
in
int3
mov
clc
into
cmp
sub
jmp
clc
fmuls
rcl
int
ss
int3
icebp
hlt
fdiv
cmpl
sti
jecxz
loopne
sub
sbb
in
sti
mov
testb
aas
stc
cli
int3
xchg
loope
in
in
sti
ss
iret
aaa
in
aad
lret
rcr
xlat
jmp
lret
out
mov
cmc
out
lret
ljmp
lret
rol
iret
in
cmp
jmp
loope
iret
ret
loope
cmp
fyl2xp1
aas
out
cmp
test
aad
ret
loope
in
hlt
out
sti
fdiv
leave
int3
nop
lret
fnstcw
fnstenv
int
int
ss
int3
adc
dec
bnd
adcb
cmp
fcmovu
jmp
ss
sti
std
fldz
sti
clc
aam
lret
enter
jmp
int3
and
ror
xor
xor
repnz
sar
sti
aam
out
stc
jecxz
stc
loope
fcmove
fcmovnu
into
xchg
repnz
cmc
repz
jmp
fprem1
fidivrl
test
fcmovnb
icebp
incb
in
fprem
mov
cli
cmp
xor
aaa
enter
loopne
loop
stc
enter
jecxz
filds
int3
xor
jmp
lock
fst
into
xor
sarb
jecxz
fmull
loope
xchg
mov
loope
lret
fsubr
std
lock
cmp
hlt
sarl
out
fcmovu
jecxz
loop
fldl
repnz
aad
lret
in
cld
in
shl
cli
test
add
loope
orl
rorb
jmp
ds
int
int
int
mov
xor
xchg
dec
mov
add
loop,pt
xor
xor
enter
jecxz
cmc
and
clc
out
int3
in
orb
das
enter
aaa
fsubr
cmp
int3
shl
cld
loope
fsub
out
ror
out
repz
mul
xor
int3
xor
aas
fdivrs
aas
in
rcr
cmp
xchg
icebp
in
out
ror
ret
fldcw
clc
stc
jmp
in
rcr
aas
out
test
fcmovnb
lret
jecxz
int
ret
out
int3
sti
cmp
in
sti
int
int3
rcr
aas
aas
rolb
cld
clc
test
loopne
lret
ljmp
out
call
int
ds
loop
rcr
idiv
xchg
mov
in
int3
aad
sub
int
in
fsub
cmc
std
in
add
enter
fucomip
nop
out
test
in
out
ror
addl
out
xchg
xchg
lret
test
lret
cld
fsubrp
cmp
mul
xchg
or
out
in
jmp
in
aaa
ror
icebp
leave
rcr
cmp
out
jmp
test
enter
lea
ret
imul
cmp
cmp
aas
neg
aam
in
jmp
cld
std
loopne
iret
rorb
int3
repz
out
icebp
call
cld
clc
roll
jmp
shl
call
cmc
cld
ljmp
ror
jecxz
loop
in
ds
test
xchg
jmp
in
out
call
into
repnz
aad
std
test
out
cli
imul
loop
out
sti
xchg
icebp
in
jmp
cmc
fcomi
imul
int3
fdiv
fcomip
cmp
fcos
std
mov
repnz
cmp
ljmp
out
fadd
fstp
repnz
addb
enter
int3
stc
cld
clc
fdiv
cmp
icebp
cld
lock
leave
lret
jmp
loope
xchg
fsubrl
loope
lock
shr
fsubr
call
cmp
sti
test
clc
sti
roll
rcl
ds
fdivp
fsubrp
cli
ljmp
std
lret
mov
loop
test
xor
lret
iret
jmp
neg
adc
out
mul
inc
hlt
pop
ret
nop
mov
stc
jecxz
cli
iret
aam
cmp
addl
iret
cli
sti
xchg
in
out
mov
sarl
ljmp
repnz
adc
xchg
loopne
fcom
in
loop
test
in
rcl
mul
call
cli
ss
cmc
cmp
fsin
mov
ljmp
addl
sti
iret
loop
neg
clc
fcomip
stc
test
aas
cmc
clc
jmp
aam
xor
in
into
int3
jmp
ljmp
call
int
fmull
int3
ror
ror
cmp
sar
loopne
cmp
jmp
cld
enter
jmp
sub
loopne
lock
ds
fst
faddp
fsub
faddl
out
in
std
and
les
ret
xlat
cli
shr
call
fdiv
aam
dec
and
imul
jmp
ror
cs
jecxz
call
loope
cld
cmp
in
cmp
fdivrp
test
mov
xchg
cli
out
leave
cld
rcl
cmc
ret
sti
aad
test
lock
xlat
stc
mov
test
xor
ret
fcmove
hlt
jmp
fsubrp
cmp
ljmp
xlat
movb
xchg
jmp
out
lret
neg
cmp
out
sar
and
loope
mov
testl
fsubp
int3
fstpt
cmp
aas
cmp
cmp
rol
aas
jmp
lret
xor
mov
int
fadd
xor
fmul
stc
cmp
out
stc
xchg
cmp
div
orb
fcoml
out
icebp
lret
sar
fsubr
cmp
repz
xor
add
mov
jmp
rcl
ret
fst
xlat
inc
dec
push
lods
mov
outsl
jl
lret
jl
repnz
add
sbb
mov
jmp
in
xlat
ss
out
fstpt
std
fstp
cld
stc
mov
addl
in
leave
sar
fcom
fpatan
aad
stc
in
in
or
xchg
aam
ret
shl
hlt
cmp
xchg
leave
add
out
int3
mov
ret
shl
jmp
lret
cmp
loop
test
sti
fldlg2
out
ret
loopne
shr
icebp
enter
sti
fnop
hlt
addl
iret
mov
cld
lret
out
cli
ret
out
cmp
jmp
aad
or
cli
test
in
jmp
int
loope
out
shr
in
xor
fldl
fsubp
mov
in
in
in
fcmovnbe
loop
les
xlat
repnz
in
into
ljmp
xor
jmp
push
adcb
xor
cmp
cmpb
xlat
stc
ret
enter
clc
fcos
mov
iret
xor
cmc
fsubrs
in
cli
aad
fstpt
aas
aas
lds
jmp
orl
adc
hlt
fucomi
in
jmp
xor
test
std
mov
loop
iret
jmp
nop
xchg
fsub
not
out
cmc
sar
cmp
fdivl
int3
lret
repnz
orb
enter
fnstenv
shl
test
repz
mov
sub
xor
repnz
cmp
loopne
fld
shl
jecxz
loope
out
cmc
jmp
std
lock
roll
loopne
add
fmull
mov
roll
int3
xor
out
call
iret
in
sub
hlt
jmp
jmp
in
mov
iret
iret
fmulp
xor
xor
out
out
aas
aam
ljmp
ret
fucomip
jecxz
fsub
hlt
xchg
aaa
loope
call
shr
int3
icebp
cmc
fmul
incb
in
int3
mov
jmp
out
aam
into
in
std
push
cmc
cmp
cmp
std
fucomi
jmp
les
jecxz
int3
in
hlt
into
sub
cmp
ljmp
loop
ljmp
fcmovne
repz
aam
enter
stc
std
shll
cli
cmp
lret
cmc
sti
fucomip
out
mov
addl
into
loop
xlat
xor
int3
ror
clc
iret
loope
leave
stc
cli
addb
fsubp
loop
ljmp
aam
loope
xchg
fadd
fisttpll
pop
in
jecxz
out
int
xor
cmp
ret
test
into
add
mov
mov
test
sub
fdivrp
cmp
addl
int
repz
in
test
cli
hlt
lock
sbb
ds
ret
cld
fcmovb
rorl
call
leave
stc
int
fstpt
out
cmp
xor
shl
in
call
int
aad
xor
cmp
jmp
cmp
cmpb
in
rolb
cli
sbb
rcl
rcl
xor
aam
repz
clc
cmp
loop
int3
out
loop
xlat
repz
int
inc
fiaddl
jmp
icebp
rcl
aad
fdivrp
cmp
ffreep
cld
testl
fstp
xchg
cs
aam
int3
in
leave
cmp
cmp
fcmovnb
loopne
test
std
in
aas
decb
xchg
sub
out
xor
int
icebp
ret
icebp
repnz
fucomi
loopne
fisttps
rol
shll
stc
clc
push
fcmovnbe
rcr
fiaddl
fisttpll
xchg
nop
mov
xor
xor
ss
ljmp
sbb
aas
cmc
hlt
fdecstp
out
jmp
lret
mov
mov
jmp
aad
enter
fsts
test
lret
jl
fldl
cs
lock
sar
in
idivl
test
in
jmp
jmp
jmp
lret
cmp
ds
in
lds
mov
addb
out
xor
out
iret
cmp
rol
into
sar
test
shl
sbb
sub
xlat
test
repnz
lret
xor
out
clc
icebp
icebp
in
aad
enter
repnz
fdivr
out
mov
pushl
in
cld
fidivrl
out
repz
jmp
std
ror
in
xchg
loop
shrb
aam
cmp
sti
leave
cmc
cmp
jmp
loopne
decl
std
fiaddl
into
call
out
leave
cmp
in
repz
aas
loope
sarl
loope
leave
leave
clc
sbb
lock
mov
cs
iret
aaa
xlat
sarb
ds
out
jecxz
cmp
cmp
call
fadds
int
shl
hlt
repz
repz
out
ds
jmp
sub
int
mov
and
hlt
jmp
imul
fcmovbe
ljmp
fildl
clc
lock
int3
int
xor
lret
in
aam
hlt
in
aas
clc
into
sti
rol
xor
int
addl
loop
cmp
cmp
sti
cli
jmp
loop
in
out
or
loopne
int
in
cmp
aas
aam
fdiv
cli
std
mul
out
div
incb
fisttpll
leave
cld
out
ror
cmp
vpslld
lret
mov
mov
fcmovne
icebp
jmp
jecxz
rol
fcmove
jmp
xor
div
hlt
std
icebp
sbb
sub
clc
sti
in
std
test
div
rcl
int3
cmp
jmp
xor
std
xor
fadds
fmulp
fildl
loope
lret
jmp
enter
repz
fnstcw
clc
in
mul
in
mov
int
ret
lret
lret
out
xlat
int
ror
addb
test
test
repz
lock
loopne
fcmovne
repnz
cmp
not
xlat
clc
cmp
loop
hlt
lret
jmp
fcomip
in
sub
fincstp
enter
cmc
ds
int3
in
xor
repnz
sar
addb
jmp
xor
call
addl
cmp
call
xchg
out
ret
iret
loope
sti
xor
lret
testl
ret
addl
mov
in
adcb
xor
icebp
cld
aam
aas
repnz
testl
xchg
lret
lret
hlt
mov
leave
ret
out
xor
cmp
xlat
not
rcr
imul
test
out
lret
cld
in
cmc
xlat
rcr
out
jmp
rcl
std
cli
out
out
testl
in
out
cmc
mov
loopne
in
ret
aad
lret
hlt
aas
fidivrl
out
lock
mov
enter
and
inc
das
in
rcr
fcomp
jmp
fldl
loop
mov
ljmp
xor
hlt
aaa
clc
test
loop
xlat
adc
mul
sti
std
xchg
repz
rcl
jmp
xor
cmp
repz
fprem
call
cld
mov
sti
loop
fst
xchg
lret
ljmp
loope
testb
in
sti
mov
in
leave
cld
shl
lock
out
ret
hlt
hlt
into
cmp
iret
test
sar
test
xchg
jmp
ljmp
sar
fmul
fcmovbe
rcr
jmp
mov
out
loopne
mov
in
in
loop
std
lret
cli
sti
cld
icebp
shl
test
enter
lret
or
in
xchg
loop
loopne
ljmp
out
cld
sarl
aas
hlt
div
test
sti
cld
std
test
out
test
call
lret
jmp
cmp
data16
add
xlat
aas
fst
fcmovne
mov
imul
lret
jl
fcmovbe
std
sbb
cmp
out
jmp
out
iret
hlt
loop
in
jmp
icebp
int
out
xor
jmp
sbb
movl
out
ret
idiv
xor
repnz
in
test
rorl
xchg
xchg
xor
shl
out
ss
call
cmp
in
sti
icebp
fst
call
sti
xor
lret
call
fdivr
int
ret
call
lds
out
jmp
ljmp
fcmovne
iret
shr
shlb
cmp
xor
leave
int
mov
out
sub
jmp
clc
loopne
lock
sub
hlt
cld
test
fisttpll
cli
cld
fidivs
out
clc
aam
leave
int3
cs
aas
leave
cmc
ret
cmp
cld
repnz
in
cli
fdiv
xchg
jmp
lret
xor
cmc
xlat
fdivrs
cmp
out
fmulp
sti
cmp
loope
shl
std
clc
test
mov
icebp
xor
std
lret
enter
repnz
ret
fnstcw
ret
loope
lret
ret
test
in
xor
rcl
ss
cmp
aam
cmc
loopne
aaa
incl
cmc
mov
clc
jecxz
cli
orb
out
shl
aad
out
xlat
iret
test
xchg
std
fildl
int3
fisttpll
xor
aam
repz
ss
cmp
std
std
cmp
test
flds
std
out
adc
int3
aaa
in
ret
rcl
clc
into
in
ret
fildl
decl
jmp
mul
in
aaa
rcr
jmp
ss
lock
out
test
lock
fucomip
call
rcr
in
ljmp
aaa
stc
repnz
xchg
stc
in
mov
out
loope
test
sti
lret
cmp
ror
incl
ret
sub
aaa
enter
int3
lock
out
aam
out
iret
adc
clc
rcr
div
enter
nop
jmp
into
iret
aad
in
xor
xor
cmp
in
in
cmp
cmc
fucom
test
test
addl
ss
sar
in
clc
fmul
sbb
out
mov
std
loope
fisttps
int3
loopne
xor
jmp
lock
fcom
out
cli
jmp
lea
test
std
clc
jmp
aaa
int3
jecxz
in
adc
loope
incb
in
cmp
xchg
rol
sub
cmp
xor
jmp
adc
loope
loope
mul
mov
shl
mov
repnz
std
ror
in
sti
int3
shl
rcr
into
rcl
cmc
stc
fsub
std
call
enter
sub
fcmovne
roll
cmp
in
jmp
cli
mov
xor
cld
cmp
rolb
fsubr
xlat
and
leave
loopne
xchg
mov
rol
out
int
icebp
in
neg
aas
lret
repz
out
cmc
in
jmp
jmp
icebp
xor
cli
in
xor
cmp
in
jecxz
aam
repnz
int
in
hlt
aad
cmp
xor
int
in
cmc
jmp
loop
fdivp
shr
clc
clc
fiadds
repz
repz
rol
hlt
das
xor
idivb
shr
xlat
cmp
mov
ret
xchg
jecxz
cmc
int
xor
clc
cmp
fcmovu
aas
jmp
clc
sbb
loop
in
out
aad
in
repnz
out
leave
ss
aam
cld
out
icebp
testb
jmp
cli
into
jmp
rcl
xor
fnsave
fnstsw
cli
sbb
fadd
aad
ds
enter
in
icebp
in
ljmp
fcos
repnz
int3
aas
sti
out
testb
xchg
icebp
cmc
cmc
xor
xor
xlat
imul
clc
dec
icebp
repnz
add
cmp
jne
pop
pop
jmp
int
into
fcmove
fst
aam
lods
push
mov
jl
lret
jl
fimuls
lret
aad
xor
shl
cmp
clc
stc
xchg
jecxz
out
loop
loopne
mov
rcl
sub
lock
cld
aam
fdivr
in
std
aam
test
movl
out
sti
fsqrt
icebp
adc
fidivrl
out
ret
stc
jmp
loop
loop
faddp
loope
repnz
ror
jmp
fcom
fcmovnu
fcomi
icebp
stc
call
cli
test
iret
mov
fucom
call
jecxz
cmp
sarb
ds
sarb
xchg
leave
rcr
in
test
loope
out
lock
clc
into
aaa
shr
out
lret
iret
mul
call
stc
lea
xlat
hlt
jecxz
sar
cmp
cld
rcl
push
in
addl
lock
cld
out
out
das
loop
iret
lret
fsubrp
jmp
loopne
aad
adc
orl
in
mul
ljmp
xor
fucomi
out
add
fucomp
out
shr
out
cmc
das
fnstenv
enter
cmp
ds
fxch
xlat
test
fmuls
loope
rcl
rol
clc
xor
cmp
cs
aas
cmp
iret
call
fcmovb
lds
xor
fcom
cmc
jmp
xor
into
sti
sar
fchs
xlat
std
loope
sub
int
jmp
xor
in
in
repz
loop
std
shl
in
lret
std
lret
fsubrp
out
int
fmulp
cmc
cmp
in
jmp
repnz
in
ret
in
jecxz
into
mov
lock
cmc
div
out
enter
test
cmp
into
call
fisttps
icebp
std
xchg
leave
ror
sub
int
roll
lock
xchg
jmp
xchg
shl
icebp
aaa
fcmovne
ds
cmp
adc
roll
loope
repz
in
ljmp
cmp
rorl
add
xchg
cmc
int3
shl
out
aaa
sub
xor
cmp
loopne
out
ds
mul
test
fsubr
repz
in
in
sub
cmp
repz
sub
icebp
icebp
sti
test
ret
lret
lock
out
aaa
fsubrl
fcmovne
loope
int3
rcl
aad
rcl
cmp
mov
decl
aam
icebp
loop
in
xor
cmp
dec
aam
shr
sarl
rcl
cld
out
lock
call
in
out
jecxz
fmul
repz
xlat
ss
shl
lock
ret
test
ret
ret
jmp
ljmp
jecxz
cld
cmp
ror
int3
out
dec
cli
xchg
lret
enter
int
filds
xor
lret
in
in
in
ljmp
mov
aam
out
jmp
cli
lret
and
enter
fcmovb
cli
lock
repnz
repz
test
dec
loop
std
xlat
ljmp
call
xor
roll
shl
fdiv
sbb
cld
int
cmp
xchg
cmc
in
iret
xor
icebp
aaa
iret
into
rcr
into
fldl
rcr
lret
fld
lret
in
mov
mov
xor
das
xor
sar
cmp
fdivr
out
clc
fstpt
and
add
test
clc
out
xchg
in
jmp
xor
cld
xor
cmp
jecxz
xchg
rcr
xor
cmp
ror
sarb
fcomi
faddl
xlat
jecxz
mov
ljmp
lret
rcr
sti
cmp
lock
fcmovu
rcr
std
cld
jmp
jecxz
aad
das
ss
xor
fsubr
cmp
loop
out
add
mov
iret
ljmp
int3
shl
enter
xor
stc
ljmp
aas
test
loop
xchg
xor
mov
mov
xor
add
mov
mov
xor
add
mov
mov
jmp
sarl
rcr
ret
fucomp
icebp
push
lret
jl
in
xor
iret
clc
out
cmp
repnz
mov
idiv
icebp
mov
int
mov
imul
idivb
out
out
rcl
jecxz
aad
not
cli
enter
icebp
xor
int
xor
cmp
cmp
aas
fdivp
xchg
imul
out
out
in
xchg
lret
ror
stc
lret
fsubr
cmp
cmp
rcr
rolb
in
nop
mov
loopne
icebp
in
in
cmp
cld
fcomip
ret
repnz
in
in
clc
jecxz,pt
jmp
out
out
fcom
sub
lock
int3
icebp
cmp
roll
fadd
cli
int
fimuls
in
cli
xor
inc
cmp
aam
idivb
stc
fsub
clc
or
out
xchg
enter
in
out
enter
xlat
addl
cmp
int3
in
out
nop
test
shl
lret
stc
out
xor
fcomi
cmp
fcmovbe
std
into
aas
mov
test
jmp
ffreep
into
lock
int3
out
out
in
icebp
xlat
repz
aam
xlat
repnz
mov
mov
in
xchg
mov
ret
in
lock
adc
int
fcmovnu
sbb
cmp
enter
xchg
out
xor
cs
ljmp
fucomip
cmp
sar
fmull
in
jecxz
aad
jmp
fcmovu
cmc
cmp
std
stc
fldl
loop
and
mov
leave
mul
sar
cmp
sarb
loop
ret
loope
xchg
loopne
xchg
stc
iret
into
cmp
div
aad
loop
adc
shl
sar
mul
ljmp
xchg
out
sub
xor
xor
fcmovnu
jmp
roll
fldl
call
in
mov
xchg
aam
out
xor
fucomp
leave
cmp
idivl
idiv
cld
fdivr
lret
std
out
xchg
mov
fistpll
in
jecxz
jmp
cmp
aam
std
cmp
loope
orl
iret
out
ljmp
or
faddl
aam
test
out
fdivr
xchg
int
out
call
repnz
jecxz
clc
fstp
cmp
and
in
loope
and
call
cmp
fsubrp
call
out
fadd
test
cld
or
repnz
icebp
loopne
int
ss
cmp
cld
rol
out
rcr
test
in
addb
lock
call
jmp
test
sar
div
jmp
xchg
clc
clc
call
bnd
aaa
int
cli
inc
ret
fadd
loope
std
aam
int3
loop
sub
out
fsubrp
lds
cmc
into
in
cli
cld
out
push
cmp
mov
adc
fisttps
ret
xor
ss
xor
in
repz
in
mov
mov
lock
jmp
out
lret
repnz
aam
stc
cmp
loope
test
faddp
cli
enter
mov
das
int3
enter
stc
cmp
idiv
in
fld
mov
shl
xchg
ljmp
lret
shll
jecxz
out
repz
fsubrp
lock
fldz
aam
xchg
int
loope
loope
lret
int3
cmc
xor
xor
lret
leave
cmp
aas
out
test
inc
xchg
cld
jecxz
fdivrs
lret
adcb
xor
jmp
fucomp
xor
jmp
repz
cmp
loop
jecxz
iret
out
addb
fprem
cmc
ret
in
rcl
out
cmc
repnz
in
lock
repnz
sti
call
xchg
jmp
out
aaa
sti
fld
call
cli
cmp
aas
ret
test
out
decb
out
out
in
in
stc
jmp
std
not
repz
leave
in
in
mov
enter
enter
xor
fildl
loopne
mov
jmp
ror
ds
ret
or
cmpsl
mov
jl
add
lea
lret
in
out
xlat
in
ret
std
repnz
jmp
in
xor
in
mov
enter
lret
jmp
lret
clc
aad
loop
fcom
loope
not
xchg
out
loope
jecxz
ret
xor
xor
fdiv
fnstsw
fnstsw
repz
in
rol
add
in
fdiv
xchg
mov
shll
clc
rcl
cmc
sar
in
fstp
in
neg
in
std
nop
fildl
aam
jmp
fcmovb
xor
flds
mov
out
lea
lock
call
fcmovnb
xlat
leave
ljmp
jmp
dec
ss
call
fldlg2
int
rcl
shr
xchg
test
fstp
ljmp
out
cmc
out
aam
sti
clc
aad
ljmp
lock
in
cmp
repnz
cs
shlb
repz
std
cli
std
jecxz
cmc
jecxz
div
loopne
ljmp
hlt
hlt
ror
out
jmp
lret
fucom
ret
add
rorb
jmp
rcll
in
repz
leave
int
fcmovu
cmc
aam
mul
jecxz
xchg
out
lret
jmp
push
in
out
xor
jmp
icebp
clc
xor
cmp
ret
in
out
mov
in
leave
loopne
lock
aaa
int
in
out
fiadds
in
aam
xlat
roll
std
jmp
out
in
ss
div
fdivrp
cmp
jmp
in
icebp
movb
leave
ret
hlt
in
leave
sar
sub
icebp
sarl
clc
neg
in
out
lret
lret
xor
repnz
lock
ss
in
lock
in
repz
rol
in
fimuls
mov
or
clc
divl
ret
icebp
int3
cmp
cli
jmp
mov
ret
enter
xchg
sar
repz
vpmulhuw
fcmovu
icebp
icebp
hlt
in
loope
in
std
shl
rol
fiaddl
cld
ljmp
in
xlat
in
fst
lret
roll
shl
repnz
mov
loop
xchg
icebp
aaa
stc
icebp
xor
clc
mov
aam
cmp
repnz
lret
clc
sti
cld
repz
fsubr
aam
iret
out
xor
shlb
ss
shl
xlat
aam
mov
aad
rcr
aam
in
lock
in
lret
ljmp
aam
sub
loop
xchg
fcmovnbe
fstp
fiadds
mov
repnz
xor
sub
repnz
in
in
sti
repz
ret
sbb
in
enter
xchg
enter
jmp
in
idivb
std
std
aas
roll
xlat
loopne
fucomp
ret
rol
icebp
call
shl
xor
int3
jmp
xor
aad
fdecstp
aas
rol
mov
sar
xchg
fxch
lock
sub
in
cmp
call
shl
cmp
out
leave
idiv
int
xchg
in
ds
xor
in
icebp
ljmp
repz
sti
neg
in
in
jecxz
std
xchg
ret
cmc
aad
into
stc
fsubr
aam
lret
stc
in
sti
aas
sarl
fucomi
clc
and
faddl
aam
repnz
repz
ljmp
iret
cmc
out
hlt
inc
std
fcmove
ljmp
call
jmp
sbb
int
in
rorb
loopne
cld
int3
ljmp
cmp
repz
cmc
in
idiv
loop
in
lret
fmuls
lret
xor
repnz
aas
lret
xlat
faddl
mov
filds
loopne
xor
iret
cmp
jmp
in
cmp
sar
test
sti
in
call
in
f2xm1
cli
iret
cli
fucomp
neg
cmp
jecxz
ds
loop
sti
mov
out
xchg
mov
cmp
je
mov
mov
mov
jmp
lret
aam
fcomp
aad
andb
mov
jg
lret
jl
in
test
repz
aad
loop
cld
ror
sti
out
fsubr
sbb
adc
int
into
jmp
into
cli
aaa
cmp
iret
cmp
fincstp
testl
enter
in
xor
leave
cmp
rcr
int
stc
loope
in
jecxz
cmc
fcomi
aad
lret
ljmp
xor
enter
lock
aas
std
cmp
icebp
lds
mov
idiv
ficoml
in
jmp
xor
xor
cmp
lret
lock
ret
mov
loop
fadd
shl
ljmp
xor
repz
loopne
lret
fxch
mov
ss
fdiv
xor
rcl
loop
out
xchg
and
ljmp
xchg
lret
xor
cs
jmp
int
rcr
xchg
sbb
jmp
mov
lea
cmp
ss
rcl
cmp
fsubr
in
enter
sar
lret
stc
fdivrs
fnstsw
loopne
aam
aam
ret
fld
flds
mov
sbb
xor
xor
lock
cmp
out
repz
call
ds
nop
cmp
in
repz
not
call
out
cmp
aas
loope
lds
icebp
mov
xor
lock
fucomip
iret
loopne
hlt
adc
rolb
stc
orl
int
enter
lret
ror
cmpb
jecxz
xchg
imul
ret
in
xor
fadd
std
in
rol
clc
xlat
xlat
out
test
fptan
enter
int
int
out
xchg
xchg
icebp
cs
out
cmc
lock
enter
in
roll
fcmovnu
call
call
hlt
mov
loop
xor
aad
fst
int
fstp
hlt
in
clc
clc
std
loope
leave
hlt
out
test
and
repz
fcomi
lock
lret
std
std
mul
xchg
out
ljmp
repz
shr
fnstenv
iret
loope
clc
std
jecxz
jecxz
shl
xchg
icebp
lret
in
ror
jmp
out
cmp
neg
bnd
shll
repz
mov
ljmp
xlat
ds
lock
int3
fndisi(8087
std
xchg
ret
shl
jmp
nop
shl
sbb
loopne
cmp
int3
vpaddd
sub
in
clc
icebp
rol
std
sarb
loopne
rcl
shl
xchg
xchg
in
in
sar
xor
testb
int3
in
repz
out
ret
mov
sub
ret
rcr
into
shl
loope
test
xchg
fmul
xor
jecxz
int3
cmc
xlat
jmp
lock
aaa
idivl
stc
fcom
lret
jmp
orb
ljmp
cmp
cmp
in
ror
mov
in
enter
std
std
xchg
sub
repz
lock
into
xor
loope
repz
fildl
frndint
loop
sub
aaa
xor
cmp
cmp
cmpb
in
sti
leave
leave
in
cld
out
mov
mov
lock
divb
lock
test
jecxz
jecxz
jmp
out
in
lret
shl
ror
cmp
icebp
std
int3
aad
or
faddl
xchg
cld
addl
into
frndint
cmp
aad
cmp
repnz
mov
rorl
hlt
shl
ss
std
aaa
shr
fxch
cld
add
mov
enter
leave
icebp
ljmp
rcr
stc
out
aam
shl
roll
test
test
out
shl
out
cmpl
jecxz
call
push
xor
in
fiaddl
cld
imul
jmp
leave
out
out
int3
xor
xlat
iret
cs
sarb
cmp
add
data16
add
ret
ror
fstp
fcmovnb
in
mov
cmpsb
int3
sub
jg
lret
jl
fidivrs
push
ljmp
or
test
cmp
jmp
fnsave
aas
aam
rcl
aad
add
lea
call
ffree
cmp
ljmp
fadd
ret
loopne
mov
lret
clc
ret
out
lds
icebp
fucomi
fucomi
aaa
int
cmp
fcmovb
xor
loopne
in
clc
in
loope
lret
int
inc
in
in
fucomi
int3
cmp
in
ror
cmp
rol
cli
ds
repnz
in
cmp
sub
rcl
into
neg
fnsave
test
cmc
ds
aad
ljmp
call
xor
out
jecxz
stc
in
fidivrs
loopne
stc
xlat
test
adc
clc
std
idiv
or
in
int3
ljmp
leave
into
out
shl
in
xor
clc
sar
hlt
loope
fsubrp
enter
addb
into
fld1
neg
aaa
repnz
aaa
iret
fcomp
iret
repnz
xlat
jecxz
icebp
lret
rorl
cmp
out
imul
enter
sarl
sar
xchg
shl
in
lret
mov
aad
in
lret
xlat
ss
rcr
in
cmp
sti
fdivrl
cmp
in
lret
sti
fucomp
repz
rol
ret
repz
enter
adc
into
out
cmp
leave
loopne
and
fcmovnu
fimull
ret
shl
cmp
div
sti
or
cmc
iret
shr
aas
shl
in
xchg
std
mov
aam
shll
rcl
shlb
repnz
testl
xchg
xchg
mov
out
out
rcl
xor
cmp
rol
repz
jmp
loopne
loopne
nop
rol
xor
lret
in
xor
fucomip
icebp
stc
neg
int3
testl
iret
fucomip
lock
repz
xor
cmp
ljmp
fstpt
fdivp
loopne
xor
loope
mov
enter
in
xor
lock
xor
cmp
fucomi
iret
cmpl
fildl
int3
out
test
enter
sub
repz
rcl
fxch
loopne
rcl
aas
in
sbb
clc
and
aam
xor
lret
rcr
fneni(8087
xchg
fnsetpm(287
mov
int
iret
ljmp
ret
xor
out
neg
lret
test
out
aam
int3
mov
jmp
xchg
int
leave
hlt
mul
out
stc
int3
aam
repnz
jmp
out
repz
clc
aam
loop
ljmp
mov
rcl
fsub
out
cmp
fdivp
cmc
testl
fstp
loop
xchg
loop
out
ror
xor
aaa
ss
aad
repnz
hlt
sti
call
fucomip
jmp
icebp
inc
in
out
xor
fcomp
sti
jmp
test
out
test
iret
mov
sub
ror
aaa
into
icebp
lret
std
int3
cmp
loop
clc
cld
cmp
fsubr
lds
lock
into
ljmp
rol
hlt
xchg
cmc
loop
mov
ljmp
lret
repnz
out
out
in
xlat
ljmp
fcom
aad
fimuls
mov
out
cs
divl
sarl
aam
shr
aam
in
out
jmp
loope
addl
in
out
cmp
xor
ss
or
xchg
iret
icebp
nop
icebp
mov
out
cli
in
leave
jmp
div
test
fst
xchg
fucomip
std
sub
sub
ljmp
clc
ret
loopne
sbb
xlat
leave
stc
in
cli
xchg
into
test
in
xor
stc
int
clc
loope
xor
xor
int3
cmp
xchg
jmp
out
mov
xor
shr
cmp
loopne
fdivr
sti
aas
addl
jmp
shr
jmp
icebp
in
cld
std
hlt
cmp
loope
rcr
icebp
add
call
loopne
ffree
lea
test
add
mov
mov
movsbl
xor
jmp
rcl
rcr
int
add
dec
cli
adc
lret
jl
aad
leave
lret
repnz
enter
cmp
xlat
out
fucomi
lds
mov
out
test
xor
rcl
xlat
rcl
int3
icebp
xlat
lock
fidivrs
sar
xchg
mov
ljmp
ljmp
cmpl
rcl
add
mov
fsubr
test
imul
lock
out
int3
fdivrl
ret
cmp
xchg
repz
std
pop
fdivr
iret
jmp
shr
xor
std
fmul
cmp
int3
ret
xor
xor
mov
orb
iret
clc
lret
aam
xlat
rcl
fxch
jecxz
out
jecxz
xor
vphaddubq
int
shrl
sub
cmc
aas
cmp
fcomi
in
cld
xchg
stc
stc
xor
in
rol
shr
jecxz
fsubrp
shrb
clc
std
sti
fcmovnu
jmp
sti
loopne
clc
cmp
orb
int
inc
fbstp
aam
ret
xor
lret
aad
xlat
int3
in
shl
fcompp
stc
incb
fiadds
mov
lret
xor
cmp
lret
aam
in
sti
in
std
mov
decb
lock
fst
fucom
out
cmp
in
repnz
shr
mov
shr
xor
stc
fdivl
in
cmc
cmpl
in
out
loop
in
xlat
lret
cmp
loopne
test
ror
sti
std
rcl
lret
loopne
sarb
inc
aad
xlat
test
jecxz
sti
fildl
icebp
hlt
iret
f2xm1
lret
shl
aaa
aam
jecxz
out
cmc
cmp
stc
test
jmp
fcmovnu
out
fcomip
call
sub
cmp
ss
cmp
hlt
test
stc
xlat
filds
std
ror
lret
in
xlat
sar
int
cmp
jmp
flds
loopne
in
enter
in
cmp
std
out
loope
xor
xchg
cli
ret
mov
in
call
sarl
aaa
into
shl
push
aad
iret
ret
ds
ret
jmp
fcmovb
cld
xchg
test
in
in
fidivs
cmp
cmp
fmul
leave
call
in
fcom
fdiv
fcmovne
in
mov
hlt
out
in
into
into
xlat
repnz
jecxz
cmp
fmulp
fiadds
addl
neg
repz
xor
ljmp
cld
rcr
lret
sti
fcomp
mov
mov
loop
sti
shr
out
out
sti
jmp
stc
cld
xor
div
cmp
out
mov
ror
hlt
div
xlat
int
cmc
cli
call
hlt
loopne
and
in
std
loope
in
cmp
shr
xor
aad
test
xor
repnz
cmp
in
jmp
in
out
out
les
mov
lret
fdiv
in
roll
hlt
ret
loop
faddp
roll
in
aam
in
jmp
repz
incb
aad
dec
test
in
enter
in
in
hlt
cmp
sti
dec
lock
std
test
rolb
int
icebp
out
xchg
cld
mov
in
in
out
lret
cmp
idivl
out
cmc
out
call
jmp
ljmp
xlat
cmp
lret
fcom
ror
testb
shl
mov
mov
xchg
xchg
ljmp
int3
hlt
jmp
enter
in
out
aas
cmp
test
in
cli
loop
ljmp
rol
in
shl
sti
sti
lock
icebp
clc
rol
loopne
xlat
out
lret
lret
sbb
not
test
cs
cld
aad
repz
rorl
cld
mov
orl
out
int
cmp
aam
loop
roll
in
out
mov
jmp
ret
ret
rcl
ss
repnz
aam
test
xchg
fdivr
mov
lret
rcl
xor
add
cmp
je
movl
jmp
rcl
rcl
roll
jge
mov
lret
jl
repz
cmp
lret
vpxor
xchg
aam
ljmp
ror
lock
cmp
sti
clc
jmp
mov
mov
lock
repz
call
hlt
sti
mov
cld
out
jecxz
call
lret
imul
iret
jmp
leave
cmpl
decb
jecxz
jmp
loope
in
xchg
ret
repnz
lret
fcomi
in
cmc
loope
cmp
aad
iret
rolb
int
test
cli
icebp
aam
leave
ret
sti
sti
int
inc
cli
repz
ss
leave
aad
addb
fisttps
xlat
repnz
idiv
hlt
xlat
lret
out
mov
test
call
in
repz
fmull
xor
lock
fxam
fsub
cmc
clc
adc
test
cli
mov
out
mov
xor
loopne
xor
in
dec
fmul
addb
rcl
xchg
loopne
loopne
repz
jecxz
lds
aad
aad
ss
icebp
ljmp
ror
les
in
mov
xorb
shr
cmc
cli
hlt
dec
cmp
clc
cmp
fcmovnbe
test
aas
mov
cli
in
enter
int
shr
cli
fcmovb
aad
in
cmp
clc
into
cli
rcl
xor
aad
clc
out
stc
in
mov
ljmp
fdiv
cmp
hlt
sti
jmp
fbstp
in
testb
test
addb
ret
aad
aaa
jmp
into
out
aas
fcmovnbe
fsubr
iret
ljmp
aas
stc
lret
xor
aas
aad
cli
clc
fiaddl
cld
jmp
fisttps
fnclex
in
repnz
call
out
jecxz
xor
in
xchg
faddp
clc
fsub
xchg
xchg
loopne
iret
div
loope
stc
cli
lret
in
call
jecxz
mov
clc
icebp
enter
in
aas
cmp
fiadds
out
call
lret
aad
jecxz
xor
loop
in
out
cmc
rol
sbb
repz
ret
loopne
flds
lret
icebp
xchg
xlat
in
hlt
lock
lret
sar
out
int
in
addl
les
lea
int3
ror
out
icebp
ss
jecxz
aam
fildl
mov
rorb
shlb
in
repnz
aam
cmp
clc
loop
std
test
ljmp
shl
lret
xor
out
fld
int3
in
in
cld
fistpll
out
mov
ljmp
jmp
enter
cmp
call
iret
repz
xlat
cld
out
jmp
test
lds
repz
aam
iret
cld
fmulp
cmc
jecxz
in
sti
loop
lret
or
std
decb
iret
fxch
div
fdivrl
faddp
loop
faddp
jecxz
mov
lret
cli
lret
jmp
call
out
icebp
fidivs
in
shl
cmp
ffree
aam
xlat
out
enter
mov
stc
out
icebp
hlt
rcl
cmp
cmp
addb
xchg
ds
stc
in
rcl
into
fdivs
iret
cmpl
loope
sti
mov
sbb
into
int
aam
xor
aaa
cmp
clc
out
shl
aas
loope
fiaddl
out
icebp
xchg
cli
fsub
int
repnz
shr
xor
cmp
repnz
mov
idiv
jecxz
loope
loope
mov
test
xor
call
rcr
loopne
fcmovb
aam
lea
out
int3
out
into
lret
iret
repz
aaa
repz
aas
faddl
mov
sti
stc
loopne
enter
xor
loop
enter
fdivr
cld
enter
in
out
in
std
cmp
rorl
divl
jecxz
idiv
cmp
clc
aaa
int3
test
aam
aam
test
call
add
lret
ret
int
jle
ror
jp
push
sbb
lret
jl
cld
lret
xchg
lret
loopne
out
shll
sti
cmp
test
test
xchg
mov
in
xchg
out
call
call
icebp
hlt
fscale
div
mov
push
loopne
rorb
out
icebp
int3
cmp
call
sub
cmc
fsubr
hlt
ljmp
ljmp
stc
jmp
aad
aam
cld
aas
rcl
hlt
jecxz
cli
in
or
test
rcl
call
std
loope
int3
jecxz
xlat
clc
sar
cmc
cmp
cld
out
out
lret
fdiv
fnstenv
xor
lret
out
fstpt
fprem
ret
out
loop
loop
loop
jecxz
icebp
rol
ret
fld
lret
cmp
fsubr
cmc
xlat
jecxz
lock
ret
test
loopne
in
lret
cmp
ljmp
cli
fldl
test
leave
into
jecxz
into
in
loop
loope
aam
std
cs
shl
cld
test
fdivrl
leave
out
cli
decl
call
not
aas
fdiv
ds
iret
shl
out
mov
mov
mov
aad
call
ljmp
loop
xchg
in
fucomi
test
call
sub
xor
lret
cmp
aam
fdivr
lock
loopne
mov
filds
xor
mul
xlat
hlt
out
fcomp
int3
aam
shl
neg
fcmovnbe
rorb
out
mov
enter
call
lret
sarl
clc
lret
sti
out
lret
jmp
int
aam
jmp
cmp
out
jmp
fcomi
lret
int
cli
in
aam
int3
das
cmp
rcr
cmp
stc
shl
loope
loope
loope
repnz
mov
in
lds
xor
rcr
cmc
xlat
call
fldl
mov
out
int
loop
xchg
cmc
ljmp
jmp
aad
fdiv
lock
inc
stc
and
test
loopne
cli
jmp
out
int3
xlat
stc
aad
fsub
cmpl
fdivr
ret
rcr
xchg
int
out
leave
ror
mov
call
stc
hlt
xor
and
cli
sar
xchg
ljmp
shl
divb
fidivrl
hlt
cli
xlat
in
cmp
in
rol
clc
xlat
test
mov
loopne
xor
loopne
enter
fdivr
rcl
repz
repnz
cli
xor
mov
aam
loopne
xor
enter
repnz
test
stc
hlt
aad
lret
icebp
out
enter
iret
xor
in
shrl
int3
clc
ljmp
repnz
aad
hlt
in
mov
sbb
mov
jmp
sti
int3
clc
std
fprem1
ds
sarl
les
neg
xchg
decb
shr
mov
enter
not
fcmovnu
jmp
ret
shl
ret
clc
testb
fimull
das
icebp
clc
ret
lret
fisubrl
in
enter
ljmp
jecxz
loope
xlat
clc
or
int
sub
aam
xor
std
out
jmp
aas
fsubr
cmp
enter
mov
sub
loopne
cmp
iret
repz
cmp
fadds
stc
aad
mov
test
icebp
shll
jmp
hlt
shll
cli
aaa
divl
xlat
fcmovb
xlat
aas
jecxz
aas
fadds
lret
xchg
out
xlat
jmp
xlat
cmc
xor
jmp
ret
ret
xchg
mov
call
test
lea
int
xor
call
cli
sbb
sbb
in
neg
loope
repnz
sarl
repnz
lret
repnz
aas
ret
out
repnz
mov
sub
loope
ljmp
shlb
aam
inc
cld
int3
fsqrt
adc
cli
testb
in
loop
aam
shlb
in
int
out
inc
in
mov
addl
mov
jmp
rol
into
ret
rcl
aad
pop
repz
or
mov
jl
add
fildl
sarl
out
call
jmp
in
fidivs
icebp
jecxz
xor
aaa
out
fidivrs
aas
out
stc
stc
rol
sbb
iret
fucom
jmp
leave
xor
out
in
repnz
sar
icebp
ret
mov
std
ret
mov
aam
into
fdiv
ljmp
clc
int3
into
aad
repnz
iret
lock
repz
cmc
lret
fcomi
iret
aas
aad
cmp
cmp
ror
jecxz
loopne
sti
loope
int3
in
out
rcl
lock
rcl
out
cmp
sarl
sarb
test
shr
jmp
loop
aaa
xor
hlt
cmp
out
sub
loopne
test
loope
cli
ret
test
xor
cmc
jecxz
lock
into
jmp
in
cmc
dec
shl
repz
mov
adc
ljmp
clc
in
rcl
aam
incl
ret
xlat
int3
icebp
mov
mov
shrb
int
repnz
cmc
jecxz
out
repz
stc
fmull
out
xor
out
sub
xor
mov
cmp
cli
aam
repnz
in
shr
mov
xchg
xor
das
loopne
lret
std
clc
jmp
ret
fadd
aam
hlt
sti
fmul
out
loop
loop
mov
out
xlat
stc
ror
cmc
ds
rcr
aas
fcmove
fcomp
call
jmp
rol
cmp
fdiv
in
out
enter
loope
into
xor
icebp
ljmp
cmc
cmc
repz
hlt
cmp
fsub
lock
mov
hlt
test
inc
leave
jecxz
in
xor
clc
fnstenv
lret
fndisi(8087
rcl
sarl
loope
xchg
mov
xchg
int
jmp
cld
ss
filds
lret
loop
fldl
out
sarb
out
lock
in
clc
int
loop
ret
rcr
ds
flds
loope
aas
loope
out
jmp
xor
jecxz
hlt
aam
loopne
testb
fcmovnu
fcmovne
repz
add
aad
out
out
in
sarb
enter
mul
fcom
loope
ret
hlt
fucomi
or
mov
fisttps
cmp
call
in
aam
in
fisttps
dec
ficoml
in
iret
repz
shr
aas
divb
cmp
sti
ffree
cmc
test
out
xchg
mov
decl
cmp
xor
in
xlat
push
div
out
in
lock
xlat
mov
cmp
mov
mov
xchg
mov
aaa
in
into
cs
ror
int
aam
cmp
lock
clc
cmc
int
sti
in
enter
loopne
sub
iret
sub
out
aam
repnz
loopne
fdivrs
fldl
cli
sbb
repz
out
clc
ret
cmc
enter
stc
into
int
aam
test
loope
cli
mov
sub
xor
cli
aam
shl
not
shl
test
mov
xchg
mov
fstp
leave
shl
jmp
xor
icebp
cmp
ss
fcomip
out
roll
test
ror
xor
ljmp
iret
cmp
rcl
cli
in
xchg
rcl
ror
lret
in
iret
cmp
roll
jmp
decl
hlt
xchg
sub
fmul
lock
xor
stc
ds
ror
aaa
fdivrp
filds
int3
in
out
repz
in
imul
hlt
fcom
cli
aaa
cld
cmp
test
sbb
jmp
into
out
jmp
cld
fcmovu
xor
xor
clc
lret
or
xor
cmp
fnstsw
in
cld
loope
shl
ljmp
out
enter
in
stc
cs
rcl
in
faddl
movl
adc
inc
or
data16
add
int3
ret
ds
jge
jae
mov
and
lret
jl
leave
fmul
int
iret
addb
out
vpsubw
iret
fmul
ljmp
lock
test
cli
loope
xor
in
lret
lock
fcomi
std
iret
xchg
jmp
out
iret
mov
xchg
out
xor
sar
xor
out
jmp
hlt
icebp
aad
rolb
hlt
jmp
mov
out
nop
int3
nop
out
leave
repz
icebp
aam
cmp
cli
fxam
fadd
vcmpps
cmpb
fcmovne
int
fmul
in
loopne
xor
lock
xor
fcomp
in
out
cmc
repz
loop
cmc
cld
test
fsub
lock
rorb
xor
fxch
leave
fcmovu
icebp
sbb
flds
lret
cli
in
decl
ret
fld
lret
sti
cmp
icebp
fdiv
icebp
clc
jmp
out
loope
xchg
clc
mov
xchg
jmp
aam
enter
int
lock
lock
out
icebp
shl
hlt
and
hlt
out
jmp
xor
lret
xlat
shl
cs
lock
fmulp
stc
rcr
test
mov
mov
addb
into
clc
cmp
out
aas
fsubp
loopne
fcmovb
int
in
out
in
test
test
icebp
lock
leave
rcr
ds
hlt
jecxz
sar
out
orb
leave
not
aam
lock
iret
repz
shl
loop
addb
addb
loopne
cmp
xor
repnz
ss
inc
rol
rol
xchg
lds
xchg
cmc
hlt
neg
in
xor
enter
int
sar
xor
xchg
in
mov
loop
mov
xor
lret
jmp
repnz
cmp
cmpb
incl
out
addb
repz
shr
shll
repz
fnstsw
test
xchg
in
test
test
sti
cli
ret
loope
cs
int3
shlb
into
out
neg
sub
shl
hlt
cld
aas
lret
mov
fsubr
mov
das
shr
std
xor
lret
in
lock
mov
leave
test
mul
rcl
icebp
out
out
aas
int3
call
std
loope
les
jecxz
test
aam
xor
leave
mov
icebp
ljmp
loop
cld
test
or
in
xchg
sub
loop
in
cli
int3
leave
aaa
repz
repnz
not
mov
addl
mov
subb
hlt
lds
xor
out
icebp
lock
sar
cmp
cmc
lret
loopne
or
leave
int
rolb
out
cmp
ljmp
cmp
jmp
mov
ljmp
xor
out
jmp
cld
in
repnz
loopne
jmp
lret
ret
int3
cld
in
rcl
lock
fmul
lret
jmp
xor
rcl
sbb
fxch
stc
lret
clc
and
loop
in
in
shlb
out
push
out
xlat
aas
jmp
jmp
int
addl
iret
std
xor
lret
aam
cmp
test
test
fisttps
clc
ret
decb
in
xor
icebp
fcmovne
out
call
test
lock
ljmp
pop
fld
fcom
out
idivl
roll
cmp
aad
loopne
clc
clc
mov
fildl
ret
stc
fidivl
enter
stc
cmp
hlt
rcl
adc
cld
loopne
out
fsubrp
fcoml
xlat
sti
cmp
ljmp
roll
movl
in
ret
cmp
loop
lret
out
hlt
ds
neg
cmp
rorb
adcb
jmp
xor
lret
imul
sarb
ds
mul
test
mov
popl
cmp
fxch
sti
in
cmp
fcom
xor
leave
ror
aad
loopne
fndisi(8087
in
nop
repz
int
inc
or
aam
decl
add
add
rol
ds
fcmove
fisubrl
mov
add
jg
lret
jl
cmp
in
cmp
loopne
ljmp
loopne
and
shr
leave
xor
repnz
idivb
icebp
icebp
cld
iret
rcr
rcl
test
fcmovb
out
jecxz
mov
jmp
int
aad
out
jmp
aas
repnz
sbb
orb
xchg
std
nop
faddp
vshufpd
cmp
out
jmp
in
cmp
rol
lret
les
lret
fisttpl
out
lock
hlt
stc
clc
lret
sti
out
fdiv
cmp
cmc
faddp
sub
test
cli
mov
jecxz
repz
xor
xor
jmp
repz
fcmovnu
hlt
rcr
iret
aam
test
jecxz
fcmove
loope
ret
ret
int
neg
aas
ret
out
fdivrs
div
in
jmp
mov
rol
in
enter
int
sti
lret
fst
mul
in
hlt
xchg
mov
in
fcmovnu
repz
jmp
sti
fcom
jmp
addb
leave
loop
out
call
xor
aad
cld
xor
ror
aas
stc
xbegin
fsubr
fcmovnu
rorb
das
repnz
xor
in
fcomi
ss
ds
loope
mul
and
loop
cli
std
in
in
xor
cmp
loop
mul
cmc
stc
aad
sti
loope
sar
les
cld
out
mov
fsubr
shll
fmul
stc
in
cmp
std
out
in
fcmovnb
out
in
call
sub
loope
test
loope
ss
stc
call
fcmovnb
out
out
loope
mov
lret
in
out
sarb
cli
xlat
out
rcr
in
ret
sbb
jecxz
lret
xchg
loop
hlt
repz
out
rcl
adc
incb
lret
in
lret
in
in
mov
call
repnz
sbb
leave
loope
fxch
lret
and
int3
mov
out
cmp
lret
in
movb
int3
sub
repz
dec
cmc
repz
fcmovnbe
loopne
fildl
cld
loope
test
addl
aaa
cmc
fnsave
loopne
cmp
testl
in
out
xchg
repnz
stc
ljmp
cmp
ljmp
cmc
hlt
clc
stc
mov
out
fdiv
cmc
ljmp
cli
aas
lret
out
fnsave
cld
addb
out
test
mov
int3
shl
into
stc
cs
out
into
fcompp
rcl
out
not
mov
xchg
fucom
mov
lret
xor
repnz
fmul
ljmp
std
jecxz
int3
sti
int
xchg
xchg
cmc
int3
ds
lock
fsubr
sar
rol
shl
int
hlt
in
call
int
xlat
aas
repz
out
shl
ret
aad
fdivrp
in
xchg
sti
jmp
adc
xor
out
lock
fnstcw
sti
hlt
aad
jmp
mov
out
icebp
iret
mov
xor
xor
jmp
neg
lret
into
repz
cmp
mov
lock
xchg
rcl
rcl
movl
std
clc
in
loopne
test
out
imul
loope
icebp
out
enter
fidivrl
cmp
filds
shl
std
fdivrl
loop
jmp
jmp
lock
sarb
aam
sti
orb
mov
xor
ss
jmp
repz
shr
cmpb
loop
rcr
inc
out
out
iret
fucomi
ffree
lret
out
sti
cli
imul
cmc
aam
int
fsubp
fsin
loop
in
inc
lret
loopne
orb
shl
cmp
shr
fcom
sar
rcr
fucom
out
jecxz
sti
lret
cld
loopne
loopne
int
das
xor
xor
repz
xlat
ror
flds
jmp
sarl
lret
rcr
fsubr
push
push
mov
ror
sub
lret
jl
mov
rol
ret
sub
call
sub
ret
std
cld
fst
cmp
loope
add
sti
cmp
sti
mov
rcr
iret
out
ret
fcmove
in
rcr
hlt
cmp
not
cld
addl
loope
fsubrp
popl
aad
cmp
lret
fyl2x
lock
repz
mov
mov
fucomip
xchg
jmp
loop
repnz
out
into
divl
in
ds
xchg
rcr
rcr
out
mov
into
xlat
aam
out
sarb
cmp
in
jecxz
rcl
cmp
decl
orb
ret
lock
lret
cs
fdivp
iret
icebp
fxch
cld
ret
aad
addb
movl
xor
jmp
ds
testb
cld
orb
repz
in
clc
lock
cmp
fucom
testb
stc
hlt
enter
fsubr
iret
shl
xor
fcmovne
jmp
lret
xlat
int3
cmp
frndint
std
out
xchg
shl
int3
ljmp
in
repz
in
call
out
xchg
jmp
and
xlat
repnz
xor
cld
fidivrl
shl
clc
add
lret
and
cmc
lock
xor
out
out
jmp
std
int
icebp
fcomip
cmp
xchg
sti
std
enter
ret
rol
vmovq
cli
lret
sar
hlt
out
test
dec
stc
fimuls
aaa
aaa
xor
fcmovbe
int
cmp
shl
into
cmp
xor
fucom
jmp
int3
shl
out
cmc
loop
out
xor
in
xor
std
test
lock
mov
fcmove
jmp
xor
ljmp
int3
sti
aad
mul
inc
cld
lds
loope,pt
fimull
shl
loopne
stc
cmp
cmc
cmp
xlat
and
clc
in
xchg
fisttpll
fisttpll
hlt
test
rcr
aam
aas
fldl2t
ret
cld
mov
xchg
xchg
aad
call
fxch
shr
loope
fstp
filds
call
filds
in
sti
fprem1
in
rcl
call
out
ret
xchg
cli
nop
lret
les
in
cmc
into
lret
out
f2xm1
cmp
push
and
loop
in
xchg
out
icebp
ror
fldl2t
cmp
cmc
or
out
aas
idivl
lret
mov
out
cld
rol
xor
enter
cmp
xor
and
std
xchg
out
mov
loopne
xor
loop
repnz
in
ror
rcr
iret
sar
icebp
ffreep
out
test
xchg
lea
jmp
aam
ret
cld
cmp
out
aam
loop
icebp
fistpll
xlat
enter
stc
loopne
xchg
mov
aad
fadd
fmul
fdivrl
shll
test
fdivrs
aam
in
xor
out
repz
test
int3
cmp
repnz
cmc
mov
int
mov
sub
hlt
aam
xor
cs
cmp
hlt
ret
hlt
fucom
test
in
ljmp
ret
xor
ss
test
in
sti
leave
enter
sub
subb
lock
aaa
lret
out
fnstsw
ds
cmp
repnz
cld
cmc
ljmp
repnz
loope
call
call
roll
fcmovbe
movb
xchg
ljmp
iret
clc
jmp
in
cmc
aaa
vpsubw
out
jmp
in
dec
repz
or
stc
clc
iret
cmp
sarl
in
lds
jmp
ror
iret
jmp
fnsave
sbb
rcl
out
jmp
ret
aas
jmp
or
cmc
mov
jmp
fcmovnbe
int
loope
insl
lahf
gs
push
pushf
das
jg
lret
jl
ljmp
fdivs
iret
idiv
testl
mov
into
sti
nop
test
rcl
ret
fucomi
aad
aas
cli
int3
jmp
stc
cmp
add
ljmp
in
hlt
in
repz
xor
out
iret
rcr
clc
xlat
xchg
flds
in
icebp
jmp
aaa
vpmullw
cmc
cld
ret
out
rcl
sbb
cmp
cld
fiadds
xor
mov
xor
std
std
cli
test
fiadds
fcmovbe
xchg
enter
fsubrp
iret
fnstenv
ss
rcr
repz
stc
out
stc
sti
test
xlat
in
int3
nop
lret
call
jecxz
xor
into
xor
in
call
xchg
cmc
mov
int
out
rcr
xor
aaa
div
repnz
loopne
out
loop
iret
rcr
shl
loopne
jecxz
lea
shl
ss
out
sti
xlat
rol
aam
ds
xchg
xlat
leave
test
out
aad
aas
rcl
in
stc
ror
call
iret
aas
repz
orb
shr
out
rcr
lret
das
int
icebp
cmp
repz
call
loope
out
lds
out
into
jmp
ljmp
out
hlt
iret
ds
idiv
xchg
idiv
in
mov
mov
into
decl
int3
sub
sar
enter
hlt
fdivr
rolb
ljmp
hlt
ss
fidivrl
xor
sar
loope
test
loop
xlat
imul
in
out
call
repz
xor
sarb
in
call
ret
std
xchg
mov
int3
inc
sub
sarl
divl
repz
fcomp
fdivr
ret
ds
aam
std
fadds
jmp
xchg
ret
fsub
fstp
jmp
fstp
in
cld
loopne
fimuls
sti
call
jecxz
xor
jmp
stc
cmp
xlat
cmp
std
ljmp
das
shl
fmul
imul
fdivrl
cmc
shl
call
lret
xchg
loop
into
imul
not
jmp
xor
sarb
fucomi
out
clc
imul
rolb
mov
adc
enter
fsubrp
ret
ret
out
rcr
out
ffree
ret
sti
out
mov
mov
hlt
out
ror
aas
cmp
faddp
jmp
iret
test
stc
clc
clc
aam
out
fucomip
call
test
rcr
jmp
aas
lret
out
test
loope
jecxz
shl
int3
leave
aaa
ss
xlat
fstpt
sbb
repz
int3
in
mov
out
repnz
in
aam
int
jmp
cmp
xlat
loope
hlt
mov
test
lret
out
shl
shll
ss
std
iret
cmp
aad
sti
sti
repz
cld
ds
mov
std
add
decl
jmp
cmp
xlat
lock
sar
into
lock
rcr
decl
in
into
nop
cmc
sub
aad
xor
iret
stc
lret
shr
test
stc
aam
mov
lret
addl
sti
enter
ss
ret
repnz
fdivrl
mul
jmp
aam
sar
int3
shr
lret
aam
lret
loope
fadd
mov
xchg
xchg
rol
fadd
ret
int3
cmc
stc
std
adc
shl
cli
ret
xlat
fsubp
in
mov
aam
xor
sub
sti
into
enter
loopne
lea
mov
out
clc
repz
fdivr
cld
aad
hlt
loope
add
jmp
out
lock
icebp
xor
cmc
icebp
cmp
cmp
add
clc
jecxz
mov
out
loopne
xchg
fdivl
fisubrs
lret
enter
shl
cmp
jmp
iret
iret
sarb
aad
aad
pop
sbb
orb
lret
jl
out
cmp
std
fisttps
sbb
lret
call
aad
cld
iret
cmp
int
test
test
xchg
loope
aam
idiv
les
test
jmp
cld
fnstcw
lock
test
in
ljmp
fcomi
cli
xchg
out
lret
out
xor
xor
int3
not
clc
fcmovu
stc
xlat
hlt
out
rol
int3
icebp
jecxz
leave
in
aam
std
fadd
sar
jmp
iret
int3
lock
test
in
sar
cmp
fldl2t
cld
adcb
out
call
fdiv
fnstsw
aad
out
imul
mov
jmp
rorb
bnd
clc
icebp
aaa
cld
fchs
cli
iret
test
cld
ret
ret
mov
out
mov
mov
jmp
xlat
lds
iret
cmp
hlt
out
iret
cmp
fadd
sar
jmp
adc
mov
lea
leave
jmp
std
sar
cli
fdivr
cld
repz
ret
std
cmc
aad
cli
test
jecxz
lock
into
ret
out
aam
xlat
cmc
out
call
std
fcmovnbe
aas
loopne
inc
xchg
enter
jmp
lret
jecxz
in
jmp
cs
iret
xor
fldl
int
fadds
xchg
xor
loope
aaa
icebp
cli
lret
cmp
repnz
std
fcmovu
jmp
shl
jmp
shl
int3
sub
fldlg2
ss
fucomi
std
std
fucomi
mov
std
out
mov
test
jmp
jmp
shr
cmc
aaa
shl
mov
fxtract
hlt
sbb
out
fstp
mov
out
xor
xor
fcompp
sti
cmp
fistpll
jmp
out
adcl
xor
stc
testl
hlt
fdivr
decl
loop
xchg
test
ret
into
sub
int
icebp
cmp
fcmovu
rol
jecxz
std
sbb
mov
out
addb
icebp
call
jecxz
cmp
sbb
stc
mov
in
cmc
lret
ret
repz
hlt
fcom
cmp
in
out
bnd
sar
sti
cmc
cmc
jecxz
ljmp
in
aaa
in
cmp
call
in
testb
aam
lret
xchg
loop
shl
std
shlb
aad
stc
cmp
ljmp
icebp
sarb
lock
call
fildl
xor
into
iret
xor
sti
out
cmc
out
rcr
loopne
repz
sbb
enter
lea
lret
imul
clc
cmp
in
leave
sar
aad
int3
shl
push
lock
sti
out
mov
loopne
hlt
fsubp
lret
out
f2xm1
hlt
aam
push
repnz
repnz
jmp
fimull
fcmove
in
not
loop
in
in
stc
ffreep
shl
aad
cmp
xchg
rolb
clc
leave
enter
ljmp
aad
sbb
ds
rcl
xlat
loope
out
out
fcomp
out
xchg
cld
xchg
shl
sub
jmp
cmp
hlt
sbb
loop
ret
testb
lret
test
rclb
jecxz
iret
int3
xor
fnstsw
shr
sar
in
int
fdivr
fiaddl
xor
cli
out
ljmp
cld
fadd
les
lret
fucomi
xchg
in
cmp
iret
lock
ds
cld
loop
lds
aam
ljmp
into
aam
out
in
lret
call
cmp
cld
xlat
clc
lock
test
loope
mov
in
sbb
icebp
ror
in
hlt
out
cli
call
fdiv
cmc
ret
cmp
call
test
ret
std
call
xor
aam
not
fdiv
stc
xor
add
faddl
aas
jmp
test
mov
fmulp
ffreep
enter
jmp
lret
std
shr
fucom
aad
call
int3
in
int3
test
jecxz
call
out
fdivr
shl
stc
flds
testb
mov
pop
leave
ret
push
mov
jmp
rol
rol
fstp
dec
lahf
push
dec
jecxz,pt
adc
ss
add
cli
xchg
xchg
lock
in
clc
cmp
aad
shr
cmp
ror
ret
out
clc
std
enter
in
repnz
lret
test
aaa
jmp
test
in
fsub
rol
lret
ljmp
xchg
nop
loopne
xor
out
iret
xlat
lret
ljmp
sti
sbb
mov
popl
shl
iret
lret
fst
clc
sar
inc
addl
loopne
stc
loop
lock
rcl
lock
in
int
in
cmc
cmp
roll
xchg
into
int3
mov
cmc
leave
shl
aas
cmp
jmp
rolb
hlt
jecxz
jmp
out
xor
int
out
lock
clc
rcr
aas
loopne
ffreep
dec
repz
test
out
mov
enter
ret
ds
icebp
sar
repz
enter
icebp
test
out
call
cld
mov
mov
sub
in
repnz
fucomi
ret
out
into
fdiv
xchg
fcmovnbe
hlt
addb
repnz
aaa
shlb
in
iret
call
fdiv
into
jecxz
icebp
test
repz
std
xlat
mov
orl
lret
hlt
aaa
icebp
xor
std
cmp
repz
jmp
aas
hlt
jecxz
mov
loop
jmp
enter
in
rcr
loopne
jmp
jmp
cld
icebp
mov
repz
divl
iret
xor
std
fcmove
addb
ds
fiadds
cli
lock
jmp
jmp
hlt
stc
rol
in
addl
lea
jmp
into
sub
stc
xlat
in
idiv
shl
ds
sti
aas
aad
cli
jmp
std
lret
jmp
out
in
xorb
std
cmp
xor
fildl
mov
int3
clc
in
mov
int
clc
int
iret
div
out
shl
jecxz
xlat
fdiv
xchg
std
fsubr
out
into
or
mov
ljmp
cli
cs
addl
lret
fiadds
in
out
icebp
xor
lret
hlt
fcmovnu
aam
cmp
cld
cmp
mov
out
roll
xabort
cmp
jmp
in
jecxz
stc
adc
clc
ret
call
xchg
xlat
aaa
xor
cli
sub
out
hlt
fcom
fnstsw
loopne
fcomi
fst
xchg
ret
in
in
mov
mov
ds
jecxz
cli
xor
flds
adc
aad
enter
addl
stc
int
aas
cmp
out
xlat
aas
fsubrp
xor
in
int3
int3
ror
rol
jmp
jecxz
int
call
fiadds
loop
ljmp
mov
xor
not
rcr
cmp
lret
enter
loope
loop
lock
movl
rcl
aam
xor
jmp
ss
xorl
cmp
shl
clc
and
shl
mov
push
jmp
into
fnsetpm(287
repz
jmp
int
std
repnz
fiaddl
mov
ljmp
iret
in
ljmp
cli
xlat
rcl
loop
lret
mov
iret
sub
cmc
not
out
xor
call
roll
testb
enter
call
int3
xor
fcmove
cmp
fadd
in
out
icebp
clc
xchg
aam
aam
mov
lret
jmp
xchg
mov
lret
repz
shl
in
std
ds
shr
cmp
std
stc
in
jmp
out
out
not
clc
shr
out
xlat
std
fcom
fdivr
icebp
aam
test
fcmovnbe
xchg
imul
fcoms
das
aaa
in
lret
lret
into
in
loopne
into
in
shl
and
clc
ret
or
fmul
std
std
in
xorl
hlt
jmp
cmp
out
repnz
loope
out
in
test
aas
loop
orb
cmp
lret
cmp
lock
iret
iret
clc
repnz
mov
cmp
cli
int3
shl
in
in
hlt
lds
loop
std
sti
stc
imul
out
cmp
sti
adc
ret
ljmp
int3
mov
xchg
or
leave
hlt
out
aad
clc
fptan
fst
cld
fnstcw
aas
cli
fcmovnbe
std
fsubr
in
fmul
out
int3
nop
xchg
std
jmp
cld
jmp
cmp
fdivp
loopne
in
out
int
call
out
shrb
aam
enter
into
leave
sti
hlt
fcomp
cmp
rcl
testl
orb
adc
push
movl
jmp
into
rol
aad
rcl
jmp
imul
jg
add
cli
aam
dec
rcl
not
out
cmp
xchg
in
adcl
jmp
jmp
ror
shr
mov
xchg
jmp
shll
das
hlt
sub
fcmovne
out
in
in
neg
xlat
jecxz
aas
std
clc
rolb
iret
or
lock
fisubrs
stc
xor
cli
int3
xor
shl
cld
cli
cmp
aam
clc
stc
aad
cmc
mov
jecxz
mov
enter
ljmp
shl
sti
rcr
lret
cmc
icebp
rol
xchg
leave
cli
jmp
loop
out
loopne
lock
xlat
in
aaa
cmp
cmp
shr
call
sti
lock
std
lret
fimuls
repz
cmc
iret
shr
shl
repz
cld
out
clc
cmc
fmulp
call
fcmovbe
cmc
out
in
imull
hlt
clc
cmp
sarl
xchg
out
decl
int3
loop
jmp
loope
iret
int3
cli
repnz
rcl
ret
fildl
ljmp
xor
aam
in
lock
fadds
iret
into
test
jmp
out
ret
out
cmp
xor
into
aam
addl
out
fcmovb
out
mov
shll
fmul
lock
flds
xchg
leave
jecxz
fidivrl
std
fxch
std
int3
into
loope
in
out
ret
out
cmp
ss
into
lds
std
movb
rolb
repz
lret
call
cmp
out
loopne
xlat
jmp
iret
decl
xor
ret
test
cmp
rol
loope
cld
ret
jmp
sti
orb
test
hlt
cmp
cli
sbb
fstp
test
ds
cmp
loope
jmp
shrb
xlat
lret
jmp
cmp
into
rcl
cmp
ror
ret
std
jecxz
clc
in
and
aam
sub
int
cmp
not
into
jecxz
clc
stc
ret
loope
testb
mov
xchg
fmul
out
xor
out
icebp
xor
jmp
rcr
cmp
out
repnz
fcmovnbe
out
in
sub
jmp
sub
in
out
shl
add
cld
fst
shl
lret
out
xchg
in
das
out
enter
int3
leave
int3
repz
ror
add
rcr
jmp
mov
fcomp
mov
sar
mov
stc
ret
xor
cli
divl
int
cli
ds
fcmovnbe
stc
sub
lret
loop
loope
xor
fstpt
neg
sti
xlat
repz
repz
xchg
mov
enter
icebp
test
loop
cld
cmp
loop,pt
icebp
loop
ds
mov
cli
sar
call
xor
out
cs
lret
aam
in
ds
std
int3
out
fdivrp
mov
lock
rcl
lret
int
aam
jmp
cmp
repz
std
sarb
in
int
mov
hlt
lret
out
cmc
repz
cmp
sti
std
sub
mov
enter
out
xchg
mov
xchg
xchg
fbstp
repz
xlat
aam
cmc
rcl
rcr
repz
sub
int
out
int
enter
in
xor
aad
out
enter
aam
cld
push
loope
cmp
int
xchg
neg
hlt
lret
hlt
in
hlt
aaa
in
xor
std
aad
in
in
in
test
repz
lock
in
ss
fcmovnu
idivl
hlt
cmp
ret
fsubr
sti
out
in
mov
in
loopne
fmul
xor
iret
fsqrt
lock
jmp
loope
lea
xchg
iret
rcl
enter
call
xor
repnz
loope
aad
div
mov
lret
test
jecxz
sti
xor
call
leave
in
sar
out
mov
ret
mov
mov
xor
rcr
int
xlat
stc
aaa
loope
jecxz
les
shl
jecxz
call
mov
jmp
repnz
icebp
in
stc
in
ljmp
aad
into
in
jmp
movl
xor
lock
repz
loop
clc
xchg
decl
icebp
in
xor
aam
cmp
loopne
in
shl
ljmp
mov
cs
hlt
jmp
cmp
cmp
stc
cmp
jecxz
test
jmp
out
out
sub
xor
jecxz
out
lret
enter
test
or
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
push
push
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
jmp
sbb
jmp
rol
enter
aad
add
xchg
push
jns
mov
add
hlt
aam
cmp
cmp
std
mov
iret
xor
mov
not
cmp
std
cmp
aam
cli
ret
jecxz
loopne
lret
addb
cli
hlt
in
neg
enter
aaa
out
hlt
clc
aam
cmp
shr
ret
mov
out
cmc
xchg
sarl
not
icebp
xor
std
sti
fnstcw
ret
lds
int
mov
repz
sub
cmc
jmp
aam
in
repz
test
incb
xchg
sub
sub
cli
int3
aaa
clc
fsubr
into
lock
shl
stc
aas
roll
cmp
call
sti
repnz
std
std
int
aas
cmp
ret
rcr
and
leave
ror
mov
call
fcomi
enter
lock
sti
cmp
sar
xchg
aad
call
call
leave
xor
call
ljmp
loopne
fcmove
leave
mov
xchg
out
into
shr
das
not
iret
iret
call
aam
loop
xor
fsubp
cmc
repz
out
cli
nop
mov
loopne
xor
rcl
xor
cmp
std
ret
sub
ret
mov
icebp
popl
loop
hlt
sub
imul
cmp
repz
lock
repz
ret
faddl
out
into
aam
loope
icebp
sti
std
repz
rcr
xor
cmp
clc
ret
enter
mov
out
leave
xor
neg
fdivp
cld
sbb
int
out
in
rolb
rol
ror
out
xor
jecxz
out
hlt
rolb
incl
shl
xor
lret
jmp
cmp
mov
fmull
loope
ljmp
jmp
cs
fxch
adc
out
lock
leave
cli
stc
test
lea
incb
cmc
xor
cld
in
sub
loope
or
decl
out
loopne
das
jmp
cmc
in
cld
enter
sti
aam
test
out
aam
in
fsub
loope
addb
das
sarl
loope
cld
jecxz
aad
xchg
les
addb
leave
into
repnz
in
call
enter
lret
out
mov
cld
test
jecxz
in
cld
out
mov
fsubr
call
cmc
lret
cli
fdivrs
sar
jecxz
flds
xchg
loop
fcmovnu
out
into
mov
shr
leave
cmc
iret
repz
cmp
fmulp
jecxz
xor
cmp
leave
out
int3
lock
call
cmc
icebp
repz
sti
cmp
repz
fucom
loopne
cmc
jmp
ret
jmp
fsubr
shl
cs
xor
xor
repnz
fsub
ret
out
idiv
loop
std
stc
in
rcr
fisttps
xor
cmp
cmp
xor
jecxz
repz
loop
rol
filds
call
lret
shr
test
lock
out
imul
rcl
loope
jecxz
lds
mov
imul
fdivr
adcl
xlat
cmp
out
xor
int
filds
cmc
addb
mov
repz
aam
lock
loop
cmpl
testl
orb
leave
aam
clc
sti
in
fscale
ror
fcmovb
aam
jecxz
int
sti
in
test
out
cmc
aaa
repnz
cs
into
lock
out
stc
test
shl
lds
dec
or
lock
enter
out
lret
cmp
out
cmp
fdivrl
out
out
add
out
jmp
xor
enter
cmp
aas
ds
fimull
stc
into
ljmp
xor
fidivrl
out
xor
loopne
in
loope
rcl
cmp
fdivrp
xchg
fucomp
sbb
test
fst
out
lret
ret
fcomp
faddl
and
cs
cmp
fcomi
rcl
jecxz
mov
vpcomuw
sub
out
xor
std
loope
xor
cld
mov
in
mov
loop
mov
icebp
xor
cmp
cmp
in
ds
ljmp
out
clc
in
lret
loop
lock
icebp
in
cmp
iret
ljmp
not
aad
sbb
icebp
icebp
xchg
out
icebp
xlat
in
out
loopne
std
in
mov
movzbl
and
mov
mov
adc
xor
or
jmp
int3
ror
fnop
xchg
sti
add
les
add
hlt
sti
xchg
mov
fdivr
in
clc
ror
into
stc
lret
loope
jecxz
cmp
hlt
xchg
shl
aam
enter
fcomip
sar
hlt
shl
cmp
enter
mov
int
ljmp
in
fxch
xor
fcomip
aam
int3
rol
lock
ljmp
jmp
shll
ror
fsub
test
fcmovnb
fsubrp
xlat
lret
sbb
jmp
lock
out
int
out
fdivr
cmp
hlt
in
clc
call
in
jecxz
pause
int
aam
lret
iret
idivl
into
xor
std
in
enter
std
jecxz
test
mov
fidivs
fsubp
jecxz
xor
hlt
aad
cmp
fsincos
cmc
cmc
adc
mov
mov
out
int3
std
call
cli
call
adc
neg
cmpl
call
lea
hlt
iret
call
shl
lock
loop
out
loop
icebp
stc
in
mov
test
loop
xor
into
shlb
test
cmp
add
fcmovu
clc
aam
fcmovnu
icebp
mov
lret
out
iret
repnz
not
cmc
call
clc
fucomp
loop
hlt
clc
neg
loope
call
fiaddl
rol
ret
rolb
sar
call
ret
xlat
fstp
fiadds
aad
xor
div
int
fxtract
lock
in
sarl
out
out
cli
loopne
out
in
clc
orb
loope
int3
clc
out
cld
aaa
enter
rcr
cmc
neg
sti
xor
jmp
out
lock
shl
iret
loop
out
out
fbstp
test
test
aam
orb
out
lock
out
rcl
jmp
cld
cmp
into
rcr
test
rol
enter
loopne
shl
ret
int3
jmp
xor
cli
repnz
iret
movl
mov
xchg
xor
iret
in
std
shl
fucom
ret
ds
jmp
cli
ljmp
hlt
test
rcl
lret
xlat
out
cmp
lock
out
repnz
in
clc
jecxz
out
fmul
cli
mov
into
leave
cmp
idiv
ljmp
jecxz
out
loope
dec
lea
lret
aad
ljmp
int3
loope
faddl
fisttps
mov
jmp
rcl
shl
int3
into
repnz
sti
iret
int3
rcl
lock
fdivrp
ret
jmp
ret
cmc
xchg
ret
sti
xor
clc
idiv
fiadds
frndint
icebp
test
xchg
test
adc
xchg
leave
out
loope
iret
jmp
div
sti
rcr
and
ret
in
int
enter
mov
leave
cmp
cmp
fsubr
repz
lock
cli
cld
out
ret
xchg
in
icebp
fldcw
in
enter
cmc
cmc
fidivl
xor
fildl
out
xchg
rclb
loopne
xor
rol
divl
sbb
rolb
loopne
in
repnz
jmp
divb
lret
cmp
out
stc
std
cmp
icebp
and
shr
iret
fsubrp
test
ljmp
aad
jmp
std
sti
lock
addb
shl
cli
enter
out
lock
fsubr
leave
aaa
fst
shl
loopne
ret
ljmp
test
cli
sub
out
loopne
cmp
fxch
fnstsw
ds
lock
fcos
fdivr
cmc
sub
call
aad
xor
fdivs
cmc
out
neg
ror
ret
addb
hlt
filds
nop
xchg
aad
lret
fdivs
fucomip
fistpll
icebp
ds
repnz
jmp
call
int
xchg
sub
in
repz
out
cmp
icebp
cmp
aam
inc
xchg
idiv
hlt
out
out
xchg
mov
int3
xlat
loopne
lock
in
fdiv
fcomp
test
in
shr
testl
xchg
test
clc
aam
hlt
lret
cmc
test
icebp
enter
loop
loop
fucomi
in
nop
fmulp
xlat
repz
in
cmp
ret
in
loopne
jmp
ljmp
fucom
out
in
int3
cmp
enter
loope
fiaddl
roll
sbb
jmp
lock
mul
loopne,pn
int3
cmc
cmp
dec
test
add
fadds
add
add
ror
fcmovu
fcmovne
sbb
aas
cs
lret
jg
add
mov
iret
out
jmp
repz
xor
test
shl
into
jmp
lret
call
out
cmc
xor
ss
filds
ljmp
lret
in
in
das
cmc
lret
hlt
shll
lret
cli
jmp
sti
cmp
in
in
loopne
mov
in
out
vprotb
cmp
xor
dec
test
lret
rol
xchg
fiaddl
ljmp
sub
stc
fucomp
leave
lock
int3
cld
in
addb
sti
sti
mov
leave
xchg
jmp
lds
cmp
ss
std
faddl
aam
test
sub
fcmovne
xchg
std
not
xor
sti
in
aaa
int
out
iret
sbb
loop
fldl
jmp
fcom
in
in
nop
orl
icebp
out
sarb
xor
clc
cld
stc
in
fcomi
dec
in
out
mov
iret
hlt
repz
stc
cs
xor
xor
cmp
icebp
out
ret
shl
and
out
jecxz
xchg
icebp
cmc
int3
out
icebp
leave
test
cli
enter
loop
cld
cmp
std
cli
test
mov
mov
int
mov
mov
xor
lock
int
fucomp
std
cli
hlt
fsub
std
aam
cli
loopne
mov
into
icebp
fsubp
xchg
das
shl
sar
lret
xor
repnz
std
sti
cmp
inc
fisttpll
jmp
sub
icebp
call
iret
xor
in
cmp
neg
fucomp
jecxz
fucomi
hlt
in
jmp
mov
in
aam
cli
ss
call
sar
rcr
out
idiv
mov
sar
fsubp
in
adc
aad
shr
idiv
shl
test
and
ret
sub
enter
jecxz
aad
loop
out
stc
icebp
ss
aad
clc
xor
ret
out
mov
fmul
and
xor
std
cmp
cld
out
repnz
sti
cmp
and
jmp
mov
repz
sar
in
jmp
iret
rcl
icebp
rcl
ret
in
out
out
cld
in
rcl
das
cmc
cmc
in
stc
out
repz
test
repnz
sar
xchg
cli
and
call
xor
aam
cmc
cli
aaa
incb
xlat
ret
mov
movb
xchg
shl
aad
shlb
shl
xor
xor
leave
cmp
cld
mul
div
cmp
call
xor
ds
repz
fldl
rcl
cmpl
enter
std
lock
in
lret
cmp
in
les
ss
idiv
sti
xlat
in
ds
test
les
clc
lret
std
sar
ss
loop
repz
idivl
fstpt
cmp
adc
in
in
incl
test
sti
fcmovne
cmp
cmp
cld
ret
test
mov
in
lret
loopne
fucomip
icebp
cld
out
loope
into
stc
ret
cmp
cmpl
rcr
hlt
jmp
hlt
testl
fnstenv
xor
cmp
xor
fdivrp
stc
cmp
addl
xchg
loopne
loopne
mov
mul
das
ror
lret
sarl
fabs
int3
fiadds
jmp
lret
int3
lock
int
lock
ss
xlat
fnstsw
sti
out
loop
ret
jecxz
loop
or
roll
imull
out
sarl
ret
aam
lds
jmp
test
xorl
repnz
cmp
out
cmp
hlt
in
sarl
loope
loope
cmc
fmul
leave
xchg
call
aad
shlb
cmp
xor
cmp
call
fucom
fmuls
loop
repz
xor
sti
sti
aad
loope
lock
ljmp
shl
in
icebp
push
in
leave
idivl
hlt
test
rcl
lock
lds
mov
into
adc
in
in
out
jmp
jmp
in
ret
mul
call
call
iret
int3
roll
jecxz
hlt
xor
fdivr
movb
out
shl
fldl
loop
repz
call
lret
leave
loop
aaa
cmp
ror
cmp
int
iret
and
mov
jecxz
movb
xor
lret
aad
sti
in
ds
sti
fstpt
in
repnz
aam
cli
bnd
mov
loope
repz
fmul
out
iret
cmp
in
clc
cmc
out
clc
out
adc
test
in
sti
out
mov
mov
jmp
leave
ds
fstp
fnstsw
aaa
dec
jmp
mov
add
ret
cmp
call
out
cmp
fcomi
stc
stc
sbb
mov
into
sub
enter
jmp
aam
out
leave
fiadds
xchg
cld
lret
lock
sti
out
das
cld
fidivrl
aas
aas
jecxz
out
loopne
loop
addl
enter
cmp
idiv
cmp
jecxz
fimuls
enter
or
std
cmc
aaa
das
cmc
cs
cmp
xor
ds
hlt
cmpl
sbb
test
lock
jmp
into
enter
and
out
ffree
sub
faddl
out
in
iret
into
jecxz
shl
in
clc
cmp
stc
xor
sbb
shl
std
ret
mov
cmc
into
cmc
loop
fdivr
iret
int
sar
int
std
icebp
repz
loopne
lret
aam
pop
xchg
ljmp
xor
cmp
cmc
icebp
jmp
hlt
les
in
std
jmp
fisttps
repnz
xor
hlt
icebp
in
in
int3
fcmovbe
loop
sarl
lock
lret
in
sti
leave
fdivrp
out
mov
rcl
cmc
xlat
leave
xor
cmp
aas
aam
test
adc
jecxz
repz
loope
sub
cmp
clc
sti
aad
aam
lock
in
hlt
not
ret
clc
jmp
repnz
cmp
idivl
cmp
ret
xlat
cld
or
fmuls
rcr
lret
cs
fucompp
aas
aas
aas
loope
std
fstpt
neg
clc
cmc
loope
or
mov
shl
shr
in
int3
xor
rcr
idiv
in
rol
clc
fcmovb
rolb
int3
mov
in
out
lret
shrl
int3
in
lret
lret
in
incb
ret
ffree
in
addl
mov
xlat
iret
xor
xor
leave
xor
idiv
icebp
fld
repz
sbb
lret
out
hlt
cmp
in
jmp
cmc
shr
dec
addb
and
jmp
hlt
cs
xor
in
ss
rol
cmp
aad
call
call
cmc
aad
stc
xor
hlt
fmul
call
ret
or
enter
jmp
mov
xor
cmp
cmp
out
repnz
jmp
out
icebp
in
mov
repz
lds
ror
fdivrp
aas
xor
aam
aad
jecxz
mov
xlat
lea
mov
in
hlt
lret
shr
repnz
int3
into
fnstcw
idiv
call
loope
mov
nop
jecxz
stc
rcl
idivb
hlt
fstpt
jmp
fxch
decb
mov
int3
call
xor
cmp
loope
int
ds
imul
test
lret
sti
loop
icebp
xchg
in
shrb
xor
div
lock
hlt
shr
cli
ret
xchg
test
lds
int3
xor
sar
into
icebp
rolb
fdivrp
enter
iret
mov
shl
ror
in
pushl
stc
fyl2x
clc
int
in
repz
ret
cld
loop
out
nop
xchg
faddl
aaa
in
hlt
stc
shr
cmc
loopne
hlt
sti
cmp
fsqrt
std
loope
les
cli
call
div
sti
ss
in
aas
cmp
fcomi
fildl
fiadds
xchg
cmc
repz
icebp
xor
cld
cmp
fdivrs
in
idiv
cld
shl
cmc
hlt
sti
call
xchg
aam
ss
out
ss
aam
test
ds
xchg
loope
fimull
into
mov
jmp
hlt
aam
std
loopne
cmp
sti
icebp
loope
std
ljmp
xor
out
enter
out
aam
rcl
in
aad
sti
test
out
jecxz
xor
loopne
out
lret
shr
rcl
rol
cmp
xchg
ret
fsubr
fdivr
xchg
xchg
rorb
into
out
xor
sar
xlat
jecxz
fdivr
cld
clc
mov
test
adcl
fsub
ss
lret
cmp
or
fcmovnbe
rcr
icebp
ffree
fdiv
ds
sbb
filds
int
ss
lret
into
cmp
rol
in
std
ljmp
ret
out
aam
ljmp
ds
fsub
test
lea
mov
out
mov
call
rorl
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
jmp
iret
ret
fstp
insb
sub
repz
data16
add
xor
call
xor
shl
test
shl
hlt
testb
test
jmp
lret
ror
aad
in
icebp
repz
clc
shr
testl
fists
in
imul
int
sarl
xor
test
jmp
test
fisttpll
jecxz
lret
stc
lret
loope
cmp
loope
in
fucomp
aad
test
cmc
stc
ljmp
in
cs
out
xor
ljmp
lock
test
loop
call
sti
xchg
ret
les
fsubr
rcl
ffreep
call
aam
in
out
in
call
fcmove
icebp
jmp
in
int
fcmovb
fdivrp
out
mov
int
ret
shr
xchg
shrl
in
fldcw
cmp
out
testl
xlat
in
or
enter
loop
ljmp
in
aam
lret
test
sti
jmp
lret
loop
and
aad
xlat
xor
ljmp
aam
aam
fsubr
into
fcoml
rcl
xor
cmp
out
aam
cmc
fcmovnb
cmc
jmp
mov
xchg
lret
out
aad
xor
lret
sarl
cli
stc
faddl
testl
shr
iret
cmc
xor
fucomi
aam
test
iret
jecxz
xchg
sar
incb
mov
loope
iret
in
stc
int
fdivrs
aam
lock
jecxz
out
fsubr
jmp
int
iret
mov
cmc
ret
lret
leave
xor
aam
cmp
test
lds
in
out
loope
hlt
xor
aad
rcr
std
lock
repnz
std
in
loop
fcomi
sbb
stc
fmul
xchg
loopne
lret
div
xor
cmp
lret
in
les
loopne
mov
out
sti
int
aad
aam
sti
ss
int
fsubr
sar
cmp
fld
std
clc
ret
leave
fucomip
iret
rcl
mov
xor
xor
lret
lock
cli
cli
stc
ds
jecxz
test
in
fnclex
addb
les
enter
fdiv
shl
cli
ss
fsubp
roll
out
out
lret
idiv
iret
cmp
hlt
clc
cmp
int3
test
aas
stc
repz
call
icebp
leave
iret
ljmp
fdivl
repnz
int
loop
loop
sbb
cmp
stc
fucompp
or
out
in
shr
lret
stc
aaa
fcmovne
cmp
shl
out
int
ljmp
test
aad
leave
fucomip
aam
jecxz
shl
hlt
repnz
fadd
int
leave
aad
das
shll
xor
das
lret
std
repnz
in
repnz
cmp
sbb
xlat
test
xchg
xchg
loopne
loopne
xor
ss
hlt
int3
rol
cmp
clc
ss
xchg
neg
loop
jmp
xchg
out
cmc
std
repz
fadd
in
cmp
loopne
cmp
cmp
ds
enter
loopne
out
test
aas
shl
fidivl
aaa
enter
cmp
loop,pt
xchg
xlat
mov
out
in
in
jecxz
lret
ret
repnz
lret
cmp
clc
repz
not
fdivrp
ljmp
loop
int3
xor
xor
cmp
mov
xlat
mov
in
out
test
call
cmp
fistpll
cld
test
sti
mov
lret
in
out
out
out
out
out
xor
lret
clc
ror
cmp
adc
sub
test
ljmp
cmc
enter
in
in
cli
xlat
lret
lds
in
lret
int
sub
lock
cli
stc
ljmp
push
roll
fsub
nop
cli
fiaddl
ljmp
jmp
repz
rcl
jmp
in
in
mov
cld
ror
int3
call
pushl
jmp
hlt
in
icebp
std
faddl
int
xchg
xchg
mov
loope
cli
jmp
sti
clc
in
cli
rol
loopne
div
out
aas
sti
rcr
shr
rorb
ss
cli
out
icebp
cmp
repnz
iret
fildl
xchg
in
cli
mov
in
xor
ret
icebp
cs
loopne
stc
jecxz
out
sub
std
leave
leave
int
jmp
ljmp
shr
dec
fnstenv
orb
mov
mov
mov
xor
xor
add
add
jmp
rol
int3
fcmovnu
fcmovb
and
ja
xchg
jg
add
cmp
leave
in
fdecstp
fcmovnu
addl
mul
cmp
out
cmp
fcomi
ds
loope
div
shl
fld
out
xchg
int
xchg
in
ljmp
aam
cli
lret
lock
test
loopne
sti
ds
fsubp
mov
xor
repz
shl
into
hlt
div
rcr
loope
fmul
into
jecxz
enter
ds
ss
into
int3
fprem1
out
into
repnz
out
test
mov
nop
lock
shl
lret
xlat
sar
std
fcmovnbe
call
addl
not
cli
in
das
shr
jmp
cmp
loope
shl
lea
fsubr
out
out
into
in
out
enter
aad
ljmp
cmc
ret
jecxz
ljmp
in
imul
xor
icebp
ljmp
repz
repnz
mov
mov
shr
repz
lret
int3
lret
shr
xor
lock
lret
repz
leave
fnstsw
sti
mov
jmp
call
hlt
in
xor
clc
out
fptan
icebp
xor
fprem
in
shl
call
std
loopne
jmp
test
out
shr
divb
in
int
into
cmc
iret
xor
iret
cmp
shl
loope
and
lret
fcmovne
popl
rcl
into
int
fptan
repz
clc
div
rcr
xchg
cmp
call
mov
loop
jmp
rcr
xor
shl
loopne
cli
aad
decl
xor
repnz
cmc
icebp
test
loopne
testl
nop
xchg
into
neg
lret
aam
sti
std
out
in
ds
sar
in
ds
mov
incb
shr
test
clc
rol
ror
sub
icebp
mov
add
mov
shll
out
ror
xor
cmp
cli
test
test
jecxz
fmul
leave
std
stc
in
jmp
rcr
xor
ret
xor
stc
call
lock
out
repz
lret
mov
enter
in
in
repnz
fnstsw
aas
repz
and
repnz
loop
inc
sub
int
lret
fld
ss
fdivrl
shl
out
flds
xchg
rorb
xor
out
fdivrs
lret
into
stc
rcl
mov
mov
lret
iret
mov
lret
cli
ss
cmp
xlat
sti
in
add
leave
loop
fcomip
xchg
test
cmp
cmp
int
fxtract
call
std
int3
shr
out
xor
hlt
xlat
clc
cld
test
iret
call
add
call
in
mov
out
xor
xor
sar
cmp
ret
repnz
repz
out
hlt
lret
leave
fists
xor
mov
xor
int
in
fnstsw
adc
cmc
and
cmp
aam
mov
incl
lea
shr
aad
enter
lret
cmc
ret
cmp
stc
loop
clc
testb
orb
cmp
call
int3
sbb
ffree
cmp
std
fmull
orb
into
lret
iret
fstpt
aad
and
cli
ret
xlat
lea
call
sti
shr
int
imul
cmp
addb
nop
lock
out
call
cmp
in
xor
lock
idiv
aam
aas
sarl
out
ror
cld
loopne
test
rcl
pushl
xor
ret
cmc
incb
std
ror
in
fmull
cmp
cs
out
icebp
aam
ljmp
cmp
int
lea
ror
int
in
in
into
ds
in
test
test
jmp
mov
fmul
in
int3
cmp
jmp
aaa
dec
fdecstp
flds
xchg
mov
in
sub
stc
iret
repnz
fdivrs
fst
cmp
into
lock
cmc
aad
cmpb
jecxz
stc
shr
fmul
in
out
sub
std
out
hlt
ds
aas
rol
not
jmp
in
out
in
mov
test
int3
xor
repz
stc
xlat
icebp
cld
call
loope
lds
loop
test
lret
shl
mov
repz
call
xor
rcl
shl
cmc
cmp
imul
mov
cmp
jmp
iret
aad
ret
fst
dec
cwtl
mov
add
add
cmc
fucom
in
xchg
loopne
xchg
lret
sti
aaa
in
ljmp
loope
call
aas
sar
adc
jecxz
out
cld
aam
shr
shr
xor
cmp
loope
int3
cli
shl
add
mov
xchg
in
int3
int3
aad
out
ror
int
fucomi
aam
jecxz
incb
mov
fldl
repnz
xor
in
div
int3
std
in
add
cmp
aad
xor
out
fmull
enter
in
leave
enter
ds
call
xlat
ljmp
xchg
ret
sub
aad
cmp
out
xor
jmp
stc
fcmovne
in
sbb
xor
jecxz
into
std
jmp
repnz
addl
mov
repnz
xor
icebp
les
xor
cmp
jmp
test
adcl
not
incb
loop
into
cli
xlat
mov
ljmp
aam
out
div
xor
fdivrs
cli
iret
icebp
out
fsubrp
fcmovu
out
loope
aad
enter
repnz
enter
out
not
shl
roll
ljmp
xor
ror
in
ljmp
rol
test
not
cmc
lret
repnz
xchg
out
aam
iret
aad
in
shr
ljmp
xlat
in
test
cld
ret
loop
repnz
sar
in
shr
ljmp
into
repz
out
decl
jmp
ss
fidivl
fsubrp
iret
out
cli
ret
mov
std
cmp
loope
lret
ljmp
int3
icebp
xor
call
std
loop
aam
incb
shl
fmulp
in
cmc
mul
sar
aaa
cmp
shl
into
out
test
xlat
xor
std
testb
sub
hlt
in
aaa
shlb
sti
aas
out
test
jmp
sti
out
into
test
cmc
xor
in
cmc
sarl
loope
shl
in
cli
cmc
fucomp
int3
fiadds
int
stc
hlt
jmp
cmp
les
aad
idivb
int3
in
xor
test
test
in
std
in
in
mov
ret
cmp
iret
rolb
fdivr
leave
in
les
in
int3
out
stc
shll
in
cmc
ror
xlat
lret
xor
loopne
aas
test
int3
mov
out
call
lret
cld
out
cmp
shl
rolb
fcomp
jmp
leave
orb
iret
lock
fidivrl
jmp
roll
sti
sar
sub
fimuls
shrl
shr
out
xor
rcl
cmc
sub
loope
cmc
shl
jmp
out
xchg
loop
leave
lock
ds
fcmove
sti
fucomip
int3
fdivrs
repnz
sti
rorb
out
mov
call
out
in
aad
fistpll
cmp
in
cli
cli
cmc
jmp
cli
call
sub
hlt
out
int3
sub
xor
shr
stc
icebp
aam
int3
xchg
clc
loopne
test
or
xchg
lock
shrl
shll
fcmovnbe
out
cmp
hlt
sti
ret
addl
in
flds
das
xor
xor
fdivr
jmp
cmp
neg
aad
sub
faddl
add
xor
fcmovnbe
iret
lret
enter
repz
lock
fcmovu
ret
mov
test
int3
xchg
mov
clc
fcmove
fcomip
cmc
fneni(8087
loopne
ret
ljmp
lea
in
cmc
icebp
xor
div
test
jmp
ljmp
rorb
shl
mul
aam
sarl
aas
test
ret
rolb
int3
ss
fprem
loop
cs
fcmovnu
call
vpaddusb
call
stc
mov
std
test
leave
hlt
in
test
iret
int
cmp
jecxz
fmul
clc
fmull
jmp
adc
cs
rcl
fnstcw
icebp
out
cmp
fst
loope
loope
ds
jmp
fcmovnbe
mov
in
lret
lock
fsubr
in
out
out
ss
repz
stc
cli
cld
jmp
sbb
rcll
xor
clc
clc
loope
test
jmp
cmp
inc
cld
jmp
iret
int
ret
fstp
sbb
sbb
jl
add
loope
adc
sub
out
xor
aam
xlat
cmpl
cld
loope
shr
lret
in
fmulp
test
in
mov
fsubrp
cmp
ss
repnz
lock
std
out
std
call
fcmove
ret
loope
icebp
shl
leave
sub
shl
int
hlt
clc
int
aad
sti
rolb
orb
rorl
out
out
aaa
fdivr
cmp
fnclex
filds
test
test
call
aaa
enter
shl
repz
xor
cmp
fsub
addl
mov
mov
lret
cld
shlb
jmp
std
div
out
in
iret
sarl
repnz
rol
ret
fsubr
fmul
jmp
ror
lret
das
rol
xor
not
cmp
lret
fdivr
cmp
shl
call
xor
fdiv
in
repz
fucomp
jmp
loopne
flds
repnz
out
int
icebp
xchg
xor
xor
cmp
leave
leave
cmp
adc
jmp
cld
incl
loopne
sarl
ss
lret
loope
fyl2xp1
out
call
int3
fxch
std
int
into
call
aad
lret
aad
in
cmp
repnz
sbb
test
jmp
xchg
loopne
loope
loopne
int3
cmc
lock
into
clc
call
fdivr
fsubr
jecxz
mov
test
fxch
flds
call
int3
int3
shr
in
clc
cmp
test
mov
fcmovu
testb
fcmovnb
aaa
lock
aad
xlat
mov
sti
ret
cli
xchg
jecxz
int
lock
not
out
fcmove
sarb
cmp
lock
jmp
ljmp
xchg
xor
sti
cmp
icebp
clc
lret
ret
adc
in
stc
mov
fucomip
icebp
in
iret
xchg
repz
jecxz
ror
aam
cli
in
lret
cmp
sar
clc
in
shl
jecxz
shr
mov
iret
hlt
loopne
int
out
imul
shl
imul
cmp
aam
cld
rorb
testb
nop
sub
das
cmp
out
jmp
out
repnz
aas
aam
loop
cmc
jecxz
enter
shl
rcl
loop
shl
jmp
int
aad
cmc
test
clc
call
fadds
fmul
jecxz
fmul
hlt
shr
lret
aam
fdiv
rcr
fdivrp
test
dec
loope
mov
fstp
ljmp
cmp
fdivrs
not
cli
out
xlat
mov
loope
vpxor
out
xor
xor
stc
aaa
fistpll
cmp
jecxz
cld
cmp
repz
loope
cli
loop
and
xchg
call
sub
cmp
fiadds
ds
aam
test
mov
lret
xor
in
into
out
loope
aas
stc
aad
mov
loopne
xchg
cmc
ret
cmp
stc
cmp
jecxz
cmp
fdivp
bnd
out
mov
test
xor
lock
out
int
aaa
std
lock
sub
sti
cmp
fcmovnb
in
in
xchg
stc
ret
ret
aaa
icebp
cmp
adc
xlat
inc
movl
shl
xor
shll
repnz
repz
lret
fcom
roll
in
hlt
in
fsubr
test
mov
iret
call
int
aaa
lret
stc
ds
cmp
addl
orl
jecxz
sub
mul
hlt
neg
fidivrs
rol
test
mov
popl
cmc
call
int
fcmovnbe
into
fnstsw
addl
mov
cli
orl
call
enter
out
aas
repnz
loop
aad
not
ljmp
out
lock
sti
xor
fstp
ror
out
cmc
clc
lock
cld
leave
clc
rolb
lock
out
aad
int
in
divl
into
aad
clc
aad
cmp
orl
orb
shlb
cmp
cld
roll
xlat
cmp
adc
sti
in
loop
imul
in
test
cmp
cld
fcomp
cld
add
testb
into
rcl
shl
out
cmp
idivl
lock
fcomp
stc
fst
out
ljmp
xchg
hlt
jmp
enter
xlat
idivb
adc
loope
orb
icebp
and
mov
sub
je
xor
add
jmp
rol
sarl
rcl
mov
test
or
add
imul
out
out
std
stc
ds
clc
ds
loope
repnz
aam
call
fiadds
into
ss
icebp
aam
out
stc
lret
lret
xlat
adc
fmuls
aad
iret
leave
ljmp
ljmp
lock
call
aas
rcl
push
fildl
xchg
sub
repnz
aam
repz
loope
sar
cld
stc
xor
shl
mov
test
fmul
in
sub
ret
jmp
xlat
xor
cmp
fcos
mov
loop
roll
shl
shrb
out
cld
cmp
xlat
xor
rcl
addb
frstpm(287
mov
in
enter
repz
cld
fdivr
cmp
or
ficoml
lret
stc
xor
cmp
xlat
rcl
fdivr
rcr
fldl
in
int
int3
mov
jmp
fdivp
div
aaa
stc
in
shl
stc
in
sti
jecxz
xlat
call
ret
ror
repz
in
in
xor
clc
rcl
xchg
xlat
loope
test
in
call
icebp
test
hlt
ftst
out
out
hlt
addb
loope
mov
loope
incb
fbstp
jmp
fdivr
ss
jecxz
aam
ss
test
neg
mov
xchg
in
into
cmc
loopne
loop
aaa
in
xor
cmp
fcom
loopne
sti
out
iret
in
int
into
xchg
repz
leave
repnz
out
aad
hlt
fdivrs
cld
repz
out
out
xchg
or
rcr
in
ds
shl
cmp
clc
fdivrs
call
roll
fcmovnb
sbb
in
call
fidivs
lret
clc
test
idivl
add
icebp
mov
call
and
loope
jmp
idiv
hlt
rcl
aam
aad
inc
icebp
call
out
mov
call
sar
shl
aad
enter
aad
loope
shl
xchg
in
fildl
iret
mov
xor
aad
into
enter
shr
adc
iret
lock
and
xchg
enter
enter
rcl
rcl
lock
lret
or
out
int
in
jmp
fsub
aad
in
into
in
xor
cmp
clc
add
jmp
stc
mov
int
mov
xor
out
shl
cmp
cli
cmp
mov
ret
movb
in
xor
xor
leave
into
leave
jmp
lret
cmp
loope
repnz
aam
xchg
loop
les
xchg
fdivp
in
sti
idiv
lret
into
fucomi
lock
stc
xchg
call
std
lret
call
shl
in
lds
jmp
div
shl
out
ds
int
loope
mov
xchg
in
xchg
out
out
out
aad
out
xor
cld
shr
shl
mov
xchg
jmp
mov
sub
ljmp
hlt
in
les
rolb
int
les
aaa
iret
int3
cmp
leave
int
in
test
loop
aad
enter
in
out
icebp
jmp
out
xchg
jecxz
hlt
cmp
ss
iret
stc
rol
xor
cmp
mov
rorb
addl
in
leave
cmp
ror
fsubr
fninit
add
in
lock
lret
xor
jecxz
hlt
les
ror
aas
or
ret
xlat
aam
call
in
mov
jecxz
xor
hlt
clc
enter
cmc
ljmp
test
clc
dec
repnz
nop
call
repnz
aad
out
in
shl
cmc
cld
jmp
loope
cmp
dec
mov
ljmp
cmp
in
cmp
sub
std
sub
out
int
std
shl
cs
in
xlat
int
cmc
hlt
cmp
cli
loope
iret
leave
dec
out
in
rcr
jmp
in
rcl
cmc
call
into
aam
hlt
ret
ret
sti
fdivr
jmp
lds
in
rcl
cmp
int
in
aaa
fcmovne
in
fstpt
xchg
in
test
test
ror
fidivs
in
icebp
not
hlt
aam
loop
cli
repnz
xchg
sti
clc
int3
int
ljmp
ret
int3
iret
sar
ror
cld
into
icebp
lock
aas
int3
ljmp
in
icebp
repz
lret
enter
mov
jmp
iret
aad
aad
push
dec
aaa
sbb
in
jg
add
aas
cli
loope
filds
imul
ljmp
fcoml
jmp
enter
adc
sti
xchg
testl
cli
out
xchg
loop
in
cli
aaa
stc
out
out
cmp
fidivrl
idivl
stc
sti
cld
in
xchg
xchg
mov
mov
jmp
iret
xlat
call
loope
fcmovu
cmp
ret
mov
loop
lock
call
xor
cmc
enter
div
push
loope
sti
fucomp
fsubrp
adc
xchg
in
in
xor
sar
sub
hlt
hlt
cli
mov
in
ljmp
sarl
aam
fcmovnu
xor
jecxz
repnz
sti
cli
cli
and
enter
mov
shl
rcr
aaa
das
cmp
jecxz
out
clc
cmp
jmp
fiadds
shr
out
das
test
repz
cli
neg
hlt
roll
std
ljmp
popl
stc
leave
shr
fsubr
out
ds
fiaddl
leave
loop
clc
mov
in
lds
into
cmp
aad
rcr
cmp
idivb
cmp
rcr
sti
in
cld
sti
out
in
jmp
jecxz
ljmp
iret
aas
cmp
aas
xlat
aad
mov
xlat
addl
in
shll
fdivr
iret
cmp
int
rcl
jmp
out
out
ffreep
shl
fnstenv
xor
iret
xor
rcr
and
xbegin
int3
cli
les
shl
into
xor
icebp
xlat
xor
jmp
cmp
rcl
aas
mov
call
rol
icebp
jmp
fstpt
xor
xor
rcl
ret
in
lds
in
ret
ds
out
xor
in
into
div
std
int
repz
rcr
out
call
or
rol
ret
fucomi
ljmp
aad
in
adc
in
lret
int
xor
xor
in
repnz
fcmovnb
bnd
sarb
fcmovbe
loopne
sti
lret
std
fildl
loop
enter
fcmovne
xor
cmp
into
in
ljmp
fucom
out
mov
shrl
lret
xor
fcomi
cmp
rcr
mul
shl
cmp
nop
jecxz
sub
xor
xor
cmp
cmp
cmp
lock
call
jmp
xor
xlat
leave
xor
cmp
cmp
ds
out
fadd
clc
inc
loope
test
fsub
lret
shr
loopne
xor
shl
sar
cmp
cld
sar
sti
lret
cli
stc
jmp
fldl
out
cmp
cmp
repnz
mov
mov
out
iret
xchg
repz
vcvttpd2dq
cmc
shr
idivb
xor
aas
cld
aam
xchg
test
enter
loop
lret
xor
aad
cmp
aad
fsubrp
mul
fst
test
loopne
xacquire
and
in
adcb
out
aaa
call
int3
in
test
out
fcmovu
int
xlat
imul
fucomip
out
and
shlb
sarl
ror
sar
fucomi
int
shl
mov
cld
test
addb
aaa
fcmovbe
repnz
ljmp
clc
jecxz
fsub
hlt
sbb
sub
loop
and
loopne
ss
int
cmp
rcl
fcmovne
cmp
rcr
test
cmc
cmp
orl
in
jmp
idivl
jmp
neg
out
mul
stc
in
fisttpll
mov
xchg
ljmp
int
out
loopne
std
shl
mov
out
mov
in
xchg
shlb
ror
cli
ror
iret
repz
shl
aam
shl
loope
leave
xchg
fildl
shrb
ljmp
aas
into
ret
cmp
and
loopne
cld
ffreep
test
lock
rorb
fnstenv
call
aas
cmc
dec
rol
sti
std
adc
ret
clc
xchg
loop
cli
repz
in
adc
repz
das
ss
cmc
fdecstp
aam
fnop
fcom
lds
shl
mov
repnz
cs
enter
sarb
jmp
fdiv
repnz
test
in
xchg
xchg
loopne
call
lret
sti
fcmove
jmp
sti
clc
cmc
lret
mov
lret
jmp
xor
xor
shr
aam
imul
add
mov
mov
pop
leave
ret
push
mov
push
not
push
movl
mov
mov
mov
mov
mov
movl
cmp
movl
jmp
int3
aam
xlat
fst
fldl
mov
in
cwtl
mov
std
add
shl
sti
push
mov
mov
xor
aam
clc
clc
in
aad
icebp
xlat
div
sar
rol
fimull
xchg
out
aad
ljmp
shl
sti
xlat
jmp
xlat
test
enter
std
in
shl
int
in
repz
std
cmp
aaa
fnop
repz
out
fmuls
clc
cmp
xor
xor
idivb
test
jecxz
idiv
out
jmp
out
lret
in
xor
lock
lock
cs
fadd
lock
loop
fsincos
call
loopne
xlat
ret
repnz
xor
xor
test
xchg
cld
fmul
iret
sti
clc
fucomi
jmp
out
aad
fdiv
das
leave
fdiv
ss
sar
test
ror
sti
mov
lock
iret
ljmp
adc
sarb
fnclex
mul
enter
loop
ret
rorb
xor
aaa
repnz
call
iret
shl
xchg
rcl
in
cld
inc
nop
or
fidivs
ss
cli
std
cmp
fdivp
cmp
xor
aad
fld
sar
jmp
fucomi
fcmove
nop
jmp
shr
rcl
in
lock
iret
std
stc
addl
movb
in
out
loop
fcmovu
cmp
into
shr
cmp
int
mov
sbb
xchg
sub
int
out
enter
cmp
ds
mov
fiaddl
int3
lret
fidivs
repnz
int3
sti
leave
fdivp
not
fmulp
ret
fadds
test
adcl
out
in
cmp
sar
jecxz
and
hlt
cmp
xchg
out
fldl
iret
xor
enter
clc
out
lret
cmp
stc
stc
in
imul
orb
lock
xor
ss
xor
xor
stc
lock
xlat
lret
out
cmp
into
int3
iret
jmp
lret
iret
ss
cmp
fcmovnu
repz
fildl
ljmp
test
fcmovnu
jmp
sub
and
clc
ds
idiv
std
int
jecxz
ret
sub
fcmovnb
shr
cmp
imul
fnstenv
std
fstp
and
test
mov
out
shr
in
int
iret
lret
vpxor
rcr
out
test
loope
aad
addb
out
int3
test
shl
sti
aad
std
enter
test
lock
jmp
cld
call
sarb
ljmp
fbstp
loopne
fcmovbe
cmc
cmp
icebp
in
loope
mov
or
lret
cld
shl
repz
cmp
out
xor
fprem
xor
in
cli
aas
fcomi
stc
cmc
in
loopne
cli
xchg
test
xor
lret
out
stc
aam
testb
in
in
out
enter
fsub
ds
jmp
stc
into
fcmovbe
cmp
in
fstpt
add
addb
in
jmp
xor
enter
std
in
fmull
stc
in
jmp
shr
ret
out
fmul
enter
hlt
jmp
fnstcw
in
std
repz
fcomip
cld
dec
lret
fmul
out
in
icebp
div
repnz
leave
fucomi
lock
loope
lock
in
int3
std
jmp
mov
jmp
divl
repnz
fucomp
icebp
hlt
cmp
xchg
mov
fdiv
mov
out
sub
sub
hlt
out
fxch
repnz
rcl
ds
faddl
lea
jmp
jmp
mov
iret
call
in
sar
adc
lock
cmc
imul
loopne
les
int
in
jmp
lret
cmp
out
cmp
clc
repnz
loopne
cli
sar
loop
in
mov
std
lret
in
xor
das
lret
ror
jmp
cmp
cmp
ljmp
loopne
and
in
std
lock
fcmovu
out
int
cmp
shl
jmp
fsubp
rcr
xchg
in
test
loop
xor
fxam
fnstenv
iret
std
bnd
int
test
add
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
push
call
mov
dec
mov
jmp
mov
xor
mov
add
mov
movzwl
not
jmp
rcl
ror
fstp
fldenv
add
idivl
std
add
cld
xchg
idiv
lret
fisttpl
vpsllw
jmp
aad
std
cmp
aam
icebp
ffree
xchg
sti
sar
loopne
shr
out
jecxz
leave
aad
div
int
sar
out
test
fcomp
lret
lret
icebp
fisttpl
enter
repnz
cmp
roll
shl
mul
mul
mov
cli
repz
lret
rol
ljmp
call
aas
aam
adc
fildl
in
std
out
out
int
out
aaa
call
hlt
cld
aam
cmp
out
xchg
in
mov
lret
lret
repz
out
into
clc
fdivrs
cmp
test
shl
enter
test
xor
call
cmp
in
sar
aad
loope
enter
jecxz
test
repnz
fsubrp
stc
mul
fmul
fidivs
cmp
adc
cmp
out
lock
mov
cmc
mov
fnsetpm(287
out
loop
xchg
ljmp
div
lock
aas
iret
shl
xlat
cmc
mov
out
mov
fcmovnb
enter
in
loope
in
enter
ljmp
icebp
adc
cld
sti
in
lret
fsubr
xor
call
ss
cmp
stc
loopne
into
in
out
jecxz
mov
stc
enter
add
xchg
aad
aad
shr
call
fdivrp
jmp
sarb
into
rol
repnz
in
mov
mov
aas
out
repnz
cmp
call
rcr
faddl
jmp
mov
cmp
ss
aaa
vucomisd
xor
rcr
in
cmp
stc
fcmovb
test
std
rcl
ror
ret
cmc
int3
jmp
iret
lret
test
mov
repnz
in
sbb
hlt
int
ljmp
repz
fucom
mov
nop
mov
out
jecxz
sar
ret
fdivrl
icebp
loopne
fnstcw
clc
xlat
fsubr
fcom
mul
in
xor
xor
enter
sti
xor
fcom
cmp
fdivrl
xchg
jmp
ljmp
ss
divb
dec
xlat
repz
int
xchg
call
xchg
xchg
loopne
nop
xchg
mov
out
hlt
out
lret
fucomp
loopne
int
inc
fisttpll
loope
sub
mov
sub
icebp
fsubr
cmp
adc
fchs
aad
sti
incb
int3
out
adc
shll
aam
fadd
xlat
in
stc
rcl
fdivp
fcom
xlat
loope
imul
xchg
adc
xchg
jmp
in
out
in
cmp
xor
sti
int3
aad
loope
ret
sti
xchg
xlat
fucompp
decl
fcom
aaa
repz
cmp
idiv
stc
in
aam
stc
fchs
cld
loope
fucomip
sbb
out
out
sar
idiv
jmp
out
aam
add
aas
dec
rorb
ds
clc
ss
out
cli
repnz
cmc
sti
ffreep
ftst
test
xchg
rcll
jecxz
in
das
rcl
cmp
adc
xchg
in
test
call
fsubp
out
fdivr
ds
int
add
aas
stc
fcmovb
mov
mov
mov
fucomip
sar
call
into
cli
xlat
out
call
aam
addl
fsubr
call
in
jmp
fistpll
aaa
adc
incl
out
ret
loop
leave
sti
int3
lret
xchg
loop
into
in
jmp
jmp
shl
bnd
rcl
in
cld
out
shl
aam
and
decl
repnz
int
xor
ljmp
fucomi
cmp
in
in
movb
cld
orb
fptan
ss
shl
iret
fcomi
stc
ret
ret
jecxz
repz
test
lock
in
into
jecxz
xor
repnz
in
in
cmp
cmp
out
in
ret
fstp
loope
fmulp
sub
hlt
in
out
sar
loopne
xor
loope
fcomi
clc
out
jmp
sub
jmp
aad
sti
cmp
jmp
fisubs
add
jmp
jmp
enter
fstp
fstp
adc
sbbl
cli
jg
std
add
incb
test
fcoml
int3
int
hlt
loop
aam
cmp
aad
sti
ret
aam
loop
leave
fmul
fstl
xor
std
ds
cmp
rcl
xchg
aam
enter
cld
int3
mov
in
jmp
in
xlat
divb
cmp
test
std
rol
sar
clc
popl
addb
lret
cmp
xor
adc
loopne
enter
cld
in
in
xchg
repz
out
rcr
cld
xor
sar
cmc
ds
lock
mov
enter
test
nop
xor
mul
repz
aam
xor
ds
loope
sub
call
test
orl
in
in
xor
enter
fdiv
aad
sbb
cld
mov
fiaddl
mov
sub
xor
shl
das
jmp
fcmovne
clc
cmc
mul
cmp
repnz
cli
hlt
lret
std
call
ds
xor
cmp
fmul
lret
sti
flds
in
int3
mov
mov
xchg
shl
clc
loop
jmp
fcom
xor
fidivrl
fdivr
adc
repz
mov
loope
std
call
sar
aad
sar
xor
fxtract
ret
out
loopne
cmp
call
jecxz
lret
loop
sub
ret
out
xlat
out
sti
lock
ret
sbb
fimull
aad
xlat
xor
fmul
call
repnz
int3
cld
test
rcr
std
ret
loop
fucomi
loop
mov
hlt
jmp
cmp
lock
in
stc
out
out
out
cld
cmp
iret
out
nop
ret
mov
int
iret
lret
iret
cli
fcomi
cmp
ror
clc
cmc
in
xor
jmp
fadd
lret
lret
clc
xor
fstp
in
ret
in
testb
out
call
jecxz
cs
xor
rol
out
loop
lock
jmp
fiaddl
fisttpll
cmc
enter
icebp
cmp
aam
ret
mov
mov
int
in
mov
adc
int
cmc
call
loope
out
fcmovnbe
rol
cmp
aad
jmp
enter
jecxz
xor
sub
icebp
cmp
int
fcmovnb
flds
repz
inc
int
std
xor
out
xor
cmp
aam
xor
shl
hlt
rcl
rcl
ror
fsub
call
rcl
out
fnstenv
jmp
std
sarb
rcl
repz
enter
ror
mov
repnz
loop
aam
aad
leave
ss
lret
ds
ds
lock
loopne
jecxz
sti
fiadds
shr
shl
shlb
into
stc
stc
fldl
in
aam
enter
mov
fmul
jecxz
adc
fcomi
repnz
lret
into
fucomip
lock
aad
xchg
dec
roll
in
xor
ljmp
lock
icebp
loop
fiadds
clc
std
lret
loopne
lock
repnz
shl
aam
enter
mul
repz
vpminub
int
int3
in
sar
int
subl
out
in
ss
cmp
lret
aam
fcmovnb
leave
out
mov
int3
repnz
xchg
out
lret
repz
cmp
aaa
fadds
fimull
clc
out
repz
loope
xor
out
std
sar
rcl
out
test
aam
mov
icebp
lea
loopne
out
hlt
out
xor
repnz
repz
fiadds
ljmp
fbstp
cmp
aad
test
in
rol
shl
orb
in
mov
div
repnz
xor
int
adc
xchg
fcmovbe
sti
loop
and
lock
leave
shr
lock
xorl
out
std
div
ret
test
in
ror
xlat
leave
in
clc
cmc
cmp
call
loopne
flds
iret
mov
out
in
jecxz
cs
lock
cmp
fcmovnu
aas
xorl
jmp
aad
rcr
fstp
sbb
sub
jg
std
add
fiadds
cli
jmp
ret
test
xchg
rcl
aad
repnz
repz
call
cld
and
jecxz
xlat
lret
stc
sub
pop
lret
jmp
sub
fcomi
out
sar
loopne
into
into
fadd
test
stc
repz
call
sub
xor
lock
lret
stc
testl
std
jmp
leave
loope
out
enter
das
lret
divl
lock
hlt
aad
cmp
cmp
clc
loopne
test
sbb
nop
jmp
stc
fdivs
xor
cmc
sar
repnz
test
mov
in
ss
out
enter
fnstcw
sar
cmp
aam
cmp
nop
nop
jecxz
enter
rcl
out
cmp
lock
faddp
mov
fucomp
cld
mov
sti
out
shl
cmc
shl
call
in
xabort
inc
flds
jmp
out
jmp
sub
sti
aad
cmc
cmp
out
cmc
fadd
adc
aam
in
loop
out
in
out
ret
shlb
cli
jmp
rcl
loope
in
lock
repz
call
test
std
mov
repz
not
sar
xlat
ss
lock
cmp
test
test
cld
mov
shlb
out
xor
xor
cmp
in
and
clc
std
mov
in
repz
ret
in
enter
into
shr
lock
cld
std
les
mul
lock
mov
ret
fdivr
repz
cmp
repnz
clc
leave
and
idiv
icebp
xchg
xchg
int
ret
stc
cmp
clc
shr
repnz
ds
iret
fdivr
std
xchg
ljmp
in
out
xor
aam
cmp
jmp
ret
cmp
test
fsubp
in
test
test
hlt
xlat
xor
out
jmp
repnz
ret
shl
lock
lea
test
jmp
sub
lret
iret
sti
jecxz
aas
xchg
ret
fnstsw
xchg
jmp
lret
cmp
enter
aas
loopne
loop
in
loope
sar
lret
std
mov
icebp
lret
fsubrp
call
clc
fdivrs
fstp
lret
ror
ffree
cmc
call
fidivrs
into
int3
fucom
fidivs
test
fnstenv
ror
fnstcw
sar
aad
in
fadd
fildl
out
shr
cmc
std
loope
ret
int
lret
cmp
call
aam
cmp
rcr
and
xchg
loope
xchg
test
lock
rol
out
aad
fcompp
in
xchg
ret
adc
cld
shl
fsub
hlt
loope
xlat
ljmp
fcomip
int3
in
rorl
cld
in
clc
out
jecxz
aam
lret
in
iret
enter
clc
into
cli
out
filds
testl
lock
fsubrs
cli
cmp
ror
loopne
in
icebp
cmc
icebp
leave
xchg
ret
xlat
jmp
ljmp
rcl
ret
enter
out
ljmp
xchg
int
faddl
shr
hlt
das
iret
cs
neg
cmc
enter
fsub
adc
fld
stc
xchg
enter
adcb
cs
jmp
shl
cmp
out
repnz
mov
fimuls
loopne
jmp
test
repnz
repz
ret
xchg
iret
out
in
orl
out
clc
cmc
call
idiv
shl
rolb
xchg
int3
icebp
xchg
hlt
into
mul
into
test
cmc
ror
cmc
not
repz
sti
addb
fxch
leave
in
sar
mov
aam
aad
out
out
aaa
cmp
loope
ret
testb
ret
xor
cli
xlat
cmp
jecxz
jecxz
repnz
leave
in
stc
xchg
fcmovne
out
test
out
loopne
xor
vpsllq
xor
cmp
loop
mov
loop
iret
jmp
std
into
hlt
cs
cmp
repz
iret
fldenv
inc
clc
pushl
call
test
je
leave
ret
push
mov
sub
adcl
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
aad
xlat
int3
ret
sahf
addr16
xchg
or
jl
loope
aas
addl
xchg
out
out
loope
shl
fnop
ret
repnz
call
out
ret
sar
repz
stc
std
int3
mov
ljmp
sub
in
xor
cmp
div
jmp
int
rcr
rol
call
xchg
cli
fst
cmc
hlt
das
fdivs
fnsave
enter
clc
fadds
ret
fdiv
int
addb
cmp
vmaskmovdqu
fnsave
cmc
rcl
ljmp
cmp
out
incb
hlt
xor
ret
cmp
fstpt
rcl
rcl
fdiv
in
out
mov
jmp
repnz
idiv
sarb
cmc
enter
repnz
cmc
sarl
movb
xchg
out
aam
iret
test
in
div
std
cmc
aas
roll
xchg
fmuls
fcmovu
in
ljmp
icebp
lret
sti
ss
xor
repnz
aam
faddl
cli
in
shr
rol
aam
ss
into
ret
aaa
fucomp
addb
fiaddl
xchg
int
rol
div
cmp
sti
in
roll
mov
std
fmul
iret
pop
aam
call
shr
stc
clc
idiv
loope
test
fcmovb
ret
into
mov
out
repz
repz
cmc
loop
loope
aam
sub
mov
fisttpll
sub
int3
fyl2x
ss
into
sarb
ds
aam
stc
aas
cmp
cmc
call
jmp
in
loope
shl
aad
int3
std
xor
rcl
ljmp
ror
mov
lret
test
repz
loop
aaa
in
imul
out
xlat
lret
fadd
rcr
aam
aad
fsub
fdivrp
xchg
loope
cld
repz
out
repz
int
incl
vpsubsb
xchg
in
out
cs
aam
rcr
in
test
fcmovnb
adc
loop
clc
enter
enter
out
xor
iret
cmp
fst
in
sar
lret
cld
out
push
mov
fcmovb
jmp
icebp
out
jmp
lea
jecxz
fmul
aaa
ss
loopne
in
cmc
fcmovnbe
shl
cmc
ret
mov
fisttpl
xchg
in
xlat
rcr
xlat
cmp
fcmovne
lret
hlt
fcmovnb
loopne
aad
ljmp
xchg
shr
loopne
aaa
aaa
repz
fcomip
stc
lret
loope
xlat
loop
incl
jmp
std
jecxz
xchg
fstl
icebp
cmp
out
aam
cld
in
shl
fstp
lock
sar
leave
in
into
mov
repnz
leave
shrl
xlat
sar
cmp
out
xlat
int
fsqrt
fucom
ds
test
hlt
out
decl
xor
icebp
lret
jecxz
iret
sti
aam
out
cmp
cmp
ffreep
jecxz
mov
loope
out
mov
aas
xor
in
ret
lock
cmp
hlt
rcr
loop
ffree
fisttpl
lret
mov
in
in
loop
call
aam
out
rcl
rcl
ror
fcmovb
out
int
xchg
mov
hlt
sar
sti
shl
repz
cli
xor
fldl
test
in
std
push
dec
cmc
rcr
shr
cld
aas
rolb
ds
std
hlt
call
icebp
jmp
sub
std
cmp
div
jecxz
xor
repz
clc
mov
out
jecxz
mov
fdivl
shll
repnz
in
in
div
ljmp
loop
cmc
test
in
fcmovu
ror
int3
xchg
out
shl
ss
idivl
ljmp
sarl
cmp
mov
aam
in
and
shrb
ret
int3
repz
ss
cli
xlat
clc
cmp
rcr
loopne
aam
std
jmp
and
xchg
in
aaa
int3
shr
xor
jmp
cmp
cmp
clc
in
ds
loop
cld
int3
cli
rorl
not
into
in
icebp
sar
roll
cmp
out
fdivr
in
xchg
or
cmp
shlb
out
lock
sub
repnz
hlt
call
adcl
rol
aad
lret
std
xor
cmc
stc
cmp
fiadds
loope
enter
test
clc
decl
loopne
ljmp
icebp
out
add
inc
in
daa
test
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
lea
adcl
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
jmp
ror
fcmovb
rcr
fs
lods
out
dec
cwtl
mov
jg
cmpsb
add
enter
icebp
std
mov
out
ret
in
mov
divb
out
out
icebp
cli
jecxz
std
ds
fld
sti
leave
clc
fiadds
fcomip
out
enter
out
aad
cmp
out
add
rcl
mov
xor
shr
in
ss
xor
aas
sbb
testb
nop
clc
jmp
iret
fxch
out
icebp
hlt
int
fnstenv
hlt
into
fcmovnbe
test
and
int3
icebp
mov
std
aad
loopne
shlb
jmp
cmp
enter
mov
test
test
loopne
fstp
cmc
cmp
in
cmp
cmc
jecxz
fdiv
aam
in
in
in
fmull
jecxz
lret
xor
cmpl
fldl
xchg
mov
in
lock
xor
fidivrs
call
repnz
ss
stc
lret
repz
shl
cmp
shl
rorb
xchg
sarb
jmp
cmp
ds
icebp
fsub
loope
les
out
pause
hlt
sub
lock
out
rcl
ror
out
out
jecxz
cld
repz
lret
int
out
lock
out
cld
sti
cli
xor
ds
fmull
jmp
mov
out
fld
lds
fcomip
cmp
rcl
in
incl
orb
jmp
fldl2e
jecxz
loopne
loop
jecxz
out
in
in
cli
mov
int3
das
jecxz
ss
cmp
aas
iret
cmp
cmp
aas
fstp
out
sbb
xchg
mov
aas
xor
idiv
fld
aam
fucompp
not
sti
lock
std
mov
call
in
cmc
out
rcl
in
lret
cmp
cmp
shl
stc
jecxz
ds
in
fdivrl
sub
int3
enter
iret
xor
shl
fidivrl
cli
shl
in
ds
test
ret
dec
mov
in
xchg
lret
cmc
sub
cs
repz
cld
leave
icebp
repnz
sbb
fabs
aam
std
fildl
mov
cmc
out
not
xlat
cmp
loopne
neg
test
xchg
call
in
shl
loope
jmp
repz
ds
aad
adc
call
loope
ror
ds
repz
cmc
jmp
cmc
rcr
mul
enter
mov
fisttpll
icebp
stc
aad
ds
enter
push
loop
out
flds
call
in
sti
lock
call
fprem
in
shl
test
cmc
call
ret
in
loopne
sarl
int3
xor
cli
fildl
cmc
cli
iret
loop
xlat
shr
xchg
ffree
lret
call
enter
lock
jmp
sar
loope
out
out
jmp
loop
in
jecxz
cs
leave
leave
repz
not
aam
add
ret
sar
in
mov
xchg
leave
sub
int
shrb
xor
aaa
sarb
cmp
lock
fdivr
ffree
icebp
icebp
sbb
icebp
xor
ss
loop
fcom
call
cld
in
aam
mov
int
test
mov
call
shr
int3
cli
icebp
loop
fsubp
ds
and
mov
ss
icebp
rcr
stc
add
stc
stc
aas
test
ljmp
enter
sar
cmp
shl
out
hlt
fldl
mov
rcl
sub
rcr
repz
enter
fadd
in
mov
clc
out
out
in
icebp
and
cmp
ljmp
enter
ret
rcr
test
test
xchg
leave
nop
fcoml
xor
sti
int3
aad
repnz
rcl
aam
jmp
loope
sub
jmp
in
sar
sarb
xor
in
in
cmc
fsubp
test
cli
ret
xlat
stc
ret
out
loop
iret
shl
fadd
into
xor
test
lock
cmc
mov
leave
test
lock
mov
mov
movzbl
xor
push
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
orl
jmp
rol
into
into
fnstcw
jl
inc
fmull
jl
repz
aam
lret
ljmp
inc
test
shl
loop
jmp
mov
nop
repnz
lret
ret
cmp
xlat
int3
ljmp
imul
std
xlat
addb
shr
rcl
xlat
repz
xor
lret
xlat
roll
cld
xchg
lock
test
shl
aaa
cmp
fdiv
fsqrt
into
in
call
aam
loope
xlat
mov
std
cmc
fcomip
repz
cmp
rcl
aad
in
lock
cld
cmc
xlat
enter
in
xchg
icebp
mov
sub
in
int
cs
icebp
stc
fmulp
cmp
test
hlt
out
fsubp
mov
lock
lret
divb
fnstsw
into
out
leave
repz
cmc
xlat
cld
loopne
in
jmp
out
nop
xchg
sub
out
divb
cmp
out
sar
cmp
out
ret
cli
in
ret
or
fists
repz
xlat
in
xor
shr
hlt
int
test
cld
xchg
mov
incb
int
lock
iret
lret
stc
sar
in
hlt
adc
dec
dec
addb
xlat
int3
out
aam
sti
aas
div
xchg
lret
cld
jmp
out
ret
ljmp
aam
in
loope
in
test
stc
mov
ret
orl
int
sub
ror
xlat
cld
lret
fistpll
rolb
cmc
inc
mov
shl
hlt
jmp
out
in
repnz
loope
rcl
loope
incl
out
out
mov
loop
shlb
sarb
int3
loopne
and
ds
loope
xchg
lret
ljmp
div
shr
aad
in
shl
out
out
out
and
or
mov
lret
jmp
xlat
int
call
cmp
sti
sub
rolb
in
int
fcmovne
mov
lret
repz
in
ss
in
rol
int3
inc
ret
mov
jmp
out
in
xlat
imul
jmp
in
lock
cmp
idiv
clc
sti
neg
out
div
stc
ret
shr
aam
lret
fcmovnu
jmp
std
jmp
ret
sbb
shl
mov
lea
jmp
xor
clc
lret
fidivrl
test
roll
stc
incl
out
lock
ss
iret
sti
clc
cmp
lret
push
sar
idiv
in
sbb
fdivr
shl
rcl
repnz
enter
icebp
repnz
into
aad
std
fdivr
enter
lock
fcmovu
hlt
lret
aad
in
rcl
aaa
fucomip
sar
aad
adc
out
cmp
repz
sti
repnz
out
lret
loope
fsubr
repnz
lock
call
and
xchg
int
jecxz
ljmp
cs
iret
lret
roll
fstpt
xlat
leave
fsub
loop
xchg
xchg
lret
divl
imul
ror
fmul
int
ds
cmp
out
enter
icebp
lret
leave
jmp
shll
hlt
idivb
cmp
in
rcl
in
loopne
xlat
xchg
jmp
ret
out
rorl
ljmp
fstp
cmc
icebp
cmp
cmc
fcomi
clc
mov
ret
loop
int
out
aam
into
fcomp
cli
xlat
shl
stc
rcl
ljmp
loope
neg
testl
sub
loopne
repnz
int3
fiadds
aad
ds
fimull
dec
ljmp
test
xlat
in
int3
fcomp
out
stc
shl
cmp
cmp
int3
out
cli
aad
aad
repz
jmp
loopne
cld
cli
loop
fnstsw
shr
mov
enter
jmp
out
in
repz
into
out
in
rcl
shl
test
fnclex
xchg
mov
mul
fcmovu
in
xchg
out
icebp
xor
rcr
shl
stc
cmc
icebp
lret
into
jecxz
cmp
fiadds
xchg
leave
cld
in
mov
mov
xlat
loope
int3
clc
repnz
aas
cmp
sti
in
jecxz
cld
fdivp
fst
int3
xchg
loop
int
lock
lds
in
aam
in
cmp
sar
cmp
lds
call
stc
iret
lret
fsub
fucomip
lret
repnz
hlt
xor
lea
mov
mov
xor
push
sbbl
push
mov
xorl
jmp
ror
rol
aad
ror
fstpt
jno
dec
sbb
push
xchg
jg
cmpsb
add
rcl
cld
xlat
in
mov
mov
ret
out
incb
sub
repz
call
cmp
cmp
fsub
loop
les
in
xchg
lock
into
cmp
repz
idivl
icebp
ret
dec
fcom
out
filds
cld
xchg
loopne
ljmp
xlat
jmp
into
and
test
loopne
in
xchg
ljmp
shr
enter
cmp
or
in
ret
fisttps
rorl
int3
lock
shl
icebp
hlt
std
fistpll
sti
ret
fcompp
mov
call
nop
in
xor
sarl
xor
xor
cld
sarl
repz
hlt
aad
add
int
xchg
hlt
ror
rcr
aaa
fildl
rol
out
aad
flds
mov
cld
repnz
xlat
xor
rcl
into
cmp
out
fcomip
in
jecxz
icebp
aam
call
in
in
and
rcl
iret
jmp
aam
repz
jmp
ret
fst
mov
fmull
clc
repz
sub
ss
cld
call
int3
cli
aas
std
rcl
in
cli
enter
sub
loope
jmp
out
stc
repnz
jecxz
out
incl
leave
mov
mov
xor
xor
sti
cmp
push
test
loope
fstp
loopne
xchg
cmc
sub
out
xor
cli
icebp
xor
cmp
jecxz
cmp
xchg
test
fmul
repnz
shlb
int3
out
stc
in
ds
lret
repz
aad
lret
fimull
xlat
loope
xor
fnstenv
out
sub
out
xchg
out
test
stc
test
stc
in
xchg
jecxz
loope
shr
cmp
jmp
into
xor
jecxz
neg
out
loopne
xchg
jecxz
shrb
repnz
out
lock
sti
cmp
out
xchg
rol
cmc
adc
xchg
fsubr
div
shl
in
repz
fnstcw
fdivr
ret
in
xlat
in
sar
out
lock
lret
fdivp
aaa
xor
das
out
hlt
fcomp
int3
out
xor
loop
xchg
jecxz
loop
das
fmulp
xor
into
fnstsw
jmp
fildl
and
jecxz
std
fldl
jmp
cmp
out
cli
shl
testb
sarb
dec
loop
orl
int3
call
ss
std
cmp
xlat
shl
repnz
xchg
fisttpll
in
xchg
rcl
das
aad
aaa
shr
aaa
xlat
xlat
not
cmp
iret
loope
out
lea
fmulp
ljmp
in
enter
repnz
shr
fdiv
loopne
clc
jmp
mov
icebp
and
mov
xor
call
fiadds
lret
neg
test
jecxz
xor
int3
ret
ss
fldl
ss
aam
jmp
ret
test
leave
rcl
xor
in
aam
cmp
repnz
iret
test
xlat
std
xchg
mov
lret
ljmp
cmp
repz
fdivp
repz
lret
test
std
fmull
xor
xlat
ret
int3
ror
ljmp
sarl
in
fisttpll
in
cmc
out
jecxz
sub
aaa
xlat
enter
idiv
aas
imul
xchg
leave
fmull
nop
cmc
xchg
loopne
loop
fdiv
enter
ds
stc
xor
repnz
cld
test
out
out
shr
sar
lea
aad
fcmove
aad
sar
hlt
or
jmp
out
hlt
lret
mov
loope
or
iret
xor
aad
fdivrs
out
cld
out
leave
jmp
rolb
enter
jmp
adc
xchg
loopne
filds
ljmp
cmp
cmp
stc
xchg
call
decb
call
ret
cmp
ss
rcl
aam
test
fucompp
clc
int
mov
mov
fsub
xchg
pushl
in
cmc
fsub
das
cld
lret
loopne
shl
cmp
cmp
clc
mov
xor
mov
jmp
leave
mov
lret
mov
add
mov
xchg
jg
cmpsb
add
stc
jmp
enter
subb
out
shl
aad
cmp
jmp
cmp
ds
cli
cmp
test
mov
rol
leave
aad
ljmp
cmc
loop
aam
test
fcmovnb
inc
aas
mov
icebp
fiaddl
jmp
fcmovnbe
fnstcw
fdiv
in
iret
cmp
ds
fst
lds
rcll
cli
repnz
lret
cmp
in
loopne
lock
loop
cmc
or
mov
das
xor
fcmovnbe
fucomp
out
jmp
ds
hlt
sti
xchg
fcmovnbe
ret
into
cli
loopne
das
ror
xor
cmp
int
clc
int3
loope
ret
roll
xchg
icebp
ljmp
out
stc
sarb
aad
decb
loop
enter
int
in
lock
aaa
les
sar
sti
lret
shl
cli
icebp
sti
out
shr
mov
mov
xchg
xor
in
sti
cld
hlt
cmp
loopne
fcmovbe
stc
std
aas
xchg
fisttpl
ds
shl
out
rcr
sar
shl
loopne
adc
cli
xchg
hlt
lret
clc
mov
loopne
sub
jecxz
rcr
ljmp
cmpb
in
roll
mov
out
iret
cmc
xchg
in
loopne
xor
in
lock
aas
cli
cmp
shl
idivl
out
fistl
icebp
out
out
ret
in
dec
ds
clc
xlat
roll
sbb
clc
out
mov
rcl
enter
ss
clc
loope
or
aad
mul
out
lea
into
cmc
rcl
repnz
jmp
lret
xor
sbb
lds
in
mov
in
icebp
stc
fnclex
aam
cmp
fucomp
icebp
cmp
loopne
rcr
clc
ffreep
mul
int
mov
int
xchg
std
mov
xlat
lret
into
stc
out
cmp
and
mov
cli
testb
xchg
mov
out
cli
stc
fcomip
test
lret
in
mov
xchg
xchg
hlt
ret
aad
cmc
lret
call
fdiv
ret
aaa
out
in
cmp
shl
xchg
out
fmuls
shl
out
ror
not
cli
fldz
xor
shl
xor
dec
nop
loopne
cmc
loope
aam
icebp
out
das
cmp
loope
sti
cmp
stc
icebp
fadd
mov
fiaddl
aaa
jmp
in
clc
out
in
aad
shr
xorl
rol
fcmovne
mov
test
in
xor
aaa
lret
aaa
hlt
shr
sar
incb
repz
cmc
ds
in
cld
shrb
sub
aad
std
jmp
sar
ljmp
mov
in
movb
in
fptan
in
rol
cld
cmp
enter
cmp
sarl
loopne
aas
fxch
test
out
repz
in
fcmove
leave
repnz
shl
cmp
std
xor
leave
mov
cmp
xor
hlt
std
xor
cmp
cmp
leave
loop
std
in
mov
cli
xchg
lret
loopne
icebp
xor
repnz
std
pushl
roll
in
xchg
cli
xchg
out
stc
in
enter
fcomip
fdivr
faddl
test
out
enter
in
nop
aad
call
clc
in
ror
fstp
ds
fldl
aad
mov
out
ror
int
xor
cmp
fcom
fcom
stc
fsqrt
loop
mul
fimull
loope
jecxz
fsubr
iret
call
cmp
or
rcl
lock
enter
iret
in
jecxz
iret
cli
sub
cli
stc
out
in
ljmp
cli
stc
loopne
cld
out
loopne
cmp
int3
enter
lret
xor
lret
clc
icebp
int3
addl
fstp
jecxz
shl
jmp
out
lock
cli
int
cmp
cld
neg
test
loop
add
icebp
xchg
cmc
test
iret
xor
stc
sti
xor
rcr
out
adc
call
lret
in
out
xor
in
sti
cmp
cmp
not
f2xm1
aas
test
sti
cli
lret
fdivr
out
loopne
lret
jmp
aad
rcl
fst
leave
pop
push
cs
jg
cmpsb
add
xchg
aaa
hlt
repz
cli
cmp
cmc
fdivrs
sar
lock
adc
jecxz
enter
repz
sti
out
jmp
in
int3
lock
and
leave
ret
stc
enter
ljmp
xor
not
cmc
in
aas
loope
rcr
out
cli
movl
loope
loopne
xor
cmp
hlt
cmp
loopne
xchg
out
out
inc
fsubr
nop
in
icebp
test
das
out
call
repz
fcmovnbe
std
fnstsw
icebp
aad
rol
fcmovnu
aam
cld
out
xchg
cmp
lret
leave
fstpt
out
lock
rcl
in
cmc
loopne
clc
sub
xchg
out
rcl
jmp
cmp
sar
addb
mov
vpandn
icebp
in
fdivrp
shl
std
roll
hlt
stc
ljmp
lock
lock
fmul
xor
repz
out
fucom
aam
cmp
stc
icebp
xchg
iret
out
lock
xor
imul
ss
cmp
repnz
loop
xchg
addb
fldz
leave
mov
xchg
in
in
not
in
xor
lret
dec
sti
xor
loopne
testl
sub
jmp
std
repz
cmp
icebp
neg
aad
fneni(8087
call
xchg
out
repnz
test
idiv
jmp
std
cmp
cmp
out
aam
iret
mov
in
fnstenv
int3
clc
shlb
enter
icebp
cmp
fiadds
mov
test
iret
repz
loope
jmp
in
cmp
xor
rcr
out
ret
mov
jmp
mov
std
xchg
repz
not
sub
enter
std
lds
les
in
fcmove
mov
into
int3
cs
icebp
into
out
fst
fsub
ret
xchg
jmp
clc
aam
and
mov
xchg
mov
xlat
ret
out
out
jmp
loopne
cmp
hlt
ss
test
leave
in
or
roll
out
into
call
std
fiadds
out
ret
fsubr
mov
loopne
repnz
lret
cld
lock
ds
fld
fdivl
fcmovnb
fcomip
orl
lock
into
xor
cs
fnstenv
aam
frndint
repz
rolb
in
out
in
leave
fnsave
int
dec
hlt
icebp
sarb
cld
loop
ffreep
test
mov
mov
iret
out
rol
in
xor
ss
lds
cli
loope
cmp
and
mov
mov
jecxz
mov
ret
fsub
int
cld
ljmp
xchg
in
cmp
fucomi
in
icebp
cli
sbb
lock
rcr
into
cmp
sar
adc
filds
testl
int3
lock
cmp
cmp
std
cld
jecxz
sti
std
mov
xchg
lret
int3
sar
xchg
pushl
repz
int3
aam
leave
aas
loope
lret
cld
int3
xchg
rorb
out
lret
sbb
hlt
das
in
hlt
fsubr
out
iret
xor
test
aam
mov
cmc
fsubp
dec
int
into
mov
lds
lock
jmp
cmp
fcmovbe
out
out
jmp
sbb
jmp
in
xchg
shl
sti
std
jmp
loope
into
shr
aas
test
in
loope
xchg
enter
ror
ret
fdiv
imul
cmp
sti
cli
fmul
stc
ret
shl
cli
mov
and
lea
lret
aaa
enter
int
aam
cli
stc
test
jmp
lds
out
lret
repz
loop
lock
aaa
stc
cld
xor
aaa
aas
jmp
cmp
les
loopne
jecxz
fsubp
in
fmul
ret
incb
aad
leave
stc
cmp
cmpb
fadd
cmp
fdivp
cli
xlat
aam
call
in
repnz
aad
cmp
cld
stc
fcomp
cmpl
fdiv
jmp
testb
in
xor
hlt
rcl
out
sti
out
cld
lret
cmc
jecxz
lock
sarb
idiv
idivl
loop
xchg
loope
mov
int3
aam
cmp
int3
cld
testl
fildl
xchg
lock
shl
fnstenv
rolb
movb
jmp
leave
sarl
rcl
int
mov
sbb
jl
add
int3
cmp
cmp
incl
mov
enter
nop
jmp
xor
rcr
xlat
xlat
lret
out
rcr
loop
into
or
out
mov
fsubrp
lret
fmulp
repnz
ret
iret
int3
cli
iret
aam
repz
adc
incl
xchg
test
xor
out
not
fdivrl
jmp
icebp
jecxz
aad
cmc
test
xchg
int3
cld
hlt
mov
aaa
xor
fcmovbe
leave
clc
iret
not
int
addl
xchg
call
fildll
leave
in
in
ss
enter
test
fmul
shl
clc
in
test
in
sub
adcl
out
repz
int
sar
inc
test
out
xchg
xchg
adc
jmp
xor
cmp
fnstcw
aad
aam
mov
mov
jmp
rcl
loope
fcmovnbe
fdivr
repz
sti
sti
std
sar
cmp
xchg
ljmp
out
adc
ret
in
std
in
int
lret
rol
out
repz
loope
hlt
jmp
out
lock
cs
fcmovnu
leave
aaa
out
rcl
out
fldl
cmc
leave
enter
out
in
iret
cli
ss
jecxz
in
idiv
cmp
incb
fstl
shrl
shl
repnz
lret
repnz
fstpt
lock
jmp
mov
ret
jmp
out
cmc
rcl
sti
aas
call
loop
xlat
aad
repnz
ret
loope
jecxz
out
test
cmp
xlat
enter
fildl
icebp
loope
mov
fsubr
cli
test
jmp
iret
repz
sub
aaa
fscale
int3
int3
cmp
fsub
loop
les
ljmp
in
leave
leave
ss
aam
fdiv
aas
loope
cmc
fcomi
mov
sbb
fdivrp
shr
shl
repnz
fnstenv
cmp
shl
out
and
out
jecxz
lret
in
in
mov
in
cs
loop
shl
idiv
ds
cmp
addl
lret
orb
aad
xor
cmp
lret
out
aas
out
call
in
iret
mov
shl
int3
fisubrs
fsincos
div
fsub
cld
in
out
ds
roll
in
fadds
mov
loop
ljmp
in
xlat
rol
mov
flds
int
jecxz
aad
shll
lret
out
jmp
cmp
ss
aas
ds
rcl
repnz
jecxz
loopne
fisttpll
rcr
xor
stc
fcom
cs
cmp
and
fcmovne
leave
mov
popl
loope
shr
sti
cs
repnz
idiv
out
ffreep
aam
ds
sub
roll
ret
stc
cld
repnz
in
ret
xlat
orl
out
jmp
aad
icebp
cmp
xlat
idiv
lret
test
inc
fiadds
mov
nop
test
mov
ret
ds
rcr
lret
int3
xor
ss
fucomip
out
bnd
loop
lret
adc
xchg
mov
sub
in
fst
neg
shl
aad
mul
fadds
mov
filds
jecxz
leave
lret
aam
ds
rcr
test
cmc
aad
stc
loope
test
rolb
out
jmp
in
ss
ror
fldl
vshufpd
sbb
fcmovu
in
das
in
ret
ljmp
cmp
cmp
out
xlat
mov
lea
mov
ret
repnz
xor
fsub
fnstcw
out
fcmovnbe
lock
fcmovu
mov
lret
in
xor
aam
sub
cmc
cmp
fdiv
sub
rcr
clc
in
addl
ret
out
ror
into
in
bnd
cmp
int3
loope
in
shl
ljmp
sub
loope
sub
cli
repnz
in
std
cmp
xchg
stc
sti
fsubr
ret
jmp
ror
enter
jmp
fucomp
cmpl
mov
cli
lret
std
xchg
xchg
ficoml
sub
rcl
std
ror
cmp
stc
fiadds
fincstp
repz
movl
cmp
jmp
mov
leave
ret
int
leave
lret
and
scas
movsl
jg
cmpsb
add
sti
mov
loop
clc
frstpm(287
fcmovne
loope
jmp
lock
aad
not
lret
shl
faddp
out
xor
cld
loope
clc
fadds
icebp
aaa
repz
ret
lock
fcomi
call
cmp
jmp
mov
leave
loop
jmp
sub
in
shll
jmp
xor
repnz
mov
ljmp
in
test
loopne
rcl
sti
fcmovnbe
cmc
in
sarl
loopne
filds
in
sti
loope
clc
icebp
ror
int
shr
shrl
shr
lret
fcmovnbe
shl
adc
inc
ret
aad
orb
mov
into
das
cmc
out
xor
into
aad
lock
ljmp
hlt
cmp
in
iret
rorl
out
call
lock
idiv
shl
hlt
aad
loopne
cmp
cld
in
in
ljmp
fcmovne
iret
aam
cmp
clc
clc
loop
cmc
mov
cli
fmulp
fcoml
sub
aas
adc
lret
xlat
ret
stc
addl
xchg
lret
out
aam
in
lock
sti
fadd
xlat
adc
jmp
jmp
jecxz
into
ret
shll
iret
call
xor
sarl
fsub
clc
loope
out
xlat
lret
mov
faddl
jmp
aaa
icebp
enter
out
out
aas
ds
clc
ljmp
cli
xchg
xor
int3
std
in
aaa
int3
aad
add
in
jmp
out
cld
int3
out
xchg
test
cs
imul
fsubr
cmp
test
flds
sti
cli
icebp
mov
xchg
call
repz
std
xlat
aam
sarb
testl
in
filds
test
xor
jmp
cs
into
sbb
icebp
repnz
lret
jmp
xor
aam
ror
xor
repnz
repnz
sbb
xor
jecxz
std
lret
lock
aas
aad
xor
std
das
ss
icebp
cmp
cld
aam
ret
cli
loop
sti
int3
orl
sub
cmc
sti
fdecstp
ror
cmp
jecxz
loop
shl
loop
test
loopne
loop
jmp
loopne
call
fmul
out
sti
cmp
lock
in
in
aam
rolb
std
out
rcr
adc
xor
out
hlt
leave
cmp
ds
jecxz
div
aad
fndisi(8087
jmp
fmulp
mov
xor
stc
stc
in
cli
cmc
cmc
aad
loope
cld
rcl
in
fcmove
repnz
xchg
lock
cmp
cmp
repz
shr
ret
xor
xchg
clc
mov
mov
int
shl
hlt
xor
in
bnd
shl
repz
aas
stc
call
shl
int
iret
cs
aad
fsubr
aad
dec
ds
stc
ret
jecxz
cmc
faddl
cli
adc
lret
test
int
xor
cmp
in
fcmove
out
jmp
fsubr
leave
fmul
int
xchg
iret
mul
int3
ljmp
fucomi
fnstsw
aam
stc
loopne
mov
stc
cli
fadd
mov
cmc
cmc
jmp
stc
in
idiv
cmp
cmc
sar
jecxz
xlat
leave
mov
ficoms
fidivs
int3
in
fnstsw
fdiv
jmp
hlt
cld
addl
or
add
fmul
cmc
mov
xor
sub
enter
iret
xor
and
fsub
mov
mov
test
mov
out
ret
clc
lret
cmp
int3
sti
clc
aas
sbb
jmp
out
mov
ljmp
shll
ror
aaa
ds
lock
int
call
lret
call
loop
out
int
fcmovne
stc
fsub
xlat
cli
loope
loope
fdivr
fsub
cld
mov
out
enter
call
stc
fxch
in
fdivrl
cld
cmp
clc
xchg
sti
mov
fstl
loope
loop
loop
in
fstp
aaa
xor
aaa
shl
lock
rcr
cld
mov
mov
int
adc
lock
lret
shl
fsin
repz
ftst
std
cli
jecxz
iret
lock
out
jecxz
in
fnstcw
clc
cmp
out
imul
loopne
loop
test
out
test
je
movl
jmp
sarl
rcl
rcl
rol
ret
dec
add
jl
add
lock
xchg
jmp
iret
shl
jmp
xlat
cmp
std
cmp
xlat
cmp
xchg
mov
mov
call
jmp
hlt
leave
int
icebp
aad
in
sar
icebp
rcr
cmp
ds
std
mov
shl
xor
lock
into
xor
cmp
sbb
fucom
std
fsubp
out
in
in
addb
ss
hlt
call
rcr
loope
xchg
out
mov
rolb
aaa
hlt
cmp
cmp
fxch
fcomi
shl
cmp
cmp
lret
mov
fiaddl
fbstp
lret
rcl
repnz
icebp
iret
idivl
fdivp
addb
ds
lock
popl
xor
cli
lret
iret
rol
jecxz
fidivs
icebp
sar
xchg
test
jmp
cmp
std
mov
nop
repz
iret
xor
iret
sti
lret
cld
into
fstpt
filds
nop
mov
not
xor
in
aam
fsubrp
enter
fdiv
loopne
in
ret
fmul
faddl
out
aam
cmp
push
aad
clc
lret
ret
xchg
call
call
repz
mov
icebp
ljmp
int
std
xor
cld
lock
in
in
sbb
jmp
iret
loope
aaa
cmc
cmp
not
loope
clc
cmp
imul
fcmovu
mov
cld
sar
fucomp
hlt
jmp
jmp
into
ret
xor
adc
loopne
fld
in
xchg
test
ljmp
call
lret
shl
loope
xlat
loope
aam
loopne
fiaddl
lret
nop
fsub
enter
mul
shl
cmp
cmp
rol
roll
cmp
in
loop
repnz
xor
cmc
div
cli
xlat
clc
fdivp
ljmp
xchg
les
mov
aaa
shl
fstpt
in
cmp
loope
ror
xor
test
and
std
iret
fcomi
or
in
icebp
xor
into
lock
cmp
idiv
inc
stc
rolb
in
loope
mov
repz
int3
cmp
jmp
out
cld
mov
fcmovbe
ret
int
xchg
lock
jecxz
xor
xor
repz
fistpll
sarl
int3
jecxz
rcl
cmc
sbb
lret
mov
loop
xchg
rcl
loopne
enter
leave
xor
lock
shl
test
out
loop
jmp
in
out
loop
icebp
cmp
cmp
icebp
push
int3
sti
repnz
loope
div
imul
int
test
cld
cli
jmp
xor
in
xor
in
xlat
fst
cli
in
roll
fiaddl
xor
loopne
xor
enter
icebp
lock
cmc
cmp
cmp
jmp
std
ret
das
xor
xor
std
xor
xor
int
aas
ds
shl
test
loope
mov
cld
mov
out
sub
into
int
sti
shl
rcr
jecxz
fst
fprem1
fucomip
sti
mov
in
in
xchg
call
lock
call
ret
lock
clc
mov
mov
xchg
int
test
into
in
cld
std
cmp
in
sar
lds
loop
into
xchg
ljmp
xor
lret
rcr
fadd
fdivr
flds
fisttpl
ljmp
ss
cmp
into
hlt
rcr
repz
aam
in
jecxz
fldl
das
enter
ss
xlat
sarb
cmc
fsubrp
fcom
call
enter
aaa
out
rcl
fdivrs
xor
out
ds
rol
loope
lret
fcmove
jmp
mov
aam
das
lock
cmp
cmp
ds
int3
cmp
and
ljmp
loopne
test
lret
xor
lock
loopne
test
xlat
cli
in
rcl
mov
iret
iret
rol
repnz
xor
divl
out
leave
repz
idivb
cmp
cli
xchg
ffree
ljmp
ljmp
lock
aaa
cli
in
xlat
cli
add
idiv
fsubp
icebp
mov
jecxz
xlat
mul
into
ss
loope
not
test
call
int
mov
xchg
rorl
lock
jmp
sarl
aad
aad
aad
sbb
or
je
imul
scas
jg
cmpsb
add
hlt
aad
cmp
cmp
rolb
mov
xchg
fucomp
nop
icebp
mov
nop
vmovntpd
xor
aad
fsubrp
ret
std
cmc
out
shl
loope
cli
cld
loope
std
out
mov
xchg
enter
aam
cmp
fdivrl
test
xbegin
out
fcomip
cmp
into
cmc
enter
rcl
in
in
loopne
loopne
roll
addb
repz
fsubr
lret
cld
out
loop
iret
sar
idiv
sti
in
stc
iret
std
mov
jecxz
lock
int
hlt
imul
fcmovbe
fcmovbe
into
rcl
jecxz
test
std
ffreep
call
loope
in
out
ljmp
in
jmp
lock
xchg
fcomi
ljmp
fcomi
jmp
rcl
loopne
xor
aad
fmul
icebp
hlt
cmp
out
sbb
mov
loop
lret
xor
int
sti
xlat
rcl
loopne
jecxz
out
repz
test
mov
lock
xchg
aam
aam
xlat
std
ror
jmp
in
in
sar
in
or
fucomp
out
cmc
ret
loopne
cmp
rcl
fyl2xp1
cld
jmp
test
aam
fdiv
lret
int3
jmp
repz
ljmp
cmp
sar
cmp
rcl
repnz
icebp
incl
mov
ffreep
out
xchg
in
fcmovu
in
loop
stc
std
xchg
movl
repz
xor
lret
hlt
jmp
jecxz,pt
ret
xlat
mov
mov
xchg
stc
fsubr
jecxz
xlat
imul
xor
ret
leave
sti
or
xchg
call
mov
loop
jmp
mov
xor
in
sar
neg
cld
repnz
cmc
rcr
test
clc
or
int
loop
xor
xor
repnz
add
mov
lret
std
out
adc
sti
cmp
cmp
shl
out
cmp
rcr
sti
jecxz
enter
xlat
std
leave
orb
mov
cli
cmp
cmp
cmp
xlat
xchg
loopne
ret
fsub
test
rcl
inc
nop
aad
cs
std
cmp
in
cmp
out
mov
xlat
shl
xchg
jmp
test
loope
lock
int
rcl
fucomip
test
shl
rcl
mov
call
jmp
repnz
shl
repz
cmp
clc
ret
leave
les
in
out
mov
out
xor
xlat
clc
fnop
jmp
fnstsw
cmp
sar
and
ret
enter
shl
fsubp
jecxz
cmp
cmp
xor
out
cmc
repz
repz
lret
fcmovne
out
nop
into
fcomip
sub
into
cmc
leave
aam
aad
iret
fucomi
incb
in
mov
cli
jmp
icebp
into
xor
jmp
adc
iret
cli
ret
icebp
jmp
enter
loope
shl
shl
in
jecxz
sarb
cmp
icebp
out
fninit
out
out
aad
xchg
out
in
loopne
mov
xor
aad
sti
fnstenv
rcr
leave
cmp
fcmovb
ds
in
shl
clc
aam
or
iret
xchg
fucomp
mov
in
lret
lret
lret
cmp
test
stc
sbb
vpmaxsw
call
out
cmp
stc
jmp
jecxz
ss
out
ret
fadd
aas
loopne
call
fucom
out
xor
aad
lret
fsubr
cmc
hlt
cmp
out
fnstsw
loopne
stc
mov
mov
ss
das
imul
rcr
sarl
jecxz,pt
mov
jmp
mov
loopne
in
cli
shr
in
shl
ret
cld
xlat
ret
fimull
xchg
fdivp
aam
hlt
lret
hlt
enter
fdiv
ds
dec
hlt
aam
rorl
adc
jmp
test
rcr
cmc
lret
clc
into
shl
orl
loope
jecxz
jecxz
fxch
sub
lret
fidivrl
ljmp
jmp
jmp
in
dec
jmp
test
ss
cmc
ljmp
cld
lock
fadds
out
jecxz
out
out
ret
sti
out
cli
xlat
cli
in
rolb
repnz
add
add
ret
fcmovnu
aad
inc
pop
inc
cmp
movsl
dec
lods
mov
jl
add
clc
testl
loope
jmp
lret
xor
mul
sar
sar
roll
xlat
cld
neg
in
xchg
ror
fucomi
xlat
testl
std
idiv
hlt
addl
in
xor
out
lret
fcomp
cmp
cli
in
aad
sub
shr
mov
roll
fucomi
cmp
cmc
ret
hlt
rol
clc
testb
out
orb
aaa
ss
lds
out
out
lret
fcmovu
out
xchg
and
loop
lret
test
cmc
ljmp
in
cmc
lock
std
shl
xlat
lock
ret
xchg
in
test
out
rol
jmp
std
ljmp
in
jmp
cli
out
mov
cmc
into
xor
in
fcomp
call
rcl
jecxz
repnz
sar
out
loopne
out
fstl
in
aad
rcl
cmp
aaa
int3
cmp
test
into
loope
lds
ror
lock
shl
in
in
rcr
fcmove
shr
ds
aas
cli
ljmp
call
rcr
rcl
icebp
fcmovne
cs
cmp
aad
out
rcr
xlat
out
out
faddl
ret
test
fmulp
lock
div
fdivr
icebp
xor
mov
int3
xchg
in
xor
out
shlb
cmp
repz
sti
in
xlat
xchg
call
out
iret
aam
in
iret
repz
cmpl
cmp
dec
fcom
std
in
jmp
mov
cs
rcl
cld
sti
ljmp
clc
lock
ljmp
sub
aaa
iret
iret
loop
xlat
out
cmp
shl
std
into
shl
fsubp
fcmovnb
in
jmp
in
int3
aad
sub
in
shl
ss
and
in
mov
loopne
fscale
icebp
shr
lret
std
xchg
iret
ret
out
iret
cmp
rol
ret
hlt
rol
test
mov
shl
xchg
cld
xchg
ror
call
leave
clc
out
rol
aam
fcmovne
clc
testl
loope
ljmp
xlat
xor
in
xlat
rcr
lret
cld
jmp
shl
fsubp
mov
vpsrlw
shll
xlat
in
enter
jmp
rcr
shl
into
aam
cmp
cld
movb
out
fdivs
xor
hlt
cmp
call
in
ror
fdivr
ffree
enter
out
in
nop
xchg
call
fsubr
into
into
leave
fcmovu
clc
rcr
out
rcl
in
ljmp
lock
loop
xor
rcr
jmp
sti
out
into
out
repnz
test
in
iret
lret
shl
sar
not
leave
fmul
repnz
rolb
in
call
out
lret
rorl
fcmovu
out
iret
lret
cmp
ret
fcmovb
lock
cmpl
jmp
in
in
das
fldcw
shll
lock
cmp
rcl
cld
fcmovnb
aam
loope
cmp
stc
sti
loopne
out
xchg
in
in
xor
repz
aas
call
call
sti
cld
shl
testl
test
ror
ret
xlat
clc
and
jmp
xchg
test
icebp
xor
clc
int
lret
shl
in
ds
repnz
xlat
rolb
leave
sub
cmp
fidivrs
repz
xor
lret
in
shl
hlt
aas
out
jmp
in
hlt
shl
enter
jmp
clc
shl
aas
cmp
addb
loope
int3
int3
mov
int3
in
neg
out
stc
shl
sti
loop
sti
into
testl
fucomip
cmc
in
out
int3
enter
fnstcw
cmp
aas
or
std
fsub
call
xlat
leave
int3
int
sti
lret
jmp
jecxz
sti
adc
hlt
jmp
mov
stc
ret
ret
in
out
cmp
adc
mov
jmp
fcoms
mov
shll
cli
loop
out
fucomip
mul
shll
test
jmp
stc
test
loop
adc
add
rorb
insb
push
add
mov
orl
mov
xor
jmp
xlat
int
ret
ljmp
jg
cmpsb
add
out
in
loope
xor
ljmp
cld
fcmovnu
cli
neg
stc
sarl
and
fcmovnu
call
aad
shl
lret
out
test
ljmp
repz
stc
hlt
jmp
out
out
cmc
out
les
ss
std
repnz
shl
rcl
stc
fndisi(8087
cli
fst
in
popl
mov
shl
enter
out
std
xor
ds
icebp
cmp
or
cmp
lret
sub
ret
loopne
sub
dec
repz
hlt
call
in
call
int3
lock
int
iret
int
iret
hlt
repnz
repz
test
aam
les
adc
cmc
shl
aad
enter
lret
ds
ret
test
testl
rolb
lret
in
fdiv
in
sbb
into
out
fiaddl
test
xchg
out
loopne
cs
in
rol
fcmove
repnz
loope
out
adc
in
call
adc
ss
ret
ret
cmp
fcmove
shr
rcr
xlat
sar
adc
test
loope
fmulp
into
in
in
ret
in
ret
call
jmp
shr
rol
jmp
out
test
mov
int
icebp
ror
stc
sub
stc
ljmp
repz
fildl
test
xchg
out
enter
ror
leave
cli
ds
cmc
vpmaddwd
ret
loope
out
fcmovb
fists
lret
fcmovu
fsubr
cmp
fbstp
repnz
jmp
cli
out
out
loopne
jmp
aam
not
fcomp
fstp
out
fsincos
fcmovu
fcmovb
jmp
fisttpl
sub
out
ds
rcl
enter
lock
adc
test
lret
sti
clc
mov
loopne
aad
shl
cmp
test
cmp
fmuls
int
ljmp
icebp
ds
iret
xlat
cmp
test
shl
fcmovb
shl
mov
lret
mov
in
in
repz
in
imul
xor
cmp
shr
sar
idivb
iret
shr
in
rol
cld
ffreep
xlat
xchg
mov
addb
cs
shrl
out
out
fsubp
in
loopne
fcom
jecxz
ljmp
out
call
cmp
cmp
fnop
addl
mov
rcl
call
cmp
not
std
lock
rolb
clc
jmp
mov
out
lret
fxam
stc
shr
cmp
enter
int
cli
out
adc
jmp
out
xchg
in
fld
leave
sti
cld
idivl
ss
loope
repz
in
test
test
iret
adcb
repnz
xor
iret
hlt
push
sti
lret
sbb
aas
aam
ret
loop
out
jecxz
in
test
int
divb
cmp
out
rcr
aas
cmpb
loopne
fadds
fmul
in
jmp
ljmp
enter
iret
aas
fsub
call
test
jmp
adc
fcmovne
orl
aad
stc
sar
and
repz
cli
sar
mov
jmp
out
aad
xor
call
rcl
or
cmp
repz
test
icebp
in
int3
addb
rol
lret
xor
cmp
ret
sar
test
addl
shr
idiv
enter
lret
out
cmp
fcmovb
loop
loope
lock
ret
hlt
aaa
fsub
icebp
aam
cli
sarl
rol
jecxz
mov
ret
idiv
loope
les
enter
aam
enter
aad
cli
test
mov
fdivr
mov
fld
icebp
xchg
shl
out
shl
sti
cmp
into
jmp
cli
test
mov
int3
out
cli
test
in
xor
repz
xor
cmp
in
addb
lret
mov
out
fsubp
out
in
out
cmp
ret
iret
rcr
cmp
ljmp
in
fdiv
loope
lret
lret
fadd
sti
loop
jmp
xlat
cmp
int
ret
loope
rol
mov
in
imul
int
call
rcl
jmp
add
add
int
fst
fcmovne
xor
pop
add
jl
out
int3
repnz
ss
repnz
adc
clc
and
addb
loopne
repz
out
div
cmp
aad
cli
cmc
in
enter
cld
in
sti
into
out
int
sub
ljmp
out
xor
out
cmp
call
sub
std
in
into
cli
in
test
jmp
lret
xor
lret
not
iret
int3
rcr
cld
fmulp
cmp
incb
xchg
xchg
repnz
xor
fxch
sar
xlat
incb
rorl
testb
repnz
clc
cmp
cmp
cli
clc
ret
test
clc
fmul
mov
mov
cmc
xor
shl
cmc
fcom
into
sti
lret
loope
vshufps
ljmp
xchg
cmc
xchg
repnz
hlt
out
iret
sub
int3
iret
ljmp
faddl
test
loope
jmp
jmp
lret
lret
clc
repnz
iret
neg
test
cli
in
ljmp
in
lret
iret
ljmp
cli
sti
cli
and
cli
xchg
stc
not
fxch
clc
orl
loop
int
in
into
sti
cmp
imul
int3
in
xchg
in
cld
bnd
les
jmp
int
lret
out
fcom
sti
fdivr
fsub
sti
fdiv
out
fld1
addl
xchg
out
out
rcr
in
xor
shr
shl
fcmovu
fdivrl
ror
loop
xlat
out
mov
fmull
repnz
clc
jmp
lret
out
repz
xlat
fcmovnb
test
lret
in
iret
or
rcr
xor
jmp
cmp
rcl
aam
ljmp
lret
out
int3
xchg
hlt
int3
shr
aad
sti
neg
cmp
ffree
filds
fcmovnb
xlat
in
mov
rcr
xor
hlt
aaa
fdiv
xor
not
xlat
cmc
test
fisttps
lock
xor
cmp
aam
lret
idiv
test
vpsraw
lret
filds
out
std
out
repnz
hlt
jecxz
xlat
cmp
jmp
loope
sbb
fiadds
mov
nop
jmp
jecxz
iret
sar
cmp
in
test
mov
mov
int3
xchg
in
lret
fcmovne
repz
imul
lret
fdivl
loope
loopne
fadd
leave
lret
enter
jmp
cld
movl
and
fcmovnbe
out
fdivr
nop
out
jmp
cs
call
mul
fiadds
repz
clc
fildl
out
in
rcl
lret
cmp
repnz
cmp
xlat
fldl2t
cmp
mov
in
mov
loop
shr
int
xor
les
sti
shlb
fidivrs
rolb
call
in
stc
xchg
xchg
shl
ljmp
cld
cld
hlt
xlat
cmc
incl
shl
jmp
int3
fcmovne
fucomp
xchg
shll
loop
in
sti
ljmp
clc
jecxz
incl
fmul
cli
fst
int3
dec
loope
clc
xor
sarl
cmp
loope
fcmovnb
loop
fmulp
fmulp
lock
hlt
in
lret
out
in
iret
not
out
sti
shr
rol
leave
clc
fucom
xabort
lret
in
addl
lret
cmp
ret
in
sti
xchg
test
clc
lret
xchg
in
ror
out
jecxz
jmp
int3
fdivrs
cmp
cmp
aam
les
adcb
sub
xlat
fdivl
into
fdiv
aas
cmp
aas
filds
rcr
mov
divl
cmp
cmp
loop
cmp
leave
fucom
cli
mul
jmp
mov
in
cmc
aam
iret
aam
aad
aad
out
out
in
cmc
jmp
loope
test
std
xchg
inc
iret
xor
cmp
cmp
shl
aam
cmp
rol
loopne
aam
std
fiadds
xchg
cmc
out
hlt
aad
fmul
cmp
test
ret
not
std
cli
ljmp
and
div
cs
fucomi
clc
shl
lret
fsub
std
stc
cmp
jmp
test
out
xor
loope
out
repz
shr
aam
aad
pop
jmp
lret
ret
fstpl
fidivrl
lahf
pop
inc
stos
inc
jg
cmpsb
add
cli
stc
loop
enter
jmp
rorl
out
cmp
cmp
hlt
jmp
fmul
test
cli
aam
aam
vcmpss
fdivp
xchg
roll
enter
rcl
stc
stc
cmp
xor
incl
fadds
out
ljmp
cmp
cmc
cli
int
cld
test
testl
out
icebp
out
lret
out
shlb
call
ds
cmc
sar
cld
inc
leave
lds
loopne
xlat
aad
cmp
lock
into
call
aad
aam
ds
stc
jmp
xchg
xchg
aas
xor
repz
call
call
idivl
cmc
addl
fimull
xlat
int
sarl
out
stc
std
loope
out
mov
flds
cld
leave
div
in
lret
rcr
int3
sti
xor
shl
flds
lret
hlt
and
test
call
jmp
test
cli
vpminub
sti
loop
xchg
lock
hlt
xor
lret
shl
cmc
int
cmp
cmp
ret
jmp
test
fcomp
cli
sar
mov
hlt
stc
sti
cmc
fdivr
cmc
aad
fdivr
fadd
repz
and
aam
fdivr
ret
xchg
jmp
cli
out
cld
int3
lock
fneni(8087
icebp
jecxz
ss
xchg
xchg
out
mov
sarl
repz
out
loope
hlt
lret
into
and
in
stc
lret
lret
xchg
out
out
shl
in
aad
iret
enter
ljmp
icebp
fcom
out
out
fcmovnb
in
enter
ss
call
ss
lock
dec
sbb
ror
mov
cld
loopne
jecxz
shr
sarl
repz
sti
into
xlat
call
addb
loope
fabs
clc
out
test
out
xchg
aaa
idiv
int3
xor
cld
xor
aas
ret
ret
stc
xchg
enter
enter
out
in
fdivs
fcmove
in
not
sar
cld
aad
cmp
repnz
hlt
xchg
clc
xchg
shr
out
shl
loope
aam
in
int
cli
in
cmp
in
shl
in
les
loop
xor
xor
aam
leave
cld
idivl
out
ret
out
fstpt
test
out
out
xchg
xor
repz
lret
lret
jmp
out
stc
roll
out
decl
mov
in
int
fcmove
sar
adc
lret
repz
in
lock
fisttpll
cmc
cmc
sti
stc
aam
fldl2e
cmp
and
les
jmp
out
call
aaa
xor
test
loopne
ds
sti
in
leave
loopne
in
sub
out
jmp
cmc
repnz
faddl
jmp
xchg
int
iret
addl
loop
cmp
repnz
out
cli
repnz
out
mul
shl
ret
call
fstp
mov
jecxz
loopne
cmc
jmp
in
hlt
cmp
out
iret
add
or
call
out
fmul
clc
cmp
shl
out
aad
shr
std
cmc
call
popl
out
in
sub
shr
fsubrp
ror
jecxz
xor
loope
stc
test
incb
loope
out
repz
lock
fidivrl
cmp
fst
loop
cmp
leave
test
jecxz
in
int
aaa
ret
jmp
in
jmp
cmp
out
out
inc
repz
fmulp
repz
aad
vpmaddwd
rcr
out
cmp
xor
sarl
into
xchg
mov
xchg
shl
aad
xor
sbb
fcomp
aas
aam
ljmp
loopne
xchg
loope
int
fstpt
out
out
into
loope
aad
idiv
shr
fcmovnu
fmul
and
ljmp
shr
ljmp
mul
sbb
jecxz
leave
cli
mov
out
in
lret
aad
cmc
aaa
out
lret
in
fldl
std
cmc
fildl
lret
fdivp
jecxz
xor
ret
cmc
lret
enter
cli
rcr
shl
loop
xlat
test
pop
leave
ret
mov
jmp
aam
fcmovnu
mulb
in
xchg
aam
jg
cmpsb
add
loope
cld
mov
in
neg
xor
int
xor
into
shr
stc
xlat
loope
neg
in
ljmp
xor
ret
out
cmp
sarb
aas
fimull
int3
and
mov
stc
aaa
fucom
cmp
sar
rcl
inc
loop
dec
jmp
leave
mov
fiadds
clc
int
cmc
sti
sarb
sbb
xchg
mov
std
sbb
call
mov
out
repnz
xlat
enter
into
icebp
clc
lock
shl
fldl
enter
shl
aad
int3
int
ljmp
ror
icebp
cli
cli
jecxz
icebp
ds
clc
cmc
ljmp
xchg
mul
shll
lock
cmp
sar
aam
xlat
cmc
stc
testl
aad
in
into
clc
clc
in
enter
into
into
out
xlat
in
out
shl
jmp
lds
iret
jmp
xor
xor
xor
cmp
ret
and
jecxz
ret
mov
addl
aam
ss
in
cmc
ror
hlt
cmp
fadds
lret
lret
in
and
out
sub
lret
sti
loopne
cmp
cmp
lock
call
fdiv
fcoml
xchg
iret
aaa
jecxz
xor
enter
fucomi
cmp
icebp
loop
faddp
fcomi
cli
in
cld
std
out
mov
jmp
cmp
sub
icebp
idivl
aam
cmp
fildl
out
cs
stc
iret
aas
into
shr
test
into
fdivr
loop
jmp
jmp
in
fmull
xor
cmp
ror
fldlg2
shl
out
jecxz
loopne
out
mov
orl
ljmp
clc
aam
cli
ret
xlat
sar
in
fcmovnu
jmp
adcb
jecxz
xor
dec
out
cli
repnz
ret
les
mov
call
int3
icebp
icebp
shl
lock
cmp
aaa
not
aad
neg
cld
in
vshufps
xlat
xchg
fcmovne
out
xchg
aad
iret
loope
out
out
stc
iret
aad
cld
addl
sti
sub
lea
jmp
xor
lret
cmp
cli
roll
cmp
rcr
testb
xor
lds
aas
hlt
hlt
imul
iret
sarl
sti
mov
call
out
jmp
out
aam
repnz
lret
xor
lret
int3
aaa
clc
out
ret
repnz
clc
icebp
call
xor
int3
xor
flds
sti
icebp
cmc
fucomi
testl
lret
jmp
ss
rcr
cmp
cli
jecxz
fcomp
xor
test
sti
cli
test
sarb
xor
aas
test
cmp
sar
fcmovbe
xchg
std
fcmove
test
cmc
xchg
inc
sub
neg
aas
aad
repnz
test
sti
hlt
fdivrs
out
fucomip
loop
std
lret
fprem
in
hlt
out
int
xlat
shl
in
repz
aam
cmc
aam
test
xchg
aad
jmp
lret
in
ljmp
xlat
mov
fisttpl
test
hlt
ljmp
icebp
icebp
hlt
repz
repz
hlt
in
hlt
out
addl
and
int
out
hlt
out
aad
aam
cli
ljmp
jmp
xchg
lret
int
mov
in
xor
loopne
jecxz
iret
in
in
sti
cmp
into
fadd
rcl
ret
stc
in
lret
enter
roll
hlt
cmp
lock
and
out
cmp
in
xlat
ffreep
mul
loope
jmp
mov
ljmp
sti
ror
clc
cmp
out
cld
hlt
ljmp
adc
out
xor
out
out
repnz
aam
aam
test
ljmp
rcl
icebp
in
fdivrl
sar
shl
aas
repz
addl
in
call
aad
fcmovnb
iret
lret
cmpl
ret
test
clc
test
add
lock
jmp
ret
loop
iret
divb
fdivrp
std
sar
stc
loop
mov
iret
nop
adc
jmp
add
cmp
je
mov
jmp
int
aas
ror
rcr
fcmove
mov
js
fwait
xor
jle
jg
cmpsb
add
aad
xlat
out
int3
idivl
filds
aam
loopne
cld
out
mov
ss
call
cmp
fcmovbe
cli
test
fucomi
aam
out
ret
int3
jmp
xchg
mov
aad
in
aaa
in
lret
jmp
clc
test
and
xor
lret
sbb
mov
lock
shl
xor
ror
cmp
int
xor
jecxz
rcr
rcl
fcmovnb
out
shr
faddl
icebp
cmp
sar
filds
jmp
loop
out
call
or
int3
in
iret
fucomi
leave
std
out
rcl
aas
rolb
rol
sti
iret
leave
std
out
test
out
repz
out
into
repz
out
fiadds
ret
jecxz
fsubp
mov
xchg
mov
loope
loopne
jmp
aaa
enter
jecxz
fsub
shl
repnz
mov
xchg
loop
in
out
not
xor
in
shlb
cmp
shl
stc
fcomip
repnz
enter
mov
mov
jecxz
shr
out
lret
shl
int
xor
rcl
idiv
in
neg
fcmovnbe
fiadds
rcr
into
aam
lret
ss
lret
ss
repz
fcomp
repz
mul
sti
call
ljmp
fmul
xlat
fcmovu
cmc
rcl
out
loope
cld
clc
enter
lret
in
xchg
mov
out
enter
shl
not
aad
int3
xchg
clc
ret
clc
xchg
cld
shl
in
sub
in
fcmovnb
icebp
leave
int3
repz
fldz
shl
sti
test
out
fcmovbe
fcom
out
std
test
sar
jmp
sti
in
lret
clc
cmp
sti
ds
aam
push
bnd
aam
lret
enter
loope
xor
hlt
in
xor
iret
cmp
test
out
fdivr
in
cld
repnz
div
hlt
leave
fcom
lock
cmp
xlat
jmp
iret
lock
aas
cli
in
ret
les
in
fadd
ljmp
sar
cmp
fiaddl
test
test
jmp
xchg
int3
movl
repz
int3
hlt
in
loopne
clc
call
ror
subl
loopne
filds
std
rol
fmulp
xchg
mov
enter
ss
or
into
fsub
xchg
jmp
lea
xchg
fiaddl
xor
jmp
repnz
xlat
cmp
in
jmp
out
mov
icebp
idiv
repnz
shll
cmp
clc
stc
loop
fst
push
loopne
addl
into
fsubr
lock
shr
clc
in
div
xor
ret
aad
fucom
sti
xor
mov
ljmp
into
fcomi
call
loopne
rol
xchg
les
test
das
rcl
fnstsw
cld
leave
xor
roll
fcmovu
cld
clc
xchg
std
jmp
xchg
xchg
out
ds
repz
loopne
out
cli
rcl
xchg
cli
shr
out
out
mov
aam
ror
ss
icebp
out
cli
call
inc
ret
clc
aam
mov
clc
lock
aam
idiv
std
cmp
in
fcmovbe
out
int3
out
std
jmp
lock
mov
and
xchg
out
in
hlt
out
leave
ljmp
repz
cmp
cmc
aad
fadds
in
faddl
mov
shrl
out
xor
lret
cmp
into
xlat
cmp
ds
aad
jmp
out
fadd
cmp
test
into
rcl
ljmp
sti
fldlg2
loopne
mov
std
sub
ds
incl
fprem1
repz
out
jmp
ds
int
out
cld
shl
test
fucomp
test
lock
xchg
test
aad
lds
lock
ljmp
ret
stc
rol
sarl
ljmp
into
int3
aaa
lock
into
xlat
aam
aad
fcmovu
xor
xchg
fadd
ljmp
enter
ret
call
sti
cmp
hlt
icebp
stc
ret
hlt
aas
loope
out
loopne
flds
add
lock
in
out
incb
cmp
in
jecxz
call
int
jmp
loope
mov
ljmp
div
idiv
enter
and
lock
decl
add
add
rol
iret
aad
aad
adc
lea
push
push
dec
jg
cmpsb
add
ljmp
decb
mov
aaa
aad
repnz
clc
cmp
loopne
repz
rcr
in
loop
lock
out
out
aaa
in
cmp
cmp
fincstp
rcl
fxtract
fdivr
repz
lret
aad
mov
ror
xor
lret
in
out
out
aaa
int
ffreep
cld
cld
cmc
jmp
sar
test
std
jmp
shll
sti
hlt
fnstcw
cmp
rcr
shr
fdivrp
xchg
lret
jecxz
ds
xor
out
int3
xlat
sarl
cmp
cmp
out
loope
enter
xchg
xchg
jecxz
aad
out
iret
in
idiv
fcmovnu
jmp
stc
jecxz
testb
cli
xchg
out
adc
in
sar
lret
int3
jmp
aas
jmp
in
leave
jmp
jecxz
leave
les
xlat
sti
jmp
test
xlat
ds
jecxz
repnz
mov
ds
aaa
lock
aaa
xor
ret
repz
lret
in
int3
fcomip
call
icebp
in
into
xor
fscale
repnz
lret
in
and
aad
sbb
and
xchg
loopne
xorb
xor
vpsrld
out
fcmovu
cmp
cmp
in
jmp
shr
clc
orb
ror
in
out
iret
call
cmpl
stc
test
hlt
out
lret
stc
out
lret
ljmp
cmp
idivl
cmc
lret
out
sub
faddl
sub
test
fst
lret
rcl
rcl
pushl
rcl
aam
fdiv
div
fcomp
add
fcmovnb
jmp
out
xchg
ss
out
xor
ss
repnz
stc
std
in
repnz
in
std
enter
icebp
test
divl
cmc
ss
cmp
out
cmp
shl
hlt
neg
in
out
xchg
call
leave
sti
idiv
fbstp
lret
icebp
aas
aam
clc
ret
addb
lock
clc
ss
xlat
cli
lock
fxam
or
repz
std
icebp
cmc
sub
xlat
rcl
call
sarl
cmc
cmp
hlt
flds
loopne
in
xchg
cli
ljmp
in
out
sarl
xor
hlt
cmp
xor
dec
cld
mov
xchg
test
aam
icebp
int
lret
filds
add
filds
call
fsubrs
xor
adc
ret
loop
fldpi
sti
test
popl
xchg
cmp
shll
aam
jmp
cmp
shl
std
out
mov
fmuls
rorl
hlt
hlt
cmp
fidivs
fdiv
ret
call
lret
fucom
repz
cmp
cmp
sti
cmp
fucomip
icebp
jmp
mov
mov
in
loopne
aaa
xor
in
aaa
xor
loope
aad
fcomip
icebp
fsubr
in
enter
out
in
enter
iret
out
das
clc
fsub
xor
in
out
fistpll
cmpl
mul
stc
idiv
xlat
test
leave
mov
in
and
xlat
xlat
shr
out
cs
sarl
fdivrl
ds
loopne
jmp
enter
shl
loopne
xor
shlb
xor
aaa
idivb
idivb
cmp
out
fdivr
int
iret
mov
ds
idiv
rolb
fadds
clc
xchg
loope
loope
aad
rcl
shl
fucomi
in
aam
xor
std
stc
cmp
fadds
jmp
fisttpl
sub
std
leave
out
xor
repnz
icebp
in
aam
xchg
out
std
enter
test
jecxz
test
ret
cs
cmp
std
iret
mov
mov
imul
jmp
fcmovnb
jecxz
jmp
repz
out
sti
jmp
loope
fildl
mov
sbb
iret
shl
shl
cmp
in
rolb
out
ret
neg
ffree
in
loop
xchg
ret
loop
fidivrl
aaa
fdivrl
into
clc
ds
in
enter
std
out
call
ss
repnz
cmp
movb
icebp
out
in
push
call
add
int
int
mov
ret
push
jg
cmpsb
add
in
mov
int3
add
int3
test
enter
std
enter
ss
cmp
fldl2e
fcmovu
int
clc
jecxz
mov
sti
ror
sti
dec
hlt
xorl
std
fdiv
in
in
out
jmp
xchg
ljmp
repz
enter
in
in
iret
cmc
hlt
addl
ror
xchg
das
xor
xor
cmp
int3
fcomp
test
clc
test
mov
in
jmp
leave
ss
call
rcr
call
aas
xchg
fcmovu
fdivrp
sti
clc
ljmp
vpaddsw
rcr
int3
shr
cld
in
cld
xor
fcmovnbe
ffree
test
lret
incb
cmp
aaa
icebp
out
fdivr
cli
lret
in
rcl
stc
testl
lret
rcl
cmp
ljmp
addb
loopne
fcmovu
in
jmp
add
lock
in
lret
fld
frndint
clc
test
cld
aam
fmulp
leave
shr
cli
mov
hlt
aam
xor
aad
rcl
cld
xlat
loope
in
ret
repnz
sbb
loop
repz
into
fcmovu
repnz
call
into
inc
mov
and
in
mov
loopne
xor
int3
int3
aad
out
out
call
aas
stc
div
in
loopne
leave
std
test
xlat
out
iret
nop
into
loop
xchg
fnstenv
repz
cmp
icebp
xor
std
out
xor
into
repz
cmp
test
mov
iret
jecxz
leave
fmull
enter
in
xor
cmp
les
loop
ljmp
into
shl
leave
xor
aad
fsincos
cmc
int3
out
loope
loopne
rcr
loopne
fildl
nop
xchg
repnz
std
out
sarl
ljmp
rcr
mul
mov
out
out
out
ror
shll
fcom
test
cmp
fnstcw
fucom
sub
test
fcmove
fstp
loop
out
ljmp
xor
out
repz
in
in
in
fucomp
test
lret
int
int3
aaa
hlt
fcomi
div
jmp
sar
std
clc
aam
loop
jecxz
int3
loope
sub
mov
ljmp
out
fdivrp
fcmove
cmp
cmp
bnd
cld
test
out
incb
jecxz
lock
jecxz
fsub
hlt
int
lock
repnz
sbb
ljmp
xor
repz
out
stc
aas
ffree
fabs
sti
clc
in
out
loop
out
jmp
cli
loopne
cmp
aaa
jecxz
xlat
jmp
clc
lock
in
aam
roll
in
fcomi
loopne
int3
loopne
fmul
lock
stc
fsubrp
cli
repnz
cmp
ret
in
xchg
fisttpll
xor
int
xor
lret
into
xlat
shr
neg
shl
jecxz
fndisi(8087
mov
ljmp
clc
cmp
in
xor
lret
fucomi
loope
sbb
hlt
fsub
ljmp
repz
in
aad
shrl
ror
das
jmp
cmp
cmc
fadd
fadds
jmp
mov
fdivr
nop
fildll
xor
out
aas
test
in
jecxz
sti
call
fimull
xlat
ret
xor
xor
fucomi
cli
ljmp
fldl
loop
les
int3
hlt
cs
ss
jmp
std
std
fsubp
flds
cld
jmp
loope
jmp
shl
ljmp
lret
bnd
in
cmp
fadd
test
mov
int
adc
test
jmp
repnz
and
xlat
in
leave
ret
jmp
decl
shr
int3
cli
out
aaa
cmp
ds
aam
testb
popl
repnz
shl
not
cmp
out
cmc
repz
aad
rcl
clc
cli
cld
fstp
loope
int
xchg
out
sub
loopne
fld
cmc
aas
aad
add
clc
ffreep
cld
mov
loop
shl
jmp
jmp
in
enter
cld
lret
hlt
loop
xlat
fimuls
mov
das
ror
lret
icebp
clc
xor
out
clc
clc
stc
jmp
call
nop
xchg
cld
testl
clc
je
mov
jmp
int
aad
fstp
ffree
push
jl
push
jl
jg
cmpsb
add
sarl
lock
hlt
cmp
xlat
aad
idiv
lock
ds
loopne
div
loope
sti
out
incb
in
lock
shlb
icebp
into
fcomp
fdivrs
ret
mov
xchg
out
loopne
aad
xor
int3
xor
in
out
cmp
clc
in
roll
and
fsub
out
icebp
repz
rcl
xlat
cli
ror
fistpll
shll
xchg
jmp
lret
aas
cli
cld
xchg
lea
fyl2xp1
enter
lock
cmp
les
call
cli
fldl
loop
in
xor
rcl
fmulp
ljmp
rorb
mov
in
iret
decl
ljmp
clc
cmp
stc
cld
in
roll
lock
xchg
loopne
aam
in
jmp
out
loopne
shl
jmp
fmull
enter
cs
aaa
jmp
enter
xchg
in
repz
ljmp
rorl
clc
repnz
in
cmp
aas
fiaddl
in
xchg
fimull
int
xor
call
ss
stc
out
fnstenv
out
clc
fcomp
in
xchg
xchg
icebp
iret
cmc
aam
vcvtss2si
iret
aam
rcl
repz
rolb
les
repz
sub
cmp
xor
xlat
xor
jmp
ret
div
mul
repz
loopne
test
loope
and
or
div
jecxz
lret
out
cmp
imul
cmp
icebp
in
cmp
ljmp
test
jmp
xlat
rol
in
ljmp
sub
aad
std
loop
leave
rolb
jmp
shl
ret
xor
cmp
hlt
loope
loop
fld
jecxz
loope
mul
loop
into
mov
filds
cmp
hlt
repz
cmp
fnstcw
fmul
into
loopne
mov
mov
faddp
xchg
int
out
lock
out
ljmp
rcl
std
into
ret
fxch
mov
aam
sti
lea
rcl
hlt
xlat
enter
in
into
xlat
push
loopne
fcmovnbe
in
loope
xchg
lock
ljmp
out
sub
lret
out
fcmovnu
xlat
ret
cmp
cmc
mov
test
sub
in
int3
repz
loope
cld
incl
cld
fimuls
test
into
out
lret
hlt
rolb
aad
cli
aas
aad
fcmovnbe
loop
loope
loop
cmp
xor
xor
cmp
not
test
ds
clc
fcomi
fadd
fadd
fsub
lret
fists
xor
jmp
in
faddp
fneni(8087
mov
mov
lret
test
mov
cld
jecxz
out
repz
shr
xlat
in
fabs
std
ret
xlat
repnz
in
cld
aam
aad
stc
adc
jecxz
lret
xchg
ds
icebp
cmp
fptan
jmp
shl
sarb
hlt
aam
xchg
fucomip
cli
repz
call
ror
xor
cmp
loope
fildl
out
rorl
lret
loopne
xor
fcmovbe
icebp
lret
aam
shl
roll
call
xchg
mov
lock
loop
rcl
ljmp
in
fcmovu
add
jmp
out
out
fucomi
jmp
xor
jmp
xlat
cmp
xor
test
cmp
faddp
xbegin
sbb
xchg
cmp
cmp
icebp
xorb
aad
ss
cmp
in
orl
lock
les
loop
cld
std
stc
icebp
cmp
aas
xor
ret
aad
loope
fisttpl
shl
in
stc
xor
leave
cld
shl
into
int3
iret
int
out
loope
enter
int
clc
cli
fldl
xlat
cli
repz
xlat
aad
rcr
xor
cmp
out
repz
aaa
cmp
out
fnstsw
loopne
fcomi
rcr
fcmovnb
in
enter
enter
int3
shll
int
sti
int
mul
out
repz
mov
lret
int
in
test
iret
rcl
shll
sti
stc
not
cmp
fcmovnbe
xlat
aam
in
fdiv
jmp
xlat
clc
fldl
orb
lock
cmp
std
xorl
jmp
mov
mov
mov
mov
xor
jmp
aam
ror
rcl
fld
sub
andl
fucom
shr
ss
xchg
out
loope
xchg
out
fdivl
hlt
stc
stc
repnz
ss
rol
adc
fdivrs
fldl
call
icebp
jecxz
fmulp
enter
in
aam
xlat
test
cmp
repnz
fcomi
jmp
ljmp
loope
das
ss
in
cmp
test
ds
in
fsubp
aam
in
ljmp
out
rcr
ljmp
cmp
in
loop
cmp
loop
cld
mov
stc
decb
int3
lret
loop
in
aam
aad
in
loopne
test
incl
lret
leave
clc
orb
shl
cmc
rcl
std
cld
out
into
dec
rol
cld
adc
shl
ljmp
repnz
ds
lret
xor
xor
cmp
into
cmp
lret
ret
lret
lock
ljmp
int
add
mul
roll
icebp
jmp
in
jmp
out
int3
into
std
cmp
ds
fdivr
fildl
jmp
repnz
call
xor
xor
icebp
cmp
call
ljmp
ljmp
iret
repnz
cmp
hlt
icebp
fdivrp
cmc
cmp
xchg
hlt
jecxz
fsubr
xchg
fisttps
das
idivb
cmp
out
call
pushl
loopne
mov
mov
xchg
jmp
aad
xor
in
xlat
lret
fst
out
and
test
in
ljmp
ss
fnstenv
xor
aam
loop
shl
lock
ret
in
test
lock
xchg
lock
aam
out
std
aad
cmp
repz
into
clc
cli
fsub
aam
lds
int
loopne
ret
lock
out
incl
xlat
incl
in
sti
loope
int
in
int
cmp
xor
shr
test
jecxz
orl
subb
sarb
icebp
iret
xor
call
ret
stc
mov
into
in
mov
addl
sarb
cmp
fdivr
in
repnz
jmp
loope
les
jmp
xor
into
cmp
ljmp
not
sbb
stc
stc
fnstsw
fcomp
fsubr
mov
xor
out
cmc
call
cmc
lret
repnz
repz
add
xchg
fiadds
iret
repz
ret
xor
aas
fucomp
int
repnz
in
loopne
repz
fisttps
rclb
out
fnstenv
aaa
ds
int3
in
repnz
addb
int3
loop
or
xchg
lock
jmp
enter
cmp
cmp
ljmp
enter
ds
lock
fld1
xlat
fsubr
incb
fcmovnu
mov
enter
fiaddl
xor
aam
in
fdiv
repz
clc
xor
std
filds
enter
out
loopne
loope
shr
cmc
aaa
xor
test
in
ret
jecxz
shl
mov
ljmp
ss
in
into
out
fcom
aas
cmp
fdiv
xor
mov
nop
out
out
ds
shl
out
stc
stc
ss
sbb
xor
fldl
mov
leave
shl
sub
cmp
cmp
shr
fst
mov
and
fsubrp
in
iret
out
jmp
xor
neg
enter
in
aas
cld
jmp
test
fcmovnb
xchg
shl
stc
in
call
sti
cmp
lock
out
aam
addb
loop
xchg
lret
out
aad
aam
in
cld
jmp
sar
out
cli
test
loop
call
xchg
int
out
xor
shr
fmul
aam
call
cmp
out
stc
shr
lret
fdivrp
enter
mov
jmp
std
xor
iret
std
fcmovnb
shl
out
movb
jmp
xchg
rorb
repz
ljmp
aad
in
fmul
lret
test
cld
loopne
out
jmp
cli
xor
std
jecxz
repnz
idiv
enter
add
add
cmp
je
mov
xor
add
mov
mov
jmp
enter
int
insb
push
push
mov
mov
pusha
jg
cmpsb
add
hlt
and
loopne
iret
ljmp
icebp
ss
rcl
out
jecxz
fidivrs
ds
in
cld
out
mov
jmp
in
shl
bnd
enter
sarb
incl
lret
in
stc
sub
xchg
decl
cmp
int3
lret
iret
rol
rol
aam
fldl
test
xchg
aam
das
xlat
loopne
call
fldz
aad
fxtract
rcl
lock
aad
hlt
call
rorl
lock
int3
cmp
out
hlt
fdivrl
ret
leave
lock
loopne
test
mov
cli
ficoml
cmc
rcl
leave
int
rcr
fld
fldl2t
fiaddl
enter
out
xor
lock
sti
not
std
fistpll
fmul
fucom
stc
loop
add
lret
out
jmp
stc
aad
jmp
shl
iret
out
les
jecxz
test
jmp
in
shl
sarl
stc
lret
lret
loop
hlt
fsin
rolb
xchg
mov
out
xlat
iret
xor
aaa
rol
aas
shl
jmp
aad
xchg
mov
testl
shl
icebp
in
shl
sar
cmp
hlt
fnstsw
inc
shl
loopne
cld
in
mov
adcl
xor
fcom
shl
cmp
enter
in
les
xchg
mov
add
out
icebp
lret
in
icebp
into
sub
stc
lock
cmp
xlat
stc
ret
xchg
fsubr
rcr
mov
fdivr
rcl
stc
out
sbb
cli
hlt
aam
fisttpll
into
iret
jmp
xor
rcl
ror
xor
cli
ret
fiaddl
sti
int
int3
loopne
xchg
loope
loop
ret
xor
out
std
filds
out
ret
fxch
icebp
repz
in
ljmp
out
ds
xlat
ss
sbb
loope
jmp
fsubrp
out
xchg
aas
xor
icebp
int3
in
divl
xor
jmp
cmp
cmp
clc
mov
into
ret
repz
cs
das
shll
sub
repnz
fnstcw
ret
sub
hlt
fdivr
aam
std
xchg
mov
fisttpll
enter
fcmovb
shlb
idiv
sarl
sar
fadd
in
enter
push
shll
jecxz
ss
clc
std
in
cmp
cmp
aad
loope
call
int3
out
mov
repnz
ror
das
into
fcom
out
out
jecxz
cli
fsub
xchg
ljmp
shlb
into
clc
rcl
ljmp
neg
sti
jecxz
fcmovu
testb
ss
int
aad
cmp
neg
in
loopne
cli
shl
cmp
adc
test
xor
lret
int3
ljmp
out
cmp
clc
cmp
loopne
neg
cld
out
in
mov
xor
rcr
cld
int3
shll
test
rcr
xlat
ret
in
mov
ljmp
ret
loop
out
cmp
icebp
adc
orl
mov
repz
repz
in
cmp
test
xchg
xchg
int
out
hlt
test
lret
cmp
std
sarl
rcl
shl
testl
leave
xlat
aam
enter
xlat
roll
test
cld
sarb
cld
int3
jecxz
test
lock
std
iret
cmp
lock
sti
loope
incl
fdivr
mov
fisttps
hlt
enter
jmp
enter
loopne
addb
ret
test
in
mov
jecxz
mov
cs
ss
cmp
fidivrl
ds
into
testl
cli
fmul
sub
test
in
aad
xor
in
fcomi
in
loopne
aas
cmp
call
cld
out
out
repz
int
hlt
ljmp
test
loopne,pt
repnz
aad
fimull
xchg
in
out
lock
cmp
cmp
ret
xlat
in
rcl
rcr
fcmovu
and
lret
fsub
std
xchg
lret
loopne
cli
aad
aas
fcmovnu
in
test
ret
mov
fisttpll
mov
mov
jmp
rcl
rcr
fcmovb
mov
fstpl
mov
ljmp
jl
xchg
iret
shr
lock
ss
sub
fadds
idiv
into
repnz
loop
xlat
divb
shlb
aam
loope
sub
xlat
aas
fcomip
mov
xchg
in
xor
in
fstp
iret
fnstcw
int
iret
cmp
rcl
clc
cli
lret
in
int3
jmp
icebp
iret
nop
xchg
loope
hlt
cmp
ljmp
stc
fdivrp
out
xchg
aad
ret
incb
lds
lret
sarb
ret
div
test
fcmovnbe
in
jmp
jmp
lret
in
stc
sub
ss
loopne
xlat
aad
cmp
mov
clc
fucomip
std
loop
xchg
xchg
hlt
fdivp
out
shll
out
in
rcl
aad
adc
in
shl
repz
xchg
lret
sti
in
icebp
mov
enter
out
std
loopne
shl
xchg
fisttpl
out
into
iret
orl
xor
idivl
idiv
aad
cld
and
xchg
shr
loopne
out
xchg
iret
loope
out
call
fndisi(8087
repz
in
in
test
mov
fmulp
fisttpll
repnz
iret
icebp
cmp
idivb
cmp
test
fcoms
xchg
repz
aad
call
cmp
cmp
cmp
call
mov
in
call
loope
in
shll
lock
iret
xlat
stc
cmc
lds
stc
cli
filds
call
enter
cmp
in
out
out
int
test
rol
in
in
out
out
jecxz
loopne
mov
cmp
clc
enter
rolb
fsub
cli
aad
int
ljmp
hlt
xor
cmc
sarb
shr
rcl
xor
idiv
aam
repz
test
in
shl
loope
in
in
out
cli
rcr
aad
idiv
stc
enter
loopne
icebp
mov
bnd
shll
rcr
xlat
sarb
aad
icebp
in
loop
test
sti
inc
clc
enter
out
lock
hlt
cld
idivl
hlt
xor
ljmp
fcmovbe
test
cld
sbb
mov
xor
lret
sar
hlt
aaa
sar
cld
cmp
ret
push
stc
in
cmp
jmp
ljmp
stc
cmp
or
in
test
mov
mov
in
xor
aad
fcom
std
iret
lret
cmp
aad
loopne
cmp
into
mov
div
aaa
std
cs
sar
jecxz
repnz
aas
jecxz
incl
test
fmul
test
leave
rcl
cmp
aad
cmp
call
xlat
clc
fcmovnu
adc
addl
shr
fcomp
aad
idiv
call
neg
cli
sar
mov
jecxz
iret
test
sub
neg
sti
xlat
aad
rcr
into
in
aas
and
cld
and
test
call
lock
in
shl
lock
aam
out
cmp
cmp
lock
rcl
xlat
xor
clc
cli
lock
fcmovbe
lock
cmp
rol
adc
out
mov
out
test
loope
out
xor
icebp
rcr
iret
sar
loop
loopne
sti
adc
leave
into
cli
in
in
fimull
in
stc
in
cmp
int3
cmp
xchg
xlat
mov
or
cmc
fisttpll
vpmaxsw
repz
sub
cmp
cmc
cmc
rcr
out
call
iret
fsub
nop
test
in
cmc
hlt
cli
sti
std
fnstsw
cmp
lock
fcmovnbe
shl
xchg
hlt
mov
in
repz
lret
aam
cmp
lret
sar
lds
fucomp
cli
loop
call
mov
rcll
int
out
ljmp
sub
neg
loope
testl
cmp
out
imul
std
fdivr
hlt
testl
or
call
shlb
imul
cmp
cli
into
repz
out
testb
fisttps
mov
lret
lret
sti
call
leave
fxch
out
jecxz
ffree
leave
std
clc
xchg
jecxz
in
xchg
out
out
ror
cmp
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
jmp
ds
leave
fstp
ror
cmp
mov
insl
std
movsb
imul
add
in
sti
clc
in
fmulp
sar
stc
xor
mov
in
in
lret
fldl
hlt
cmc
xor
cmp
repz
movb
loope
aam
leave
lret
hlt
idiv
cld
call
fdivp
fdiv
jmp
orl
int3
out
jmp
idivb
xor
sti
rol
clc
ss
addb
fmul
jmp
sub
xlat
ret
leave
fsubr
fcom
cmp
iret
loop
aad
or
mul
ljmp
rcl
xor
int3
fcmovnu
aaa
cli
fld1
sar
aad
jmp
mov
cli
out
xchg
in
lret
lret
iret
iret
fcmovu
repz
xor
cli
stc
call
sub
nop
jecxz
in
int3
lret
lock
repnz
loope
xlat
shl
icebp
fucomip
sti
fildl
mov
jmp
xor
call
lret
shl
in
rol
and
std
dec
xlat
cmc
ljmp
push
icebp
int
vcmpsd
cmp
cmp
lret
into
int3
hlt
shl
fsubr
xchg
dec
cmp
lret
mov
lock
sarb
clc
aaa
aaa
aaa
ss
fcmovnbe
aas
rcl
loopne
cmp
ficoml
jmp
cmp
lock
jmp
aad
div
out
fpatan
cli
testb
lock
or
sub
rol
ror
ljmp
std
std
sti
sti
std
test
mov
xchg
in
ss
cmp
sar
jecxz
faddp
xchg
cmp
enter
clc
icebp
out
jmp
ljmp
fcom
shl
aam
xor
stc
sar
loopne
fsub
xchg
lock
cmp
iret
out
call
shr
fcmovb
fidivrl
aam
repnz
fnclex
clc
jecxz
xchg
test
out
ljmp
imul
fsubrp
sarb
shl
inc
aam
lret
xor
cmc
shl
xor
jecxz
jmp
ss
div
aad
fdiv
out
in
cli
fld
enter
out
icebp
jmp
out
cmp
cmp
cmc
incb
leave
xchg
out
out
lret
lret
lret
jmp
cli
cli
cld
fdiv
ds
sbb
cld
xlat
test
int3
enter
ffreep
rcl
cmp
lret
ds
fcomip
int3
fsubr
cli
cld
cld
enter
pop
out
mov
vpmaxsw
sub
out
rcl
fucomi
call
cmp
cli
clc
ds
loope
cmp
in
call
cmc
xor
xlat
ss
int3
sti
cmc
sti
repz
out
sub
shl
fucomi
enter
leave
into
int
jmp
ljmp
fisttpl
adc
int
out
out
cmc
lock
fmul
fcomi
cli
fildl
int
nop
shr
faddp
iret
xlat
hlt
sar
out
cmp
cmp
ret
icebp
shl
faddp
in
lds
fsub
repnz
out
out
xor
loope
iret
cmp
xchg
xchg
enter
call
loope
ret
lret
fldpi
fscale
into
inc
sbb
icebp
jecxz
leave
clc
jmp
nop
repz
in
in
sub
xlat
int3
xlat
stc
pushl
rcr
sar
rcl
xor
clc
mov
loopne
loopne
jmp
ss
adc
rcr
hlt
clc
xlat
fadd
jmp
and
ljmp
out
stc
fmul
in
rol
imul
mov
sbb
leave
loop
mov
ror
xchg
iret
ror
ret
cmp
jmp
out
cld
xlat
incb
in
out
loopne
in
sub
out
shl
leave
ljmp
xlat
test
std
shl
cmp
clc
in
movl
cmp
lret
into
rol
cmp
cmp
mov
test
xchg
icebp
repz
xor
fsubp
in
sti
xor
test
aas
flds
cmc
in
out
imul
shr
rcl
std
into
cld
jecxz
into
xchg
sti
sbb
call
xor
in
call
ds
repnz
aam
loopne
enter
in
in
xchg
neg
std
lret
cmp
fcmovnbe
ljmp
jmp
int
ret
fcmovu
add
dec
push
cmp
cs
outsb
jg
cmpsb
add
idiv
fcmove
fisttpll
int3
pop
loopne
repz
in
xlat
neg
ds
cli
ss
loope
test
clc
addl
hlt
fnstenv
fsubr
fidivrs
out
in
out
jecxz
xchg
ret
in
mov
xorl
int3
shl
hlt
ror
rcl
fldln2
cmp
out
xlat
out
cmc
out
out
out
sub
shl
xor
out
cmp
aad
sar
int3
rcr
loop
ret
shl
in
neg
jmp
out
lock
lret
enter
sti
in
hlt
fcmovnb
loope
out
in
xchg
fimull
nop
fldl
xlat
in
lret
fcmovne
clc
lret
jecxz
cli
fildl
loope
in
and
xor
jmp
call
sar
jecxz
icebp
cmp
leave
ret
fldl2t
clc
in
sti
jmp
in
shll
xor
out
lock
stc
shl
into
cmp
sbb
fcomp
loop
sbb
movb
hlt
sub
xor
sar
enter
loopne
xor
jecxz
fcmovbe
mul
out
call
in
jmp
repnz
stc
jmp
frndint
adc
aam
cld
sti
xchg
in
fdivp
mov
leave
xor
ljmp
int
fdivp
aad
test
ds
loopne
loope
jecxz
into
call
aam
fdivrl
sti
jmp
stc
xchg
cmc
sar
rcr
addl
repnz
stc
xor
int
fcmovne
lret
and
jecxz
cli
testb
mov
iret
in
std
aad
std
into
int
ret
aam
repz
sub
stc
int3
dec
mov
adcl
cli
fdivl
cmp
test
leave
ret
jmp
loop
in
xchg
jecxz
lret
loopne
cmc
fnstsw
int3
icebp
xor
ljmp
fdivp
test
rol
fadds
lret
in
neg
stc
sar
xorl
fildl
std
fimuls
cmc
in
rcl
rcr
cmp
xlat
rolb
test
xchg
sub
leave
lea
sub
jecxz
icebp
test
idiv
icebp
cmp
addl
mov
mov
xchg
mov
into
iret
aaa
lret
cli
out
ljmp
clc
jecxz
jmp
fcomp
lds
lret
ror
in
into
xlat
out
icebp
into
out
rolb
sar
test
into
fcoml
int3
fcmovbe
shl
cmp
rol
in
hlt
sti
fucomip
inc
cli
test
in
in
out
ljmp
cld
ljmp
out
xlat
jecxz
xrelease
ss
xor
leave
div
idivb
rcr
stc
cmp
xchg
fcmovne
lret
ljmp
xor
aaa
test
idiv
clc
fdivl
aas
filds
faddl
in
xrelease
jmp
sub
stc
ror
aam
aam
into
ret
mov
jecxz
cmp
aad
cmp
in
stc
cmc
fcomp
xor
xchg
mov
into
icebp
nop
in
lret
shl
mul
aad
fsubr
xlat
xor
cmp
fst
fucom
fdivp
bnd
lret
xchg
iret
int3
xor
int3
lock
jmp
fdivrp
cmp
in
jmp
rcr
lret
int3
out
xor
lret
cmp
into
into
ds
ffree
call
faddp
xchg
sub
lock
in
xor
rcl
leave
leave
xor
out
fcom
not
iret
inc
lret
call
xchg
std
int
xchg
leave
cmc
loope
aam
std
fcmovnu
cmp
lret
incb
test
neg
leave
test
std
mov
clc
sti
fcomi
ss
clc
icebp
repz
shl
rol
cmp
clc
jmp
fldl
int
cmp
hlt
sarb
ds
fcomip
jecxz
fsubp
shl
xchg
mov
in
loopne
fisttpl
fmul
out
std
sti
jmp
lock
cli
cld
lock
rol
cmc
ljmp
call
xor
lock
clc
shl
cmpb
and
mul
in
jecxz
jmp
int
enter
fldl
shl
into
leave
lock
fsubrp
imul
sub
mov
jmp
mov
mov
xor
cmp
jmp
aas
enter
xlat
fcmovnu
mov
pop
sti
lahf
pusha
adc
jg
cmpsb
add
rorb
out
out
ss
cmp
ss
loop
cmp
aas
xlat
repz
in
in
or
xor
xor
int
leave
std
in
ljmp
fldl
loop
jecxz
repnz
xor
fdecstp
aad
fdivrs
fstpt
fmul
neg
aas
ret
leave
xchg
orb
rcr
fsubrl
lret
not
out
stc
cmc
loopne
enter
lret
fadd
xor
xor
jecxz
int3
fsubr
std
std
fcomip
aam
hlt
fiaddl
fsubr
loopne
or
std
xchg
xlat
fcmovnbe
int
call
int3
sar
jmp
lret
call
lret
jecxz
filds
out
repz
int3
cmc
aaa
in
cmp
shl
std
cmp
fcom
xlat
cld
loopne
lret
out
hlt
xor
cld
leave
xor
cmpb
idiv
fdiv
cmc
rorb
faddp
hlt
lret
neg
xor
jmp
add
ret
ret
fdiv
fnstsw
xlat
out
lret
cmp
loope
jmp
leave
aam
iret
xor
cld
xlat
cmp
out
shr
cli
lret
out
loope
nop
ljmp
cmp
ror
repnz
int
sti
ror
jecxz
loop
call
jmp
out
fcmove
repz
rcl
int
not
lds
clc
call
cli
loopne
cmp
aam
cmp
lret
out
leave
out
shl
das
enter
out
ljmp
fcomp
fsub
fadd
out
ret
cld
lret
fiaddl
int3
cmp
in
cmc
shl
in
cmp
fucomi
cmc
rcl
cld
stc
in
icebp
mov
in
repz
out
ljmp
add
fdivrp
lock
incl
rcl
ret
lret
fcmovnu
shll
icebp
jecxz
sub
addl
loop
mov
shr
and
fidivs
call
xor
int3
sbb
xchg
rcl
cmc
in
cmp
test
adcb
into
ss
clc
divl
cmc
lret
aad
jecxz
mov
cli
loope
lock
aad
lret
xlat
ret
div
stc
fnstsw
sarl
frstpm(287
sbb
sbb
icebp
loope
in
xor
icebp
ss
ds
fcomi
out
out
loop
in
inc
out
mov
leave
loop
in
lret
shl
ss
int
aaa
in
call
fcmovnu
ret
mov
clc
aad
mov
lret
out
lds
enter
hlt
aam
fcomip
int3
shl
out
loop
flds
in
loope
test
lock
in
sub
cli
out
int3
cmp
rcr
shl
fcmovnu
ret
lret
lret
mov
fsubr
test
das
in
shll
into
into
aam
std
stc
repz
mov
loop
loop
xchg
xor
ss
ror
cmc
call
repnz
loop
xlat
std
mov
enter
xor
imul
ljmp
fincstp
fcomi
rcr
std
mov
mov
repnz
ljmp
repnz
sar
loopne
out
jecxz
stc
sub
mov
mov
sub
ljmp
cmp
lret
cmp
out
fld
cli
xchg
mov
mov
mov
test
loop
stc
cli
int3
clc
ds
in
std
fdivrl
leave
rol
fcmovnb
cmp
loop
fcoml
ret
clc
ret
lock
lock
loope
aam
mul
mov
test
out
ljmp
clc
call
loope
fcmovne
sarl
xor
ljmp
in
out
int3
test
aam
fldl
lret
xchg
divl
xor
aaa
ljmp
idivl
faddp
test
in
fucomi
lock
shl
aam
into
fnstcw
ljmp
add
loopne
cli
ljmp
adcb
mul
cmc
cmp
loopne
hlt
fistpll
cmc
mov
test
jmp
int
lret
mov
ds
in
cli
xor
repz
call
clc
push
ds
loopne
xchg
hlt
int3
xlat
hlt
cli
leave
rcr
cli
in
clc
ds
ds
aad
lret
fmulp
out
into
out
shrb
ret
leave
je
mov
addl
jmp
jmp
vpsrlq
rcl
aad
xchg
mov
in
mov
jns
jl
add
int
out
shr
out
in
xchg
mov
in
fsub
test
out
in
fxtract
out
aad
lret
aas
iret
cmp
xchg
and
orb
shr
rcl
lds
aam
cli
rcr
lret
hlt
fdivr
jmp
in
xchg
mov
in
out
loop
aam
cmp
faddp
fcompp
xchg
mov
out
enter
loope
shr
fsub
cli
in
lret
lret
rcr
fdivrp
std
ret
ds
mov
fisttpll
in
repnz
faddp
loopne
cli
into
icebp
cmp
and
hlt
ret
rcr
mov
in
in
in
faddl
out
cmc
xlat
shr
leave
std
lock
in
test
frstpm(287
rcl
xlat
int
xchg
lea
cmp
leave
icebp
out
out
cmp
test
in
in
in
aad
fsincos
cmp
enter
enter
lock
out
icebp
fdivr
aam
fsub
mov
ret
jecxz
shl
into
aad
not
ss
repnz
fdivrp
mul
leave
jmp
ror
int3
rol
loop
jmp
lret
cli
int3
out
cmp
hlt
aam
ret
cld
jecxz
clc
lret
pop
ds
in
cmp
hlt
fnstsw
icebp
cmp
shl
fcmove
cmp
lret
fisttpll
shl
call
icebp
fdivp
lret
cli
ljmp
in
lea
icebp
hlt
aam
xor
in
cmp
clc
out
fnstsw
sarb
repnz
lds
cli
cmp
enter
out
das
xor
sar
int3
fdivrl
cmp
iret
shl
xchg
rcl
mov
test
xchg
fisttps
ljmp
repnz
lock
lret
cmp
ds
rcl
loope
testb
fcmovnu
fsubrp
jecxz
xor
cmc
out
fmul
in
leave
in
jecxz
iret
ss
aas
movl
xchg
jmp
shl
out
shr
in
fsubr
int
icebp
fiaddl
loope
loop
fcmovnbe
loop
jmp
out
xor
ret
ljmp
fcomip
addl
sbb
repnz
out
iret
sti
stc
lds
lock
xor
shr
fprem
xchg
cmc
hlt
jecxz
test
xchg
xchg
lea
in
rcl
imul
fsub
cmp
rolb
call
iret
sbb
xor
lock
shl
aam
lock
sti
std
lock
and
mov
mov
test
xor
neg
cmp
cmp
cld
repz
icebp
aas
sti
xchg
cld
fcmovu
fistl
test
int
fdiv
loope
fsubr
cmc
xchg
in
enter
sbb
jecxz
repz
jmp
loope
cmp
cmc
neg
shl
loope
call
clc
movb
out
lret
clc
lock
call
ret
cmc
out
ds
enter
shr
rclb
in
cmp
cld
ljmp
ffree
stc
addb
test
xchg
in
iret
out
not
aam
ss
lock
cmp
idiv
sti
enter
mov
mov
jecxz
mov
das
jmp
ljmp
add
ret
xchg
mov
mov
xor
vpaddq
fcmovbe
std
cmp
out
in
ret
in
xchg
sar
shr
stc
cmc
xor
shl
out
loopne
neg
hlt
cmp
fldl
fmull
jmp
in
shr
call
cld
fchs
xor
ret
jmp
xchg
mov
iret
repnz
out
ror
int3
leave
cmp
repnz
cmp
aad
sarb
jecxz
nop
out
bnd
loop
jmp
rcl
div
repz
aam
rcl
hlt
sub
jmp
mov
adc
iret
into
int3
out
aaa
cmp
ds
hlt
xlat
int
stc
cmc
aas
xchg
out
jecxz
mov
xor
jmp
jmp
cmp
sar
sti
fnstsw
lret
xchg
int
mov
not
cli
in
in
xor
neg
cmp
cli
cmp
aam
fcmovb
loopne
mov
mov
lock
icebp
aad
out
std
icebp
enter
fst
mov
cmp
je
mov
jmp
push
mov
sub
incl
mov
push
or
push
mov
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
rol
sarb
aas
rcl
mov
pop
cmp
int3
jl
jl
add
rorb
fcmovb
stc
addl
jecxz
in
fcomi
aas
enter
fmulp
in
out
mov
cmc
call
fdivr
int3
in
in
shl
imul
xor
cmp
incb
ret
sti
fcmovbe
nop
test
fsubp
ss
cmp
lock
lock
fdivrp
ds
mul
mov
call
sub
repz
loopne
xor
ljmp
test
mov
fcmovnu
mov
shl
mov
xor
ljmp
cmp
ret
loop
lret
fldpi
in
loopne
into
xchg
repz
hlt
stc
ret
cmp
xlat
cmp
hlt
shr
std
xlat
aad
test
xchg
in
faddl
lea
xor
fcmovu
ljmp
cli
clc
repnz
int3
sti
sbb
lock
xor
ror
xor
push
fdivp
lock
int
lock
fstp
neg
loop
rolb
jmp
shl
out
iret
shll
cmp
fincstp
ffreep
rol
in
xchg
in
cmp
cmc
xor
aam
cmc
lret
jmp
cli
in
fdecstp
in
std
fsubr
test
lret
test
in
decb
hlt
les
out
fmul
fbstp
sti
cli
loopne
loopne
cli
lret
hlt
movl
ret
leave
sti
sti
enter
lret
shlb
and
loope
inc
jecxz
sti
cld
out
xchg
int3
int
cmp
in
out
lret
ss
into
std
out
cmp
aad
shl
sub
out
enter
aaa
repnz
xor
cmc
neg
into
fldz
and
fsub
clc
fadds
lock
das
jmp
ss
std
ljmp
fucomp
leave
std
shr
cmp
jmp
xchg
std
hlt
sub
call
cld
addb
leave
out
clc
out
fimull
loopne
ret
aaa
iret
stc
les
ror
ss
cli
mov
leave
aam
fldln2
xchg
rorl
enter
cmc
stc
out
cmp
in
xchg
loope
fcmove
orb
repz
shlb
sar
cmp
call
add
ffreep
addl
in
cmc
ljmp
aas
aas
ljmp
ret
jmp
ljmp
enter
rol
rcl
xor
cmp
iret
stc
in
in
jmp
sti
call
cli
into
xchg
jmp
ror
ret
aam
in
xor
cli
roll
jmp
int
mov
icebp
repz
loopne
sarl
ljmp
lret
aaa
cmp
aam
xchg
xchg
int3
jmp
shl
loopne
cmc
stc
call
incl
stc
shl
mov
loopne
cmp
loop
xchg
div
icebp
in
aad
xlat
call
repz
xchg
in
stc
xchg
iret
std
in
les
shll
lret
cmp
adc
in
fcmovbe
test
clc
enter
icebp
mov
xor
xor
clc
out
leave
lock
cmp
and
sti
mov
xchg
out
out
call
in
in
lock
in
fiaddl
sti
mov
in
ror
in
rol
leave
sti
fcmovnbe
lret
repz
jmp
incb
fmulp
cmp
iret
fsub
out
repz
ss
cmp
lock
into
xchg
cmc
in
test
out
imul
in
call
fsubp
loope
leave
jmp
lret
cmc
hlt
into
lret
iret
loope
call
mov
icebp
test
das
das
ret
aaa
call
in
shll
aas
aas
in
jmp
fisttpl
ret
sti
xlat
in
in
loop
cli
loop
push
test
aam
test
lret
adcl
in
repz
fcmovb
icebp
hlt
rcr
inc
ds
loop
loope
addb
lock
and
hlt
aaa
ljmp
iret
iret
fadd
aam
into
cmpl
out
mov
test
in
sub
xor
call
out
fdivr
aam
icebp
jmp
loope
in
shl
mov
in
call
cmp
std
lret
repnz
fimuls
leave
and
cli
out
jecxz
out
repz
aad
in
out
leave
loope
loope
addb
out
test
ljmp
sub
fincstp
rcr
sti
lret
loope
aad
rcr
test
stc
in
std
cli
nop
xchg
not
cmc
lret
ret
fdivrs
mov
orl
add
sbbl
push
neg
jmp
int
aad
ffree
fstp
stos
push
push
shlb
and
aaa
int
jle
jge
jl
aam
fadds
or
iret
out
enter
fcmove
std
in
stc
sbb
xchg
lret
out
flds
xchg
sub
fprem1
in
cli
sti
std
in
fst
jmp
loope
sbb
enter
leave
mov
in
cld
ficoml
shr
sar
cli
xor
iret
aaa
int3
sbb
fucompp
mov
fcmovu
sbb
shl
into
xor
in
ss
idiv
fmul
out
lock
xlat
stc
jmp
fiaddl
ffree
xor
shll
int
sar
aad
ret
cld
icebp
ret
xchg
int3
cli
lret
nop
sti
jecxz
test
xor
xor
sub
test
loop
cmp
fsub
mov
orl
jmp
xor
cmp
fcmovb
sti
cmp
stc
and
idiv
cld
fcmovnu
fcomi
icebp
mov
shr
stc
out
aam
ljmp
std
in
mov
jecxz
in
and
idivb
jmp
lret
aaa
idiv
repnz
icebp
fsub
idiv
loop
loopne
loopne
imul
clc
icebp
in
sarl
fistpll
repz
loope
icebp
in
cld
in
cld
jmp
in
in
loopne
cmc
icebp
lret
fldlg2
cld
not
lock
xlat
ret
xor
hlt
test
add
icebp
lret
shl
xlat
fnstcw
jmp
ss
enter
fsubp
fisttps
fisttpll
dec
out
xor
clc
xor
cmp
test
fmull
or
into
jecxz
aaa
loope
in
ror
fdivrs
hlt
cli
call
clc
out
mov
sti
in
cli
int3
call
xchg
call
xor
shll
cmc
xlat
out
icebp
lds
out
leave
loopne
loope
roll
in
cmp
in
xabort
fsqrt
push
cmp
aam
fadd
test
fsin
loopne
cmp
loop
sub
into
jecxz
xor
out
std
cmp
flds
fisttpll
rcl
lret
xor
ret
in
out
jmp
addb
shr
loope
das
aad
fnstsw
out
lock
iret
aas
cmp
movb
fimull
aad
call
neg
stc
cmp
cmp
xlat
into
test
sar
std
dec
fcmovu
int
jecxz
rcl
repz
jmp
in
iret
stc
aam
int
out
jecxz
ret
stc
xchg
sub
xchg
jmp
cmp
cmp
fsubrp
ds
into
nop
in
repz
out
shl
lret
out
aam
stc
adc
leave
loope
in
ljmp
jmp
icebp
repz
xor
repnz
rcl
lds
sub
iret
cli
call
xor
xlat
clc
ds
fcmovnu
addb
hlt
lret
out
sub
loop
repz
cld
imul
fcmovne
xor
repz
addl
iret
rolb
loop
xor
shl
fdivr
cld
iret
fdivp
xor
repnz
cli
cmc
shl
mov
test
loope
out
hlt
sub
shl
into
out
fdiv
jmp
mul
cmc
stc
lds
jmp
in
fdiv
test
aaa
fcom
int3
repz
or
aam
mul
jecxz
mov
in
out
call
aam
aaa
cmc
cld
into
xor
out
loopne
cld
mov
lock
ret
sti
aas
stc
iret
cmp
ljmp
leave
ret
jmp
std
iret
test
aam
sarl
out
out
lret
icebp
in
add
in
icebp
jmp
shlb
xor
fcmovnu
jmp
ret
aad
shl
decl
loopne
mov
jmp
int
lock
cld
aam
cmp
call
test
addl
cmp
call
out
clc
cmp
jecxz
jecxz
fmul
bnd
test
int3
repz
stc
in
xlat
clc
repnz
aas
loope
fisttpll
xchg
mov
ror
int
xor
ljmp
aas
ret
ds
stc
idiv
jmp
icebp
ret
loopne
faddl
aam
xor
in
shl
jmp
jecxz
faddl
out
or
enter
in
ljmp
in
in
lock
rolb
in
out
icebp
fucom
test
aad
out
shl
leave
jmp
ds
out
in
mov
or
mov
addl
xor
xorl
movl
sbbl
jmp
rcl
int3
fstp
arpl
test
lods
lret
jl
add
int3
fprem1
mov
std
mul
icebp
jecxz
loop
test
ds
ret
enter
cmp
rolb
aad
ret
std
cmp
aam
sub
lock
sbb
mov
fisttpl
enter
shl
ss
cli
std
cli
xor
fadd
std
std
fldl
leave
rorl
jmp
lret
cmp
jecxz
sar
clc
cmp
xchg
ljmp
sub
not
into
clc
lret
call
ret
repz
fucom
iret
xchg
aad
in
xor
cmp
fcmovnbe
cmp
fdiv
rolb
enter
ficoms
in
sub
aad
into
xor
rol
sbb
fldl
enter
ljmp
rcl
ljmp
fsubp
lret
ljmp
stc
stc
cld
xchg
dec
in
rol
out
enter
in
lock
clc
xor
test
mov
out
cmc
cmc
aam
out
cmp
lds
cmp
sub
std
cmp
not
xchg
sbb
into
test
xor
loop
int
sar
cmp
aaa
ret
fdivp
jmp
mov
std
add
xor
lock
fcmovbe
ljmp
cmp
aam
mov
loop
imull
shrb
rcl
ljmp
sti
test
jmp
mov
lret
std
lret
int3
out
out
hlt
icebp
cmp
fcmovbe
fucomip
ret
in
into
leave
out
cld
clc
cli
repnz
int3
loop
shl
jecxz
repnz
ror
ds
cmp
jmp
vpmovmskb
mov
loop
in
aaa
aaa
repz
cmp
cmp
ds
ret
loopne
cli
ret
xchg
xchg
shl
loope
xor
fdivr
ljmp
cmp
cld
jecxz
loop
loopne
sbb
cmc
lret
std
cld
jmp
dec
xor
loopne
stc
out
decl
call
clc
jmp
in
iret
ljmp
loop
clc
sbb
enter
int
xor
jmp
stc
cld
loopne
clc
stc
test
cmp
jecxz
xchg
loope
ljmp
xor
fucomp
lret
cmc
in
cmp
cmp
aam
std
call
decl
xor
cmp
cmp
hlt
rcr
icebp
cmp
cmp
int
out
loope
loop
fldpi
shr
fadd
call
fsubp
lock
sbb
incb
cmp
fsub
ret
out
out
call
cmp
cmp
jecxz
into
cmp
cmp
and
test
xchg
xor
into
in
call
hlt
int
aad
loope
mov
mov
fimull
hlt
out
shlb
rcl
ss
call
fmul
cmp
int3
jecxz
test
repnz
in
jecxz
out
out
int3
in
out
enter
aam
icebp
cmp
aad
rcr
in
and
lock
out
jmp
xor
cld
hlt
icebp
ror
hlt
aam
cmp
mov
fxch
in
ljmp
loopne
in
clc
fdivrs
repnz
xlat
fdiv
loopne
stc
aas
cmc
call
jmp
out
xchg
repnz
hlt
shlb
les
std
out
fxch
sar
in
cmp
bnd
in
xchg
call
hlt
ret
ret
shl
fmulp
dec
out
repnz
idiv
mov
loop
mov
jmp
mov
repz
jmp
lret
hlt
test
out
rcl
fcomp
fsub
fmulp
mov
mov
in
in
or
stc
sub
into
int3
fdivrl
imul
rcr
in
testb
fdivrp
out
into
repz
jmp
ljmp
in
rol
cmp
add
in
iret
lret
int
iret
enter
int
rcr
repz
adc
cmp
repnz
mov
std
xlat
loope
fiaddl
repnz
hlt
enter
enter
repz
std
fiadds
mov
shl
cmp
leave
ret
rol
call
lret
fdivr
out
in
cs
cmc
ret
call
out
fdivs
mul
bnd
in
enter
sub
lret
out
cmp
cmc
cmp
xrelease
cli
cld
xchg
fdivr
sub
fcmovbe
hlt
fprem1
lock
cld
movl
add
movl
jmp
movl
jmp
xlat
enter
enter
xchg
rol
pop
into
cmp
jge
jl
cmp
call
or
lea
fcom
clc
lock
fcom
into
fmulp
clc
out
fucomi
mov
int3
in
shl
imulb
int
cmp
addb
xchg
clc
fiadds
in
repnz
out
sub
idiv
icebp
jmp
rcl
div
fdivrp
fincstp
rolb
in
into
int
xor
ljmp
aad
int
in
cmp
jecxz
testl
out
ret
fucomi
cmp
xor
sti
repnz
cmp
into
test
in
stc
in
sti
enter
mov
xor
idiv
jmp
std
fadd
shr
fcmovnb
hlt
ret
ljmp
mov
out
test
shl
jmp
fmul
lock
cmp
xchg
fcomip
test
lds
into
test
call
out
call
int
clc
not
ror
mov
jecxz
lret
loop
into
rorl
sub
in
out
int3
repnz
in
fcmove
out
rcl
sar
xlat
fcomp
mov
cli
ljmp
std
hlt
mov
hlt
xor
into
cmp
clc
aaa
fsub
aam
hlt
stc
cmp
lock
out
loopne
sti
rcl
repz
loopne
out
rcl
lret
hlt
fxch
sar
lock
leave
fiadds
in
loop
xchg
mov
shl
cmp
loopne
fadd
ds
ffreep
out
and
ret
xor
cmp
ljmp
fiaddl
fcomip
fdivr
out
mov
fmulp
aaa
into
cmp
sti
lret
les
out
cld
aad
aas
shl
idiv
rol
loop
out
jecxz
mov
jmp
xchg
int
repz
in
clc
int
cmp
idivb
and
shl
in
in
test
jmp
in
ss
in
div
ds
div
fidivl
stc
loop
add
testl
xor
jmp
cmc
repz
in
in
fiadds
xchg
mov
repnz
jecxz
les
ret
clc
ds
iret
aam
fdiv
neg
out
test
xchg
or
loopne
in
call
iret
xor
leave
sti
out
xor
lock
loope
repnz
call
fmul
xchg
fmull
in
leave
cs
sar
sarb
aaa
xchg
ret
ret
xchg
loope
cli
dec
cmc
cld
hlt
fsubrp
out
hlt
aaa
call
loop
aam
clc
mov
or
loope
lret
test
rol
into
repnz
lret
aaa
aad
sar
rol
out
into
ds
fiadds
out
mov
enter
jmp
jecxz
ret
rolb
loopne
lret
lock
in
cmp
divl
sar
loop
std
in
ljmp
test
int
repz
into
cmp
lret
cmp
repnz
repnz
in
fst
mov
mov
out
aaa
ret
ljmp
aam
loop
ret
lock
xchg
fcmove
mov
rcl
rol
sub
ror
ljmp
loop
aad
out
mov
xor
jmp
int
or
and
xchg
ffreep
mov
icebp
jmp
repnz
aaa
sub
aam
std
enter
lock
clc
cmp
loop
hlt
sar
hlt
mov
fdivr
jmp
repz
shrb
repz
loopne
lret
fdivrl
sarl
xor
ret
std
lock
icebp
lret
out
cmp
aaa
iret
xor
ljmp
fdivrp
cli
jmp
mov
jmp
stc
lret
lret
fdivr
clc
fucom
xchg
lret
aam
fmull
ljmp
int3
hlt
in
cmp
int
ljmp
call
lret
fadds
rol
fcomi
das
icebp
out
ds
in
cmp
loop
jmp
jecxz
in
mov
lock
in
aam
jmp
imul
ror
fcmovu
fxam
fst
cmc
out
jecxz
loop
iret
jecxz
out
lret
rol
das
repnz
aaa
rcr
jmp
lret
sarb
into
aad
ljmp
cld
repz
aad
rcl
aad
fld
xor
lret
cmp
jmp
loope
out
xchg
mov
iret
loop
cmp
repnz
not
sar
cmp
test
repnz
ret
clc
std
iret
out
in
addb
cli
loop
fdiv
lret
loope
add
loop
popl
iret
into
aad
out
repz
cmp
cli
cmp
movl
jne
mov
movl
mov
movl
mov
mov
movl
jmp
aad
leave
fcmovne
fcmovbe
test
jmp
sti
or
adc
jge
jl
sarl
repz
les
test
fmull
in
ljmp
lret
les
mov
stc
int3
into
mov
ds
jmp
fistpll
leave
ss
int3
jecxz
test
cld
mov
addb
in
loopne
div
iret
aas
jmp
std
repz
fst
loopne
loope
leave
xchg
loope
shr
lock
jmp
aaa
cli
roll
jmp
xlat
out
loope
lock
sub
test
in
rcl
fst
loop
inc
testl
test
aad
aad
out
std
xor
iret
hlt
jmp
sarl
fcmovnu
mov
ret
icebp
int3
fcmovbe
xchg
int3
shl
ss
fstpt
cmp
lret
jecxz
cmp
cmc
call
leave
int
fcmovu
incl
cli
lds
int
idivl
cld
cld
fcmovne
xchg
add
ffree
mov
shr
out
repz
out
rcl
jmp
ret
xlat
loopne
fldpi
lret
cli
xchg
enter
fidivs
cmp
call
cli
in
stc
lock
call
lret
cld
call
int3
cmp
hlt
out
cmc
xlat
aam
in
faddl
enter
loopne
in
test
nop
lret
aad
iret
in
in
xlat
fadd
repnz
clc
sti
jecxz
test
in
xlat
out
call
out
ror
hlt
lret
rcl
iret
fnstcw
lret
in
shl
mov
jmp
loopne
loope
out
fcmovbe
out
cmp
stc
fdivr
repnz
fcmovnu
mov
movl
in
xor
in
repnz
fcmovne
out
std
repz
std
ss
xor
mov
out
test
shl
xchg
imul
aaa
jecxz
icebp
ffree
cmp
cmc
in
stc
repz
xchg
aad
in
rcr
out
incb
rcr
out
cld
cmp
fsubr
test
out
cmp
rcr
int3
stc
mov
xor
shll
xor
ljmp
call
hlt
lret
fcmovu
out
mov
call
stc
cmp
cmc
cmp
sar
repz
jecxz
mov
mov
orl
mov
aad
in
aas
rcl
cmp
fsub
iret
clc
jmp
leave
mov
iret
out
test
out
xor
jmp
int
int
clc
rcr
clc
bnd
out
test
sub
leave
sti
xor
cmp
rcl
lret
addl
stc
ljmp
in
lret
sub
xor
aaa
icebp
aad
aaa
leave
sarb
int3
in
test
jecxz
stc
repnz
mov
jecxz
ficoms
jmp
xor
icebp
out
clc
out
aam
cli
std
repz
xlat
testb
lret
das
lret
fdiv
sti
out
lret
jecxz
repnz
rcr
fiadds
xchg
loope
shl
rol
hlt
enter
lret
iret
jmp
fadds
out
rol
cld
mov
xchg
dec
cld
and
frndint
fidivrl
repnz
repnz
aam
clc
xchg
in
into
fimuls
cmp
xor
in
repz
sbb
rcl
sti
aam
shl
mov
loop
xor
into
in
shl
cld
xlat
sub
shl
xchg
movl
loopne
repnz
std
fcmovu
sti
cmc
cmp
hlt
fcmovb
jecxz
fcom
jecxz
xchg
test
into
out
lret
into
xor
aad
fcomip
clc
aad
and
enter
xchg
shl
aad
ret
out
aam
aaa
sti
aad
cmp
int3
aad
xchg
ljmp
fstp
fisttps
xor
clc
in
xlat
stc
iret
in
test
stc
cmp
addb
in
jmp
jmp
aad
xor
sti
cmc
addl
fcmovne
enter
loopne
cmp
aam
xlat
in
into
into
fistpll
cld
clc
xlat
idiv
rolb
out
test
xchg
jecxz
xchg
enter
fcmovb
cld
aaa
lret
div
out
fistpll
rol
add
out
enter
mov
repnz
in
enter
xor
cmp
fst
ret
xchg
out
mov
fstp
out
call
int
loop
jecxz
rol
cmp
ffree
cmp
imul
idivb
fdiv
cli
ffree
hlt
fiadds
out
cld
enter
leave
xor
cmp
idivb
jecxz
cld
ljmp
out
in
das
in
out
enter
out
mov
mov
jmp
movl
cmp
jne
or
andl
or
mov
subl
jmp
int3
ds
rcl
iret
or
dec
jb
pop
jle
jge
jl
icebp
cld
into
stc
loopne
aam
loope
les
nop
rol
mov
repz
out
sti
xor
hlt
repnz
call
fcmovnbe
icebp
call
std
or
fmulp
enter
in
repz
into
cmp
out
leave
lock
clc
iret
out
movb
fnop
jmp
out
in
rcl
xor
fucom
icebp
pushl
rcl
cmc
lock
xlat
neg
addl
shr
loop
ror
sti
cmp
loope
std
repnz
neg
cli
in
lret
test
ror
rclb
cmp
stc
ljmp
fnstcw
into
cmp
in
hlt
ret
dec
test
out
mov
ret
lock
sar
into
lock
cmp
xor
div
test
decl
in
enter
in
repz
into
lret
aam
and
lret
jecxz
out
call
mov
idiv
fstpt
icebp
div
aaa
ss
cmp
aas
xlat
aam
mov
out
loopne
in
aad
jmp
jmp
fcom
ffree
out
std
lock
fcmovnu
flds
rcr
shlb
cmpl
aad
cmp
jmp
ret
lret
loope
call
in
icebp
xor
lret
into
ret
stc
jmp
leave
in
in
inc
out
and
test
aam
out
cmc
int
in
ds
sti
bnd
les
nop
into
xchg
aas
in
ss
div
lret
int3
shr
fstp
repnz
inc
mov
std
into
rcr
fimuls
loope
fxch
into
sarb
jecxz
std
fcomp
shr
mov
loope
lds
aaa
iret
leave
aad
std
fistpll
fbstp
aas
std
loop
test
fcmovb
lret
jmp
mov
repz
xor
iret
out
rcr
cmc
fsubr
and
mov
sti
hlt
cld
loope
test
out
int
idiv
lret
cmp
xor
cmp
fsub
int3
icebp
shl
loope
add
xchg
loope
in
or
ret
faddp
lret
out
cmp
lret
int3
cli
jecxz
ret
xchg
loop
sbb
iret
cmc
jmp
sti
cmp
hlt
ss
stc
icebp
in
hlt
leave
repnz
fisttpll
stc
loop
icebp
cmp
shr
loopne
rcl
fdivr
ret
call
enter
xchg
lret
lret
jmp
xor
fistpll
iret
jecxz
test
dec
test
orb
xchg
lret
ljmp
divb
out
filds
xchg
jmp
cli
out
lock
lret
out
aam
aad
sti
aam
xor
cld
neg
roll
fucomip
lock
ss
aam
cmp
clc
ret
fimull
out
xchg
mov
call
fcomp
ljmp
ror
out
testb
lret
std
mov
ret
fsubr
stc
jmp
xlat
cmp
ret
loopne
shl
loope
jmp
jmp
xchg
mov
xchg
in
in
sti
lds
fnstenv
fcmovnu
int
int
rcr
loop
ret
enter
neg
fcomi
sti
xchg
in
jecxz
leave
loope
stc
in
ljmp
in
loopne
xchg
repz
cli
lret
cmp
call
jmp
out
rcl
std
cmp
shl
fcomp
in
sub
cld
xchg
out
leave
fdivp
subl
out
lock
int
hlt
ret
cmp
fcmovu
neg
jmp
jmp
sub
loope
out
aam
lock
ljmp
loope
movb
addl
repz
in
aaa
cmp
into
idiv
ret
mov
inc
loop
loope
into
ljmp
idivl
cmp
int3
fdiv
int
loope
out
aad
in
jmp
dec
clc
and
test
int3
xor
repnz
ljmp
rcr
lock
ror
rol
hlt
jecxz
mov
mov
cld
ss
sub
stc
jmp
cli
cld
out
shl
out
aam
loop
in
out
fsub
xchg
out
das
rol
cli
call
int3
lret
shl
hlt
jmp
lret
loope
out
mov
cld
lret
stc
fldz
sarl
xor
xor
fdivrp
xor
mov
in
testb
aaa
out
into
ss
rcl
lock
sarb
mov
mov
fsub
loopne
out
int
lret
rol
repz
ss
icebp
hlt
cli
aad
clc
repnz
testb
aaa
rol
out
test
inc
or
add
fs
add
adc
mov
incl
add
orl
push
call
movl
incl
cmpl
jb
movl
jmp
cmp
movl
jmp
ror
int
lret
xchg
or
mov
fsubl
sbb
jge
jl
cmp
test
loope
fldl
xchg
leave
into
loop
cmp
hlt
out
cmp
xlat
shl
hlt
xchg
loope
push
fmull
cld
aas
loope
repz
int3
jecxz,pt
cmc
out
xchg
out
imul
call
mov
int
ror
rol
into
fxch
std
cmp
xlat
roll
jmp
call
fldl
xlat
int3
fstp
lret
idivb
fdivrp
aam
hlt
in
mov
sti
iret
loopne
ljmp
xor
out
fmul
cmp
mov
fabs
repz
leave
int
cmc
in
out
fcom
lret
iret
in
repnz
ret
out
out
stc
fsincos
clc
loopne
into
das
in
stc
lret
ljmp
shl
div
and
xchg
addl
ficoms
aad
xor
call
fcmove
iret
cmpl
cmp
or
dec
loop
sar
aaa
repnz
test
not
clc
cld
fcmovnu
add
aam
cli
sar
mov
into
xchg
jecxz
aam
xor
lret
hlt
cmc
loop
idiv
loopne
leave
aam
fsubp
out
mov
out
fsubr
out
leave
in
in
cmp
neg
lret
cmc
rol
cmp
sti
xchg
fcmovu
xchg
lret
loop
int
rolb
in
xlat
shl
test
sar
in
rol
xor
xor
out
fnsave
int
out
fstp
rcl
fdiv
movb
mov
loopne
jmp
lret
div
idivl
fnstsw
icebp
fadd
sar
cmp
fsubr
sti
loopne
fmul
out
in
test
ror
iret
call
cmp
inc
fcom
cli
repz
in
out
std
cmc
xchg
jmp
xlat
test
lret
std
cld
out
fcomp
shl
std
shl
lret
out
enter
out
divb
jmp
aad
out
xor
not
aad
lock
ds
xchg
sar
xor
jecxz
cmp
aam
aaa
bnd
int3
test
in
sti
rol
loopne
mov
out
aad
aad
loopne
rol
cld
int
in
fidivrs
lock
add
sti
int3
clc
cli
in
jmp
ret
int
fsubrp
stc
shr
cmp
fsub
out
leave
call
fmulp
xchg
enter
sub
cmp
sarl
sarb
cmc
jecxz
mul
hlt
xlat
int
iret
in
iret
out
out
mov
cs
fcmove
cmp
into
stc
fdivrs
ds
aam
aam
clc
xchg
lea
out
int
fsubr
in
lret
rcr
int3
add
leave
sar
cld
in
xor
out
in
lret
hlt
cmp
aad
roll
sti
addb
or
out
aaa
divl
aad
xor
cmp
cmc
leave
loopne
faddl
ljmp
jmp
fucomip
enter
cmp
mul
fdivr
int3
lret
ret
xchg
inc
stc
cli
loopne
in
xchg
rcl
loopne
out
xor
das
cmp
jmp
aas
testb
xor
fldl
jmp
xor
ljmp
cmc
stc
xor
ret
std
out
fadd
test
int3
in
mul
int
xchg
icebp
mov
out
rcl
call
lret
fcmovne
fucom
ffree
sti
hlt
loope
lret
faddl
loop
fnstcw
hlt
lret
fmulp
ds
cmp
test
clc
clc
lock
xchg
icebp
int3
xor
aaa
aam
xlat
call
loop
rcl
orl
dec
mov
shlb
clc
out
enter
test
repz
cld
repnz
iret
in
xor
adc
stc
ret
mov
hlt
les
ljmp
rcl
ror
repnz
call
cmc
jecxz
cli
fcomip
std
dec
loop
call
ss
repz
in
cmpl
call
fdivrp
jmp
mov
shll
sar
clc
lret
ss
mov
in
shr
loop
shr
iret
adc
fcmovnb
aad
xor
in
test
not
fcmovbe
sbb
xchg
lock
in
loop
int
cli
out
hlt
shl
aad
icebp
mov
rcr
fdivr
cld
mov
mov
mov
cmc
loop
aad
neg
cmp
aas
out
aas
in
ret
rcl
mov
test
mov
mov
lret
into
loope
xor
divb
cmp
ror
jne
xor
or
adc
movl
orl
mov
sbbl
mov
xorl
jmp
rcl
lret
rcl
cmp
mov
out
and
jge
jl
sti
cmp
fdivrs
out
repz
stc
test
loop
aad
leave
fmul
sti
fmul
ror
cli
shl
lds
loopne
std
cmp
mov
fmull
xor
cmp
lret
repnz
loope
repz
out
mov
jmp
cmp
int
aaa
fsubr
iret
ljmp
sbb
xchg
out
fmul
repz
repnz
divl
cmp
fcmovnb
fsub
out
cld
fucomp
cmp
lock
mov
mov
loop
call
orb
repz
out
cmc
aas
ljmp
and
ret
leave
loop
decl
divb
shll
ror
in
out
roll
out
cld
hlt
repnz
fdivp
loope
call
lea
in
hlt
aaa
sti
ss
cmp
rcl
lock
rcr
ret
mov
int
shl
not
xor
int3
std
xor
icebp
in
repz
cmp
xchg
out
stc
mul
mov
xchg
jmp
cmc
into
xor
repnz
loope
sar
repnz
stc
out
fxam
and
nop
mov
loop
ret
shl
stc
enter
cmc
leave
aam
cmp
icebp
loope
addl
filds
in
cmp
hlt
call
cmp
std
xchg
ret
and
out
lea
cmp
aad
cld
out
fdiv
cmp
rcl
shl
and
jmp
mov
enter
aad
jecxz
shl
int3
fdivrs
lret
sti
repz
lock
std
rolb
int3
call
xlat
fcom
fdiv
fmulp
fcmovnu
fucomip
into
out
cmc
cli
xchg
in
xchg
loope
hlt
cmp
out
xlat
fucomi
cmp
repz
ljmp
enter
xor
loopne
fcmovne
fucomip
int3
out
loopne
fmulp
in
fimuls
mov
rcr
loope
lret
in
ror
xor
cmc
cld
aam
cmp
fxam
addl
loop
into
lret
mov
loop
ror
fcmovne
in
ror
std
or
rcr
sti
cmp
fcmovbe
fadd
xor
std
iret
call
xlat
loopne
std
in
repz
aas
icebp
clc
jecxz
xbegin
mov
xchg
lret
aad
aam
xor
into
jmp
stc
cmc
cmp
into
test
cld
or
fdivr
xlat
fneni(8087
leave
leave
jmp
into
in
rol
out
cmp
icebp
fidivrl
test
std
mov
jmp
xor
jmp
repnz
xlat
fcomp
cmp
std
xlat
shr
lret
mov
repz
out
xlat
int3
xor
in
div
jmp
hlt
shl
jmp
in
fisttps
ret
das
aaa
xor
xor
idivb
rcl
icebp
ret
rcr
hlt
ret
cli
ljmp
test
into
leave
out
div
ffree
xchg
xor
int
loope
xchg
sub
shrb
xor
icebp
out
aas
shl
loope
ret
lds
fdiv
out
fcomp
xchg
out
out
out
ss
shl
cmp
int3
iret
cmpl
in
fsubrp
sti
ds
loope
std
in
fsubr
out
leave
test
clc
xor
in
lock
hlt
ret
loope
xchg
ljmp
xor
xor
leave
aam
cmp
testl
incl
sub
aaa
enter
xlat
loopne
fchs
ds
in
decl
loopne
or
icebp
in
ljmp
cmc
repnz
icebp
out
aad
call
in
enter
jmp
loope
shr
cmp
aam
lock
jmp
in
int3
call
lea
fcmovnbe
iret
cli
ror
cmp
stc
fdiv
cmp
test
repnz
mov
fcmovu
std
xchg
xor
hlt
shl
cmp
leave
jmp
aam
rcl
fiadds
out
fdivrp
xchg
loop
repnz
shll
cmp
repz
lock
std
test
jmp
std
in
lret
sub
call
leave
out
cld
sbb
out
xor
cmc
enter
xchg
out
into
xlat
std
leave
cmp
cld
ss
repz
lock
out
out
mov
fsubr
lock
stc
not
cli
lret
out
repz
addl
clc
popl
xchg
lret
xor
aad
fadd
int
sti
loop
stc
cmpl
sub
xchg
lock
out
xor
cmp
mov
incl
jmp
int
iret
rcl
fsts
fs
or
sub
and
jl
add
cmp
xor
in
repz
imul
out
lret
fsubrp
hlt
xor
xor
aaa
lret
neg
fcmove
in
repnz
std
test
in
xchg
mov
test
addb
fcmovne
out
std
fcmovnbe
sarl
sar
xlat
xlat
icebp
icebp
testl
orb
into
sti
out
lret
leave
not
test
imul
addl
jmp
cmc
xchg
in
int
fsub
ror
neg
enter
rcr
jecxz
xchg
loope
call
ljmp
xor
repnz
cmp
cmp
lret
ljmp
xchg
call
cmp
int
cld
rcr
adc
jecxz
rolb
incb
out
xchg
shr
lock
mul
int
cmp
xlat
loope
rcl
adc
fldl
cld
shl
out
lret
xor
into
loop
cli
iret
sti
sar
cmp
out
rol
mov
out
fucomp
in
shr
das
out
into
aaa
in
out
lock
ds
cli
ret
aam
and
in
clc
sbb
mov
ror
cmp
cld
enter
out
lock
xlat
in
in
lret
loopne
shl
lret
out
out
ljmp
lret
lock
test
faddl
into
lret
fstl
xor
out
out
fcomi
ljmp
aam
clc
fld
test
jmp
shrl
int3
aad
int3
std
sti
mul
aad
xchg
idivl
jmp
loopne
faddl
in
iret
in
shr
cmc
lret
ss
cmp
in
fmul
ds
fsubp
clc
in
mov
sti
in
in
mov
ljmp
xor
cli
adc
jmp
mov
enter
iret
in
fadd
stc
cmp
in
int
lret
out
neg
mov
stc
loope
into
cli
ljmp
icebp
fmul
int
neg
leave
div
ds
out
imul
loop
out
loopne
in
iret
fists
fdivr
hlt
lock
jmp
cmc
and
cmc
faddl
ret
push
jmp
ljmp
fistpll
repz
into
lock
out
sti
lret
in
rclb
xor
sarl
repnz
aaa
iret
in
repnz
frstpm(287
int
xchg
repz
adcl
jmp
out
lret
cli
ror
adc
cmc
clc
fsub
out
sbb
xchg
jmp
out
in
cmp
call
out
aam
lock
cld
mov
repnz
mov
mov
and
icebp
ror
xor
fcmovnu
aaa
icebp
icebp
jecxz
cmpb
not
jmp
test
jmp
xchg
std
shr
sub
hlt
iret
out
clc
aad
clc
cmp
fcmovne
cmpb
fcomp
and
int3
lret
subl
fidivrl
lret
test
cmc
loop
fstp
mov
test
in
fistl
out
enter
stc
out
icebp
push
lock
mov
int
xchg
iret
call
jmp
test
rolb
mov
in
jmp
jecxz
out
out
xor
aad
fmul
rcl
fcmovb
lock
clc
repz
shl
lret
fchs
fsub
in
out
ss
call
cmp
ror
sti
out
out
out
xchg
out
loopne
fiaddl
out
ljmp
hlt
ss
and
out
aam
aam
ret
test
fcmove
sti
jmp
sub
div
frndint
xor
int
cmp
xor
lds
addl
cmp
fdivr
fidivrl
cmp
cmp
cld
in
cmp
aam
ljmp
jecxz
fdivp
xor
cmc
out
lock
lret
call
aad
jecxz
call
int
xchg
icebp
fcomip
lret
lock
repnz
stc
lret
fmul
sbb
test
fcom
out
loopne
nop
addb
lret
cmp
repz
fdiv
out
out
cmp
cmc
out
fucomp
fmul
in
out
xchg
xchg
xchg
xor
aam
in
enter
aad
shl
cmp
aad
loopne
mov
aad
fmul
lret
lret
xor
fdiv
xor
iret
aam
aaa
xor
fdivr
ds
clc
faddl
sti
in
ljmp
in
clc
lock
lret
iret
cld
cld
test
xlat
sbb
in
aad
mov
ficoml
add
int3
cmc
out
lock
fmul
fchs
cli
cmpl
call
jecxz
repz
out
xor
mov
mov
jmp
ds
aad
aad
aad
movb
lds
jle
jge
jl
hlt
aas
int3
std
fidivrs
std
out
loop
call
out
filds
cld
xchg
fsubr
repz
ss
xor
out
in
ds
out
fucom
aam
sar
cmp
loop
roll
aas
out
mul
shr
stc
fsubr
fmul
cld
in
cmc
cld
fsin
jmp
loopne
ret
mov
in
xlat
enter
lret
shl
imul
flds
in
in
clc
out
mov
out
test
in
icebp
in
sti
imul
stc
repnz
enter
dec
out
xchg
in
aad
les
int3
xlat
cmp
xlat
cmp
loopne
mov
rcll
out
xor
push
fucomip
call
faddl
lret
clc
int3
leave
add
cmp
out
cmc
cs
fiadds
ds
in
cld
stc
mov
sub
xchg
fisubrs
out
cmc
shl
cli
cmp
fdivrs
ror
stc
sar
leave
sar
in
lret
ljmp
ss
xlat
out
sarb
cmp
repnz
loop
loope
fcomp
dec
lock
icebp
fiaddl
aad
shll
sti
xlat
cld
std
aas
test
neg
jmp
jmp
in
in
std
jmp
repnz
xor
xor
lret
into
repnz
cmp
repz
xchg
test
in
repz
icebp
xor
jecxz
cli
in
xor
cmp
into
testl
icebp
roll
loopne
fxch
ret
aam
call
ret
lock
fsubrp
cmc
mov
sbb
xchg
cmc
fiadds
out
lock
call
int3
int3
cmp
fcmovne
or
test
fidivs
jmp
leave
fnstsw
sarb
sti
jecxz
sarl
flds
in
mov
int
in
sub
xor
shl
aam
fdivp
icebp
hlt
loopne
in
div
cli
in
call
sub
lret
call
repz
faddl
lock
jmp
mov
loope
in
xchg
out
lock
xlat
aaa
shlb
in
xlat
fdiv
fcmovnbe
ss
lock
icebp
xchg
in
in
loope
mov
fldlg2
jmp
out
sar
aas
int
aad
std
in
loope
dec
stc
iret
ljmp
xor
lret
iret
cmp
cli
std
ss
cmp
call
decb
in
call
xor
aad
aas
fdivr
cld
cli
aas
sti
aam
hlt
lds
std
xchg
shrb
rcr
in
fcmovne
ffree
loope
ffreep
stc
rolb
fdivp
int3
repz
lds
xlat
into
xor
rolb
rol
fnstsw
xchg
out
and
cmc
int
cs
cmc
in
shl
clc
lock
cli
in
ror
jmp
jecxz
loopne
std
xor
nop
repnz
out
fmul
xlat
lret
in
incb
icebp
xchg
sub
jmp
out
enter
sarb
ljmp
hlt
test
lret
int
faddl
cmc
lock
fmul
in
cmp
ds
cmc
loop,pt
inc
test
mov
aam
shll
leave
out
sarl
xor
test
ss
push
out
mov
int3
addl
rol
hlt
ror
out
lret
repnz
cmp
test
int3
xor
int3
nop
aas
stc
in
aaa
leave
cmp
cmp
enter
test
test
add
icebp
fcoms
ret
rol
jmp
idiv
lock
fmul
loopne
fxch
fdivp
ds
fcmovnu
loopne
enter
in
in
int
cmp
cmp
test
fcmovu
sarl
sar
sti
ret
leave
int3
mov
mov
loopne
stc
les
lock
sbb
fmul
std
mov
cmc
fdiv
xlat
test
cmp
int
out
call
cld
aas
hlt
shr
cmp
iret
aam
in
jmp
iret
out
and
enter
fld
out
aaa
std
cmp
int
cmp
aad
in
rolb
in
into
mov
int
cmp
jmp
cmp
clc
cmc
in
div
vpavgw
loop
fisttpll
lock
fucomp
lret
cmp
stc
loopne
sar
ret
in
sti
mov
sub
addl
cmp
cmp
lret
fst
fnstcw
in
add
fxam
fxch
cli
incb
repz
in
icebp
shl
loope
clc
cmp
in
add
cmp
mov
jmp
in
icebp
icebp
in
ds
xor
out
jmp
rcl
aad
aad
rolb
push
mov
addr16
jl
add
fcmovbe
stc
in
lret
rolb
fisttps
shr
jmp
fidivs
out
int3
icebp
cmp
xor
std
lret
cmp
hlt
jmp
sti
cmp
in
fmul
mov
loopne
call
sub
adc
xchg
into
mov
out
aas
call
cmp
iret
out
lock
fcmovnu
shl
test
icebp
icebp
shl
cli
loopne
call
mov
xchg
lds
fxch
out
jmp
icebp
div
cmp
fcmovnu
cmc
incb
enter
cld
incl
lds
sti
xor
repz
lock
xlat
aam
fdiv
xchg
ljmp
repnz
das
call
leave
fcmovnu
lock
xlat
cli
out
std
aas
shl
fmulp
loopne
loope
int
int3
xor
call
xor
ror
int
fmul
repnz
in
aad
in
jmp
int
mov
int3
out
into
repnz
iret
aam
cmp
aam
test
ss
xchg
stc
lret
mov
sti
movb
test
iret
int3
icebp
int3
filds
shl
test
lret
lret
out
imul
int
fcmovnbe
aam
out
ror
idiv
cld
jecxz
inc
ret
in
jmp
ljmp
xor
int3
call
repnz
test
ds
std
into
into
fcmove
out
xchg
jmp
aam
aaa
call
fcmovu
cmp
sti
faddp
sti
xchg
sti
sti
jmp
out
call
leave
test
aas
clc
adc
clc
ret
and
loope
mov
xor
xor
out
std
frstpm(287
test
cld
ret
out
ret
fcmovu
cld
hlt
shl
out
cmc
cli
aam
aam
jmp
iret
sti
ror
shl
add
loopne
in
fcmovu
lret
out
sub
aaa
enter
aaa
lock
stc
ret
cmc
cmp
mov
in
int
cmc
aad
aad
repz
ljmp
shl
rol
cli
addl
out
loopne
les
call
out
shl
into
repnz
out
rolb
dec
stc
jecxz
jmp
mov
shl
aaa
cmp
xlat
cli
neg
cmp
sarl
fmulp
call
fiaddl
stc
aad
cmc
fidivrs
sbb
vpsrad
mov
call
fimull
in
xor
fcmovne
xlat
iret
into
ror
out
loopne
sbb
std
cmp
out
das
out
xor
in
bnd
cmp
ret
out
and
test
jmp
jmp
cmp
rcr
out
add
clc
jmp
fcmovu
mov
icebp
ret
jmp
std
aam
hlt
sar
repz
ds
enter
in
mov
aaa
das
icebp
into
icebp
out
neg
enter
cmp
xchg
fcmovu
ljmp
xor
push
repz
in
lret
leave
out
aad
xor
out
test
aas
call
xchg
aam
stc
shlb
cmc
jmp
ror
into
ret
aad
loopne
loop
in
jecxz
repz
shl
xor
loope
aam
lret
shll
stc
ss
addb
vpavgw
mov
clc
mov
enter
int
xor
enter
test
int3
fdivp
loope
cli
aam
vphsubbw
loope
aas
ljmp
clc
lock
in
ror
fnstsw
out
loope
stc
hlt
int
in
test
mov
shl
ss
cmp
cld
hlt
sti
sar
loopne
std
call
sti
loope
in
repz
mov
loopne
lock
ljmp
fidivrl
fsubrp
std
loop
cli
fisttpl
loopne
iret
enter
faddl
shl
loope
aam
out
lret
rcl
aad
xlat
repz
aad
icebp
std
ljmp
stc
shl
in
cmc
ljmp
and
int3
out
hlt
leave
shl
int
idiv
aas
sarl
fcom
shl
and
fcmovu
test
in
jecxz
repz
into
int3
xor
in
cld
repnz
fadd
int3
fdiv
mov
aam
mov
out
fimull
ror
lds
jmp
lret
fcomp
jmp
fldl
xchg
mov
clc
icebp
sti
jmp
cli
xchg
cmc
shr
aaa
test
ljmp
xchg
out
fsub
fcmovne
fisttps
out
out
xlat
cmc
fdiv
aaa
xor
aam
loope
sti
fdivr
loope
cmp
mul
aaa
lret
ret
mov
lea
mov
mov
xor
add
mov
lea
jmp
into
aad
int3
fcmovnu
aad
add
sub
ret
xor
jl
lret
in
rcr
aaa
iret
into
aad
repnz
enter
fmulp
call
sti
into
in
lret
loope
aas
fcmovnu
shl
in
xlat
mov
enter
xchg
out
jmp
repz
lret
loope
ret
std
test
sti
mul
cmc
lea
fcomp
test
jmp
jmp
cmp
cmp
std
loop
aas
rcr
rol
std
jmp
loopne
nop
mov
divb
jmp
cmp
fst
fcomip
loope
cmp
lock
mov
flds
iret
loope
ss
call
call
std
shl
testl
cli
mov
out
xchg
int3
lret
rcr
int3
aam
fdivs
lret
cmp
sar
xchg
jmp
loope
cmc
nop
repz
jmp
std
fistpll
int
shl
rolb
flds
xchg
addl
das
ss
int3
lock
cmp
iret
mov
stc
ss
call
cmp
sar
sti
test
iret
clc
cmc
jecxz
enter
leave
sbb
div
out
xor
fcom
cs
out
ss
rcl
xlat
std
lret
aad
lret
in
in
out
rol
jecxz
test
iret
xor
cmp
sub
repz
stc
decb
fdivrp
xchg
test
xor
sub
enter
aas
out
cmpl
repz
cmc
repnz
aas
int
or
loop
and
loope
repz
sub
xor
aad
in
fstpt
fdivr
out
incb
int3
into
jmp
cmpl
cmc
out
repz
ljmp
loope
fnstcw
xlat
lret
ljmp
cld
loopne
sub
repz
out
call
cli
aad
cli
iret
rcl
fadd
in
aas
loop
jmp
call
xor
in
loop
stc
int3
fnstsw
sub
ds
aam
lret
in
lret
fisttpll
ret
xlat
int3
call
icebp
aad
cld
cmp
cmp
xlat
clc
fninit
fiaddl
roll
int
repz
in
xor
mov
aam
std
in
lret
mov
iret
ljmp
cmp
xor
roll
shr
sbb
mov
loop
xchg
shl
lret
repz
lret
cmp
incl
fdivrs
xlat
std
repnz
sbb
out
loop
lret
shl
lret
jmp
fiaddl
test
add
jmp
in
aad
test
in
ret
cmc
lret
out
hlt
sti
cmp
clc
ror
and
loope
out
cmp
shr
fidivrl
int
iret
test
fcom
cld
ret
xchg
incl
xchg
xor
sar
lock
into
repnz
into
mul
filds
call
test
xchg
jecxz
cs
lret
cmp
xor
int3
cmp
test
idiv
call
lret
in
ljmp
enter
fsubr
cmp
fst
xchg
fxch
decb
mov
in
loop
cmc
xor
ss
xor
cmp
loop
test
jmp
jecxz
jmp
lret
mov
repnz
ljmp
rcr
ret
std
xlat
shl
and
movb
xchg
in
sti
repz
xor
push
ret
rcl
cli
leave
rcr
iret
fcoml
iret
cmp
int3
iret
stc
cmp
rcr
loop
ljmp
mov
stc
int
jecxz
cmp
jmp
lret
ljmp
leave
sbb
idiv
lock
cs
out
aad
clc
aas
repz
shl
into
loope
enter
int
incb
sub
rol
rcl
repz
sti
iret
cmp
ljmp
sbb
xchg
rorb
iret
aad
aam
fcmovne
cli
jmp
rcr
std
fcmovnbe
fildl
xchg
int
xchg
in
repnz
xor
cmc
shll
loope
in
rcl
test
aad
aad
jmp
in
enter
loop
int3
call
fmul
dec
xor
repnz
enter
rcr
cld
lock
loope
lret
fxch
fsubr
lret
lret
fsubr
in
shl
ret
loop
jmp
pause
out
in
mul
ljmp
ds
rcl
loopne
sti
std
fiaddl
in
out
stc
cli
cmp
stc
fdivrl
dec
hlt
lds
test
aad
ret
orl
in
cld
int3
div
out
mov
xor
jmp
ror
ror
rcr
frstor
pop
sub
cmp
jl
add
fidivl
ss
fmul
out
mul
loop
or
fcmovb
int3
out
mov
in
aam
loopne
xor
aam
shl
jmp
hlt
cmp
hlt
aas
cli
int3
ljmp
lock
int3
cmp
int3
iret
cmp
out
cmpl
hlt
vpsllq
ret
fmulp
in
out
lret
into
in
clc
in
aas
cmp
iret
into
cmp
mov
cli
enter
jecxz
mov
adcl
xlat
stc
cmp
sar
sarb
repnz
fcom
addl
dec
lret
sub
aad
ror
repz
aaa
stc
loopne
fdivr
roll
fsubp
fimull
cmc
cmp
cs
cmp
clc
iret
ss
cli
cmc
aas
clc
rcl
shr
std
fcmovnu
loopne
std
xchg
fdivr
aad
shrb
jmp
xor
cmp
loope
lock
xchg
mov
cmc
in
repz
xor
xor
out
call
int
aad
loopne
ds
fiaddl
sti
test
lret
xchg
cs
icebp
lret
repz
sti
jmp
mov
fcmovb
fcoml
jmp
repnz
fidivs
testl
in
jmp
shl
lock
cmc
sar
mov
ffreep
jecxz
rorb
hlt
divb
int
in
fsubrp
stc
fidivrs
roll
jecxz
stc
out
or
ror
cmc
cmp
icebp
aaa
cld
xlat
ret
sti
out
fucomi
int3
xchg
cmc
sub
lret
int
xor
into
cmp
aaa
fcomip
aam
frndint
test
lock
std
out
shl
jecxz
out
xor
test
out
rcr
rcl
out
in
xchg
fcmovnbe
jecxz
into
cmc
repnz
xor
xor
xlat
repnz
repnz
cld
out
loop
int3
clc
sti
in
cmc
mov
fcmovu
loop
loop
mov
xor
sar
jmp
hlt
int
ror
not
ret
stc
ds
mul
ret
test
in
div
imul
jmp
cmp
in
jecxz
rcr
out
std
xchg
mov
jmp
out
out
xor
icebp
icebp
out
repz
ffree
ds
mov
xchg
mov
out
in
call
cmp
int
rcl
adc
rcr
ret
shl
sbb
fisttps
into
xor
xor
jmp
ds
fdivr
jecxz
cld
in
lret
into
rcr
mov
loop
cld
std
int3
ror
cmp
ret
idivl
repz
out
decb
shl
int
rcr
lock
hlt
adc
std
rcr
mov
cli
jecxz
test
icebp
fiaddl
out
leave
lret
cld
ljmp
cmp
test
aad
testb
mov
loop
int3
fmulp
int3
in
out
mul
out
out
add
stc
mov
in
mov
mov
aam
loop
ret
repnz
fildl
shr
in
addl
shr
in
into
imul
bnd
out
cmp
shl
aas
ret
jmp
xchg
in
repnz
sub
int
idiv
cli
cmp
jecxz
in
mov
aam
enter
xchg
jmp
ljmp
out
in
fcmove
faddp
fstpt
ret
rcr
test
lret
fildl
xor
in
in
das
lock
cld
cld
sarb
aas
in
test
test
addl
loop
out
out
xor
aam
lret
call
rcl
movb
test
mov
ljmp
fld
fdivrl
out
cmp
out
icebp
incb
jecxz
fsubr
push
xchg
test
aam
int
std
int3
shll
aad
std
sar
fndisi(8087
stc
out
int3
loop
xchg
lret
out
sub
loope
sar
lock
xor
shl
fdivr
int3
jmp
mov
int
ljmp
stc
fadd
sti
cmp
int3
incl
fcmovnbe
sbb
iret
in
fucomip
xchg
repz
jmp
out
xor
into
iret
adc
out
rcr
xchg
rcr
in
orl
sub
rcl
clc
leave
std
out
shl
xor
aas
ds
xchg
rcl
jmp
vcmpsd
sti
xor
filds
jmp
loope
out
orb
ret
out
in
cmp
int3
fcmovnb
ss
ret
sti
out
mov
lock
in
xchg
leave
aaa
add
push
jmp
lret
ds
lret
rol
loop
inc
nop
ljmp
jl
ror
fnstcw
int3
hlt
in
in
idiv
hlt
loope
lret
clc
jmp
rcl
clc
repz
icebp
hlt
int
neg
cmp
in
enter
cld
int3
std
xchg
hlt
ret
fucomi
xor
repnz
out
int
into
std
fcmovbe
aam
loop
jecxz
fnsetpm(287
out
xchg
xchg
loop
mul
icebp
ror
iret
repnz
in
into
xlat
les
rolb
std
xchg
inc
xor
xor
fcomp
aaa
lret
shr
cmp
loopne
jecxz
ror
in
out
loopne
xchg
out
repnz
repnz
repz
sti
lret
out
aad
loop
int3
cld
ret
rolb
out
xor
xchg
test
ret
clc
ss
idiv
int3
repz
iret
sti
sarb
fst
fsub
fcomp
out
in
nop
iret
in
icebp
mul
xor
fcmovb
in
hlt
cld
cli
shll
stc
ljmp
sar
leave
fcomi
movb
int3
repz
aaa
cmp
repnz
stc
xor
rcl
rcl
rolb
out
test
out
ror
leave
cs
xor
sti
idiv
loope
shl
into
out
xlat
icebp
les
faddp
xchg
icebp
in
xchg
cmc
out
fdivp
shl
cmp
cmp
into
cmp
ljmp
incl
fsincos
cli
int
rcll
int
jmp
jmp
aas
shl
loopne
aam
loopne
xchg
orb
xor
in
fcmovnbe
out
jmp
into
xlat
fisttpl
lret
iret
out
shl
lock
aaa
lret
in
lret
in
iret
cmp
sar
fcmove
hlt
rcr
fiaddl
repz
in
xor
std
ror
cmp
icebp
out
call
icebp
cld
xchg
ljmp
hlt
cmp
aaa
in
aam
aaa
ss
cld
adc
aam
xlat
lret
mov
incl
hlt
jmp
cli
incb
int3
stc
test
repz
sub
cs
sti
stc
out
lret
xor
fcomip
fildl
fstp
loope
shl
and
ror
fpatan
clc
lock
aaa
not
in
fcmovb
fcmovnbe
test
xchg
int
in
decl
out
xor
into
cmp
cmp
cmp
fnstenv
rcl
sti
lock
stc
enter
mul
jmp
out
ljmp
jmp
in
cmp
ds
out
cmpl
fadds
sbb
loope
in
xor
rol
aad
jmp
in
into
ret
stc
mul
fsincos
cmp
stc
jecxz
addl
cmp
iret
aaa
out
sti
div
cmp
clc
shr
mov
mov
fsubp
test
loope
into
xor
cmp
clc
into
cmp
push
cld
cmp
test
loope
out
lret
cmc
sub
in
shll
hlt
cmc
loopne
fst
aad
loop
aad
sti
xchg
in
out
xor
rcl
xor
xor
cmp
cli
out
rol
fdivr
xor
fcomp
std
fldl
out
fxam
in
cmp
ljmp
stc
jecxz
ret
fsubr
sbb
in
jecxz
cmc
jmp
out
ljmp
int3
repz
into
out
loope
ds
sti
mov
std
xor
lock
das
lret
out
lret
cmp
iret
cmp
idiv
cmc
ret
std
in
in
cmc
fsubrp
shl
xor
xor
out
sar
cmp
rolb
nop
test
in
lret
xor
out
iret
cli
lock
int3
jecxz
rcr
std
test
in
mov
test
stc
lret
xor
idiv
int
ljmp
icebp
xchg
loope
orb
xchg
mov
out
test
div
jmp
cmp
faddl
fstp
stc
lret
lret
decl
call
out
xor
fcmovnu
ret
cmp
cmp
rcr
cmp
int
loope
in
repnz
jmp
lock
in
xchg
lock
aad
in
in
icebp
sub
rcl
vpextrw
aaa
out
ss
rcr
fxtract
out
fldl2t
ret
lret
cmp
jmp
int
call
jmp
rcl
in
icebp
repz
sti
leave
out
xchg
enter
in
xor
cmp
fdivr
aaa
in
out
cmp
in
and
mov
fiadds
lret
test
jecxz
div
fnstcw
in
cmp
xor
shl
in
shl
addb
iret
xchg
test
in
xlat
xor
stc
clc
ds
ret
aas
fld
mov
xchg
incb
js
inc
add
sub
jmp
rcl
mov
neg
repnz
mov
mov
ds
jge
jl
loop
ret
fsin
loope
jmp
sarl
loopne
fadd
out
stc
jecxz
fmull
out
leave
xor
xor
leave
loope
sarb
fcomip
incb
int3
fimuls
cmp
in
fsubr
aaa
repz
ss
les
call
mov
enter
sti
fdivp
lret
in
fcmovnb
jmp
aad
loop
orl
fld
cmp
icebp
call
jecxz
in
testl
cld
ljmp
in
cmp
std
cmp
idivl
aam
shl
cli
aam
loop
int3
leave
fimull
ljmp
cmp
loope
out
loope
ret
repnz
jecxz
leave
addb
loop
out
int3
lret
std
xor
leave
out
clc
cmp
cmp
fsubp
fucomi
loopne
test
jecxz
fucomi
in
out
ss
loope
std
shl
sti
faddp
sbb
mov
xchg
test
test
in
xor
jmp
int
hlt
aas
aam
incb
ljmp
loop
neg
int
imul
aad
stc
sti
cmp
repnz
int
out
int
repnz
ds
lock
jmp
fxch
cli
inc
loope
cmc
repnz
in
or
into
loope
lret
in
icebp
ds
int
rcl
aad
hlt
fidivrl
fcmovnu
les
add
sbb
cld
mov
jmp
in
repz
ds
lock
fcmovne
ret
fmul
lret
lock
ljmp
cmp
xor
icebp
jmp
ret
icebp
ffree
call
xchg
mov
jmp
xchg
int3
repz
out
out
int3
ljmp
aam
div
rol
sub
fldl
mov
in
fildll
xor
out
jmp
jmp
loop
ds
sar
call
and
and
mov
in
rol
cmp
aam
clc
aad
cmc
int3
icebp
xchg
sar
mov
jmp
enter
in
call
std
fxch
lret
ljmp
add
int3
out
lret
out
cmc
in
into
call
out
icebp
rcl
hlt
loope
aam
rcl
enter
jecxz
or
jecxz
loopne
repz
lock
int3
cs
lret
lock
cmc
cmp
stc
repnz
loopne
out
rorl
repnz
sti
stc
ror
fidivrs
test
cmp
enter
leave
in
fcomi
fisttps
int
divb
int3
fucomip
cmp
repnz
roll
aas
call
xchg
incl
ss
fdivr
lret
cmp
rcl
clc
fildl
mov
xchg
out
ror
jecxz
lret
rcl
hlt
xor
in
cmp
out
rcr
filds
jmp
out
int
repz
enter
ss
jecxz
int
cmc
xlat
adc
xchg
mov
enter
ror
dec
jmp
into
in
in
aaa
in
in
sarb
jecxz
flds
std
fdivr
mov
movb
xor
lock
jmp
lret
aas
fadds
leave
fchs
in
mov
neg
ss
cld
aaa
aas
into
loopne
fsubr
ret
cmc
xchg
std
out
xor
jmp
enter
cmc
aad
cmp
test
cmp
in
dec
mov
add
stc
out
call
out
in
int
addl
roll
fmulp
leave
mov
cmp
xlat
jmp
fmulp
mul
fcmovb
repz
jmp
leave
into
out
loope
int
ror
into
icebp
fnop
cmp
xor
xlat
fxch
xlat
int
iret
sbb
cld
iret
jecxz
shl
fldcw
jmp
cli
fildl
fsqrt
enter
in
out
repnz
shl
iret
in
iret
cli
aad
repnz
loop
leave
cld
xlat
fdivrl
lds
xchg
out
ljmp
hlt
iret
loopne
repnz
cld
fcmovne
ret
sti
enter
mov
roll
out
jmp
icebp
ror
shl
idiv
icebp
idiv
movb
xchg
loop
shl
in
loope
lret
jmp
idivl
sti
roll
in
in
fdiv
mov
int
xor
iret
jmp
in
fmul
cli
cmp
in
int3
cmc
rol
clc
fisttpl
out
out
jecxz
lds
in
cmp
sarb
stc
sarb
test
mov
jmp
xchg
shrb
xor
jo
add
jmp
jmp
int
mov
cmp
xchg
xor
jl
add
iret
fld
xor
fsubr
out
aad
in
lock
fincstp
ds
fldl
ljmp
jecxz
call
ss
cmp
clc
mov
fsub
fsub
in
repnz
xor
repnz
ss
cld
lock
sbb
aam
leave
in
jmp
sbb
hlt
loopne
xor
in
hlt
std
cmp
out
shl
aam
xlat
out
test
mul
jmp
mov
shlb
ss
lock
fcmove
fucom
hlt
mov
test
addl
shl
jmp
stc
not
cmp
cmp
enter
loopne
mov
out
sbb
xor
int3
ss
cmc
lock
fstpt
hlt
mov
sar
mov
xchg
sar
xor
aad
repnz
cmp
hlt
rcr
sarb
test
fmul
or
xchg
call
xor
lret
call
cmp
hlt
idiv
iret
fxam
cmc
incb
cli
orl
shl
rol
cmp
ror
cmp
repz
iret
aas
stc
fldl2t
aad
mov
fcmovne
xchg
xchg
into
in
enter
into
shll
cli
in
fdivl
rol
testb
leave
ljmp
in
iret
out
in
hlt
int
repnz
cmp
cld
mov
cmc
mov
lret
shr
aaa
jecxz
aam
xor
xlat
xor
hlt
loope
out
loop
mov
in
shl
icebp
xchg
fidivs
fdivr
jmp
fcmovnbe
out
fsubr
out
clc
faddp
cli
repz
sti
int
lea
jecxz
fnstenv
std
fsubr
fdivrp
in
ljmp
aam
imul
call
cmc
xchg
in
repnz
rol
in
sarl
cmp
cmp
in
ds
aad
clc
sbb
mov
clc
fisubrl
enter
sbb
loope
fdiv
ljmp
enter
in
shr
idiv
cmp
out
cmc
in
rcl
out
test
lds
mov
xchg
out
out
in
loop
aad
sti
cmp
shl
loope
aad
repz
hlt
out
in
icebp
int
fcoml
les
stc
jmp
into
fcmovu
cli
cmp
fninit
test
xchg
test
hlt
not
ror
xor
cmp
into
xor
repnz
rol
aad
xchg
loope
in
fsubrp
aad
cmc
loope
cmp
out
fcom
leave
aam
cmp
loopne
vpsubsw
xchg
loope
int
icebp
loopne
fmul
xor
iret
or
in
in
fdivrs
fadd
into
loop
jecxz
into
sub
xor
sti
repz
repz
cmp
sub
cmc
loopne
sti
leave
cmc
cmp
enter
int
int3
sub
rcl
das
cmp
rolb
std
rolb
xchg
pushl
repnz
aam
lock
hlt
xor
jmp
loope
rol
xchg
in
mov
call
fsub
test
jmp
leave
ss
iret
iret
clc
test
jmp
test
int3
nop
cld
jmp
stc
loopne
xor
out
xor
repz
cmp
fcomip
aam
testb
lret
mov
ret
xor
call
hlt
shr
ds
rorb
mov
fsubp
test
jmp
clc
cli
xor
repnz
sar
std
jmp
out
fcmovu
test
cmc
ror
out
in
jmp
out
cmp
icebp
xchg
mov
call
repnz
mov
into
stc
das
cmp
jmp
lock
repz
aad
fcmovnbe
call
into
lds
imul
sub
xlat
int
cmp
in
xor
std
std
faddl
ljmp
stc
cmp
cmp
aam
test
leave
mov
out
roll
lock
out
fcmovnb
in
hlt
sar
lock
fldl
std
xchg
fdivrp
fsubr
xchg
jmp
shl
shl
ds
das
in
enter
in
cli
cmp
lret
test
loop
or
mov
clc
in
cli
fdivrp
into
dec
cmc
xor
icebp
hlt
stc
ljmp
fsubp
repz
fildl
int
into
shl
in
cmc
sarl
not
cmp
fsubrp
dec
sarb
cld
aas
fdivr
fcomp
ret
xchg
dec
icebp
out
nop
int
shr
cmp
into
cmp
cmp
fnstcw
cmp
ds
fcomi
loopne
fdivrp
in
mov
rcl
out
fxch
leave
imul
out
in
aad
loope
hlt
faddl
cld
test
in
les
add
add
test
add
mov
xor
add
mov
mov
mov
jmp
rol
leave
rcr
fstp
lds
mov
dec
cmp
jle
jge
jl
out
ret
repnz
leave
cmc
faddl
sar
leave
fdivr
call
fcmovu
lret
xchg
xchg
shrb
cmp
cmp
fdivrp
loop
aas
faddp
mov
int3
cld
shl
loope
orl
clc
xor
cmpb
cld
ds
xchg
ljmp
addb
icebp
lret
fcom
int
repz
sbb
aam
leave
enter
in
jmp
xchg
jecxz
in
clc
leave
repz
fsubr
in
rcl
loope
std
lock
out
ret
sti
icebp
lret
loope
leave
cs
mul
clc
aad
xor
sarb
jmp
fsubp
mov
in
xchg
jmp
lock
icebp
xlat
in
fdiv
cld
cmp
test
loopne
xchg
out
iret
int3
sub
rcr
loope
xor
ror
idivl
fidivrl
lock
test
enter
or
rorb
loop
xor
sbb
les
shl
fcmovb
mov
sti
jecxz
and
ror
out
aam
lock
int
loope
xlat
rcl
mov
aam
xchg
ffree
in
sti
repnz
fmulp
out
fcmovb
lret
cmp
rolb
repz
dec
lret
int
mov
pop
mov
jmp
out
cmp
ror
cmp
shr
ret
shl
leave
in
orl
int3
test
fdiv
filds
loopne
cmpl
fsincos
xlat
out
test
hlt
shr
leave
out
xor
in
sarb
ss
div
faddp
repnz
idiv
fsubr
test
loopne
out
xlat
shr
ret
lret
iret
cmp
in
rcl
cld
cmc
decl
xchg
imul
ror
fstpt
cld
iret
stc
sbb
stc
fucomi
shl
leave
testb
xchg
fidivs
repz
aad
in
sub
std
test
movl
fcomip
test
sti
shr
call
aas
out
jecxz
vshufps
cld
lret
jmp
xchg
mov
adc
lret
stc
fcmovnb
xor
aaa
repz
in
not
ds
imul
clc
out
movl
cmp
out
cs
jmp
int
loope
aas
shl
loopne
cmc
fcmovnu
loopne
in
sti
fcmove
cmc
into
jmp
leave
cmp
cld
aaa
rcr
xor
roll
jmp
out
fsubr
shlb
shr
clc
enter
xorl
aad
ljmp
fsubrp
mov
mov
rcr
idivl
div
ds
test
or
leave
ds
std
leave
lock
ror
leave
in
fstpt
cmp
fdiv
aas
ds
aas
hlt
orb
dec
mov
lock
int
fbstp
call
std
loope
repnz
aam
jmp
out
shl
aad
cmc
repnz
fstp
cmp
ds
loop
cli
faddl
cld
in
out
loopne
int3
std
call
ret
addl
mov
fiadds
lock
aad
fnstsw
clc
xor
cmp
fdivr
cli
cli
cmc
mov
sub
stc
cs
shr
sti
cmc
lret
test
ljmp
jecxz
out
aam
in
aam
xor
fmul
fildl
add
jmp
lret
xchg
divb
rcl
leave
xor
in
hlt
into
ss
repnz
cmp
aas
not
fdiv
hlt
loopne
jmp
xchg
das
jmp
in
cmp
fcmove
in
cmp
loopne
repz
rol
loopne
cld
enter
out
call
xor
xor
sarb
jecxz
ffree
repnz
decl
xchg
in
out
cmp
out
lock
xor
xlat
in
jmp
int3
in
enter
lock
stc
cmp
cmp
aaa
aaa
int3
cmp
test
test
out
sti
sti
std
and
leave
in
aam
cmp
or
jecxz
rcl
into
fsubrp
lret
out
xlat
in
nop
fcmove
xchg
icebp
cmc
test
call
test
loope,pt
out
mov
enter
repz
xor
loopne
aad
call
rolb
fsub
xlat
mov
sbb
loop
roll
loope
cmp
fidivrs
cmp
fcmovbe
fnstsw
in
idiv
fdivr
test
loope
or
xor
shl
cmc
not
sti
cmp
loopne
cmp
lock
les
add
faddl
in
mov
mov
push
pop
sub
add
jmp
ds
rcr
fst
xlat
xchg
icebp
mov
xchg
xchg
push
sarl
jge
jl
iret
int3
ds
ret
stc
lret
fsubp
loope
ljmp
xchg
decl
std
out
rorl
stc
int
repz
cld
shl
mul
cmp
cmp
fsubp
xchg
sti
mov
xchg
sub
aad
lock
rcr
out
std
xor
loop
ffreep
std
int3
xchg
mov
xor
out
lock
jmp
stc
into
sar
in
mov
jmp
mov
jmp
repnz
xor
aam
fdivrp
fsqrt
ds
cmp
test
fadds
sub
cld
xchg
call
stc
ffree
sarl
cmp
cli
cmp
hlt
repz
flds
icebp
out
xchg
in
ds
ss
cmp
aam
cmp
fnstsw
rol
dec
leave
loope
enter
xchg
repz
xor
xor
jmp
fcomi
lock
repnz
jecxz
ret
sti
mov
test
cld
hlt
shll
loop
aaa
lret
testl
mov
test
ljmp
xor
clc
out
xor
out
rolb
idiv
ret
loopne
mov
mov
repz
out
out
icebp
repnz
aam
decb
xchg
xchg
fimuls
in
in
xor
fbstp
cmp
jmp
out
stc
cmp
shl
vpminub
xchg
leave
lret
adc
lock
sti
out
cli
jmp
shr
cli
fstpt
fnsetpm(287
xchg
cld
add
in
in
cmp
mov
in
not
test
fptan
xor
stc
int3
fcmovnb
in
inc
mov
std
jmp
call
sti
xor
lret
fiadds
ss
icebp
loopne
jmp
in
in
loope
aad
leave
out
lock
repnz
stc
clc
loope
repnz
repz
jmp
ljmp
loope
loop
jecxz
aam
aad
cli
neg
out
out
cmp
fdiv
adc
fcmovne
adcl
rcr
fcmovu
not
icebp
loop
rol
hlt
cld
fadds
fmul
cld
out
in
out
sarl
lock
xor
fiaddl
cli
rcl
std
out
addl
cmp
in
stc
cmp
addl
xchg
leave
cmp
repz
cli
xchg
int3
cs
cmp
out
vpsrlq
loop
int
mov
out
repz
in
xor
leave
out
cmp
fnstsw
in
xlat
neg
out
out
in
in
ljmp
std
jmp
std
out
shl
shl
mov
shr
mov
ljmp
lock
ss
test
clc
sbb
fsubp
sub
ret
aad
fdiv
sarb
std
div
loope
add
mov
fdiv
int
in
in
enter
not
in
xor
fiadds
cld
in
stc
fiadds
adc
cmp
sar
rcr
xor
loop,pt
out
fxch
cmp
in
mov
mov
aaa
ror
into
ss
out
out
add
repnz
ds
in
mov
test
repz
fcomi
ror
xlat
fxch
xor
shl
loopne
out
fdiv
loopne
incl
xlat
lret
fidivl
rcl
or
fucomip
rol
xrelease
cmp
lret
fsubr
aam
out
shr
cs
repnz
ljmp
ror
loopne
out
xchg
rcl
hlt
ret
ror
xor
rcr
jecxz
rcr
cmc
aad
lds
out
mov
xor
cmp
ss
lock
in
out
xor
roll
xor
jecxz
xchg
cmp
stc
ss
in
clc
in
neg
cli
faddl
aam
xor
out
ss
out
out
cmp
stc
ds
mov
enter
mov
shl
cs
repz
int3
cmp
shl
cli
xor
jmp
into
cmc
out
stc
aam
lock
sarb
xlat
rcr
lret
xor
orb
xchg
xchg
cld
ljmp
jmp
shl
cmp
shl
in
xchg
fcmovb
in
fildl
cld
aam
stc
in
ljmp
into
xlat
sbb
cmp
xlat
ret
cmp
fmuls
loopne
repnz
cmp
xor
fucom
iret
cmp
stc
leave
sbb
int
fsubrp
in
mov
mov
xor
lea
cmp
jne
jmp
int
ds
int
lock
or
jle
jge
jl
jmp
lret
fprem1
divb
repnz
xor
cmp
repnz
ret
out
cld
loop
out
fisttpl
jmp
cs
cmp
out
in
fnsave
roll
vshufps
jmp
adcb
leave
xor
aad
in
lret
aad
iret
fcmovb
hlt
hlt
cld
ds
xchg
test
xchg
loopne
int3
xor
repz
std
fscale
aas
fst
clc
add
stc
call
lret
mov
fsub
imul
repnz
cli
leave
aas
test
fst
cli
cld
imul
into
in
cld
test
in
shl
in
cli
loope
xor
out
call
out
test
sub
iret
cmp
aam
out
xor
mov
decl
shr
loop
out
iret
cmc
xlat
lret
xlat
hlt
cld
cmp
mov
mov
lret
rcl
int
xchg
icebp
xor
clc
cmc
fucomp
shll
ljmp
sti
cli
in
xchg
int3
in
test
jmp
ss
cmp
out
ss
xor
int3
ds
ror
in
jmp
loopne
jmp
xchg
lret
aaa
loop
cld
cmp
fadds
shl
leave
lock
sti
mov
repz
iret
out
in
aad
int
rcl
rcr
idivb
cld
jecxz
sti
mov
stc
ror
cld
xchg
ror
out
out
lret
aaa
imul
cli
call
aam
rol
cmc
clc
test
jecxz
ljmp
shl
ljmp
addb
into
in
fadd
loop
xchg
loop
in
xchg
test
shl
out
loop
iret
ss
lock
repnz
cmc
hlt
cmp
cld
addb
cld
lock
sub
clc
repz
cli
enter
int3
loope
xchg
xchg
int
loopne
xor
cli
xor
cli
fsubrp
cli
out
call
enter
nop
mov
loop
ror
xor
rol
fistpll
rcl
cmp
ret
out
inc
shr
idiv
xchg
test
int
shl
int
fcmovbe
enter
imul
fildl
shl
fld
in
sti
popl
xor
dec
rcr
div
out
xchg
in
rcr
fucomp
cld
xchg
out
shr
in
shlb
int3
xor
shl
stc
fdivrp
cmp
icebp
xchg
sbb
int3
mov
cmp
fcom
les
test
aad
jmp
stc
jmp
in
aad
hlt
out
out
xor
lret
cmp
cld
out
ffreep
cli
out
hlt
xchg
lea
repnz
stc
aam
in
aaa
cmp
repz
ret
rcr
leave
cli
cli
cld
addb
xor
fnsave
aaa
xlat
jecxz
lock
stc
les
mov
iret
icebp
mov
test
xor
fcmovnbe
repz
cmp
shr
lock
mov
out
int
adc
out
xlat
icebp
repz
cmp
clc
rolb
fucomp
fxch
test
xchg
xchg
xchg
lock
shl
into
jmp
fldl
shl
out
jmp
fmulp
out
xchg
into
loop
xor
in
fdiv
into
rcl
iret
stc
repz
ss
xchg
ljmp
int3
mov
xor
xor
int
sarb
aad
cmpb
cmp
and
fcmove
out
jmp
xchg
in
cmc
test
iret
fmulp
cmp
aad
loop
sti
xchg
xchg
out
lret
out
cmc
ret
lret
repnz
fistpll
jmp
iret
std
cli
test
in
lret
aaa
sti
xor
cmc
aad
shr
cmp
test
roll
fsubr
adc
shl
orb
rol
stc
cmp
shl
cmc
mov
test
rorb
sti
hlt
lds
int
cld
idiv
rolb
jmp
stc
call
aad
ds
stc
repz
int
repnz
xchg
les
fmulp
fsubr
xchg
fdivp
sub
out
repnz
cmp
lock
iret
sar
hlt
addb
fmulp
jecxz
stc
in
call
divb
fxch
lock
fildl
fucomip
cmp
addb
cli
call
out
imul
xor
call
icebp
into
int3
repnz
faddp
fcmovnu
jecxz
fsubp
fstp
xor
das
in
loopne
div
call
xor
stc
ror
sbb
test
mov
pop
xor
jmp
int
enter
int
lds
push
fnstsw
jge
jl
out
ljmp
cmp
shl
fnstsw
cmp
cld
faddp
sti
in
iret
ljmp
aaa
jmp
xor
out
lret
cmc
aas
enter
imul
jmp
out
jmp
iret
jecxz
loop
cmc
fbstp
aaa
in
fdivr
xor
std
shr
xor
ffreep
jecxz
testb
mov
jmp
in
mov
clc
repnz
call
in
out
sub
aam
mov
clc
mov
xchg
aam
xor
in
repnz
loopne
shl
in
jecxz
loop
out
xlat
sti
cld
into
xchg
rorb
int
std
enter
shl
fildl
mov
enter
icebp
sti
nop
jmp
fldl
sub
cmc
xor
cmc
std
std
aad
test
out
xlat
fdivrp
faddl
cmp
ss
push
sti
inc
idivb
xchg
sti
cmc
cmp
in
lea
xlat
repnz
int
xor
adc
mov
test
bnd
sar
aad
int3
out
fidivrs
stc
aas
into
rcr
hlt
aam
sar
test
icebp
jmp
test
nop
call
fdiv
fdivr
cmp
cmp
xlat
cli
sti
clc
loope
loope
in
stc
rolb
lock
int
int
icebp
jmp
fidivrl
cmp
addb
dec
xchg
filds
xor
icebp
das
icebp
cld
shr
cmc
xlat
into
dec
jecxz
lds
fcmovb
lret
sti
shl
xchg
rol
int
xor
aad
hlt
sarb
int
aam
jecxz
movl
in
repz
xor
call
loopne
fcomip
hlt
test
cmp
stc
in
loop
loop
loope
sub
xor
iret
cmc
xor
xor
xor
iret
out
out
stc
in
test
repz
faddp
int
fldl2e
shr
shl
faddp
hlt
cmc
div
les
and
jecxz
xor
int
in
cmc
out
iret
rcr
cmp
ljmp
xchg
jmp
loope
fmulp
lret
repnz
not
enter
les
cli
sarb
call
int3
fisttps
ror
xlat
jecxz
xor
iret
jmp
enter
ss
cmp
hlt
out
in
leave
les
into
stc
in
div
call
loop
ret
ljmp
xor
lock
out
fcomp
cmc
xor
stc
loopne
cmp
into
out
cmc
ljmp
xchg
xchg
in
out
cmp
fcomp
fdivr
ss
cmp
cli
jecxz
shr
ret
xchg
sti
in
nop
mov
shlb
xor
xor
out
fcmovbe
std
lret
cmp
vpsrlw
fcmovu
loopne
xchg
xchg
icebp
mov
fidivs
ror
aaa
cmp
loope
sar
repnz
rorb
in
shl
ljmp
cmp
xor
adc
cmp
cmp
lock
mov
out
mov
xchg
enter
out
out
ljmp
sti
icebp
out
loopne
and
clc
lock
out
out
aam
out
jmp
sarb
rcr
std
in
aad
sbb
addb
mov
das
leave
xor
repnz
leave
into
rcr
cmp
clc
call
fmull
adcb
sarb
cmp
repnz
ss
aas
loopne
out
aad
mov
out
out
lock
cmp
sub
out
out
ror
out
mul
sar
rcl
xchg
flds
rcl
shr
ss
int3
cmp
int
ss
ret
fdivr
stc
mov
loope
fisttpll
call
sti
sti
fcmovnbe
fadd
loope
rcr
std
fcmovnbe
lret
and
in
fmull
out
xor
cmp
fcom
lret
fdivrl
aad
loop
call
mov
incb
xor
xor
xlat
imul
fdivr
ss
cmp
shl
fst
cmp
ret
clc
int3
mov
iret
loop
or
ljmp
ss
ret
hlt
fcmovu
fld1
in
jecxz
loop
test
mov
fcmovnb
icebp
icebp
sti
loopne
loope
cld
repz
sti
and
mov
xor
in
in
fistpll
jmp
shl
loopne
call
out
cld
fsubrp
loopne
repz
int3
rol
jmp
ds
icebp
fdivr
cmc
out
cld
in
test
cmp
repz
loop
fdivp
filds
xchg
jmp
pop
jmp
ds
ror
aad
fistl
loop
mov
jle
jge
jl
fstl
ror
out
fdivrl
xor
sar
sbb
mov
jecxz
nop
ljmp
ret
xlat
cmp
hlt
stc
ret
ds
mov
jmp
cmc
mov
loop
int
hlt
xlat
idivl
sarl
rcr
into
ret
jecxz
aam
or
loop
ret
ss
ret
stc
shl
xlat
iret
div
cmp
repnz
enter
std
mov
int
repz
test
hlt
in
in
clc
fcmovnb
sar
sti
aas
cmp
adc
ljmp
mov
cmc
xor
out
int
out
jmp
hlt
xchg
xchg
or
enter
jmp
icebp
ljmp
jecxz
cmp
fimuls
lock
lret
in
in
xlat
jmp
out
test
xlat
imul
test
xchg
fnstenv
into
fldlg2
cmp
loope
fnstsw
fucom
in
mov
test
sar
test
faddl
out
call
std
aad
int
icebp
fcmovnu
cmc
enter
lds
divl
loop
jmp
jmp
lret
cmp
ds
out
repz
idiv
xchg
fcmovnb
xchg
sbb
stc
cmp
call
cmp
repnz
test
fsubp
xchg
or
into
nop
repz
xor
call
incl
test
stc
lds
in
icebp
shl
aam
rcr
sti
fadd
repz
into
aad
stc
add
icebp
fdivr
int3
iret
in
iret
icebp
repnz
in
sti
jmp
stc
stc
loope
icebp
idivb
into
loope
cmc
hlt
fucomp
out
sbb
out
int3
loop
rcl
in
jmp
loop
cmp
mov
xchg
xorl
in
xor
into
lret
cmp
testl
fdiv
int3
lret
enter
iret
mov
xor
call
leave
fsubr
sar
clc
cld
repz
out
in
cli
jmp
mov
xchg
ds
call
loope
test
rcl
mov
fsubr
mov
jecxz
mov
enter
sub
out
repnz
idivl
cmpb
shl
sar
loop
lea
shl
repz
sti
icebp
lret
cmp
ffree
fcmovbe
incb
into
mov
stc
cmp
xor
ss
rol
fcom
cmp
stc
in
orb
lret
in
out
in
icebp
std
in
cmc
leave
loopne
cmp
in
lock
rcr
ss
iret
repnz
fildl
std
mov
mov
orl
out
out
fmul
cmp
sar
fcom
std
jecxz
aad
xabort
loopne
xchg
nop
fst
in
iret
stc
lret
rcl
cli
addl
leave
cld
in
mov
rclb
out
stc
out
push
fcomi
loopne
repnz
out
call
fsub
mov
xchg
sub
shl
enter
ror
std
in
xlat
int3
icebp
cmp
out
int3
loope
int3
sti
xchg
xchg
xor
call
std
ror
adc
cmp
or
in
out
enter
das
fsubr
ljmp
cmp
cmp
into
icebp
idiv
cli
les
loop
loope
lret
bnd
hlt
in
leave
out
into
jmp
iret
sbb
loopne
rcl
inc
stc
fdivr
mov
fcomip
call
aaa
out
hlt
out
sti
lret
sarl
rcl
div
rorl
decl
sub
cmc
ret
stc
cmp
iret
jmp
aas
lock
ret
incl
test
leave
loopne
fucomp
jecxz
into
in
jmp
fidivrs
fcomi
leave
shl
jecxz
xchg
xchg
out
xlat
lret
rcl
sti
xor
repnz
call
filds
testl
fsubrp
out
in
repnz
sub
fdivp
out
neg
cld
loope
xlat
hlt
mov
fmul
iret
nop
loope
int
call
leave
int3
xlat
loope
sub
out
test
ljmp
fidivs
loop
int3
cmp
int3
aad
clc
sti
aas
cmp
mov
div
cli
xchg
mov
in
loop
aam
xor
sarb
loope
cmp
stc
jecxz
fdivrp
call
xchg
xor
iret
mul
cmp
fdivp
lock
xchg
call
fmuls
loop
xor
xlat
xor
cmp
std
xchg
out
cmp
ret
call
ret
pop
leave
ret
push
mov
jmp
int3
ret
ds
fst
decl
mov
out
jl
add
jmp
leave
sub
shl
int
cmp
aaa
hlt
shl
aas
out
stc
sar
enter
in
in
loop
test
mov
sub
clc
rcl
das
out
fcmovu
loopne
loopne
out
addb
lret
xlat
mov
loop
out
mov
ror
hlt
ljmp
hlt
fildl
fsubr
xlat
ret
ds
mov
in
loop
enter
repz
repnz
loope
rcr
xor
cld
enter
into
mov
call
jmp
cmp
div
fiadds
in
call
mov
sub
clc
ljmp
loop
fmull
int
jmp
repz
xor
into
repz
filds
fimuls
std
call
aad
aam
cli
iret
divb
cmp
std
aam
xor
sbb
imul
xchg
mov
in
jecxz
leave
out
lret
cmp
hlt
icebp
icebp
cld
xlat
into
ret
out
hlt
aad
faddp
sub
loope
mov
icebp
icebp
imul
int3
iret
lret
enter
repz
fstpt
cmp
repnz
xor
fucomip
out
xchg
aaa
loopne
cmc
repz
clc
cmc
std
int3
div
aas
out
test
out
loop
out
call
xor
sarl
std
cmp
lret
cmp
aaa
fld
inc
loopne
test
std
enter
iret
in
fsubrp
int
ret
out
xor
loope
shl
int3
ffree
cld
loop
lret
fdivrp
fsub
stc
jmp
aad
lds
in
aaa
lret
int3
fcomp
cmp
clc
in
aad
call
mov
aad
ror
neg
cmp
fdiv
jmp
into
out
loop
lret
xchg
enter
jmp
int3
in
jmp
iret
cmp
cmp
loopne
out
aam
leave
in
xchg
imul
shl
nop
mov
cmc
ljmp
cmp
aas
leave
rcl
rol
fstp
out
shl
aad
test
cld
in
sub
xlat
into
lock
jmp
lret
faddp
idiv
aam
in
clc
in
fmuls
or
shl
xlat
out
ljmp
out
cmp
stc
mov
aad
cs
cli
cmp
xor
idivl
ljmp
fucomi
aad
std
fmul
and
hlt
jmp
xlat
xor
xor
sar
ds
ffree
fimull
int3
sti
test
lret
repz
xlat
test
aaa
cmp
shl
cmpb
add
or
enter
mov
shlb
cmc
clc
sti
shl
push
aad
shr
cli
cmp
repnz
neg
leave
leave
in
in
repz
cmp
sub
movb
into
hlt
aas
hlt
in
test
int3
in
in
popl
shlb
fcmovne
hlt
xor
hlt
rorl
xchg
sub
jecxz
imul
repz
xor
cmp
iret
stc
out
ss
int
out
fmuls
mov
out
into
lret
mov
lock
aad
cmp
cmp
ror
fnstsw
rcr
ljmp
xchg
loop
xor
ss
out
repnz
into
cmp
cld
fucomip
cli
out
cli
int
int
call
fdiv
enter
cmc
clc
icebp
fprem1
icebp
aas
cli
rorl
idiv
into
cli
out
int3
loop
loopne
call
aad
fprem
ret
out
icebp
call
fadd
orb
in
cmp
xor
xor
repz
aas
sarb
rcl
sti
cmc
leave
ret
fldlg2
lret
fsubrp
fmull
lret
out
cmp
leave
lret
cmp
jecxz
clc
test
rcr
int
xor
in
enter
in
cmp
push
fnstcw
xlat
fprem1
mov
mov
ret
fstl
int
int
cli
stc
call
div
not
loope
ffreep
xlat
loop
mov
in
lock
not
into
icebp
enter
xlat
out
iret
icebp
repz
in
in
xlat
rcl
std
in
iret
out
lret
int
in
cmc
ljmp
cld
xor
stc
hlt
jmp
hlt
ljmp
rol
in
ret
xor
repz
rcl
into
into
xlat
fucomip
fucomp
test
rcl
rol
int
iret
int3
ljmp
loopne
aas
ret
mov
aam
cli
cld
out
cld
test
jecxz
rol
xor
jmp
rolb
fucom
xchg
inc
xor
xor
and
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
mov
mov
mov
jmp
rcl
leave
leave
fst
fimull
mov
in
adc
jle
pop
add
repz
incl
cmp
fstpt
aam
shl
in
iret
stc
shr
cli
ret
in
fucomi
jmp
jecxz
aas
loope
stc
out
rcl
shlb
hlt
cmp
loop
ror
fneni(8087
call
icebp
jmp
xchg
loopne
das
mul
cmp
cmp
loope
cmp
ss
testb
ljmp
loope
in
ret
out
shr
out
leave
cmp
cmp
test
loopne
jecxz
enter
orl
lret
clc
cmp
ror
cmp
fdivrp
stc
bnd
test
int3
das
iret
aaa
fcmovnbe
repz
repnz
xchg
shr
ret
fldl2t
jmp
test
shl
jmp
xlat
cmp
enter
stc
out
test
jecxz
lret
out
fists
out
hlt
cmp
shl
sti
rcl
repz
lds
mov
fxtract
ret
lret
repnz
aam
aad
enter
dec
rcl
cmp
rcl
shl
fildl
ljmp
aam
in
cmp
in
f2xm1
not
out
ret
out
out
mov
in
jmp
iret
sub
test
fucom
fsincos
sar
out
clc
xchg
nop
sti
int
lret
ret
xor
aam
xor
cmp
sarl
in
out
std
rolb
enter
icebp
mov
into
lock
cmp
test
out
xchg
jmp
call
xor
xor
repnz
lret
cmp
cmp
xor
mov
out
loop
rol
xor
out
mul
jmp
lret
shl
ret
inc
fmul
icebp
ror
xlat
repz
aam
lret
clc
rcl
iret
incl
cmc
fdivr
xchg
into
out
lock
std
cli
lret
fmul
lret
fsub
sbb
sbb
clc
mov
stc
add
aad
hlt
rcl
fcmovnb
stc
repz
aad
repnz
std
test
fcomip
hlt
aam
int
ret
lock
cmp
sti
rorl
mov
orb
rcr
ljmp
test
out
std
mov
mov
lock
mov
jmp
icebp
cmc
in
aad
sti
cli
sarl
out
mov
jmp
call
loopne
loop
sub
iret
shl
cs
out
idiv
cmp
rcr
loope
xchg
fisttps
cmp
hlt
aad
ret
cmp
lock
cli
ds
cmp
fcompp
loop
cld
out
out
fiaddl
hlt
hlt
loop
cmp
stc
rcr
icebp
rcl
neg
adc
aam
xchg
movl
cmc
int3
icebp
bnd
icebp
icebp
int3
shl
or
mov
mov
cli
sti
mov
repz
aaa
xlat
int3
repnz
repz
ror
fdiv
xlat
shl
test
leave
mov
repnz
loope
lret
xor
das
cmp
cmp
fstp
fdiv
aad
inc
xlat
int3
stc
int
test
ljmp
out
cli
cmp
cmc
jecxz
in
aaa
loop
mov
repnz
cli
lea
xlat
cmp
int3
cmp
rcl
shl
clc
aam
fcmovb
jmp
loop
sti
fists
fnstenv
out
ss
loop
jecxz
rol
jmp
sti
incl
in
fxch
xor
int
cmp
repz
in
in
out
std
sti
in
les
int3
ret
cmp
call
cmc
iret
stc
roll
loop
in
sar
hlt
shll
das
fxch
aaa
xor
iret
jecxz
jecxz
stc
frndint
xchg
fcmovne
ret
test
test
mov
int3
repnz
in
cmp
in
cld
and
ds
cmc
jecxz
loop
aam
clc
rorl
fdivp
iret
rcl
shr
repz
aas
loope,pt
out
addb
faddp
in
into
ljmp
loope
sarl
repz
xor
sti
fsub
out
clc
xchg
sub
in
loop
out
xor
int
aam
xor
hlt
aad
cmp
adc
stc
ret
push
out
cli
lds
jecxz
mov
int3
shll
in
iret
xor
ds
not
in
repz
mov
fmulp
loopne
xlat
cmc
in
xor
in
xor
cmc
repnz
incl
cld
jmp
test
inc
add
add
jmp
lret
ffree
fst
in
notl
shlb
jae
jle
pop
add
mov
xchg
call
imul
leave
imull
enter
sti
iret
in
iret
aas
loope
repz
sbb
test
test
lret
leave
aad
out
in
icebp
jmp
loop
loopne
cld
ror
lret
fucomi
xlat
cld
in
adc
xor
out
cmp
in
testb
repnz
adc
decl
mov
mov
loope
hlt
shr
shl
lds
in
into
cld
fincstp
test
out
sar
fst
movb
in
jecxz
ror
jmp
leave
aad
int
call
bnd
shl
out
in
in
fimuls
xor
aaa
cmp
int3
in
lret
roll
enter
neg
in
addb
jmp
icebp
cld
dec
cmp
addl
fimull
shl
xchg
xchg
jecxz
lret
sti
sarl
lret
lret
cli
neg
ret
fcomp
cld
test
lret
in
fsub
repz
and
in
xor
fmul
jmp
cmp
iret
or
call
cld
inc
out
out
in
jmp
icebp
call
cld
stc
xor
std
cmp
sti
cli
fldl
aad
enter
xchg
rcl
xor
leave
int3
hlt
cmp
repz
jecxz
repz
out
aas
mov
jmp
adc
cs
cmc
ret
cmp
aam
roll
jmp
out
enter
loope
into
jmp
cmp
enter
cli
int
rcl
ds
sub
in
loop
mov
leave
xchg
out
cmc
shlb
repz
ror
cmp
enter
stc
test
xchg
xchg
loope
popl
enter
test
not
hlt
cmp
cmp
test
faddp
test
jecxz
mov
into
out
jmp
xor
int
aam
iret
shl
sbb
mov
loop
lock
in
shr
clc
iret
out
repnz
cmp
shl
aam
out
test
jecxz
mov
mov
lret
repnz
icebp
fcmovne
ljmp
rcr
aad
fdivr
aam
xlat
imul
test
in
repnz
call
shl
repnz
aaa
cmc
ffreep
orb
cli
enter
xchg
iret
in
int3
out
repz
lret
ret
ret
and
std
fcmove
in
jmp
faddp
les
xor
repnz
in
std
aam
loopne
leave
sbb
call
subb
shr
jmp
repz
cmp
in
ds
rcr
out
dec
nop
test
mov
mul
shll
cs
cmp
ljmp
in
sbb
ret
hlt
jmp
mov
shr
loope
xlat
in
ljmp
cmp
shr
in
loopne
in
mul
orl
ror
hlt
rcr
into
loope
ljmp
xlat
sti
mov
adc
das
rcl
aam
lock
dec
cmp
cmc
stc
fadd
cld
stc
out
xchg
xor
shr
into
jmp
xlat
sarb
loope
cmp
fcmovnu
faddp
mov
sti
mov
xchg
aad
sub
jmp
lret
loope
icebp
cld
shl
xchg
fldl
jmp
repz
fmulp
aaa
into
sar
hlt
fcom
stc
call
leave
ret
cli
decb
loop
hlt
lock
in
ljmp
loopne
int
jecxz
hlt
loope
rcr
fcoms
in
rcl
xor
lock
repnz
cld
jmp
lds
or
icebp
into
jecxz
cmp
shll
ljmp
sti
fadds
jecxz
std
hlt
test
out
icebp
out
mov
out
aaa
in
fdiv
ljmp
sbb
jmp
loop
mov
mov
repz
icebp
sti
repz
fsubrp
enter
jecxz
fcmovbe
lock
jmp
roll
lds
aad
jmp
icebp
call
hlt
mul
xchg
sbb
movb
int3
xor
stc
clc
cmp
clc
ror
std
rcr
hlt
div
jecxz
cli
jmp
fisttpl
xor
clc
into
enter
aad
loopne
cmp
cmpl
and
ffreep
into
into
shr
mov
in
cmp
ds
sti
hlt
icebp
cmp
xchg
mov
in
testb
jecxz,pt
idivl
cli
in
jmp
stc
movl
mov
subl
jmp
rol
ror
aad
lahf
mov
mov
jl
add
movl
iret
xchg
xor
ljmp
sti
cmp
idiv
stc
in
out
jmp
repz
shr
ljmp
aad
hlt
test
out
shl
loop
aad
jmp
jmp
xchg
into
xor
iret
clc
cmp
int3
xor
aam
lock
test
out
fmull
out
mov
std
out
aad
aam
hlt
rol
aaa
mul
fdivrl
cmp
cmp
loopne
mov
clc
jmp
std
call
int3
xlat
out
imul
std
aam
lret
lds
mov
fcomp
in
out
fcoml
hlt
in
cmp
jmp
jmp
icebp
in
sub
icebp
in
stc
int
fmull
fmull
in
rcl
fsubr
cmp
sti
out
shl
std
jmp
in
out
lret
mov
jmp
in
aaa
leave
xlat
sti
rcl
cmc
xor
sarl
sarb
loope
into
xlat
cld
stc
lret
mov
xchg
sti
loop
xchg
out
aad
call
cli
icebp
cld
std
fiaddl
fimull
std
mov
fcomip
out
aad
out
div
stc
cmp
loopne
ret
fcomi
xlat
mov
mov
leave
loopne
imul
ljmp
int
jmp
cld
rcl
aas
cmp
shl
ret
test
test
ffreep
divb
jmp
cmp
add
loopne
ret
fdivrp
sarl
sti
xlat
mov
jmp
cmc
out
xor
hlt
repz
rol
testl
xchg
nop
mov
shr
xor
loop
out
xor
cli
aad
cmp
clc
sti
ds
mov
adcl
loope
int
fadd
cmc
cmp
test
xlat
mov
out
lret
ljmp
lret
aaa
loope
ljmp
iret
jecxz
fildl
cmc
jmp
std
out
xchg
lret
aaa
lock
clc
aaa
shr
enter
cmc
cld
fcomip
fiaddl
int3
jecxz
nop
out
xchg
xor
rcl
ds
repz
cmp
faddp
aam
xlat
mov
fsub
xchg
test
cs
fidivrl
cli
aad
idivl
out
test
repnz
cld
fyl2x
lret
enter
rcl
cmc
fcmovbe
idiv
jmp
loopne
loope
aas
fld
in
std
int
in
cld
out
lret
sub
sub
repz
cmp
aam
fdiv
idiv
icebp
fadds
cli
call
in
repz
fdivrl
out
fidivrl
ds
fistpll
cmc
loop
loope
mov
les
mov
jecxz
in
enter
cs
ss
sti
stc
clc
adc
std
rorl
les
in
sub
xlat
in
enter
ljmp
xchg
loopne
xlat
mov
enter
xchg
shll
aaa
loope
int3
in
lret
shr
jmp
iret
ror
mov
add
fiaddl
jecxz
xor
iret
cmp
fmul
xor
roll
mov
icebp
in
out
shr
jmp
xlat
in
int3
aam
std
cmp
icebp
cmp
shl
cmc
cmp
enter
enter
fisubrs
out
int
std
jmp
and
loopne
cld
xlat
fiaddl
in
loope
out
lret
jmp
hlt
hlt
xor
iret
jmp
cmp
repnz
sbb
lret
ljmp
jmp
cli
xlat
cmc
aas
cmp
repnz
fcmovnu
in
leave
out
loopne
fldl2t
lret
enter
leave
aaa
shlb
lock
addb
loopne
bnd
test
lret
xchg
in
xor
xor
aad
cmc
icebp
lock
xchg
xchg
rcr
mov
div
std
enter
out
xor
fcomp
in
ror
fiaddl
aad
cmp
in
call
leave
cmp
cmc
call
sti
stc
xlat
ror
xor
mov
enter
xchg
fbstp
icebp
int
cmp
fnstcw
clc
cmp
into
loope
loopne
decl
xchg
iret
int3
loop
into
icebp
in
jmp
std
cmp
cld
iret
fxch
loopne
icebp
stc
clc
test
adcl
rol
ss
repnz
aas
cmp
iret
cmp
out
neg
rolb
fstp
lret
divl
shl
cmp
cmp
sar
adc
test
jmp
jecxz
jmp
cs
out
jmp
enter
in
mov
mov
adc
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
leave
lret
aad
int
cmpsl
mov
jnp
lods
clc
jle
pop
add
jecxz
fstp
cld
stc
cli
sti
loop
leave
out
aaa
hlt
jmp
sub
sti
cmp
cmc
and
sar
ftst
jmp
xchg
sti
rorb
lret
clc
aam
ss
clc
cmpl
rolb
enter
into
in
in
dec
repnz
aaa
sti
shll
fcmove
shl
fld
cmp
fldlg2
testb
shl
repnz
fcmovnbe
ss
fcmovne
cmpb
xchg
inc
mov
in
in
lret
jmp
fnstenv
push
ljmp
shl
in
xchg
in
jecxz
adcl
jmp
repz
vpand
fsts
adcb
ret
rcl
lret
test
rcl
aad
in
in
xchg
shl
aam
cs
lret
loop
sar
cmp
in
cmp
aam
icebp
cmc
xchg
movb
sub
ret
out
cmp
stc
repnz
inc
int
aam
shl
in
test
loop
sar
int3
iret
mov
out
out
xor
cmp
cmp
rcl
fdiv
jmp
cmp
jecxz
repnz
fcmovu
iret
xchg
fbstp
clc
aaa
xor
repz
jmp
flds
repnz
ljmp
sub
das
out
ret
ror
in
cmp
out
aam
sti
rol
jmp
enter
cld
xchg
ret
ret
into
ror
repnz
shl
int
hlt
out
cmc
rcr
adc
test
cmc
fucomip
in
cmc
fdivs
int
xor
out
cmp
aam
jmp
decb
in
in
leave
into
ss
idiv
ror
repz
fst
filds
cld
out
mov
enter
out
aaa
cmp
div
lret
in
out
cmp
repnz
iret
orl
ret
int
cmp
lret
leave
shl
cli
ret
fdivr
fmuls
xchg
in
lret
rol
aam
ljmp
std
sbb
rol
cli
sub
hlt
loope
icebp
int3
test
sub
aad
out
shr
xor
ss
leave
loope
leave
xlat
stc
fucom
adcb
rol
fcmovnb
imul
sti
jmp
jecxz
rcl
jmp
stc
xchg
test
ror
int
fcmovu
in
xor
aam
xlat
fst
mov
fld
in
fucomip
repnz
repnz
cmp
cmp
cmp
std
xlat
test
mov
cld
out
repnz
loope
ss
lret
cmc
jmp
cmp
sti
in
cmp
icebp
stc
rcr
cld
cli
jmp
loopne
iret
sub
loop
cmp
cmp
enter
in
clc
call
rorb
lret
cli
jmp
aad
out
xor
fucomip
int3
ss
roll
repz
cli
jmp
out
ret
out
out
call
aas
out
sbb
cmp
in
mul
fsub
lret
call
not
ror
enter
repnz
cli
clc
fldl
ret
sti
in
fmul
in
lea
into
out
shlb
repnz
cmp
and
test
cli
testb
shl
icebp
in
xlat
fucomi
sbb
sti
loope
in
testb
in
aaa
xor
out
lret
cs
loope
into
cmp
mov
fisttpl
test
xor
xor
imul
shr
cmp
repnz
in
sti
aad
out
add
mul
std
int
xchg
xchg
loope
lret
aad
ss
xor
cmp
fcmovnbe
in
sti
aas
ret
fsubrp
in
orl
sub
fdivr
ljmp
cli
jmp
add
or
in
loope
cmp
enter
rcl
fidivrs
cld
ds
mov
test
jmp
xor
xor
sar
in
cld
rcl
shl
into
cmp
rcl
aam
sub
fcomip
fisttpll
cli
loop
out
cmp
adc
shr
ds
repnz
jmp
fisttpll
lock
in
cmp
call
cmp
aam
std
mov
cmp
cld
jmp
into
loop
out
icebp
div
lret
iret
lret
fdivrp
into
out
cmp
in
fmuls
fnclex
xchg
lock
out
cmp
call
loope
xor
jmp
aas
ror
aas
aad
iret
rol
adcb
fsubrs
pop
mov
jle
pop
add
in
xchg
ret
faddl
in
std
sar
icebp
xor
sub
stc
cmp
filds
rolb
mov
test
loope
test
xor
xor
call
fdiv
clc
loopne
fcmovnu
stc
cld
mov
fiadds
or
adcl
fcmovne
aas
icebp
sti
aad
int3
xchg
out
fadd
idiv
in
cmp
ret
in
sti
into
int
out
ror
icebp
stc
inc
jmp
in
enter
mov
icebp
iret
aad
stc
iret
in
fldl
cmc
into
xchg
mov
fcmovu
mov
enter
xor
iret
ljmp
not
into
aad
roll
incl
xchg
iret
xchg
nop
cld
in
sarl
leave
out
cmp
hlt
shr
cmp
cld
repz
rcr
loop
clc
out
xchg
xchg
lock
out
loopne
fucomi
leave
xor
in
int3
fcom
xor
clc
orl
in
iret
jecxz
xor
lret
repnz
cmp
cld
cmp
lock
out
stc
add
faddl
lock
jmp
rcl
xlat
repnz
cmp
or
cmp
repnz
addb
sar
shlb
ret
into
leave
shr
call
addl
mov
sub
mov
in
aad
xor
ret
test
neg
mov
inc
testb
jecxz
loopne
fcomi
stc
aaa
cmc
xlat
cmp
cmp
not
pop
mov
enter
out
ror
jecxz
cmc
int
loope
sti
fcom
ret
into
loope
rcl
loopne
stc
mov
in
hlt
jmp
jmp
fst
fldl
clc
call
flds
sar
mov
ret
ret
sub
in
cmp
adc
xlat
iret
xchg
hlt
lret
mov
and
loope
repz
fcmovbe
xor
call
icebp
test
div
cli
repz
rolb
ljmp
xor
fcmovne
fldl2t
enter
sti
cli
shr
in
sti
out
mov
out
jecxz
in
fpatan
cmp
jmp
rcl
aad
aad
repnz
fsubr
call
out
shr
repz
shl
into
out
jmp
test
in
ret
lret
fadds
out
mov
vpmaxsw
sub
idivl
dec
cmp
shl
loopne
aam
in
loope
mov
loope
loope
call
clc
lock
aam
idiv
int
shl
mul
jmp
out
inc
mov
ror
ret
xor
into
sar
shll
cmc
cmp
lret
jmp
loop
fcomip
std
out
in
fldcw
cli
cli
cli
push
call
cmp
les
out
cli
icebp
mov
ds
out
xor
jmp
adc
test
repz
xchg
in
out
xchg
xor
test
idivb
cli
cmp
aas
repnz
out
xchg
mov
in
hlt
shll
xlat
test
cmc
ret
fucom
xchg
clc
cmc
in
lret
jmp
jecxz
aas
xor
xor
int3
clc
fdivrp
into
aaa
hlt
ret
fcmovnb
add
ret
test
rcr
mov
call
cs
aam
fcomp
sti
test
shl
movb
xchg
clc
jecxz
jmp
repz
shll
fucomp
repnz
aad
xlat
test
int3
loope
mov
orl
in
jecxz
aam
in
aam
cli
loopne
ds
addb
imul
xchg
rclb
xlat
xor
neg
cmp
fldl
not
aas
fcmove
lret
fsub
fiadds
out
jecxz
in
shr
aam
fldl
mov
fsub
xchg
addb
cs
fnstenv
idiv
cmp
repz
fst
enter
in
out
out
ljmp
in
not
div
flds
ret
fldl
rclb
mul
repz
cli
ret
cmp
cmp
xor
lds
out
vpand
mov
xor
in
xor
fsubr
loop
in
lds
test
fsubrp
in
out
lock
loopne
ss
hlt
lret
clc
cmp
out
cmc
aaa
cmp
out
fdivr
add
test
xchg
call
vshufps
roll
add
add
add
pushl
cmp
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
sbb
mov
subl
mov
add
xor
mov
mov
sbb
add
mov
xorl
jmp
enter
fstp
fstpl
sub
popf
gs
jp
cmpb
add
fcmovne
lret
ret
fcom
fdiv
cmc
cmp
int3
lea
shr
hlt
enter
xor
xor
and
mov
stc
xchg
cli
rcr
and
int3
shl
test
sarb
sti
aam
ror
test
add
stc
out
fsubr
loopne
ffree
lret
cs
out
ror
into
fsubr
not
into
sti
adc
sub
lds
out
aad
aam
in
shr
bnd
aaa
cld
lret
fcos
out
test
orb
call
cmp
aaa
out
lret
out
fidivrs
mov
rolb
in
loope
ror
lock
sub
xor
in
clc
shr
addl
leave
fcmovne
out
nop
ljmp
cs
fcmovnb
out
in
repnz
out
incl
call
test
repz
int
call
cmp
iret
fadds
hlt
loop
idivl
loopne
fucomip
mov
out
out
cmc
ret
das
cmp
icebp
iret
call
test
fmul
fsubr
loope
int
int
cmp
out
cmp
in
rcl
int3
fadd
hlt
in
repnz
out
fisttpll
sarl
shl
repz
loope
fmulp
fstp
ret
clc
fcmovb
xlat
fimull
nop
in
cs
cmp
cmp
cli
fcom
sti
aad
fdecstp
test
jmp
movl
xor
int3
cmp
int3
cli
ror
flds
sti
sti
icebp
fdivrp
jmp
fbstp
xor
lret
std
shl
ss
repnz
loop
rol
in
cmc
jmp
fcmove
icebp
test
not
fld
lret
fcomi
stc
cmc
add
ss
loop
jmp
filds
out
hlt
lret
xor
icebp
cmp
xor
ror
xor
rcl
out
call
lret
out
cmp
cmp
neg
int3
cmp
ret
jecxz
lret
ljmp
loop
xor
ljmp
div
cmp
cmp
faddl
mov
fldlg2
into
filds
xor
cmp
in
enter
fcmovnbe
leave
rolb
movl
hlt
in
iret
repnz
fdiv
faddp
int3
clc
cmp
hlt
enter
xchg
mov
aam
xor
xor
in
cmp
aad
fdivrl
in
out
loopne
out
test
lret
lret
aad
divl
rcr
fdivrl
icebp
int
fcmovnb
add
clc
xchg
cli
fucom
xchg
xchg
ror
out
rcl
ljmp
ret
cmp
addl
jmp
xchg
mov
fsubrp
aaa
out
xor
xlat
cmp
fucom
stc
ror
loope
mov
test
std
movb
cs
xor
enter
ds
cmc
sar
std
iret
fcmovnbe
test
fcmovb
aas
call
orb
lret
leave
icebp
in
sar
lret
ret
sti
addl
xchg
call
shrl
in
lret
shll
call
into
cmp
shl
test
decb
lret
xor
lret
int3
call
cld
iret
ret
jmp
mov
cld
fcmovbe
lea
cli
int
cmc
cmp
loopne
ds
shr
loop
in
aad
xchg
adc
fistpll
loopne
in
cmp
fsubr
cmp
aas
push
ret
loop
rcl
shl
std
cld
aad
iret
in
xchg
xor
clc
aaa
loope
fsincos
aad
sarb
aas
loop
stc
cli
lret
std
test
in
out
out
cli
fxch
lret
out
rcl
repnz
rolb
cmc
int
in
fdivr
jmp
aad
aad
hlt
test
cmp
call
fucomp
in
xchg
out
test
stc
in
rcl
call
in
fsubr
in
enter
rcl
test
shl
out
cmpb
jecxz
out
nop
mov
shl
xor
out
lret
xor
aam
mov
aam
out
std
out
xor
xlat
xlat
repz
cmc
out
call
fsincos
int
aam
aaa
sti
repnz
aam
ror
aas
cli
fld
aam
fsubp
lea
into
icebp
ror
cmp
hlt
iret
clc
enter
in
stc
cld
in
repnz
test
fisttpll
rcl
lret
inc
cld
movl
test
test
test
add
add
rcl
lret
aad
fstp
sub
cld
adc
jl
add
cmp
jmp
fdiv
cld
sar
int
loope
lock
hlt
lock
stc
ror
out
idivb
icebp
ss
fadds
cld
test
jmp
test
xchg
rol
hlt
in
in
call
sarl
loopne
leave
jmp
mul
fninit
loopne
orb
divb
jmp
sti
xor
ror
in
stc
lret
loop
repz
into
enter
aad
ljmp
ret
shl
in
sub
mov
xchg
loopne
aaa
iret
out
ljmp
repz
repnz
fidivrl
leave
shl
out
xchg
lret
into
ljmp
sti
aas
sbb
leave
std
in
in
fmul
cli
fists
ret
out
jmp
call
enter
jecxz
cli
adc
enter
jmp
iret
nop
adc
jmp
jecxz
fdivrs
cmp
cld
lock
xor
loope
lds
mov
sti
mov
fcmove
repz
xchg
xor
aam
int3
call
ljmp
rcr
fsubr
xchg
nop
sub
leave
rcr
xlat
clc
clc
lock
shl
cli
aaa
ss
push
aad
mov
loopne
lock
in
jmp
repz
rcr
cmp
cmp
shl
cli
repz
out
in
jmp
shl
mov
xor
das
out
sarl
out
rcr
xlat
cli
mov
fucomi
mov
leave
xor
shl
idivb
loopne
ret
xchg
call
rorb
out
das
ret
in
ss
cld
in
ds
fisttpll
and
mov
in
cmp
lret
clc
int
hlt
in
call
and
loopne
xchg
call
loope
mov
int3
jecxz
in
xor
into
cmp
cmp
jmp
loop
aad
mov
in
fcos
incl
rol
jmp
cmp
aad
idiv
or
test
cmc
std
shl
loope
sti
out
fsub
mov
cmp
aam
icebp
out
fldz
testl
rcr
fdivp
ret
ljmp
ror
ljmp
fildl
std
fimuls
jecxz
aaa
les
aaa
shr
sti
cmp
ret
movb
lret
int
ljmp
fcomip
aas
xlat
xlat
roll
mov
in
loopne
xchg
imul
repnz
xor
cli
repnz
repz
fldl
in
xchg
xchg
aad
jmp
das
jmp
clc
aad
int3
int3
loopne
adc
out
in
std
fcomp
fsubr
xchg
out
dec
aaa
ret
hlt
enter
shr
loope
rcl
std
hlt
fmuls
call
aaa
jmp
lock
call
int3
incb
lret
addl
loop
cmp
out
stc
fcmovnbe
sarl
aad
fcom
out
addb
sti
flds
ror
jecxz
loope
sarl
iret
fxch
lock
loope
test
rcl
sbb
clc
enter
xlat
ds
cmp
call
xor
fistpll
in
icebp
in
jecxz
aam
test
xchg
ficoms
fmul
xor
int3
roll
cmpl
incb
cld
xchg
nop
mov
lret
xor
rol
int
repnz
frstpm(287
xchg
fdivr
shr
test
lret
loop
ljmp
aaa
xor
lret
cmp
jmp
ret
stc
testb
loope
loop
test
int
jmp
shl
cmp
loop
call
xchg
jecxz
xor
shl
out
shl
out
loope
iret
lret
fcomi
in
mov
loop
call
faddp
leave
iret
xor
cmc
iret
lret
cmc
xchg
std
sti
clc
in
call
cmc
sub
xor
fdivrl
repz
stc
cmc
sbb
xlat
mov
in
clc
xorb
int3
fucomi
into
lret
rcr
cmp
shl
aam
fmulp
mov
mov
sub
int
lret
out
stc
repz
aad
cmp
cld
cmp
cmp
fninit
xlat
rcr
sbb
rcr
loope
test
div
clc
ror
cmc
bnd
aam
repz
xlat
leave
sbb
xor
fadd
inc
int3
and
inc
fs
add
cmp
add
test
add
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
mov
xor
xor
sub
xor
movl
movl
xor
jmp
into
aad
lret
rcr
mov
test
pop
add
loop
hlt
rcl
ffreep
div
iret
add
fmull
sti
jecxz
out
ljmp
int3
imul
in
enter
fcmovne
jecxz
cmc
mov
lret
loop
roll
xor
clc
icebp
iret
hlt
iret
call
sti
into
call
hlt
in
ffree
mov
cld
aad
xor
cmp
cmc
xor
fprem1
fsubr
int3
ret
fst
cli
aam
mov
fsubr
fmulp
repz
xor
out
fcmovne
xlat
into
ds
and
or
sti
in
loop
jmp
loope
adcb
icebp
loop
rcl
fcmovu
aam
xlat
in
fdivrp
cli
fiaddl
std
out
in
into
mov
ror
jecxz
in
enter
sti
fbstp
enter
ret
jmp
in
out
dec
aad
ret
leave
int3
xor
cmp
sub
mov
in
into
xchg
out
in
in
fxch
cmp
sti
loope,pt
in
rolb
out
mov
xchg
mov
mov
out
out
in
fdivl
fdivr
sti
testb
fldl
out
ror
out
xlat
lret
out
loope
fistpll
cld
ds
aam
jecxz
sbb
cmc
int3
divb
aad
out
sti
dec
lock
ljmp
enter
imul
ret
loope
xor
shll
ss
iret
in
fdivr
clc
rcr
fprem1
cld
ret
test
loope
into
loope
aam
lock
stc
xlat
pushl
stc
iret
lock
in
sbb
jmp
xchg
repz
loopne
ret
lret
jmp
jecxz
aas
fdivrs
rcr
enter
into
std
out
into
mov
leave
out
jmp
enter
cmp
int3
repnz
addb
inc
iret
enter
repnz
aam
jmp
fsqrt
cmp
xlat
aad
out
stc
faddp
fldl
lret
mov
out
xor
hlt
fmul
sarb
xchg
xchg
loopne
ljmp
fxch
ljmp
fdiv
rcl
loop
cmc
in
cmc
hlt
lea
lret
in
into
in
icebp
ret
out
cmp
cmp
hlt
adc
fiadds
jmp
rcll
stc
in
in
hlt
int3
out
dec
aam
ss
fucomip
test
in
iret
mov
lds
loopne
sar
int3
cld
sarl
repz
cld
xor
xbegin
xchg
mov
lret
xor
xor
xlat
fdiv
cmp
xlat
aam
incl
into
loope
xor
ret
ljmp
cmpl
jecxz
addb
mov
in
loop
in
fcom
cmp
lock
loopne
xlat
out
mov
xchg
incb
mov
lret
lret
out
xor
loope
std
lret
sbb
les
shr
lock
ror
aaa
cs
xor
leave
sarb
into
shr
div
cld
rolb
mov
mov
in
repz
loopne
call
rcr
lret
hlt
out
icebp
std
xchg
incl
loop
jmp
aaa
jecxz
cmp
idivl
hlt
lret
cld
cmp
test
fadd
clc
movl
mul
aaa
loopne
xor
cmp
hlt
cmc
or
rorl
xchg
xchg
lock
sti
rcl
int3
aas
fdivrs
shl
in
out
fdivrs
leave
rolb
xchg
lock
in
cs
xor
cmp
rcl
clc
cmp
loope
hlt
xchg
sti
fst
xor
aam
aaa
clc
into
ljmp
loopne
fcos
out
mov
std
cld
ror
cld
mov
int3
loope
call
lret
int3
cld
iret
aad
out
sti
cmc
xchg
enter
out
enter
dec
aam
out
sti
xor
clc
xlat
lret
xor
fucomi
sti
fcos
leave
loop
icebp
loope
sub
aad
aam
into
hlt
lret
shl
clc
rcr
xchg
int3
jmp
rcr
int3
int
icebp
int3
fchs
lock
stc
lock
mov
fdivrp
mov
add
into
mov
fdivp
ret
aaa
stc
cmp
aaa
out
aad
into
aam
iret
xlat
cmc
out
enter
out
lret
or
ss
cmp
ljmp
rcr
xchg
in
sti
repz
lret
push
or
cmp
jmp
aad
fstl
jmp
jle
pop
add
imulb
lret
aam
in
hlt
in
sar
repz
rcl
aad
hlt
ret
cmp
fimuls
cmc
rcl
mov
cmp
aam
in
loope
aas
jmp
fyl2xp1
mov
out
xor
in
int3
jmp
aad
adc
repz
xchg
shl
rcll
aaa
idivl
xor
cli
xor
imul
fdiv
cmp
ljmp
ljmp
ret
out
enter
ljmp
cmc
in
icebp
in
mov
xor
cli
lock
leave
out
xlat
addb
xlat
in
out
int3
cld
jecxz
mov
out
out
ljmp
aad
loope
cli
call
and
jmp
mov
into
loopne
int
lock
jmp
call
sbb
call
lea
sub
sti
xor
ljmp
shl
std
faddl
fcmove
out
mov
xor
shl
repnz
stc
clc
div
cmp
out
mov
cli
xchg
xchg
into
out
shl
jecxz
cmp
stc
filds
cmc
ffreep
int
loopne
jmp
loop
repz
enter
xlat
iret
lds
int
out
into
dec
test
fsubp
fld
leave
leave
mov
test
enter
rcl
enter
shr
cli
mov
lret
stc
test
fcomp
call
loopne
cmp
cli
fcomip
icebp
icebp
in
in
xchg
cli
stc
decl
sub
rol
aaa
rcr
ffree
cmp
cmp
ds
fdivrp
addb
fucomip
ljmp
xor
cmp
jmp
cld
test
orb
iret
icebp
or
loopne
out
out
fstpt
enter
loop
aas
icebp
xlat
rorb
xchg
stc
mov
aam
enter
out
aam
cld
lock
lock
rol
test
aam
mov
mov
fildll
loope
in
iret
sti
call
aam
int
test
ljmp
fucom
in
in
aam
aam
icebp
xlat
int3
fcmovu
fcom
shl
into
addb
in
jmp
mov
cmp
in
out
lret
iret
out
neg
in
fsubrp
into
rcl
in
lds
idiv
leave
lret
xchg
mov
shrb
xor
in
test
sar
shl
cli
jmp
sar
call
icebp
das
ret
repnz
fldlg2
ljmp
repnz
std
loope
mov
call
call
clc
cld
int3
cmc
sarl
shl
mov
leave
or
clc
test
mov
aad
jmp
lret
in
out
rcl
fld
in
xchg
cld
hlt
in
jmp
test
loop
aaa
lret
ljmp
fsub
ror
sarb
stc
cmp
lret
loope
xchg
lret
loop
hlt
jmp
shr
fcomp
cmp
cmp
cmp
aad
rol
test
mov
int
lock
sti
jmp
into
cmp
shl
cmp
aam
cmc
ljmp
fists
iret
les
cmp
ljmp
loop
cmp
out
mov
xchg
les
mov
xchg
ljmp
call
fdivp
fcmovne
ds
call
ljmp
mov
xor
lret
neg
fcomi
xor
flds
ds
enter
fisttps
fdivrp
jmp
in
fidivl
enter
aas
fidivrs
test
cmp
adc
dec
mov
mov
out
repnz
in
clc
aad
fxch
sti
out
std
shl
into
std
orb
sti
stc
int3
icebp
mov
xchg
xchg
shlb
aaa
out
fxch
cmp
aad
aam
aad
loop
loope
out
cli
ret
hlt
fmulp
iret
repz
xor
ljmp
repz
in
out
sar
rcl
mov
lret
xchg
out
leave
xor
hlt
out
shlb
fdiv
roll
repz
call
cld
mov
repz
fldz
divl
std
cmp
lock
repnz
in
in
loop
fcom
xchg
jmp
ret
sti
jmp
aam
cli
adc
fdivp
aas
fsubrp
xchg
fcmovbe
call
ror
jmp
out
out
out
shl
aad
loop
out
call
hlt
fcmovb
idiv
fucom
loope
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xorl
jmp
iret
ror
aas
aad
iret
shlb
lods
jmp
adc
pop
xchg
jle
pop
add
mov
lock
aaa
cmp
fsub
sub
loope
aad
mov
out
ljmp
fxch
std
stc
sub
test
stc
mov
icebp
in
int3
lret
fcmovne
xor
cld
fdivr
cld
cmp
aam
in
mov
mov
jmp
call
lock
cmp
out
into
in
aad
test
cmc
repnz
mov
orl
icebp
sub
in
xor
lret
sub
roll
out
in
fildl
shl
sub
xor
cmp
not
ds
cld
rcl
ret
xchg
std
loope
jmp
lret
shl
in
jmp
cmp
out
cmc
stc
lock
test
fdivrp
loopne
mov
xor
cmp
into
lret
out
hlt
cli
cld
cmc
mul
loope
std
clc
leave
cli
in
int3
rolb
lock
fnstcw
ljmp
test
lret
fmul
stc
xchg
cld
lea
not
xor
fstpt
lret
test
cld
xchg
std
cmc
jmp
decl
xchg
rcl
int3
sti
loop
xlat
hlt
aas
sti
std
out
int3
loopne
and
jecxz
addl
push
in
leave
xor
out
cld
sarb
icebp
sarl
int3
rcl
stc
lock
mov
cld
out
mov
enter
into
xor
out
enter
idiv
xor
rcr
repz
in
loope
jecxz
test
ljmp
aam
cmp
fucomi
sti
xor
cli
rcl
repnz
call
loopne
fcomp
fdivrp
xorb
lock
out
repnz
fxch
loope
cmp
cmp
fadds
mov
out
hlt
in
ror
sti
xor
lret
xlat
aad
test
aam
cli
fdiv
int3
lret
int3
lret
aas
out
jecxz
repnz
jmp
sti
loopne
lock
ret
jmp
cli
fsubp
out
rcr
das
int
iret
icebp
lret
call
repz
test
test
lret
cmc
xor
cmc
iret
ljmp
jecxz,pt
cld
adc
ret
jecxz
aam
jecxz
fisttpl
xor
aaa
xor
hlt
aam
jmp
iret
repz
cld
repnz
ljmp
orl
cli
int3
jmp
xlat
lock
int3
fdivr
jecxz
xchg
std
fcomip
ljmp
ljmp
int3
loope
clc
call
sti
jmp
out
cs
jecxz
cmp
fstp
jmp
aas
xlat
add
loop
lret
xchg
out
into
not
xor
clc
lds
jmp
cmp
int
fcomp
rol
cmp
lock
mov
call
mov
lea
cmp
cmp
iret
sbb
and
fldl2e
lret
in
jmp
sti
loop
mov
enter
ret
aam
std
call
aam
out
loope
xchg
sub
fdiv
in
out
das
rcl
enter
loope
call
loopne
leave
not
cmp
in
xchg
loope
into
enter
repnz
aad
cmp
in
aas
in
incl
test
loope
or
fdivr
lock
sarl
jmp
ret
rorl
loopne
push
test
xlat
std
aaa
aad
icebp
int3
int3
fscale
lock
or
jmp
jmp
ljmp
fldl2t
call
out
leave
call
shlb
out
vpaddq
cld
clc
cmp
repz
cld
and
leave
call
iret
out
lret
rcl
shl
ror
cmp
fidivrl
leave
or
lret
std
icebp
ret
in
call
pushl
int
stc
out
xor
std
cmc
add
roll
in
aad
in
cmp
lret
ss
ror
sti
loope
test
in
or
in
in
loop
int
icebp
idiv
xor
in
aam
fcmovb
call
iret
sub
incl
mov
lret
xor
jmp
xlat
in
cmp
loopne
cld
loop
repz
in
mov
sti
icebp
iret
test
mov
xor
filds
filds
ret
fmuls
call
out
les
aaa
jmp
rcl
ds
clc
rol
jmp
loopne
mov
xorl
add
movl
cmp
je
push
movl
jmp
and
jmp
enter
fcmovnbe
int
pushw
jle
cs
sub
lcall
out
loopne
enter
out
icebp
aam
fcomi
clc
xlat
sarl
out
fcmovnb
mul
lret
cld
in
mov
fisttps
ror
aam
cld
fistpll
cld
in
testb
leave
in
shl
lock
sar
mul
iret
iret
iret
aam
ljmp
mov
fdivr
add
in
test
out
shr
imul
repz
cmp
xor
ret
call
stc
ljmp
loop
out
shr
shr
filds
into
mov
out
loope
lock
out
out
loopne
out
in
enter
stc
stc
into
cmp
into
xlat
xchg
mov
ljmp
xchg
cmp
shrb
divb
lock
cld
xor
lock
loope
ret
repz
xlat
hlt
enter
fiaddl
out
lret
divb
lret
ret
ret
jmp
in
in
test
fcmovu
out
in
das
fpatan
repnz
sti
icebp
fdivr
loop
loopne
loopne
fsubr
jecxz
call
into
test
repz
int
fnstsw
int3
enter
fsubrp
clc
repz
call
cli
leave
int3
loop
test
repnz
in
out
fcomi
out
loope
loopne
int3
shl
loopne
rol
ret
icebp
dec
lock
iret
ret
ss
cmp
cmp
aaa
addb
rorb
lret
lds
stc
fcomip
in
rcr
hlt
aas
fsubp
loopne
cld
loope
mov
mov
loope
jmp
shll
jmp
int3
leave
in
cmc
sti
cmc
cmp
hlt
xchg
enter
cld
nop
in
mov
in
xor
aas
repnz
test
loop
mov
out
mov
aas
repnz
repz
in
fidivrl
sarl
addb
lret
jmp
fsub
repnz
leave
ss
fdivrs
imul
repz
sti
fadd
fldl
shl
nop
decl
out
call
int3
cld
xor
aad
in
filds
xchg
ljmp
leave
loope
les
cli
clc
cmp
out
incb
in
loope
iret
call
int
ss
in
cmp
into
rcr
aad
repz
loope
int3
xlat
cld
out
mov
iret
shl
xor
lret
into
in
fiadds
mul
loopne
fsub
lea
xchg
jecxz
icebp
cmp
jmp
cli
fmulp
clc
fiaddl
fcmovb
mov
orl
xlat
clc
aaa
out
in
jmp
sar
fsub
ss
repz
mov
shrb
fdiv
std
iret
cmp
div
les
test
sub
mov
xor
cli
iret
imul
loopne
cli
aad
cld
iret
test
ret
loopne
in
int3
ffreep
fiadds
iret
jmp
lret
icebp
clc
xor
xlat
jmp
roll
jmp
xlat
loope
cmp
ret
cmc
shrl
fidivl
call
stc
xchg
xlat
sti
jmp
std
into
mov
aas
in
into
iret
xlat
iret
sti
iret
flds
aad
ffreep
jmp
fucom
in
jmp
ds
cmp
fxch
cli
lret
sbb
shl
fcomp
jecxz
testb
iret
xchg
mov
divl
xor
hlt
aad
call
aad
aam
out
jmp
orb
in
divl
jmp
iret
ljmp
fprem1
aaa
in
rcl
lret
loope
stc
repz
roll
aam
jmp
aam
repnz
int3
sar
jecxz
loopne
hlt
lret
jmp
fmul
in
icebp
loope
xor
fnsave
sti
imul
jmp
sar
fprem
mov
orl
in
enter
aam
fcmovnbe
div
fcmovnu
shl
jmp
jecxz
fdivr
mov
jecxz
mov
lret
enter
fidivl
ljmp
adc
aad
int3
fimull
ljmp
repz
shl
cld
in
into
fildl
test
enter
jecxz
xor
ret
divb
sti
lret
neg
cmp
cmc
shl
ffree
xchg
mov
loopne
aad
xor
enter
cmp
int
loopne
fcomip
les
ret
in
mov
xchg
lret
xor
sar
repz
fdivrp
fdivr
test
xlat
loope
mov
and
mov
xorl
jmp
leave
aam
xlat
in
fsubrl
ja
mov
jl
sti
cld
jmp
shr
loop
lret
aam
sarl
enter
int3
xlat
loopne
in
rcl
in
out
out
test
in
lret
test
int
cmc
lret
rcr
f2xm1
xor
ret
loop
cmp
jmp
fsub
fcmove
repnz
cmp
repnz
aad
cmp
ret
xchg
enter
fsubp
out
in
fimuls
xor
clc
pushl
iret
rcl
icebp
lock
aam
orl
loopne
xor
lock
cmp
clc
fucomp
cld
out
rolb
loopne
fimull
loop
ror
jecxz
iret
cmp
stc
lret
into
rcl
rcl
rcr
mov
leave
out
xchg
xchg
fdivp
xor
jmp
loopne
cmpb
lock
fcmovnu
fimull
int3
enter
lret
cmp
jmp
and
mov
cmc
repnz
fmull
ljmp
test
stc
repz
fadds
xchg
mov
dec
lock
sti
cmp
fsubr
std
sarl
cld
faddp
mov
jmp
test
test
cmp
cmp
aam
in
stc
add
fst
jecxz
mov
enter
icebp
ljmp
iret
call
ret
stc
ljmp
in
cmc
rcl
int3
fld
shlb
jmp
ljmp
cmc
fildl
test
mov
fadds
mul
clc
cli
lret
in
fsub
rcr
out
filds
jmp
mov
loope
mov
shl
cmp
cmp
leave
int
aas
neg
xlat
xlat
testl
enter
xor
in
cs
int
into
aad
cmc
cmp
testb
fcomp
or
test
or
repnz
xor
rcl
xlat
fdivrl
in
repnz
in
fucomip
jmp
inc
jmp
xor
cmp
aad
clc
aad
cli
int3
in
in
out
shl
shlb
int
into
lock
rolb
cld
std
cmp
fiadds
mov
in
out
lock
sub
out
loope
cmpl
clc
stc
adc
mov
rcl
call
ret
xlat
jmp
idivb
cld
repnz
mov
fcmovnu
fistl
shl
lret
cld
in
in
xlat
fcom
in
in
sub
enter
iret
stc
out
out
xchg
iret
cld
in
shr
cmp
jmp
jecxz
fucom
std
aad
clc
sti
mov
out
in
lret
xor
sti
idivb
enter
stc
aam
sti
faddl
test
enter
xchg
lret
ret
fnstsw
rcr
icebp
cmp
ret
cmp
mov
mov
xchg
leave
call
repz
xor
xlat
iret
jmp
cmp
hlt
stc
test
int3
in
sti
icebp
xchg
add
enter
xor
fdiv
aam
sbb
enter
inc
in
test
lret
in
fnstenv
fdivr
leave
imul
cmp
jecxz
in
ffreep
ljmp
lock
int3
cs
lock
fdivrl
mul
stc
iret
std
in
fcomip
idiv
fsubp
jmp
mov
rcl
fcmovnb
lret
out
cmp
sbb
icebp
jmp
rorl
fldl
test
cmp
lock
lret
int3
ret
rcl
test
orb
lret
xchg
cmc
sti
int3
xor
clc
imul
repz
in
rol
cmp
leave
sub
fsubr
out
int3
ret
aad
xlat
fptan
cmp
ds
cmp
aaa
rcl
cmp
test
xor
in
fisttpll
int3
lret
in
loopne
aam
cmc
lock
in
lret
cld
test
clc
fdivp
sbb
mov
idiv
mov
mov
cmp
int
fiadds
sar
stc
in
cli
mov
std
fisttpll
ljmp
neg
rcl
cld
cmp
xchg
mov
xchg
addl
mul
lock
aad
out
call
repnz
inc
test
decb
iret
in
rcl
mov
int3
lret
fcmovbe
repz
cmp
loopne
aad
cli
lock
in
out
jmp
call
out
in
xor
out
out
xor
into
rcr
fucomp
cmp
cli
adc
mov
jmp
leave
aam
rcl
aam
insb
bound
movsb
jle
pop
add
loope
xchg
rorb
icebp
xor
cmp
cmp
loope
loop
fcompp
into
stc
fcmovbe
fdivr
lret
sub
loope
mov
bnd
into
divl
cmp
icebp
ds
repnz
fstpt
loopne
in
enter
test
icebp
add
fsub
cmp
sar
lock
fdivp
rolb
fmull
lret
cmc
ss
aam
shl
in
jmp
repnz
ds
in
in
frndint
clc
clc
ljmp
aaa
jmp
repnz
imul
xlat
cmp
cmc
ret
enter
mul
test
orb
iret
ss
into
fstpt
rcr
test
std
test
mov
mov
loop
xchg
mov
xchg
iret
das
sub
out
std
jmp
aas
stc
filds
cli
test
imul
fildl
out
out
ljmp
aad
shl
out
adc
aam
test
in
in
ljmp
fistpll
cmc
out
ror
cld
in
adc
xchg
movb
mov
ror
imul
stc
les
loop
aas
loop
and
aad
clc
in
popl
aad
into
aad
xor
aam
jmp
addl
sti
jecxz
in
mov
rol
sub
fcomip
cli
aad
fld
shl
aas
fimuls
les
sarb
ss
icebp
int
idivl
int3
ss
out
fcmovnbe
enter
jmp
loope
ror
sub
ss
enter
fdiv
icebp
or
ror
fdivrp
test
nop
cld
xchg
xchg
in
stc
lret
aas
shr
cmp
loop
clc
roll
xlat
orl
jmp
out
shl
cli
cmc
xchg
rol
jmp
lret
in
ljmp
jecxz
leave
shl
jmp
icebp
icebp
out
int3
out
fiadds
jecxz
out
ljmp
test
into
cmp
in
rcr
loope
mul
fdivr
test
test
clc
jmp
sbb
jmp
loopne
call
out
int3
imul
fmul
fdivrp
std
cld
fcmovnb
ret
std
iret
lret
in
repnz
std
test
das
shrb
enter
leave
repz
aas
cld
stc
hlt
adc
call
shl
sti
icebp
sti
enter
icebp
xlat
in
in
test
lock
cmp
in
lock
ror
cmc
out
mov
cmc
ljmp
idiv
idiv
loope
stc
hlt
jecxz
cmp
movb
fisttpll
idivl
clc
fnstcw
hlt
cmp
stc
cld
in
jmp
mov
ret
lds
jmp
aaa
roll
aam
faddp
mov
mov
repz
cmc
lret
aam
xlat
repnz
loop
cmp
jecxz
ffreep
lea
fiadds
in
shr
jmp
lret
in
aas
sarb
test
in
sar
enter
mov
orb
aad
call
iret
out
out
cld
sti
lock
cmp
shr
aad
fadds
jmp
ret
xor
cli
sar
fcmovb
fcmovnu
cmc
rolb
addl
shl
fcmovnb
cmp
cmc
enter
jmp
aaa
fndisi(8087
jmp
xchg
test
aad
fst
int3
out
sti
out
mul
fxch
lret
lds
xchg
out
add
clc
out
enter
xor
shr
icebp
sub
xlat
in
cld
mov
call
iret
ljmp
leave
xor
fcom
stc
in
ret
cmc
leave
loope
fsubr
loope
out
lret
loopne
loop
lret
enter
sar
cli
int
or
fstpt
in
sub
enter
xchg
loope
out
sar
aaa
fst
int3
clc
clc
loop
rol
fsub
incl
xor
lock
imul
out
xor
ljmp
cmc
push
out
in
xchg
xchg
int3
shr
xchg
iret
out
enter
leave
cli
fdivs
and
sti
loope
rcr
mul
int3
cld
incb
in
iret
cmp
leave
iret
sti
jmp
sarb
rorb
out
lret
xchg
not
cmp
jmp
cmp
addl
ror
fiadds
mov
out
cmc
sti
xor
leave
aam
loopne
out
in
test
xor
add
movl
jmp
rol
ret
ret
ret
fwait
cmp
iret
stos
jle
pop
add
leave
addb
leave
fsubr
jecxz
test
shl
rol
xor
cs
rcr
shr
stc
int3
in
fabs
and
out
mov
xor
ss
fcomip
jmp
int
cmp
les
in
xchg
test
out
fxtract
jmp
fld
cmpl
fyl2xp1
cmp
rol
fcmovnb
iret
out
in
lret
repnz
fxch
in
ret
xlat
enter
fnstcw
cmp
sti
sbb
vshufpd
cld
shll
ljmp
jmp
sar
xlat
cmp
loopne
icebp
in
in
cld
xchg
cld
call
ret
repnz
in
loope
cmp
sbb
in
cld
stc
loop
lret
mov
xchg
sub
lock
not
int3
int
ret
aas
icebp
rcr
in
faddl
leave
enter
xchg
xor
stc
xor
stc
aam
icebp
ss
into
in
vpaddb
out
out
in
mov
ljmp
in
fadd
enter
jecxz
cmp
repnz
ljmp
int
xchg
icebp
loop
sub
into
xor
out
into
sti
loope
repz
out
sbb
incb
leave
jecxz
ljmp
leave
cmp
int3
neg
xchg
loop
cmc
cld
fucomip
mov
mov
loopne
rcl
rcl
cli
fsub
cmp
clc
shr
div
shl
loope
mov
lock
jmp
shl
in
aad
aad
cli
clc
in
std
call
loope
shl
loopne
mov
loopne
out
ljmp
ror
xor
in
jmp
sub
repnz
ret
sti
out
out
in
std
int
cmc
out
lret
cmp
cmp
aas
jmp
fadd
ret
test
fiaddl
stc
test
jmp
mov
cmp
cmc
neg
repnz
sti
int3
out
cmp
aam
fisttps
loop
test
ds
sti
repnz
out
in
ljmp
icebp
cli
jmp
mov
lret
xchg
hlt
lret
sub
xor
xor
aam
cmp
idivl
cmp
jecxz
loopne
lea
loopne
into
int
ret
xor
shr
cmc
aaa
ret
repnz
ror
aas
faddl
call
not
cmp
enter
xlat
ret
out
sar
in
cli
cmp
adc
das
fidivl
in
sar
cli
in
sti
ret
testl
hlt
into
repz
fmul
enter
call
loope
ret
cli
fcom
ret
test
out
int
xor
xlat
lret
rcr
leave
div
fxch
hlt
cmp
repz
sti
std
loope
stc
fucomip
into
ror
repz
shr
aam
xlat
lret
in
rcr
int
cmp
in
leave
loopne
mov
in
loop
loope
loope
in
lret
neg
aam
lret
out
in
fistpll
fdivr
cmc
cmc
ret
fsubp
leave
xchg
xchg
loop
icebp
sti
iret
enter
sti
xor
xor
jmp
neg
cli
in
ret
in
aas
lock
xor
call
add
vpmaddwd
std
rol
fsubr
enter
sbb
int
xor
cld
aas
aam
neg
hlt
adc
out
leave
fucomi
iret
out
int
xchg
out
xor
enter
out
fdivs
loopne
into
repz
call
ret
and
lret
ror
in
mov
icebp
enter
xor
loope
aam
ret
std
sti
jmp
out
lea
cmc
cmp
hlt
jmp
repnz
clc
rcr
add
in
test
mov
fnstenv
xor
test
sarl
icebp
neg
std
jecxz
stc
ret
mov
ret
clc
loop
in
fiaddl
call
aaa
out
xor
ds
call
icebp
leave
mov
jecxz
hlt
iret
aad
shl
ss
push
shl
ds
out
hlt
shr
cmp
mov
in
loop
mov
xlat
enter
hlt
frndint
cmp
shl
test
in
fdivr
mov
cld
mov
shl
test
cmp
cs
iret
fsubr
ds
fdivr
ret
xchg
in
leave
int
mov
rcll
stc
leave
sub
hlt
clc
loope
in
lock
icebp
sar
fstp
ds
add
out
in
lock
cmc
in
lock
or
std
sti
icebp
rorl
jmp
xchg
into
jmp
stc
cmc
in
lret
ror
xlat
std
cmc
ss
xlat
cmp
jb
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
orl
jmp
into
ds
rcl
aad
arpl
ljmp
add
cld
into
loopne
jecxz
incl
loop
test
cmc
jmp
jmp
ret
std
int3
shl
clc
fcmovnu
fstp
jecxz
into
int3
adcb
out
aaa
repnz
cld
int3
out
hlt
jmp
cld
xlat
cmc
testb
loope
out
int3
out
xchg
sub
xlat
out
in
shr
repnz
out
in
lock
or
fimull
aad
ret
rcl
cmp
lret
rol
xchg
sar
in
les
call
ret
xor
lret
repz
sarl
loopne
ds
xchg
hlt
add
sub
dec
into
int3
aad
loope
shr
in
cmp
fdivrp
xor
shl
fxtract
ljmp
int
xchg
mul
icebp
out
cmp
fcomip
into
std
cmp
fadds
mov
fcmovnu
mov
jecxz
xor
sar
enter
in
lock
cmp
jecxz
fucomp
fisttps
call
jmp
jmp
aaa
jmp
icebp
repz
test
repz
stc
iret
mov
jecxz
loope
fildll
jmp
les
aam
rcr
sub
and
test
rcr
hlt
mov
int
int
loopne
repz
cmp
cmp
xor
fcmovb
ret
xor
jmp
out
cld
fmulp
sub
xlat
test
rcr
add
rcr
neg
loopne
out
ficoml
xor
les
stc
hlt
out
ds
loop
sti
loop
jmp
clc
shl
test
fildll
call
xor
cmp
loope
in
xchg
xchg
sbb
in
cld
call
out
call
cmc
xor
cmp
or
out
mov
in
int
loopne
mov
out
loop
shrb
loopne
in
fadd
call
clc
xlat
ret
loop
fstp
test
mov
out
xchg
shl
cmp
aam
ror
call
neg
or
clc
in
in
rorl
ret
lret
icebp
clc
jmp
jmp
lock
jmp
test
enter
icebp
lret
aad
sti
cmp
fdivrs
xlat
fxch
in
out
cmp
fcom
std
in
shl
xchg
rorl
loope
cmc
in
in
enter
shl
rcl
testb
out
xchg
test
hlt
xor
xor
ljmp
cld
aas
cld
in
ret
dec
mov
int3
mov
adc
aaa
int3
xor
aam
hlt
cmp
stc
hlt
mov
cmc
xlat
aad
jmp
out
xchg
cs
in
int3
jmp
sbb
fcmovnbe
mov
jecxz
neg
clc
mov
into
shlb
xor
clc
shl
fdiv
std
ds
cmp
repnz
repz
ljmp
shl
int
into
ret
out
cli
sub
repz
ret
call
test
in
int3
ret
sar
aaa
jmp
int
adc
ret
jmp
fnstsw
mov
mov
icebp
iret
xor
repnz
cmp
into
iret
cmp
aas
ds
xchg
shl
mov
int3
xchg
adcl
fyl2xp1
in
aad
faddl
loope
sbb
cld
test
xlat
call
shl
fcomi
cmp
iret
fcmovnu
xchg
shl
test
xchg
xchg
out
out
fxch
cmp
int
fst
sarb
sti
ret
out
ss
lock
fcmovu
cli
hlt
mov
jmp
add
hlt
jmp
cli
lret
fsubr
cmp
hlt
fmul
in
aad
std
fmull
out
mov
divb
icebp
xor
cmp
shr
loope
or
rol
idivl
std
enter
mov
loop
in
cs
int3
lret
shlb
out
fidivrs
xor
out
mov
xchg
adc
rcr
repz
vpsubusb
icebp
clc
or
icebp
clc
fnclex
in
loope
fiadds
mov
out
cli
in
xor
aam
ret
push
ffree
cmp
rol
mov
xchg
std
cmp
ds
cmp
icebp
repnz
aam
cld
shl
loop
std
and
jmp
sbb
call
mov
lock
test
loope
enter
icebp
int
sub
mov
loopne
in
jmp
ror
aaa
lret
out
rol
sti
lock
xlat
jmp
test
neg
fcmovnu
jmp
int
sub
xor
in
xor
repz
mov
sbb
xor
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
add
imul
mov
jmp
leave
sarb
int
leave
jle
mov
push
xchg
jl
jl
jl
fmul
hlt
test
loope
loop
std
ljmp
sarb
int3
into
aad
fpatan
fdiv
ret
call
call
xchg
nop
mov
fdivrs
int3
fucomp
leave
les
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
push
andl
push
subl
push
xorl
xor
lea
xor
movl
or
andl
xor
add
adcl
push
orl
lea
subl
push
push
xorl
lea
movl
inc
subl
xor
negl
xor
call
movl
movl
mov
mov
jmp
adcl
xor
movl
xor
sbb
xor
addl
xor
movl
incl
mov
mov
cmp
jb
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jb
movl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
andl
movl
sub
lea
mov
sbb
mov
mov
and
lea
neg
mov
xor
or
sub
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
movzwl
sub
mov
mov
mov
add
mov
add
xor
mov
add
not
mov
mov
mov
cmp
mov
movl
mov
movl
je
sub
mov
xor
add
adcl
imul
mov
movl
jmp
sbbl
xor
movl
add
mov
xor
mov
mov
sub
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
call
jmp
sbb
add
mov
xorl
mov
xor
mov
orl
xor
movl
add
movl
cmp
movl
jne
push
pushl
andl
pushl
andl
call
mov
mov
mov
xorl
mov
mov
mov
mov
movl
movl
andl
mov
and
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
andl
mov
xorl
xor
sbbl
add
movl
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
xorl
xor
sub
lea
mov
mov
xor
orl
lea
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jb
and
mov
movl
mov
movl
or
mov
mov
xor
addl
add
cmp
movl
je
xor
mov
xor
addl
add
add
mov
mov
mov
sub
and
mov
xor
and
mov
orl
sub
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
xor
add
adc
add
mov
movl
cmp
ja
mov
and
mov
movzwl
sub
mov
xor
add
movl
cmpl
je
cmpl
jne
push
push
push
push
call
mov
dec
mov
jmp
orl
imul
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
xor
add
and
mov
xor
adc
add
add
mov
mov
mov
mov
mov
mov
sub
or
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
push
sub
push
xor
push
mov
call
pushl
pushl
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
je
mov
jmp
mov
mov
mov
mov
movl
movl
mov
xor
add
mov
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
xor
add
jmp
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
pushl
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
push
movl
push
movl
mov
movl
push
movl
mov
movl
mov
mov
push
not
mov
movzbl
mov
cmp
movl
je
mov
mov
xor
addl
add
cmp
je
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
sbb
xor
add
push
mov
adc
pushl
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
pushl
mov
call
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
push
movl
mov
mov
sbbl
add
andl
xor
movl
cmp
jne
and
mov
mov
movl
add
mov
mov
mov
movl
xor
and
push
xor
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
movzbl
adc
mov
xor
mov
addl
xor
subl
add
movl
mov
mov
movl
movl
mov
movl
push
mov
movl
mov
cmp
movl
je
orl
mov
addl
xor
adcl
xor
xorl
lea
negl
xor
movl
cmp
movl
jne
jmp
add
mov
xor
addl
add
andl
mov
movl
mov
xor
and
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
call
jmp
mov
leave
ret
push
mov
sub
adc
movl
dec
movl
mov
push
mov
adc
xor
mov
add
mov
xor
or
mov
add
mov
push
push
adcl
test
movl
je
mov
mov
mov
sbb
mov
mov
imul
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
sbbl
mov
add
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
sbbl
mov
xchg
sub
xor
orl
mov
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
sub
mov
xor
sub
xor
add
mov
movl
mov
movl
je
andl
mov
xorl
xor
andl
add
cmp
jne
adcl
pushl
call
subl
mov
movzwl
add
mov
mov
mov
or
mov
sbbl
mov
xor
andl
add
cmp
je
pushl
pushl
orl
call
movl
mov
mov
add
mov
xorl
xor
add
movl
cmp
movl
je
orl
mov
mov
mov
sbb
mov
mov
notl
add
movzwl
sbb
mov
sub
mov
subl
mov
add
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
orl
mov
mov
subl
add
adc
xor
mov
sub
mov
xor
add
mov
sub
mov
add
xorl
lea
mov
xorl
push
pushl
subl
pushl
orl
call
mov
xor
add
sub
mov
mov
notl
xor
decl
add
movl
cmp
movl
jne
inc
mov
movl
inc
movl
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
