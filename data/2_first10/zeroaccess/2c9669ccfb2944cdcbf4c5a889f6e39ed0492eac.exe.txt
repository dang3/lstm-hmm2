push
mov
sub
mov
mov
xorl
mov
jmp
jnp
jl
js
ja
stos
or
mov
shll
add
or
test
xor
ret
dec
xchg
mov
inc
pop
shll
pop
lret
adc
repnz
ja
mov
repnz
dec
mov
mov
sub
cli
faddl
jne
dec
inc
jno
imul
jge
icebp
cmp
frstor
lods
dec
pop
push
adc
mov
fnstsw
outsb
repz
lods
fcmovb
mov
out
adc
cltd
movsb
fsubr
aad
movsl
sbb
stc
add
push
imul
in
inc
sub
enter
negl
sahf
add
in
in
adc
cmpb
jo
test
mov
aaa
aam
add
or
lcall
das
adc
cmpsl
loop
lods
mov
mov
sub
dec
pop
dec
scas
or
sti
pop
and
mov
jne
xor
lods
push
ljmp
inc
jb
dec
sarl
rolb
inc
jb
jne
push
mov
int
outsb
and
mov
jecxz
adc
popa
cmpsl
sub
fcomp
adc
incl
fldl2t
shrb
adc
psubsb
scas
or
ljmp
orl
ss
dec
sbb
js
push
enter
clc
loopne
out
es
xchg
xchg
inc
addb
push
pop
fidivrs
insb
xor
jle
push
or
jne
sub
loop
iret
add
xchg
push
sub
xchg
dec
mov
repnz
hlt
lods
orb
add
lods
mov
xchg
out
add
scas
mov
mov
jp
addr16
xor
cmpsl
sub
sbb
xchg
dec
aad
cmpsl
das
ja
iret
add
test
fstpl
jmp
pop
mov
rcrb
xchg
cmc
mov
pusha
sbb
mov
sbb
int3
xor
inc
ret
leave
insl
jns
decl
or
or
cmp
mov
pop
sub
push
adc
iret
xchg
sti
push
js
mov
lret
pop
paddw
faddp
pop
mov
testb
leave
mov
and
xlat
call
in
and
aas
and
test
dec
ret
xor
cmp
jl
xlat
lods
loop
dec
adc
push
jecxz
pop
or
pushf
jo
lahf
pop
mov
sbb
cmp
loop
dec
stos
in
call
adc
cmp
mov
xor
aam
jb
sbb
dec
push
movsb
not
fbld
push
fimull
dec
sti
arpl
push
mov
nop
callw
push
les
bound
add
cwtl
push
repz
or
cmpsb
das
movsl
sub
dec
jmp
sti
mov
xor
ret
hlt
adc
sbb
xchg
addr16
leave
add
cmp
out
sub
rorb
in
aaa
imul
xor
divb
xchg
mov
sbb
mov
sub
lods
mov
inc
jle
xchg
fsubl
inc
or
pop
mov
adc
es
outsl
jecxz
xchg
int
je
outsl
inc
mov
int3
testb
and
mov
dec
int3
mov
push
lret
fcmovnu
in
lahf
scas
jl
push
lea
xchg
gs
sbb
xchg
push
fldenv
pop
mov
xor
sub
roll
stc
push
dec
movsb
pop
ret
mov
jbe
pop
mov
stos
fcompl
aad
sbb
inc
jg
sbb
push
aam
movsb
je
into
aas
mov
xchg
mov
mov
scas
icebp
xor
sarl
in
out
add
out
cmp
xor
mov
push
add
add
rcrl
scas
push
mov
ret
addr16
cld
mov
mov
imul
dec
test
xor
mulb
sbb
sub
xchg
cmpsl
dec
xor
or
sub
sub
cmp
andl
fwait
in
scas
xor
inc
xchg
std
mov
mov
clc
mov
mov
movsb
mov
mov
jbe
jb
orl
jmp
fsubl
lahf
call
xchg
pushf
mov
and
imul
loope
sbb
or
cmp
mov
call
mov
cltd
xor
jae
je
scas
pop
mov
adc
jne
mov
mov
stos
ljmp
or
cld
lcall
adc
sbb
and
aas
pop
or
fldcw
imul
and
shll
inc
js
inc
or
push
in
cmp
push
pop
mov
sahf
jns
add
and
sub
cmpsl
movsl
adc
fidivrs
fsubrp
cmp
repz
sub
inc
jns
inc
dec
out
push
test
pop
dec
jle
cmp
pushf
repnz
add
mov
push
and
xchg
test
push
inc
inc
dec
jo
pushf
or
outsl
fstpt
loopne
test
gs
das
push
ss
mov
testl
inc
inc
or
add
and
icebp
ja
mull
sub
sub
xor
push
jmp
add
lds
mov
mov
mov
pop
addr16
add
or
add
or
pop
dec
mov
jmp
mov
sub
jns
mov
inc
lcall
inc
int3
in
adc
mov
mov
jecxz
vunpckhps
bound
cmpsl
xchg
movsl
ljmp
dec
xchg
mov
ljmp
adc
xor
mov
push
std
jb
lock
push
mov
pop
pop
jne
jne
push
mov
stos
pop
aam
stc
imul
push
sbb
cmc
data16
jmp
inc
scas
sbb
cmc
repnz
inc
enter
dec
mov
jns
movsl
out
jo
cmp
xlat
mov
sbb
add
inc
fxch
push
push
push
mov
fnstcw
pusha
aaa
addr16
out
and
lahf
jmp
dec
outsl
jae
jae
dec
mov
pop
aas
and
and
mov
mov
inc
push
addr16
mov
pop
es
les
shll
std
mov
inc
ljmp
ja
icebp
sbb
or
dec
fs
je
scas
jle
mov
pop
dec
pop
xor
push
stc
sub
jno
xor
into
scas
loop
lcall
test
ficompl
data16
in
daa
jmp
test
loope
cli
pop
jmp
mov
xor
shll
and
popa
sbb
push
gs
scas
outsb
jmp
or
dec
inc
in
add
inc
fmul
rcl
sub
dec
xorb
pop
cltd
sub
jmp
sbb
xlat
test
pusha
jecxz
sahf
andl
mov
xor
push
ret
lds
repz
lcall
out
test
fistpl
push
xor
mov
ret
stos
xor
mov
pop
dec
std
shrb
stos
or
sbb
cmp
daa
fists
clc
data16
in
je
sbb
sbb
call
std
js
je
aaa
inc
insl
out
pop
fucomi
jne
cli
sbb
mov
or
xor
mov
dec
out
je
loop
adc
xor
or
cmpsl
mov
push
not
je
or
jo
rorl
mov
fnstsw
pop
xchg
mov
and
testb
test
subl
mov
notl
xlat
ret
mov
xor
pop
icebp
nop
pushf
imul
jo
orl
imull
push
shrb
cli
and
jbe
out
jo
mov
sbb
movsb
sbb
idivl
test
shll
and
mov
sarb
push
mov
cmpsl
mov
adcl
pop
ret
push
lea
lahf
or
cmpsb
ret
insb
push
das
iret
or
sbb
cmpl
movsl
dec
dec
ja
mulb
stos
cwtl
mov
mov
jge
scas
testl
notb
cwtl
sub
sar
pushf
jl
popa
mov
push
push
xchg
adcl
bound
mov
mov
mov
es
mov
inc
insl
push
mov
jmp
flds
pop
mov
and
pop
stos
pushf
push
xchg
mov
call
push
sub
and
cld
push
je
lods
test
push
aaa
mov
inc
sbb
xchg
xor
pop
mov
pop
mov
ret
dec
or
add
and
sarb
je
sbb
test
fs
xchg
sub
es
or
cmp
or
sub
fbstp
test
xor
out
je
sbb
sbb
pusha
cmp
jbe
loope
je
mov
jmp
dec
mov
add
xchg
xor
aad
jae
and
mov
push
scas
push
or
daa
add
jo
push
adc
inc
cs
in
insl
push
mov
sub
and
imull
pop
xchg
rolb
mov
outsb
dec
stc
inc
and
fadds
outsb
arpl
inc
lcall
leave
push
subb
or
stos
das
mov
add
scas
cmpsl
and
call
je
and
adc
mov
js
add
push
push
or
push
enter
push
test
shl
andl
xchg
dec
pop
out
sub
ret
repz
inc
add
dec
not
mov
sub
faddl
inc
in
enter
pushf
ss
xor
cmpsl
cli
ret
iret
push
sbb
lock
add
int
inc
outsl
jmp
xor
jmp
inc
push
and
push
push
adc
add
xlat
addr16
fimuls
pop
in
mov
and
and
ret
int
cmp
lock
pop
neg
shrl
xchg
out
jo
inc
fstl
out
rcll
out
inc
inc
and
pop
movsl
jae
sub
repz
out
xor
or
dec
scas
sbbb
and
lcall
mov
add
rclb
adc
inc
mov
sbb
mov
xor
jmp
dec
jne
adc
test
aaa
adc
iret
add
or
mov
loope
outsl
add
push
mov
incb
pop
in
notb
test
adc
pop
fs
push
loop
cmp
sbb
jle
loope
xlat
imul
dec
test
xchg
pop
xor
push
decl
xor
pusha
cmp
pop
jmp
shlb
pop
sbb
movsb
pop
xchg
mov
in
mov
mov
ret
stos
out
cwtl
pushf
dec
call
or
je
mov
sub
lcall
xlat
adc
jmp
dec
js
mov
push
inc
mull
pop
js
aaa
dec
jmp
and
aaa
je
stos
mul
aaa
les
dec
aaa
sbb
rolb
iret
cwtl
xlat
xchg
sbb
es
cmp
mov
and
ficompl
pop
mov
mov
mov
movsb
xor
sbbl
push
es
cltd
cmpsb
inc
jne
mov
stos
mov
pusha
and
dec
aaa
sahf
ljmp
or
xor
ret
and
sbb
stc
jecxz
shlb
xchg
lea
fcmovne
fldt
aas
jae
jmp
sahf
xor
mov
adc
popf
ja
sub
ds
popf
movsl
sbb
fwait
sub
sub
fcomps
pop
dec
in
cli
push
xchg
ror
aad
in
cli
jge
and
jne
std
loope
jnp
mov
mov
cmp
lods
cmpb
xor
pop
aad
and
cmp
xor
cwtl
xor
fimuls
test
push
mull
jo
testb
cwtl
inc
jae
fbld
xor
xchg
pop
das
pop
insl
daa
push
mov
gs
jae
or
mov
jecxz
cmpl
mov
jmp
pop
loope
inc
cmp
daa
sbb
xchg
mov
lret
fcmovb
jo
jp
adc
std
sarb
insb
andl
inc
out
in
jns
push
lret
insb
lcall
sbb
xor
xchg
loop
mov
lds
iret
insb
push
sub
cmpsl
aas
sbb
ret
sarb
stos
xor
pop
in
xchg
fucom
andb
sbb
inc
movsl
push
inc
outsb
lock
push
xor
fdivr
sbb
fsubrs
cli
add
sbb
sbb
ror
mov
inc
pop
jo
outsl
test
xchg
ret
lea
stos
add
push
in
enter
inc
dec
jge
lock
mov
jne
add
pop
fidivs
aad
std
xchg
xchg
xchg
adc
cmp
jle
mov
aam
ja
int
mov
ret
sub
fldt
out
es
mov
push
loopne
fadd
aad
lret
arpl
add
and
mov
mov
not
fmul
aas
fcmovb
adc
and
cmp
test
mull
sub
lret
fisubl
jo
xchg
xchg
push
outsl
xor
gs
out
test
rcrl
ret
out
and
cmp
push
shll
andb
sar
out
jge
mov
or
aas
mov
push
into
movsl
sbb
jae
or
mov
add
ja
mov
xchg
notb
jle
out
and
stos
sbbb
or
add
dec
fisubrs
out
add
lcall
shlb
data16
jg
ds
or
pop
ja
iret
cmp
sbbb
xor
outsb
inc
xor
jl
lret
lods
push
iret
movsb
jbe
rclb
loop
or
and
aas
sub
fistpll
mov
mov
mov
out
arpl
cmpsl
testb
jae
pop
inc
jle
fbstp
movsl
sub
dec
adc
xorl
je
push
mov
mov
enter
sub
addr16
add
inc
scas
fxch
ret
xchg
jnp
xor
ja
int3
fildl
imul
addr16
mov
sub
repnz
jmp
mov
ja
pop
hlt
dec
pop
shrb
icebp
pushf
loopne
sbb
add
or
ror
or
sub
loopne
mov
dec
das
stc
xchg
xchg
mov
push
aam
or
fstps
push
mov
movsb
add
aas
rclb
mov
cmp
ja
loop
pop
addb
sub
or
insb
out
or
fucomip
xchg
fisubs
cmp
or
es
xor
inc
vphsubwd
xchg
mov
sbb
adc
data16
mov
sbb
push
inc
push
loop
and
push
jnp
test
call
ret
xchg
xchg
mov
jl
xchg
or
mov
pushf
shll
add
push
inc
fidivrl
mov
and
aas
inc
dec
loopne
fwait
cmp
fsubrp
pop
lahf
pop
dec
call
cmp
mov
and
xlat
jnp
in
movsl
xchg
mov
pushl
sbb
sub
or
mov
inc
mov
iret
clc
in
scas
mov
adc
mov
cld
imul
mov
mov
fwait
cmpl
mov
mov
jmp
mov
movzwl
jne
call
xor
sbb
orl
sbb
and
sub
mov
mov
mov
adcl
mov
sub
mov
mov
sbb
cmpl
mov
mov
movl
jmp
movl
movl
jge
pushl
push
push
pushl
call
inc
notl
add
subl
sub
xor
sbbl
mov
orl
orl
xor
lea
mov
mov
sub
mov
adc
mov
orl
add
mov
mov
mov
mov
cmpl
mov
movl
jmp
movl
jbe
push
push
push
push
pushl
call
adcl
sbb
negl
and
adc
adc
subl
movl
shrd
xor
shr
cmpl
mov
movl
jmp
movl
jg
call
mov
adc
addl
subl
add
or
addl
and
add
adc
mov
sbb
mov
xor
xor
or
mov
movl
movl
movl
subl
movl
cmpl
movl
movl
jmp
movl
jbe
push
push
call
add
orl
adc
xorl
subl
movl
cmpl
movl
movl
movl
jmp
movl
mov
ja
push
pushl
push
push
call
adcl
andl
subl
adcl
addl
sbbl
orl
adc
movl
movl
or
movl
xor
xor
or
mov
movl
movl
movl
movl
cmpl
movl
movl
movl
jmp
movl
jbe
pushl
call
sbb
adcl
sbb
xorl
and
movl
cmpl
movl
movl
jmp
not
jl
pushl
push
pushl
call
sbb
andl
and
addl
sbbl
subl
or
movl
cmpl
mov
movl
mov
jmp
movl
jl
push
call
addl
addl
movl
sbbl
movl
orl
movl
sbb
movl
movzwl
sub
movl
movl
neg
movl
movl
xor
movl
cmpl
movl
movl
jmp
mov
mov
jbe
pushl
call
orl
xorl
or
addl
movl
adcl
and
movl
mov
adcl
shl
mov
adc
mov
mov
adcl
jmp
scas
mov
mov
jno
jne
push
outsl
cmpsl
cmp
or
iret
add
or
adc
cmpsb
mov
fisubrl
jp
sahf
popf
mov
loope
test
rcl
mov
fwait
adc
lret
jle
fcmovnbe
inc
lahf
sbb
xor
test
sub
cld
imul
push
add
lods
mov
aad
dec
pop
inc
mov
pop
and
call
subl
and
aas
pop
xchg
rcrb
dec
push
xchg
lahf
repnz
inc
push
or
adc
subl
je
or
adc
ss
rcrl
jno
and
mov
cld
sub
xchg
push
dec
cmc
sub
and
stos
in
cmp
sub
lahf
je
sbb
shl
adc
dec
out
imul
pop
cmpsb
aas
mov
call
sub
in
and
mov
lret
push
fdivrs
pop
je
repnz
pop
pop
cltd
cmp
dec
or
adcl
pop
sub
mov
in
in
in
pop
stos
jb
inc
cli
push
jmp
mov
loop
xchg
rolb
outsl
add
fldt
lea
xlat
movsb
icebp
inc
dec
out
adc
or
xchg
test
insl
push
test
imul
cs
test
mov
jmp
repnz
lods
or
add
jbe
pop
es
lods
dec
xlat
jo
push
fadd
sub
cmc
dec
stos
outsl
cmc
lret
daa
fstl
jl
cmc
loop
sub
enter
xchg
push
xor
out
sti
pop
xor
xchg
jnp
sbb
push
pop
mov
in
gs
add
fdivrs
cmp
jne
mov
lods
mov
push
pop
xlat
inc
arpl
cmp
cs
popa
pop
cli
pop
aaa
cmc
out
sbb
mov
mov
pop
cmp
xlat
movsl
das
inc
push
movsb
jno
mov
sti
aad
icebp
pop
mov
fs
xor
xor
out
nop
mov
sbb
pop
inc
mov
lds
push
mov
outsb
mov
xchg
cmp
lds
in
outsb
jb
in
daa
in
add
mov
dec
in
mov
inc
lret
test
push
mov
adc
lahf
sub
jnp
in
add
in
inc
pop
data16
push
add
jle
lret
inc
out
subb
mov
aad
test
xor
mov
loopne
mov
add
pop
mov
mov
jl
inc
mov
xor
mov
repnz
mov
loope
sub
xchg
push
lock
bound
push
sbb
dec
dec
jne
mulb
pop
mov
xchg
js
jle
stos
iret
add
cmpl
sbb
in
or
jg
and
and
xor
push
mov
fisubrs
fnstcw
jmp
nop
pushf
add
xchg
xchg
cmpsl
xor
sbb
mov
pop
pushf
pushf
test
pmulhuw
jns
mov
xlat
fnstenv
hlt
push
jb
cltd
cmp
mov
daa
and
inc
sub
mov
cmc
and
aam
loopne
inc
cmp
xlat
mov
mov
addb
mov
mov
mov
movsb
xchg
test
or
ret
aad
popf
pop
xor
cmp
sbb
mulb
push
jmp
sbb
mov
lock
pop
pop
or
fiaddl
mov
mov
mov
dec
movsl
enter
sbb
dec
and
cmp
push
push
push
sti
test
pop
xchg
mov
fsubs
in
insb
pop
addr16
mov
mov
cli
jne
pushf
rcr
or
mov
div
lcall
jecxz
cmpsb
notl
pop
in
ljmp
dec
mov
stc
out
in
jl
fdivrs
jl
pop
or
and
jge
xor
clc
and
pop
dec
and
stc
or
imul
jmp
rcrb
inc
divb
cli
roll
fstpl
push
ficomps
arpl
and
rcr
sub
pause
sahf
and
idivb
cmp
arpl
ljmp
addr16
inc
xchg
pop
cmp
cltd
into
stc
add
shl
pop
add
nop
repnz
push
aam
mov
fldcw
push
rcrb
push
inc
dec
pop
ja
fidivrl
xchg
outsl
fsubrs
mov
fistl
xchg
hlt
jg
loopne
inc
mov
and
notl
out
xor
fisttps
mov
std
lcall
in
cmp
les
jb
push
hlt
push
mov
movsl
add
cmc
lret
daa
push
mov
enter
sbb
mov
add
lea
jmp
insl
rcrb
in
cs
stos
dec
pusha
mov
imul
jle
mov
aam
push
scas
xor
xchg
ret
xchg
xchg
mov
lds
xchg
mov
adcl
inc
ffree
jns
call
sbb
out
cmp
push
push
push
call
adc
mov
movl
mov
movzbl
add
xor
jmp
push
xorl
xlat
popf
ret
mov
out
or
add
or
sub
or
mov
shlb
add
lahf
and
movsb
cs
pushf
fadds
adc
jae
fstpl
jmp
outsl
pop
in
andb
idivb
mov
dec
daa
mov
fidivrs
fwait
int
dec
nop
sub
pop
mov
movsl
sub
xor
je
les
fs
aam
test
xor
decb
adc
xor
dec
cmp
xchg
repz
leave
cmp
in
mov
fmuls
lea
jmp
movsb
or
decb
movsl
enter
lods
test
lret
push
xlat
and
jp
ss
lret
dec
repz
cmc
ljmp
lds
stc
jl
test
test
sahf
push
push
cmp
cmp
jl
in
sbb
xlat
adc
lods
jle
fists
jo
mov
add
push
jle
out
out
xlat
and
push
std
push
pushl
push
sbb
into
popa
and
mov
imul
cmc
mov
out
or
and
shrb
push
pop
mov
jnp
inc
cmp
or
sbb
push
pop
jmp
mov
cmp
ss
jp
jno
xor
mov
cmp
adc
adc
mov
mov
adc
xchg
stos
nop
ds
test
push
lock
out
adc
cmp
push
pop
add
or
sarl
in
arpl
sub
push
daa
lret
dec
cli
cwtl
sti
pop
mov
sub
out
cwtl
fldl
cli
outsb
call
cmp
jl
shlb
mov
and
mov
add
scas
fldenv
aad
pop
xchg
sub
sub
or
xchg
lcall
jbe
adc
pop
pop
outsl
frstor
stos
add
daa
enter
cmp
sub
xchg
pop
push
divl
and
lds
push
pop
sbb
jo
or
jl
jbe
aaa
popf
mov
inc
mov
sbb
mov
pop
test
jne
cmpsb
xorl
adc
cmp
push
push
out
divl
inc
gs
and
lods
mov
inc
daa
add
out
mov
or
outsl
add
push
stos
cld
mull
arpl
add
mov
xor
aam
jae
jno
ds
scas
push
js
popf
xor
ret
cmp
adc
xchg
pop
scas
pop
cmp
insb
xor
mov
push
pusha
jg
jns
in
in
xor
lahf
xor
test
add
scas
in
add
das
mov
popf
sub
in
inc
es
test
mov
xchg
jbe
add
jbe
pop
push
mov
pop
fldt
fnstenv
and
sub
jmp
loopne
mov
fcomp
cmc
fbstp
cmp
mov
pop
pushf
adcl
xor
jno
add
sahf
pop
push
dec
sub
inc
insb
or
mov
mov
dec
movsb
in
out
movsb
push
adc
pop
test
ss
out
add
lods
push
movsl
dec
cmpsb
xor
adc
repnz
nop
add
addl
jmp
mov
in
pop
push
xor
fiadds
mov
sti
xchg
mov
dec
loopne
adc
gs
popa
iret
gs
iret
dec
jg
dec
add
sbb
cmp
push
inc
xlat
lea
cli
add
cmp
jp
in
dec
mov
pop
lcall
mov
push
lret
xlat
cmp
dec
mov
push
fsubrl
inc
push
inc
sbb
pusha
pop
stos
movsl
pushl
gs
xchg
and
cmp
or
in
fucom
adc
sbb
mov
push
mov
sarb
jne
movsb
sti
pop
iret
inc
mov
xor
scas
inc
out
leave
push
notb
mov
jg
adc
mov
adc
push
xchg
in
ret
popa
outsb
add
lret
mov
push
fsubl
push
pop
mov
mov
fs
mov
or
std
cmc
jne
xor
in
rep
jbe
out
mov
lea
bound
mov
out
push
adc
repz
out
daa
fdivs
mov
les
inc
xchg
jmp
lret
xor
pop
push
sub
das
test
ja
ret
xchg
jge
das
or
add
mov
shll
adc
repz
out
xchg
push
in
sub
mov
xor
lcall
pop
jo
enter
cmp
icebp
sti
push
les
add
push
adc
add
std
std
cmp
sub
aam
int3
push
addb
and
iret
orl
hlt
hlt
jne
cwtl
stc
and
sub
mov
sub
dec
xchg
mov
add
test
push
xor
insb
mov
adc
add
add
xor
mov
and
sahf
pop
stc
xchg
outsl
push
arpl
mov
xor
xchg
outsl
pop
pop
sbb
neg
mov
bound
and
repnz
ds
xchg
or
mov
fldt
and
mov
sub
adcl
mov
lea
xor
xor
or
jmp
enter
xor
mov
push
xorl
xor
test
movsb
inc
jp
lahf
sub
scas
in
dec
mov
mov
cmpsb
pop
xchg
add
rcll
or
push
pop
pop
mov
sub
cmp
xchg
mov
repnz
repz
or
mov
imul
jge
pop
sbb
shll
or
inc
adc
adc
imul
jae
mov
dec
cltd
xor
and
and
les
or
lret
ret
cs
mov
add
push
les
xchg
cmp
adc
aam
mov
jg
into
std
mov
mov
inc
adc
mov
inc
and
fldt
xor
adc
lock
ds
push
pop
loope
jl
xor
test
mov
xchg
xchg
jae
mov
jl
pshufw
jecxz
dec
and
das
mov
mov
mov
mov
xor
lods
sbb
orl
ljmp
insl
xchg
inc
xor
pop
and
mov
sbb
adc
fcmovnb
xor
loop
or
jae
and
pop
mov
jle
popa
push
movsb
lods
mov
cmp
mov
cwtl
outsb
sbb
and
or
xchg
lods
jg
mov
in
loopne
lods
push
or
stc
ret
fildl
push
out
andb
test
out
imul
mov
outsb
mov
dec
ss
sbb
sub
mov
pop
loopne
or
pop
inc
mov
pop
push
fistps
cld
jl
sub
mov
popf
sbb
stos
sahf
or
mov
mov
dec
ja
pop
jae
imul
inc
mov
mov
stc
lods
mov
xor
pushf
xchg
sbb
popa
sbb
cmpsl
scas
mov
test
dec
pop
mov
cwtl
scas
out
cmc
enter
inc
fdivrs
leave
xor
in
sub
clc
jge
fidivl
jl
roll
inc
mov
mov
jecxz
mov
fidivrl
clc
jmp
arpl
jae
int3
cli
pop
lea
cmp
xor
xchg
cmp
out
repz
sub
and
insl
imul
fwait
cmp
std
add
add
push
call
lods
jecxz
jle
add
add
stc
mov
cmp
dec
aaa
inc
into
idiv
mov
dec
adcb
add
jo
inc
jns
or
dec
jbe
fldcw
mov
ljmp
subl
ds
cli
insl
adc
ds
scas
ss
jb
and
dec
and
enter
pop
cltd
sbb
sub
pusha
add
and
in
xor
in
imul
sbb
int
mov
cmpb
push
or
mov
push
push
ljmp
aaa
sbb
and
cmc
pop
in
popf
es
add
and
jae
lret
sbb
xchg
xor
dec
rcl
fnsave
and
cmp
aam
in
pop
jne
int
sbb
popa
mov
and
cmp
aad
scas
mov
mov
std
inc
jae
fidivl
repnz
jl
scas
ja
inc
sahf
mov
cmc
inc
dec
mulb
ja
mov
loop
or
scas
mov
pusha
mov
mov
push
jge
call
add
aas
mov
cmpsl
inc
add
cmp
ja
mov
ret
xor
inc
lds
in
bnd
add
inc
add
add
ss
inc
outsb
ficompl
shl
out
push
adc
pop
pop
adc
sbb
int3
lods
sbb
jnp
push
mov
fldt
outsl
decb
dec
cwtl
xchg
xor
jg
or
js
out
rorb
add
jmp
lods
pop
mov
jno
adc
push
push
int
sbb
shlb
xor
lds
fidivrl
and
flds
pusha
xchg
inc
xchg
mov
ret
or
cmpb
dec
testb
or
hlt
cmp
pusha
jle
jle
out
iret
mov
aad
pop
and
add
push
popa
sbb
je
popa
mov
pop
fwait
pop
aad
inc
xchg
dec
mov
cmpb
imulb
cmp
mov
xchg
cs
shll
push
mov
jecxz
lds
movsl
lret
adc
push
push
dec
jle
jo
repnz
cwtl
aaa
fsts
cmpsb
out
jecxz
aaa
icebp
lds
pusha
inc
enter
out
or
push
test
jnp
ret
and
dec
pop
stos
outsl
xchg
bound
pop
mov
test
les
xchg
mov
sub
in
dec
inc
add
loopnew
or
adc
cmpsb
xorb
popa
jae
out
sub
cmp
mov
pop
movsb
cmp
rcr
dec
outsl
mov
icebp
mov
dec
push
push
mov
mov
sub
push
dec
pop
cld
sbb
aas
mov
mov
mov
or
and
inc
mov
xorl
or
xor
movl
cmp
movl
jne
mov
adc
mov
xor
shrd
adc
jmp
cs
push
loopne
lahf
pop
and
jb
jae
int3
or
iret
add
or
xchg
cwtl
loope
jecxz
or
mov
mov
push
sbb
nop
mov
mov
pop
cmp
stos
mov
mov
test
std
lds
sti
sbb
mov
pop
aad
sbb
mov
in
jle
aad
inc
and
test
pushf
in
leave
inc
imul
aad
lcall
xchg
xchg
lds
xor
jbe
cmp
mov
jmp
mov
imul
mov
mov
jbe
aas
inc
jne
aas
lods
sbb
sub
addr16
in
and
dec
xor
push
in
sub
xor
out
dec
insb
in
es
mov
mov
pop
dec
mov
mov
cwtl
add
jo,pn
mov
xchg
mov
popf
aam
lahf
push
out
data16
je
fs
mov
lahf
jo
fmuls
jae
sub
ficoms
mov
jnp
in
add
dec
sahf
xor
push
outsl
mov
aaa
outsb
sti
push
cli
dec
dec
push
mov
ret
loop
inc
dec
cwtl
loope
test
sbb
lret
pushl
call
mov
adc
or
out
test
mov
jle
js
jno
xlat
cmp
in
adcb
lret
subl
dec
push
cmpsw
mov
push
cli
fucomp
and
or
movsl
jno
push
lods
mov
jmp
or
cmp
sub
sub
jle
call
rcl
in
stc
inc
sbb
xor
adc
inc
in
xchg
fwait
jns
lahf
push
ret
add
mov
out
jns
jbe
or
jae
rclb
hlt
sub
inc
dec
adc
or
mov
mov
out
add
inc
xchg
lods
xchg
dec
popa
add
js
or
outsl
mov
arpl
hlt
pushf
push
cs
test
xor
sub
cltd
cli
xchg
xor
roll
scas
fwait
sbb
je
subl
cmpsb
pop
xchg
sahf
jbe
call
pop
sti
test
js
push
cmpsb
push
call
lret
mov
lcall
push
xor
mov
dec
fbld
scas
or
inc
addl
pushf
pop
and
pop
lock
sbb
push
pop
pop
jp
loope
test
popf
sbb
push
sub
and
popf
test
or
jp
xor
insl
add
pop
mov
and
or
aad
sub
loope
es
rolb
outsl
fcoml
pop
fidivl
pop
xor
push
shr
pusha
cmp
push
sbb
mov
pop
or
scas
lock
jl
push
stc
or
pushl
lods
fimull
xor
movsl
mov
jg
cmp
mov
sub
adc
imul
and
aas
cmp
nop
mov
leave
jnp
inc
mov
sbb
ja
push
cvtpi2ps
adc
mov
add
test
lods
push
mov
rorb
pusha
mov
adc
mov
pop
xchg
mov
std
mov
out
fcom
in
inc
or
fchs
out
jg
test
lods
inc
xchg
sub
cwtl
add
push
jmp
popa
jae
jge
call
mov
fiaddl
push
mov
mov
imul
dec
and
fwait
jno
add
pop
sbb
in
sbb
pop
das
cmp
mov
push
dec
iret
repz
lret
xlat
xchg
xchg
jbe
fs
es
push
lods
sbb
jnp
cmp
sbb
test
xchg
in
dec
and
ds
test
inc
bound
jl
mov
inc
shlb
lock
push
dec
addr16
pop
sarl
iret
stos
les
in
jl
fisubrl
inc
repnz
sbb
xchg
daa
fcomps
ss
jo
mov
mull
sbb
push
in
and
cmpb
xchg
jmp
sti
cmp
mov
and
jge
sub
fmuls
rolb
sbb
inc
sub
dec
ret
mov
ljmp
das
cmp
shlb
adc
popa
cmc
and
cmp
sti
jg
xor
dec
addr16
test
jno
iret
xor
pushf
dec
jne
loop
in
xchg
es
push
cmpsl
call
and
jl
cmp
push
mov
scas
hlt
lods
pop
loope
jne
mov
xchg
jns
push
sbb
int3
mov
and
mov
outsl
bnd
jbe
mov
fildl
testb
sbb
lahf
sub
leave
stc
mov
in
mov
mov
sbb
mov
jle
pop
mov
pop
and
movsb
and
mov
das
lods
inc
cmpsl
in
pop
pushf
test
test
jmp
pop
push
aad
ja
cmp
rcll
mov
int
inc
daa
jb
adc
xor
js
mov
mov
cli
mov
in
cmp
mov
xor
mov
or
scas
repnz
mov
mov
test
cli
inc
stos
or
fnstsw
jge
and
aas
cmp
mov
sub
imul
mov
or
mov
shl
adcl
xor
xor
sbbl
or
mov
mov
cmp
jne
or
mov
sbb
mov
cmpl
mov
movl
movl
jmp
mov
jg
pushl
push
pushl
push
pushl
pushl
call
adc
xor
mov
or
adc
and
xor
movzwl
add
mov
mov
add
mov
incl
shrd
negl
mov
mov
and
mov
xor
shr
mov
xor
or
shl
cmpl
mov
mov
mov
movl
jmp
movl
jl
pushl
call
and
andl
sub
orl
sub
mov
subl
mov
mov
xor
add
subl
jmp
xchg
and
inc
xchg
arpl
jne
enter
add
or
adc
fprem
test
push
push
dec
and
ss
std
test
into
lds
jmp
jg
xor
aaa
cmp
xor
push
ret
pop
enter
out
movsl
stos
idivl
clc
pop
jae
mov
addb
lret
mov
jae
lret
jl
and
mov
xor
sub
movsl
xchg
xchg
push
dec
jmp
rcrb
shlb
xor
pop
xchg
lret
xorl
xchg
aas
or
adcl
cmc
xchg
orb
mov
outsl
mov
dec
or
scas
push
cli
mov
test
in
sbb
aas
sbb
push
fsubr
push
movsl
popf
loope
pop
std
out
push
rorb
jge
mov
dec
mov
repz
sahf
xchg
sahf
rcrb
pop
or
int
ds
add
pushf
getsec
das
dec
sbb
and
mov
ja
xchg
clc
adc
lods
sub
jns
mov
lea
ja
out
and
or
js
insl
sub
hlt
loopne
mov
xchg
bound
sti
sub
les
imul
ffreep
sbb
jmp
rcrb
fdivrp
jl
push
gs
push
jp
add
push
les
mov
lods
cltd
dec
xor
xor
mov
inc
fcmovb
add
imul
fimull
or
lods
push
jno
push
jo
aad
das
addr16
les
pop
orl
xchg
and
jle
sub
enter
stc
mov
into
bnd
add
dec
dec
stos
lea
jae
out
lds
push
movsl
aad
push
ljmp
mov
mov
adc
leave
in
xchg
push
or
ds
or
pop
imul
test
iret
push
mov
cmpsl
icebp
in
pop
inc
out
popa
xchg
cld
inc
mov
loopne
das
xchg
xchg
movsb
test
mov
add
sahf
fistpll
jo
test
insb
mov
push
dec
outsb
sub
ljmp
cwtl
aad
ret
xchg
jnp
clc
dec
sbb
sub
xchg
lds
cmpsb
dec
cmp
rorb
divb
push
frstor
mov
and
in
cmc
out
in
cli
fsubrl
in
cld
aam
push
cmp
push
or
and
dec
jnp
addr16
mov
push
bound
mov
or
and
inc
jne
and
push
cmp
pushf
inc
jle
fisttpll
cmp
andb
add
or
rcrb
and
adc
sub
in
add
aaa
fcoms
cs
aad
not
outsl
xor
mov
xchg
fucomi
cmpsl
inc
xor
push
add
ret
mov
fnstcw
loopne
mov
jl
mov
cmp
and
jb
dec
push
mov
sarb
or
and
and
out
push
mov
xchg
xchg
pusha
mov
dec
add
xchg
in
mov
fcompl
dec
mov
faddl
jnp
pop
mov
test
sub
lods
mov
dec
pop
lock
out
std
repz
icebp
ljmp
sub
or
rcr
xchg
sbb
mov
fiaddl
add
and
adc
pushf
imul
insb
sbb
mov
and
movsl
arpl
std
not
adc
in
les
mov
pop
outsl
aas
fsubl
sarl
daa
aas
clc
shll
pushf
arpl
sub
adc
in
lds
std
mov
out
movsl
out
mov
push
imul
cmp
lret
imul
mov
fdivrs
in
or
lahf
repnz
test
add
aaa
imul
int3
negl
sub
inc
push
aad
cmc
bound
or
sub
cs
or
inc
cmp
fildll
data16
pop
push
or
sub
mov
jb,pt
int3
jl
adc
xchg
and
icebp
and
or
push
sti
cmpsb
aad
mov
clc
sbb
add
xor
xchg
push
or
fdivs
or
lds
mov
dec
jge
ds
lds
jle
sub
mov
scas
sbb
pop
inc
sub
mov
les
mov
jp
lret
add
jo
xchg
pop
push
rolb
ss
dec
inc
mov
js
scas
call
imul
ds
addr16
ret
sbb
sbb
mov
or
pop
addr16
mov
cld
jle
sub
pop
pop
xchg
ret
mov
dec
pop
sti
fstpt
cwtl
outsb
xor
scas
jno
xor
daa
xor
mov
xor
rcl
mov
and
mov
adc
addb
mov
mov
pusha
js
jnp
out
mov
imulb
sbb
in
mov
mov
shrd
movzbl
and
mov
shr
andl
mov
xorl
mov
xor
add
jmp
pop
push
mov
mov
pop
adc
sub
fidivl
or
roll
sub
dec
fs
or
mov
call
jmp
or
jge
xchg
js
movsb
jge
rolb
testb
inc
xchg
data16
das
test
ljmp
mov
loopne
aam
pop
add
movsl
pop
pop
add
test
inc
add
mov
jmp
mov
adc
dec
arpl
add
out
mov
mov
loopne
dec
bound
lret
clc
xor
ljmp
cmp
mov
adc
jecxz
push
sbb
xor
mov
xchg
pusha
in
add
sub
cmpsl
fwait
fs
out
jl
scas
mov
jne
test
push
out
xchg
inc
fwait
pop
jae
cmp
pop
cli
inc
fldenv
sub
jo
iret
pop
mov
jmp
movsl
jge
adc
sub
cs
lods
sub
adc
sbbb
out
stos
in
jp
out
fisttpl
adc
dec
pop
enter
shrl
shlb
cli
iret
mov
adc
push
mov
sub
repnz
cmp
xor
sbb
mov
jae
jle
stos
fwait
lock
loopne
fwait
mov
negb
stos
xchg
jge
xchg
push
jbe
jge
mov
xor
mov
outsl
pop
into
aaa
mov
mov
es
xor
and
test
dec
dec
mov
mov
js
daa
push
lock
add
jl
lahf
inc
mov
imul
das
in
rorl
push
push
xchg
cmc
jg
les
test
loope
nop
mov
sarb
fwait
push
xchg
scas
mov
arpl
scas
sub
sub
rsqrtps
test
push
les
stc
xchg
pop
adc
pop
pop
push
insb
mov
fildll
mov
ljmp
lea
mov
fistps
testb
cmp
call
roll
dec
dec
cwtl
xor
inc
imul
je
sbbl
shlb
sbb
pop
pop
mov
sub
dec
imul
stos
or
fimuls
pop
mov
roll
je
aad
pop
and
pop
daa
inc
sbb
jg
mov
or
xchg
push
mov
pusha
rcr
cs
dec
add
add
lods
das
jle
std
mov
scas
or
jle,pn
add
dec
or
scas
cld
popa
cmpsl
jmp
les
mov
fsubrs
out
cmp
outsb
in
mov
sbb
and
repnz
xchg
lret
push
dec
push
scas
cmc
iret
movsb
ss
call
or
in
jp
leave
fldcw
movsb
xor
nop
pop
ret
push
pop
push
mov
inc
cs
jecxz
jbe
xorl
pop
adc
pop
div
pop
xchg
clc
or
inc
mov
enter
xchg
mov
dec
pop
stos
cmpsl
sub
or
push
xor
pop
push
dec
or
lods
out
mov
xchg
inc
adc
inc
add
and
fsubrl
xchg
cmp
xchg
add
mov
sarb
jno
sahf
or
ja
cmp
jb
fiaddl
push
add
cmp
mov
fst
outsl
lahf
mov
inc
cmp
jmp
loopne
cmp
mov
pop
add
xlat
or
movsl
pop
popa
inc
js
pop
aad
dec
sub
pusha
fcoms
xchg
sub
test
mov
mov
jge
test
sarb
sarb
std
lcall
imul
mov
push
xchg
lret
shl
daa
sub
xlat
aas
mov
or
mov
repnz
mov
cmc
push
sti
cld
es
out
cmpsb
cmp
push
pop
jge
outsl
dec
rcl
icebp
mov
das
divl
xor
rcrb
das
ret
mov
or
pop
mov
jl
push
cmp
sbbb
stos
pop
mov
jmp
push
ja
nop
lock
lods
adc
xor
pop
mov
repnz
xor
andl
lea
xchg
mov
inc
add
push
cmp
push
lcall
nop
pusha
test
mov
ja
dec
into
add
les
fnstcw
mov
shll
fimull
scas
cwtl
popa
jecxz
push
sbb
repz
cmp
les
inc
mov
sbb
xchg
and
mov
iret
mov
int
loope
adc
mov
inc
clc
lds
icebp
pop
push
fs
dec
dec
push
jp
repz
sbb
push
shrl
divb
loopne
loop
arpl
in
data16
push
popa
jp
mov
orl
arpl
push
pop
mov
fnstenv
shll
in
int3
adc
cmp
pop
ja
add
jnp
jns
xor
push
shl
xor
addl
or
sub
mov
mov
adcl
shrd
shr
andl
mov
cmpl
movzbl
movzwl
not
jmp
mov
movzbl
jb
call
sbbl
or
and
or
xor
add
mov
sub
xor
sub
orl
mov
mov
xor
xor
decl
or
jmp
add
ret
jge
pushf
xchg
mov
arpl
mov
scas
or
iret
add
or
and
mov
xchg
dec
xchg
fcompl
jp
fisubs
jb
in
push
cwtl
arpl
xacquire
mov
pop
and
xchg
jae
mov
rorb
or
cmp
xlat
fidivrs
dec
movsl
aas
cmp
cmp
cmpsb
pusha
ja
or
mov
mov
ret
jecxz
push
xor
sub
jno
jno
stc
loop
outsb
inc
sub
or
test
outsb
xchg
mov
imul
test
stos
add
nop
xchg
or
daa
adc
pop
pop
push
push
fldenv
inc
mov
aas
jne
int
sbbl
movsb
fdivs
fstpl
btr
pop
push
cwtl
jp
jl
jecxz
jmp
push
clc
mov
adc
fcoml
pop
ror
shr
nop
cli
xchg
add
mov
ret
mov
aaa
icebp
dec
orl
cmpsb
dec
stos
pop
or
mov
aas
lods
or
jae
pushf
ffreep
mov
fbstp
cmpsb
repnz
push
pop
fidivrl
aas
dec
hlt
xor
mov
add
movsl
pop
or
jae
add
push
out
orb
mov
repnz
dec
mov
out
addr16
xchg
mov
scas
lock
inc
ds
cmc
xchg
loope
sub
in
test
jno
insl
and
clc
jno
and
mov
pop
into
test
notb
lret
es
jge
pop
dec
loop
cs
xor
les
and
imul
adcb
jnp
pusha
in
mov
aas
fidivrs
test
or
xor
jns
gs
and
cmp
pop
stos
push
sub
or
test
es
imul
test
and
xchg
push
fsts
pop
inc
je
sti
lret
int3
jbe
dec
sti
cmp
and
adc
and
and
call
and
daa
mov
pusha
and
mov
jns
xchg
and
lret
xor
lret
dec
andb
or
lcall
and
ja
std
sub
test
cmp
enter
push
mov
pop
lods
jns
shll
jnp
mov
sub
pop
push
cmp
lea
dec
jne
push
mov
push
inc
jns
aaa
sbb
jecxz
and
push
addr16
js
movsb
xchg
sbb
jp
test
sub
out
cli
stc
cmp
fnsave
insl
jns
js
in
imul
js
pushf
dec
mov
inc
dec
pop
jge
inc
ljmp
stc
lds
dec
add
fidivl
push
pop
xorb
daa
or
adc
cmp
push
push
push
fdiv
xchg
push
mov
jmp
mov
mov
bound
hlt
in
jmp
data16
adc
mov
or
pushf
addr16
rclb
arpl
push
nop
loop
test
stos
fisttpl
jp
out
stc
xor
push
cmp
cli
out
mov
xorb
push
adc
sub
cs
movl
fcoml
fwait
int3
inc
push
enter
aad
mov
or
jbe
mov
xchg
jno
mov
js
test
xchg
mov
test
insl
xor
sbb
movsb
fnstenv
mov
and
popa
loop
pop
sbb
ljmp
dec
sbb
cs
xchg
mov
inc
cmpsb
aas
popa
jle
mov
xchg
rorb
aas
test
stos
ficomps
stc
mov
or
adc
and
sbb
or
shlb
or
fs
xchg
mov
xlat
sub
cmp
and
push
bound
pop
dec
sahf
movsl
fbld
scas
cmp
mov
inc
loope
dec
cmc
out
shr
cmp
lods
cmp
imul
mov
enter
sub
mov
add
pusha
inc
xor
jecxz
mov
mov
sbb
mov
inc
popf
jge
and
cmp
and
xchg
sub
cld
or
test
adc
add
cmp
and
or
rcll
jno
bound
cmp
sbb
push
sbb
sbb
mov
jge
jge
sbb
jmp
fildll
je
push
or
in
xchg
xchg
lds
fsubrs
push
mov
aas
pop
lahf
loope
icebp
and
xchg
jmp
mov
jae
movsb
or
push
xchg
imul
mov
push
mov
les
mov
cmc
popl
mov
ljmp
sbb
lods
mov
dec
push
sub
out
and
sarl
lock
adc
xchg
incb
jecxz
or
int
mov
scas
call
cmp
loope
subl
lea
xor
mov
mov
adcl
shrd
sbbl
shr
jmp
arpl
and
add
addr16
icebp
mov
or
add
or
cmpsb
loope
rcll
lahf
ret
cmp
push
test
insl
test
std
jo
adc
and
sub
xor
outsb
add
lret
pause
mov
shl
inc
fadd
gs
cmp
lods
push
loopne
jle,pt
repz
jns
and
push
jmp
lcall
and
cmp
sahf
lds
clc
sub
adc
cmp
cmp
in
adcb
in
pop
add
test
dec
nop
fwait
loop
daa
fwait
fwait
push
push
popf
ret
sub
icebp
jns
mov
pop
cmp
test
mov
or
int
in
scas
ret
ja
xor
inc
fwait
adc
jge
out
out
les
stc
incb
out
adc
push
mov
cmpsl
push
xlat
pop
adc
dec
jl
dec
sub
xor
mov
dec
aas
lret
mov
icebp
push
pop
xor
loopne
pop
aaa
mov
lret
or
inc
daa
outsl
mov
nop
cmpsb
das
hlt
aas
sarb
movsb
idivb
imul
enter
icebp
mul
and
mov
loopne
leave
inc
xor
cmp
sbb
dec
mov
stos
test
testb
and
and
fisttpll
inc
adc
dec
adc
scas
inc
lods
repnz
int
aas
call
repnz
inc
inc
pop
int
std
lcall
mov
jno
mov
cwtl
dec
jnp
push
mov
push
stos
inc
lods
mov
mov
xchg
dec
fisttpll
ss
mov
clc
and
inc
cmp
insl
inc
sti
stc
daa
push
pusha
stos
dec
filds
out
fs
adc
clc
add
jge
sub
mov
sbb
or
mov
insl
inc
stc
pop
cld
in
inc
movsl
scas
test
aas
jp
mov
outsb
jnp
mov
or
outsb
into
push
jno
rorl
repz
aam
xchg
cltd
pop
mov
add
divl
sbb
fmull
push
xor
ret
cmp
pop
dec
sub
mov
test
jno
mov
test
cmpxchg
outsb
or
sbb
frstor
ret
in
sbb
stos
xor
and
or
sbb
mov
jmp
sub
dec
test
or
jle
push
pop
pop
mov
out
negl
mov
cs
notl
jae
mov
repnz
and
jmp
loop
test
mull
dec
stos
jp
pop
ret
fiaddl
sbb
neg
mov
add
and
cmp
mov
cmpsl
cwtl
xchg
xchg
sbb
add
bound
lcall
and
cmp
xor
sarl
mov
sbb
mov
aam
outsl
enter
loope
ficomps
adc
cmc
xor
or
mov
in
test
call
ffree
data16
and
mov
imul
xchg
pushf
mov
call
je
xor
mov
and
sti
lahf
xor
mov
icebp
and
adc
sub
mov
test
mov
aaa
cld
push
fisubl
pop
sbb
scas
jp
jge
mov
inc
mov
inc
scas
aad
rcrb
push
mov
or
sbb
aam
das
push
or
sbb
push
lods
mov
xor
and
es
dec
or
loopne
flds
leave
mov
mov
js
sbb
pop
lcall
fidivl
add
insb
cli
dec
es
mov
jmp
scas
je
mov
cmp
cmp
into
ss
xchg
inc
dec
jns
loope
push
cmp
out
jo
mov
jp
ljmp
enter
loope
ret
mov
jb
sub
adc
mov
cmpsb
clc
xor
mov
jl
mov
iret
inc
push
das
inc
lds
mov
inc
fwait
aaa
mov
fsubrl
mov
cli
cmpsb
jb
lods
jnp
ss
xchg
stc
mov
outsb
and
xor
xor
pop
das
mov
pop
xor
mov
xor
xor
repz
jp
xchg
adc
sub
inc
shlb
gs
ds
mov
clc
jmp
jb
xor
popf
test
mov
lods
in
fldenv
daa
cli
push
imull
rolb
jmp
xlat
addb
jae
xchg
int3
xor
pop
pushf
popa
pop
fmuls
ja
imul
loop
and
rcrb
iret
sub
dec
data16
fisttpll
xchg
adc
scas
mov
sbb
xor
out
loopne
movsb
ljmp
orb
cmp
sahf
xchg
xor
dec
push
jnp
jae
loope
in
inc
xchg
je
stos
add
jo
sbb
cmp
outsl
cmp
mov
cmpsb
add
popa
icebp
rol
xor
xchg
test
shlb
adc
inc
in
cmp
add
add
add
sub
add
add
add
jbe
push
push
pushl
push
pushl
pushl
push
call
mov
mov
sbb
movl
sbbl
adc
mov
or
or
mov
sub
mov
xor
cmpl
mov
not
jmp
movl
movl
je
push
push
call
sub
not
movl
neg
and
movzbl
and
mov
sbbl
xor
adcl
jmp
pop
lea
or
xchg
dec
dec
mov
scas
dec
lahf
or
iret
add
or
sti
adc
adc
push
sahf
mov
cs
xchg
ret
bound
mov
testb
into
inc
test
sbbl
pop
fdivr
inc
xor
mov
and
add
mov
sub
data16
jecxz
inc
cmp
es
insl
jnp
es
or
addr16
test
pop
xchg
mov
loopne
fadds
add
jae
inc
out
xchg
test
mov
mov
out
add
leave
cwtl
test
push
push
cmp
add
sub
sub
sbb
and
push
inc
loop
sbb
movsl
push
pop
mov
fcoms
jecxz
pop
mov
or
dec
ror
dec
fdecstp
mov
or
outsb
out
mov
and
lea
addr16
sbb
nop
enter
pop
mov
mov
jmp
clc
push
out
cmp
add
cmp
icebp
add
inc
pop
outsl
sub
mov
call
insl
mov
outsb
jo
mov
lock
cmp
xor
es
movsl
mov
jns
shlb
faddl
push
push
or
popa
pop
xchg
fdivs
xchg
movsb
dec
les
adc
dec
loop
sbb
jb
lahf
rorl
mov
adc
fldenv
mov
jb
jno
bound
push
lods
movsb
sbb
xor
imul
outsl
xchg
inc
push
imull
pop
rdrand
pop
loope
jmp
dec
int
repnz
outsl
pop
jno
xchg
sti
imul
lods
repnz
inc
inc
sbb
mov
push
std
into
xor
xchg
cld
lahf
add
flds
mov
and
jbe
cli
adc
or
aas
xchg
jo
icebp
mov
popf
jl
shr
adc
xchg
mov
pop
and
roll
pop
jle
xchg
xchg
mov
dec
and
std
mov
dec
pop
cli
shlb
sbbb
jbe
xchg
adc
cmp
lret
cltd
sub
lret
arpl
sarb
enter
lahf
cltd
sbb
gs
in
arpl
sub
and
inc
lret
add
shl
enter
adc
add
push
popf
les
daa
or
leave
loop
and
push
lods
inc
lods
lret
inc
sub
rol
incb
in
mov
adc
pop
imulb
repz
popl
mov
add
movsb
lods
xchg
or
mov
cmp
dec
in
mov
out
adc
nop
aad
repz
jne
push
cltd
cmpsl
enter
aas
lcall
outsb
aas
jb
sbb
scas
fucom
cltd
jge
pop
inc
cmp
fidivs
arpl
fistpl
outsb
adc
xor
pop
dec
or
add
xchg
dec
or
fnstsw
mov
dec
sub
dec
ret
lock
jns
out
dec
imul
dec
mov
push
cmc
inc
fldt
in
mov
gs
sahf
ja
daa
or
adc
subl
mov
sub
push
lahf
aam
pop
adc
add
pop
mov
shrb
jbe
incl
incb
dec
mov
aam
adc
xchg
out
mov
rcl
or
jl
sub
pushf
jecxz
pop
ja
inc
sti
js
or
repz
nop
jnp
shrb
and
rol
cs
inc
std
int
pop
ret
imul
inc
bound
jns
lock
cs
and
movswl
dec
ret
mov
inc
xchg
jmp
jnp
cmp
jns
mov
lock
sub
push
push
cmc
imulb
outsb
gs
push
xchg
imul
ret
pushf
stc
add
xchg
iret
js
pop
add
cmpsl
jp
stc
mov
or
xor
add
je
inc
enter
jb
lret
sub
popf
mov
lea
add
inc
push
fistl
mov
dec
jecxz
stos
and
lods
in
mov
dec
cmp
addr16
lret
data16
push
add
pop
sarl
lods
xchg
xor
jmp
cmp
lds
sbb
lock
mov
sub
jae
mov
mov
and
xor
out
dec
dec
sub
xchg
cli
ljmp
ficoml
push
cmp
popa
popa
pusha
js
jne
jae
sbb
lret
sub
inc
sub
cltd
sbb
or
jae
stos
sub
lret
nop
add
cmp
or
mov
and
stos
jle
xor
aam
lret
sbb
and
and
shrl
leave
mov
sbb
jbe
int
adc
out
or
roll
insb
nop
or
sti
sub
mov
push
das
xor
imul
in
repnz
add
cmp
adc
xlat
nop
nop
mov
xlat
push
xor
jb
icebp
dec
ja
adc
ja
and
loopne
repz
imul
push
push
add
inc
in
adc
pop
pop
add
shl
imul
cmpl
mov
mov
mov
jmp
movl
jne
pushl
call
and
sub
or
or
xor
mov
and
mov
mov
shrd
sbbl
mov
mov
andl
xor
shr
jmp
mov
adc
and
mov
iret
add
or
add
sub
or
mov
std
loope
jb
sbb
jmp
loopne
in
push
lea
mov
inc
jge
dec
cmc
dec
mov
imul
call
fisubs
push
jmp
jecxz
cmp
sbb
cli
inc
rorl
push
ljmp
addr16
mov
or
addr16
fisttpl
cmp
aad
xchg
and
mov
popa
pop
jo
int3
or
enter
xchg
es
mov
outsb
lods
xorb
int
addr16
cmpsb
mov
shr
xchg
aas
inc
dec
shr
in
call
insb
gs
outsl
cmpb
into
scas
mov
xor
lds
xor
aaa
icebp
fidivrl
xchg
mov
adc
cmp
test
insb
adc
scas
or
pop
jno
push
stos
jg
sbb
and
pushf
ret
adc
je
lret
push
mov
xchg
mov
mov
xchg
stc
sbb
lds
lds
in
popf
inc
mov
movsl
or
mov
nop
add
cmp
cmp
xor
aad
or
fcmovnb
cmp
xchg
xchg
mov
adc
shrb
cs
lret
push
in
outsl
gs
xchg
inc
aad
leave
fldenv
lahf
cltd
das
or
jmp
lock
push
mov
and
mov
dec
stc
add
vmovupd
ljmp
sbb
fistl
adc
mov
mov
scas
addl
cwtl
cmp
push
mov
ljmp
sar
cmp
outsb
je
mov
arpl
inc
xchg
mov
in
adc
jne
pop
mov
pop
andb
and
pop
add
pop
sub
nop
jae
push
push
push
cmp
cmp
mov
gs
repnz
jnp
adcb
fdivs
lret
adc
sub
shlb
jnp
cmpsl
into
mov
cmp
adc
leave
mov
adc
js
mov
mov
imul
mov
jecxz
dec
pop
inc
inc
into
nop
push
in
pop
incl
jnp
push
adc
or
xor
add
test
ret
push
popf
outsl
aaa
and
bound
inc
insl
lods
dec
xor
cli
dec
shl
mov
lea
stos
scas
rorb
call
sti
jnp
mull
ds
clc
js
gs
ds
lret
push
scas
pusha
adc
pusha
hlt
xor
rcrl
mov
pop
push
pop
sbb
and
xchg
test
push
cmp
test
pop
and
decb
mov
adc
or
add
les
push
xor
or
cli
lds
dec
lret
daa
cld
pushf
in
and
mov
in
push
sub
mov
cmp
repz
loopne
and
lock
pop
ja
es
inc
or
or
fwait
mull
mov
sti
mov
in
pushf
bound
or
popa
jecxz
pop
cmpsl
xchg
ret
popf
stc
cmpsb
jmp
sbb
je
xor
and
push
inc
aad
push
mov
les
loope
sbb
push
jp
loopne
cmpl
jmp
push
in
imul
hlt
aas
test
fdiv
sbb
shlb
pop
and
dec
int
xor
or
mov
inc
push
cli
and
jnp
out
mov
inc
lret
into
das
cmp
dec
in
jmp
sub
or
js
or
jg
xor
loope
xor
lahf
mov
cmpsb
orl
movsl
addr16
or
jp
jmp
call
inc
icebp
mov
mov
es
add
mov
jae
cmpsl
xchg
mov
arpl
aam
xor
or
cld
dec
adc
mov
cwtl
ficompl
lods
repnz
lret
clc
jno
shlb
push
xor
insb
mov
push
jg
push
mov
insl
or
test
xchg
push
mov
push
and
arpl
or
push
jmp
push
cmp
add
sbb
push
fcomps
push
pop
push
dec
adc
jp
jne
push
pop
dec
or
fsubr
repz
ja
lock
adc
xor
adc
icebp
sub
add
mov
xlat
mov
mov
ret
fistl
fcomp
addb
pop
or
mov
push
repz
and
das
jns
loopne
pushf
rol
adcl
test
lret
aas
jp
shl
cmp
mov
adc
jae
test
int3
cmpsb
mov
jmp
sbb
mov
push
loop
jecxz
out
mov
add
clc
cmpsl
aaa
cltd
inc
sbb
push
and
and
rclb
and
loope
dec
sub
jbe
mov
in
dec
sub
jmp
stc
adc
sahf
outsl
add
sub
mov
enter
mov
xor
pop
jp
xor
mov
mov
add
adc
mov
adc
mov
adcl
xor
andl
or
shl
addl
sub
mov
movl
jmp
cli
and
and
and
adc
ret
mov
fisubs
or
add
or
scas
loope
imul
int3
jae
insl
cwtl
enter
insb
inc
push
pop
cld
lock
je
dec
push
push
or
subl
xor
bnd
mov
mov
scas
mov
cmp
xor
sub
popa
lcall
push
movl
adc
dec
pushl
mov
mov
mov
scas
es
xchg
leave
sub
movsl
mov
sti
fs
add
cwtl
outsb
scas
and
std
inc
xchg
mov
and
sub
pop
push
cmp
insb
cltd
test
cmp
test
incb
insl
sbb
fnstsw
xchg
sahf
pop
xchg
mov
xchg
sti
aas
out
test
mov
fisubs
dec
cmp
mov
push
cmp
dec
fistpl
pop
leave
xchg
fcmovnbe
ficomps
xchg
add
rcrb
cmc
xlat
jo
sbb
inc
out
inc
mov
popf
and
dec
mov
mov
leave
adc
enter
scas
decb
adc
popa
sbb
imul
outsb
and
mov
lcall
mov
mov
pushf
movsb
jb
shll
movsl
inc
fwait
jns
jnp
or
ficoml
add
add
jge
and
pop
mov
mov
adc
mov
jg
inc
fnstsw
jmp
push
pop
fs
mov
outsl
pushf
dec
push
lea
jl
enter
dec
inc
pop
adc
int3
testb
mov
or
imul
adc
push
add
je
adc
jo
push
push
je
adc
push
jnp
fcoml
lret
andb
inc
xor
enter
dec
repz
sub
ret
divb
mov
mov
sub
shrb
jo
in
adc
icebp
add
sti
loopne
pop
dec
outsb
lahf
mov
inc
mov
mov
mull
je
loop
dec
sahf
inc
mov
daa
or
testl
cmp
inc
cmpsb
push
xor
clc
add
mov
cmpsb
push
ret
scas
push
notb
xchg
dec
cmp
mov
pop
int3
mov
xchg
outsb
sub
mov
cmc
and
testb
negl
pop
and
inc
in
push
enter
jns
jp
imul
cmp
jecxz
popa
in
xchg
xor
shrl
sub
push
and
in
push
js
jbe
mov
cltd
dec
mov
push
test
aaa
add
ret
imul
sahf
xchg
jno
lahf
xor
adc
mov
jg
call
ljmp
cmp
imulb
mov
or
mov
push
or
jae
popa
adc
outsl
mov
repz
jecxz
sbb
or
call
pop
fldenv
inc
jbe
xor
or
gs
loop
inc
add
lods
cld
xchg
lret
cmp
mov
and
dec
push
arpl
aas
popf
push
adc
and
shll
daa
jecxz
shll
and
outsl
and
push
pop
in
jae
andb
das
xchg
sarb
and
lock
cli
ja
popa
jmp
lahf
pop
daa
push
fisubs
jp
je
imul
cmp
adcl
iret
ret
dec
push
jp
jl
rcr
or
mov
sbb
ret
in
testl
f2xm1
je
stc
and
lds
jl
pop
jg
into
popf
cmp
jmp
iret
lea
ja
push
loopne
add
cmovb
add
lods
out
int
scas
xchg
dec
sub
in
mov
lods
mov
sub
inc
cmp
fisttpll
xchg
adc
clc
xchg
popa
repnz
dec
fcomi
xchg
aam
mov
lock
sbb
aaa
flds
cmp
lods
fnsave
xchg
fwait
into
lds
ror
pop
nop
cltd
xchg
ljmp
xor
push
cs
dec
fs
imul
xor
xchg
pop
js
loop
pop
pop
lret
mov
mov
or
add
pushf
jge
mov
hlt
loopne
xorl
dec
icebp
xchg
sbb
xchg
inc
mov
sub
decb
popf
adc
repz
and
lret
clc
cld
or
inc
popf
std
and
loopne
add
pushf
stos
inc
lea
ss
xchg
inc
dec
cmp
and
icebp
add
ds
push
push
ret
pop
loope
mov
sbb
cmp
and
xchg
popf
sbb
cmp
addr16
inc
in
adc
loopne
int3
mov
mov
into
sti
and
movsb
out
xchg
mov
je
lds
pop
roll
leave
xorb
ret
ds
cmpsl
rcrl
loop
daa
icebp
andl
add
sbb
jg
mov
xchg
xchg
push
lods
out
gs
loop
add
xchg
jl
adc
xor
gs
das
jns
push
rorl
pop
xor
gs
or
or
inc
or
mov
shrd
orl
mov
mov
xor
shl
xor
movl
or
adcl
shr
cmpl
mov
movl
jmp
movl
movl
jg
push
push
call
andl
sbb
xor
sub
sub
adc
mov
sub
mov
xor
mov
cmpl
mov
movl
mov
jmp
movl
movl
jg
pushl
push
push
call
sub
mov
sbb
mov
adc
and
mov
sbb
dec
or
mov
jmp
test
aaa
push
insb
add
cmp
add
or
int3
adc
popl
cmp
jmp
sub
or
pushf
push
scas
or
lahf
xor
cmp
sub
dec
mov
xchg
xchg
xor
test
push
pop
push
jl
inc
or
inc
mov
cmp
mov
add
arpl
pop
hlt
addb
mov
jo
aaa
push
ja
push
inc
jl
das
sub
mov
mov
push
leave
fnstcw
mov
cmp
ror
dec
je
xor
je
cmp
cmp
lea
or
cmp
pslld
inc
das
mov
stc
inc
or
xchg
mov
sar
xor
or
dec
mov
dec
test
ljmp
std
cmp
add
out
jno
ret
and
fidivs
ljmp
inc
scas
mov
xor
pop
or
lret
popa
jnp
sub
sahf
sbb
jnp
scas
adc
pop
dec
push
sub
sbb
movsl
inc
jo
movsl
xor
out
insl
mov
pop
jbe
adc
into
jp
fcompl
adc
adc
cmpsb
mov
push
es
sbb
adc
cmpsl
pop
iret
xchg
js
gs
out
dec
std
jecxz
sub
jmp
out
adc
mov
push
xor
jno
inc
test
adc
sbb
adc
inc
push
jg
popa
mov
inc
mov
out
shr
dec
cmpsl
pop
lret
aad
fwait
leave
inc
in
xchg
dec
jo
jp
stos
in
push
cmp
movsl
or
xor
test
shll
sub
xor
inc
cmovnp
push
jno
sbb
jno
sub
add
adc
and
xchg
into
jnp
rolb
pop
pop
jns
arpl
pop
dec
out
xchg
pop
mov
sub
adc
fildl
out
xor
push
insl
xchg
incb
push
xorl
rcrl
mov
hlt
movsl
fadds
mov
out
js
mov
jae
add
xchg
cmp
sarb
fmuls
push
call
push
xchg
mov
aas
bound
in
ja
les
dec
into
lods
sbb
jmp
enter
loop
cli
sbb
mov
aas
xor
jno
stos
pop
sub
ja
gs
inc
rolb
sub
test
mov
mov
cld
push
cmc
xor
in
loopne
xor
pushf
sahf
adc
loope
shlb
adc
mov
out
out
mov
push
mov
add
xor
lods
in
bound
in
mov
inc
and
mov
je
and
lret
dec
add
stc
aad
lahf
sub
cs
mov
lcall
sub
pop
int3
lds
sbb
ljmp
cwtl
jp
mov
mov
popa
aas
mov
mov
xchg
shlb
ja
mov
imul
popf
imul
cmpsl
stos
push
push
orl
or
fcmovb
jno
incl
mov
roll
xchg
int3
pop
add
adc
mov
inc
sub
daa
mov
or
cmpsb
inc
xchg
pop
mov
inc
adc
outsb
scas
sbb
testb
jo
jno
mov
cmp
lea
test
or
les
jp
aaa
cmpsl
inc
push
inc
cs
xlat
in
test
pop
xchg
sbb
sbb
or
scas
hlt
push
mov
inc
jmp
jle
and
fcomip
sti
insl
or
jg
lret
pop
sbb
adc
mov
fwait
mov
popa
scas
mov
movsl
inc
adcb
cmp
lock
stos
fwait
xchg
push
or
xor
repz
jp
data16
xchg
popa
imul
inc
jge
mov
test
movsl
xchg
movsb
leave
scas
pop
aas
adc
mov
imul
cltd
adc
jmp
mov
scas
loope
leave
adc
jns
push
insl
fdivrl
in
aam
pop
jnp
shlb
movsl
addr16
stos
inc
aad
xchg
loopne
cmp
xor
push
sub
sarl
aad
dec
cmp
sbb
sbb
jp
jno
push
cld
fcmovnu
push
jo
pop
sahf
repnz
sub
cmpsb
push
loop
loopne
dec
addr16
scas
je
repz
out
push
cwtl
cmp
pop
fbld
xchg
lods
mov
int3
mov
or
insb
add
data16
ret
jno
inc
outsl
test
cltd
or
or
pushf
pop
add
xchg
inc
aad
dec
mov
sub
les
or
jb
cltd
pop
into
je
cmp
xchg
and
out
adc
insb
cli
addl
out
stos
in
xor
jecxz
insb
sbbb
dec
gs
or
clc
pop
and
dec
xchg
mulb
xor
dec
das
movsl
lret
testb
mov
add
mov
int
lods
roll
andl
shr
mov
adc
mov
xorl
mov
xorl
mov
subl
jmp
sbb
daa
sbb
cmpsl
fs
addr16
bound
or
add
or
cmc
adc
gs
scas
pop
stos
insl
inc
lret
inc
inc
mov
adc
repz
popf
pop
mov
dec
dec
cs
addr16
add
daa
push
dec
fs
loopne
cmpsl
or
jno
aaa
mov
ja
xchg
push
inc
push
adc
mov
jg
in
gs
js
into
popa
sbb
movsb
je
dec
mov
stos
repnz
lock
jmp
sti
xchg
sahf
or
insb
in
sub
xchg
cld
sbb
inc
ljmp
subb
lock
lods
lcall
int
mov
cli
out
dec
xlat
fildll
and
push
sub
mov
push
int3
gs
sub
cmp
ret
loope
in
hlt
jno
mov
fs
fadds
test
jbe
movb
das
sbb
into
daa
adc
adc
ficompl
xor
adc
lods
int3
jmp
pop
inc
add
mov
add
jae
lret
jecxz
sub
jbe
jae
leave
in
and
mov
mov
sub
mov
sbbb
xor
jmp
loop
subl
or
bound
mov
fidivl
xchg
loop
pop
shrl
xor
scas
mov
jp
dec
cmpb
pushf
out
sbbb
in
pop
ret
sbb
mov
cmpsb
icebp
aad
imul
jno
orl
cmpl
sub
mov
and
insb
cmp
ss
lret
jecxz
rcl
add
sbb
imul
xor
arpl
add
pop
xchg
shlb
icebp
dec
push
sbb
mov
vmulpd
mov
outsl
push
dec
or
pop
mov
cltd
call
scas
pop
cs
adc
xchg
fwait
xlat
cmp
shll
xchg
pop
dec
pop
int
pop
sbb
rcrb
fldl
in
cltd
push
xor
ja
cmp
sub
cmp
inc
push
fsubl
in
or
imul
dec
push
push
lock
rorl
jno
std
in
fdivp
push
out
add
mov
mov
subb
aam
dec
add
lea
sub
lods
addl
sbb
pushf
aas
insl
stos
cmp
jne
outsb
adc
mov
sti
std
jmp
in
xlat
fidivrl
cwtl
xchg
sbb
xchg
jns
push
dec
int3
jmp
inc
fcmovnbe
cmp
sbb
mov
cmp
mov
test
mov
xchg
push
adc
push
lds
or
das
sub
fs
jne
mov
pop
inc
xchg
and
mov
aaa
rorl
mov
iret
sbb
testb
push
jmp
cmpsl
fdivl
in
push
mov
subb
scas
shlb
lods
ret
mov
lea
dec
or
roll
lods
jb
aam
mov
daa
pusha
adc
fdivs
jno
adc
xchg
cmp
in
insb
push
popf
jno
mov
fldcw
scas
loop
int3
jno
push
inc
hlt
ljmp
adc
xor
test
and
push
inc
xchg
fistps
add
inc
es
nop
aam
jp
jp
mov
cmp
mov
daa
sub
popf
addr16
cs
sub
push
enter
movsl
mov
fidivl
popf
cltd
adc
es
roll
pop
jnp
inc
lret
stos
fldl
in
rclb
pop
sbb
out
dec
inc
mov
cmpsl
pop
cli
add
repnz
das
mov
jmp
fildl
inc
dec
fistpl
call
imul
ror
jbe
std
shll
and
xchg
xchg
pop
popf
add
mov
jl
js
push
imul
xchg
test
and
jne
and
xchg
jbe
pop
mov
jle
test
dec
ljmp
adc
mov
mov
hlt
push
xchg
cmp
cmpsl
outsb
fsubl
rorl
mov
xchg
lea
call
stc
xor
pop
adc
xor
lock
mov
push
add
sub
arpl
mov
pop
insl
push
push
bound
xor
lds
mov
aad
fisubs
inc
je
gs
jnp
ret
jae
add
xor
dec
sbb
imul
dec
leave
pop
sbb
sbb
mov
mov
in
imul
xor
in
inc
in
and
call
les
xchg
mov
xor
pushf
and
les
dec
and
fwait
aad
adc
sti
adc
sub
mov
out
leave
sub
lret
cmp
lea
fidivrl
sbbb
adc
add
dec
push
xor
jno
loop
loop
mov
fmul
xchg
daa
or
test
in
pop
xor
xorl
xor
or
shl
adcl
imul
sub
movl
jmp
mov
add
mov
shrd
orl
mov
mov
addl
xor
shl
xorl
xor
xorl
or
shr
mov
mov
mov
cmpl
mov
movzbl
jmp
movl
jle
pushl
push
push
call
sbbl
or
sbb
orl
sbbl
mov
sub
mov
mov
xor
add
mov
shrd
shr
and
mov
cmpl
movl
mov
jmp
movl
movl
jg
pushl
push
call
and
sbb
xor
add
xor
add
sub
or
add
sub
xor
or
add
mov
xorl
mov
add
mov
sub
mov
andl
xor
orl
xor
or
shl
add
sub
add
movzbl
sbb
mov
xor
add
mov
sub
and
mov
cmpl
mov
movl
jmp
movl
jg
push
push
pushl
pushl
call
adc
sbb
sbb
xor
xorl
mov
sub
mov
and
cmpl
movl
mov
mov
mov
jmp
movl
movl
jge
pushl
pushl
call
orl
sub
adc
sub
andl
addl
shrd
cmpl
mov
movl
movl
jmp
mov
ja
pushl
push
call
movzbl
sub
mov
orl
and
add
and
mov
xor
adc
and
shr
mov
mov
orl
xor
xorl
shl
cmpl
movl
movl
jmp
movl
movl
jb
push
push
pushl
call
sbb
not
add
andl
incl
adcl
xor
or
mov
or
movl
mov
cmpl
mov
not
jmp
mov
jbe
pushl
pushl
push
call
mov
sbb
dec
xorl
xor
sbb
add
mov
cmpl
mov
mov
mov
jmp
movl
mov
jg
pushl
pushl
push
push
pushl
push
call
not
or
and
mov
mov
sub
sub
movl
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
jmp
push
loop
inc
pop
inc
sbb
jae
jmp
or
iret
add
or
outsb
sub
jb
lahf
push
mov
cmp
dec
sub
cs
subb
xor
jae
dec
push
leave
mov
fwait
in
inc
aaa
sbb
sbb
dec
movsl
jb
iret
clc
fiadds
test
gs
jne
fnsave
sub
fcoml
add
lods
shlb
sbb
sti
rolb
bound
movsb
cmp
cmc
loop
xor
nop
sub
js
push
add
ja
mov
out
repz
js
cmp
jb
add
sub
fdiv
push
in
add
push
movsl
cmp
test
inc
xchg
ljmp
sbb
scas
mov
rcrb
insb
int
jo
repnz
fnsave
jmp
push
xchg
sbb
mov
mov
pop
sbb
inc
or
bnd
ret
arpl
jl,pt
and
sub
out
lds
aas
les
adc
in
add
and
mov
mov
xor
pop
imul
sahf
pop
clc
xchg
sbb
rcll
roll
adc
jnp
les
test
jno
out
insl
and
mov
mov
jl
mov
mov
sub
lret
pop
imul
dec
push
lret
pop
push
sub
inc
in
shlb
mov
sbb
dec
pop
and
and
sub
cmpsb
cld
hlt
inc
add
call
pop
jle
inc
cmpsb
fstps
je
out
sbbl
cmpsl
xchg
hlt
cs
xchg
xchg
gs
out
fwait
leave
rcl
xor
mov
cmp
leave
out
outsl
rolb
xor
stos
in
cmpsl
pop
stos
stc
js
movsb
clc
xchg
pop
std
in
add
pop
leave
sub
in
bound
jmp
das
js
mov
cmp
lods
jp
sbb
test
cmc
xchg
xchg
nop
xor
cmp
mov
es
int
lcall
adc
mov
filds
adc
push
sbb
xchg
inc
aas
add
nop
cltd
cmpsl
and
test
repnz
lods
aaa
mov
xchg
push
mov
jb
push
lea
mov
sarb
out
dec
add
imul
sub
fdivrs
out
int
cmpxchg
outsb
daa
add
push
cmpsb
or
dec
and
jle
pop
cmp
jg
in
push
lahf
js
ljmp
cmp
cmpsl
and
cmp
jbe
jmp
and
cld
jge
mov
cltd
xlat
sti
add
repz
lea
ds
add
cmp
ret
loopne
jle
jnp
xchg
mov
adc
enter
push
and
repnz
fsubs
sub
daa
jb
jecxz
test
pop
jbe
push
leave
cmp
sub
xchg
pop
mov
sub
mov
mov
jae
cmp
movsb
fstps
addps
xor
adc
mov
mov
fstl
pop
stos
push
mov
mov
das
add
jbe
pusha
outsl
push
and
insl
and
cmp
out
ficomps
sbb
adc
jg
mov
inc
pop
sub
jae
clc
sub
mov
adc
les
cmc
mov
xor
mov
call
cmp
mov
std
nop
cwtl
movsb
mov
inc
mov
mov
insl
mov
jg
cs
fnstsw
xchg
jns
shlb
inc
xlat
shrb
jp
and
fidivl
and
lock
je
xchg
divl
pop
repnz
adc
pop
lret
aaa
fbstp
cs
push
lods
lahf
cli
jge
mov
mov
mov
and
adc
dec
das
call
jae
pop
andl
jl
pop
dec
loop
cld
push
and
roll
int
add
push
std
mov
sbbl
ljmp
ljmp
in
pop
cmp
inc
dec
ds
sub
cmp
stos
stc
inc
mov
sar
inc
adc
outsb
mov
dec
mov
and
mov
rcl
dec
or
mov
aam
outsl
sbb
pushf
and
imul
cmpsb
mov
mov
add
aaa
mov
int3
xor
xlat
jno
dec
sti
inc
push
adc
rcr
shlb
jbe
xchg
loopne
pop
insb
pop
jne
int
push
icebp
lods
mov
mov
push
push
loope
movsb
scas
scas
push
mov
jle
fidivl
push
sub
add
test
cmpsl
mov
xchg
movsl
adc
lret
cmpl
imul
sub
dec
fcmovu
adc
int3
mov
lret
roll
jb
aam
push
fsubl
push
jp
gs
subl
pop
test
repz
call
insl
in
jecxz
sahf
stc
lret
out
pop
dec
sbb
add
in
repnz
xchg
jo
je
fucomip
cld
jp
and
pop
sub
jge
nop
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
jmp
lods
loop
repz
cld
insl
cmpsl
lahf
leave
clc
popa
outsl
pop
or
iret
add
or
icebp
pop
sub
scas
cmp
leave
test
stc
jns
loopne
insb
mov
pop
mov
cmp
mov
push
push
sub
sub
subl
hlt
aaa
xor
xchg
mov
mov
xchg
adcl
or
push
sbb
lods
pop
insb
mov
or
in
lret
sub
xchg
dec
mov
mov
cmpsb
aam
or
or
sub
enter
mov
fstp
sbb
jno
shlb
and
out
sub
mov
stos
dec
je
jae
jae
push
fwait
add
std
vcvtpd2psy
jb
int
shrl
div
imul
rolb
icebp
fsubl
push
aad
call
jns
dec
jno
push
pop
mov
call
xchg
mov
fimull
lds
repz
xor
mov
mov
arpl
add
cli
mov
mov
or
pop
cmc
jg
push
decl
jge
in
push
lcall
push
call
into
in
aad
sbb
mov
call
mov
das
loop
add
cmpsb
or
outsb
push
imul
stc
or
dec
mov
fwait
fwait
lcall
in
sarb
cwtl
xchg
ss
sbb
rolb
push
fwait
mov
arpl
cld
out
add
cs
cli
leave
clc
test
or
mov
loopne
mov
in
sbb
shll
pop
decb
int3
cmpsb
mov
pushf
popa
fists
addr16
jmp
lahf
lret
mov
jl
push
xor
pop
dec
sbb
cld
mov
pop
mov
es
bound
jne
in
shlb
pop
pop
push
aaa
xchg
mov
dec
mov
test
shrb
sbb
sub
negb
ljmp
dec
add
outsb
cmp
mov
ficomps
cmp
out
or
xchg
rorl
cmp
push
mov
sbb
test
cmpsb
xchg
negb
inc
mov
mov
imull
out
dec
sahf
adc
push
cmc
jmp
or
and
adc
push
xchg
popa
sbb
push
inc
or
cmc
enter
inc
stos
xor
and
mov
leave
add
pop
inc
and
add
int3
xor
jp
push
pop
cmp
test
mov
js
gs
stc
push
outsb
xorb
lods
push
bound
jmp
jnp
adcl
scas
shr
mov
jnp
js
xchg
push
sbb
les
mov
rcr
xor
mov
cmp
iret
inc
xchg
scas
aad
cltd
dec
fdivrp
and
jb
stc
push
jmp
and
push
lahf
lcall
sbb
mov
movsl
lods
push
shll
add
enter
mov
push
mov
idivb
mov
les
cmc
jl
jne
lret
lea
push
mov
adc
shr
leave
loope
and
arpl
pusha
test
sub
imul
sbb
mov
push
jle
adc
lods
arpl
lahf
mov
aas
testb
mov
in
bts
and
inc
imul
sbb
mov
adc
pop
pop
shlb
or
lcall
pop
cmp
jne
push
push
and
mov
mov
mov
mov
fbld
fwait
push
push
mov
pop
xchg
sbb
xchg
imul
loope
push
cmp
clc
dec
pop
ljmp
xorl
ret
int3
loop
adc
rcrb
dec
mov
and
outsl
rclb
sbb
and
pushf
stos
push
mov
jle
mov
jecxz
jns
and
int3
xchg
loope
push
pop
cmp
lds
jecxz
sarl
hlt
bound
add
and
push
sub
jno
adc
lret
pop
mov
cwtl
std
shrl
faddp
sbb
xor
jb
dec
js
push
inc
hlt
lea
inc
add
daa
rcll
mov
mov
scas
cmpsb
inc
push
cmp
popa
or
or
aad
ret
adc
push
aas
lock
and
in
test
lret
adc
mov
stos
les
sti
adc
or
mov
mov
icebp
out
xchg
jo
pop
iret
stc
cmp
imul
jge
mov
loop
lock
and
in
add
dec
or
and
fisubrl
push
lret
lcall
insb
mov
sbb
pop
push
pop
adc
jne
mov
pop
imul
daa
nop
xchg
call
mov
adc
push
push
int3
xor
lods
dec
in
and
mov
xchg
fwait
jns
call
mov
mov
sahf
xor
jge
mov
or
jmp
mov
xorb
xchg
pop
adcb
xchg
mov
inc
or
iret
add
or
outsl
sbb
daa
scas
adc
in
jp
sbb
xchg
jae
ss
lret
dec
dec
ja
push
out
adc
arpl
lods
mov
mov
adc
idivl
and
lret
and
inc
sub
and
jne
inc
mov
inc
dec
decl
adc
jl
sbb
cmp
lds
movsl
and
sarl
pushf
jecxz
inc
js
nop
ljmp
dec
sbb
cmpsb
and
add
inc
mov
push
je
xlat
mov
mov
out
outsl
mov
imul
rcrl
push
sbb
xchg
sarb
sbb
mov
bound
adc
xchg
lcall
testb
and
sub
push
movsl
mov
dec
popa
test
sbb
xor
orb
pusha
adc
dec
jnp
in
sub
mov
cmpsb
mov
loope
xchg
mov
shrl
mov
test
in
int
mov
stos
or
fmull
jns
xchg
and
push
fists
inc
into
stos
je
dec
mov
jmp
push
sahf
mov
mov
les
lahf
cli
in
mov
int3
dec
push
sbb
xlat
leave
out
ja
inc
mov
aad
pop
push
test
and
push
cwtl
rcrb
mov
ja
pop
je
push
nop
pop
gs
xchg
outsl
mov
out
or
fwait
or
mov
mov
mov
pop
or
lock
or
push
cmpsl
movsl
mov
aam
mov
out
leave
movl
push
les
cmp
inc
push
fstpl
and
mov
and
xchg
aam
or
daa
xchg
call
arpl
cmp
popf
add
inc
mov
dec
xor
icebp
adc
cmp
xor
mov
push
mov
cmpsb
insl
push
out
dec
cmp
cmc
sahf
in
push
sbb
pusha
cmp
stc
rclb
lcall
pop
mov
push
cmc
xchg
andl
rcr
addr16
and
cmpsb
test
scas
jp
subl
jns
cmp
test
stos
adc
in
mov
adc
aad
xchg
stos
jge
bnd
lcall
popa
mov
loopne
int3
arpl
mov
mov
mov
or
pop
jnp
ret
mov
cli
inc
test
pop
pop
leave
inc
xor
aas
loopne
add
lock
fbld
cmc
inc
jnp
scas
and
sub
jae
and
cmp
jle
jb
xchg
js
mov
dec
sbb
nop
clc
in
pusha
push
mov
ret
jbe
popf
outsl
jb
test
fnstsw
cmpsb
mov
incl
sbb
adc
movsl
cmp
and
out
sbb
call
cs
mov
bound
xor
jb
test
fmull
test
gs
push
xor
in
sub
inc
jmp
mov
sub
imul
sub
incl
rorb
lahf
jb
inc
scas
in
enter
or
ljmp
addr16
negb
iret
jbe
notl
cmp
test
mov
insl
inc
cmp
int3
ja
shlb
out
in
clc
and
xor
mov
add
jne
push
out
loop
scas
cmp
rorb
adc
lods
leave
outsb
ret
das
inc
in
f2xm1
mov
xchg
iret
sarb
cld
cs
sbb
lret
aam
xchg
mov
ljmp
out
lahf
lret
sti
ljmp
push
ljmp
shlb
push
mov
inc
repnz
xchg
jno
sbb
scas
insb
gs
pop
out
adc
xchg
mov
jge
fdivrs
xor
aaa
fwait
int
push
imulb
aad
mov
add
jb
mull
adc
test
dec
adc
mov
jle
cmp
jp
jmp
push
orb
mov
fdivl
cmp
sub
mov
and
call
clc
out
jbe
adc
push
and
outsl
popf
or
adc
push
xchg
cmp
orl
mov
cwtl
movsb
xchg
stos
repnz
out
rcrl
or
xor
mov
push
arpl
outsb
jecxz
push
enter
mov
pusha
or
xor
les
fucomp
xorb
movsl
mov
ja
jbe
inc
adc
xchg
pop
pop
add
mov
ds
mov
jne
fwait
mov
test
js
jo
adc
insb
add
scas
stc
stos
inc
clc
fnstenv
cmpsb
pusha
inc
pop
divb
repz
mov
jg
aad
out
xlat
inc
cli
test
test
loope
jecxz
jno
mov
mov
outsb
and
mov
add
dec
pop
cmp
rcrl
mov
push
jge
push
push
dec
or
xchg
mov
fistl
jle
inc
xor
jle
outsl
pop
lcall
clc
popa
dec
xchg
vpsraw
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
jmp
and
imul
nop
push
mov
xchg
mov
or
add
or
pop
mov
ds
mov
insb
and
das
mov
lret
movsb
jp
aam
inc
adc
cmp
xchg
lea
rorb
inc
or
dec
into
iret
push
mov
add
push
or
imul
push
js
inc
or
pop
cltd
sbb
push
out
sub
mov
xchg
mull
bound
cli
shrl
sbb
mov
push
dec
mov
mov
loop
xchg
jge
test
jl
sbb
add
sti
or
cmpsb
sahf
and
fadd
mov
push
and
push
push
ret
pop
lcall
dec
movsb
and
or
inc
mov
insb
xchg
pusha
cwtl
sbb
add
in
adc
insb
out
push
fwait
jb
sti
mov
lea
lods
or
add
sub
cmp
xlat
mov
popf
lock
or
jae
jmp
stos
or
ret
fadds
cmc
sbb
pop
sbb
add
cltd
pop
fimull
and
shlb
popf
imul
cmp
clc
cmpsb
xchg
ljmp
push
lahf
cmp
insb
pop
jecxz
push
ss
fimuls
shl
ja
sar
lcall
adc
outsl
mov
fldenv
les
or
movsl
xor
je
cmp
fdivp
push
mov
mov
push
and
fwait
lds
pop
xor
bnd
inc
test
lods
testl
sbb
mov
fwait
stos
inc
data16
xor
test
xor
or
jge
cmpl
shl
test
out
sbb
adc
es
cld
rol
jnp
ret
cmp
les
out
nop
push
mov
adc
cli
hlt
pop
inc
inc
xor
pop
fsubr
or
inc
sahf
fisttpll
or
jl
xor
adc
push
shrl
lret
dec
mov
mov
popa
xor
sub
mov
mov
mov
aad
mov
daa
faddl
sbb
or
push
add
cltd
bound
cmp
push
or
dec
cltd
mov
xlat
mov
testl
push
idivb
lret
or
and
pop
or
push
mov
out
xlat
add
out
jp
sbb
in
sub
popa
xor
lcall
push
sbbb
sub
shll
int3
or
das
mov
sub
ret
addr16
dec
movsl
shrb
cwtl
or
jno
pop
mov
aad
mov
sub
sbb
in
pop
xchg
lret
movsb
inc
and
cmp
daa
popa
into
fldl
xchg
cmp
or
iret
das
jl
pop
mov
jns
pop
jae
xor
mov
stc
cmpsb
cmp
mov
cmpsl
shlb
pop
jo
nop
popa
int3
mov
cmpsb
cwtl
inc
imul
pop
pop
ljmp
dec
adc
arpl
dec
sub
add
jmp
enter
ret
push
test
ffree
movsl
xchg
jle
sahf
xchg
insl
mov
cld
int3
in
test
stc
lods
lock
jbe
jmp
mov
loope
imul
cmp
sub
sbb
jae
mov
sbb
lds
cmp
sub
sahf
ljmp
bound
out
inc
mov
shll
dec
push
outsl
or
sarb
lods
stos
fcoms
out
fcompl
and
dec
xchg
fldl
bound
jnp
int
mov
daa
cmp
xlat
adc
or
cmp
orl
pusha
sub
mov
enter
add
mov
fisttpl
push
xchg
mulb
sbb
inc
inc
lcall
ja
pushf
pop
push
stos
xchg
xchg
sbb
and
jbe
stos
stos
into
aad
or
sbb
and
sub
mov
inc
idivb
sub
cmc
test
mov
or
add
lds
push
push
xchg
or
sub
adc
iret
adc
add
out
mov
or
adc
daa
inc
test
in
jns
adc
fildll
std
or
add
cmp
daa
xchg
stos
aas
ret
xchg
fcmovbe
mov
testl
out
scas
xchg
pushf
ficompl
bound
inc
insl
inc
push
iret
pop
mov
dec
mov
cs
cmpsb
sub
pop
loope
pushf
lcall
jle
dec
push
test
dec
aas
dec
mov
add
push
push
pop
inc
data16
outsl
sbb
in
pop
cltd
or
pop
or
mov
or
enter
lret
popa
or
lods
popa
mov
repnz
pop
stc
out
sbb
iret
stc
clc
popa
movsl
mov
ficoms
and
in
test
fstps
dec
and
rcrl
cmp
out
xor
mov
dec
mov
movsb
push
sti
push
pop
push
loope
jmp
lods
test
push
push
inc
sbb
adcl
and
int3
cmp
fdivr
push
bound
aaa
mov
test
movsl
sub
lock
dec
mov
jmp
imul
pop
lock
pop
pop
aad
mov
xchg
jecxz
xchg
sub
or
add
or
sbb
sub
shll
mov
push
push
lods
scas
mov
jns
sub
mov
mov
aad
dec
or
cmp
pop
popf
xor
movsb
outsl
sbb
mov
pop
std
or
jp
dec
loopne
jo
test
andl
scas
out
stos
sbb
les
inc
jp
out
and
dec
outsl
stos
push
scas
adcl
js
cmpsb
sbb
mov
cmp
inc
aas
mov
in
adc
pop
mov
ds
inc
pop
ret
int3
push
dec
fadd
lea
icebp
int3
and
std
imul
shrb
ret
sub
and
and
jns
ret
stos
push
xorb
xchg
insl
les
cld
jle
and
or
aaa
push
adc
add
push
mov
push
sahf
push
sbb
jae
outsb
push
mov
cmc
loop
pop
popf
dec
mov
and
fs
popf
out
add
or
sub
lods
mov
xchg
or
adc
mov
push
inc
inc
stc
call
jbe
jmp
mov
out
mov
fildl
and
cmpsl
lret
jbe
pop
jne
mov
into
cmp
insl
fcom
xchg
sbb
inc
mov
in
xor
in
mov
rcl
mov
dec
sbb
cmc
loopne
outsl
sti
lcall
std
call
cmp
push
mov
or
mov
push
cmp
xor
clc
iret
mov
jmp
arpl
fldenv
dec
subl
push
fisttps
and
xor
add
mov
fsubl
imul
in
and
xchg
mov
mov
xchg
push
scas
lret
dec
loop
jae
add
mov
pop
mov
fbld
bnd
mov
dec
clc
and
faddl
push
adc
das
arpl
jle
fdivrs
repnz
clc
inc
xor
mov
adc
xchg
fisttpl
xor
clc
into
mov
pop
rcl
pop
cmpsb
mov
testb
call
add
add
fadds
cmpsb
xchg
enter
sub
or
les
sbb
pop
int3
aad
inc
shl
call
insl
mov
xor
test
lods
leave
jl
cld
xor
mov
aaa
repnz
jmp
pop
jae
shr
and
sbb
sub
roll
xchg
les
orl
aad
jnp
orl
jbe
dec
pop
shrl
adc
mov
clc
or
stos
push
rcrl
cs
jo
or
and
add
push
mov
cmp
or
insl
aas
pop
mov
push
in
xchg
stos
call
jg
xor
fldpi
xor
cwtl
adc
and
pop
dec
vpsllq
sbb
fiadds
push
cmc
push
jb
sbb
filds
cmpsb
iret
xlat
cmp
stc
out
sub
test
sub
sub
cmp
adc
iret
mov
pop
mov
icebp
xchg
adc
and
gs
xchg
pop
mov
repnz
ficoml
adc
xchg
inc
xchg
xchg
cmc
negl
in
outsl
ss
jecxz
std
xchg
sub
in
add
fcos
xor
and
mov
into
and
fwait
add
loopne
sbb
movsl
dec
test
inc
imul
movsl
cwtl
jae
cmp
push
cs
mov
pop
aad
lret
js
out
scas
test
jle
lret
cmpsl
or
dec
hlt
popa
sub
sub
subl
pop
pop
addr16
pusha
xchg
loop
in
inc
je
fldenv
repnz
into
mov
push
jecxz
xchg
xchg
ja
pop
gs
push
in
fmul
testb
lret
pop
or
out
lods
fstl
bound
rep
xchg
lcall
cmp
jge
inc
add
push
inc
adc
pop
in
cmc
xor
fs
mov
call
pop
jns
adc
movq
fcmovne
cwtl
pop
inc
loopne
cmp
dec
mov
mov
and
stos
push
xchg
leave
fildll
mov
or
mov
cmpl
xchg
int3
test
adc
test
adc
xlat
mov
lock
adc
sbb
xor
lds
cmpsl
imul
xor
sbb
mov
xchg
and
mov
or
mov
xchg
mov
movsb
xchg
mov
and
fcompl
and
xor
or
sbb
out
cmp
les
popa
xor
std
sub
jno
bound
enter
inc
pop
sub
mov
cmp
aam
in
xchg
mov
fdivrs
xor
in
or
jl
xchg
cmp
push
insb
jbe
jo
fcmovbe
sbb
mov
mov
cmp
bound
inc
lock
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
jmp
lcall
pop
jp
ljmp
or
iret
add
or
jno
sti
imul
xchg
and
cmpsl
lods
inc
rorb
jl
testb
imul
loopne
in
cmpsb
sbb
andb
jl
loop
fwait
push
sbb
push
pop
popa
push
decb
cmp
je
popa
jns
dec
cli
mov
jbe
dec
xorb
inc
cmp
insl
pusha
aas
js
add
jnp
stos
mov
mov
insl
insl
dec
mov
cmpsb
adc
testl
rcr
or
add
inc
inc
idivl
mov
sub
xchg
push
test
popa
sahf
adc
or
jge
pop
add
fwait
adc
loop
in
mov
push
jle
fs
fnclex
xor
pop
dec
and
sub
adc
or
lods
lds
cmp
or
dec
loop
add
and
in
cmp
movsl
sub
xor
pushf
push
xchg
bound
mov
mov
mov
or
pop
adc
aas
dec
lcall
cmpsb
cmp
fsubl
or
in
sub
cmp
push
rclb
xchg
int3
or
xchg
inc
mov
cmp
or
and
push
jnp
pop
pop
dec
pop
lcall
pop
adc
xchg
xchg
pop
dec
lret
fbstp
sub
cwtl
call
mov
shrl
xor
or
fstp
inc
les
inc
adc
fdivr
cltd
push
in
out
and
daa
mov
ss
bound
jg
lock
cltd
roll
fidivrs
push
pop
mov
add
sub
fwait
cmp
lea
xchg
mov
mov
inc
or
mov
and
and
in
xlat
addr16
cmp
dec
bound
push
sub
or
test
jns
int
jge
mov
rolb
daa
insl
mov
pop
jo
and
xlat
das
inc
outsl
push
repz
jg
mov
xor
rorl
out
nop
jmp
or
lahf
jo
stc
add
pop
push
or
mov
imul
jl
xchg
fwait
imul
lahf
mov
je
add
jb
test
ret
mov
in
popa
lret
or
rep
shrb
sbb
add
stc
clc
mov
push
push
and
cmc
mov
add
int
or
ja
and
xchg
fsubrl
sbb
mov
jle
pop
in
mov
es
leave
aam
xor
sub
movsb
int3
movsl
push
adc
mov
scas
xlat
arpl
cli
add
fistps
sbb
xchg
scas
sarb
sub
push
sahf
sahf
or
sub
in
pop
cmp
sub
xchg
jmp
push
ds
add
test
fstpt
jbe
sbb
fisubrs
mov
jp
lcall
xchg
sub
lcall
mov
das
mov
jp
pop
sub
jle
cwtl
push
cmp
mov
dec
lcall
test
arpl
sbb
cmpsb
and
dec
cli
pop
jl
sbb
insl
push
jle
push
and
xchg
xor
sbb
fdivrp
mov
inc
jne
dec
bound
dec
lods
sub
lret
dec
or
ljmp
ss
arpl
repz
mov
incb
add
mov
and
in
cmp
add
pop
pop
cmpsl
xor
jo
rcrb
or
jge
cmp
testl
enter
pusha
mov
mov
cmp
push
inc
push
xlat
push
sub
adc
mov
push
stos
rcrl
push
inc
pop
pop
cmpsb
shlb
sbb
sub
leave
push
dec
jb
mov
in
decl
sbb
mov
push
cmp
fidivl
mov
mov
lret
lods
outsb
lds
lea
mov
std
movsl
aam
adc
in
dec
fucomip
ljmp
pop
fnstsw
mov
xor
out
mov
sub
sub
cwtl
mov
mov
cmp
iret
xchg
icebp
mov
xchg
xor
lods
insl
rclb
mov
out
inc
xor
or
pop
fsubrs
cmpsl
fildl
cwtl
les
arpl
aam
int3
push
out
test
push
cs
cld
inc
mov
enter
mov
inc
pop
stc
pop
adc
mov
pusha
push
mov
div
scas
add
xchg
mov
fistl
lahf
inc
gs
jge
dec
dec
lds
insl
jno
fistpll
lock
inc
mov
stos
add
mov
mov
cmp
mov
movsb
mov
hlt
in
int
repnz
stos
and
jo
popa
fdivp
adc
jae
and
fildl
test
mov
or
daa
es
outsb
lea
pop
outsl
inc
sbbl
testl
int3
call
mov
xor
roll
inc
fisttps
xchg
sub
and
pop
add
loope
mov
xor
or
mov
mov
add
mov
jmp
mov
mov
std
jmp
iret
addr16
add
or
xor
adc
jo
and
stc
arpl
fcomps
aaa
jmp
test
xor
in
sub
repnz
sub
out
cmp
decl
scas
sbb
mov
adc
pop
pop
ss
in
jmp
je
std
inc
rdmsr
mov
add
call
test
imul
jecxz
sbb
pop
mov
xchg
push
ds
xchg
outsl
dec
mov
adc
fldcw
pushf
sub
cmp
cmpsb
lock
roll
andb
jp
lods
pop
mov
das
xor
or
pop
dec
call
mov
push
stos
out
orl
stc
sub
lahf
adc
jb
lods
xor
fadds
xchg
sbb
xor
mov
push
mov
dec
jo
mov
movsl
push
imul
out
jmp
in
call
lods
push
push
xchg
insb
sub
adc
pop
in
and
pop
cmc
movsl
mov
sbb
popa
push
loop
or
int3
test
add
shrl
mov
imul
and
fidivrl
xor
sarb
mov
cli
jb
sub
insb
and
repz
faddl
add
call
dec
fmulp
and
pop
xor
jo
mov
mov
jno
std
je
jge
outsb
out
and
in
test
or
out
cmc
test
adc
mov
lods
mov
pop
pop
inc
ljmp
mov
out
into
xchg
test
lock
jno
mov
sbb
jns
and
xchg
cs
xor
stc
pop
pop
and
sbb
mov
stc
pop
fcmovb
pop
xchg
out
out
and
int3
loop
pop
in
pop
and
push
ret
sbb
sub
repnz
push
mov
test
cmp
push
call
mov
cmpsb
leave
or
aad
leave
aaa
mov
vmovshdup
imul
sbb
xor
hlt
popf
lea
out
mov
add
aad
xchg
push
sbb
add
insl
clc
lret
int
imul
outsb
lahf
cmp
push
insb
lahf
inc
enter
sub
xchg
cmp
jge
lock
cmpsb
lahf
sub
fsubl
xlat
lds
arpl
lock
jns
pop
std
imul
add
arpl
jl
jmp
push
sbb
popa
je
popf
dec
push
aaa
fnsave
mov
and
rcll
in
imul
jne
into
stos
add
xor
push
push
xor
lret
mov
push
das
outsb
lret
outsb
sub
jecxz
xor
popf
ja
mov
jne
mov
into
sbb
sub
pop
mov
in
inc
out
rorb
mov
adc
pop
or
loope
mov
mov
push
aad
xorl
ret
pop
imul
cmp
pop
cmp
aam
dec
pusha
xchg
sbb
jno
stos
sub
sub
mov
add
adc
adc
shlb
inc
jbe
aaa
lret
sub
sub
stos
in
add
addr16
sbb
xor
add
js
cwtl
cwtl
mov
loopne
cmpsb
enter
dec
popa
aaa
repz
addr16
je
inc
dec
into
push
mov
mov
popf
mov
dec
pop
loope
test
lahf
sub
pop
pop
cmpsl
inc
bound
insb
idivl
cmp
int
mov
adc
stos
and
dec
jmp
and
xor
push
test
and
pop
pusha
dec
pushf
xchg
data16
cmp
rcrl
inc
lcall
lea
or
xor
or
neg
popf
push
push
mov
popa
sbb
cld
mov
and
sub
sbb
or
jl
jae
xchg
ds
dec
mov
insb
or
push
push
mov
int3
sbbb
push
mov
rorb
inc
and
es
mov
popa
lret
jge
mov
sub
cmp
mov
daa
hlt
scas
pop
leave
fstps
sbb
insl
popl
push
pop
in
xchg
mov
imul
sub
iret
xor
loope
mov
adc
cld
mov
enter
in
dec
cmp
mov
mov
jl
icebp
mov
int3
rcl
dec
cmpsl
rorl
and
mov
and
push
adc
and
jne
mov
int
daa
cmp
mov
pop
leave
movsl
fwait
ret
jae
dec
outsb
sub
inc
mov
dec
addl
fisubs
or
int3
xlat
fstl
sti
cli
and
mov
popf
dec
jmp
add
fcmovbe
cmp
mov
lret
mov
jle
pop
std
nop
imul
xchg
xor
sti
xor
hlt
fmul
fnsave
add
push
cmpsl
lret
sbb
sbb
push
lock
dec
movsb
shrd
shr
mov
jmp
rorl
test
out
out
cmp
or
or
add
or
xlat
aad
fwait
out
and
test
xchg
stos
or
sub
dec
shll
in
lods
cmpsb
and
mov
cmpsb
in
jne
popa
aad
iret
sbb
inc
jle
mov
mov
movsl
fyl2xp1
add
dec
mov
ret
jb
sub
push
push
inc
nop
jge
push
sub
movsb
ss
push
test
xor
mov
scas
jg
loope
inc
mov
mov
or
push
and
mov
cmpsb
pop
add
mov
jno
arpl
xchg
xlat
mulb
adc
arpl
xchg
out
nop
repz
xor
frstpm(287
mov
and
jno
ss
ficomps
js
loope
lret
loop
mov
mov
or
ffree
jp
xor
sub
push
and
mov
pop
lock
xlat
fstpt
addl
shlb
push
aad
int3
nop
cmp
sahf
adc
lock
pop
dec
test
imul
lcall
pop
int3
or
sub
stos
stos
rcl
call
scas
xor
push
pop
in
fldl
add
imul
add
cs
jge
and
mov
fdivs
pushf
aaa
inc
js
cmpsl
shlb
pop
icebp
lods
xor
mov
xor
dec
pusha
mov
addr16
mov
pop
roll
adc
mov
bound
iret
rorl
adc
lock
aad
lods
lcall
ja
dec
and
out
mov
movsb
dec
daa
mov
mov
sub
fmull
mov
or
pop
cmp
xchg
outsl
sub
push
or
iret
insl
testl
out
mov
push
lcall
jmp
xchg
jge
sub
stc
mov
fs
fwait
out
adc
xorb
pop
sti
call
push
push
dec
or
pop
movsb
aaa
enter
lock
add
in
orl
adc
iret
cli
pop
scas
loopne
push
jo
cmpsb
lret
lea
rorl
iret
rorl
stos
mov
sbb
dec
scas
xchg
jnp
jne
lahf
pop
sbb
inc
imul
jg
mov
push
pop
lds
pushf
repz
aad
jae
aad
pusha
mov
mov
xor
mov
insl
shrl
mov
les
pop
mov
mov
xchg
mov
lds
adc
aad
push
xchg
sub
adc
sti
xlat
jnp
add
xor
jge
adc
push
sub
cmpb
or
loop
test
mov
je
fsub
push
xchg
lret
add
xchg
pop
pusha
adc
es
jne
push
dec
pop
mov
out
sahf
sub
ror
lods
mov
pushf
jecxz
fs
xor
sbb
loope
rcrl
or
pop
xchg
push
pop
push
push
mov
gs
jno
lods
xchg
jbe
je
xchg
ret
cmp
insb
movsb
cmp
mov
adc
out
test
fdivs
test
mov
sbb
sub
cmpsl
jns
mov
sub
mov
inc
xlat
scas
mov
xchg
notb
scas
aad
mov
jb
std
loope
mov
xchg
mov
jns
pop
or
jmp
mov
sbbl
xchg
mov
imul
mov
mov
scas
push
fcoml
lret
inc
xor
adc
jo
mov
mov
fdivrl
add
adc
and
pop
popf
dec
sbb
push
ss
nop
es
sarb
cmpsb
dec
jmp
or
insl
sbbl
mov
push
or
lahf
cwtl
xchg
sbb
pop
scas
rolb
fidivs
or
jmp
aad
je
dec
pop
adc
popa
lahf
sub
xor
mov
ret
repnz
sti
loope
dec
out
push
sar
clc
jno
mov
clc
mov
cli
mov
pushf
in
in
xchg
lahf
shrb
fstps
xchg
pop
pop
das
adc
jae
jmp
std
daa
mov
xchg
fnsave
xor
test
lock
cmpsl
mov
lcall
inc
lods
adc
jae
lcall
xchg
je
cmp
or
mov
std
ret
pop
mov
sub
mov
sbb
push
aam
cmc
ret
jge
mov
push
sti
push
add
adc
insl
sahf
mov
clc
call
orb
jns
in
push
jno
xor
push
int
pusha
lock
mov
fdiv
addr16
push
pushf
xlat
xlat
pop
repnz
inc
pop
mov
int
cmc
pusha
sub
rcrl
shr
inc
out
mov
int3
sub
js
fistpll
mov
mov
in
jno
pop
pop
and
inc
add
pop
cmp
dec
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
jmp
inc
push
pop
cmp
aas
and
jne
jne
mov
or
or
add
or
mov
pop
add
mov
dec
push
dec
cmpsb
cli
in
lcall
mov
mov
xchg
int3
mov
mov
pop
mov
ss
sbb
andb
mov
dec
jns
inc
fcompl
in
push
xorl
xlat
out
enter
push
stos
push
inc
push
cmp
pop
jns
fldl
in
mov
mov
iret
xor
sub
les
cmp
icebp
mov
adc
push
aaa
mov
imul
inc
cmp
pop
push
test
inc
dec
jnp
mov
ljmp
dec
xor
lret
pop
in
notl
into
push
and
dec
imulb
mov
lcall
inc
inc
or
pop
and
cmpb
or
rcl
inc
loop
fcmovnbe
out
out
cwtl
pop
fcmovne
ja
xchg
stos
xor
dec
pop
mov
daa
pop
in
jne
jecxz
jle
mov
addr16
movsb
call
sub
in
scas
test
jl
or
push
aam
jmp
imul
xchg
lods
cli
scas
mov
push
icebp
jns
ljmp
pop
adc
push
addl
mov
outsl
xchg
movsb
cmp
sub
shrb
cmp
adc
je
jmp
xchg
outsb
sbb
rcrb
mov
dec
dec
cmp
leave
inc
lret
mov
xor
jbe
xchg
sub
lcall
ret
xor
sub
xor
sbb
xor
add
test
push
jl
sbb
loop
adc
loop
sarb
loope
data16
add
test
pop
clc
dec
jp
cld
xor
pop
rcrl
jne
dec
scas
stos
jbe
lods
movsb
xchg
xchg
ss
loop
pop
stos
lock
adc
imul
or
sti
lods
jp
aad
xchg
add
xor
in
insl
shll
in
int3
mov
inc
sbb
and
insl
inc
stos
push
inc
iret
jbe
cmp
cmp
shr
inc
mov
mov
xor
lret
test
out
imul
hlt
rclb
pop
scas
and
mov
and
dec
cs
push
loop
loopne
lods
dec
xorl
jno
xchg
dec
lds
imul
cmp
rcrb
mov
icebp
gs
cmp
push
jno
mov
icebp
icebp
dec
shll
lds
shr
mov
repz
inc
shll
roll
out
xchg
shr
pop
aaa
test
jne
aam
xchg
adc
popf
xor
xchg
fs
icebp
cmp
std
push
pop
sbb
fwait
cli
push
iret
sarb
stos
int
jnp
mov
scas
xchg
mov
mov
jge
jmp
xchg
dec
fcmovbe
push
enter
mov
test
cld
mov
iret
fldcw
out
add
das
idivb
fiaddl
push
cmp
insb
movsb
repz
in
andl
xor
push
or
fimull
fdivrp
sbb
push
inc
push
loopne
or
in
mov
arpl
sbb
cmc
sub
jmp
add
cmp
pop
cmp
xchg
out
sub
adc
mov
add
push
xlat
jp
jge
jno
clc
dec
aam
jp
mov
push
push
scas
pop
gs
inc
cmc
not
inc
sbb
aas
fs
dec
cmp
or
xor
hlt
pop
das
mov
add
jmp
in
mov
pop
insl
dec
dec
into
bound
ss
sti
mov
adc
xchg
jno
pushf
bound
or
movsb
xor
aas
inc
ljmp
jl
push
gs
adc
mov
adc
jmp
xchg
imul
xor
sbb
sbb
pusha
push
stos
out
mov
shr
out
pop
je
stc
out
mov
leave
pop
jb,pt
arpl
cli
cmp
je
insb
shlb
push
mov
lea
iret
movsl
rcl
add
cmpb
jmp
icebp
ds
scas
lret
pminsw
jo
push
mov
in
out
adc
in
cmp
inc
sbb
xor
and
push
push
les
xor
inc
dec
xor
sub
cmpsb
cmp
data16
jo
lods
pop
hlt
push
mov
push
mov
inc
test
daa
sbb
test
loop
std
in
push
inc
jo
jne
test
hlt
mov
push
int
idiv
loope
bound
cwtl
mov
iret
sbb
jae
cmpb
in
jae
sbb
lock
xor
mov
or
ret
std
lcall
xor
push
pop
sbb
cli
cli
xchg
mov
iret
push
out
xor
and
cmp
test
cltd
ret
rcrb
xchg
dec
testl
lods
daa
mov
add
jo
inc
scas
xchg
imul
insl
scas
mov
xlat
orl
xchg
inc
in
sub
sub
jmp
fs
mov
arpl
mov
shl
mov
mov
mov
or
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
jmp
sbb
pop
adc
mov
addb
iret
add
or
int
in
scas
ds
xchg
repz
iret
dec
sbbb
xchg
mov
mov
out
mov
sarb
push
adc
addr16
sarb
inc
mov
add
loop
cmp
daa
movsb
cltd
push
inc
shr
imul
cmpb
xlat
out
cmpsl
loop
es
dec
stos
jae
pop
dec
xorb
out
lret
pusha
add
test
sbb
adc
xor
push
repnz
mov
or
sub
sti
stos
mov
cmp
or
pop
fldenv
jecxz
push
lret
jne
cld
js
jnp
pop
out
and
xchg
mov
push
scas
xor
scas
loopne
rcrb
jle
add
mov
xor
iret
push
repnz
or
mov
mov
testb
push
insb
insb
sbb
ljmp
mov
jmp
inc
dec
and
mov
or
icebp
nop
push
cltd
ret
sub
xchg
mov
inc
cmp
cmp
sbb
dec
pusha
shlb
xchg
stc
mov
subl
andb
aas
mov
add
mov
dec
ret
cmp
adc
or
movsb
loope
and
inc
push
pop
fisttpll
fadds
roll
mov
clc
loope
cmp
mov
hlt
pop
es
shlb
cmpsb
test
lock
jbe
sbb
sub
inc
xor
push
cld
dec
pop
popa
movsl
mov
rorb
cmp
or
jle
out
adc
jb
xor
mov
popa
push
mov
mov
xchg
movsb
fdivrs
mov
in
mov
je
leave
daa
andl
push
into
out
push
jae
cmp
mov
adc
fldcw
leave
inc
jle
push
test
pushf
fnstcw
adc
mov
dec
xchg
cmpsb
nop
mov
or
sti
aam
pop
xor
ljmp
mov
sahf
push
testl
lret
lahf
push
divl
dec
bound
roll
mov
mov
pop
push
ret
mov
xchg
xor
push
test
inc
xchg
adc
xchg
sbb
xchg
ret
loop
cli
sbb
sub
ds
push
cmp
scas
fstps
hlt
and
fnsave
cmc
mov
in
jmp
jae
in
mov
fldt
xor
pushl
push
mov
mov
jne
daa
and
push
mov
jmp
rorl
aas
stos
paddq
push
lret
mov
cld
aaa
in
jecxz
lea
in
or
xchg
inc
cmp
mov
xor
imul
mov
stc
sbb
push
or
add
mov
jle
lea
leave
mov
sbb
mov
or
aaa
lret
mov
cmp
test
stos
jge
cmp
insb
nop
dec
jg
dec
pop
or
lcall
out
push
mov
das
jne
or
xor
int3
dec
fcomp
and
pop
xchg
and
cli
rclw
pop
cld
jb
and
cmp
mov
dec
test
and
or
imul
adc
xchg
mov
mov
jg
mov
push
fnstcw
outsb
inc
jno
iret
mov
xchg
in
icebp
dec
sub
cwtl
imull
leave
xchg
sbb
dec
lds
jne
rep
mov
sub
stc
and
mov
ret
jne
call
cmp
mov
jae
mov
push
fildll
fcompl
add
sti
icebp
pusha
or
cmp
iret
loop
sbb
jmp
movsl
int3
inc
mov
loopne
insb
pop
leave
insb
sub
mov
ret
dec
push
lds
cmp
loope
int
cmpsb
fs
sbb
cli
adc
sub
bound
push
jge
divl
stos
xor
insb
mov
xchg
mov
aaa
lea
xchg
push
dec
dec
mov
loop
out
andl
dec
xchg
mov
aas
iret
mov
xor
imul
mov
in
in
inc
enter
and
fdiv
mov
loopne
xor
jb
scas
divl
movb
imul
sar
adc
xchg
dec
jl
shll
mov
ss
inc
out
cld
mov
jae
neg
test
xchg
add
xor
inc
cmp
push
mov
ljmp
ds
daa
xchg
pushf
xchg
jmp
aaa
int
xchg
inc
loope
stc
xchg
ret
jmp
pop
sub
cmp
ds
add
ja
lods
pop
inc
sbb
cld
jae
xor
mov
add
iret
jge
sbb
dec
mov
shrb
add
mov
and
or
loopne
loop
pop
adc
movsl
dec
xor
xorl
cmp
pop
insb
mov
movsb
add
pushf
dec
push
cli
xchg
pop
stos
lock
test
stos
push
inc
mov
inc
lsl
popf
mov
mov
xor
or
mov
mov
shrd
shr
jmp
and
stos
push
scas
adc
xor
mov
out
or
iret
add
or
sbb
iret
sahf
mov
dec
outsl
xor
lret
xchg
and
adc
push
roll
mov
xchg
and
imul
or
iret
sbb
jmp
data16
shl
xor
jge
push
lret
jg
out
ss
js
idivl
sbb
sbb
mov
scas
imul
pop
popa
cs
loop
repz
sbb
adc
ror
call
and
outsb
jno
scas
inc
or
add
xor
ret
cmp
inc
orl
jle
cld
repnz
iret
add
loop
loope
ficoml
mov
dec
popf
mov
jns
pop
mov
int
pop
movsb
lock
push
cs
addr16
push
jo
cltd
adc
cmp
outsb
jp
mov
rorl
inc
lea
jne
mov
dec
mov
mov
push
fisubrl
into
stos
call
pushf
movsb
sub
fsubr
std
call
cmc
jge
enter
insb
test
adc
sti
xchg
mov
and
ss
jbe
data16
lahf
lahf
shlb
xchg
push
pop
push
insl
cmc
out
scas
xor
sub
mov
mov
out
and
mov
lcall
or
lret
or
jmp
xchg
cmpsb
shrl
cwtl
sbb
pop
stos
jo
dec
xor
shl
leave
icebp
jns
pop
or
xchg
imull
cmp
stc
in
aam
mov
add
sub
dec
in
mov
mov
or
pusha
adc
push
cmp
sbbb
cmp
mov
loope
mov
jecxz
fs
das
ds
mov
data16
add
mov
xor
mov
sbb
hlt
push
cld
jnp
out
pop
sub
jo
push
data16
pop
shll
inc
ret
xchg
stos
pop
dec
adc
sti
leave
in
mov
and
enter
test
lods
mov
mov
pop
jp
lds
or
sbb
sbb
jae
idivb
pop
cmp
mov
jle
pusha
rorb
cmp
pop
cmp
in
fld
push
roll
data16
out
pop
imul
pusha
jo
push
test
sbb
or
or
sbb
fsubl
lock
fnstcw
mov
xor
lret
sub
adc
test
lds
xor
lods
xchg
pop
mov
sbb
nop
popf
push
mov
mov
dec
fwait
test
sbb
sub
mov
lods
push
mov
gs
call
int3
jb
or
nop
cli
inc
popa
insl
mov
xor
int
and
cwtl
adc
mov
push
adc
enter
std
ljmp
jl
lea
pop
ja
mov
xor
push
sbb
pop
inc
nop
shll
dec
call
push
dec
mov
cmc
pop
xchg
js
dec
or
fwait
cltd
xor
testb
push
mov
xlat
jl
jg
add
push
outsb
jl
xchg
loopne
inc
ss
dec
inc
xchg
xchg
sub
cld
pusha
leave
push
mov
ds
jae
xlat
dec
out
stos
and
jecxz
addr16
negl
jecxz
std
ret
sbb
mov
xor
inc
enter
xlat
clc
xor
notl
push
jecxz
mov
adc
push
mov
xor
push
cmp
sbb
out
dec
repz
lea
or
cmc
neg
popf
test
mov
inc
das
test
insl
or
stc
dec
dec
or
push
xchg
jmp
aam
cmc
or
cwtl
popa
popa
xchg
adc
push
das
int3
fcompl
push
xchg
mov
insb
icebp
mov
jne
jg
aaa
rcr
ss
int3
sub
paddd
push
pop
and
mov
cmpsl
sub
mov
jo,pt
into
inc
ljmp
xchg
xchg
sbbl
push
out
cmovs
outsb
sub
jge
jb
loopne
fistpll
add
xor
icebp
jns
pop
dec
pop
pop
data16
pushf
mov
push
sbb
mov
mov
mov
std
xchg
stos
pusha
mov
push
ljmp
subl
cs
pop
cli
and
or
aaa
outsb
or
inc
pop
lret
mov
data16
or
nop
shll
iret
je
pusha
and
or
ret
lret
out
adc
push
cmp
nop
mov
cli
cmp
outsl
adc
sahf
cmp
in
push
ret
jmp
jecxz
lock
in
rcrb
mov
mov
sub
add
adc
dec
sarl
mov
cmpsl
dec
push
pop
cmpsl
mov
fcmovnb
xchg
push
xor
xchg
dec
mov
inc
repnz
dec
stc
adc
pusha
std
insl
add
jecxz
les
dec
int
popf
pop
std
xor
mov
testl
enter
iret
or
or
mov
mov
mov
xor
mov
xor
shl
mov
or
jmp
clc
clc
dec
xlat
dec
adc
mov
lods
or
add
or
out
loop
jbe
push
inc
fcoms
popf
in
nop
inc
mov
add
stos
pop
add
xor
sbb
inc
jmp
cli
stos
jecxz
xchg
cmpsl
mov
sbb
rorl
pushf
jb
rolb
lret
jmp
lods
ja
cltd
cmpsb
aam
outsl
add
aam
jg
inc
push
push
inc
outsb
ficoml
add
jbe
stc
dec
mov
adc
jo
sub
int3
sub
cmpl
movsl
mov
icebp
and
or
repnz
sub
mov
adc
pop
repnz
or
xchg
push
aaa
popf
fidivl
shr
bnd
fnstenv
sbb
cmp
sbb
sbb
test
sub
rcrb
data16
jnp
das
cmpsl
push
push
mov
lcall
repz
or
sbb
icebp
pusha
fstl
pop
jl
sbb
mov
lock
lahf
sub
inc
into
xor
dec
sub
sub
popa
ljmp
fcomi
jno
mov
xchg
pop
and
dec
xchg
bound
es
inc
or
push
lcall
inc
mov
cmp
fldl
mov
jne
sub
cmpsl
int3
dec
hlt
outsb
mov
or
or
pop
lods
mov
cmp
dec
data16
sti
push
aam
push
scas
outsl
inc
aad
add
lds
xlat
iret
lret
stc
fisttpl
dec
test
cmpb
fucomp
int3
nop
pop
jp
aad
sti
js
test
sbb
lds
mov
xchg
mov
lods
or
mov
mov
gs
mov
test
xor
insb
imul
adc
xchg
sub
lock
aad
fcoms
lcall
inc
push
and
out
js
cwtl
adc
mov
cltd
hlt
adc
sbb
pop
xchg
cmpsb
pop
pop
sub
xor
pop
sti
and
shr
shl
aam
aas
ss
outsl
icebp
cltd
fs
cli
cmp
push
jnp
xlat
pop
mov
cmp
nop
adc
sbb
mov
jno
mov
imull
mov
mov
sbb
gs
pop
in
adc
ja
ror
adc
pop
cld
adc
mov
in
insb
fildll
xchg
mov
insb
imul
push
ss
rorl
outsl
movsl
rorl
inc
add
popa
mov
lcall
pop
sti
fadd
sti
divl
adc
cli
jg
ret
add
shll
jl
adc
outsl
mov
xor
add
cmpb
icebp
mov
jmp
lahf
xor
mov
data16
out
adc
pushf
push
sub
xchg
cmpsb
push
mov
adc
sub
xchg
push
clc
aas
int
push
in
clc
cli
arpl
decl
setl
scas
pop
xchg
sbb
lahf
jb
inc
mov
sbb
outsb
xchg
repnz
push
push
call
mov
pop
stos
dec
push
jne
scas
pushf
les
adc
negl
xor
jnp
jmp
push
test
jo
in
xor
push
or
mov
and
ljmp
cmp
mov
push
push
repnz
mov
cld
mov
imul
ljmp
in
mov
cmpsl
cli
int3
add
insl
jecxz
mov
cld
xchg
sarb
repz
jl
das
fdivp
fistpl
aaa
aam
jbe
stc
inc
sahf
clc
repnz
inc
pop
jmp
in
lods
cli
add
xor
mov
cmp
sbb
push
cmp
cltd
and
push
sbb
jecxz
mov
bound
fwait
xchg
and
test
je
push
outsb
jno
movsb
rcl
mov
dec
sbb
sub
aaa
mov
sbb
mov
sti
jno
int3
test
in
push
clc
outsb
mov
inc
cmp
jecxz
mov
call
inc
icebp
repnz
mov
adc
imul
ja
sbb
cltd
enter
inc
lock
je
adc
test
jae
dec
dec
push
jnp
aam
push
shl
mov
push
hlt
xchg
xchg
mov
in
or
repz
popa
orl
movsb
lods
sub
or
xchg
lret
mov
out
insl
jns
adc
es
mov
jle
cmp
mov
adc
cltd
mov
mov
lret
inc
or
inc
adc
mov
sahf
mov
imul
sahf
add
push
sub
dec
stos
sub
stos
push
push
sbb
mov
out
cmp
in
or
and
icebp
mov
push
insl
pop
sbb
fmuls
or
and
or
mov
sub
rorb
mov
xchg
fistps
push
jae
ljmp
cmp
je
mov
sub
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
jmp
jne
lcall
imul
mov
iret
add
or
jno
sub
cs
cs
in
loope
insb
popa
ljmp
push
fimull
xchg
fadd
test
scas
lret
out
jmp
inc
pop
push
pusha
xchg
lods
adcb
sub
test
dec
mov
imul
int
mov
sub
mov
xchg
push
mov
or
ja
aaa
aad
push
fs
fldl
xor
hlt
mov
mov
shl
push
add
mov
loope
sbb
cmp
les
lds
jb
jbe
in
idivl
cmp
bound
cmp
clc
sub
shll
mov
movl
repz
clc
enter
mov
in
mov
shl
dec
pop
pop
cmp
xchg
push
shl
jnp
popf
pop
inc
push
pushl
mull
xchg
orb
rcr
stc
mov
pop
push
pop
out
inc
jmp
inc
xor
inc
pop
in
mov
jae
mov
lret
scas
in
shrb
cmp
adc
je
cmp
mov
inc
mov
testb
movsb
jns
lahf
cmp
adc
jmp
mov
dec
lcall
mov
mov
cmp
popl
fldt
adc
divb
test
test
add
or
mov
mov
push
mov
push
sub
fs
or
push
cmp
clc
icebp
cmp
in
or
dec
add
cld
imul
rolb
xchg
inc
and
jno
dec
mov
sbb
icebp
pop
fsub
adcl
lret
ds
inc
and
xchg
and
cmp
push
bound
xor
xchg
inc
fnsave
cmp
fs
popf
mov
call
mov
xlat
mov
xchg
pop
ja
scas
dec
outsl
push
insb
aaa
movsl
cwtl
xlat
and
or
sub
stos
rcrl
xor
jp
or
fldenv
xor
jnp
rcr
xchg
mov
cltd
movb
mov
into
ljmp
test
mov
xchg
test
vmovaps
popa
pushf
push
shlb
jne
ret
lret
and
aaa
pop
push
pusha
mov
mov
sysexit
divl
insb
jae
mov
scas
out
jmp
cmp
inc
and
mov
dec
pop
dec
inc
rcrb
mov
ret
or
push
add
jnp
cmp
fstl
sahf
sub
sbb
lcall
push
jecxz
jae
dec
and
hlt
adcb
add
leave
dec
cwtl
add
jo
call
jno
inc
enter
push
paddusb
push
in
pop
add
mov
mul
inc
mov
lods
les
inc
xor
outsb
icebp
dec
cmc
inc
je
in
lea
out
dec
mov
icebp
and
fmull
clc
sahf
or
push
xchg
or
adc
jle
int
pop
jle
shr
loopne
cli
shlb
test
ret
and
cli
mov
js
mov
dec
outsb
psllw
out
hlt
add
xchg
shrl
push
cmp
scas
add
shrl
scas
push
ds
pop
mov
nop
gs
mov
in
push
jl
dec
mov
daa
outsl
fsts
icebp
out
xor
and
jnp
decl
repz
aas
gs
mov
dec
fs
jae
js
lods
inc
adc
cmp
lea
jo
rolb
xchg
push
mov
mov
pop
xchg
mov
cmp
lea
push
popf
cmp
or
add
mov
out
enter
mov
mov
mov
push
movsb
pop
in
jo
movsl
sti
jg
dec
mov
mov
lea
or
lahf
icebp
ficompl
mov
fstpt
mov
sbb
inc
inc
jnp
adc
cli
ss
and
pop
lcall
jns
fs
xor
mov
inc
push
frstor
fwait
leave
mov
sub
fmuls
loope
call
push
or
inc
jmp
aas
mov
xchg
sbb
cmp
sub
loop
in
xchg
je
popf
xchg
sbb
push
dec
dec
push
jmp
stos
push
mov
lahf
ret
sub
xchg
data16
cmp
and
js
jp,pn
pop
jp
xor
popf
xor
lret
fisttps
mov
mov
or
mov
mov
in
cmpsl
sbb
sti
inc
js
mov
push
sbb
fnstenv
pop
loopne
test
popf
xor
les
jmp
rcr
movsl
inc
mov
pop
loope
dec
push
dec
add
push
jl
cmp
jmp
lcall
pop
sub
aas
adc
add
or
mov
gs
mov
testl
push
aam
mov
mov
xchg
fwait
xchg
mov
repz
mulb
push
or
iret
add
or
push
loope
cld
inc
sub
xor
dec
cmc
test
adc
cmp
push
mov
adc
nop
and
fimuls
push
mov
inc
mov
dec
push
sub
loopne
stos
dec
jbe
mov
lar
insb
or
aaa
cmp
loope
inc
stc
jnp
ljmp
aas
cmp
dec
push
pop
lea
xchg
loop
xchg
inc
fiaddl
and
jbe
mov
and
int
jo
mov
repnz
sub
ret
cmc
sub
loopne
sub
sub
push
mov
insb
dec
lock
stos
dec
ret
or
jl
push
add
mov
inc
dec
mov
sarl
insb
fmull
out
and
add
loope
stos
adcl
dec
mov
xchg
cmp
ja
cli
xor
lcall
inc
push
jmp
cwtl
mov
imul
jg
notl
test
cltd
ret
mov
inc
push
mov
daa
pop
stos
cli
cli
popa
push
out
sub
adc
ret
cwtl
mov
inc
scas
pop
cmc
dec
push
gs
xor
dec
or
and
mov
jmp
jmp
pop
negb
push
cltd
push
insl
mov
pop
les
cmp
or
outsl
out
sbb
or
jae
stc
lods
hlt
mov
sub
rcr
mov
repnz
sahf
dec
inc
sub
inc
call
shlb
cmp
xchg
mov
or
xchg
xor
dec
shlb
sub
enter
das
or
or
xor
xchg
or
lds
and
imul
inc
stos
push
test
lock
sbb
jle
in
sub
pop
pop
mov
xchg
test
test
repnz
push
std
js
pop
ds
rorb
scas
mov
pushf
mov
int3
jg
mov
icebp
jl
fmul
lods
nop
arpl
dec
and
data16
or
stos
jno
addl
sbb
stos
sahf
clc
push
cld
sbb
pusha
adc
or
mov
ja
fisttpll
cli
add
mov
mov
femms
mov
adc
pop
dec
fs
sbb
into
mov
dec
cmp
or
xchg
pop
or
ljmp
inc
jne
test
inc
cmp
xchg
ljmp
jg
outsb
inc
lea
popf
push
xchg
dec
cltd
ds
fadds
int3
testl
into
test
pop
cld
data16
jmp
shll
aas
dec
cmp
pop
mov
fisubs
negl
mov
or
mov
mov
push
les
push
int3
leave
scas
jecxz
xchg
jl
fstpl
push
jg
sahf
je
mov
cmp
cld
pushf
insl
outsb
xor
cmova
mov
dec
mov
js
aas
movsl
xchg
outsb
push
xor
xchg
sub
jne
in
into
in
pop
add
hlt
jbe
inc
push
test
loopne
in
mov
sbb
sub
orl
ja
sbb
and
sub
jg
aas
mov
les
mov
adc
jb
adc
es
jmp
xchg
int
and
push
push
xor
test
jg
add
pop
or
sbb
xchg
fscale
xor
stc
jl
test
sub
push
xlat
xor
aaa
and
and
or
xchg
call
fimull
imul
cmpsb
jnp
sti
jp
xchg
jmpw
pop
fldt
xor
pop
push
mov
negb
rclb
inc
push
adc
sbb
aam
inc
adc
and
call
push
cmp
sub
adc
xor
divl
fidivl
pop
aas
repnz
mov
pop
dec
lods
jno
cltd
push
jmp
xlat
push
ret
pop
rcll
sti
push
xorb
xchg
xlat
loope
mov
mov
cmc
mov
dec
mov
pop
pop
jl
into
mov
outsb
movups
inc
dec
lock
jp
js
ret
cs
cmp
mov
mov
mov
mov
dec
or
xchg
clc
aas
notl
dec
dec
mov
fcmovb
lea
iret
add
loop
lcall
mov
hlt
popf
movsl
jp
jmp
stc
test
jo
jne
xor
fildl
pop
or
sahf
cli
insl
into
jns
int3
push
cmp
ss
les
mov
xchg
cmp
popa
out
sub
ret
mov
adc
jle
lds
iret
add
movsl
xor
int
es
cli
push
mov
int3
les
xchg
js
mov
pop
out
int3
mov
js
push
imul
hlt
test
jecxz
icebp
gs
xor
stos
mov
mov
test
popf
subl
mov
or
addl
call
into
imul
xchg
inc
lahf
stc
int
push
arpl
pop
jmp
int
out
mov
mov
xor
shl
xor
mov
mov
jmp
jge
inc
pop
pop
push
cld
mov
adc
fidivrs
or
mov
outsl
jecxz
out
adc
bound
fwait
mov
mov
jmp
fcoml
xlat
pop
pop
or
call
sbb
dec
popf
pop
lahf
iret
inc
rcrb
inc
subb
inc
push
clc
jae
mov
adc
imul
jle
mov
adc
or
mov
out
orb
addl
dec
or
movsl
jns
sub
sub
pusha
call
outsb
jle
dec
ret
mov
sub
je
lock
xor
mov
jge
dec
lret
sbb
repz
sbb
or
or
or
pop
cli
cwtl
inc
or
fldcw
push
out
fidivs
imul
lahf
mov
and
sub
and
mov
dec
or
and
das
push
bound
push
xor
out
xchg
repnz
lods
xor
mov
movsl
dec
sbb
mov
jnp
xchg
dec
pop
lods
mov
lock
leave
push
adc
or
adc
adc
and
jle
mov
pusha
adc
cmp
cs
andl
aam
rcrb
push
sbbb
neg
insl
lahf
in
cwtl
insb
mov
daa
push
cli
jg
stc
add
mov
or
cwtl
in
mov
dec
mov
mov
and
pusha
gs
xor
jp
cmp
lret
add
push
cli
fcompl
je
sbb
mov
xchg
adc
push
enter
push
xor
mov
ja
mov
jb
xchg
in
lret
pmovmskb
mov
std
jmp
fwait
cs
leave
gs
xchg
sbb
stos
xchg
ja
and
mov
test
adc
mov
ret
imul
pop
or
pushf
add
push
jnp
jg
sti
fistl
rcrl
adc
out
stc
sti
test
inc
sub
mov
sub
mov
inc
xor
or
mov
and
xchg
imul
rolb
inc
pop
mov
aad
push
cmp
xchg
sub
scas
lods
pushf
mov
inc
and
adc
lea
push
push
cmpsl
xor
int3
pop
xchg
data16
jns
dec
adcl
fldenv
sbb
imul
ja
lods
adc
xchg
mov
jo
sahf
xchg
cmc
mov
out
les
js
xor
divl
stos
test
popf
popa
cli
stos
jb
lds
cmp
aas
inc
ds
in
aaa
repz
int3
gs
sahf
rclb
xchg
imul
mov
mov
adc
mov
movsb
xor
gs
pop
mov
jo
mov
mov
out
rcrb
fiaddl
je
cmp
adc
sbb
dec
aas
scas
push
cmp
mov
push
repnz
jae
adc
in
sub
xchg
mov
and
xor
pop
add
or
mov
push
addr16
sbb
test
jge
cli
jne
pop
sti
rclb
ds
aaa
lahf
mov
stos
out
push
lea
mov
cs
jo
in
xor
flds
mov
es
inc
out
sti
fwait
adc
lret
lcall
jb
mov
movsb
jnp
loope
ret
std
or
rol
pop
jnp
mov
incb
sub
add
push
pop
enter
mov
icebp
int3
xchg
lret
stos
in
mov
imulb
push
pop
adc
jl
jp
out
push
insl
ficoml
enter
push
sub
decl
pop
cmovbe
pop
mov
xchg
ljmp
jnp
fs
cmp
movsb
outsb
push
imul
inc
hlt
push
lahf
cmc
lea
mov
out
js
xchg
icebp
jg
jmp
mov
jmp
jg
fcmovb
push
mov
mov
xor
push
push
and
aam
stc
xchg
dec
add
add
rcr
lret
addr16
inc
rorb
addr16
cld
xor
out
test
or
sti
fstps
pop
xchg
cwtl
fdivl
cmp
cs
mov
pop
ret
inc
xlat
out
push
pop
push
cmpb
jmp
inc
fidivs
movsb
jmp
xor
hlt
jno
sbb
stos
fimuls
and
or
fwait
pop
xchg
lods
adc
jne
aaa
mov
and
jmp
cmc
pop
fildll
cmp
xchg
hlt
mov
mov
stos
xor
popa
dec
mov
adc
dec
push
jo
jmp
and
mov
inc
fisttpll
addr16
ret
std
mov
adc
sahf
add
int3
push
mov
pusha
xor
xchg
jmp
sub
outsb
xchg
sub
arpl
cmp
pop
inc
mov
shrl
jmp
addr16
loop
xchg
int3
arpl
pop
lret
mov
into
mov
idivb
iret
jge
sub
aam
push
xchg
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
jmp
popa
jb
clc
xchg
pop
and
push
pop
jne
xchg
mov
mov
or
add
or
adc
std
xchg
dec
mov
push
outsl
aad
es
call
xchg
mov
call
xor
dec
jnp
pop
mov
adc
push
ret
in
stc
or
mov
adcb
inc
fs
adc
shlb
inc
imul
mov
aad
fs
leave
call
stc
js
jge
and
aam
jo
jbe
and
std
mov
inc
add
scas
sub
je
sub
jns
jmp
adc
xor
mov
jle
lds
push
clc
dec
int
jl
mov
rcl
xchg
lods
jle
jle
adc
fistps
cs
in
cmp
add
xchg
test
add
dec
and
sbb
in
add
or
rolb
lock
ja
xor
and
fildl
xchg
addl
sbb
insb
inc
inc
aad
jnp
xor
insb
fwait
cmpsl
addl
or
sarb
xchg
dec
pop
dec
adc
xchg
nop
test
mulw
js
mov
inc
inc
xchg
mov
mov
frstor
stos
xchg
mov
lahf
bound
lahf
pop
call
xchg
inc
inc
pushf
dec
pop
lahf
dec
cmp
adc
jl
ljmp
jle
push
mov
fstpl
adc
cmp
insb
push
sub
xor
nop
dec
mov
fwait
pushl
bound
insb
iret
cmp
mov
mov
aaa
jo
or
xor
scas
lret
add
xchg
fdivl
inc
psrlw
in
inc
aad
out
test
cmp
dec
or
insl
inc
add
rclb
push
cmp
icebp
xor
jle
sahf
ret
mov
push
and
or
cmp
aam
in
and
and
pop
push
mov
adc
dec
push
cmp
sbb
lds
xlat
sbb
sub
in
xchg
push
lods
and
or
mov
push
stc
aam
frstor
clc
movl
mov
lods
dec
jnp
fcomp
in
lret
mov
lea
inc
repz
add
mov
pop
inc
imulb
das
fbstp
or
mov
repz
es
xor
xor
dec
lahf
jbe
ljmp
sahf
dec
sub
imul
in
lds
bound
xchg
sbb
les
adc
sbb
cmpsb
arpl
sub
jo
pop
push
mov
and
ss
or
scas
jnp
jle
dec
dec
pop
jo
inc
movsb
push
popa
pop
mov
imul
std
mov
xchg
mov
ret
mov
lahf
hlt
and
pop
lcall
js
imul
insb
lods
aam
sub
and
pop
sbb
cld
js
add
push
mov
lcall
sbb
aaa
sub
cmc
mov
pop
push
sbb
aaa
jo
popf
les
jne
rcll
movsb
and
subb
pop
push
mov
inc
or
dec
adc
mov
add
dec
repz
adc
pop
fs
insl
xor
in
sbb
aaa
dec
icebp
xchg
jb
push
inc
mov
lret
inc
mov
adc
sbb
mov
pop
inc
mov
push
loop
cmp
and
cmpsl
and
adc
inc
rcrl
addr16
lods
cmpsl
jbe
or
imul
jbe
mov
adc
outsl
xchg
fs
negl
xor
push
cmc
out
stos
popf
xchg
bound
pushf
sti
xchg
loope
test
negb
mov
lahf
xor
sbb
jmp
sub
sbb
inc
add
insl
dec
and
ret
inc
inc
dec
ds
popa
rclb
movsb
in
xchg
adc
push
mov
or
dec
prefetchw
pop
popf
pushf
jne
les
xchg
xchg
cmp
cmp
and
mov
cltd
mov
pop
aas
jg
outsb
mov
popa
mov
adc
rcll
inc
push
loopne
inc
sub
inc
es
aaa
pop
mov
sub
iret
enter
testl
jo
aas
mov
dec
daa
inc
lahf
sub
std
jmp
dec
ss
pop
pop
cmc
lods
lods
inc
cmp
pop
sub
and
fisubs
push
dec
negl
mov
inc
jmp
ljmp
jbe
mov
dec
mov
adc
js
jb
adc
xlat
fs
jg
sarl
cmpsl
jle
cmp
push
fsubrs
mov
pop
imul
ja
xchg
jg
out
mov
aam
mov
mov
xor
sti
pop
cmpsb
inc
pop
popa
scas
stos
rclb
jo
scas
jmp
fadds
lcall
mov
lods
cli
xchg
xchg
ja
jecxz
leave
iret
hlt
lods
movsl
xchg
rolb
in
inc
or
shll
ret
mov
jle
loopne
and
mov
jmp
ss
jp
pop
lea
mov
sbb
arpl
int3
call
inc
xor
repnz
or
and
mov
dec
test
inc
xchg
aad
fsubrp
adc
add
push
adc
inc
adc
xor
mov
mov
xor
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
jmp
outsl
or
shll
xchg
daa
ja
sbb
cmpsl
mov
or
iret
add
or
or
fidivrl
arpl
or
icebp
lds
imul
push
outsb
mov
adc
cld
fimull
not
jmp
sbb
test
popf
sbb
xor
inc
inc
lea
test
fsubs
mov
inc
cmp
imul
insb
pop
mov
mov
ficompl
dec
mov
mov
pop
fildll
mov
cwtl
in
inc
movsb
rorb
in
out
mov
leave
jo
jp
sub
mov
shl
sub
jbe
pusha
mov
sahf
adc
cmp
jp
aam
mov
mov
mov
sahf
jnp
xchg
jecxz
lret
sarl
add
fstpl
and
inc
in
pusha
cltd
and
ds
mov
mov
adc
lock
shr
shl
dec
push
xor
pop
mov
rcrb
repnz
mov
or
popa
in
xor
bound
fimull
xchg
jnp
mov
aad
jge
shrl
out
sahf
mov
xchg
sub
arpl
das
daa
dec
xor
daa
fdiv
imul
xchg
imul
lahf
ja
sbb
jne
mov
cmp
push
add
subb
push
stos
in
dec
lret
xor
push
fsubrs
sbb
sub
cwtl
arpl
scas
add
shrl
into
imul
sahf
lock
push
stos
movsb
sahf
adc
pop
in
call
mov
inc
ret
cmp
in
insb
jecxz
and
stc
std
fidivrl
jns
sbb
jae
xchg
in
xorb
ss
mov
jb
push
stos
repz
les
mov
sti
shll
mov
aad
or
xor
inc
aad
addr16
mov
xchg
out
mov
fstl
call
jmp
scas
xchg
mov
ljmp
adc
lret
add
xlat
inc
sbb
push
aaa
mov
cmp
je
jnp
fnstcw
jle
lods
mov
mov
pusha
icebp
outsb
test
gs
push
jne
mov
sub
xchg
cs
int3
icebp
jne
mov
inc
lret
cmc
stos
push
push
cltd
orb
inc
lahf
aas
test
jmp
pop
xor
adc
adc
cs
xor
jecxz
cmp
lods
mov
mulb
inc
mov
xchg
aam
pop
pop
clc
jno
icebp
dec
in
stos
movsl
hlt
mov
jmp
and
std
adc
dec
leave
stos
popf
xlat
and
xchg
push
push
inc
cwtl
cmp
mov
inc
les
shrb
xchg
in
jle
sti
dec
push
pop
push
imul
jnp
notb
sbb
mov
push
add
pop
mov
iret
pop
sbb
lret
add
lock
jmp
xchg
aad
call
inc
xchg
push
leave
sarb
ret
ds
pop
mov
dec
or
or
push
idiv
imul
dec
push
cltd
aam
push
xchg
cmpsl
popa
cwtl
mov
es
or
sbb
pop
repnz
push
lcall
sub
scas
and
fbstp
scas
popf
das
clc
ja
mov
jg
cmc
jbe
pop
mov
stos
imul
in
jnp
outsb
pop
dec
pop
repz
add
xchg
gs
xor
jmp
xor
mov
out
mov
rclb
and
mov
xchg
movsb
nop
fistl
mov
jb
mov
xchg
jno
sub
jb
jg
and
xchg
out
add
dec
hlt
movsb
mov
adc
fstp
mov
pop
cmp
mov
mov
fldcw
sbb
push
loopne
aad
mov
xchg
mov
dec
mov
inc
dec
lds
lcall
clc
push
add
sar
les
adc
xchg
repz
cwtl
rcr
ja
int
sbb
out
jmp
cmpl
lcall
in
nop
inc
enter
pop
xor
lods
mov
add
in
outsb
cltd
mov
mov
dec
loop
jo
xchg
xchg
mov
scas
bound
aam
inc
pop
xlat
aaa
test
ljmp
movsl
mov
popf
sub
mov
popf
popf
jne
cmp
xor
mov
dec
addr16
mov
es
sahf
andl
cs
ja
push
mov
xchg
arpl
test
cmpsl
nop
ss
and
xchg
iret
xor
popf
or
testb
mov
rcrl
gs
jnp
hlt
jge
enter
scas
dec
and
loop
or
aad
rcll
je
mov
push
adc
aad
outsb
jb
jno
push
xorb
pop
rcr
mov
mov
xor
lock
xor
es
adc
and
addr16
cltd
mov
mov
stc
push
addr16
lods
mov
jge
sbb
es
pop
fs
fdivp
mov
pop
push
adc
movsl
subl
xchg
mov
jmp
in
cld
adc
daa
xlat
pop
pop
stc
push
mov
setge
or
add
or
cli
and
ficomps
stos
dec
ficoms
movsb
push
xlat
rolb
add
in
mov
cmp
sbb
sbb
mov
pop
cmp
push
jl
mov
lock
mov
shr
mov
dec
add
sub
jmp
xor
mov
mov
scas
pop
dec
inc
inc
mov
clc
lcall
mov
lock
setnp
test
lahf
shlb
mov
subl
repnz
fcompl
jge
loope
mov
pop
lds
repnz
cltd
xchg
dec
fwait
inc
sahf
aad
test
pop
addr16
push
cwtl
test
xchg
dec
inc
int
push
inc
hlt
mov
cmpsl
icebp
pop
push
mov
test
add
xlat
mov
dec
or
repz
dec
insb
dec
pusha
cmp
imul
insl
idivl
push
xchg
addr16
adc
test
ds
jo
imul
orl
ds
in
mov
enter
dec
inc
insb
mov
mov
xchg
sti
nop
idivb
sub
and
imul
ret
stos
jp
pop
pop
or
movb
je
insb
cmp
aas
add
shlb
xchg
dec
pushf
fxch
outsl
cwtl
js
xchg
push
jns
lods
add
inc
xor
bound
fidivrl
imul
lods
flds
out
jmp
adc
dec
push
cld
jl
es
xchg
outsl
fsubr
je
in
lods
lahf
popf
dec
sbb
cmp
and
sub
xor
sbb
rolb
pop
lea
adc
push
or
cwtl
pop
mov
mov
xchg
push
xchg
push
div
stc
mov
sub
jp
movsl
mov
mov
add
push
out
aaa
sbb
adc
sub
fbstp
pop
mov
lret
xchg
daa
jae
iret
xchg
sbb
cli
mov
mov
push
add
dec
ljmp
out
or
outsl
dec
dec
loop
push
push
and
into
xchg
stos
mov
sbb
test
xchg
cmp
add
mov
iret
fsts
stos
dec
cltd
pop
pop
inc
fdivs
cmpsb
scas
xor
rolb
sbb
out
loop
mov
xor
call
setae
in
jmp
add
fistl
cmpsl
or
mov
subb
enter
lcall
pop
mov
mov
jae
les
xchg
xor
fnstcw
lret
pop
xchg
filds
cmpsl
imul
add
add
cld
mov
aaa
mov
loopne
dec
fstpt
insb
repnz
je
sahf
enter
and
cmp
or
jle
mov
mov
loopne
or
shll
xor
dec
movsb
cmpsb
inc
popa
and
addl
ret
aas
loope
push
stos
cwtl
pop
lds
sub
imul
xor
cmova
add
jae
xor
ret
mov
cwtl
jno
add
cltd
adc
jns
or
fisubl
push
cs
xor
adc
sub
jb
ret
jecxz
cmpsb
cmp
jmp
je
mov
out
mov
add
cli
and
mov
testl
dec
cltd
out
incb
stos
xchg
mov
lds
dec
mov
in
into
xchg
sbb
fnsave
jne
repnz
pop
clc
fdivs
xchg
insb
sti
or
push
jmp
jge
ss
sbb
outsb
loop
out
lock
or
mov
out
lcall
cmp
xor
add
mov
xor
cmp
dec
shrb
adc
push
xor
mov
cmp
jno
and
addr16
cltd
enter
lahf
movsl
mov
pop
fstpl
pop
adc
mov
sbb
pop
outsb
mov
dec
push
int3
je
ds
xor
push
scas
cmc
mov
and
in
orl
dec
cmp
iret
not
aas
xor
stc
sub
and
sbb
adc
jecxz
inc
mov
into
and
mov
adc
imul
pop
or
xor
fsts
out
out
mov
mov
pop
and
lret
pop
cmp
inc
repz
mov
adc
mov
sub
in
mov
sahf
jmp
mov
cmp
xlat
xchg
pushf
out
cmpsb
pop
lret
imul
jp
push
pop
adc
ja
addb
mov
rorl
jge
xchg
aam
add
shl
push
lahf
pop
inc
jecxz
das
sbb
mov
outsb
test
loopne
mov
adc
add
movsl
in
mov
mov
sbb
xchg
inc
testb
xchg
adc
mov
ret
xor
movsl
outsl
adcl
js
das
stc
mov
adc
xchg
and
in
push
and
mov
add
pop
cltd
push
push
xchg
mov
xchg
in
hlt
outsl
mov
sti
xor
outsb
mov
mov
jmp
int3
add
push
lds
sbb
rolb
mov
mov
xor
shr
mov
xor
shl
jmp
sbb
adc
mov
pop
sub
iret
add
or
rcll
rcrb
les
test
stos
addr16
ret
xor
scas
cmp
mov
test
or
imul
fiaddl
push
inc
jo
cmp
mov
mov
cltd
adc
jne
out
push
rcr
sub
faddl
sbb
cmpsl
jmp
xchg
inc
dec
jae
movsb
add
and
xchg
adcb
ret
mov
cmpsl
or
ljmp
adc
or
lahf
jmp
mov
nop
hlt
test
or
mov
sbb
cmp
into
ror
xor
xor
or
scas
mov
or
xchg
outsl
addl
mov
lds
mulb
movb
xchg
stc
cltd
jne
clc
cld
and
mov
out
xor
mov
cmpb
iret
insl
std
xchg
xchg
xor
popf
add
xchg
xchg
testl
ret
cmp
rcrl
insl
mov
shll
dec
mov
jp
insb
dec
inc
aas
roll
outsl
pop
push
mov
test
and
pop
mov
mov
scas
sbb
push
xor
lds
out
mov
imul
add
test
add
xchg
inc
lea
mov
movsl
jo
je
xor
into
rcll
mov
add
pusha
mov
movsb
inc
cs
push
dec
add
imul
inc
inc
xor
mov
and
push
dec
divb
xchg
push
jmp
ss
jp
loope
sahf
or
aad
aas
sub
stos
inc
subb
dec
pop
pusha
mov
mov
pop
ss
xor
pop
sete
or
mov
xchg
dec
movl
dec
loop
repz
rcpps
shll
or
addr16
ds
loop
shl
jb
or
push
or
call
pop
add
mov
sahf
cmp
mov
js
mov
ret
mov
popf
add
pop
push
mov
adc
dec
loope
lcall
add
jl
xor
loop
mov
fnsave
mov
xchg
or
mov
mov
add
jae
jbe
fsubrs
sbb
ljmp
addr16
push
xchg
shlb
scas
lock
cmp
mov
mov
decl
dec
mov
repnz
adc
insl
das
jmp
cmpb
pop
cli
repnz
mov
aas
sub
lock
jp
and
dec
xchg
bound
jle
lahf
mov
push
inc
sbb
adc
movsb
stc
dec
ret
in
arpl
sub
ds
dec
cs
xorl
dec
mov
pop
outsl
ds
mov
ret
pop
sbb
jb
das
jb
pop
loopne
cmp
pop
inc
hlt
into
mov
in
push
sbb
push
bound
pushf
add
fsubrl
add
cmpsl
mov
mov
dec
ret
push
lea
jno
pop
push
sti
loop
sbb
dec
sub
pop
jo
push
mov
ja
push
mov
xor
inc
sahf
push
inc
push
push
scas
mov
cld
xchg
add
stc
shrb
roll
inc
jmp
ss
jbe
rorb
inc
in
rorl
xor
cmp
mov
sbb
mov
mov
sub
aaa
adc
dec
ja
cltd
push
adc
jge
aam
test
lods
or
xchg
push
fwait
hlt
ds
dec
mov
jmp
enter
mov
fisttpl
into
inc
cld
lods
test
pop
cmp
fiadds
push
add
test
xor
mov
sti
mov
inc
cmp
dec
leave
cmp
clc
ret
inc
jge
inc
in
xor
mov
add
rclb
push
cmpsl
cmpsl
aaa
pop
pop
divl
enter
and
fistl
push
adc
push
in
xlat
lcall
sti
fistps
ss
js
gs
xor
mov
cmp
jle
stc
adc
repz
movsb
cltd
mov
xchg
and
icebp
jns
push
dec
push
and
sub
test
les
loopne
jl
fildl
stos
fcmovnu
dec
sarb
nop
dec
inc
mov
lcall
cwtl
sub
dec
jcxz
jmp
test
pop
dec
les
cmp
enter
enter
mov
cmp
adc
stos
push
sbb
inc
out
scas
fistpl
cmp
xor
lock
pop
leave
push
jecxz
mov
sbb
inc
mov
push
xchg
outsl
push
mov
xor
mov
ret
test
and
cld
js
add
or
je
into
cld
adc
inc
add
inc
xchg
fsubrs
repnz
pushl
scas
mov
lods
cli
es
subb
pushf
das
cli
push
mov
cmpsl
mov
in
pop
or
mov
and
idivl
dec
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
jmp
add
cmp
adc
sti
add
clc
popa
jl
or
iret
add
or
jne
cld
cmp
jle
icebp
mov
add
mov
fmuls
and
outsl
inc
mov
cmp
jmp
test
mov
push
bound
insl
loopne
inc
push
or
data16
int3
movsl
push
jbe
sahf
add
and
add
lahf
cmp
xchg
daa
aaa
lea
adcb
ss
dec
andb
mov
sub
enter
mov
sub
mov
dec
mov
sub
repz
and
sub
pop
pop
cmp
fistl
mov
pushf
popf
xchg
sbb
testb
mov
dec
sbb
push
sub
xchg
push
ss
aad
mov
mov
jecxz
cvtpi2ps
arpl
in
iret
aas
add
inc
push
xchg
xor
add
xchg
test
mov
pop
loope
mov
dec
rcll
cmp
xchg
pop
mov
data16
push
sbb
into
imul
or
and
insl
jae
mov
test
into
sub
lea
add
clc
push
clc
out
cmp
jecxz
movsb
pushfw
xchg
icebp
lock
adc
jne
dec
dec
mov
pop
mov
outsl
mov
ja
or
xor
into
mov
and
data16
pop
leave
adc
inc
addr16
xor
dec
dec
pop
sub
xchg
aas
mov
lret
jl
fisttps
mov
mov
mov
push
lods
cmp
in
fiadds
jae
jnp
xchg
jbe
dec
xchg
imul
mov
add
mov
inc
jno
rcrb
mov
push
lret
scas
jmp
fcmovnb
fisubl
negb
jg
ljmp
inc
xchg
pop
or
xlat
cmp
xchg
cmpsb
cmpsl
dec
xchg
cli
scas
pop
int3
aas
lea
pop
sub
and
dec
mov
mov
mov
fpatan
cmc
je
imul
js
movsl
push
xor
dec
in
jl
adc
hlt
adc
loopne
lock
ja
xchg
movsb
mov
add
nop
iret
sub
stos
pop
push
insl
xchg
dec
pop
add
out
or
add
xchg
xchg
xchg
notl
push
jbe
fs
js
push
jmp
in
or
loopne
sub
xchg
loop
lahf
push
int3
fs
loop
fists
popf
sbb
in
jnp
pop
test
jecxz
mov
stc
clc
aaa
aas
add
xchg
sbb
jb
int
fadds
stos
lock
add
and
and
movsl
jecxz
inc
mov
sarb
xchg
xor
out
rclw
xchg
sti
jp
hlt
in
or
push
xchg
or
cmp
cmp
or
call
or
jns
mov
mov
scas
ja
insb
loop
cmp
loop
aam
mov
dec
test
mov
fisttps
mov
xchg
or
pop
aad
scas
addr16
push
arpl
dec
cmp
cmp
scas
ret
xor
inc
popf
push
xlat
lds
les
and
jl
negb
mov
mov
push
sti
out
out
pushf
push
cmpsb
add
mov
pop
sub
xchg
mov
add
leave
mov
test
push
rorb
test
adc
add
mov
movsl
jb
mov
jl
leave
jl
shrb
mov
jmp
jecxz
pop
pusha
jl
push
sub
sbb
xor
dec
lock
call
xchg
sbb
nop
test
mov
add
aaa
call
negb
adc
pop
lock
and
fldl
adc
in
js
iret
lods
and
aam
nop
mov
ljmp
sbb
js
shr
push
sahf
inc
inc
jne
jo
lds
inc
pop
add
dec
aad
jg
push
mov
jae
rol
scas
repnz
imul
fildl
jne
cmpsl
and
push
push
mov
xlat
mov
test
and
aaa
shl
push
xchg
cmpsb
jno
cltd
outsb
out
sbb
sub
lcall
rcrb
mov
test
sbb
int
push
in
or
adc
loop
aaa
faddp
ja,pn
in
jno
fwait
bound
test
mov
aaa
ljmp
mov
lret
pop
test
sbb
scas
mov
dec
push
jg
out
imul
lds
lea
inc
nop
fildl
and
xor
fisubs
xlat
lods
call
cmp
push
jbe
orb
push
lahf
loop
mov
xor
aas
sbb
cs
movsl
sub
pop
fwait
mov
mov
xchg
int3
mov
xacquire
mov
sub
pop
sub
pop
repnz
cli
movsb
fs
cmp
lods
pop
jns
addps
adc
mov
fsubrl
adc
je
jb
xchg
sub
push
movsb
cmc
or
jns
xor
or
cli
adcl
or
sti
pop
inc
cmp
ss
enter
stc
cmp
out
nop
push
mov
out
out
shl
mov
mov
xor
mov
mov
xor
xor
jmp
stos
ret
and
rorl
subb
or
add
or
fcmovne
push
cs
lcall
cmc
jo
enter
adc
setnp
sbbl
mov
pop
cmpsl
xchg
ja
fistl
cmp
pop
adc
pusha
or
jmp
adcb
lods
fstps
sub
rolb
test
xchg
or
movsl
push
stos
inc
push
loop
mov
xchg
std
lcall
push
xor
push
sbb
push
cmp
cwtl
pop
enter
andb
arpl
add
mov
lods
sub
fldenv
pushf
mov
inc
fadds
dec
rcll
daa
xchg
push
insl
adc
jbe
dec
sbb
ret
pop
inc
cli
mov
jo
cmpl
jne
outsb
arpl
and
jmp
jg
or
xor
jp
or
xor
pop
xor
push
sub
imulb
mov
and
add
mov
jns
leave
jb
arpl
lret
cmp
test
inc
lret
adcb
mov
xor
xchg
rcr
mov
testb
xchg
sub
shrl
push
insl
push
mov
pop
jns
call
add
and
mov
pusha
and
jae
lock
stos
mov
mov
sub
or
data16
stos
lds
leave
mov
fidivl
adc
std
outsb
cmp
lds
xlat
repz
or
sbb
add
movsl
ljmp
push
je
stos
adc
pop
sub
mov
push
loope
push
flds
mov
loopne
xor
insb
insb
sbb
xchg
adcb
or
sbb
xor
int3
push
out
xchg
lock
sbbb
arpl
pop
xor
mov
fisubrl
fcmovnbe
cs
je
in
mov
xlat
clc
xchg
pop
je
and
or
int3
das
xchg
mov
mov
out
hlt
mov
enter
and
aam
call
aaa
mov
mov
dec
imul
fstpl
cmc
rcl
pop
icebp
bound
fimuls
jns
lcall
sgdtl
xor
mov
pop
repz
jmp
jecxz
pop
fmull
xchg
dec
xor
addr16
push
in
adc
jg
out
jp
xor
aad
jl
mov
and
or
popa
cmpsb
push
dec
cli
fstps
filds
push
fldenv
push
repz
into
scas
aam
repnz
push
sarb
or
mov
push
ja
mov
or
test
in
and
push
add
clc
add
push
pusha
lcall
adc
mov
addr16
leave
out
test
inc
jne
stc
xchg
pop
xchg
test
aas
imul
icebp
xchg
xor
dec
sbb
lcall
sbb
jne
xor
pushl
cmc
cmc
lods
add
or
jle
mov
dec
inc
cwtl
push
push
mov
dec
adc
jne
jp
or
sbb
or
push
xchg
push
mov
imull
push
insb
pop
pop
and
and
repz
jae
xor
push
jno
movsl
sbb
stc
pushf
pop
icebp
xor
cmp
je
jae
sub
adc
mov
lock
int3
roll
int3
adc
les
outsl
xchg
mov
into
add
aas
or
sub
push
or
loopne
loop
cmp
lods
pop
push
or
inc
mov
andb
or
pusha
bound
fistps
jno
cltd
leave
or
jecxz
mov
sub
movb
hlt
dec
and
or
test
mov
and
mov
sti
pop
lcall
mov
aam
enter
or
stc
outsb
dec
cmp
bound
cltd
xor
mov
dec
mov
jle
sahf
adc
push
mov
jb
out
bound
lea
out
lock
incb
daa
sbbb
sub
mov
jp
loopne
or
xchg
stos
roll
mov
and
pop
sub
pop
jmp
mov
ret
mov
mov
out
shlb
mov
vmwrite
fsubl
add
mov
mov
or
xor
pop
add
out
jmp
push
fsubr
jb
imul
and
ljmp
repnz
adc
addr16
icebp
jp
inc
pop
jne
stos
idivl
enter
or
xchg
popf
test
xchg
mov
fistl
xchg
mov
bound
mov
pop
stc
xchg
mov
loopne
mov
lahf
mov
push
and
push
add
pop
inc
pop
jae
sub
sbb
inc
xchg
add
leave
lret
xchg
xchg
sub
push
aaa
shrb
ss
push
addr16
rdtsc
sahf
fdivl
mov
stos
cltd
mov
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
jmp
lea
xchg
enter
fildl
push
mov
imul
or
inc
movsl
js
mov
jp
sbb
inc
xchg
xchg
lret
cmp
imul
sbb
sbb
lcall
repnz
out
je
lret
dec
cltd
mov
xor
lds
push
mov
adc
xchg
xor
outsl
fists
repz
lods
pop
pop
pusha
paddb
jmp
cmp
or
push
xchg
jecxz
cli
cmc
mov
mov
in
mov
sbb
cmpsl
rorb
xchg
push
fistpll
insb
in
fdivrl
cmpsb
shl
das
push
loope
mov
xor
push
outsl
sub
roll
add
push
or
insl
ret
sbb
insl
lea
movsb
pop
push
aam
test
push
nop
lods
xlat
sub
mov
arpl
cmpsb
sbb
test
inc
cmpsl
leave
ss
adc
adc
addl
test
mov
xorb
pop
int3
out
and
into
insb
jmp
rcrl
push
lock
test
mov
mov
adc
js
addr16
loop
sbb
adc
movsl
inc
rolb
push
sahf
inc
adc
add
inc
lret
out
jp
ss
out
or
pop
xchg
jno
inc
popa
daa
out
mov
cli
bound
dec
jns
mov
lods
mov
cltd
clc
fcmovnb
in
pop
in
sbb
mov
mov
fsubrp
dec
add
mov
int
in
mov
xchg
enter
dec
sub
lods
sub
dec
js
mov
or
popf
xchg
scas
jle
test
adc
xor
fistps
out
imul
sti
fsubs
sub
cwtl
cmp
aaa
push
iret
sub
sahf
sbb
lahf
xlat
mov
sub
pop
hlt
aam
cmp
xor
xor
adc
movsl
cli
inc
xor
mov
fistps
cs
test
divb
pop
cmpb
dec
or
xchg
inc
xchg
inc
in
cltd
enter
push
fdivs
lea
and
loop
xchg
pushf
mov
jno
cmp
ljmp
push
bound
insb
stc
sbb
push
or
pop
mov
pop
dec
ret
mov
and
jbe
aaa
jae
repz
mov
jns
fistps
aad
bnd
aaa
jb
pop
bound
scas
in
xor
dec
dec
out
mov
dec
push
ljmp
nop
xchg
stc
cmpsl
lds
lea
pop
cmp
mov
jmp
mov
out
test
xor
xchg
mov
aas
outsl
in
jnp
iret
out
mov
dec
sub
in
jmp
and
dec
pushl
cmp
adc
mov
andl
push
jno
mov
and
or
cmc
movsl
movsb
data16
das
adc
scas
pop
inc
cwtl
push
sub
push
out
test
jl
stos
repz
xor
dec
adc
xlat
add
pushf
insl
jp
dec
sub
mov
loop
int3
xor
cmp
outsb
daa
inc
add
btr
lods
jmp
repnz
or
fdivrs
and
cmp
cmpsl
lds
lods
and
ficoms
lret
pop
lret
sub
or
mov
mov
cli
mov
sub
leave
outsl
icebp
push
mov
mov
das
inc
fistpl
adc
test
sub
adc
sub
push
push
sbb
stos
ja
popf
scas
cli
lea
out
jns
or
adc
xor
xchg
push
add
jne
dec
insl
or
sub
xorl
push
add
pop
pop
sbb
js
jg
fiadds
mov
enter
cmp
out
fdivrl
stos
addr16
in
in
push
int3
pop
inc
adc
les
xchg
mov
dec
enter
clc
mov
jns
imul
pop
lcall
cltd
std
sarl
or
push
into
subb
iret
loopne
inc
cmc
addr16
jne
lcall
ss
inc
sbbl
push
in
xchg
sti
xor
insb
fstps
iret
xor
leave
push
add
xchg
out
xchg
add
jl
push
xor
add
adc
push
xchg
push
daa
ret
inc
mov
or
inc
xchg
and
in
push
xor
jns
arpl
stos
std
mov
mov
ja
mov
ds
cs
dec
and
aaa
mov
outsb
popa
lret
cmc
xchg
fisubs
or
xchg
mov
popf
push
mov
rcrb
stos
xor
push
adc
adc
insb
and
cmc
xchg
icebp
mov
mull
aaa
push
sbb
out
mov
enter
in
xor
add
or
lcall
or
imul
xchg
decl
sub
popa
shrb
fists
jb
inc
ja
jbe
je
xor
xchg
jge
stc
subl
into
fsub
sbb
mov
push
push
push
call
shld
mov
xor
or
mov
mov
jmp
ja
popf
adcl
pop
fisubrs
sub
mov
or
iret
add
or
cmp
mov
sub
testl
and
ret
mov
enter
popf
aam
int
imul
aaa
mov
rcl
sub
int3
clc
aad
push
add
inc
and
cmp
dec
dec
inc
je
pop
pop
stc
jne
iret
hlt
clc
out
mov
push
push
bound
lods
mov
insl
pop
adc
adc
xor
cmp
ficoms
rclb
and
mov
std
ljmp
mov
pop
jmp
ficompl
ja
fdivrs
and
jge
xchg
cmp
pop
in
mov
mov
mov
je
mov
js
and
nop
movsb
mov
xorl
lret
lods
aaa
into
movsb
cld
xchg
out
sbb
sar
mov
call
mov
cld
lret
out
test
adc
sub
sub
arpl
cmc
mov
xchg
pop
pop
cmp
jbe
shll
jecxz
aas
and
fiaddl
xchg
push
jmp
cmp
hlt
push
mov
out
rcl
push
and
xchg
ret
jns
lret
jae
insb
pop
fcomip
mov
out
add
adc
adc
jl
xchg
mov
subl
scas
shlb
xchg
outsl
ljmp
xchg
or
sahf
or
sbb
jmp
notb
mov
fiadds
cmpsb
out
iret
adc
dec
into
dec
cld
cmc
addr16
lret
pop
lret
and
insb
dec
add
rolb
inc
rcrb
adc
sbb
and
add
sbbl
lods
xor
mov
imul
mov
aaa
cli
or
cli
insl
add
mov
pop
fstpt
and
sbb
fs
cld
inc
in
add
loopne
ljmp
mov
sbb
xlat
xor
stc
jl
jp
or
sub
divb
pop
xchg
mov
add
push
outsl
shr
mov
add
mov
inc
sbbb
cli
pop
inc
mov
push
lret
jge
loopne
push
jg
iret
mul
mov
ds
or
cltd
push
sbb
adc
push
cli
or
dec
notl
inc
mov
jmp
adc
mov
dec
int3
lcall
push
mov
or
xor
xchg
push
sbbl
add
imul
pop
addr16
mov
jp
mov
lock
push
fwait
sbb
inc
dec
push
or
jge
into
xor
lock
mov
jp
pop
stos
mov
scas
repz
dec
cltd
sti
sahf
or
testl
adc
shll
mov
stc
scas
mov
mov
cli
xchg
hlt
cmp
mov
sub
in
repnz
shlb
inc
adc
cmp
pop
add
inc
jnp
addr16
sub
fstpl
outsb
jne
mov
cmp
outsl
jnp
mov
sarl
lea
adc
test
push
shrb
xchg
imul
inc
sbb
xchg
ja
les
mov
repz
loop
aad
mov
das
cmp
shlb
xchg
aad
lds
inc
push
aas
popf
out
test
repz
xor
jp
cmpsb
leave
push
rol
je
testb
cmp
jmp
sarb
adcl
stos
lret
xchg
xchg
les
xor
mov
inc
xor
mov
and
add
stc
sbb
or
lahf
sbbb
mov
fisubl
or
icebp
shr
aaa
lock
pop
jo
jnp
loop
stc
insl
icebp
mov
cmp
xchg
mov
mov
ret
push
in
pop
rep
jno
inc
pop
cwtl
and
xor
je
mov
leave
ss
bound
or
jecxz
mov
dec
leave
negb
nop
fisttpll
or
hlt
js
push
aas
sbb
push
lds
sbbl
sbb
adc
mov
popf
addr16
sti
sbb
or
mov
mov
mov
imul
ds
push
jbe
scas
add
jecxz
dec
sub
dec
aam
pusha
add
and
in
pop
andl
shlb
jbe
ficoml
hlt
push
inc
inc
cmp
icebp
cli
fisttps
cmc
and
std
pop
popa
sbb
fldt
or
sahf
cmp
fcompl
or
lea
xor
xchg
mov
adc
lods
xchg
popf
and
cmp
pop
xlat
js
aas
mov
repnz
shl
mov
cld
add
data16
sub
pop
ljmp
add
adc
and
sub
cmpl
xchg
or
pop
sub
out
orl
or
test
lea
icebp
and
mov
mov
popf
mov
lock
je
rcr
push
mov
popf
shll
out
xchg
in
je
movsl
cmp
adc
out
inc
xchg
xchg
or
cmp
addr16
or
loopne
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
jmp
pop
and
aaa
out
adc
push
imul
or
add
or
fsubrl
daa
mov
out
inc
cmp
sub
or
jnp
xor
loop
loop
push
add
ret
out
add
xor
and
and
in
mov
fdivrl
pop
sqrtps
push
sub
jle
xlat
fsubl
mov
push
push
lea
dec
out
mov
hlt
dec
inc
mov
push
dec
mov
dec
pop
and
fwait
push
dec
jo
and
and
stos
das
daa
imul
inc
xor
sbb
insl
push
xorb
pop
push
mov
out
dec
pop
jae
adc
aam
push
mov
subl
pop
mov
pop
push
pop
dec
and
fwait
mov
sub
adc
push
out
iret
popf
in
jnp
xchg
int3
push
fstp
outsl
out
pusha
mov
mov
add
and
sti
mov
data16
mov
sbb
mov
test
and
push
out
loopne
rorl
sub
jl
fdivrp
jge
add
xchg
andl
loope
jno
xchg
mov
testb
ret
mov
fistps
loop
in
cmpsl
mov
pop
mov
push
bound
sbb
orb
xor
adc
cld
jnp
or
addr16
mov
mov
xchg
aad
jl
push
jbe
dec
push
rorb
and
push
mov
adc
rorb
out
mov
es
jle
cmpsl
outsb
pushf
aam
sbb
adc
dec
push
dec
int
add
cmpsb
scas
lods
js
jle
mov
and
iret
lds
xor
or
arpl
shlb
push
lds
stos
out
aas
fdivrs
inc
bound
aam
or
iret
or
pop
xchg
sub
mov
lahf
rolb
xchg
aas
and
inc
sbb
pop
jg
mov
bound
aas
adc
sbb
cld
xor
push
mov
nop
cli
aaa
repnz
adc
lods
scas
pop
xlat
cmpsl
inc
pop
pop
sti
dec
aaa
idivl
gs
xchg
loope
sub
pop
pop
xor
jbe
sub
add
shrl
dec
stos
cmpsb
dec
out
push
outsl
mov
dec
jbe
push
pusha
mov
push
aas
adc
xchg
mov
mov
inc
mov
mov
inc
leave
adc
addr16
pop
push
lods
push
mov
add
in
dec
jp
cs
in
fcmovnb
and
cwtl
std
dec
pop
lcall
xor
fmull
fldcw
aad
jnp
or
lock
ficoml
add
add
repnz
pop
sub
add
ja
add
adc
data16
jbe
dec
add
sahf
fmuls
or
push
push
sarl
cltd
lret
cld
dec
scas
mov
ds
pop
ret
sbb
sub
out
add
ret
pop
dec
mov
sbb
mov
jae
lcall
lea
jns
push
stos
js
mov
rclb
mov
add
rol
and
push
jae
hlt
popf
repz
ja
lcall
pushf
sub
cmp
es
into
add
add
inc
pop
aas
sbb
pusha
loopne
xor
and
or
inc
lea
mov
aad
orl
lock
popa
add
or
mov
in
inc
mov
inc
imul
jnp
neg
addr16
scas
stos
into
mov
or
leave
notb
outsb
cltd
notb
adc
push
and
cmpsb
dec
mov
sub
sti
xor
mov
sbb
test
addr16
mov
push
aaa
pop
repnz
adc
int
mov
xchg
rclb
push
adc
cmpsb
scas
pop
push
adc
sbb
jecxz
xchg
sbb
fwait
xrelease
add
cmpsb
repnz
push
mov
jns
xor
std
loope
push
test
fs
js
mov
sub
add
mov
sbb
add
jle
daa
sub
add
pop
test
adc
test
outsl
imul
xchg
out
jl
pop
xor
in
push
outsb
fstps
xor
lret
mov
loop
test
and
in
adc
enter
jno
push
xchg
aam
add
shl
push
in
mov
sbb
jecxz
divb
pop
push
sub
mov
dec
xchg
sub
mov
inc
push
icebp
out
mov
jnp
adc
mov
and
scas
mov
fwait
cmp
fdivp
xorl
xchg
and
les
out
sarb
add
cmp
sub
jp
test
mov
sub
das
into
jo
inc
clc
adc
sbb
cwtl
mov
pusha
repz
les
es
lret
pop
or
adc
jns
cwtl
or
addr16
popf
mov
movsl
stos
pop
dec
outsb
in
jmp
mov
stos
lret
fldl
push
and
push
arpl
xlat
mov
jmp
fcoms
aad
aad
dec
xchg
xlat
mov
iret
add
or
rcr
stos
mov
jno
mov
or
and
das
leave
mov
mov
push
or
inc
les
pop
adc
jb
movsb
cwtl
movsb
sbb
in
leave
mov
fnstcw
loope
dec
sbb
les
pop
repnz
js
negb
add
sbb
add
mov
in
cmovbe
mov
cli
out
test
push
loope
leave
or
sahf
lret
jb
shl
pop
je
jg
mov
cwtl
leave
sub
les
popa
je
jecxz
js
push
scas
cmpsl
xchg
mov
jo
in
push
call
xchg
imul
hlt
cmp
dec
push
pop
jecxz
inc
imul
aas
ret
lcall
mov
pushf
jl
push
sahf
inc
inc
sbb
adc
or
sbb
subl
sbb
sahf
lret
adc
imul
aaa
and
add
aam
shr
fwait
xchg
pop
dec
gs
sub
jnp
stos
jg
jae
xchg
add
jl
pand
add
cmp
sub
pop
inc
and
jge
cli
int
lods
mov
or
inc
aad
dec
cmp
sbb
sub
clc
mov
xor
xor
dec
je
jg
int3
mov
sub
lahf
outsb
aaa
rcr
in
cmp
xchg
ret
xchg
dec
jae
and
stos
sar
cmpsl
cmp
stos
outsb
or
leave
mov
out
sti
sub
adc
int3
movsl
dec
add
push
jno
xor
sub
cld
jns
mov
xchg
shr
xor
xchg
ret
shrb
dec
icebp
iret
pop
loop
into
or
test
fwait
inc
xor
xor
push
test
sti
insl
add
mov
inc
mov
insl
fstpl
lods
nop
mov
scas
cmp
adc
pop
nop
xchg
or
jl
pop
ret
jg
and
add
ljmp
mov
js
cmpsl
xor
cs
push
test
stos
and
push
push
push
repnz
roll
mov
fwait
push
pop
fnstcw
push
test
xchg
lods
fistpl
jle
incb
sub
xchg
int3
ljmp
rcrl
les
mov
cbtw
push
jmp
pop
pusha
jo
mov
popf
pop
push
fiaddl
pop
scas
add
int3
lods
adc
xchg
sub
xchg
xchg
pop
and
pop
or
stos
adc
sub
js
scas
and
scas
out
add
test
roll
jnp
repz
imul
out
les
dec
cmpsb
rcrl
pop
imul
shll
pop
sti
fwait
cmc
or
inc
mov
iret
xchg
mov
dec
arpl
sub
mov
inc
or
mov
in
pop
sbb
mov
push
mov
jmp
mov
in
inc
cld
xchg
imul
inc
jno
imul
mul
sbbb
xor
std
add
mov
mov
sub
and
and
inc
movsb
out
mov
dec
cmpsl
rorl
sahf
xor
and
pop
mov
outsb
loop
mov
adc
mov
cmp
ss
ja
sbb
lahf
cmc
icebp
les
dec
cmpsl
lods
aaa
push
js
push
mov
sub
arpl
sbb
out
sbb
fsubr
mov
pop
fsubl
rorb
jp
movsb
cmp
lret
sub
ret
adc
in
ja
in
inc
xchg
and
sub
ret
test
rcll
push
out
sti
cmp
push
int3
lock
sub
out
sub
ret
les
incl
inc
dec
outsb
addr16
sub
jo
xor
or
dec
mov
mov
sub
xor
push
sti
xchg
pop
addr16
sbb
xchg
push
sub
clc
sti
mov
out
push
jo
test
jne
xchg
unpckhps
jns
pushl
test
test
mov
loope
jne
jb
fisubrl
in
dec
push
pop
xchg
cmpsb
and
xchg
outsl
and
inc
xchg
push
pop
scas
insl
sub
movsb
sub
and
loopne
xlat
sbb
test
push
jmp
ret
shlb
lods
pop
jg
mov
ljmp
push
out
sub
pop
jmp
leave
adc
mov
pop
mov
cld
sbb
vpaddsb
or
and
int
bound
fldl
sub
ljmp
and
jp
adc
mov
leave
dec
pop
cmp
pop
fld
jae
scas
ja
cmpsb
das
dec
scas
or
xchg
xchg
insl
mov
mov
mov
mov
subb
sub
xor
dec
call
and
jle
mov
sbb
lahf
js
fsubl
mov
ret
bnd
pop
clc
aam
lods
push
gs
leave
jo
sub
xor
iret
pop
rorl
and
je
mov
add
testl
sarl
daa
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
jmp
push
pop
sub
das
and
lds
iret
add
or
jge
jle
std
testl
mov
mov
es
arpl
iret
mov
pop
mov
sub
xchg
add
mov
or
push
mov
popa
jno
cli
outsb
add
jbe
xchg
push
adc
addr16
sub
mov
in
movsl
outsl
shlb
and
testb
ljmp
stos
in
mov
pop
push
xchg
dec
push
xor
mov
insl
insl
xor
clc
sub
jp
adc
mov
insl
cmpl
and
inc
rclb
sub
xor
inc
outsb
push
mov
gs
inc
push
and
aad
je
sahf
mov
es
push
cwtl
sub
popa
aam
addr16
sbb
add
roll
leave
ja
push
sub
das
sub
push
push
ja
adc
inc
or
insb
mov
test
outsl
mov
cmpl
cltd
bound
jb
sahf
sbb
aam
mov
xchg
jne
fcmove
push
or
out
jne
or
cltd
int3
mov
xor
add
inc
fsubr
lods
sbb
pop
jns
push
mov
mov
shrl
lret
and
jne
push
stos
jl
ret
lahf
jns
pop
mov
outsl
ss
aas
push
xchg
cmp
test
mov
mov
sbb
addl
aaa
mov
int3
push
in
sbb
inc
push
popa
jae
mov
xor
mov
push
pushf
mov
ljmp
pop
xor
push
out
mov
xchg
call
test
sbb
push
lea
xor
jl
outsl
cmp
adc
cli
icebp
push
xor
addr16
mov
orb
adc
mov
insl
push
jmp
lds
leave
push
das
mov
xlat
mov
stos
in
data16
pop
fstpt
push
sub
push
notb
scas
mov
sbb
sar
test
or
jb
cmp
push
mov
pop
mov
shlb
xor
faddl
sub
test
xor
fdivrs
mov
dec
jbe
mov
xchg
dec
xor
inc
add
sbb
xlat
jo
cltd
iret
mov
adc
dec
sbb
adc
jl
inc
xchg
lods
inc
ljmp
jb
stos
mov
jne
cmp
ret
enter
insl
std
aad
mov
sub
or
push
ret
dec
adc
jo
lods
mov
jo
test
pop
daa
xlat
sbb
out
mov
sub
or
push
push
dec
xchg
jne
fmuls
es
add
idiv
mov
adc
or
adc
jecxz
imul
xchg
mov
movsb
adc
mov
jg
dec
adc
out
cmp
xchg
or
push
dec
cmc
push
or
in
mov
mov
pop
fisubrl
or
cmp
loop
lock
js
sahf
repz
test
xor
fistpl
mov
dec
mov
cmp
cltd
les
into
mov
sbb
out
or
or
les
fcomps
cwtl
and
cmp
fsubp
call
mov
daa
lock
icebp
popa
pop
pop
lcall
lods
xor
ficoml
xchg
pusha
pop
mov
imul
xor
push
sbb
addl
ficomps
mov
push
jno
cmp
push
or
rorl
repz
iret
mov
jno
cmp
outsb
lea
pop
pop
into
lret
and
aaa
mov
aam
nop
ss
lea
outsl
jge
leave
xor
mov
stc
das
mov
inc
insl
sti
nop
pushf
sbb
sbb
xchg
fimuls
jle
rcr
or
lock
add
xchg
lcall
push
jmp
push
ljmp
pushf
in
ljmp
lcall
sti
pop
add
xor
pop
pop
dec
push
add
dec
inc
inc
out
fwait
push
and
or
into
push
fistpll
mov
ljmp
fstl
jle
sbb
inc
arpl
sub
fisttpll
jmp
add
inc
add
int3
test
adc
ss
imul
enter
push
or
popa
xchg
xor
push
test
mov
decl
lods
mov
pop
mov
and
add
ljmp
adc
jge
jg
jge
sub
mov
iret
inc
push
xchg
xor
arpl
adc
fs
aad
lret
icebp
mov
mov
adcl
xchg
les
dec
call
mov
rcl
popa
out
sahf
xor
shr
cmp
mov
rorl
in
aad
loopne
cmp
mov
dec
or
lret
xchg
xchg
fldcw
ficompl
mov
ffree
mov
lock
adc
mov
jae
fwait
add
sub
sub
mov
lods
enter
add
movsb
xor
jmp
xor
addb
mov
jne
mov
popa
xchg
xor
or
add
or
mov
movsb
sub
nop
jne
mov
pusha
test
test
cmpsl
inc
fstps
adc
popf
gs
cmp
jns
mov
cltd
mov
rcrl
popa
cli
dec
jecxz
mov
add
pop
fbstp
das
jns
fildl
mov
aas
pop
adc
out
sub
movsb
mov
imul
rorb
frstor
arpl
sbb
enter
adc
pop
pop
jp
mov
das
inc
dec
dec
add
dec
stc
push
or
sub
popa
nop
gs
movsl
pop
sub
popf
xor
call
mov
mov
add
sub
into
bound
xchg
or
cltd
sahf
jg
sbb
mov
int3
jle
add
and
lea
sub
inc
outsb
popa
lret
inc
enter
and
lcall
iret
fmuls
imul
sti
gs
or
inc
ret
paddusw
repnz
push
dec
std
pop
mov
inc
mov
popa
and
cs
js
imul
jmp
pop
aad
cmp
loop
test
xchg
mov
stos
outsb
or
mov
cmpsl
aas
scas
pusha
xchg
pop
cltd
imul
imul
add
sub
das
inc
pop
pop
add
stc
aad
call
addr16
stos
cmpsb
cmpsl
push
stos
loop
push
dec
jmp
lods
push
jbe
push
dec
test
cmp
ds
fisubl
out
mov
pop
test
cmpsl
cmp
and
popf
stos
iret
subl
jb
sbb
movsb
out
js
fwait
jp
stos
xchg
les
cmp
pop
or
outsl
xlat
sarl
lahf
push
out
cmc
fdivp
dec
daa
ret
jmp
pop
cmc
lods
popa
daa
xor
xchg
xor
jl
in
jle
jbe
push
sub
iret
cmp
cmc
data16
les
pop
movl
sbb
mov
movsl
xchg
xor
cltd
scas
loop
ds
insb
dec
pop
mov
imul
fstl
std
out
data16
je
js
mov
nop
iret
aas
mov
int
jb
pusha
jb
les
mov
faddp
stos
rorb
call
cs
dec
mov
stos
addr16
xchg
jg
in
mov
pushl
jb
sbb
jge
arpl
pop
jmp
testl
jg
or
das
pop
jo
sub
jg
mov
and
adc
shlb
test
lea
cmpsl
int3
mov
outsb
rclb
and
js
movsl
mov
rcrl
or
shlb
testl
jmp
lahf
dec
loopne
mov
scas
mov
push
loope
into
and
xchg
mov
icebp
aam
lret
inc
sbb
mov
jmp
movups
lret
cmp
aaa
xor
cld
push
popa
inc
mov
lret
push
ret
loop
movsb
clc
or
mov
jmp
int3
bound
neg
or
cld
xor
jno
cli
cmp
mov
insl
arpl
ret
in
gs
push
dec
dec
xchg
mov
sti
add
outsb
stos
push
ljmp
mov
sub
data16
pop
inc
ss
jecxz
repnz
iret
inc
loopne
inc
and
into
sahf
fimuls
mov
pop
xor
inc
push
das
pop
sub
sti
or
mov
shll
mov
or
rorl
push
or
js
mov
movsl
cli
pop
stc
dec
pop
mov
in
imul
xlat
out
sub
outsb
mov
adc
out
lret
xchg
fbld
enter
loopne
pop
jbe
or
sbb
into
xchg
jle
dec
aas
push
idivb
jg
xchg
fisubrs
hlt
xchg
popf
push
loope
pop
and
movsl
jge
xor
dec
cmp
pop
dec
sub
jecxz
lods
and
mov
loope
popa
push
lds
arpl
and
shll
sub
int
insb
xor
jnp
mov
scas
es
sarb
addr16
lcall
rol
dec
lods
mov
loop
repnz
cmpsb
testb
fisttpl
inc
subb
cmp
hlt
and
shll
pop
lds
repnz
xchg
jbe
bound
loop
xchg
sub
sub
movsl
punpcklbw
mov
dec
add
jno
test
sub
xor
orb
into
mov
add
incl
mov
xorl
out
sbb
pop
inc
cs
xchg
insl
xchg
iret
sbb
adc
jl
test
imul
aam
std
jmp
lds
stos
xor
dec
pop
movsb
xchg
clc
es
les
inc
mov
xchg
ja
or
aam
sub
adc
and
jp
adc
xchg
out
aam
sbb
rcr
outsb
push
pop
pop
mov
xchg
sbb
inc
jae
sti
dec
mov
lret
mov
std
rolb
cmpsl
fcmovbe
sub
ja
adc
jbe
dec
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
jmp
fbstp
mov
xor
and
ds
addr16
imul
mov
lds
mov
mov
xchg
and
xor
and
lahf
pusha
sbb
scas
cmpsb
scas
sub
imul
sub
mov
lahf
dec
inc
hlt
cmpsb
cmp
sarl
lods
xor
jns
add
shr
es
test
xor
lahf
mov
lock
adc
xchg
jno
lret
enter
pop
test
push
xchg
jnp
repz
adc
xchg
adc
cmp
pop
ds
scas
jl
mov
cmp
gs
inc
out
js
pusha
aas
jo
mulb
dec
pop
jae
inc
push
push
loop
push
dec
sbb
ja
orb
and
addr16
stc
jo
int
jle
and
aas
dec
das
mov
jne
and
mov
inc
mov
push
call
ljmp
dec
ljmp
insb
fdivr
mov
int3
mov
fimull
mov
stos
lret
jle
push
mov
shll
dec
xlat
std
movl
scas
xchg
ds
jle
sahf
fldcw
imul
sbb
add
sbb
jo
cmp
scas
xor
ret
sub
add
and
in
daa
xchg
xor
xorl
inc
adc
xor
jmp
sbb
sub
in
je
inc
mov
xor
inc
popa
gs
cmp
add
test
dec
outsl
jmp
adc
sub
sub
add
ret
push
and
xchg
fcmovne
cwtl
cli
mov
adc
mov
sbb
repnz
xor
xor
testl
in
jmp
xor
and
imul
pop
insl
popf
adc
into
dec
xlat
leave
daa
or
pushf
bound
push
mov
insb
imul
test
add
mov
clc
shlb
cmp
ret
imul
les
aad
push
sub
adc
mov
stos
inc
and
orb
fwait
pop
in
mov
cli
fucomip
addr16
cltd
cltd
pop
adc
cmpsl
mov
sub
jp
lret
mov
push
outsb
rcrl
jo
das
sub
jl
fsubs
cmp
jg
mov
push
mov
addr16
cmp
xor
pop
pop
xchg
xchg
mov
dec
push
inc
cltd
es
inc
lahf
inc
int
insb
mov
addr16
dec
test
inc
shl
cmc
test
add
and
add
mov
jmp
mov
push
inc
outsb
inc
or
sub
dec
push
scas
mov
clc
lahf
lahf
stc
imul
xor
test
idivb
and
pop
push
push
out
pushf
pop
xchg
das
popa
scas
mov
out
mov
push
shrl
mov
nop
movsb
popf
sarl
push
push
inc
enter
push
int3
xchg
notl
mov
add
push
cs
sub
lret
aad
cmpl
loope
sbb
pop
aam
adc
xchg
lret
lret
jbe
out
adc
repnz
adc
lret
or
sbb
pop
cmp
arpl
mov
fs
push
jnp
mov
in
sbb
imul
sub
hlt
std
clc
lock
mov
sub
test
orb
inc
mov
mov
mov
pusha
sbb
add
bound
ljmp
push
cmp
xchg
add
loopne
push
and
pop
cwtl
daa
jo
jg
loopne
call
test
into
ss
cwtl
jmp
cmp
or
inc
xchg
ret
leave
das
mov
jge
push
test
inc
and
mov
jns
xchg
insb
lea
test
sub
hlt
scas
std
xor
jecxz
dec
inc
cmp
dec
in
jp
aas
jbe
xor
imul
or
icebp
mov
stos
mov
push
cmp
mov
loopne
emms
dec
ljmp
pushf
cmp
adc
icebp
mov
pop
stc
out
jp
test
cmp
lcall
cltd
bnd
push
push
add
inc
mov
jne
loope
xor
in
pop
jg
push
mov
mov
fdivr
inc
xor
xchg
sub
push
hlt
xchg
pop
adc
dec
add
push
jnp
pop
in
les
imul
mulb
push
jle
adc
jmp
lea
cmp
cli
stos
jbe
test
push
clc
movsb
push
movsl
pusha
cmp
adc
push
lret
out
xchg
addl
mov
and
test
add
cmc
inc
enter
and
aam
push
and
or
loope
push
inc
std
mov
sbb
xor
sub
orb
fcomip
rcrl
stos
hlt
adc
shlb
dec
sarl
std
fsubrs
jmp
and
adc
loop
dec
scas
out
sub
sbb
xchg
icebp
stos
jb
icebp
test
inc
mov
cmc
fs
ss
jb
faddl
xchg
sarl
int3
push
add
push
gs
sbb
es
adc
and
rorb
ret
add
or
mov
jmp
pop
idiv
insb
push
addr16
clc
fiaddl
mov
add
or
iret
add
or
mov
stos
ljmp
notl
push
lods
mov
mov
jae
xchg
and
add
sbb
jmp
pop
dec
xor
push
and
sub
out
mov
jb
in
test
std
adcl
jne
xchg
xchg
inc
mov
je
outsb
sbb
dec
jne
in
push
mov
pop
outsl
adcb
scas
cmpsl
mov
sub
imul
or
push
hlt
mov
lahf
inc
lods
inc
out
cmpsb
out
add
les
cli
lock
lods
xchg
psrlq
ret
pop
pshufw
loopne
cld
xchg
std
add
jae
les
test
cmp
mov
push
sti
stos
push
mov
and
rorb
jno
inc
sbb
cmp
sub
pop
fwait
push
xlat
mov
xstore-rng
cmpsl
inc
fidivrs
hlt
lock
loope
dec
sahf
mov
mov
stos
pop
push
sbb
cmp
sbb
inc
xchg
mov
jbe
ret
add
jb
loope
cmp
enter
xor
dec
jmp
sub
mov
inc
arpl
mov
mov
loope
dec
sbb
dec
sbb
inc
aam
das
ret
shr
leave
push
enter
push
cwtl
sbb
cwtl
jae
sub
les
pop
or
push
push
cld
dec
push
cmpsl
fldenv
ret
insb
roll
pop
fsubrl
fmuls
push
and
push
sahf
xchg
sub
cmp
cmp
lret
scas
aas
inc
out
out
mov
je
push
inc
mov
ss
jp
stos
aas
pop
xor
icebp
stos
dec
hlt
push
ffree
fimull
xchg
repnz
call
jmp
fisubs
scas
sub
xlat
imul
mov
push
jbe
xor
xchg
out
fisttps
or
push
repnz
pop
jae
roll
mov
add
imul
xchg
mov
fnsave
sub
mov
mov
stos
cmp
xchg
push
cmc
xchg
sub
cs
cmc
xor
aam
es
cmp
cmpsl
into
mov
xchg
pop
mov
js
pop
mov
aad
jno
push
iret
cmc
mov
and
enter
dec
mov
mov
ret
mov
mov
jno
jbe
jne
xchg
and
mov
pop
int3
or
adc
and
test
jbe
lods
sub
sub
pop
inc
mov
sbb
sbb
xchg
mov
int3
push
jns
cmpb
sbb
jne
test
iret
pop
pop
xchg
int3
aaa
lret
adc
or
pop
mov
rcrl
and
dec
dec
mov
cmp
repz
out
jnp
cli
mov
iret
je
lret
out
insb
push
arpl
mov
cld
xlat
repnz
cltd
gs
lret
testl
pop
arpl
aad
xchg
pushf
data16
shlb
lea
sub
jecxz
jbe
jmp
or
mov
jmp
sub
xchg
test
push
les
aas
xlat
out
inc
cmp
ret
push
mov
sub
outsl
jae
and
scas
jbe
cmp
repz
mov
xor
jl
xlat
int
je
fimuls
test
adc
mov
cmp
sbb
add
jo
lcall
mov
mov
sbb
mov
sbb
test
cld
jbe
add
rolb
les
jmp
les
mov
or
dec
adcb
lock
pushf
lods
pop
stc
push
jae
pop
or
bswap
inc
cmc
popa
xor
dec
add
into
lock
aad
aas
mov
outsb
xor
popf
lock
jbe
lds
push
inc
jo
dec
fneni(8087
cli
out
cmc
mov
pop
dec
cmc
into
aas
div
pusha
mov
int
mov
mov
ja
and
jl
sbb
ljmp
mov
mov
lret
cs
adc
movsb
gs
dec
sbbb
push
mov
fisubrs
ret
fisttpl
xchg
inc
pusha
mov
mov
adc
cmp
mov
sub
xlat
leave
jo
fsts
loope
mov
inc
xchg
mov
xchg
pop
jmp
bound
iret
mov
inc
jg
push
mov
movl
in
and
mov
jecxz
push
xchg
lock
js
jmp
pop
mov
or
loope
push
outsb
adc
or
outsb
adc
lret
inc
xor
adcl
je
jnp
pop
fs
fimull
jne
popf
push
dec
sub
cli
ja
test
lahf
lret
inc
pop
dec
dec
ds
cmp
lea
ss
hlt
jo
adc
xchg
or
out
fs
dec
insb
clc
pop
in
ss
cs
mov
or
rcr
sub
push
jle
sbb
inc
pusha
mov
and
loope
pushf
cmpsb
add
jg
outsl
sub
loopne
pop
insl
sbb
cmp
mov
cmpb
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
jmp
or
pop
mov
dec
jne
mov
or
iret
add
or
into
mov
or
jno
inc
cwtl
pop
fdivrl
leave
xlat
cmp
dec
sub
inc
rcll
cli
mov
push
pop
and
lcall
or
mov
cld
xchg
xchg
loop
adc
sbb
gs
rclb
mov
mov
dec
test
adc
cmpsb
iret
dec
push
fcomip
mov
xlat
pushf
pop
mov
in
out
scas
test
outsb
cmp
pop
or
cmpsl
fs
cld
shr
mov
add
jecxz
mov
rorl
or
xor
push
repz
fs
rcrb
hlt
xchg
outsb
inc
aaa
mov
hlt
push
sbbl
outsl
imul
inc
add
bound
lcall
hlt
shlb
imull
add
mov
cld
xchg
inc
bnd
dec
bound
in
enter
mov
pop
and
cmp
ret
mov
js
dec
fcom
pusha
jb
sbb
mov
fadd
jo
cmp
addr16
jge
jae
sbb
cmp
ret
js
inc
xchg
adc
adc
mov
sahf
push
clc
lahf
and
xor
dec
es
fwait
sub
sub
add
sub
mov
mov
out
in
and
adc
popl
shll
push
mov
lret
add
std
push
scas
sub
push
push
ja
push
mov
pop
or
int
xor
or
pop
mov
jmp
cmp
out
mov
jle
pop
or
push
jb
pop
pop
fistps
gs
stos
xor
sub
pop
test
bound
fwait
test
dec
outsb
inc
rcrb
arpl
dec
or
negb
outsb
mov
mov
jmp
stos
test
insb
push
in
cmp
xor
gs
pop
sbb
cmp
sub
or
mov
ret
inc
mov
add
out
stos
aaa
xor
adc
or
dec
gs
jg
mov
push
adcl
aad
sbb
leave
adc
out
cmp
mov
repnz
cmpsl
stos
rcrl
out
popf
test
mov
sbb
jns
jmp
scas
mov
jge
add
jo
sub
xchg
ret
push
icebp
leave
sub
or
lds
add
jg
leave
dec
rcl
add
loop
mov
outsl
out
sbb
jae
pusha
add
cmp
mov
inc
cmpsb
and
sti
enter
das
movsl
jno
add
xlat
mov
jmp
icebp
lods
mov
pop
xor
pop
push
lcall
in
cwtl
xchg
push
outsb
sub
leave
ss
or
push
fcomps
inc
in
xchg
es
out
rolb
pop
daa
xchg
xor
shl
fimull
out
xor
dec
cmpb
sub
gs
sbb
mov
pop
out
mov
xchg
pop
notb
movsb
test
and
adc
ret
lea
fbstp
ds
push
mov
pushf
xor
jmp
aam
gs
xor
stc
data16
pop
iret
jecxz
pop
inc
or
mov
add
or
imul
clc
int
mov
ret
adc
shl
es
and
xor
mov
insb
dec
fdiv
pushf
clc
out
cmp
add
inc
inc
add
inc
inc
jmp
stc
xchg
pop
lret
cmp
je
pusha
adc
test
xchg
arpl
cld
push
xor
sbb
ds
xor
pop
out
ljmp
xchg
mov
jno
movzwl
lret
cmpl
and
pushf
mov
inc
cld
ror
xor
and
out
push
gs
or
add
mov
fcoms
in
sbb
insb
imull
xlat
mov
movsb
aaa
pusha
xchg
mov
addr16
cmpsb
pop
add
xchg
out
shrb
sub
bound
xchg
cmc
bound
push
and
mov
jmp
inc
ja
filds
fwait
lret
fstpl
ds
rcrb
xor
add
aas
inc
pop
insl
and
push
inc
dec
xor
outsb
and
js
ja
sbb
push
test
pop
jp
xchg
stos
sbb
mov
pop
pop
adc
das
jle
pop
mov
mov
mov
adc
test
andb
pop
jle
stc
std
add
add
mov
inc
daa
jns
pop
xor
mov
push
popl
xor
fwait
adc
push
ja
inc
pusha
mov
cmp
and
xchg
iret
xchg
cli
add
movsl
cmpsb
add
or
mov
sbb
xchg
cld
sbb
adc
pushf
dec
jno
outsl
dec
pushf
and
mov
bound
loope
cmpsb
out
outsb
mov
and
lahf
movsl
sub
dec
inc
xorl
sarl
daa
sbb
lock
xchg
loope
loope
rcll
les
mov
mulps
stos
out
outsl
mov
push
fucomip
stc
pop
jl
pop
push
shll
hlt
stc
test
incb
jns
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
jmp
fbstp
xchg
scas
cmc
xor
popa
jle
or
iret
add
or
das
lods
sub
sub
cmpsl
je
call
inc
stc
gs
pop
sub
push
xchg
lcall
push
rcll
inc
jge
daa
test
inc
lsl
mov
jp
jp
stos
pop
mov
cmp
jmp
lret
mov
lahf
jp
cwtl
shrb
xor
iret
jp
mov
xchg
jne
das
lret
mov
int3
vpxor
int3
xor
mov
leave
jb
xor
notl
js
pop
pop
icebp
inc
test
dec
xchg
cmp
adc
mov
test
jne
sub
addr16
mov
jae
sub
repnz
int3
cmp
mov
pusha
xchg
jae
and
adc
sti
rcrl
xchg
add
popa
inc
test
je
jne
dec
xor
push
andb
push
test
xorb
es
jae
push
xor
fwait
rorl
cld
dec
adc
dec
bswap
fdiv
fsub
or
mov
js
mov
lods
jecxz
into
pop
xchg
cmc
xchg
jbe
xor
and
mov
mov
shrl
cltd
or
mov
jecxz
mov
cmp
mov
sub
shll
sbb
or
sti
out
adc
xor
adc
std
add
push
outsl
aam
int3
or
ja
loop
aad
pop
lahf
pusha
popa
mov
sarl
es
sbb
cmp
stos
mov
mov
bound
nop
jmp
stc
call
mov
sub
pop
pushf
gs
xlat
inc
sub
les
fwait
out
dec
lret
test
clc
ja
push
loope
mov
jge
arpl
or
inc
fidivs
shrl
lret
imul
xor
lds
frstor
stos
mov
xchg
cwtl
mov
dec
and
jecxz
stos
insl
mov
lods
push
subb
mov
add
mov
pop
or
imul
mov
shrb
cltd
repnz
and
mov
sub
stos
push
xor
sbb
mov
aam
add
aad
pop
push
cli
imul
jno
jecxz
and
lods
push
rcl
aam
or
sub
ss
mov
pop
xor
int3
and
inc
or
mov
jge
or
sub
jecxz
insl
nop
inc
fbstp
jbe
mov
cmc
inc
xchg
mov
mov
popa
xchg
imul
fmuls
lsl
imul
adc
push
negb
in
hlt
mov
xor
in
push
out
push
outsl
leave
fsubs
repnz
sub
aad
xchg
out
pop
fsts
cmpsl
and
mov
es
mull
in
push
xchg
pushf
mov
or
sub
xor
xchg
mov
jmp
dec
mov
push
jmp
hlt
mov
subl
cmc
std
push
test
rolb
sbb
and
mov
inc
aam
into
jne
mov
dec
mov
mov
dec
lret
inc
ja
loopne
clc
repnz
and
push
sub
xor
fisubrl
inc
test
xor
cltd
lods
pop
pop
or
test
bound
jae
lahf
rorb
js
pop
popl
ljmp
loope
ret
stos
nop
dec
push
scas
gs
insl
inc
jb
shll
fstps
out
popf
jae
aaa
push
xor
out
cld
pusha
sti
mov
sub
loopne
push
push
xlat
or
mov
addr16
jecxz
pop
lahf
jl
pop
outsb
mov
and
std
pop
movsb
and
lock
lahf
lods
adc
hlt
inc
aaa
out
mov
rcl
pop
les
test
sub
mov
push
push
pushf
pop
das
inc
or
xor
cmc
stc
insb
es
sub
lret
fldt
pop
dec
pcmpeqd
pusha
xlat
aaa
enter
movsl
add
adc
push
xchg
xchg
push
mov
jecxz
push
inc
mov
jecxz
fidivrs
in
notb
mov
int3
pop
jl
je
pop
pop
pop
loop
pop
mov
dec
daa
jmp
jne
out
pop
int3
pop
adcb
in
push
cmp
pop
sbb
lock
adc
clc
pusha
mull
mov
in
mov
in
xor
iret
daa
push
inc
dec
ss
lar
cmp
add
cmp
mov
filds
data16
jmp
cmpl
insl
in
ljmp
data16
push
inc
push
adc
push
lods
xchg
xor
fwait
pop
inc
ljmp
jne
aas
ret
xchg
jns
data16
or
xor
adc
jle
or
cmpsl
dec
or
dec
push
scas
pop
std
sub
add
lds
xor
ds
mov
leave
xchg
inc
inc
les
adc
mov
ror
dec
or
and
imul
mov
nop
jle
rcll
add
mov
mov
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
or
mov
mov
jmp
cmc
adc
jne
int
arpl
ret
aas
mov
stc
or
iret
add
or
jp
jp
lret
cmp
cmp
sub
outsl
mov
int
or
inc
mov
mov
inc
dec
pop
xor
add
lds
mov
xor
jg
cld
subps
movsb
pop
push
shlb
aam
bound
push
loopne
mov
dec
aas
sti
lea
jmp
idivl
mov
out
lret
fs
orl
fidivs
sbb
int3
dec
mov
pop
test
test
sub
scas
xlat
out
push
xchg
add
sbb
inc
jle
cmp
ret
add
sub
and
adc
xchg
rolb
pop
ret
mov
xchg
inc
sub
lock
add
ret
into
mov
nop
dec
sbb
push
gs
xor
cwtl
out
ljmp
push
ja
adc
clc
lret
icebp
out
cmpl
pop
icebp
scas
in
pusha
sub
fs
inc
sub
cwtl
inc
xor
jb
test
xor
xor
push
addr16
jne
jmp
or
loopne
dec
lock
pop
mov
mov
test
fs
enter
cmp
fsts
insb
mov
pop
iret
shlb
dec
sbb
jmp
fadds
les
ja
push
movb
sbb
sub
lcall
in
es
sub
dec
or
dec
movsl
nop
mov
ljmp
fwait
lret
push
into
push
pushf
sub
inc
or
js
pop
cltd
push
shlb
fstps
jmp
or
orl
and
mov
lds
in
pop
ficoml
cmp
mov
push
mov
fwait
or
xor
cli
pop
ja
dec
das
add
div
xor
outsb
xor
adc
pop
jp
and
mov
rcrl
divl
fstl
dec
jle
aas
jb
inc
imul
jle
aas
idiv
movsl
or
dec
sbb
repz
jmp
and
testb
hlt
mov
xchg
xor
mov
roll
aaa
roll
xor
pusha
mov
pop
dec
jle
mov
js
or
pop
jb
mov
sbb
call
nop
mov
cmp
int3
jg
inc
loope
push
insl
mov
xor
icebp
ret
sbb
xchg
cmp
repz
jnp
xchg
cmp
add
sbb
xor
gs
cmpl
rcrl
cmp
out
mov
and
pop
sub
dec
inc
inc
sub
aas
data16
jecxz
fucomp
xor
scas
inc
jecxz
cld
inc
inc
mov
lods
jle
add
ds
dec
xor
sub
mov
es
clc
in
cmp
aaa
mov
dec
test
out
push
std
leave
jnp
push
push
iret
test
pop
std
jp
push
jecxz
and
inc
push
jmp
into
cld
scas
mov
outsb
frstor
lods
paddw
push
mov
add
cmp
sbbb
push
and
xchg
dec
shll
jnp
cmp
mov
insb
lods
loope
clc
xlat
das
lcall
xor
jl
inc
faddp
ljmp
mov
insl
sub
les
xchg
push
movsb
or
into
movsb
dec
mov
loop
push
xchg
adc
sub
subl
repnz
mov
loope
or
test
enter
xor
jne
data16
push
pushf
pop
ficomps
aad
sub
push
pop
clc
ljmp
stc
adc
jge
scas
cmp
mov
loop
push
stos
das
fisubrl
es
popa
pushf
lods
lods
negl
jae
jl
ja
xchg
sub
mov
leave
jns
sbb
pushf
test
sub
popf
leave
mov
bound
or
repnz
je
scas
imul
pop
pop
fdiv
les
push
push
insl
mov
sub
in
icebp
pop
xchg
mov
adc
jb
sarb
cmp
lret
inc
xor
ror
sbb
das
stos
cld
xlat
xorb
mov
jp
dec
vpmacsww
stos
or
dec
and
push
sbb
cmp
test
add
out
pushf
lahf
inc
jae
in
dec
mov
mov
popf
fs
jle
lea
out
add
and
and
xchg
lods
iret
xchg
push
jg
mov
jl
dec
adc
jb
les
xor
mov
xchg
test
cmp
lcall
cmp
popl
add
aaa
outsl
xor
imul
jg
popa
minps
xor
cltd
aaa
std
jae
scas
sti
insl
dec
rcll
cmp
ret
xor
scas
sbb
imul
shl
dec
mov
lahf
xchg
mov
testl
mov
aad
loope
dec
ja
add
stc
mov
cmp
sub
add
mov
sub
push
shl
mov
mov
xor
xor
mov
mov
xor
shrd
shr
or
jmp
cli
jae
xchg
test
fwait
adc
aad
in
loop
jne
cmc
or
iret
add
or
xor
dec
pop
and
mov
jmp
cmpsl
pop
jnp
or
inc
push
xchg
nop
fs
cmp
jle
jae
clc
mov
clc
clc
and
in
mov
cmc
lods
and
int3
out
in
xchg
dec
and
andb
add
push
jns
jecxz
addr16
mov
clc
hlt
mov
pop
mov
fs
and
pop
add
xchg
cmc
adc
out
into
push
fisubrl
out
aam
push
inc
or
lods
icebp
xor
lock
push
hlt
inc
xchg
sbb
add
stc
sub
scas
inc
mov
shll
fcos
insb
and
xchg
xor
add
xchg
dec
rclb
pop
push
data16
cmc
add
shl
mov
adc
or
mov
push
sbb
mov
lret
cs
test
xor
insl
repnz
fs
jmp
push
out
mov
orl
sbb
dec
test
push
mov
test
out
jns
xor
dec
push
scas
pop
push
inc
fdivrp
sub
insl
or
out
xor
sbb
xor
sti
cmc
push
xchg
sbb
mov
adc
ffreep
mov
push
out
sub
outsb
in
fistps
add
test
pop
mov
xlat
outsl
je
call
cmp
push
jnp
call
xchg
ss
imulb
int
pop
das
mov
decl
dec
adc
sbb
in
fnstcw
imul
into
sub
sub
notb
dec
lods
inc
or
cs
xchg
adc
cmp
pusha
jl
fcoml
je
sbb
imul
sub
pop
lds
sub
stos
add
push
lods
fidivrl
push
add
mov
test
call
hlt
lret
jmp
out
and
out
ret
mov
arpl
xor
faddl
push
jge
cmp
add
arpl
in
mov
scas
push
repz
andl
inc
sub
mov
pop
je
mov
mov
insl
outsl
inc
push
adc
loope
cmp
jmp
test
and
mov
cmpl
sub
mov
fdivr
dec
pop
mov
xchg
aam
rcll
scas
or
out
mov
lock
xchg
and
and
sub
lret
jmp
je
std
add
sbb
sbb
aam
cltd
nop
mov
add
pop
add
add
in
aam
lods
xchg
shlb
adc
cli
xor
and
sahf
aaa
test
jo
push
movsb
cwtl
ret
movsb
fcmovb
xor
xchg
mov
fdivrs
outsb
dec
pop
pop
cmpsb
in
roll
add
cmc
mov
mov
cwtl
lds
inc
pushf
jge
sbbb
xchg
cmp
sub
mov
in
ljmp
addr16
rclb
loop
hlt
cmc
cli
pop
lret
dec
mov
xor
xchg
out
and
add
scas
xchg
out
cmp
xchg
jo
and
or
jg
mov
sbb
js
iret
adc
xchg
daa
mov
imul
std
dec
mov
hlt
jbe
cmp
iret
sub
mov
xor
aad
push
mov
jae
adc
push
cmp
cwtl
jno
sti
lods
sub
push
xchg
gs
sbb
cmpsl
jne
outsl
stc
sbb
clc
cs
clc
loope
inc
les
mov
aam
jle
aad
out
push
mov
pop
stos
cmp
push
mov
fimull
push
or
stos
adc
pop
cmpsb
push
aad
mov
lcall
cmp
scas
xchg
pushf
loopne
sbb
into
nop
fwait
mov
pop
scas
add
movsb
mov
out
sbb
in
lds
mov
aaa
into
jp
sub
xor
sbb
popf
add
fld1
xchg
cld
loop
xor
leave
pop
adc
jmp
adc
fbld
lcall
insl
xor
int3
jae
psllq
fists
inc
mov
jecxz
dec
sub
bound
jp
add
push
sahf
mov
xor
data16
and
add
outsb
push
pushf
pop
stc
loop
ret
sbb
insl
or
rcrb
cmpsl
sbb
mov
ja
push
mov
mov
sbb
jle
mov
sahf
mov
pop
push
push
adc
pop
ja
push
push
mov
stc
add
push
pop
sbb
in
add
cmp
and
cmp
sti
pushf
mov
stos
das
ret
pop
lds
inc
add
mov
mov
cmc
adcb
jp
sub
test
ja
loop
addr16
xchg
cmp
movsb
pop
jno
jae
sarb
stos
shlb
jns
sbb
rcl
dec
ficomps
call
sub
fsubr
add
and
inc
adc
leave
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
jmp
adc
dec
aas
cmp
mov
inc
xorl
jne
daa
in
or
dec
test
je
divb
cs
sbb
sub
aam
popa
lret
mov
loop
scas
sbb
ss
add
mov
nop
push
andps
idivl
gs
and
cmp
fsubrs
repz
int
in
mov
test
jl
pop
xchg
hlt
pop
jns
jecxz
in
push
push
adc
dec
dec
xchg
sahf
fnstsw
pop
fnstcw
xchg
stos
add
sbb
pop
testb
xor
mov
mov
mov
adc
popf
sub
mov
push
adc
popf
xor
sub
cmp
fdivrs
inc
cld
mov
cmp
adc
fcomi
mov
test
xchg
addr16
mov
fcmovu
out
mov
mov
es
mov
sub
sbb
jl
inc
aam
mov
adc
mov
cmp
pusha
bound
in
out
xor
mov
xchg
push
aaa
mov
push
rcrl
inc
xchg
aas
loop
pop
cli
mov
outsb
jle
mov
cs
ja
sbb
icebp
test
adc
mov
xchg
mov
pop
push
push
cs
xchg
xorl
in
stc
dec
lret
in
dec
loopne
frstor
dec
and
adc
int3
xchg
ret
call
inc
push
xchg
nop
pop
mov
or
pop
inc
cmpsl
xlat
out
in
cmp
sub
sub
push
jmp
imul
nop
mov
repz
fcmovnbe
inc
insl
inc
mov
into
jb
or
inc
test
xchg
sub
test
push
push
sbb
or
sahf
xchg
cmpsl
pop
and
inc
inc
pop
repz
dec
pop
aas
cmc
iret
lahf
out
jl
mov
adc
jns
cltd
mov
rorb
scas
scas
lock
mov
xor
xchg
pop
lds
push
mov
pop
jns
test
cli
pop
movsb
dec
mov
ficoml
sbb
scas
ja
dec
dec
dec
inc
lret
movsb
sub
push
dec
pop
jns
ljmp
sbb
add
dec
mov
adc
cmpsl
adc
pop
mov
push
sbb
cmp
pop
xchg
mov
adc
cmp
dec
adc
adc
out
gs
pop
roll
cmovae
call
mov
hlt
add
test
xor
test
idivl
rorb
jge
test
ljmp
cwtl
mov
bound
inc
xorl
mov
lcall
fistl
pop
sbb
jmp
outsl
mov
adc
jns
and
int
nop
repz
adc
add
add
in
pop
push
das
jo
xchg
mov
leave
les
das
pushf
rcrl
orb
jo
nop
inc
sub
xchg
mov
loop
push
stc
fldl
and
and
or
ret
stos
adc
mov
xchg
and
jo
mov
pop
orb
or
gs
cmp
lret
call
xchg
out
jp
add
ror
sahf
add
mov
in
repz
dec
pop
loop
daa
jp
mov
pop
into
mov
xchg
and
aaa
pop
jle
cmpsb
cmc
xchg
mov
jmp
cmpsl
dec
pop
sub
int3
rcr
adcb
xor
cmp
jl
mov
gs
shrb
aam
and
cli
mov
adc
shll
cmpb
xor
add
out
iret
dec
mov
outsb
aaa
push
and
jne
leave
test
mov
add
dec
inc
mov
mov
shlb
xor
sbb
icebp
sub
dec
dec
xchg
mov
dec
and
leave
std
aaa
jg
les
mov
sbbb
loop
out
adc
cltd
sarb
movsl
out
addr16
and
lods
add
mov
lods
gs
cli
out
adc
ret
sti
pop
cmp
adc
adc
sbbl
jge
jae
into
out
jno
jno
sbb
leave
mov
mov
mov
add
int3
pop
push
and
popf
mov
adc
pop
pop
push
sub
ds
mov
pop
mov
cmpsl
je
adc
es
test
xorl
cld
jge
lods
lods
in
repz
jae
int3
out
jne
dec
iret
dec
cmpsb
jbe
inc
stc
push
and
arpl
repnz
loopne
sub
les
jmp
imul
test
pushf
in
fbld
adc
xor
imull
mov
in
cmp
mov
push
mov
popf
push
lock
ret
mov
das
mov
xor
adc
repz
cmpsb
call
xchg
push
aad
js
mov
lahf
into
cmp
mov
notb
cltd
mov
or
sub
call
mov
int
test
inc
mov
adc
lods
cmp
pop
int3
aam
dec
cltd
loop
mov
int3
fistpl
push
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
jmp
es
bound
and
aas
mov
or
mov
iret
add
or
and
int3
inc
movsb
rorb
sbb
das
xchg
cmpsl
xchg
and
mov
or
or
fldenv
repz
ja
sbb
jbe
jbe
inc
sub
rol
jbe
jge
sbb
dec
and
push
int
or
xchg
xor
movsl
mov
dec
mov
arpl
out
adc
push
inc
out
jbe
jb
rcrl
les
mov
es
push
push
and
jg
out
and
push
sbb
les
pop
pop
jo
insl
xchg
iret
mov
daa
xadd
jge
mov
dec
mov
jbe
cli
aas
cmp
arpl
rcrb
jmp
inc
aas
mov
push
xlat
mov
jnp
inc
lods
daa
stc
pop
jl,pn
mov
inc
fucomip
mov
adc
clc
xlat
data16
out
or
sbb
lahf
mov
cmc
mov
daa
sbb
add
jbe
insl
les
inc
push
fstpt
imul
repz
jmp
pop
and
inc
mov
out
ja
add
arpl
xchg
cmp
push
addl
cmp
ret
push
pusha
not
adc
gs
lcall
mov
jnp
add
das
cmp
pusha
mov
ret
imul
loope
xor
push
add
into
sub
dec
imul
clc
add
scas
test
pop
adc
xchg
test
sahf
test
inc
jle
mov
add
pop
ret
das
dec
repnz
lea
mov
cmpsb
idivb
sti
sbb
das
xchg
notb
nop
dec
add
add
and
sub
sub
mov
adc
cmp
outsb
dec
int
stc
dec
stos
xchg
adc
sarl
sarl
pop
sbb
mov
ljmp
and
mov
sub
enter
jne
fwait
js
fcoms
adc
mov
fucompp
sti
inc
xor
cli
fwait
push
fisubrs
mov
movsl
sti
sti
inc
inc
js
mov
addr16
cmp
insl
out
mov
adc
mov
lahf
mov
leave
pusha
fmuls
mov
adc
mov
stc
lods
loop
mov
jg
mov
mov
pop
ret
mov
imul
dec
cltd
xor
mov
aas
mov
xor
dec
xchg
ja
pop
outsb
inc
addr16
lock
push
xor
sub
sbbl
inc
mov
movsb
push
push
xchg
cmp
cmp
insl
jne
addr16
call
push
inc
ds
cwtl
js
lcall
jo
ds
xor
enter
roll
pop
enter
jecxz
imul
punpckhdq
mov
lahf
cli
mov
rorl
pop
push
cmc
popa
mov
jge
sbbb
push
add
enter
lret
insl
addr16
push
and
xor
adc
cmc
mov
inc
lret
into
xchg
movsl
ret
out
push
push
out
sub
dec
repnz
push
mov
jecxz
sub
cli
addb
clc
or
cltd
jne
out
jl
sub
dec
fst
insb
pop
sbb
lea
or
mov
lock
mov
pop
shl
sub
aad
mov
and
adc
pop
arpl
or
jb
jnp
xor
jp
mov
push
xchg
and
sub
push
bnd
sub
jecxz
repnz
in
into
lret
pop
or
mov
xor
cmpsb
push
cld
mov
inc
out
stos
fxch
imul
jno
iret
movsl
out
hlt
std
fucomip
data16
jbe
ss
dec
gs
fsubs
push
jg
nop
divl
mov
or
test
jb
mov
outsb
and
pop
mov
dec
insb
add
mov
arpl
sbb
mov
jns
push
push
test
push
mov
add
aaa
sbb
xchg
push
pop
movsl
and
test
clc
sub
daa
out
inc
inc
mov
lods
nop
xor
xchg
add
jno
fdivrs
jecxz
jae
fstp
sub
push
aad
icebp
cld
mov
in
cmpsw
fs
scas
lret
ja
mov
sub
pop
xor
or
xchg
sbb
lahf
lcall
insl
daa
and
and
loop
push
insl
adc
cmp
fists
and
ljmp
inc
mov
lock
xor
clc
or
sbb
flds
or
cwtl
jmp
loop
pop
iret
mov
das
sbb
ret
lods
mov
mov
les
xchg
shlb
jne
lods
outsl
lea
xor
mov
fisubrl
cli
movsb
ret
xchg
and
outsb
sbb
test
cs
sbb
fwait
and
js
lret
xor
push
pop
pop
pop
pop
push
notb
or
jp
jo
mov
sbb
in
das
jns
es
leave
or
mov
jmp
test
sbb
mov
mov
and
or
iret
add
or
and
addr16
xor
sti
lock
cwtl
xor
or
or
scas
and
mov
cmp
push
lea
sub
inc
inc
pop
jbe
insl
outsb
mov
subb
scas
subl
movsl
repz
aad
or
sti
adc
ljmp
xor
pop
movsb
dec
subl
jge
push
out
mov
inc
mov
test
inc
sub
push
scas
shrl
in
sbb
cmp
mov
int3
cmpsl
stos
js
and
pop
mov
cwtl
rcr
mov
ret
or
push
inc
jae
mov
xchg
inc
repnz
je
das
jecxz
mov
repnz
pop
jo
aam
pop
cld
lcall
popa
cmp
call
std
pop
pop
rcrb
in
es
fnstenv
or
fwait
leave
pop
das
pop
fmull
lea
movsb
scas
or
imul
xor
push
lcall
sti
loopne
mov
into
mov
jbe
push
dec
into
in
push
mov
sarb
in
shll
inc
mov
add
jae
inc
adc
xchg
iret
jg
pusha
mov
testl
loopew
push
xor
xchg
dec
pop
in
and
xchg
aas
dec
sbb
sbb
shl
cmpl
push
clc
ret
in
das
push
mov
subl
mov
faddp
icebp
fsubrl
mov
loope
jl
cmpsl
test
lcall
popa
pop
add
inc
test
pop
add
sbb
pop
xchg
sahf
fnstsw
es
or
aaa
sbb
sti
fwait
in
jg
push
cmc
je
lods
xor
test
cli
aas
into
arpl
test
fldt
mov
jmp
xor
xchg
jns
ret
jnp
or
xchg
testl
shll
sub
ja
jecxz
hlt
stc
pop
mov
js
iret
out
insl
xchg
mov
test
push
jecxz
xor
nop
ret
xchg
pop
adc
insb
rorb
in
push
and
jb
lds
xchg
jb
mov
add
mov
jp
in
xchg
sbb
mov
shl
gs
sbb
or
shlb
mov
fcomp
pop
mov
lahf
push
jmp
roll
sti
fdivr
pop
adc
mov
ret
adc
sub
jns
inc
jo
sub
add
repz
mov
adc
pusha
and
fwait
add
and
mov
or
sbb
arpl
adc
and
mov
aaa
imul
sub
push
je
fimuls
jge
xor
sbb
xor
imul
push
mov
pop
cld
lahf
gs
xchg
rcrl
pop
mov
jmp
mov
mov
mov
out
add
js
int
lret
ret
dec
repz
mov
imul
push
or
adc
loopne
sti
scas
cltd
aaa
mov
fdivrs
stos
mov
addr16
icebp
add
scas
jl
cmpsb
jmp
enter
push
aam
out
shrl
sbb
add
mov
popa
adc
add
cmp
add
xchg
lcall
ja
jnp
cmp
push
in
jmp
inc
cmp
push
sahf
cmpsl
mov
push
sbb
imul
mov
xor
pop
push
jne
mov
sbb
inc
jno
pop
push
scas
and
inc
clc
sub
mov
fsubr
stos
mov
pop
push
lea
negl
xlat
add
jnp
aad
push
push
xor
mov
xchg
stos
push
in
cmc
add
gs
sarb
lock
mov
mov
adc
and
cwtl
mov
sub
fadds
sarl
mov
xchg
inc
mov
ljmp
mov
lahf
push
inc
lods
jecxz
pop
inc
jno
push
jae
or
jnp
push
xchg
mov
pop
jae
jmp
jecxz
inc
mov
shlb
fucomi
cwtl
out
cmp
int
call
mov
test
insl
mov
mov
iret
mov
pop
and
mov
sub
insl
lods
jne
xchg
add
and
scas
jecxz
mov
add
xchg
gs
divl
or
rep
stc
cmp
shl
push
mov
ja
sub
push
pusha
sbb
mov
jecxz
fsubrs
rclb
rcll
movsb
mov
mov
xchg
dec
sti
xor
ss
nop
pop
iret
aaa
popa
adc
pop
mov
jnp
xchg
hlt
ljmp
mov
cld
inc
out
jo
add
mov
out
mov
stc
sbb
bound
mov
mov
ja
jle
pop
mov
inc
pop
js
pop
in
lock
and
cmp
in
jecxz
add
fwait
mov
mov
outsb
pop
lahf
add
scas
movsl
aas
outsl
mov
jge
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
movl
jmp
popa
das
xchg
inc
xchg
aaa
push
das
pusha
dec
pop
addr16
add
or
mov
or
outsb
jecxz
adc
pop
mov
push
sub
aaa
pop
mov
push
or
fs
mov
dec
dec
pop
mov
xlat
pop
pop
insl
imul
sbb
daa
int
cmpsb
jo
enter
mov
xor
cmp
lods
sahf
xchg
lods
pusha
ficoml
lret
mov
rcrb
jmp
push
jbe
sub
dec
js
adc
pop
lret
or
repz
out
stos
jns
inc
imulb
ss
mov
shl
mov
sbb
push
push
jmp
loop
out
in
sub
mov
mov
insl
jmp
add
in
fdivs
dec
icebp
sub
mov
mov
lret
daa
and
cmp
adc
sbb
jae
ret
mov
nop
addr16
jnp
xor
mov
sub
insb
lods
call
imul
test
mov
or
xlat
out
jno
inc
int3
test
or
in
sbb
and
mov
and
stos
lock
leave
inc
imul
adc
fists
lret
loopne
cwtl
or
movsl
rcl
push
sub
daa
jl
push
cld
xor
ljmp
cmpsb
iret
dec
mov
bound
stos
daa
movsb
stos
dec
insl
fs
xlat
push
mov
adc
mov
mov
adc
andl
shll
pop
les
sbb
lea
adc
es
bound
loope
jae
sub
loopne
jb
push
adc
scas
sarl
dec
mov
in
cmp
pop
inc
jp
pop
fwait
lea
jae
pmaxsw
in
fs
dec
sub
pop
test
loop
push
leave
push
fsub
out
int3
ret
adc
gs
stc
fwait
cmpsb
out
mov
lahf
inc
aaa
push
lcall
loop
xor
out
in
rcrl
push
ja
loope
dec
pop
fcomps
add
jb
xlat
cmc
lcall
push
xchg
lods
dec
scas
pusha
push
bound
cli
pop
jb
xchg
mov
leave
imul
lds
add
adc
ss
stc
pusha
add
push
shrl
push
stos
mov
iret
add
jb
pop
lahf
daa
insl
adc
inc
mov
fcomi
lock
sti
or
push
out
inc
std
mov
adc
sub
and
ss
sarb
jnp
lcall
out
aad
sub
fisubrl
loop
pop
jg
xor
mov
xchg
popa
in
test
rcrb
aad
xor
jbe
clc
lret
fisubrs
fsubs
es
iret
xor
int
shl
lds
jo
mov
aad
fimull
loope
and
jge
mov
cmp
scas
cmpsl
pop
test
add
fcompl
lds
jo
jl
lret
mov
cmpsb
in
aas
or
mov
push
lahf
push
sbb
daa
arpl
xchg
add
iret
sub
adc
mov
sbbb
pop
lea
sub
sbb
cmp
mov
testl
xor
jne
push
mov
and
push
inc
mov
sbb
lods
and
inc
ja
jmp
mov
mov
dec
push
inc
stos
ss
cltd
jb
out
inc
fwait
pop
push
xchg
mov
scas
f2xm1
mov
pop
jbe
push
fsubrs
outsl
cs
and
sti
stc
push
out
cmpsl
xchg
sti
adc
lock
int
jle
push
pop
and
mov
ret
sub
mov
and
dec
pop
mov
mov
fidivs
jp
mov
xlat
cmp
ret
push
xor
shll
pop
sub
push
xchg
ja
cwtl
pushf
lock
iret
jge
inc
add
aaa
sbb
popf
pop
adc
cmc
mov
hlt
mov
xchg
enter
insl
cmp
inc
push
lods
ljmp
repz
sahf
push
mov
out
lods
in
mul
mov
fwait
ja
xchg
out
add
jns
jmp
aaa
mov
xor
push
mov
clc
shlb
pop
push
jp
inc
mov
dec
lret
shr
aam
popf
and
insl
jb
aad
ja
mov
push
xor
les
lds
push
cmp
dec
repnz
push
cmp
jae
movl
cmp
movl
jae
andl
shrd
movl
shr
ret
subl
mov
xor
and
shr
ret
jmp
aam
in
xchg
push
adc
hlt
popa
add
sbb
or
inc
cmc
fistpl
out
gs
sti
inc
test
pop
test
ja
stos
mov
and
pop
and
push
inc
out
push
mov
cmp
jp
icebp
sbb
cltd
jmp
repnz
lods
mov
inc
data16
mov
fnsave
xor
sbb
and
scas
flds
sahf
push
fsubs
sbb
ja
pop
mov
incb
and
pop
push
mov
mov
daa
lods
sbb
lods
xor
fucomip
sbb
fcoml
mov
bound
rorb
cmp
sbb
les
dec
jmp
ss
jmp
add
xlat
xchg
dec
rcr
xchg
mov
inc
pop
adc
adcb
mov
cmp
outsb
hlt
jne
fmul
push
mov
mov
fidivrs
add
mov
shlb
add
shlb
mov
pop
sub
sbb
lods
pop
ffree
addr16
mov
or
cmpsb
cld
call
or
cmpss
movb
lret
adc
jo
push
cmp
inc
adc
inc
aam
lahf
push
cmp
dec
call
mov
cs
cld
inc
inc
cmc
jg
jge
sti
and
jmp
jnp
js
hlt
sbb
ret
jb
dec
insb
adc
aam
cmpsl
mov
arpl
inc
in
and
and
inc
mov
mov
mov
pop
push
jns
sbb
xlat
dec
add
jp
loop
or
mov
jo
sbb
hlt
rcrb
push
lahf
test
mov
pushf
daa
push
push
rorl
pop
mov
push
fcmove
pop
faddl
push
mov
push
jg,pn
sub
je
jle
mov
insb
push
xor
aam
ss
pop
or
mov
sbb
mov
push
aas
iret
addr16
jb
icebp
popf
sbb
mov
jo
stos
paddd
add
and
inc
cmpb
daa
pushf
or
and
es
dec
test
test
adc
fdivr
ljmp
and
sbb
lret
sbb
sub
insl
mov
dec
sub
dec
and
aam
jmp
lds
xor
mov
push
cmc
and
sbb
cmc
out
mov
call
xchg
out
cmp
movsb
bound
or
push
xchg
inc
push
cwtl
test
incb
mov
inc
and
dec
adc
lcall
pop
das
sahf
jg
mulb
cmp
mov
lock
aam
lods
lea
mov
xor
mov
dec
dec
xchg
add
sub
and
push
push
cmp
mov
addl
gs
adc
rcrl
mov
cmpsb
or
call
arpl
inc
stos
sti
int3
popf
ja
vpaddusw
mov
movsl
ret
jmp
inc
xor
fadds
psubw
sub
dec
xor
dec
out
inc
cs
mov
data16
ja
gs
xchg
dec
ret
mov
xor
dec
or
jmp
xor
or
xor
test
call
xchg
mov
hlt
shll
pop
xchg
pop
cmpsb
dec
jo
inc
push
sti
add
movsb
fldenv
push
and
or
ret
and
sahf
push
pop
xor
pushl
pop
mov
and
xor
popf
xor
aaa
bound
jmp
in
mov
test
in
xchg
pop
pop
pop
aas
adc
mov
mov
inc
sarl
aas
pop
aam
or
loopne
shll
lds
cmpsl
fidivl
xchg
pop
jl
push
scas
faddp
or
xlat
sbb
scas
sti
int
jge
aad
jnp
clc
testb
clc
not
cmp
in
sbb
pop
or
jp
dec
adc
ja
cmp
lods
push
fbld
sub
repnz
cwtl
push
or
push
es
push
sub
push
jmp
in
push
and
xorl
aam
scas
jnp
icebp
or
inc
dec
insb
add
jl
lcall
nop
sub
push
cs
xchg
sub
mov
mov
ljmp
or
ret
push
mov
sub
cmpl
movl
movl
jmp
mov
movl
jl
push
call
orl
xorl
add
sub
movzbl
sub
mov
sbbl
movl
mov
mov
jmp
lret
xchg
stos
ds
xor
jge
cmp
gs
mov
or
add
or
and
lds
xchg
push
mov
icebp
xchg
test
cmp
mov
jmp
addb
lahf
inc
ds
sbb
push
cltd
xchg
mov
cli
rorl
rcl
decb
scas
push
addr16
adc
shlb
push
nop
insb
fcomi
and
cmp
nop
sub
daa
cmpb
jno
scas
sub
or
dec
push
push
int
fsubs
or
mov
jnp
outsl
imul
fwait
dec
iret
adc
sbb
xchg
mov
lret
add
enter
xorb
mov
xor
and
ss
aas
nop
test
into
xchg
test
pop
adc
fstl
xor
mov
adc
rcrb
mov
jg
into
cmc
test
pop
mov
or
add
das
lods
cmc
push
std
stc
mov
and
fildl
add
cltd
pop
fmull
or
es
mov
inc
cmpsl
fldcw
cmc
jmp
or
add
fcoms
pop
cwtl
and
add
inc
jmp
jle
popa
shll
enter
jo
mov
mov
lahf
inc
mov
aaa
xchg
pop
int
fcmovb
loop
rsm
push
je
dec
and
dec
mov
adc
and
push
jp
xor
out
mov
stc
pop
dec
fisubrl
out
sub
in
jl
loope
dec
lret
xor
add
xchg
jl
cwtl
out
mov
add
push
dec
cmp
push
iret
mov
scas
push
std
lahf
or
dec
inc
je
in
cli
adc
sub
in
xor
xlat
aaa
and
sti
decb
loope
call
in
dec
mov
loop
scas
movsb
aaa
or
dec
fmull
and
xchg
mull
xlat
add
push
and
xor
dec
sbb
xchg
cmp
rsqrtps
cmp
cltd
dec
loopne
xlat
insb
mov
jbe
jecxz
push
mov
cmp
dec
dec
pusha
mov
les
pop
or
out
out
enter
int3
mov
inc
add
loopne
adc
inc
cli
sbb
aam
mov
mov
xchg
loop
sbb
imul
arpl
stc
mov
lret
xchg
mov
pop
mov
mov
add
out
jnp
mov
popa
shrl
cmc
pop
mov
add
lods
xchg
xchg
pusha
inc
je
insl
mov
push
mov
xor
push
aad
fs
imul
jns
ficoms
dec
cmpsb
push
inc
mov
or
arpl
into
sbb
jb
fwait
les
mov
mov
adc
dec
mov
std
scas
adc
and
mov
xor
lcall
leave
ja
in
popa
data16
cmp
and
mov
push
in
push
pop
mov
in
ror
outsb
test
fs
stos
and
mov
loopne
add
enter
test
ret
mov
inc
je
mov
dec
pop
xchg
ljmp
xorl
mov
adc
ss
or
xchg
arpl
push
fimuls
dec
call
jne
test
mov
xchg
dec
jns
pop
cmp
aad
xor
jns
sbb
jae
iret
sub
lds
pusha
cmp
rorb
inc
lock
ljmp
icebp
mov
xor
ss
and
lret
add
test
lcall
andb
pop
test
cmp
pusha
add
repz
mov
mov
pop
ret
das
and
cmc
fndisi(8087
cmp
in
pop
les
jnp
iret
sub
xorl
sub
popf
jo
inc
push
rorl
xchg
jmp
mov
gs
mov
jo
cltd
jle
push
js
or
cltd
sbb
pop
sbb
pop
add
push
and
fistpll
xchg
xchg
or
jge
aad
xchg
sub
stc
mov
inc
pusha
push
ret
enter
shll
xchg
movl
cmpl
mov
mov
movzbl
jmp
movl
jae
pushl
push
pushl
pushl
call
xor
add
mov
sub
sub
sub
and
andl
adc
sub
adc
mov
adc
movl
cmpl
mov
mov
jmp
mov
jl
pushl
push
pushl
push
call
add
mov
mov
sub
add
or
sub
or
movzbl
or
movl
cmpl
mov
movl
movl
jmp
mov
jb
call
inc
and
mov
sub
mov
or
xor
add
adc
movl
adc
movl
or
movl
and
movl
mov
and
mov
cmpl
mov
mov
mov
mov
jmp
mov
mov
ja
push
push
push
push
pushl
call
mov
and
sub
inc
xor
adc
movl
mov
sub
mov
mov
sub
push
notl
mov
mov
sbb
mov
mov
push
push
adcl
push
sbbl
push
call
cmpl
movl
mov
jmp
notl
jbe
push
push
push
call
movl
movl
andl
incl
mov
and
xor
xor
mov
sub
add
mov
mov
xor
adcl
and
cmpl
mov
movl
mov
mov
jmp
movl
jb
pushl
call
sbbl
negl
orl
adc
movzbl
sub
xor
and
movzwl
add
and
or
mov
cmpl
movl
mov
jmp
movl
mov
je
call
xor
xor
xor
or
sub
add
xor
neg
addl
sub
adcl
and
andl
mov
adc
movl
cmpl
mov
not
movl
jmp
mov
jbe
push
call
xor
xor
xor
xor
orl
notl
xor
movl
movl
movl
mov
mov
jmp
ja
sub
pop
push
pop
inc
push
test
test
or
add
or
flds
iret
fidivrs
push
icebp
outsl
lods
xchg
out
lods
call
mov
testb
pop
jmp
jns
fwait
pop
sbb
mov
push
cwtl
push
stos
cli
das
repnz
notl
push
mov
push
sbb
mov
seto
repz
lret
aaa
or
hlt
mov
mov
out
pop
cs
or
sbb
outsb
sbb
stos
push
test
jecxz
jmp
sbb
dec
mov
std
jbe
lds
cmpsb
push
jo
mov
mov
clc
or
cli
imul
aas
flds
aaa
push
mov
out
and
lcall
aad
xor
call
icebp
mov
add
popa
mov
push
xor
jne
repz
inc
jne
mov
idivb
fdivr
add
mov
xchg
dec
dec
mov
scas
mov
dec
pop
pop
into
call
lret
mov
roll
mov
data16
cmp
jg
shrl
dec
sti
push
inc
aad
and
imul
in
je
xchg
test
sarb
mov
jl
push
outsb
sub
mov
xlat
into
out
shll
add
pop
outsb
xor
sub
jno
sbb
fcompl
or
fldpi
jl
add
xor
dec
add
and
lret
outsb
mov
jae
inc
sti
add
repnz
dec
scas
dec
sub
fwait
movsl
add
or
push
or
xchg
insb
add
nop
cmpsl
lret
out
adc
data16
out
sbb
jbe
mov
inc
pop
cmp
adcl
or
in
push
adc
test
jns
fsubr
aas
pop
push
mov
xchg
push
mov
icebp
and
add
in
push
inc
clc
adc
aam
les
addr16
mov
dec
pop
pop
sub
inc
pop
add
lea
jbe
movsb
jge
pop
mov
clc
jecxz
out
xor
jno
mov
sbb
jb
out
push
sbb
lea
xchg
jne
inc
or
or
sub
or
sbb
fwait
testb
out
mov
faddl
xor
inc
movsb
push
cwtl
mov
cmp
mov
inc
sbb
repnz
mov
sub
sbb
es
cmp
dec
cmpsb
sbb
inc
out
mov
testb
pop
fbstp
aas
xchg
cmp
rclb
mov
mov
cmp
or
ja
int
lea
pop
stos
xchg
sbb
add
stos
xor
inc
inc
jmp
inc
lds
in
shl
xor
push
ret
clc
gs
mov
or
insl
shlb
push
sbb
sub
push
pop
mov
leave
fsubs
cli
push
dec
sbb
dec
pop
jp
pop
lret
xchg
ds
xchg
ds
jl
xchg
cmpsb
inc
cwtl
mov
fisubrs
push
cli
mov
or
jae
pop
addr16
lahf
lcall
pop
stos
lods
and
adc
mov
mov
into
fldcw
cld
int3
inc
cli
pop
popf
jnp
cmp
pop
rcrl
stos
jns
xchg
add
sti
and
inc
mov
jbe
mov
movsl
nop
lcall
inc
es
or
inc
mov
leave
adc
jno
add
and
stc
das
jecxz
dec
cli
xor
mov
pop
icebp
mov
movsb
dec
mov
call
xor
cmp
xchg
adc
gs
js
ret
leave
daa
std
decl
aas
push
scas
adc
scas
add
hlt
pop
outsb
negb
or
push
add
shl
sahf
fwait
xor
inc
and
in
add
lds
out
cmp
inc
inc
mov
add
mov
cmp
xchg
xchg
push
lock
inc
lea
test
cmpsl
lea
jecxz
xor
push
data16
sub
push
mov
add
cmp
loop
cmp
enter
lcall
jb
pop
xor
xor
inc
sub
testb
mov
out
jae
sub
mov
jl
add
rclb
cmp
mov
push
loopne
jne
add
push
adc
push
and
and
push
push
call
mov
mov
cmp
jmp
int
jmp
xchg
add
mov
or
add
or
lods
loope
fnstsw
mov
xchg
pop
add
inc
sub
sbb
ficoml
cld
or
sbb
icebp
cmpsl
and
jne
out
cmovs
and
inc
cltd
dec
and
pop
push
call
pop
push
inc
dec
flds
mov
mov
push
pop
or
xchg
pop
mov
fwait
jmp
in
lar
push
and
sahf
dec
push
sbb
pop
adc
or
lock
xchg
sub
dec
mov
pop
add
mov
cmpsl
push
xlat
sbb
aad
gs
shlb
stos
cli
addr16
test
ljmp
cmp
imul
in
enter
out
bsr
xchg
xchg
mov
and
cltd
cmc
aad
inc
filds
pusha
ja
mov
daa
out
or
in
sbb
divps
cmpsb
inc
daa
pop
dec
scas
inc
sbb
jnp
jo
ljmp
es
mov
pop
mov
shrb
sub
mov
jnp
dec
xor
dec
mov
stos
fcomps
push
cs
dec
scas
je
adc
jmp
loopne
pop
clc
inc
jmp
cmpl
mov
mov
cmpsb
jge
and
cmpsl
jecxz
icebp
cli
icebp
mov
mov
scas
mov
push
das
lods
fldz
and
or
insl
cmpsb
lods
pop
or
xchg
sub
hlt
movsb
jge
daa
mov
pusha
loopne
jb
leave
push
add
xchg
mov
lahf
inc
dec
and
xchg
movsl
rol
dec
int3
lds
insb
lret
adc
xchg
push
aam
lahf
pop
adc
or
pop
mov
mov
push
je
or
inc
inc
or
dec
out
rcrb
push
add
cmpsl
shrl
ss
ljmp
cmc
mov
mov
gs
lods
movsl
xor
sbb
cmp
in
push
shll
jae
pop
pushl
cmp
stc
adc
stc
pop
mov
scas
jecxz
mov
jg
and
test
adc
dec
sbb
xchg
pop
frstor
lret
and
aas
adc
pop
xchg
sbb
clc
pop
push
test
cmp
test
rolb
in
leave
and
push
pop
outsl
inc
jne
sub
clc
adc
adc
jno
aam
shlb
lret
jae
inc
and
fs
cld
pop
movsl
push
cmp
cmp
mov
mov
cmp
stos
nop
cmpsl
aam
inc
and
lret
jmp
pop
jae
mov
inc
rsqrtps
imul
jo
mov
arpl
dec
cltd
mov
adc
cmc
jmp
xchg
mov
fstps
add
xchg
dec
out
xchg
xor
out
mov
cmp
pop
sbb
mov
daa
leave
aam
dec
xchg
xor
int3
cmp
test
inc
push
xor
addr16
xor
sbb
andl
jno
pop
push
fdivrs
mov
ret
pop
sbb
cmpsl
sti
test
sahf
movsb
or
repz
mov
rcll
push
push
mov
or
jl
and
inc
shlb
shrb
lcall
into
dec
xchg
sub
and
mov
inc
xlat
sarb
out
jne
or
in
out
sub
roll
popf
dec
mov
dec
add
inc
push
daa
clc
adc
jae
bound
xchg
fnstenv
sbb
or
sbb
xorl
gs
jl
jp
fists
bound
pop
pop
jmp
or
rcrl
int3
fldt
sbb
cmp
or
pop
mov
lret
add
inc
xchg
movsl
adc
sbb
fdivl
enter
xor
xchg
xchg
mov
jae
in
xchg
into
dec
out
icebp
jg
mov
inc
push
add
icebp
push
dec
std
outsl
xor
cmp
es
test
cld
mov
repnz
insb
in
frstor
pop
icebp
jge
cld
dec
pop
xchg
mov
xchg
lods
push
push
dec
add
clc
sub
lock
inc
mov
aas
insb
mov
pop
lcall
xlat
roll
fucomip
ja
jb
cmp
jae
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
or
or
add
adc
xor
xor
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
and
mov
and
mov
jmp
pop
xor
dec
movsl
sbb
pop
imul
or
aad
or
xorb
add
js
out
push
cmpsl
sub
xchg
outsl
mov
push
jnp
rclb
mov
cmc
pop
mov
lods
imul
mov
int
xor
jmp
rcrb
loop
pusha
add
xchg
dec
and
sub
out
dec
bndldx
clc
divb
aas
pop
dec
push
dec
loope
idivb
in
adc
fcom
or
shr
clc
ret
sahf
pop
test
and
adc
mov
cltd
sub
sbb
ds
jp
mov
jecxz
sti
sar
cmp
mov
in
mov
sarl
mov
xchg
clc
std
addl
fstpt
es
cmp
xchg
mov
adc
or
addr16
lock
jb
scas
sub
ret
sub
in
add
mov
jge
scas
loopew
test
pop
jecxz
xchg
aam
repz
in
jnp
or
lahf
or
ss
mov
or
ljmp
or
dec
aam
xchg
or
je
fcomps
bound
stos
fbld
movsb
add
mov
call
push
sub
cltd
mov
jb
test
sarb
pop
push
cmpsb
dec
mov
push
test
adc
inc
push
les
daa
mov
or
ds
insb
mov
loop
cmpsb
cwtl
and
cmp
and
xchg
push
or
or
mov
mov
int3
out
xchg
adc
js
shlb
adc
fimuls
dec
js
mov
inc
pop
cs
aad
pop
jae
inc
cmpl
push
rorl
pop
out
in
xor
push
adc
xor
inc
ret
scas
ret
add
adc
jle
cmp
push
loop
movsl
loop
sbb
sbb
sbb
jo
add
adc
xor
test
push
into
mov
dec
cmp
ja
cmpsl
push
jne
add
sub
mov
inc
or
pop
mov
cmp
add
push
jns
inc
fimuls
xor
les
pop
add
push
mov
inc
lret
sarl
cli
iret
data16
add
rclb
shl
inc
mov
scas
jecxz
lods
pusha
icebp
mov
jnp
in
es
mov
or
dec
xor
and
cli
jo
sbb
shl
enter
and
aam
test
stos
xor
xor
dec
enter
mov
cmp
sbb
lcall
imul
dec
pop
pop
lock
test
jmp
test
mov
cmpsb
bound
arpl
test
clc
xchg
mov
repz
or
dec
out
xorb
pop
mov
je
and
add
xor
add
add
jae
movsl
push
inc
cmp
push
cs
pop
lds
pusha
mov
out
je
and
inc
mov
out
fdivrs
or
icebp
pop
or
shlb
and
repnz
jnp
fstps
js
xor
push
add
ret
add
lahf
fsts
clc
lods
mov
jbe
or
and
mov
xchg
pop
dec
push
xchg
lcall
push
gs
add
mov
mov
icebp
add
mov
push
xor
stos
xchg
mov
sahf
in
and
xorl
sbb
aad
fs
xchg
fwait
mov
leave
jecxz,pn
cmpsl
jecxz
shll
jbe
jae
pop
xor
mov
add
std
jb
mov
icebp
pushf
xchg
shlb
cmp
ret
enter
das
orl
outsl
pop
or
cmp
clc
jg
loop
mov
dec
ljmp
cmc
cmp
test
jbe
ja
adc
loopne
cmp
fwait
pop
xor
mov
cmp
sub
clc
xor
add
insb
loope
je
push
or
je
gs
aaa
jp
es
mov
jnp
fmull
mov
js
mov
sbbl
adc
xchg
or
dec
push
jmp
sub
out
sbb
xchg
pop
rol
mov
or
mov
mov
or
add
or
ljmp
shl
inc
sbb
inc
mov
jbe
push
jp
inc
shlb
shrl
aam
inc
mov
std
call
and
test
mov
lcall
cmpsl
add
ret
xor
mov
call
cmc
inc
cld
repnz
ss
out
jg
add
loope
inc
sbb
xchg
jbe
lcall
lods
or
dec
pushf
call
hlt
jp
daa
mov
and
subb
cmp
add
inc
enter
pop
out
sbb
data16
js
add
jge
jns
xor
aaa
shll
dec
adc
out
sub
dec
inc
xchg
adc
push
fsubs
lods
rcll
sbb
pusha
jp
push
mov
clc
dec
cli
mov
mov
cli
or
and
fdivl
stos
leave
mov
cwtl
fsts
test
lds
xchg
lret
add
sub
cmp
pushf
test
ret
xor
lcall
xchg
mov
jecxz
inc
and
sub
mov
arpl
fstl
jl
sub
scas
dec
sub
add
and
jo
mov
xchg
mov
fiaddl
in
clc
jnp
aad
jg
push
jno
sbb
push
mov
imul
mov
push
and
pusha
insl
xchg
xchg
jb
shl
into
jmp
call
call
mov
cs
mov
add
sub
in
push
jne
std
mov
push
jmp
dec
ja
xchg
or
cli
outsb
out
fisubrs
jge
and
imul
cltd
mov
test
stc
xor
stos
pop
repnz
imul
mov
jb
xchg
mov
test
inc
stos
repz
gs
ja
lahf
mov
and
fcmovne
mov
enter
mov
mov
dec
daa
dec
loope
dec
pop
out
jbe
ja
mov
adc
cld
insb
je
mov
jbe
and
cs
dec
mov
sub
loopne
xchg
push
jo
fwait
adc
push
aad
jecxz
movsl
popf
jno
fs
xchg
cmc
pop
dec
fiadds
pop
fucomp
dec
jmp
into
in
gs
jmp
stos
inc
stc
lods
lahf
imul
lret
cmc
sahf
cmpsb
stc
dec
mov
mov
jecxz
jecxz
ds
cmp
or
ja
sub
idivb
ja
std
stos
test
mov
stos
push
sbb
mov
sbb
insl
and
or
push
pusha
dec
and
adc
mov
mov
dec
jb
outsl
adc
jae
call
ja
jbe
cmp
stos
jle
mov
data16
cld
push
mov
and
loope
bound
xcrypt-cbc
cmpsl
xchg
dec
cmpsl
les
popa
fcoml
or
xor
jl
cltd
dec
and
pop
ja
shrl
sahf
icebp
aam
jno
add
mov
mov
mov
shl
push
lcall
sub
pop
pop
imul
cmp
push
sti
std
and
cmp
stos
sar
dec
mov
push
xchg
jb
adc
int3
cmp
lret
jns
fwait
ret
add
adc
scas
jo
test
push
push
into
std
jbe
mov
out
mov
xor
loopne
out
push
enter
cmpsb
imul
sbb
sbb
dec
mov
out
mov
mov
popa
pop
inc
push
les
loope
js
dec
cltd
mov
inc
mov
rclb
andl
push
dec
cmp
add
popa
push
scas
shll
add
notb
popa
rorl
mov
inc
pop
pop
repz
and
mov
lock
and
cmp
pop
lcall
fwait
and
mov
insl
push
push
jp
jge
pop
ss
jmp
fstpt
dec
aaa
adc
sbb
sahf
leave
subb
ret
cmpl
inc
ret
enter
push
int
mov
sbb
add
inc
inc
ljmp
stos
imul
jge
out
stos
sub
jo
jo
or
sub
sub
jl
add
fldcw
xor
rcrl
inc
sbb
sbb
push
push
push
call
push
push
push
push
call
mov
mov
add
mov
adc
mov
and
mov
and
mov
cmp
jne
cmp
je
movl
movl
jmp
jecxz
pop
mov
xor
add
lods
test
or
add
or
repnz
mov
jge
lock
cmc
inc
cmpsl
inc
sbb
rcl
mov
mov
inc
xorl
dec
xor
lods
mov
push
sub
jmp
push
cmpsb
lds
cmc
xor
or
xchg
loopne
dec
fcmovnb
es
mov
add
mov
insl
in
sti
jno
mov
out
push
mov
jl
leave
xor
fisttpll
bound
jge
pop
out
das
aad
out
hlt
ss
ficomps
negl
xchg
sti
mov
mov
leave
inc
cwtl
or
xchg
outsb
repnz
jp
and
adc
jl
adc
fcoml
mov
shrb
pop
sbb
mov
and
xchg
mov
sbb
push
pop
gs
adc
push
test
flds
push
push
in
loop
cmp
stos
movsb
test
cli
sub
test
mov
sarl
inc
ds
xchg
call
shlb
mov
inc
loopne
jmp
out
cmp
and
ret
xchg
test
inc
xchg
xchg
mov
aas
add
xor
in
scas
fidivrl
arpl
jno
lods
jae
and
fwait
adc
jno
jmp
pop
add
add
sub
fidivrl
mov
and
in
loope
rep
enter
cmp
cmc
mov
push
add
jmp
rclb
aad
cmc
pop
adc
fs
pushf
xchg
xor
cs
xlat
cwtl
dec
insb
sarl
insl
sub
push
cmp
xchg
mov
cmc
xor
and
dec
mov
fimuls
pop
je
jb
jg
mov
leave
std
ficompl
jae
aam
dec
push
aad
mov
xchg
xchg
lods
mov
add
inc
clc
sub
or
push
jl
push
and
push
out
out
sbbb
sub
cmc
rorl
test
rcrl
cwtl
add
fs
pushf
icebp
and
pop
movsb
rcll
bound
xchg
ja
std
sub
popa
lahf
xchg
jns
jp
inc
xchg
xchg
outsl
inc
pop
pushf
loop
mov
out
sub
mulb
pop
shrl
add
jo
loope
inc
adc
pop
sbb
ljmp
cmpsb
aas
das
fidivs
push
or
xchg
movsb
mov
cwtl
push
out
testb
pop
insl
xchg
dec
je
insl
rcl
mov
cld
repnz
jl
imul
lcall
and
iret
xlat
xor
pop
rcr
mov
sub
insb
test
imul
divl
sbb
jno
jns
std
xchg
dec
and
cmp
sub
inc
jp
xor
int3
popa
insl
jb
hlt
push
mov
clc
jmp
iret
xor
pop
or
or
out
push
cmp
js
push
and
adc
cld
push
daa
pushl
push
pusha
pop
xchg
ret
xchg
xlat
add
shlb
ficompl
xchg
pop
jmp
and
inc
shlb
or
adc
add
pop
jne
pop
adc
in
dec
lret
dec
test
lahf
sbb
xor
test
cmp
add
enter
jne
rcll
jno
add
in
xorb
add
ds
and
sub
ljmp
pop
add
mov
mov
sub
mov
inc
lods
insl
fistps
jnp
xlat
loope
adc
imul
std
filds
test
enter
and
add
in
jns
adc
push
fiaddl
in
es
pop
and
cmp
lcallw
leave
icebp
ficoml
xchg
pop
mov
jnp
ds
ret
jae
and
mov
cmp
pushf
xchg
lret
adc
sub
repnz
test
push
jmp
mov
xor
sbb
pop
inc
push
add
jne
cmpsb
lods
bound
mov
divl
push
adc
js
test
and
inc
and
hlt
pop
push
out
xchg
mov
inc
add
data16
and
insl
mov
enter
addl
imul
les
push
push
call
xor
jmp
repz
mov
adc
lret
dec
addr16
lds
push
or
aad
or
test
adcl
dec
mov
fnstsw
addr16
inc
xchg
xor
mov
roll
or
jl
pop
lock
pop
or
subl
data16
jg
shr
es
xchg
js
ficomps
fcmovb
inc
jne
lea
mov
jnp
and
mov
hlt
in
mov
dec
xor
or
push
mov
pause
icebp
std
stos
dec
repz
push
mov
fldt
sub
lcall
les
cmp
imul
jmp
ss
or
add
and
cmc
cmp
or
xor
sbb
stos
mull
inc
sub
icebp
jge
sbb
shll
push
adc
xor
insb
jo
push
aas
push
mov
and
jo
jo
adc
cld
dec
in
rolb
lea
test
filds
out
mov
inc
jne
jnp
jp
mov
movsb
fists
scas
mov
mov
inc
pop
ss
xchg
pusha
or
cmp
imul
mov
mov
popf
xor
loope
test
gs
nop
mov
push
jmp
adc
push
add
xchg
jb
mov
ficoml
mov
pusha
jae
arpl
cmpsl
popf
addb
fisubrl
dec
xor
cli
push
mov
nop
xchg
jg
or
mov
ret
inc
sbb
hlt
pop
sahf
cmpsl
gs
fmull
and
xchg
arpl
icebp
pop
mov
or
or
mov
adc
xlat
decl
inc
mov
rorb
add
pop
out
push
adc
inc
jg
dec
cs
cmp
or
jp
in
or
repz
cwtl
xchg
sub
in
sbb
jl
cmp
in
pop
inc
shlb
repz
mov
repz
arpl
xorl
mov
fimull
cmp
xor
dec
psubsb
outsl
rorb
dec
aam
cmp
sti
jno
hlt
daa
inc
fidivs
and
lea
mov
out
jg
xor
ljmp
in
sub
movb
sarl
mov
mov
jns
out
lahf
jecxz
mov
ljmp
and
and
or
ss
dec
mov
js
mov
xchg
push
lret
push
scas
inc
lcall
push
pop
iret
mov
test
cld
sbb
push
in
int
movsl
xchg
fs
xor
iret
fisubl
jecxz
test
jp
aas
ss
into
lods
ja
cmp
mov
outsl
iret
mov
push
jbe
lods
rcll
sbb
leave
inc
imul
add
ja
push
nop
push
cwtl
push
in
cmpsl
mov
push
shrb
in
add
and
pop
mov
xchg
inc
fs
xor
mov
jbe
push
xchg
mov
aad
sbb
xlat
outsl
mov
lahf
int
outsb
sbb
out
add
int3
dec
dec
test
mov
in
sahf
sub
dec
gs
int
mov
mov
std
insb
xlat
dec
xor
mov
pop
or
mov
jnp
xchg
pavgw
and
ret
inc
outsb
mov
pop
lea
or
push
mov
mov
nop
inc
add
inc
jl
movsl
mov
stos
mov
in
inc
add
push
shlb
shrl
fcomi
cld
xor
scas
push
sbb
js
pop
fcomps
out
jmp
jg
lret
imul
mov
leave
cmpsb
mov
inc
lods
ja
call
jg
hlt
xchg
dec
sti
cld
xchg
in
pop
into
aad
inc
aam
hlt
mov
lods
imul
int
dec
call
xor
cmp
jno
jmp
enter
sbb
jno
movsl
js
cmp
push
int3
cmp
clc
scas
cmp
jge
dec
jbe
jg
push
sbb
nop
lea
or
mov
add
lret
push
and
outsb
push
mov
or
fwait
popf
pop
lret
inc
cmp
daa
pusha
xor
adc
jno
lock
mov
outsl
lea
xor
or
or
mov
mov
mov
cmp
jne
mov
mov
mov
jmp
mov
jno
pop
jno
addr16
mov
or
aad
or
pop
rclb
or
shrl
cmpsb
jo
clc
addr16
clc
xor
add
sub
jmp
push
daa
xchg
jl
cmpsl
xchg
lea
mov
inc
and
cmp
cmpsb
cli
jns
mov
mov
push
or
push
inc
mov
bnd
inc
test
cmp
std
sbb
sbb
jbe
das
int
push
sub
imul
push
fcmovu
xchg
add
mov
into
mov
adc
sub
mov
gs
addr16
stos
xlat
xchg
pop
scas
movsb
mull
dec
jbe
pop
xchg
mov
mov
and
outsb
inc
out
jge
inc
shl
mov
mov
sbb
loopne
mov
mov
xor
adc
sahf
daa
sahf
pushf
lea
and
sub
fldcw
lret
cld
sarl
aaa
push
inc
arpl
inc
lret
and
popa
push
pop
xchg
inc
add
cwtl
loop
ljmp
imul
pop
jo
repnz
jge
out
xrelease
xchg
daa
lret
mov
scas
cwtl
xchg
sub
stos
cwtl
cmp
push
push
fwait
clc
mov
pop
mov
mov
cmpsb
mov
pop
push
push
fisttpl
or
add
pop
lds
pop
xchg
pop
ret
stos
lods
rorl
sbb
push
loope
rcll
lcall
cmp
rcrb
leave
ss
pop
add
js
decl
in
push
jbe
loop
sub
pop
int
push
jp
popf
pushf
xor
sbb
lret
push
push
out
add
imul
rcl
out
sbb
cmpb
mov
sub
fwait
and
and
jns
or
lahf
cmp
mov
mov
xor
test
jl
xor
pop
adc
mov
xchg
mov
cmc
mov
or
aad
ja
cmp
dec
inc
cmp
lods
inc
popf
ljmp
rclb
adc
stos
lahf
pop
std
inc
push
xor
and
or
xor
pop
jge
jp
jmp
cmp
clc
mov
mov
ficoms
sbb
and
and
repnz
clc
xor
cwtl
sbbl
in
jno
add
sbb
prefetch
imul
loope
push
pop
scas
sub
adc
xchg
imul
push
out
adc
mov
sar
imul
out
loop
ficoms
das
push
je
jns
sub
inc
jmp
nop
out
push
pop
or
dec
dec
adc
push
pop
xchg
cmp
stos
and
jo
inc
push
popa
jns
xchg
cmpsb
mov
pop
sub
pop
mov
rcrl
sub
add
mov
cli
pop
xlat
jbe
lock
dec
lret
outsl
cmp
in
adc
sarl
cmpsl
in
xchg
xchg
and
jecxz
add
in
jmp
rcrb
daa
xchg
sbb
imul
sub
add
in
and
test
test
jae
mov
testl
inc
add
dec
int
leave
aam
xchg
in
dec
jbe
in
xchg
bound
xchg
cs
stc
add
push
inc
push
lret
icebp
cmp
shlb
jg
loopne
das
in
and
push
dec
cmpsl
movb
mov
mov
flds
sahf
sarb
gs
adc
push
fcmovne
testb
aam
sub
cs
jo
sbb
cmpsb
adc
sysret
data16
out
pop
outsl
movsl
lods
ja
imul
push
jbe
mov
mov
inc
sahf
stos
pop
mov
aam
xchg
fildll
mov
sub
int3
mov
fcoml
jne
xchg
dec
push
stc
ja
mov
xchg
lret
fdivr
jno
cmp
sub
inc
pop
fs
shl
inc
dec
std
aam
fsub
sbb
xchg
cmp
outsb
dec
pusha
test
andb
enter
push
mov
mov
xor
shr
mov
jmp
fucomi
js
js
fists
mov
mov
bnd
or
add
or
jge
in
ljmp
stos
leave
test
lret
push
xor
push
mov
pop
iret
lcall
cmc
in
test
mov
fwait
pusha
pusha
sbb
or
es
mov
ds
xor
adc
xor
push
aam
test
mov
outsl
loopne
lcall
pusha
and
lea
adc
inc
js
or
int3
mov
ja
in
stos
inc
loope
and
cmp
lret
clc
jmp
out
enter
mov
and
lcall
imul
and
dec
lds
mov
cmp
add
inc
pop
sub
inc
push
loopne
rorl
mov
mov
scas
jo
test
aas
pusha
repnz
ja
cmc
fstpl
push
sbb
xor
cmp
jmp
push
mov
add
sbb
dec
mov
sti
aad
lds
in
pop
movsl
call
xor
fcompl
int3
data16
pop
push
pop
out
xor
inc
pop
popf
jne
mov
ss
jl
vmwrite
test
mov
lcall
pop
orl
cmc
and
aaa
mov
sub
lahf
sbb
aam
jge
mov
add
filds
push
mov
and
repnz
in
pop
test
fadds
and
pop
mov
pushf
enter
pop
leave
mov
jl
mov
push
and
pop
mov
cwtl
cmpsb
sbb
sbb
jl
mov
cmp
movsb
popf
inc
xor
mov
lcall
call
mov
fmull
sub
cli
ljmp
mov
aam
pop
xor
pop
mulb
in
ljmp
push
scas
insb
mov
sub
push
aaa
ja
mov
jmp
stos
loopne
sbb
in
dec
fimuls
pop
push
cmc
push
sbb
fistl
jg
mov
scas
pusha
das
int
or
xor
and
push
push
fldt
jnp
push
pushf
jno
int
sti
insl
cmc
xor
fdivr
out
insb
add
xlat
jmp
popf
lret
loope
and
cmpsl
icebp
jecxz
inc
pushf
das
jge
call
jns
test
mov
cmp
jg
sbb
or
popf
pop
sahf
cld
into
mov
xchg
into
inc
pop
out
sti
fs
mov
mov
fsub
or
enter
mov
fcoml
std
sub
mov
loop
xor
enter
orb
leave
cmp
mov
pusha
mov
xor
mov
cmp
ljmp
stos
inc
and
inc
cli
aas
js
scas
jg
hlt
fs
xor
push
insl
mov
call
js
sbb
xchg
push
clc
jg
scas
push
cwtl
cltd
or
sbb
rorb
aaa
incl
sarl
push
aaa
ljmp
sbb
sbb
enter
pop
xor
repz
subl
ffreep
adc
ss
jnp
sub
stos
xchg
sbb
push
inc
cmc
leave
sbb
push
scas
sub
les
rolb
repz
inc
rcll
xchg
stc
pop
jnp
jae
int
pop
fistpll
imulb
ds
mov
pavgw
mov
cli
or
jl
mov
push
push
add
pop
jnp
push
push
out
jnp,pn
push
push
nop
xor
inc
add
rorb
mov
xor
and
fs
sub
in
stos
jb
xor
ja
mov
lock
fs
sub
pop
push
xor
enter
xchg
jp
out
push
inc
push
not
jns
out
nop
xor
add
lods
xor
lods
mov
in
aas
lea
xor
jg
pop
rcll
mov
sbb
pop
add
inc
push
push
hlt
addl
add
imul
lds
dec
sub
xor
sub
cltd
bound
and
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movb
jmp
add
popf
mov
in
pop
addr16
xlat
mov
aad
or
push
jns
sub
jp
xchg
ss
mov
jne
loop
fldt
into
out
pop
pminsw
xor
ljmp
xor
fdivp
adc
insb
or
add
mov
into
add
inc
push
rorl
inc
sub
std
ret
cli
push
adc
xor
into
pushf
jecxz
scas
adc
icebp
adc
fimull
int
sbb
outsl
lret
fidivrl
mov
pop
mov
loop
adc
pop
andl
outsl
dec
dec
clc
and
out
hlt
das
shr
ljmp
adc
test
jnp
pop
daa
lea
js
imul
ficoml
or
sbb
xorl
push
mov
das
imull
fcomi
cmp
xor
adc
rol
dec
arpl
dec
xor
jge
nop
jno
xchg
sub
cwtl
sub
adc
fsts
sub
push
xchg
sub
dec
xchg
cs
sub
sub
inc
add
aam
push
add
xor
pop
dec
push
xorl
pop
pop
push
add
jb
add
popa
cmp
sub
std
stos
xor
sbb
leave
jb
pop
sbb
dec
mov
pop
nop
enter
dec
pusha
xor
xor
mov
pop
xchg
fisubl
in
sbb
add
pop
inc
test
cltd
daa
lods
iret
sbb
sahf
gs
adcb
push
dec
pop
adc
fidivrl
mov
popf
lea
cld
loop
sub
inc
scas
mov
jmp
fstps
movsb
jge
lods
cmp
movsb
mov
outsb
cmc
je
xor
sub
test
decl
inc
lcall
in
inc
ss
and
dec
fcmovbe
rcll
icebp
or
pop
out
into
xor
jmp
add
jb
jbe
push
out
mov
movsb
sbb
cmp
lods
xchg
xor
fildl
je
ss
xchg
cmc
scas
mull
and
addr16
pop
mov
dec
mov
push
int3
in
or
push
mov
xchg
or
imul
mov
repz
jo
roll
bound
mov
loop
jecxz
fs
or
mov
pop
leave
fcoms
sti
sti
mov
xor
inc
jnp
xchg
pop
adc
mov
mov
lahf
pushf
or
fstps
dec
ss
xchg
mov
dec
push
xor
notb
leave
push
pop
cmp
sub
ja
test
inc
xchg
dec
xlat
nop
mov
scas
mov
pop
daa
xor
icebp
and
notb
sbb
cmp
add
xchg
sub
mov
mov
jge
cmpsl
mov
lret
mov
xor
jge
sbb
je
into
dec
push
subb
jne
mov
cmp
out
xorb
pusha
out
test
ss
dec
movsl
pop
pop
xchg
or
scas
fimull
ss
inc
scas
call
iret
ss
inc
mov
decb
clc
mov
cmovle
add
cmp
fisttpll
push
jnp
cmpsl
dec
in
jno
test
arpl
sbb
dec
int3
inc
push
dec
add
and
push
mov
inc
scas
jp
xchg
fbld
loope
cli
popa
jb
sub
sti
jl
mov
xlat
lods
and
mov
mov
aam
add
mov
jo
sub
cmpsl
mov
push
xchg
sub
lea
xchg
rcr
xor
lret
fwait
in
sbb
fmull
pop
leave
addr16
add
addl
ret
jb
jp
cmc
adc
sbb
mov
mov
xor
mov
xchg
fwait
mov
repnz
scas
cmp
adc
xor
mov
dec
pop
pop
dec
icebp
outsl
lahf
cld
xchg
in
cmp
xor
adc
enter
mov
push
jg
xlat
mov
sbb
adcb
pop
pop
and
lcall
or
or
notl
ds
jb
dec
in
mov
shl
das
cltd
xor
mov
adc
pop
xor
call
popf
cmp
add
adc
movb
movb
movb
mov
movzbl
mov
movzbl
shl
jmp
loopne
jg
pop
xor
fnsave
and
or
add
or
dec
pop
loope
mov
in
movsb
hlt
jb
lea
aad
loop
iret
push
mov
mov
rcll
notb
inc
mov
add
push
add
stos
xchg
push
ret
or
push
ret
loopne
and
imul
cs
pop
push
out
test
insb
add
fsubr
out
jp
push
repnz
mov
aas
and
mov
daa
mov
and
add
sub
jge
lds
data16
sub
lock
xchg
sbb
test
or
and
inc
lds
cmpsl
mov
out
enter
mov
fcomip
mov
stos
ret
push
loope
outsb
push
ljmp
pop
repz
jle
lock
pop
shlb
in
push
lea
push
imul
jle
lahf
shlb
xchg
xchg
adc
push
mov
pop
stos
mov
rorl
decl
xor
rclb
dec
fndisi(8087
mov
mov
pop
and
cmpb
mov
repnz
mov
sbb
lods
push
push
mov
mov
insl
sbb
cs
cltd
dec
dec
or
pop
int3
aam
mov
fstp
dec
mov
cs
movsl
pop
in
cmp
lahf
jl
or
loopne
jno
xchg
insl
pop
rolb
xchg
add
mov
mov
xor
insb
pushf
notl
and
push
orb
cmp
stos
push
pop
sbb
daa
dec
arpl
sahf
lods
cmp
inc
rcrl
arpl
inc
push
jle
outsl
fiaddl
lret
imul
cli
add
xchg
mov
adcb
iret
xor
fisubrl
jne
sub
sar
fwait
mov
cwtl
mov
sub
ret
fistps
push
xchg
cmp
mov
in
loope
in
aam
jno
outsb
bound
filds
pmulhuw
repz
cmc
loop
pop
fcoms
cmp
fs
clc
movsb
jmp
cmp
xor
push
pop
out
push
pop
jp
or
push
fs
xchg
fstpl
outsl
fildl
xchg
aam
test
mov
cmpsb
sti
pop
aas
add
sarb
sub
int
pop
mov
fsubrl
mov
sbb
fisubrs
sbbl
inc
out
test
mov
rorb
cmp
push
and
pop
loopne
cmp
addr16
jle
and
addr16
dec
pop
enter
lods
test
jnp
mov
sub
jg
fcompl
shlb
mov
and
in
and
fdivrs
popa
and
inc
ret
test
ljmp
add
stc
cmp
decl
xchg
inc
dec
mov
add
ljmp
and
mov
push
cmpsb
sub
popa
push
dec
stos
ss
cmp
in
popf
mov
mov
or
fnstsw
cmp
push
xchg
repz
mov
loope
fisubrl
ds
popa
mov
test
mov
ja
sub
and
pop
lods
lret
pop
inc
fisttps
daa
adc
nop
sbb
add
sbb
mov
scas
or
jb
out
mov
sbb
pushl
sbb
and
add
int3
movl
dec
mov
cmc
test
cmpsb
cli
cltd
cmp
cmpsb
outsl
inc
cmp
sbb
xchg
mov
and
lcall
sbbb
lea
out
int
mov
mov
push
mov
popf
jg
push
xor
jo
sbb
mov
enter
xor
jecxz
and
pop
mov
cmp
icebp
clc
cmp
cmp
lea
adc
xor
leave
cmp
jbe
dec
testl
mov
dec
lcall
fldl
ret
ret
xor
jle
adc
inc
outsb
xchg
je
xor
outsl
in
cli
jno
gs
call
sarl
iret
addl
mov
jbe
dec
pop
xchg
inc
repz
cmp
idivl
mov
mov
repnz
faddl
dec
insb
push
cltd
pop
cltd
idiv
mov
movzbl
movzbl
or
mov
movzbl
cltd
idiv
jmp
push
adc
pop
xlat
sub
mov
int3
cmp
or
add
or
jbe
test
xorb
ljmp
movsl
dec
push
and
fdivrs
mov
in
ss
adc
lock
insb
cmpsb
xor
scas
dec
mov
mov
daa
sub
or
xchg
bnd
clc
jp
js
mov
imul
xor
sbb
stc
pop
xchg
testl
or
out
movsl
packsswb
lcall
int
mov
aaa
ds
dec
push
inc
or
lock
aad
sub
sub
sub
repz
push
shrb
movsb
rcrb
ja
test
insl
mov
imul
mov
loopne
test
ja
xchg
ds
fistl
sti
mov
or
imul
jp
or
outsb
mov
adc
rorb
std
add
push
hlt
gs
adc
pop
mov
inc
imul
xchg
scas
fnstenv
pop
bound
cmp
mov
into
inc
or
decl
and
mov
jle
call
pushf
rolb
adc
call
hlt
daa
jge
loope
inc
dec
add
aad
pop
sbb
out
cli
mov
xor
inc
sub
outsl
cltd
push
jbe
adc
mulb
push
add
in
cld
pusha
movsl
fdivrp
adc
push
pop
sti
adc
test
add
inc
mov
xor
push
ja,pt
repz
stos
jecxz
cld
push
mov
ret
out
mov
sub
sub
cmpsl
test
and
std
aas
je
or
sub
icebp
sub
push
call
mov
out
cmp
mov
mov
mov
cmpsl
aad
inc
out
pusha
lods
mov
ds
and
adc
lods
cmpsb
xor
mov
fld
nop
popf
jmp
adc
test
lret
call
or
xor
insl
mov
imull
or
sbb
sub
mov
cs
jl
xlat
mov
dec
add
dec
pop
adc
xlat
or
pop
dec
fildl
mov
fdivr
mov
jecxz
in
test
mull
jle
cmp
jnp
dec
sbb
mov
or
sub
sbb
js
outsl
ja
mov
xchg
mov
adc
adcb
or
mov
mov
aam
loop
fildll
inc
mov
xor
xchg
lret
lods
movsw
lods
mov
xor
and
lahf
repnz
add
rcr
cmc
xchg
dec
sbb
je
jae
pop
xorb
cli
adc
mov
pop
lods
push
cmp
mov
xchg
inc
scas
scas
nop
or
loopne
and
pop
lds
fisubl
xorl
xor
cli
dec
dec
inc
popa
jne
inc
mov
pop
ss
mov
adc
xor
and
test
xor
xor
stc
pop
pop
loope
aam
and
and
lds
pop
or
xor
jb
inc
push
or
ret
jle
test
pop
addr16
dec
insb
or
jle
push
pop
imul
cld
inc
mov
mov
ss
sbb
popf
test
inc
push
adc
cmp
fldenv
sti
push
testl
mov
adc
push
add
loope
stos
in
xor
repnz
mov
jg
outsl
adc
jle
bound
xor
mov
pop
push
lods
clc
push
fistpll
mov
sti
inc
ja
jns
adc
mov
mov
orb
mov
rol
adcl
out
jne
popa
pop
inc
mov
cmp
push
inc
andl
lcall
cmpsb
xchg
ss
adc
lods
testl
jmp
mov
cli
dec
in
mov
pop
les
add
jecxz
adc
xchg
outsb
mov
dec
xchg
sub
cmc
push
push
fdivp
in
shlb
cltd
int
imul
aas
and
push
mov
movzbl
movzbl
cltd
idiv
movzbl
and
mov
movb
movb
mov
mov
add
add
mov
imul
mov
jmp
sbb
inc
daa
inc
pop
and
lahf
adc
popa
add
or
add
or
arpl
je
inc
mov
mov
repz
dec
dec
lahf
popa
xchg
arpl
xlat
out
mov
mov
insb
lret
into
test
jp
or
add
fiadds
aas
push
aam
jne
xor
sub
inc
cmp
and
add
popa
inc
je
jbe
cmp
push
loopne
mov
pop
adc
inc
jmp
sbb
ret
rorl
inc
push
in
pop
pusha
lret
imul
sub
in
lods
dec
gs
dec
xchg
and
xor
into
sbb
fstpt
andl
aaa
ja
fstpl
add
imul
jbe
dec
cmp
mov
icebp
imul
mov
test
mov
and
rcrl
in
pop
inc
test
das
xchg
push
xor
test
out
sub
addr16
in
stos
mov
mov
leave
dec
xchg
adc
pop
and
mov
std
repz
push
mov
cltd
lcall
les
ja
and
jle
loopne
xor
inc
jns
xor
jecxz
xchg
mov
lea
aas
jb
mov
sbb
pop
shr
addb
lods
std
sbb
mov
dec
xor
sub
outsb
arpl
out
int3
push
loope
jmp
push
les
stc
iret
and
push
pushf
pop
add
mov
loope
cmp
dec
out
les
aas
adc
jnp
and
xchg
movsl
pop
test
dec
xor
fdivrs
popf
dec
xor
mov
dec
sub
adc
sub
decb
mov
xchg
fildll
or
pop
or
lcall
mov
cltd
pop
mov
jge
repz
fsubl
cld
aaa
loope
addr16
or
rcr
xor
push
sub
fld
insb
dec
fiadds
sub
cmpsl
dec
jb
iret
mov
out
lret
xor
or
dec
je
cmp
out
test
loope
shlb
jb
nop
mov
js
mov
fisttpl
jb
vunpckhps
jp,pn
jne
mov
push
xchg
jg
jno
outsb
mov
cmp
arpl
push
inc
jp
cwtl
push
into
bsr
cmp
xchg
mov
sub
push
fs
movsb
and
mov
fsubrs
imul
lock
adc
dec
push
data16
jae
sahf
jno
mov
mov
adc
push
in
adc
sub
in
insl
push
aas
xchg
icebp
js
and
add
pop
push
xor
in
stc
out
cmp
or
cmp
lahf
arpl
xchg
mov
sbb
adc
loope
ficompl
mov
subb
mov
pop
fs
aas
mov
ret
fwait
stos
dec
mov
fcom
cmpsb
into
sub
orb
sahf
ja
push
addr16
jl
ja
adc
std
lahf
addr16
inc
scas
dec
cld
push
sub
mov
push
sarl
and
adc
push
mov
jo
bound
lret
mov
rcl
repz
mov
test
and
mov
out
add
jg
mov
fwait
mov
shrb
das
enter
mov
out
pop
shlb
inc
ja
cmp
loopne
sub
xor
jmp
mov
stos
aam
les
les
pop
xor
xlat
add
sbb
cmp
lea
clc
dec
inc
mov
into
into
leave
lret
jmp
sub
mov
cmpsb
out
test
test
mov
outsl
sti
push
xchg
mov
divl
mov
popa
and
int
jmp
cmpsb
imul
pop
addb
mov
jge
loope
aaa
dec
cmp
inc
test
mov
push
mov
lcall
pop
sbbl
cmpl
jns
ss
dec
mov
sti
in
and
xchg
mov
dec
push
dec
mov
or
popf
and
and
jmp
add
inc
and
clc
faddl
cmpsl
imul
or
lret
movsl
lods
imul
sbb
movsb
cmp
in
inc
push
or
shl
and
and
add
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
jmp
xlat
js
ret
push
pop
stc
xchg
jns
jge
jne
or
mov
or
xadd
mov
add
insb
and
dec
lahf
inc
xor
mov
or
adc
pop
adc
pop
sti
cmp
in
movsb
std
xlat
rclb
mov
xor
jno
xor
mov
fs
icebp
fucomi
loope
mov
push
mov
mov
dec
stos
jl
mov
aad
out
inc
sti
push
adcb
mov
dec
and
mov
inc
addr16
push
jge
lea
iret
pop
dec
push
dec
mov
jnp
test
adc
or
fstpt
cs
mov
popa
adc
xchg
stos
filds
repnz
ret
add
pop
add
mov
cli
cmp
xor
mov
dec
xchg
popa
das
lea
pop
push
adc
push
cwtl
xchg
or
dec
in
pop
insl
outsl
sbb
xchg
arpl
imul
std
sub
in
das
pop
dec
lds
cwtl
sub
cld
sub
dec
cmp
mov
xor
sub
flds
mov
cmp
push
sbb
push
ret
scas
aad
sbb
pop
lahf
jl
pop
stos
inc
add
mov
loope
ljmp
nop
popa
adc
cmp
xchg
negb
fbstp
outsl
jp
subb
loope
test
mov
movsb
lcall
jge
je
dec
int3
adc
sub
mov
movsb
pop
ret
pop
jns
inc
mov
popa
loopne
addr16
fs
mov
jp
fildll
ljmp
cld
ds
ja
jae
sub
xchg
pop
fmuls
mov
nop
xchg
jmp
push
dec
imulb
pop
shrb
jo
int
jns
imul
fwait
adc
leave
inc
xchg
jecxz
mov
sbb
xchg
mov
xor
out
lods
xor
add
jne
push
sub
pop
pop
xchg
jae
xor
ja
pop
pop
movsb
test
inc
xchg
call
push
hlt
pusha
mov
mov
out
fdivrl
xor
stc
mov
mov
sbb
jne
pop
jne
movsb
xchg
xor
mov
ss
jle
gs
xchg
rcl
icebp
es
push
decl
push
hlt
jnp
rolb
mov
mov
dec
jno
add
repnz
in
call
xor
mov
dec
cs
idivl
shlb
xor
pop
ljmp
outsb
in
mov
xlat
cmpsb
push
and
jecxz
dec
inc
test
pop
jo
sub
push
jmp
loope
out
flds
dec
mov
lea
sbb
jmp
inc
jl
shll
xchg
or
cld
mov
pop
ljmp
shrl
or
clc
ffreep
out
or
fsub
stos
js
dec
dec
sub
imul
or
adc
notb
cmc
shrl
jp
xor
stos
adc
mov
mov
leavew
sahf
mov
test
movsl
xor
fbstp
test
inc
das
pop
mov
dec
adc
xchg
cwtl
sbb
rcrb
mov
test
xor
int3
es
sub
lock
mov
push
out
and
mov
packuswb
pop
repnz
push
xchg
mov
clc
adc
jmp
int
sub
mov
xor
movsb
cmpsl
lods
jp
into
mov
xchg
aam
lcall
mov
sub
jns
dec
and
call
mov
jp
out
pop
shrb
pop
mov
push
jecxz
out
xorl
aaa
icebp
sub
daa
xor
pushf
repz
inc
mov
xor
adc
stos
pop
xchg
and
mov
add
sub
add
adcl
xorl
inc
andb
lea
fcmovbe
adc
rcl
lea
adc
mov
test
das
mov
xchg
xchg
mov
jg
dec
lods
imul
jno
sbb
out
inc
cmp
dec
sbb
mov
add
push
jg
lret
int3
aad
imul
movsl
xchg
sbb
sub
rclb
shll
sbb
loopne
push
int3
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
jmp
fadd
mulb
xchg
sbb
aaa
dec
jno,pt
rcll
or
mov
or
cmp
in
cwtl
in
loop
out
mov
cmp
fidivs
jnp
iret
shrl
in
mov
xchg
in
stos
xor
dec
lea
lock
sub
dec
jecxz
pop
xor
mov
into
ds
sub
mov
xor
xchg
mov
lahf
jbe
or
je
stos
subl
mov
into
or
iret
imul
push
cmp
or
fistps
in
push
cli
fnsetpm(287
push
mov
sti
xchg
xor
jnp
enter
fdivrs
inc
das
int
push
stc
jg
fisttpl
cli
pop
ds
ss
jecxz
adc
in
push
jnp
push
js
mov
sub
popa
mov
call
xchg
cmp
adc
fcoml
xor
and
xchg
mov
cmp
mov
inc
mov
or
bound
les
xor
test
lret
push
dec
jno
and
pop
mov
mov
mov
pop
imulb
out
jp
dec
rolw
jle
out
mov
lds
xchg
test
test
sarb
fwait
dec
shll
ud1
jmp
mov
mov
cli
out
add
sub
pop
lahf
jo
out
push
dec
fildll
pusha
push
and
jl
push
addr16
repnz
lock
pop
inc
stos
jmp
pushf
xchg
jp
sub
pop
repz
push
outsl
sbb
push
jns
out
push
mov
mov
insl
dec
xchg
scas
add
mov
push
mov
add
testl
in
pop
lock
add
xor
ds
jecxz
pop
je
push
clc
push
jge
cwtl
in
jbe
jmp
xchg
xchg
mov
pop
imul
cmpsb
outsl
xchg
roll
jge
jo
adc
push
cs
mov
mov
stos
ss
fdivr
sub
inc
lret
push
jle
xchg
add
push
sub
cmp
lret
mov
iret
and
mov
push
xchg
rcll
jle
shlb
out
dec
test
dec
mov
iret
mov
hlt
push
jo
push
btc
sbb
jae
pop
loope
in
mov
es
in
pop
jl
adc
rorl
movb
pop
push
cmp
pusha
stos
xchg
adc
cs
addr16
jp
les
adc
adc
test
push
pop
xlat
mov
push
ret
fcmovu
xor
push
dec
jae
dec
add
outsb
pop
jecxz
hlt
jb
aaa
jns
lret
jl
xorb
push
out
pop
mov
sarl
pop
pop
inc
inc
jne
out
lea
idiv
lcall
loopne
dec
leave
mov
fdivr
add
cmp
adc
mov
mov
lret
mov
aad
lret
into
ljmp
lcall
mov
push
rcll
in
push
mov
dec
ljmp
adc
xchg
cmp
das
movb
inc
je
jne
testl
push
dec
ljmp
cwtl
bound
add
jecxz
or
xchg
adc
jecxz
xor
andl
push
incb
or
sub
pop
pusha
call
ja
jae
cmp
movsb
sbb
sahf
movaps
jle
cmp
icebp
mov
or
mov
aas
ljmp
movsb
loope
fmul
ss
mov
call
in
jae
mov
fnstenv
sbb
jg
ja
imul
ljmpw
cs
aaa
rcl
adc
jle
mov
js
inc
jmp
negb
jl,pn
xchg
test
xchg
popf
and
aaa
xlat
and
nop
mov
stos
xchg
je
mov
sub
aam
sbb
test
fildll
dec
inc
notb
push
sbb
pop
cmp
das
lret
dec
mov
je
fldcw
or
lcall
setnp
xchg
les
xchg
and
jae
and
popl
stos
pop
es
push
icebp
or
nop
insb
cmc
xchg
sbb
out
pop
mov
cld
jl
pop
sbb
sub
cmp
jbe
push
pop
jmp
xchg
push
xor
dec
lret
mov
xor
or
lcall
loop
or
nop
pop
xchg
rorb
adc
jmp
jbe
pop
xor
mov
mov
scas
aam
cmc
clc
push
push
cmp
jl
dec
xor
sbbb
mov
xor
hlt
xor
xlat
pop
adc
xor
lcall
lock
loopne
jl
cmpsl
cli
mov
mov
lock
psrlw
fimull
add
mov
mov
enter
popa
daa
lock
lock
leave
add
loopne
pop
pop
sub
jne
rcl
or
or
jb
adc
push
outsl
addr16
sub
or
add
inc
mov
and
scas
out
mov
outsl
dec
stos
movsl
ds
inc
movswl
sti
gs
popf
sti
mov
inc
inc
pop
scas
jg
leave
pop
pop
sbb
mov
or
lret
cmp
inc
pop
mov
mov
cmp
jbe
add
mov
add
addl
inc
xchg
cs
add
mov
pusha
xchg
daa
sub
lea
bound
push
mov
inc
ret
mov
jp
push
adc
mov
mov
or
fs
ret
jle
roll
inc
sbb
hlt
cmc
push
adc
push
jl
inc
andb
imul
jle
push
ficoms
push
push
sbb
sbb
test
push
out
sub
js
mov
dec
int3
les
ljmp
adc
mov
aam
cmp
js
mov
test
xchg
icebp
mov
out
in
cmp
jae
fisubl
cmp
adc
sarl
in
dec
xchg
stos
adc
sub
inc
nop
adc
pop
jp
repz
pop
adc
and
in
mov
jge
cmp
movsb
jmp
scas
into
std
push
jno
cmpsb
mov
jnp
lahf
stc
push
push
push
mov
fucomp
jb
inc
out
mov
mov
sahf
call
hlt
je
mov
cwtl
hlt
out
cmpsb
scas
and
fld
dec
sub
mov
lock
jl
shrl
mov
mov
sahf
jne
jle
ljmp
add
mov
inc
jl
jo
xlat
mov
adc
lcall
mov
push
outsl
insl
jb
dec
sbb
popf
in
jnp
adc
ljmp
push
push
push
adc
negb
and
dec
in
xor
xchg
loope
repnz
xchg
xor
aam
or
cmc
stc
lods
and
fistps
mov
movsl
insb
dec
fisttpll
adc
mov
in
dec
jge
outsl
inc
aaa
mov
xchg
lods
fs
das
push
arpl
cwtl
sub
mov
imul
mull
jmp
sbb
adc
inc
adc
mov
pop
aaa
push
pop
jmp
jp
pop
sub
decl
add
repz
push
mov
pushf
dec
inc
fbld
dec
adc
mov
pop
shlb
mov
jno
xchg
push
pop
xchg
scas
push
lcall
adc
sahf
enter
imul
adc
frstor
adc
cmpl
pop
sbb
ret
mov
ret
xchg
mov
cmp
pushf
rclb
jb
outsb
jne
xor
in
cs
xchg
cmp
and
mov
jg
fnstcw
xlat
test
or
mov
lods
repnz
add
in
stos
pushf
lret
neg
adc
cmp
loope
dec
scas
mov
jns
fnsave
push
xchg
es
outsb
movl
inc
add
aad
in
in
xchg
scas
xor
cvtps2pi
addb
inc
push
mov
out
stos
cmpsl
pop
inc
lret
shll
mov
test
iret
test
in
movsb
loopne
fisubs
mov
push
mov
push
psrlw
push
xor
mov
rolb
mov
jg
adc
jbe,pt
ret
cld
adc
sti
movsb
shrb
jecxz
aad
inc
bound
sub
outsb
lret
push
push
sbb
repz
and
push
sbb
test
cwtl
in
jbe
mov
aam
inc
in
pop
loopne
inc
faddl
lret
add
dec
iret
sub
fnsave
adcl
mov
or
fstp
fsub
push
mov
or
ret
sbb
jbe
sbb
test
aad
sbb
adc
cmpsl
mov
jo
cmp
adc
xchg
push
out
fisubrs
pop
dec
push
or
mov
in
ds
data16
cmc
adc
inc
sub
mov
mov
lret
adc
ret
idivb
jp
sbb
dec
ja
lea
fs
mov
xor
mov
lea
and
sub
mov
lock
mov
or
xor
cltd
notl
xor
ficompl
stc
mov
add
jno
adc
dec
xor
push
cmp
pop
int3
jnp
add
aad
cmc
add
mov
inc
sahf
fldt
fnsave
and
inc
call
scas
push
sbbb
xchg
cmc
dec
mov
adc
idivl
fcompp
dec
out
outsb
xchg
or
mov
into
push
or
pop
sbb
inc
mov
sahf
push
loopne
out
pop
xlat
adc
in
push
cmp
xorb
loope
rorb
cli
add
stc
out
push
dec
cmpsl
add
dec
je
cmp
les
push
xor
pop
push
mov
cli
add
or
xchg
xchg
stc
sub
add
orl
xor
cmp
aas
pop
mov
push
leave
mov
bnd
sbb
int
push
sbb
lret
cmp
lock
stos
cmp
nop
mov
and
lret
fisubs
ss
and
sub
aam
xor
inc
into
pop
jl
xor
sti
jmp
mov
xor
jl
push
scas
ficoms
jmp
add
adc
pop
js
int3
daa
cwtl
aaa
xchg
ret
xchg
adc
lahf
xchg
and
movsl
push
xor
push
je
leave
jmp
sbb
mov
or
insl
imul
loop
into
lcall
sbb
fidivrl
and
test
inc
dec
jmp
mov
imul
daa
in
decl
cmpsl
jb
push
adc
mov
mov
pop
std
stos
das
sub
ljmp
push
lahf
and
xchg
daa
lock
or
ds
or
cli
and
insl
xor
mov
lret
lods
nop
dec
jnp
xor
pop
arpl
lea
fs
outsl
nop
add
sub
out
insb
ds
jmp
test
pusha
test
sub
jl
pusha
jae
pop
out
sarl
enter
dec
jg
fs
sub
sub
mov
pop
loop
leave
mov
xchg
lods
test
mov
xchg
or
sbb
push
xor
lods
fwait
mov
push
in
fistl
arpl
pop
xchg
cs
mov
xchg
sti
dec
and
ret
add
rorl
mov
movl
mov
imul
mov
data16
dec
inc
xchg
mov
mov
mov
aad
clc
push
shrl
jg
ret
enter
cmp
cld
enter
dec
je
pop
inc
shl
iret
jae
mov
out
mov
ja
int
pop
sti
pop
nop
stc
inc
enter
push
add
test
or
daa
and
xchg
sbb
outsb
test
std
add
adc
cmp
and
or
adc
pop
insb
push
dec
xchg
and
jle
mov
sti
repz
mov
aaa
emms
sbb
nop
js
rolb
sbb
cmp
imul
sti
sub
stos
cmp
dec
movb
jne
imul
cwtl
scas
sub
fbstp
cld
leave
iret
lret
push
cwtl
fs
pop
sub
push
lods
aas
lret
add
or
je
mov
jae
imul
cmc
add
pusha
les
orb
jp
or
aad
pop
or
bound
imul
js
and
jl
xor
dec
add
arpl
popa
pop
xchg
outsl
imul
rorb
inc
adc
jb
push
adc
adc
ja
leave
cmp
nop
add
cmp
pop
xor
in
fisubrl
push
sbb
std
sbb
jns
movl
movl
jmp
jae
push
cmp
adc
shll
addr16
adc
or
cwtl
repnz
push
stc
dec
hlt
stc
mov
mov
cli
adc
mov
add
daa
and
pop
movsl
loope
push
add
cmc
cltd
enter
inc
outsl
cwtl
std
imul
cmp
add
xchg
dec
cmpb
inc
dec
loop
pop
clc
pop
push
lea
pusha
mull
out
out
loope
icebp
jns
jp
xor
cli
or
dec
outsb
pop
in
inc
and
xor
push
test
add
stos
mov
loopne
push
mov
or
inc
cltd
hlt
and
dec
jl
ret
add
repz
ljmp
mov
into
js
cmp
cmpsl
add
adc
gs
in
sub
leave
sbb
scas
inc
repz
jecxz
dec
cmpsb
aam
and
pop
dec
or
mov
test
out
and
mov
jnp
mov
or
into
fwait
cld
and
inc
adc
pusha
push
aaa
pop
cld
int
mov
sbb
sub
int
add
roll
sar
mov
lock
mov
cmp
ds
shl
adc
popa
sub
outsb
mov
das
fstl
cmpsb
scas
or
mov
loope
cs
xchg
sub
repnz
out
xchg
mov
pop
fisttpll
push
add
push
add
jle
add
jnp
xchg
push
or
dec
aaa
jp
push
gs
lcall
out
xor
test
aam
cmpsb
xor
fs
sub
xchg
lods
pop
fwait
cmp
aad
mov
jg
xchg
xchg
rorl
mov
xor
push
leave
xchg
xchg
arpl
rolb
mov
push
pop
add
mov
sarl
in
pushf
dec
loop,pt
push
sbb
outsl
ljmp
and
push
fs
ret
loopne
or
pushf
sub
pop
les
in
aas
xor
in
or
pop
push
cmp
pusha
loope
adc
dec
fucomp
push
or
imul
fs
cld
ljmp
cmpb
call
fld
aam
mov
pop
jns
ret
std
mov
xor
movsb
add
ud1
sbb
mov
cmp
jge
jno
xor
std
adc
pop
lahf
add
rcl
mov
insl
inc
pushf
dec
cmp
xchg
inc
pop
or
dec
scas
dec
xchg
fucomip
nop
sub
lods
testl
dec
pop
int3
sbbl
loopw
loop
cmp
cmp
pop
push
sub
cmp
lret
lcall
mov
push
cmp
sub
ret
mov
adc
aad
out
pop
nop
stc
cs
mov
sub
lret
dec
out
jbe
push
incb
pop
sarb
popa
mov
sub
fnstsw
add
mov
xor
data16
sahf
mov
mov
add
clc
scas
insl
fs
lahf
out
mov
dec
jge
pop
mov
ss
fnstsw
lcall
std
cli
mov
mov
pop
push
jne
rcll
push
adc
stos
lods
pop
and
icebp
stc
iret
xor
lret
push
pushf
fisttpl
addb
in
dec
les
xchg
lret
push
ja
cmp
dec
cmp
in
cmp
sbb
mov
fbstp
hlt
call
mov
cmpsl
and
repz
xor
lret
fldt
sub
sub
cmpsb
lods
outsl
cmpsl
mov
xchg
orl
rcll
pop
int
jns
jnp
or
in
jge
add
cmc
or
imul
hlt
int
cwtl
out
dec
xor
jne
sub
bswap
cmpsl
xchg
xchg
pop
cltd
test
pop
call
loopne
loope
cmc
out
aaa
cmp
out
in
dec
in
mov
jmp
shlb
jle
outsb
in
nop
pushf
xchg
add
mov
ljmp
mov
out
sbb
and
std
loop
sbbb
sbb
jg
out
daa
in
nop
or
stos
into
das
iret
icebp
int
cli
xor
adc
in
inc
arpl
imul
ficoms
sub
hlt
pusha
sarl
jge
add
arpl
movsb
add
das
std
adc
xor
mov
mov
lods
les
inc
cld
movl
movl
xor
movl
jmp
sub
fistpl
mov
stc
push
or
mov
or
out
mov
xor
in
js
fstl
cmp
mov
sub
sahf
fcmovne
push
dec
jo
mov
sub
sbb
lea
lret
inc
inc
xlat
pop
call
dec
jp
insb
adc
int
pop
addb
ss
pusha
outsl
mov
mov
leave
push
xchg
sbb
cmp
lahf
xorb
cs
dec
lret
fwait
cltd
rol
cmp
add
or
xchg
mov
xchg
addr16
test
inc
pop
mov
imul
mov
sbb
or
inc
mov
inc
inc
inc
adc
sub
fcompl
push
cmc
xor
int
mov
pop
xchg
pop
lea
jbe
sbb
dec
int3
pop
int3
ds
scas
adc
pop
push
movsb
xchg
push
mov
lret
outsb
add
nop
inc
pop
dec
movsb
fisttpll
ret
ret
ds
bound
add
mov
push
jmp
ret
popa
dec
push
sub
movsl
pop
mov
jmp
mov
push
fmuls
mov
push
sarl
sbb
jns
sbb
mov
insl
mov
xchg
clc
push
cs
xor
clc
imul
xchg
cld
and
adc
clc
sbb
and
lea
xchg
addl
mov
ja
cmpsl
iret
out
inc
out
pushf
xchg
aam
lds
mov
pushf
push
sbb
inc
imul
xlat
add
lret
push
clc
es
loopne
adc
xchg
mov
lea
data16
scas
mov
mov
adc
jns
js
sbb
mov
int
add
mov
loope
xor
xchg
lock
pushf
icebp
jle
xchg
xor
addr16
loop
fdivrp
ja
icebp
add
ja
cli
idivl
sahf
lcall
push
xchg
filds
std
inc
ret
enter
pop
push
rolb
dec
int3
arpl
cmpsl
clc
in
jmp
xor
sbb
ret
push
fwait
add
mov
add
stos
cwtl
lret
rorl
roll
xor
in
push
js
in
push
push
jne
scas
jp
push
aaa
xor
jno
push
mov
mov
bound
les
sub
outsl
decl
cltd
and
loope
mov
outsl
or
pop
out
xlat
push
je
fnstcw
les
sbb
je
mov
inc
lods
sti
das
fs
sbb
mov
rol
je
dec
add
adcb
stos
xor
cmp
mov
sbb
mov
inc
addr16
push
mov
sbb
mov
push
in
add
sbb
push
add
adc
push
fisttps
sub
cltd
mov
jl
test
ja
sbb
cs
jle
ret
push
inc
dec
jmp
arpl
xor
pop
pop
mov
or
into
movsb
repz
mov
inc
stc
or
lret
cmp
shlb
ret
fbstp
xchg
inc
aad
cld
push
sahf
lea
adc
ror
push
cs
fcompl
test
mov
push
add
pop
xor
daa
and
jle
ret
cmp
sub
xlat
xchg
test
sub
iret
movsb
push
ret
inc
stos
das
lahf
sbb
test
popa
pop
mov
iret
mov
sbb
loopne
xor
stc
or
jl
mov
les
pop
push
jle
popl
fdivrs
ret
shrb
dec
mov
sti
xor
push
ffreep
sub
xchg
dec
jne
insl
inc
jmp
inc
pop
adc
ret
ret
shrl
mov
sbb
test
mov
cmp
loope
jp
add
dec
jo
icebp
ret
xor
sub
sbb
lahf
or
push
lods
xchg
and
out
enter
adc
dec
or
sbb
jno
push
nop
andb
cmovge
mov
xchg
jecxz
cmc
into
dec
pop
scas
sti
jle
and
xchg
adc
dec
data16
icebp
xchg
sub
inc
fmuls
pop
add
div
mov
xor
mov
div
mov
xor
div
jmp
enter
js
enter
mov
fucomip
mov
push
or
out
or
mov
fiaddl
pop
in
out
push
jae
push
aad
out
mov
ss
push
xchg
test
push
xor
negl
or
inc
and
dec
in
dec
add
push
test
jg
ret
popf
adc
pop
popf
mov
xchg
int
sti
in
dec
into
call
shrb
imulb
jl
es
inc
dec
lcall
sub
xchg
jle
and
cmp
scas
cmp
dec
dec
out
xor
test
movsb
jne
mov
loope
jmp
repz
dec
scas
pushf
sti
enter
xor
dec
int
das
stos
dec
in
clc
and
or
dec
push
sbb
jbe
cltd
push
pusha
fucomp
push
xchg
fucomi
mov
dec
pop
mov
out
or
mov
xchg
mov
and
and
push
std
out
xor
outsl
xor
pop
sbb
fsubl
mov
daa
clc
jl
clc
jl
hlt
loope
or
lcall
fsubrl
jl
stos
shrl
add
rorb
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
adc
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
or
xor
or
xor
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
push
adc
push
push
push
call
mov
mov
mov
xor
xor
add
mov
adc
mov
mov
mov
mov
push
pop
sub
mov
mov
sub
mov
add
mov
mov
mov
shl
xor
xor
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
push
adc
xor
xor
shrd
or
shr
or
mov
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
mov
imul
mov
imul
xor
or
mov
mov
xor
mov
and
sub
xor
xor
add
div
mov
jmp
movl
mov
movl
movl
mov
mov
or
xor
mov
sub
xor
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
imul
sub
imul
xor
add
mov
mov
xor
mov
and
sub
xor
xor
mov
div
mov
sub
mov
add
xor
add
mov
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
xor
push
push
sub
push
adc
mov
add
mov
not
shrd
cmpl
mov
mov
mov
jmp
mov
jbe
pushl
push
call
orl
mov
and
or
sub
not
shr
mov
mov
adc
xor
movzbl
adc
mov
cmpl
mov
movl
jmp
movl
movl
jb
push
pushl
call
decl
orl
and
andl
xor
add
xor
cmpl
movl
mov
jmp
mov
mov
jae
pushl
push
push
push
pushl
push
call
adc
mov
adc
mov
and
add
xor
or
mov
xorl
mov
shl
cmpl
not
mov
movl
mov
jmp
mov
jge
push
call
sbb
sbb
inc
addl
not
mov
shrd
cmpl
mov
mov
jmp
movzwl
jle
push
pushl
call
xorl
andl
mov
sbb
or
xor
adcl
xor
xor
shr
mov
and
mov
xor
or
orl
mov
cmpl
movl
mov
movl
jmp
movl
jl
push
call
mov
xor
or
adc
adcl
or
cmpl
movl
movl
mov
jmp
mov
jg
push
push
push
push
push
pushl
push
call
mov
sub
mov
subl
and
mov
sub
or
and
mov
xor
or
sub
or
mov
cmpl
movl
mov
jmp
movl
movl
jg
pushl
push
push
call
add
andl
add
sbb
add
xor
mov
cmpl
movzbl
not
movzwl
movl
jmp
movl
jbe
push
push
push
call
sub
or
mov
or
sub
movl
xor
sbb
mov
mov
adc
mov
mov
mov
adc
mov
adc
mov
mov
add
mov
mov
mov
shl
cmpl
mov
not
jmp
movl
jle
pushl
call
and
sbb
mov
or
sub
xor
or
shld
sub
shl
and
mov
cmpl
mov
mov
movzwl
mov
jmp
movl
movl
jl
push
push
call
sbb
or
mov
and
sbb
mov
mov
sub
mov
mov
negl
mov
subl
xor
xor
movl
movl
movl
mov
cmp
movl
jne
cmp
movl
je
mov
mov
addl
xor
orl
shld
shl
andl
xor
mov
addl
xor
movl
mov
movl
cmp
jne
movl
cmp
movl
je
mov
adcl
mov
movzwl
and
mov
shl
movl
mov
sbbl
xor
shr
incl
or
mov
sbb
mov
sub
mov
mov
or
mov
sub
mov
sbb
push
cmpl
movl
movl
movl
jmp
mov
movl
jne
call
xorl
incl
subl
sbbl
andl
andl
pop
sub
mov
add
adcl
mov
mov
mov
add
lea
mov
xor
mov
sbb
mov
sbbl
xor
xorl
shr
shl
or
mov
movl
mov
mov
subl
xor
shr
shl
adcl
or
push
lea
push
lea
push
call
mov
mov
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
push
call
mov
mov
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
add
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
mov
or
mov
mov
jne
mov
mul
ret
push
add
mul
mov
xor
mov
addl
mull
orl
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
imul
add
xor
add
mov
mov
sub
imul
add
xor
div
mov
mov
jmp
movl
movl
movl
movl
mov
mov
or
mov
imul
add
xor
mov
div
mov
mov
xor
sub
mov
mov
mov
xor
sub
mov
sub
mov
add
mov
mov
sub
and
add
xor
mov
div
xor
add
mov
mov
sub
imul
add
div
mov
xor
mov
sub
mov
and
or
sub
xor
mov
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
xor
mov
inc
push
call
pushl
call
test
jg
movl
addl
movl
movl
movl
movl
movl
movl
cmpl
mov
not
movl
mov
jmp
movl
ja
pushl
push
push
call
sub
mov
sub
mov
inc
adc
movzwl
and
sub
mov
mov
mov
cmpl
not
movl
jmp
movl
jne
push
pushl
call
inc
mov
adc
mov
sbbl
movl
adcl
xor
mov
adcl
or
andl
or
subl
add
mov
mov
adc
cmpl
not
mov
mov
movl
jmp
movl
jbe
push
call
xor
inc
sbb
sbbl
inc
xor
xor
mov
add
mov
mov
adc
and
mov
movl
movzbl
add
mov
movl
movl
and
movl
mov
subl
mov
mov
mov
sub
or
mov
mov
andl
push
push
or
or
push
subl
push
call
push
andl
push
push
push
call
mov
mov
mov
movl
cmp
movl
jb
ja
cmp
jbe
cmpl
mov
movl
mov
jmp
movl
jge
pushl
push
pushl
pushl
call
or
sbb
adc
adc
orl
adc
movl
movzbl
xor
movl
mov
movl
movl
or
movl
add
movl
cmpl
mov
movl
mov
movl
jmp
movl
not
jne
push
pushl
call
dec
sbb
adc
adc
notl
add
neg
and
movl
mov
adc
movl
xorl
movl
sub
mov
add
movl
movl
cmpl
not
movzwl
mov
jmp
mov
mov
jbe
push
push
pushl
call
sbbl
and
or
sbb
incl
adcl
movl
mov
mov
or
mov
sbbl
or
orl
sub
sbbl
and
mov
or
xor
add
pushl
mov
sbbl
mov
adcl
add
adcl
xor
div
mov
pushl
adcl
xor
movl
pushl
andl
pushl
or
xorl
mov
andl
or
sbbl
and
sbb
mov
sub
mov
xorl
pushl
mov
or
mov
mov
lea
xor
mov
orl
xor
or
mov
addl
or
pushl
xorl
mov
mov
subl
and
sbbl
div
cmpl
notl
notl
jmp
movl
jge
push
push
pushl
push
push
push
call
adc
sub
xor
adc
addl
sub
mov
movl
add
xor
not
mov
sub
dec
mov
addl
pushl
shr
pushl
pushl
incl
call
add
movl
sub
movl
sbb
mov
mov
andl
xor
div
subl
or
xor
andl
pushl
call
sbb
pushl
xorl
mov
xor
xor
mov
sub
xor
pushl
movl
cmpl
mov
mov
mov
jmp
not
mov
je
call
sbb
add
sub
sbb
adcl
pushl
movl
sbb
mov
mov
andl
or
sub
cmpl
mov
mov
movl
jmp
mov
movl
je
push
call
movzwl
and
mov
and
movzwl
add
xorl
movl
mov
xor
div
orl
xor
orl
pushl
pushl
andl
call
mov
sub
mov
movl
cmpl
mov
movl
mov
jmp
mov
jl
push
call
adc
addl
movzbl
sub
and
add
adc
movl
cmpl
movl
mov
movl
movl
jmp
movl
mov
jb
pushl
push
push
push
pushl
push
call
xor
add
adc
mov
andl
sbb
sub
or
sbb
xor
movl
add
movl
movl
xorl
movl
subl
movl
mov
xorl
mov
sub
sbbl
and
dec
and
add
mov
orl
sub
cmpl
movl
movl
movl
movl
jmp
mov
mov
jbe
push
push
pushl
push
push
call
xorl
adcl
orl
sbb
adcl
sbbl
mov
adc
mov
pushl
sub
mov
mov
lea
push
cmpl
mov
mov
jmp
movl
je
push
push
push
call
adcl
xor
movzbl
or
negl
pop
andl
xor
div
mov
sub
pushl
mov
mov
adc
pushl
movzbl
xor
mov
xorl
pushl
subl
and
sbb
pushl
addl
mov
pushl
xor
and
pushl
movl
mov
sub
decl
pushl
subl
call
mov
mov
sub
and
movl
cmpl
movzbl
mov
jmp
movl
jle
call
add
or
xor
xor
add
orl
andl
not
sbb
movl
cmpl
movzwl
movl
movl
mov
jmp
mov
mov
jae
push
push
pushl
push
pushl
push
push
call
and
sbb
sub
adc
sbbl
sbb
adc
movl
add
movl
mov
mov
adcl
sub
neg
mov
and
subl
mov
adcl
xor
shr
imul
decl
pushl
subl
call
dec
cmp
movl
jne
movl
movl
mov
addl
mov
adcl
movl
sbbl
mov
adcl
call
lea
cmpl
mov
movl
mov
jmp
mov
mov
jle
pushl
call
adc
subl
adc
add
adc
mov
lea
sub
mov
and
mov
dec
mov
sbbl
mov
and
mov
addl
xor
add
shl
shr
xor
xor
mov
sub
xor
or
adc
mov
cmpl
mov
not
mov
mov
jmp
movl
movl
jbe
push
push
push
call
sub
or
sbb
xor
or
sub
mov
mov
mov
mov
cmpl
movl
mov
jmp
mov
mov
jle
push
push
call
sub
adc
mov
xor
xor
sub
xor
xor
not
andl
add
mov
mov
shrd
adcl
shr
mov
cmpl
mov
mov
not
jmp
movl
movl
jg
pushl
call
inc
adc
sub
and
inc
mov
orl
xor
xor
or
sbb
mov
orl
push
andl
pushl
adcl
lea
push
andl
shl
orl
call
sbbl
lea
orl
push
mov
addl
mov
lea
push
mov
lea
mov
mov
mov
push
call
push
push
pushl
call
mov
mov
mov
mov
shr
shl
or
mov
xor
mov
lea
mov
lea
mov
mov
sub
lea
xor
movl
movl
movl
movl
mov
mov
add
mov
mov
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
xor
shld
shl
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
xor
xor
shrd
shr
mov
mov
mov
shl
xor
or
xor
mov
mov
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
mov
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
subl
push
push
and
movl
movl
cmpl
mov
mov
jmp
notl
mov
jle
push
call
add
adc
adcl
sbb
or
sbb
xor
xor
sbb
movl
movzbl
adc
mov
mov
cmpl
mov
mov
movl
jmp
mov
mov
jb
pushl
pushl
call
xorl
addl
andl
addl
incl
mov
andl
xor
subl
div
imul
adc
mov
subl
xor
and
sub
mov
subl
xor
div
mov
mov
adc
sub
mov
andl
movl
movl
movl
mov
add
add
xor
mov
mov
and
xor
sub
imul
mov
and
sub
notl
mov
movl
cmpl
notl
mov
movl
jmp
movl
mov
jbe
push
push
pushl
call
adc
movzbl
adc
xor
xor
or
mov
sub
or
not
movl
movl
movl
cmpl
mov
movl
notl
movl
jmp
not
movzwl
jg
pushl
push
push
pushl
call
dec
or
mov
mov
sub
sub
movl
adc
adc
mov
imul
sub
mov
cmpl
movl
movl
jmp
movl
jb
push
push
call
or
adcl
xor
and
xor
add
add
cmpl
notl
mov
mov
jmp
movl
movl
jne
call
xor
sbb
andl
mov
mov
or
sbb
and
add
imul
sbb
imul
mov
and
or
negl
mov
addl
xor
mov
mov
and
mov
orl
mov
lea
mov
inc
movl
sbbl
movl
xor
movl
and
mov
cmpl
not
mov
mov
jmp
mov
jae
push
push
pushl
call
movl
movzbl
add
xor
sbbl
inc
xor
orl
mov
movl
or
cmpl
movl
mov
mov
jmp
mov
jge
push
pushl
push
push
call
mov
sbb
mov
dec
negl
add
adcl
adc
xor
add
cmpl
mov
movl
not
mov
jmp
movl
movl
jg
pushl
pushl
call
andl
and
sbb
xor
add
sbb
mov
mov
or
add
xor
or
mov
sub
movl
movl
movl
cmpl
movl
not
jmp
mov
mov
jae
push
push
pushl
call
mov
mov
add
orl
add
add
and
not
movzbl
xor
mov
add
cmpl
notl
movl
mov
jmp
movl
movl
jbe
pushl
pushl
push
push
push
pushl
call
add
add
subl
xor
not
andl
adcl
mov
sbbl
sub
mov
addl
lea
cmpl
movzbl
movl
mov
jmp
movl
jge
push
push
push
push
push
call
sbbl
xorl
add
add
add
mov
sub
or
xor
sub
movl
mov
adc
movl
xor
movl
mov
or
add
adcl
imul
dec
mov
addl
imul
adc
xor
mov
movl
div
cmpl
movl
mov
movl
jmp
movl
mov
je
pushl
call
sbb
addl
xor
addl
xorl
mov
sbb
sub
mov
and
sub
xor
mov
movl
cmpl
notl
mov
jmp
mov
mov
je
pushl
push
push
call
xor
adc
sbb
or
sub
movl
movl
mov
add
mov
xor
div
imul
add
mov
subl
xor
xor
mov
sub
mov
div
xor
orl
mov
movl
or
movl
cmpl
mov
mov
notl
mov
jmp
mov
ja
push
pushl
pushl
pushl
call
and
adc
movzbl
or
addl
mov
or
mov
and
movl
mov
or
mov
orl
sub
shr
andl
sub
mov
imul
mov
andl
and
add
mov
orl
sub
xor
xor
add
mov
mov
adc
movl
orl
movl
xor
mov
movzbl
xor
or
xor
mov
or
or
sub
xor
xor
xor
mov
mov
xorl
movl
sub
movl
add
movl
or
movl
and
movl
movl
cmpl
movl
mov
movl
mov
jmp
movl
mov
jbe
push
pushl
pushl
push
call
mov
or
andl
xorl
andl
mov
mov
add
cmpl
movzbl
notl
jmp
mov
jg
call
xor
or
mov
adc
sbb
xor
sbb
and
or
movl
mov
add
mov
subl
sub
not
mov
addl
imul
or
imul
mov
andl
or
mov
lea
push
call
mov
xor
xor
sbb
mov
mov
cmpl
mov
mov
jmp
movl
jge
pushl
call
xor
or
mov
sub
movzbl
sub
addl
mov
mov
and
movl
movzwl
xor
mov
add
imul
add
and
or
sub
mov
or
mov
xor
add
mov
addl
div
xor
cmpl
movl
mov
mov
jmp
movl
not
jl
push
call
mov
mov
sbb
add
adc
not
sub
add
add
mov
movl
mov
add
movl
xor
movl
movzwl
and
mov
movl
sub
movl
adc
movl
movl
add
movl
mov
and
movl
movl
and
movl
orl
movl
adc
mov
andl
mov
cmpl
notl
mov
movl
jmp
movl
movl
jl
pushl
push
push
push
pushl
pushl
call
orl
sbbl
sub
adc
add
adc
mov
sbb
and
add
sub
mov
xor
xor
sub
xor
sub
cmpl
mov
movl
not
jmp
mov
ja
pushl
push
pushl
push
push
push
push
call
not
xor
xor
or
mov
sub
or
sub
adc
andl
or
imul
sub
mov
incl
lea
mov
mov
mov
xor
mov
subl
mov
sub
mov
sbb
xor
or
add
mov
mov
xor
lea
add
and
mov
sub
adc
add
mov
cmpl
mov
notl
movl
jmp
movl
mov
jne
call
mov
mov
sub
or
sbb
xor
adc
andl
and
movl
cmpl
mov
mov
mov
mov
jmp
movl
mov
jge
pushl
push
push
call
mov
mov
or
subl
sbbl
xor
add
adc
movzwl
sbb
mov
movl
cmpl
movzwl
mov
movzbl
mov
jmp
movzbl
movl
jge
push
push
call
and
sub
mov
adc
adc
xor
movl
movl
mov
sbb
mov
sbb
mov
adcl
xor
adcl
xor
mov
call
mov
adc
mov
or
mov
and
mov
addl
mov
xorl
xor
subl
xor
adcl
mov
call
or
mov
xor
or
add
mov
mov
add
mov
orl
xor
notl
xor
andl
mov
adcl
call
subl
mov
movzwl
add
mov
andl
mov
movzwl
adc
mov
mov
xor
adcl
xor
adcl
mov
subl
mov
or
mov
xorl
mov
andl
mov
adcl
call
mov
or
cmpl
notl
movl
movl
jmp
notl
mov
jae
push
call
xorl
adcl
incl
xorl
addl
sbbl
orl
mov
adcl
or
adcl
push
push
andl
push
subl
push
xorl
call
mov
movl
cmp
jne
movzwl
sbb
mov
adc
mov
addl
xor
sbbl
xor
mov
incl
call
mov
cmpl
mov
mov
movl
movl
jmp
mov
movl
jle
call
xor
add
sbb
not
add
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
mov
mov
add
push
xor
push
negl
mov
or
jne
mov
cmpl
movl
mov
mov
movzbl
jmp
mov
jbe
push
call
xorl
movzbl
sbb
movzwl
and
subl
xor
sub
or
mov
cmpl
mov
mov
movl
jmp
mov
notl
jle
push
pushl
call
sbb
decl
addl
sbbl
adcl
or
and
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
subl
cmpl
je
cmpl
movl
mov
movl
jmp
movl
movl
ja
pushl
push
pushl
call
xor
or
sbbl
mov
and
mov
xor
sbb
mov
xor
xor
sub
and
add
mov
mov
pop
pop
pop
leave
ret
movl
cmp
movl
jae
cmp
movl
jae
orl
shld
movl
shl
ret
dec
mov
addl
xor
and
shl
ret
xor
xor
ret
