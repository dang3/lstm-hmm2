push
mov
sub
mov
adc
mov
mov
or
mov
sub
push
movl
mov
mov
mov
sbb
mov
and
mov
orl
mov
mov
add
orl
mov
add
mov
jmp
iret
inc
loopne
push
adc
fmuls
pop
mov
pfrcpit1
fisubs
mov
jmp
xlat
sahf
repz
in
mov
adc
ss
data16
mov
dec
inc
movsl
mov
pop
inc
xchg
mov
fdiv
ret
orl
adc
movsb
jge
dec
mov
and
cwtl
clc
pusha
lds
popf
mov
inc
push
mov
cli
imul
loop
push
stos
xor
notb
out
mov
cmp
xor
sub
jae
jp
call
jle
push
push
jl
adc
or
cmp
lret
xor
mov
aam
jne
push
ret
inc
sbb
pop
cmp
test
enter
xchg
fdivrs
push
lret
adc
ss
shlb
mov
or
icebp
outsb
jno
pop
dec
pushf
xchg
dec
cli
std
neg
std
test
mov
jmp
sbb
ret
xor
js
mov
fisttpll
test
mov
pushf
inc
iret
push
or
out
add
mov
mov
cld
test
xor
adc
mov
decl
jnp
out
and
fidivl
pushf
in
pop
outsl
push
aaa
jge
and
leave
jl
sub
aaa
push
pop
insl
and
jecxz
imul
push
je
cs
shrl
add
shrl
pusha
cltd
pavgw
or
cltd
mov
hlt
mov
subb
xor
dec
aam
mov
xchg
pop
imul
pushf
lahf
or
das
scas
jbe
push
cmp
mov
lods
stos
dec
xchg
jmp
subl
jno
jne
into
into
xor
xor
dec
xor
mov
lret
lds
fwait
ret
in
add
rcrl
scas
shll
xchg
dec
mov
push
and
pop
fxtract
xchg
rolb
dec
push
arpl
jge
cmp
dec
or
xchg
xor
pushf
out
push
mov
scas
loopne
movsb
movsl
in
push
sub
push
cmp
fistpll
and
adc
daa
jg
mov
jl
mov
adc
pop
outsl
push
sbb
cmp
or
push
jne
div
andb
addr16
cmp
in
clc
jmp
sub
pop
insl
push
mov
int3
inc
adc
dec
sub
test
inc
xchg
movsl
sbb
or
sbb
xchg
jae
in
mov
adc
xchg
sbb
pop
lds
adc
sub
jo
lahf
sbb
or
shl
mov
mov
push
and
ljmp
sbb
xor
loope
std
xchg
jns
dec
jle
sbb
jbe
inc
xchg
sbb
stos
mov
cli
in
movsl
shr
sub
sarb
xchg
push
push
xchg
les
ss
and
mov
xchg
mov
sbb
insl
pop
mov
lahf
jnp
push
jnp
movsl
out
pop
icebp
mov
inc
movb
ja
gs
fisttps
loop
stos
xor
or
nop
pop
sbb
lock
adc
pop
and
shlb
xor
cltd
sti
inc
sbb
out
lret
ja
or
stc
xor
gs
xchg
dec
jmp
xor
mov
shll
stc
arpl
dec
pop
push
in
xorb
data16
movsl
data16
or
or
mov
xchg
inc
push
fwait
fs
mov
clc
pop
mov
cmp
adc
in
dec
mov
pop
lret
push
inc
xor
add
xor
fnstsw
mov
test
lret
repz
lods
xor
aam
mull
lods
and
xor
shll
adc
ljmp
in
scas
data16
imul
add
out
jns
imul
fmull
add
leave
call
loope
sti
or
test
xchg
or
sub
subb
bound
push
in
sub
xchg
int3
pop
and
enter
lds
jbe
sbb
pop
jns
and
arpl
cmp
mov
popa
lcall
jo
sbb
subl
cmp
jg
mov
push
test
pushl
es
jle
pusha
adc
pop
das
xor
sbb
push
mov
ds
fwait
cmp
push
sub
in
ljmp
sarl
pop
pushf
xor
stos
fdivs
mov
sub
rcll
out
popa
ja
mull
and
pop
add
test
xchg
mov
pop
ret
xor
sbb
dec
push
mov
test
cmp
stos
arpl
rorb
and
icebp
ds
add
xchg
dec
cltd
in
jmp
mov
addr16
xor
adc
in
cld
repz
adc
jne
mov
mov
insb
inc
dec
aas
or
xchg
mov
into
mov
mov
and
xchg
in
andb
out
pop
fistps
fsub
push
fisttpll
mov
ret
ret
mov
rol
push
xchg
loop
mov
addr16
jl
jmp
testb
leave
aaa
repnz
mov
lds
mov
sarb
lret
sarb
jne
adc
mov
cld
add
std
jmp
daa
jecxz
loopne
pop
adc
lahf
xor
mov
inc
inc
lret
mov
dec
adc
sbb
adc
cmp
push
pop
ja
imul
pop
iret
mov
rcrb
add
int3
mov
bnd
clc
push
mov
lahf
lcall
jbe
lods
mov
ljmp
mov
push
mov
in
loopne
xchg
rolb
sbb
movb
mov
popl
fs
add
xlat
out
out
mov
rorl
loop
clc
mov
out
nop
push
push
in
mov
repz
add
xorl
mov
aas
jbe
dec
faddl
call
cs
pop
add
ja
enter
cmp
repz
push
or
shrl
xchg
adc
popa
inc
add
dec
adc
test
inc
push
pusha
adc
scas
out
mov
cltd
loope
bound
ffreep
inc
jmp
push
test
jo
mov
mov
sahf
mov
cmp
mov
cmp
ficomps
cmp
jne
adc
scas
sbb
dec
jg
loope
pop
sbb
frstor
cltd
lods
push
pop
push
jp
sbb
mov
stc
add
xor
int
sub
icebp
pop
mov
leave
add
mul
mov
mov
jmp
pop
mov
xchg
fisttpll
xchg
daa
pop
stos
pop
xor
jecxz
cmc
aaa
aad
mov
adc
xor
xor
fmuls
adc
dec
xor
and
loopne
xchg
ds
sub
xchg
into
shl
popf
push
lahf
push
sub
inc
test
insb
inc
aam
mov
bound
pop
sti
rcrl
push
fimuls
and
inc
mov
mov
mov
addl
sub
notl
mov
movl
sbb
add
mov
not
orl
orl
cmpl
movl
mov
jmp
mov
jg
pushl
pushl
call
sbb
sbb
sub
or
orl
lea
adc
mov
or
mov
and
mov
xorl
mov
adc
add
mov
dec
mov
mov
adc
jmp
mov
xor
js
mov
mov
xchg
ret
mov
test
lods
lcall
or
add
cmpl
push
dec
iret
mov
out
xchg
inc
dec
xchg
out
lock
add
pushf
pop
insb
ss
iret
test
xor
clc
sub
pop
or
cmovle
xchg
dec
lret
ret
dec
jl
fmull
dec
das
cmpl
or
mov
fnstenv
push
mov
les
sub
cltd
add
mov
mov
jmp
xor
or
xor
inc
sti
mov
negl
rcrb
adc
aad
sahf
push
sub
jge
cmc
xchg
test
push
jmp
lods
cmp
inc
cltd
xchg
in
lods
mov
clc
jle
test
push
adc
xor
stos
push
xchg
out
push
cmp
daa
add
jge
mov
loopne
dec
jle
and
pop
xchg
xor
fwait
dec
inc
ror
in
popf
xor
ret
cmc
push
mov
adc
fdiv
sbb
popf
scas
sahf
mov
loope
xor
push
test
in
inc
rol
insl
jo
jb
idiv
lfs
xor
lcall
pusha
sti
add
cmpsb
lret
inc
fsubrp
xlat
lret
mov
pusha
jo
mov
xlat
std
movsb
cli
fcoms
push
pop
les
mov
inc
sub
mov
insb
cmp
lds
dec
mov
mov
sahf
and
sub
test
inc
or
cmp
cmpsb
aam
push
xchg
pop
stos
push
ljmp
xor
daa
xor
jg
and
xor
cltd
jecxz
sbb
xchg
jp
ja
jnp
mov
or
and
lods
fucomp
std
leave
stos
push
mov
pushf
cli
in
aas
jp
cmpsb
ja
jle
rclb
add
clc
cs
and
xor
sahf
jle
ret
mov
rol
lods
push
or
adc
dec
sbb
call
sbb
sub
dec
out
xchg
faddl
add
mov
add
fstpl
pop
dec
push
fsubrp
pop
pushf
movsl
fcoms
mov
ret
pop
addr16
daa
xor
aad
cmpsb
add
cmp
cmp
cld
loop
in
jmp
test
stos
xor
dec
adc
in
ret
outsb
sub
mov
cmp
sbb
mov
das
and
jno
push
or
jnp
rclb
imul
or
mov
push
and
dec
add
in
das
sub
dec
lea
out
sub
xor
mov
jne
jo
icebp
pusha
pop
pop
inc
aam
int3
popa
std
push
and
clc
sub
lcall
jp
lock
in
aam
cmpsb
imul
dec
dec
xchg
xchg
idivb
push
shl
into
or
in
inc
cld
ret
jo
pop
fsubrl
dec
fcmovbe
imul
xor
jge
cmp
cmp
fistl
lea
mov
in
sub
mov
push
repnz
mov
test
or
aas
int
mov
dec
cmp
call
add
test
xor
je
aad
and
mov
or
sbb
jo
push
push
test
add
fidivrs
lcall
scas
mov
into
cltd
cmp
clc
xor
sub
psubusw
mov
xchg
pop
sar
stos
pop
clc
jb
enter
imulb
pop
shl
xchg
sti
inc
add
cmpsl
arpl
ret
inc
notb
jae
in
in
cmp
add
divb
cmp
sbb
jp
outsb
mov
pop
gs
and
iret
repnz
rcrl
dec
jb
or
mov
jg
add
cmp
daa
fimull
pusha
jns
adc
test
shrb
fucomp
fnsave
cmp
pop
lcall
fbstp
bndstx
push
sub
sub
and
jo
insl
add
mov
jne
pushl
jae
outsb
inc
cmpsl
movsb
lahf
add
aam
js
dec
jl
pop
sub
into
int3
cld
sti
jbe
lahf
adc
or
push
movl
mov
clc
xor
bound
mov
shl
adc
outsb
xchg
insb
in
xchg
test
les
xor
or
jle
in
popf
sarl
pop
rcll
dec
or
or
xchg
jns
jle
pop
fcompl
xchg
mov
jl
out
sub
int3
jmp
loop
xchg
ss
pop
cli
pop
cmp
daa
cmp
dec
popa
loopne
test
popa
dec
pop
ss
sahf
imul
adc
dec
test
mov
push
jne
in
testb
cwtl
scas
xchg
push
and
in
insb
out
inc
pop
or
xchg
inc
call
and
inc
frstor
push
rcrb
and
dec
movsl
in
clc
imul
jmp
lock
cmp
jmp
bound
movsb
jb
aam
subb
fldl
mov
cmpsb
mov
jmp
daa
sar
sub
hlt
movb
add
jns
jp
test
inc
push
out
ljmp
imul
fdivrs
mov
cmp
fisttpll
push
cmpsb
arpl
insb
jmp
xchg
fisubl
xor
fnstenv
jp
push
stc
xor
pop
add
xor
mov
jno
mov
or
xor
test
lods
sbb
aad
repnz
aad
pop
xor
fildll
jl
pop
aaa
jo
fildll
aaa
pushf
dec
movsb
cli
cmpb
push
adc
sub
test
inc
test
mov
aaa
in
xor
ret
push
out
mul
div
cld
daa
adc
add
sub
jne
in
inc
shl
imull
cmp
out
xor
popa
cmp
dec
ss
stos
pop
mov
add
hlt
rcl
repnz
pop
pop
stc
imul
cvtps2pi
cmpsl
and
xchg
sti
rcrb
mov
sbb
sbb
lahf
or
cmp
popa
aaa
leave
mov
js
xchg
test
sub
jmp
idivl
out
lods
fsubr
inc
adc
and
cmc
fmulp
jne
out
repnz
insb
jb
fwait
cmp
test
mov
mov
out
mov
pop
pop
jns
add
push
xchg
jp
xor
mov
dec
pop
fdivr
out
add
adc
es
iret
ds
jg
flds
jb
xchg
pop
sarb
test
sbb
and
aam
aam
mov
sub
sbb
jle
xor
out
and
stos
es
cmc
mov
push
mov
adc
ret
inc
fdivrp
call
xchg
out
imul
jb
mov
mov
jne
call
xor
lods
enter
hlt
adc
add
jmp
jmp
mov
lock
popf
mov
fimull
push
and
ja
fcompl
addb
xor
data16
fimull
int3
lods
cmp
test
je
add
test
inc
enter
dec
arpl
mov
sub
leave
popa
es
mov
ja
push
push
orl
arpl
insl
and
rcll
movl
xchg
adc
pop
lret
sbb
fwait
jge
inc
loopne
lods
xchg
int
mov
in
xor
sub
adcb
sub
cld
dec
jecxz
xchg
bound
stos
dec
inc
mov
lods
sbb
icebp
dec
adc
clc
rol
out
xor
sbb
mov
and
lods
push
and
andl
sbb
repnz
sbb
adc
pop
aam
sub
stc
dec
inc
push
inc
mov
push
mov
fstl
aas
fsubs
adc
xchg
shlb
mov
pop
xor
and
mov
or
mov
sbb
pop
loop
ds
jne
nop
test
jge
loope
or
nop
xor
jbe
push
push
and
dec
push
xchg
sub
cmp
inc
adc
and
mov
cmpsb
push
push
daa
mov
cmp
push
lret
add
into
push
cmc
shr
aas
adcb
shl
cmp
loop
pop
inc
les
mov
sbb
das
pop
push
pop
xchg
stos
push
xor
dec
loope
ret
jp
mov
inc
cmc
jae
call
dec
gs
aas
jne
dec
iret
movsb
fsubl
adc
enter
adcl
sbb
fcmove
sub
mov
js
mov
gs
lods
adc
dec
mov
dec
imul
jg
pop
ljmp
and
mov
and
jecxz
push
mov
mov
adc
jecxz
or
and
push
cmp
shll
xor
outsl
jmp
je
push
in
and
and
sbb
fsubrs
inc
or
mov
je
loopne
xlat
scas
jno
testb
ret
cmp
push
es
cmpl
push
imul
lods
cwtl
test
add
dec
sar
add
xor
xchg
mov
mov
and
icebp
aam
cmp
out
or
adc
loopne
inc
mov
rcll
sub
xor
or
andnps
mov
xor
mov
add
fwait
adc
push
sbb
in
mov
xchg
cld
jne
pop
loop
cli
mov
sbb
mov
fnstcw
dec
lahf
call
lods
ret
sti
lret
jnp
repz
aas
xchg
adc
and
in
inc
test
dec
imul
ds
loop
subl
bound
ljmp
std
jg
mov
cld
ds
daa
cltd
std
cmp
jle
in
jbe
mov
pop
dec
and
mov
ret
jbe
out
movsb
sub
sbb
rcll
loop
adc
mov
dec
or
fidivl
inc
aad
xlat
pushf
or
cld
xchg
mov
sub
xchg
xor
sarb
push
sub
es
pusha
sti
sub
insb
or
adc
xor
nop
mulb
dec
cmp
mov
sub
or
arpl
jle
inc
sub
add
and
sbbb
sarb
xor
int
shll
iret
or
aaa
mov
fwait
push
jo
xor
repnz
push
mov
pop
out
jnp
aam
rol
sub
mov
lret
inc
dec
cmp
mov
dec
ret
cmp
addr16
test
or
test
and
jge
mov
repnz
and
cmp
jge
sahf
xor
daa
std
fwait
leave
or
sbb
adc
sti
sahf
xchg
dec
js
ss
loopne
xchg
out
int
es
out
xchg
cld
and
add
call
cli
mov
fnstsw
mov
sbb
arpl
insl
dec
and
and
mov
sarl
adc
mov
into
adc
or
adc
xor
or
lahf
ss
mov
sub
setae
inc
cwtl
cmp
adc
insl
mov
push
nop
jmp
int3
shlb
fidivrl
or
mov
in
adc
out
dec
inc
pop
jmp
test
dec
cmp
jnp
sbb
les
rcrb
or
int
and
add
push
dec
lret
insl
xor
stc
clc
push
loopne
shl
pop
cmpsb
mov
sub
fstp
sbb
rcrl
pmaddwd
out
xor
repnz
les
dec
lcall
pusha
test
pusha
mov
dec
out
fstpt
ja
push
int
into
out
pop
stos
nop
into
pop
inc
stos
add
mov
xlat
inc
gs
out
insb
or
xlat
lea
sub
lcall
push
push
mov
fadds
bound
xchg
add
inc
dec
shrl
jp
je
add
jg
sub
xor
sub
jae
and
insl
sub
or
and
sbb
idivl
adc
mov
adc
enter
mov
mov
and
and
push
cwtl
fldenv
in
inc
rcrb
jl
cmpsb
in
ljmp
fisttps
decb
xchg
xchg
or
mov
xchg
je
cltd
sub
and
xchg
mov
xchg
test
mov
int
and
inc
push
ja
fldcw
push
inc
xchg
das
push
shll
lahf
jecxz
ss
xor
popf
inc
dec
add
jmp
or
sarl
push
mov
push
mov
cli
ds
je
inc
and
push
scas
jns
push
ret
dec
add
js
leave
movsb
mov
cmp
jbe
fsts
outsb
jnp
jmp
lret
or
scas
push
inc
xchg
repz
into
idivb
xchg
scas
adc
loopne
popf
xchg
jae
push
sub
loopne
aad
out
and
push
push
dec
scas
lea
daa
stos
xchg
in
stos
mov
ret
testl
mov
cmp
ret
cmp
pop
xchg
or
xlat
sub
fwait
rcl
mov
jmp
dec
jl
dec
psubw
pop
mov
add
sbb
cmp
movsl
call
notl
mov
lds
jg
int
pop
iret
sahf
xor
ljmp
jecxz
jge
cmc
clc
jecxz
jle
jp
rep
dec
out
xchg
jge
lret
rcl
popa
cmp
mov
jns
mov
and
testl
jle
les
pop
rcrb
clc
jle
cmp
pop
inc
push
mov
jb
inc
int3
insl
mov
push
mov
andl
xor
adcl
xor
or
cmpl
movl
movl
movl
jmp
movl
not
jg
pushl
push
push
push
pushl
push
pushl
call
sub
xorl
andl
andl
addl
addl
adcl
movzbl
adc
jmp
sti
loopne
stos
dec
or
xor
sbbb
ja
movsl
sub
fmulp
clc
push
add
inc
out
inc
dec
std
cmpsl
cwtl
jl
cmp
mov
popa
xor
jno
nop
or
pop
pop
cli
lcall
mov
lret
sub
sub
sahf
mov
adc
dec
pop
fs
push
jb
push
fs
sbbl
movsb
repnz
jecxz
lods
ja
ret
lods
sbb
adc
adc
or
ljmp
js
jns
xchg
mov
loope
sbb
nop
pushf
xor
fimull
cmc
pop
divb
adc
xor
push
mov
adc
pop
sbb
xchg
and
aam
push
es
movsl
inc
sub
rclb
xchg
pop
inc
sbb
fcmovnb
aad
mov
cmp
xchg
sub
pushf
add
les
cmpsb
add
jne
or
xor
imul
out
repz
sbb
out
sub
lcall
sub
dec
clc
fldt
xchg
lds
pop
sahf
insb
mov
mov
lods
xchg
imul
test
outsb
xor
mov
daa
jno
xor
pop
inc
mov
and
addr16
pop
jo
aad
cwtl
dec
pop
mov
fwait
push
and
and
push
push
neg
or
xchg
pop
and
inc
mov
dec
mov
pop
cmp
sahf
inc
sti
dec
inc
sti
jne
dec
rcl
cmc
jle
push
push
lea
xchg
mov
pusha
mov
mov
adc
notl
inc
push
mov
out
or
and
push
push
mov
je
mov
and
hlt
sub
push
in
sub
loop
inc
fadd
xor
add
mov
mov
xorb
negb
ret
test
outsl
inc
test
fwait
jnp
mov
aam
cmp
cltd
les
adc
loop
jmp
adc
add
int
dec
ficompl
das
sbb
pop
cmp
icebp
sbb
je
jae
out
fimuls
xor
lcall
pop
test
scas
mov
pop
mov
insb
shll
cs
ljmp
xchg
or
pop
jb
and
jnp
loopne
push
cmc
ss
cmp
sbb
ja
cwtl
outsl
add
jp
xchg
jnp
fstpt
jle
dec
and
and
lods
pushf
adc
lea
loopne
fstpt
adc
jg
cwtl
outsl
mov
push
jne
icebp
out
repz
insb
xchg
mov
xchg
adc
cmp
push
out
mov
cmp
jbe
ljmp
mov
mov
jecxz
subb
sub
rcll
pop
int3
jae
ja
lds
in
insl
sub
xor
enter
mov
add
add
leave
repnz
xor
bound
test
add
push
pop
sahf
inc
sbb
jns
xchg
lcall
inc
jbe
cmp
mov
outsb
xlat
xchg
mov
xor
or
arpl
pop
adc
sub
rcll
mov
pushf
cmp
push
popf
insb
adc
fidivl
negb
loopne
in
icebp
je
or
cmpb
mov
xchg
movsb
push
aas
ljmp
sti
sub
emms
xor
push
shll
nop
lahf
ljmp
pop
or
lret
or
jbe
mov
inc
arpl
sub
imull
shlb
negl
fsubr
outsb
insl
rcrl
push
push
and
jmp
lds
repnz
cmp
dec
push
xchg
cmp
leave
and
xor
daa
jg
pushf
out
repz
cmc
lahf
ds
test
jns
sub
jbe
sahf
mov
out
jno
pushf
mov
sbb
insl
bound
repz
add
cmp
insl
xlat
leave
fsubrl
out
cli
mov
xchg
inc
sbb
inc
cmovo
hlt
fstpl
pushf
enter
mov
sbb
push
push
orl
add
mov
fsubs
cmp
mov
call
mov
dec
add
aam
pop
popa
mulb
jae
cmp
arpl
pop
pop
inc
cmp
sub
inc
out
shll
dec
push
or
mov
dec
and
push
iret
lds
and
rcr
adc
rcr
sahf
adc
test
mov
test
jle
adc
insb
insb
sbb
das
stos
das
les
mov
inc
stc
repnz
ja
sbb
mov
shr
and
xor
pop
add
jp
xor
nop
daa
jnp
mov
push
pop
adc
cs
push
pop
sbb
sub
nop
adc
enter
and
repz
popa
or
aaa
xchg
jmp
pop
icebp
xor
mov
cmp
xor
push
inc
push
mov
stos
pushf
cmpsb
push
dec
sahf
jp
add
pop
xor
mov
das
inc
fbld
int
stos
stos
sub
data16
loopne
xchg
sub
pop
jno
inc
fs
cmp
int3
fadds
mov
push
testl
test
mov
inc
imul
jnp
adc
mov
iret
loop
leave
jnp
jo
fimuls
mov
jns
adc
movb
shrb
int3
xchg
jmp
ja
aam
ret
and
add
push
shll
add
xchg
data16
push
pusha
cltd
dec
inc
jnp
test
popa
cmp
push
dec
pop
pop
bound
les
call
jne
rorl
xchg
mov
into
or
mov
outsb
xchg
inc
popfw
mov
loopne
mov
jo
sti
push
loopne
dec
imul
scas
pushl
xor
and
pop
mov
xchg
lods
mov
data16
mov
and
and
mov
jno
daa
mov
jge
sub
nop
inc
test
rcr
push
js
cmp
in
mov
cli
fsubrs
mov
push
out
inc
pop
andb
pop
mov
inc
sub
int
jg
scas
push
pop
push
mov
pushf
ret
hlt
mov
push
gs
sub
cltd
int3
mov
bound
fninit
pop
orl
divl
xchg
hlt
out
iret
sbb
mov
jae
xor
outsb
xchg
loope
mov
in
pop
or
pop
xor
int3
mov
cli
cmpsl
int
ret
enter
xchg
nop
mov
arpl
rorb
outsl
movsl
cli
adc
js
push
sbb
pop
mov
int
cmpsb
sti
sti
pop
xlat
xor
xor
jns
dec
notb
rcrl
arpl
insb
and
fcoms
loope
data16
mov
sbb
dec
cmp
ficomps
int
mov
cmpsl
xchg
sti
les
fidivrl
cmp
popf
test
xor
dec
popf
mov
or
and
push
cwtl
inc
mov
mov
imul
mov
inc
add
inc
nop
push
sub
add
inc
xchg
outsl
inc
add
sub
movl
movl
and
movl
movl
movl
xor
or
adc
movl
cmpl
movl
mov
jmp
not
jl
push
pushl
pushl
push
call
add
sbbl
add
sbbl
xorl
sbbl
notl
or
movl
addl
movl
movl
movl
mov
or
mov
movl
dec
movl
movl
cmpl
movl
movl
movl
movl
jmp
mov
jge
push
call
movl
orl
orl
add
xorl
xorl
xorl
and
movl
cmpl
movl
mov
jmp
mov
mov
jb
push
pushl
push
push
pushl
push
pushl
push
push
pushl
pushl
call
orl
sbbl
adc
addl
movl
sbbl
movl
add
movl
jmp
and
jnp
sub
mov
ja
dec
mov
xchg
iret
mov
mov
mov
cmpsl
insl
adc
not
lea
xor
fbld
xor
and
out
xor
xchg
mov
push
test
sub
aad
pushf
push
push
mov
xchg
xchg
ret
cld
loop
xorl
jns
mov
sub
aaa
jns
mov
mov
dec
loope
jnp
dec
sbb
mov
leave
xchg
dec
jo
popf
mov
enter
add
loope
jp
mov
fmull
dec
test
mov
les
dec
fnstsw
mov
out
ds
add
mov
and
cmpsl
stc
pop
add
sub
inc
andl
ret
add
lcall
aam
aad
popf
xor
dec
add
rcrb
icebp
insb
das
jno
ljmp
cltd
or
jb
adc
inc
jbe
mov
mov
sub
repnz
lret
inc
cmp
cmp
mov
cli
ficomps
pop
rcrb
bound
aam
xchg
stos
lcall
sahf
pop
push
pop
ja
mov
mov
adc
loope
pop
mov
push
dec
cmp
lea
mov
jbe
dec
dec
xchg
adc
mov
lods
sbb
xchg
xchg
lods
loope
sti
iret
pop
pop
arpl
lds
or
lahf
and
adc
cld
jmp
call
fisubs
inc
push
lret
adcl
cltd
inc
sub
mov
mov
mov
ljmp
das
mov
gs
mov
pop
outsb
repnz
sub
loop
jp
mov
fwait
in
daa
movsl
inc
pop
fiaddl
mov
aaa
clc
fcmovnbe
lods
sahf
inc
pusha
jp
mov
mov
mov
and
test
movsl
ss
push
loopne
jo
daa
adc
push
sub
scas
push
add
add
cmp
pop
cmc
sarl
and
arpl
sbb
adc
xchg
out
pop
and
cmp
and
push
inc
dec
negl
pop
test
mov
dec
mov
mov
imull
xlat
cld
std
mov
mov
pop
pop
and
push
cmc
or
icebp
arpl
fcmovnu
dec
cli
mov
pop
lods
call
pop
add
gs
lock
mov
ja
das
ret
dec
mov
xchg
inc
sub
or
mov
stc
adc
xchg
lret
pop
stos
ds
shl
pop
mov
pop
xchg
mov
movsl
jns
rcrl
lea
mov
ret
dec
or
add
test
jl
mov
and
push
adc
sbb
adc
add
addb
cld
out
in
pop
jp
add
mov
test
xchg
ret
push
aas
jmp
mov
dec
call
nop
pop
add
cmp
pop
test
lret
push
pop
loopne
jmp
push
dec
mov
data16
mov
mov
xchg
mov
xchg
imul
sub
test
outsl
clts
in
push
push
push
ss
dec
shrb
cmpsb
mov
xchg
cmp
cmpsl
ret
std
xor
leave
arpl
les
pushw
cld
mov
mov
negl
incb
pop
shlb
pusha
cmpsb
inc
mov
mov
js
and
mov
outsl
lock
mov
pop
push
in
cmp
add
jle
movsb
cmp
dec
jg
ljmp
mov
ss
mov
lret
mov
and
cmpl
mov
push
stos
xchg
in
jne
das
dec
pop
inc
clc
jmp
shll
sbb
out
mov
daa
subl
repz
std
pop
jo
xor
add
mov
sbb
xchg
xor
fiaddl
mov
notl
ja
or
cmpsl
xchg
pop
add
daa
jge
pop
and
ret
and
mov
add
js
xor
dec
xchg
rcll
mov
inc
xor
add
mov
mov
cmp
add
mov
push
sti
fwait
enter
push
cmp
push
mov
mov
arpl
test
push
and
xchg
push
pop
in
int3
cmp
jns,pt
leave
add
push
add
out
jecxz
lds
test
xor
mov
ja
stc
and
sbb
rcl
xchg
push
leave
mov
test
cwtl
cld
mov
cmp
call
cmc
cmpsb
hlt
push
adc
fwait
int
mov
inc
int3
das
xor
in
add
cmp
cmc
loopew
and
cmp
xchg
insb
leave
and
inc
add
in
loope
xchg
mov
sub
scas
add
xor
inc
mov
adc
sbb
popf
sbb
ds
ss
xor
or
push
sti
mov
and
push
jae
jecxz
pop
mov
pop
adc
lods
mov
sbb
cmpsl
or
bound
arpl
mov
pop
mov
add
xchg
mov
in
addb
cmp
sub
or
jnp
inc
inc
mov
adc
fmul
push
movsl
mov
cmp
xchg
sub
inc
jecxz
loopne
nop
jl
out
inc
inc
pushf
jo
xor
lea
daa
jp
cmpsl
dec
fstl
jbe
xor
cmp
inc
in
dec
stc
jl
and
lahf
push
sbb
mov
mov
imul
scas
in
addr16
push
dec
xlat
and
popf
dec
jns
xor
xchg
jmp
repz
outsb
xchg
inc
push
int3
std
pop
jmp
adcl
clc
cmpsl
sbb
inc
pop
push
out
mov
mov
insl
and
xchg
jge
mov
test
add
push
and
lcall
cmp
sbb
inc
mov
jle
out
fisubs
sub
xchg
repz
pop
sti
hlt
push
add
test
adc
cmp
jg
lret
push
pusha
jns
mov
ret
test
jbe
jmp
repz
ljmp
movsb
mov
loopne
push
cs
inc
and
mov
rcrl
cmp
clc
testl
add
xor
shll
ror
int3
andb
sti
aam
jnp
in
fs
idivb
in
insb
mov
dec
test
fsubrs
adc
int3
fwait
xchg
insb
jmp
inc
sti
arpl
mov
dec
or
popf
mov
lret
xchg
pop
dec
jle
outsb
pop
xchg
movsb
jmp
popf
stos
dec
mov
jg
cs
fiaddl
lret
sub
mov
movb
jbe
fs
add
pop
sub
cmp
dec
inc
mov
push
add
inc
movl
xorl
movl
mov
xor
movl
not
movl
mov
addl
jmp
in
outsl
dec
gs
notb
inc
test
cmpsl
les
ja
clc
lret
mov
cmpsl
loopne
jne
pop
xor
jnp
fiaddl
sub
sub
aaa
and
xor
cmpsl
inc
inc
cs
mulb
xchg
mov
lds
add
mov
dec
inc
shr
lret
push
outsb
jb
lods
jns
add
imul
cmpsl
outsb
arpl
pushf
xchg
mov
or
stos
xlat
in
outsb
test
mov
cmp
xor
cltd
sub
fcoml
inc
sub
lcall
mov
jno
mov
dec
mov
dec
push
mov
repz
push
ds
mov
adc
sub
nop
cmp
add
push
jecxz
outsb
xchg
gs
pop
js
mov
nop
enter
mov
jle
mov
xchg
popf
push
inc
push
mov
pop
test
pusha
jle
pop
movl
jp
ret
sub
aas
outsb
icebp
add
jno
mov
repnz
mov
push
xchg
jns
dec
fldenv
fwait
and
in
addr16
mov
cmpsl
daa
add
adc
stc
ret
cmp
mov
out
inc
dec
adc
add
mov
dec
int
loopne
and
lcall
test
cmpsb
dec
cmc
in
decl
aam
pop
outsl
and
adc
mov
pop
in
mul
inc
lods
lret
insl
lret
sub
rcll
jg
out
push
pop
push
cli
and
andb
outsl
hlt
adc
rcr
movsl
lods
out
add
int3
data16
mov
fcompp
xchg
cmp
xorl
hlt
sti
sbb
ret
xor
inc
mov
stc
div
xchg
in
jne
fbstp
jmp
xorl
fs
int3
je
rorl
jne
adc
popa
mov
clc
movsl
lock
ja
and
and
add
or
mov
fcompl
add
jbe
cmp
add
push
or
mov
test
sub
loope
sub
sbb
push
and
mov
sbb
arpl
ret
nop
subb
in
jae
jnp
jg
pop
adc
push
pop
push
jge
push
xorb
xchg
lahf
jo
test
lods
cs
or
fs
ja
push
sbb
or
out
xchg
dec
xchg
cmp
push
lret
and
div
aaa
sub
out
and
cmp
jmp
ret
popa
mov
dec
cwtl
je
inc
cmp
or
enter
imul
dec
jle
xchg
sahf
leave
and
dec
shlb
clc
jne
out
lock
pop
sbb
cwtl
xor
dec
cmp
xor
mov
pop
adc
lret
ljmp
pop
cmp
mov
xor
sbb
cmp
mov
and
lods
push
mov
mov
push
sbb
mov
cs
sub
decb
js
in
cltd
fwait
popa
mov
cmpsl
sbb
cli
daa
sub
mov
aam
jg
xchg
andb
addr16
pop
pop
aaa
aad
les
xor
mov
fnstsw
lret
mov
mov
or
jnp
aas
outsb
jmp
sbb
xor
decl
call
jno
fnsave
lret
mov
movsl
insl
and
fildll
je
dec
mov
outsl
pop
fimuls
inc
into
pcmpeqb
outsb
movsl
mov
cli
pusha
int3
xchg
fsts
fcomps
and
inc
dec
jno
nop
out
sub
aad
leave
adc
int3
lea
jo
rcll
lods
jo
ficompl
jl
stos
adc
ljmp
xor
lods
test
in
pop
mov
sbb
hlt
imul
and
ficomps
sub
pop
jnp
adc
pop
mov
fdiv
push
out
pop
xor
aas
mov
cld
push
mov
loop
lcall
loope
sbb
pushf
mov
shlb
fsubrs
inc
mov
add
cmp
xor
mov
pop
lods
bound
leave
dec
outsb
mov
adc
mov
or
dec
and
xchg
loop
ret
les
cmpsl
dec
icebp
mov
nop
rclb
sub
sbb
jecxz
xchg
sahf
adc
repz
dec
push
or
xor
cld
mov
test
cld
insb
pop
cmp
pop
enter
and
jns
inc
pop
in
and
xor
ds
pop
les
js
or
push
pop
cli
pop
jecxz
mov
xor
insb
in
sbb
inc
and
and
pop
ficomps
fcompl
pop
sbb
out
jno
aas
pop
pop
inc
and
mov
mov
fisubs
lahf
dec
addr16
stos
imul
jo
int
aaa
adc
repnz
mov
adc
ds
and
subl
ret
sub
mov
aad
repz
repnz
rcrl
sub
dec
movsb
fwait
in
fs
mov
lock
int
lcall
mov
mov
dec
jae
ud1
das
mov
call
out
imul
shr
inc
lds
mov
sbb
sbb
mov
testb
fs
cmpsb
or
andl
pushf
fdivl
inc
mov
fistps
add
pop
movsl
mov
popf
into
xchg
sbb
stos
xchg
adc
push
daa
cld
hlt
push
mov
xor
aam
xor
jge
stos
xchg
in
test
lock
idivb
ja
sbb
pop
jnp
dec
orb
shlb
test
jg
jne
xor
mov
lock
xor
rorb
cmp
lods
pop
pushw
sub
es
sti
test
enter
jbe
aad
jno
in
lods
ret
sbbl
or
js
pop
inc
jmp
pusha
xchg
daa
jno
fists
scas
push
mov
and
jb
push
cmc
jg
cmp
add
sub
daa
mov
popf
rclb
test
sahf
mov
jle
sub
sbb
add
loopne
pop
popa
dec
sarl
aam
push
mov
jb
into
lock
push
scas
add
outsb
mov
std
pcmpgtb
mov
mov
sub
out
jbe
andb
cmp
jl
test
xor
mov
push
lahf
mov
fildl
mov
icebp
inc
and
pop
ljmp
pop
jecxz
mov
push
mov
jo
stc
les
inc
adc
lcall
jle
fucomi
adcb
inc
orl
fs
sub
sbb
aad
push
jbe
mov
scas
lock
pop
xchg
push
mov
test
xchg
sbbb
mov
adcb
xchg
cmp
jb
lret
bound
mov
orl
push
adcl
push
andl
push
push
adcl
call
adc
mov
subl
mov
xor
mov
sub
mov
movl
jmp
mov
daa
xchg
gs
or
mov
mov
ja
adc
pusha
jb
cli
repnz
mov
push
sub
fcoms
dec
test
pop
xchg
shrb
and
cmp
push
rcrb
mov
sbb
pushf
iret
hlt
cmp
mov
and
or
adc
cmpb
mov
loopne
adc
or
xor
loope
push
jg
lret
pop
push
inc
adc
mov
mov
ficoml
xor
scas
mov
in
and
out
fidivrs
xor
stos
jb
push
cmp
adc
iret
push
in
add
add
add
inc
push
jo
mov
sbb
imul
jbe
into
xor
data16
push
movb
imul
mov
pusha
push
cld
pop
jp
cmp
in
pop
test
jl
icebp
dec
movsb
mov
xlat
push
inc
xor
push
pusha
nop
mov
sarl
std
dec
lahf
mov
mov
popa
add
add
push
out
pop
cmp
push
lds
jnp
add
daa
or
in
cmp
aam
dec
jp
add
int3
adc
mov
mov
sbb
les
lret
jl
pushf
fbld
and
lods
adc
jge
test
xchg
mov
pop
les
es
lods
xchg
subb
jno
cmpsb
xor
repnz
popa
adc
loopne
pushf
add
out
sub
dec
outsl
mov
push
jae
mov
mov
mov
pushf
add
or
popf
dec
adc
mov
push
pop
xlat
jnp
out
sbb
xor
pushf
adc
imul
cltd
xorb
xor
scas
inc
adc
int3
push
xchg
ljmp
mov
dec
imul
test
outsb
int3
imull
xor
ss
cltd
xor
fistpll
pop
inc
andl
cmpsl
jmp
repz
xchg
pop
loope
fbld
dec
cli
mov
xor
rol
insb
ljmp
pusha
loop
inc
scas
inc
dec
add
jmp
mov
mov
push
mov
and
fdivrs
lea
and
divl
jno
push
xchg
test
test
or
cmp
int3
pop
add
pmullw
push
mov
jl
add
aam
jl
mov
loop
call
rcl
sub
aad
mov
xchg
inc
jae
xchg
or
cmpsl
sbb
jecxz
mov
and
adc
jo
je
sub
cmp
lahf
jb
adc
jg
pop
xchg
test
ret
dec
mov
shr
adc
or
push
push
jle
mov
adc
push
push
rolb
fs
adc
add
and
inc
mov
xlat
in
mov
jl
pop
inc
aad
xchg
or
cli
lahf
xchg
pop
cmpsb
xor
mov
mov
mov
inc
fstpt
ftst
dec
push
jecxz
cmpsb
mov
addr16
fadd
ds
js
sub
scas
cmp
ret
cs
pop
pop
sbb
test
gs
inc
and
cli
nop
xor
cmp
jg
pushf
cmp
jne
fcmovnbe
test
push
dec
mov
pop
cmpl
and
push
call
aaa
push
ljmp
and
xor
cmp
add
xchg
inc
pop
cmc
lea
loope
xchg
repnz
notb
jl
outsl
add
cs
and
fstpl
scas
out
cli
push
jne
aad
xchg
push
dec
adc
dec
test
sbb
repz
aam
dec
data16
push
xchg
out
sahf
mov
subl
sbb
inc
int3
xchg
and
mov
pop
fstpt
scas
and
ficompl
fmul
aam
mov
mov
fidivrs
in
cmp
icebp
push
insl
xor
je
add
pop
mov
sub
sbb
pop
or
mov
jmp
push
es
sahf
sbb
inc
frstor
adcb
jb
js
mov
scas
cli
std
fcoms
rol
in
rcl
in
xchg
sti
adc
pop
inc
les
sbb
jo
je
arpl
ja
and
or
cmp
shlb
pop
into
add
fidivrs
and
sbb
decb
push
lret
nop
aaa
xor
push
jnp
in
int3
mov
jge
in
pop
adc
jo
dec
adc
lods
outsb
lahf
repnz
add
pushf
jl
sub
imul
mov
jne
xchg
or
jle
std
call
or
xchg
test
sub
data16
movsl
clc
adc
pop
stos
loop
lods
aas
and
and
in
test
je
mov
sar
inc
fsubl
push
adc
dec
test
movsl
test
jne
lcall
add
test
pushf
in
push
and
dec
cmc
cmp
xor
xor
mov
mov
aam
inc
outsb
ss
sbb
ret
cmp
jp
push
mov
clc
push
mov
mov
or
fs
ret
dec
loopne
and
in
je
andl
fbstp
lret
xlat
loop
rclb
sti
cmpsl
push
push
gs
xchg
push
sub
sbb
jmp
das
mov
push
adc
call
enter
xor
dec
push
sub
or
mov
and
scas
sbb
mov
icebp
fucomip
aad
lock
dec
xchg
mov
aad
sbb
icebp
ja
pop
lea
sbb
pop
out
shrb
icebp
jg
fsubp
loope
out
test
fldl
pushf
js
cld
fmull
stos
xchg
adc
cmp
cwtl
decb
dec
scas
insb
je
insb
mov
jbe
scas
jno
ja
mov
or
pop
imul
add
cmpsb
cmp
push
dec
pusha
add
dec
roll
xchg
sub
cmpb
out
mov
aaa
mov
test
fimuls
push
les
fildl
into
sahf
jbe
movb
lods
test
xchg
add
mov
call
and
or
sub
add
jl
out
dec
insl
add
fs
sub
sbb
jg
rolw
jb
js
and
gs
test
aad
jl
jmp
lret
ret
add
push
nop
mov
push
nop
movsl
leave
pop
push
sub
lret
repz
dec
pushf
xchg
in
cwtl
or
sbb
xchg
pushfw
sbb
xchg
out
int3
ds
dec
pop
dec
mov
das
cmp
adc
or
sahf
popa
leave
bound
push
dec
data16
mov
push
mov
add
dec
cmp
inc
into
dec
dec
fstpl
in
add
roll
enter
les
imul
jp
shrl
push
push
das
cld
mov
adc
daa
loopne
and
sti
fcmovnu
and
jo
xchg
or
mov
sub
pop
fcomi
js
idiv
jmp
loopne
xchg
fildll
lret
sub
leave
dec
insb
outsb
cwtl
dec
mov
mov
sub
mov
adcl
lea
mov
mov
or
subl
and
mov
or
adcl
xor
movl
cmp
movl
jne
mov
and
mov
shrd
adcl
shr
adc
mov
mov
orl
shl
xor
andl
jmp
sub
sub
sub
adc
xchg
jle
mov
xchg
insb
mov
inc
inc
aas
sahf
scas
adc
lds
dec
jnp
ljmp
add
jl
fwait
negb
xchg
push
aam
lds
cli
imul
and
or
dec
xchg
lret
cld
mov
push
imul
leave
loope
movsl
add
and
dec
mov
pushf
sbb
test
stc
fists
in
push
sbb
mov
cmp
add
jle
and
jnp
dec
cmp
jns
adc
cmp
xor
out
lock
cmp
dec
lods
lock
or
cwtl
inc
mov
pop
and
dec
pop
lret
mov
decb
jmp
push
cmpsb
mov
jp
sub
jns
xchg
scas
jp
in
and
sbb
and
aam
mov
cmovp
adc
into
outsb
es
out
testb
insl
push
jge
mov
mov
and
mov
push
in
mov
sar
ljmp
jae
and
mov
jno
inc
push
dec
imul
xor
in
mov
mov
sbb
push
xchg
and
fs
popf
sub
data16
cmp
xlat
outsl
jno
enter
or
mov
xchg
mov
pop
in
fnstcw
adc
sbb
dec
cld
adc
jae
jmp
subl
or
adc
out
imul
daa
inc
mov
cmp
push
dec
and
sbb
push
jno
pop
cmp
aas
xor
les
pop
aad
sub
iret
add
fnstcw
aam
sub
dec
jns
cmpb
jecxz
repz
imul
xlat
mov
pusha
sbb
js
mov
out
pop
lahf
add
popf
or
pop
sub
gs
ret
sub
movsb
fnstenv
push
inc
test
pop
mov
cmp
aam
fisubrs
push
pop
lret
jae
aas
sbb
fisttpl
push
nop
iret
nop
lcall
lcall
adc
lcall
add
xor
mov
loope
add
popa
scas
shrl
popf
pop
scas
push
dec
and
cmpsb
ss
fwait
cmc
sarb
fldt
loope
out
fs
test
push
lea
negb
mov
xchg
sbb
cmc
mov
imul
jle
cmpsl
and
push
sub
sbb
jmp
rcrl
jmp
add
xor
xchg
mov
adc
cmp
mov
sub
jge
sbb
int3
mov
jns
lret
movsb
xlat
pop
mov
push
in
addb
push
insb
jmp
mov
call
or
out
xor
mov
jae
fcoms
lods
lcall
rclb
sbb
and
shrb
xchg
adc
and
cmp
mov
inc
das
into
arpl
aaa
dec
mov
pop
jg
add
ret
cmp
imul
pop
push
pop
mov
cld
cmpsl
test
push
ret
mov
jo
ljmp
adc
popa
cmp
addb
in
hlt
mov
aam
sub
fisubl
or
dec
lret
adc
or
decb
clc
dec
push
jle
or
dec
test
lcall
movsb
mov
dec
adc
sub
mov
and
imul
mov
mov
iret
push
mov
sub
jmp
inc
sub
imul
enter
hlt
scas
sub
repnz
mov
push
fidivrl
lds
stc
inc
jb
jl
pop
loopne
pop
xor
and
add
scas
push
mov
xchg
mov
xchg
and
pop
out
inc
push
push
adcl
es
sahf
scas
movsl
je
or
stos
pop
inc
add
mov
hlt
out
mov
int
dec
test
test
push
mov
sbb
dec
data16
cmc
and
fidivrs
and
cltd
js
mov
std
or
push
and
movsl
shll
xor
push
rclb
jae
cs
orb
mov
mov
fisubrs
or
ds
repnz
lret
ret
and
push
es
sbb
cmp
arpl
sbb
imul
gs
pop
aad
fiaddl
mov
dec
insb
sub
xor
dec
jg
dec
int
add
out
scas
push
push
fildl
fs
ljmp
jne
lret
loop
test
mov
bound
cmc
push
cmpsl
lahf
jno
cmpsb
out
negl
mov
lods
or
test
jb
sbb
cs
loop
fstpt
dec
push
pop
stc
dec
ja
xor
ja
jne
les
fwait
adc
mov
and
jle
jecxz
jno
xor
pop
scas
jae
lods
push
pop
fstpl
xchg
xor
dec
sahf
dec
outsl
sahf
in
stos
sahf
ret
cltd
mov
jle
fsubl
mov
movsb
add
or
push
fwait
add
jno
adc
add
xor
arpl
xor
mov
mov
push
shrl
or
insb
fiaddl
dec
int3
scas
loop
and
nop
xor
mov
out
push
pop
lock
jo
out
call
pushf
arpl
aas
and
mov
into
repnz
std
lods
cmp
or
ret
jbe
xor
lods
or
mov
cmp
mov
and
movsl
inc
inc
cmp
dec
jg
cmp
push
cmp
sbb
dec
push
xor
cli
imul
xor
ret
lock
das
and
repz
jg
adc
fstl
data16
xchg
push
sarb
pop
outsl
iret
jne
and
loope
sbb
ja
comiss
das
sti
pop
inc
adc
insl
jne
es
std
icebp
cmc
sar
imul
mov
insl
xchg
les
shr
ret
xchg
data16
sbb
fcomps
nop
ror
jb
and
inc
xchg
js
adc
and
sub
pop
nop
aam
jo
in
sbb
sbb
sbb
fildl
int
es
movsl
mov
addr16
cmp
shrl
pop
mov
call
fadd
adc
lock
inc
pusha
add
adc
add
push
jecxz
sbb
icebp
mov
ss
movsb
cld
int3
inc
add
adc
outsb
in
sar
or
lods
sub
dec
data16
mov
inc
adc
ss
or
dec
inc
pop
pop
ja
push
xchg
mov
fimull
adc
lods
mov
cld
jae
jle
hlt
stos
inc
jl
push
js
xor
mov
fisttpll
dec
jmp
pop
xchg
pop
push
xchg
sbb
mov
inc
xchg
mov
mov
lcall
adc
add
sub
fnsave
or
rorb
mov
movl
cmp
jne
notl
mov
mov
xor
cmpl
mov
movl
mov
jmp
mov
movl
jl
push
call
xor
or
movl
movzbl
xor
and
mov
xor
mov
xorl
mov
jmp
daa
mov
or
and
xchg
dec
mov
ja
sbb
bound
jb
aam
scas
jmp
in
jl
mov
mov
cmp
mov
jb
pop
dec
push
dec
cmp
mov
add
loopne
shrb
jae
not
pop
mov
call
sbb
add
outsl
sub
pop
iret
add
push
out
adc
ja
inc
pop
out
lock
xchg
clc
cmpsl
in
ss
test
ds
iret
push
lcall
pop
adc
sbb
jbe
and
in
pusha
test
adc
lcall
push
cmp
xchg
jns
push
sbb
into
or
inc
out
andw
cmp
lds
lcall
sbb
je
xchg
addr16
cmp
jae
lods
adc
rorl
and
mov
outsl
or
dec
push
lds
push
test
mov
mov
add
aad
pop
push
xor
ret
xor
std
inc
jne
testb
xchg
push
stc
jb
lock
imul
add
dec
inc
pop
pcmpgtw
xchg
mov
push
in
lds
call
push
cmpsl
fsubl
cltd
inc
or
inc
repnz
mov
inc
xor
in
jb
test
dec
test
mov
rorb
fstpt
add
pop
fists
test
dec
xor
out
mov
leave
les
mov
sti
movsb
push
mov
jecxz
std
push
jmp
inc
adc
loopne
inc
add
xorb
mov
je
je
mov
mov
sub
jno
jl
enter
pop
pop
lcall
pop
dec
and
mov
push
in
mov
daa
jle
pop
mov
fndisi(8087
xchg
xchg
lods
mov
inc
ret
mov
out
and
dec
lret
inc
je
imulb
pop
pusha
and
jle
cwtl
scas
lds
jg
int
jae
inc
jl
xchg
fdivp
mov
mov
decb
xchg
ljmp
push
push
inc
aad
jbe
cmp
mov
xchg
pop
ja
inc
cli
fmull
ss
mov
sahf
and
bound
adc
iret
js
cmp
les
scas
fcompl
push
jb
mov
push
push
out
movsl
mov
out
addr16
out
sbb
lahf
inc
fisttps
mov
mov
aad
xchg
cltd
adcl
xor
mov
int
in
cmpl
inc
ljmp
gs
nop
xchg
cmpl
mov
and
xlat
nop
xchg
in
pop
mul
out
add
push
jbe
xlat
lahf
add
mov
in
pop
xchg
cmp
jae
jmp
cld
add
jmp
std
fmuls
stos
jae
andb
xor
push
js
cmpsb
jbe
sarl
pushf
testb
pop
push
insl
push
jns
inc
imul
fimuls
sub
cmp
orb
cmp
xor
sbb
push
out
xchg
call
xchg
sub
stos
and
or
into
xor
sbb
or
sub
icebp
es
xchg
pop
pop
sbb
push
jne
incl
cmpsl
arpl
xchg
or
enter
pop
ja
mov
mov
add
sbb
dec
popf
cmp
cmp
or
add
sbb
jbe
pop
dec
cmp
mov
insb
jne
shll
xor
cmp
xor
sub
lahf
iret
std
or
dec
popl
add
xchg
sti
push
push
pop
xor
icebp
frstor
add
mov
cmc
inc
jmp
mov
xchg
test
negb
scas
adc
leave
insl
fcoml
mov
aas
jns
push
jge
lret
xchg
push
fs
movsb
insl
adc
jns,pn
cmpsl
lds
mov
sbb
mov
ret
dec
pop
and
outsl
ja
mov
push
ds
in
mov
icebp
cmp
fwait
aad
enter
or
cmp
sbb
arpl
xchg
pusha
push
call
stos
insb
fnstenv
xchg
hlt
jno
and
inc
cmpsl
inc
data16
stc
mov
mov
push
jp
dec
lock
sti
in
addr16
adcb
movsl
push
xlat
mov
or
out
pop
popa
das
out
add
aam
or
inc
scas
push
mov
insl
loopne
andl
or
push
aas
movsb
iret
lcall
sti
test
mov
mov
icebp
out
mov
subb
imul
pop
hlt
push
hlt
sbb
mov
stos
inc
jecxz
add
imulb
mov
inc
mov
mov
in
pop
jmp
cmpb
xor
inc
and
mov
mov
stc
dec
js
mov
inc
imull
pop
and
ja
fcoms
ret
dec
lret
loop
mov
in
pop
mov
shlb
imul
loop
or
mov
mov
cmpsb
sbb
sarl
ja
xchg
arpl
mov
jbe
pop
sub
push
and
loop
and
daa
cmpsl
jo
aaa
or
or
inc
out
aas
scas
jns
sahf
cs
sub
lahf
push
inc
rcrl
call
xor
outsb
dec
aam
call
stos
push
mov
xchg
flds
test
mov
nop
push
mov
xor
icebp
sbb
and
shr
mov
shl
cmc
mov
cmc
movsb
gs
inc
or
sbb
inc
mov
sti
fcmovnu
push
stc
push
jge
adcl
or
divl
insb
fidivrs
jmp
out
and
leave
popf
repnz
jge
push
lea
pop
cli
mov
ret
mov
dec
jp
ss
test
lock
movsb
data16
popa
insb
inc
or
push
push
inc
add
outsb
adc
fidivrs
jmp
pop
repz
lcall
mov
neg
jle
fs
push
out
pop
cs
jge
push
mov
popa
xchg
mov
and
dec
fwait
pop
outsl
scas
les
aad
fistpll
mov
sub
aad
or
out
icebp
push
fadd
call
orb
fdivl
xchg
xchg
cmp
in
add
sub
rcl
mov
mov
adc
cli
mov
nop
sarl
add
lahf
push
inc
push
adc
pushl
add
mov
repnz
adc
inc
lds
cltd
fcoms
pushfw
mov
xchg
out
ja
push
pop
and
shld
out
rcl
insl
ljmp
mov
std
mov
fnstenv
cmp
pop
rcrb
mov
push
jle
push
xor
nop
repnz
dec
lcall
pop
pushf
pop
mov
inc
hlt
or
pop
jne
js
outsb
push
fs
sub
push
shrd
andl
mov
cmpl
movl
mov
jmp
movl
movl
jne
push
push
push
push
push
pushl
push
push
call
orl
or
xor
xor
xor
add
adc
adc
sub
add
mov
xor
xorl
shr
xorl
mov
orl
xor
or
movl
shl
cmpl
movzwl
movl
jmp
movl
movl
jle
push
call
not
or
sub
sub
sbb
sub
mov
mov
sub
imul
mov
cmpl
not
movl
jmp
mov
jne
push
pushl
pushl
push
push
call
sbb
adc
neg
subl
adc
mov
mov
not
add
mov
mov
mov
shrd
shr
adcl
mov
mov
xor
add
shl
incl
xor
jmp
jle
jl
dec
mov
push
movsb
out
push
jp
ja
mov
mov
aad
mov
fstl
cmpsl
xor
pop
scas
mov
push
add
jmp
lea
into
aad
outsl
mov
add
or
lret
and
movsl
insb
mov
aaa
or
lahf
lods
mov
sbb
out
xor
mov
push
mov
repz
xchg
imul
push
loopne
add
ret
dec
mov
xor
pop
not
mov
ja
ss
pop
or
xor
mov
jae
fistpll
cli
inc
adc
imul
std
mov
adc
test
loopne
xchg
pop
pop
pop
sub
mov
push
sahf
movsb
or
mov
das
or
test
push
popf
aas
aaa
or
scas
cld
cmp
loopne
out
or
dec
imul
and
cmc
ljmp
push
mov
push
cmp
sahf
test
ljmp
bound
push
mov
push
rcll
add
pop
call
mov
dec
jns
es
into
cmp
divb
xlat
and
cwtl
push
scas
or
jmp
test
mov
inc
xor
iret
repz
xor
dec
xchg
mov
push
pushfw
and
cwtl
jne
or
jecxz
popf
mov
repz
bnd
into
xchg
js
mov
mov
sub
push
and
fsubs
out
or
pop
sti
iret
mov
mov
pop
imul
pop
lods
lods
loop
js
add
push
xchg
in
cwtl
adc
push
xor
in
test
xchg
jnp
pop
inc
xor
cmp
shl
out
insl
ja
push
lods
ret
arpl
into
pop
iret
cmc
sub
jg
mov
cmp
mov
aad
arpl
and
nopl
pop
push
sbb
sub
popf
mov
xor
push
add
insb
push
neg
dec
push
jg
mov
push
cmpl
loopne
cli
inc
dec
jno
call
int
int
mov
dec
dec
shrl
xlat
aaa
cmp
jle
aam
andl
in
hlt
je
pop
sarl
popa
and
leave
or
sbb
pop
les
fsubl
cmp
scas
sbb
xlat
xchg
stos
sub
vrcpss
movsl
push
xchg
lock
cmc
dec
jne
pusha
pusha
cmp
xchg
movsl
mov
jbe
bnd
push
pop
mov
jns
adc
dec
test
fs
fldenv
jmp
sub
fs
or
push
mov
xchg
jl
pop
ss
sbb
mov
icebp
loope
adc
dec
dec
cwtl
jmp
inc
jb
lahf
adc
mov
sbb
or
add
push
add
push
and
jno
or
add
cli
sbb
push
ret
mov
xchg
jb
movl
mov
dec
out
xchg
insl
mov
ficompl
cmpsb
jbe
or
and
nop
sarb
stc
pop
pusha
pop
cs
xchg
sbb
out
insl
xor
fwait
cld
push
xchg
ucomiss
popa
in
sbb
xor
xchg
jle
aas
movsl
pop
cmp
jae
pop
icebp
scas
xchg
push
aad
and
pop
ds
aaa
lods
cltd
cmc
xchg
scas
hlt
mov
mov
cmp
mov
aas
or
test
sub
mov
cwtl
fldl
xlat
jns
or
mov
fiadds
dec
sub
fwait
leave
lcall
add
adc
cld
cmp
jge
sbb
sbb
ljmp
cltd
xor
add
fwait
sti
sub
enter
leave
xor
jp
mov
and
loop
inc
xor
jnp
stos
int3
or
xchg
sbb
pop
sbb
xor
pop
push
cmpl
nop
mov
sarb
je
cmp
out
xor
pop
cwtl
jge
pop
xlat
sub
mov
icebp
outsl
test
and
loopne
mov
or
cmp
cwtl
xor
scas
scas
in
rorl
movsb
cmp
mov
push
sbb
int
sar
push
ja
mov
dec
rep
xor
ds
lock
push
mov
inc
pop
sbb
lcall
mov
ja
mov
daa
xchg
push
ss
push
cmp
dec
add
cmpsb
repz
cld
pop
mov
subl
sbb
sbb
fsts
lret
jmp
mov
int
pop
pop
jbe
pop
stos
inc
cmova
mov
lea
push
jle
rcll
add
sti
stos
daa
mov
sub
fiaddl
cmp
stc
bound
fiaddl
and
rcrl
push
push
mov
ret
push
xchg
sub
das
adc
jecxz
cmp
xor
adc
int
call
inc
xchg
jmp
aad
in
xor
dec
loop
pusha
push
inc
outsb
cmp
aas
push
inc
jnp
into
pop
xchg
adc
mov
stos
cmp
push
jns
xor
mov
movsl
int3
or
pusha
xchg
add
mov
stc
pushf
xor
cmp
push
jmp
cmp
push
push
add
inc
pushf
mov
shr
xchg
sti
jecxz
lea
push
push
adc
lods
out
dec
out
or
fiadds
xchg
mov
jns
sub
xor
and
aam
imul
out
xchg
testl
imul
fdivrl
or
jle
xchg
dec
mov
sbb
lcall
lods
pop
mov
lds
mov
sub
cmpsb
xchg
lret
cli
rcrb
in
fwait
fs
sbb
cmp
sub
fdivl
jb
or
jo
sti
jg
cmp
testb
insb
insb
pop
add
orl
dec
fwait
push
fs
jo
xchg
inc
xchg
imul
push
lahf
hlt
or
fs
cmp
aas
inc
and
stos
add
add
iret
pop
mov
xchg
loopne
jecxz
mov
mov
dec
mov
insb
lds
xchg
jnp
mov
pushf
push
stos
dec
mov
mov
outsb
ficompl
jae
lcall
cli
sbb
add
out
jge
pop
or
xchg
andl
test
push
aaa
das
jb
lcall
adc
jmp
xchg
iret
sub
pop
xchg
sub
jle
aam
jmp
inc
out
xchg
dec
xor
mov
xor
mov
xchg
in
or
daa
roll
jg
out
dec
adc
jo
test
add
cwtl
add
cmp
cld
fcmovnbe
jnp
add
push
divb
cltd
dec
sub
stc
push
dec
push
popa
pusha
push
addl
xor
jle
jg
aaa
adc
subl
push
inc
add
mov
mov
jmp
movl
movl
jae
pushl
push
push
call
xor
or
mov
sub
sub
mov
xor
or
sub
xor
and
xor
or
sbb
mov
mov
add
mov
mov
sbb
mov
mov
incl
shrd
subl
shr
adcl
mov
add
mov
cmpl
not
mov
jmp
not
jne
push
push
push
call
mov
sbb
and
andl
and
orl
sub
or
sbb
jmp
pop
and
push
adc
push
push
in
pusha
push
ja
fisttpll
adc
mov
nop
dec
or
push
fisubl
push
sbbl
repz
dec
adc
loopne
and
popa
push
pop
inc
test
push
cmpsl
aam
pusha
lahf
enter
out
push
fsubs
xlat
add
xchg
cmpsl
or
js
mov
inc
push
orl
int
movsl
jno
nop
lods
push
jg
cmp
mov
adc
cmp
xchg
shr
mov
pop
shrb
out
js
push
dec
lods
add
shrb
leave
xor
push
arpl
xor
idivb
stc
sahf
andb
push
fisttps
call
cmp
mov
pop
lcall
inc
out
jo
mov
enter
inc
pusha
xchg
sub
xor
sub
lea
lea
jae
gs
arpl
icebp
leave
mov
mov
ljmp
cmpsb
mov
inc
icebp
andb
out
and
xor
or
and
lea
jne
push
mov
pop
add
xchg
xchg
mov
leave
popa
inc
mov
push
inc
xchg
push
sbb
xor
pop
loope
pop
xor
push
testb
xchg
ret
push
jae
in
ret
sarl
popa
and
movsb
sub
cmc
cmpl
stos
dec
xorl
icebp
pop
mov
call
stos
mov
sarb
jbe
int3
mov
out
mov
push
dec
mov
add
nop
xor
dec
add
fmuls
add
add
scas
sbb
xchg
xchg
mov
and
inc
mulb
cmp
lret
call
addb
shrb
xchg
jno
pop
sub
adc
xor
leave
sub
popf
sbb
pop
mov
or
and
xor
xor
ret
mov
fdivrl
pop
mov
insl
push
mov
pushf
mov
or
pop
jp
or
test
icebp
test
testl
lea
cmpl
loopne
cmpsb
jecxz
xchg
neg
pop
push
add
cltd
test
xor
imul
aaa
lods
sbb
fisttps
repnz
pop
or
push
fs
mov
sub
xchg
or
push
mov
out
xor
mov
adc
inc
mov
fdivrs
cmp
inc
mov
ret
mov
xchg
sahf
addl
sub
dec
stos
xchg
mov
jns
mov
test
shrl
adc
dec
mov
push
addr16
rcll
push
imul
sub
mov
subb
pop
loop
adc
mov
push
mov
dec
mov
repz
inc
add
sbb
jl
test
fidivl
push
cmp
dec
scas
data16
sbb
or
aam
xchg
divb
dec
pop
sbb
jne
jbe
in
jns
adc
mov
inc
ret
mov
push
call
stos
mov
arpl
jle
int
and
std
mull
lret
dec
push
sub
xchg
cltd
push
cmp
or
lret
add
inc
sub
or
pop
mov
adc
mov
lods
imul
loope
lahf
ret
adc
movsl
shl
pop
pop
in
xchg
mov
arpl
mov
adc
inc
fcoms
push
daa
and
mul
mov
add
popf
cmp
xor
mov
add
cmp
pop
lods
xor
movsb
sub
dec
dec
cwtl
dec
lea
pop
pop
bound
add
mov
push
roll
xor
sbb
stc
or
jle
mov
cmp
dec
iret
cmpsb
fnsave
push
lea
xor
and
pop
jne
jl
dec
leave
sti
rcrb
fcoml
adc
push
stc
inc
or
imul
aad
cwtl
mov
popa
inc
movsb
popa
fisttpl
push
dec
lcall
ja
and
jnp
cmpsb
enter
movsb
jae
jns
test
or
and
es
dec
and
xorl
or
or
popa
adc
or
mov
dec
or
or
aam
mov
je
inc
out
sbb
sbb
imul
mov
es
shrl
addr16
test
jns
sub
fptan
inc
sbb
mov
out
cli
lds
mov
push
and
or
mov
dec
xorl
ds
adc
and
lea
fcmovbe
pop
test
ja
cmp
mov
xor
cli
jg
cmpsl
cmc
loopne
scas
fucom
adc
adc
jmp
or
test
mov
outsl
and
call
lret
mov
pop
fsubrs
sub
aam
dec
arpl
outsb
das
mov
xor
mov
pop
mov
pop
enter
cmovl
jle
mov
xchg
or
add
jno
push
mov
fldcw
shrd
ret
and
pop
fmuls
repz
loop
jmp
in
aaa
rorb
ficoml
mov
add
stos
mov
int
out
sbb
or
insb
aam
push
adc
jecxz
es
push
jne
xor
mov
nop
mov
add
inc
jne
add
mov
stc
mov
xchg
mov
pop
mov
jbe
push
fs
sahf
lds
add
jecxz
data16
push
mov
xor
movsl
movsb
jp
lock
aas
scas
dec
sahf
mov
ja
outsl
jno
out
int
push
push
mov
and
addr16
or
mov
xchg
insl
or
xchg
pop
inc
jg
mov
fdivp
xchg
or
xchg
push
imul
pop
nop
sbb
inc
dec
jecxz
aaa
cmp
in
daa
xor
aam
sub
std
xchg
push
mov
dec
lds
xchg
push
ds
xchg
test
push
into
inc
push
inc
js
imul
and
movsb
dec
das
int3
jl
addr16
gs
sub
addr16
mov
push
dec
inc
shll
roll
xlat
fs
int3
mov
mov
push
inc
sub
adc
mov
mov
push
ss
jo
lret
xchg
inc
mov
xor
cmpsl
outsl
pop
testb
inc
or
mov
sbb
push
stc
jns
lods
add
inc
or
push
adc
or
mov
nop
movsl
test
mov
dec
cmp
xor
rorl
pop
mov
fwait
adc
data16
pop
jge
mov
cld
dec
fcompl
jge
or
cltd
mov
jnp
xchg
icebp
sub
mov
clc
nop
inc
dec
cwtl
xchg
sbb
out
test
repz
lea
in
rolb
add
push
in
and
push
cmp
shl
sbbl
lea
sub
mov
cmpl
mov
mov
mov
mov
jmp
movl
jg
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
pushl
pushl
push
call
xorl
movzbl
adc
movzbl
add
or
add
movzwl
sub
mov
shrd
shr
cmpl
mov
mov
mov
jmp
mov
jbe
push
call
andl
mov
adc
sbb
movl
mov
mov
or
not
mov
mov
sub
mov
add
jmp
rcrl
cmp
and
and
scas
dec
or
fcomps
ja
and
fstl
cmpl
fstpl
call
movsl
mov
sahf
mov
jp
cld
jle
mov
add
and
mov
mov
pop
scas
arpl
sub
je
lret
or
xchg
jbe
or
lahf
pop
push
inc
inc
aaa
sub
cmpsl
das
xchg
ret
ja
into
repnz
js
test
cli
stos
ljmp
xor
add
or
or
repz
pop
scas
hlt
mov
and
dec
daa
dec
fwait
ljmp
push
gs
lock
pop
push
xchg
xchg
call
push
hlt
lds
outsl
mov
mov
fcompl
pop
mov
add
inc
xchg
or
push
js
pop
aaa
adc
mov
dec
outsb
push
jnp
movsb
xchg
mov
mov
dec
jnp
int3
jl
push
lahf
sub
xchg
hlt
fmuls
sub
fmull
push
xchg
adc
jne
or
rcll
imul
dec
pop
dec
push
pop
jmp
jmp
mov
ds
sub
rclb
aam
stos
pop
mov
shlb
les
insb
ljmp
mov
fisttps
push
iret
lret
out
xchg
sbb
and
pop
or
aaa
cmp
mov
mov
mov
enter
xchg
daa
sub
mov
out
push
pusha
popl
out
add
sti
pop
ljmp
out
and
push
and
cmc
lock
push
dec
and
daa
xchg
scas
fnsave
inc
pop
push
jnp
popf
pop
add
mov
pop
jne
jl
xchg
ror
pop
cld
adc
sub
push
lcall
sbb
adc
movsl
pusha
sbb
jns
nop
ds
in
push
xor
fmul
inc
and
cmp
sbb
inc
push
mov
xchg
movsl
inc
lods
mov
pop
and
mov
cmpb
in
pop
inc
push
psubd
push
ljmp
dec
addr16
ss
xchg
out
fisubrs
or
outsl
neg
jle
cmp
xchg
movsb
and
shlb
sub
mov
mov
testl
or
subl
in
inc
mov
cmp
xor
incl
and
jne
pop
pushf
addb
in
cld
int
sbb
jnp
repnz
xor
mov
clc
lock
insb
out
sahf
scas
mov
dec
push
in
dec
mov
sbb
jne
cmpsl
mov
int3
lret
loop
bound
add
fwait
out
fcomi
xor
mov
sub
inc
xor
sbb
add
jge
mov
hlt
inc
sti
in
mov
fldenv
mov
fs
push
in
adc
or
repnz
mov
mov
push
sub
loop
scas
les
xor
enter
stc
mov
icebp
mov
mov
lcall
xchg
adc
ja
or
pop
jnp
shrb
and
js
cmp
test
or
loop
mov
mov
addr16
lcall
mov
jo
sarb
cmc
orb
mov
retw
mov
test
mov
fisttpl
pop
icebp
cwtl
stc
jne
jmp
test
jmp
xor
and
jb
pop
out
fwait
jns
cli
insl
or
mov
jno
scas
pop
cmp
inc
cmpsl
outsb
ret
cmp
and
dec
addr16
aad
lcall
cmp
shrl
mov
xchg
xchg
mov
gs
dec
xchg
push
adc
jmp
or
mov
jg
and
add
scas
or
pop
push
cmp
pop
out
mov
push
sub
shll
mov
outsl
into
cmp
enter
aaa
sub
adc
inc
ret
cmpsl
xor
and
sbb
pop
xchg
in
dec
push
adc
lea
push
pop
pop
divb
jb
cmp
jae
icebp
jp
ret
push
imul
fimull
inc
je
icebp
inc
xchg
call
mov
cmp
push
adc
repnz
sti
cltd
out
push
stc
mov
lds
out
out
add
add
add
add
mov
xor
sbb
push
push
inc
sub
adc
insb
cmp
jp
xchg
int3
xor
inc
adcb
fisttps
add
movsl
iret
mov
adc
fcompl
sub
mov
in
in
push
cmpsb
push
mov
fdivp
mov
in
mov
jns
sbb
gs
adc
xor
sarb
adc
mov
arpl
jg
lret
lret
adc
jp
insl
cmpsl
add
dec
test
push
jecxz
dec
pop
cmpb
xchg
in
addr16
mov
lret
or
adc
adc
lret
cmp
mov
aam
sub
repnz
fwait
mov
dec
stc
push
xchg
jb
sub
sub
lahf
mov
sbb
cli
inc
inc
xchg
in
add
jno
sub
call
js
scas
xor
bound
inc
add
adc
mov
or
out
adc
or
jbe
push
and
xchg
mov
loopne
mov
adc
jmpw
scas
decl
movaps
daa
movsl
lret
addr16
mov
inc
push
call
mov
mov
push
fcomi
dec
mov
inc
cmpsl
ret
push
je
and
bts
mov
test
movsb
mov
pop
or
shll
and
fbstp
movsl
aaa
int3
xchg
lret
test
clc
idivb
fidivs
mov
inc
in
or
ret
cmp
mov
lock
fstpt
push
push
sbb
xchg
inc
cmp
jl
fimull
mov
push
mov
iret
fwait
es
aad
std
call
dec
mov
mov
popf
sub
rcll
push
mov
nop
sti
es
idiv
pusha
inc
int3
pop
push
vmread
jns
xor
add
adc
xor
loopne
cmpb
fcomp
int3
and
jbe
bound
pop
stos
xchg
or
and
es
pop
mov
or
dec
push
icebp
lds
nop
mov
sti
cli
dec
ret
sbb
push
inc
add
out
mov
mov
mov
rorl
lret
xor
lods
loop
mov
jae
ds
jg
sub
adc
and
repz
mov
repnz
and
outsb
bound
dec
imul
mov
sub
mov
add
push
sbb
jnp
push
sub
jge
lods
and
pop
or
in
xchg
outsl
icebp
dec
mov
jl
and
jge
aaa
sti
cwtl
in
fwait
inc
xor
aas
xor
jle
sub
ljmp
ljmp
aaa
cmp
cmpsl
mov
mov
shlb
rolb
icebp
pop
add
or
shl
movzbl
or
imul
mov
mov
xorl
shrd
xorl
mov
mov
xor
shr
mov
and
mov
sbbl
xor
orl
or
sbbl
shl
adcl
sub
mov
mov
cmp
mov
mov
jg
xor
add
mov
sub
and
mov
cmpl
movl
movl
jmp
mov
mov
jb
push
push
call
xor
mov
sub
sbb
movzbl
and
mov
jmp
les
cmp
push
mov
mov
movsb
js
xor
xchg
push
bound
jmp
shll
out
daa
rcrl
icebp
pop
sub
push
mov
in
push
jmp
js
mov
push
xchg
jno
pusha
dec
mov
xchg
icebp
mov
jno
out
inc
fwait
aaa
xor
mov
xchg
mov
adc
clc
adc
add
fistl
ljmp
push
ljmp
addr16
clc
lcall
mov
sbb
xor
icebp
dec
shrb
adc
into
xchg
xor
xor
and
icebp
push
lods
sbb
dec
mov
or
xor
not
loop
sti
lods
shll
jb
shlb
jnp
and
lods
jge
fldenv
je
sub
jnp
mov
push
cs
xor
loop
mov
cmp
pop
sub
jnp
add
pusha
shrl
dec
test
lret
test
jns
sbb
jno
xchg
or
add
in
fidivs
pop
jns
pop
nop
mov
jnp
fwait
or
inc
dec
xchg
sub
pushf
xor
mov
lahf
mov
xor
data16
pop
jge
stc
push
xchg
stos
movsb
mov
les
icebp
xor
push
aam
jb
jecxz
dec
dec
fisubs
mov
ficoms
stc
sahf
movsl
arpl
test
mov
sahf
push
addl
or
cmp
shrl
hlt
mov
add
out
push
dec
push
hlt
rcr
add
push
dec
dec
mov
stc
out
jmp
push
sti
pushf
out
or
mov
js
hlt
sbb
es
sbb
push
mov
mov
mov
mov
and
int
mov
sbb
mov
pop
gs
in
insb
cs
mov
fwait
mov
pop
jbe
loope
cmp
push
cmp
sbb
loope
fwait
push
arpl
frstor
xor
inc
sub
mov
add
les
loope
cld
pop
adc
pop
dec
push
add
or
pop
in
xchg
je
dec
in
test
inc
ret
lahf
mov
push
incl
xor
int3
enter
dec
jg
or
push
adc
push
jmp
xor
sub
aam
mov
jmp
or
xchg
pop
sbb
cmp
in
test
mov
leave
xchg
enter
and
xchg
popf
aad
outsl
pop
imul
mov
repz
xor
cmpsl
push
sbb
mov
jae
arpl
imul
ret
fdiv
dec
les
or
pop
mov
push
insl
dec
inc
push
movb
repz
mov
movsb
push
int3
aaa
in
add
xchg
daa
stc
jle
pop
in
and
xor
push
jp
mov
or
pop
gs
inc
xlat
ss
out
outsb
push
mov
mov
aad
xchg
dec
mov
cmpsb
inc
jl
xor
inc
fucomp
fsubrl
in
sub
imull
dec
daa
leave
inc
outsl
inc
out
sbb
daa
rcrl
repnz
outsl
pop
or
aaa
call
fcompl
aad
js
sub
ljmp
jle
mov
ror
xor
test
out
adc
mov
adc
lds
xchg
lea
pop
inc
sti
pop
outsl
fisubrl
ret
or
xchg
loopne
das
jo,pn
add
mov
fs
mov
lds
or
data16
shrb
pop
and
fs
sbb
outsl
push
sbb
insl
adcb
lcall
pop
xchg
mov
fldenv
mov
lret
sbbl
nop
inc
or
add
or
add
cld
rolb
xor
fistpl
xchg
adc
adcb
push
xor
fmull
push
gs
inc
xchg
loopne
push
rorl
or
rclb
icebp
dec
xchg
push
push
mov
rclb
mov
loop
frstor
sti
inc
and
adc
int3
jne
cwtl
mov
push
push
mov
mov
inc
imull
int
lds
popf
dec
insb
adc
xchg
dec
test
mov
and
adc
fsubrs
sbb
mov
or
mov
iret
sbb
mov
cli
jo
sbb
dec
pop
cmp
or
lods
or
pop
in
cwtl
cmp
les
pop
xlat
jecxz
in
cmc
pop
push
ja
test
xor
mov
stos
add
dec
rolb
int
cwtl
popa
pusha
call
xorl
shll
fistps
in
lret
mov
jnp
aaa
pop
aas
outsl
outsb
out
jne
sub
push
ds
and
int3
push
lds
outsl
cmc
push
or
sub
and
imul
pusha
dec
lcall
dec
pop
ror
pop
fmul
dec
das
jns
rcl
sbb
lcall
mov
sahf
fldenv
sub
push
sub
push
insl
arpl
mov
data16
cmp
xchg
cmc
mov
push
xor
mov
push
out
cwtl
mov
mov
rclb
das
out
xchg
cwtl
jge
sarl
mov
dec
punpckhwd
jecxz
jle
inc
addr16
nop
lahf
adc
pop
fmuls
loop
pop
aam
sub
loope
lcall
add
jo
xchg
add
jo
scas
sbb
jns
les
adc
ds
or
jnp
pop
fs
mov
jmp
dec
and
dec
out
daa
xchg
pop
divb
ljmp
xchg
leave
dec
ror
sbb
stc
loopne
loopne
pop
and
mov
adc
pop
add
cmp
icebp
adc
movb
arpl
mov
sbb
mov
insb
adc
mov
sub
pop
push
push
gs
xchg
in
xor
stos
andb
xor
cmc
dec
sbb
lods
mov
fimull
and
pop
loopne
xor
sub
dec
mov
fisubrl
xchg
and
push
sbb
cmpsb
xor
sbb
mov
mov
rcll
test
and
mov
cwtl
xlat
pop
scas
pop
ds
lret
outsb
sti
test
pop
cmp
outsb
jge
lds
pop
cld
jge
bound
aam
cwtl
fsubl
jae
movsl
cmp
adc
sbb
and
inc
inc
and
cmp
mov
fistps
xor
stos
sbb
jg
dec
loopne
insb
std
inc
cs
push
push
xchg
mov
or
test
jnp
mov
clc
lods
xchg
pop
add
cmpsl
into
inc
cli
divb
push
bound
fidivs
lods
jecxz
loopne
mov
hlt
sub
push
in
jb
adc
xchg
movsb
daa
scas
dec
or
jge
push
movaps
and
shl
xchg
pushf
xchg
out
out
push
jge
popa
mov
fldcw
outsb
add
dec
out
sub
nop
negb
and
fwait
add
arpl
shlb
add
push
add
and
stos
aaa
inc
add
lods
roll
mov
movzwl
or
mov
adcl
xor
andl
shl
orl
xor
adcl
or
sbbl
shr
and
mov
jmp
mov
mov
int
mov
ja
mov
int3
or
jae
in
movsb
cwtl
push
xor
adc
cltd
ud2
sbb
xchg
cmp
cmpsb
xorb
cwtl
fdivs
pop
mov
inc
jecxz
sbb
jmp
mov
sbb
cmp
adc
lret
cltd
pop
mov
insl
aaa
jbe
fcomip
dec
ja
in
push
lea
push
lods
in
push
ljmp
je
fs
mov
loopne
and
xor
int
test
es
stos
add
and
mov
or
insl
mov
lods
xchg
xchg
fnsave
in
jmp
cmp
and
mov
into
xor
lods
mov
adc
cltd
lds
std
aad
xor
push
call
jae
or
js
mov
inc
jecxz
mov
mov
pop
and
inc
fwait
pop
mov
jbe
adc
in
cltd
pop
mov
mov
jns
jmp
cmp
mov
cmp
or
in
stos
ss
push
and
enter
fsubrl
or
mov
push
push
or
popf
cmp
lahf
insb
jecxz
lea
and
divl
pop
push
xor
push
mov
jecxz
lock
cmp
sbb
pushf
fwait
and
ret
xor
cmp
xchg
sbb
sub
int3
test
dec
mov
mov
mov
pop
imul
and
loop
pop
insl
mov
std
inc
pusha
into
shl
sub
into
out
mov
xchg
lock
out
sarb
imul
gs
sahf
testb
imul
push
or
lahf
inc
push
ret
sbb
cmp
push
mov
sbb
pop
adc
rep
inc
xchg
xchg
out
lret
push
pop
push
push
sub
lods
in
jns
push
push
mov
dec
inc
sub
xchg
inc
mov
sub
addb
fisttpll
push
cmc
movsb
cli
jne
jl
jle
aas
cltd
push
or
ss
in
test
xchg
testl
xor
mov
outsl
ret
push
cmc
in
add
jl
cmp
cmp
ret
ret
add
flds
or
mov
lcall
or
or
adc
sbb
fistpll
mov
add
fst
in
push
fisttpl
mov
aad
and
leave
xchg
mov
call
ds
fmull
shl
push
sbb
imul
mov
pop
mull
loop
push
idivb
divb
jle
popa
add
rorb
lret
and
jo
cmp
mov
enter
les
mov
scas
stc
or
or
mov
lods
mov
in
sahf
or
push
sbb
xor
mov
jo
sub
push
lret
cwtl
scas
push
cli
es
add
fcomps
jnp
add
sbb
dec
inc
sbb
sbb
hlt
sbb
jo
mov
mov
in
push
or
push
lods
lods
jae
repnz
mov
subb
push
mov
insb
push
cmc
sbb
xchg
fisttps
mov
or
adc
push
es
sbb
xor
sub
je
popa
mov
xchg
mov
dec
push
adc
pusha
sbb
das
dec
add
and
or
sbb
mov
leave
push
cs
push
stc
popa
bound
lret
sub
add
cmc
arpl
mov
jmp
adc
inc
add
push
pusha
adc
pop
mov
aaa
std
leave
xchg
cmp
pop
push
mov
cld
sbb
sbb
cmp
dec
repnz
xor
clc
loop
push
data16
inc
jmp
cld
jb
pop
cmp
pushf
rorb
pop
xchg
scas
jb
insb
inc
rolb
addr16
xchg
xor
adcl
mov
jecxz
pusha
ja
mov
cmp
jns
sbb
mov
lret
pop
cmp
xor
in
mov
testb
lret
xor
xchg
scas
fdivr
arpl
cmpsb
out
xchg
and
sarl
push
cmc
dec
es
push
fadds
shr
movb
jecxz
stos
adc
dec
sub
lock
mov
adc
imul
fcomip
adc
orl
dec
push
loope
daa
push
fs
mov
cld
mov
mov
ret
ss
rcr
test
out
xchg
mov
mov
loope
je
in
dec
sub
and
add
add
push
cld
dec
test
jmp
mov
push
pop
out
cli
addl
sub
sbb
negl
dec
fsubs
xchg
ss
add
ljmp
movsb
das
or
fdivrp
out
fs
jbe
in
add
sub
ljmp
fcmovu
push
cmp
fldt
xchg
pop
lret
cmp
jmp
adc
in
push
int3
rorb
negl
and
mov
push
les
mov
bound
mov
push
outsb
pop
pop
mov
cli
mov
pop
out
mov
mov
adc
cltd
sub
adc
xchg
pop
mov
js
mov
mov
mov
call
popa
fwait
or
fucomip
cmpsb
push
int3
xor
push
jne
fstps
ret
cmp
sbb
aas
rolb
call
enter
mov
cmp
movsb
mov
xchg
adc
in
out
je
mov
fs
mov
lea
fistpll
mov
sub
mov
lods
cmc
or
lcall
xor
push
mov
jle
xlat
cwtl
js
push
cwtl
push
lods
mov
out
clc
inc
dec
movsl
lretw
pop
orl
sbb
xchg
inc
pop
in
mov
inc
mov
pop
hlt
mov
mov
arpl
adcl
rclb
mov
aad
js
imul
clc
std
pop
jno
cmp
mov
arpl
fs
inc
rcll
jae
mov
repz
pop
xlat
int3
lods
mov
fisubl
inc
dec
cmp
es
fsubs
cmp
push
cmp
lret
lea
loopne
mov
out
pusha
xor
pop
mov
cmp
sti
and
pop
inc
mov
andb
ds
mov
das
loopne
imul
inc
sub
stc
popf
orl
lods
mov
cmp
push
cwtl
shll
ficoml
fxch
and
lea
xchg
adc
mov
ljmp
mov
sub
sub
loope
xchg
inc
xchg
jae
in
and
pop
cmp
push
jl
in
adc
cmp
mov
add
xor
cmpsl
cmp
arpl
push
jecxz
cs
test
add
mov
sub
dec
aam
adc
or
mov
mov
mov
add
mov
andl
shrd
sbbl
shr
mov
mov
inc
jmp
shll
adc
push
scas
xchg
jne
nop
push
subb
ja
andl
push
jg
or
lahf
shrl
icebp
and
ret
pop
sbb
push
inc
xchg
fiaddl
push
fwait
ljmp
mov
mov
pop
and
xchg
jb
popf
sbb
jbe
inc
mov
sub
mov
add
scas
stos
nop
jmp
daa
push
xchg
in
fdivl
outsb
jg
sarb
iret
ja
jl
cltd
push
pop
ret
cmpsb
push
ret
mov
test
mov
cmp
adc
jle
mov
xor
loop
jecxz
push
cmp
fidivrl
pop
imul
fidivl
orl
adcl
jl
adc
xchg
sub
mov
xchg
xor
ret
shrb
push
int3
dec
pop
jg
cmp
push
int3
bound
sti
mov
ret
lahf
add
scas
push
jbe
je
stos
push
push
rorl
adc
mull
sub
add
das
repnz
jne
mov
or
pusha
mov
mov
mov
in
jg
iret
jns
leave
sbb
adc
filds
jg
add
scas
sbbb
jbe
xor
sahf
incb
dec
idivb
pop
mov
in
adc
inc
push
inc
das
adc
into
xchg
lret
pop
and
arpl
pavgb
push
mov
inc
push
fiaddl
outsl
enter
push
cwtl
lock
add
call
sti
mov
xor
subb
aad
std
xchg
andnps
insb
push
pop
mov
and
cmp
mov
mov
psrld
jge
push
adc
cmp
lock
and
out
jns
jo
push
jecxz
hlt
push
inc
lahf
pop
test
cmpl
push
dec
mov
stc
cmp
jmp
aaa
mov
jg
out
rcr
pop
jb
pop
and
push
aas
push
outsl
cli
and
testl
in
mov
call
add
scas
jmp
shll
dec
mov
js
movsb
mov
inc
testb
std
xchg
sbb
mov
push
xor
hlt
outsb
cmp
mov
shrl
mov
lock
lea
mov
pusha
lcall
sub
lcall
aaa
sub
or
mov
das
or
jo
mov
out
insl
fcompl
mov
and
mov
and
lret
jl
or
aad
jo
popa
pop
imul
add
gs
jmp
mov
dec
push
xchg
xor
or
icebp
jecxz
pop
and
lahf
mov
adc
mov
xchg
pop
add
rcll
or
leave
xchg
push
icebp
jnp
fsubl
mov
gs
or
dec
dec
ret
jp
dec
subl
rcr
aaa
dec
fwait
dec
sbb
out
inc
fdivs
mov
dec
sub
inc
push
int
popf
xlat
or
add
rolb
sbb
push
cwtl
pop
int3
push
lock
pop
lahf
xor
shl
cmpsl
cld
sub
mov
call
call
insb
hlt
sub
xorb
mov
in
mov
jmp
pop
mov
ds
out
add
adcl
scas
push
inc
add
dec
pop
divb
daa
cmp
push
jmp
sub
and
mov
push
aam
dec
push
addl
cmp
pop
push
jbe
sti
or
jno,pt
into
mov
mov
push
xchg
xlat
orb
cmp
sub
iret
or
sub
jne
push
sub
or
push
dec
mov
and
fcomip
in
mov
xchg
clc
mov
psrad
lods
jp
push
xchg
in
fcompl
out
or
push
mov
sahf
fwait
out
mov
pop
nop
jp
ret
insl
mov
shlb
in
lea
mov
dec
ret
ljmp
inc
xchg
ljmp
sbb
leave
xor
or
pop
ds
pop
arpl
popa
ss
nop
push
scas
mov
imul
cmp
dec
dec
cmp
shlb
push
insb
mov
out
inc
insb
fwait
mov
sbb
ds
incl
jmp
xchg
cmp
ds
lret
jae
inc
jnp
fwait
jg
xor
iret
out
mov
adc
test
pop
loop
sbb
aad
pop
xchg
test
stos
xorl
hlt
gs
mov
clc
stos
add
mov
push
push
fcoms
lret
outsl
movsb
pop
xchg
cltd
mov
mov
xor
jecxz
mov
lahf
pushf
jns
sahf
sub
mov
adcb
sub
adcl
test
mov
xchg
js
decb
dec
cmp
mov
xchg
xor
sub
out
ror
cmc
addr16
mov
test
lock
cltd
imul
push
leave
lea
xchg
popa
push
dec
push
test
xchg
mov
and
into
aam
xchg
mov
inc
adc
pop
jp
out
pusha
sbb
leave
mov
enter
sti
or
test
je
add
imul
pusha
data16
nop
jge
inc
daa
xchg
lock
add
mov
jae
and
xor
jmp
dec
xchg
outsb
lock
xchg
pop
push
lods
dec
hlt
cld
mov
dec
or
jo
out
lahf
sbb
cmp
fwait
xor
and
jmp
lods
rclb
xor
outsb
cwtl
outsb
into
xchg
test
in
lret
jle
xchg
lret
and
cmp
lret
sub
xor
test
test
mov
add
fnstenv
sub
xchg
jg
mov
add
cltd
push
xor
test
je
lret
pop
out
and
gs
pop
insl
pop
daa
inc
xchg
push
movsl
mov
push
push
test
cmp
insb
cli
dec
sbb
in
mov
test
out
inc
and
xorb
and
ja
addr16
xlat
fcomps
jo
or
xchg
daa
mov
dec
imul
xor
scas
fldcw
mov
nop
movsb
inc
out
ja
roll
lahf
out
test
sub
or
pop
mov
in
movsl
std
cs
loopne
in
aam
pop
pop
repz
out
scas
adc
sahf
pop
pop
xor
pop
sub
fldcw
mov
or
sub
cmc
test
or
das
out
mov
hlt
les
push
int
jecxz
add
push
sub
xchg
xchg
imul
mov
push
roll
xor
mov
push
add
stos
movsl
aaa
cmp
repnz
ret
inc
popf
inc
jle
push
iret
adcl
mov
repnz
and
xor
idivl
and
inc
stos
add
roll
scas
repz
xchg
popf
mov
movsb
in
sub
inc
inc
mov
mov
xorl
xor
subl
jmp
scas
popa
inc
jge
sbb
cs
xchg
cmpsb
je
negl
pswapd
xor
repnz
pop
push
fnstcw
push
rorb
lds
rcrb
push
insl
add
subl
xchg
inc
mov
fsubl
add
leave
sub
bound
mov
mov
push
add
lds
es
adc
mov
inc
jo
sbb
xchg
in
cmp
clc
ss
dec
or
pop
outsw
inc
add
lock
dec
lahf
insl
pop
sbb
cltd
das
pop
jnp
mov
jl
pop
gs
mov
mov
mov
bound
rcrl
xor
sub
jmp
mov
leave
cld
movb
push
and
sub
pop
ljmp
push
leave
test
sbb
fwait
xchg
jne
dec
sbbl
pusha
sbbl
aad
inc
jmp
leave
mov
mov
sbb
movsl
leave
repnz
or
jb
pop
jl
nop
insb
sub
xchg
mov
int
jl
lds
shrb
ret
jmp
mov
jg
mov
loope
insl
in
outsl
addr16
jmp
dec
cmp
push
xlat
test
into
in
fnstcw
mov
cmp
mov
daa
loopne
test
pop
hlt
mov
mov
cmc
push
lock
data16
pop
push
aad
inc
push
aam
lret
test
je
popf
fs
xchg
stos
and
addr16
aad
jb
idivb
sbb
xor
imul
jl
out
dec
xor
adc
loopne
inc
jbe
aad
stos
jb
nop
iret
into
gs
dec
xor
inc
xorb
add
aaa
cli
insb
lea
jl
fcmovu
outsb
and
rcll
xchg
inc
int
inc
mov
lahf
jb
sbb
jno
lahf
mov
insl
aad
fcmovnb
xor
or
xor
or
adc
cmc
push
lret
xor
nop
sbb
rorl
jns
jo
clc
ss
lock
sahf
sarb
int
cmp
add
cmpsl
loop
insb
dec
mov
arpl
jg
inc
sub
cli
ret
or
lock
lods
js
xor
ret
push
push
and
loop
push
jle
rclb
movsl
je
mov
push
push
scas
out
inc
cmpsl
push
leave
aam
bound
mov
cmpsb
pushf
scas
push
aas
mov
cwtl
ret
xchg
sbb
lds
jbe
push
les
push
xchg
mov
lds
and
dec
dec
test
out
in
inc
lret
add
stos
aad
add
push
in
hlt
cmp
in
mov
lahf
out
in
aam
decl
mov
push
lahf
cmp
addr16
adc
mov
dec
je
notl
fs
adc
mov
xlat
lods
mov
xor
ret
sbb
mov
mov
daa
mov
cld
fcom
bound
and
sbb
hlt
dec
shrb
sub
pop
xor
lcall
add
xor
or
movsb
out
xchg
inc
adc
and
mov
dec
push
cld
dec
test
push
lea
test
adc
movsl
test
lods
andb
in
divl
pop
into
inc
aam
xorb
cmp
mov
arpl
adc
and
pop
dec
pop
jle
mov
jl
int3
jb
dec
js
iret
sbb
cmpsl
jae
xor
jp
loope
test
fisubl
js
jg
jne
movsl
arpl
mov
sti
lret
xchg
aaa
xor
xor
or
mov
mov
mov
push
jae
jmp
inc
adc
xchg
pop
xchg
mov
std
aam
cld
call
fldt
ror
xchg
mov
xchg
or
test
push
sub
rcl
dec
cmp
or
inc
push
std
mov
and
xchg
roll
imul
sbb
lret
out
jns
loop
cmp
cmpsb
adc
dec
pushf
xchg
dec
mov
dec
call
adc
fstpt
es
mov
or
add
dec
shrl
sub
and
loop
cmp
mov
js
pop
and
loop
add
sbb
data16
mov
jp
cmp
mov
pop
mov
mov
inc
adc
inc
rcr
sub
mov
lods
dec
jg
pop
loop
xor
jmp
or
sbb
cmp
arpl
pop
cmpsb
sub
lcall
mov
xchg
aaa
in
pop
sub
or
and
mov
mov
jno
call
xchg
frstor
cltd
mov
push
iret
adc
jo
movl
out
cli
scas
mov
stc
iret
lods
mov
rcll
in
mov
cmp
pushf
sub
mov
mov
xchg
push
jmp
pop
out
popl
stos
cltd
or
xchg
cltd
pop
std
xchg
cmp
mov
pop
adc
jns
sub
imul
ficoms
in
cmc
js
xchg
mov
add
adc
xchg
xchg
fiaddl
dec
pop
push
aaa
cs
mov
add
cmp
jnp
mov
mov
aaa
mov
push
cmp
fcompl
in
movsb
mov
call
rcrl
jg
pop
pop
lcall
mov
mov
sub
jbe
and
sbb
cmc
fcomi
sub
aaa
dec
insl
mull
ret
ja
fnstcw
fs
mov
cs
cmp
push
inc
and
in
jg
inc
cmp
pop
divb
mov
dec
adcb
dec
push
test
pop
mov
das
mov
xchg
push
and
sbb
or
pop
mov
movsb
sahf
xchg
fldt
ljmp
pop
mov
push
mov
imull
ljmp
sub
mov
push
int
fwait
aaa
pop
hlt
sti
dec
dec
stc
hlt
jg
sub
popa
iret
mov
idivl
lods
lods
ljmp
out
out
aad
add
rcrl
mov
hlt
sub
push
xlat
or
mov
enter
orl
push
mov
insl
in
adc
pusha
mov
push
ja
addr16
mov
jnp
cmc
inc
cmpsl
xchg
jl
mov
movsb
leave
or
xor
xchg
push
jo
sbb
hlt
fsts
mov
insl
push
fisttpll
mov
xor
xor
push
adcb
cltd
mov
push
push
popa
or
ljmp
movsb
fcoml
xchg
xor
fmull
mov
and
sub
insl
rclb
dec
mov
and
leave
xlat
jns
out
add
push
into
lea
sub
inc
mov
mov
pop
mov
mov
jnp
and
mov
mov
cmpsl
inc
arpl
dec
test
ljmp
ret
pop
jns
outsb
xor
icebp
dec
mov
inc
or
mov
ficoms
stc
cli
mov
rorb
push
in
add
sub
inc
add
loope
imul
jmp
add
or
or
adc
push
push
ja
cmp
pop
cmp
xlat
and
jle
push
lea
lea
jg
and
adc
add
loop
adc
out
lret
test
adc
fstps
rcrl
sbb
cmp
cmpsb
arpl
cmp
push
shlb
pop
orb
decb
cmp
in
stos
xor
rol
jno
inc
imul
lret
pop
fisubrl
subb
cld
pop
jle
sub
mov
add
aas
mov
imul
addr16
push
or
add
fadds
jo
lock
sbb
dec
out
xor
and
and
pop
jb
cli
daa
cmp
push
jae
clc
sbb
sahf
je
sub
push
push
mov
call
xchg
push
insb
or
fmuls
inc
add
xchg
push
mov
subl
test
mov
sbb
lret
ljmp
incl
sbb
sti
sbbl
adcl
add
and
dec
push
push
or
pop
xor
int
mov
mov
sbb
inc
jp
pinsrw
push
xchg
dec
jp
mov
out
sbb
push
add
shlb
push
xchg
and
fdivl
or
aad
test
mov
jl
cs
mov
xchg
scas
push
into
stos
int3
lcall
insl
mov
movsl
dec
xor
in
cltd
add
sarb
mov
call
xlat
data16
lahf
jbe
jne
sbb
inc
mov
mov
incl
addr16
aad
arpl
mov
cli
je
jb
sub
jmp
or
mov
idivb
insb
sub
mov
add
hlt
and
fimuls
pop
scas
scas
nop
mov
shrl
sbb
xor
xchg
push
and
xor
dec
fsubl
mov
inc
lahf
in
jle
popf
mov
mov
adc
idivl
pop
mov
mov
insl
jb
mov
pop
gs
in
sbb
mov
imul
cmp
les
mov
and
mov
mov
and
cmc
push
std
cmpsl
push
add
iret
mov
push
jne
xor
iret
es
imul
sbb
dec
inc
insb
or
lods
shrl
push
and
dec
sub
adc
outsl
jle
pusha
pop
loop
sbb
dec
jns
mov
mov
lods
pop
outsb
movsl
arpl
out
imull
lods
and
and
lahf
xor
push
test
jae
popa
mov
loopne
push
pop
sub
test
gs
jb
mov
adc
mov
xchg
pop
test
test
jo
test
faddl
fldt
das
xchg
jle
hlt
lret
xor
sbb
hlt
stc
sbb
addl
mov
cmpsl
adcb
mov
cmpsl
xor
lods
push
rcll
or
pop
adcl
scas
cwtl
lcall
mov
add
pushf
xchg
push
and
fcmovb
mov
or
call
ret
or
gs
aaa
test
jp
enter
fdivs
mov
add
pop
mov
es
shrb
call
xchg
imul
sub
sub
push
pushf
fnstsw
pop
js
shl
popf
testl
mov
push
pop
call
test
cmp
mov
jbe
outsl
adc
sbb
adc
pop
fs
outsb
mov
movsl
push
xor
lahf
inc
pop
lea
push
aas
pop
cmp
ss
mov
ja
and
cmp
jle
test
xchg
pop
mov
inc
loope
rcrb
push
xor
xchg
adc
nop
cld
inc
xchg
flds
test
and
scas
and
add
mov
mov
inc
push
dec
jl
mov
ficoml
inc
push
loop
aad
mov
xchg
cmpsb
inc
xor
pushf
xchg
inc
or
lcall
adc
push
push
enter
and
xor
sub
xchg
mov
lcall
mov
sub
pop
mov
xchg
jl
xor
inc
push
jge
jne
stc
jnp
pop
cmp
adc
jp
adc
push
sbb
fnsave
je
mov
leave
aam
pop
mov
in
xor
gs
ret
out
or
sbb
mov
and
xor
ja
outsl
jns
mov
fwait
test
popf
inc
popf
cmp
dec
inc
stos
and
add
cmp
test
inc
test
xor
in
mov
cmpl
sub
xor
mov
dec
and
in
daa
cmc
or
mov
sbb
jp
mov
adc
sub
xlat
aad
xor
dec
daa
loopne
mov
inc
jp
lret
jle
xchg
mov
sub
jb
mov
mov
sbb
ds
push
push
leave
dec
mov
stos
xor
jae
lcall
cmp
ss
sbb
add
jns
les
cmp
cmp
add
mov
push
jns
lods
add
ret
imul
push
pop
xchg
lds
mov
cmp
jg
dec
es
lret
mov
or
sub
ret
fwait
ret
jg
jnp
fcompl
mov
pop
push
mov
push
and
test
and
add
sbb
ret
push
push
ja
cmc
xor
cmp
xchg
sub
mov
daa
aam
jp
mov
push
out
xor
adcb
call
into
pop
add
sub
mov
adc
inc
aad
sub
sub
cmc
cmpsb
push
clc
shrb
mov
adcl
pop
and
popa
mov
pop
adc
rorb
stc
and
fisubrs
jno
push
clc
lods
or
fiaddl
mov
fldz
adc
add
inc
mov
jecxz
int3
sbb
sub
aas
cmp
push
push
lods
jns
aas
jo
push
int
sbb
jno
addr16
inc
cli
lods
push
jle
push
jo
mov
push
in
sub
push
push
xchg
int
jg
xor
cmp
mov
xor
mov
fdivs
inc
imul
dec
pop
or
add
hlt
mov
jle
cwtl
add
xor
jge
lods
jle
fwait
sub
mov
xchg
cmpl
cmpsl
adc
mov
jmp
ss
hlt
shr
pop
cmp
sbb
sbb
cmpsb
or
xchg
or
inc
jmp
xchg
adc
mov
mov
cmp
push
cmp
jb
vmovaps
movl
jmp
cmpl
mov
movl
movl
mov
jmp
movl
jle
push
pushl
call
andl
adc
xor
xor
mov
sub
and
not
and
movzwl
adc
cmpl
mov
movl
movzbl
mov
jmp
movl
movl
jbe
push
push
push
pushl
call
add
sbb
sbb
xor
add
mov
mov
shrd
adcl
mov
or
mov
addl
jmp
inc
or
add
cltd
or
jg
mov
xchg
mov
lahf
mov
cmp
mov
aam
jmp
mov
push
mov
sbb
mov
mov
mov
mov
push
mov
sub
adc
add
pop
pusha
add
roll
inc
xchg
dec
gs
add
push
pusha
sti
push
xchg
ljmp
ljmp
mov
or
or
aas
cmp
test
jne
xchg
dec
icebp
mov
jl
mov
sbb
mov
push
movsl
les
inc
dec
inc
xchg
push
inc
add
call
aam
bound
and
inc
cmp
addr16
xor
icebp
lahf
mov
cld
sub
dec
dec
scas
pop
and
add
add
repnz
mov
jl
aam
les
mov
or
std
mov
ficoml
in
jg
shlb
jne
push
outsb
ds
mov
pop
mov
lret
inc
stos
and
xlat
bound
fs
test
push
sub
loop
add
xchg
push
mov
fwait
mov
dec
adc
jmp
push
aas
or
mov
inc
lcall
pop
or
repz
pop
stos
adc
dec
cld
rcll
bound
aad
or
xor
xchg
xchg
in
add
sub
push
jle
inc
pop
and
jns
mov
nop
inc
inc
pop
arpl
sbb
in
xor
lret
or
mov
and
mov
and
inc
ret
stos
xor
setne
xchg
inc
lods
rcr
aas
int3
adc
stos
jl
dec
lret
pop
jle
adc
pop
orl
sbb
pop
clc
or
cmpsb
pop
nop
sub
jbe
int
cmp
add
mov
inc
xchg
push
cmp
lock
data16
shl
mov
pushf
fucomi
add
dec
sbb
fstl
stos
push
jne
xchg
mov
movsl
add
inc
nop
mov
dec
das
dec
jae
and
sbb
insl
sbb
adc
mov
les
cmp
inc
xchg
and
cld
dec
faddp
movsb
mov
sub
lds
and
aas
dec
daa
call
or
mov
addb
ja
loope
and
iret
mov
in
adcl
add
fdiv
dec
scas
subb
cld
cmp
into
roll
sbb
mov
xor
dec
push
lret
rcrb
lock
dec
sbb
lock
std
lret
inc
ss
bswap
xor
out
int
flds
pop
dec
sub
sub
orb
aad
inc
xor
fldcw
fdivrs
setne
sti
mov
dec
outsl
cmp
out
bnd
dec
and
ret
popa
mov
add
ficomps
push
push
lock
and
fsubl
shll
mov
rclb
jb
ret
mov
push
frstor
jns
and
push
cmp
jge
ljmp
ja
adc
xchg
jp
inc
cs
push
insb
imul
es
dec
dec
push
sub
shlb
adc
push
jne,pn
pop
dec
add
sub
pop
sbb
pop
mov
jo
mov
pusha
mov
mov
stc
ret
adc
and
loope
adc
adc
mov
mov
pop
cltd
and
pop
pop
adc
gs
mov
repnz
adc
int
cmpxchg
sub
lods
nop
add
orl
jle
pop
mov
in
roll
xchg
push
rcll
add
orb
insb
cmp
notl
std
clc
xor
dec
mov
dec
push
pop
dec
jle
xchg
mov
dec
inc
ja
sub
sub
or
jl
sbb
loop
mov
push
enter
push
sub
add
mov
add
add
mov
xchg
cmp
in
push
icebp
mov
pop
cmpl
mov
gs
rorl
fs
in
xor
mov
fnstenv
inc
mov
lods
adc
xchg
out
adc
roll
stos
pop
xorps
jmp
mov
ljmp
and
jne
push
or
shll
mov
lods
sbb
mov
push
mov
rcl
ret
out
fwait
imul
jae
pop
push
and
dec
lods
ljmp
pop
pop
jl
sub
and
push
movl
test
je
jp
cmpl
add
pop
fisubrs
xor
mov
roll
add
pop
lahf
or
clc
mov
jne
test
add
jg
add
fsubrs
cmp
jg,pt
mov
or
jge
es
pop
dec
push
xor
rcrl
les
decb
repnz
cmp
rcl
inc
lcall
mov
xor
and
and
sub
int3
inc
xchg
popf
test
int
shl
leave
cwtl
or
cmpsb
dec
adc
es
xchg
cmpb
testl
stos
pop
jecxz
sahf
mov
nop
fwait
lahf
jmp
scas
mov
adc
push
lock
sub
and
inc
adc
xor
jb
pop
es
outsl
aaa
inc
aas
cwtl
xchg
xchg
popl
xor
jno
sbb
inc
xchg
ds
inc
mov
pop
sbb
pop
andl
and
insl
in
lea
pushf
imul
cmp
mov
imul
mov
cmp
nop
xor
inc
inc
lcall
sti
sbb
push
or
mov
in
add
pop
mov
pop
in
fstl
call
xchg
cwtl
daa
call
mov
fnclex
sub
scas
push
and
repnz
sub
enter
loope
movsl
jecxz
enter
cmc
add
ds
jb
mov
inc
adc
mov
cld
xor
stos
sub
dec
or
fsubr
sub
mov
in
jecxz
push
popa
mov
or
ljmp
mov
pop
xchg
orb
sarl
in
sub
jne
aad
mov
inc
or
js
xor
pop
add
jnp
jo
jmp
std
add
out
add
mov
mov
dec
aad
jno
pop
mov
mov
jmp
xchg
inc
daa
scas
mov
outsb
decb
in
lock
mov
or
jp
and
imul
bound
leave
push
loope
fs
cmove
cwtl
dec
stos
sti
in
pop
sbb
sti
pop
mov
mov
rcrb
inc
xchg
jbe
sti
mov
push
sub
lcall
sbb
add
repz
cs
cld
lahf
push
adc
mov
in
loope
xor
movl
or
shr
mov
subl
mov
mov
addl
mov
adcl
shrd
shr
mov
cmpl
not
mov
movl
mov
jmp
mov
mov
jb
pushl
pushl
pushl
pushl
push
pushl
call
or
adcl
movl
sub
and
subl
subl
mov
mov
xor
xor
adcl
or
adcl
shl
add
add
add
mov
mov
adc
mov
and
shrd
cmpl
movl
not
mov
mov
jmp
movl
movl
jge
pushl
pushl
push
pushl
push
push
call
sbb
add
or
or
xor
or
add
mov
movl
cmpl
mov
movl
mov
jmp
movl
movl
jg
push
push
pushl
call
add
sbbl
mov
adc
mov
xor
mov
addl
sub
shr
movl
mov
or
mov
addl
xor
shl
cmpl
movl
mov
not
jmp
movl
ja
pushl
push
push
push
call
xorl
xor
incl
xorl
subl
sub
xor
mov
sub
or
cmpl
mov
mov
movl
jmp
mov
jl
push
call
addl
adc
xor
neg
mov
mov
add
sbb
and
mov
movl
mov
and
mov
movl
mov
add
movl
mov
mov
adc
jmp
ret
mov
dec
rcrl
xchg
mov
add
frstor
mov
mov
push
fstps
cld
jne
mov
sbb
push
push
movsl
fcmovne
in
xchg
mov
les
fsubrs
mov
adc
adc
push
xchg
or
iret
dec
mov
sbb
jae
pop
shll
outsb
scas
pop
rcrl
gs
mov
and
xor
fs
sub
inc
mov
dec
divb
repz
add
adc
sbb
ss
cltd
xchg
rclb
pop
sbb
ret
pop
lods
nop
mov
sub
adc
repnz
and
daa
enter
inc
arpl
or
mov
add
mov
push
enter
popf
mov
mov
out
push
pop
enter
xor
popa
popf
sub
dec
cmpsl
adc
outsb
icebp
or
hlt
ss
sub
dec
aas
stos
push
dec
lahf
jbe
sbb
pushl
push
ret
dec
add
ud0
mov
pop
nop
in
fimull
in
sarl
aad
ljmp
sbb
or
mov
xor
sbb
adc
sub
cmovg
sahf
dec
test
arpl
jecxz
hlt
jne
fsts
inc
inc
sbb
pop
arpl
pop
rcrl
fistps
fdivrs
movsb
add
fistpl
lret
shll
sub
fcomps
cmp
mov
inc
mov
jns
jno
xor
add
popa
repz
lods
sbb
and
jl
in
mov
jl
mov
lds
cld
hlt
es
mov
push
fisttpll
xor
cmc
orl
pop
dec
sbb
adc
push
in
scas
add
cmp
jo
imul
shll
jecxz
cmp
pop
cmp
add
pop
test
push
bound
cmp
add
pop
jecxz
mov
mov
sbb
push
hlt
and
addr16
fisubl
movsb
jmp
or
out
popa
mov
fsubp
fdiv
jnp
cmpsb
jecxz
popf
add
xchg
inc
push
aas
sti
mov
in
ds
lret
adc
cmpsb
mov
aaa
pop
lret
sbbl
roll
loopne
fwait
xor
fiadds
js
data16
test
ret
mov
fsubs
aaa
mov
xchg
js
cld
enter
iret
sub
mov
cmp
push
add
iret
sub
repnz
loope
ret
xlat
iret
call
in
negb
into
fst
outsl
push
rcr
xchg
lcall
pushf
lcall
out
adc
dec
inc
imul
nop
or
pop
ja
xorb
sbb
lods
fisubrs
dec
mov
addb
pusha
pop
xor
sub
aad
repz
loope
push
fcmovnb
movsl
jl
lahf
jge
fwait
rolb
jno
lods
div
mov
arpl
ljmp
movsl
mov
fbstp
test
loope
aam
push
scas
cli
or
sub
and
xor
rcll
add
aaa
out
loope
mov
loope
jecxz
sub
int3
push
mov
das
mov
call
rcl
rol
ss
mov
lret
sbb
and
je
js
xor
pop
mov
stos
pushf
and
push
and
outsb
push
sbb
dec
in
push
loope
inc
aam
sbb
fmull
clc
xchg
movsb
xor
fnstcw
pop
and
xor
cmp
push
adc
xchg
jg
repnz
arpl
ret
mov
push
repnz
das
insb
jecxz
ret
nop
jmp
mov
cwtl
lahf
loopne
pop
cmc
scas
sbb
sub
mov
test
mov
jnp
xchg
jno
push
mov
shr
add
shlb
rclb
and
and
lea
xor
out
pop
pop
ja
int3
insl
push
xchg
lret
jg
ja
ficompl
icebp
lds
add
adc
mov
push
gs
mov
cltd
call
test
insl
adc
cmpsb
push
push
dec
lods
mov
popa
movsl
and
aad
inc
jnp
mov
bound
ret
mov
jo
test
mov
addb
mov
xor
frstor
pushf
mov
xchg
mov
fmuls
test
insl
stos
cli
cmp
adc
in
ret
and
jmp
scas
test
movsl
xor
push
sub
jg
sbb
cmp
aas
fcmovnb
and
stos
add
jecxz
pushf
inc
test
xchg
pop
mov
sbb
sub
insl
or
push
sub
loope
cli
xchg
repnz
jmp
mov
pusha
or
dec
iret
scas
sbb
shll
nop
push
jp
xchg
sbb
es
bound
mov
hlt
arpl
rcr
add
test
push
lock
push
sbb
pushl
addl
add
cmp
clc
shr
xchg
mov
outsl
je
icebp
push
adc
scas
push
in
sub
das
int3
jae
sbb
mov
ss
push
mov
and
dec
add
jp
pop
lock
and
stos
rolb
inc
mov
fwait
sahf
and
rclb
cmp
pop
cmp
jo
xor
data16
sub
fadds
mov
das
push
daa
push
cld
adc
sti
pop
jle
out
js
test
aaa
or
push
pop
jae
in
adc
xchg
jae
and
aas
int3
iret
nop
pop
xor
test
ss
vxorps
mov
pop
sub
mov
adc
pushf
xchg
jae
ja
pushf
fcoms
cmp
xorb
sti
mov
stos
cmp
push
cmp
mov
xor
xlat
adc
add
js
or
adc
adc
scas
add
xor
mov
in
loop
push
out
xor
push
add
dec
fbld
popa
pusha
pop
push
mov
cmpsl
shrb
xor
xor
test
in
mov
push
out
push
jle
lods
jo
arpl
js
cld
fcomi
dec
jo
stos
popf
mov
scas
mov
jle
dec
lcall
mov
add
cmp
das
lret
sub
inc
jl
in
aas
mov
movsb
cmp
xchg
adc
adc
aas
lret
mov
jne
sbb
out
dec
outsl
inc
xchg
and
cmp
lods
dec
and
mov
addl
out
adc
pop
mov
inc
dec
and
and
repz
out
ds
cmp
mov
insl
test
ret
sbb
dec
xchg
rcll
into
lock
cmp
push
movsl
adc
scas
or
and
inc
mov
or
pop
rclb
shrl
xchg
and
repnz
mov
jmp
lods
jp
scas
adc
xchg
mov
pop
fisttpl
ja
aas
mov
arpl
subb
adc
lcall
rorl
shl
mov
ljmp
cltd
rcrl
dec
dec
cmp
sub
es
nop
xchg
pushf
mov
data16
test
ljmp
out
inc
test
subb
sbb
mov
test
es
adc
add
push
jmp
movsl
pop
add
into
push
mov
mov
shll
or
xchg
pop
mov
jle
out
jmp
cmp
test
sub
push
cld
xchg
mov
xchg
mov
xchg
addb
nop
cwtl
les
cs
sbb
icebp
inc
pop
dec
mul
popa
jecxz
pushf
mov
lahf
add
push
dec
jmp
jnp
xor
out
imul
cmpsl
scas
stc
shl
out
pop
mov
cli
ret
sti
jle
or
aad
cmp
fcomip
das
sti
iret
lea
stos
cltd
cmp
test
mov
scas
mov
sahf
inc
daa
mov
mov
sub
sbb
cwtl
pusha
or
in
push
mov
adc
inc
inc
movsb
sarl
fwait
sbb
shlb
insb
scas
mov
sbb
movsb
jg
in
leave
push
movsl
call
mov
mov
lret
pushf
in
addr16
xlat
mov
gs
xchg
ret
xor
xor
lods
sbbb
mov
add
xchg
out
jbe
test
in
mov
repz
and
mov
jb
jno
mov
arpl
repnz
push
inc
aas
cmp
mov
imul
push
push
sbb
add
je
pop
sbb
test
pushf
lods
pushf
in
enter
fcomps
and
dec
leave
pcmpeqd
pop
jmp
lret
cmp
push
dec
push
xor
movsb
test
movsl
scas
scas
fwait
inc
cld
and
mov
in
add
vmptrst
pusha
cmp
aaa
push
fs
popf
loop
push
lret
push
xor
addl
je
xor
adc
mov
mov
nop
loop
mov
sub
xorb
shll
icebp
jg
cwtl
cmp
data16
add
rol
icebp
inc
pop
mov
pop
repz
cmp
out
in
push
out
int3
mov
adc
pop
jnp
push
mov
icebp
out
inc
loopne
add
popf
sti
xor
xchg
or
jnp
jb
jnp
mov
inc
lret
btrl
xchg
das
dec
mov
xchg
mov
xchg
xor
movb
xor
mov
pop
pop
int3
push
popf
stos
push
and
sub
aas
jg
sbb
cld
les
lods
sub
jb
mov
clc
push
pop
dec
mov
adc
orl
movsb
lret
fisubs
or
sbb
add
imul
sbb
xchg
or
mov
push
popf
rclb
dec
xor
sub
add
dec
xchg
dec
or
add
xchg
cmpl
xchg
add
sbb
test
jb
leave
andl
outsl
push
sub
pop
enter
push
mov
push
xor
mov
fists
outsb
cmp
shrl
fisttpll
std
lcall
js
push
cld
jno
flds
jg
sti
xchg
add
jg
iret
cmpsb
push
pusha
cltd
aad
dec
pop
in
inc
pop
loop
fnstenv
push
pop
cltd
push
jb
jnp
inc
nop
jno
lods
insl
add
cmp
pop
lock
add
test
ja
mov
adc
jbe
outsl
cld
lods
outsl
sub
fiaddl
cmp
dec
jge
clc
adc
enter
push
xor
inc
int
add
pop
xor
mov
jecxz
inc
out
cli
sub
leave
and
insb
cmpsl
cli
adc
sbb
fstps
xchg
leave
loop
jo
mov
jne
imul
ja
jg
cs
or
dec
push
stos
push
adc
insl
pop
cs
adc
mov
arpl
addl
mov
in
das
clc
fnsave
clc
dec
pop
mov
or
adc
pop
stos
mov
mov
mov
fwait
jno
add
in
dec
adc
loop
push
push
in
inc
jecxz
mov
in
imul
xchg
mov
ficoms
jb
loop
inc
xor
lret
imul
sub
cmp
rclb
cmc
dec
mov
pop
and
push
jge
aad
loope
ret
cld
addb
push
lea
shl
inc
out
nop
in
push
push
sub
inc
ret
jbe
jle
fidivs
xchg
push
mov
xor
loop
or
lea
adc
add
in
imul
inc
cmpsl
xchg
jecxz
jmp
pop
xlat
xor
out
fwait
push
shrb
push
lock
dec
sub
add
shrb
ljmp
shr
dec
sub
nop
adc
mov
add
ficoms
pop
addr16
pop
xor
or
scas
jp
cwtl
add
nop
mov
add
mov
aam
pusha
jl
subl
and
cmp
xchg
ss
out
xchg
add
lret
mov
test
clc
invd
decl
add
mov
push
int
cmc
sub
sub
add
ja
scas
mov
mov
pop
push
sbb
movsl
xor
sbb
sub
lcall
test
mov
js
mov
add
stc
dec
push
mov
push
mov
mov
adc
insl
lret
movsl
jge
cmpsb
mov
cmpsb
aaa
jne
pop
shll
pusha
nop
shlb
xchg
mov
mov
in
ljmp
pop
ficoml
lret
push
pop
mov
pop
inc
or
test
sbb
pop
sbbl
cmc
inc
pop
popf
add
adc
std
mov
orl
rorl
cmc
adc
and
out
sub
xor
fldcw
cmpsl
push
mov
aaa
mov
fisubs
xor
push
hlt
add
inc
mov
or
loop
outsl
shrl
jmp
push
mov
sbb
xchg
shrl
insb
inc
mov
or
cmpsl
mov
inc
enter
add
dec
das
sbb
aam
cmpsb
or
mov
nop
nop
mov
mov
inc
mov
out
jo
and
xor
xchg
inc
shll
icebp
lret
pop
jae
inc
mov
in
fs
xor
shrb
inc
ret
dec
lods
lea
add
xlat
ret
mov
test
dec
jle
inc
in
cli
and
mov
add
jo
lahf
shrb
test
sub
int
lahf
mov
add
mov
jo
mov
mov
icebp
scas
jp
xchg
sbb
movsb
jp
movsb
mov
cltd
pushf
mov
out
sbb
xor
mov
rcrl
inc
movsb
mov
mov
shrd
jmp
add
dec
push
adc
call
in
dec
scas
lret
ja
rclb
mov
loope
je
sbb
cmp
cmpsb
pop
flds
or
xchg
sbb
add
rorl
add
push
sub
lds
push
rdmsr
jecxz
cmpsb
dec
mov
ja
mov
adc
cmp
or
ret
aam
sbb
jnp
lods
fisubrl
xchg
jle
rorl
loop
lods
jmp
mov
pop
push
jbe
cltd
xchg
mov
ret
ja
fsubl
hlt
dec
push
jbe
push
jg
push
jbe
xchg
cmpsl
cmc
jnp
nop
jo
fcmovnb
inc
stc
pop
pop
sbb
ss
scas
or
ret
das
adc
hlt
inc
or
or
add
adc
jp
cmp
loop
mov
and
mov
inc
in
pop
stos
jmp
pop
dec
testb
fcmovnu
ljmp
lret
or
or
mov
pop
fxch
pop
lcall
push
xchg
lret
aas
in
stc
adc
stos
imul
and
fs
test
sub
mov
das
sub
sub
out
data16
sbbb
clc
fxch
xor
inc
pop
dec
xchg
inc
in
mov
call
mov
aas
pop
pop
cmp
dec
mov
pushf
shrb
xchg
mov
and
xor
bound
xor
add
rcrb
push
mov
inc
mov
xchg
xor
push
std
push
ret
xchg
mov
cwtl
push
jb
push
sbb
outsl
xchg
sarb
int3
add
add
jb
adc
push
add
inc
bound
ljmp
mov
into
icebp
push
lock
sbb
stos
jmp
add
imul
sub
or
xor
cmp
aad
fwait
inc
stos
out
bound
xor
sbb
pop
imul
cli
push
and
leave
stos
or
push
xorb
adc
or
adc
loope,pt
repnz
cs
xchg
pop
mov
dec
pop
xor
addr16
or
push
mov
sti
inc
and
test
ret
or
lcall
mov
cs
fcos
pop
insl
popf
and
int
dec
ficoms
add
inc
int
shll
arpl
fwait
iret
les
jno
cmpsl
fistps
lahf
xor
dec
push
scas
pop
into
ss
sbb
pusha
mov
data16
push
inc
clc
adc
push
pop
adc
add
mov
lret
sbb
mov
jbe
dec
mov
scas
movsb
fs
mov
les
pop
adc
cmp
adc
inc
js
sbbb
push
add
int3
sbb
fimull
mov
xchg
fsts
dec
mov
sahf
pop
and
sbb
jl
out
or
cmp
mov
movsb
nop
adc
or
add
ja
lods
out
adc
or
mov
mov
daa
outsb
pop
cmp
adc
cmpsl
shrl
clc
into
ds
daa
mov
or
push
lods
sbb
pop
repnz
subl
add
insl
jnp
dec
and
adc
xchg
in
add
in
jo
sarb
out
outsl
push
and
lcall
ret
cmp
cmp
int3
aad
add
sbb
push
sub
ret
pop
lods
mov
mov
xchg
xchg
je
cmp
sbb
cs
loop
xor
nop
mov
jb
fnstsw
add
jae
ljmp
fcmove
push
loop
bound
adc
add
xor
mov
xor
lret
test
cmp
sbb
data16
fildl
mov
cmp
dec
int3
jno
push
xor
fwait
lea
sub
fcmovnbe
loop
and
mov
fisubs
add
xchg
mov
and
push
inc
aam
xchg
movsb
jbe
lds
or
jg
cli
jno
or
mov
pop
mov
mov
ljmp
cltd
xlat
add
mov
dec
sti
xlat
adc
sarl
add
inc
jbe
jg
sub
into
test
insl
mov
gs
mov
pop
lret
jmp
test
push
cmp
jle
mov
fildll
aad
dec
mov
cmp
fsubrs
pop
mov
cmc
or
movsb
add
dec
push
pusha
jle
out
lods
xor
xchg
add
mov
jp
sbb
or
push
add
mov
xor
xor
xlat
cmp
repnz
test
scas
lock
insb
xor
sbb
je
mov
rolb
dec
cmpsl
cmp
mov
xchg
aaa
push
repnz
add
xor
sbb
rorb
xlat
loop
or
sti
sub
push
lcall
pop
test
xor
inc
out
sub
mov
cli
out
push
ljmp
cwtl
xorb
sbb
inc
lock
add
subl
jg
pusha
mov
sub
pusha
push
lret
aam
adc
mov
jno
lods
mov
sub
test
repnz
mov
inc
jo
push
movsb
stos
fidivl
sbb
out
leave
dec
sbb
cwtl
mov
scas
mov
mov
mov
push
xchg
xor
lret
and
lds
or
outsl
int
repz
pop
dec
sub
add
mov
mov
inc
sub
mov
cmpsb
mov
out
aam
inc
out
mov
pop
push
mov
or
jle
orl
jo
sbb
leave
and
xor
dec
stos
jne
lds
std
popf
cmpsb
mov
xchg
cmp
xchg
jns
push
mov
mov
inc
push
dec
loop
xor
push
cmp
fwait
xchg
jg
jne
out
sbb
iret
xchg
scas
jmp
fists
sub
jb
insb
into
and
das
mov
das
sahf
lock
call
fcompl
dec
xlat
mov
pop
cwtl
pop
mov
cmc
pop
jne
xor
push
scas
jg
dec
jae
xchg
sbb
inc
icebp
mov
xor
icebp
pop
jg
sub
rorl
outsl
loop
dec
loope
xor
fcoml
pop
nop
insb
ret
lcall
test
out
std
sbbb
xor
jge
mov
inc
negb
clc
cmc
test
jnp
bound
je
add
mov
inc
pop
cs
lcall
push
mov
popf
mov
mov
nop
mov
or
test
pusha
pop
mov
sub
jl
cmc
int
mov
xchg
xor
inc
xchg
pop
mov
mov
dec
push
pusha
test
loopne
ss
iret
int
mov
jmp
cltd
add
xchg
lret
cltd
or
cltd
add
in
rcr
dec
sbb
or
fnstsw
or
popa
pop
pop
sub
pop
push
dec
pop
mov
iret
add
mov
iret
adcl
cmp
pushf
xchg
inc
push
popf
dec
mov
xchg
inc
imul
add
repnz
jl
repnz
fs
pop
arpl
mov
xor
jmp
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
jmp
in
in
data16
push
sbb
daa
inc
sub
punpcklbw
mov
sbb
rclb
outsb
push
sub
mov
and
inc
hlt
jmp
push
mov
stc
sub
icebp
inc
xchg
test
mov
mov
push
js
jge
push
into
mov
ljmp
shl
mov
or
fstl
push
test
inc
push
ret
stc
mov
sbb
lret
cmp
mov
leave
sarl
fs
inc
mov
jl
push
testl
inc
jp,pt
insl
out
mov
or
ret
jno
push
and
popa
jns
rcll
lret
lahf
mov
js
insb
mov
cli
lahf
sbb
and
out
lcall
shrl
mov
add
shrb
sbb
jne
sbb
pop
push
and
xchg
dec
notb
pop
cmp
sub
xchg
lret
xorl
lcall
xor
jmp
sub
test
sbb
inc
ret
js
mov
nop
ret
fdivrs
sbb
fmul
in
arpl
sbb
mov
sub
push
inc
dec
outsb
or
test
pop
mov
jne
sbb
idivl
cli
mov
dec
sti
xor
int3
add
jo
data16
call
shll
sar
pop
xor
xchg
scas
cs
or
cltd
lret
faddl
insl
xchg
jp
dec
lods
pop
xchg
mov
mov
andb
cmp
jo
push
mov
jnp
int
imul
push
or
cli
call
jmp
inc
adc
xor
call
dec
cmc
sub
in
jno
jno
orb
lds
outsb
push
sahf
fwait
push
inc
push
inc
aaa
enter
enter
lods
inc
enter
adc
cwtl
pop
ret
mov
repz
movsl
dec
js
rcrb
pop
fmuls
adc
fnstcw
lods
push
arpl
adc
cld
mov
aas
mov
out
xchg
aas
scas
push
jecxz
push
dec
loop
xchg
hlt
sub
stos
out
mull
pop
jo
pop
or
movsb
jl
mov
pop
in
fwait
popf
scas
mov
adc
roll
lcall
iret
mov
pusha
test
fists
add
out
sub
ss
inc
or
inc
push
shrl
stos
mov
sbb
inc
xor
push
xchg
xchg
call
mov
jo
enter
shrb
mov
mov
test
fistps
add
or
sub
stos
mov
clc
jecxz
ljmp
mov
mov
xchg
inc
mov
mov
push
fldl
aam
mov
int
clc
fwait
test
lods
outsb
inc
pop
xor
sar
sub
inc
js
pop
push
pop
pop
push
test
adc
cmp
mov
je
lcall
loope
xor
cmpsb
push
xor
jmp
jecxz
repnz
aam
adc
test
rcrb
pop
push
xor
inc
or
push
and
xchg
push
add
sub
sarb
xchg
xchg
mov
fidivs
xchg
cmp
arpl
subl
iret
jmp
adcl
aam
push
ljmp
bound
mov
stos
mov
iret
cli
nop
inc
es
clc
push
add
mov
leave
out
outsl
add
add
xorl
ret
rcrl
dec
cmp
pop
xor
sbb
cs
mov
stos
mov
fdivs
mov
sbb
pop
aam
xor
jae
repz
xchg
ror
int3
xchg
cld
vmptrld
inc
pop
and
adc
inc
ss
mov
push
adc
iret
lock
fisttps
popf
mov
test
rcll
and
in
dec
sbb
stos
ss
adc
cmp
cltd
sub
mov
or
push
int
inc
jbe
xchg
aaa
dec
fs
xor
and
push
enter
pop
jmp
test
push
push
bound
add
or
cltd
and
flds
fcmovb
or
jnp
pop
fcoms
stos
fdivr
cmp
out
orb
lods
ffreep
sub
mov
cvtdq2ps
xor
hlt
mov
xchg
cmp
jbe
dec
xlat
adc
mov
out
mov
ret
std
jmp
fcoms
mov
jbe
dec
add
adc
lds
sarb
in
jl
ljmp
inc
dec
fbld
add
jmp
push
cmp
dec
loopne
mov
loope
sub
sbb
insb
xor
cmp
mov
inc
cld
xor
push
test
push
xor
pop
jae
jnp
or
bound
or
sbbl
aad
aas
and
jae
dec
sub
loope
shrb
shl
loopne
ja
push
imul
jnp
in
ret
pop
stc
push
les
stos
pop
fildll
xorb
dec
and
shlb
xchg
fsubrs
stos
popa
lahf
inc
insb
scas
hlt
loop
mov
pop
lcall
jo
push
push
hlt
cld
stos
stos
and
xchg
das
call
cmpsl
pop
ja
mov
fistpll
push
sarl
push
xor
insl
fstpl
and
out
jl
cmp
jle
mov
jecxz
lds
fcoml
cld
pop
jecxz
lock
mov
cmp
mov
push
fmuls
fidivs
push
lea
mov
add
push
iret
repnz
outsl
les
inc
loop
mov
mov
xor
int
in
xor
jp
push
and
adc
scas
jbe
imul
test
outsl
test
adc
or
leave
adc
cmpsb
sub
cld
mov
jns
xor
mov
xor
mov
cmc
sbb
mov
pushw
xor
stc
sub
je
je
test
adc
dec
dec
push
out
scas
fidivrs
movl
shll
hlt
loopne
sub
sbb
sar
jnp
pop
push
repnz
lret
inc
in
data16
rclb
lret
mov
lock
xor
sahf
adc
les
or
push
push
cwtl
pop
pop
rcrb
xchg
lret
mov
pop
pop
pop
lods
mov
insb
roll
and
andl
shl
rorb
xchg
pusha
clc
ss
popa
shll
and
and
lret
sahf
xchg
jle
inc
mov
push
jecxz
mov
inc
or
inc
cmc
stos
add
pop
jae
push
out
push
shll
pop
lret
dec
jbe
jnp
outsl
andl
or
xor
or
addr16
int3
test
inc
dec
sub
xor
jno
addr16
cld
cmp
mov
clc
divb
jae
es
outsl
enter
pop
fiadds
inc
pop
lret
pusha
or
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
jmp
outsb
hlt
xorl
negb
mov
ja
jle
mov
subb
dec
aas
into
xor
rcrl
frstor
sub
push
or
cld
lret
mov
sbb
push
into
mov
pop
mov
movsb
fsubrl
fiaddl
test
pop
dec
sub
dec
arpl
dec
ret
sub
icebp
jne
mov
stos
xchg
lds
cmp
push
sti
and
xor
fnstsw
or
mov
jg
divl
jns
mov
test
pop
pop
dec
push
popa
in
xchg
adc
inc
pushf
scas
push
xchg
and
fidivs
push
ret
je
into
sahf
int3
mov
icebp
mov
rolb
inc
inc
lock
pop
aaa
dec
and
jne
aas
lahf
push
sbb
jae
mov
repnz
dec
sub
ror
test
xor
cmp
loopne
lds
push
mov
cs
vmovupd
loope
jg
fcmovbe
mov
fcomps
or
xchg
xor
shl
fucomi
icebp
and
fildll
push
les
adc
out
js
jmp
insb
pop
jecxz
xor
jo
sub
cs
mov
xor
sbb
inc
std
jne
sub
icebp
out
ficomps
mov
lock
dec
xchg
lea
xchg
lahf
push
out
jnp
pop
loopne
stos
jge
cmp
adc
adc
out
ja
xchg
lods
fcmovnbe
add
sub
sbb
pusha
fs
cmp
aas
jno
xlat
repnz
cmp
adc
int3
jg
or
fwait
movsb
fildll
pop
jg
push
js
lods
loopne,pt
mov
pop
mov
push
push
adc
fisubs
mov
movsl
push
mov
sbb
inc
movsb
fisttpl
dec
or
jnp
test
dec
push
mov
or
ljmp
roll
loope
sub
adc
cmp
mov
scas
in
adc
sbb
fistps
xor
aam
mov
lds
movsb
scas
lahf
pop
xchg
outsl
adc
adc
jp
xchg
imulb
pop
push
movsb
sarl
das
push
mov
stc
sub
loop
lds
cs
outsl
adc
push
loopne
and
es
mov
jae
repnz
mov
jmp
add
add
stos
out
mov
sbb
pop
mov
rorb
xor
das
pop
fsubrl
lcall
sbb
pushf
aas
loop
cltd
mov
cmp
xchg
int3
add
aas
adc
insl
or
out
insb
loope
std
cmp
jecxz
jb
mov
mov
ret
fcmovu
push
xchg
sub
lea
loopne
mov
ss
xchg
push
xchg
leave
inc
jmp
insb
shlb
loope
jb
xor
frstor
int
jns
fst
repnz
sub
inc
jmp
dec
ret
test
loop
mov
push
aas
les
adc
sub
loope
jne
mov
jno
xchg
jl
adc
inc
nop
add
shrd
xor
push
movsb
mov
jno
les
pop
ret
cmpsl
fwait
xchg
enter
fidivs
xor
push
data16
xchg
dec
fstl
sahf
aaa
addr16
rcll
pop
movsl
in
mov
rcll
rorb
outsl
jge
sub
int
sti
ljmp
mov
dec
imul
adc
fdivrl
ret
add
adc
lods
fadds
pop
xorb
outsb
inc
ret
inc
push
data16
addl
sub
xchg
and
mov
aam
mov
sub
mov
sub
ja
popf
lock
add
out
add
sarb
pop
in
or
xchg
fs
cmpsb
adc
pop
into
pop
xchg
or
inc
pushf
adc
dec
fcomps
into
hlt
call
adc
mov
into
das
inc
jp
pop
sub
stc
adc
pop
pop
mov
sbb
push
adc
xor
fcom
enter
pop
imul
inc
pusha
fcoml
pop
pop
cmc
test
shl
and
and
and
cmp
out
inc
push
addr16
int3
cwtl
sub
das
fstps
ja
lods
or
icebp
int3
lahf
jae
stc
dec
add
inc
sbb
into
jecxz
mov
xchg
pushf
aas
mov
xchg
cmp
cmp
clc
adc
mov
and
jne
jb
push
jne
into
pop
in
xchg
xor
pop
push
mov
test
sbb
shll
les
stc
and
in
dec
and
push
stc
push
popa
and
cmp
mul
add
in
fs
xor
loop
mov
and
pop
ja
lods
lret
sub
jnp
pop
fdivrl
dec
test
sbb
or
mov
aad
bound
int
inc
lea
fidivs
out
out
cmp
pop
pop
clc
mov
jns
sbb
adc
mov
and
and
bound
imul
jbe
xchg
dec
loopne
mov
push
push
or
dec
fidivs
xchg
push
cmp
insb
xchg
sub
cmp
add
push
ljmp
scas
or
stc
and
fcmovne
jnp
aas
cmpsb
rcrl
std
inc
dec
out
push
rol
jecxz
pop
adc
inc
sbb
fisubl
into
in
lret
pop
and
std
jns
and
or
fs
inc
xchg
inc
ucomiss
shll
addl
jb
xchg
stos
or
lret
outsl
mov
into
and
cmpsl
fwait
subl
xchg
ret
push
arpl
xor
sbb
jne
data16
mov
or
hlt
inc
movsb
jp
push
jmp
ret
push
nop
or
push
sti
add
shll
xor
sbb
add
rorb
and
imul
lods
cmp
das
es
rcr
sarb
add
testb
mov
pop
lcall
adc
into
stos
dec
aaa
xor
test
mov
movsl
xor
popf
add
sub
lahf
mov
scas
adc
push
or
out
mov
mov
mov
test
orl
dec
lcall
jl
dec
lods
ljmp
push
out
jnp
sub
fucom
jg
sbb
sar
adc
inc
dec
in
push
push
scas
test
outsl
fs
mov
shr
cmp
jmp
cmp
or
push
jp
push
pushf
jno
push
pop
adc
cmovp
push
dec
and
cltd
pop
decl
cmpsb
fwait
lods
push
outsb
xor
es
popa
cli
xchg
and
sub
mov
jae
lea
dec
cmp
xchg
or
int3
das
jae
movsb
stos
test
scas
nop
pushf
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
jmp
add
mov
inc
jle
int3
xchg
mov
ja
mov
mov
jmp
aad
mov
dec
cmp
loopne
push
mov
sbb
stos
pusha
dec
or
arpl
arpl
movsl
icebp
fildl
cmp
les
addb
jp
push
aad
mov
jmp
dec
fs
movsl
or
fsubr
or
hlt
mov
mov
sbb
pop
pop
ljmp
stc
xor
mov
pop
push
fsub
sahf
imul
mov
insb
loop
iret
popf
mov
leave
mov
hlt
fwait
sbb
sbbl
mov
daa
aam
xchg
dec
lcall
pusha
test
out
loop
sahf
xchg
out
push
test
mov
daa
push
lock
cmpsb
std
in
push
inc
call
push
mov
imul
dec
out
push
xor
cmc
jne
xchg
ljmp
es
dec
xlat
mov
jb
xor
jecxz
int
mov
andb
push
stos
bound
sbb
iret
sub
adc
sbb
xchg
add
jmp
sub
cmp
mov
lret
push
or
dec
fldcw
sub
dec
shll
pop
cmp
sbb
adc
mov
fcom
sarl
push
test
xchg
ljmp
stc
stos
in
sar
lcall
mov
inc
cmpsl
mov
mov
sbb
jb
push
andb
cmp
fstl
jl
es
lea
fiaddl
sbb
adc
rcr
add
inc
jno
pop
cs
int3
mov
inc
dec
adc
xchg
add
push
sub
xchg
ret
or
out
sbb
cmpsl
lds
sbb
inc
test
jle
cmp
sub
push
aaa
pusha
push
lods
ret
pop
add
jecxz
ret
cmp
shr
das
add
mov
testb
inc
mov
adc
rcr
push
popa
rol
movsb
repz
insl
sub
push
mov
jge
xchg
stc
out
xor
ret
mov
or
xchg
adc
pushw
sbb
or
add
push
out
sub
idivl
ficoms
sahf
cmp
sti
lds
push
out
cmc
jns
data16
dec
pusha
cmp
test
cwtl
fists
cmpsl
sub
cmpsb
xor
in
out
cmpsb
lds
and
sbb
mov
lea
dec
pushf
add
push
adc
ficompl
or
sbb
loopne
sahf
cmp
lds
xchg
enter
sbb
xchg
adcb
xor
imul
imul
cmp
and
fisttps
jp
and
mov
loope
enter
mov
arpl
mov
dec
out
adc
adc
pop
sbb
sbb
repz
xchg
adc
icebp
das
or
and
cmp
scas
xchg
jae
xor
push
mov
inc
sti
push
sbb
jg
stos
nop
lcall
or
cli
mov
push
fldt
dec
xchg
jae
rcll
sbb
mov
sbb
sbb
popf
pop
cmp
lods
or
subl
sbb
pop
cmc
lock
mov
pop
ror
jmp
insb
cmp
movsl
dec
ds
jp
sub
xorb
jb
mov
cwtl
jo
out
hlt
push
mov
scas
fxch
mov
out
fisubrl
mov
sub
mov
dec
mov
lret
test
xor
into
sub
hlt
push
stos
lea
test
push
les
xor
jns
ds
cmpsl
push
mov
and
ja
testl
xchg
mov
icebp
mov
cmpsb
andb
nop
push
js
je
jo
fsubrs
push
add
rcl
and
dec
std
mov
add
ja
xor
fsubr
pop
jge
aaa
jp
jno
repnz
cmp
sbb
enter
int3
les
push
nop
ds
mov
xchg
pop
lret
add
mov
add
iret
pushf
mov
sbb
mov
xor
imul
xchg
pop
mov
test
mov
lods
insl
out
addb
shlb
mov
jns
lock
je
mov
repz
mov
daa
adc
addr16
mov
jmp
push
mov
xchg
imul
insb
int3
mov
movsl
rol
mov
lods
pop
movsb
frstor
or
dec
fstps
incw
mov
les
test
sub
lea
and
ja
inc
add
mov
add
nop
repnz
leave
jno,pn
outsl
stc
into
enter
xrelease
or
in
out
mov
pop
fs
leave
push
fistps
mov
outsb
rclb
xchg
aad
mov
stos
xchg
mov
js
jb
cmp
mov
andb
imul
pop
inc
jo
lods
add
inc
jo
shl
xchg
outsb
pushf
out
push
std
or
dec
pop
inc
xor
xor
cmp
or
dec
cld
insl
xor
roll
lret
aaa
and
inc
sbb
imul
adc
mov
and
gs
jae
pop
cmp
xchg
sbb
stos
cmp
loopne
mov
daa
fcompl
loop
aam
mov
adc
repnz
pop
dec
or
pop
dec
stc
mov
in
pop
icebp
push
fsubs
push
sub
jmp
mov
testb
cmp
pop
call
mov
movsb
xchg
or
pop
jo
sbb
push
out
mov
pop
cli
xchg
mov
ret
inc
in
xchg
mov
and
ljmp
icebp
insl
mov
xor
push
pushf
inc
pop
imul
push
cmp
das
pop
pop
mov
push
std
pushf
jne
add
sbb
inc
fcompl
inc
cmp
or
sub
inc
fwait
inc
test
mov
loop
xor
lods
mov
mov
data16
testl
dec
sub
pop
and
cmp
sbb
loop
lods
dec
or
scas
push
jp
mov
or
popa
ret
xchg
xor
xchg
movsb
pop
mov
mov
rol
push
cmp
js
in
push
sub
repnz
in
test
insb
lods
push
jb
xchg
in
or
jmp
push
inc
das
sbb
test
mov
pop
push
popf
adc
jmp
push
adc
add
mov
inc
shll
popa
dec
dec
or
sbb
jge
jp
push
pop
adc
daa
shrb
or
subl
mov
xlat
xchg
enter
add
hlt
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
jmp
orl
push
cmpb
xlat
in
iret
mov
cmova
or
xchg
jl
out
dec
into
cmc
les
loop
ja
add
inc
ljmp
pop
leave
dec
aad
dec
hlt
lds
jbe,pt
insb
sbb
arpl
push
ret
cmp
cli
sub
push
or
dec
pop
fsts
xor
jl
sbb
stos
pop
test
leave
or
cs
call
cmpsb
xchg
sti
push
inc
jecxz
in
imul
inc
inc
mov
out
inc
out
dec
jp
lds
aaa
push
lds
sbb
addr16
pop
lock
scas
adc
xchg
and
sbb
inc
inc
xchg
mov
xlat
push
and
fimuls
xchg
mov
pop
divb
and
js
nop
xor
dec
push
cwtl
jne
addb
push
insb
jb
push
pop
mov
mov
pop
jo
gs
lock
loope
sub
mov
outsb
fistl
cmp
out
clc
cmp
push
cmp
cmp
outsb
fistl
rcr
inc
fwait
dec
shl
arpl
xor
and
lds
bound
pop
jmp
fstpl
push
ss
cltd
xchg
mov
inc
add
dec
push
int3
mov
pop
mov
pop
jae
ja
cltd
pop
mov
xor
xor
pop
pushf
mov
mov
or
ljmp
icebp
mov
xor
fisubrl
lea
lret
ja
sub
add
popa
mov
mov
or
mov
or
xor
cmp
je
mov
jl
lock
xchg
and
sub
imul
ficomps
mov
xchg
cs
into
out
repnz
mov
mov
insb
jae
mov
mov
cmpsl
cmpsb
add
arpl
sti
jne
pop
imul
add
xchg
and
lods
ss
shlb
roll
testl
or
outsb
mov
pop
out
add
xlat
mov
fisubrl
mov
lea
cmp
leave
xchg
xor
adc
jle
jne
sbb
cltd
filds
push
cmp
mov
lahf
cmp
test
mov
or
pusha
imul
mov
fsub
push
in
roll
int
jns
std
cmp
adc
xor
dec
pop
push
jp
shl
cli
inc
jbe
add
and
icebp
shl
inc
movsb
xchg
jl
fldl
xchg
add
subl
mov
mov
out
jecxz
jns
jbe
inc
fnstcw
lods
repnz
popf
aaa
pop
sti
push
and
push
xchg
mull
xchg
inc
lds
dec
std
sub
movsl
adc
cmp
rclb
adc
scas
aam
dec
dec
addr16
cmc
dec
xor
mov
push
and
xchg
mov
mov
mov
cwtl
notl
cmp
xchg
xor
addr16
out
xor
dec
push
aad
push
out
push
sub
shll
imull
xor
pause
cld
test
fstps
lahf
and
add
dec
std
dec
js
cmp
xchg
out
push
mov
sub
or
data16
or
imul
sub
push
nop
jecxz
jge
ss
testl
fsub
shl
xchg
jl,pn
aaa
inc
je
mov
ss
sbb
mov
adc
cmp
incl
les
mov
push
or
les
arpl
cld
cltd
adc
inc
dec
int
jecxz
rcrl
jecxz
gs
sbb
dec
add
rorb
lods
hlt
cltd
out
fistpll
push
mov
push
ret
cli
or
cmp
jg
cmp
xor
adc
inc
lahf
mov
or
cld
ss
dec
daa
dec
jae
scas
sbb
mov
jbe
nop
aad
pusha
or
ret
cmp
jae
cmp
bound
rcr
test
daa
leave
cmpb
mov
jmp
cmpsl
pop
out
sub
lret
or
adc
out
aaa
int3
sub
aam
cmp
adc
repnz
rol
dec
addr16
gs
sbb
jl
mov
sbb
mov
lods
ljmp
ss
das
or
scas
repz
adc
push
loope
add
xchg
leave
pushf
dec
out
sub
mov
aaa
xchg
fiadds
xor
test
push
mov
daa
int
dec
push
lds
mulb
push
fistl
hlt
mov
add
arpl
or
adcl
add
mov
sahf
lock
jb
cmp
ss
dec
cmp
lret
mov
sbb
lahf
mov
xchg
aaa
and
aad
pop
mov
xchg
fucomp
xlat
data16
hlt
aas
xchg
xor
sbb
or
popa
sbb
dec
test
nop
push
movsb
sub
xchg
jbe
ds
mov
fistps
test
fiadds
icebp
xor
repnz
jbe
inc
jmp
loop
mov
out
sbb
test
out
push
negb
jnp
scas
mov
mov
or
icebp
mov
jnp
cli
ret
mov
cmp
cli
jo
mov
loopne
jmp
shrb
in
dec
aad
in
adc
jns
and
and
xor
loope
sbb
push
mov
out
sub
loopne
pop
and
mov
lcall
roll
sub
in
mov
or
fcompl
fisttpll
ljmp
subb
push
pop
hlt
push
insl
xchg
lock
sub
loop
mov
push
enter
add
push
lea
shll
rcr
sarb
inc
xchg
rorl
add
jno
repz
sarb
lock
dec
push
and
out
mov
js
test
stc
dec
cmp
roll
mov
insb
sub
push
pop
lcall
pop
mov
pop
hlt
mov
dec
jo
stos
jl
jp
dec
push
mov
add
sbb
sub
sbb
test
inc
mov
add
pusha
bound
dec
adc
dec
aaa
shr
gs
in
addr16
lcall
shll
cli
add
rcpps
iret
ror
xor
xchg
das
insb
pusha
pop
pusha
xchg
pop
cmp
popa
jmp
cmc
movsb
repz
in
push
and
gs
in
cmc
cmp
xor
inc
mov
movsl
cli
sbb
push
movsl
mov
sbb
xchg
in
loopne
pop
or
pop
gs
mov
xchg
pop
mov
clc
cmp
lods
push
lds
clc
xor
gs
sub
cmp
jo
clc
ja
mov
minps
pop
movsl
sub
data16
mov
aaa
loope
test
push
mov
frstor
mov
in
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
jmp
mov
and
setns
dec
jl
fadd
dec
xchg
ja
aad
mov
rclb
xlat
adc
lret
jno
jle
cmp
cld
and
dec
enter
jne
insl
xchg
cld
cwtl
push
je
test
pop
push
mov
in
sub
loope
dec
add
xchg
imulb
jnp
xlat
in
cltd
or
sti
cmpsl
push
push
xchg
xchg
test
mov
xor
shl
stos
aad
push
pop
push
int
lret
or
stc
in
aam
mov
shll
mov
cmpsb
jo
movsl
sahf
jb
sub
and
in
mov
lock
stc
xor
sbb
cld
lret
out
int3
add
stc
call
icebp
pop
testb
aam
dec
cmpsl
inc
adc
dec
lret
xchg
xor
ficoms
pop
loope
push
or
xchg
pop
in
jbe
ljmp
lret
and
pop
jne
paddsb
mov
jbe
sahf
sbb
cmpsl
adc
ds
mov
int
scas
std
or
or
sarb
pop
mov
lret
stos
lods
popf
sbb
loopne
mov
cmpsb
adc
in
enter
and
sub
data16
xchg
jnp
pop
lcall
movsb
cmp
leave
jb
push
out
sti
sub
data16
int3
cmp
fldcw
mov
push
lods
aad
les
inc
jo
sbbl
shr
test
add
dec
into
aaa
xor
repnz
fdivl
xor
std
mov
add
iret
sbb
xlat
addl
jns
fcoml
inc
push
pop
jp
push
sbb
cmc
js
dec
adc
xorl
das
jge
push
or
aam
push
fs
sub
popf
scas
in
sub
dec
adc
sub
mov
les
iret
insl
push
xor
ss
jno
popa
dec
out
sahf
insl
fdivrs
push
sub
or
pop
jmp
fdivl
enter
stos
and
push
inc
out
loopne
sbbb
cmp
test
fisubrl
add
sub
mov
call
fcomps
pop
dec
mov
imul
pop
mov
pop
mov
gs
mov
mov
push
xor
roll
out
xchg
mov
sbb
popf
sub
cmpsl
and
je
and
fs
and
fwait
push
jb
dec
scas
icebp
sahf
sbb
mov
int3
nop
mov
out
adc
sbb
jp
inc
aas
xor
call
jb,pt
cmp
mov
sbb
or
mov
mov
add
or
jns
cmpsl
test
ficoml
mov
test
pop
jp
fldl
and
stc
dec
jnp
ret
inc
jae
dec
cmp
fstps
in
jmp
jne
mov
dec
imul
dec
or
jno
mov
xlat
lcall
xchg
in
xor
mov
into
inc
sti
fld
add
push
cltd
and
xor
icebp
mov
xor
fimuls
outsl
ror
mov
aas
sbb
mov
mov
sub
stos
pop
mov
ja
stc
adc
mov
mov
mov
lret
adc
int
mov
cmp
addb
cmc
in
mov
mov
shlb
test
jp
sbb
sub
in
sahf
in
scas
pop
test
adc
mov
xchg
out
subl
mov
notl
add
ficoms
aas
mov
sbb
or
scas
testb
mov
mov
fsubr
test
pushf
dec
sti
adc
imul
adc
frstor
repnz
xlat
xchg
push
push
into
popl
stos
std
insl
dec
or
mov
mov
loopne
sub
push
mov
adc
xchg
lcall
lcall
xchg
pop
sahf
xor
fbstp
jge
xchg
xchg
pop
dec
mov
arpl
popa
mov
addr16
adcl
sbb
pop
inc
dec
sub
mov
mov
xchg
int3
test
lea
stos
in
loop
out
daa
xchg
cltd
jp
daa
sub
scas
jb
dec
rcl
pop
mov
xor
pop
xchg
sub
or
push
sbb
roll
addr16
fcoml
dec
loopne
movsl
mov
pop
push
pop
outsb
fs
adcl
out
scas
mov
out
andb
ffreep
mov
outsl
insl
stos
pop
fxch
mov
or
idivl
dec
mov
movsb
call
loop
and
out
push
adc
leave
jno
mov
jle
mov
negl
mov
lock
mov
dec
popf
icebp
xor
std
adc
pusha
cmp
pop
and
or
enter
mov
or
jmp
lret
add
push
loope
mov
adc
pop
pop
cmp
clc
dec
pop
lock
cmpsl
push
mov
jno
sbb
popf
inc
pop
xchg
enter
mov
push
mov
movsl
jmp
ret
js
inc
xor
mov
dec
loopne
cli
loop
add
ds
sub
lods
rolb
stos
push
test
out
mov
dec
adc
sarl
scas
loop
xchg
xchg
and
mov
xchg
outsl
stos
push
or
dec
xchg
mov
push
sbb
push
or
jp
adc
push
sbb
iret
rcl
rcll
ficompl
push
loopne
sbb
pop
mov
push
cmpl
call
push
add
jb
inc
fwait
int
mov
pop
inc
pusha
js
pop
test
cmpsl
shrb
bound
jae
js
frstor
push
cmp
fisubrl
jle
xchg
or
popa
gs
das
adc
add
xor
or
test
call
push
scas
cmp
jnp
jle
sub
in
into
loop
pop
pop
hlt
xchg
imul
icebp
sub
lds
sub
push
addr16
pop
adc
mov
jae
in
or
sbb
cmp
xchg
mov
push
xor
sbb
lret
adc
test
jae
inc
aas
fidivrl
or
push
sti
lcall
cmp
adc
xor
clc
int3
xchg
push
sbb
lea
int
int3
in
jle
sbb
bound
cmp
mov
jbe
lds
decl
pop
mov
jle
into
mov
psubb
cmp
bound
js
cmp
outsl
adc
cmc
mov
ds
test
xchg
arpl
insb
and
lahf
mul
adc
and
mov
addr16
mov
iret
cmp
popa
out
stos
testb
gs
dec
mov
push
mov
sti
std
mov
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
jmp
ret
fwait
mov
and
ds
or
xchg
mov
fistps
adc
lcall
or
loopne
bound
lahf
sub
ss
xor
out
fmull
add
push
and
pusha
out
incb
push
jb
arpl
mov
xchg
add
repz
ret
icebp
fs
jns
sar
in
mov
or
es
and
mov
lods
cmp
cmp
leave
addb
imul
mov
int3
lret
dec
iret
es
pop
out
mov
cmp
cmp
or
imul
imul
loopne
pop
aam
mov
mov
mov
loope
test
data16
xor
or
jno
and
loopne
inc
inc
iret
jecxz
mov
hlt
xchg
cmp
cltd
cmpsb
cwtl
movsb
pop
in
mov
es
dec
hlt
xlat
cmc
std
lret
inc
adcb
sbb
xchg
lcall
adc
push
dec
shll
in
rorb
sub
push
adc
or
ficoms
push
test
push
repz
or
push
pop
sbb
lret
aam
xor
xor
inc
xchg
out
push
arpl
test
mov
add
or
mov
mov
push
or
mov
cmp
popa
enter
xorb
xorw
sbb
imul
das
xor
popa
mov
jns
fwait
push
and
adc
pcmpeqw
sub
mov
cmp
and
lret
cmp
insl
je
push
mov
mov
xchg
xchg
xlat
movsl
fistpl
jnp
jmp
mov
and
sub
add
popa
mov
das
and
pop
add
in
cmp
ror
in
jl
add
rol
pusha
ret
pop
sub
adc
mov
aaa
cmpsb
mov
sarl
test
or
pop
jb
xchg
dec
rclb
adc
loopne
lcall
ds
imul
xor
loope
xchg
fdivs
hlt
xorl
sub
and
hlt
jmp
int3
pop
jp
jl
cmp
das
cmp
aaa
lea
xor
push
push
jns
cmp
mov
or
inc
jns
add
mov
test
and
aad
aad
pop
es
mov
je
cld
mov
jge
ss
pop
sbb
mov
xchg
and
and
inc
dec
and
mov
mov
repz
dec
dec
ja
push
enter
pop
adc
loop
add
mov
pop
or
scas
push
mov
jns
or
mov
ja
push
inc
or
insl
ljmp
gs
jbe
pop
xor
pop
fwait
inc
lods
xchg
push
outsb
mov
scas
inc
test
leave
fsub
inc
adc
or
andb
or
mov
inc
adc
outsl
jnp
movsl
or
jne
sbb
les
and
lret
ret
fisubrs
inc
dec
pushw
dec
imul
or
xor
inc
mov
out
stos
dec
xchg
rclb
fiaddl
cmp
popa
pusha
mov
test
pop
fcmovu
adc
aaa
mov
or
insl
mov
lods
flds
pop
inc
repz
je
imulb
inc
pop
rorl
mov
or
ja
out
scas
rcl
push
xlat
mov
aad
fldl
push
out
outsb
shll
mov
cmpsl
mov
push
inc
or
loope
sbb
sbb
or
jge
mov
mov
ffreep
xlat
xor
and
xchg
xor
inc
es
mov
stos
lret
sbb
cli
repz
mov
dec
stc
xchg
movsl
rol
or
sbb
jno
icebp
in
pusha
push
xor
fdivr
out
sbb
cli
dec
movsb
mov
ds
push
inc
movhlps
pop
jo
dec
std
push
dec
leave
lcall
xchg
mov
jle
cwtl
sub
jne
sti
fstps
std
pop
frstor
push
sti
cmc
jne
fdivrs
pop
pop
mov
aad
out
push
push
icebp
sarl
jmp
inc
fldenv
cmpsl
cli
ret
lret
out
mov
push
xor
lret
xor
adc
push
add
call
push
jmp
xor
jmp
cmpsb
xchg
js
pushl
ds
inc
pop
sbb
int3
jns
fwait
and
sbbl
inc
std
rcrl
por
xor
sbb
add
addr16
stos
cmp
sbb
mov
rorb
aas
imull
sub
xlat
mov
cltd
sbb
out
lea
sbb
sbb
pop
pop
jle
jl
push
scas
pop
lds
mov
movsb
mov
imull
loopne
icebp
add
xor
mov
mov
ljmp
fidivrs
dec
jbe
mov
movsl
cs
roll
sbb
xor
pop
push
and
pop
adc
cs
xor
and
mov
pop
mov
and
mov
pop
sbb
dec
dec
dec
push
xor
cmp
ja
ja
cli
std
pop
pop
push
push
mov
movsb
and
stos
cmp
adc
negb
xor
and
jnp
jo
cmp
xlat
inc
or
jbe
jns
sbb
mov
jp
inc
fwait
outsl
adc
or
jns
pusha
in
pop
mov
add
pop
iret
xchg
stos
lret
cmp
pop
idivb
pop
adc
mov
fsubs
cli
add
sti
pop
cli
push
das
dec
cmp
push
sbb
add
hlt
es
ss
test
cld
pop
sub
or
insb
inc
outsl
insb
inc
loop
xchg
adc
inc
ljmp
outsl
frstor
out
mov
pop
and
cs
sub
pop
xchg
mov
mov
test
pop
mov
insl
fisttpl
push
or
aas
or
fs
in
insl
jns
popf
cs
or
jne
bound
mov
xor
stos
xchg
ret
lea
xchg
and
mov
jmp
out
popa
int3
shrl
mov
movsl
shll
push
and
ret
sbb
mov
mov
push
jb
xchg
mov
inc
jbe
mov
mov
stos
stc
lret
mov
or
xchg
loop
xor
inc
mov
xor
and
xor
movb
ret
pop
inc
cmp
jnp
mov
in
int
xor
sarb
adc
dec
outsl
les
aam
movsl
lcall
push
cmpb
pop
jecxz
imull
or
jae
pop
fcmovnu
xor
daa
std
adc
inc
xchg
imul
mov
push
js
divb
sti
jle
jnp
sar
cmp
scas
jg
fbstp
outsb
cs
inc
repnz
faddl
je
mov
jge
adc
loop
push
xor
into
xchg
add
mulb
mov
cmpsb
and
ljmp
sahf
in
mov
xchg
dec
dec
sub
inc
cltd
cs
mov
push
testb
mov
mov
jmp
aam
inc
test
addr16
add
push
adc
ja
cli
mov
int3
insl
stos
fisubrl
or
ficoms
fs
lret
mov
sbb
out
fs
xchg
mov
stos
inc
jno
cld
sahf
jae
lahf
cmp
pop
mov
pop
jp
or
cmp
stos
inc
lods
sub
popa
test
lahf
outsl
inc
xor
loope
rorl
loopne
ss
test
push
inc
push
or
and
mov
fdivrs
notl
insb
stc
jecxz
inc
shl
add
sub
out
ret
and
and
xchg
sbb
fwait
dec
jle
in
popf
xchg
dec
jmp
mov
dec
sub
jnp
push
ljmp
cmpsb
mov
xlat
mov
pop
insl
or
push
lods
ret
ret
sarb
lds
mov
or
fsts
dec
jp
dec
fs
sbb
push
mov
stos
out
lcall
pop
adc
mov
shrl
dec
sti
popa
int3
xlat
lret
dec
cwtl
stos
mov
arpl
xchg
xor
ficoml
pop
jp
nop
pop
push
fisubs
cmp
fcom
push
jle
cs
test
sub
jge
stc
mov
xor
in
loope
ret
and
jge
pop
sbb
mov
sub
sar
jmp
adc
inc
out
sbb
aam
or
das
or
xlat
lea
movb
rclb
test
arpl
lea
push
mov
mov
sbb
outsl
push
jbe
dec
out
xchg
dec
in
push
add
add
aaa
call
ljmpw
xor
fs
pop
push
imulb
aam
xor
cld
rcll
int
sbb
pusha
ud0
push
ja
es
cmp
test
imul
dec
xor
mov
add
call
xor
ss
cltd
mov
mov
jmp
stos
cmpsl
xor
pusha
mov
xchg
aad
nop
push
mov
inc
shll
cmpsb
cld
push
adc
cmpsb
push
mov
imul
data16
mov
push
jecxz
aaa
xor
cmp
cmp
out
jl
mov
test
dec
ss
out
mov
or
mul
fsubrs
cmpsb
lea
les
fiadds
lods
push
test
cmpsb
fisubl
loop
and
mov
pop
jp
fcompl
dec
daa
mov
out
pop
sub
or
mov
into
sub
mov
mov
inc
and
xor
dec
jl
shl
sub
mov
rol
fsubrs
dec
or
mov
lmsw
cmp
cmc
sbb
movsb
sahf
data16
cld
xchg
sbbl
sbb
aam
addr16
and
int
xchg
sahf
mov
pop
sahf
cs
push
mov
mov
shrl
push
cltd
ret
jl
jge
mov
xchg
dec
repz
add
arpl
push
adc
enter
or
add
mov
push
and
popa
xor
dec
jmp
push
add
sbb
outsb
je
lods
push
mov
stos
pop
mov
movb
pop
cltd
fiaddl
jns
mov
inc
push
mov
repz
cwtl
pop
mov
xor
stc
xchg
mov
loope
lahf
xor
imul
sbb
int
aam
pop
xchg
dec
xlat
dec
sti
lret
or
pushf
jecxz
mov
int3
sbb
ror
dec
enter
iret
add
imul
add
xchg
mov
neg
mov
aaa
dec
loope
fsubrl
test
std
adc
push
aaa
push
sub
pusha
cs
add
mov
test
ss
clc
dec
jp
out
je
insb
jbe
mov
into
and
imul
les
inc
lea
out
inc
ret
pusha
imul
rol
mov
or
cmpsb
lods
push
out
xchg
iret
es
nop
incb
aaa
mov
and
dec
inc
jp
mov
fistl
lahf
ret
decl
push
push
xchg
in
pop
add
sbb
dec
lret
push
xchg
arpl
fcmovnu
xlat
ret
int
movsl
inc
imul
push
scas
call
push
ret
add
stc
fisttpll
fisubs
cmpb
pop
arpl
lea
cmp
xchg
push
cmp
arpl
mov
fstpl
push
dec
movsb
daa
cmp
adc
jbe
inc
jnp
sarb
jno
in
xchg
popa
inc
popf
mov
mov
mov
insl
pop
pop
push
mov
aad
mov
and
fs
rcl
mov
jg
test
sub
adc
push
mov
clc
cmp
push
mov
xor
jl
icebp
mov
lcall
xchg
push
inc
and
clc
push
rcll
cmpsl
mov
sti
inc
adc
jg
cmpps
mov
cmc
orb
int
push
mov
ret
fcmovne
sti
popf
pop
and
test
jns
and
xor
jmp
push
std
and
pop
push
adc
mov
aas
pop
and
or
stc
pop
les
pop
jns,pn
inc
in
or
push
inc
ret
in
lret
or
int3
imul
jle
xlat
outsl
fsubrl
jp
jb
pop
add
or
loopne
mov
sub
cwtl
clc
push
adc
cmp
xor
stos
dec
cld
mov
test
out
loop
add
or
jb
setae
mov
in
mov
je
cwtl
jno
data16
dec
fldt
pop
add
jmp
lcall
out
fistl
add
ljmp
mov
aas
add
cmp
push
jne
je
cmp
mov
pusha
mov
push
mov
jb
fldt
add
leave
cwtl
sub
push
dec
inc
and
xor
inc
xchg
sub
enter
sub
push
pop
test
mov
xchg
sbb
lods
add
outsb
dec
leave
and
add
mov
les
shll
jp
cld
das
jbe
scas
inc
add
pop
mov
mov
push
ja
das
and
nop
test
and
push
mov
std
mov
cltd
insb
outsb
push
arpl
push
mov
in
into
enter
jb
dec
inc
adc
sbb
mov
mov
sbb
mov
mov
cmpb
dec
dec
pop
sahf
iret
shll
fidivs
fsubl
pop
fisubl
and
add
dec
mulb
call
add
pop
dec
je
cli
icebp
fadds
inc
lods
add
cs
cmp
mov
es
aad
sub
test
in
cmp
stos
mov
outsl
jecxz
call
mov
cs
mov
dec
leave
add
xchg
popf
popf
scas
add
pushf
les
test
lds
aam
xchg
iret
mov
gs
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
jmp
adc
cmp
ret
aam
mov
ja
ret
mov
and
lds
pop
mov
or
in
xchg
fnstenv
sarl
mov
cmp
clc
add
jmp
mov
insl
jno
lcall
fldcw
shl
push
out
inc
adc
push
add
call
or
xchg
cli
push
fists
push
or
lcall
sbb
stos
dec
add
movsl
mov
gs
sub
insb
jg
or
rol
xchg
sarb
add
lsl
into
push
pop
add
rorl
mov
sub
les
sahf
adc
dec
insl
aad
test
mov
mov
loopne
cmp
sub
pop
pop
adc
pop
sbb
imul
sub
in
test
inc
xor
adc
dec
sti
mov
jge
push
call
mov
arpl
lods
push
push
in
fsubl
cmp
xchg
lea
cltd
pop
or
mov
outsb
mov
push
mov
outsl
sub
shlb
mov
mov
lods
pop
dec
in
repz
pop
out
cmp
test
sub
out
test
testb
stc
sub
std
out
xor
icebp
pop
or
pushf
add
lea
repz
jns
mov
pop
and
fildl
push
out
in
mov
inc
ja
std
shlb
es
mov
add
in
in
out
xor
add
loop
mov
jb
fidivs
dec
scas
or
dec
repz
fldl
addb
push
lds
imul
sub
aam
sbb
mov
xchg
or
cmpsl
fstpt
test
dec
xchg
push
sub
sbb
cmc
and
push
loop
imul
push
mov
roll
pop
arpl
push
mov
inc
out
imul
mov
pop
cmc
sub
sti
lods
adc
lret
hlt
stos
mov
push
add
mov
outsb
test
cmp
mov
leave
pop
int3
add
adc
mov
adc
sbb
vcomiss
movsl
movsb
mov
outsl
mov
sub
mov
gs
rep
bound
sbb
mov
clc
mov
inc
push
push
lret
pop
pop
jns
mov
and
sub
pop
out
das
outsl
fmuls
repz
outsl
into
xchg
xchg
jno
pop
inc
pop
cmp
fnstenv
inc
leave
ds
inc
cld
push
mov
out
in
std
sub
cmp
push
pop
mov
sbb
mov
out
xlat
ds
xchg
adc
push
mov
iret
jne
lcall
push
mov
pop
mov
push
out
fldcw
out
inc
xchg
mov
inc
loope
mov
adc
cmpsl
ret
dec
imul
xchg
and
ficoml
and
jp
mov
fstpl
cld
xchg
jbe
popa
push
cltd
or
mov
imul
into
imul
xor
bound
jl
xlat
xchg
fists
shll
sahf
in
aaa
xchg
std
cmpsb
cmp
lods
sahf
in
gs
cmp
xchg
push
jle
jmp
imul
jnp
movsb
fcoms
test
test
pop
mov
test
scas
and
inc
cmp
es
inc
aaa
sbb
dec
sti
insb
cli
outsb
mov
enter
push
mov
inc
add
xchg
inc
jnp
mov
loop
mov
xor
push
xchg
cmpb
adc
pop
test
mov
push
adc
jle
fidivrs
or
dec
nop
in
scas
sub
cmp
dec
mov
or
push
scas
movsl
in
push
movsb
scas
dec
mov
pop
ljmp
jo
in
test
out
pushl
lock
push
mov
push
dec
xchg
fwait
push
xchg
test
outsl
daa
push
add
in
and
subl
mov
push
xor
repz
sbb
in
add
lea
rolb
fcoms
sahf
cltd
mov
inc
repz
add
cmpl
stos
add
and
cmp
rorb
mov
hlt
xchg
into
jge,pn
leave
sub
jmp
jo
sti
cmp
mov
jg
xchg
dec
xchg
outsb
fadds
lret
cltd
orl
cmpb
scas
hlt
out
jno
cmp
and
ret
sbb
pop
inc
jno
scas
xor
lret
mov
imul
dec
jns
mov
pop
movsl
popa
imul
into
and
inc
je
dec
rep
in
rcrb
and
cmc
mov
cli
push
push
dec
stos
add
imul
push
cwtl
jo
loop
test
insl
loop
sahf
jle
sub
dec
mov
jge
fistps
call
xor
dec
jge
js
sti
jg
ss
rolb
les
dec
dec
into
or
mov
jno,pn
aas
in
sbb
jmp
loop
ljmp
adc
ljmp
movsl
fstl
push
sub
push
inc
jecxz
dec
xchg
push
hlt
dec
or
xchg
jmp
es
lods
xchg
repnz
mov
in
pop
shrl
sub
jecxz
jb
xchg
daa
scas
in
rolb
call
rolb
lret
mov
in
std
fsubrs
icebp
leave
or
mov
es
adc
mov
shl
xor
dec
pop
or
adc
repnz
mov
scas
and
mov
andb
xlat
negb
ja
or
idiv
aad
sbb
sti
in
jge
push
sbbb
aas
jbe
lds
and
insb
xor
adc
imul
xchg
out
or
push
xchg
or
jnp
pushf
fdivrs
cs
cmpsl
dec
or
aas
mov
lret
js
ljmp
add
fisubrs
add
fnstcw
imul
arpl
add
xor
lock
icebp
sbb
jno
cld
loope
dec
dec
sub
inc
push
pop
xor
movl
sbb
idiv
push
loope
sub
xchg
xchg
std
push
dec
fisttpl
outsl
cmp
mov
xor
and
cmc
add
jecxz
ret
inc
pusha
xchg
lahf
add
or
xor
outsl
dec
push
ljmp
rcr
arpl
ja
daa
es
add
fnstcw
popa
lcall
adc
inc
dec
mov
lea
test
in
aaa
push
push
sbb
lret
dec
jecxz
and
loopne
inc
mov
cld
push
js
lahf
ret
out
sbb
shlb
sti
mov
test
aad
ja
mov
hlt
std
xchg
dec
mov
lods
xorb
cmp
lods
nop
xor
test
cmc
mov
push
jb
add
or
mov
fs
rolb
outsb
xor
insb
loopne
mov
push
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
jmp
sbb
and
enter
push
add
sbb
push
xor
xor
leave
testb
je
ds
sbb
addl
lea
cmpsb
and
mov
popf
jo
xchg
and
lret
push
xchg
in
daa
and
push
ss
in
and
pop
pop
dec
imul
add
lods
add
pop
push
or
ret
push
xlat
jno
bound
and
adc
outsb
repnz
sbb
icebp
jle
xchg
jp
and
and
sub
inc
cmc
loopne
cwtl
in
mov
ret
sarb
jno
add
sub
sbb
cmpsl
mov
add
jno
xlat
insb
push
push
mov
lcall
icebp
jg
cmp
fmul
fsubr
sbb
mov
xor
mov
xchg
outsl
out
jne
or
mov
daa
jnp
push
xor
adc
fs
shll
jp
loop
ret
and
jl
mov
pop
add
insb
add
xor
mov
in
xor
sahf
jne
movsb
mov
lea
mov
mov
loop
pop
sahf
and
sbb
mov
mov
lahf
cmc
fcoms
dec
xchg
iret
test
enter
movsl
adc
lret
shll
add
ror
dec
fdivl
pushf
sub
sbbb
jo
add
dec
add
mov
and
aaa
sub
xchg
cltd
shll
and
aaa
sub
jp
imul
xchg
je
push
int3
jbe
test
ss
icebp
sub
sbb
jg
inc
lea
jne
ds
mov
push
sahf
xchg
imul
adc
std
mov
clc
ja
push
jl
notl
cli
inc
and
ljmp
dec
lea
xor
dec
inc
fwait
pop
mov
jnp
add
lods
push
mov
loope
and
pop
lock
enter
push
loope
jns
dec
add
dec
and
test
cld
arpl
dec
scas
loope
adc
or
mov
xchg
sbb
sbb
scas
add
shl
ds
sti
les
lret
jl
mov
arpl
sub
cmp
push
sbb
ret
mov
adc
addr16
lock
lea
lock
sbb
pop
mov
dec
sub
mov
sbb
out
dec
and
movb
pop
and
filds
mov
jl
jp
mov
cmpsl
adc
enter
sbb
pop
insl
adc
lods
loop
xor
call
cmpxchg
xchg
into
mov
lock
inc
fimull
int3
dec
jo
jne
adc
inc
in
pusha
orb
cmpsb
push
in
out
ficoml
stos
ss
jmp
jae
sbb
lahf
sub
add
mov
outsl
shlb
nop
mov
mov
or
mull
test
mov
or
pop
cli
loop
mov
loop
adc
mov
add
or
or
mov
pushf
dec
adc
nop
lret
popf
test
out
stos
call
js
jg
int3
lods
sub
lds
sahf
and
movsl
adc
ss
imul
scas
cmpsb
leave
je
ljmp
lret
scas
int
test
push
mov
and
jp
adc
aad
ret
loopne
repnz
popf
ret
jns
inc
fsubs
insb
pop
repnz
lods
adc
cmpsb
cmp
in
pop
loopne
pop
hlt
fstpl
outsb
popf
jnp
aas
xor
pop
adc
cwtl
adc
cmpl
mov
ja
cwtl
jl
xor
dec
call
xchg
xchg
pop
fbld
test
mov
sub
jle
jns
sbb
aam
lcall
insl
cmc
pop
inc
in
jl
push
fadds
rcrl
mov
rcrl
mov
sbb
push
ret
lods
xor
and
mov
and
pop
sbb
stc
in
xchg
stos
or
or
rcrl
adc
lea
in
jp
jo
push
push
cmp
in
std
aam
mov
jb
jnp
imul
lods
in
outsb
clc
mov
cmp
dec
pusha
inc
test
outsb
out
add
negb
and
call
fcmovnb
nop
jae
jns
jb
fsubrl
mov
bound
xchg
popa
mov
data16
arpl
movsl
jb,pt
or
and
jne
xchg
aam
adc
dec
add
sbb
addb
insb
push
ds
jnp
lea
mov
sahf
mov
test
push
shl
mov
xor
adc
xchg
dec
mov
rol
std
stc
push
or
pop
fists
int
xchg
push
das
mov
xchg
nop
dec
sti
mov
popf
push
daa
lods
inc
jns
push
outsb
test
addr16
mov
mov
mov
aas
and
fstpt
out
cmp
cmp
pop
aam
stos
mov
enter
aaa
or
sbb
mov
push
jg
ret
lea
or
or
call
ja
jge
into
sti
or
loopne
adc
in
mov
jo
scas
sbb
inc
push
cld
stc
pop
cmpb
movsb
stc
sti
in
movsl
pop
cmp
fimuls
in
cmpsb
or
stos
sub
mov
lds
adc
sub
inc
cli
arpl
mov
scas
sub
sub
mov
mov
and
int3
pushf
das
push
push
cmp
adc
lods
and
or
pop
sub
sbb
dec
imul
aaa
data16
jmp
cmp
push
mov
jg
dec
imul
push
cmpsb
clc
test
mov
shll
jnp
aas
dec
sahf
lock
sbb
jnp
leave
cli
cmc
sbb
fistps
sbb
rcr
pop
repnz
push
repz
faddl
std
dec
ret
in
aad
lret
jp
fistl
jmp
aaa
jl,pt
cmpsl
ret
pushf
popl
ds
cmp
mov
or
shrb
out
mov
shll
sub
stos
test
push
add
int3
xchg
or
dec
or
add
ljmp
imul
in
jns
sahf
das
cmp
jmp
push
out
loop
outsl
repnz
shll
das
cs
push
xchg
jl
insb
xor
test
adc
shl
adc
xchg
xchg
and
repz
xor
cld
stos
stc
push
xor
adc
movsl
stos
cmp
ss
mov
dec
daa
adc
inc
leave
push
sub
add
int3
fwait
dec
movsb
push
jo
and
adc
and
int3
outsb
inc
xchg
sbb
xor
sub
jae
push
mov
rclb
ds
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
jmp
sti
test
sbbl
lcall
add
sti
mov
leave
adc
repz
in
popa
orl
adc
pusha
pop
outsb
cmpsl
xor
jmp
std
cmp
mov
push
add
pop
ds
mov
adc
cs
nop
loopne
aaa
pop
xchg
addr16
loop
xor
add
das
dec
pop
adc
xchg
arpl
loopne
xor
shrl
mov
mov
mov
cs
sbb
jp
outsl
clc
in
hlt
sbb
pop
push
xchg
dec
pop
out
js
xor
pop
mov
mov
push
mov
test
push
xor
mov
and
push
cmp
fs
ds
add
loopne
or
xchg
cmpsb
sbb
and
jbe
pop
dec
xor
sar
and
jns
int3
xor
imul
push
jnp
mov
out
push
mov
mov
cli
popa
andb
sbb
aas
jle
pushw
mov
cmp
mov
mov
addl
inc
jb
aaa
inc
sbb
adc
fcmovu
insb
sbb
das
imul
inc
iret
jnp
aam
js
out
jg
xor
idivb
adc
push
push
ficompl
aad
shlb
outsb
adc
rorb
leave
aas
mov
sbb
jecxz
cmpsb
pop
movsl
cmovp
pushf
in
std
cwtl
call
hlt
cli
pop
enter
xchg
cld
pop
adc
jl
setg
jne
mov
and
xor
fiadds
mov
ret
push
add
daa
inc
lret
and
idivb
push
jnp
add
lock
push
xchg
mov
inc
mov
movsb
insl
or
inc
push
out
lcall
jge
add
cmp
mov
mov
orl
and
movsb
mov
mov
inc
cs
pusha
pop
push
mov
ljmp
xor
jno
inc
in
dec
test
outsl
xor
push
and
add
stc
stc
es
inc
mov
fwait
stos
cmpsb
lock
lea
mov
mov
loop
pop
sbb
icebp
or
xchg
sbb
jmp
jne
mov
mov
jns
pushf
lock
cwtl
mov
dec
jns
in
adc
pop
dec
cmp
in
in
push
sbb
je
nop
call
outsl
jno
and
xchg
xchg
aam
xorb
out
outsl
mov
adc
pop
mov
adc
mov
push
jle
addr16
mov
fcmovnb
push
fwait
add
xchg
push
data16
je
xchg
loop
insb
jbe
out
xchg
xor
push
jg
adc
adc
leave
inc
lahf
stos
jge,pn
testl
mov
push
sti
or
mov
es
les
jmp
jle
in
mov
jae
nop
lods
popa
mov
ss
adc
aas
mov
push
adc
or
rcrb
add
hlt
mov
mov
or
cli
scas
cmp
or
icebp
push
mov
pop
cwtl
lock
lock
lea
pushf
sti
mov
push
push
ja
lds
out
sub
pop
es
arpl
sbb
lea
sahf
jbe
fwait
sub
dec
inc
sub
and
jbe
inc
jmp
sahf
push
cmp
add
pop
jbe
dec
ja
dec
jg
subl
cli
sarb
out
jg
mov
push
das
fstl
sbb
cwtl
add
fnsave
pop
cmpsb
dec
into
mov
cmp
xor
cs
cmp
mul
das
push
mov
push
mov
jle
jne
out
mov
js
in
rorb
mov
ja
push
pop
or
jno
arpl
sbb
mov
enter
int
and
mov
or
cld
xor
int3
outsl
adcl
mov
or
mov
push
aam
pop
imul
fildll
cmc
mov
jne
jecxz
sub
inc
xor
mov
sahf
xor
nop
subl
lahf
or
xchg
ficoms
mov
adc
xlat
outsb
pop
test
into
icebp
inc
movsl
cmp
outsb
cmpsl
nop
stc
mov
in
jp
add
mov
mov
jno
mov
push
cmpsl
xchg
adc
sub
inc
das
xchg
and
mov
cmpsl
push
ds
and
ss
pop
jge
push
fsubs
push
cmp
dec
xchg
mov
pop
adc
sti
mov
xchg
scas
out
xchg
int3
pop
inc
paddsw
add
dec
arpl
fld
push
lds
sahf
sbb
sbb
nop
mov
jmp
and
inc
sarl
inc
xchg
loope
mov
sahf
inc
cmp
sahf
dec
and
jge
sbb
test
loopne
xor
xchg
aam
loopne
dec
or
loope
enter
test
fcoms
stc
ret
sub
decb
movsb
jl
xchg
sbb
inc
jnp
inc
pop
test
mov
sub
iret
lret
xchg
adc
out
or
add
mov
test
or
mov
cltd
imulb
aas
enter
sub
fdivl
mov
xor
adc
flds
mov
rep
mov
shll
inc
and
fnstsw
adcb
clc
clc
loop
stos
xchg
bound
push
call
jmp
pop
dec
push
cltd
mov
insl
adc
inc
dec
dec
sahf
mov
ds
jg
dec
pop
dec
sub
mov
mov
mov
insb
mov
into
mov
mov
jl
rorb
jb
dec
mov
dec
scas
stos
jae
pop
fidivs
fcomp
imul
sti
cwtl
in
call
hlt
adc
mov
jbe
ljmp
call
lock
jb
cmp
adc
fwait
xor
fwait
sbb
lds
ss
pop
les
fs
pushf
xor
pop
mov
call
sbb
xor
xor
push
add
outsb
aad
and
outsl
and
shrb
xor
fs
jnp
dec
dec
pop
nop
and
rorl
mov
xor
add
test
inc
int
iret
out
movsb
loopne
repz
mov
mov
push
pop
xor
mov
mull
stc
arpl
pop
sub
rolb
mov
fs
cs
je
ds
movsb
mov
mov
or
or
jmp
or
pop
fisubs
xor
idivl
into
or
and
jb
add
cwtl
pop
lcall
pop
mov
fs
dec
fstps
in
mov
pop
rcl
dec
sub
sbb
mov
cltd
inc
insb
cs
loope
xor
mov
xchg
out
imul
lea
cmp
and
inc
adc
ja
sbb
push
inc
das
inc
adc
cli
in
sbb
aad
data16
lcall
das
lock
cmp
outsl
push
movsb
rolb
mov
lret
add
arpl
test
ljmp
inc
nop
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
jmp
nop
loope
pop
dec
gs
int
xlat
sub
lret
fadd
ja
ja
in
mov
rclb
xchg
js
jne
jle
cmp
fdivs
and
stc
les
hlt
loope
hlt
sbb
daa
mov
fmuls
scas
add
push
mov
mov
sub
dec
ret
mov
stos
arpl
add
push
mov
imul
dec
adc
movsb
popa
data16
push
jno
out
jmp
mov
sub
dec
mov
pop
fisttps
push
push
push
jne
mov
add
test
pop
stos
sub
cmp
sbb
sarl
cs
int
mov
inc
imul
and
pop
lods
pop
data16
loopne
pop
xor
jbe
in
sti
enter
or
cmp
fpatan
dec
push
bound
inc
flds
lds
std
lock
jge
sub
gs
loop
fistps
push
std
call
mov
sbb
lea
inc
sub
data16
mov
stos
popa
roll
test
pop
dec
aaa
mov
testb
xchg
in
arpl
mov
sub
ret
and
lock
insl
out
and
add
lcall
xor
cwtl
push
outsl
sti
movsb
test
push
pushf
lcall
int3
inc
cmpsb
add
mov
movsb
jecxz
mov
mov
mov
xor
js
cmp
xchg
das
repz
repz
cld
xor
push
adcb
lret
inc
xor
push
cmp
out
mov
jecxz
add
mov
xchg
push
insb
andl
inc
outsl
fstl
cli
push
xchg
idivl
pop
adcb
lock
cmp
and
jne
pushfw
xor
cmp
test
popf
adc
or
jle
loop
add
ja
dec
inc
rol
ljmp
dec
rorl
xor
xor
cwtl
adc
mov
mov
insb
push
sub
mov
das
cmp
xor
loope
inc
repnz
iret
les
and
iret
enter
aas
jg
inc
dec
popa
mov
mov
das
ds
push
pop
je
push
pop
cmp
sbb
dec
mov
outsl
add
ret
aad
push
movsl
int3
xor
aam
pop
xchg
mov
aam
enter
sub
jae
bound
push
push
jmp
push
movsb
sub
pop
push
jle
push
sbb
jmp
push
nop
bound
mov
or
or
mov
pop
pop
and
sbbl
inc
popa
and
hlt
insl
std
imul
push
push
imul
and
incl
sub
or
push
sbb
imul
dec
cmc
xchg
dec
iret
cmpsb
mov
cltd
fiaddl
scas
xchg
jb
clc
dec
icebp
popf
mov
inc
nop
and
cwtl
mov
std
mov
movsl
testl
lcall
mov
hlt
out
psubusw
arpl
addr16
and
cmpsb
test
xchg
lods
int
xchg
fs
pop
mov
nop
xchg
mov
adc
sub
mov
pusha
imul
xchg
imul
pop
fwait
data16
into
inc
mov
std
ret
aad
sbb
cld
lock
in
mov
sarb
inc
xchg
mov
adc
inc
movsl
mov
pusha
popa
or
jp
ret
xchg
idivl
dec
stos
ja
xor
fmull
xor
add
mov
inc
pusha
loop
push
out
jo
cmp
das
mov
pop
cmp
lock
xchg
and
inc
jnp
push
mov
cmp
jl
cmp
ret
data16
mov
xor
dec
imul
jge
mov
mov
movsl
gs
adc
jl
xchg
std
leave
rorl
in
ret
dec
and
mov
jae
adc
mov
std
mov
mov
incb
pop
pop
sub
aad
int3
sub
xor
leave
sub
mov
lcall
push
in
stos
add
fisubrl
popl
cmp
cmp
push
or
aad
pminsw
sarb
or
call
rclb
add
push
shlb
loopne
xchg
jp
and
xor
jecxz
sub
and
lock
xor
cs
call
out
aaa
fdivs
js
movsl
dec
aad
inc
and
aaa
cmp
fidivl
je
inc
push
fwait
insl
jnp
fs
jp
imul
sbb
int
dec
in
pop
cltd
mov
pop
add
enter
jge
jmp
mov
imul
mov
lret
push
mov
jg
adc
xchg
add
sbb
adc
ja
fidivrs
scas
std
pop
xlat
cmp
jbe
aas
lahf
fmuls
bound
cmc
mov
mov
sub
movsb
adc
mov
mov
cmp
rol
aaa
push
xchg
stos
push
inc
mov
xor
jge
into
push
push
je
jecxz
mov
mov
imul
out
pushf
fwait
xlat
inc
mov
mov
sbb
dec
notl
or
sahf
mov
and
lea
cmp
xor
sahf
and
jns
sub
cmp
jno
push
jmp
ret
pusha
sbb
or
out
xchg
sub
cmp
mov
test
pop
sti
shlb
ss
clc
mov
push
mov
call
mov
cltd
scas
dec
ljmp
inc
or
addr16
xor
push
push
jo
fdivrs
xchg
pusha
or
push
mov
push
xchg
cmp
ss
jo
lcall
and
pop
shrb
scas
sbb
pop
idivb
xchg
aam
adc
xor
test
int
pop
xchg
pop
xor
movb
adc
pushl
and
jns
push
jle
pop
stos
mov
pop
in
cli
xor
imul
xor
lea
repnz
mov
cmp
aam
stos
sbb
stos
xchg
repnz
in
pop
stc
cmp
push
and
dec
mov
sbb
outsl
das
xchg
dec
add
pop
testl
jno
xchg
inc
dec
adc
movsl
adc
or
call
or
and
push
inc
inc
xlat
pop
hlt
sub
out
pand
pop
hlt
mov
decb
shlb
xchg
insl
mov
dec
push
fdivl
decl
ss
xchg
repnz
aaa
and
pop
or
pop
shll
pop
lahf
stc
repz
les
xor
ljmp
bound
adc
repnz
outsl
mov
aaa
and
test
push
cwtl
aad
mov
add
mov
xlat
jae
mov
adc
mov
lock
jno
add
scas
in
xchg
fdivl
jp
cmp
arpl
dec
stos
xchg
nop
add
inc
insb
push
add
xor
and
push
mov
xchg
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
jmp
dec
loope
lret
sbb
or
mov
adc
seta
imul
sbb
jge
call
mov
jp
mov
pushl
dec
out
push
mov
add
nop
dec
cmp
fnstcw
out
add
and
in
jg
push
loop
ret
mov
aas
push
rclb
sbb
xchg
xlat
cmpsb
dec
rcrl
stc
int
aam
dec
hlt
sbb
shr
mov
pushf
inc
roll
inc
dec
mov
arpl
in
or
outsl
std
push
xor
inc
push
in
hlt
fst
lods
jle
leave
lds
mull
roll
rcll
mov
mov
popa
hlt
jbe
jg
jg
pushf
jb
call
lea
lret
out
xor
out
pop
cli
adc
mov
fdiv
sub
inc
test
mov
cmpsl
cli
push
push
xchg
lods
mov
xchg
push
mov
dec
pop
and
inc
in
jno
aas
pop
inc
xchg
mov
mull
sub
imul
xchg
mov
lods
jg
sbb
in
pop
js
leave
insb
pop
xor
dec
sub
cmc
lea
add
lods
leave
cs
je
clc
mov
cmpsb
xchg
aas
xchg
or
outsb
xchg
and
push
mov
loopne
and
or
and
xor
js
mov
lea
rcr
dec
es
xlat
mov
fsubrs
jmp
iret
adc
int3
pop
das
leave
test
vsqrtss
outsl
int
mov
js
xchg
xchg
xor
shll
outsb
jmp
aam
sbb
xor
adc
fwait
xorl
add
lods
inc
andb
std
icebp
shlb
and
add
add
and
or
dec
or
mov
aam
ret
adc
mov
std
xchg
xlat
pusha
stos
dec
shlb
jb
lock
jmp
sbbb
cmp
dec
sub
lock
jbe
bound
sub
xor
cmp
mov
and
add
dec
mov
adc
mov
pop
test
inc
add
push
add
test
jne
int
dec
adc
dec
out
aaa
xor
adc
bound
or
push
fs
jbe
mov
add
mov
mov
mov
sbb
adc
and
and
xchg
test
add
xlat
or
rclb
loope
ret
push
stc
stos
cltd
ss
fiadds
jnp
ds
cs
cltd
mov
popf
push
inc
sub
sub
pop
and
inc
outsl
mov
sub
cld
or
mov
imul
push
hlt
mov
fimuls
sahf
in
push
jne
loope
enter
mov
push
int3
icebp
dec
in
sbb
push
add
adc
cmp
icebp
inc
mov
jbe
dec
or
xor
push
sub
in
dec
pop
test
stos
mov
loope
icebp
push
pop
sbb
iret
mov
jl
mov
cwtl
or
shrl
jne
ficompl
push
sti
mov
add
insl
sub
or
mov
fcmovnb
lods
mov
mov
stos
mov
aaa
lret
scas
test
cmc
push
mov
lcall
jb
fisttps
xor
cmp
outsb
nop
test
aad
test
in
xchg
xor
inc
xlat
mov
push
cld
les
dec
movsl
cmp
lret
dec
addb
mov
jmp
loop
sbb
aad
mov
inc
inc
mov
insb
jge
sahf
pslld
lea
sbb
jp
movsb
push
mov
cmp
xor
pop
mov
and
push
xor
pusha
dec
push
xchg
sbb
pusha
xchg
mov
adc
jb
mov
push
loopne
mov
imull
sub
mov
sbb
ds
sub
pop
add
loopne
lods
jmp
or
jno
sub
push
jl
aad
xor
mov
es
lds
cli
inc
push
push
jge
clc
insl
dec
adc
cltd
les
stos
mov
adc
push
or
push
pop
xlat
jne
mov
mov
dec
push
outsb
xor
stos
into
xor
iret
rcl
jb
pop
mov
cltd
je
daa
or
test
fcompl
pop
push
inc
out
jbe
stos
hlt
cld
mov
and
lods
popf
push
cmp
cmp
or
adc
push
inc
dec
ret
add
cmp
sbb
push
add
das
mov
mov
mov
outsl
jbe
adc
mov
pop
sarl
mov
icebp
mov
lret
jo
push
xor
pop
sub
push
nop
imul
jo,pt
push
lock
subb
and
bound
add
in
sub
mov
enter
lock
lods
xchg
fs
pop
call
sub
imul
gs
push
call
mov
sahf
sahf
push
sbb
sbb
adc
mov
cmp
cmp
dec
lock
xchg
pop
fmuls
cltd
jl
mov
jp
sub
dec
fsincos
xlat
gs
push
enter
jno
fsubrs
int3
mov
es
stos
and
popf
sbb
cmpsl
pop
jle
mov
mov
fidivs
xchg
inc
shll
cmpsl
cmp
push
into
pop
pop
jae
sub
mov
dec
sbb
pop
cmpb
iret
stc
shll
scas
scas
int
lods
sbb
jl
inc
les
or
or
into
test
sbb
pop
mov
arpl
xchg
mov
addr16
or
inc
fstpl
sbbb
outsl
pop
fcmovbe
push
lahf
pop
je
lea
pop
adc
sbb
inc
or
fidivs
call
xchg
dec
cmp
inc
das
daa
add
mov
dec
push
mov
inc
in
repnz
ljmp
imulb
jo
xor
xor
xorb
loop
popa
lods
mov
add
orl
nop
fcompl
push
jecxz
inc
sbb
inc
shl
pop
sub
in
mov
das
and
test
aaa
rcl
and
add
sbb
jne
cli
scas
adc
xor
sbb
or
mov
inc
repz
gs
pop
pop
and
popa
sub
movsl
pop
popa
addr16
lcall
jnp
xchg
push
fistpl
and
lahf
push
push
inc
inc
add
sahf
inc
insl
fistpll
xchg
mov
arpl
add
cli
dec
xchg
dec
sub
rcll
mov
sbb
pop
jge
inc
pushf
inc
imul
loop
jo
dec
inc
sub
subl
shr
push
divps
xor
out
cmp
adcb
xlat
decb
lret
xor
fcompl
and
out
cld
fdivrs
or
scas
lret
xchg
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
jmp
cltd
push
in
sub
jno
loope
pushf
xchg
mov
vpcomd
jns
test
add
es
jb
insl
pop
stos
and
cltd
jge
fistpll
xor
popa
lods
out
pop
rcrb
jae
sbb
pop
mov
sub
rcl
repz
stos
les
pusha
lds
jne
pextrw
mov
jl
es
dec
mov
mov
imul
aas
and
push
fiaddl
add
add
mov
jge
xchg
mov
or
test
ja
lcall
sub
push
adc
adc
call
sti
and
pop
addr16
or
dec
lods
das
push
sub
outsl
xchg
call
cmp
out
xchg
sti
out
stos
xchg
push
aaa
sub
mov
mov
in
mov
sub
sbbb
rcr
movsb
adc
xchg
call
push
push
cmpl
je
and
cmp
int
pop
mov
test
jnp
call
mov
xor
mov
xor
jecxz
sbb
push
jne
add
lahf
fsts
lcall
lcall
inc
or
dec
mov
sub
add
in
jb
pop
das
cmp
xor
pop
test
cld
stos
ss
pushf
scas
pop
movsb
fstpt
int
mov
lahf
aam
dec
or
stos
lcall
adc
js
sti
mov
lods
movsb
jo
push
mov
xor
push
insl
xor
push
mov
test
cmp
sbb
pop
pop
ret
test
fwait
adc
fldcw
pop
xor
nop
in
fsubrs
fbstp
mov
sbb
arpl
ja
add
or
popf
bound
dec
push
inc
lret
mov
mov
int
outsb
inc
xchg
in
pop
loopne
outsl
testb
in
pop
jmp
ds
jg
jge
jns
fnstenv
mov
lahf
adc
ret
nop
roll
pop
jbe
enter
leave
xor
sub
mov
push
fs
jb
pop
fwait
sbb
xchg
sub
adc
fimuls
and
popa
pop
mov
bound
mov
iret
std
xor
cmp
xor
fsubs
jp
push
sarl
in
mov
jmp
mov
inc
mov
pop
cs
out
xchg
mov
mov
push
mov
daa
out
mov
sar
ret
aas
out
and
test
xorb
rorw
adc
xlat
iret
aad
adc
mov
cmp
inc
mov
in
insb
fnstsw
in
dec
pop
pop
mov
jae
pop
xchg
push
xchg
iret
or
movsl
xchg
aas
popa
and
sub
sbb
mov
jne
fs
inc
loop
movsl
addr16
cmpsl
rcl
es
pop
mov
outsb
cwtl
dec
xor
lods
jne
cmp
mov
ljmp
mov
ds
cmpsb
sub
add
fstl
and
or
sbb
mov
jl
mov
cli
or
push
ljmp
mov
pop
mov
pop
jmp
jl,pn
dec
cmp
adc
xchg
loopne
inc
enter
out
push
jne
insl
ret
das
jnp
sbb
xchg
add
xchg
mov
js
in
push
push
out
repz
xchg
add
icebp
xchg
cli
pop
push
cld
shlb
dec
push
push
arpl
dec
mov
das
and
stc
and
call
mov
push
addb
hlt
in
or
outsb
movb
add
pop
mov
inc
sub
cmp
aad
push
popa
cs
xchg
dec
das
mov
pop
pop
lret
ss
sbbb
stos
repnz
cmp
sub
je
loop
cmp
xchg
ret
sti
in
jp
cmc
adc
call
test
add
repz
cmc
arpl
inc
pop
outsb
gs
xor
adc
sbb
mov
cmp
aad
push
and
sahf
and
lods
adc
aad
and
pushf
ja
xorl
cmp
jge
orb
iret
loope
dec
mov
lea
bound
lret
aad
and
loopne
or
push
fldl
pop
lods
cmp
push
mov
fcomi
insl
inc
daa
lahf
add
jg
lds
into
lds
rep
cmp
fsubrl
mov
mov
pop
cmpsb
pop
pushf
lcall
adc
cmp
push
scas
nop
push
and
pop
negl
add
and
pop
mul
pusha
dec
outsl
jge
lahf
push
xchg
in
adcb
mov
lahf
pop
add
jg
fisubl
xchg
testl
dec
push
outsl
xor
orb
mov
sub
xchg
rolb
inc
push
rcrb
ds
pop
sbb
ficompl
ds
lock
adc
packsswb
mov
pop
stos
mov
push
mov
push
scas
pop
hlt
pop
cmpsl
add
push
repz
adc
cmp
xchg
das
jge
lock
fisubrl
jp
mov
data16
xchg
cwtl
or
lds
aam
nop
call
push
stc
sbb
jl
aam
aam
sub
push
sub
aas
cld
sub
xchg
cmp
ficoml
xchg
or
lahf
es
push
dec
and
xor
rorl
pop
inc
insb
imul
fdivrs
shrb
cmp
decb
rcr
sbb
test
mov
jmp
scas
inc
jb
sbb
sub
roll
jbe
sub
mov
dec
test
jns
pop
sub
sbb
mov
out
cli
jg
pop
mov
loop
adc
sbb
test
ja,pt
stc
std
imul
shll
sbb
pop
inc
test
xlat
rcrb
rcrl
add
ja
jo
subl
inc
fwait
push
fistps
mov
pop
push
xchg
cmc
test
jl
lods
jle
jne
or
int3
lret
mov
dec
iret
or
sbb
or
imul
pop
xchg
in
and
sbbb
sub
push
pushf
test
repz
addr16
std
jmp
jnp
pop
cld
pushf
sbb
lret
mov
adcb
jo
adc
and
sub
push
push
xchg
jb
mov
mov
jmp
dec
sbb
mov
leave
sub
and
mov
rorl
insb
mov
xlat
inc
jne
or
aaa
out
clc
mov
nop
ds
push
leave
ds
das
out
push
int3
lods
daa
js
sub
mov
mov
std
cmp
xchg
push
inc
cli
inc
outsl
push
adc
push
loop
xlat
jo
jg
mov
jecxz
int
into
mov
pushf
je
stos
fnsave
in
push
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
jmp
push
mov
adc
xchg
fwait
aam
pop
add
ja
mov
adc
sbb
pushf
pop
xchg
push
xchg
mov
jnp
pop
lods
jge
mov
dec
fldcw
inc
or
insl
negb
xor
fcmovne
inc
lock
mov
cmp
jne
roll
mov
cli
ljmp
sbbb
and
ja
jmp
bound
mov
clc
aad
lcall
mov
scas
sub
movsb
enter
and
and
fcmovnbe
cmc
jno
and
mov
add
cld
jge
sbb
stos
lcall
push
sbb
call
push
stos
push
imul
jnp
xchg
push
push
out
test
movl
unpckhps
out
ret
insl
mov
in
imul
enter
outsl
or
fwait
mov
cmp
test
js
dec
pop
push
mov
addr16
sahf
cmc
inc
mov
hlt
sbb
std
and
cmpsb
cmp
fwait
outsl
das
mov
push
movl
pop
andl
xchg
fdivl
pop
hlt
sub
jno
into
mov
mov
cmp
popa
mov
bound
push
lahf
pop
out
mov
adc
xchg
pop
xacquire
test
pop
mov
seto
xchg
dec
mov
xchg
xchg
jb
pop
sti
push
or
pop
out
push
sub
lret
adc
bound
dec
fbstp
ss
popl
mov
push
enter
lock
loop
aaa
mov
jl
xor
bound
dec
inc
loop
mov
adc
mov
fdivs
sbb
push
jbe
test
sub
data16
or
mov
jae
mov
inc
out
and
inc
dec
mov
mov
mov
outsl
pop
inc
adc
ret
aad
js
add
sub
xlat
aaa
gs
add
sbbb
jns
add
pop
ret
repz
jp
mov
hlt
incb
mov
ss
jmp
xchg
dec
push
jg
xor
das
pusha
xchg
push
pop
aaa
in
leave
xchg
hlt
mov
xor
cmc
mov
outsb
push
dec
jnp
jae
jae
pop
mov
cmpsb
xchg
push
insl
scas
sbb
loope
dec
rcll
imul
in
inc
pusha
mov
out
imul
pop
xchg
gs
xchg
jge
idiv
shrb
into
dec
out
sbb
pop
sub
fs
out
or
mov
jo
xor
sub
ljmp
in
dec
aad
pushf
sbb
lret
xchg
jnp
mov
sub
shl
scas
pop
xor
into
jl
dec
sbb
addr16
ljmp
xlat
pushf
pop
push
ret
jl
adc
sar
xor
sub
stos
add
popf
or
fisubs
pop
mov
bound
aas
inc
dec
ret
mov
sub
add
les
lret
pop
loopne
shrb
dec
and
and
sahf
clc
iret
arpl
xchg
sahf
push
sub
cltd
and
addr16
call
lret
scas
gs
in
popa
or
sti
push
or
sub
cli
daa
sub
fistl
in
out
xchg
in
xchg
ret
add
test
stos
xchg
faddl
repnz
mov
lods
imul
pop
popf
xchg
mov
push
sahf
loope
cld
out
enter
add
lds
outsl
cltd
les
div
fnop
loope
clc
mov
addr16
add
bound
sub
adc
arpl
adc
inc
lcall
movsb
lcall
mov
jnp
inc
cmc
sub
add
xor
out
or
sbb
loopne
or
sbb
mov
pop
jle
sbb
shl
sarl
jmp
mov
or
and
jnp
inc
shl
xor
scas
fdivr
xchg
dec
subl
pop
out
and
or
add
add
lea
mov
mov
mov
add
mov
cmp
sti
imul
add
mov
jmp
fdivl
out
mov
pop
push
push
inc
data16
dec
shrl
xor
movsb
mov
pop
out
jle
push
push
out
flds
push
jbe
out
or
fmul
xlat
jns
mov
xchg
pop
pop
jns
xchg
mov
pop
fidivrl
pop
test
xor
es
and
and
dec
inc
aad
jne
sub
sbb
sbb
dec
ss
out
cmp
xchg
add
xchg
repz
das
and
fistpl
dec
rolb
popf
mov
push
in
ds
pop
pop
imul
mov
mov
cmp
loopne
cmpl
fdivrl
jbe,pn
dec
das
lods
xchg
iret
ret
je
ljmp
and
lds
rclb
dec
fisubrl
xchg
mov
pop
xchg
jns
in
jne
inc
pop
adc
sbb
sahf
repz
data16
call
mov
popf
lock
or
sahf
loope
push
loop
sarl
jne
pop
in
mov
mov
int
push
iret
adc
mov
es
dec
xlat
mov
mov
inc
inc
or
xchg
and
loop
imull
push
mov
sbb
clc
jmp
or
in
pop
mov
or
push
pop
andl
aaa
lret
jecxz
testb
hlt
pop
mov
xchg
lret
aam
lods
scas
lret
fldenv
nop
scas
loope
cmpsb
daa
mov
stos
dec
sti
pop
inc
inc
xchg
fdivrs
xchg
and
mov
jecxz
pop
xor
clc
mov
cld
dec
scas
and
mov
lret
pop
inc
xor
les
dec
push
stc
out
mov
and
inc
mov
adc
push
push
in
icebp
inc
mov
movsb
into
sub
aad
out
mov
push
add
mov
pop
lcall
ja
xchg
hlt
mov
cmp
pop
out
es
test
jbe
or
shrl
cmpsl
out
popa
in
rcrb
jo
mov
jne
pop
pop
pop
xchg
or
mov
inc
lock
sub
push
int
mov
int3
in
scas
fisubrs
andb
adc
jae
data16
in
bound
imul
faddl
ficomps
mov
mov
mov
jecxz
fmul
jmp
and
pushf
push
jne
push
in
rolb
sbb
xchg
dec
mov
push
repz
inc
pop
inc
in
movsb
fildl
pop
mov
stos
mov
push
jp
fldz
scas
mov
out
movsb
ret
mov
into
loope
mov
insb
aaa
stos
addr16
inc
or
out
inc
dec
fldl
inc
std
mov
in
repnz
in
test
xor
fiadds
out
pop
pusha
mov
sbb
test
jmp
cmp
adc
mov
test
xchg
repz
xchg
jg
dec
push
out
rorl
fs
mov
in
int3
ret
hlt
cmpl
pop
in
ret
lods
clc
sbb
xchg
in
add
sbb
lea
sbb
push
lret
fbld
cmc
mov
sub
loop
push
addb
repnz
sbb
loope
fnstcw
into
testb
pop
or
jg
jne
mov
lods
ljmp
cmc
cltd
push
mov
inc
jecxz
xchg
jl
jp
std
push
mov
push
mov
mov
jl
dec
jae
mov
mov
hlt
mov
fsubrs
push
jg
fwait
test
stc
pop
out
les
push
fstps
mov
aam
sub
xchg
cwtl
ret
adc
inc
push
or
lret
repnz
mov
popf
pusha
mov
loopne
lds
ss
jns
cmp
xchg
pop
in
mov
pop
imul
imul
shl
ljmp
outsl
popf
fnsetpm(287
mov
movsl
aam
add
jns
pop
into
incb
inc
xor
lcall
pop
xor
jge
cwtl
bound
cmp
les
mov
aam
ja
clc
adc
pop
push
dec
adc
shrb
cmp
movsb
dec
xchg
xchg
xchg
sub
add
loop
dec
adc
outsb
data16
fisttpll
repnz
inc
jmp
adc
or
mov
lret
add
push
lret
dec
rcl
enter
sub
movsl
cmp
or
fldenv
fcomps
orl
rclb
xor
inc
cwtl
jmp
jp
mov
adc
ljmp
fwait
add
jle
add
cmc
mov
add
mov
outsl
sbb
push
movsl
out
mov
dec
sub
push
es
aad
sbb
jae
adc
and
jmp
je
cmp
mov
cmp
es
sbb
xor
mov
xor
pushf
aam
sub
mov
lret
jle
aad
shrb
inc
out
addr16
jge
in
in
pop
aam
pop
jmp
scas
inc
inc
sbb
lret
out
js
mov
stos
or
pop
jge
jg
js
repnz
xchg
mov
and
jp
aas
ret
cmp
jae
in
sub
mov
inc
xchg
push
imul
movsl
and
jp
lock
sbb
fstl
int
pop
add
ficoml
stos
jp
inc
xor
in
xchg
inc
out
sub
or
push
sub
and
nop
dec
rol
pop
mov
mov
rep
mov
cli
jle
mov
mov
lods
nop
xchg
rcr
push
mov
xchg
jns
push
cmp
xor
jns
stos
jp
out
leave
sub
xchg
xlat
in
js
xor
popa
ds
push
dec
femms
sarl
xchg
adc
jl
xchg
xor
arpl
and
add
imul
pop
lret
xor
aad
outsb
add
mov
inc
movsl
cmpsl
and
mov
and
es
pop
mov
cmp
jmp
inc
ja
pop
jmp
rolb
mov
lret
out
divl
push
push
pop
bound
insl
nop
pop
mov
push
cmpsb
or
imul
or
sbb
test
mov
shrb
push
adc
pop
fisttpl
outsb
movsb
hlt
in
loope
dec
xor
iret
enter
iret
insb
push
push
jg
push
and
popa
loopne
or
mov
cmpsb
enter
mov
hlt
in
lods
jne
push
sub
loop
sbb
cwtl
dec
jb
cmp
cmp
movsl
loope
fwait
imul
add
fwait
pop
cmp
mov
mov
add
ss
sbb
mov
pushf
sub
loop
push
lret
xchg
pop
insl
xchg
sahf
sub
sbb
mov
addl
pop
testl
pushf
or
jno
pop
popf
test
cmp
fldt
pslld
pop
adc
pmulhuw
sub
pusha
jl
mov
dec
and
lock
sti
mov
call
xchg
aas
das
in
sbb
mov
sub
call
movsb
hlt
lods
cmp
rcrl
sub
loope
insl
mov
mov
insb
dec
inc
jbe
cltd
cltd
ret
pop
rcll
xchg
sub
cmp
mov
arpl
lds
out
inc
nop
cmp
mov
sbb
add
sti
inc
dec
ror
lock
and
mov
mov
ja
test
pop
cwtl
pop
lahf
enter
scas
pop
js
rcll
in
lods
test
loopne
cmp
sub
mov
push
mov
lret
sti
inc
dec
mov
lds
mov
cmp
iret
jns
fcmovu
lret
cmpsl
pusha
add
fsub
xor
or
mov
ret
xchg
push
lahf
jne
jne
sub
sub
jb
sbb
push
xlat
mov
fdivr
sarl
add
mov
lods
in
daa
or
aaa
daa
sub
mov
mov
push
test
iret
sbb
adc
inc
or
ds
sub
mov
push
je
pop
pop
shr
loop
adc
scas
mov
lds
dec
or
rcr
sub
add
xchg
or
sub
popa
adc
hlt
xchg
cmp
dec
mov
add
mov
dec
js
jg
sbb
testl
mov
xchg
dec
fwait
insl
pop
loope
xor
push
or
mov
stos
out
and
inc
imul
aam
dec
stos
or
mov
dec
aaa
mov
push
pushf
fidivl
mov
ret
push
ret
ljmp
dec
xchg
jg
frstor
push
cmc
jmp
adc
inc
push
fisttps
and
mov
pop
and
clc
sub
scas
mov
dec
dec
pop
pop
mov
jne
mov
ret
imul
ljmp
xor
xchg
je
das
xor
push
pop
jae
iret
mov
sbb
cmp
jno
add
nop
sbbb
dec
lea
cmpsl
sbb
mov
push
xor
insb
push
dec
leave
out
sbbl
or
andb
mov
and
subb
aam
test
lods
lcall
imul
add
cs
xor
lock
clc
push
mov
mov
push
roll
iret
mov
ret
or
inc
jmp
or
faddl
inc
in
fcom
jmp
and
lahf
in
mov
fs
inc
lods
test
xor
xorb
lcall
inc
add
and
movsl
ret
add
jge
cmp
pushl
lahf
out
stos
mov
push
ds
cli
aas
cmc
xchg
sub
xchg
pop
sub
stos
pop
stos
es
mov
and
rclb
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
jmp
cmpsl
icebp
cmp
pop
dec
arpl
xor
adc
xchg
add
sbb
inc
sbb
loop
or
mov
pop
out
aaa
push
mov
mov
pop
and
in
sahf
mov
fcmovnbe
lcall
fcoml
mov
in
cmp
dec
lret
in
adc
orb
pop
pop
insl
adc
mov
jmp
lds
or
add
ja
jns
sarl
xor
push
repz
pop
daa
je
ja
in
mov
sbb
inc
jl
call
or
in
sbb
pop
cmp
imull
mov
pushf
pop
lods
or
test
iret
loope
adc
push
push
in
popw
setne
pop
push
add
and
rcr
jnp
pop
dec
pop
pop
or
jmp
sub
xchg
lcall
jbe
pop
xchg
mov
mov
xchg
sub
scas
pop
in
mov
mov
mov
jmp
xchg
add
lods
pop
insb
outsl
mov
repz
dec
xor
incl
jbe
sbb
inc
cmc
xchg
dec
adc
dec
inc
and
jge
sub
pop
mov
testl
jno
leave
mov
int3
fmul
cmpsb
mov
into
test
aas
pop
and
lods
into
mov
cmp
cmp
mov
pusha
mov
test
cmp
inc
clc
cld
adc
ds
or
les
test
push
mov
fs
ss
jmp
test
rcrb
mull
ror
rcr
sub
sahf
mov
mov
or
test
jo
adc
hlt
lret
mull
loop
jae
push
or
sbb
or
dec
les
sahf
mov
arpl
adc
jno
outsl
sub
nop
jl
dec
push
pop
ret
cmpl
cmpsl
test
jnp
cmpsl
repnz
jg
mov
in
mov
fidivrs
ss
mov
adc
jno
dec
adc
push
aad
outsl
xbegin
div
adc
jbe
ja
mov
dec
lds
std
icebp
fs
push
movaps
sbb
cmp
push
outsl
cltd
bound
call
hlt
mov
aad
xlat
aas
xlat
sarl
icebp
mov
add
adc
insl
mov
adc
mov
lds
mov
add
outsl
fldcw
out
scas
negl
or
repz
mov
jb
scas
push
mov
cmp
and
ds
loope,pt
mov
add
es
pop
into
and
add
mov
push
sbb
in
sbb
cmp
fistpll
push
stos
stc
movsb
arpl
insl
inc
inc
dec
push
or
xchg
lods
ljmp
xlat
out
pusha
xchg
cmp
insl
cmp
lahf
xchg
mov
pop
sbb
fisubl
jns
bound
lahf
jb
cmpsb
fdivr
ret
cmp
js
xor
and
and
lcall
push
xor
int
dec
outsb
dec
aaa
clc
push
out
loope
and
fidivrs
loop
sub
lock
add
jae
scas
movsb
sub
pushf
cmp
bound
sarb
add
lods
push
bound
or
out
sbb
push
jb
test
adc
repz
mov
dec
cltd
into
dec
int
add
bound
outsl
nop
sbb
mov
stc
outsb
push
out
addb
adc
sub
cli
cmpsl
jp
or
add
push
add
addl
imul
insl
loop
lea
mov
push
xor
mov
xor
or
movsl
push
sbb
test
aam
cmp
je
ret
push
scas
mov
bound
xor
and
mov
repz
jb
or
cs
xchg
call
pop
divl
mov
bound
add
cmpsl
inc
repz
ljmp
inc
imul
sub
adc
int
loopne
rol
push
out
out
push
pop
sub
sahf
pop
inc
xlat
call
xor
xor
negb
mov
inc
pop
or
fisttps
inc
int
movsl
mov
jnp
fiadds
scas
push
cmp
fmull
mov
stos
mov
mov
add
and
clc
xor
mov
adc
int
ret
inc
fdivs
adc
roll
cwtl
sub
test
ror
pushf
mov
xorb
mov
stc
push
pop
icebp
or
movsb
push
stos
jne
sbb
ljmp
push
mov
stc
sub
sub
ret
frstor
jbe
sub
mov
sbb
lea
cmpsb
dec
jne
mov
xor
mov
clc
mov
fistpll
inc
and
leave
xchg
xchg
filds
jmp
xor
cmpsb
and
sbb
and
mov
or
adc
xor
ja
jno
decl
mov
cmc
nop
dec
in
and
in
pop
movb
dec
pop
lcall
inc
mov
mov
movsl
pop
adc
mov
jg
insb
inc
je
aad
pop
out
sub
lods
pop
cs
jae
in
notb
dec
xchg
or
imul
stc
into
or
and
ficomps
sub
xchg
mov
push
jns
lds
jecxz
mov
jbe
or
pop
es
cs
cmp
out
xchg
fdiv
xchg
inc
xchg
inc
in
sarb
ss
in
pop
mov
lret
fldl
dec
push
mov
xchg
arpl
shrl
rclb
les
push
xlat
hlt
in
adc
sbb
mov
xchg
sub
mov
andb
push
adc
adc
jb
xor
jecxz
dec
stos
std
cmp
mov
outsl
push
addb
dec
fs
jnp
pop
call
nop
jp
aas
inc
jb
cli
icebp
jns
sbb
xchg
cmp
lret
rcrl
fmull
sub
adc
ljmp
xor
push
adc
imul
xchg
jecxz
xor
mov
popf
xchg
jne
sub
shll
or
adc
mov
clc
inc
in
inc
xor
enter
jge
les
inc
xchg
and
lret
xchg
cltd
repnz
dec
pop
iret
sti
js
enter
mov
add
imul
jp
inc
outsl
jne
loope
test
xchg
add
sub
and
or
test
or
adc
push
push
loop
stc
pop
xchg
sbb
xor
sahf
lds
adc
in
jmp
sub
negb
mov
cmpsb
xchg
fucomip
jmp
rolb
push
or
adc
fcmovbe
test
psrlq
lods
mov
and
inc
ss
clc
cmp
shlb
mov
mov
pop
push
jo
dec
leave
ljmp
xchg
sbb
jmp
ljmp
sub
cmp
test
adc
xchg
stos
pop
orl
pop
and
mov
push
lods
decl
adc
and
add
and
into
shl
jb,pn
push
sub
das
push
fists
out
pop
faddl
xor
aaa
xor
inc
push
dec
adc
jne
jle
movsb
pop
adc
inc
inc
shll
xlat
sbb
and
int3
cmp
pop
adc
adc
and
fildl
jecxz
frstor
sbb
sarb
xor
lods
call
and
mov
jnp
xor
mov
cmc
fldenv
xorb
es
mov
cmp
inc
insl
das
xlat
sbb
push
lret
jle
std
hlt
lds
jbe
int
fdivs
mov
int3
cmc
sbb
out
loope
jnp
fiadds
inc
xchg
xchg
jle
iret
shrb
iret
push
ret
cld
push
subl
xor
push
fcmovb
into
cmpsb
in
push
xchg
pop
scas
pop
push
jbe
out
lahf
addr16
inc
je
mov
jp
jecxz
imul
scas
push
fs
or
push
mov
je
movsl
mov
lea
inc
test
jmp
cs
adc
add
pop
xchg
mov
xchg
mov
scas
mov
mov
xchg
inc
in
shll
test
lods
push
mov
adc
scas
xor
xchg
xor
inc
ja
cmpsb
xchg
push
pop
lods
cmp
pop
out
movsb
lods
inc
dec
inc
dec
daa
mov
clc
mov
xchg
imul
bound
movsb
leave
xchg
inc
fwait
insl
cld
mov
inc
mov
hlt
cwtl
popf
pop
cmp
bound
jmp
fdivrs
testb
inc
adc
out
and
jge
ret
xchg
lahf
test
push
push
add
push
inc
fisubrl
pop
sub
sub
jge
jns
loopne
inc
pop
into
jg
imul
in
xchg
xchg
sub
add
fmulp
jg
dec
mov
enter
xor
enter
outsl
lret
mov
or
aaa
insb
jl
dec
xlat
ljmp
jp
mov
and
push
popf
loopne
jbe
subl
and
je
mov
xor
or
sub
rcl
arpl
divb
mov
xchg
test
and
roll
and
cmp
fsubrl
shll
pop
add
lods
andl
fdivl
pop
rclb
add
lods
test
push
jg
aam
in
stc
out
shlb
in
stos
loope
mov
mov
pop
mov
mov
sahf
and
sbb
dec
adc
outsb
xor
sbb
fucomp
or
out
lea
mov
lds
in
push
mov
popl
sub
nop
cmp
or
mov
out
sub
dec
lods
push
insb
push
inc
add
sub
cmp
fsubrp
cli
cltd
lea
mov
mov
je
inc
mov
mov
mov
push
mov
xlat
mov
ds
loope
out
pop
test
mov
push
cmpsl
lods
call
inc
out
insb
std
mov
sbb
popa
push
pop
dec
mov
adc
cmc
arpl
mov
cmovnp
into
clc
pop
jecxz
movb
and
fists
lret
pop
lret
add
xchg
insb
into
pushf
dec
cmp
int
ss
mov
nop
sbb
and
in
push
add
dec
push
push
jg
je
mov
add
xor
mov
call
xchg
xchg
add
mov
imul
cmpsb
outsb
adc
aam
push
mov
fsubrs
adc
push
sub
adc
or
add
push
stos
sbb
and
sub
cwtl
add
mov
inc
fcomps
test
xlat
aas
sub
out
jg
cmp
dec
xor
dec
jg
insb
movsl
sbb
ljmpw
jne
in
xchg
cmp
mov
mov
pop
in
xchg
ds
pop
mov
push
in
aam
and
out
jg
je
mov
inc
arpl
std
std
mov
andb
pop
in
jl
pop
mov
loope
sbb
xchg
mov
push
fldt
out
test
jo
dec
mov
loope
stc
je
fmuls
jae
imul
jno
push
cmp
fwait
jno
arpl
dec
jge
mov
xlat
pushf
daa
loope
mov
lods
xchg
gs
and
dec
jbe
sarb
movsb
cmp
mov
cli
and
cltd
adc
dec
mov
sti
mov
dec
in
pop
mov
push
bswap
push
ja
cmpsb
movsb
mov
imul
and
mov
fldt
enter
in
add
push
xchg
sub
aam
mov
aam
mov
adc
in
add
pop
rorb
and
ja
and
in
sub
add
pop
data16
das
jge
pop
imul
push
push
lret
pop
adcl
adc
pop
or
or
inc
jl
lock
pusha
aad
out
ljmp
cmp
xchg
xchg
and
sahf
dec
or
jne
dec
mov
shrb
outsb
push
xor
je
fmull
push
dec
adc
bound
lea
outsb
cmp
inc
cli
push
jmp
loopne
cwtl
das
adc
push
pop
cmp
cmpb
or
lret
ror
test
rcrl
mov
loop
jnp
shlb
test
aam
insb
xchg
fisttpl
cs
xor
xchg
leave
sub
outsl
movsb
push
sbb
js
incl
popa
mov
cmpl
add
jns
add
and
push
pop
mov
pop
push
ret
sbb
sbb
jge
and
push
test
xchg
in
mov
mov
aas
adc
mov
insb
pop
xchg
repnz
adc
or
xor
jge
add
inc
xchg
sbb
ss
xchg
push
mov
adc
cmp
xlat
clc
mov
lret
mov
pop
mov
xchg
jo
or
pop
sbb
pop
xchg
adc
jne
jae
xor
sbb
or
ljmp
xchg
jle
insb
jge
stos
cmpsb
cmp
mov
cmp
jno
add
add
xchg
push
xchg
fisubs
pop
stos
cmc
xchg
xchg
cltd
ret
mov
push
adc
xchg
bound
push
push
pop
jmp
cltd
dec
sub
jbe
je
pop
je
mov
loope
insb
jne
repnz
les
push
lods
sub
push
lds
std
sub
cmp
sub
divb
out
fstpl
ret
out
mov
repz
jno
xchg
movsl
aad
ljmp
stos
mov
push
pushl
push
push
call
mov
jmp
push
rcrb
and
inc
outsb
xchg
rorl
aas
mov
xadd
leave
pusha
mov
xchg
aas
add
stc
pusha
mov
sbb
adc
fcomip
movsl
sub
add
std
mov
out
ret
loopne
pop
mov
das
dec
js
test
sbb
fdivl
dec
adc
out
pop
or
and
mov
jne
adc
cld
and
pop
jne
mov
mov
pop
jae
sahf
mov
mov
and
or
bound
xor
fidivrs
sub
lcall
arpl
push
call
dec
adc
iret
mov
push
dec
ret
ljmp
mov
out
pop
out
cmpsl
iret
adc
out
add
or
aam
out
scas
jnp
mov
mov
rcll
out
movl
push
call
mov
xor
scas
pushl
adc
cmp
mov
lahf
jbe
movsb
mov
in
stos
ljmp
shll
add
cmp
inc
cli
ret
lret
adc
xchg
inc
sub
xchg
lods
dec
movsb
mov
xor
fs
pop
xchg
mov
fsts
bound
mov
ljmp
sub
daa
jle
mov
xor
loope
or
jp
adc
rolb
or
daa
ret
dec
jle
lods
pop
xor
repz
push
addb
fisttpll
bound
add
leave
jb
rclb
stos
pop
push
movsl
pop
subb
mov
cmp
xor
out
push
mov
and
imul
lods
cmc
ja
cmp
fildl
cmp
lea
mov
leave
mov
mov
add
movsl
jnp
jp
xchg
cmpsb
fsubrl
andl
cmp
sahf
nop
push
rorl
cmp
scas
sbbb
push
or
push
mov
leave
or
mov
inc
xchg
cmpsb
adc
cmc
loop
js
stos
and
mov
outsb
cmp
xor
fildl
cmp
and
rcll
int3
xor
mov
and
iret
pmaddwd
int
push
dec
cmp
clc
or
fstp
or
cltd
call
and
xor
out
in
clc
mov
sahf
cli
int3
fwait
orl
dec
xchg
pop
sub
adc
xor
inc
jno
aad
jle
cmp
gs
push
cmpsb
or
jl
cli
sbbb
loopne
and
hlt
lret
scas
xor
out
cld
sub
orb
out
jbe
jecxz
and
scas
inc
jae
movsb
push
and
clc
sub
out
cs
pushf
pushf
fadd
aad
xchg
jle
lods
xchg
dec
movsb
dec
cmp
scas
sbbl
adcb
icebp
and
das
out
aas
or
rorl
int
add
cmp
push
mov
jnp
jo
or
push
pushf
cmc
adc
pop
xor
fucom
sub
hlt
pop
std
sub
pop
stc
scas
pop
mov
bound
xor
hlt
xor
pop
pop
pop
dec
sahf
mov
mov
fcoml
push
imul
cmp
add
pop
fmuls
ret
push
xor
push
inc
cli
or
dec
imul
and
mov
pushf
mov
loop
icebp
adc
sub
lret
fldenv
inc
push
daa
out
enterw
mov
cwtl
jmp
scas
ret
mov
xchg
outsb
je
lods
xchg
inc
push
push
jmp
aad
mov
lcall
jb
ficomps
rcrb
xor
pop
add
js
nop
jne
sub
pop
and
scas
mov
cmp
in
add
or
dec
stc
fbstp
sub
mov
jge
js
inc
jno
push
fs
int3
jg
cmp
jge
mov
ret
jno
mov
xchg
fidivrs
cmp
pop
adc
imul
jb
les
lods
rcll
fdivr
xchg
test
out
mov
mov
or
ffree
out
scas
in
adcl
mov
inc
stos
cmp
sub
mov
adc
adcb
ds
xor
sbb
jle
mov
fisubl
mov
mov
or
push
jbe
push
fldenv
inc
pop
or
or
enter
test
mov
jno
cmp
test
subb
sbb
inc
jns
imul
mov
push
popa
cmc
stos
test
adc
mulb
movsb
ficomps
mov
adc
push
mov
push
push
call
insb
aam
or
das
lods
xchg
adc
push
mov
jbe
addl
add
call
sbb
add
sbb
sbb
repz
adc
and
mov
int
xchg
loopne
mov
jle
cmpb
out
mov
xchg
mov
jnp
sarb
iret
shlb
or
or
in
mov
cmp
iret
xchg
aad
stos
std
xchg
adc
jnp
ds
mov
mov
shlb
dec
out
jle
mov
cmp
sub
addr16
sbb
add
add
add
push
inc
popf
bt
lcall
pop
push
or
push
mov
ja
or
sub
dec
xchg
das
sbb
sahf
dec
jl
add
scas
dec
mov
daa
inc
inc
in
adc
mov
push
in
ret
aam
adc
orl
loope
popa
fbld
jle
pop
setg
push
movsb
inc
pop
push
pusha
dec
sub
and
pushf
dec
inc
sub
xchg
add
cwtl
pushf
scas
and
in
int3
xlat
repnz
shrl
pop
fidivrs
pop
pop
sub
cmp
repnz
push
psubd
add
xchg
or
ret
jns
mov
add
inc
lcall
cmpsl
fs
push
push
fs
lcall
mov
fidivrl
imul
cmp
pop
es
fucomip
pop
sub
hlt
jno
mov
xchg
cmp
imul
das
inc
es
shl
sub
mov
test
lcall
mov
fstpl
mov
dec
mov
sub
dec
mov
stc
ljmp
lahf
mov
mov
push
ljmp
stc
adc
jne
and
or
insb
lods
insb
or
fldenv
sbb
das
int3
adc
out
jp
movsb
mov
ss
push
stc
fidivrs
inc
xchg
xlat
xchg
shrb
fcompl
loopne
mov
cltd
dec
add
push
dec
sub
ja
iret
repz
or
sbb
stos
decl
test
push
cli
sbb
xlat
sub
ljmp
adc
in
imul
mov
or
int
mov
shrd
shr
shr
jmp
imul
scas
sbb
xor
sub
dec
mov
adc
xchg
inc
push
fstl
mov
fidivl
in
sub
fcmovnb
sub
jp
pop
jbe
faddl
das
xchg
jmp
adc
pushf
cmp
lret
add
lds
int
cmp
xchg
mov
scas
pop
cli
in
int3
mov
sub
cs
stc
xchg
adc
lret
pop
xor
or
jae
arpl
les
jmp
faddl
xor
cmp
xchg
jno
inc
xchg
outsl
or
orl
scas
outsb
xchg
enter
mov
add
xlat
xor
cmpsb
movsl
mov
xchg
dec
dec
xchg
pop
into
fcmovnb
dec
dec
mov
and
ret
das
inc
scas
adc
lock
adc
adc
dec
pop
jnp
in
stos
push
fmull
lock
lahf
pop
adc
inc
cmp
and
repnz
add
stc
cs
jns
ds
aaa
and
int
mov
add
mov
das
repz
mov
in
test
sahf
mov
adc
xchg
cmp
mov
cli
add
lods
add
not
xchg
stc
mov
inc
insb
pushf
jmp
je
aad
movzbl
xor
les
in
popf
cwtl
cmovs
dec
stos
stos
dec
negb
test
ret
xchg
pop
cmc
int
lcall
movsb
jp
cmp
pop
pushf
xlat
pop
sbb
inc
outsl
xchg
or
and
rcr
xchg
sbb
sub
xor
in
mov
mov
fs
adc
test
xchg
mov
adc
sub
jbe
scas
arpl
cmp
je
inc
xchg
rcrb
fisubrs
daa
iret
or
mov
adc
cld
xor
lock
sbb
jne
mov
insb
inc
sbb
shl
in
test
jno
popf
push
in
sbb
stos
mov
shlb
xchg
jnp
nop
pop
add
sbb
jmp
mov
push
cmpsb
pop
inc
outsl
push
lods
aad
repz
ja
stc
bound
rcll
jmp
sbb
xchg
dec
add
jne
es
loop
in
or
xchg
xor
ffreep
lss
repnz
xchg
mov
icebp
mov
mov
enter
lcall
mov
sub
std
js
daa
ja
cmp
mov
and
xchg
stc
sbb
into
mov
lret
sub
lret
add
inc
jl
loop
iret
xchg
mov
fistpll
ja
mov
addr16
adc
es
xor
cmp
stos
inc
ljmp
scas
mov
sub
dec
mov
or
pop
and
adc
xor
jne
xlat
mov
push
out
lea
mov
cmp
movsl
gs
stos
into
sti
in
std
dec
scas
sbb
pop
xchg
jb
push
ss
ror
jle
xchg
clc
aam
in
cmp
cmp
jnp
sbb
jmp
jle
mov
daa
jae
mov
dec
out
call
add
cwtl
sbbl
xchg
mov
cld
arpl
cli
lcall
mov
mov
arpl
xchg
mov
sbb
cmp
popl
push
loopne
out
mov
mov
out
sbb
jne
jne
xor
pop
and
orb
mov
dec
sbb
or
fistpll
cld
jp
lret
pop
jbe
std
lea
mov
stos
lret
rcll
cs
out
add
fsubl
mov
jae
mov
repnz
scas
jecxz
jecxz
xor
mov
ss
add
stos
sahf
fidivrl
int
pop
pop
iret
adc
mov
pusha
lret
repnz
notl
mov
dec
mov
dec
xchg
imul
sbb
sub
cmpsb
ret
sbb
sub
testl
xchg
imul
test
into
dec
xchg
outsb
in
mov
push
cmpsb
sub
rol
xorb
lea
pop
lahf
int3
cmpsb
xchg
hlt
int3
mov
out
aas
and
sub
shrl
adc
scas
andb
aam
jmp
jg
ljmp
test
gs
mov
inc
lock
int3
loope
ljmp
mov
jbe
pop
or
jno
dec
sahf
mov
jnp
xor
dec
push
sbb
mov
mov
stc
jnp
dec
aaa
sub
xchg
aad
jno
sub
leave
mov
adc
inc
mov
stos
mov
and
jmp
and
lahf
stos
xlat
add
bound
call
xor
outsl
sbb
testl
push
xchg
mov
test
fbstp
shrl
xor
cmp
pop
and
in
lds
ja
aas
jb
and
out
dec
fdivrl
or
in
addr16
sbbb
and
mov
mov
ja
std
inc
sub
xchg
cmp
pop
xor
inc
mov
and
adc
jle
out
ret
lcall
jmp
enter
and
sbb
or
scas
call
int3
inc
mov
push
rcrl
and
shlb
and
xlat
and
stos
push
cltd
stc
jno
ds
and
sub
add
xchg
rclb
fsubr
loop
jb
sbb
popa
dec
push
in
mov
incl
or
push
dec
xchg
jg
adc
mov
daa
sub
push
jo
fbstp
xlat
and
mov
popf
mov
mov
mov
push
sub
inc
popl
pop
adc
xchg
cmpsb
and
ret
aad
imul
test
stc
xchg
jnp
jp
mov
lods
imul
xlat
js
fs
lcall
testl
cwtl
cmp
inc
lcall
pop
inc
jmp
sub
push
insl
cmp
cs
sbbb
adc
aas
test
dec
push
nop
mov
aam
ljmp
cmp
and
int3
mov
ja
add
jmp
js
add
jp
mov
mov
int3
dec
loopne
fwait
rorb
mov
cmp
test
cld
jae
lea
leave
ss
movsb
mov
sahf
cmp
mov
in
inc
xchg
inc
or
incb
lods
xorb
hlt
cmp
jl
cltd
cmp
in
mov
mov
inc
pop
repnz
or
test
mov
sbb
jne
lahf
mov
xor
add
xor
orb
and
mov
xlat
ds
xchg
jb
int3
mov
aas
movsb
loope
xor
sbb
mov
or
mov
xchg
sbb
mov
movsl
loope
loop
push
mov
test
addr16
mov
lcall
popa
pop
mov
lcall
cmp
mov
and
frstor
daa
and
ss
imul
xor
mov
mov
mov
push
push
jmp
push
xchg
stos
les
ret
test
adc
xchg
and
or
into
pop
mov
jnp
inc
xchg
aam
xchg
loopne
loope
fbstp
ds
mov
mov
popa
xchg
das
xor
outsb
popf
fsubl
lods
push
movl
test
call
push
sub
ret
adc
push
dec
dec
cmpsb
cld
in
dec
pop
jmp
xchg
xchg
orb
imul
and
ret
hlt
mov
mov
xor
rorl
ja
aas
lds
and
lods
pop
pop
cmp
addr16
sbb
sub
lret
xchg
cmpsb
out
out
cmp
dec
iret
mov
xchg
nop
adc
jns
fadds
inc
mov
arpl
fsts
lods
ds
xor
leave
fisttpll
mov
ret
xchg
dec
imul
imul
jno
and
pop
and
dec
add
movsl
stos
ficomps
lock
push
pop
cmc
pop
outsl
pushf
test
scas
lahf
out
push
and
outsb
jae
mov
push
rolb
xchg
imul
mov
xchg
jns
push
jb
push
cmpsl
mov
ljmp
and
xor
cwtl
mov
inc
jae
fstps
sahf
stos
cmpsl
das
push
xchg
in
mov
outsl
aaa
cmp
push
arpl
cmp
xchg
xchg
addb
mov
pop
jge
cmc
sbb
adc
adc
mulb
fs
mov
scas
mov
test
or
mov
cwtl
fcoms
shll
xor
cltd
js
push
and
sbb
mov
loope
stc
and
inc
or
xorl
scas
push
addr16
or
cmc
xor
ja
and
mov
inc
push
sub
cwtl
pop
cmp
push
bndldx
push
outsb
jg
add
es
dec
lret
push
push
push
gs
push
lahf
pop
in
les
dec
loop
popa
jb
xor
shlb
jp
outsb
dec
scas
or
stos
mov
fiadds
dec
cmp
js
inc
jne
sub
repz
jne
nop
popa
sbb
push
test
mov
fwait
mov
xor
fildl
fcomp
flds
pop
add
add
mov
xchg
mov
pushf
push
imul
jo
wbinvd
xadd
mov
pop
leave
lods
mov
lcall
lcall
ss
sbb
mov
xor
mov
in
out
or
mov
inc
push
dec
mov
mov
fstps
pop
and
iret
fwait
jne
mov
pop
rorb
lahf
mov
test
in
mov
xchg
mov
cmp
mov
inc
cmpsl
enter
jne
bnd
and
lods
push
aad
outsl
push
daa
dec
mov
mov
test
xchg
jmp
adc
cmc
rcl
push
in
outsb
dec
xlat
pop
add
dec
outsl
fiadds
cmp
xorl
mov
out
sahf
in
pop
xchg
mov
ss
aaa
pop
push
xchg
clc
cmp
inc
jge
sub
in
jmp
sbb
pop
add
jmp
into
lods
int3
stos
insl
inc
ret
mov
lock
adc
in
inc
lea
mov
ret
xchg
and
lods
add
mov
mov
sub
push
pop
jp
movsl
clc
out
inc
data16
mov
sbb
xchg
enter
xlat
shl
inc
pop
fcomps
cmp
sub
stc
mov
adc
pop
xor
push
incb
cld
clc
push
popf
cmp
lods
pop
aam
rorl
inc
mov
push
pop
dec
lods
iret
mov
jb
movsb
or
in
adc
sub
and
fwait
mov
fwait
dec
cmp
int3
cwtl
mov
mov
and
mov
pop
in
mulb
repz
popa
and
inc
in
out
stc
inc
dec
andps
pushf
mov
hlt
cltd
aas
gs
dec
fsubs
cs
std
push
cmc
inc
or
lret
sub
mov
jle
bnd
fisttpll
jp
xchg
pop
jmp
mov
lods
mov
sbb
std
adc
fwait
dec
mov
pop
inc
idiv
adc
pushf
jmp
repz
test
fs
fldl
dec
cmp
aad
mov
sbb
je
jp
and
imul
push
xchg
loopne
sub
lock
xlat
mov
or
pop
loope
stos
jo
fs
popa
fimuls
cli
bound
pop
dec
subb
push
lea
fnstsw
xchg
in
sbbb
mov
cltd
mov
xor
sahf
mov
and
mov
adc
test
sti
jp
test
dec
cmp
mov
xchg
mull
idivl
aas
inc
mov
addr16
jbe
mov
clc
jmp
pop
jae
outsb
sub
sbb
test
lds
or
pop
pusha
xchg
inc
cmp
sbb
or
jl
cld
hlt
add
mov
pop
sbb
aas
mov
jecxz
push
daa
xchg
mov
in
push
pop
dec
cwtl
xlat
jae
pop
andb
rclb
mov
sbb
xchg
or
out
cmp
cwtl
inc
into
fldcw
scas
mov
insb
int3
fisubrl
mov
leave
push
arpl
mov
sub
cltd
leave
dec
xchg
scas
xchg
iret
xchg
ret
sbb
sub
sahf
js
cmp
cmpsl
mov
shlb
cmp
test
sahf
in
insl
add
xchg
adc
pop
mov
add
aad
adc
pop
aaa
push
and
mov
mov
add
xchg
cwtl
idivb
aam
dec
lds
and
nop
push
inc
lea
sbb
dec
mov
sub
jmp
jge
mov
push
mov
jle
inc
fs
and
mov
or
addl
add
adc
int3
fs
fbld
xchg
jecxz
mov
aaa
xchg
add
xor
lahf
sahf
jecxz
adc
adc
push
test
cmp
xchg
ljmp
and
int3
fidivl
sbb
lahf
inc
cmp
push
inc
xchg
fwait
ret
in
je
or
inc
mov
sahf
outsl
pop
shll
jno
divl
and
arpl
mov
daa
movsb
sbb
sbb
aaa
dec
data16
mov
retw
jle
repnz
fimull
divb
sti
shll
inc
jge
mov
cmp
jmp
jp
xor
into
fs
mov
imul
in
js
mov
inc
out
aad
push
imul
add
mov
jne
daa
dec
push
in
mov
push
lret
xchg
nop
mov
mov
lea
add
jge
sti
dec
mov
mov
in
mov
push
out
aam
cld
js
pop
inc
mov
cmc
inc
push
sbb
inc
ljmp
int
xchg
dec
cmp
outsl
sbb
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
jmp
pop
jge
lds
hlt
inc
xchg
jl
enter
xchg
in
call
in
pusha
sarb
test
dec
cld
sub
int3
push
stos
cli
add
sbb
push
pusha
ffree
or
xchg
push
ljmp
cltd
push
dec
pop
pop
cmpsb
repnz
xor
fwait
jmp
sub
dec
or
inc
int
out
xlat
inc
lods
scas
push
ss
push
dec
inc
scas
aad
sub
fcmovnu
pop
sti
aad
shll
test
push
int3
mov
inc
mov
stc
cmc
sbb
add
xchg
xchg
mov
pop
or
popf
andl
ss
xlat
fwait
xchg
and
shl
and
cmp
cmc
push
adcl
push
sub
cli
add
mov
xor
int3
cmp
int
out
xchg
push
or
popa
lock
mov
std
cli
push
pop
shlb
xchg
sbb
pop
in
lock
fmul
ljmp
lods
shrb
push
dec
push
jo
add
jnp
mov
out
add
push
out
mov
inc
test
or
call
jbe
cltd
and
aam
xchg
sbb
mov
mov
fadds
clc
inc
loop
mov
pop
dec
inc
in
mov
pop
and
outsb
push
bound
mov
lret
pop
xor
stos
insl
repz
leave
xor
fists
cld
stos
stos
add
ja
pusha
insb
stc
and
ret
and
mov
pop
repnz
hlt
aaa
push
ja
jae
jo
sti
inc
push
and
insb
je
mov
shr
inc
rorb
lock
or
lret
cmp
jno
xchg
and
test
xchg
mov
lds
nop
xchg
imul
jg
movsb
idivb
mov
mov
sub
imul
insl
sub
mov
adc
push
jo
xorl
cmp
add
mov
sarl
fs
add
stos
in
fidivs
lods
xchg
dec
addr16
pop
insb
fcmovu
pop
add
pop
add
inc
js
cmp
sahf
shl
stos
cmp
push
aam
xor
adc
fisttps
pop
xor
sub
outsl
shlb
xchg
or
icebp
mov
loope
icebp
mov
push
test
rolb
fidivrl
adc
xchg
and
stos
call
jns
jnp
aas
fisttpl
mov
std
sarl
adc
aas
daa
cmp
adc
xchg
gs
aas
sbb
xchg
mov
dec
int
add
sbb
divb
push
push
sub
mov
movsb
clc
hlt
push
mov
popa
mov
jne
xor
test
push
cmp
lock
sbb
lahf
fs
lea
xor
mov
pusha
aam
jb
fdivrs
std
aas
mov
pop
addb
ja
sub
es
popf
mov
cmc
mov
inc
jle
jae
push
mov
push
pop
int
pop
inc
mov
dec
clc
push
adc
ja
add
mov
rcr
add
repnz
aam
jbe
cmp
cwtl
shl
shrb
cmp
jp
add
stos
jnp
mov
sub
andl
stc
push
inc
lock
rorb
push
jl
add
js
out
aam
mov
push
and
ss
adc
dec
lret
mov
add
fs
mov
pop
movsb
sub
sarb
mov
aad
mov
mov
and
mov
cmc
jp
out
mov
adc
or
bound
sbb
mov
mov
data16
roll
cltd
xchg
cmpsl
mov
push
pusha
inc
inc
mov
adc
inc
sti
lret
xchg
fistpl
push
mov
pop
lahf
lds
xor
and
stos
xchg
fs
in
es
push
es
or
mov
push
lods
daa
repnz
inc
mov
push
xor
pop
jl
lods
xchg
pushf
adc
dec
lret
test
loopne
imul
sub
jns
jle
dec
mov
outsl
xchg
mov
adc
adc
mov
jge
subb
dec
sub
adc
mov
ficoml
je
leave
out
sub
ficoms
mov
aam
mov
mov
cs
ss
jge
inc
gs
arpl
fucomip
mov
paddb
jo
mov
mov
loopne
fbld
imull
outsl
lret
mov
sbb
jns
shlb
ljmp
push
cmpsl
dec
or
sti
ffree
mov
and
and
fsub
mov
or
in
jnp
sbb
dec
inc
push
popf
mov
mov
adc
sub
ss
mov
mov
test
adc
inc
xchg
mov
mov
das
rol
inc
jo
fcoms
mov
inc
lret
jmp
sti
pop
adc
xchg
sub
xchg
mov
into
stc
sbb
loop
negl
push
ds
mov
cmp
subb
and
jo
aam
jno
push
aam
xor
mov
jecxz
pop
sbbl
mov
addr16
xlat
pop
dec
rcrl
mov
popf
pop
xor
pop
das
fnstenv
mov
and
or
sbbb
movsl
push
jle
mov
mov
lret
les
cmp
out
nop
imul
sub
mov
cmpsl
mov
pop
repz
lret
xchg
dec
jmp
jns
mov
int3
int3
adc
lahf
popa
and
int3
jp
mov
test
xchg
pop
in
sti
jmp
mov
sub
xor
push
jns
cli
dec
out
leave
push
lea
mov
mov
gs
ret
sbb
shlb
daa
mov
dec
or
mov
shl
pop
pusha
cmpl
mov
pop
in
jecxz
xor
mov
ljmp
cltd
dec
mov
ret
add
repz
and
mov
add
hlt
mov
cltd
repnz
movsl
pop
jns
xor
pop
mov
push
dec
and
push
sbb
mov
fwait
mov
test
push
xor
pop
xorl
push
mov
ret
push
or
jo
lods
add
mov
xor
outsl
push
ja
pop
lds
add
icebp
mov
test
inc
stc
jno
pop
adc
jb
leave
pushf
pop
xor
mov
mov
jge
fnstsw
in
repz
and
lock
sbb
test
mov
inc
roll
cmpsl
xchg
mov
mov
outsb
data16
ds
clc
popf
jmp
neg
mov
jp
mov
or
or
int3
add
movsl
mov
mov
inc
out
insb
mov
out
or
in
sarb
jae
jno
gs
les
push
outsl
xor
mov
pop
pop
push
xor
rcr
xor
push
jne
in
sbb
sub
cmp
mov
mov
arpl
lods
enter
add
fadds
add
and
add
loop
es
pop
js
cld
push
pop
js
ja
and
scas
bnd
pcmpgtw
and
mov
pop
inc
xchg
dec
inc
shlb
jno
mov
xchg
and
rcll
loope
jno
pop
mov
mov
cmp
stos
push
roll
stc
outsb
outsl
dec
dec
pushf
or
cmp
fcompl
fiaddl
or
movsl
ss
sub
pop
pushf
sub
push
shr
sarl
jmp
jo
test
lock
inc
sub
repnz
add
pop
sub
xor
in
sub
xor
leave
int
adc
lock
push
iret
imul
jae
add
inc
jge
mov
pop
fnstcw
jge
lods
jno
lcall
mov
je
movsb
mov
xor
dec
mov
imul
push
push
fdivrp
mov
adc
sub
xchg
sub
inc
lret
call
test
loope
or
icebp
sbb
and
adc
stos
fnsave
lock
push
jmp
repz
add
fnstenv
inc
sub
cld
pop
inc
es
ss
push
mov
add
lret
pop
push
inc
pop
sub
scas
mov
outsl
ss
dec
es
shlb
iret
pop
outsl
sbb
outsb
and
ficoms
xchg
xorl
cmp
mov
idivl
adc
mov
mov
cmpsb
fldcw
enter
test
mov
clc
cs
pop
inc
and
jl
addr16
and
jne
add
dec
outsb
xchg
in
push
push
cltd
testb
daa
mov
out
es
jmp
mov
xlat
inc
inc
in
ret
stos
and
ljmp
add
in
jnp
ss
inc
jl
xor
sbbl
dec
test
inc
mov
ljmp
in
hlt
cmpsl
sbb
adc
aaa
mov
paddd
fs
cmp
popa
hlt
lods
xor
push
sub
xchg
cwtl
jecxz
jne
nop
inc
push
inc
mov
stc
dec
test
mov
pop
and
jl
cld
scas
jo
jmp
nop
mov
test
fisttpl
mov
aad
cmp
inc
in
xchg
mov
lret
es
test
pusha
jae
icebp
in
add
mov
shlb
bound
xchg
mov
sub
xchg
push
lock
sub
dec
mov
in
jl,pn
adc
ja
inc
rclb
push
mov
loopne
or
add
jb
pop
mov
or
cs
xchg
frstor
dec
movsb
cs
add
or
push
inc
push
cmp
gs
sub
jg
push
or
jo
sub
push
inc
sub
push
test
pop
sub
stc
pop
push
pop
and
pusha
add
out
adc
out
mov
jmp
jnp
pop
dec
dec
mov
and
pop
mov
mov
pop
xchg
test
mov
sbb
int
or
js
int
dec
loope
add
leave
dec
jbe
cs
sbb
addl
call
xchg
jge
inc
push
pop
adc
mov
add
insb
pushf
into
jp
lods
mov
xchg
sbb
mov
cmpb
movsb
mov
jge
jge
js
sbb
int
xchg
inc
sbb
jbe
dec
repz
jno
push
aam
cmp
xchg
fsubrl
fcoms
cmpsb
call
xor
outsl
pop
sti
push
mov
dec
mov
pop
jmp
aam
outsl
xchg
mov
fs
int
mov
icebp
xor
or
jo
fcom
mov
rcl
clc
outsl
push
xchg
cltd
mov
lcall
and
mov
add
fsub
cmpsl
pop
repz
js
sub
jb
jae
out
pand
shr
inc
cmp
jo
jnp
test
adcb
sbb
fcmovnb
dec
es
loope
cltd
push
jecxz
gs
mov
lret
jp
gs
scas
mov
cltd
xchg
fidivl
lods
data16
lcall
aaa
inc
adcb
add
lods
sahf
shrb
popa
popl
jnp
imul
fpatan
cmp
sub
sarl
iret
test
inc
jnp
int
adc
mov
push
sbb
xor
jg
lea
jne
bswap
pusha
imul
jb
pop
sbb
inc
cli
pop
addr16
pop
mov
xchg
sbb
add
or
lret
jae
mov
cmp
cs
push
mov
adc
dec
ljmp
cltd
jecxz
pop
sarb
cld
jo
push
ret
shlb
ss
mull
aam
xorps
dec
fcoms
stos
out
fnsave
ficoms
loopne
es
addr16
mov
insb
lods
xchg
or
btcl
dec
test
pop
rorl
dec
insb
sbb
aam
enter
rorb
inc
mov
into
les
popf
and
xor
popf
push
addb
flds
or
ja
jns
xor
mov
xchg
leave
add
sub
sub
pop
and
add
subb
mov
pop
call
push
cmc
in
stos
ffreep
adc
insl
pop
sub
icebp
xchg
clc
in
xor
and
dec
jo
mov
fmull
cwtl
aas
mov
and
sub
push
aam
pop
out
popa
mov
cmp
sahf
and
lock
fdivrp
scas
adc
loop
repnz
out
mov
movsb
dec
paddd
push
arpl
ret
sbb
adc
inc
jbe
push
jl
int3
sub
mov
in
adc
lods
dec
test
inc
xchg
out
push
sub
and
iret
adc
dec
xchg
mov
sub
mov
stos
cmp
insl
or
push
mov
pusha
fstl
test
xchg
jns
dec
jb
js
repnz
stos
ljmp
mov
sub
xor
or
dec
inc
rcrl
fdivrp
es
dec
cs
sbb
cmp
and
dec
loope
xor
and
adc
scas
imul
mov
mov
cmp
add
jo
pop
sbb
cmpsb
cmc
adc
sbb
cmp
pop
les
lods
and
in
es
rcrl
sbb
pop
inc
flds
xchg
loope
pusha
pop
cmpsb
add
xchg
fdivrl
test
cmp
lods
movl
add
xor
loop
addr16
inc
mov
movd
pop
dec
jle
jo
push
jle
in
add
pop
shlb
pop
push
cltd
adc
inc
push
test
pop
or
cmp
xor
adc
push
fmull
cmp
jl
lods
sub
lds
cmpsb
fnsave
cmpl
lods
push
cmp
pop
nop
dec
cmpsl
cmp
sub
push
xchg
incb
sub
cmp
inc
test
cmp
fnstcw
xor
xor
mov
mov
xor
shl
xor
or
jmp
aam
mov
xor
push
mov
ss
xlat
push
jb
mov
fmuls
jge
adc
or
push
mov
orb
js
daa
lds
movsl
in
mov
adc
gs
push
int
mov
sbb
mov
cmp
aam
add
push
push
iret
adc
pop
shrl
push
add
jl
jnp
pop
cwtl
insb
jge
cmpl
aaa
ret
sub
mov
dec
or
loop
sub
and
add
xchg
scas
fisubl
pusha
jle
stos
cmp
pop
call
mov
push
gs
push
xchg
adc
pushf
jnp
jp
fidivrl
xchg
mov
jnp
pop
loop
xchg
les
jae
fisubrs
adc
test
sahf
repz
xor
sar
faddl
pop
xchg
or
mov
mov
jle
icebp
lods
jns
mov
push
cmc
mov
and
and
push
pop
push
adc
and
inc
mov
imul
fdivp
adc
lds
mov
jb
sbb
lret
mov
imul
cmp
mov
ds
push
pusha
aaa
xchg
push
or
daa
mov
or
repnz
call
cli
add
jge
int3
addl
fwait
pop
dec
sqrtps
imul
push
mov
sbb
mov
cli
xlat
pop
bound
iret
arpl
pop
imul
nop
aam
inc
in
jmp
lret
mov
xlat
outsl
loope
xor
out
mov
cs
mov
or
cmp
sbbb
add
xchg
xchg
pushf
sub
test
jne
push
sbb
mov
pop
adc
sbb
mov
inc
mov
sub
sti
push
insl
cmp
call
inc
adc
loope
mov
sbb
push
cmp
scas
rolb
adc
mov
sub
pop
pop
in
rclb
loop
popf
in
fdivrs
push
cwtl
xor
mov
inc
fcomi
fisubs
ljmp
mov
jne
adc
data16
imul
dec
lods
rep
jecxz
addb
or
inc
push
xor
push
out
lods
jb
test
jae
mov
jbe
jecxz
inc
enter
vandnps
ja
mov
les
sub
sub
adc
xchg
arpl
pop
scas
xor
daa
mov
cmp
push
das
mov
fyl2xp1
add
das
aad
shll
in
cwtl
mov
mov
arpl
mov
sbb
arpl
and
arpl
or
out
dec
and
or
or
rorb
jmp
inc
aam
enter
fwait
repz
out
lret
js
and
or
imul
das
add
jp
rcll
inc
lock
inc
stos
dec
jl
insl
outsl
and
jnp
sub
jecxz
data16
int
sbb
out
mov
xchg
inc
insl
shrb
clc
xor
dec
aam
out
cmpsb
jne
push
jmp
dec
test
gs
popa
mov
sub
loop
sub
popa
scas
int
cmp
jl
arpl
fstl
ss
or
jl
cmpsb
pop
dec
shl
sub
sti
pop
push
lret
mov
cli
sub
ret
or
stc
cmp
prefetcht0
js
mov
addb
and
mov
cld
pop
popf
lcall
and
lahf
dec
xchg
sbb
pop
out
xor
jne
sub
pop
dec
sbb
mov
in
mov
adc
ret
mov
push
das
or
into
cli
out
sub
icebp
mov
rcll
scas
push
cmp
pop
xchg
ret
cmp
int3
adcl
sbb
scas
pushf
push
frstor
mov
lret
xor
outsl
stos
inc
out
repz
inc
stc
xchg
mov
dec
arpl
mov
bound
dec
jnp
dec
jnp
jb
arpl
add
dec
jle
and
mov
inc
jmp
mov
ja
push
sub
and
imul
call
in
pushf
push
mov
insb
in
cltd
add
or
sub
or
xor
aaa
sbb
cmpb
sub
or
xchg
cmp
and
add
mov
mov
pop
incb
adc
mov
push
outsl
ss
pop
enter
cmp
cld
mov
mov
loope
mov
lahf
pop
cmp
sub
into
fimuls
subl
jns
movb
add
addr16
mov
ds
call
jmp
dec
push
sub
fstpl
lret
adc
cs
mov
sbb
pushf
jmp
jb
fs
mov
stc
xchg
pop
mov
mov
push
push
loop
orl
lret
dec
sbb
mov
stos
pop
add
aam
pop
jp
jae
repz
ja
shll
mov
fcmovne
imul
mov
mov
mov
ljmp
fildll
pop
ss
dec
fwait
xor
insl
jbe
sbb
xchg
xlat
test
popf
jle
loopne
jmp
sub
sbb
cmp
outsb
call
and
mov
cmp
movsb
adc
add
sbb
cmpsl
out
jo
dec
out
xchg
add
add
pop
sub
loop
push
pop
es
ret
xchg
sub
stos
mov
insb
xchg
push
xor
iret
pop
xchg
add
popf
jne
lea
inc
sahf
adc
test
push
xor
lahf
daa
adc
cmpsb
xorl
push
fimuls
movsl
orb
mov
scas
cmpsb
adc
jne
push
or
mov
jge
or
in
add
roll
xor
fwait
rol
ds
test
and
pop
dec
sti
sbb
stos
add
or
cmc
sub
add
iret
stos
in
sbb
push
in
loop
push
xchg
paddusw
push
ret
inc
xchg
pop
lret
lcall
jbe
cmp
cmp
scas
xor
out
add
call
sahf
or
pop
ret
push
jnp
cmp
lahf
cmp
mov
jle
aas
fistpl
push
mov
xchg
jns
mov
lock
sub
ja
cmp
fsubrs
cmp
mull
sub
mov
mov
adc
add
add
jp
out
fsts
loopne
jmp
out
dec
push
cmp
dec
xor
js
test
lret
mov
mov
scas
jp
stos
stos
cltd
es
es
cmp
arpl
xor
or
popf
mov
xchg
imul
jne
sti
jnp
out
flds
mov
sbb
mov
add
inc
sbb
add
add
or
pop
inc
or
and
jo
adc
xchg
or
fisttps
pop
push
jnp
ljmp
push
adc
pop
test
pop
sub
xor
icebp
out
sub
sbb
xor
cmpsb
mov
les
inc
xor
push
or
fdiv
int3
adc
outsl
in
mov
push
call
es
sbb
cmc
inc
ss
ret
aaa
jno
cmp
push
xchg
mov
mov
xor
inc
bound
xor
sub
dec
sarb
sbb
vmovq
aam
bound
incl
dec
daa
ret
test
cmp
loope
pop
aad
sub
push
lcall
jnp
and
or
je
adc
push
data16
adc
ffreep
imul
xor
mov
push
fsubr
cwtl
mov
dec
movsb
cld
mov
das
mov
hlt
int3
cmp
bound
call
leave
jg
jmp
jne
push
mov
jo
mov
lea
rorl
les
xchg
jl
or
cmp
mov
jge
outsl
or
into
and
mov
push
and
jno
in
aad
adcb
add
adc
ret
dec
leave
pop
cs
lds
xor
sarb
shll
sahf
rcl
add
aam
mov
xor
jne
aaa
dec
push
push
xchg
mov
push
mov
jge
cmpsl
das
and
xchg
cmc
cmpsb
daa
call
lahf
fbld
rolb
sbb
and
sub
jne
ljmp
add
aaa
inc
lock
sbb
hlt
imul
scas
mov
and
pop
sti
test
inc
roll
mov
mov
out
push
stos
push
popa
mov
pop
mov
inc
xlat
into
adc
adc
shlb
jno
or
mov
mov
cmp
loop
cwtl
gs
and
daa
dec
xchg
xchg
and
mov
add
jae
movsb
gs
bound
loopne
sbb
fistpl
or
clc
mov
mov
lret
xorb
pop
test
lods
jg
sbb
cmp
es
xchg
shr
sbb
dec
ficoms
call
mov
pop
divps
aaa
out
push
enter
mov
aaa
jb
shrl
xchg
inc
inc
mov
in
add
mov
out
adc
pop
repnz
fsubr
clc
lds
cs
in
daa
xlat
addr16
js
insl
in
sub
push
push
shlb
dec
in
arpl
inc
pop
pushf
lds
aad
pushf
adc
dec
push
or
leave
cwtl
or
hlt
sbb
ss
outsl
xor
lea
mov
pusha
movsl
mov
sbb
nop
fsubrs
cs
mov
fcmovne
pop
mov
or
pop
fwait
lods
jnp
sub
xchg
fidivs
inc
outsb
pop
shl
sbb
pop
arpl
cltd
sub
orb
push
jle
push
push
add
cld
xchg
jp
add
cli
pop
cmc
sbb
repz
cmp
fdivp
xchg
fwait
in
outsl
mov
scas
into
or
or
loope
repz
add
lods
shll
xchg
daa
xor
lret
push
shr
lahf
imul
xchg
btc
int
cltd
or
xlat
aam
dec
imull
mov
sub
dec
arpl
int3
mov
aam
nop
cmc
cmp
cmc
cwtl
cmp
dec
mov
cwtl
inc
sbb
jl
dec
xlat
out
repz
push
lea
test
test
mov
push
popf
or
and
pop
inc
or
and
cli
or
pop
out
call
add
adc
and
lcall
cltd
or
insl
popf
dec
xchg
popa
mov
roll
cs
je
add
scas
outsb
popf
adc
sub
loopne
push
aam
or
lcall
je
cwtl
adc
fimuls
inc
or
call
mov
jbe
lods
lock
pop
call
cmpl
cld
cmpsl
sbb
loopne
push
xor
xchg
repz
mov
adc
into
push
sbb
push
xchg
sub
or
add
lods
test
enter
in
xor
inc
mov
bnd
fsubrs
xlat
or
jae
in
outsl
pusha
jbe
push
insb
nop
icebp
sbb
cmpsl
ljmp
pusha
mov
jbe
xchg
xchg
push
insl
rolb
jp
adc
fsubrs
jge
xlat
dec
mov
inc
pusha
mov
popa
repnz
test
cmpsl
jno
add
call
xchg
into
iret
cltd
xchg
xchg
add
sub
data16
jne
jle
cmc
out
mov
cwtl
cmp
jp
mov
ftst
data16
or
aad
popf
mov
cmp
adc
add
pop
ljmp
xor
mov
es
mov
mov
cltd
or
stos
gs
into
outsb
adc
cmpsl
std
lock
mov
enter
sbb
xor
jno
mov
adc
stos
je
sahf
push
sbb
test
sub
out
add
lods
int3
sbb
push
movsl
mov
loopne
sahf
stos
xor
add
lods
ficoms
imul
rorb
das
insl
imul
cmp
icebp
cmp
imul
add
push
adc
cld
cmp
btc
jge
mov
or
pusha
fdivrs
inc
stos
jmp
xchg
fidivrs
mov
dec
push
cmpsb
xor
f2xm1
add
push
sub
into
push
lcall
add
jno
adc
xchg
repz
insb
pop
rclb
dec
ret
fdivrl
leave
push
mov
jns
push
or
or
or
loopne
out
push
loopne
lea
in
xchg
inc
push
loopne
lret
icebp
cld
lret
mov
aam
mov
jmp
popf
pushf
dec
mov
dec
out
movsl
fidivl
xchg
mov
or
loopne
mov
ret
ljmp
cmp
gs
pop
fnstenv
pop
jg
aas
ret
dec
loop
addl
int
ret
popa
out
icebp
dec
cmpsb
pop
xchg
jl
imul
cmpsb
cmp
mov
in
jns
xchg
lods
mov
mull
cmp
outsl
fs
xor
mov
mov
les
stos
imul
mov
cltd
mov
jne
repnz
cmpxchg
pop
icebp
fistl
sbb
das
fwait
outsl
push
adc
rorl
dec
js
pop
ss
xor
xchg
rol
xor
jne
sub
movsl
pushf
sbb
sub
jne
jno
xchg
sub
int3
dec
fcoms
or
das
int3
dec
jmp
fcmovb
jle
popa
orl
inc
inc
or
sub
rorb
int3
mov
cli
cwtl
add
xor
aas
mov
jmp
std
sti
sbb
sbb
mov
out
adc
xchg
sbbb
xchg
lahf
fimull
cmp
inc
mov
shll
xchg
into
lods
mov
jbe
fdivl
shll
jnp
stos
push
ja
dec
pop
cmp
xor
shlb
cmp
dec
adc
or
pushf
movsb
push
sub
lea
xchg
outsb
mov
pop
mov
pop
xor
pushf
adc
fldl2e
std
push
stc
pop
subl
jne
push
insb
and
cld
inc
mov
test
or
xor
mov
add
mov
and
test
inc
int
test
jnp
add
cmpb
loope
jbe
jp
dec
mov
insl
xchg
bnd
daa
shr
clc
mov
and
dec
push
mov
mov
xchg
ja
jmp
pop
dec
sbbl
incb
jmp
or
lret
sti
repz
sbb
aas
ror
pop
jbe
ret
xchg
adc
sub
jno
pop
add
jae
je
mov
sbb
negb
pushf
cmc
pop
jecxz
into
in
stos
dec
pop
sti
movsb
lods
fsubrl
out
dec
jmp
pop
xlat
adc
mov
push
jle
fists
push
push
ret
sbb
cmpsb
test
inc
push
xchg
movsb
cmp
out
scas
fldl2e
mov
sbb
es
pop
push
jb
jl
rol
mov
bound
repz
clc
pop
sub
icebp
loop
movsb
xchg
ds
dec
in
lea
mov
mov
nop
and
sub
add
push
sub
cmpsb
ret
je
dec
ja
or
out
shl
pop
aaa
mov
xchg
or
push
jl
jge
sbb
icebp
xlat
repz
aam
pop
pop
loop
jle
mov
shrl
filds
adc
pop
imul
idivb
lcall
push
lds
mov
mov
fnstcw
loop
cmc
dec
lret
leave
or
mov
push
push
repnz
mov
xlat
xchg
into
arpl
cvtdq2ps
push
outsl
es
add
jmp
adc
rcr
jne
jp
bound
or
cwtl
mov
lods
or
jae
in
dec
jecxz
inc
mov
mov
push
adc
cmpsb
or
cmp
ss
mov
cwtl
push
cli
iret
in
repnz
xor
icebp
inc
add
daa
in
ror
loope
inc
mov
cmc
bnd
mov
int3
test
and
jae
jmp
add
out
inc
test
fiaddl
insb
jg
inc
cld
cltd
and
popa
inc
sti
sbb
das
in
jo
outsb
stc
sub
add
orl
test
cli
jns
pop
or
inc
lahf
xor
xchg
in
test
jae
adc
jne
jns
lea
xlat
push
cmp
in
mov
mov
adcb
repnz
adc
sub
ret
xchg
out
ret
cmp
add
mov
mov
mov
pop
aaa
inc
pop
std
add
inc
leave
push
add
lahf
push
outsb
lods
sbb
fisttps
out
mov
jbe
movsl
fcoml
add
mov
aaa
mov
stc
lret
jns
mov
and
xor
repnz
test
adc
xchg
push
pop
jns
inc
shrb
mov
mov
mov
lcall
jae
pop
push
insb
fmul
int
ss
lea
scas
and
add
inc
inc
or
jns
xchg
xor
das
stc
out
scas
insb
outsl
push
hlt
jmp
cmpsb
nop
or
out
or
seto
divb
xchg
xchg
es
add
clc
push
hlt
neg
jg
gs
clc
pop
push
jge
fabs
adc
test
mov
ret
fwait
ljmp
or
out
cs
or
pusha
adc
xchg
push
xlat
dec
jb
inc
loope
or
popf
ja
pop
adc
jne
lret
mov
mov
or
ss
fwait
xchg
les
cmp
lods
hlt
scas
fdivrs
loopne
cli
enter
roll
leave
cmp
mov
out
sub
mov
dec
jae
icebp
leave
loopne
in
inc
or
insb
fidivrl
fwait
inc
mov
mov
loop
rcr
aad
hlt
fcmovbe
test
mov
lea
xchg
adc
lods
push
js
lods
cmpsb
dec
js
mov
mov
xor
jnp
sbb
dec
xchg
in
out
lahf
mov
pop
pop
xor
test
adc
mov
dec
sbb
fs
mov
inc
pusha
or
sub
in
imul
pop
sbb
or
adc
adc
mov
jbe
cmpb
lret
clc
xchg
imull
lea
movsl
scas
and
mov
cmc
xchg
cmp
jp
xor
add
cmpsb
mov
push
and
lods
stos
add
icebp
xor
inc
shll
out
sbb
das
or
pop
jecxz
lods
mov
pop
fwait
sub
out
rorb
lret
sbb
addl
xorb
xor
xlat
aaa
inc
bound
push
icebp
mov
sbb
pop
faddl
sbb
leave
push
jbe
insl
enter
push
cmc
mov
aaa
out
jnp
sub
sub
mov
shlb
lret
inc
inc
popf
jae
and
out
cmpsb
cli
mov
insl
fisttps
sub
pop
cs
outsl
sti
rcrl
push
lret
loope
aad
out
fadds
dec
jns
pop
mov
xor
fdivrs
push
push
lcall
pop
cwtl
cld
cmp
in
imul
pop
outsb
lea
or
or
dec
stos
mov
daa
in
pop
bound
push
dec
scas
cli
jp
mov
addr16
out
cmp
inc
cmp
pushw
test
cmpsb
xor
pusha
int3
into
shrl
addr16
sub
dec
fcompl
lods
pop
xchg
lods
or
daa
add
in
lock
icebp
aas
jne
cmp
mov
call
jecxz
jmp
js
in
lret
repnz
fldenv
mov
test
or
xor
movsl
push
xor
inc
mov
popa
mov
pop
cmp
sub
into
repz
stos
and
test
movl
jbe
fdivl
inc
xchg
inc
cmp
mov
cmp
add
loopne
sub
pop
sub
cmp
faddp
pusha
lahf
or
out
jle
aad
jbe
mov
mov
cwtl
movsl
out
sub
leave
xchg
jno
enter
andb
stos
test
mov
add
adc
inc
lret
jo
movsl
stc
aam
or
movsb
cltd
iret
jno
cld
enter
arpl
adc
imul
sarb
notb
pop
cmp
adc
stos
mov
repnz
lcall
ss
mov
aad
fsub
dec
and
ljmp
outsb
outsb
pop
cld
pop
leave
arpl
adc
mov
andl
nop
movsl
inc
mov
or
movsb
shrd
shr
mov
mov
xor
shl
jmp
xlat
mov
iret
or
push
mov
mov
mov
xchg
outsb
mov
push
rclb
lds
stos
test
sub
pop
dec
stc
cli
pusha
idiv
in
mov
jae
inc
les
ja
mov
push
scas
push
push
mov
cmc
sub
stc
jns
insb
lock
das
clc
xor
popf
sub
outsb
dec
test
pop
xchg
or
loope
fisttpll
mov
shll
test
out
cmp
outsl
daa
lock
push
dec
fs
sub
ja
or
jne
xor
jns
mov
jne
add
imul
dec
xchg
scas
dec
jl
outsb
jnp
adc
arpl
repz
mov
lds
mov
stos
xchg
icebp
push
jg
cs
fidivrs
mov
out
mov
adc
push
fwait
xchg
xor
mov
sbb
ss
push
sub
mov
out
push
xor
xchg
jbe,pt
mov
stc
imul
dec
jl
inc
aam
mov
and
inc
ja
movsb
mov
enter
loopne
add
fistpll
mov
sub
xchg
or
leave
adc
xchg
ljmp
sub
inc
shll
sbb
data16
xchg
fdivr
dec
cld
mov
push
mov
jecxz
loope
and
mov
bound
dec
mov
fwait
inc
popl
inc
insl
sub
dec
outsb
push
repnz
add
and
jns
scas
xlat
push
roll
aam
aas
inc
inc
xchg
or
mov
xchg
and
fwait
out
or
repz
icebp
cmp
lods
and
notb
and
inc
push
sbbb
dec
test
xor
aas
push
inc
pop
daa
and
ljmp
push
cmp
push
scas
push
cmpb
mov
mov
pop
xchg
mov
insb
mov
add
stos
lods
mov
pop
mov
push
pop
test
xchg
arpl
loope
insl
mov
iret
push
pop
scas
fdivrs
sbbl
shll
cmp
rcr
cmp
ss
dec
leave
jle
cmpsb
mov
push
lahf
aaa
cmp
mov
shll
mov
outsb
aam
mov
aas
fadd
jbe
adc
ljmp
out
ja
dec
jge
mov
adc
arpl
jle
xor
mov
pop
test
sarl
inc
inc
add
fimuls
sub
jg
mov
xor
jge
sbb
push
mov
jne
mov
mov
mov
sti
int
mov
jl
sahf
imul
enter
sbb
jge
add
sub
mov
sub
dec
iretw
cmp
mov
cmp
repnz
lods
dec
xchg
repnz
pop
aas
movsl
movsl
mov
xor
cwtl
ss
addr16
pop
mov
out
imul
or
and
movsl
add
or
inc
popa
pop
out
int3
lea
rcrb
jge
and
jno
fildl
bound
sbb
push
mov
add
cmp
dec
jbe
movsl
loop
sbb
pop
lret
lds
xchg
mov
out
test
sarl
mov
jnp
cld
popa
push
pop
xchg
or
je
pusha
outsb
pop
push
cld
andl
loopne
and
mov
gs
ja
dec
sub
test
mov
mov
sahf
sti
sbb
inc
inc
and
sbb
sub
mov
loop
test
roll
add
leave
pop
das
cmpsl
pop
std
aaa
dec
repnz
das
test
lock
stos
popl
mov
mov
repnz
jb
in
fsubl
std
fs
fldcw
scas
mov
pushf
mov
lahf
mov
test
cmc
bound
imul
mov
insl
bound
orl
ja
ja
test
movsb
jne
mov
adc
inc
adc
or
pop
jb
jg
loope
lret
jns
setno
add
jae
leave
pop
xchg
idivb
pop
push
frstor
mov
dec
cmp
shrb
inc
fcmovbe
lahf
lods
iret
push
inc
orb
test
mov
jmp
fnsave
cmp
gs
stc
xlat
loope
sub
pop
out
pop
mov
or
iret
loop
jo
loopne
push
pop
jge
mov
adc
and
into
dec
xchg
pusha
pop
and
arpl
mov
add
cli
sub
pop
add
mov
subl
and
pop
sub
pop
je
out
sahf
mov
mov
sbb
and
xchg
faddl
test
inc
mov
out
ret
xchg
sub
mov
lahf
dec
jae
stos
mov
push
pop
adc
imul
mov
cmpsl
add
mov
roll
lcall
scas
cmpsb
daa
js
ud0
sbb
aaa
pop
push
xchg
adc
fdivrp
pusha
xor
push
cs
and
rcr
jbe
jo
xor
std
adc
pop
mov
inc
jbe
xlat
mov
xchg
push
push
pop
pause
mov
aas
mov
shr
pop
lret
inc
fs
jo
in
mull
sbb
es
inc
jne
leave
inc
movsb
test
mov
pusha
sbb
imul
loop
je
hlt
dec
enter
cltd
int3
rolb
sub
out
js
data16
pop
add
insl
pop
mov
rolb
aam
rolb
leave
int
and
mov
cmp
test
in
add
lret
add
dec
inc
fnstsw
dec
lahf
out
xchg
repnz
pop
mov
cmp
cmp
inc
dec
test
mov
add
add
lahf
lahf
pop
popf
mov
xor
jmp
xlat
int3
ficomps
insl
dec
rcr
pop
hlt
lret
jg
call
insb
mov
mov
jnp
pop
iret
lret
lds
adc
lahf
pop
test
mov
dec
xchg
xchg
out
fsts
pop
sbb
cmp
xchg
sub
stc
push
xchg
roll
jbe
out
or
cmp
orb
imul
xor
test
pop
jge
mov
nop
jnp
test
in
rorb
loopne
cmp
mov
jp
and
mov
or
xor
out
test
push
mov
inc
pop
je
jecxz,pt
mov
test
jnp
loopne
loop
inc
mov
sub
out
shl
mov
mov
lcall
popf
pop
repnz
mov
mov
js
cltd
test
fstpt
mov
into
mov
mov
in
sub
push
mov
int
leave
repnz
jl
dec
push
mov
lret
int3
mov
cmc
sbb
sbb
jmp
std
out
adc
pusha
aas
test
sbb
int3
xchg
fiaddl
js
jbe
es
cmp
in
xchg
stos
lahf
rorb
ljmp
xchg
repnz
rorb
ret
mov
inc
add
mov
lods
enter
add
movsb
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
jmp
mov
outsb
arpl
xchg
and
xchg
inc
mov
insl
fimull
adc
xchg
adc
dec
lcall
movsl
xchg
sub
loope
mov
mov
jo
in
sbb
enter
jb
test
rcr
inc
mov
jo
ja
push
mov
mov
jp
sub
sub
mov
insl
sbb
mov
loop
dec
das
daa
mov
sub
dec
adc
jbe
jb
cmp
xchg
movsb
leave
in
in
mov
mov
adc
and
lret
jae
sub
xor
bound
decl
add
xor
inc
rolb
arpl
sub
iret
pusha
pop
xchg
push
fistpl
jecxz
jo
data16
leave
xchg
lds
popa
add
lahf
jmp
pop
ds
hlt
or
pop
jmp
and
push
shlb
inc
jno
enter
add
mov
mov
push
shrl
sub
outsl
mov
jo
scas
inc
lds
imull
insl
cmc
cld
lods
test
jmp
xor
psrld
or
mov
dec
sub
imul
pop
into
nop
cltd
rclb
nop
out
mov
std
push
sbb
push
andl
lea
dec
pop
movsb
in
push
dec
add
test
sbb
cmp
and
imul
cmp
jl
fmull
insl
test
xchg
xlat
out
xchg
fisttpll
das
cltd
sbb
call
mov
cmpl
stc
movsl
xor
pop
cwtl
jmp
dec
roll
jb
mov
jg
or
mov
lahf
sbb
xor
mov
test
sub
ret
mov
outsb
test
lods
cmp
daa
cld
sub
out
or
adc
add
sub
dec
sub
das
pop
cmpb
pop
bound
out
mov
mov
xor
adc
aas
sub
pusha
jmp
xchg
mov
or
andb
jae
test
push
aad
jge
imul
mov
roll
sub
dec
and
pop
cmpsb
insb
inc
repz
sub
in
addr16
subl
inc
cmp
inc
es
or
and
sbb
cmp
lds
add
jae
push
lret
pop
lret
cmc
add
mov
idivl
je
arpl
pop
in
int
incl
gs
sbb
in
jbe
or
mov
div
or
sbb
add
and
mov
movsb
lds
outsl
in
mov
cmp
movsl
mov
push
push
pop
mov
jne
sbb
jb
iret
lea
mov
mov
pop
xor
jle
gs
and
stc
sub
test
fcompl
pop
cmp
shl
into
pop
cltd
das
fcmovu
rclb
jg
cwtl
sarl
insb
xor
imul
mov
and
mov
mov
push
in
stc
sub
pop
and
push
fwait
dec
xor
pop
arpl
add
dec
pop
inc
cli
mov
sub
cmc
jl
hlt
jo
cli
daa
bound
int
xchg
sahf
xchg
xor
xchg
push
push
in
js
das
int3
sti
sub
sbb
movl
cli
aam
bound
pop
ja
out
adc
popf
repz
add
push
cmpsl
scas
sub
ficomps
cmp
movsb
sbb
mov
not
fstpt
xchg
int3
mov
and
pushf
and
icebp
les
lods
cli
movsl
data16
sti
cmp
iret
outsb
test
lods
mov
add
xchg
xorb
imul
dec
cli
inc
cs
sar
cmpsl
mov
movsl
cmpsb
mov
adc
lahf
mov
inc
pop
dec
add
inc
popf
xchg
fdivrl
cmpsl
adc
mov
sbb
loope
stos
lock
aaa
cmc
dec
push
ja
inc
inc
shrl
addl
or
cmp
fisubl
mov
or
ror
xchg
inc
jno
inc
mov
cmp
cmp
out
push
popf
dec
lcall
sbb
cmp
mov
inc
into
cltd
cmp
enter
ss
aaa
cmc
pop
jmp
or
jae
fcoms
cmp
add
xor
test
add
mov
shll
xchg
push
fadds
and
hlt
pop
push
stc
xchg
xor
xor
mov
lret
mov
addr16
mul
test
mov
es
pop
pop
sub
push
into
xor
dec
test
cmp
data16
mov
les
sbb
pop
jecxz
xor
mov
lret
repz
pop
or
fsubrl
cltd
outsb
lcall
in
jg
inc
dec
clc
or
lret
test
jbe
jns
xor
fldt
inc
subl
xor
jle
or
sub
inc
sahf
fsub
cmp
mov
sbb
push
je
adc
outsb
aaa
jns
ds
xor
jb
cmp
xchg
shl
clc
test
lret
pop
mov
xchg
pop
jg
push
ljmp
dec
negb
popl
pushf
loope
lock
or
and
sub
adc
pop
ret
xor
mov
ss
xchg
fimuls
daa
fs
lds
inc
inc
cmp
test
sbb
mov
add
dec
shll
xor
jo
aas
jle
mov
lock
outsl
adc
push
pop
mov
int3
add
sub
add
aam
inc
adc
in
pop
xorl
test
cs
lock
inc
stos
into
in
sub
mov
hlt
je
or
push
pop
jno
adc
dec
loope
adc
adc
jmp
sarb
pop
push
push
and
lods
sahf
lahf
sub
insb
int3
sbb
pop
add
data16
ds
loopne
out
ret
ja
test
xchg
dec
push
cwtl
mov
int3
ret
mov
jl
addr16
subl
leave
mov
iret
nop
inc
adc
mov
cmp
jb
lds
sub
pop
sbb
mov
cmpsl
dec
sbb
push
in
push
jae
lock
push
in
inc
js
pop
xor
cmp
loope
cmpsl
movsl
iret
sbb
call
pop
and
add
adcb
push
mov
lret
mov
jmp
sub
and
inc
test
dec
into
push
inc
ja
mov
jp
cs
stc
or
sub
mov
mov
xchg
out
cmp
ret
iret
mov
sub
scas
ljmp
cmp
nop
lock
arpl
add
cmp
popf
pop
and
negl
loop
insb
test
dec
icebp
xchg
out
inc
lret
add
sub
mov
push
insl
js
cmp
or
int3
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
jmp
fnsave
push
adc
adcb
adc
xchg
and
jmp
mov
es
pop
inc
jle
cli
jnp
outsl
adc
clc
pop
stos
mov
mov
nop
and
jmp
xchg
mov
scas
sbb
inc
lahf
mov
or
adc
rcrb
xor
mov
push
inc
lahf
sbb
aam
xchg
xor
mov
aam
out
and
sbb
mov
sub
daa
sub
mov
pop
sar
iret
push
ret
and
mov
cmp
or
cmp
cmp
pop
outsb
xchg
xchg
ror
pop
aad
out
hlt
subb
xchg
in
add
mov
pop
sub
jbe
in
mov
js
mov
out
mov
jg
mov
sub
ror
shl
mov
negl
repz
js
pop
inc
cmc
inc
add
outsb
jmp
pop
ret
jmp
cwtl
in
sub
xchg
lcall
pushf
div
fidivl
mov
imul
in
mov
les
mov
cmp
mov
nop
cmpsl
mov
and
idivb
mov
aaa
xchg
jbe
dec
or
nop
cltd
and
adc
and
mov
icebp
popa
mov
push
and
inc
les
xchg
xchg
aas
sbb
out
lods
popa
push
xchg
ror
sbb
dec
pop
hlt
movsl
inc
pop
cmp
jl
dec
jp
jno
xchg
fwait
dec
loop
imul
stc
dec
and
push
mov
mov
fdivrs
inc
dec
lret
jo
xchg
or
inc
xchg
and
push
push
fldcw
sbb
cmp
call
jnp
dec
aas
jns
div
lods
and
sbb
xchg
xchg
xor
mov
or
aad
or
pop
loope
fcoms
bound
xor
sbb
into
or
xchg
jle
cmp
pop
inc
push
or
clc
cmp
and
or
jbe
sbb
cmp
addr16
and
out
cmp
add
gs
pop
mov
pushf
mov
mov
sub
mov
sbb
xchg
mov
or
cs
ret
jbe
sbb
out
cmp
push
adc
push
xchg
leave
xchg
jne
mov
push
add
enter
xchg
mov
pushf
mov
rcrb
mov
popa
rcl
es
push
jae
faddl
testb
sub
mov
std
jmp
xchg
fdivl
out
leave
pop
fdivs
scas
mov
xor
pop
mov
xchg
pop
mov
push
cmp
mov
data16
mov
lock
mov
loop
repz
sbb
ret
mov
in
mov
outsl
in
sarb
jo
movsl
adc
push
shl
mov
cmp
js
pushf
push
push
test
jbe
jo
pusha
pop
out
aaa
jno
push
sub
adc
inc
loope
mov
xor
int
cmp
inc
mov
xchg
repnz
xor
xlat
push
lret
ficompl
icebp
fiaddl
das
inc
in
mov
or
js
rol
xlat
jo
inc
es
daa
and
outsl
addb
fwait
cmp
ss
mov
aad
push
lds
aam
push
lcall
loopne
fldenv
popf
fld
or
cmpsl
inc
repnz
and
sti
syscall
cmp
js
fcomps
push
shlb
test
push
pop
sub
sub
add
int
mov
mov
str
inc
outsl
mov
lods
add
movl
int3
data16
sbb
cmp
dec
std
je
dec
mov
test
push
int3
xchg
cld
sbb
iret
jecxz
push
jbe
jge
lcall
cmp
jl
fs
jge
and
push
dec
in
mov
sbb
inc
sbb
xor
repnz
add
xor
pushf
outsl
das
jns
sub
aaa
cwtl
sarl
cld
cmp
push
or
or
mov
mov
ret
pop
daa
ljmp
add
push
test
dec
mov
push
xchg
ljmp
mov
sahf
push
dec
xchg
pusha
lahf
test
xchg
mov
add
inc
and
aaa
imul
imul
das
dec
xchg
movsb
fnstcw
lods
add
mov
cld
loopne
mov
mov
pop
xchg
dec
pop
sahf
add
mov
orb
sbb
and
ja
cs
stc
mov
jp
enter
push
mov
or
ret
xchg
sub
fwait
mov
lods
mov
test
testl
repnz
sbb
and
xor
add
push
adc
mov
jae
lret
mov
push
pop
sti
jo
popa
cmp
adc
jno
push
push
aam
mov
mov
call
sarb
insl
loope
popa
mov
jg
loope
pop
cmp
dec
pop
push
mov
repz
dec
mov
pop
xorl
pop
sub
cs
arpl
or
jp
test
fimuls
jge
aam
add
gs
dec
cwtl
xor
inc
shl
xchg
push
xor
jne
xchg
imul
add
ret
sbb
stos
push
sbb
mov
mov
int3
pop
mov
xor
xor
xor
jnp
test
fs
aas
add
insl
add
imul
jb
push
jg
leave
cwtl
jg
push
frstor
xor
sub
lds
mov
lock
cmp
xchg
push
pop
loop
mov
int3
adc
mov
and
add
pop
dec
dec
push
xor
cmpsb
divb
dec
int
test
pop
sti
les
out
pop
jp
rcll
cwtl
jl
cmc
dec
push
nop
and
stos
and
mov
xor
aad
xchg
sub
fisubrs
or
bnd
call
div
std
inc
daa
mov
pop
or
pop
mov
icebp
outsl
xchg
mov
xor
int
sahf
mov
arpl
popa
xchg
xchg
jno
out
or
rclb
lahf
sub
jmp
sarb
in
mov
mov
cmp
fwait
add
jp
cmp
je
jg
sub
das
push
xchg
test
mov
inc
cmp
inc
cs
xchg
cmp
in
sub
adc
ret
dec
adc
out
test
lret
jns
sub
xor
push
in
loopne
push
loop
flds
push
sbb
and
das
jmp
pop
sahf
mov
loopne
outsl
cmp
out
aad
sarb
push
sti
jo
xor
pop
fwait
aas
pop
cmp
or
mov
xor
pop
jo
imul
rcll
dec
f2xm1
loopne
fisubrs
aas
push
std
mov
or
mov
mov
shl
shl
mov
mov
jmp
test
fcoms
xor
add
ja
fldl
push
stos
xor
out
or
push
xchg
call
pushf
pop
push
xorb
test
and
pop
add
push
dec
mov
and
clc
pusha
sbb
mov
into
lods
sub
add
mov
es
movsl
mov
dec
std
pusha
or
lds
cs
imul
je
adc
xchg
cmp
test
in
sub
mov
fisubrs
mulb
xchg
mov
add
jg
jmp
cmp
sbb
cmp
add
inc
xor
jle
jmp
rorb
jp
stos
test
cmp
imul
fstl
mov
cmp
ljmp
imul
add
or
add
cmpsl
ds
cmc
setae
jmp
bnd
lcall
xchg
aas
or
mov
ds
sub
out
aad
jp
ljmp
push
xchg
inc
icebp
es
mov
xor
idivb
movsb
pop
sbb
adcb
fwait
adc
arpl
sahf
fsubr
add
repnz
std
dec
fs
imul
enter
sub
shr
inc
pop
test
push
xchg
adc
push
scas
test
scas
or
repnz
test
or
inc
dec
mov
pop
stc
cmp
push
loop
je
add
xchg
xchg
push
notb
cwtl
add
push
lea
pop
lahf
cld
cmpsl
daa
movl
daa
mov
sub
mov
jo
repnz
stc
sbb
ret
fstpl
js
cmc
xchg
in
lret
cmp
shlb
insb
popa
mov
imul
mov
xchg
mov
xchg
scas
mov
jg
lahf
push
mov
addr16
sbbb
and
int3
into
in
clc
pop
pop
mov
and
mov
sbb
shrb
lock
lock
popa
push
or
mov
pop
xchg
mov
jmp
popa
fst
mov
sub
and
and
ja
cli
jle
sbb
xor
js
or
xlat
mov
push
mov
data16
and
scas
jae
mov
sbb
or
hlt
test
negl
lret
or
mov
inc
faddl
mov
stos
lods
test
inc
sbb
aam
out
cltd
cli
imul
or
cmp
adc
filds
xor
lret
gs
lock
out
loopne
repz
inc
enter
push
shlb
mov
outsl
jb
jge
gs
popf
notl
push
rclb
orb
or
fwait
sbb
popf
jecxz
xchg
mov
inc
mov
scas
mov
imul
xchg
jecxz
push
sarl
adc
inc
repz
lea
enter
je
dec
aad
sbb
adc
popa
outsl
lea
test
insl
add
xchg
lock
fdivrp
orb
push
sbbb
shll
adc
js
ss
enter
xlat
xor
movsl
fisttpl
and
rcl
scas
notb
call
xchg
pop
xchg
pop
pop
dec
ljmp
xor
in
sahf
xchg
inc
pusha
mov
bound
dec
mov
sbb
xor
cmpsb
mov
int3
leave
mov
sub
das
xchg
mov
movsl
pushf
sbb
std
imul
outsl
xchg
and
in
inc
in
lods
jmp
and
jecxz
jb
xchg
xor
movsb
lock
out
and
jmp
jmp
pop
push
add
and
leave
icebp
shl
sbb
fcomp
scas
inc
fcmovnu
lds
push
hlt
sahf
testl
out
adc
scas
mov
stc
or
jle
xor
int3
mov
xchg
xchg
xchg
shll
mov
rolb
ss
pop
aam
mov
xchg
pop
lods
adc
dec
xchg
sub
pop
dec
cmpsb
fwait
dec
lahf
xchg
xchg
mov
mov
mov
aam
adc
sub
sub
and
nop
pop
in
test
adc
or
mov
sti
fstl
xor
sbb
push
nop
xor
push
and
cmp
aam
mov
leave
or
fimuls
nop
xor
dec
loopne,pt
aam
in
fstpt
adc
add
jp
inc
lock
test
outsb
cs
stos
and
mov
xchg
mov
push
lock
pusha
lahf
insl
sub
fisubs
jo
lahf
enter
cmp
adc
lds
mov
mov
dec
mov
addb
in
sub
sub
das
add
lock
adcb
test
pop
mov
sbb
cld
das
adc
movsb
out
cmpsl
pop
lahf
sbb
test
orb
pop
cmp
sbb
push
popa
dec
push
imul
imull
pop
insl
fs
into
ret
xchg
fistpll
fadds
inc
daa
fwait
inc
popf
adc
fstps
enter
imul
and
mov
jp
addr16
pop
xchg
fadds
dec
cld
add
mov
mov
sub
imul
push
jmp
lret
fs
or
insb
in
inc
in
xor
enter
in
push
xor
fcompl
and
lods
orb
cli
hlt
sbb
stc
mov
cmp
push
push
enter
sub
mov
fsubr
and
lods
pushf
sbb
rorb
lock
mov
mov
lock
jp
pop
pop
outsb
pop
insl
mov
or
arpl
std
repz
in
ret
pop
sbb
scas
aad
lods
bound
icebp
xor
loope
mov
mov
movsb
xchg
bound
in
jl
inc
xchg
into
call
das
imul
rcll
es
lods
movsl
test
dec
fisubs
sbb
cmp
faddp
jnp
sub
aam
mov
sti
sub
popf
or
jno
pop
push
inc
lods
lret
mov
imul
xchg
mov
sub
and
dec
mov
test
dec
lods
or
setnp
call
push
bound
loopne
roll
outsb
in
std
xchg
adc
bnd
out
addl
sbb
es
stc
loopne
pushf
or
add
icebp
ds
mov
jmp
adc
mov
idivl
daa
js
es
adc
mov
inc
inc
daa
cmp
bound
daa
xchg
decb
pushf
stos
scas
out
jge
cltd
mov
stos
out
cmp
xchg
fists
movsb
movsl
pop
test
fisubrl
bound
es
sbb
sub
jbe
add
inc
mov
lock
inc
aad
ret
add
xchg
add
mov
cmpsb
sti
inc
mov
hlt
notl
repz
test
pop
jg
rolb
imul
xlat
lock
fistpl
push
pusha
in
pop
or
pop
jg
xor
aaa
push
pop
pop
ret
int
std
scas
lea
and
cmp
mov
arpl
dec
and
ljmp
mov
mov
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
jmp
sti
icebp
lods
mov
outsb
fs
dec
cmp
cmp
jmp
pop
adc
mov
aaa
sub
cmp
cld
dec
jb
or
lods
adc
jecxz
dec
inc
lmsw
push
dec
xor
sbb
cmc
xor
rol
stos
and
jge
mov
out
mov
mov
mov
sbb
mov
sub
xchg
rcrb
sbb
cltd
inc
xchg
shl
iret
lea
inc
lods
fistps
scas
in
cmp
mov
push
add
rcrb
mov
insb
add
idivb
std
mov
pop
jne
ds
popf
and
xchg
mov
mov
out
imul
mov
scas
mov
test
and
ret
adc
sub
cmp
notrack
test
inc
hlt
pop
lret
sbb
jne
popf
push
jmp
cmpb
into
fwait
pop
jecxz
xor
std
dec
pop
inc
inc
inc
std
out
insl
mov
cld
pop
pop
cmp
mov
mov
mov
vpsadbw
jl
out
push
clc
call
mov
sbb
xor
push
aad
cmp
inc
pop
sbb
pop
add
imul
push
push
push
scas
hlt
lock
notb
insl
adc
ds
scas
ss
stos
insb
pop
decb
test
inc
orb
cmp
cmp
mov
or
jne
mov
xor
jno
ret
rcrl
mov
sahf
mov
push
mov
insb
cmp
fs
cwtl
xor
jle
aad
jg
or
adc
push
rol
lock
in
mov
cmp
sub
test
and
out
sbb
loopne
inc
adc
xchg
mul
std
mov
and
jmp
stos
mov
test
mov
movsb
popf
push
pop
insl
lock
pop
rol
inc
add
push
enter
lea
fcompl
mov
lret
jbe
orb
jns
pop
frndint
mov
rclb
fsts
cmp
roll
imull
mov
insb
sbbb
xorl
cltd
inc
inc
cmp
dec
jb
jmp
sub
push
into
xchg
cmp
adc
and
mov
sbb
jbe
fisubl
lods
data16
mov
loopne
xor
push
xchg
insl
addb
lcall
cmp
pop
js
push
lahf
call
jne
xchg
jle
loop
or
xorl
mov
lods
outsb
xchg
push
xlat
mov
test
mov
in
addr16
ror
cmpsb
jl
jecxz
lahf
pop
rsm
nop
adc
lods
mov
test
inc
mov
in
loop
pop
xchg
outsb
sti
sub
stos
cmpsl
jecxz
xor
ret
add
popf
sub
adc
xor
fs
or
inc
shrl
inc
and
cs
fmulp
mov
je
dec
xchg
ds
jne
and
rcl
xchg
jmp
and
gs
lret
jle
dec
sbb
cmp
imul
xor
stos
fisttpl
lods
lea
sbb
sbb
mov
insb
push
mov
fsubrs
xor
hlt
dec
or
inc
xchg
loopew
xlat
shlb
insl
add
insl
mov
jnp
jmp
jne
xchg
pushf
into
fisubrs
dec
push
jg
insb
lret
or
mov
lds
and
into
daa
jg
cmc
sbb
adc
and
aaa
push
clc
jp
adc
in
pop
cmp
xor
gs
aam
in
call
jl
fimull
rorb
mov
pop
shrl
shll
adc
fxch
xchg
adc
xchg
jmp
push
imul
dec
shlb
mov
jg
mov
sub
inc
sub
xor
outsl
cld
mov
lods
je
and
sbb
dec
inc
or
lods
xor
adc
fwait
mov
xchg
jne
pop
push
mov
jno
fnstsw
hlt
pop
aad
cli
cmpsb
push
out
test
cmp
and
pop
add
add
stos
fadds
repnz
and
jmp
push
cwtl
xchg
push
mov
pop
mulb
rcll
push
loopne
movl
int3
mov
nop
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
cmp
movl
jae
cmp
jae
xorl
shrd
movl
shr
ret
adcl
mov
xorl
xor
sbbl
and
shr
ret
xor
xor
ret
push
mov
sub
cmpl
movl
movl
jmp
movl
notl
jle
push
pushl
call
notl
andl
andl
sbbl
adcl
movl
mov
incl
mov
adcl
movl
mov
movb
sbbl
movb
and
movb
adc
movzbl
andl
mov
sbbl
sub
addl
imul
movzbl
andl
push
and
andl
mov
addl
movb
movb
andl
movb
movb
negl
mov
mov
negl
add
adcl
imul
sbbl
mov
subl
or
mov
sbbl
and
mov
movl
cmp
ja
mov
mov
mov
or
mov
mov
cmpl
not
mov
movl
jmp
movl
jb
push
push
call
dec
xor
add
mov
add
adc
xorl
xor
adc
mov
movzwl
addl
movzwl
sbbl
shr
notl
or
sub
mov
subl
movb
notl
movb
mov
orl
mov
xor
xorl
add
mov
or
mov
movzbl
and
cltd
sub
push
cmpl
not
mov
mov
jmp
mov
je
push
push
call
mov
adc
xor
neg
adcl
or
adc
pop
adcl
idiv
mov
addl
movb
addl
movb
xorl
mov
mov
negl
add
movzbl
movzbl
xorl
cltd
idiv
mov
movl
cmp
jae
movl
movl
mov
mov
push
push
push
push
call
xor
xor
or
or
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
shl
push
pop
mov
mov
mov
mov
mov
sub
movzwl
mov
movzwl
cltd
idiv
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
imul
mov
sub
mov
add
mov
cmp
jbe
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
sub
mov
and
xor
imul
mov
push
sub
push
movl
movl
movl
movl
movl
mov
xor
add
mov
or
sub
mov
mov
and
or
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
xor
or
xor
mov
imul
lea
mov
mov
imul
mov
mov
or
xor
div
mov
and
add
cmp
jb
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
lea
add
movl
movl
movl
movl
movl
movl
mov
mov
sub
add
mov
imul
mov
mov
xor
mov
xor
mov
mov
add
xor
sub
mov
mov
mov
mov
mov
sub
mov
imul
mov
or
sub
mov
xor
add
mov
xor
mov
sub
add
cmp
jbe
xor
inc
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
xor
div
mov
xor
mov
mov
div
mov
xor
div
mov
sub
mov
and
imul
and
xor
cmp
je
push
movl
movl
movl
movl
movl
mov
mov
imul
xor
add
mov
and
sub
mov
mov
add
xor
mov
mov
and
sub
mov
mov
mov
mov
mov
xor
or
imul
or
mov
imul
xor
mov
div
add
mov
and
imul
and
xor
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
movl
movl
movl
mov
mov
add
xor
mov
lea
mov
add
mov
movl
movl
mov
mov
add
xor
div
mov
xor
push
sub
imul
xor
lea
mov
movl
movl
movl
mov
mov
shr
sub
mov
imul
div
xor
or
xor
mov
movl
movl
movl
mov
mov
or
sub
or
mov
lea
mov
movl
movl
mov
mov
add
imul
xor
and
mov
movl
movl
mov
mov
and
sub
add
mov
movl
movl
mov
add
pop
div
mov
sub
add
imul
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
add
mov
adc
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
sub
mov
imul
mov
sub
imul
xor
add
xor
push
mov
add
imul
mov
div
mov
lea
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
sub
and
xor
mov
mov
lea
push
mov
push
pop
xor
div
mov
sub
add
and
lea
call
mov
mov
imul
mov
sub
add
mov
xor
sub
cmp
jne
mov
mov
sub
mov
sub
add
xor
xor
lea
mov
push
mov
and
xor
imul
mov
div
push
mov
add
push
mov
mov
imul
and
mov
imul
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
or
add
adc
push
push
push
push
call
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
imul
mov
mov
xor
mov
mov
xor
mov
mov
and
xor
mov
sub
mov
sub
mov
imul
sub
mov
movl
movl
mov
mov
or
mov
imul
mov
movl
movl
movl
mov
mov
or
xor
div
mov
mov
sub
mov
xor
div
mov
xor
pop
mov
movl
movl
movl
mov
mov
sub
mov
div
mov
or
mov
sub
mov
mov
movl
movl
mov
mov
xor
lea
xor
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
and
and
sub
mov
sbb
mov
add
adc
or
mov
mov
mov
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
or
add
adc
xor
xor
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jne
mov
add
imul
xor
mov
div
mov
xor
push
push
xor
add
xor
mov
mov
sub
mov
and
div
mov
mov
and
sub
imul
add
xor
and
mov
add
mov
add
mov
xor
or
xor
add
mov
add
mov
mov
mov
mov
xor
xor
add
adc
push
push
call
push
push
push
push
call
mov
add
adc
xor
cmp
jne
cmp
jne
mov
mov
imul
mov
or
sub
mov
lea
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
push
push
push
call
add
adc
shld
shl
mov
mov
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
push
push
push
call
add
adc
shr
xor
or
or
xor
mov
push
xor
mov
mov
mov
push
push
push
call
mov
mov
mov
add
mov
adc
mov
and
and
add
mov
adc
add
mov
adc
push
mov
mov
mov
push
push
push
call
push
push
push
push
call
mov
mov
mov
or
mov
mov
shl
mov
or
mov
xor
xor
call
add
mov
mov
push
push
adc
push
push
xor
xor
call
push
push
push
push
call
mov
mov
mov
or
mov
or
or
or
xor
xor
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
or
xor
mov
xor
mov
push
push
push
push
call
push
push
push
push
call
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
and
and
or
mov
sub
mov
mov
sub
add
add
mov
xor
cmp
jne
mov
mov
xor
div
push
push
push
xor
mov
mov
mov
mov
mov
imul
mov
div
mov
sub
xor
shl
imul
sub
xor
mov
mov
add
mov
add
mov
mov
mov
xor
and
mov
imul
mov
sub
or
mov
pop
xor
pop
pop
cmp
je
mov
jmp
mov
mov
sub
or
imul
add
jmp
movl
movl
movl
mov
mov
add
imul
mov
or
xor
mov
div
xor
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
xor
mov
xor
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
xor
sub
mov
sub
add
mov
mov
and
xor
div
mov
mov
imul
sub
add
cmp
ja
push
movl
movl
movl
mov
mov
add
xor
div
mov
mov
imul
imul
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
imul
lea
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
mov
sub
mov
sub
add
mov
mov
and
xor
div
mov
imul
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
and
push
cmpl
not
mov
not
not
jmp
movl
movzbl
je
push
pushl
pushl
push
pushl
call
sbb
adc
adc
subl
add
push
adc
mov
cmpl
mov
mov
mov
jmp
mov
movl
ja
pushl
push
pushl
push
push
call
sbb
adc
xor
mov
mov
sub
sub
xor
add
xor
or
sub
and
addl
addl
sbb
mov
shrd
shr
cmpl
movl
mov
movl
mov
jmp
mov
mov
jae
push
push
push
push
pushl
call
addl
orl
mov
add
mov
add
mov
sub
mov
mov
mov
sub
sub
xor
movzwl
sbb
mov
neg
xor
sub
or
mov
mov
cmpl
mov
mov
jmp
movl
mov
jne
call
dec
addl
xor
sub
inc
andl
mov
mov
adc
shl
cmpl
mov
movl
movl
jmp
mov
movzbl
jle
push
push
call
mov
adc
mov
adc
xor
inc
xor
or
or
notl
add
movl
mov
cmpl
mov
mov
jmp
mov
jge
pushl
push
pushl
pushl
call
andl
or
add
xor
or
shrd
xor
orl
shr
xorl
mov
and
mov
xor
or
or
cmpl
not
mov
mov
movzwl
jmp
mov
mov
jge
push
pushl
call
movzwl
xor
movzwl
add
mov
or
mov
sub
or
addl
xor
mov
mov
and
mov
mov
mov
mov
inc
mov
xor
mov
mov
mov
mov
cmpl
mov
movl
jmp
movl
movl
jle
pushl
push
pushl
pushl
call
not
andl
adc
sub
xor
shl
orl
xor
and
shld
sub
shl
inc
mov
orl
xor
addl
xor
movl
movl
movl
movl
movl
cmp
movl
jne
movl
cmp
je
cmpl
movl
movl
not
jmp
mov
movzwl
jle
push
push
push
call
sub
adc
or
sbb
adcl
sbbl
xor
adc
mov
mov
mov
and
mov
xor
shld
sbbl
shl
xor
xor
cmp
jne
movl
cmp
movl
je
cmpl
mov
movl
jmp
mov
not
jbe
push
pushl
push
pushl
call
xor
mov
add
adc
and
adc
not
mov
subl
mov
cmpl
mov
movl
mov
jmp
movl
mov
jg
pushl
pushl
pushl
call
subl
mov
add
add
add
xor
shl
mov
xorl
xor
shr
adcl
or
mov
mov
movzwl
or
mov
mov
and
mov
mov
cmpl
movl
movl
movl
jmp
movl
ja
pushl
push
call
and
orl
subl
subl
sbbl
orl
and
cmpl
movl
movl
movl
movl
jmp
movl
je
push
call
sbbl
movl
orl
andl
adcl
sbbl
xor
subl
cmpl
movl
movl
movl
jmp
movl
not
jb
pushl
pushl
call
xorl
sbb
add
addl
subl
movl
and
push
pop
sbbl
sub
mov
add
mov
lea
mov
mov
mov
sub
and
mov
xor
or
xor
mov
xorl
xor
xorl
shr
subl
shl
or
add
mov
cmpl
movl
mov
jmp
mov
mov
jae
push
call
add
sbb
or
movl
and
movl
add
mov
mov
andl
xor
movl
shr
shl
adcl
or
push
orl
lea
adcl
push
adcl
lea
push
call
cmpl
mov
movl
jmp
movzbl
jbe
push
push
pushl
pushl
pushl
pushl
call
orl
addl
movzwl
sub
mov
movzwl
sub
mov
sub
movl
sub
mov
mov
subl
xor
subl
shr
mov
xor
shl
or
cmpl
mov
mov
mov
jmp
movl
mov
jne
call
add
sub
add
adcl
mov
or
movzwl
or
push
lea
sub
push
or
mov
mov
sbb
shrd
sbb
shr
xor
add
xor
or
sub
imul
mov
notl
mov
xor
addl
xor
or
xorl
lea
adcl
push
adcl
shl
subl
call
mov
mov
xor
shl
cmpl
mov
movl
mov
jmp
movl
jne
push
push
call
xorl
xorl
add
orl
and
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
push
call
mov
mov
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
add
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
mov
rol
mov
xor
mov
cmp
je
movl
mov
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
shld
shl
xor
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
or
mov
sub
mov
adcl
or
movl
mov
jne
sub
mov
adcl
mul
ret
push
mul
cmpl
movzbl
movl
push
pop
jmp
mov
mov
je
push
push
pushl
push
push
push
pushl
call
mov
sbb
mov
not
movzwl
adc
mov
mov
add
mov
xorl
sbb
mov
adc
mov
xorl
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
sub
and
sub
push
movl
movl
movl
movl
mov
mov
imul
mov
imul
xor
div
mov
mov
push
shr
and
xor
mov
sub
mov
mov
mov
and
imul
mov
imul
add
mov
sub
mov
mov
add
xor
pop
div
mov
push
and
sub
xor
add
mov
mov
and
imul
mov
imul
or
xor
pop
sub
mov
mov
or
mov
or
mov
add
or
mov
or
lea
cmp
jbe
pop
leave
ret
push
mov
and
sub
push
push
push
mov
pushl
call
test
jg
movl
movl
movl
push
dec
movl
mov
xor
mov
andl
push
notl
push
orl
push
call
sbbl
push
andl
push
and
and
push
subl
push
andl
call
cmpl
mov
movzwl
notl
movl
jmp
movl
jbe
push
push
pushl
call
neg
subl
dec
sbb
subl
xor
or
mov
sub
or
mov
mov
xor
or
cmpl
movl
not
jmp
mov
jg
push
push
push
push
call
sbbl
xor
movzwl
and
orl
xor
mov
xor
or
mov
movl
movl
or
movl
sbb
movl
mov
xor
or
sub
add
movl
cmpl
mov
mov
jmp
mov
movl
jg
push
push
pushl
call
dec
xor
inc
adc
movl
xor
add
xor
mov
adcl
movl
cmpl
mov
movl
jmp
mov
mov
jg
push
push
call
addl
mov
sbb
sbbl
mov
mov
sub
xor
xor
or
xor
movl
or
sub
sbb
mov
cmpl
mov
movl
notl
jmp
mov
movzbl
jg
pushl
call
xor
movzbl
sub
mov
mov
sub
add
adc
xor
mov
mov
mov
andl
or
or
mov
or
mov
sub
mov
mov
sbb
or
mov
xor
subl
xor
addl
and
adcl
and
cmp
movl
jne
cmp
jne
movl
decl
movl
xor
movl
adc
movl
xor
or
mov
sub
xor
movl
mov
and
mov
sub
adc
mov
orl
imul
subl
and
notl
imul
mov
xorl
pushl
or
imul
adc
xor
mov
movl
div
mov
xor
cmpl
movl
notl
mov
jmp
movl
je
pushl
pushl
push
pushl
push
call
sbb
adcl
or
mov
sbb
mov
add
cmpl
mov
mov
not
jmp
mov
jb
pushl
push
call
neg
mov
mov
xor
sbb
sub
sbb
cmpl
movzwl
mov
movl
jmp
movl
jl
pushl
call
sbb
or
addl
and
sub
xor
add
mov
sub
dec
mov
sbbl
sub
addl
or
xor
adcl
pushl
pushl
addl
call
addl
pushl
call
movl
cmpl
mov
movl
not
jmp
mov
mov
jge
pushl
call
and
add
adc
xor
movl
adc
movl
xorl
movl
movl
movl
mov
mov
xor
mov
mov
subl
add
movzwl
mov
adc
add
mov
add
adc
and
xorl
mov
orl
and
mov
movl
movl
subl
movl
orl
movl
dec
cmp
jne
and
movl
mov
xorl
mov
subl
movl
mov
subl
call
andl
lea
mov
cmpl
movl
movzbl
jmp
movl
jb
push
call
adc
sub
and
andl
mov
xor
add
sub
imul
xor
sub
lea
mov
sub
mov
sbb
mov
add
mov
mov
decl
xor
shl
and
shr
movl
or
mov
or
mov
mov
cmpl
movl
mov
movl
jmp
mov
movl
ja
pushl
push
push
pushl
call
and
xorl
add
sub
addl
addl
cmpl
not
mov
jmp
not
jae
push
call
adc
subl
and
xor
add
adc
and
mov
cmpl
not
mov
jmp
movl
movl
jbe
push
pushl
call
or
andl
and
sub
adc
mov
and
mov
mov
mov
shrd
shr
and
mov
not
mov
movl
xor
xor
andl
or
mov
sbb
mov
mov
orl
push
addl
pushl
subl
lea
andl
push
adcl
shl
orl
call
addl
lea
addl
push
mov
mov
sbbl
lea
orl
push
mov
orl
lea
adcl
mov
adcl
mov
mov
push
call
subl
push
andl
push
pushl
xorl
call
andl
mov
or
mov
and
mov
cmpl
mov
movl
mov
jmp
mov
jg
push
pushl
push
push
push
call
sbb
xor
or
mov
adc
xor
adc
mov
shr
not
shl
or
sub
mov
or
xor
mov
notl
lea
xor
mov
lea
movzbl
or
mov
cmpl
mov
movl
movl
mov
jmp
movl
movl
je
push
call
or
add
mov
or
mov
xor
inc
add
not
mov
mov
and
mov
cmpl
mov
mov
mov
jmp
movl
mov
jne
push
call
or
sbb
addl
add
orl
mov
mov
sub
sub
movzwl
sbb
mov
and
sub
cmpl
movzbl
mov
movl
jmp
movl
jae
pushl
call
add
add
movzbl
add
add
movl
add
lea
andl
xor
cmpl
mov
mov
movl
jmp
mov
jg
push
pushl
pushl
push
push
call
or
adc
xor
mov
adc
mov
movl
movl
movl
cmpl
movl
not
jmp
movl
not
jle
push
call
subl
not
orl
and
and
mov
or
mov
movl
mov
mov
add
mov
not
mov
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
xor
shld
shl
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
shr
or
or
mov
mov
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
xor
inc
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
movl
movl
cmpl
movl
mov
movl
jmp
movl
jbe
push
pushl
push
pushl
push
call
adcl
sbb
sub
adc
mov
xor
mov
mov
mov
sub
xor
movl
cmpl
mov
movl
movl
jmp
mov
mov
jle
push
push
pushl
pushl
call
adcl
notl
dec
add
subl
sbb
not
sub
movl
mov
subl
mov
xor
xor
mov
xor
and
adc
mov
sub
xor
or
and
cmpl
mov
mov
not
jmp
mov
jl
push
push
call
inc
xorl
and
sub
sub
add
mov
add
xor
mov
or
movl
movl
mov
sbb
mov
add
xor
sub
adcl
mov
or
imul
adc
xor
mov
or
div
subl
sub
and
mov
movl
sub
movl
movl
mov
mov
adc
movl
cmpl
movl
mov
movzbl
jmp
mov
movzbl
jg
pushl
push
push
push
call
or
xor
or
or
mov
sub
add
inc
movl
mov
sbb
mov
movl
movl
mov
xor
mov
imul
adc
add
xorl
and
adc
sub
cmpl
mov
movl
mov
mov
jmp
mov
je
pushl
push
push
call
add
adc
neg
and
not
mov
sub
or
mov
mov
cmpl
mov
movl
mov
movl
jmp
movl
jne
push
pushl
push
call
inc
or
dec
sub
adc
adc
or
add
sub
add
mov
xor
adcl
div
not
mov
sub
and
mov
add
addl
mov
cmpl
mov
mov
mov
jmp
mov
mov
jle
push
push
call
add
add
sbbl
subl
xorl
movl
movl
dec
movl
cmpl
movzbl
mov
jmp
mov
jne
pushl
pushl
pushl
push
call
sbb
orl
movzwl
adc
add
mov
mov
add
mov
xor
add
mov
andl
xor
movl
div
add
and
mov
or
cmpl
movl
mov
jmp
movl
movl
jg
push
push
push
call
mov
sbb
mov
add
mov
movzbl
sub
subl
decl
adc
cmpl
not
mov
jmp
mov
movl
jae
push
push
push
push
call
xor
sbbl
mov
sbb
mov
inc
mov
mov
sub
sbbl
cmpl
mov
movl
mov
jmp
mov
movl
jg
pushl
call
mov
adc
mov
mov
adc
mov
mov
xor
xor
or
mov
sub
sub
adcl
mov
and
movl
movl
movl
and
movl
mov
sub
mov
orl
xor
sbb
xor
push
xor
pop
orl
div
mov
andl
xor
div
mov
or
sub
xor
mov
xor
movl
inc
mov
movzwl
sbb
mov
xor
div
imul
adcl
xor
xor
sub
imul
xor
dec
mov
adc
movl
cmpl
movzwl
movl
mov
jmp
movl
mov
jg
pushl
push
pushl
pushl
pushl
pushl
push
push
pushl
push
push
call
adc
xor
mov
adc
mov
mov
xor
mov
xor
or
xor
mov
movzwl
sub
or
or
movl
movl
cmpl
mov
movl
movzwl
jmp
mov
movl
ja
pushl
call
xor
dec
adc
movzbl
sbb
xorl
mov
and
mov
xor
subl
div
mov
sub
mov
orl
imul
xor
add
mov
or
add
xor
sbb
mov
sub
movzbl
or
mov
mov
movl
cmpl
notl
mov
mov
mov
jmp
notl
mov
jg
pushl
call
notl
adc
adc
sbb
movl
mov
or
and
notl
and
or
xor
cmpl
mov
mov
movl
jmp
movzwl
mov
jg
pushl
push
pushl
call
movzbl
sbb
add
negl
sub
dec
mov
movl
movl
movl
cmpl
movl
movl
movl
mov
jmp
mov
jb
pushl
push
push
call
mov
and
mov
neg
xor
andl
and
movl
mov
xor
and
add
xor
add
or
or
cmpl
notl
movl
mov
movl
jmp
movl
jle
push
pushl
push
push
pushl
pushl
pushl
push
call
adc
mov
add
or
sub
neg
sbb
sub
mov
inc
movl
cmpl
mov
movl
mov
jmp
mov
mov
jne
push
pushl
call
decl
decl
sbbl
and
movl
movl
movl
xor
mov
shr
xorl
sub
cmpl
movl
mov
mov
mov
jmp
mov
movl
jbe
pushl
pushl
call
add
xorl
mov
sbb
and
adc
or
xor
mov
lea
sbbl
push
adcl
call
addl
mov
adc
or
cmpl
mov
mov
jmp
movl
movl
jbe
push
pushl
call
sub
mov
xor
or
sub
imul
negl
sbbl
and
mov
orl
or
xor
and
lea
adc
mov
movl
movzwl
xor
movl
movl
xor
xor
or
movl
movl
and
movl
cmpl
mov
not
movl
movl
jmp
mov
notl
jg
push
call
sbb
orl
xorl
add
xor
xorl
xor
xor
xor
mov
sub
or
movl
sbbl
movl
mov
mov
mov
sub
xor
mov
sub
and
cmpl
movzbl
movl
jmp
movl
movl
je
push
push
push
push
push
call
sub
or
notl
sub
xor
add
add
mov
sbb
sub
and
sub
or
mov
sbb
lea
mov
mov
add
mov
add
mov
mov
imul
sbbl
and
cmpl
mov
mov
mov
movzbl
jmp
notl
mov
jbe
pushl
pushl
pushl
push
pushl
pushl
call
xorl
add
movzbl
adc
not
or
imul
mov
lea
mov
addl
movl
movl
movl
movl
mov
sbb
mov
or
mov
movl
xor
andl
xor
sbbl
mov
call
cmpl
movl
movl
movzbl
movzwl
jmp
movl
movl
jb
call
sub
and
and
add
adc
subl
sub
sbbl
mov
mov
sub
mov
mov
adcl
xor
xor
mov
call
xorl
or
or
sub
mov
or
mov
andl
xor
xorl
xor
mov
call
mov
cmpl
movl
mov
movl
jmp
movl
jbe
call
or
xor
inc
or
andl
cmpl
notl
mov
jmp
mov
movl
je
push
pushl
call
mov
mov
and
sbb
not
mov
sub
sbb
or
and
mov
movl
mov
mov
xor
xorl
xor
addl
mov
mov
xor
mov
xor
or
mov
sub
mov
movl
mov
mov
movl
call
cmpl
mov
movl
mov
jmp
movl
movl
ja
push
push
call
and
addl
adcl
movzbl
xor
or
mov
adcl
or
mov
or
subl
push
push
subl
push
andl
push
orl
call
movzbl
mov
cmp
movl
jne
mov
sub
mov
mov
xorl
mov
subl
xor
xorl
xor
mov
call
adc
mov
add
mov
xor
mov
mov
incl
xor
addl
xor
xorl
mov
xorl
call
or
and
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
mov
sub
mov
xor
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
add
mov
sub
xor
push
pop
div
mov
xor
add
mov
xor
mov
xor
div
or
mov
xor
mov
sub
mov
mov
sub
mov
xor
mov
div
mov
xor
div
mov
sub
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
mov
or
mov
xor
div
mov
xor
div
mov
lea
mov
mov
sub
mov
xor
mov
div
mov
imul
add
xor
mov
add
mov
and
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
imul
imul
mov
imul
mov
sub
add
mov
and
mov
sub
imul
mov
mov
or
sub
xor
mov
div
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
movl
movl
notl
jmp
movl
mov
jle
pushl
push
push
pushl
call
negl
addl
orl
adc
sbbl
sbbl
not
push
push
not
mov
or
movl
jne
cmpl
movl
mov
mov
jmp
mov
jl
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
sbb
and
or
xor
xor
mov
sub
add
add
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
movl
cmpl
je
add
mov
mov
pop
pop
movl
pop
leave
ret
movl
cmp
movl
jae
movl
cmp
movl
jae
shld
shl
ret
xor
mov
addl
xor
and
shl
ret
xor
xor
ret
