push
mov
sub
xor
jmp
into
rcr
aad
mov
cld
insb
js
js
jle
js
xlat
cmp
fld
pop
push
or
bswap
and
sbb
inc
bound
mov
or
mov
and
lods
fadds
pusha
out
outsl
adc
sahf
add
dec
lods
pop
sub
mov
lds
adc
xchg
icebp
dec
loopne
dec
call
mov
sub
sbb
xchg
sub
repz
out
cli
in
xchg
cmp
jbe
xlat
sub
add
sbb
xor
adc
fisttpll
cmp
arpl
rclb
fistpl
and
inc
push
aaa
adc
fstpt
dec
repnz
stos
ljmp
cld
sub
xorb
outsl
add
xor
les
ljmp
pop
jp
push
popa
fnsave
int3
cmpsl
mov
stos
or
stos
pop
das
dec
sub
loopne
inc
ljmp
out
xchg
jnp
pop
jbe
mov
and
xchg
daa
pop
push
push
sub
and
jns
outsl
insb
cs
in
push
fstps
lea
xor
xchg
mov
pop
aas
xor
in
out
mov
xor
pop
xor
mov
mov
xor
jg
mov
sbb
les
arpl
nop
in
fstp
inc
enter
std
repnz
dec
jns
add
push
fnstcw
lret
data16
dec
mov
push
lock
push
stos
js
jl
addr16
jns
cmp
mov
push
popa
fnsave
andl
cmp
fs
and
sbb
pop
mov
fdivr
pop
or
addl
daa
sti
mov
in
dec
repz
fmull
sbbl
mov
div
adc
or
adc
outsl
jl
jle
test
add
cmp
and
out
jge
imul
enter
movsl
sub
cs
rcrl
mov
xor
lods
cmc
adc
sbb
mov
or
imul
jp
adc
adc
daa
push
clc
scas
outsb
aam
adc
dec
xlat
jmp
push
test
jp
push
icebp
cwtl
sub
jbe
repz
call
fwait
jl
insl
mov
xor
mov
mov
or
mov
movl
mov
mov
push
or
push
add
mov
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
adcl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
sub
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
jmp
leave
rol
leave
int
fimull
leave
rclb
je
xor
jle
js
jle
js
sbb
fistps
leave
pop
int
add
out
inc
cmp
es
repz
sbb
or
dec
repnz
mov
xor
es
insl
and
jle
jg
pop
add
lcall
sbb
add
inc
push
shll
jge
sbb
or
and
cmp
jo
movsb
stos
jne
stos
popa
cwtl
and
xor
push
rol
mov
sub
icebp
cmp
bound
mov
sahf
or
xor
sahf
data16
xor
jmp
cmc
daa
mov
xchg
xchg
rclb
jo
push
add
adc
xor
fcomps
movsl
cmpsl
adc
push
push
cmp
xor
pop
mov
cmp
inc
insb
jecxz
cs
push
pop
into
sub
inc
xlat
arpl
fistps
xchg
aad
loope
fcoml
mov
mov
add
cs
pop
push
fimuls
inc
mov
test
ds
lods
ljmp
lods
fmull
dec
or
cmpsl
inc
popf
add
jmp
add
pop
mov
out
xchg
out
mov
stos
push
out
les
out
pop
push
adc
daa
xchg
push
daa
rcrb
rclb
push
xor
dec
add
xor
movsb
nop
pop
pop
movsb
fchs
jge
fildll
jo
stc
imul
inc
push
add
jge
int3
lods
inc
push
inc
mov
xchg
lods
es
pop
xorb
mov
rcll
xor
lds
mov
outsl
xor
pop
sub
and
sti
jge
loop
cltd
in
ret
pop
insl
adc
mov
dec
xor
stc
mov
add
pop
mov
mov
add
xchg
sbb
inc
jp
dec
icebp
adc
mov
test
movsb
push
xor
inc
iret
mov
or
loope
sub
adc
ret
dec
dec
out
lcall
adc
int
subl
test
in
call
mov
pop
mov
xchg
push
pop
mov
lahf
bound
and
sbb
add
shl
repnz
inc
jg
pop
cs
xor
xchg
xor
in
out
push
into
push
stos
or
sbb
cmp
orl
xor
fcoml
add
stos
inc
add
leave
test
inc
add
int
inc
add
mov
xor
jmp
ret
ret
leave
lret
ret
out
repz
movsb
and
add
jle
js
hlt
and
pusha
ficompl
mov
sub
jb
push
iret
dec
xchg
push
xorb
test
sbb
ret
cmp
mov
cmp
das
jb
int
es
shlb
or
test
mov
shrb
imulb
mov
xor
aam
insl
lcall
repz
int
pop
sub
popa
hlt
mov
or
imul
clc
jo
out
jmp
out
mov
mov
pop
and
mov
push
loope
or
std
push
clc
inc
cmp
shl
pop
jns
test
cld
popf
jle
adc
fdivp
pushf
xor
mov
clc
mov
sub
adcb
pop
rolb
adc
stos
mov
data16
jp
movsl
xchg
test
jp
cwtl
push
in
push
adc
pop
xor
xor
push
les
dec
sub
aad
dec
dec
lahf
adc
sahf
mov
add
and
loopne
lahf
sti
in
add
pop
loope
out
inc
cmp
int
loope
xchg
cmp
cmpsb
ror
cmp
xor
mov
stos
icebp
push
push
xor
jge
mov
orl
mov
mov
xchg
jle
das
lods
xor
inc
xchg
dec
jmp
inc
jne
std
adc
adc
popf
cmp
lods
fisubrs
and
enter
andb
int3
fildll
jl
loope
mov
mov
or
dec
mov
divl
imul
push
sbb
sysret
adc
cmp
std
mov
inc
and
dec
jmp
loopne
jbe
stos
sub
sbb
jne
add
lods
pop
scas
js
sub
dec
mov
int
repz
cmp
mov
cwtl
xchg
lahf
arpl
mov
repnz
pop
jp,pn
pop
and
or
mov
inc
cmpsl
popa
mov
aaa
scas
dec
sbb
shlb
xor
dec
push
adc
mov
mov
shll
pop
rolb
mov
sub
stc
push
inc
add
pop
mov
adc
incl
xchg
mov
iret
lock
sarb
cmp
cltd
sub
in
rorb
jb
adc
es
clc
pop
aas
add
mov
sbb
movl
lea
jmp
xlat
ret
ds
fcmovnu
loope
xchg
scas
xor
pop
addb
js
jle
js
shll
inc
mov
jg
xor
inc
test
xchg
pop
scas
imul
push
push
mov
jbe
mov
cmp
jge
push
mov
xor
bound
push
adc
int
push
loopne
xor
mov
sub
stos
mov
insl
mov
popf
mov
or
js
xchg
adc
testb
adc
or
ljmp
shll
pop
loope
jo
lcall
and
push
mov
pop
arpl
mov
mov
cld
test
mov
mov
dec
xchg
mov
lea
inc
or
xor
rorb
pop
or
or
mov
imul
mov
or
push
test
out
jo
mov
mov
jecxz
push
shll
addr16
jmp
sahf
cmp
xchg
and
outsl
into
push
mov
cmpsl
rorb
dec
cs
or
sub
test
out
and
push
adc
loop
popa
bound
and
loopne
movsb
lock
mov
scas
push
mov
popa
clc
lock
mov
pop
pop
cld
xor
notb
dec
outsl
test
dec
mov
in
cmc
ret
addr16
dec
ds
insb
dec
dec
fcos
push
xor
aaa
out
mov
fs
ret
scas
and
xchg
dec
cmp
je
sar
popf
xor
loope
je
inc
loope
pop
lret
mov
aam
rcll
jmp
xchg
jae
negl
dec
outsb
and
jg
cwtl
add
ficoms
cmp
jle
inc
aad
xchg
mov
aaa
pop
aaa
sub
xchg
scas
or
std
adc
mov
mov
mov
pop
es
jle
sbb
dec
inc
pop
inc
repz
lea
cmp
mov
imul
imul
adc
sbb
shl
cmp
add
sub
sub
push
mov
pushf
jg
and
cmp
jp
mov
jns
lods
not
add
mov
mov
mov
xor
int
cmp
sbb
cmpsb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
sbbl
mov
decl
xor
add
mov
movzwl
and
mov
mov
mov
adcl
mov
xorl
mov
mov
movzwl
jmp
lret
iret
cmp
aam
leave
fldcw
lret
xor
push
js
jle
js
mov
jns
enter
xchg
mov
ret
cmp
dec
pushl
sarl
icebp
cmpsl
push
dec
push
push
stc
push
das
sub
inc
lods
imul
cmc
jecxz
dec
jg
jae
adc
out
xchg
pop
and
inc
pop
in
or
push
cmpsb
movsl
push
add
add
lods
lcall
aad
fbstp
push
sti
jns
repnz
pop
jbe
add
mov
pop
lahf
mov
cwtl
add
stos
sub
jg
push
iret
jne
lea
icebp
dec
inc
mov
xor
mov
movsl
jbe
lock
jg
inc
pop
test
mov
push
int
jae
inc
ret
jb
mov
stos
push
xchg
ljmp
iret
roll
fdivrs
jns
push
outsl
xchg
aas
and
mov
mov
andnps
pop
push
in
cmc
scas
insl
cmpsl
test
push
arpl
les
insb
jb
fwait
adc
xchg
sub
and
lock
xchg
add
movsb
jg
cld
cmpsl
mov
dec
das
mov
adc
popa
sub
test
jecxz
test
and
jmp
inc
insb
mov
in
out
push
repnz
push
fdiv
mov
mov
aas
mov
lods
push
call
adc
sarb
fs
popa
fcomi
movsl
pop
cmpsb
int
cmp
push
or
scas
xor
xchg
adc
test
inc
cmp
cwtl
jge
xor
inc
jne
push
mov
mov
sbb
push
push
je
push
sub
out
mov
push
test
js
cmpsw
stc
add
insb
mov
jo
ret
sbb
negb
add
pop
pop
and
sbb
out
mov
adc
mov
push
or
lea
cmc
mov
sar
lcall
repz
das
cmpsl
dec
test
adc
push
cmp
popl
lods
in
cli
inc
bound
cmp
jge
or
outsl
gs
cmp
int3
mov
add
out
push
insb
push
add
pop
fcoml
into
loope
xchg
mov
mov
call
rclb
fcomi
bt
jecxz
xchg
jl
adc
aad
pushf
cmpl
cmpsb
into
adc
rolb
cltd
stos
inc
add
add
mov
mov
addl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
jmp
mov
jmp
rcl
ret
fld
aam
push
shl
cmp
pop
xchg
js
jle
js
outsb
mov
or
scas
out
sarl
xchg
xor
lea
mov
cli
jmp
push
xchg
xchg
xor
inc
mul
nop
into
pop
cli
xor
scas
inc
mov
pop
cmp
out
pop
push
insl
dec
mov
inc
jae
push
cmpsb
in
in
mov
ja
jmp
sub
xor
sarb
dec
add
xchg
mov
mov
out
popa
dec
es
or
and
loope
sbb
jmp
les
out
adc
xor
cmp
imul
sarl
cmp
and
addr16
and
in
add
pusha
xor
xor
mov
je
cwtl
outsb
xorl
ss
cld
stos
movsl
daa
outsl
stc
push
sbb
cmp
xor
movsl
fdivrs
pop
dec
fnstsw
jne
sbb
popf
pop
rcll
push
dec
pop
xor
in
int3
add
test
es
pop
addr16
into
pop
add
mov
or
or
in
mov
adc
fsincos
or
shl
xchg
scas
adc
cmp
or
mov
or
cli
adc
mov
lret
mov
andl
addl
xor
xor
cmp
cs
jl
dec
xchg
and
fwait
jle
dec
arpl
mov
jmp
adc
insb
and
icebp
mov
imul
aas
push
cmpsb
das
mov
and
movsl
dec
xchg
pop
adc
test
addr16
jns
inc
mov
loope
cld
aad
into
jnp
cwtl
mov
addr16
xlat
lret
icebp
data16
push
sub
fsubs
outsb
adc
sbb
mov
cmp
movsb
mov
sbb
addb
cmp
mov
push
mov
jns
test
ss
popf
cmpsl
push
adc
sbb
enter
push
mov
pushf
sbb
mov
inc
sub
sub
shrb
push
and
inc
pop
or
rorb
jp
or
mov
incb
ret
or
push
xor
and
sbb
mov
sbb
imul
sarl
popf
movsb
sbb
push
pop
lcall
jmp
xor
andl
add
cmp
jne
mov
mov
sbbl
xor
add
jmp
xlat
cmp
fxch
mov
push
cltd
cmp
js
jle
js
sbb
add
cmc
shrb
or
mov
iret
pop
icebp
sbb
mov
adc
pop
sti
pop
push
inc
add
mov
dec
mov
loopne
cli
and
cmp
gs
adc
sbb
cmp
movsb
add
jbe
movsl
sub
lret
mov
bound
xchg
jb
aad
adc
xor
jae
jle
icebp
adc
outsb
mov
test
movsb
jmp
xor
jb
fisttpll
push
add
pop
sbb
and
addr16
nop
mov
mov
repnz
outsb
test
mov
lock
mov
xchg
xchg
icebp
ret
out
mov
pop
jmp
dec
cmc
jo
faddl
push
das
sub
cmpsb
mov
enter
pop
cmp
pop
inc
jmp
in
xor
add
xchg
sbb
sarb
stos
outsb
push
inc
movsl
loopne
adc
test
mulb
add
push
lds
or
shll
aam
lods
xchg
and
xchg
add
cld
test
aad
loope
mov
in
push
push
fwait
lds
mov
adc
int
add
out
mov
outsl
jecxz
adc
pop
xlat
sbb
pushf
pushf
push
inc
cmp
pusha
leave
adc
xchg
fnstsw
or
pop
dec
cmp
jo
daa
ljmp
cmp
gs
mov
xor
cmpsb
mov
and
xor
jmp
and
jmp
sbb
mov
or
pop
iret
popa
sbb
xchg
ja
out
add
out
and
sarl
sbb
and
push
add
cmp
xchg
cmp
xchg
push
test
inc
cmp
xchg
sti
bound
lcall
fwait
stc
pop
mov
xor
cmpl
pop
loopne
xlat
lods
xor
mov
loopne
scas
stos
popa
xor
adc
fs
out
sub
lods
outsl
cmp
mov
out
stc
mov
jecxz,pt
std
bound
outsl
cwtl
mov
mov
and
es
push
daa
popa
fadds
mov
sti
add
mov
mov
add
jns,pn
stos
mov
mov
inc
mov
pop
insl
mov
dec
inc
shlb
mov
adc
xchg
add
test
or
add
mov
jmp
aas
lret
ret
aad
flds
inc
mov
vmread
jle
js
cmp
add
or
xchg
mov
cltd
mov
mov
out
call
loope
adc
push
push
add
cmpsb
test
ss
push
jmp
fcoms
xchg
adc
aad
shlb
loopne
pop
das
mov
push
mov
jb
cmpsb
jge
pop
pop
dec
sub
subb
jb
xor
lea
push
add
fs
inc
xlat
inc
dec
cmpb
cmp
cmp
cli
xor
pop
and
cmp
pop
enter
adc
jl
pop
and
test
and
sbbb
stos
dec
subl
je
xor
jno
insl
or
in
pop
fstps
add
jecxz
mov
les
dec
cmp
push
push
add
subb
movsb
cli
outsb
les
int
enter
cwtl
add
pusha
cmc
adc
js
ljmp
frstor
mov
mov
sbb
mov
rorl
int3
or
std
xchg
int3
pusha
dec
out
sahf
in
cli
push
and
ja
int
ret
xor
repz
pop
loop
fidivrl
xor
inc
mov
fsub
mov
filds
lcall
das
pop
dec
repnz
adc
rcll
xor
jne
in
mov
mov
sbb
jge
lods
test
ret
sti
sarb
or
and
enter
cmp
adc
inc
cmp
les
jmp
daa
cmp
std
roll
shlb
popa
jbe
fists
cmpsb
fisubs
andl
or
xchg
xchg
mov
mov
mov
add
xchg
or
test
sbb
bound
mov
pop
pop
mov
or
stc
sub
mov
icebp
lods
fisttpl
mov
push
sti
and
inc
movsb
sahf
jbe
xchg
mov
jnp
or
jb
xor
sbb
out
cmc
loop
je
xor
jno
out
lock
mov
incl
aas
mov
lahf
aam
adc
jg
jmp
pop
rorb
imul
aas
mov
leave
mov
inc
imul
popf
fdiv
add
cld
in
loop
push
or
dec
adc
into
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
lea
xor
sub
mov
movzwl
cmp
mov
movzwl
jg
xor
jmp
ret
ror
into
fcmovnbe
out
dec
stos
es
mov
or
js
jle
js
imul
mov
xor
add
js
push
mov
jg
lcall
lods
dec
xchg
imul
push
xorb
xchg
xor
daa
mov
sbb
xchg
lds
or
popa
or
pop
mov
arpl
fidivrl
shll
xchg
loopne
inc
imul
push
pop
fstcw
lods
fidivs
inc
lret
xchg
jle
into
mov
jp
inc
sub
mov
stos
xchg
dec
lods
xchg
imul
in
adc
sbb
sub
push
rclb
add
lea
fnstcw
cmovns
push
mov
sti
cmp
jns
into
sbb
jne
mov
pop
adc
pop
add
sbb
pusha
or
testb
mov
shrb
sub
imul
jecxz
inc
push
dec
adc
cltd
adc
mov
inc
sub
pop
and
nop
gs
adc
xlat
push
mov
dec
in
stos
outsl
or
adcl
sub
iret
daa
sbb
push
jae
add
push
push
xchg
mov
imul
incb
jge
orb
xchg
xchg
jne
in
dec
shlb
test
in
out
mov
fbld
mov
xor
ficompl
insb
repz
lret
or
mov
cmpsl
add
mov
or
int3
pop
or
fisubs
repnz
sbb
pop
rclb
xor
pop
add
add
mov
dec
ja
mov
cwtl
mov
cmp
call
or
mov
shlb
mov
pushf
jae
jg
rclb
mov
mov
cmp
imul
xchg
cld
cmp
and
pop
jns
iret
popf
push
sbb
lods
movsb
sbb
mov
imul
cmc
mov
ret
push
and
and
jb
and
jno
xorb
hlt
fwait
bt
inc
ds
or
test
fistpll
cmpb
xchg
jg
mov
aas
rolb
pop
cmp
mov
ss
fdiv
sbb
jmp
jmp
jb
and
enter
add
ror
int
rcr
aad
bound
cltd
mov
mov
jle
js
xchg
mov
mov
xchg
cld
fbld
lods
add
or
jae
mov
rcl
jl
pop
ds
xchg
frstor
std
jge
mov
mov
lds
pop
in
mov
gs
and
cmp
movsl
mov
or
mov
mov
sub
cmp
jl
std
bound
or
aaa
cli
pusha
fwait
in
or
lods
sub
pop
push
fsubs
mov
push
scas
cmp
xchg
data16
and
test
leave
mov
cmp
push
xchg
push
sbb
jecxz
out
lret
jns
call
insb
gs
jecxz
sarb
lahf
sub
xchg
andb
fs
ficoms
outsl
cmpb
mov
xchg
fsubp
lcall
mov
mov
xchg
div
push
mov
lock
aam
add
push
hlt
call
mov
scas
inc
jg
xchg
movsl
dec
mov
mov
xchg
outsl
xor
mov
cmpsb
push
mov
add
or
lret
sub
adc
mov
mov
jmp
mov
xchg
mov
mov
inc
pop
mov
jo
js
push
jge
test
fstps
or
push
dec
push
xor
inc
inc
iret
into
leave
sbb
and
add
xchg
push
pop
and
pop
stos
jp
movsl
lock
enter
es
dec
sbb
enter
int3
imul
mov
inc
iret
or
jne
inc
pop
dec
jno
lea
or
push
lret
cld
stc
cmp
cli
popa
mov
test
pop
nop
sub
sbb
push
jmp
pop
inc
cli
imul
adc
loop
scas
or
cmc
add
mov
je
adc
sarb
aad
iret
mov
mov
mov
stos
xlat
mov
arpl
dec
sbb
das
popf
pop
push
test
hlt
xor
into
cmpsb
pop
jne
outsl
xchg
in
call
sbb
xor
push
out
notl
in
lods
cmc
cltd
adc
aam
xchg
mov
xlat
es
nop
sbb
mov
mov
mov
jne
insl
jecxz
or
inc
test
or
clc
pop
fcmovb
xor
dec
jns
in
mov
sub
xchg
inc
loop
std
add
mov
jle
mov
lahf
out
iret
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
jmp
leave
vpsubusw
leave
repnz
cld
jb
push
test
pop
js
jle
js
lods
adc
mov
fidivs
in
gs
add
cmpsb
and
div
pop
sbb
int
pusha
mov
mov
jae
repnz
push
ret
icebp
xor
adc
or
in
testl
cmp
movsb
pop
in
xchg
scas
inc
push
jae
es
es
mov
stos
mov
mov
push
imul
in
popf
pop
pusha
adcl
imul
cmc
mov
mov
xlat
arpl
cmp
repnz
xor
dec
fstl
xchg
pop
fsubs
inc
pop
gs
andnps
lcall
add
pop
sbb
loopne
lds
push
mov
mov
adc
or
jbe
iret
in
aaa
sub
xchg
dec
adc
push
add
xchg
mov
sbb
pop
das
loope
sarb
imul
xchg
pop
repz
lock
std
dec
push
test
mov
cmc
mov
cmpsl
jmp
sub
andb
daa
stc
xchg
dec
xor
test
xor
pusha
out
test
push
mov
push
inc
mov
sub
cmp
cmpsb
adc
aam
lods
inc
jle
pop
scas
mov
jge
imul
mov
sbb
jl
xchg
pop
aaa
xor
int3
mov
jnp
add
shlb
add
push
add
sti
and
pop
aaa
push
das
mov
pop
and
rcrb
shlb
push
in
mov
sbb
cmp
or
mov
mov
sarl
mov
mov
add
mov
xor
out
push
dec
mov
jp
xchg
mov
int
in
and
mov
adc
dec
stos
push
pop
xchg
imul
pop
int
xor
mov
sbb
mov
sbb
stos
aam
dec
dec
xor
dec
in
iret
lahf
lods
push
jno
jb
fidivl
scas
mull
push
xchg
push
sbb
sub
orb
sti
push
xchg
in
cmc
inc
test
cmp
dec
cvtps2pd
scas
mov
mov
jno
cmp
xor
mov
fwait
and
shl
push
ds
adc
and
mov
cmp
into
sub
mov
mov
jmp
ror
ror
ror
test
xchg
push
add
out
xchg
adc
js
mov
imul
inc
jns
nop
loop
stc
scas
gs
or
mov
hlt
pop
jmp
xlat
out
mov
addl
aad
cmp
dec
mov
jo
ja
mov
mov
or
mov
xor
or
adcl
pop
mov
mov
xor
clc
mov
push
fwait
shrb
test
bound
cmp
add
or
add
ret
insb
aas
jmp
repz
adc
push
test
faddl
add
jp
js
inc
and
arpl
fimull
sbb
and
mov
and
cmc
xlat
xor
add
xchg
or
mov
orl
cmp
jle
jo
leave
xor
xchg
ss
test
inc
and
xchg
shrl
aas
inc
or
inc
inc
into
pop
adc
fcompl
pushf
adc
mov
mov
push
dec
jmp
fwait
test
sbb
test
sti
test
add
jmp
mov
stos
pop
pusha
std
dec
sbb
dec
sub
mov
xor
lods
add
incl
xchg
inc
insl
test
dec
cli
pop
ret
jmp
inc
rorl
dec
push
push
fcompl
addr16
dec
dec
mov
mov
in
int
lcall
xor
repz
or
jle
inc
jae
icebp
mov
mov
andl
jns
or
xchg
or
xchg
xchg
jl
jae
cwtl
inc
loope
ret
sahf
mov
iret
mov
ja
aaa
jl
jecxz
hlt
inc
sbb
jle
and
jmp
sub
insl
jbe
pop
test
mov
mov
lock
cmpsl
jns
scas
in
cmp
jne
out
loopne
jns
insl
test
fisubrs
je
dec
pop
lock
xor
leave
into
leave
adc
sbb
pop
data16
out
xchg
sahf
mov
and
into
iret
pusha
bound
cmpsb
push
adc
enter
rcl
cmp
lcall
push
subl
xor
sahf
push
inc
sbb
in
bound
scas
repnz
das
lds
in
xchg
jne
or
xor
lock
iret
mov
mov
scas
jmp
out
js
dec
mov
leave
cmp
aam
add
pop
sub
repz
lds
or
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
jmp
cmp
cmp
rcr
fidivl
in
add
sbb
jle
js
inc
stos
adc
add
mov
shll
cmpsl
jle
cltd
orl
cwtl
test
inc
pop
jno
pop
je
nop
cmpsl
xor
sub
jne
pusha
lahf
lds
pop
mov
jne
aas
mov
or
test
js
fisttps
pusha
xchg
pop
outsb
movsb
add
lds
mov
sbb
frstor
arpl
mov
push
int
xchg
in
xor
cmc
stos
outsb
lds
fs
lret
push
bound
enter
rcl
adc
ja
cli
mov
enter
dec
mov
add
xor
xchg
enter
cmpl
in
out
xor
ficoml
lcall
mov
imul
stos
mov
push
xor
xor
sbb
mov
inc
xchg
xchg
rorl
jmp
int3
add
loopne
sub
mov
jnp
mov
sub
nop
das
push
out
movsl
lds
repnz
imul
lahf
adc
adc
jb
mov
lods
mov
jmp
inc
loopne
adc
pop
cli
jns
cmp
pop
pop
xor
das
hlt
out
jl
xchg
xchg
ffreep
clc
lock
pusha
dec
adc
les
or
jb
dec
dec
pop
pop
movsl
jg
cmpsb
stos
out
jmp
pop
pop
cmc
mov
cmp
sub
js
repz
outsl
cltd
es
jecxz
add
xchg
pushf
sub
outsb
hlt
or
int3
dec
inc
les
cmc
dec
fdivl
sbb
dec
inc
xchg
lahf
leave
out
lea
inc
or
ret
push
lock
aas
imulb
and
je
out
aad
sub
xchg
mov
aaa
call
push
fmull
dec
push
pop
inc
out
lcall
js
or
shl
pop
es
insl
sub
jo
pop
mov
jl
pop
mov
testl
xchg
popl
sub
lds
movsl
insb
pusha
cltd
js
es
xor
out
xor
push
and
sbb
sub
sti
xor
pop
fwait
or
cli
sbb
mov
popf
shl
lds
jns
mov
push
mov
xchg
xchg
jmp
adc
fsts
xchg
and
test
movb
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
jmp
xlat
aas
mov
fwait
clc
movb
sbb
jle
js
push
cs
or
add
pop
xlat
add
imul
mov
xor
push
js
xchg
frstor
stos
sub
inc
fs
out
sub
movsb
sbb
in
faddp
leave
cmp
pop
and
test
add
jg
outsb
aaa
test
pushf
fcmovu
mov
mov
lds
pop
jb
arpl
fisttps
ss
push
scas
pop
xchg
addl
pop
mov
pop
pop
push
movsb
data16
mov
pop
cmpl
shrl
and
mov
into
fistps
dec
and
pushf
out
adc
insl
add
jmp
ss
mov
fisttps
adc
pop
add
inc
fdivs
insl
or
pop
rol
mov
and
sbb
ljmp
push
fabs
divb
xchg
pusha
repz
sbb
lds
call
mov
push
in
add
mov
dec
xchg
xchg
xor
sbb
or
ret
push
pop
xor
test
inc
lock
jne
mov
adc
mov
fcoml
jns
jbe
jo
faddl
lods
outsb
popa
add
mov
fldcw
aaa
mov
lods
sbb
divb
mov
mov
arpl
dec
mov
js
cli
sbb
clc
inc
bound
pop
test
stc
jno
pusha
add
and
enter
lea
lock
in
cmp
pushf
add
sub
adc
fs
cmpsl
jge
pop
out
rcrl
and
fcmovb
mov
cmpsb
pop
or
incl
mov
stos
push
cmpsb
test
imul
outsl
mov
mov
push
shll
push
mov
sti
test
mov
cwtl
mov
xchg
push
rolb
movsl
dec
hlt
mov
cmc
outsb
xchg
ja
rcll
mulb
xor
or
pop
jae
push
out
stos
xchg
and
jl
int
mov
xchg
mov
mov
sti
cmp
cmp
out
dec
push
cmp
movsb
leave
xor
sub
push
inc
rolb
add
lods
popf
mov
jp
ljmp
cltd
adc
jnp
shll
jp
dec
push
mov
or
lcall
ror
mov
arpl
adc
js
jle
js
mov
xor
push
xlat
sub
inc
pop
rcrl
inc
je
sbb
jp
push
push
push
fwait
or
pop
fwait
sub
sub
push
cmpsb
xor
stos
mov
aam
mov
popa
ds
repnz
cmp
xor
aad
int
inc
jnp
or
pop
shlb
push
sbb
gs
stos
xchg
mov
sbb
mov
lods
enter
icebp
pop
frstpm(287
add
jg
xchg
cmp
sub
pop
adc
mov
movsl
pushf
push
mov
mov
add
repnz
lock
pop
pop
dec
fnstcw
dec
fmuls
into
test
lahf
leave
dec
xor
push
jp
jne
int
jle
movsb
in
mov
inc
sub
fbld
jl
shrl
xchg
pop
push
and
ss
xchg
jb
aad
imul
aaa
inc
mov
xor
test
mov
add
cld
bound
and
mov
jge
out
out
lret
hlt
or
aam
adc
std
mov
mov
and
xor
inc
xchg
outsb
dec
sub
jp
adc
cmp
pop
or
pop
mov
xor
cmp
pushf
mov
je
jmp
cmp
add
or
outsb
mov
pop
xchg
or
jbe
mov
and
int
push
cmpsl
pop
sub
push
inc
inc
call
repnz
mov
sub
jg
sbb
xchg
mov
sub
dec
cmp
pop
mov
in
movsb
jae
je
fists
andb
xchg
enter
mov
outsb
pop
fstpt
push
test
sti
jb
sti
mov
imul
pop
int
cmp
hlt
mov
fbld
mov
mov
cld
mov
mov
lods
int
or
jg
jae
pop
jmp
mov
aad
push
push
gs
stos
cmp
jge
inc
iret
sti
movsl
mov
sbb
pop
add
lahf
cmp
loopne
or
pop
sti
aad
dec
lods
testl
fimull
int
sub
stc
mov
or
mov
icebp
hlt
adc
fcoms
cmp
push
ja
cmp
cmp
je
jmp
leave
rol
rcr
rcr
ss
fwait
push
insl
mov
js
jle
js
add
xchg
mov
rcr
ret
cmp
popf
clc
pop
or
in
jl
mov
lret
test
pop
mov
scas
sub
sahf
mov
daa
jmp
or
call
in
sbb
add
pop
adcb
adc
popa
mov
cs
shll
daa
icebp
mov
push
repz
sti
pop
pop
ljmp
xchg
or
adc
xchg
pop
sub
rcr
cmp
lods
hlt
or
push
subb
pop
outsb
in
sahf
fcmovb
jno
shrl
push
fcoml
mov
std
jnp
inc
pop
and
inc
or
lods
pop
pop
loope
inc
std
mov
xor
jns
mov
add
les
mov
cmp
push
pop
inc
or
adc
adc
xchg
mov
add
xchg
add
or
mov
lods
testl
test
jns
je
xchg
or
loope
inc
mov
xchg
imul
jmp
and
xor
mov
in
cmp
inc
int3
mov
orb
pop
cld
loope
inc
or
aam
adc
into
pop
je
dec
cmp
xlat
loope
call
xor
sarb
sahf
flds
sbb
fwait
lret
icebp
shld
dec
jbe
xor
and
shlb
add
push
inc
pop
add
mov
dec
les
add
idiv
imul
push
cli
adc
scas
ret
sub
sbb
push
addr16
push
inc
mov
xchg
xchg
cltd
jl
ja
push
or
pop
test
mov
xchg
and
ror
xor
xchg
xor
inc
pop
mov
pop
aam
shll
insl
mov
scas
mov
xor
pop
sbb
lds
fucompp
imul
fiaddl
lods
push
orb
daa
aam
jnp
jnp
movsl
jne
pop
cmp
inc
popl
in
leave
jp
push
jp
ja
in
insl
xchg
imul
movsl
mov
sbb
and
sbb
dec
adc
fs
pop
adc
cli
mov
push
jl
mov
mov
xor
add
mov
jmp
jmp
ds
lret
fldenv
jae
leave
sbb
js
jle
js
mov
mov
inc
push
mov
xor
jns
fists
sub
jb
scas
cmc
and
clc
mul
push
dec
mov
imull
mov
pop
fucomi
fsts
mov
adc
ret
mov
daa
cwtl
cmp
pop
or
jnp
enter
jecxz
leave
cmpsb
insl
insl
clc
sub
mov
inc
xchg
xlat
jne
pushf
out
adc
rolb
stc
mov
dec
es
ret
mov
sti
adc
xchg
and
aas
jmp
rorl
xchg
mov
nop
lds
inc
test
jl
xor
js
iret
popa
xchg
cs
jb
pop
push
bound
negb
add
mov
test
sarb
mov
leave
gs
outsl
pop
xchg
test
lods
cmp
ret
arpl
xchg
test
mov
push
jo
aaa
jge
aaa
gs
bound
lret
mov
add
aaa
lret
xlat
adc
shlb
adc
mov
jne
jo
jg
mov
cwtl
xchg
cmp
cwtl
xchg
mov
ficompl
scas
les
jb
or
fadds
outsl
add
jnp
mov
sbb
and
jnp
adc
mov
cmc
cmp
jle
lcall
sarb
jge
and
adc
lock
test
jo
addb
jg
inc
push
jmp
inc
leave
jbe
scas
xlat
jne
mov
int
cmp
dec
sar
ljmp
cmpsb
pop
or
mov
fwait
xchg
add
mov
and
lahf
out
or
notb
or
in
jb
out
in
add
dec
fimuls
std
push
es
jns
in
sub
repz
stos
hlt
bound
jmp
shll
shrb
add
xchg
fcompl
in
jge
pcmpgtw
cmp
push
ss
cwtl
sbb
lahf
push
mov
stc
push
mov
pop
cwtl
push
or
push
insl
adc
gs
into
outsl
push
lods
jmp
xchg
or
inc
ficoms
jg
mov
jne,pt
out
loop
outsl
insb
dec
sti
loop
mov
ret
and
cmp
and
divb
iret
out
add
data16
or
test
cmp
xor
add
add
mov
mov
mov
jmp
aas
leave
enter
fxch
mov
sub
js
jle
js
clc
sub
mov
test
cmp
cld
in
push
jg
sbb
xchg
mov
inc
addr16
sub
fwait
mov
into
mov
inc
test
daa
outsl
pop
jo
mov
xor
inc
decb
xchg
fbld
mov
dec
ja
leave
or
xchg
or
popa
jbe
jae
jns
add
fstpt
pop
sbb
inc
mov
lea
dec
ret
into
icebp
cmc
ja
jmp
pop
xchg
xchg
push
add
sbb
pop
fucomi
ljmp
lods
shl
int3
cs
jae
int
pop
mov
ficoml
arpl
stos
mov
sub
out
push
sbb
pop
adc
hlt
repnz
sub
push
xor
mov
leave
inc
ret
jno
push
xlat
adc
pusha
scas
cmc
mov
dec
dec
mov
add
mov
fsubrs
mov
mov
repnz
insb
dec
sarl
push
fwait
daa
aaa
jg
icebp
xchg
out
adc
jnp
sbb
cmc
mov
mov
in
jle
in
dec
cmp
push
in
pop
jl
sbb
jno
or
push
adc
movsl
inc
add
push
orl
cs
mov
sarl
sbb
and
inc
mov
popa
sbb
aas
sar
imul
jge
lcall
ljmp
insb
ficompl
mov
dec
movsl
xor
inc
sbb
xor
gs
and
jae
push
sub
push
js
imul
rcrl
lds
jo
xchg
addr16
mov
inc
pop
iret
cmpsb
lods
jno
fldl
pusha
cli
scas
xchg
adc
sbb
push
or
lea
xor
push
jne
repz
daa
fldcw
mov
push
fstpl
cmp
adc
gs
dec
push
out
jne
cwtl
out
adc
fsubrs
sbb
adc
in
movsb
ret
push
or
xor
sbb
push
push
nop
loopne
lds
aaa
xchg
sbb
ljmp
add
in
xchg
jb
fsubs
data16
inc
sbb
icebp
adc
mov
lret
mov
pop
sbb
or
fdivr
cmp
retw
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
mov
add
push
xor
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
decl
movl
mov
not
jmp
rol
lret
leave
lret
leave
lds
dec
inc
insb
lods
mov
jp
sub
dec
jle
js
dec
or
test
insl
stos
inc
xchg
lea
test
mov
add
les
xor
mov
jmp
add
inc
in
js
mov
mov
jecxz
cmpsb
mov
lret
push
or
or
lret
rcrl
dec
jp
popf
sub
stc
and
jb
out
push
test
cs
outsl
jp
scas
das
ja
add
mov
in
mov
addb
adc
imul
fsts
int3
mov
mov
inc
stos
mov
xor
out
aad
adc
ljmp
or
cmpsl
pop
xchg
lret
mov
fwait
jb
addr16
cmp
cmp
lock
dec
mov
fsubr
xchg
jmp
inc
mov
and
in
dec
lret
jae
xchg
sub
ret
jl
outsb
in
push
and
ljmp
inc
out
pusha
add
dec
cli
and
mov
scas
hlt
imul
jo
mov
cs
pop
loop
ret
xchg
inc
xchg
add
mov
fidivs
syscall
lcall
xchg
pop
test
add
push
and
push
jp
jp
repz
push
pop
lods
xchg
xchg
sub
std
dec
lods
mov
mov
hlt
push
add
aas
mov
or
add
cmc
adc
hlt
test
shll
test
cwtl
in
mov
lret
cmp
notl
jb
jecxz
or
inc
push
cmp
daa
push
inc
scas
push
inc
insb
rcrb
jno
add
insb
ret
sarl
cmp
add
out
push
int3
repz
add
mov
nop
mov
mov
push
mov
lahf
loopne
out
mov
or
mov
cmp
repnz
xchg
push
test
cwtl
fwait
xor
sub
aam
fwait
cmc
xor
daa
cmp
stc
mov
mov
push
mov
mov
sub
in
add
mov
lret
sub
sub
xchg
test
cmp
mov
xor
scas
inc
mov
mov
dec
mov
cmp
aam
pop
ret
fldt
inc
cmpsb
mov
adc
pop
stos
or
dec
or
push
in
sbb
lahf
hlt
mov
xor
daa
pop
mov
xchg
pop
outsl
imul
loopne
sbb
mov
inc
push
fnstcw
ror
and
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
push
push
push
push
call
jmp
xor
jmp
rol
int3
pop
test
cltd
sub
js
dec
jle
js
popf
jmp
int3
scas
push
imul
pop
jge
and
pop
lcall
pop
mov
hlt
jnp
adc
mov
popa
add
es
sbb
or
sbb
pushf
adc
repz
aad
mov
jns
sbb
pmulhw
outsb
test
sub
aad
lret
sub
cli
in
jge
lret
aaa
add
rcll
push
jp
popa
cmc
jp
pop
scas
pop
inc
clc
xchg
out
fsub
je
push
pop
sti
push
or
cmp
cmp
sbbb
cmp
sub
inc
mov
bound
stos
or
les
cwtl
inc
dec
lret
sbb
loope
aad
nop
fidivs
ret
ja
cmc
cmp
pop
dec
dec
add
sub
fwait
jns
push
and
mov
call
pop
jo
in
stc
sub
mov
sahf
cmp
daa
xchg
loop
lods
in
push
sahf
and
out
dec
jno
arpl
add
call
push
lock
out
pop
adc
cmp
loopne
insb
xchg
sahf
jmp
mov
jecxz
stos
push
mov
push
jae
mov
cmpsb
xchg
out
loopne
shr
lret
rclb
jle
jge
scas
fadds
lods
adc
fcmovu
shrl
mov
push
inc
mov
popa
ljmp
int3
arpl
xchg
sub
lods
outsb
or
imull
stos
lret
dec
fcoms
test
xchg
ja
jae
mov
mov
test
xchg
aas
and
aas
jb
adc
dec
inc
mov
jb
insb
sub
pop
les
jecxz
mov
jno
cmpsl
outsl
dec
add
mov
into
cli
push
mov
test
mov
jg
int
pop
pop
add
xchg
in
and
addl
jns
sbb
dec
xlat
in
mov
push
sbb
lret
push
mov
mov
mov
and
jo
cs
pop
cmp
sbb
sahf
lods
fwait
push
push
lock
int3
sbb
enter
sti
cmp
cs
dec
imul
iret
scas
mov
std
scas
mov
mov
lahf
mov
push
xor
mov
loopne
push
aam
bound
outsb
xor
fisttpl
xchg
ss
jae
int3
pop
pushf
call
int3
and
pop
push
sub
das
adc
mov
sbbl
dec
mov
mov
xchg
jecxz
sbb
ficoms
or
fmul
pop
and
lcall
push
pop
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
sub
mov
jmp
enter
aam
mov
int3
push
dec
sarl
dec
jle
js
inc
mov
popa
pop
cmp
inc
jns
push
outsl
std
mov
imulb
in
dec
repnz
sbb
pop
out
pop
inc
js
sbb
mov
clc
aad
out
inc
and
outsl
inc
dec
adc
xor
add
sub
xchg
push
lods
cmp
dec
mov
sub
nop
dec
test
stos
cld
notl
inc
or
pop
clc
cmc
and
fsub
ds
fcmove
add
mov
and
jo
jg
push
jp
jmp
and
clc
dec
rorl
adcl
lahf
xchg
cmp
push
xchg
pop
call
mov
jmp
and
stos
xchg
scas
ja
fdivrl
testl
imul
arpl
xchg
cmp
push
xchg
and
mov
push
xor
int
stos
pop
sbb
inc
movsb
sbb
mov
gs
int3
jo
les
mov
ret
push
jae
dec
mov
xchg
xchg
cmpsl
call
enter
mov
fimuls
push
repz
divl
ds
jl
push
inc
jns
lret
addr16
sub
jns
int
push
jae
push
pop
inc
or
xchg
hlt
mov
mov
sarl
ja
insl
pop
xor
test
ja
int
inc
sarb
test
repz
or
fbstp
imul
aas
aas
cmp
xor
sbb
and
arpl
test
mov
push
dec
mov
int
popa
out
imul
mov
in
ja
sub
fstpt
test
test
jno
sbb
xlat
xlat
add
outsb
mov
out
mov
cwtl
cmc
push
inc
mov
hlt
xor
push
push
fldl
fnstcw
mov
ror
pop
sti
add
nop
inc
hlt
fcomi
adc
in
jg
xor
sbb
dec
mov
subb
mov
fwait
inc
or
jmp
and
pop
sbb
pop
mov
mov
pop
std
sub
sarl
xorb
jecxz
out
bnd
arpl
jb
cli
mov
mov
dec
xchg
and
call
adc
pop
mov
sub
mov
and
jae
bound
shlb
jo
adcl
cmpsl
imul
xchg
push
ficompl
cmc
sub
and
push
cmp
mov
jge
add
cmp
je
mov
mov
xor
jmp
rcl
leave
aad
xor
pusha
out
pop
fwait
xor
dec
jle
js
jbe
push
repz
sbb
add
test
daa
popf
cmp
loopne
add
xor
jnp
sub
inc
push
in
and
sbbl
cmp
dec
pushf
sbb
js
sbb
add
ja
xorb
mov
sbb
into
cmp
adc
test
popf
imul
sbb
jl
mov
icebp
xlat
outsl
stos
and
mov
divb
sub
mov
outsb
dec
mov
sub
icebp
mov
push
jae
pop
mov
sub
outsb
sarl
push
mov
ss
push
push
xorl
cld
fstpt
lret
mov
cmc
mov
das
movsl
add
loopne
jmp
inc
mov
imul
sbb
push
cmp
xchg
into
ja
decl
xchg
mov
or
popf
stos
pop
dec
out
add
fwait
mov
xchg
std
dec
push
pop
pop
sbb
and
std
mov
mov
lahf
mov
mov
repz
hlt
nop
xchg
dec
inc
push
notb
xor
cmp
int3
xchg
loopne
jb
nop
loope
repnz
test
jl
mov
fsubs
cld
jb
pop
inc
jb
mov
loop
pop
sbb
rcll
inc
ja
pop
xor
add
out
cli
call
xor
jg
push
aam
push
pop
pusha
or
mov
ret
mov
push
daa
push
jmp
cmc
cmpb
iret
cmpsb
inc
jg
in
rcrl
lret
sbb
inc
xchg
frstor
call
insl
sbb
dec
mov
sarl
dec
push
in
and
dec
rolb
cmp
stos
mov
push
roll
jp
add
mov
aam
push
add
dec
pop
ficoms
fucomip
mov
mov
loop
sti
mov
imul
mov
fisubl
xor
lret
cmpsb
jnp
ror
shlb
in
dec
les
xor
cld
js
xchg
cmpsl
in
test
add
adc
jnp
les
in
dec
sub
call
in
add
or
ljmp
push
mov
mov
imul
and
xlat
test
lcall
div
repz
inc
xor
sbb
rcll
not
scas
dec
pusha
shlb
in
out
insb
or
mov
test
mov
push
mov
pop
pop
cmc
hlt
or
mov
mov
fsubp
sub
mov
leave
or
and
mov
xchg
inc
in
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
jmp
aas
rol
int3
aad
dec
sub
lods
call
jle
js
mov
sti
clc
xor
dec
mov
enter
aas
lret
std
in
outsl
into
mov
imul
dec
jno
les
or
push
sub
repz
inc
push
xchg
mov
push
pop
add
pop
andb
pusha
pop
jmp
mov
sub
xchg
dec
cmp
insb
mov
rcll
add
mov
mov
push
inc
stc
push
pusha
mov
cmp
mov
mov
inc
mov
sub
mov
pop
mov
jno
shll
xor
mov
ss
int3
inc
cli
mov
fadd
dec
mov
bound
dec
mov
and
add
fcomps
int
and
std
in
movsl
xchg
pop
inc
mov
cmp
fs
dec
out
in
bound
push
sub
test
stos
mov
mov
sti
test
ss
jl
mov
pop
nop
mov
jbe
or
sub
dec
mov
add
fwait
les
sbb
arpl
xor
xchg
repz
insl
jge
mov
mov
int3
data16
aaa
fdiv
and
cltd
insb
inc
test
add
sbb
push
mov
aaa
lods
daa
push
std
lahf
dec
pop
dec
mov
push
scas
cmp
daa
and
jg
xor
mov
cmp
popa
das
inc
popa
repz
xchg
push
add
fcomps
lahf
jle
mov
inc
out
cltd
and
sbb
or
jg
push
movsl
cmpsl
in
mov
cwtl
adc
adc
jno
cmp
addr16
movsl
add
or
inc
push
push
sahf
and
mov
mov
out
inc
cli
lcall
frstor
cs
sbb
mov
and
fmuls
and
negl
push
bound
and
add
cmp
aaa
push
imul
sbb
mov
jmp
jecxz
push
cmp
push
aam
notl
cmp
cmp
push
rolb
dec
cmc
fistps
cwtl
ja
push
cmp
cmpsl
and
mov
cld
in
xor
mov
data16
dec
fidivl
out
mov
xor
cmpsl
pop
xlat
mov
into
adc
or
and
fcmove
xor
rclb
mov
orb
cmp
xchg
xchg
sub
sbb
aaa
shrl
sti
pop
mov
leave
adc
fisubrs
iret
lahf
and
test
add
or
inc
clc
jmp
int
rol
ror
aad
inc
jecxz
fsubr
push
fucomp
cmp
jle
js
adc
sub
in
sub
scas
push
scas
add
cmpb
in
mov
movd
xchg
mov
sbb
xor
lret
sbb
fisttps
pop
add
mov
pushf
stos
jg
cmpsb
xchg
jl
or
shrb
dec
xchg
xchg
dec
xchg
movsb
in
mov
push
sub
out
sbb
loop
lcall
lods
mov
stos
mov
lock
sbb
fildll
sbb
lock
dec
jecxz
loope
in
cmp
cld
cli
dec
mov
jnp
dec
insb
stos
jne
cmpb
ret
mov
fwait
sbb
cli
out
dec
add
bnd
orb
cmpsb
adc
lahf
out
or
cmp
mov
scas
jmp
jg
cmp
stos
outsl
movsl
adc
mov
lea
xchg
and
adc
les
add
rolb
xor
fmuls
leave
mov
lgs
es
sub
adc
out
cmp
lcall
call
aam
xor
xor
pop
pop
mov
sbb
xchg
sbb
std
test
inc
mov
xor
dec
lahf
int3
xor
retw
iret
and
imul
mov
js
cwtl
aam
out
adc
pop
adc
push
lods
cmp
jge
xchg
dec
inc
fisubrl
pushf
mov
mov
std
sbb
sub
ds
fs
jbe
movsb
xlat
inc
enter
pop
aaa
lods
xchg
jo
add
dec
insl
sub
push
lock
hlt
daa
test
int
adc
pop
add
jmp
push
lret
in
out
jp
pop
repz
repnz
movb
lret
sbb
xchg
aad
cmp
jg
scas
call
mov
addb
push
test
mov
ret
out
je
aad
dec
add
sbb
addr16
jne
aad
and
pop
cmp
stos
loopne
pop
outsb
subl
shll
gs
fwait
cltd
adc
lret
data16
mov
xor
js
daa
mov
lcall
in
into
dec
arpl
mov
jnp
fwait
hlt
movsl
fldl
jle
shrl
and
cli
mov
cmp
fmulp
sub
jae
scas
jecxz
in
cmp
sub
push
inc
or
insl
les
jo
mov
gs
mov
shr
or
dec
xchg
jle
dec
add
fsubrs
out
or
aas
dec
aaa
xchg
loopne
jno
sub
xchg
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
jmp
rol
lret
ret
shrl
insb
mov
pop
mov
dec
jle
js
add
pop
jmp
and
adc
insb
lahf
ljmp
and
lods
subps
mov
push
adc
sub
push
sub
lock
enter
xchg
mov
and
adc
mov
sub
adc
fnstenv
aas
mov
psllw
dec
pop
jbe
jmp
in
popa
jg
stos
cmc
mov
lret
sti
push
int
push
in
sbb
jge
mov
inc
pop
lea
in
nop
in
mov
fildl
mov
xor
std
or
mov
mov
jne
stos
pushf
push
mov
push
sub
dec
pop
out
mov
aaa
sbb
sarl
inc
fwait
ljmp
push
lret
insb
pop
push
test
sbb
or
push
insl
mov
jne
sar
aad
xor
dec
push
sub
test
mov
aad
enter
ja
cmp
out
push
push
shll
sahf
leave
mov
aam
and
cmpsl
movsl
orb
xchg
fdivrp
mov
mov
pop
cwtl
xchg
cmpsb
lods
add
sub
in
push
iret
inc
xchg
jnp
ret
das
jle
push
fsts
cmp
lods
in
ds
and
cmpl
xchg
and
and
fwait
cli
insl
xchg
push
dec
pop
mov
mov
int3
push
pop
mov
adc
movsl
jle
lret
loop
movsl
repnz
adc
lret
or
leave
fwait
scas
daa
add
addb
push
gs
sti
paddusw
or
fsubrl
loop
inc
jecxz
je
dec
movsb
out
stos
nop
daa
push
add
popf
iret
jns
cmpsb
dec
jns
test
repz
test
mov
jp
lret
pop
xchg
gs
or
sub
cmpb
fmuls
pop
mov
sbb
push
dec
mov
dec
xchg
jb
sub
sbb
push
sbb
ss
gs
outsb
mov
movsl
adc
fs
lea
lods
stc
fisubs
mov
mov
sahf
inc
scas
xchg
lahf
shrl
mov
hlt
jo
or
mov
xor
and
and
push
jne
ljmp
loopne
cmc
xchg
jno
xor
xchg
xor
cmp
mov
xchg
ja
add
sbb
cltd
mov
fsubs
ficoms
nop
outsl
mov
ljmp
mov
dec
testl
mov
cmp
ret
push
popa
lcall
pop
scas
dec
mov
xor
adc
dec
sub
dec
bound
adc
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
jmp
cmp
fnstcw
jecxz
inc
lods
cwtl
cmp
dec
jle
js
or
in
in
loope
test
je
adc
imul
jecxz
fistps
sub
add
outsb
inc
mov
fdivs
jge
test
pop
mov
or
ja
push
ret
fisttpl
push
sub
or
in
cmp
mov
imul
jp
pushf
nop
sub
rcll
cmp
rclb
inc
or
adc
inc
clc
mov
cmp
shlb
outsb
outsb
arpl
push
divb
inc
leave
or
aaa
roll
mov
adc
je
and
dec
fldt
notb
mov
inc
mov
add
mov
pusha
add
ja
sub
sbb
int
in
stos
cmp
xor
imul
adc
popa
in
xchg
cmp
xchg
jne
mov
sbb
in
das
lds
cmp
xor
imul
sub
jmp
mov
cmp
and
sbb
addr16
xor
inc
out
push
adc
mov
cmp
jnp
mov
mov
test
mov
add
mov
pop
jp
sahf
mov
sub
sbb
mov
mov
inc
dec
inc
mov
outsb
scas
pusha
or
xor
fildl
ret
dec
or
iret
add
cltd
add
stos
lahf
mov
jmp
cli
adc
loope
insl
cmp
je
add
push
scas
adc
sbb
mov
jp
mov
cmp
sbb
inc
xchg
movsl
enter
sbb
add
xchg
dec
mov
stos
dec
jb
adc
add
inc
jge
push
shl
push
rol
nop
lahf
sbb
fucomp
aas
cmp
adc
jns
adc
inc
aam
sti
or
std
imul
dec
call
ja
xchg
leave
js
fidivs
lret
cmp
or
test
faddp
mov
push
cmp
f2xm1
mov
jnp
inc
or
enter
lcall
sub
repnz
push
je
xchg
lcall
pop
hlt
xor
pushf
dec
xchg
fmul
pop
jns
out
std
cli
mov
sub
fstps
adc
lret
test
cmpsb
mov
cmp
adc
xchg
sub
divb
add
push
push
sbb
cmp
sub
mov
sbb
dec
mov
pop
ds
rcl
or
mov
shl
scas
lods
inc
bound
add
jne
adc
jmp
jle
xor
jmp
rol
ror
leave
rcr
aaa
mov
inc
lret
mov
js
dec
jle
js
mov
mov
cmpsl
pop
outsl
dec
add
lret
dec
fidivrl
addr16
dec
lcall
push
dec
cmp
pushf
stos
mov
mov
cs
mov
lahf
cli
sarb
pop
jge
ret
sub
mov
dec
jo
cmpl
mov
nop
xchg
mov
mov
dec
imul
dec
push
mov
test
and
pop
push
pop
rorl
out
pop
in
loope
les
add
test
add
sbb
in
stc
in
fdivs
std
ret
aam
mov
out
mov
das
enter
arpl
push
sub
fiaddl
xchg
mov
pop
jb
cmp
rcl
sub
add
xor
push
ret
jnp
fldenv
cli
icebp
fldl
dec
les
xor
or
mov
subl
cmp
aad
sbb
or
inc
scas
cmp
out
insl
in
shrb
clc
pop
cmpsl
outsl
lret
xor
inc
add
repz
fadd
ret
stc
lahf
mov
pop
aad
pop
pop
sti
adc
push
hlt
mov
jg
cmpb
sub
sbb
add
ss
push
int3
mov
jno
std
xchg
mov
push
pop
pop
scas
push
lahf
cmpsb
ficomps
outsb
jg
out
cmp
mov
inc
or
movsb
sahf
push
imul
adc
cmp
mov
sbb
dec
stc
adc
jno
gs
fwait
dec
lret
mov
sub
jl
cltd
cmc
dec
lret
lea
ret
inc
cli
xlat
mov
out
mov
pop
fsubrs
fdivrp
sub
aaa
js
ja
or
push
test
and
das
jne
dec
inc
sub
and
mov
push
mov
mov
jg
mov
add
loop
cli
repnz
push
add
mov
inc
outsb
sub
sub
and
pop
push
xchg
push
mov
dec
push
xchg
xchg
sub
ss
popf
add
lret
popa
add
hlt
lds
push
clc
jle
in
pop
lods
int
sbb
sub
adc
aaa
cltd
add
in
or
push
pop
add
push
jo
sbb
sahf
lahf
leave
fimuls
mov
push
dec
mov
dec
add
aas
pop
add
adc
mov
shr
shrl
xchg
adc
imul
test
gs
adc
int3
cltd
mov
lahf
shll
lock
mov
jmp
iret
rcl
lret
ror
xlat
lods
and
js
xchg
into
mov
js
dec
jle
js
gs
jmp
and
jl
nop
cltd
dec
cltd
sub
cmpsl
xor
cmp
mov
loope
and
fildll
imul
adc
jmp
or
xchg
and
inc
sarb
fs
mov
rcrl
xor
cmp
out
jl
mov
jge
jae
or
cld
and
adc
sub
jecxz
shll
pushf
push
aas
cmp
cmpl
mov
push
inc
xchg
shrl
jae
adc
decl
mov
jmp
ds
mov
lret
jg
imul
push
cmc
push
pop
nop
mov
jbe
lahf
add
inc
xor
not
das
lahf
mov
pop
xor
mov
push
sbb
sbb
cmpsl
notb
dec
pop
and
loope
neg
adc
or
ret
fdiv
mov
sub
movsb
js,pn
fbstp
fstp
call
cmp
xor
xor
and
andb
shll
hlt
aad
jl
out
dec
adc
pop
test
bound
es
mov
sti
add
std
loop
rorl
cltd
sub
or
xchg
sub
xchg
mov
mov
dec
aad
adc
loope
aam
and
sub
jnp
mov
jmp
xchg
or
xchg
add
stc
xor
ja
sub
and
xchg
xor
sub
xchg
sbb
lret
repnz
enter
inc
stc
jbe
xor
push
or
jne
or
pop
mov
jnp
jge
arpl
or
pop
lcall
test
pop
sbb
and
paddsb
inc
or
dec
test
ljmp
sub
push
cmp
xor
inc
stos
in
je
movsl
adc
cmp
xchg
dec
mov
jecxz
in
sub
and
leave
mov
pop
test
scas
mov
jle
out
pop
test
push
adc
daa
das
pop
add
xchg
push
and
dec
pushf
insb
gs
and
sbb
and
inc
stos
add
divps
pop
movsl
lock
sub
mov
pop
push
adc
pop
les
out
fmull
cli
xor
rclb
cwtl
int3
cmp
xchg
lea
jmp
mov
sub
and
xchg
lret
pushf
daa
mov
dec
adc
jmp
add
aas
ret
rol
sbbl
js
dec
jle
js
in
xor
ret
fldt
roll
data16
jmp
das
sbb
or
leave
das
movsb
gs
xchg
loope
cmp
je
inc
ljmp
nopl
mov
or
inc
jmp
rolb
jae
xor
inc
test
jbe
jl
lds
pop
cmp
xor
jecxz
out
mov
inc
xor
and
enter
cltd
ret
pop
inc
popa
es
out
aaa
sbbb
sahf
inc
add
mov
mov
pusha
cmp
aad
xor
xor
xchg
sub
push
jns
push
push
mov
in
xchg
movsl
leave
pop
aad
mov
sub
lds
add
dec
cwtl
in
adc
filds
add
pushf
out
pushf
ja
cli
xchg
loopne
idiv
outsb
sub
addr16
inc
xchg
jae
pop
pop
inc
fdivl
fwait
xchg
cli
push
xchg
arpl
std
sub
outsl
xor
or
lret
add
sbb
sbb
ja
iret
movsl
dec
adc
mov
jb
subl
rsqrtps
pop
or
jb
in
je
jb
cli
fs
setns
push
mov
jge
sub
cmp
ss
cmpsb
push
mov
add
xchg
sbb
cltd
int3
xchg
sahf
xor
push
jmp
dec
scas
push
mov
ljmp
mov
jmp
mov
addb
lea
enter
pop
xchg
and
data16
or
jmp
xchg
inc
rclb
xor
pushf
test
mov
adc
cmp
jo
fs
xchg
test
sti
cs
inc
xor
mov
and
inc
cli
mov
and
imull
les
loopne
test
bound
insb
inc
mov
mov
push
or
mov
cmc
dec
pop
out
out
inc
sbb
sub
cmp
cld
xchg
fistps
mov
test
and
shll
push
in
xchg
cmp
push
pusha
fsubl
les
cmc
push
rcrb
mov
imul
dec
push
movsl
imul
or
mov
cli
and
xchg
clc
mov
xchg
insb
jp
pop
cmpb
push
sub
dec
and
orb
in
lcall
jae
lea
xchg
add
jno
fcmovb
in
and
add
push
das
scas
xchg
std
mov
jbe
pop
jg
int
xchg
in
xchg
xchg
popa
fcmove
adc
enter
sbb
jmp
ds
cmp
mov
xchg
rol
into
xor
js
dec
jle
js
aaa
out
add
imul
pop
inc
shll
xchg
lock
sub
call
add
clc
mov
outsl
iret
adc
xor
mov
data16
repz
pop
inc
inc
iret
push
cmp
pop
inc
sbb
and
cltd
andb
and
imul
jge
ljmp
push
addr16
mov
sti
lods
xchg
shll
xor
sub
iret
push
jle
push
push
xchg
xor
nop
sbb
mov
or
adc
in
xorb
shll
inc
and
mov
mov
xchg
fs
lea
pop
sti
jecxz
inc
ret
mul
adc
popf
daa
xchg
shll
in
lock
fidivrs
insl
cmpsb
push
lret
inc
xor
movsb
push
popf
xchg
ss
fildll
subb
sbb
test
scas
dec
jae
fidivrl
cltd
jae
imul
dec
sub
gs
adc
jns
cmp
lret
repnz
imul
mov
cld
cmc
jmp
repnz
das
add
scas
popf
sti
push
and
out
sub
jbe
lods
sarb
ficomps
shll
inc
imul
lods
aad
mov
push
cmp
push
out
fisubl
mov
repz
push
jo
je
push
xchg
fistpll
jg
js
into
mov
and
sub
fdiv
adc
cmpsl
int
fcmovu
xchg
mov
and
jp
push
jo
mov
sbb
cmp
xor
hlt
inc
pop
push
dec
and
xchg
adc
mov
push
mov
out
les
repz
jns
cmp
adc
jb
repz
dec
arpl
and
jbe
fstl
or
cld
call
add
stc
pop
push
mov
test
push
inc
hlt
or
mov
push
into
add
mov
or
hlt
sarb
jecxz
outsl
or
or
cmpw
loop
mov
dec
fistl
stos
inc
lret
xlat
ds
or
mov
hlt
xor
xlat
push
ja
jmp
xchg
mov
movsl
pop
adcl
cmp
ror
pop
mov
mov
adc
sbb
mov
test
idiv
mov
adc
mov
aas
outsb
adc
cmp
outsb
mov
dec
fcmovnbe
dec
push
int3
mov
sar
adc
imul
out
leave
aas
int3
adc
mov
mov
or
ret
jns
and
push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
and
mov
jmp
int3
vpmovmskb
fcmovnu
leave
in
loop
out
ja
sti
cltd
add
js
fs
js
lret
mov
sbb
jle
iret
add
repz
and
jmp
push
push
hlt
lock
push
scas
jg
mov
into
es
inc
jno
push
jae
in
xor
cli
mov
and
sahf
inc
cwtl
aaa
cmc
negb
xchg
and
sbb
and
adc
fisubs
stc
xchg
jne
push
pushf
insl
cmp
cwtl
mov
adc
lcall
push
xchg
leave
sbb
lock
imul
int
pop
pop
or
imul
jb
cmc
xor
imul
push
int
jl
inc
pop
mov
stos
xchg
mov
pop
sarb
inc
mov
into
push
fbld
pop
fisubl
ds
hlt
dec
jae
stos
fdivl
xor
inc
xor
jge
lods
int3
out
jg
sbb
lcall
js
fists
mov
sub
int3
into
adcl
push
aam
inc
and
scas
mov
adc
pop
js
lods
lods
mov
adc
pop
and
scas
adc
xchg
clc
sub
bound
and
js
repnz
fisubrs
cmp
shlb
das
repz
es
mov
inc
push
mov
cld
mov
in
or
and
movsl
lock
push
adc
out
add
ret
inc
xchg
adc
jne
hlt
and
fsubr
add
inc
jle
pop
add
sub
rorb
push
outsl
add
gs
hlt
mov
push
sbbb
cs
in
pop
sub
sub
dec
lock
sub
push
mov
add
cld
inc
int3
insl
push
mov
jbe
out
sbb
cs
mov
inc
mov
out
sarb
xor
por
int3
testl
insb
sbb
repnz
sub
sub
movsb
andb
cmp
ror
loopne
push
pop
insb
jno
test
xchg
mov
sub
add
lret
or
inc
adc
jmp
fiadds
stos
data16
mov
or
or
test
idivb
xor
loopne
mov
out
in
cmpsb
icebp
jge
fmuls
add
sub
lock
stos
jmp
push
adc
aaa
xor
cli
lds
mov
push
sub
fdivr
les
js
mov
sub
cltd
enter
cld
lds
inc
cmp
inc
jo
cmpsb
imul
push
leave
daa
popf
add
jmp
xchg
lahf
pop
je
push
xor
sub
add
sub
pop
popf
add
imul
inc
add
dec
add
xor
subl
mov
xorl
jmp
rol
cmp
aam
rol
mov
and
sbb
push
insb
iret
js
fs
js
cmp
out
and
cmp
xchg
mov
outsb
jge
into
je
or
adc
xchg
out
out
loop
push
mov
cmovb
test
neg
outsb
jp
xchg
cmp
add
daa
mov
sbb
xchg
pop
or
mov
or
jbe
or
loopne
and
push
adc
imul
fs
stos
mov
jge
mov
ret
ror
sub
jle
cmp
or
pop
lods
repnz
aad
ljmp
inc
jbe
addr16
lods
mov
aas
jns
mov
outsb
dec
xor
xchg
jle
aaa
jg
mov
rol
lcall
push
and
mov
xchg
mov
and
repnz
shl
js
int
stc
lret
fs
imull
or
notb
mov
dec
aaa
cltd
data16
cmc
mov
add
dec
or
test
mov
cwtl
lcall
into
shlb
shr
gs
jnp
or
mov
out
out
pop
aam
mov
test
lahf
sbb
jae
iret
add
cltd
jo
jge
aaa
loop
pop
je
mov
jecxz
lcall
iret
mov
cmp
outsl
sti
jae
xchg
and
mov
inc
add
add
sub
es
mov
dec
mov
push
sbb
dec
aad
push
js
rcrl
xor
pop
notl
fdivl
cmc
pop
push
mov
or
ds
sub
imul
inc
inc
cmp
in
popf
push
cmc
mov
stos
clc
mov
xchg
shl
pusha
cld
dec
or
mov
and
test
sub
xchg
rorl
sbb
push
and
out
mov
adc
push
lock
ljmp
cs
scas
add
sbb
jnp
pop
mov
scas
cmp
xchg
movsb
popf
insl
iret
lods
dec
aad
and
adc
popf
push
or
xor
pop
sbb
stc
sub
sbb
sbb
dec
mov
xchg
dec
mov
pop
push
pop
xlat
fs
xor
and
int
shlb
cmp
lcall
mov
dec
shll
jno
add
idivl
xor
movl
scas
hlt
mov
fwait
cmc
xor
and
insb
push
mov
mov
inc
mov
hlt
dec
hlt
or
repnz
mov
mov
pop
jb
adc
xor
rcrb
xchg
sti
cmp
stc
or
or
vpaddq
int
mov
int
icebp
out
inc
sub
in
pop
jnp
int3
cld
mov
rcrl
loope
inc
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
adc
mov
xor
add
sub
jmp
cmp
rcl
rol
ficoml
out
repz
push
pop
int3
js
fs
js
insl
add
ss
test
std
or
ficoms
mov
cwtl
jl
jno
or
inc
mov
add
stos
es
mov
xchg
cmpsl
adc
dec
lret
loopne
inc
inc
scas
std
dec
push
cmc
push
sub
sahf
imul
pop
mov
cmp
cmc
mov
inc
daa
sbb
xchg
jbe
mov
and
rcll
sti
in
and
jmp
loopne
mov
push
nop
test
test
popa
push
or
imulb
pop
std
arpl
roll
cmp
loopne
inc
xchg
lcall
repnz
sbb
dec
aas
mov
int3
inc
xchg
sub
push
ss
mov
sub
cmp
adc
inc
insb
or
inc
dec
xchg
std
push
out
or
mov
lret
cmp
jmp
xchg
aad
inc
cmp
xchg
rol
push
xor
pushf
lds
insb
pop
mov
mov
inc
leave
dec
or
insb
mov
andb
cmp
pop
inc
and
add
cmp
orb
mov
fimuls
lds
test
fcomps
pop
jne
cmc
add
push
and
out
push
stos
js
jge
push
xchg
sub
mov
mov
sbb
je
test
push
les
jae
add
jns
jmp
jbe
jle
cmpsl
cltd
or
sysexit
or
sahf
dec
dec
fnsave
mov
add
push
inc
jnp
mov
mov
cmp
mov
inc
fs
dec
fcmovne
and
scas
icebp
jl
int
dec
iret
insl
xor
enter
iret
mov
imul
and
shlb
std
or
or
push
mov
dec
ds
add
call
add
fstpt
jecxz
aam
test
popa
bnd
jno
adc
fstpl
jno
addr16
push
sub
psrad
cmp
mov
xor
xchg
mov
icebp
shrl
inc
jns
dec
lcall
ja
or
or
leave
pop
or
cmpsb
aad
mov
movsb
popa
dec
add
out
movsb
mov
dec
xor
popl
xor
mov
rorb
mov
pop
and
cmp
adc
push
sbb
dec
leave
std
sub
test
xchg
mov
inc
dec
xlat
mov
fldl
movsl
mov
lret
xor
mov
sub
mov
idiv
ret
mov
sbb
jle
push
daa
shl
mov
push
dec
sub
cmp
rcll
imul
mov
out
movb
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
jmp
jmp
iret
lret
aad
in
mov
inc
sarl
fs
js
fistpll
dec
push
dec
or
sub
je
cmp
popa
outsb
hlt
fs
cmp
jns
scas
pop
jns
ss
push
cmp
cli
adc
lea
sbb
push
xor
jmp
cmp
xchg
dec
inc
sti
iret
shlb
sbb
inc
push
dec
jno
jl
jg
mov
int3
js
fs
cwtl
or
outsb
jmp
jge
lods
cmpb
mov
gs
out
out
xchg
movsb
insb
lret
xor
gs
fs
jmp
xchg
sbb
inc
rorb
cs
sbb
mov
in
mov
imul
or
popf
adc
mov
xchg
fucom
ja
adc
lcall
xchg
mov
popl
mov
adc
enter
js
pusha
testl
push
inc
pop
fidivrs
mov
push
jmp
daa
lcall
clc
popl
out
add
mov
call
dec
mov
fists
enter
mov
push
pop
fdivs
sbb
je
or
jo
sbbl
pop
fmull
out
mov
lahf
jmp
cmp
inc
sahf
cmp
imul
leave
dec
push
cmp
cmp
lea
scas
cbtw
iret
push
stc
pop
aaa
fmul
jge
jmp
sub
xlat
andl
xchg
jne
das
repnz
cli
pop
shrb
pop
stc
sbb
and
jl
out
test
pop
sub
ret
push
mov
movsl
int3
cld
jl,pt
test
push
clc
mov
pop
add
test
iret
xor
aad
rclb
loope
pop
addl
stos
cmp
sub
js
fistpl
xor
dec
ret
mov
sbbb
cwtl
fsubrs
js
aas
mov
clc
ret
adcl
lods
decb
iret
lods
mov
mov
and
xchg
mov
cs
in
xor
inc
push
ss
lods
jmp
pop
mov
inc
repnz
push
or
cmp
jno
popa
mov
pop
and
sbb
sub
aam
enter
mov
or
std
xchg
xchg
and
xchg
ret
mov
pop
nop
sti
in
sub
mov
inc
int
movsl
loopne
jno
pop
xchg
cmpb
loope
cmp
dec
mov
popa
in
int3
mov
mov
add
xor
push
stos
jns
icebp
out
mov
imul
mov
mov
stos
pop
xchg
add
loopne
mov
sbb
into
xchg
sbbb
dec
pop
fdivrs
int
or
mov
mov
push
cmp
test
mov
mov
orl
mov
xor
sub
sbbl
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
movl
mov
mov
push
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
xor
mov
jmp
cmp
cmp
ret
shll
popf
cmp
mov
js
fs
js
lods
lods
xchg
outsb
aad
push
int
cmc
popf
mov
pop
fs
scas
mov
dec
scas
dec
fiadds
pop
pop
xchg
out
rclb
notl
sbb
sti
cli
sub
cmp
pop
and
mov
dec
add
pusha
pop
cmp
rclb
cmpl
xchg
popa
shrb
sub
sub
jae
adc
je
jg
lcall
ret
test
nop
cmc
test
pusha
mov
test
test
pop
je
ds
jno
dec
jb
into
add
mov
xor
mov
or
mul
stc
fucomp
push
mov
xchg
jo
sub
xor
iret
push
and
sub
jmp
xor
push
sub
les
cmp
dec
bound
or
dec
dec
pop
add
es
add
fs
mov
in
xchg
ljmp
lret
adc
mov
inc
out
sti
shll
ljmp
enter
mov
roll
xchg
sbb
xlat
inc
cmp
mov
cmp
iret
adc
push
andl
popa
pop
and
jmp
rcrb
pop
lahf
jge
pop
ret
into
es
or
cmc
xchg
cltd
out
pop
aam
ljmp
mov
lock
clc
adc
js
xor
std
ljmpw
mull
mov
cld
fwait
aam
daa
push
mov
push
adc
pop
jle
mov
out
mov
sub
std
ss
stos
lret
mov
aad
std
pop
jo
mov
xor
ret
and
mov
dec
daa
push
cmp
or
pushf
add
cmpsb
loopne
mov
sar
loope
imull
cmc
mov
push
and
in
out
pusha
aad
loopne
pop
dec
push
cltd
lcall
inc
sub
lret
cmpsb
mov
mov
lret
lahf
and
push
dec
jp
push
sub
adc
xor
fwait
mov
mov
out
add
adc
jno
jno
push
into
jae
jp
leave
outsb
jecxz
cmc
mov
paddd
mov
icebp
scas
clc
mov
pop
fidivrs
jne
inc
pop
pushf
dec
fnsave
add
mov
fnstcw
jmp
es
adc
jle
mov
daa
movb
sbb
add
aad
and
int
push
mov
xchg
dec
xchg
outsl
repz
out
out
shlb
xchg
leave
add
popa
lock
xor
leave
sbb
jno
inc
sub
sbb
insb
fnstsw
bound
xchg
insb
push
je
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
jmp
ror
lret
fcmove
rcl
adc
xchg
cmpsb
mov
fstpt
fs
js
leave
inc
xchg
dec
mov
inc
mov
nop
cwtl
negb
sub
rol
arpl
es
xchg
rclb
iret
cmp
dec
and
loopne,pn
inc
cmp
or
cmp
xchg
pop
adc
pop
jno
inc
mov
lea
arpl
jns
test
push
jne
mov
jns
lods
pop
and
cld
iret
fdivl
add
test
mov
pop
dec
fs
or
shll
imul
addl
jbe
inc
xchg
test
aaa
scas
add
cmp
mov
pop
dec
imul
test
clc
mov
sbb
in
push
mov
fcoms
mov
push
das
scas
flds
mov
daa
movsb
or
mov
sbbb
xchg
adc
mov
pop
jo
sahf
mov
sub
movsb
adc
movsl
stc
pop
pop
sbb
lock
lock
in
decb
clc
dec
enter
cmpb
loop
stos
cmp
imul
fwait
hlt
dec
add
and
in
push
and
pop
mov
pop
ficoml
ljmp
rcr
or
repnz
fdivs
mov
aam
and
dec
psraw
add
stos
xchg
stos
xchg
pop
ja
mulb
mov
cltd
xchg
adc
adc
mov
adc
das
jae
enter
mov
cmp
sbb
jbe
xor
les
ss
jbe
inc
xchg
xor
movsb
or
outsb
xchg
or
es
dec
xlat
push
lock
andl
rolb
cmp
aad
mov
inc
idivl
mov
cmp
pop
je
roll
clc
mov
in
mov
adcl
lahf
push
push
in
dec
mov
mov
sbb
mov
push
test
ljmp
mov
pop
xor
arpl
adc
pop
imul
sbb
mov
pop
cli
popa
loopne
in
cmp
mov
add
mov
mov
out
jle
jns
stos
fsts
mov
cltd
mov
push
fadds
scas
adc
ss
inc
dec
pop
in
add
xchg
sub
js
dec
cmp
push
lcall
jbe
sbb
push
lcall
scas
gs
adc
out
cmp
push
test
in
cli
mov
std
dec
add
jbe
mov
shl
inc
dec
aaa
pop
shl
jae
jp
jle
and
jl
js,pn
cltd
mov
rcrl
ret
push
shrl
leave
mov
cmp
jne
pop
pop
mov
mov
jmp
lret
ret
fld
add
fmul
sub
leave
mov
js
fs
js
mov
push
cmc
jmp
or
inc
movsb
and
inc
xorb
repz
xor
pop
stos
mov
xchg
inc
fldenv
dec
insl
test
rorl
mov
out
dec
or
jns
cli
shrl
and
dec
dec
call
bound
or
and
mov
jae
cmp
mov
shlb
cmpsb
in
xchg
jb
xor
fldl
cmp
negl
cs
iret
pop
xor
dec
lea
mov
jnp
adc
mov
mov
popf
lock
sbb
sarl
scas
and
loopne
out
shll
sub
pop
shrl
ja
inc
lahf
repz
pop
sahf
stc
pop
hlt
in
icebp
jne
lods
or
shr
faddl
lock
adc
cmp
dec
mov
cmp
cmp
arpl
or
fucom
pop
sti
adc
mov
ficoms
data16
test
cwtl
fistl
mov
outsb
mov
mov
jl
lods
mov
lock
scas
fstps
loope
adc
jae
rcrl
aaa
dec
adc
inc
pop
les
inc
pushf
shr
in
pop
rcrb
lea
push
lea
fidivl
imul
sbb
fisubl
adc
pop
repz
xchg
stc
or
or
stc
popl
add
push
mov
pop
and
inc
jge
mov
fisubs
add
add
pusha
sbb
negw
pop
shll
fucom
pop
ss
inc
dec
and
mov
js
stos
stos
mov
mov
xchg
dec
jmp
daa
lea
xchg
push
mov
lds
fbld
sbb
mov
out
inc
inc
pop
or
je
sbb
ret
outsb
add
rorl
das
mov
mov
pop
and
mov
test
rcr
add
nop
push
sub
repnz
adc
nop
add
sub
mov
loop
scas
mov
add
scas
mov
inc
adc
hlt
jnp
mulb
adc
rsqrtps
or
mov
sub
int
mov
push
jmp
lret
iret
repz
je
add
xchg
es
sahf
dec
pop
subb
pop
jge
sti
adc
mov
xchg
cld
subb
or
sub
out
test
dec
mov
rcrb
hlt
mov
stos
call
fmull
sub
add
int3
mov
xor
mov
mov
xor
add
mov
mov
jmp
ret
ror
rcr
rcl
push
add
jge
fnstsw
fs
js
lods
cmpsb
jecxz
lret
cltd
sub
dec
sub
or
insl
addr16
adc
cmpsb
pop
jae
or
pop
fnsave
jnp
xorl
xlat
jmp
pushf
cmp
lods
add
fildl
mov
movl
jno
xor
call
add
cltd
mov
cld
or
cld
jecxz
pusha
and
push
subb
mov
das
jle
clc
fadds
push
cmp
rolb
sbb
fists
std
cmpl
add
leave
and
imul
nop
out
pop
sbbl
add
xchg
adc
cmp
repz
insb
pop
bound
inc
stos
mov
xlat
cmpsb
sbb
jns
mov
mov
mov
dec
mov
aas
mov
adc
and
mov
rcrb
fimull
clc
cmpsl
xchg
repz
and
pusha
jne
pop
adc
fwait
xor
add
cmc
or
adc
fistpl
rorl
movsl
rcl
cmp
mov
pop
mov
jle
imul
mov
imul
dec
sarb
mov
lcall
lock
pop
jo
mov
arpl
mov
add
pop
pop
mov
or
pop
test
andl
xlat
repnz
movsb
and
add
jnp
dec
loop
mov
out
sub
test
inc
stos
adc
mov
shll
ret
popl
mov
imul
hlt
cmpsl
sub
or
mov
ljmp
jecxz
or
pop
add
je
sbb
cli
insb
mov
mov
add
sbbb
clc
xor
ss
cmp
mov
insb
lcall
xchg
mov
lret
sbb
pop
imul
inc
dec
ficoms
cmp
and
push
xchg
shr
hlt
divl
dec
dec
mov
js
cli
sbb
fnstcw
out
rolb
xchg
dec
loope
cmpsb
or
sub
dec
cwtl
sub
mov
jmp
sbb
jbe
daa
imul
add
mov
movsb
loope
and
xorl
arpl
jmp
lea
sub
mov
and
loope
addr16
imul
mov
rorb
enter
mov
jno
std
lods
iret
dec
push
shll
loope
adc
bound
loope
arpl
push
scas
iret
idivb
jbe
push
hlt
jo
fwait
leave
ljmp
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
jmp
cmp
rcl
fcmovu
into
leave
xchg
loopne
js
fs
js
mov
loopne
pop
sbb
fcmovbe
adc
cmp
xlat
fnsave
or
pop
test
inc
dec
jb
pop
pop
in
jge
and
cmp
mov
cmp
std
add
out
in
sbb
inc
cld
or
sbb
and
xchg
inc
je
mov
mov
mov
or
push
mov
out
push
push
imul
jno
or
mov
pop
mov
mov
repnz
icebp
fwait
mov
pop
aad
xor
and
cld
cmp
or
or
data16
sbb
aaa
fsts
xor
or
fs
fnstenv
out
ss
stos
push
xor
push
jl
insl
aad
mov
icebp
mov
das
adc
cltd
enter
cmp
mov
add
cmp
or
or
int3
fdivrs
xor
je
pop
scas
sbb
push
test
scas
daa
dec
inc
push
jo
jae
repnz
mov
mov
sbb
xor
call
push
or
dec
jb
inc
jmp
lret
lock
test
sub
add
mov
arpl
mov
leave
in
and
scas
inc
fs
sub
movsb
xchg
jmp
cmc
dec
xchg
mov
cmp
cs
lahf
push
ljmp
xor
jle
cs
outsb
jnp
mov
ja
add
cs
cmp
popf
cmpsb
pop
jmp
pop
sahf
cli
and
or
or
mov
mov
sub
addr16
pop
ficomps
mov
fisubs
out
xor
data16
loope
sub
inc
add
sbb
dec
popf
push
mov
in
mov
xchg
or
jg
push
inc
or
fcompl
jb
cmpsl
xor
push
ljmp
lods
dec
fistpl
cmp
xlat
repnz
xchg
add
jmp
mov
push
mov
dec
pushf
popa
inc
fidivrl
jno
and
pop
xchg
mov
mov
xlat
pop
dec
fimull
psadbw
push
mov
sub
sbb
push
push
mov
jbe
push
fmulp
inc
addl
xchg
lret
dec
cltd
rol
sub
inc
jp
pop
stos
mov
sbb
sar
std
es
shl
in
scas
pop
sbb
push
pop
loope
iret
mov
ret
sbb
push
jb
fldt
insl
insl
daa
popf
mov
ror
ds
jecxz
and
out
mov
fdivrs
fistps
insl
mov
popf
popa
test
mov
lods
lea
mov
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
jmp
aas
fld
add
sahf
adc
out
js
jle
js
mov
jns
adc
jo
scas
cmp
dec
roll
sub
add
xor
out
call
hlt
jmp
out
inc
scas
mov
lcall
outsl
cwtl
cmp
ffree
lock
bound
lods
out
mov
loope
popa
lret
pop
ljmp
or
js
or
repz
sti
and
mov
mov
pop
jo
out
add
push
dec
jmp
shlb
jle
shll
jne
push
jb
ljmp
push
jae
dec
sub
jb
hlt
pop
sub
cltd
lcall
push
pop
xchg
test
popa
inc
pop
shlb
xchg
out
and
sbb
loopne
jecxz
adc
pop
es
rorl
dec
sti
pop
ret
mov
xlat
cli
pop
sub
xor
shrl
outsb
xchg
call
jno
clc
or
pop
xor
fdivrl
xchg
js
mov
mov
xchg
icebp
cmp
push
push
inc
xor
mov
xchg
mov
cs
cmp
mov
ja
imul
aad
push
out
mov
cmp
jge
xchg
jns
nop
fadd
aaa
add
mov
inc
mov
and
repnz
test
clc
pop
jne
sbb
adc
clc
outsl
pop
and
dec
cltd
or
xchg
rorb
mov
xchg
mov
call
sti
cmp
sbb
out
aaa
cmp
rorl
mov
pop
or
ret
inc
xor
mov
nop
pop
into
inc
jg
imul
std
lret
out
lret
or
sub
stc
cli
movsb
clc
clc
shrb
divl
mov
mov
adc
xor
sti
shlb
stos
ds
inc
push
int
das
mov
mov
inc
push
push
mov
push
rcll
xor
ljmp
rol
fsubrl
dec
lea
inc
icebp
xchg
aam
add
cwtl
mov
ret
xchg
and
sbb
pop
call
xchg
cmpsl
sub
aaa
sbb
jmp
fsubrl
push
and
and
xchg
mov
incl
es
rorb
jns
inc
xorl
in
push
or
lds
imul
outsl
cmp
int3
popf
iret
dec
ficoml
push
into
mov
push
push
shlb
cs
push
repz
in
fbld
push
jp
scas
and
pop
mov
dec
adc
addr16
pop
leave
ret
push
mov
push
xor
push
jmp
cmp
aad
mov
test
dec
cmp
js
cmpsl
jle
js
sbb
sbb
jno
mov
inc
jle
fdiv
lret
mov
dec
popf
icebp
test
mov
pop
pop
jmp
sub
add
jmp
inc
inc
and
jae
sbb
push
jb
gs
and
push
mov
insl
sbb
cltd
insb
dec
addl
and
lds
pop
sbb
push
lret
pushf
mov
dec
gs
sbb
jecxz
enter
jge
jae
int
sbb
lea
nop
xchg
xor
mov
mov
outsl
adc
call
popf
int3
jno
inc
nop
inc
and
mov
pop
dec
loopne
int
pop
lea
and
lods
mov
lret
xchg
repnz
push
fstpt
insb
lcall
loopne
cmpb
xchg
inc
fildl
pop
leave
pop
xchg
pop
and
in
imul
out
sbb
or
bound
repnz
insb
push
mov
imul
add
js
imul
subb
add
pop
adc
xor
lea
mov
jge
sbb
ja
pop
and
test
enter
add
mov
mov
cmp
lods
pushl
push
wbinvd
xlat
and
or
dec
insl
pop
test
adc
xor
fimull
mov
cmp
pop
incb
xor
jp
out
mov
mov
inc
gs
sub
add
mov
jb
xchg
inc
loopne
jmp
and
jecxz
mov
call
lahf
cmp
sub
in
mov
adc
fildl
mov
or
repz
xchg
xchg
sub
pop
or
xchg
cs
or
cli
mov
imul
mov
jmp
nop
pop
xor
ficompl
dec
call
int
inc
dec
push
rolb
popf
xchg
fcomi
jnp
nop
frstor
data16
dec
popf
push
xor
shll
repz
les
xchg
dec
ljmp
mov
adc
in
add
cmp
xchg
fisubrl
dec
loopne
sub
lock
push
int3
rolb
les
int
rcl
arpl
pop
mov
out
sub
insl
sbb
lock
xchg
cmpl
and
pop
movl
movl
mov
add
push
mov
mov
add
mov
mov
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xor
mov
mov
orl
add
add
xorl
imul
mov
jmp
cmp
lret
stos
adcl
sub
js
jle
js
lods
add
mov
mov
cli
dec
popa
int
fdiv
das
rcl
pop
cmp
aad
or
dec
cmp
les
cmp
pop
xchg
mov
ljmp
jle
mov
mov
sbb
ja
loope
mov
fildl
xchg
je
jle
loop
arpl
pop
and
aad
in
jl
xchg
jp
sub
cld
xchg
fwait
ret
pop
movsl
ds
cmpsb
into
ds
mov
enter
and
cmp
out
mul
pop
out
mov
pop
jp
scas
sbb
mov
sbb
lods
mov
mov
js
mov
inc
jbe
inc
cpuid
es
adc
xchg
push
cli
inc
inc
lds
sbb
cs
push
mov
inc
pop
jb
and
xchg
push
cs
mov
inc
cmp
testb
sbb
loopne
cmp
aaa
sub
in
daa
dec
rolb
int
movl
or
add
xor
out
xchg
iret
push
sub
and
loop
pop
dec
push
lock
jle
xor
cmpb
lds
sub
add
sub
xchg
aad
push
mov
mov
adc
arpl
jmp
sbb
repz
negb
cmp
dec
pop
sbb
dec
shrb
mov
repz
jmp
insl
rcrl
mov
in
mov
inc
daa
rorb
inc
and
adc
ret
mov
icebp
out
inc
adc
dec
push
jno
aaa
cmp
push
test
data16
add
dec
pop
sbb
iret
dec
pop
loop
dec
cmp
xor
loope
hlt
ds
xchg
mov
adc
test
or
test
pusha
orl
lcall
mov
pushf
call
add
outsb
adcb
jg
movsl
sbb
push
pusha
outsl
icebp
cmp
js
mov
cwtl
pop
inc
in
stos
xor
out
xor
movsl
into
pop
sbb
insl
sub
incl
jmp
subl
xchg
flds
popa
sbb
sbb
std
xchg
add
cmp
shrb
stc
pop
lds
mov
ret
jb
out
jno
dec
mov
lods
testb
xor
lock
jne
jmp
lret
cmp
mov
mov
js
cmpsl
jle
js
sbb
and
js
mov
hlt
pop
xor
inc
aad
fmul
mov
rcrl
push
scas
inc
lods
outsb
dec
cmpsl
lcall
xor
push
sbb
cmp
add
push
cmc
mov
test
into
jmp
lcall
and
and
cmp
adc
into
test
mov
inc
and
sbb
sbb
mov
and
dec
cli
cmpsb
mov
icebp
mov
push
enter
adc
push
push
jno
subb
pusha
cmp
popf
add
or
sbb
js
mov
je
xor
mov
xchg
jp
mov
pop
and
pop
adcl
test
and
loopne
pop
push
inc
cltd
aaa
cli
lret
lds
lret
ret
movsb
pop
jge
mov
lods
dec
rcrl
push
mov
bound
ds
xor
addr16
or
inc
sub
vaddss
jmpw
adc
loope
cmp
cmpsl
and
sbb
and
arpl
ss
or
xor
dec
lea
fisubrl
cwtl
and
shl
jp
add
inc
mov
pop
call
xor
jno
xor
mov
ja
testb
mov
bound
jmp
popf
adc
aaa
int3
dec
mov
or
clc
lahf
xchg
rorl
cmpsb
lods
sub
pop
jmp
adc
cld
xor
stos
repz
mov
and
mov
mov
pop
scas
ret
add
ljmp
ljmp
xchg
lret
iret
lcall
push
mov
cli
add
insl
clc
mov
mov
pop
push
cmp
cmp
in
enter
xor
pop
mov
test
cmc
mov
mov
mov
push
inc
pop
sbb
sbb
mov
add
push
icebp
fldcw
pop
adcb
in
loopne
leave
push
sbb
mov
dec
stc
insl
fiaddl
popl
sahf
addr16
mov
add
mov
and
loope
inc
add
popf
js
data16
imull
int
loop
fidivrl
sbb
inc
jbe
clc
pusha
out
sbb
add
lcall
subl
cld
addl
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
jmp
xlat
leave
lret
aad
leave
adc
jmp
xor
jle
js
shll
or
mov
div
mov
rolb
pop
in
inc
outsl
test
cmp
mov
pop
and
pop
lods
mov
decb
loop
mov
test
into
jge
cmp
push
sub
or
sub
pop
je
lods
fisttpll
mov
mov
call
inc
stos
mov
push
push
sbb
loope
mov
xor
pop
jo
rolb
jo
mov
shll
insl
xchg
lret
pop
mov
pop
xchg
xor
cwtl
mov
xor
and
outsb
lock
mov
xchg
sbb
add
jle
adc
add
add
push
es
or
in
pop
mov
and
cmp
fists
das
stos
mov
or
js
push
imul
sbbl
sub
add
es
lahf
test
pop
mov
in
sahf
xor
xchg
dec
push
aad
cmp
push
sbb
add
stos
gs
adc
data16
pop
cmp
mov
fucomi
xchg
and
in
add
jne
inc
cmp
jge
out
out
push
mov
add
jmp
xor
enter
push
cmp
inc
add
lods
pcmpeqw
and
jne
scas
shll
int
test
fdivrl
or
xor
stc
dec
cs
adc
insl
inc
enter
imul
je
lods
adc
stc
cmpsb
xchg
adc
lret
in
out
subl
sti
fucom
sub
shll
mov
sub
mov
and
pushf
aad
mov
add
push
jl
xchg
sbb
fldt
daa
int
sub
rclb
add
mov
dec
test
xchg
lock
mov
fwait
mov
fists
cmp
shll
dec
les
or
pushf
sub
sub
lea
fisttpl
mov
lods
icebp
adc
decb
hlt
mov
pop
nop
sub
adc
insb
outsb
sub
mov
lahf
sbb
ret
or
cmp
jb
push
jecxz,pt
or
sarl
fstl
fildl
iret
cmp
xor
movsl
rolb
add
ss
jle
jo
fstpl
inc
pop
dec
test
dec
xchg
add
adc
rclb
fisttpl
cmc
cld
pushl
ret
mov
imul
add
mov
mov
pop
leave
ret
push
mov
jmp
leave
enter
xlat
enter
mov
js
jle
js
mov
jp
mov
adc
popf
fldl
fdivl
ds
xchg
pop
dec
lcall
xchg
fidivrl
nop
movsb
es
test
and
jp
adc
mov
cld
sbb
adcb
dec
adc
shlb
jne
out
notl
lcall
outsb
or
mov
mov
jmp
add
push
dec
jo
adc
dec
jmp
ljmp
clc
sub
mov
repz
xlat
adc
xchg
int3
fucomp
push
xorl
pop
into
inc
call
fwait
iret
adc
push
mov
cltd
inc
out
call
test
pop
fsubrp
das
pop
sub
adc
dec
movsb
fsub
xchg
sbb
mov
test
insb
jnp
enter
push
daa
sub
loopne
das
loop
mull
scas
rcr
adc
xor
jge,pn
mov
and
cmp
xchg
test
push
push
push
jl
cli
pop
push
es
js
fdivrs
aaa
pop
call
dec
ficoml
pusha
movsb
int3
lahf
cltd
add
ljmp
jle
jg
cltd
mov
add
out
dec
repnz
orl
adc
sbb
cmpsl
mov
cli
jmp
mov
movsl
xor
or
mov
fcoml
inc
and
pusha
mov
insl
hlt
jecxz
add
sub
mov
jne
inc
mov
xchg
out
hlt
and
call
adc
ficompl
out
lods
mov
mov
out
cltd
leave
test
in
scas
nop
mov
inc
dec
and
sahf
sub
mov
xchg
push
fimull
xchg
xchg
sahf
xor
shll
cmp
aad
call
aaa
loope
pusha
mov
cmpb
sub
push
in
xchg
int3
fisttpl
xchg
xchg
sbb
pop
mov
leave
xor
out
jle
scas
sub
jns
mov
pusha
adc
xchg
cwtl
mov
pop
lret
cmp
pop
xor
in
out
mov
mov
fisubrl
aas
insl
addb
testb
xchg
scas
fdivl
mov
adc
mov
xor
loop
ret
mov
dec
stos
stc
rcrl
idivl
cmp
push
jge
cmp
mov
outsl
gs
inc
rcrl
xorb
sub
lea
test
dec
xchg
pop
test
loope
jmp
sub
outsb
or
cmp
inc
xlat
mov
xor
nop
xor
push
mov
push
mov
movl
mov
mov
mov
movl
movl
cmp
jne
xor
jmp
lret
rcl
xlat
fxch
fsts
idivb
idivl
push
jle
js
das
add
add
loope
push
jno
push
xchg
fs
jp
mov
sub
push
pop
mov
adc
sub
fsubs
scas
test
and
mov
cwtl
cmp
push
ret
mov
ljmp
fisttpll
sbb
jo
dec
adc
xchg
jecxz
xor
mov
shr
inc
pop
inc
add
jno
imul
push
addr16
movsb
pop
fucomip
cmpsl
mov
scas
cmc
jne
adc
lcall
xlat
stc
jne
daa
sarb
jge
movsb
rcll
xchg
data16
cmp
and
icebp
jg
push
jl
das
xor
in
xchg
jl
adc
and
inc
in
dec
fldenv
sub
xchg
inc
sbb
jp
sub
out
loop
or
stos
fbstp
pushaw
or
rcrb
mov
es
pop
xor
lahf
jg
les
clc
dec
sbb
push
push
xchg
jl
out
mov
rolb
fldlg2
dec
lods
inc
xchg
shl
cwtl
add
cltd
inc
bound
std
aas
mov
sbb
or
push
cmpsb
in
in
pop
mov
push
stc
ds
dec
clc
fwait
mov
cmp
inc
aas
mov
cli
ljmp
das
std
sbb
jle
xor
adc
jo
sub
cli
mov
xchg
xchg
mov
fs
adc
or
add
int3
movsl
pusha
scas
imul
add
shrl
inc
push
popf
xorb
mov
jno
mov
xchg
shll
push
inc
jo,pt
sbb
pop
jns
xchg
imul
out
int3
fcmovbe
adc
scas
outsl
or
adc
cld
and
imul
inc
pop
xor
stos
ljmp
xor
in
jne
in
stc
lcall
and
xchg
xlat
pop
cmp
daa
push
enter
pop
cmp
stos
and
loop
movsl
dec
xchg
andl
push
rcrb
fcomip
scas
mov
sarb
or
push
mov
enter
cli
cmpsl
jbe
push
ja
stos
or
lea
pop
adc
inc
xchg
pop
xchg
out
jae
lret
or
leave
aas
jl
pmuludq
inc
test
pop
les
mov
jge
repnz
outsb
or
fld
inc
shlb
daa
inc
popa
outsb
das
or
fnstcw
mov
sbbl
mov
xor
and
mov
add
neg
mov
orl
movzwl
sbbl
not
xorl
and
jmp
ret
int3
leave
rcr
sahf
inc
imul
hlt
js
push
jle
js
cmpsl
xor
pop
mov
psubusb
mov
jmp
mov
inc
and
mov
icebp
lds
pop
mov
mov
mov
cmp
loopne
add
adc
pushf
jbe
jne
add
inc
inc
cmc
cwtl
fs
jge
jno
out
loop
mov
and
or
repz
scas
scas
inc
es
xchg
jbe
push
push
insb
in
inc
ror
ljmp
insb
adc
sub
pushf
push
aad
mov
insb
sti
mov
cmc
fs
sub
fs
lea
loopne
movsb
adc
or
in
mov
and
inc
dec
test
and
vmovntpd
push
rclb
push
inc
add
cwtl
mov
pop
push
or
lds
jge
pop
cltd
icebp
inc
inc
imul
cwtl
pop
add
adcl
jle
xor
cmp
and
and
inc
inc
popa
inc
fistl
imul
ss
adc
xchg
jg
cmp
lods
mov
dec
xchg
in
mov
ficoml
mov
push
pop
push
nop
and
pop
adc
pushf
stc
mov
test
pop
sub
js
shll
mov
inc
lcall
xchg
scas
or
push
aaa
or
popa
or
aad
leave
incl
mov
incb
push
cli
aad
movsl
cmpsl
pop
hlt
mov
in
fimull
jg
inc
popf
and
pop
mov
lods
fildl
inc
fsubrs
repz
xchg
jbe
fstpl
adc
lods
pop
imul
push
dec
imul
cmp
mov
xlat
and
hlt
add
ljmp
repz
rdtsc
es
inc
rol
jns
mov
aas
lahf
jb
cwtl
ds
mov
mov
and
pushf
test
into
leave
nop
cmp
out
stos
jne
stos
dec
adcl
ja
add
ja
jno
call
push
movl
and
mov
mov
mov
cmp
sub
cmp
out
jno
mov
mov
mov
cltd
filds
mov
sbb
movsb
inc
pop
mov
adc
mov
xorb
fucomip
add
int3
ljmp
or
repz
pop
jbe
dec
repz
cli
mov
xlat
add
mov
push
ljmp
mov
mov
mov
jmp
xorl
mov
pushl
call
test
je
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
mov
sub
xor
movl
mov
xor
or
sub
imul
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
add
jmp
cmp
ret
ror
into
jge
enter
or
js
jle
js
pop
xchg
xchg
mov
mov
scas
jne
add
clc
pop
sti
push
inc
std
xchg
loopne
inc
ds
mov
adc
xor
jg
push
cmc
push
push
push
xlat
mov
jmp
fnsave
aaa
sbb
dec
jb
push
cmc
push
ret
leave
mov
xchg
daa
and
push
or
sbb
sub
push
mov
icebp
inc
mov
push
lret
fsqrt
lds
mov
sbb
jle
dec
insb
jge
mov
add
cmp
test
test
in
shl
stos
inc
subl
or
test
ljmp
ljmp
jns
pop
dec
negl
push
ret
daa
inc
sub
sub
dec
xchg
cmp
cwtl
fbld
dec
movsl
mov
mov
add
or
xchg
mov
mov
xchg
xchg
push
cmp
xchg
mov
outsl
sbb
add
roll
lcall
sub
add
adc
and
inc
outsl
lods
adc
movsl
rcll
push
call
push
pop
pop
in
pop
adc
sub
scas
testb
into
aam
je
jae
arpl
cmpb
cwtl
sbb
inc
ret
call
ret
nop
lcall
pop
divb
loopne
inc
idivb
movsb
test
mov
lods
loop
jno
xor
sub
and
fs
pop
leave
out
xchg
das
cmp
mov
into
dec
pop
cmc
push
sahf
outsb
dec
sub
insb
and
pop
fnstcw
and
dec
scas
call
jl
leave
pop
addr16
lock
test
dec
aad
subb
xchg
or
imul
stc
stc
cli
cmpl
sbb
pop
fdivs
sub
in
push
outsb
inc
sbb
int3
pop
mov
fs
mov
and
cmc
jge
sub
iret
aam
fdivrs
fcmove
push
out
cmpsb
loope
hlt
pop
pop
ja
adc
cmp
outsl
add
and
out
sub
jecxz
imul
pusha
sahf
adc
pop
xchg
out
lret
pop
inc
shl
push
mov
xchg
nop
pop
ret
leave
ror
push
dec
add
xchg
ficompl
dec
jge
aas
cmc
adc
and
out
test
insl
fldenv
jmp
mov
fistpl
fistpll
push
sbb
sbb
les
pop
movsl
pop
xchg
int
rorl
imul
int3
stc
cmp
rcll
push
or
icebp
jg,pn
push
outsb
stc
mov
cmp
mov
fistpl
leave
cmp
jg
cli
xchg
test
clc
add
cwtl
mov
and
in
inc
dec
push
and
push
stos
inc
add
jmp
xor
add
mov
inc
loopne
and
add
add
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
lea
mov
mov
sub
and
mov
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
push
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
mov
jmp
ror
int
dec
xor
mov
pop
fdivrp
js
je
js
pop
xor
punpckhdq
or
loop
push
cmp
mov
in
aaa
dec
cmp
mov
lods
outsb
add
dec
arpl
mov
je
and
xchg
imul
sbb
sbb
pop
dec
pop
jg
push
das
dec
push
int
xchg
xchg
mov
xchg
push
pop
adc
test
clc
cltd
adc
lcall
or
aas
leave
push
jbe
pop
mov
cmpsb
repnz
cltd
sbb
lahf
imul
in
dec
inc
and
mov
fucomi
in
adcl
sub
jle
ffree
push
sbb
xchg
xlat
mov
sub
enter
aad
fs
testl
js
adc
dec
mov
stos
push
or
popf
jo
mov
or
lahf
outsb
fcoml
sub
or
stc
sti
loop
fmuls
scas
shrb
mov
fs
inc
mov
cwtl
shrb
test
aad
push
test
pop
push
sbb
gs
pop
movsb
or
xor
jmp
loope
jns
addr16
hlt
push
push
add
fwait
mov
mov
push
pop
repnz
pusha
xor
pop
mov
adc
fcomps
iret
push
sub
xor
cmc
sub
lret
mov
xchg
loope
in
js
pushf
jnp
push
iret
stc
lds
cmpsl
test
ret
lret
je
mov
ret
ret
inc
xchg
push
push
cmc
lods
sbb
flds
and
xchg
sbb
jp
mov
or
fiaddl
shrl
repnz
and
jge
add
mov
vsqrtsd
xor
ret
cmp
or
aaa
xchg
rclb
xchg
cmpsb
sub
pop
hlt
push
sub
cmp
add
sub
iret
test
test
mov
mov
xlat
push
aaa
ljmp
xchg
mov
sti
mov
sbb
fidivrs
push
mov
sti
cmp
dec
jne
xor
data16
and
rorl
and
push
pushf
and
sbb
mov
cmpsl
shll
mov
jae
push
out
rcrl
lds
jbe
int3
loop
insb
pop
call
lds
mov
mov
mov
or
xchg
ss
lret
test
or
pop
cmp
adc
mov
adc
hlt
roll
fcmovne
test
hlt
sti
pop
xchg
xchg
or
ficoml
dec
out
fiaddl
cmp
adc
jb
or
add
psubusb
push
push
addr16
es
pusha
fsubs
xchg
pop
and
aas
mov
sub
jg
sbb
les
cli
and
xor
push
lds
and
push
fcompp
iret
sub
mov
mov
xor
mov
jmp
xlat
rcl
aad
vmovapd
jmp
js
jle
js
inc
insb
or
inc
sub
push
and
pop
pop
and
xor
xor
push
sbb
loopne
or
aaa
arpl
mov
int
scas
mov
imul
rol
adc
fdivrp
add
pop
cli
xchg
idivl
rorb
add
adc
adc
sub
mov
mov
ret
mov
addr16
je
pushf
cmp
movl
icebp
cmp
pop
dec
pop
xor
rcrl
add
decl
dec
xor
jbe
add
rorb
data16
mov
jge
adc
popa
ficompl
loop
pop
push
lahf
scas
jg
or
es
or
ja
mov
jne
lret
stos
xchg
mov
aas
mov
push
test
test
or
out
cs
lret
and
mov
sub
decb
ss
insl
dec
and
test
cmpsl
test
jg
sbb
xor
or
and
cmp
aaa
dec
jns
cs
adc
jns
mov
into
jecxz
pop
pop
pop
mov
stos
adc
lea
mov
dec
mov
push
inc
cmp
inc
cmp
lret
or
jae
cmpsb
repz
sub
les
iret
push
shlb
jmp
jo
sahf
test
ret
gs
std
fstps
mov
repz
mov
aad
jne
jo
stc
inc
lahf
repnz
xor
adc
or
sbb
ret
jmp
and
gs
out
shrb
test
or
mov
push
adc
lret
inc
cli
clc
inc
ljmp
imul
nop
adc
or
cltd
adc
adc
in
add
idivb
movsl
icebp
imul
sbb
icebp
mov
cmp
mov
leave
rcrl
int
sahf
or
pop
mov
std
lret
pop
icebp
add
push
xchg
das
cli
xlat
xchg
jp
jbe
repz
mov
jecxz
xor
push
cwtl
sbb
out
ret
pop
xor
test
lds
andb
xor
test
jns
dec
jae
shll
test
mov
test
cltd
and
into
fsts
jmp
add
pop
mov
pop
lahf
xchg
xlat
cmp
lea
fwait
inc
shrb
mov
xchg
insb
inc
enter
sbb
pop
and
lock
je
jg
inc
xchg
das
rcrb
cwtl
fsubl
push
loop
lea
mov
into
out
mov
fwait
xchg
or
movsb
btc
mov
add
dec
mulb
fnstenv
rolb
movb
div
mov
movl
cmp
je
movl
lea
mov
mov
jmp
aas
aas
iret
iret
xlat
xlat
fists
push
addps
dec
lock
cmpb
jle
js
sbb
cpuid
pop
sti
xor
cmpsb
mov
inc
xchg
lds
push
adc
mov
cltd
mov
push
pop
std
sub
cmp
and
mov
jne
adc
mov
add
push
push
jg
ficoms
inc
in
xlat
mov
jmp
jecxz
nop
mov
sub
enter
stos
fucomip
rcrl
mov
xchg
mov
mov
rclb
enter
pop
out
dec
adc
loopne
hlt
cmp
jnp
or
cld
ficomps
cmpl
shrl
xor
arpl
inc
mov
ficomps
or
jb
xor
and
ja
cmp
mov
shrb
notl
xor
out
push
in
cs
out
sub
jns
and
decl
adc
lahf
cmpsb
cli
jns
cmp
lods
sahf
jge
int3
jecxz
jp
push
mov
pop
sbb
out
sbb
sub
dec
or
cmp
mov
jmpw
sub
add
xor
lret
jbe
nop
pop
addr16
imul
mov
and
adc
outsl
js
movsl
test
ja
cli
nop
movsb
shlb
sbb
outsl
jno
lods
sbb
add
fistl
xor
cld
cmp
fistpll
scas
arpl
jp
sbb
ljmp
sahf
sbb
dec
popa
sarb
shll
inc
ret
xor
int
cmovl
jno,pn
dec
lea
cmpsb
loopne
xor
xchg
int3
push
mov
sar
xchg
sbb
in
sarb
sbb
les
mov
lret
sub
or
push
and
push
imul
adc
adc
push
mov
stc
fistl
push
les
test
in
cmpsb
sti
add
aaa
rcrl
push
mov
sti
pop
inc
dec
lcall
mov
jb
repnz
into
rcl
mov
lahf
pop
sbb
int3
push
add
ja
popl
pop
fs
sbb
mov
cmp
lret
dec
out
push
idivb
mov
add
xor
jne
jnp
cmp
mov
pop
mov
iret
lahf
stc
mov
rcrl
es
mov
inc
popa
loop
cli
out
repz
dec
ljmp
and
add
imul
fsubrs
mov
std
xchg
fs
testb
loope
push
push
in
mov
sbb
idivl
btc
sbb
xor
cmp
xchg
sti
xchg
pop
data16
lods
xchg
std
mov
or
aaa
or
or
inc
pop
mov
or
pop
add
jp
sti
pushf
movsl
enter
jle
inc
into
mov
imul
mov
mov
jmp
sarl
fcmovne
mov
fsubr
lahf
or
js
je
js
arpl
ror
repz
jmp
xor
xchg
push
ffree
stos
xlat
inc
cmp
bnd
in
pushf
sub
jecxz
xchg
les
dec
lahf
dec
scas
int
and
adc
outsb
fstps
jmp
mov
dec
dec
sub
push
xchg
stc
mov
dec
cltd
inc
jmp
add
clc
inc
sub
pop
push
mov
adc
test
pop
js
je
dec
or
es
fldcw
sub
fdivrl
jb
add
bound
insl
dec
cltd
mov
mov
mov
or
ljmp
jp
cmpsb
cwtl
int3
add
xor
push
push
rep
pop
and
jnp
mov
enter
xchg
sub
jl
cmpsb
pop
push
jge
or
add
out
sub
sub
mov
jnp
dec
push
lods
add
and
iret
dec
sbb
or
cwtl
icebp
popf
xchg
scas
and
out
sub
sbb
fisubl
mov
adc
adc
or
aas
cld
insl
ret
filds
shrl
shlb
orl
test
push
out
cmp
mov
loopne
sub
inc
imull
mov
hlt
aad
leave
scas
sub
pushf
lcall
insb
jo
push
sbb
add
clc
mov
push
ljmp
add
mov
das
movsl
and
cmp
notl
jae
jg
mov
stos
mov
hlt
xchg
out
cmc
lods
jg
push
in
inc
jmp
xchg
out
aad
xchg
mov
int
js
sahf
pop
fwait
cmpsl
dec
test
popl
xchg
push
mov
repnz
push
add
testl
inc
inc
stos
cwtl
xchg
pusha
mov
test
mov
xor
roll
sub
mov
inc
sub
and
scas
and
lds
xor
cmp
ss
xlat
inc
sbb
xchg
adc
insl
sbb
inc
das
lds
repnz
xchg
out
push
stos
gs
into
xchg
xchg
subb
js
adcb
xor
cmpsb
insl
sbb
mov
jl
shr
xchg
or
xchg
sub
pop
xchg
jge
loop
js
fldenv
and
xor
xchg
pop
arpl
fisttpl
mov
push
mov
or
inc
mov
jmp
adc
mov
sbb
lret
testb
aad
add
inc
inc
and
pop
cmp
cli
stos
les
pop
lods
sti
bound
mov
loope
or
mov
sbb
push
or
repnz
cmp
jmp
rol
leave
fcmove
rcl
pop
mov
pop
ror
mov
je
js
add
inc
xchg
and
pop
mov
sub
fsubr
sub
shrl
dec
cmp
inc
jb
test
in
and
dec
stc
cli
sbb
lods
dec
leave
cmp
push
shr
int3
popa
mov
das
inc
popa
inc
xor
dec
cmc
orb
cli
xlat
adc
mov
aam
sub
int
lock
pop
repnz
mov
fisubrs
sub
stos
scas
adc
mov
cwtl
or
sub
mov
dec
inc
pusha
pop
les
rorb
mov
rorl
xor
iret
fdivl
and
arpl
leave
adc
loopne
cwtl
js
into
mov
lcall
push
lds
in
in
rclb
in
ds
ja
push
ljmp
jb
fiadds
in
stos
lds
add
and
icebp
pop
hlt
ret
cwtl
int
mov
les
sbb
sub
inc
fwait
lock
xchg
daa
das
test
xor
fcomp
mov
push
xchg
push
cmp
test
sbb
jmp
call
inc
lea
cwtl
fdivrl
cli
cmpsl
push
sbb
stos
add
je
push
cmpsb
xchg
jne
mov
aaa
cmp
mov
inc
mov
mov
dec
pop
add
xchg
jo
imul
or
push
mov
arpl
xor
jge
inc
fisubs
xor
mov
insl
leave
pop
mov
xor
inc
ret
cmp
xchg
or
loop
divl
mov
pshufw
mov
inc
xor
inc
cmp
or
fists
dec
mov
leave
bound
sahf
out
push
xor
test
rclb
xor
cmp
pop
jge
or
iret
dec
shlb
mov
and
int3
push
imul
adc
sub
into
ljmp
cmp
es
fnstenv
and
clc
dec
mov
and
add
js
xchg
sbb
add
jmp
push
shlb
dec
pushf
jae
sbb
out
pop
xchg
call
imul
xchg
or
xchg
or
or
repz
inc
fcmovnu
mov
daa
or
dec
mov
or
inc
icebp
data16
inc
clc
enter
into
nop
mov
leave
lcall
addr16
loop
outsl
cmc
fsubp
push
sbb
scas
pop
insl
insb
inc
stos
cmp
sub
jle
fisubs
movsb
fbstp
cwtd
jg
lret
adc
psubusb
ret
andb
ficompl
and
loop
test
add
jmp
mov
inc
cli
outsl
push
sbb
add
aaa
push
pop
cmc
hlt
fwait
stos
je
mov
orl
mov
xor
add
pop
pop
pop
leave
ret
mov
add
jmp
leave
xlat
ret
rcl
leave
fldcw
mov
or
jle
js
push
mov
int3
mov
mov
pop
pop
push
rclb
ds
insb
ss
arpl
into
dec
xlat
sub
jmp
ret
xchg
ds
sub
cmp
xchg
cmpsl
test
push
int3
xor
daa
jecxz
addl
xchg
or
out
adc
mov
jae
jmp
cmp
pop
fdivs
out
ljmp
mov
movsl
es
aaa
or
mov
mov
push
mov
sub
gs
mov
out
aas
les
mov
lock
sub
fucomip
mov
sti
cmp
xor
shrb
dec
or
pop
add
insb
mov
mov
push
inc
xor
mov
daa
xchg
sub
mov
push
lcall
enter
mov
imul
add
cmp
loope
notb
dec
jne
push
hlt
lods
repz
dec
scas
decb
or
jg
push
cmp
les
cmp
fsubrs
push
enter
mov
jge
arpl
psubsw
mov
pusha
xor
sub
shrb
lret
add
daa
inc
mov
dec
mull
aad
adc
cmpl
push
jbe
sbb
sbb
xor
clc
push
leave
data16
ljmp
mov
bound
inc
add
adc
leave
and
dec
lea
lcall
sbbb
pop
or
dec
pop
mov
cwtl
cmc
pop
enter
insl
cmp
lods
inc
push
out
daa
mov
repz
aad
add
ds
movsl
or
dec
fstl
int3
dec
pop
loope
stc
mov
mov
dec
pusha
dec
pop
enter
mov
mov
mov
mov
mov
in
fcoms
mov
xorb
lret
lcall
push
jl
movsb
jno
ret
iret
push
loopew
in
in
jne
pushf
jp
pop
repz
mulb
popf
sub
sbb
in
mov
pop
adc
gs
cmp
add
xor
into
ja
push
pop
stos
mov
repnz
adc
push
and
xlat
xor
iret
or
dec
push
stc
shr
add
inc
cmp
in
pusha
mov
xor
mov
stc
pop
cmpb
xchg
movsb
mov
lcall
cwtl
push
stc
rolb
hlt
sbb
loop
xadd
cwtl
and
fisubrs
xor
scas
daa
xlat
lock
shll
mov
xchg
jle,pn
test
dec
mov
test
cmp
je
mov
andl
jmp
jmp
into
aas
ds
rcl
add
stos
rol
daa
rol
mov
je
js
dec
bound
push
bound
pop
pushf
icebp
push
out
mov
mov
test
push
push
pop
es
xchg
mov
repnz
aas
push
push
xchg
dec
jmp
and
fwait
or
ret
sub
mov
xor
shlb
push
loope
fadds
and
rol
mov
cld
ret
and
inc
ret
cmp
or
xchg
and
outsb
push
push
or
mov
and
and
xchg
mov
iret
out
mov
subb
lret
dec
mov
pop
mov
push
ljmp
inc
dec
or
mov
mov
lock
xchg
and
incb
arpl
inc
pop
scas
or
mov
xlat
rorb
dec
push
sbb
add
add
adc
add
jmp
in
xchg
or
pop
mov
aaa
inc
jmp
fs
out
dec
push
data16
push
shlb
mov
addb
outsl
sbb
lock
dec
mov
in
xchg
mov
inc
ret
mov
fld
jno
hlt
stos
pop
and
mov
stos
popf
ss
in
sub
daa
cmpsb
fidivl
popa
mov
cmpsl
xor
xchg
or
push
cmc
clc
mov
dec
mov
imul
pop
dec
stc
mov
pop
cmp
cmp
xchg
andl
sahf
je
test
adc
cmc
insl
and
clc
lcall
mov
outsb
orl
xchg
jb
loope
fsubrs
repz
push
inc
fistps
mov
mov
dec
xchg
ficompl
mov
mov
jno
push
shlb
cmpsl
mov
lods
add
push
push
mov
nop
dec
xor
outsl
or
imul
ss
mov
inc
lret
imul
jb
sti
clc
push
gs
lahf
out
and
pop
push
add
lea
sbb
push
rcll
inc
rcl
push
js
popa
sahf
jns
iret
out
xor
push
cmp
xor
cmpsl
mov
mov
jnp
push
stc
pop
dec
xchg
push
popa
push
stc
sti
push
mov
jbe
outsl
mov
pop
scas
jl
sbb
nop
fimull
or
inc
inc
xor
neg
xor
lock
imul
xchg
xor
mov
aaa
outsb
popa
adc
push
cmpsb
inc
push
ficoms
lods
jp
scas
int
dec
push
out
imul
adc
push
pop
dec
pop
int
mov
jle
hlt
mov
imul
rcr
inc
aas
jg
icebp
push
dec
out
dec
mov
daa
minps
ja
pop
rorb
sbb
ljmp
add
inc
mov
fbld
cmp
jns
inc
hlt
mov
or
cmp
je
mov
xorl
jmp
mov
jmp
ds
ror
rcl
fisubrl
xchg
jge
gs
je
js
pop
or
lock
cmc
mov
push
mov
arpl
mov
jg
sub
lods
pusha
mov
or
insl
dec
xchg
and
pop
insl
ljmp
inc
and
dec
push
adc
jns
inc
aas
sbb
cmp
aaa
xchg
movsb
adc
int
mov
inc
and
loop
rcr
out
out
pop
pop
mov
sbb
sbb
nop
cli
popa
fwait
ja
cmp
fsubrs
push
dec
jns
mov
das
and
inc
adc
cmpsl
push
loopne
repnz
or
jne
lret
in
mov
mov
inc
xchg
or
jno
sti
adc
or
sub
insl
lsl
stos
js
and
int
js
testb
scas
jg
or
in
insl
or
pop
into
hlt
or
xor
cmpsl
dec
popa
incl
push
dec
mov
fcmove
xchg
int
fs
jbe
fldl
push
test
out
lods
insb
xchg
shrb
jge
stos
mov
add
push
in
lahf
inc
mov
loope
aaa
sahf
mov
leave
xchg
mov
xor
adc
jl
push
pop
and
ds
movsl
xor
mov
repz
or
sub
movsl
pop
je
mov
je
int
ret
std
jne
or
sub
xor
pop
push
lret
adc
add
lahf
xchg
sti
cmpsl
jnp
cmpsl
gs
popa
rorl
clc
sub
mov
out
push
js
pop
sub
push
mov
mov
sbb
sbb
dec
icebp
adc
imul
icebp
aad
add
fs
jecxz
sub
cmpsb
int3
or
add
pop
insl
adc
scas
mov
sbb
mov
and
int
mov
fiaddl
mov
subl
dec
cwtl
dec
add
gs
mov
movsl
jae
xor
ret
stc
rcr
mov
or
mov
cwtl
popf
insb
jb
loop
bound
addb
insb
cmp
mov
inc
mov
push
je
iret
dec
iret
test
scas
test
inc
sub
sbb
mov
mov
mov
xchg
mov
pop
push
pop
rorb
icebp
pop
mov
add
jae
insb
push
mov
adc
outsb
dec
mov
sbb
cltd
mov
lds
or
imul
ss
xchg
xor
stos
popf
xor
pop
mov
adc
sahf
lea
lods
ds
jge
shll
cli
sbb
out
mov
mov
push
jae
xchg
sbb
fisubs
push
popa
push
jnp
jge
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
jmp
int3
into
lret
ror
ficoml
cmc
mov
xchg
js
je
js
insl
jns
ret
xor
sbb
call
fwait
sub
pop
mov
pop
outsb
mov
clc
ret
loope
loope
insl
sub
loopne
sbb
scas
pop
dec
jo
and
cmpsl
fyl2xp1
das
cs
mov
push
int3
testl
and
lcall
std
mull
jns
aas
es
adc
adc
std
ljmp
pop
das
add
dec
and
pop
nop
pop
xchg
inc
inc
add
es
push
scas
adc
stc
adc
std
and
cmp
mov
ret
pop
clc
je
mov
adc
imul
das
adc
sbb
nop
jno
add
imul
leave
lds
sbb
mov
pop
div
pop
stos
push
pushf
mov
cmp
mov
lret
inc
dec
rolb
inc
loope
cld
jb
mov
test
rcrb
dec
jl
cwtl
movb
mov
in
nop
popa
sub
loopne
inc
cmpsl
cmpsb
test
std
sbb
xchg
and
fstpt
push
lcall
mov
jecxz
ficompl
jno
das
dec
test
imul
cli
bound
push
shrb
push
cmpsl
add
sarb
fisubrs
xor
fstpt
hlt
js
stos
inc
push
ds
jecxz
into
jno
sbb
ja
mov
pop
pop
fwait
lret
test
insb
fimuls
ja
iret
add
adc
mov
cmpsl
iret
data16
jnp
mov
int3
aaa
inc
out
insb
cmp
jnp
js
outsb
mov
cmp
xor
jae
mov
dec
mov
stc
push
mov
xor
in
fistps
and
nop
xchg
outsb
cmp
sub
icebp
mov
xor
das
js
ud2
xchg
out
mov
mov
or
shlb
fldl
cmp
jle
mov
adc
das
or
int
jmp
test
mov
pushf
int3
dec
jnp
setl
iret
xchg
sbb
pop
mov
leave
fistpll
add
push
jae
ja
jge
cmp
das
shll
push
imul
orb
sbb
outsl
test
jmp
das
mov
in
mov
add
jbe
mov
add
fimuls
loop
pop
test
jae
roll
mov
cmpsb
and
cs
cmp
mov
mov
xor
jge
sub
or
inc
flds
sub
pop
sub
pop
adc
outsb
xor
xchg
xchg
mov
mov
mov
jmp
xlat
cmp
ds
js
adc
cwtl
dec
and
je
js
ret
xorl
bound
ja
or
test
gs
rcl
jg
fwait
add
mov
inc
xchg
xchg
or
push
xor
in
enter
push
add
cld
mov
push
dec
daa
jb
push
add
or
in
or
or
cmp
jecxz
into
lahf
jecxz
out
loop
xchg
sub
mov
stos
inc
push
mov
inc
xchg
inc
xchg
dec
jecxz
or
mov
jno
push
dec
add
dec
xchg
mov
lea
ret
adc
push
out
xchg
pop
fs
loop
sub
fwait
dec
xlat
fstl
push
out
xor
sahf
mov
cmp
loop
das
lret
test
lret
cmp
xchg
adc
outsb
inc
andb
pop
testb
xor
pop
sbb
daa
sti
es
push
popf
mov
xor
test
xor
bound
aam
or
cs
ffreep
mov
mov
jge
pop
jo
dec
fiadds
cmp
adc
and
pop
ret
mov
movsl
mov
ret
sbb
inc
push
int3
adc
test
pop
arpl
pusha
add
test
pop
sub
mov
fsubrl
cmp
ret
or
imul
popa
inc
jmp
pop
inc
lods
push
je
and
push
fwait
mov
cmp
push
lods
cltd
fmuls
inc
dec
das
test
push
scas
pop
pop
cwtl
cmp
jne
cmp
cltd
notl
fs
mov
lcall
push
xchg
cmp
ss
mov
push
sbb
xor
jecxz
mov
mov
jmp
aaa
cmpsb
xchg
out
sub
jae
mov
lcall
mov
mov
xchg
test
push
cs
repnz
arpl
jp
mov
mov
loopne
stos
push
fidivl
jmp
push
jg
fimuls
ror
lret
xchg
sbb
sbb
shll
jl
je
loope
call
dec
adc
jno
xor
testb
int
pop
add
addl
fstpl
xchg
and
adc
push
sbb
lcall
gs
inc
push
mov
cmc
imul
aam
mov
dec
lods
in
mov
dec
or
aam
in
pop
into
adc
jb
fnstcw
test
les
aad
ret
pop
xchg
sbb
lahf
add
dec
je
mov
jno
fmuls
sti
mov
daa
inc
jge
jbe
jb
lcall
or
push
cmc
mov
add
movzwl
mov
xor
lea
add
jmp
cmp
fcmove
jns
fdivl
cwtl
js
je
js
jp
cmp
push
aas
cmc
push
push
mov
adc
xor
xchg
inc
jecxz
cmpsb
cltd
icebp
dec
and
lahf
shll
jo
repz
dec
ja
ficompl
outsb
bound
stos
xchg
pop
and
jo
cwtl
rclb
add
les
out
or
add
int
dec
ret
movsl
pusha
sub
xor
loop
js
dec
sahf
xchg
mov
and
xchg
jge
sti
adc
rorl
adc
scas
add
mov
add
xchg
test
cmp
or
xor
cwtl
outsl
dec
push
sub
mov
push
adc
sar
jbe
jno
jge
mov
or
mov
fcmovnu
cmp
aaa
clc
js
data16
or
push
ret
push
lds
mov
inc
enter
push
mov
nop
and
adc
sbb
jp
sub
pop
stos
xor
lcall
mov
mov
daa
imul
or
cmp
addr16
mov
std
cmp
icebp
rcrb
out
or
xor
mov
daa
popf
dec
and
adc
bound
inc
repnz
je
loop
test
out
add
push
arpl
ror
rorb
dec
inc
aam
in
sub
jmp
xchg
notb
push
mov
mov
repnz
mov
pop
mov
pop
push
andl
call
xchg
lret
or
xchg
cmp
mov
add
add
jne
sbb
push
cmp
mov
fs
jbe
adc
dec
lods
lahf
add
sti
jns
or
pop
fdivrp
sub
push
and
fs
clc
cli
int3
daa
inc
movsl
xor
mov
stc
ret
or
outsl
or
fistps
ss
push
push
sub
dec
and
pop
pop
movsb
test
insb
inc
subb
fisubl
ljmp
mov
and
sbb
jb
pusha
fs
cs
mov
xor
bound
inc
push
pop
sbb
popa
scas
cmp
mov
jae
xchg
fisubl
mov
pushf
call
mov
rclb
shlb
scas
ss
pop
divl
dec
jl
or
ret
add
add
jo
mov
push
and
test
adc
inc
sub
loope
ja
jge
sbb
add
pop
push
add
cli
cmp
repnz
mov
adc
or
cld
mov
sarl
idivb
lods
add
in
cmc
jb
xchg
mov
lods
or
arpl
xchg
out
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
jmp
rol
leave
rcr
mov
add
sub
popf
js
je
js
sti
int
hlt
lock
dec
push
push
nop
xor
pop
pop
pop
jle
push
dec
aas
leave
xlat
add
hlt
push
push
jg
rcr
adc
pop
aam
fwait
jmp
mov
pop
xor
mov
jge
scas
xchg
pop
fs
xchg
sub
mov
fnstenv
add
dec
xlat
bound
pop
add
jmp
mov
jecxz
les
and
sar
push
push
imul
sub
jns
cmp
or
cmp
sub
or
fwait
jl
hlt
into
lods
xor
mov
push
stc
xchg
into
push
mov
imull
jnp
test
adc
sarl
inc
or
adcb
push
pop
mov
xor
pop
outsb
out
subl
sbb
mov
push
adc
adc
fstpl
mov
nop
cmp
push
mov
and
dec
cmp
pop
sub
adc
fiaddl
lret
ret
adc
mov
pop
and
gs
iret
or
into
std
sbb
in
pop
pop
jnp
xchg
nop
jmp
pop
jo
les
dec
mov
aas
mov
nop
cli
push
lcall
ds
rcll
dec
in
fwait
loop
adc
fisubs
jbe
ljmp
insb
add
lods
cltd
pop
mov
test
dec
push
adcl
inc
push
icebp
aas
dec
inc
sbb
and
fsubl
scas
mov
dec
into
push
sbb
sbb
jge
rcrl
mov
inc
test
add
push
add
popa
int3
cmp
inc
adc
xor
sub
mov
lods
xor
enter
imul
je
stc
mov
cmp
jmp
shrb
xchg
mov
faddp
jg
repz
and
pop
push
add
imul
jnp
test
in
jg
jb
xor
js
cmp
mov
or
push
sub
aas
jl
xor
mov
icebp
insb
dec
push
hlt
mov
cmp
popa
test
and
jbe
cmp
fisttpll
andl
add
aad
dec
mov
shr
bound
cmp
daa
andl
xor
jmp
adc
xchg
hlt
sub
inc
jno
pushfw
js
imul
push
push
cmp
rclb
fcompl
xchg
pop
les
pop
movsb
repz
cltd
pusha
cltd
jge
pop
std
pop
push
and
imull
cli
adc
pop
arpl
mov
push
mov
add
cs
stc
jl
and
push
push
xchg
test
pushf
jmp
cmp
adc
add
rol
ror
aad
xchg
mov
aad
in
add
mov
js
int3
dec
add
adc
hlt
mov
stos
mov
pop
dec
int
fldcw
sbbb
jbe
mov
or
es
shlb
pusha
std
cmp
sub
loopne
mov
fstps
cld
imul
fidivl
mov
add
or
jl
mov
sub
nop
pusha
push
jbe
inc
jno
adc
test
dec
fstl
push
ret
test
mov
fldcw
mov
pop
mov
clc
adc
or
out
jmp
jle
mov
enter
mov
stos
andl
push
rorb
hlt
push
ret
sbbl
fnsave
mov
outsl
xchg
orb
ljmp
ljmp
inc
bound
popf
int
xor
jmp
scas
inc
mov
sub
xchg
aaa
lcall
test
xchg
outsb
add
and
bound
dec
adc
add
xchg
lods
call
rorl
lcall
sbb
pop
fcmovu
xchg
fwait
rep
jno
test
aam
out
sti
pop
fimuls
xchg
nop
out
push
or
scas
pop
mov
cmpsb
xor
inc
cmp
pop
loop
mov
into
jp
xchg
enter
dec
cmp
fwait
add
cmp
out
mov
push
negb
stos
jnp
sbb
sub
cltd
dec
aad
mov
adc
and
pop
movsb
daa
icebp
xchg
repz
popf
add
inc
cmp
and
push
cmp
pop
rorb
sbb
call
int3
popf
pop
lahf
push
sbb
out
ror
xchg
aas
or
pop
daa
pushf
test
fdivrs
test
mov
out
and
std
xchg
pop
jbe
rorl
mov
mov
cli
mov
pop
push
mov
pop
lds
btr
cmpsb
jle
jl
int3
gs
mov
ret
mov
ret
xchg
hlt
je
mov
xor
xchg
add
cld
dec
hlt
mov
add
insl
mov
cs
nop
lret
dec
test
lock
iret
mov
nop
dec
paddsb
mov
xor
xor
xlat
mov
or
les
cltd
add
enter
push
jae
mov
mov
sbb
or
xchg
and
nop
cld
lods
stc
or
into
lea
pop
adc
fisttpll
lret
and
scas
xchg
lds
repz
jp
mov
mov
or
xlat
cltd
out
mov
xor
xor
popf
and
jbe
xor
rol
je
mov
jmp
push
mov
sub
sbbl
mov
xorl
jmp
ror
mov
fcmovbe
push
aad
cmpsb
lret
aas
push
sub
js
or
jae
das
out
push
addr16
shrb
mov
mov
movsb
getsec
ja
sub
sub
loopne
imul
mov
fxch
mov
xor
imul
dec
dec
stos
ret
mov
cli
nop
repnz
sti
loope
das
outsb
mov
sahf
inc
push
popa
insb
xor
pop
sti
xor
xlat
xchg
sub
int
mov
pop
ss
add
mov
inc
es
rorb
jmp
sti
mov
fdivs
add
and
jecxz
lret
cmp
mov
lcall
imull
push
push
cmc
pop
out
jns
pusha
pop
pop
sub
lret
ret
rol
xchg
xor
cmp
loope
and
sub
jo
dec
xor
fildll
std
add
xchg
popa
and
in
xchg
cmp
cmp
or
dec
icebp
or
adcb
std
cmpsl
sbb
pop
pusha
fs
lds
cwtl
jp
call
ja
sbb
mov
mov
mov
movsl
lret
bound
cmp
pop
shll
hlt
push
cld
icebp
iret
adc
jecxz,pt
mov
jbe
es
int3
push
xor
add
std
jle
mov
cltd
cld
sbb
je
xchg
mov
push
les
push
lea
in
push
bound
push
xchg
sbb
sti
popa
or
daa
outsb
scas
or
imul
mov
stos
movsb
ret
inc
jo
cmc
ret
shlb
cmpsl
fcmovnbe
aas
xor
dec
test
push
sub
pop
in
addl
mov
lret
movsl
repz
inc
cmp
sbb
inc
and
int
mov
js
in
pop
push
out
clc
stos
cmpsl
mov
xor
leavew
push
jae
and
call
mov
lods
cld
dec
dec
nop
stos
add
sahf
stc
scas
cld
jp
lahf
xor
push
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
movzwl
xor
mov
xor
or
mov
adcl
add
subl
push
mov
adcl
mov
negl
xor
jmp
int
iret
lret
and
push
pusha
pusha
mov
js
xor
cmpsl
sub
aas
pop
xor
lds
loope
pop
jl
mov
inc
sbbb
movsb
mov
xchg
rorb
cwtl
jae
push
mov
mov
pusha
notb
aam
mov
aad
cmpsb
lcall
add
in
adc
in
pop
jno
sub
xchg
or
xchg
cmpsl
jl
dec
mov
xchg
push
out
xlat
mov
cs
dec
ret
cmpsl
mov
cmp
lock
jle
ret
add
nop
sbb
lods
ljmp
lock
mov
dec
pop
mov
add
add
pop
dec
xlat
inc
mov
lret
addr16
aam
into
sub
sub
stc
in
call
push
fdivr
sub
idivb
mov
adc
cmc
test
or
sbb
xchg
pop
loope
xchg
mov
xchg
sbb
lods
mov
sti
inc
add
sub
data16
mov
ljmp
dec
aaa
test
jo
inc
and
push
mov
fdivrs
mov
sbb
push
sahf
mov
lret
sti
jp
xchg
xchg
cmpsb
enter
or
cmp
mov
mov
xchg
cmp
dec
icebp
mov
scas
scas
orl
jnp
jb
sub
ljmp
fcmovne
dec
das
in
inc
outsb
iret
setb
lds
sbb
adc
jge
push
arpl
mov
pop
in
xchg
dec
and
push
lods
ret
fsubrs
or
lret
daa
xchg
jmp
leave
test
pop
sub
mov
xchg
notl
mov
es
rolb
lret
adc
adc
sbb
sub
jle
push
add
lds
test
add
sbb
add
std
call
inc
inc
and
in
push
sub
addr16
daa
jg
cmp
fimull
clc
in
add
insl
sub
cmp
xchg
jbe
jns
pop
sbb
inc
hlt
clc
test
xchg
inc
add
inc
add
sti
jmp
cmp
jne
mov
mov
mov
mov
mov
movl
mov
mov
movl
jmp
movl
jmp
leave
ret
enter
fld
int
fdiv
cmp
jg
pushf
stos
js
xor
sub
or
fs
ja
mov
cmpsb
xchg
int
mov
mov
add
mov
xchg
std
mov
push
jp
shl
fs
mov
push
mov
cli
add
mov
cmp
cmpsl
adc
mov
lock
dec
sbb
jge
inc
push
and
sub
push
test
adc
ret
xor
loop
addr16
out
stc
movsl
jg
das
subb
pop
cmpl
ds
cmp
sub
repnz
dec
pop
pusha
mov
fcoms
mov
jno
add
aad
adc
arpl
mov
bound
cwtl
sbb
cli
cmpsb
test
ret
pop
loop
xor
sbb
pushf
les
push
jo
rclb
fmuls
fists
mov
ds
movsl
mov
dec
dec
daa
pop
movsb
pop
cwtl
jne
jp
aaa
push
fwait
ret
popl
sarb
pop
out
fisubs
pop
notl
enter
ret
cmp
cmp
call
add
ss
mov
push
add
and
inc
jl
mov
aad
or
stc
dec
and
mov
aaa
lea
fsubs
popf
andb
nop
cmpsl
jle
mov
jns
inc
es
jb,pt
fsts
mov
je
inc
ss
in
jnp
dec
inc
je
add
out
fisubs
es
jb
xor
push
adc
xchg
or
outsb
cmpsl
fwait
js
sub
jo
push
aaa
repz
stos
sub
mov
sub
jl
les
aad
enter
bound
or
mov
stc
push
aaa
sarl
lods
fisubrs
push
push
fwait
and
stos
scas
xchg
mov
push
xlat
insl
xchg
clc
pop
mov
push
mov
pop
push
in
gs
js
in
pop
adc
lea
push
shll
cwtl
mov
test
dec
mov
mov
mov
or
cmp
movl
jne
and
jmp
int
into
aad
lea
mov
js
jle
js
jle
aad
mov
jecxz
lock
aaa
pop
pushf
sub
loopne
xchg
in
mov
in
inc
lcall
pop
cld
and
movsl
lret
rorl
lahf
push
push
xor
sbb
adc
les
adc
push
jb
shl
xchg
inc
mov
inc
ret
aas
psadbw
out
mov
in
or
sarl
xor
sarl
out
in
inc
sub
xchg
mov
jmp
add
push
jge
inc
mov
lods
mov
jo
in
push
xor
sub
push
mov
int
sub
data16
in
or
sub
pop
movsl
lret
sahf
jmp
test
mov
mov
push
sar
sbb
in
xchg
fcoms
or
mov
movsb
cmpsl
push
jo
xor
scas
lret
adc
in
push
push
or
cltd
and
lcall
leave
mov
scas
push
sbb
xor
ss
lods
aad
xchg
add
stos
stc
jbe
add
or
pop
ret
lret
mov
mov
rolb
in
mov
add
xor
pop
enter
adc
pop
bound
jmp
xor
out
scas
cmova
jo
add
dec
or
cmpsb
sub
xchg
paddusb
sbb
jae
sub
pop
mov
push
scas
and
and
cs
or
mov
and
jmp
leave
subb
jl
xorb
sub
lret
and
movsb
outsl
add
arpl
cltd
outsl
jno
sub
dec
test
xchg
fcos
cmp
xlat
je
es
das
push
pop
dec
push
jb
jmp
mov
fs
shll
add
jns
mov
imul
mov
sbb
sub
push
imul
inc
ret
loope
pop
jmp
mov
adc
cmp
dec
rcll
adc
iret
jle
fiadds
push
dec
test
push
movsb
jns
push
cmpsb
andl
mov
sbb
mov
mov
xorl
sub
orl
push
adcl
mov
jmp
enter
ret
push
in
pop
dec
testb
push
scas
js
xor
leave
test
push
pop
cltd
push
and
xor
jns
ja
scas
push
psubb
aas
jmp
mov
shll
push
mov
pop
mov
ret
adc
pushf
les
imul
mov
inc
push
sarb
inc
mov
add
push
mov
aaa
lcall
inc
cmpsb
lock
pop
lcall
aaa
sub
fidivs
jne
sahf
das
incl
imul
push
fnstsw
push
mov
stos
and
mov
xor
fcoml
jp
pop
and
data16
fs
test
cmp
push
ficoml
xchg
sti
mov
mov
mov
xlat
and
and
iret
jg
sarl
cld
ljmp
outsb
sbb
mov
dec
dec
negb
mov
mov
pop
mov
stos
addr16
mov
mov
sti
push
xchg
aaa
mov
xor
ret
pop
repnz
xchg
sub
cmpsb
push
outsb
inc
pop
sbb
mov
mov
push
or
pop
addr16
cmp
sbb
push
cmpsl
test
jecxz
lock
lcall
jae
cs
jecxz
inc
addr16
dec
or
sbb
add
mov
inc
push
pushf
sbb
je
push
sub
mov
mov
sti
jl
subb
push
daa
ja
insl
or
dec
adc
dec
cmp
dec
lret
outsl
fwait
or
sbbb
and
subl
aaa
inc
outsl
pusha
arpl
xchg
lods
lahf
pop
inc
loope
call
mov
lock
pop
cs
mov
leave
or
out
int3
mov
and
lcall
lock
lahf
repz
pop
mov
gs
pop
cmp
clc
mov
or
popa
pop
lea
pop
lods
clc
mov
repz
lock
lcall
stos
sbb
in
cmp
cmp
fisubrl
xchg
scas
enter
addl
push
adcl
call
movl
incl
cmpl
movl
jb
movl
jmp
cmp
jne
sbb
movl
mov
mov
mov
mov
movzwl
and
mov
adcl
xor
jmp
rol
leave
leave
leave
leave
rcrb
inc
pop
push
fisttpl
shrl
js
jmp
dec
in
popf
movl
inc
cmc
mov
and
sub
or
or
jae
in
int
xchg
jmp
dec
pop
add
aas
les
shrl
xchg
int3
mov
dec
cmp
mov
sarb
arpl
imul
xchg
inc
notl
mov
xor
imul
cltd
scas
push
and
lods
outsb
jae
mov
mov
xor
mov
jg
fwait
sbb
and
nop
lret
xchg
adc
xor
cmpsb
dec
callw
outsb
xchg
test
pop
lcall
negb
jne
xchg
mov
mov
and
arpl
mov
xchg
ret
lret
jns
jo
mov
lock
mov
scas
inc
xlat
ret
push
sbb
jg
jg
lds
adc
jecxz
mov
ret
xor
ljmp
jb
jnp
lahf
and
sub
adc
push
xchg
scas
test
xchg
jns
xlat
ja
bound
inc
ss
lods
dec
pop
notl
test
jb
clc
mov
push
into
inc
add
fwait
lcall
jecxz
stos
inc
sub
mov
mov
das
lret
sub
lds
jp
add
mov
outsl
shll
lahf
ljmp
cmp
pop
push
or
mov
jmp
jmp
fdivs
ret
and
outsb
mov
jle
stos
out
jmp
loop
sbb
outsl
adc
sarl
iret
sub
fbstp
mov
jo
sub
jno
push
mov
popa
aam
in
sub
mov
fbld
adc
sub
add
data16
stc
sbb
loopne
out
out
stos
rorb
int3
or
andl
ret
ret
test
add
mov
push
jb
lods
sbb
sti
xor
leave
mov
pop
in
jb
js
mov
mov
lods
notl
lea
mov
mov
xor
add
mov
lea
push
mov
jmp
ds
roll
lea
js
jle
js
jl
enter
inc
mov
fldenv
add
add
sub
inc
popa
jle
and
jnp
push
int3
or
xor
subb
sbb
pop
pop
fistl
ss
xor
sbb
test
popf
faddl
fidivrs
mov
xchg
in
outsl
les
imul
push
mov
pop
cltd
das
push
in
out
addr16
aad
repz
mov
andb
xorl
enter
dec
fs
or
mov
nop
cmp
fisttps
add
xor
movsl
mov
add
mov
add
fsubl
jmp
xor
popf
mov
aam
jbe
inc
out
jmp
subb
sub
loop
pop
ss
andl
mov
mov
jecxz
ss
dec
mov
aad
in
xchg
xchg
lods
rcll
arpl
push
rdtsc
jle
add
mov
imul
imul
aaa
in
ret
lods
inc
dec
xchg
in
or
jbe
push
dec
fstpt
mov
or
cmp
ja
fwait
xlat
or
add
mov
add
aaa
mov
int3
sub
clc
outsl
inc
aas
shll
mov
fcmovu
push
xor
inc
sbb
sbbl
cmpsb
shll
jns
push
push
jmp
inc
out
mov
adc
cmp
pop
add
push
popa
pushf
xlat
aaa
cmp
jmp
pop
loope
scas
je
clc
xchg
sbb
adc
dec
pop
lret
leave
sbb
dec
in
mov
mov
inc
mov
outsb
test
sarl
test
or
outsb
mov
ss
sbb
mov
pushf
rorl
loopne
dec
cmc
jae
or
hlt
sahf
es
sub
sbb
ret
call
push
test
push
movb
push
jmp
xlat
lret
fcmovu
aas
cmp
push
in
push
inc
mov
js
jle
js
add
mov
push
sub
int3
push
imul
mov
sbb
jle
scas
mov
enter
cmpsb
or
mov
xchg
loope
and
leave
xchg
out
adc
data16
outsb
inc
jbe
sti
xchg
mov
rorb
sub
or
cs
das
sbb
xchg
les
and
inc
int3
pop
cmp
mov
sti
add
std
adc
and
push
mov
xchg
cmpsl
test
imul
int3
popa
mov
add
test
pop
inc
mov
mov
xchg
dec
enter
inc
mov
xor
aad
xchg
aaa
clc
and
or
xor
adc
dec
lret
xchg
int
pop
jp
jnp
cmpsl
gs
mov
or
mov
icebp
out
pop
fdivs
xor
aas
imulb
add
rcrb
lret
lods
popf
enter
mov
cli
dec
nop
mov
imul
lods
or
inc
ds
je
adc
outsw
jnp
sbb
stos
stos
xchg
negl
add
push
outsl
push
mov
or
testb
inc
add
int
push
ja
mov
mov
mov
call
mov
movsb
dec
and
sub
rcll
xor
inc
sub
cmp
outsb
sbb
adc
cmpsl
push
jb
rcr
lahf
sahf
pop
and
mov
cmp
int3
mov
mov
out
shrl
jmp
xor
jno
push
sbb
dec
ss
xor
jae
cmpb
push
mov
push
cmp
js
pop
adc
repz
push
mov
mov
stos
stc
in
aaa
or
sub
rdseed
cmpb
mov
sbb
dec
or
aas
xlat
imul
sub
add
ja
and
insl
cltd
and
ja
xchg
jnp
loope
loope
fsubs
push
pushl
call
jmp
cmp
jne
mov
jmp
sarl
ror
leave
dec
cmc
adc
cmp
js
jle
js
fisttpl
setnp
inc
inc
in
fisttpl
pop
mov
sub
dec
xlat
cwtl
movsl
mov
pop
push
popl
push
ret
mov
inc
xchg
or
xchg
inc
or
jb
pop
add
scas
js
clc
add
scas
xlat
call
jp
xchg
cltd
xor
imul
lret
into
xchg
lahf
movsb
mov
lret
xor
inc
std
mov
xor
inc
mov
mov
push
popa
aad
imul
or
add
movsb
cmpsl
push
dec
out
dec
pop
mov
and
jae
mov
ss
lods
cmp
int
daa
and
pop
jmp
cmp
inc
mov
and
ret
fildll
pop
and
jno
mov
jne
sbb
fsubrp
xchg
addr16
daa
pop
cmp
fsubrs
mov
xchg
cs
mov
xchg
outsl
jl
xchg
cmp
mov
test
mov
cwtl
xchg
les
mov
xor
adc
mov
insb
adc
xchg
into
movsb
pushf
mov
and
outsl
jmp
mov
mov
cmc
xor
pop
pushf
sub
and
push
ret
into
dec
jge
fsubrs
xchg
in
mov
mov
cmp
cbtw
int
mov
push
lret
mov
pop
pop
pop
data16
cmp
arpl
dec
push
in
cmp
dec
ret
iret
mov
andl
loope
jae
sub
fimull
dec
mov
std
rorl
mov
dec
cmp
inc
add
jmp
mov
adc
fxam
push
fcom
jl
add
out
xlat
dec
pop
pop
dec
cmp
sbb
out
test
popf
pop
cmp
push
inc
aad
int3
inc
xchg
nop
outsl
cmp
inc
or
decl
sub
xchg
and
clc
lods
pop
push
insl
push
jae
sub
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
jmp
leave
fcmovbe
sar
rcrl
and
inc
aas
mov
js
iret
idivl
or
mov
repz
push
out
test
insl
cmp
pop
mov
jmp
cmpsl
inc
jb
repz
arpl
imul
xchg
stc
sub
mov
adc
imul
mov
pop
jp
jnp
out
push
fwait
orl
aas
sbb
sahf
sbb
jno
push
adc
xor
stos
sub
mov
ficompl
jle
ret
pop
das
hlt
call
pop
adc
jb
shl
out
out
dec
inc
loope
xchg
imul
xlat
xor
xchg
inc
xor
pop
dec
inc
jg
sti
hlt
test
sbb
dec
and
cmp
andl
jecxz
or
lods
mov
outsl
add
inc
hlt
addr16
shrb
push
xorb
jno
fmull
cmp
and
rol
xor
jecxz
lds
push
stc
pop
and
add
xchg
in
aas
pusha
hlt
push
dec
cltd
std
rol
lret
aad
sbb
fmul
sbb
cltd
inc
shlb
imul
inc
das
in
pop
mov
sub
xchg
mov
push
ja
es
xchg
daa
in
mov
and
push
cmp
xor
sbb
mov
das
inc
lods
hlt
jnp
or
mov
mov
jmp
fcmovnbe
sar
arpl
jg
push
fnstcw
pop
xchg
scas
adc
rolb
rorb
int
insb
insb
cmc
and
ss
mov
into
push
int
mov
jp
ret
hlt
je
stc
in
adc
gs
sbb
add
xchg
in
sub
jecxz
test
test
or
lds
jl
test
stc
xchg
aaa
or
mov
jge
push
adc
je
dec
or
cmp
push
call
stos
jmp
pop
mov
xlat
mov
rcrl
cs
mov
sarl
movsb
shlb
fucom
clc
push
inc
or
lea
cmp
jne
mov
pop
xor
pop
add
pop
leave
ret
push
mov
sub
push
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
movl
jmp
cmp
aad
xlat
jecxz
ja
cwtl
adc
js
jle
js
or
xor
mov
fnstsw
test
ds
xor
inc
jle
push
sub
jmp
jge
cmp
out
cmpsb
stc
sahf
orl
or
movsl
pop
inc
hlt
mov
lods
cld
and
rcrl
outsb
push
pusha
and
sub
js
push
pop
xor
arpl
or
sub
xlat
pop
sub
mov
push
sbb
mov
push
or
fstpl
jns
xchg
in
vsqrtps
rcll
sarl
adc
imul
test
js
test
add
ja
mov
std
mov
icebp
xor
push
jns
imul
mov
andl
int
lret
int3
jnp
aaa
daa
xchg
mov
sahf
jg
xchg
push
pop
or
ss
daa
xchg
cmp
or
enter
mov
scas
push
stos
adc
mov
jmp
adc
out
xchg
cld
jmp
mov
sub
inc
pop
xor
pop
adc
inc
xchg
jo
and
lods
repz
pop
or
add
stc
sub
inc
sub
jmp
shr
adc
test
jne
cltd
sub
mov
repz
imul
fldt
jae
popf
daa
add
xor
js
xchg
stos
mov
popf
jbe
mov
addl
repnz
data16
pop
je
push
outsl
mov
in
fsubrs
lea
mov
loope
push
sahf
lret
les
lods
ds
lret
mov
cwtl
push
cmp
shlb
out
fs
mov
rol
mov
sub
xchg
das
adc
mov
pop
sti
cli
cltd
or
das
adc
or
adc
das
push
icebp
pop
subb
dec
sub
or
cltd
bound
mov
lcall
jl
jle
pop
cmp
fs
cli
cmp
int3
push
int
cld
test
sbb
push
cmp
lods
notrack
inc
aad
push
cmp
ficoms
in
dec
and
lods
imul
stos
fwait
scas
mov
xchg
lods
mov
or
mov
mov
xor
add
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
add
mov
xor
jmp
lret
ror
leave
lret
push
xchg
dec
inc
lock
mov
js
out
movlps
dec
push
std
insb
push
sub
aaa
jns
addr16
or
inc
outsb
xor
es
push
into
fwait
iret
popa
inc
pop
mov
decb
inc
imul
sbb
jbe
push
idivl
push
in
jmp
mov
loope
jp
lret
xchg
mov
adc
push
vmread
add
mov
popf
insl
ret
mov
popa
or
mov
sbb
leave
dec
aad
pop
or
in
out
xchg
mov
and
mov
shrl
adcb
scas
bound
popa
out
fldenv
imul
mov
int
cmpsl
shrb
je
mov
fmull
push
in
dec
icebp
fnstcw
pushf
rorl
stos
xor
and
inc
into
loope
iret
lea
daa
mov
notb
dec
mov
jns
add
add
pop
je
adc
push
inc
aam
xor
xchg
jno
jno
pushf
mov
fidivs
push
sub
shrb
mov
push
or
in
xor
sbb
js
sbb
push
push
lods
mov
cwtl
fwait
bound
jmp
inc
add
orl
lret
fistl
jbe
sti
pop
repz
push
cmpsb
dec
sub
negb
lods
and
cmpsl
rcrb
std
ss
adc
xor
test
js
repz
mov
mov
pop
dec
std
or
sbb
inc
inc
and
mov
inc
mov
mov
and
jecxz
push
out
mov
in
sub
cmp
adc
fwait
cmp
cmp
out
mov
xchg
sub
sbb
xchg
add
clc
stc
mov
ds
push
mov
jne
jne
dec
mov
pop
jg
lret
cli
jae
and
int
shll
lcall
stc
add
pop
fwait
xchg
ds
and
xchg
push
pop
ss
pushl
jge
subl
inc
fs
or
lods
shrb
xor
aad
sbb
xchg
xchg
jns
fs
shufps
push
dec
sbb
into
stos
and
ret
push
clc
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
and
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
andl
xor
jmp
enter
fcmovnb
aad
push
and
cmp
cmp
into
mov
js
fwait
mov
das
mov
pop
jl
dec
rorb
out
push
cli
je
cmp
push
dec
sbb
sbb
lret
gs
xor
lahf
aam
outsb
lods
mov
jecxz
push
or
popa
jb
aad
iret
inc
push
pop
clc
dec
rorb
or
rorl
into
aad
pop
lret
xor
mov
jp
inc
jmp
test
adc
cs
jb
in
push
sub
and
xor
pop
sbb
repz
add
movsb
pop
not
aam
and
pop
fstl
cmp
mov
lock
add
jmp
aam
shld
in
mov
andl
mov
cmpsb
dec
cld
test
repz
jecxz
cmp
stos
call
stos
loop
cwtl
cmc
fistps
rcrb
imul
sbb
push
or
jl
shll
sti
add
sub
mov
mov
inc
ds
sahf
js
rolb
inc
mov
fbld
leave
mov
inc
sub
rclb
lahf
mov
imul
leave
pop
std
pop
rcrl
pop
jp
add
mov
fsubrl
mov
jbe
jg
cmpsb
adc
xor
add
ss
mov
or
inc
xchg
mov
call
insb
sbb
jbe
test
mov
mov
mov
jo
rcl
std
push
xchg
data16
into
xchg
sbb
sbb
mov
insl
arpl
xchg
inc
pop
inc
xchg
sub
clc
clc
jl
lret
mov
jmp
sub
add
xlat
aas
adc
lret
movsl
ljmp
add
lcall
jmp
pminub
imul
dec
pop
push
movsb
and
out
inc
lea
sahf
mov
dec
fnstenv
imul
fmulp
mov
sub
fstps
cmp
xor
inc
xor
test
sub
jl
out
das
xchg
xchg
mov
scas
iret
jecxz
xchg
push
sbb
jnp
daa
cmc
sbb
insl
insb
les
out
repnz
mov
jmp
adc
push
cli
clc
iret
cmpb
mov
xor
ds
out
mov
and
push
pop
test
adc
je
or
add
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
add
mov
xor
movl
or
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
and
movl
sub
movl
and
movl
orl
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
pushl
call
jmp
movl
mov
xor
movl
cmpl
je
cmpl
jne
push
push
push
push
call
xor
or
dec
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
call
jmp
decl
mov
movl
jmp
ret
sarl
shr
xor
mov
jle
js
cmpsb
cmp
xchg
shrb
das
out
xor
mov
out
lods
mov
mov
dec
mov
int
dec
mov
jg
data16
sub
shll
inc
mov
test
push
arpl
or
push
adc
jp
push
lret
mov
mov
cltd
fbstp
hlt
iret
push
fcoms
ss
cmp
sub
aam
adc
jle
pusha
popf
das
push
and
imul
sub
xlat
mov
sub
push
ljmp
jmp
mov
and
push
mov
push
in
std
daa
mov
push
mov
sbb
pusha
mov
out
into
cmp
das
mov
jmp
jmp
push
jecxz
insl
and
mov
loope
xor
out
xlat
cwtl
enter
push
sub
mov
rorl
inc
insb
mov
iret
outsb
fmul
inc
out
push
nop
loop
push
inc
dec
mov
cmp
xor
push
ficoms
push
out
sub
cmpsb
call
loope
mov
jle
jno
jle
or
push
xor
out
and
mov
aas
inc
and
leave
ds
mov
sub
sub
mov
xor
xor
push
inc
push
adc
jns
mov
jnp
ret
mov
cmpsl
cmpl
mov
jmp
mov
fistps
jl
mov
inc
cmp
subb
xor
jb
jg
or
jg
adc
cmpsb
fs
imul
inc
fcomps
leave
mov
mov
popa
or
push
fmul
aad
aas
lea
call
and
test
rcl
aaa
mov
into
push
je
dec
dec
leave
sub
jne
add
lret
pop
push
arpl
ret
cmp
mov
out
in
push
fstps
aas
pop
jge
add
mov
icebp
clc
add
jp
shrl
push
sub
insb
mov
jg
fimuls
push
mov
xor
daa
pop
mov
ds
data16
testb
pop
inc
xchg
push
int3
jge
or
jle
mov
rclb
adc
lock
cmp
movl
jmp
ret
ret
lret
test
fisubs
inc
js
in
js
insb
loopne
xor
inc
sti
inc
imul
fnstcw
add
es
stos
inc
fnstenv
es
fnstsw
das
sub
pop
in
ja
adc
add
mov
sbb
adc
inc
scas
xchg
sbb
pop
jl
outsl
pop
add
pop
popf
cmp
cli
push
popa
add
mov
xchg
and
scas
jns
fistpll
sub
fmulp
lea
xchg
adc
mov
pop
fcmove
std
xor
ret
clc
outsl
mov
imul
and
out
dec
xchg
enter
cmp
pop
fs
inc
mov
pop
inc
leave
push
xlat
sub
addr16
pusha
dec
xorb
push
sarb
test
mov
xlat
lods
sbb
push
sub
test
push
mov
push
jnp
jp
inc
add
add
cwtl
lret
insl
cltd
dec
addb
and
inc
mov
adc
adc
push
in
icebp
aaa
rclb
mov
in
and
xor
nop
and
insb
cmpsb
lock
mov
scas
fmull
jno
ljmp
test
xor
push
les
or
int
jge
push
jnp
mov
mov
lods
cmp
jbe
and
ja
inc
and
xor
filds
jae
inc
inc
sbb
addr16
aam
shl
mov
add
jo
mov
fmuls
push
adc
push
xchg
arpl
mov
adc
shr
mov
jo
sbb
arpl
stos
stc
push
cmp
arpl
dec
imul
add
push
jg
sub
mov
out
bound
and
fst
lahf
xchg
mov
mov
mov
mov
out
mov
cmpb
and
inc
or
ret
mov
xlat
lock
mov
or
lds
sbb
mov
jg
insb
inc
lcall
pop
sbb
sahf
leave
lods
out
pusha
cmp
leave
mov
cld
movb
iret
jp
mov
lret
mov
pop
fcompl
sub
mov
xor
mov
jle
mov
dec
add
pushf
je
push
movl
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
jmp
cmp
fcmovnb
cmc
into
inc
jge
cmp
inc
js
in
js
and
add
fnstsw
lock
add
jecxz
jle
add
jns
xor
pop
xor
daa
in
jno
pop
pusha
fdivs
leave
sbb
pop
fdiv
outsb
stos
in
out
shll
and
sbb
hlt
cmp
mov
sbbl
int
jo
sub
xorl
sub
inc
fsubs
and
push
jnp
push
jg
jno
jno
sti
rolb
leave
inc
aam
loop
pop
mov
out
adc
lahf
loop
aam
lcall
jno
arpl
cmc
or
dec
mov
dec
push
outsl
sarb
jbe
out
add
sti
outsb
test
jbe
or
fmull
sbb
add
lret
pop
cld
pop
lods
mov
cmp
mov
loope
in
pusha
in
dec
fs
out
xchg
or
ss
jle
les
jmp
cmc
sbb
fs
loope
loopne
mov
inc
fistpl
sub
push
cwtl
out
scas
inc
stos
jecxz
enter
cmp
cmpsb
out
mov
jno
jge
outsb
push
cmp
ds
shrl
add
cmpsb
xor
xchg
cmpsb
sub
sub
add
xor
aaa
icebp
stc
or
orb
rolb
sub
mov
push
std
xchg
sub
sub
mov
pop
mov
push
lock
out
inc
dec
jbe
mov
xor
int3
addr16
mov
adc
jns
jg
inc
gs
in
sbb
and
outsb
inc
jb
std
test
cmp
imul
add
jp
fs
stos
out
sub
es
inc
jmp
bound
add
les
outsb
push
into
shll
push
les
insb
in
add
in
dec
xchg
inc
mov
aad
les
sarb
or
and
sbb
dec
les
jg
add
sysexit
in
arpl
cwtl
loopnew
xlat
jmp
cmp
out
fsts
jg
lds
inc
icebp
xor
mov
lahf
adc
bound
arpl
jb
popf
push
inc
divl
mov
push
sbb
mov
aaa
fdivrp
sub
cs
ds
push
sub
mov
xor
add
cmp
jb
mov
mov
xor
xor
add
add
imul
mov
jmp
mov
leave
dec
mov
std
iret
shl
jp
js
in
js
popa
cli
cmp
cmp
xchg
pop
lods
xchg
decb
into
popa
pop
lahf
inc
sbb
pop
es
in
adc
add
push
lret
jg
rcrb
push
and
int
imul
adc
fwait
fwait
inc
mov
aam
mov
testl
xchg
sti
in
fmull
and
jmp
jl
mov
adc
jp
cmpsb
hlt
sub
jge
adc
test
pop
lcall
and
int3
mov
adc
out
scas
ljmp
int
adc
xor
add
scas
fs
mov
dec
fstps
stc
mov
nop
lret
add
lock
insb
out
idiv
adc
cmp
xchg
cld
lock
ja
pop
sbb
in
pop
push
es
or
call
dec
jae
mov
mov
mov
jecxz
jns
cld
adc
iret
jno
or
pop
sbb
mov
cs
shll
dec
in
push
push
sbb
pop
out
add
pop
push
rcr
into
and
mov
into
mov
push
andb
push
hlt
insl
fs
sbb
addb
jecxz
mov
bound
imul
push
cltd
repnz
repnz
or
movsl
push
mov
xor
push
push
jg
jle
mov
sbb
into
cwtl
push
push
data16
scas
enter
pop
mov
jns
xlat
subb
das
jp
mov
into
into
mov
sbb
and
sahf
jp
roll
out
cmp
andl
pop
ficoml
adc
jl
jg
jae
push
pop
shl
shr
orl
rorl
xchg
lds
cwtl
push
lock
gs
mov
xor
mov
lds
stos
push
xchg
inc
cmp
sbb
pop
sub
jp
adc
es
push
xor
or
xor
jno
push
pushf
lret
xchg
outsb
sbb
add
inc
adc
push
jne
test
jbe
mov
sub
clc
pushf
bound
mov
push
mov
leave
and
dec
filds
xor
xor
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
jmp
sarl
int
ret
xchg
daa
push
sbb
enter
js
jle
js
xor
cmpsl
cwtl
repnz
push
cmpsl
pop
sbb
mov
jg
mov
or
call
aaa
popf
shlb
popa
jno
jne
xor
ds
xchg
cmp
cmp
and
jnp
sbb
into
xchg
mov
and
mov
testb
clc
dec
lods
sti
mov
xlat
adc
and
push
dec
fucomp
cmp
sbb
jmp
cs
mov
movsl
fmuls
hlt
jb
rcrl
xchg
or
inc
ljmp
push
pushf
scas
pop
scas
shl
fisttpll
nop
enter
sbb
or
rclb
popf
inc
mov
mov
pop
jp
sub
aad
mov
sahf
popa
cmp
push
data16
imul
mov
enter
mov
shr
xchg
add
and
push
loop
jmp
es
divl
hlt
loop
subb
cmc
xor
and
hlt
xchg
xor
clc
jge
add
or
aad
cld
jge
sub
xchg
xchg
jae
icebp
sub
lret
xchg
ljmp
movsl
pop
test
sbb
mov
icebp
push
cmp
test
jnp
mov
bound
int
cltd
in
dec
or
xor
xor
push
out
xchg
mov
mov
fs
and
adc
mov
mov
in
sbb
fisttpl
in
cmp
and
fistl
ljmp
ljmp
loope
push
cli
pop
out
cs
adc
push
add
cld
lret
or
ficoms
pop
in
jnp
jge
xor
sub
dec
scas
jge
adc
sub
ja
movsb
cmp
inc
leave
mov
out
cmp
cmp
pop
push
cmp
mov
cmp
pop
sub
xchg
push
dec
xchg
les
inc
testb
add
rcll
cmp
orl
mov
insb
fwait
sub
lock
mov
imul
test
pop
push
outsl
cmc
clc
movsb
dec
outsb
xchg
dec
shlw
mov
and
mov
push
mov
stc
dec
cmc
fbstp
pop
inc
mov
pusha
jne
repz
jmp
ret
int
into
xchg
jle
fimull
js
in
js
scas
scas
jae
stos
mov
pop
cmp
push
mov
xchg
mov
sbb
gs
or
mov
push
add
lahf
pop
mov
cli
inc
xor
dec
orb
or
ljmp
pusha
popa
out
ss
cmpsb
jns
xor
mov
add
and
xchg
test
xor
mov
lahf
lds
add
repz
jle
pop
mov
sahf
filds
rorb
pop
add
dec
popf
arpl
inc
daa
jge
jbe
xchg
add
into
mov
lcall
out
loopne
add
jbe
or
aad
bound
sbb
or
imul
in
bound
xor
and
adc
daa
mov
mov
shll
jmp
aaa
mov
mov
cwtl
pop
orb
mov
lods
sub
arpl
sbb
lcall
data16
loope
mov
out
mulb
or
loopne
aam
or
loop
lock
xchg
mov
in
ss
sbb
pop
pushl
xchg
sbb
rcrl
add
jnp
push
xchg
sbb
xchg
xor
test
jle
in
mov
jno
and
and
aam
dec
aad
lods
in
negb
fdiv
cmp
pop
or
adc
cwtl
and
pop
fs
sbb
arpl
inc
outsl
insb
mov
imul
aaa
adc
ret
cmpsb
pop
jo
test
cs
in
sub
repnz
lcall
shll
cld
fs
std
or
inc
xlat
and
mov
fimull
insb
sbb
inc
add
mov
rcll
push
lods
arpl
jmp
jns
int
xor
bound
push
repz
out
iret
add
pop
paddusb
in
and
movsb
imull
pop
cli
out
pop
mov
xchg
testb
gs
lds
stos
insb
das
or
in
ficoml
and
mov
cmp
and
movsb
fcomps
lds
jecxz
shr
adc
imul
mov
mov
jmp
cmp
ret
fcmovnb
aad
pop
adc
fdivl
inc
cwtl
cmp
js
jle
js
fbstp
dec
inc
add
test
push
and
lds
add
scas
lds
cmc
fsubrs
call
adc
adc
xor
enter
add
aam
data16
sub
add
dec
ljmp
insb
fstpl
inc
dec
addr16
dec
mov
mov
pop
loopne
mov
push
inc
push
push
stc
cmpsb
xchg
jp
pop
leave
ds
in
jno
mov
stc
push
and
jge
mov
sub
jmp
outsl
add
ds
test
mov
mov
xchg
lcall
jge
out
outsl
jp
mov
lret
in
or
xlat
pop
fldl
data16
test
mov
cmp
and
pushf
nop
dec
push
xor
mov
mov
stc
dec
or
jne
fwait
shrl
and
cmp
xlat
movsb
jmp
movhps
cmpsl
sbb
pop
mov
jb
sub
inc
popl
jmp
fistpll
std
ret
xchg
jecxz
decl
fcmovnu
or
rolb
jb
insl
outsb
std
jnp
repz
and
add
mov
and
add
add
mov
mul
push
mov
xchg
jns
inc
ja
ret
inc
int3
movsl
ret
ficompl
loopne
xchg
aam
jo
mov
jmp
clc
out
imul
jbe
out
sub
mov
pop
xchg
jnp
mov
inc
xor
mov
sbb
push
lahf
and
mov
int
sti
cmpsb
adc
inc
cmc
cltd
xlat
enter
cli
fildl
stos
inc
adc
lods
add
mov
xor
pop
test
xor
jmp
adc
mov
jo
jecxz
lret
mov
stos
fldcw
mov
xchg
popf
xchg
inc
mov
inc
cs
rclb
in
ss
leave
sbb
outsl
in
sub
lds
movd
aas
imull
into
cmp
mov
int
mov
ret
dec
pop
aas
repnz
les
loop
fdivrp
cmpsb
pop
mov
or
dec
cmp
lret
sub
cmp
jmp
into
ror
fcmovnbe
fld
ud0
pop
clc
pop
in
cmpsb
push
js
in
js
sarb
push
or
ja
sub
lea
push
adc
inc
dec
pusha
pop
jge
shr
outsb
shll
sub
mov
jns
jns
xchg
push
mov
mov
mov
pop
scas
mov
sti
push
call
xchg
dec
pop
popa
cmp
push
cmp
cmp
and
pop
cli
in
dec
xchg
movsl
sahf
jne
xchg
push
mov
fsubl
pop
pop
xor
jmp
fidivrs
sbb
jo
jb
mov
sti
lret
imul
cmp
dec
hlt
xlat
jmp
sbb
sbb
mov
inc
inc
or
repnz
fisubs
rcll
int3
push
mov
test
and
mov
mov
mov
call
test
pusha
ss
cs
push
dec
cmpsb
rorl
fcoms
push
mov
xor
call
jo
pop
adc
mov
outsl
mov
pop
xchg
or
add
pop
shrb
pop
push
stos
sarb
add
out
mov
popa
cmp
lcall
mov
cltd
pop
mov
jmp
xor
mov
jmp
cmpsl
mov
mov
in
mov
orb
dec
cmpsl
cltd
cmp
push
daa
mov
call
xorl
loopne
adc
mov
mov
push
shrl
push
cmp
arpl
pop
and
aas
push
je
cltd
sar
sahf
js
add
loope
push
xchg
scas
jg
push
jno
cmpsl
mov
mov
jl
dec
aas
arpl
aas
shll
fistl
push
or
out
or
pop
ljmp
rcr
xchg
jge
nop
jg
add
cmc
push
es
outsl
cmc
dec
cli
insl
sbb
inc
mov
test
sbb
ljmp
adc
cmpsb
sbb
pushf
xchg
out
idivl
call
mov
test
mov
aaa
in
push
push
insb
xor
pushf
push
int3
lea
mov
std
icebp
subl
jbe
sub
push
je
je
syscall
aam
neg
lret
std
pushf
loope
arpl
push
xchg
scas
adcl
or
add
mov
jmp
mov
mov
xor
xor
jmp
aas
lret
iret
aad
jo
lods
idivl
jne
adc
js
jle
js
mov
dec
dec
call
nop
sub
dec
pushf
rcrb
push
mov
xchg
mov
out
ror
push
loop
and
std
imul
and
lcall
and
add
jg
adc
push
daa
leave
xor
inc
sub
mov
mov
xlat
mov
pop
jp
or
jnp
and
outsb
ds
mov
add
ljmp
in
insb
jg
dec
pop
push
je
aad
inc
dec
repnz
xchg
push
mov
pop
scas
mov
insl
lock
add
pushf
fistps
lock
stc
or
aaa
xor
dec
sbbb
idiv
push
jg
ffree
and
sub
mov
or
mov
aam
mov
adc
movsb
xor
popf
stos
cwtl
loope
cltd
mov
and
cmpsl
pop
gs
push
add
or
aad
mov
and
imulb
int
ljmp
pop
iret
lock
sbb
out
sbb
xor
std
mov
call
out
icebp
out
sbb
adc
sbb
jg
cmp
movsl
cltd
mov
aaa
jbe
jecxz
mov
xchg
cmp
cltd
rcr
xchg
scas
addl
arpl
cmpsl
out
and
shrl
fdivp
xor
sbb
rcl
push
inc
jmp
addb
fistpl
data16
jl
stc
jl
in
inc
rol
ret
add
mov
lods
ss
andb
jle
scas
inc
in
push
xchg
pop
jmp
subl
int3
push
cmpsl
and
push
push
pop
int
ret
pop
push
imul
and
cmpsb
push
test
stc
lea
push
pop
add
into
mov
in
fcompl
sub
xor
outsb
jmp
fdivr
sub
adc
push
mov
dec
lahf
pop
ljmp
jp
ret
int3
je
lahf
sar
mov
or
lcall
lock
lods
adc
std
dec
adc
neg
sbb
sub
std
sbb
jp
xor
sbb
movsl
sbb
adc
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
jmp
lds
ds
fxch
adc
add
xor
js
in
js
adcb
shll
push
cmp
mov
cmp
inc
add
or
and
mov
jge
push
add
movsl
lea
fisttps
adc
repz
pop
imulb
pop
dec
sti
sub
jge
xchg
xchg
rolb
test
lret
push
jle
movsl
xor
sbb
aaa
rcr
cmp
or
and
repnz
sub
sbb
inc
das
ffree
mov
pop
js
push
int
cmpsb
shrl
jb
pop
mov
es
sub
mov
nop
cli
rolb
outsl
repz
jo
sahf
sub
mov
insb
sub
addb
dec
das
jp
in
call
int3
scas
cmpsl
xlat
fs
aad
push
add
jle
pop
cmpsl
lds
xchg
cmp
adc
add
pushf
loop
out
mov
arpl
add
dec
mov
in
fwait
cmp
mov
lds
jno
rorl
pop
lret
sub
inc
lcall
add
sahf
jns
pop
inc
cmp
dec
les
sahf
jns
hlt
or
ja
cmpsl
and
sbb
mov
std
xlat
xor
xchg
call
mov
mov
push
sbb
sub
adc
ds
in
data16
loope
pop
or
das
cltd
pop
push
shl
ljmp
ss
xchg
ds
dec
out
stos
sub
js
sbb
cmp
sbb
add
dec
daa
xor
add
jmp
out
das
adc
jge
xor
les
xor
cmp
out
je
addr16
mov
std
and
cltd
scas
fsts
mov
orb
xchg
cmp
xchg
es
fcmovnb
push
movsb
dec
ss
sub
ja
pop
and
xchg
adcl
and
push
sarl
push
add
mov
push
stos
dec
pop
std
test
testl
fwait
adc
shrl
cmpsl
or
rcll
jnp
jmp
ret
bound
and
out
je
xchg
insb
out
gs
or
ja
lcall
pop
push
js
lock
cmp
dec
insb
sub
add
add
into
ror
rcl
into
jbe
inc
retw
icebp
gs
js
in
js
mov
rcrb
scas
ret
js
repnz
fstpt
mov
scas
push
and
fdivrp
sbb
jmp
sbb
mov
xor
call
lret
inc
daa
and
cltd
imul
sub
shlb
push
mov
ret
sahf
loope
xchg
dec
mov
shlb
pop
and
frstor
test
cmpsb
jmp
jno
xchg
jnp
outsb
loopne
rcrl
fnstcw
adc
das
in
mov
add
outsl
mov
rorl
mov
jle
iret
and
cmpsl
mov
push
fbstp
mov
mov
jmp
push
test
orb
lods
out
sbb
sub
popa
and
stc
push
cmp
sub
fldcw
imul
jp
pop
xor
sbb
jmp
arpl
sub
fwait
lret
lret
or
fdivl
adc
scas
mov
xchg
int3
testb
fimull
adc
sahf
xchg
push
mov
fsts
inc
ljmp
mov
xchg
popa
scas
and
mov
push
dec
xor
push
out
stc
cmp
mov
dec
lock
adc
inc
test
fidivs
in
jbe
hlt
movl
test
inc
jg
sub
xchg
test
jne
push
xor
test
lcall
inc
jbe
jb
aam
popf
shrb
add
mov
pop
insl
xorl
sbb
dec
lods
fnstenv
fwait
mov
and
lcall
pop
test
dec
gs
push
push
sbb
cmpsl
lods
push
push
in
xchg
out
ss
fidivrl
adc
adc
pop
mov
scas
mov
or
arpl
xchg
ljmp
jl
pop
fwait
std
xchg
jbe
mulb
add
popa
mov
bound
xor
adc
or
movsb
mov
insb
int
xchg
mov
fs
adc
jecxz
dec
or
sub
scas
jae
jge
mov
pop
les
rorl
out
std
dec
fstp
movsb
icebp
and
faddl
pushf
lock
push
mov
add
rorl
scas
xlat
jmp
aas
xlat
xlat
lret
xlat
lret
rcr
and
or
cwtl
outsl
pop
rcrb
js
jle
js
adc
adc
pushf
das
daa
fldt
or
mov
push
or
mov
jge
fwait
aaa
insb
pushf
incb
dec
push
mov
push
stos
xchg
fsubrs
cmp
xchg
jecxz
mov
pusha
adc
push
jmp
enter
ja
push
adc
sbb
xorl
sub
sbb
inc
xchg
mov
pop
mov
sbbl
roll
pushf
sub
fstl
divl
jp
ljmp
stos
lahf
xchg
test
mov
inc
cmc
adc
fisttpll
sub
mov
add
push
jmp
add
xchg
int
lret
mov
lods
jp
xchg
mov
xor
testb
inc
jno
ljmp
xchg
pop
mov
mov
mov
jno
mov
push
lods
lock
movsl
std
pop
xor
fiadds
cld
and
mov
in
pop
sbb
divb
cmp
jnp
lds
lahf
arpl
mov
pop
iret
lods
and
lahf
arpl
call
aaa
pusha
je
and
sar
adc
push
ds
mov
mov
out
mov
inc
mov
cmc
fdivl
aas
cwtl
inc
imul
mov
jb
sub
mov
repz
stos
pop
cld
adc
fisttpl
loopne
push
cmpsb
push
mov
add
mov
imul
jge
inc
mov
subb
dec
inc
sbbb
inc
lahf
pop
fsts
aam
xchg
movsl
in
lock
test
jmp
mov
in
jno
xor
inc
or
cmp
gs
adc
into
iret
push
inc
xchg
lret
xchg
int3
xchg
repnz
repnz
subl
lods
lock
jle
and
mov
jge
outsl
das
mov
add
lcall
icebp
jmp
mov
ja
fcomps
mov
cmp
sub
jo
ds
add
inc
fisttps
pop
and
adc
jne
out
inc
rol
inc
jnp
insl
icebp
sbb
pop
stos
mov
mov
sub
cmp
ja
jmp
rol
xor
sti
das
icebp
movsl
mov
jle
js
clc
add
dec
add
cltd
in
lods
and
out
aas
insl
cli
ja
mov
add
xor
out
dec
xchg
xor
or
adc
jno
icebp
test
rorb
jmp
addl
cli
inc
pop
cmp
fbld
les
xor
je
fdiv
cmp
sbb
cltd
test
cwtl
pushf
addr16
mov
arpl
mov
mov
shll
mov
decb
adc
ret
xor
jae
mov
jb
shrb
mov
inc
call
cmp
push
lret
fisttpll
push
sub
push
cmp
adc
popf
cmp
xchg
gs
xchg
call
je
outsb
mov
add
cld
jb
cwtl
cmp
sub
inc
jge
data16
add
or
popa
rorl
xor
mov
cmp
jmp
fnsave
mov
insl
xchg
pushf
mov
cmp
inc
mov
jae
pop
lret
shlb
bound
ds
pop
xor
sub
addl
popl
repnz
lret
push
pusha
add
enter
gs
push
roll
add
dec
data16
stos
xor
outsb
js
mov
and
fdiv
xor
sub
sbb
lret
into
mov
pushf
add
test
movl
mov
subb
mov
xor
stos
aaa
or
add
test
mov
pop
inc
sarb
sbb
inc
addr16
lods
rcrb
push
cmp
cs
or
dec
int
outsl
adc
cs
imul
pushf
cld
aam
outsb
push
and
mov
push
loope
loop
std
and
insl
adc
inc
mov
jo
es
mov
das
loope
fwait
out
pop
mov
xchg
push
subl
iret
bound
leave
stos
js
pop
inc
mov
xor
adc
dec
sbb
jns
adc
call
dec
push
blsic
cli
jle
mull
cmpl
push
shr
call
push
enter
xor
xor
add
add
imul
mov
jmp
iret
leave
into
xlat
fcmovu
aad
cli
je
sti
ja
pop
and
js
in
js
mov
cli
jmp
out
nop
and
cmp
lret
sub
cmp
inc
and
inc
addr16
andl
cmp
jne
pusha
push
mov
leave
pusha
leave
js
iret
cmp
imulb
and
movsb
leave
fs
dec
scas
jae
cli
and
fidivrs
mov
popa
sbb
ret
sarl
pop
arpl
insl
mov
movsl
jo
ja
or
adc
jmp
clc
pop
movsb
push
mov
inc
rcrb
xchg
pop
mov
into
sub
adc
or
add
cmpsl
xchg
lea
push
add
push
mov
cld
pusha
pop
in
es
jmp
lea
cmp
pusha
shll
aam
imul
mov
sub
xchg
roll
jmp
mov
insb
test
ds
mov
icebp
int3
subb
pop
mov
adc
xor
adc
mov
test
lods
je
sbbb
adc
add
inc
mov
popf
dec
adc
inc
mov
in
mov
jne
pop
mov
adc
aas
or
jb
scas
jo
cmp
jns,pn
mov
int3
paddd
sub
mov
inc
lret
enter
ret
popa
cmp
movsl
sbb
mov
mov
ret
ret
jmp
insb
ds
jecxz
inc
pop
int3
mov
lret
jbe
adc
lret
cwtl
jnp
pop
cltd
mov
push
aaa
dec
outsl
pop
nop
loope
movsb
dec
lret
pop
add
inc
sarl
loopne
icebp
lock
push
shll
stos
dec
scas
repz
lret
cwtl
pop
mov
arpl
sbb
ds
and
cmpsl
mov
and
ja
adc
pusha
ficompl
jg
mov
imul
iret
in
inc
inc
shl
fstpt
enter
xor
jb
dec
mov
sub
jnp
jecxz
push
pop
cmp
pushf
jmp
cmp
stos
outsb
int3
shl
sti
andb
or
jno
sbb
cmc
jl
jne
or
outsb
js
je
lret
xlat
cmp
mov
fldl
lret
aad
or
nop
jo
xchg
cwtl
ds
and
add
xor
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
jmp
into
cmp
fxch
sub
xor
js
in
js
cs
jb
jle
sahf
pop
adc
clc
das
add
sub
subl
dec
leave
push
mov
add
ficoms
jae
insb
and
ds
gs
icebp
out
sahf
daa
mov
out
mov
lock
push
mov
shl
and
cmp
shrb
adc
rolb
lret
scas
mov
adc
sbb
sbb
sbb
push
and
pop
and
add
in
sbb
jae
pop
out
cs
outsl
out
cmp
fistl
mov
inc
or
mov
cmc
pop
lock
mov
ret
pop
scas
add
das
adc
les
imul
popf
repnz
pop
jae
test
add
imul
fwait
dec
dec
mov
imul
les
stc
ljmp
scas
cmpl
and
pop
fsubp
mov
gs
and
inc
nop
fimuls
jmp
add
ljmp
mov
push
sbb
dec
or
and
xor
sbb
mov
mov
adc
push
push
dec
xor
pushf
stos
int3
lret
mov
popa
aam
mov
push
or
mov
pop
jecxz
in
sub
out
dec
rcrb
cmp
cmp
out
fisttps
icebp
pop
adc
mov
add
push
xchg
mov
clc
mov
push
mov
and
outsb
sbb
outsl
outsl
loop
rcll
fcmovnu
pop
mov
add
out
fcmovnu
push
mov
pop
pop
aas
shlb
test
orb
add
sbb
aas
xchg
mov
add
aaa
out
xchg
jge
push
mov
int
mov
fstpl
cmp
ljmp
ror
dec
pop
in
or
movsb
rcl
mov
jge
nop
sarb
or
or
mov
stos
addl
repz
jbe
in
fldt
das
aaa
fdivp
dec
adc
and
pushf
xchg
rol
jae
in
xorb
push
pop
les
jno
dec
pop
subb
mov
push
cmpsb
mov
xor
outsb
adc
shl
movsl
fs
jmp
add
dec
sub
add
mov
pop
lock
cmp
mov
jbe
jmp
rol
ds
into
rcl
adc
cs
jle
js
in
js
fsubrp
mov
adc
lcall
aam
stos
cmp
pop
lret
push
loop
push
mov
cmp
mov
xchg
rcr
les
cmpsb
pop
arpl
xchg
xchg
push
cmpsb
push
lahf
lret
popa
add
jo
jno
mov
sbb
stos
enter
in
idivl
sbb
xlat
pop
cmp
mov
mov
cmp
fidivl
outsl
cmp
dec
test
fimuls
push
aad
pop
ds
pushw
push
movsl
cmpb
mov
mov
adc
mov
xchg
inc
loope
xlat
add
test
fimull
cmpb
mov
in
aad
scas
and
xchg
lds
adc
sbb
fsts
inc
lods
or
mov
pop
or
pop
cmpsl
enter
mov
push
scas
adc
adc
rclb
cwtl
xor
mov
ret
aaa
ljmp
cmp
out
sub
xor
enter
inc
aaa
inc
jb
jb
xchg
pop
cmp
xchg
xor
js
mov
sub
loopne
and
push
mov
cmp
addr16
outsl
dec
out
push
addr16
imul
out
jae
clc
pop
lea
add
xorb
mov
mov
adc
scas
lret
jecxz
xchg
mov
aaa
add
jg
in
dec
sub
mov
or
popf
data16
bnd
push
xor
cmpsl
int3
mov
mov
pop
cltd
hlt
fsubrs
push
cmp
inc
jnp
jo
and
inc
in
add
fmul
insb
aaa
test
sbb
jns
fdiv
adc
add
push
imul
push
pop
rol
mov
lds
adc
rcl
add
adc
test
jne
jmp
pop
scas
inc
add
cmpsb
adc
jno
cmpsb
sbb
lret
pop
inc
push
mov
cli
mov
dec
pop
push
xchg
test
mov
int3
lds
xor
mov
shrl
pop
and
clc
or
fldl
lahf
addr16
fimull
in
dec
cmpb
mov
xor
xor
jmp
rol
enter
fcmovnu
xchg
add
inc
clc
xchg
dec
icebp
jmp
js
in
js
add
sbb
pop
adc
mov
test
mov
fistps
cs
xchg
pop
les
notb
inc
lock
jb
call
gs
leave
mov
add
ret
mov
jg
xchg
mov
cs
pop
dec
fs
fimuls
cltd
lret
jno
mov
pop
out
mov
sbb
subb
mov
aam
in
inc
inc
cmp
fldcw
inc
rep
aaa
sbb
and
mov
inc
xor
scas
out
jle
jno
fsubrl
dec
xchg
xlat
lea
out
push
jb
sbb
adc
gs
repz
js
mov
push
addr16
push
sub
call
arpl
mov
dec
fdivrs
push
pop
test
mov
lcall
arpl
inc
adc
lret
jge,pt
in
jns
push
xor
inc
out
test
inc
call
les
dec
imulb
cmc
xchg
jo
call
xchg
out
les
repnz
xchg
insl
das
push
adc
ret
js
push
cmp
int
inc
xor
pop
sbb
test
imul
ror
or
js
aad
clc
test
insb
lret
jge
roll
test
inc
mov
pop
and
mov
xor
lods
push
cld
dec
je
sub
adc
clc
pushl
shll
mov
push
lret
mov
imul
test
mov
xchg
pop
jbe
adc
dec
fimuls
pop
cmp
cmpsl
lret
lret
dec
cld
call
loop
pop
xchg
cmp
movsb
lds
int
rolb
jo
jge
push
movsb
jl
lea
shl
cwtl
bound
ljmp
inc
dec
push
mov
rcrb
and
imul
jle
dec
jl
sbb
jnp
sub
xchg
movsb
fcompl
ljmp
add
js
sbb
dec
push
and
test
push
sbb
mov
mov
mov
mov
aam
out
arpl
mov
inc
iret
cmp
arpl
imul
mov
mov
mov
mov
add
movl
jmp
fcmovnu
shr
movsl
xchg
roll
cmp
imul
subl
xchg
jle
lds
cmp
mov
out
jmp
mov
es
inc
push
lahf
iret
mov
les
pop
sarb
push
push
pop
pop
data16
stos
push
cwtl
lock
rolb
in
pusha
mov
sti
mov
ret
add
inc
sub
rcll
sub
xor
cld
mov
or
aad
inc
jle
jbe
xchg
popa
fisubs
add
cmp
lods
es
jbe
cmp
add
mov
and
jp
mov
adc
adc
sahf
pop
ja
addr16
repnz
dec
or
sub
loop
iret
pop
cmp
imul
bound
xor
loope
and
movsl
int3
sbb
scas
ljmp
addr16
pushf
sahf
cwtl
dec
test
fwait
adc
fimull
xor
outsb
ja
mov
sbb
push
add
cli
jno
sti
or
js
mov
test
je
push
sahf
fxch
add
mov
add
jg
es
pop
sarb
loopne
xor
lret
scas
mov
mov
jg
idivl
dec
repz
add
mov
add
mov
add
push
repnz
lds
idivl
pop
pop
mov
out
repz
push
inc
sbb
jno
dec
or
outsl
xchg
push
mov
popl
adc
mov
lret
push
inc
out
jge
repz
pop
imul
or
xor
ret
loope
mov
sbb
andb
enter
in
dec
and
gs
inc
pop
into
ror
add
fs
jp
and
in
and
mov
push
mov
outsb
push
movsb
sbb
aas
fisubrl
or
cmp
jb
pop
adcl
mov
lock
xchg
xchg
int
outsb
fdivr
repz
adc
mov
xor
sbb
stos
into
and
pop
cld
sub
mov
xlat
sbb
or
mov
xor
loopne
ret
mov
mov
jmp
iret
ret
rol
fcmovnu
mov
adc
and
jle
js
mov
xchg
fistpll
sbb
call
sbb
xor
fs
or
clc
sarb
jl
sub
iret
lret
pop
mov
in
test
adc
pop
fsubs
xor
mov
daa
cmp
sbb
rorb
mov
stos
fildll
push
into
les
pop
jge
adc
out
xchg
mov
movsb
xor
imul
loopne
pop
arpl
outsl
fs
add
fwait
mov
fst
int3
cltd
out
cmp
xor
aad
out
inc
aad
outsl
into
sbb
jb
xor
int
xchg
pop
or
push
lods
mov
orb
cli
daa
cmp
mov
mov
sub
aad
xchg
in
in
iret
cmp
and
je
cmc
or
pop
aam
test
lea
sbb
lss
jb
xor
out
xchg
rcrl
leave
testb
mov
sub
mov
int3
adc
outsl
lahf
inc
cmp
add
jns
or
adc
add
addr16
jl
stos
leave
push
and
adc
fstpt
mov
std
int3
roll
cwtl
mov
cmc
add
xchg
out
gs
stos
jno
sbb
test
divl
in
jmp
mov
inc
fdivrl
les
push
xor
jns
add
mov
sti
pop
loop
scas
jnp
cli
repnz
push
js
push
ffreep
or
or
mov
cmpsb
cmp
lds
jle
stos
dec
hlt
cmp
mov
daa
es
jne
push
fcompl
sahf
loope
std
and
xor
jns
out
pusha
imul
xchg
pop
loope
xlat
and
inc
jl
jns
das
dec
cmp
xchg
test
clc
or
std
outsb
bound
adc
dec
jg
dec
leave
shll
mov
loop
hlt
outsl
xor
add
and
daa
and
pushf
movq
daa
test
repnz
mov
push
cmpb
xchg
pop
cmp
int3
dec
mov
inc
xchg
push
mov
pop
mov
movl
movl
jmp
int
ror
fcmove
leave
sub
jp
stos
push
stos
insb
js
in
js
ljmp
sbb
int3
iret
adc
js
mov
lcall
scas
fdivr
sub
in
push
pop
pop
and
inc
sub
sbbb
rorb
outsl
sbb
cmp
mov
fistl
xlat
sbb
cmp
movsb
push
testl
sbbl
and
imul
mov
jbe
jecxz
fs
in
pusha
sarl
aam
lds
add
insl
push
and
mov
sbb
and
bound
loop
repnz
outsl
cmp
pop
add
subl
and
dec
ffreep
sbb
lret
lods
jb
inc
jno
iret
dec
stos
cld
mov
lcall
cld
mov
or
fsts
mov
pop
lret
arpl
popf
sub
loop
fisttps
dec
push
fwait
clc
inc
inc
mov
std
cs
in
cmp
mov
inc
stos
pop
ret
mov
mov
push
sub
or
mov
arpl
add
add
into
test
xchg
push
in
xlat
test
stc
je
xor
or
push
mov
lret
cmc
nop
mov
lret
lretw
stos
jecxz
inc
sub
push
jl
iret
add
inc
push
jb
data16
or
in
enter
pop
pop
cmp
loope
call
ljmp
cmp
push
ret
push
mov
xor
loopne
hlt
stos
cs
jb
push
movsb
in
fstpt
mov
mov
mov
dec
jnp
roll
jp
add
lods
enter
mov
fs
jno
inc
outsl
pop
jmp
inc
cmpsb
jecxz
inc
js
or
loopne
mov
loopne
and
mov
xchg
mov
mov
fs
lahf
cmp
jae
push
sbb
jbe
add
cwtl
in
jl
popa
loope
xlat
xor
pop
jnp
push
mov
fisttpll
clc
ss
pop
adc
lods
mov
in
push
pusha
adcb
adc
cmp
fcoml
ljmp
mov
iret
ds
pop
fists
xor
hlt
push
sub
lret
xchg
jae
test
jae
sub
sbb
mov
push
cmpsb
xor
movsl
orl
mov
rolb
shr
cwtl
sldt
mov
xor
add
jmp
ret
xlat
data16
mov
js
in
js
push
call
daa
pop
pusha
orb
jbe
jl
int3
mov
sub
jg
and
cmpsl
icebp
rorl
jl
or
cmpsb
adc
stos
or
pop
cmp
or
lock
jb
mov
jmp
add
mov
outsl
xlat
push
mov
jns
loopne
mov
mov
lcall
and
mov
test
push
xor
cli
mov
mov
mov
jae
cwtl
int
xchg
xor
into
inc
jmp
sar
loopne
ljmp
sbb
mov
cmp
push
fstpl
loop
bound
sahf
daa
adc
faddp
fwait
lods
xor
imul
mov
fcmovne
arpl
not
mov
jns
sub
addl
in
cmp
arpl
icebp
pop
aaa
mov
jne
adc
clc
fcoms
dec
jecxz
lret
cmp
mov
cmpsl
dec
cmpsl
inc
das
int
cmpsb
mov
rorb
add
adc
inc
inc
add
stos
and
xor
in
xchg
fdiv
inc
dec
adc
push
sbb
ds
xchg
nop
cld
and
in
mov
cltd
sarb
cmpsb
adc
push
sbb
mov
mov
insl
xor
cmp
es
pushf
fwait
or
arpl
xchg
les
add
dec
mov
fidivrs
fucom
fildll
fistpl
out
int3
ds
xor
notl
inc
pop
or
imul
push
xor
mov
mov
nop
push
push
mov
mov
mov
test
out
ss
cmp
dec
mov
mov
pusha
aaa
mov
add
cwtl
mov
sbbb
push
adc
lods
pushf
shll
bound
repz
cld
bound
pop
add
ljmp
inc
sbb
orl
jo
addb
sbb
add
or
fs
xor
shlb
xor
shll
in
push
in
jne
sbb
mov
and
and
or
xchg
lds
adc
and
ds
test
bound
into
sub
mov
cmp
addl
add
int3
xlat
enter
shll
std
xchg
ja
js
jle
js
lret
dec
and
mov
and
pop
xchg
inc
bound
fisttps
or
loop
in
or
scas
icebp
inc
pop
sbb
popf
fnstsw
es
out
xchg
lods
pushf
sub
cld
and
testl
aaa
cltd
mov
daa
mov
sbb
pop
pushf
loope
lret
imul
add
xor
ret
movsb
add
push
test
and
xchg
mov
es
xchg
xor
add
fcoms
add
inc
or
sbb
loopne
pop
call
lret
cmpsl
jbe
inc
xchg
push
adc
test
jb
and
in
jp
into
shlb
repnz
out
jge
or
in
dec
sub
aad
add
sahf
loopne
test
test
mov
pusha
lods
mov
mov
push
std
sub
xchg
gs
mov
or
inc
out
js
jp
dec
rcrb
sub
mov
sbb
mov
and
pop
imul
fwait
push
popa
mov
rcl
leave
xchg
aas
es
sub
push
inc
rcrb
pushf
setnp
popl
shr
dec
aas
mov
push
dec
add
xchg
xor
fwait
push
test
dec
mov
sbb
jbe
dec
sub
sub
test
fists
sbb
xchg
clc
mov
repnz
cs
pop
inc
pop
sub
fistl
call
adc
sbb
cmp
ss
fiaddl
cmp
xor
adc
jl
mov
cmpsb
scas
or
cmpb
inc
cmpsl
out
push
jle
lods
pushf
mov
sub
mov
mov
mov
movb
call
mov
or
jb
mov
dec
in
or
mov
std
sahf
and
mov
jae
dec
sbb
adc
rcrl
setns
enter
fists
mov
add
push
pushf
mov
ret
push
xor
push
jbe
lds
pop
jl
inc
adc
sbb
jg
sbb
inc
jecxz
je
fmul
mov
push
jnp
add
mov
mov
mov
mov
jmp
aas
cmp
cmp
sbb
xor
js
jle
js
xchg
in
sub
jl
mov
es
enter
push
loop
or
mov
fucomp
dec
and
fildl
inc
xchg
sbbb
push
jbe
ljmp
stos
dec
popf
add
lods
loope
xchg
adc
sahf
push
div
push
mov
scas
jg
out
in
and
shlb
jne
cwtl
xchg
fstp
loop
shlb
jle
sbbb
cld
xchg
dec
nop
lods
fcmove
adc
mov
pop
mov
loope
add
iret
call
sub
das
rorl
iret
pushf
or
scas
sub
xchg
out
test
adc
loope
inc
jb
xchg
mov
push
pop
repnz
clc
je
fcoms
pop
pusha
sbb
je
lea
adc
les
mov
jnp
pushf
inc
loope
lahf
es
es
mov
mov
sbb
mov
push
jp
sub
inc
js
adc
std
cmp
push
icebp
add
mov
push
or
mov
idivb
jecxz
lahf
jo
addb
popa
adc
das
add
mov
dec
mov
or
inc
int3
jo
xor
adc
jb
shl
loop
les
adc
int
bound
cmp
jno
rorl
lcall
sti
mov
adc
mov
cmp
mov
push
pushf
nop
push
cmc
shlb
mov
test
and
xor
stos
js
mov
lret
aad
es
and
pop
mov
push
imul
cmpsl
sbb
imul
nop
in
lahf
mov
rolb
nop
dec
xor
mov
cmp
mov
sti
pop
xor
fcomp
outsl
and
mov
push
mov
fstl
xchg
mov
adc
ficoml
push
push
adc
mov
jns
xor
jne
sbb
ficomps
cmovp
cmpsb
test
mov
and
mov
mov
fisubrs
dec
fdiv
fwait
loop
stos
test
cmp
insb
out
lret
cs
jne
add
jo
sub
rclb
clc
add
mov
mov
mov
mov
xor
jmp
cmp
pop
in
inc
clc
repz
jp
js
jle
js
lahf
add
enter
adc
mov
add
jl
std
aad
dec
ror
jbe
je
aaa
add
dec
dec
insb
sbb
enter
in
xchg
fwait
je
or
pop
mov
int3
in
inc
sub
pop
push
fldt
addr16
inc
negl
loopne
dec
inc
push
xor
cli
cmp
rorb
pop
cmp
pushf
out
xchg
xchg
or
imul
push
pop
add
pop
add
test
mov
fwait
mov
dec
mov
pop
pop
adc
pushf
add
mov
fsubp
jl
inc
insb
negl
or
jne
ret
inc
call
mov
outsl
jp
sub
xchg
nop
xor
pop
dec
mov
push
dec
jne
notb
sbb
movb
push
ss
mov
sub
std
xchg
pop
fisubs
push
push
decl
mov
testl
dec
aas
mov
dec
imul
add
rolb
and
inc
sub
push
out
addr16
aam
aam
scas
fdiv
enter
mov
add
dec
orl
inc
pop
rcr
hlt
dec
outsl
jecxz
pop
int
fs
pop
movsl
mov
inc
sbb
inc
mov
mov
mov
ss
mov
inc
movsb
ljmp
lds
movsb
xor
pusha
movsb
mov
adc
fyl2xp1
sbb
mov
test
jb
cmpl
push
adc
jmp
lret
test
cmpsl
cmc
pop
mov
movsl
push
call
jmp
in
inc
div
adc
jnp
aaa
stos
xchg
push
push
ret
in
lds
adc
les
fstpt
pop
into
mov
idivb
aas
js
test
mov
sti
sahf
adc
dec
mov
in
or
sbb
jg
icebp
xchg
jle
call
xorl
dec
xchg
cmp
rcrl
mov
subl
popf
clc
pop
and
maxps
imul
push
mov
mov
pop
cmp
pop
shrb
test
mov
mov
adc
mov
rcrb
sbbb
sbb
andl
mov
mov
jmp
enter
cld
imul
test
jg
in
js
roll
hlt
int
loop
pop
in
lds
cs
lret
adc
mov
jb
fstl
mov
sbb
push
aad
imull
mov
jne
dec
aas
sub
pop
rclb
icebp
jle
xchg
roll
lea
fsubrs
imul
add
push
dec
loopne
add
and
jae
ljmp
sbb
dec
mov
movsw
cmc
imul
dec
insb
fisubrl
jo
or
movsb
mov
inc
sbb
js
pop
xchg
push
push
pop
cmp
or
sti
mov
pop
icebp
mov
push
add
pop
sahf
ficomps
cmpsb
jle
xor
jl
ret
adc
test
sti
xchg
sub
pop
mov
mov
push
fwait
xchg
scas
adc
cmpsl
push
repz
push
mov
mov
inc
andl
sbb
jg
mov
pop
es
lods
mov
popf
sub
rolb
into
shlb
or
pop
inc
popf
inc
mov
int
mov
cmp
out
cmp
or
dec
pop
cmpsl
call
pop
adc
aaa
stos
insl
cs
fstpl
lock
jns
dec
xchg
mov
cmp
fists
xor
call
test
xchg
or
jp
xor
fmull
aam
iret
xchg
sbb
sub
ljmp
xchg
leave
call
and
pop
mov
lock
aad
push
mov
jmp
inc
mov
aad
mov
int
int3
mov
ret
dec
xchg
xchg
in
fstpt
push
push
sub
mov
and
mov
fisubrl
dec
call
sbb
jae
mov
jl
rep
mov
push
jl
lahf
inc
jnp
push
jmp
sub
sub
clc
fs
mov
call
ficomps
xchg
push
arpl
pop
inc
data16
lds
repnz
mov
ljmp
cmp
sbb
and
adc
lea
dec
mov
mov
xor
xor
add
add
jmp
ror
ror
leave
leave
mov
out
adc
jge
js
jle
js
push
lods
fdivrl
aad
xchg
pusha
jno
sub
imul
loop
cmp
cwtl
push
mov
sbb
pop
repz
ret
jb
loope
lods
mov
adc
imul
ret
aaa
movsl
add
loope
out
xor
aad
ja
xchg
popa
lret
xchg
movsb
inc
imul
inc
xor
fldenv
adc
lods
mov
stos
in
dec
aas
adcl
jle
lock
pushf
or
fisubs
pop
loope
ljmp
jno
adc
dec
cmc
aad
push
adc
bound
dec
inc
fs
adc
mov
roll
mulb
call
inc
out
adc
adc
push
scas
cs
insl
f2xm1
out
ja
insl
xchg
rcl
or
lock
add
lahf
jae
xlat
scas
pop
cltd
lods
pusha
xor
in
jno
out
adc
adc
pop
loope
fcoml
dec
xchg
dec
push
dec
rorl
inc
pop
int3
lret
nop
out
adc
cmpsl
ja
jo
fmulp
lea
mov
outsb
jge
data16
test
popa
adc
movsb
push
ret
and
cmpsb
hlt
sub
out
fistl
imul
clc
pop
iret
cwtl
mov
jmp
notb
addr16
lcall
popa
mov
loopne
test
mov
ljmp
mov
sbb
pop
xchg
adc
test
pop
xor
cmc
lret
mov
test
jns
sti
jge
shl
fcoml
imul
cmp
mov
imul
mov
cs
insb
movsb
int3
outsb
insl
jb
mov
push
sahf
insb
sbb
jbe
cmp
push
fld
nop
in
xor
pop
into
dec
daa
push
in
jmp
cmp
pop
sub
or
cmp
jbe
inc
cmp
enter
fisubrl
jno
in
jbe
stos
lock
pusha
leave
add
enter
bound
popf
xor
mov
add
aad
lods
aaa
pop
loope
shll
enter
sbb
cltd
mov
jno
subl
loopne
or
ds
pushf
jg
leave
mov
ss
arpl
lcall
jmp
loopne
mov
cmpsb
ja
add
mov
mov
mov
xor
add
imul
mov
xor
jmp
enter
lret
fxch
flds
xchg
loope
xchg
lret
add
in
js
xchg
mov
push
ljmp
mov
jl
stos
cli
push
jnp
mov
daa
movsb
sub
cwtl
xchg
push
jbe
shl
mov
pop
push
lds
adc
lods
fsub
pop
test
mov
call
adc
sahf
out
mov
or
and
sub
jl
xchg
lock
std
cmc
cmpsb
or
test
and
lock
popa
xchg
mov
push
xchg
or
ficomps
jne
or
inc
sbb
hlt
mov
sub
inc
push
mov
dec
aad
imul
xor
roll
out
lret
sub
int
and
xor
fs
pop
pop
rcrb
push
into
lds
push
loop
sbb
mov
fisubs
icebp
fidivl
shll
push
int3
scas
sbbb
inc
cmp
add
dec
mov
sbb
and
cmp
xor
push
pop
call
dec
test
cmp
dec
mov
xor
mov
push
sahf
or
das
push
add
pop
jns
pop
dec
stos
out
pop
xchg
lea
and
mov
inc
inc
fiadds
mov
cmpsb
call
stos
lea
out
jb
lcall
or
ror
pop
pushf
dec
sbb
push
sub
xchg
cmp
cwtl
or
pushf
mov
arpl
pop
ret
mov
or
pop
jb
adc
pusha
in
mov
cwtl
xor
cs
sti
sarb
mov
outsb
out
cwtl
notl
mov
push
push
sbb
adc
hlt
popf
lret
test
loopne
andl
inc
cmp
mov
das
mov
bound
and
and
fbld
shrb
xor
push
and
dec
sub
mov
jg
push
adc
sbb
outsb
xchg
in
mov
jge
imul
jge
cmp
cmp
lcall
push
cmpxchg
fnstenv
sbb
adc
cmpsl
fcmovnu
mov
mov
xchg
sarl
xor
xchg
cmp
stos
jnp
stos
add
mov
jmp
lcall
call
mov
xor
xlat
mov
mov
xor
add
jmp
ror
iret
aam
insl
js
scas
jno
lods
add
jg
in
js
stos
cmpsb
inc
push
mov
stc
adc
iret
sbb
hlt
xor
xchg
out
push
or
sub
inc
xchg
dec
bound
pop
jno
repz
or
test
pop
adc
jecxz
data16
and
dec
dec
add
and
adc
jp
fnstenv
jmp
clc
test
out
fcompl
ss
push
arpl
push
jae
inc
out
mov
hlt
mov
in
add
int
in
nop
dec
fcomps
lods
sahf
daa
dec
loope
and
mov
dec
xor
and
fsubrl
xchg
push
insb
scas
push
xor
notl
out
mov
popa
hlt
or
cmc
add
pop
fisttpl
and
out
dec
dec
inc
lods
test
or
test
jne
push
xchg
stos
inc
les
fucom
xchg
insb
icebp
cmp
pop
push
jge
xlat
test
test
lds
pop
adc
push
dec
lock
aam
mov
out
mov
jge
mov
sub
nop
cld
push
mov
cmp
inc
xchg
enter
jmp
xorl
call
out
xor
dec
adc
in
es
imul
xor
lds
outsb
sub
jle
pop
clc
push
adc
bnd
jno
ja
insl
stos
pop
xor
pcmpeqw
mov
xlat
add
clc
inc
fdiv
fmulp
test
adc
clc
push
cmp
or
or
addr16
sbb
dec
repz
es
repnz
xchg
fdivrs
adc
cmp
fcmovnb
push
mov
dec
xchg
xchg
mov
jae
outsl
test
std
aad
or
je,pn
lods
mov
lahf
jg
push
pop
mov
ja
dec
cmp
or
leave
jne
ret
imul
sbb
iret
mov
decl
push
adc
pusha
ret
mov
nop
sub
mov
inc
lret
stos
inc
mov
dec
jmp
stos
mov
les
int
mov
fs
in
inc
lret
sub
fwait
mov
popf
adc
add
push
and
rclb
les
push
pop
push
fadd
or
pop
mov
and
sahf
xchg
push
pop
imul
mov
jmp
rol
leave
rcr
rcr
enter
fucomp
pop
cmp
push
jg
in
js
xorl
pop
ficoml
in
and
fmul
shr
fwait
ja
pop
ljmp
adc
mov
xchg
test
dec
push
sbb
inc
add
fbstp
sub
sub
or
lods
stos
and
aad
rcl
sbb
mov
mov
adc
cld
pop
or
aas
inc
cltd
nop
mov
jo
push
movsb
gs
inc
cltd
dec
in
lea
ret
outsl
enter
dec
outsb
data16
stos
lods
loop
xchg
jns
fwait
loopne
mov
push
lret
mov
mov
adc
dec
cmp
adc
je
pop
dec
aaa
fdivrl
sub
xor
hlt
jg
adc
cmc
add
out
loopne
pop
mov
sub
push
test
or
loopne
test
mov
sub
loop
popf
inc
mov
testb
xchg
lahf
add
inc
xchg
je
mov
or
xor
cmp
add
jbe
in
loop
popw
rcr
sbb
pop
mov
orl
subb
mov
sbb
or
sbb
xchg
xorl
cltd
xchg
lods
aas
pop
jecxz
mov
out
mov
pusha
ret
scas
cmp
hlt
inc
js
cs
xchg
xor
dec
cltd
or
hlt
fnstenv
push
xchg
ss
xor
sahf
outsb
in
ss
fsubs
test
popf
int3
in
iret
inc
push
cmp
dec
xchg
cltd
mov
sbb
xchg
das
mov
sub
pop
sbb
mov
jg
add
jecxz
push
inc
filds
stos
push
gs
insl
sub
xlat
shll
fstl
imul
push
dec
inc
push
outsb
xchg
in
cs
movsl
push
outsb
sti
lret
and
xchg
lods
xchg
ja
xor
out
sub
inc
inc
mov
clc
pushf
mov
fistl
insl
and
dec
mov
xor
adcl
shlb
xor
xorb
jmp
add
adc
frstor
and
rcrl
pop
nop
std
test
mov
out
mov
popa
and
sbb
outsb
fwait
xor
mov
rcl
ja
add
or
fsubr
addl
add
aas
int
aam
mov
pushf
lods
mov
in
js
lods
push
icebp
xor
orl
cld
call
sub
push
jge
cmpsb
mov
adc
test
loopne
out
or
mov
cmp
add
jg
pop
cmp
cli
inc
je
std
cmp
push
cmp
insl
mov
mov
jbe
lock
mov
int
jp
mov
adc
push
xchg
mov
out
pop
push
mov
inc
jg
mov
lods
cmpsb
jg
int3
outsl
mov
add
movsl
xor
movsl
mov
int3
jl
adc
add
mov
popf
inc
mov
lock
and
js
shll
mov
ficompl
incl
in
es
add
xchg
and
pop
dec
out
lods
or
and
mov
and
jl
jo
shl
loop
aas
out
inc
push
mov
xor
lahf
jb
jae
add
mov
jae,pn
push
pop
push
push
or
ja
les
pop
adc
hlt
jnp
adc
movsb
jmp
out
xor
add
adcb
push
dec
lock
adc
stos
inc
repz
ja
xor
push
xor
test
xchg
cli
jl
orb
sbb
fiaddl
adc
testl
call
jns
test
push
push
ja
sbb
in
scas
imul
jp
pop
out
mov
data16
in
mov
jmp
pop
jb
out
xchg
shlb
add
sti
sbb
inc
adc
push
mov
leave
loopne
insl
cmp
movsb
repz
mov
and
lods
adc
cmp
jo
mov
test
daa
and
rol
aad
inc
pop
int
test
rcr
in
inc
mov
jae
sub
ja
cmp
nop
or
nop
mov
jecxz
pop
fwait
aaa
shl
ss
pushf
jl
popa
xlat
or
jnp
pop
cmp
outsb
daa
loop
test
mov
stos
xchg
push
int3
outsl
push
lret
arpl
loopne
dec
out
mov
or
movsb
cmp
jp
fcomps
sub
push
push
out
out
scas
mov
out
loop
pop
pop
insb
les
rorl
xor
cmp
jbe
mov
mov
xor
add
jmp
vpmovmskb
fcmovnu
addl
and
in
js
cmp
push
pusha
notb
ror
or
and
lcall
aam
push
lds
dec
mov
and
into
mov
adcl
lock
add
sbb
adc
cli
add
divl
or
sti
fwait
sarb
outsl
pop
jnp
push
mov
sub
cltd
loope
mov
and
xchg
imul
xor
inc
cmp
xchg
jmp
xchg
inc
ret
add
jmp
fcmovu
and
scas
xor
incb
pop
push
sub
je
lods
and
loopne
ja
cmpsl
iret
jmp
pop
scas
jbe
or
leave
cmp
mov
gs
dec
arpl
and
or
rclb
imul
les
mov
jmp
push
roll
and
mov
imul
bnd
je
xchg
hlt
add
adc
in
and
fwait
jp
loope
shll
mov
dec
pop
or
lahf
orb
test
inc
cltd
dec
ljmp
lret
adc
ret
iret
inc
jns
insb
shll
xchg
lahf
dec
push
mov
dec
rorl
imul
inc
add
lds
test
arpl
mov
pop
cs
sarl
xor
xor
aas
dec
aas
out
pop
mov
cmc
mov
loope
popf
mov
xchg
cmc
enter
cmp
aad
jg
loope
sub
fs
push
mov
out
sbb
sarl
arpl
out
xchg
mov
lahf
push
dec
in
test
in
loop
add
scas
xlat
jle
out
push
repnz
scas
mov
cmp
inc
fcoms
mov
outsb
repnz
ja
sub
xchg
mov
sbb
inc
out
test
or
fsubl
sbb
mov
adc
jp
lock
xorl
and
sti
out
adc
data16
xor
fst
adc
xchg
movsl
add
sbb
pop
sub
mov
mov
imul
leave
mov
inc
imul
mov
jmp
lret
ret
vpand
ret
subb
sahf
cs
movq
jle
js
jno
inc
jg
mov
aam
jg
les
cmpsb
call
popf
cmp
ret
push
or
lock
mov
into
aam
xchg
push
dec
sti
xchg
sti
call
cmp
popa
shrb
xor
sbb
mov
push
add
mov
pop
push
fists
nop
xchg
test
inc
negl
or
jp
popf
mov
adc
xor
mov
xchg
push
xorl
push
sbbb
adc
into
mov
sarb
stc
in
in
jno
mov
outsb
sbb
std
inc
sub
dec
add
adc
imul
jbe
mov
or
mov
push
jae
jmp
pop
mov
pop
mov
cmp
arpl
daa
or
fidivs
jge
fucomp
or
inc
inc
push
inc
aad
jnp
dec
xchg
inc
insb
popf
push
fcoms
push
mov
ret
cmp
rorb
xor
das
fadds
arpl
cltd
push
cld
iret
sbb
pop
dec
mov
leave
sarl
lret
lds
xchg
imul
outsb
jne
jge
mov
repnz
pop
in
and
loopne
sbb
outsb
fimull
jge
jo,pt
jecxz
mov
data16
fldcw
mov
cmpsl
test
faddl
stos
mov
cwtl
cmp
mov
icebp
sbb
jmp
cmp
stc
cmp
xor
dec
push
cmp
add
repz
add
xchg
loopne
out
fldt
jmp
push
bndstx
lret
inc
xchg
aaa
or
lods
adc
pop
dec
push
insl
mov
bound
aad
mov
mov
pop
sbb
rcrb
pop
in
mov
hlt
adc
int3
popa
lcall
push
ds
lods
cmp
int
push
sub
or
add
push
lock
cmpsb
scas
dec
scas
inc
test
pop
cmc
outsb
aaa
pop
and
cmp
mov
mov
es
inc
pop
mov
ds
xchg
adc
xorl
xchg
xchg
push
lcall
push
cmc
fsts
jno
mov
popa
imulb
xor
testl
xlat
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
jmp
rcl
aad
leave
insb
xchg
movsb
sbb
js
jle
js
or
jl
mov
dec
iret
pop
cmpsl
or
out
clc
in
sar
inc
cwtl
and
mov
movsl
les
ret
mov
bswap
and
insl
stos
or
ss
std
xchg
iret
pop
mov
xchg
dec
jns
inc
mov
and
sub
cli
sbb
sub
pushf
push
sub
scas
addr16
or
lret
je
aas
jnp
icebp
sti
sub
ds
cmc
icebp
or
and
notl
or
inc
out
sub
push
add
aad
or
std
and
pop
xor
sub
icebp
pop
leave
mov
sub
lods
les
je
mov
in
sub
mov
jns
mov
filds
push
nop
fcompl
shl
sub
test
add
aam
inc
out
cmp
add
cmpsl
stc
pop
xchg
leave
sbb
jp
pusha
shlb
mov
lcall
psubsw
adc
jae
mov
aad
test
lret
ss
mov
int
sar
je
cmp
icebp
or
popa
adc
test
xchg
das
out
xchg
je
mov
enter
fs
sti
adc
or
lods
mov
repz
ret
sub
cmpsl
mov
cwtl
out
daa
mov
mov
loop
std
adc
xchg
dec
sub
popa
cmc
mov
sbb
test
loopne
and
lds
pusha
push
mov
mov
pop
movl
sub
jge
jecxz
adc
pusha
sbb
dec
jae
adc
dec
jo
lret
or
inc
mov
enter
jp
dec
call
push
jbe
out
or
ljmp
push
add
je
jo
lea
mov
xor
cli
mov
adc
jbe
and
scas
inc
loope
insl
adc
and
mov
pop
inc
jle
iret
mov
repnz
jb
xor
xchg
mov
pushf
mov
dec
xor
or
dec
pop
pushf
mov
stc
mov
lods
int3
pop
cli
dec
fwait
aad
sub
push
sbb
into
or
mov
or
sub
and
push
pop
es
fs
xchg
out
add
or
imul
cmp
jmp
int
cmp
int3
leave
aad
xchg
mov
dec
loop
push
push
adc
in
js
fmuls
popf
hlt
xlat
aas
pop
jmp
push
inc
clc
into
push
ds
xor
insl
mov
aam
aas
sub
and
mov
push
loopne
out
jns
pop
dec
mov
pop
loopne
cmp
clc
out
ret
xor
xchg
sbb
icebp
cwtl
jne
mov
add
sbb
mov
data16
sti
mov
push
push
inc
pop
mov
std
sbb
outsb
push
xor
lods
call
faddl
jne
adc
sti
mov
fsubs
pop
cmp
push
dec
js
mov
shrl
jmp
pop
push
and
pop
mov
and
push
dec
push
cmp
sub
xchg
enter
loope
fstl
imull
jmp
mov
mov
shl
cwtl
aas
gs
iret
shll
sbb
fwait
dec
lock
fsubrs
inc
xor
xchg
jl
daa
lcall
ja
xchg
out
xchg
outsl
rep
mov
dec
jo
mov
out
lods
leave
ficomps
icebp
jnp
cld
push
leave
mov
cmp
sti
or
popa
pop
cmc
mov
movsb
call
adc
stc
xor
or
push
and
and
outsb
jmp
push
xchg
and
nop
mov
push
mov
xchg
iret
xor
jge
or
pop
std
sub
jmp
test
mov
in
dec
jp
orb
xor
sub
loop
or
dec
bound
rorb
jmp
clc
pop
jnp
adc
push
cmpl
insb
repnz
and
adc
addr16
das
and
sbb
xor
jmp
inc
jg
add
rcll
ljmp
imul
dec
pop
adc
sbb
out
cmpsl
xor
push
mov
cmpl
dec
outsl
xor
sub
push
dec
sbb
popa
mov
and
test
add
inc
mov
sub
out
repz
sahf
mov
inc
ljmp
scas
faddp
es
add
jns
cmp
mov
jl
out
call
jbe
pop
pop
leave
ret
push
mov
sub
movzwl
xor
push
andl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
push
call
jmp
push
xor
add
push
push
xor
pop
or
xor
sub
mov
div
push
sbbl
call
movl
inc
movl
cmp
jb
movl
incl
movl
lea
inc
mov
andl
lea
xorl
mov
or
mov
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
mov
andl
mov
xor
xor
xor
mov
sub
add
mov
mov
mov
movzbl
cmp
mov
mov
mov
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
or
mov
xor
xorl
add
addl
imul
movl
mov
movl
jmp
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
movzbl
xor
mov
xor
add
and
mov
negl
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
not
add
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
mov
add
mov
mov
xor
xorl
add
movl
cmp
movl
jne
movl
push
subl
pushl
pushl
subl
call
mov
mov
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
call
jmp
or
mov
mov
movl
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
adc
mov
movl
and
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
and
mov
mov
andl
mov
addl
xor
xorl
xor
add
mov
xor
orl
xor
add
lea
movl
mov
movl
cmp
ja
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
call
cmpl
jb
sbb
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
mov
mov
mov
mov
movl
movl
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
push
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
into
int
rol
shl
out
stc
cmpsb
mov
jg
xchg
jle
js
addr16
out
mov
popa
fs
imul
mov
pop
push
aam
stos
adc
call
lcall
ja
push
addr16
arpl
xchg
dec
xchg
mov
loop
imul
icebp
add
or
dec
movsb
xor
sbb
dec
mov
mov
loop
ret
adc
xlat
xor
mov
aam
jle
les
in
addr16
clc
mov
imulb
int3
jnp
or
scas
xchg
imul
mov
mov
dec
sub
iret
dec
jecxz
into
mov
inc
movsb
lcall
xor
ret
pop
loop
popa
xor
stos
cltd
or
test
fsubrs
sub
cmp
mov
sti
imul
mov
dec
pop
and
xor
mov
mov
jecxz,pn
test
lahf
pop
fcmovnu
or
sti
pop
inc
popf
pop
or
movsb
jmp
cmp
and
adc
dec
shl
js
ret
mov
sbb
push
dec
jae
mov
in
cmp
ficompl
dec
adc
popa
and
fsubrs
dec
add
inc
popa
cmpsb
dec
dec
push
inc
mov
cmpsb
bound
fiadds
loop
and
or
cmpsb
gs
dec
cmp
jl
dec
icebp
cmp
testl
fldenv
cwtl
inc
dec
shl
ret
repnz
add
dec
or
adc
cmp
add
movsb
jae
adc
and
mov
sub
or
jecxz
jne
je
call
mov
pop
xor
decl
jo
xor
mov
dec
and
in
jo
inc
pop
sbb
jg
fisubl
cmp
call
lahf
dec
or
or
icebp
mov
cltd
xor
iret
fstl
push
or
outsb
les
movsl
xchg
push
and
dec
subl
mov
xor
sarb
pop
jg
bnd
push
and
cmpsl
jne
add
jle
or
mov
mov
mov
mov
fs
xchg
cld
mov
push
cs
dec
pop
or
cmp
push
mov
lea
or
fcompl
aas
push
dec
stos
dec
out
dec
push
bnd
jns
jno
call
or
fistpl
insb
or
push
movl
mov
movl
movl
mov
push
jmp
lret
xlat
fcmovnbe
lret
test
pop
xchg
sti
aad
mov
js
sar
fwait
test
pop
cmpsb
nop
pushl
xor
pop
decb
call
inc
add
pop
inc
push
lds
jmp
dec
cmovne
push
or
mov
in
dec
shl
dec
push
cmpsb
outsl
test
dec
cmp
ja
fs
and
stos
mov
lods
adcl
fscale
jg
repnz
outsb
push
test
ret
fidivs
or
insl
or
clc
inc
xor
out
mov
cltd
adc
pop
out
cmp
fcmovbe
pop
fistpll
je
std
pop
sar
or
cmp
js
mov
fisubs
inc
cmp
and
cmp
xor
jmp
test
cmp
adc
or
daa
mov
pop
sbb
mov
mov
in
push
cmpsl
aaa
jge
cmp
or
ret
add
ret
sub
push
lret
pop
daa
pushw
shll
xlat
mov
fdivl
sbb
fsubs
repz
xchg
dec
dec
into
stos
test
aaa
outsl
out
aaa
jle
aam
mov
pop
xor
test
pop
fnstcw
mov
push
in
je
frndint
in
mov
das
movsb
inc
in
mov
fists
pop
insb
cltd
imull
imul
sti
in
pop
sub
fdivr
xlat
pop
pop
jmp
mov
loopne
push
push
jbe
iret
popf
out
jg
push
rcrb
add
or
in
repz
repz
xchg
cmp
and
js
std
mov
jno
or
aas
outsl
sub
scas
xchg
icebp
lcall
lods
jp
lret
and
add
clc
shl
push
enter
std
incl
jae
or
dec
test
push
pop
mov
pop
popa
test
std
out
movsb
xorl
dec
jl
test
fisttpl
inc
sti
dec
call
cmp
lock
jo
mov
xor
shr
xor
xchg
data16
cmpsb
push
pop
repnz
out
out
mov
sub
insb
sbb
xchg
pop
insl
mov
sub
or
dec
sub
jo
sub
xchg
mov
lock
cltd
ds
or
xchg
cmovs
fldenv
out
repnz
xchg
dec
mov
fwait
das
in
out
sub
cwtl
xchg
and
cmpsl
push
jo
mov
sti
cwtl
out
sub
lods
jmp
dec
adc
mov
movl
mov
mov
push
mov
mov
mov
cmp
movl
je
mov
mov
xor
subl
add
cmp
je
jmp
into
xlat
ror
aad
rcr
stos
imul
and
sbb
xchg
jle
js
stos
jb
shll
decb
jp
cwtl
jns
out
ljmp
mov
mov
mov
mov
cmpsl
lret
repnz
fsubrs
lret
jl
jmp
jecxz
jno
sub
mov
loop
push
aas
push
xchg
lds
xchg
add
out
rcrb
sub
xor
lret
fdivl
xchg
fsubl
sbb
xor
cmovle
ds
xor
adc
fsubrs
jbe
sbb
inc
fldt
cmp
mov
or
mov
or
popf
es
and
testb
nop
test
mov
adcl
add
mov
fdivs
xchg
add
pop
or
fnstcw
or
arpl
fsqrt
sbb
jnp
mov
scas
or
sub
jmp
scas
shlb
jl
xchg
div
roll
sti
cmp
imul
std
add
adc
call
cld
mov
add
inc
sub
mov
mov
sub
fld
pusha
mov
std
std
or
inc
xchg
popl
push
data16
je
test
insl
fldt
addb
and
xorb
mov
roll
mov
out
xchg
loopne
jmp
xchg
cld
jp
or
cmp
and
outsb
xchg
arpl
dec
xchg
sub
and
jo
iret
out
mov
inc
mov
mov
cs
fildl
aaa
inc
decl
shlb
dec
mov
mov
lcall
mov
cmp
add
daa
sbb
add
mov
mov
jle
mov
mov
pop
inc
fldl
mov
sub
xor
aas
std
jae
or
pop
int
movsb
jno
and
sbb
and
dec
mov
hlt
add
pop
rolb
xchg
vcmpps
mov
test
jmp
scas
test
insl
inc
dec
lahf
mov
fldlg2
mov
adc
lcall
mov
mov
pop
es
scas
outsl
jmp
imulb
and
mov
pop
push
mov
mov
and
jecxz
xchg
loope
sbb
sub
shl
int
arpl
call
std
add
pop
stc
orw
inc
add
add
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
add
push
pushl
pushl
mov
addl
jmp
ret
leave
leave
leave
lret
add
pop
mov
jle
js
push
or
sbb
add
adc
mov
out
mov
or
loopne
xor
pop
xchg
stos
imul
sub
addr16
mov
xor
call
push
mov
jns
mov
xor
or
and
jns
loope
pop
std
in
pop
int
dec
cmp
nop
imul
jbe
imul
inc
je
sbb
stos
sub
xor
insl
adc
in
dec
clc
push
fdivs
dec
lahf
shll
xor
lcall
lods
inc
inc
and
mov
dec
imul
mov
repnz
sbb
and
mov
ss
movsl
hlt
rcrb
fimull
push
and
mov
jb
inc
in
xor
jnp
outsb
ljmp
and
mov
rcr
mov
push
mov
clc
test
aaa
mov
lcall
push
je
add
loopne
xchg
or
cmp
mov
dec
aas
pushf
insb
imul
testl
xor
xor
add
xor
mov
inc
int3
mov
xor
sti
push
das
inc
sbb
add
nopl
repz
fdiv
sub
sub
sub
cmp
pop
ret
in
int3
pop
dec
xlat
and
jge
mov
shl
mov
jnp
fisubl
adc
adc
aaa
sarb
leave
sbb
cmpsl
xor
jns
imul
add
jnp
adc
sbb
cmp
scas
inc
or
lods
shll
std
out
cmp
inc
sub
mov
repz
shr
and
inc
jo
cmp
cli
std
mov
nop
jmp
punpckhdq
in
and
insb
in
nop
mov
push
inc
mov
rcr
jecxz
subl
in
lods
aas
inc
test
dec
leave
bound
mov
cmc
xor
lods
lret
mov
xchg
push
cs
pop
ret
mov
jmp
push
scas
sbb
addr16
popf
jle
ljmp
or
xchg
loopne
int
imul
lcall
push
xchg
imul
or
in
addr16
arpl
cmp
rol
jl
gs
aaa
cmp
cmp
xchg
sbb
call
mov
mov
jmp
ret
int3
int3
aad
leave
roll
jecxz
in
sbb
js
shlb
inc
sbb
xorl
into
insl
adc
jg
and
xchg
pop
add
int
mov
mov
mov
lea
ficomps
lret
add
pop
add
fcom
sbb
cmp
mov
shll
cmp
push
cmpl
dec
push
sbb
insl
stos
mov
ror
and
push
xlat
in
hlt
pop
sbb
mov
adc
fiaddl
lods
in
in
jne
and
inc
out
mov
lods
xchg
cmp
lds
jle
pop
pop
loopne
in
cmp
sar
scas
dec
aam
popf
stc
jnp
loope
test
leave
mov
inc
push
jno
jae
pop
or
push
bound
push
fwait
or
xchg
adc
push
adc
test
or
shlb
pop
out
in
das
es
pop
insl
push
pop
mov
sub
stos
std
mov
pusha
sbb
mov
rdmsr
mov
inc
pop
movsb
hlt
shlb
cmpl
xchg
pusha
jns
jmp
push
into
fcomp
movsb
and
or
mov
dec
lock
insb
into
mov
fcomps
inc
aad
lea
inc
add
outsb
nop
cli
mov
fcmovnb
jne
and
sbb
pop
clc
negb
loopne
jmp
or
aad
jae
pop
jb
mov
push
xlat
js
sbb
cmp
scas
inc
pop
mov
in
iret
cltd
roll
cld
dec
and
push
push
inc
push
xor
imul
lds
jecxz
gs
jae
das
insb
imul
add
inc
push
sub
mov
sahf
xchg
mov
xor
rol
dec
dec
cmc
mov
enter
and
mov
dec
jmp
test
rorb
andb
xchg
adc
scas
int
push
ljmp
pop
ja
pushf
add
adc
stc
sbb
add
adc
es
ffree
mov
lea
jecxz
call
pop
mov
dec
push
push
je
adc
sub
fsubs
fbld
lahf
add
mov
sub
lahf
test
mov
adc
jb
in
into
les
push
mov
sub
inc
popa
jg
mov
addr16
sbb
mov
and
out
add
pop
xchg
lcall
add
or
add
mov
add
ds
int3
lret
xchg
aam
sbb
and
xchg
jle
js
lods
sbb
cmp
enter
xor
cmp
adc
out
and
pop
lret
sbb
or
push
push
xchg
xor
leave
push
outsl
data16
ficoml
std
mov
and
xor
into
xchg
lahf
or
jnp
mov
or
dec
notb
xchg
lcall
sbb
adc
jnp
std
lods
aas
cmp
pusha
mov
out
or
jg
mov
ficoml
push
jo
addl
and
push
jb
rcll
inc
pop
push
xor
pop
sbb
pusha
dec
divb
pop
push
ljmp
ljmp
adc
scas
in
sbb
push
mov
out
or
int
imul
pop
leave
pop
cmp
decl
in
mov
shlb
shrl
mov
pop
adc
pop
das
adc
xor
xchg
jb
iret
jmp
inc
nop
jae
jo
rorl
and
xor
rorb
pop
pop
lret
jge
inc
rorl
inc
sbb
fnclex
add
pop
sub
in
hlt
pop
push
insl
sbb
jbe
lcall
adc
daa
gs
xchg
enter
std
test
icebp
and
add
pop
pop
mov
mov
mov
sbb
inc
stos
jnp
jecxz
adc
std
in
rcr
test
mov
test
loope
dec
loope
pusha
add
arpl
mov
test
aad
enter
or
clc
aas
dec
pop
fnsave
lock
lea
imulb
sub
and
mov
aaa
outsb
cs
mov
pop
dec
inc
gs
jge
fs
or
lret
pop
pop
int3
xchg
std
mov
adc
scas
in
sti
out
arpl
pushf
cmp
sub
xchg
outsl
and
cwtl
xchg
dec
ret
jmp
scas
js
ss
lds
sub
int3
and
idivl
leave
cmp
nop
and
inc
mov
fmul
or
xlat
and
push
pop
push
push
lret
shrl
mov
test
daa
mov
mov
in
inc
jae
pop
aas
out
call
add
add
out
cwtl
pop
dec
aam
cltd
call
test
xchg
fldenv
add
mov
lahf
xchg
test
pusha
sub
mov
aad
hlt
and
cmc
inc
fiaddl
mov
jmp
rol
iret
fcmovbe
fcmovne
mov
cmp
mov
xchg
jle
js
test
mov
or
sbb
cli
xchg
pop
push
insb
es
sahf
push
dec
push
cmc
stos
inc
fidivrl
rcrb
in
imul
ret
std
jnp
sub
push
fsts
sahf
push
sub
push
stos
mov
jge
addl
mov
jmp
sarl
pop
addr16
or
inc
stc
je
loopne
fwait
pushl
loope
lret
outsb
cmpl
xchg
stos
pop
adc
movsl
jb
cld
jl
sbb
filds
pop
mov
imul
add
adc
mov
sbb
mov
je
ret
adc
scas
mov
pop
xor
push
cmp
in
jae
and
ljmp
cmpsl
fs
lret
or
int3
pop
mov
pop
inc
cmp
out
push
xchg
cmova
add
aas
test
jb
pop
sbb
add
ret
sub
lods
ret
in
shr
lret
lods
jmp
add
stos
inc
pop
mov
mov
stos
dec
cld
adc
inc
int3
push
inc
jnp
in
inc
icebp
mov
cmc
cmp
mov
xchg
dec
int
jne
pop
cmp
jno
outsb
xchg
dec
and
mov
je
aam
adc
add
dec
hlt
out
sub
xor
jg
test
push
outsb
in
imul
pop
xchg
adc
addr16
adc
fists
inc
inc
or
cmc
enter
and
and
pop
stos
dec
mov
ret
mov
fs
ret
dec
fldt
add
pop
pop
js
push
push
mov
outsl
lock
inc
fwait
push
mov
push
cmp
adc
xor
and
inc
addr16
das
fstpt
mov
jbe
sti
in
and
push
push
pop
ds
std
iret
aad
mov
push
imul
pop
jmp
mov
sahf
mov
cwtl
jge
dec
in
lea
xchg
ds
sarb
push
pusha
ljmp
jnp
mov
shlb
mov
loopne
mov
jne
sbb
mov
mov
in
adc
subb
dec
inc
pusha
mov
inc
fistpll
add
xor
aaa
pop
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
jmp
xlat
cmp
fcmovne
push
lcall
sub
js
pop
test
into
lcall
xor
shrb
lds
testb
andl
decb
mov
out
insb
addr16
xchg
outsl
sub
sbb
ljmp
fcomp
xor
mov
mov
jb
mov
adc
dec
xchg
call
inc
and
std
add
sub
push
push
pmaxsw
test
mov
jmp
lret
bnd
rorb
pop
bound
ljmp
lahf
jae
jg
lods
cmpsl
xchg
mov
sbb
sahf
xlat
push
js
push
sub
push
out
pop
fwait
in
xor
bound
test
pop
mov
add
icebp
sbb
xchg
cmp
lea
xor
sub
mov
inc
cmp
or
push
push
or
mov
add
jae
or
das
jb
push
ss
int
cs
or
dec
lods
dec
orb
adc
or
lret
mov
sbb
hlt
push
mov
adc
dec
fsubp
xor
xchg
xchg
mov
or
jae
xchg
inc
xor
mov
loope
inc
sahf
pop
daa
shrl
test
mov
add
lahf
xor
sbb
xorb
ffreep
sbb
js
daa
leave
sahf
movsb
sub
jg
inc
cmpsb
aam
jne
fwait
jecxz
fbstp
mov
mov
jno
inc
andb
mov
vandps
in
sub
xor
add
stc
in
mov
mov
shl
push
aas
dec
in
stos
lcall
mov
jmp
adc
xchg
mov
call
dec
loopne
add
mov
jb
clc
repnz
mov
jno
lahf
adc
sub
xchg
jmp
lea
andl
lock
adc
les
mov
lahf
arpl
idiv
mov
jae
cmc
imul
dec
clc
aam
lcall
xchg
mov
shll
xor
decl
adc
in
movsl
shl
into
cmp
mov
dec
stc
popa
nop
lods
int3
in
leave
mov
ljmp
int
flds
mov
jmp
ret
xlat
leave
rcr
rcr
xlat
cmp
add
xchg
jle
js
shlb
js
adc
pop
mov
popf
mulps
movsb
mov
es
inc
popf
movsb
dec
loope
aam
mov
aam
ja
mov
pusha
shlb
repz
sbb
sub
mov
mov
sub
test
sub
add
cmp
push
pop
inc
ficomps
cmpsl
ja
xchg
lahf
pop
inc
mov
jne
mov
ds
inc
xor
outsl
imul
ljmp
xor
dec
incb
jle
adc
pop
clc
and
int3
sbb
cmp
mov
mov
aaa
int3
dec
pop
out
orl
pop
push
ds
pushf
ss
cs
in
push
pop
lock
mov
dec
xchg
inc
inc
pusha
es
inc
or
rorb
adc
sub
push
stos
mov
gs
mov
sti
jmp
push
mov
and
xchg
leave
xor
jecxz
mov
sub
mov
jno
jp
mov
imul
stos
cmp
mov
xor
dec
cld
pop
gs
pop
jle
jns
das
inc
push
jno
add
and
fbstp
jmp
imul
pusha
mov
jne
insb
fwait
mov
gs
xchg
xor
shlb
mov
mov
and
sbb
jb
fs
arpl
ret
and
adc
sub
adc
insb
add
jae
popf
addb
pop
outsb
sarb
movsb
outsl
xor
cmp
fists
sbb
xchg
jno
xor
rorl
mov
inc
iret
jge
pop
je
add
mov
pop
aam
aaa
jle
lock
jne
repnz
imul
jg
push
and
popa
adc
mov
sahf
cmp
xor
ds
iret
fdivs
shlb
cli
inc
rcll
cmpsl
insb
add
test
dec
push
insb
les
and
and
mov
xor
faddl
xchg
out
mov
clc
test
pop
jbe
inc
daa
lcall
or
or
mov
sbb
mov
testb
and
mov
int3
or
int
je
jns
pushl
pushl
call
mov
xor
pop
jmp
rcl
rcl
rcl
and
rol
push
xor
loop
jg
xchg
jle
js
mov
pop
push
or
add
jmp
inc
hlt
mov
scas
dec
mov
arpl
cmp
movsb
jge
adc
out
xor
test
mov
mov
xchg
adc
fs
adc
test
int3
lret
add
das
add
jns
xor
std
subb
mov
out
lock
xorb
add
orl
adc
andl
mov
xorl
fistps
cmp
fisubrl
mov
jbe
in
ljmp
pop
jo
mov
push
shlb
xor
not
fcomps
ljmp
cli
call
mov
ret
cli
test
jne
pop
divl
xor
dec
jb
daa
cmp
andb
ret
cmc
out
fdivl
push
jne
inc
lock
and
fimull
lds
testb
lods
out
outsb
jecxz
in
lahf
out
and
inc
jmp
mov
add
mov
lahf
lahf
insl
lret
and
lret
sbb
pop
les
pop
shr
sub
xor
stos
pushf
loop
cs
adc
cmc
pop
loope
jne
aaa
sub
cmp
daa
cmpl
sbb
push
mov
jp
mov
popa
xchg
jns
sub
mov
imul
push
push
cmp
and
mov
jp
test
cld
jge
mov
mov
mov
ss
in
jle
push
push
cmp
subl
lret
aaa
mov
mov
fdivrs
dec
push
adc
mov
sub
inc
sub
mov
call
pusha
mov
arpl
xchg
mov
mov
aaa
gs
push
push
ret
fs
flds
mov
stos
and
xor
jo
xchg
popa
ljmp
jne
adc
out
in
mov
push
xor
inc
movsb
add
cmp
fisubs
dec
sbb
test
push
xchg
push
shrl
push
mov
xor
push
enter
iret
cmp
jnp
pusha
jns
sub
addr16
sub
das
aas
mov
enter
fisttps
sbb
mov
arpl
cmp
pop
leave
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
dec
movl
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
mov
mov
add
xor
cmp
jne
mov
mov
jmp
ror
xlat
cmp
jns
sub
dec
nop
popf
mov
sub
js
dec
je
sti
into
push
ja
lea
xor
repnz
int3
or
xchg
cmp
jns
aas
pop
cmpl
aaa
or
pop
notl
mov
jecxz
add
or
incl
lods
je
inc
loop
sub
cmp
or
sbb
rorl
mov
mov
push
dec
push
mov
mov
jns
rcrb
dec
rcrb
xchg
pop
mov
int
data16
xlat
negb
in
arpl
push
push
mov
cwtl
xor
je
cwtl
xchg
imul
int
pop
sbb
pop
lods
sub
inc
fistpll
cli
push
inc
fsubrl
mov
inc
fdivrl
test
sub
jg
push
pop
push
negl
sti
jo
mov
ret
repnz
inc
mov
adc
fsub
cltd
mov
das
mov
xor
mov
add
ror
jb
aam
lahf
xor
adc
inc
pop
add
cmp
push
jae
cmp
int
pop
cmpxchg
in
data16
and
mov
imul
notb
sub
out
sti
sub
ret
or
push
out
xchg
jno
and
adc
loope
addr16
and
sbb
dec
jmp
aas
dec
mov
test
cmpsl
sarb
mov
stos
aas
iret
sub
lea
cmp
ljmp
fstpl
repnz
lock
test
loope
add
mov
pop
sbb
adc
push
leave
and
nop
test
jo
sub
mov
pusha
test
xchg
out
push
adc
inc
icebp
xchg
jns
add
int3
sub
les
std
add
sub
popf
stos
gs
call
loopne
test
push
jl
add
jmp
cmp
aad
aad
popa
adc
lcall
js
jle
js
dec
jp
rorl
adc
inc
push
mov
out
out
movsl
mov
sub
into
mull
and
mov
sar
in
cmp
xor
mov
cmp
or
out
xchg
inc
imul
xchg
add
lods
dec
incb
vpsadbw
jmp
or
popf
push
cmp
mov
je
bound
iret
mov
cs
xor
push
xorl
jl
test
pop
push
popa
in
mov
inc
test
rolb
xchg
or
je
jg
ja
in
inc
int3
mov
xor
out
jp
shll
out
sti
filds
or
xor
xor
in
test
bound
pushf
loop
cmp
cs
mov
fcompl
sbb
and
shrl
nop
push
fldenv
dec
test
adc
cmpsl
add
adc
add
xchg
jle
shlb
sbb
sti
pop
stos
repz
xchg
in
lock
loop
into
aam
xor
dec
jp
jg
shl
or
mov
ret
push
pop
arpl
sbb
data16
inc
bound
sbb
mov
movsl
fcoml
sahf
push
fcom
sub
in
or
inc
fiaddl
xchg
cwtl
scas
leave
push
lcall
orl
inc
jnp
jb
inc
push
fildll
mov
inc
fistpl
in
sti
cmpsl
shrl
xor
loopne
insl
ds
sbb
mov
pusha
cld
adc
int3
js
clc
sbb
dec
mov
dec
out
lods
jge
or
mov
movsl
int3
push
inc
xor
movhps
or
pop
jmp
jb
and
xor
mulb
orb
mov
dec
inc
dec
and
jae
mov
or
mov
out
push
or
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
jmp
cmp
int3
leave
fnstenv
or
jp
xor
add
ret
dec
jmp
and
loopne
push
pop
imulb
adc
imul
cwtl
xor
or
pop
sbb
movsb
fcos
push
cmpsl
std
and
add
aam
ret
inc
xchg
mov
mov
mov
sub
cmpsb
push
adc
cwtl
jmp
push
or
cmc
aam
sti
adc
mov
sbb
sbb
out
scas
sub
or
mov
jo
adc
shrb
ljmp
xlat
rorl
movsl
sahf
ret
pop
stos
test
ret
lock
rcll
mov
psubb
fcompp
in
loope
shlb
cmp
andb
rcll
jnp
push
xor
cld
sti
or
clc
jbe
fs
not
sbb
lret
ds
bound
and
std
pop
push
enter
mov
lock
xchg
mov
pop
fisttpll
mov
ret
in
dec
leave
push
mov
jp
sbb
or
adc
jbe
idivb
sbb
outsb
mov
js
xchg
mov
loop
orb
rol
mov
sbb
add
scas
fadd
add
and
jae
xor
xor
sti
loope
adc
fsubrl
add
or
xchg
mov
mov
dec
popa
jnp
pop
icebp
xchg
mov
int3
lcall
hlt
cli
repz
popf
lods
pop
add
rcrl
sbb
mov
push
sbb
in
adc
iret
inc
xchg
repz
jp
insl
push
xchg
push
dec
xorb
push
sub
jns
jle
push
mov
pop
loope
stos
mov
lcall
das
stos
xor
shll
ficoms
imul
cli
xbegin
cmc
shlb
cwtl
jb
add
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
adc
mov
inc
mov
andl
xor
orl
add
movl
mov
not
movl
mov
movl
mov
mov
push
movl
mov
mov
cmp
movl
je
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
jmp
ret
ret
leave
lret
ljmp
mov
push
aaa
jg
jnp
js
or
xchg
cmp
aam
bound
mov
mov
subl
sarl
clc
sub
sub
and
adc
mov
inc
filds
cld
pop
sbb
loopne
mov
mov
dec
sub
sub
push
mov
pop
inc
inc
inc
add
sahf
out
push
push
push
or
adc
add
mov
jo
repnz
xchg
insl
xchg
xor
mov
inc
fcmovnu
mov
sub
or
pop
std
aaa
adc
pushf
andb
xchg
repz
shll
xor
flds
cmc
pop
and
adc
push
out
cltd
jmp
jnp
mov
lahf
lahf
das
jmp
cltd
hlt
icebp
imul
addps
add
test
sub
imul
out
in
jge
sbb
and
jp
push
cltd
rorb
push
cltd
leave
xchg
lds
sbb
jg
jg
repz
ret
sahf
scas
adc
cli
pop
addr16
cltd
sub
pop
lcall
xor
push
xor
add
in
xlat
inc
add
cmp
mov
cltd
aad
adc
nop
jae
jno
jnp
bound
mov
sbb
in
sub
mov
pop
loopne
adc
mov
icebp
sbb
cmpsl
gs
xchg
sub
ret
cs
test
xor
push
mov
jl
mov
sbb
dec
dec
pop
iret
cmp
hlt
push
inc
fiadds
cmpsb
mov
pop
xchg
ds
lahf
in
fwait
scas
xchg
cld
mov
mov
sbb
andb
and
int
jb
sub
faddp
popf
in
outsb
imul
lret
insl
js
xchg
scas
aas
enter
insb
out
fidivl
add
bound
cmp
mov
and
ffreep
test
test
cmpsb
insb
mov
add
cmp
xor
xlat
jo
push
pushf
push
inc
in
pop
imul
inc
xchg
cmpb
mov
scas
xchg
mov
enter
inc
push
jecxz
sti
jle
lret
iret
xor
nop
icebp
xor
mov
sarb
push
push
push
adc
dec
sarb
mov
and
mov
jae
sbb
imul
loop
xchg
popf
lcall
lcall
dec
dec
data16
dec
push
iret
mov
and
or
add
push
mov
fsubr
and
mov
push
mov
pop
push
dec
aam
int
insl
xchg
imul
addr16
fldenv
and
xor
cmpsb
je
repz
xchg
cmp
pop
dec
xlat
js
fwait
push
sbb
sub
pusha
xorb
and
pushf
enter
mov
pop
lcall
es
mov
push
cmp
xor
jne
xor
xor
lea
xor
jmp
sarb
xlat
xlat
loope
pop
push
cli
push
sbb
js
jle
js
sti
in
mov
adc
jne
and
pusha
jno
jp
lret
push
out
pop
lea
mov
jle
cmpsb
mov
insl
sub
popf
call
lret
sub
sbb
aaa
cmp
in
xor
movsb
mov
cmp
fsubp
xlat
clc
sbb
lea
adc
mov
imul
mov
mov
subb
add
lcall
and
or
popf
sbb
mov
out
pop
mov
xor
jne
mov
xchg
push
movsl
mov
outsb
scas
shl
or
mov
jns
loop
arpl
xor
adc
imull
pop
outsl
inc
dec
nop
stos
jb
add
inc
cmpsl
jmp
jb
push
fistpll
scas
pop
int
outsb
call
ds
jmp
fistps
shl
fwait
cmp
and
inc
mov
push
popf
iret
sbb
js
in
inc
je
shlb
xor
test
sub
mov
sub
mov
jecxz
or
fs
idivb
stc
mov
cmc
test
imul
jne
inc
es
add
mov
dec
pop
add
sub
mov
jecxz
sarb
stc
popf
sahf
xchg
shll
movsb
jb
std
je
enter
xchg
or
incl
cmp
xchg
mov
pop
test
ret
adc
push
arpl
pop
and
jecxz
xchg
or
adc
cmpl
push
or
xchg
jbe
add
lcall
dec
mov
js
and
shl
lock
xchg
cmc
inc
push
in
fldcw
subl
lret
loope
xchg
adc
mov
cmp
jmp
or
lock
push
daa
jb
push
icebp
push
push
adc
cld
lock
xchg
mov
ljmp
popf
mov
lret
cmp
jg
aad
mov
fldenv
stc
outsl
jmp
inc
loopne
mov
adc
push
cmpsl
adc
mov
pop
add
mov
jnp
adc
adcb
outsb
lds
push
insl
mov
test
loope
jg
push
or
or
pop
pop
sbb
pusha
push
mov
insl
sbb
mov
lods
inc
out
jg
loopne
pusha
push
lret
cltd
mov
mov
cmp
add
mov
leave
les
inc
pusha
call
xor
stos
pusha
push
xlat
add
addr16
push
sbb
out
mov
lahf
lcall
test
push
xor
neg
into
sub
aas
and
stc
sub
inc
stc
jmp
jmp
int3
les
aam
ror
mov
push
adc
cmp
jnp
js
add
js
sbbl
fxch
pushf
push
in
add
test
popf
out
sbb
dec
xrelease
fldenv
pop
dec
jno
lahf
cltd
ljmp
cmp
mov
lock
rcrl
inc
adc
pop
test
lea
sub
flds
mov
add
ret
das
xor
insb
dec
dec
jb
insl
and
ljmp
scas
lea
test
mov
ja
lea
cmpsl
jae
sub
adcl
shll
mov
ja
inc
dec
loope
xchg
outsl
jnp
jno
push
add
aaa
mov
sub
std
sti
add
pop
jmp
mov
lret
outsb
xchg
sar
lock
xor
sahf
mov
sub
aas
hlt
push
mov
lret
mov
insb
add
pop
pop
or
aaa
mov
pop
aam
inc
aam
pop
dec
mov
imul
pushf
dec
fstpt
imul
or
out
xor
int3
movsl
sarb
dec
push
fsubs
xlat
inc
inc
jecxz
jns
ja
pop
push
pop
fs
enter
sbb
popf
mov
jbe
add
jp
xor
push
std
cmp
push
stos
mov
or
mov
cli
mov
mov
adc
push
das
aas
mov
xchg
adc
loope
sti
daa
rclb
push
sbb
mov
push
ret
or
xchg
pop
ret
out
adc
sub
push
insl
push
lahf
jl
mov
sub
rcr
inc
sbb
or
mov
xor
cmp
and
xchg
out
test
jno
shl
sub
xor
divl
popf
outsl
scas
mov
push
dec
add
push
push
addl
fistpl
mov
or
add
mov
out
loopne
rcr
out
ret
sbb
or
or
push
dec
imul
out
femms
mov
xlat
mov
lret
loopne
js
addb
sub
outsb
and
mov
loop
mov
dec
jnp
out
xchg
cltd
out
sbb
mov
add
iret
hlt
mov
out
ja
mov
test
insb
je
mov
mov
pusha
mov
jmp
add
mov
stos
inc
xor
add
lods
jbe
jge
aaa
lea
sarb
cmp
dec
add
push
aam
add
add
push
fbstp
xchg
mov
jns
daa
and
arpl
push
and
and
sbb
xor
mov
repz
pop
mov
ret
dec
addb
subl
ja
mov
jg
or
in
push
cmp
add
mov
xor
add
mov
mov
xor
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
jmp
cmp
rcl
fcmove
test
fmulp
pop
jg,pt
jnp
js
jbe
push
add
scas
lret
mov
jb
add
jno
mov
and
cmp
fwait
jecxz
rorb
subl
pop
mov
sbb
in
and
sbb
out
bound
pusha
sbb
sbb
pop
push
pop
lcall
sbb
add
mov
lcall
or
leave
mov
aaa
mov
mov
sub
bound
aaa
or
push
and
call
mov
bound
out
jns
scas
dec
shrl
inc
push
dec
clc
call
push
jecxz
cmp
mov
sbb
leave
mov
popa
adc
outsl
stc
lock
cs
leave
sub
adc
shrb
lcall
mov
faddl
jecxz
stos
iret
dec
adc
aas
in
scas
enter
sbb
fwait
xlat
jp
pop
and
cmp
xor
dec
shl
enter
xchg
push
roll
inc
shll
pop
and
cwtl
insl
orb
rolb
push
push
inc
lea
push
loope
shrl
sub
fs
push
andb
mov
lahf
mov
ror
ror
dec
insb
lret
lea
mov
aaa
test
test
in
pop
outsb
cmp
xor
shll
mov
call
lods
movsl
div
jb
push
lock
fadd
push
daa
rol
rorl
imul
incl
inc
and
mov
xlat
faddl
jne
xchg
scas
adc
mov
test
sub
data16
out
insb
lock
inc
add
jge
jge
mov
inc
lock
js
into
insb
ljmp
addr16
repnz
inc
movsl
sub
lods
xlat
adc
shlb
sahf
push
mov
leave
jmp
das
scas
cmp
jp
cmp
push
xlat
mov
insb
insl
std
adc
mov
nop
ret
xchg
rorl
inc
push
jmp
int
sbb
hlt
adc
outsb
aas
inc
cmp
lcall
add
adc
pop
add
adc
jecxz
add
add
jg
movsb
inc
pop
adc
pop
movsl
leave
sub
mov
cs
xchg
pop
pop
repnz
pushf
adc
jl
aaa
test
lods
out
into
mov
movsb
mov
push
inc
dec
add
outsl
xchg
dec
ja
neg
test
push
xchg
call
sbb
jle
add
sahf
imul
lcall
adc
in
cltd
hlt
dec
cld
adc
ja
cmp
xor
and
mov
inc
add
add
adc
into
ret
ret
lret
xor
stos
push
pop
xchg
ror
adc
jg
jnp
js
dec
mov
loope
out
arpl
sbb
push
imull
das
pop
sarl
bound
clc
or
clc
jecxz
notl
mov
out
adc
mov
cmpsb
adc
push
or
jno
cmp
movsb
ljmp
ret
mov
push
mov
mov
mov
xchg
pop
imul
outsl
xchg
or
or
push
fstpl
jb
sbb
mov
sbb
rclb
fsub
adc
arpl
or
inc
pop
lds
and
cs
xor
cmp
fildll
dec
inc
pop
lret
dec
ljmp
inc
mov
lock
jbe
ja
xor
test
adc
out
cmc
movsl
cltd
fldt
in
lea
add
and
mov
sub
pop
enter
aas
nop
ds
lock
add
js
push
movsb
shll
dec
int
xor
xor
ja
enter
xor
arpl
in
rorl
and
pop
sbb
cmc
or
lds
jo
xchg
add
outsl
and
jns
xor
dec
mov
push
xchg
mov
cld
xor
lcall
add
jp
movsl
inc
jbe
subl
or
sbb
jno
insl
mov
pusha
pop
fmull
mov
lods
std
mov
push
imul
ljmp
mov
mov
and
scas
pop
mov
inc
test
add
int
xlat
clc
sbbl
in
test
sub
inc
es
cmp
outsb
ds
sti
push
dec
scas
dec
repnz
push
mov
pop
jne
or
mov
pop
dec
and
adc
mov
xor
std
cmp
stc
ja
das
es
or
fwait
insb
stos
xor
sbb
shrl
cmpsb
nop
loope
shlb
out
sub
icebp
lret
repnz
mov
pop
sbb
pop
xchg
aam
or
gs
jae
std
sbb
jmp
in
andb
jg
sbb
or
fists
int
and
lcall
imul
xchg
out
cltd
sahf
gs
adc
jns
sub
ljmp
mov
lahf
xor
dec
idiv
pusha
mov
in
push
cltd
adc
inc
sahf
lret
cwtl
push
mov
movsl
dec
int
xchg
cmc
push
cmovns
test
out
and
inc
or
enter
leave
mov
hlt
xchg
xchg
popa
xchg
lods
scas
hlt
jnp
push
dec
and
orl
cmc
in
xor
mov
cmpsb
pusha
das
rorb
sub
jle
inc
cmp
xchg
enter
add
inc
push
fnstenv
xor
add
add
rol
leave
shll
testb
js
jle
js
pusha
pop
sbb
pop
mov
or
fcoms
pop
fsubs
inc
stos
aam
xor
in
movsb
cmp
mov
xchg
mov
pop
mov
outsl
xchg
pop
aad
icebp
jbe
sub
xchg
dec
xchg
mov
imul
out
jns
fildl
push
into
push
inc
cmpb
push
or
data16
test
mov
stc
jnp
jmp
fs
dec
xor
mov
add
lea
xchg
hlt
scas
in
lcall
cwtl
fs
in
and
pushl
mov
mov
es
rorl
aad
lahf
adc
push
mov
test
adc
shll
push
push
in
hlt
mov
jns
gs
dec
cli
mov
addr16
xchg
jg
mov
outsb
lret
sub
mov
push
insb
push
adc
jne
jns
mov
jp
xor
mov
mov
inc
out
jge
pop
jbe
movsb
enter
xchg
mov
xchg
jo
rorb
mov
negl
cltd
xchg
cwtl
adc
scas
in
inc
push
sub
daa
add
and
xchg
in
sbb
out
pop
pushf
dec
pushf
imul
push
fistpll
jp
add
jmp
pop
aam
mov
cmp
movsb
cwtl
les
jl
sbb
orb
and
xor
inc
inc
cmc
sar
fs
or
cmp
adc
mov
test
lcall
xor
pop
sbb
std
push
in
cwtl
out
lcall
popf
test
dec
sbb
and
leave
mov
or
int
mov
or
xchg
push
je
dec
movsl
pop
xchg
xchg
test
and
inc
rcrl
aad
mov
rorl
push
xor
std
xchg
pop
mov
dec
jecxz
sti
add
xor
push
leave
iretw
xchg
mov
xor
add
push
mov
es
mov
outsb
xchg
mov
push
enter
dec
mov
lock
movsb
jmp
mov
xchg
stos
inc
dec
xor
aaa
jecxz
pop
ret
jle
cmpsl
inc
cltd
leave
hlt
hlt
pop
push
xor
mov
int3
inc
push
mov
aaa
sbbb
movsb
ss
xchg
loope
rorb
or
and
xor
shl
mov
mov
or
pop
adc
out
rorl
push
push
arpl
sub
aam
fcomp
mov
push
je
pop
jmp
dec
xchg
push
testb
sarb
sub
mov
mov
inc
inc
in
mov
out
adc
pushf
shll
inc
cmp
sub
cmp
xchg
dec
fsubrl
decl
stos
push
rcrb
repnz
add
cmpsl
into
out
lahf
jnp
outsb
cli
call
jmp
mov
leave
ret
push
mov
sub
jmp
rcl
ret
into
rcl
daa
jle
mov
lds
adc
js
shrb
push
in
jg
inc
push
pop
cmc
clc
fxam
aaa
jge
repz
rclb
repnz
imul
cltd
ret
mov
lcall
movlps
adc
fnstcw
fcmovnu
xor
paddd
cmpsl
ss
call
inc
js
add
and
mov
enter
inc
and
inc
mov
dec
mov
pop
das
fcompl
mov
mov
pop
into
and
cmc
inc
jle
xchg
cmp
pop
stc
pop
aad
and
test
dec
fs
ficomps
or
data16
pusha
out
in
rclb
sub
sbb
and
mov
sub
mov
in
pop
jne
pop
test
mov
cmp
clc
nop
pop
xchg
xor
mov
dec
cmpb
push
sub
iret
test
pop
iret
and
dec
jno
shll
imul
bound
repnz
lahf
cmp
int3
insb
jecxz
pusha
and
mov
loop
negl
inc
xchg
rcrl
inc
movsl
cmp
and
insl
push
mov
sbb
mov
dec
adc
cwtl
lcall
stc
daa
sbb
mov
fxch
fnstcw
daa
mov
push
mov
pop
std
cmp
cmp
cmpxchg
sahf
and
jle
loopne
dec
adc
and
mov
mov
mov
cmp
push
add
gs
pop
mov
inc
pusha
sahf
rcr
sub
pop
sbb
inc
xchg
fmul
data16
les
xchg
cwtl
sbb
clc
shrb
in
data16
leave
and
pcmpeqb
fists
arpl
pop
jns
out
repnz
cltd
and
sbb
sub
cmp
fcomps
arpl
sar
inc
cld
cmp
add
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
adcl
movl
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
and
push
add
mov
and
xor
movzbl
adc
mov
adcl
add
incl
mov
mov
push
movl
push
test
movl
je
jmp
lret
fld
scas
inc
adc
fimuls
js
jle
js
adc
sbb
lods
outsl
dec
imul
mov
ljmp
lret
push
adc
jle
jge
sub
and
test
inc
popf
xchg
xor
add
scas
gs
add
sub
inc
daa
pop
adc
lods
vpcomb
das
call
mov
enter
pop
push
movsb
xlat
rol
shrl
pop
lods
in
jle
inc
lcall
xchg
dec
shll
mov
dec
aaa
aas
imul
inc
pop
in
jnp
lds
sbb
dec
cmp
pop
addr16
pop
push
ret
adc
insb
mov
push
mov
push
mov
jmp
xlat
push
popa
sarl
sbb
mov
mov
mov
in
mov
mov
std
sti
adc
push
out
movsb
push
mov
and
pop
int3
gs
sub
pop
imul
mov
sbb
or
scas
pop
in
mov
in
pop
daa
cmpsl
mov
ljmp
pop
inc
and
push
or
mov
clc
cmp
or
xchg
or
scas
xor
out
lods
aad
cmp
pop
push
stos
dec
xor
push
xor
xor
ja,pn
iret
cmpw
insb
ss
jo
adc
je
jns
rol
ret
pop
je
incl
daa
lods
aam
dec
or
and
jae
inc
clc
mov
dec
fldenv
xor
in
dec
push
imul
pop
aad
inc
adc
sub
mov
inc
xchg
cmp
dec
call
std
push
xorl
xchg
or
test
js
daa
enter
cmp
fisttpl
inc
loopne
int3
jge
push
push
pop
xchg
enter
scas
subb
mov
or
or
test
loop
pushf
insb
frstor
stos
imul
dec
adc
testb
scas
shlb
cmp
mov
add
sub
mov
mov
notl
xchg
addl
jmp
iret
iret
xlat
xlat
iret
xlat
cmpsb
call
mov
adc
js
pop
adc
and
mov
pop
fistpl
inc
sub
pushf
ficomps
or
xchg
mov
mov
push
inc
psrad
ja
pop
movsb
fcompl
call
mov
or
jae
mov
mov
sahf
iret
pushf
push
ss
cmp
jp
jno
mov
outsl
incb
test
xor
mov
xlat
cmp
cs
xchg
pushf
and
ja
ret
jno
stos
outsl
lret
lea
loope
lods
ja
pop
loop
mov
adc
inc
dec
in
shrl
mov
and
mov
add
out
pop
sub
mov
in
push
daa
movsl
ss
lret
bnd
mov
add
mov
jo
sbb
push
lret
iret
push
daa
out
stos
jg
xchg
mov
lcall
inc
loop
xor
mov
sbbl
out
mov
dec
mov
in
or
lods
dec
sbb
push
inc
adc
fnstsw
test
es
cltd
inc
xor
xchg
pop
xchg
ret
cmp
into
add
pop
fmull
jae
dec
dec
stos
call
decl
lods
hlt
push
add
enter
mov
jle
sahf
add
xchg
xchg
push
mov
dec
xlat
xor
adc
loopne
inc
jne
loop
mov
xchg
iret
inc
cmp
scas
push
inc
sub
lods
push
push
sbb
sub
aad
hlt
sahf
mov
sub
jns
stos
repz
mov
push
push
bound
jg
shl
ds
jne
lds
cwtl
pop
mov
vpcmpeqb
jae
push
sarl
adc
int3
insb
int
xor
add
dec
xchg
mov
or
stc
cmp
xchg
sysenter
pop
aaa
mov
out
in
adc
xlat
adc
xor
xorl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
adc
mov
and
mov
add
mov
mov
adcl
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
adc
add
mov
mov
jmp
cmp
fcmovbe
aad
xorl
movb
iret
jg
adc
js
inc
cmp
cmc
xor
out
push
cmp
sbb
fdivr
std
cld
mov
xchg
xchg
inc
jl
shlb
push
add
jl
mov
dec
leave
jp
cli
dec
adc
das
imul
inc
jmp
jg
mov
jae
xor
insl
cmp
stos
push
and
and
lods
int
cmpsb
dec
mov
les
out
mov
add
dec
das
into
mov
fmulp
insb
or
dec
mov
es
stos
insb
add
push
sbb
lret
jb
push
sahf
jnp
insl
sbb
mov
fbld
jne
xlat
or
adcl
push
adc
jb
daa
sub
enter
aam
dec
and
bsr
cmp
test
add
les
repz
mov
mov
sub
xchg
ds
aad
popw
fs
mov
mov
push
idivb
repz
cs
or
xchg
inc
xor
lcall
repnz
sti
lahf
jmp
pop
icebp
jno
mov
and
rol
cmp
sub
fs
and
testl
dec
sub
sahf
push
mov
dec
sbb
sahf
inc
in
sbb
cmc
sub
xlat
dec
mov
push
out
ljmp
push
jae
out
sub
addb
das
add
inc
cmp
inc
out
push
test
mov
dec
mul
cmp
adcl
repz
push
movsl
outsl
jmp
in
cs
xchg
xchg
jne
in
mov
repz
subl
xlat
adc
add
ljmp
sub
aas
inc
or
jecxz
fwait
lcall
nop
aad
lret
push
jno
cld
xor
int3
dec
fdivl
mov
dec
jmp
mov
inc
loopne
test
mov
xor
sbbl
add
movl
cmp
movl
jmp
into
ror
leave
push
or
dec
or
mov
adc
js
add
shll
in
pop
cmp
scas
sub
ret
icebp
int3
jnp
and
mov
lcall
addr16
pop
dec
inc
jbe
cmc
cld
idivb
das
repnz
adc
and
fildll
push
mov
and
out
imul
or
fistpll
push
mov
lods
jecxz
xchg
push
dec
dec
mov
inc
repnz
jbe
test
cld
dec
push
sbb
pop
sbb
xchg
xor
pushf
adc
cmpsb
mov
add
inc
mov
movsb
mov
dec
jo
dec
cmp
xchg
xchg
adcl
jnp
iret
push
xor
pop
cli
jp
add
lea
out
xor
pop
into
mov
cltd
repz
xchg
arpl
call
test
enter
ljmp
imul
add
add
mov
jne
addr16
cmpsb
sbb
or
cwtl
adc
add
leave
incb
push
loop
shr
sbb
aas
decl
adc
lcall
loopne
mov
fisttps
ret
fists
push
out
loopne
dec
lahf
ljmp
cwtl
ss
repnz
xchg
xor
jl
insl
lea
aas
lock
push
orl
lds
pop
es
cmp
loope
push
push
clc
test
and
push
pushf
sbbb
sbb
call
icebp
or
test
stos
mov
int
punpckldq
loope
cmp
mov
rorb
pusha
adc
test
movsb
mov
lret
mov
cwtl
aas
iret
rorb
fs
out
adc
rol
es
and
or
adc
xor
lds
inc
clc
fldcw
mov
imul
rcr
inc
mov
js
xor
pop
and
adc
andb
mov
lahf
jne
addl
pushl
orl
call
and
mov
jmp
aas
into
leave
int
into
fwait
orb
lods
dec
or
sarl
adc
js
sub
rol
pop
jbe
jg
mov
jns
pop
sub
in
call
out
mov
dec
cmp
sbb
cmp
lcall
jns
data16
and
pop
or
sub
xor
std
mov
jecxz
ss
out
shll
lock
movsl
dec
in
xchg
jbe
xchg
sub
insl
mov
dec
negl
movsb
sbb
test
lds
neg
push
mov
sti
out
test
push
popf
add
ljmp
xor
dec
dec
and
pop
lea
dec
stc
mov
hlt
pop
or
lods
inc
push
ret
xchg
cld
inc
push
cmpsl
push
adc
imul
cmp
xor
sub
outsb
and
idivl
sub
xor
cmpl
push
in
out
divb
sub
pop
cmpsl
scas
dec
add
cmp
or
dec
jo
jp
sahf
enter
fidivrl
ljmp
sahf
leave
dec
test
sbb
das
shrl
fwait
out
sbb
jg
shrb
out
and
xchg
xchg
fcomp
loop
subl
or
add
ja
notb
dec
insl
loopne
addr16
mov
xor
call
push
cmp
sbb
movsb
mov
add
inc
push
imul
outsb
in
loop
inc
cmpsb
imul
pop
pusha
sbb
sti
leave
or
repnz
es
int
leave
jbe
add
js
int
mov
inc
pop
test
test
stos
cmpsb
push
jecxz
inc
fisttpll
jp
cmp
pop
dec
fs
cwtl
aas
sbb
addl
shld
mov
loop
sarb
mov
cmpsl
xor
sarb
test
mov
and
mov
xchg
ds
mov
out
inc
cld
mov
movl
cmpl
je
cmpl
jne
pushl
call
xor
xor
dec
mov
jmp
mov
movl
xor
add
cmp
movl
je
pushl
subl
pushl
call
jmp
les
iret
rcr
leave
push
push
in
je
sbb
js
jle
js
int3
push
jmp
nop
in
bound
outsl
mov
lret
ja
lret
cltd
sub
imul
jge
stos
dec
sub
stc
popf
xchg
int
fdivs
sbb
imul
add
sbb
xor
and
dec
fisttpl
aaa
add
xor
mov
cmp
shlb
cmp
aad
and
push
jno
sbb
push
std
cmp
sbb
pop
mov
add
movb
fstps
out
adc
cmp
lahf
nop
pusha
out
faddl
pcmpeqw
cmc
pop
dec
pop
inc
dec
mov
cmp
xor
and
nop
test
mov
and
mov
jle
lret
inc
jo
xchg
dec
in
xchg
mov
test
jp
inc
pushf
mov
mov
mov
jmp
insb
shll
repz
inc
ss
inc
mov
fst
ljmp
cmp
inc
mov
push
xchg
xchg
cmpsb
xlat
sbb
sbb
mov
jb
xchg
cmp
shlb
inc
pushf
inc
iret
push
and
pop
cltd
pusha
dec
inc
fiadds
sub
mov
sbb
or
jno
xchg
push
mov
ja
jae
xor
or
or
push
or
pop
mov
cmp
jecxz
fcompl
ss
decl
orl
in
jp
fs
aas
popf
xor
mov
jle
or
cmpsb
pop
inc
cli
cmp
sub
dec
jl
arpl
xor
in
cmc
xchg
xor
das
outsl
dec
imul
popf
fs
ds
fsubl
lcall
inc
cmp
stos
add
sbb
inc
fs
xor
and
cmc
sbb
jno
mov
pop
in
in
fs
xchg
movsl
xor
jb
mov
shll
adc
mov
jle
sbb
jecxz
pushf
xchg
mov
aam
js
mov
shll
mov
add
sbb
add
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
mov
add
lea
mov
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
jmp
lret
cmp
rcr
leave
mov
and
add
out
mov
jg
adc
js
sub
xchg
dec
aad
enter
call
dec
jo
pop
or
pop
test
and
add
les
mov
pop
pushl
in
mov
cmc
xchg
je
pop
xchg
push
xchg
inc
xchg
insb
jmp
lret
std
dec
pop
in
xor
or
jmp
and
xor
shrl
mov
inc
icebp
lods
les
fsts
cmp
mov
pxor
jge
ljmp
movsb
fcomps
dec
or
jne
and
clc
or
dec
xchg
push
in
outsb
out
jb
or
orb
sub
int3
jecxz
or
dec
mov
and
out
mov
mov
insl
loop
xor
jle
mov
les
ljmp
mov
dec
popa
movswl
popf
jge
push
pop
pop
xchg
imul
into
sub
pop
cmp
bound
movb
mov
hlt
shrb
imul
jo
out
cwtl
hlt
mov
sbb
mov
repnz
es
xchg
xchg
hlt
push
test
pushf
cmp
test
dec
mov
aad
icebp
nop
outsb
sub
xorb
cmp
pushf
hlt
sub
adc
shlb
pop
dec
inc
cmp
adc
js
and
jp
xchg
mov
cmpl
mov
mov
pusha
outsb
dec
loopne
sti
sub
pop
cmpsb
in
dec
lahf
xor
addb
or
aas
lahf
or
pop
js
dec
sti
cmc
lock
fs
push
stos
mov
imull
mov
jae
mov
int
test
aaa
cmp
or
and
cwtl
mov
out
js
and
int3
jp
call
mov
cmp
mov
cmp
ja
in
adc
dec
iret
dec
iret
in
orb
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
jmp
rcl
xlat
int3
aad
fcmovnu
ss
inc
andl
adc
adc
js
leave
xchg
bound
ret
fbld
cmp
inc
push
and
or
enter
test
push
into
call
add
mov
in
call
repnz
jg
jecxz
mov
popa
stc
inc
pop
mov
mov
and
sbb
rcrb
pop
push
push
push
clc
or
jbe
jbe
mov
mov
fstpt
cmpsb
jle
mov
and
or
arpl
int
repz
xlat
cli
sub
push
cmpsb
lds
bound
sbb
aad
loope
jae
stos
push
cltd
push
jle
xor
rorl
push
mov
xchg
sbb
jle
adc
out
sbb
icebp
dec
mov
mov
lcall
xor
lret
jl
out
push
ret
or
hlt
sub
repz
gs
xchg
jmp
iret
rclb
imul
push
aas
mov
data16
and
in
mov
cwtl
lret
xor
aas
imul
inc
xor
dec
add
adc
xlat
jns
vorpd
test
inc
add
scas
pop
pop
int
sarb
inc
sahf
jne
fsub
sbb
or
xlat
in
adc
pop
outsb
mov
pop
add
push
push
jge
sbb
inc
rcrl
pusha
cmpsb
jmp
pop
lret
aam
inc
mov
lahf
jp
mov
or
arpl
inc
jg
adcl
fs
cmp
lea
test
sbbl
jmp
add
shll
xchg
test
jns
iret
jo
js
mov
xchg
iret
or
out
adc
add
lcall
xor
test
inc
sub
les
xchg
or
xchg
xchg
js
push
addr16
addr16
sub
pop
rcrb
fdivr
pop
mov
xchg
or
rcrl
or
mov
repz
push
dec
pop
jmp
rcl
aas
leave
cmp
pushf
mov
inc
pusha
fstpt
adc
js
sbb
lods
iret
pop
add
ds
pop
xchg
loopne
jp
data16
popa
sbb
push
fisttpll
sti
mov
cmp
ljmp
xchg
ret
call
sub
push
sbb
test
add
mov
xchg
fnstcw
pusha
jne
xor
data16
scas
jmp
xor
int3
nop
mov
clc
inc
insb
lods
add
aam
ljmp
aam
adc
sbb
std
add
movb
stc
test
mov
test
adc
jg
lods
dec
or
aas
adcb
pop
out
jmp
pop
test
push
mov
addl
ret
and
mov
lahf
jb
dec
mov
and
and
pushf
inc
icebp
mov
mov
mov
ds
stos
and
inc
inc
cs
mov
jae
daa
mov
das
xchg
jnp
mov
cld
jnp
pop
jecxz
iret
loop
xchg
pop
cmpsl
loopne
push
out
inc
inc
addl
inc
xchg
hlt
sahf
mov
jne
jae
push
das
or
mov
imul
flds
stc
cmpsb
jmp
es
icebp
adc
cwtl
ret
xor
dec
push
lret
movb
mov
cs
clc
in
popf
cmp
mov
mov
fs
cmp
push
or
cld
mov
xchg
mov
cmp
push
jb
repnz
xor
mov
movsl
out
sti
aam
testl
fwait
jne
mov
repnz
xchg
xchg
in
gs
mov
and
sbb
mov
push
mov
rcll
vpaddd
repnz
push
push
hlt
adc
lods
clc
push
cwtl
push
std
testb
popa
mov
dec
mov
sahf
dec
adc
pop
mov
hlt
mov
push
sub
jo
push
mov
inc
test
push
test
inc
xchg
sub
jmp
ret
aas
fxch
rcr
mov
gs
int3
js
jg
adc
js
and
mov
or
pop
sbb
push
adc
fmull
pop
xor
adc
addl
rcrb
cmp
add
cmc
jle
loop
fisubl
nop
mov
pop
dec
add
mov
jmp
pop
shrl
aaa
inc
das
sbb
or
push
dec
int
imul
aam
inc
inc
sbb
insl
lods
add
inc
pop
mov
cmp
push
addr16
sbbl
push
ret
movsb
sbb
frstor
cmpsb
adc
mov
sub
repz
cmp
jno
sub
adc
mov
movsl
shlb
mov
std
dec
cmp
loope
std
call
in
xor
pop
dec
out
sbb
or
addb
cmp
xor
in
fdivl
pop
test
xchg
xchg
pop
pop
ss
cmpsb
mov
pop
stos
xchg
adc
ljmp
fnsave
cmp
xchg
sbb
sub
fcompl
push
inc
int
push
jp
lods
cwtl
push
adc
arpl
setae
xchg
stos
mov
fs
jnp
pop
dec
push
push
aad
iret
pop
xor
int
dec
ljmp
stos
add
sub
mull
cmp
lret
xchg
mov
ljmp
lahf
dec
add
xor
inc
sub
stos
loope
push
sbb
cmp
stos
dec
pop
ss
xchg
test
sbb
roll
adc
mov
test
xchg
jb
sub
cli
testb
loop
push
call
dec
or
sub
cs
mov
sub
rorb
scas
imul
and
adcb
nop
cli
hlt
pop
filds
enter
mov
sub
mov
cmp
sbb
clc
sbb
cltd
cld
sbb
sbb
scas
xchg
jmp
int
int
fnstcw
lahf
mov
js
jle
js
add
les
pushf
mov
ret
adc
jbe
mov
out
push
repnz
sbb
and
shrb
adc
call
mov
sub
mov
xchg
xor
push
mov
xor
jbe
add
dec
lock
ret
out
adc
scas
call
mov
sbb
sbb
sbb
adc
out
aam
sbb
in
jae
scas
xchg
xor
clc
add
inc
jge
mov
or
adc
ds
ss
test
outsb
push
ret
fs
push
rcll
je
insb
mov
fdivrl
repnz
dec
jp
mov
sub
fimuls
gs
movsl
xorl
dec
xchg
bound
adc
cmc
sbb
addr16
sti
push
outsl
dec
ja
imul
pop
jmp
movsb
ror
out
mov
bnd
mov
iret
sahf
adc
push
sbb
call
sbbb
jno
aad
xor
dec
or
int3
aad
cld
mov
or
mov
jg
insl
sbb
rol
mov
push
test
mov
lods
iretw
cli
mov
xor
hlt
dec
popa
pop
mov
jne
jmp
pop
les
and
inc
ret
test
sub
jge
pop
xchg
lods
push
out
iret
pop
test
mov
ljmp
xchg
jns
jbe
xchg
mov
cmp
jg
xlat
ds
outsl
in
pop
incb
mov
pop
xchg
mov
xchg
xchg
mov
lret
movsb
push
or
cli
int
mov
xchg
test
xacquire
jecxz
sbb
stos
mov
push
rcr
cltd
cmp
or
test
pop
shl
sbb
or
and
mull
cld
sbb
mov
addr16
mov
dec
mov
jmp
iret
enter
fcmovnu
xlat
push
rcrb
outsb
sub
jg
adc
js
mov
in
mov
sbb
cs
mov
fwait
xor
nop
dec
or
pop
mov
xlat
in
xchg
sub
outsb
pop
add
xor
mov
dec
sbb
sbb
in
cmpsl
repz
xchg
mov
div
and
in
pop
add
dec
in
jle
pop
fwait
and
jns
mov
out
notb
aaa
jle
inc
sub
and
gs
sbb
pop
in
xchg
in
or
push
test
inc
mov
mov
insl
cmp
pushf
ror
inc
lcall
push
jle
in
push
jo
mov
dec
call
and
mov
scas
mov
std
pushl
outsl
loopne
or
adc
clc
add
mov
inc
and
arpl
push
xchg
ds
pop
mov
pop
repnz
negb
or
mov
jl
out
stc
or
mov
test
shlb
push
je
push
lock
out
data16
mov
rolb
inc
dec
rclb
mov
mov
jecxz
add
cmp
hlt
aad
insb
add
mov
imul
jecxz
inc
std
into
stos
loope
ss
jo
add
fs
sub
sbb
cli
test
pop
outsl
shr
test
mov
aam
mov
in
jmp
cmc
out
fstpt
dec
mov
jle
roll
clc
push
push
enter
pop
or
cli
push
and
xor
xchg
mov
push
xchg
sub
cwtl
cwtl
aad
sub
push
and
repnz
clc
push
xorb
imul
sub
push
shl
xchg
inc
mov
dec
and
inc
inc
add
bound
insl
shlb
aad
inc
dec
addl
jg
lock
ja
imul
pop
add
test
inc
scas
push
xor
scas
shrl
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
jmp
int3
lret
fxch
leave
mov
push
hlt
sti
leave
stos
shl
js
jle
js
sti
loopne
lea
jg
xor
add
jle
adc
test
adc
dec
adc
cmc
push
scas
and
xor
sub
scas
out
mov
cmpsl
loop
jnp
xor
mov
or
jmp
mov
mov
shl
inc
push
lods
aam
adc
pop
or
mov
bound
mov
mov
mov
adc
mov
jnp
aaa
jae
cmc
push
pop
push
dec
call
inc
add
adc
imul
dec
daa
adc
js
mov
jo
xchg
sub
test
jns
dec
sti
das
arpl
aas
lret
shufps
std
ljmp
cmpsb
fdivrs
push
mov
aad
shll
scas
push
and
or
fisubs
adc
je
cld
xchg
adc
divb
incl
inc
or
mov
rcr
add
cli
jne
icebp
cmp
popf
push
mov
dec
popf
outsl
push
and
inc
lock
mov
jle
mov
clc
imul
jl
xchg
cmp
sar
xchg
dec
sbb
adc
jb
push
fwait
jo
inc
lock
leave
mov
pop
int
mov
subl
sti
mov
test
jmp
push
sbb
push
push
gs
imul
dec
pop
sbb
mov
fs
xor
mov
inc
cmpsb
pop
jge
push
imul
mov
cld
pop
dec
mov
dec
sahf
xchg
dec
mov
push
xchg
in
sbb
or
adc
pop
cltd
jnp
sub
mov
addr16
cmp
pushf
cmp
dec
xor
scas
repz
mov
sub
xchg
jne
dec
and
cmpsl
mov
sbb
cwtl
cmpsb
jl
scas
pop
test
jno
push
mov
lret
clc
or
add
jmp
int
int
rcl
int
cmp
pop
xchg
fsub
jg
adc
js
out
push
outsl
cmp
mov
cltd
adc
into
sub
cltd
mov
pop
lds
aaa
clc
out
pop
mov
dec
xchg
push
roll
rol
ffree
dec
loopne
gs
xchg
bound
xchg
inc
or
xor
pop
add
sbb
subl
push
sarl
push
add
mov
lea
aam
mov
inc
lret
sbb
in
xchg
imull
sbb
xchg
sbb
fcomps
repz
mov
leave
dec
shrl
push
mov
stos
jg
fnstsw
and
das
jb
xor
push
rcll
pusha
adc
inc
adc
adc
sub
subb
mov
and
xchg
pop
int3
sub
and
add
ret
pop
js
mov
jae
mull
xchg
rolb
and
clc
sahf
add
popf
adc
dec
sub
xchg
pop
movsb
jbe
xchg
xor
loope
fimull
mov
dec
ja
idivl
fmul
fxch
gs
data16
cld
cmp
cmp
cwtl
inc
xlat
and
or
dec
jecxz
movsb
int3
std
or
inc
xchg
push
outsb
adc
pop
xorl
arpl
mov
adc
mov
sub
pop
stc
lret
inc
mov
add
push
cmpl
mov
inc
or
xchg
jne
cmpsb
add
sbb
pop
jmp
lcall
fwait
adc
es
mov
fimuls
dec
jno
aas
xchg
loope
push
jno
int3
cmp
xor
dec
xlat
xor
cmp
popf
out
jmp
fmul
lock
xor
mov
les
imul
movsl
cmp
xchg
test
mov
es
and
mov
in
rcll
or
cmp
xlat
adc
sub
jno
adc
push
cld
jmp
lret
xlat
vpsubusw
lret
xor
aad
lock
js
jle
js
pop
cmpsl
mov
xchg
stc
adc
push
mov
loopne
daa
outsb
xor
shrl
pop
xor
loopne
xchg
js
push
inc
xchg
pop
outsb
cmc
orb
das
stc
iret
gs
test
xchg
jns
fcoml
mov
das
mov
mov
popa
aad
loop
daa
jl
leave
mov
adc
es
mov
lret
or
js
jle
and
mov
inc
sub
je
push
and
jno
add
loop
fmul
and
pop
xchg
mov
sub
mov
inc
xchg
aam
inc
pop
aaa
xchg
scas
lret
lcall
jae
xchg
test
movsb
jo
or
add
inc
in
inc
mov
aas
add
ds
mov
mov
hlt
mov
fildll
push
aas
mov
adc
out
nop
jo
fstps
sub
xor
out
mov
fwait
push
add
clc
fisubs
add
dec
mov
ret
mov
out
add
jge
jmp
fnsave
pop
bound
lea
jb
fcomps
inc
ss
mov
or
xchg
fsubl
xor
out
popa
andb
ret
test
push
ljmp
rclb
inc
jb
stc
data16
cmpsb
pop
test
data16
popf
incl
cmc
outsb
das
mov
inc
xor
lds
push
insb
add
push
xor
xor
xchg
std
mov
popa
or
sub
insl
sbb
in
inc
leave
fsubl
call
mov
xor
cs
pop
inc
fdivrl
push
data16
push
leave
mov
fidivrl
inc
fisubl
xor
xor
jmp
test
mov
lock
mov
jbe
cmp
leave
push
mov
imul
jnp
ljmp
add
enter
iret
rcl
mov
mov
mov
jg
adc
js
in
pop
lock
dec
add
jl
pop
popl
jl
loopne
mov
jle
pushl
xor
push
cmp
xchg
pop
cmc
mov
hlt
jmp
pop
sbb
adc
and
sbb
repnz
out
lock
subl
lds
je
dec
jb
andl
sbb
or
or
lret
pop
nop
insb
movsl
bt
xchg
cmp
xchg
nop
popf
mov
xor
push
in
adc
sbb
add
lds
xlat
int3
mov
xchg
loopne
push
lds
jbe
xor
jmp
and
inc
cmpsb
xchg
icebp
push
push
int3
inc
pop
loop
testl
xor
push
shlb
into
aad
es
sbb
pushf
adc
lods
lods
cwtl
jb
fiadds
cmp
in
jg
movl
mov
lea
sub
hlt
popa
cmc
ss
fimull
jno
pop
out
mov
test
or
mov
negb
mov
push
aas
shl
sub
mov
push
xchg
or
sub
push
cmp
mov
outsl
cmc
push
test
push
jbe
mov
outsb
jns
sbb
mov
push
seta
imul
rcrl
mov
into
add
sbb
test
inc
shlb
shr
cmp
sub
cli
ficompl
dec
std
sub
sahf
sti
bound
lret
xchg
xor
xor
mov
xor
dec
test
pop
nop
jge
mov
add
or
les
js
cwtl
mov
sbb
pushf
scas
aad
ret
repz
cmpsl
mov
cmp
cmp
dec
pop
repnz
je
out
icebp
sahf
mov
sbb
adc
mov
mov
loope
dec
andb
adc
out
jg
mov
jmp
into
leave
leave
rcr
fldcw
stc
push
fwait
and
mov
jle
js
lret
ss
xor
rorb
pop
push
lea
cmc
cmpsl
jns
aam
lods
cltd
pop
adc
and
jo
test
dec
pop
jb
add
dec
arpl
and
out
and
jg
push
popa
flds
dec
jno
sub
cmp
jno
adc
and
fcmovb
or
addr16
cmp
mov
and
out
aad
dec
out
stc
jbe
jmp
mov
cwtl
jns
cmp
sarb
pop
int
ds
xchg
xchg
and
scas
lret
jae
mov
mov
sbb
pop
sub
sub
nop
adc
cmp
hlt
in
mov
pop
mov
insl
fstps
inc
push
ret
lock
leave
push
or
xchg
lcall
cmp
data16
testb
add
hlt
and
iret
shr
mov
sti
fsubs
mov
cmp
dec
ret
pop
mov
sbb
sub
or
clc
push
inc
add
xchg
insb
mov
cmp
jecxz
pop
mov
jecxz
gs
mov
lret
xor
out
mov
lock
pushf
fs
push
lds
cmp
push
iret
icebp
sbb
xchg
jnp
mov
or
pop
mov
adc
mov
int3
outsl
xor
push
les
lret
mov
cwtl
ljmp
cwtl
cld
mov
aaa
xchg
jae
pop
adc
xchg
repnz
dec
mov
adc
rdmsr
cmpsb
sub
adc
shl
out
in
cmp
call
in
or
fmull
pop
ud1
sarl
jge
pushl
in
fistps
mov
jae
mov
arpl
mov
sbb
dec
int
push
or
or
sub
add
sub
ss
adc
or
sub
ss
lea
cmp
jne
mov
jmp
mov
mov
jmp
mov
xlat
movsb
inc
int
fwait
sbb
call
js
xor
adc
in
jmp
or
push
sub
outsb
addl
js
xchg
dec
cmp
test
fs
in
mov
jns
in
push
insb
pushl
push
mov
mov
adc
mov
mov
imul
cmc
stc
call
cmp
mov
jl
leave
outsb
leave
or
clc
mov
adc
mov
jbe
push
iret
mov
sub
out
fistpl
add
mov
jne
test
enter
clc
das
mov
inc
xor
adc
and
mov
mov
lret
cmc
fisubrl
xor
popf
int
movb
xor
jmp
xor
icebp
and
aad
pop
inc
push
sbb
out
xor
les
pop
andl
mov
or
cmp
sbb
gs
push
mov
in
adc
addps
inc
rorb
popf
adc
loope
loopne
fsubrs
gs
mov
ljmp
fsub
adc
insl
data16
adc
xor
ret
aaa
fidivl
scas
xor
test
mov
leave
fiaddl
pushf
inc
in
cmpsl
sbb
push
aaa
fbld
jmp
ret
movsb
push
inc
add
cmp
xchg
aad
inc
dec
lods
leave
inc
dec
mov
test
mov
popa
cmp
xor
xor
or
imul
int
or
outsb
adc
jo
mov
cmp
xorb
push
mov
adc
mov
mov
iret
pop
fs
xor
aad
insb
jmp
dec
jmp
out
sahf
and
jne
ret
hlt
lods
pop
dec
lods
sbb
mov
nop
jle
inc
push
mov
xor
stc
or
faddl
push
inc
adc
pusha
cmp
shrb
xor
into
push
push
icebp
jbe
outsl
adc
ljmp
jnp
jne
adc
xor
add
jmp
cmp
rol
jb
dec
pop
xlat
das
jmp
js
jle
js
fists
imul
lods
jb
insb
adc
fdivrs
lahf
data16
cmpsl
push
xchg
test
imul
jl
dec
pop
mov
jb
addr16
lds
jge
repnz
inc
sbb
in
xor
inc
in
xor
adc
xchg
sub
outsl
and
inc
out
xchg
cltd
mov
push
push
adc
ret
jae
lods
cmp
add
xlat
adc
or
fstpt
dec
jns
mov
push
rorb
xor
lret
or
push
jg
mov
cmp
loope
xlat
and
mov
mov
out
jcxz
cmp
pushf
inc
repnz
xor
imul
daa
mov
pop
xchg
mov
inc
stos
dec
mov
push
or
inc
xchg
cs
sbb
adc
jbe
adc
mov
xchg
mov
iret
out
das
add
adc
sub
rcrl
int
fcmovnu
mov
fcmovnbe
pop
ret
pop
fnstsw
shlb
mov
pop
cli
ds
in
mov
sub
jmp
cs
add
pusha
or
jo
imul
insb
push
inc
sbb
in
aas
pop
mov
or
sahf
xor
mov
cmpsl
or
jp
cmp
sub
je
setns
ret
popa
rcll
xchg
fisttpl
sti
fs
ss
out
cmp
mov
or
push
and
inc
aas
shl
dec
scas
test
lret
int3
dec
or
into
xor
xor
scas
frstor
sbb
test
inc
aam
movsb
inc
push
das
pop
clc
dec
pop
cmc
sbb
in
and
sub
jmp
fldcw
mov
xor
add
repnz
push
mov
jmp
rol
enter
lret
pop
jp
pop
cmovbe
jg
adc
js
jae
imul
fsubs
rorb
insl
sub
out
add
mov
lcall
mov
arpl
and
fwait
pop
inc
xor
or
call
mov
xor
mov
mov
mov
or
loop
jno
es
mov
jge
enter
in
negl
cmp
xchg
and
js
mov
cmpsl
and
pop
xor
je
mull
pop
push
jbe
pop
and
in
mov
rdpmc
data16
jecxz
pop
ljmp
jnp
and
xchg
adc
lahf
jecxz
out
sub
mov
ds
pop
fiadds
lods
ss
xchg
push
inc
loopne
sti
mov
fistpll
in
or
inc
mov
pop
jmp
or
xor
fmul
pop
scas
mov
adc
outsb
lcall
stos
ljmp
mov
arpl
xchg
loop
hlt
pop
inc
stos
aas
sub
in
in
add
mov
incb
lods
sbb
lds
jl
js
sahf
xchg
in
jp
pop
ljmp
pop
loope
or
cmp
test
mov
mov
insl
adc
stc
add
sbb
mov
in
sbb
xor
and
push
clc
inc
inc
adc
mov
std
loope
xor
sub
or
xor
nop
js
popa
adc
mov
jb
pop
pop
push
xchg
jno
jecxz
push
mov
stos
orb
fistpl
es
lcall
repnz
or
dec
sbb
fadds
fs
push
jmp
cmpsb
pop
roll
jle
jae
push
mov
loopne
scas
or
add
fsubl
mov
movsl
cwtl
aaa
int3
cs
jne
push
das
mov
stos
repz
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
jmp
mov
iret
leave
rcr
aad
mov
outsl
jl
icebp
jg
adc
js
outsl
sub
js
dec
sbb
fdivl
mov
ret
shlb
mov
cmpsb
mov
pop
cltd
cltd
data16
and
icebp
push
fsubr
imul
in
test
lock
cmp
xor
loop
and
mov
out
cmp
sub
pcmpeqw
cltd
lret
sub
jge
mov
imul
les
xchg
push
xchg
push
cmc
jl
int3
incb
lret
fadds
cli
iret
in
xchg
popa
mov
mov
shl
xlat
mov
xchg
je
daa
push
aaa
mov
adc
sbb
inc
sub
repz
mov
mov
iret
addr16
test
and
push
ror
jecxz
ss
xor
sbb
mov
fnstsw
out
call
push
in
loope
or
xor
cmp
mov
xchg
push
repnz
xor
ljmp
jp
les
cmp
fisttpl
loop
xor
or
jnp
addr16
xor
inc
mov
adc
xor
cwtl
xor
add
pop
hlt
shll
pop
sbb
xchg
je
push
fwait
pop
pop
mov
xor
mov
and
dec
rcll
inc
cs
sbb
lds
in
add
js
in
sbb
jno
mov
dec
jle
and
les
call
sahf
xchg
lods
and
xor
ljmp
hlt
cs
or
pop
in
xchg
mov
mov
outsl
dec
stc
jg
adc
push
and
pop
jbe
adc
idivl
xchg
and
dec
pop
cmp
idivb
mov
jmp
push
outsb
js
ja
mov
lret
fstps
lods
xchg
scas
sbb
jo
pop
xchg
or
push
shll
push
add
test
aas
mov
cmpsl
pop
arpl
xchg
adc
popf
mov
pop
mov
dec
inc
add
dec
xor
add
pop
mov
pop
jmp
rcl
ret
ror
aad
andb
ficoml
sbb
sbb
jg
adc
js
fbstp
xor
jecxz
loope
push
push
imul
mov
outsl
hlt
push
orl
pop
rorl
je
mov
enter
jbe
dec
ja
int
inc
pop
pop
pusha
shrl
adc
inc
push
add
lods
push
pop
mov
sub
sarl
lret
mov
stc
jae
xor
cli
xchg
pop
jo
sarb
dec
scas
sub
dec
mov
xchg
xor
lcall
jl
les
push
mov
dec
in
jns
cmc
pop
cmpsb
outsl
aam
arpl
jecxz
cli
mov
cmp
mov
jmp
out
das
dec
dec
movsb
mov
iret
cmc
mov
das
and
add
pop
push
or
jp
mov
lock
adc
int
ror
int3
ds
xchg
in
js
cmp
decl
out
jo
out
std
dec
js
inc
outsl
in
decb
mov
ja
cmp
sub
insb
lahf
insl
mov
mov
sbb
pop
sbb
and
pop
xlat
add
cmp
push
in
sbb
cmp
loopne
gs
sub
neg
jae
jecxz
popa
xor
into
xchg
loop
aam
pusha
adc
cmp
adc
ror
pop
xor
adc
mov
out
inc
lods
cmp
js
adc
jo
cmp
mov
xchg
rcl
adc
movsl
jmp
cmpsb
loop
push
test
sbb
call
stc
adc
test
aas
sti
test
test
fmull
dec
add
sub
insb
pop
jmp
push
rclb
rcrl
mov
stc
push
cmc
stc
push
jmp
xor
frstor
sbb
in
and
in
push
sbb
add
push
fistpl
into
loope
adc
loopne
out
dec
pop
lcall
jmp
into
iret
into
ror
aad
aad
mov
dec
xorl
jle
js
xchg
jge
cmp
dec
std
popa
xchg
xchg
adc
stc
leave
xlat
push
idiv
push
fxch
xor
pop
fstps
pop
ds
push
dec
fidivrl
push
or
jp
dec
cltd
sub
leave
sub
test
inc
sub
dec
gs
pop
push
addb
mov
pop
xchg
lret
pop
jmp
jns
scas
dec
inc
mov
push
cmc
adc
movsl
xchg
movsl
test
sub
push
lock
sbb
mov
pop
cltd
or
jb
xorb
mov
arpl
xor
xchg
lds
out
das
push
mov
mov
pusha
fcoml
int
cs
lret
jno
fcoms
mov
fisubrl
inc
rolb
in
adc
adc
cmpsl
cmp
lock
dec
lcall
and
dec
shl
push
xor
sbb
push
jle
inc
dec
xor
call
imul
jne
je
lret
cld
pusha
and
out
or
inc
cs
xchg
popa
mov
or
data16
sbb
or
stc
or
adc
leave
inc
lods
leave
adc
in
adc
mov
cmp
cmp
push
cmp
jae
shl
mov
push
jg
cld
or
or
jmp
fs
loope
push
je
xor
test
jl
pop
sarl
aam
subl
bound
movsb
add
jecxz
or
rolb
sub
and
ss
popf
inc
stos
sbb
add
sti
lcall
xor
gs
mov
shll
mov
cmp
xchg
call
enter
clc
cmpb
scas
ljmp
xor
and
test
mov
mov
jecxz
clc
aam
jecxz
adc
mov
push
das
int3
lods
sbb
xor
aas
dec
dec
outsl
jge
and
pop
leave
ret
sbb
add
flds
add
flds
add
flds
add
add
dec
flds
add
add
flds
add
add
add
sbb
add
flds
add
flds
add
add
rcr
add
loopne
add
ljmp
add
add
push
fiaddl
add
fiaddl
add
add
fiaddl
add
fiaddl
add
add
dec
fiaddl
add
add
fiaddl
add
add
js
add
xchg
add
mov
add
lcall
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
add
add
fildl
add
fildl
add
add
push
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
faddl
add
add
sub
add
cmp
add
dec
faddl
add
add
data16
add
add
mov
add
pushf
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
fldl
add
fldl
add
add
dec
fldl
add
add
pusha
fldl
add
add
test
add
mov
add
sahf
fldl
add
add
fcmovu
add
out
fldl
add
fldl
add
fiadds
add
fiadds
add
fiadds
add
add
pop
fiadds
add
add
fiadds
add
add
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
filds
add
filds
add
filds
add
filds
add
add
filds
add
add
mov
add
cwtl
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
loopne
add
add
sub
add
loopne,pt
add
add
data16
add
add
xchg
add
xchg
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loope
add
loope
add
loope
add
add
push
loope
add
add
jb
add
test
add
mov
loope
add
loope
add
loope
add
add
add
loope
add
add
adc
add
and
add
xor
add
loop,pt
add
add
pusha
loop
add
add
xchg
add
cwtl
loop
add
add
int3
loop
add
loop
add
loop
add
loop
add
jecxz
add
jecxz
add
add
xor
add
inc
jecxz
add
add
fs
add
add
mov
add
mov
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
in
add
in
add
in
add
add
dec
in
add
add
push
add
jl
add
mov
add
cwtl
in
add
in
add
in
add
in
add
in
add
in
add
add
ds
add
add
pop
in
add
add
jle
add
nop
in
add
add
mov
in
add
in
add
in
add
in
add
out
add
out
add
out
add
add
add
push
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
pop
out
add
add
jbe
add
xchg
add
cwtl
out
add
out
add
out
add
out
add
out
add
call
add
and
add
xor
add
dec
call
add
callw
jp
add
xchg
add
xchg
call
add
mov
add
call
add
in
add
lock
add
or
add
sbb
add
add
add
or
add
add
add
das
and
add
add
pop
add
add
add
das
and
pop
aam
add
add
add
add
add
add
add
add
push
aam
add
add
xchg
inc
add
imul
add
add
xor
jp
jp
outsb
je
je
jo
aas
dec
imul
gs
jb
imul
inc
inc
dec
push
inc
dec
push
inc
inc
cmp
add
add
aad
add
fildl
add
rolb
add
aad
add
rolb
add
add
add
add
add
loope
add
xlat
add
ss
add
adc
add
inc
jmp
add
sbb
add
flds
add
flds
add
flds
add
add
dec
flds
add
add
flds
add
add
add
sbb
add
flds
add
flds
add
add
rcr
add
loopne
add
ljmp
add
add
push
fiaddl
add
fiaddl
add
add
fiaddl
add
fiaddl
add
add
dec
fiaddl
add
add
fiaddl
add
add
js
add
xchg
add
mov
add
lcall
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
add
add
fildl
add
fildl
add
add
push
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
faddl
add
add
sub
add
cmp
add
dec
faddl
add
add
data16
add
add
mov
add
pushf
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
fldl
add
fldl
add
add
dec
fldl
add
add
pusha
fldl
add
add
test
add
mov
add
sahf
fldl
add
add
fcmovu
add
out
fldl
add
fldl
add
fiadds
add
fiadds
add
fiadds
add
add
pop
fiadds
add
add
fiadds
add
add
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
filds
add
filds
add
filds
add
filds
add
add
filds
add
add
mov
add
cwtl
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
loopne
add
add
sub
add
loopne,pt
add
add
data16
add
add
xchg
add
xchg
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loope
add
loope
add
loope
add
add
push
loope
add
add
jb
add
test
add
mov
loope
add
loope
add
loope
add
add
add
loope
add
add
adc
add
and
add
xor
add
loop,pt
add
add
pusha
loop
add
add
xchg
add
cwtl
loop
add
add
int3
loop
add
loop
add
loop
add
loop
add
jecxz
add
jecxz
add
add
xor
add
inc
jecxz
add
add
fs
add
add
mov
add
mov
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
in
add
in
add
in
add
add
dec
in
add
add
push
add
jl
add
mov
add
cwtl
in
add
in
add
in
add
in
add
in
add
in
add
add
ds
add
add
pop
in
add
add
jle
add
nop
in
add
add
mov
in
add
in
add
in
add
in
add
out
add
out
add
out
add
add
add
push
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
pop
out
add
add
jbe
add
xchg
add
cwtl
out
add
out
add
out
add
out
add
out
add
call
add
and
add
xor
add
dec
call
add
callw
jp
add
xchg
add
xchg
call
add
mov
add
call
add
in
add
lock
add
or
add
sbb
add
add
add
or
add
cmc
add
outsl
outsb
je
outsl
insb
data16
add
add
jns
je
insl
add
fwait
add
jo
imul
je
insb
add
ljmp
jo
add
je
ja
jae
add
add
jb
outsl
insb
insb
add
add
imul
add
outsl
ja
outsl
ja
jb
add
add
imul
data16
add
gs
popa
jo
pop
je
jo
add
mov
pop
pop
insw
outsl
fs
xchg
add
popa
insb
outsb
jne
add
add
jb
outsl
imul
sbb
ja
jae
popa
je
add
outsl
ja
add
fwait
add
jo
pop
arpl
insl
outsl
fs
loope
jae
arpl
data16
fildl
pop
popa
insl
jae
pop
gs
je
add
imul
add
je
push
add
popa
insb
je
insl
add
data16
add
or
gs
add
sub
arpl
arpl
add
add
outsb
add
sahf
add
jae
bound
gs
add
add
ja
arpl
data16
js
imul
ja
jae
arpl
add
jo
gs
push
add
arpl
inc
imul
pop
gs
je
sbb
jae
jo
imul
pop
arpl
imul
gs
jb
push
je
arpl
add
mov
pop
pop
jae
je
jae
jb
popa
je
gs
add
jb
pop
pop
addr16
popa
imul
pop
add
gs
jb
jb
add
and
arpl
jo
add
std
add
jb
outsl
jne
add
add
jb
outsl
jb
add
push
inc
push
push
cs
insb
add
inc
add
gs
outsb
push
gs
js
gs
imul
gs
ljmp
insb
gs
je
jb
bound
gs
js
add
pop
add
outsb
fs
imul
outsb
addr16
outsl
je
imul
outsl
outsb
push
add
mov
insb
dec
popa
insl
gs
imul
add
push
popa
insb
imul
add
inc
imul
inc
push
dec
outsl
je
imul
outsl
outsb
add
cmp
gs
push
inc
js
arpl
imul
add
add
je
jb
outsl
jb
je
inc
insb
popa
jae
add
add
outsb
fs
gs
inc
imul
popa
imul
je
jo
gs
bound
arpl
js
add
add
gs
popa
insl
gs
imul
insb
gs
je
je
add
add
je
popa
jae
inc
jb
outsl
jb
add
bound
inc
jb
add
or
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
js
push
gs
fs
imul
gs
push
dec
outsb
outsw
add
dec
popa
imul
outsw
add
add
je
outsl
arpl
gs
outsb
outsw
inc
add
push
add
fs
imul
js
add
outsl
add
je
imul
popa
je
add
incl
inc
gs
outsl
arpl
gs
outsb
outsw
push
add
rolb
je
arpl
push
add
repnz
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
cmp
dec
jo
outsb
inc
imul
outsb
addr16
add
stc
add
inc
popa
fs
je
imul
add
add
gs
je
inc
jbe
outsb
je
add
insl
add
outsb
insb
outsl
arpl
imul
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
pop
add
insb
jae
gs
popa
insb
jne
add
jo
jb
popa
je
add
dec
add
insb
gs
jnp
inc
outsl
insb
fs
je
imul
push
gs
gs
outsl
outsb
imul
imul
add
imul
in
add
gs
je
push
push
add
rolb
inc
jb
popa
je
inc
imul
outsb
addr16
add
mov
inc
outsl
insl
jo
jb
push
je
imul
add
imul
gs
arpl
add
out
inc
jb
popa
je
push
gs
popa
jo
outsl
jb
inc
add
faddl
push
gs
jb
push
push
add
gs
dec
outsl
add
add
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
inc
add
je
je
jb
jne
dec
outsb
outsw
push
add
add
push
popa
insb
imul
addr16
jb
jne
add
in
push
gs
outsl
insl
insl
push
imul
add
push
jns
je
insl
push
imul
insb
gs
imul
dec
outsl
jbe
inc
imul
add
jae
jb
insl
jo
inc
add
inc
gs
je
imul
inc
js
add
fldl
inc
jb
popa
je
dec
jne
gs
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
jno
inc
gs
dec
push
xor
mov
inc
push
je
dec
push
add
fldl
push
gs
dec
inc
imul
jne
inc
outsl
outsb
je
popa
insl
imul
add
gs
je
dec
inc
push
add
inc
gs
jns
je
insl
push
popa
insb
gs
gs
outsb
je
imul
jb
popa
je
push
arpl
outsb
add
inc
gs
popa
jo
outsl
fs
lahf
add
gs
je
dec
popa
insb
data16
outsb
gs
popa
insb
gs
gs
add
je
popa
insb
gs
gs
outsb
je
imul
jb
popa
je
inc
imul
bound
imul
inc
js
push
gs
dec
jne
push
add
push
gs
dec
jne
push
add
dec
add
je
outsl
outsb
je
popa
je
add
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
insb
imul
inc
gs
gs
inc
popa
arpl
add
jnp
inc
gs
gs
inc
insb
imul
inc
jb
popa
je
inc
jb
jae
dec
outsb
imul
add
je
imul
add
gs
popa
jns
jne
add
popa
je
push
outsl
insb
imul
add
add
jne
inc
outsl
outsb
je
popa
insl
imul
add
popa
je
inc
imul
imul
xchg
inc
jb
popa
je
inc
imul
add
gs
je
push
outsb
add
popa
je
inc
dec
inc
push
arpl
outsb
add
addl
imul
add
inc
gs
gs
jb
jae
push
popa
insb
gs
gs
outsb
fs
add
jo
add
push
gs
dec
gs
imul
push
gs
insb
imul
je
add
lar
jb
popa
insb
imul
arpl
add
je
gs
inc
outsl
insb
outsl
jb
add
inc
outsl
arpl
add
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
add
je
dec
inc
imul
imul
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
je
bound
je
jb
arpl
add
add
jae
jp
push
popa
insb
gs
add
push
imul
add
add
arpl
gs
insb
imul
xchg
add
gs
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
insl
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
popa
je
inc
inc
push
add
popa
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
mov
inc
gs
imul
dec
jb
inc
js
add
dec
xor
cs
insb
add
jb
jns
popa
jb
je
add
ja
outsl
arpl
push
arpl
add
fs
insl
popa
addr16
add
mov
je
gs
popa
add
gs
jb
jns
outsb
jne
stos
add
ja
outsb
imul
arpl
mov
inc
gs
insb
addr16
jb
arpl
add
inc
arpl
popa
je
dec
gs
outsl
popa
jb
dec
popa
jns
jne
add
data16
je
imul
add
je
imul
js
inc
add
and
fs
outsb
jo
je
mov
imul
outsl
ja
jo
popa
je
add
mov
push
popa
imul
jne
dec
fs
add
dec
add
je
outsb
jne
sub
inc
gs
outsb
jne
adc
push
imul
outsb
outsl
ja
gs
popa
addr16
add
push
add
je
arpl
insb
insb
push
outsl
jae
add
add
jae
popa
addr16
outsl
js
js
add
imul
je
jo
popa
je
push
outsb
add
mov
dec
outsl
popa
fs
outsb
jne
add
add
jo
outsb
fs
outsb
jne
add
inc
jb
popa
je
dec
arpl
dec
outsb
imul
insb
add
je
imul
outsb
addr16
add
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
cmp
arpl
popa
imul
outsb
add
addb
outsb
data16
popa
je
push
arpl
add
arpl
outsl
jo
jo
outsb
jne
add
gs
jae
inc
inc
add
add
outsb
fs
gs
popa
addr16
add
fildl
dec
outsl
jbe
push
imul
mov
inc
jb
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
stos
add
fs
jne
jae
jb
add
push
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
xor
push
gs
insb
popa
jae
dec
outsl
outsb
addr16
add
inc
jb
popa
je
push
imul
push
add
outsl
outsb
imul
outsb
jae
jb
dec
outsb
jne
je
insl
push
add
add
data16
je
arpl
scas
add
fs
jne
jae
jb
add
add
push
jae
push
imul
arpl
add
js
inc
gs
imul
js
push
add
push
add
je
insb
addr16
je
insb
dec
inc
add
mov
outsl
ja
jb
insl
push
outsl
imul
outsb
jae
jb
dec
outsb
jne
add
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
push
add
add
je
outsb
jne
je
insl
inc
outsl
jne
je
add
gs
arpl
push
add
add
push
imul
popa
jae
inc
js
add
ret
add
fs
imul
add
outsl
jae
inc
gs
je
jo
add
imul
jae
popa
addr16
add
out
dec
jo
outsb
inc
gs
je
jo
add
and
push
arpl
insb
insb
push
imul
add
mov
imul
xor
jb
outsl
dec
gs
push
add
xor
push
gs
popa
jb
je
outsl
jae
daa
add
je
gs
outsl
popa
jb
push
jns
gs
add
imul
jae
addr16
add
push
push
imul
add
gs
je
inc
imul
jb
insl
push
add
je
push
gs
imul
js
push
add
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
cmc
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
inc
gs
imul
outsb
addr16
add
fldl
inc
jno
popa
insb
push
arpl
add
je
arpl
insb
insb
push
outsl
jae
add
imul
imul
add
insb
insb
push
imul
dec
outsb
push
outsb
fs
gs
popa
addr16
js
pop
add
gs
je
dec
arpl
inc
jb
insl
push
gs
jne
arpl
add
inc
outsl
jo
inc
arpl
insb
gs
je
jb
popa
bound
add
push
imul
outsl
arpl
add
bound
jbe
outsb
je
faddl
inc
outsb
jne
push
imul
adc
inc
gs
outsl
jne
insb
gs
insb
imul
add
cwtl
add
je
outsl
jns
imul
add
popa
jb
jb
jbe
add
add
outsb
fs
gs
popa
addr16
add
mov
inc
gs
jb
insl
gs
jb
arpl
or
push
imul
je
gs
add
add
je
jne
jae
jb
push
inc
gs
imul
add
inc
insb
addr16
je
insl
dec
outsb
je
sbb
arpl
gs
imul
add
add
je
outsb
jne
je
insl
dec
inc
add
outsl
addr16
outsl
js
popa
jb
insl
inc
add
arpl
outsl
push
push
outsb
outsl
ja
add
inc
push
outsb
jne
popa
imul
add
add
jo
imul
arpl
add
dec
outsb
push
arpl
cltd
add
inc
insb
addr16
jne
je
outsb
inc
push
add
mov
jb
outsb
je
inc
add
inc
gs
jns
je
insl
dec
outsb
jne
add
push
imul
popa
jae
inc
js
add
pusha
add
gs
je
dec
outsb
jne
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
dec
outsb
jne
je
insl
dec
outsb
outsw
push
add
mov
fs
outsb
jne
add
inc
gs
outsl
jo
imul
dec
add
je
jb
jo
add
cmp
push
gs
jne
jae
jb
outsl
jae
add
add
jo
imul
gs
js
add
jp
push
push
jb
je
add
imul
popa
jae
push
add
scas
add
fs
arpl
inc
add
add
je
popa
jb
je
outsl
jae
jnp
push
push
jb
outsl
jb
add
inc
gs
jne
dec
outsb
jne
add
add
imul
arpl
dec
fs
jb
insl
inc
imul
jns
push
push
inc
push
xor
cs
insb
add
push
dec
inc
dec
dec
xor
cs
insb
add
push
dec
push
jne
jns
push
push
inc
insb
inc
inc
push
in
inc
add
in
inc
add
or
dec
addr16
xor
dec
cmp
jp
cmp
dec
es
jae
and
dec
push
push
pop
push
cmp
dec
addr16
xor
dec
cmp
jp
cmp
dec
es
insl
dec
and
dec
push
bound
arpl
dec
bound
dec
jae
cmp
dec
xor
dec
push
jb
jae
orl
nop
jge
aas
dec
dec
xor
dec
ds
inc
dec
cmp
dec
xor
dec
push
sbbb
setae
jl
jge
aas
dec
dec
xor
dec
ds
inc
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
mov
or
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
mov
mov
ret
or
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
ret
psrlq
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
popa
dec
xor
dec
xor
dec
ds
xor
dec
push
loop
jecxz
repz
jl
jge
jl
jge
ds
jg
xor
dec
xor
dec
ds
inc
dec
cmp
dec
cmp
add
add
adc
jl
jge
aas
dec
add
outsb
jmp
inc
add
inc
add
in
inc
add
in
inc
add
inc
add
inc
add
in
inc
add
test
pushf
clc
data16
add
inc
add
inc
add
inc
add
inc
add
jmp
inc
add
in
inc
add
test
jb
inc
add
or
inc
add
fnsave
push
jne
mov
incb
mov
jmp
add
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
and
pushf
clc
sub
add
jmp
inc
add
imul
pushf
clc
popf
jmp
add
pop
jmp
add
add
inc
add
add
add
inc
add
add
dec
add
dec
add
add
add
add
inc
add
add
dec
add
inc
add
add
dec
add
add
add
add
jmp
add
dec
pop
dec
inc
dec
inc
dec
pop
dec
inc
dec
add
dec
xor
add
pop
dec
pop
dec
add
dec
xor
dec
inc
dec
pop
dec
inc
dec
add
dec
xor
add
pop
dec
inc
dec
dec
dec
push
dec
inc
dec
pop
dec
xor
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jge
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
xlat
lds
ret
fidivs
into
mulb
push
sbb
jno
add
add
mov
das
shlb
rolb
inc
push
outsl
push
push
jmp
add
in
adc
jae
inc
jae
popa
push
pop
pop
outsb
jbe
jns
push
imul
je
jns
popa
push
push
push
dec
imul
popa
jp
arpl
push
imul
jp
jb
outsl
push
inc
inc
push
imul
push
jb
add
push
insb
pop
ja
je
bound
add
push
dec
je
push
jne
popa
jns
dec
push
dec
dec
pop
pop
dec
push
add
adc
push
jge
add
jnp
loope
insl
sbb
outsb
scas
jbe
mov
stc
test
stc
xor
dec
insb
push
push
fsubrl
xor
push
push
adc
ret
ja
cli
ja
mov
test
or
cltd
psubsw
inc
rolb
fisttps
push
in
das
enter
jns
inc
sbb
pusha
je
add
loop
pop
sbbb
pop
jne
pop
or
sbbb
sub
sub
fs
push
lods
ja
fisubl
das
mov
adc
xchg
dec
adc
in
push
jl
insl
into
loopne
cld
shr
movsb
jb
xchg
enter
jp
ror
push
rcrb
dec
lods
cwtl
xor
daa
ret
mov
push
bound
mov
sbb
cmp
and
and
mov
xchg
fcmovne
lret
sbb
cmpsb
leave
sarl
or
cmpsl
js
shl
xlat
jge
jae
adc
lahf
push
pop
cmpsl
in
addb
mov
leave
dec
mov
sar
and
out
pop
mov
test
pop
dec
xchg
pop
loopne
mov
repz
cld
inc
pop
shlb
out
and
gs
inc
in
mov
outsb
push
jns
adc
jle
pop
sbb
leave
adc
lods
pop
dec
cld
in
ja
inc
inc
int
mov
sbb
out
bound
iret
fs
and
push
out
aam
xchg
jecxz
sub
jae
test
mov
ljmp
incb
test
arpl
adc
dec
lret
sbb
and
test
addr16
sbb
into
in
inc
lcall
enter
adc
jle
je
into
mov
fidivl
xchg
mulb
mov
popf
adc
test
mov
mov
stos
adc
cltd
in
arpl
sub
not
fdiv
ss
sbb
jb
mulb
imul
pop
cmp
push
mov
dec
sbb
pop
popa
bound
nop
xchg
ss
mov
sbb
dec
rorl
add
sub
adc
test
rorl
fstps
loope
sbb
hlt
mov
lret
iret
mov
pop
jecxz
pushf
test
cmp
cmp
dec
daa
pusha
std
xor
adc
fld
pushf
les
cmp
mov
sbb
sbb
in
sbb
dec
mov
repz
fs
inc
mov
or
loope
cmp
shrb
dec
mov
out
out
sub
cmc
add
pop
sbb
mov
xchg
push
jno
lcall
sbbb
xchg
adc
mov
mov
xchg
mov
int3
int
lods
cmpsb
sub
sbbl
data16
lods
mov
cmp
mov
sub
jo
and
mov
ret
dec
ret
mov
arpl
fistpll
jp
jo
dec
loopne
sbb
adc
xchg
loopne
shll
inc
mov
sub
out
aam
mov
mov
andb
in
iret
pop
xor
loopne
dec
shrb
add
pop
outsb
push
xchg
out
pop
fchs
imul
push
xor
xchg
mov
mov
popa
test
sbb
gs
inc
jmp
jno
fcmovnbe
fwait
popf
leave
jge
rorl
ss
lods
and
xchg
push
lea
aam
addr16
andb
sarb
or
fsub
lea
add
mov
mov
adc
ds
jmp
int
cmp
sbb
jecxz
dec
fs
cmp
xchg
decb
xor
lds
clc
cmpsl
add
lock
mov
dec
mov
and
repz
xchg
cmpsl
cmp
mov
fmulp
push
bound
mov
push
jmp
fdivrs
push
out
sub
xor
push
mov
mov
lock
or
addr16
push
xor
xchg
sbbl
dec
sub
xor
int
jge
mov
and
adc
pop
repz
xchg
in
je
lods
mov
test
and
popa
scas
enter
faddp
clc
jge
dec
xor
sahf
xor
imul
and
xlat
inc
inc
push
push
subb
fisubrs
sub
pusha
hlt
andl
dec
data16
adc
icebp
add
clc
dec
stos
sbb
orl
mov
rorl
mov
loope
push
mov
xor
jns
adc
mov
insb
xchg
shll
xchg
aas
sub
pop
ret
jmp
lcall
push
gs
sub
mov
add
pop
push
aam
hlt
dec
xor
test
cwtl
and
jecxz
push
pop
daa
mov
bound
push
jle
cmc
test
insl
ljmp
test
and
mov
inc
das
cmpsb
jne
ret
fwait
pop
repnz
jge
xor
and
sbb
bound
xor
jl
or
inc
dec
movsb
cmpsl
xchg
in
stos
dec
inc
push
sti
sub
push
or
inc
mov
mov
sub
or
xchg
sbbl
add
sub
stos
popf
jge
sbb
pusha
shl
sahf
add
addr16
and
aam
out
leave
hlt
mov
andl
popa
mov
push
inc
aad
in
xchg
xor
loopne
dec
push
jecxz
sbb
imul
shrb
pushf
jb
int
int3
ret
stc
lds
mov
mov
pop
mov
fs
push
rolb
jp
fbstp
sub
das
inc
loopne
push
sahf
mov
add
dec
inc
pop
inc
pop
pop
shrb
mov
addl
mov
add
fwait
pop
jnp
add
sar
fnstenv
mov
ja
movb
jge
cmp
imulb
push
push
sub
les
push
scas
shrb
xor
mov
xchg
shl
cmp
ret
push
sbb
mov
mov
mov
int3
adc
mov
pop
lahf
mov
xor
in
push
aad
scas
add
popf
push
add
or
data16
xchg
adc
loope
out
mov
dec
jmp
scas
jbe
xchg
mov
lock
cli
push
addr16
scas
sub
xor
ret
je
mov
out
cli
aam
dec
pcmpgtd
out
jg
aam
test
es
mov
xchg
mov
adc
sub
mov
xlat
inc
and
cmpsb
cld
test
mov
js
sbb
mov
in
dec
mov
ljmp
jnp
pop
scas
lods
lahf
mov
arpl
mov
jmp
mov
sub
icebp
ret
test
arpl
movb
sbb
out
jnp
in
xchg
cmp
mov
rolb
loop
dec
lret
dec
stos
cmpsb
mov
fcmovnbe
test
mov
ss
leave
and
pop
xchg
xor
pop
addb
jno
pop
scas
or
jmp
xlat
jmp
xchg
xor
push
lods
add
stc
iret
or
push
into
fldlg2
aad
frstor
in
push
and
ja
add
mov
sbb
push
shlb
lret
outsl
pop
fistpl
pop
es
adc
lahf
sbb
cmp
call
dec
fildll
lock
mov
lds
loope
aam
sub
pusha
inc
push
inc
or
scas
mov
pop
into
dec
push
dec
mov
dec
and
dec
es
outsl
push
xchg
mov
jno
iret
int
cmc
and
sbb
aaa
lret
jecxz
add
js
dec
inc
jnp
push
cmp
sub
mov
leave
mov
jmp
ret
fsubrl
and
imul
jge
jnp
dec
cmp
std
cmpsb
xor
int3
pop
add
ja
gs
int3
mov
or
mov
pushf
inc
mov
xorb
rep
cmp
push
call
xchg
mov
dec
push
mov
imul
lcall
jbe
hlt
imul
mov
mov
push
mov
hlt
daa
fcomps
dec
andb
ja
inc
jb
mov
fadds
xor
mov
sub
jle
mov
fs
cmpsb
adc
outsb
call
nop
jae
cmp
xchg
ja
rclb
xchg
int
xchg
ja
inc
scas
or
or
cld
sbb
jmp
xchg
rep
pop
or
loop
dec
lock
stc
mov
xchg
fildll
mov
push
lds
xchg
movsb
nop
mov
xlat
imul
xchg
dec
dec
iret
xor
xchg
ljmp
lea
mov
xor
ss
adc
sub
sbb
xchg
lahf
inc
hlt
sbb
or
adcl
mov
idivl
and
fnstenv
outsb
repnz
adc
mov
inc
fwait
gs
jp
cmp
push
push
pop
xor
gs
cld
cmc
dec
jo
shr
ss
fistpll
xorb
jne
clc
loopne
or
in
mov
out
jp
push
sub
xor
push
sarb
jbe
push
lock
adc
sub
jns
clc
jbe
pushf
xchg
incl
imul
mov
iret
pop
mov
cwtl
mov
jb
daa
mov
or
mov
imul
push
ljmp
xchg
clc
push
add
es
or
cmpsb
mov
push
in
or
jmp
sbb
mov
xchg
fcom
mov
outsb
add
xchg
sub
mov
insb
iret
aam
cmc
add
and
mov
mov
bound
jbe
fcomps
lea
pop
cmpsl
in
movsb
into
pop
lds
std
shll
test
and
shl
jmp
imul
outsb
adc
push
adc
lret
mov
push
lret
fistl
push
pop
sbb
mov
adc
mov
ret
push
imul
mov
pop
ds
push
xor
fsubl
lock
sbb
pop
lahf
mov
lods
and
push
int
inc
sbb
cli
rorb
lret
push
into
mov
shll
inc
mov
and
fs
stos
fwait
push
mov
popa
pop
inc
cmp
pop
notl
adc
sbb
jl
xchg
pop
push
inc
mov
fs
push
mov
cmpb
inc
lret
lea
sbb
or
adcl
daa
movsb
arpl
mov
pop
aaa
idivl
adc
sub
mov
imul
jp
mov
jnp
cmp
shl
movsl
and
mov
fcomps
cmp
call
xor
xlat
aas
stc
xchg
movsl
lods
in
adc
cld
out
push
outsl
decl
xchg
jae
pop
mov
push
aas
mov
push
sub
enter
hlt
mov
mov
je
jl
out
inc
fmull
dec
jo
ret
push
movsl
arpl
lcall
push
sub
sbb
movsb
pop
dec
xor
icebp
add
fistl
imul
jp
cmp
clc
imul
pop
nop
fstp
cmp
int
jno
cmp
cmpsb
inc
outsb
pushl
xchg
cmp
inc
xchg
data16
mov
add
dec
push
pop
push
pop
dec
mov
dec
push
or
mov
add
in
push
jbe
int
insl
out
dec
fldz
outsl
mov
dec
clc
pop
fcoms
aam
rorb
hlt
push
scas
mov
ret
sbb
jns
dec
push
inc
je
inc
icebp
or
stos
inc
cmpb
adc
mov
jbe
lods
leave
rcll
pop
lea
movsb
dec
addr16
flds
js
pusha
xchg
outsl
add
push
ficoml
cltd
dec
jmp
push
je
mov
and
mov
imul
inc
mov
addr16
xchg
mov
lods
lret
pop
gs
arpl
and
mov
lret
xchg
push
xor
sbb
addl
addr16
sti
or
cld
les
faddl
cmp
pop
ljmp
and
out
mov
inc
jo
sub
sbb
fidivl
test
xor
push
fdivrp
jae
mov
movsb
mov
push
mov
and
cmp
addr16
push
inc
testb
dec
sub
xchg
mov
add
dec
sbb
mov
jo
push
in
std
dec
lret
cld
rcll
mov
xchg
dec
push
pop
xor
je
add
push
jb
add
fldcw
sub
push
in
out
std
adc
mov
fadds
aad
fnstsw
adc
jl
jae
je
add
ss
pop
xchg
fcomp
xor
movsb
inc
test
mov
push
ret
mov
sbb
add
bound
xor
xor
lods
cmp
cld
jge
fwait
rcrb
repnz
push
add
es
jle
repnz
pop
adcl
add
insb
and
mov
clc
cmc
in
popf
cmp
arpl
mov
fs
lods
push
or
pop
mov
dec
cmp
jns
decb
cmp
movsb
and
xchg
ret
mov
push
push
mov
out
jbe
pop
add
or
mov
jo
jp
mov
rclb
sub
xchg
pusha
jmp
push
mov
adc
ss
xchg
fs
cmp
xor
sbb
and
lock
lahf
and
std
mov
push
lods
mov
pop
sub
xchg
pop
test
push
lds
adc
aad
dec
adc
mov
cli
sbb
jg
jle
ret
lods
fisubrl
lret
repnz
fnstenv
push
popf
or
lret
pop
jg
sub
sub
pop
leave
push
sahf
aaa
and
push
push
push
test
outsb
dec
mov
stos
test
test
cmpsb
push
movsb
or
out
mov
aas
push
mov
shl
call
jge
add
lahf
adc
in
mov
leave
pop
cmp
push
daa
mov
sbb
fldenv
inc
lock
mov
in
cmp
xor
cld
dec
daa
sub
dec
pop
dec
sub
scas
xor
out
push
out
sub
jae
pop
test
pusha
inc
dec
cmp
out
mov
ret
fwait
mov
lods
in
clc
test
sbb
sbb
jge
dec
mull
mov
mov
jle
fsubrs
mov
pop
xchg
aaa
ja
sbb
mov
pushf
icebp
shlb
push
push
jge
pop
out
and
into
fsub
add
das
sbbl
xor
add
in
inc
cs
inc
sbb
cmp
jle
aaa
cli
push
jge
lods
sbb
xchg
hlt
cmp
inc
fdivs
dec
adc
xor
pop
lcall
rol
dec
sahf
pop
push
sbbb
mov
lahf
sti
mov
cmp
or
add
xor
jns
xchg
pop
std
mov
gs
in
fldcw
ljmp
sbb
mov
enter
jecxz
dec
nop
push
adc
xlat
add
pop
lret
mov
movsl
in
lahf
jle
cmp
jl
inc
in
or
mov
fiaddl
pusha
stos
das
in
cmpsb
mov
inc
mov
adc
loope
sti
pop
lahf
jle
adc
mov
fadds
jecxz
mov
jmp
sbb
pop
mov
xor
xchg
scas
aad
jbe
or
out
cmc
jb
ret
movsl
repz
std
and
jmp
sbb
xor
xchg
xor
jp
cmp
add
or
sbb
add
shrl
push
mov
add
lcall
jns
jne
mov
add
mov
sub
jne
cli
test
sub
fnstenv
sub
popw
pop
cmp
adc
mov
pushf
leave
out
fbld
movsl
pop
jno
clc
ljmp
push
iret
cld
popf
mov
loope
adc
pop
sahf
adc
icebp
cltd
xor
xchg
mov
mov
adc
cmp
sub
mov
imul
jne
jne
push
mov
movsb
aas
adc
mov
aaa
lahf
or
mov
sub
sbb
int
dec
test
sbb
aaa
lods
mov
fcomi
outsb
inc
inc
test
cltd
mov
xor
jmp
dec
es
cli
mov
sub
adc
sub
mov
lahf
in
fidivrl
shll
mov
jg
sub
bound
aaa
jecxz
addb
and
mov
mov
jmp
mov
nop
sbb
cmp
lahf
xor
cmp
lock
test
pushf
push
aaa
jecxz
sub
sbb
or
out
sub
sub
xlat
pusha
outsb
or
in
cmp
in
addr16
push
pop
inc
jns
mov
insl
adc
push
in
push
stos
jbe
shll
mov
jae
mov
daa
pop
add
add
inc
dec
dec
pop
pop
push
sub
xchg
lahf
ret
nop
add
mov
add
clc
and
pop
hlt
popf
incb
mov
movsl
sub
fucomi
inc
mov
jge
pause
es
adc
xchg
insb
out
inc
stos
jnp
and
outsl
les
mov
test
int
ja
jnp
pop
dec
cmp
out
outsb
cld
int3
and
mov
aam
jecxz
xor
jno
std
push
mov
inc
pop
lock
push
std
inc
cmp
outsl
inc
fcmovbe
and
mov
jl
lods
into
stos
push
mull
iret
stc
fisttpll
icebp
lods
enter
ficoml
mov
stc
push
jg
ja
inc
inc
fwait
mov
pusha
aas
mov
or
jl
sub
mov
add
leave
sub
inc
sahf
shlb
push
mov
scas
aaa
pop
popa
xchg
add
lds
pop
cs
daa
repz
loopne
pop
iret
insl
sbb
mov
stc
pop
lahf
ljmp
sub
aas
faddl
scas
xor
aaa
int3
js
push
mov
fisubl
xor
pop
into
repnz
popa
jae
test
pusha
data16
cmp
dec
and
or
lret
inc
je
test
jne
mov
shll
xchg
jge
bound
cmp
cmp
js
mov
xchg
insb
or
outsl
and
push
or
dec
outsb
nop
icebp
das
lea
shlb
mov
push
test
repz
andb
add
jbe
in
lret
cmpsl
movsl
add
jno
push
cmp
jecxz
dec
out
fsubr
jne
repnz
loope
in
das
push
ljmp
dec
movsb
in
pop
aad
jne
std
mov
sub
aam
lea
sbb
jne
adc
pushf
rcll
sbb
sub
jbe
in
int3
pop
pop
cmpb
and
gs
mov
std
rorl
adc
outsb
outsb
and
sti
add
lock
filds
dec
loopne
cmp
jbe
loop
or
xor
and
sbbl
and
inc
sbb
pop
jl
lods
in
pusha
push
sub
testl
xchg
int
fbld
or
jmp
xchg
dec
sbb
ja
adc
test
rol
cld
push
addr16
cs
or
popa
mov
sub
mov
scas
mov
arpl
mov
outsb
in
dec
fs
adc
or
mov
jge
push
fnstenv
xor
and
insb
xchg
sarl
and
cltd
jg
clc
fistl
cld
xchg
push
shr
pop
pop
xor
jns
push
xchg
pop
xorl
inc
jle
ret
imul
cld
leave
sbb
clc
imul
movsl
mov
hlt
lcall
roll
push
xchg
dec
jns
jle
nop
dec
cmp
inc
push
dec
mov
pop
sbb
les
or
xorl
push
push
fs
adc
shlb
jp
mov
mov
lret
rorl
inc
popf
ja
in
push
xor
icebp
fwait
xchg
adc
es
push
sbb
dec
adcl
dec
data16
int
push
xlat
adc
xchg
xor
jae
roll
dec
pop
outsb
rorb
xor
jge
cmpl
dec
dec
push
adc
adc
adc
sub
mov
cmc
addr16
xor
mov
cmpsl
sub
xor
pushf
int
sub
jbe
pop
ja
insb
pop
inc
mov
dec
loope
daa
notb
cmp
jns
mov
mov
xlat
ret
xchg
dec
pop
lret
add
lods
stc
jnp
leave
mov
das
inc
inc
xchg
lods
sub
icebp
scas
negb
xor
mov
out
out
arpl
xor
cld
inc
lret
cwtl
pop
xor
cmp
into
cltd
stc
sbb
inc
out
add
clc
and
jl
divb
or
cmc
mov
xchg
xchg
mov
sub
add
mov
push
test
mov
aad
push
lret
push
out
fucomi
popf
leave
cmpsb
pushf
mov
lea
dec
cwtl
mov
cmp
pusha
dec
sbb
mov
jne
pop
loope
cltd
das
add
pop
xchg
out
imull
xchg
pop
or
loope
movsl
xlat
mov
inc
popa
ja
fdivrl
adc
negl
add
xchg
in
and
xor
lcall
shll
dec
cmpb
adc
xchg
jmp
add
out
mov
cmp
inc
push
lods
mov
dec
mov
push
popa
sti
cmpsl
aaa
sbb
aam
movntq
xchg
repz
xor
inc
mov
loop
and
xor
mov
push
jmp
xchg
sbb
jo
push
test
inc
mov
inc
cwtl
roll
xor
mov
dec
mov
cmp
loope
xchg
leave
sbb
mov
divl
add
fs
lock
jle
mov
sbb
adc
jl
mov
js
aas
leave
mov
cmpsb
inc
es
cmp
ja
or
leave
repnz
rolb
add
push
sahf
les
xchg
add
or
mov
mov
xchg
inc
dec
stc
into
cmp
fimull
jne
add
sbb
cmp
cmp
jle
mov
ret
sbb
adc
push
in
imul
fistps
in
xchg
loopne
sbb
or
mov
cmp
sbb
mov
inc
stc
ss
mov
xchg
out
sti
xchg
xchg
into
add
jnp
aaa
push
shll
xchg
pusha
cmp
out
ss
adc
arpl
xchg
and
or
add
mov
iret
xchg
shlb
ret
sahf
add
cwtl
jo
adc
jmp
ss
push
sub
test
cmp
and
mov
out
out
rcrl
fwait
mov
inc
addr16
loopne
dec
ljmp
add
inc
dec
dec
dec
dec
dec
inc
dec
sub
adcb
xchg
add
mov
add
adc
int
into
mov
jl
or
or
imul
cmc
outsb
stc
mov
jmp
idivb
imul
mov
push
and
xor
push
xchg
adcl
mov
int3
pop
lods
mov
mov
or
rcr
std
mov
xchg
sbb
cmpsl
mov
pushf
xchg
andl
les
or
sub
and
mov
pop
dec
add
rol
hlt
popf
iret
cmp
mov
ljmp
in
popf
loope
das
rcll
idivl
mov
rol
sbb
jne
mov
or
sub
outsb
jmp
mov
fcmovne
xchg
or
clc
mov
adc
xchg
hlt
addr16
leave
rclb
sub
sahf
adc
lcall
jecxz
aad
mov
insl
xchg
xchg
jns
mov
roll
xchg
cmpsb
lods
mov
push
stos
int
repz
push
mov
adcl
mov
xlat
std
jmp
es
movl
sub
push
stos
daa
jbe
movsb
imul
push
and
cmpsl
xchg
ret
loope
ljmp
sub
shll
popf
int
cs
lock
cltd
push
sbb
in
xchg
fwait
repnz
dec
and
or
stc
fidivrl
xlat
inc
cld
pop
jl
lea
and
pusha
push
jle
jae
add
sub
pop
sub
xorl
les
xchg
test
and
clc
in
lcall
jb
push
aad
pop
mov
in
mov
addr16
jo
pop
testl
rorl
pop
sarb
movsb
dec
lods
mov
adc
xchg
rol
dec
arpl
xchg
clc
cmpsb
insl
lcall
xor
dec
adc
jmp
iret
sbb
rcrb
pop
icebp
aaa
test
adc
cmc
mov
dec
test
xchg
push
mov
bound
stos
pop
pop
pop
pop
push
mov
popf
mov
jge
divb
lods
incb
mov
adc
mov
loopne
cmpsl
jne
mov
pop
lea
imul
in
jae
aad
cltd
jge
js
rclb
xor
mov
adc
xorl
push
pushf
mov
sbb
or
ret
mov
pop
cmp
incb
fstl
pop
int3
lahf
test
jo
push
imulb
lds
fsubl
inc
dec
add
cmp
je
sahf
mov
xchg
mov
mov
cmpsb
pop
push
aas
jo
shrb
jae
pop
add
xchg
mov
sub
sbb
out
adc
pop
enter
aaa
jno
cwtl
and
sbb
pop
rol
mov
adc
mov
and
fs
xchg
ljmpw
addb
rcrb
scas
pop
push
dec
out
mov
mov
push
bound
sub
fiadds
lcall
loope
lods
add
sub
popf
lret
mov
movsl
and
mov
sbb
imul
pop
fidivl
push
lcall
mov
insl
or
es
push
iret
sbb
mov
adc
insb
rclb
andl
dec
pop
or
xchg
inc
aam
nop
mov
mov
iret
add
cwtl
cltd
dec
movsl
out
add
xchg
xchg
mov
sub
xchg
xor
dec
jno
dec
cs
std
dec
sbb
insb
pushf
cmpl
pop
mov
test
jl
lahf
cmp
stos
adc
aas
dec
adc
cmc
jg
push
mov
cld
pop
js
pop
dec
cmp
dec
or
fxch
jecxz
loope
fimuls
shll
xor
sub
std
outsl
out
pop
je
fwait
mov
push
in
arpl
inc
pop
push
std
or
cmpsb
mov
ret
or
sbb
sub
sub
dec
scas
mov
sti
imul
mov
das
inc
xchg
negb
fnstcw
ss
sub
sub
aaa
lods
push
movsb
mov
pop
mov
mov
cld
lds
loop
inc
shrl
stos
ret
mov
decb
repz
fcomps
sub
xchg
imul
adc
cmpl
sub
cs
dec
jae
pushf
sbb
inc
in
mov
test
clc
dec
inc
nop
test
out
dec
cld
loopne
mov
or
jb
pop
push
leave
add
pop
mov
or
or
je
sahf
hlt
xchg
cmpsb
push
mov
mov
lret
adc
clc
out
aam
out
ror
fmuls
fstpl
cld
jle
mov
fmuls
xchg
mov
fadd
movsb
mov
jp
pushf
int
mov
add
les
rcrb
jmp
push
inc
pop
pushf
in
mulb
and
bound
mov
or
or
cli
in
dec
jmp
or
mov
xorb
jp
pushf
loopne
jge
popa
lahf
in
shll
cmc
xchg
popf
inc
call
nop
ja
inc
sbb
push
cmpsb
lret
inc
bswap
and
mov
movb
mov
inc
add
imul
enter
xorl
jb
jns
sahf
jnp
lret
cmp
jo
shll
cs
das
pop
icebp
pop
mov
xor
mov
fldl
cli
ret
rol
scas
and
ljmp
or
push
out
lret
stos
adc
hlt
sub
notb
sahf
xor
and
mov
mov
les
mov
subb
mov
and
test
cwtl
adc
and
or
pushf
pop
leave
ja
jmp
frstor
das
movq
push
call
adc
xor
fildll
aaa
arpl
add
push
dec
inc
push
pop
pop
push
dec
cmp
or
dec
sar
popf
add
mov
add
and
aam
xchg
jae
and
and
xchg
mov
stos
into
xor
cmp
mov
mov
xchg
or
out
push
cs
cltd
mov
in
adc
outsl
leave
js
scas
jmp
loop
pushf
and
xor
cmp
cld
pop
pop
fimull
fisttpl
aam
in
push
iret
inc
int
test
fadd
imul
sbbl
rcrl
pop
std
sahf
mov
adc
in
inc
sbb
mov
scas
xlat
or
dec
xchg
push
lret
push
loope
not
xor
lods
xchg
and
cmp
loop
clc
cmpsl
popa
pushf
movsb
push
jmp
in
std
clc
cmp
pop
mov
and
xor
sbb
outsb
xchg
je
test
cmp
sub
das
jo
sbb
fimull
add
push
and
hlt
cmp
sub
mov
mov
popf
out
sarb
clc
popa
add
pusha
dec
mov
xor
mov
sbb
xlat
pop
test
std
out
jns
dec
push
push
jnp
cmp
inc
cmp
cltd
pop
sub
mov
shl
into
dec
mov
mov
mov
neg
outsb
in
imul
leave
sarl
push
in
mov
push
int
fs
pushf
or
and
imul
outsl
or
mov
ror
aaa
push
lods
and
xor
mov
mov
push
pusha
fs
lcall
shr
pop
mov
adc
das
sti
cmpl
idivl
mov
xchg
pop
pop
daa
icebp
cli
out
xor
cld
sbb
nop
sahf
pop
in
in
mov
sub
repz
or
daa
int
jb
ljmp
int3
or
leave
jnp
rolb
sub
into
xor
cmc
xchg
sti
add
test
mov
mov
fwait
dec
out
cltd
xchg
cmp
insb
nop
stc
dec
icebp
pusha
sbb
mov
lds
sbbl
push
jl
test
sbb
mov
imul
mov
adc
adcl
push
adc
xor
pop
pop
mov
push
inc
and
xchg
es
enter
mov
inc
adc
gs
pop
xor
and
sbbl
movsb
pusha
jge
adc
inc
mov
aad
pop
xorb
xchg
inc
push
fldt
mov
dec
xor
xchg
orb
cltd
push
mov
dec
pop
loopne
loop
mov
test
into
xchg
lods
xchg
cmp
adc
data16
mov
cmp
nop
pop
or
adc
outsl
test
lock
and
pop
add
insl
movsb
and
clc
mov
lret
xlat
mov
mov
int3
movsb
mov
cltd
mov
pop
xor
ret
dec
add
hlt
insl
jecxz
lcall
je
aas
mov
outsl
clc
es
addr16
lea
mov
sarl
arpl
out
cs
movsl
pusha
push
mov
dec
cld
repz
jl
cmp
lock
into
and
imulb
xor
scas
jg
int3
mov
xchg
std
add
pop
sub
in
mov
adc
rcll
xor
sbb
ret
fidivrl
inc
ds
or
mov
mov
lcall
lret
mov
mov
jge
in
or
and
outsl
mov
push
xor
push
and
mov
mov
mov
jle
inc
jne
sarl
add
mov
loopne
std
inc
fwait
popa
daa
xchg
sub
xchg
jp
mov
nop
scas
repnz
adc
adc
insb
fs
mov
movsl
arpl
pop
mov
inc
test
out
int
sarl
cltd
cli
and
sbb
xchg
lea
dec
push
int3
sbbl
adc
loopne
shl
ret
mov
fisubrl
lods
adc
cmp
out
ljmp
cmc
jmp
mov
inc
sub
clc
add
cmp
mov
inc
in
sti
icebp
fcmovb
ja
dec
sbb
jo
mov
mov
mov
loopne
add
outsb
ljmp
jmp
ss
shlb
int
cmp
mov
inc
sbb
mov
mov
jmp
or
add
movsl
and
add
mov
xorl
add
popf
jne
xor
sbb
mov
or
jmp
mov
fisubs
push
sub
sbbl
pop
cmp
mov
lods
or
in
arpl
test
clc
sbb
inc
roll
dec
adc
sub
sbb
xlat
dec
jne
mov
push
mov
push
ret
andb
loope
or
scas
mov
and
fnstsw
and
mov
scas
push
xchg
jb
inc
cltd
xor
lret
sbb
xor
push
push
stos
es
clc
mov
cltd
push
mov
xchg
xchg
insl
xchg
into
not
mov
xlat
add
cmc
stc
push
mov
lock
scas
mov
sarl
cmp
push
mull
mov
sbb
cmp
lahf
cli
lea
or
cmp
or
dec
inc
ljmp
lea
cmp
sbb
paddsb
out
imul
xchg
push
repz
out
dec
adc
mov
jecxz
repz
pop
jge
push
popa
sub
sar
push
mov
faddp
cmpsb
mov
xor
push
push
dec
sub
push
add
jp
aam
pop
ds
out
mov
fs
sbb
xor
dec
inc
mov
arpl
xchg
inc
pop
mov
aas
mov
push
lds
outsl
adc
jmp
mov
cmpsb
in
fiaddl
in
add
push
pop
dec
inc
dec
push
pop
pop
push
inc
cmp
xor
push
add
ljmp
shrb
xchg
inc
add
xor
aam
or
popa
cs
lds
xchg
add
add
insb
jp
mov
movl
sbb
mov
stos
push
push
push
sub
pop
xor
jg
jbe
push
mov
int3
push
mov
icebp
mov
inc
xor
loope
or
pop
adc
icebp
pop
mov
cmc
shll
dec
lret
lcall
xchg
or
pop
imul
std
mov
push
das
sub
fadds
xchg
test
adc
pop
xchg
movsb
pop
lock
stc
cwtl
pushf
xchg
aaa
mov
add
insl
ret
lret
xlat
call
xchg
nop
mov
dec
xchg
cmpb
fildl
xchg
out
scas
xchg
or
xor
cmpl
and
xchg
dec
stos
divb
dec
into
dec
sub
andb
aad
outsl
nop
in
xor
xor
cmpsl
in
sbbl
xchg
fsts
xchg
clc
out
mov
push
mov
lcall
dec
mov
push
call
call
add
cltd
lods
lahf
inc
das
das
fs
xchg
loop
int3
lret
shr
cvtps2pd
mov
push
adc
out
pop
xor
lock
cmp
fildl
imul
std
loopne
mov
mov
push
mov
test
mov
in
cmpsl
sub
mov
mov
cmpb
movsb
adc
fnstenv
lcall
adcb
cmp
addl
lds
mov
fstl
insb
adc
loopne
cmp
mov
jmp
mov
pushf
call
push
jb
ret
stc
mov
fdivr
dec
insl
repnz
mov
arpl
lret
std
mov
mov
xchg
ss
fimull
sti
adc
rcll
cs
jmp
pushf
add
jnp
or
aad
sbb
sub
mov
cmpsl
sbb
cmp
sub
pop
mov
dec
jno
daa
movsb
leave
pop
cmp
out
arpl
pop
push
push
pop
jecxz
pop
add
inc
xchg
mov
add
aaa
loop
xchg
sub
jle
cld
xchg
ucomiss
xchg
or
out
ret
stos
in
sbb
push
xchg
ficoms
inc
loopne
xchg
imul
pushf
mov
cmp
ds
das
leave
mov
mov
lcall
sub
xchg
call
mov
dec
popf
jmp
adc
subl
inc
gs
dec
xchg
pusha
xor
push
arpl
xor
aaa
movzbl
movsl
sbb
pop
lods
fimull
jmp
filds
fsubr
iret
inc
xchg
lret
ss
sub
dec
loopne
add
in
pop
jmp
jmp
add
in
testb
outsl
ret
mov
mov
xchg
out
dec
cs
xor
ljmp
xor
adc
mov
push
inc
sarl
cld
iret
movsl
jp
xor
outsb
pop
addr16
jne
xor
decb
in
mov
mov
scas
aaa
sbb
jg
pop
cmp
out
scas
insl
out
jg
enter
add
test
pop
std
inc
pop
dec
add
mov
jl
lock
or
inc
add
mov
or
std
cli
imul
arpl
out
test
pop
pop
inc
pop
jnp
xchg
pushf
fstps
push
mov
inc
insb
and
sbb
cmpl
lcall
mov
enter
scas
cltd
mov
fcmovnu
insb
into
enter
xor
hlt
mov
gs
cmp
mov
outsl
mov
outsl
xchg
lret
mov
push
cld
lock
rcrb
sbb
ret
jecxz
add
and
xlat
and
mov
aam
call
mov
arpl
fiaddl
push
popf
int
jo
das
xchg
push
sahf
pop
and
dec
and
mov
or
movsb
cli
and
dec
sbbb
mov
inc
enter
and
gs
dec
stos
xchg
leave
push
sub
sbbl
cmpsb
shrb
f2xm1
mov
sti
pop
push
cli
push
xchg
mov
lock
mov
mov
iret
leave
jnp
nop
out
sub
add
dec
add
lret
sbb
xchg
cltd
in
in
sub
dec
inc
jns
mov
xchg
adc
imul
loopne
inc
ret
stc
imul
mov
enter
jne
and
popa
loopne
inc
cs
xchg
arpl
not
shl
shlb
jo
or
xor
mov
add
movsl
add
or
insb
lods
push
mov
outsb
fsubrl
lea
arpl
int3
xor
pop
in
xchg
fsubs
repnz
mov
xchg
lods
icebp
mov
sbb
test
daa
cmpsl
xchg
icebp
inc
scas
mov
jle
xor
and
cmc
pop
dec
dec
ret
pusha
mov
into
mov
in
xchg
scas
sbbl
mov
enter
call
icebp
movsl
or
and
adc
pushf
int3
lret
and
add
sbb
cmc
fistps
mov
mov
xor
sahf
rorl
aad
int3
jp
test
idivl
mov
push
lea
int3
push
lret
mov
fisubrl
mov
lret
jle
loop
rclb
je
mov
cmc
pop
fisubl
out
pop
ja
aaa
adc
lret
mov
rcrl
movsl
pushf
lods
clc
aad
mov
sbb
inc
ljmp
loope
clc
mov
pushf
xor
adc
jl
fistl
fstl
jmp
scas
push
sbb
shll
and
dec
sbbl
insb
scas
jae
pop
ljmp
add
push
pop
fidivl
aaa
xor
ljmp
add
imul
add
push
inc
pop
pop
pop
pop
push
dec
mov
mov
add
sbb
shrb
fisttpll
repnz
push
push
push
lret
lods
adc
mov
jno
add
into
jns
xchg
xor
out
in
addr16
mov
add
mov
xchg
adc
pop
mov
stc
add
jge
adc
push
cltd
iret
jle
sarl
push
xlat
and
jmp
pushf
jg
cwtl
out
pop
sub
or
aas
shl
jmp
xlat
stos
mul
test
push
shrl
aam
ficoms
cli
and
add
pop
leave
icebp
sub
lods
jecxz
ret
mov
lock
lcall
jl
adc
ds
xchg
gs
cmp
ret
pop
cmc
fiadds
mov
clc
adc
popf
push
adc
and
sub
push
lds
loopne,pn
in
stos
adc
push
lret
sti
cmpsb
nop
xlat
and
repz
xchg
dec
test
jecxz
popf
mul
add
mov
sub
in
inc
loope
mov
mov
call
fcomi
add
arpl
push
ret
das
inc
in
cltd
sahf
dec
insb
and
and
or
movsb
cwtl
mov
mov
jl
sub
aas
pusha
out
adc
imul
cwtl
xor
mov
mov
fiadds
jo
div
jecxz
pmaxsw
rorl
inc
out
daa
xor
jns
jns
out
cmp
shrb
dec
dec
js
sti
and
mov
js
outsl
repz
sti
js
dec
fcoml
into
outsl
xchg
dec
bound
mov
lret
push
ljmp
push
ficomps
push
psubusw
mov
cmp
inc
or
popf
loopne
outsb
jo
sub
cmp
xor
rclb
jb
xchg
jecxz
push
jne
xor
sub
rcrl
and
and
and
or
xchg
mov
sti
pop
sbb
or
test
inc
xchg
es
xchg
scas
insl
stos
xor
dec
pop
adc
jle
repz
xchg
xlat
lret
test
pop
or
pop
push
stos
cmp
pusha
and
and
mov
jno
decl
roll
sub
aam
add
mov
mov
lcall
insb
fs
mov
and
scas
cmpsl
inc
ficomps
mov
loopne
ret
adc
mov
mov
xlat
lcall
inc
test
not
lea
xchg
arpl
and
add
and
std
push
rclb
loop
fs
mov
mov
adc
or
add
mov
jle
dec
iret
push
addb
stos
add
je
mov
ret
dec
jns
popf
lret
mov
jb
daa
mov
jbe
faddl
hlt
bound
and
loop
mov
popa
stc
inc
fwait
lret
inc
lcall
lahf
movsb
inc
jb
cmp
cmc
or
sbb
xor
testl
jb
mov
add
mov
sub
pop
testl
mov
lods
add
mov
hlt
xor
mov
push
dec
ret
movsl
mov
enter
or
enter
stc
jnp
add
jmp
mov
lahf
rorb
stc
jnp
mov
cmp
pop
pushf
lock
shlb
sub
int
fildl
mov
lahf
shlb
data16
adc
mov
inc
pusha
lods
lea
movsl
mov
jmp
das
add
mov
fisubl
inc
cs
jle
in
jg
mov
mov
hlt
dec
pop
test
and
outsb
scas
enter
es
mov
inc
and
incb
and
ret
cmc
cmp
push
insb
xor
jecxz
jae
insl
jp
sub
inc
xchg
sub
std
sub
iret
insb
mov
fdivl
mov
in
xchg
roll
push
pop
icebp
cmc
je
xchg
push
sti
lock
mov
mov
jno
cmp
loop
es
cmp
stos
data16
repz
xor
fadd
movsb
mov
inc
xchg
add
insb
xchg
add
jno
adc
cmp
mov
mov
jmp
test
out
jb
sbb
ret
jnp
xchg
es
xchg
lcall
xor
rcrb
xchg
fucomip
out
or
sub
xchg
rorb
dec
lds
cli
int3
add
bound
fs
out
icebp
dec
xchg
outsb
xchg
aaa
daa
jno
push
out
subl
push
mov
and
mov
and
xor
dec
repnz
xchg
fiadds
adc
int3
xor
dec
pop
movsb
les
add
add
loopne
iret
xor
ss
pop
insl
xor
push
out
iret
mov
loop
mov
jnp
stos
or
mov
arpl
mov
sub
and
jle
mov
xor
cmp
push
lahf
js
dec
sub
enter
push
xchg
inc
cmp
add
outsl
clc
je
lea
aad
mov
outsl
daa
xor
aam
mov
adc
inc
fsubs
jno
sub
jb
dec
addr16
pop
sub
mov
xor
stos
inc
inc
jg
mov
add
lock
lcall
aas
loope
cmc
dec
mov
in
cmp
ds
repnz
outsb
ja
inc
adc
dec
arpl
pop
ret
lret
rcpps
orb
leave
das
fisttpl
cltd
adc
xchg
adcl
subb
jb
or
ljmp
sub
jge,pt
mov
cmpsl
cmp
mov
pop
and
jo
inc
pop
ficoml
push
shlb
xchg
sub
fiadds
out
jns
mov
xchg
cmp
loop,pt
mov
enter
push
shrb
cli
bound
add
inc
inc
inc
push
inc
push
push
push
outsl
pop
mov
cmp
mov
add
in
test
cmp
hlt
lea
adc
or
movsl
push
cmp
sub
pop
add
cld
aas
arpl
repz
lods
jp
pusha
sub
adc
adc
cmp
xlat
loope
pusha
ljmp
aas
mov
lcall
in
mov
xchg
pop
dec
cmp
sbb
dec
xor
cmc
out
inc
xor
leave
enter
cld
add
popf
mov
fsubs
cmp
push
pusha
inc
push
cmpsl
nop
adc
loope
xor
repnz
imul
std
aad
in
ret
dec
test
sub
loopne
mov
into
xlat
loop
mov
cmpsb
cmpsl
cld
and
les
xor
pop
push
pop
xchg
not
adc
pushf
dec
loope
inc
xchg
jno
and
jo
js
mov
movsb
scas
jae
pusha
inc
mov
cli
add
sahf
rol
popa
fidivrs
js
xor
push
sub
fxch
or
mov
imul
cld
int
daa
out
lcall
adc
sbb
in
xor
or
pop
shl
add
mov
cmpl
enter
xchg
push
sbb
dec
mov
pop
test
cli
std
lcall
mov
push
sbb
or
sbb
test
add
inc
jecxz
stos
mov
ret
cmpsl
push
sbb
das
test
mov
push
push
add
xchg
xlat
aam
fcomip
ffree
loop
in
fwait
cs
cmpsl
bound
mov
test
push
cmp
cmp
sub
xchg
lods
and
ret
addl
jmp
lahf
shlb
fisubrl
xor
sbb
jae
dec
jge
loopne
jnp
cs
jmp
fcomp
movb
jns
jne
jecxz
adc
sti
mov
pop
mov
movswl
cmpsl
pushf
push
fs
jle
sub
lds
test
xchg
insb
xchg
lods
dec
jnp
sub
mov
cmpsb
repz
std
lret
lea
lcall
mov
push
mov
or
mov
mov
popf
xor
pop
sti
outsb
cwtl
insl
pop
shll
pop
mov
and
incl
pop
sub
xor
dec
jo
mov
cs
movsb
je
inc
rcrl
add
sbb
out
xor
mov
and
clc
add
jae
xchg
fwait
lfs
sub
outsl
adc
fisubl
call
sbb
aad
mov
xlat
inc
out
mov
jnp
loop
in
fcomi
push
test
movsl
mov
aad
lods
adc
insb
jp
mov
lea
push
push
data16
cmpl
xchg
int3
stc
out
in
pop
stc
pop
xchg
int3
adc
ds
sahf
add
imul
cmp
dec
xlat
cld
cmp
popa
push
rcrb
cmp
mov
xchg
jne
bound
repz
xchg
fwait
addl
pop
inc
je
sbb
mov
in
out
out
mov
adc
push
sub
adc
jp
cmp
fidivrs
les
cmp
sbb
xchg
add
insl
addr16
xchg
mov
inc
push
xor
xor
aas
iret
aam
sbb
jg
fwait
nop
inc
push
mov
subb
mov
mov
pop
out
movsb
xchg
sti
cmpsb
pop
pop
jno
mov
xchg
mov
pop
jae
inc
cmc
xor
xor
sbb
sbb
out
rcrl
push
and
adc
push
lret
imul
mov
movsl
push
decl
lret
jbe
push
ret
rcrb
scas
les
adc
popa
int3
ret
in
loope
into
shrl
and
rcl
pop
jmp
fsubr
jl
push
hlt
scas
cltd
aas
adc
aam
and
push
cmc
mov
in
aaa
imul
notb
add
daa
push
add
lahf
cli
adc
sbb
dec
insb
inc
push
push
jne
lods
lods
push
das
ja
pop
idivl
mov
pushfw
push
mov
xorl
cmp
inc
movsb
xchg
hlt
pop
mov
pop
negl
mov
cmpsb
and
mov
dec
push
and
and
lahf
xchg
adc
push
jb,pn
sub
push
jp
cmp
movsb
fisubl
rclb
push
jge
sbb
mov
fistl
xchg
cmpsl
adc
push
mov
pop
test
test
lods
cmc
mov
cld
iret
in
push
push
movups
cmp
fs
mov
pop
inc
adc
mov
cmp
mov
stc
in
ret
pop
scas
push
pop
das
fidivs
ret
in
testl
xor
notb
jg
popa
stos
jo
insl
jae
jo
fmulp
dec
adc
test
push
pop
pop
mov
mov
add
lahf
mov
rcrb
rcll
mov
shrb
jmp
les
cmc
clc
jl
mov
cmc
in
dec
insb
out
push
enter
pusha
and
in
scas
aad
dec
push
dec
shrb
lahf
mov
idiv
mov
lcall
call
jnp
fmull
xchg
fstpl
add
push
cmp
mov
stos
push
sub
nop
push
test
and
mov
mov
jno
aas
das
xchg
roll
fbstp
lds
ja
jae
cmp
push
push
push
adc
mov
push
inc
popf
sub
push
mov
xchg
push
shr
or
das
cs
inc
mov
test
test
in
cld
inc
xchg
cmp
pop
add
pop
rcll
popa
lods
shrl
mov
sbb
xchg
adc
xchg
ror
jno
fimuls
js
mov
jb
jp
test
fnsave
aaa
nop
jo
jo
cmpsb
gs
popl
push
sbb
mov
loopne
lret
cwtl
add
add
push
dec
pop
dec
pop
push
stos
mov
stc
push
cmc
fpatan
and
add
inc
dec
movsb
push
xchg
or
cmp
pop
adc
sbb
xchg
jno
inc
nop
das
ja
cmc
scas
js
jle
pop
mov
dec
bound
popa
aaa
aam
jp
ds
push
adc
jp
scas
fcoml
fistps
push
popf
dec
cmp
enter
scas
push
or
add
adc
push
mov
insl
jb
jbe
and
pop
dec
aaa
push
and
stos
add
leave
cmpsl
jno
mulb
ret
rep
dec
out
aad
das
cmp
rcrl
jne
add
cwtl
push
adc
mov
xchg
or
jge
jecxz
and
mov
or
and
xchg
mov
xorl
daa
loop
lods
stos
jecxz
inc
or
cmp
jno
xchg
mov
mov
lock
cmp
push
cmpsl
into
or
sbb
addl
fisttpl
add
jecxz
in
push
sahf
stos
fistpll
sbb
push
push
jno
push
scas
cld
add
fisttpll
xchg
ret
movsl
or
sub
popf
lahf
cli
and
inc
ja
push
je
loopne
xchg
inc
push
jo
push
pop
sub
in
ds
push
mov
daa
push
push
pop
popa
mov
popf
sub
adc
lret
add
lret
xchg
test
sbb
adc
mov
sub
inc
insb
stos
cs
cmpsb
or
inc
mov
emms
out
add
inc
jb
and
jbe
sub
inc
jae
int3
pushl
out
in
jle
add
jb
xor
pop
pop
sti
pop
adc
in
add
int3
call
mov
jge
iret
mov
or
cli
fdivrs
mov
cmp
push
pop
sub
call
dec
hlt
int
dec
lcall
test
pop
pop
pop
call
stos
adc
minps
dec
mov
cmpsb
data16
xchg
cltd
lock
xor
push
ljmp
lds
pushl
jmp
popf
sahf
stos
nop
mov
ficompl
in
cli
pop
xor
sbb
pop
adc
dec
stc
inc
xchg
inc
fdivl
mov
mov
popa
pop
rol
ds
mov
jno
ret
push
arpl
mov
push
fcoms
mov
jecxz
fs
xor
shrl
jns
inc
inc
imul
repnz
dec
pushf
mov
in
and
sub
pop
mov
in
mov
das
jnp
mov
mov
cli
jae
adc
jno
loop
and
and
dec
adc
cmp
test
push
or
popa
mov
mov
adc
jbe
ret
sti
imull
es
or
sub
sbb
mov
cs
data16
dec
cld
mov
loope
mov
jge
xor
mov
inc
rcrb
add
sub
inc
push
ja
mov
fmull
jne
jb
faddl
loopne
insb
lret
dec
adc
pop
cwtl
inc
aas
mov
mov
adc
mov
pop
roll
sub
stos
pop
pop
dec
adc
add
pop
jne
in
mov
fs
mov
jg
fadds
mov
adc
enter
pop
rcll
pop
push
dec
adc
icebp
sub
dec
inc
push
cmp
push
sub
addr16
xor
or
fmulp
and
or
pop
push
mov
insl
int3
adcl
sbb
out
mov
jno
loop
pop
adc
roll
ss
data16
outsl
aaa
in
fsubp
mov
stos
hlt
sub
movntq
lahf
dec
cli
xor
and
int
popf
pop
popa
sbb
pop
xchg
xchg
jg
pushf
mov
fildl
dec
dec
rcrl
sub
pop
gs
inc
mov
jle
arpl
push
push
je
sbb
rcr
push
cld
inc
ja
scas
cwtl
cmp
push
jns
cs
or
adc
dec
adc
es
ds
mov
mov
cmc
mov
cmp
xor
out
mov
cmp
lea
jns
pop
ds
sarl
pop
lock
lea
lret
in
stc
std
sbb
stc
in
and
fists
adc
test
iret
jnp
ret
ljmp
cmp
in
mov
cmpsl
fldcw
adc
das
inc
addr16
sub
addl
xchg
decb
loope
cmc
dec
pushf
xor
ss
dec
inc
sub
test
cli
mov
mov
shlb
mov
sub
and
outsb
ret
leave
mov
cmp
cmp
ljmp
push
jmp
cmp
adc
mov
int
sub
add
clc
push
pop
xor
lock
vaddss
jg
inc
rcr
lahf
mov
jp
push
sub
and
xchg
sub
mov
xchg
pop
mov
dec
mov
or
add
in
loopne
mov
sub
mov
inc
mov
cmpsb
adc
cmp
lock
jo
fidivrs
pop
sbb
mov
xchg
loope
lret
jg
push
leave
cmpsb
dec
in
rcrl
jge
dec
xor
loopne
out
push
or
mov
mov
and
xor
fsts
movsl
xor
push
jg
pop
lea
jns
fsub
and
movsl
mov
inc
or
xor
jae
xchg
mov
inc
mov
mov
ficompl
adc
lods
mov
add
shlb
sarl
lods
xchg
mov
push
pop
cmp
fwait
aas
shlb
sti
fs
int3
mov
ss
in
xor
and
pop
ja
jns
push
add
and
movsb
call
mov
aam
add
add
dec
push
pop
push
pop
dec
idivb
jns
outsb
inc
dec
stos
mov
add
push
rol
imul
sub
out
cmp
mov
pop
cmp
lock
cmp
dec
cwtl
and
cmp
inc
arpl
push
mov
xchg
sub
inc
pslld
fwait
lcall
cmpsb
jne
loop
sub
daa
dec
push
pushf
mov
ret
clc
sbb
out
pop
in
or
loope
push
sbb
mov
push
or
lock
jle
fidivl
outsl
xchg
aad
dec
cli
or
push
test
mov
mov
fs
mov
sbb
mov
lock
or
xchg
lahf
mov
jmp
inc
pop
xchg
test
dec
jb
mov
mov
rolb
cli
das
hlt
cmc
adc
dec
mov
rcrl
ret
ss
lret
fisttpl
and
xchg
das
mov
cltd
enter
jnp
xor
out
jl
fists
or
scas
fisttpll
ss
dec
ffree
test
lahf
jge
add
mov
jp
sub
push
sbb
xchg
ret
addr16
push
cmp
mov
dec
sub
fscale
xor
inc
ds
sub
stc
xchg
adc
dec
pop
in
iret
call
les
push
adc
loop
mov
pop
add
mov
ss
mov
rorl
mov
popa
mov
xor
add
inc
push
ffree
cmp
test
inc
out
fnstenv
es
pushf
mov
stos
outsb
lret
add
neg
movsb
jnp
inc
cmp
sbb
addr16
pusha
lds
xor
ret
std
sub
mov
rol
jbe
jg
nop
daa
dec
sti
jg
and
mov
insl
and
lcall
lret
stc
push
cltd
sub
mov
jno
fdivl
imul
mov
es
dec
stos
ds
push
xchg
ljmp
xchg
sbb
inc
pop
out
ja
cltd
inc
push
outsb
fstpt
jmp
loop
cmp
dec
dec
in
push
mov
iret
sbb
js
add
adc
aam
add
leave
inc
cmpsb
push
aaa
adc
xor
into
xchg
sub
ret
mov
ljmp
dec
data16
lahf
inc
xchg
pop
ret
push
cmp
fs
cmp
sbb
outsl
cld
fistl
inc
mov
xchg
dec
and
xor
and
mov
dec
pop
sub
lds
mov
or
sub
pop
pop
pop
add
ret
shrb
push
cli
sub
adc
nop
mov
sub
lods
cmp
outsl
inc
aaa
pop
xor
sbb
out
je
outsb
adc
xor
es
xor
int
sub
push
mov
les
xabort
cld
test
addb
test
aam
shlb
arpl
out
ret
cwtl
lret
add
ret
out
or
push
push
es
fsubrs
push
sbb
dec
mov
lods
add
mov
dec
es
mov
push
mov
dec
sub
fists
nop
mov
push
fcomip
add
ljmp
cltd
dec
daa
mov
inc
test
loopne
cmp
hlt
pop
dec
fucom
movb
inc
out
push
cmp
popf
sarl
push
jno
insb
sub
test
arpl
aas
mov
inc
push
test
int
mov
lock
sbb
and
mov
xchg
into
pop
lret
test
xchg
das
or
push
lods
or
xchg
popa
orl
inc
sbb
fwait
cwtl
fdivs
pop
mov
cltd
xchg
ds
mov
push
shll
xchg
data16
pop
pop
xchg
mov
push
popa
jo
lods
jl
lea
inc
ss
dec
mov
sbb
leave
or
and
pop
mov
js
ret
push
add
mov
jge
push
arpl
mov
inc
mov
test
dec
pop
mov
lock
sub
add
loopne
cmc
jmp
cmp
lods
and
int3
pushf
push
ds
in
enter
xor
nop
loope
adc
add
ret
sbb
jle
mov
sub
cli
jp
aam
push
add
adc
push
sbb
imul
and
mov
and
xlat
mov
or
push
mov
sbb
insl
daa
ljmp
xchg
addr16
cmp
xor
cmp
repnz
iret
mov
imul
lahf
push
lea
lea
mov
icebp
gs
inc
sbb
push
cmp
pop
cwtl
push
xchg
add
mov
sbb
lret
in
loop
pop
je
stos
cmc
icebp
push
cld
sbb
mov
decb
cwtl
fsubrl
popa
out
xchg
ja
and
std
push
adc
scas
in
push
jge
test
jbe
dec
adcb
xor
jno
icebp
pusha
sbb
movsl
mov
xor
adc
addb
add
lret
test
outsl
flds
sbb
jae
pop
sbb
jne
pop
test
and
sti
std
out
inc
or
stos
stos
mov
scas
cli
insl
dec
cltd
ret
cmc
fldcw
jno
insl
pop
or
call
orl
stos
lret
jb
hlt
xor
and
clc
ds
cltd
jp
daa
les
call
stos
jb
shrb
cmp
rcll
jno
and
dec
mov
jp
push
fbstp
lods
xchg
inc
pop
cmp
sbb
sbb
scas
sub
je
cs
lods
jns
mov
and
in
fimull
mov
clc
jge
push
int
das
fwait
pusha
daa
in
and
or
daa
ret
rorb
add
pop
pop
dec
push
dec
push
pop
pop
mov
lds
xor
add
mov
add
shll
xorl
dec
sbb
push
push
in
inc
bnd
add
jmp
xor
pop
pop
sbb
and
scas
lret
inc
adc
test
and
in
sbb
fldt
aaa
cld
ljmp
and
lret
mov
pop
push
and
rorb
scas
andb
and
lods
inc
out
sbb
outsw
cmp
push
aaa
mov
lret
pushf
adc
imul
mov
lahf
cli
sub
mov
pop
sub
pop
arpl
lods
inc
jne
hlt
aam
fwait
shll
push
jae
push
pop
sbb
mov
inc
inc
and
ja
nop
test
ja
lea
es
sub
or
stc
or
pop
adc
lea
int3
push
xchg
xchg
push
sbb
jb
push
cs
dec
fisubrl
int
pop
xor
dec
xchg
enter
iret
jns
popf
and
je
shlb
and
mov
mov
icebp
mov
cmpsl
cmc
jp
mov
divl
inc
lds
xor
lcall
orb
or
rcl
pop
pop
je
mov
mov
daa
icebp
sarb
jo
test
adc
jne
hlt
sbb
dec
xchg
aam
push
xlat
std
popa
push
jae
stc
push
out
imul
insb
pop
dec
lcall
sub
pop
out
enter
ljmp
xchg
out
mov
das
clc
adcb
je
in
xchg
push
mov
dec
mov
xor
lods
push
lock
fiadds
jns
scas
mov
das
in
pop
mov
fiadds
mov
imul
out
inc
fcoms
cmp
inc
lret
xor
ja
fsubr
sbb
or
out
gs
je
jmp
jnp
adc
fs
test
mov
jl
jnp
adc
outsb
mov
outsl
sub
lcall
pop
insl
out
ss
insb
sarb
mov
sbb
push
cmpsl
or
lods
jmp
stc
cmp
call
scas
pop
add
and
xchg
in
push
lldt
push
xchg
nop
jno
or
inc
ret
pusha
mov
test
dec
ljmp
mov
pop
and
fistpl
outsb
cmp
jge
aas
push
clc
mov
mov
mov
lds
and
inc
int
lcall
fcoms
aas
fnstcw
cmp
scas
cmpsb
aam
cmp
test
imul
and
ret
fbld
fwait
stc
mov
aaa
test
aaa
in
pop
and
push
adc
data16
pop
popf
mov
adc
in
jg
out
adc
test
dec
or
scas
add
fadds
sbb
sbb
sub
scas
mov
flds
lahf
jmp
notb
icebp
jbe
loope
iret
imul
cltd
xor
push
jbe
cmp
push
rcrb
fxch
loope
and
xlat
je
testb
sahf
repnz
shlb
ret
jne
and
jae
dec
gs
mov
xchg
mov
cmp
arpl
and
xchg
push
mov
cmp
imul
push
jp
or
sub
mov
loopne
lds
icebp
sbb
xor
dec
jb
lea
mov
push
iret
push
inc
ror
pop
notb
jg
xchg
add
test
fs
cmpsl
mov
pushf
hlt
pop
mov
dec
mov
or
bound
mov
inc
pop
sbb
stc
gs
jb
mov
fdiv
mov
das
inc
push
push
repz
adc
pop
test
cmp
pop
pop
jnp
loopne
into
mov
pop
xchg
xchg
push
incl
aas
mov
sub
movsb
notb
sbb
xor
push
jmp
cmp
dec
jbe
fwait
pushf
notl
sti
rcrl
stc
mov
rorl
mov
pop
shlb
jmp
mov
inc
mov
and
sbb
sbb
xor
int3
xor
sti
or
fstpt
aad
mov
mov
xor
adc
xor
xor
mov
icebp
or
push
jecxz
mov
sbbl
dec
test
test
sub
adc
lret
push
sbb
inc
mov
sub
lret
call
scas
repnz
mov
cmc
iret
in
shrl
sti
cmp
jns
inc
mov
jge
mov
mov
cmp
push
loop
stc
and
pushf
mov
loopne
mov
cmp
pop
or
sub
mov
push
add
jecxz
mov
jo
push
clc
mov
sub
push
lret
arpl
in
push
and
xlat
repz
xchg
pushf
mov
mov
or
push
dec
mov
dec
test
aad
subl
popa
leave
push
xchg
inc
out
in
cmpsb
cmp
or
push
in
or
jae
jno
movsl
xchg
sti
sti
cmpsl
daa
cmp
stos
dec
dec
repz
lret
stc
mov
cmp
mov
mov
lds
hlt
xor
jmp
mov
sub
andl
movsb
xor
jae
sbb
jp
or
cltd
xchg
adc
movsl
ljmp
mov
lods
aas
arpl
gs
xchg
cs
daa
sub
dec
add
ja
out
jnp
or
mov
leave
fisubl
outsb
mov
push
imul
dec
pop
push
adc
sub
lahf
sahf
ds
movsb
push
cwtl
pop
movb
jno
pop
inc
mov
mov
movsl
cltd
and
loope
pop
xchg
jmp
stos
push
cmp
push
push
inc
mov
push
inc
and
aad
mov
pop
inc
mov
add
add
push
push
push
inc
push
test
xchg
and
add
std
scas
pop
and
out
je
les
or
xchg
clc
gs
and
stc
xorl
pop
push
cld
and
adcb
xchg
rorl
in
pop
jmp
inc
popf
jnp
dec
inc
jb
lret
scas
in
jns
mov
jle
pop
xchg
enter
lods
pop
cmpsb
push
mov
jp
and
lcall
cs
out
hlt
xchg
out
shr
imul
xor
lret
or
ja
dec
in
and
jecxz
outsb
clc
test
sbbb
outsl
insl
xorb
add
int
lret
add
aad
adc
aad
inc
mov
jge
jge
push
out
sub
fwait
xor
ret
cli
lea
shrl
lret
out
dec
mov
cltd
int3
fs
aam
adc
in
loopw
imul
fiadds
stos
dec
ja
sbb
sub
xchg
repnz
in
mov
push
leave
inc
les
mov
daa
dec
ljmp
jecxz
in
jle
sahf
mov
shlb
out
jge
jbe
add
aam
pop
cmp
sbb
div
imul
gs
sub
das
aam
scas
fwait
dec
and
or
hlt
xchg
mov
mov
clc
les
aad
imul
sub
repz
adc
mov
add
adc
cmp
xlat
adcb
pop
fsub
js
das
call
and
imul
aas
cmpsl
je
add
xchg
lcall
test
dec
and
pusha
or
pop
or
cmp
push
xor
fmuls
mov
in
loop
in
sbb
loop
dec
int3
rcll
and
push
xor
mov
insl
mov
jno
push
push
ficoml
mov
or
ss
int
inc
orl
sbb
adc
mov
out
js
fldt
xchg
popa
in
shll
lock
sbb
ljmp
inc
ss
add
jb
fcmovu
xchg
push
test
pop
in
sti
pop
adc
push
sti
test
sbb
int3
sbb
jecxz
sub
cmp
stc
dec
fsts
insl
sub
adc
jl
add
add
dec
sbb
test
pusha
pop
add
in
sbb
mov
out
rclb
pop
xchg
and
xchg
movsb
das
add
push
cmpsb
test
test
ds
ja
pop
in
xchg
sbbl
add
jno
sbb
imul
fcomp
pusha
rcll
out
mov
scas
sub
bound
es
fsubrs
repz
push
push
lret
hlt
jo
dec
bound
or
or
mov
sbb
dec
dec
sti
push
fwait
jae
add
mov
xor
outsb
iret
gs
sbb
sub
aad
cwtl
not
jae
or
cs
pop
push
pushf
and
jmp
sbb
sbb
fimuls
mov
aam
push
int3
or
push
test
sub
inc
jg
aas
ss
aad
push
push
push
ret
jno
cmpsb
sub
sbb
mov
add
sahf
outsl
mov
xor
lods
out
mov
sub
mov
inc
mov
add
sbb
sub
or
sar
mov
dec
imul
mov
mov
jns
fsts
scas
dec
sti
lds
lret
enter
xchg
ss
jmp
mov
jae
sub
mov
scas
adc
push
mov
cmpsl
cmp
repz
xchg
jne
jp
inc
push
out
sub
int3
repz
addr16
popf
rcrl
imul
lods
jnp
fldenv
jb
mov
mov
mov
fisubs
or
fs
cli
xchg
adc
movsb
push
dec
cld
cmp
shrl
mov
dec
outsl
xchg
jo
adc
pop
pop
dec
cmp
or
dec
jbe
mov
pusha
das
pop
cltd
xchg
std
sub
and
lods
or
bnd
stos
xor
pop
test
sub
mov
pop
mov
push
loopne
and
inc
gs
mov
add
dec
mov
jmp
push
xchg
jl
inc
cmc
cmp
jecxz
sbb
scas
mov
fldl
mov
jl
fcoms
and
bound
push
dec
mov
test
lock
push
sarb
and
or
outsl
mov
vandnps
cmp
xor
js
fistpl
test
push
inc
cld
jne
ret
ret
dec
and
data16
mov
or
sub
insb
add
xlat
xorl
mov
add
movsb
aaa
in
mov
out
xor
inc
dec
jl
and
and
call
fdivrl
mov
cmp
loop
mov
mov
mov
hlt
push
scas
lret
jecxz
xchg
aaa
dec
xor
repz
je
loopne
cvttps2pi
jo
add
dec
pop
jmp
sub
mov
lsl
aam
andl
mov
enter
jo
cmp
pop
fsub
pushf
sub
jge
xchg
and
enter
arpl
movsb
enter
dec
xor
push
push
or
subb
rolb
ret
push
cmpsl
or
call
dec
push
inc
andl
ss
or
adc
or
test
insl
rcl
mov
push
test
ret
das
push
cmc
lods
xchg
dec
notb
mov
sub
loope
or
pop
out
filds
lret
xor
sub
addr16
or
push
mov
cwtl
outsl
scas
in
and
cs
inc
jp
jae
call
push
add
pop
inc
dec
inc
pop
dec
pop
pop
inc
cwtl
inc
loop
or
add
mov
add
arpl
out
gs
sbb
jecxz
mov
jno
dec
pop
jno
cmp
es
cmpsl
mov
push
xor
add
sbb
sbb
mov
dec
int3
inc
std
xchg
push
mov
and
and
push
or
cmp
mov
shrb
and
cmp
mov
in
adc
in
xor
pop
and
jle
or
sbb
popa
mov
push
fnsave
out
aas
int3
dec
test
shl
hlt
enter
orb
xchg
pavgb
mov
add
and
sbb
or
and
inc
dec
push
jno
cmpl
cs
cmpsl
jb
pop
and
jbe
cmp
bound
aad
and
mov
and
sti
imul
pop
icebp
add
leave
jb
sub
mov
mov
or
fdivrl
out
shl
mov
inc
xlat
adc
inc
mov
jecxz
and
cld
andl
push
aaa
mov
icebp
leave
mov
loope
cmp
adc
pop
aam
cmp
popf
mov
data16
push
fadds
lods
cmc
insb
insb
xlat
jns
add
mov
nop
or
test
mov
loope
inc
or
mov
js
push
lcall
cmc
hlt
push
fcomi
mov
sar
push
ljmp
jno
rcl
pushf
or
flds
fcomip
xchg
lahf
lock
test
frstor
pop
test
push
xor
dec
dec
out
or
mov
inc
mov
or
dec
or
std
cmp
aad
cmpsl
mov
fs
mov
inc
fwait
out
xor
push
pop
pop
jg
lret
jecxz
pop
js
andb
in
gs
lret
mov
mov
es
xor
and
and
aam
adc
sub
fimuls
andl
or
push
adc
mov
andb
popa
ljmp
or
push
loopne
shlb
fwait
and
inc
mov
dec
jb
add
and
daa
imul
push
stos
test
clc
outsb
test
into
stos
shl
add
sbb
cwtl
pop
ss
pushl
pop
mov
test
cmp
testb
and
das
movsl
sbb
movsb
fisubs
jp
and
or
lea
cmc
aaa
aaa
push
cmp
jae
int
mov
or
xchg
xor
sub
add
xchg
mov
jae
out
dec
cmpsb
test
adc
sub
push
mov
xchg
fdivp
xor
add
sahf
cli
flds
push
cmp
loop
cs
lods
icebp
or
add
test
xor
fisubrs
push
ret
arpl
mov
xchg
mov
stos
cwtl
insb
xchg
sbb
push
fscale
sub
sub
cmp
hlt
cmc
jo
int3
push
stos
int3
stos
in
push
loopne
sbb
mov
negl
fnstenv
lret
mov
inc
roll
lods
sbb
add
adc
dec
or
push
fistpl
sbb
inc
push
pop
bound
ljmp
add
sbb
adc
pop
pop
adc
inc
test
mov
loope
cli
scas
mov
es
imul
es
push
ds
ret
push
cmp
mov
cmp
sub
fwait
push
mov
into
fimuls
daa
push
ret
hlt
jmp
push
sti
add
add
jno
push
test
lods
mov
and
xchg
mov
loopne
sbb
orb
fwait
stos
popf
pop
je
fldcw
scas
jae
sbb
pop
int3
dec
mov
nop
lea
dec
or
push
insb
dec
cli
dec
jg
jbe
mov
and
fcoms
je
push
dec
lock
xchg
pop
jl
mov
push
loope
leave
cmp
addr16
cmp
jns
sahf
sbb
jp
add
movsl
mov
xchg
out
push
adc
mov
mov
std
test
sub
cs
inc
ja
cwtl
lahf
dec
fldt
iret
inc
dec
and
inc
int
sub
add
inc
dec
mov
mov
xorb
xor
sub
adc
xor
mov
inc
pop
mov
xlat
iret
push
clc
ljmp
mov
in
dec
push
xor
dec
outsl
and
or
mov
lcall
mov
sbb
sub
cmp
pop
notb
mov
call
sbb
shll
mov
in
sbb
fisubrl
pop
dec
jmp
pop
or
mov
das
dec
mov
fbstp
mov
add
jp
mov
inc
xlat
mov
xor
pop
loopne
sbb
imul
pusha
mov
jmp
inc
dec
mov
inc
enter
shrl
add
mov
mov
dec
pop
in
cmp
jne
mov
lock
out
sbb
outsl
and
jp
icebp
ror
imul
cmp
mov
cmpsl
mulb
push
movb
adc
call
ja
sarb
push
push
cs
stos
xchg
add
inc
push
nop
and
add
mov
cmp
or
inc
mov
das
int
fnstenv
cmp
iret
jg
std
cli
jg
xchg
insl
xchg
aas
fists
sarl
lock
popa
lods
pop
xor
es
xor
loop
scas
lods
fimuls
sbb
cli
dec
int
cli
orl
and
pushf
shlb
fmul
push
lret
push
or
sub
and
add
add
push
push
push
push
push
inc
rorl
popf
jge
push
int
fadds
add
xor
sahf
and
dec
fildl
adc
mov
icebp
jmp
subb
or
fnstcw
lds
enter
mov
mov
fisubrl
loop
ror
inc
js
xor
push
daa
in
fbstp
jecxz
subb
daa
into
gs
mov
cltd
push
ljmp
pop
imul
jnp
lret
out
jg
cltd
ret
inc
std
push
divb
push
adc
loop
in
rclb
dec
aas
cmp
test
push
pop
subl
lahf
or
xor
dec
jle
adc
cmc
out
or
mov
cmp
call
fisubl
and
inc
sbb
mov
mov
mov
mov
call
inc
dec
ret
adc
fsubl
dec
or
mov
lahf
dec
mov
fnstenv
sbb
push
inc
xchg
fistpll
sub
cmp
mov
mov
pop
ficoms
and
aaa
dec
sub
push
int3
xchg
test
push
mov
cmp
ficoml
add
xor
sub
inc
xchg
add
pop
cmp
push
movsl
xor
testl
push
jl
mov
iret
lret
mov
inc
adc
dec
push
dec
lret
dec
movsl
orb
clc
pop
mov
push
rsm
dec
sbb
jb
pop
mov
and
xchg
jo
adc
int3
cwtl
add
xlat
adc
jne
jbe
jecxz
cld
sub
xchg
xchg
popa
aas
stc
pop
mov
adcl
stos
push
sbb
adc
add
cmp
push
mov
xchg
dec
cmp
ret
cmp
cmc
and
ja
push
popf
loopne
inc
mov
ljmp
mov
repz
pusha
outsl
inc
mov
jg
push
lss
mov
xchg
push
and
xor
mov
jae
bound
inc
mov
aaa
sub
pop
ja
das
or
mov
mov
inc
pop
iretw
and
adc
mov
cmp
mov
mov
pushf
and
xor
fwait
jo
das
insb
add
fisubrs
fidivl
shr
sbb
jno
jp
lds
jb
js
mov
cltd
fwait
and
or
inc
insb
shrl
sbb
jg
push
sbb
sub
xchg
inc
jnp
fidivl
sbb
adc
pusha
in
jmp
popa
lret
and
pop
push
sub
mov
pop
insl
sub
pop
ja
gs
sub
inc
pusha
scas
sbb
push
sbb
rcrl
adc
cmc
leave
dec
insl
add
pop
nop
xchg
xchg
cmp
mov
enter
jno
scas
out
mov
es
or
shll
xor
aam
push
shl
adc
enter
out
mov
or
or
mov
ss
rorb
and
stos
add
enter
ljmp
ja
mov
inc
mov
pop
iret
loop
loopne
xchg
mov
mov
sbb
mov
orl
dec
movsb
mov
push
mov
xchg
jns
testl
mov
cltd
js
scas
ret
sbb
nop
insb
mov
or
imul
imul
pushf
or
bound
xor
call
add
and
outsl
hlt
dec
push
in
les
push
scas
test
pop
mov
arpl
out
jne
sub
es
lcall
adc
jl
nop
sub
add
loop
insb
push
pop
or
push
lds
sbb
and
pusha
sbb
ret
fcomps
nop
inc
divb
push
fcoms
cmc
xor
adc
outsb
sbb
lret
xor
stos
add
call
jecxz
inc
mov
aam
call
xchg
push
icebp
repz
mov
imul
add
push
lret
and
or
imul
xchg
mov
mov
push
xor
pop
push
scas
cmp
divl
mov
test
test
add
cltd
sbb
and
rclb
xor
jbe
jne
addr16
cmp
cmp
pop
outsb
into
xchg
aas
pop
mov
add
lods
xchg
into
lods
cmc
sub
int3
fs
xor
push
xchg
clc
ss
inc
push
dec
xchg
orl
pop
push
mov
push
sti
jnp
idiv
add
lds
testb
clc
mov
pushl
mov
pop
out
jns
clc
push
push
add
fsubl
into
mov
cmp
mov
leave
mov
fdivl
mov
fs
iret
and
jb
leave
dec
repz
mov
mov
pop
idivb
push
cmp
dec
gs
sbb
cltd
jmp
pop
sbb
xchg
jle
je
or
xchg
mov
push
cmp
aas
or
ficoms
mov
dec
sub
xchg
sarb
jns
fdivs
test
pop
xchg
inc
mov
insl
jle
and
sub
cmpsl
sub
fwait
mov
pop
lret
push
mov
fidivs
das
cmp
sub
andl
push
lret
adc
mov
str
cmpsl
cmp
dec
repnz
pop
sub
lods
push
and
push
xlat
pop
pop
push
jl
mov
mov
repz
jo
mov
jns
into
mov
rclb
or
and
in
xchg
stos
jmp
mov
or
aad
jge
push
lods
pop
xchg
aam
das
jecxz
mov
dec
cli
hlt
xchg
mov
lock
enter
ljmp
push
mov
imul
add
push
push
pop
push
pop
pop
xchg
stos
mov
ds
filds
add
pop
cmc
jb
fs
add
pop
lods
mov
in
pusha
xchg
rorb
aas
ret
sub
clc
xchg
xor
outsb
in
xchg
movsb
lcall
loop
add
orb
gs
cmp
sahf
adc
pop
dec
pushf
mov
lods
je
mov
pop
mov
sbb
mov
cli
cltd
xlat
test
jl
push
call
push
mov
push
fs
sbb
sub
and
insb
sbb
mov
fistpl
clc
dec
and
or
rorb
outsl
and
mov
ret
enter
pop
xor
or
xor
mov
or
loopne
cmc
mov
mov
cmpsb
and
push
pop
sbb
mov
adc
and
pop
lret
xchg
pop
dec
loope
and
and
jg
lret
cmp
cs
fstpl
push
inc
jecxz
dec
test
rorb
sub
xchg
dec
pop
shrb
jle
les
cmp
jmp
push
xor
mov
lods
ret
xchg
cmpsl
data16
push
xlat
push
add
adc
popa
cmp
insb
fs
cmp
mov
pop
xchg
lahf
andl
adc
jmp
or
cli
cwtl
nop
out
mov
mov
in
inc
or
add
std
lret
push
daa
mov
clc
insb
roll
push
lcall
test
cltd
or
repz
jecxz
cltd
cmp
cmp
xchg
xor
pushf
dec
mov
out
sbb
ret
push
pop
push
adc
or
add
xchg
scas
mov
jns
mov
icebp
imul
sbb
sti
mov
scas
sub
lret
cmpsl
xor
and
daa
adc
fisubs
push
xchg
xchg
pop
adc
lea
xor
jg
test
and
into
cld
xchg
shrl
lahf
imul
xchg
repz
ss
sbbb
cli
inc
or
lods
lret
popf
imull
xor
inc
jg
scas
cmp
mov
inc
loope
nop
test
xor
inc
mov
in
cwtl
aam
shr
cmc
inc
mov
dec
mov
jle
scas
repnz
jge
xchg
push
cmpsl
lret
cwtl
adc
orb
ljmp
ljmp
jmp
insl
mov
sub
scas
mov
cmpsl
inc
jg
clc
sub
in
xor
mov
xor
pop
pop
in
das
inc
inc
dec
sub
inc
jb
mov
inc
xor
stc
jl
or
int3
xor
outsb
das
in
repnz
fnstcw
mov
out
xor
sbb
mov
movsl
pop
subl
mov
daa
xor
adc
mov
sbb
fs
fsub
bound
mov
jns
into
into
jb
mull
mov
and
test
bnd
gs
cltd
sub
or
scas
xor
sub
jo
lock
or
xor
repz
inc
sahf
mov
daa
scas
and
mov
scas
ret
sub
push
arpl
pushf
mov
aad
rcl
xchg
cmp
scas
stos
sbb
movsl
inc
mov
pop
stos
inc
adc
sbb
xor
cmp
cmp
push
cld
mov
mov
jmp
xchg
aaa
add
dec
jnp
or
push
sbb
sbb
je
mov
cmp
jl
inc
push
lret
dec
movsl
pop
arpl
jae
test
mov
aaa
es
dec
pop
adc
loop
pop
mov
xor
inc
inc
sbb
movl
inc
adc
mov
pushf
arpl
pop
jo
xchg
push
out
lret
jmp
mov
lods
lcall
xchg
ljmp
repz
push
mov
inc
pop
les
in
sbb
lds
movb
mov
mov
and
jo
xchg
adc
insl
in
ja
cli
and
adc
insl
jo
and
test
push
mov
xchg
test
or
pop
or
test
jecxz
mov
scas
jne
cld
jg
mov
imul
jmp
mov
mov
dec
and
mov
popf
pop
orl
int3
xchg
stos
rcrl
sahf
dec
and
ret
stc
gs
pop
and
sbb
cwtl
cli
push
outsb
cmp
pop
sbb
inc
lret
jb
mov
dec
insb
sti
ret
mov
cmpb
cld
mov
cmp
jno
jb
adc
push
mov
mov
xor
clc
nop
shlb
je
dec
stos
call
xor
mov
add
add
mov
or
and
cmp
sbbl
mov
cmp
or
mov
and
ja
lret
idivl
mov
sahf
outsb
rclb
sbb
flds
or
into
sub
mov
cmpsl
push
inc
and
sub
cmpl
das
push
mov
mov
pop
xor
mov
in
cwtl
push
dec
inc
insb
into
pop
add
addr16
std
jbe
cmova
fstps
icebp
stos
and
mov
pop
push
xor
orl
roll
sbb
cmpsl
into
pop
or
inc
movsl
movsl
mov
mov
jecxz
jl
cmp
mov
incb
xchg
or
and
loop
test
int
fsts
sbb
rcrb
xchg
pop
sbb
fidivl
xor
or
arpl
sub
int
xchg
cwtl
adc
jns
sbbb
pop
lods
inc
fnstsw
jecxz
pop
mov
fidivl
add
add
push
push
pop
push
dec
pop
idiv
jle
loopne
add
mov
add
add
dec
push
cmp
and
mov
sub
fldl
and
mov
aaa
mov
movsb
das
mov
bound
add
sub
xchg
scas
push
push
sub
push
popa
or
mov
xor
hlt
gs
gs
lea
out
and
push
pop
and
sti
repnz
or
jno
xchg
int3
mov
loop
loop
mov
addr16
jae
leave
mov
xlat
inc
cmp
lahf
icebp
lret
mov
cmpsb
sbb
in
aam
adc
pop
cmc
pushf
shlb
lea
xchg
dec
mov
shll
mov
mov
in
dec
shl
dec
add
fmull
loopne
xchg
pop
jl
add
fcompl
imul
sub
lock
lret
xlat
sub
pushf
and
pushf
sub
int3
mov
mov
adc
stos
push
mov
shl
icebp
pop
scas
outsb
aaa
cmp
add
aas
orl
ds
mov
not
out
out
stos
js
sahf
or
cs
add
sub
ljmp
push
imul
nop
aaa
scas
lcall
sub
jmp
in
jbe
adc
dec
mov
in
popf
in
scas
insb
inc
sbb
lods
ret
push
lret
in
rcrl
loop
lcall
mov
jp
or
dec
pop
push
in
mov
mov
jo
out
call
test
in
ds
imul
pop
imul
dec
aad
sbb
lea
xchg
in
mov
cld
dec
push
imulb
lahf
push
or
inc
nop
ret
test
add
push
mov
loop
fisubl
inc
roll
rorb
andl
cmc
inc
pop
mov
data16
cltd
test
out
jnp
pusha
adc
and
pop
lods
mov
stos
adc
mov
jbe
jg
ret
and
test
inc
jo
lock
mov
es
mov
jae
inc
pusha
dec
push
movsb
cmp
xor
std
mov
int3
popa
pusha
daa
movl
add
push
push
std
sub
mov
xchg
lods
test
test
iret
sub
jne
inc
push
add
xor
lods
mov
test
bound
insl
stos
cmpb
or
mov
jno
movsl
or
add
pop
enter
in
mov
insl
cmpsl
push
pop
and
scas
sbb
ljmp
sahf
cmp
inc
mov
out
sub
mov
stos
sub
xchg
mov
xchg
jp
scas
mov
or
inc
xlat
stos
fimull
push
dec
jl
sbb
shlb
xlat
mov
jg
fidivs
and
sahf
in
mov
xchg
shrl
mov
dec
xlat
push
cmpl
dec
lahf
xchg
push
int
lret
stos
inc
es
push
in
add
pop
pop
mov
add
inc
adc
cld
ja
icebp
adc
mov
xchg
mull
mov
mov
enter
mov
stos
cmp
pusha
lret
cmp
fdivrs
xlat
pop
fnstsw
xorl
rolb
into
aad
leave
sbb
scas
mov
jg
insl
dec
test
sbb
push
adc
loop
outsb
jge
daa
push
mov
sub
scas
fwait
ljmp
jno
ret
int3
testl
loope
fsubs
int
inc
fmuls
jmp
lods
mov
adc
cmc
mov
arpl
pop
sub
xchg
jae
into
cmp
rolb
dec
jle
mov
mov
sbb
lret
loopne
pop
sar
xchg
scas
je
data16
insb
xor
push
les
fidivl
addr16
jg
scas
imul
ja
add
pop
mov
add
inc
and
jmp
adc
push
jge
mov
pop
fadds
inc
out
adc
in
fsubrl
xchg
push
and
ffree
clc
insl
dec
shll
sarb
and
ret
bound
inc
adc
roll
xchg
into
sbb
and
dec
adc
nop
in
inc
lds
inc
dec
push
push
sbb
and
dec
rcll
fidivrl
ja
sbb
and
mov
xchg
mov
test
xchg
daa
mov
sarb
dec
xor
xchg
gs
gs
stos
lods
loope
in
mov
push
out
dec
mov
adc
mov
jo
adc
xchg
push
lock
pop
sbb
outsl
push
outsb
hlt
fmul
mov
pop
aam
mov
shr
pop
inc
sti
outsl
out
sbb
mov
imul
decb
and
adc
incl
aad
arpl
mov
scas
or
mov
cmc
ja
push
jbe
fwait
test
ja
scas
sbb
adc
cmp
adc
outsb
int
and
sub
lods
adc
hlt
push
dec
jecxz
xchg
push
or
inc
js
test
pop
mov
sub
sbb
jmp
adc
jno
iret
and
stos
insb
jns
ret
add
jg
add
add
sarl
ret
jp
push
lods
sbb
inc
into
xchg
sub
into
stos
scas
mov
cltd
add
rclb
pop
cltd
push
je
dec
rolb
cmp
adc
lock
mov
or
lret
cli
iret
ficompl
stc
pop
sar
dec
outsl
cld
mov
popa
adc
pop
nop
cmpsb
xor
dec
lea
mov
pop
lock
leave
mov
or
sbb
outsb
or
fs
and
or
loop
push
fs
add
pop
sahf
fsubr
nop
and
jg
pop
imul
mov
or
dec
popf
fcomps
pop
xchg
pop
flds
inc
mov
icebp
ja
fstps
inc
and
lds
jmp
adc
jmp
cmp
outsl
das
test
mov
stos
pop
cmpsb
xchg
movsl
ret
add
das
jne
fdivrp
and
inc
inc
inc
pop
inc
pop
pop
pop
mov
push
mov
test
lret
add
mov
add
mov
in
das
rcll
adc
xor
sarb
imul
push
shrl
push
ss
inc
scas
add
cmp
js
shl
pop
cmc
or
out
push
and
ja
add
lock
popa
out
or
pop
das
test
xchg
or
pop
or
push
mov
fs
cmp
movsl
pop
dec
sbb
or
pop
les
xor
mov
push
out
fwait
sub
pop
xchg
clc
push
stos
sbb
std
xor
add
mov
mov
call
aaa
inc
cmpsb
in
or
jl
mov
scas
and
pop
enter
or
xor
cmp
pusha
inc
pop
call
sub
sub
sub
push
test
cmpsl
mov
pop
xchg
rcrl
shlb
sub
or
xchg
icebp
inc
icebp
in
fadds
ljmp
adc
jae
jnp
dec
punpcklwd
cmpb
lcall
or
clc
pop
lcall
jns
and
loope
xchg
dec
lods
loop
cmp
int3
fs
pop
jecxz
imul
in
rcr
xchg
leave
loopne
sub
xchg
hlt
cmp
lret
clc
pop
ljmp
or
cli
dec
and
and
repnz
ret
adc
inc
sbb
sbb
stos
sarb
ds
sub
subl
daa
es
mov
push
dec
xchg
data16
outsl
xor
push
mov
cmpl
rorl
cld
cld
xchg
jns
xor
add
clc
in
cmpsl
mov
add
mov
adc
enter
or
stos
imul
mov
cmpsl
or
outsl
stos
mov
pop
les
push
mov
push
sahf
ljmp
bound
jae
dec
or
cmpsl
icebp
push
inc
std
xchg
push
xchg
movb
shll
rorb
lret
xchg
jl
mov
pop
pop
fcompl
out
stos
or
test
mov
rcll
imul
pop
mov
imul
xor
and
pusha
into
dec
lea
call
mov
jle
gs
or
push
popa
fwait
neg
mov
jns
sub
lods
cmpsb
xchg
adc
sbb
mov
mov
aad
xor
test
dec
fcomi
cmp
dec
fildll
aas
gs
in
xchg
jnp
dec
in
test
xchg
push
push
fwait
mov
jne
aad
lret
or
jge
inc
bnd
daa
inc
pop
sbb
test
lahf
jno
addr16
or
sub
dec
push
push
addr16
dec
add
xchg
jb
and
daa
fxch
cwtl
repnz
imul
fwait
jns
data16
jecxz
inc
in
pop
aas
sti
aad
std
movsl
cwtl
mov
jle
shrb
lock
ljmp
mov
sub
push
cmpsl
cmpsb
inc
mov
mov
add
cmpsl
dec
mov
fs
xchg
cmpsb
mov
jp
xchg
adc
mov
cmc
dec
iret
xor
movsl
dec
adc
cmp
cmp
pop
or
jns
jge
mov
orb
cmc
fsubs
mov
pop
jae
leave
stos
test
test
sbb
in
mov
movsb
mov
jno
xor
xor
popa
aam
test
loope
xor
jg
cmp
fwait
hlt
xor
loop
test
stos
push
sub
xor
xchg
mov
loopne
inc
or
pop
fdivrs
dec
movsb
in
rcl
cmp
xchg
out
out
xchg
xor
push
subl
cld
xor
jno
into
in
inc
xor
popf
sub
decl
insb
lods
fs
enter
push
add
or
test
iret
stc
mov
xchg
mov
pop
fs
jb
jb
scas
imul
push
push
jmp
or
fidivs
xchg
fsubl
mov
mov
test
or
fcoml
insb
or
xchg
int
adc
inc
inc
dec
add
jbe
push
aam
aad
jns
cmp
or
pop
faddl
sbb
imul
ret
cmp
test
pop
in
dec
cltd
enter
dec
dec
mov
xor
loopne
xchg
pop
jb
in
inc
out
ljmp
test
scas
pop
or
push
repnz
pop
mulb
sub
sbb
add
out
sti
add
jge
fdivrp
test
lea
inc
outsb
pop
inc
rcl
fmuls
ret
xor
jb
repnz
insl
fwait
xor
mov
sarl
dec
mov
dec
dec
ficoms
test
addr16
lahf
cmpsb
repnz
push
xchg
stos
push
inc
test
xchg
inc
pushf
std
xor
shll
dec
mov
mov
lea
ds
inc
test
rclb
rorb
outsl
mov
clc
jge
jmp
mov
insl
mov
jg
nop
cmc
negb
cmp
outsl
hlt
sub
or
fistpl
jecxz
xor
xchg
out
in
filds
xor
out
sbb
mov
repnz
cmp
mov
pop
aas
icebp
mov
inc
jg
gs
push
cmc
mov
push
xchg
xor
fnstsw
mov
rcrl
sbb
enter
xlat
stc
jo
push
adc
jne,pn
dec
test
pop
test
push
push
or
dec
rcll
cmp
sbb
jae
ret
jb
pop
fdivrl
push
xchg
xchg
mov
aas
jbe
and
dec
lcall
sub
xor
xor
es
testb
pop
in
jge
in
loopne
push
mov
add
fs
jne
pushf
test
inc
leave
xchg
xor
adc
xchg
push
mov
lods
xor
add
add
inc
push
pop
push
pop
pop
ss
imulb
push
lods
test
repnz
mov
add
dec
jle
xor
ret
nop
mov
mov
loop
jl
sub
or
cmc
push
scas
cmc
and
clc
ret
mov
and
stos
mov
add
lea
mov
test
jo
fwait
insb
inc
adc
push
test
popf
jmp
arpl
ja
cld
daa
mov
ja
add
and
ja
push
nop
in
sti
push
jle
add
jno
dec
ficomps
in
stos
sbb
gs
stos
or
pushf
mov
pusha
jbe
in
lahf
int
loop
int3
aas
adc
ds
jae
jne
rolb
sbb
call
lock
mov
stc
sbb
xchg
inc
mov
inc
inc
sahf
inc
lret
clc
lcall
jne
loope
icebp
leave
dec
arpl
sub
lock
rcrl
push
loope
lret
out
jne
and
pop
in
mov
xchg
movsb
ficoml
cmp
xchg
fnstcw
mov
jl
push
aam
sub
ret
shll
add
test
jo
mov
or
pop
dec
jo
cmp
mov
dec
jbe
sub
lret
and
adc
jne
pop
test
inc
push
sbb
xchg
arpl
cmp
add
xor
dec
sbb
out
test
mov
mov
ja
test
hlt
jmp
pushf
scas
cmc
inc
aad
in
push
sahf
fdiv
xor
adc
xor
lcall
sub
xlat
sub
in
ret
push
test
dec
cltd
fs
mov
adc
pusha
lahf
mov
pop
push
movsl
add
es
arpl
or
xor
stos
stos
bound
inc
cmpsb
or
adc
pop
lcall
int3
push
push
je
dec
and
cmp
sti
daa
jle
mov
push
mov
mulb
mov
sub
std
push
pop
push
fs
push
inc
push
lahf
clc
mov
xchg
pop
enter
out
mov
xchg
repz
sahf
jl
mov
mov
push
sbbb
sbb
mov
jg
sbb
sbb
xchg
jne
out
cmp
das
rclb
xor
imul
aam
sbb
mov
lret
pop
or
jbe
testb
adc
xchg
stos
daa
ret
and
outsl
cmp
dec
loope
je
leave
jle
sbb
push
jno
and
inc
cmp
push
lea
into
loop
adc
cmp
fwait
push
mov
sbb
or
push
and
mov
mov
adc
sub
sbb
push
arpl
int3
cltd
loopne
mov
mov
push
aad
xor
pop
push
sub
rcll
cmpb
out
mov
movsb
mov
mov
cmpsl
mov
sub
out
cmpsb
cld
dec
or
jnp
add
mov
sbbb
hlt
iret
outsb
adc
jle
outsl
fdivrs
mov
jge
subb
out
into
and
pop
sarl
icebp
xor
imul
add
push
pop
faddl
adc
xchg
sub
sub
and
scas
pop
pop
fs
push
fwait
xchg
mov
adc
sub
lods
and
inc
dec
push
jmp
sbb
jp
dec
test
dec
mov
cmp
xor
lret
add
inc
out
in
mov
loope
loope
pop
mov
push
mov
mov
cmp
aas
faddp
dec
rolb
push
cs
cmp
leave
adc
jnp
mov
add
gs
shll
arpl
xchg
shrl
xchg
clc
push
ret
jbe
inc
rcll
les
jne
dec
cmpsl
push
xor
ret
ret
cmp
jge
aaa
cmc
and
or
popa
lcall
loopne
pop
push
xor
js
or
test
ljmp
fcmovnb
fwait
lock
mov
bsf
in
xchg
cld
jp
cmpsl
std
iret
push
bnd
imul
cmpsl
xchg
in
loope
xor
jecxz
scas
jnp
nop
pop
push
rcrl
cmp
dec
push
std
jg
insl
mov
jle
mov
imul
sub
dec
loop
nop
sti
aad
or
inc
fs
iret
push
ret
pop
or
xchg
pop
push
pop
sbbl
lods
stc
or
mov
sbb
mov
jb
mov
es
adc
in
push
cmp
jp
xlat
cs
pushf
iret
hlt
out
insl
in
in
push
mov
xchg
enter
sub
dec
lret
mov
xlat
push
jp
int3
call
jle
es
cmp
add
sub
popf
mov
enter
add
mov
inc
add
orl
sub
jmp
adc
push
add
iret
adc
inc
adc
jmp
add
mov
xor
out
cwtl
adc
pop
cli
mov
mov
fdiv
push
pop
mov
jo
fcoms
in
push
insb
mov
push
pop
in
inc
and
add
sub
test
ds
ret
or
dec
loopne
ljmp
push
rorl
mov
adc
adc
sub
outsb
cmp
xorl
or
sub
paddq
sbb
inc
cmp
ret
pop
loope
adc
mov
cmp
call
int3
xchg
ss
jecxz
mov
mov
xor
pusha
pop
mov
mov
sbb
mov
inc
push
inc
scas
and
cmpb
dec
je
push
lret
les
jecxz
sahf
test
mov
cwtl
loop
and
rolb
xor
aaa
ud2
loop
in
cltd
sub
gs
out
arpl
repz
and
icebp
lods
adc
inc
test
add
add
dec
inc
pop
pop
dec
push
dec
push
enter
mov
add
les
lret
fstps
out
xor
or
loop
cmc
cmp
sarl
lock
sbb
lea
inc
or
in
bound
dec
sub
in
push
ret
in
rcll
je
les
maskmovq
xchg
add
pop
scas
dec
mov
or
mov
fildl
adc
fildll
fcoml
jno
adc
cmp
dec
xchg
rolb
add
push
push
mov
adc
sahf
jae
xorb
lret
cmc
fbld
gs
test
gs
add
cli
jp
mov
pop
fimull
cmpsb
push
pop
std
cld
test
mov
mov
ljmp
jb
inc
pop
sti
cltd
icebp
mov
nop
sbb
orb
or
lret
jne
sbb
lds
cmpsl
enter
push
cltd
pop
aas
icebp
sbb
imul
pop
xlat
adc
xlat
insl
xlat
rcrb
and
jns
xor
mov
out
hlt
rorl
ljmp
xor
lock
call
cmpsb
mov
lds
in
jg
pop
pop
mov
sub
gs
jnp
push
sar
sbb
sbb
aaa
daa
jns
mov
or
pshufw
movl
lds
repnz
sub
inc
cmc
fsubr
cmp
and
add
lods
lahf
jp
mov
sbb
int
mov
push
and
mov
icebp
cmp
out
out
and
mov
pop
push
sub
mov
testb
adc
lfs
movd
arpl
lods
bound
and
and
mov
les
in
sbb
fucom
ja
inc
outsl
jg
and
inc
and
sbb
int3
and
inc
les
lret
arpl
inc
xchg
add
shll
and
sbb
adc
jg
dec
xor
test
sbb
shlb
and
xchg
in
jbe
and
push
adc
pop
lods
or
orb
xor
mov
pop
jne
lret
cmp
push
inc
lcall
shrl
fisubrl
mov
mov
loop
outsl
addr16
jo
push
or
fistl
les
ja
xor
cld
jb
out
jne
stos
lcall
insl
and
aas
fmul
repz
and
and
cmp
pusha
cmpsl
je
mov
aaa
popf
fcoms
fmul
or
fimull
push
rcll
es
mov
or
cmc
arpl
xor
xor
shr
xor
filds
jle
in
stc
lock
or
cmpsl
divl
shlb
stos
mov
mov
sbb
xchg
mov
test
adc
sbb
mov
push
push
inc
pop
pop
and
fiadds
fldl
popa
inc
aam
notl
xchg
mov
imul
sub
repnz
dec
adc
dec
aad
in
filds
inc
lcall
xchg
outsl
jb
xchg
bound
outsb
leave
mov
cwtl
test
inc
adcl
test
stc
sbb
mov
and
mov
nop
fxch
jo
sbb
xor
add
push
pop
inc
pop
mov
cmp
mov
adc
jbe
fisttps
repz
aam
jne
dec
fldt
push
push
sbb
icebp
mov
inc
mov
xor
sub
lret
dec
call
data16
movb
rcrb
hlt
enter
fwait
rcrb
mov
daa
add
into
cmp
jno
xor
scas
sub
jne
lret
xchg
or
nop
imul
fiadds
arpl
add
ret
cmc
mov
dec
imul
or
mov
inc
lret
push
outsb
mov
pop
sub
ja
cmc
or
out
movsl
cmpl
js
sbb
mov
ja
test
js
arpl
ljmp
in
mov
outsl
insb
sub
mov
call
cld
outsl
push
lods
clc
xchg
testl
js
stc
int
ret
stos
push
fsubl
mov
sti
xchg
fldcw
push
jge
repz
push
push
aad
sub
jl
scas
push
scas
jno
scas
adc
jne
das
fisttpl
mov
push
push
fnstcw
jo
xchg
imul
ret
scas
mov
out
cld
sub
mov
loop
lods
mov
popf
xchg
or
sub
lahf
imul
or
push
inc
sbb
ret
pop
stos
insb
test
mov
aam
add
rcrb
out
jmp
leave
adc
mov
xchg
stos
fisubrs
call
cwtl
cmp
sub
fadds
enter
cmpl
jo
sub
cli
push
fwait
test
aas
adc
cmp
jp
das
pop
lock
out
fdivs
and
or
daa
loopne
nop
jecxz
shll
iret
mov
mov
add
loopne
pop
add
or
adc
into
push
sbb
cwtl
mov
xchg
jecxz
cmc
adc
lretw
or
jns
push
adc
sbb
sbb
fsubrl
pop
aad
fwait
jns
push
or
es
lds
fsubrl
orl
xor
fildll
jg
push
in
out
outsb
movsb
imul
sub
add
pop
xchg
and
pop
jae
xchg
and
sbb
mov
sbb
stos
clc
dec
mov
pop
stc
outsb
sti
or
or
movsl
ret
sti
imul
cmp
clc
outsb
out
pop
fisubs
xchg
inc
rcll
mov
mov
jne
pushf
popa
add
mov
mov
or
dec
add
add
add
movl
cmp
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
cwtl
mov
xor
add
mov
mov
xor
lret
ret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
ljmp
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
fs
decl
mov
test
add
xor
add
mov
or
inc
mov
popa
mov
cld
inc
cmp
lea
and
incl
mov
cld
add
xchg
sar
inc
incl
mov
xor
add
nop
inc
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
in
inc
call
add
incl
out
aas
call
add
add
test
wrmsr
jae
add
mov
add
add
mov
addl
mov
mov
dec
nop
mov
fadds
add
lea
pusha
push
incl
call
mov
mov
cld
mov
add
cmp
mov
mov
push
nop
incl
cld
add
mov
cld
push
nop
inc
add
add
in
xor
add
movl
test
ljmp
int
sub
add
filds
cmp
je
movl
jne
mov
cld
js
cmp
inc
call
add
add
add
xor
inc
add
mov
add
fmuls
cld
call
decl
add
push
es
inc
mov
decl
mov
call
inc
mov
add
mov
cld
mov
call
sub
cld
movb
xor
push
inc
mov
in
inc
lea
dec
cwtl
mov
or
rorl
call
add
jge
mov
cld
lea
call
push
incl
mov
xor
add
cmp
jne
movl
add
mov
cld
test
mov
xor
test
mov
mov
mov
add
add
mov
add
push
mov
cld
sarb
pcmpeqw
xor
lea
add
cmp
mov
test
clc
pushl
lea
int3
inc
call
jne
xor
jmp
mov
mov
incl
pushl
aaa
mov
jmp
mov
mov
cld
clc
ret
test
pop
xchg
add
inc
decl
and
add
push
jbe
mov
or
inc
enter
inc
mov
int3
add
cmp
rorb
inc
add
fadd
rolb
inc
fmull
inc
test
cwtl
clc
xor
inc
cmp
pushf
mov
test
clc
dec
inc
mov
pushf
rol
movsb
incb
inc
mov
test
clc
pushf
inc
decl
push
cld
jge
cmp
add
jmp
les
mov
lock
clc
inc
add
jge
xor
cmp
paddb
mov
test
dec
test
pop
xor
add
add
psraw
sub
mov
lock
shl
rolb
movl
jmp
pushf
inc
mov
xor
add
mov
enter
xor
add
sub
cmp
fmuls
test
test
cmp
pushf
xor
add
inc
dec
cmp
sarl
inc
jmp
mov
dec
xor
add
add
dec
test
out
rolb
add
dec
mov
mov
ret
xor
add
add
dec
inc
mov
ror
add
scas
mov
xor
xor
add
mov
clc
rol
mov
mov
dec
jbe
mov
call
rdpmc
roll
add
inc
rorb
jmp
inc
inc
mov
clc
test
clc
lret
inc
into
mov
clc
enter
sub
ret
mov
addr16
clc
add
loopne
dec
into
mov
or
inc
push
mov
in
cmp
ja
mov
inc
cwtl
mov
clc
mov
xlat
lret
inc
into
mov
in
scas
lret
mov
mov
sub
mov
mov
clc
loopne
push
lret
mov
adc
jb
add
in
sub
cmp
mov
mov
add
mov
in
into
dec
xor
roll
xor
sub
add
mov
inc
xor
add
inc
xor
sub
test
clc
enter
incl
jmp
mov
inc
mov
cwtl
lret
xor
mov
lea
xor
add
inc
dec
mov
push
mov
or
dec
inc
xor
push
mov
add
inc
decl
add
inc
mov
cwtl
add
add
pushl
int3
xor
add
mov
call
mov
add
mov
in
ret
iret
enter
in
or
adc
push
dec
inc
mov
jb
mov
cld
scas
orb
movb
push
push
xor
mov
call
mov
in
jge
mov
int3
add
xor
dec
pushf
xor
add
mov
rolb
mov
xor
orb
dec
leave
mov
rolb
add
xor
rorl
jb
add
clc
inc
jb
mov
cmp
shrb
clc
add
cmp
inc
adc
inc
test
mov
cld
orl
jbe
mov
dec
mov
mov
mov
or
dec
int3
xor
add
mov
xor
add
adcb
add
inc
mov
xor
dec
mov
hlt
add
push
inc
dec
sar
shl
lret
mov
adc
inc
and
cmpl
cmpb
mov
cmp
jne
mov
mov
rcrb
or
dec
inc
add
or
test
xchg
mov
movsl
inc
cmp
pushf
orl
mov
into
decl
push
lret
inc
into
decl
push
into
call
lret
add
add
mov
clc
inc
inc
mov
push
push
add
mov
cld
mov
into
rorb
xor
jne
call
mov
mov
call
add
rolb
add
add
inc
push
cmp
mov
test
clc
test
addb
jmp
in
or
xor
hlt
mov
xor
add
inc
sbb
pushf
inc
add
movsl
test
clc
incl
cmp
push
movsb
jne
push
clc
test
cmp
les
inc
push
aas
sbb
dec
add
inc
add
enter
add
add
out
sbb
dec
mov
sub
mov
add
cmp
or
incl
mov
mov
lret
inc
into
mov
int3
scas
push
mov
call
sub
mov
mov
cmp
pushf
mov
faddl
test
mov
in
ret
add
add
mov
in
ret
mov
in
inc
rol
sar
or
add
add
test
clc
lret
inc
into
cmp
pushf
scas
mov
inc
cmp
ja
mov
mov
clc
mov
mov
in
lret
ret
into
mov
scas
cmp
add
jmp
mov
mov
inc
enter
xor
add
cmp
shufps
add
dec
sub
cmp
ja
mov
lods
mov
inc
dec
mov
lret
rol
or
inc
scas
xor
add
add
inc
mov
inc
lret
mov
clc
lret
scas
ret
mov
hlt
push
scas
sub
mov
add
mov
movsb
inc
dec
cmp
pushf
xor
rcrl
sar
rolb
xor
jmp
mov
xor
mov
rolb
test
cwtl
shll
mov
xor
add
mov
add
inc
xor
rdpmc
roll
loopne
push
in
mov
adc
jb
add
jmp
mov
test
dec
dec
xor
add
dec
mov
dec
in
xor
xor
add
jbe
mov
test
dec
mov
loopne
inc
add
rol
scas
mov
mov
hlt
dec
inc
mov
loopne
lret
test
clc
scas
inc
mov
fdiv
roll
cwtl
cmp
pushf
cmp
inc
mov
inc
dec
xor
add
loopne
dec
rorl
add
lock
ret
xor
mov
rolb
xor
call
enter
mov
fmul
push
dec
xor
ret
xor
dec
jne
mov
cld
loopne
push
add
incl
incl
mov
lock
lret
add
xor
inc
scas
mov
shl
inc
decl
call
ud0
adc
inc
xor
lock
add
ud0
sbb
xor
sub
push
add
mov
cld
inc
xchg
mov
xabort
icebp
mov
lret
or
dec
pop
or
jb
add
inc
mov
fadd
ret
add
int
sub
add
inc
inc
mov
cld
mov
mov
clc
push
pushl
movb
int3
or
lea
insb
incl
push
movb
leave
les
in
call
inc
cld
mov
cld
xor
std
mov
clc
test
je
mov
cld
add
add
faddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
in
add
push
and
incl
fmull
inc
nop
ljmp
lea
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
js
inc
inc
int
inc
sub
add
int3
mov
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
icebp
or
out
mov
pop
push
cmp
sar
incl
inc
ljmp
push
mov
and
inc
push
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
cmp
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
cmp
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
js
data16
idiv
inc
fadd
mov
andl
flds
pop
push
in
incl
loopne
inc
jmp
addl
mov
inc
call
outsb
inc
js
divb
mov
orl
jb
decl
mov
test
inc
rorb
adc
mov
mov
cmp
test
pushl
mov
add
jmp
pushf
decl
add
data16
add
add
test
dec
mov
mov
inc
cmpb
mov
add
push
mov
call
mov
data16
test
out
lea
test
inc
ljmp
decl
test
incl
test
rclb
test
inc
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
in
xchg
aam
call
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
cbtw
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
inc
test
decl
xor
add
inc
xorl
mov
lea
inc
lcall
pushf
roll
add
add
test
decw
mov
jmp
lea
faddl
xor
lea
test
decl
mov
dec
clc
call
lea
lea
test
popf
push
add
xor
cwtl
mov
incl
push
push
inc
shlb
lea
call
test
incl
clc
call
jmp
inc
jnp
add
mov
mov
data16
inc
lea
test
inc
dec
test
cmp
mov
pushl
lcall
incl
pop
mov
mov
decl
mov
mov
test
incb
incl
cmp
pushf
inc
mov
hlt
test
cmp
pushf
or
pop
lock
test
clc
mov
lahf
lret
mov
add
add
rorb
mov
incl
cld
mov
add
jge
test
sbb
xchg
call
push
inc
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
cmp
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
cmpl
pushf
xor
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
cld
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
cwtl
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
out
adc
jne
mov
fcomps
add
incl
mov
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
add
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
cmpl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pop
jmp
mov
xor
lea
cmp
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
cwtl
pushf
xor
jne
mov
icebp
icebp
shl
mov
cmp
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
cmp
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
clc
add
dec
hlt
xor
mov
in
jge
mov
dec
cmp
xchg
mov
add
cmp
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
cmp
fdivl
test
push
add
cmp
sets
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
adc
inc
inc
push
cld
jne
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
or
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
lldt
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
into
out
lret
dec
mov
ljmp
xchg
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
rol
out
add
add
and
fs
incl
js
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
cmp
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
idivb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
data16
pushf
inc
mov
hlt
test
mov
cmp
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
ss
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
cwtl
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
data16
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
orps
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
data16
add
data16
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
cld
js
popa
data16
into
push
data16
pop
xor
add
cld
cld
add
ss
add
into
ret
pop
add
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
xor
pop
mov
je
xor
mov
xor
pop
cmp
jne
mov
cld
push
pop
inc
stc
aaa
test
clc
test
xor
fs
or
cld
mov
push
push
lret
aaa
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
data16
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
cld
push
add
add
add
lret
lock
lret
cmp
pushf
jge
aaa
cld
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
xor
add
mov
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
xor
add
data16
dec
fisttps
add
ret
lea
add
cmp
pushf
add
add
inc
test
xor
push
cwtl
push
xor
inc
cmp
jbe
mov
or
inc
test
cmp
in
hlt
push
push
push
push
mov
cwtl
cwtl
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
cmp
pushf
jb
add
inc
daa
inc
inc
xor
dec
cwtl
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
cmp
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
cmp
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
std
lock
inc
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
cmp
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
aas
add
push
add
mov
cld
inc
add
rcrl
mov
mov
or
xor
enterw
jmp
ret
inc
mov
add
rorl
icebp
or
inc
inc
mov
or
jne
mov
rolb
add
cld
ret
dec
mov
mov
jmp
mov
mov
sub
mov
in
test
add
add
cmovge
add
cld
mov
adc
mov
xor
cmp
jne
mov
adc
push
test
clc
xor
xor
dec
adc
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
cmp
pushf
push
movl
dec
inc
andb
pushf
push
xchg
fsubr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
cmp
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
cmp
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
add
xor
add
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
and
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
movsb
sar
enter
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fcomps
clc
mov
mov
mov
clc
mov
cmp
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
fdivr
testb
dec
clc
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
sarl
pushf
add
mov
xor
test
clc
dec
inc
xor
setl
lret
rol
dec
test
inc
lea
lea
mov
xor
bswap
rorb
roll
add
cmp
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
cwtl
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
fiadds
xor
jb
add
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
cmp
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
cwtl
mov
jge
decl
jl
adc
pop
cmp
add
adc
test
adc
jbe,pn
add
adc
clc
pusha
adc
jp
adc
mov
pop
adc
inc
adc
mov
test
inc
add
test
inc
add
test
inc
add
test
inc
add
test
inc
add
cmp
add
xor
add
pop
adc
adc
in
adc
bound
adc
shlb
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
adc
ds
adc
add
add
pop
adc
cltd
outsb
adc
ja
adc
jne
adc
arpl
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
adc
and
adc
ret
pop
adc
loopne
adc
add
aas
adc
xchg
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
sbb
adc
inc
bound
add
adc
jecxz
adc
pushf
xor
add
or
add
inc
adc
shrl
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
xor
push
xor
add
push
pop
ss
ss
xor
add
pop
dec
dec
dec
xor
pop
xor
add
push
xor
dec
inc
dec
cmp
pop
inc
add
dec
pop
push
push
inc
xor
push
add
push
pop
dec
dec
dec
dec
dec
add
cmp
aaa
dec
cmp
push
inc
add
inc
pop
dec
xor
xor
push
xor
push
xor
dec
push
inc
xor
cmp
add
dec
xor
xor
xor
xor
inc
add
xor
dec
push
xor
dec
xor
dec
xor
dec
inc
push
pop
inc
xor
add
inc
ss
push
inc
dec
inc
add
inc
xor
dec
pop
cmp
cmp
push
pop
push
pop
dec
push
dec
dec
inc
pop
dec
xor
push
inc
pop
xor
add
push
pop
inc
push
dec
xor
pop
dec
xor
inc
inc
dec
pop
push
dec
xor
dec
ss
aaa
aaa
dec
dec
add
ss
inc
inc
xor
dec
ss
pop
dec
dec
inc
inc
dec
xor
xor
xor
xor
inc
dec
xor
add
xor
xor
pop
add
cmp
inc
dec
inc
xor
pop
inc
inc
add
dec
pop
dec
xor
dec
xor
dec
pop
push
dec
dec
cmp
xor
pop
inc
pop
push
pop
cmp
pop
dec
dec
pop
add
pop
pop
push
xor
xor
xor
push
push
add
dec
add
add
dec
add
inc
add
add
xor
pop
add
add
add
add
add
push
add
xor
pop
add
inc
add
add
push
add
add
xor
xor
xor
xor
pop
add
add
add
inc
add
add
dec
add
add
add
add
add
add
cmp
dec
add
add
pop
add
dec
add
add
dec
add
dec
add
add
inc
add
add
dec
add
pop
add
pop
add
add
dec
add
add
aaa
add
xor
inc
add
pop
add
add
inc
add
push
add
pop
add
xor
push
add
add
dec
add
add
inc
add
inc
add
add
add
cmp
push
add
pop
add
add
inc
add
add
push
add
add
add
add
add
xor
cmp
dec
add
dec
add
cmp
inc
add
add
inc
add
dec
add
pop
add
add
xor
add
inc
add
add
pop
add
cmp
push
add
pop
add
add
add
add
add
push
push
inc
push
and
dec
inc
mov
out
or
add
push
cmp
js
jbe
arpl
popa
push
pop
outsl
insl
dec
inc
push
jbe
pop
push
js
insb
insb
dec
addr16
push
jb
push
insl
push
bound
push
arpl
pop
jo
dec
inc
push
insb
inc
dec
jne
jbe
jo,pn
bound
