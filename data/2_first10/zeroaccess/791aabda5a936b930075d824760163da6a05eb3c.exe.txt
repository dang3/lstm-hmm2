add
add
adc
add
add
add
cmp
add
add
add
add
in
sub
movl
mov
adc
mov
movl
xor
mov
push
andl
xor
add
inc
mov
cmpl
jne
pushl
pushl
pushl
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
mov
xor
xorl
mov
notl
jmp
dec
dec
xor
fcoms
jp
testl
jl
jl
mov
xor
xor
ja
or
or
cmp
lret
sbb
mov
or
rol
or
sbb
out
outsl
add
mov
mov
je
fisttpl
jecxz
and
aam
dec
incl
mov
loope
pop
sub
jae
lret
cwtl
sub
mov
loopne
cmp
sub
or
sbb
outsl
insl
jb
cmp
jns
cmp
add
movsb
add
rol
add
jge
mov
daa
sbb
addr16
loop
xchg
pop
jl
push
fistl
xor
adc
sbb
inc
add
dec
pop
inc
add
add
mov
adcl
jmp
inc
in
xor
inc
in
xchg
mov
mov
mov
mov
loopne
ljmp
mov
sbb
mov
mov
and
xor
enter
lret
cwtl
inc
loope
gs
shll
xor
pop
int
add
inc
lock
xchg
jmp
inc
inc
fs
sub
movsb
outsb
repz
sahf
ljmp
inc
jmp
or
je
ret
xchg
pop
xor
inc
icebp
inc
push
lret
leave
jno
sbb
sbb
xchg
imul
jbe
xor
ja
and
adc
loop
out
insb
mov
adcb
dec
sub
leave
movl
je
and
mov
and
jmp
xchg
or
mov
dec
popa
enter
or
jl
jl
jl
adc
orb
mov
adc
aas
push
dec
ss
push
popa
adc
movsb
aaa
je
enter
scas
mov
pusha
or
iret
repnz
int
popa
pop
pop
cmpsl
sub
pop
shl
push
mov
mov
mov
inc
js
sbb
and
cli
mov
repnz
iret
cwtl
das
mov
ja
inc
inc
aas
add
or
or
faddl
shrl
nop
cmpsl
jecxz
or
cmp
or
jbe
fsubrp
fisubrs
jae
mov
sub
mov
sbb
imul
andl
mov
movl
cmpl
je
cmpl
jne
pushl
call
xor
or
dec
mov
jmp
xor
add
inc
mov
add
mov
subl
xchg
xor
sub
or
xor
mov
movzwl
xor
mov
or
mov
mov
xor
jmp
ficoms
loop
sbb
movsb
out
out
pop
sub
jl
jl
jl
add
jmp
add
inc
bound
js
int
fadd
pusha
jmp
int3
movsl
ds
icebp
xchg
dec
mov
mov
adc
fldenv
adc
inc
mov
xor
adc
outsl
jo
cmp
mov
adc
sub
adc
in
and
lods
mov
adc
jae
mov
int
pop
aaa
les
cmp
ficompl
mov
xchg
int
or
stos
movb
mull
aad
das
sbb
shlb
mov
mov
loop
scas
pop
mov
xchg
push
push
cld
iret
fnstenv
arpl
subb
subl
cmp
dec
lods
sbb
mov
add
xor
into
add
add
cmp
push
lods
addr16
jge
stc
icebp
sahf
xlat
add
jl
jl
jl
push
cwtl
imul
cmp
repz
mov
sub
inc
add
cmc
adc
fcomps
in
aas
sub
addr16
rorb
pop
out
inc
jnp
test
incl
inc
incb
stos
nop
ja
sbb
stc
lahf
inc
push
inc
dec
mov
scas
xchg
out
lods
adc
ja
push
jle
add
fistps
mov
icebp
and
cmp
fwait
cmp
mov
push
stos
aad
es
adc
outsb
shll
push
mov
out
ret
insl
in
push
lods
add
jne
mov
sbbl
xor
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
mov
mov
mov
movl
je
mov
xorl
xor
jmp
in
iret
lcall
mov
mov
jl
jl
jl
repz
insb
jb
repnz
int3
jae
cltd
mov
int
dec
cmp
insl
movsb
inc
cmp
xor
mov
xor
mov
mov
out
mov
mov
add
aam
popa
mov
push
imul
adc
icebp
mov
inc
hlt
fisubl
mov
xchg
int3
nop
sahf
sub
insb
aas
cwtl
rcrl
mov
push
xchg
push
mov
scas
xchg
ret
popf
sub
clc
cmc
lret
mov
pop
cmc
xchg
outsl
adc
aas
mov
add
rorb
gs
stos
inc
lods
xchg
gs
sbb
fwait
subl
dec
es
xchg
ret
movl
cmp
movl
jne
pushl
addl
call
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
jmp
fdivr
ljmp
into
outsl
inc
xchg
jl
mov
adc
into
inc
es
inc
in
sti
loopne
pop
sbb
test
inc
xor
ficoms
jae
jge
adc
cmp
pop
cld
xor
test
cmp
sub
cmpsb
dec
mov
insb
lcall
in
iret
adc
in
adc
jnp
mov
loope
pusha
push
pushf
pop
adc
cli
xor
lret
and
outsl
icebp
sbb
dec
ficomps
mov
icebp
aad
mov
lahf
addr16
jae
cmp
outsl
repnz
pop
gs
test
jl
enter
ja
rolb
arpl
and
daa
lcall
out
mov
lds
or
inc
add
aam
inc
add
xor
adcl
add
movl
cmp
movl
je
subl
pushl
jmp
js
dec
mov
jnp
hlt
push
cmpsb
imul
pop
data16
jl
jl
jl
fst
loopne
adc
cmpsl
sahf
mov
mov
adc
test
in
scas
addr16
push
push
aad
cld
sub
popa
rcrb
out
idivl
add
pop
add
push
sub
shr
push
add
jle
xchg
jecxz
cmp
addr16
mov
cmp
inc
testl
aas
mov
dec
imull
movsb
loop
jp
out
push
stc
cli
add
add
sub
outsl
nop
jg
push
pop
leave
jmp
adc
adc
addr16
das
sbb
pop
mov
and
std
insl
popf
sbb
pushl
call
jmp
cld
mov
mov
dec
mov
aad
lret
lods
jae
jl
jl
jl
enter
in
push
stos
testl
mov
rcll
in
mov
je
insb
mov
rclb
push
inc
enter
daa
and
pop
jmp
pop
scas
jmp
dec
lahf
adc
popa
loopne
iret
xchg
dec
data16
cmpsl
data16
jle
insl
cli
jae
aas
lds
sbb
add
mov
jns
in
and
pop
and
sbb
adc
dec
mov
xor
test
repnz
fwait
imul
push
push
and
stos
imul
pop
pushf
xchg
lcall
inc
cld
add
mov
xor
add
movl
cmp
movl
je
mov
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
subl
jmp
inc
adc
jns
lret
push
insb
jno
add
jl
mov
inc
dec
pop
imul
pushf
push
lret
cmc
ss
jbe
andl
and
stos
jmp
adc
pop
sbb
mov
mov
push
sub
stc
mov
test
mov
outsl
std
mov
jnp
and
sub
push
pop
push
dec
jmp
lcall
loop
pop
jns
shrb
neg
sub
mov
lahf
stos
and
and
mov
xchg
out
outsl
orl
inc
jne
stos
test
adc
jo
sbb
xor
shrb
in
jmp
dec
mov
and
mov
mov
andl
add
movzbl
and
mov
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
notl
add
xorl
mov
jmp
cmp
mov
cmp
pushf
cltd
mov
sbb
jl
jl
jl
fstp
mov
out
pushf
int
xchg
jb
add
jmp
fisttpll
push
stos
pop
into
rcr
mov
rcl
sbb
fcomp
mov
imul
or
dec
mov
add
shlb
arpl
cmp
pop
cmp
pop
sti
pop
dec
cs
dec
inc
add
ljmp
cmp
cmp
push
icebp
mov
fldcw
lods
dec
or
pmaxsw
xor
pop
insl
sub
insl
mov
or
mov
idiv
aam
or
addb
in
sti
push
xor
jg
mov
popw
add
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
xor
mov
jmp
xor
mov
sub
mov
jmp
jl
jl
jl
xchg
and
enter
cmp
add
lret
jb
loop
cli
jg
xor
or
ljmp
xchg
sbb
sbb
or
cld
xchg
jno
cmp
cmpsb
dec
lods
or
mov
push
outsb
xchg
mov
cwtl
push
and
mov
in
shlb
sub
call
mov
xchg
pop
and
jl
mov
lcall
pop
pop
mov
pop
push
lea
ds
shll
cmpsl
mov
cli
rcrl
pop
out
scas
test
in
push
subl
fmuls
mov
dec
rclb
jne
jmp
pop
jecxz
xchg
mov
jb
daa
mov
test
hlt
je
jl
jl
jl
lods
xor
mov
in
adc
lret
mov
mov
in
fwait
test
scas
sbb
mov
inc
cltd
push
jle
dec
sbb
sub
std
imul
adc
loopne
int3
dec
in
push
add
div
cmc
jle
fisttpll
xor
jne
into
and
xor
stos
mov
imul
push
sub
ret
xor
push
in
icebp
outsl
sar
cmp
cmp
xchg
popa
pop
call
pop
enter
xor
xchg
popf
mov
callw
mov
or
addr16
or
hlt
xchg
pop
pop
jl
sbb
dec
cltd
pop
adc
jp
and
pushl
jmp
or
mov
mov
push
int3
xchg
xchg
int
test
jl
jl
jl
arpl
mov
rcrl
push
loope
sub
sub
sarb
sub
sbb
cmp
aad
repz
orb
clc
or
mov
mov
out
in
fisttpll
fdivs
add
or
push
dec
fdivrs
push
mov
cmpsl
movsb
in
sbbl
test
inc
scas
out
sahf
outsl
push
pop
cld
mov
and
push
push
push
mov
mov
in
ljmp
jg
std
sub
shll
outsb
jle
int3
repnz
das
add
outsb
cmp
movsl
mov
dec
push
insb
call
mov
mov
xor
add
cmp
jne
jmp
dec
xchg
pop
add
arpl
adc
dec
pusha
ja
jl
jl
jl
xor
pusha
clc
jbe
ja
mov
insb
shll
aad
sbb
cmp
mov
mov
cmp
test
inc
popf
roll
inc
push
jecxz,pt
into
xor
dec
jle
ret
jne
stos
lcall
in
adc
xor
push
imul
or
adc
cmpsb
push
out
sbb
add
cmp
int
popf
addr16
test
mov
dec
dec
xor
mov
lea
clc
inc
push
insb
in
shll
stos
into
pusha
dec
push
xor
daa
xchg
xchg
into
sti
push
mov
jle
sub
and
loopne
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
jmp
lods
adc
ljmp
xchg
std
xchg
jbe
jl
jl
jl
pop
in
test
cmp
inc
adc
in
sti
mov
sub
ja
add
xchg
inc
mov
add
jns
scas
xchg
es
dec
aas
or
sahf
mov
pop
fildl
faddp
jmp
sub
stc
push
mul
test
and
call
pop
or
scas
in
js
aad
daa
loopne
jle
mov
scas
cmp
ljmp
pop
insb
inc
inc
add
stos
pop
in
xchg
mov
adc
test
test
out
loop
mov
cwtl
outsl
push
cmp
push
imul
cmpsl
mov
out
inc
bound
inc
or
inc
cld
mov
jmp
xchg
sub
cltd
cmp
mov
adc
jg
or
jl
jl
lcall
aam
jg
sub
mov
mov
aas
ret
lret
xor
sub
out
adc
cmp
push
fsubl
pop
les
mov
mov
xchg
push
xchg
outsb
insb
mov
jg
jne
push
mov
lahf
jecxz
push
xlat
adc
cltd
xchg
jp
pushf
push
sub
lret
pop
fbld
sub
daa
cmpsb
xchg
iret
pop
pop
or
cmp
mov
dec
mov
loop
leave
aam
push
mov
cmp
arpl
daa
test
or
pusha
inc
or
jmp
ja
out
cltd
ds
movsl
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
jmp
cmp
cli
test
out
insb
js
add
jl
mov
push
bound
sahf
mov
push
insl
mov
inc
or
data16
jbe
shlb
sub
aam
jecxz
mov
mov
mov
out
push
sbbb
jno
imul
iret
jmp
cmp
cmpsl
ljmp
fs
shrl
jle
addb
mov
cmc
jns
ljmp
fucomip
cmp
fisttpl
insl
in
ja
aad
mov
movsb
mov
into
insl
sbb
pop
lcall
push
ret
cmpsb
out
xor
add
movsl
inc
cmpsb
push
mov
call
and
push
or
fwait
loop
sbb
orl
adc
into
add
add
rep
lods
sti
pop
xorl
mov
or
jl
jl
mov
stc
fsubl
movsb
test
mov
dec
adc
fisubs
xor
mov
in
mov
movsl
movsb
mov
add
push
and
mov
jmp
ds
or
cmp
stc
negb
sbb
xor
popa
shl
jnp
adc
inc
sbb
push
fisttpl
sub
imull
xchg
ja
adcb
inc
test
test
lea
xchg
pop
pop
enter
stc
pop
int3
mov
adc
mov
arpl
iret
push
mov
xchg
mov
cmpl
inc
lods
hlt
enter
push
mov
ja
cwtl
lods
mov
scas
add
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
jmp
xlat
pop
cmp
pop
insl
jnp
sbb
mov
lret
or
decb
jl
mov
lea
push
clc
fisubrl
test
bound
jecxz
xlat
adc
jl
dec
out
jns
pop
xor
fnsave
sub
in
sbbb
or
stc
pop
jp
push
push
lods
ret
in
pop
test
lds
cmp
in
xchg
pop
push
mov
sub
sarb
faddl
enter
fists
jnp
push
sbb
shll
cs
push
cmpsb
mov
jno
pop
test
jne
add
or
pushf
lahf
adc
out
xor
lods
popl
dec
mov
or
out
mov
jmp
mov
mov
xor
jmp
fsub
mov
clc
mov
lret
and
jl
mov
test
pop
mov
mov
push
push
imul
lahf
sbb
mov
xor
xor
test
lret
add
shrb
sarb
popf
sub
jns
and
dec
movsb
fidivrl
jnp
pop
int
push
and
fbstp
jnp
and
or
mov
in
insb
mov
rcll
rorl
xor
hlt
int3
lods
mov
sub
lods
push
push
pop
jle
mov
push
mov
xor
imul
arpl
mov
movl
dec
and
mov
jmp
pop
fimuls
cltd
push
mov
jno
push
jl
mov
popf
jae
add
loope
jge
mov
fsubr
icebp
or
jno
xchg
sahf
sub
orb
sti
mov
jg
fsubrl
push
aaa
pop
adc
inc
lock
sub
cmpsb
jbe
push
mov
lret
xchg
sbb
xor
push
mov
fdivl
fwait
push
push
stos
sarb
sub
jns
js
push
cld
iret
push
sbb
jmp
loopne
loopne
movsb
or
cli
pop
ljmp
and
xchg
stos
cmp
adc
add
jge
mov
pop
push
daa
and
cltd
sarb
mov
xor
lea
add
call
xor
inc
cmp
jmp
jmp
inc
insb
jns
jmp
loope
pushf
subb
jl
mov
loopne
mov
or
call
sub
cmp
jl
and
aad
push
mov
sbb
adc
lahf
fldcw
mov
ret
mov
inc
mov
cmp
sub
pop
add
shlb
lds
loope
push
push
out
fcomi
popa
stc
and
inc
dec
mov
xchg
mov
jl
mov
adc
sbbb
xor
and
lods
sbb
and
sub
mov
and
add
push
adc
push
mov
dec
jne
pop
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
jmp
jns
inc
ds
mov
jl
mov
jl
jl
jl
dec
aaa
or
sti
rcrl
pop
iret
add
loop
ds
and
dec
xor
jle
ret
and
clc
sbb
mov
ljmp
shll
jecxz
repz
xchg
and
sub
outsl
xor
mov
or
jg
mov
and
xchg
test
pop
movsl
pop
push
test
sbbl
and
sar
in
xchg
mov
xor
pop
adc
jle
mov
js
adc
and
mov
mov
shll
shrb
mov
pop
notb
flds
mov
add
jmp
in
test
sti
mov
inc
add
jl
mov
jo
out
test
or
push
loopne
adc
push
mov
push
out
inc
call
mul
mov
mov
jmp
jg
addr16
sub
add
inc
mov
and
out
out
jb
pushf
lds
jnp
xor
inc
jp
sub
dec
xor
jp
dec
and
imul
je
jne
push
xor
in
cwtl
jmp
inc
jns
mov
rcl
cli
xor
sbb
sub
and
lock
sbb
insl
and
mov
int
jo
push
iret
mov
out
and
rolb
pop
hlt
jmp
dec
jge
cmpb
jge
push
loope
in
aas
rclb
mov
mov
dec
fstpt
sbb
or
push
mov
pop
icebp
xchg
fsincos
out
lea
sbb
shlb
sbb
xor
enter
ds
xor
jmp
ficoml
movsb
leave
sub
mov
lahf
fnstsw
stos
xor
int
int3
dec
fadds
mov
jbe
icebp
mov
jns
jg
jge
rolb
xor
push
jno
mov
das
rol
sub
cmpsb
fildl
movsb
cli
xor
mov
out
imul
cli
fsubrl
mov
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
push
push
call
mov
dec
mov
jmp
mov
movl
mov
push
mov
xor
mov
push
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
jmp
sbb
insl
std
pop
mov
je
xor
into
jg
jl
mov
cmc
data16
push
push
jle
mov
mov
hlt
jnp
mov
or
lret
jmp
cltd
inc
mov
fisubl
out
idivb
out
sub
xchg
xor
inc
pop
outsl
mov
jmp
cmc
jno
ret
mov
lock
insb
sub
inc
pop
fwait
cmp
mov
mov
lahf
fs
das
stos
add
add
sub
xor
push
mov
pop
and
adc
ret
aas
pop
dec
mov
orl
jg
cmp
mov
and
scas
out
aas
mov
adc
lahf
inc
movsb
jg
jl
fbstp
scas
sahf
mov
mov
les
cmpsb
mov
shll
imul
jmp
mov
fucomip
fsub
shr
push
mov
adcl
add
or
lcallw
jge
sub
test
jmp
jo
out
jl
insb
xchg
adc
int3
lock
xchg
jb
mov
aaa
push
lock
bound
mov
lods
shrl
idivb
int3
pop
in
jmp
je
inc
std
jmp
add
pop
mov
push
xor
or
aas
or
filds
push
in
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
jmp
jp
pop
cmp
jge
mov
push
adc
fcmovne
dec
add
jg
jl
inc
pop
shrb
ficoml
andb
stos
out
sub
pop
mov
jmp
pop
lods
in
mov
ss
add
push
dec
mov
scas
mov
xchg
xchg
mov
imul
and
and
mov
mov
frstor
inc
add
cmp
cmp
mov
jle
pop
loop
cmp
popa
add
jae
loopne
adc
add
jnp
xor
pop
sub
push
sbb
aad
enter
in
jmp
sub
add
sub
sub
or
inc
push
fnstcw
xchg
dec
out
cmp
xchg
loope
push
mov
imul
fcmovbe
addl
stos
stos
fildl
pop
sub
push
cld
fimuls
popa
inc
aaa
dec
xor
out
lock
mov
xlat
in
mov
xor
mov
ret
add
in
aas
insb
rolb
outsb
pop
aam
lds
test
cmp
or
mov
xor
cmp
int3
sbb
fnstcw
jg
hlt
xchg
cmpsl
int
xchg
inc
lret
fnsave
jbe
pop
mov
jmp
jno
in
cli
insl
cmpl
cmpb
into
jg
jl
push
daa
sub
gs
cld
mov
xchg
movsb
das
test
or
stos
sub
fistps
mov
push
pushw
sbb
sbb
cmp
popf
or
sub
inc
push
notl
pop
mov
cmp
pop
in
stc
in
inc
jge
pop
repz
shlb
test
inc
out
mov
jno
in
mov
jae
add
mov
ret
je
sarl
faddl
cmpl
inc
in
mov
pop
adc
shl
cmc
stc
pusha
inc
scas
sahf
xchg
inc
or
inc
cmp
ljmp
dec
ljmp
dec
aas
cmpsb
jl
scas
jnp
mov
xchg
push
popf
stos
mov
lods
mov
mov
sti
std
push
sub
xor
arpl
cmp
pop
test
test
inc
jne
xor
into
push
sahf
add
or
out
mov
pushfw
insb
inc
jle
mov
loopne
pop
cmp
sarl
fadd
test
lcall
fs
mov
movsl
arpl
mov
mov
inc
pop
mov
imul
or
dec
pop
pop
leave
ret
push
mov
mov
add
mov
movzwl
or
sub
mov
or
mov
andl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
pushl
call
jmp
mov
addl
xor
cmp
je
mov
xorl
jmp
rolb
loopne
dec
push
mov
scas
lods
movsl
call
hlt
jl
jl
jno
lahf
cmc
xorl
cmpsl
mov
shll
mov
sahf
xchg
jecxz
and
sahf
sarl
add
xchg
test
fisttpl
int
mov
and
xchg
insb
lods
mov
mov
out
in
or
fcomps
or
and
cmp
repz
out
repnz
cmp
insb
cli
fwait
add
pop
rolb
xor
xchg
mov
decb
fsubl
adc
sar
les
push
mov
sub
jmp
sahf
and
cwtl
inc
js
cmp
fucomp
add
mov
jl
jl
jl
rclb
mov
lahf
sub
mov
sbb
or
mov
rorb
push
int
cltd
rol
loopne
inc
sbb
ss
jne
push
ds
jae
test
sarl
stos
lock
push
pop
es
bswap
outsl
pop
mov
sti
sti
sub
jns
rcll
enter
lds
sbb
xchg
push
icebp
es
lds
mov
sbb
mov
push
mov
fcom
mov
and
add
add
sarl
jne
mov
add
jmp
mov
xor
jmp
ficomps
mov
adc
arpl
hlt
jl
jl
fisttps
or
cmp
lds
cmp
int
xlat
ja
sub
mov
cmpsl
ror
jbe
sbb
jg
mov
mov
data16
adc
in
sub
lds
out
je
push
dec
xchg
cmp
xchg
pushfw
call
loopne
pop
dec
inc
cltd
outsb
outsl
fstpt
iret
xchg
pop
bound
cmp
jnp
or
bnd
pop
mov
movsb
or
stos
sub
sahf
aad
cld
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
push
mov
and
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
xorl
mov
movl
mov
xor
movl
xor
mov
and
jmp
loopne
enter
sti
in
cmp
jg
gs
jbe
jl
xor
jl
fdivrs
lret
outsb
clc
add
icebp
dec
jne
adc
scas
pop
or
ja
jne
xor
push
inc
mov
je
cmovo
frstor
pop
cmp
adc
xchg
inc
pop
xchg
mov
pop
jbe
jg
int3
inc
and
push
adc
ret
jl
bound
gs
adc
lods
and
out
aaa
stos
jg
push
xchg
clc
xchg
stos
fldl
aad
mov
sub
lea
std
mov
jbe
jmp
cmp
or
inc
icebp
sub
lods
jb
aaa
enter
cmpsb
shll
shlb
push
lea
vmwrite
or
int3
jge
cmpsl
mov
in
sbb
out
inc
out
add
push
mov
cs
shlb
sarb
mov
repz
ror
ja
imul
adc
and
jg
push
mov
sbbb
ss
jnp
inc
mov
loopne
add
jbe
xlat
inc
clc
cmp
push
inc
lahf
cmp
test
add
fcomi
add
jns
mov
cli
inc
gs
mov
inc
push
or
cltd
xchg
jp
loopne
shl
or
les
or
xor
mov
add
adc
mov
mov
mov
sub
xor
mov
xor
not
add
add
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
adc
movl
adc
movl
movl
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
or
movl
movl
movl
or
mov
movl
xor
or
mov
add
cmp
movl
je
movl
push
movl
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movl
mov
orl
jmp
std
xor
mov
add
test
jg
scas
into
pop
jl
xor
jl
mov
test
arpl
sub
iret
test
in
dec
test
das
sub
cmp
neg
jnp,pn
sbb
sbb
and
addr16
dec
xor
daa
cltd
std
inc
cmp
and
bound
jl
mov
shrl
mov
cmc
mov
idivl
xor
clc
lods
outsl
in
xchg
xchg
cs
jno
int3
sbb
sub
jmp
rolb
pop
push
mov
aad
inc
inc
xchg
sbbb
pop
stos
jo
push
ret
fs
sub
ljmp
lcall
test
test
lods
pop
jnp
push
div
xor
sub
jo
cltd
dec
sbb
xchg
stos
shlb
aam
in
lods
outsb
pop
imul
lds
cmovb
fdivp
movsb
push
dec
mov
pop
mov
repz
adc
xlat
cmpl
repnz
dec
js
inc
jno
or
shrb
mov
xor
fcoms
cmp
sahf
inc
xchg
js
icebp
or
push
pop
or
daa
les
sbb
add
ljmp
xorl
xchg
mov
gs
cli
adcl
mov
xorl
xor
xorl
add
movl
cmp
movl
jb
xor
mov
mov
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
call
jmp
xor
mov
mov
sbb
add
jmp
jno
movsl
imul
pop
clc
push
sbb
cld
xchg
jl
xor
jl
cmpl
and
pop
in
js
flds
mov
out
push
jbe,pt
cmp
shlb
jmp
call
dec
sbb
in
sub
pop
popa
roll
imul
out
and
imul
jnp
inc
rep
pop
pusha
fnstsw
pop
mov
xchg
insb
icebp
ret
cmp
imul
xor
dec
pop
test
mov
bound
movsl
push
sub
mov
push
lahf
out
sub
push
fisubl
pop
loopne
inc
popa
stc
cltd
xchg
jge
cmp
stc
cmpsl
pop
in
fs
xadd
lret
ret
insl
popa
es
sti
push
mov
scas
inc
ficoms
rorl
stc
cmp
movsl
add
scas
cmpsb
testl
cmpl
and
imul
filds
aaa
dec
sti
jmp
pop
add
lods
dec
lcall
pop
xor
mov
pop
rolb
fwait
arpl
nop
aaa
jmp
dec
mov
dec
mov
mov
aad
stos
adc
mov
jmp
mov
push
enter
add
add
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
add
imul
mov
mov
sbbl
sub
cmp
ja
add
mov
xor
notl
add
movl
jmp
movzwl
or
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
push
push
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
jmp
dec
xchg
call
sub
adc
sbb
jl
xor
jl
nop
aam
push
push
aaa
mov
scas
push
push
pop
imul
popa
inc
test
loopne
push
mov
inc
aad
ljmp
popf
add
pop
ss
jo
or
add
sub
sub
jnp
in
fdivrl
imul
push
gs
mov
cmp
push
movb
aad
cwtl
fstpl
je
out
push
push
xlat
inc
push
jecxz
repnz
cmp
mov
out
cwtl
jns
out
ds
aad
leave
mov
pushf
and
adc
fdivl
lea
or
lahf
xor
insl
sarl
dec
pop
jmp
push
scas
in
mov
out
je
adc
mov
mov
aaa
repnz
iret
dec
ret
inc
stos
adc
pop
cmpsl
aam
dec
repz
icebp
add
xchg
mov
sarb
sub
mov
mov
in
fidivs
loope
push
stos
dec
pop
adc
jnp
arpl
xchg
imul
adc
std
pop
cmp
mov
test
mov
lar
push
daa
mov
xor
jo
mov
pushf
enter
pop
je
jecxz
push
hlt
xor
and
clc
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
jmp
sbb
cs
mov
cmovae
gs
sbb
jg
jl
addr16
cs
or
call
addb
inc
fcmovnu
xchg
jns
imul
mov
stos
ja
dec
mov
lods
adc
mov
loopne
mov
mov
mov
outsb
jl
ds
add
movsl
pop
pop
mov
pop
add
push
xchg
cltd
push
call
ja
or
add
pop
push
sub
add
shl
cmpsb
add
and
mov
xlat
mov
and
sub
imul
aam
jo
lea
and
addb
rorl
repnz
and
mov
or
push
xor
jno
dec
mov
xchg
shl
arpl
stc
sub
mov
add
sti
or
sbb
fisubrs
pop
in
dec
mov
push
inc
and
cmp
mov
repnz
jae
sahf
xor
cmpsl
js
mov
jge
xchg
jmp
cmp
jo
jecxz
stc
mov
rorb
iret
mov
into
sbbl
rcrl
clc
outsb
test
push
push
dec
into
mov
lahf
pop
ja
mov
jmp
mov
mov
xor
xor
jmp
dec
inc
fdivr
fidivrl
gs
shr
shlb
jl
jg
jl
dec
adcb
xlat
repz
push
push
sub
pop
imul
and
inc
and
and
inc
add
pop
inc
xor
shll
sub
pushf
into
push
outsl
or
js
dec
cmp
jb
xchg
in
rcr
rolb
xor
loopne
add
jne
in
mov
and
mov
mov
sbb
in
mov
pop
adc
insb
imul
shlb
adc
xchg
cmpsl
cmpsb
jmp
adc
movsl
or
xchg
ja
js
xor
stc
loop
xchg
fs
sahf
and
mov
vxorps
cltd
mov
jl
push
jb
pop
test
jo
cmp
xchg
bnd
jo
or
lahf
pop
jg
cmp
xlat
mov
sub
or
pop
and
inc
xchg
clc
inc
in
lcall
lds
and
daa
shrb
mov
scas
pusha
push
jb
jecxz
ficomps
jb
je
ja
inc
sub
or
inc
movsb
mov
sbb
push
mov
inc
insl
or
sbb
ret
ds
adc
jnp
lcall
imul
add
imul
mov
jmp
fwait
bound
pushf
stc
insl
fwait
jge
les
rcrb
jl
jg
jl
cs
add
mov
mov
daa
push
mov
mov
adc
sahf
xor
subb
add
nop
jl
ret
aas
sub
setge
lahf
dec
movsb
push
jl
or
push
mov
pop
and
mov
fnstsw
aam
xchg
pop
adc
push
gs
pop
sbb
adc
mov
aas
and
inc
inc
rolb
pop
loope
add
pop
iret
aas
je
stc
mov
das
sahf
pop
mov
jg
sub
rcl
sbb
sbb
rorl
push
int3
push
dec
mov
xor
push
push
aam
cmovo
push
repz
cli
leave
xor
and
call
mov
cmp
add
std
insb
mov
jo
test
jae
adc
shlb
push
ret
leave
mov
adc
in
lods
sbb
fcmovnbe
cmc
sbb
aas
aas
les
ret
mov
sbb
pushf
leave
push
or
and
push
cmp
push
icebp
mov
mov
cmpsl
cmp
stos
sub
cmpsl
add
sub
sbb
fcomip
fistpl
pusha
add
add
jno
adc
sti
frstor
imul
js
pop
jl
xor
jl
sbb
pusha
jne
dec
inc
xor
std
addr16
add
push
mov
repz
or
sahf
and
imul
sub
dec
dec
mov
test
xchg
into
das
mov
cwtl
cmp
je
add
xchg
fistpll
jle
sub
rcl
pop
fs
xchg
es
mov
adc
adc
loop
push
dec
cmc
adc
in
rep
and
addl
jp
pusha
and
and
mov
cwtl
leave
lret
or
test
mov
cmpsl
or
sbb
test
ja
iret
es
lods
cmp
pop
loopne
mov
sub
fmul
ret
dec
imull
js
cmpsl
fildl
sbb
int
push
popa
pop
pop
aad
inc
dec
xor
sub
inc
xchg
sub
scas
mov
or
inc
push
dec
addr16
or
mov
call
xor
xchg
popa
gs
and
test
aas
imul
dec
lea
push
xchg
pusha
jnp
mov
leave
popf
jp
std
outsl
xchg
sbb
sbb
adc
jg
mov
lahf
sarb
push
enterw
xor
sub
fistpll
fimull
xchg
add
add
add
add
cld
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
jmp
mov
dec
stos
lcall
ss
jl
xor
jl
mov
pop
hlt
mov
pop
cmpsl
xchg
or
scas
jle
and
dec
stc
filds
sbb
dec
int3
stc
es
lods
mov
mov
in
dec
mov
and
inc
xchg
push
or
lcall
sub
shlb
loopne
mov
lock
lods
inc
mov
or
leave
shr
jnp
int3
sbb
aam
pusha
jle
adc
inc
js
clc
xchg
jo
faddl
gs
xor
xchg
add
dec
add
add
pop
pop
jp
in
out
inc
sahf
push
ljmp
mov
mov
xchg
int
xchg
jns
testb
clc
int
pop
inc
xor
add
out
mov
arpl
xor
add
mov
mov
xor
jb
cmp
and
mov
movsl
or
fnstenv
inc
push
das
push
adc
jp
pushf
adc
mov
xor
push
in
inc
rcr
nop
outsl
xlat
lret
or
icebp
repz
push
adc
insb
test
test
rclb
repz
and
mov
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
jmp
int
mov
mov
outsl
lahf
jmp
jl
jg
jl
sub
adc
mov
add
mov
or
loop
xor
fldl2t
mov
decb
adc
addr16
enter
mov
xchg
lret
sub
pop
jle
mov
imul
xor
mov
and
and
mov
inc
adc
fidivrl
cltd
fiadds
icebp
imul
lods
add
add
sti
mov
loope
aaa
adc
bound
jnp
xchg
nop
adc
jo
insb
xchg
mov
xchg
cmpsl
sub
jae
hlt
jns
cmp
mov
add
insl
ret
push
lods
pop
sahf
js
and
aad
fnstenv
enter
pop
adc
xchg
inc
hlt
push
inc
push
icebp
addr16
cmpsb
mov
leave
test
loopne
add
jo
scas
mov
aaa
inc
ret
cwtl
and
or
sbb
leave
into
push
icebp
cmc
adc
xchg
mov
inc
inc
sbbb
outsl
jae
pop
sbb
pop
push
lods
mov
cmp
sbb
mov
jl
mov
cmp
dec
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
jmp
adc
iret
sbb
and
inc
adc
jg
jl
pop
not
or
lods
mov
fsubs
popa
pop
outsl
xor
mov
mov
test
inc
xchg
jmp
addl
inc
mov
xor
scas
out
repz
push
cltd
out
jns
jnp
cli
les
push
mov
mov
std
push
and
aas
mov
push
push
adc
adc
cmp
repnz
out
cmpsb
and
test
mov
adc
dec
ret
or
in
sti
add
repz
add
cs
pop
jb
scas
push
sub
mov
clc
or
mov
sbb
sbb
cmp
xlat
inc
rolb
pop
addr16
adc
push
mov
jge
cmp
xor
insl
mov
and
sub
ret
dec
mov
sbb
lock
mov
out
cli
pop
push
jns
jle
xchg
gs
and
arpl
or
stc
pushf
inc
mov
mov
push
inc
xchg
inc
mov
xchg
les
fisttpll
adc
or
or
aaa
fs
shlb
add
sub
push
cmp
mov
pop
xchg
out
cmove
jge
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
jmp
stos
outsb
cmp
fnstsw
lods
sbb
push
adc
jg
jl
push
sbb
mov
iret
lods
add
and
sti
cmp
in
jg
rcr
mov
mov
cmp
lret
popf
jne
inc
push
push
or
cmp
xchg
jae
adc
lds
add
dec
mov
fwait
out
push
hlt
xor
push
popa
fadd
nop
mov
mov
cli
sbb
ds
xchg
les
push
cmp
push
out
call
mov
cmpsb
pop
add
sub
fdivrs
push
push
add
ds
test
xchg
lods
in
jnp
cmpsl
lret
cmp
mov
repz
mov
out
mov
mov
push
lahf
pop
aaa
jns
movsl
add
inc
ja
cwtl
in
imul
mov
ja
xor
inc
outsb
mov
add
loopne
test
jae
xor
pop
int3
jo
mov
adc
and
cmpsb
mov
iret
aas
and
iret
fisubrl
clc
dec
cmc
aam
call
mov
xchg
test
stos
mov
repz
cmpsl
ds
and
test
xchg
sti
pop
shlb
fistps
jno
arpl
mov
fisttpll
hlt
mov
jmp
or
push
cmp
dec
rcll
loopne
adc
jl
inc
inc
push
push
rorl
loop
xchg
je
inc
mov
or
sub
sub
sub
pop
push
sub
push
mov
mov
movsb
mov
out
push
or
nop
ret
stc
js
lods
ljmp
aad
pop
subl
mov
sti
jnp
inc
xor
jo
sbb
sub
push
jns
cmp
jb
or
add
push
sub
add
test
mov
les
bound
add
cmp
arpl
mov
and
cmp
andb
mov
shlb
imul
imul
add
adc
dec
xchg
xor
jge
addl
mov
dec
fimuls
adc
dec
outsl
in
or
pusha
jnp
out
jnp
out
pop
repz
mov
js
jnp
outsl
fmull
fwait
outsl
aad
cmc
or
sbb
out
lds
stos
fisubs
mov
sbb
lret
enter
data16
out
jg
repnz
cmpsb
hlt
decb
and
fisttpl
mov
gs
dec
sbb
insl
adc
jb
roll
cltd
stc
inc
add
add
imul
mov
xor
sub
mov
mov
jmp
push
pop
inc
cmpl
jb
push
pop
xor
scas
adc
jl
jg
jl
daa
sub
mov
jge
sbbl
push
adc
cltd
adc
mov
inc
std
mov
icebp
inc
das
xchg
and
lods
mov
sub
mov
mov
lods
pop
clc
push
push
dec
or
sub
sub
je
mov
ret
jle
addr16
leave
xor
mov
or
or
outsl
cmpl
rcrl
jns
sub
push
mov
test
popa
jl
mov
mov
inc
loope
test
xor
dec
andl
out
jnp
or
ret
dec
ds
rorl
xchg
adc
jge
fsubl
pop
inc
lds
addr16
sahf
xor
cmp
or
mov
inc
push
in
jecxz
xchg
or
xchg
push
jl
test
cmp
mov
cmp
jne
imul
lcall
out
push
cmp
addl
dec
ret
jae
dec
mov
mov
sti
add
or
daa
std
xchg
and
rol
pop
push
and
cltd
dec
notl
ja
lret
mov
popa
in
clc
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
jmp
jecxz
out
jge
sti
mov
pop
cmp
popw
jl
xor
jl
aaa
sub
mov
jbe
xor
and
popf
jo
dec
and
ja
inc
push
fstps
push
loopne
push
inc
jns
and
push
in
sahf
fidivl
xchg
outsl
sar
cmc
gs
icebp
in
adc
imul
stos
mov
push
int3
pop
fsubp
in
push
mov
lock
or
xchg
ja
push
xor
pushf
outsl
jmp
lcall
xchg
jb
imul
icebp
mov
call
enter
sbb
push
arpl
pop
idivl
aas
sbb
js
out
mov
add
mov
imul
mov
jne
fnstcw
iret
adc
cwtl
pop
gs
loopne
xor
notb
mov
xlat
mov
jmp
cmp
cli
movsl
inc
call
mov
pop
mov
movsl
f2xm1
nop
push
mov
nop
iret
and
push
ret
mov
xor
call
adc
sub
and
mov
scas
arpl
pushf
jmp
jae
scas
scas
jle
inc
hlt
jns
mov
mov
sbb
outsb
mov
lahf
gs
push
loopne
sarb
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
adc
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
pushl
call
jmp
movzbl
adc
mov
adc
jmp
shrl
sti
insl
fs
push
insl
cmpl
jl
jl
fsts
cmp
cmpsb
xor
fistpll
imul
mov
sar
int3
mov
and
and
negl
data16
enter
xchg
dec
jns
lods
push
cmp
sbbb
and
jg
or
inc
mov
repnz
inc
xchg
xor
sbb
out
mov
adcb
jg
mov
or
popf
pop
call
popf
and
jns
outsl
das
sti
hlt
xchg
data16
add
sub
jl
cltd
repz
add
push
lods
jo
dec
out
mov
rcr
pop
and
cmp
stos
ljmp
sbb
pop
fdiv
inc
cmp
mov
mov
push
leave
jnp
call
mov
mov
sbbb
data16
nop
dec
adc
das
cld
push
sbb
test
and
add
push
ret
mov
jmp
shl
xchg
fs
jns
adc
jne
mov
jl
bound
inc
sbbb
jns
dec
jbe
pop
in
xchg
mov
loope
negl
mov
add
fucomi
inc
je
mov
enter
imul
popa
mov
mov
push
bound
jecxz
mov
ret
or
xchg
sub
sub
xchg
ret
into
inc
push
cmpsb
mov
dec
stos
shll
cs
test
fstpt
jp
cmp
faddl
add
adc
push
ljmp
or
ret
sbb
sub
mov
mov
or
subb
push
fistpll
xor
xorb
cmp
movsl
movsb
mov
inc
mov
push
cmp
mov
icebp
call
push
popf
test
mul
mov
movl
inc
je
adc
adc
fistpl
in
lret
shrl
cmp
shl
fdivrl
xorl
xor
add
subl
mov
mov
xor
push
addl
mov
mov
subl
add
xorl
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
mov
xor
mov
jmp
enter
inc
lea
mov
sub
add
mov
jl
bound
sub
mov
inc
xchg
mov
cmp
or
mov
loopne
or
in
sub
or
pushf
and
stc
pop
inc
jne
shlb
test
xchg
mov
xchg
sbb
and
push
jmp
shll
pop
lret
hlt
aad
xlat
aad
insl
cli
fs
add
sbbb
popf
jp
pop
ret
dec
or
sub
dec
sbb
fs
shrb
imul
aas
cmc
clc
pop
mov
loop
in
cmp
imul
popf
inc
popf
or
and
and
pop
xor
aam
adc
pushl
lcall
mov
cmp
cmp
mov
cmp
sarb
in
cmp
pop
mov
loop
jmp
add
adc
dec
scas
push
movsl
inc
hlt
push
mov
sbb
incb
add
test
dec
adc
enter
sbb
pop
ret
push
mov
push
xor
xor
xor
or
sub
sub
movl
movzwl
adc
jmp
insl
je
xchg
jge
fs
mov
inc
adc
jl
sbb
jl
outsb
inc
out
sbb
aam
cmp
mov
insb
les
and
sbb
jp
addr16
testb
xchg
or
push
push
jl
add
or
inc
push
stos
adc
add
iret
adc
clc
add
ja
in
adc
mov
inc
mov
pop
lcall
cmp
pop
in
ss
lret
aas
ss
mov
and
aad
lock
mov
popf
mov
mov
mull
shlb
sub
pop
pop
sti
popa
insb
lcall
inc
adcb
cwtl
dec
repz
push
lods
dec
mov
aaa
xchg
xchg
lcall
leave
xchg
ss
loope
jl
xorl
ret
movsl
adc
xchg
loopne
addb
or
pop
push
cmp
mov
push
imul
repz
out
jle
add
xor
or
and
call
jne
gs
mov
aad
xor
test
ljmp
test
cld
mov
or
mov
notl
jmp
xor
push
jp
fnstsw
mov
insl
in
sub
jl
mov
lcall
jbe
xchg
ljmp
xorl
int3
addr16
idiv
xor
sysexit
dec
std
or
adc
stos
and
inc
mov
lods
add
insl
adc
call
add
out
call
scas
fdivs
push
push
mov
lds
and
sub
mov
fcoms
jge
push
pushf
popf
bound
xchg
or
mov
fldenv
cmpl
xchg
fisttps
push
stos
pop
pusha
fdivr
pop
mov
xor
fisubrs
mov
mov
mov
test
mov
cmp
in
mov
rorl
sbb
out
mov
dec
loope
jge
xchg
out
and
mov
sbb
inc
mov
loopne
adc
cld
push
mov
xchg
aad
mov
fxch
jmp
push
jge
jns
push
pushl
mov
les
push
mov
pop
inc
data16
xchg
insl
pop
sub
mov
xor
add
orl
mov
neg
mov
andl
xor
add
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
mov
mov
mov
mov
mov
mov
mov
jmp
in
insl
push
jge
imul
mov
inc
fsubrs
jl
jg
jl
xor
push
outsl
fmuls
cmp
adc
in
mov
aam
loop
insl
or
movsb
inc
test
inc
orl
adc
mov
fistpl
dec
pop
mov
sbb
in
fisubrl
jbe
pop
test
push
jnp
filds
pop
cmp
xchg
add
in
loop
popf
lds
adc
xchg
shr
sub
jns
push
push
sbb
negb
xor
mov
push
roll
fidivrl
jecxz
xchg
out
pop
imul
xchg
xor
fdivl
stos
sub
xchg
iret
in
and
ret
aad
adc
and
sub
xchg
sbb
sbb
lock
dec
cmp
movsb
pop
push
lods
aad
pop
xchg
jg
inc
jmp
xchg
and
ret
adc
inc
mov
lahf
sub
lods
notb
jecxz
push
sahf
add
add
xorb
add
pop
mov
dec
rcrb
je
jle
call
scas
fs
mov
mov
mov
mov
mov
mov
test
jmp
pop
loope
sbb
lret
mov
jecxz
dec
fwait
in
jl
sbb
jl
movsb
sbb
and
sbb
push
pop
and
dec
adc
jnp
cmp
dec
call
cmp
repz
and
int
data16
cmpsb
stc
or
push
mov
sub
jno
in
fwait
xor
xor
mov
mov
mov
inc
mov
lret
cmp
pop
sbb
xor
clc
les
add
cmpsb
cmp
mov
gs
adc
lret
or
push
adc
movsb
adc
sahf
testl
in
fdivs
cld
sti
stc
es
gs
sarl
push
mov
decb
lods
incb
adc
pop
ficoml
add
pop
jns
or
lea
leave
loopne
int3
out
xchg
loopne
into
jb
loopne
sub
mov
out
ficoms
mov
data16
jno
sbb
jbe
jae
and
fidivrl
sub
dec
adc
shlb
into
lods
mov
jne
mov
xor
add
leave
ret
push
mov
sub
adcl
jmp
or
dec
or
dec
aad
aas
adc
loopne
test
jl
jg
jl
mov
ljmp
mov
test
fidivrl
out
test
sub
mov
and
mov
add
and
mov
mov
addr16
inc
jp
pop
fnsave
xchg
jecxz
js
dec
imul
jnp
adc
int3
jmp
sbbl
lock
sbb
add
test
and
clc
sub
lret
cmpsl
aad
ret
insl
insl
out
out
out
adc
fcmovu
pushf
pusha
inc
mov
mov
xchg
mov
mov
pop
pop
or
mov
iret
movsl
pop
cmp
js
cmp
pusha
in
or
lret
cmpsb
inc
push
leave
es
mov
mov
js
and
dec
test
xchg
and
out
shrl
repnz
sti
fstpl
cmpsb
sub
jg
mov
mov
ret
adc
mov
jge
icebp
addl
sub
mov
sub
mov
inc
lock
subl
mov
neg
movl
adc
movl
mov
xorl
push
orl
push
adc
push
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
jmp
out
sub
sub
jmp
push
adc
pop
xchg
and
jg
jl
pushf
cli
pop
bound
repnz
mov
lret
ret
push
dec
and
dec
pop
mov
mov
lret
popf
lret
or
scas
movsl
pop
cmpsb
or
pop
cmpsl
inc
inc
sbb
xor
fdivrl
out
jmp
pop
enter
cmp
aad
mov
or
pop
jmp
cmpsl
lods
fstps
sti
arpl
cs
jno
push
stos
into
ror
stos
dec
stos
pop
xchg
imul
cmpsb
mov
xorb
xchg
movsb
pop
into
lods
sub
mov
movsb
mov
sub
cwtl
pop
pop
push
xchg
sbbb
cmp
fldt
shrl
fwait
mov
emms
fildl
out
add
hlt
jg
jg
arpl
fildll
out
mov
iret
jmp
xchg
imul
ss
ficoms
daa
enter
lret
xchg
sub
shlb
loop
push
mov
jp
rcll
pop
shlb
stos
lret
cs
dec
orl
dec
mov
xor
movzwl
xor
mov
jmp
icebp
popa
jno
loope
mov
add
js
mov
jl
jg
jl
in
xchg
lods
not
xchg
outsl
dec
scas
ljmp
sbb
fistpll
sbb
repz
lds
shrl
divb
adc
or
dec
cmp
or
testb
repz
aad
shrb
xchg
cltd
fcom
lods
cmpb
addr16
pop
jle
sub
jge
xchg
pop
ret
and
lds
xchg
out
mov
or
xchg
in
sub
mov
cmp
and
dec
pop
fldenv
sbb
push
ja
cmpsb
cld
jecxz
jp
mov
arpl
inc
mov
push
sub
jp
cwtl
or
xor
imulb
jb
sbb
xor
xlat
push
ret
sub
out
nop
jno
jns
mov
push
jmp
mov
fcmovnu
rcl
sbb
out
repz
fldl
fldl
adc
mov
mov
pop
jp
push
sub
inc
loopne
add
adc
cmp
add
test
add
add
add
jne
push
call
xor
or
dec
mov
jmp
movl
movl
movl
movl
or
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
push
call
jmp
xor
mov
addl
xor
sbbl
add
mov
orl
movl
movb
or
mov
xor
add
sbbl
mov
decl
mov
xor
adcl
add
xorl
push
mov
xor
sbbl
add
xorl
push
andl
mov
inc
mov
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movzbl
xor
mov
negl
xor
add
orl
jmp
sarl
sarl
sub
bound
jg
jl
or
scas
mov
mov
xchg
rcrl
bound
insl
push
popf
repz
mov
shlb
adc
push
sbb
stc
inc
pop
adc
jmp
aaa
mov
add
pop
xchg
mov
inc
push
mov
fwait
cmp
popa
or
sti
repz
test
into
cwtl
push
inc
in
pusha
fwait
dec
sahf
cmp
jae
adc
xchg
cli
jno
lea
das
lock
xor
outsl
mov
mov
std
call
adc
adcb
adc
pusha
sahf
mov
cltd
dec
pop
arpl
adc
in
or
loop
or
jbe
sub
jl
in
mov
roll
dec
adc
loope
pop
or
insb
lds
les
pop
aad
ret
test
or
rorl
dec
push
dec
gs
into
stos
and
pusha
push
lea
addl
push
orl
pushl
addl
jmp
push
repz
adc
adc
or
push
dec
push
mov
pop
roll
rorl
gs
add
hlt
test
cmp
mov
orb
sub
mov
sbb
sub
mov
or
in
stos
push
ljmp
clc
push
add
sub
dec
adc
sbb
add
sbb
aas
cmp
push
aad
ja
outsb
in
test
mov
test
ljmp
mov
jmp
add
xor
fsubr
ret
movsb
xor
push
cmp
orl
xchg
mov
xor
insb
sbb
mov
test
mov
sub
lret
sti
test
or
push
xchg
les
pop
decl
or
dec
jo
jp
push
in
repz
lret
int3
aas
testl
mov
dec
push
repz
testb
mov
inc
jnp
sbb
and
lds
mov
in
jmp
xchg
pop
cmpsl
inc
adc
sub
into
pop
push
pop
and
jl
jo
fsubrp
aad
stos
insl
cmp
leave
and
or
cmpsb
jno
lods
and
gs
gs
xor
fchs
or
fucomip
mov
std
jno,pn
popa
mov
in
loop
iret
cmpsl
cltd
test
pop
out
xlat
scas
adc
push
add
xchg
dec
fildl
xor
mov
cmp
fisttpl
pop
je
pop
sbb
cmc
sub
icebp
sub
in
lock
xchg
ljmp
add
imul
sbb
aad
gs
loopne
dec
daa
in
aam
adc
std
dec
pop
scas
xchg
push
cmp
ds
jecxz
push
psubq
sbb
mov
scas
or
js
push
lea
out
js
enter
pushf
xchg
inc
test
sub
pop
arpl
cltd
mov
add
test
mov
jno
mov
fisttps
std
cmpsb
sti
push
mov
adc
mov
incl
add
add
add
mov
inc
in
xor
add
push
mov
jmp
dec
add
cmpl
fnsave
xchg
mov
jg
cltd
outsl
push
jl
or
inc
pop
or
cs
decb
shl
adc
insl
adc
adc
rolb
daa
mov
inc
jge
jnp
pop
inc
cmp
inc
lods
icebp
push
in
mov
aam
and
push
in
mov
jnp
gs
sbb
stos
sub
pop
loopne
decl
mov
xor
cmpl
push
mov
js
sub
cmc
bound
mov
xor
sub
pop
xchg
mov
mov
add
push
sub
inc
sti
ficoms
in
pop
xor
bound
dec
je
mov
ss
fidivl
add
popa
adc
movsb
dec
push
idivl
inc
add
aas
inc
mov
pusha
lods
or
and
mov
mov
jmp
ret
fnstcw
lret
push
sahf
lods
in
fwait
sahf
sub
xor
out
push
mov
scas
adc
push
ret
stos
add
add
daa
add
add
dec
into
hlt
jge
jge
fnstenv
jecxz
jnp
jl
or
or
cwtl
pusha
sub
stc
lret
mov
in
arpl
shrl
add
mov
testb
mov
adc
sbb
inc
mov
inc
xlat
inc
pop
jge
push
adc
inc
es
aam
imul
lds
ds
popf
sbb
pop
jbe
push
cmpsb
pop
pop
cwtl
insl
mov
jecxz
xor
arpl
pop
lahf
dec
out
lods
sub
sti
and
insl
ret
cmp
push
fnsave
xor
sbb
mov
movsl
fstpt
or
data16
cmp
dec
xor
and
or
cltd
mov
mov
clc
inc
lret
pop
jg
and
dec
push
dec
cmpsb
or
inc
fsubl
fcoml
or
fwait
mov
mov
jne
movsl
jbe
lahf
pop
ror
xchg
dec
in
inc
jecxz
loopne
pop
rorb
add
add
daa
add
add
jmp
in
adc
xor
cmp
jg
jl
push
inc
jbe
cmpsb
andb
mov
jge
pop
pop
lahf
adc
mov
popa
fsts
aas
cmpsb
sbb
lret
mov
insl
jl
scas
pop
sub
inc
jnp
inc
fmuls
ror
fnstenv
clc
xchg
cmpl
mov
popf
and
adc
push
mov
repnz
mov
and
sbb
push
xchg
shl
adc
jae
clc
cmpsb
dec
lret
lcall
sbb
and
sbb
dec
fsts
test
mov
ss
pop
fisubl
mov
mov
dec
cmp
dec
adc
icebp
popa
sar
mov
loopne
xchg
xor
leave
pop
leave
daa
mov
mov
adc
cs
ljmp
rcll
dec
xor
into
jno
mov
cld
inc
xor
dec
dec
stc
mov
imulb
pop
movsl
aas
sub
xor
and
shlb
mov
cmpsb
decl
clc
add
loopne
test
inc
call
xor
add
push
mov
xor
add
push
pushl
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
jmp
xor
mov
and
cltd
cmc
pop
push
sbb
jl
or
in
leave
adc
imul
lods
test
mov
dec
loopne
outsb
inc
xchg
outsl
bound
adc
cmp
lcall
adc
dec
dec
loope
or
mov
jno
mov
andb
xchg
mov
jb
add
sub
sarb
jp
sahf
or
push
daa
and
or
fcompl
cld
int
cmp
stos
xchg
jecxz
into
pusha
shll
fdiv
jmp
in
enter
mov
and
in
rclb
aas
sarb
cmp
jnp
mov
jmp
mov
leave
mov
mov
xor
ds
fcmovu
out
ss
jl
imul
les
in
popf
into
inc
cmp
jge
sub
xlat
mov
sbb
push
jno
mov
push
fisttps
cmp
in
inc
movsl
lcall
jnp
push
fs
xchg
push
push
fs
xor
decl
mov
sub
jmp
or
and
jnp
jnp
gs
push
and
inc
push
cmp
jg
jl
jne,pn
pop
pop
push
xor
cmp
pop
jns
aas
in
cld
fsubs
xchg
test
inc
test
outsb
cwtl
cmp
ds
lret
cwtl
push
lcall
cmp
shrl
and
shlb
popl
mov
nop
dec
into
cmp
repnz
iret
add
jecxz
popf
dec
jbe
jnp
adc
int3
js
shl
popa
mov
pusha
jmp
xchg
addr16
mov
std
bts
xchg
add
loope
cmpl
outsb
and
adc
das
jne
sub
insl
cmp
xchg
mov
es
daa
jbe
cwtl
xchg
dec
loop
push
shll
cmp
inc
mov
popf
in
out
fisttpl
push
inc
fcmovnbe
test
jmp
mov
fnstcw
push
les
lea
xchg
fs
pop
inc
dec
pop
cmc
pusha
xlat
cwtl
inc
outsl
les
push
pusha
movsl
sub
out
rcrb
jl
insb
mov
out
inc
clc
mov
add
jmp
xchg
out
std
push
gs
repz
push
stc
daa
cmp
jg
jl
mov
outsl
add
xor
cwtl
mov
adc
cmpsl
dec
mov
cmp
push
testb
pop
ret
scas
pop
mov
or
mov
sub
and
cwtl
xchg
mov
icebp
fs
fwait
aam
mov
js
cltd
arpl
mov
dec
cmp
add
mov
push
call
and
add
aaa
mov
das
subb
xchg
stos
sbb
pop
xchg
and
pop
or
adc
fcmovne
and
or
stos
sub
mov
jo
sub
add
sub
mov
cmp
dec
out
xor
sbb
es
jbe
inc
xchg
cmp
mov
cmc
mov
sbb
ja
mov
insl
and
adc
xchg
dec
loop
cli
sub
aaa
shll
dec
lock
jmp
hlt
andl
lock
push
inc
es
scas
addr16
out
inc
gs
inc
clc
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
jmp
scas
stos
fs
js
addr16
test
cmp
jl
jno
push
dec
push
pop
jecxz
out
out
outsl
pop
inc
push
inc
out
adc
sub
into
jl
push
ljmp
mov
repz
imul
ljmp
jbe
jg
mov
and
shrl
adc
cwtl
rep
jnp
jecxz
gs
in
dec
dec
stos
cld
cli
dec
inc
xor
iret
movsl
jne
jbe
call
mov
subb
add
cld
sub
jle
sahf
les
xlat
mov
fiaddl
inc
cltd
mov
sbb
sub
mov
xchg
das
mov
outsb
or
or
call
mov
leave
jmp
or
repnz
mov
inc
pop
jle
addl
jae
les
xor
mov
sub
xchg
mov
sbb
enter
pop
dec
fsubl
rcll
addr16
test
ret
jmp
shr
popf
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
jmp
sbb
mov
insl
lods
test
cmp
or
shll
cmp
leave
clc
inc
sahf
mov
adc
int3
add
push
mov
cld
mov
dec
xchg
ror
movsb
mov
and
jle
xchg
repnz
negl
scas
sbb
xchg
sahf
dec
pop
mov
xchg
decl
fstl
dec
fists
fisubrl
cld
push
fnsetpm(287
loopne
mov
adc
xchg
ret
aad
lock
dec
push
imull
dec
jmp
mov
pushl
in
popf
add
adc
test
add
xlat
ret
cltd
cmpsb
pop
negb
lods
sbb
aaa
in
and
cld
or
xchg
sub
out
in
dec
jmp
iret
or
adc
jg
mov
jmp
daa
imul
arpl
pop
sti
dec
iret
lahf
mov
jns
xor
out
cmp
lcall
icebp
sbbl
mov
lret
mov
add
jp
jl
sbbb
call
mov
mov
jmp
gs
add
jge
jecxz
stos
insb
dec
mov
rcl
jl
or
insl
mov
insl
jbe
and
xor
dec
andl
es
sysenter
icebp
add
inc
stos
fcoms
loope
add
dec
fidivrl
ret
sbb
jmp
adc
sbbl
mov
xor
jge
cld
enter
pop
fcomip
stc
jmp
add
jg
jb
clc
cltd
shrb
inc
popf
pop
jmp
rolb
push
icebp
inc
xchg
mov
fcompl
fildll
aam
sahf
push
adc
cltd
lret
xor
and
scas
int3
inc
lret
xchg
and
cs
jmp
mov
jns
mov
or
out
mov
loop
cli
sarl
push
xchg
out
add
or
mov
repz
jg
pop
std
cmp
sbb
mov
test
adc
and
icebp
jge
mov
cmpl
in
push
mov
sar
jae
cs
gs
pop
and
test
enter
pop
pop
pop
leave
ret
push
mov
sub
xor
movl
movl
orl
jmp
push
repz
pop
stos
lea
nop
push
mov
jl,pt
push
jg
jl
xchg
scas
scas
rclb
cmc
inc
loope,pn
fadds
mov
loop
cltd
lcall
pushf
cmp
and
ss
fadds
clc
add
dec
cs
lret
push
test
xchg
cmpsl
push
or
sahf
xchg
pop
xchg
loope
dec
push
dec
ja
jae
adc
aas
mov
cltd
jecxz
outsl
mov
ljmp
fs
bound
test
and
sub
cmpsl
ljmp
clc
dec
fists
shlb
push
xor
js
test
hlt
mov
inc
or
jecxz
sbb
adc
cmp
pop
push
insl
pop
shrl
dec
xchg
mov
mulb
sbb
ss
mov
sub
xor
jle
out
loopne
mov
shrl
cld
mov
mov
sub
stos
lods
mov
mov
pop
mov
in
xchg
mov
divl
iret
adc
stc
jmp
xor
mov
xchg
orl
adc
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
orl
mov
xorl
lea
and
jmp
divl
test
pop
jnp
js
ds
mov
lea
jl
push
jg
jl
sbb
lock
cmp
test
sub
add
xorb
pop
cwtl
cmp
dec
test
mov
pop
dec
adc
adc
bound
rep
shl
adc
sub
rcl
sub
and
mov
mov
inc
mov
pusha
cmc
testb
out
out
push
das
popf
out
rcrl
imul
jmp
insb
arpl
mov
fwait
rclb
or
stos
dec
pop
ja
sub
fsubrl
push
adc
loop
adc
sti
pop
icebp
shlb
sahf
int3
in
add
sub
adc
insb
cmp
mov
mov
mov
cmpsl
mov
out
notb
or
fisubrl
mov
pushf
mov
xor
cmc
mov
and
mov
mov
cltd
mov
cmp
and
orb
test
push
arpl
aam
or
push
popa
fadd
sub
xchg
in
cld
mov
adc
mov
pop
mov
jmp
movsb
flds
xor
mov
xchg
xor
jg
jl
aaa
das
push
pop
cmp
pop
add
push
lcall
imul
mov
imul
mov
lcall
addl
leave
sbb
cmp
dec
adc
inc
mov
sbb
xchg
mov
ds
cmp
sub
xlat
stos
stos
jnp
sub
mov
xchg
int3
or
loopne
mov
fistl
sub
popf
popf
jg
pusha
dec
fnsave
fmull
add
outsl
icebp
leave
call
dec
subl
inc
mov
cld
in
sbb
push
neg
push
out
es
jo
arpl
cmc
xor
mov
imul
dec
mov
aad
dec
sub
xor
add
ss
ret
add
mov
loopne
insb
lret
adc
rolb
insl
xor
mov
inc
and
pop
xor
mulb
cmpsb
lret
sub
pop
sbb
out
inc
or
or
mov
sbb
push
lea
mov
mov
adc
push
push
mov
orl
mov
mov
mov
and
mov
xor
andl
xor
or
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
adcl
jmp
adc
in
data16
mov
sub
xor
jg
jl
and
dec
lock
push
jne
aaa
cs
pop
arpl
iret
adc
jno
call
mov
inc
jp
inc
xchg
lock
sub
xchg
inc
mov
mov
sub
mov
enter
adc
repz
mov
mov
sbb
pop
adc
shrl
lods
ja
lret
dec
mov
mov
mov
mov
adc
scas
add
lcall
rcll
sub
dec
jno
jecxz
dec
ror
xchg
and
sub
cmp
rcrb
inc
add
in
push
dec
test
and
icebp
push
add
mov
push
enter
popf
or
mov
out
inc
orl
sti
add
sbb
scas
out
popf
nop
cmp
sbb
cmp
iret
mov
sbb
xor
stos
fidivrl
insb
adc
xchg
adc
imul
sbb
rolb
add
push
add
add
andl
add
movl
jmp
ss
call
pop
fcom
xor
out
inc
pop
xor
jg
jl
nop
add
ffree
push
data16
lcall
mov
outsl
pop
js
dec
mov
test
cmp
or
arpl
mov
push
cs
std
xchg
inc
cmc
cli
mov
mov
sub
les
xor
dec
mov
pushw
mov
lods
inc
test
int3
popa
fiaddl
insl
cli
movsb
xor
iret
cli
jl
and
cmpsl
negl
inc
pop
and
jo
push
ret
stc
dec
pop
jecxz
add
mov
ss
xor
cwtl
cmpsl
scas
negb
sarb
orl
std
pmulhw
jnp
adc
mov
xor
add
cmpsl
repnz
pop
fs
loop
jg
into
rorl
adc
xchg
sbb
cli
ds
pop
imul
data16
push
lods
and
mov
mov
dec
int
cmp
mov
cltd
jge
push
neg
mov
push
mov
icebp
mov
inc
int3
and
add
arpl
out
scas
adc
adc
mov
movl
movl
cmp
je
mov
and
movl
andl
mov
inc
mov
cmpl
jne
pushl
push
push
pushl
push
push
pushl
call
cmpl
jb
lea
mov
xor
xor
mov
sub
xor
jmp
lea
mov
std
inc
nop
inc
ja
icebp
gs
jl
dec
fucom
je
mov
imulb
mov
mov
mov
cli
mov
pop
test
mov
out
and
add
jecxz
cmp
repnz
mov
jbe
test
imul
or
pushf
inc
dec
fdivr
aam
and
xchg
mov
call
das
mov
cltd
or
and
dec
jno
shlb
ja
lea
pop
cmp
rcrb
or
ljmp
mov
add
stos
sub
lea
jmp
subb
cmp
lahf
in
cs
addr16
in
push
inc
jno
sub
and
ss
decl
mov
sti
adc
test
pop
cmp
push
and
inc
xor
adc
mov
ss
push
out
in
adc
add
arpl
insl
mov
adc
dec
mov
cmp
fdivl
mov
imul
out
aad
mov
jns
inc
lock
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
imul
mov
mov
cmp
je
mov
jmp
fsubs
jp
jp
mov
xchg
fists
aaa
jl
push
jg
jl
cmp
scas
hlt
popfw
lods
fmuls
leave
inc
push
fs
int
jle
adc
push
into
into
repnz
cmp
sahf
sbb
mov
into
imul
xor
fwait
out
cmc
mov
dec
insb
pop
jg
hlt
add
jle
jmp
mov
cmp
stc
jno
lret
push
insb
push
push
pop
xchg
jge
add
adc
cmp
scas
sub
int3
fsub
insl
pop
inc
loop
les
dec
rcrl
push
mov
rcl
std
mov
pop
push
xor
inc
sub
inc
xchg
and
ja
rolb
enter
jecxz
pop
and
mov
pusha
ret
sbb
pop
dec
fisubrs
arpl
xchg
out
push
or
jecxz
scas
adc
inc
mov
sbb
jae
icebp
cmp
cwtl
dec
mov
jb
mov
fs
inc
js
mov
add
cmpsb
xor
mov
push
movsb
pop
mov
push
nop
sbb
pusha
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
jmp
jnp
lds
cmp
adc
sub
jl
push
jg
jl
mov
aaa
sti
push
adc
frstor
cli
test
shrb
sbb
test
test
pop
notl
jle
andb
shl
out
or
fisttpl
in
cli
sahf
pop
add
cmc
mov
fidivrl
hlt
jg
js
lcall
or
adc
lahf
cmp
adcl
int
into
inc
or
scas
pop
pop
add
xchg
or
in
aad
scas
or
mov
pop
das
imul
or
ja
jnp
adc
add
mov
jl
sbb
push
mov
push
lahf
xchg
xchg
pop
lahf
jle
xchg
lods
sahf
out
imul
xor
addr16
outsl
push
shr
inc
adc
xchg
sub
rcr
mov
gs
scas
push
enter
hlt
xor
ja
fwait
adc
fcompl
xor
jmp
mov
aam
dec
push
inc
sub
hlt
mov
or
cmp
je
mov
jmp
push
add
jge
jnp
and
xchg
insb
xor
jl
push
jg
jl
lcall
sbb
jl
cmpsl
and
in
pop
hlt
or
lock
insl
ficompl
mov
lds
sub
jo
adc
iret
pop
or
mov
mov
lods
jmp
and
jmp
sbb
adc
push
mov
jne
icebp
xchg
test
arpl
cmp
jae
outsb
sub
cmp
mov
lahf
repz
test
lcall
push
stos
mov
mov
insb
dec
dec
jbe
sub
adc
push
movb
jmp
shl
pop
in
outsb
jo
sahf
cmc
mov
int3
imul
mull
push
insb
test
pop
dec
pop
mov
lock
push
fldt
mov
jno
cmpsl
xor
cwtl
jnp
inc
add
dec
mov
clc
jle
jbe
mov
insl
xchg
push
mov
jg
test
or
imul
flds
loopne
loope
pop
dec
fnstcw
xor
inc
std
jmp
inc
cld
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
jmp
pop
fst
jge
out
jnp
inc
sub
mov
jl
jg
jl
fsubrl
ds
pop
xor
test
push
add
addr16
out
and
cmp
icebp
dec
push
and
mov
hlt
mov
sub
inc
or
xchg
or
or
sub
add
lret
push
cmp
int
xchg
clc
push
test
xchg
mov
inc
mov
dec
pop
fldcw
xor
push
cmp
leave
fwait
add
adc
adc
or
jmp
mov
mov
jb
adc
ss
lock
clc
and
jge
imul
stos
addl
idivl
cwtl
mov
pop
pop
aas
lock
sbb
fists
movsl
call
pop
hlt
fbstp
mulb
adc
in
cmp
push
incb
loop
pop
ret
or
mov
sahf
lret
dec
and
sti
jecxz
adc
in
cmpb
in
cpuid
fnsave
fcom
cmp
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
push
xor
push
movl
sub
movl
xor
or
sbb
mov
mov
decl
push
addl
mov
xor
mov
xor
adcl
xor
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
add
jmp
xchg
and
and
out
mov
lcall
jl
jl
jl
mov
shr
add
loope
loop
cmpsb
or
adc
aam
outsb
fs
cmc
ret
mov
xor
push
popa
pusha
inc
sub
xchg
adc
mov
mov
jae
push
sub
sbb
jne
repnz
push
outsl
les
or
data16
aas
sbbb
les
idiv
ss
imul
test
inc
outsb
shlb
xchg
add
and
mov
pop
push
mov
mov
pop
faddl
rorl
mov
movl
cmp
jne
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
jmp
mov
jns
std
ficomps
jo
pop
lahf
xorb
jl
jl
jl
and
mov
pop
or
ss
xor
jb
cmp
or
fldl
sub
popf
imulb
jl
push
pop
pop
lods
or
jp
test
aad
mov
xor
div
rcrl
mov
mov
mov
lcall
aam
jbe
std
mov
jp
mov
sbb
jo
sti
fildll
fwait
pop
fcomip
adcl
iret
pushf
int3
mov
cwtl
cmp
pop
mov
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
push
xorl
call
adcl
test
movl
je
orl
xor
jmp
subl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
orl
mov
movl
push
push
push
call
movl
cmp
je
orl
push
addl
push
adcl
push
adcl
push
sbbl
push
push
call
jmp
or
mov
and
mov
sub
movl
lea
adc
mov
add
lea
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
movzwl
sbb
mov
mov
xor
mov
movl
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
orl
push
movzbl
sub
mov
mov
movl
xor
subl
push
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbbl
add
mov
movzbl
mov
cmp
movl
mov
movl
je
neg
mov
xor
add
imul
mov
jmp
xor
xor
add
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
call
cmpl
jb
mov
mov
xor
inc
add
movzbl
sub
mov
mov
mov
orl
mov
sbbl
xor
sbbl
add
movl
cmp
jne
mov
sbb
mov
xor
add
mov
sub
add
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
xor
mov
mov
orl
mov
mov
xor
xor
dec
add
sbb
mov
add
lea
dec
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
and
mov
adc
mov
sub
xor
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movzwl
and
add
adcl
mov
mov
lea
or
mov
add
mov
sub
mov
xor
adc
add
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
mov
subl
mov
sbb
movl
xor
mov
xor
mov
movzwl
xor
add
movl
mov
sub
mov
xor
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
add
movl
cmp
movl
jne
movzbl
adc
mov
mov
mov
orl
xor
orl
add
movl
cmp
jne
dec
mov
sbbl
mov
adc
xor
xorl
add
movzwl
sbb
mov
dec
mov
mov
sbb
xor
adc
mov
sbbl
sub
add
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
mov
mov
movzwl
add
mov
mov
mov
xor
lea
xor
sub
mov
movzwl
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
mov
cmp
je
mov
movl
jmp
mov
cmp
jne
mov
movl
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
jmp
mov
cmp
jne
mov
movl
jmp
mov
cmp
jne
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
jmp
mov
cmp
jne
mov
movl
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
add
mov
sub
mov
addl
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
movzwl
sub
mov
movb
lea
mov
and
jmp
mov
icebp
test
stos
mov
cmp
daa
jg
jl
inc
sub
xchg
popa
shl
push
dec
mov
and
mov
enter
arpl
sub
pushf
pop
push
rol
mov
and
popa
stos
jp
jnp
cld
enter
add
les
jbe
popa
mov
adc
pop
mov
mov
add
and
jns
cmp
nop
mov
lds
jle
out
xchg
mov
cld
fisttpl
test
mov
lahf
xlat
stc
dec
fistpll
icebp
xchg
ds
push
insl
xchg
outsb
push
jge
lahf
xchg
add
cli
add
mov
aaa
je
lcall
mov
add
popf
pop
xchg
and
repz
int3
cmpsl
jecxz
adc
xchg
cmpsl
fs
or
fdivl
mov
cs
sbb
inc
jmp
daa
bswap
lea
lods
gs
xchg
xchg
jbe
out
cmp
pop
adc
rcrl
push
sub
jnp
push
inc
mov
inc
cwtl
push
mov
test
das
push
mov
xorl
mov
andl
xor
sub
movl
mov
sbbl
movl
movl
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
call
cmpl
jb
xor
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
call
jmp
xor
mov
add
jmp
movl
mov
movl
mov
inc
movl
cmp
jb
mov
xorl
mov
addl
jmp
cmp
bound
push
pop
jmp
adc
jnp
mov
jl
jg
jl
dec
mov
pop
or
mov
pusha
xor
mov
add
pop
div
in
mov
sub
push
cmc
sbbb
adc
cmpsl
mov
xor
vpxor
mov
cmp
pop
in
xchg
ja
push
imul
push
pop
jae
adc
dec
xchg
sub
sarb
daa
mov
movsb
adc
jecxz
movsb
in
mov
mov
shrb
inc
out
fmull
fwait
icebp
leave
ror
cmp
mov
sbb
lods
cmp
rcrb
pop
or
push
push
xor
xchg
dec
lcall
jl
stos
adc
jnp
call
es
leave
hlt
shll
ja
test
into
push
sbb
sbb
mov
add
dec
cmp
sub
mov
jmp
cs
out
cmpl
mov
rdtsc
ja
dec
ret
or
fwait
dec
or
iret
addl
xchg
shll
add
adc
ljmp
test
mov
pop
mov
fistl
xor
add
movl
cmp
movl
je
addl
push
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
jmp
push
ss
std
push
jge
pop
add
or
sub
jl
daa
jg
jl
int3
repz
mov
mov
jne
mov
dec
mov
loopne
daa
add
lods
mov
aam
test
repz
incl
nop
icebp
xor
nop
and
mov
mov
jge
stos
cld
aam
push
es
jnp
add
sub
mov
sub
xchg
leave
ljmp
cmp
ror
or
insb
and
dec
push
sbb
mov
inc
aad
fcmovb
pop
xor
inc
push
push
in
fs
icebp
les
out
lahf
jecxz
sub
xor
add
dec
movsl
sbb
cmp
stc
lret
aas
test
mov
mov
lds
cs
sti
fnstenv
add
lds
xlat
push
in
in
stc
xor
popa
std
mov
and
in
data16
or
sbb
lahf
mov
mov
dec
out
and
sbb
mov
data16
sub
sbb
cmp
push
jg
pop
or
pop
jne
add
xor
mov
leave
es
inc
shlb
or
lahf
jo
test
xchg
mov
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
jmp
add
clc
pop
clc
sbb
sti
insl
sbb
inc
mov
lret
cmp
jl
daa
jg
jl
pop
cmpsb
cmp
shrb
nop
push
xor
mov
scas
mov
mov
mov
out
icebp
outsb
into
xchg
insl
ret
mov
jnp
dec
sahf
push
mov
push
inc
xor
pop
xor
jne
sub
cmpl
xchg
push
pushf
push
hlt
fnstenv
mov
sbb
sub
hlt
cmpl
gs
repnz
sbb
dec
add
fxch
into
xchg
mov
inc
mov
xlat
xchg
cld
out
pop
test
icebp
setle
out
inc
xchg
scas
out
shlb
push
or
sahf
jns
dec
div
sbb
iret
int3
push
mov
adc
hlt
arpl
test
push
pushf
xchg
mov
pop
push
or
pop
and
mov
pop
jge
cli
jbe
ret
ljmp
xchg
cmp
adc
test
cmc
pop
pop
lahf
shr
inc
out
cs
mov
jmp
push
pop
cmp
sbb
loope
dec
mov
mov
pop
sti
out
cmpsl
push
pop
pushf
jp
lahf
and
int3
mov
fwait
adcb
loopne
popa
xor
aad
inc
call
lea
mov
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
movl
sub
mov
jmp
push
xchg
fs
fs
data16
pop
lds
sarl
jl
in
push
cmove
sub
sub
push
pop
jl
sub
mov
xlat
sbb
in
jecxz
stc
mov
xor
add
je
inc
lret
lahf
out
seta
push
outsl
and
ss
popf
sar
xor
hlt
xor
scas
in
push
clc
cli
jl
test
enter
jmp
ss
in
mov
pop
inc
xchg
sub
lods
sbb
aaa
jmp
mov
movsb
sbb
scas
push
jmp
jge
ss
test
imul
push
int
cmp
sti
mov
xor
and
negb
mov
lcall
pop
lret
outsb
in
shrl
mov
lcall
lds
es
fadds
mov
mov
imul
mov
orl
xlat
push
sahf
push
pop
xor
xor
xchg
pop
lret
xor
sti
jmp
xlat
push
jp
popa
pop
lahf
dec
popf
mov
jle
dec
push
mov
ja
push
mov
les
fsubrl
test
loopne
inc
mov
in
fcompl
sbb
movsb
mov
adcl
add
xor
jmp
add
in
arpl
cltd
jp
fldenv
mov
jl
lret
jl
push
int3
mov
and
into
pop
mov
iret
mov
or
les
fsts
leave
std
out
icebp
lcall
lcall
push
add
cmp
into
sbb
sbb
xchg
fwait
add
lods
je
mov
sub
or
mov
jle
aad
fistpll
outsb
pop
adc
std
fstl
jo
or
xor
xor
jmp
std
jg
dec
addl
jecxz
cs
push
stos
mov
mov
jae
int3
sub
sbb
push
test
push
jne
rcll
dec
or
xlat
cmpl
lahf
mov
jne
movb
mov
cmp
sbb
out
dec
push
sub
cmp
enter
rep
add
gs
mov
in
mov
pop
rorb
cmpb
lcall
js
stos
xor
or
stos
push
ret
jge
or
xor
xchg
and
and
sbb
sub
mov
mov
xor
aas
icebp
data16
in
shll
dec
and
int
insl
pushf
xchg
inc
pop
inc
sbb
outsb
jmp
rcrb
cmp
movl
jne
or
mov
mov
adcl
add
mov
xor
or
sub
and
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
push
push
pushl
call
mov
dec
mov
jmp
mov
mov
xor
push
mov
mov
add
cmp
jmp
mov
mov
test
cmpps
jl
cmc
add
mov
addr16
addl
fs
xchg
out
daa
aas
aad
pop
xchg
into
aaa
arpl
pop
or
out
jbe
push
inc
sub
movzbl
jl
out
add
lret
cmp
cwtl
pop
test
pusha
jle
inc
test
mov
add
dec
sub
xlat
fidivrs
jmp
add
sub
arpl
sti
adc
sahf
aas
push
pop
lods
add
sub
addr16
cli
pop
xchg
aas
pop
mov
jnp
mov
jmp
xchg
outsb
popf
test
pop
pop
aad
push
pusha
cwtl
jmp
outsl
pop
push
jecxz
xchg
mov
stc
lds
or
push
popa
and
adc
ror
push
mov
lret
dec
out
pop
insb
jno
insl
fld
aam
push
xchg
pmulhw
imul
in
nop
inc
sub
mov
xchg
sub
or
sbb
call
inc
insb
jne
test
mov
loopne
mov
aaa
ss
mov
adc
xchg
call
fildll
add
push
into
cmp
pop
xchg
pop
out
inc
outsb
mov
in
sub
aas
push
inc
and
stos
pop
je
mov
jmp
jmp
xchg
test
loopne
bound
add
push
cltd
clc
ffree
jl
lret
jl
dec
push
loop
out
inc
mov
cmp
xchg
js
scas
int
adc
or
cmp
inc
maxps
fisttps
push
insb
int3
fs
mov
cltd
test
fsubl
nop
xlat
mov
rorb
ja
pop
pop
sub
nop
mov
jecxz
fstl
sub
mov
outsb
in
fiadds
mov
jl
fists
push
rcrl
sti
adc
in
jle
shlb
cwtl
ret
mov
and
sub
jg
inc
mov
lock
in
lret
inc
sub
push
adc
movsb
mov
ljmp
dec
pop
cmp
in
popa
lcall
scas
xlat
test
call
add
pop
call
cs
add
mov
dec
sahf
cld
adc
mov
adc
xlat
push
xor
shlb
dec
jo
inc
sbb
jns
mov
call
mov
push
bound
test
push
push
sub
or
shlb
cwtl
jb
xchg
hlt
fcoms
iret
iret
cmp
dec
pusha
pop
jb
leave
insb
mov
fcmovnb
and
jmp
aam
rolb
pop
fs
jge
fidivs
outsb
pop
sub
lret
jl
outsb
mov
pusha
inc
leave
nop
ss
mov
jle
mov
fidivrl
roll
xchg
cltd
insl
xchg
popf
test
jecxz
fcompl
lods
push
jmp
jge
mov
jmp
mov
fisubrs
mov
stc
mov
negb
sbb
mov
push
call
pop
or
out
ss
sbb
ficompl
sbb
andb
sti
insl
clc
pop
pop
aad
lret
comiss
pop
loope
sbb
ss
pusha
or
inc
ljmp
pop
push
and
sub
mov
sub
repnz
rcr
add
lea
fdivs
sahf
pop
add
sbb
adc
add
adc
mov
cmpb
in
pop
arpl
lcall
jge
add
pushf
jns
cmpsb
outsl
inc
push
lea
lahf
pushf
sbb
push
mov
mov
xor
fadd
daa
pop
out
pop
fst
lea
ret
or
pop
pop
aad
adc
mull
out
cld
xor
add
out
lods
popf
je
cmp
nop
jno
data16
ret
jmp
mov
xor
add
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
hlt
clc
lret
enter
mov
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
rorl
test
inc
aas
inc
lea
pushl
mov
mov
out
cld
call
fisttps
jmp
out
incl
xlat
lea
inc
ljmp
incl
aaa
add
pop
movl
ffreep
aas
add
mov
incl
or
mov
xchg
roll
mov
cmp
dec
lds
add
adcb
add
add
mov
cld
push
decl
push
mov
call
mov
add
test
call
jge
mov
fcom
add
mov
add
add
imul
push
fisttps
test
aam
lret
add
rcl
movl
jl
test
jmp
incl
loope
aam
test
out
mov
mov
add
call
lret
cld
incl
out
xor
mov
cld
jl
mov
add
mov
decl
add
inc
xor
inc
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
movl
inc
add
mov
test
add
incl
jmp
faddl
jge
adc
mov
sahf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
inc
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
jl
add
mov
inc
lret
inc
iret
jb
mov
enter
xor
mov
pushf
lea
add
inc
mov
xor
add
mov
fmuls
xor
mov
aad
pushf
xor
mov
clc
enter
mov
test
clc
incl
xor
test
test
ds
pushf
inc
mov
outsl
push
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
rdtsc
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
sahf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
sahf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
sysexit
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
sahf
shll
lret
or
add
in
push
mov
bound
int
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
sahf
lret
cmp
call
inc
inc
mov
mov
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
bound
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
test
clc
inc
inc
mov
sub
mov
dec
bound
inc
add
dec
bound
inc
add
inc
add
movsl
pushf
inc
dec
lea
push
xor
pop
lods
incl
mov
rcrb
test
inc
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
rdtsc
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
sahf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
sysexit
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
sahf
shll
lret
or
add
in
push
mov
bound
int
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
pop
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
sahf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
loope
inc
call
inc
mov
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
sub
test
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
rolb
jne
cmp
pop
mov
push
inc
lea
inc
rorl
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
in
push
push
incl
mov
loope
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
shlb
add
mov
lea
push
enter
testl
enter
negl
or
inc
in
in
sub
inc
in
push
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
loope
inc
stc
xlat
ss
aas
in
ret
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shr
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
insb
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
andl
lret
mov
add
lret
pushf
and
pop
rcr
test
clc
add
xor
pushf
add
add
inc
push
rcrl
inc
fsts
mov
nop
rolb
mov
add
pop
add
or
mov
add
call
add
add
push
inc
orb
leave
dec
dec
add
call
clc
inc
inc
mov
enter
mov
xor
xor
or
sbbb
int3
test
clc
inc
mov
fmuls
sub
add
leave
xor
jl
add
add
or
test
clc
or
xor
inc
sbb
mov
xchg
pop
add
mov
add
mov
mov
mov
xor
add
inc
jge
mov
xor
add
push
jne
mov
decl
add
cmp
push
inc
inc
add
add
mov
mov
mov
sbb
inc
add
push
clc
add
mov
jne
mov
add
add
lea
lea
xor
ret
mov
add
push
inc
inc
add
test
jne
mov
mov
push
pop
inc
decl
rclb
xor
addl
mov
push
jbe
mov
ret
dec
inc
jmp
mov
cld
push
mov
add
push
push
inc
jmp
add
add
inc
ret
mov
mov
sub
mov
mov
rolb
inc
add
inc
add
clc
inc
ljmp
xor
add
mov
mov
inc
fdivs
loop
add
add
ljmp
add
add
add
mov
dec
incl
test
sbb
add
mov
add
and
dec
mov
dec
call
inc
add
cmp
inc
add
jb
mov
cmp
lret
mov
test
andnps
decl
inc
add
mov
inc
hlt
mov
xchg
add
xor
add
mov
mov
mov
push
push
inc
mov
call
inc
adc
decl
aam
push
add
xor
lcall
cmp
test
clc
inc
and
mov
cmp
je
mov
add
sbb
dec
dec
mov
mov
add
add
jne
mov
cmp
jb
mov
mov
mov
inc
je
push
add
push
mov
in
shlb
test
call
inc
inc
rorb
jmp
mov
mov
loopne
sbb
inc
inc
push
lea
lea
or
js
mov
incl
call
inc
add
decl
test
mov
add
add
incl
add
data16
push
call
mov
cld
inc
test
inc
mov
sbb
inc
test
rorb
add
add
add
popw
test
cmp
jbe
lea
add
mov
sub
mov
mov
in
mov
jb
incl
mov
sbb
push
mov
movl
add
mov
mov
pushf
mov
lea
decl
movb
pusha
jmp
mov
xor
xor
add
in
mov
addl
mov
data16
addl
push
loope
inc
add
mov
out
incl
and
test
incl
jl
leave
add
test
outsl
fiadds
mov
test
in
incl
loope
inc
data16
inc
call
add
filds
inc
inc
xlat
xor
pushf
jl
leave
icebp
inc
add
mov
fdivp
mov
in
test
inc
inc
mov
cld
inc
out
rclb
inc
mov
mov
and
inc
cmp
jne
movl
lret
inc
add
lea
xor
add
inc
adc
test
add
movb
jl
add
mov
mov
sbb
add
loopne
adc
or
inc
loop
xor
or
jl
inc
add
adc
repnz
xorb
adc
dec
repnz
mov
adc
call
adc
inc
push
flds
mov
fcmovnb
xor
sbb
addl
inc
mov
sbb
xorb
add
decl
add
incl
mov
lret
enter
inc
jne
mov
mov
mov
mov
ud2
xchg
xor
dec
mov
sbb
cmp
push
pop
adc
andb
mov
push
mov
adc
in
inc
inc
fildll
mov
inc
subb
ljmp
lea
xor
mov
stos
mov
push
test
mov
push
ret
mov
sbb
rcl
inc
inc
into
mov
cwtl
movl
call
add
jmp
inc
or
rol
dec
adc
incl
add
push
push
add
test
or
out
pushl
add
push
out
xor
jmp
andl
mov
sbb
addb
mov
incl
push
pop
clc
mov
orb
mov
lea
inc
ljmp
pop
inc
mov
mov
rclb
incw
lea
stos
add
mov
adc
pushl
decl
dec
push
loopne
adc
call
mov
sbb
loop
ds
dec
mov
sub
inc
mov
xor
decl
add
push
add
mov
jbe
test
inc
push
addl
pop
add
ret
decl
mov
mov
cwtl
mov
test
rorb
lea
mov
push
decl
pushl
call
lea
mov
mov
mov
inc
dec
mov
xor
decl
call
lea
incw
cmp
decl
jmp
inc
jmp
dec
lea
jge
mov
lock
mov
mov
roll
push
str
xor
add
add
inc
rdpmc
mov
dec
inc
add
mov
data16
jne
push
adc
jne
ljmp
call
or
mov
mov
addl
mov
add
push
xor
dec
mov
mov
jl
push
mov
rcl
mov
mov
push
ret
push
pop
leavew
inc
sbb
in
xchg
push
shl
addl
mov
cwtl
or
setl
inc
add
test
xor
add
xor
mov
test
movb
adc
add
roll
mov
incl
ljmp
adc
jne
call
mov
pushl
inc
test
dec
add
dec
inc
mov
add
add
adc
and
jp
sysret
pop
add
cmp
sub
dec
mov
ret
clc
mov
addl
jnp
pop
add
xorl
adc
jge
mov
cld
test
add
add
negb
add
pop
add
add
inc
test
mov
fisttpl
mov
push
add
test
add
add
mov
add
add
mov
call
or
dec
or
inc
dec
addl
scas
dec
add
lock
mov
call
rclb
xor
adc
mov
mov
nop
rolb
mov
push
or
xor
sti
cmp
dec
test
or
ret
or
pop
add
xor
inc
mov
push
inc
mov
or
sti
dec
sub
cld
mov
mov
add
jne
cmp
jns
pop
jge
cmp
cld
inc
iret
or
jae
xor
jmp
mov
lea
mov
in
testb
jge
add
mov
cmp
hlt
adc
jl
clc
js
pushl
mov
clc
add
mov
call
inc
popa
jge
cmp
xor
rcrb
push
or
push
sub
in
add
fistl
sbb
test
inc
mov
cld
je
cmp
rorb
adc
mov
sbb
push
inc
mov
add
or
cld
mov
jge
xor
mov
hlt
iret
pop
inc
jbe
cmp
adc
push
add
dec
divl
sbb
mov
test
je
mov
or
cmp
jbe
mov
or
jg
add
dec
add
je
mov
mov
mov
adc
jmp
xor
pop
rcrb
ret
cmp
push
xor
sar
xor
xor
pushf
or
add
pop
mov
push
add
push
adc
push
xor
mov
in
dec
add
nop
iret
add
push
dec
sahf
mov
add
add
cmp
je
add
mov
pop
mov
sahf
fbstp
add
pop
pushf
mov
xor
ud0
add
add
or
dec
inc
mov
xor
mov
mov
fdivs
push
or
inc
imul
loopne
sbb
jg
inc
jne
mov
adc
fiadds
jne
mov
clc
test
xor
xor
mov
cld
jb
add
adc
rcr
add
add
pmaxub
dec
decl
xor
add
cmp
hlt
mov
faddl
xor
add
cmp
clts
jp
decl
xor
add
jne
mov
xor
lea
jb
add
add
add
add
adc
pop
mov
hlt
add
jmp
incl
xor
in
push
inc
mov
hlt
add
mov
dec
mov
fcompl
enter
add
mov
in
and
mov
mov
cld
pushf
dec
sahf
xor
add
mov
cld
add
xor
pop
mov
cld
sbb
dec
mov
jne
mov
fadds
mov
push
fdivs
decl
lcall
inc
inc
xor
add
cmp
mov
fadds
mov
test
sahf
push
xor
out
mov
or
in
sbb
add
jne
mov
mov
cld
test
sahf
fbstp
ret
call
xor
add
mov
cld
dec
mov
cltd
inc
inc
mov
cld
lea
xor
add
inc
je
mov
cwtl
movb
add
sub
lock
mov
aam
ljmp
mov
in
inc
mov
cld
jmp
rorl
mov
fadds
add
xor
add
pop
hlt
pop
push
ret
mov
mov
xor
add
rolb
mov
or
inc
mov
xor
add
clc
jne
add
xor
lea
add
jb
add
inc
jne
add
or
inc
scas
xor
in
jne
mov
or
icebp
sahf
shll
mov
lsl
cmp
cltd
mov
add
mov
call
jge
sub
xor
jge
xor
add
mov
xor
add
jne
xor
jmp
mov
cld
mov
clc
leave
xchg
or
push
mov
cld
in
icebp
jnp
add
jae
sub
inc
call
push
call
xor
add
ret
xor
inc
loopne
jne
mov
push
jge
xor
in
test
add
mov
xor
xor
add
cmp
mov
xor
add
cmp
mov
add
add
or
ja
mov
cld
pop
stc
mov
in
jge
mov
or
icebp
add
jae
add
push
jne
mov
add
icebp
jmp
cmp
xor
clc
pop
repnz
out
pop
testl
pop
add
pop
jge
xor
add
xor
xor
repnz
clc
mov
rcll
stc
or
mov
in
sahf
jne
mov
or
sahf
xor
add
mov
mov
lock
push
inc
jne
mov
in
mov
clc
repnz
decb
mov
cmpl
clc
call
hlt
add
clc
inc
jne
mov
clc
test
xor
mov
in
xchg
roll
sbb
cld
clc
pop
pop
xor
add
inc
hlt
mov
or
add
test
add
mov
sbb
rclb
add
add
mov
and
data16
pushf
or
rcll
xor
mov
add
inc
inc
mov
add
cmp
inc
push
mov
mov
lock
xor
mov
xor
pushf
aam
xabort
dec
inc
xor
inc
add
add
dec
mov
cld
mov
xor
pushf
dec
mov
xor
mov
xor
push
xchg
xor
add
incl
mov
in
inc
or
rclb
add
push
inc
call
leave
push
add
mov
or
jo
cmp
add
add
mov
or
mov
cmp
roll
mov
dec
dec
sbb
cld
mov
test
cmovne
test
add
into
xor
add
mov
faddl
mov
nop
into
add
mov
mov
invd
mov
mov
mov
push
push
cmp
fmuls
call
rcl
rcl
call
inc
jne
jmp
sbb
dec
or
mov
sbb
dec
and
push
add
cmp
je
push
and
add
or
inc
adc
inc
and
push
push
sub
push
mov
sbb
dec
mov
add
jge
add
mov
mov
cmovne
xor
xor
or
roll
dec
add
dec
jbe
mov
cld
mov
bswap
push
lret
xor
mov
and
or
daa
xchg
push
push
adcl
push
xor
add
decl
sbb
rolb
and
mov
enter
mov
push
add
add
addl
mov
rorl
mov
inc
dec
mov
inc
mov
call
or
mov
inc
push
mov
into
mov
mov
lea
mov
push
xor
mov
sub
mov
loopne
lret
push
dec
mov
lods
xor
add
mov
xlat
dec
sarb
jne
mov
fsub
add
xor
out
mov
hlt
mov
mov
in
jb
push
inc
push
jl
leave
cmove
lods
add
mov
or
xor
or
into
in
lret
xchg
gs
add
mov
fsubs
inc
lea
push
lea
fadds
mov
inc
add
mov
fmul
rorb
add
inc
inc
je
mov
sbb
add
add
jmpw
or
lret
jne
mov
in
add
enter
sbb
inc
ljmp
and
inc
test
add
rorb
data16
call
ret
test
inc
orb
sub
stc
test
mov
lea
call
pop
add
xchg
add
add
push
cmp
fdivs
add
lea
test
je
mov
decl
push
add
inc
sbb
push
or
mov
cmp
mov
inc
pop
add
add
push
decl
or
adcl
push
jno
add
push
clc
sar
xchg
add
jne
mov
mov
sub
rolb
loopne
dec
mov
mov
call
add
add
add
add
jmp
xor
pop
lcall
ret
mov
mov
add
push
and
adc
add
dec
or
sbb
cmp
pop
push
add
mov
and
xchg
add
add
cli
loope
shlb
dec
ret
sub
pushf
inc
mov
and
incl
xor
pushf
jb
add
add
mov
hlt
inc
data16
mov
jmp
mov
or
inc
add
mov
mov
mov
add
sbb
jne
sub
sahf
mov
and
add
lock
test
add
push
inc
in
mov
ret
push
test
add
inc
shlb
pop
add
loopne
inc
pop
xor
mov
fdivrp
pop
mov
hlt
addl
cmp
lock
add
add
push
or
add
data16
lock
jge
mov
test
sbb
mov
inc
jge
pushaw
xor
data16
jne
mov
inc
or
lock
mov
mov
in
or
mov
call
sbb
push
mov
lock
pop
jne
mov
retw
minpd
str
jne
xor
mov
cld
add
add
sar
mov
mov
lock
es
mov
clc
jne
jge
mov
or
add
push
xor
add
add
mov
or
mov
add
mov
mov
or
fisttps
clc
ja
mov
or
sahf
sti
add
add
fbld
pop
mov
or
mov
hlt
add
mov
or
mov
or
mov
mov
adc
stc
mov
mov
or
mov
or
add
cmp
mov
xor
mov
add
jge
mov
pop
clc
cmp
data16
mov
xor
pop
jge
mov
lock
jge
ltr
add
hsubpd
data16
jge
mov
dec
xor
minpd
data16
jmp
mov
sarw
mov
jb
add
pop
mov
clc
jne
data16
jnp
pop
inc
add
data16
mov
data16
icebp
sbb
jne
mov
call
mov
in
data16
repnz
xor
inc
mov
call
add
ret
jge
mov
mov
add
data16
mov
add
mov
data16
pop
test
pushf
add
into
fistps
push
mov
mov
mov
push
repnz
lock
jne
mov
cld
mov
xor
mov
mov
push
sub
mov
mov
add
dec
cmp
jne
mov
mov
stc
jge
data16
xor
data16
lock
ds
pop
add
rorb
inc
mov
in
sarl
pop
or
push
mov
mov
or
cmp
je
mov
mov
add
push
mov
mov
pushf
sub
add
xor
dec
str
cmp
int
mov
xor
mov
xor
lret
push
add
push
add
cmp
sti
mov
mov
cld
add
data16
roll
mov
lret
in
add
pop
lret
ret
enter
pop
movl
pushf
call
add
in
add
mov
clc
xor
add
cmp
je
push
pop
sysexit
leave
dec
bound
mov
int
mov
lret
add
jne
lea
add
ret
inc
xlat
add
add
or
ret
add
jne
lea
add
lret
mov
cmp
fs
ss
je
xor
inc
inc
add
ss
pushf
push
je
xor
mov
andl
add
in
push
mov
pushf
cld
mov
mov
or
ret
or
or
lret
add
mov
adc
iret
mov
dec
push
mov
mov
rclb
add
ret
jne
mov
xor
callw
cmp
fs
mov
pop
sub
add
xor
cmp
cmp
jne
cmp
clc
pushf
pop
mov
push
xor
mov
psubsb
icebp
lea
clc
pop
inc
mov
push
xor
mov
adcl
add
inc
sub
mov
addl
orl
cmp
mov
decl
dec
mov
mov
mov
xor
mov
push
leave
mov
push
test
sahf
in
xor
mov
clc
test
xor
pushf
dec
mov
in
mov
push
icebp
add
roll
add
roll
xor
pushf
dec
movl
clc
or
xor
pop
dec
dec
lea
add
dec
inc
sub
orl
cld
adc
scas
or
pop
xadd
jb
add
inc
sub
mov
lock
icebp
add
clc
pop
mov
data16
add
xor
add
lea
add
add
inc
adc
dec
mov
mov
mov
lea
add
inc
in
incl
leave
add
push
roll
sbbl
sarb
jbe
mov
or
push
mov
mov
jne
jmp
mov
push
push
mov
add
xor
sub
mov
inc
inc
mov
dec
sahf
xorl
orl
leave
jbe
mov
in
inc
in
mov
or
dec
inc
xor
mov
mov
cld
test
push
inc
mov
sahf
pop
xor
mov
inc
or
sar
dec
lea
in
decl
mov
cld
inc
inc
inc
mov
jmp
mov
mov
push
sahf
xor
add
inc
xor
pushf
std
xor
inc
fadds
inc
mov
inc
sahf
xorl
cmp
mov
clc
sub
inc
call
pop
inc
sahf
pushl
adc
std
dec
decl
inc
push
call
add
xor
add
add
inc
cld
add
mov
orl
test
clc
inc
inc
mov
pushf
or
inc
adc
jne
xor
xor
pop
add
ret
je
push
mov
mov
mov
in
inc
orl
push
test
xor
mov
add
add
mov
or
add
xor
inc
inc
add
xor
add
mov
sub
lret
mov
jae
lea
xor
jne
or
or
pushw
jne
cmpxchg8b
mov
jne
call
cmovge
xor
add
sub
or
add
inc
cmp
mov
subl
enterw
shlb
pop
or
mov
dec
inc
data16
push
jb
jmp
incl
mov
or
jo
test
jmp
incl
mov
pop
lock
push
dec
mov
dec
ror
rolb
dec
lock
pop
in
cmp
clc
xchg
cmp
jne
xor
jmp
mov
jne
call
mov
add
inc
jne
mov
mov
mov
add
stos
add
mov
les
xchg
iret
add
inc
jl
out
cld
add
xchg
add
push
pop
add
paddq
xchg
add
adc
test
incl
incl
rorb
decl
inc
inc
incl
data16
rclb
mov
lock
jle
mov
mov
jge
mov
adc
enter
dec
or
mov
lods
ja
mov
pop
lea
inc
clc
inc
outsb
lea
push
inc
mov
pop
mov
jae
cmp
adc
pop
inc
sbb
mov
or
cmp
mov
cld
xchg
add
add
lea
adc
or
faddl
push
add
push
inc
add
push
adc
mov
fdivr
cli
dec
add
add
add
xor
cmp
mov
lock
rcl
pop
add
pop
dec
cmp
mov
add
push
dec
in
mov
push
pop
mov
add
add
add
inc
mov
hlt
push
decl
push
add
pop
or
jns
ret
jmp
mov
in
jge
sysexit
cmp
cmp
sbb
pop
add
jae
mov
lcall
mov
mov
fdivs
xor
movl
add
push
ret
mov
jne
mov
faddl
xor
push
or
icebp
incl
rolb
inc
stc
mov
lock
add
dec
add
mov
call
sbb
mov
pop
jge
lea
decl
or
leave
fadds
dec
add
xchg
add
mov
mov
or
dec
pop
mov
in
pushf
mov
push
call
add
cmp
add
add
mov
mov
mov
sub
add
clc
mov
add
dec
push
xor
xor
in
add
inc
jmp
xor
mov
adc
xor
jne
mov
mov
hlt
pop
add
in
push
in
dec
push
xor
mov
mov
in
dec
addb
add
mov
test
dec
push
mov
mov
clc
into
dec
lret
lock
test
push
jge
push
enter
dec
cld
jmp
pushf
inc
mov
sub
int
mov
mov
adc
enter
jmp
xor
mov
or
call
cmp
fs
add
leave
rorb
push
inc
in
mov
or
lock
test
clc
rolb
xor
pushf
add
mov
cmp
sub
jmp
mov
lock
mov
push
icebp
xor
mov
enter
add
cld
scas
add
dec
mov
xor
xor
add
add
test
mov
adc
je
xor
xor
add
add
rorl
enter
icebp
or
lock
enter
lret
or
mov
cld
bswap
pop
mov
in
hlt
pop
jne
xor
xor
jbe
mov
clc
pop
mov
mov
clc
mov
adcl
inc
in
xor
inc
cld
xor
add
inc
test
clc
hlt
inc
test
inc
inc
aad
xlat
pushf
mov
mov
xor
mov
xor
add
pavgb
test
dec
inc
mov
cld
xlat
enter
lret
add
leave
jne
mov
enter
lret
scas
out
jmp
mov
cld
add
xor
jmp
xor
add
rorl
dec
mov
cld
lea
mov
mov
xor
enter
stc
add
call
pop
xor
sub
enter
inc
in
xor
clc
xor
pushf
ss
pushf
call
mov
loopne
inc
test
clc
add
push
mov
push
inc
push
mov
mov
mov
xor
dec
cld
mov
or
into
inc
iret
or
add
mov
xor
xor
mov
hlt
bswap
roll
xor
mov
xor
call
enter
mov
lock
inc
mov
inc
inc
enter
inc
mov
mov
roll
add
push
into
in
movb
dec
or
xorb
add
add
in
push
inc
mov
adc
push
xchg
popa
iret
dec
sahf
mov
clc
add
cmp
jne
addl
or
or
push
dec
jnp
dec
xlat
mov
call
lsl
cld
sti
lahf
mov
mov
clc
iret
dec
lret
xor
lea
dec
inc
mov
mov
int
sub
lock
mov
in
xor
pushf
xor
jne
mov
in
dec
mov
nop
add
pop
mov
mov
ret
mov
mov
mov
dec
add
jo
push
inc
jne
mov
push
push
ret
push
inc
xor
add
jnp
jg
ljmp
inc
mov
push
cmp
dec
xor
cmp
jne
orl
jmp
mov
push
add
add
add
cmp
mov
sbb
mov
xor
mov
xor
pushf
test
clc
adc
test
xor
lock
xor
add
mov
sbb
mov
rolb
iret
or
cmp
xor
or
xor
add
mov
inc
inc
mov
mov
mov
cmp
dec
decl
inc
mov
or
sbb
inc
inc
mov
or
dec
push
dec
inc
rclb
push
inc
decl
rolb
inc
inc
mov
sbb
inc
push
xor
lea
cmc
xor
add
mov
inc
inc
mov
ret
inc
add
adc
test
clc
inc
inc
mov
loopne
enter
inc
test
mov
sbb
dec
ret
sub
add
xor
lea
lods
jb
add
sar
xor
inc
int3
xor
xor
pushf
adc
inc
les
test
clc
inc
inc
pushl
hlt
pushf
jne
mov
or
bound
clc
lea
cmp
shl
mov
or
dec
imul
incl
inc
add
pavgb
movl
clc
iret
inc
lock
lret
fmull
mov
test
mov
loopne
inc
loopne
inc
loopne
xbegin
adc
jb
mov
inc
inc
push
mov
incl
mov
loopne
rol
test
dec
push
decl
push
mov
add
cmp
add
call
clc
test
xor
pushf
mov
or
iret
test
mov
in
pop
dec
add
add
dec
mov
in
dec
or
iret
add
testl
test
add
add
mov
or
add
cmp
add
mov
mov
lock
dec
test
dec
add
cmp
or
mov
dec
push
lea
lods
mov
clc
cli
or
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
clc
rorb
iret
rorl
inc
mov
iret
add
xor
mov
or
dec
shll
cmp
in
add
add
mov
in
mov
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
cli
or
cmp
je
mov
ret
or
lock
add
mov
add
cmp
mov
xor
mov
add
roll
cmp
lock
rorl
jb
add
ja
sbb
xchg
enter
inc
decl
loopne
jb
add
dec
adc
add
inc
rcll
mov
xor
jb
add
jne
decl
add
repnz
inc
mov
mov
shll
mov
movsb
add
push
adc
inc
pushl
mov
add
mov
test
inc
mov
lret
mov
sbb
inc
mov
xor
enter
inc
add
cld
test
sahf
jne
mov
fsubrs
decl
hlt
xor
sbb
call
pop
or
dec
adc
push
add
cmp
je
mov
or
push
lea
clc
or
push
inc
or
pop
call
test
jne
mov
movsb
xlat
inc
push
push
or
push
decl
dec
adc
roll
sbb
dec
je
push
call
test
inc
iret
add
clc
jmp
mov
test
or
add
inc
mov
mov
and
push
mov
rolb
iret
orl
push
clc
jmp
add
mov
jmp
addl
pop
inc
pop
sbb
inc
add
clc
and
mov
and
mov
and
mov
and
xor
push
mov
xor
mov
mov
mov
push
add
mov
cmp
mov
dec
add
push
adc
push
cmp
and
mov
and
xor
jb
add
inc
and
lea
and
push
jmp
cli
and
clc
and
call
jmp
dec
aas
or
cmp
bswap
mov
add
and
mov
mov
or
inc
jmp
addl
push
inc
sbb
dec
test
movb
xor
pushf
inc
jmp
addl
jne
or
or
jne
call
mov
add
adc
add
add
add
incl
push
cli
add
shll
inc
jmp
xor
test
cli
incl
incl
and
mov
or
and
and
add
push
and
and
add
ss
incl
xor
mov
and
pushf
pushf
clc
decl
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
in
jp
jp
jnp
adc
mov
add
push
pop
add
xchg
cmp
ret
xchg
mov
jecxz
adc
xor
negb
or
mov
or
add
add
cmc
mov
sbb
out
fcomps
fdivrs
sub
lcall
mov
stc
dec
xor
and
and
test
addr16
imul
mov
out
addr16
mov
call
push
dec
xchg
test
lret
ja
repnz
ja
dec
mov
movsl
sbb
fistl
sub
mov
jb
or
push
push
sbb
dec
xor
les
sbb
fists
test
push
pop
mov
mov
inc
dec
push
testb
js
clc
pop
aas
pop
mov
sub
pop
add
cmp
nop
sub
notb
pop
add
mov
loope
test
sar
out
mov
bound
cltd
lcall
mov
push
mov
out
pop
dec
xchg
and
mov
movsl
mov
lods
movsl
push
xchg
popf
cmp
or
cmp
bound
sti
mov
clc
insb
sti
adc
sahf
aaa
push
outsb
cmc
and
jmp
lds
es
dec
jb
push
lret
lret
dec
fwait
mov
mov
das
inc
loop
fistpll
cmp
mov
dec
and
pop
dec
push
cmpsl
sub
lock
inc
hlt
pop
in
iret
mov
mov
das
pushf
imul
add
add
and
and
push
aam
add
jns
and
push
inc
sbb
adc
enter
orl
aam
mov
inc
xlat
sbb
jge
jg
ret
sub
and
hlt
imul
ret
repz
scas
outsl
lock
mov
pop
int
mov
jle
mov
pushf
push
imul
in
inc
mov
outsb
adc
js
xchg
jmp
sbb
push
mov
pusha
cmp
fsubl
mov
push
mov
test
jg
fcmovnb
pop
push
push
outsb
cs
xchg
mov
stc
push
and
fsin
hlt
mov
add
je
push
or
jmp
cmp
jne
pop
outsb
sbb
sbbl
lret
jmp
aas
inc
dec
repz
int3
dec
or
xchg
cmpsl
rorl
aaa
adc
lahf
dec
out
ss
fadd
xor
jno
pushf
outsl
jbe
adc
inc
cs
mov
aas
cmp
cltd
faddl
mov
sub
nop
push
repz
mov
dec
jle
or
repnz
enter
cltd
cltd
add
inc
push
fstl
cmc
movsb
cs
cmpsb
xchg
push
xchg
pop
rcrb
movsl
mov
sub
jb
faddl
sub
fidivs
outsb
xor
ret
jmp
iret
ret
xlat
cmp
cmp
jp
push
ljmp
add
outsb
mov
pop
dec
xchg
fistpl
shlb
dec
adc
mov
jg
movsb
adc
call
or
sub
add
sub
popa
mov
and
inc
add
mov
fcmovb
aad
popf
scas
imul
jne
lock
mov
or
jae
and
mov
out
dec
sbb
xchg
nop
int
xlat
outsb
clc
fidivrl
mov
jp
and
cmp
pop
icebp
and
clc
scas
loopne
fcoms
jp
rclb
push
stos
lcall
fwait
into
inc
sbb
push
adc
pop
xor
lahf
dec
mov
pushf
jns
icebp
pop
fwait
js
push
nop
imul
cld
cmpsb
gs
hlt
sbb
fucomp
adc
jo
lds
push
jnp
jp
pop
in
clc
inc
lea
pushf
sub
fcomi
out
std
mov
inc
iret
clc
mov
sbb
les
scas
xchg
mov
add
scas
jmp
sbb
push
inc
inc
add
mov
cld
out
test
popa
ljmp
or
xor
out
lock
call
pushl
cmc
out
arpl
out
push
cmp
dec
cwtl
ds
pop
rcll
hlt
movb
mov
pop
gs
jmp
movsb
push
repnz
cmp
popf
add
mov
repz
mov
jl
loopne
inc
jge
jae
repnz
jo
mov
hlt
xchg
mov
xor
xchg
mov
lods
add
das
sub
test
pop
int
popf
dec
push
icebp
or
dec
jmp
popf
jae
out
repz
scas
test
sbb
adc
mov
push
xchg
je
pusha
jnp
mov
xlat
popa
fidivrl
push
inc
adc
mov
xchg
sub
in
insl
das
fnstenv
sti
dec
cwtl
inc
dec
rsm
aas
icebp
sbb
rol
fsubrs
and
inc
aam
jo
xchg
scas
pop
nop
rcrl
iret
insb
ljmp
mov
das
inc
fnstenv
push
lcall
das
mov
hlt
insl
push
out
or
std
js
outsl
fcmovbe
filds
shr
push
aaa
sub
call
sub
test
mov
inc
mov
andl
call
stos
xor
sbb
push
fwait
push
notl
dec
cmp
fmul
fnstcw
lret
mov
les
cmp
inc
push
mov
push
jmp
cmpsl
xchg
data16
or
or
cs
gs
cs
push
inc
sub
adc
mov
aam
or
inc
cmp
ss
scas
mov
test
cmp
nop
dec
arpl
and
imul
add
hlt
add
lret
test
cs
sub
addr16
call
cmp
push
jnp
adc
push
inc
mov
out
movsl
ret
jmp
or
fidivrs
xchg
icebp
fdivs
bound
pop
scas
in
and
jb
dec
sub
int3
iret
pop
mov
sbb
sbb
dec
dec
or
out
mov
jl
test
repnz
insb
shrb
or
xchg
clc
mov
mov
ja
mov
cmp
push
sub
lcall
loopne
jbe
sbb
dec
stos
jl
fdivrs
adc
cmp
mov
std
or
lcall
mov
mov
add
push
pop
add
mov
mov
mov
clc
fstps
filds
fmull
nop
inc
cld
repnz
lahf
imul
ds
test
imul
daa
inc
dec
lahf
mov
repnz
movsb
xchg
lahf
xor
orb
jg
fwait
repnz
stc
sub
and
aam
jle
pushf
outsl
adc
test
pusha
ja
xor
dec
loopne
insb
push
inc
inc
inc
mov
loope
mov
or
ja
sti
jb
sbb
rcl
dec
mov
movsb
rcll
xor
push
pop
inc
mov
out
outsl
les
inc
sbb
jmp
movsb
andl
inc
push
pop
std
and
cli
leave
mov
rcll
ret
sub
loop
mov
sbbl
lahf
inc
loope
ret
mov
repz
cmp
push
int
mov
andb
adc
pop
and
xor
lret
mov
jbe
xor
cwtl
popf
sub
fisttpl
ja
iret
lcall
jle
cmpl
jge
lock
and
not
jne
movsl
daa
jnp
std
jmp
xchg
imull
cmp
xchg
imul
scas
push
sbb
cmc
sbb
push
ret
push
jnp
mov
fs
pop
sub
filds
or
cmp
cmpsl
clc
push
ret
ss
fstpt
and
sbb
loop
mov
fisubrl
divl
or
push
cld
sarb
mov
sahf
aad
sub
fcmovbe
fisubs
sti
hlt
test
adc
das
idivb
clc
xchg
dec
ds
lock
sbb
jmp
pushf
and
popf
push
adc
pusha
add
cmp
mov
repnz
pop
pop
xor
in
into
fnsave
cmp
loop
cwtl
pop
mov
gs
decl
gs
fnstenv
arpl
inc
dec
cmp
cmp
subb
sbb
idiv
mov
sub
in
out
jecxz
mov
loop,pn
rorb
lods
and
jns
aas
lcall
insb
popf
sarb
out
hlt
movsb
or
mov
or
stc
sarb
mov
data16
int
insl
cmp
add
mov
adc
inc
lcall
test
inc
cmc
fidivrs
sbb
push
inc
inc
decb
jmp
cmp
enter
test
sub
cwtl
xor
push
mov
inc
dec
sbbb
mov
sbb
mov
cmp
loopne
push
sbb
subb
jb
xor
aas
stc
lret
jne
inc
xor
mov
flds
leave
add
std
and
dec
nop
xor
loope
and
out
jecxz
scas
test
ds
dec
inc
jnp
add
or
push
insl
jo
cli
pushf
jg
inc
pop
or
ljmp
xor
inc
outsl
pushf
sti
testl
rcrl
idivl
cmpsb
loope
test
push
int3
mov
push
inc
ljmp
mov
loop
pop
dec
xor
fistl
int
pop
lea
rcrl
arpl
xchg
cwtl
and
ret
push
dec
rcll
fstl
add
xchg
cli
mov
mov
jl
mov
ds
push
pop
mov
mov
xchg
mov
stos
adc
mov
out
jae
mov
ljmp
or
pop
mov
int
arpl
outsl
stc
pop
out
out
sti
cwtl
or
xchg
push
rol
iret
adc
loope
data16
add
mov
sub
ljmp
or
sti
fwait
mov
ljmp
repz
cwtl
movsl
in
fdivl
xor
cmp
inc
mov
mov
movsb
xchg
sbb
push
std
loope
js
sbb
testl
aas
outsb
adc
nopl
int
jp
add
aam
fwait
cmp
and
sahf
adc
jmp
cmpsl
shrl
sti
cld
xor
jmp
insl
mov
dec
lds
negb
sbb
fldl
jb
ja
jbe
js
movsl
insl
add
add
mov
push
lods
xchg
jnp
cld
dec
xor
push
inc
lahf
push
loope
cmc
ja
mov
test
int
add
dec
add
add
cmpsb
loop
add
xchg
movsl
mov
bound
scas
dec
sahf
adc
ljmp
cmpsl
lea
fstpt
sbb
mov
mov
pop
push
in
jle
and
scas
adc
in
or
sbb
lret
fchs
adc
sub
adc
jne
add
push
shll
mov
loope
push
shr
stos
push
addb
outsb
imul
mov
sub
sti
push
andl
inc
jge
arpl
mov
dec
ss
dec
nop
inc
sbb
cltd
outsb
je
jns
pop
mov
xchg
arpl
mov
out
lret
sti
or
mov
mov
pop
xlat
xchg
jae,pt
iretw
xchg
shll
add
subl
setae
jo
sar
mov
pop
inc
nop
add
sub
push
cltd
jle
mov
lods
adc
push
xchg
bound
je
repnz
mov
mov
pushf
push
in
pop
js
push
leave
push
ss
lock
push
xchg
adc
out
push
dec
out
xor
int3
outsb
mov
bnd
lahf
cld
and
adc
mov
adc
or
cmc
sub
lds
or
test
and
loop
and
arpl
mov
lods
stos
rclb
rolb
cmp
mov
push
das
or
or
out
frndint
or
cmp
scas
jne
mov
jge
push
jno
addr16
and
adc
inc
je
lods
rol
mov
xchg
enter
imul
outsb
jg
push
dec
xor
lcall
inc
push
mov
pop
fdivrs
lds
sti
mov
add
adc
jae
inc
jecxz
jl
pop
pop
mov
cmc
mov
mov
stos
pop
fwait
loop
jge
stos
test
dec
ficoml
scas
jbe,pn
sub
pop
dec
sbb
mov
cmp
imul
xchg
dec
add
dec
xchg
mov
add
push
cli
divb
dec
add
jno
add
push
pop
add
xor
les
xor
rolb
pop
or
sbb
js
cmpsl
popa
push
das
mov
aam
mov
dec
nop
dec
sub
mov
mov
ds
xor
push
jle
mov
arpl
pop
xor
or
out
push
add
add
pop
repnz
push
cmp
inc
dec
lcall
inc
orl
ljmp
es
mov
sub
ss
push
xchg
sahf
cmpb
xchg
push
call
sub
sbb
sbb
jmp
shll
fcoms
dec
cli
push
mov
bound
pop
mov
scas
mov
loop
inc
ret
cwtl
push
push
sbb
xor
mov
jnp
rcrl
xchg
sbb
lahf
shlb
add
daa
popa
mov
ret
aaa
call
push
mov
jbe
mov
in
lods
sub
push
andb
push
jp
adc
mov
out
ja
sub
xchg
data16
mov
pop
data16
xchg
sbb
push
adc
sbb
clc
xor
sub
stos
aas
jne
add
or
cmp
out
insl
jl
in
in
aad
jne
sahf
fwait
cmp
cltd
xor
jbe
xchg
cmp
loopne
xchg
mov
push
testl
or
cmp
daa
jno
cltd
and
pop
lods
jecxz
push
pop
cwtl
inc
test
insl
les
jg
pop
pop
mov
jg
add
xchg
fs
ret
jbe
pop
push
stos
enter
mov
ror
scas
or
mov
mov
xor
cmp
jmp
inc
push
rcrb
cwtl
fisttpll
addr16
xchg
add
stos
outsb
call
cmp
push
loopne
mov
mov
mov
es
cmp
je
or
jnp
push
inc
jnp
fxtract
fwait
cmp
incl
mov
jnp
punpcklbw
xor
dec
mov
scas
jbe
lea
dec
scas
stc
call
insb
out
hlt
shrl
inc
jecxz
mov
mov
xorl
lea
xchg
arpl
xlat
aam
cmp
test
mov
loop
aam
in
rcll
cmpsb
xchg
outsl
ret
scas
sti
sub
adc
daa
ja
scas
cwtl
add
decb
inc
push
jbe
mov
and
movsl
sti
arpl
in
inc
mov
movsb
rolb
leave
cmpsl
pop
jl
cmp
and
movb
pushw
mov
lret
pop
lods
aas
mov
out
out
xor
mov
scas
std
shrl
je
push
mov
xchg
in
add
cwtl
jge
pop
jnp
enter
and
data16
sbb
mov
jmp
and
int3
insb
jne
sub
into
cs
movsb
jg
in
adc
mov
xor
lret
idiv
sub
pop
xor
mov
or
xor
fnstsw
mov
fdivl
push
xchg
stos
or
aaa
xchg
mov
xlat
sbb
shrl
shll
push
xorl
fsubl
pandn
and
ficoms
mov
je
cmp
adc
mov
sbb
mov
jp
jg
into
mov
add
pushl
sarl
and
aad
pusha
pushf
shlb
lds
push
int
sbb
mov
into
xchg
inc
xorb
stos
jno
push
int3
inc
stc
or
jmp
push
xor
cmpsl
mov
adc
into
lcall
mulb
mov
xchg
jnp
fdivs
mov
adc
bound
cmc
mov
nop
jl
pop
mov
loop
xchg
sti
push
xchg
cmpsb
int3
cli
xchg
dec
shll
pop
popf
cmc
pop
pop
pop
pushf
inc
mul
lret
sbb
mov
add
js
aad
push
or
arpl
test
aas
rorl
add
sbb
out
ljmp
movsl
push
mov
scas
dec
xor
mov
scas
and
dec
mov
insb
and
clc
dec
test
mov
fmuls
push
mov
push
jmp
les
test
push
push
dec
adc
ret
inc
aas
add
std
adc
jp
pushf
bswap
sbb
or
cmc
pop
jb
xchg
jbe
call
pop
insl
mov
insl
mov
jae
cs
mov
cmc
mov
es
iret
jns
xacquire
es
loope
stos
data16
jb
lea
sub
out
mov
cwtl
cwtl
cmpl
mov
in
pop
fcmovnbe
and
mov
push
cmpsb
andl
in
or
testb
add
insb
or
cmp
cli
and
pop
out
mov
add
cli
mov
lds
scas
aas
mov
rol
jae
push
cs
or
jno
lods
jmp
cmpsb
jmp
jno
sub
mov
xor
adc
repnz
nop
sbb
popa
lods
insb
cli
out
xor
nop
or
dec
arpl
sti
pop
adc
pushl
aad
sarb
ss
int
mov
xchg
loope
gs
push
mov
mov
inc
movsb
repz
inc
into
mov
mov
mov
popf
sub
mov
xchg
adc
xor
test
dec
push
movsl
jns
loopne
push
aam
cmpsb
ss
push
dec
std
aas
std
or
dec
cmp
xor
jmp
fwait
es
call
cwtl
mov
push
outsl
aaa
adc
cmp
orb
icebp
repnz
out
add
notl
mov
movsb
aam
adc
imul
sub
sbb
push
cmp
pop
iret
inc
jmp
mov
push
inc
scas
sub
test
cltd
dec
xchg
pop
push
jae
adc
xchg
mov
dec
repz
insb
cld
cltd
xor
fs
mov
push
cld
insl
mov
xchg
scas
push
mov
lcall
fisubl
xor
leave
call
inc
mov
rclb
inc
jecxz
xor
mov
fxch
scas
ljmp
stc
into
sbbl
sub
sub
mov
in
lock
loop
sub
cmpsl
iret
ja
lret
and
mov
testl
add
ss
or
pop
in
testl
clc
ret
add
push
pop
add
idivb
popa
pop
ror
dec
pop
stos
add
dec
je
sub
xchg
jns
inc
aam
iret
push
rcl
hlt
jl
clc
dec
nop
push
clc
adc
xchg
sbb
ficoms
or
scas
add
xlat
mov
xchg
call
pop
and
push
push
lds
test
jbe
inc
push
stos
outsl
dec
dec
in
test
add
xchg
or
jnp
mov
jnp
dec
js
dec
shll
jno
rol
dec
imul
and
stos
add
loope
sub
xor
push
xchg
data16
sub
xlat
lock
ljmp
pop
sbb
in
jmp
mov
lret
or
xchg
lock
pop
push
mov
cmpb
or
popf
and
ja
pop
jecxz
ja
lods
push
fadd
xor
mov
mov
sbb
push
leave
sub
outsl
pushf
fsubl
sub
sub
ds
xorb
arpl
adc
push
das
push
sub
push
push
add
lea
cld
xchg
negb
pop
mov
fwait
push
adc
out
in
jb
dec
je
push
daa
push
cmp
sub
std
hlt
inc
mov
jle
mov
lcall
int3
add
cld
push
xchg
pop
mov
and
xor
or
outsl
insb
or
out
das
push
jb
mov
sub
in
in
xor
outsl
ret
cmp
jp
fildll
mov
pop
pop
mov
mov
mov
mov
xor
bound
sub
xchg
cmp
mov
dec
xor
pop
bound
mul
or
mov
sub
ljmp
out
cmp
test
popa
jmp
out
movsl
pop
mov
sbb
mull
pop
cs
sub
cs
push
aas
outsb
jae
movsl
dec
test
mov
cmp
lcall
xor
imul
daa
ja
xor
mov
or
xchg
test
test
sbb
test
push
mov
loop
pop
in
andl
fsubl
test
xlat
push
and
dec
cmpsb
sub
int3
mov
mov
rolb
dec
sbb
out
mov
test
inc
test
push
mov
daa
and
imul
xlat
mov
lcall
and
ljmp
jb
movb
inc
push
insl
dec
rclb
js
sbb
or
cwtl
sbb
fwait
pop
mov
dec
fidivs
fisttpll
or
pop
jmp
out
dec
lret
std
std
hlt
cmc
add
lcall
mov
loop
add
popl
fisttpl
sub
in
mov
out
imul
arpl
push
mov
xor
inc
cmp
push
imul
iret
fidivrs
lock
ret
push
or
and
aaa
aad
loope
cmp
sub
scas
sbbb
in
scas
adc
rol
into
add
pushf
push
adc
mov
jecxz
sbb
fs
gs
repz
cmp
sub
nop
mov
mov
aam
icebp
mov
fdivp
je
mov
adc
mov
rorl
push
ficoml
dec
mov
lret
mov
leave
mov
adc
out
pop
mov
xor
insl
xor
enter
pop
adc
gs
cmp
imul
inc
fcomp
arpl
xchg
adc
push
dec
pop
das
mov
jo
test
pop
mov
cmpsl
mov
mov
mov
int3
xor
repz
scas
cmp
pop
sbb
cmp
dec
popf
xor
es
out
pop
mov
and
add
jecxz
outsl
cmp
mov
xchg
cwtl
lods
lcall
add
scas
mov
push
jmp
pop
sub
sahf
jns
jge
dec
push
jecxz
clc
sub
test
add
ds
lods
jmp
rcrl
and
int
ret
lds
mov
scas
scas
mov
fbstp
mov
ljmp
dec
int
fadds
lds
sbb
divb
sub
shlb
mov
dec
pop
or
sub
push
das
call
dec
stc
mov
out
or
jo
pushf
les
ret
sbb
mov
mov
rcl
sbb
incl
mov
mov
push
mov
outsb
test
xor
jno
outsb
adc
mov
push
dec
xchg
push
sub
or
or
mov
cli
xor
jne
lock
mov
lret
adc
or
jbe
xchg
outsl
cli
int
orl
popf
sbb
and
int
fs
rolb
inc
jbe
or
int3
fstps
in
shrb
lcall
mov
subb
mov
fldl
rcrb
jmp
int3
mov
jg
mov
and
lcall
mov
sbb
push
cld
sbb
push
jmp
xor
mov
pop
sub
cmp
mov
repnz
sti
xchg
test
std
push
mov
push
add
add
inc
push
jge
stos
xchg
movsb
rcll
icebp
push
xchg
fiadds
aam
imulb
xor
or
push
add
enter
and
mov
out
dec
pop
jns
cmp
lea
inc
aad
out
xchg
fwait
jo
jge
lcall
enter
xchg
stos
mov
push
mov
test
roll
ror
test
imul
in
xlat
push
mov
aam
push
xchg
fldt
and
mov
and
push
inc
cmc
imul
push
mov
outsb
ret
test
rcll
push
mov
sbb
sarb
ljmp
dec
push
fnstcw
aaa
mov
mov
adc
test
and
daa
loop
pushf
insb
mov
std
adc
cltd
pop
fisttps
nop
hlt
outsl
xlat
imul
popl
adc
or
and
lock
and
mov
mov
out
stos
es
xchg
sbb
or
daa
mov
push
mov
add
outsl
enter
add
das
lods
into
cld
inc
push
mov
ja
mov
dec
adc
lods
cmpsl
aaa
sub
xchg
gs
bound
add
movsl
pop
xor
int
ficoms
xorb
add
push
pop
add
cmp
mov
xor
inc
scas
and
xchg
adc
andb
push
add
xchg
dec
inc
rclb
push
je
push
sbb
arpl
lock
int
jecxz
bound
ret
ror
mov
inc
cmpsb
in
stos
imul
mov
inc
jbe
in
in
push
mov
xchg
enter
scas
popf
mov
mov
insb
cmp
ja
inc
inc
or
jmp
mov
jmp
orl
jl
pop
sbb
xchg
dec
popa
stc
divb
movsl
pop
cmpsb
xor
jo
xchg
fidivl
or
flds
inc
sub
sbb
push
daa
loope
fcomip
es
fldt
pop
jns
jge
lods
fnsave
cld
cmp
adcb
sbb
loop
inc
and
cld
outsb
stos
test
cmp
sub
xchg
add
adcb
aaa
ret
insb
xchg
mov
and
mov
orl
cli
or
push
mov
jbe
pop
aaa
jge
icebp
pushl
cmp
and
push
sub
dec
dec
sub
pop
int3
jle
pop
cmc
mov
sub
call
rolb
mov
mov
dec
cld
jle
out
jns
mov
mov
and
adc
fdivl
lret
mov
dec
mov
fmull
enter
frstor
into
loopne
pop
data16
xorb
adc
pop
sbb
out
in
adc
stos
jecxz
insl
jmp
movsb
lret
mov
xor
sbb
ret
sub
push
push
pop
sarl
scas
sbb
mov
pop
inc
or
ja
jbe
lcall
add
fildl
or
xlat
pop
mov
imul
enter
and
jecxz
jp
and
ja
add
sbb
aad
iret
xchg
xor
ret
aas
lret
mov
lahf
push
mov
lods
mov
nop
lahf
sbb
fnstenv
aam
cmp
cmp
loop
pop
mov
sub
leave
jl
in
sbbb
lcall
xchg
adc
cmp
adc
sub
pop
fmull
ffree
sbb
popa
cmp
scas
cmp
xor
fsubs
xchg
jle
mov
mov
add
cmovl
sub
xchg
cmp
mov
cwtl
xor
into
js
je
ja
sub
mov
jp
leave
adc
sub
sbb
lahf
xchg
notl
cmpsl
hlt
int
cmp
adc
jl
jns
test
xorb
fwait
loop
movsb
jmp
cwtl
ja
inc
ss
inc
xchg
and
int3
xchg
shll
push
jae
jns
push
xchg
pop
les
incb
rcl
lea
iret
pusha
mov
cmp
ljmp
or
mov
lret
fs
and
cmpsb
inc
sar
dec
clc
xorl
enter
mov
les
sub
aas
outsb
push
mov
ja
outsb
sbb
inc
mov
push
xchg
dec
jns
inc
mov
int
jne
in
mov
or
push
or
popa
lods
sbb
outsl
mov
fwait
push
jge
cli
test
fwait
push
sbb
jmp
sub
mov
fsts
in
adc
daa
push
leave
in
in
mov
push
push
insl
sub
push
lcall
dec
insl
jns
cmp
addr16
mov
daa
pop
push
jp
dec
xchg
adcb
call
jge
repz
pop
les
lods
dec
les
mov
sti
out
out
pop
sti
addr16
bsr
sbb
pop
cmc
andb
lods
fmull
fwait
add
sbb
dec
xchg
sbb
dec
mov
pop
sub
add
xchg
or
push
int3
mov
movsl
jg
enter
icebp
cli
adc
inc
mov
mov
scas
adc
mov
push
add
mov
add
pop
add
incb
xchg
inc
dec
mov
stc
mov
sbb
call
popa
aaa
push
add
jne
fldenv
jl
mov
clc
nop
xadd
mov
imul
push
fcoms
mov
pop
inc
jge
lea
jno
pop
ret
into
fiadds
and
insb
pop
out
adc
mov
inc
cmp
mov
sub
sub
mov
push
jmp
shlb
and
sbb
in
push
xchg
and
scas
pop
dec
inc
mov
ss
imul
pop
in
lret
test
leave
sub
mov
pusha
xchg
or
aaa
push
gs
scas
ret
jns
aaa
inc
or
mov
test
out
push
mov
pop
hlt
push
cmp
nop
cmp
bnd
push
pop
mov
adcb
shll
mov
mov
push
movsl
in
push
dec
test
nop
and
pop
and
xor
sub
stos
jbe
shlb
cmp
in
clc
and
and
sbb
ds
jp
mov
scas
sub
rcrl
popf
jl
roll
insl
sti
pusha
adc
pushf
sti
push
xchg
cmpsl
xor
sub
sbb
idivl
pop
mov
loope
cmp
in
push
loop
mov
hlt
push
cmpsl
dec
out
sbb
into
sbb
push
adc
outsl
push
mov
sarb
out
adc
push
sub
or
into
out
arpl
sar
out
push
push
movsb
lcall
jo
enter
push
int3
xchg
jmp
movsl
jno
pop
imul
movsl
dec
mov
andl
mov
push
into
mov
inc
pushf
mov
int3
bound
jne
fidivrl
and
stos
mov
lds
cmp
xor
cmp
jmp
jbe
sub
loopne
shl
or
neg
repnz
bnd
stos
call
in
lea
mov
mov
in
inc
cmc
sbb
pop
mov
cmpl
loop
cmp
hlt
cmp
mov
loopne
push
xchg
shr
das
push
xchg
lock
add
pop
mov
xchg
push
mov
loop
push
in
dec
stc
data16
push
fadds
add
add
daa
jbe
idivl
mov
pop
sbb
lret
add
add
pop
add
js
add
outsl
cltd
sub
loopne
das
cs
xor
imul
pop
das
ja
clc
jo
sarl
mov
inc
adc
push
in
daa
add
int
xchg
pop
jno
inc
xor
mov
cmpxchg
mov
dec
or
sahf
jno
stc
mov
loop
ljmp
push
into
cmp
shrb
mov
push
outsl
ret
clc
inc
adc
loope,pt
imul
aad
stos
xor
push
push
pop
fnop
and
hlt
daa
pop
xlat
push
pop
scas
xchg
stos
add
add
pop
sbb
sbb
rorb
xchg
addr16
addl
pop
lods
pop
or
ljmp
js
imul
jmp
sahf
xchg
enter
jp
xchg
rcrb
es
imul
repnz
inc
bound
add
or
jnp
mov
xchg
push
into
lret
bound
cmpsb
jp
cmc
imul
mov
into
aaa
fdivs
dec
dec
bound
fsubrs
pop
jl
and
jnp
aaa
mov
loopne
inc
cwtl
mov
jns,pn
inc
fs
in
xchg
jno
cs
mov
es
xchg
mov
sub
lods
xor
mov
mov
inc
mov
or
dec
mov
push
adc
mov
or
add
aam
sahf
pop
and
cmp
xor
xchg
jecxz
sbb
pop
or
std
out
iret
xor
ret
sti
fwait
adc
jecxz
test
hlt
cs
cli
or
or
cli
bound
pushf
pop
test
movsb
mov
xor
insl
repz
pop
movb
cmp
fbld
test
add
mov
ret
or
test
cmp
cltd
mov
cltd
fcmovbe
lcallw
sub
dec
add
outsl
xchg
sbb
pop
stc
sub
addr16
inc
repnz
shlb
mov
mov
cmp
ficomps
pushf
fwait
ljmp
in
sarl
dec
mov
leave
aas
xor
mov
data16
and
pop
sar
sbb
add
and
inc
dec
imul
ja
inc
popa
in
mov
ss
leave
inc
stos
fbld
sbb
sub
sub
andl
mov
sti
jbe
lock
addr16
nop
sahf
inc
sub
adc
adc
cmp
pop
adc
pop
sub
xchg
daa
mov
insl
mov
pusha
lahf
xor
in
mov
ret
mov
iret
dec
push
ljmp
jne
or
and
test
cmpb
int
outsb
lods
xchg
ret
lock
lds
pushf
sbb
popa
jecxz
in
flds
sbb
pop
mov
adc
jmp
call
mov
mov
jmp
and
sbb
mov
xor
into
call
fsts
popf
fidivl
adc
xlat
add
pop
mov
fsubl
mov
fcoml
cmp
aaa
push
xchg
ja
js
sub
addl
cltd
int3
mov
sbb
add
inc
shll
mov
xchg
dec
adc
insb
ss
cmp
push
dec
sub
sbb
sub
cmc
or
lret
pop
in
aas
mov
sub
pushf
loopne,pn
enter
iret
decb
xchg
adc
ja
add
fwait
adc
out
out
sbb
dec
mov
lea
ljmp
push
lods
ret
xchg
shrl
insl
pop
sarl
adc
jl
imull
fcoms
dec
mov
scas
rcl
or
rcrb
pop
pop
punpcklbw
sbb
ss
jl
sti
jnp
int3
add
insb
clc
ror
das
cmp
andl
mov
inc
dec
jne
xchg
das
mov
inc
lock
pop
outsb
inc
loope
add
sub
out
testb
pop
push
and
das
xor
inc
stos
mov
jmp
add
test
push
or
adc
cltd
loop
shrb
xor
add
cli
sti
push
add
into
cmp
or
dec
lods
xchg
outsb
mov
or
scas
cmp
mov
inc
adc
xlat
add
inc
push
pop
arpl
popf
adc
dec
mov
sbb
aaa
popf
push
popf
sub
dec
push
fmuls
add
jl
sub
arpl
push
arpl
xchg
mov
imul
enterw
rclb
in
push
stc
popf
movsb
fistpll
lahf
xlat
mov
jl
jle
in
data16
jns
fcompl
in
lods
mov
dec
cmp
push
jmp
popf
inc
push
cmpsl
push
leave
push
icebp
imul
jns
mov
ret
sbb
fldcw
imul
jno
bound
in
in
andl
cwtl
sbb
pop
loope
into
sub
imul
inc
movsl
xchg
mov
scas
mov
cwtl
adc
sub
cmp
mov
adc
lret
je
mov
adc
mov
bound
sahf
nop
cmc
outsb
inc
mov
sbb
adcl
fisttpl
repnz
fwait
loopne
pop
out
insb
pop
xchg
and
orb
daa
inc
movsb
inc
sbb
mov
in
test
xchg
in
rorb
mov
xor
xor
lret
pop
mov
lret
loope
addb
mov
jne
mov
lock
popf
sbb
and
daa
push
je
cmp
inc
mov
ds
add
sub
inc
cmpsb
mov
xchg
cld
sti
jne
xor
ret
inc
mov
pop
js
pop
sbb
xchg
pop
push
mov
test
mov
sbb
pop
push
les
jl
mov
insb
xchg
movsl
divl
jnp
push
aad
imul
aas
enter
push
ljmp
sahf
and
xor
xchg
insb
sub
xor
xchg
jle
or
jg
push
xchg
jb
out
fdivrs
push
mov
mov
sbb
lcall
jb
pusha
scas
test
shl
cmpsl
rcll
loopne
xlat
outsl
out
out
jp
sub
dec
rcrb
mov
leave
sbb
or
test
imul
cmp
cmp
pop
mov
mov
mov
pop
inc
or
and
xchg
cmp
jp
das
jecxz
and
icebp
clc
insl
jns
pushl
jo
add
adc
lods
push
adc
punpcklwd
add
adc
shlb
add
js
add
xor
aaa
add
push
pop
inc
dec
xor
inc
ss
xor
pop
dec
inc
add
pop
xor
dec
inc
pop
xor
push
pop
xor
push
cmp
add
push
xor
dec
inc
pop
xor
dec
inc
aaa
add
push
xor
pop
inc
inc
push
pop
inc
pop
push
add
xor
xor
inc
add
xor
xor
xor
push
pop
inc
add
push
pop
inc
pop
push
xor
add
xor
inc
cmp
push
cmp
push
xor
cmp
pop
push
dec
dec
add
pop
pop
dec
cmp
cmp
add
xor
dec
inc
xor
pop
cmp
add
xor
push
push
inc
pop
push
xor
push
inc
push
pop
dec
xor
cmp
inc
inc
pop
push
pop
push
dec
pop
push
xor
pop
push
push
cmp
dec
push
push
dec
xor
dec
dec
xor
push
dec
cmp
pop
inc
dec
pop
inc
push
push
pop
inc
add
xor
dec
cmp
push
push
add
dec
xor
xor
inc
dec
xor
ss
dec
cmp
push
push
aaa
xor
xor
pop
push
push
push
dec
pop
inc
add
pop
xor
pop
xor
inc
xor
xor
xor
push
xor
dec
xor
push
add
pop
add
push
add
xor
pop
add
add
push
add
add
dec
add
xor
pop
add
push
add
add
xor
pop
add
add
add
xor
inc
add
inc
add
xor
add
inc
add
add
inc
add
pop
add
add
push
add
pop
add
dec
add
add
inc
add
xor
add
inc
add
add
add
pop
add
xor
pop
add
add
push
add
add
pop
add
dec
add
xor
add
dec
add
add
aaa
add
inc
add
add
inc
add
xor
add
inc
add
dec
add
push
add
inc
add
add
add
pop
add
add
dec
add
add
cmp
xor
pop
add
add
pop
add
pop
add
add
add
push
add
add
xor
pop
add
inc
add
push
add
dec
add
cmp
aaa
add
add
dec
add
pop
add
inc
add
xor
dec
add
push
add
add
dec
add
dec
add
xor
add
add
or
add
rolb
add
or
add
xor
add
pusha
pop
add
loopne
add
adc
add
sub
add
pop
or
adcb
cmpb
add
mov
or
adc
add
lock
addb
add
add
add
add
add
add
add
in
push
add
in
push
add
add
addb
add
add
add
add
add
add
add
sbb
add
add
add
add
add
dec
pop
add
add
add
add
pop
add
test
add
lcall
xorb
add
loopne
add
add
add
add
add
add
add
incb
add
insb
adc
add
add
subb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
inc
or
sbbb
addb
add
add
add
add
add
add
add
outsb
or
xorb
addb
sbbb
cmpb
add
mov
add
add
add
add
add
add
add
rorb
add
jae
add
call
add
add
add
add
add
add
add
jmp
add
add
add
add
sbb
subb
add
dec
add
addb
add
add
add
add
add
add
add
repz
add
add
js
add
add
add
add
add
add
add
or
adcb
add
test
add
rolb
bound
add
fadds
addb
add
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
push
add
xor
add
add
add
in
add
add
add
xor
add
push
or
add
add
add
add
add
and
add
in
add
add
add
dec
add
call
add
add
add
add
aaa
add
push
or
add
add
add
add
add
inc
add
push
or
add
add
add
add
add
add
or
add
add
add
add
add
add
adc
add
in
add
add
add
fs
add
adc
add
in
add
add
add
jbe
add
push
or
add
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
add
in
add
add
add
lcall
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
mov
add
or
add
add
add
add
add
mov
add
in
add
add
add
fadd
add
push
or
add
add
add
add
add
rolb
add
or
add
add
add
add
add
flds
add
or
add
add
add
add
add
loop
add
or
add
add
add
add
add
jmp
add
or
add
add
add
add
add
hlt
add
push
or
add
add
add
add
add
std
add
push
or
add
add
add
add
add
pop
add
push
or
add
add
add
add
add
adc
add
or
add
add
add
add
add
sbb
add
or
add
add
add
add
add
add
pop
add
inc
add
xor
pop
add
pop
add
aaa
add
add
xor
dec
add
cmp
push
add
add
dec
add
add
add
push
add
or
inc
add
add
add
dec
add
push
add
add
add
aaa
add
add
add
cmp
cmp
inc
add
xor
dec
add
inc
add
dec
add
add
add
push
add
pop
add
add
or
dec
add
push
add
push
add
add
xor
or
inc
add
push
add
xor
add
add
add
push
add
add
add
inc
add
add
add
xor
push
add
dec
add
add
inc
add
add
xor
pop
add
inc
add
add
pop
add
add
or
push
add
push
add
add
add
dec
add
push
add
push
add
or
pop
add
dec
add
xor
aaa
add
inc
add
add
add
cmp
dec
add
xor
inc
add
add
cmp
pop
add
dec
add
add
add
dec
add
pop
add
add
xor
dec
add
add
dec
add
pop
add
dec
add
push
add
xor
inc
add
add
pop
add
add
add
cmp
cmp
push
add
add
add
push
add
pop
add
xor
add
add
add
push
add
add
dec
add
xor
xor
pop
add
add
pop
add
aaa
add
add
add
add
add
add
inc
add
add
inc
add
pop
add
add
cmp
cmp
push
add
xor
add
pop
add
push
add
add
add
push
add
push
add
add
add
add
add
push
add
inc
add
pop
add
push
add
pop
add
add
xor
inc
add
pop
add
pop
add
add
push
add
xor
inc
add
inc
add
add
push
add
xor
pop
add
or
push
add
add
xor
pop
add
push
add
inc
add
pop
add
add
add
dec
add
pop
add
push
add
push
add
add
xor
pop
add
push
add
dec
add
inc
add
dec
add
add
jmp
jle
js
aam
mov
xchg
jge
add
pop
add
sub
pusha
adc
out
push
rcrb
jns
outsb
jp
sti
inc
mov
ljmp
push
cmpl
xchg
mov
stos
mov
arpl
adc
ja
scas
mov
cmc
stos
and
mov
inc
fs
lahf
out
jne
enter
sbb
add
push
daa
xchg
scas
outsl
mov
xchg
jmp
sub
jae
out
ret
loop
jle
out
test
repz
daa
lcall
jne
sub
dec
dec
cmpsb
pop
mov
inc
iret
mov
push
pop
testb
pop
lret
mov
inc
jns
cli
fidivs
cmp
and
adc
dec
je
sub
lahf
insb
pop
mov
mov
mov
leave
enter
aad
pop
xchg
rclb
xor
scas
xor
fnstsw
loope
es
xchg
push
mov
fstl
jbe
sbb
loop
nop
pop
aas
in
repnz
lea
sub
mov
mov
add
xchg
cmp
xchg
inc
push
xor
lret
and
dec
enter
fstpt
dec
pop
es
cmc
repz
ret
push
leave
fldl
fcomp
lods
dec
mov
cmp
mov
iret
cli
ss
cli
in
lods
mov
push
into
mov
xorl
hlt
shll
shl
mov
jmp
inc
inc
pushf
ds
jo
jecxz
sarl
xchg
out
filds
jmp
addr16
inc
pop
adc
mov
xor
cmp
mov
fistl
jo
cwtl
lahf
inc
fcmovu
mov
jno
sbb
icebp
mov
fisubrs
fnstcw
stos
bound
mov
ror
jbe
sbbb
jl
mov
iret
push
cli
sbb
or
and
shll
sbb
icebp
lcall
test
mov
div
pop
or
mov
cmp
add
repz
xchg
dec
jg
stos
incl
xlat
ss
jo
pop
cmp
outsb
cmpsl
sub
daa
loop
mov
scas
push
pusha
push
sub
int3
lahf
outsb
mov
inc
sub
push
insl
inc
add
xor
cmpsb
lods
inc
test
adc
mov
lods
jmp
sub
adc
mov
stc
lret
pop
inc
call
addb
dec
adc
push
xchg
movsl
or
pop
xchg
lea
inc
sti
mov
cli
stc
cmp
inc
sbb
in
mov
sub
dec
inc
filds
inc
fisubs
mov
xchg
cmp
fdivs
sahf
scas
iret
push
pop
jle
mov
mull
sbb
push
daa
data16
pop
jae
ds
lret
dec
inc
repz
jb
fstps
push
inc
inc
clc
inc
inc
xchg
jbe
mov
insl
test
or
test
push
dec
enter
push
cli
cmp
rcl
push
cltd
push
push
dec
cli
test
xorl
popa
outsb
jae
mov
test
test
stos
shl
dec
decl
dec
std
xchg
xchg
mov
cld
hlt
mov
mov
mov
shll
sbbl
aam
and
sub
push
or
subb
mov
mov
xchg
inc
clc
sub
popf
jae
pop
clc
repz
and
pusha
nop
xchg
mov
mov
test
xchg
int
rcl
jb
push
jno
jmp
ret
push
outsb
nop
dec
lods
cltd
in
imul
mov
inc
popf
sti
xorb
push
in
cs
mov
adc
mov
adc
fucomi
jae
popf
cmc
mov
pop
mov
pop
movsl
push
mov
inc
and
mov
clc
scas
mov
mov
adc
adc
fstl
mov
mov
push
sbbl
lods
mulb
mov
sub
xchg
aam
inc
test
cmp
lods
fisttpll
pop
mov
sub
mov
dec
es
inc
push
cmp
inc
inc
cltd
lahf
mov
inc
popf
push
out
ret
or
out
and
jg
dec
std
les
pushl
in
scas
pusha
mov
setbe
test
jp
call
repnz
xorl
pop
inc
jge
sbb
outsb
fadd
cmp
popa
pop
pop
adc
fnstenv
jl
out
sub
jmp
pop
ljmp
mov
ds
notb
mov
inc
dec
mov
fldl
ja
ret
shll
clc
xchg
add
lea
daa
sti
xchg
pushf
fists
and
sub
aad
sub
mov
xlat
sub
notb
jle
fs
sti
jmp
or
mov
xchg
dec
add
xor
mov
jmp
and
and
cmpsb
mov
inc
jecxz
or
adc
push
movsl
lea
aad
cli
push
dec
push
loopne
add
jle
fnstcw
aam
out
sub
filds
es
inc
mov
cmp
sbb
movb
inc
xor
mov
add
jecxz
or
xor
pop
mov
lret
pop
pop
push
aaa
jge
mov
pop
je
shrl
pop
xchg
nop
jl
insl
in
push
subl
jmp
dec
xchg
cmp
fildll
jne
xor
jmp
loope
jg
loope
out
jg
add
inc
mov
jnp
test
pop
xor
roll
cs
lock
lods
bound
lock
cmpsl
aaa
in
test
pop
adc
xlat
out
jne
idiv
pop
jne
add
les
cltd
ja
in
test
ficoms
mov
jmp
jge
pusha
cmp
insl
mov
push
and
pusha
pop
push
mov
xchg
cmpsb
dec
or
xchg
cmc
sub
push
jnp
dec
xchg
jb
mov
mov
push
sbb
dec
imul
dec
xchg
repz
xlat
fwait
xor
sbb
inc
mov
cmpsb
popa
pop
dec
sub
outsl
xor
lods
jae
jp
or
cmp
mov
push
xchg
mov
pop
imul
pop
cli
add
dec
adc
daa
and
mov
pusha
jmp
sub
add
pop
add
xchg
je
jmp
mov
jno
xchg
inc
js
test
jmp
cmp
loopne
gs
xor
push
movsb
add
push
pushf
fwait
int
inc
mov
pop
push
adc
repnz
enter
stos
test
add
mov
inc
jns
in
push
stos
sti
pusha
mov
cmc
test
jmp
sub
and
sti
mov
adc
inc
adc
mov
or
lock
xchg
and
or
div
xchg
and
adc
stos
dec
push
shrb
bound
adc
pop
hlt
sub
out
push
and
out
sbb
lahf
push
jecxz
dec
xchg
imull
mov
je
push
mov
xchg
lods
cld
ss
xchg
out
pop
cmp
stos
pusha
int
ja
test
pop
pop
adc
sub
enter
pushf
inc
jge
frstor
fcmovnu
cmp
cmpsb
ja
mov
mov
cmpb
ud2
outsl
pop
inc
push
mov
in
cmova
adc
push
repz
test
int
pop
xor
std
or
pop
shl
xor
xlat
mov
call
mov
mov
ss
stos
out
add
mov
push
xor
xlat
mov
xor
ret
inc
dec
sbb
or
lods
rcrl
fstp
adc
inc
mov
xor
mov
dec
sub
jae
lods
adc
pushf
and
mov
dec
outsl
xchg
das
ds
mov
out
push
fisubl
imul
loope
pusha
mov
and
mov
std
test
test
xchg
packuswb
rcll
pop
lret
das
scas
mov
add
insb
push
aad
jecxz
sbb
mov
ret
in
in
inc
repz
test
xchg
push
dec
jmp
add
int3
push
xchg
pop
inc
push
adc
sti
push
clc
pusha
push
inc
cmp
out
cs
push
xchg
fisttpll
mov
imul
gs
outsb
push
sub
fisubrs
lret
inc
mov
lods
or
call
insl
lret
movsl
lds
sub
dec
mov
jle
and
imulb
pop
add
xchg
call
cmp
lds
fwait
stc
jp
in
cvttps2pi
xor
dec
mov
rclb
xor
dec
pop
jo
inc
add
xor
test
out
push
pop
push
and
jmp
push
popa
xchg
popa
lahf
pop
clc
inc
dec
je
push
sbb
js
sub
adc
cld
xchg
push
movsl
xchg
add
jb
in
pop
stc
push
addb
ja
scas
adc
mov
and
hlt
sarb
popa
ljmp
shrl
xchg
adc
lcall
inc
ficompl
jb
or
mov
test
dec
divb
cwtl
outsb
stos
sbb
push
mov
aam
aad
push
xchg
cmp
sahf
and
xor
push
jp
dec
mov
loop
push
scas
xchg
lcall
shrl
outsl
pop
mov
lods
nop
jnp
sar
daa
pusha
int3
mov
push
fidivrl
pcmpgtb
rcrb
in
mov
cmp
aaa
clc
int
jo
xchg
push
pop
or
xchg
jp
pop
dec
or
outsl
inc
push
dec
mov
clc
fcoml
fbld
ja
mov
into
test
cmp
pop
addr16
sub
push
jp
in
mov
pop
cmp
jge
into
loop
xchg
xchg
push
push
add
popf
jle
xor
xor
add
mov
clc
movsb
dec
adc
mov
adc
cmp
xchg
sub
push
jns
sbb
push
test
mov
gs
mov
out
addr16
push
add
jae
loope
je
xor
idivl
inc
rcr
lods
psrad
test
sbb
cmp
ja
sub
push
lea
push
push
cld
rorl
jp
iret
xchg
mov
cmpsl
stos
cmc
addr16
add
and
pop
add
cmp
loopne
mov
xchg
fldt
add
scas
sbb
cmc
out
jae
dec
ja
pusha
or
fistpll
arpl
sbb
dec
jg
roll
add
jns
jo
out
scas
fcompl
cmp
rolb
fs
pop
fisubrs
lahf
inc
leave
shlb
rclb
sbb
sub
add
or
ret
stos
push
cmpsb
fildll
lds
xchg
jecxz
push
xor
jnp
or
mov
jbe
fisttps
test
mov
ret
push
jbe
lcall
and
push
inc
push
lock
or
pushf
sbb
fiaddl
pop
or
dec
fcomp
inc
std
pop
insb
jl
sbb
mov
cmp
dec
pop
inc
pop
subl
jno
add
cmp
hlt
je
ja
jp
hlt
push
lret
or
xlat
and
cmp
mov
into
sarb
jno
sub
mov
je
das
popa
dec
inc
pop
cltd
cwtl
sub
icebp
insl
mov
aaa
jmp
cs
loopne
push
rcrb
repnz
insl
adc
mov
lret
stos
inc
repz
fiaddl
stos
xlat
pop
push
movsb
jo
inc
adc
popf
shll
push
sbb
in
dec
jne
jno
rcl
and
lock
mov
jecxz
push
incb
lea
sbb
push
xchg
jb
or
cs
fisttps
add
mov
push
hlt
mov
movsb
stc
fildll
inc
insb
add
fistl
xchg
ja
out
notl
and
test
push
add
adc
push
xor
in
stos
in
mov
and
dec
dec
push
dec
cmp
decb
lds
icebp
inc
mov
stc
or
call
loop
les
pextrw
loopne
sub
pusha
sub
inc
enter
dec
lret
sarl
jne
mov
addr16
push
mov
mov
out
mov
lods
stos
imul
push
out
jbe
pop
jecxz
dec
jmp
mov
and
aas
stos
fwait
mov
fistps
les
sub
inc
jno
es
and
cltd
popa
aaa
xor
add
add
pop
mov
cmp
loope
add
pop
add
notb
pop
icebp
arpl
mul
repnz
fisubs
push
sub
lods
cmp
out
sbb
mov
test
lods
addr16
loope
icebp
mov
and
pusha
fnstenv
push
mov
pop
cltd
add
pop
in
outsl
into
xchg
mov
je
xor
popa
and
pop
and
and
sarb
mov
push
sub
out
mov
mov
sahf
push
or
pop
sbb
and
mov
and
or
nop
jl
outsb
call
add
cmp
scas
dec
jne
jbe
shr
xor
sbb
loopne
add
dec
ror
sbbl
scas
mov
jmp
push
pop
pop
sti
in
mov
lret
test
add
xchg
pop
cmp
fisubl
loopne
lds
sbb
xor
and
mov
mov
xchg
test
mov
lret
imul
push
std
xchg
push
mov
sub
xor
aas
loop,pn
pop
scas
dec
push
jo
or
sbb
test
imul
repnz
cmc
fldenv
lds
out
fidivrl
mov
xchg
aaa
sub
adc
dec
inc
pop
shll
loope
and
frstor
mov
sub
cmp
and
push
addr16
cmp
xor
dec
in
dec
mov
scas
or
push
pop
test
fnsave
mov
jb
clc
je
aaa
xor
mov
repnz
aad
ja
fistpll
fs
fsubp
fldcw
mov
lods
outsb
push
fcoms
rclb
cwtl
or
dec
sbb
test
pop
fcomp
das
cmp
cmp
lock
pop
into
cmc
and
and
sahf
push
lret
in
fcom
nop
xchg
push
ret
fwait
inc
lret
repz
add
dec
push
mov
loopne
stos
inc
jne
shl
lcall
xor
iret
test
pop
jge
stc
pop
popf
pop
mov
jno
cmpb
test
aad
adc
ret
mov
cmp
lcall
clc
inc
pop
imul
push
mov
jg
mov
dec
clc
sbb
aas
pop
pop
lods
or
addr16
xchg
inc
dec
push
push
jbe
cli
rolb
out
test
xchg
xchg
mov
add
mov
lret
pop
arpl
aam
adc
mov
loope
mov
xor
nop
push
jno
sbb
sbb
cld
fstl
adc
dec
sbb
cs
test
lcall
xchg
outsl
mov
cmp
lock
mov
pop
push
cmp
aaa
loopne
push
push
enter
fimuls
and
inc
lret
insb
ror
sbb
ss
inc
fmulp
repnz
xor
cli
mov
cltd
dec
push
pop
pop
and
adc
inc
jnp
dec
push
cmpsb
shl
enter
push
jge
addl
mov
adc
shll
hlt
mov
lret
jne
test
xor
ja
fistpll
add
insl
xor
sub
mov
daa
inc
es
pop
hlt
in
mov
ljmp
and
sub
movsb
test
cwtl
fcomps
es
fldt
in
movsl
out
fsub
and
fucomp
out
mov
pop
das
insl
inc
mov
mov
stos
xor
aas
mov
dec
lret
cmc
and
scas
cwtl
push
mov
dec
fcomip
movsb
sub
mov
cmpsb
pushf
sbb
push
mov
and
mov
lds
pop
dec
loopne
std
pop
call
repnz
add
bound
ja
pop
ss
arpl
pop
sahf
sahf
into
enter
xchg
in
push
push
rolb
xchg
xlat
mov
out
cmp
adcb
jo
xchg
mov
out
xchg
mov
sub
test
cmc
jle
mov
pop
and
imul
popf
and
out
sbb
push
outsl
inc
dec
adc
sti
xchg
pop
inc
or
lock
aad
cmp
pop
jl
mov
mov
mov
sarl
push
sub
mov
cmp
adc
mov
lods
push
test
lods
add
jno
inc
dec
pop
aad
divl
das
cld
mov
into
cmp
incb
lea
outsl
movsb
xor
popa
add
popa
add
cmpsl
jns
outsb
cmp
mov
out
das
notb
mov
mov
repnz
je
dec
inc
fsubl
negl
adc
mov
cltd
out
mov
mov
shll
inc
daa
stos
mov
aam
arpl
jge
sbb
push
and
add
mov
outsl
sub
je
cmp
xor
es
sub
fidivl
push
cmpsl
mov
jb
jge
push
mov
push
jns
out
dec
and
cmpsb
xchg
dec
xor
ja
add
enter
fstl
insb
loopne
pop
pop
cs
fwait
sub
insb
into
stos
dec
and
add
mov
dec
ret
les
mov
or
repnz
push
and
mov
pop
or
aaa
fwait
mov
out
jnp
out
je,pn
dec
es
scas
in
mov
shl
jo
lret
idivb
jle
imul
mov
jle
xor
jg
mov
jmp
mov
ja
mov
in
pop
sbb
mov
bts
imul
xchg
lcall
mov
sti
iret
and
scas
cld
negl
ss
nop
insl
movsl
or
cmp
sub
loop
mov
dec
and
in
pop
inc
push
fstpl
jg
push
iret
xorb
lods
mov
movb
cli
mov
les
je
in
inc
pop
and
call
cmp
mov
mov
mov
push
pop
lods
ss
jg
dec
in
test
ret
mov
sub
xchg
sete
push
or
adc
pop
push
jo
das
mov
xchg
and
jo
out
xlat
ja
in
mov
or
stos
xchg
out
or
pop
cltd
ljmp
cli
fwait
xor
stos
cmp
add
sub
imul
aam
or
jmp
dec
mov
scas
aaa
sub
mov
add
add
repz
movsb
adc
movsb
dec
mov
add
add
add
dec
sub
xchg
xor
pop
arpl
inc
mov
jl
mov
add
add
xchg
adc
in
icebp
int
in
nop
fwait
and
pop
dec
push
adc
and
mov
mov
into
sbb
bnd
ret
mov
imul
addr16
ljmp
dec
inc
mov
lock
int3
out
mov
sbb
cld
rcr
call
sahf
stos
test
adc
pop
repnz
mov
lds
stos
cmp
insl
or
cmp
ror
loopne
dec
outsl
push
or
xor
in
inc
cmp
and
xchg
clc
outsl
hlt
adcl
mov
faddl
cltd
mov
xor
jns
loop
aad
pop
cli
xor
loopne
scas
inc
dec
jle
and
mov
push
jno
xor
mov
xchg
mov
leave
xor
pusha
ficompl
lods
or
leave
in
and
pushl
cmp
scas
das
popf
icebp
test
mov
mov
mov
out
cmpsb
fmull
inc
test
push
jns
ret
add
mov
das
hlt
or
sti
xchg
loop
xor
or
and
push
pop
rcrl
and
pop
jmp
test
push
gs
cmp
scas
in
stos
enter
cwtl
adc
cli
push
mov
cmp
aam
xchg
mov
negl
mov
data16
adc
leave
jg
add
pop
sbb
ja
int
arpl
sbb
inc
call
les
imul
dec
lcall
xchg
fstps
cmc
into
push
std
loopne
imul
in
insl
outsl
into
fwait
ds
insb
scas
inc
push
or
andb
sbb
jle
add
pop
xchg
xchg
inc
and
adc
movsl
popa
out
roll
call
aas
les
hlt
push
pop
lret
jo
out
sub
or
mov
aaa
sub
or
into
cmpb
fs
mov
imul
outsl
test
sbb
in
incb
idivb
ljmp
lahf
cmp
iret
mov
aam
addr16
mov
mov
test
int3
jp
mov
or
cmp
pop
xchg
mov
mov
jb
movsl
jle
pop
jnp
push
lcall
imul
sbb
call
lock
mov
or
dec
in
and
pop
outsb
sbb
into
aam
aam
xchg
fcomps
xchg
repz
pop
shlb
loope
cmc
sub
sbb
mov
cltd
gs
sub
push
pop
mov
xchg
out
lods
sub
mov
push
stos
push
push
jge
cltd
fsubs
clc
out
mov
mov
cwtl
jmp
loopne
pop
lock
lret
mov
in
out
es
ret
cmp
and
mov
fsubs
test
int
inc
into
fists
rcll
out
jae
cmpsb
out
scas
jle
or
mov
arpl
xor
xor
lcall
shll
fsubl
xchg
sub
mov
outsl
cltd
mov
rclb
fcoml
adc
or
fs
paddb
and
repnz
daa
pop
inc
fisttpll
jae
mov
lcall
mov
adc
cs
xor
fldlg2
test
scas
sti
int
or
outsb
xchg
sub
fs
and
sbb
inc
dec
or
insl
jnp
sub
push
aam
sub
movsl
out
jns
lods
xor
sarl
cmpsb
xor
shll
shll
mov
nop
push
push
fldl
inc
pushf
dec
add
xchg
cmc
dec
pop
je
mov
outsb
fidivs
sbb
jle
jl
sub
mov
push
pusha
adc
fwait
cmp
addr16
fdivl
in
fwait
push
jnp
lcall
inc
ret
sub
cmp
xchg
push
popf
movsl
mov
add
scas
pop
dec
inc
lock
add
pop
pop
fsubr
mov
movsl
and
or
lret
adc
add
mov
adc
aad
test
cmc
pop
lret
xlat
leave
sbb
scas
pop
outsl
and
addr16
and
call
sbb
stc
or
push
int3
les
outsb
scas
xor
imul
inc
pop
sub
je
dec
mov
jnp
fwait
cmp
mov
cmp
hlt
adc
adc
xor
sbb
jne
aam
sbb
cmp
jo
insb
xchg
mov
inc
cwtl
and
mov
jnp
nop
xor
in
sahf
adc
insl
jecxz
and
orb
xchg
or
ret
loope
xor
lods
fiaddl
stos
in
ret
add
inc
mov
mov
cmc
jg
mov
inc
pop
xor
mov
mov
inc
pop
cmp
mov
popa
mov
push
or
ds
lcall
jo
inc
mov
add
addr16
xchg
sbb
hlt
outsl
xor
test
ds
mov
mov
xor
loop
mov
push
or
pop
push
add
cmpsl
and
xchg
pop
mov
testb
add
dec
imul
jl
sbb
or
addr16
dec
push
mov
mov
add
push
repz
dec
jno
and
pop
mov
stos
push
sbb
sbb
popa
arpl
in
mov
add
adc
shll
out
mov
cmp
xchg
or
nop
jb
fdivrl
jp
and
fildl
or
outsb
lcall
fstp
mov
cld
in
cmp
and
mov
push
outsl
das
mov
or
add
add
inc
inc
inc
addr16
clc
outsb
mov
cmp
outsl
xchg
lahf
cwtl
test
call
popa
push
neg
pusha
xor
add
push
scas
fwait
inc
iret
aaa
mov
ss
dec
rcl
ficomps
mov
inc
jge
inc
adc
or
into
mov
lret
xchg
mov
in
bound
out
xlat
rorb
loope
push
das
add
dec
call
idiv
ficoms
inc
and
repz
lea
add
pop
add
add
cmp
pop
mov
and
or
mov
mov
lods
xor
in
adc
test
add
lahf
js
popa
into
adc
lcall
xor
adc
mov
mov
outsb
or
mov
sahf
jmp
loope
xchg
inc
lahf
cmp
es
stos
pop
fisttpll
repz
dec
push
lcall
outsl
sub
test
cld
loop
loop
mov
lret
dec
push
lret
dec
mov
mov
loope
shrl
popf
rorb
insb
js
mov
pushf
mov
cmpb
and
jg
aas
fnstsw
push
push
mov
jmp
dec
insl
scas
fstpl
and
jg
int
jl
cltd
push
adc
dec
aaa
aaa
call
pop
icebp
lret
sub
bound
mov
ss
fs
cmp
push
repnz
xor
rolb
sub
push
inc
in
lods
adc
in
mov
mov
or
int
add
pop
test
add
in
rorl
jnp
pop
ljmp
rolb
xchg
cmpsb
rcrl
nop
jle
aas
pop
pop
push
and
xchg
inc
or
jge
sbb
dec
dec
loope
popa
sbb
repnz
das
xchg
sub
lret
sti
add
cmp
das
sub
lret
mov
in
push
leave
popf
enter
enter
inc
lret
jns
and
loopne
and
aaa
inc
cmpsl
sbb
stos
cmpsl
fcmovnb
in
or
fimuls
and
mov
sbb
loop
add
cmp
test
jbe
fsub
insl
inc
ja
and
leave
clc
dec
cltd
sbb
add
lret
xor
aas
jmp
call
enter
fldenv
mov
or
sahf
out
mov
bound
xor
inc
mov
cmc
scas
lds
pusha
xchg
dec
in
push
pop
mov
cmp
sbb
cmp
subl
jmp
dec
out
push
sub
inc
cmpsl
fisubrl
cmp
cmp
mov
andb
out
adc
mov
movsl
sub
sbb
sbb
outsl
sub
jecxz
movd
jmp
insb
scas
adc
inc
dec
and
arpl
and
cmc
movsl
inc
dec
int3
mov
dec
push
mov
xchg
vmulpd
loope
call
jp
mov
adc
fstl
call
cs
je
pop
xchg
and
xor
pop
jge
shll
sbb
adc
mov
ja
push
pushf
lahf
mov
repz
icebp
mov
sbb
or
lret
ds
jmp
clc
mov
stc
es
leave
imul
jnp
out
insb
mov
sbb
pop
es
in
fisubrl
cmp
jns
adc
mov
into
shll
xor
inc
dec
sbb
mov
xchg
mov
pop
loope
std
fwait
mov
jmp
push
inc
mov
hlt
mov
sbb
jne
out
push
lods
xchg
in
scas
aad
ja
jmp
inc
andb
add
push
andb
je
mov
dec
lods
movsl
and
jno
test
loope
inc
cmp
sub
int3
sti
bound
sahf
fdivs
shlb
rolb
jg
je
adc
rorb
push
add
clc
repz
add
outsb
cld
arpl
or
and
mov
push
in
cmp
add
leave
mov
add
mov
mov
inc
inc
pop
lahf
loopne,pt
sbb
sbb
pop
lods
dec
adc
jl
ss
mov
leave
repnz
jb
ret
pop
iret
cmpsl
sub
jae
xor
in
pop
inc
in
and
push
adc
das
mov
add
mov
pop
hlt
dec
jb
mov
adc
mov
mov
push
test
shrl
dec
sub
cli
je
mov
aad
cmp
dec
mov
lret
lods
xchg
jo
add
insb
cmp
in
insb
sub
sub
sub
out
popf
arpl
jne
into
push
jp
outsb
sub
mov
cwtl
cmp
xchg
or
gs
cld
mov
movsl
mov
enter
fisttps
scas
repnz
push
or
cs
lret
into
hlt
xchg
cmpb
call
xchg
incb
mov
test
nop
das
pop
adc
fwait
sub
or
mov
adc
icebp
adc
cmp
in
push
cmp
clc
lret
mov
xchg
jnp
xchg
lcall
mov
mov
inc
hlt
lcall
out
push
mov
cmpb
stos
jge
xor
mov
test
mov
pop
lea
add
jp
loopne
andb
mov
imul
and
cwtl
subps
push
or
leave
es
lcall
test
jne
cmp
sub
dec
dec
xlat
mov
or
pushl
inc
call
sbb
cs
nop
dec
call
sbb
enter
test
hlt
out
xchg
js
xor
xor
jg
cmp
xor
dec
in
and
loope
mov
out
push
sahf
inc
fmull
cmp
outsl
fsubp
iret
mov
inc
ja
arpl
pushl
xor
jmp
shlb
dec
iret
inc
out
xor
popa
aas
jno
cmc
jecxz
mov
add
cmp
xchg
pop
lods
sub
jne
mov
lea
mov
repnz
xchg
jp
ss
dec
repnz
inc
loop
sahf
adc
lock
pop
jle
test
xchg
test
cli
mov
pop
es
mov
jne
dec
push
lea
jnp
mov
aam
je
inc
cltd
lods
out
cmp
sbb
gs
jae
cs
pop
sbb
dec
jmp
mov
jg
mov
loop
arpl
cmp
inc
jo
add
and
movsl
lret
mov
mov
loopne
lahf
sub
add
pop
fld
mov
int3
ret
outsb
add
icebp
stc
cmp
fcoml
mov
mov
and
inc
pop
dec
mov
mov
sti
push
movl
scas
sub
mov
push
inc
or
pop
cltd
rcr
fiadds
add
push
pop
add
xor
mov
dec
inc
push
out
scas
ss
mov
in
mov
in
lods
outsl
dec
dec
dec
mov
xchg
popf
jno
push
mov
push
xor
mov
jae
cli
aam
sbb
ss
sub
gs
dec
movsb
lahf
push
mov
sub
xchg
cmc
repnz
dec
out
mulb
jnp
fistpl
sti
jno
and
je
mov
push
cs
pop
add
arpl
es
dec
fdivrs
scas
mov
ret
inc
adc
xor
xlat
ja
mov
sub
arpl
mov
clc
shrl
sbb
in
inc
and
adc
adc
adc
cs
test
sbb
js
or
aad
in
js
in
push
sbb
stc
dec
insl
dec
stos
fdivrl
xchg
outsb
and
add
inc
sbb
cwtl
adc
pusha
mov
aaa
daa
push
cmpsb
out
repz
xchg
clc
adc
jnp
stc
push
mov
test
inc
shr
insl
loopne
push
push
test
fs
testl
call
out
inc
inc
into
adc
mov
repnz
js
and
je
cmpsl
mov
mov
mov
cld
mov
mov
mov
das
xchg
or
push
lcall
and
xchg
repnz
mov
and
or
rol
lahf
dec
cmpl
subb
add
jg
enter
mov
addr16
addl
jp
movsl
inc
push
imul
addl
popa
fcmovnbe
pop
into
lret
cwtl
push
enter
bswap
mov
dec
xchg
inc
xor
xchg
dec
imul
adc
fsubrl
jecxz
cli
lods
ja
or
sti
adc
lahf
cmpsb
call
xor
cmp
or
jnp
stc
nop
test
push
lods
fidivl
int
popa
mov
scas
rcll
or
daa
fcoml
cmp
mov
xchg
mov
sub
dec
cmpsb
xor
mov
popf
jno
out
push
repz
bound
dec
scas
cld
mov
xlat
scas
xor
sbbb
out
in
comiss
inc
inc
cltd
and
push
ds
lcall
rorl
mov
cmp
inc
repnz
and
cmpsb
dec
sub
xor
repnz
inc
xor
cmp
lea
pop
pushf
xorb
test
adc
inc
mov
call
ror
cmp
adcb
sub
cld
and
fstpl
jnp,pn
mov
fisubs
loop
sub
xor
push
jae
xor
push
clc
dec
push
aam
call
push
push
mov
sbb
test
ljmp
pcmpeqb
xor
sbb
cmp
xor
out
add
fnstcw
jecxz
or
lock
jae
push
jmp
mov
addr16
push
sbb
imul
ljmp
idivb
shlb
js
pop
jle
cmp
rcrl
mov
pop
jl
inc
movsb
adc
pop
mov
fmul
fnstcw
mov
stos
push
inc
dec
pop
clc
cmp
mov
add
nop
and
push
stos
cmp
jne
sub
ss
stos
out
pop
std
xchg
imul
fcoml
cmpsl
mov
add
inc
inc
mov
rclb
and
lret
lret
and
gs
ret
cltd
xchg
fs
adc
inc
aaa
mov
mov
pushl
aas
mov
insb
fsubrl
imul
push
lods
jl
popa
cmp
clc
ljmp
push
das
push
jb
cmpsl
cmp
inc
cltd
inc
pop
cmp
xchg
inc
adc
pop
pushf
mov
xor
iret
inc
xchg
add
add
xor
sbb
cmp
ds
outsl
gs
inc
dec
jl
jae
aas
and
scas
ret
xchg
call
pop
mov
pop
in
int3
mov
shrb
das
sub
cwtl
out
mov
inc
push
hlt
cmp
fnstenv
jmp
mov
mov
div
cmp
sahf
out
adc
sbb
imull
movsb
mov
adc
shll
outsb
lret
adc
in
pushw
inc
xchg
lods
jmp
rcl
sub
lods
js
loopne
cli
push
inc
mov
mov
and
xlat
mov
adc
dec
or
xchg
nop
in
andb
jmp
insb
mov
pop
push
clc
adc
pop
adc
aaa
mov
dec
xchg
sub
jae
outsl
jmp
xor
adc
sti
add
cmp
sbb
or
pop
aad
xor
aas
push
pop
iret
dec
out
fidivrl
insb
jg
jo
test
fidivrl
out
lcall
or
lods
inc
push
fincstp
mov
mov
push
mov
mov
cmp
jo,pt
add
mov
xlat
mov
dec
bound
gs
and
sub
push
mov
xchg
add
sub
mov
sbb
lock
or
mov
fisttps
and
leave
fidivrs
mov
hlt
loope
pusha
mov
sbbb
arpl
jbe
orl
sahf
imul
adc
leave
das
test
ret
or
fstpt
ss
dec
pop
loopne
ret
scas
ret
sarl
add
ret
lea
mov
cmpsl
jmp
loop
aas
mov
cmpsb
pusha
dec
sbb
xchg
mov
xchg
out
into
insl
xor
cmp
jnp
cmc
dec
scas
jne
cli
xchg
cmp
jbe
adc
lea
cmp
and
pop
mov
add
cmp
xchg
mov
lret
mov
in
adc
out
jno
inc
in
sbb
sahf
adc
mov
mov
xchg
cmp
lea
andb
or
pop
dec
jmp
mov
or
data16
adc
xor
add
xchg
push
lcall
scas
mov
cmp
or
cmpl
data16
xor
push
xor
sbb
arpl
loope
sub
imul
insb
int
scas
pop
ror
pop
flds
adc
in
sti
lret
mov
inc
adc
fwait
shll
add
cmpsb
sub
loop
jecxz
mov
cld
in
jle
ret
repz
std
jle
loope
mov
dec
adc
popa
add
push
pop
add
mov
mov
xor
mov
or
fnstenv
addl
inc
cmp
sub
sub
pushf
shll
lahf
fimuls
or
insb
push
test
lea
mov
roll
orb
push
mov
aad
xchg
mov
test
mov
popf
ret
xchg
pop
mov
xchg
xor
outsb
mov
adc
sarb
adc
data16
imul
dec
inc
negl
fcomip
fiadds
xchg
or
je
add
ret
mov
sbb
test
add
mov
int
scas
mov
rorb
in
sub
fstpt
lahf
sbb
jb
jle
fsubrp
inc
push
or
pop
stos
imul
daa
inc
mov
movsb
jbe
inc
inc
cmc
sub
dec
xchg
gs
mov
movsb
cld
xor
xchg
push
inc
mov
dec
cmp
cmp
sbb
dec
cmpsb
xchg
inc
inc
push
movsl
mov
stos
sbb
cwtl
dec
mov
inc
push
orb
mov
shll
scas
sub
push
mov
sahf
ret
xor
adcl
cmp
jbe
les
cmp
scas
mov
stc
movsb
daa
fisubrl
in
xor
sbbl
cmc
jmp
push
lcall
mov
pop
adc
mov
outsl
clc
inc
xor
adc
mov
movsb
pushf
push
mov
jecxz
ds
sbb
test
mov
inc
dec
je
stos
inc
in
filds
int3
adc
andb
jne
in
scas
aam
sbb
add
std
out
dec
sub
xor
inc
xchg
leave
arpl
sbb
bound
mov
cmpsl
out
mov
sbb
jp
test
insl
imul
roll
cltd
sub
fidivl
stos
push
cli
mov
mov
int3
sti
push
repnz
adc
mov
cld
fisubrl
mov
out
test
and
mov
lods
movsl
xor
xor
mov
push
test
dec
nop
push
les
bound
inc
faddl
dec
aaa
stc
stos
das
adc
jnp
jb
lret
adc
out
jae
dec
mov
mov
cmpsl
stc
push
outsl
push
cld
cmpsb
inc
hlt
dec
push
mov
out
test
pop
lods
iret
pushf
bound
push
xlat
ja
push
subb
cmp
mov
icebp
sub
mov
xor
jle
shrl
jno
mov
mov
cmp
sahf
jmp
add
scas
daa
sub
aas
insb
sbb
sarl
data16
and
out
xlat
sahf
push
cmp
push
fistps
std
jae
push
or
loop
or
push
adc
lret
js
fbld
jge
lahf
std
mov
lods
daa
jmp
adc
adc
loopne
mov
xor
popf
sahf
jnp
sbb
cmc
test
icebp
xchg
ret
sub
shl
dec
mov
xor
add
push
push
test
pop
or
insl
xor
xor
movsb
stos
shrl
xchg
pop
mov
lret
in
jecxz
les
std
gs
aas
decb
dec
mov
js
sub
or
idivb
xorl
popf
testl
lret
sbb
fucomip
inc
cltd
lahf
clc
mov
xorl
test
cmp
mov
scas
out
outsb
out
mov
adc
cmpsw
xchg
ret
ficompl
int3
jne
push
lret
shrb
imul
in
aam
ja
xchg
test
push
push
push
mov
test
mov
add
cmc
roll
stos
inc
cmp
movsb
pop
aad
jnp
mov
out
pop
sbb
std
add
ja
std
cmp
jp
test
cwtl
sub
lods
adc
sbb
imul
ljmp
lahf
dec
sbb
stos
pop
popf
imul
mov
stc
mov
xchg
mov
addr16
ljmp
popa
outsl
popa
mov
clc
inc
cld
imul
nop
mov
and
fildl
jb
movsb
sub
pop
mov
cmpsl
insl
sub
nop
stos
out
dec
push
push
gs
xchg
std
cltd
inc
jmp
or
iret
stc
or
pop
sti
xor
sub
fabs
adc
dec
mov
ss
je
daa
xchg
sarl
xor
lods
shll
mov
mov
out
adc
xor
imul
aaa
in
push
aam
ret
ffree
push
aaa
cmp
and
cld
push
cmp
add
ret
cmp
js
rcll
fisttps
clc
outsb
xorb
mov
pop
cltd
jp
fwait
rorl
inc
das
jne
and
and
inc
jno,pn
mov
sub
pop
dec
test
imul
push
inc
or
mov
cmc
fisubs
int3
adc
pop
adc
sub
push
ljmp
and
fiadds
stos
dec
or
mov
sbb
inc
mov
test
test
or
sub
js
dec
std
xchg
add
pop
inc
inc
out
or
jno
pop
pop
lds
pop
lods
cmp
scas
xchg
imul
sub
std
stc
lock
loop
insb
pop
ret
mov
cmpsl
push
scas
push
not
hlt
xor
mov
push
inc
add
add
imul
dec
jno
pop
dec
sub
in
sub
out
dec
popf
adc
movsl
clc
int3
int3
ret
cli
movsb
outsb
mov
cltd
fsubrs
leave
sub
movb
cmp
fs
xor
hlt
inc
fmull
or
leave
rorb
xor
pop
xchg
push
ret
dec
sbb
outsb
scas
sub
js
xchg
cmp
inc
sub
ljmp
mov
push
and
jp
enter
add
bound
and
test
out
push
aaa
ja
cli
sub
add
jno
shlb
jecxz
add
adcb
rcrb
aad
enter
lods
mov
xlat
gs
js
std
lret
sti
imull
add
sub
pop
clc
int3
mov
repz
incl
xor
stos
pop
push
cmpsb
test
popf
mov
push
icebp
add
lret
jb
test
std
idivb
jmp
sbb
sbb
sub
add
mov
sbb
test
into
popw
lods
in
mov
add
mov
and
pop
addl
shl
adc
cmpsb
xor
add
pop
add
inc
push
mov
xor
xor
jecxz
xchg
add
inc
jae
lahf
clc
pop
shll
cltd
hlt
push
in
gs
mov
lods
pop
add
les
mov
pop
sahf
lods
fcoms
scas
mov
push
call
nop
jnp
sti
mov
loopne
inc
lea
or
dec
inc
pop
loope
test
outsl
mov
pop
ret
pop
or
incb
hlt
jb
movsl
stos
sub
and
jmp
insl
inc
jbe
mov
jmp
cmp
lahf
imul
insb
mov
mov
fs
mov
jge
cltd
and
loope
jg
jae
jp
sub
or
xchg
stc
xchg
mov
aad
and
pushf
cmpsl
fstps
add
jle
repnz
mov
sbb
sahf
stos
ror
ret
sbb
push
dec
xor
cmc
pop
mov
adc
ds
add
aas
lret
in
mov
push
lcall
cwtl
push
test
out
sbb
jle
jno
rorb
and
movsb
aaa
add
xchg
jbe
in
sbb
push
rorb
mov
fsubp
add
push
out
les
pop
or
fwait
jne
cmp
push
inc
jnp
xchg
rcrl
dec
aaa
dec
mov
cli
ljmp
jge
or
adc
sbb
mov
int
in
int
fwait
jno
dec
add
jnp
fisttpll
sub
jle
fmulp
stc
push
adc
sbb
shlb
pop
lds
mov
out
jo
scas
dec
xchg
stos
movsb
das
roll
test
mov
cmpsl
push
push
pop
stc
mov
dec
fidivrl
loopne
popfw
mov
jmp
aam
sub
jnp
cwtl
cli
push
mov
fcomip
mov
cwtl
aaa
rol
adc
jae
sub
cmpsb
xchg
fs
add
lods
lahf
xchg
out
xchg
inc
cmpsl
push
scas
popa
mov
in
or
adc
or
pop
jo
inc
ret
daa
xchg
dec
mov
lock
cmp
or
dec
outsb
cmpsb
cmp
adc
pop
gs
icebp
idiv
imul
xor
xchg
lea
dec
push
mov
test
pop
dec
push
and
mov
aad
cld
fildll
mov
dec
icebp
cwtl
popa
xor
dec
fildl
adcl
push
jg
cmc
test
aam
add
xor
jae
bound
das
inc
stc
cmp
jmp
aad
lahf
add
ss
sub
mov
and
js
hlt
and
out
lahf
daa
sbb
fisubl
and
jne
notl
je
sbb
jae
sbb
dec
les
mov
xor
xchg
icebp
call
xor
lea
jmp
sbb
inc
cmc
sbb
add
lds
jp
pop
dec
std
insb
pop
arpl
jno
sub
rcrb
jge
adc
dec
mov
lods
cmpsl
inc
sti
negb
lods
testb
or
add
add
pavgb
or
inc
iret
jge
push
in
inc
push
and
into
and
fildll
mov
pop
cld
ret
mov
sbb
test
pop
cwtl
jns
xchg
inc
test
or
scas
pushf
xor
inc
vmovhpd
loope
jle
daa
fisubl
add
mov
mov
test
hlt
or
dec
jnp
sub
insl
pop
mov
push
call
and
ret
push
xor
mov
pop
push
mov
jnp
xor
add
scas
and
mov
mov
test
mov
xchg
gs
mov
and
adc
nop
das
push
inc
push
mov
and
jo
mov
mov
jnp
mov
cmp
xchg
adc
das
mov
lret
push
popf
cmc
jg
fidivl
addl
dec
cli
out
fsubrs
mov
mov
imul
and
mov
icebp
jl
or
add
ljmp
shlb
fimull
inc
cmp
adc
pop
sarl
and
mov
scas
ljmp
inc
movsb
insb
mov
sub
dec
gs
inc
pop
xchg
call
xchg
in
and
stos
pop
mov
sti
xchg
fs
pop
sti
and
jmp
es
imul
clc
stc
add
popf
dec
or
dec
out
inc
arpl
sub
imul
stos
dec
clc
and
or
xor
int3
dec
in
cwtl
inc
jae
popa
pop
push
nop
xor
adc
pop
fcompl
dec
iret
mov
sub
cwtl
xchg
mov
mov
call
xor
push
xor
mov
inc
mov
jge
xchg
jp
scas
bound
push
adc
sarl
inc
daa
sbb
pop
sbb
dec
jns
ss
arpl
mov
push
add
push
gs
push
dec
int
dec
or
psubw
rol
fdivrs
enter
inc
arpl
into
gs
dec
mov
sahf
jle
aaa
repz
enter
mov
fcom
mov
xor
sub
fisubrs
inc
xchg
movsb
jnp
fucomip
xor
es
stos
cmpb
sahf
into
nop
or
lcall
jg
add
out
and
in
push
and
inc
aas
ja
subl
sarb
daa
inc
adc
dec
lea
jecxz
sbb
adc
mov
cmp
and
mov
jne
or
push
sub
fsubs
jecxz
aad
sbb
out
repz
xor
addr16
xor
faddl
mov
cwtl
mov
subl
cmpl
fnstsw
aam
adc
or
outsl
adc
popa
sbb
mov
clc
lret
cmc
call
loopne
add
mov
cmp
inc
xchg
into
lock
xor
xchg
mov
adc
sbb
insb
lsl
data16
in
jb
insl
dec
rcrb
out
mov
movsb
adc
jl
aam
repz
fldlg2
call
or
mov
sub
call
cmp
cmp
mov
mov
mov
jne
dec
fsubrl
scas
jmp
mov
xor
pop
ret
add
xchg
dec
idiv
sahf
out
or
and
mov
add
push
pop
add
mov
cmp
fcom
adc
jecxz
aaa
xchg
fldenv
adc
ret
lahf
iret
out
adc
sub
call
mov
int3
in
and
add
cmp
das
aam
pop
push
mov
sbb
push
fbstp
push
es
mov
clc
popf
and
in
imul
sbb
pop
adc
sbb
testl
test
or
add
test
rol
xchg
into
mov
stos
mov
cmpsl
xor
xchg
rorl
mov
jg
add
pop
and
mov
mov
xor
test
mov
loopne
xor
hlt
hlt
mov
jecxz
outsl
inc
add
daa
rorl
popa
inc
ret
aas
jl
or
out
shlb
push
out
xor
je
das
push
fs
lea
inc
jbe
push
or
sub
sbb
shll
jg
cmpl
dec
lret
cmp
ljmp
jo
xor
and
pop
jne
clc
mov
sub
test
push
mov
push
sahf
gs
xlat
pop
mov
adc
and
popa
aas
out
mov
test
mov
inc
jge
push
js
jle
jp
sub
repz
in
adc
frstor
inc
xor
jae
fstps
jmp
cmpsb
mov
dec
xchg
imul
dec
fisubs
or
insl
inc
sub
adc
dec
out
mov
lahf
or
movsb
aaa
pop
fcmovb
iret
popf
fisttpll
ficompl
gs
mov
mov
fidivrs
mov
es
adc
addl
push
enter
shlb
insl
xor
fsubrl
pop
decb
orl
flds
sbb
jg
xchg
jp
add
dec
sub
dec
jo
push
test
cmp
mov
mov
cmp
push
es
push
push
jp
pop
cmp
lods
in
jmp
fdivl
mov
pop
sub
xchg
add
out
mov
jp
dec
pushf
and
xor
and
or
mov
ret
jmp
lret
push
or
mov
punpcklwd
rclb
int3
roll
and
mov
add
aaa
popa
adc
cmp
imul
mov
stos
hlt
daa
sbb
mov
repnz
cmpsl
imul
mov
ja
cmp
std
sub
repz
sbbb
jle
call
mov
mov
cmp
ss
lock
test
popa
scas
or
mov
dec
dec
sahf
aad
inc
int
shrb
cld
jmp
movsl
std
vsqrtps
out
repz
das
push
push
shrl
and
pushf
add
push
or
in
movsl
or
push
adc
xchg
dec
arpl
inc
imul
push
xchg
and
aas
js
inc
inc
jno
xchg
ds
mov
jb
nop
cltd
sbb
ret
fsubs
xchg
and
cmpb
xchg
pop
movsb
insl
lock
cmp
lahf
popa
inc
mov
pop
push
test
sub
xchg
jns
jae
sbb
and
jl
lret
push
fmull
int3
aad
test
xchg
jae
push
push
mov
xorb
mov
sti
shlb
rcrl
cmp
sbb
loop
inc
pop
jo
and
jnp
orl
sbb
jg
outsb
pop
or
icebp
or
jo
mov
add
mov
mov
xchg
add
jl,pt
clc
fcomps
push
out
sar
push
sbb
lods
gs
pop
stc
lahf
in
jecxz
or
add
mov
lcall
js
adc
pop
pop
fsubp
daa
push
mov
mov
mov
adc
mov
fstl
dec
and
lahf
mov
jne
cltd
outsb
push
mov
push
inc
rorb
enter
mov
add
xor
sub
pop
cs
push
movsb
iret
lds
enter
xor
out
ficoml
les
inc
jg
repz
cli
arpl
lock
mov
rcrb
jg
aas
shrl
inc
lret
ja
jg
mov
sbb
adc
mov
inc
xchg
pop
decb
and
add
icebp
jae
icebp
xor
push
sahf
add
rcrl
ss
dec
popa
test
or
inc
mov
out
iret
inc
lods
push
sbb
sahf
sti
lret
sahf
mov
push
popa
mov
jae
mov
cmp
sub
in
jl
sbb
or
push
mov
xchg
add
mov
xchg
sub
and
hlt
sub
es
ret
jl
push
jmp
xor
fidivl
ss
in
aam
or
push
popf
out
mov
pop
cli
shrb
mov
mov
shlb
sbb
push
lret
jge
cwtl
mov
loope
aas
mov
mov
xor
repnz
aaa
mov
xchg
call
stos
and
cmp
pop
stc
push
lock
data16
xchg
inc
sbb
bound
inc
fmuls
jnp
test
pop
mov
decb
inc
jge
lret
mov
test
adc
xor
sbb
fisubrs
roll
mov
loope
lahf
in
div
subb
data16
pop
xchg
fwait
sbb
into
rorl
pop
lret
add
fmull
dec
dec
pop
sbb
popf
lahf
idivb
pop
pop
std
dec
stos
out
cmp
popa
mov
lret
test
push
pop
pop
mov
div
sub
push
call
in
and
daa
or
xor
pop
pop
arpl
into
pop
test
cmpsb
cmp
loopne
mov
jmp
jo
shlb
mov
outsb
or
enter
jbe
mov
ljmp
aas
push
sti
int3
ret
add
dec
push
repnz
dec
mov
out
lds
pop
fsubl
and
ss
push
mov
imul
adc
outsb
pushf
push
mov
and
test
adc
pop
scas
inc
syscall
xorb
insl
nop
xlat
jg
inc
jmp
push
jecxz
jp
pop
cmp
pop
das
lahf
inc
dec
push
sti
push
sub
fwait
add
fwait
sub
cmp
push
iret
data16
lock
push
jmp
lretw
jl
out
xchg
icebp
mov
out
aad
adc
xchg
add
pop
add
rcll
xor
mov
xchg
cmc
sbb
jb,pt
sub
mov
jmp
fs
lds
outsb
sub
mov
cmp
mov
or
in
cld
mov
test
loop
lods
or
cmp
dec
inc
mov
jns
dec
int
xchg
pusha
fsts
pop
int3
jae
mov
in
lret
les
add
setb
push
loope
cmp
cwtl
popa
leave
jecxz
call
and
xor
cmp
push
mov
std
shlb
test
sub
push
xchg
sbb
mov
jp
or
pushf
aaa
xchg
xchg
sbb
lret
push
xchg
lret
lahf
lgs
mov
sbb
rcr
imul
std
sahf
or
jns
packsswb
rclb
pop
inc
popa
lahf
outsb
repnz
vdivps
mov
fwait
xchg
popa
inc
fiadds
push
mov
in
xor
hlt
mov
loopne
jmp
jo
pusha
sub
mov
inc
adc
sbb
imul
sbb
les
pop
mov
ficomps
inc
sub
fiadds
pop
shll
les
and
movsb
mov
lret
add
out
cmp
mov
aas
or
sbb
cs
pop
pushf
xchg
repz
xlat
add
adc
push
sbb
ret
lods
sbb
lcall
cmp
lea
xchg
rcll
loopne
xor
nop
dec
dec
sbb
jae
leave
cmp
cmp
xchg
mov
cmp
jb
aas
sbb
fisubrs
sub
nop
icebp
mov
jl
push
outsb
in
pop
mov
arpl
cmp
pop
cmpsl
loop
inc
jno
aas
fdivl
mov
orb
pop
mov
mov
and
rorb
addr16
rsqrtps
jmp
and
es
push
pop
sbb
xchg
and
push
lock
fidivrs
ret
add
int
fcmovb
in
xor
fistpl
icebp
call
jo
jne
cmp
addr16
add
inc
pop
jne
inc
xchg
adc
adc
and
xor
cmp
pop
dec
iret
or
fcmovnb
outsb
add
adc
jbe
loop
jb
sti
fiaddl
pop
cmp
cmp
scas
sbb
xchg
sbb
pop
or
and
mov
adc
xchg
jno
in
xchg
je
movsb
fwait
lahf
das
mov
xor
adc
dec
pop
adc
imul
inc
sub
outsl
idivl
fisubrl
in
add
std
inc
inc
repz
add
sbb
add
out
lcall
clc
in
pop
outsl
enter
mov
xchg
mov
lods
jb
out
sbbw
sti
pop
stos
xor
popa
lods
and
addr16
std
mov
or
dec
repz
xchg
dec
mov
out
repnz
mov
aaa
push
lcall
rcrb
icebp
sti
inc
aas
fldenv
ja
int
aad
test
xlat
pop
or
or
ret
cmp
xchg
inc
mov
mov
adcl
roll
pop
scas
pop
dec
add
insb
clc
pop
stos
movsl
movb
dec
cld
cli
cmp
jne
iret
push
lods
pop
ds
out
scas
push
push
int
jp
shrl
mov
sub
push
dec
mov
aad
cs
out
or
in
mov
mov
jne
jnp
hlt
inc
mov
inc
outsl
les
sub
mov
fs
or
sub
xor
pop
cmp
xchg
inc
and
xor
adc
sarb
push
add
std
sbb
pop
rol
in
jle
orb
jl
dec
push
int
loop
lret
loop
jle
sbb
pop
pushf
jge
out
in
adc
jg
daa
cmp
and
lock
faddl
outsb
shll
movsl
jle
pop
pop
andb
fisubrs
sbb
pop
lock
shll
ficomps
dec
mov
rcrl
push
inc
and
nop
mov
inc
mov
test
fdivs
fs
add
jg
sub
lock
fdivrl
jnp
ja
and
xor
add
push
shll
mov
xchg
push
lods
test
push
outsl
pop
dec
lods
cmp
adc
pop
jb
lods
lods
pop
xchg
sbb
ljmp
pusha
mov
sub
xchg
adc
xchg
and
adc
stc
mov
inc
push
leave
push
enter
aaa
cmpsb
fbstp
pop
pusha
pop
xchg
test
push
lahf
mov
aam
pop
clc
scas
les
pop
mov
push
cmpsb
fadds
rorl
and
popf
mov
cs
sbb
in
add
and
cmpsb
lods
out
out
test
pop
add
out
adcl
push
mov
xor
dec
into
sub
pop
out
inc
xor
test
or
mov
dec
iret
enter
pushf
mov
call
adc
nop
in
jl
addr16
jge
push
jno
dec
ret
mov
jl
adc
scas
adc
jnp
sub
push
std
sbb
dec
or
ljmp
call
mov
push
adc
pop
push
test
iret
mov
mov
pop
ret
mov
or
cli
sbb
stos
pop
repnz
jecxz
lock
xor
lea
dec
pop
popa
cmpsb
sbb
insl
push
inc
jg
sahf
pop
xor
lret
clc
andb
pusha
fadds
xor
movsl
jns
aas
adc
lret
lds
sub
mov
orb
xchg
es
sti
xor
insl
fcoml
fsubrs
stos
test
int
cmp
clc
cmpsb
sbb
fildll
insb
aaa
push
adc
nop
scas
imul
cmc
dec
out
push
lret
cltd
lea
sub
js
jns
or
shll
mov
and
add
mov
in
add
cmp
ljmp
push
mov
mov
jae
mov
lods
dec
sbb
les
insl
cmp
mov
jecxz
push
xchg
add
ret
pop
pusha
repz
leave
out
inc
xorl
cmp
lock
add
add
loopne
mov
aas
stos
in
fdivrs
sbb
mov
add
push
pop
add
xor
shrl
jmp
movsb
adc
stc
dec
dec
out
sub
pop
mov
hlt
test
or
add
std
lea
sbbl
test
xchg
pop
int3
insb
xor
pop
int
jl
bound
mov
pop
mulb
out
pop
hlt
imul
push
and
ffreep
pop
pop
sbb
dec
push
xor
mov
dec
fucom
clc
jl
cmp
gs
shrl
and
test
sbb
stos
lea
inc
add
aaa
adc
int
push
lods
or
adc
int3
js
shl
addr16
cs
fistpll
outsb
lret
in
dec
hlt
rcrl
pop
add
sub
or
int
mov
in
push
sub
shlb
aas
ljmp
and
fisttps
push
test
sti
push
ja
hlt
ljmp
out
aas
jns
es
jg
test
push
ljmp
sub
adc
mulb
mov
mov
js
int
jg,pn
mov
xorb
out
pusha
push
dec
jo
jo
cltd
das
xlat
pop
bndstx
mov
int
pop
hlt
mov
push
pop
adc
and
cmc
sbb
scas
dec
testb
sbb
xor
ljmp
or
mov
cmp
xchg
scas
leave
daa
dec
pop
addr16
jp
mov
push
fcom
sbb
notl
outsl
or
iret
or
xchg
lretw
icebp
push
xchg
sub
jno
data16
mov
fwait
cld
mov
lods
push
aam
insb
insl
mov
ds
les
into
mov
push
lock
scas
and
push
push
ss
and
loope
das
dec
xchg
lock
push
inc
ret
xor
shrl
movsl
ds
fs
mov
in
push
mov
mov
cmp
test
cld
sub
push
sbb
sar
scas
in
stc
mov
dec
adc
ret
add
pop
push
hlt
out
dec
rolb
ret
cmp
outsb
push
mov
pop
loope
jl
cmpsl
mov
push
inc
into
test
or
xor
adc
leave
xchg
ljmp
mov
fcoms
lcall
xchg
mov
and
lock
jg
adc
dec
insb
add
dec
sbb
iret
inc
daa
add
mov
incl
pop
mov
loop
adc
inc
xlat
in
in
es
pop
nop
gs
inc
push
aaa
sbb
les
lea
push
scas
testl
mov
inc
jl
pop
gs
cmp
adc
mov
jne
int
movq
lods
leave
xchg
arpl
fsubl
iret
push
pop
into
jecxz
test
xchg
and
mov
push
mov
cmp
add
mov
decb
xchg
insb
xor
scas
rclb
inc
stos
mov
jge
sbb
push
in
das
or
and
push
add
adc
and
jae
rorl
mov
icebp
inc
rcl
rcrb
adcl
jecxz
xchg
nop
fists
push
mov
push
mov
inc
jl
call
inc
xor
dec
adc
js
jle
aaa
js
push
mov
add
adc
scas
xor
lock
sbb
cmovs
fs
xchg
adc
jg
and
cmp
lock
ds
ja
sub
movsb
and
xor
fdivp
push
push
scas
pop
add
pop
push
jb
lret
and
stos
je
rol
hlt
pop
pushf
inc
mov
push
cmc
aaa
mov
adc
dec
nop
cmpsb
jmp
cmc
adc
imul
sub
add
pusha
mov
mov
cli
loope
loop
and
pop
xchg
imul
fsts
sbb
sub
inc
xor
or
jl
jno
stc
inc
gs
aas
xchg
fcmove
sahf
imul
pushf
nop
fstpl
loope
jle
sarl
lods
aad
or
inc
loopne
jb
lcall
fistpll
or
and
fstl
repnz
and
jmp
xchg
sub
pop
lods
add
inc
loope
sarl
adc
jns
xchg
leave
leave
cld
add
jns
xchg
push
inc
jle
adc
pusha
or
scas
int3
insb
push
inc
push
pop
jl
sbb
mov
mov
out
fidivs
xchg
test
xlat
out
jnp
sub
inc
test
xor
xor
sti
iret
jae
mov
ss
test
lock
jbe
sahf
test
dec
push
cmp
loope
xor
std
andl
shrb
lds
cmp
fidivl
mov
in
jg
rcrb
jb
aaa
jle
test
mov
ljmp
push
inc
and
jae
push
mov
mov
shl
sub
or
lcall
inc
cmpsl
jmp
xor
pop
and
xchg
aam
xchg
movsl
jg
jmp
faddp
inc
mov
fistpll
imul
pop
or
or
pop
mov
adc
jae
dec
sti
pop
mov
fwait
xchg
adc
cmp
aas
cmp
test
sbb
ss
stc
mov
imul
pop
stos
imull
adc
xchg
lods
sarb
loopne
cmp
and
std
fsubrl
xchg
bound
add
loop
add
push
aaa
pop
mov
mov
dec
pop
inc
aaa
ret
mov
and
mov
lds
cmp
data16
insb
add
subl
dec
push
cld
dec
scas
insb
push
idivb
mov
inc
mov
pop
iret
lock
lret
and
mov
jmp
loope
xchg
adc
mov
sbb
jecxz
mov
clc
lods
popf
push
insb
popf
bound
iret
mov
ret
rcr
jecxz
sbb
leave
sahf
ret
aaa
bound
fistpll
inc
roll
mov
xor
dec
cmp
icebp
mov
iret
dec
imul
jle
mov
jb
pop
test
sub
pop
pmullw
and
pop
dec
sub
fdivl
movsb
dec
sahf
add
enter
or
adc
fcomp
cwtl
hlt
dec
rcrl
dec
or
jl
mov
insl
or
mov
mov
xlat
mov
shl
ds
testb
push
pop
add
jae
inc
xlat
ja
or
sub
and
add
cmp
call
mov
flds
aas
xchg
mov
pop
movsl
popa
sbb
mov
insb
cmpsb
mov
dec
lcall
cmp
adc
dec
movsb
hlt
popf
mov
in
iret
mov
mov
lods
aam
daa
cmp
dec
cmp
dec
or
push
test
loopne
fistpl
mov
insl
inc
shl
or
jae
jge
mov
cwtl
repnz
mov
adc
jae
jmp
cld
cmp
jns
fildll
adc
xchg
pop
push
shl
lods
push
add
inc
aad
insl
lret
sbb
jle
ret
pop
and
fisubs
mov
mov
cmpl
inc
stos
sbb
in
shlb
mov
dec
xor
cld
mov
popf
int
adc
out
jecxz
push
or
lcall
inc
out
loopne
cwtl
push
cmp
adc
aas
rcll
incl
jg
xchg
lds
cmc
cmp
sarb
sub
mov
negl
rolb
or
xchg
push
cmpsl
xlat
test
fsts
dec
add
and
adc
cmp
incl
pop
fisubl
clc
push
pop
call
and
or
mov
outsl
dec
icebp
fcmove
cmp
dec
addl
jle
lret
loop
mov
std
clc
sahf
or
mov
sub
es
xor
mov
lods
jnp
lock
pop
popa
and
dec
pop
sub
push
in
lods
jo
mov
test
loop
and
shll
push
dec
ficomps
inc
jb
xchg
push
sub
scas
fwait
stos
inc
inc
mov
jbe
lcall
test
add
adc
pop
pop
push
jp
inc
jne
sbb
sbb
sub
or
dec
push
xchg
add
clc
push
mov
and
cwtl
add
pop
aad
jno
je
repz
add
dec
pinsrw
arpl
mov
popf
push
mov
cmpsb
and
push
push
enter
movsb
lret
xor
jbe
frstor
outsl
mov
shrl
leave
pop
repz
sar
inc
jae
out
dec
clc
out
mov
sub
out
test
mov
mov
lcall
aas
test
adc
pop
inc
sbb
sub
out
jb
pushf
lock
aam
into
dec
or
lods
int3
dec
outsb
jbe
push
int
or
jb
shr
inc
aaa
out
cld
movsb
push
cmp
lock
ret
call
jne
xor
mov
sub
sbb
sub
adc
je
mov
and
das
movsb
repnz
mov
mov
xor
sbb
aam
and
ljmp
idivb
xor
into
stos
mov
jb
sbb
mov
out
push
sbb
ds
rolb
sbb
loope
clc
xlat
movsb
addr16
sarl
lcall
in
push
ljmp
mov
lods
jmp
jae
testb
push
mov
je
pop
stos
or
rcrb
push
push
filds
adc
fwait
lret
or
negl
inc
stc
mov
inc
cld
jnp
int
cmpsl
out
ljmp
ja
cmc
or
sub
pop
xor
das
inc
shlb
push
mov
iret
fadds
cli
mov
dec
cmp
jns
push
jp
push
mov
mov
cwtl
xor
adc
rcll
cwtl
inc
pop
adc
lods
mov
pop
mov
and
out
dec
cmp
xchg
pushf
mov
outsb
mov
or
aam
je
add
stc
loop
cmpsb
insb
in
cmp
enter
popa
inc
xchg
stos
fcomps
imul
ret
ret
cli
jg
pop
scas
pushf
jge
test
inc
mov
scas
xor
adc
sub
add
push
xlat
adc
sarl
cli
mov
filds
xchg
cmp
dec
pushf
sub
ret
adc
in
ret
mov
ja
pop
andl
mov
lahf
dec
lret
jg
or
add
xlat
jnp
dec
push
out
pop
and
lahf
xor
adc
mov
adc
pushf
testb
and
mov
sub
mov
mov
test
sub
xor
pop
mov
popa
enter
dec
aaa
das
stos
sbb
and
stos
int3
imul
adc
repz
jo
xchg
push
adcb
jae
sub
fbld
mov
xchg
lea
hlt
cld
sub
notl
push
mov
sub
imul
aad
sbb
or
cmpsb
iret
insl
enter
enter
mov
sahf
leave
and
mov
ljmp
arpl
mov
xchg
ficoms
icebp
jo
mov
xchg
out
pop
cld
mov
mov
sti
shlb
out
dec
pop
nop
out
fistps
call
icebp
xor
in
xlat
cwtl
nop
aam
sbb
mov
fildl
inc
add
call
pop
pushl
aas
and
int
jecxz
imul
xlat
mov
icebp
push
leave
pop
hlt
push
leave
mov
lret
lock
movsl
insl
ss
pop
fmul
mov
mov
testl
jbe
call
sbbb
rcll
dec
lahf
fidivrl
cwtl
dec
shrb
mov
lds
inc
dec
js
sbb
or
sub
mov
cltd
mov
sbb
mov
pop
xor
cltd
xchg
cmc
push
jb
cmp
pop
icebp
mov
rcll
inc
ret
push
inc
lahf
sbb
xchg
cmp
into
or
arpl
imul
mov
pop
aad
ds
stos
jbe
ret
and
sub
stos
sub
cli
push
mov
adc
adc
les
sti
cmpsl
mov
inc
call
add
mov
fildll
ljmp
push
test
push
out
and
jns
mov
dec
data16
dec
test
out
or
mov
cmp
or
rorl
or
push
lret
mov
call
push
lea
arpl
addb
add
push
pop
mov
pop
es
loop
dec
fiaddl
add
pop
add
repnz
fs
mov
adc
stos
out
jmp
lret
loopne
das
movsb
mov
sbbb
mulb
hlt
data16
sbb
mov
pop
loop
fs
shlb
and
jb
cmp
and
int
ret
add
or
call
leave
das
mov
adc
dec
xchg
roll
insl
push
add
mov
mov
movsl
cmp
mov
fs
dec
test
shrb
inc
cmp
lods
out
adc
or
insb
loop
ja
loop
mov
sbb
sub
inc
mov
mov
ret
push
and
mov
cmp
fcoms
lods
icebp
xor
pushf
mov
loopne
fincstp
lock
cmc
lret
and
cmp
jns
lods
leave
int
lea
xchg
andl
xchg
rcrl
cmp
push
cmp
dec
jp
rorl
pop
insl
cwtl
adc
or
xchg
pop
pop
dec
and
jae
adc
fnstenv
jmp
in
push
and
orb
nop
cmp
adcl
mov
sub
sbb
lods
jno
sub
pop
icebp
dec
push
popa
adc
lcall
bound
or
aam
mov
mov
sub
jl
or
sbb
outsl
int
add
lcall
loopne
xor
imul
mov
iret
sub
pop
jl
inc
push
cmp
rorb
cmpsb
outsb
sbb
mov
fs
in
lret
cmp
mov
sub
xchg
xchg
mov
shrl
movsb
xchg
xchg
lret
jle
mov
mov
pop
mov
sahf
inc
cmp
jg
es
orb
fldt
add
fldt
aam
sbb
movsl
aaa
fiadds
and
mov
movsl
je
dec
fisubrl
xor
or
push
ss
call
imul
xchg
ret
test
mov
xor
and
and
imul
push
or
lahf
xor
movsl
cs
ret
int
stc
pop
notb
sbb
mov
fcmovnu
dec
xor
jbe
leave
fdivl
lods
add
std
fcmovu
fstps
faddl
movsb
lods
xchg
fmul
in
data16
sbb
mov
popf
clc
inc
xchg
insl
subl
clc
add
mov
or
enter
mov
insb
ds
sti
jb
add
lcall
data16
jnp
mov
mov
or
jge
mov
mov
xchg
fidivrl
sub
pop
push
dec
xchg
inc
push
cltd
loope
lea
in
lods
cmp
push
or
xchg
dec
cwtl
out
shll
testl
cmpsl
or
leave
jb
out
add
add
in
scas
push
sarb
hlt
jno
add
push
adc
lock
fiadds
sbb
rolb
out
xor
mov
xor
lds
setno
push
das
cmpsb
cmp
push
xor
aas
or
mov
leave
mov
inc
movsb
lods
loopne
mov
out
adc
mov
int3
dec
rol
pop
xchg
ljmp
xchg
ret
and
jmp
repnz
cmp
mov
or
outsb
aaa
dec
aas
sub
jae
cltd
sub
js
into
xchg
dec
xchg
nop
daa
test
nop
add
or
std
sub
cmp
mov
sub
aad
insl
mov
daa
xor
push
inc
mov
arpl
mov
cmp
das
mov
ss
or
push
push
insl
insl
scas
les
shll
gs
imul
movsl
sbb
xor
dec
dec
add
mov
push
cmp
cmpsl
lock
sbb
ror
nop
add
shll
or
insb
imul
jae
and
and
and
sbb
scas
xchg
sbbb
test
sub
fwait
mul
adc
fstps
jl
hlt
testb
lods
push
inc
jle
dec
js
mov
je
mov
addr16
sahf
addr16
jbe
lahf
xchg
sbb
sbb
sbb
fadds
sbb
movsb
lods
add
cmc
add
mov
xor
and
xor
lcall
jg
in
lods
inc
stos
hlt
pop
pushf
insl
lock
mov
in
imul
daa
cmpl
insb
inc
lods
xchg
je
leave
idivb
cwtl
cltd
addr16
sti
jle
add
jle
cs
push
ss
mov
adc
cmpsl
popf
and
push
push
sub
arpl
fstps
push
dec
fistl
fiadds
and
ds
mov
lahf
fidivrs
stos
jle
rcll
movsb
xor
mov
insl
pushf
jne
xchg
mov
mul
adc
cmp
cli
leave
ret
shl
mov
mov
test
sbb
out
push
lds
sub
inc
popf
cmp
test
pop
decl
push
adc
jmp
push
and
jnp
insb
rorb
lcall
pushf
cmp
clc
fidivl
lcall
mov
and
push
stos
out
aas
jl
in
adc
jl
cmp
insl
pop
sub
fdivrl
idivl
push
push
mov
and
aaa
lcall
mov
es
clc
sbb
xor
adc
sub
adc
enter
adc
mov
adc
xchg
cwtl
jl
push
or
sarl
popf
cld
mov
xor
hlt
dec
bound
daa
sub
fisubrl
lods
shlb
arpl
loopne
pop
push
enter
inc
add
daa
test
inc
sub
push
sub
sbb
sti
inc
and
mov
lods
rorb
das
mov
cwtl
sub
mov
lea
rorl
mov
scas
mov
cmp
test
mov
inc
fdivl
imul
sub
popfw
push
adc
les
sub
cli
hlt
mov
mov
loopne
add
sbb
mov
addb
mov
iret
scas
or
lods
pop
lods
jns
xchg
or
jne
xchg
sub
repnz
rol
fcoml
out
mov
sbb
xchg
cli
imul
add
add
add
mov
push
loopne
jno
dec
add
push
pop
add
push
adcl
addl
pop
shll
xor
dec
enter
xchg
jmp
fsubrl
ds
aam
cmp
fistpl
pop
push
test
cmp
inc
xor
fcoml
jle
sub
pop
ret
test
andl
push
daa
add
cwtl
push
and
push
lods
jle
int
sbb
in
jo
inc
or
xchg
aaa
iret
add
lods
push
sahf
shrl
repnz
mov
sub
into
and
and
pusha
fcompl
leave
out
pusha
mov
fildl
cmp
mov
pop
push
xor
mov
inc
xchg
aaa
xchg
inc
push
scas
pop
push
fdivrl
ss
and
repnz
fidivl
fstpt
clc
sbb
call
pusha
jne
cmp
jns
adc
dec
inc
outsl
jns
cmpsb
xchg
fisttpl
push
faddp
jne
adc
scas
hlt
inc
movsl
dec
mov
pop
bnd
into
pop
imul
xor
packuswb
je
cmp
or
loop
xchg
sti
mov
adc
dec
pop
mov
jo
stos
sbb
xor
jbe
stos
mov
mov
out
dec
cltd
mov
and
test
mov
scas
jmp
mov
adc
sbb
xlat
mov
js
adc
dec
cmp
dec
pop
sub
nop
jns
xor
mov
xchg
inc
ss
int
and
sbb
mov
push
clc
paddusw
add
mov
mov
adc
sub
sti
xchg
mov
lret
add
mov
shrb
xchg
push
dec
dec
sbb
cs
les
out
ljmp
shr
pop
cmp
jl
xchg
sub
andl
icebp
mov
push
arpl
jne
enter
int3
icebp
push
fdivp
clc
cmpsb
inc
xchg
jo
push
push
and
mov
cs
jne
mov
and
ficoml
int
jnp
dec
sti
scas
enter
or
divl
inc
jg
cmc
call
shr
mov
jecxz
cmpsl
lea
pop
and
cli
addr16
mov
pop
jge
push
push
xlat
into
mov
adc
out
lcall
mov
mov
and
mov
mov
jl
cmp
jecxz
lods
mov
lds
push
fcompl
mov
in
push
inc
and
pop
xor
jmp
mov
cmp
and
lret
sahf
gs
lret
insb
push
in
sbb
or
cmp
cwtl
arpl
adc
sbb
pop
in
stc
xor
negb
inc
push
imulb
roll
mov
aas
sub
jle
adc
sbb
std
lret
icebp
adc
jp
sahf
sbb
nop
or
cmp
js
or
test
jl
shlb
cltd
lcall
lret
jmp
aaa
loope
out
dec
es
andl
mov
stos
sbb
mov
dec
nop
jmp
push
insb
fnstenv
sbb
cmp
sarb
mov
jnp
add
xchg
xchg
fisubs
js
fwait
aad
popf
xor
adc
mov
mov
sub
push
xor
imul
ret
mov
inc
add
cmpsb
imul
mov
scas
fs
enter
mov
fisttpll
mov
xor
mov
and
sbb
sahf
and
arpl
out
lds
push
das
cmpl
test
or
pop
stos
js
xchg
rolb
push
add
inc
nop
shlb
dec
xorb
push
clc
aaa
cmpb
jecxz
lea
mov
pop
or
cmpsb
pop
cmp
outsl
call
cwtl
addr16
daa
in
pop
loopne
mov
jb
xchg
movsl
push
sub
repz
jae
ljmp
insb
mov
scas
mov
adc
xor
rorb
push
ds
shll
ret
sbb
pop
jbe
and
mov
cmp
add
sbb
les
fs
repz
or
mov
stos
push
push
cmp
mov
inc
sarb
or
xchg
icebp
push
push
xor
addr16
or
mov
inc
xchg
clc
xchg
cmp
cmp
add
mov
addr16
cmc
notb
push
push
mov
rorb
inc
lret
dec
or
xor
loopne
int3
xchg
push
or
inc
xlat
lea
cmp
int3
jp
push
cmp
lahf
push
cmpsl
sub
mov
pop
cltd
insl
stos
mov
jge
dec
ficomps
and
fdiv
imulb
pop
push
inc
std
lods
fbstp
jge
repz
shlb
cmpl
mov
popa
mov
fisttpll
fsubs
pop
add
mov
push
inc
and
dec
pop
icebp
inc
xchg
leave
adc
adcl
or
clc
cmp
sarb
inc
and
pop
fimull
jae
and
mov
add
inc
and
loope
call
add
cmpsb
pop
jno
mov
add
or
fs
add
xchg
bound
icebp
imul
pop
adcb
pop
xchg
push
add
dec
inc
xchg
jo
paddb
mov
dec
dec
ds
sti
and
fsts
inc
cmp
notb
shr
mov
and
cmp
ja
mov
sbb
or
clc
stc
xchg
pop
mov
and
scas
icebp
sti
insl
and
ficompl
rclb
push
add
push
push
pop
xor
cli
lock
sub
aad
mov
add
cwtl
les
mov
mov
add
stos
jg
shlb
mov
gs
stos
std
rcrl
mov
lods
push
pop
jg
sub
notb
mov
sub
jmp
out
dec
mov
stc
jb
pop
xor
loope
jmp
inc
mov
sub
dec
shlb
nop
inc
in
ljmp
and
data16
sti
scas
inc
mov
sub
syscall
inc
js
jmp
mov
cmp
sub
ret
fnstenv
mov
mov
cmp
mov
bound
aam
in
push
mov
dec
xchg
faddl
fs
cltd
mov
imul
lret
adc
or
cmp
jnp
jp
lcall
jmp
inc
xchg
sub
and
jp
xchg
repz
stos
cmp
pop
adc
aas
pop
push
jb
stc
or
mov
add
pop
add
lods
sbb
and
xchg
rorl
mov
movsb
xor
mov
push
sbb
sub
test
clc
pop
cmpl
pop
out
nop
iret
push
outsl
stos
test
iret
mov
sbb
pop
mov
shrl
sbb
mov
cs
popf
adc
test
mov
jp
and
xor
faddl
addr16
xor
stc
pop
int
out
aas
std
std
loop
fwait
int3
out
cmpsb
lods
pop
jmp
push
mov
mov
aad
inc
addb
or
mov
clc
es
mov
adc
mov
jns
stos
int3
xchg
inc
and
adc
dec
loopne
mov
sbb
pusha
negb
in
push
lds
sarb
stc
mov
push
xor
mov
mov
fs
jl
add
jmp
dec
aad
mov
or
ss
dec
in
jbe
sub
cli
mov
rcrl
cmp
iret
out
pop
lds
xchg
outsl
pop
movsl
pop
adc
jo
out
pop
inc
or
out
mov
and
push
jns
enter
rcll
xchg
mov
jg
inc
aad
mov
xchg
popa
popf
adcl
lcall
int3
pop
xor
popf
outsl
sub
mov
repz
or
jmp
push
mov
jl
push
imul
out
xchg
popa
gs
cli
jle
in
cli
xchg
outsb
xor
dec
loope
xorb
adc
sbb
sti
pop
dec
fsubl
jle
roll
mov
adc
inc
mov
stos
or
outsb
movsb
push
scas
pusha
push
in
movsb
es
dec
addr16
lret
arpl
xchg
sub
loop
push
iret
mov
mov
aad
bound
jb
adc
and
or
mov
ss
cmc
iret
stc
xchg
mov
movsl
push
movsl
dec
ret
mov
shrl
js
mov
xchg
lcallw
in
cmpsl
stc
xchg
in
push
movsl
test
push
xchg
icebp
pop
dec
cmp
pop
addr16
sub
pop
cs
sbb
lea
aaa
push
lcall
hlt
push
push
jb
loope
std
lcall
jg
cmp
data16
jecxz
nop
clc
enter
mov
mov
pop
add
lcall
fs
and
adcb
and
fidivrs
sbb
mov
jecxz
aaa
outsb
pop
or
mov
add
js
push
ljmp
mov
jge
int3
movsl
imul
arpl
xor
mov
inc
inc
dec
push
cmp
pop
xor
adc
addr16
inc
gs
stos
clc
daa
jnp
sbb
sahf
dec
pop
fs
mov
sarb
fbld
xchg
jle,pn
mov
or
ss
xlat
dec
mov
fninit
and
aas
iret
mov
cld
mov
orb
lds
lods
adc
std
sbb
mov
sub
jo
stc
or
xor
pop
outsl
push
inc
je
cs
fwait
test
xchg
enter
out
insb
add
scas
push
mov
lea
jle
stc
rol
add
xchg
push
aam
lcall
xchg
hlt
shlb
lds
mov
cltd
lret
dec
pop
push
popf
cli
lcall
sahf
push
stos
outsl
mov
arpl
mov
and
inc
push
mov
inc
add
ret
dec
cmp
push
ret
jp
iret
mov
je,pn
rcr
dec
movsl
negb
jo
adc
decb
inc
mov
ret
pushf
test
pop
aad
mov
aam
xor
mov
jae
xchg
and
out
mov
push
push
mov
mov
fldenv
scas
push
sub
fwait
pop
or
mull
fwait
inc
mov
push
ror
lea
stc
loopne
mov
je
std
or
popa
push
add
inc
jae
and
inc
pop
lds
and
stos
cli
andb
sub
push
adc
fsubs
xchg
pop
inc
movsb
dec
push
adc
loop
mov
mov
cmp
inc
std
loop
xlat
js
fs
dec
cld
inc
inc
fs
xor
pop
xchg
mov
xchg
inc
adc
cli
add
in
loopne
pusha
inc
js
sub
test
dec
outsb
xor
jae
adc
mov
mov
repz
xchg
mov
subl
push
mov
dec
cltd
jmp
arpl
ja
je
adc
add
lcall
inc
test
xor
and
xor
xadd
call
jl
fcomps
mov
push
xchg
dec
lret
lea
mov
jb
in
dec
dec
aad
sub
lret
lret
push
mov
imul
gs
cmpsb
outsl
fstp
inc
call
and
or
punpckldq
iret
inc
mov
mov
mov
jg
aaa
in
lea
mov
cwtl
add
inc
sub
lock
inc
push
mov
stc
daa
sbb
fwait
cmp
mov
mov
xchg
lea
aam
test
jae
lods
sbb
push
insb
cmp
js
cmpb
std
mov
fxch
xor
sub
mov
pop
xchg
in
lcall
cmpsb
mov
cmp
mov
repnz
or
push
xor
xchg
add
pop
rorb
mov
aaa
and
jg
xor
push
sti
lds
xchg
inc
push
jae
aam
subb
jae
adc
push
mov
cwtl
insl
push
mov
clc
xchg
mov
inc
xor
outsl
sbb
mov
mov
in
xchg
adc
xchg
test
sub
mov
outsl
in
aad
xchg
pusha
ss
sub
pushf
xchg
sarb
sub
test
out
lcall
push
rcl
jg
and
jae
lds
stos
mov
lret
fldenv
leave
rcrb
inc
jle
divb
ret
xchg
nop
std
mov
enter
insb
int
xlat
jge
mov
lret
mov
mov
mov
push
dec
sbb
push
lea
into
out
popf
adc
repz
and
add
shlb
mov
mov
loop
lods
dec
sti
call
loopne
add
push
sbb
mov
mov
stos
or
js
aaa
pop
xchg
aad
xchg
lea
popa
out
cltd
rorb
scas
insb
push
arpl
scas
push
dec
adc
mov
mov
in
ds
xor
imul
pop
mov
push
mov
fcmovb
cwtl
add
mov
push
push
and
cmp
nop
out
inc
push
push
negl
mov
adc
lahf
int
orb
das
std
stc
adc
imul
cwtl
xor
sbb
cltd
sbb
push
iret
es
es
adc
dec
insl
mov
or
adc
xchg
gs
inc
mov
test
movsl
fucomp
inc
notb
mov
mov
sarb
into
loop
inc
push
mov
loope
std
popf
or
pop
adc
push
cmp
mov
jmp
cmp
lds
unpcklps
push
inc
lcall
sahf
std
int
sbb
faddp
in
in
inc
enter
dec
add
test
cmpsl
dec
xor
add
lcall
and
pop
lret
push
out
in
cmp
arpl
cmp
repz
xor
outsl
mov
jbe
mov
inc
push
mov
movsl
adc
mov
sbb
in
adc
lods
mov
iret
sbb
xor
mov
jne
add
xchg
rcl
cmpsb
and
or
loope
dec
pop
mov
cltd
xchg
and
mov
mov
iret
cmpsl
lods
adc
cmp
mov
jp
jne
add
sub
dec
outsb
mov
xor
pusha
mov
int3
add
push
pop
mov
jmp
push
scas
dec
rorb
lods
and
add
cld
ffreep
mov
fwait
push
add
subb
mov
mov
push
daa
jae
inc
mov
cltd
inc
jns
gs
rorb
add
mov
adc
dec
stos
xor
mov
dec
test
aas
xor
push
cmpsl
out
sbb
les
shll
mov
xlat
mov
or
popf
repz
inc
mov
mov
add
leave
loopne
ds
push
stos
mov
aas
jb
push
adc
or
xchg
ret
xchg
idiv
pop
jg
out
jmp
jbe
pop
ffree
pop
imul
mov
xor
lret
or
adc
sbbl
fs
lret
aas
test
or
jecxz
inc
jg
stc
test
cmpsb
jo
incl
jno
adc
mov
cmp
mov
inc
bnd
xchg
shll
std
pop
pushf
push
mov
test
sbb
jb
hlt
jnp
aad
lea
addl
cli
jne
aam
mov
or
jl
test
addr16
outsb
std
call
rol
xchg
imul
int
add
cmp
and
sbb
lret
stos
mov
movb
bnd
jno
cli
mul
and
shl
mov
xor
rclb
pop
or
mov
xchg
subl
xor
sti
lods
xchg
in
jnp
fsub
inc
cmp
aam
pop
loop
rolb
jle
jae
clc
test
ret
in
sub
lcall
loope
imul
je
fildll
push
rcpps
add
in
xchg
scas
shrl
jne
fcompl
icebp
pop
test
sbb
bound
cltd
sub
lods
dec
out
fstl
dec
inc
xchg
sbb
loop
xorl
mov
cs
sub
fs
adc
mov
xchg
insl
aam
int3
outsb
inc
int
xchg
xor
xchg
cli
or
add
cmp
or
adc
pop
sub
iret
jg
or
mov
xchg
imul
add
pop
lds
pop
mov
mov
lods
inc
mov
cmc
or
jbe
daa
jb
jb
or
les
jp
lahf
mov
inc
push
dec
lock
xor
dec
mov
mov
popf
xor
bound
inc
push
std
dec
outsb
cmp
ss
cwtl
xchg
and
add
cmp
jae
pop
pop
mov
jmp
adc
clc
sbb
jp
mov
scas
shlb
xchg
into
movsb
pushl
pusha
fmuls
xchg
idivl
pop
es
lods
mov
aad
push
outsl
push
pop
xchg
push
push
xchg
das
repz
mov
sti
loop
inc
popa
or
jbe
or
addr16
push
jge,pn
cs
imul
not
out
lret
repz
sub
mov
insl
push
inc
insb
jge
xchg
clc
mov
inc
mov
adc
addr16
push
mov
mov
shll
xor
push
popf
je
imull
mov
dec
outsb
fmull
adc
xor
dec
into
sub
pop
adc
scas
or
nop
daa
fsubrl
out
push
cltd
fs
sub
add
adc
int
mov
lock
fstpl
test
hlt
adcl
or
mov
out
sub
xchg
or
lcall
pop
popf
sahf
sub
xchg
mov
pop
ficoml
mov
mov
pop
cmp
fldcw
pop
scas
std
les
arpl
clc
xchg
ss
ret
in
or
or
pop
arpl
mov
mov
sbb
ret
repnz
push
mov
mov
fcmovnu
push
xchg
outsl
pop
jle
mov
outsl
dec
pusha
xor
popf
iret
insb
push
sbb
xchg
jb
xchg
mov
add
and
lock
mov
mov
das
fisubrs
and
push
sbb
fisubs
mov
xor
mov
je
push
icebp
movl
fs
push
adc
es
mov
adc
andl
bound
andl
fildl
insb
lcall
cli
cmp
hlt
mov
test
xor
jl
pop
or
push
stos
dec
rcll
pusha
stos
adc
pop
mov
sbbb
add
add
sti
mov
ds
ret
pop
mov
lcall
mov
cs
adc
les
in
mov
ds
lds
sub
outsb
sbb
inc
fsubl
add
lods
repz
imul
mov
scas
or
lahf
jno
adc
inc
push
gs
stos
insl
andb
jnp
divb
aas
aam
aam
mov
shlb
jne
mov
dec
push
mov
mov
jnp
inc
jnp
and
mov
mov
pop
sar
lods
lds
mull
xor
fiaddl
lcall
push
mov
scas
xchg
push
dec
pusha
pop
jmp
scas
mov
mov
pop
add
loopne
out
addr16
pop
outsb
iret
jmp
cmp
test
xchg
mov
in
cwtl
mov
fbstp
cmp
test
sbb
xchg
push
loope
sub
outsl
push
pop
cltd
loopne
and
leave
dec
push
jns
mov
cld
ret
push
cmp
jno
mov
leave
movsl
repz
in
int
aad
mov
and
jbe
adc
xchg
pop
inc
or
loopne
push
adc
fsts
add
pop
and
push
es
imul
mov
adc
cmp
in
push
movsl
inc
adc
xor
sub
jmp
outsl
xor
jb
push
sub
xchg
ret
mov
mov
cmp
jp
aam
add
lret
addr16
xchg
jae
inc
daa
push
loopne
loop
and
daa
xor
mov
and
cmpsb
pop
pop
sbb
pop
mov
adc
jmp
and
mov
fcompl
xor
add
sub
call
dec
push
inc
stos
insb
fildl
pop
mov
or
and
add
push
adc
movsl
xor
shrl
push
mov
out
enter
mov
mov
fs
jbe
xchg
dec
in
adc
movsb
add
xor
pop
mov
cmp
mov
stc
pop
lret
pushf
push
pop
dec
lods
testl
dec
mov
jecxz
cmovne
cmp
in
sbb
je
shll
add
push
lods
mov
push
mov
insl
notl
movsl
movsb
ja
add
jnp
clc
inc
add
rcr
push
jg
ret
xchg
fdivrs
dec
inc
into
add
pop
jae,pt
rclb
mov
addl
ret
filds
sti
ds
cmp
cltd
icebp
leave
xor
out
lcall
js
jp
adc
movsb
add
xor
popf
or
std
and
mov
fdivs
das
inc
das
xchg
je
cmpsb
ror
scas
jo
sub
fwait
mov
mov
lock
mov
xor
dec
movsl
pop
mov
sti
loopne
or
jmp
mov
mov
xlat
int
mov
lret
adc
andb
sbb
mov
mov
inc
dec
push
andb
shll
inc
or
mov
pushl
xlat
fs
pop
sub
cmp
cmc
nop
adc
mov
jne
xlat
test
adc
fmuls
adcl
in
cmp
ds
mov
mov
ficomps
sahf
pop
mov
gs
dec
lea
or
dec
in
sahf
xchg
push
int
insb
inc
cmp
xor
push
fidivs
scas
mov
add
xchg
xchg
sbb
or
xchg
arpl
rcpps
mov
lock
addl
lcall
jnp
mov
lret
pushf
lcall
dec
cli
fdivs
pmullw
add
ljmp
and
xor
aam
scas
pop
mov
jae
pop
or
aad
leavew
xor
ljmp
adc
mov
out
into
cld
and
bound
jb
fsubrs
push
es
xor
mov
cwtl
sub
xlat
mov
adc
pushf
xor
xor
inc
add
jl
cltd
cli
adc
push
mov
inc
jno
mov
ss
jno
or
jge
inc
pop
das
pop
std
sbb
out
mov
scas
dec
aad
inc
sub
jl
lods
ror
ret
dec
mov
das
mov
mov
sbb
xor
out
in
or
mov
cltd
nop
mov
insl
test
inc
sahf
and
popf
mov
es
adc
rclb
repz
mov
data16
cmp
aad
ficomps
sbb
cmp
add
int
xchg
dec
dec
pop
movsb
aas
jnp
mov
in
call
js
cmp
aas
dec
bound
rclb
loop
mov
aam
sub
and
repz
call
int
mov
shrb
push
or
sub
or
mov
inc
cmpsl
pushf
stos
les
ss
or
inc
enter
push
loope
sbb
mov
popa
stos
ljmp
inc
jne
dec
mov
and
ss
mov
sub
add
repnz
jb
ficoml
sbb
mov
in
sbb
mov
cmp
out
add
fcomip
ficompl
inc
pop
sbb
insb
mov
push
sub
push
inc
loop
push
movsb
das
rcll
mov
cmpsb
arpl
repnz
dec
fcompl
xor
adc
sub
add
ret
sbb
mov
inc
sub
or
pcmpgtw
js
aad
lea
repz
shrl
aas
outsb
xchg
fldt
inc
cmp
adc
insl
pop
mov
fsubs
jne
pop
dec
outsb
sbb
ljmp
xor
fsubrs
stc
js
sbb
push
in
es
imul
sbb
inc
mov
out
js
idivl
stc
mov
mov
or
fists
bnd
ljmp
add
mov
shrl
fdivr
cmp
xchg
out
adc
cmpsb
mov
xor
ret
insl
push
bound
loopne
push
xchg
idiv
movsl
fsub
outsb
cs
hlt
pusha
jb
cmp
test
bnd
xchg
bound
sub
sbbb
decb
ret
std
add
add
or
fwait
insl
sub
add
add
test
mov
jecxz
arpl
test
add
pop
add
mov
mov
shll
daa
and
jae
xor
cld
fs
lea
xor
pop
push
inc
dec
mov
stos
and
push
jle
cmp
outsl
cmp
int3
pop
and
xorb
mov
adc
or
decl
aas
sub
xor
or
add
inc
pop
cmp
inc
out
lods
sbb
mov
loope
push
xor
and
pop
push
pusha
cmp
xor
fists
push
adc
cwtl
popa
arpl
aad
cld
inc
xchg
lods
dec
pop
insb
mov
jmp
xor
lds
repz
inc
dec
cmp
mov
dec
lods
hlt
cmc
mov
es
int
stos
jecxz
mov
clc
aaa
dec
mov
js
dec
jae
insl
add
and
jge
ss
movsb
inc
xchg
in
jne
test
sub
and
pop
scas
sti
aad
lds
aaa
or
sbb
add
insl
inc
sub
xor
and
push
jns
xchg
jle
pop
lea
push
scas
aam
mov
test
das
xor
sub
lock
inc
cld
es
add
add
push
push
repnz
insl
insb
inc
rcrl
enter
and
xchg
mov
jo
in
cmpsl
sarb
add
adc
cltd
test
inc
sti
int3
stos
loope
into
rorb
push
mov
mov
sub
mov
outsb
push
jno
xor
sbb
fstps
adc
test
sub
lret
mov
sbb
cltd
repz
mov
add
and
xchg
ficomps
mov
jns
pop
sub
loop
cmp
push
and
daa
call
scas
mov
jb
jmp
sub
pop
mov
sub
add
xchg
sbbb
or
gs
cmp
push
mov
add
xchg
xchg
test
mov
jl
mov
clc
sub
cmc
cmpsb
loopne
aad
push
sbb
sub
bsf
push
clc
fldenv
lret
inc
push
xor
adc
in
sbb
popf
adc
lds
xlat
cmp
mov
add
xchg
cmpsl
cmc
sbbb
inc
push
push
jns
push
xor
fisubl
arpl
fwait
xor
sbb
repz
adc
push
mov
dec
fisttpll
stos
push
mov
push
xlat
stc
ds
int
int
jnp
data16
aam
push
mov
and
adc
cwtl
dec
das
ffreep
xchg
js
imul
dec
out
mov
xchg
andl
mov
lds
add
fcoms
cwtl
push
insl
jle
loop
pop
mov
out
fs
mov
jmp
outsl
outsl
movsl
add
dec
lea
add
xor
hlt
jp
outsb
into
adc
inc
sub
push
adc
mov
mov
jno
sub
ds
fsub
jmp
mov
popf
mov
xchg
das
mov
add
jle
add
call
xor
sub
aad
or
aad
icebp
push
push
rorb
das
inc
lret
or
movsl
fisttps
test
cmc
sub
je
or
or
ret
mov
dec
add
int3
scas
or
cwtl
jno
xchg
mov
mov
sub
and
push
and
enter
nop
in
jl
dec
addr16
mov
iret
and
fisttpl
pop
inc
xchg
in
pmulhuw
fcompl
xorb
push
dec
adc
popf
and
mov
or
psubq
mov
and
test
popf
sub
adc
rcrl
and
adc
mov
jne
and
imul
nop
xchg
pop
rcr
pop
adc
fdivrs
out
and
xchg
mov
xor
clc
cwtl
aaa
ret
pop
xchg
and
mov
dec
in
xchg
xchg
shlb
imul
or
test
inc
cmp
movsl
test
and
adcl
movl
pop
sbb
out
outsl
and
or
jecxz
mov
fistpll
pop
cmp
ret
sti
fmull
mov
push
push
sub
test
jl
sub
push
daa
add
imul
add
scas
scas
out
push
add
xchg
cs
fdiv
mov
pop
sbb
dec
push
enter
pop
fsub
or
mov
pop
test
cltd
pop
xlat
cmp
popf
push
mov
addr16
jns
sbb
jne
xor
in
jo
ja
pushf
out
sub
aaa
and
adc
sub
mov
out
push
inc
mov
hlt
subb
sub
movsl
fcoml
ret
lret
in
pop
into
scas
mov
xchg
mov
bound
push
push
mov
div
xchg
add
daa
into
flds
push
add
jmp
shlb
pop
sbb
addr16
ds
cmp
mov
mov
call
in
mov
ret
es
jne
or
popa
mov
and
add
mov
insl
pop
inc
push
jmp
or
or
mov
sub
call
adc
xor
or
and
out
lret
and
jo
out
pop
push
leave
mov
stos
mov
addb
dec
test
jnp
hlt
and
mov
dec
jns
f2xm1
ret
leave
push
lds
mov
cmc
jg
pop
movsb
add
lea
add
mov
pusha
out
jno
sub
rorl
and
sbb
icebp
sub
scas
lret
clc
jecxz
xorl
xchg
jbe
adc
test
movsl
fwait
xchg
out
cmpsb
mov
shll
and
sub
mov
pop
xorb
notb
cli
jg
stos
addr16
ljmp
dec
out
xchg
out
lcall
out
push
mov
ret
mov
xchg
xchg
cld
jb
pop
xchg
outsl
push
leave
inc
cmp
insb
mov
xor
popf
ret
lret
lret
mov
cli
cmc
add
aas
xor
dec
gs
stos
lea
pop
cmp
inc
sub
imul
pushf
andb
jbe
sub
add
add
pop
cmpsb
adc
mov
test
cmp
add
pop
add
ljmp
lods
pusha
xchg
and
jne
imul
cmp
inc
nop
std
pushf
sbbb
leave
loop
and
fwait
pop
xchg
fildl
mov
lahf
sbb
cli
in
pop
cmp
jbe
aas
insl
inc
jb
sbb
dec
into
icebp
lds
icebp
mov
inc
pusha
or
and
jmp
jbe
shll
not
ret
fistps
mov
adc
push
clc
mov
jp
cmpsl
mov
jne
xchg
or
mov
lcall
inc
arpl
fistps
dec
mov
loop
mov
mov
insb
add
sub
ja
xor
scas
mov
mov
arpl
subl
and
push
dec
adc
aam
and
dec
mov
bound
inc
add
xchg
lret
popf
lock
push
push
shrb
shrb
test
xchg
jp
scas
test
movsl
sti
aas
in
loopne
nop
enter
stos
stc
ljmp
lcall
test
cwtl
out
pop
aaa
xor
test
fldenv
aaa
loopne
jbe
mov
dec
adc
clc
je
and
popf
cmpsl
adcl
test
xchg
aaa
in
jmp
and
pusha
jnp
inc
dec
dec
pop
ret
rclb
sub
in
out
dec
cltd
adc
scas
xorl
xlat
repz
or
jg
dec
loop
rcr
inc
hlt
cltd
inc
ds
les
xchg
inc
mov
das
lret
cmp
out
cmp
cmp
das
lret
shrl
cmp
pop
inc
jle
add
cmc
movsl
out
sbb
push
pop
unpckhps
ds
rcl
aam
and
jg
mov
dec
cltd
add
clc
ret
sbb
cmp
ret
arpl
js
mov
push
leave
int
dec
sub
cmp
jecxz
add
jl
lret
xlat
loope
jb,pt
dec
xchg
orl
add
xchg
jae
stc
mov
iret
pop
and
pusha
mov
das
fbstp
mov
addr16
loope
jne
das
adc
pop
rcl
out
sbb
lret
ds
scas
into
push
adcl
cmp
or
daa
pop
scas
push
sub
pop
and
out
sbb
adc
in
jl
mov
arpl
add
das
je
call
or
outsl
lahf
cld
test
outsl
aam
mov
ljmp
or
xlat
icebp
add
xchg
inc
push
sbb
dec
mov
mov
and
jns
bound
cli
dec
ja
int
mov
ja
push
cmp
adc
loopne
jg
out
xchg
and
xchg
push
push
scas
and
leave
xchg
lahf
xor
aam
cs
and
mov
add
sub
nop
xor
mov
cmp
and
cmpsb
add
sub
leave
push
test
std
loopne
enter
cmpb
inc
push
cmp
pusha
sbb
jne
es
fs
testl
xchg
lea
sbb
or
jo
mov
bound
stos
int
mov
into
jg
push
movsb
xlat
pusha
push
and
mov
and
es
mov
mov
scas
sti
xchg
cmove
inc
xchg
push
adc
sbb
pop
stc
insb
gs
and
insb
xchg
dec
push
mov
sub
in
jb
sub
pop
cmp
or
xor
push
std
gs
fstl
int
mov
mov
rol
into
add
ja
inc
jbe
push
sbb
and
pop
dec
movsb
lods
ret
daa
shlb
dec
pop
fldenv
dec
push
shr
rorb
rol
mov
pop
dec
pusha
pop
popa
out
or
push
cltd
or
rcrb
lock
mov
out
ss
sub
es
pop
mov
lock
mov
pop
inc
dec
subb
stc
dec
roll
adc
int3
shrb
dec
movsb
lods
dec
sub
fiaddl
ja
pop
movsb
cmp
sbb
outsl
lea
fs
sahf
adc
idiv
and
push
mov
and
outsb
clc
out
sbb
pop
push
mov
mov
adc
aaa
ja
and
icebp
outsl
lock
jle
inc
xlat
ret
sbb
sub
fldenv
repz
inc
fwait
test
and
mov
imul
sahf
scas
repnz
je
mov
icebp
jne
test
adc
imul
scas
mov
jbe
xor
dec
sub
jne
pusha
cli
adc
divb
pop
in
popf
pop
cs
xor
lods
jns
dec
ret
icebp
ret
cmpsl
dec
xchg
rorb
roll
push
and
adc
push
sbb
mov
or
ja
xorb
aas
aas
xor
in
pop
ss
mov
dec
bound
test
cmc
mov
push
xor
xor
push
pop
dec
faddp
or
lahf
xchg
adc
dec
aas
pusha
leave
psubsb
fistpll
jnp
lods
and
cmpb
push
lret
into
mov
jmp
sub
jg
sti
pop
in
inc
inc
loopne
xor
jne
js
js
dec
xor
in
jp
lock
pop
mov
out
xlat
addr16
stos
cld
jno
mov
xchg
clc
xor
aam
and
fwait
test
and
push
loopne
push
add
push
aam
enter
hlt
int
sub
ds
cmpsl
aam
sahf
push
fisttpll
sub
adc
in
jl
sub
push
daa
mov
xchg
jl
in
dec
dec
stos
bound
movsl
loope
adc
cmpsb
cmp
xor
cld
out
clc
pop
ja
mov
loopne
jl
pop
icebp
cli
cltd
adc
shl
in
gs
popf
adc
or
aaa
pop
mul
mov
imulb
int
cltd
xchg
mov
ret
add
repz
test
push
or
les
inc
fmull
inc
outsb
or
inc
scas
sbb
pop
xor
js
xor
mov
gs
clc
ss
add
inc
movsl
xor
jge
mov
shrl
cmpsb
movsb
cmp
lock
jb
sub
jmp
push
xchg
push
sbbl
jo
imul
lret
pop
roll
jb
out
pop
insb
scas
add
gs
jnp
ljmp
lock
cmc
xchg
xchg
lcall
sub
scas
inc
cli
push
lea
sti
pop
lods
into
fisttpl
fwait
xchg
xchg
push
pop
add
inc
imul
jg
push
dec
lods
pop
and
jl
loopne
pop
mov
or
andl
mov
mulb
push
pop
movsb
xchg
dec
test
fidivs
loope
pop
cmpsl
mov
mov
and
jo
insl
xchg
lcall
scas
sbb
dec
int
fistps
adc
rorl
pop
arpl
dec
pop
sbb
jp
add
xchg
cmpsl
or
jp
lds
jmp
cmp
jbe
rol
inc
adc
pop
xchg
inc
or
inc
mov
xor
add
repnz
popa
shll
and
inc
adc
rorl
scas
jg
sub
jb
mov
push
or
loop
test
jle
or
dec
add
pop
push
or
or
jnp
int3
out
inc
pushf
cmc
and
or
pop
sub
mov
ret
xorl
mov
inc
icebp
adc
in
repz
loopne
movsb
int
inc
mov
add
mov
mov
adc
loop
andb
sahf
sub
sarl
dec
xchg
fnstsw
inc
scas
push
and
cmpsl
lock
adc
movsb
cmpsl
push
cmp
and
xchg
add
insl
movsb
cmp
jbe
dec
rorb
sbb
fistpll
adc
xor
push
and
lds
decb
testb
out
sbb
cmpsb
push
lods
call
fwait
xor
sub
cld
je,pt
shll
fists
imul
sarl
sub
ss
fsts
dec
sahf
rorl
add
fcomi
or
add
inc
mov
mov
aad
cmp
inc
xchg
adc
or
add
movsb
add
mov
mov
aam
push
xchg
adc
xor
inc
push
shlb
add
mov
rcl
sbb
lret
iret
in
fs
jmp
push
inc
pop
inc
es
out
push
cmpsb
adc
add
cmp
addr16
sub
pop
and
daa
frstor
nop
cmp
popw
jg
cmpsl
into
mov
es
scas
pop
pusha
pop
jnp
test
stos
lahf
hlt
push
in
lea
ja
pop
push
pop
mov
adc
inc
inc
push
out
fisubl
std
push
repz
xchg
add
int3
in
push
jo
test
and
push
add
jns
aam
and
insb
xor
xor
or
pop
shll
jecxz
adc
mov
inc
xor
xchg
arpl
loop
dec
shll
cld
imul
out
outsb
adc
inc
pop
pop
xchg
lret
xor
clc
jbe
inc
xchg
insb
sti
dec
sar
mov
addr16
outsb
adc
lret
in
std
loopne
or
adc
push
dec
mov
out
pop
cmp
int
mov
arpl
popa
xor
and
jne
xor
cmp
dec
stos
mov
pop
cmp
mov
int3
and
jno
mov
sbb
sub
sbb
or
xchg
sbb
inc
pop
outsl
pop
mov
cltd
dec
pop
int
outsl
inc
jl
add
xchg
push
cwtl
pop
adc
mov
push
std
adc
test
sbb
testb
or
mov
shlb
scas
stos
ss
gs
sbb
sbb
mov
lcall
adc
sahf
inc
add
mov
sub
popf
push
mov
ret
jbe
aam
inc
xchg
in
lods
xchg
mov
push
je
ret
nop
es
push
sub
aam
hlt
rcr
and
sbb
repz
lret
add
icebp
inc
sti
xor
sbb
cmpsb
push
arpl
adc
pop
mov
mov
mov
in
pop
dec
inc
scas
or
shlb
add
test
inc
mov
fistpll
outsb
cmp
or
cltd
sahf
jns
insl
lret
enter
mov
inc
pop
cmp
lcall
cltd
or
and
out
shrl
sar
outsl
mov
mov
rorl
adc
jmp
push
mov
pop
int
cmpsl
or
mov
pushf
sbb
xor
into
andl
xor
pushf
fwait
pusha
sbb
loop
pushf
fistpl
imul
sbb
pop
cmc
imul
sbb
and
push
sbb
mov
mov
sub
lea
sahf
mov
sub
out
push
cli
out
fldl
hlt
jg
push
ficoml
lock
or
call
xor
test
xor
shrb
sbb
fsubr
xchg
popa
add
add
rcl
push
in
mov
repz
mov
dec
mov
sbb
in
or
ss
dec
push
xchg
push
testb
mov
push
nop
ficompl
dec
fstpl
mov
iret
addr16
push
test
inc
ret
shr
ja
dec
daa
jne
rolb
clc
xchg
push
jle
mov
leave
mov
clc
sub
shl
cmpsb
imul
das
aas
int
lret
dec
dec
pop
imul
popf
shlb
jne
inc
jno
xor
test
push
arpl
jmp
sahf
icebp
pop
sbb
hlt
jo
sahf
lock
dec
arpl
xchg
popl
mov
dec
aad
jns
gs
push
dec
call
mov
jl
popf
pcmpeqw
adc
sbb
in
lahf
sahf
int
mov
xor
imul
sbb
outsl
scas
or
cmpsl
gs
lret
inc
mov
add
jns
fidivl
lret
dec
sbb
outsl
leave
lods
jmp
and
cltd
pop
dec
std
ret
dec
clc
xor
repnz
xchg
cmp
sub
daa
test
into
inc
pop
mov
xchg
jge
aad
insb
jg
push
adc
pop
push
insl
fs
pop
std
scas
jns
loope
enter
rcl
repnz
mov
mov
cmp
pop
stc
xchg
fdivr
mov
repz
xchg
cs
out
fxch
or
mov
mov
aam
out
and
int
pop
pushf
vaddss
aaa
xchg
mov
xchg
test
sbb
imul
or
es
cmp
xorl
dec
insl
out
ficompl
testb
mov
data16
xor
dec
leave
sbb
mov
outsl
xchg
in
xlat
stos
orb
jmp
cld
mov
add
pushf
sbb
push
sahf
fidivrl
add
pop
inc
out
fwait
scas
add
push
pop
add
xor
mov
mov
xchg
and
dec
pop
jecxz
test
cwtl
or
lea
mov
cmp
or
aas
loope
test
xchg
adc
xchg
divb
pop
jmp
xchg
sbb
pop
dec
lcall
push
mov
sub
mov
pop
popa
jmp
fsubrs
mov
jecxz
std
outsl
push
xlat
jp
adc
in
mov
cmp
jmp
loop
mov
mov
cld
inc
mov
xchg
and
jecxz
mov
jmp
loop
inc
test
and
orl
push
xchg
xchg
insl
je
out
and
rcrl
mov
les
in
stos
ja
sub
in
test
sub
popa
inc
iret
adc
fstpt
mov
rolb
add
mov
andb
incb
xchg
movsl
inc
ret
lods
fldt
sub
jecxz
fnstenv
sub
cmp
shl
and
mov
and
aas
cltd
imul
cs
xlat
and
popa
sbb
jecxz
jae
fsubs
mov
stos
das
cmpsb
loopne
jp
pop
je
push
fpatan
in
xchg
xor
dec
shrb
gs
aaa
movl
pop
roll
cmp
cmp
inc
test
and
js
adc
xor
aad
roll
aam
fcoml
into
fmuls
sbb
data16
sbb
push
xchg
sbb
aas
cmpsl
sbbb
int
stc
inc
push
sub
xlat
pop
shrl
repz
xchg
jnp
and
jmp
and
out
andl
jns
aad
pop
je
xchg
shr
jae
inc
mov
dec
sbb
adc
sbb
into
sub
push
mov
push
mov
cmp
cmp
sbbb
rorl
adc
lock
bound
cmp
iret
dec
movsl
out
jnp
xchg
cmp
outsb
xchg
inc
das
movsl
mov
or
movsl
fistl
mov
push
mov
fidivrl
mov
jp
call
pushf
stos
insl
jp
add
mov
scas
lcall
addr16
cmp
aas
loope,pn
sbb
push
mov
add
pop
addr16
ljmp
sub
jbe
sahf
enter
inc
push
pop
aaa
lea
clc
jp
inc
xor
pusha
jg
mov
repz
cld
outsb
jnp
jmp
stos
dec
xchg
sbb
stos
lock
xchg
call
mov
gs
pop
mov
push
inc
fildll
inc
addr16
ja
insb
jo
jp
sub
mov
movsl
mov
inc
leave
inc
lret
pop
test
fwait
mov
inc
mov
jp
sarb
cmpsb
call
stos
and
jmp
and
mov
cmp
into
fcmovb
test
jno
xchg
outsb
icebp
xchg
scas
cmc
xchg
out
or
mov
xchg
jecxz
or
or
mov
pusha
xor
loope
aaa
loope
push
insb
mov
xchg
sbb
xchg
jge
push
pop
lods
cli
mov
and
sti
aas
pop
jmp
cmp
fidivs
cmp
dec
add
and
loopne
push
cmp
leave
nop
mov
mov
pusha
push
mov
and
xor
stos
lret
mov
call
jmp
cmp
inc
jae
shrb
sub
daa
mov
lret
mov
lock
and
pop
sbb
cli
push
sub
int
arpl
or
nop
rol
aas
add
sarl
outsl
inc
cs
mov
das
movsl
fsts
shrl
int3
push
jp
xchg
mov
inc
sarb
lods
fnstcw
cmp
pop
jge
jo
mov
adc
cs
iret
repz
xchg
pop
rorl
daa
xlat
or
out
jl
xchg
test
fiadds
mov
mov
push
fstl
feni(8087
and
aad
sub
ja
xor
fs
jl
sbb
jb
push
data16
jge
lcall
inc
cmp
push
movsb
sbb
shl
adc
fisubrs
adc
les
insb
pop
sub
inc
scas
push
lds
loope
pop
push
mov
mov
lds
mov
or
inc
mov
xchg
adc
mov
adcl
sbbl
adc
sbb
cmpsb
or
int
in
pop
dec
jnp
cmp
sub
pop
mov
lods
and
push
adc
in
push
or
fxch
std
cmp
das
jbe
insb
cmp
js
lods
dec
cs
andl
and
pop
pop
mov
je
mov
aas
jbe
jae
cmp
xchg
out
xor
dec
xchg
push
cmpsl
test
xor
mov
inc
and
cmc
cltd
mov
mov
loop
andb
js
add
mov
jbe
and
sub
pusha
mov
push
aad
scas
pop
ret
scas
sub
push
and
xchg
mov
xchg
sbb
or
in
aaa
mov
pop
dec
mov
movsl
ret
add
sub
inc
jp
push
fs
inc
lcall
stos
repz
xor
sti
pop
std
hlt
out
adc
push
lret
je
and
cli
das
shrb
add
rolb
xor
add
xchg
cld
xchg
jnp
jbe
or
mov
dec
dec
in
sub
lods
shll
in
test
push
cmpsl
xorb
inc
jecxz
or
loop
repz
fnsave
inc
or
mov
sbb
dec
mov
jmp
xchg
ja
iret
pop
xchg
xchg
scas
rclb
insb
stos
cld
cmp
push
cld
daa
out
in
hlt
mov
scas
arpl
mov
movl
adc
movsb
pop
mov
out
shr
ret
mov
xchg
test
adc
add
xchg
cmc
imul
jmp
or
out
adc
lahf
cmpsl
sbbb
cwtl
ljmp
std
xchg
sub
mov
xor
push
add
lock
sbb
push
shrl
push
jg
jg
or
and
aaa
clc
inc
cld
dec
or
cmpsb
mov
imul
jp
cwtl
cmp
ds
xchg
fists
push
clc
ficoml
les
or
and
mov
maskmovq
imull
addr16
mov
mov
mov
push
jecxz
add
ja
xchg
popf
mov
sbbb
add
push
pop
add
sub
nop
fwait
rorb
sahf
imul
imul
add
mov
mov
pop
movsb
adc
lds
and
push
imul
sub
adc
popf
data16
adc
adc
jnp
inc
aas
aad
jge
and
dec
or
or
ljmp
or
cltd
jmp
add
push
pop
mov
popf
push
adc
mov
pop
adc
mov
dec
mov
shrl
clc
loope
mov
sbb
lods
ds
hlt
cmp
stos
gs
push
fnstenv
adc
push
and
in
ss
push
xchg
movsb
xor
loope
ret
xchg
and
pop
int
std
lahf
sbb
es
push
jnp
les
xor
add
sbb
mov
test
in
xchg
sbb
pop
xchg
mov
mov
ss
addr16
outsb
add
rorb
fwait
sbb
test
mov
mov
pop
xor
mov
and
ljmp
shll
mov
mov
push
popf
cwtl
mov
and
sub
adc
adc
int3
and
into
sub
nop
shll
cmp
lret
jne
xchg
xchg
pop
cmpsl
sub
adc
mov
push
cmp
push
jle
inc
cmp
push
mov
mov
stc
dec
ficoms
jecxz
xchg
inc
setl
scas
cld
jne
or
xchg
in
push
xchg
cltd
aas
dec
inc
mov
addb
imul
lea
inc
mov
les
sahf
cltd
push
aaa
loopne
xchg
push
lea
incl
pop
ss
inc
stos
and
or
mov
arpl
daa
jno
subb
adc
push
daa
mov
cld
dec
sahf
push
popa
dec
pop
lret
pop
sti
lock
sarl
out
fldl
ret
shl
xor
fidivl
outsl
mov
movsl
leave
popa
lock
xor
dec
mov
pop
mov
daa
dec
push
jnp
out
lcall
mov
daa
xchg
cmp
dec
sahf
lods
loop
mov
insl
std
das
xchg
nop
ljmp
repnz
mov
int
lock
add
cmp
inc
jle
ret
inc
xor
nop
adc
inc
lods
data16
xchg
pushf
in
fldenv
jge
mov
push
mov
movsl
pop
mov
in
sbb
xchg
in
jp
mov
pushl
iret
shlb
adc
jno,pt
ja
out
mov
mov
pop
stos
jp
out
insl
adc
mov
mov
fsubrl
mov
cmp
enter
mov
arpl
push
pop
xchg
icebp
xlat
xor
sbb
dec
and
cltd
fadds
and
adc
loopne
mov
sub
loopne
ljmp
jns
sbb
les
push
mov
fwait
icebp
sub
pop
setne
adc
push
dec
xor
xor
data16
add
cmp
repz
popf
out
fsubs
in
sub
push
jns
or
sub
jp
cmp
cmpsb
inc
inc
pop
call
inc
sbb
stc
sbb
ret
pop
jns
xchg
cmp
mov
sbb
or
pop
pop
dec
mov
xchg
cli
xor
ss
push
into
mov
inc
pop
mov
dec
mov
jp
test
cmp
jne
addr16
fstpt
ss
mov
dec
dec
push
xor
xor
cmp
cli
clc
xor
leave
shll
leave
mov
jmp
xor
sbb
sub
pop
jo
sub
daa
mov
or
cmp
andb
mov
scas
lahf
fnsave
dec
subl
mov
push
test
inc
ds
sbb
dec
inc
test
add
push
push
shr
or
fwait
push
nop
xor
mov
xchg
int
cs
dec
sub
loope
push
test
pop
sbb
adcl
gs
fimuls
adc
int
hlt
mov
lretw
xchg
cs
mov
xor
fidivs
mov
xchg
enter
imul
bound
inc
call
cld
sti
xor
push
std
shlb
bound
jne
ljmp
mov
bound
aam
nop
adc
push
mov
and
add
arpl
sub
push
movups
sbb
shrl
mov
pusha
push
mov
js
ret
and
mov
xchg
mov
fists
jp
ficoml
pushf
jae
sub
jnp
jge
enter
shr
or
jnp
push
addb
inc
ficoms
popf
add
ss
jg
dec
push
sub
mov
movsb
dec
scas
cmc
jb
fstps
cmp
roll
and
pop
repnz
mov
pop
mov
movb
sub
mov
add
iret
out
nop
cmp
test
jo
sahf
inc
xor
testb
les
fnstsw
insl
sbbl
mov
lods
cltd
aaa
cltd
dec
fmull
mulb
lahf
aad
aad
mov
or
roll
outsl
jae
inc
je
pop
mov
or
cmc
xchg
jo
inc
imul
stos
pop
rcrl
add
fnstcw
dec
andb
xchg
rorl
clc
lea
inc
movsb
mov
mov
jnp
dec
sub
sub
lret
jnp
cwtl
xchg
fcmovne
test
lret
add
test
xor
add
sub
mov
pop
fistl
xlat
push
mov
add
push
push
loopne
loopne
inc
xor
mov
movsb
ss
mov
frstor
idivl
push
pop
pop
adc
imul
inc
dec
int
popa
adc
lea
mov
hlt
addr16
or
mov
and
xor
pop
in
movsb
fisubrs
jmp
call
aaa
mov
mov
imul
add
push
dec
fists
fnsave
xchg
loopne
arpl
lcall
or
mov
add
pop
add
jb
xchg
add
xor
mov
mov
scas
leave
xorl
sbb
fisttpll
sahf
fimuls
inc
mov
outsl
dec
inc
add
sarb
cmp
jne
cmpsb
lret
xchg
push
pop
out
dec
xchg
cli
aas
not
push
mov
jb
mov
arpl
dec
inc
andl
and
mov
icebp
mov
pop
xchg
sbb
push
mov
inc
add
push
rcrb
hlt
ljmp
push
pusha
cli
mov
jp
cmp
fwait
cltd
push
fildll
push
pop
cld
std
fisubs
pusha
out
pop
fwait
mov
xchg
push
movsl
jnp
inc
clc
inc
fdivp
cwtl
popa
imull
xchg
mov
iret
or
outsl
out
movlps
mov
jbe
jns
fisubl
insb
or
ja
and
loopne
lcall
aaa
mov
nop
xchg
dec
sbb
jno
clc
insb
sbb
inc
jge
sub
cmpsb
xchg
stos
int3
aam
lock
movsl
jle
pushf
iret
inc
dec
push
push
cmc
dec
xchg
roll
mov
pop
std
lds
out
jno
pusha
jecxz
clc
mov
test
mov
dec
cmp
scas
jae
mov
jp
xor
int3
dec
xor
add
test
or
inc
arpl
jns
sub
iret
fadd
jp
lods
sub
imul
addr16
shufps
mov
push
jo
popf
out
jae
mov
out
mov
pop
jnp,pn
or
and
out
sti
repz
xor
xorb
jbe
sbb
mov
cmpsl
push
cltd
mov
jne
sub
jne
call
leave
push
cli
lret
lcall
popa
lods
in
cmp
adc
shrb
hlt
push
fwait
push
jb
pop
shrb
insb
rcrl
jnp
or
sub
mov
inc
add
enter
add
fisubs
jecxz
sub
xchg
jbe
mov
mov
cmp
inc
popf
aas
lahf
aam
or
cmpsb
add
rcr
jno
push
aam
in
arpl
xchg
dec
movsl
scas
xchg
inc
stos
sarb
pop
pop
inc
bound
dec
lds
sub
jmp
lds
sub
jg
in
adc
cmp
push
bound
or
gs
mov
and
stc
mov
push
push
lock
call
jp
jbe
lahf
lahf
mov
inc
loope
xchg
cwtl
add
loope
inc
sub
out
mov
imul
xor
push
iret
xchg
push
in
fdivl
shll
sbb
dec
lret
adc
stc
mov
fwait
add
stos
lret
aad
add
lcall
jne
cwtl
fdivrp
scas
iret
lret
mov
mov
and
shrl
cmpsl
pop
popf
adc
lahf
aaa
mov
pop
add
cli
jbe
jl
stc
mov
sub
pop
aaa
lret
testb
test
xor
ss
das
inc
gs
jle
mov
jo
pushf
lds
xor
or
push
lock
loop
mov
pop
fwait
cmc
xchg
add
jbe
add
mov
inc
pop
mov
adc
xchg
ficomps
or
aad
add
fwait
sbb
test
je
addb
sub
push
mov
into
inc
dec
fucomi
cli
push
cs
pop
adc
out
adc
and
jge
scas
xchg
push
int
or
mov
pop
xchg
xchg
aad
lcall
cmc
mov
repz
divl
in
mov
inc
scas
loop
cmpsb
mov
repnz
arpl
xor
and
xchg
mov
in
sbb
pop
outsl
nop
std
fstpt
stos
movsl
or
pop
movsl
test
xor
jle
or
nop
xorl
xchg
stos
shll
jle
lock
inc
sti
jne
jge
daa
out
hlt
aas
inc
jl
jnp
fisubrs
cli
lcallw
xlat
pop
adc
inc
sbb
jbe
mov
repz
mov
cltd
imull
dec
ss
dec
mov
es
or
add
mov
add
fisubs
xchg
sub
test
imul
fmuls
inc
mov
stos
test
loop
les
push
mov
push
ret
shrb
mov
lcall
jecxz
push
push
test
aam
outsb
cld
dec
xchg
scas
leave
mov
scas
mov
push
or
icebp
mov
insb
pop
aam
adcb
ja
sbb
pushf
insl
cmp
inc
cwtl
xchg
xor
and
sub
stc
iret
xchg
dec
fisttps
add
hlt
xchg
lcall
cli
mov
out
lds
inc
jp
inc
outsl
cmp
mov
add
xor
cmp
aaa
call
js
jl
push
out
jbe
repz
mov
xor
jmp
incl
mov
popf
inc
fwait
push
dec
js
in
mov
pop
lret
mov
adc
es
pushf
jmp
lods
lods
lret
sub
int3
call
push
push
and
lods
test
dec
add
sub
roll
lret
data16
jo
jno
faddl
jbe
pop
and
dec
testl
enter
cmpb
in
mov
lcall
fisubl
pop
rolb
mov
xchg
mov
mov
add
jns
loop
jecxz
pop
shlb
or
sbb
adc
cmc
push
pop
mov
out
pop
cmp
aaa
push
jl
mov
loop
push
sub
xor
out
imul
mov
pop
inc
arpl
mov
aas
cmp
adc
faddl
add
mov
add
fisubrs
push
je
insl
std
dec
add
gs
push
out
mov
pop
push
jnp
push
mov
xchg
pop
cld
mov
mov
add
pusha
dec
je
imul
push
add
cltd
sub
cmp
cmp
mov
jg
xlat
push
das
add
mov
nop
jae
pusha
mov
pop
xlat
cltd
ficoms
sbb
scas
xor
outsl
mov
iret
fcmove
mov
les
or
cmpsl
fisubrs
cmp
fs
push
cld
je
cwtl
fiaddl
add
mov
cli
cmp
mov
mov
add
adc
loope
fwait
or
dec
jl
hlt
pop
sbb
pop
push
mov
les
mov
pop
pushf
or
lds
add
sahf
add
lds
sbb
pop
loopne
ret
xchg
dec
rcrb
into
movsl
sbb
dec
sbb
andl
adc
pop
hlt
cmp
cmp
data16
xchg
push
adc
push
mov
lret
adc
inc
sti
jecxz
push
clc
lret
cmp
xchg
aam
and
cmpsl
add
or
push
fwait
out
int
jecxz
inc
or
sub
mov
je
fimull
ja
mov
mov
sbb
hlt
lret
insb
mov
dec
mov
ror
mov
or
jb
xlat
rcll
inc
mov
lds
pop
roll
push
cmp
mov
lds
jb
xor
pop
push
fnsave
cmp
sbb
out
mov
mov
xlat
out
arpl
push
imul
adc
mov
and
roll
push
and
xchg
ret
dec
jge
dec
movsl
push
inc
sub
jno
cmpl
je
pusha
orb
aad
lret
int
das
or
lret
jae
xchg
sub
and
popf
mov
scas
das
push
in
dec
push
pop
push
icebp
add
jb
and
cld
jp
lahf
push
push
jne
test
jle
rol
xor
testl
xor
stc
push
inc
sub
lea
add
clc
push
rcrl
js
aam
mov
ss
push
push
cmc
dec
lcall
add
mov
xchg
or
out
jl
loope
bound
sahf
out
inc
add
enter
fdivl
ss
sbb
int3
add
movsl
jmp
enter
cmp
insl
int3
push
loop
test
pop
cmp
fcompl
xorb
mov
push
loopne
lret
loop
les
mov
rorb
and
jle
adc
adc
mov
jle,pt
jge
aas
rcrb
inc
mov
cmp
jecxz
jne
fs
rclb
ffreep
mov
xchg
fidivs
dec
jmp
sbbl
sbb
push
sbb
xlat
testb
sub
insl
test
xchg
in
fstpl
sbb
xchg
rcll
mov
cmc
pusha
in
stc
cmp
adc
jno
into
ret
fs
int
mov
out
xchg
xor
jo
and
jnp
setb
aad
pusha
call
cmp
sub
mov
cmp
and
popa
jecxz
fs
push
fwait
jae
mov
xchg
in
push
ret
adc
lds
bound
cmc
clc
add
xor
dec
and
and
lock
and
mov
sbb
call
popa
add
or
mov
sbb
push
push
aas
cs
jno
sub
or
pop
lea
cwtl
out
add
inc
mov
dec
ret
sbb
gs
jae
in
or
pop
ljmp
push
es
out
mov
nop
mov
jo
mov
mov
xor
cwtl
push
addr16
pop
les
xor
test
add
mov
or
xchg
fisttpl
frstor
adc
xor
or
sbb
jo
mov
out
lcall
dec
icebp
xchg
cmpsl
sbb
xor
pop
push
mov
bnd
mov
adc
cmp
sub
jg
push
jbe
int3
jmp
push
addr16
xchg
fdivrs
imul
test
outsb
insl
pushf
mov
fldenv
push
es
mov
leave
mov
mov
mov
das
adc
sbbl
cmp
jp
push
out
cmpsb
out
rolb
out
in
adc
loopne
push
mov
mov
mov
adc
fsts
in
inc
inc
into
cmp
arpl
iret
or
mov
lahf
addr16
cmpsb
fsubrl
ror
lea
adc
insl
cwtl
popf
adcl
loop
xlat
add
add
mov
test
xlat
pop
mov
insb
xlat
mov
dec
and
push
inc
in
mov
add
jp
gs
sub
cmpsb
or
xor
pop
lcall
pop
inc
stos
mov
icebp
negb
icebp
or
sub
jb
xlat
mov
xchg
pop
mov
mov
xor
lret
xchg
sub
jns
xchg
mov
dec
inc
scas
inc
jmp
ds
dec
dec
lock
lds
mov
std
fs
rorl
cmpsb
dec
jg
aam
mov
ss
daa
shrl
stos
nop
lock
xor
cld
leave
cmpl
sub
ret
mov
jge
cmp
das
jge
mov
enter
into
fstp
jns
andb
ret
dec
fisttpl
pop
rclb
ret
push
or
xchg
xchg
shrl
push
mov
push
xchg
adc
insb
insl
test
orb
add
push
inc
xchg
imul
cmc
sub
cmc
jle
lods
js
lret
lret
ljmp
dec
sarb
fldl
and
push
lds
je
ds
dec
popa
test
cmc
dec
inc
insb
out
int
push
icebp
cmp
adc
dec
loope
dec
cmc
jmp
adc
repz
lcall
hlt
dec
push
pushf
adc
repz
imul
and
mov
mov
sbb
stos
sbb
push
repnz
sahf
sti
scas
and
jb
cli
jle
fsub
xchg
out
test
xchg
and
cmc
cmp
cli
or
aas
jbe
dec
mov
mov
rorb
out
xchg
insb
pop
pop
bound
sarl
jns
aam
pop
jae
out
int
mov
imul
shlb
repnz
mov
mov
sahf
fidivrl
aaa
int3
enter
add
and
mov
out
aas
add
cmp
dec
call
test
adc
mov
stos
add
and
out
mov
test
shlb
pop
add
cmp
xor
dec
xchg
incl
fcmovbe
leave
mov
pusha
jno
and
ret
mov
lods
gs
inc
fs
imul
jne
sub
fs
xchg
dec
lods
push
jp
inc
loopne
stos
push
add
cmpsb
aas
add
shrl
mov
lret
jp
mov
lds
cs
mov
stc
jns
fists
pop
or
xor
pop
call
nop
ja
jns
cwtl
dec
mov
xorb
jbe
stc
sub
hlt
push
sub
ss
scas
sub
js
loopne
sub
adc
pusha
popf
xor
ja
lcall
add
es
je
aam
lds
jno
dec
jmp
xchg
lods
push
imul
and
inc
dec
loopne
add
add
pop
inc
jg
rorl
test
xchg
jecxz
jns
nop
sub
fstpl
pop
and
mov
mov
addr16
cwtl
fucomi
lods
lret
shlb
pop
ret
mov
inc
daa
icebp
mov
add
add
pop
pop
int3
pop
in
adc
out
sub
xor
sbb
dec
sub
insl
or
adc
daa
repnz
cmp
dec
mov
arpl
adc
jns
in
popf
sub
lea
push
push
jns
jae
mov
lea
popa
xchg
mov
mov
ficomps
arpl
add
or
leave
outsb
dec
rcll
lcall
adc
test
or
fwait
pusha
inc
xor
stos
mov
or
cmp
outsb
mov
push
in
jnp
cmp
dec
out
push
ficompl
rcr
in
mov
int
test
shl
mov
adc
lock
add
adc
out
add
xor
mov
xchg
mov
jo
int
das
pop
roll
add
pop
mov
sahf
loopne
pop
or
lahf
test
push
clc
push
pop
push
xor
ret
loope
mov
pop
push
loopne
std
lcall
mov
scas
mov
dec
push
pusha
iret
mov
hlt
vucomiss
or
push
sub
sbb
lds
xor
leave
lret
loopne
fucomp
iret
loopne
in
mov
loope
sbb
mov
test
sub
popa
push
or
push
push
sbb
sbb
xor
iret
loope
jle
std
das
xor
xchg
push
cmc
inc
pop
push
cmp
mov
aad
pop
mov
js
mov
sub
ds
ss
sti
sbb
lcall
jmp
inc
insl
les
popf
into
pop
mov
and
inc
lods
lret
outsb
fwait
dec
cmp
out
shrb
push
lock
and
cmp
cmpsl
mov
push
dec
or
cmc
aas
mov
ja
add
lods
adc
inc
add
clc
fimuls
cmpl
test
pop
outsl
hlt
xorl
xchg
cld
loop
xchg
popa
xchg
jne
add
fs
int3
je
js
add
push
jno
mov
pop
in
pop
stos
rorb
ret
adc
push
lods
repnz
loope
and
mov
cmp
arpl
cmpsb
mov
xchg
xchg
xor
jae
push
outsb
ficoms
stos
mov
xchg
in
or
jle
jge
pop
fisubrs
mov
push
fisttpl
pusha
push
xor
mov
jmp
aas
jnp
ret
cld
jbe
jns
jp
in
inc
adc
sti
xor
xor
dec
sub
xor
aam
fisttpll
cmc
dec
ljmp
inc
je
movsl
sbb
xor
mov
cmpsl
xchg
adc
rclb
dec
push
inc
jg
push
pop
jg
sbb
xlat
and
pop
push
cmpsl
cli
loopne
xchg
jbe
popa
lea
popf
lret
or
mov
outsl
shl
mov
paddb
lcall
insl
out
idivl
pop
cli
daa
rcrl
pusha
inc
lahf
jne
test
cmpsl
dec
jmp
cmp
xor
and
or
push
out
int3
aaa
sub
dec
or
and
stos
clc
scas
push
out
cmp
out
jbe
or
pop
adc
clc
mov
and
pushf
sub
inc
sub
imul
lds
data16
lock
pop
dec
fs
sti
test
stos
pop
and
sub
jae
push
nop
cmpsl
test
cmpl
mov
and
push
je
mov
mov
add
fmuls
jmp
push
sub
dec
mov
push
rol
and
mov
adc
adc
xchg
cmpsl
cs
fisubrl
push
inc
stc
aad
nop
test
hlt
pop
mov
lods
loop
cmp
fsubrl
push
and
ljmp
subb
push
xchg
mov
jne
cli
push
insb
je
pop
jl
inc
xchg
lret
mov
lock
mov
aam
stc
inc
push
negb
add
stc
je
inc
pop
cwtl
mov
dec
mov
xor
mov
lcall
pop
fstpt
cmp
sbb
fcmovnbe
push
test
bound
mov
push
mov
lret
push
aad
cs
int3
fwait
pop
lds
int3
sbb
loopne
cmpsb
stc
js
fstl
mov
imul
imul
popa
movsb
and
fisttpll
int
xor
clc
pop
ret
mov
in
sbb
cmc
mov
pop
fildll
lret
movsl
ljmp
ss
inc
dec
mov
scas
xor
cltd
ljmp
jnp
mov
mov
push
jae
outsb
fisubs
aam
add
fs
pushf
push
xlat
lock
sbb
rcrl
clc
subl
sub
dec
lds
into
jmp
divb
pushf
mov
insb
mov
cmp
int3
mov
lret
fsub
cmp
mov
movsl
sub
out
mov
in
sahf
pushf
imul
out
dec
popf
xchg
out
adc
push
push
cmp
out
jl
cmp
adc
sub
out
inc
pop
jae
sbb
xchg
loope
inc
xchg
es
insb
fstpl
call
je
in
test
int3
xor
push
xor
inc
jno
sbb
insl
les
mov
jae
fidivs
add
pop
add
push
or
mov
jae
in
and
cmp
addr16
push
daa
outsl
or
cmp
es
push
fists
pop
out
arpl
in
jl
sbb
outsb
daa
cltd
sar
jb
add
jmp
test
mov
outsb
cmp
or
mov
sbb
xchg
fwait
mov
ss
xchg
jge
push
ret
push
adc
dec
adc
fistpl
add
scas
es
push
mov
xchg
mov
fwait
push
jge
clc
les
xlat
mov
sahf
insl
push
fs
push
jg
mov
push
xor
mov
mov
lret
cmp
mov
inc
push
das
mov
cmpl
je
mov
and
enter
fs
rorl
shll
pop
pop
mov
filds
push
jb
arpl
sti
mov
adc
dec
imul
push
fs
insl
ftst
jbe
inc
inc
mov
repz
xlat
loopne
push
xchg
jb
inc
test
outsb
test
xchg
mov
jle
push
into
mov
into
xor
fwait
inc
sub
pop
push
scas
out
mov
push
cld
mov
cwtl
xchg
inc
dec
rorl
pop
jecxz
pop
pop
sub
dec
mov
dec
pop
sbb
orl
add
add
popl
shll
pop
call
or
inc
and
outsl
lret
jecxz
psraw
pushf
std
or
push
test
mov
mov
cmc
and
pop
xchg
dec
pushf
fs
adc
clc
test
cmpb
xor
je,pn
shrl
cmp
add
mov
mov
lahf
lret
subl
push
push
test
cmp
frstor
and
mov
xchg
cmc
ret
mov
iret
ljmp
sub
mov
push
insb
cmpsb
inc
stos
sbbl
add
mov
xacquire
int3
push
out
adc
sub
out
mov
stos
addr16
sarl
adc
dec
dec
dec
in
sub
js
sbbb
sbb
dec
idivb
pop
ret
lret
cmp
adc
sbb
sbb
pushf
cmp
lret
pop
sbb
mov
aaa
dec
popa
inc
mov
add
or
ja
adc
or
inc
nop
movsl
dec
roll
mov
rcrb
xor
xchg
jg
ret
cmc
scas
call
sub
aas
in
in
sub
push
lahf
ret
mov
ficomps
cmp
loop
outsb
xchg
mov
and
xchg
mov
inc
cmp
pop
dec
lods
xlat
data16
push
jl
mov
xor
test
sub
adc
outsb
shll
negl
lods
lret
fs
jae
sub
bound
sbb
outsb
das
add
psraw
sbb
or
sbb
sub
ljmp
loope
daa
cmp
xchg
adc
repnz
sub
fcmovb
fnstenv
out
jo
jae
das
int
sbbb
nop
je
sub
mov
mov
push
jecxz
or
popa
lahf
mov
jbe
pusha
cmp
dec
insb
andl
jmp
mov
or
call
xor
test
shlb
pop
pop
inc
pop
pop
xor
push
push
xor
rclb
shl
cmp
icebp
or
mov
xchg
loope
negb
arpl
and
push
mov
dec
mov
and
push
push
mov
xchg
sbb
std
movsb
inc
stos
cmp
mov
inc
out
mov
jp
stc
and
movsb
sbb
xchg
push
js
in
and
imulb
outsl
loop
insl
jl
call
test
push
adc
mov
cli
call
sub
xor
out
inc
divb
loop
adc
cmp
fisttpl
in
and
out
or
sbb
mov
out
out
mov
xor
cmpsb
and
fstps
push
push
pop
mov
mov
and
loop
ljmp
xchg
shll
es
sbb
aaa
insb
lock
inc
out
rorl
js
mov
xchg
outsl
pushf
sbb
negb
cmc
jne
ss
imul
movsb
es
cmp
lahf
xlat
adc
and
js
cwtl
dec
js
push
cmc
or
rorb
sbb
imul
dec
test
cltd
jmp
push
or
and
dec
dec
xchg
cmp
fcomi
pop
cmp
repz
je
xchg
vcvtsi2ssl
out
and
pop
psubq
mov
sbb
je
inc
js
fildl
in
xchg
sti
call
add
les
das
add
insl
or
mov
xor
aad
push
xor
sti
mov
mov
movsb
cmpsb
inc
lods
int
dec
inc
testl
or
dec
fwait
call
mov
loopne
ret
lds
and
xor
out
and
xlat
or
sbb
lods
inc
xor
xchg
xchg
sbb
cs
into
dec
xor
adc
sbb
mov
scas
test
add
mov
fs
fdivr
addr16
sub
movl
lods
out
and
test
popf
pop
movsb
inc
mov
push
mov
daa
pop
repz
ret
call
mov
mov
pop
jo
insl
mov
pop
push
cli
pop
addr16
dec
xchg
xchg
loopne
out
mov
or
push
insl
xchg
cmp
sbb
lret
inc
mov
sbb
fwait
add
into
scas
inc
std
loop
divb
repnz
mov
lds
inc
sbb
mov
mov
jg
push
nop
icebp
hlt
popa
fcoml
aam
lds
enter
dec
sub
adc
das
subb
cmp
push
daa
add
lock
fildll
dec
xor
int
cmc
rol
lret
mov
adc
mov
sbb
mov
jbe
jnp
into
mov
push
mov
pop
leave
mov
imul
dec
outsb
mov
mov
lcall
xor
xchg
pop
stos
les
sbb
in
imul
mov
mov
subb
or
cmpb
aaa
lods
sbb
xchg
sbb
testl
sub
mov
je
add
cmpsl
pop
or
jae
in
out
inc
test
mov
in
idiv
jg
and
mov
cmc
les
add
pop
add
outsl
js
inc
sarl
mov
jbe
stc
sbb
mov
inc
lcall
xchg
push
mov
addr16
and
inc
dec
out
jle
push
and
push
popf
jg
ficoms
in
dec
shl
mov
lahf
data16
adc
push
inc
or
mov
rolb
cmp
out
xor
out
movsb
jb
fcoml
sbb
in
cmp
mov
xchg
mov
aaa
in
xor
ss
add
or
movsb
fwait
mov
xchg
pop
pop
mov
test
fs
xor
sbb
adc
fcomp
push
iret
pop
jb
fldl
xor
jmp
enter
iret
dec
mov
dec
cs
mov
push
add
or
andb
pop
mov
fiadds
cmc
ja
push
test
out
pushf
mov
xor
inc
add
lret
ficomps
jge
push
ret
push
cmp
cmpsb
orl
fdivrp
lret
pop
clc
sbb
ljmp
xor
shl
jns
dec
mov
lret
int
lret
adc
sub
jae
lret
push
xchg
push
xorb
inc
mov
mov
aas
push
inc
sar
aas
dec
fnstcw
cmp
orb
xor
mov
ret
mov
jp
test
mov
mov
mov
add
cmp
jb
iret
xchg
out
rcr
je
hlt
xchg
mov
imul
xor
mov
xor
xchg
xchg
cli
adc
pop
popf
lahf
addl
aam
sbb
sbb
mov
xor
in
into
je
imul
test
in
cmpsb
push
pop
cmpsb
dec
cmpsb
addb
imul
pushf
fbstp
mov
ss
or
or
jl,pn
or
pop
scas
adc
push
sbb
sti
xor
dec
fldt
cmp
js
clc
add
ljmp
data16
dec
arpl
or
arpl
lods
or
jmp
cs
lret
xchg
es
imul
js
jl
les
fwait
addb
pop
sub
jnp
lret
aad
lcall
insb
sbb
xor
push
stos
mov
adc
int3
imul
add
xorl
or
dec
push
fistpll
leave
sub
jge
fbld
je
test
mov
mov
lcall
sub
xor
repnz
std
jmp
ret
cltd
imul
add
pop
xchg
cld
in
pop
filds
pusha
push
enter
mov
dec
sub
rorl
mov
mov
sbb
repz
int3
mov
jb
mov
cmp
test
adc
fildll
shr
mov
or
clc
loopne
xchg
push
or
or
pop
mov
adc
mov
cmp
adc
xor
mov
jo
mov
lds
xor
mov
test
testb
jbe
ret
push
jmp
cmp
xor
cmp
mov
or
jae
cltd
lods
push
sub
enter
int
cmp
ror
mov
sub
and
in
dec
repnz
xor
and
dec
inc
adc
orl
fstpl
repz
jl
jecxz
addr16
int3
push
adc
divl
sarl
and
fidivl
int3
jg
mov
lods
out
push
adc
or
icebp
repnz
pop
cmp
jg
sub
daa
mov
es
cmp
xchg
mov
jae
add
push
test
adc
add
add
aaa
mov
sbb
shlb
mov
add
push
inc
push
mov
shll
sbb
cwtl
rcll
movsb
push
fbld
mov
xchg
mov
push
in
out
clc
push
adc
push
mov
push
arpl
xchg
leave
dec
and
movsb
imull
or
mov
adc
pop
incb
xchg
and
pusha
inc
iret
dec
xchg
adc
scas
pop
lahf
mov
pop
mov
adc
inc
jmp
push
inc
loopne
and
pop
sub
push
fst
pop
sub
inc
lods
repnz
lds
idivb
mov
or
or
in
ljmp
adc
shr
repz
pop
jg
dec
cmpsb
int3
iret
jmp
adc
pop
outsb
dec
jne
and
ret
xor
xchg
shlb
fwait
gs
les
stos
inc
adc
mov
sbb
adc
adcb
xor
mov
sub
jge
adc
adc
rclb
mov
sbb
sbb
xor
daa
jnp
xchg
ficompl
jmp
jmp
pop
xor
or
paddsw
cmp
test
repz
adc
movsb
inc
pop
push
cmp
movsl
pop
inc
rorl
std
push
into
push
cmp
jp
orb
pop
aaa
filds
push
les
adc
mul
and
les
sub
dec
cs
addr16
and
out
test
sub
or
fwait
cwtl
push
mov
cli
subl
mov
mov
pop
imul
xor
test
adc
adc
push
insl
cmp
stos
mov
cmpsb
cmp
push
test
rorb
ds
aas
sahf
jb
dec
cmpb
rcr
xor
adc
nop
jne
pop
adc
cmp
jbe
test
mov
adc
push
lret
add
dec
out
scas
sub
dec
push
dec
pop
xor
fidivrl
mov
adcl
test
xorb
push
pop
dec
xchg
pop
push
jae
call
jge
popa
mov
dec
jnp
inc
daa
jle
push
add
push
fwait
pop
jecxz
fdivs
inc
xchg
mov
mov
sbb
mov
mov
or
in
mov
in
call
fiaddl
xchg
lods
ljmp
fsts
cmpsb
xchg
xchg
out
mov
fs
inc
fimull
sbb
add
add
stc
out
inc
std
fidivrs
movsb
dec
insb
je
aam
mov
add
adc
cmpsb
sahf
stos
mov
mov
push
sub
inc
inc
dec
mov
mov
push
lret
jp
jge
or
pop
and
into
adcl
repz
jecxz
xchg
mov
inc
jecxz
and
icebp
jp
dec
aaa
sbb
inc
cld
ficomps
shll
dec
inc
sahf
add
not
mov
cmp
jns
or
loopne
subl
rolb
add
mov
scas
arpl
sbb
popa
out
dec
lahf
sbb
sarb
jp
lret
mov
lahf
or
push
sbb
notl
push
mov
adcb
adc
pop
sub
dec
ret
sahf
nop
xchg
add
push
mov
out
sub
xchg
pop
dec
xchg
mov
imul
filds
inc
imul
dec
test
mov
ficomps
dec
inc
btr
mov
idiv
movsl
jb
xchg
hlt
sti
es
jns
push
sub
ret
push
pop
inc
xchg
sahf
fsubs
outsl
outsb
pop
mov
lcall
ficomps
add
out
sbb
dec
movsb
pop
cmpsb
cmp
xchg
ss
sub
lods
orl
subb
push
iret
mov
cltd
fnstsw
add
jecxz
fistpl
sub
mov
lcall
mov
pop
add
shl
insb
pop
pop
loope
adc
outsb
cwtl
fiaddl
aas
lcall
and
add
jns
pop
stc
mov
clc
xchg
or
lock
xor
in
mov
loope
push
and
imul
and
sbb
fisttpll
cmp
xor
mov
push
lahf
mov
lret
xlat
in
mov
pop
push
dec
je
and
inc
loope
xor
cwtl
mov
repz
repnz
jne
cwtl
inc
sti
jo
lea
adc
inc
lods
cwtl
pop
lret
mov
cld
adc
imul
out
loopne
mov
insl
adc
in
and
jge
pop
lock
jle
xor
pop
xchg
out
arpl
or
out
lods
stc
mov
cltd
nop
mov
cwtl
dec
in
jns
fwait
ja
sub
mov
xor
sti
movsb
inc
imul
push
movsb
popa
pop
jnp
sbbl
lock
stc
sbb
adc
scas
mull
mov
sub
sub
fisubs
and
aas
lcall
fldl
pusha
aad
ja
inc
rcrb
cs
fmulp
pop
enter
int3
adc
cli
fldcw
sub
addr16
pop
shrb
push
ret
add
cli
lahf
mov
jecxz
subl
push
fsubl
fisubl
andb
imul
popf
mov
lret
lods
pop
mov
jbe
jae
mov
mov
xor
arpl
pop
lret
sahf
mov
mov
daa
pop
scas
ficoms
cmp
pop
cmp
ret
cmpsb
xor
les
loope
je
movsl
xchg
test
xlat
movsb
lock
push
pop
pop
pop
add
dec
push
xor
mov
insb
cmp
stos
outsl
pop
mov
ret
arpl
adc
inc
outsb
and
lcall
inc
test
scas
and
pop
add
xchg
pop
push
lcall
in
xlat
ljmp
cmp
inc
mov
xchg
fdiv
jecxz
ror
sbb
xor
mov
push
and
aad
popa
push
push
outsl
outsb
jbe
adc
and
jg
lahf
pop
jb
adc
xchg
es
cmp
lods
fstps
jno
mov
xchg
fucomip
push
mov
dec
gs
push
daa
repnz
pop
mov
push
call
loope
jl
nop
mov
lock
cmpb
adc
adc
shll
xor
mov
stos
test
sbb
cwtl
in
int
add
fdivl
insb
ss
add
arpl
cltd
sahf
adc
add
pop
jo
mov
fdivrs
aam
imul
lcall
pop
xchg
lock
or
fsubrl
jnp
ss
mov
sbb
int
or
out
aam
imul
dec
mov
add
jle
add
sti
xchg
sahf
sbb
clc
mov
pop
subl
xor
shll
cmp
push
test
or
aam
rcr
push
jl
push
arpl
ret
jnp
cmp
add
inc
aaa
adc
fs
loope
xlat
sbb
dec
jg
cmp
cmp
jae
mov
inc
div
sbb
popa
fwait
jmp
inc
sub
dec
inc
je
arpl
sub
xor
int3
push
out
dec
out
push
outsb
subb
insb
shll
in
fisubl
push
sbb
loopne
mov
mov
into
xor
and
fisubrl
ljmp
daa
dec
fwait
sub
in
or
hlt
nop
and
hlt
sbb
and
out
sub
je
rcl
sbb
rcr
mov
jo
inc
cltd
dec
and
fucomi
sbb
ja
sahf
outsb
fstl
jg
in
xchg
shll
pop
clc
sub
push
icebp
hlt
repnz
ds
fdivr
iret
and
dec
or
mov
mov
mov
jl
aas
lret
mov
add
xchg
ror
fistps
and
fsubrp
rcrl
mov
sbb
fdivs
mov
mov
cmc
out
add
sbb
mov
subl
bound
popf
pop
dec
enter
into
dec
push
xlat
inc
or
inc
push
sahf
jne
pop
ror
daa
nop
jae
mov
sbb
push
push
fisubl
shlb
or
std
adc
jecxz
stmxcsr
adc
ret
or
pusha
cld
movsb
stc
xchg
outsb
lock
mov
pop
mov
mov
test
mov
aad
mov
incb
inc
mov
xchg
data16
add
xor
jp
ret
add
fbstp
pop
into
cli
cmpl
mov
inc
test
aad
and
daa
mov
mov
xor
outsl
mov
shll
sbb
jns
pop
add
loop
push
das
int3
pop
add
das
or
cmp
outsb
add
cmc
ret
test
jp
push
stos
mov
mov
pop
lret
ja
daa
inc
call
pop
xor
add
push
pop
add
pushf
jle
sub
scas
dec
adc
mov
or
in
outsl
xchg
adc
outsb
ret
into
jp
mov
sub
rol
jp
pop
inc
cld
in
dec
movsb
jmp
jb
enter
xchg
xor
jmp
dec
inc
rol
out
mov
or
gs
ret
xchg
enter
cmp
stos
jb
into
jmp
mov
out
cli
out
es
insl
icebp
cmp
std
loop
loope
es
cmpsl
sti
lcall
xor
int
mov
xor
lds
loopne
loop
in
jbe
mov
inc
cmc
mov
mov
ret
mov
repnz
mov
les
jmp
lods
ljmp
rcrb
adcb
lahf
test
popf
and
fnsave
shrb
mov
aaa
cli
adc
gs
push
mov
sub
sahf
adc
iret
movsb
pushf
js
and
sbb
scas
loopne
add
test
adc
ret
push
push
pop
je
xor
pop
outsl
ret
gs
ds
mov
sbb
jns
and
lcall
push
insb
sbb
std
fcompl
add
ljmp
mov
push
sbb
mov
xchg
outsb
ljmp
inc
pop
mov
lock
push
mov
pushf
inc
xchg
out
jmp
jnp
add
dec
xchg
cmp
aam
imul
subb
les
dec
pop
lea
or
movsl
es
repnz
jnp
jl
and
xchg
xorb
sbb
dec
rcrb
xorb
inc
fcomip
hlt
loope
fsubrs
jo
rolb
in
jo
add
sbb
imul
sahf
sub
adc
pop
add
scas
imul
add
cmp
pop
adcb
push
pop
mov
xlat
cmc
mov
inc
repz
jb
mov
test
fsubrl
mov
cmp
sbb
mov
lcall
in
dec
xchg
rorb
test
js
ds
call
pop
out
jg
mov
inc
jl
push
mov
in
sub
jecxz
cmp
cli
mov
sub
push
jnp
xchg
ja
arpl
mov
mov
fstl
fidivs
adc
aaa
xchg
dec
mov
inc
sbb
jl
xor
std
sbbb
dec
dec
lock
repnz
jle
iret
mov
out
mov
pop
scas
testb
ds
push
fadds
mov
or
mov
ss
xchg
rorl
push
cmpsb
xorb
push
add
lret
sarb
inc
aas
sub
inc
jle
ss
in
cs
mov
inc
jge
imul
mov
bound
loopne
lcall
sbb
xorb
fisubl
shl
jbe
mov
mov
cmc
jns
int
bound
hlt
xor
mov
add
adc
sbb
pusha
cmp
hlt
dec
pop
mov
and
add
subl
mov
insb
inc
mov
or
dec
negl
push
pop
and
stc
mov
mov
mov
ret
xor
nop
fs
jl
xchg
and
and
lods
pop
sbb
adc
cld
or
mov
into
lret
imul
je
or
les
in
shlb
mov
nop
jno
insl
out
adc
movsl
xor
out
mov
mov
out
fcomi
mov
inc
lods
sbb
div
dec
and
fs
xchg
lds
mov
jo
adc
mov
mov
fcmovnu
outsb
lret
xchg
xchg
pop
jmp
stos
cli
addr16
out
xchg
ret
pop
or
mov
push
push
call
ja
mov
mov
lds
add
pop
adc
mov
jne
sti
push
divb
imul
xor
out
cmp
fs
and
xchg
imul
mov
or
adc
inc
sub
or
daa
or
lods
xchg
pop
clc
ss
shlb
xchg
lds
lea
fistpl
lock
subb
xchg
lret
lret
mov
mov
jo
lret
roll
fmul
fstp
push
enter
repz
addr16
jno
outsb
fwait
out
in
movsl
pop
ja
cmc
bound
and
mov
lcall
and
mov
push
mov
mov
xchg
test
inc
sbb
out
xor
in
jo
loop
icebp
mov
pop
xchg
filds
into
sub
scas
push
mov
and
popa
out
xor
test
mov
xor
fcmovnb
or
mov
sbb
call
imul
mov
sbb
sub
imul
add
cld
and
xor
push
out
arpl
and
into
dec
push
movsb
or
dec
adc
push
mov
add
cltd
es
and
iret
add
adc
mov
add
movsb
dec
daa
push
loopne
in
pop
fisttpl
or
test
sbb
dec
call
in
adc
push
fildl
in
xor
movsb
jbe
dec
js
rcr
shrb
js
or
inc
sbb
outsl
stos
sub
push
adc
fidivrl
push
jecxz
or
out
jb
push
nop
push
loopne
xor
adc
and
jb,pn
mov
fadds
jb
dec
cmp
in
loop
push
jg
lret
loopne
faddl
jbe
popf
std
mull
sub
pop
add
jbe
ret
test
and
jo
fwait
call
out
pop
rorl
outsb
mov
or
xchg
inc
adc
out
jle
jo
les
pop
dec
and
imul
pop
mov
int3
fistl
ds
insb
adc
cli
mov
push
test
das
cmp
push
xchg
test
dec
sub
cmp
jb
pop
mov
or
ljmp
shll
fbld
sub
xor
sar
mov
or
mov
add
in
and
aas
fcomip
out
or
sar
int3
add
push
pop
add
add
shl
mov
mov
shrb
pop
lcall
cmpsl
push
or
xor
ds
jne
jle
cli
mov
stc
xor
shrb
jge
outsl
xchg
mov
push
loop
mov
dec
negb
add
and
and
and
sahf
mov
insl
sub
xchg
and
sbb
xor
cmp
aad
mov
pop
fistpl
push
cmp
mov
xchg
inc
icebp
imul
mov
mov
or
mov
bound
sbb
push
dec
fldcw
ret
dec
mov
xchg
inc
imul
jno
jno
mov
jl
pop
mov
int3
push
imul
mov
pop
test
jmp
adc
scas
adc
adc
loop
push
scas
lea
mov
movsb
jae
pusha
mov
xor
fyl2xp1
loop
and
push
inc
xor
pop
push
dec
pop
push
into
mov
push
dec
loopnew
cmp
rcr
mov
lods
stos
in
xor
xchg
add
sub
xchg
cld
imul
fbld
and
das
or
sub
fdivl
sbb
push
inc
imul
lods
sti
fstps
lcall
popa
jo
insl
and
and
fmuls
stos
mov
insl
jae
mov
sub
sbb
jle
jle
inc
jle
pop
dec
es
shlb
mov
into
xor
test
shll
mov
xchg
test
loop
out
cmp
xchg
mov
lcall
in
pop
mov
rcrl
push
xor
inc
or
push
in
dec
push
scas
mov
fmull
test
cmp
sub
mov
xchg
imul
repz
and
and
dec
jbe
push
aam
pushl
shll
dec
push
cld
enter
lds
movsl
push
into
mov
xchg
jle
cmpsl
xchg
gs
stc
stos
je
ja
jbe
insb
dec
pusha
clc
popa
les
mov
cltd
mov
jecxz
mov
lret
in
cmp
mov
call
and
xchg
jmp
adc
mov
lea
lcall
clc
ds
imul
cmp
xorl
imul
and
mov
jle
adc
mov
lock
dec
aam
call
xor
dec
cmp
sbbb
sbb
adc
cmp
push
jbe
enter
jg
push
decb
mov
in
andl
and
sub
pop
stos
sbb
pop
mov
mov
xchg
fldl
mov
andb
mov
popa
int
mov
lock
daa
cld
fimuls
lea
add
and
ret
addb
adcl
mov
fnsetpm(287
add
jl
mov
loope
rcrl
loop
add
dec
push
xchg
jmp
stos
or
lock
or
sub
inc
dec
cmp
lahf
push
arpl
or
lret
leave
cmp
xchg
or
mov
xchg
inc
cmp
orl
jmp
in
sar
jle
or
add
dec
cmp
jg
push
jb
jl
inc
test
dec
inc
cs
loopne
int
jmp
movsl
pop
inc
ds
xor
test
xchg
outsb
jbe
mov
push
push
das
xor
iret
xor
and
mov
dec
dec
insb
xchg
loope
in
ret
xor
les
jecxz
faddp
ret
jno
je
add
adc
cmp
les
xor
aas
push
das
xchg
inc
clc
push
insl
loop
dec
mov
out
js
mov
enter
je
mov
pop
insb
jg
mov
jns
jmp
add
leave
int
xchg
push
addr16
dec
xchg
insb
into
mov
mov
jl
out
aad
sub
lahf
push
repz
push
arpl
sarl
sub
shrl
leave
and
and
cmp
test
sarb
loope
int
sub
dec
sbb
jb
gs
mov
scas
dec
and
daa
arpl
mov
push
xor
popa
adc
xchg
fs
subb
cmp
dec
test
cmp
push
jnp
sub
das
idivl
mov
inc
sbb
and
jg
insb
repnz
iret
push
push
or
sub
push
mov
sub
sbb
push
adc
or
popa
jnp
stos
or
icebp
sub
and
popf
jbe
adc
jae
rdtsc
jg
jo
xchg
mov
lret
int
leave
dec
push
data16
mov
add
shlb
push
mov
das
das
jmp
testb
mov
pop
mov
jnp
sbb
dec
xchg
outsl
pushf
or
cmp
dec
pop
sti
clc
or
add
adc
mov
lcall
jo
dec
int
lcall
push
push
or
aam
cmp
cmp
sbb
sub
pop
imul
pop
out
push
inc
pusha
push
sub
pop
cld
or
sub
lock
outsb
push
enter
pop
xchg
je
inc
add
pop
jns
in
jnp
sub
dec
sti
inc
mov
sub
cwtl
sahf
sbb
scas
jb
ret
cs
das
gs
pop
ja
js
out
adc
arpl
enter
mov
addr16
pop
clc
out
sub
xor
add
pop
push
push
testb
rcrb
add
xor
subps
sbb
mov
xchg
jmp
xor
insl
scas
jbe
xor
pop
dec
mov
sub
pop
cmp
mov
movsb
mov
push
insb
jecxz
mov
scas
test
test
jbe
loopne
jns
mov
jo,pn
push
or
out
stos
xchg
add
sbb
int3
sahf
fs
push
fwait
add
test
popf
mov
mov
mov
mov
cli
jl
mov
cmp
push
mov
iret
lahf
stos
incl
jb
test
test
and
push
xchg
leave
out
sbb
mov
mov
mov
inc
xchg
in
or
mov
mov
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
mov
xlat
lea
xchg
imul
or
add
pop
add
inc
ficoml
lcall
in
pusha
or
mov
mov
test
push
testb
push
ss
mov
les
cld
jle
aad
out
cltd
icebp
shrl
inc
cmp
test
test
test
or
cli
lret
inc
int3
sub
jno
pop
adc
out
add
jb
outsl
dec
pop
and
jbe
add
enter
lcall
cmpxchg
rcll
cmpsl
fadd
xor
push
push
bound
push
movsb
cwtl
aas
inc
or
xchg
fcmovnu
mov
jl
loopne
cmpsl
in
add
addb
lods
cwtl
jecxz
out
sbb
stos
mov
std
sub
shll
push
cld
pusha
add
mov
fdivs
ss
mov
orl
mov
mov
push
in
jecxz
mov
mov
cmp
inc
mov
mov
jmp
inc
lods
xor
outsl
and
add
ficoms
mov
push
sub
or
push
out
negl
cmc
pop
inc
inc
iret
lods
sbb
and
push
mov
sbb
pavgw
aaa
push
adc
mov
jmp
mov
pop
int
dec
add
cltd
cmp
jno
and
je
rcll
dec
aas
leave
mov
stc
popa
shlb
push
je
ficoms
imul
jae
testb
movl
pushf
mov
jge
mov
sbb
mov
inc
mov
pop
mov
dec
adc
inc
out
in
pop
add
lret
pop
mov
cmp
dec
aas
jnp
or
or
clc
sti
int
arpl
adc
imul
jg
str
inc
xchg
xlat
scas
inc
stc
loope
cwtl
hlt
dec
mov
mov
test
adc
cltd
and
and
imul
test
add
xchg
das
hlt
popf
in
bound
mov
punpckhdq
inc
and
ret
cmc
jge
jno
pop
mov
mov
xor
and
repnz
stc
jns
pop
pop
insb
pusha
mov
adc
or
lret
test
inc
jecxz
lea
scas
xchg
outsl
mov
lock
cmpl
xor
or
scas
push
lret
mov
inc
push
fiadds
fwait
cli
int
dec
sbb
xor
jnp
xchg
not
sub
in
addb
sbb
mov
push
inc
adc
dec
aam
push
pop
cmp
out
imul
push
inc
inc
mov
push
pop
jecxz
test
cmp
icebp
into
je
test
popa
push
ja
push
out
push
pop
in
iret
cmc
movsl
test
lret
rclb
xchg
mov
or
sbb
push
stos
aam
cmp
mov
roll
pop
mov
sbb
mov
mov
fistl
lea
stos
dec
mov
std
jmp
lock
xchg
fs
mov
aas
xchg
cmp
imull
push
pop
mov
dec
jne
push
sub
outsl
ret
imul
andl
movsb
cmp
cmp
ret
mov
cmc
pop
lods
push
rcrb
xor
dec
jmp
in
or
mov
inc
gs
shl
dec
lcall
mov
mov
push
les
pop
cli
sub
in
cmp
aam
sub
clc
movsl
sbb
mov
insb
fbld
inc
xchg
js
mov
pop
loop
sub
je
mov
ret
test
insl
js
adc
xchg
pop
sbb
mov
dec
and
xchg
stos
xor
push
pop
push
daa
sbb
test
cmp
fdivrs
pop
jg
mov
xchg
shlb
push
sbb
movl
and
into
or
aas
dec
jl
xor
dec
cli
lahf
icebp
jl
aam
mov
dec
pushw
mov
jmp
lods
adc
test
ficoml
aas
bswap
mov
shrb
inc
lcall
rclb
mov
mov
xor
bound
push
xchg
dec
das
inc
xchg
in
add
dec
sbb
push
sar
addl
or
ficoms
mov
shl
jecxz
sub
jp
shll
shrd
pop
dec
iret
dec
sbb
int3
adc
ds
mov
jmp
push
sbb
xchg
mov
xchg
mov
cmp
bound
ficomps
cmp
and
mov
mov
mov
lock
xchg
aam
mov
inc
pop
sbb
jle
and
out
cmp
repz
jmp
iret
lds
loope
jge
pop
outsb
mov
sub
jmp
mov
add
push
fs
lea
pop
sbb
test
sub
outsb
cmp
aas
int
je
jns
fisttpl
imul
lds
mov
sar
jg
dec
dec
or
into
or
fbld
insl
push
adc
cmp
sbb
mov
cmp
out
aas
xlat
add
sbbb
push
adc
adc
mov
call
shrb
xchg
ss
arpl
xchg
testb
sbb
dec
cs
push
pop
cmc
test
xchg
jnp
jle
call
sub
mov
movsb
aaa
and
inc
rol
mov
add
or
add
cmpsl
push
leave
loope
repnz
fidivl
in
in
mov
or
push
mov
push
sbb
dec
jg
sbb
fistl
mov
shll
sub
mov
cmc
ficoml
jge,pn
add
cmp
xor
repz
or
inc
cmp
data16
jg
sbbl
stos
in
stos
jno
dec
dec
shll
mov
inc
outsb
mov
pop
outsb
fisubrl
sbb
xorl
hlt
aas
and
push
xchg
add
scas
hlt
movb
nop
nop
push
addr16
aaa
add
mov
or
outsb
ret
or
insl
stos
cmpl
fisubl
scas
shl
in
lods
aas
cwtl
pop
jbe
mov
lea
ficoms
or
ds
outsl
hlt
jp
add
jg
stos
mov
mov
pop
adc
add
pop
add
mov
icebp
mov
fistps
fwait
cmp
adc
stos
sub
out
xchg
loopne
call
pop
data16
cltd
xchg
ljmp
pop
scas
xor
repz
xorb
rclb
les
push
xchg
mov
fstpt
sub
pop
sar
ss
add
push
push
mul
sub
imul
push
dec
push
hlt
push
jecxz
xchg
fiadds
inc
cmp
and
mov
mov
pop
filds
mov
dec
je
add
out
xor
and
mov
daa
dec
loope
dec
xchg
pop
push
xor
add
or
mov
jp
sbb
jnp
or
das
jle
xor
sub
lret
mov
roll
push
loopne
push
or
mov
push
out
pop
test
pop
repz
fwait
mov
and
lds
aaa
mov
or
frstor
popa
jo
addl
sub
push
aas
xchg
outsl
sti
cmpsb
lds
addr16
test
aam
rorb
jae
xor
xchg
xor
out
inc
dec
adc
fiadds
dec
or
repnz
roll
dec
inc
adc
push
jl
fildll
lock
lods
js
add
sbb
xchg
jbe
cs
push
dec
push
add
jmp
mov
lret
jbe
or
iret
jge
pop
cltd
pop
xchg
adcb
mov
add
dec
movsl
and
lods
sub
into
sti
dec
mov
pop
add
insl
aaa
sbb
hlt
inc
cmp
inc
outsb
mov
ss
sub
add
push
pop
das
out
mov
inc
and
mov
hlt
ret
lahf
cmp
arpl
bnd
mov
or
and
pop
adc
adc
cmp
adc
testb
inc
push
shr
jbe
cmp
ret
sub
insb
cltd
gs
insl
or
mov
push
xor
and
lcall
jmp
pop
ret
mov
outsl
scas
cmpsl
push
ja
jle
mov
andb
cmp
mov
or
leave
mov
pop
cwtl
inc
xor
inc
das
dec
lcall
adc
fstps
out
pushf
sbb
int
jp
push
fldenv
fadds
cli
pop
push
hlt
orb
dec
in
pushl
test
fnstcw
cmp
mov
mov
rcrb
dec
lea
mov
sbb
push
aaa
out
in
lods
push
jnp
fwait
outsb
or
mov
or
into
cmp
sahf
jg
dec
mov
jmp
sbb
jnp
sbb
jg
xchg
adc
fs
jo
pop
call
mov
cld
outsl
cltd
and
das
test
jl
pop
scas
push
or
or
in
push
ss
adc
inc
rclb
mov
mov
and
mov
test
mov
mov
pop
and
mov
out
fistps
xchg
mov
add
sub
arpl
fstpt
inc
mov
lds
fsubrs
rcl
inc
push
jmp
pop
fwait
xchg
jnp
push
fwait
jb
pop
jmp
mov
pop
insl
add
std
push
repnz
and
dec
mov
lcall
push
loope
int
or
push
outsl
cs
call
stos
outsl
xchg
lahf
test
cmp
int3
fdivs
in
push
lcall
test
scas
enter
cwtl
andps
mov
bound
adc
outsl
push
jg
in
imul
and
popa
sbb
and
mov
icebp
cmpsl
sbb
aas
sub
pop
rolb
mov
ss
imul
insb
fstl
cli
mov
pop
xchg
mov
test
xchg
mov
repz
orl
aam
jmp
xor
jp
dec
inc
push
dec
xorl
mov
xor
xor
cmp
pop
pop
daa
sarl
loopne
or
sub
repnz
das
cld
int
dec
addr16
aad
ds
xchg
pop
adc
testl
sub
pop
imul
inc
stc
push
nop
daa
mov
xlat
dec
cmpsb
mov
cld
ret
sub
pop
pushf
jmp
lods
push
pusha
shll
jp
arpl
jo
adc
sarb
das
in
imul
mov
mov
xchg
fisubrs
bound
cmp
or
outsb
pusha
adc
xor
push
dec
leave
data16
stos
or
out
or
std
fidivs
rcl
push
mov
mov
push
das
jp
inc
push
mov
fisubs
nop
jns
mov
dec
sbb
shl
adc
push
lret
inc
dec
lret
outsb
or
imul
out
jne
sub
mov
fs
mov
pop
outsl
push
test
adc
adc
scas
push
add
or
push
ficomps
aad
push
sti
adc
add
xchg
addl
imul
shll
adc
pop
paddsb
shrb
int3
jge
and
sbb
outsl
adc
mov
into
out
jb
push
cli
mov
mov
mov
pop
popf
testb
repz
aad
ds
mov
sar
lea
stc
arpl
mov
icebp
pop
sbb
les
xchg
xor
inc
lods
inc
subb
or
inc
mov
xor
jmp
cld
push
dec
mov
popa
xchg
pop
call
in
mov
outsb
cmpsb
inc
jb
add
cli
icebp
in
loopne
test
fisubrs
or
mov
jo
popa
stos
sub
lret
sub
inc
shl
call
aas
xchg
daa
push
test
icebp
cmp
dec
dec
cli
sti
mov
cwtl
mov
fcompl
rcll
sahf
push
movsl
xor
ret
or
sub
push
out
mov
in
std
mov
daa
lret
int3
mov
add
cltd
cmp
andb
stos
sbb
sub
sti
enter
xor
and
ljmp
sbb
test
test
cmpsl
dec
mov
sub
notb
or
add
je
out
cmp
repnz
mov
hlt
and
pop
add
xor
mov
pop
jmp
lret
push
push
repnz
dec
xor
enter
mov
push
cmpsl
inc
popf
jns
push
xlat
les
cs
xchg
add
cld
scas
mov
add
std
movsb
js
adc
dec
jecxz
mov
add
sbb
mov
push
cmpsb
int3
push
adc
aaa
mov
stos
out
je
fidivrl
add
sbb
fidivs
js
push
not
add
les
mov
inc
inc
push
lods
sub
pop
and
cmp
jmp
ror
push
shll
dec
movhps
sbb
mov
mov
out
mov
dec
xchg
jg
stc
lcall
rcll
inc
cli
stos
or
adc
ret
enter
es
pop
sub
and
jb
lcall
push
jbe
adc
or
aam
push
mov
and
test
jbe
lock
or
leave
mov
adc
in
fadd
pop
stos
negb
mov
and
mov
loop
cld
andb
mov
pusha
shlb
adc
lret
push
dec
jne
ja
cwtl
lret
fisubs
outsl
sub
cmp
push
lods
push
fistpll
cmp
jecxz
loop
or
jno
dec
jnp
jae
test
test
mov
jmp
adc
lahf
in
push
jo,pn
add
jl
jnp
inc
dec
test
lock
xor
mov
lds
adc
or
div
or
inc
shll
or
inc
add
jnp
jp
jp
mul
push
xchg
mov
or
stos
jns
cmp
jb
lret
sub
adc
inc
inc
pop
adc
dec
lods
daa
sbb
mov
xchg
enter
scas
arpl
pop
int3
sbb
pusha
mov
cli
out
or
cmpsb
cmp
repz
aas
mov
in
sahf
xchg
or
push
rcrl
cmp
pop
jge
xchg
xchg
mov
add
xchg
jp
out
and
fdivrl
iret
shll
mov
or
xor
inc
xchg
es
inc
rcrb
or
cli
sub
in
push
aas
dec
cmp
inc
or
ror
pusha
add
popa
lds
mov
push
or
add
inc
das
xchg
pop
movb
mov
push
pusha
jecxz
inc
test
fildll
add
imul
jne
data16
mov
pop
push
add
sbb
mov
xchg
sahf
cmp
je
lds
popa
jmp
jp
push
mov
push
aam
fcomi
or
jl
inc
cmpl
sub
fiadds
mov
jb
les
xor
push
aas
dec
pop
test
mov
push
lret
lcall
cmp
jg
pop
xor
rorl
in
pop
ja
lret
cmp
insb
bound
add
add
xchg
mov
repz
push
repnz
lcall
inc
insb
leave
call
mov
lcall
les
dec
mov
xchg
jg
inc
jns
dec
clc
shrl
cli
inc
loopne
and
sbb
inc
dec
pushf
jb
and
inc
insb
adc
fbld
mov
jg
xor
mov
push
mov
add
sbb
mov
mov
pusha
xor
std
and
cmp
popa
mov
pand
push
jns
xor
inc
sbb
or
pop
cwtl
sti
stc
fldcw
xchg
or
sahf
jecxz
push
addb
das
pop
mov
adc
lods
push
xlat
je
push
mov
stc
or
and
xchg
hlt
cmp
outsl
mov
push
adc
sbb
adcl
add
mov
lock
push
adc
fistl
push
and
ret
sub
outsb
jae
mov
push
jp
test
ja
push
orl
stc
imul
push
xchg
ret
push
push
pop
mov
jne
sahf
leave
sub
outsb
stos
sbb
mov
xlat
push
add
scas
adc
lcall
pop
icebp
sarb
aam
imul
lds
mov
mov
out
and
dec
cmp
mov
in
in
movsl
sahf
and
or
jp
xor
mov
lret
filds
push
add
daa
lret
addb
inc
insb
inc
push
push
fmulp
loopne
inc
sub
mov
cmpsl
jl
sub
add
dec
test
out
movsb
ficoms
lds
pop
cmp
push
test
stc
and
jno
push
shrb
fs
add
inc
cmp
inc
lods
mov
and
pop
clc
jl
andb
xchg
scas
mov
clc
push
test
sbb
outsl
xchg
bound
jns
fldcw
pop
lret
mov
mov
jno
jle
add
jo
add
add
sbb
mov
dec
sti
data16
mov
mov
iret
add
mov
scas
jle
insb
sub
shll
cld
lret
push
mov
scas
icebp
ljmp
pop
jnp
sti
daa
lcall
pop
jbe
push
push
xorl
and
inc
xchg
or
mov
movsl
mov
sarl
xor
dec
adc
inc
mov
inc
es
and
lods
mov
sub
rcrb
ljmp
sub
shr
xor
sahf
dec
data16
jne
pop
fdivrs
std
inc
lods
add
add
out
mov
lds
cli
jne
popf
add
aad
inc
into
pop
outsl
js
rcrb
clc
mov
pop
sub
inc
and
adc
fwait
jle
fnsetpm(287
pop
adc
lock
rclb
insb
sahf
cmc
popa
je
in
arpl
xchg
sti
aam
mov
push
shll
inc
cmp
xchg
push
lods
clc
xor
notb
dec
stc
pop
std
mov
inc
cli
dec
dec
and
jmp
add
xlat
js
jg
icebp
outsl
arpl
leave
jl
fidivl
mov
xchg
push
divb
movsb
pop
movsl
dec
ret
adc
mul
and
xor
lahf
addl
or
xlat
add
aaa
dec
in
add
andb
cld
test
xor
inc
and
add
pop
add
stc
mov
stos
lret
and
mov
loope
lods
out
addl
mov
xor
cli
push
adc
test
in
sub
cmpsb
xor
push
fcoml
lock
inc
xchg
pop
repz
ljmp
outsl
fnsave
scas
rcl
or
mov
ret
mov
cmp
clc
sbb
mov
aaa
or
enter
or
aaa
cltd
aad
pushf
lret
dec
xlat
add
and
je
xor
dec
or
rorl
movsl
and
insl
pusha
cmp
jg
ja
int
jne
dec
into
js
xchg
stc
xchg
movsl
cmp
jecxz
and
xchg
inc
pop
outsb
cli
insb
stos
adc
mov
aas
insl
and
cmc
cli
imul
sbb
sbb
shlb
and
adc
or
cmp
sbb
pushl
jecxz
popf
mov
jl
pop
sub
xor
pop
add
mov
pop
and
mov
push
push
push
stc
mov
into
stos
jp
xor
gs
rol
mov
das
mov
pop
or
test
mov
pop
hlt
or
mov
inc
loope
pop
sbb
dec
or
xchg
and
out
dec
inc
scas
movsb
jmp
divl
setae
shlb
or
adc
push
mov
mov
adc
into
pop
add
data16
push
inc
pushf
rorl
push
push
xchg
sbb
lret
je
xor
out
dec
arpl
pop
scas
jbe
xor
jmp
repz
ficompl
mov
aas
imul
mov
movsl
dec
shll
adc
and
ss
int3
in
sbb
add
pop
test
add
cld
push
mov
mov
sbb
mov
arpl
and
lods
mov
pushf
inc
dec
inc
mov
test
cwtl
cmp
out
test
cmpsl
mov
je
ret
xchg
push
xchg
test
jmp
cmpsb
imul
int
jo
insb
xchg
fcompl
dec
jae
pop
cmpsl
scas
xchg
out
mov
mov
cltd
pop
jg
stc
xchg
popa
shll
ss
lds
jns
or
shl
repnz
test
xor
leave
ja
mov
pushf
insb
mov
mov
sti
subb
bound
ret
pop
cmp
loopne
sbb
jle
adc
mov
push
xor
insl
pop
mov
add
jp
cmp
ss
cmc
movsl
mov
mov
cs
fists
stc
mov
mov
shl
add
push
pushl
push
mov
jae
xchg
pop
sub
mov
sbb
ficoml
aad
gs
push
and
adcb
scas
rorb
loope
lcall
add
and
sub
leave
jge
xchg
or
xchg
aam
cmp
ja
cmp
jge
aas
mov
jl
and
mov
lahf
mov
dec
mov
pop
cmp
dec
pop
cmp
sahf
shll
or
daa
call
and
jl
std
or
xor
test
pop
scas
iret
xor
push
insb
dec
xor
and
xor
arpl
out
mov
in
imull
sbb
dec
xor
in
dec
sub
stc
ret
call
push
mov
mov
pop
rorb
das
cld
jns
xor
xchg
xchg
lahf
jl
ljmp
adc
inc
dec
lea
cmpsl
jg
sahf
das
bnd
cmp
push
int
hlt
adc
mov
fsubrs
sete
jle
andl
xchg
sbb
mov
fcoms
ucomiss
adc
xor
out
and
dec
cmp
dec
pop
je
pop
fmul
out
add
jg
push
shl
pushf
mov
pop
mov
rclb
arpl
data16
rcl
inc
push
movsb
add
lods
shll
loope
inc
sub
add
shll
cld
outsb
xor
fmul
xchg
jno
popa
jg
pop
gs
pop
pop
inc
pop
fcoms
test
in
xor
pusha
orl
push
arpl
scas
mov
dec
lds
adc
add
mov
mov
stos
ljmp
test
jnp
dec
fwait
cmp
or
jno
sub
xchg
xor
fs
sub
repnz
jne
jg
psraw
adc
lret
shll
xchg
adc
outsl
popa
xchg
loop
adcl
sub
cli
rorb
mov
pop
and
idivl
stos
sbb
jnp
lock
mov
imul
mov
in
xorl
cmpsb
push
or
xchg
inc
mov
add
mov
roll
add
fldcw
lods
xchg
jge
loop
cmp
inc
aas
jge
in
and
hlt
outsl
fldenv
lds
and
and
arpl
dec
adc
inc
sub
push
mov
sub
sti
xlat
movsl
inc
mov
repz
jne
xchg
jle
sub
test
sbb
xchg
xor
jbe
dec
mov
rclb
jno
stc
scas
fcmovne
sbb
movsl
cmpl
inc
xor
mov
xor
mov
cmpb
bound
nop
call
ret
push
push
bound
hlt
mov
cmpsb
fcoml
das
lock
stos
fimull
push
mov
cmpsb
xor
mov
add
into
inc
mov
sub
sbb
sub
cmp
sahf
cmpsl
jecxz
cli
push
movsl
gs
mov
sbb
frstor
jle
into
imul
hlt
sub
ss
or
xchg
dec
sbb
inc
jg
adc
or
adc
inc
push
repnz
testb
in
int
sub
push
inc
or
fwait
pop
adc
pop
rol
outsl
and
and
add
sti
or
mov
loop
xchg
sbb
pop
dec
jno
rcrb
mov
inc
cmp
jo
imul
in
xor
mov
lock
sbb
add
mov
mov
popa
sub
add
pop
add
insb
sub
xchg
mov
pop
imul
jbe
in
stos
bound
inc
dec
insl
enter
mov
mov
mov
cmpl
cld
cmc
xor
jmp
adc
rep
imull
add
scas
and
call
jmp
mov
sub
mov
popf
shrb
inc
lahf
daa
sbb
icebp
test
fnstenv
stc
jno
sahf
sub
stc
xchg
mov
cmp
fwait
dec
pop
jns
push
mov
ret
data16
cmp
jg
mov
bound
sbb
fs
int3
fs
jmp
cmpsl
cmp
les
loope
and
mov
lods
fisttpl
fsts
les
inc
cs
pusha
shrl
ficompl
jp
leave
repnz
fimull
xchg
insl
sub
dec
pushf
psrlw
push
xchg
inc
ds
das
sbb
inc
cmp
fnstenv
aas
mov
inc
dec
jg
push
jmp
mov
popa
add
loop
mov
dec
pop
in
or
xor
dec
sub
je
lret
outsl
and
les
push
imul
and
adc
cmp
xchg
xor
negl
mov
fs
mov
cmp
push
jbe
out
cli
push
mov
adc
push
mov
push
je
add
push
imul
dec
or
xchg
mov
or
mov
xchg
jb
sahf
out
adc
roll
idivl
aam
cld
lcall
clc
jmp
lret
ret
adc
pop
push
xor
or
xchg
sub
test
aaa
xchg
adc
in
or
pop
sbb
lahf
sub
mov
cli
call
cwtl
cmp
push
mov
movsl
or
jo
pop
xor
or
add
adc
pop
testl
push
adc
out
push
add
std
ret
call
cmc
mov
sbb
ja
sbb
leave
add
jae
fiadds
std
clc
xchg
add
pop
aaa
cs
cmpb
cmp
ds
or
pop
lcall
push
imul
adc
es
xlat
mov
and
scas
test
inc
dec
xchg
popf
icebp
subb
pop
inc
push
test
push
jle
add
iret
in
loope
inc
outsl
sarb
inc
adc
cmp
xchg
int3
pushw
or
pushl
add
jmp
mov
cmpb
adc
mov
scas
xlat
mov
dec
and
dec
xor
ficoml
inc
and
out
adc
ljmp
xor
or
add
jbe
lret
pop
pop
sbb
je
loop
xor
ficompl
ss
jno
imul
sahf
andl
push
movsb
push
mov
movsb
cmpsb
pop
dec
push
jne
lcall
adc
pop
jo
movsb
cmpsb
mov
inc
aas
xor
test
daa
icebp
pop
hlt
cmc
into
add
jg
repz
push
dec
push
out
loope
data16
adc
ret
jb
dec
insl
sbb
or
pop
jbe
pop
jge
push
jge
jge,pt
insb
mov
sub
sbb
push
xchg
cmp
iret
rcll
stos
add
daa
xchg
loop
shrb
push
sbb
out
mov
fwait
mov
push
ret
xchg
lcall
mov
jb
sub
jmp
lea
sbb
jne
aam
mov
xchg
lods
mov
mov
sub
jb
jnp
inc
or
fisubl
xchg
add
sets
push
sbb
cmp
inc
push
mov
mov
sbb
xchg
fdivrs
mov
rcr
fcompl
mov
mov
adc
xor
adc
shrb
xchg
data16
enter
pop
jecxz
addr16
and
adcl
imul
popa
in
add
xchg
push
mov
popa
pop
dec
mov
push
mov
inc
cmp
fcoml
cmp
lcall
leave
mov
pop
fsubl
inc
cli
in
rorb
push
and
jnp
cwtl
adc
movsb
sub
sub
sbb
push
loope
lods
lods
mov
hlt
inc
adc
shlb
ret
or
lods
ret
mov
clc
dec
mov
sbb
rorl
daa
sub
in
das
pop
movsl
xor
mov
ss
adc
push
jle
imul
ds
or
imul
sbb
push
scas
loopne
repz
lock
add
loope
dec
ficomps
das
push
fmull
inc
not
std
fstpl
jmp
shl
sbb
frstor
cmp
cltd
leave
dec
xchg
xor
cli
insl
rclb
jne
cmpsb
push
insl
sbb
cmp
pop
imul
dec
mov
rorb
sbb
mov
jg
cvtps2pi
int
sbb
out
mov
in
and
jmp
insl
lcall
pop
jmp
inc
mov
jl
rorb
aaa
jns
add
adc
lahf
inc
stos
shl
xlat
call
adc
sub
dec
pop
and
rolb
test
jmp
xchg
adc
loopne
sub
in
jno
dec
popa
loop
mov
or
mov
add
and
out
push
sub
fwait
sub
out
movsl
loopne
test
rcll
loopne
and
filds
ja
jecxz
cmp
add
and
mov
outsb
or
pushaw
out
test
xchg
lds
cmp
cwtl
sbb
cmpsb
dec
lcall
fs
inc
outsl
clc
dec
jp
fbld
rorl
dec
push
mov
and
das
pusha
in
adc
jmp
jae
gs
lods
lcall
sbb
insb
ds
jnp
mov
dec
or
std
test
cmpsb
sahf
mov
popf
lods
pop
cld
pop
or
or
orl
nop
push
stos
cmc
subb
daa
std
dec
sbb
sub
cld
enter
mov
ds
xlat
mov
mov
aas
scas
mov
sub
cli
xchg
push
jmp
or
adc
mov
jbe
out
cmpsl
sub
imul
outsb
daa
push
dec
aas
sbb
nop
or
mov
cli
mov
push
push
xor
pop
in
xlat
sbb
adc
std
pusha
lcall
out
push
out
stos
adc
add
cwtl
and
add
adc
mov
push
adc
and
cmp
add
adc
add
add
in
add
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
sbb
sub
xor
cmp
ss
ss
ss
ss
aaa
imul
aaa
xorb
aaa
lcall
aaa
ret
aaa
shll
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
loope
out
hlt
cmp
or
add
add
dec
add
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
xor
inc
cmp
pop
cmp
add
or
add
push
xor
xor
jae
jns
test
mov
xor
xor
xor
xor
xor
xor
xor
addr16
xor
cmp
arpl
xchg
xchg
xor
mov
xor
pop
aaa
jb
jnp
test
mov
xchg
aaa
sahf
aaa
lods
aaa
mov
shll
aaa
into
aaa
call
cmp
cmp
cmp
cmp
cmp
pop
cmp
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
idivl
cmp
adc
and
daa
cmp
cmp
cmp
cmp
xchg
cmp
cmp
sub
cmp
jae
jle
xchg
movsl
cmp
lret
cmp
fidivrs
cmp
dec
ds
ds
ds
add
xor
xor
dec
xor
pop
xor
ja
xorl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xlat
xor
jno
jle
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
dec
cmp
lahf
movsl
loope,pt
jmp
clc
aas
add
add
add
add
or
adc
sbb
xor
inc
xor
pusha
xor
insb
xor
mov
lahf
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
pusha
xor
xor
xor
xor
repnz
xor
xor
xor
xor
jl
dec
cmp
nop
ds
fstpt
add
add
add
add
xor
pushf
xor
xor
xor
xor
xchg
xor
scas
xor
int3
xor
sbb
daa
aaa
sub
xor
jbe
xchg
cwtl
cmp
cmp
in
cmp
cmp
cmp
push
cmp
push
cmp
cmp
sbb
add
mov
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
xor
je
js
xorb
xor
lods
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sbb
xor
inc
xor
pop
xor
xchg
xor
scas
xor
into
xor
in
xor
or
adc
sbb
sub
xor
ds
ss
ss
ss
jo
jnp
xchg
mov
xchg
ss
ss
fdivs
fbstp
in
in
divl
add
or
push
aaa
and
aaa
aas
aaa
inc
aaa
push
aaa
pop
aaa
data16
imul
aaa
xorl
aaa
mov
mov
aaa
aam
out
in
aaa
stc
aaa
or
push
cmp
sbb
and
sub
xor
cmp
cmp
data16
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
outsl
cmp
cmpl
mov
sarb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
bound
jle
test
xchg
cmp
cmp
sarb
fnstsw
out
cmp
cmp
cmp
cmp
cmp
dec
cmp
pop
cmp
cmp
jle
test
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
cmp
jno
ja
jg
test
add
add
cmp
xchg
xor
xor
xor
xor
xor
xor
xor
xor
jne
nop
xor
xor
xor
movsl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
ss
push
xor
jl
xchg
xor
xor
cmp
inc
aaa
push
aaa
pop
aaa
push
aaa
xorl
cltd
aaa
lahf
aaa
xor
test
lods
cmp
xor
aas
ds
ds
ds
jnp,pt
sahf
mov
rolb
add
add
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
and
add
add
add
and
and
sub
sub
xor
xor
cmp
add
add
add
sbb
sbb
and
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
adc
sub
pop
xor
je
lods
xor
sbb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
jo
add
add
add
mov
cmp
cmp
cmp
mov
add
in
ss
ss
ss
add
add
or
