push
mov
sub
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
adc
push
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
pushl
pushl
push
call
xor
or
dec
mov
jmp
mov
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
and
mov
sbb
andl
or
movl
xor
or
xor
movl
mov
add
mov
add
xor
add
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
orl
xorl
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
subl
xor
dec
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
addl
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
mov
mov
mov
xor
mov
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
jmp
out
add
outsb
sbbl
hlt
pop
stos
xor
bound
lret
bound
sub
pop
add
pop
jne
bound
iret
lret
hlt
inc
aam
cltd
add
pop
jno
mov
daa
mov
shrb
adc
and
dec
fbstp
mov
jo
dec
pushf
pop
jae
sti
push
push
pop
cmp
add
push
jge
mov
mov
stc
inc
popf
xchg
in
fstpl
jg
cmp
mov
dec
loop
inc
orb
inc
pop
mov
xor
sbb
inc
add
dec
nop
xchg
dec
mov
pop
les
sub
vpsubusw
mov
test
bound
in
push
subl
imul
jp,pt
jbe
cmpl
scas
inc
mov
or
pop
xchg
dec
mov
scas
mov
loope
pop
data16
mov
int3
test
hlt
xchg
insb
mov
les
jns
xor
sub
lcall
dec
repz
pusha
neg
dec
add
xchg
sbb
or
add
test
cmp
xor
xchg
mov
test
sbb
mov
jnp
insb
loop
push
fmul
jb
add
imul
inc
shr
adc
pop
xchg
xchg
jge
rcr
ret
pop
js
std
push
dec
ret
dec
hlt
inc
test
xor
mov
outsl
rorb
xchg
shrl
push
scas
sbbl
pop
sub
test
xchg
mov
mov
fdivp
and
xlat
out
push
mov
shrl
movsl
in
jo
mov
mov
pushl
and
insb
push
rcll
fmull
inc
shrb
cwtl
inc
subb
fldenv
sbb
daa
inc
fisttps
lds
popa
inc
xchg
sub
cmpb
cmpsl
sarb
mov
fwait
mov
pop
dec
xor
pop
sahf
jnp
scas
xchg
int
loop
xchg
cli
dec
pusha
ret
insl
push
or
mov
adc
call
sbbl
je
xchg
in
lret
mov
data16
dec
out
cltd
add
daa
insl
icebp
aam
lea
shl
arpl
dec
adc
jne
sub
cmp
push
push
cmp
pop
mov
inc
xchg
ss
sub
in
xchg
scas
int3
sub
shr
dec
and
push
inc
xor
inc
adc
pop
pusha
sti
aad
jbe
mov
movsl
mov
xchg
bound
movsb
insl
gs
jecxz
lods
outsb
test
inc
add
lret
out
adc
xlat
mov
out
pop
push
xchg
clc
test
mov
mov
pushf
mov
mov
and
cwtl
mov
mov
lcall
adc
mull
jl
test
jbe
or
jmp
add
mov
aas
cmp
jns
xchg
rorl
mov
inc
xchg
icebp
xchg
xorl
cwtl
bound
shlb
cmp
jbe
cmpsl
mov
pop
cmp
jbe
push
push
ret
mov
jae
aam
imul
pop
sbb
push
jns
js
shlb
stos
add
stc
ret
fisubl
pop
in
test
loopne
lahf
dec
mov
jmp
popf
pop
int3
mov
sahf
xor
jge
pop
sub
sbb
sbb
mov
mov
mov
push
mov
cmp
test
scas
insl
lods
add
inc
cmp
and
pop
aad
xor
sbb
push
inc
dec
ror
jp
sahf
test
dec
inc
pop
push
cmpb
adc
mov
into
pop
and
testb
loop
dec
mov
sahf
ficoml
xor
iret
flds
mov
cmpsl
jmp
in
rol
insb
aas
xchg
repnz
data16
push
mov
test
or
cmp
sbb
popa
fwait
movsl
sub
sbb
jbe
push
call
xchg
nop
fcmove
adc
push
jno
mov
outsl
mov
stos
pop
push
sub
and
inc
jmp
adc
lods
imul
push
xor
adc
imul
cli
ret
loope
mov
or
sub
pop
push
cmp
sub
cmc
jbe
lahf
add
das
int
sbb
sarl
sbb
jne
dec
das
hlt
adc
loope
dec
sub
sahf
lods
sub
jns
inc
mov
gs
test
mov
jb
fwait
es
sbb
jno
mov
aaa
mov
sbb
addb
aas
jnp
rcrl
shr
inc
xchg
jmp
mov
cmp
fiadds
xchg
rolb
negb
push
sub
adc
fcoml
xchg
fisubl
in
mov
mov
pop
push
push
jns
inc
dec
enter
xor
gs
or
push
inc
mov
pop
mov
jmp
iret
xchg
or
lahf
icebp
orb
sub
lcall
and
mov
insb
inc
xchg
fdivs
cmpsl
movsb
lcall
or
mov
push
and
pop
add
aas
sub
push
inc
jl
inc
sub
xchg
add
dec
dec
ds
sub
dec
inc
sbb
jb
lds
sbb
jg
or
sbb
fldcw
or
cmpsl
xchg
xchg
das
in
imul
out
incl
mov
nop
pop
inc
out
lods
xlat
mov
mov
clc
xchg
int
cmp
jns
cmp
test
jnp
ds
iret
push
inc
push
inc
cmp
mov
idivl
mov
jo
enter
stos
enter
or
sbb
xor
jl
cmp
and
sub
mov
dec
xchg
mov
jl
jle
js
icebp
inc
aas
push
mov
and
xchg
call
in
dec
jp
fcomp
lods
dec
mov
popa
jl
xchg
sub
test
mov
xor
inc
and
pop
loopne
fisttps
fs
pop
jp
add
jle
cmp
leave
xorb
jnp
mov
pop
mov
xlat
dec
cs
or
popf
and
decb
dec
jle
push
push
out
inc
add
mov
lods
and
pop
and
movsb
stos
or
push
test
mov
inc
mov
sbb
mov
jnp
cld
ret
into
imul
movsb
out
sbb
call
cmp
mov
dec
nop
leave
jl
xchg
shll
les
and
and
fdivrl
mov
scas
mov
xlat
jae
icebp
inc
adc
int
xchg
push
pop
push
xchg
jmp
movsb
push
push
xchg
inc
into
sbb
and
into
mov
xor
xchg
mov
insl
insb
iret
mov
lea
add
lcall
jp
pop
sbb
fidivl
pop
cltd
inc
adc
push
push
jno
fwait
jns
hlt
push
mov
fldt
pop
fistpll
push
in
pop
add
jle
gs
sahf
mov
xchg
insb
pop
push
xchg
fisttps
mov
xor
pop
jbe
cmpsl
cld
add
cmp
outsb
sbb
lods
xor
jae
push
pop
push
jne
inc
pop
fbld
add
data16
dec
push
mov
jbe
hlt
loope
add
sub
sti
mov
mov
dec
fimuls
lea
test
test
cmpsl
xchg
mov
xor
jno
or
adc
int
nop
outsl
addr16
pop
loope
lret
inc
sbb
daa
jo
loope
aaa
cmpsl
add
xchg
fwait
movsb
loope
cwtl
loope
loope
dec
cmpsb
mov
dec
add
sbb
fmuls
mov
dec
xchg
ret
lods
orl
inc
call
or
mov
mov
jecxz
adc
addb
test
imul
mov
jns
sbb
cwtl
sub
add
sbb
sarb
pop
call
adc
sbb
mov
orl
mov
stos
mov
out
mov
lcall
push
and
jmp
movl
shlb
xchg
lcall
mov
mov
dec
inc
adc
popf
fimull
pop
pop
fcomps
push
pop
jg
push
out
mov
mov
loop
icebp
add
rclb
pop
test
adc
sub
ret
mov
out
xchg
sub
dec
push
push
sub
cmp
add
bound
outsb
or
xor
or
sub
cmpsl
adc
imul
inc
inc
jmp
xchg
insb
popa
packuswb
add
xchg
dec
adc
pop
inc
jo
pop
inc
xor
add
leave
adc
mov
xrelease
mov
movsl
xchg
fcompl
push
out
xchg
mov
incb
sub
push
ret
ja
xchg
scas
das
sbb
adc
les
add
cmp
ja
das
pop
xor
xor
xlat
sahf
cwtl
arpl
in
sub
cmp
mov
ret
xor
jb
add
mov
mov
xor
cmp
mov
andl
dec
xchg
ret
jns
scas
insl
lock
addr16
xchg
loopne
adc
in
sbb
mov
lods
gs
sbb
inc
jmp
shr
ret
sbb
aam
cwtl
and
ret
int
mov
add
test
or
insl
mov
cmp
lods
enter
cmpxchg
stc
jnp
in
cmpsb
int3
popa
add
es
pop
cs
and
pop
out
inc
push
push
test
dec
pop
sbb
push
insb
outsl
inc
enter
scas
or
movsl
cmpsl
pop
adc
jne
adc
rcrl
dec
ficoms
jp
lds
mov
mov
aam
stos
jbe
dec
inc
pushf
cwtl
mov
pusha
jle
mov
or
push
insb
xor
sbb
xchg
hlt
clc
test
adc
ds
sub
hlt
daa
lret
cmc
sub
sbb
sub
jnp
pop
cmp
daa
es
fs
sbb
add
out
pop
sub
es
outsb
insb
nop
loope
and
mov
or
pop
jne
mov
shrb
repnz
iret
xor
pop
pusha
lods
mov
out
das
pop
or
in
push
and
adc
mov
xor
push
jne
and
sbb
fisttps
pop
xor
add
pop
mov
cld
jbe
jmp
inc
mov
dec
mov
rorl
out
cmp
mov
aam
scas
sub
mov
mov
sub
lret
in
push
mov
sbb
pop
shrl
adc
arpl
sbb
or
cmp
cltd
dec
cmp
bound
xor
cmp
pop
sbb
xor
xchg
scas
inc
xchg
dec
out
aaa
stc
imulb
xacquire
stos
add
dec
cmp
xchg
jge
pushf
scas
cs
cmpsl
inc
adc
pop
pop
push
adc
inc
ffreep
or
jne
jne
dec
ja
xor
lahf
icebp
es
sub
loope
adc
sbb
cwtl
mov
pop
jnp
test
dec
mov
sbb
mov
daa
push
dec
movsb
pop
dec
mov
in
shrl
and
jo
mov
mov
or
mov
mov
ss
aam
jg
test
notb
mov
sar
cltd
out
xchg
adc
cmp
inc
daa
mov
xlat
pop
sbb
sub
inc
push
outsb
cmp
xor
cmpsl
and
add
sub
xor
dec
rcrl
lahf
je
cmp
mov
in
jle
pushf
or
and
mov
fwait
sbbl
icebp
bound
loopne
mov
push
cmp
or
fldt
loop,pn
push
or
int
faddp
and
cmp
jmp
fwait
push
add
fdivs
mov
xchg
jns
xchg
jl
rcrb
inc
mov
push
sub
dec
test
push
je
adc
jnp
aam
mov
cmp
inc
hlt
lds
xor
push
ds
jmp
inc
push
jno
inc
aam
imul
jmp
fwait
adc
andl
xor
jno
lock
cmpsl
jl
insl
sbb
jo
inc
push
push
scas
rorb
adc
sub
jmp
jge
pop
scas
xor
pop
in
jo
mov
ret
aaa
dec
xor
cld
test
ret
das
inc
mov
add
movsl
add
sub
out
test
and
aam
test
mov
mov
and
xchg
add
and
inc
imul
mov
mov
mov
mov
sbb
popf
stc
push
pop
lods
push
push
sbb
add
or
loop
insl
mov
dec
inc
mov
lret
inc
fwait
lret
adcl
icebp
clc
push
idivb
mov
pop
std
loop
leave
repnz
cmp
das
dec
jmp
call
ret
push
fldenv
dec
cmp
mov
arpl
or
push
xchg
jnp
fs
in
jl
out
aas
inc
pop
add
xor
gs
sub
and
add
push
mov
pusha
out
out
add
xchg
dec
je
cmpsb
sbb
ret
loopne
sub
xor
add
lahf
loope
mov
push
enter
test
mov
dec
jmp
pop
jmp
dec
cmp
dec
fyl2xp1
lods
inc
dec
mov
js
aas
adc
xchg
insl
jg
adc
mov
adc
pop
add
and
and
jne
js
xor
out
leave
orb
jo
aad
adc
or
jge
loope
mov
mov
mov
nop
inc
pop
mov
mov
stos
in
adc
adc
jb
jl
pop
out
mov
out
sarl
in
es
dec
cmc
into
das
cld
or
jo
jge
loop
pop
sub
pop
push
or
aad
xchg
cmp
scas
outsb
jp
adcb
push
stos
sub
fsubrs
dec
cli
xor
movsl
les
or
lods
fisttps
out
xchg
mov
adc
daa
out
sbb
lock
out
push
nop
ja
sbb
sahf
mov
lret
divl
pop
incb
int3
mov
pop
push
dec
and
cmp
push
xor
and
aas
push
les
mov
add
rclb
mov
imul
arpl
inc
inc
shll
cmp
out
pop
inc
ds
pusha
mov
or
loope
orl
cmc
mov
cli
movsl
cmp
rcrb
imul
leave
xlat
scas
dec
fiaddl
sbb
ret
pop
hlt
ljmp
mov
outsl
jne
mov
js
xor
sbb
and
outsl
negl
adc
cmp
addl
push
mov
adc
into
mov
add
push
mov
push
cmp
es
xor
ljmp
dec
and
insl
add
je
mov
enter
in
scas
rorb
push
daa
int3
in
lods
push
aad
dec
jmp
mov
jbe
sbbl
clc
inc
push
in
stos
xchg
push
popf
sub
insl
push
mov
hlt
push
nop
in
jno
icebp
push
cmpb
adc
dec
enter
jbe
daa
scas
mov
fadds
jae
int3
sub
xchg
fimull
fwait
or
in
movsl
jmp
xchg
in
cmp
mov
jns
and
cwtl
pop
pop
cli
aaa
sub
pop
daa
ja
movl
es
mov
inc
mov
insl
idivb
sub
lea
lcall
hlt
push
popa
popf
mov
xlat
push
sub
fistpll
pop
sbb
filds
fnstsw
sub
scas
test
cmpsl
inc
inc
push
jle
lahf
dec
inc
jp
hlt
adc
ds
add
enter
ds
dec
hlt
test
adc
xchg
mov
movsb
push
add
xchg
out
jo
xchg
sbb
data16
jg
pop
push
movsl
sub
sti
push
add
ja
flds
mov
lret
enter
sub
dec
int3
pop
int
enter
pushf
test
sub
dec
inc
movb
daa
and
fcmovnb
cmp
push
add
ja
cmc
int3
push
scas
and
insl
in
lods
dec
in
and
lods
xor
push
fstpt
add
fwait
movsl
icebp
jne
insb
popa
cmp
dec
icebp
add
das
xor
dec
aaa
mov
outsb
aaa
sub
lahf
fwait
lret
mov
jl
push
xchg
pop
mov
mov
addr16
decb
or
add
daa
dec
xchg
push
lds
movsl
mov
push
out
inc
mov
out
insb
pusha
out
or
mov
jg
pop
imul
frstor
idiv
mov
in
int
int3
nop
lret
int
fwait
cmp
fwait
cwtl
sahf
sub
sub
mov
xchg
loop
inc
hlt
mov
in
xlat
fmuls
daa
aad
xchg
cmp
lods
mov
mov
call
inc
popa
pop
inc
jbe
push
scas
outsb
ficomps
sbb
jg
jle
movsl
jae
pop
push
cmp
mov
in
test
push
push
cmc
mov
push
mov
outsl
mov
jnp
cmp
bswap
dec
mov
or
xchg
pop
push
icebp
inc
mov
dec
jnp
jl
push
lods
push
sbb
cltd
or
sub
dec
nop
push
ffree
cmp
mov
cs
int3
rolb
fisubl
xor
jne
jb
andl
in
mov
inc
jp
and
nop
pop
decl
stos
add
fnstcw
out
sub
dec
test
dec
enter
fcmovnb
xchg
stc
adc
mov
jns
xchg
mov
add
testb
or
mov
call
test
dec
test
aam
out
popa
mov
pop
mov
addr16
sub
lock
pop
es
out
fnsave
test
adc
xchg
inc
sbb
cmp
test
stos
mov
pop
nop
int3
gs
shll
sti
rclb
inc
es
and
into
mov
mov
ds
lods
add
arpl
push
jecxz
mov
sbb
shll
nop
lds
sub
les
sti
xchg
das
mov
scas
push
out
imul
ret
or
inc
ret
leave
cmp
shl
pop
movsb
sub
lcall
cmpsl
mov
cmp
stos
aaa
add
stc
add
repnz
mov
mov
test
in
and
and
xchg
adc
xor
mov
pop
xor
in
ret
dec
xchg
jmp
out
fwait
imul
adc
loop
enter
pop
js
xor
sahf
std
sahf
cmpsl
sbb
ja
loope
into
cmp
inc
inc
adc
jmp
shrb
movsl
jae
cmpsb
pop
pop
repz
lcall
mov
leave
pop
fidivl
mov
mov
jne
fs
imul
enter
pop
cld
test
fs
subl
and
cltd
loope
das
stc
pop
xor
ljmp
adc
xor
cwtl
pop
aam
cmovs
bound
mov
testb
test
mov
aam
pusha
sub
and
popf
mov
sbb
jbe
repnz
fxch
daa
sub
dec
les
rcrl
push
xchg
push
cmpsl
stos
cmc
sub
jo
pop
push
mov
in
shrl
repz
int3
xor
std
cmp
fisubrs
dec
sub
inc
dec
loope
adc
cld
mov
sub
mov
pop
push
add
dec
cmc
push
cli
pop
xor
mov
jae
ss
shlb
lret
and
ja
xlat
sub
add
lret
sti
jle
sbb
jae
inc
inc
jns
push
fimuls
inc
sub
daa
push
arpl
fsts
push
lcall
imul
adc
push
dec
xor
jne
adc
jnp
jmp
lret
lret
lea
push
pop
and
fcmovnb
out
adc
lret
ja
inc
jge
sarb
jne
daa
das
mov
sbbb
fcomip
pop
jbe
fists
mov
cmpsb
in
addr16
addr16
xlat
add
xchg
test
lcall
repz
or
push
jle
push
je
out
adc
daa
fcmovu
dec
cmp
mov
in
addr16
repnz
repz
dec
sarb
pop
sub
ret
icebp
dec
inc
repz
ret
pop
jle
xchg
rolb
mov
jne
fdivl
mov
js
cmp
xchg
arpl
dec
adc
pop
fimuls
mov
dec
clc
push
adc
rolb
cmpsb
int3
fadds
sub
mov
jb
ss
xor
cwtl
repnz
xor
cltd
lods
sub
xchg
test
jge
popa
pop
ljmp
adc
or
jmp
cld
fsubp
je
fs
shrb
and
icebp
shrl
sbb
bound
bound
bound
push
repz
cwtl
jbe
fisubs
mov
cld
xorl
jge
rcll
clc
les
mov
cmpsb
dec
jns
sub
add
mov
data16
sbb
pop
ret
sub
push
fisubrl
shlb
fbld
sbb
js
xchg
adc
mov
xor
push
sahf
pusha
mov
mov
adc
mov
push
sarl
adc
sub
sbb
mov
sbb
xor
jle
fwait
sbb
insb
lcall
sub
hlt
cwtl
lret
pop
imulb
sbb
adc
sbb
loop
inc
inc
sahf
scas
les
ret
xor
andb
push
jno
int
jnp
push
fildll
fstl
push
into
ds
mov
push
or
adc
and
push
stos
adc
gs
out
cmc
pop
add
fldlg2
daa
sahf
into
push
push
ds
and
or
stos
shlb
pusha
xor
dec
sahf
add
inc
mov
iret
int3
hlt
mov
shrl
jb
sub
nop
xchg
dec
sub
mov
xchg
mov
mov
sub
popf
sbb
xchg
dec
cltd
sbb
sub
jp,pn
pop
clc
lahf
add
aas
loop
hlt
add
cmp
dec
clc
leave
loopne
sub
shlb
pop
ficoml
es
cwtl
and
adc
into
fwait
lcall
lret
pop
jae
pop
dec
pushf
fs
add
lock
pop
and
pop
xchg
adc
xchg
dec
or
or
insl
cmp
mov
repz
in
sbb
or
pop
push
iret
jp
in
jb
in
clc
aas
out
and
outsl
inc
pushf
in
pop
sub
mov
aam
sub
push
push
add
mov
pop
mov
loop
push
adc
data16
fnsave
pop
fld
icebp
das
push
fwait
loop
xchg
or
xchg
mov
addr16
sub
sti
mov
jmp
fsts
cld
rclb
adc
outsb
mov
jl
add
fldl
xor
aas
cld
roll
pop
bnd
dec
and
push
nop
push
sub
and
and
das
push
mov
add
popa
mov
lcall
mov
cmp
fsub
leave
xchg
fbld
inc
push
fisttpl
add
mov
cmpsl
mov
sbb
fldcw
mov
jne
dec
push
out
xchg
cld
ss
shl
mov
mov
add
inc
repz
mov
lret
jo
arpl
and
mov
mov
out
sbb
aas
shll
shll
pop
push
shrb
sub
in
pop
subb
std
cmp
addr16
ret
sbb
jecxz
lea
and
pop
dec
inc
shrb
test
pop
das
mov
shr
inc
scas
in
push
add
testb
leave
jne
cmpsb
xchg
jne
xchg
xchg
add
inc
pop
mov
pushf
insl
fistl
sar
mov
add
jp
and
pop
or
push
push
xchg
sbb
fimuls
push
scas
jb
data16
mov
mov
xchg
test
nop
mov
jb
test
mov
xchg
xchg
std
cmp
outsl
ret
adc
mov
add
add
enter
ja
repz
jbe
iret
hlt
fsubp
xor
cmp
dec
mov
scas
sub
and
sub
adc
xor
loopne
movsl
daa
jmp
sub
loope
xchg
orb
mov
add
test
test
adc
stos
mov
in
pop
sbb
fdivrp
dec
jbe
scas
push
push
sub
fidivrs
sub
add
lret
mov
mov
inc
fwait
dec
adc
add
sbb
ja
mov
roll
pop
dec
push
sbb
mov
outsb
mov
add
shll
andb
insb
enter
cmp
mov
xchg
adc
sub
arpl
mov
mov
enter
clc
pmullw
pop
inc
add
lret
cmp
cmc
nop
pop
push
pop
lods
cmpsl
sub
insl
test
sarb
ljmp
and
mov
inc
jo
xchg
xor
sub
xchg
mov
push
outsl
ffreep
adc
push
stos
xchg
sub
out
add
repnz
adc
sbb
int3
repnz
es
aam
mov
xorb
xchg
sahf
dec
jns
add
xchg
ret
iret
push
mov
or
sbb
sub
insl
lods
mov
dec
push
test
pop
loopne
shlb
mov
pop
xor
pop
cwtl
leave
test
lock
jbe
int3
fwait
icebp
inc
notl
dec
adc
dec
sub
mov
dec
aad
int3
loop
mov
jmp
aaa
scas
decb
mov
or
dec
jp
lods
roll
outsb
cld
and
xchg
pop
ss
xor
and
ljmp
out
dec
add
out
hlt
daa
add
inc
xor
or
popa
mov
fadds
sub
in
jl
push
adc
pop
mov
repz
adc
dec
stos
clc
dec
or
jp
inc
in
out
xor
fwait
add
enter
aad
clc
sbb
pop
push
push
loop
mov
mov
stos
xchg
xor
roll
add
ss
es
xor
stc
scas
and
in
bound
ficomps
nop
mov
cmpsb
inc
inc
sub
dec
push
sbb
mov
cmpsb
out
lret
bnd
movsl
xchg
ret
jae
mov
and
enter
out
sbb
pusha
add
cmp
jb
xor
add
or
pusha
cmc
jae
sbbl
xchg
push
push
lret
das
pusha
cmp
inc
mov
push
sub
dec
xchg
ja
push
test
outsb
jmp
setp
es
aad
mov
sti
addr16
mov
push
out
push
xchg
xchg
mov
movsl
stc
cmp
movsb
push
fwait
jmp
or
adc
insb
sub
push
test
ljmp
dec
shl
hlt
mov
xchg
and
or
nop
sub
xor
arpl
lahf
add
inc
dec
lds
lahf
xchg
frstor
addr16
mov
xor
mov
xchg
mov
nop
xchg
xchg
repz
jno
push
mov
xchg
sbb
ds
push
mov
in
fucomi
pusha
ret
lahf
pop
sub
cld
jo
pop
and
or
or
sbb
add
cwtl
les
push
push
lcall
sbb
loop
and
insl
pop
scas
or
loopne
mov
ret
jns
addl
jle
andb
pop
rclb
scas
cmc
cmpsl
aaa
cmp
cmp
sti
inc
mov
or
std
push
mov
lods
xchg
jp
mov
ds
dec
fildll
movsl
xchg
xor
and
mov
test
daa
adc
inc
or
sbb
and
imul
andl
cmp
addb
nop
pop
test
adc
frndint
cmp
mov
sub
pop
sub
jno
jl
xor
xchg
sbb
mov
pop
inc
mov
cmp
sub
andl
push
mov
adc
pop
mov
mov
or
mov
lret
aas
ljmp
push
das
std
push
sbb
lcall
mov
and
push
ds
loopne
xchg
adc
cmc
call
stos
das
jmp
push
ret
mov
xchg
push
mov
aaa
cmpl
mov
and
cmp
in
ret
dec
xchg
jg
sbb
fistpll
in
in
fstl
cli
pop
push
xor
imul
adc
add
and
xchg
xlat
scas
movsb
imul
js
mov
call
lods
adc
std
pop
adc
jl
mov
shll
leave
fnstenv
xchg
xchg
push
dec
dec
xlat
adc
adc
loop
les
dec
push
mov
das
sub
in
pop
xchg
cld
mov
je
test
jle
add
into
push
hlt
scas
imul
mov
lcall
inc
pop
cli
rolb
inc
dec
addl
js
mov
add
das
pop
out
std
test
popf
xor
pop
inc
pushf
jmp
enter
xchg
stos
jae
add
lret
and
adc
add
shll
cli
jae
and
adc
sub
outsb
or
jnp
or
call
mov
or
test
xor
shl
jns
cltd
iret
jbe
sub
cmp
or
mov
loopne
out
and
adc
inc
adc
push
push
mov
sbb
test
data16
xchg
push
rcll
pushf
shlb
push
jp
sbbb
aaa
pop
add
dec
fistpl
fsubs
cli
ljmp
mov
aas
ret
lods
inc
mov
das
or
test
int
std
pop
sarb
xchg
sti
pop
sub
pusha
ja
mov
pushf
inc
lds
adc
jecxz
xchg
fbld
dec
jge
cs
jns
push
sbb
xor
or
in
mov
stos
sub
push
cwtl
mov
pop
mov
xor
jae
imul
push
lods
lcall
jno
sbb
jmp
xchg
repnz
into
gs
ljmp
and
test
jp
es
js
push
std
cli
adc
xchg
pop
pop
add
addb
aas
loopne
rorb
fnstcw
mov
subb
cli
add
push
inc
clc
insb
jae
cwtl
sbb
or
pusha
push
test
jb
sbb
xorl
test
dec
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
add
jmp
fnstenv
xchg
gs
test
sbb
mov
lret
lret
bound
fsubr
mov
loop
or
les
jo
cmp
sbb
sahf
sub
push
cs
push
jecxz
fwait
mov
xor
ret
dec
mov
cmp
js
adc
push
mov
xor
or
and
outsl
rcrl
outsl
and
jbe
ja
xchg
jbe
inc
cmp
mov
mov
push
cmpsl
clc
cld
dec
int3
and
pop
mov
dec
xchg
inc
mov
jle
push
lcall
cwtl
jne
sub
mov
push
sbb
ret
lret
xlat
inc
movsb
push
enter
popa
push
lds
and
lock
jmp
cmp
cmp
jp
mov
mov
imull
adc
popf
and
idivb
and
fucomi
push
cmp
xchg
outsl
cmpsl
nop
xorb
sti
inc
loop
mov
shl
das
popa
sub
push
cmpl
cwtl
popf
jne
push
sbb
xor
imul
mov
sub
cmpsb
adcl
sahf
lahf
ds
ror
push
cmp
ret
out
add
xor
push
test
icebp
stos
xor
imul
fildl
or
clc
sti
scas
rorb
adc
rorl
pop
add
dec
lock
jge
clc
add
data16
je
js
mov
sarl
popf
scas
movsl
pop
out
jp
xchg
loope
shll
scas
mov
or
std
les
imul
inc
les
in
loope
jne
cltd
dec
cmp
enter
adc
sub
in
xlat
iret
ret
fstps
arpl
and
mov
mov
rcl
mov
out
into
stos
mov
sub
test
push
push
mov
cmp
xor
loopne
aaa
mov
pop
test
jmp
push
lods
movsb
mov
and
in
pusha
push
xchg
or
push
jg
call
cld
jmp
jne
cmpsl
sti
pop
cmp
je
mov
xor
iret
push
mov
xorl
and
dec
dec
subl
out
push
aaa
ss
pop
fwait
or
inc
js
inc
mov
test
lret
arpl
ss
rcll
out
popl
outsl
out
dec
mov
add
xchg
sbb
mov
xchg
adc
inc
lods
dec
sbb
testb
arpl
xchg
fxch
pop
and
jns
repnz
jbe
subb
dec
arpl
push
ljmp
lock
mov
xor
push
nop
shrb
pop
pop
rclb
xchg
pop
sbb
pusha
je
call
mov
xlat
dec
adc
pop
adcl
cli
mov
sub
push
add
dec
rorb
fsubrl
or
sub
cmp
and
cmpsb
lret
jge
push
or
fidivs
in
hlt
popa
sub
inc
add
sub
add
scas
iret
mov
cwtl
mov
push
dec
aam
sbb
add
mov
xchg
or
push
xor
and
add
outsb
pop
cmpb
mov
rclb
xchg
dec
icebp
in
cs
xor
xchg
js
push
cld
insb
ret
into
aaa
aad
rcr
mov
dec
pop
scas
out
jecxz
shlb
mov
xor
pushl
loop
dec
cwtl
push
xchg
mov
scas
test
or
xchg
dec
shrb
aas
rorl
and
or
lock
and
into
pop
mov
out
pop
enter
hlt
subb
cmpsb
mov
cli
and
inc
fdivr
lret
adc
xor
int3
cmp
leave
cmpl
lods
aaa
push
lahf
cmp
or
or
mov
into
fnstcw
aad
aas
dec
cmp
movsb
inc
jge
lea
inc
fcomi
out
je
aad
and
mov
add
xlat
dec
mov
dec
sub
xchg
sbb
and
pop
sub
call
and
xchg
jno
add
in
dec
pop
hlt
mov
in
filds
movsl
sub
xor
dec
gs
stc
xor
je
in
xor
test
stc
xchg
leave
ss
sbb
mov
push
mov
in
push
and
lock
xor
inc
or
mov
fistpl
rcrb
gs
xor
add
lods
fs
hlt
mov
loope
loop
xchg
sub
mov
sbb
in
mov
je
xchg
out
je
push
aaa
sub
mov
les
mov
sahf
push
das
mov
repnz
pop
scas
xor
and
sub
add
inc
in
pop
pop
mov
loop
xchg
clc
jp
aad
outsl
mov
xchg
jae
and
movsl
gs
ja
loop
sub
xor
mov
cmp
mov
dec
stos
aad
inc
lods
and
inc
or
push
cmp
jle
popw
mov
movsb
inc
lret
mov
pushf
int
bound
fcmove
pop
daa
dec
xchg
inc
test
sbbl
adcl
mov
xchg
inc
test
fcomps
pop
jmp
cmp
mov
jecxz
dec
adc
and
inc
outsl
mov
adc
test
push
and
mov
cmp
jae
fwait
and
mov
sbb
in
mov
inc
xlat
cmp
mov
pop
int3
mov
jmp
mov
mov
dec
andl
push
jnp
nop
pop
lea
lods
cli
inc
repnz
mov
std
sbb
cmpsb
add
dec
inc
lcall
addb
mov
jne
jge
lahf
jne
outsl
iret
jp
push
add
push
jb
jecxz
mov
std
loopne
sub
test
cld
cmp
test
insb
and
push
xchg
into
enter
xchg
mov
mov
jnp
popf
scas
cld
inc
fbstp
jb
sarb
or
dec
inc
and
dec
push
addb
jmp
sti
jo
scas
sarl
loope
push
xchg
or
das
xor
mov
and
loop
ja
jle
jp
pmaxsw
loope
popf
sbb
push
cmp
sahf
fidivrl
mov
fisttps
sarb
adc
xor
pop
cld
dec
adc
es
inc
insb
dec
out
inc
jp
out
inc
scas
loope
jns
gs
lods
push
ss
ss
shl
pop
or
int
lods
lcall
scas
jg
ret
cld
jnp
ljmp
sbb
mov
mov
sbb
adc
dec
mov
inc
jno
enter
icebp
pop
shrb
and
fsts
fwait
mov
outsb
push
fcoml
mov
sub
jns
scas
pop
sbb
in
mov
push
cs
push
jl
mov
mov
mov
fucomp
mov
aaa
xor
nop
dec
push
gs
imul
inc
cmp
pop
jg
insb
out
or
test
leave
and
sbb
sub
pop
dec
cmpl
or
jmp
jge,pn
jae
fstpt
mov
xor
or
fwait
movsl
add
mov
imul
push
dec
das
mov
daa
enter
jecxz
mov
aad
dec
clc
popf
repz
xchg
cmp
repnz
bound
mov
shr
sbb
movsl
push
sub
ds
mov
push
lods
xor
xchg
cmc
push
or
sti
push
popa
mov
movsb
jnp
dec
mov
out
mov
pop
movsb
das
mov
xor
jae
test
pop
enter
jns
daa
fdiv
dec
addr16
push
mov
movsb
dec
and
jbe
jae
adc
in
addr16
and
xor
lcall
imul
lock
pop
xchg
fistpll
icebp
cmp
in
fcmovu
mov
fdivl
sub
ljmp
or
mov
and
in
stos
lea
mov
jmp
outsl
repz
out
popa
sub
jnp
add
js
push
mov
sahf
mov
jo
fdivrl
call
xchg
mov
repz
jb
fisttps
repz
cli
xchg
repz
cmp
aad
outsb
jnp
jmp
adc
xchg
popf
imul
in
lahf
mov
es
es
fwait
cmp
mov
xchg
ljmp
xchg
outsl
aaa
nop
adc
jb
fstps
mov
out
orl
jne
rcrl
pop
jo
lahf
int3
and
aam
jbe
jecxz
das
out
push
rolb
jns
in
movsl
cmc
and
ja
notl
pushf
or
cltd
insb
mov
mov
mov
xor
dec
pusha
fmul
lods
inc
jb
fimull
sahf
sub
out
push
xor
add
mov
mov
pop
in
ljmp
lea
aas
pop
pop
frstor
popa
mov
jne
add
add
ss
adc
xchg
lock
mov
jbe
xchg
push
lret
jle
mov
ja
test
loop
adc
jae
clc
and
cli
iret
enter
jne
xlat
jne
sub
dec
or
in
cld
xor
adc
mov
imul
push
js
ja
das
mov
mov
insb
cmc
addr16
pop
aam
in
fucom
in
pushf
mov
cmp
mov
mov
sub
inc
push
dec
int
insb
jecxz
xor
iret
bound
scas
into
stc
mov
jg
clc
lods
jne
jne
adc
mov
aam
scas
jg
jo
cld
xchg
int3
dec
dec
push
fwait
icebp
xchg
mov
test
stos
sbb
push
mov
lret
push
cmp
xor
ret
in
mov
aas
imul
int
int3
nop
and
sub
jnp
shrb
cmpsl
add
gs
insb
cmp
jp
and
mov
imul
out
adc
xchg
push
imul
pop
movl
xchg
mov
adc
je
test
add
loope
or
jl
cmp
insl
cwtl
ficoml
test
jle
mov
aaa
in
mov
stc
out
notl
and
lahf
lret
adc
add
xchg
or
mov
or
inc
sub
sbb
mov
sub
and
stc
pop
scas
es
inc
rcrl
mov
data16
shlb
adc
xor
adcb
es
push
aam
jl
insb
xchg
jnp
adc
mov
or
sbb
pop
les
cmpps
out
pop
sbb
inc
push
loope
sub
fsubr
jnp,pt
lea
loop
add
mov
mov
sbbb
out
leave
lock
fisttpll
jnp
jmp
cmpl
fiadds
lds
xorl
punpckhbw
pop
pop
inc
jmp
in
orb
dec
sub
aad
call
call
or
and
and
jns
mov
je
cmp
test
in
cld
jle
dec
and
lods
cwtl
stc
xor
mov
sbb
xchg
inc
dec
or
int3
fxch
push
xchg
mov
int3
in
lcall
shl
inc
fdivrs
inc
push
mov
pop
lahf
add
xchg
addr16
jb
lods
sahf
aaa
out
pop
rcrb
insb
shll
sub
bound
inc
pop
sarb
jno
push
not
sub
mov
inc
pop
adc
dec
push
test
loope
popa
iret
mov
jecxz
push
xor
mov
mov
stos
rclb
roll
in
jb
or
pop
shl
arpl
and
xchg
and
push
loopne
adc
iret
push
push
shl
fsubl
cmpsb
xor
dec
bound
lds
bnd
daa
inc
or
call
lret
and
paddsb
lea
mov
movsb
jecxz
inc
and
add
fcomps
xor
inc
fs
pop
cmp
mov
mov
femms
shll
inc
movsb
fwait
arpl
adc
cmpl
jmp
cmc
push
xchg
cmp
jge
popf
lds
mov
or
stos
incb
shll
filds
imul
paddb
std
imul
outsb
stos
xchg
aaa
repz
xchg
sub
ljmp
jp
out
mov
shr
xchg
cmp
mov
jbe
adc
jns
cmp
jp
mov
mov
adc
push
add
jl
cmpb
sbb
push
adc
pop
add
jl
in
xchg
cmp
pop
sarb
addr16
add
movsb
test
adc
fwait
lcall
push
out
fs
dec
adc
icebp
loop
inc
out
rcll
push
fists
lds
decb
adc
insl
enter
or
negl
fidivrl
fildl
fwait
dec
mov
aas
pushf
cmp
lahf
push
ret
mov
cmpsl
in
orl
cmc
jp
loopne
inc
je
data16
lea
cld
rolb
sahf
pop
jb
ret
xchg
cmpsb
sahf
cmc
inc
daa
push
add
nop
xorb
scas
popa
pop
mov
repnz
orl
mov
inc
and
and
push
mov
cmp
mov
bound
lea
push
and
pop
push
sub
cmp
cmpsb
cmp
mov
xchg
dec
shr
loope
push
movsl
arpl
or
movsl
or
addb
int3
jno
jae
pusha
sub
lahf
xchg
jg
dec
int3
cmp
stos
stos
call
int3
addr16
jae
sbb
cmp
xor
xor
mov
pushf
inc
sbb
int
or
dec
jb
push
ret
jnp
pop
nop
mov
lods
mov
lret
repnz
call
test
lret
add
lds
in
xor
add
loope
andb
jae
movsl
pmulhw
je
in
or
fistps
dec
mov
mov
sub
daa
and
sbb
inc
clc
test
sub
movsl
cmpsb
pop
cmpsl
adc
sbb
pop
cmp
mov
push
mov
ljmp
mov
inc
push
dec
pop
sub
cmp
dec
dec
daa
dec
push
shll
sahf
mov
lea
stos
insl
mov
ss
push
rorb
sub
xchg
cmp
mov
push
leave
push
out
xor
mov
cmp
push
push
popa
jp
dec
sbb
dec
stc
xchg
scas
icebp
and
or
inc
mov
and
push
into
adc
xor
mov
mov
fwait
mov
sub
sbbl
leave
loope
push
or
jb
pop
outsl
mov
cltd
aaa
test
pop
lret
int
enter
cli
movsl
xor
or
mov
in
aas
fsubrl
xchg
mov
cmp
mov
sub
loopne
addr16
ja
mov
push
icebp
jmp
push
mov
shl
divl
sub
jno
dec
movsl
mov
inc
stos
xchg
test
pusha
int
mov
int
lret
inc
fs
pop
arpl
in
mov
les
negb
rcrl
jae
mov
jecxz
push
xchg
movsb
sub
daa
push
inc
movsb
in
mov
push
pop
inc
xor
pop
ret
outsb
sarb
loop
and
insl
mov
sub
mov
out
mov
xchg
dec
ret
lods
js
xchg
adc
pop
out
dec
mov
xchg
dec
inc
xchg
xor
popa
mov
push
insb
cmpsl
dec
mov
testl
ficoml
mov
adc
jle
add
xchg
sub
push
jnp
xor
popa
pop
adc
mov
or
and
call
sar
adc
inc
or
inc
leave
adcl
sbb
lods
test
repz
jl
mov
imul
pop
mov
into
pop
xchg
inc
in
test
call
cmpl
pushf
fwait
push
and
dec
enter
dec
ljmp
xor
lcall
lahf
add
mov
sarl
out
imul
out
out
xchg
int3
in
and
pop
leave
fcmovb
xchg
cmp
test
cmp
movsb
or
or
adc
test
and
mov
inc
dec
das
pop
arpl
inc
repnz
add
or
cmp
leave
aam
push
aam
in
out
cmp
adc
sar
mov
adc
lods
ja
ja
sub
mov
lods
add
and
cmp
and
push
cmp
data16
in
pop
mov
lea
lods
adc
or
xor
jo
push
adc
mov
mov
mov
jnp
xchg
mov
adc
mov
movsl
and
fisttpll
push
das
lods
daa
cmc
sbb
je
mov
insb
lea
and
insb
adc
lret
push
es
sub
and
mov
sbb
pushf
fcomps
addr16
push
popa
pop
cmpsl
xchg
cld
pop
lret
shll
push
mov
mov
xchg
xchg
arpl
data16
ss
push
iret
xor
loop
cmp
mov
mov
mov
setle
mov
sub
jo
cmpsb
xorb
addr16
aas
dec
push
push
add
fisttpll
cmc
addr16
xchg
jns
or
neg
cltd
jecxz
pop
into
lock
ljmp
cmc
adc
and
cmp
mov
pop
dec
lahf
sub
pavgw
or
pusha
lret
xor
out
sbb
jle
sub
jbe
or
stos
addr16
lods
outsb
or
push
test
or
pop
es
lret
movsb
xor
jp
dec
aam
jge
roll
jnp
mov
xchg
and
sub
jp
adc
cmp
stc
lock
ja
jmp
lods
bound
fxch
lea
jns
jle
pop
cmp
jg
pop
rcrl
add
lcall
ljmp
mov
xchg
or
push
imul
mov
sarb
fadds
out
test
jecxz
cwtl
test
ljmp
mov
mov
pop
adc
loop,pn
cli
pop
popf
pop
or
arpl
fnstenv
in
and
stos
sub
fs
xchg
sub
out
adc
nop
add
push
cmpsb
fnstcw
sub
push
lret
jns
pop
fwait
dec
js
sub
imul
filds
xchg
lea
cmpb
ficompl
xlat
sub
out
imul
pushf
push
or
add
add
or
mov
mov
fwait
rclb
mov
xchg
pop
fisttps
loop
repnz
shl
sub
cmc
mov
pop
in
cmpb
std
xor
ret
mov
xlat
sub
lret
aaa
lods
aaa
stos
inc
and
dec
mov
mov
push
dec
inc
push
push
int
sahf
aas
lret
pusha
add
pop
loope
xlat
push
out
mov
inc
add
bound
pop
cmc
and
aad
add
lods
aad
xchg
imul
pop
mov
mov
stos
ljmp
mov
mov
dec
push
ficomps
arpl
or
bound
pop
mul
jno
addr16
pop
sahf
repz
or
push
adc
adcb
lods
or
pop
add
push
inc
and
cmpsb
iret
int
mov
hlt
stos
jnp
pop
mov
jnp
sub
jl
pmullw
adc
or
cmp
mov
dec
xor
adc
roll
inc
cmp
fmuls
imul
aam
stc
loopne
gs
mov
sbb
sbbb
idiv
cmpsl
test
aad
scas
xchg
ljmp
ljmp
mov
sbb
push
out
sbb
scas
or
dec
ret
sub
cmp
pop
pop
mov
inc
mov
cmpsb
and
dec
jae
loop
pop
cmp
fidivrl
xchg
insb
stc
jg
into
inc
aad
cltd
mov
push
mov
mov
add
leave
inc
mov
add
inc
adc
test
gs
inc
ret
ja
cmp
loopne
adc
fdivp
aaa
scas
add
insb
out
dec
adc
sub
add
rclb
xor
ds
mov
aas
add
dec
push
cld
xchg
ljmp
jle
cmp
xor
pop
test
cmp
inc
lea
jl
das
out
imul
cld
dec
lock
xchg
mull
sub
aam
mov
and
ret
daa
inc
or
lcall
jns
std
ljmp
dec
scas
mov
lcall
cmp
in
cmp
add
jnp
mov
out
xor
and
xchg
outsb
insl
cs
ds
out
dec
xchg
out
adc
sub
popf
mov
pop
iret
xor
outsl
push
push
pop
adc
pop
sub
jns
dec
mov
pop
jb
nop
out
jb
mov
fwait
sbb
adc
repz
cmpsl
pop
arpl
fdiv
push
and
sbb
dec
into
dec
xor
and
mov
push
popa
pop
ror
stc
inc
pop
out
xor
mov
mov
pop
pop
adc
pop
gs
push
cmp
test
shrl
mov
mov
nop
sti
push
add
push
sbb
fdivs
mov
js
xorb
or
gs
ss
xchg
mov
aaa
mov
cmp
mov
andb
xchg
lahf
movsb
stos
sbb
mov
xchg
and
dec
call
lret
sbb
and
cmpsb
mov
enter
je
dec
add
rclb
scas
sbb
jg
scas
fstl
jle
shlb
push
xchg
lds
mov
xor
fnstsw
jl
clc
inc
mov
ret
pop
jne
add
push
mov
imul
pop
adc
std
nop
es
dec
mov
cmp
jl
lds
cmpsl
xorb
pop
lds
jle
test
dec
fildll
mov
in
xchg
loop
push
push
push
xchg
xchg
clc
add
test
xor
scas
scas
js
orl
movsb
add
sbb
cmp
mov
cmp
mov
sbbb
fwait
movsl
adc
clc
int3
lds
xchg
dec
sbb
aam
xchg
mov
lret
lea
or
mov
mov
adc
cmp
and
dec
jmp
dec
in
lret
iret
nop
je
or
int
pop
std
fdivl
mov
push
dec
push
jne
out
and
fwait
inc
sbb
fs
mov
jl
movsl
adc
inc
or
xorl
and
sub
aaa
inc
in
cwtl
jb
fists
sub
sub
jne
stos
add
push
xor
mov
xchg
or
ja
xor
mov
adc
dec
mov
lret
mov
cmpsb
jne
sbb
pop
sbb
movsb
jnp
push
jae
movsl
mov
xacquire
scas
fdiv
push
into
jmp
popf
jge
fistpll
push
insl
pop
pop
lea
loope
push
and
jmp
jl
inc
not
lret
jb
adc
jp
and
mov
jl
insb
dec
or
sbb
pop
push
repz
mov
xor
sub
xor
in
push
mov
addr16
push
adcb
jbe
jne
add
push
mul
aam
outsb
push
adc
rcl
ret
data16
add
or
outsl
pop
leave
dec
aad
cs
mov
xchg
cmp
pop
test
and
pop
sub
sti
cmp
mov
pushl
jl
in
push
push
cmc
xchg
mov
inc
je
push
or
std
push
xor
dec
push
and
gs
iret
pop
push
pop
xchg
popa
out
out
adc
adc
cmp
popf
enter
mov
cwtl
adc
js
jnp
sbb
in
daa
arpl
fistpl
fstp
ds
leave
into
inc
ljmp
adc
add
sbb
sti
sbb
add
push
or
shl
in
imul
cmpl
pop
loop
sub
mov
or
mov
fidivl
ss
and
inc
mov
adc
cli
mov
movsl
xor
int3
fcmovnb
sub
fidivl
mov
ja
or
inc
aas
pusha
add
add
sbb
stos
subl
mov
into
rolb
aaa
pop
mov
push
pop
daa
xchg
mov
jg
push
cmpl
mov
sbb
dec
cli
xchg
mov
repnz
lea
mov
cmp
mov
test
insl
cmp
insl
jecxz
xor
in
out
dec
js
and
lock
mov
cltd
adc
mov
cmp
subb
adc
mov
lret
popa
mov
ljmp
push
call
loopne
sarb
inc
inc
sbb
sub
ret
or
andb
jge
lret
xchg
push
ret
filds
jg
aad
lock
jnp
jae
and
mov
dec
in
repz
pop
fimull
cmp
lahf
sahf
stos
dec
add
lahf
es
test
cmp
in
pushf
mov
jo
mov
divb
pop
and
pop
push
mov
test
lret
xchg
sti
lods
fnsave
xchg
pusha
in
into
sarb
daa
lods
dec
cmpsl
cmp
jge
xor
and
cmp
mov
adc
inc
sbb
jge
decl
sub
mov
pop
addr16
pop
mov
clc
jns
or
pop
adc
cli
sub
lds
ret
pushf
int
sbb
mov
filds
mov
sbb
or
or
test
jle
pop
add
stos
sbb
insl
arpl
ja
sbb
sub
int3
pop
cmp
mov
rolb
pop
add
xor
xor
xchg
and
sbb
dec
pop
lock
pop
add
pop
or
nop
sbb
fistl
xchg
xor
adc
sub
mov
and
icebp
clc
addr16
jge
dec
fnstenv
lcall
loop
test
push
cmp
lcall
jmp
adc
fdivs
lcall
xchg
dec
aam
enter
pop
add
int
fwait
addl
cmp
ret
jg
rcll
xor
jecxz
or
mov
pop
das
dec
ficompl
lcall
jns
dec
jo
push
xor
insb
es
insb
mov
pushl
pop
inc
loopne
dec
pop
adc
push
stc
out
shlb
pop
rorb
sahf
xchg
add
test
pop
out
inc
cli
mov
mov
stc
ljmp
push
dec
insb
sbb
push
or
add
insb
jp
adc
decb
add
pop
cmp
jo
adc
iret
cmp
test
std
lret
or
adc
lret
jnp
mov
or
inc
aas
push
data16
out
xchg
scas
adc
xchg
cwtl
scas
cmpsl
decb
or
pop
lahf
mov
flds
gs
mov
movb
outsl
or
mov
mov
cmp
mov
mov
ds
lret
lds
lret
add
xchg
inc
fidivrs
es
loopne
call
into
jae
mov
repnz
out
in
push
jne
lods
pop
jne
push
mov
xchg
pop
cmpsl
push
dec
mov
int
cmp
icebp
in
arpl
test
push
icebp
ss
mov
loop
pop
push
pop
xor
push
aas
or
mov
in
mov
loope
addb
loope
push
aaa
mov
sub
pop
fwait
dec
or
insl
test
jae
ss
popf
add
mov
jg
jae
loopne
mov
out
mov
dec
das
jp
pop
push
sbb
push
sub
ret
add
aam
and
push
or
pop
fcoml
xchg
or
sbb
popf
or
pop
adc
lcall
in
dec
test
sbb
mov
test
pushf
mov
dec
lea
popf
in
mov
das
mov
push
push
add
push
shl
punpcklbw
add
cmp
dec
add
cmp
les
adc
repz
out
addl
in
sti
mov
jge
push
or
jmp
add
sbb
inc
movsl
push
out
add
or
call
hlt
jbe
xor
sbbl
push
xor
daa
mov
pop
cmp
add
fdivp
jg
out
push
shl
in
add
xor
pop
stc
shrb
dec
in
into
aam
std
je
gs
cli
loope
aam
cmp
shrl
adc
mov
in
shlb
lret
cmp
push
xchg
cwtl
fcmovnu
lds
push
adc
mov
lcall
inc
or
sar
int
aad
enter
ret
adc
pop
jb
sarb
repz
out
imul
mov
pop
cmp
insb
pop
clc
imul
xchg
dec
mul
mov
fstps
rolb
pop
rcll
cmp
jbe
mov
xor
clc
jno
outsl
inc
push
aas
js
pop
push
cmpsb
add
call
shr
fdivrs
pusha
addl
jecxz
outsb
das
xchg
mov
jl
jae
stos
push
scas
orl
add
insl
dec
iret
inc
jo
mov
sbb
imul
aas
arpl
mov
arpl
mov
fwait
popf
dec
lock
hlt
sahf
adc
adc
loopne
notb
std
push
mov
add
jbe
lock
xor
outsb
int3
mov
push
inc
mov
adc
xlat
dec
imul
lret
mov
inc
fsubl
nop
imull
jnp
scas
sub
pop
lock
or
bound
call
lock
xlat
adc
aad
je
repnz
pushl
sbb
sbb
fildl
push
cmp
int3
inc
loop,pn
popw
cmp
xchg
push
inc
mov
fs
lods
inc
pushf
test
cmp
lock
fs
iret
push
addr16
adc
shlb
nop
jo
std
inc
enter
mov
push
xor
insb
push
and
push
push
test
sti
jl
jns
lods
inc
aas
rorl
dec
cli
add
push
cmc
shll
sbbl
jno
je
push
icebp
lret
int3
jl
and
mov
sahf
dec
adc
cmp
enter
mov
out
xchg
addr16
dec
mov
add
adc
testb
or
adc
add
jp
jg
xchg
inc
rcll
shrl
pop
mov
sti
in
push
nop
push
mov
lds
pop
std
mov
adc
fwait
mov
xor
fdivrl
push
repnz
fwait
iret
push
shll
ja
adc
and
cs
push
lcall
mov
mov
pushf
jg
mov
lcall
dec
subb
cmpsb
push
lret
fdivrl
insb
or
rcr
pop
cmp
loopne
pusha
stos
xchg
push
mov
aaa
push
pop
mov
push
shll
mov
enter
lret
mov
rolb
in
test
pop
leave
ret
push
mov
sub
addl
push
adcl
push
push
andl
push
lea
push
adcl
push
subl
call
call
andl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
movl
mov
mov
xor
or
mov
add
subl
mov
mov
movl
test
movl
je
subl
mov
mov
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
imul
mov
orl
add
sbbl
jmp
jecxz
cmp
sbb
filds
push
cmp
negl
bound
icebp
and
or
add
icebp
sarl
cli
pop
iret
rol
push
jno
mov
sahf
jno
movsb
aas
pop
jg
adcb
cmp
lret
cwtl
enter
and
add
pop
les
imul
inc
adc
imul
adc
nop
fmull
je
aas
push
push
mov
clc
jl
movsb
xor
mov
cmp
xchg
mov
and
aaa
outsb
adc
sahf
xor
jmp
pop
jge
sub
mov
sub
je
ret
adc
add
pop
fsubr
test
dec
test
stc
pop
push
sub
aas
mov
add
data16
int3
pushl
xchg
cmp
enter
pop
mov
sub
xchg
mov
sbb
pushf
cs
inc
ss
adcl
mov
sbb
imul
clc
sahf
or
mov
xor
inc
sbb
aaa
imul
sti
mov
mov
shlb
mov
jg
std
cmpsb
jp
xchg
adc
dec
push
rorl
lret
cmp
loope
xchg
inc
insl
lock
lcall
rcll
push
bswap
clc
pop
inc
jne
das
shrl
lods
fdivs
xor
hlt
or
inc
icebp
pop
jnp
stos
dec
cmp
testl
neg
and
dec
mov
push
dec
push
and
pop
loopne
fstpt
xor
gs
lods
or
rcll
mov
cmp
cmp
repz
fbld
ja
add
addb
xor
pop
sti
sub
xchg
out
fimull
or
pop
movsb
jl
movsl
sbbl
iret
sub
cmpsb
xchg
inc
pop
inc
mov
pop
mov
lahf
jno
addr16
js
pop
dec
dec
or
pop
loopne
leave
sub
pop
jb
dec
sbb
sarl
add
daa
mov
sti
mov
sbb
mov
push
popl
sar
inc
jae
pop
xchg
jecxz
daa
andb
or
fists
cmp
push
mov
loopne
adcl
repnz
lods
mov
das
pop
sub
cli
lods
je
ret
loop
cmp
rorl
inc
or
push
out
scas
jns
cld
dec
or
mov
cld
imul
cmc
pop
jns
cmp
fmull
adc
fldcw
iret
xchg
and
out
dec
jnp,pt
aaa
out
cmp
jmp
xchg
sub
rcl
sub
fsubr
jp
sbb
in
cmp
mov
shl
xchg
scas
cmpsl
mov
add
lock
roll
test
test
inc
push
mov
in
cmp
pop
into
fildl
out
lods
lahf
pusha
pop
fwait
mov
and
hlt
std
inc
repz
sub
push
mov
pushf
icebp
push
loopne
jnp
push
cmpb
mulb
mov
xchg
pop
pop
daa
jnp
scas
testb
aam
jle
icebp
test
movsl
push
pop
int3
mov
stos
add
add
sbb
mov
cwtl
popa
bound
sub
ds
sbb
nopl
lock
or
mov
cmp
xor
push
dec
lcall
push
test
jge
js
pop
imul
in
stc
pop
sarl
pusha
fwait
xor
mov
lock
xlat
in
mov
scas
lahf
aas
mov
aaa
add
imul
cmp
xchg
push
lods
loop
subb
add
mov
loop
push
mov
lret
in
push
pop
mov
cmp
push
xchg
sbb
or
test
lock
jp
mov
add
xchg
xor
and
imul
test
mov
fldlg2
mov
mov
sbb
dec
ret
add
js
push
xchg
xchg
call
mov
movsl
jnp
in
xorb
push
popf
mov
cli
movsb
bound
pop
sbb
iret
fmuls
fwait
nop
ret
outsl
repz
sti
lods
cmp
pop
push
fdiv
push
fbstp
dec
rcrl
pop
push
sub
sbb
les
fadds
mov
push
stos
iret
push
pop
addr16
mov
dec
sbb
xchg
cmpb
xchg
mov
mov
xor
jge
lahf
add
xor
push
mov
jns
inc
inc
daa
cmpsb
sahf
fildl
fistps
clc
stos
add
incb
cmpsl
jae
mov
into
or
jecxz
dec
movsb
sti
jmp
fmuls
adc
loop
mov
stos
iret
fsubs
adc
outsb
leave
divl
xchg
stos
ds
movsb
or
jge
jge
push
cld
mov
dec
ret
add
fistps
jmp
mov
bound
add
imul
dec
clc
int
or
sub
icebp
mov
orl
sbb
jbe
nop
pop
and
std
ss
dec
lcall
roll
imul
shlb
out
sub
push
mov
adc
xchg
mov
cmpsb
sub
lret
adc
lods
xchg
xor
or
aam
add
popa
xchg
jp
jp
ja
xchg
inc
cmpsl
push
mov
cli
pop
js
stc
and
adc
leave
insl
ficompl
in
je
sahf
sub
sahf
insb
push
and
stos
rorb
sarb
mov
ret
push
push
push
ror
adc
test
loopne
fcomp
movsl
repnz
sbb
adcb
cwtl
xchg
negl
das
push
fstps
fldenv
mov
mov
xchg
mov
dec
lds
outsl
cmp
adc
dec
inc
and
xor
jl
sbbl
call
mov
jnp
pop
sub
addr16
jmp
add
cmp
outsb
xor
cs
popf
aam
inc
sbb
data16
test
pop
and
sbb
mov
lret
sbb
sti
lret
add
mov
rcrl
push
mov
or
inc
cmpsl
enter
out
push
xchg
mov
ficompl
ja
mov
cmp
dec
pop
jmp
jnp
leave
mov
add
jge
cmp
ss
and
inc
sbb
mov
fisubs
lret
push
jo
punpckhwd
enter
jge
stos
add
xchg
adc
pop
sub
jbe
in
inc
enter
adc
bswap
cmp
jmp
inc
dec
jmp
lret
fcoms
push
movd
cmp
jbe
jg
imull
or
xchg
mov
cs
pop
pop
fimull
add
sarb
sti
ss
jns
inc
or
call
test
cltd
fwait
xchg
fmull
jle
icebp
icebp
xchg
fwait
sahf
loop
jno
or
insb
jle
inc
push
daa
ds
add
push
mov
adc
mul
xlat
jbe
mov
mov
mov
fstpl
dec
rcl
mov
xchg
aaa
xchg
das
or
lods
fcmovnu
mov
cmp
mov
xor
fwait
dec
mov
mov
fsubrs
aas
sub
cmpsb
cmpsl
jg
stos
mov
add
sub
bnd
xchg
pop
or
loope
lods
loope
dec
jo
mov
push
stc
insl
pop
sub
mov
jecxz
dec
pop
adc
mov
rclb
fidivs
loope
outsl
push
popa
in
push
jl
cmc
addps
call
sbb
ficomps
test
into
rcll
iret
inc
mov
inc
test
addr16
pop
xlat
lods
or
div
pop
test
test
mov
sti
rcl
xchg
insl
les
sub
ja
push
cmp
orb
lret
jo
sti
leave
add
mov
mov
sub
jne
push
adc
push
fists
pop
inc
out
mov
add
sbb
rcrl
test
cmp
cli
jnp
das
incb
sbb
jge
pop
dec
push
ffree
imulb
scas
int
sbb
pop
addr16
je
mov
and
daa
adc
inc
push
vpsubusw
rcr
and
insl
jno
std
cmp
sub
fadds
data16
cmp
add
std
pop
cs
aas
xlat
cmp
dec
adc
pop
inc
dec
imulb
lret
inc
inc
hlt
ljmp
pop
pop
jae
stos
lods
pop
xor
mov
xchg
mov
add
imul
test
cmp
icebp
inc
imul
sbb
xor
mov
pop
or
daa
arpl
subb
jge
fildll
ja
loopne
mov
dec
cmpl
or
mov
imul
sub
fst
inc
or
jl
cmpsb
or
orl
mov
push
pop
jns
test
movsl
mov
push
pop
push
mov
adc
push
push
jae
inc
divb
pop
mov
mov
mov
dec
pusha
push
fisttps
or
xor
inc
sub
push
mov
fldl
dec
jb
add
repnz
xorb
stos
icebp
mov
imul
ljmp
xorb
xchg
mov
in
cmpsb
push
push
pop
add
iret
ucomiss
push
sarl
mov
mov
ret
sub
sbb
xor
out
mov
rclb
test
fadd
mov
movsb
cmp
mov
and
adc
xchg
sbbl
mov
rcll
int3
sbb
pop
inc
cld
cmp
jns
mov
sar
ss
sub
xor
fwait
and
push
jnp
rol
jmp
add
add
add
fcomps
xchg
lods
test
sub
dec
lea
xchg
inc
pop
shll
shr
add
jmp
in
lahf
add
leave
jae
push
pusha
jnp
or
xor
cwtl
cltd
sub
pop
sub
sbb
mov
outsl
out
andb
pop
imul
jecxz
stc
jbe
cmp
pop
int3
pop
inc
sti
in
lea
in
in
shll
sbb
pop
pop
mov
out
pop
cmp
lret
shlb
add
loope
stc
fisubl
jecxz
out
jbe
out
or
enter
aam
xor
or
inc
sub
mov
hlt
push
xchg
adc
jecxz
xchg
push
sub
or
pop
lcall
sbb
add
in
popf
data16
xor
fdivrs
xlat
fdivrs
push
std
arpl
adc
insl
fwait
xchg
loop
xor
jns
movsb
mov
clc
pop
nop
cmpsb
in
outsb
out
mov
push
lock
mov
add
idivb
rclb
xor
push
lock
loop
adc
jmp
xchg
int
push
insl
jo
mov
repnz
rcrl
add
sub
sti
lahf
adc
loop
push
and
int
push
and
ret
lahf
out
cwtl
push
test
inc
out
popl
ret
ret
jle
xor
push
popa
fnstenv
cld
orl
or
lods
mov
cmp
pop
mov
add
xchg
cwtl
adc
pop
notb
mov
adc
or
clc
mov
push
or
cs
int3
fmul
fisubrs
mov
fdivl
leave
or
sti
add
pop
jne
dec
jae
arpl
adc
sub
arpl
addr16
inc
out
movsl
cmpsl
iret
add
lds
int
adc
ja
mov
cmp
in
sti
call
xchg
mov
mov
in
bswap
cmp
out
and
sbb
icebp
movsb
mov
pop
test
negl
lds
jns
jne
jge
and
push
cs
xor
incl
sub
scas
ret
stos
pop
lahf
lahf
and
lds
hlt
dec
xchg
jno
lods
stos
pushf
sub
pop
xlat
cwtl
xor
ja
push
pop
je
ficompl
outsb
or
fcmovnbe
cmp
pop
xchg
sub
jb
and
je
cmp
pop
sti
add
mov
mov
mov
into
and
cmc
sbb
push
pop
inc
push
imul
aam
cmp
mov
popa
push
fucomip
mov
cmp
in
jg
and
test
mov
and
xchg
mov
mov
mov
insb
push
mov
mov
inc
rcrb
adc
or
mov
lods
loopne
adc
push
test
lret
aaa
ficoml
loopne
add
xchg
push
js
movsb
cmp
jnp
xor
mov
shlb
pop
enter
popa
jmp
mov
pop
pusha
push
cmp
pop
leave
lods
push
mov
cmp
pop
ljmp
lcall
cmp
stos
dec
inc
and
test
mov
hlt
and
sbb
loopne
cmpsl
rcll
call
sbbl
and
lea
push
fldt
sbb
pop
or
mov
mov
jne
jne
mov
into
mov
jns
sbb
addl
aam
dec
dec
pop
stos
mov
inc
rol
mov
xchg
pop
xchg
ret
stos
nop
cwtl
pusha
js
popf
addr16
mov
pop
fwait
adc
dec
and
dec
sbb
lock
adc
or
adcl
aam
ret
push
and
jle
aam
ja
sub
addr16
stos
inc
jmp
fsubrp
repz
out
enter
jmp
icebp
mov
jno
xchg
adc
repnz
enter
adc
lods
repnz
stc
sbb
bound
adc
jbe
adc
push
mov
outsb
xchg
out
js
sub
lods
sub
adc
jmp
enter
iret
mov
push
sub
push
jbe
and
dec
jl
pop
aas
divl
subb
fninit
in
add
sahf
push
xchg
addr16
jle
out
jmp
lods
mov
rorb
fistpl
pop
inc
int
mov
pop
xchg
add
inc
jns
fst
sub
lcall
sbb
push
lods
lret
dec
mov
sub
adc
cmp
stc
gs
push
int
push
imul
and
neg
or
int
adc
jae
loopne
mov
mov
push
inc
jb
fwait
xor
dec
loopne
jb
jae
inc
jmp
add
push
outsb
add
int
daa
aad
pop
fs
ds
ljmp
aad
pop
ret
popa
push
mov
mov
testl
lods
inc
jae
xor
mov
hlt
mov
arpl
or
je
rcrb
push
adcl
clc
popa
xchg
js
out
fildll
add
cmpsb
cmc
mov
add
dec
xchg
notl
mov
pop
cmp
leave
mov
jae
in
lahf
movsl
dec
andl
insl
xor
or
into
iret
sub
xchg
or
outsb
inc
push
dec
cld
mov
scas
popa
fidivrs
add
cmp
enter
push
cvtpi2ps
xor
arpl
xchg
mov
test
cmc
lret
jno
sbb
jecxz
pop
jb
fs
pop
aaa
lahf
cmp
pop
xchg
es
cs
xchg
mov
iret
rcrb
dec
fiadds
jl
jnp
cli
add
cmp
popf
inc
pop
lods
sub
inc
mov
repz
repnz
mov
lahf
les
cli
xchg
jmp
jae
imul
sub
fstps
inc
sbb
addb
roll
mov
xchg
in
mov
dec
in
ja
mov
addr16
sub
pusha
mov
and
and
popf
xor
js
mov
sti
shrl
inc
out
fldt
sbb
dec
int3
scas
mov
test
jge
ds
lds
imul
mov
push
js
push
cmp
adc
inc
popa
je
jle
inc
popa
leave
push
ljmp
adc
xor
aaa
xchg
test
sti
mov
addr16
pop
fcmovnb
sub
dec
inc
and
insl
cmp
mov
fcoms
fisubs
pop
fsubrs
push
mov
mov
mov
std
int
push
mov
mov
jbe
jmp
int3
mov
inc
inc
push
jl
notb
mov
push
icebp
xchg
int3
xor
inc
sbb
mov
insb
dec
add
es
popa
bound
inc
jle
xchg
mov
cmpsl
jae
popa
inc
pushf
pop
ja
addb
aaa
mov
sub
mov
out
stc
in
shlb
sti
lret
xchg
aam
pop
push
rcl
sbb
xchg
clc
loope
movsb
pop
ret
movsb
out
sub
xor
cltd
pushf
dec
fcmovb
into
push
dec
lahf
mov
mov
cs
in
push
jmp
test
lea
daa
mov
pop
inc
out
and
adc
les
push
xchg
xchg
add
shlb
es
inc
stos
lock
mov
adc
inc
mov
pop
pop
cmpsl
aam
pop
mov
iret
push
in
mov
add
push
cmp
pop
mov
leave
shr
in
mov
sti
ds
mov
xchg
push
mov
or
sub
mov
jl
pop
push
fdivs
jg
inc
cmp
addr16
inc
inc
stos
xchg
mov
xchg
hlt
cmp
cmpsl
mov
xor
mov
and
inc
lret
stc
hlt
adc
xor
mov
sub
mov
dec
and
push
les
ss
je
lret
mov
addr16
xor
xchg
insb
repz
jge
cld
repz
or
ficompl
xchg
subl
aaa
dec
out
inc
push
int3
loopne
xchg
cmpb
fmulp
in
lods
popf
sbb
fadds
stos
push
mov
xor
xor
sub
mov
mov
or
lret
cltd
xor
out
ds
adc
adc
cmp
inc
mov
push
mov
into
dec
adc
lret
mov
sub
mov
shrb
clc
out
xchg
xchg
sub
xchg
cmpsb
loop
imul
pop
shll
sbb
jno
inc
xchg
push
test
lds
mov
sti
adc
sbb
aam
or
cltd
stos
aad
outsb
mov
pop
adc
dec
ss
enter
ret
addr16
cmp
mov
movsl
sub
call
lds
xchg
lods
xor
test
lock
lret
scas
lret
cmp
cmc
std
push
add
dec
mov
xlat
rol
pop
enter
push
out
cmp
cmp
mov
loopne
enter
sti
fsts
sbb
mov
inc
es
mov
cmc
aam
movsb
movsb
insl
cmpsb
or
and
outsb
ljmp
jb
fdivrl
jo
lahf
xchg
push
jmp
mov
addr16
jne
repz
fwait
std
in
lds
popf
or
repz
mov
pop
lock
fwait
push
jbe
xor
fdivp
sub
mov
sub
cli
push
jmp
aaa
xor
mov
xor
pop
js
rorl
dec
ret
cwtl
repz
jo
lret
xchg
jns
push
cmp
mov
imul
push
cmp
xor
cmp
lahf
mov
push
mov
inc
pop
cmpsb
outsl
adc
adc
out
sbb
mov
adc
or
mov
mov
ret
sbb
jle
mov
mov
ljmp
decb
lods
pop
stos
jbe
test
or
sub
push
cmpsb
pop
mov
out
fs
jbe
dec
mov
inc
inc
stos
lahf
in
fwait
lods
sub
push
mov
mov
sti
ret
push
bound
sbb
push
fnstsw
mov
dec
cmp
test
and
sub
ret
push
add
cmp
ret
out
in
outsb
sbb
out
inc
push
inc
lret
pop
movsb
xchg
add
in
btc
mov
rcpps
lret
loope
in
jecxz
pop
fisttpll
ljmp
aam
pop
mov
mov
fimuls
les
mov
pop
adc
mov
xlat
sub
repnz
adc
insb
mov
mov
lret
ds
ret
and
mov
dec
cmp
jge
imul
pushf
mov
pop
cmc
aad
fmulp
gs
sbb
mov
fwait
gs
enter
push
pop
mov
ror
dec
pusha
lret
shll
les
push
leave
scas
jp
pop
stos
rorb
insl
mov
lods
xchg
movsb
mov
cmp
cmpsl
pop
xchg
dec
jg
das
outsl
sbb
pop
leave
addr16
vsqrtsd
mov
js
cmc
stos
add
cmpsl
fwait
push
gs
inc
jp
add
ja
lfs
in
or
and
cmp
add
push
add
pop
es
mov
add
mov
xchg
push
push
cmpsl
in
into
rcll
mov
fwait
mov
dec
das
jbe
or
mov
imulb
jo
arpl
rclb
cmp
aam
je
xchg
dec
mov
std
shlb
aad
mov
dec
xchg
iret
mov
lods
xchg
xorl
leave
mov
cmp
mov
std
inc
je
scas
fwait
testl
sbb
mov
arpl
lret
and
bound
scas
dec
js
cmp
xor
dec
mov
pop
es
mov
add
and
adc
lock
push
and
stc
ja
adc
pop
daa
mov
bound
sbbl
sbb
ss
pop
std
stos
push
stos
dec
or
mov
mov
repz
mov
jbe
flds
mov
outsb
fstpt
js
sbb
sbb
cmpb
jl
push
cmpsl
fwait
hlt
pop
xchg
gs
jno
stc
fistpll
mov
inc
int3
jmp
adc
adc
or
lahf
mov
push
lods
iret
lods
je
mov
push
loop
out
push
push
dec
mov
inc
adc
push
adc
mov
xchg
xchg
cltd
incl
fucomi
mov
push
mov
pop
pushf
icebp
jge
lods
pop
jns
lods
incl
int3
test
and
add
jl
movsl
out
lret
mov
adc
xchg
jne
in
rcrl
fcomps
popa
xchg
cmp
js
xchg
push
enterw
loopne
dec
mov
jp
dec
ss
push
push
cmp
pusha
fidivrs
pop
cmpsl
cmp
rorb
add
inc
scas
inc
rcrl
cmp
pushf
ret
cltd
adc
push
out
xchg
jmp
mov
dec
sti
inc
fwait
pop
push
push
cli
push
mov
mull
ljmp
loop
jge
jo
jnp
push
clc
mov
in
jae
mov
test
call
pop
fstpt
out
outsb
jmp
xor
add
pop
sub
inc
xorl
or
mov
in
testb
jl
jl
shrl
and
mov
add
or
sbb
pop
inc
mov
sahf
mov
divb
mov
jge
sbb
clc
lret
insb
lahf
orl
or
out
or
sbb
insb
add
insl
jg
js
pushf
xchg
shrl
cmc
pop
jecxz
cmp
ret
or
xor
lahf
cmp
jg
inc
lcall
push
popa
orb
sub
decl
add
dec
les
repnz
pop
adc
mov
push
xor
mov
add
mov
sub
xor
loopne
lret
inc
sub
dec
mov
int3
sti
insb
cmp
sub
push
imul
call
andb
gs
xchg
subl
xchg
int
add
mov
test
cmp
lahf
ret
pop
xchg
jnp
mov
jp
mov
adc
ja
mov
ljmp
shrl
lea
stos
dec
push
inc
cwtl
push
cmp
lods
repz
push
jmp
lret
inc
dec
jg
insb
filds
inc
and
fxch
rcrb
xor
or
lods
add
jmp
adc
sbb
push
out
idivb
inc
lea
inc
stos
sub
les
or
faddl
lds
ja
cmp
mov
in
cmpsb
mov
out
and
leave
or
ret
jno
add
mov
hlt
outsb
add
sub
mov
fldt
int3
cmp
add
sti
xchg
sbb
mov
xor
jp
jae
mov
jge
gs
call
sbb
push
sbb
lret
mov
inc
mov
push
push
lret
lahf
jmp
jg
sub
out
sub
mov
insb
xchg
js
data16
shld
dec
mov
cmpb
xchg
pop
sbb
stos
mov
int
sub
inc
push
or
lock
adc
sub
xor
xchg
push
jge
xchg
sub
mov
js
sbb
pop
pusha
sahf
mov
cmpsb
sarb
jbe
iret
rorb
pop
or
cmp
roll
ds
mov
xor
lods
out
aad
jg
clc
lods
xor
mov
jle
push
stos
dec
pop
or
jmp
xor
push
aas
sbb
loopne
cmpb
mov
lret
adc
hlt
push
stos
dec
dec
loop
scas
adcl
dec
jecxz
jbe
inc
mov
xor
sbb
xor
mov
jmp
sti
adc
cld
lcall
psubq
xorl
rclb
sub
xchg
push
or
in
jae
dec
fldcw
ss
mov
ret
dec
aas
jo
scas
fldcw
sub
repz
push
test
nop
mov
leave
into
and
push
clc
ljmp
ja
jae
sbb
push
movsl
mov
mov
xor
xor
pop
cmpsb
addr16
add
out
or
jo
ljmp
sbb
fstps
inc
and
xchg
add
adc
jns
ret
push
adc
pop
push
loop
daa
push
sbb
push
jle
test
adc
mov
or
sarl
int
adc
push
test
out
lret
dec
lret
data16
test
orb
mov
mov
xchg
das
cmpb
mov
mov
pop
cli
push
aam
mov
fsubrs
orl
jo
mov
shl
stc
mov
js
out
popf
adcl
adcb
dec
sub
push
ficompl
test
cmp
mov
sub
call
sbb
xchg
iret
cwtl
lods
and
adc
adc
dec
push
fchs
and
repz
rorl
clc
push
out
ljmp
lods
xor
and
push
fwait
insl
aaa
jnp
out
sbb
daa
or
mov
jbe
xchg
pushf
xor
cmp
scas
mov
popf
jecxz
gs
test
or
xchg
mov
in
mov
mov
adc
xor
faddl
aad
push
fnsave
js
jbe
mov
mov
push
sbb
jg
repnz
push
lret
ljmp
lock
bound
adc
adc
fiadds
lahf
and
hlt
inc
or
repnz
sbb
dec
pusha
sbb
es
cmpsb
leave
sbb
push
ret
push
jo
or
lods
in
test
test
cmpsl
xchg
sahf
pushf
push
sbb
das
and
xor
xchg
pop
imul
imul
das
leave
fwait
xor
js
insl
pop
scas
pop
pop
and
jae
pop
mov
rcrl
add
xor
aaa
fadds
sub
push
jg
push
repz
icebp
or
inc
ss
jg
and
inc
call
call
ror
les
inc
ss
js
add
xor
inc
fisubrl
notl
mov
loop
dec
stc
inc
in
fimuls
hlt
les
shlb
insb
push
or
enter
xchg
popf
cld
and
mov
mov
shl
fstpl
and
sub
iret
adc
cmp
out
enter
aas
test
xchg
push
xor
mov
fdecstp
sub
sbbl
lahf
test
out
adc
push
add
inc
jo
mov
dec
stos
jbe
pop
xor
sub
xchg
mov
sub
rcll
sbb
dec
inc
dec
push
sbb
sub
push
lock
cmp
cmp
xchg
cli
loop
xchg
adc
ss
adc
mov
test
out
in
aaa
push
mov
ror
dec
shl
adc
out
das
imul
sbbl
movsl
out
push
pop
push
data16
lret
xor
inc
in
nop
jp
jge
cmp
and
icebp
es
das
sbb
xchg
inc
data16
out
cld
push
fistl
loop
mov
xchg
xchg
sub
pop
sub
add
or
repz
cmpb
inc
shlb
in
leave
mov
fldcw
lcall
push
dec
dec
jnp
test
xor
add
lahf
pop
movsl
xchg
fs
jo
repnz
iret
mov
lea
pop
push
mov
ss
push
popa
add
add
cwtl
sub
in
leave
mulb
addl
xchg
nop
in
cmp
aas
xor
out
popa
mov
xlat
rcl
mov
mov
sbb
in
loope
stos
es
jg
loope
xchg
cmpb
stc
inc
sub
jp
dec
cltd
lods
popw
or
jmp
imul
lock
fwait
sub
pop
adc
push
push
push
jae
mov
or
pop
lea
insb
pusha
out
jl
mov
ds
leave
movsl
lahf
jne
xlat
mov
shlb
cld
mov
push
sub
les
jge
or
lods
push
and
jge
add
xor
and
scas
cld
add
pop
and
scas
imul
jns
test
cli
scas
adc
inc
iret
add
fcmove
jle
rcr
pop
jno
in
movsb
cltd
mov
cmpsl
cmp
pop
sahf
mov
shl
adc
adc
pop
ret
dec
mov
pop
jne
iret
movsb
inc
jae
cwtl
cmp
in
mov
pop
pushf
stos
movb
inc
mov
ret
xor
jns
push
lretw
xchg
cld
jne
cld
aas
idivl
push
push
sti
aam
adc
inc
aad
test
jecxz
xor
dec
ja
leave
inc
mov
cmp
outsb
jo
mov
jl
or
dec
arpl
push
inc
notb
mov
scas
push
repnz
and
add
arpl
fwait
or
pop
jnp
sub
push
lds
xor
xor
cmp
rorb
addr16
test
adc
lcall
and
mov
pop
mov
jne
aam
xchg
or
pop
repnz
add
add
sbb
xor
cmp
pop
push
adc
dec
insb
add
inc
xor
xchg
dec
inc
mov
test
ficoml
dec
jp
fimuls
or
adc
nop
cli
cmp
cmc
cmp
mov
nop
push
inc
inc
mov
adc
mov
sub
cwtl
sub
sub
and
into
xor
mov
sub
andl
mov
xor
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
sbb
mov
and
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
and
xor
add
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
xor
xor
add
add
mov
adc
mov
xorl
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
pushl
push
pushl
call
cmpl
jb
movzwl
sub
mov
add
mov
sub
lea
xorl
xor
subl
xor
cmp
movl
je
xor
mov
xor
orl
add
cmp
movl
jne
addl
pushl
call
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xor
addl
mov
subl
add
movl
cmp
movl
je
pushl
subl
pushl
andl
call
sub
mov
xor
xor
xor
mov
mov
xor
add
cmp
je
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
push
pushl
push
call
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
mov
xor
mov
mov
addl
add
mov
sub
mov
mov
addl
add
mov
inc
mov
subl
mov
orl
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
orl
xor
addl
inc
ret
push
mov
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
add
mov
and
cltd
push
mov
add
add
adc
push
push
mov
mov
sub
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
mov
mov
xor
xor
xor
andl
add
adc
xor
xor
cmp
jne
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
pop
ret
push
mov
push
mov
mov
add
movl
mov
adcl
mov
xorl
add
sbbl
xor
movl
cmp
movl
jne
andl
mov
dec
mov
and
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
adcl
movl
mov
mov
and
lea
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
push
pushl
push
call
cmpl
jb
xor
add
adc
mov
lea
dec
mov
mov
adc
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
inc
mov
negl
xor
add
andl
mov
mov
mov
sub
and
mov
incl
mov
andl
mov
andl
add
movzbl
or
push
add
mov
movzwl
sbb
mov
andl
mov
mov
xor
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
sbbl
add
movl
cmp
je
mov
jmp
mov
cmp
jne
movl
push
jmp
mov
mov
mov
cmp
jne
sbb
mov
mov
sbb
mov
xor
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
movl
mov
mov
sbb
mov
movl
mov
sbbl
xor
addl
add
movl
mov
sbb
mov
xor
inc
push
xor
mov
mov
add
addl
mov
mov
mov
sbb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
push
neg
jmp
mov
enter
imul
testb
or
lret
adc
or
cltd
movsl
imul
adc
sbb
push
jmp
add
leave
inc
add
dec
sbb
lret
lcall
int3
and
mov
xlat
xor
mov
call
outsb
popf
mov
cmp
jb
shlb
mov
cwtl
test
pop
xchg
fdecstp
test
pop
insl
sub
pusha
pop
xchg
fnsave
out
cmp
imul
scas
fisttpll
sahf
add
xor
ret
xor
das
inc
mov
xchg
or
lret
dec
xchg
cmc
mov
jp
jp
sub
rorb
pop
ret
xor
xchg
pop
push
mov
xchg
pop
cmpsb
pop
dec
push
sti
in
inc
or
xor
xorl
out
inc
pushf
in
sub
fdivrl
mov
fdivrl
dec
adc
push
rcrl
aaa
pop
mov
jl
lret
and
faddl
dec
lock
pushf
cmpsl
xlat
push
adc
xor
ja
and
mov
imul
dec
pop
or
lret
inc
jb
adc
lret
lock
aad
and
cmp
mov
push
xchg
nop
mov
cmpsl
fld
xchg
mov
xchg
sub
mov
or
negl
js
mov
jmp
and
addr16
les
add
cmpsl
outsl
rorb
shll
in
in
cwtl
and
jge
mov
and
jecxz
ljmp
lods
lcall
inc
jo
divl
jge
hlt
loopne
enter
js
push
mov
cmp
ret
popf
add
repnz
jns
fsubr
push
lret
out
call
repz
ja
xlat
and
addr16
in
jmp
leave
aad
mov
insb
gs
jae
adc
faddp
out
mov
inc
jne
dec
sti
lds
sbb
movsl
cs
lahf
imul
pop
and
loopne
adc
xchg
or
or
iret
mov
data16
xor
sub
mov
test
dec
in
add
xchg
fidivrl
scas
xor
movsb
mov
adc
xchg
sbb
xchg
mov
leave
and
shl
sub
or
pop
movsb
push
xchg
scas
push
pop
enter
divl
add
xchg
push
dec
shl
cmp
cmpb
lods
xlat
push
test
mov
adc
aas
adc
sbb
jbe
mov
pop
xor
inc
in
mov
push
sarl
inc
lcall
sarb
pshufw
jge
cmp
mov
leave
inc
fs
fiadds
add
mov
fildl
rorb
push
or
push
dec
notl
in
sbb
xlat
cld
js
mov
fdiv
push
movsb
orl
in
sbbb
pop
sub
pop
fdivrl
lock
popf
pop
mov
mov
xchg
cmp
insl
iret
ret
mov
pop
jae
ror
cmp
loopne
lret
inc
xchg
mov
inc
push
sbb
or
faddl
adc
jbe
push
fcmovnu
mov
fwait
push
call
mov
stos
pop
sarl
add
mov
mov
sub
loop
jmp
cmc
out
or
xchg
push
ret
fwait
inc
mov
xchg
imul
cltd
adc
stos
and
ret
adc
xchg
mov
iret
lds
mov
mov
mov
or
or
rcrl
pop
sub
pusha
cmpsl
mov
pop
and
addr16
mov
roll
lea
repz
stos
push
sub
inc
ds
or
scas
movsb
das
lds
pop
or
mov
cmp
cmp
dec
roll
xlat
bound
in
mov
and
mov
or
ret
sub
sbb
std
adc
push
insl
test
out
xchg
cmpl
or
lock
cmp
lock
cmp
and
mov
and
dec
sub
fnstcw
xchg
test
dec
aaa
pop
ret
lods
cmp
mov
push
sbb
ldmxcsr
test
xor
mov
inc
jge
and
and
out
testb
pop
mov
ss
mov
push
sub
es
negl
xchg
mov
shll
xor
cmp
test
mov
idivb
fistpll
mov
mov
dec
mov
and
andb
call
mov
popa
stos
shll
mov
jge
into
js
test
mov
jbe
popa
push
popf
adc
iret
mov
dec
mov
mov
ss
jp
cwtl
and
push
jl
into
sbb
andl
mov
fsubrs
inc
call
jbe
mov
imul
pop
mov
flds
popa
jge
scas
imul
addl
neg
iret
popf
mov
je
or
pop
popf
cmp
popf
xchg
add
andl
pop
int3
xor
pop
push
dec
jmp
pop
mov
lea
and
jo
mov
lcall
and
add
dec
adc
cmpsl
in
cli
insb
in
sahf
add
jmp
repz
mov
dec
dec
clc
xchg
out
call
test
and
dec
pop
inc
sub
or
test
sbb
push
ljmp
push
testl
or
xchg
cmp
pop
pop
in
or
lea
inc
inc
pop
ja
insl
dec
aaa
dec
mov
outsl
in
lret
fadds
ljmp
xor
push
loope
xchg
and
push
std
mov
sarb
sarl
mov
lods
insl
adc
cmp
in
into
test
sbb
fidivl
aam
cmp
ret
call
pop
push
xchg
mov
xchg
pushf
xchg
insl
sub
fisttps
ret
test
cmp
pop
fld
mov
out
sbb
cmp
sub
push
aam
mov
adc
sarl
mov
add
pop
cmp
push
aam
xor
in
mov
ss
adc
add
xor
mov
imul
data16
test
xchg
cwtl
js
or
arpl
mov
pop
sbb
movsb
pop
mov
mov
out
sub
add
or
mov
jmp
jo
fs
mov
xor
inc
mov
mov
sti
and
ret
xchg
cmp
jne
inc
mov
xor
xor
or
inc
cmp
sub
pop
mov
push
mov
out
dec
in
das
lods
push
or
stc
aas
cmp
gs
jl
aad
in
jmp
inc
xor
mov
push
imul
dec
popf
lods
lcall
stos
sbb
outsl
mov
les
out
repnz
pop
xlat
mov
mov
and
jecxz
lcall
lods
fisttpll
and
jle
jmp
mov
add
inc
jle
fldz
pop
dec
cld
or
cld
fcoml
inc
lds
pop
test
mov
inc
pusha
cld
enter
out
movsb
and
inc
rcrb
mov
xor
and
or
out
adc
test
mov
xor
stos
inc
cmp
adc
mov
stc
adc
arpl
or
ret
jno
lock
cwtl
pushf
dec
rclb
cmpsl
dec
into
dec
jle
out
das
scas
insb
stos
jge
cmp
add
testl
rorl
lahf
test
push
cvtdq2ps
gs
cmpsl
jns
clc
test
dec
pusha
push
repz
cmc
add
cmpsb
mov
test
es
cmp
rorb
cmc
jne
aam
scas
shufps
jnp
icebp
sarb
fstp
iret
call
std
sub
xor
mov
cmp
sub
and
xchg
repnz
int
jo
mov
mov
mov
mov
or
mov
out
sub
pop
dec
cmp
pop
notl
arpl
sbb
xchg
js
call
jae
pop
arpl
or
addr16
xor
popa
fwait
mov
fcmove
pop
fmull
shll
mov
idivb
bound
adc
lcall
mov
pop
and
xor
xor
fld
mov
js
test
psllw
loope
inc
sarb
push
mov
sub
sbb
mov
fcmove
jnp
fcoml
adc
dec
add
dec
cmc
xorb
mov
mov
ss
out
pop
xchg
ja
adc
jno
movsb
jp
mov
cmp
out
push
dec
mov
cli
push
and
jecxz
aaa
frstor
dec
sbb
push
roll
jle
mov
rcrb
movsb
cli
int3
mov
lret
out
fwait
out
sub
cmpsb
fs
push
jmp
mov
popf
jmp
in
daa
cmpsb
xchg
int3
push
xor
and
adc
inc
xchg
mov
lods
pop
fcoml
xchg
mov
stc
daa
fcompl
shrb
fists
xchg
test
sarl
inc
add
mov
and
sub
sub
dec
divl
cmp
test
push
sbb
dec
fdiv
ljmp
mov
cmp
adc
aam
lods
in
bound
mov
add
jno
jmp
adc
sub
mov
icebp
gs
aad
addb
stos
les
icebp
sub
inc
or
jp
ret
pop
fdivs
dec
lret
xor
or
aas
adc
shl
push
cmpsl
add
repnz
cs
xor
decb
popa
sbb
inc
popa
jmp
lods
adc
or
call
jae
mov
loope
int
jecxz
add
into
aam
and
in
les
pop
sub
jmp
inc
inc
in
jmp
testb
push
and
mov
fwait
pop
leave
fcomi
or
cmpsl
push
lock
jnp
adc
add
out
dec
jne
mov
xchg
push
push
leave
int
popl
add
push
jae
sub
and
clc
movsl
sub
xor
cld
sbb
call
and
loop
mov
ja
stc
jne
push
imul
cmp
test
lock
and
cmp
adc
fadds
adc
xchg
mov
dec
cs
fcmovnu
sahf
sub
movsb
lahf
lcall
lea
adc
inc
inc
cs
mov
clc
mov
push
aad
dec
dec
push
or
loopne
scas
adc
in
lahf
mov
pop
xor
push
pop
mov
inc
js
pop
insb
subb
fistpll
sub
jmp
or
push
clc
out
mov
and
adc
hlt
arpl
mov
mov
in
jae
pop
sub
mov
das
mov
stos
or
mov
js
xchg
mov
jmp
fists
push
test
gs
iret
hlt
sbbl
sub
mov
fsubr
mov
ret
aaa
push
rcrb
testb
data16
pop
in
inc
in
dec
jnp
pop
aaa
popa
mov
mov
xchg
imulb
and
mov
enter
xor
mov
jmp
pushf
aaa
les
adc
ljmp
adc
xor
dec
repnz
mov
mov
pop
cwtl
call
xor
cmpsl
inc
das
jno
in
cltd
dec
lock
fcom
xchg
mov
cltd
cmc
pop
mov
push
jge
dec
les
jmp
testb
cltd
out
fs
add
add
clc
cs
std
mov
scas
push
sbb
fcoms
fsubs
dec
and
cmpsl
sahf
xor
fcom
cmpsl
dec
rcl
jae
sbb
sbb
jmp
mov
mov
repnz
mov
ror
test
ljmp
add
inc
cmp
or
fsub
subps
inc
and
pop
mov
mull
inc
pop
sti
sbb
into
xchg
repz
rcrb
or
repz
test
mov
add
fcmove
sub
jp
fidivrs
push
push
scas
sub
and
jno
data16
pop
into
xchg
mov
ret
mov
xor
enter
cld
lcall
out
xchg
sbb
adc
and
test
sbb
jb
lret
xchg
sub
imul
jb
fcmove
mov
ret
dec
lret
in
lea
jnp
push
and
movsb
mov
pushf
jecxz
cmp
rol
gs
stc
mul
mov
xchg
aad
js
jno
cmp
adc
jno
fistl
cmp
adc
inc
mov
and
rcrb
mov
cmp
add
pop
imul
push
cmp
div
nop
pop
pop
xchg
les
push
gs
dec
xor
decl
mov
repnz
ds
test
filds
nop
pop
int3
imul
mov
int
imul
int3
popa
pushf
jmp
mov
stos
dec
push
outsb
pop
shrb
sahf
inc
mov
xchg
loop
adc
push
push
loope
dec
test
loopne
push
xchg
adc
pop
push
inc
out
mov
push
inc
scas
fbstp
xchg
add
sub
jle
lods
iret
int
fildl
iret
dec
jl
jge
mov
adc
mov
imul
cwtl
jb
inc
jmp
arpl
dec
xor
addr16
stos
ret
cld
sub
add
bound
add
in
jo
fdivrp
jl
ss
call
inc
imul
cmp
popf
xor
outsb
cld
bound
and
push
imul
pushw
mov
popf
stos
push
cmpl
jl
ja
scas
cmp
lret
mulb
leave
lods
fnstenv
adc
and
push
xchg
ss
outsb
icebp
adc
xchg
movsb
mov
inc
ret
xlat
lret
fildll
in
pusha
sub
mov
inc
cmpl
mov
in
sbb
scas
imulb
mov
jmp
and
jno
repz
lods
pop
std
loop
cmp
push
aas
dec
pop
mov
mov
mov
adcl
in
bound
scas
lcall
mov
arpl
imul
dec
sahf
add
xchg
sub
cmp
imul
lret
mov
xlat
nop
xchg
mov
and
lahf
out
sbb
aad
add
fwait
adc
mov
enter
je
cmpb
lods
popa
cltd
orb
movsb
or
xchg
int
mov
fsubs
into
scas
loop
popa
lcall
xchg
test
lods
sub
mov
fsubs
hlt
aaa
andb
xchg
pop
push
pop
or
cmpsb
es
cmp
jb
xor
inc
imul
sub
sub
shl
imul
idivl
and
in
lea
mov
shlb
imul
sub
sub
rep
push
bound
xchg
xlat
jle
cmpsb
movsb
cmp
icebp
ja
inc
xor
call
sbb
scas
xchg
push
and
mov
cmp
push
test
out
enter
repnz
xchg
and
lds
in
nop
cli
aas
sub
in
ret
test
aaa
aam
or
test
aad
outsl
decb
mov
loope
push
mov
jle
movsb
cltd
and
notw
mov
push
dec
out
jecxz
mov
adc
adc
mov
sbb
cmp
out
adc
mov
fisttpl
pop
or
mov
mov
cmp
outsl
imul
cmp
or
sbb
add
daa
ret
mov
divb
sub
out
cli
pop
cwtl
or
mov
stos
ret
movsb
movsl
cvtps2pi
pushf
xchg
or
pop
mov
lcall
mov
dec
rcr
xchg
push
cltd
dec
mov
dec
rcrl
aas
mov
inc
bound
or
int
outsl
xchg
pop
bound
dec
xchg
mov
repnz
add
imul
in
fdivrp
and
jae
sahf
outsl
fstpl
rcll
jle
push
pop
popf
in
outsb
sbb
and
fcmovne
dec
gs
inc
fiadds
shll
pop
pushf
lret
ds
ds
test
sar
dec
mov
das
mov
lods
ds
das
mov
addr16
dec
iret
pushf
cmovno
out
repz
xor
sbb
add
lds
inc
sub
popf
scas
aaa
cmp
dec
mov
dec
cmp
xor
mov
dec
iret
jmp
addl
push
mov
sub
push
add
int
xor
xor
mov
mov
add
pusha
in
dec
and
lcall
xchg
in
into
cs
sub
pusha
out
xchg
sbb
dec
fmull
lods
mov
iret
loope
ss
sub
jp
fdivrs
fs
ret
mov
xchg
ss
or
sbb
clc
stos
lahf
dec
push
imul
mov
test
jbe
cmp
incb
cltd
dec
jecxz
sti
cmp
mov
xor
frstor
inc
add
or
insl
add
xchg
inc
aas
adc
jno
add
adc
sub
lret
jp
jle
lret
adc
enter
xlat
adc
xor
and
or
scas
movsb
test
rorb
notl
js
outsb
and
add
pop
or
lret
mov
stos
or
cmc
mov
pop
ret
cltd
test
or
jle,pn
inc
and
xor
add
and
fstpl
idivb
mov
in
sub
aad
in
inc
mov
out
push
ds
sub
add
imul
sbb
subl
in
enter
lock
stos
xor
cmp
mov
sti
cmp
sub
cmp
xor
or
dec
inc
fldenv
inc
inc
jb
je
lret
push
ds
xchg
add
movsl
lcall
xchg
push
pop
stos
jnp
notl
mov
scas
sbb
add
mov
xlat
push
rcrl
mov
jne
sub
int3
mov
push
bound
aas
std
cmp
jecxz
filds
ds
fdivp
mov
fstl
cs
testl
adc
repz
xchg
data16
dec
mov
cld
pop
cli
sar
mov
and
sbb
std
in
push
jmp
jp
jmp
movsl
push
push
mov
xor
testl
xor
cltd
xchg
or
inc
jae
int3
data16
cmp
pop
sbb
and
and
in
xor
add
das
nop
out
mov
clc
bnd
add
dec
hlt
andl
xchg
repnz
adc
dec
inc
mov
push
ret
aam
xlat
shlb
add
icebp
movsb
sbb
or
stc
lahf
pop
je
pop
sub
pusha
push
xor
jmp
add
add
dec
and
mov
jp
imul
lcall
mov
dec
push
xor
fsubr
jb
movsb
and
aaa
dec
push
push
pop
dec
inc
dec
or
and
mov
sti
push
dec
jns
imul
lret
cmp
fidivs
inc
adc
pop
fidivrl
jp
rcll
lods
shrl
sbb
ljmp
js
jp
and
adc
xor
adc
dec
xchg
jnp
stos
mov
sbb
sbb
call
cwtl
push
and
push
lods
arpl
das
shll
inc
stos
fimull
lea
xchg
scas
icebp
int3
sub
adcl
or
shr
icebp
ja
in
rclb
adcl
xchg
lahf
push
lds
mov
shl
insertq
jbe
cmp
aas
mov
sbb
les
fldenv
mov
cmc
subl
cmp
xchg
dec
data16
test
dec
add
mov
sti
adc
data16
lahf
aas
lock
push
jg
cmpb
out
or
jno
hlt
out
pop
int3
fdiv
aaa
dec
outsl
dec
int
insl
lock
das
out
mov
inc
pop
loope
jle
aam
shlb
ljmp
sub
iret
adc
xor
and
pop
mov
je
stos
lds
mov
and
jmp
outsl
adc
push
mov
cltd
negl
sub
add
shll
or
ljmp
pop
leave
or
lock
in
mov
cmp
sti
push
pusha
fsubr
push
inc
cmp
je
mov
imul
notl
sbb
adc
stos
dec
fistps
mov
aaa
insl
in
sub
mov
out
cmp
and
or
mov
push
ror
movl
repz
mov
push
inc
mov
cmpsb
dec
inc
pusha
fadd
out
shl
dec
mov
mov
cmpsb
clc
sti
pop
push
cmp
jne
add
adc
negl
mov
jg
rclb
rol
pop
push
push
add
add
in
ret
sbb
adc
je
adc
or
xchg
iret
inc
loopne
arpl
outsl
and
in
in
inc
add
or
and
xor
xor
sub
aad
jl
mov
push
jno
mov
mov
adc
mov
pop
bound
jp
inc
sub
xor
and
add
push
push
dec
pusha
push
rcl
stos
dec
jecxz
nop
mov
adc
outsb
into
imulb
hlt
jno
lret
int
std
test
das
imul
jns
es
push
or
jne
es
push
setge
inc
xchg
push
fwait
aad
jle
mov
push
notl
jb
popa
push
adc
pop
roll
arpl
xchg
xor
dec
call
cmp
jp
cmp
inc
fld
and
xchg
pop
mov
inc
movsl
inc
or
ja
cli
cmp
cmpsb
pop
dec
flds
outsl
cmc
aaa
xlat
mov
jae
mov
mov
jl
lret
pop
xor
fcompl
pop
ficoml
xchg
test
loopne
xor
push
stc
xor
add
cmp
push
dec
push
pop
cli
aas
pop
inc
rolb
mov
lret
mov
jl
das
jne
xchg
and
jmp
cld
sub
movsl
adc
dec
sbb
push
sub
ret
mov
out
inc
je
icebp
pushf
pop
pop
xlat
mov
jl
jecxz
mov
shll
or
aaa
mov
mull
push
arpl
dec
clc
adc
pusha
mov
xor
jge
stos
push
inc
testb
nop
fld
lret
pop
fimull
ret
and
lahf
mov
jp
aad
sbb
bound
mov
ja
mov
bound
jmp
sbb
xchg
fnstcw
push
cmpsb
out
fs
imul
mov
mov
into
mov
cmpl
dec
sub
mov
mov
fs
daa
sbb
dec
mov
sub
cmp
mov
pop
lods
xchg
insb
sti
adc
jnp
xchg
ja
and
mov
icebp
mov
lret
mov
xor
pop
mov
and
mov
and
inc
pop
inc
push
adc
mov
jle
popf
mov
jle
pop
mov
xchg
out
xchg
sub
jge
mov
sbb
lret
mov
adc
sbb
and
jnp
cmpsl
cmpsb
imul
pop
bound
cmp
cmp
arpl
mov
inc
xor
jno
lret
loopne
mov
jmp
add
cmp
push
negb
push
pcmpeqw
or
mov
daa
pop
sahf
xchg
ret
dec
dec
jo
pusha
in
in
test
aaa
pop
fimull
ret
mov
jmp
mov
pop
jae
jns
mov
scas
mov
mov
xchg
cli
jne
shll
cwtl
and
es
sub
stos
mov
ds
dec
outsl
lahf
out
test
clc
mov
push
lret
fwait
jns
mov
ja
aad
test
xor
in
adc
sbb
clc
outsb
scas
mov
mov
xchg
dec
aam
push
mov
lock
add
jb
jmp
cs
jl
lret
repz
loop
std
jmp
adc
insb
jns
mov
adc
sarl
movsl
test
sbb
push
pop
dec
mov
aad
fisttpll
dec
sub
jo
xlat
and
gs
mov
add
repz
mov
mov
fmuls
cltd
in
jl
mov
test
movb
lods
or
fsub
mov
lahf
sahf
dec
xchg
notl
ds
loop
lahf
pop
cli
and
push
icebp
cmp
fisttpll
cmp
lea
ss
mov
pop
insb
cmp
or
mov
cmp
adcb
cld
test
aad
mov
add
add
popa
outsb
jnp
adc
mov
pop
aad
inc
sbb
insb
dec
cwtl
ja
les
sbb
jp
and
das
ds
xor
mov
ret
adc
or
notb
outsb
xor
shrb
and
push
push
int
push
movsb
or
sub
popa
pushf
jg
aam
cmp
das
jmp
pop
clc
out
lcall
cs
lock
mov
inc
ss
fwait
js
pushf
sbb
and
sbb
scas
xchg
push
gs
or
push
es
push
cwtl
and
add
lahf
fdivrl
pushl
add
lock
mov
mov
pop
subb
xor
pop
iret
push
test
testl
sbb
adc
add
sub
frstor
inc
mov
aas
mov
cltd
pop
inc
ret
pusha
sub
mov
repz
and
cs
jmpw
iret
mov
in
out
aam
testl
push
das
insb
and
push
roll
cmp
dec
jge
push
popa
adc
cs
sbb
shrl
dec
lea
ret
icebp
jb
cmc
and
clc
into
jg
out
rolb
push
test
jne
data16
or
sub
or
xor
cmp
mull
adc
rorl
outsl
dec
sbb
mov
das
xchg
mov
test
mov
pop
sbb
leave
inc
lea
ja
xor
mov
adc
mov
inc
in
loope
movsl
insb
mov
add
push
daa
dec
imul
jl
xchg
andb
test
icebp
sti
mov
or
jns
hlt
mov
xor
push
ja
jo
mov
scas
rdtsc
out
or
test
ss
sahf
shl
or
mov
xchg
cs
icebp
sahf
sub
enter
fcomp
jmp
test
std
jp
pop
fistpl
mov
fsubrs
and
cmc
mov
mov
cmp
jecxz
push
and
pop
fs
cwtl
add
out
push
data16
in
iret
add
stos
lret
mov
sbb
bound
pusha
decb
add
or
mov
test
mov
mov
loopne
popa
je
jp
sahf
cmp
and
cli
push
cli
bound
insb
mov
lahf
in
daa
aas
push
jnp
mov
sbb
jbe
int
enter
sub
inc
push
ss
push
lret
loop
jnp
mov
scas
outsl
int3
addr16
sub
add
jbe
jmp
fs
orb
mov
sbbl
ds
cmpsb
jle
pop
xchg
jl
test
hlt
add
loop
out
inc
sub
mov
dec
xor
loope
xchg
in
xor
sbb
idivb
mov
xchg
fcom
xchg
jne
and
add
das
popf
mov
scas
mov
in
roll
clc
out
xchg
lahf
mov
xchg
or
loopne
jmp
pop
into
add
subl
test
mov
scas
dec
push
jl
cmp
sub
sbb
jnp
sbb
inc
stos
xor
dec
repz
lahf
adc
cmp
dec
adc
xchg
adc
sub
jl
push
lret
mov
inc
das
imul
push
repz
adc
pop
mov
das
cmp
and
xlat
cmpsl
xchg
test
js
push
arpl
fistpl
daa
jnp
mov
jno
xchg
nop
test
inc
and
mov
xchg
xchg
or
push
push
mov
pusha
inc
pop
mov
je
shll
xlat
jg
adc
and
mov
mov
imul
das
and
pop
pop
mov
add
in
push
lods
or
pushf
fidivl
ret
cltd
nop
mov
scas
mov
mov
ds
xchg
or
jge
scas
mov
mov
xchg
xor
push
mov
ror
jmp
sbb
and
ret
shrb
jns
or
lods
out
or
and
mov
xchg
outsb
dec
aaa
xchg
mov
cmp
pop
jg
jbe
cmp
lea
hlt
dec
in
or
shlb
ja
and
js
push
xchg
pusha
mov
jo
sbb
das
add
sar
inc
adc
add
sub
xchg
dec
inc
inc
icebp
pop
dec
inc
cmp
push
add
xchg
cmpsl
popf
mov
push
cs
adc
sub
gs
mov
inc
aaa
mov
cli
push
and
inc
jle
int
stos
cmp
stos
pushf
push
divl
jae
push
xor
sub
mov
sub
jle
fbld
pop
fs
scas
pushl
or
je
or
hlt
in
sbb
dec
pop
dec
cmp
push
jnp
mov
or
mov
cmpsl
loopne
jbe
js
fmuls
iret
pop
imul
pop
push
out
jg
sub
add
cmp
jo
rcl
dec
ret
push
inc
pop
outsl
in
dec
adc
jne
daa
or
ja
hlt
enter
dec
mov
flds
cmp
mov
pop
cmp
adc
insl
addb
jmp
adc
fmulp
mov
ret
sbb
ret
inc
xorb
cmpsb
xlat
jo
popa
mov
pop
xor
xor
aas
push
xor
arpl
cs
loope
mov
sbb
rorl
je
in
and
dec
insl
xchg
push
in
mov
add
sub
addr16
jl
jmp
sub
xorl
jnp
mov
sub
add
cmp
mov
or
xor
mov
add
subl
mov
mov
mov
and
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
mov
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
movl
mov
xor
add
sbbl
mov
mov
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
mov
decl
push
and
pop
sbbl
sub
xorl
add
movl
adc
mov
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
mov
dec
mov
mov
addl
mov
xorl
xor
add
mov
lea
orl
mov
mov
xorl
xor
xorl
add
andl
mov
andl
lea
adcl
push
movzwl
add
mov
xor
addl
add
subl
push
mov
adcl
push
andl
pushl
addl
call
or
mov
and
mov
subl
mov
sbb
mov
jmp
cmpsb
or
imul
mov
bound
pop
bound
mov
lods
jl
loopne
mov
aaa
cltd
shlb
lock
sbb
movsl
aam
xor
dec
cltd
bts
rcll
ffree
ds
repnz
mov
shlb
jo
out
push
ret
subl
mov
out
or
xor
pop
loop
xor
std
or
xor
or
push
sti
jecxz
xor
mov
push
scas
aam
sbb
push
xor
inc
jb
pushf
adc
loopne
rorb
sub
lea
pop
loop
mov
movsl
insb
xchg
int3
pop
mov
and
aaa
dec
sbb
or
jb
and
popf
enter
or
aad
insl
jne
lods
or
xchg
mov
std
mov
pop
leave
fwait
lea
push
dec
mov
imul
pop
lods
dec
mov
push
scas
jnp
ds
xor
push
xchg
xor
dec
sbb
jmp
dec
out
sbb
stos
mov
imul
xor
dec
cmc
ja
pop
push
subb
jp
xchg
pop
test
jecxz
nop
lret
stos
bound
test
test
je
mov
cld
mov
push
mov
mulb
cmp
add
arpl
test
pop
xchg
pop
mov
xchg
ret
jae
inc
xor
and
sbbb
xchg
int3
push
sbbw
mov
and
outsl
fisubl
es
xor
inc
sub
ret
mov
push
mov
lcall
adc
rolb
and
cmp
jae
lahf
rclb
jnp
leave
sub
popf
aam
leave
aaa
outsb
pop
and
shl
incb
jbe,pt
mov
sub
dec
insb
lods
mov
dec
ja
int3
adc
xchg
pop
add
in
loope
ljmp
out
cli
inc
pop
and
frstor
cmpsl
test
jno
sbb
push
xorb
mov
notl
inc
push
jnp
cmp
cmp
cmp
fcomps
sub
pop
sar
cmp
repz
fidivl
popf
cmp
and
and
or
out
xlat
mov
fimuls
cmpl
fnstenv
into
out
and
inc
pop
cld
lret
clc
in
jb
ss
fiaddl
cwtl
repz
pop
mul
pop
xor
fcomp
out
clc
nop
fstl
call
xchg
cwtl
push
mov
enter
ds
scas
lahf
mov
ret
sti
fcmovne
mov
fwait
cltd
xchg
scas
cmpb
rorl
dec
cltd
xchg
mov
popf
xor
push
mov
notl
rcll
scas
es
jb
pop
je
push
lret
loope
cmp
xchg
gs
lret
ljmp
daa
out
push
fstps
dec
inc
dec
xchg
fstpl
mov
dec
cmp
add
add
pop
loope
test
and
xchg
mov
les
pop
mov
icebp
aaa
shl
inc
xor
test
xchg
jns
fisubrl
sub
fsubr
mov
je
pop
and
inc
and
jecxz
xchg
js,pn
lahf
pop
rcrl
repnz
or
rcrl
inc
push
mov
xchg
jmp
clc
movsb
bound
test
sub
sub
mov
add
les
aas
in
lods
mov
cmpsb
jae
aad
mov
enter
out
push
je
xor
sub
xchg
cwtl
es
cs
xchg
pop
imul
add
pop
int3
mov
out
xor
mov
cmp
push
or
jo
ret
out
sub
jp
jmp
jecxz
inc
cmpsb
xchg
push
ss
test
fildll
cltd
push
icebp
add
mov
pop
mov
and
lea
outsb
and
mov
std
xlat
leave
adc
jne
mov
xchg
xchg
mov
loop
pushf
stos
notl
inc
roll
insb
loop
mov
lock
mov
or
fldlg2
arpl
lods
mov
sahf
loopne
mov
lods
mov
mov
mov
push
hlt
and
cmpsl
inc
popf
stos
jbe
push
jae
sub
and
bound
lds
subl
icebp
nop
fucomip
jecxz
mov
shrl
adc
dec
mov
jl
push
mov
aam
mov
mov
mov
les
add
sub
fstpt
mov
pop
idivb
push
into
add
shrl
inc
in
mov
lret
gs
dec
pop
popf
in
js
lret
xchg
sub
test
mov
bound
xor
or
mov
in
lret
pop
lahf
mov
in
out
and
cmp
in
xchg
iret
bnd
add
xor
fs
pop
sbb
mov
pop
push
jbe
daa
cmp
push
lahf
lea
inc
jl
fldt
jae
popf
or
sahf
test
mov
xor
lea
mov
popa
xor
push
jbe
dec
jp
cmp
cmc
fstpt
repz
cmp
lcall
jne
popf
pushf
les
sbb
mov
push
inc
shlb
rcrb
sbb
add
push
fisubrl
popa
stos
cmpsl
and
pop
adc
jg
push
jo
xchg
jae
in
xor
mov
or
add
ja
out
fwait
les
dec
shll
notl
notl
out
dec
in
and
stos
adc
xchg
pop
arpl
push
xchg
push
andl
mov
pop
and
mov
xor
inc
sti
call
dec
cmp
cli
test
imul
or
mov
push
jb
dec
cltd
enter
or
lods
cmpsb
mov
jb
ret
outsb
jmp
je
inc
mov
mov
sub
lea
or
and
ss
int
mov
movsb
push
pop
mov
mov
mov
dec
jg
jo
das
jno
inc
dec
and
std
xor
jmp
dec
test
cld
cmp
and
in
lods
sbb
mov
clc
add
adcb
repz
lret
push
pushf
or
sahf
jp
push
xorps
sbb
or
adc
jl
outsb
cmpb
mov
add
sub
stos
ja
sti
jne
shlb
inc
dec
popa
movsb
pushf
mov
push
cli
std
in
xchg
sti
mull
fnsave
and
js
inc
ret
int
in
pop
pop
cwtl
iret
lret
sub
pusha
in
scas
ds
push
xor
mov
je
ror
lods
test
xchg
xchg
pop
cmp
pop
jbe
dec
sub
fdivrp
ja
xchg
lahf
xor
daa
sarl
push
fimull
mov
jno
xor
pminub
add
jmp
cmp
fisubs
outsl
shlb
pop
push
movl
mov
repz
int3
das
lea
mov
dec
repnz
add
test
imul
or
xor
fisubrs
xchg
ja
xor
xor
lret
jb
jne
cmpsl
jmp
std
mov
fisubrl
arpl
icebp
mov
shrl
mov
mov
fldt
dec
fildll
mov
xchg
repnz
rcrl
xchg
out
movsb
sub
or
fstpt
jo
pop
fiaddl
lcall
jmp
push
jbe
andb
aaa
lods
in
rclb
sti
sbb
mov
cmpsl
xor
pop
cmpsb
lahf
sti
jns
fs
cmp
pop
les
fwait
inc
popf
pop
enter
nop
pop
pop
jecxz
aas
aad
mov
cmp
movsb
dec
add
and
push
mov
cmp
pop
mov
mov
ss
cmpsb
xchg
dec
mov
les
jae
mov
sbb
call
push
mov
cmp
xchg
out
pop
xchg
mov
loopne
xchg
in
adc
cmp
xor
xchg
scas
fcmovnb
push
sahf
lods
mov
push
jmp
mov
dec
and
push
push
or
mov
jo
ljmp
outsb
cs
repz
inc
jns
push
or
jne
jae
mov
inc
xlat
mov
aas
xchg
push
je
ficoml
inc
arpl
sub
cmp
push
cli
sub
mov
mov
test
adc
out
je
outsl
outsl
gs
stos
jae
jbe
stc
inc
mov
xchg
ret
push
rcl
into
push
stos
add
dec
cwtl
push
push
jno
test
es
fidivl
adc
xchg
jg
sbb
inc
sarb
mov
outsl
aam
mov
lds
rolb
lcall
mov
mov
fwait
in
push
movsl
push
add
pushf
popa
pop
pop
movsb
sub
aas
jecxz
mov
mov
dec
cmpb
mov
fisubrl
insb
mov
dec
xchg
lods
nop
mov
sbb
dec
pusha
pop
in
xchg
jnp
out
dec
fistpl
cmp
inc
adc
push
pop
mov
test
adc
xchg
mov
xor
jl
outsb
jle
sub
xor
fbld
pop
jae
xchg
mov
push
sub
fcomp
xchg
sub
cmpsl
movsb
xor
mov
adc
mov
fistps
mov
dec
pop
jg
inc
mov
mov
leave
shl
mov
das
lret
das
or
pop
jge
jne
lds
lods
pop
dec
int
jnp
xchg
nop
mov
sbb
sti
mov
or
jne
xchg
lds
xchg
lds
aas
push
sub
les
je
fdivp
pop
lea
ret
xlat
enter
ss
mov
cwtl
inc
shr
iret
ja
orb
test
test
iret
mov
push
cmp
aad
sti
sbb
cmp
in
test
add
mov
xor
fsubrp
jns
out
gs
insb
dec
fsub
cld
shlb
sbb
or
shl
popf
pop
or
add
inc
in
test
jg
push
inc
lret
cmp
xor
inc
xor
mov
insb
sub
dec
std
xchg
dec
cmp
xor
cmpsb
push
cmp
cmp
mov
pop
outsl
in
dec
add
clc
cmp
bound
icebp
add
leave
sub
cmp
insb
pop
push
xchg
mov
cmpsb
jo
push
imul
repz
xchg
dec
pop
sub
in
push
andb
mov
idivl
repnz
or
or
cmp
xor
testb
and
int
cltd
rcll
in
jg
add
imul
pop
inc
daa
jecxz
or
cmp
sub
je
lock
arpl
adc
sub
loop
xchg
dec
jg
icebp
sub
les
xchg
pop
les
shlb
pop
mov
sbb
cli
leave
mulb
xor
stos
or
jbe
or
jb
adc
jl
push
sub
adc
mov
adc
pop
fadds
aad
xor
push
out
push
sub
jnp
xchg
mov
lea
cli
mov
push
push
xor
push
sbb
in
and
out
and
cwtl
movups
jnp
xchg
stc
das
sarl
push
fucomi
insb
push
rcr
sbb
and
daa
aas
repz
and
pusha
scas
jns
in
xchg
jne
xchg
psllw
mov
movsb
jmp
xchg
adc
es
decb
adc
loope
ficoms
imul
add
imulb
mov
loope
mov
ljmp
xchg
mov
sbb
jge
and
or
out
out
push
arpl
cmp
dec
mov
lds
fisubl
aad
ja
mov
inc
fists
or
movl
fmull
mov
sbb
lret
pusha
gs
adc
call
punpckldq
shrl
in
fisttps
xor
mov
sahf
addr16
push
fsub
xchg
cmpsb
xor
lcall
adc
dec
out
and
add
testb
pop
pop
es
sub
sahf
aam
sub
mov
lret
push
int3
mov
imul
int3
cmc
sub
scas
movsl
aas
mov
and
test
inc
xor
pop
sub
pop
push
mov
jle
push
js
movsl
cmp
scas
dec
subb
mov
add
jae
lea
xor
enter
lods
imul
push
and
mov
fistps
je
mov
xlat
es
mov
addr16
adc
cmp
mov
pop
je
mov
fiadds
in
aad
cmp
rorl
cwtl
test
cmp
cs
xlat
inc
pushf
jp
ljmp
dec
decl
test
push
ret
insl
fidivrl
outsl
sub
and
mov
jle
mov
adc
je
fists
jbe
imul
inc
add
dec
jb
adc
jnp
cwtl
adc
in
jmp
pop
cmc
icebp
repz
test
sbbl
scas
rol
dec
jb
mov
pushf
push
lret
sub
mov
popa
ret
lret
dec
xchg
shrl
push
clc
xor
cs
sub
cmp
xchg
aas
xchg
cmp
dec
test
out
ret
outsb
mov
dec
loop
adc
add
ficoms
jb
in
mov
xchg
je
insl
jbe
adc
adc
lea
jmp
nop
mov
mov
ret
shl
icebp
insb
fdivr
leave
in
dec
es
xchg
sti
cld
and
adc
push
sahf
sub
cwtl
mull
gs
xor
fmulp
sub
dec
sbb
outsb
mov
add
enter
ret
insl
jae
in
int3
sbb
mov
rclb
mov
nop
pusha
dec
enter
roll
addr16
nop
sbb
mov
xor
into
adcb
pop
fists
and
loopne
sahf
fs
cmp
push
cmpsl
lods
adc
xorb
jno
stos
cltd
inc
push
mov
and
sbb
pop
insl
scas
xchg
xchg
mov
cmp
push
aaa
mov
add
dec
inc
fmuls
loope
adc
push
bound
sbb
clc
or
add
or
ret
cld
inc
pop
xchg
rcll
fstpt
iret
xchg
ss
jae
jo
stos
test
add
jbe
movsl
lahf
adc
loope
sub
data16
cmpl
mov
mov
flds
sub
inc
das
push
pop
sub
inc
add
mov
notb
sbb
loope
in
mov
jmp
in
rclb
inc
mov
std
xchg
jmp
dec
test
push
daa
jl
cwtl
sub
add
out
in
add
xor
mov
pop
jp
cwtl
daa
push
into
inc
xchg
xor
nop
xchg
cwtl
push
mov
inc
fadd
sub
cmp
mov
scas
out
js
divb
mov
je
stos
repz
cmp
addr16
add
xor
sbb
insb
xchg
jp
outsb
push
or
jae
push
lret
mov
lock
data16
adc
xchg
aaa
add
mov
mov
pushf
pop
cmpsl
push
jne
cs
lret
dec
cmpsb
sahf
xor
pop
cltd
insl
mov
fisubrl
sub
dec
stos
sbb
dec
mov
nop
pop
sub
rorb
lcall
or
push
jecxz
outsl
inc
mov
iret
adcb
loope
push
mov
orl
aad
jae
push
insl
out
pop
mov
popa
out
ret
push
add
and
and
mov
jne
sbb
cmp
idiv
cltd
leave
xchg
jbe
dec
aaa
sbb
mov
and
add
xor
jecxz
sti
loop,pn
test
enter
adc
cmpsb
dec
outsb
add
jmp
aas
sub
enter
inc
repz
or
popl
jl
ljmp
lods
pop
ret
ljmp
dec
dec
sahf
mov
jne
lret
sbbl
xor
dec
inc
pushf
stc
inc
lds
rcll
aas
stc
ret
cwtl
loope
cmpsl
movsb
dec
popf
cs
out
enter
int3
jne
jge
call
js
xchg
stc
add
jbe
test
outsl
mov
or
iret
pop
sbb
xlat
stc
popf
sbb
push
into
inc
addl
push
or
addb
and
out
lock
xlat
ds
add
les
pop
imul
jg
aam
adc
dec
nop
jo
mov
mov
idivl
cwtl
mov
add
inc
push
inc
cmp
jb
aaa
dec
sub
dec
adc
add
outsb
inc
in
test
lds
mov
ja
lock
add
or
fnsave
sub
xchg
into
xor
test
nop
or
xchg
and
incb
xorb
cmp
mov
in
hlt
xor
repnz
sub
mov
icebp
rolb
fists
jne
mov
dec
roll
adc
shlb
adc
icebp
aam
std
mov
xchg
out
mov
pop
adc
mov
mov
push
incb
out
test
das
lahf
inc
pop
scas
xor
mov
fnstenv
adc
inc
jl
xchg
cs
pop
lds
cs
fidivs
mov
xchg
pusha
ljmp
test
cld
data16
cmp
cmpsb
pop
mov
push
push
and
adc
cmp
cmpsl
cmp
out
add
add
mov
lea
mov
add
and
sarb
inc
dec
sti
rcll
cli
lcall
dec
xchg
mov
dec
std
sbb
inc
xor
sbb
cmp
inc
or
push
jb
xchg
cwtl
les
cmp
cs
rclb
ljmp
lods
mov
sub
in
add
mov
lret
imul
mov
mov
cmp
mov
sub
jp
and
push
and
nop
mov
ret
fildl
pop
mov
jmp
inc
or
aad
cmp
adc
xchg
xchg
xchg
add
cmp
and
mov
and
imul
mov
or
je
mov
lock
xor
testb
icebp
arpl
sbbb
mov
sub
outsl
sbb
dec
loop
inc
test
xor
dec
mov
into
cmp
mov
push
push
out
inc
popf
xor
add
fs
enter
pop
dec
dec
in
ds
repz
hlt
jge
sahf
xor
shlb
sub
cmp
mov
mov
mov
call
mov
aaa
decb
shrl
jne
lahf
popf
mov
cmc
in
jmp
push
insl
dec
outsb
sahf
xchg
mov
push
rolb
xor
mov
out
and
sub
into
and
scas
jmp
lret
and
pop
repnz
cli
mov
xor
mov
jp
dec
fcompl
xchg
mov
push
fsubrl
xchg
addr16
mov
aas
call
mov
cmp
mov
mov
out
fisttps
out
inc
dec
addr16
fwait
testl
imul
push
inc
jmp
mov
inc
adcb
jb
fbstp
insl
dec
xchg
push
bound
out
or
mov
test
aaa
or
adc
dec
sub
loop
loop
mov
xor
mov
into
ret
repnz
mov
adc
adc
cltd
jo
sbb
and
pop
out
push
lret
push
je
mov
fs
aam
fdivrp
sbb
fcomps
jge
scas
push
ret
xor
fcomps
jge
add
push
aas
shll
cmp
dec
imul
mov
loope
push
xchg
adc
xchg
das
rolb
inc
xchg
clc
loop
hlt
aad
jp
and
sub
aam
sbb
fstps
or
or
in
add
adc
adc
cmp
cmpl
imul
scas
stos
stos
and
sbb
clc
rcll
lods
jb
test
nop
lret
faddp
fs
aam
xchg
cmpsb
loope
adc
in
int
adc
nop
aas
loopne
roll
add
xchg
jno
add
es
inc
insl
lea
mov
movsb
sbb
loop
adc
push
lock
lods
lods
mov
push
xor
daa
inc
cmc
fistps
and
push
cmp
dec
ds
xor
xor
fcmovb
push
cmp
into
out
add
ret
pop
dec
test
pop
mov
js
mov
lods
push
inc
push
into
popf
iret
aad
fcom
pop
ja
arpl
aaa
mov
mov
cmp
insl
movsb
and
pop
push
mov
mov
out
sub
int3
dec
rcll
adcb
jl
je
jno
je
pop
nop
xchg
cmp
and
dec
popf
pop
mov
mov
or
shrl
enter
aaa
or
push
cmp
outsb
es
outsb
cmp
clc
xlat
sbb
loop
dec
sub
subl
repnz
mov
mov
jl
loop
push
mov
and
sbb
xor
xor
or
pusha
lcall
mov
loopne
arpl
jmp
bound
or
cmovb
or
clc
cmpsl
roll
sarb
enter
push
imul
inc
jmp
call
jge
xor
or
daa
xor
xor
ret
addr16
sbb
pop
dec
mov
jo
mov
ret
push
les
jle
pop
cltd
cmp
lahf
pop
mov
push
sahf
xchg
rol
or
lret
add
dec
daa
sbb
xchg
mov
cmp
sub
push
je
enter
mov
sub
popf
je
and
in
fnsave
jp,pn
out
xor
lahf
and
pop
cmpsl
sbb
dec
fisttps
mov
push
pop
mov
in
xor
and
sti
pop
mov
xchg
or
push
out
xchg
jne
arpl
sub
mov
aas
shll
pop
mov
fcompl
lret
jae
out
outsb
ljmp
jns
add
sub
hlt
arpl
es
fs
mov
xchg
inc
jle
mov
movb
push
stc
inc
rcrl
clc
out
int
inc
stc
stos
pop
cmp
jo
stos
or
xchg
or
jg
mov
sbbb
fdivs
sub
mov
loop
popa
sub
sbb
mov
add
sbb
inc
dec
je
cmp
aad
repnz
shrb
mov
sbb
das
inc
xchg
lea
scas
jb
ja
cwtl
cmpsb
mov
outsl
xchg
divb
push
lock
pop
lea
in
mov
sub
shrb
ljmp
rcr
pop
dec
js
cmp
out
cmpl
jg
push
cmp
pop
mov
and
xchg
pop
leave
xchg
faddl
arpl
and
sbb
aaa
xor
imul
frstor
js
add
xchg
dec
push
jae
sbb
out
dec
jmp
and
ss
jne
fldl
sbb
add
adc
and
pop
mov
cld
inc
mov
push
pop
xchg
lcall
cwtl
xor
cmc
mov
cmpb
lcall
clc
inc
mov
outsb
cmp
cwtl
scas
notl
xor
in
aam
nop
adc
scas
dec
rol
dec
insl
jmp
subb
push
dec
xchg
sub
movsl
push
sbb
xor
mov
dec
inc
adc
dec
xchg
outsb
pusha
sub
xchg
imul
sub
push
test
mov
mov
arpl
cmp
dec
fistpl
inc
xchg
mov
mov
loop
dec
xor
jecxz
push
and
sti
push
jmp
lods
mov
mov
sub
insl
pusha
mov
loopne
cmc
mov
cltd
lret
insb
push
cmpsl
inc
jg
cli
sbb
sub
lcall
das
test
or
jnp
dec
push
icebp
std
add
ss
add
fidivrs
xorl
sbb
sbb
push
lds
mov
incb
je
xchg
adc
xor
scas
sub
mov
inc
cmpsb
jb
pop
subl
xchg
pop
nop
cmpsl
pop
mov
incb
stos
faddl
imul
mov
rcll
add
cmp
mov
aad
cmpsl
jge
cwtl
int
mov
outsb
les
add
ret
in
decb
mov
dec
lcall
ret
mov
cwtl
push
cmpsl
push
cmp
cmp
mov
xchg
jecxz
inc
mov
jno
add
leave
mov
sbb
int
sbb
notl
add
into
cs
jbe
cwtl
pop
aaa
mov
aad
push
fs
xchg
pop
add
inc
mov
push
fucomp
push
add
xor
xor
in
sbb
data16
rcl
dec
cwtl
inc
inc
or
add
adc
pop
mov
call
sbb
jae
xchg
outsl
push
pop
repnz
mov
fcoms
or
push
mov
jo
mov
jae
push
bound
pop
lcall
pop
sahf
jae
jge
sbb
out
decl
mov
xchg
inc
fdivp
sub
jl
xchg
and
rcrl
gs
add
je
inc
sub
call
or
cmp
mov
into
je
sbb
insb
pop
xchg
sbb
popa
lods
push
lret
stos
push
insb
jge
cmp
mov
les
jp
inc
mov
lret
in
xchg
inc
push
and
fsubrp
sbb
and
mov
test
leave
and
inc
out
mov
mov
fldt
popa
lret
jecxz
mov
ljmp
mov
or
and
out
jae
aam
ret
jge
sub
pop
js
pop
cwtl
and
adc
cmp
cmpsb
pushf
rcll
and
ficompl
pop
shrb
cld
push
int
xchg
xor
xchg
mov
outsb
in
fsubr
pop
loopne
cltd
jne
jo
inc
lods
loop
les
push
dec
or
daa
sarl
jae
in
inc
xor
cmpl
jge
sbb
lea
pop
jnp
sub
aaa
mov
mov
lahf
sbb
dec
jns
inc
negl
xchg
rorb
cmp
out
xchg
mov
test
cmp
cmpsb
test
mov
enter
push
repnz
push
test
jbe
pop
aas
test
frstor
adc
popa
sub
in
dec
adc
or
jle
data16
mov
subl
gs
pop
cltd
gs
rcr
jl
imul
aad
sub
inc
xchg
sub
xchg
xor
es
mov
push
in
nop
push
jns
jb
dec
sub
int
lock
adc
mov
and
adc
xchg
pop
pop
imul
xor
stos
push
stos
loope
jbe
or
loope
push
and
push
jp
rol
jae
mov
mov
mov
or
mov
jmp
hlt
sub
sub
lahf
insl
lret
movsl
lds
ja
loope
push
add
add
sahf
jo
idivl
dec
cmpsb
bound
fcom
dec
aad
sbb
inc
je
test
push
data16
add
add
inc
gs
sti
cs
push
les
arpl
inc
imul
jmp
ds
inc
pop
enter
outsl
add
cs
movsl
cmp
xor
inc
pop
cli
icebp
lahf
add
popa
jb
cltd
lea
sub
fistl
adc
adc
jl
xchg
dec
jl
fs
mov
scas
add
mov
paddusw
mov
popf
pusha
lret
cmp
pop
lret
andl
mov
out
or
ds
mov
xchg
clc
mov
js
mov
xor
mov
inc
nop
xor
sarl
dec
fs
shr
int
mov
mov
jns
hlt
push
popf
ffreep
dec
mov
add
pop
shl
add
ret
ds
jnp
sbb
add
cltd
jmp
stc
xchg
enter
lahf
add
xchg
push
cwtl
fdivrl
andl
inc
mov
xor
aam
sbb
adc
int3
cmp
push
push
inc
cmp
out
mov
movsl
jae
xor
mov
mov
xchg
and
pusha
leave
stos
sti
insl
popa
and
addr16
test
sub
pop
pop
fdiv
or
dec
das
scas
std
push
jne
add
fistpl
cmp
cld
cli
and
jle
dec
and
mov
mov
popf
xor
js
cmp
outsl
cmp
or
xchg
fdivp
test
aaa
jmp
mov
in
fistps
mov
pop
mov
and
cmp
bswap
sbb
add
inc
pop
or
pusha
xchg
jp
pop
jp
stos
jmp
or
dec
jp
jle
lahf
adc
mov
pop
xor
jg
and
enter
xchg
lea
push
stc
dec
scas
jo
or
lock
dec
mov
fiaddl
mov
adc
mov
std
mov
push
leave
pop
lock
in
push
movsb
daa
cmpsl
sbb
imul
mov
lret
leave
mov
aaa
inc
sbb
es
mov
xchg
popa
inc
shlb
inc
lds
sbb
lds
jno
in
pop
in
jns
push
mov
mov
mov
jb
adcl
fcmovnu
or
cmp
push
pop
or
add
jb
push
jecxz
clc
cs
nop
xor
cmp
test
and
movsb
in
shlb
inc
sbb
push
aam
dec
inc
push
pop
shl
sbb
lock
xor
daa
rcrb
in
cmp
test
insl
xor
push
and
xorb
out
jmp
mov
or
leave
sarl
jge
jl
push
movsl
xor
jp
push
sbb
mov
xchg
cmpsl
add
xchg
fst
les
jns
dec
cwtl
movsb
cwtl
ficompl
ljmp
adc
nop
ret
inc
in
enter
dec
gs
sbb
stc
sbb
aaa
test
cmpsl
mov
xor
addl
mov
add
jmp
sub
lea
mov
mov
mov
add
sub
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
mov
and
mov
not
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
pushl
push
pushl
call
xor
add
dec
mov
jmp
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
jmp
and
scas
jecxz
arpl
jns
cmp
ss
push
pop
shll
or
bound
inc
xor
push
dec
xchg
mov
movsl
jne
fsubs
insb
sbb
push
cmp
jbe
pop
push
mov
pop
xchg
inc
in
push
imul
aad
xchg
xchg
sub
sub
pop
and
and
pusha
xorl
jg
pusha
aad
les
call
fs
sbb
dec
mov
pusha
dec
movsb
ret
ja
out
xor
icebp
sub
dec
mov
mov
adc
imull
fldl
mov
mov
xchg
lock
adc
cltd
out
out
inc
lcall
push
pop
xchg
sbb
jae
movups
add
mov
push
fsub
xor
add
push
adc
add
addr16
orb
lret
jne
popl
idivb
cmc
sub
and
cld
js
mov
mov
push
or
add
or
test
fbld
push
pop
int3
sub
mov
out
stos
hlt
cmpsl
ss
sub
lods
mov
sti
mov
xor
lret
cmp
insb
test
jl
xchg
cmpsb
pop
aad
mov
dec
imul
movsl
mov
mov
sahf
and
fwait
pop
cmp
adc
loopne
je
enter
gs
cmp
fnsave
cmpsb
scas
lods
cmpsb
mov
iret
scas
mov
shl
and
or
daa
cltd
push
scas
mov
mov
repnz
leave
xchg
lea
xor
dec
addr16
cld
xor
jle
mov
sub
mov
xchg
lcall
iret
inc
mov
jge
jo
push
fldt
jecxz
sub
aaa
sub
cmpsb
pop
je
and
cs
sub
ljmp
push
nop
imul
shlb
es
hlt
sub
push
aas
push
fists
aam
fsubrs
negb
add
mov
sub
cmpsb
and
mov
mov
pavgw
movsb
push
push
jmp
sub
scas
out
insb
nop
in
mov
or
stos
sub
adc
xlat
cltd
jae
aad
or
or
fsubr
or
lock
fisubs
mov
add
stc
mov
inc
dec
jecxz
data16
jbe
xor
xchg
cmp
push
iret
cmp
outsl
in
and
xchg
jo
mov
adc
rcrb
pop
sti
daa
xor
pop
jno
pop
loopne,pt
jle
push
inc
mov
push
and
xor
cmp
adcb
sub
aam
loope
mov
pop
das
fs
lret
loopne
pop
mov
test
dec
mov
loop
push
sbb
add
daa
mov
push
add
aaa
and
icebp
test
imul
test
xlat
lea
mov
call
ror
sbb
jnp
sahf
xor
loope
jb
cmp
pop
inc
idiv
aam
push
aad
pop
lds
jg
pusha
fdivl
xchg
push
mov
dec
jle
mov
dec
cli
es
insb
daa
outsl
xchg
push
xor
cld
dec
inc
inc
imul
int3
dec
jbe
sbb
dec
popa
push
jae
jo
scas
test
or
stos
inc
push
push
sub
movsb
jno
jo
in
sub
cmpb
jnp
test
cmp
filds
insb
iret
call
test
mov
add
mov
cld
enter
orl
popa
jb
add
in
dec
fstps
divb
inc
aas
cmpsl
jg
inc
dec
call
ror
adc
lret
inc
jl
mov
xor
pop
cs
dec
fwait
jge
idivl
and
jecxz
jnp
addr16
cli
adc
jg
aam
sub
aam
push
or
sub
pop
mov
xor
sbb
cmp
ja
js
mov
mov
mov
incl
push
movsb
insb
xor
loope
pop
add
aam
aad
xchg
imul
push
sbb
adc
mov
pop
mov
dec
pop
push
jecxz
sbb
add
out
repz
mov
cmpsb
mov
into
mov
lahf
sub
roll
sbb
dec
pop
jbe
jnp
dec
push
in
push
loopw
sti
jle
aas
add
jae
enter
sbb
or
lret
in
sar
cld
sbb
xor
or
pop
xchg
mov
push
mov
sub
xor
adc
mov
xor
ja
cmp
outsb
jmp
pop
sub
mov
pop
push
xchg
inc
in
and
ret
pop
inc
dec
loopne
dec
ret
xchg
push
and
xor
sbb
xchg
ret
mov
test
jmp
and
ror
fidivrs
cmc
sbb
xchg
add
aas
jecxz
sahf
jae
inc
and
jmp
rolb
data16
xor
loopne
int
sbb
push
inc
dec
loope
pop
outsl
or
iret
sahf
dec
dec
cmc
or
sti
int
test
js
lahf
mov
add
jmp
push
ja
mov
fcomp
aad
fs
push
fidivl
or
push
xchg
lds
mov
jno
mov
cwtl
testb
es
test
inc
pushl
sub
pusha
dec
add
push
in
pop
fsubrl
xchg
adcl
xchg
xor
scas
mov
lock
jae
testb
or
aam
aad
or
sub
push
out
push
mov
dec
dec
out
sbbb
jae
fsubrs
cltd
pop
dec
shrb
sub
mov
daa
push
cmp
add
lret
jb
ds
stc
cltd
sbb
out
jl
leave
mov
fiadds
push
rclb
std
sbb
and
inc
clc
cwtl
fcompl
push
decl
out
adc
sub
decb
xchg
add
mov
mov
out
jno
and
les
add
lcall
outsl
inc
dec
pop
or
pop
xchg
les
iret
popf
sub
jnp
push
insl
scas
addr16
inc
movsl
popa
ret
mov
push
mov
dec
mov
aad
push
aad
cmc
js
cmp
test
rorb
jbe
imul
call
mov
dec
sbb
jmp
inc
dec
inc
mov
faddp
xchg
xor
cmp
mov
pushf
in
mov
fiaddl
mov
mov
sub
scas
aas
aad
dec
push
jbe
jp
push
push
aas
es
push
clc
dec
adc
test
mov
xor
aam
cmpsl
push
pop
rcr
mov
stos
fmull
stos
inc
dec
adc
inc
call
or
lret
sub
outsb
je
cmpsb
push
shr
and
fistpll
fnstsw
push
cmp
sbb
in
and
cmp
push
cli
or
inc
cmpsl
fsubl
cs
push
cmp
scas
sbbl
mov
cmpsl
cmp
dec
and
add
loope
dec
fcmovnu
pop
test
aas
scas
pop
mov
fisubs
or
and
jb
mov
mov
std
in
lcall
add
pop
andb
push
jae
mov
xlat
cli
insb
in
push
mov
mov
ss
bound
cmp
or
ss
and
mov
and
test
cmp
lds
jmp
int
adc
lret
fcoms
int
inc
inc
and
xor
push
lock
cmp
std
int
pop
les
shll
mov
lea
cmp
push
xchg
inc
orb
dec
inc
cmc
and
sub
xor
jle
mov
lahf
lret
stos
mov
xlat
push
push
sub
ror
xorl
mov
sar
dec
aas
lods
inc
shr
addr16
xchg
sub
cmp
ljmp
pop
adc
or
std
jbe
and
pop
mov
inc
jb
sbb
sub
loopne
daa
sbb
jle
fucom
ret
lret
das
insb
in
into
fs
push
jae
and
mov
cmp
add
mov
dec
add
pop
outsb
imul
add
mov
push
fiaddl
outsb
xchg
add
aad
sarl
push
and
bound
xchg
and
jl
jnp
sbb
psubd
adc
sub
lcall
into
stos
or
mov
daa
inc
outsb
shll
mov
sub
xor
push
jb
sub
icebp
pushf
fstpl
imul
cmpsb
pop
fcompl
pop
aad
jno
xor
add
dec
stc
push
sti
jo
mov
gs
jns
ja
mov
add
or
jmp
mov
movsl
xor
data16
movd
pop
ja
xchg
mov
je
mov
popf
popf
mov
mov
pop
mov
jns
leave
push
daa
mov
std
push
xchg
sbb
repz
cmp
mov
lahf
clc
in
out
into
stc
faddl
jb
int
imul
pop
sbb
cmp
mov
icebp
sbb
adc
lds
into
clc
sub
mov
fisubrs
movsb
xchg
and
cmc
push
mov
pop
push
mov
ja
cwtl
add
sbbb
clc
loope
cmp
inc
lret
push
adc
mov
and
pop
test
pcmpgtw
or
push
jge
add
add
mov
mov
cmpb
cmp
fsts
js
xlat
cmp
dec
movsl
enter
call
mov
mov
dec
fcomp
push
inc
stos
cmp
mov
or
lock
mov
mov
inc
sti
out
dec
jns
popa
and
fnstsw
lds
dec
inc
push
sbb
aas
int
cs
inc
xchg
pop
mov
int3
hlt
movsb
push
pop
mov
push
test
imul
test
inc
or
frstor
fstl
mov
cmpsb
add
fisubrs
rcrb
hlt
mov
jge
mov
push
leave
xchg
aas
mov
ret
xor
cmp
or
pushf
stos
addr16
add
out
negb
pop
js
fidivl
mov
ljmp
repnz
mov
ss
ljmp
insl
dec
repz
pop
int3
sti
test
stc
cmp
roll
lret
pop
es
push
push
lea
dec
bound
adc
push
cli
rcrl
sub
in
stos
mov
xlat
inc
mov
mov
mov
shlb
sub
or
mov
cmp
pop
push
jb
faddl
iret
jl
lahf
cmp
sub
inc
push
inc
roll
pop
clc
push
lcall
adc
xor
mov
cmp
repz
xchg
data16
push
out
mov
imul
adc
mov
pusha
dec
mov
addr16
sub
stos
mov
mov
cmpsl
add
mov
fsubs
stc
dec
call
cwtl
int3
adc
pop
push
testl
adc
mov
loope
movsl
lds
jbe
push
les
inc
pop
mov
xchg
pop
jnp
mov
mov
lods
sub
rcr
int
and
mov
stos
mov
jmp
inc
ds
push
or
sbb
or
test
dec
je
xor
out
iret
lahf
mov
jge
cmpsb
add
scas
lret
xor
dec
mov
push
xor
jnp
inc
adc
aaa
jae
sbb
jo
xor
lret
jecxz
shlb
push
xchg
mov
mov
cltd
inc
in
xor
sti
mov
pop
ret
or
mov
xchg
dec
and
pop
fcomi
int3
jmp
cmpsl
pop
loop
cld
movsl
out
into
out
pop
fsubr
dec
inc
mulb
dec
mov
lahf
push
push
xchg
pop
lea
jne
push
pop
xchg
xchg
or
push
aam
bound
sahf
xor
cld
imul
outsb
dec
jnp
xor
repnz
cld
xor
stos
inc
movsb
xchg
push
push
mov
mov
aas
pop
mov
inc
push
mov
adc
dec
inc
sti
or
sub
adc
and
push
xchg
iret
dec
inc
xlat
in
jle
ljmp
test
or
stos
lods
mov
clc
fmuls
inc
adc
dec
je
ret
push
shr
shrb
ja
ljmp
mov
es
shll
mov
push
pop
aaa
lock
leave
jecxz
das
cltd
call
xor
jo
pop
push
mov
mov
lds
lret
es
xchg
loop
sbb
dec
mov
mov
push
jb
and
icebp
dec
and
mov
jns
rcrl
dec
popa
cmpsl
cwtl
rcll
jg
mov
add
rorb
xchg
rcrb
adc
cmpsl
ja
orb
insb
mov
leave
xchg
outsl
js
imul
fisttpl
lds
subb
imul
mov
xor
out
loop
stos
fwait
pushf
jge
adc
fimuls
decb
iret
jns
rcrb
push
jno
or
and
rcl
in
dec
mov
imul
jbe
pop
xlat
add
jo
pop
push
mov
into
mov
movsb
xor
add
xor
xchg
push
loope
and
mov
cmp
repnz
sahf
inc
cmp
shrl
fistpll
or
cmp
je
jb
lcall
shll
adc
cli
in
push
jg
js
push
loop
push
pop
and
xor
out
xor
scas
pusha
jp
sub
repz
test
sbb
mov
pop
jp
ret
loopne
push
push
inc
xor
jg
loop
call
scas
mov
subl
stos
insb
out
std
fdivl
stos
xor
sub
dec
lret
mov
and
test
fs
cli
adcl
inc
mov
loope
dec
leave
or
fsubrs
mov
arpl
add
mov
lret
sbb
dec
xchg
mov
push
lock
test
repz
addb
test
adc
jbe
mulb
sbb
sub
mov
cmpsb
pop
cmpsl
xor
and
pusha
xor
lock
in
imull
pop
add
setb
adc
xchg
xchg
lods
daa
sahf
mov
loop
sbb
mov
insl
imul
fsubr
push
lods
out
push
out
sbb
mov
add
pop
xchg
xchg
push
les
andb
add
sarl
lret
xchg
or
mov
pusha
outsl
loop
pushf
frstor
mov
add
cmpsl
or
rcrb
test
ret
sti
push
fsts
aas
mov
mov
inc
cltd
sahf
divb
sub
cli
test
loope
mov
pop
inc
lcall
ror
ret
fidivrl
mov
pop
jb
jae
inc
dec
cmpsb
sbb
xchg
cld
das
sti
jp
pop
mov
jo
or
lret
test
mov
sti
arpl
xchg
mov
insl
mov
test
add
sbb
push
pushf
sbb
js
and
fistl
xor
jle
sti
mov
sub
or
test
push
fwait
aam
imul
fidivs
sub
and
mov
in
out
fnsave
sti
jmp
inc
daa
mov
lret
js
orb
xor
push
jb
push
xor
and
push
addb
xchg
lods
stc
add
out
fisttpl
movsb
jne
cmp
push
xor
push
mov
mov
call
add
cmp
and
loop
daa
jnp
scas
leave
push
pop
movsl
inc
jae
scas
in
inc
out
inc
fs
jecxz
cld
mov
mov
jecxz
inc
dec
invd
cwtl
dec
or
cmp
loope
push
dec
jb
out
out
xchg
mov
mov
pop
adc
or
in
mov
sahf
notb
addb
popf
nop
cwtl
out
bound
cmc
add
add
push
cmp
xor
sub
gs
sbb
stos
iret
lods
xchg
push
repz
clc
shlb
outsb
pop
test
idiv
mov
ficoms
out
cmpsl
rcr
cmc
push
pop
xlat
adc
movsl
mov
sarb
push
xorb
cmc
es
add
cmp
pop
mov
mov
xlat
pushf
idiv
faddl
or
push
sahf
outsl
or
test
push
cmp
jge
movsl
mov
lahf
out
ja
push
inc
into
jmp
mov
xchg
push
and
push
cmp
mov
clc
into
dec
movsl
inc
test
xor
ss
cltd
push
push
div
bswap
inc
insl
arpl
xor
in
in
aaa
add
and
insl
roll
pushf
cmc
xor
aaa
xor
mov
and
jmp
iret
leave
insb
icebp
das
stc
cmp
jbe
sbb
xor
int
popf
push
addr16
xchg
scas
jg
insb
dec
sub
mov
xor
mov
push
enter
pop
popl
xlat
xor
jp
push
push
std
xchg
sub
sub
pop
popf
dec
gs
pop
fldl
fldt
fwait
out
addl
sbb
sub
pop
add
leave
dec
iret
cmpsl
inc
jae
arpl
or
movsb
imul
test
bound
push
mov
movsb
push
sbb
jge
je
je
push
rolb
cmp
out
dec
je
cli
mov
xchg
jl
mov
stc
pop
std
dec
mov
adc
lods
jnp
rcl
or
adc
jae
xchg
faddl
pop
xchg
inc
push
dec
aas
movsb
sub
cwtl
jecxz
int
lock
aam
mov
cs
mov
jl
rcr
repnz
mov
roll
jo
push
add
out
sahf
pop
xchg
adc
in
dec
popf
push
cmp
and
add
or
jge
pop
push
mov
inc
repnz
xor
mov
xchg
shrl
xchg
jp
pop
lods
imul
in
push
sbb
mov
push
shlb
pop
and
loopnew
cmc
enter
mov
pop
movsl
inc
cmpl
shll
and
sarb
out
pushf
or
and
rorl
jmp
mov
shll
lock
and
xchg
inc
sbb
stos
imul
adc
push
cli
or
lods
sbb
jl
out
inc
scas
popf
ljmp
nop
jl
mov
sub
cmp
arpl
and
fwait
movsb
fimuls
jno
in
bound
mov
xor
or
sti
adc
sti
int
cmp
stos
outsb
jp
inc
dec
scas
out
cld
pop
push
filds
decb
pop
jb
orb
add
stc
mov
pop
ja
inc
pop
adc
stc
lock
cltd
cltd
mov
adc
mov
fsubrp
pop
dec
cs
mov
sbb
mov
push
cmp
call
stos
mull
push
gs
jge
adc
and
xadd
lret
mov
jo
call
sbb
mov
mov
pop
adc
dec
jne
push
jl
dec
sub
adc
add
in
inc
stc
sub
stos
pop
push
mov
sub
push
out
sbb
iret
and
or
movsl
jb
xchg
dec
and
lock
jecxz
test
pop
and
or
lods
pushf
js
shll
xchg
add
je
shlb
or
call
outsb
mov
inc
sub
sub
jno
inc
jg
ret
cmc
stc
inc
push
cwtl
or
mov
mov
mov
les
adc
test
hlt
test
mov
jns
cs
cmp
sub
repnz
inc
pushf
out
or
add
mov
sbb
jae
jecxz
and
dec
hlt
ret
enter
dec
xor
popa
pop
sub
xor
mov
mov
sbb
jge
sbb
arpl
outsl
jmp
sahf
jbe
jns
add
out
mov
hlt
inc
cmpsb
insl
mov
mov
dec
add
aas
pop
adc
jle
lock
or
dec
mov
cmc
cmpsb
sbb
mov
sbb
xchg
pop
cmp
mov
jo
pop
mov
inc
sub
es
push
push
mov
sahf
bound
mov
or
imul
repnz
adc
dec
lods
cwtl
lds
inc
or
sub
jl
stos
stos
int
mov
jae
cmc
fmuls
or
in
fnstcw
cmc
ss
ja
lods
sti
clc
stos
add
dec
in
incl
mov
and
mov
setge
arpl
lods
mov
lcall
andb
cmc
mov
dec
xchg
mul
mov
lahf
pop
movsb
pop
xchg
dec
pushf
fisttpl
add
mov
sbbb
testb
aad
aaa
cmp
repz
xchg
push
xchg
das
and
jge
or
jecxz
mov
mov
ficomps
or
jne
int3
xchg
stos
and
mov
add
cmpl
xor
rclb
xchg
dec
adc
sub
ljmp
add
add
jecxz
mov
test
mov
outsl
sub
mov
pop
sbb
and
xchg
mov
inc
jns
nop
dec
mov
cmp
mov
dec
sahf
imul
xchg
pop
das
push
xchg
andl
xchg
loopne
mov
lret
sbb
xchg
outsl
push
movsl
inc
mov
mov
jmp
xchg
cmp
xchg
dec
xchg
mov
aas
push
fidivs
sub
push
inc
stos
popf
inc
movsl
test
mov
pop
mov
mov
and
negl
roll
sbbl
sbb
cmp
dec
scas
bound
mov
sarl
sbbb
icebp
pushf
call
mov
lds
cmc
stos
orb
inc
adcb
cmc
push
sub
jne
jne
test
push
dec
sbb
lahf
and
adc
test
test
jns
jmp
mov
cmp
fsubl
js
aaa
mov
cltd
por
add
and
cmp
xor
out
mov
rolb
add
mov
mov
mov
sbb
int
fs
fdivrs
pop
mov
mov
int
das
mov
cli
fwait
sub
inc
xor
adc
inc
mov
push
shlb
push
hlt
inc
lret
xor
add
test
jb
dec
add
shl
cld
pop
jnp
jno
movl
or
icebp
outsl
push
incb
mov
and
jg
sbb
sbb
pop
scas
loope
cs
push
adc
sbb
cmc
xor
iret
int3
sbb
hlt
imul
insl
or
imul
jns
jle
pop
int3
ljmp
icebp
add
xchg
btr
sti
in
lods
movsb
sti
cld
mov
sub
xchg
mov
push
sub
and
movsb
mov
sbb
test
insb
dec
adc
test
fwait
xor
xchg
fimull
flds
pop
sbb
testb
mov
fsts
push
cs
push
xlat
and
inc
mov
repnz
push
push
sub
out
and
in
iret
fisubs
fisubrs
mov
push
out
mov
adcb
cmp
popf
xchg
mov
inc
sahf
jl
hlt
lock
xor
dec
mov
and
mov
mov
sub
cmp
jns
dec
jecxz
mov
mov
jge
scas
es
sub
leave
sbb
cld
mov
repnz
mov
inc
jnp
fs
cmpsb
jmp
sbb
out
in
add
jnp
jbe
in
fnstsw
fisttps
sbb
mov
pop
or
fwait
test
inc
sub
sbb
bound
add
sar
and
insb
mov
jecxz
jecxz
outsl
lcall
cmp
mov
enter
insl
inc
pop
bound
sub
arpl
xor
xor
or
jge
mov
das
stos
mov
out
popf
repz
mov
das
adc
mov
dec
mov
leave
mov
movb
inc
and
outsb
popf
shll
adc
addr16
loope
xor
ljmp
push
data16
iret
cmp
jp
sahf
adc
or
jecxz
pop
aaa
or
in
clc
adc
cmp
cwtl
dec
jle
lds
ljmp
fldcw
int3
ja
add
ja
push
loopne
aaa
or
rcr
fst
dec
push
ret
lods
cmpsl
es
and
test
pop
jbe
xchg
mov
adcl
add
cmp
dec
fstpl
cmpsl
sub
push
cmpsl
xchg
or
loop
mov
jg
negb
cld
lahf
cmpsb
es
push
out
sti
xor
pop
test
idivb
testb
push
lock
aas
hlt
cwtl
in
rolb
xchg
icebp
mov
std
es
or
cwtl
inc
and
int3
inc
and
ljmp
and
dec
inc
out
inc
and
inc
mov
add
sbb
inc
dec
pop
addr16
pop
fimuls
sub
adc
dec
lock
pop
in
scas
push
lret
or
adc
scas
pusha
mov
call
adc
sub
jb
pusha
add
outsb
addr16
imull
mov
sbb
imul
in
out
xchg
add
mov
xchg
lods
dec
push
aad
mov
imul
xchg
mov
pop
push
gs
ss
cmp
movsl
cli
inc
pop
cmc
jmp
sub
sub
xor
cmpsl
cwtl
lret
jnp
icebp
lods
popf
mov
jb
mov
rep
leave
loope
fwait
fs
cwtl
lock
dec
dec
jns
rcl
push
int3
lods
sbb
xchg
es
stos
xor
es
adc
sub
popf
test
je
jb
rcrb
je
ret
lds
in
insb
cmc
fs
icebp
jns
xor
cld
cmp
sbb
xor
lds
push
pop
pop
jb
jmp
jnp
lock
xchg
mov
mov
fs
imul
fmuls
icebp
dec
adc
imul
sbb
rcrb
adc
mov
sbb
dec
cmpsb
test
or
incb
mov
adc
andl
mov
xor
sti
adc
add
lcall
jo
std
insb
fistps
sahf
imul
aad
call
xor
mov
fisttpl
cmp
clc
in
or
in
mov
adc
arpl
out
cmp
clc
pop
lcall
imul
push
mov
insb
fdiv
popf
rol
enter
push
pop
adc
leave
sarb
stos
or
ljmp
jae
pop
jp
aam
decb
movsl
repnz
xchg
pop
rolb
stos
sbb
cltd
sbb
stos
sub
scas
xchg
in
je
push
ret
cmp
pusha
addr16
mov
int3
mov
dec
pop
fnstenv
in
mov
and
in
inc
in
das
dec
lahf
xchg
ret
push
mov
imul
std
addl
jg
insl
xor
cmp
loopne
bound
xchg
fildl
test
lock
stc
jno
inc
js
add
sub
xorb
movsb
add
jns
push
xchg
jno
in
icebp
loop
call
pop
mov
push
cmp
ret
lret
daa
je
and
cld
push
subb
adc
cmc
push
add
insb
fdivl
fldt
pop
decl
mov
and
lret
and
push
xchg
adcl
pop
cmpsb
js
xchg
dec
call
pop
icebp
loopne
ja
mov
mov
or
bound
and
pop
test
pop
in
mov
aad
loopne
in
mov
rolb
dec
mov
inc
mulb
loopne
in
inc
jbe
stos
or
pushf
lock
call
bound
add
fdivl
loope
loop
pushf
fstpl
call
sub
ret
xor
aad
adc
mov
sub
mov
popl
movsl
and
mov
adcl
inc
mov
pusha
mov
inc
pop
sbb
xor
test
and
sahf
jne
inc
sbb
push
ficomps
and
mov
pushaw
add
cwtl
and
cmp
push
pop
xchg
sbb
pop
dec
push
lahf
and
stc
pop
scas
jmp
pop
test
xchg
in
insl
daa
mov
repnz
or
dec
mov
jl
popa
mov
inc
or
js
ja
push
mov
mov
adc
inc
scas
sub
gs
stos
pusha
call
enter
in
rcll
sub
arpl
inc
sub
mov
jecxz
adc
adc
dec
cli
sar
aas
xchg
sub
jecxz
inc
lea
dec
add
cmp
mov
push
movsb
stc
and
inc
fs
sbb
ss
xlat
add
and
out
add
add
ja
sub
ret
and
jnp
ret
xchg
pop
push
pop
repnz
mov
ror
movsb
jae
xchg
add
sub
mov
data16
lret
and
push
lds
mov
mov
stos
mov
add
adc
jb
push
shld
pop
cmp
std
fdivs
and
inc
xchg
es
jne
shl
fs
shr
rep
fsubs
test
xchg
mov
sub
mov
mov
enter
mov
xchg
jno
shlb
ret
inc
sbbl
xchg
int
pushf
mov
stos
cwtl
cli
push
fimull
dec
mov
dec
pop
arpl
orb
or
pop
and
std
scas
push
jne
fcos
mov
test
push
aam
ja
fistps
mov
lods
mov
mov
test
mov
xchg
mov
push
cmp
test
div
lcall
or
rcrl
add
shrb
push
data16
lahf
sbb
mov
mov
rcr
adc
cmp
xchg
sbbb
and
xchg
and
cltd
repz
add
dec
xor
out
xchg
andb
mov
push
mov
and
push
cltd
or
inc
mov
mov
lods
idiv
jl
push
insl
daa
sbb
pusha
xorl
mov
outsb
jle
cmp
aam
loopne
repnz
ret
push
xor
mov
pop
sti
dec
mov
sub
inc
aas
pushf
iret
mov
inc
cmp
pop
mov
push
jl
in
ss
sti
xor
or
inc
dec
test
sar
cltd
call
in
jmp
out
cmpsb
xor
dec
in
inc
stos
aaa
jnp
fs
inc
fmull
cmpsb
jb
push
jb
adc
adc
lret
out
int3
fiadds
add
dec
inc
faddl
push
pop
das
mov
movsb
shr
mov
pop
iret
iret
ret
out
push
push
test
inc
or
lock
pushf
ret
insb
mov
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
mov
mov
xor
xor
lea
mov
xor
div
mov
xor
add
cmp
mov
mov
jmp
lods
jbe
loop
jmp
into
pop
aad
mov
mov
or
bound
lea
test
jge
addr16
addl
pop
out
inc
and
sti
sbb
mov
or
fisttps
push
mov
out
movsl
fimuls
rcll
mov
loopne
xchg
and
inc
cmp
push
inc
or
enter
pop
je
mov
inc
mov
add
ror
dec
push
or
out
xor
fs
xchg
stos
lret
add
jmp
mov
fs
scas
lret
addr16
add
jb
xchg
mov
jl
fxtract
jno
inc
iret
xor
mov
sbb
imul
and
orb
je
cmp
mov
loope
and
cmp
popa
imul
inc
adc
xchg
ret
sbb
adc
sbb
sub
out
inc
dec
daa
mov
fildl
mov
cmpsb
pop
bound
icebp
xor
push
icebp
pop
fwait
fs
push
add
mov
add
popf
cmp
arpl
je
push
sub
cwtl
ss
ficoml
insb
cmpsl
popf
stc
shrl
push
divb
stos
dec
mov
rorl
mov
adc
push
pop
pop
jns
dec
cmp
sarl
xor
popf
jmp
pop
push
pusha
aaa
pop
and
sub
fst
dec
std
pop
mov
xor
pop
aad
lcall
mov
outsb
adc
sub
inc
test
jmp
jecxz
add
and
adc
add
adcb
ja
add
add
push
xchg
jne
ret
mov
imul
ja
loop
inc
aas
shl
out
hlt
out
dec
rcll
inc
out
je
outsb
fldl
les
fimuls
js
lcall
stos
imul
out
xchg
dec
xor
mov
cmp
mulb
mov
sub
lcall
jbe
jb
loopne
cmpsb
ds
cld
shlb
fsubrl
repnz
xchg
lods
or
mov
sub
arpl
jne
mov
idiv
clc
lahf
mov
popfw
dec
hlt
and
clc
mov
push
into
pop
ljmp
jg
data16
cmpsb
clc
push
into
in
mov
and
jp
ja
push
inc
outsl
inc
inc
in
stos
pop
gs
add
stos
adc
xchg
stos
call
arpl
mov
sarb
jb
movsb
bound
ss
lods
repz
pop
inc
dec
in
out
and
scas
testl
mov
push
fisubrl
xor
cmc
popf
pop
mov
adc
pop
pop
jns
xor
leave
jb
pop
call
sbb
or
dec
adc
shlb
in
lcall
push
add
cltd
cmp
push
push
imul
lods
inc
cmp
test
in
sbbl
push
dec
mov
or
arpl
fcmovu
ret
cmp
and
pop
test
lret
xchg
pop
inc
pop
ss
repnz
jp
push
push
aaa
sbb
add
inc
mov
xchg
jmp
push
add
bswap
fwait
jg
dec
push
and
dec
sahf
outsl
imul
adc
loopne
ja
cld
loope
cwtl
sub
ljmp
push
fwait
push
mov
xchg
pop
xorb
icebp
fs
das
shll
es
add
dec
push
jecxz
pop
cld
stc
ds
cmc
cmp
mov
out
fiadds
xchg
mov
popa
mov
in
or
jne
pop
fdivs
sub
fldl
inc
sbb
cld
lahf
lock
test
sarl
fidivrs
ss
popf
cwtl
mov
mov
int
jnp
add
and
adcb
ljmp
xor
out
or
jae
test
xchg
lcall
pop
push
jne
jmp
jl
dec
inc
mov
loop
fstps
sbb
icebp
push
mov
xlat
mov
ret
xlat
jle
mov
adc
and
out
clc
pop
sar
icebp
xchg
xchg
fucomp
adc
jp
or
cmp
and
out
stos
mov
lcall
or
adc
out
and
mov
mov
stos
xchg
pop
jns
jne
or
sub
inc
and
les
sub
jb
fnsave
add
sbb
rcrb
dec
jo
mov
jle
or
push
cmc
jmp
pop
sub
pop
in
test
xor
int
cmp
rorb
xlat
dec
pusha
mov
mov
mov
mov
lahf
movsl
pusha
push
mov
push
jmp
jmp
lcall
adc
mov
xchg
add
cli
icebp
add
gs
popf
xor
sub
jmp
inc
insb
movb
jl
xchg
cmp
mov
cs
mov
aas
push
push
cmp
lds
adc
push
flds
add
cmp
rcl
jne
fmulp
sub
dec
xor
mov
mov
ljmp
xor
add
sahf
or
and
mov
ret
ret
lret
negl
in
add
outsl
pop
or
sbb
jle
out
push
lret
stc
mov
sub
or
dec
mull
jg
gs
and
adc
adc
ljmp
mov
inc
cld
cli
xor
or
je
dec
faddl
push
adc
sub
xchg
jne
sbb
or
fs
shl
cwtl
scas
cmp
dec
xor
jae
jg
sub
pop
jl
mov
adc
into
mov
jge
fwait
mov
push
or
mov
popa
daa
loop
insb
xchg
into
dec
mov
rcrb
clc
adc
in
dec
arpl
cmp
jno
xor
insl
cli
xchg
mov
cld
insl
repz
mov
jle
dec
mov
rorl
push
push
shrb
xchg
wrmsr
jnp
push
or
pop
push
jmp
inc
xchg
dec
mov
push
dec
fisttpl
push
mov
mov
pop
imul
dec
bound
push
dec
in
or
and
cltd
out
pop
mov
mov
stc
dec
xchg
arpl
repnz
or
push
dec
shr
mov
fisttpl
popa
mov
jp
nop
xchg
mov
xchg
mov
jmp
jno
dec
enter
call
rcl
fisubrs
dec
movsl
and
test
jo
imul
cli
sysexit
sbb
dec
mov
jbe
mov
rcll
cmp
cmp
sub
test
lods
xchg
sarb
cs
mov
inc
imul
push
aam
jp
fbstp
jo
push
pushf
cmp
mov
mov
or
leave
aas
ss
loop
dec
mov
aad
ss
and
mov
sbb
xchg
sbb
sub
ljmp
sbb
lret
lahf
jge
push
fwait
aam
loope
andl
jnp
add
dec
jo
dec
add
rcrl
jae
push
inc
psubw
inc
fdivrl
pop
andl
inc
sub
inc
push
les
mov
fdivs
scas
test
mov
mov
aam
leave
and
sti
jle
outsl
push
les
aam
jno
xchg
stc
icebp
and
insb
mov
inc
jb
jle
and
nop
and
and
enter
jo
aaa
loop
jmp
pop
ffreep
mov
aas
pop
lcall
int3
inc
mov
mov
mov
in
filds
pop
aaa
add
scas
sbb
jae
inc
xchg
in
repz
cmc
ret
pop
pop
sub
aaa
xchg
xlat
and
mov
cs
stos
cld
adc
sub
xor
int
stos
jl
roll
aaa
fdivrl
cmp
cmpsb
adc
imul
or
cmp
xchg
inc
fcompl
jmp
js
push
lds
dec
cmp
sbb
add
fwait
and
fsubrs
nop
popf
ljmp
add
shl
inc
mov
data16
daa
push
push
je
out
pop
sbb
aam
aad
daa
xchg
loop
pop
mov
and
xchg
sbb
int
rep
sbb
daa
mov
outsl
push
pop
dec
inc
mov
or
mov
jnp
lcall
inc
imul
cwtl
push
orb
pop
out
xlat
popf
jg
daa
xchg
test
leave
loop
pop
xchg
pop
test
fwait
into
add
inc
sbb
inc
jne
fwait
iret
inc
adc
andl
sbb
imul
mov
xchg
jb
sbb
push
cmp
mov
bound
pop
shl
movsl
fiadds
sub
jle
adc
cmc
mov
test
push
inc
in
pop
add
inc
dec
mov
adc
hlt
xchg
in
lods
popf
ljmp
mov
xor
stc
sub
shll
addr16
fcmovne
pop
xchg
and
std
fsub
ret
mov
sbb
bound
rcrb
sub
xor
bound
add
jmp
dec
fsubr
sub
cmp
addr16
jl
mov
mov
stos
cmpl
mov
mov
in
push
mov
xor
fcmovnb
jle
mov
adc
pop
jmp
inc
pop
lds
inc
sub
sti
adc
add
xor
or
scas
mov
push
ljmp
mov
gs
test
jb
in
fisttps
xchg
inc
dec
jb
inc
inc
xchg
popa
xchg
mov
dec
xor
jmp
mov
sbb
jo
scas
dec
sbb
sti
movsb
test
aas
push
pop
cmp
adc
sarb
sti
xor
scas
pop
push
mov
lret
movsl
daa
push
mov
test
out
inc
test
pop
add
or
icebp
jbe
cmp
lret
mov
dec
adc
add
fiaddl
and
xor
mov
std
inc
adc
jle
jnp
dec
inc
test
mov
loope
dec
shl
rcrl
in
mov
xor
mov
aam
loopne
lods
fcompl
and
mov
push
test
pop
cld
dec
stos
mov
jne
in
int3
in
jne
call
popa
sbb
enter
into
pop
add
lret
mov
add
xchg
inc
out
testl
or
outsl
pop
sahf
inc
movsl
xchg
add
cmp
add
mov
je
push
mov
repz
dec
fadd
push
enter
out
testl
sahf
inc
sbb
stos
inc
arpl
shlb
and
sbb
bswap
mov
xor
lods
sarl
cmp
mov
mov
nop
sbb
mov
fsubs
in
movsl
pop
aaa
and
lahf
les
out
mov
inc
mov
js
dec
repnz
cmpsl
clc
aam
mov
push
jp
pop
je
xchg
fmul
bound
push
jge
das
mov
inc
sbb
mov
fwait
mov
inc
and
add
rolb
mov
mov
jb
sbb
jge
out
cltd
mov
push
cmp
mov
push
push
push
push
xchg
cmp
lcall
ljmp
mov
leave
sbb
adc
cmpsb
subb
aam
enter
filds
xchg
pop
sbb
mov
lret
int3
mov
mov
int
das
and
movsb
xchg
rcll
lock
js
xorb
fidivl
flds
lea
inc
icebp
inc
scas
push
or
jp
dec
pop
pusha
mov
jbe
pop
clc
insl
mov
in
imul
adc
nop
sub
jl
pop
xorl
pop
fdivl
mov
icebp
jno
daa
add
std
or
jp
testl
lcall
hlt
pop
cmpsb
cli
stc
ss
mov
push
add
dec
cmp
mov
or
sbb
lcall
jns
inc
sub
call
sti
pop
outsl
add
shl
mov
out
xor
shlb
pushf
sbbl
adc
fsubl
mov
jbe
inc
data16
inc
or
push
into
cmc
out
ljmp
cld
cmp
jg
or
pop
ljmp
jmp
lahf
aaa
aam
adc
repz
cmp
push
push
roll
out
movsl
filds
mov
or
and
les
and
xor
das
or
sahf
and
adc
mov
incb
pop
xchg
add
mov
add
pusha
loope
repz
je
ljmp
push
jnp
bswap
push
jae
jl
scas
loopne
repz
hlt
adc
and
outsb
test
inc
cmp
and
sub
xor
jp
fwait
push
mov
sub
and
inc
pop
mov
jp
test
cmpsb
int3
rorb
or
cmc
xor
ret
or
imul
jb
fsubrl
lock
pop
dec
jl
and
jb
jo
enter
cmpsb
cld
fsubs
or
repnz
push
dec
xlat
loop,pn
add
call
sti
inc
inc
call
outsb
data16
fnstcw
cltd
add
movsb
ljmp
xchg
lret
cmp
mov
insb
jae
and
jae
jmp
adc
imull
rcrl
mov
mov
mov
test
repnz
jns
aad
and
sbb
insl
xor
rorl
dec
psubb
inc
xor
xor
test
pop
pop
pop
and
decb
mov
mov
hlt
aaa
jo
int
mov
lds
fldt
add
cmp
or
jno
push
jo
scas
cmp
mov
pop
and
aam
repz
mov
sub
pushf
int
mov
clc
outsl
fs
mov
popf
xchg
movsb
insb
jle
xchg
mov
outsl
push
dec
lock
stos
fcmovnu
pop
aaa
push
mov
jmp
jle
cwtl
xacquire
push
xor
adc
inc
push
fimuls
add
and
add
sti
mov
rolb
cmp
mov
or
pop
rcrl
push
pop
arpl
add
loopne
mov
inc
push
cli
sub
popl
fs
test
mov
ret
add
adc
push
cmp
xor
adcb
ds
dec
neg
mov
sti
lods
push
jp
call
mov
dec
xchg
pop
cs
and
nop
lds
arpl
xchg
add
mov
aas
aam
adc
es
add
push
lahf
mov
fs
or
fcoms
imul
cltd
sbb
lcall
sbb
ret
bound
in
mov
orl
push
sub
mov
popf
pop
ja
shll
lcall
movb
rclb
adc
mov
das
out
pusha
in
push
dec
das
xchg
adc
or
in
fbstp
test
push
bound
test
lods
mov
lret
or
int
stos
jg
out
xlat
mov
cld
movsb
dec
and
cs
pop
sarb
jb
fdivrl
inc
imul
mov
icebp
fwait
xchg
cli
push
or
cmp
mov
pop
fnstsw
inc
idivl
dec
outsl
in
adc
cmp
test
popa
adc
cmp
lcall
add
sub
ret
movsl
cmpsl
lahf
xor
in
fucomip
push
aad
dec
aad
popf
mov
lret
push
pushf
xchg
js
sub
cmpsb
js
scas
cmp
fdivrl
popf
pop
and
jp
cmp
shlb
shll
sbb
lods
in
or
outsb
mov
adc
repz
std
push
mov
cmp
or
sub
loopne
sar
rorb
ret
scas
neg
mov
stos
in
imul
cmp
in
add
or
mov
mov
adc
daa
mov
arpl
hlt
pop
daa
inc
outsl
test
pop
or
push
pop
mov
mov
pop
arpl
jle
lahf
and
or
pop
xchg
sar
outsl
jnp
adc
loope
jmp
fninit
out
xchg
loope
xlat
xchg
ja
sub
cld
mov
jmp
movsb
mov
loope
jno
lret
arpl
dec
pop
rcrb
add
push
add
fs
xchg
shlb
push
pusha
ret
idivl
call
repnz
lret
test
fbstp
stos
lods
jge
and
sub
shr
sbb
mov
ss
lods
push
jbe
push
ja
out
mov
sti
lods
or
arpl
nop
pushl
mov
test
lock
scas
std
mov
out
or
jae
jne
movsb
jg
push
into
inc
cmpsl
in
mov
cmp
das
lock
cmp
mov
adc
int3
loop
aas
push
mov
movsb
sbb
std
push
insb
mov
cs
push
mov
mov
lock
test
fucomip
xor
mov
cmp
sub
inc
imul
aam
lock
mov
dec
mov
or
incb
testb
je
push
aas
insl
sbb
cmp
mov
scas
call
nop
add
insl
rcrl
jns
pop
pop
xchg
loop
cmp
cmp
clc
popf
jle
inc
pop
or
imul
nop
cwtl
add
repz
cmp
aad
lds
push
cmp
and
or
fcmovbe
aas
arpl
stos
iret
loope
ja
mov
lods
sahf
sub
xor
loop
cld
lret
mov
fisttpl
fwait
shll
or
inc
mov
movsb
shl
sbb
push
cli
mov
mov
inc
les
enter
fcmovbe
lahf
fsubrp
mov
pop
jl
das
mov
in
push
jl
sbb
inc
xor
cmp
mov
xchg
lock
jne
sub
mov
repz
adc
out
dec
dec
cmp
shrb
mov
in
dec
push
int3
fsts
push
inc
lods
and
and
negl
xchg
xor
jg
xchg
std
xchg
jae
inc
cwtl
jns
xor
daa
jmp
cmp
ret
lcall
jge
mov
and
push
lret
mov
or
bound
bound
adcl
sbb
std
dec
add
push
and
fdivrl
into
rcrb
stc
sub
jb
mov
jae
xlat
in
mov
das
pop
cmp
sbb
lahf
lret
fwait
mov
add
or
in
lods
test
fnstsw
and
inc
xor
sbb
sti
push
cmpsl
push
lret
sub
stc
enter
push
testl
adc
mov
and
add
mov
inc
xor
mov
je
dec
mov
jae
pusha
mov
ret
sahf
fdivr
cwtl
jns
stos
sub
or
loope
test
enter
std
jmp
mov
sti
movb
push
mov
push
mov
lea
out
outsl
mov
push
out
jae
mov
mul
in
pop
mov
loop
push
dec
mov
data16
js
mov
mov
es
insb
les
aam
sbb
or
jb
test
scas
adc
and
jbe
and
push
mov
cmc
hlt
push
xchg
rclb
push
in
xchg
ficompl
les
ljmp
in
xchg
icebp
push
sahf
sbb
aas
addl
lods
fcmovne
fcompl
sub
ret
pop
fidivrs
add
add
push
inc
in
jl
pop
hlt
lret
xor
pop
inc
lods
and
cmp
add
fwait
imul
mov
mov
mov
mov
std
cmp
push
or
shr
scas
dec
in
inc
dec
xchg
inc
shr
push
rolb
stos
mov
out
jl
and
cmpsl
jb
sbb
daa
bound
push
pop
mov
in
pop
movsl
dec
or
ja
aaa
cmpsl
cltd
arpl
test
dec
add
inc
scas
pusha
pop
out
repz
or
pop
data16
loopne
je
lret
inc
pop
mov
cwtl
dec
pop
hlt
popf
adc
mov
push
dec
xor
rcr
pushf
aam
push
xchg
hlt
jne
pop
push
test
cmpsl
mov
aaa
jg
mov
sub
push
mov
push
lea
sbb
mov
jle
fsub
imull
xchg
inc
aad
cmp
movsl
and
xchg
ror
inc
push
inc
rcll
dec
and
sub
lods
push
rolb
and
push
dec
lahf
enter
and
aas
xor
jns
adc
test
sub
jp
xor
sub
inc
mov
mov
and
enter
push
xor
and
push
sbb
xorl
arpl
sbb
nop
int3
stos
or
pop
mull
pop
mov
cltd
xchg
sub
xor
inc
adc
inc
and
int
je
jns
xor
push
in
xchg
pop
push
outsl
lret
lods
inc
or
sbb
negb
jns
lret
mov
loop
cmpsl
loope
xchg
in
ljmp
lds
jg
inc
ljmp
pop
mov
out
cmpsl
mov
xor
repnz
mov
mov
xor
jb
dec
cmp
cld
xchg
hlt
enter
jecxz
mov
xchg
inc
and
cmp
repz
jmp
mov
cmpsl
fidivrl
xchg
mov
outsb
push
leave
push
pop
fwait
mov
adc
pushf
push
jo
xor
pop
jecxz
into
sub
push
sarl
js
and
sti
mov
xchg
fcomps
pop
mov
cmpsl
push
xchg
xsave
mov
loope
push
xchg
test
shrl
sbb
dec
loope
pop
pop
int
push
int3
fcmovbe
push
fcomps
sbb
push
adc
addl
pop
mov
xchg
and
xchg
ja
js
int3
jno
push
and
sbb
adcl
out
addr16
sti
scas
in
xlat
push
outsl
in
push
aas
or
lods
jno
imull
pushf
ljmp
dec
cmp
aas
jecxz
lahf
push
add
inc
mov
push
adc
pushf
popf
stos
lahf
in
inc
scas
js
or
cmc
add
mov
xchg
push
rcr
cmp
pop
xchg
jno
adc
dec
mov
lock
push
or
mov
cmpsb
push
mov
cli
push
push
push
jecxz
pop
or
jge
pop
dec
ljmp
out
sbb
mov
andb
fcmovnbe
jg
mov
cmp
push
pop
in
rolb
or
bnd
xor
sbb
fildl
mov
shrl
mov
and
out
sub
cmc
ljmp
aas
cli
bound
test
cmpsb
xchg
mov
loop
pop
inc
jno
push
push
popf
sbb
jle
mov
cld
dec
mov
xor
mov
or
je
pop
jae
xor
adc
loope
fcmovnb
loopne
jne
jne
in
mov
dec
pop
outsb
lds
sub
pop
in
jb
xor
cmpl
and
jo
cmp
push
xlat
pop
mov
in
pop
push
mov
lods
mov
sub
fistpll
pop
jns
and
pop
add
repnz
lret
arpl
xlat
xor
add
ss
jecxz
idivl
int
inc
jp
push
mov
std
or
subl
jge
popa
orl
pop
xchg
arpl
je
sbb
pusha
fs
add
shrl
fildl
pop
pop
xchg
sti
push
es
mov
xchg
orb
cs
div
in
and
divb
push
xor
dec
mov
lahf
repz
incl
fiaddl
push
lods
sub
sahf
pop
loop
adc
push
and
dec
lret
pop
xchg
iret
pop
xor
in
xchg
call
cs
fwait
xchg
jae
test
in
mov
push
mov
xchg
imul
jl
aas
push
aaa
mov
fstl
inc
xor
test
mov
and
jecxz
push
mov
fnstsw
cmp
jne
std
xchg
mov
movsl
or
cmp
daa
fists
mov
lcall
pop
psrlq
jbe
xchg
mov
in
in
mov
jnp
lret
jne
out
rclb
fisttpl
out
lock
cmp
inc
idivb
push
movsb
int3
pop
cmp
cmpsb
adc
call
sbb
rclb
cmp
movsl
mov
sbb
or
jg
mov
popa
xor
cltd
into
and
stos
mov
nop
pop
in
sbb
xchg
dec
xor
repnz
xor
loopne
outsl
movsl
xor
xor
ss
cmp
mov
mov
fucomi
lods
loopne
push
cwtl
xlat
imul
pop
es
mov
cmpsb
jg
insb
test
sub
dec
cs
insb
mov
mov
stos
or
sbb
lret
add
adc
popaw
cmpsl
or
cmp
and
inc
dec
fdivrl
xor
leave
les
in
jl
mov
add
lret
je
pop
cmc
dec
ljmp
inc
push
jne
js
sbb
loope
stos
repnz
pop
mov
imul
xchg
out
shll
adc
xchg
pusha
mov
leave
push
jbe
and
add
sbb
push
shll
jge
push
or
mov
sub
jle
push
jne
sarl
ss
inc
leave
cmp
jmp
sbb
xlat
aas
daa
cli
mov
add
or
jge
fwait
pusha
fildl
jg
arpl
sbb
inc
loopne
cs
ja
push
lahf
jns
inc
jno
dec
inc
mov
dec
pop
push
movsl
push
enter
mov
push
sub
push
inc
push
xor
mov
adc
push
inc
or
push
mov
xchg
stos
mov
test
ja
jne
out
roll
insl
xchg
and
dec
repz
mov
mov
xor
add
lret
and
xor
enter
pop
ja
cmp
js
dec
ret
xor
call
mov
sub
sbb
clc
popl
insb
cmp
xchg
bound
xlat
or
scas
ret
mov
fsubs
repz
push
int
push
out
hlt
daa
cmc
push
ret
dec
or
lea
mov
cli
add
fsubrl
sbb
je
mov
xchg
jecxz
sbb
sbb
sahf
arpl
push
rcrl
in
jle
push
mov
sub
add
mov
mov
aam
add
aad
mov
xchg
pop
adc
adcl
scas
fistps
mov
xor
pop
fcomps
out
test
inc
push
inc
dec
push
dec
and
mov
pusha
out
aas
xor
imul
loope
jecxz
xchg
jge
fs
jecxz
addr16
outsl
lret
xor
push
bound
sahf
rcl
mov
jge
std
mov
hlt
push
scas
cli
shlb
out
loopne
xchg
push
sbb
adc
ficoml
fidivrs
xor
mov
test
je
mov
push
jbe
ja
adc
cmpsl
mov
jb
addr16
adc
aaa
or
lret
mov
lea
test
jge
adc
sbb
lods
cmpsl
pop
xor
cwtl
outsb
push
xchg
stos
pop
mov
dec
cmp
in
push
testl
xchg
mov
push
mov
and
outsl
out
jp
mov
sub
push
mov
adc
sub
xchg
xor
dec
xchg
inc
add
repnz
push
mov
lret
sbb
in
mov
xor
cld
lods
mov
mov
add
pop
xchg
cltd
shll
int
inc
dec
mov
mov
mov
cltd
xchg
pop
add
xlat
rcrl
adc
jp
cld
sub
mov
dec
int3
lcall
repnz
mov
outsl
push
add
ret
ror
out
aas
aad
dec
rcrl
xchg
dec
cmp
xor
sbb
jle
stos
pusha
test
inc
dec
xchg
add
das
mov
mov
mov
pop
popf
loopne
jg
push
mov
xchg
popa
popf
fsubs
mov
pop
arpl
mov
jmp
adc
mov
lds
cmpl
or
sub
into
jno
mov
gs
adc
lds
popf
xor
int3
dec
sbb
fs
fidivl
frstor
sbb
xor
pushf
cmpsb
pop
fwait
sbb
cmp
hlt
add
mov
dec
outsb
lds
dec
hlt
jg
rcll
pop
cwtl
jo
dec
adc
pusha
jle
xor
pop
and
mov
or
outsl
and
xchg
and
pop
jle
mov
lock
jmp
push
push
sarl
cmpsl
adc
fldcw
mov
dec
xchg
aam
lock
ret
pop
mov
cmpsb
fdivs
xchg
notl
aad
in
jno
in
aad
daa
sbb
pop
dec
fwait
adc
pop
dec
push
enter
rorl
ds
in
sub
sbb
hlt
test
adc
xchg
inc
iret
lods
cmp
xchg
inc
inc
add
cld
xchg
out
aam
push
xchg
jg
pop
jle
mov
cmpsl
daa
jnp
in
push
ds
pop
es
pop
cmp
mov
addr16
ja
push
add
xchg
test
mov
xchg
shlb
aaa
bound
xchg
adc
mov
shrb
jle
push
jne
jmp
mov
mov
adc
jbe
movb
dec
test
fcomip
push
out
or
xchg
lods
xchg
mov
xchg
mov
jl
sbb
fimull
loopne
inc
mov
jecxz
jo
inc
cmpsl
out
pop
add
cmp
cmpsl
je
fldt
test
stos
xlat
stc
ret
lea
repz
xchg
push
jbe
sbb
insl
cmp
in
jno
shl
mov
inc
orb
and
or
into
push
cmp
pop
pusha
and
fnstenv
mov
sar
and
loop
fucomi
enter
jge
orb
xchg
cmpsb
sub
imul
dec
in
lds
out
jg
dec
loop
inc
xchg
pop
adc
mov
cmp
mov
mov
xorb
movsl
hlt
fcmovnu
shl
inc
stc
bound
lods
sbb
and
jge
or
pop
adc
sub
sbb
sbb
push
and
push
mov
aad
lock
lds
outsb
pop
push
ds
mov
mov
xor
sub
add
jl
and
jbe
mov
xchg
into
xchg
mov
lea
das
mov
xor
dec
les
out
inc
push
push
mov
pop
adcl
mov
and
call
mov
test
pop
pushf
in
inc
push
loopne
nop
arpl
fsubl
shll
lcall
and
fstps
adc
fwait
jnp
jmp
add
mov
adc
mov
cmp
mov
in
je
and
enter
fdivrl
push
clc
aad
dec
and
pop
movsb
es
mov
jno
or
movsl
push
jns
cmp
mov
xor
test
add
add
movb
imul
mov
movzbl
mov
jmp
xor
add
imul
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
jmp
sbb
sbb
push
mov
mov
int3
push
ret
inc
push
bound
pop
bound
or
es
push
pushf
and
dec
mov
cli
ja
stc
dec
test
outsl
sarb
xlat
mov
in
push
icebp
ljmp
push
xadd
aaa
push
test
les
loope
arpl
and
lret
outsb
enter
mov
push
cmp
insl
cs
adc
xchg
dec
adc
mov
test
xchg
sub
insb
push
mov
jnp
cmp
pop
jbe
dec
sbb
shrl
hlt
outsl
je
push
outsl
loop
sub
dec
cmp
cmp
fcmove
sbb
jp
adc
and
sbb
lret
mov
xlat
lods
add
out
sbb
test
movsl
loop
cmp
test
xchg
cld
mov
ljmp
stos
cmp
lahf
mov
mov
stos
int3
lods
sub
mov
adc
pop
jle
std
sbb
ljmp
lahf
fwait
sarl
stos
test
dec
int
mov
cmpsl
mov
frstor
in
adc
popf
aaa
xor
push
push
pop
xor
inc
pop
lahf
imul
push
enter
dec
mov
sbb
xchg
xchg
cmpb
lds
loop
jmp
ret
aaa
loope
sahf
jle
mov
test
sub
loope
dec
pop
sub
fstps
pop
push
pop
xor
adc
pop
dec
lret
mov
lret
ffree
jecxz
out
gs
xchg
dec
jle
or
pop
pop
ljmp
ljmp
pop
daa
adc
out
bound
adc
adc
pop
dec
xchg
add
pop
cmp
pop
and
inc
jae
pop
in
xchg
aas
mov
cwtl
inc
jle
add
in
sub
mov
cmp
sub
push
lea
xor
subps
sti
jnp
dec
mov
xchg
test
in
and
icebp
add
jns
jae
jb
int
int
sahf
and
inc
jl
cmc
dec
and
cs
lock
test
cmc
mov
mov
push
popf
cmpsb
out
xor
push
neg
iret
ret
dec
push
xchg
inc
pop
or
sbb
pop
or
es
imul
lea
insl
pusha
outsl
dec
aas
add
ljmp
popa
rcl
dec
xlat
jp
push
or
sub
incl
iret
sti
out
push
cld
loope
pop
out
xchg
cs
sbb
jns
pop
inc
out
pushf
sbb
aam
dec
clc
scas
mov
es
imull
test
mov
pop
faddl
pop
push
lock
insb
mov
incb
cmp
cmp
fadds
in
xchg
in
fwait
xchg
dec
push
into
loope
fiadds
test
jne
js
movsl
out
sbb
push
mov
cmp
mov
lahf
xchg
sahf
out
mov
sbb
fsubl
hlt
or
add
test
adc
fsts
pop
fsubrs
enter
lcall
fs
inc
or
inc
loopne,pt
add
mov
fdivp
inc
add
rolb
add
out
clc
or
shr
jmp
or
test
or
stos
paddusw
push
mov
sub
push
mov
hlt
shll
hlt
inc
push
cmp
sbb
les
xchg
cmp
stos
or
idiv
pop
sbb
mov
dec
mov
cmp
pop
sbb
add
sbb
fdivl
call
dec
mov
xchg
jo
xor
stos
fldlg2
ret
xchg
dec
xbegin
cwtl
sbb
int3
test
clc
pop
jl
jno
xchg
cmp
cmp
push
push
adc
mov
jbe
aaa
mov
es
gs
adc
push
push
mov
pop
inc
les
clc
add
pop
out
sar
fdivrl
cmpsb
lret
mov
lds
leave
add
fwait
rcrl
test
jbe
jnp
idivb
sbb
imul
pop
push
mov
mov
pop
and
mov
sbbb
popf
sbb
divb
jecxz
sahf
leave
push
inc
mov
mov
dec
lret
sahf
xchg
or
lods
mov
sub
scas
push
jns
enter
xor
outsl
jnp
jne
cmpsl
push
jle
int
icebp
add
cltd
mov
inc
jno
loope
mov
scas
mov
push
decl
or
mov
push
addb
xor
xor
add
lock
dec
loop
push
pop
insl
sbb
xchg
mov
mov
mov
cli
mov
adc
mov
lahf
lcall
push
mov
mov
out
cmp
mov
sub
xor
fnstsw
loope
pushf
push
sub
inc
pop
xchg
call
sub
std
push
jecxz
or
jmp
icebp
stos
dec
inc
mov
ljmp
mov
and
inc
fsubs
lahf
lods
and
ret
mov
sbb
push
jmp
addr16
and
mov
cmp
gs
outsl
loope
imul
int
mov
pop
pop
xchg
or
ficomps
mov
dec
mov
xor
test
xchg
xlat
testl
es
mov
call
cli
adc
int3
push
xchg
lahf
add
push
mov
push
push
insb
rcrl
sub
xchg
inc
ds
out
aam
push
repnz
testb
sbb
outsb
push
push
xchg
ret
lods
shl
cwtl
sti
xchg
bound
adc
xchg
gs
or
mov
xor
sbbb
inc
scas
push
xor
push
and
scas
mov
dec
adc
test
and
jle
inc
and
cmc
incb
idivb
and
lret
add
out
subl
jae
jecxz
outsl
rcrb
jns
xchg
mov
push
jge
push
das
jle
aam
pop
fdivs
daa
xor
jmp
dec
stc
mov
push
setp
push
aam
lret
pminsw
out
jmp
jns
std
inc
mov
adc
movsb
in
jecxz
inc
push
pop
mov
or
mov
mov
rorb
or
lcall
scas
cmp
xchg
in
xchg
dec
add
icebp
jne
ret
in
adc
cltd
ds
sbb
faddl
mov
lods
imul
fsubs
mov
into
fwait
dec
outsl
sar
mov
cltd
dec
fidivrl
mov
sub
inc
cs
pop
mov
jg
mov
fidivs
add
push
out
je
sahf
jecxz
dec
shrb
lcall
pop
out
imul
ja
and
jnp
cmpl
xchg
jmp
adc
out
inc
aam
cli
xor
push
inc
shr
imul
fldenv
jmp
push
adc
shl
lret
inc
mov
mov
pop
mov
icebp
loop
subl
push
push
and
repnz
jmp
xchg
jmp
test
mov
push
xchg
push
and
sub
in
std
xchg
push
movsl
ss
dec
add
pop
subb
dec
shlb
push
aam
ljmp
addl
add
lea
aam
cmp
pop
add
jge
and
mov
mov
mov
in
sub
push
rcrl
sbb
mov
or
lock
icebp
int3
cmpsb
mov
push
hlt
popa
movsl
cmp
mov
call
pop
rcrl
cmc
pop
jmp
pop
fcompl
mov
stc
cmp
add
lcall
lret
jae
rcrl
push
sbb
cli
popa
std
sub
lahf
daa
cltd
lods
js
push
dec
push
mov
add
fistpll
iret
xor
imul
xchg
icebp
mov
out
sbb
gs
mov
or
and
in
mov
push
xchg
bound
imul
jo
mov
mov
fbstp
dec
popf
mov
std
ljmp
pop
jl
xchg
lds
js
cmp
mov
jnp
ss
icebp
push
jecxz
notb
lcall
fwait
dec
mov
cld
daa
lock
jb
mov
mov
xchg
mov
pop
sbb
mov
nop
push
daa
pop
pushf
fnsave
fimull
push
jge
ret
test
sbb
push
sub
leave
cmpsl
or
cs
and
mov
push
xor
inc
inc
lahf
xchg
adcl
xchg
mov
ss
pop
mov
andl
cmpsb
lea
push
adc
stc
mov
cmpb
inc
or
or
enter
add
test
mov
push
mov
cmpsl
mov
xor
ret
stc
mov
cmpsb
inc
fcomps
shlb
repz
push
inc
jl
test
hlt
bound
and
lret
pop
jl
inc
dec
fsubl
aas
push
cmc
mov
adc
je
int
xor
fcoml
fstl
lods
repnz
push
mov
jno
push
in
pop
or
push
aaa
sub
negb
fldcw
stos
fmuls
popa
movsb
negb
and
lods
rcrb
in
cli
stos
aad
jae
fnstenv
and
adc
xor
jecxz
add
and
and
fnstsw
or
lret
xor
jo
push
cld
xlat
or
mov
sbb
adc
cmpb
mov
loopne
pop
and
popf
dec
cmpsl
push
add
xchg
cmp
adc
add
bound
xlat
cmp
push
iret
out
stos
int
add
data16
cs
lods
cmp
mov
pop
cli
dec
mov
aad
mov
int
adc
nop
dec
adc
add
aad
roll
add
pop
dec
jp
divb
std
xor
fisttpl
xchg
mov
dec
jmp
ror
nop
add
cmpsl
sub
jnp
mov
cs
inc
xchg
pop
cmp
xchg
mov
push
movsl
sub
out
fcompl
out
jp
out
push
hlt
sarl
add
outsl
inc
dec
aaa
fs
or
lret
push
loope
sbb
mov
push
clc
jne
cld
leave
lea
dec
loope
fmull
lcall
jecxz
pop
lods
ljmp
out
data16
iret
insl
inc
mov
jb
mov
addr16
lods
jns
jbe
les
std
mov
and
add
ljmp
pop
adc
fs
mov
xchg
push
mov
imul
sar
stos
addb
sbb
push
add
into
mov
lret
shlb
setge
jno
xlat
or
xchg
out
fisubl
add
inc
and
dec
icebp
mov
mov
lea
jl
pop
fwait
mov
cmp
pop
ficoms
adc
xlat
pop
jp
push
push
fistps
adc
jns
lock
add
out
lcall
xor
divps
sub
pop
cmp
mov
xchg
pushf
cmpsb
dec
lret
jl
sub
lods
cmpsb
ss
les
lds
out
xor
ljmp
xor
push
adc
sbb
sbb
nop
insl
mov
cltd
and
dec
dec
push
insb
cmp
cwtl
lcall
cltd
repz
fs
jb
xchg
bound
outsl
mov
sbb
test
mov
push
lock
push
enter
jo
ja
dec
inc
pop
adc
sub
dec
ret
sub
mov
leave
cld
dec
adc
push
mov
sbb
iret
add
mov
je
cmp
popa
xor
pop
mov
sbb
mov
mov
mov
ljmp
repnz
jl
cmp
dec
cmpsb
dec
mov
lds
das
xchg
scas
sub
add
mov
mov
in
inc
ss
push
sbb
ljmp
rorl
and
mov
lret
cmp
xchg
icebp
in
xchg
lock
pop
aad
sbb
push
in
outsl
add
mov
pop
andl
aad
leave
int
mov
jae
sbb
es
out
out
pop
or
mov
leave
mov
push
subl
mov
jnp
push
movsb
mov
push
pop
push
outsl
lock
sub
in
fdivp
rcr
fistpll
lret
push
std
jbe
xor
mov
imul
scas
pop
shrb
iret
dec
mov
cmpl
insl
imul
shrb
scas
scas
lods
push
fdivr
mov
jo
mull
dec
and
and
ja
pop
jg
pushf
cs
mov
data16
enter
push
test
fildl
out
add
add
inc
cs
lods
pop
shlb
test
fsubl
jl
jmp
ds
fisubs
mov
jns
mov
shll
add
mov
pushf
fs
fcomps
roll
xor
stos
xchg
and
pop
addl
pop
jp
in
lret
push
mov
mov
mov
xchg
jle
push
icebp
adc
fwait
cmp
scas
cmp
lahf
sbb
adc
push
xor
push
jnp
dec
pop
xor
or
clc
test
dec
sbb
testb
mov
and
inc
xor
pop
mov
dec
or
outsb
mov
xchg
outsl
jle
mov
dec
mov
mov
sbb
xor
mov
mov
adc
rcrl
or
inc
repnz
sti
xor
push
scas
pop
xchg
mov
jo
cmp
leave
inc
dec
lcall
pop
mov
je
mov
push
in
dec
icebp
adc
es
xor
out
test
fs
jl
lcall
mov
add
int3
add
pop
mov
cmp
cltd
jno
out
adc
shlb
addl
lcall
je
push
ret
sbb
cld
adc
insl
or
lods
cmp
scas
pop
cmp
out
mov
cltd
pop
in
fisubs
add
mov
xor
inc
test
ret
jecxz
inc
scas
int
xor
les
rol
inc
icebp
out
and
mov
cld
inc
or
pop
sbbl
in
loop
aas
sarb
das
aam
pushf
nop
test
push
or
xchg
mov
and
daa
pop
push
xchg
popa
add
sahf
pop
push
cmp
cmpl
sbb
fistpl
shl
lret
pop
mov
cs
dec
and
sbb
add
nop
mov
arpl
cld
mov
in
xor
sbb
and
mov
push
mov
mov
stos
push
lods
sub
push
lret
sarl
jecxz
out
ja
aaa
jno
pushf
ds
and
sub
dec
outsl
or
sbb
and
or
adc
sub
adc
xor
loopne
fidivs
test
test
xor
sbbl
add
in
add
loope
pmullw
inc
push
jle
inc
mov
fisttps
repnz
sahf
lea
sub
pop
xchg
mov
aaa
movsl
lcall
and
es
jne
gs
xchg
pop
test
sbb
inc
dec
ljmp
xorl
dec
add
bnd
xor
pop
mov
pop
imul
pop
xchg
cmp
xchg
lret
or
sarb
dec
negl
dec
jne
int3
out
xor
pop
jp
ret
dec
shrb
dec
xor
dec
or
cli
push
mov
loopne
or
lsl
cli
fs
std
loop
jmp
dec
cmp
test
xchg
out
les
ljmp
push
mov
jnp
mov
and
mov
cmpsb
repnz
shrb
popf
adc
rcl
or
pusha
js
cmpsb
aam
lret
in
add
nop
xor
xchg
notb
shlb
andl
std
lcall
cmpsl
cmpsl
cmp
cmpsb
test
jmp
bound
pop
mov
jnp
popf
xchg
push
pop
lcall
inc
mov
sub
ss
jo
imul
and
std
cli
inc
add
hlt
pop
fisttps
ret
adc
mov
loop
pusha
ficoms
mov
rcrb
jmp
inc
hlt
into
mov
repnz
sbb
and
mov
mov
iret
sub
int3
sbb
inc
or
add
aaa
ror
cwtl
loopne
or
sbb
pop
les
int3
adc
lds
jno
cmp
jmp
add
mov
into
fwait
adc
imul
aad
testb
mov
push
sub
test
test
and
dec
jecxz
xchg
mov
mov
sahf
ret
ret
adc
or
mov
enter
cmp
push
jo
jmp
and
roll
add
pop
orl
sub
sbb
out
dec
scas
pop
push
mov
sbb
cs
push
lea
outsl
into
bound
int
pop
divl
push
xchg
std
ret
popf
or
adc
lds
pop
stc
xor
lock
cwtl
pop
mov
adc
je
add
xchg
or
xchg
lcall
insb
mov
jbe
cmp
pop
stos
add
fucomi
jne
dec
fwait
dec
out
test
outsl
cmpsl
in
ret
lcall
mov
jmp
icebp
cmp
inc
jp
lock
mov
loop
mov
test
nop
adc
movsl
cmpsb
addr16
call
clc
lock
cmp
iret
or
dec
pop
mov
jl
aad
and
and
pop
sbb
fdivl
stos
rcll
mov
adc
sbb
or
lahf
lods
js
or
and
scas
mov
add
shrb
rolb
mov
mov
or
jbe
outsb
ss
inc
mov
pushf
test
aad
mov
jb
mov
add
dec
push
int
aam
jne
neg
pusha
fsubrl
inc
mov
sub
pop
pushf
push
in
sub
popl
adc
mov
test
ljmp
mov
out
mov
jecxz
arpl
mov
xor
fsubr
cmp
cmp
bnd
pusha
pop
popa
in
stos
cmp
cmpsb
inc
imul
imul
shlb
dec
lock
mov
in
dec
jno
out
pop
adc
idivl
out
dec
mov
insl
xchg
in
adc
cmpsb
sub
mov
xchg
dec
xchg
shrb
and
into
fimull
inc
pop
jg
jecxz
add
lods
ljmp
int3
std
cmc
xlat
cld
inc
aam
fistpl
imul
inc
add
xchg
leave
dec
addr16
mov
call
push
gs
pop
es
fnstenv
inc
imul
push
cmpb
push
jo
xchg
adc
cmp
or
leave
xchg
xor
lcall
popa
xchg
and
dec
adc
or
out
inc
mov
push
std
pop
and
call
add
jge
sarl
sub
pusha
in
flds
sbb
mov
xor
sub
loop
ret
mov
in
or
outsl
push
rcll
add
mov
pop
data16
outsb
fs
xchg
mov
fsubrs
push
aad
test
sti
sahf
and
inc
pop
cmp
mov
add
push
xor
repnz
int3
in
mov
ret
dec
dec
inc
sar
shll
pop
inc
lds
je
dec
das
sbb
sub
lahf
xchg
xchg
mov
add
dec
inc
movl
stc
cmc
popf
xlat
cmp
inc
out
out
outsb
sbb
cltd
push
imul
mov
lods
mov
gs
inc
push
popf
jnp
mov
inc
and
mov
mov
enter
push
push
ja,pn
fwait
movsl
jnp
fmull
fwait
sbb
insl
fnstsw
addr16
and
jmp
out
scas
jp
cmp
sub
cmp
push
cltd
lock
sub
bound
jg
pop
cmove
mov
cmp
push
les
pop
aam
data16
sbb
mov
jg
leave
xor
mov
mov
push
fcomip
sbb
adc
mov
adc
pop
scas
adc
je
movsl
lock
mov
imul
insl
clc
mov
mov
mov
jnp
fistpll
push
add
xchg
mov
mov
mov
aad
or
xorb
aam
icebp
cwtl
dec
mov
dec
mov
inc
stos
loop
mov
loop
mov
shrl
mov
fwait
inc
insb
out
jb
pop
sub
xchg
jne
stos
stc
jle
fidivl
movsb
das
bound
aad
std
or
mov
cmp
inc
mov
aaa
aas
fld
push
out
out
dec
sub
je
js
push
inc
aaa
std
sbb
cmpsl
pop
add
pushf
mov
add
xadd
mov
jle
sub
push
cltd
dec
incb
test
ja
mov
xorl
push
scas
in
call
sub
pop
loopne
cmp
sbb
or
inc
inc
jns
mov
shll
inc
cmp
lock
pop
pop
jp
idivb
add
int
jmp
ljmp
xor
or
sub
jne
ficoml
mov
lock
jae
mov
ja
je
inc
and
jne
or
out
out
mov
sub
dec
xchg
jnp
push
xchg
adc
pop
vcvttpd2dqx
or
jle
mov
mov
repnz
stos
sbb
sub
inc
cmp
mov
aaa
sbb
insl
out
fwait
sub
sarl
cmp
dec
xchg
imul
mov
jnp
out
fsts
mov
dec
js
mov
clc
pop
into
fisubrs
adc
pop
scas
hlt
mov
adc
insl
xor
or
daa
mov
out
jae
xchg
sbb
push
fildl
ficomps
mov
and
in
xchg
jno
mov
mov
sbb
adc
or
sub
sbb
push
shr
hlt
xchg
lahf
cltd
into
lods
jb
mov
test
cmp
popf
inc
push
jb
popf
add
scas
lret
movsb
jl
call
jnp
in
lret
sbb
dec
shrb
orl
sbb
jg
test
mov
ds
cmp
ja
ret
xchg
cmp
pop
ret
push
lret
in
gs
xchg
inc
dec
arpl
adc
mov
push
mov
push
sbbb
mov
fcomps
punpckhwd
dec
push
add
push
inc
in
pop
pop
xlat
das
mov
add
mov
push
ja
sbb
jne
hlt
jl
mov
or
push
adc
outsb
push
cmp
cmc
sbbb
nop
adc
test
je
push
rcrl
and
sub
cs
mov
lock
test
fidivs
and
dec
or
les
in
push
mov
fistps
or
mov
push
aam
insb
sub
sar
test
mov
mov
leave
dec
pop
xchg
jle
push
fwait
push
dec
lea
jns
pop
cwtl
push
pop
or
fldt
and
pop
inc
pop
fbld
shrb
scas
pop
mov
push
jbe
mov
push
pop
xor
pop
push
adc
or
xchg
or
adc
or
or
cmp
icebp
in
rclb
pop
push
shr
outsl
daa
push
pop
mov
andl
xor
xchg
jge
les
mov
rdpmc
adc
scas
ljmp
xlat
sbb
cmp
pop
push
bound
push
pop
in
and
les
loope
ja
pop
dec
sarl
ljmp
rorb
mov
lea
xor
cmp
mov
jg
mov
adc
pop
outsb
out
cmp
xor
cld
pop
subb
ficoml
or
pop
int
mov
outsb
xchg
andb
lret
mov
in
and
push
fstpl
xor
loop
mov
jno
cmp
xorb
in
inc
xchg
and
filds
outsb
push
mov
push
xor
or
stos
pop
xchg
and
mov
pop
mov
cmp
jbe
mov
movsb
inc
fsubl
push
jae
push
ret
fistps
dec
in
push
insb
xor
mov
inc
movsl
cltd
pop
fimull
cwtl
int3
rol
sub
mov
stos
adc
cwtl
mov
jl
out
scas
sar
mov
cmpsb
test
jo
mov
repnz
std
popa
test
pop
rcrl
mov
sub
mov
inc
idiv
and
push
mov
mov
decb
xchg
sbb
mov
lods
sbb
addl
cmp
sbb
and
je
or
insb
in
stos
cltd
inc
mov
inc
mov
int
ret
dec
ss
xchg
sbb
sub
rdmsr
cmp
decb
orl
mov
lahf
lds
sbb
cld
jne
sbb
fildll
pop
and
sub
jbe
and
adc
or
pop
je
push
aam
or
xchg
add
mov
mov
xchg
jg
mov
inc
shl
adc
jl
into
test
clc
jnp
cmc
out
jmp
mov
pusha
je
mov
cmp
xchg
sbb
rorb
ljmp
hlt
stos
jmp
in
jno
je
cmpsl
pop
jb
pop
iret
ret
push
jno
adc
mov
push
and
xchg
mov
iret
mov
xchg
arpl
mov
xchg
xchg
pushf
sub
xchg
adc
inc
jge
mov
rcrb
cli
test
xchg
in
cmp
xchg
in
or
mov
mov
vcvttps2dq
rclb
pusha
fs
add
xchg
jecxz
fcmovbe
dec
repnz
mov
or
cmpsl
les
sub
push
jl
icebp
imul
js
sub
xchg
in
idiv
out
scas
stc
or
aam
mov
cmp
cld
xchg
mov
sbb
sbb
mov
inc
jbe
inc
bnd
cmc
dec
enter
xchg
faddl
mov
jne
xor
xor
mov
cmp
stos
test
sar
std
sub
cs
xchg
insb
or
out
mov
sub
rorl
adc
je
mov
inc
cs
insl
or
jecxz
push
push
sbb
dec
fs
test
jbe
ja
push
xchg
push
in
pop
cmp
add
mov
jg
aas
decl
jnp
xchg
repz
adc
push
adc
lcall
mov
adcb
shld
imul
das
dec
lea
cs
mov
cmp
sbb
es
cwtl
popa
xlat
cmp
mov
mov
sbb
insl
mov
inc
cmpsl
arpl
adc
in
mov
ret
movb
idiv
jb
adc
cmpsb
push
xchg
lahf
mov
jnp
xchg
stos
fidivrl
call
cmp
inc
test
mov
subl
imul
mov
rorl
xchg
push
pop
mov
jae
push
sbb
clc
aaa
lahf
ret
in
out
loope
clc
lret
leave
jo
sub
mov
sub
pop
test
mov
fs
clc
negb
call
push
sub
and
mov
lods
jne
push
in
nop
imul
in
pop
test
into
nop
sbb
mov
mov
cs
nop
cs
sarl
sub
imul
jmp
ffree
shlb
cmp
test
sbb
adc
and
sub
add
scas
imul
dec
fidivrl
pop
cmp
xchg
dec
xor
push
loope
aas
sbbb
cmp
mov
add
jle
stc
add
jmp
xor
leave
or
popf
jg
popa
mov
mov
xchg
adc
test
scas
mov
add
mov
lahf
neg
imul
fcomi
out
popa
lods
and
fisubrl
mov
cmp
adc
and
hlt
mov
das
stc
push
dec
pop
mov
push
mov
aaa
push
stos
jmp
fs
je
ds
nop
xorb
add
aas
or
lods
aaa
stc
jae,pt
dec
mov
push
in
ljmp
mov
xor
jb
mov
fisubs
pop
lcall
and
mov
imul
repz
popa
and
add
xchg
xor
inc
adc
stos
pushf
out
sbb
mov
xchg
ljmp
xor
mov
mov
popf
mov
jle
mov
ret
int
test
mov
mov
adc
sbbl
add
inc
push
xor
fistl
loopne
mov
not
cltd
mov
xchg
mov
sbb
sbb
outsb
jge
adc
inc
inc
add
or
pop
fidivrs
addl
ljmp
leave
leave
insl
jnp
push
in
call
xor
sbb
adc
cld
in
push
adc
mov
mov
clc
adc
xlat
pop
mov
adc
das
rcll
insl
stc
pop
pusha
movsb
ljmp
je
shrb
fsubl
cli
fcom
push
inc
in
xor
nop
out
cmp
lods
loope
mov
fistpl
imul
push
xchg
popf
mov
movb
pop
js
stos
movsl
call
addr16
test
call
movsl
shrl
test
push
js
imull
fs
fists
shl
add
cmpsl
dec
mov
xchg
lds
jbe
push
push
cwtl
loop
or
push
sub
icebp
jle
cltd
sub
jg
ss
xlat
ret
jecxz
xchg
dec
dec
stc
movsl
rol
push
sub
cmpsb
imul
or
mov
cmp
sub
test
int
mov
cmp
rclb
popf
loop
xlat
cli
movsl
jecxz
aaa
pop
jg
adc
loopne
dec
mov
xor
mov
ss
adc
dec
push
push
out
ja
daa
ret
xchg
push
sbb
fstpt
cs
adc
clc
mov
or
jb
and
and
push
in
sbb
loop
pop
xor
clc
and
lahf
popa
fnstenv
lods
daa
movl
or
adc
xor
jecxz
pushf
sbb
adc
xchg
mov
xor
jmp
cmpsb
xchg
lret
dec
mov
movsl
xchg
dec
mov
mov
jbe
inc
popa
bound
pop
bound
dec
sbb
mov
mov
mov
add
mov
scas
push
pop
outsl
inc
fdivrs
dec
push
int3
mov
aad
pop
addr16
mov
aas
outsb
pop
inc
out
aad
adc
arpl
push
je
addr16
mov
fstp
inc
ljmp
pop
sbb
ja
nop
push
aas
clc
xchg
into
fldcw
or
leave
imul
repnz
xor
ja
negl
ret
testb
ret
fdivrp
pop
adc
scas
mov
add
mov
and
out
push
pusha
inc
lea
mov
push
xor
mov
cmp
cld
lds
rcr
fldt
push
std
imul
adc
xorb
pushf
mov
fistps
fcoms
and
dec
gs
shlb
xchg
rorb
aaa
fsubrs
and
shll
cwtl
add
xor
addr16
inc
mov
sub
add
mov
jecxz
mov
cmpb
cmp
add
jns
inc
ror
scas
mov
bound
jp
jp
in
out
cmp
lahf
mov
stc
mov
inc
fisttpll
pop
pop
or
loope
xchg
pop
imul
sbb
in
stos
and
bound
push
int
sub
xlat
sbb
adc
es
or
mov
out
push
hlt
jns
dec
clc
loopne
and
or
jl
mov
aad
xlat
in
test
sub
mov
and
adc
jmp
jnp
add
sub
mov
test
add
loope
subl
sub
ficoms
fwait
shl
fsubrl
jecxz
and
adcb
inc
ljmp
adc
dec
xor
push
push
sbb
out
lock
mov
rorb
mov
mov
push
out
adc
stc
sbb
xchg
dec
jle
movsl
inc
and
mov
adc
addl
and
or
sbb
scas
pop
jmp
and
mov
faddl
inc
mov
add
sub
jbe
sbb
fidivl
loopne
cmp
hlt
gs
enter
divl
push
loopne
cmp
xchg
sbb
mov
jge
lock
stos
jmp
daa
jbe
pop
add
sahf
cmp
test
mov
mov
mov
gs
mov
sbbl
lock
inc
xor
out
push
icebp
sbb
scas
mov
sub
jne
sti
imul
or
and
inc
sbb
loop
decl
rclb
pop
call
lea
insl
xchg
mov
cmp
push
in
hlt
lret
aam
xchg
outsl
add
and
inc
aam
push
add
or
push
cld
aad
aam
jp
ret
jae
testl
call
stc
pop
jp
mov
mov
sub
cmpsl
mov
iret
push
xchg
cwtl
out
or
adc
aas
jmp
xchg
mov
xchg
mul
ret
test
lcall
inc
aad
adc
sbb
pop
test
and
cmp
div
pop
stos
and
lea
ret
xchg
cmp
xlat
push
out
sbb
ds
ret
call
adc
push
mov
pushf
cmp
xchg
inc
outsb
lahf
push
push
and
sbb
cli
stos
ret
xchg
add
pop
stos
sub
imul
fisttpll
dec
push
jne
push
cwtl
jmp
in
push
je
rcrl
sbb
push
imul
xchg
fwait
fwait
mov
lds
adc
jae
hlt
dec
dec
pop
out
mov
or
popf
jg
and
cmp
testb
mov
mov
imul
sbb
ret
iret
jp
push
sub
pop
pop
sbb
jbe
mov
or
push
xor
insl
pop
cmp
jmp
movsl
push
sbb
inc
push
negl
mov
cmp
insb
dec
cmp
jp
bound
jl
test
cmp
loop
jns
loop
or
sbb
mov
and
cmpsb
jne
aam
xor
scas
adc
out
pop
imul
push
dec
xor
sub
lret
mov
pusha
mov
dec
jb
dec
add
cmc
mov
push
xor
xchg
cwtl
sbb
in
jle
cmpsb
add
fmul
test
std
inc
add
lods
das
push
daa
in
fldenv
shl
push
enter
repz
lods
fistpl
dec
mov
gs
inc
mov
sub
lods
jle
pop
cltd
movsb
jb
mov
cmc
scas
or
adc
xchg
pop
pushf
roll
add
les
stos
lcall
cmp
sahf
and
lret
loopne
xor
mov
mov
xor
and
fs
push
inc
jmp
popf
aas
jne
xchg
stos
xchg
popa
outsb
push
mov
mov
sbb
fldenv
push
inc
cmp
mov
mov
xchg
and
xor
mov
pusha
movsb
negb
loope
mov
test
fcmovu
into
repnz
or
not
es
gs
sti
cwtl
xor
sbb
mov
jne
ss
pop
sar
insb
or
xchg
ret
inc
inc
push
loope
inc
push
pop
mov
mov
inc
into
and
popa
scas
repnz
cmpsb
addr16
add
mov
stc
in
call
into
ret
xchg
pop
in
lock
adc
sbb
cmp
xlat
push
add
out
sub
shll
and
pushf
sub
frstor
push
lds
rorl
lret
push
mov
aaa
addr16
icebp
or
mov
xlat
sub
or
or
fistl
cmc
xor
repz
pusha
stc
lock
lret
daa
mov
fwait
sbb
test
addb
mov
sub
cmp
mov
aaa
inc
xchg
adc
xor
stos
pop
add
pop
push
out
lds
movsl
test
pop
sub
xchg
mov
test
push
dec
fnstenv
adcl
test
push
jmp
mov
insl
scas
outsb
mov
xchg
xchg
aaa
jns
dec
imul
popa
mov
cwtl
adc
loop
ret
add
add
push
jne
add
xchg
imul
sbb
mov
clc
push
mov
arpl
fsubrl
jmp
push
and
fisubrl
jb
mov
orb
mov
xchg
stos
jg
call
or
pop
pop
test
fcompl
mov
mov
mov
subb
je
clc
out
mull
pusha
dec
rcrl
dec
sarb
js
or
nop
lods
ret
mov
xchg
jbe
xchg
pop
enter
mov
mov
out
lret
testb
cmovbe
xchg
adc
xchg
dec
cmp
and
je
pop
gs
in
cmpb
in
iret
out
push
sbb
dec
or
jns
pop
or
mov
pop
pop
dec
mov
mov
jp
in
sbb
inc
push
mov
neg
rcl
movsl
mov
loope
aaa
and
cmc
pop
iret
mov
or
pop
or
mov
movl
mov
mov
xor
push
push
adc
out
pop
adc
jl
mov
rolb
cltd
test
mov
dec
loop
sarl
sub
mov
xor
enter
xlat
fdivrl
add
lahf
aaa
or
pushl
inc
add
popa
aam
sbbl
mov
fwait
scas
adc
mov
loopne
mov
aad
jne
in
mov
jne
cmpsl
rcrb
sbb
xchg
testb
jo
push
mov
adc
ljmp
pop
aas
stc
nop
sbb
cmp
mov
nop
xchg
inc
test
jle
and
fisubl
out
bnd
fninit
cs
call
out
fs
negb
push
pop
push
daa
mov
pop
stc
jae
out
dec
xchg
cmp
call
dec
xchg
add
push
xchg
setnp
popl
sbb
mov
jb
pushf
or
js
xlat
dec
xor
das
add
lods
sub
sti
ljmp
sbb
pop
inc
sbb
lds
dec
cmp
inc
sub
dec
mov
lea
jbe
cmp
ja
add
jg
dec
insl
lds
into
jp
popa
mov
jmp
add
xor
dec
fiaddl
and
and
jns
aas
clc
shll
test
cmpsl
lret
jns
xchg
jb
cld
mov
or
js
das
shlb
shlb
aaa
xorl
orl
push
pop
in
or
mov
out
pop
dec
and
fisttpll
shr
popa
xorb
mov
jae
jecxz
das
xor
fimuls
lret
xchg
pop
iret
or
and
loopne
fs
mov
mov
mov
pop
test
inc
xorb
popa
lcall
jno
sar
rolb
mov
in
push
or
or
lods
push
repz
add
scas
mov
leave
push
inc
xorl
outsb
lods
sub
paddsb
cltd
or
fadd
xchg
push
jmp
mov
xchg
shll
xchg
test
lods
jp
testb
adc
adc
add
lods
movsl
inc
test
hlt
daa
jae
or
adc
int3
add
and
daa
ret
push
or
sbb
mov
xchg
mov
imulb
ds
mov
repz
xor
cmp
je
adc
sbb
test
pop
pop
cmp
or
xchg
ds
and
xor
fs
dec
mov
ds
mov
clc
ret
fs
xlat
mov
icebp
sbb
dec
fsts
cli
nop
gs
repz
xor
popl
xor
mov
sub
jns
lods
call
test
inc
pop
jbe
xchg
dec
in
nop
or
fs
mov
xchg
pop
shl
les
arpl
subl
mov
pop
sbb
cs
mov
in
sub
stos
sub
pop
add
lcall
mov
lret
xchg
jne
pop
cmp
cwtl
into
xor
jb
adc
movsb
sbb
cmpsb
mov
popl
rcr
or
mov
cltd
pop
jecxz
fwait
inc
rclb
js
fnsave
push
shlb
test
insb
jmp
clc
int
sub
fdivl
fucomip
xor
aam
cmpb
or
cmp
lcall
orb
nop
inc
in
fcoml
shll
xchg
mov
sbb
dec
jl
pop
adc
das
bsr
dec
out
dec
ss
leave
adc
in
inc
inc
fldcw
test
xor
loop
inc
pushf
jecxz
push
jno
stos
mov
xchg
ljmp
bnd
out
fnstcw
clc
and
mov
and
adc
inc
dec
sub
js
lods
xchg
mov
add
enter
push
sti
ds
pusha
jnp
pushf
or
arpl
call
out
mov
dec
sahf
aas
xor
adc
push
cltd
add
or
clc
cltd
dec
mov
inc
and
xchg
pop
pop
mov
aaa
mov
adc
cld
jo
sbb
mov
loopne
adc
or
mov
pushf
and
mov
enter
fnsave
mov
push
pop
lods
into
push
mov
loopne
cmp
rep
mov
dec
lcall
out
test
cltd
dec
test
clc
jge
dec
call
mov
adc
addr16
push
mov
pop
jle
loope
dec
daa
xlat
mov
mov
test
in
jg
cmp
call
addr16
mov
and
xchg
rcll
icebp
ja
xor
adc
shrl
mov
inc
and
mov
stc
iret
cwtl
clc
and
out
les
in
sbb
pop
jns
fsubs
push
mov
stc
jbe
jmpw
out
fsubr
in
ss
inc
in
cmpsb
sarb
sub
xor
xchg
fbld
cmp
pop
inc
js
je
add
push
ja
push
inc
into
lds
leave
js
negl
xor
cld
jecxz
inc
and
popa
lds
jae
mov
repnz
xchg
xlat
testl
push
add
xchg
lock
pop
jnp
rep
mov
pushf
sbb
sub
push
cs
sbb
xchg
push
jmp
mov
sar
ret
fldt
pushf
mov
mov
pop
add
adc
dec
aaa
add
sbb
inc
xor
in
daa
cmp
int
out
push
shll
call
cmp
sbb
add
inc
mov
pop
pop
jmp
out
inc
mov
fstpt
mov
mov
cmpsb
mov
cmp
push
imul
xor
sbb
or
jnp
mov
movsl
xor
push
cmp
int
sahf
xchg
mov
push
or
scas
and
data16
lods
mulb
add
hlt
xlat
inc
gs
pop
ds
dec
add
pop
orl
shrb
add
cli
adc
sbb
fs
xor
es
or
cmpsl
out
addb
std
jmp
ret
jg
add
mov
loopne
add
or
int3
mov
testl
jge
call
or
mov
cltd
mov
mov
sbb
xor
inc
jne
add
cmp
mov
into
mov
in
and
scas
cmpsb
mov
sahf
sub
ret
dec
xor
xchg
mov
mov
gs
and
aam
push
mov
sub
subb
or
pop
pop
xchg
jne
mov
test
jb
jns,pn
mov
mov
lods
sete
fstl
or
roll
mov
jecxz
sub
mov
fldt
js
cltd
ficoml
lds
add
stc
test
ja
iret
lret
pop
and
push
scas
cmp
jle
imul
shrl
mov
inc
mov
mov
add
mov
mov
es
lea
mov
add
xchg
jnp
sbb
testl
jno
mov
mov
int3
insl
in
mov
sbb
rolb
jne
mov
ljmp
sbb
das
push
xorl
pop
hlt
pop
sahf
jnp
xor
mov
jb
bnd
jle
mov
xor
es
xor
xor
inc
jb
jl
ljmp
pop
stc
mov
mov
cmp
xchg
insl
dec
adc
into
data16
push
jb
fdivrs
sub
pop
cmp
sbb
pop
push
mov
lret
addr16
xchg
imul
mov
addr16
arpl
mov
shl
pop
notb
mov
pop
loop
mov
popf
ljmp
push
push
mov
sarl
mov
leave
add
lcall
outsb
ret
mov
sbb
and
xor
fmuls
js
push
xchg
push
adc
sbb
mov
int
mov
fimull
cli
shl
out
mov
cwtl
cmp
mov
popf
mov
sub
cmc
test
push
imul
jb
mov
cmp
xchg
out
outsb
leave
mov
cmpsb
jno
or
and
mov
dec
scas
aad
mov
stos
test
pop
xchg
pop
mov
inc
pop
jge
fisubrs
lods
push
and
jo
push
inc
addb
loopne
dec
shrl
sub
shll
inc
lret
jo
arpl
nop
hlt
mov
int3
cmpsl
aaa
mov
sti
add
lcall
popf
mov
cmp
add
pop
cwtl
push
arpl
fstpt
mov
scas
aaa
sub
out
imul
repnz
sbb
mulb
lcall
repnz
inc
cmp
jg
lret
cmp
into
icebp
test
icebp
daa
arpl
andl
sbb
test
xor
mov
scas
dec
inc
rep
dec
mov
fwait
mov
inc
scas
in
pop
xor
icebp
sub
ret
mov
scas
push
pop
xor
bound
pop
loope
xchg
mov
xchg
scas
nop
dec
movsl
pusha
and
push
cmpl
add
mov
test
push
inc
sbb
nop
daa
nop
shlb
rorb
xor
or
jns
idivl
outsl
fcomp
loopne
cs
pop
mov
lods
repz
lods
aad
jno,pt
sub
xchg
dec
orb
mov
daa
cmpsb
dec
adc
hlt
adc
loop
mov
or
dec
test
and
out
jbe
push
jge
jbe
xor
std
shrb
sbb
sub
aaa
daa
jns
bound
test
push
test
mov
mov
aas
fisttpll
stos
ret
cmp
add
add
pop
pop
add
add
jo
rcr
adc
xor
addr16
insl
push
push
negb
ret
sbb
pop
push
jnp
dec
xchg
hlt
into
cmpsl
xorb
lods
movsb
jnp
xor
aaa
xor
cmp
ret
out
push
mov
xchg
decl
hlt
in
mov
int3
mov
rcll
lea
loop
xchg
xor
mov
pusha
rep
inc
mov
iret
jns
rorb
push
mov
mov
xchg
shr
mov
cmpsb
cltd
sub
mov
sbbl
in
jmp
mov
add
sub
xor
and
jo
sbb
jne
or
test
arpl
mov
jg
int3
xor
xor
in
and
cmp
stos
in
ret
iret
out
les
or
orb
inc
add
or
pop
lret
aad
shll
inc
fisttps
and
cs
add
xchg
cmpsl
or
xor
sub
jne
mov
mov
jae
aad
cltd
sub
ljmp
sarb
lods
sub
sub
dec
cld
push
jb
xchg
push
cmp
cwtl
in
aam
sbb
icebp
aaa
xchg
lds
jg
movsb
idivl
fcomps
cli
stos
insl
jg
pop
shrl
sub
push
stos
lods
cwtl
orl
aam
fldenv
fistpll
mov
inc
add
data16
mov
push
orb
daa
adc
inc
push
jno
inc
into
cmpsb
insb
lock
push
repz
or
sub
cmp
push
nop
cmp
and
jo
cmc
sub
adc
ljmp
sbb
cmp
out
xor
in
loop
lret
mov
push
cmpsb
cmp
add
dec
push
pop
out
sub
addr16
sbbb
sub
xlat
sahf
clc
xchg
cmpsb
sbb
cmpsl
ret
test
lea
mov
or
out
outsl
sub
inc
addb
sub
mov
push
adc
push
pop
jp
jns
mov
cld
dec
jne
nop
mov
pusha
cmp
fcoms
inc
pop
js
add
dec
ja
jae
loopne
loope
mov
add
or
ds
xorb
cwtl
enter
lcall
pop
in
xor
jge
pop
or
ds
or
adc
in
xor
aam
dec
out
idivb
sub
xchg
push
jnp
mov
lcall
inc
pop
daa
lahf
aaa
fmuls
add
dec
xchg
cmpsl
hlt
mov
and
cmpsl
imul
mov
xchg
popa
rcll
push
stos
stos
xor
ficoml
add
xor
lds
insb
mov
je
repz
lret
xchg
cs
shld
add
aad
out
push
repnz
cmc
jbe
xchg
aas
push
scas
popf
push
pop
leave
insl
mov
shll
leave
inc
and
jecxz
ret
xchg
flds
inc
enter
sbb
xchg
fiadds
inc
push
insb
hlt
bound
pop
add
push
data16
xchg
sub
xor
push
push
mov
insl
ja
aad
adc
scas
jg
dec
nop
pop
into
jle
mov
loop
out
mov
test
pop
add
lds
xchg
sub
pop
ja
cmpsb
mov
in
push
ja
jns
inc
pop
dec
fstps
mov
xor
pop
ficomps
push
call
mov
bound
ljmp
add
dec
mov
iret
sub
mov
mov
imul
and
fnstcw
jno
sarb
aaa
push
xchg
add
inc
fs
and
pcmpeqd
push
sahf
ljmp
ret
and
fwait
push
leave
mov
data16
lcall
mov
ds
adc
pop
adc
and
push
pop
cmp
cmp
push
idivl
std
pop
mov
cld
mov
dec
loop
or
jno
mov
ss
push
mov
pop
inc
dec
or
jge
scas
movsl
push
cmp
stos
or
add
imul
cmp
push
mov
inc
enter
dec
sbb
cmpsl
fs
daa
inc
aad
mov
cmpl
jmp
insl
pop
jle
push
stos
push
push
mov
xacquire
sahf
jbe
cwtl
jns
xchg
sub
jge
xchg
insb
cmp
inc
jno
lahf
dec
cmc
or
push
push
pop
aam
es
xor
fwait
inc
xor
and
sbb
xchg
mov
xchg
shrb
bound
je
cmp
sbb
rcrl
bound
fstps
mov
push
xor
fisttps
mov
sbb
mov
fistps
push
push
jp
repnz
mov
lds
repnz
mov
scas
push
movsl
clc
cltd
push
stos
in
cltd
mov
mov
mov
sbb
pop
ds
cmp
add
jb
mov
push
pushf
mov
dec
leave
jge
mov
ja
jne,pt
js
pop
mov
jl
xor
and
jl
inc
mov
stos
xor
icebp
jbe
mov
scas
gs
xchg
adc
ds
gs
pop
xchg
std
or
fwait
imul
and
rclb
pop
jno
xchg
jno
cmp
fsubrs
cmp
inc
gs
rcll
jne
push
rcl
xchg
and
movsl
dec
add
jmp
dec
lahf
or
mov
jo
arpl
fidivl
mov
or
xlat
leave
fcoms
rcr
daa
test
add
dec
fwait
int
cmp
negl
jl
movsb
test
fidivrs
lret
or
jle
mov
addl
mov
fdivrs
lret
mov
cmp
push
popa
mov
mov
pop
cmpsl
or
test
std
repz
movsl
insl
shlb
in
inc
dec
sub
loope
lods
test
push
scas
mov
jmp
add
rclb
cltd
testl
cli
mov
ds
fsubrs
outsb
mov
add
or
mov
pusha
les
push
in
and
inc
mov
adc
xor
leave
scas
add
sbb
int3
adcl
mov
pop
cs
roll
rol
pusha
push
faddp
fnstcw
pop
into
ds
into
stc
xlat
or
mov
mov
nop
jg
out
mov
cmpl
xchg
push
leave
sbb
dec
inc
popf
mov
pop
push
incl
out
xor
shlb
xchg
sbb
mov
dec
sub
arpl
mov
mov
cli
mov
stc
lods
mov
sbb
xlat
mov
adc
std
dec
and
mov
in
out
shrl
jp
test
arpl
mov
sbb
mov
inc
mov
push
outsl
mov
dec
pop
and
fnstcw
jo
dec
sarl
in
push
push
xor
lds
xlat
sti
sub
push
shr
loope
ss
sbb
jb
cmp
adc
icebp
bound
jns
sbb
data16
loopne
sub
xlat
idiv
bnd
int
pusha
out
cmp
pop
sbb
adc
jb
inc
inc
jmp
dec
adcl
push
mov
jnp
mov
int3
loopne
mov
jmp
bound
or
mov
mov
lods
fimull
push
imul
xor
mov
sbb
inc
pop
mov
inc
mov
mov
inc
push
xchg
push
icebp
jle
cs
push
inc
xchg
cmpsb
cltd
pop
mov
and
in
iret
cld
sub
addr16
hlt
dec
cmc
mov
jp
push
cmp
mov
fs
mov
and
or
sbb
stos
dec
mov
push
insl
adc
sbb
rcll
pop
cmp
and
xchg
sub
or
add
lret
lea
cs
popa
adc
popa
cmp
mov
shlb
inc
sbb
fadd
lock
sub
fnstenv
jmp
push
inc
les
js
cmp
pop
enter
or
add
fdiv
stos
dec
mov
data16
jo
jecxz
aam
js
sub
fisubrs
xorl
dec
les
push
xchg
inc
in
lret
dec
dec
xchg
out
not
add
dec
movsb
and
or
lcall
sub
inc
add
jl
enter
fwait
or
mov
push
pop
pop
sti
jb
mov
dec
jae
inc
push
fisubrs
dec
scas
pushf
aas
or
xor
mov
push
or
push
movsb
xor
leave
xchg
cmc
ret
inc
pop
fistl
add
adc
inc
sti
and
fistl
nop
push
iret
push
leave
inc
or
jo
paddw
sbb
mov
ss
fwait
mov
fwait
push
test
clc
shlb
adc
test
mov
sbb
outsb
xor
js,pn
pop
inc
add
andl
into
out
fnstcw
xchg
inc
test
and
std
or
lahf
es
movsb
sub
mov
mov
hlt
jle
fs
popf
cs
xor
std
adc
aaa
xchg
divl
jmp
aaa
lds
mov
loope
dec
mov
sbb
lcall
out
push
fimuls
cli
xchg
mov
push
mov
pop
into
mov
ret
jecxz
dec
pop
cwtl
xlat
addr16
pop
insl
jg
movsb
dec
cmp
into
pop
pushf
outsb
or
out
dec
mov
push
mov
xlat
dec
cli
lds
xchg
jb
fcmovne
test
iret
dec
cld
mov
xor
or
sbb
cmovae
ficoms
push
int
dec
mov
lret
insl
daa
stc
mov
xor
pop
mov
repz
sbb
aad
aad
pop
enter
sbb
lahf
rcrb
loopne
cmp
cltd
push
jge
mull
mov
ror
sbb
ja
xchg
cld
sub
test
sahf
les
aad
out
imul
mov
loopne
or
jmp
repnz
scas
in
jae
lcall
pop
stos
push
test
inc
mov
scas
je
mov
pushf
xorb
push
test
pop
mov
mov
lock
xchg
dec
cmpsb
xchg
fs
leave
jbe
dec
xchg
xchg
popf
adc
adc
lret
or
cs
and
xor
mov
cwtl
mov
inc
pop
jo
pop
lahf
rcl
sbbb
test
scas
movsb
or
inc
lahf
push
sti
pop
push
sbb
or
loopne,pt
fucomip
lea
outsb
jl
mov
scas
pop
lods
rcrb
leave
loop
xchg
pop
jecxz
xor
out
push
mov
stos
xor
cwtl
and
xchg
xchg
iret
aaa
fnsave
cmp
jns
mov
or
mov
lahf
dec
inc
push
xor
rorb
sub
pop
xchg
xchg
aam
das
xchg
outsl
test
mov
pop
inc
xchg
lahf
cmp
mov
mov
jge,pn
and
das
loope
xor
xchg
inc
punpckhwd
sub
pop
adc
sbb
insl
push
mov
fs
cltd
xchg
test
add
cli
pop
push
and
xchg
cwtl
sub
aad
lcall
mov
inc
jl
jp
mov
pop
inc
aam
das
mov
rcr
fsts
repz
xchg
pop
into
call
jne
adc
mov
push
push
pop
sub
adc
ds
fwait
push
pop
fsubl
call
mov
xor
push
mov
jns
gs
pop
or
lcall
fmuls
test
adc
fsubs
enter
rcrl
add
inc
mov
cmp
outsl
xchg
pusha
pop
and
int3
inc
negl
out
dec
xor
movsl
cmp
sub
jae
adc
push
push
std
dec
test
adc
cmp
mov
mulb
mov
mov
sbb
or
call
mov
dec
js
jecxz
shll
fwait
pop
mov
in
xor
xchg
cmp
daa
in
clc
insl
leave
ss
into
pop
sub
js
rol
push
sub
sub
imul
dec
pushf
mov
and
stc
cwtl
and
shlb
stc
out
pushf
jne
and
sarl
add
test
and
movsb
icebp
add
rcrl
mov
mov
mov
jge
jne
aaa
rorb
sbb
dec
xchg
add
std
aad
dec
fwait
imul
xor
inc
loope
loop
movsl
movsl
stc
and
faddp
and
mov
in
adc
aam
mov
or
sbb
mov
jbe
inc
imul
inc
js
push
iret
adc
mov
sub
aaa
or
mov
mov
dec
pop
shll
bound
jp
and
ds
mov
les
xchg
push
mov
pop
mov
adc
leave
mov
test
jbe
pusha
scas
pop
cmp
push
lods
inc
dec
add
jle
or
adc
and
xor
ret
add
mov
insl
mov
insb
pop
push
negl
xchg
enter
enter
stos
loopne
stc
jl,pn
jno
xchg
or
push
push
cmpsb
mov
cld
aaa
cmp
dec
into
inc
fs
mov
push
xorl
fcmovb
mov
xchg
fisubs
cmp
add
in
mov
rol
xchg
xchg
mov
add
sub
push
sub
sarb
push
mov
sbb
shrl
pop
sub
dec
test
lcall
aas
sahf
inc
pop
pop
repz
adc
adc
add
add
imul
add
mov
mov
mov
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
jmp
push
ja
cmp
add
adc
xchg
push
mov
jge
out
mov
popa
bound
pop
bound
jo,pt
icebp
xchg
out
xchg
add
lods
push
hlt
inc
ds
mov
cltd
xor
push
negl
loopne
js
adc
xor
dec
sbb
push
add
outsl
xchg
xchg
loop
dec
imul
insb
xchg
xchg
leave
pop
mov
pop
mov
out
fdivrl
push
imul
push
frstor
push
sbb
jle
and
or
mov
aaa
pop
sbbl
pushf
jmp
stc
xor
or
hlt
push
fs
dec
fisubrs
popa
push
pop
jmp
lods
out
or
sbb
xchg
fbstp
xchg
repnz
cmp
data16
fidivs
pop
pop
aas
sub
adc
fstpt
mov
out
cmc
ret
xchg
jnp
imul
enter
mov
xchg
or
xchg
jmp
cmp
mov
xor
outsb
ret
insb
jnp
popa
and
mov
popf
lcall
sbb
inc
scas
jno
scas
daa
shll
js
subb
cltd
outsb
and
test
cmp
shll
repnz
iret
shl
push
push
xchg
add
into
call
add
andl
push
jg
pop
cmp
fcomip
pop
adcb
mov
xchg
and
daa
push
mov
fcomps
mov
sbb
xchg
lret
xor
sub
sbbb
test
add
lds
mov
scas
test
bnd
mov
dec
cmpsb
push
mov
lock
push
jecxz
jo
cmp
jo
cmp
sahf
inc
daa
aas
cmp
mov
insb
jbe
xor
pop
and
mov
bound
stc
cmp
leave
andl
adc
loope
xor
xchg
adc
js
or
sbb
pop
mov
cld
mov
mov
mov
sub
mov
in
cwtl
mov
pop
adcl
loop
or
inc
sbb
mov
jnp
sub
fldcw
fcomps
insl
fdivl
scas
mov
pop
inc
enter
pop
adc
xor
dec
add
jne
add
shll
mov
cmp
jb
jbe
inc
dec
or
imul
jo
xchg
push
insl
fcompl
dec
xchg
inc
je
jle
sbb
jb
sti
rolb
jle
les
mov
cmp
mov
cwtl
enter
iret
xor
movsb
push
int
cltd
repnz
call
push
bound
stc
push
test
xchg
in
ret
rorl
push
add
adc
pop
push
daa
repz
xchg
fldenv
sub
add
lret
dec
and
xor
adc
or
enter
outsb
sub
int
or
sub
cli
out
notb
mov
gs
add
sbb
lock
mov
add
mov
iret
and
sub
out
or
mov
je
cld
outsl
insb
subl
push
ret
mov
add
in
pop
pop
mov
lcall
sub
out
sahf
adc
mov
inc
out
call
icebp
les
incb
push
sbb
arpl
inc
push
dec
dec
std
push
mov
mov
divb
mov
jmp
lret
sbb
mov
adc
and
mov
add
data16
movsb
mov
dec
push
dec
or
insl
and
test
cltd
enter
add
sarl
jo
movsl
gs
add
fidivrs
outsl
cld
fisubrl
push
dec
xor
jo
es
test
adc
jge
mov
enter
mov
outsl
and
imul
mov
sub
xlat
jmp
xor
loop
rcrl
or
push
sbb
fadd
mov
pop
xchg
sub
cltd
das
bound
in
ret
xorl
in
and
leave
push
or
pop
mov
ret
pop
xchg
test
outsl
rcr
jo
pop
nop
jne
inc
and
mov
cli
pop
sbb
mov
xor
fcmove
mov
aad
sbb
xchg
push
sub
push
stos
rolb
push
xlat
cmp
imulb
push
jmp
in
loopne
movsb
push
scas
and
movsb
daa
jg
pop
out
insl
adc
lret
andl
lods
test
ljmp
or
jae
pop
imul
ffree
pusha
push
es
or
lret
mov
xchg
movsb
sti
xchg
adc
sub
fisubrs
int
dec
shll
mov
mov
dec
dec
push
push
or
les
cltd
jae
aad
int
arpl
push
mov
xchg
dec
add
or
adc
out
jl
imul
arpl
push
mov
xchg
outsl
cltd
and
not
sbb
pop
mov
mov
xor
cs
jl
ret
sub
xor
inc
lds
xorb
dec
je
das
jae
push
and
pop
xchg
sub
push
mov
mov
jg
fistl
cld
adc
pop
dec
insb
divl
cmc
out
repz
mov
lahf
jbe
mov
dec
insl
std
ja
add
or
fisttps
inc
arpl
das
push
movsl
xor
pop
loop
mov
pop
ds
fnstsw
das
mov
mov
inc
lods
mov
pop
jmp
dec
add
mov
push
fcoml
cltd
mov
aad
test
jle
push
int
mov
and
xchg
ds
arpl
mov
jne
jp
nop
leave
cmp
push
dec
movsl
sub
pop
xchg
mov
mov
loopne
orb
mov
movsl
sarl
mov
das
xchg
enter
pop
out
test
mov
in
sub
jbe
mov
inc
lods
test
in
mov
inc
in
jle
fidivrs
xor
filds
std
jp
clc
test
pop
jecxz
xchg
pop
jmp
adc
jbe
or
cmpsl
sbb
pop
push
js
mov
push
test
leave
adc
ja
mov
xor
inc
shrb
and
enter
xlat
mov
or
mov
xorb
fstpl
lods
jns
call
mov
aad
mov
aas
or
sbb
xor
xor
xchg
in
push
or
ljmp
xchg
mov
xlat
lods
arpl
pop
cmp
rclb
js
adc
outsl
data16
out
mov
push
and
repz
clc
addl
imul
data16
pop
out
cmpl
mov
sub
ss
push
xchg
shlb
mov
mov
in
inc
cmp
pop
add
popf
inc
ja
ret
shll
push
jg
dec
adc
outsb
bound
mov
mov
scas
loop
dec
xchg
lds
push
rol
inc
dec
mov
cmp
mov
enter
pop
pop
fnstcw
push
xor
les
mov
mov
pop
jno
call
iret
repz
jae
or
call
adc
aaa
cs
dec
sbb
push
test
test
popf
fistpll
pop
cltd
mov
rcr
mov
ds
cmp
cmp
mov
mov
dec
cmpsb
idivl
dec
rol
fsqrt
lret
inc
xor
stos
fnstsw
or
imul
test
xchg
xlat
dec
jae
pop
mov
dec
add
inc
mov
leave
inc
sub
pop
cmp
pop
add
out
push
fisttps
pop
cs
xor
fildll
sub
xchg
xor
cmp
xor
xlat
dec
clc
negl
xorb
lea
iret
mov
shlb
enter
or
daa
fistpl
pop
out
xlat
stos
fimuls
data16
dec
test
sub
addb
jmp
sub
xchg
mov
dec
mov
aam
inc
xchg
jo
dec
es
xor
xlat
pop
fwait
popf
xchg
daa
addl
stos
icebp
cmp
xlat
mov
add
es
dec
rol
jmp
pop
pop
fnsetpm(287
loope
repz
in
lods
ds
inc
push
push
jnp
js
push
lods
lods
add
push
mov
dec
call
pop
xchg
arpl
scas
test
mov
jmp
js
jno
push
jb
imul
jg
sar
push
xorl
or
push
mov
mov
andl
aaa
or
xor
faddl
pop
inc
ffreep
push
shrl
push
or
sbb
dec
inc
sub
xor
mov
fiadds
out
jle
je
fildll
std
into
sub
xor
cli
nop
cmp
sub
stos
jne
js
adc
inc
out
mov
std
and
sub
out
pop
sbb
pop
mov
sbb
orl
testb
sbb
push
xchg
sbb
aad
xchg
inc
fistpll
into
leave
xor
pushf
jmp
sub
jbe
or
pop
xchg
mov
pop
cmp
sub
mov
push
inc
adc
lds
mov
adc
into
jp
mov
mov
and
lret
jle
outsb
sahf
adc
scas
out
push
jno
aaa
test
int3
mov
scas
or
jl
xchg
mov
setne
js
sub
xor
outsl
dec
mov
mov
inc
js
jne
outsb
cs
jge
mov
mov
hlt
or
xor
pop
andl
push
push
mov
lods
not
or
ss
sub
imul
fwait
xchg
repz
xchg
in
pop
ljmp
lods
test
movb
or
adc
fisttps
jl
push
jp
xchg
pushf
push
in
aas
lahf
push
push
xchg
xor
roll
ret
mov
or
pushf
mov
pop
scas
into
inc
jmp
mov
mov
out
inc
lret
mov
fsub
sub
les
movsl
pop
pop
push
and
dec
xor
inc
dec
jnp
div
popa
xor
bound
sbb
ss
xchg
cld
dec
in
xchg
test
inc
jmp
repnz
test
pop
cmp
sub
mov
inc
movsb
xchg
push
test
sahf
in
outsb
xor
push
mov
out
or
add
jns
dec
out
jp
call
dec
repnz
sub
adc
inc
lret
jle
adc
les
xlat
movsl
mov
jbe
mov
sbb
or
sbb
test
insl
ljmp
add
mov
insl
addr16
jmp
xor
imul
out
push
loop
push
jo
mov
ss
outsl
int
out
xor
fyl2xp1
inc
mov
mov
bound
dec
fldt
sub
mov
add
xlat
xchg
or
jg
testl
lds
push
scas
mov
mov
sbb
cmpsb
into
jmp
xchg
push
scas
mov
data16
lahf
pop
jb
fnstcw
cld
icebp
push
jge
shrl
sbb
mov
test
aam
cmp
xchg
out
mov
inc
into
das
mov
ret
bound
dec
movsb
dec
xchg
xchg
lret
sbb
pop
mov
xchg
jmp
push
sarl
xlat
repz
arpl
leave
jno
clc
pop
push
xchg
add
inc
cs
outsb
pusha
pop
lock
cmp
fbld
sub
mov
shl
imul
mov
cmpsl
mov
mov
lods
cmp
outsl
dec
push
adc
dec
fwait
rep
sbb
out
aam
jmp
jmp
xor
and
push
adc
sbb
dec
mov
xor
add
sbb
or
mov
mov
xchg
inc
outsl
sarl
sub
xor
movsb
repnz
add
rcll
xchg
aaa
sbb
pop
jno
jo
mov
jae
xchg
push
dec
aaa
outsl
jmp
sub
cmp
cmpsb
lods
xor
mov
insb
mov
xorb
fnstsw
call
clc
and
je
xchg
cmp
lret
gs
jp
stos
aam
mov
sbb
dec
and
mov
lods
imul
push
outsb
mov
mov
push
stos
sbb
icebp
xor
in
push
jne
arpl
jae
xchg
push
mov
xchg
jg
shld
imul
adc
mov
movsb
mov
and
xor
push
pop
test
imul
imul
adc
sbb
add
ret
dec
movsb
jp
popa
fildl
gs
in
daa
xchg
je
pop
or
into
mov
hlt
comiss
pop
xor
int3
pop
dec
ret
push
jnp
jae
call
shl
xlat
cmp
push
adc
imul
dec
or
push
add
or
andl
cli
mov
sub
aaa
sub
xor
jecxz
lods
leave
xchg
cmp
xorl
add
rorl
jae
push
mov
xor
sbb
sub
test
sarl
and
jp
cwtl
sahf
out
add
xchg
sbb
jl
mov
and
xor
mov
movsb
js
xchg
sub
or
std
push
cmp
ret
icebp
fnsave
and
xor
in
enter
out
inc
cmp
jbe
out
push
imul
dec
movsl
mov
jmp
mov
ds
sbb
adc
lcall
out
inc
repz
ds
loopne
push
jecxz
sub
into
test
popf
call
cmp
jg
dec
notl
xor
cmp
test
jne
ret
cmp
jg
mov
sbb
xchg
jmp
cmp
xor
out
addr16
pushf
testb
imul
lds
and
mov
lret
mov
lods
mov
sub
adc
lgdtl
hlt
or
add
pop
cmp
fildll
loop
aaa
cmp
cmc
nop
fistpl
push
mov
sbb
shl
mov
jmp
cmp
mov
mov
icebp
mov
jb
pop
or
int
mov
rcll
mov
xchg
jle
xor
jl
cmp
or
inc
stos
mov
xchg
les
jmp
push
push
cmpsl
addb
imul
lock
add
cmp
aas
or
adc
push
mov
and
lods
iret
rorb
sbb
loope
fs
test
fs
jne
push
ret
aaa
popa
mov
jmp
lret
or
push
sub
testl
push
pusha
xor
xchg
dec
adc
add
mov
fsubrl
cmp
mov
out
sub
sub
addb
cld
push
icebp
movsb
cwtl
cmp
push
or
push
inc
loope
aas
fsubrs
jg
outsb
shll
dec
out
pop
push
faddl
add
ficoms
jo
mov
lea
aaa
mov
jb,pn
and
fiadds
mov
out
mov
sti
and
lods
test
cmc
pop
aam
jmp
stos
and
dec
movsb
movsl
icebp
inc
in
add
lds
xchg
loopne
mov
push
aad
out
cmp
dec
hlt
mov
fcomps
dec
pusha
lret
jmp
in
ret
jo
cmp
push
int
sar
sbb
or
mov
jg
xor
sub
call
lcall
lcall
mov
xor
pushf
mov
xlat
lock
inc
cmp
push
pop
sub
cmp
jle
push
int
xor
or
xchg
fildl
mov
test
in
mov
stc
hlt
das
jnp
ret
dec
cmc
push
popf
push
scas
lea
mov
xchg
dec
xor
adc
mov
xchg
movl
sti
jle
jl
idivl
sbb
int
cmp
aam
dec
imulb
fstl
pop
pushf
cld
dec
test
imul
add
lea
popf
icebp
arpl
in
xrelease
aam
jo
mov
adc
gs
adc
xchg
shll
mov
inc
mov
xchg
cmc
icebp
jecxz
xchg
daa
pop
mov
mov
xor
mov
lahf
into
and
push
mov
lret
stos
negl
lds
sbb
lock
test
adc
insb
or
add
mov
mov
nop
arpl
or
in
mov
add
xchg
inc
push
push
repnz
mov
push
mov
cs
xchg
clc
in
mov
cli
adcb
cmc
push
pop
int
arpl
sub
pop
in
mov
add
cmc
lods
addr16
inc
mov
pop
cs
push
pop
mov
jmp
cmp
xchg
call
pop
or
sbb
movsl
xchg
es
repz
scas
je
sub
test
arpl
shll
mov
fwait
dec
fsubrs
fisubrl
adc
loop
xlat
lret
repnz
loope
sub
ja
neg
cmp
outsl
inc
fcompl
sahf
data16
int
div
cmc
push
push
in
lods
xor
lods
call
ds
and
call
sub
clc
jge
add
leave
cli
cmp
shrl
cs
sub
out
lret
pop
pop
cmpsb
ljmp
lods
hlt
mov
add
lea
inc
push
ret
add
testl
mov
ret
pop
mov
mov
xor
mov
bound
lods
je
fstpl
das
mov
addr16
adc
leave
imul
loop
scas
jl
add
push
push
mov
xchg
aas
rorb
jmp
push
sbb
aam
adc
jmp
rcl
jb
ret
sbb
fimuls
xor
rolb
arpl
in
das
cmp
xchg
inc
jg
jbe
add
imul
ljmp
mov
subl
std
and
sti
cltd
push
or
add
dec
int3
pushf
sub
and
jb
and
or
shl
mov
push
addl
mov
xor
xor
xlat
push
mov
pop
inc
mov
cmp
add
rolb
lods
push
stc
clc
aam
sub
out
movsb
push
ss
mov
adc
sub
or
scas
inc
aam
orb
jmp
mov
pushf
imul
and
sub
lods
adc
mov
fcoms
cmp
xchg
pop
mov
ret
ret
mov
xor
negb
mov
imul
cld
pop
push
fs
xchg
ja
imul
cwtl
test
pop
adc
popa
inc
xor
sbb
les
mov
cmp
xorl
mov
push
in
xchg
fbstp
test
call
jb
fbld
outsb
and
ljmp
mov
xchg
sbb
dec
out
and
sub
scas
stos
imul
jnp
std
push
mov
fbld
xchg
insb
negb
mov
mov
enter
cmp
subb
and
xchg
pop
dec
scas
mov
lock
mov
cs
lock
das
in
push
cmp
loopne
push
lods
sti
pop
aas
xor
int3
dec
test
sbb
cmp
mov
mov
mov
and
jp
or
popa
lock
arpl
es
pop
xchg
mov
push
sbb
je
icebp
btr
je
pop
jge
lods
ljmp
push
xor
int3
dec
inc
mov
push
cmp
xchg
addl
sub
mov
and
insb
lret
or
and
xor
mov
ljmp
lret
push
les
sbb
scas
ljmp
fcmovne
daa
push
in
sahf
xor
mov
sub
aas
xchg
jge
shlb
xchg
xor
outsl
sub
xor
lahf
cmp
push
jb
gs
mov
or
in
shll
sub
mov
and
jae
jmp
gs
jb
lcall
inc
mov
jmp
cmpsb
pop
jo
sbb
push
std
mov
xlat
int3
negb
push
mov
insl
notl
mov
sbb
or
mov
push
push
das
iret
add
inc
arpl
es
mov
or
mov
sub
and
into
mov
int3
pop
ljmp
dec
out
jne
mov
pop
movsl
xor
ss
lds
pop
and
pusha
cmpsl
add
addr16
stc
sub
push
adc
ss
and
mov
push
testl
daa
mov
cltd
aas
adc
push
mov
mov
dec
es
push
jg
ficomps
mov
sahf
cmp
jno
addb
mov
aas
push
sarb
ljmp
nop
sub
enter
frndint
lods
lock
cmp
or
mov
adc
insl
mov
test
shlb
pcmpeqw
push
xchg
xchg
jb
mov
or
lahf
ljmp
or
cmpl
lahf
jecxz
sub
push
push
inc
push
sub
fistps
push
inc
in
mov
fidivl
and
jp
and
daa
push
aaa
jo
inc
mov
push
lea
movhps
jae
clc
iret
cs
lods
xchg
fs
mov
jl
subb
pop
imul
lret
mov
pop
xlat
cmpsl
test
mulb
loop
in
stos
mov
push
sbb
jle
or
lahf
xor
pop
pop
jbe
cs
jmp
mov
mov
ret
sub
mov
mov
aas
inc
sbb
fdivrl
ret
mov
push
test
rep
aaa
call
sub
in
out
inc
push
jge
lock
out
nop
enter
ret
ds
adc
movsb
fists
test
scas
jp
xchg
sbb
jg
movb
sub
scas
lock
pop
aaa
in
movsb
inc
xor
xor
cld
and
fsubs
mov
in
out
xchg
das
or
add
subb
mov
jmp
fsubp
fwait
lods
shrb
pop
dec
cmp
pop
push
sub
cs
xor
mov
cmpl
movsl
jae
cli
scas
out
fucom
not
mov
cli
lahf
inc
mov
push
cmc
pop
das
mov
sub
inc
push
cmc
add
fisubrs
scas
cld
cmp
mov
mov
mov
mov
pop
inc
mulb
in
mov
push
movsl
test
jo
and
pop
inc
sub
inc
out
add
inc
out
xor
push
sahf
rcr
int
adc
es
push
loopne
adcl
xorl
es
and
add
dec
mov
xchg
outsb
pop
mov
mov
push
push
mov
loopne
adc
outsl
shlb
mov
sbb
jb
cmp
cli
add
push
xor
pop
mov
pushf
pop
jecxz
pop
or
push
hlt
inc
loope
push
xor
mov
out
jg
lret
repz
push
xchg
daa
push
psubb
call
mov
sbb
or
cmpsb
cmp
sub
movsb
pop
scas
cmp
sub
insl
in
popf
loopne
and
cmp
push
std
into
arpl
imul
push
scas
and
dec
jae
pop
add
mov
cmp
mov
arpl
xlat
xchg
mov
imul
xchg
test
icebp
push
add
cmc
out
mov
mov
mov
stos
mov
or
jnp
scas
lods
inc
fdivrs
and
test
int3
out
in
imul
pop
mov
jg
in
adc
out
or
pop
cmp
in
inc
pop
push
and
xchg
xchg
inc
ret
mov
lock
jne
xchg
pop
and
in
sbb
incl
cmp
mov
fucomi
clc
jb
test
pop
test
xchg
ret
mov
rolb
filds
cmpsl
sbb
cs
lds
push
dec
cli
clc
push
movsb
xchg
jge
js
xchg
jg
sub
iret
mov
shr
out
ja
jb
ret
es
int3
fcoms
adc
dec
or
fsubr
shl
lahf
or
out
mov
pop
pusha
sbb
add
push
jnp
mov
pop
inc
sbb
inc
imul
aad
jae
movsb
aam
rcll
movsl
pop
mov
mov
jae
das
leave
fwait
pop
cs
inc
inc
enter
dec
mov
mov
mov
mov
mov
mov
in
ljmp
popf
inc
jno
push
fadds
inc
jl
repz
pop
jp
mov
jbe
repz
sbb
mov
clc
into
mov
xor
divb
repnz
in
out
js
pop
iret
cmpsb
leave
cwtl
leave
mov
mov
sbb
fstl
fnstsw
ljmp
int
xlat
adc
ds
lods
test
inc
fisttpll
icebp
inc
push
mov
daa
ret
insl
ret
cli
mov
loopne
addr16
ja
pop
push
jge
fdivs
fsts
adc
adc
xlat
insl
lcall
adc
fimuls
loop
dec
lock
push
xorb
inc
es
pop
mov
mov
ds
mov
mov
hlt
mov
adc
popf
mov
jae
jp
jne
int
pop
xor
out
test
enter
fcoms
jo
push
imul
mov
xchg
cld
adc
ss
xchg
sbb
pop
mov
addr16
ret
pushf
lahf
pop
std
in
xor
jg
pop
xor
inc
mov
mov
mov
jle
pop
dec
cmp
jbe
dec
inc
lcall
mov
mov
frstor
inc
idivb
mov
js
daa
sub
outsb
mov
out
add
fldcw
cmp
jb
adc
push
movsl
ljmp
mov
fwait
push
imul
pop
mov
mov
pop
cltd
adc
jnp
sub
xor
subl
rclb
or
stos
mov
enter
test
ret
int3
xchg
cmp
gs
lcall
jae
bound
adc
mov
push
push
push
jecxz
mov
fildll
in
sub
fsts
leave
sbb
adc
clc
movq
cmp
dec
xor
add
mov
or
cmp
fcmovu
pop
arpl
jnp
js
pop
dec
rclb
jno
or
sub
pop
pop
lcall
popf
sbb
enter
xchg
xchg
clc
jb
push
push
sbb
adc
adc
and
mov
or
xchg
xor
daa
or
test
int3
lahf
jbe
xchg
fadd
push
dec
mov
xchg
call
mov
push
fwait
cmp
or
das
shll
pop
divl
sbb
mov
ljmp
sbb
popa
mov
mov
dec
fldcw
in
int3
ja
sbb
test
pop
addr16
xchg
gs
popa
cli
push
and
adc
mov
mov
in
stc
or
pop
nop
inc
mov
mov
lcall
mov
das
int3
loopne
mov
inc
mov
mov
push
mov
aad
loopne
cmpsl
xchg
call
in
cs
rol
inc
jmp
inc
insb
into
cltd
add
data16
into
shl
cmp
call
in
push
push
test
jbe
or
std
push
jae
cmpsb
add
adc
xor
je
mov
mov
roll
mov
int3
dec
xchg
ss
cltd
rcrb
pop
mov
and
mov
lods
sbb
jecxz
mov
cmp
hlt
test
mov
loopne
arpl
or
sbb
clc
leave
mov
jle
ja
mov
ret
mov
cmp
add
inc
inc
jmp
or
imul
imul
adc
cltd
test
cmp
enter
fwait
div
mov
in
insl
test
shrb
inc
push
cli
sbb
mov
std
add
insb
xor
clc
or
lods
insl
sub
call
mov
repz
or
xchg
mov
dec
inc
stos
push
daa
sbb
imull
push
les
pop
fstl
pushf
push
pop
cmp
fmull
sbb
cltd
mov
mov
adc
cli
lds
icebp
sub
mov
mov
mov
mov
lea
xchg
fistps
nop
push
aad
scas
outsb
xchg
cmp
insb
dec
cmp
js
sub
pmulhuw
adc
mov
xor
cmp
mov
jle
lret
inc
push
or
xchg
call
pop
sti
imul
add
and
nop
in
pop
sti
xchg
pop
les
push
cltd
jecxz
test
mov
sbb
xor
xchg
out
jge
repnz
jno
jae
fnsave
push
cmp
cli
out
sahf
lock
movsb
pop
cwtl
inc
insb
push
pop
mov
out
jno
cmp
scas
scas
leave
cmc
rcll
mov
pop
sbb
movsb
pop
sub
lds
mov
jns
mov
je
add
out
inc
xor
loopne
cmp
into
imul
out
mov
test
dec
aaa
sbb
jle
call
lcall
add
loopne
js
daa
test
imul
mov
aad
loopne
push
pushf
xchg
push
lods
jge
mov
pop
or
push
fnstenv
or
test
movsl
xor
mov
int
adc
aam
daa
es
push
pop
push
add
js
das
mov
inc
out
xor
xor
pop
mov
lcall
pop
cwtl
cmp
jmp
or
and
jmp
outsb
les
xor
dec
jnp
cmpps
push
and
jle
adc
sbb
popf
add
cmp
mov
xchg
jl
test
jecxz
in
cmc
pop
repz
sbb
inc
bnd
jge
hlt
jge
xor
jmp
jns
xor
rorl
adc
sahf
cld
ljmp
outsl
xor
fisubl
xor
mov
ret
push
subb
js
adc
mov
ljmp
push
cmp
mov
insl
mov
pop
sbb
mov
adc
movsl
xor
xchg
xchg
mov
hlt
fsubs
arpl
imul
adc
push
cmp
jb
xlat
jb
idivb
mov
or
cltd
cltd
push
add
movl
or
adc
push
imul
out
in
xchg
xor
jbe
push
mov
cmp
lds
xchg
addr16
pusha
dec
flds
fistpl
jl
xchg
ds
inc
outsb
aam
mov
lock
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
push
mov
movl
pop
jmp
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
or
push
movzbl
and
movl
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
andl
push
adcl
mov
mov
xor
mov
and
xor
mov
mov
sbb
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
dec
mov
mov
adcl
push
call
adcl
push
push
sbbl
push
movl
push
andl
push
push
orl
call
orl
push
andl
call
push
call
movzbl
mov
mov
movl
cmp
movl
jne
movl
adcl
pushl
andl
pushl
pushl
orl
call
xor
mov
or
mov
mov
mov
sub
movl
lea
mov
adc
lea
notl
mov
mov
mov
sub
and
mov
mov
mov
and
mov
mov
xor
mov
add
movl
mov
movl
mov
movl
cmp
movl
jne
orl
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
push
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
sbb
mov
andl
mov
movzwl
add
xor
add
andl
xor
or
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
and
mov
adc
mov
xor
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
orl
add
andl
xor
or
inc
mov
cmpl
jne
pushl
push
pushl
pushl
push
push
call
cmpl
jb
mov
andl
xor
xor
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
mov
mov
mov
mov
xor
add
mov
sub
add
mov
notl
mov
mov
neg
mov
sbbl
mov
sbb
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
inc
mov
subl
xor
xor
andl
add
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xor
xor
add
mov
subl
xor
orl
xor
add
movl
lea
mov
mov
mov
cmp
ja
or
mov
add
xor
lea
addl
mov
adc
mov
inc
xor
lea
xor
add
mov
or
mov
mov
mov
movl
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
decl
mov
adc
movl
adc
mov
mov
sbb
mov
xor
sbbl
add
cmp
movl
je
mov
movl
mov
xor
orl
xor
subl
add
sbbl
add
adc
xor
sbbl
xor
mov
mov
or
mov
xor
mov
add
adc
xor
xor
movl
mov
movl
mov
movl
cmp
jne
mov
cmp
movl
je
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
add
adc
xor
mov
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
lea
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
lea
push
pushl
call
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
je
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
mov
mov
mov
xor
lea
xor
add
adc
xor
mov
xor
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
addl
mov
sbbl
xor
sbb
mov
add
not
movzwl
mov
movb
sub
lea
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
push
pushl
pushl
pushl
call
mov
dec
mov
jmp
sub
mov
xor
adcl
sub
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
inc
push
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
movl
sub
mov
xorl
push
andl
mov
xor
mov
push
add
jmp
movl
mov
movl
mov
inc
movl
cmp
movl
jb
sbb
mov
decl
xor
add
movl
jmp
mov
jmp
ud1
mov
std
std
test
bound
bound
mov
or
sbb
adcb
rorl
mov
insl
sub
xchg
aam
xchg
mov
imul
dec
jb
cld
jno
outsb
cltd
jns
jns
lds
repz
icebp
movsb
stos
jae
mov
lret
mov
incb
mov
push
mov
out
xor
mov
leave
sub
jg
int
mov
jnp
xchg
cmpl
jno
loop
mov
xor
in
adc
cmpsb
mov
in
lock
sbb
pop
test
sti
cs
inc
cs
bound
lret
insb
into
and
push
sti
or
jg
jnp
adc
jae
rcrb
movsl
adc
mov
mov
or
adc
cwtl
scas
xchg
cmp
insl
iret
lcall
cmp
cmp
xchg
mov
into
arpl
pusha
stos
pop
and
cmp
jge
push
fisubrs
sbb
mov
push
nop
fsubrl
adc
les
push
xchg
jns
cmpsb
adc
push
and
or
pop
sbb
ljmp
fsub
fcompl
lods
inc
iret
xor
and
dec
push
loop
adc
sarb
sbb
pop
popa
fwait
xchg
push
or
inc
fcoml
push
js
sbb
push
adc
xchg
out
xchg
cmp
imul
mov
outsb
inc
lret
sbb
jp
stos
mov
dec
lock
xor
les
mov
idiv
mov
or
test
ficoms
mov
adc
out
dec
inc
xchg
xchg
call
xor
in
fidivs
sub
lahf
popa
mov
rcrl
imul
pop
cwtl
mov
add
sbb
lods
sbb
mov
inc
pop
in
mov
repnz
jae
push
jb
popf
jge
cmp
push
outsl
imul
jecxz
ret
xchg
lds
cmpl
test
inc
ret
inc
dec
inc
aam
stc
lock
aaa
adc
jl
hlt
sub
sbb
mov
rol
mov
mov
aas
and
xor
ljmp
mov
outsb
gs
sarl
jnp
cmp
scas
and
addr16
fcmovnb
pop
cmp
fisttpl
xchg
and
jno
mov
push
inc
or
out
adc
js
loope
loope
cmp
pop
out
sub
jbe
mov
lret
mov
ljmp
cmpl
sarl
add
cmp
fucom
imul
jmp
cltd
fistpl
pop
aaa
mov
inc
mov
sahf
cs
jo
dec
dec
inc
jns
int
mov
jge
inc
leave
push
lods
or
inc
std
lock
jae
mov
push
jo
ja
ret
sub
push
pop
in
flds
imul
sbb
pusha
idivl
cwtl
loope
call
pop
mov
adc
dec
cmp
mov
lea
inc
sub
scas
enter
fnstsw
mov
push
std
jne
xchg
pop
push
hlt
nop
fnsave
loop
iret
sar
repnz
out
xchg
sbb
mov
adc
cmc
repz
test
frstor
das
fwait
push
add
test
fisubrs
call
stos
stos
cmpsl
sub
jbe
fcoml
adc
fdivl
lcall
cld
std
or
mov
pop
mov
dec
xor
xchg
out
sbb
jge
addr16
or
scas
cmpb
pop
cld
xchg
push
loope
add
in
cli
and
pop
adc
movsl
mov
cwtl
mov
gs
jo
push
mov
and
testl
sub
test
add
pop
mov
xor
sbb
ljmp
or
mov
lock
lds
out
rclb
jae
insl
and
cli
jp
stc
mov
mov
in
ja
mov
mov
dec
or
and
repnz
add
cltd
sbb
xchg
andl
lret
adc
aam
or
insb
and
mov
and
xchg
push
jne
inc
xor
jecxz
int
sub
and
jb
jo
ret
xor
jnp
sub
lds
aad
imul
icebp
popa
add
add
mov
pop
jp
xor
arpl
push
push
mov
repz
or
mov
xchg
mov
in
xchg
sbb
das
push
inc
pop
incb
and
adc
push
add
sub
jecxz
je
cli
sub
dec
cmp
mov
push
mov
add
mov
jns
cwtl
test
mov
xor
mov
jns
inc
xlat
sbb
shlb
ljmp
out
aas
push
inc
mov
pop
cmp
inc
cmpl
jns
pop
hlt
ds
inc
pop
mov
and
loopne
cld
jne
or
imul
sub
test
xchg
mov
pop
push
and
int3
je
fmul
nop
sbbl
sbb
dec
xchg
dec
loope
pop
sub
or
mov
clc
pop
scas
adc
repnz
xor
stos
mov
insl
popf
loop
dec
andb
xchg
adc
lods
pop
test
cmp
or
cmpsl
jmp
shrl
aaa
fisttps
mov
or
mov
ljmp
add
sahf
fucomip
pop
add
jb
shlb
pop
cli
sti
sahf
pop
push
adc
cmp
pop
jnp
or
lods
outsb
aad
movsl
mov
mov
repnz
xor
aad
insb
aaa
pop
pop
inc
jmp
aad
xor
sub
jns
cli
mov
cmpsl
andb
rcrb
cmp
aam
js
dec
mov
xor
xlat
adc
pop
push
add
stc
neg
fmull
lahf
ror
jge
sbb
inc
or
mov
pusha
loope
aam
jl
sbb
scas
adc
cmp
mov
fiadds
out
xor
mov
ficoml
push
pop
and
xchg
hlt
ds
push
je
js
jb
xchg
int
mov
mov
aad
mov
add
sbb
std
fidivs
jbe
lock
rclb
lock
fists
fwait
jmp
pop
sub
jne
cmc
xchg
daa
in
sbb
movsl
or
loop
lret
arpl
dec
int
dec
test
jae
ja
out
orb
inc
xor
pop
inc
pop
sub
icebp
femms
nop
inc
rcll
adc
aad
push
jns,pt
jle
fs
sub
mov
stc
out
mov
bound
int
jl,pn
sbb
push
loope
ds
mov
cmp
cltd
ljmp
jnp
push
sbb
adc
mov
ljmp
and
pop
pop
inc
add
insb
leave
cmpsl
ror
iret
push
xor
adc
pusha
add
xchg
stos
jle
jmp
cltd
jle
jmp
out
jg
enter
out
int
es
call
jp
mov
sub
test
cmpsb
fwait
push
sub
cmp
inc
inc
fbstp
lcall
and
dec
popa
sbb
dec
xchg
std
push
test
add
mov
mov
leave
out
mov
sub
pop
es
add
movsl
out
or
repnz
pushf
loope
jmp
insb
shrl
lock
outsl
add
data16
outsb
ss
inc
sub
loop
jns
xchg
fldenv
cmp
in
popf
call
inc
cmpw
das
mov
and
add
cmp
aas
push
ja
sti
outsl
mov
ret
arpl
add
imul
arpl
cmp
cmpsl
dec
push
mov
jnp
lods
jno
movsl
hlt
pop
push
or
in
adc
into
mov
ljmp
jge
jo
test
lea
scas
into
cltd
divl
stos
sahf
add
and
push
mov
push
fisubrl
in
ds
fnstenv
sbb
cmp
call
jo
xchg
loope
hlt
push
pop
cmpsb
mov
lods
adc
cmp
lock
call
leave
adc
xlat
gs
add
dec
or
sub
mov
pmullw
push
inc
aas
insl
into
imul
ja
push
push
or
ret
in
mov
lcall
cmp
stos
and
mov
xor
xchg
loopne
pop
popf
sahf
idivl
push
faddp
sti
jge
pop
pop
fld
and
xchg
pop
arpl
mov
adc
int
outsb
cmp
or
sbb
out
jns
les
jp
xchg
mov
sti
aas
repz
add
shl
sbb
lea
lret
roll
xchg
mov
mov
fidivrl
fwait
icebp
insl
test
jno
in
ret
aaa
in
test
sti
dec
xchg
jp
xor
das
pop
push
addps
xchg
fisubs
pop
subb
lahf
push
jecxz
and
adcb
aad
loop
leave
cmpsl
jmp
or
sub
pop
mov
jno
push
lret
xchg
bound
sub
ss
lahf
push
inc
pop
adcb
sub
lock
insb
dec
jne
xor
rorb
mov
fiadds
adc
enter
clc
js
ret
adc
fwait
dec
adc
fcmovnb
arpl
inc
inc
call
or
ja
pop
fstpt
dec
mov
mov
addr16
dec
subb
lahf
cmc
mov
adc
mov
add
mov
js
sarb
lods
aad
push
xchg
mov
xor
jecxz
push
mov
nop
out
and
jae
add
stc
dec
and
xchg
jg
mov
imul
test
loope
lods
mov
push
xchg
jle
mov
js
popa
not
bound
sub
js
inc
jnp
out
daa
and
call
mov
sub
pop
out
in
push
bound
stos
mov
lods
add
mov
cmpsb
mov
icebp
jne
popf
lock
sysenter
lods
outsl
hlt
push
movl
adc
decb
cs
fsubl
xchg
lcall
insl
jl
sti
sbb
jne
mov
pop
daa
test
push
scas
sub
decl
or
xlat
arpl
out
push
enter
lcall
inc
fwait
add
lods
das
sub
pushf
adc
pop
sti
adc
sbbl
adc
imull
inc
sbb
cmp
xlat
cli
jb
xchg
sub
enter
dec
pop
add
je
and
xchg
out
jle
adc
cmpsl
cltd
inc
adc
push
pop
insb
pop
adc
bound
jle
sub
dec
lahf
dec
call
and
mov
lret
pusha
sarb
pop
stos
dec
loope
dec
rcll
mov
loopne
mov
mov
cld
ret
stos
int
pop
pushl
fdivl
xchg
inc
fwait
jg
cmpsb
push
cmp
cmp
xchg
daa
push
test
xor
push
and
xor
test
ret
ljmp
jp
lahf
jp
sub
notb
sub
cs
xchg
jge
adc
enter
test
push
cs
adc
fstpl
dec
and
push
inc
xor
into
aas
flds
or
jg
stos
pop
fcmovne
dec
shrb
cmp
movsb
mov
push
negb
adc
mov
cmp
data16
or
movsl
push
mov
or
fldt
andb
cmpsl
adc
out
ja
in
and
pop
sbbl
sahf
mov
insl
fistpll
int
popa
pusha
shlb
mov
lods
mov
cmp
pop
int3
loope
cs
mov
or
push
xchg
push
sahf
and
add
call
mov
xchg
dec
movb
xchg
ret
xor
stos
sbb
das
repnz
mov
mov
in
loop
xchg
cmp
pop
dec
ret
shl
push
sub
icebp
iret
mov
mov
push
adc
dec
mov
pop
mov
push
mov
cmpsb
jae
int
mov
jo
mov
bound
dec
add
xchg
sti
lahf
sbb
or
sbb
xchg
cwtl
xor
adc
jns
lock
jne
xor
sbb
xchg
enter
push
in
and
xor
and
clc
sub
subb
pop
das
sub
in
and
push
clc
jae
mov
pop
ds
jecxz
xchg
and
ret
cmp
loop
sbb
aaa
sbb
scas
filds
cmpb
mov
pop
or
jl
imul
dec
xchg
repz
test
aaa
mov
sub
fdivrs
pop
cmp
lcall
shr
xor
mov
ja
sub
and
pop
std
xchg
xchg
and
lock
hlt
imul
jbe
js
xchg
dec
lock
stos
xor
in
cwtl
add
iret
mov
addl
dec
fcmovne
movsb
xor
ss
vcvttss2si
popf
mov
jp
xor
push
push
xlat
mov
mov
push
in
je
mov
loop
mov
std
sub
cmc
cli
and
idivb
lock
adc
mov
inc
and
cmp
shlb
jae
imulb
daa
cwtl
xchg
dec
fcomip
push
ret
mov
out
jmp
or
icebp
push
repnz
cmp
inc
dec
mov
adc
in
xchg
fwait
jle
sub
mov
lock
lea
pusha
sub
cmpsb
pusha
jns
and
call
insl
lret
xchg
pop
jne
pushf
add
mov
fdivrl
movsl
popf
mov
cmp
xor
cs
xlat
hlt
imul
or
adc
mov
pop
sub
lret
and
pop
lods
mov
lret
or
lret
mov
dec
jle
xor
pop
cvtpi2ps
mov
xchg
adc
int3
inc
icebp
inc
loopne
nop
inc
sbb
or
xor
sbb
fdivp
cmp
fs
mov
jnp
int
sahf
popa
xlat
adc
jg
int
push
mov
pop
sub
and
jne
aad
movsl
add
ret
test
leave
rcll
iret
and
sbb
roll
iret
or
push
sarl
ret
jno
mov
xchg
aas
repnz
add
pop
cmp
ds
out
jle
cmpsb
push
test
testl
insl
idivl
aas
xchg
adc
sub
mov
jbe
aad
mov
mov
ds
sub
dec
mov
aaa
mov
or
lcall
inc
aas
add
hlt
cmc
push
clc
stos
push
mov
es
fsts
fisubrl
mov
popa
or
mov
cmp
arpl
jne
in
or
sbb
je
nop
jmp
leave
inc
xor
dec
adc
setp
dec
aaa
lds
dec
insl
pop
stc
test
clc
cmp
adc
adc
fisttpll
push
jg
jne
jno
stos
test
arpl
cmp
and
imul
pushf
fists
adc
mov
test
icebp
movl
stc
hlt
and
insb
inc
mov
mov
je
pop
lds
lods
xchg
imul
push
push
add
sub
mov
movsl
mov
jbe
movsb
daa
cmpsl
call
inc
arpl
xchg
sbbl
jne
rclb
push
pushf
sbb
mov
cmpb
add
jb
insb
push
mov
imul
mov
adc
sub
outsl
inc
scas
rcr
push
adc
enter
cmp
jae
sahf
pop
leave
mov
adcb
dec
les
shll
xor
sub
inc
aaa
jnp
mov
les
jbe
ss
cmp
mov
push
xchg
jb
lret
shlb
push
scas
push
mov
call
fsubs
inc
fsubl
fisubrl
aas
xor
daa
test
ficomps
fnsave
mov
mov
jp
loop
lock
pop
sub
push
lock
sbb
cmpsl
pop
cmc
xchg
adc
pop
int
aas
repz
arpl
fists
sbb
jb
insl
adc
fsubrs
aas
incb
int
pop
sahf
add
repnz
test
dec
mov
xchg
add
mov
add
cmp
sbb
cmp
sub
popa
nopl
inc
aam
push
inc
inc
fadd
add
xor
or
pop
xchg
adc
jle
mov
jbe
sub
mov
leave
shlb
lcall
dec
jle
mov
push
mov
nop
ficompl
pop
ret
loope
mov
adc
or
or
dec
js
mov
lods
and
movsb
pop
std
or
test
das
pop
pop
xor
movsl
sbb
popa
stos
clc
mov
int
orb
sbb
out
movsl
xchg
jecxz
testl
outsb
add
sub
hlt
in
sub
divb
mov
push
jl
dec
sub
test
testl
stos
pop
enter
je
imull
cmc
pop
aam
sub
in
das
xlat
insl
mov
pop
lds
inc
das
divb
les
lahf
sbb
aad
dec
cs
cmp
xor
ret
mov
sarl
ds
sub
arpl
cmp
and
lahf
stc
pusha
call
int3
xchg
push
jns
inc
sbb
imul
cmp
flds
idivl
shll
xor
push
jnp
outsb
push
test
fistl
hlt
push
inc
jbe
aam
dec
call
pop
pusha
test
xlat
in
jecxz
jmp
xor
mov
popa
inc
popa
addl
xor
pop
shlb
push
pop
je
ljmp
sbb
les
dec
push
enter
push
mov
sub
enter
insl
lret
fbld
int
dec
outsb
clc
lods
lock
dec
cmp
jae
es
je
adc
pop
jl
pop
cmp
aam
xchg
aaa
or
cmp
iret
sarb
jbe
and
movsb
and
push
and
or
popa
clc
dec
out
add
pop
pop
movsl
fucomip
clc
lahf
add
rolb
jp
inc
lcall
ds
or
or
movhps
fs
push
inc
mov
cmp
xchg
mov
pop
loopne
clc
andb
loope
mov
pop
mov
lds
push
lahf
mov
in
cmpsb
pushf
daa
repz
jg
dec
cmp
add
inc
push
mov
and
dec
nop
int
repnz
cli
call
out
or
jnp
sub
pop
adc
lret
mov
lock
stc
iret
shlb
mov
mov
repz
int
push
out
add
scas
mov
mov
add
pop
cli
fbstp
out
int
imul
push
dec
mov
in
and
or
adc
je
and
lods
pushf
dec
mov
adc
add
pop
mov
jge
ja
sbb
or
add
sbb
push
pop
sub
push
push
pop
or
cmpsl
and
fidivrs
adc
or
xchg
sbb
mov
aad
mov
dec
out
pop
out
arpl
insw
jmp
adc
lea
sti
mov
mov
cli
push
and
xchg
nop
adc
xchg
pushf
inc
push
mov
cwtl
iret
mov
sub
push
les
inc
mov
and
lcall
insb
mov
xchg
std
gs
and
or
jle
aam
sbbl
cltd
mov
xor
bound
xchg
sti
add
addr16
dec
imul
cmp
test
sti
mov
inc
popf
mov
push
or
mov
aaa
shl
mov
out
inc
cmp
mov
inc
sub
nop
pushl
xor
xchg
cs
xchg
xor
out
lret
pop
mov
push
jb
mov
lret
fs
cs
xchg
push
push
andb
xor
jb
icebp
into
mov
std
fmulp
push
aaa
out
lds
fcmovne
mov
pushf
jge
mov
insl
pop
ds
ja
leave
fists
push
rclb
pushf
test
dec
les
and
ret
fsub
mov
mov
or
inc
sarb
mov
jae
or
adcl
mov
add
add
imul
mov
cmp
test
out
sbb
jecxz
je
mov
add
movl
jbe
into
test
xchg
out
xor
pop
popf
pop
lret
jb
mov
push
lea
je
xor
je
shl
std
sub
push
in
xor
lds
jecxz
mov
jmp
push
mov
mov
push
dec
call
push
std
ja
out
outsb
add
lods
nop
stos
sbb
addps
adc
sub
mov
pop
or
sarl
xor
cld
insl
js
mov
xchg
and
cwtl
or
dec
mov
xchg
repnz
sbb
loop
sahf
and
loopne
pop
sub
push
cmp
sub
das
out
rolb
cs
ss
mov
iret
rcrl
ja
pop
dec
add
sbb
fnstenv
shrl
sub
mov
sbb
sarl
xchg
or
lcall
stos
mov
dec
pop
cwtl
dec
sbb
pop
imul
jp
rolb
cmp
test
add
mov
mov
xor
xchg
and
push
jp
or
cwtl
push
decl
and
mov
sub
adc
cld
pop
inc
and
inc
into
jecxz
sbb
imul
hlt
inc
pushf
js
aas
addr16
jb
pop
dec
aaa
push
mov
xor
lods
cmp
inc
and
and
jle
in
mov
fistpll
pop
jno
inc
out
lret
mov
push
push
and
pop
cmpl
and
fisubrl
or
sub
jp
popa
inc
mov
inc
movsb
mov
pusha
loop
lds
xor
in
sbb
mov
jmp
out
pop
jp
add
cmp
xor
sbb
arpl
lds
aam
xchg
push
inc
mov
pop
dec
dec
frstor
sub
pop
xor
or
xchg
mov
js
fists
mov
in
sbb
dec
sbb
mov
adc
fdivl
xchg
push
mov
ret
xchg
repnz
and
push
imul
add
pop
jmp
xchg
sbb
subb
xchg
xor
inc
xor
insb
call
and
popa
shl
inc
pop
cltd
pop
gs
dec
outsl
repz
std
cmp
cmp
dec
lods
out
jg
iret
jl
add
sub
shll
sub
inc
pop
outsl
loope
lahf
movsb
jl
xor
mov
push
imul
jle
gs
imul
xchg
pop
insl
arpl
ret
jbe
fisttpll
push
mov
mov
inc
or
xchg
jmp
test
stos
xchg
fcmovnbe
mov
cmp
std
push
dec
dec
cltd
stos
push
scas
out
cs
sti
add
sub
adc
pushf
cli
mov
dec
jmp
js
jmp
lods
loope
les
adc
ljmp
mov
dec
pop
addl
int3
fmull
outsl
fistpll
jp
xor
movsb
jno
iret
int
adc
jmp
adc
into
sbb
push
ret
mov
loopne
loopne
xchg
inc
cli
nop
std
pop
hlt
lock
add
jo
int3
leave
clc
fs
cmp
mov
mov
jge
xchg
xchg
push
in
and
dec
rorl
inc
xlat
xchg
std
loopne
in
in
adc
xchg
ret
and
in
addr16
je
cmpsl
dec
sbb
and
rcrb
dec
aad
pop
andl
ficomps
sub
fst
mov
lock
xchg
pop
outsb
inc
and
fsubrs
fs
jg
lahf
push
fxtract
call
stc
push
insb
inc
faddp
inc
add
jmp
pop
rorb
mov
jae
xchg
xchg
mov
push
cmpsb
mov
sti
clc
cld
inc
pop
jp
hlt
cwtl
push
mov
call
jae
out
std
and
sbb
inc
cmpsb
jb
pop
dec
inc
mov
dec
std
jl
xchg
lahf
mov
cmpb
sbb
or
ss
fldl
cs
xchg
mov
fisubs
add
lods
jo
push
mov
cmc
xor
iret
add
push
call
mov
mov
add
loop
xchg
mov
cmp
pop
in
fldenv
call
sub
repz
sbb
dec
addr16
loopne
pop
mov
arpl
dec
int
xor
popf
push
and
fsubl
xor
push
daa
mov
add
mov
xchg
xchg
ja
inc
push
mov
push
or
fs
dec
cmc
jns
xchg
sub
sti
fwait
xchg
inc
xchg
jecxz
jg
cmpsl
xchg
xor
shl
clc
xor
mov
lret
fmuls
cld
lahf
dec
jne
ds
cmpl
cmp
adc
sahf
inc
fsubl
xor
cmpsb
mov
xor
xchg
sub
and
call
push
and
and
loopne
dec
adc
pop
outsl
sbb
notl
mov
jecxz
or
lods
leave
clc
add
arpl
cltd
push
cs
cwtl
subb
in
add
arpl
jecxz
lret
flds
lods
mov
cmp
xor
jge
pushf
mov
outsl
pop
repnz
movsl
and
call
xchg
dec
fmul
mov
mov
inc
push
mov
fstl
add
loop
shlb
dec
pop
or
ffree
jl
inc
push
pop
and
rcl
add
or
inc
xchg
dec
inc
orb
fwait
push
ds
add
jl
inc
sub
xchg
mov
rol
dec
fmull
out
push
mov
xchg
bound
popa
arpl
pop
mov
jne
jns
test
shrl
sbb
sbb
test
xorl
jmp
int3
fisubs
gs
xor
pop
pop
xorl
adc
into
insb
xchg
mov
add
sub
mov
ss
add
jle
cmp
jl
les
pop
nop
xor
xor
movsl
aam
and
xor
mov
call
sub
sub
inc
jmp
mov
xor
cmpsl
inc
mov
mov
stos
jl
and
adc
sbb
repz
dec
mov
jg
cmc
jb
scas
mov
sub
push
stos
gs
lret
xor
aad
insb
movsl
lret
jmp
fdivr
and
lcall
fistpl
adc
and
in
iret
cwtl
lods
mov
out
out
jmp
xor
pop
test
mov
out
sub
push
mov
iret
jb
mov
inc
call
dec
or
push
cmp
sub
inc
pop
sbb
mov
add
aam
inc
mov
enter
cmp
jae
cmp
call
jecxz
cmp
test
add
mov
mov
jb
xor
stos
int
rolb
pop
lret
fnstsw
push
decl
sbb
std
xchg
jno
mov
pop
imul
rcrb
shll
testb
int3
int3
jno
gs
add
inc
xchg
cmp
mov
pop
stos
sbb
push
in
mov
ss
adc
imul
lock
cmp
loopne
daa
cmc
dec
jle
sbb
enter
loopne
push
adc
inc
mov
shl
jmp
dec
lods
lret
and
jno
dec
clc
out
fdivrs
push
mov
dec
ffree
or
rol
xchg
sarb
fs
loop
aaa
jmp
lock
xor
inc
aas
popf
subb
into
and
push
push
sti
pop
orl
pop
mov
sbb
and
jp
sub
cmpsb
fs
cmp
xor
aam
xchg
rcrb
daa
xchg
adc
xor
fiaddl
and
out
std
sbb
xor
mov
adc
adc
iret
jnp
fs
mov
cmc
sbb
mov
and
hlt
sbb
and
fidivs
mov
push
dec
aaa
pop
dec
xchg
mov
push
in
mov
call
xchg
fisubrl
adc
les
dec
push
push
xchg
out
xchg
lret
add
cmp
dec
jo
sbb
sbb
addl
cmpsl
push
pop
jp
dec
shrl
lods
pop
mov
jno
iret
jmp
xor
fdivrs
adc
shl
add
xlat
test
rcll
inc
inc
iret
sub
gs
dec
cmpsb
test
add
mov
dec
dec
dec
xchg
fcoms
outsl
inc
and
xchg
push
shlb
cltd
lret
subl
jmp
sti
xorl
leave
sbb
pop
je
rolb
int3
xchg
daa
dec
inc
and
or
cs
or
dec
push
andb
stos
cmc
mov
daa
scas
jle
xchg
push
cltd
add
cmpsl
bound
jmp
bound
filds
ljmp
add
xor
lret
gs
jb
xchg
adc
pop
loopne
cmc
xchg
clc
mov
sbb
mov
mov
or
daa
pop
movsb
sbb
mov
mov
mov
repz
add
pop
jbe
ss
and
xor
xchg
ljmp
leave
sbb
daa
push
mov
pop
adc
fsubl
xor
ja
loop
push
out
pop
add
jb
xchg
loopne
mov
push
loop
sahf
jo
xor
movsb
pop
push
ret
jae
in
inc
pushf
adc
xchg
xchg
sbb
lea
test
push
mov
cmpsb
dec
ret
mov
out
pop
jmp
sbb
push
fs
mov
ds
sub
inc
jno
out
push
push
shrb
dec
mov
add
idivb
mov
mov
lcall
pop
jle
ss
and
adc
push
inc
push
dec
lds
fmuls
pop
lea
mov
sbb
arpl
sbb
jno
cli
shll
jecxz
rorl
adc
test
or
inc
add
inc
add
dec
xchg
add
add
add
mov
addl
add
andl
movzwl
notl
mov
and
mov
movzwl
xor
add
mov
mov
mov
inc
movl
mov
movl
cmp
movl
jne
mov
add
mov
xor
addl
add
mov
or
mov
xor
add
mov
movl
movl
movl
movl
movzwl
mov
mov
jmp
mov
add
mov
sbb
mov
orl
xor
xor
adcl
sub
adc
sub
movl
xor
mov
and
mov
or
mov
lea
mov
orl
mov
movzbl
xor
mov
lea
not
mov
xor
or
adc
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
push
pushl
pushl
call
cmpl
jb
orl
mov
sbbl
lea
and
mov
and
mov
mov
movl
lea
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
mov
adcl
lea
mov
not
mov
mov
and
mov
mov
sbbl
lea
orl
mov
mov
xorl
xor
sbbl
add
jne
jmp
xor
add
mov
sub
and
mov
subl
mov
xor
orl
xor
sub
sub
xor
mov
mov
mov
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
pushl
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
xor
add
adc
mov
mov
mov
sbb
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
jmp
rcrl
imul
dec
test
add
bound
ja
push
sbb
nop
push
pop
pop
cs
push
push
sub
fs
aaa
jns
add
mov
rol
cmpsb
sub
loopne
inc
pop
pop
imul
inc
ljmp
sbb
mov
in
scas
sbb
dec
cs
add
imulb
push
out
mov
jecxz
and
dec
sbb
dec
fdivr
mov
push
lock
leave
jb
outsb
jns
mov
data16
aaa
mulb
iret
mov
add
cwtl
adc
xor
out
sbb
or
and
mov
adc
fwait
repnz
dec
lea
or
lds
pushf
and
sbb
sbb
sbbl
in
lahf
test
lret
lret
in
movsl
repnz
nop
xchg
mov
push
cltd
call
pop
push
mov
sub
mov
in
sarl
fnstcw
jl
sbb
lods
outsb
sub
std
sub
andb
cmpsb
test
adc
and
cmp
mov
jg
por
ret
cmp
lret
or
test
push
push
mull
xor
les
and
ror
int3
mov
lret
mov
mov
mov
xor
stos
out
inc
int3
dec
stos
ret
push
xchg
dec
jge
jnp
roll
adc
fwait
add
xor
cmpsl
pop
insb
jp
jle
mov
sbb
rorb
fistl
sub
mov
movsb
roll
arpl
add
shll
jno
add
loopne
cmp
faddl
repnz
mov
icebp
mov
ss
add
fisubs
add
mov
pushf
mov
push
xor
pop
outsl
flds
imul
sbb
ds
mov
mov
adc
int
sbb
mov
dec
sbb
inc
adc
push
xchg
xor
subps
iret
in
push
adc
lds
out
fwait
sbb
fcoml
jo
insb
push
mov
roll
fbld
inc
dec
mov
sub
rcrb
cld
xchg
repz
push
lods
dec
jecxz
cmp
sub
mov
cltd
jg
stos
shl
cmc
sarb
dec
inc
push
gs
stc
mov
xchg
pushf
dec
push
icebp
je
jge
push
enter
icebp
ficompl
clc
jmp
loopne
sarl
cld
xor
dec
addr16
iret
xor
aam
pop
sub
mov
cmpsb
xorl
enter
das
sub
pop
push
ficomps
arpl
testl
loopne
scas
movsl
sti
adc
mov
adc
rol
bound
dec
clc
pop
inc
push
es
mov
aaa
clc
shll
ret
adc
mov
jnp
outsb
sarb
rorb
xlat
dec
fldt
add
mov
or
sbb
fcompl
sahf
pop
pop
or
pop
sbb
je
sub
jp
jmp
xlat
icebp
mov
mov
sbb
ret
icebp
rol
fwait
ljmp
cmp
daa
lea
and
xchg
dec
or
mov
jmp
and
adc
leave
popa
notb
cld
push
fdivs
or
fidivs
aaa
or
xchg
fildl
lods
pop
pop
add
cmp
add
lea
movsb
xchg
mov
xchg
xchg
add
fists
cltd
fnsave
pushl
jmp
out
pop
fwait
inc
mov
mov
cmp
mov
std
jl
pop
arpl
jmp
negl
mov
test
sub
aam
push
orps
push
fldcw
das
mov
dec
mov
add
push
sub
shll
mov
mov
mov
addb
xor
mov
xchg
push
frstor
inc
mov
sahf
dec
ja
lcall
mov
fnstenv
jno
fnstsw
xchg
lds
dec
sub
lds
test
push
inc
cmp
sub
lret
loopne
pop
addb
inc
xor
or
sti
adc
or
test
dec
ret
mov
je
mov
fldl
cli
imul
insl
aam
outsl
jno
adc
pop
inc
cs
push
repz
mov
ret
pop
add
cmp
icebp
ret
lods
mov
loop
stos
cmp
cmpsb
sbb
push
fisubs
outsb
fwait
pop
mov
and
adc
mov
push
xchg
inc
leave
leave
or
jbe
push
scas
testb
cmp
or
mov
xor
push
and
mov
aas
movsb
xor
inc
notl
push
mov
lret
push
push
andl
mov
lock
xchg
jb
stc
lods
and
pop
sub
or
pop
pop
outsb
scas
push
mov
jae
pop
xor
push
insb
add
in
dec
cmp
xchg
nop
push
pop
sbb
mov
addr16
dec
or
shrl
pop
aas
mov
xor
xchg
icebp
mov
push
aam
sub
dec
push
inc
inc
and
lret
pop
or
outsl
adc
scas
mov
data16
push
daa
cmp
add
sbb
fs
inc
cmp
mov
jmp
cmc
std
inc
emms
add
xchg
inc
add
push
and
lret
movsl
sti
push
cmp
or
push
lods
cmpb
out
sahf
xchg
dec
dec
pop
mov
add
scas
ss
loope
popf
xchg
in
mov
xchg
jnp
dec
and
pop
dec
jae
sti
mov
push
mov
xor
pop
fstps
jmp
cmp
jg
cmp
in
push
push
xor
push
mov
jnp
xor
mov
in
cmpsl
sbb
imul
lods
push
repnz
int
sub
pop
push
jae
mov
ret
mov
pop
xchg
bound
and
test
call
or
roll
hlt
xchg
mov
das
push
out
dec
mov
mov
mov
gs
xlat
inc
pop
mov
mov
aad
pop
inc
jge
and
les
add
lock
mov
and
into
ljmp
or
fstp
adc
lods
loopne
push
out
xor
pop
aam
jo
dec
frstor
fidivs
insl
roll
aad
push
mov
incl
outsb
xchg
clc
dec
mov
xchg
ffreep
sub
lret
cmpsb
sbb
adc
or
or
dec
push
outsl
cli
inc
outsl
icebp
mov
pop
cmp
fcmovne
test
je
cli
jle
sbb
fsts
ret
mov
mov
loop
pop
push
daa
xorl
popa
inc
aaa
inc
xchg
insb
fwait
vmwrite
rolb
pusha
das
mov
push
scas
adc
push
imul
or
adc
andb
add
add
nop
popl
mov
jne
subb
outsl
xchg
jns
cld
cltd
int3
fisttpll
jo
lret
mov
pusha
out
fsubrl
and
add
mov
insb
jnp
dec
jg
shlb
mov
mov
lea
movsb
xchg
sub
push
ret
stos
jge
int3
mov
rorl
std
inc
xchg
cli
inc
xor
mov
sbb
or
rcl
push
and
ja
xchg
or
push
call
incl
dec
lret
inc
insb
push
mov
and
insl
mov
inc
daa
sbb
cmp
cmp
xchg
mov
repz
or
shrl
push
cmp
repnz
xchg
lret
dec
es
push
repnz
xor
mov
mov
iret
add
test
xchg
out
mov
lret
popa
xor
pop
in
les
mov
out
int
add
popa
lahf
addr16
lret
jo
iret
imul
mov
fcompl
jbe
js
mov
nop
or
ret
xorl
testb
mov
sub
jmp
enter
sbb
fadds
lock
iret
push
jg
je
mov
xor
jmp
pop
jns
pop
fcoms
xor
notl
mov
and
movsl
mov
sbb
in
jno
jge
add
fdivl
fimuls
xchg
mov
lahf
fcomps
cmpsb
sub
mov
adc
inc
or
sub
inc
fwait
dec
insb
sbb
pop
repz
call
and
addr16
aam
push
pop
imul
cld
addr16
stos
lds
iret
adc
icebp
rcrb
sahf
push
jp
xor
out
add
dec
ds
std
sbb
jp
shl
das
test
pusha
adc
add
mov
pop
mov
and
loope
nop
mov
cli
leave
call
lock
mov
mov
or
fbstp
std
add
or
jno
xlat
adc
jb
or
inc
mov
dec
jmp
sub
and
into
dec
shrb
cmp
lret
jle
shll
jb
movsw
aas
jg
std
pop
dec
and
push
das
ret
sbb
xor
mov
fstpl
cs
cmpsb
testb
push
repz
xor
data16
jo
test
sub
shl
adc
out
and
xor
insb
pop
and
je
push
in
pop
dec
dec
jae
pop
pop
pop
cmp
inc
dec
dec
cmpsl
mov
or
mov
xchg
fwait
les
shl
xchg
rolb
dec
sarb
cwtl
test
fidivrs
mov
inc
xchg
repnz
jb
sbb
sbb
imul
ret
cmpsb
sbb
lods
pop
and
sbb
jns
clc
dec
mov
test
mov
pop
testl
punpckldq
push
dec
cmp
popl
sub
xor
sub
mov
inc
loope
jns
dec
mov
out
cmp
xlat
int
lcall
in
adc
jmp
mov
inc
mov
int
push
add
and
mov
jle
push
in
sbb
push
scas
mov
mov
out
rclb
mov
movsl
int3
pusha
fidivl
popf
sbb
fstpt
cvtps2pi
mov
pushl
popf
divb
jmp
decl
xchg
cli
sahf
mov
icebp
testb
aam
mov
push
push
or
out
int3
sbb
outsl
or
cmpsl
dec
sbb
dec
or
stos
rclb
ss
mov
push
es
scas
mov
enter
loopne
jo
andb
jne
out
sub
jbe
test
mov
and
xchg
das
pop
cwtl
gs
jle
xchg
sub
add
mov
cmp
xchg
lret
rcr
aas
xor
in
jge
imul
or
mov
bound
pop
xor
fildll
push
mov
shll
adc
das
cmp
js
mov
xor
mov
push
jns
aam
cs
xor
das
ja
lds
out
adc
mov
xchg
cmp
rol
pop
xor
sbb
jns
mov
xchg
sbb
jp
dec
movsl
pop
and
inc
jp
in
mov
sub
ja
or
gs
cmpsl
adc
out
sahf
icebp
xchg
icebp
dec
stc
notl
dec
out
mov
andb
sbbl
insl
add
push
lret
into
insb
ss
pop
fldcw
mov
and
repnz
enter
dec
enter
xchg
jnp
stos
test
in
das
mov
push
insl
rclb
push
sub
loop
xchg
fdiv
adc
aam
loopne
sbb
dec
jg
pushf
mov
testl
orb
push
push
icebp
cli
cld
add
out
push
xor
fistpll
cld
pop
mov
rorb
std
call
mov
cmc
hlt
pusha
xor
or
or
mov
cmc
lcall
les
xlat
cmp
cwtl
add
xlat
push
jb
pop
loope
add
adc
mov
lods
jno
roll
into
inc
sbb
add
inc
sub
sub
daa
fstps
imul
cmc
pop
lret
mov
or
out
fsubrs
mov
pop
xchg
jl
xchg
jnp
mov
adc
sahf
mov
cs
and
mov
mov
cmc
jge
lea
mov
scas
adc
fidivs
ret
push
bnd
insb
sbbb
jae
push
or
adc
scas
push
in
pop
out
sbb
adc
mov
xor
and
fs
sti
loopne
lret
mov
push
leave
test
ficoml
xor
fsubs
imulb
push
sti
dec
scas
dec
dec
xor
lahf
lds
push
mov
into
cmpsl
das
or
test
daa
push
mov
xor
shrb
mov
lds
repz
scas
and
and
pusha
lods
repnz
fcom
pop
out
mov
inc
loope
ja
xlat
fistps
scas
cmp
loope
jbe
and
mov
or
dec
dec
mov
push
mov
addl
out
shll
cmpsl
clc
adc
leave
push
pop
mov
xor
jns
imul
add
hlt
jge
shrl
xor
leavew
fists
sbb
leave
dec
xor
push
or
jmp
mov
add
and
outsl
pushf
int
sbb
adc
rclb
pop
or
jmp
or
hlt
push
je
cmpsb
rol
add
orl
addb
aad
add
pop
jne
js
fwait
push
sbb
mov
shlb
sub
dec
and
fldl
rolb
dec
out
push
arpl
and
outsl
shlb
mov
dec
mov
mov
ret
les
xchg
cmpb
or
cwtl
push
outsl
inc
lock
lods
mov
sub
roll
in
cmp
mov
cli
ja
pop
mov
ss
mov
lcall
jns
leave
cmp
xor
fadd
pop
vmovhps
and
ljmp
lcall
pop
std
adc
repnz
mov
popa
nop
out
inc
add
adc
xor
popf
adc
pushw
addr16
xchg
jmp
sbbb
adc
insb
inc
add
fs
xchg
pusha
lock
cwtl
jo
and
les
cmp
pop
push
out
jecxz
add
loope
pop
mov
repnz
mov
pushf
data16
xlat
mov
dec
shl
cltd
push
aas
lcall
cmpsl
xor
imul
movsl
into
roll
push
adc
push
mov
dec
sti
jno
push
and
xor
out
inc
enter
push
pop
stc
sbb
mov
push
out
mov
xchg
jbe
adcb
mov
les
sbb
cli
in
push
jg
dec
rcl
cwtl
jns
addl
cmp
jg
sbb
test
jne
ret
das
cmp
mov
xchg
push
and
repz
adc
lea
ja
ss
test
repnz
inc
jns
push
mov
inc
push
aaa
sahf
xchg
sub
arpl
cmp
xlat
sub
mov
or
icebp
fists
cmp
ja
jo
stos
mov
mulb
push
rclb
inc
or
sub
rclb
insl
xor
push
and
or
or
cs
repz
rorb
xchg
xchg
rolb
popa
and
jp
xchg
jns
insl
jbe
mov
xor
pop
fld
or
neg
scas
lahf
xor
repz
loopne
xor
sti
xchg
int3
bound
insb
cwtl
sub
pop
push
xlat
or
enter
psllq
decb
dec
jmp
test
mov
jmp
jno
lds
dec
arpl
orb
push
les
push
push
stos
arpl
test
xor
out
inc
fs
pop
loope
mov
mov
daa
jns
push
dec
das
rolb
ds
mov
lea
adc
mov
cmpb
pop
dec
xor
imul
in
movsl
cmp
push
cmp
ror
setle
aaa
test
lds
add
xor
mov
sbb
dec
dec
sub
sahf
sti
sbb
pop
fldln2
loop
pop
mov
add
jle
int
movsl
inc
inc
mov
imul
test
lahf
push
cmpsb
arpl
dec
mov
jp
and
lahf
lock
mov
in
mov
pop
pop
movsl
jno
mov
cmp
pop
out
movsb
jp
clc
xor
jno
inc
xchg
xor
jg
dec
call
dec
sub
jecxz
cmp
aad
int3
test
int3
xor
popa
pop
mov
ja
cmp
xor
and
repnz
lea
inc
or
pop
jge
sub
sti
lea
pop
xlat
ret
cmp
int3
loop
je
fisttpl
adc
lcall
xor
out
pop
jmp
adc
xor
mov
negb
dec
fs
bound
mov
cmpsb
fadds
cmp
out
push
popf
cmp
mov
mov
sbb
test
dec
sub
ror
arpl
outsb
sahf
adcl
insb
mov
cwtl
mov
adc
cli
pusha
js
imul
or
pushf
inc
sub
mov
popf
fs
push
dec
sar
imul
stos
lea
fcoml
test
adc
mov
mov
std
test
mov
ret
icebp
cmpl
icebp
test
test
fldt
hlt
rorb
mov
es
inc
call
sub
sahf
and
push
xlat
lods
jmp
or
sbb
add
adc
mov
xor
dec
std
fwait
lea
adc
rorb
je
inc
cmp
push
add
sub
push
fsub
dec
in
sbb
xchg
cli
daa
dec
jmp
jl
imul
pop
fs
hlt
sbb
adc
cmp
js
push
mov
and
ret
push
out
adc
faddp
pop
add
mov
mov
cmp
inc
cmp
push
mov
imul
ds
inc
int
repz
mov
xchg
lret
stos
and
inc
inc
jmp
add
scas
inc
jo
dec
adcb
call
jg
into
test
leave
adc
and
jp
lods
es
sbb
loop
ds
push
mov
sbb
mov
xadd
mov
dec
movsb
test
insb
je
push
and
xor
mov
ret
sbbl
mov
and
add
mov
mov
mov
in
test
stc
shlb
xor
push
lods
aaa
stos
icebp
and
shrl
jecxz
imulb
mov
addr16
or
loope
sub
std
mov
movsb
xor
inc
cmp
cli
xor
stc
insb
push
es
pop
jnp
incl
stos
mov
inc
dec
sbb
jb
sbb
stos
jp
mov
mov
add
adc
in
sahf
and
out
insb
imul
xchg
mov
push
cmp
lock
pop
xchg
push
testb
scas
je
or
aaa
call
shll
xchg
fildll
je
sbb
leave
loop
shl
jmp
lret
pop
sahf
arpl
icebp
sub
mov
and
jge
aad
frstor
dec
pop
add
insl
push
xchg
lock
icebp
sahf
cmp
fmul
mov
nop
sbb
aad
sbb
add
sub
xor
mov
sbb
inc
fs
repnz
aad
push
mov
andl
pop
cmp
and
call
add
dec
aaa
xchg
mov
fildl
push
mov
xchg
adc
jae
cltd
in
daa
aas
lret
leave
sbb
test
lods
push
das
jo
mov
loope
repz
mov
outsb
ds
hlt
sahf
incb
dec
inc
pop
mov
inc
pushf
lds
adc
jae
xchg
sbb
and
push
call
out
pop
pushf
adc
mov
out
and
sarb
sbb
sub
jnp
inc
fdivrl
clc
clc
xchg
das
mov
rol
shlb
cltd
lods
and
lea
out
shrl
repnz
in
cmpsl
lret
xchg
push
lss
jmp
mov
insb
xchg
mov
test
xor
outsb
dec
hlt
lret
xchg
xchg
mov
push
aam
jne
cmpsb
adc
loope
adc
pop
popl
sarb
xor
into
or
les
and
cmp
je
lcall
jp
loopne
shll
and
pop
xchg
test
cmpsl
test
xchg
lret
arpl
mov
ret
mov
ja
subb
dec
cs
pop
cwtl
dec
add
sub
in
cmp
scas
or
sub
test
dec
jmp
pop
pop
inc
call
jmp
sbb
and
stos
std
add
out
xor
pusha
jle
in
in
aas
add
cmp
sbb
sub
shll
push
or
test
jmp
pop
lock
inc
inc
js
fcoms
cmp
jne
sbb
jno
pop
loopne
or
jnp
lods
pushf
sub
mov
pop
sar
add
jns
repnz
pop
nop
push
js
inc
repz
cmp
and
xchg
push
mov
fidivs
nop
jl
popl
arpl
fucomi
mov
movsb
adcb
cmp
push
sub
addl
adc
aam
aas
fsubl
push
mov
popl
scas
scas
loope
js
cmp
je
das
lahf
nop
jp
mov
adc
imul
add
push
fcompl
xor
xchg
jmp
jb
dec
pop
inc
add
mov
sbb
movsl
mov
or
lret
jne
xchg
jbe
pop
mov
stos
test
sub
xchg
or
jecxz
call
int
dec
sub
arpl
inc
test
imul
out
pop
fwait
arpl
mov
lds
loope
mov
test
cmp
and
add
and
sbb
lcall
decb
jle
push
push
loope
stos
push
sub
or
scas
aad
call
adc
sbb
hlt
fadds
mov
std
dec
sub
xor
dec
fxch
cli
push
bnd
or
push
mov
cwtl
xor
mov
jp
cmp
xchg
pop
roll
pop
scas
dec
and
addr16
jbe
xchg
pop
fcomps
cmc
dec
popa
cmp
jo
ja
add
in
sbb
mov
idivl
mov
sub
sub
cmpsl
inc
and
out
inc
and
push
lret
mov
mov
sub
push
cmp
aam
mov
inc
sahf
push
push
inc
jb
mov
push
pop
push
push
dec
ljmp
mov
lds
scas
adc
sub
inc
cwtl
fidivs
ucomiss
push
outsb
movsl
mov
mov
mov
clc
dec
ljmp
jp
xchg
in
loop
sub
daa
sbb
cwtl
add
xchg
std
or
mov
push
leave
stos
and
mov
adc
filds
aad
insb
stc
xor
jle
pop
mov
pushf
mov
mov
cmc
cmpsl
pop
ret
xlat
cs
outsb
repnz
fstps
xor
stos
xchg
arpl
add
scas
mov
pop
cmpsb
or
je
out
xchg
pop
jp
adc
and
xor
outsb
sub
xor
or
jl
and
bnd
and
push
cs
and
xchg
filds
dec
adc
lods
jl
insb
leave
test
pop
icebp
aaa
mov
mov
lock
mov
js
bnd
adc
icebp
out
addr16
bound
lret
lcall
push
lret
push
push
popa
pop
cwtl
fimull
ds
rcll
dec
mov
and
dec
fcmovne
jno
lods
loope
lds
add
lods
lods
daa
push
xchg
dec
inc
mov
shlb
sbb
decl
insl
jb
insb
loopne
stos
pop
mov
aas
and
pop
imul
popa
add
adc
sub
cmp
test
lret
int
jae
dec
mov
fildll
ja
add
jle
push
or
jo
lds
clc
lret
aas
mov
out
mov
xchg
daa
in
or
cltd
scas
jo
dec
inc
xchg
hlt
popa
aam
xor
mov
js
xor
cmp
and
inc
xor
inc
mov
cmpsb
jbe
lahf
xchg
sahf
adc
inc
and
hlt
aam
decb
pop
xchg
lret
mov
mov
fcmovnu
jbe
in
dec
enter
or
int3
inc
out
mov
shr
sahf
repnz
jne
and
xchg
in
inc
lods
ret
jno
cmp
lahf
mov
fdivr
dec
lock
mov
and
sub
mov
icebp
sarb
push
inc
cmpb
pusha
xor
clc
imul
fcompl
mov
out
xchg
in
mov
jg
sti
mov
dec
movsb
adc
xor
mov
enter
int3
je
push
dec
or
cmpsl
and
lret
xchg
dec
pop
push
addr16
add
loope
cmpsb
int3
std
cmp
dec
push
inc
mov
dec
lea
mov
pop
cltd
loopne
andps
in
pop
imul
and
cmp
inc
cmc
ret
push
cmp
jmp
push
rclb
bound
dec
es
popf
out
ds
in
repnz
js
lahf
shlb
repz
pop
jb
dec
outsb
imul
out
pop
lods
test
ljmp
ds
mov
lock
mov
jb
popf
inc
mov
dec
sbb
pop
icebp
cmc
fdivr
int3
pop
aam
jge
add
sahf
or
xchg
test
clc
pushf
jle
jmp
fsubp
mov
and
lahf
dec
sar
sbb
sahf
std
push
fidivs
daa
add
fildll
adc
out
gs
add
std
cs
xor
jae
inc
jnp
cmp
inc
aam
pop
arpl
mov
jne
or
sbb
pushf
xor
mov
xchg
clc
pop
sbb
push
cli
cmp
jecxz
mov
iret
dec
hlt
mov
and
inc
xchg
push
sub
nop
sbb
call
jne
aas
es
inc
call
lods
mov
cwtl
mov
pop
jno
lcall
nop
movsb
in
push
adc
roll
into
sub
push
xchg
cmp
lea
xor
mov
pop
sub
mov
sbb
lea
dec
orb
mov
repnz
mov
xchg
cmpsl
aam
iret
aas
repz
cmp
dec
and
mov
popl
icebp
or
pop
rcl
lds
movsl
add
mov
fwait
ret
sbb
mov
pushf
xchg
pop
and
andb
lret
testb
jle
jp
pop
ss
xlat
fdivrl
push
dec
adc
push
pop
loopne
cli
mov
cmpsb
xor
pop
jge
cmp
fisubs
mov
lret
add
jo
push
fs
cltd
dec
sbb
mov
push
mov
sbb
dec
out
or
mov
pop
cmp
stos
push
sbb
cli
movsl
inc
out
xor
rolb
jg
inc
imul
mov
fwait
mov
push
sti
std
mov
mov
and
mov
iret
adc
subb
pop
arpl
pop
outsl
out
jl
jae
es
add
mov
pop
rcll
mov
mov
adc
std
and
xor
push
mov
js
imul
cli
cmp
mov
jecxz
cmp
adcb
sbb
dec
data16
xor
divl
movsl
outsb
mov
stc
iret
lods
push
das
cld
or
repz
adc
flds
pop
cmc
test
jnp
mov
loope
xor
stos
xlat
out
idivb
adcb
pop
or
int3
sbb
jg
add
aas
inc
and
nop
scas
xor
popf
cmpsl
in
mov
add
sub
stos
pop
clc
sahf
cmp
xchg
jmp
icebp
dec
mov
inc
adc
push
aaa
xorl
loope
jle
or
cld
inc
push
cs
or
shlb
dec
dec
fsubrs
test
jnp
sub
rolb
mov
lea
adc
mov
jns
add
movsl
andb
fld
cmp
cmp
repnz
add
or
xchg
fldl
fwait
pop
adc
cmp
hlt
fmuls
insl
ss
add
dec
pop
clc
sbb
outsl
adc
ja
ror
popa
es
add
xchg
mov
xchg
sahf
insb
ret
jge
test
ss
mov
movsb
pop
movsb
inc
push
repz
shlb
push
add
leave
orb
cmpl
add
addr16
add
fiaddl
je
xchg
cwtl
sub
rclb
pop
sub
push
rcll
cmp
std
cmpsb
shr
mov
in
fadds
and
mov
jle
arpl
in
inc
negl
xor
push
imul
jno
jmp
pop
cvttps2pi
xchg
jae
into
shlb
cmp
ljmp
gs
imul
stc
cs
sub
cmpsb
fwait
es
fwait
outsl
sub
jp
jge
jmp
mov
adc
test
aaa
jo
pop
dec
outsb
pushf
lcall
in
or
cli
sub
xchg
test
ljmp
pop
subl
or
xchg
int3
lods
add
mov
xchg
and
repz
sbb
dec
clc
push
int
mov
rcrl
xor
insl
xchg
and
adc
jne
aam
inc
dec
cmpsl
lds
out
jmp
les
bound
aad
push
arpl
int3
movsb
popf
fdiv
mov
fsubl
icebp
cmp
rcl
fbstp
pop
test
jno
lods
aaa
xor
jo
adc
dec
dec
inc
push
cmp
cmp
pushf
jmp
leave
inc
scas
jnp
push
aas
xchg
jne
dec
xchg
push
rclb
and
les
mov
sar
add
loopne
jno
sub
dec
movsl
subb
mov
mov
subl
mov
stc
jae
lahf
fldenv
mov
lahf
repnz
jnp
test
xchg
icebp
mov
lods
mov
pop
adc
data16
mov
cmpsl
lea
mul
adc
mov
jo
fidivl
dec
mov
jecxz
dec
aaa
push
jno
loopne
int
dec
test
mov
jp
sub
and
lock
call
insb
pop
push
les
ja
imul
sahf
or
add
les
inc
push
mov
lret
in
jae
pushf
mov
push
inc
rolb
xor
jl
sbb
aad
movsb
in
xor
cmp
adc
jg
add
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
jmp
dec
xor
test
mov
mov
bound
bound
adc
xchg
mov
adc
mov
jmp
dec
sub
pusha
cmp
decl
nop
sahf
jbe
pop
mov
ret
mov
xor
outsb
lods
sbb
lcall
fwait
inc
add
and
insb
cmp
xorb
mov
pushf
jnp
mov
ret
sbb
movl
into
mov
repnz
femms
inc
pop
xor
shll
mov
adc
mov
adc
rolb
or
cmpsb
dec
mov
jno
xchg
xor
jge
fs
adc
outsl
das
push
in
xchg
cmp
rorl
ret
jmp
ja
sahf
arpl
mov
std
mov
mov
imul
icebp
pop
mov
loop
divl
out
add
js
mov
mov
inc
clc
sbb
add
call
adc
cwtl
lods
test
repnz
cmp
mov
xor
negb
jb
fucomip
dec
pop
cmp
cs
mov
xchg
and
pusha
xlat
or
enter
jp
aam
dec
mov
pop
xchg
shl
ret
cli
adc
jg
or
mov
cmp
fdivl
inc
cwtl
insb
and
mov
insb
mov
iret
pop
movsb
pop
outsb
push
mov
pop
mov
cld
popl
into
loop
dec
ret
fidivrs
or
cwtl
sub
inc
ss
pusha
mov
xchg
scas
and
addr16
push
pop
cmp
xchg
scas
jp
jp
adc
mov
inc
fs
test
fistps
ja
movsb
out
mov
pop
stc
icebp
into
adc
in
and
pop
shrb
movsb
pop
js
fisubs
enter
sti
sub
fcoms
push
mov
ret
cmp
testl
mov
in
mov
dec
decl
add
sbb
dec
add
mov
xchg
test
adc
xchg
insb
test
xchg
push
pop
bound
dec
nop
and
dec
cltd
movsb
mov
movsb
out
ljmp
out
fs
inc
xchg
in
pushf
adc
sbb
inc
xchg
sub
inc
int3
or
jmp
in
dec
cwtl
pop
lahf
inc
mov
sbb
cmp
xchg
adc
dec
mov
or
and
mov
out
xor
imul
xchg
in
xchg
xor
push
jle
jle
sahf
mov
xchg
mov
stc
test
mov
outsb
inc
push
iret
fcoml
inc
int
sar
dec
dec
mov
add
mov
test
leave
cmpsl
lods
jle
push
test
data16
pusha
stc
mov
pop
adc
ud2
push
add
adc
add
in
dec
mov
sub
sub
fiadds
or
test
adc
js
jmp
pop
xchg
rorl
and
movsb
outsb
imul
jno
daa
mov
push
mov
mov
js
fadd
loope
xor
stos
sbb
cmpsl
ss
lret
nop
ljmp
mov
pushf
and
mov
push
ljmp
push
sarb
xchg
sbb
and
mov
add
or
inc
mov
pushf
mov
pop
jno
xchg
popa
in
jno
mov
mov
pcmpeqb
mov
out
sar
cmp
in
fcompl
aas
lahf
xlat
pop
add
mov
aaa
outsb
or
mov
fwait
add
sbb
or
xchg
aas
ret
pminub
mov
pop
hlt
mov
jo
cmp
add
imul
jbe
scas
js
mov
push
pop
adc
or
stos
mov
mov
mov
xchg
test
jo
ret
loope
fdivs
mov
subb
pop
cwtl
jecxz
xchg
fisttps
fsubrs
insb
push
outsl
lret
cltd
xchg
mov
push
sti
into
je
mov
lahf
andl
adc
dec
sbb
scas
out
pop
dec
pop
js
mov
jo
mov
ret
pop
cwtl
enter
add
sbbb
xlat
jbe
or
les
loop
pop
movsb
pop
push
and
pop
in
sub
enter
imul
mov
pop
pop
in
dec
rcrl
xor
inc
mov
mov
loopne
pop
outsl
cmp
push
hlt
jp
xchg
stos
divb
xor
lods
adc
add
shrl
sti
rol
xchg
cmpsb
push
in
sbb
rorb
dec
mov
and
push
inc
xchg
mov
pop
pop
cmc
cmpsl
outsl
fnsave
and
lret
fcoms
adc
movsb
adc
data16
sub
dec
stc
xchg
adc
ret
push
xor
inc
dec
mov
je
xchg
pop
ret
rcrl
jns
sbb
es
sbb
jle
fs
mov
jge
das
iret
sub
dec
cmp
subl
gs
imul
inc
xchg
inc
mov
mov
pushf
jbe
mov
sbb
inc
inc
je
inc
cmp
lea
adc
or
cmpsb
jns
mov
push
clc
cmp
cltd
xchg
adc
sbb
scas
insl
int3
pop
jne
mov
or
shrb
ret
push
stos
arpl
fdivrp
imul
xchg
jbe
and
lock
jl
mov
or
pushf
movsl
test
mov
add
cmp
int
xchg
dec
rolb
popa
cmp
sbb
out
xor
sub
push
push
cmp
pushl
in
inc
jge
inc
xor
pop
imulb
xchg
push
aaa
test
sahf
jne
jg
gs
xor
or
jae
xchg
sub
xlat
mov
ja
dec
cmp
in
xchg
repz
add
test
shll
jge
mov
insb
push
js
out
lods
xchg
ja
mov
scas
cmp
int3
sbbl
movsb
mov
inc
jo
dec
inc
test
mov
pop
ficoms
mov
bound
test
sub
xchg
xchg
lods
push
jp
jmp
cwtl
cmc
jns
mov
jl
sti
mov
push
divl
inc
shrl
cmpsb
lret
push
inc
or
push
int3
lret
hlt
or
repnz
jge,pt
mov
out
leave
imul
fiadds
cmp
jp
jmp
out
xchg
in
inc
test
sbb
les
mov
xor
sbb
mov
jb
mov
dec
sbb
or
and
or
xchg
call
sub
pop
stos
movsb
aas
inc
aaa
xchg
jnp
cmp
rcl
mov
popa
lds
push
data16
sub
fiadds
jg
scas
inc
xchg
pop
shll
hlt
shlb
in
ljmp
pop
shrl
lret
orb
sub
ret
test
stos
incb
fildl
xchg
push
sti
shrb
mov
subl
cmp
movsb
enter
sub
xchg
lahf
clc
mov
fwait
movzbl
pop
pop
fcoms
pop
cmp
dec
imulb
cmp
sub
jne
js
or
js
cld
popa
pusha
cmp
push
cmp
lahf
pop
mov
jmp
dec
mov
lcall
xor
and
aam
pop
dec
int
js
add
mov
repnz
rcll
ss
jns
cmp
mov
push
pushf
cmpsb
pop
pop
or
jb
cwtl
xchg
sbb
aad
test
test
xchg
pushf
mov
mov
clc
out
cmc
push
icebp
jnp
cli
rolb
nop
movsb
fstps
or
jmp
std
popf
mov
and
mov
dec
dec
jb
pop
xchg
pusha
arpl
jo
xor
or
push
dec
andb
adc
test
out
inc
xor
adc
mov
xor
jecxz
pop
andb
pmuludq
repnz
fs
sub
mov
mov
dec
fldt
push
outsb
sbb
xchg
xchg
inc
int3
in
mov
xchg
mov
out
or
or
push
das
jnp
or
lock
inc
shrl
inc
fcmovnbe
iret
pusha
sahf
fwait
mov
mov
lock
lcall
and
imul
mov
stc
push
push
cmpsw
and
pop
outsb
enter
fdivrs
scas
push
mov
stos
xchg
cmpsl
in
inc
sarb
mov
popa
sar
sbb
dec
push
js
dec
pusha
or
push
mov
ss
jb
enter
adc
lea
xor
lahf
jge
add
xlat
or
out
inc
sub
mov
fwait
loopne
dec
out
int3
outsl
push
andb
push
mov
mov
call
mov
mov
xchg
jne
adc
sbb
rcl
adc
lret
pop
inc
mov
pop
push
cmp
pop
dec
addr16
aas
xor
shll
test
xchg
jge
imul
sub
gs
push
shll
sbb
jns
outsl
sbb
xor
mov
mov
cmp
addr16
icebp
daa
mov
out
bound
jg
or
jg
addr16
and
cmp
mov
mov
es
lock
fwait
xchg
pop
pop
xchg
dec
test
sbbl
mov
mov
insb
clc
call
xchg
pushf
mov
shl
lods
sub
sbb
loope
pop
dec
jo
sub
imull
push
mov
mov
pop
pop
mov
pop
cmp
pop
out
movsb
out
mov
gs
hlt
pop
xlat
sbb
xchg
jae
xor
sbbb
out
orb
or
insb
aad
or
mov
cli
adc
outsb
fdivrl
pusha
push
fnstenv
in
aas
adc
dec
in
sti
sbb
icebp
stos
jg
and
adcl
nop
scas
cmp
shl
pusha
sti
lods
int3
in
cmpsb
les
ds
jno
add
adc
ficoms
dec
jecxz
inc
jae
repnz
jne
lret
jno
sahf
sbb
imul
jns
cld
xor
scas
lea
cmp
ds
push
dec
xchg
roll
js
cmp
es
sub
jge
or
cmp
add
ljmp
leave
pop
jp
pushf
push
bound
jg
cld
test
or
lahf
xchg
pop
xor
adc
std
push
sub
sahf
sub
mov
dec
sbb
sti
fnstsw
js
popf
mov
mov
inc
or
jp
pop
inc
mov
jp
inc
inc
inc
sub
mov
icebp
hlt
pop
dec
out
sbb
cmc
scas
lea
je
xchg
dec
in
jl
cmp
ss
push
stc
push
jo
cmc
cli
cmp
pusha
push
test
rcr
xchg
aaa
fsub
stc
mov
xor
sbb
inc
sbb
xor
daa
scas
in
pop
jmp
ret
inc
xor
mov
push
repnz
das
pop
push
outsl
jno
out
jno
lock
or
ja
or
mov
hlt
ljmp
repnz
inc
push
dec
je
aad
int3
and
fcoml
cmp
cmp
std
push
andl
lods
cld
add
sbb
pop
mov
mov
and
cmp
lock
adc
in
dec
jp
int
cmp
mov
int3
mov
sbb
mov
or
rcrl
push
mov
cmp
sbb
xor
jae
clc
or
cmp
adc
out
call
and
repnz
imul
call
mov
adc
ror
aad
mov
out
lea
xchg
js
mov
pop
nop
out
sahf
lea
add
jp
inc
cli
movsb
jecxz
dec
pop
mov
and
and
adc
in
fiadds
inc
nop
pusha
pop
or
out
cmpsl
inc
ljmp
jmp
and
xchg
pop
pop
or
ja
xor
aas
cld
sti
adc
popa
pop
stc
cwtl
inc
and
jno
dec
push
stos
jnp
push
mov
push
jmp
lahf
jns
mov
fsub
imull
mov
jbe
xchg
jmp
xchg
fwait
test
jg
xor
cmp
lcall
add
mov
scas
mov
sbb
mov
jnp
je
das
hlt
daa
int3
out
nop
sbb
aaa
fiadds
test
cltd
push
shr
add
rcrb
adcl
sub
rcrl
and
repnz
mov
mov
adc
ret
sub
sub
fs
sar
jmp
outsb
mov
int
sub
ss
rorl
push
movsl
mov
insb
sub
in
push
inc
icebp
stos
jl
scas
jle
mov
rorl
repnz
push
daa
shlb
xor
outsl
jmp
fwait
xchg
stos
add
jae
jle
stos
xchg
inc
xchg
dec
sbb
cli
lcall
and
cmp
pop
push
add
cmp
aam
loope
push
mov
iret
shl
add
cmc
jmp
push
sbb
popf
popf
push
fimull
inc
testl
aas
test
icebp
fldt
pop
xor
addb
out
add
aad
mov
and
les
fnstsw
stc
lea
push
lcall
stos
inc
out
shr
inc
xor
cmpsb
adc
sbb
xchg
scas
in
mov
push
pop
cmpsl
and
rolb
jp
pop
mov
push
push
sarb
cmpsl
push
lods
lods
lcall
pop
inc
mov
je
std
test
pusha
adc
fimull
loope
mov
sub
pop
pushf
jmp
notl
xor
lock
je
add
mov
dec
and
xor
cmp
adc
jecxz
into
or
sub
mov
pop
jno
sbb
pop
rcr
ljmp
maxps
in
pop
add
dec
ret
cmp
sbb
push
fadds
nop
adc
shll
xchg
out
movb
jno
add
addl
out
adc
jge
enter
ds
fldl
aas
loop
mov
repz
filds
aad
imul
scas
out
test
add
pop
icebp
xadd
jecxz
lods
mov
xchg
inc
mov
add
pop
or
cmp
jmp
dec
or
push
loop
mov
pushf
and
push
cli
add
dec
pusha
sub
lahf
in
fsubr
iret
lea
lret
mov
sbb
adc
daa
cmp
pop
mov
lret
add
or
mov
push
mov
dec
sub
sub
cmp
ja
push
je
pushf
mov
sbb
mov
mov
sub
adc
pop
mov
inc
or
popa
cmp
out
push
cmp
test
dec
cmp
outsb
mov
lds
bound
xor
jecxz
jbe
scas
and
scas
mov
cmp
in
addr16
outsb
mov
mov
sub
add
mov
ja
jb
mov
xlat
nop
add
mov
jbe
test
inc
mov
int
lds
popf
mov
push
dec
push
mov
bound
fs
les
pop
mov
xor
sahf
cltd
xorl
lea
mov
push
xor
inc
jnp
sub
cmp
pop
pop
mov
dec
sbbb
gs
int3
push
xchg
inc
gs
push
mov
pop
cli
std
shll
clc
sarl
mov
mov
xchg
in
movsl
aas
adc
and
pusha
clc
addr16
or
mov
xor
ror
sub
adc
xchg
xor
adc
sub
insl
cmp
scas
cmp
push
pop
insb
mov
jmp
gs
jp
inc
subl
inc
cmp
add
lahf
gs
jae
mov
idivb
dec
pusha
cltd
xor
add
orb
add
jle
and
jg
lret
or
hlt
orb
adc
cmp
loopne
lcall
sub
stos
daa
mov
int
cmc
lcall
enter
mov
pop
adcl
rcrl
data16
ss
cmc
jmp
cmpsl
lahf
inc
test
lahf
xlat
enter
fmulp
mov
lcall
sub
mov
push
inc
inc
pop
imul
test
xchg
es
fs
mov
sub
xorps
test
insl
xchg
daa
xchg
xlat
push
loope
leave
dec
es
subl
push
in
inc
or
xchg
aaa
adc
test
shlb
mov
lcall
test
cmp
lock
bound
jp
imul
scas
and
mov
mov
adc
push
leave
add
mov
loop
or
mov
loopne
fnsave
pushf
jge
je
jl
lds
push
imul
mov
xlat
mov
push
cmp
push
jge
arpl
cwtl
jmp
xor
aas
outsl
stos
adc
fisttpl
push
dec
fbld
gs
gs
dec
mov
inc
jmp
arpl
addl
xchg
loopne
mov
gs
push
mov
mov
rolb
sti
xchg
loopne
mov
scas
fdiv
fisubs
loope
addb
cmovge
xor
data16
pop
imul
add
fbld
inc
cmc
aas
lds
in
sbb
mov
repz
lds
out
stc
mov
sub
mov
xchg
cmp
mov
sub
iret
xor
js
popf
xor
lods
fnsave
jne
xchg
and
popf
sub
ljmp
cmpb
mov
mov
cwtl
cmpsl
out
push
mov
push
sbb
gs
cmp
lret
push
fmull
lcall
or
inc
popa
inc
push
adc
pop
addr16
pop
mov
pop
hlt
lret
pop
xchg
inc
jb
sbb
push
sbb
test
jl
rol
fisttps
mov
xlat
lret
je
mov
push
push
xor
adc
in
mov
js
insl
je
decl
lods
movsb
push
mov
inc
push
aam
fisttpll
push
xlat
jmp
jnp
sub
add
xor
nop
rcl
add
popa
inc
ret
lock
lock
out
sbb
lcall
sub
sarb
loopne
inc
mov
pop
stos
stc
out
in
pop
scas
xor
adc
jg
lea
scas
xchg
popf
jbe
cmpsb
rcrl
fstpl
mov
insl
aas
lea
insl
push
lea
push
scas
xchg
es
mov
fnsave
push
cltd
pop
aam
clc
jecxz
je
pop
add
add
mov
or
xchg
add
addr16
out
ret
and
jl
push
dec
cmpsb
ret
pop
jg
dec
nop
sahf
lret
bound
mov
ja
iret
pop
pop
mov
adc
scas
pop
push
mov
xorb
pushf
mov
mov
jl
add
int3
push
inc
sahf
mov
popf
addr16
adc
push
xchg
xchg
cld
stos
out
mov
in
pushl
pushf
daa
stos
sbb
and
mov
inc
call
lcall
pop
jae
faddl
jmp
leave
jge
sbb
subb
cmc
dec
std
pop
inc
je
inc
xchg
mov
add
fsubs
jbe
mov
mov
xchg
xor
lea
js
jne
cld
xor
jmp
aam
dec
cmpsb
mov
push
inc
dec
orl
popa
mov
cmp
ja
xor
inc
add
jmp
mov
or
push
add
sub
inc
dec
push
pop
adc
int
test
or
push
cld
fs
ds
movsb
fsubrs
mov
mov
cmp
fdivrs
fldenv
jp
js
push
pop
rol
imul
enter
fdivs
sbb
mulb
sbb
xor
mov
arpl
nop
pop
outsb
push
cltd
idiv
lret
sub
in
aam
and
sar
test
add
cmp
mov
xor
and
inc
lods
inc
inc
mov
mov
mov
xchg
mov
hlt
push
and
mov
test
aam
test
sti
jp
das
shll
fildll
test
jae
mov
mov
mov
fwait
cwtl
xchg
mov
fsub
inc
adc
inc
ss
xor
sahf
out
sahf
push
mov
faddp
push
ds
sbbl
call
push
mov
mov
test
push
test
sub
jne
lea
insl
xchg
xchg
daa
movsl
cs
imull
mov
ficompl
bound
frstor
loop
mov
sbb
xchg
fistl
jl
xchg
sti
mov
dec
mov
rol
pop
popf
and
popa
xchg
jno
out
xchg
mov
pop
aad
arpl
mov
pushf
pop
adc
add
or
sub
push
and
xchg
dec
push
pop
xchg
push
cld
jle
push
cltd
cli
xor
xchg
addr16
jnp
sub
popf
cs
mov
adc
add
mov
jecxz
sahf
fcoms
enter
and
push
jb
adc
cmp
jno
sbb
jge
cmp
jmp
xlat
lea
xchg
test
dec
xrelease
push
hlt
sub
fs
ja
mov
loop
pop
xchg
loop
cmc
sbb
sbb
ret
jle
scas
xor
ljmp
loop
dec
inc
mov
sbb
enter
pop
xor
in
or
js
pop
or
mov
cmpsl
adc
xor
mov
xchg
fs
cmpsb
inc
inc
xor
xchg
and
jne
inc
sbb
xor
sti
mov
pop
xor
pop
sub
push
xor
cmc
inc
jecxz
ljmp
dec
sbb
mov
mov
and
test
inc
and
out
mov
inc
fiaddl
mov
ret
lret
or
sti
cmp
jmp
mov
dec
mov
mov
mov
jmp
and
add
jnp
cli
jl
je
xor
push
cmc
pop
gs
outsb
aad
scas
mov
fstl
xlat
push
icebp
xor
and
fnstcw
outsl
ljmp
cli
pop
jne
imul
mov
pcmpgtw
cltd
jmp
pusha
push
and
xchg
jg
jmp
and
in
sti
push
repz
jae
dec
daa
in
push
int
xor
mov
xchg
sarb
loop
mov
cmpsl
in
mov
loop
stos
or
das
in
das
and
inc
xor
call
mov
inc
ds
and
dec
xor
repnz
xchg
addr16
loopne
adc
adc
je
jbe
mov
stos
xchg
jns
mov
inc
rcll
cmp
mov
cmp
pusha
mov
inc
mov
xor
and
inc
push
nop
scas
sub
addr16
sbb
nop
rolb
sbb
cwtl
sbb
xor
js
or
jg
inc
push
push
filds
dec
andb
or
cmp
xchg
stos
in
cmpsl
xchg
gs
les
adc
cs
mov
xchg
fucompp
dec
cld
jns
add
jl
add
jb
aam
movsl
mov
arpl
mov
scas
mov
loop
dec
int
nop
lahf
jo
push
xchg
mov
das
push
mov
inc
stc
bound
sub
sub
jge
xor
dec
pop
repz
in
loope
mov
pop
je
cltd
or
dec
pop
cltd
jb
pop
xor
mov
rorl
data16
mov
mov
or
outsb
push
jnp
shll
pop
outsl
and
out
pop
jne
insl
sbb
jp
nop
mov
inc
imul
insl
push
cwtl
mov
icebp
mov
std
sub
loopne
cmp
mov
cmpsb
lret
cmp
lds
bound
jne
inc
adc
push
cvtps2pi
mov
imul
pop
add
stc
in
bound
mov
or
stos
and
inc
pop
rcll
clc
cld
jbe
andb
fistps
jae
xchg
jae
fnstsw
fbstp
push
sub
lods
cmp
push
out
stc
push
fsubrs
clc
fiadds
jbe
les
call
fcompl
jecxz
lcall
xchg
adc
push
adcl
std
mov
pop
adc
mov
test
mov
xchg
mov
inc
xchg
pop
pop
or
xchg
aad
cmpsl
inc
int
jmp
and
or
push
jp
cmp
iret
push
sbb
push
pop
or
mov
insb
mov
cmpsb
push
cmpb
cltd
pop
or
fsubrl
mov
pop
idivl
rcll
pop
addl
fwait
adc
test
fbstp
bound
fldl
ret
cwtl
arpl
mov
test
xchg
aaa
adc
dec
es
mov
adc
dec
scas
imul
fidivs
test
mov
scas
pop
leave
cmp
push
cmpb
int
xchg
sbb
xor
sub
pop
bnd
bound
push
mov
push
stos
daa
movsb
mov
pusha
jns
push
scas
int3
jecxz
pop
adc
sbb
adc
movsl
test
sti
arpl
inc
dec
add
loopne
ss
andl
sbb
mov
mov
and
xor
sar
mov
dec
lea
inc
jge,pn
xor
add
and
in
sti
sti
jmp
mov
adc
sti
push
outsb
imul
in
int3
mov
stc
into
data16
inc
xchg
sub
insl
inc
in
jge
test
cltd
ja
out
sbb
mov
sbb
in
cmc
push
dec
jle
cmp
jb
pop
mov
pop
or
cwtl
push
addr16
popf
mov
lods
and
inc
mov
sbb
lcall
xchg
mov
out
test
dec
daa
dec
sbb
out
shufps
mov
inc
push
scas
mov
inc
or
xlat
mov
pop
or
xor
stos
xor
stos
aad
and
jl
xor
aam
mov
fdivr
inc
jge
inc
mov
clc
sbb
mov
mov
add
pop
into
push
test
push
adc
cmp
mov
movsb
jle
add
add
mov
and
and
mov
adc
out
xor
mov
jmp
dec
int
in
jno
jb
fimuls
inc
lods
jmp
sub
ljmp
sub
iret
mov
addl
stc
sub
pop
jns
pop
aas
andl
xor
cmc
and
insb
mov
jle
and
inc
pop
add
add
pop
lock
js
mov
shll
inc
xchg
int
pop
std
or
adc
sub
mov
ficompl
jp
mov
pop
std
das
cmc
sub
adc
adc
sti
not
ret
pop
mov
imul
gs
xor
pop
fidivrl
mov
push
outsb
xlat
imull
test
and
ljmp
sub
scas
cmc
push
stos
insl
jl
xchg
test
jle
sub
push
mov
pop
and
insb
or
movsb
dec
cmp
mov
aas
push
mov
dec
inc
mov
push
popa
cmp
xlat
add
jl
jmp
or
mov
xor
push
jno
push
sbb
mov
pop
mov
out
add
or
mov
mov
ja
mov
icebp
aad
gs
sbb
inc
and
aaa
xor
cli
dec
sahf
mov
and
mov
mov
adc
sbb
mov
mov
push
arpl
in
push
movsl
push
mov
and
lods
sbbb
clc
inc
jg
stos
sub
in
push
sub
int3
cmpsl
les
std
pop
sbb
inc
sarb
frstor
mov
dec
mov
sub
loope
sbbl
mov
and
test
movsb
push
flds
lock
xchg
push
jmp
hlt
shl
jbe
jecxz
xchg
sbb
sbb
mov
cmpb
movsl
cwtl
cmpsb
jge
fidivl
dec
stc
mov
sbb
mov
dec
add
fimuls
cs
mov
in
mov
jns
lea
cmpl
aas
insb
cltd
ds
loop
push
mov
in
adcb
mov
mov
push
lahf
rcrb
sbb
jmp
scas
imul
shll
pop
test
adc
jl
aaa
sub
repz
mov
adc
xchg
pusha
lods
dec
stos
mov
aad
or
xor
dec
adc
pop
lea
sbb
mov
aaa
sbb
mov
loopne
xor
hlt
fsubl
xchg
cld
mov
loop
pop
xchg
and
mov
push
adc
jno
push
cwtl
pushl
test
xchg
inc
fbld
jmp
call
fucomip
inc
out
sub
data16
les
mov
push
ljmp
mov
cmp
outsb
and
sub
sysenter
jnp
loop
jl
xor
push
loope
dec
loope
inc
outsl
push
xor
jns
fnsave
add
push
push
imul
popf
inc
push
jg
sbb
cld
divl
lods
sbb
int
inc
mov
daa
jns
sbb
pop
xchg
ret
insb
xchg
mov
mov
fisttpll
inc
mov
outsl
inc
xor
xchg
pop
mov
push
out
and
imul
loop
in
aaa
loop
rcrb
mov
jmp
jmp
fisttpl
aad
mov
mulb
mov
jns
lcall
arpl
cmp
cli
adc
mov
int
sub
test
mov
jp
and
push
dec
call
cmp
shll
loop
push
jae
wrmsr
test
enter
mov
repnz
add
mov
add
adc
add
out
nop
mov
pushf
and
pushl
xor
rcl
dec
rorl
inc
movsb
or
int
cs
or
jne
mov
ret
push
outsl
jo
mov
fsts
mov
nop
pop
mov
xchg
mov
jmp
xor
mov
sub
mov
pop
cwtl
subl
es
push
xor
roll
sub
rcrb
fcoms
mov
dec
dec
fsts
lds
cmp
adc
sub
adc
cwtl
jbe
packsswb
push
lds
mov
adc
inc
out
les
xorb
ds
dec
imul
cmp
jmp
lcall
adc
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
pop
or
repz
sti
ja
stos
mov
sahf
push
cmp
add
add
push
jge
outsl
sbb
dec
mull
dec
rcrl
rcrb
out
xchg
xor
repnz
add
in
ss
les
in
fimuls
int3
pop
in
fimull
lret
pusha
xchg
jmp
sti
jmp
insb
rcrb
sbb
addr16
fwait
cld
or
mov
dec
pop
shlb
cmp
add
add
add
sub
adc
cmp
out
pop
xchg
push
sahf
int3
add
popa
add
add
into
ds
lcall
sub
fsubrs
repnz
jnp
loop
jmp
push
popf
fsubrs
jmp
mov
mov
std
bound
cli
jo
ret
push
loopne
jl
xor
mov
push
sub
jmp
addl
mov
add
add
add
pop
sub
sub
addb
int3
add
popa
add
add
jae
dec
jecxz
push
out
jns
nop
hlt
fmulp
stc
xchg
leave
push
enter
mov
dec
mov
stos
xlat
lcall
xchg
and
push
and
cmp
insl
enter
mov
jl
pop
int3
fcoms
lahf
divb
lcall
add
add
add
add
and
aam
aam
ljmp
je
mov
int
add
add
int3
icebp
les
cmp
or
lods
or
sti
push
pop
pusha
jge,pt
iret
dec
inc
mov
pop
les
int3
pop
push
dec
or
or
fwait
mov
jno
xchg
int3
sahf
repnz
push
pushf
or
jge
out
pop
xchg
js
mov
pop
fdivs
test
rcrl
add
lret
dec
jle
sti
cmpsl
mov
dec
mov
ror
add
add
repnz
scas
adcb
pop
pop
xchg
vmfunc
jmp
pop
xchg
add
push
fisttps
in
push
arpl
mov
mov
repz
mov
cmp
dec
out
sub
mov
loopne
or
xchg
xor
jo
insl
and
enter
cli
fbld
add
dec
aas
xchg
rol
and
xchg
add
add
add
add
out
lods
cmp
stc
stc
bound
add
popa
add
add
into
pop
and
negl
imul
push
rol
js
sarb
push
movsb
cwtl
hlt
xchg
test
mov
cmp
push
mov
jmp
insl
lock
mov
jl
daa
mov
aad
jmp
and
pop
je
cli
insl
xchg
sbb
sbb
xchg
mov
dec
add
add
add
add
inc
gs
aaa
push
insl
icebp
jae
into
add
popa
add
add
dec
jb
push
in
jmp
and
fadds
adcl
xor
and
xchg
sbb
xor
mov
aaa
push
sub
inc
xor
call
nop
and
push
mov
into
bound
mov
outsl
mov
dec
pop
xor
xor
fdivrp
iret
mov
add
add
add
add
sub
das
jle
jg
imul
push
lods
or
popa
add
add
mov
xchg
inc
in
call
mov
inc
vmovdqa
les
nop
les
negl
and
dec
sbb
mov
inc
pop
xchg
adc
popf
sbb
rcll
gs
cmpsl
jl
fwait
jmp
int3
ficoms
mov
cmc
xor
repnz
scas
xchg
int
sub
add
add
add
and
mov
mov
mov
loope
add
add
cld
js
or
mov
jge
mov
mov
scas
test
mov
movsl
xchg
call
mov
push
mov
adc
and
xor
adc
adcl
jecxz
cmp
stos
inc
jecxz
popa
lcall
xchg
xor
push
dec
insl
push
stos
xchg
lea
mov
adc
dec
pop
scas
add
add
add
add
or
ret
lods
sub
mov
aaa
aaa
loop
add
add
jg
ja
dec
mov
sbb
and
push
add
mov
inc
add
mov
inc
sarl
sbb
cmp
or
stos
dec
pop
mov
xor
and
pusha
enter
aad
push
test
lcall
orb
cmp
push
add
add
add
add
fld
add
ror
outsl
clc
ror
mov
int3
cwtl
loop
add
add
xchg
inc
pushf
cmp
cmp
push
lea
xor
mov
sub
mov
dec
orl
pop
add
out
aaa
leave
add
dec
push
out
mov
and
scas
jg
or
lret
jecxz
and
push
add
sub
movsb
int
shl
hlt
sbb
xor
add
add
add
popa
pop
lock
out
repz
mov
ret
in
or
add
or
add
cmpps
or
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
insb
jp
jbe
ja
js
jno
inc
inc
push
jno
ja
dec
dec
dec
inc
jno
jae
push
arpl
sbb
cmp
inc
add
sbb
out
or
dec
xchg
dec
scas
dec
ds
js
cmp
dec
inc
dec
jae
inc
dec
xor
dec
pop
pop
pop
push
cmp
dec
xor
dec
cmp
dec
js
cmp
dec
inc
dec
mov
dec
xor
dec
pop
insl
pop
bound
dec
jns
xor
dec
cmp
dec
mov
dec
inc
dec
pop
jge
jb
subb
xchg
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
lea
outsl
xchg
outsb
xchg
jle
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
popf
pop
xchg
outsl
mov
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
lods
pop
mov
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lahf
dec
cmp
dec
inc
dec
pop
mov
outsb
ret
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lods
dec
cmp
dec
inc
dec
pop
int
ret
outsb
sarl
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
fstpl
outsl
loop
jecxz
repz
aas
dec
lea
dec
lahf
dec
cmp
dec
xor
dec
pop
in
pop
loop
repnz
repz
jns
jle
jns
cmp
jg
xor
dec
xor
dec
cmp
lods
dec
cmp
dec
inc
dec
pop
or
outsb
adc
jns
aas
dec
add
lcall
add
sbb
stos
sbb
sbb
jbe
inc
add
inc
add
sbb
ficomps
inc
add
mov
inc
add
inc
add
inc
add
sbb
lret
add
sbb
ficompl
inc
add
inc
add
or
sbbl
or
inc
add
inc
ds
insl
push
inc
imul
in
incb
aas
cli
mov
add
xchg
pushf
clc
mov
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
ljmp
add
add
jbe
mov
pushf
clc
sbb
push
pop
dec
or
add
or
insb
inc
inc
add
add
add
push
add
push
push
add
push
push
add
add
push
add
add
inc
add
dec
cmpsb
dec
lahf
dec
movsb
dec
insl
dec
bound
dec
add
cltd
dec
pushf
dec
fwait
dec
insl
dec
bound
dec
scas
dec
lods
dec
lahf
dec
mov
dec
xor
add
dec
test
dec
fwait
dec
xor
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
jae
jo
jno
jbe
ja
je
jne
mov
mov
lods
jge
jge
jns
mov
insl
enter
jb
test
hlt
test
test
fnstenv
mov
push
or
xlat
out
add
scas
adc
jge
fidivs
leave
hlt
cmpsb
cmp
mov
cmpsb
and
and
cmc
enter
inc
inc
add
jp
jle
inc
add
sbb
or
adc
imul
insb
push
imul
push
jp
dec
push
arpl
dec
dec
data16
imul
inc
push
jb
inc
je
inc
jae
dec
gs
dec
dec
pop
jp
jbe
pop
jo
inc
gs
dec
js
inc
js
dec
inc
inc
inc
push
dec
insb
dec
jbe
pop
jbe
inc
fs
push
inc
add
inc
outsb
imul
push
push
push
jne
insl
push
push
jo
addr16
pop
add
push
pop
inc
inc
outsb
popa
imul
jne
dec
je
bound
jns
bound
dec
ja
dec
inc
inc
push
add
outsl
inc
dec
outsl
pop
inc
jb
jns
inc
pop
dec
add
bound
pop
outsl
push
dec
insb
inc
push
inc
jo
add
add
je
insb
jae
inc
insl
je
push
push
addr16
jo
js
pop
dec
push
dec
jns
js
outsb
pop
jae
push
arpl
push
push
je
addr16
dec
inc
insl
inc
inc
inc
arpl
push
inc
popa
push
dec
imul
push
push
imul
dec
jns
push
inc
jo
imul
fs
inc
push
push
ja
fisttpll
mov
js
jmp
xchg
pop
mov
add
popa
add
add
ljmp
popa
test
add
push
call
and
pop
aas
movsb
inc
out
sti
mov
std
inc
and
data16
jo
mov
and
aas
pop
in
iret
in
ss
pop
sti
lods
mov
push
pop
das
shrl
inc
xorl
sti
sti
std
mov
nop
js
dec
mov
add
add
sub
cli
jl
xlat
push
pop
icebp
cmp
add
popa
add
add
pop
pushf
push
icebp
push
fnstsw
mov
fstps
pusha
push
hlt
sbb
jmp
add
pop
nop
xchg
sbb
aam
fsubl
xor
fidivl
ljmp
cltd
dec
sbb
or
and
and
test
int
sbb
test
sub
xor
xchg
add
add
add
add
stos
pushl
xchg
push
aam
add
popa
add
add
andl
adc
rolb
mov
xor
mov
fistps
into
shl
mov
test
sbb
cmc
lods
imul
pop
inc
popa
sbb
lahf
cmpsl
sbb
jae
into
ficoml
aaa
push
xor
andl
jl
add
dec
test
cwtl
dec
sbb
add
add
add
add
cmp
in
fimuls
jmp
outsl
add
popa
add
add
cwtl
xchg
sub
push
add
scas
mov
rcrb
stos
push
mov
cmp
mov
cmp
daa
dec
mov
inc
enter
shl
jo
mov
mov
pop
inc
or
insb
sbb
lea
hlt
mov
mov
mov
lret
sub
add
add
fnstenv
std
negb
sub
sti
arpl
add
xlat
add
popa
add
add
cmpsl
dec
fisubl
popa
pop
and
and
jle
sub
pop
insl
subb
mov
fs
dec
nop
cltd
push
push
mov
inc
push
mov
mov
push
or
mov
xchg
push
cmp
repnz
je
loopne
add
aad
adc
sbb
and
lods
cli
add
add
add
add
fidivl
xchg
mov
scas
fbstp
inc
mov
rcrl
add
add
aas
jo
cmc
lds
adc
mov
push
sbb
pop
scas
dec
xchg
cmp
xchg
test
imul
adc
clc
mov
inc
mov
hlt
outsl
mov
repnz
dec
loopne
ficoml
dec
out
dec
jmp
jbe
je
mov
rcrb
add
add
dec
in
fwait
scas
fdiv
pop
sub
sahf
cld
xlat
add
popa
add
add
dec
mov
idiv
out
cld
and
lahf
ss
xor
add
aam
stc
movsl
jno
adc
imul
ds
es
shr
pop
xchg
out
dec
ljmp
cs
roll
xchg
or
mov
xor
int
jns
pop
jnp
add
add
add
add
mov
aam
xor
and
pop
fadds
add
add
int
push
push
and
out
mov
lcall
outsb
or
jae
sub
movsl
std
mov
dec
mov
out
aam
push
ja
jno
stc
mov
fsubl
imulb
xchg
push
je
mov
sub
mov
enter
fadd
push
pop
jg
mov
mov
push
jns
add
add
add
add
push
add
mov
out
cmp
add
add
add
mov
jmp
andb
les
cmp
dec
pop
sub
movsb
jge
adc
test
out
sbb
inc
push
int3
push
jecxz
xchg
in
in
xor
ret
inc
jno
aaa
inc
pop
iret
dec
mov
mov
adc
repnz
push
mov
cmpb
add
add
add
add
mov
jmp
fimull
add
add
popa
add
add
pop
sarl
and
xor
inc
stos
mov
cmp
pop
call
mov
adc
repz
add
mov
hlt
enter
mov
mov
jnp
data16
or
leave
push
cmpsl
fmulp
mov
aas
fnsave
ljmp
add
pop
iret
pop
aad
ss
dec
das
cmp
popa
add
add
sbb
lds
fildl
call
cmp
xor
mov
xor
imul
inc
or
popf
ror
cmc
popf
icebp
push
lds
push
inc
adc
and
xlat
mov
addr16
rorb
pop
test
xchg
jbe
adc
xor
test
loopne
add
add
add
add
cld
insl
insb
xor
flds
add
add
xchg
aas
aam
in
outsb
add
jecxz
test
dec
xchg
pop
outsl
mov
or
mov
je
fbld
dec
in
jne
inc
int3
sub
imul
jmp
dec
fs
leave
push
xchg
mov
cmp
sbb
repz
clc
stos
push
repz
jge
cld
mov
test
add
add
lock
jle
repz
fstl
popa
add
add
mov
adc
ds
mov
mov
adc
lahf
mov
xchg
loopne
sti
call
xchg
jecxz
xor
out
scas
into
je
xchg
or
mov
pop
and
adc
fidivrl
cs
mov
or
call
out
js
mov
add
add
add
add
adc
adc
mov
lds
mov
add
add
cmp
daa
loopne
adc
mov
push
mov
and
jo
mov
cmp
rcrl
xchg
mov
sbb
hlt
mov
jl
shlb
stos
mov
mov
test
sbb
jbe
inc
pop
lret
stos
cmp
ds
sub
add
scas
xor
in
fidivrl
add
add
add
cmp
mov
rcrb
rolb
add
popa
add
add
unpcklps
mov
dec
stc
sub
pushw
andb
jns
inc
mov
subb
mov
sahf
push
movsl
hlt
mov
add
or
pop
test
and
push
jle
mov
aas
inc
dec
or
inc
pop
mov
sbb
add
add
add
sqrtps
cmc
das
sbb
xchg
iret
xlat
jl
xor
add
popa
add
add
dec
adc
mov
push
push
loope
sbb
mov
arpl
popa
sarb
adc
mov
jae
dec
ja
cmp
mov
mov
test
daa
or
pop
clc
xchg
xor
cmp
adc
mov
jmp
push
mov
popf
xor
mov
add
dec
jecxz
vdivsd
add
add
add
add
sub
fildll
scas
mov
ja
fildl
add
add
adc
mov
out
popa
dec
push
cmp
cs
fwait
push
mov
mov
adc
jnp
insl
xor
imul
call
frstor
sbb
imul
dec
outsb
dec
mov
sub
xor
lea
bound
lock
and
leave
sub
insb
or
add
add
add
fs
testl
cli
daa
daa
faddl
add
add
rorb
sub
jge
cld
sbb
mov
add
ret
sub
xor
icebp
enter
inc
test
enter
sahf
xchg
lods
repnz
mov
push
fs
scas
stc
dec
xchg
ret
lock
xorl
out
leave
int
outsl
xchg
repnz
dec
mov
inc
cmpsl
add
add
add
add
daa
push
imul
hlt
sbbl
faddl
add
add
imul
fs
out
inc
adc
fwait
push
adc
mov
int
pushf
inc
dec
repz
xor
jmp
adc
jae
aad
xchg
mov
loopne
sub
in
int
xchg
xlat
xorb
mov
les
in
shll
sub
dec
test
sub
or
jp
xchg
add
add
add
add
add
jne
jg
clc
cs
push
in
add
popa
add
add
sti
add
xchg
mov
mov
mov
jae
push
cltd
pop
xchg
scas
mov
xor
or
test
inc
repz
stos
push
jl
andl
mov
inc
push
sbb
and
mov
sbb
adcb
mov
mov
push
pop
out
add
add
add
add
mov
cmp
sti
dec
mov
je
lcall
add
popa
add
add
push
insb
pop
in
mov
int
mov
push
jecxz
or
xchg
add
dec
outsb
pop
jge
sbb
in
pop
fisubs
je
dec
jb
mov
push
xor
or
dec
mov
int3
outsb
testb
mov
popa
pop
dec
sbb
cs
add
add
add
add
push
mov
mov
xchg
adc
or
aam
iret
add
popa
add
add
sbb
das
pushf
movaps
cli
push
aaa
aam
mov
or
cmpsb
xor
cmp
push
test
cltd
jb
enter
test
sub
out
stos
inc
and
hlt
mov
pop
lret
inc
sbb
push
push
rcrl
clc
cltd
outsl
jmp
and
popa
test
sub
faddl
add
add
add
xchg
fcmovu
fisttps
push
xor
jo
pop
rolb
add
add
xchg
xor
cli
repnz
mov
incb
cwtl
sbb
test
ljmp
sbb
cmpsl
js
xchg
pop
lret
or
test
ret
scas
scas
aas
xchg
ljmp
sbb
aad
lcall
pop
lcall
arpl
cmp
xor
sbb
sub
inc
add
add
add
add
jle
out
sbb
mov
rolb
add
add
mov
add
sahf
mov
pop
adc
mov
dec
or
movsl
out
and
aam
adc
loope
test
test
and
xor
sbb
lock
pop
pushf
mov
pop
xor
xor
dec
sbb
and
adc
pop
test
loop
inc
shrl
add
add
add
add
and
cmp
fwait
in
leave
rolb
add
add
cli
out
mov
mov
dec
pushf
jmp
popf
scas
aam
add
adc
push
push
aaa
sbb
mov
fsts
adc
sbb
enter
es
xlat
lret
imul
lret
pop
shl
mov
ss
mov
inc
jbe
and
mov
mov
and
frstor
pop
jl
adc
add
xlat
add
add
add
add
popf
aam
sub
sbb
roll
add
add
ds
sub
add
clc
push
lea
gs
into
fstps
pop
cmp
filds
nop
cs
mov
or
pusha
and
ret
jle
lcall
xor
sbb
js
insl
or
push
out
out
dec
xor
inc
repnz
jno
mov
shrl
add
add
add
add
mov
jbe
hlt
mov
and
cmpsb
jns
lods
xchg
add
add
roll
aam
mov
push
shlb
lret
mov
subb
in
mulb
cld
mov
jno
or
daa
xchg
mov
nop
pushf
pop
push
sbb
jo
sub
inc
je
jae
xchg
lahf
pop
icebp
push
outsl
mov
add
add
add
add
xor
into
mov
sub
out
cwtl
movsl
push
or
roll
add
add
in
xchg
mov
orl
sub
int
inc
enter
jg
bound
insl
or
or
jb
inc
ljmp
outsl
in
jbe
aas
sbb
mov
and
pop
ljmp
xchg
mov
je
xchg
mov
movsl
or
js
jnp
aad
repz
imul
add
fucomi
outsb
and
pop
mov
dec
rolb
add
add
pop
adc
push
pop
dec
or
mov
lea
jecxz
or
sbb
xchg
push
mov
mov
movsl
inc
stc
cltd
out
jo
mov
inc
stc
sbb
lret
mov
js
fbld
pop
std
fstpl
arpl
inc
dec
rol
sahf
cmc
mov
add
bound
mov
jbe
add
add
add
add
mov
and
cwtl
scas
rolb
add
add
movsl
out
jg
scas
pop
xor
scas
adc
mov
fidivl
int3
lods
pop
cmpsb
push
leave
aaa
mov
mov
sbb
roll
dec
xor
mov
pop
add
lods
and
xor
je
lea
inc
push
orb
movsl
cld
fists
push
arpl
ret
decl
mul
lcall
add
add
mov
and
jg
call
into
inc
mov
push
sbb
psrlq
add
add
out
sar
push
or
adc
loopne
hlt
jle
arpl
add
stos
in
sub
xor
dec
xor
or
pop
outsl
int
adc
lds
daa
inc
xchg
pop
xor
mov
push
les
push
pop
dec
stc
mov
xor
add
add
add
fisubrs
cwtl
sar
repz
pop
mov
pshufw
add
add
rcrl
gs
jp
mov
mov
push
leave
imul
mov
test
lcall
pop
arpl
pop
negb
mov
xchg
addr16
in
test
jmp
pusha
adc
fsubs
negl
push
lcall
add
loope
shl
imul
add
add
add
int3
sbb
out
loopne
lods
daa
inc
mull
popa
add
add
adc
fildll
icebp
popf
or
arpl
xor
mov
adc
and
sub
xchg
push
xchg
in
hlt
push
int
mov
in
clc
push
insb
pop
jge
imul
dec
inc
in
fisubs
xchg
jo
int3
decl
add
iret
lock
and
jge
jp
outsl
add
add
add
add
test
fildll
inc
mov
pop
xor
add
popa
add
add
iret
inc
lods
sbb
mov
dec
out
cmp
cmp
dec
mov
pusha
aas
pop
fidivrs
jne
pushf
jb
or
std
cmp
mov
jbe
jle
jmp
sbb
jo
pusha
sub
fnsave
lds
scas
int
push
dec
lret
aam
xchg
sbb
pop
add
add
add
add
lods
fcomi
sarb
add
fmuls
xchg
aam
add
add
popf
inc
test
arpl
lea
adc
xchg
fucomi
pop
test
and
mov
xor
pop
sahf
insl
dec
lods
pop
mov
cmpsl
mov
or
out
sti
stc
sub
lret
fimull
sti
push
pop
push
rolb
mov
adc
xchg
or
pusha
imul
add
add
add
add
divl
dec
cmp
dec
jno
jns
hlt
aam
add
add
sahf
sub
fs
enter
ljmp
stc
sbb
cmp
das
cmpsb
ljmp
and
jns
ljmp
jae
arpl
add
cmp
inc
inc
add
mov
aas
mov
adc
mov
fcmovne
push
sarl
adc
out
insl
mov
add
add
arpl
jge
mov
daa
test
test
aad
add
add
adc
jg
or
lret
rclb
mov
loope
cltd
inc
ret
imul
pop
push
cmpsb
scas
or
mov
test
mov
lods
out
or
sti
add
xchg
mov
iret
fidivrl
sar
aaa
dec
mov
push
or
mov
lcall
add
add
add
daa
ss
xor
and
lcall
add
add
lds
xchg
xchg
jecxz
xor
sub
test
sub
lcall
lea
add
dec
jnp
loope
mov
movsb
sub
inc
and
pusha
mov
dec
ds
cmpsb
xor
mull
push
sub
push
into
xchg
ret
push
dec
jns
jns
stos
sbb
pop
add
add
add
add
add
out
mul
aaa
cmc
xchg
lcall
dec
fldl
add
add
xor
pop
or
add
out
hlt
xchg
jb
jb
xchg
ds
jb
sub
fucomip
lahf
pop
jo
std
fxch
inc
scas
movsl
mov
addr16
aas
inc
js
jg
inc
mov
mov
movsl
cmp
das
xchg
in
filds
lock
mov
pop
fnop
repz
add
add
add
aad
out
fucomip
ss
cmp
scas
mov
fldl
add
add
sbb
jns
cli
push
adc
shlb
scas
and
cmpl
in
iret
xor
push
out
jmp
cli
outsb
inc
cmp
jno
addr16
shlb
or
or
inc
push
aas
adc
adc
sbb
dec
mov
adc
jp
into
dec
pop
insb
ret
in
xorl
or
pop
add
add
add
add
in
cld
fisubrl
sbb
push
and
add
popa
add
add
paddusw
scas
test
pop
stos
insl
pop
xchg
rorb
movsl
bound
push
enter
push
repz
add
shlb
outsb
add
inc
xchg
jae
inc
cmpb
lret
andb
sbb
and
sbb
xlat
add
adc
or
xchg
repz
data16
xchg
cwtl
aam
add
add
add
add
push
les
in
lahf
sti
ja
rcll
mov
fiadds
add
add
xchg
jl
xor
fwait
test
and
or
sbb
fisttpl
test
dec
push
insl
push
arpl
inc
shrl
push
into
mov
pushf
andl
repz
enter
sub
jo
test
inc
sub
outsb
test
mov
cmc
adc
adc
rolb
add
add
add
jle
call
cli
lcall
add
popa
add
add
dec
leave
and
aas
or
sub
adc
stos
aas
inc
jo
nop
xchg
adc
repnz
xchg
popf
sub
inc
mov
mov
jmp
mov
jb
filds
lret
add
enter
jecxz
cltd
mov
push
sub
add
add
add
add
fincstp
shl
frstor
pop
dec
sti
inc
and
filds
add
add
xchg
sub
adc
push
push
fcoms
outsb
xor
mov
je
pop
push
pop
dec
sub
sbb
jne
pop
loopne
repz
mov
shrl
js
add
lds
push
adc
jmp
pop
stos
test
xchg
cmp
xorb
cli
bound
jb
xor
push
cmp
incl
add
add
add
outsl
mov
jmp
push
fcmovu
in
cmp
or
add
add
and
rclb
and
pop
fdiv
imul
adc
mov
xchg
xor
xor
push
stc
or
sahf
popfw
rcrb
insl
xchg
jg
lret
out
sti
mov
push
ljmp
cmp
add
das
idivb
adc
push
pop
inc
add
add
add
add
sbb
inc
jecxz
mov
mov
or
popa
add
add
and
int3
cwtl
loope
arpl
lods
movl
mov
mov
mov
aad
js
pop
mov
cmpsb
std
sarb
js
or
add
pop
dec
lret
rcrb
dec
loope
sti
icebp
lahf
sbb
sbbl
add
add
add
add
mov
icebp
and
enter
add
popa
add
add
xchg
adc
push
or
arpl
push
scas
in
aam
movsb
fsubrp
sbb
mov
stos
dec
les
clc
rorl
push
pop
clc
adc
sub
fcmovu
or
push
xchg
test
pop
mov
pop
mov
addr16
pop
fldl
sbb
nop
sbb
shl
das
test
add
add
xlat
repz
das
cli
fists
dec
es
mov
orl
add
add
ret
mov
out
test
pop
repz
sub
cmp
ret
das
inc
loope
lds
mov
jnp
sbb
popa
js
cmp
popf
xchg
xchg
nop
pop
cli
and
jmp
lods
movb
mov
pop
push
jo
mov
push
inc
sub
outsl
into
jge
mov
add
add
add
add
mov
push
adc
cwtl
out
dec
pop
xor
popa
add
add
fsts
sub
ds
cwtl
bound
inc
aad
sub
lret
je
pop
dec
les
pop
xchg
xchg
bound
popf
xor
add
imul
loop
mov
daa
and
dec
cmp
stos
cmp
ret
scas
insb
cltd
add
shlb
mov
push
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
inc
cmp
pop
ss
pop
cmp
inc
inc
dec
pop
pop
push
dec
inc
add
xor
cmp
xor
aaa
add
xor
push
inc
dec
push
pop
inc
push
cmp
push
push
inc
xor
xor
add
cmp
dec
cmp
pop
dec
xor
add
xor
pop
inc
dec
pop
pop
xor
pop
inc
xor
inc
dec
cmp
inc
cmp
ss
dec
add
xor
dec
xor
push
add
aaa
pop
push
dec
dec
cmp
inc
xor
pop
pop
dec
push
xor
add
dec
xor
ss
xor
xor
push
push
add
push
pop
push
cmp
xor
pop
dec
dec
push
cmp
dec
xor
xor
xor
pop
add
pop
inc
xor
push
xor
inc
add
xor
xor
pop
dec
dec
xor
add
pop
aaa
push
dec
push
pop
inc
add
dec
pop
inc
dec
xor
xor
push
pop
push
inc
inc
pop
cmp
push
pop
push
inc
add
pop
pop
dec
inc
inc
add
inc
pop
xor
dec
cmp
xor
ss
pop
dec
pop
add
push
xor
pop
xor
pop
xor
xor
push
push
inc
add
push
xor
xor
pop
ss
cmp
pop
xor
xor
push
push
xor
push
pop
inc
xor
push
inc
aaa
inc
add
ss
dec
pop
pop
inc
push
pop
push
dec
inc
add
xor
dec
add
cmp
xor
inc
add
inc
add
add
inc
add
add
add
add
cmp
dec
add
pop
add
push
add
xor
cmp
pop
add
add
inc
add
add
xor
inc
add
push
add
add
add
dec
add
add
add
pop
add
add
add
add
dec
add
add
pop
add
add
add
add
xor
add
add
push
add
cmp
pop
add
add
add
add
inc
add
add
inc
add
push
add
cmp
push
add
pop
add
add
add
add
dec
add
pop
add
add
dec
add
add
add
xor
dec
add
add
add
add
add
dec
add
add
inc
add
push
add
add
add
dec
add
add
push
add
xor
pop
add
add
dec
add
xor
pop
add
add
add
dec
add
xor
pop
add
add
xor
dec
add
add
add
xor
pop
add
add
push
add
add
inc
add
push
add
add
inc
add
pop
add
add
push
add
add
add
add
add
inc
add
addb
addb
addb
addb
addb
addb
addb
addb
addb
add
add
add
xor
ja
add
add
xor
add
add
add
add
add
add
add
sub
add
sub
add
xor
add
daa
mov
add
cmp
add
add
jb
push
imul
aas
inc
outsb
jne
push
imul
popa
je
outsl
outsb
jae
je
.byte
