add
add
call
add
add
add
add
add
add
add
add
mov
mov
or
dec
add
add
add
movl
cmp
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
pushl
mov
mov
cld
ljmp
mov
add
incl
xlat
lea
inc
ljmp
incl
aaa
add
test
pandn
aas
add
mov
incl
or
mov
xchg
roll
mov
cmp
dec
rorl
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
add
test
ljmp
mov
fcom
add
mov
add
add
addr16
add
push
inc
push
fisttps
test
add
jecxz
roll
inc
jle
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
enter
incl
in
xor
mov
cld
jle
mov
add
mov
decl
add
inc
das
mov
cld
push
mov
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
lds
add
push
cs
add
mov
test
add
incl
jmp
faddl
jge
adc
mov
lahf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
inc
ret
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
jp
add
mov
inc
lret
inc
iret
jb
mov
enter
cmp
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
fadds
xor
mov
clc
enter
mov
test
clc
incl
aas
mov
test
clc
pushf
inc
pushl
cld
pushf
inc
mov
insl
push
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
cmp
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
lahf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
lahf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
lahf
shll
lret
or
add
in
push
mov
popa
add
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
lahf
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
cmp
rolb
clc
popa
jb
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
cmp
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
popa
xor
mov
popa
xor
orl
fsubs
int3
lea
push
cmp
pop
lods
incl
mov
rcrb
test
inc
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
cmp
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
lahf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
lahf
shll
lret
or
add
in
push
mov
popa
add
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
pop
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
lahf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
sar
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
adc
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
rolb
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jle
inc
xchg
mov
mov
or
inc
inc
mov
cld
loop
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
loope
push
push
incl
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
ret
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
jmp
inc
jmp
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
xlat
ss
aas
loope
ret
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shr
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
cmp
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
andl
lret
mov
add
lret
pushf
and
pop
rcr
test
clc
add
cmp
pushf
add
add
inc
push
rcrl
inc
fsts
mov
nop
rolb
mov
add
pop
add
or
mov
add
call
add
add
push
inc
orb
leave
dec
dec
add
call
clc
inc
inc
mov
enter
mov
xor
xor
or
sbbb
int3
test
clc
inc
mov
fmuls
sub
add
leave
cmp
pushf
mov
jl
add
add
or
test
clc
or
cmp
sbb
mov
xchg
pop
add
mov
add
mov
mov
mov
xor
add
inc
jge
mov
xor
add
push
jne
mov
decl
add
cmp
push
inc
inc
add
add
mov
mov
mov
sbb
inc
add
push
clc
add
mov
jne
mov
add
add
lea
lea
xor
ret
mov
add
push
inc
inc
add
test
jne
mov
mov
push
pop
inc
decl
rclb
xor
addl
mov
push
jbe
mov
ret
dec
inc
jmp
mov
cld
push
mov
add
push
push
inc
jmp
add
add
inc
ret
mov
mov
sub
mov
mov
rolb
inc
add
inc
add
clc
inc
ljmp
xor
add
mov
mov
inc
fdivs
loop
add
add
ljmp
add
add
add
mov
dec
incl
test
sbb
add
mov
add
and
dec
mov
dec
call
inc
add
cmp
inc
add
jb
mov
cmp
lret
mov
test
andnps
decl
inc
add
mov
inc
hlt
mov
xchg
add
xor
add
mov
mov
mov
push
push
inc
mov
call
inc
adc
decl
aam
push
add
xor
lcall
cmp
test
clc
inc
and
mov
cmp
je
mov
add
sbb
dec
dec
mov
mov
add
add
jne
mov
cmp
jb
mov
mov
mov
inc
je
push
add
push
mov
in
shlb
test
call
inc
inc
rorb
jmp
mov
mov
loopne
sbb
inc
inc
push
lea
lea
or
js
mov
incl
call
inc
add
decl
test
mov
add
add
incl
data16
push
rorb
incl
inc
add
decl
mov
add
add
xor
cmp
jbe
lea
mov
jae
mov
decl
add
call
add
mov
jb
incl
mov
sbb
push
je
incl
data16
test
lea
cmpsl
movw
mov
lea
js
incl
mov
pop
jmp
add
out
pusha
out
call
jmp
inc
add
in
mov
addl
mov
data16
addl
push
in
dec
inc
add
mov
in
incl
sub
incl
jle
leave
add
test
push
addl
outsl
in
add
test
ljmp
data16
inc
inc
xlat
cmp
jle
leave
icebp
inc
add
mov
fdivp
mov
in
test
inc
inc
mov
cld
inc
out
rclb
inc
mov
mov
sub
jne
movl
int3
inc
add
lea
xor
add
inc
adc
test
add
movb
jl
add
mov
mov
sbb
add
loopne
adc
or
inc
loop
xor
or
jle
inc
add
adc
repnz
xorb
adc
dec
repnz
mov
adc
call
adc
inc
push
flds
mov
fcmovnb
xor
sbb
addl
inc
mov
sbb
xorb
add
decl
add
incl
mov
lret
enter
inc
jne
mov
mov
mov
mov
ud2
xchg
xor
dec
mov
sbb
cmp
push
pop
adc
andb
mov
push
mov
adc
loope
inc
inc
fildll
mov
inc
subb
ljmp
lea
xor
mov
stos
mov
push
test
mov
push
ret
mov
sbb
rcl
inc
inc
int3
mov
cwtl
movl
ljmp
jmp
inc
or
rol
dec
adc
incl
add
push
push
add
test
or
jmp
pushl
add
push
loope
jae
jmp
andl
mov
sbb
addb
mov
incl
push
pop
clc
mov
orb
mov
lea
inc
ljmp
pop
inc
mov
mov
rclb
incw
lea
stos
add
mov
adc
pushl
decl
dec
push
loop
adc
call
mov
sbb
loopne
cmp
dec
mov
sub
inc
mov
xor
test
decl
add
push
add
mov
jbe
test
inc
push
addl
pop
add
ret
decl
mov
mov
cwtl
mov
test
rorb
lea
mov
push
decl
pushl
call
lea
mov
mov
mov
inc
dec
mov
xor
decl
call
lea
incw
cmp
decl
jmp
inc
jmp
dec
lea
jge
mov
lock
mov
mov
roll
push
str
xor
add
add
inc
rdpmc
mov
dec
inc
add
mov
data16
jne
push
adc
jne
ljmp
call
or
mov
mov
addl
mov
add
push
xor
dec
mov
mov
jl
push
mov
rcl
mov
mov
push
ret
push
pop
leavew
inc
sbb
in
xchg
push
shl
addl
mov
cwtl
or
setl
inc
add
test
xor
add
xor
mov
test
movb
adc
add
roll
mov
incl
ljmp
adc
jne
call
mov
push
sbb
inc
test
dec
add
dec
inc
mov
add
add
adc
and
jp
sysret
pop
add
cmp
sub
dec
mov
ret
clc
mov
addl
jnp
pop
add
xorl
adc
jge
mov
cld
test
add
add
negb
add
pop
add
add
inc
test
mov
fisttpl
mov
push
add
test
add
add
mov
add
add
mov
call
or
dec
or
inc
dec
addl
scas
dec
add
lock
mov
call
rclb
xor
adc
mov
mov
nop
rolb
mov
push
or
xor
sti
cmp
dec
test
or
ret
or
pop
add
xor
inc
mov
push
inc
mov
or
sti
dec
sub
cld
mov
mov
add
jne
cmp
jns
pop
jge
cmp
cld
inc
iret
or
jae
xor
jmp
mov
lea
mov
in
testb
jge
add
mov
cmp
hlt
adc
jl
clc
js
pushl
mov
clc
add
mov
call
inc
popa
jge
cmp
xor
rcrb
push
or
push
sub
in
add
fistl
sbb
test
inc
mov
cld
je
cmp
rorb
adc
mov
sbb
push
inc
mov
add
or
cld
mov
jge
xor
mov
hlt
iret
pop
inc
jbe
cmp
adc
push
add
dec
divl
sbb
mov
test
je
mov
or
cmp
jbe
mov
or
jg
add
dec
add
je
mov
mov
mov
adc
jmp
xor
pop
rcrb
ret
cmp
push
cmp
cld
xor
cmp
pushf
or
add
pop
mov
push
add
push
adc
push
xor
mov
in
dec
add
nop
iret
add
push
dec
lahf
mov
add
add
cmp
je
add
mov
pop
mov
lahf
fbstp
add
pop
pushf
mov
xor
ud0
add
add
or
dec
inc
mov
xor
mov
mov
fdivs
push
or
inc
imul
loopne
sbb
jg
inc
jne
mov
adc
fiadds
jne
mov
clc
test
xor
xor
mov
cld
jb
add
adc
rcr
add
add
pmaxub
dec
decl
xor
add
cmp
hlt
mov
faddl
xor
add
cmp
clts
jp
decl
xor
add
jne
mov
xor
lea
jb
add
add
add
add
adc
pop
mov
hlt
add
jmp
incl
xor
in
push
inc
mov
hlt
add
orl
mov
fcompl
enter
add
mov
in
and
mov
mov
cld
pushf
dec
lahf
xor
add
mov
cld
add
xor
pop
mov
cld
sbb
dec
mov
jne
mov
fadds
mov
push
fdivs
decl
lcall
inc
inc
xor
add
cmp
mov
fadds
mov
test
lahf
push
xor
out
mov
or
in
sbb
add
jne
mov
mov
cld
test
lahf
fbstp
ret
call
xor
add
mov
cld
dec
mov
cltd
inc
inc
mov
cld
lea
xor
add
inc
je
mov
cwtl
movb
add
sub
lock
mov
aam
ljmp
mov
in
inc
mov
cld
jmp
rorl
mov
fadds
add
xor
add
pop
hlt
pop
push
ret
mov
mov
cmp
fadd
test
jne
decl
mov
xor
add
clc
jne
add
xor
lea
add
jb
add
inc
jne
add
or
inc
scas
aas
mov
jne
mov
or
icebp
lahf
shll
mov
lsl
cmp
cltd
mov
add
mov
call
jge
sub
xor
jge
xor
add
mov
xor
add
jne
xor
jmp
mov
cld
mov
clc
leave
xchg
or
push
mov
cld
in
icebp
jnp
add
jae
sub
inc
call
pop
call
xor
add
ret
xor
inc
loopne
jne
mov
push
jge
xor
in
test
add
mov
xor
xor
add
cmp
mov
xor
add
cmp
mov
add
add
or
ja
mov
cld
pop
stc
mov
in
jge
mov
or
icebp
add
jae
add
push
jne
mov
repnz
cmp
xor
clc
pop
repnz
out
pop
testl
pop
add
pop
jge
xor
add
cmp
fdiv
test
clc
mov
rcll
stc
or
mov
in
lahf
jne
mov
or
lahf
xor
add
mov
mov
lock
push
inc
jne
mov
in
mov
clc
repnz
decb
mov
cmpl
clc
call
hlt
add
clc
inc
jne
mov
clc
test
xor
mov
in
xchg
roll
sbb
cld
clc
pop
add
add
mov
mov
or
add
test
add
mov
sbb
rclb
add
add
mov
and
cmp
pushf
or
rcrl
xor
mov
add
inc
inc
mov
add
cmp
inc
push
mov
mov
lock
xor
mov
cmp
cmp
clc
ret
dec
inc
xor
inc
add
add
dec
mov
cld
mov
cmp
pushf
dec
mov
xor
mov
cmp
push
mov
add
incl
mov
in
inc
or
rclb
add
push
inc
call
leave
push
add
mov
or
jo
cmp
add
add
mov
or
mov
cmp
roll
mov
dec
dec
sbb
cld
mov
test
cmovne
test
add
into
xor
add
mov
faddl
mov
nop
into
add
mov
mov
invd
mov
mov
mov
push
push
cmp
fmuls
call
rcl
rcl
call
inc
jne
jmp
sbb
dec
or
mov
sbb
dec
and
push
add
cmp
je
push
and
add
or
inc
adc
inc
and
push
push
sub
push
mov
sbb
dec
mov
add
jge
add
mov
mov
cmovne
xor
xor
or
roll
dec
add
dec
jbe
mov
cld
mov
bswap
push
lret
xor
mov
and
or
daa
xchg
push
push
adcl
push
xor
add
decl
sbb
rolb
and
mov
enter
mov
push
add
add
addl
mov
rorl
mov
inc
dec
mov
inc
mov
call
or
mov
inc
push
mov
into
mov
mov
lea
mov
push
xor
mov
sub
mov
loopne
lret
push
dec
mov
lods
xor
add
mov
xlat
dec
sarb
jne
mov
fsub
add
xor
in
mov
hlt
mov
mov
in
jb
push
inc
push
jle
leave
cmove
lods
add
mov
or
xor
mov
orl
into
in
lret
xchg
gs
add
mov
fsubs
inc
lea
push
lea
fadds
mov
inc
add
mov
fmul
rorb
add
inc
inc
je
mov
sbb
add
add
jmpw
or
lret
jne
mov
in
add
lret
mov
sbb
inc
call
and
and
inc
test
add
rorb
data16
call
ret
test
inc
orb
sub
stc
test
mov
lea
call
pop
add
xchg
add
add
push
cmp
fdivs
add
lea
test
je
mov
decl
push
add
inc
sbb
push
or
mov
cmp
mov
inc
pop
add
add
push
decl
or
adcl
push
jno
add
push
clc
sar
xchg
add
jne
mov
mov
sub
rolb
loopne
dec
mov
mov
call
add
add
add
add
jmp
xor
pop
lcall
ret
mov
mov
add
push
and
adc
add
dec
or
sbb
cmp
pop
push
add
mov
and
xchg
add
add
cli
loope
shlb
dec
ret
sub
pushf
inc
mov
or
test
clc
incl
cmp
pushf
jb
add
add
mov
hlt
inc
data16
mov
jmp
mov
or
inc
add
mov
mov
mov
add
sbb
jne
sub
lahf
mov
and
add
lock
test
add
push
inc
in
mov
ret
push
test
add
inc
shlb
pop
add
loopne
inc
pop
xor
mov
fdivrp
pop
mov
hlt
addl
cmp
lock
add
add
push
or
add
data16
lock
jge
mov
test
data16
add
andl
mov
jne
mov
inc
or
lock
mov
mov
in
or
mov
call
sbb
push
mov
lock
pop
jne
mov
retw
minpd
str
jne
xor
mov
cld
add
add
sar
mov
mov
lock
es
mov
clc
jne
jge
mov
or
add
push
xor
add
add
mov
or
mov
add
mov
mov
or
fisttps
clc
ja
mov
or
lahf
sti
add
add
fbld
pop
mov
or
mov
hlt
add
mov
or
mov
or
mov
mov
adc
stc
mov
mov
or
mov
or
add
cmp
mov
xor
mov
add
jge
mov
pop
clc
cmp
data16
mov
xor
pop
jge
mov
lock
jge
ltr
add
hsubpd
data16
jge
mov
dec
xor
minpd
data16
jmp
mov
sarw
mov
jb
add
pop
mov
clc
jne
data16
jnp
pop
inc
add
data16
data16
add
pop
icebp
sbb
jne
mov
call
mov
in
data16
repnz
xor
inc
mov
call
add
ret
jge
mov
mov
add
data16
mov
add
mov
add
data16
pop
test
pushf
add
into
fistps
push
mov
mov
mov
push
repnz
lock
jne
mov
cld
mov
xor
mov
mov
push
sub
mov
mov
add
dec
cmp
jne
mov
mov
stc
jge
data16
xor
data16
lock
inc
data16
pop
add
rorb
inc
mov
in
sarl
pop
or
push
mov
mov
or
cmp
je
mov
mov
add
push
mov
mov
pushf
sub
add
xor
dec
str
cmp
int
mov
xor
mov
xor
lret
push
add
push
add
cmp
sti
mov
mov
cld
add
data16
roll
mov
lret
in
add
pop
lret
ret
enter
pop
movl
pushf
call
add
in
add
mov
clc
xor
mov
cmp
je
push
pop
sysenter
leave
dec
popa
jle
popa
mov
int
mov
lret
add
jne
lea
add
ret
inc
xlat
add
add
or
ret
add
jne
lea
add
lret
mov
add
mov
cmp
repz
xorb
inc
inc
add
cmp
pushf
push
je
xor
mov
andl
add
in
push
mov
add
mov
clc
mov
or
ret
or
or
lret
add
mov
adc
iret
mov
add
dec
push
mov
add
rcrb
add
ret
jne
mov
xor
mov
test
clc
fs
mov
pop
sub
add
xor
xor
add
cmp
jne
cmp
clc
pushf
pop
mov
push
xor
mov
psubsb
icebp
lea
testb
sarl
xor
mov
adcl
add
inc
sub
mov
addl
orl
cmp
mov
decl
dec
mov
mov
mov
xor
mov
push
leave
mov
push
test
lahf
in
xor
mov
clc
test
cmp
pushf
dec
mov
in
mov
push
icebp
add
roll
add
roll
cmp
pushf
dec
movl
clc
or
xor
pop
dec
dec
lea
add
dec
inc
sub
orl
cld
adc
scas
or
pop
xadd
jb
add
inc
sub
mov
lock
icebp
add
clc
pop
mov
data16
add
xor
add
lea
add
add
inc
adc
dec
mov
mov
mov
lea
add
inc
in
incl
leave
add
push
roll
sbbl
sarb
jbe
mov
or
push
mov
mov
jne
jmp
mov
push
pop
mov
add
xor
sub
mov
inc
inc
mov
dec
lahf
xorl
orl
leave
jbe
mov
in
inc
in
mov
or
dec
inc
data16
pushf
mov
mov
cld
test
push
inc
mov
lahf
pop
xor
mov
inc
or
sar
dec
lea
in
decl
mov
cld
inc
inc
inc
mov
jmp
mov
mov
push
lahf
xor
add
inc
cmp
pushf
std
xor
inc
fadds
inc
mov
inc
lahf
xorl
cmp
mov
clc
sub
inc
call
pop
inc
lahf
pushl
adc
std
dec
decl
inc
push
call
add
xor
add
add
inc
cld
add
mov
orl
test
clc
inc
inc
mov
mov
inc
or
shlb
jne
xor
pop
add
ret
je
push
mov
mov
mov
in
inc
orl
pop
test
xor
mov
add
add
mov
or
add
xor
inc
inc
add
xor
add
mov
sub
lret
mov
jae
lea
xor
jne
or
or
pushw
jne
cmpxchg8b
mov
add
data16
call
cmovge
xor
add
sub
or
add
inc
cmp
mov
subl
enterw
shlb
pop
or
mov
dec
inc
data16
push
jb
jmp
incl
mov
or
jo
test
jmp
incl
mov
pop
lock
push
dec
mov
dec
ror
rolb
dec
lock
pop
in
cmp
clc
xchg
cmp
jne
xor
jmp
mov
jne
call
mov
add
inc
jne
mov
mov
mov
add
stos
add
mov
les
xchg
iret
add
inc
jle
out
cld
add
xchg
add
push
pop
add
paddq
xchg
add
adc
test
incl
incl
rorb
decl
inc
inc
incl
data16
rclb
mov
lock
jle
mov
mov
jge
mov
adc
enter
dec
or
mov
lods
ja
mov
pop
lea
inc
clc
inc
outsb
lea
push
inc
mov
pop
mov
jae
cmp
adc
pop
inc
sbb
mov
or
cmp
mov
cld
xchg
add
add
lea
adc
or
faddl
push
add
push
inc
add
push
adc
mov
fdivr
cli
dec
add
add
add
xor
cmp
mov
lock
rcl
pop
add
pop
dec
cmp
mov
add
push
dec
in
mov
push
pop
mov
add
add
add
inc
mov
hlt
push
decl
push
add
pop
or
jns
ret
jmp
mov
in
jge
sysexit
cmp
cmp
sbb
pop
add
jae
mov
lcall
mov
mov
fdivs
xor
movl
add
push
ret
mov
jne
mov
faddl
xor
push
or
icebp
incl
rolb
inc
stc
mov
lock
add
dec
add
mov
call
sbb
mov
pop
jge
lea
add
or
leave
fadds
dec
add
xchg
add
mov
mov
or
dec
pop
mov
ljmp
add
inc
or
dec
add
test
push
ret
lea
pushl
mov
sub
add
clc
mov
add
dec
push
xor
xor
in
add
inc
jmp
xor
mov
adc
xor
jne
mov
mov
hlt
pop
add
in
push
in
dec
push
xor
pop
pushf
dec
mov
mov
in
dec
addb
add
mov
test
dec
push
mov
mov
clc
into
dec
lret
lock
test
push
jge
push
enter
dec
cld
jmp
pushf
inc
mov
sub
int
mov
mov
adc
enter
jmp
xor
mov
or
call
ds
or
rorb
push
inc
in
mov
or
lock
test
clc
rolb
cmp
add
mov
xor
xor
sub
jmp
mov
lock
mov
push
icebp
xor
mov
enter
add
cld
scas
add
dec
mov
xor
xor
add
add
test
mov
adc
je
xor
xor
add
add
rorl
enter
icebp
or
lock
enter
lret
or
mov
cld
bswap
pop
mov
in
hlt
pop
jne
xor
xor
jbe
mov
clc
pop
mov
mov
clc
mov
adcl
inc
in
cmp
add
inc
cld
cmp
hlt
inc
test
clc
hlt
inc
test
clc
pushf
push
push
inc
inc
fdivrs
xlat
pushf
mov
mov
xor
mov
xor
add
pavgb
test
dec
inc
mov
cld
xlat
enter
lret
add
leave
jne
mov
enter
lret
scas
out
jmp
mov
cld
add
xor
jmp
xor
add
rorl
dec
mov
cld
lea
mov
mov
xor
enter
stc
add
call
pop
xor
sub
enter
inc
in
xor
clc
cmp
cmp
pushf
call
mov
loopne
inc
test
clc
add
push
mov
push
inc
push
mov
mov
mov
xor
mov
sbb
ljmp
mov
mov
xor
xor
mov
hlt
bswap
roll
xor
mov
xor
call
enter
mov
lock
inc
mov
inc
inc
enter
inc
mov
mov
roll
add
push
into
in
movb
dec
or
xorb
add
add
in
push
inc
mov
adc
push
xchg
popa
iret
dec
lahf
mov
clc
add
cmp
jne
addl
or
or
push
dec
jnp
dec
xlat
mov
call
lsl
cld
sti
lahf
mov
mov
clc
iret
dec
lret
xor
lea
dec
inc
mov
mov
int
sub
lock
mov
in
cmp
xor
jne
mov
in
dec
mov
nop
add
pop
mov
mov
ret
mov
mov
mov
dec
add
jo
push
inc
jne
mov
push
pop
ret
push
inc
xor
add
jnp
jg
ljmp
inc
mov
push
cmp
dec
xor
cmp
jne
orl
jmp
mov
push
add
add
add
cmp
mov
sbb
mov
xor
mov
cmp
cmp
adc
test
cmp
pushf
sbb
add
add
dec
jnp
mov
rolb
iret
or
cmp
xor
or
xor
add
mov
inc
inc
mov
mov
mov
cmp
dec
decl
inc
mov
or
sbb
inc
inc
mov
or
dec
push
dec
inc
rclb
push
inc
decl
rolb
inc
inc
mov
sbb
inc
push
xor
lea
cmc
xor
add
mov
inc
inc
mov
ret
inc
add
adc
test
clc
inc
inc
mov
push
adc
test
mov
sbb
dec
ret
sub
add
xor
lea
lods
jb
add
sar
cmp
pushf
add
add
mov
test
clc
inc
inc
cmp
mov
or
bound
clc
lea
xor
lea
mov
or
dec
imul
incl
inc
add
pavgb
movl
clc
iret
inc
lock
lret
fmull
mov
test
mov
loopne
inc
loopne
inc
loopne
xbegin
adc
jb
mov
inc
inc
push
mov
incl
mov
loopne
rol
test
dec
push
decl
push
mov
add
cmp
add
call
clc
test
cmp
pushf
mov
or
iret
test
mov
in
pop
dec
add
add
dec
mov
in
dec
or
iret
add
testl
test
add
add
mov
or
add
cmp
add
mov
mov
lock
dec
test
dec
add
cmp
or
mov
dec
push
lea
lods
mov
clc
cli
or
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
clc
rorb
iret
rorl
inc
mov
iret
add
xor
mov
or
dec
shll
cmp
in
add
add
mov
in
mov
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
cli
or
cmp
je
mov
ret
or
lock
add
mov
add
cmp
mov
xor
mov
add
roll
cmp
lock
rorl
jb
add
ja
sbb
xchg
enter
inc
decl
loopne
jb
add
dec
adc
add
inc
rcll
mov
xor
jb
add
jne
decl
add
repnz
inc
mov
mov
shll
mov
movsb
add
push
adc
inc
pushl
mov
add
mov
test
inc
mov
lret
mov
sbb
inc
mov
xor
enter
inc
add
cld
test
lahf
jne
mov
fsubrs
decl
hlt
xor
sbb
call
pop
or
dec
adc
push
add
cmp
je
mov
or
pushf
ret
mov
lea
clc
or
push
inc
or
pop
call
test
jne
mov
movsb
xlat
inc
push
push
or
push
decl
dec
adc
roll
sbb
dec
je
push
call
test
inc
iret
add
clc
jmp
mov
test
or
add
inc
mov
mov
and
push
mov
rolb
iret
orl
push
clc
jmp
add
mov
jmp
addl
pop
inc
pop
sbb
inc
add
clc
and
mov
and
mov
and
mov
and
xor
pop
mov
xor
mov
mov
mov
push
add
mov
cmp
mov
dec
add
push
adc
push
cmp
and
mov
and
xor
jb
add
inc
and
lea
and
push
jmp
cli
and
clc
and
call
jmp
dec
ds
cmp
bswap
mov
add
and
mov
mov
or
inc
jmp
addl
push
inc
sbb
dec
test
movb
aas
add
aas
add
jne
incl
clc
add
inc
jne
call
fadds
mov
add
add
add
incl
push
and
roll
inc
adcl
inc
adc
inc
lcall
je
sbb
lea
je
sub
je
and
mov
clc
and
and
add
and
add
cmp
or
pop
push
mov
sub
xor
mov
mov
mov
orl
mov
movl
mov
and
movl
mov
xorl
push
push
andl
push
mov
xor
addl
mov
orl
add
mov
movzwl
and
movl
dec
movl
movl
add
jmp
xlat
mov
and
mov
lret
push
jle
jle
fidivrl
jle
cmp
fld
ja
or
push
or
cmp
enter
pop
mov
or
rol
or
dec
add
push
in
outsl
add
pushf
jo
dec
mov
cmp
xorb
jbe
fisttpl
jecxz
and
xchg
dec
incl
mov
sub
jae
lret
lcall
mov
loop
cmp
fs
sub
or
sbb
and
add
fisttpll
popl
shll
movb
pop
rcll
jns
mov
daa
add
fstpt
dec
loopne
xchg
or
dec
repz
mov
mov
aaa
adc
or
jp
jns
fsubrp
and
faddl
and
outsb
out
mov
xor
popa
cmc
jne
pushf
pop
inc
and
test
ret
jge
loopne
xor
mov
xchg
cli
insb
pop
les
data16
jmp
ds
add
repz
lods
pop
jp
and
mov
sahf
icebp
popa
push
enter
add
shll
and
dec
leave
lea
in
adc
ror
fmull
jp
push
inc
and
pop
fimull
in
movl
mov
sbbl
xor
subl
jmp
fstl
cltd
loope
jns
and
scas
pop
rcll
fidivrl
jle
jg
jle
imul
pop
pushf
cmp
and
or
test
hlt
pop
or
call
movsl
in
gs
icebp
lock
sahf
mov
lea
bound
test
mov
imul
mov
push
and
xor
dec
mov
lock
gs
outsb
adc
test
pop
dec
inc
aad
cmp
rcll
mov
cmp
in
push
mov
adc
pusha
ljmp
dec
sub
or
loope
in
dec
mov
or
jp
adc
add
adc
jbe
les
sbb
sbb
xchg
jae
xchg
push
std
mov
sub
mov
fnstcw
jmp
clc
adc
fiadds
sub
sub
fwait
pop
hlt
aam
lods
out
outsl
mov
nop
into
or
std
push
bound
aad
sbb
inc
in
mov
movsl
or
inc
sbb
scas
jne
sub
pusha
mov
inc
nop
lret
adc
sub
fs
arpl
iret
inc
lret
dec
aad
push
sbb
and
lds
cmpsb
jl
fadd
daa
loop
inc
inc
xor
test
faddl
cmp
lock
fistl
ljmp
movsl
shll
repz
lea
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
subl
movl
movb
sub
mov
xor
andl
add
mov
mov
xor
adcl
add
andl
push
dec
mov
xor
andl
add
xorl
push
andl
mov
jmp
push
mov
xchg
push
mov
lods
or
pop
cmpsb
jl
jle
jg
jle
jmp
aam
or
pop
test
dec
jne
das
mov
mov
jge
cmp
lock
mov
mov
xchg
mov
mov
xchg
movsb
in
pop
or
popf
mov
mov
es
pop
sub
arpl
push
jle
push
jp
lods
dec
in
xchg
sbb
out
or
dec
movsb
xchg
cmpsb
fstpl
arpl
mov
jo
pop
popf
ja
daa
push
jle
and
cs
and
push
ds
or
mov
sbb
cli
outsl
push
les
add
notl
xchg
mov
add
out
cmp
pop
aaa
push
and
cmp
mov
adc
les
push
mov
and
jae
loop
inc
insb
shrb
popa
dec
enter
push
inc
or
mov
lods
inc
imul
add
mov
add
xchg
push
jb
mov
testl
jnp
push
pop
jo
xor
mov
lods
mov
or
or
pop
xchg
push
div
fcompl
ret
aam
adc
fldcw
stos
sbb
adc
ss
or
adc
cwtl
xchg
jmp
mov
adc
mov
mulb
add
pop
add
add
movl
add
inc
mov
add
push
add
pushl
subl
pushl
subl
call
incl
test
movl
je
subl
lea
negl
push
add
mov
andl
xor
add
andl
push
mov
add
push
andl
mov
subl
mov
pushl
addl
call
movl
mov
movl
cmpl
notl
lea
mov
je
lea
jmp
ja
je
je
test
push
outsl
jne
gs
add
jle
jg
jle
test
loope
insl
dec
jg
mov
in
push
adc
mov
data16
sbb
pop
push
js,pt
jmp
aas
jle
mov
push
push
roll
mov
sahf
xchg
mov
push
mov
sub
and
mov
mov
mov
repz
add
cmp
sbb
adc
and
push
movsb
or
shlb
addl
lods
ss
cmp
jg
cmp
mov
daa
pusha
jno
repz
inc
in
rorb
sbb
cli
sbb
insb
lods
dec
loopne
mov
or
jo
or
enter
and
fcomps
es
inc
mov
push
aad
out
xor
test
jae
mov
jmp
adc
js
push
pop
js
or
add
or
lret
lret
aam
mov
jle
xchg
shll
popf
pop
ds
adc
add
adc
insb
sbb
mov
mov
sub
shll
fsts
ss
dec
jcxz
mov
pusha
hlt
je
xor
push
pop
lcall
sub
cs
adc
cs
faddl
inc
sbb
out
repz
scas
inc
inc
add
add
add
or
add
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
inc
mov
adcl
xor
add
andl
jmp
adc
imull
mov
and
out
jae
jle
jg
jle
mov
add
bound
sbb
mov
enter
popf
adc
pop
inc
pop
push
popa
lods
mov
loope
les
jle
inc
and
sbb
movsl
add
iret
imul
imul
out
fwait
js
add
cmp
push
stc
adc
inc
icebp
sub
xor
sub
cwtl
jl
dec
call
scas
test
aaa
cmp
cmpsb
push
cmpsb
pop
or
jmp
pop
and
sub
cmpsb
mov
and
add
pusha
and
pop
mov
pop
imul
cmp
aas
add
jl
test
aaa
shlb
imul
dec
cli
inc
sbb
dec
mov
jp
inc
int3
jo
roll
push
movsb
outsb
adc
mov
xchg
dec
fnstsw
push
sub
pushf
js
cmp
lds
les
test
imul
daa
sub
js
into
add
iret
repnz
iret
popf
fs
cltd
call
xor
repz
dec
pop
adcl
lret
pop
xchg
dec
pop
xor
add
or
cltd
dec
call
jg
cmp
sbb
jmp
roll
mov
add
lock
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
add
jmp
sbb
clc
and
fldcw
cli
and
jle
jg
jle
add
mov
dec
leave
sub
inc
sbb
xorl
mov
mov
adc
test
mov
xor
in
or
dec
inc
and
and
addb
cmp
dec
int
jbe
lahf
iret
pop
sbb
inc
pop
adc
mov
imul
jle
lahf
xchg
jnp
mov
test
push
stc
aas
je
push
mov
inc
cmp
out
or
loop
movsl
out
movsb
or
jne
cmp
or
push
xchg
int
mov
fimuls
out
pop
jae
xchg
jge
imul
add
scas
fwait
sbb
cmp
sbbb
pop
jo
popf
adc
dec
sub
pop
leave
adc
loop
dec
mov
sub
cmpsl
fstpl
stos
mov
lea
insb
mov
popf
and
insb
dec
fisttps
test
aas
adc
call
inc
xorl
sbb
xor
mov
pushf
adc
xor
pop
icebp
cmp
xchg
sbb
mov
subb
inc
add
imul
fnstcw
pop
clc
shll
adc
push
pushl
lea
push
pushl
pushl
jmp
loop
cli
cs
cli
cli
ret
cmpsb
push
push
out
pop
push
jbe
jle
jg
jle
sbb
push
push
mull
cli
mov
cmp
pop
js
adc
and
fisubs
inc
ds
std
into
loope
shrb
dec
jg
fiadds
xor
shlb
or
pop
xor
aaa
mov
jbe
mov
test
push
inc
and
das
mov
adc
rorb
xchg
pop
repz
pop
mov
mov
icebp
shl
adc
sub
add
add
mov
xchg
jo
and
cmp
or
mov
nop
xchg
hlt
push
push
dec
jo
dec
sub
cmp
xor
mov
jmp
subb
mov
pop
frstor
int3
cmp
jo
inc
pop
rcrb
in
jmp
ret
adc
mov
mov
fwait
or
out
and
roll
insb
mov
dec
fcomps
in
repnz
or
add
fbld
dec
cli
ss
shrl
jae
hlt
repz
jp
insl
mov
out
cmp
and
bound
mov
sbbl
test
ss
jo
test
cmp
ljmp
jp
xchg
insl
adc
inc
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
jmp
lahf
icebp
shll
icebp
addl
mov
jle
jg
jle
jl
sbb
dec
insl
das
jmp
mov
inc
jae
call
repz
in
adc
add
fs
sbb
test
inc
sbb
in
pop
mov
fsubrl
pushf
faddl
push
xor
das
mov
add
xchg
bound
and
dec
in
aas
ljmp
loop
bound
fwait
push
imul
pop
lock
pop
or
in
or
out
jo
lods
or
mov
xor
mov
or
nop
arpl
mov
bound
popf
ljmp
fistpll
aam
push
lcall
adc
mov
xchg
iret
out
in
imul
ret
sbb
lret
stos
in
push
and
pop
fwait
mov
push
mov
inc
dec
mov
in
in
pushl
xchg
orl
in
xchg
outsl
out
pshufw
xorl
pop
dec
mov
inc
or
pop
ret
pop
test
mov
repnz
dec
mov
fcmovne
movl
pop
cmp
sub
lcall
push
aam
aaa
repz
scas
outsl
xchg
sahf
fnstsw
add
mov
test
and
decl
sub
mov
lea
incb
inc
push
pop
dec
xchg
jmp
mov
in
stc
andb
cmp
rcrl
je
jle
jg
jle
sti
push
rcrb
cmpsb
jecxz
cltd
or
adc
outsb
and
inc
repnz
xor
push
push
pop
mov
insl
pop
popa
adc
mov
movsl
sbb
jg
or
mov
int3
sub
lods
loop
ja
mov
sub
iret
mov
sarb
frstor
pop
sbbb
push
and
mov
sbb
inc
ds
pop
std
fsubrp
sbb
xchg
call
mov
xchg
xor
add
cmp
fcoml
in
lods
bound
xchg
fwait
shrl
dec
les
in
outsb
fldcw
sbb
jle
and
cli
mov
add
dec
cli
fisttpll
sub
es
cmp
lcall
push
rorb
scas
inc
xchg
sub
mov
mov
sbb
daa
pop
neg
movd
ds
jne
mov
iret
cmpsb
xchg
test
jl
jg
mov
jb
in
rol
cmp
fwait
xchg
mov
mov
sub
xor
sbb
js
push
or
enter
sub
daa
mov
subl
adc
lcall
pop
xchg
notb
roll
clc
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
call
mov
jmp
mov
fidivl
or
jle
pushf
nop
cmp
jle
fidivrl
jle
ret
adc
nop
adc
add
mov
lds
mov
movsl
xchg
jne
mov
jnp
lahf
pushf
xchg
int
xchg
fldcw
fildl
std
inc
mov
xchg
repnz
inc
rcll
add
ljmp
loop
or
inc
mov
sub
popa
or
stc
call
inc
addb
jns
es
xchg
bnd
daa
pop
jno
test
xor
mov
sbb
cltd
daa
mov
arpl
sbb
adc
popf
add
testb
subb
std
sbb
pop
test
insl
arpl
jns
inc
sbb
rcrl
push
sbb
pop
inc
sub
xor
arpl
jne
aas
lock
mov
and
cmp
xchg
movsb
push
adc
sbb
jnp
xchg
and
fdivr
push
lods
sbb
gs
faddl
mov
dec
ljmp
lcall
adc
jae
jp
les
add
sub
mov
mov
push
inc
push
pop
out
mov
hlt
jbe
xchg
scas
push
movsl
mov
or
add
pop
pop
pop
leave
ret
push
mov
sub
push
sub
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
push
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
orl
movl
xor
add
and
movl
mov
mov
mov
xor
adc
mov
movzwl
sbb
add
addl
mov
jmp
mov
cmp
shlb
jle
jg
jle
mov
popa
aaa
push
pusha
out
mov
add
ret
pop
imul
push
enter
and
shl
cmp
and
gs
in
jle
or
adc
cmp
insb
fdivrl
aaa
sub
push
cmc
sub
fwait
xchg
lods
add
push
xorb
mov
and
or
adc
dec
or
mov
sar
pop
repnz
pusha
fiadds
lods
dec
jge
add
gs
adc
cmp
outsl
ja
xor
je
xor
int
loop
add
dec
mov
into
insl
ret
test
daa
mov
xchg
mov
jl
shl
cmpsb
mov
inc
push
sub
cmpb
jle
or
out
cmp
mov
lea
push
test
add
push
loope
ja
cmpsb
jno
jge
jmp
out
cmp
pushf
mov
sbb
and
jg
mov
jns
sub
xchg
xchg
and
jbe
inc
fisubs
andb
movb
add
add
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
xor
add
jmp
xchg
lcall
pop
jb
sub
xchg
dec
or
and
jle
test
jg
fs
jmp
in
sbb
mov
outsb
ret
lock
inc
jnp
sbb
jecxz
clc
sbb
jecxz
out
out
cltd
mov
loope
push
je
push
mov
cmp
jle
inc
dec
cmc
sbb
rcr
in
aaa
lea
sub
lods
nop
lock
movsl
xchg
sbb
push
push
pop
scas
dec
jns
and
dec
ljmp
mov
scas
mov
add
push
loopne
xchg
clc
ret
push
insb
rcr
test
btr
xchg
add
push
pop
fistpl
cld
mov
pop
ljmp
dec
pop
loopne
mov
push
xor
push
sbb
and
pop
xchg
or
into
push
xorb
std
push
arpl
inc
xchg
leave
push
cmc
lock
jmp
mov
fwait
mov
sbb
mov
jno
enter
dec
pop
add
jae
arpl
xchg
shrb
sbb
sbb
push
lods
das
push
mov
xlat
add
movsb
jmp
xchg
xchg
pop
cmp
mov
cmc
mov
shlb
jmp
or
mov
or
repz
ret
jle
and
jle
jno
jecxz
jno
mov
pop
mov
add
int
xor
push
lds
mov
or
incl
push
and
jae
scas
cltd
sbb
push
test
mov
stc
xlat
rorb
mov
les
insb
rcrb
les
jge
push
pop
lret
xor
mov
xor
imul
addl
xchg
push
pop
stos
les
mov
inc
rcll
sbb
add
fiaddl
jp
int3
xor
jb
add
mov
fists
or
jge
out
sbbl
and
es
insl
cmp
pop
mov
and
jmp
neg
dec
shr
mov
shrl
notl
les
pusha
xchg
pop
ror
mov
mov
bound
inc
jnp
lret
arpl
popf
adc
movsb
pop
and
enter
add
push
repnz
cs
test
bsf
sbb
aas
mov
scas
test
lock
jbe
out
xchg
movl
xor
xor
adc
mov
movl
movl
adc
movl
or
movl
movl
cmpl
je
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
movl
andl
movl
orl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
sub
xor
mov
add
cmp
movl
je
movl
jmp
lock
jns
mov
dec
pop
xchg
movd
jg
jle
push
out
cltd
dec
inc
popa
loop
negl
mov
fldcw
movsl
iret
mov
addr16
fstpl
movsb
scas
mov
clc
pop
rcrb
jl
ja
push
adc
dec
pop
les
jb
adc
xchg
and
mov
cli
fwait
test
cltd
push
pop
imul
pop
or
push
xchg
pop
decl
and
sbb
mov
repz
sbb
push
sarb
ljmp
aad
lea
pop
push
lahf
push
sub
xor
cmp
push
scas
data16
push
fnsave
push
sbb
idivb
jbe
sbb
movsb
inc
inc
addb
mov
sbb
pop
xor
mov
addr16
xchg
mov
pop
scas
mov
dec
mov
stos
out
test
imul
mov
mov
sti
xchg
xchg
addr16
outsb
fildl
xor
fildl
cmp
mov
into
pop
pusha
das
push
leave
mov
in
push
stos
push
cmc
jmp
dec
cmpb
xchg
and
mov
nop
cld
sbb
dec
sbb
push
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
adc
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
mov
dec
mov
jmp
mov
orl
sub
adc
mov
adcl
xor
sbbl
add
movl
cmp
movl
jb
mov
sbb
mov
mov
or
xor
xor
movl
add
dec
add
dec
imul
sbbl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
sbb
mov
incl
sub
movl
cmp
movl
ja
mov
movl
xor
addl
add
movl
jmp
mov
sbbl
mov
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
jmp
add
mov
inc
popf
imul
ljmp
jle
adc
inc
mov
push
jp
test
jo
xchg
inc
lcall
sub
lods
lret
adc
cwtl
mov
or
ja
clc
lahf
xor
nop
dec
inc
ds
jecxz
out
das
addr16
xchg
movsb
adc
aas
lods
add
dec
push
xor
sti
inc
push
mov
int3
pop
in
mov
fistpll
loopne
xor
lods
scas
fs
mov
je
loopne
xor
outsb
out
add
jle
aas
out
xor
lock
into
sbb
stc
dec
sub
cwtl
inc
stos
insb
mov
jmp
pop
pop
xchg
add
push
ja
std
and
dec
xchg
loope
shll
data16
imul
push
int
dec
pop
xor
mov
sub
add
fldenv
movsl
mov
cld
dec
and
sbb
jbe
mov
and
jb
les
cld
mov
shll
cmp
dec
aas
test
sub
mov
outsl
mov
cmp
or
imul
pushf
shrl
jge
xor
add
add
imul
mov
jmp
jbe
xchg
call
adc
in
lahf
or
jle
negb
test
or
dec
shll
std
sbb
fidivrs
aas
negb
outsb
arpl
cmp
pslld
and
xchg
vmovsd
jnp
cs
mov
mov
mov
or
mov
cwtl
mov
or
push
rorl
mov
mov
cwtl
andl
out
xchg
cmp
fisubrs
insb
daa
mov
mov
xchg
pop
call
in
fucomp
outsl
cmp
push
fildl
les
arpl
xor
pushl
notl
popa
adc
aad
rorl
xchg
mov
call
movsl
mov
add
gs
inc
imul
xor
sub
mov
shll
and
rcrb
lahf
or
mov
xor
bound
sub
dec
xchg
jbe
and
adc
loopne
enter
imul
lcall
pop
push
lret
sub
sub
mov
mov
jecxz
stos
ret
pop
addb
fsubrp
pop
out
jge
jns
or
sbb
push
and
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
jmp
lock
xchg
mov
and
mov
add
and
jle
leave
sub
mov
mov
mov
add
das
sbb
adcb
scas
sbb
jb
out
inc
fists
and
jo
pop
lods
test
stc
stos
sub
sub
icebp
leave
mov
mov
loope
pop
mov
and
shl
push
jnp
std
stos
mov
xor
sbb
rol
in
bound
add
fs
sti
nop
fisubs
cld
cld
jno
outsb
repnz
in
sub
and
push
out
xor
or
pop
inc
xor
dec
loopne
call
hlt
lds
fdivrl
mov
call
dec
jno
leave
into
or
fisttpll
cwtl
fcomi
int3
sbb
or
jmp
out
movb
ljmp
pop
and
cwtl
insb
fiadds
or
dec
es
sbb
dec
jns
xchg
int
cmp
and
cmp
mov
ss
add
xchg
fs
mov
inc
nop
add
movl
mov
movl
movl
mov
jmp
daa
mov
in
dec
push
push
cmp
aam
scas
jne
jle
and
jle
lret
mov
jl
push
daa
fucomip
mov
loopne
adc
movd
cmp
jmp
mov
ret
adc
inc
outsl
addr16
mov
xchg
sub
pop
jne
push
mov
mov
add
mov
fists
mov
pusha
rclb
cli
out
mov
push
lret
inc
or
add
int
scas
sub
lods
sub
mov
gs
sbb
xor
out
in
mov
sub
test
lock
outsl
push
xor
pop
std
pop
imul
add
pop
aaa
aas
mov
shl
xchg
mov
cmp
lahf
sbb
test
data16
ss
cmp
cmp
lret
movq
fidivrs
stos
dec
testb
push
dec
xorl
cld
rorb
xlat
addr16
pop
pop
and
pop
cwtl
pushf
sbb
loop
ror
cmp
inc
arpl
mov
jmp
jae
insb
push
xchg
imul
lea
jns
out
mov
loope
mov
shr
dec
add
add
sti
mov
stc
repnz
sub
and
jle
mov
or
and
jb,pt
cltd
test
fildll
mov
lahf
add
test
pop
push
fsubrl
aaa
mov
inc
xlat
jmp
nop
imull
sbb
addr16
mov
sub
stos
xchg
sbb
sbb
in
iret
insb
int
movl
push
or
jecxz
notl
nop
cwtl
stos
pop
shl
lret
or
nop
or
out
pop
push
cmp
dec
daa
dec
jae
dec
mov
mov
popa
add
xchg
push
mov
cmpsb
fimuls
sbb
and
aad
adcl
sbb
js
test
cmp
mov
sub
xor
sub
popf
adc
test
mov
xchg
movsb
cld
nop
ljmp
inc
sub
cwtl
data16
cmc
fldt
cmp
ja
xchg
xor
and
arpl
addr16
faddl
sbb
mov
ret
pop
test
dec
adc
pop
xchg
clc
out
add
shlb
sub
add
xchg
movsl
adc
cltd
dec
mov
dec
daa
mov
shr
pop
add
add
add
mov
mov
mov
mov
xor
add
jmp
mov
scas
pop
popa
cmp
xor
jecxz
jle
and
jle
cld
lcall
pusha
js
cmp
sub
inc
xchg
sub
faddl
lret
negb
dec
adc
or
inc
push
stos
out
pop
cmp
jne
cmp
lods
ljmp
mov
or
xchg
addl
bound
dec
fdivr
dec
dec
or
incb
in
int3
fimuls
pop
push
mov
loope
jns
roll
adc
dec
testb
popa
push
push
rcrl
pop
xor
scas
fdivl
cmpl
enter
dec
cld
add
addr16
xchg
pop
xor
cmp
sahf
jecxz
cwtl
clc
dec
lahf
fs
nop
mov
jge
dec
mov
inc
cmp
lret
sbb
mov
jle
and
mov
into
xchg
iret
inc
xchg
or
sbb
pushf
mov
into
xchg
cwtl
es
mov
add
xchg
inc
in
mov
sahf
adc
xchg
add
lds
enter
mov
stc
cmp
pop
adc
push
rep
ja
pushf
adc
aas
mov
mov
mov
mov
mov
xor
add
mov
jmp
stos
out
pop
sbb
test
leave
ss
pop
jle
and
jle
xor
repnz
lds
push
sbb
mov
out
mov
nop
sbb
jb
sbb
test
sbb
or
adc
pop
shll
enter
ds
cltd
into
adcb
out
mov
adc
into
popa
scas
sub
mov
fsubrl
stos
out
sub
test
stos
mov
mov
stos
xchg
push
mov
pop
and
mov
mov
sti
imul
and
jmp
mov
mov
sub
cmp
jb
fcompl
fstp
int
dec
movl
sbb
xchg
lea
movsb
add
push
lock
pop
inc
jmp
cmc
and
lock
xor
int3
in
and
movsb
push
shr
jecxz
mov
mov
xchg
ret
mov
fs
movb
roll
lods
pop
pop
pop
mov
mov
iret
xor
add
xchg
lcall
mov
or
je
out
filds
dec
xor
mov
jmp
jns
mov
dec
js
movsl
mov
lods
loope
out
cmpsb
pop
add
jle
jg
jle
out
mov
mov
or
jl
pop
cmp
repz
adc
mov
test
pusha
push
push
mov
jmp
or
adc
je
call
push
jl
movsl
icebp
ljmp
stos
fld
addl
stc
frstor
xchg
and
mov
jg
jmp
js
cmp
jb
jo
imul
jp
lcall
push
adc
in
loop
cs
pop
clc
add
jg
dec
test
dec
lahf
mov
push
fcomps
into
sub
push
dec
adc
mov
clc
addl
out
sub
jo
xchg
xchg
pop
add
jns
lahf
imul
repnz
push
idivl
push
les
mov
cmc
inc
pop
sub
sahf
lret
cltd
setno
test
sub
leave
fnstcw
call
jb
int
ret
ja
cmp
fdivr
pmaxub
outsb
jle
roll
aad
nop
icebp
in
ss
jge
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
jmp
hlt
jae
pop
mov
pushf
sbb
dec
mov
rolb
jle
and
jle
out
mov
or
inc
push
inc
lret
mov
ja
add
xor
mov
lret
lods
xor
subb
adc
addb
mov
inc
sub
mov
inc
leave
imul
inc
dec
outsl
mov
inc
test
bound
pop
in
xchg
test
test
sbb
push
inc
cmp
iret
xchg
xlat
iret
stos
cs
sub
dec
mov
or
adc
cltd
cmp
adc
push
lret
mov
inc
ljmp
push
push
ret
scas
and
jno
rcl
loope
bswap
adcb
movsl
inc
mov
sbb
mov
add
push
cli
ss
lret
cmp
inc
xor
cmp
add
pop
dec
jne
aaa
jl
test
mov
lods
sbb
mov
sbb
outsb
sbb
cs
cwtl
inc
addr16
insl
jnp
in
lods
xchg
out
jnp
sarl
jb
mov
xlat
mov
lea
mov
mov
xor
mov
sub
add
jmp
sub
jmp
sub
pusha
insl
out
aaa
sbb
and
jle
mov
popf
adcb
cmpsb
xchg
xchg
out
xor
loope
movsl
inc
cwtl
ja
test
sub
jmp
add
loop
popa
lock
shrb
repz
cmp
sub
or
fidivrl
mov
xor
xlat
cli
jb
mov
loopne
stos
loop
cmp
enter
xchg
xor
adc
dec
cmp
mov
cwtl
sbb
jl
push
jno
pop
mov
mov
jns
and
imull
xchg
cmp
sbb
cmp
add
mov
mov
adc
psubq
add
enter
test
scas
pop
clc
and
jl
insl
cmp
mov
cmp
mov
cmpsl
jns
shl
sub
pop
daa
cmp
or
ret
mov
aam
dec
mov
cmp
scas
lock
rcll
mov
sub
loopne
or
sahf
rclb
je
in
and
aam
iret
cmpsl
and
cmpsl
loop
insb
inc
js
test
dec
sbb
and
pop
clc
xor
add
imul
cmp
jbe
pop
jmp
push
cld
dec
or
jp
adc
lds
jg
jle
or
bound
jmp
mov
pop
cmc
popf
and
fwait
cli
xchg
push
jne
in
mov
jp
insb
call
cmpsb
jno
pop
sub
xchg
insl
push
js
lret
jo
jno
decl
aaa
mov
lods
scas
inc
adc
jae
repnz
jl
rolb
mov
fs
sti
lcall
push
iret
pop
xchg
outsl
push
out
out
out
xchg
mov
bound
push
sbb
cli
ljmp
mov
sbb
fldl
cld
in
call
xchg
mov
in
jae
cltd
pop
add
mov
cmp
xchg
stos
stc
fdivr
dec
out
fstl
sahf
in
dec
jo
dec
dec
sbb
jne
movsb
fdivrs
cld
movsl
fcoml
or
sbb
subl
pop
adc
repz
push
cltd
adc
mov
jo
imul
xor
xchg
sbb
insb
cmp
push
jp
adc
sarb
lahf
lret
xor
mov
sbb
adc
popa
or
pop
push
push
mov
or
js
pop
leave
ret
push
mov
jmp
jb
test
adc
pop
out
sbb
jmp
or
mov
sbb
adc
leave
push
or
inc
sbb
jle
int3
cli
and
negb
aaa
lods
inc
sub
ja
pop
jge
bound
int3
div
arpl
pop
add
js
pop
test
in
fucomi
dec
sbb
mov
aam
pop
inc
stc
add
movsb
and
fistl
aas
mov
stc
mov
subb
repz
fsubrs
ret
fisttpl
sub
out
setl
pop
stc
mov
orl
into
rolb
sbb
inc
push
pushf
insl
test
ret
push
pushf
rcr
sbb
xchg
xor
out
lahf
cmpsb
clc
test
mov
dec
icebp
adc
jl
xlat
cmp
cmp
addb
jl
popf
fmuls
sub
fdivp
mov
lahf
sbb
mov
push
sti
ficomps
fistpl
dec
sub
xchg
or
adc
sub
sub
test
aas
mov
test
mov
or
sbb
xchg
lcallw
xor
or
loope
test
cmp
int3
jp
sbb
inc
xchg
loope
sarl
sub
mov
daa
leave
clc
mov
add
or
xchg
pop
cmp
xor
adc
sbb
inc
xor
les
push
pusha
mov
pop
push
adc
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
call
jmp
xorl
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
movl
mov
push
adc
mov
xor
mov
push
mov
add
cmp
jmp
iret
in
push
adc
jns
int
les
mov
sbb
jle
jmp
into
push
xor
sub
or
imul
bswap
or
mov
test
mov
and
sbb
lret
idivb
add
loopne
fisubs
inc
lds
mov
nop
and
add
mov
xor
int
test
repz
bound
push
ficoms
arpl
js
pop
mov
adc
mov
and
pop
fistps
and
mov
mov
leave
xor
mov
adc
dec
jg
fadd
js
sbb
push
mov
and
rcrb
hlt
cmpsb
xchg
xchg
in
mov
in
shlb
mov
add
test
movsb
mov
inc
addb
cs
push
popa
ja
xor
mov
adc
cltd
mov
daa
inc
cmc
cmp
stc
je
outsl
jb
mov
push
jg
imul
add
aad
add
mov
adc
sbb
mov
xchg
jnp
fs
sbb
mov
mov
pusha
pop
call
mov
or
add
call
push
fwait
dec
out
rcrb
sbb
adc
mov
jp
iret
imulb
je
jmp
in
pop
jg
cmpsl
insl
in
imul
sbb
jle
jg
jle
xor
int
scas
sbb
imul
dec
sub
pop
adc
pop
mov
push
inc
ficomps
mov
mov
popa
ss
cmp
cmp
or
jmp
adc
pop
in
orl
push
xor
cmp
ret
mov
lea
outsl
lahf
les
xor
xchg
mov
loope
xor
xorl
aad
inc
mov
sahf
fnsave
fmull
push
lods
stos
push
mov
scas
scas
mov
movaps
inc
insb
repz
push
and
test
clc
in
lcall
je
push
arpl
andl
shr
dec
std
inc
jp
ret
aaa
push
aas
xchg
movsb
imul
cmp
aam
mov
jge
das
scas
inc
push
test
pop
xlat
push
imul
cmpsl
mov
jge
adc
xchg
fwait
aaa
andl
outsb
stos
sbb
inc
lret
push
add
es
adc
ss
aad
je
cmp
aas
pop
clc
in
or
adc
or
shl
fimull
inc
mov
push
sbb
in
loopne
aam
hlt
inc
adc
lahf
sub
sbb
repnz
mov
xor
stc
or
xlat
fucom
xchg
mov
mov
xor
mov
sub
jmp
les
add
gs
dec
hlt
sbbb
inc
jle
jle
jmp
mov
out
lock
sbb
push
out
cltd
aaa
adc
popa
adc
pop
ljmp
mov
sbb
mov
int
adc
loope
and
push
sbb
mov
push
int3
jl
adc
add
xor
xor
push
gs
rcr
pop
xchg
add
test
sarl
sbb
gs
or
pop
int
movsl
adc
inc
and
or
push
cmp
sbb
jecxz
pusha
cld
insb
mov
cmpsb
cmp
lret
std
push
lret
in
sahf
inc
test
fdivrs
rcrl
xchg
and
push
dec
jne
int3
push
xor
fidivrl
movsl
mov
lcall
mov
xor
lea
sahf
mov
jl
dec
jp
leave
add
cmp
ficoml
adc
arpl
je
fmull
xor
scas
ret
cmp
out
stc
pop
mov
cmp
xor
inc
or
cmpsb
mov
dec
arpl
mov
lods
idivl
sub
cld
add
dec
enter
mov
mov
mov
push
fnstsw
clc
jecxz
repnz
cmp
sbb
jbe
mulb
lret
scas
inc
cmp
clc
pop
lret
adc
test
push
popf
cld
daa
les
stos
fldt
jmp
xor
add
cmp
ja
push
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
sub
mov
andl
push
andl
pushl
pop
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
xor
mov
xor
jmp
xchg
bound
pusha
ljmp
ljmp
jle
push
cmp
lret
insb
add
add
stos
push
jae
jmp
fwait
sbb
ja
cld
inc
xorb
xchg
test
rol
mov
push
xchg
arpl
mov
ja
pop
sbb
icebp
aaa
push
pop
pop
mov
mov
gs
sbb
mov
dec
stc
cmpsl
test
adcb
inc
test
int
test
pop
sahf
and
in
clc
mov
aad
xor
or
repz
adc
das
out
dec
jo
dec
xchg
in
lahf
cmc
xor
and
mov
cmpb
or
mov
jb
fsubl
es
scas
pop
pop
dec
sub
aam
shl
or
and
xchg
idiv
fstps
movsb
movsb
jne
push
xor
cmpl
mov
xor
mov
xchg
fnstcw
fsubl
dec
xchg
into
xchg
mov
xchg
lea
sbb
out
lcall
not
inc
mov
stos
fbstp
xor
frstor
adc
sub
dec
and
jle
xlat
outsl
bound
pop
lock
popa
inc
pop
jecxz
jns
fisttpl
cmp
leave
inc
add
sub
jp
jb
push
into
jp
jae
pop
jns
test
sub
adc
cmp
movl
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
jmp
icebp
mov
mov
cmp
add
fdivrl
jle
and
test
enter
rclb
in
je
sub
jno
shrl
push
out
adc
jbe
sbb
aas
mov
xchg
lds
test
mov
out
mov
loopne
leave
mov
in
cltd
data16
pop
jae
dec
subb
push
add
mov
stos
mov
inc
repz
add
lock
popl
sbb
adc
adc
xchg
pop
lea
int3
nop
popa
jo
lahf
ljmp
pop
push
stc
in
ss
lcall
sbb
mov
das
fildl
inc
roll
xchg
sbb
jno
mov
inc
adc
jmp
paddb
pop
adc
jnp
outsb
mov
lcall
popa
push
xchg
pop
aas
shrb
mov
lahf
es
stc
inc
add
cmpsb
bnd
adc
pop
mov
aam
mov
pop
std
xor
mov
adc
dec
bound
jo
lcall
in
lock
aad
bound
or
xchg
dec
jl
dec
mov
cwtl
cmp
les
ss
insl
imulb
movsb
xchg
in
mov
cmp
cmp
das
lock
push
sti
in
sbb
into
push
sub
roll
mov
mov
jmp
and
pop
xchg
adc
arpl
and
push
jle
fdivrl
jle
inc
mov
fdivl
adc
pushf
cmp
pop
int3
cmc
dec
adc
out
rol
fs
lds
test
jb
inc
rol
into
decl
pop
sti
sarb
jne
int
fcompl
xchg
stos
pop
mov
loop
pop
imul
push
xchg
aaa
aam
cli
ret
mov
popa
push
popf
push
cmp
pop
addr16
xchg
movsb
ja
fcmovb
mov
mov
and
mov
jns
stc
adcb
jmp
or
test
xchg
pop
xchg
sub
adc
mov
popa
imul
dec
jb
je
das
or
in
add
mov
xorb
das
mov
cli
lock
push
repnz
leave
insb
add
mov
mov
adc
cmpsl
ja
adcb
xchg
xchg
popl
test
mov
std
lods
mov
dec
inc
jmp
mov
sti
pop
xchg
pop
lcall
cmp
xor
enter
inc
mov
or
sbb
mov
mov
sub
mov
adc
lods
pop
cmpsl
sbb
ret
jg
pop
insl
xchg
xchg
pop
xchg
add
in
dec
sub
sbb
loope
push
cmpsl
stos
inc
mov
mov
loop
lret
mov
mov
roll
mov
jmp
mov
jmp
push
gs
movsb
es
pop
jle
fdivrl
jle
fiadds
pop
inc
cwtl
push
xor
inc
cmpsl
out
push
fstpt
pushf
xchg
pushf
rcl
pop
jmp
bnd
es
sbb
jp
stc
test
or
fxch
push
fiaddl
mov
jns
stos
add
out
add
aad
negl
mov
inc
lret
test
sti
cmp
loopne
sarl
bound
jbe
xchg
pusha
out
fwait
dec
sarb
cmp
aaa
pop
lods
insb
or
adc
push
push
dec
cmp
sub
dec
push
mov
je
fildll
test
pushf
cwtl
test
popa
push
add
mov
jb
jg
cltd
orb
cmp
pop
out
int
dec
mov
lcall
xchg
pop
imul
clc
mov
mov
pop
xor
adc
pushf
jb
cmpsl
pop
add
ljmp
cwtl
or
inc
repnz
shlb
loope
dec
lock
hlt
adc
test
push
loop
ds
inc
adc
pop
dec
jbe
add
cltd
add
push
iret
filds
in
pop
mov
adc
pop
xchg
add
dec
dec
and
call
test
mov
jecxz
shl
lock
aad
push
mov
pop
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
incl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
sub
mov
subl
jmp
dec
pushf
push
in
imul
mov
adc
jle
jg
jle
pop
sbb
jo
cmp
jp
icebp
xchg
push
fisubrl
lods
out
clc
add
bound
and
pop
cld
ds
jae
in
jg
out
pop
sub
xchg
orb
and
sbb
imul
jecxz
or
pop
inc
jge
mov
mov
xchg
sub
dec
sar
cmp
sti
ja
outsb
and
adc
pop
mov
inc
xlat
cs
mov
or
xlat
data16
jnp
les
loopne,pn
out
xchg
in
jecxz
mov
fistps
push
imul
add
lds
mov
sub
inc
std
fmulp
sbb
adc
xchg
inc
test
scas
insl
mov
cmp
mov
add
leave
jg
popf
pop
add
xor
xchg
mov
fdivl
pop
clc
mov
dec
xor
mov
notl
add
mov
or
mov
jmp
sub
xchg
jns
jns
or
inc
std
jge
jle
or
jle
pusha
es
inc
dec
inc
int
mov
pop
adc
out
test
imul
push
stos
mov
aad
sbb
lret
sub
adcb
push
in
jno
and
cld
aam
inc
sub
adc
mov
cmp
cltd
pop
or
enter
pop
aas
insl
adc
add
cmp
mov
enter
xchg
stos
and
sbb
in
dec
daa
stos
mov
xchg
repnz
push
cli
frndint
stc
push
decb
cli
sarb
adc
loope
xlat
and
mov
and
xchg
pusha
jno
lahf
mov
pop
xor
jge
ret
cmp
shlb
or
bound
ss
mulb
push
mov
je
ja
mov
and
sub
mov
pop
adc
or
cmc
jl
ja
sbb
imul
jns
cmp
or
mov
add
mov
movb
lea
and
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
neg
mov
xor
orl
sub
mov
xor
jmp
adc
fs
jmp
mov
or
jle
or
jle
scas
pop
cmp
mov
pusha
adc
and
hlt
xchg
sbb
rcrl
jb
cmp
xor
adc
dec
dec
mov
and
jbe
cmp
xor
cmp
idiv
aam
xlat
gs
test
lcall
js
inc
sbb
push
addb
in
mov
dec
gs
mov
cwtl
jns
fists
fsts
lcall
gs
inc
mov
cmp
cld
inc
clc
cmpsb
dec
idivb
dec
jb
mov
ljmpw
fucomp
jo
push
xchg
out
stc
clc
push
inc
bound
xchg
cmc
loopne
pop
ds
push
fidivrl
adc
or
dec
decl
cmp
mov
push
cmp
sahf
inc
in
sbb
mov
push
mov
pop
or
cmp
pusha
shlb
jne
jnp
mov
pop
pop
nop
cmp
lds
ljmp
scas
movsb
push
fnstenv
inc
das
cwtl
pop
dec
das
movl
adcl
movl
mov
xor
add
sbb
mov
addl
push
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
push
push
push
push
pushl
push
pushl
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
jmp
sub
fwait
and
divps
add
jg
jle
jp
cli
por
mov
bound
and
and
icebp
xor
and
inc
xorl
jle
in
aad
mov
xor
jmp
test
dec
in
sub
push
dec
sbb
jg
xchg
and
arpl
cmp
jo
add
push
mov
dec
adc
and
enter
divl
jb
xor
fwait
in
xor
aad
jns
dec
sub
data16
adc
cmpsb
aam
rcll
mov
inc
cmpb
outsl
shrl
and
out
icebp
outsl
sub
mov
jg
cltd
adc
mov
mov
fstpl
adc
dec
stos
lahf
jnp
lods
movsb
movsb
and
adc
mov
add
mov
sbb
add
mov
pop
mov
dec
iret
mov
cmpw
addr16
faddp
mov
mov
movsb
cs
dec
xor
add
cmp
je
jmp
xor
cltd
js
popa
cmp
mov
das
ficoml
sub
or
jle
mov
add
repz
cmp
jmp
test
sbb
push
add
xchg
cmp
jno
or
or
sbb
in
in
inc
fcoms
add
loope
pop
adc
mov
outsb
outsb
push
mov
xor
cld
rolb
jmp
aam
mov
pusha
adc
out
stos
notl
fldt
jle
fbld
adc
cmp
and
push
adc
push
lods
lret
push
jecxz
cmp
daa
popf
inc
ljmp
inc
mov
push
sub
xchg
ljmp
fst
aam
push
push
mov
roll
or
stc
imul
fisubrl
cwtl
ret
lods
pop
loope
push
xchg
popa
inc
xchg
insl
mov
fidivrl
enter
loop
inc
and
mov
jne
push
sti
inc
jecxz
icebp
mov
pop
aam
pop
xor
rcll
jge
mov
xor
mov
add
movzwl
mov
mov
jmp
fcoms
sub
clc
fcomps
mov
jle
or
jle
scas
data16
jecxz
ja
orl
mov
fldt
jg
jg
xchg
mov
movsb
mov
xor
movb
push
pslld
into
pop
sbb
js
and
das
xchg
add
mov
bound
xchg
mov
sbb
pop
pop
push
fwait
xor
aas
add
popa
dec
or
in
jmp
and
xchg
add
gs
jmp
mov
push
cmp
cwtl
and
cmp
xlat
les
mov
sub
arpl
inc
xchg
sti
lret
clc
xor
shrl
jmp
mov
in
and
xor
inc
pop
enter
cmpsb
clc
or
adc
and
repnz
bswap
es
test
lahf
movsl
je
ss
xchg
inc
jnp
fwait
aad
lret
mov
or
adc
cmp
mov
sbbb
add
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
jmp
inc
jno
icebp
stc
js
xchg
insb
lret
gs
mov
das
jle
or
jle
add
add
mov
sub
mov
js
sbb
out
mov
and
or
pop
mov
cmp
adc
jbe
ljmp
dec
mov
pop
int
stc
mov
add
xchg
ss
lahf
add
mov
das
mov
fldl2e
fimull
int
push
or
sub
mov
scas
dec
shll
jns
sbbb
push
xor
rcll
out
fwait
mov
movsb
sub
pusha
hlt
jge
mov
popf
cmp
imul
ljmp
ja
rcr
hlt
lods
sbb
mov
outsl
push
outsb
outsb
xchg
xchg
or
mov
dec
dec
cmpsl
inc
pop
add
push
jge
cli
pop
pop
push
lods
in
mov
adc
es
mov
aam
sub
frstor
xor
dec
push
out
data16
xlat
mov
js
rcr
aas
xor
sub
mov
mov
jmp
dec
sub
lock
pop
jb
sub
jle
jg
jle
push
in
pushf
clc
movsb
lret
lds
ss
mov
and
lea
sub
divb
xor
add
andl
xlat
movsl
and
out
add
mov
loop
mov
fwait
pop
dec
mov
rcrl
scas
add
test
mov
adc
addl
int3
cmp
xor
xchg
pop
xor
xor
mov
jl
mov
mov
lret
pusha
pushl
cmp
lret
lds
or
pop
enter
test
out
jnp
xor
push
ret
cwtl
mov
cmc
stos
insb
adc
dec
xchg
mov
bound
fwait
push
jbe
add
pop
insb
jp
mov
insl
out
insb
cmp
popf
and
cld
stos
mov
call
adc
adc
lock
aam
scas
jle
iret
cmp
jnp
fldenv
scas
sbb
and
mulb
adc
cmp
test
in
mov
sbbb
clc
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
jmp
jmp
loopne
mov
jmp
xchg
jp
sub
jle
xor
sbb
add
les
pop
sub
outsl
cwtl
xchg
inc
mov
cmovge
cmp
xlat
dec
gs
xor
iret
pop
fldenv
adc
mov
cld
into
loop
iret
mov
mov
adc
cmp
dec
push
add
jmp
add
push
inc
in
lahf
outsb
mov
push
or
lods
cmc
dec
jo
cmp
mov
push
cltd
cmp
ss
and
cli
jge
cmp
xor
test
cli
es
cmpsl
aam
in
pop
jns
scas
fstl
int3
jge
popf
imul
es
fs
jecxz
roll
movb
in
jl
rclb
fdivrl
fcomps
in
push
cmp
stc
mov
pop
push
imul
mov
or
dec
xchg
jb
je
lahf
ss
rcrl
xchg
push
pop
sbb
mov
jg
jb
lret
mov
cmp
je
movl
lea
mov
mov
addl
mov
jmp
lods
lock
sbb
daa
popf
and
or
jle
jno
mov
ljmp
add
xchg
popa
push
cmp
je
popa
sbb
out
outsl
idiv
inc
push
xor
mov
mov
jae
cmpsl
mov
popa
mov
mov
cltd
inc
xchg
mov
cltd
xor
pop
mov
and
dec
add
mov
mov
mov
aam
out
xor
mov
jmp
add
xor
fsts
pop
pusha
or
jb
xor
adc
nop
mov
push
sbb
sub
adcl
aad
mov
ds
pop
jnp
mov
adc
test
inc
sub
out
sbb
out
mov
andb
xchg
jl
sarb
push
add
je
es
lock
pop
loop
lock
pop
pop
idiv
repnz
pop
jp
fisttpll
sbb
ljmp
das
sbb
jae
add
mov
fimuls
out
push
or
rorl
add
or
inc
std
decl
jmp
or
stc
jecxz
cwtl
jmp
jg
jle
pop
xchg
pop
inc
or
cmp
or
mov
jmp
xorb
aam
mov
cmc
push
movsl
aad
shrl
jp
arpl
xor
mov
pop
rcrl
scas
roll
sbb
xchg
mov
inc
clc
sub
jo
int
hlt
addl
fildl
test
std
fldenv
push
pop
pop
mov
mov
sti
fildll
sub
lcall
xchg
inc
fldl
sbb
lods
cwtl
xchg
mov
jmp
cmpsb
in
cmp
sbb
lods
fldl
add
jp
lods
pop
inc
daa
jne
into
outsl
lahf
dec
pop
inc
pop
sbb
cmp
rcr
and
loop
into
xor
mov
pop
loopne
push
fs
jmp
rorb
loop
dec
orb
jns
andb
push
mov
fimuls
push
jbe
cmpsl
push
xor
jne
ret
jne
lods
scas
push
outsl
movsb
sub
sub
imul
stos
inc
cld
bound
add
mov
pop
leave
ret
push
mov
push
not
movl
mov
mov
add
mov
adcl
xor
add
andl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
sub
xor
adc
push
add
mov
mov
add
xorl
mov
mov
mov
sub
xor
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
mov
mov
mov
jmp
andb
xchg
xchg
mov
xchg
xor
in
jle
cmpb
jae
or
adc
sbb
loop
jae
ja
sub
je
mov
sbb
stos
jb
js
mov
jmp
rcrb
dec
cmp
aaa
test
push
iret
in
bound
jl
adc
pop
gs
in
dec
int3
fwait
push
push
das
test
dec
xchg
int3
cli
adc
outsl
lds
leave
in
jge
outsl
dec
in
pop
mov
js
inc
ds
fcomi
add
sbb
aaa
dec
bound
sub
das
sahf
mov
adc
adc
jmp
es
mov
les
xor
and
cmpb
aam
out
mov
push
xor
fwait
pop
dec
lock
mov
adc
xchg
in
dec
cld
out
icebp
ds
pop
or
push
xor
jg
negl
scas
imul
sbb
push
rorb
and
pop
pop
repnz
mov
dec
cmpsl
das
cmp
int
push
xchg
pop
repz
jnp
jp
in
xor
and
sub
cmc
aam
dec
cwtl
pop
sub
cld
xchg
inc
insb
das
mov
arpl
shrl
mov
push
xor
add
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
jmp
test
pusha
test
cmp
and
push
jg
jle
addr16
nop
addr16
repz
in
pmulhuw
dec
dec
jno
jb
js
inc
xor
arpl
jle
mov
hlt
jmp
mov
ja
pop
inc
mov
or
mov
incl
add
in
or
jnp
lds
jp
mov
sbb
ljmp
int
rorl
xchg
int
or
outsl
add
pushf
adc
jne
push
inc
sub
loopne
add
sbb
bound
adc
or
mov
dec
mov
ja
and
ds
rorl
sub
inc
std
sub
xchg
fldz
sbb
fadds
ficoms
xor
and
sbb
rolb
sub
xor
loopne
push
popa
aaa
ss
push
mov
mov
xchg
dec
sbb
dec
push
xchg
pushf
imul
into
sbb
test
imul
out
orb
loopne
aad
mov
imul
hlt
clc
sub
cli
out
int
fsubrs
daa
shll
push
sbb
movl
or
mov
orl
mov
movzwl
adc
mov
subl
xor
adcl
add
movl
mov
xor
jmp
push
xlat
lcall
jl
pop
lret
push
jae
es
push
jg
jle
cmc
and
push
jecxz
push
jns
pop
loop
out
shlb
test
xchg
imul
aaa
lret
test
orb
shl
mov
into
cmc
insl
inc
mov
sbbl
mov
or
jae
jp
test
mov
fiaddl
cmp
aam
mov
inc
push
push
xchg
jge
outsl
sbb
and
lods
data16
xor
ret
nop
ja
mov
and
dec
stos
xor
adc
sbb
pop
or
fstpt
loopne
lock
test
push
inc
mov
mov
in
dec
daa
enter
xorl
ds
lcall
mov
add
sub
notl
sti
test
sub
pusha
mov
cmp
xor
pop
cmovg
fisubs
push
mov
lcall
inc
scas
cmp
bound
orb
fildl
adc
bound
ret
into
mov
push
cs
mov
xchg
into
test
cmc
rol
cmp
inc
adc
and
add
add
mov
inc
mov
cmpl
jne
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
mov
mov
jmp
add
cmp
jns
gs
movsb
or
push
insl
daa
jle
push
jg
jle
rcl
pop
mov
cli
mov
cmp
jmp
adc
shrl
jl
mov
inc
xorl
rcr
xor
out
push
fstl
lea
scas
test
inc
ja
not
push
rclb
bound
cmpb
test
mov
loope
mov
jae
mov
or
adc
dec
repz
mov
pop
xchg
rorl
xor
sbb
sub
push
pop
or
sbb
mov
gs
dec
into
lcall
enter
pop
icebp
fsubs
cmp
sti
fnstsw
fmuls
sbb
enter
andl
loop
loopne
cltd
xor
sbb
scas
orb
je
jle
mov
daa
lock
mov
pop
pop
inc
or
jmp
pop
les
or
xchg
dec
xor
stos
push
sub
mov
ss
aaa
xor
xchg
nop
xchg
test
shll
xchg
xor
or
bound
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
leave
ret
push
mov
sub
orl
push
incl
push
mov
subl
push
push
xor
adcl
push
adcl
mov
xorl
call
cmp
je
xor
jmp
push
mov
mov
push
adcl
push
andl
push
andl
lea
mov
andl
push
negl
call
adcl
mov
mov
test
movl
je
notl
pushl
adcl
call
addl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
xor
shll
and
inc
mov
imul
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
add
or
mov
movl
mov
cmp
movl
jne
movl
inc
movl
cmp
jb
andl
push
subl
call
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
shll
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
and
mov
inc
imul
mov
mov
xor
mov
or
movl
mov
mov
mov
cmp
jne
inc
movl
cmp
jb
xor
sbb
shll
and
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
mov
xor
imul
mov
sub
mov
and
or
mov
mov
movl
cmp
jne
movl
inc
cmp
movl
jb
xor
andl
xor
add
inc
mov
cmpl
jne
pushl
call
cmpl
jb
addl
shll
and
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
push
push
push
call
jmp
mov
imul
mov
or
mov
mov
movl
cmp
movl
jne
inc
cmp
movl
jb
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
push
call
mov
dec
mov
jmp
mov
mov
sub
imul
xor
shll
and
or
mov
xor
imul
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adcl
mov
or
or
mov
mov
mov
movl
cmp
jne
movl
inc
movl
cmp
jb
xor
orl
shll
and
and
mov
adcl
imul
adc
mov
xor
or
xor
or
mov
mov
movl
cmp
jne
movl
inc
movl
cmp
movl
jb
sbb
xor
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
shll
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
neg
and
mov
neg
imul
xor
mov
adc
or
mov
mov
mov
movl
cmp
movl
jne
inc
cmp
movl
jb
xor
shll
and
mov
imul
mov
or
mov
mov
cmp
jne
inc
cmp
jb
inc
cmp
jb
mov
mov
movl
lea
mov
lea
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
cmp
mov
je
mov
xor
add
imul
mov
jmp
xor
jmp
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
or
movl
add
mov
mov
addl
add
sbbl
xor
cmp
movl
jne
mov
mov
add
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sub
push
sub
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
sub
movl
jmp
jmp
aam
push
pop
jnp
fwait
jne
fildll
jle
jg
jle
mov
mov
jb
mov
insb
mov
push
jmp
or
push
xchg
out
out
out
inc
pop
aaa
insl
jecxz
fsubs
and
add
sbb
sahf
xchg
aad
pop
ljmp
push
pop
gs
and
pushf
addr16
jbe
sti
shrb
je
sti
cmp
rcrb
outsb
jecxz
mov
in
mov
xchg
inc
jne
repnz
lcall
push
cmpsb
ret
loop
add
jg
jbe
mov
push
pop
in
popf
xlat
popa
inc
ror
jo
outsl
pop
xorl
mov
mov
sbb
cmp
fistpll
cmp
je
sbb
pop
push
lret
fldenv
push
adc
call
cmp
fimull
aad
ja
imul
in
lcall
adc
add
or
cmp
mov
loopne
push
rorl
pop
test
int
and
popaw
popa
lret
mov
mov
clc
mov
das
aaa
mov
xor
gs
cmp
push
xor
js
inc
fldt
push
daa
jecxz
setns
jnp
andl
or
rcll
push
mov
push
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
call
cmpl
jb
mov
xor
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
jmp
addr16
mov
jl
arpl
pop
dec
add
jle
lds
jle
lds
push
addr16
jl
mov
adc
dec
test
les
jge
cmp
cli
jb
xor
dec
in
xor
icebp
call
pop
cwtl
push
outsl
stos
dec
mov
daa
push
xor
jb
and
dec
push
stos
into
movsl
in
cwtl
xchg
js
mov
mov
mov
repz
jo
mov
mov
fnstenv
sub
lret
into
and
ret
das
les
negl
xchg
sbbl
fbstp
out
lret
sub
adc
lret
stc
or
jnp
push
jo
push
popf
and
inc
push
pop
imul
inc
jle
addr16
repnz
ljmp
add
sub
scas
sub
xchg
int3
sub
push
or
fdivr
or
mov
sbb
jl
iret
sarl
mov
jl
in
dec
addl
int
repz
sbb
adc
push
add
pop
icebp
aas
sbb
inc
add
int3
push
cmp
jbe
orl
cmc
adcl
sti
mov
fmul
test
dec
sub
test
fiadds
add
and
dec
out
pop
rdpmc
ret
add
jmp
jg
add
jns
cmp
sub
jle
lds
jle
stos
add
les
cli
mov
dec
leave
test
sbbl
inc
lods
add
inc
es
leave
scas
jbe
in
xchg
std
shlb
push
push
es
fbld
das
and
dec
ljmp
sbb
addl
xchg
movsb
idiv
lock
mov
sub
inc
leave
hlt
dec
jl
ljmp
dec
out
cmp
pop
mov
int3
dec
dec
mov
test
dec
icebp
adc
xor
jmp
mov
nop
inc
mov
sub
movhps
or
pop
push
cli
mov
ja
imul
adc
fnop
and
je
test
sub
outsb
jmp
mov
dec
mov
popf
cs
pop
bound
xor
out
test
xor
jmp
mov
push
jmp
bound
or
jns
ljmp
push
jecxz
dec
jb
insb
sub
lds
ss
push
xor
fldcw
das
shlb
sbb
mov
dec
loop
out
and
cmp
and
mov
fcompl
jmp
pushl
pop
cmpsb
xchg
xlat
cld
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
jmp
push
mov
sub
cmc
sub
cmp
push
sub
jle
lds
jle
cmpsl
fs
jno
xor
jle,pt
xor
jb
cmp
jge
mov
push
es
sub
push
leave
loope
jecxz
aam
push
mov
xor
dec
inc
xor
inc
lds
ret
dec
and
movsl
push
lock
subl
pop
in
lea
cld
add
ret
push
stc
popa
stc
mov
xchg
pop
notl
pop
sub
les
sbb
insb
jno
jns
inc
mov
pop
inc
sub
cmpsb
adc
push
lcall
jmp
mov
mov
test
and
sub
ret
dec
pushf
xor
mov
int
leave
icebp
out
leave
mov
scas
popf
push
insb
aad
mov
push
cmp
sahf
out
sub
xor
cmp
test
ficoml
add
scas
add
jno
iret
add
push
dec
inc
repnz
xchg
lret
aad
mov
and
mov
fwait
add
mov
sbb
jmp
dec
std
jge
inc
fsubr
sbb
pop
lret
or
mov
lea
xor
xchg
nop
lock
and
ljmp
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
addl
movl
movl
decl
mov
push
mov
xor
xor
jmp
je
jg
addr16
test
popa
leave
jae
jle,pt
mov
jle
lods
popa
adc
xor
ds
loop
jmp
je
sub
jnp
fdivrp
mov
imul
lds
mov
in
rolb
inc
xor
mov
mov
out
mov
cmp
test
cs
mov
fwait
xor
arpl
jg
mov
cmp
cmpl
pop
cmp
sbb
roll
outsl
cltd
and
sub
dec
jno
pop
jo
inc
mov
roll
adc
jne
test
or
mov
sarb
stc
jae
sahf
sbbl
data16
cmp
fsubr
cmp
jno
adc
xor
add
andl
mov
movl
mov
addl
push
push
orl
test
je
mov
mov
mov
movzbl
and
imul
sub
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
or
mov
mov
movl
xchg
mov
mov
or
sub
and
xor
adc
mov
mov
add
mov
and
jmp
scas
mov
imul
pop
pusha
fisttps
ror
leave
aas
jle
mov
jle
xchg
mov
add
push
in
pop
mov
add
lahf
mov
insl
jle
cmp
mov
sbb
daa
fnstenv
lea
aad
movsb
xor
adc
pop
add
push
in
sub
mov
mov
fiaddl
jnp
popa
in
rol
bound
sbb
pop
cmc
test
sub
popf
cmp
adc
adc
inc
xchg
leave
and
xor
rolb
cs
jmp
call
mov
call
push
inc
loope
push
or
test
insl
iret
stc
lret
js
lret
and
cmp
lods
sub
xor
dec
sbb
test
bound
les
cmp
inc
mov
jp
test
jo
xlat
xlat
pop
jle
out
mov
movzbl
and
jmp
mov
stos
popa
jns
in
mov
xor
sub
cmp
jle
jle
jle
cld
in
adcl
loop
mov
and
sub
js
add
stos
cmpsb
cmp
repz
in
mov
jge
push
sub
mov
loope
popf
mov
or
xchg
pop
clc
and
push
push
mov
jae
and
mov
cld
dec
add
or
xlat
dec
scas
aaa
adc
pop
enter
lret
mov
lret
repz
push
shll
aaa
adc
mov
enter
ss
mov
mov
int
fdivl
mov
adc
test
addb
ja
adc
inc
sub
adc
out
addr16
and
push
pop
leave
cmp
add
std
push
inc
add
stos
inc
add
enter
cmp
add
not
mov
mov
je
mov
xor
mov
xor
andl
add
movl
cmp
jmp
push
pop
popf
aam
fs
test
or
fistps
jle
mov
jle
fwait
push
cmp
xor
add
xor
add
push
icebp
andb
ja
data16
and
loope
push
xlat
sub
or
cmp
sub
pushf
into
fisubs
cmp
nop
imul
repz
push
cwtl
divb
insl
xchg
add
in
pop
mov
jle
pushf
mov
mov
das
int3
pop
call
xor
mov
sbb
stc
jo
in
add
xchg
popf
cmpsb
jmp
std
outsl
loope
cld
sahf
insb
sub
icebp
icebp
mov
lret
jb
pop
ret
jb
sub
jle
pop
pushf
pushf
adc
xorb
sbb
ja
in
insl
mov
push
addr16
and
pop
jne
pushl
movl
call
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
pushl
pushl
push
pushl
call
xor
or
dec
mov
jmp
sbb
mov
mov
not
mov
xor
subl
add
cmp
jmp
add
or
in
loope
js
dec
inc
inc
in
adc
mov
jle
pusha
iret
jnp
adc
fcmovnbe
stos
pop
push
push
mov
pop
jbe
mov
add
mov
push
ja
mov
xchg
xchg
pusha
popa
iret
notb
lcall
jge
popl
or
sti
cli
movsl
pop
dec
add
in
test
jecxz
mov
jnp
lock
mov
mov
jg
jno
mov
mov
fbstp
xchg
pop
push
movsb
lcall
inc
mov
xchg
mov
into
dec
mov
mov
inc
ds
xchg
ja
pushf
cli
ja
xchg
gs
fistps
mov
rorb
jb
mov
or
sbb
mov
jo
je
sbbl
pushl
jmp
sti
loopne
lock
cltd
sti
jns
cmpsb
pop
out
push
clc
inc
jmp
jle
jle
js
leave
mov
into
jne
mov
and
or
out
rcr
lods
fistpl
adc
add
add
shl
xor
sbb
aaa
out
and
jae
scas
sbb
mov
jb
scas
sub
sbb
mov
aas
fcomps
inc
loopne
mov
aam
lock
in
xchg
dec
scas
mov
add
mov
cmpsl
gs
xchg
sbb
push
xchg
pop
mov
in
and
fsubrs
pop
inc
in
xchg
stos
and
xchg
out
push
shrb
ss
mov
aas
test
fs
leave
cmp
pusha
sbb
je
stos
adc
in
loope
or
in
dec
inc
rcll
out
decl
cmp
mov
mov
adc
mov
adcl
xor
add
movl
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
push
push
call
cmpl
jb
mov
mov
movzbl
sbb
mov
xor
or
xor
xor
sub
sub
mov
subl
mov
addl
add
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
add
jmp
mov
or
pop
pop
aas
mov
cwtl
test
xor
mov
jle
ret
sahf
sbb
xchg
cld
aas
aas
xorb
inc
push
ss
xor
out
adc
xchg
push
loopne
xchg
dec
sbb
jp
stos
dec
es
aas
dec
push
test
push
mov
fldt
iret
imul
movsl
rclb
xchg
movsb
push
ret
add
mov
cmp
dec
xor
loop
pop
pushl
mov
lahf
fsubrp
pop
xor
je
in
fstps
repnz
stc
xor
mov
sub
pop
jno
inc
sub
mov
cmc
imul
cmp
jl
sbb
lock
dec
scas
adc
js
push
call
decb
in
mov
add
xor
mov
mov
mov
add
jmp
pop
pusha
pop
movsb
jns
out
cmpsb
push
jg
out
scas
inc
xchg
jle
mov
jle
mov
nop
xor
xchg
pushf
nop
jnp
inc
cmc
fwait
loop
jb
mov
xor
sti
pop
sar
adc
fs
adc
rcrl
pop
lcall
dec
fcomip
je
fisubrl
add
push
out
jge
sbb
mov
lods
out
adc
arpl
push
push
pop
dec
or
push
std
fists
testb
cmp
lods
in
icebp
mov
mov
lea
cmpsl
xchg
daa
push
and
mov
addr16
push
push
adc
insl
movsl
mov
push
push
xlat
leave
push
rorb
mov
sub
xchg
xchg
into
ljmp
push
das
add
int3
stos
rorl
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
jmp
test
scas
pop
cmpsb
jns
and
lock
jle
mov
jle
lods
adc
inc
mov
loop
mov
in
sbb
inc
ret
inc
pop
inc
sub
inc
adc
xchg
mov
adc
aad
add
pop
xchg
and
jle
xchg
jl
mov
js
push
data16
xchg
lea
cmp
fs
nop
xor
arpl
dec
jmp
aas
arpl
sub
cmp
testb
out
sub
lahf
xchg
jl
cmp
push
sbb
cmc
xor
mov
movsw
cmp
jp
push
inc
andb
cmc
xor
out
lock
fimull
cmp
xor
pop
push
jmp
pop
xor
aad
outsl
sti
xor
bound
mov
dec
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
jmp
pop
imul
mov
jnp
push
pop
and
cltd
xchg
jnp
mov
jle
mov
jle
inc
out
pop
cli
popf
push
xor
jmp
cmp
sub
sbb
dec
mov
leave
jne
leave
movsl
sub
xor
xchg
push
mov
inc
or
and
add
testl
rcll
dec
imul
add
xchg
jp
pop
aaa
repz
cmp
mov
into
pop
lcall
push
add
push
hlt
fsts
outsb
aaa
cwtl
loop,pt
push
in
dec
and
cli
shlb
test
leave
hlt
xor
sbbb
jbe
stos
mov
sub
insl
pop
into
test
leave
pop
jge
scas
and
mov
fistps
test
sahf
mov
jmp
insb
dec
clc
imull
lcall
xchg
dec
mov
imul
sub
mov
mov
mov
jmp
xchg
adcl
mov
insl
add
xchg
sahf
shll
jle
jle
jle
shll
or
daa
xchg
dec
fldenv
mov
inc
iret
mov
jns
cmc
dec
hlt
mov
out
dec
fistpl
add
jg
leave
mov
push
inc
gs
jge
les
jl
out
lea
dec
loopne
xor
gs
or
mov
xchg
sahf
sbb
repz
jp
sbb
push
and
in
xor
in
jb
mull
and
adc
jecxz
sub
jg
stos
xor
cs
inc
sub
int
ds
jae
inc
pop
xlat
negb
out
sbb
add
dec
imul
lret
cmp
sarl
ret
or
add
mov
jmp
decl
xchg
jo
js
sbb
jle
mov
jle
xor
or
push
xchg
pop
leave
jno
leave
mov
sahf
push
cmp
and
pop
fbstp
fimull
xor
push
mov
rcl
in
jg
mov
leave
test
jb
push
sub
inc
aam
dec
dec
repz
mov
mov
fldl
out
sub
adc
dec
les
pushf
lds
jae
adc
jge
scas
fcomp
mov
decb
negl
mov
cmp
adc
cmc
or
sbb
sbb
mov
in
cmp
mov
lock
push
xchg
ret
inc
push
xchg
dec
lea
fsubl
dec
in
in
mov
push
dec
pop
mov
mov
loopne
add
inc
loop
xchg
imul
leave
loop
aaa
jle
mov
jle
addr16
ja
lods
push
or
stos
mov
js
repnz
loope
jns
cmp
xor
out
arpl
sub
mov
scas
dec
dec
adc
in
scas
fwait
es
or
test
mov
mov
cli
mov
xchg
pop
sahf
in
and
rolb
fcom
fwait
out
push
jg
jp
add
adc
ret
xchg
pop
arpl
pop
pop
decb
sbb
mov
dec
fstps
mov
scas
adc
push
aas
xchg
ss
mov
cld
mov
adc
xchg
or
sub
or
fnsave
mov
push
push
test
push
cld
xor
mov
lea
cmp
je
mov
mov
mov
mov
jmp
pop
sub
sub
jne
stos
push
dec
faddl
xor
jle
jle
jle
and
cmpsb
negl
popa
and
fcom
out
push
sbb
xchg
cmp
pop
xor
xchg
xor
push
fidivl
negl
mov
rclb
cld
mov
sbb
scas
xchg
pop
xor
add
pushf
push
fs
lcall
inc
orl
bound
sub
out
pushf
push
mov
rcrl
leave
test
mov
and
fwait
outsb
push
bound
xchg
ds
sub
sub
mov
imul
jge
sub
cwtl
into
insl
pop
jg
adc
es
movl
jp
xchg
test
rorb
std
frstor
pop
or
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
jmp
mov
pop
mov
xchg
out
adc
jle
jle
jle
lea
loopne
int
xchg
addr16
gs
cmp
in
bound
sub
push
rclb
and
insl
and
xor
shrl
pushf
mov
sbb
lds
ja
stc
ljmp
cli
mov
sbb
xor
adc
scas
sub
pop
movsl
daa
and
cmp
or
scas
mov
pop
dec
clc
je
shl
lcall
xchg
sahf
outsl
mov
cmpsb
jne
mov
pop
sbb
xchg
iret
add
and
imul
in
insb
stc
ret
lret
cmp
addr16
fisttpll
fsubrl
test
cmpsl
or
ds
mov
mov
lock
jnp
ja
jmp
or
enter
std
decl
add
mov
jmp
mov
or
leave
jns
or
cmp
jle
mov
jle
ss
stos
mov
mov
mov
sbb
mov
fsts
shll
subl
cld
enter
lahf
xchg
and
pop
and
inc
dec
inc
sbb
cmp
inc
out
xorl
ret
jns
in
popa
pop
divl
stos
inc
jae
sub
xchg
pop
in
mov
sbb
and
push
jbe
js
int
in
lret
adc
push
push
push
lret
sahf
call
hlt
out
out
fcmove
pop
jge
sub
mov
xchg
xchg
rclb
in
ljmp
and
pop
push
inc
xchg
arpl
mov
fimuls
push
adc
jae
incl
inc
scas
roll
pop
or
add
mov
xor
lea
add
jmp
sbb
cmp
pop
inc
and
gs
std
or
jle
mov
jle
imul
jnp
jbe
jae
in
xchg
mov
mov
xor
cld
push
test
scas
and
mov
add
popf
jle
pop
loope
lret
cmpb
inc
ss
std
or
adc
and
test
popa
sbb
or
fisttpl
insl
les
icebp
repnz
mov
dec
lea
adc
jno
aad
or
add
data16
inc
cmp
and
in
xchg
out
pop
mov
sub
out
dec
lds
fistps
ret
shrl
int3
adc
ja
mov
shll
fucomi
loopne
add
popa
jno
jnp
jnp
or
sbb
dec
lret
jle
mov
jle
mulb
adc
stc
dec
repnz
ss
add
xchg
or
mov
inc
dec
sbb
bnd
xchg
add
and
adc
jg
or
sbb
sub
pop
adc
xor
out
sbb
mov
and
mov
fldcw
push
jp
pop
ficoms
and
icebp
mov
adc
xchg
insb
push
fistpll
push
xor
mov
sbb
pop
dec
add
cmpsb
sbb
into
inc
add
sahf
mov
loop
test
push
ljmp
mov
dec
movsb
add
sub
rcl
pop
inc
xlat
sbb
nop
fcomi
popf
aas
add
es
cmp
jmp
test
xchg
push
stos
push
push
les
jle
mov
jle
cwtl
std
aam
cwtl
aaa
jl
leave
cmc
xchg
or
push
inc
add
jp
sbb
push
or
cwtl
insl
sbb
and
stos
xchg
cltd
pop
in
mov
lret
jge
nop
mov
andb
or
xor
mov
fnstcw
pop
loop
and
andl
cmpsl
jne
aam
lds
mov
push
sbb
push
pop
jnp
dec
inc
push
in
es
pop
add
pop
mov
dec
cmp
cmc
cmpsb
rorl
jbe
iret
lahf
adc
adc
xchg
fsubrp
cmp
dec
xchg
sbb
stos
lcall
mov
int3
mov
add
imul
test
add
add
add
inc
xchg
sub
xchg
jmp
xchg
out
jnp
jns
add
call
fxch
jle
mov
jle
fld1
xchg
mov
xor
dec
or
lret
fsubrl
push
mov
xchg
lods
dec
xor
push
loope
jle
es
xchg
hlt
adc
adc
lret
imul
in
add
jno
sbb
test
dec
stc
jbe
int3
jnp
jle
sti
pop
add
std
mov
inc
mov
fisubs
jo
pop
and
test
dec
xor
call
mov
xor
repnz
jp
pop
inc
dec
lahf
ljmp
jno
jne
pop
or
adcb
int
arpl
sarb
pushf
fwait
xor
pop
arpl
mov
push
jg
xor
in
scas
roll
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
