mov
mov
ret
mov
mov
ret
cmp
movl
jmp
xor
sbb
add
inc
mov
nopl
jmp
mov
xlat
les
inc
in
mov
in
data16
ljmp
push
aas
inc
adc
rolb
dec
ret
clc
loopne
jmp
jbe
cwtl
lds
and
out
mov
mov
jge
mov
loop
stos
xor
int
popf
inc
idiv
sbbl
out
stos
xchg
pop
cmpsl
cmp
or
sub
jae
adc
dec
ss
mov
jne
lret
push
outsb
aam
jle
mov
cwtl
pop
idivl
addr16
mov
xchg
xchg
cmc
test
dec
stos
mov
mov
sbb
cmp
fwait
mov
fistpll
push
adcl
lret
push
dec
add
dec
outsb
stos
xor
lods
jg
cmpl
push
in
mov
add
fcmovnbe
cld
adc
mov
enter
jae
cmp
fstpl
shrb
cmp
test
add
xor
in
jae
mov
mov
lea
dec
or
jb
mov
mov
jg
ret
mov
push
push
stos
mov
rolb
push
or
rcll
movsb
jbe
dec
inc
fisttps
push
dec
or
jnp
push
sub
or
and
shrb
loope
cld
sbb
sub
inc
loop
insl
jl
insb
ret
aad
fisubs
jne
push
inc
and
or
push
pop
sub
stos
fdivs
push
or
in
mov
mov
cmc
xchg
jns
fdivs
pop
jbe
mov
jmp
addb
and
mov
mov
repz
mov
int
cmp
out
aaa
into
sub
add
inc
int3
mov
in
ret
dec
mov
mov
jle
mov
lret
stc
out
cmc
mov
testb
gs
movsb
aad
fnstsw
ret
mov
stos
push
lret
pop
loopne
sar
adc
jne
and
out
sbb
sarb
or
sti
pop
xor
movsb
and
sub
and
sete
cltd
xchg
movl
pop
jg
je
push
mov
popf
in
or
int
test
lods
add
or
sub
mov
test
inc
sbb
je
push
sbb
lahf
adcl
jge
xchg
dec
xor
test
mov
subb
inc
leave
shrl
rorb
rcrb
or
movsb
lahf
fs
mov
sbb
dec
fadd
sbb
cmc
repz
push
inc
in
stc
mov
in
push
add
cmp
in
push
mov
sbb
dec
pop
pop
pop
xor
cmp
aad
add
jae
sub
xor
sub
in
decb
in
pop
mov
ds
andb
sub
out
bound
mov
fwait
lods
rolb
roll
pop
mov
repnz
xchg
jmp
xchg
pushf
mov
and
pop
adc
or
inc
test
mov
es
sub
out
sahf
mov
mov
pop
mov
mov
add
aaa
sti
insl
in
insl
push
mov
enter
jae
lret
push
push
or
cltd
scas
outsb
dec
iret
shrl
lock
adc
aad
push
mov
fstp
jbe
outsb
loop
stc
out
popf
pop
push
cmp
data16
mov
mov
mov
call
cmp
pusha
jns
into
jle
mov
sbb
mov
push
add
cmpsb
sub
pop
movsl
cmp
mov
adc
cli
inc
and
or
mov
hlt
add
xorb
fnstcw
stos
fstpl
add
sti
test
out
dec
arpl
and
add
ret
add
mov
popl
popf
ljmp
lahf
ds
xor
cmp
cmc
jbe
leave
es
std
mov
or
jns
adc
or
add
push
jmp
mov
mov
mov
sbbl
mov
repnz
or
jle
or
cmc
inc
ja
hlt
shrb
adc
add
mov
mov
xor
jno
adc
bound
jbe
mov
and
scas
lcall
sub
sub
sarb
inc
fistpl
jae
outsb
pop
pop
push
stc
push
roll
call
das
clc
outsl
push
out
and
scas
pop
in
mov
dec
lock
in
mov
mov
repnz
dec
inc
jo
arpl
push
jmp
fbstp
mov
mov
pop
in
fdiv
xlat
dec
mov
adc
aaa
cmpsl
adc
aaa
adc
sbb
jns
shlb
out
aas
cmpsb
sub
sbb
xchg
xor
mov
std
pop
xorb
and
push
notl
add
inc
int
andb
add
jno
push
sub
int
inc
orb
sbb
mov
sbb
adc
pop
lret
mov
in
es
fdivrp
sub
loope
mov
xchg
push
ret
cmp
into
adc
ja
ffree
mov
cmp
iret
dec
pop
add
nop
push
dec
cmp
das
shlb
xor
ss
and
push
push
mov
movsl
cmp
jge
jecxz
cmp
mov
in
adc
adc
int
pop
sbb
jle
xchg
and
fs
dec
stc
adcl
pop
lods
inc
jo
iret
stc
mov
bound
jg
mov
jae
and
adc
and
and
sbb
dec
jmp
hlt
bound
lods
jnp
or
cmpsb
sub
les
ljmp
pop
xchg
fsubrl
push
mov
aas
mov
xchg
push
or
sbb
or
push
sbb
popa
cwtl
in
mov
in
mov
mov
sbb
sti
lods
lret
mov
inc
xor
cwtl
sbb
adc
add
imul
xchg
sbb
clc
sarl
lret
bound
dec
jns
pop
test
inc
mov
mov
jno
push
test
push
movsl
data16
sti
inc
xchg
adc
xchg
into
loopne
test
sbb
inc
push
call
push
adc
sub
lcall
aaa
mov
gs
imul
nop
cli
outsb
xchg
adc
push
sbb
clc
add
lret
sub
cmpl
add
movl
cmp
movl
jae
adcl
shrd
shr
ret
inc
mov
xor
and
shr
ret
xor
xor
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
movl
movl
movl
movl
movl
jmp
cld
xor
test
mov
mov
push
add
pfrcpit2
and
inc
cmp
frndint
inc
loope
cltd
mov
adc
dec
rcrb
inc
mov
ljmp
lock
sub
jle
pop
sub
insb
les
iret
bound
or
mulb
adc
pop
mov
es
cmpsl
xor
aas
push
inc
fstps
aad
sub
loopne
push
popa
insl
dec
shr
xor
pusha
shrl
push
pop
stos
inc
mov
inc
push
iret
nop
ret
pushf
adc
dec
les
les
sub
sbb
std
fmull
pusha
ss
lcall
push
movsb
sbb
ret
das
cmp
imul
test
into
add
add
push
sti
movsb
mov
adc
cmpsl
cwtl
or
mov
jecxz
testl
addr16
jle
cltd
xchg
sub
mov
push
pushl
scas
dec
cli
mov
adc
and
sub
xchg
mov
jecxz
lods
mov
fstps
sbb
mov
cmp
aaa
push
in
add
enter
negl
mov
sub
lock
dec
aam
adc
inc
shlb
mov
popf
add
fcmove
test
lahf
fs
cld
mov
stos
lahf
xor
mov
iret
pop
sub
jl
test
add
adc
aas
jo
andl
test
mov
nop
cltd
pushw
jb
rorl
div
popf
fs
jge
fdivrl
and
test
jmp
push
sub
in
xor
sahf
jb
mov
das
bound
mov
ficomps
sbb
dec
fmul
mov
add
lret
pusha
and
xchg
mov
adc
lock
pop
aas
addr16
imul
hlt
out
je
xchg
add
push
mov
cmp
jle
pop
sub
shrb
loope
addb
scas
outsl
push
insb
mov
cld
in
movsl
xor
adc
mov
pop
cltd
jno
lret
and
imul
jno
dec
mov
mov
ret
mov
inc
pop
enter
mov
lock
cmp
pop
pop
sub
sahf
sahf
jb
push
in
popa
or
sahf
dec
cld
mov
push
enter
jno
ja
and
idiv
push
dec
int3
push
push
repz
jb
jp
adc
mov
pop
cwtl
int
into
out
ret
lea
jge
cltd
pop
imul
xchg
adc
add
sbb
stos
addr16
hlt
les
rolb
dec
int3
sbb
out
sbb
stc
mov
lcall
xchg
or
jmp
push
sahf
mov
mov
add
mov
sub
aaa
clc
jns
mov
sbb
fdivl
mov
sbb
fdivs
pop
popa
adc
pop
xor
movsb
dec
movsl
stos
xchg
jp
jecxz
bound
adc
mov
pushf
mov
imul
outsb
in
xor
mov
cmp
lahf
ret
decb
dec
and
test
seta
scas
xchg
xchg
in
fcompl
ss
int3
in
das
and
lds
iret
pop
sti
movsb
dec
cmpsl
aas
enter
stos
or
xor
mov
clc
mov
xor
inc
fst
lock
inc
dec
gs
cmp
pop
outsl
jecxz
pop
mov
dec
push
mov
xor
dec
adc
add
or
push
lret
add
shrl
mov
xchg
repz
popf
je
sub
ret
ret
dec
push
pushf
out
cmp
rorb
sbb
add
pushf
or
addl
addr16
rorb
mov
lcall
sbb
jmp
pop
and
mov
ret
sub
jo
decl
and
mov
xor
lret
movsb
rorl
sub
inc
mov
cmp
in
fcomps
and
push
mov
xchg
push
enter
repnz
jae
lret
shll
nop
sbb
lea
lret
or
loopne
ljmp
mov
mov
outsl
add
dec
mov
lahf
fwait
jno
push
push
addb
or
pop
arpl
pop
movsl
push
das
negb
sbb
outsl
pop
push
dec
loopne
fistpl
loope
inc
jl
dec
sbb
in
ret
mov
jge
out
rep
test
or
fisttpll
iret
mov
lock
add
movl
jbe
jb
push
out
mov
adc
test
xlat
add
mov
bound
ficoms
int
mov
push
mov
mov
dec
and
xchg
movsb
or
cmp
xor
aam
jne
or
mov
dec
cmp
push
call
std
iret
cmp
dec
lods
push
mov
movlps
cltd
and
cltd
or
movsl
ja
std
xchg
in
add
cmc
push
in
pop
jne
outsl
adc
call
xchg
xor
das
or
sub
lods
fbld
dec
sbb
pop
rcll
outsl
dec
clc
add
pop
xor
pusha
push
call
fsubs
dec
imul
cmp
xchg
daa
jle
xchg
mov
sub
and
cmc
or
insl
outsb
mov
cmpsb
mov
xchg
and
and
jns
lea
pop
jge
or
movsb
lret
test
push
in
pop
not
out
call
adc
xchg
aam
jno
add
inc
fdiv
add
add
inc
fcoml
inc
loopne
arpl
add
ds
add
lds
mov
inc
xchg
inc
inc
das
ljmp
loope
pinsrw
cvtdq2ps
inc
and
cmc
inc
push
ja
test
mov
xor
mov
pop
mov
imul
mov
sbb
sysexit
fcoms
push
push
jo
in
mov
fdivs
shrl
pop
pop
adc
scas
or
cmp
mov
divl
cld
testl
xchg
dec
aad
bound
lea
aam
sahf
sarl
int3
cmc
sti
pop
jne
mov
xor
xchg
add
fidivrs
inc
mov
mov
mov
mov
shrl
pop
repnz
sbbl
rorl
jo
out
sub
loop
mov
icebp
xchg
xlat
adc
mov
inc
ret
and
hlt
cli
inc
pop
cmp
or
jp
and
xchg
out
xchg
stos
in
mov
stos
pop
mov
push
cmpsl
mov
inc
jno
and
test
ret
jmp
pop
mov
dec
xchg
les
mov
mov
xchg
iret
mov
mov
loopne
jbe
xor
xchg
and
negl
xor
dec
sub
pop
mov
in
and
movsl
sti
cmpsl
in
stc
pop
call
adc
in
lds
cmp
xchg
scas
or
mov
fs
fs
mov
and
xchg
cmp
sbb
ds
and
mov
add
push
and
dec
movsl
sub
add
iret
addr16
nop
push
movsl
cltd
in
dec
ss
jnp
add
rcl
dec
sub
jns
jne
and
pusha
sbb
in
aaa
cmp
and
inc
lea
repz
addb
add
pop
sbb
and
push
mov
push
in
and
rclb
jmp
int
jge
insb
dec
push
pop
sti
cs
out
pop
scas
push
mov
pop
inc
pop
pop
scas
mov
imul
aas
cmpsl
nop
cmp
xor
pushf
xchg
cmc
nop
daa
or
push
call
fldl
pop
incb
ja
pop
sub
adc
add
sub
and
pop
iret
call
lcall
sti
test
and
cltd
neg
and
scas
xor
cmpsb
lcall
incb
adc
dec
pop
xchg
pop
mov
and
mov
ficoml
mov
jb
pop
push
daa
mov
mov
add
lods
jecxz
rclb
inc
and
sti
iret
fucomi
cmp
das
xor
push
dec
lahf
mov
mov
ret
mov
mov
pop
imull
push
xchg
std
add
frstor
movsb
nop
push
add
outsl
enter
iret
jg
cmpsb
or
dec
xchg
mov
add
xchg
bound
cmp
nop
cld
jne
or
dec
jge
push
and
inc
out
ret
and
shlb
outsb
jmp
cmp
ds
js
xor
cld
xor
sar
into
arpl
pop
xchg
sahf
in
pusha
xor
push
cmova
loopne
mov
imul
out
cld
jne
xchg
loope
dec
inc
pop
shrl
addr16
mov
mov
mov
movsl
push
mov
jb
testb
mov
test
lret
test
ss
fs
stos
inc
inc
cmp
xlat
std
dec
mov
test
push
leave
int3
ficoms
xchg
sub
inc
cld
sbbl
push
pop
or
push
and
call
lret
mov
cmpsb
scas
clc
xor
xor
sbb
movsl
inc
pop
dec
lods
xchg
inc
mov
mov
or
jbe
mov
cmp
xchg
das
fisttpl
insl
cmpsl
out
mov
mov
out
rcl
xlat
cmp
adc
pop
daa
scas
mov
cli
les
and
or
xor
push
cmp
aas
sub
pop
rolb
dec
int
sbb
xor
mov
mov
sete
cmp
jno
and
in
test
in
mov
mov
pop
stos
push
adc
jo
or
jbe
in
cli
shll
pop
lret
outsl
cmc
push
mov
jno
push
popf
shl
inc
mov
sahf
stos
cmp
xor
sbb
adc
fwait
fwait
into
loope
inc
pusha
shl
fcomps
adc
ret
xor
rcrb
inc
sbb
add
aas
sub
mov
mov
test
push
test
dec
ret
je
test
sub
sub
ss
ja
stos
insb
imul
enter
pop
xor
jo
jnp
cmp
cwtl
adc
xchg
xchg
pop
out
aas
or
adc
or
pop
xchg
subb
mov
and
sarb
pop
add
mov
xchg
jg
push
lods
test
insb
fcoml
mov
and
jecxz
aaa
pushf
cmp
mov
jae
inc
or
cmp
xchg
cmp
ljmp
inc
nop
mov
cmc
repnz
fistps
subl
mov
mov
aaa
sbb
add
adcl
cmp
es
add
sbb
flds
jne
inc
xor
xchg
imulb
lods
mov
push
roll
negl
xchg
not
cli
in
sub
mov
rclb
sub
pop
jl
and
jmp
loop
subw
mov
mov
jmp
mov
cvtps2pd
lods
shrl
jecxz
hlt
adc
adc
and
jecxz
pop
pusha
std
popf
ja
pop
mov
fildll
popa
jb
jne
movl
movl
mov
mov
jmp
pop
inc
sti
and
jbe
pop
js
or
pinsrw
addps
lea
faddl
fistl
int
out
pop
sbbb
rorl
cmc
adc
push
fldl
pop
adc
nop
cmp
xchg
add
negb
and
arpl
test
adc
leave
jbe
jle
lret
mov
jl
sub
and
shrb
or
and
divl
fs
sbb
pop
repnz
jle
push
sub
mov
mov
dec
and
inc
inc
inc
int3
jne
adc
push
sahf
lods
or
xchg
ja
data16
out
cmc
push
mov
mull
adc
sbb
shlb
fnstenv
xorl
push
loopne
cs
das
sbb
sbb
mov
sub
xor
loop
sbb
sar
ret
iret
pushf
cld
add
bound
shlb
hlt
pop
pop
mov
sub
push
outsb
push
cltd
lock
dec
lahf
in
cmp
xchg
mov
mov
cmpl
add
jp
adc
push
fdivs
xchg
insb
push
dec
test
sbb
inc
adc
int3
jge
jns
insb
es
push
inc
cwtl
fwait
pmaddwd
xchg
nop
test
xlat
gs
daa
sahf
rolb
dec
rcll
xchg
and
sbb
bound
stos
ljmp
pusha
push
sbb
xchg
push
xchg
adc
jno
movsl
shl
push
cs
adc
sub
fstps
push
add
hlt
xchg
hlt
mov
jl
sub
lcall
jle
adc
js
std
mov
jg
shrl
push
fwait
xchg
cmp
dec
dec
mov
xchg
int3
cmp
dec
jge
inc
lret
xchg
push
rcr
inc
xor
add
pushf
dec
jns
ja
fwait
pop
add
cmp
movl
push
dec
and
cmp
jae
jno
dec
test
dec
mov
add
pop
inc
sbb
icebp
inc
adc
sub
pop
movsb
sub
js
add
mov
pop
es
loopne
rcl
test
mov
sub
ret
ror
inc
adc
push
dec
data16
xchg
fdivrp
and
inc
in
aad
repnz
js
imul
roll
mov
aas
push
cmc
dec
xor
push
je
inc
mov
out
inc
mov
sahf
cs
insl
and
dec
cmp
cmp
cmpsl
push
adc
divb
pushf
sbb
leave
and
inc
jno
ficoms
lret
jns
int
in
clc
sbb
fs
jg
out
mov
xor
cli
fstpt
js
insb
lret
mov
pop
jns
mov
cmp
mov
mov
lods
cmp
push
cmpsb
outsb
cs
xchg
pop
push
fsub
cld
stos
xchg
aas
aas
jmp
xchg
ss
or
cmp
jecxz
sub
fisubl
dec
push
aam
push
arpl
das
ss
js
sub
stos
arpl
lcall
push
adc
mov
mov
pop
jb
lahf
movsl
iret
je
xchg
orb
pusha
imul
sub
int3
inc
xchg
xlat
push
push
pop
movsb
mov
cltd
jnp
inc
sarl
cld
pcmpeqb
scas
push
mov
mov
les
gs
xorl
jl
adc
fsubrs
dec
fs
inc
jecxz
sbbb
jbe
adcb
ja
aad
inc
cmp
pop
popa
sarb
push
push
fdiv
sbb
dec
mov
cmp
movsb
cmp
inc
adc
xor
push
inc
je
pushf
ret
dec
ja
mov
sbb
daa
and
loopne
loopne
aaa
mov
in
flds
shlb
adc
or
popf
push
imul
repz
dec
fstps
int3
aad
inc
jp
xor
fiaddl
out
push
sbb
lret
gs
sti
popf
mov
ret
dec
push
iret
adc
and
aas
shl
xor
fcom
ret
mov
scas
jne
xchg
xchg
inc
adc
mov
add
sbb
imull
xchg
das
cmp
or
inc
sub
adcl
mov
movsb
cmp
cmp
ss
imul
xchg
cwtl
sub
shl
push
jb
push
adc
inc
mov
jmp
int3
push
dec
popl
mov
sbb
test
jno
les
add
out
dec
ret
in
cmp
fwait
mov
pushf
mov
add
call
mov
pop
lcall
jnp
xor
mov
sub
lea
add
loopne
enter
inc
or
fs
lret
push
pop
ret
mov
sub
or
mov
popl
cmpsb
and
jo
mov
dec
pop
dec
push
or
cmpsl
les
int3
mov
popa
aas
xor
jmp
push
adc
pop
jbe
lock
sbb
mov
shlb
aaa
fstl
divl
clc
movntq
test
xor
pop
xchg
jno
in
icebp
push
mov
push
push
xchg
ss
xchg
or
fwait
test
inc
or
inc
js
sahf
lahf
outsl
sbb
push
dec
pushf
dec
mov
mov
outsb
xchg
lods
mov
orl
sub
jecxz
je
dec
into
out
push
mov
mov
cmp
mov
mov
das
icebp
bound
push
xor
fmul
cmp
fimull
cmp
fs
xchg
in
or
je
or
movsl
push
mov
ficomps
jge
pop
sub
mov
and
xor
imul
mov
push
sub
push
movl
jmp
ljmp
stos
lea
jbe
xchg
pop
js
loop
pinsrw
jb
adc
test
sub
and
pop
lods
je
dec
mov
je
adc
test
in
mov
jl
or
sarb
stos
pop
sub
pushl
outsb
popf
mov
fcmovb
jge
cmp
daa
sub
stos
jae
pop
cmp
dec
mov
push
shll
bound
cld
pop
xchg
movsb
outsb
mov
ljmp
mov
mov
cltd
mov
adc
loopne
add
inc
push
push
dec
add
aas
adc
stos
popa
cmp
or
lahf
outsb
bnd
inc
push
js
fildl
xor
test
and
xor
gs
sub
sbb
mov
cmpsl
stc
mov
adc
jbe
xor
dec
clc
pop
sti
add
sub
push
push
int
mov
xchg
mov
push
pop
daa
stos
jmp
xchg
adc
xchg
out
dec
pop
and
in
insb
dec
inc
push
mov
sub
pop
jb
sti
or
cltd
inc
add
ja
mov
jnp
or
and
push
in
scas
daa
cmp
adc
xchg
xchg
bound
jge
xchg
xchg
push
cmp
ret
dec
or
sub
ds
or
out
lcall
out
popf
aad
mov
adc
mov
fildl
jae
push
aad
pop
sti
sbb
xor
in
ja
mov
js
cmp
jns
lods
addr16
cmp
orl
call
add
js
orb
clc
jae
sbb
adc
movsb
mov
jg
addr16
rcr
outsl
aad
mov
and
sbb
push
popa
sbb
push
xchg
dec
scas
jo
pop
filds
xchg
out
sysret
js
dec
sbb
loope
mov
ret
xorl
vmread
loop
rcll
mov
jp
lret
lcall
dec
lds
inc
mov
jno
mov
sahf
or
sbb
and
sbb
dec
mov
and
push
daa
jmp
sbb
sbb
aad
adc
jno
sub
aaa
outsb
and
mov
sub
test
clc
cmp
vunpckhps
cmpsl
call
popf
jle
rcl
xor
jnp
cmp
stos
inc
cli
in
nop
cmpl
sbb
fdivrs
add
test
popf
fimull
cli
ret
mov
cmc
adc
pop
mov
sbb
fisttps
xor
dec
inc
ljmp
rcl
mov
movq
pushf
ret
add
int
rcl
and
mov
or
test
movsl
inc
mov
ret
sub
and
ss
into
ret
repz
mov
fmuls
cmp
add
adc
mov
test
imul
push
dec
dec
inc
inc
xchg
sbb
mov
scas
add
xor
ficompl
test
ret
inc
or
fmuls
xlat
fldl
arpl
testb
stos
loop
adc
sub
cwtl
shlb
fisubrl
and
dec
fbld
scas
loop
jl,pt
cli
xlat
push
jl
adc
xchg
stc
or
mov
loopne
test
cmp
es
jmp
stos
enter
jecxz
inc
xchg
outsb
test
call
jl
mov
add
mov
push
inc
push
add
adc
jb
aaa
mov
subb
push
imul
inc
lods
decb
xchg
mov
add
pop
dec
sarl
pop
rcrl
push
xchg
scas
xor
sbb
movlhps
push
lret
subb
fmull
ljmp
xor
insl
insb
shlb
stc
mov
mov
aas
das
xchg
jle
das
add
jge
out
mov
std
cmp
xchg
adc
ss
xor
sbb
aaa
push
lea
and
idivb
out
hlt
iret
sbb
mov
mov
shrb
inc
lret
movsl
orb
xlat
das
cmc
les
iret
es
jg
push
jecxz
sub
pop
pop
rorl
js
lds
rcr
scas
or
movsb
sbb
dec
pop
sti
jbe
in
ds
rclb
push
shr
or
dec
stos
or
in
cwtl
push
out
sahf
push
inc
fisubl
test
jno
cs
push
jo
mov
movsb
out
ss
fcoms
and
push
rolb
fistpll
aaa
out
or
push
dec
cli
xchg
ret
sti
insl
ret
data16
cltd
push
hlt
mov
pop
cli
mov
or
jo
rclb
clc
sub
sbb
inc
mov
sahf
cs
cwtl
or
push
xlat
das
jecxz
sbb
dec
mov
cli
aam
stos
fdivrl
mov
insb
std
jge
cmp
lods
cmpsb
outsb
pusha
xchg
inc
pop
rol
jp
enter
ffreep
cli
add
and
in
jns
divb
add
mov
pushf
dec
addr16
lcall
stc
je
pop
cld
sbb
movsb
push
mov
ret
sbb
fninit
pop
leave
and
adc
mov
repnz
call
or
push
stc
xchg
mov
insl
and
sbb
push
mov
inc
push
insb
movl
movl
movl
movl
mov
xor
add
mov
or
sub
mov
mov
and
or
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
xor
jmp
xchg
mov
imul
inc
in
rorb
pinsrw
cmc
inc
aad
or
sti
imul
sbb
ret
mov
mov
out
mov
or
jae
or
cld
inc
rcr
nop
ds
push
jb
mov
dec
rorb
dec
xchg
pop
repnz
enter
mov
push
loopne
call
dec
xor
test
scas
aaa
and
xor
pushl
stos
fiadds
mov
out
xor
test
mov
rcll
pop
xor
in
repz
aam
orb
jno
mov
xor
inc
imul
cmp
inc
mov
enter
adc
shll
pusha
pop
lock
neg
push
mov
cmp
loope
jo
dec
dec
mov
cld
mov
stos
mov
pop
jno
cmpsb
jo
cltd
pop
stos
mov
mov
and
fcmovb
sarl
adc
ret
mov
xchg
pop
sbb
jae
jmp
fwait
movsb
mov
mov
xchg
mov
sub
xor
fldt
scas
into
adcb
je
std
mov
out
and
cmpsl
fimull
xchg
inc
mov
push
test
xor
pushf
loop
insb
cwtl
adc
add
and
add
imul
pop
cmp
shrl
push
negl
gs
dec
pop
std
mov
jno
cmp
imul
mov
in
scas
cld
test
loope
movsl
into
xor
fidivrs
bound
clc
or
bswap
loope
sub
add
mov
aas
in
nop
mov
mov
xor
in
pop
addr16
push
lods
push
pop
push
mull
push
mov
mov
sbbl
iret
mov
pop
das
xor
cwtl
or
pop
divps
int
leave
div
and
xor
insb
or
add
in
sbb
dec
imul
scas
mov
pop
add
xor
xchg
add
or
mov
loopne
orb
js
in
lods
or
jle
cmp
testb
cwtl
pop
fdivr
outsl
cmp
in
in
adc
pop
mov
mov
incl
lock
mov
test
out
out
sbb
xchg
mov
cmp
in
jne
pushf
jno
mov
sbb
mov
xor
xchg
push
inc
fisubs
dec
xor
js
jg
movsb
push
rolb
lock
push
cmp
les
xchg
andl
push
outsb
sahf
pop
cmp
cmp
call
popf
pop
iret
das
sub
call
mov
popa
pop
int
pop
xor
jno
outsb
mov
and
push
mov
or
testl
pop
pushf
fwait
mov
pop
vpaddusw
xchg
lahf
aam
cmpsb
outsl
outsl
aad
insl
cmc
test
dec
stos
out
in
jmp
sbb
fstl
add
in
cwtl
call
cmp
add
pop
addl
addb
and
inc
jmp
mov
int
lcall
adc
mov
add
xchg
xor
mov
and
cli
push
pop
or
test
js
pushf
leave
iret
je
push
pop
cmc
sbb
scas
inc
out
loop
xchg
xchg
cmc
dec
jg
test
je
popf
and
in
loopne
xchg
inc
adc
adc
mov
mov
movsl
and
idivb
push
xor
and
inc
mov
in
out
cmpsb
daa
pop
mov
fstp
push
fistl
xchg
scas
push
cmpsl
sub
mov
repnz
xor
adc
leave
pop
mov
and
or
fmuls
xor
fimull
and
adc
xor
call
sub
xchg
roll
sbb
mov
sub
inc
inc
dec
mov
test
jns
dec
add
jne
pop
ja
sub
popa
mov
or
loopne
loopne
push
dec
les
out
loopne
arpl
xlat
pop
lcall
inc
int
cmp
add
xor
inc
je
std
xlat
icebp
mov
std
add
or
insl
pop
jecxz
mov
jmp
xchg
inc
xor
mov
jno
and
maxps
pop
inc
sbb
xchg
sub
inc
xor
jge
idivb
mov
mov
add
icebp
cs
aad
iret
test
mov
stc
mov
or
fcmovne
xor
sbb
mov
outsl
dec
ret
in
bound
shll
test
dec
jp
loope
mov
mov
push
mov
enter
aam
aaa
pusha
ljmp
inc
cwtl
mov
rcll
fldcw
pop
rcrb
xor
sti
push
mov
add
cmp
cmp
imul
adc
jnp
xor
fmull
inc
lods
js
in
jp
add
jns
in
int3
dec
fbstp
mov
xchg
add
cmp
pop
sbb
adc
xor
rcll
daa
sarb
daa
daa
ret
mov
jbe
push
jmp
push
dec
orb
pop
push
or
dec
jnp
pop
push
scas
js
out
in
push
lods
outsl
mov
fnstsw
sub
pop
xor
sbb
adc
call
inc
ret
mov
mov
jg
sub
movsb
insl
jb
mov
xchg
stos
fnsave
cmp
jne
adc
lods
call
in
mulb
mov
rorl
cltd
jb
add
or
xor
mov
imul
lea
mov
mov
imul
mov
mov
or
xor
div
mov
jmp
push
fadds
sub
push
and
cmp
dec
cmp
push
mov
pinsrw
paddw
int
pusha
add
in
call
xor
lock
leave
rcll
sbb
sbb
mov
jge
mov
adc
mov
dec
leave
pop
mov
pop
pop
or
pop
mov
inc
jmp
adcl
or
stos
sahf
fcmovbe
sub
loopne
inc
jo
out
jge
add
inc
sti
sahf
testl
icebp
out
int3
dec
sbb
stc
pop
pop
pop
jns
push
pop
sti
mov
jnp
adc
clc
les
xor
cmp
mov
and
loope
xchg
mov
or
xchg
pop
std
xor
lds
lea
or
scas
xchg
pop
jmp
push
testb
imul
lock
das
lret
or
jns
xor
mov
test
ficoml
jp
push
mov
jns
pushf
fisubrs
cmpsl
cld
jmp
aaa
ds
sbbb
pop
add
out
scas
and
insb
pop
fwait
cwtl
psllq
inc
mov
inc
push
shlb
scas
mov
pop
lds
mov
push
ds
push
or
push
push
sahf
loope
and
bound
cmp
xlat
loop
fwait
popf
mov
dec
dec
dec
out
popa
in
sbb
and
icebp
xchg
adc
jmp
lret
add
and
idivb
insl
and
inc
clc
push
jmp
inc
cli
inc
push
add
rorl
adc
daa
or
arpl
lock
xchg
arpl
push
outsl
cltd
movsb
insl
cmp
bound
test
mov
outsl
dec
mov
adc
movsl
fdivrp
pop
sbb
or
adc
cmp
sub
cltd
pushl
ror
out
mov
fldenv
mov
or
push
popf
icebp
add
addr16
cs
dec
pop
pop
xchg
lds
push
jb
mov
in
add
push
insb
rcrl
or
sti
push
outsb
xor
add
dec
popa
cmp
mov
adc
dec
xor
pop
test
cli
adc
inc
pop
insb
sbb
mov
lret
mov
cmp
cmp
adc
mov
imul
sbb
lds
cli
and
pushf
sti
inc
cmp
pop
adc
imul
outsb
jno
lds
xlat
and
cmpb
sub
mov
fwait
inc
mov
lds
rcrb
xor
and
pop
ds
lock
and
jo
mov
mov
ja
sbb
cld
add
pop
ret
insb
sbb
mov
xchg
mov
push
loopne
cmpsb
pop
mov
jl
gs
aam
outsb
scas
cmc
adc
aaa
mov
imul
movsb
inc
pop
lahf
lods
sbb
out
cmp
add
fidivrs
cmp
outsb
sarb
or
xchg
ret
pop
jl
sti
xchg
sahf
mov
cmc
cmpb
test
add
das
jb
inc
fneni(8087
hlt
aad
lahf
imull
mov
lods
cmp
cld
daa
adc
pop
push
iret
pop
mov
sbb
lds
or
pop
fldt
xor
mov
int
fld
add
cli
es
or
repz
ja
sub
insb
or
pop
jge
push
cmp
add
add
or
out
push
dec
mov
cmpsl
ret
xor
jbe
ljmp
leave
fbld
ret
mov
or
cmp
sarl
ret
push
aaa
loope
sbb
inc
sahf
push
enter
imul
cmpsl
mov
pop
xchg
adc
repz
into
fimull
dec
je
cmpsl
or
mov
and
ret
jno
lret
repz
jbe
cmpsb
pushw
cmp
mov
and
lods
pop
sub
mov
mov
add
incb
fcomp
xchg
or
xchg
test
out
sbb
cmp
adc
lcall
test
mov
or
aad
cwtl
pop
xchg
xor
test
addb
out
cs
push
or
stos
xchg
shl
xchg
or
je
mov
loopne
xor
sti
xchg
rolb
fucomip
or
pop
hlt
imul
mov
mov
mul
ffree
test
sbb
dec
push
fcoms
xchg
cmpsl
xchg
mov
cld
out
mov
mov
push
mov
mov
pop
testl
jnp
push
in
sahf
cs
mov
test
mov
shlb
inc
leave
or
fstpl
add
pop
mov
push
gs
mov
cmp
fsubrl
sub
jp
outsl
cmpl
sbb
sub
sbb
aad
sub
pop
enter
xor
aaa
shll
and
mov
out
mov
adc
sbb
cli
xor
and
sahf
in
mov
fstps
xor
test
loopne
xchg
or
cmpl
dec
xchg
and
add
jo
hlt
sub
pop
mov
push
in
xchg
sub
orb
or
pop
or
sti
sub
pop
test
adc
clc
scas
notl
dec
inc
ss
mov
cmp
or
dec
repnz
inc
insb
mov
std
cmpsl
jb
or
pop
outsb
outsb
jb
stc
xchg
pusha
adcl
pop
daa
outsb
push
mov
les
jns
test
fdiv
mov
xchg
xor
or
in
add
fcomps
icebp
and
and
sbb
cwtl
movsb
dec
iret
movsl
cs
xchg
mov
insb
cmpsl
sub
cmpsl
xor
loop
test
add
aaa
adc
ret
dec
add
cmp
jb
movl
movl
movl
movl
jmp
xorb
ret
xor
xor
xchg
jmp
data16
pinsrw
mulps
xchg
mov
dec
fildll
mov
inc
rcll
sbb
sub
std
adc
lret
leave
test
pop
mov
push
jns
popf
mov
jl
mov
movsb
add
and
gs
inc
es
enter
enter
stc
xor
sahf
push
cmp
outsl
cmpb
mov
and
or
inc
out
adc
aad
or
or
repnz
stc
sbb
iret
hlt
adcb
ss
xor
xchg
pop
xor
sti
nop
out
or
xchg
mov
xchg
stc
fwait
leave
lahf
aas
pop
movsl
lods
fldt
xchg
aas
idivl
jmp
mov
xchg
rorl
sub
cmp
push
push
dec
les
sub
adc
ret
fwait
pop
cmpsl
out
test
ljmp
or
fcoml
popf
sahf
push
cs
in
dec
out
sub
dec
aam
jg
rclb
push
lods
loopne
push
ss
mov
jnp
sub
bound
roll
call
or
fcompl
aas
push
in
std
adc
lret
gs
add
inc
int
sub
loope
mov
fs
xchg
dec
mov
ret
mov
xchg
sbbb
and
xlat
xorb
and
xor
mov
push
clc
jge
jl
add
addr16
sbb
mov
ljmp
adc
mov
jecxz
fbstp
enter
lds
jmp
xchg
sub
xor
hlt
pop
jg
sahf
mov
inc
lods
insb
xor
sub
sub
pop
xchg
push
outsb
lahf
lock
mov
ja
push
mov
push
gs
insb
fcmovb
pusha
imul
mov
mov
out
xchg
gs
jo
and
sbb
mov
or
fildll
test
orl
xchg
cmpsl
mov
inc
or
call
mov
scas
mov
into
mov
xor
pop
mov
pop
gs
inc
es
out
movsl
enter
notl
pop
mov
jp
pop
fidivrl
in
mov
sub
scas
xchg
xchg
xchg
fwait
add
mov
xchg
fisttpll
aas
ss
pop
xchg
add
sti
inc
add
repz
or
mov
fnstenv
push
cmp
mov
fnstenv
cmp
stc
sub
dec
mov
jae
mov
sahf
sbb
add
mov
mov
or
pop
sar
jae
adc
mov
fwait
cld
inc
fistl
xor
dec
sub
int
movsl
jle
dec
sub
mov
data16
push
add
ret
fildl
addr16
mov
lods
fisubrs
xchg
jge
sbb
cwtl
add
dec
mov
jb
sub
out
dec
mov
les
mov
call
jne
mov
pop
mov
test
or
lret
dec
jl
sub
sub
push
cmp
lea
stc
fadds
xor
and
ljmp
lds
sbb
shlb
sahf
stos
push
imul
jbe
dec
jno
adc
sub
int
cmp
stos
mov
sbb
mov
jns
cmpsl
insl
mov
push
popa
inc
xchg
add
stos
pop
mov
inc
int
add
mov
repz
out
cmp
sahf
sbb
repnz
fsubl
sub
inc
add
jle
addl
les
mov
out
push
dec
daa
mov
pushf
mov
push
mov
pop
jl
push
mov
scas
fstl
aam
ret
sbb
enter
push
push
insb
or
in
cmp
out
mov
test
jns
cwtl
inc
orl
test
dec
xor
mov
mov
fwait
xor
adc
dec
enter
adc
mov
std
xchg
adc
stc
imul
cmp
mov
data16
jmp
adcb
jbe
inc
test
dec
or
fs
repz
sbb
sbbb
fadds
incl
arpl
nop
or
mov
out
fs
jmp
iret
xchg
lret
mov
les
icebp
jns
sbb
incl
jns
call
push
inc
pushf
inc
xchg
xchg
cmp
das
loop
into
jmp
dec
add
jmp
pusha
xchg
lahf
dec
xlat
xor
pop
push
in
test
mov
js
movsl
mov
sub
adc
xor
jp
out
pop
test
jl
mov
adc
fbstp
in
xorb
fs
xor
mov
mov
xor
mov
push
fmull
pop
xor
jmp
idiv
mov
and
call
mov
push
daa
pop
andb
cltd
pop
jecxz
mov
mov
add
mov
xor
lods
pop
mov
xchg
mov
pop
pop
adc
fsubl
adc
dec
cmpsl
xchg
and
sbb
std
shlb
clc
shll
out
push
negl
gs
adc
movsb
aam
scas
xor
pop
aas
sbb
xor
adc
fwait
cmpsb
push
mov
add
jnp
add
mov
jns
push
sbb
mov
nop
mov
stos
or
dec
push
add
push
pop
or
mov
add
out
xor
pop
inc
fst
pop
mov
aaa
stos
mov
in
sarb
movl
movl
movl
movl
movl
movl
mov
mov
or
lea
add
movl
jmp
add
inc
sti
daa
push
cs
nop
adc
mov
pushf
pinsrw
mov
ja
inc
mov
stc
mov
push
jno
scas
cmp
inc
sub
push
movsb
in
jmp
aaa
cld
xchg
push
push
test
add
sbb
xor
out
mov
add
mov
sti
arpl
fisubrs
sub
pop
sbb
sbb
and
clc
stos
mov
stc
sbb
sub
xchg
lods
dec
mov
leave
jne
cs
data16
fadd
enter
pop
cmp
xor
xor
scas
in
inc
cmp
orl
sub
sub
testl
lcall
jo
bound
push
jl
push
dec
adcl
cltd
or
mov
pop
and
imul
inc
add
adc
jmp
mov
loope
mov
arpl
pop
add
pop
and
fmul
dec
lcall
push
add
daa
enter
jle
and
cmpsb
sbb
cltd
cs
mov
aaa
rolb
pop
pop
inc
lock
test
dec
xchg
sub
and
stc
in
inc
outsb
cli
cmp
add
pop
sbb
xor
aad
add
mov
or
ficoml
dec
call
mov
mov
or
xchg
xchg
mov
loope
xchg
call
xchg
insb
aas
dec
cli
mov
filds
mov
insb
jl
inc
sub
dec
dec
add
cmc
mov
sbb
mov
test
mov
fldl2e
js
int
pop
push
les
mov
mov
lahf
neg
adcb
cwtl
jmp
inc
inc
adc
push
push
xlat
and
push
mov
jl
std
lcall
cld
cmc
mov
clc
xchg
mov
sarb
or
dec
push
scas
flds
sbb
mov
ja
jnp
in
cmp
xlat
xor
mov
clc
xor
jno
push
mov
out
ficoms
iret
out
push
cmp
mov
nop
cmpsl
insl
in
fistps
inc
mov
cmp
pop
pushf
pop
clc
dec
pop
mov
sub
xchg
out
inc
cmp
xchg
sbb
mov
xor
popa
fldl2t
fstpt
adc
loope
and
lret
insb
pop
cld
add
xchg
sbb
fwait
pop
dec
dec
imul
idivb
jle
xchg
mov
cmpsl
xchg
fs
mov
repnz
ja
mov
xorl
sbb
jns
addl
std
sub
enter
jg
movsb
pop
ret
sub
aaa
jnp
js
outsl
adc
xor
xor
cltd
jle
inc
xor
pop
xchg
test
sbb
jge
sub
test
fisubs
xor
jno
xor
xchg
into
inc
adcb
pop
pop
movsl
andb
cmp
inc
jl
push
xor
jnp
cmp
pop
icebp
mov
pop
movsl
push
jnp
int
pusha
sub
push
insb
xchg
int
xor
hlt
fsubrl
cmpsb
mov
xchg
mov
in
outsl
pop
cmc
push
fldt
or
mov
and
add
mov
out
sub
jl
mov
jl
daa
push
xor
push
push
insl
inc
lcall
mov
xchg
test
cwtl
or
pop
shll
xchg
pop
jne
notl
cmp
daa
and
jb
and
loopne
cltd
adc
cmp
gs
es
in
pop
cmp
scas
sub
sahf
nopl
mov
or
popf
mov
les
or
jae
ret
xchg
add
movsb
xlat
xchg
inc
or
dec
in
rcll
test
stos
jp
jle
insb
dec
sbb
xchg
inc
imulb
xor
loopne
int3
cmpsl
add
aam
inc
xchg
fisttpl
cwtl
sub
add
aaa
out
cmpsb
popf
enter
add
fidivl
shl
mov
mov
or
xchg
sub
or
dec
mov
mov
fxch
je
adc
push
andb
add
jbe
lret
dec
fimuls
push
loop
repnz
sbb
test
push
xor
addr16
fcoms
int3
repnz
pop
popf
ss
inc
bound
daa
nop
popf
pusha
inc
adc
imul
add
out
xor
sub
jae
js
add
mov
mov
inc
cmpsb
inc
mov
mov
inc
push
or
and
das
clc
cmp
mov
inc
cld
push
mov
movsl
daa
jns
adc
cs
loope
bound
in
pop
loopne
add
arpl
and
aam
mov
mov
mov
jle
test
into
sub
in
mov
sbb
push
bound
test
sub
aam
and
add
les
sub
cltd
mov
sbb
xlat
add
shll
ss
pop
and
adc
icebp
mov
test
sbb
stos
pushf
dec
xor
sub
lock
mov
jecxz
mov
or
mov
mov
mov
jno
adc
shrl
inc
mov
sbb
imul
or
mov
push
pop
adc
movsb
mov
movsbl
jge
popa
adc
xchg
stos
into
cli
dec
outsb
lds
js
cmp
dec
mov
in
xchg
mov
mov
mov
movsl
inc
lods
sbb
rorl
or
add
inc
int3
fwait
push
add
movl
movl
movl
mov
mov
sub
add
mov
imul
mov
mov
jmp
aad
sub
ss
adc
xchg
push
inc
js
mov
add
movd
push
outsl
xchg
cmpl
inc
mov
sub
inc
push
push
loopne
jle
mov
mov
or
pusha
pop
cmp
scas
sbb
push
sub
dec
adc
cs
or
into
add
cmp
jp
jno
jg
sbb
lea
pop
shrb
pop
in
xchg
dec
add
jl
adc
mov
xchg
or
les
cmp
clc
jecxz
or
int3
xor
sbb
or
movsb
into
add
jg
jle
loop
pop
fadd
popfw
pop
rcl
in
loopne
data16
mov
insl
xorps
mov
inc
dec
mov
jno
test
icebp
roll
mov
mov
add
cltd
mov
incl
js
mov
push
pop
sub
adc
loopne
jg
xor
adc
sbb
pushf
sahf
mov
xor
arpl
or
repnz
ja
hlt
push
jnp
mov
sub
adc
jge
cli
loopne
ror
cmpsl
fwait
mov
jg
out
cwtl
cmp
xor
stc
xchg
test
adc
mov
daa
xchg
les
clc
gs
into
movsb
add
fdivl
incb
push
sbb
jl
xor
and
adc
cmp
push
iret
adc
inc
dec
fwait
fwait
iret
repnz
add
mov
adc
mov
sub
mov
iret
imul
scas
sub
fisttps
adc
jl
adc
pop
pushl
mov
push
push
mov
xor
sarl
inc
mov
filds
mov
mov
rclb
arpl
fiadds
add
push
stc
push
es
es
clc
jno
cmp
ds
fimuls
adc
test
jbe
xchg
mov
ret
xchg
fisttpll
je
notb
es
hlt
das
arpl
lock
xor
lret
sub
lock
fisttpll
sbb
outsl
shlb
std
nop
mov
mov
loope
or
mov
xor
cmc
xor
pop
or
stc
fsubl
in
or
sub
popa
rolb
jecxz
pop
and
sbb
and
dec
insb
push
ljmp
inc
jl
mov
xchg
add
outsl
mov
pop
imul
sub
sbb
pop
dec
das
scas
out
xchg
subb
fucom
out
stc
mov
scas
into
xchg
insl
das
inc
lock
inc
jno
or
mov
push
mov
stos
insb
cmpsl
sbb
mov
arpl
lret
lods
sub
add
insb
add
fcomps
xor
cmp
mov
inc
inc
hlt
mov
in
and
loope
mov
aad
js
jmp
cmc
cli
gs
rorb
nop
rclb
imul
sbb
add
or
adc
push
or
sbb
dec
dec
pusha
lahf
xchg
mov
mov
fimull
ja
inc
xchg
pop
lcall
lret
xor
xchg
popf
push
lock
or
lods
icebp
rcl
sarb
pop
pop
into
sub
dec
sbb
sarb
sti
or
xchg
pop
imul
shrl
out
mov
cmp
fldl
jb
fstp
rcrl
push
out
out
mov
lret
sbb
sub
add
lahf
popf
nop
and
xor
aam
dec
add
cmp
or
jmp
jb
mov
pop
popa
dec
add
jge
inc
xchg
adc
test
or
ror
ja
inc
aam
aad
inc
std
push
adcl
xchg
js
mov
mov
push
pop
xchg
mov
lcall
fadd
shll
lret
lret
repnz
in
lods
sarl
sbb
mov
ds
jge
jecxz
aaa
and
cmpl
cmpsl
mov
in
rcrl
sar
stos
inc
cmp
lret
inc
xchg
ljmp
xchg
and
rcrl
xor
popa
dec
jl
into
repz
out
dec
js
or
mov
add
adc
dec
js
outsb
int3
in
data16
xchg
xor
popa
out
sahf
test
xor
into
xchg
mov
pop
fucompp
divl
ss
in
mov
stos
and
rclb
pop
popa
xor
jmp
add
dec
push
out
push
imul
inc
fbstp
jns
pop
test
xor
clc
xchg
xchg
test
ror
xchg
push
adcb
inc
repnz
cmp
fisubrs
sub
pop
sbb
arpl
in
aad
fwait
shll
in
fcoml
jecxz
test
movsb
dec
cmp
and
insb
xchg
sub
loopne
jle
cs
jb
sbb
lds
lret
dec
ljmp
in
jle
ds
lds
or
rcrb
mov
dec
es
in
inc
mov
xor
sbb
movl
pop
jno
mov
cwtl
enter
imul
mov
orb
pop
loopne
mov
jmp
adc
and
mov
gs
hlt
out
mov
ds
fs
shl
sbb
outsl
inc
mov
xor
pusha
and
out
and
ret
dec
lds
mov
rcll
and
jecxz
add
cmp
out
repz
mov
out
mov
xchg
arpl
inc
xor
mov
xor
mov
mov
add
xor
sub
mov
mov
mov
mov
mov
sub
mov
imul
mov
or
sub
mov
jmp
out
aad
aad
aad
adc
xor
dec
adcl
and
mov
dec
fidivrs
and
aam
adcl
mov
push
adc
jge
mov
fs
push
ficomps
int
out
xchg
aad
fmull
and
jmp
fxch
cmp
mov
push
xlat
ds
jo
lea
and
mov
data16
xchg
enter
ss
sbb
aad
adc
push
popf
fdivs
jns
push
aam
jmp
mov
mov
push
inc
inc
arpl
cld
popf
pop
icebp
and
arpl
adc
andl
and
adc
mov
and
push
mov
ss
pop
ror
scas
inc
push
mov
dec
outsb
out
add
adc
in
rcll
outsl
jge
test
popa
or
cmp
cmc
jl
pusha
lret
mov
int
gs
sti
add
clc
or
push
aad
das
xchg
xorb
subb
push
cmp
cwtl
out
dec
fisubrl
and
xor
jo
sub
cmp
or
mov
xchg
xor
jp
add
test
shll
inc
xor
lahf
mov
lcall
jno
push
jo
sbb
dec
cmpsb
ss
push
ds
daa
cmp
mov
aas
aaa
pop
int3
jge
sub
pop
adc
dec
mov
cmp
push
inc
icebp
or
out
mov
fst
std
fimull
lds
sub
fstp
in
add
and
or
lret
pop
inc
shlb
imul
fldenv
js
jg
or
movsl
push
test
sub
xor
and
aaa
test
mov
outsb
push
insb
inc
sub
jbe
pop
ret
push
xor
dec
out
xlat
and
cmp
cmc
dec
push
cmpsl
cmp
shlb
jl
adcl
stos
pop
sub
pusha
mov
push
stc
or
dec
or
sbb
mov
in
arpl
jae
stos
pop
add
pop
mov
adc
sahf
lcall
mov
dec
mov
cmp
jb
add
rclb
stc
pushf
adc
or
and
mov
and
mov
out
sbb
cli
jnp
les
sub
mov
fwait
mov
pop
xor
inc
inc
or
jecxz
add
xchg
and
out
lahf
jmp
sbb
inc
mov
ss
lods
mov
hlt
out
dec
lret
xor
mov
jl
add
cs
cmp
sub
add
cmp
jae
dec
xor
adc
push
xor
mov
std
pop
stc
or
outsl
adc
shrb
xchg
and
xchg
cmc
cmp
pop
test
ret
in
inc
pop
push
inc
cmp
jnp
push
sub
pop
out
jle
lods
mov
pop
adc
fcmovnb
pop
mov
out
inc
stos
pop
push
jge
pop
lcall
push
arpl
mov
inc
sti
add
decl
pop
xchg
imul
add
adc
jo
inc
push
shrl
ja
cmp
cld
adc
sub
mov
fadds
out
pop
sub
cmp
lcall
loopne
xrelease
imul
iret
fiaddl
shl
or
sbb
in
xchg
lret
jp
cmp
sbb
es
or
jl
mov
out
mov
sbb
pop
adc
push
cmpsl
push
lods
xchg
mov
shll
testl
cld
sub
int3
mov
mov
mov
test
das
xchg
scas
or
xor
mov
cmpsb
cmp
icebp
ja
xchg
cltd
aam
jg
divl
icebp
loop
loop
sub
sbb
movhlps
movsb
dec
sbb
test
mov
lods
jno
test
inc
pushf
test
sbb
sbb
sbb
pop
xchg
inc
or
pop
cltd
in
scas
mov
nop
lcall
decb
cmp
jb
sub
mov
imul
les
mov
cli
hlt
enter
leave
subl
out
lret
nop
mov
bound
xor
sub
ss
dec
add
outsb
dec
int
sub
testb
ljmp
lret
imul
out
pop
dec
xchg
lds
xor
push
xchg
in
rol
pop
stos
jmp
xchg
lahf
adc
xchg
fwait
cwtl
cmp
jbe
adc
and
insb
xchg
cmp
gs
push
dec
dec
out
movsb
stc
jbe
pop
sub
ja
mov
mov
mov
in
dec
sub
mov
dec
stos
out
jns
cli
jmp
sub
outsl
mov
jae
xchg
lcall
stc
jmp
xor
xchg
jb
dec
xor
inc
xor
mov
sbb
call
cmpl
xchg
cmpsl
dec
gs
xchg
enter
and
outsb
repnz
pop
mov
xor
xchg
dec
xchg
mov
or
jo
jmp
or
jle,pt
mov
test
or
ficoms
notl
faddp
and
gs
jno
xchg
jmp
jb
decl
jle
or
cwtl
testl
add
xor
mov
sub
xor
lahf
mov
incb
ret
hlt
xor
mov
sub
add
cmp
jbe
xor
inc
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
xor
div
mov
xor
mov
mov
div
mov
xor
div
mov
sub
mov
and
imul
and
xor
cmp
je
push
movl
movl
movl
movl
movl
mov
mov
imul
xor
add
mov
and
sub
mov
mov
add
xor
mov
mov
and
sub
mov
mov
mov
mov
mov
xor
or
imul
or
mov
imul
xor
mov
div
add
mov
and
imul
and
xor
cmp
jne
pop
pop
pop
leave
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
push
push
push
movl
movl
jmp
imull
xchg
xchg
aam
data16
mov
add
mov
inc
nop
pop
xchg
mov
int
les
shlb
orl
add
lock
mov
and
jae
pop
loope
adc
xchg
push
adc
ljmp
mov
adc
mov
or
ds
divl
pop
push
cmc
xor
in
pop
pusha
xor
xor
cs
xchg
pop
jno
lock
std
pop
aaa
pop
add
push
mov
push
xchg
xor
loope
sub
inc
jle
js
sub
iret
and
mov
scas
test
push
push
icebp
rcr
fisubl
pop
fnclex
or
mov
cmp
outsb
pushf
push
cmpsl
adc
imul
push
imul
jns
mov
fs
idiv
jno
clc
and
das
ss
pop
jbe
add
sub
dec
stos
or
jecxz
jecxz
mov
xchg
pushf
inc
or
ret
or
insl
xor
call
jge
dec
xor
cltd
ret
mov
push
jae
mov
xchg
ds
add
in
call
js
hlt
mov
xchg
aad
adc
icebp
mov
vxorpd
mov
int3
stos
sbb
push
xor
aaa
mov
repz
pop
jne
fs
push
push
clc
hlt
pop
cmp
mov
mov
fiaddl
iret
out
frstor
shrb
or
pop
add
jnp
pusha
mov
push
lock
push
pop
push
data16
jno
imul
dec
push
dec
xor
pop
mov
pop
dec
jnp
or
in
jb
mov
pop
add
fildl
inc
aaa
js
mov
push
mov
cltd
ds
pusha
mov
xchg
daa
or
int
mov
mov
mov
xchg
or
pop
hlt
pop
or
dec
mov
clc
push
les
in
aam
or
xlat
jg
cmp
ds
loop
add
std
idiv
cmp
test
loop
pop
std
cli
rcrb
sbb
sbb
movsl
cmp
gs
iret
mov
mov
fistps
daa
adc
ret
sbb
jp
push
or
shlb
aaa
and
mov
mov
hlt
call
out
jle
dec
mov
and
idiv
adc
cli
jae
fldcw
or
gs
out
lods
sub
je
insl
in
leave
and
jg
inc
in
jl
xor
xchg
mov
mov
dec
int3
cmp
add
rclb
xor
sub
jp
push
scas
fs
inc
pop
loop
mov
push
push
pop
addl
inc
push
aam
flds
in
fmull
push
sbb
push
fs
push
add
push
sbb
cmp
adc
lcall
loop
jns
inc
loope
pop
lods
or
or
mov
and
fcoml
xor
xor
xchg
out
scas
adc
mov
mov
cmpsb
lret
adcb
std
loope
mov
add
adc
jl
and
out
mov
pop
shll
je
in
xchg
pop
test
push
push
pop
dec
sbb
push
lea
iret
push
and
std
mov
xchg
mov
mov
cmc
sub
jnp
and
je
adc
cltd
rcll
dec
in
pop
ret
es
bound
mov
mov
out
dec
clc
stos
and
fnsave
mov
fs
fldcw
mov
add
adc
movsb
orb
fidivrs
sbb
sbbb
pusha
xchg
cmp
adcl
testb
or
pop
push
rolb
lret
cmpsl
xchg
or
std
push
mov
sbb
and
out
dec
pop
jno
inc
mov
test
add
push
aas
or
and
adc
or
fst
incb
jne
adc
test
xor
test
fcompl
mov
gs
js
fsubl
ja
push
mov
mov
ret
pop
in
fstpt
jle
cmpsb
lret
mov
pop
push
mov
jb
push
mov
inc
and
add
cli
mov
in
mov
hlt
arpl
inc
outsb
pop
jle
inc
inc
out
sbbl
ds
in
xchg
cltd
cli
orb
dec
cli
lds
jl
jle
int
dec
cs
cmp
sub
add
mov
cmp
jne
inc
xchg
and
mov
mov
pop
pop
pusha
das
ljmp
jl
mov
flds
stos
lahf
movsl
add
js
or
cmp
cltd
sub
ror
int
sub
dec
lock
in
daa
fs
pop
cmp
roll
rorl
add
mul
adc
mov
iret
es
rolb
mov
out
sbb
push
insb
movsl
std
and
arpl
arpl
dec
adc
mov
rcrl
repnz
jnp
jl
push
cmp
pop
jg
inc
ffreep
mov
sub
shll
push
pop
xor
sbb
pusha
or
and
xor
add
lods
out
popf
js
adc
enter
xor
add
aaa
xchg
ja
push
push
scas
cmc
mov
in
loopew
popa
cs
sbbl
push
fmull
push
sub
mov
adc
stos
pop
or
xor
inc
dec
popl
push
inc
pop
xchg
mov
icebp
cld
adc
mov
fiaddl
sub
mov
lea
mov
mov
xchg
pushf
inc
push
xor
pusha
mov
cmp
hlt
add
mov
aas
dec
daa
lret
push
push
cmp
push
sub
les
pusha
cmp
cli
xchg
cmp
dec
or
push
jl
outsb
sub
aas
jne
loope
and
xor
leave
xor
mov
xor
rol
aaa
xlat
ret
cmovae
pushf
icebp
sbb
shrb
sub
push
fstp
add
insb
jb
adc
pcmpgtd
fisubrl
daa
xor
push
lds
push
enter
pop
xor
dec
xchg
int3
inc
adc
inc
adc
sub
stos
sahf
mov
jge
mov
pop
gs
inc
loop
cmp
insl
xchg
or
test
pop
pusha
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
pop
fdivl
jo
push
push
mov
and
add
imul
cmp
mov
xchg
lcall
and
data16
and
push
cltd
mov
popf
pop
cltd
fnsave
in
xor
mov
mov
loope
cs
xchg
mov
mov
aam
and
sahf
movb
mov
dec
jae
mov
add
movsl
hlt
inc
filds
lret
push
xor
push
jl
pushf
addb
stos
pop
cwtl
and
pop
dec
nop
jmp
cmp
or
mov
repz
data16
xlat
adc
out
cmp
xchg
int3
jge
push
xchg
xorb
pop
pop
and
aad
ja
jb
adc
mov
rcrl
iret
fcoms
cmpsl
pushf
mov
pop
mov
pop
cmp
aam
inc
into
nop
jnp
xor
xor
lret
into
mov
hlt
dec
in
sub
loop
jno
lock
pop
adc
sahf
push
stos
mov
mov
addr16
ja
sub
aas
dec
pop
mov
push
fldl
test
bound
add
adc
rcl
pusha
icebp
std
xor
popf
aad
cli
loope
dec
arpl
rcrb
loope
jp
mov
jne,pt
cmpsb
insl
pushf
in
mov
xchg
nop
sbb
inc
cld
push
rcrb
daa
push
jp
dec
scas
sub
pop
inc
out
mov
sahf
gs
fistl
xchg
aad
test
mov
and
iret
imul
or
mov
and
movsb
sub
aad
stos
xchg
xor
loop
xchg
mov
mov
pop
sub
pop
pop
jns
cmp
and
out
aad
sub
xchg
mov
pop
jne
push
data16
inc
stos
cltd
xor
or
jno
notb
cmp
adc
popa
mov
es
call
sub
xchg
mov
jns
bound
stc
pop
xchg
push
mov
into
int
cmpsb
pushl
cwtl
lds
les
inc
jo
call
or
add
jle
adc
push
sub
lcall
or
mov
addl
out
mov
add
pop
js
dec
add
scas
shr
rcll
lret
fwait
daa
pop
cwtl
mov
cmpl
sbb
cli
jb
jnp
pop
into
pop
lcall
and
rcrb
rcll
adc
call
cmp
and
incb
mov
movsl
cwtl
mov
shrb
push
jne
call
ja
inc
test
inc
into
out
pushf
movsl
popf
pop
mov
pusha
popl
add
add
imul
clc
push
add
movsl
jg
push
xor
xchg
jg
cmp
mov
idivl
add
xchg
pop
test
jecxz
xor
mov
adc
sbb
nop
subb
dec
pop
or
cmp
mov
dec
pop
dec
lea
mov
sub
sub
push
std
adc
jne
push
mov
jnp
fwait
popf
popa
test
jg
mov
xchg
scas
fsubrs
sub
sbb
add
insl
hlt
inc
and
je
ljmp
add
outsl
inc
cld
jb
or
arpl
mov
jmp
and
mov
jo
cwtl
or
mov
xor
cmpsb
and
mov
rcrl
daa
insl
cmp
repz
push
fstl
in
shl
into
aas
subb
and
movsb
movsl
cwtl
ds
jb
mov
stc
xor
pop
lock
mov
int
movsl
daa
lock
in
add
mov
sbb
push
fiadds
dec
aad
sahf
fildll
mov
jne
sarl
xor
fidivs
jecxz
test
sbb
notb
xor
xor
arpl
test
mov
jno
sarl
in
ret
adc
mov
hlt
test
lahf
not
sbb
imul
insb
iret
testb
cmp
push
inc
int
movsl
mov
ret
subb
in
sbb
jg
xlat
sti
cmc
or
arpl
pop
movsl
daa
or
fistpl
aaa
popa
push
or
cmp
lods
mov
xchg
adc
scas
int
and
xchg
dec
imul
ss
xchg
imul
push
in
test
mov
mov
test
add
sub
adc
sbb
int3
es
xchg
push
push
addr16
push
jg
mov
push
loop
inc
ja
in
sbb
movsb
jae
shlb
inc
shll
clc
lret
and
lock
xor
ffreep
je
push
lock
jmp
mov
xchg
push
mov
sbb
adc
int3
lret
jno
dec
ss
mov
stos
lahf
push
pop
xchg
stos
test
and
inc
lock
jbe
lcall
lcall
imul
inc
jb
or
fadds
sahf
mov
repnz
push
stos
mov
push
mov
fmul
or
cmpsb
movsb
test
fsubrl
jl
mov
out
add
leave
cmp
lods
add
in
or
jmp
mov
rclb
adc
pop
or
test
adc
aas
mov
mov
int3
lods
je
sbb
add
jg
sbb
dec
xor
or
xchg
push
aam
sbb
movb
dec
pop
bound
std
push
xchg
sbb
mov
lods
das
nop
rep
ljmp
lea
mov
incl
pop
sbb
xor
or
push
gs
sbb
lret
out
aaa
popl
jae
sbb
scas
jp
lea
shlb
mov
pop
xor
push
dec
pop
add
push
inc
and
mov
stos
dec
cmp
inc
addr16
push
dec
mov
lcall
adcb
aaa
jmp
adc
push
xchg
xchg
test
jecxz
aas
push
scas
sbb
out
pusha
mov
shrl
sahf
insl
out
cmpsl
jecxz
test
mov
sbb
mov
sub
sbb
sbb
add
or
stos
cmpsb
ror
lea
adc
in
int
add
shll
pop
mov
jp
xor
and
jbe
add
dec
add
mov
mov
dec
xchg
inc
add
mov
mov
mov
mov
push
add
push
adc
jmp
lcall
xor
mov
pop
add
jnp
outsl
jge
xchg
bound
adc
lcall
les
lds
sub
jo
dec
fdivr
sahf
pop
je
jno
in
lods
les
add
pop
or
mov
inc
popa
sub
mov
xlat
loope
lahf
xor
and
cs
aad
xor
adc
lret
sbb
stc
int3
push
mov
cmp
cltd
sbb
inc
or
sbb
movsl
arpl
pop
cmp
pop
dec
pop
popl
js
mov
ret
daa
int3
ss
jle
stc
mov
outsb
and
mov
clc
lahf
icebp
lahf
es
fnstenv
outsb
sbb
cli
lret
add
dec
cld
xchg
jno
xchg
cmp
scas
mov
mov
cmpsl
arpl
mov
push
mov
xchg
loop
sarb
xor
mov
jl
jp
sbb
and
arpl
push
cmpb
push
dec
or
cmpsb
add
jge
addr16
push
xchg
shlb
jae
js
rcll
mov
sub
mov
mov
inc
shll
ret
bound
mov
fiaddl
scas
mov
or
sbb
mov
cmp
inc
int
sbb
xchg
mov
mov
dec
fwait
add
fdivs
aas
mov
ss
aad
pop
pop
stc
jp
pop
push
jne
jmp
outsb
in
xchg
mov
in
dec
xchg
stos
divl
inc
adc
adc
adc
jmp
jbe
push
js
xor
sahf
sbb
add
xor
movsb
mov
cmp
push
and
popa
xor
xor
mov
add
pushw
mov
loope
mov
cltd
push
gs
mov
sbb
dec
dec
int3
icebp
out
jnp
sub
cli
xor
aam
sarb
sti
cmp
cli
add
enter
jle
xchg
rcl
out
xor
lahf
cli
mov
push
lcall
mov
mov
hlt
pushf
xor
pop
and
pop
std
and
push
int3
add
stos
aam
bound
arpl
inc
pop
lret
push
pusha
xchg
je
pusha
cmp
lret
jb
out
sbb
sbb
das
mov
cwtl
jbe
rorb
cld
lahf
repz
shlb
mov
js
fisubs
mov
js
xchg
add
xlat
lods
loopne
sbb
in
sbb
andl
lcall
ljmp
dec
pop
add
fwait
mov
or
stc
pop
and
nop
push
xor
sbb
sahf
jbe
scas
negl
mov
ja
push
data16
pop
push
mov
jg
mov
dec
xorb
roll
into
ret
xchg
outsb
ljmp
cltd
pop
addr16
adc
pop
cmpsl
bswap
xchg
pop
arpl
shrb
push
popa
sahf
data16
stos
sub
cmp
lcall
mov
cmp
iret
jno
sub
mov
rcr
loop
cwtl
in
addr16
loope
sub
push
ret
dec
pop
pop
push
ffree
leave
cmpsl
nop
xlat
mov
popa
mov
andl
repz
dec
js
int3
out
sbb
repz
movsb
xor
imul
sub
int3
test
dec
mov
adc
inc
inc
pop
rorb
out
xchg
lret
cmc
adc
sbb
mov
fstl
cmp
jmp
inc
pop
sahf
mov
xor
push
push
push
ret
mov
les
pop
cmp
ja
jg
jbe
imul
add
cmpsl
cmpsl
jl
sahf
mov
pop
adc
addr16
lods
cmc
outsl
mov
sbb
add
mov
and
cmova
lds
sarb
mov
out
ss
jp
fisubrl
cltd
aas
jo
mov
push
hlt
jne
xchg
call
icebp
rcr
adc
xchg
pushf
divl
sub
mov
in
and
notb
sahf
nop
imul
jnp
xor
add
enter
mov
sub
gs
cmpsl
in
outsl
loope
jbe
sub
test
aad
adc
imul
cmp
push
pop
enter
loopne
ss
sbb
leave
loope
clc
lock
sahf
xor
hlt
mov
int
jb
mov
enter
mov
push
inc
outsb
cmc
pop
cld
pop
mov
mov
ljmp
or
into
xchg
push
pop
pop
cli
dec
test
sbb
mov
xor
jo
sub
mov
cwtl
xchg
fwait
popf
in
out
repnz
mov
inc
mov
pop
addr16
or
out
popa
lcall
out
sbb
push
ljmp
das
hlt
push
adc
or
or
cmp
mov
adc
bound
jbe
bound
ret
mov
mov
or
in
mov
stc
es
pop
dec
loope
adc
int3
push
inc
and
lahf
out
cltd
mov
xchg
inc
mov
jo
arpl
and
xchg
pushf
stos
jnp
aas
into
push
cs
push
mov
in
push
jle
subb
mov
repz
mov
jmp
or
push
xchg
dec
in
rorb
inc
in
loope
imul
mov
call
xchg
popf
jbe
call
mov
cmp
lret
and
sbb
push
mov
lea
nop
mov
outsb
out
mov
add
or
ss
sub
out
or
xor
mov
fwait
ret
jbe
or
jle
xor
sub
adc
sub
nop
repnz
adc
aas
popa
test
and
ss
xor
jmp
add
sub
and
xlat
fdivs
movsb
cmp
or
and
xchg
xor
dec
cld
in
push
dec
scas
mov
or
push
sub
call
or
outsl
mov
sbb
dec
jbe
stc
or
fisttpl
cmp
pop
jno
cld
jnp
or
pop
cmp
pop
sub
or
add
cmpsb
and
add
pop
filds
and
test
cwtl
cmp
call
repz
aam
arpl
or
bound
div
iret
push
push
call
mov
mov
sub
mov
jmp
mov
and
cwtl
sub
inc
loop
fmuls
dec
add
jp
cmpb
inc
cli
rcll
insl
add
pushf
scas
adc
and
repz
push
idivb
loopne
xor
inc
push
mov
push
in
std
mov
stos
mov
mov
jne
xchg
jg
ficoml
jle
or
push
sarb
inc
rcrb
fcom
faddl
mov
addr16
sub
xchg
adc
xchg
push
jmp
je
mov
jno
jb
add
fisttps
pop
orl
jle
arpl
cmp
mov
nop
xchg
test
daa
int3
negl
xor
mov
push
cmc
push
mov
dec
mov
sbb
dec
mov
cmc
pop
aam
inc
jb
rcrl
push
out
jns
test
into
sub
pushf
arpl
xor
fldl
mov
mov
or
lods
jge
inc
and
or
mov
jnp
mov
ret
test
pusha
sub
jns
sbb
jnp
daa
push
lods
adc
or
pop
pop
movb
mov
mov
inc
and
inc
test
adc
decl
push
repz
pop
int3
in
je
pop
or
lock
fs
sahf
imul
mov
dec
jl
sbb
and
mov
sbb
lock
mov
js
jns
inc
scas
sub
out
imul
stos
lds
xchg
rolb
ror
dec
adc
cmp
lds
fstl
mov
cltd
mov
push
jle
cmp
jne
sub
adcb
lods
cmp
cs
mov
sbb
push
cwtl
inc
jnp
psubsb
lret
jecxz
in
jns
jae
lea
imul
sub
and
xor
push
mov
cmc
add
insb
lret
movsb
mov
fnstsw
dec
inc
sbb
aam
or
cmp
aam
push
jns
mov
inc
jp
test
ja
mov
push
repnz
in
aad
cmp
sbb
lds
pop
pop
iret
mov
roll
inc
out
push
jne
add
imul
test
loopne
sbb
cmc
dec
addl
in
dec
sarb
mov
popf
dec
mov
cmp
leave
in
push
mov
mov
mov
xchg
dec
arpl
sahf
pusha
xchg
sbb
bndstx
cmpsl
mov
push
mov
jl
mov
mov
add
pop
fistps
jo
mov
sub
jo
pop
jmp
gs
fdivrl
jge
push
scas
dec
orl
sub
mov
xorb
xor
pusha
jbe
dec
pop
stos
jmp
lods
std
out
lds
or
mov
stc
inc
pop
fwait
mov
and
test
cmpsb
mov
jge
repz
sbb
mov
loopne
stos
cmp
sbb
xor
lods
pop
enter
mov
out
add
std
inc
mov
fwait
push
aad
xchg
das
inc
inc
jmp
mov
pop
mov
xlat
gs
mov
and
inc
fisubrl
add
inc
enter
mov
dec
mov
xchg
outsl
xchg
lcall
cmp
addl
mulb
inc
rcrl
cli
sub
mov
inc
push
mov
das
mov
push
sub
pop
mov
shlb
push
xorb
jnp
call
pop
pop
push
test
jg
pop
add
shrl
iret
xchg
xchg
aad
mov
xchg
fsubrp
jle
mov
lcall
mov
dec
xchg
pop
push
in
cmc
push
mov
cmp
pop
incb
cli
jmp
sub
fsubl
adc
pop
lahf
and
shl
jae
rorl
jle
mov
ss
mov
mov
cmc
sub
push
nop
orb
push
iret
pop
jl
mov
mov
fcmovu
leave
dec
jmp
adc
mov
sbb
jne
pushf
mov
add
mov
jno
xor
mov
insb
mov
push
mov
xchg
repnz
pause
sub
sti
pop
add
pop
push
lahf
inc
mov
outsl
mov
jecxz
in
out
sub
inc
loop
sub
mov
pop
fimuls
xchg
jmp
dec
push
aam
mov
stos
adcl
movsb
inc
loop
cmpsb
ss
mov
pop
outsl
test
fcmovnu
out
xchg
ret
inc
xor
bound
popf
fmuls
inc
or
ret
pop
mov
pop
andl
fldl2e
outsl
xchg
xchg
lods
insb
mov
mov
lods
test
stos
pop
gs
xor
rolb
sbb
cmp
add
mov
dec
mov
dec
jle
sbb
mov
lds
jno
stos
roll
arpl
test
add
or
aam
mov
mov
outsl
mov
xor
ds
outsl
rclb
inc
movsl
cltd
jecxz
imul
or
or
dec
adc
cli
adc
cld
push
cs
pop
test
dec
scas
jo
xor
sbbb
lcall
lods
push
inc
sub
ja
sbb
push
push
or
jns
out
sub
addr16
daa
cmp
xor
daa
push
data16
mov
outsl
out
loop
jg
cmp
sbb
sahf
push
mov
pop
inc
out
xchg
xor
fwait
pop
insb
adc
sarl
push
cmpsl
test
fistpl
sbb
adc
ss
inc
aad
lods
jle
mov
dec
jo
testl
cmp
add
in
mov
stc
pop
verr
push
cmpb
lock
cli
sub
add
cld
inc
sub
jle
adc
jmp
or
mov
ljmp
addr16
sub
es
fadds
dec
popa
cwtl
sti
loopne
movsb
ja
xor
pop
cmpl
mov
pop
dec
mov
mov
inc
icebp
popf
xor
cmp
arpl
daa
ret
dec
imul
mov
sbb
das
cltd
cli
adc
jge
imul
shrl
pop
jge
outsb
call
add
test
mov
ss
pop
dec
decl
sub
aad
arpl
mov
mov
ja
fldcw
jp
and
lods
mov
adc
sub
fnstenv
mov
push
push
push
push
call
add
adc
shld
shl
mov
mov
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
jmp
lcall
or
xchg
add
fmulp
pop
mov
mov
sbb
addl
jnp
push
mov
push
out
stos
icebp
loope
in
mov
mov
inc
push
and
stos
int
xchg
std
scas
mov
sahf
mov
push
dec
mov
pop
push
xchg
cmpsb
xchg
fnstcw
imul
sbb
rorl
jg
jae
es
sbb
mov
and
sti
or
in
aas
mov
pop
shlb
mov
shll
testb
mov
mov
push
stos
imul
mov
lcall
daa
stos
jp
jb
movsb
sbb
jo
enter
inc
xor
les
mov
lods
dec
jns
mov
scas
mov
pop
xor
movsb
and
fucomp
and
jl
jae
mov
je
les
pop
stc
dec
pop
lea
add
pop
mov
shll
aas
lret
push
mov
mov
cs
add
jnp
dec
or
inc
mov
push
sbb
in
jl
and
pushf
push
pop
jmp
sub
loopne
js
mov
cmp
push
ljmp
add
out
xchg
mov
mov
fdivrl
dec
sbb
lds
roll
sub
flds
mov
lods
xchg
repnz
inc
test
jecxz
ret
loope
lret
add
sbb
adc
jns
repnz
mov
insb
push
adc
aas
out
sub
je
adc
rcll
nop
mov
ljmp
popa
push
add
jb
add
fnstcw
paddq
das
scas
jno
fisttps
dec
xchg
mov
or
pop
je
out
pushf
outsl
cmpsl
inc
push
adc
sbb
lcall
mov
cmp
sub
sbb
mov
mov
leave
insl
pushf
push
std
stos
mov
jb
sub
imul
mov
push
into
push
pop
mov
push
push
pop
stos
sub
out
fstpt
push
add
add
push
sbb
inc
cmp
or
mov
push
mov
sub
mov
std
cmp
add
adc
jmp
lcall
sarb
cmp
cmp
jp
xor
int
or
jmp
aam
push
dec
shrb
jno
movsb
mov
addr16
xor
ret
les
push
clc
jle
xchg
mov
push
jp
jb
mov
dec
jle
sub
mov
in
or
leave
adc
ss
lcall
mov
sahf
aad
ffreep
xchg
pop
push
pusha
test
add
push
pusha
mov
inc
jge
xchg
daa
inc
and
dec
repz
mov
pusha
repnz
mov
jbe
xchg
mov
sub
cltd
jbe
pop
pop
loopne
and
push
insb
bound
inc
aad
add
fidivrs
mov
add
and
jp
ja
sti
jne
xor
xor
jmp
loope
outsl
scas
xorb
cmp
inc
jae
jae
scas
movsl
loope
imull
popf
push
sti
adc
inc
inc
xchg
stc
mov
add
xlat
xlat
jo
testl
mov
push
scas
cmpl
dec
cli
ret
and
inc
mov
bound
xchg
pop
add
pushl
xor
or
nop
popf
in
fucom
orl
iret
cwtl
gs
dec
call
adc
stos
pop
mov
mov
xchg
and
into
sub
scas
push
xor
test
out
or
aas
mov
cmpsl
mov
push
lret
test
add
jl
rcrl
jno
int3
pop
imull
imulb
sub
leave
jecxz
fdivs
adc
addr16
xchg
jb
es
fcmovnu
xor
repnz
jae
or
out
pop
jae
sub
push
push
inc
dec
inc
mov
in
out
jg
jo
mov
mov
lret
jo
addr16
dec
jmp
imul
sbb
adc
lret
js
aad
stos
sbb
aaa
fnstenv
xor
rcrl
pop
jg
je
xor
repz
lcall
pop
pop
lock
and
cld
mov
dec
in
notl
cmpsl
mov
mov
in
repnz
jbe
ja
or
pop
jno
dec
ss
cld
inc
or
hlt
ljmp
outsl
stos
cmpb
xchg
jecxz
or
les
out
test
push
das
sti
cwtl
cs
xor
incb
adc
std
dec
mov
lods
and
std
inc
ret
stos
inc
or
addr16
pmaddwd
addr16
mov
sub
sub
arpl
iret
pop
movsl
mov
or
lods
sub
pop
pushf
mov
mov
call
out
xchg
mov
and
sub
loopne
cld
dec
cs
mov
cmc
out
xchg
lock
sub
clc
push
ljmp
call
clc
fidivl
fdivrp
loope,pn
and
xor
add
nop
aad
outsl
jns
fisubrs
bound
repz
xchg
lret
jbe
sahf
imulb
fadd
enter
jl
icebp
inc
push
je
push
push
in
stos
push
lahf
inc
mov
xor
push
ret
fs
mov
pushl
pop
mov
mov
in
jle
lds
push
daa
fs
mov
sbb
adc
xchg
cmpxchg
pop
test
cmp
add
popa
inc
inc
clc
movsb
push
mov
pop
mov
jmp
aaa
repz
mov
daa
rcll
les
inc
jmp
aas
mov
ljmp
orb
orb
jle
cmpsb
mov
lds
in
adc
pop
mov
pop
and
and
mov
out
inc
mov
jb
cltd
fwait
addl
sub
sub
dec
ds
fstl
pop
lret
in
or
xor
cmp
loop
mov
push
inc
into
lods
cmpsb
dec
and
inc
sbb
xchg
cmc
mov
repz
jnp
pop
ds
push
sub
shrl
cltd
jnp
push
add
or
testb
add
ja
lahf
mov
inc
push
fbld
outsb
into
pop
cld
cld
push
adc
lods
push
push
push
call
add
adc
shr
xor
or
or
xor
mov
push
xor
mov
mov
mov
jmp
mov
sbb
popf
or
addb
add
pop
xor
mov
or
fwait
jo
xor
sbb
push
dec
mov
push
addr16
cmp
out
jmp
popf
mov
push
outsb
bound
jmp
hlt
sbb
or
mov
lods
cmc
pop
add
or
mov
cmpsl
mov
push
lea
in
imul
sbb
cwtl
js
sbb
xchg
jg
mov
push
sbb
mov
imul
mov
popa
push
in
es
je
out
icebp
mov
mov
sbb
push
push
rep
mov
andl
pushf
jns
or
rclb
xchg
das
mov
fsubs
outsl
movsl
mov
xchg
sub
repz
es
mov
push
repz
mov
push
arpl
jl
jecxz
jne
mov
xchg
push
call
sahf
int3
adc
pop
sbb
adc
mov
mov
in
push
mov
xor
in
in
pushf
call
lea
dec
mov
stos
decb
mov
outsl
cmp
push
lock
loope
pop
xchg
lock
fwait
movsb
inc
xchg
mov
bound
lret
add
sahf
mov
dec
fbstp
stos
mov
mov
mov
or
inc
lahf
jns
or
fisttpl
xchg
pushaw
jl
xchg
insb
insb
data16
mov
cmpb
inc
scas
xchg
int
inc
addr16
out
lret
fsts
cli
stc
rol
sbb
stc
fs
in
imulb
mov
xor
jae
sbb
lcall
sbb
ss
mov
stos
and
xor
xchg
lcall
es
scas
stc
mov
push
aas
fwait
out
push
mov
push
std
push
push
je
idivb
xchg
ret
jp
leave
cmp
xchg
or
adc
out
iret
and
add
into
jecxz
jge
enter
push
xor
mov
popa
dec
or
aaa
push
ds
pop
push
faddp
ret
xor
xor
xchg
insb
pop
mov
xchg
mov
fld
mov
out
ljmp
push
sub
dec
adc
sahf
les
data16
mov
sbb
pop
push
cltd
pushf
aad
cs
inc
adc
or
mov
xchg
jnp
mov
mov
scas
sbb
sub
fwait
stc
repnz
idiv
add
xorl
subb
mov
mov
arpl
cmp
jb
mov
or
outsl
test
adc
iret
xlat
pop
sub
ror
cmp
cmp
jp
jmp
sub
jecxz
shlb
xchg
or
mov
fadds
lahf
jns
xlat
mov
out
ffreep
push
fcomps
insb
pop
pop
dec
cmp
lds
int3
xor
cmp
sub
add
mov
adc
xchg
addb
lret
adc
mov
call
xor
sbb
xchg
rorl
incb
aad
movsb
xchg
mov
aam
cmp
mov
fnstcw
xchg
fdivs
jnp
sub
jmp
dec
xchg
mov
pop
sahf
sahf
nop
dec
push
cmpsl
mov
push
sbb
popa
rol
test
scas
into
addl
daa
insb
rorb
pushf
sbb
dec
orl
leave
into
insb
pop
mov
daa
jecxz
mov
sbb
cmp
or
notl
mov
lret
shl
mov
test
jl
jge
roll
dec
bound
dec
cmpsl
mov
and
jae
xor
xlat
push
fwait
push
adc
popa
fdivrl
movsb
inc
call
data16
dec
push
icebp
inc
sbb
test
add
push
sub
inc
jle
mov
mov
scas
push
cmp
xor
pop
or
jne
pushf
jbe
js
popf
int
ret
cmp
mov
or
jge
sbb
inc
clc
loope
flds
add
dec
push
xchg
int3
pop
push
movsb
push
filds
sub
lcall
add
aas
pop
ret
xchg
sahf
outsl
inc
test
or
lods
cmp
lcall
push
pop
ljmp
in
add
cmpsb
sub
andl
fnstenv
les
aaa
sbb
stos
add
or
and
scas
mov
push
mov
je
das
cmp
jb
js
scas
and
andl
jmp
hlt
mov
es
int3
ror
out
insb
fs
sub
imul
lret
mov
lret
dec
aas
out
cmp
shl
sti
push
lahf
out
pop
cmpsl
out
push
jnp
jne
in
nop
mov
cs
xor
sub
clc
popf
mov
lahf
sti
insb
cmp
call
jmp
stc
sub
outsb
popa
mov
cmp
out
cmc
pop
rcrb
sub
fmuls
fbstp
adcb
mov
mov
sub
arpl
shll
lock
and
xor
xchg
aad
adc
mov
and
ret
popf
es
int3
xlat
in
ss
mov
adc
inc
dec
into
and
or
pop
pop
fsub
cld
and
popf
add
mov
sbb
and
sbb
icebp
push
fwait
rcl
mov
repz
jae
ljmp
sub
jl
xchg
mov
sub
roll
mov
sahf
rcrb
sbb
aad
sti
pop
xchg
subb
std
dec
and
das
clc
jae
jnp
rcll
dec
inc
mov
sti
movsl
cltd
inc
and
mov
push
push
sar
push
xchg
sti
fwait
addr16
mov
mov
pop
std
dec
cmp
lahf
mov
mov
loope
rcll
mov
xchg
adc
jb
insb
popa
adc
in
test
xchg
cltd
adc
jmp
int3
fstps
scas
pop
nop
pop
jle
cs
mov
data16
or
push
in
sti
loope
addr16
rorb
scas
shrl
lahf
rorl
repnz
ss
imul
push
cmp
outsl
int
insb
pop
dec
sbb
xchg
daa
adc
sahf
insl
push
push
lds
add
mov
sbb
fnsave
aam
push
adc
ret
lds
fxch
les
pop
outsl
daa
scas
jecxz
leave
test
xchg
arpl
leave
fcmove
jb
jmp
xorb
push
subl
push
test
jb
sub
call
mov
mov
mov
add
mov
adc
mov
and
and
add
mov
adc
add
mov
adc
jmp
mov
xchg
adc
mov
ss
add
dec
xchg
inc
test
push
jno
neg
test
dec
mov
ss
rorb
add
test
mov
hlt
adc
dec
cmpsb
or
cli
xor
push
mov
cmp
popf
loope
pushf
out
mov
push
sub
push
pusha
inc
rcrl
mov
add
mov
ret
out
mov
mov
xchg
lcall
fwait
sbb
xchg
pop
inc
in
ljmp
add
add
xor
push
cmp
outsb
dec
fmull
mov
add
ljmp
or
sbb
repz
or
enter
pop
xchg
subb
mov
adc
adc
es
jl
xor
mov
pop
into
jg
xchg
mov
loopne
jmp
cmp
ds
setbe
rcl
scas
mov
xchg
stc
or
pusha
add
repz
ja
adc
clc
sub
imul
hlt
fs
mov
sahf
daa
pop
movhps
mov
lahf
lods
loope
mov
loop
mov
sub
dec
xor
and
out
push
push
les
lret
mov
pop
jp
jecxz
lods
adc
jmp
mov
sub
js
fimull
pop
jl
sbb
test
outsl
push
mov
pusha
sbb
mov
push
cmpsl
and
hlt
test
pusha
dec
ja
testl
cmp
out
sub
jb
pop
ret
xor
fisubrs
mov
fwait
push
pop
clc
inc
outsb
push
mov
adc
xchg
dec
mov
sbb
mov
stos
sbb
and
loope
imul
sub
test
mov
insl
jmp
mov
repz
jne
divl
fadds
bswap
inc
mov
push
xchg
sub
lods
inc
inc
mov
push
outsb
push
ljmp
jb
or
loopne
inc
xchg
and
stos
push
sub
ja
lods
or
fcoml
jnp
or
inc
cld
js
ret
ja
inc
into
jb
xchg
addb
test
cmpsb
in
sbb
fmuls
mov
and
outsl
sub
insb
mov
cmp
hlt
int3
enter
push
adc
sbb
sub
fsub
xor
cmc
data16
mov
jae
mov
add
scas
in
jno
bound
aaa
ja
xlat
mov
call
add
nop
push
and
cmp
push
and
stos
xchg
mov
cmp
cld
shlb
mov
jo
aas
mov
dec
inc
inc
push
jb
cmp
add
mov
in
clc
out
hlt
dec
loop
insl
inc
int
negb
lcall
and
ss
int
jb
fcmovnbe
data16
ret
dec
fwait
push
cmp
push
pop
or
adc
and
loopne
jp
add
push
push
les
mov
pop
push
cmp
mov
add
jecxz
ret
std
cli
xchg
inc
mov
aam
mov
imul
lret
cld
aam
pop
push
dec
adc
push
xor
shrl
xchg
cmp
test
push
sbb
incb
pop
leave
scas
std
mov
out
in
xchg
scas
mov
jnp
adc
cmp
dec
cmp
sub
pushf
cwtl
popf
lcall
fisttpll
mov
aaa
lahf
lods
jbe
stos
adc
faddl
jle
sbb
cmp
cmp
aam
push
sub
xor
mov
pop
xchg
dec
shr
or
jb
ret
loopne
sbb
sbb
mov
fwait
or
push
cmp
repnz
clc
aad
dec
push
mov
arpl
fstl
test
mov
pop
adc
mov
adc
nop
sbb
push
mov
add
inc
mov
add
pop
push
dec
in
jae
mov
pushf
jle
adc
sbb
sub
or
adc
nop
xor
aas
xchg
sbb
int3
cltd
push
lcall
sbb
rolb
mov
or
outsb
and
mov
int3
loope
test
inc
mov
push
mov
or
rcl
or
cmp
and
push
xchg
jae
nop
sbb
sbb
xchg
std
sub
and
sub
pushf
loopne
add
fistl
aam
mov
shr
cld
cwtl
push
lods
shl
pop
pop
int3
sub
xlat
fcomps
jge
les
popa
adc
jge
dec
dec
mov
pop
add
inc
xchg
cltd
gs
xor
out
add
popf
fisttpl
cltd
sbb
out
cld
adc
cmp
hlt
mov
int3
sbb
or
xchg
jmp
add
test
out
outsb
ljmp
hlt
mov
and
jo
sbb
arpl
imul
push
mov
jl
divb
or
mov
xchg
int
scas
jge
sbb
mov
push
sub
xchg
nop
sub
jecxz
jae
jge
push
push
idiv
fimuls
nop
es
xchg
sub
cmp
mov
enter
sbb
test
xchg
xchg
add
inc
shll
stos
or
jb
das
insl
sub
push
sub
sbb
in
lods
fwait
xor
xchg
cmp
int3
jae
mov
ljmp
into
jg
or
inc
jl
into
dec
mov
test
mov
int
je
push
test
xor
jo
dec
adc
outsl
lods
aas
push
add
jecxz
push
inc
mov
daa
sbb
jmp
mov
stos
mov
test
sub
icebp
inc
shll
sbb
adc
subl
int3
or
pushf
mov
add
adc
les
pop
jg
test
jae
int3
rcl
push
inc
and
mov
lret
lret
cmp
aaa
mov
test
ds
sbb
push
fwait
imul
shll
sahf
sub
aaa
fucom
push
movsb
dec
cld
int
sub
daa
mov
cmc
out
xlat
fmuls
jp
inc
pop
inc
dec
lret
shll
adc
outsb
pop
cli
mov
hlt
jae
jns
sbb
in
sub
or
popf
loope
xchg
dec
mov
out
mov
add
fmuls
pop
add
push
push
jmp
dec
js
gs
push
pop
cmp
xchg
xchg
mov
add
movsb
push
cmc
pushf
mov
es
cld
mov
jb
jmp
pop
jecxz
and
jge
pop
sub
dec
push
jp
adc
and
les
xor
les
push
lods
ret
add
xor
xchg
fstl
jne
cld
mov
pop
add
mov
nop
out
sahf
cwtl
xchg
fildll
cmp
arpl
adc
stos
mov
dec
pop
fs
add
ja
rclb
je
repnz
adc
bound
hlt
cltd
cmp
aad
sub
lret
inc
icebp
in
xor
insb
and
aas
aaa
sub
xchg
ret
add
mov
inc
sub
inc
cli
sub
gs
xchg
sub
and
fisubrs
sbb
xor
cmpsb
push
pop
xor
pop
lds
hlt
insb
xchg
out
xor
inc
ret
sbb
inc
adc
xchg
and
pop
pop
fidivl
jne
loop
sahf
fists
jp
mov
inc
addb
nop
paddusb
pop
shlb
push
pushw
sub
adc
movsl
adc
sub
int3
fcoml
or
sub
mov
sarl
push
sub
in
stos
push
pop
inc
adc
repnz
clc
imul
dec
scas
out
mov
scas
lcall
sbb
mov
add
cmp
jl
push
out
sbb
add
sahf
loop
mov
icebp
jmp
das
ljmp
sub
bound
data16
push
jmp
outsb
jae
addr16
sub
gs
call
cmp
mov
pop
stos
mov
adc
into
fidivrl
xlat
jp
lret
mov
clc
out
pop
clc
int
mov
flds
stc
bound
orl
hlt
mov
inc
addr16
orl
add
add
xchg
and
in
pusha
icebp
aas
or
sub
cltd
dec
js
popa
ror
sub
jnp
mov
addr16
popa
fs
shlb
jno
ret
aas
or
ja
or
shlb
xchg
and
pop
enter
dec
jecxz
xor
push
jmp
enter
push
roll
call
sti
pop
bound
rcr
movsl
mov
scas
imull
out
dec
and
dec
jmp
pop
pushl
mov
subl
dec
sub
jmp
mov
pop
xor
pushf
aaa
pop
cmp
frstor
imul
inc
mov
lahf
cmpsb
mov
iret
push
sarb
cwtl
push
ljmp
jnp
fldenv
push
fldt
cwtl
push
jno
lods
push
cmp
test
dec
fiaddl
sarb
sub
insb
lock
lret
dec
mov
xchg
and
and
or
add
rcll
cmp
mov
es
punpcklwd
dec
mov
cmpb
sbb
int
pop
sbb
iret
mov
xchg
ja
pushf
pop
cmp
jnp
mov
jl
aaa
mov
xchg
dec
jo
aam
dec
dec
je
adc
xchg
xchg
and
mov
sub
xor
adc
push
mov
pop
xchg
xchg
stos
sbb
jae
rclb
incb
outsb
push
out
cs
fcompp
pusha
pcmpeqw
cld
rcr
jb
add
leave
outsb
orb
sub
lea
addb
mov
push
mov
xchg
pop
movsb
sbb
pop
loope
push
push
jns
imul
inc
sbb
lcall
push
mov
cmp
xorb
push
mov
pop
mov
sub
hlt
aas
sbb
int3
lock
push
pop
cli
add
cld
add
ficoms
xchg
popa
loope
push
lods
adc
test
cmp
cld
pusha
aam
pushf
xchg
push
sub
je
fsubr
mov
mov
je
fs
and
push
pop
fimull
fstps
or
fadds
fadd
sub
mov
shlb
in
mov
repnz
jl
pop
inc
jne
push
outsb
inc
fistpl
ds
cli
dec
sub
adc
jp
mov
scas
mov
xor
aam
jle
daa
ja
jae
dec
out
jl
out
orl
iret
pop
xchg
filds
lahf
insl
mov
std
dec
add
pushf
and
mov
dec
cmp
adc
mov
out
pushf
jae
push
jb
cmpb
fs
stos
les
roll
mov
pop
adc
arpl
sub
and
push
push
cs
pop
push
jl
imul
mov
sbb
dec
cmc
in
dec
mov
pop
hlt
pop
xor
lock
inc
je
andb
add
scas
push
cmpsl
adc
sbb
or
pusha
or
outsb
xor
lods
cmp
jno
jp
pushf
in
lahf
add
mov
mov
mov
jne
sub
adc
add
and
idivb
es
int
lea
ret
sub
jne
inc
fwait
xor
clc
scas
mov
and
fldcw
pop
push
push
dec
lea
add
adc
and
loopne
leave
inc
ss
or
fcomps
imul
mov
jns
bound
cmp
pushf
inc
fs
lret
jno
jns
xchg
lret
mov
push
filds
jns
pop
pop
mov
je
mov
jecxz
fimuls
fstp
ljmp
add
popf
push
lods
icebp
lahf
sbb
fiaddl
imul
scas
push
mov
repz
mov
adc
lret
gs
lret
scas
xor
or
pop
add
int3
xor
or
outsl
test
dec
dec
out
leave
and
jns
lods
aad
jbe
outsl
or
push
jo
xlat
xchg
mov
or
lcall
jnp
je
jb
pop
jmp
push
lahf
sub
and
mov
ljmp
jae
xor
ret
cld
sbb
xor
dec
shlb
jmp
mov
push
dec
ja
xchg
mov
xor
in
jl
add
out
mov
mov
push
and
cmp
insl
or
and
xchg
mov
xor
mov
add
aaa
imul
cmp
aaa
into
cmpsl
pop
cmp
lods
sahf
loopne
adc
inc
xlat
insl
xor
cmpsb
cmp
jge
or
jae
out
inc
push
jl
adc
xor
push
jb
add
pop
add
push
push
push
call
mov
mov
mov
or
mov
mov
shl
mov
or
mov
xor
xor
call
add
mov
mov
push
jmp
fnstenv
inc
mov
mul
push
xchg
inc
or
add
fldt
negb
or
fmulp
and
mov
lcall
jmp
push
adc
dec
out
ret
loope
out
and
mov
das
sbb
or
cmp
das
add
mov
ret
sub
ds
sbb
pop
in
push
mov
mov
mov
psubusb
movsl
dec
mov
pushf
cld
nop
lods
add
push
enter
mov
daa
aam
adc
lds
mov
cmp
inc
sahf
dec
jne
xchg
xor
adc
inc
inc
push
mov
jp
jns
movsl
inc
mov
andl
fdivrs
cmp
dec
inc
lods
or
sub
sub
or
mov
ss
push
nop
fnstsw
pop
out
std
outsl
mov
jl
std
dec
and
push
mov
arpl
xor
dec
pusha
xor
es
add
and
movsb
addb
imul
push
push
push
in
ljmp
mov
icebp
push
pop
cwtl
fs
notb
fcmovu
or
fdivs
insl
out
call
add
inc
mov
les
sub
gs
xchg
mov
sub
sbb
mov
lock
xchg
xor
or
lods
push
jl
xchg
fsub
inc
int3
loop
ret
push
stc
push
clc
and
jmp
mov
cmp
ret
cmp
ljmp
xchg
arpl
lods
in
stc
sub
mov
shll
int3
or
ss
and
cltd
scas
cmp
aaa
xor
xchg
pushf
jns
cld
arpl
mov
cs
add
adc
adc
nop
jmp
daa
stos
jno
in
popa
test
std
xchg
sub
jb
dec
gs
mov
leave
xchg
dec
jns
test
jp
jns
mov
pop
xchg
insb
fs
test
cwtl
mov
jecxz
cmpl
into
xchg
xchg
rcrb
sbb
jne
mov
jmp
mov
jmp
addb
in
aaa
inc
add
push
cltd
daa
ljmp
pop
icebp
nop
add
jecxz
movsl
fwait
jne
mov
fldenv
in
cmc
adc
pop
pop
dec
out
cs
push
mov
xchg
adc
lahf
inc
sbb
mov
orl
addr16
add
xchg
lret
xor
rcrl
mov
push
or
xchg
or
cmpsb
push
xlat
sub
cli
in
xchg
sbb
inc
cmp
sbb
mov
and
ds
xor
movsl
and
ss
mov
add
sbb
pop
dec
inc
test
sbb
rcr
aas
adcl
jne
cmpsl
aad
adc
sbb
inc
jp
xor
out
mov
sbb
add
mov
inc
aam
xchg
sub
stc
and
roll
sub
push
inc
adc
push
mov
or
out
fsts
push
dec
nop
mov
or
pop
dec
xor
dec
testb
arpl
push
shl
out
jns
and
push
sarl
out
fidivrl
int3
cld
mov
ret
adc
loopne
subb
cwtl
icebp
nop
cld
ss
mov
das
fsubs
lahf
mov
dec
repnz
or
jo
fs
jmp
push
orl
adc
pusha
and
int
cmpsb
icebp
push
mov
push
loop
lock
sub
inc
icebp
jbe
in
adc
jno
push
jbe
mov
movsb
stos
sbb
lock
stc
xor
ret
jmp
mov
xor
mov
xor
xchg
and
cmc
stc
mov
movsb
mov
insb
insl
popf
lret
out
aad
cmpsb
mov
int3
stc
rol
dec
fdivrl
mov
int
cmc
scas
ret
shrl
jb
adc
pop
and
cwtl
data16
in
ljmp
adc
pop
lret
xor
and
mov
sbb
fld
mov
adc
sbb
push
pop
mov
mov
fwait
jne
cmp
xor
jle
mov
cld
cwtl
or
mov
sub
cmc
jbe
push
mov
mov
ds
pushf
cmp
or
xor
nop
cmp
stos
int
or
test
pop
mov
scas
inc
xchg
sti
xchg
or
mov
add
adc
cltd
sub
gs
loopne
or
jnp
adc
push
sbb
icebp
cmp
pop
dec
push
mov
xlat
xchg
loop
imul
adc
inc
and
insb
int
and
lods
pop
daa
call
mov
outsb
xchg
int
bound
lcall
mov
xchg
aam
adcb
out
xor
adc
mov
adc
ds
ljmp
pop
fsubr
sub
imul
add
lock
fbstp
cmp
fcompl
repnz
cmp
mov
mov
pop
xchg
divb
icebp
push
movsb
xchg
jb
loop
sub
scas
pop
inc
adc
addr16
mov
inc
cld
or
jbe
mov
lds
mov
pop
xor
ds
xchg
push
popf
xchg
push
jmp
cmp
push
lock
mov
jl
dec
addb
mov
movsb
clc
xchg
sub
insl
mov
test
test
push
xchg
scas
hlt
fmuls
lret
push
sahf
popf
push
jo
das
nop
cmp
inc
and
mov
jne
or
ja
stos
in
xor
pushf
pusha
ret
aaa
fs
sub
sti
inc
out
pushf
das
shlb
sarb
inc
mov
fnstenv
dec
mov
and
sub
sahf
mov
pop
inc
inc
orb
cmp
push
andnps
jnp
movsb
lahf
std
adc
iret
insl
daa
daa
bound
sub
or
int
stos
xchg
mov
sbb
sub
out
inc
sub
inc
imulb
call
push
movnti
leave
daa
test
in
mov
push
mov
loope
pusha
mov
xor
mov
movsb
xlat
jmp
fcoms
outsb
or
movsl
daa
jno
test
pop
add
adc
push
push
xor
xor
call
push
push
push
push
call
mov
mov
mov
or
mov
or
or
or
xor
xor
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
jmp
out
fisubl
push
jne
lret
sti
xchg
mov
add
jle
pop
test
xlat
mov
dec
or
mov
les
insb
mulb
aad
mov
mov
add
leave
sarb
icebp
ss
push
fdivr
push
cmp
jns
and
std
lea
ljmp
xchg
sub
xlat
push
push
push
std
dec
mov
sbb
mov
sarl
inc
ds
cmp
fs
add
xchg
inc
lret
and
les
fcmovnbe
pop
inc
sub
sbb
test
fcoml
mov
fbld
push
stc
xchg
pop
adc
sub
jmp
or
fcmovnb
and
ret
loopne
out
cmp
insl
jae
fcmovne
xchg
xor
or
subl
jns
xchg
push
int3
jnp
jmp
jne
into
jle
stc
scas
cmp
mov
cmpsb
bound
and
or
inc
scas
cld
scas
xlat
lret
or
sub
nop
mov
xchg
stc
jbe,pn
adc
cmp
pop
mov
or
lret
adc
xor
inc
xchg
sub
inc
pop
jne
adc
mov
syscall
cmc
cmp
xchg
mov
dec
scas
out
mov
mov
push
pop
cmp
arpl
mov
in
lcall
rorl
cmp
xor
aas
add
xchg
imulb
out
jno
and
fwait
imul
and
mov
pop
mov
pushf
fbstp
scas
shll
add
dec
out
lret
and
xchg
enter
add
loope
push
mov
adc
cs
xchg
push
adc
insb
or
mov
int3
pop
and
inc
mov
arpl
and
pop
enter
mov
xchg
in
in
push
sub
and
mov
scas
aas
out
data16
push
mov
cmpl
sub
jbe
lods
push
lods
mov
pop
les
sbb
test
popl
ret
shlb
push
adc
push
test
mov
mov
mov
sbb
pop
ret
xchg
dec
pop
je
add
rol
inc
ret
and
inc
iret
xor
adcl
nop
lret
pushf
test
add
and
xchg
pop
push
cwtl
and
sbb
icebp
lcall
popa
lods
testl
push
repnz
outsb
sub
ja
ret
xchg
adc
addl
jae
pushf
cmp
and
mov
popa
ficompl
jb
mov
xlat
mov
maxps
loop
fistpl
test
pop
sub
cwtl
xchg
mov
mov
sub
test
nop
stos
cli
pop
scas
jno
pop
pop
push
into
sbb
sub
pushf
idivl
lea
sbb
mov
mov
std
icebp
dec
mulb
mov
mov
or
inc
std
mov
mov
lahf
sbb
xchg
push
mov
add
jmp
divb
sbb
mov
xchg
pop
mov
pushf
into
filds
dec
std
mov
add
xor
sahf
movsl
inc
icebp
push
push
ret
xlat
push
jnp
adc
stc
loop
popl
dec
lahf
cld
inc
sbb
out
mov
sub
mov
arpl
mov
mov
pop
cmp
jae
dec
push
hlt
push
lcall
mov
jmp
mov
xor
add
dec
sub
das
dec
dec
xchg
adc
fistl
jnp
jle
inc
sub
xor
dec
mov
insl
ljmp
pop
mov
ficoms
enter
in
pop
inc
rclb
loopne
lea
xorl
mov
dec
sbb
out
insl
daa
scas
xchg
mov
daa
xchg
les
shll
xchg
and
xchg
push
mov
pop
fcomip
rcll
jmp
das
add
idiv
dec
add
jnp
sub
xchg
fistpll
sbb
xchg
or
popa
hlt
test
into
daa
test
mov
and
xlat
and
jae
les
sub
aad
pop
mov
fwait
icebp
or
dec
cmp
and
xchg
inc
adc
and
jp
adc
lods
cmp
and
mov
mov
insl
pop
xchg
mov
xchg
lods
inc
stos
xchg
xchg
push
in
cmpsl
test
inc
and
mov
test
in
mov
or
sub
cwtl
sub
notl
sub
xor
loope
icebp
fs
int
push
mov
loopne
mov
pop
jo
lcall
pop
dec
jmp
rcrl
add
pop
repz
mov
mov
sbb
push
sbb
pushf
lock
xchg
lock
jge
daa
rorb
movsb
mov
pop
imul
aad
adc
lret
mov
hlt
mov
mov
and
sub
xchg
enter
mov
ret
lahf
loopne
push
and
xor
ret
addr16
insb
sbb
xlat
jg
aas
ja
into
popa
add
sbb
ffree
in
loop
ds
fistl
fsubr
sbb
mov
cmpsb
loop
pop
arpl
pop
ljmp
cmpsl
mov
imul
insl
inc
mov
nop
lds
clc
notl
mov
nop
cmp
outsb
out
sbb
pusha
mov
jle
dec
cli
shlb
pop
sbb
jl
cmp
je
repnz
jle
jne
xor
fimuls
mov
cmp
mov
ss
add
add
sub
pop
pop
pmaddwd
fcoml
or
fwait
push
lea
add
xchg
addr16
jl
inc
pop
add
inc
arpl
add
shll
dec
fisubrl
fisttpll
leave
gs
mov
in
or
notb
repnz
mov
jbe
xchg
out
mov
mov
addr16
std
mov
sbb
and
lds
cmp
cmp
pop
mov
lahf
push
popa
sub
pushf
add
jp
xchg
sahf
je
lcall
mov
pop
and
xchg
mov
push
fisubl
out
cld
stos
hlt
arpl
lods
jg
or
sbb
add
xor
mov
xor
mov
push
push
push
push
call
push
push
jmp
add
lds
aad
stc
mov
add
adc
xlat
ja
adc
pop
mov
shl
mov
adc
push
icebp
enter
sub
testl
xchg
jl
pushf
dec
inc
lock
sbb
and
pop
mov
bound
jp
push
or
jle
loopne
js
add
adc
mov
ret
pop
movb
aas
lret
push
xadd
dec
cli
sub
xchg
std
sbb
aaa
pop
cmpsl
mov
into
in
in
jge
push
movsb
in
add
stos
push
je
orb
fwait
mov
pop
fstp
mov
movsb
push
sahf
pop
add
mov
add
in
xor
push
mov
test
popf
push
jl
mov
aam
xor
pop
outsb
ss
mov
push
pop
js
fsubl
pop
in
test
pop
arpl
push
sub
push
pop
sti
push
lods
gs
pop
sbb
cmpsl
test
in
fwait
pop
ss
inc
xor
mov
xor
cmp
xchg
aas
add
in
xor
or
mov
lret
and
sub
push
outsl
add
bound
int
cli
push
mov
xchg
lock
ljmp
xor
add
clc
movsl
pop
adc
lods
insl
out
xchg
enter
xchg
scas
popa
repz
call
fs
adcl
jle
push
not
mov
xchg
popf
fcoml
jmp
xor
movl
aaa
lret
sub
call
dec
or
outsb
jl
mov
addps
bound
push
sub
mov
imull
adc
lea
pop
jno
sub
jmp
inc
mov
mov
insl
insb
xchg
loop
inc
in
sub
test
cmp
pop
fs
cmpsb
jl
adc
lcall
lock
ret
lods
stos
aad
loopne
push
rolb
icebp
dec
push
ljmp
and
xor
add
push
addl
add
fdivrl
dec
pop
and
fwait
push
stc
cli
into
sub
stc
lock
mov
mov
mov
sub
ret
and
daa
addr16
xchg
dec
sub
jmp
ret
in
push
xchg
cmp
jecxz
inc
nop
add
jno
mov
mov
pop
push
sbb
ljmp
imul
inc
sbb
int
push
xchg
pop
inc
and
fdivs
icebp
mov
xchg
and
sub
outsl
xor
mov
mov
and
cmp
or
loopne
push
and
int3
push
scas
inc
add
addl
les
cmpsb
imul
rclb
sub
mov
dec
nop
xlat
scas
cmp
jmp
ret
lods
es
fstl
test
ja
mov
enter
push
popf
pusha
bound
cltd
push
and
rcrl
and
adc
or
mov
pushf
out
lea
mov
icebp
lods
or
daa
int3
int3
mov
mov
or
and
pop
stos
ret
cmp
dec
pop
js
pop
ret
dec
add
int
sbb
ret
sbb
es
pop
gs
inc
jp
jno
loopne
into
sub
cmc
lods
js
and
std
sti
ljmp
daa
shl
add
mov
pop
or
add
mov
imul
icebp
jmp
ret
test
adc
xchg
xchg
adc
movl
shr
mov
jle
jbe
imul
push
aam
jns
and
and
setg
adcb
pop
jmp
cmp
iret
and
cwtl
jge
out
rcrb
js
subb
or
push
cmpsl
lods
lea
xor
mov
and
mov
hlt
push
dec
sbb
push
jb
mov
imul
sbb
cmp
mov
aaa
mov
add
inc
enter
std
stos
repnz
fwait
mov
in
sar
push
xor
int
std
lahf
out
mov
sub
cs
insb
movsb
ja
scas
movsl
std
jl
leave
sub
das
cmp
into
push
test
add
jae
jge
push
xor
loopne
lods
sbb
adc
ljmp
or
push
pop
ss
mov
fwait
jnp
popf
les
rorl
jmp
xor
int3
sbb
aaa
lret
jle
mov
jp
mov
xchg
inc
jbe
call
scas
or
push
mov
pop
data16
jae
movl
cwtl
lahf
icebp
mul
jno
xchg
fidivrl
cwtl
mov
sti
add
scas
arpl
insb
cmp
repz
or
hlt
js
jmp
cld
popf
jecxz
es
lahf
mov
ja
or
je
dec
jns
fistpll
xor
mov
ficoms
pop
xor
jmp
add
xor
xor
leave
cmpsl
nop
mov
mov
divb
int
lret
imul
loop
shrb
push
jbe
cmpsl
nop
call
cmp
fldl
jg
mov
in
mov
fs
lock
push
mov
testl
in
cmp
add
add
cmpl
out
mov
jge
inc
hlt
mov
jo
out
jns
pop
cmpl
sub
pop
repz
jecxz
inc
subb
mov
iret
xchg
sub
mov
fstpt
xchg
in
incl
jle
sbb
fdivrs
pop
iret
subb
adc
sar
popf
movsl
mov
xchg
inc
push
ret
xlat
sub
out
push
dec
movd
xchg
adc
xor
xor
pop
orb
test
loope
movsl
movsb
fsubp
rcr
sahf
clc
add
mov
clc
jp
nop
pop
push
push
pop
mov
outsb
jno
xor
lds
xchg
xchg
cmp
call
add
pop
rorb
inc
xlat
mov
inc
xor
inc
jae
test
xor
inc
std
outsl
adc
or
pop
lret
jne
mov
in
fldl
dec
leave
lcall
popf
xor
mov
cld
sahf
xchg
sbb
lock
jp
fstpl
ds
inc
lret
pop
mov
jle
sbb
imul
imul
mov
pop
sbb
scas
sahf
jo
fcomip
inc
mov
lcall
push
push
call
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
adc
movl
mov
sub
mov
xorl
mov
addl
movl
orl
jmp
sti
out
out
jo
jo
pop
inc
push
push
mov
js
invd
add
sets
mov
in
sahf
jl
xchg
ds
cli
or
enter
dec
divl
jo
pop
lcall
push
pop
cli
sbbl
sub
and
or
inc
mov
jns
cmp
insl
or
or
push
jae
shlb
out
iret
lret
jns
lahf
sbb
pop
rclb
jb
out
in
movsb
inc
mov
into
push
test
int3
pop
xor
fnsave
es
fsubrs
cmpsl
filds
jne
mov
xlat
jbe
pop
imul
pop
push
adc
addr16
xchg
mov
mov
rorl
cmc
mov
adc
aad
aaa
enter
inc
or
stos
pop
cmp
xor
daa
in
mov
sub
jl
sub
sub
ror
sub
xchg
jp
loope
sbb
gs
push
sub
pop
lahf
inc
imul
pop
or
shrb
gs
stc
xchg
pop
mov
repz
lret
fstps
shll
mov
mov
in
and
jge
pop
xlat
fdivrl
push
cmp
ret
adc
iret
jno
int3
outsb
lock
inc
maskmovq
xchg
jmp
cmpsl
sub
mov
rclb
mov
jp
outsb
push
outsl
mov
movl
scas
mov
call
add
inc
add
fs
lcall
adc
imul
or
stos
add
ficoms
lahf
outsb
jl
sub
mov
pop
push
push
cmp
jg
jecxz
adc
daa
pop
repz
push
jecxz
add
mov
roll
lock
jno
lcall
lahf
or
cmp
lea
jmp
jbe
andb
das
cld
push
mov
in
mov
cs
pop
nop
pop
or
adc
ret
int
cmc
push
or
pop
sti
mov
adc
adc
xchg
lds
xchg
adcb
sbb
in
mov
mov
cmp
or
clc
lods
sbb
cmp
ret
pushf
push
xor
in
stc
jae
adc
and
out
mov
pop
insl
lret
data16
mov
or
dec
mov
ret
sahf
mov
or
mov
adc
and
stos
scas
mull
andb
data16
mov
pop
cmc
mov
push
cmpl
fs
in
test
push
xchg
adc
sub
xlat
lcall
add
mov
outsb
cmp
push
lcall
mov
and
mov
and
jl
bound
gs
pop
xlat
inc
adc
cmp
leave
push
xor
pop
orb
cwtl
lods
out
push
test
dec
int
adc
push
pop
int3
xor
jmp
pop
add
sub
sub
dec
repnz
cmp
xor
lahf
rcrb
dec
out
pop
push
call
sub
mov
pop
xor
mov
jb
mov
test
jb
outsb
or
daa
push
xor
fxam
fmull
js
jg
andnps
lods
mov
popa
xor
insl
pop
dec
jns
xchg
mov
push
fildl
outsl
jo
popa
mov
data16
jmp
popf
xorl
popf
call
out
mov
out
in
mov
sbb
push
cwtl
les
lcall
bound
xor
clc
cmpsb
pop
fdivl
pop
sub
pop
jle
aam
xor
jne
js
lods
push
adc
fadds
jb
and
stos
push
lods
lock
xor
mov
sarb
pop
push
negb
sub
pushf
lret
lds
or
jbe
divb
jge
pop
push
jo
pop
jo
stc
arpl
xorl
xor
dec
mov
sbb
add
push
outsb
out
subb
sub
push
jmp
inc
push
aaa
out
sub
mov
push
push
mov
addl
pop
add
js
outsb
stos
rclb
in
mov
jmp
adc
cmp
xor
cld
shrb
scas
cmp
pop
pop
std
and
insb
sbb
jb
mov
or
mov
popf
jne
jae
movsb
loop
rcl
cmp
jns,pn
adc
je
hlt
jmp
repnz
inc
fisubrs
pop
ret
scas
mov
mov
aaa
mov
test
push
or
push
sbb
xor
out
sbb
pop
add
sbb
mov
or
ret
mov
out
lea
lods
adc
xchg
and
ss
pushf
lea
ret
sbb
adc
icebp
insl
outsl
ret
xchg
pop
xchg
outsl
dec
shlb
pop
dec
sahf
fsub
das
pop
pop
sub
mov
dec
and
mov
ret
jg
pop
pop
fcoms
es
dec
add
test
and
xor
enter
in
fistps
loopne
scas
daa
mov
jns
scas
push
rcr
dec
les
jle
sbb
cltd
or
pop
jmp
ds
push
in
dec
je
dec
adc
iret
add
out
push
insb
add
pop
mov
fcomi
mov
cmp
add
or
mov
nop
test
out
aam
mov
std
imul
xor
addr16
ret
shrb
imul
gs
xchg
or
fxch
xchg
rclb
inc
int
sti
loope
test
imul
add
and
xor
scas
mov
out
xlat
test
scas
shrb
mov
lods
xchg
pop
xor
jp
cmp
inc
in
movb
movb
cmpl
jbe
andl
adc
jmp
pushl
call
movb
movzbl
mov
sub
imul
mov
or
movzbl
push
orl
and
mov
movb
movl
movb
subl
movb
movb
orl
mov
orl
mov
subl
add
adcl
jmp
ret
sub
shlb
mov
xor
mov
xor
mov
loope
invd
add
pshufw
cmp
shll
push
or
push
lret
cli
xor
lahf
stos
in
rcr
scas
mov
adc
pop
adc
xlat
icebp
in
ss
jmp
jge
xlat
enter
inc
nop
sub
icebp
gs
pop
cli
hlt
push
and
pop
xchg
mov
fidivs
push
or
mov
outsb
push
hlt
xor
adc
jae
sbb
aas
mov
repnz
xchg
add
pop
adc
and
jo
pop
jge
shlb
adc
lds
clc
mov
and
mov
sub
sahf
ds
dec
popf
sti
int3
or
and
lock
jno
cmpb
xchg
scas
shrb
mov
cmp
and
rcrl
inc
mov
sub
inc
repz
iret
js
fadds
lcall
sti
rorl
cmp
idivb
mov
mov
pop
ss
mov
mov
add
popf
cmp
outsl
mov
mov
jbe
adc
cli
jle
push
xchg
pop
xchg
pop
cld
dec
push
repnz
inc
add
jecxz
mov
jbe
push
sar
lret
jg
xchg
push
test
jnp
aad
dec
int3
push
adc
lds
jp
sub
fsubrl
xor
inc
pop
pop
xor
adc
mov
mov
adc
cmpsb
inc
or
pop
push
arpl
mov
adc
int3
aas
or
pushf
mov
pop
mov
dec
mov
jb
push
xchg
and
aas
popl
jge
and
or
stc
stc
add
nop
jg
in
pop
cmp
sbb
lock
sub
cmp
sub
in
adc
xlat
test
jle
stos
and
xchg
cmp
xor
and
dec
cmp
cmpsb
test
adc
xor
adc
cli
cmp
mov
pop
mov
shlb
cmpsl
loope
les
mov
adc
or
imul
ds
std
mov
lret
push
cmp
ficomps
mov
xchg
mov
out
hlt
sub
pop
jg
pop
loopne
imul
das
fistps
adc
sub
cmp
lcall
outsb
jle
mov
pop
inc
jne
dec
rcll
dec
leave
jo
and
dec
mov
cmp
sbb
gs
leave
lods
clc
push
aad
push
into
push
scas
jbe
mov
pop
outsl
fistpl
mov
jp
pop
mov
insb
roll
adcl
and
data16
cmp
popa
out
out
insb
pop
repz
mov
xchg
adc
int3
add
jle
test
push
test
jno
pushf
sub
cmpsb
rorb
jno
in
xchg
cmp
mov
leave
and
filds
pop
popf
aaa
je
arpl
pcmpgtw
inc
shll
movsl
test
xchg
xor
push
je
dec
dec
fsubrl
testb
push
in
mov
nop
mov
lahf
cmc
pop
add
push
cmp
aaa
pop
sbb
xor
fcmovnbe
movl
add
mov
dec
mov
mov
xchg
fs
cltd
pop
test
push
ret
movsl
pop
cli
mov
mov
pop
or
ret
imul
mov
sub
pop
mov
clc
mov
icebp
xor
and
mov
pop
jb
inc
push
nop
lret
das
into
push
insl
repz
pshufw
shll
xchg
andl
int
xchg
mov
fidivl
in
add
adc
inc
stos
sbb
pop
cmp
bound
jne
xchg
inc
push
cli
movsb
push
es
pop
xlat
stc
fbstp
push
mov
add
mov
pop
xchg
movsl
and
lcall
std
scas
xchg
xor
dec
adc
pop
and
cmp
lcall
data16
cmp
ret
inc
add
add
pop
insb
jnp
cmp
lds
sub
arpl
adc
cmc
test
sbb
das
xlat
xchg
mov
cmpsb
mov
paddusb
int
lret
dec
mov
imul
sub
sti
add
fucom
push
pcmpgtd
iret
mov
stos
adc
cltd
test
xchg
lret
push
jb
jecxz
pop
sbb
mov
dec
fldl
sbb
aam
jns
cmp
push
sbb
aad
or
dec
jo
test
in
inc
cmp
mov
movsl
jmp
shll
icebp
loop
and
cmp
sub
xor
mov
pop
add
fiadds
cmp
pop
mov
cmp
inc
or
or
xor
push
aam
fs
movsl
push
jmp
into
xor
push
ret
out
sub
mov
icebp
xchg
and
mov
cmp
lock
push
mov
or
xor
cmpps
mov
sub
addl
imul
mov
dec
cltd
scas
cmpsl
rcrl
mov
pop
xor
jo
mov
in
fmuls
aad
pop
jl
sbb
aas
arpl
or
movsl
scas
jbe
loopne
sub
dec
push
jnp
add
mov
in
mov
mov
out
cmp
pushf
xlat
inc
jge
jmp
std
into
jecxz
and
push
inc
into
or
adc
loopne
mov
arpl
int3
or
inc
in
ljmp
imul
aaa
dec
pop
push
popf
and
out
sub
outsb
fcoml
outsl
clc
cmp
bound
out
shll
testb
imul
or
hlt
imul
mov
addl
or
addl
mov
subl
and
movl
jmp
mov
hlt
add
sbb
loop
mov
invd
add
por
xchg
lahf
ja
push
mov
mov
dec
test
je
shrl
js
mov
push
and
movsl
outsb
imul
cltd
sbb
clc
jne
fimull
clc
or
arpl
mov
mov
mov
cmp
xchg
or
mov
rcll
shr
pop
mov
mov
add
mov
ret
lahf
ror
outsb
xor
xchg
fisttpl
cmpsl
ret
inc
cmpsl
adc
adcb
pop
ret
sbb
call
dec
mov
sahf
bound
fistpll
adc
ja
push
jnp
outsl
fwait
dec
repnz
mov
dec
fwait
std
xor
sbb
mov
movsb
sbb
xor
daa
dec
dec
jmp
repz
stos
leave
xchg
mov
and
mov
iret
cmp
and
push
int
add
ss
divl
jle
xlat
outsl
xor
into
div
cmp
push
mov
in
outsl
jo
xchg
iret
xchg
jne
cmp
push
and
mov
push
cmp
dec
je
enter
push
sbb
out
fbld
sub
sub
xchg
inc
jne
inc
sub
and
sbb
std
test
pop
in
sub
adc
test
push
and
daa
jae
inc
push
jb
mov
sub
cltd
xchg
loopne
jle
or
xor
popf
and
dec
xchg
xchg
cmp
cmp
fdivs
push
movsb
sub
mov
dec
ret
pop
leave
sti
jnp
les
xor
jns
lret
jecxz
cmp
pushf
jmp
adcl
pop
or
stos
mov
sbb
jp
and
cli
inc
add
mov
mov
inc
stos
mov
lcall
fisubl
xlat
hlt
int
rorl
ss
mov
dec
push
lret
neg
fistpll
stos
aaa
pop
lret
fmuls
sub
inc
add
add
push
sub
lock
hlt
lcall
inc
pop
test
mov
stos
jecxz
xor
clc
adc
adc
cmpsb
std
or
lret
pop
test
scas
inc
in
bound
cmp
push
insb
mov
test
add
xchg
pop
loop
lds
lods
icebp
lret
pop
sub
pop
and
imul
add
jp
insl
sub
push
and
sub
mov
cwtl
mov
je
or
fcomps
addl
mov
sub
jbe
pop
cmp
enter
dec
jnp
xor
pop
add
inc
sbb
push
scas
pop
push
sbbb
xchg
out
lcall
dec
pop
ja
xchg
icebp
aaa
or
pop
pop
test
adc
add
adc
inc
cltd
sbb
pop
sub
inc
rol
hlt
imull
call
aad
mov
xor
sub
jg
jne
fisttps
or
les
shl
pusha
dec
in
add
fxch
arpl
mov
add
pusha
lret
pop
scas
add
mov
sbb
testl
fldl
into
gs
inc
das
or
outsl
enter
cmp
jnp
jb
add
subb
movsl
inc
add
outsb
jns
adc
bound
data16
mov
push
and
ret
in
lret
mov
mov
mov
js
lret
mov
jl
into
mov
mov
les
dec
mov
fildl
into
dec
or
mov
addr16
push
mov
xchg
adcb
imul
pushf
rcll
scas
stos
adc
insb
cmp
mov
sub
adc
mov
popf
push
es
lea
jp
dec
inc
aas
rclb
shrb
mov
sbb
lods
and
inc
and
jmp
mov
scas
enter
test
sub
adc
in
insl
pop
dec
sub
and
cld
aaa
popa
adc
out
push
jns
insl
xchg
mov
fidivrl
jbe
pop
imul
mov
andl
sub
xchg
fdivr
shrb
sti
inc
movsl
fwait
pop
xchg
mov
test
and
fcoms
or
push
loope
xor
sti
addb
jb
lahf
mov
push
jns
mov
jno
scas
into
xorl
sub
push
call
bound
pushf
les
mov
dec
jp
jp
loope
mov
jne
int3
xchg
fldl
push
stc
notl
std
or
inc
or
call
pop
lcall
sbb
mov
movsb
mov
and
iret
movsl
ret
stos
xchg
adc
sahf
or
pop
xchg
out
sbb
pop
fsubs
mov
ret
fwait
ljmp
sti
mov
out
popa
xchg
jp
popf
fwait
or
rcl
inc
add
int3
jmp
mov
divb
ja
pop
xor
jbe
mov
mov
pop
inc
mov
das
cli
sub
in
jl
lods
inc
or
dec
push
gs
xchg
add
jno
mov
mov
or
add
outsb
dec
clc
fiaddl
xor
inc
js
test
rorl
ja
popf
or
daa
pop
add
and
test
insb
sbb
cmp
fs
cmp
lret
fidivs
nop
mov
icebp
shl
pop
jmp
jecxz
call
pop
inc
leave
adc
stos
leave
or
mov
mov
stc
sahf
iret
std
mov
pop
rcl
lods
sub
inc
int3
pop
loop
xchg
out
leave
adc
stos
stos
xchg
push
adc
movsb
fs
les
daa
xor
stos
repnz
jmp
lret
lret
mov
cmp
mov
cmp
ja
mov
mov
sub
mov
cmpl
jl
andl
mov
and
jmp
push
push
push
call
mov
mov
movzwl
movzwl
shr
addl
or
sub
movl
mov
orl
movb
movb
sbbl
mov
mov
xorl
xor
addl
add
xorl
movzbl
movzbl
sub
cltd
mov
adc
mov
jmp
mov
pop
push
and
sub
mov
mov
lahf
ret
invd
add
invd
fisubrl
aas
rcrb
mov
jp
icebp
push
call
mov
nop
movsb
mov
sti
das
loop
and
dec
in
fs
es
test
out
adc
mov
mov
shll
cmc
push
test
jmp
int3
xchg
pop
push
add
frstor
arpl
daa
jns
lea
lret
loope
xchg
sahf
cmp
outsl
cld
jo
mov
into
lahf
sysret
jl
mov
push
sbb
call
dec
leave
inc
jbe
inc
cli
pop
jo
push
mov
fcoms
insl
lret
mov
popf
lcall
xchg
push
jnp
fisttpl
rcrb
adc
xchg
pop
mov
jo
push
hlt
mov
adc
cmpsb
fwait
gs
stc
ds
cmpsb
adc
lcall
movsl
mov
adc
xor
stos
frstor
mov
aaa
fdivl
mov
mov
inc
add
lret
nop
pop
shlb
cmpsb
pop
movsl
imul
pop
mov
push
xchg
fwait
arpl
fstpt
mov
scas
push
sbb
data16
mov
dec
sbb
lods
inc
push
bound
test
mov
popa
and
popf
cmpl
fmul
mov
loop
push
lds
cmp
mov
cs
jecxz
cmp
clc
xchg
sar
in
add
sbb
aas
xor
addr16
aam
adc
popa
in
mov
xchg
or
lds
test
mov
mov
dec
sahf
or
test
and
cmp
fsubrp
jae
adc
sbb
inc
push
nop
inc
mov
test
adc
add
mov
add
mov
xor
jle
into
sub
lds
mov
adc
int
ds
xchg
scas
dec
out
sbb
or
or
int
movsl
test
and
outsb
icebp
int3
or
push
outsl
jns
pop
imulb
adc
xchg
test
ret
add
js
outsl
orl
mov
movsl
sarb
mov
xorps
inc
mov
nop
xchg
sub
cld
and
lret
pop
daa
out
sbb
inc
test
inc
pop
push
mov
mov
jle
or
and
inc
fimuls
jp
pcmpeqb
mov
std
pop
repnz
lock
jbe
sti
jo
adc
sarb
test
js
jp
mov
inc
pop
add
je
idiv
loop
out
inc
and
mov
jno
mov
adc
shlb
xchg
mov
pop
mov
sub
movl
outsb
mov
jge
ds
or
sbb
mov
push
dec
mov
pushf
jle
jbe
std
xor
dec
fsubl
mov
insl
sbb
test
fmull
mov
fcmovne
retw
xchg
adc
nop
adc
in
arpl
clc
loop
xlat
sub
cli
mov
or
pop
push
push
xor
dec
mov
xor
invd
pop
add
xchg
xor
xor
or
jne
in
add
arpl
fadds
mov
mov
or
outsb
jecxz
jo
sbb
push
inc
imull
lock
cmc
dec
lahf
cmp
or
out
mov
add
aam
cmp
bound
pop
push
mov
adc
sar
cmc
cmc
adc
mov
repnz
cmc
fcomi
or
dec
fidivl
sti
rcll
push
cmpsb
jg
subl
pop
in
hlt
sub
imul
rcrb
cmp
mov
jg
add
or
sub
shrl
outsl
jl
ds
aad
xchg
test
movsl
pusha
shlb
cmc
push
cwtl
sbb
sbb
fwait
xchg
xlat
orb
lret
ja
into
inc
fistpl
or
xchg
bound
lahf
mov
jge
mov
rcll
imul
jge
adc
stc
test
cmp
gs
icebp
incb
adc
pop
cwtl
repz
pop
repz
jae
cld
fisttpll
lods
fcoml
xchg
cli
inc
xchg
add
sbb
daa
jb
leave
dec
cli
daa
xchg
mov
lret
unpckhps
push
xchg
dec
out
cmp
leave
lea
aam
add
xchg
daa
mov
aas
jmp
adc
mov
pop
dec
dec
hlt
arpl
xor
bound
insl
dec
push
pop
pop
jge
mov
outsl
or
mov
dec
insl
pop
outsl
lcall
pop
xor
lret
mov
jle
rcl
cmp
mov
dec
in
cmp
insb
lods
dec
inc
cs
rcll
insl
adc
sbb
dec
dec
mov
cmp
aam
ror
roll
push
ret
lret
adc
jno
sub
cmpsl
and
jecxz
cwtl
jl
mov
cmp
pop
jl
stc
xchg
jle
cld
jge
add
inc
cmp
scas
mov
mov
clc
xor
and
or
or
inc
mov
out
jbe
push
xchg
pop
and
mov
and
ret
outsb
inc
mov
andb
test
jbe
sbb
xchg
std
mov
ja
push
dec
push
pop
fildll
pop
mov
xlat
lods
push
dec
outsl
insl
jns
lods
sti
leave
mov
push
ss
lods
adc
popa
push
fcoms
call
mov
add
cli
jl
popf
sub
cld
adc
aad
loopne
inc
cmp
sti
loopne
imul
gs
add
push
ret
mov
ficoms
sbb
js
cmp
cmpl
jl
and
jmp
push
call
jmp
sub
push
xchg
jne
jle
mov
loopne
cwtl
test
movzwl
cmp
dec
inc
shll
fdivs
mov
mov
xchg
push
sbb
mov
fisubs
scas
lods
cmp
scas
ds
pop
in
add
daa
in
in
inc
into
fwait
inc
sub
imul
jns
xchg
fld
jecxz
ja
std
inc
cmp
out
mov
sub
push
fcmovb
aaa
lock
fistps
mov
loope
arpl
adc
outsl
jne
movb
lds
lcall
or
leave
jnp
add
adc
mov
jae
mov
adc
inc
or
mov
sbb
cmpsl
mov
out
dec
pop
jle
and
push
test
mov
push
sub
push
cmpsl
push
inc
cli
pop
out
mov
pop
lock
inc
arpl
push
add
subl
sbb
or
sbb
mov
add
mov
add
dec
jae
adc
jmp
js
xor
jg
fmull
lret
loope
dec
add
pop
pop
inc
mov
mov
les
pop
jp
mov
lock
mov
and
push
sub
dec
inc
in
mov
loop
dec
mov
push
out
jg
dec
mov
bound
jecxz
aas
cmpsb
jle
jmp
leave
lcall
mov
nop
sbb
sahf
or
push
je
push
out
fdivrp
jbe
daa
jne
outsl
decb
insb
fsts
aam
or
and
xchg
in
stos
jmp
push
shll
icebp
pop
inc
imul
test
outsl
lret
mov
mov
mov
cmp
lret
bound
dec
fistpll
mov
js
ljmp
iret
movsb
dec
or
movsb
xor
aaa
gs
and
popa
jp
mov
mov
loop
pop
int
adc
imul
dec
pop
testb
dec
fadd
pushf
dec
sub
dec
fs
data16
repz
ljmp
dec
sbbb
mov
cmp
adcb
jo
or
sti
adc
push
nop
xor
add
mov
adc
test
xchg
aad
int3
or
mov
pop
jbe
pop
mov
mov
int
lods
call
out
popf
scas
negl
in
adc
mov
rcll
jae
ja
push
das
pop
es
cmp
in
dec
mov
inc
add
iret
insb
pusha
mov
mov
hlt
ret
out
push
xchg
sbb
cltd
adc
flds
lods
push
pop
sbb
xlat
mov
lcall
cmpsb
loope
jae
mov
inc
test
fs
jae
dec
data16
push
jl
inc
js
and
inc
adc
mov
movsl
sub
sbb
mov
pop
testl
inc
decl
sub
inc
jmp
ljmp
and
sbb
fs
mov
sub
pop
sub
inc
dec
adc
adc
sbb
inc
push
push
cmp
mov
cli
push
mov
sbb
dec
xorl
pop
mov
xor
movsb
and
lcall
shl
pop
mov
cld
leave
lea
ljmp
xorl
xor
std
xchg
xchg
mov
lret
mov
cmp
adc
out
fadd
jecxz
adc
data16
pop
fwait
lods
lahf
sbb
add
stos
jg
adc
movsb
xlat
dec
aad
cmpb
mov
cmp
loopne
mov
push
mov
iret
aad
jns
jne
sub
mov
adc
adc
inc
bsf
fdivl
xchg
xor
mov
arpl
mov
ret
push
test
jo
je
lret
aam
and
push
js
scas
lahf
pop
stc
les
hlt
mov
cs
xor
jbe
inc
aas
je
rorb
ss
jmp
je
push
push
je
mov
cli
inc
rolb
leave
fmulp
shll
aad
cltd
mov
push
xchg
subb
cmp
lods
adc
ja
pusha
lds
jg
imul
shrl
mov
fimull
fsubl
inc
cwtl
xorb
loope
mov
dec
mov
rclb
jecxz
out
inc
cmp
jno
sbb
xlat
scas
cmc
fdivrs
dec
cmpsl
cs
roll
mov
pop
sub
sbbb
fisttpl
cmp
add
lods
pop
or
ficoms
lods
mov
aam
aas
sub
add
xchg
fs
sub
outsl
xchg
dec
int3
out
mov
pusha
testl
inc
icebp
mov
mov
insl
imul
adc
mov
lods
jo
mov
scas
xor
pop
push
popa
or
sbb
adc
jo
xchg
mov
outsl
inc
xchg
repnz
jbe
mov
or
push
ss
lcall
call
mov
inc
int
loop
adc
pop
xchg
scas
mov
fdivr
and
aas
test
jnp
sub
sbb
mov
jecxz
and
dec
mov
imul
jbe
dec
or
mov
ljmp
mov
out
dec
enter
sub
pushf
andl
fucomip
inc
push
mov
arpl
out
jecxz
test
cmp
or
mov
inc
fisubrl
mov
loope
xor
in
cwtl
adc
lods
idivl
sbb
iret
movsb
inc
inc
mov
xchg
aas
lock
and
jbe
add
scas
pop
idiv
jmp
mov
xchg
mov
dec
es
scas
popf
invd
add
bswap
cmp
jbe
push
mov
dec
jae
enter
adc
jbe
xchg
in
sbb
inc
rcl
push
mov
xor
pop
xor
jg
push
fwait
xchg
int
in
cmpsl
rcl
mul
adc
inc
gs
movsb
testl
add
enter
jecxz
aad
jo
xchg
shll
inc
adc
dec
pop
aam
adcl
fidivl
comiss
into
mov
iret
adc
lock
mov
iret
enter
mov
or
cmp
push
xor
sub
xor
push
push
mov
popa
jge
imul
sti
mov
pop
js
nop
dec
inc
xor
sub
inc
and
xchg
int
add
testl
xchg
pop
pop
fisubrs
and
jnp
popa
hlt
sub
add
xchg
sub
push
mov
add
es
stc
sub
push
imul
nop
sbb
arpl
or
int3
cmova
jnp
leave
add
mov
cmp
cmp
pushf
or
cmp
mov
mov
imul
mov
jp
sub
mov
mov
lds
outsl
nop
cmc
outsl
adc
cs
loope
fstps
repnz
push
inc
jecxz
xchg
mov
stos
pop
repz
mov
stos
inc
push
mov
scas
mov
xchg
jp
setle
scas
lds
stc
cmpsb
xor
xor
popa
cltd
push
and
xor
lret
fistl
jb
lcall
xor
pop
pop
in
pop
divb
sbb
jmp
pop
xor
mov
dec
stc
add
cmpsl
gs
ja
test
or
cmpsb
and
mov
sbb
ss
mov
adc
dec
mov
fs
imul
and
loop
test
jmp
mov
mov
xchg
fwait
xor
cwtl
ss
push
inc
mov
sub
push
sbbl
fimuls
cli
lea
inc
push
push
push
jae
fcmove
out
js
pop
xor
push
mov
mov
int
inc
cmp
cmp
cld
cmpsl
and
lock
pushf
xchg
imul
adc
or
xchg
dec
cmp
je
mov
mov
pop
pop
lds
sub
bound
rorb
cmpsl
or
je
pop
negb
push
cmp
xor
jae
mov
pop
inc
jno
negl
insl
mov
pop
rcrl
pop
adc
lds
gs
cmp
fsubrs
sbbl
clc
ret
addl
arpl
adc
ja
clc
in
ds
mov
fnstenv
jl
cmpsl
push
add
xchg
movsb
sbb
das
lods
popa
cs
scas
inc
inc
pop
stos
and
pop
xchg
push
lretw
aam
test
cmp
pop
add
xchg
mov
mov
dec
js
sar
xlat
and
iret
sar
lock
outsb
jo
shr
in
inc
push
ss
xor
mov
ret
push
push
mov
xchg
cmp
sbb
mov
add
shr
fdivl
faddl
jo
lret
adc
out
mov
jmp
dec
mov
cmc
pop
push
or
adc
fadds
cli
lock
sbb
into
add
pop
aaa
mov
sbbb
iret
out
jle
adc
sahf
mov
nop
movsl
into
cwtl
xlat
or
mov
add
jg
test
xchg
in
and
inc
push
add
test
sbb
sub
jle
enter
fs
cmp
mov
imul
mov
jmp
adc
inc
rcll
out
cmpsb
ss
pop
push
sbb
mov
dec
pusha
or
shlb
mov
test
fmuls
ret
das
jae
clc
pop
inc
cwtl
into
jns
hlt
sub
sahf
and
mov
push
jb
js
movsb
repnz
jns
mov
std
lret
adc
cmp
xchg
mov
xchg
or
repnz
mov
sub
xchg
mov
sbb
push
adc
lods
shrl
repnz
int3
sub
jnp
and
ret
aam
sahf
push
inc
push
repz
sub
mov
jmp
sub
cli
pop
fs
movsb
jbe
and
mov
jno
push
cmp
idivl
adc
mov
addr16
sub
movsb
ja
push
out
inc
in
mov
inc
pop
lcall
imul
jg
and
ja
mov
outsl
mov
loop
pop
and
js
call
nop
or
push
fnstcw
jne
rorb
add
or
cmpsl
sti
or
inc
stc
mov
jl
ret
inc
les
sub
cli
xchg
fucomip
sbb
das
shlb
cmp
sarl
add
sbb
test
add
jo
sbb
lret
sbb
stos
cmp
sub
ja
push
scas
fldt
aad
mov
outsb
mov
movsb
adc
roll
mov
dec
std
sarb
lods
sarl
mov
cmp
enter
fmuls
inc
push
adc
mov
test
mov
mov
lea
add
jecxz
xor
adc
xor
adc
adc
xchg
cmp
pop
mov
pop
add
xor
test
vunpckhps
cmpsl
inc
mov
mov
dec
sub
cwtl
mov
or
cmc
out
mov
jnp
iret
lret
cmp
mov
mov
inc
cmc
movb
movb
mov
andl
jmp
dec
mov
aaa
es
mov
test
invd
add
xcrypt-cfb
cmpsl
and
inc
es
jge
cld
push
ljmp
or
inc
gs
imulb
or
cli
int
xlat
and
xor
lea
mov
cmc
rol
movsb
pop
addr16
sbb
xor
enter
nop
cld
sbb
ljmp
xchg
loope
xor
xchg
pop
mov
movsb
fidivrl
sti
pop
jp
outsb
icebp
jle
test
xchg
pusha
push
lret
mov
in
leave
mov
mov
jbe
push
fcomi
push
mov
sub
sbb
or
jmp
mov
mov
push
fdivl
mov
mov
mov
and
add
pop
sub
addr16
push
push
push
cmp
sahf
out
jo
cmc
pusha
jo
and
fstps
xor
add
mov
jle
iret
fisttps
test
and
cwtl
adc
pop
inc
dec
jo
xchg
and
dec
clc
jo
jb
icebp
dec
cvtps2pi
test
int3
cs
xor
arpl
lods
pop
fs
decl
cli
adc
imul
adc
dec
shl
cmp
in
push
lea
jg
lods
push
adc
mov
pop
mov
sbb
shlb
push
add
test
or
ds
add
mov
mov
scas
inc
in
int
pop
in
cld
sbb
push
or
and
pop
adc
cmp
xor
jp
push
clc
xchg
and
movsb
sub
cmpsb
lcall
push
sbb
das
mov
sbb
and
stos
xchg
rolb
dec
jne
sbb
mov
mov
imul
bound
dec
cmp
sub
insl
mov
imul
loop
out
ret
cmp
movsl
pusha
test
push
pop
stc
cs
int3
jns
xor
mov
xchg
fs
std
lods
decl
lea
ds
aaa
sti
jg
xchg
push
cmp
loopne
dec
jns
loop
repz
jae
xchg
in
push
add
dec
xchg
hlt
addl
xchg
popa
dec
or
pop
add
jecxz
xchg
aaa
sub
call
gs
sub
fwait
into
xor
cmp
or
imul
cmpsl
jne
xchg
das
add
bound
dec
pavgb
pop
sub
dec
inc
cmp
mov
nop
pop
in
lahf
add
push
push
or
jmp
dec
pop
fbstp
mov
inc
sbbb
sbb
push
addr16
stc
inc
mov
dec
jbe
dec
mov
sub
xchg
dec
lret
daa
inc
or
sti
sbb
arpl
in
popa
insb
fildl
stos
mov
add
sbb
outsl
movsb
jb
imul
movsb
or
fs
xchg
pusha
ja
jmp
cs
xor
mov
or
cmc
insl
out
enter
rorl
xchg
in
daa
push
fidivrs
stos
ficompl
enter
test
ret
fldenv
lock
add
adc
in
inc
add
pop
mov
and
fnsave
cmpl
cmp
jl
sbb
negl
sahf
cmp
rcrb
mov
push
and
sbb
movsb
jg
rorb
inc
movl
push
dec
or
mov
fisttpl
js
aam
inc
cmp
or
jno
lock
jmp
ret
jne
call
int
mov
and
movsl
jnp
sbb
outsl
dec
xor
jne
and
cmp
lds
pop
sbbl
mov
push
xor
push
movsb
stos
xor
movsb
in
popf
mov
mov
dec
jecxz
push
outsl
adc
cld
movb
cmpl
pop
rcr
andb
mov
jo
push
call
mov
cltd
push
push
or
mov
adc
dec
mov
repnz
pop
in
mov
mov
in
inc
mov
pushf
clc
xor
mov
aaa
outsl
add
sahf
mov
les
and
shrb
pop
xchg
cmp
ja
push
and
sub
sub
mov
and
dec
xor
inc
ds
inc
enter
pop
test
icebp
mov
mov
mov
dec
jnp
adc
and
stc
fimull
lret
push
jnp
data16
adc
inc
mov
jge
stc
into
xchg
pop
or
xor
cli
lods
rcrb
xchg
jb
mov
addl
cmp
dec
mov
push
jmp
int3
push
data16
outsl
decl
mov
fdivs
xchg
test
or
sbb
mov
cmc
scas
incb
stc
dec
aam
adc
call
xor
and
pop
imul
cwtl
mov
sbb
lcall
mov
shlb
rcrl
and
cmpsb
cmp
jge
loope
dec
sbb
cltd
pop
dec
iret
stc
mov
xor
push
pop
insb
lods
mov
clc
pusha
jo
movsb
sub
sbb
frstor
ljmp
push
inc
popa
in
jmp
xor
arpl
cmpsb
lret
scas
dec
mov
outsb
cmc
sub
loopne
lahf
dec
or
adc
cmp
mov
xor
lods
test
ficoml
jl
and
xchg
hlt
jl
or
mov
jg
adc
imul
xor
fnsave
dec
subl
pop
mov
leave
push
inc
popf
shrl
sub
clc
cmp
inc
xor
mov
pop
rol
aas
in
and
gs
adc
das
popa
aam
mov
mov
sbb
pop
dec
inc
jg
jp
inc
jne
xor
out
lcall
adc
cmp
sub
jne
push
xlat
dec
pushf
mov
sub
xchg
add
xor
mov
orl
jmp
insb
lods
push
repz
je
xor
or
cmp
mov
add
jnp
out
cltd
cwtl
ficoml
cld
mov
test
imul
and
inc
or
out
lea
and
lock
jo
loopne
cwtl
mov
adc
aad
test
mov
or
ss
ret
int3
xor
mov
push
hlt
dec
push
iret
add
sub
dec
dec
das
sbb
inc
inc
cmp
mov
mov
add
ljmp
xchg
mov
in
insb
mov
and
add
rcrb
add
ss
ja
and
repz
shll
in
mov
fucomp
jp
mov
stc
outsb
jl
rcr
add
pop
decl
dec
daa
mov
rorb
jmp
mov
xlat
data16
ficoms
test
pusha
and
sbb
mov
call
dec
insl
test
cltd
cmp
or
movsl
mov
jg
mov
hlt
dec
sbb
leave
push
cmp
dec
push
sar
cmp
shl
clc
fdiv
hlt
jge
das
test
iret
push
mov
jae
bound
add
or
mov
mov
pop
aad
dec
mov
inc
loope
dec
cld
xlat
pop
adc
inc
add
imul
mov
cltd
lods
aam
rcl
xor
jne
add
jmp
or
fdivs
shrl
sbb
mov
dec
mov
aaa
cs
gs
and
sbb
in
movsb
lea
stos
mov
in
cltd
push
push
fsubrl
and
adc
mov
jp
cmp
cmpl
sbb
dec
in
sub
xorb
mov
mov
lods
dec
sbb
out
xor
xchg
ret
pop
mov
outsb
pusha
pop
lock
mov
and
movsl
or
jae
xor
je
data16
mov
inc
adc
test
mov
and
imul
or
ret
mov
push
lret
adc
sub
sub
in
addr16
cmp
popf
xchg
sahf
mov
push
fmuls
je
arpl
stc
cmp
jae
mov
test
loop
adc
pop
ja
mov
rolb
ss
ret
jae
jb
out
xor
mov
cmc
fdivrs
xchg
gs
pop
xchg
xorb
cld
lods
arpl
xchg
in
pop
gs
test
push
adcb
outsl
cmpb
mov
stos
mov
out
enter
push
shrl
shl
fs
stos
fwait
lds
rcrb
mov
popf
mov
dec
fidivl
cmp
je
testb
test
test
xchg
fstl
mov
mov
outsl
les
fistpll
les
filds
imul
loopne
inc
and
xor
pop
jno
and
mov
cmpsb
adc
lret
pop
jg
xchg
xchg
out
in
add
sbb
negb
sub
push
sbb
out
push
es
fcmovnbe
in
repz
jl
mov
fidivrl
push
xchg
popf
rcll
cwtl
push
push
in
ret
daa
push
xor
or
int3
or
imul
push
mov
push
xchg
scas
enter
iret
push
pushf
mov
xor
in
out
repz
xchg
add
or
shll
mov
scas
adc
dec
pop
and
insl
adc
sbb
js
sarb
adc
addb
scas
dec
call
xor
ret
std
loop
xor
xchg
mov
fldl
sub
or
pop
mov
insb
cmp
sbb
std
dec
mov
imul
sub
jne
insl
mov
push
sbb
pop
pop
sbbl
fcmovnbe
mov
lcall
shll
aam
sbb
aaa
cmp
mov
js
arpl
pusha
mov
add
imul
mov
fadds
popa
pusha
sbb
in
fsts
outsb
sbb
enter
mov
inc
sbb
sbb
adc
add
outsb
outsb
mov
ja
mov
fcomp
jmp
mov
pop
add
dec
cmp
lret
sub
add
lcall
push
mov
into
sbb
jne
out
movsl
sbb
cs
outsl
mov
mov
xchg
mov
cmpsb
clc
fs
jg
cmp
shrl
lods
mov
cld
clc
rcrb
stos
push
xor
mull
dec
mov
js
shll
das
dec
mov
push
jecxz
jno
xchg
mov
test
rcr
out
imul
dec
icebp
lret
mov
lret
out
and
jp
adcb
pop
or
aam
ds
xchg
iret
cs
mov
xchg
addr16
popa
call
scas
mov
int3
sub
orb
push
rcr
xchg
cmp
popa
push
push
subb
lcall
lcall
add
lods
addb
cltd
aas
inc
mov
inc
jae
dec
mov
pop
stos
and
jge
test
pusha
rorb
jge
aam
test
or
jmp
in
test
pop
ss
mov
dec
or
or
jnp
push
loopne
das
or
push
sub
xor
mov
adc
pop
cmpsl
and
xchg
pop
or
xor
and
add
movsl
stos
js
mov
nop
dec
mov
xchg
ficompl
lods
pop
mov
shl
adcb
mov
fwait
dec
sub
xchg
mov
xor
enter
cmpsl
sbb
sub
lock
movsb
mov
xchg
dec
sti
test
mov
mov
mulb
jge
es
jg
scas
cltd
xorl
idiv
movl
mov
movl
cmp
movl
jmp
fidivl
push
or
fmuls
xlat
icebp
mov
add
prefetch
andl
dec
nop
aad
add
and
jb
cwtl
jecxz
mov
test
dec
or
push
mov
lods
arpl
xchg
ljmp
mov
gs
sbb
jae
ja
shr
push
fistpll
inc
jo
test
mov
inc
sbb
xor
mov
inc
push
cld
dec
jl
les
push
aaa
jae
mov
adc
sub
call
xor
popa
fdivrl
iret
pop
test
cmp
push
dec
mov
fmull
jo
sub
cmpb
mov
fwait
and
pop
fisubrl
imul
and
lret
mov
or
adc
add
inc
mov
sub
xchg
sar
dec
ds
out
scas
test
in
outsb
mov
test
mov
and
repnz
fs
scas
popa
sbb
fistpl
jnp
push
stos
fists
shl
mov
test
fldcw
xlat
xor
and
sub
push
mov
out
clc
mov
movsl
jbe
sub
movsb
adc
mov
sti
dec
mov
sbb
daa
test
xor
cmc
outsl
data16
sahf
enter
stc
stos
cld
or
inc
and
ljmp
movsb
inc
enter
xor
xchg
pop
xchg
jl
sti
lods
cli
aas
xor
cmp
sub
dec
test
movsb
imul
das
cltd
push
adc
and
inc
lds
dec
dec
push
xchg
jnp
mov
outsl
jle
clc
jp
cwtl
cmc
dec
xchg
inc
pop
inc
in
cmp
pop
fwait
mov
xchg
clc
cmp
pop
add
loop
mov
pop
or
pusha
sahf
shrb
xor
test
jmp
aas
xchg
in
inc
rorl
negl
xor
lret
mov
dec
aam
xchg
sarl
cmp
mov
inc
cmp
pusha
fwait
mov
fstl
stos
dec
xchg
clc
divb
fs
xchg
les
daa
loop
pop
sbb
xchg
push
and
aad
xor
mov
shll
adc
add
call
insl
stos
or
mov
xor
bound
int
push
push
jbe
in
inc
mov
out
jne
rcl
and
cmp
gs
xor
es
inc
and
mov
shrb
mov
mov
iret
cmpsl
add
cmp
jmp
std
and
sub
stos
shr
cmp
pusha
mov
test
lods
fldt
add
out
add
add
cmc
pop
lret
clc
pop
out
ret
dec
jle
pushf
add
loopne
lahf
mov
xor
loopne
adc
pop
push
mov
and
nop
mov
adc
dec
loope
cmp
iret
sub
mov
push
cmp
movsl
xor
idivb
subb
outsl
adc
int
popf
in
inc
sub
pop
dec
sbb
or
push
pop
loop
mov
lock
cmp
in
jnp
inc
add
dec
push
ret
jg
mov
ss
sub
movsl
mov
addb
mov
or
mov
add
mov
bound
jle
and
call
add
adc
push
ds
insb
imul
inc
stos
ja
cltd
sbb
adc
pop
jo
sub
sbb
cwtl
daa
mov
cmc
sub
push
nop
enter
inc
sarb
or
xor
add
add
inc
ds
rcll
jnp
push
loope
xor
inc
push
push
mov
lret
mov
xor
jno
loopne
gs
sub
mov
cld
ja
sub
xchg
lcall
jno
jmp
mov
jo
and
lock
pop
lds
in
mov
sti
outsb
xor
dec
pop
aad
jecxz
push
sbb
xchg
pop
insb
jmp
in
es
dec
test
addr16
pop
adc
cli
mov
sbb
add
int3
and
insb
es
bound
mov
jno
dec
mov
push
xor
jmp
cltd
std
add
xor
sahf
scas
popf
mov
enter
jae
inc
add
dec
mov
lea
jmp
out
in
inc
fwait
adc
out
ljmp
lcall
and
pushf
or
in
mov
mov
jns
and
ret
aaa
and
in
mov
dec
imull
insb
negb
loope
adc
or
xchg
sti
lds
pop
das
fidivl
dec
add
xchg
mov
idiv
or
push
insb
jns
add
pop
push
pop
mov
cwtl
push
mov
icebp
testl
cmp
adc
lds
lods
mov
add
or
clc
or
das
scas
pop
xchg
sub
xchg
jb
std
jg
stos
sahf
aas
dec
jp
inc
mov
mov
jg
pop
into
adcl
push
ljmp
add
fwait
in
scas
das
xorl
push
popa
push
mov
test
cli
xchg
sti
dec
sbb
lea
jo
mov
in
lds
xor
stos
inc
or
lods
sub
lret
addr16
inc
aas
fwait
cmpl
int
push
or
fs
cwtl
lcall
pop
xchg
xorb
mov
sub
stos
aaa
hlt
je
xchg
test
lret
cmp
mov
ret
ljmp
mov
mov
xchg
mov
cld
test
jne
icebp
xchg
fdivl
cmp
repnz
sbbb
mov
fldcw
out
and
xor
bswap
lahf
xorl
xchg
jecxz
ljmp
sbbl
movl
cmpl
jb
mov
sbb
jmp
push
call
movl
mov
mov
push
push
adcl
push
push
andl
call
xor
xorl
xor
orl
or
or
movl
mov
mov
mov
cmp
jne
mov
mov
jmp
mov
dec
and
xchg
sub
push
mov
iret
imul
paddd
mov
mov
xor
sbb
push
pop
xchg
loope
shr
loop
mov
pop
xchg
sbb
shr
mov
or
dec
inc
jno
xchg
and
adc
fbld
add
leave
imul
je
mov
pusha
xor
xor
call
repz
lahf
xchg
call
pop
dec
sub
test
add
push
sbbl
adc
push
xor
cmp
xor
lds
dec
jle
jnp
lahf
push
enter
pop
scas
lds
lahf
imul
xchg
sub
repnz
cmpsl
fiadds
pinsrw
add
add
clc
or
mov
imul
xchg
cmpsb
inc
add
xchg
int
movsb
outsb
mov
lods
mov
pop
jmp
push
shrb
jecxz
mov
jns
divl
pop
jns
mov
fs
cmp
movl
mov
repz
in
aas
pop
jb
fwait
inc
mov
mov
jp
es
xor
repnz
xchg
int
push
popa
sub
mov
out
nop
stos
pop
and
dec
pop
jl
leave
mov
xchg
or
mov
iret
lsl
push
and
in
cmp
xlat
mov
adc
inc
pop
loop
push
ficoms
sub
ss
push
mov
out
js
push
add
add
adc
cli
fistps
addr16
or
xor
sbb
mov
jne,pt
jo
mov
cld
stos
add
rol
inc
xchg
cmpb
cld
dec
adc
les
mov
popa
fwait
roll
adc
mov
cmpsl
jg
xor
notl
test
mov
mull
cmc
xchg
insb
inc
push
adc
push
mov
push
cmpsb
fsubl
sahf
imul
data16
push
addr16
cmp
fdivl
lods
cmpsl
leave
iret
mov
insl
sbb
or
mov
outsl
pop
adc
fsts
int
jns
sahf
jnp
dec
inc
int3
and
and
pop
jmp
lret
sbb
dec
outsl
test
jns
sub
mov
ljmp
mov
mov
ds
xchg
insl
xchg
mov
rclb
cltd
ret
lret
out
test
inc
push
mov
jg
aaa
push
int
and
lea
sahf
dec
cmp
ret
sbb
pop
mov
pushf
sbb
xor
fs
fsubs
pop
adc
mov
ret
cmpsl
xchg
cmp
pop
les
sbb
out
test
dec
lret
in
pop
mov
dec
dec
fsts
inc
test
xchg
jbe
arpl
lss
add
insb
leave
outsb
outsb
jl
data16
je
cmpsl
ror
rcll
sahf
roll
xchg
dec
popa
das
fwait
test
mov
in
into
imul
movsb
adc
testb
add
cmp
sbb
repnz
cmp
in
jne
inc
cs
cmp
pop
add
mov
push
popf
ljmp
mov
aas
mov
mov
mov
and
adc
sahf
lock
jg
mov
xor
test
push
mov
cmpsb
and
nop
int3
dec
iret
adc
sub
aas
push
xchg
in
cmp
xchg
cmp
mov
jmp
andb
xor
cli
push
cmp
add
inc
stos
div
nop
and
scas
xor
repnz
or
and
mov
dec
sub
and
lret
movsl
xor
movsl
cltd
mov
pop
cmp
push
add
nop
pop
push
dec
xlat
mov
pusha
and
xchg
shr
pop
int3
pop
dec
and
or
and
std
clc
jne
fimull
mov
lock
mov
and
xor
sub
dec
je
mov
adc
add
shrb
fnsave
fmul
aaa
enter
daa
jno
dec
loopne
in
in
lret
mov
push
dec
sbb
xchg
aam
mov
cld
fmull
lds
push
mov
insb
out
mov
dec
scas
dec
and
adc
dec
sbb
mov
cli
sbb
jo
jbe
movsb
and
add
jg
sub
xchg
fstps
push
cmpsb
xchg
or
add
bound
pop
negl
andl
or
std
dec
jne
sub
jg
mov
nop
movsl
pop
xchg
shr
icebp
sub
in
shr
xchg
sub
or
mov
bound
cmp
mov
adc
dec
push
mov
inc
pop
pop
movsb
int
stos
or
test
and
addr16
xor
sbb
aas
sti
pop
repnz
xchg
psubd
dec
mov
movsb
push
pop
aaa
xor
les
ret
orl
movsl
and
rcrl
jl
inc
xchg
les
test
jbe
mov
push
jge
mov
sahf
inc
mov
pushf
aas
adc
jnp
pop
pop
mov
push
add
icebp
js
sub
mov
int3
adc
sbb
jbe
in
mov
add
mov
cwtl
je
cmp
jg
or
sbbb
pop
inc
outsl
in
jge
mov
test
fsubp
pop
out
std
sbb
fwait
jbe
aaa
sbb
cmp
jge
cmpsl
js
loop
js
scas
int3
fwait
pmaxsw
cmp
xor
jmp
jmp
sbb
mov
jbe
fmulp
mov
mov
je
push
pop
inc
out
insb
xor
pushf
into
push
lahf
inc
pushf
xchg
enter
in
adc
punpckhwd
scas
in
insl
jl
sbb
jg
data16
mov
sbb
adc
pop
mov
add
bound
nop
adc
push
pop
inc
jge
in
mov
inc
mov
push
loopne
jne
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
shl
push
pop
mov
mov
mov
mov
mov
sub
movzwl
mov
movzwl
cltd
jmp
jb
ffreep
push
aad
push
dec
mov
repnz
enter
or
packuswb
loop
aam
clc
pop
ds
sub
pusha
and
or
sbb
mov
mov
repnz
lock
hlt
xchg
xchg
repnz
xchg
lods
lods
xchg
xor
xlat
aam
insl
fstpt
cmp
cltd
outsb
xor
pop
sbb
mov
das
pop
popf
pop
fiaddl
inc
jmp
cli
jmp
clc
les
mov
ret
xchg
data16
ljmp
lcall
adc
xchg
cmp
roll
repz
fisttpll
ja
pushf
pop
dec
adc
rolb
imul
xlat
push
jnp
enter
cmp
je
les
push
jg
xor
test
mov
jb
jle
or
nop
jae
rolb
adc
and
dec
jmp
push
jo
nop
dec
dec
xlat
mov
add
sahf
xchg
mov
inc
and
sbb
popa
and
in
stc
adc
adc
std
dec
sahf
push
bound
mov
push
or
sbb
movsb
filds
sti
fwait
popf
lock
aas
repz
push
dec
adc
cmp
mov
loope
mov
cmp
popf
repz
push
iret
jmp
pop
and
ja
fmulp
pop
inc
lcall
add
int
shrl
pop
and
pop
inc
outsb
mov
or
lret
xchg
pop
rcl
inc
fcomps
pop
out
fs
sti
outsb
nop
push
dec
shrb
repnz
dec
xorl
fdiv
jns
loopne
rolb
jnp
push
pop
test
pop
inc
add
lahf
lcall
cmp
popf
pop
mov
and
add
pop
repnz
enter
repnz
in
cmpsl
and
cld
ret
fwait
sub
and
and
inc
xchg
out
test
orb
fldl
scas
leave
lahf
cmp
cmp
jg
push
addr16
ret
sub
repnz
push
and
pusha
dec
xchg
jg
add
push
adc
mov
push
js
jbe
inc
push
outsb
inc
jne
add
mov
stos
imul
push
and
out
xor
mov
jne
mov
jecxz
mov
pop
hlt
sbb
xor
sbb
or
insl
adcb
mov
adc
or
pop
or
out
pop
mov
push
adcb
test
mov
int
and
repz
outsb
out
add
cmp
lret
arpl
int
jno
fstl
cmp
ja
lods
in
sub
cvtpi2ps
mov
mov
jge
or
out
clc
movsl
xor
out
jmp
movsl
jns,pt
sahf
add
out
jmp
js
cmpsb
jg
in
adc
mov
rorb
test
jg
int3
rcr
es
lcall
outsb
mov
sbb
jecxz
sub
shll
sub
loopw
sub
jne
add
inc
mov
je
xor
push
cmpsl
roll
jnp
and
mov
jno
repnz
adc
pop
sub
outsb
insw
cmp
lahf
cmp
cld
mov
insl
loopne
sbb
pushf
mov
push
xlat
sub
cmp
call
dec
pop
lret
inc
dec
nop
or
mov
fcos
cmp
pop
fwait
addl
sub
xlat
push
push
sbbb
test
ret
mov
sub
xchg
out
or
push
addr16
nop
inc
add
nop
test
sub
stos
aas
cmpsb
loopne
jnp
stos
inc
dec
push
xchg
mov
add
sbb
xchg
pop
cmp
lahf
iret
int
add
leave
mov
pop
cs
movsl
aad
cmp
call
imul
dec
inc
jle
insb
xchg
xchg
cs
fisttpl
insl
sub
loopne
outsb
adc
push
mov
cwtl
or
jecxz
clc
add
fcmovbe
xchg
add
call
out
inc
sahf
nop
add
dec
add
cs
ret
in
mov
outsl
inc
mov
ret
push
push
add
push
jmp
mov
ret
lock
pop
jnp
in
cs
xor
cmp
je
inc
cmp
mov
call
out
xchg
bnd
cwtl
mov
outsl
outsl
lods
sbb
mov
sarb
stc
push
dec
push
cmp
push
inc
sbb
clc
push
add
sti
orb
pushf
aas
insl
dec
add
movzbl
into
mov
xlat
call
testl
cmp
popa
or
pop
jo
sub
add
xchg
cltd
and
je
mov
in
lret
sbb
iret
pop
sbbl
xor
dec
sbb
inc
mov
xchg
out
fwait
mov
insl
cmp
sbb
dec
lret
push
push
mov
adc
xor
gs
adc
cltd
push
rcr
pop
inc
or
sub
dec
loope
cmp
mov
xchg
sub
outsl
xlat
sub
loop
ja
mov
and
xor
xchg
jno
and
fwait
mov
xor
lock
in
lret
push
or
clc
test
test
mov
fcoml
fcoms
and
test
jo
add
das
cmp
xrstor
in
repnz
lahf
sahf
pop
mov
push
dec
pop
xchg
jg
out
jae
imulb
ja
inc
inc
adc
mov
popf
add
leave
inc
inc
mov
outsb
test
mov
push
lahf
xchg
sbb
inc
mov
pop
dec
push
pop
sbb
movsl
outsl
add
jnp
insl
or
jbe
addr16
xor
testl
push
arpl
xor
iret
lahf
cmp
clc
xorl
mov
ss
xor
mov
mov
mov
jno
movsb
adc
push
add
pusha
lahf
aas
sti
aas
pop
or
ss
mov
dec
invd
add
packsswb
test
in
ret
xchg
gs
jb
popa
sbb
add
pop
scas
scas
and
adc
sub
sti
mov
jle
fwait
dec
push
fadd
sbb
inc
pop
mov
arpl
fstl
mov
xchg
or
sub
push
jle
sub
ljmp
sub
cwtl
test
xor
test
or
lahf
jmp
arpl
xor
aad
adc
mov
in
jno
fcmovnu
cs
jle
pushf
or
jae
mov
xchg
adc
cmp
inc
out
loope
cmc
addb
ss
test
or
xor
cli
cmpsl
inc
inc
cmpsb
cmp
cmp
jp
fnstcw
or
div
scas
mov
movsb
mov
cld
sbb
roll
cmpb
ds
sbb
sbbl
mov
or
faddp
inc
in
and
push
stc
pushf
push
push
fsubrl
out
pop
shl
mov
jbe
cmp
and
jbe
aaa
add
daa
jecxz
sub
fstp
insb
push
sub
xor
jge
adc
push
inc
cmpsl
iret
cmp
mov
cmp
adc
pop
sub
andb
sub
xchg
jnp
ret
sub
cld
sbb
mov
mov
pop
leave
jns
add
cs
jno
cmp
bound
inc
in
dec
jmp
les
lret
repnz
ret
sub
rcll
mov
cmpsl
xlat
sbb
aam
ss
mov
mov
xor
or
aas
hlt
cmp
jns
or
std
push
in
mov
data16
dec
adc
sahf
pushf
lock
add
push
pop
scas
lret
out
xor
movsl
loop
imull
cmp
mov
jmp
cmp
mov
cmp
aas
fwait
mov
shll
push
push
dec
shrb
outsw
jecxz
xor
movsl
jne
je
xchg
and
pop
mov
mov
dec
nop
or
mov
dec
mov
and
mov
cmp
jo
lahf
sahf
mov
aad
xor
ja
dec
add
ds
aas
push
mov
inc
or
scas
pusha
dec
pop
imul
cmp
inc
lar
lret
and
mov
negb
dec
sti
and
mov
std
movsb
pop
mov
push
xor
aas
xchg
xor
sub
mov
int
dec
adc
add
les
jl
xchg
sahf
xor
pop
or
gs
sbb
hlt
or
add
cmp
jl
and
pusha
mov
iret
dec
inc
mov
cmp
outsb
popf
sbb
shll
dec
test
fsubl
mov
cwtl
imul
adc
push
dec
inc
popf
dec
call
mov
pushf
push
in
imul
in
call
mov
pop
and
dec
pop
lahf
popf
mov
stc
lahf
out
enter
sbb
rolb
mov
mov
or
pop
push
mov
or
add
adc
mov
mov
or
fwait
cmp
push
adc
sarb
mov
push
jno
jne
mov
out
bound
scas
jg
iret
xor
mov
xor
jg
push
or
push
lods
movl
imul
orb
enter
sub
push
xchg
int
cmp
out
sbb
jecxz
jnp
loop
fisubs
mov
or
ret
push
nop
push
pusha
sbb
in
and
mov
mov
sbb
in
and
call
lret
loop,pt
fs
and
das
and
push
push
loopne
cwtl
cmp
mov
mov
and
adc
aad
loopne
int3
jno
add
sbbb
dec
pop
nop
push
leave
dec
and
push
sti
cmp
cmp
ror
mov
add
jbe
movsb
js
testl
pop
jge
xor
mov
push
insl
cwtl
jmp
add
dec
into
enter
inc
popf
push
jae
daa
out
jnp
fwait
or
jns
mov
pop
insb
xchg
dec
mov
cmp
out
mov
sub
idivb
jle
dec
jae
xor
loop
sbb
mov
mov
inc
push
ficoms
mov
pusha
inc
push
xchg
and
out
mov
lcall
in
fisubrl
lock
call
mov
cmp
and
jnp
sarb
test
or
aam
cmc
xchg
icebp
sbb
sbb
and
into
mov
or
es
daa
movsb
addr16
xchg
rcrb
vpshufhw
and
xchg
sbb
repnz
nop
andb
enter
fcomp
or
mov
fwait
and
add
inc
cmp
in
jo
adcl
ljmp
fldenv
shrb
adcl
pusha
jecxz
in
insb
rolb
mov
scas
scas
adcb
or
adc
inc
dec
adc
mov
xchg
pop
cmp
loopne
inc
jmp
dec
lds
and
sbb
pop
inc
push
xlat
sbb
mov
mov
push
je
movsl
push
xchg
inc
pop
fdivl
xorl
xor
pop
mov
mov
jmp
shr
scas
addb
je
cmpsb
mov
lret
cmp
cmpsb
inc
dec
mov
jle
subb
add
or
mov
icebp
or
shl
ret
pop
push
push
jo
scas
mov
inc
dec
add
and
cmp
scas
loop
outsb
je
in
mov
push
dec
mov
jnp
push
jbe
mov
pop
mov
pushf
hlt
hlt
mov
push
int3
mov
les
fwait
jg
add
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
imul
mov
sub
mov
add
mov
cmp
jbe
mov
mov
shrd
xor
mov
shr
jmp
xor
xor
or
fcoms
invd
add
setnp
jo
addr16
enter
fistpl
pop
ret
pop
push
cmp
push
test
adc
adc
into
lret
jns
push
movsl
push
xchg
and
imul
lods
es
aad
xchg
subb
lret
pusha
out
pop
mov
jns
cmp
or
add
xchg
jmp
add
xlat
rcrl
pop
hlt
adc
jmp
jbe
and
push
mov
fnstsw
jl
test
jno
inc
cwtl
cmc
sbb
pop
mov
pop
xchg
xor
je,pt
andb
mov
rorl
ja
and
stos
test
rcll
sahf
adc
dec
mov
fwait
roll
sbb
pop
mov
in
push
pop
fnstsw
inc
in
adc
adc
stos
mov
cmp
imul
pushf
outsb
mov
xorb
shl
adc
jo
cmp
sub
or
dec
in
pop
jbe
gs
sarl
lcall
das
sbb
jge
cmp
int
push
aam
test
sbb
iret
jecxz
icebp
dec
mov
mov
cmp
js
pop
dec
xor
addr16
insb
jmp
lea
call
mov
xchg
xlat
ljmp
mov
add
sbb
shll
lods
addr16
pop
jmp
jge
sub
cmp
xlat
lods
inc
mov
jecxz
mov
mov
lods
sub
or
mov
mov
and
pusha
cld
mov
mov
stos
push
jns
lahf
test
push
push
cmp
push
jno
test
sub
pop
jno
xor
push
pop
mov
loopne
push
popa
lcall
lahf
ds
out
std
sahf
cwtl
add
sub
lret
sahf
popf
adc
repz
stos
xor
xor
dec
jb
cli
add
mov
xchg
jns
and
mov
aad
sub
nop
jbe
pop
lahf
in
shl
xor
add
addr16
pusha
push
dec
add
in
pop
pop
dec
test
js
imul
ret
jle
leave
jnp
and
popa
pop
lahf
dec
push
and
xor
cmp
insl
jnp
aad
and
add
movsb
pop
inc
repz
ja
add
pop
push
xchg
jbe
leave
ret
insl
test
pop
add
pop
jo
or
cmpsb
mov
xchg
pop
pop
fisttps
push
adc
cli
or
mov
dec
push
xchg
fadds
out
daa
mov
ljmp
jno
xchg
push
sahf
test
push
xor
ljmp
dec
lcall
pop
pop
sahf
pop
mov
aad
cmp
scas
push
cwtl
adc
mov
dec
mov
jmp
mov
and
pop
sbb
sarl
sub
pop
std
push
xchg
sar
add
jp
xor
mov
filds
pop
pop
push
test
adc
pop
push
outsb
or
popa
push
aam
dec
mov
cmp
mov
pop
add
jl
les
and
mov
push
stc
dec
xor
pop
mov
jo
xor
and
rolb
pop
xchg
out
rclb
ds
jp
ret
add
jmp
loope
aaa
inc
pop
mov
fadds
push
cmc
mov
movsb
stos
scas
mov
adc
jmp
push
jp
mov
sub
insb
data16
and
xchg
adcl
sbb
lahf
cmp
nop
dec
xchg
add
out
repnz
aam
cmpsl
push
ret
push
mov
or
xor
enter
or
inc
cmpsl
lcall
jo
push
fs
setl
mov
aam
sarl
sub
out
mov
xchg
xor
iret
je
insl
dec
xchg
xorl
mov
aaa
xor
and
hlt
xchg
lds
push
and
jns
loopne
sbb
sti
mov
sbb
ret
jle
pop
mov
adc
adc
mov
sub
inc
lods
in
sub
jl
push
das
push
sbb
out
aam
jmp
or
pop
mov
stc
and
stos
dec
adc
stc
mov
mov
cmp
and
loopne
mov
repnz
xchg
call
push
shll
dec
repz
cmpb
mov
xchg
rorl
add
stos
mov
stos
fidivl
test
jge
sub
dec
sub
outsl
pop
divb
mov
popf
out
sar
fwait
clc
ljmp
fstpt
shll
or
cmp
sub
lret
push
and
jno
xchg
mov
les
loop
mov
filds
add
cmc
inc
pop
jo
push
movsl
push
xchg
imul
fimull
arpl
jge
jle
fiadds
dec
dec
and
les
dec
ret
or
mov
xchg
in
mov
lds
and
in
xchg
aad
cmp
andl
addr16
repnz
out
dec
mov
inc
jmp
dec
xchg
and
pop
loop
loopne
xor
adc
rclb
cwtl
call
xor
cmpl
push
jbe
jge
fwait
pop
or
add
jb
iret
mov
aas
sub
incl
mov
cltd
insl
mov
int3
xchg
rorl
xchg
movsb
aad
xor
mov
jns
ljmp
aam
fwait
inc
fsubrs
or
rorb
dec
mulb
pop
sbb
arpl
cmp
add
ss
sahf
jg
and
mov
inc
mov
push
pop
arpl
testb
je
sbbl
jmp
fldt
loopne
mov
lock
xchg
test
fiaddl
inc
ss
inc
mov
sbb
insl
mov
dec
mov
xor
shl
jmp
push
mov
cli
sbb
fnstenv
dec
ret
lea
mov
inc
invd
add
cltd
pop
shl
dec
push
add
inc
lret
jmp
idivb
out
dec
mov
iret
mov
cltd
shrb
ja
hlt
sub
jne
jmp
stos
inc
mov
enter
jecxz
mov
in
andl
in
adc
rclb
ret
int3
jns
loope
cli
pusha
xchg
in
mov
andl
js
cs
in
les
rcrb
sub
les
out
popf
add
lret
adc
stos
jp
call
mov
inc
mov
es
adc
leave
xchg
test
mov
arpl
bsr
dec
jmp
push
pop
xchg
stos
insb
jle
jns
shll
dec
into
hlt
roll
divl
sub
daa
inc
xchg
or
addr16
gs
cmpsb
or
loopne
mov
imul
mov
data16
xor
dec
mov
mov
cmp
adc
cmp
mov
dec
mov
pusha
mov
sub
mov
lock
xchg
xchg
sbb
xchg
or
sub
push
in
fsubrl
or
sti
push
push
sti
and
into
cwtl
cli
daa
pop
lret
mov
jae
add
dec
push
add
xchg
scas
fwait
cmpsl
js
stos
cmpsb
push
pop
mov
pop
push
aad
or
imul
push
icebp
repnz
ljmp
xchg
dec
mov
sub
push
lahf
or
or
xor
or
inc
mov
aas
fwait
lods
sub
bound
push
test
out
jns
push
repz
lock
pop
mov
stos
dec
testb
xlat
fidivl
pop
imul
push
pop
dec
pop
pop
stos
xchg
mov
popf
call
cmp
aad
xchg
mov
push
or
xor
sar
inc
lcall
jmp
shlb
mov
scas
jg
pop
lahf
loop
mov
inc
cmpsb
sub
hlt
pop
xchg
xchg
mov
sbb
mov
pop
jne
mov
cmpsl
pop
jae
xchg
mov
jno
mov
push
or
add
mov
add
ja
test
dec
inc
mov
jo
in
hlt
movsb
mov
je
rcrb
sub
fsubrl
xchg
inc
cmc
mov
test
ds
je
out
mov
stos
out
sbb
adc
das
jno
das
fdivr
aaa
and
push
jecxz
push
pusha
cmp
idivb
jne
rorb
jbe
mov
jl
out
pusha
arpl
jo
xchg
int3
cmp
shrb
xor
dec
test
shll
pop
nop
movsl
sti
test
subl
xchg
jge
pop
hlt
push
lock
mov
push
fwait
jmp
add
lods
mov
sub
mov
ljmp
cmp
insl
ss
icebp
mov
aam
fisttpll
ficoms
sbb
and
lods
sbb
test
inc
in
call
xor
push
fcomps
idivl
lret
adc
shrb
mov
movsb
mov
insb
lock
outsb
rcrb
cmp
pusha
mov
cwtl
pusha
sbb
stc
mov
or
jae
dec
mov
mov
or
adc
sbb
icebp
jb
in
and
push
and
jb
mov
adc
pop
insb
subl
aam
xlat
movsb
icebp
jecxz
sbb
adc
out
mov
pusha
xor
jne
push
scas
pop
pop
or
int3
jnp
push
mov
mov
leave
mov
pop
hlt
push
lods
mov
mov
jo
or
ret
in
pusha
dec
lahf
insb
into
dec
inc
shl
lret
cmpsl
sahf
ja
xchg
xchg
inc
sti
adc
mov
movsb
xor
fwait
cmpl
xor
lahf
push
das
int3
mov
lods
mov
test
jb
fs
rorb
int3
xchg
repnz
rclb
test
les
addr16
out
xchg
xor
out
loope
push
xor
sub
sub
decb
xchg
xchg
mov
or
pop
sub
sarb
ja
sahf
outsb
sub
cmpl
outsb
push
int
movsb
or
sub
jg
mov
xchg
scas
popa
and
ds
push
sub
jmp
or
pop
adc
pop
cwtl
pop
pop
mov
sub
insl
inc
cmp
test
jg
jmp
test
iret
sub
cmc
mov
add
xchg
and
pushf
sahf
xchg
ja
pop
sti
pop
ret
or
out
push
stos
rcr
adc
sbb
bound
out
pusha
add
adc
mov
mov
shrl
lcall
mov
push
mov
ja
or
lock
mov
mov
sbb
in
imul
adc
ja
js
push
mov
js
popf
inc
pop
inc
test
popa
jbe
into
pop
push
call
insb
dec
pop
stc
sub
jecxz
in
cs
cmp
cs
aam
xor
cmpsb
hlt
cmc
pop
call
pop
mov
inc
xor
ds
cli
movsl
sbb
test
sub
jle
sub
pop
ret
adc
cmp
outsl
xor
std
popa
sarl
mov
out
rorl
dec
add
fwait
mov
jmp
out
fldt
flds
ds
addb
inc
pop
jecxz
sub
test
sahf
pop
jg
push
ljmp
adc
push
mov
xchg
test
jns
inc
adc
pop
and
loopne
rcr
mov
rclb
mov
inc
mov
inc
inc
sbb
xor
testb
push
lret
pop
popf
jge
data16
adc
sbb
cmp
cs
mov
fisttpll
mov
xchg
lock
mov
mov
pop
in
inc
and
mov
cmp
faddl
jg
or
mov
pop
leave
ret
mov
mov
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
inc
mov
or
mov
mov
and
and
or
sub
outsb
jbe
sahf
dec
mov
fnstenv
jbe
mov
jns
outsb
sub
sbb
js
cld
jno
roll
mov
sub
subb
shlb
enter
xor
mov
adc
aad
out
ljmp
and
inc
call
test
inc
mov
ret
mov
mov
xchg
popf
into
adc
pop
in
dec
mov
ljmp
mov
sub
stos
notl
insl
and
jp
adc
es
sbb
scas
pop
aas
mov
inc
adc
stos
cmpsb
mov
outsl
mov
outsb
mov
dec
cmp
push
call
pop
fcompl
adc
adcl
popf
movsl
sub
sub
mov
cmp
add
rcr
mov
xor
jp
std
xor
inc
lock
xchg
jno
xchg
ret
mov
pop
stos
mov
mov
out
jecxz
enter
pop
and
loopne
js
fsubrl
or
rcrl
sub
daa
sbb
jg
sub
xchg
mov
mov
idivl
xchg
not
ret
sbb
push
mov
cwtl
and
popf
jmp
addb
push
mov
incb
negb
xchg
dec
add
ret
aad
xchg
mov
xchg
cmp
push
arpl
ret
fildl
in
pop
pop
out
lds
mov
mov
ds
sbb
out
mov
mov
lods
roll
mov
add
xchg
fs
dec
roll
insb
sub
pop
arpl
in
adc
popf
add
roll
add
push
jmp
sbb
out
sub
sahf
cld
xchg
or
add
xchg
add
ficoms
push
nop
inc
outsl
movsl
dec
or
sbb
and
adc
aam
sub
sub
movsl
int
jg
orb
adcl
mov
cmp
sti
lcall
loope
jg
sbbl
cld
movsl
fnsave
sub
cli
pop
repz
or
cmpsb
incb
test
cmp
push
lds
pop
lret
enter
cld
cld
mov
mov
add
sub
mov
sbb
outsb
and
mov
decb
sub
icebp
dec
roll
adc
pop
xlat
jno
scas
mulb
std
int
xchg
pop
pop
dec
pusha
cmp
es
adc
jns
int
push
jle
shrl
pop
or
adc
inc
stos
jbe
mov
mov
push
mov
push
dec
xor
cwtl
mov
push
in
jno
mov
xor
test
stc
and
cwtl
jle
jno
rcrl
std
mov
or
cld
gs
dec
or
pop
cmp
mov
divl
ffreep
mov
scas
inc
mov
fisttpll
lods
gs
jo
add
es
mov
inc
sbbl
pop
push
std
pop
fstpt
mov
ret
int3
loopne
in
or
push
inc
mov
gs
pop
test
ss
mov
sub
sbb
cmc
sub
push
mov
enter
jge
out
js
movsl
ja
lea
or
ficomps
popa
cld
adcb
sub
pop
fbstp
fcompl
out
jo
mov
bsr
rclb
test
jo
ljmp
push
shlb
push
jbe
ja
les
adc
fwait
mov
or
push
decb
in
leave
or
xchg
or
negl
out
out
xchg
cmp
out
sbb
adc
call
jp
js
or
bound
push
cmpsl
jo
call
insl
cmp
or
imul
adc
fisubl
ret
jge
mov
cmp
sub
out
cltd
push
sbb
adc
nop
sahf
adc
aas
je
je
dec
pop
pop
call
add
and
sbbl
mov
icebp
mov
fwait
xchg
cmp
fucomi
push
pop
je
int3
leave
lds
sub
ja
mov
xchg
cmp
xchg
cli
sbb
add
aam
xlat
push
cmp
ljmp
jg
dec
shlb
aaa
xchg
cmp
or
mov
xchg
std
xor
mov
dec
rcl
fstp
or
sub
push
lret
gs
out
mov
testl
dec
xchg
jno
pop
cmp
sub
dec
and
loop
and
in
xchg
cmpsb
mov
inc
lret
pop
out
sbb
data16
adcb
sti
cs
out
negl
ret
or
outsl
mov
ss
dec
or
cmp
mov
leave
outsl
jg
lods
lret
js
jmp
mov
inc
jge
andb
outsb
lea
adc
jmp
imul
out
je
lea
add
enter
stos
mov
mov
jns
pop
mov
jb
rcrl
sbb
rcl
jnp
mov
sub
add
stc
outsb
mov
fildl
xchg
lods
jge
xchg
jl
cmp
inc
addr16
scas
in
sbb
cli
hlt
cmp
fdivrl
pushf
push
dec
push
rclb
nop
movsl
mov
dec
pop
in
in
cmp
sub
lcall
mov
xchg
test
inc
jb
xor
fcompl
lods
cmp
or
xchg
lea
and
dec
fmuls
mov
pop
test
jecxz
mov
mov
and
jbe
and
xlat
add
dec
mov
gs
or
scas
scas
add
xchg
aas
jle
jne
xchg
push
mov
mov
cmp
out
test
test
fisttpl
mov
adc
ret
std
mov
dec
stos
stc
pop
mov
je
js
lret
push
push
icebp
push
jmp
loope
rolb
mov
das
addb
push
push
cmp
pop
iret
cmpsl
mov
mov
out
mov
in
scas
mov
mov
fnsave
cld
int
xchg
sbb
aas
hlt
rorb
xchg
or
ss
or
test
xor
hlt
xor
int3
faddl
jne
in
sbb
shl
mov
pop
add
ret
rcrl
fstpl
pmuludq
lret
call
in
adc
inc
or
movsl
std
pop
xchg
scas
push
loopne
push
mov
inc
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
ret
mov
adc
cmpsb
js
dec
fs
sbb
mov
sub
push
aad
adc
inc
lret
jecxz
inc
ret
mov
cmp
cmp
and
rcl
sbb
pop
mov
xor
out
xor
int
outsl
pop
or
cmp
aam
sub
adc
mov
lods
mov
adc
inc
dec
and
nop
pop
aas
es
sub
or
stos
inc
ret
mov
mov
jmp
mov
inc
aad
xor
lahf
clc
or
cmc
cmp
ret
adc
jl
add
icebp
xor
jo
sub
push
push
jbe
mov
lods
and
pop
sub
loopne
jp
pushf
jo
cmp
sti
ret
jge
popa
sti
out
push
mov
sbb
xlat
mov
sbbl
neg
bound
outsl
add
in
stos
insl
fsubp
dec
dec
mov
loope
dec
xchg
rcll
mov
mov
or
repnz
or
adc
mov
jbe
push
cltd
mov
outsl
ret
sbb
mov
arpl
jae
lret
arpl
popf
movsl
adc
xchg
adc
enter
in
cmp
int
jecxz
and
inc
xchg
ret
cld
adc
shll
xchg
cli
jge
sub
pop
xor
mov
and
cmpsl
add
leave
jnp
inc
into
inc
mov
subl
xchg
xchg
jo
push
dec
push
mov
add
jg
std
negl
sub
shll
popf
adc
pop
lods
push
xchg
sti
das
xor
add
pop
stc
xor
cltd
lcall
int
negl
movsb
lahf
xchg
push
pop
mov
mov
and
test
lea
pop
or
inc
dec
xchg
insb
pop
dec
and
loope
adc
in
jb
adc
call
or
mov
sti
aas
inc
push
or
mov
in
mov
xchg
mov
das
mov
pop
jnp
cmpsl
xchg
xchg
ret
ds
ret
add
sub
mov
sbb
inc
idivb
and
lods
es
je
orl
rorb
shrb
je
mov
jnp
and
rcl
test
mov
scas
movsb
jnp
lods
sbb
and
mov
or
dec
pop
cmpsb
mov
jno
pop
adc
out
ja
pusha
pop
rcl
and
je
cvtps2pd
fnsave
xchg
and
insl
push
cli
movsb
jg
or
pop
outsl
roll
inc
stc
jnp
add
push
popf
xor
ret
dec
out
adcl
sbb
enter
ds
mov
xchg
sbb
clc
jge
rcrl
std
adc
popa
fdivp
mov
jne
movsl
xchg
lods
pop
jbe
xchg
stos
dec
aad
cmpl
in
in
jl
pop
cwtl
sbb
xchg
pushf
mov
mov
inc
dec
inc
jge
jnp
mov
cli
fnstenv
cltd
sub
lea
jl
cli
lea
call
outsb
jg
test
fiadds
outsl
dec
dec
jl
ret
daa
fs
pop
aaa
sbb
shrb
mov
jbe
insl
addr16
movsb
or
loopne
mov
mov
cmpsb
popa
push
xchg
jae
sarl
int3
in
xorb
cmp
pop
int
je
addb
lahf
cmpsl
jmp
pop
push
fiadds
lcall
call
xor
pop
and
enter
sub
xor
pop
sahf
xor
and
jg
adcl
xchg
mov
mov
call
aas
je
js
and
xchg
xchg
cmp
mov
ret
out
push
fst
pop
cs
mov
xor
popa
fistl
lcall
jp
or
jae
sbb
cmp
xchg
cmpsl
push
cmc
cmp
ret
mov
lahf
loope
jge
std
sarl
push
sbb
inc
ss
xchg
pop
mov
mov
popf
ljmp
shlb
rorl
ljmp
icebp
mov
jae
ret
jle
fucomip
sti
xchg
lods
jns
cmp
push
add
push
das
cli
adc
pop
mov
jecxz
xchg
ss
jnp
mov
cmpsb
mov
in
into
leave
cmp
mov
movl
movsb
add
add
aaa
hlt
xchg
sub
and
scas
outsb
mov
out
push
cs
decb
test
lahf
repnz
loopne
xor
xor
add
xor
aas
ret
aad
arpl
bound
add
xchg
xchg
ficompl
sahf
in
fld
ss
cwtl
sub
lea
shlb
aad
or
mov
lret
mov
test
sub
and
popa
jno
xchg
mov
hlt
outsb
test
addl
pop
mov
cli
shll
aaa
inc
adc
inc
push
mov
aas
fwait
lret
sbb
inc
testb
jo
xchg
xchg
dec
ret
jle
aaa
les
idivl
jecxz
in
lock
shl
cmp
jge
sahf
imul
std
loop
dec
fcomps
adc
sub
sub
pop
pop
cmp
lods
mov
sub
fdivrs
mov
pop
test
xor
sahf
std
jnp
clc
pop
scas
and
sbbb
popa
xchg
aam
xchg
aas
sub
push
loope
jp
dec
push
or
inc
add
ds
je
fistpll
outsl
mov
in
cmp
xor
jae
out
scas
andb
sbb
loop
aad
pushf
cmpsb
out
jns
mov
fistpl
stos
inc
loope
es
in
push
lret
inc
std
test
and
push
inc
push
sarl
sarb
loopne
pop
cmp
pop
xchg
test
repnz
lds
adc
push
pop
and
pop
ret
push
mov
jecxz
sbb
xchg
filds
cwtl
nop
mov
leavew
push
mov
int
int3
add
lret
dec
fs
xchg
clc
add
in
lcall
and
jo
fisubl
adc
xchg
xor
pusha
test
mov
shll
gs
xor
push
xor
sbb
repz
in
cmp
sub
loope
xor
mov
jge,pt
rcrl
xchg
lcall
mov
mov
add
jne
out
sarb
dec
movsl
pop
or
dec
hlt
out
inc
jl
mov
std
test
mov
xor
lret
scas
insb
mov
aam
adcl
cmc
or
lret
lcall
pop
xchg
sbb
aas
mov
and
lods
jbe
push
cmp
mov
adc
fst
aad
xchg
out
or
mov
sbb
pop
iret
and
inc
movsl
adcl
or
adc
push
mov
arpl
repz
into
cmp
add
inc
aam
add
add
inc
fsubs
add
int3
mov
mov
add
jmp
pop
sbb
dec
mov
or
inc
or
xchg
pop
mov
nopl
push
and
jne
insb
cli
cmp
dec
cmc
or
add
cmpsb
or
jne
clc
mov
pop
div
outsl
fcomi
pop
mov
sub
xchg
push
jg
add
es
test
add
push
xchg
insb
mov
iret
lods
xlat
ret
inc
imul
add
sub
inc
hlt
inc
movsl
arpl
mov
inc
jg
jle
cmp
icebp
clc
ret
rclb
pop
ds
rol
push
push
loopne
test
pop
add
jp
pop
cmp
popa
lret
and
push
jmp
in
xchg
or
sub
mov
insl
mov
mov
addl
inc
into
insb
push
and
dec
sbb
lret
or
add
add
jl
clc
std
lods
adc
aad
adc
rclb
dec
jmp
pop
jbe
jle
je
dec
push
sbb
sar
sbb
cmpsl
cmpsl
in
xchg
nop
pop
inc
in
pop
xchg
cld
mov
sahf
test
jnp
mov
and
ds
fsubs
rcl
lds
mov
imul
pop
ret
and
push
repz
pop
push
jmp
addr16
scas
mov
dec
inc
int3
xchg
outsl
pop
cmp
adc
outsb
add
mov
xchg
sbb
pop
std
insb
mov
enter
pop
pop
jnp
stos
xchg
jmp
loope
movsl
icebp
mov
repnz
movsl
sub
pop
mov
pop
adc
jno
xchg
xchg
movsb
jo
std
lahf
pop
ficompl
test
jmp
xchg
gs
sub
jae
mov
dec
sbb
cmp
cmp
test
adc
mov
popf
in
and
xchg
mov
mov
xchg
xchg
adc
divl
js
xchg
out
mov
in
xlat
test
cmpsl
pusha
push
adc
loopne
aas
mov
mov
xorb
jp
insl
inc
test
nopl
cmp
addr16
push
or
out
sub
xchg
out
sub
sti
cmp
push
loop
pop
mov
stos
in
lcall
gs
or
gs
nop
iret
out
sbb
lock
dec
int
mov
or
jbe
scas
and
jne
lods
mov
add
and
inc
test
pop
add
mov
loopne
addl
in
imul
mov
cmp
mov
jne
pop
ljmp
pop
mov
mov
call
mov
out
push
bound
mov
mov
sbb
push
outsl
outsl
outsl
sub
dec
cmc
lahf
mov
add
sahf
add
sbb
fxsave
movsb
mov
ja
jns
loopne
lods
mov
movsl
jl
cmpxchg
out
or
xor
xor
and
aas
dec
mov
lret
into
enter
adc
jp
outsb
jne
jne
inc
jmp
ficoms
jne
out
cmp
push
outsb
jp
cltd
mov
cmpsl
cs
inc
ficomps
imul
fsubrs
xorl
add
in
pusha
stos
shrb
jp
sbb
xor
mov
lea
outsb
or
mov
hlt
lret
inc
daa
lods
push
aam
lea
stos
push
shll
jmp
inc
ret
cmp
jnp
shrl
cmp
dec
or
les
adc
mov
notl
pop
xchg
in
mov
enter
ja
dec
fisttps
mov
and
cmp
cmp
scas
lods
shr
in
bnd
sbb
mov
xor
dec
inc
dec
cmp
adc
and
mov
cmp
inc
jno
testb
mov
scas
adc
add
cmp
push
iret
xchg
xor
pop
das
push
inc
mov
hlt
mov
mov
mov
push
scas
jg
pop
xor
adc
insl
and
mov
nop
sub
insb
jmp
ja
lcall
adc
cmp
in
sbb
sub
mov
cmp
xchg
test
push
dec
xor
jbe
and
adc
or
and
jbe
push
cmpsb
xchg
dec
push
or
add
insl
inc
lret
aad
push
fbstp
in
in
mov
ret
call
call
pusha
mov
cmc
dec
push
fildll
pop
popf
pushf
das
xchg
mov
mov
and
fcompl
sbb
sub
cmp
or
andl
jl
sub
sub
jmp
daa
scas
int
and
cli
js
testb
sbb
lss
fstps
pop
inc
mov
adc
std
ss
hlt
loop
in
sub
popf
inc
push
and
jmp
cmp
out
in
lods
testl
xor
addr16
mul
aaa
pop
xor
aam
sbb
pop
adc
icebp
shrb
pusha
in
and
cs
inc
and
insb
iret
decl
ljmp
and
cmpsb
test
repnz
ret
mov
mov
inc
cld
jb
mov
mov
sub
in
jb
test
mov
sbb
mov
dec
adc
add
ss
insb
cmpsl
cld
psubb
mov
outsl
sub
int3
adc
fwait
xchg
mov
add
pop
mov
imull
imul
xchg
mov
lock
jl
inc
jp
in
inc
mov
outsl
sbb
std
out
pop
fbstp
ficoms
enter
div
data16
jle
push
aas
popf
sub
das
pop
xor
dec
xchg
scas
or
fistpll
push
imul
and
pop
add
out
xorb
or
mov
test
pop
jmp
push
pop
cli
sbbl
xlat
fxch
out
bound
lret
ret
shr
and
cmc
adc
enter
fisttpll
enter
push
xchg
insl
mov
push
jae
cmc
inc
into
pop
and
mov
and
cmpsb
mov
mov
or
daa
movsl
filds
or
movsb
cmpsl
cmp
xlat
outsb
fstpt
das
rcll
adc
dec
lret
pop
int3
and
in
adc
xlat
hlt
pushf
mov
test
adc
mov
push
out
jl
xor
pop
sub
jmp
xor
cmpl
lods
inc
fcoms
mov
cmp
and
mov
jb
add
or
fxch
je
shl
sub
push
test
sbb
jnp
aas
dec
sbb
inc
mov
cmc
xchg
stos
cli
cmp
iret
push
ret
xor
or
into
mov
push
xchg
mov
dec
push
push
pop
mov
and
lock
adc
xchg
stos
adc
jmp
into
add
or
call
notl
mov
cmovo
push
dec
dec
pushl
adc
xchg
pop
mov
jne
in
sbb
fs
inc
inc
sub
pop
lea
mov
xor
int
insl
jae
int3
jge,pt
mov
popf
jg
out
jp
dec
mov
sub
adc
xchg
and
out
xor
push
jl
dec
mov
mov
push
in
mov
jae
push
je
ja
ljmp
xchg
mov
call
lds
mov
cmp
sbb
int3
movsl
rcrb
mov
push
repnz
fcompl
pop
mov
aad
mov
push
aad
mov
and
mov
repnz
out
or
push
sub
aas
xchg
dec
lahf
mov
pop
sub
jmp
cld
or
nop
and
js
outsl
xor
nop
mov
icebp
pop
imul
sbb
xchg
pop
out
mov
fmulp
sub
aas
cmp
lcall
rcll
aaa
jmp
fsubl
and
test
hlt
ss
push
ljmp
jle
adc
dec
je
adc
adc
or
cmp
pop
adc
add
xchg
inc
faddl
dec
mov
mov
jnp
les
add
dec
iret
sti
std
outsb
enter
cmpsb
ret
inc
or
pop
rcrl
sbb
mov
mov
lea
sub
mov
cltd
sbb
adc
aam
stc
andl
xor
scas
xchg
mov
ret
jno
jp
mov
in
and
stos
dec
test
sub
addr16
xchg
push
dec
je
sbb
jne
cmp
pop
cmp
inc
mov
popf
aad
cmp
js
outsb
cmpsl
movsb
lret
movsb
push
dec
repnz
insb
xchg
js
shll
cmp
fstps
mov
ja
mov
test
xchg
mov
sti
sbb
add
mov
cmp
or
pop
and
std
test
daa
cltd
gs
jecxz
push
xor
and
jl
ja
mov
jl
imul
fdivl
js
xor
and
pop
push
neg
fwait
test
inc
xor
dec
test
adc
clc
jl
hlt
popa
push
add
jge
xor
jmp
cmpsl
mov
xor
mov
lahf
out
imul
sbb
out
jns
hlt
mov
push
adcl
add
dec
movsl
or
test
pop
push
push
push
hlt
mov
and
jnp
clc
xor
movsb
ljmp
adc
mov
out
cltd
pop
addr16
jbe
orl
imul
fisubrs
or
int3
orl
xor
adc
les
les
sub
nop
popf
dec
shlb
popa
mov
loopne
stos
sbb
and
mov
cltd
mov
ja
icebp
ljmp
cwtl
dec
cmpsb
out
push
xchg
push
stc
int
add
sbb
mov
jno
xchg
jg
out
insb
push
sbb
or
std
add
ja
or
ja
movsl
clc
mov
std
push
cmpsl
xchg
xchg
sub
shlb
sbb
sti
add
xchg
cs
xor
test
sbb
add
loope
xchg
imul
inc
aad
and
pushf
lods
xorl
ret
sub
dec
sub
jbe
push
pop
popf
sbb
sbb
rcll
inc
pushf
add
pop
stos
mov
jns
xchg
push
mov
pop
pop
data16
scas
aaa
ret
and
adc
gs
iret
mov
sti
push
dec
push
ficomps
roll
push
clc
gs
ret
mov
push
data16
push
pop
bound
fstps
inc
add
inc
sbb
dec
push
push
stos
mov
inc
inc
push
jl
dec
stos
cmpl
jge
andl
push
into
pop
push
subl
inc
push
dec
dec
aam
cltd
fdivl
mov
stos
jne
jle
jne
xor
ds
cwtl
xor
into
fnstsw
adc
sub
push
and
call
jmp
lods
add
xchg
adc
and
add
test
rorb
pop
lea
adc
or
pop
mov
dec
mov
lcall
push
mov
xchg
pop
push
inc
test
mulb
sub
outsb
or
mov
xor
adc
lods
adc
jg
inc
fidivl
test
roll
and
out
mov
shlb
repnz
dec
cmp
mov
hlt
stc
mov
or
push
inc
and
or
push
xor
xchg
dec
jecxz
dec
stos
adc
mov
xchg
xchg
jecxz
add
repz
ljmp
hlt
out
mov
sbb
xchg
xchg
mov
loope
and
push
mov
outsb
cs
lcall
lods
cltd
fwait
std
mov
cli
mov
out
cmpsl
xor
shrb
mov
rolb
pop
scas
das
mov
fsts
xor
mov
sarb
pop
sti
sarb
cmpsl
sbb
adc
jno
leave
mov
mov
adc
popf
sub
icebp
bound
adc
pop
ret
test
mov
outsl
lahf
sub
dec
mov
pop
adc
pop
clc
xor
jecxz
adc
add
push
fdecstp
adc
movsb
stc
sub
xchg
loope
mov
es
xchg
mov
push
adc
xor
jb
mov
out
push
add
jne
ret
inc
mov
cmpb
shr
xchg
pop
mov
sub
or
xor
sbb
pop
out
jbe
sbb
sbb
inc
push
enter
dec
push
test
mov
sbb
mov
fisubrs
dec
clc
out
pusha
mov
push
and
add
inc
stc
loop
mov
int3
test
jecxz
clc
sub
pushl
jns
pop
sbb
sahf
iret
sti
adc
lret
testb
in
les
pop
jl
or
scas
sbb
sub
js
in
inc
popa
jb
dec
xchg
mov
imul
bound
inc
sbb
pop
mov
ljmp
xchg
push
arpl
pop
test
or
leave
xchg
cmpl
test
mov
fxch
outsb
adc
add
push
sbb
add
add
enter
sbb
mov
add
adc
or
mov
mov
mov
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
or
add
adc
xor
xor
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jmp
pop
cli
pop
sub
or
dec
pop
nop
push
push
sub
in
adc
and
sub
mov
sub
dec
jns
push
dec
pop
mov
inc
add
sbb
es
mov
das
shl
xor
and
insb
push
repnz
jns
and
ljmp
std
cmp
sbb
shlb
inc
outsl
jmp
or
insl
sbb
sub
push
lahf
push
mov
fisttpl
push
decb
xor
jae
ss
test
sub
xchg
jmp
xchg
sar
dec
mov
bound
sbb
fstps
sti
cwtl
int
scas
mov
call
xor
jne
xchg
inc
adc
xchg
fsubrp
out
and
push
movswl
jmp
cmp
mov
push
hlt
pop
add
sub
fiadds
movsl
cmp
fimull
sarb
in
mov
test
and
dec
sbb
sub
inc
dec
cmp
bound
data16
mov
mov
pop
jge
pop
xchg
fucomi
js
addr16
insl
in
rcl
arpl
jb
subl
pop
jns
movsl
in
pop
fistpll
push
push
aas
shrb
and
push
add
mov
jecxz
add
sbb
movsb
mov
or
jecxz
lods
push
loopne
out
push
fstpl
shl
push
fdivrl
sbb
xor
out
inc
mov
movsb
pop
mov
mov
xchg
mov
pop
call
or
lret
sub
push
ret
test
xor
dec
fbld
jo
shrb
jnp
pop
nop
lea
jecxz
push
jecxz
add
mov
and
ljmp
inc
rolb
push
and
push
std
mov
inc
lahf
in
in
cmpsb
xor
mov
dec
in
mov
movsb
adc
push
jne
call
out
jne
mov
cmp
mov
sub
and
mov
sub
and
sub
aam
push
fwait
pop
jae
clc
or
cltd
sbb
dec
cmp
shr
test
cmp
and
cmp
mov
jl
jmp
fistpll
or
mov
mov
pop
adc
fimull
lret
mov
sbb
gs
lcall
es
jge
repz
xchg
stos
lock
popf
in
ljmp
adc
inc
scas
aaa
jge
rorb
sahf
inc
add
pop
call
and
jle
mov
push
mov
add
cli
sub
mov
adc
jo
icebp
mov
data16
and
inc
push
pushf
cli
jnp
into
loope
adc
cmc
mulb
dec
mov
xor
pop
xchg
xor
mov
repnz
xor
xchg
into
mov
or
dec
movsl
xchg
test
mov
pop
mov
adc
and
test
xor
dec
or
jge
sub
test
xchg
jp
jbe
jecxz
fisttpll
cmpl
lods
dec
rorb
push
xor
iret
lock
xchg
or
add
and
dec
dec
add
lret
sbb
push
xchg
hlt
xor
jae
jnp
pop
xor
lea
lods
mov
in
sub
mov
idivb
and
inc
addr16
jle
pop
imul
jg
cmpsb
xchg
pop
into
and
mov
sbb
cmpsl
insl
loopne
jmp
and
dec
push
pusha
mov
and
cli
insb
sub
inc
jp
jns
inc
jb
inc
stc
adc
iret
neg
add
popl
lods
sub
cmpsl
out
mov
mov
pop
subb
out
pop
pusha
into
and
xlat
jp
les
int3
sarb
roll
pop
or
cmp
movsl
loope
stos
jg
dec
lods
and
sbb
ds
das
or
shr
mov
xchg
jmp
fwait
shll
stos
cmp
test
cmp
jbe
jnp
add
dec
mov
xor
adc
fistpl
sbb
inc
cwtl
jmp
dec
pop
ror
xchg
test
push
out
repnz
cli
test
lds
int3
xchg
gs
mov
xchg
notb
loopne
add
mov
push
sbb
repnz
fwait
popf
and
es
mov
mov
dec
cli
inc
or
sub
or
imul
loopne
loope
jecxz
pop
aad
add
pop
ja
jmp
enter
bound
movsl
or
cltd
sbb
out
dec
xor
jle
and
dec
inc
enter
clc
test
or
stos
jp
jae
dec
repz
outsb
xchg
cli
dec
jg,pt
inc
push
aas
sbb
mov
mov
adc
sbb
mov
aas
inc
push
pop
inc
shlb
add
cmp
sbb
popf
scas
inc
lods
cmpsb
movsl
jns
jl
pop
les
aaa
call
add
lahf
loope
aas
cmp
movsl
psubd
rclb
inc
pop
jle
aaa
push
pop
call
sbb
xor
loopne
cmpsb
andb
cli
insl
outsl
cmp
fstps
mov
push
loop
pop
pop
push
cmp
mov
loope
xor
mov
sahf
push
push
fists
dec
lret
xor
sub
push
sti
or
je
dec
mov
mov
dec
fs
xchg
pop
jg
mov
add
dec
and
nop
das
push
sbb
mov
dec
cltd
xlat
test
xor
push
pop
stos
push
shlb
push
popa
or
and
call
lcall
inc
cmp
adc
jmp
cmp
imul
cmpsl
inc
insb
mov
jg
stos
lret
cmp
xor
or
xchg
pop
in
xor
out
hlt
fsubs
dec
aad
cmp
mov
sbb
jno
jbe
rorl
xor
push
dec
sbb
xchg
lcall
inc
insl
jle
add
xchg
and
add
jl
shl
int
mov
adc
std
fsubrs
jge
pop
fs
mov
ss
aad
mov
out
out
sbb
add
mov
pusha
jl
test
fs
out
sti
or
sbb
std
inc
xorl
inc
push
jns
mov
adc
imul
sbb
shrb
xor
lret
pop
adc
nop
repnz
call
out
pop
inc
out
sbb
and
repz
movsb
and
push
jle
push
loop
in
je
nop
popf
lahf
aad
lahf
mov
lret
mov
aaa
shrb
jne
mov
add
imul
xor
mov
div
jmp
lret
pop
cmp
adc
sbbl
adc
and
mov
push
xor
jl
dec
in
inc
adc
lret
aad
cmp
jecxz
jbe
lds
sbb
xor
push
fsub
push
jl
rolb
add
mov
out
outsl
js
ljmp
bound
clc
insb
roll
ficomps
mov
jo
ficoml
fxch
lret
in
cmp
test
mov
and
add
insl
cs
ret
sbb
xchg
imul
ljmp
pop
leave
insl
fwait
sti
fprem
xchg
push
insb
daa
shlb
jmp
nop
sbb
data16
mov
out
aam
and
inc
mov
adc
lea
and
pop
pop
ror
dec
sub
lods
mov
or
jmp
dec
rorb
sub
dec
adc
fwait
xchg
pushf
nop
mov
pusha
mov
idivb
addr16
mov
test
jmp
jae
add
in
xor
into
mov
jne
dec
test
jne
ljmp
or
jle
fdiv
xor
rorl
in
mov
push
dec
mov
mov
or
cltd
mov
fstps
adc
or
cmpb
sub
loop
inc
mov
or
rolb
mov
cmp
jge
cmp
sbb
xor
sub
jmp
loop
cli
xchg
pop
sub
mov
jp
stos
xor
nop
mov
push
cwtl
inc
icebp
lret
pop
mov
nop
mov
fistl
daa
into
push
or
pop
add
mov
jle
or
aas
mov
pop
cmp
aaa
ja
pop
inc
push
inc
test
loope
out
adc
es
mov
or
mov
repz
pushf
arpl
push
and
cli
dec
or
rclb
or
jne
cmc
jl
sbb
add
icebp
xchg
xchg
mov
mov
mov
out
sti
stos
dec
jg
outsl
fstl
mov
adc
adc
call
dec
sahf
push
sahf
jle
xchg
iret
outsl
pop
stos
jl
lock
and
lea
and
fldz
xchg
adc
je
xchg
pop
es
or
jmp
imulb
cld
pop
inc
loope
xchg
push
fisubs
mov
out
ret
out
pusha
push
out
dec
xchg
fistl
xor
pusha
xchg
iret
outsb
ficoml
icebp
jae
pop
inc
arpl
test
dec
mov
jns
stos
addl
daa
std
imul
mov
sub
testb
add
fucom
mov
cld
cmp
push
ss
lcall
pop
repnz
int
cmp
lea
imul
pushf
add
xor
nop
clc
pushf
jle
cmp
jno
fwait
add
in
cmpl
xor
cmc
cmpl
ret
das
dec
mov
pop
gs
or
dec
or
mov
xor
nop
daa
test
addr16
movsl
jp
ds
mov
dec
shll
xchg
pusha
fdivr
push
dec
les
jae
dec
xor
add
stos
pop
pop
ds
adc
cs
in
or
push
add
roll
stos
adc
sub
andb
xor
clc
or
lahf
in
fsubr
sarl
mov
push
repnz
les
mov
mov
sarb
sbb
pop
sbb
inc
jnp
mov
add
xchg
pop
xchg
xor
mov
out
cli
push
push
das
lods
push
mov
push
xchg
mov
sub
repnz
push
leave
pushf
push
iret
cmp
imul
cmp
loop
cmpb
lock
cmpsl
pop
sbb
cmp
pop
lret
fsubl
mov
mov
xchg
loopne
repnz
pop
inc
mov
je
xchg
and
leave
shr
fucomi
orb
pusha
pusha
or
sbb
or
mov
gs
mov
or
push
and
lds
xchg
adcb
mov
rcr
xchg
pop
arpl
mov
scas
ljmp
sti
addl
mov
into
pop
jae
xchg
popf
clc
inc
xor
and
dec
and
ss
scas
push
lret
pop
repnz
ss
jnp
push
imul
sar
dec
nop
cmc
fbstp
popf
cwtl
and
das
push
dec
xlat
xchg
adcb
mov
pop
xchg
repnz
pop
push
fldl
int
pushl
pop
sub
sub
mov
mov
arpl
pusha
ficoml
mov
sbb
pop
inc
icebp
push
popa
je
pop
mov
popf
lret
xchg
xchg
ja
int3
mov
push
lock
and
movsl
das
mov
cmp
fwait
and
fiadds
popf
cmp
fs
pextrw
sbb
rcr
test
and
lret
pop
ss
or
cmpb
roll
push
sbb
push
stc
cmpsl
cmp
jo
mov
mov
push
pushl
ret
dec
pushf
test
and
dec
inc
adc
es
mov
sar
fs
std
rolb
adc
js
in
add
lods
mov
loopne
dec
out
scas
push
in
sbb
pop
shl
xor
daa
sarl
les
dec
push
mov
push
test
mov
inc
jg
push
lock
add
or
fildll
test
cmp
ror
sbb
loopne
push
inc
cmp
push
shl
sbb
sbb
push
or
in
inc
xchg
aaa
pop
dec
push
stos
pop
sub
push
mov
gs
mov
imul
flds
callw
icebp
scas
loopne
daa
cld
mov
icebp
fimuls
or
pop
outsb
out
pop
or
pusha
add
orb
inc
mov
push
add
lahf
je
lcall
mulb
pop
or
push
push
rcll
dec
jae
int
push
xor
aas
dec
sub
cmc
mov
sub
push
movsl
adc
mov
xchg
stc
sub
push
and
xchg
scas
xchg
pop
jmp
dec
decl
xchg
shlb
mov
addr16
adc
cmp
push
add
xlat
cmp
push
rol
mov
test
and
lret
xchg
ret
xor
jae
add
sub
or
dec
pushl
les
test
inc
mov
ss
test
xchg
data16
mov
out
inc
scas
out
ja
dec
emms
insb
shlb
sub
pop
sahf
adc
xor
pusha
std
sbb
cmp
ret
adc
push
scas
and
add
nop
pop
add
cmc
xchg
cmp
push
mov
adc
mov
adc
and
adc
cmp
sub
adc
sbb
and
sub
jo,pn
xlat
icebp
jae
cmp
xor
lret
je
and
hlt
mov
ret
jmp
lock
jge
and
mov
xchg
pop
mov
outsl
push
cmpsl
leave
pop
xor
jb
sbb
inc
lea
or
cmp
fsubrs
jle
adc
add
jmp
xlat
and
mov
dec
sub
sub
std
les
mov
pop
inc
pop
xchg
in
and
aas
out
jne
lds
daa
insb
xchg
mov
mov
test
stos
sbb
push
es
and
fisubrs
out
xchg
int3
mov
loope
enter
cmc
jge
push
jle
xchg
addr16
ljmp
pusha
add
fnsave
sbb
int
frstor
jae
test
dec
push
enter
jno
xchg
xor
outsb
and
lea
cmp
xor
push
movsl
out
nop
imul
cs
or
or
call
enter
dec
scas
lahf
inc
push
inc
cmp
jne
mov
pop
mov
xchg
and
push
icebp
imul
mov
xor
push
jmp
mov
ss
lcall
add
push
stos
imul
stos
dec
cmp
mov
cld
sub
sbb
test
adcb
or
adc
insl
sbb
inc
out
mov
sbb
cmc
cltd
je
fsubrl
or
lods
add
or
mov
lock
push
sahf
cmpsb
xchg
xor
sub
call
mov
or
lods
mul
mov
sbb
push
cmp
enter
adc
in
add
mov
mov
or
nop
shrb
das
sub
xchg
div
cs
enter
add
aam
jecxz
xor
loopne
cmp
pusha
xor
sbb
push
sbb
lods
ss
xchg
jbe
add
addl
inc
push
xor
xchg
fldenv
lret
xor
and
cmp
fsubr
mov
out
cmp
xor
pusha
test
jne
xchg
dec
sbb
mov
mov
push
or
mov
jns
sti
lret
adc
into
fdivrs
mov
mov
dec
sarl
fildll
cmpsb
lret
int
sub
sbb
leave
not
jns
push
xor
aam
cwtl
xchg
push
in
dec
mov
sub
jns
repz
pop
lods
pop
ljmp
jno
inc
jns
out
xor
jb
cmp
and
call
mov
mov
xor
jg
xor
xchg
sub
in
inc
push
mov
mov
add
lock
inc
hlt
pop
xchg
test
pop
stos
cmp
mov
cmp
mov
repnz
dec
movsl
mov
lds
push
mov
cld
dec
fnstcw
test
es
call
jne
fs
popf
jo
fsts
xchg
inc
pop
mov
lods
mov
loop
jmp
mov
pusha
outsl
push
cmp
or
sti
nop
mov
push
and
popa
inc
sahf
jmp
pop
add
mov
dec
xchg
jno
rcrl
movsl
int
outsl
xor
jo
cmovbe
scas
mov
mov
pop
ret
sbb
mov
ds
mov
sub
jge
sub
dec
cli
dec
pusha
mov
sbb
add
inc
jmp
inc
stos
adc
and
test
fnsave
xor
xor
lods
cmp
imul
gs
scas
dec
arpl
xchg
mov
lcall
popf
repnz
inc
subb
lahf
adc
cli
xchg
aas
sbb
stc
in
cmp
arpl
iret
xor
pop
daa
arpl
pop
and
sti
std
sbb
jg
popf
adc
outsb
cmp
aam
or
enter
sbb
xor
pop
testb
lock
nop
icebp
pop
inc
mov
pop
xchg
add
mov
or
stos
xchg
seto
imul
in
pop
das
cltd
jb
pop
xchg
adc
mov
out
mov
rcl
jne
mov
xor
mov
cmp
jb
xor
pop
mov
popf
lcall
leave
push
in
cmp
es
rcrl
repz
or
shr
bound
dec
mov
mov
inc
sbb
cmp
jnp
sbb
out
in
dec
pop
inc
dec
push
data16
push
fwait
iret
es
gs
dec
cld
or
jne
adc
cli
jns
mov
cwtl
out
cwtl
loopne
mov
cmp
xchg
mov
xor
push
enter
jge
cmp
scas
mov
jne
mov
fimull
xchg
mov
dec
or
cli
inc
test
addr16
push
mov
pop
sbb
iret
pop
mov
push
mov
ret
or
repz
aad
mov
loope
lret
shl
adc
mov
js
test
popa
into
lcall
xor
aas
fsubr
inc
and
imul
xor
mov
movsl
jle
xor
fdivrs
jo
out
mov
xchg
adc
ds
bnd
hlt
jl
mov
in
mov
inc
stc
xchg
push
pop
jo
cmp
in
ljmp
in
lahf
aam
test
push
xchg
jbe
shl
inc
mov
frstor
bswap
add
mov
xorb
dec
mov
inc
inc
cmp
movsl
fnsave
xchg
or
in
sbb
add
sbb
insb
fisttpll
mov
and
popf
pop
inc
xchg
and
xchg
lock
stc
mov
xchg
cmp
hlt
daa
cld
pop
mov
stos
adc
xor
das
int3
shll
sub
ret
jae
pushf
sub
jnp
pop
daa
cli
xchg
add
mov
mov
add
sbb
mov
shll
sub
mov
out
mov
insl
in
test
inc
mov
xor
sahf
xchg
pop
outsb
dec
xchg
int
rcr
subb
cmp
popa
sbb
das
and
or
js
es
add
push
in
cmp
xchg
sub
mov
loope
flds
ficoms
pop
mov
inc
mov
insl
pop
loope
pop
dec
enter
in
outsb
cmp
pop
or
inc
aad
aam
lods
scas
movsb
outsl
ds
jno
mov
test
call
les
mov
cmpsb
int3
push
daa
mov
add
sub
lds
das
iret
pushf
mov
inc
adc
mov
pop
lahf
xchg
xor
push
push
xor
add
xor
mov
mov
sub
mov
and
div
mov
mov
and
sub
imul
add
jmp
scas
fldl
movsl
jl
stc
mov
and
pop
mov
unpcklps
and
movsb
add
outsb
out
push
push
pusha
sub
xor
insb
outsl
add
enter
insl
pushf
mov
and
dec
pusha
sti
hlt
push
inc
inc
push
clc
pop
jns
in
ret
cwtl
clc
xor
dec
scas
push
aas
pop
xor
sar
mov
add
push
sahf
sbb
bound
cmc
inc
fs
adc
add
mov
push
pop
sub
bound
push
lods
add
and
lds
mov
dec
icebp
shll
in
movsl
clc
gs
lock
inc
jle
scas
imul
icebp
lods
xchg
aaa
repz
push
adc
cli
jl
ja
pop
pop
add
inc
insb
inc
inc
dec
mov
dec
stos
push
adc
push
dec
mov
fimull
cmp
inc
mov
lods
js
fistl
daa
loop
stc
jno
sbb
xor
mov
imul
mov
dec
addb
rcrb
fdivrs
sbb
or
sub
out
jp
dec
test
imulb
aam
lret
pop
decb
cld
fdiv
movsl
cmpb
jecxz
and
mov
xor
and
aad
fdivrp
cmpsl
xchg
and
sbbl
jae
dec
xchg
ss
mov
cwtl
mov
cmp
pop
pop
mov
sub
daa
jne
xchg
dec
xchg
xor
add
jecxz
stos
and
inc
add
rorl
inc
cmpb
xor
or
leave
popa
jmp
push
pop
in
testl
xor
jp
and
andl
fsubr
xchg
cmp
xchg
test
bound
aas
sub
jge
dec
mov
pop
daa
pop
cmp
mov
mov
arpl
ljmp
pusha
cmc
call
decb
and
pop
mov
ja
test
test
pop
int3
ds
lahf
loope
int
imul
shrl
push
and
sbb
mov
call
pop
pop
into
test
cmp
pop
repnz
cmpxchg
ss
ljmp
push
add
nop
adc
cmp
aas
adc
and
out
lea
int3
and
mov
mov
lcall
out
lret
add
jae
add
cld
popa
in
test
lds
pop
jb
xchg
inc
mov
xchg
xchg
and
mov
mov
adc
scas
mov
out
mov
popf
loopne
fcompl
movsl
mov
out
loope
imull
ljmp
cmp
add
xorl
mov
pushf
or
pop
ret
loope
dec
lahf
scas
insb
cmp
mov
popf
pop
lahf
mov
sbb
inc
cmpb
repz
mov
repz
sti
and
inc
aas
xor
ffreep
pushf
inc
stos
sub
addl
mov
aas
loope
sub
mov
test
test
dec
sbb
int
adc
push
cltd
mov
sub
loope
mov
movd
inc
sbb
fdivl
int3
ja
inc
dec
adcb
pop
aas
sbb
or
cmp
gs
imul
fwait
xor
inc
aam
xor
pop
insl
ss
clc
inc
int3
test
cwtl
shll
popf
and
lret
push
mov
ljmp
shl
pop
jbe
dec
adc
or
lcall
stc
xlat
je
sub
adc
mov
dec
sbb
jp
push
push
and
inc
out
lods
sub
pop
lock
fdivrs
sub
enter
add
lods
repz
insl
cmp
xchg
dec
pushf
ljmp
push
inc
push
loop
int
mov
ja
push
lock
mov
cmpsl
mov
mov
jmp
mov
ret
jmp
xchg
mov
adc
inc
ss
push
cltd
pop
inc
push
outsl
inc
sub
or
ja
lods
movsl
mov
icebp
out
adc
push
ljmp
outsl
or
jne
adc
jmp
add
cmp
push
push
dec
xor
jnp
pmaddwd
dec
fisubl
xchg
mov
fcmovnb
fcomps
mov
insb
xbegin
jecxz
fwait
jp
imull
jbe
loope
push
in
hlt
push
mov
add
movsl
dec
xchg
sbb
sti
decl
out
in
stos
mov
fcomp
mov
enter
cltd
roll
mov
cld
dec
or
cmp
into
lock
dec
sbb
iret
mov
push
sbb
pop
xchg
mov
push
loopne
jnp
sbb
loop
call
xor
and
push
kandnb
rorb
test
addr16
inc
mov
jns
sbb
cwtl
imul
pop
push
dec
fimull
xchg
fwait
stos
sub
daa
sbb
leave
jo
icebp
dec
pop
jmp
push
push
adc
arpl
mov
loop
dec
lock
addr16
mov
mov
mov
cwtl
js
or
ficompl
cmovge
push
add
imul
sarl
cmp
ficoml
or
xchg
ret
jg
mov
add
cli
jle
shrl
pop
repnz
sub
adc
mov
jo
shll
mov
adc
inc
lcall
clc
out
xchg
shrl
popf
or
test
ja
fimuls
stos
jle
push
fldz
mov
mov
jmp
jns
mov
inc
sarb
dec
insl
add
jecxz
out
popa
or
inc
dec
shlb
adc
sahf
jg
push
push
push
imul
fildl
test
lahf
mov
push
sub
gs
daa
xor
or
push
push
fldl
mov
pop
push
call
mov
dec
sarb
sbb
insl
push
pop
call
xchg
in
loope
out
add
fidivrs
sar
stos
out
add
cs
sub
aaa
push
sub
clc
arpl
or
nop
mov
shr
js
push
adc
jae
testb
adc
xor
mov
fists
imul
in
pop
popa
sbb
xlat
decl
insb
inc
cs
xchg
fwait
es
cwtl
inc
push
enter
fs
addr16
lcall
jnp
outsb
pop
arpl
xlat
xor
aad
cmp
cmp
lret
ret
sbb
xchg
sub
insb
push
lret
sub
loopne
shrb
outsl
or
ret
push
mov
push
xor
mov
or
inc
unpckhps
sbb
std
pop
or
mov
pop
mov
aam
cmc
dec
xor
and
jmp
jne
add
subl
xchg
sub
xchg
addr16
and
xor
push
scas
lock
std
push
xor
test
ret
cwtl
and
sub
jno
ret
cmp
xor
clc
xor
sbb
adc
pop
clc
ror
cmp
sarl
adc
jle
loopne
aas
js
or
shlb
orb
and
fbstp
push
imull
cmpsl
push
sbb
iret
and
iret
cmp
imul
aad
jl
das
add
pop
pop
rol
mov
push
xor
mov
sub
cmc
xor
les
mov
jb
fmuls
xchg
lods
nop
aaa
gs
lahf
je
inc
mov
outsb
aas
xchg
xchg
cmp
push
je
mov
push
notb
jge
or
sbb
adcl
xchg
add
mov
loopne
loop
add
add
add
pop
inc
imul
xchg
mov
aas
lret
imul
daa
cmp
loope
jae
sti
lods
mov
sar
stc
xchg
into
shll
inc
jl
dec
sahf
jns
gs
mov
movsb
lret
cmp
mov
xor
dec
adc
imul
sbb
xor
pop
mov
test
dec
mov
shlb
shlb
mov
jb
lock
call
jnp
and
lret
loop
inc
mov
jle
imul
lahf
aaa
lods
rcrb
xchg
outsb
xorl
dec
mov
cmp
dec
enter
or
push
sub
cmc
in
push
imul
fiaddl
cmp
mov
cltd
mov
outsb
mov
push
dec
stos
and
and
add
stos
push
pusha
mov
adc
and
pusha
pop
pop
lods
fildll
mov
jbe
and
xor
mov
popa
or
decl
or
push
scas
or
imul
dec
mov
add
mov
xchg
outsl
push
clc
hlt
or
bound
xchg
sbb
cmpsl
cmc
xorl
push
orb
or
lods
and
pop
fisubrs
pop
adc
insl
jmp
mov
push
inc
sti
inc
mov
and
mov
addr16
mov
mov
stos
inc
cmp
jno
add
test
mov
icebp
jg
push
jbe
incl
enter
test
mov
fbstp
lods
loope
and
outsb
xchg
out
les
and
adc
cld
lock
jmp
xor
fisttpl
dec
lods
cmp
and
cltd
dec
ret
mov
stos
xchg
pushf
inc
add
popf
pop
jecxz
jg
imul
jae
pop
and
inc
dec
add
adc
sub
in
add
jbe
dec
jmp
daa
mov
pop
sbb
push
mov
pop
repnz
shlb
aam
test
leave
in
cmp
das
sar
jg
fistl
sbb
ss
fstl
jbe
mov
int3
stc
aaa
test
jmp
or
daa
mov
xchg
xorb
xor
repz
cli
out
ljmp
push
and
jecxz
lcall
adc
pop
adc
cli
jno
mov
popa
pop
in
outsl
aad
xchg
pop
sub
fdivs
pop
adc
xor
popa
mov
aaa
jb
shl
mov
pop
pop
sub
mov
loope
push
inc
icebp
xlat
inc
mov
pop
fsubs
jge
js
add
clc
xchg
imul
lds
mov
xchg
cmp
lahf
gs
repz
out
mov
jnp
inc
and
aad
push
loop
xchg
xor
or
addr16
and
daa
pop
mov
and
out
sbb
out
nop
inc
push
or
adc
fstpt
int3
and
mov
lods
pop
jae
pop
cmp
fwait
sbb
scas
mov
mov
xchg
dec
scas
mov
xor
jns
shrl
jg
xchg
xlat
fbstp
mov
ret
fnsave
add
dec
shll
dec
xchg
sub
pop
ljmp
lret
ss
stos
xor
jge
das
dec
xchg
jmp
insb
cmpsl
pop
loopne
add
lret
lock
push
dec
ss
cmpsl
lahf
outsl
mov
imul
lods
test
rorb
insl
lods
dec
call
sbb
inc
pop
fisttpl
xchg
gs
fimuls
pop
dec
testl
das
sbb
jmp
fbld
sub
data16
js
and
and
jns
testl
sahf
movsb
daa
inc
push
push
nop
sub
push
loopne
mov
pop
fcmovbe
xor
cli
shl
jmp
cmp
sahf
fs
lahf
mov
adc
test
xor
pushf
mov
jle
ret
pop
aas
mov
int
lods
ret
xor
aaa
es
push
adc
xor
clc
inc
rcll
mov
xorl
mov
daa
add
lcall
cmpsl
cmp
mov
adc
add
and
sbb
es
push
cltd
or
xchg
add
pushf
jne
addr16
jbe
clc
arpl
pop
popa
push
inc
add
int
jno
into
sti
lods
es
inc
xlat
mov
dec
or
inc
push
push
fimull
pop
push
cmpsl
popf
xor
fsubrl
xor
mov
negb
jl
lods
xor
mov
stos
aam
mov
mov
inc
push
dec
xchg
add
shll
and
movd
std
fistpll
sub
call
add
cmp
movsb
cmp
push
or
sbb
add
jge
xchg
push
scas
pusha
mov
lock
movsl
sbb
repnz
popa
xchg
sti
push
mov
pusha
push
test
addb
fsubp
sbb
and
cmp
adc
pop
call
int3
fsubrs
mov
jno
sbb
mov
inc
jne
incb
fs
rcrb
ss
js
test
fs
jle
jge
fsubrs
cmpsl
mov
loopne
jno
adc
jmp
inc
cli
movsb
mov
jae
adc
or
fwait
sbb
mov
xlat
pop
and
or
mov
loopne
es
fildl
push
xchg
cmpsb
add
aad
test
fstps
mov
sub
push
or
cmp
sbb
pop
inc
and
jnp
mov
repz
fwait
or
push
and
mov
pop
and
sub
pop
inc
aas
cmp
outsl
mov
imul
aas
sti
sbbb
out
push
add
jae
cld
aas
sbb
xor
aas
lock
icebp
pop
std
addr16
iret
js
push
and
test
add
incl
enter
add
jmp
nop
shrb
sub
addr16
sub
outsl
or
xchg
adc
and
inc
dec
cmpsl
sub
pusha
add
mov
out
lcall
jmp
cmp
fiadds
sub
inc
cli
gs
inc
addr16
mov
das
fwait
loope
xor
adc
jge
xor
pusha
mov
hlt
fists
arpl
push
mov
mov
std
sbb
stc
popa
icebp
leave
adc
pop
jl
cmp
test
mov
adc
test
in
inc
fld
or
adc
add
sub
push
mov
jno
jns
push
std
outsl
add
xor
out
aaa
cmp
mov
adc
jbe
andl
in
adc
mov
cld
sbb
jne
sub
sub
movsl
adc
mov
stos
jno
jno
rcll
mov
cmp
scas
push
hlt
push
jp
xchg
jne
repnz
std
fsubs
push
xchg
xchg
jae
cs
pop
mov
mov
shll
gs
mov
cmpb
inc
sar
out
mov
xchg
clc
jmp
lea
bound
pusha
dec
mov
adc
in
add
lcall
jl
mov
ss
ja
and
sub
lods
cli
inc
lods
or
cmp
sub
ret
mov
xchg
add
aam
and
aam
or
imul
mov
cmpl
sbb
sbb
sbb
jo
outsb
mov
mov
test
mulb
nop
notl
mull
xor
lret
sub
mov
jg
jns
fidivl
imul
xchg
leave
mov
sub
mov
mov
inc
add
xchg
rcrb
and
mov
into
mov
jle
sti
mov
aas
das
shll
xor
rclb
xchg
pop
jmp
ja
adc
adc
rcrl
or
pusha
iret
and
cmpb
mov
add
popf
jp
pop
mov
stc
sub
mov
xlat
sbb
repnz
icebp
mov
mov
test
insb
fld
inc
mov
add
jo
cmp
mov
and
sbb
mov
scas
jns
lods
test
sub
fs
lcall
shll
mov
fldenv
cs
push
dec
pop
jle
in
leave
je
out
aad
or
incb
lods
inc
aad
fwait
xor
pop
scas
lods
cld
push
fdivrl
push
lds
daa
cmp
in
pop
mov
inc
mov
adcl
sbb
adc
cmp
mov
inc
lcall
push
xchg
stc
call
popa
cld
leave
jno
loopne
adc
jne
icebp
pop
mulb
aaa
das
cmpsb
test
pop
pop
repz
push
push
test
jno
and
int
xchg
push
adc
jae
cmp
fiaddl
mov
test
mov
xor
mov
addr16
iret
and
mov
mov
mov
cmp
mov
filds
repnz
mov
dec
xor
subb
pop
test
mov
es
dec
push
inc
jno
outsb
orb
fs
lds
mov
mov
adc
sub
and
jp
int
lcall
or
push
and
punpckhwd
insl
and
nop
xlat
int
sbb
fistl
push
push
and
dec
jg
fbstp
pop
cmpsb
push
push
into
imul
pop
fmul
ljmp
pusha
imul
mov
aad
addr16
sti
mov
xchg
cmc
xchg
fidivrs
xor
cltd
push
dec
xchg
jns
mov
dec
cld
popf
cmp
push
cmp
jno
mov
hlt
les
popf
sub
aaa
cmp
scas
andb
push
add
or
test
add
lret
add
push
insl
or
or
mov
ficomps
push
mov
pop
pop
add
das
mov
xchg
lahf
xchg
ret
int
adc
and
mov
incl
les
out
aaa
clc
xor
pushf
nop
data16
add
mov
dec
cmp
sub
arpl
insl
ret
push
jmp
mov
stc
cmp
icebp
ja
add
jae
xor
add
enter
and
shl
in
decl
loopne
xlat
sbb
xor
repz
je
and
dec
out
pop
xchg
xchg
push
push
push
inc
mov
cmp
clc
cmp
pop
cmp
repz
lcall
lods
mov
hlt
lods
outsb
mov
fnsave
ja
gs
add
loop
js
xor
addr16
sbb
shl
jb
cs
cmpsb
lcall
jbe
aas
fcomps
or
pop
inc
adc
lds
push
mov
mov
jmp
into
in
and
dec
scas
test
pop
adc
fs
ffree
xor
or
cli
subb
cmp
jae
xchg
js
in
cld
sbb
xchg
cmc
mov
in
mov
xor
jmp
test
insb
mov
mov
and
pushf
cmpsb
mov
cwtl
mov
push
dec
rcll
aas
add
rcr
orb
xor
lret
cmpsl
mov
das
in
xor
mov
pop
jbe
cmpsb
sti
fwait
sub
inc
mov
ds
push
inc
pop
lcall
cmp
div
push
ss
jne
push
out
mov
xor
aam
pop
iret
dec
sbb
pop
insb
xchg
push
sbb
addl
cs
in
sbb
inc
or
xchg
and
movsl
test
jmp
stos
in
daa
pop
push
mov
add
cmp
pop
pop
int
daa
shrl
iret
and
or
xchg
inc
call
jl
mov
and
cmp
leave
jle
push
in
das
clc
mov
shl
mov
jge
aas
mov
push
jbe
dec
das
and
mov
daa
test
test
mov
icebp
std
push
sbb
enterw
push
test
push
sub
xor
adc
stos
std
sbb
cmp
or
les
sbb
jp
adc
cmc
inc
and
mov
ds
xor
sahf
repz
pop
jnp
push
dec
pop
mov
lods
push
xchg
js
in
xor
and
jg
adc
and
xchg
and
jg
icebp
jbe
fxtract
adc
aaa
scas
mov
add
pop
gs
dec
xor
adc
lds
repz
in
mov
lock
lret
sbb
mov
in
dec
orl
push
lock
mov
and
sub
add
mov
cltd
cmpsb
cli
pop
mov
xor
or
xor
add
mov
add
mov
mov
mov
mov
xor
xor
add
adc
jmp
push
gs
pop
out
dec
push
push
add
mov
cmc
dec
xchg
psubsw
ret
imull
inc
xlat
or
mov
lcall
mov
insl
inc
test
std
aas
jae
mov
mov
rolb
and
lods
test
cmp
sbb
dec
push
in
add
out
push
cmp
sti
cmpsl
jo
mov
movsb
push
jns
dec
out
sbb
mov
call
outsl
pop
insl
jmp
mov
push
lcall
iret
mov
lcall
test
push
mov
dec
in
inc
fs
dec
xchg
not
ret
inc
mov
push
lea
jl
mov
jno
mov
jae
xchg
lret
sti
push
cmpsb
jbe
mov
push
pop
fsubr
xor
stos
xchg
cmp
push
pop
mov
jno
das
les
in
cmp
repnz
sti
call
and
sbb
push
mov
or
or
sub
sbb
int
insb
push
mov
stc
add
sti
scas
pop
stos
dec
sahf
sti
add
sbbl
mov
mov
adc
mov
dec
popf
mov
sbb
and
mov
and
pop
and
jle
sbb
sahf
push
push
in
lcall
popf
addr16
add
sbb
jle
or
mov
enter
jo
xor
movsb
mov
movb
pop
ljmp
in
pop
sbb
fsubl
popa
out
scas
or
push
call
mov
xlat
jle
shl
mov
popf
push
fistl
sti
inc
cmp
jns
jns
dec
inc
cmp
out
dec
insb
sub
aad
jbe
xchg
cmpsl
stc
cmp
sbb
out
popf
fcom
das
mov
inc
pop
pop
add
leave
mov
xlat
mov
fildll
add
fs
outsb
pop
push
inc
aad
mov
add
scas
sub
xor
push
cmc
or
jno
jno
movsb
aas
xorl
insb
popf
fcoml
xor
loopne
inc
push
pop
and
sahf
cmp
push
cld
bound
xchg
je
cli
and
sub
and
jp
mov
xlat
cmp
pop
xchg
fwait
insl
es
mov
mov
orb
adc
mov
add
pop
xorl
xlat
cmp
jmp
movsb
cmpsb
loope
je
add
inc
sub
fdivrs
push
dec
sub
jns
jo
repz
push
jne
xchg
jle
mulb
imul
ss
cmc
js
aad
xor
and
mov
add
lcall
cmpsb
sub
decl
adc
jg
int
into
mov
enter
sbb
push
add
add
jmp
mov
mov
xchg
or
sbb
xor
stos
ret
bound
inc
dec
push
jmp
das
mov
sbb
test
xorl
das
pop
in
into
ja
xchg
sub
icebp
pop
aad
or
out
sahf
adc
stos
pop
xchg
leave
clc
pop
clc
mov
hlt
enter
add
aas
dec
bound
enter
decb
adc
scas
or
and
push
xchg
mov
jae
push
shl
lock
add
jbe
xor
dec
mull
push
ffree
mov
mov
pop
pop
shll
pop
das
scas
loope
pop
jp
or
jnp
dec
adc
inc
or
out
sbb
inc
addr16
and
cwtl
fdivrl
pop
arpl
data16
pushf
imul
in
outsb
push
in
dec
stc
mov
mov
lahf
aaa
ret
inc
xchg
or
stos
cli
in
pop
and
mulb
push
mov
sbb
movb
inc
xor
ja
sbb
pop
clc
subb
push
xor
out
mov
xchg
pop
cwtl
dec
cwtl
cli
mov
add
fstl
mov
lret
outsb
scas
std
pop
lods
jecxz
dec
imull
out
sbb
ds
aam
int
fidivrl
xor
adc
jp
movsl
jmp
fimull
cmp
outsb
sub
mov
jo
pop
jae
dec
out
mov
jl
insb
vpsraw
pop
jl
paddw
xchg
into
dec
add
pop
jmp
pop
rcrl
sub
arpl
jbe
fwait
or
and
inc
or
aas
mov
jle
push
insl
fsubrl
int
inc
dec
fstpt
dec
mov
into
ret
fcmovbe
fimuls
jle
out
adc
pop
ret
sub
cmp
lds
mov
push
sbb
push
rcll
lahf
push
out
or
mov
cwtl
xchg
adcl
add
insl
dec
jbe
shlb
fcoml
push
adc
cmp
enter
jl
cld
pop
stos
dec
mov
ss
out
push
gs
add
mov
in
insb
decb
xchg
divl
test
inc
lods
xchg
test
iret
pushf
in
dec
int3
dec
pop
fistpll
add
push
push
or
icebp
xchg
jo
mov
add
mov
lods
imul
jg
inc
dec
cmp
clc
sbb
mov
add
out
or
push
push
lahf
mov
fwait
pushf
mov
jae
je
lret
add
rcrl
push
movsb
xchg
adc
int3
jmp
add
xlat
aam
mov
leave
scas
in
or
xor
adc
in
ds
cmp
pushf
sbb
aas
icebp
pop
flds
cmp
jle
into
mov
pop
add
sub
add
mov
push
cli
jmp
ja
ret
in
pop
jmp
es
addr16
stc
push
push
cmpsb
cmpb
mov
inc
and
ret
push
inc
bound
loop
dec
out
lds
push
pop
mov
xchg
push
mov
in
fdivs
imul
dec
pop
insb
mov
lcall
jp
cli
shr
or
in
dec
and
pop
or
xor
flds
fstps
sbb
adc
rcl
cli
test
aam
push
xchg
ljmp
mov
jmp
arpl
pop
dec
test
pop
test
xchg
fadd
mov
xor
lcall
daa
and
add
adc
pop
aad
push
daa
cmp
push
jae
sbb
lret
adc
insl
mov
cli
pop
outsb
push
xchg
pop
into
mov
notb
into
sbb
fwait
pusha
scas
pop
fwait
mov
and
lea
sub
mov
lcall
nop
pop
add
sbb
push
adc
xchg
int3
xchg
nop
adc
and
add
outsl
int3
aad
and
nopl
bound
pop
aas
sbb
jno
or
mov
pushf
pusha
pop
fcomps
je
js,pt
xor
mov
clc
enter
clc
aam
push
sbb
std
cmp
inc
or
push
addl
in
sahf
mov
add
fsubrs
cmp
shl
scas
mov
fwait
divps
addr16
add
fsub
mov
and
dec
inc
clc
dec
bound
xchg
subl
lods
pop
pushf
lea
adc
gs
xor
push
mov
into
jg
pop
or
mov
aam
jmp
xchg
testl
dec
cmc
subb
jp
rcrl
stc
jle
lahf
push
mov
sbb
sbbl
dec
inc
int
push
mov
sub
dec
pop
add
xor
lock
loope
lcall
addb
pop
sahf
nop
ret
test
push
ror
aas
dec
data16
je
add
pop
xorl
jne
xchg
sub
add
aaa
mov
sub
sarl
pushf
xchg
inc
push
fisubs
femms
test
in
jmp
push
aaa
cmp
or
jp
xor
dec
test
bound
lahf
icebp
lahf
sahf
mov
mov
sbb
insl
imul
out
cmp
movsl
mov
test
cltd
pop
push
xor
xor
sub
lcall
aam
mov
push
je
fcoml
cmp
pop
mov
sarb
jnp
jl
and
inc
icebp
js
xorb
shrb
mov
inc
out
and
mov
int
push
inc
push
mov
inc
mov
das
dec
lds
fsubrs
insl
adc
mov
xchg
mov
or
repz
nop
dec
sbb
fdivs
jne
mov
inc
sub
int3
sbb
test
cmp
and
icebp
lcall
cld
xchg
cmc
sub
sarl
aad
lods
sbb
cltd
stc
jb
pop
cmp
repnz
xchg
hlt
adc
out
aaa
push
pushf
cmp
pop
inc
iret
cmp
pop
add
pop
test
push
xchg
cli
sbb
push
cmp
jp
rcrb
add
popa
jecxz
repz
loope
arpl
dec
sahf
and
mov
lahf
imul
dec
arpl
mov
pop
repz
nop
lret
outsb
faddl
inc
sbb
push
jns
add
dec
shrb
pushf
inc
mov
dec
lea
xchg
pop
xchg
xlat
and
jecxz
rclb
cltd
jecxz
pop
mov
pop
inc
add
movaps
fwait
pusha
pop
lea
loope
pop
lea
scas
fists
mov
movsl
pminsw
xchg
inc
testl
or
push
push
push
xchg
cmp
xor
jbe
test
mov
mov
cmpsl
mul
mov
call
pop
sub
ret
popa
adc
push
jl
sbb
lock
adc
in
xchg
pop
frstor
mov
daa
es
test
enter
outsl
hlt
fwait
mov
lea
nop
int3
jns,pt
lods
cmp
scas
out
pop
adc
and
add
mov
mov
lock
insb
std
lock
icebp
adc
inc
push
adc
push
aaa
xchg
mov
sti
icebp
jmp
loopne
fsub
pop
ds
movsl
add
inc
push
xor
jne
aas
or
les
sbb
mov
mov
add
ds
and
out
mov
dec
outsl
dec
mov
paddsw
bound
in
mov
cmp
inc
pop
push
fldcw
xchg
ss
and
mov
fdivl
pushf
ja
in
adc
lock
mov
inc
dec
and
pop
aaa
addb
sbb
xchg
cmpsl
push
les
mov
clc
js
adcl
outsb
jno
sub
xlat
pusha
add
sub
adc
dec
sarl
dec
ja
add
mov
sub
sbb
in
mov
xchg
test
push
add
mov
sub
int
js
loop
sbb
ja
xchg
cmp
mov
inc
xor
push
pushf
or
cmc
pop
jae
cld
jns
jnp
dec
imul
adc
xor
pop
jge
sbb
push
mov
test
mov
sub
sub
cmp
in
clc
and
sti
pushl
lret
ja
sbb
mov
dec
add
sar
rorl
les
sub
cs
test
mov
add
xchg
xchg
inc
fsubs
or
jns
jo
or
insl
push
mov
loopne
bound
inc
pop
cmp
cmp
xchg
mov
ret
xor
pop
int3
cmc
es
das
mov
mov
inc
add
cmp
mov
orb
or
and
xchg
jp
sti
jmp
shll
pop
lea
out
int3
mov
and
sbbb
int3
je
enter
pop
jge
or
xchg
jnp
push
mov
cltd
xchg
test
xchg
xor
xchg
fcoms
lods
ds
outsl
addr16
movsb
xchg
pushf
jmp
outsl
out
dec
inc
sti
mov
cmp
jae
in
mov
xlat
adc
int
add
adc
testb
add
mov
pop
and
adc
mov
adc
cwtl
fldcw
movsl
cmpsl
pop
lcall
sub
cmpb
xor
repz
cs
inc
enter
lret
add
sub
push
sbb
cmpl
outsl
push
ds
cmp
mov
fcoml
inc
dec
out
testb
or
jl
or
add
iret
mov
jno
dec
jae
frstor
lcall
lahf
jmp
add
fwait
insb
mov
in
sti
decb
add
mov
arpl
jae
orl
stc
outsl
and
popf
leave
ficoml
jne
mov
lds
add
pop
ljmp
cs
push
add
adc
sbb
inc
add
add
movsb
out
push
in
jle
stos
add
out
add
jne
mov
xor
lea
cwtl
mov
popf
push
cmp
mov
ds
jnp
ds
jae
in
cs
xor
xchg
mov
dec
test
movb
mov
bound
aad
sbb
sub
lock
sbb
movsb
xor
call
push
push
push
push
call
mov
add
adc
xor
cmp
jne
cmp
jne
mov
mov
imul
mov
or
sub
mov
lea
mov
pop
leave
ret
push
mov
sub
cmpl
jg
mov
add
jmp
pushl
call
push
jmp
addb
add
inc
xor
adc
addl
push
aad
inc
inc
mov
aas
jl
test
push
int3
les
in
mov
or
inc
fnsave
push
and
fstp
push
repz
std
pop
les
mov
aad
xor
and
push
lret
mov
jmp
call
aaa
jge
sub
insb
and
and
jl
pop
scas
pop
jmp
scas
nop
inc
push
push
sbb
shr
loop
sub
dec
enter
sub
loopne
lods
sub
loopne
xchg
add
bound
in
jb
xchg
std
sbb
xchg
imul
fchs
pusha
shlb
dec
ss
in
sahf
jg
cmp
call
jbe
jno,pn
lods
jb
cmp
mov
dec
xor
roll
out
stos
in
mov
or
or
hlt
and
inc
xor
pop
dec
cli
inc
adc
sub
mov
cmp
sbb
ds
adc
inc
xchg
pop
xchg
loope
xor
out
dec
add
jle
pop
hlt
ds
mov
jl
inc
jg
adc
arpl
daa
mov
mov
repnz
and
mov
cltd
pop
mov
in
push
fwait
push
inc
jo
lret
xor
loope
mov
cmp
xchg
push
leave
cs
jbe
outsb
push
rolb
adc
sub
and
cwtl
xor
jne
arpl
or
mov
pop
jns
xor
bound
outsl
cmp
inc
push
fisubrl
sahf
stos
xor
out
adc
push
jne
lock
push
inc
pop
sbb
inc
cwtl
repz
cmp
rcrb
xchg
mov
xchg
inc
xchg
out
inc
cmpsl
loop
ljmp
inc
mov
insl
sbb
xor
jge
movsl
pushl
cmp
scas
test
fwait
inc
mov
outsb
jg
cmp
xor
and
dec
fists
inc
popl
loop
aaa
push
push
scas
cltd
loopne
jge
imul
inc
das
jo
push
test
cmp
or
lcall
dec
xor
pop
mulb
pop
negl
pop
es
sbb
divl
iret
adc
xor
cmp
mov
inc
out
dec
pushf
pop
inc
xor
fnsetpm(287
add
fdivs
imul
mov
std
mov
lods
adc
mov
aaa
dec
outsb
xor
shl
ds
mov
mov
lods
aam
jbe
lds
add
out
add
gs
xor
je
negl
cs
add
lods
jb
dec
mov
movsb
adcl
cwtl
lahf
adc
aam
ljmp
jg
ja
mov
or
adc
leave
mov
fldl
movsb
jmp
mov
rcrb
sbb
adc
sub
cs
enter
add
sti
fdivr
insl
xor
sbb
push
sbb
push
mov
xchg
repz
pushf
ret
xorl
and
inc
jbe
std
jne
stos
fidivrl
andl
mov
mov
sti
cmpsl
loop
data16
adc
or
cld
loop
adc
es
jo
adc
enter
sbb
or
dec
das
or
mov
mov
shr
call
fwait
rcrb
xchg
adc
push
push
insb
push
or
xor
popa
adcl
push
dec
and
mov
push
shlb
addr16
cwtl
stc
xchg
adc
cmc
push
aad
xchg
test
mov
pop
adc
add
pop
inc
aad
out
pop
pop
and
lods
jae
pop
xor
cs
xlat
dec
int3
movsl
jle
cli
test
mov
arpl
xchg
cmp
cmp
mov
int
outsl
fiaddl
ss
inc
cmc
es
js
insl
je
enter
andb
push
cmpsb
adc
xchg
sti
shrb
in
ja
arpl
pop
sar
or
pop
or
push
cs
sbb
das
dec
out
in
sti
lahf
cmp
xchg
or
pusha
xchg
or
inc
jl
ret
cwtl
mov
call
icebp
jns
loopne
mov
les
insb
mov
mov
inc
mov
jecxz
xor
mov
mov
sbb
pop
push
jecxz
in
test
aad
popa
ret
push
mov
enter
jle
adc
notb
daa
je
push
scas
mov
mov
and
mov
mov
xchg
xor
jle
lock
loopne
mov
out
xlat
leave
loop
mov
and
rorb
dec
sbb
ljmp
cmpsb
jmp
fisttps
sahf
and
dec
mov
shr
jne
xor
jno
inc
inc
in
out
pop
jb
add
lea
adc
push
sub
sbb
inc
fwait
inc
cmp
pusha
or
fistl
scas
push
stos
push
loopne
ret
fstp
mov
xor
aad
jb
sbb
add
push
xor
cs
aaa
sbb
fdivl
add
jbe
mov
aad
out
xor
ja
clc
xchg
xor
and
js
push
push
test
filds
leave
stos
into
stos
daa
push
dec
imul
pushl
dec
mov
mov
enter
in
mov
sub
cmp
call
mov
int3
mov
cli
pop
push
fnstcw
test
pop
inc
jb
adc
xor
cmp
loop
into
fstpl
mov
inc
addl
daa
dec
in
mov
adc
sarb
and
sub
lock
fistl
ret
scas
lds
cmpsl
aam
xchg
std
mov
lahf
mov
push
inc
fwait
mov
enter
mov
push
xchg
aam
inc
xchg
push
jp
xchg
ret
fisubrs
fstpl
cli
mov
or
sub
ret
ret
push
push
out
jle
add
ljmp
sub
int3
push
or
add
ljmp
and
lahf
lods
iret
mov
mov
pop
lds
test
push
and
push
pop
lock
int
lods
pop
xchg
jg
lahf
aaa
lea
xchg
sarb
sub
iret
les
and
jne
inc
in
inc
sub
jle
lcall
lock
enter
mov
scas
mov
stos
jne
push
mov
lahf
ret
ret
mov
sarb
int3
repnz
shlb
enter
je
inc
push
bound
enter
mov
or
test
or
imul
cltd
cmp
jns
xor
sahf
rorb
xchg
or
xchg
scas
xor
add
lfs
sub
pop
mov
jae
sti
je
mov
sahf
add
push
leave
mov
pop
adc
add
mov
push
ja
mov
cmp
jnp
icebp
movsb
or
test
mov
imul
mov
jnp
jge
rcrl
mov
les
in
mov
std
shll
jmp
out
inc
sub
or
scas
inc
inc
add
jge
movzbl
add
adc
jmp
push
push
push
pushl
call
shrd
jmp
outsb
fwait
push
movsl
or
movsb
js
fbstp
sbb
jno
mov
mov
pushf
nop
dec
jo
adc
stos
cmpsb
fcoms
xor
cli
or
or
sarb
mov
xor
inc
cltd
out
cmp
out
push
and
mov
cs
out
orb
jle
sbb
cltd
repnz
pop
xor
imul
pop
cmp
sub
cmp
inc
jge
xor
movsl
sub
push
pop
mov
mov
sbb
xchg
ljmp
cmc
loopne
cmp
insb
xchg
jp
test
sub
or
in
pop
and
cli
in
out
mov
xor
add
xchg
sub
xor
sbb
enter
ss
inc
test
mov
mov
mov
lcall
mov
dec
ss
mov
in
mov
mov
push
arpl
and
ljmp
imul
mov
mov
lods
pop
test
and
mov
mov
mov
mov
mov
popf
imull
xor
fldt
mov
rorb
sbb
xor
jb
pop
jecxz
mov
insb
cmc
mov
aaa
sbb
lock
mov
pop
jno
push
fdivs
in
movsl
pop
or
cwtl
mov
insb
ds
fwait
idiv
xor
mov
aad
and
scas
adc
sub
inc
stc
cld
in
std
movsl
sbb
inc
and
fs
adc
ror
lahf
jle
rclb
sbb
stos
pop
mov
jmp
aaa
hlt
dec
iret
inc
xor
or
sub
icebp
mov
jae
and
xor
call
fcomps
movsb
xchg
sub
cmp
ljmp
pop
daa
mov
xchg
xor
ss
xor
lahf
and
add
ds
mov
sub
ret
notl
mov
jl
pop
imul
add
dec
insb
xchg
and
sbb
pop
mov
pop
mov
add
add
inc
scas
stos
bound
adc
xor
mov
cli
gs
inc
mov
outsb
adc
fidivl
adc
loopne
fisubl
enter
push
or
push
add
lea
cmpsl
xchg
xchg
mov
int3
mov
pop
sbb
pop
xlat
sarl
pop
or
push
mov
inc
inc
in
sti
add
mov
jmp
mov
loope
dec
pop
orb
or
cmp
popa
push
mov
sahf
xchg
adc
cmpsl
aas
leave
sub
js
sub
pop
fs
xor
stos
test
cltd
imul
mov
push
fld
dec
xchg
pushf
test
xchg
stos
sahf
or
pop
or
cmp
add
xchg
xchg
inc
jo
stc
mov
xor
xchg
lahf
ficomps
sub
bound
ret
mov
and
icebp
xchg
or
ret
pop
arpl
cwtl
gs
sub
cmp
sti
jae
test
mov
cmpb
insl
adc
fidivl
imul
test
sarl
jns
jae
pop
mov
mov
sahf
into
add
pop
xchg
cmp
stc
sbb
inc
mov
xor
rcl
pop
inc
add
idivb
add
sub
iret
cmp
arpl
jbe
test
push
inc
call
add
iret
inc
xor
mov
scas
adc
gs
jle
test
xchg
rorb
jl
push
mov
test
sub
jno
mov
jle
stos
mov
in
mov
insl
or
pop
paddw
into
mov
add
mov
sbb
sahf
movl
adc
pop
fstpl
in
int
mov
cwtl
sbb
arpl
lcall
inc
pop
ljmp
or
fstpt
cltd
scas
and
in
mov
add
jecxz
scas
stc
dec
mov
dec
pusha
jno
ja
xchg
cltd
xchg
adcb
xor
xlat
add
cmp
cwtl
mov
xchg
mov
pop
push
fcoml
or
shrb
xchg
lea
jno
ds
int
dec
dec
lret
repz
daa
fnsave
cmp
jge
xchg
push
adc
inc
sbb
nop
ljmp
mov
ja
cs
loope
andb
sbb
pop
mov
std
pop
mov
repnz
cmp
jo
add
mov
and
cmpsb
dec
cmc
popa
leave
mov
pusha
inc
es
pop
sbb
sbb
push
shrb
std
ljmp
addl
sbb
cmp
push
push
or
cmp
add
shll
ret
orl
push
and
and
repz
test
add
xchg
and
mov
sub
jo
pop
mov
out
or
out
dec
push
and
jecxz
sarb
xor
adc
pop
xchg
jae
scas
lret
movl
nop
sub
pop
cmpsb
out
insb
ret
arpl
fstpt
push
jmp
loopne
mov
pushf
pop
sub
stos
xorb
int
pushf
mov
xchg
repnz
decb
sbb
out
insl
jge
dec
insl
and
out
dec
xlat
dec
xchg
xchg
repnz
mov
fwait
aam
adc
xchg
stc
pop
xchg
movsb
fiaddl
dec
icebp
pop
test
gs
pop
mov
inc
mov
xor
add
stos
sahf
inc
fisubs
pushf
clc
add
ffree
push
fstpt
mov
cmpsb
int3
les
xchg
cmp
in
xchg
movl
icebp
test
lret
test
mov
aaa
xchg
pusha
sbb
mov
nop
mov
cmp
jb
jae
mov
sti
push
xchg
iret
dec
cmp
sahf
fs
mov
pop
scas
jns
push
je
cmp
xchg
lds
leave
and
ja
push
cmp
int
pop
cmp
loop
lcall
imul
and
test
mov
xor
mov
fistps
out
aaa
pop
mov
cwtl
fs
cmp
xor
push
in
mov
pushf
adc
push
incb
sbb
aaa
icebp
jb
xchg
ss
xchg
fstl
mov
and
fildll
cmp
cmc
rcl
mulb
inc
divb
xchg
in
sub
les
adc
adc
scas
ja
rclb
mov
adc
inc
js
mov
in
fwait
cli
add
mov
sbb
push
and
jp
mov
dec
in
push
or
sbb
jo
sahf
jno
cltd
popa
out
xchg
add
or
sti
xor
and
mov
sbb
xor
sbbl
or
mov
sub
mov
mov
subl
shl
mov
and
mov
mov
shrd
movl
xor
addl
shr
mov
mov
sbb
mov
mov
mov
mov
sub
sub
xor
decl
or
orl
jmp
cli
int
lahf
push
or
inc
cmpsb
ss
pop
fistpll
xchg
adc
addl
rorb
xchg
cmpsl
sbb
add
mov
mov
add
adc
jno
push
fists
les
xor
test
loope
xor
mov
jp
lods
iret
xchg
jg
ret
mov
mov
jmp
jb
ljmp
push
mov
push
push
add
insl
test
fistl
sbb
popa
adc
mov
jge
inc
mov
test
cmp
sti
push
inc
insl
xchg
xchg
cld
into
div
mov
inc
or
mov
int
lock
aam
shr
and
adc
xchg
mov
cltd
movhps
adc
loop
pop
leave
pop
cmp
jp
mov
inc
arpl
fildl
sbb
mov
mov
and
jno
lret
jns
jno
mov
out
dec
cs
mov
sahf
xchg
inc
xchg
outsb
pop
xchg
xor
or
dec
not
cmpsl
js
mov
int3
mov
nop
push
pop
dec
lret
in
add
lock
mov
les
mov
fldt
lods
lahf
ret
push
cld
flds
mov
cltd
push
push
mov
mov
dec
addr16
dec
scas
aad
sub
lea
adcl
icebp
int3
into
pop
cmp
push
add
mov
dec
inc
mov
mov
ljmp
ds
inc
xchg
insb
cmp
and
sub
inc
mov
lret
jle
leave
fcomps
outsb
shl
inc
inc
inc
ds
cmpb
mov
sbb
pop
cwtl
cmp
mov
pop
movsl
out
repz
push
and
mov
jae
movsl
sbb
and
pop
inc
cwtl
cmp
mulb
push
cmpsb
pop
test
xor
or
jnp
jle
pop
jmp
inc
shrl
test
rolb
inc
mov
subl
mov
jo
pop
xchg
lea
and
in
mov
jne
inc
icebp
push
mov
mov
pop
mov
mov
jae
mov
sub
sbb
xor
xchg
jle
sbb
lods
stos
cltd
out
lahf
push
movsb
pop
jge
add
insl
iret
inc
push
sbb
movups
sub
xor
std
add
daa
insb
in
andl
push
pusha
xchg
sbb
sahf
xchg
or
xchg
pop
sub
pop
notb
mov
fdiv
xchg
rcl
sbb
cltd
push
lcall
xchg
ds
jg
lret
lret
pop
xchg
nop
mov
or
rcll
jle
cs
das
xor
jecxz
mov
enter
addb
in
cltd
pushf
jo
inc
ljmp
inc
dec
xchg
aam
lea
pop
sarb
cmpsl
insb
ljmp
out
lret
and
call
stos
stos
rcll
aad
adc
ret
pop
sub
push
hlt
popf
lret
mov
ror
sub
hlt
sub
out
ss
mov
lods
addr16
pop
push
or
push
scas
xor
imul
xchg
jecxz
es
mov
push
sti
cmp
clc
xchg
add
movsb
pop
jo
insl
cltd
xchg
or
fwait
shl
jne
dec
enter
out
jle
jp
mov
aas
jmp
mull
dec
lahf
addr16
or
cld
jnp
int3
sahf
outsl
loop
call
xchg
rcll
lret
test
ret
jp
pop
out
test
enter
scas
gs
xchg
sub
jle
jmp
lods
arpl
mov
or
pop
nop
std
enter
addr16
xor
leave
popa
cmp
rcr
xchg
fmulp
and
imul
mov
ja
mov
mov
rclb
adc
test
fidivrl
test
mov
bswap
jnp
outsb
jl
call
fwait
or
sub
shrb
fs
sahf
cmpsb
mov
mov
cmp
jle
lret
inc
bound
aaa
mov
fidivrs
ret
test
pop
jne
mov
sbb
jp
xchg
or
pop
jmp
gs
lcall
daa
sbb
xchg
inc
js
jmp
mov
frstor
inc
mov
cmovns
movsl
inc
loop
lods
cmp
sub
aad
cmp
mov
xor
jbe
je
mov
xor
xchg
sbb
push
inc
lcall
sbb
loope
mov
fldenv
fsubrp
push
push
je
sub
and
ja
sar
xor
das
insl
fsts
adc
cltd
clc
pop
lret
sbb
lret
cld
jbe
add
imul
mov
jae
or
mov
push
mov
xor
inc
int
cli
cmp
pop
jmp
popf
or
loopne
or
and
iret
sbb
xor
cmp
or
cwtl
loop
sub
pushf
adc
inc
mov
dec
cmp
cmpsl
stos
adc
inc
fnsave
aad
cmpsl
fwait
jg
push
imul
pop
jecxz
test
and
in
sbb
fistl
inc
xor
gs
mov
cmp
add
sbb
cltd
imul
mov
lret
push
fdivl
andl
in
sti
pop
lahf
pop
dec
mov
jb
psubq
std
xchg
les
sbb
jbe
jecxz
adc
lret
cmp
in
dec
push
fisubrl
cmp
cmp
in
jmp
xchg
std
jnp
fidivrs
lret
dec
xlat
xlat
push
aaa
mov
inc
xchg
fisubrs
sbb
inc
in
add
out
aas
or
lea
cmp
out
push
insl
add
push
add
push
mov
stos
mov
ljmp
cmp
pushf
sub
stos
mov
andb
sbb
adc
addl
inc
fwait
mov
fadd
int3
mov
inc
call
cmp
and
cmpsb
loope
dec
mov
mov
pop
adc
jns
push
push
pop
add
mov
fwait
imul
cltd
lret
mov
test
mov
mov
push
in
mov
nop
das
jns
fisubs
and
pushf
das
pop
mov
lea
dec
and
jle
add
psubsb
mov
jecxz
stos
das
stc
data16
fld
xor
pushf
stos
dec
shlb
and
int
mov
stos
or
cmp
push
out
xchg
jne
push
daa
dec
es
inc
ja
sahf
xor
add
mov
notb
dec
pop
lea
or
push
js
loop
mov
mov
pop
rorl
sahf
add
lea
push
or
mov
sbb
fnsave
mov
pop
aas
mov
sahf
and
outsb
dec
and
adc
movaps
adc
or
xchg
dec
out
int
repz
or
add
sub
jno
lods
dec
xor
adc
out
icebp
outsb
sbb
mov
ss
xchg
fiaddl
sub
lcall
xor
rorl
xchg
push
loope
mov
add
mov
xor
or
mov
adc
mov
jmp
movsb
dec
dec
jo
gs
adc
push
int3
xchg
adc
addl
js
cs
cmp
std
lret
scas
lcall
insb
cmpsb
mov
mov
or
jbe
lret
sahf
addb
int3
mov
mov
lahf
out
mov
dec
pop
fld
lret
sub
jg
and
loope
mov
inc
stos
xor
stc
xchg
fmuls
loopne
xchg
imul
and
out
mov
push
fdivrp
xchg
aaa
xchg
fs
cmp
rclb
leave
in
mov
out
imul
adc
mov
outsb
and
or
mov
adc
sub
jl
sbb
jl
gs
fimuls
out
sub
xchg
adc
mov
shl
leave
jae
lea
pop
pop
jns
sbb
inc
out
mov
enter
jo
sbb
pop
xor
adcb
or
add
popf
ljmp
loop
int
adc
push
loop
sahf
jge
shl
and
xchg
in
je
cmp
cmp
scas
jae
sbb
sbb
mov
mov
movsl
mov
xor
adc
adc
add
add
push
movsb
or
and
btc
pop
int
mov
lods
lahf
lcall
rcll
pop
pop
mov
pushf
cltd
inc
les
fildl
sub
pusha
insb
test
cmp
fbstp
lcall
loopne
push
mov
test
sbb
popa
inc
or
in
fcoml
loope
jl
cli
fcom
es
add
mov
xor
mov
int
aas
jnp
xchg
cwtl
out
movsl
bound
add
outsl
inc
push
insb
adc
fstpl
adc
inc
pop
jns
jb
jb
mov
add
push
movsb
les
insl
jnp
outsb
adc
mov
push
push
cmpsl
mov
sbb
les
mov
sahf
testb
adc
sub
sub
lea
or
scas
or
outsl
pop
imul
cltd
stos
xchg
in
inc
out
xchg
pop
jmp
inc
xor
rcrb
decl
iret
pusha
or
into
loope
ret
repz
push
mov
jbe
mov
xchg
and
adc
mov
xchg
popf
or
jg
xorl
add
enter
sti
clc
jmp
adcl
mov
xchg
pop
mov
mov
xor
push
jns
pop
imul
cs
xor
mov
in
xchg
add
dec
push
jnp
cmpsb
nop
jecxz
les
je
pop
adc
cmp
push
in
pop
imul
lds
or
test
int
lods
mull
xor
mov
adc
inc
dec
push
ja
sbb
xor
shrl
cmp
leave
cmp
sub
add
or
mov
int3
dec
pop
add
mov
mov
cmc
pusha
push
inc
xor
stc
cmp
test
push
push
dec
inc
jnp
xor
xor
mov
stos
movsb
pop
int
lock
push
pop
lock
dec
std
repnz
add
push
sbb
or
cld
and
mov
dec
jp
adc
cmpsb
jne
dec
xchg
pop
jmp
push
lea
mov
repz
ja
cmpsb
xchg
out
aad
push
push
sbb
jno
pop
mov
out
mov
fdivs
inc
jmp
xchg
dec
pop
cmp
jg
pop
adc
pop
pop
imul
and
stos
ror
cmp
rolb
sub
pop
out
sti
adc
mov
lahf
add
mulb
push
sbb
fsubr
mov
add
adc
mov
and
sahf
cmp
and
or
rol
pusha
outsl
pop
or
cmpsl
sbb
mov
lds
xchg
sub
cli
pop
repz
jne
inc
mov
std
dec
jp
fwait
inc
sub
mov
push
mov
sub
dec
push
push
lcall
sbb
faddl
pop
xchg
sbb
ficompl
sub
cmp
in
icebp
add
pop
cwtl
shlb
pushf
add
mov
sbb
stos
lea
adc
pop
iret
cmp
dec
lock
scas
mov
aaa
jnp
inc
adc
pop
cmp
xlat
test
mov
pop
leave
ss
mov
inc
ja
cs
dec
xchg
and
test
mov
enter
mov
xor
popa
jle
cmp
fimuls
scas
fisubrs
mov
jg
jne
mov
jbe
push
sub
negl
sbb
int3
les
flds
addl
dec
xchg
jl
shrb
or
out
rcl
mov
xlat
repnz
mov
dec
test
into
pusha
pop
lret
fstl
test
in
xchg
xor
fs
cmp
cmp
outsl
scas
adc
push
fs
add
mov
xchg
xlat
mov
inc
fwait
jns
mov
neg
xor
dec
daa
negb
pusha
movsb
fs
addr16
pop
push
es
and
push
test
clc
iret
pop
and
cmp
fimull
popf
data16
and
dec
dec
cmp
sbb
inc
fs
ret
in
jp
dec
or
in
and
out
xor
cmpsl
in
outsl
out
or
call
nop
outsl
lods
xor
sub
add
fwait
lock
push
cmpsb
outsb
add
jmp
adc
mov
hlt
aaa
and
in
pop
mov
add
imulb
repz
cmovp
mov
in
rol
enter
lahf
shlb
mov
adc
jbe
mov
jle
or
fisttpl
push
scas
aas
xor
jns
lods
lret
mov
sub
dec
fadds
int3
push
jp
cli
cmp
push
icebp
jo
jo
and
dec
xchg
cmp
pop
ljmp
daa
pushf
loope
pop
cld
pop
xchg
and
pop
pop
mov
lock
mov
mov
or
push
inc
jae
add
inc
xor
and
scas
or
add
in
mov
mov
jae
jecxz
das
push
sbb
subb
adc
push
imul
and
jle
fldenv
iret
pop
pop
push
in
mov
sub
add
mov
add
mov
aaa
int
add
jle
out
sub
cmpsl
push
mov
rcrb
pop
call
jb
iret
mov
sbbb
aaa
test
pop
cld
push
push
xchg
mov
sub
pop
imul
dec
jmp
stc
lods
cmp
je
dec
popa
dec
xchg
dec
nop
es
mov
imul
jg
push
les
movsb
cmpsb
nop
ret
int3
add
cmp
mov
push
repz
push
bound
sbbb
cmpsl
dec
or
lahf
mov
and
push
in
movsl
pop
pop
jmp
xor
push
and
push
add
ret
mov
int
in
pusha
adc
mov
cmpl
jl
subl
jmp
pushl
pushl
call
mov
mov
mov
mov
mov
mov
shl
xor
shld
cmpl
jg
dec
jmp
pushl
call
shl
mov
xor
xor
movl
movl
movl
cmp
movl
jne
movl
cmp
je
subl
mov
mov
cmpl
jg
add
jmp
pushl
push
pushl
push
push
push
push
pushl
call
mov
mov
xor
shld
shl
xor
addl
xor
movl
cmp
movl
jne
cmp
je
mov
mov
shl
mov
xor
movl
shr
or
sbb
mov
cmpl
ja
and
jmp
push
push
pushl
call
mov
mov
mov
mov
mov
jmp
bound
clc
xchg
xor
xchg
outsl
inc
adc
addl
int3
xchg
sub
xchg
mov
aas
ja
aad
fisttpl
sbb
out
jle
dec
in
pop
pop
out
mov
or
testl
mov
sbb
ret
cmc
pop
lcall
test
and
xor
mov
test
aam
or
imul
stc
or
ja
sarb
push
fiaddl
rorl
and
into
sub
mov
xor
fisttpl
inc
sub
js
jp
and
or
push
xchg
loopne
cmp
inc
pop
sub
xor
xchg
pushf
iret
xchg
popa
jge
out
jmp
in
push
dec
ret
icebp
push
or
cmp
or
sbb
outsl
xchg
push
sub
jge
mov
xchg
fwait
sbb
adc
sbb
fnsave
dec
out
shll
loope
jmp
cld
shlb
cld
sub
jno
loop
pop
test
jae
sbb
stc
add
aas
icebp
movsl
dec
dec
aaa
xchg
add
enter
std
cld
jecxz
fbld
addb
dec
xchg
jg
pop
ja
cltd
pop
push
std
daa
dec
xlat
push
outsl
pop
leave
jne
dec
adc
gs
lahf
filds
je
bound
mov
mov
push
outsb
js
inc
inc
add
test
dec
mov
xchg
fwait
pop
xor
push
inc
dec
ljmp
or
mov
fstpl
in
icebp
bound
push
add
and
clc
jg
subl
jne
jle
xor
cmp
test
es
xchg
jae
xor
xchg
mov
fldenv
cmpsb
stos
sub
cmp
dec
push
cltd
xchg
stc
hlt
xchg
and
in
inc
adc
aam
aad
or
stos
dec
in
pop
in
sbb
push
fld
inc
dec
or
ret
out
mov
add
into
scas
pushl
loop
jge
mov
add
xchg
ret
pop
mov
push
cli
aaa
push
cld
push
lret
lods
and
mov
or
das
sbb
aas
jns
xor
out
inc
loope
mov
in
repz
mov
lcall
icebp
shlb
ss
inc
aas
jno
not
loop
fildll
inc
fistpll
out
inc
mov
cmc
ja
jae
lahf
jg
ds
lods
inc
xchg
pop
add
mov
push
push
xchg
inc
inc
cmp
jbe,pn
imul
repnz
fadds
fs
loope
shlb
ljmp
pop
popw
push
or
mov
mov
push
xchg
cs
or
mov
popa
inc
mov
iret
popf
sub
cli
cmp
push
mov
mov
rcrb
pop
inc
add
xchg
or
in
xchg
inc
cli
xlat
leave
push
sub
jle
mov
jge
addr16
push
xor
hlt
and
stos
enter
mov
test
xor
dec
cmp
lahf
repz
mulb
imul
mov
sbb
std
out
xor
popa
or
dec
mov
mov
cmp
fcmovnu
and
fdiv
testb
idiv
int
cmp
stc
fidivrs
lahf
cmp
xchg
dec
rcrl
int
cmp
stc
push
pop
ja
sub
out
cmpsl
adcl
ret
jne
mov
mov
rep
int3
les
int
bound
lret
scas
test
in
jmp
pop
mov
incl
ret
in
imul
jle
xchg
and
mov
mov
cmc
iret
insb
or
sbb
movd
mov
fisttps
aas
test
fsubrl
lret
xor
push
aam
fsubrs
pop
hlt
dec
inc
popf
add
sub
add
in
or
mov
push
fmul
cmp
pop
cltd
iret
int3
sti
dec
out
push
pop
mov
push
cld
cmpsl
std
push
scas
loope
push
fisttps
push
xchg
jno
mov
push
cmp
inc
dec
andl
push
cmpsl
ficomps
fisubs
pop
in
cmpsl
inc
std
addb
rcrb
xor
in
outsl
outsl
test
sbb
and
lods
movb
test
ret
mov
movsl
sub
jbe
mov
mov
jne
cli
cld
pop
pop
push
bound
mov
imul
cmpsl
push
sub
xchg
cmpsl
dec
mov
sbb
leave
sub
pop
add
shl
shrl
mov
ficoms
ja
gs
push
push
inc
cmpsb
or
cmc
push
mov
adc
push
jae
adcl
jno
stos
pop
jle
loopne
mov
dec
jae
fst
mov
test
out
stc
test
inc
rorl
add
bound
pop
pop
xchg
xchg
sti
outsb
xchg
xchg
mov
mov
hlt
cli
mov
je
inc
fstl
mov
call
pusha
push
jle
or
arpl
fisttpl
xchg
mov
rcll
sub
pop
and
push
dec
das
cmp
adc
fnstcw
fdivrl
subl
imul
into
sub
jecxz
inc
testl
mov
xor
inc
aad
popa
mov
test
push
add
mov
je
mov
mov
shrb
xor
add
mull
dec
loop
aas
out
cmp
in
mov
add
mov
cld
sub
add
pop
js
or
cmc
frstor
hlt
pop
sbb
cmp
jbe
iret
stos
in
dec
mov
xor
mov
mov
xor
push
rolb
push
or
inc
movsb
xchg
lods
outsl
lret
dec
adcl
mov
addr16
jno
mov
pop
dec
xchg
push
andb
clc
push
out
pop
imull
rcrb
mov
enter
pusha
adc
les
adc
movsb
xchg
xor
adc
call
enter
div
mov
push
cmc
adc
sub
mov
out
jmp
jne
ficomps
test
dec
sti
mov
ret
sti
mov
cld
pop
dec
loope
in
push
push
mov
xchg
sbb
cmp
mov
pusha
dec
push
pop
aam
fstpl
pop
test
fmull
adc
mov
jo
and
inc
push
mov
popf
xor
test
cli
push
in
cmpsl
fdivl
clc
testb
dec
xor
mov
xor
fwait
leave
and
cli
dec
and
lret
iret
xor
pusha
cmp
adc
pop
jl
cs
fwait
or
sub
mov
lock
sbb
sbb
adc
dec
mov
outsl
out
jno
pop
mov
cltd
mov
aas
sub
call
jecxz
ds
xchg
adc
pusha
rorb
inc
rorb
loopne
shrl
negl
pop
xorl
sub
mov
add
mov
lea
mov
xor
mov
mov
mov
adc
jmp
fbld
and
paddsb
xor
jno
pop
dec
sbb
adc
mov
inc
xchg
testb
popf
adc
and
fimull
out
inc
rorl
cmp
int
adc
and
ljmp
pushf
add
aas
xor
mov
xchg
fistpl
mov
sahf
and
mov
pop
outsl
pop
dec
and
or
lods
dec
push
push
dec
push
mov
in
lcall
xor
jle
pop
loope
sbb
gs
cltd
das
mov
shlb
xor
std
and
or
push
sahf
jge
in
mov
xchg
popa
and
xor
add
xor
and
dec
int
pushf
shl
cmp
gs
jbe
arpl
sub
test
loopne
movsl
cmc
xchg
xor
outsl
mov
mov
out
pushf
or
push
mov
ret
jne
jge
push
cltd
movsl
cmpsl
and
mov
loop
aad
pusha
loop
mov
sahf
cmpsb
sbb
add
pop
and
xor
repz
mov
inc
addb
in
mov
adc
jp
je
push
dec
inc
pop
pop
mov
outsb
push
loope
pop
adc
mov
push
lret
jp
xchg
sub
and
fdivrp
push
jl
xchg
loopne
ftst
lret
outsb
lds
dec
ret
mov
in
pop
lret
mov
dec
mov
arpl
or
xchg
sbb
and
clc
jb
pop
js
xor
rcll
mov
mov
lods
cld
ficoms
sbb
add
flds
test
pop
jecxz
cmpsl
aas
lds
gs
dec
mov
push
mov
mov
cld
shll
hlt
and
pushf
fsts
frstor
or
xchg
lahf
aad
jbe
fwait
js
mov
test
in
sbb
add
repz
ja
and
adc
sbb
xchg
mov
repz
ret
repz
jmp
and
sahf
pusha
inc
mov
mov
xchg
sbb
out
loopne
inc
popl
xchg
call
sbb
cmpsb
add
and
xchg
fcoml
fdivr
cmp
mov
inc
jg
pusha
pop
adc
jb
lret
lods
jle
popf
insb
mov
insb
adc
mov
rcrl
mov
inc
cmp
mov
mov
enter
xor
sbb
or
add
mov
int3
xchg
add
stc
mov
mov
cmc
pop
outsl
xchg
int
push
mov
rcrb
jne
enter
mov
sbb
mov
jb
jbe
xchg
jnp
cmp
aad
mov
and
loope
jo
dec
sahf
lods
xchg
add
mov
sub
pop
stc
xlat
pop
push
nop
jb
push
ret
mov
fcomip
cmc
add
aad
dec
aam
add
orb
filds
mov
pop
loopne
mov
outsl
sub
sub
jge
pop
jne
or
in
pushf
daa
push
push
hlt
cmpsl
sti
sbb
mov
std
jl
pop
push
cmp
jg
inc
inc
addr16
dec
mov
je
sub
xchg
mov
fimull
jge
push
or
sahf
pushf
or
ret
mov
jno
mov
popa
nop
orl
inc
ljmp
cmp
imul
jnp
mov
frstor
or
mov
inc
test
and
in
mov
call
int3
add
hlt
inc
std
or
test
adc
into
dec
jmp
fs
cs
xor
sub
mov
mov
fnsave
sbb
in
mov
loope
mov
gs
jne
loopne
cmpb
mov
cmp
insb
cltd
int
test
mov
data16
mov
sub
stos
adc
dec
out
int3
jno
push
adc
std
jne
lret
pop
and
cltd
xchg
bound
pop
enter
je
inc
lock
inc
out
insb
inc
pop
test
lods
xorb
jae
aas
rcr
pop
in
lcall
test
aad
xor
addr16
and
or
push
test
movsl
inc
xchg
or
cmp
mov
xchg
mov
js
cmp
inc
int3
mov
loopne
js
mov
sbb
jnp
aad
loope
adc
xchg
push
cld
cwtl
movsb
in
mov
push
xor
lahf
or
or
pop
pop
and
add
mov
jns
xor
cmpsb
mov
push
std
pop
jno
inc
iret
aaa
and
xor
ja
and
jns
mov
rcrb
mov
stos
mov
sbb
sub
leave
or
xchg
mov
dec
inc
ffreep
fidivrl
xlat
lea
sbb
das
aam
sub
cs
int
outsl
shll
inc
mov
mov
add
enter
xchg
inc
mov
cmp
adc
sub
repz
sub
test
mov
sub
cmpsl
mov
pusha
lahf
adc
fnsaves
xchg
and
fnsave
lret
jmp
call
push
stos
dec
movsl
dec
sub
add
aam
dec
lret
sahf
aaa
gs
jg
xchg
imul
add
aaa
out
dec
xchg
outsl
pop
dec
adc
les
xchg
cli
pop
iret
into
jo
ret
dec
clc
pop
adc
mov
aas
inc
pop
rcr
sbbl
and
movsb
enter
jl
pushf
adc
stos
iret
loope
mov
adc
out
int
dec
paddd
stos
mov
ljmp
mov
icebp
sbb
inc
outsl
iret
pop
sub
mov
fsubs
ret
ret
and
mov
mov
jle
popa
sti
sbb
add
nop
idivl
adc
pop
cmp
pop
ret
sbb
bound
testl
xchg
lods
movsl
mov
and
push
rcr
outsb
stc
mov
popa
lods
jmp
push
push
push
jg
lret
arpl
cmp
and
or
cmpsl
in
pop
testl
ss
sbb
inc
pop
inc
stos
mov
mov
stc
push
out
and
mov
js
lods
lock
mov
lods
pop
or
call
out
imul
cwtl
in
mov
cmpsl
adc
sub
cs
pushf
scas
movsl
rorl
jp
push
xchg
in
add
insb
fcmovnbe
in
push
negb
sub
lds
cmpsl
cmp
mov
pop
push
sbb
and
push
shrl
pop
inc
sbb
data16
or
or
fadds
cs
push
and
pop
inc
and
fldcw
insl
dec
adc
dec
lods
mov
dec
push
cltd
jns
dec
add
stos
lcall
ss
shlb
xor
sub
ds
cmp
movsl
mov
in
imul
and
add
movl
add
call
inc
inc
add
inc
add
loope
adcl
or
movzbl
sbb
mov
mov
mov
and
movl
sub
mov
neg
mov
xor
shr
negl
shl
or
subl
push
lea
sbbl
push
lea
orl
push
call
and
mov
cmpl
jb
jmp
push
push
pushl
pushl
call
mov
xor
shr
shl
or
push
lea
push
mov
sub
mov
shrd
shr
cmpl
jg
xor
add
mov
sub
imul
jmp
push
push
push
call
mov
mov
movl
xor
addl
xor
or
andl
lea
push
shl
movl
call
mov
sbb
mov
sub
xor
shl
adc
shr
or
mov
sub
push
sub
lea
push
orl
mov
inc
mov
incl
shrd
shr
or
mov
mov
sbbl
xor
shl
xor
movl
or
adcl
lea
push
call
and
mov
or
mov
cmpl
jl
mov
and
xorl
jmp
pushl
call
xor
shl
shr
or
addl
jmp
xchg
adc
inc
adc
xchg
popa
aaa
repnz
cmp
adc
addl
in
dec
jge
xchg
xor
xchg
shll
cmpsb
dec
and
rorb
jno
push
and
dec
xchg
jae
hlt
mov
push
and
mov
clc
bound
push
adc
add
push
xor
push
sbb
mov
hlt
movsb
jo
push
lret
push
xor
push
pop
repz
roll
pop
jle
adc
push
js
int
ficoml
xlat
jmp
mov
addr16
fidivl
imul
push
test
aaa
dec
sub
popf
call
or
add
xchg
dec
ds
ljmp
stc
sub
mov
dec
faddl
sbb
jae
push
adc
xchg
lcall
loopne
sbb
sub
outsb
pop
push
xchg
jmp
fs
loopne
outsb
mov
xor
cltd
mov
mov
loope
cmpb
push
cmpsl
pop
outsb
ljmp
cmp
mov
sub
mov
cs
sbb
loopne
je
test
aaa
movsb
scas
rol
mov
and
xchg
jns
js
in
dec
jmp
sub
dec
pop
out
mov
bound
mov
addr16
xchg
icebp
pop
mov
insl
std
dec
mov
jnp
imull
xchg
push
mov
cmc
lods
mov
and
in
jo
sub
cmp
imul
and
push
xchg
jbe
add
call
pop
dec
mov
repz
aad
sbbl
dec
out
pop
mov
negb
scas
adc
faddp
das
jge
and
in
int
gs
cltd
jnp
stos
dec
xchg
je
loope
sarl
and
testl
jnp
dec
fs
lds
pop
jg
shll
mov
mov
or
scas
ret
scas
inc
xchg
dec
xchg
repz
jle
add
mov
xor
fldenv
addr16
adc
ljmp
xchg
xor
nop
sub
test
sub
dec
dec
mov
out
outsb
inc
or
in
mov
mov
aaa
ja
lods
and
xchg
cmp
cmp
inc
sbb
imul
push
rclb
jle
mov
adc
xchg
ret
xchg
rclb
rorb
fcoms
outsl
lret
mov
sub
and
add
or
mov
cwtl
arpl
dec
fs
sahf
inc
inc
pop
stos
dec
push
pop
icebp
push
les
and
cmp
scas
in
loopne
pop
and
out
stc
pusha
shl
aas
and
push
and
push
sti
jge
popa
lea
xor
lahf
lret
ret
add
sub
inc
lahf
sbb
daa
outsl
mov
jbe
imul
mov
cli
push
push
mov
test
push
gs
sub
dec
xchg
jg
mov
pop
cltd
and
mov
vunpckhps
adc
cmp
scas
fnstenv
repnz
in
in
sarl
lea
lea
pop
mov
out
jae
push
mov
lea
pop
fimuls
pop
sub
dec
test
dec
mov
orb
cmp
adc
imul
enter
popa
js
filds
mov
jb
mov
mov
sbb
pop
sub
cmc
mov
jl
and
mov
and
xchg
mov
in
movsb
xor
mov
mov
jp
mov
fisubl
push
hlt
mov
lds
lods
fwait
mov
lock
pop
push
lock
stos
jp
dec
sar
sub
dec
mov
pop
movsb
pop
data16
stos
stos
push
das
and
fsubs
fcoml
adc
fs
and
aam
mov
sub
cmpsb
mov
push
out
js
loop
call
jno
cld
mov
pop
cld
stc
xadd
out
jbe
gs
sub
inc
ja
outsl
mov
gs
mov
dec
xchg
test
int
jecxz
push
aaa
test
sbb
cmp
sti
in
mov
jb
in
inc
xchg
mov
sbb
sub
sub
pop
call
imul
pop
loop
test
out
or
pop
in
out
mov
dec
mov
lahf
jmp
cmpsl
cmp
mov
cmp
imul
jl
mov
in
rorl
dec
fiadds
rol
sub
js
sarl
cs
adc
iret
pop
push
fcmovu
aad
push
js
push
fcmovnu
mov
test
xor
and
mov
mov
jmp
fwait
xor
mov
lods
push
mov
mov
pop
in
insl
add
mov
jge
cli
mov
iret
jle
aas
lock
loop
push
in
push
loop
xlat
popf
pop
sbb
cwtl
insl
cmp
mov
ret
pop
outsb
popf
inc
rolb
push
ss
popa
es
cmp
dec
aas
adc
inc
addr16
push
lret
adc
jns
jle
imul
push
push
push
add
insl
xchg
push
add
ljmp
pop
lahf
push
insl
dec
in
lret
adc
in
dec
and
pop
cli
adc
and
aas
inc
xlat
outsl
mov
out
mov
jno
mov
jne
movsb
pop
cmp
fldenv
jae
inc
cmp
cmpsb
sub
cmp
mov
les
xchg
pusha
call
mov
test
mov
xor
mov
dec
pop
jnp
movsl
ret
push
sbb
sbb
mov
fsubr
mov
sbb
ret
and
jns
sbb
sbb
ja
mov
push
mov
call
sbb
pop
shl
pop
ljmp
add
and
popa
push
imul
adc
in
mov
pop
push
push
fnop
and
lock
dec
mov
ja
mov
nop
int3
test
pop
dec
cltd
add
jle
mov
xchg
or
add
mov
inc
xchg
cmpsb
pusha
add
mov
or
test
mov
shrl
sbb
ss
sub
pop
push
lea
fcompp
cmp
movsl
cmp
popf
adc
inc
add
xacquire
ja
sub
loopne
enter
cld
push
mov
mov
sbbl
in
add
xchg
adc
ljmp
xor
into
adc
nop
jl
xchg
pop
cmp
add
cs
aam
jle
add
adc
stc
pop
jle
xor
inc
pop
cmc
xchg
inc
mov
or
lcall
inc
mov
loopne,pn
adc
jg
mov
incb
andl
and
fidivrs
pusha
push
lea
sbb
push
adcl
mov
sub
mov
shrd
and
shr
mov
mov
adc
xor
xor
subl
or
shl
mov
sub
mov
movl
shrd
shr
adcl
mov
mov
xor
jmp
adc
sahf
dec
push
rcrl
add
dec
scas
adc
jno
mov
mov
pushf
dec
stc
les
pop
arpl
out
jno
add
test
aad
dec
cli
les
mov
pop
sarl
cmp
adc
jle
ficoml
and
cwtl
push
inc
or
add
pop
int3
into
in
xor
lods
jnp
imul
inc
stc
mov
scas
adc
mov
imull
dec
aas
pop
or
cltd
test
or
mov
sbbb
lods
xchg
cltd
and
jns
mov
ret
ja
jge
jg
rcrb
aaa
xor
scas
pop
mov
ja
sahf
out
outsl
mov
lods
mov
inc
jb
clc
mov
dec
out
aaa
xchg
mov
mov
xor
loopne
es
dec
aas
pop
sbb
sub
iret
jae
pop
or
ret
movsl
rorl
mov
xor
mov
lods
bound
inc
pop
cld
push
jl
push
sbb
cld
sbb
rcrl
scas
add
in
mov
mov
add
roll
push
mov
sbb
push
adc
sub
adc
lods
sbbb
es
push
bswap
lahf
je
shrl
xor
pop
lock
add
lods
mov
push
adc
cmp
mov
je
pop
bound
jno
adc
fs
pop
and
sbb
cmp
rclb
sbb
sub
lock
and
in
push
fisttps
mov
inc
imul
jnp
popf
dec
bound
mov
aas
cmp
fs
sub
sub
notb
adc
add
nop
test
xchg
pop
xor
mov
loopne
adc
add
sub
in
sub
mov
xor
aam
mov
and
fisttpl
shlb
jb
jno
hlt
mov
inc
cmpsb
or
jl
mov
nop
jo
jmp
or
dec
push
mov
xchg
mov
xchg
push
inc
pop
sti
sti
add
or
aad
ja
cmpsb
push
sbb
inc
push
sub
push
adc
dec
testl
aad
pop
inc
nop
icebp
lods
jno
loop
jge,pn
cs
push
adc
sub
add
stc
pop
sbbl
rcr
sbb
std
or
mov
mov
xor
push
filds
pop
lcall
add
not
jl
mov
mov
sub
pop
xchg
ret
lret
outsl
dec
jb
sbb
inc
jns
ss
sti
int
leave
cmp
mov
into
sub
jg
aam
div
popf
ret
sbb
jmp
lods
sahf
mov
rcr
push
add
outsl
xor
mov
int
inc
call
sub
pop
or
imul
cmp
jae
daa
dec
in
ja
in
mov
jne
imul
xchg
mov
in
fdivs
xor
lods
sbb
aas
fldcw
test
add
fwait
ljmp
sbb
or
out
sbb
in
fnsave
loope
stc
adc
mov
enter
xchg
xchg
mov
ret
lds
enter
leave
cmp
sbb
mov
gs
pushf
int3
inc
in
test
cli
xor
int
or
jge
pop
push
and
adc
mov
jmp
dec
jle
xchg
lcall
loope
imulb
ror
daa
xor
dec
ret
xor
push
sbb
mull
cmpb
sti
shl
popa
mov
out
mov
dec
push
lock
cli
aam
insl
cmpl
scas
pop
cmp
cmp
stos
and
cld
inc
jae
push
jbe
loop
xor
xor
aas
jmp
fbld
push
aaa
sbb
sahf
sub
shll
or
push
lret
sbb
mov
int
jne
pop
add
mov
xchg
shrl
rcll
loopne
mov
gs
ja
add
mov
scas
mov
inc
bound
outsb
dec
test
mov
fwait
add
mov
scas
fs
es
adc
lods
or
lret
dec
fidivl
jo
lea
in
imul
ficoms
sbb
aas
cmp
mov
push
push
shll
jl
fildl
xor
ret
enter
insb
jmp
adc
lea
cld
fnstsw
jle
cwtl
xchg
xchg
mov
mov
pop
jecxz
pop
pop
lret
inc
and
sub
fdivrl
sbb
xchg
repnz
xor
lahf
inc
jb
mov
pushf
in
and
jp
imul
xchg
mov
sar
fmull
loope
or
divb
rorb
adc
add
or
xchg
pop
jle
sub
cmp
js
push
sbb
mov
loopne
into
xor
pusha
mov
cmpsb
add
xchg
aas
mov
jbe
aaa
cld
cwtl
lods
xchg
jecxz
pop
inc
arpl
sub
std
or
dec
mov
push
jne
sub
pop
aas
aam
insb
repz
push
push
push
cmp
cmpsl
das
in
mov
xchg
mov
stos
movsl
fsubrl
pop
or
push
cltd
popf
lcall
in
aad
repz
icebp
or
sub
jne
popa
fs
sbbb
cld
jnp
mov
notb
ret
les
out
push
jne,pt
adc
out
mov
aam
xor
cmp
or
jge
cmpsb
fisttpl
test
testl
fmul
les
sub
cmpsl
mov
inc
lods
sarl
pop
sub
pop
ja
fs
rol
movsb
cmp
adc
arpl
add
push
inc
mov
xor
cmp
sub
push
mov
mov
jecxz
pop
jbe
in
push
lds
sub
mov
dec
xchg
mov
iret
daa
shr
mov
sbb
add
jmp
push
test
scas
test
inc
push
mov
lds
and
xchg
cmp
lods
imul
test
into
stc
dec
or
xchg
or
cltd
jmp
push
mov
cld
mov
rclb
into
xor
cwtl
es
dec
pop
call
rcrl
bnd
outsl
jb
loopne
jno
push
mov
loope
jb
repz
lahf
mov
mov
sti
addr16
xchg
pop
mov
imul
mov
loopne
into
and
add
mov
mov
repz
icebp
push
jl
inc
jecxz
lods
sarb
xchg
or
sbb
icebp
and
mov
mov
jge
mov
jb
enter
in
xlat
inc
mov
sbb
popf
mov
shl
out
ljmp
fists
imull
ret
add
ja
icebp
inc
frstor
inc
xchg
scas
mov
mov
and
push
mov
adcb
xor
subl
or
add
lea
adcl
push
xorl
shl
call
mov
cmpl
jg
sub
and
jmp
pushl
push
call
mov
shl
xor
shr
or
push
lea
sub
push
cmpl
jg
xorl
jmp
push
pushl
pushl
push
push
push
call
mov
mov
shrd
shr
mov
mov
sub
xor
mov
adc
shl
mov
mov
mov
sbb
xor
or
mov
and
shrd
adcl
shr
adc
mov
mov
orl
xor
xor
andl
or
cmpl
jg
jmp
call
add
mov
shl
mov
shrd
shr
mov
adcl
mov
xor
xor
sbbl
or
notl
add
lea
push
shl
xorl
call
mov
xorl
mov
cmpl
jg
jmp
push
pushl
call
xor
shr
jmp
notl
notb
sub
xor
push
pop
cli
adc
scas
adc
jb
xor
lret
movsl
lods
jo
inc
mov
leave
dec
mov
imul
jecxz
popf
imul
aas
test
sahf
xor
lahf
push
arpl
dec
jp
aas
loopne
test
ja
mov
insl
fcmovb
stc
cmp
repnz
outsb
lods
pop
movsl
and
sub
pop
xchg
lcall
lret
mov
jle
loop
das
dec
sbb
inc
adc
mov
push
ret
mov
rcrl
pop
test
loope
mov
jmp
push
je
and
add
mov
cmp
subl
and
sub
inc
pop
xor
inc
outsl
mov
jae
push
popa
adc
roll
in
imul
das
out
repnz
mov
xchg
and
imul
xchg
adcb
shlb
movl
pop
pop
or
jg
test
cmp
outsb
fwait
test
loope
add
xchg
jb,pt
aas
loope
adcb
insb
rorb
aad
sbb
lret
roll
je
mov
add
pop
insb
shll
in
push
jge
or
sahf
btr
ljmp
std
xchg
out
dec
outsl
inc
push
push
mov
outsl
dec
scas
je
sub
xor
adc
inc
rcll
jns
gs
shlb
mov
shll
jno
addl
mov
cmp
int
xorps
sbbl
rolb
es
jb
out
push
mov
push
jg
loope
or
mov
lea
push
cmpl
ja
and
jmp
push
push
push
pushl
call
mov
mov
shrd
shr
mov
mov
addl
xor
neg
xor
or
push
sbb
mov
movzbl
and
mov
mov
push
orl
pushl
subl
shl
call
lea
xor
add
add
push
add
mov
mov
cmpl
jbe
adc
or
jmp
push
push
push
call
shrd
shr
mov
mov
xor
xor
or
addl
push
adc
mov
push
adcl
pushl
subl
shl
call
cmpl
jge
sbb
jmp
pushl
pushl
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
mov
sbbl
mov
rol
mov
adcl
xor
movl
mov
movl
cmp
movl
je
or
movl
mov
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
shld
shl
xor
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
push
mov
sub
not
mov
cmpl
jb
jmp
push
call
mov
mov
sub
push
mov
mov
sbb
mov
adc
orl
orl
add
mov
mov
add
mov
cmpl
ja
sbb
inc
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
sub
mov
sbb
mov
cmpl
ja
or
jmp
push
push
push
call
orl
orl
lea
mov
mov
mov
not
mov
sbbl
add
neg
mov
mov
adcl
mov
mov
neg
shrd
cmpl
ja
or
jmp
push
push
push
pushl
push
call
shr
mov
mov
xor
xor
or
cmpl
jb
jmp
pushl
push
push
pushl
pushl
call
mov
movl
movl
movl
movl
movl
movl
xor
movl
movl
mov
add
movl
movl
cmpl
jge
adcl
adcl
jmp
pushl
push
push
call
movl
movl
movl
movl
movl
dec
movl
sbbl
movl
movl
movl
cmpl
ja
xor
add
sub
mov
jmp
push
push
push
call
movl
movl
movl
mov
shl
mov
andl
push
addl
push
push
push
andl
call
xorl
mov
xorl
mov
mov
mov
add
xor
add
mov
mov
sub
sub
mov
sbb
lea
and
mov
cmpl
jg
jmp
pushl
pushl
push
call
mov
or
and
mov
or
xor
cmp
movl
jne
not
mov
mov
shrd
cmpl
jbe
adc
jmp
push
pushl
push
pushl
pushl
call
shr
mov
mov
shl
xor
xor
subl
or
mov
mov
cmp
movl
jne
mov
add
mov
neg
xor
xor
or
sbb
mov
cmpl
jbe
jmp
pushl
call
mov
mov
shrd
mov
mov
xor
shr
cmpl
jbe
xor
jmp
push
push
call
mov
xor
or
shl
sub
mov
andl
mov
mov
add
adc
mov
and
mov
adc
mov
shrd
negl
shr
sub
mov
mov
cmpl
jg
add
jmp
pushl
pushl
pushl
pushl
pushl
call
xor
shl
xor
or
mov
mov
subl
shrd
shr
neg
mov
cmpl
jbe
adcl
jmp
pushl
pushl
pushl
call
mov
mov
xor
xor
or
shl
incl
lea
mov
cmpl
jl
dec
jmp
pushl
call
mov
shrd
shr
mov
mov
mov
adc
xor
cmpl
jbe
and
jmp
call
mov
xor
or
shl
imul
mov
dec
mov
sbbl
shrd
mov
or
mov
xorl
xor
orl
shr
mov
mov
addl
xor
subl
or
shl
sub
mov
movl
cmp
mov
mov
jg
sbb
mov
cmpl
jb
jmp
pushl
push
call
mov
shrd
mov
mov
xor
shl
xor
or
shr
subl
mov
sub
mov
mov
adcl
mov
subl
shrd
adcl
shr
add
mov
cmpl
jg
sbb
jmp
pushl
push
call
mov
mov
xor
xor
or
shl
orl
imul
addl
sub
jmp
mov
or
mov
mov
cmpl
jl
or
jmp
push
pushl
call
mov
shrd
mov
mov
xor
shl
addl
xor
adcl
or
andl
shr
cmpl
jg
jmp
pushl
push
push
push
call
mov
mov
mov
mov
shrd
shr
mov
cmpl
jg
mov
adc
or
jmp
push
pushl
pushl
pushl
pushl
push
call
mov
mov
xor
xor
or
shl
mov
mov
adc
add
add
xor
xor
adc
mov
mov
xor
add
adc
shrd
or
shr
movzbl
adc
mov
mov
xor
sbbl
shl
xor
movzbl
adc
or
neg
mov
add
movl
mov
mov
sub
imul
mov
cmpl
ja
or
jmp
push
pushl
pushl
pushl
call
mov
movl
mov
movl
mov
movl
adc
mov
xor
mov
cmpl
jbe
jmp
push
push
push
pushl
call
mov
shrd
shr
mov
mov
xor
shl
adcl
xor
or
movzwl
sbb
mov
lea
cmpl
jbe
and
jmp
pushl
push
pushl
pushl
call
mov
mov
mov
shrd
shr
mov
adcl
mov
subl
shl
adc
mov
xor
xor
sbbl
or
sbb
mov
or
mov
xor
cmpl
jl
jmp
push
push
push
call
mov
mov
shrd
shr
mov
mov
xor
shl
xor
adc
or
adcl
lea
mov
or
mov
cmpl
ja
add
jmp
pushl
pushl
push
call
mov
mov
shrd
shr
mov
mov
subl
shl
and
mov
xor
adcl
xor
xorl
or
cmpl
jle
inc
decl
jmp
push
call
mov
mov
or
mov
mov
shrd
notl
shr
mov
sub
mov
xor
addl
shl
addl
xor
sbb
or
lea
mov
mov
addl
mov
shrd
shr
xor
add
mov
sub
xor
mov
mov
addl
xor
shl
adc
mov
xor
addl
or
mov
sbb
mov
or
add
cmpl
jle
sub
negl
jmp
push
push
call
mov
mov
shrd
shr
mov
cmpl
jge
neg
jmp
pushl
push
push
call
mov
xor
xor
or
lea
mov
cmpl
jge
jmp
push
push
push
pushl
push
push
push
pushl
push
pushl
push
push
push
pushl
call
mov
shl
mov
shrd
shr
mov
mov
addl
xor
orl
xor
subl
or
xor
mov
shl
incl
mov
adcl
mov
orl
mov
addl
or
xor
mov
mov
andl
shrd
shl
sbbl
shr
mov
mov
or
xor
mov
xor
orl
or
mov
dec
orl
not
xorl
and
xor
or
xor
mov
xor
and
mov
cmpl
ja
sub
jmp
push
push
push
call
mov
xor
or
mov
mov
shrd
shr
mov
sbb
mov
mov
adc
mov
mov
xor
xor
xor
adc
mov
addl
xor
andl
shl
subl
mov
addl
or
mov
mov
cmp
je
xorl
mov
xor
add
mov
sub
and
sub
cmpl
ja
add
jmp
pushl
push
pushl
push
push
push
call
mov
mov
mov
shl
xor
mov
mov
mov
subl
xor
adcl
xor
sbbl
shrd
shr
xorl
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
or
mov
mov
shl
shl
mov
mov
xor
xor
mov
mov
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
or
add
adc
push
push
push
push
call
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
imul
mov
mov
xor
mov
mov
xor
mov
mov
and
xor
mov
sub
mov
sub
mov
imul
sub
mov
movl
movl
mov
mov
or
mov
imul
mov
movl
movl
movl
mov
mov
or
xor
div
mov
mov
sub
mov
xor
div
mov
xor
pop
mov
movl
movl
movl
mov
mov
sub
mov
div
mov
or
mov
sub
mov
mov
movl
movl
mov
mov
xor
lea
xor
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
xor
mov
xor
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
xor
sub
mov
sub
add
mov
mov
and
xor
div
mov
mov
imul
sub
add
cmp
ja
push
movl
movl
movl
mov
mov
add
xor
div
mov
mov
imul
imul
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
imul
lea
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
mov
sub
mov
sub
add
mov
mov
and
xor
div
mov
imul
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
push
xor
xor
mov
sub
xor
push
push
movl
movl
mov
and
movl
movl
mov
mov
and
sbbl
mov
xor
inc
and
and
add
cmpl
jle
xor
sub
jmp
pushl
call
xor
mov
movl
movl
mov
cmpl
jb
xor
jmp
pushl
call
xor
sub
mov
imul
xor
mov
movzbl
sub
mov
div
mov
xor
or
sub
xor
sub
mov
cmpl
jl
sbb
jmp
push
pushl
pushl
call
movl
movl
movl
movl
movl
movl
sbbl
mov
xor
or
adc
mov
sub
imul
xor
add
mov
sub
or
add
or
and
cmpl
jge
xor
xor
mov
and
and
jmp
push
call
sub
mov
sub
add
mov
mov
orl
sub
or
add
cmpl
jg
mov
sbb
mov
adc
jmp
pushl
call
mov
xor
div
xor
mov
xorl
sub
mov
andl
add
sbbl
mov
movl
movl
not
movl
or
mov
sbb
xor
and
add
add
mov
xorl
xor
subl
div
and
mov
or
sub
cmpl
jl
jmp
push
push
push
push
call
mov
movl
movl
movl
movl
mov
mov
orl
xor
cmpl
ja
jmp
pushl
pushl
push
pushl
push
pushl
call
xor
push
pop
div
mov
xor
div
mov
or
cmpl
jle
or
jmp
pushl
push
push
push
push
call
sub
mov
movl
mov
mov
xor
sbbl
div
cmpl
jg
jmp
push
push
call
imul
xor
xor
imul
xor
mov
movl
movl
movl
mov
and
mov
orl
xor
adcl
div
mov
imul
add
xor
and
mov
sbbl
sub
mov
sbbl
movl
mov
mov
sbb
and
xor
and
sub
or
cmpl
ja
jmp
push
pushl
call
xor
mov
movl
movl
movl
mov
and
or
add
xor
add
or
andl
or
dec
sub
cmpl
jg
inc
mov
sub
jmp
pushl
call
mov
movl
movl
movl
and
mov
shr
sub
cmpl
ja
mov
and
jmp
push
push
call
xor
mov
lea
push
call
mov
or
or
mov
add
or
add
and
lea
adc
mov
and
movl
movl
movzwl
adc
movl
sub
movl
mov
sbb
mov
movl
subl
movl
movl
mov
mov
sub
imul
movl
mov
orl
mov
and
sub
mov
lea
adc
mov
mov
cmpl
jbe
sub
adc
jmp
push
push
pushl
pushl
call
mov
mov
imul
and
imul
or
mov
lea
mov
movzbl
xor
movl
movl
movl
and
movl
or
mov
mov
mov
sub
or
mov
mov
andl
xor
xorl
xor
adcl
mov
subl
call
xor
or
or
mov
mov
mov
mov
cmpl
jle
xorl
jmp
pushl
pushl
push
call
mov
xor
xor
mov
call
or
cmpl
jle
jmp
push
push
pushl
call
or
mov
mov
xor
xor
mov
call
or
mov
cmpl
jb
jmp
push
call
mov
mov
mov
xor
xor
mov
mov
addl
mov
mov
mov
andl
call
mov
adcl
or
mov
or
subl
push
adcl
push
andl
push
addl
push
addl
call
mov
mov
cmp
movl
jne
mov
mov
xor
xor
mov
call
xor
mov
mov
sub
mov
adc
mov
addl
xor
xor
andl
mov
call
or
movl
or
add
mov
adc
mov
xorl
xor
xor
mov
adcl
call
sub
mov
mov
xor
mov
mov
mov
sbb
mov
mov
xor
subl
xor
mov
mov
xorl
mov
decl
call
adcl
or
movl
mov
andl
or
push
subl
push
push
addl
push
xorl
call
mov
movl
jmp
jmp
cmpl
jg
add
jmp
push
call
lea
mov
mov
movl
mov
xor
cmpl
ja
jmp
push
call
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
movl
xor
xor
mov
sbbl
call
neg
mov
mov
adcl
mov
xorl
mov
andl
xor
adcl
xor
mov
movl
call
or
and
or
cmpl
jge
orl
movzbl
xor
jmp
push
push
push
call
mov
mov
xor
xor
movl
mov
subl
call
sbb
mov
sub
mov
xorl
mov
mov
subl
xor
subl
xor
mov
mov
mov
mov
incl
mov
call
sbb
mov
addl
or
sub
mov
or
push
subl
push
addl
push
push
sbbl
call
mov
cmp
movl
je
cmpl
jbe
jmp
push
push
call
mov
mov
xor
xor
mov
call
mov
mov
cmpl
ja
jmp
push
pushl
push
call
mov
mov
xor
xor
mov
call
or
or
sbbl
mov
imul
cmpl
jle
not
decl
jmp
push
pushl
push
pushl
push
pushl
call
add
mov
mov
mov
jmp
movl
jmp
cmpl
jb
xorl
jmp
push
call
mov
mov
xor
xor
mov
call
mov
xor
mov
mov
mov
xorl
xor
addl
xor
adcl
mov
call
subl
or
or
adc
mov
mov
xor
adcl
xor
mov
call
adc
mov
cmpl
jb
jmp
pushl
call
mov
mov
mov
xor
xor
mov
mov
mov
orl
call
or
or
mov
or
push
push
negl
push
push
subl
call
movl
mov
jmp
movzbl
adc
mov
mov
and
mov
xor
andl
xor
movl
mov
addl
call
add
mov
mov
mov
mov
sub
mov
cmpl
ja
movl
jmp
pushl
push
call
mov
xor
xor
mov
call
or
or
mov
movl
jmp
mov
cmpl
jl
jmp
pushl
push
push
call
mov
xor
xor
mov
call
mov
mov
sub
mov
xor
or
or
mov
xor
xor
subl
mov
call
xor
or
xorl
or
xor
mov
mov
add
mov
xorl
xor
sbb
mov
sub
sub
sbb
mov
xor
xor
or
xor
movzwl
and
add
cmpl
jge
jmp
push
call
mov
movl
movl
movl
movl
movl
movl
and
movl
xor
movl
cmpl
jl
mov
mov
and
adc
jmp
pushl
pushl
pushl
push
pushl
pushl
push
push
call
mov
add
mov
sub
cmpl
jbe
jmp
push
push
push
push
call
xor
push
pop
div
mov
xor
add
mov
xor
mov
xor
div
dec
or
sbb
mov
cmpl
jg
orl
jmp
pushl
pushl
call
xor
mov
sub
mov
mov
sub
cmpl
jle
xor
jmp
push
push
pushl
call
mov
xor
mov
div
mov
xor
sbbl
div
orl
mov
sub
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
mov
or
mov
xor
div
mov
xor
div
mov
lea
mov
mov
sub
mov
xor
mov
div
mov
imul
add
xor
mov
add
mov
and
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
imul
imul
mov
imul
mov
sub
add
mov
and
mov
sub
imul
mov
mov
or
sub
xor
mov
div
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
push
mov
sub
push
movl
movl
movl
mov
mov
add
xor
mov
lea
mov
add
mov
movl
movl
mov
mov
add
xor
div
mov
xor
push
sub
imul
xor
lea
mov
movl
movl
movl
mov
mov
shr
sub
mov
imul
div
xor
or
xor
mov
movl
movl
movl
mov
mov
or
sub
or
mov
lea
mov
movl
movl
mov
mov
add
imul
xor
and
mov
movl
movl
mov
mov
and
sub
add
mov
movl
movl
mov
add
pop
div
mov
sub
add
imul
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
add
mov
adc
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
sub
mov
imul
mov
sub
imul
xor
add
xor
push
mov
add
imul
mov
div
mov
lea
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
sub
and
xor
mov
mov
lea
push
mov
push
pop
xor
div
mov
sub
add
and
lea
call
mov
mov
imul
mov
sub
add
mov
xor
sub
cmp
jne
mov
mov
sub
mov
sub
add
xor
xor
lea
mov
push
mov
and
xor
imul
mov
div
push
mov
add
push
mov
mov
imul
and
mov
imul
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
and
sub
push
push
push
mov
pushl
pushl
call
test
je
movl
movl
movl
push
movl
adc
mov
andl
mov
andl
push
addl
push
push
adcl
call
push
subl
push
xorl
and
sbbl
and
push
push
orl
call
xor
xor
and
mov
cmpl
jbe
and
jmp
call
mov
xor
or
mov
xor
or
notl
mov
xorl
movl
movzbl
and
mov
movl
add
movl
movl
sub
movl
adc
movl
cmpl
jb
adcl
jmp
pushl
push
push
push
call
mov
mov
mov
mov
or
mov
or
mov
mov
sbb
mov
adcl
sub
mov
movl
sbb
mov
xor
xor
subl
and
sbbl
and
cmp
movl
jne
movl
cmp
movl
jne
sub
movl
sbbl
movl
adc
movl
cmpl
jl
sbbl
xor
jmp
push
push
pushl
pushl
push
pushl
call
movl
movl
mov
mov
sub
adc
mov
subl
imul
adcl
and
negl
imul
mov
addl
pushl
imul
incl
xor
mov
adc
mov
sbbl
div
xor
mov
adcl
xor
sbb
mov
sub
or
xor
sbbl
pushl
addl
pushl
call
andl
pushl
call
andl
movl
movzbl
sub
movl
cmpl
jge
negl
jmp
pushl
push
push
push
call
movl
movl
movl
movl
mov
mov
sub
mov
mov
add
mov
adc
cmpl
jge
and
jmp
pushl
push
pushl
push
pushl
push
call
mov
add
adc
and
mov
and
orl
mov
movl
decl
movl
addl
movl
xorl
movl
subl
dec
cmp
jne
movzwl
or
movl
mov
xorl
mov
movl
addl
mov
call
xor
lea
mov
mov
sub
sub
mov
lea
adc
mov
mov
cmpl
jbe
jmp
pushl
push
push
call
mov
mov
mov
xor
shl
shr
or
xor
mov
add
mov
or
mov
and
mov
xor
or
xor
or
sub
sub
mov
cmpl
ja
andl
jmp
push
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
subl
xor
sbbl
xor
xorl
or
cmpl
ja
subl
jmp
push
push
pushl
push
pushl
pushl
call
mov
push
pushl
lea
push
shl
call
adcl
lea
subl
push
mov
mov
andl
lea
andl
push
adcl
mov
subl
lea
notl
mov
mov
orl
mov
push
xorl
call
xorl
push
addl
push
pushl
addl
call
mov
cmpl
ja
mov
xor
jmp
push
pushl
push
push
push
push
call
mov
mov
mov
shr
shl
or
mov
mov
sub
sub
mov
xor
xor
mov
or
xor
mov
lea
mov
cmpl
jle
adc
jmp
pushl
push
push
call
lea
mov
mov
sub
lea
xor
sbb
movl
movl
mov
sub
movl
movl
orl
mov
adcl
mov
sub
add
mov
mov
movl
adc
xor
cmpl
jb
and
jmp
push
push
push
call
xor
and
mov
and
mov
movl
movl
movl
movl
sbb
movl
add
movl
andl
mov
sub
mov
adc
mov
cmpl
jl
and
jmp
push
call
mov
push
push
or
or
push
addl
push
xorl
call
mov
negl
mov
sub
mov
movl
sbb
mov
mov
cmp
jne
cmp
je
and
movl
movl
movl
xor
add
mov
sub
xor
movl
mov
mov
sub
xor
mov
mov
mov
cmpl
jb
jmp
pushl
pushl
pushl
push
pushl
call
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
and
movl
sub
movl
cmpl
jl
add
jmp
pushl
call
movl
movl
movl
mov
mov
push
push
xor
adcl
xor
push
push
call
addl
mov
andl
mov
push
push
push
sbbl
push
call
cmpl
jl
subl
jmp
call
mov
mov
push
push
push
push
andl
call
mov
sbb
mov
mov
mov
andl
add
movl
mov
adc
mov
cmp
movl
jne
movl
cmp
movl
je
xor
mov
xor
mov
addl
xor
adcl
shld
mov
and
shl
mov
mov
sbb
mov
sbbl
xor
subl
xor
mov
movl
cmp
movl
jne
movl
cmp
je
mov
mov
cmp
je
cmpl
jl
sub
jmp
pushl
call
mov
mov
mov
shl
xor
mov
mov
cmpl
jle
and
jmp
pushl
push
push
call
mov
xor
xor
shrd
xor
shr
or
or
mov
movl
mov
movl
cltd
movl
cmp
movl
jne
cmp
movl
jne
movzwl
add
movl
cmpl
jge
mov
add
jmp
push
push
call
movl
mov
mov
mov
xor
orl
shld
adcl
shl
movl
mov
mov
xor
sbbl
xor
mov
cmp
jne
movl
cmp
movl
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
xor
inc
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
movl
cmp
movl
jae
movl
cmp
jae
shld
movl
shl
ret
mov
addl
xor
and
shl
ret
xor
xor
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
and
and
or
mov
sub
mov
mov
sub
add
add
mov
xor
cmp
jne
mov
mov
xor
div
push
push
push
xor
mov
mov
mov
mov
mov
imul
mov
div
mov
sub
xor
shl
imul
sub
xor
mov
mov
add
mov
add
mov
mov
mov
xor
and
mov
imul
mov
sub
or
mov
pop
xor
pop
pop
cmp
je
mov
jmp
mov
mov
sub
or
imul
add
jmp
movl
movl
movl
mov
mov
add
imul
mov
or
xor
mov
div
xor
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
sub
and
sub
push
movl
movl
movl
movl
mov
mov
imul
mov
imul
xor
div
mov
mov
push
shr
and
xor
mov
sub
mov
mov
mov
and
imul
mov
imul
add
mov
sub
mov
mov
add
xor
pop
div
mov
push
and
sub
xor
add
mov
mov
and
imul
mov
imul
or
xor
pop
sub
mov
mov
or
mov
or
mov
add
or
mov
or
lea
cmp
jbe
pop
leave
ret
negl
subl
movl
cmpl
movl
je
cmpl
jbe
xor
jmp
push
pushl
pushl
pushl
push
push
push
pushl
push
push
push
push
pushl
push
call
add
mov
mov
pop
pop
pop
leave
ret
mov
mov
ret
orl
mov
mov
notl
or
mov
movl
jne
mov
sbbl
mul
ret
xorl
push
mul
and
mov
add
mov
mull
add
mov
mul
add
pop
ret
incl
push
mov
sbb
push
mov
andl
or
movl
jne
mov
mov
sub
imul
mov
mov
xor
div
andl
mov
and
mov
movl
div
not
mov
jmp
and
mov
andl
mov
movzbl
xor
mov
cmpl
jge
jmp
pushl
pushl
call
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
