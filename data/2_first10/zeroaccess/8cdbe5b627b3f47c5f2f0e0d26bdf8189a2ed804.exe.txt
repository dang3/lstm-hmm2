push
mov
sub
sbb
mov
mov
mov
add
mov
decl
mov
sbbl
push
push
sub
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
xor
push
mov
mov
sub
imul
mov
adcl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
or
jmp
test
push
movsb
jb
jl
pop
or
popf
loope
jle
jle
jg
jle
xlat
cmp
pop
add
push
mov
rdpmc
bswap
and
sbb
inc
fs
out
mov
es
test
call
add
dec
stos
push
sub
sarb
mov
stos
push
rcl
test
pushf
mov
dec
out
dec
call
mov
and
jnp
ret
xchg
sub
loopne
cld
ljmp
sub
add
sbb
outsl
insl
add
cmp
jno
ds
or
adc
jge
inc
dec
aaa
adc
ja
sbb
ds
hlt
leave
mov
xchg
pop
enter
fbld
inc
mov
adc
add
daa
loop
mov
pop
lcall
enter
loopne
scas
mov
pop
jmp
cmp
sahf
int
cmpsl
mov
xchg
cmpsb
int3
sbb
cmp
adcb
out
mov
xor
popf
dec
dec
pop
sbb
out
fdiv
adc
jge
aas
mov
jbe
lds
cmc
in
jp
call
push
mov
out
push
inc
aad
xor
mov
outsb
pushf
ljmpw
pushf
mov
rclb
pop
pcmpgtd
cld
lock
sub
xchg
jp
mov
subb
mov
cwtl
jg
shl
adc
inc
xchg
lret
scas
mov
cmp
loop
push
cmpsb
add
push
sti
cwtl
les
mov
xchg
mov
repnz
jo
scas
sbb
jle
mov
or
mov
adc
lea
xorl
mov
adc
mov
orl
mov
xor
xor
neg
add
mov
movl
lea
sbb
mov
mov
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
xor
add
mov
decl
mov
mov
mov
sbbl
mov
adcl
mov
xorl
movzwl
add
mov
jmp
fisubl
addb
lods
gs
aam
dec
xchg
jg
jle
jg
jle
lret
fs
xorb
mov
jp
adc
cs
scas
fs
mov
add
pop
cmpsb
sbb
sti
fsts
sbb
sti
xchg
add
movaps
sti
xor
push
cltd
shll
dec
sub
jae
sub
or
inc
pop
mov
sbb
pop
test
dec
mov
out
lret
and
mov
pop
jmp
or
call
aas
js
dec
pop
cmc
iret
fwait
jge
jmp
popf
sbb
sahf
jae
jno
subb
sbb
fnsave
pop
sbb
and
hlt
leave
cmpsb
dec
lret
add
add
test
mov
scas
mov
icebp
cmp
cwtl
out
lods
xchg
push
inc
mov
xchg
adc
mov
xchg
loopne
sbb
sub
xlat
lret
fwait
lea
cltd
in
mov
lcall
and
enter
lcall
cmpsb
mov
xchg
loope
xor
insb
mov
stos
add
mov
fs
aaa
adc
out
rorl
outsb
push
je
jp
mov
mov
pop
lock
clc
mov
xlat
cmpsl
sub
lds
xchg
or
xchg
jl
mul
fwait
add
jecxz
mov
popa
fidivl
jl
push
jnp
push
mov
or
pop
xchg
mov
mov
inc
ffreep
adc
mov
les
jb,pn
adc
sbb
dec
jg
nop
jecxz
aas
sub
mov
and
mov
xor
addl
add
movl
cmp
movl
jne
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
or
mov
sub
and
mov
mov
addl
xor
orl
add
movl
cmp
jmp
cmp
sub
mov
scas
imul
in
jns
jle
jg
jle
inc
mov
mov
lahf
scas
subl
adc
insb
ret
cmc
cmp
jbe
ret
mov
jns
and
fisubrl
call
movsb
sub
mov
icebp
sub
cmp
loope
out
out
fbstp
repz
fisttps
inc
jmp
in
dec
adc
mov
sub
adc
insl
sbb
mov
sbb
sub
out
jnp
mov
push
in
sbb
test
enter
xlat
inc
cmpsb
loope
lahf
ss
mov
xchg
sti
push
xor
xor
cld
test
adc
cmpsl
sub
rcr
lods
dec
cmp
pop
idivb
loopne
aaa
das
test
in
sbb
rcr
enter
pop
push
imul
adcb
push
cwtl
inc
repnz
and
xchg
in
xchg
inc
je
push
fdivrs
push
aaa
push
jp
mov
mov
inc
mov
cltd
ja
mov
fsts
mov
lds
fcmovnb
mov
sbb
idivl
out
fisubrl
arpl
das
ja
outsl
shll
out
lcall
sbb
ljmp
mov
popa
fsubrs
push
pop
sbb
fmuls
shr
out
pop
aad
data16
jg
in
push
in
sub
dec
cmpsb
iret
in
xor
xor
jmp
xor
orb
adc
mov
testl
movsb
bound
adc
push
pushf
jl
and
add
mov
or
jmp
or
popa
sbb
fsubl
mov
jle
mov
popf
cmp
das
mov
add
push
ds
pop
sbb
push
negb
lods
aam
int3
inc
inc
fisubrs
dec
ret
addr16
xor
andb
xchg
push
int
inc
dec
jp
jae
or
int
push
pusha
sbbl
outsb
inc
outsl
cmp
hlt
stc
push
scas
xchg
cmp
int3
enter
aaa
push
test
lea
lock
daa
push
push
or
mov
xor
cmpsb
rcrb
lea
sbb
repz
mov
mov
xchg
and
mov
xor
mov
fistps
mov
dec
rorl
movsb
jo
jmp
iret
ss
cmp
in
js
xchg
out
rcll
push
mov
push
push
pop
cmp
xchg
and
fmuls
fstl
mov
push
icebp
add
inc
jecxz
inc
adc
jbe
popl
or
mov
jecxz
not
fs
inc
pop
inc
or
mov
lods
xchg
add
inc
push
inc
xor
mov
insl
fnstenv
es
aam
sbb
ret
mov
addb
and
fimuls
pop
pop
mov
out
insl
mov
js
dec
faddl
in
mulb
je
jp
pop
mov
call
mov
push
or
push
cmp
outsl
fwait
pushf
and
add
outsl
aad
xor
sbb
dec
mov
mov
sub
shr
out
imul
jle
cmp
in
or
stc
xchg
mov
xchg
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
xor
add
mov
mov
mov
xor
mov
sub
add
jmp
icebp
jmp
imul
addb
add
jle
jg
jle
repz
shrb
push
inc
xor
in
in
icebp
addr16
xor
or
or
sub
or
lods
adc
in
add
mov
out
in
pop
cltd
mov
cmp
ds
cmpl
sub
or
lds
jo
jno
out
jne
lret
fcmovb
stos
int3
pop
add
xchg
push
lods
aas
imul
cs
lea
pusha
fnstsw
and
cmpsl
hlt
mov
push
ret
lret
sub
test
pop
or
jmp
sub
push
rcrb
addr16
cmc
sub
lods
data16
inc
loope
fwait
into
int
mov
scas
mov
into
insl
iret
dec
lret
std
iret
mov
xchg
je
outsb
pop
in
loope
jb
cmc
push
cld
into
loope
sar
cmc
jl
lock
dec
lahf
lea
fiaddl
insl
mov
adc
fwait
int
dec
shr
aas
sbb
lahf
pop
add
mov
pop
sti
xor
mov
filds
jne
daa
inc
sbb
xchg
mov
loop
inc
mov
xor
loope
sbb
sub
js
push
mov
pop
fbstp
cmp
mov
mov
aas
cwtl
scas
lds
cld
add
leave
xlat
mov
mov
xchg
pop
and
dec
js
jg
inc
cmp
mov
pop
push
xor
aaa
outsw
notw
push
or
lcall
sub
or
push
in
fs
mov
xorl
adc
in
je
push
sub
mov
mov
movzwl
add
jmp
push
mov
test
push
clc
inc
cmp
jg
jle
xor
popf
rcrl
aam
js
mov
pushf
movsb
or
mov
dec
lahf
xor
hlt
push
jo
imul
cli
movsl
popa
mov
frstor
jno
lds
loope
popa
dec
mov
cmp
lret
and
inc
cmp
xchg
or
es
out
or
test
and
inc
insb
or
es
jle
ret
mov
loop
sahf
sub
js
into
es
jge
push
movsl
fnsave
cli
js
mov
mov
outsl
dec
jmp
dec
dec
xchg
pop
jno
sub
fisttps
mov
pop
pushf
aad
jbe
call
jnp
mov
mov
jne
icebp
outsb
or
and
add
cli
mov
inc
dec
rclb
inc
mov
dec
sbb
popa
loop
mov
in
pop
jns
lods
shll
cmc
push
lahf
xor
ds
mov
and
xchg
jb
xor
add
cmpsb
push
nop
repz
sbb
dec
mov
xchg
mov
in
lock
in
aad
syscall
out
adc
cltd
sub
adc
xlat
sbb
push
adc
adc
xlat
add
xor
adc
aam
add
jns
lods
subb
push
jnp
xor
rorb
negl
in
mov
fcoml
jecxz
sub
nop
xchg
sbb
adc
repz
pop
mov
mov
mov
ss
pop
jb
adc
sub
mov
mov
mov
xor
add
xor
sub
jmp
xchg
sahf
loopne
icebp
jo
popa
mov
cmp
mov
add
mov
jle
ret
jmp
pop
sbb
andl
in
pop
jbe
or
jnp
aad
mov
jb
fs
cmp
call
fisubl
aad
push
movsb
mov
lock
cs
loopne
imul
mov
cli
cmpsb
pop
js
or
mov
pop
les
add
iret
cmp
sub
pop
inc
mov
sarl
jne
jno
xor
out
imul
or
sub
sub
mov
cs
mov
movsl
cwtl
push
push
lods
ljmp
stc
cmp
sahf
in
cmc
and
jo
and
mov
xchg
rclb
push
roll
add
sti
add
stos
cmc
inc
repz
rolb
sub
imul
pop
std
mov
fmulp
out
dec
xchg
mov
call
mov
mov
ficomps
xchg
jp
cmc
fisttpl
add
call
jl
pop
inc
lahf
gs
clc
fiadds
cwtl
inc
xor
xor
push
out
movsl
cld
mov
ret
dec
mov
or
lcall
mov
out
out
pop
adc
fnstsw
xchg
push
dec
xor
aas
lods
mulb
mov
sub
push
xor
cli
inc
stos
mov
addb
or
cld
inc
and
and
xor
or
jmp
js
jae
push
sahf
icebp
mov
movsb
xchg
mov
aaa
mov
out
outsb
repnz
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
jmp
pop
sbb
cmp
push
popa
movsb
insl
std
and
jle
mov
jle
push
sub
bound
sub
xor
jge
mov
jecxz
xor
cmp
fxch
shrb
push
iret
mov
fisubs
out
lods
lret
lds
mov
cli
push
rcrb
xor
mov
xchg
sub
daa
xor
fstl
pop
or
adc
inc
pop
jecxz
arpl
mov
fs
xchg
or
mov
loope
pop
ds
loopne
int3
xchg
push
es
xchg
notb
mov
popf
pop
rorl
pop
sbb
pusha
push
sbb
jns
lea
or
imul
mov
add
dec
nop
jbe
sub
fs
xchg
xor
lea
outsb
adc
pop
bound
xor
fwait
pop
out
mov
call
adc
add
lret
xchg
enter
sub
jno
mov
scas
in
out
adc
pop
imul
cltd
pop
insl
xchg
jge
mov
jge
add
push
adc
std
jge
aas
adc
mov
testb
les
jne
jle
ret
sub
imull
cmp
push
xchg
inc
or
sub
push
cmp
fidivrl
in
xchg
pop
mov
mov
xor
push
mov
xor
adc
scas
adc
fisttpll
test
push
clc
add
xor
dec
leave
aad
js
xchg
mov
mov
jo
fs
inc
in
push
stos
or
pop
fldl
mov
cmp
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
jmp
je
int3
xchg
int
jne
jae
minps
ljmp
jg
jle
lods
jmp
cld
cltd
enter
movsb
cmp
pop
data16
jmp
sahf
cmp
xchg
mov
cmp
adc
mov
pop
jo
fsubrl
or
pop
pop
jns
mov
js
mov
leave
add
lret
hlt
and
cmc
dec
sub
and
or
adc
mov
mov
lods
dec
mov
test
fsubl
out
mov
xchg
jecxz,pn
jle
inc
je
loopne
adc
lcall
push
push
jbe
ret
sarb
xchg
lods
adc
and
out
or
sub
jno
shl
movsb
jmp
jg
mov
arpl
sbb
push
ret
mov
sarb
mov
adc
push
push
and
add
in
int
mov
int
cmp
das
jne
adc
mov
and
inc
mov
mov
loope
dec
push
jp
rcrl
pusha
xchg
cmp
add
lret
insb
test
pushf
fs
js
scas
dec
shl
push
push
scas
cmc
dec
pop
ret
inc
ret
cli
mov
push
add
lret
xor
out
and
jbe
pop
xor
pop
fidivl
shl
int3
movsl
and
mov
inc
mov
mov
test
mov
jno
mov
in
arpl
mov
fstpt
inc
xchg
mov
mov
xor
repz
ficompl
fstl
insb
sub
xor
outsl
xchg
cltd
pop
out
jge
push
clc
push
test
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
jmp
xor
inc
pop
pop
jge
arpl
outsb
dec
or
in
or
jle
sbb
test
rclb
push
ljmp
mov
leave
sub
jne
push
jle
xchg
and
sub
scas
push
push
push
add
hlt
jle
xor
sub
sub
cmp
and
jp
push
addr16
pop
and
mov
xchg
inc
add
shl
dec
movsb
mov
mov
mov
sarb
imul
xor
or
sub
subl
xchg
adc
fnstsw
das
movsl
test
pop
dec
sti
jne
add
iret
sahf
insl
pusha
or
push
xor
dec
and
jmp
mov
or
xchg
inc
sub
int
fs
ret
cltd
jl
sub
pop
sbb
in
push
sbb
xchg
lcall
cmp
movsl
clc
jmp
test
mov
jb
sbbl
movsl
rclb
mov
andl
cmp
aam
movsb
daa
pop
or
mov
or
pop
fcoms
jl
cmp
cmpl
repz
mov
jmp
push
fcoml
cltd
add
stos
inc
in
divl
mov
jmp
repnz
push
jne
dec
pop
mov
in
jecxz
jle
in
rcll
jns
test
testl
mov
imul
or
mov
inc
xor
cmp
imul
mov
mov
push
jg
in
inc
rclb
dec
pop
adc
and
add
or
testb
dec
ret
pop
fisubrs
cmp
push
adc
jb
sub
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
jmp
insb
jo
arpl
jge
jno
adc
mov
adc
mov
movd
jg
jle
ljmp
cmp
jecxz
inc
dec
les
push
add
cmp
add
cs
sub
rorl
cmpsb
gs
or
mov
test
pop
and
push
dec
pushf
and
cmpsl
lahf
stos
pop
mov
or
outsl
cltd
scas
jo
sbb
stos
repnz
movsl
push
or
xchg
push
cld
stc
test
into
sub
cs
ret
and
fcoml
adc
aam
push
and
jbe
adc
das
mov
subl
sahf
cmpsb
sbb
adc
mov
sahf
popf
imul
insb
gs
loope
loopne
mov
and
xor
mov
dec
sbb
xor
lock
fmulp
push
lock
test
xchg
fwait
push
and
leave
mov
test
imul
mov
sarl
shrl
jo
roll
aam
ret
repnz
adc
addl
jbe
add
aaa
add
sub
pop
xlat
sub
or
lea
ficoml
ror
xchg
pop
rclb
mov
jbe
push
lcall
scas
xchg
xchg
add
pop
pop
mov
popf
xchg
push
nop
push
pop
aas
mov
cwtl
sbb
xor
fildl
mov
enter
xor
mov
stos
adc
push
addr16
insb
jb
xchg
pop
mov
xor
pop
mov
test
pop
cmp
adc
mov
mov
and
cmp
daa
inc
dec
cmp
insl
mov
dec
mov
add
add
add
add
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
jmp
sbb
jge
fidivrl
mov
jle
push
jg
jle
into
ret
jl
cmp
ja
xlat
repz
mov
aas
dec
cmpsl
andb
scas
cmc
or
test
stos
sahf
jmp
pop
pop
dec
pop
mov
insl
xor
pop
test
add
fwait
mov
mov
inc
xor
fldl
mov
xchg
jle
cld
sub
cs
test
mov
popf
stos
jmp
fxch
mov
mov
cmpl
aas
jecxz
mov
scas
xor
dec
sub
cmp
lods
shld
arpl
addl
into
sbb
out
outsl
ljmp
pushf
sbb
dec
xlat
aam
lds
cs
dec
imul
clc
jnp
inc
fstl
jmp
test
sub
cmp
push
pop
cli
adcb
xchg
jg
hlt
ret
adc
or
mov
sub
dec
jp
sbb
fdivl
push
scas
or
sub
add
pop
insl
outsb
xchg
push
aas
xor
or
mov
inc
aam
xchg
mov
xchg
into
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
jmp
xorl
push
sbb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
add
movl
mov
push
mov
or
mov
xor
mov
push
add
mov
sbbl
jmp
pop
imul
lods
adc
call
push
jg
jle
shll
lods
popa
add
xor
icebp
cltd
imul
add
insl
jno
stc
pop
adc
std
xor
add
out
lret
mov
pop
xchg
jno
pop
subl
jno
sarl
sti
in
orb
add
sub
call
mov
dec
pusha
jg
and
xchg
imul
mov
and
sub
pop
ror
cmpsb
add
mov
scas
push
or
std
jl
inc
xor
ljmp
fwait
jp
pinsrw
adc
lea
ret
fildl
std
stc
mov
and
jmp
sbb
cli
stos
adc
xchg
xchg
loop
or
jno
shll
rcrb
aaa
add
mov
xor
mov
cmc
das
mov
mov
jne
lret
inc
cltd
lret
inc
outsl
jp
cs
in
jle
push
xchg
jno
ds
sub
dec
and
clc
cmc
xchg
cmc
and
add
cmp
je
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
mov
mov
xor
mov
xorl
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
xor
add
mov
imul
jmp
push
nop
outsb
stos
jae
push
jo
sub
lods
inc
cwtl
fisttpll
or
push
jg
jle
shlb
or
dec
cwtl
mov
out
dec
in
insb
ss
shlb
dec
js
fidivrs
add
mov
nop
enter
sub
add
bound
pop
inc
mov
pop
and
mov
ret
jae
fbstp
adcl
neg
data16
outsb
push
clc
mov
pop
cmp
lock
sub
loop
xchg
scas
mov
imul
xlat
loop
ret
in
fstl
nop
cmp
jge
rcl
ja
repz
fidivs
movsl
jno
loope
jns
in
xor
cmp
lds
out
sub
shll
mov
push
inc
sbb
icebp
fst
int
pop
sbb
nop
bound
push
push
aaa
incb
int
loope
and
lock
xchg
repnz
mov
imul
xchg
xchg
icebp
pop
add
insl
add
sbb
inc
movsb
ljmp
in
and
sbb
sub
inc
ds
xor
adc
push
pop
push
cmpb
lret
enter
xlat
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
sub
and
mov
jmp
inc
dec
fwait
imul
add
mov
jle
push
jns
jle
jno
into
repz
lock
xchg
clc
or
adc
sar
inc
pop
xorb
sub
jge
loope
cmp
inc
pop
sbb
cltd
sub
inc
adc
lods
xor
js
cmpb
or
aam
pop
lret
push
shll
mov
mov
push
scas
mov
cmp
insl
xor
mov
daa
dec
insb
lds
mov
dec
stos
jno
adc
push
dec
cli
loopne
mov
cli
addr16
adc
jo
add
daa
cmpl
fs
icebp
xor
movsb
mov
repz
xor
jmp
cli
jne
stc
cltd
test
pusha
hlt
xchg
faddl
cld
xor
mov
iret
cld
adc
jb
hlt
and
lret
lret
clc
arpl
ds
insl
jne
testl
cmc
loop
ret
xor
test
cmc
js
scas
insb
scas
and
hlt
pop
arpl
or
push
push
nop
inc
jp
movb
mov
repnz
das
imul
and
imul
adc
xlat
call
cmp
stos
lcall
mull
mov
dec
mov
repnz
push
jg
shll
add
add
cmpsl
and
cmp
leave
xchg
and
addr16
mov
mov
and
insl
je
ds
aas
and
push
xchg
mov
mov
enter
add
cwtl
sub
push
push
jg
idivl
imul
pushf
inc
jae
pop
cmp
icebp
sub
push
mov
icebp
test
and
mov
xchg
pop
add
mov
les
test
outsb
repnz
jnp
iret
jecxz
pop
add
imul
mov
mov
push
add
xchg
xor
adc
add
movsb
jecxz
dec
mov
sub
je
sbb
fbld
or
xchg
xchg
mov
pop
jbe
adc
idiv
fsubrp
cmp
jp
push
rcl
and
fnstcw
jmp
pop
pop
dec
ret
stos
xchg
das
fisttpll
sub
in
pop
cmpsb
ss
inc
fs
incl
xor
jp
imul
sbbb
fisubrl
inc
add
idivl
add
pop
mov
jne
push
inc
cwtl
stos
or
dec
iret
in
jl
mov
jnp
xor
push
das
daa
xchg
add
jmp
imul
mov
mov
cmp
pop
lea
movsl
jnp
iret
sbb
mov
or
cmp
cmp
push
std
xor
es
out
push
imul
das
lret
shlb
push
jns
xor
rorl
or
and
in
lcall
xchg
enter
and
int
shlb
int3
ret
xchg
xchg
adc
aaa
aaa
rcl
stc
aaa
aas
cmp
sub
and
pop
int
mov
and
push
push
xlat
mov
lods
test
xlat
mov
add
jb
push
push
adc
jecxz
lret
pop
adc
int3
push
dec
insb
enter
jb
fwait
push
jne
mov
cmc
sbb
call
iret
lret
orl
insb
dec
and
xchg
mov
push
outsl
std
mov
add
les
bound
lahf
nop
or
je
cmpsb
test
push
cmpl
fidivl
push
xchg
js
hlt
push
push
rorl
and
pop
mov
xor
mov
andl
add
mov
xor
mov
movzwl
mov
xor
mov
mov
sbb
mov
movb
lea
orl
mov
and
jmp
jo
inc
xchg
jo
jne
xchg
or
cs
orb
jle
push
jns
jle
xchg
jecxz
push
gs
or
and
clc
shr
xchg
nop
adcb
in
fmull
xlat
fldcw
lea
je
inc
pop
mov
int
out
aam
test
dec
and
sbb
or
lret
jecxz
inc
xor
fldcw
pop
gs
jle
cmp
sbb
cwtl
mov
shlb
lcall
ret
loope
out
andb
and
sbb
lret
mov
pause
xor
aas
xchg
stc
das
test
adc
movsb
sub
pop
push
insl
aas
jle
popa
scas
dec
push
dec
mov
mov
jb
mov
flds
mov
cli
lods
push
idivb
add
sbb
and
push
roll
push
dec
xor
xchg
mov
sbb
inc
ljmp
negl
ret
push
pop
fisttpl
pushf
addb
outsb
pop
dec
mov
dec
push
jge
outsb
pop
pop
in
movsl
add
add
sub
fmuls
enter
and
sub
push
outsb
test
outsl
aad
sbb
loopne
ja
inc
pop
fcmove
addr16
repz
push
jb
mov
mov
rclb
adc
das
mov
mov
xor
pop
sbb
fsubrl
adcl
lea
push
sbbb
iret
sbbl
test
hlt
sbb
and
jmp
jno
push
shl
mov
push
insb
inc
shll
jno
stos
adc
daa
sub
jno
fs
cs
imulb
int
mov
ljmp
enter
mov
push
arpl
lret
and
pop
jp
inc
enter
push
into
sbb
ror
mov
mov
mov
lds
jb
adcb
in
mov
dec
out
push
mov
lods
jle
in
dec
adc
and
pop
pusha
aaa
mov
out
inc
push
mov
dec
mov
adc
inc
sub
cmp
jb
inc
rcrb
xchg
xor
pop
loop
adc
xchg
and
out
lret
mov
jo
mov
pusha
inc
mov
adc
stc
mov
in
data16
push
xchg
popf
out
mov
pop
mov
sti
mov
dec
test
ljmp
mov
add
ror
in
movsl
xor
mov
jge
mov
into
mov
mov
add
insl
sub
pop
shrl
sysenter
add
add
into
cmp
cmp
fucomi
cltd
scas
or
push
inc
xchg
lret
and
or
imulb
sub
scas
sbb
mov
testl
rol
pop
fbld
mov
mov
pusha
stc
fcmove
mov
xchg
rcll
jo
icebp
adcl
ss
arpl
test
lahf
icebp
and
sbb
pusha
mov
inc
or
fisubl
adc
insb
mov
push
call
jno
loop
out
int3
dec
pushf
push
xchg
sbb
int
jae
xlat
mov
jg
xchg
pushf
push
lods
inc
pop
data16
dec
mov
sub
mov
imul
mov
and
repz
lret
push
and
cmp
ret
dec
sti
js
data16
outsb
pop
iret
ljmp
subl
cmp
das
and
inc
pop
mov
jo
cld
in
js
mov
mov
sbb
mov
mov
sbbl
xor
addl
sub
orl
mov
xor
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
movl
adc
mov
mov
push
adc
xor
incl
mov
subl
add
jmp
notl
mov
mov
movl
inc
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
xor
mov
jmp
sbbl
jae
out
xchg
cld
stos
xlat
int3
arpl
jle
push
jns
jle
aas
out
mov
movsl
insb
cmpsl
mov
pop
and
pop
lods
das
lcall
xchg
xor
lds
ss
jge
pop
sti
pop
fdivl
jne
fistps
in
xor
pop
add
cli
xchg
push
sub
je
mov
push
int
jbe
popa
jp
cmp
add
push
xchg
idivl
out
cmp
dec
adc
cmp
xchg
addb
cs
nop
dec
outsl
ds
jecxz
in
jo
push
into
or
or
ljmp
adc
push
ss
lcall
shrl
pop
lahf
sarl
sub
fwait
inc
mov
push
scas
cli
movsb
fs
jp
aaa
mov
adc
imul
fisubl
leave
sbb
xchg
mov
idivl
mov
insb
add
xchg
adc
or
mov
mov
cmc
pop
cmp
scas
adc
pop
mov
jg
lret
lds
dec
jne
sub
mov
nop
push
xor
mov
and
sbb
push
lahf
sahf
test
scas
add
lds
fnstenv
dec
xchg
and
scas
in
imul
imul
bound
mov
xchg
or
push
push
sub
jle
popl
fisttps
mov
iret
adc
push
incl
jle
shl
sub
adc
mov
mov
push
mov
jl
push
pushf
in
jb
dec
cwtl
adc
movsb
or
repz
sub
in
fbstp
dec
icebp
es
adc
dec
push
movsb
mov
jo
jae
push
cmpsb
jns
push
xchg
dec
pop
push
lcall
xor
mov
cs
ret
mov
pop
int3
mov
sar
mov
mov
negl
lods
mov
sbb
and
or
push
push
xchg
mov
cltd
jbe
adcl
or
xchg
nop
sub
xor
lock
ret
mov
les
js
ret
inc
jbe
scas
pop
cwtl
test
mov
iret
int3
xor
in
scas
ja
mov
push
adc
mov
and
clc
mov
push
cmc
sti
mov
dec
xchg
cs
sbbl
dec
mov
test
dec
mov
loop
or
mov
nop
inc
repnz
pop
addl
nop
lret
mov
or
lahf
cmpsl
test
sub
cltd
pop
cmp
and
icebp
adc
js
lea
lock
cmc
mov
pop
xor
xlat
stc
push
and
movsb
sub
ss
add
pop
jno
xchg
mov
int
imul
push
pop
mov
cwtl
clc
pushl
add
mov
cmp
movsl
jo
iret
add
xchg
add
add
arpl
inc
mov
cmp
inc
sub
push
dec
cmp
cmpsb
insl
adc
sbb
jecxz
cmpsb
ret
or
sbbb
scas
cmpsb
fnstenv
test
pop
ja
xor
sbb
xor
sub
or
and
adc
mov
popa
pusha
cs
jp
mov
sti
mov
xchg
mov
enter
aaa
jne,pn
cld
cmp
js
mov
in
pop
test
imul
mov
xchg
nop
int
mov
jle
xchg
rorl
lahf
push
aam
mov
jecxz
out
push
out
cmp
test
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
jmp
mov
or
push
jge
inc
xchg
add
mov
jns
jle
mov
xchg
jae
sbb
dec
mov
or
shlb
fisttpl
stc
sub
rcl
dec
adc
in
jg
lea
sbb
mov
ret
push
mov
lcall
jmp
pop
andb
addr16
xchg
or
pop
jle
push
xor
jne
push
mov
mov
testl
std
addr16
mov
sahf
outsl
sub
mov
add
jnp
std
jp
in
mov
cmp
sub
imul
push
test
jne
out
mov
dec
ja
jmp
pop
or
sub
push
andb
in
sbb
roll
adc
add
jb
sbb
fwait
daa
ret
shl
inc
and
arpl
ds
mov
repnz
inc
rol
pop
mov
sti
ds
push
or
xlat
xchg
xlat
and
mov
shll
lret
loopne
into
sahf
enter
push
inc
jg
mov
jnp
push
cmp
fnsave
mov
mov
dec
hlt
sbb
je
and
mov
and
enter
sbb
bound
mov
dec
popf
adc
mov
mov
inc
push
pop
ds
mov
push
hlt
jns
pop
aaa
test
inc
push
inc
popa
push
js
lret
pop
faddl
mov
jmp
mov
loop
push
xchg
cmc
xor
xor
nop
ror
repnz
cmpl
orb
dec
jno
add
jge
dec
xor
cmp
clc
push
mov
jle
mov
add
pop
fdivl
scas
inc
mov
cmpl
inc
sub
push
repnz
jnp
pop
divl
in
rcr
movsb
loopne
sub
pop
and
push
adc
mov
jecxz
sub
or
clc
mov
jecxz
ljmp
push
lods
mov
les
loope
mov
mov
lods
adc
pop
pop
push
popf
mov
push
pop
dec
leave
sub
lahf
push
add
xchg
push
lods
mov
xlat
lods
mov
loope
or
sahf
push
dec
enter
jae
xor
daa
or
add
jo
mov
dec
aaa
inc
push
stc
das
jge
andl
ret
lea
seto
fisttpl
xchg
pop
jnp
push
mov
dec
adc
daa
cli
subb
cmp
mov
jno
or
scas
lock
repz
mov
insl
clc
adc
add
in
enter
lahf
or
cwtl
popa
int3
jmp
lret
out
faddl
lcall
mov
inc
push
sti
clc
bound
das
mov
mov
push
insb
lret
xchg
dec
hlt
out
repnz
pop
adc
jge
cmp
sub
adc
mov
push
xor
das
xorl
mov
clc
test
xchg
jmp
xor
shll
adc
roll
lret
cmpb
sub
push
jo
repnz
filds
stos
loop
and
ja
and
lret
add
cwtl
out
inc
inc
xor
push
push
jecxz
mov
push
lock
xchg
das
mov
leave
mov
add
dec
in
popa
dec
ret
xor
sub
and
xor
test
shrl
or
clc
xor
add
mov
mov
jmp
pop
ret
jge
insb
jae
test
xchg
jns
jle
jnp
test
pushf
mov
add
mov
and
std
arpl
aas
cmp
aas
mov
push
jno
pop
xchg
inc
movsl
mov
cmp
lahf
cmp
mov
stos
dec
les
mov
dec
xchg
dec
je
adc
xor
bound
sub
jge
pop
push
or
gs
scas
push
or
ret
inc
adc
cmp
xor
shrl
pop
inc
xor
icebp
subw
jne
jae
jnp
ss
mov
mov
mov
pop
loopne
inc
adc
and
and
rcl
xchg
inc
pop
jp
mov
sub
adc
lods
xor
xor
mov
cmpsb
add
cmpsl
xor
popa
and
jecxz
fdivrl
mov
sub
inc
in
inc
push
movsb
js
mov
in
adc
and
or
clc
adcb
or
loopne
dec
inc
add
rep
sbb
push
dec
movsl
jns
push
push
int
add
ja
cmp
lret
repnz
mov
in
mov
std
mov
add
and
xorl
call
or
sub
cwtl
jle
in
lret
mov
test
ficomps
test
sti
cltd
psubusw
sar
je
mov
xchg
and
mov
fwait
mov
clc
mov
mov
pop
lods
mov
mov
test
dec
lods
mov
jno
scas
or
ljmp
cmc
icebp
int
movsl
mov
pop
popa
iret
push
in
dec
mov
push
rcll
push
inc
inc
cmp
cmp
enter
and
aad
shl
mull
in
popf
shl
xor
push
and
sbb
mov
jge
mov
lret
sbb
stos
mov
jb
test
dec
fdivrs
aad
les
dec
stos
or
addr16
sbb
ret
rcl
lods
retw
lret
test
std
cwtl
test
enter
mov
aaa
adc
sub
aam
jmp
aas
sbb
outsl
or
push
push
inc
inc
and
xchg
addr16
cmp
sub
inc
fdivrp
sbb
mov
jecxz
add
sbb
fisubrs
out
mov
or
mov
xchg
ss
pop
mov
pushf
push
imul
push
push
addr16
cmpsb
jbe
dec
jae
cmp
or
push
and
xchg
cmp
pop
neg
lahf
icebp
adc
mov
mov
or
push
sub
out
lock
or
dec
xchg
mov
hlt
push
xor
fildll
jg
or
in
fldenv
mov
test
gs
jmp
xor
aam
add
inc
push
insb
push
sub
xchg
inc
sahf
ss
mov
clc
es
cmc
add
push
xchg
out
sbb
movsb
push
stc
jno
sahf
out
or
rorb
pop
lods
xor
gs
test
test
pop
mov
push
clc
sub
sub
sbb
push
dec
scas
lods
pop
inc
jp
dec
call
xchg
dec
lods
cltd
cwtl
push
addr16
call
je
in
mov
fisttps
dec
dec
enter
adc
inc
stc
or
loope
add
js
xchg
rcll
mov
fcompl
mov
call
dec
pop
sbb
mov
xor
xchg
or
jecxz
add
orb
cmp
lahf
in
and
rorl
lcall
roll
jbe
inc
add
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
jmp
enter
cmc
jne
mov
inc
cwtd
jmp
jle
push
jns
jle
insb
icebp
and
dec
mov
gs
jbe
jo
rol
jge
shrl
lods
inc
pop
lds
imul
movsb
push
push
push
jl
in
sahf
es
loop
xchg
xor
insl
push
scas
enter
enter
mov
or
sbb
mov
clc
mov
add
mov
out
nop
into
or
les
cmp
mov
cltd
outsb
rolb
jne
enter
mov
scas
mov
sbb
lds
mov
mov
ret
xor
push
mov
test
mov
popf
rep
mov
mov
aad
jo
rcl
cmp
or
mov
dec
dec
nop
cs
ret
or
std
in
and
xchg
rorl
xchg
mov
fadds
cmc
sub
rcrl
mov
aad
inc
mov
mov
orb
clc
movsb
cmp
cmpsb
xchg
and
sti
lock
sbb
xchg
push
mov
or
and
outsl
icebp
ds
inc
and
inc
pop
pop
adc
pop
lea
lahf
and
jg
mov
mov
hlt
or
xor
cli
jnp,pt
xor
add
adc
inc
ljmp
in
adc
retw
inc
push
repnz
rclb
repnz
xchg
enter
push
orl
push
gs
push
sub
out
push
arpl
inc
sti
stos
mov
stos
gs
fsubrl
repz
or
loopne
hlt
call
movsw
fldenv
imul
xchg
bound
lds
lcall
mov
test
ljmp
xor
out
mov
lahf
pop
sbb
mov
and
or
mov
xchg
loope
mov
mov
nop
rcr
cmp
sahf
std
in
jne
mov
inc
dec
movsb
or
inc
jns
pop
addr16
pop
rcl
enter
imul
push
mov
fidivs
mov
lahf
mulb
pushf
shr
cltd
popf
push
sbb
loopne
out
xchg
adc
cmp
aam
sub
mov
mov
jmp
sub
adcl
cmc
cs
sbb
cltd
fs
imull
out
les
daa
inc
mov
int3
pop
sub
cmp
or
repnz
inc
mov
andl
dec
mov
adc
test
jmp
int
lret
jno
mov
test
xor
push
pop
repz
dec
rclb
adc
orb
sbb
daa
add
xchg
nop
push
out
pop
stos
cmc
lret
inc
test
ffreep
dec
or
ret
bound
dec
ss
mov
inc
sbb
fwait
pop
fwait
inc
or
test
mov
repz
dec
adc
xchg
or
mov
jns
dec
in
mov
sti
xchg
imul
data16
mov
jns
or
mov
ja
push
mov
pop
jns
or
es
fisttpll
imul
add
sub
push
insb
test
xorb
dec
fdivrl
xchg
pop
jnp
out
jg
mov
sub
pop
xlat
mov
dec
testl
mov
je
cmpsl
aaa
or
enter
sahf
testb
fadd
bswap
scas
lock
fmull
imul
push
pop
inc
outsb
push
adc
or
out
or
sbb
orl
cmp
je
movl
lea
mov
jmp
push
fdivp
imul
mov
pop
jge
add
jle
push
jns
jle
and
dec
dec
adc
jne
xchg
sysexit
lock
mov
xchg
xlat
and
sbb
dec
dec
and
mov
add
mov
enter
call
call
idivl
xor
repz
cmpsb
lcall
cmp
sbb
out
cmpsl
or
xor
pop
rcll
push
popf
xor
jae
ja
imul
jae
fldt
shll
lea
inc
ja
or
repz
mov
imul
dec
mov
mov
cmp
je
or
fdivp
xor
cmp
xchg
adc
daa
daa
jns
adc
pusha
ja
mov
stos
sub
call
mov
sti
or
inc
aas
or
mov
push
sbb
and
jl
xor
loope
mov
push
sti
notb
sub
add
add
xor
pop
lret
inc
fsub
sub
rcl
cltd
sub
pop
in
or
fcompl
outsb
jmp
fildl
test
mov
fbstp
pop
dec
mov
lret
mov
jns
mov
fiadds
shlb
subl
and
mov
mov
es
cmp
sbb
inc
inc
push
in
mov
dec
mov
test
hlt
push
mov
ds
imul
stos
ds
adcl
inc
fwait
sub
pop
sub
jp
pushf
cmp
pop
and
adc
repnz
lock
sub
popa
lds
inc
scas
inc
cltd
leave
inc
xchg
mov
insb
sbb
add
out
sbb
repz
or
add
movsl
test
jns
dec
xchg
or
pop
xor
or
gs
cli
cmp
jns
es
pop
std
xlat
leave
pop
mov
xor
das
loopne
ja
or
pop
out
sarl
sbb
push
and
test
pop
inc
js
gs
xor
repz
lods
out
sahf
mov
lret
test
addr16
sub
jno
dec
mov
inc
mov
and
dec
imul
testl
fisttpl
mov
sbb
test
sbb
push
xchg
xchg
cs
lahf
jmp
loope
aaa
imul
adc
jnp
aas
push
fwait
push
sub
xchg
dec
sbb
adc
out
pop
and
sahf
add
sahf
add
sbb
sub
xchg
jmp
jne
lock
les
lcall
ss
stos
mov
dec
shl
sahf
xchg
push
xchg
mov
pop
int
mov
xlat
popa
pop
sbb
and
in
xchg
cmc
xchg
lock
stos
mov
xchg
loope
negl
jl
insb
xor
pop
fxch
out
dec
int3
fcmovnb
call
jge
jp
fmul
fstpt
ror
sub
inc
imul
leave
popf
xchg
fimuls
jb
ljmp
push
es
add
push
xor
sti
cli
jae
aas
mov
sub
into
repz
xor
xchg
aaa
insl
arpl
bnd
je
sbb
jno
nop
dec
xor
xor
scas
sbb
or
test
adc
pop
push
inc
inc
rorb
jg
repz
mov
mov
push
pop
out
and
pop
test
clc
mov
popf
into
testl
inc
push
mov
cmp
in
addl
and
mov
inc
in
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
sub
jmp
pop
mov
and
jno
dec
call
and
jle
jg
jle
iret
jg
pop
sbb
adc
decl
fs
xchg
pop
iret
inc
sub
pop
add
fcmovnb
mov
idivl
dec
pop
inc
inc
test
xchg
or
jo
iret
cmpl
jo
xchg
out
xlat
out
cmpl
icebp
subl
clc
fsub
xchg
les
stos
outsb
sbb
mov
or
test
push
inc
mov
decb
shr
or
xor
mov
lahf
fsts
fdivl
hlt
cmp
adc
sub
cli
pushf
orl
ror
sbb
jnp
sub
jno
cmpsb
cmp
pop
das
out
dec
fldcw
push
popf
into
cmp
cmp
sbb
jno
movsl
xchg
vcvtsd2ss
xchg
or
rcrl
loop
stos
aam
out
in
sti
gs
movsl
jno
sahf
pop
arpl
sub
ret
pop
dec
mov
xchg
or
pop
adc
outsb
cmpsl
cmc
es
test
mov
shll
das
sbb
xlat
aad
std
loop
cmp
push
mov
nop
mov
les
fstl
push
je
mov
dec
adc
mov
fwait
pushf
xchg
fucomip
mov
jo
sbb
fisubrl
jp
cmp
je
mov
add
lea
lret
int
cmp
sbb
mov
mov
jbe
cmpsb
jge
out
in
fadds
jge
int3
sbb
pop
repz
subb
or
jg
or
jmp
xchg
sti
fwait
dec
dec
pop
xchg
imul
adc
rcll
loopne
lea
jge
mov
movsb
and
jns
and
mov
jnp
cmp
and
or
push
or
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
push
pushl
call
mov
dec
mov
jmp
movl
mov
xor
push
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jb
inc
mov
incl
mov
xor
xor
mov
add
xorl
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
jmp
imul
jge
push
pop
loopne
sbb
jp
jnp
jle
pop
jg
jle
leave
in
sbbb
sub
stos
outsl
jl
arpl
outsb
mov
xchg
sbb
repnz
leave
lret
in
xor
mov
mov
sti
lret
iret
std
pop
xchg
adc
dec
repz
sub
or
xchg
out
and
shlb
aas
fists
sub
pop
rcr
test
ljmp
std
in
sbb
ljmp
xor
xchg
mov
cwtl
adc
sbb
iret
in
popf
gs
mov
sbb
jne
inc
dec
pop
clc
data16
push
cltd
xor
jb
cmpb
cmpsl
cmp
cmp
sbb
xchg
push
test
xor
xchg
and
into
push
pop
xchg
push
ds
adc
xor
cmp
js
mov
addb
test
insl
sub
bound
xor
std
and
adc
push
jmp
cmp
scas
insb
cmp
cld
cmovl
scas
push
push
xlat
cmp
xchg
hlt
les
xor
sbb
jae
arpl
popa
sbb
or
mov
mov
sub
addr16
call
inc
addl
jne
adc
xchg
sbb
das
int3
push
jle
cwtl
dec
dec
fxch
lahf
stos
xor
test
add
jo
mov
arpl
adc
ja
in
xchg
fsts
pusha
sub
jecxz
push
das
mov
mov
lods
push
cmp
jl
ljmp
and
jbe
sub
es
loope
lods
hlt
popl
ja
cltd
mov
imul
pop
sub
outsl
popa
outsb
or
movsb
sbb
stc
fbstp
jnp
cld
in
jle
lahf
lock
fs
mov
xchg
insl
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
jmp
sahf
jb
push
pop
jl
jb
ret
mov
and
jle
les
jle
dec
cmpsb
pop
andb
lret
frstor
clc
jae
icebp
ret
testb
scas
mov
in
xchg
lods
push
pop
xlat
add
xchg
add
lret
and
flds
mov
out
cmp
movsl
mov
adc
xor
pop
mov
aad
cmpsb
cmp
and
inc
pop
and
in
das
lock
test
clc
sub
int3
fnsave
adcb
clc
aas
inc
mov
dec
jge
mov
dec
sub
adc
imul
mov
stos
pop
outsl
inc
shll
add
push
jge
add
std
push
shl
push
test
out
sahf
cli
xchg
call
inc
movsb
xor
cmpsl
mov
insb
daa
in
dec
mov
aas
out
push
or
bound
push
dec
out
inc
xor
mov
pop
fld
or
aam
rorl
cmp
ret
or
rorb
clc
dec
mov
mov
inc
mov
into
scas
sahf
sbb
lods
stos
fcoml
int3
push
push
xchg
pop
movsl
rolb
popf
mov
cld
mov
dec
pop
add
inc
daa
jp
push
cmp
stc
inc
flds
jbe
mov
jns
or
fstps
mov
aaa
mov
pop
lret
negl
pushf
jae
fisttpll
mov
pop
xor
mov
xchg
sarb
jb
cmpb
add
xchg
lods
sbb
jl
push
mov
aaa
cmp
sbb
adc
and
pop
xlat
mov
or
mov
sub
pop
mov
mov
in
inc
movsl
push
icebp
mov
cmc
pop
push
xchg
out
mov
roll
mov
insb
mov
notb
cmp
adc
and
jno
scas
and
and
cmp
dec
enter
popa
stos
jecxz
lea
push
jb
aad
jno
pop
je
std
imul
ror
sub
pop
daa
js
fstpl
bound
cmpsl
push
sub
popf
push
aad
push
jb
cmpsl
pusha
out
popa
lahf
inc
xlat
jne
mov
lods
aas
mov
enter
in
ds
rorl
push
js
lods
imulb
add
mov
cmpsl
or
dec
jno
out
test
sti
shll
inc
cs
pop
cmpsb
cwtl
add
sahf
cwtl
ret
sub
pop
mov
dec
movsb
push
cmp
adc
cmp
mov
dec
idivb
jnp
mov
adc
mov
mov
push
mov
aaa
rorl
mov
add
fs
sbb
leave
leave
xchg
pop
jns
xor
vmwrite
xchg
mul
push
sbb
pop
pop
ror
sbb
and
sbb
mov
mov
loopne
add
mov
mov
scas
push
mov
sub
lahf
pop
test
leave
lea
xor
les
mov
mov
cmp
sbb
mov
movl
mov
jmp
xchg
jb
jg
dec
mov
arpl
jle
les
jle
in
push
xor
je
mov
in
in
fimuls
sbb
mov
push
mov
or
ret
aas
ret
jnp
jb
mov
pop
lret
jmp
mov
fdivrl
fisubrs
or
or
xchg
adc
pop
cmp
lods
cmp
sbb
pop
fcomi
roll
xor
and
adc
in
enter
jb
xor
and
push
push
sub
movsl
imul
xchg
mov
sub
sub
lds
adc
int3
nop
or
xchg
mov
jmp
sbb
movsl
int
add
stos
push
aas
aam
daa
dec
pop
xchg
adc
jle
sbb
push
adc
shlb
and
fisubs
push
cld
lea
mov
cmp
lods
push
pop
mov
cld
xor
dec
lock
shll
insl
mov
xchg
out
clc
loop
push
fistpll
sub
sahf
pop
jno
jge
and
mulb
lock
popa
loop
lea
xchg
adcl
scas
loope
jle
push
int
and
or
add
mov
insl
loope
das
jg
sbb
inc
jl,pt
and
daa
std
push
mov
add
xchg
xor
jl
orb
jmp
adc
lcall
adc
cli
cmp
cmp
aaa
xchg
loope
inc
push
push
shlb
out
jmp
or
mov
push
pushf
rolb
xchg
push
scas
sub
cvtdq2ps
jb
and
adc
imul
xchg
pop
inc
pop
test
jmp
dec
dec
pop
xchg
shlb
fcompl
jb
jmp
dec
pop
mov
fldt
sbb
mov
dec
lahf
rorb
popa
push
push
in
jmp
inc
mulb
mov
cmc
cmpsb
and
jae
and
outsl
ret
mov
insb
inc
pop
andl
xchg
scas
loopne
gs
xlat
rcl
cmp
or
sub
or
mov
push
pcmpgtb
fs
loop
push
repnz
inc
lds
cmp
outsb
mov
jnp
mov
mov
mov
adc
js
inc
and
or
fmuls
mov
rorb
addb
psllq
sbbl
outsb
iret
sbb
ds
daa
xchg
out
into
rclb
sahf
mov
xlat
jo
pop
sub
jle
pop
xor
jecxz
lock
in
jno
in
pop
add
xchg
je
test
mov
cltd
loope
inc
es
dec
aam
sbb
outsl
mov
lahf
push
cmp
sub
mov
notl
sbb
mov
xor
gs
push
add
movsb
adc
arpl
lcall
dec
push
fstps
mov
xor
fadds
mov
push
ljmp
jo
test
xchg
or
clc
cmp
add
add
dec
and
add
pop
add
add
pop
arpl
push
mov
jle
jns
jle
push
gs
jmp
sti
jne
inc
jno
loop
std
pop
jb
adc
stos
ret
or
and
clc
lret
and
fistps
popf
scas
mulb
xor
arpl
inc
imul
aas
aam
adc
add
sbb
lods
in
mov
sbb
dec
aam
mov
push
add
jbe
outsl
icebp
hlt
repz
fisubl
loopne
cmc
cmp
es
iret
fucomi
jb
jb
adc
loop
in
in
push
pop
fdivl
or
daa
fs
mov
cmp
cs
int3
pop
sub
xchg
repnz
and
pop
icebp
jle
sbb
add
sub
add
lock
fistpl
lea
push
shrb
and
test
lods
push
int3
ds
aad
xor
pop
pop
pushf
pop
in
cmpb
mov
rcr
rol
call
jle
jp
movsl
xor
aaa
mov
adc
pop
out
frstpm(287
test
adc
and
imul
mov
test
loop
sub
xor
xchg
mov
push
outsl
outsb
cwtl
add
jmp
pop
mov
pushf
adc
lcall
aad
jecxz
es
xor
mov
pop
int3
lahf
imul
inc
push
sub
and
pusha
sti
fldenv
addr16
lds
xor
push
inc
shlb
pop
or
addr16
and
push
dec
pop
scas
sbb
pushf
and
cs
stc
pmulhw
push
lods
push
or
jno
stos
mov
push
mov
dec
mov
cs
mov
xor
pop
sbb
outsb
int
sbb
sahf
mov
dec
imul
push
iret
scas
xor
xor
dec
ficoml
or
fsub
cmp
xchg
jg
out
xchg
cmpsb
data16
test
mov
dec
cmp
push
adc
mov
fisttpll
sbb
mov
roll
mov
sarb
mull
pop
pop
or
cwtl
rcrb
js
cmp
adc
jg
add
pushf
ret
aad
aaa
sar
call
ret
rcrb
mov
dec
mov
jge
stc
lods
xor
cmp
pop
je
mov
jl
cli
inc
fisubrl
jbe
ret
jns
pusha
test
push
xlat
pop
movsb
pop
insb
mov
sub
lds
sub
iret
les
and
mov
cmp
adc
push
std
mov
mov
jne
outsl
push
sub
lahf
mov
xor
ss
cmc
jne
xchg
dec
cltd
cltd
sub
out
aam
fmull
mov
out
cmp
fisttps
sahf
icebp
lcall
icebp
hlt
mov
xchg
pop
lahf
push
mov
std
mov
imul
mov
push
scas
mov
push
lcall
sbb
rol
pop
movsb
lods
xchg
test
nop
dec
sub
out
ss
popf
loop
jg
or
enter
add
add
adc
mov
andl
mov
subl
xor
or
mov
andl
add
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
jmp
movsb
jb
push
cld
pop
gs
call
shlb
jns
jle
xor
jb
mov
in
ss
fldcw
mov
sbb
out
dec
repnz
push
jne
ljmp
in
xchg
cltd
add
popf
pop
xchg
shll
mov
cs
mov
dec
ret
adc
mov
push
fs
and
push
lods
xchg
pop
inc
aam
arpl
cmp
adc
cmp
fcompl
and
stos
fstpt
mov
mov
sbb
mov
jecxz
mov
xor
mov
ret
mov
shrl
adc
sub
push
jl
adc
sub
push
mov
int
pop
push
adc
inc
pop
addr16
pushf
pop
fdivrl
mov
in
test
test
ret
loopne
mov
or
inc
inc
fnstsw
js
iret
pop
mov
adcb
pop
in
movsb
pop
adc
mov
adc
adcl
and
dec
fbstp
xor
sub
xor
xchg
test
adc
adc
jb
das
sbb
push
mov
or
jmp
inc
dec
mov
pop
mov
xlat
push
cmpsb
sub
cmp
stos
add
fbld
xor
mov
jo
daa
inc
push
out
xlat
mov
cmc
lret
fmuls
enter
mov
lods
inc
and
jno
ja
in
aam
das
js
sbb
sub
pop
mov
push
bound
or
outsl
fs
xchg
js
inc
jg
xchg
dec
adc
mov
icebp
dec
out
jecxz
pop
mov
sbb
xor
shll
out
icebp
repz
inc
or
mov
and
mov
int3
fsubrl
cmp
stos
cmpsl
mov
ss
sub
std
stc
lods
push
out
dec
repnz
pop
loopne
in
xor
adcb
jge
push
adc
dec
and
sub
push
test
movsb
push
inc
dec
ficoml
sub
mov
shl
faddp
or
outsb
out
or
mov
test
and
mov
fbstp
pop
pop
cmp
rol
call
stos
pop
jl
lcall
pop
cltd
jg
jecxz
cmpsl
or
je
dec
dec
pop
add
mov
popa
ja
inc
xor
mov
xor
int
arpl
fisubrs
fadd
rorb
push
pusha
sbb
lods
jmp
jno
or
xchg
xchg
test
jg
stc
mov
adc
or
das
and
cltd
out
pop
repz
mov
pop
and
xchg
js
mov
push
dec
loopne
dec
shrb
jecxz
cmp
xchg
cmp
adc
cmp
lods
inc
faddl
dec
mov
mov
xchg
js
and
cld
ljmp
shlb
pop
imul
mov
in
fs
lahf
cmpsb
jae
out
pop
enter
je
leave
ret
push
mov
sub
movl
movl
mov
mov
sub
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
jmp
and
ss
cmc
lock
sahf
rol
scas
in
mov
jle
jns
jle
scas
add
fsubs
arpl
jmp
icebp
ret
movsl
aaa
xchg
lods
pop
fs
dec
into
testb
add
push
xchg
dec
push
push
jbe
mov
pop
cmp
cmp
lds
nop
jno
test
add
push
mov
dec
mov
das
stos
cltd
pop
leave
mov
lahf
adc
xchg
and
sahf
ja
ja
loopne
ljmp
mov
stc
fsubr
popf
jnp
repnz
pop
push
jbe
cmp
xor
and
push
push
int
push
xchg
pop
hlt
dec
inc
jecxz
cs
roll
or
pop
sub
push
daa
fsubrl
cltd
xchg
out
clc
in
cmp
lds
std
fidivl
aas
mov
imul
mov
leave
aad
push
add
jecxz
pop
lods
jg
daa
orb
hlt
js
pop
push
adc
out
std
mov
testl
sbb
adc
movsb
and
and
sbb
inc
out
cs
jle
movsl
fisttps
cltd
dec
jbe
inc
cltd
adc
sub
and
push
call
dec
lds
mov
cmpl
and
into
sub
cmp
cmp
sbb
fmulp
xor
testl
rcl
repz
andb
imul
bound
lcall
sbb
and
rorb
nop
pop
test
jmp
cmpsl
enter
jecxz
jmp
into
xchg
aas
test
add
into
outsb
sbb
out
gs
adcb
push
loopne,pn
jecxz
inc
jg
nop
inc
sahf
int3
push
jo
lea
push
cmp
xchg
repz
test
pop
or
inc
jno
sti
jecxz
ror
inc
sahf
call
test
push
pop
dec
xchg
not
pop
xchg
mov
in
lds
fmull
dec
add
jns
jecxz
stos
leave
sbb
outsb
fidivs
int
ljmp
mov
cmc
mov
push
insb
dec
push
fwait
subl
cmpsl
and
fsubrs
dec
idivb
push
jge
inc
sub
outsb
fldl
sbb
pop
dec
inc
loop
addb
add
ret
dec
pop
push
mov
icebp
idivb
and
add
mov
xchg
pop
push
xchg
rcrl
cmp
push
sub
push
mov
dec
mov
popa
inc
mov
pushf
sarb
mov
push
sub
data16
or
lods
rcrl
inc
mov
jbe
jne
push
add
bound
adc
aam
lret
mov
inc
negb
les
or
test
in
jbe
test
push
inc
jo
inc
dec
mov
stc
sub
ret
cmc
stos
mov
sbb
lahf
fldt
in
into
sub
in
mov
shlb
jmp
xor
fwait
popa
mov
mov
push
mov
mov
mov
xchg
call
adcb
xor
xchg
mov
and
addr16
out
sbbl
aas
mov
in
mov
lods
inc
mov
pop
rolb
pushf
lea
int
sbb
int3
pusha
pop
inc
mov
cmp
mov
push
pop
push
push
or
arpl
je
shrb
int3
dec
push
fstps
cmpb
cmc
pop
icebp
add
insb
or
fwait
sbb
ljmp
mov
mov
or
mov
mov
adc
mov
sbb
mov
push
sub
lea
mov
xor
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
jmp
call
mov
dec
mov
push
inc
andb
dec
cmp
dec
jns
jle
ds
pop
xor
cmpsb
loope
sbb
pop
mov
jne
jmp
es
xor
out
or
gs
fwait
mov
scas
push
rcrb
fdivr
nop
icebp
sbb
dec
cmovge
sub
push
data16
shl
pop
adc
push
mov
mov
sbb
imul
and
leave
add
add
shrl
push
inc
or
pop
imul
test
pop
push
aad
ret
or
ljmp
add
aam
outsl
fsubl
loopne
inc
cmpb
or
jl
jl
shll
dec
push
in
ret
mov
add
push
sub
sbb
xor
lods
mov
test
xchg
dec
xchg
pushf
imul
stc
mov
repz
sbb
or
push
sub
dec
push
out
es
loope
into
inc
in
xchg
pop
sbbl
ret
in
pop
mov
std
push
rclb
scas
ljmp
pop
push
mov
push
cmp
imul
and
cld
push
adc
enter
sub
inc
out
test
and
je
lds
jmp
hlt
in
and
addl
lods
xchg
mov
into
je
cmp
cs
xor
xchg
sub
xor
repnz
mov
sti
testl
push
pop
xchg
popf
push
into
pop
lret
sub
out
jg
stc
inc
scas
ja
lret
scas
xor
js
pop
inc
push
mov
dec
pusha
mov
mov
jnp
scas
push
fcompl
fmul
mov
lods
daa
pop
dec
pushf
inc
push
push
icebp
dec
nop
sub
xchg
xor
mov
fbld
stos
jle
mov
jo
and
xchg
in
aam
dec
jae
fcompl
inc
test
adc
in
dec
subl
cmpsb
hlt
adc
sub
outsl
in
mov
fsub
ss
icebp
push
cmp
pop
stos
pop
fnstcw
adc
sbb
in
popf
push
aad
icebp
mov
mov
gs
mov
cmp
fs
out
lock
mov
test
fsubl
addb
pop
test
nop
in
movsb
mov
inc
stc
ds
jo
xchg
out
scas
or
insl
mov
and
mov
popa
cltd
jg
es
call
jmp
fwait
cli
dec
mov
fnstsw
aaa
ss
add
push
sbb
out
and
mov
insl
cltd
in
ss
jae
test
and
jp
shr
out
xchg
inc
fcomps
pop
sbb
xor
or
pop
data16
lret
roll
cmpsb
jmp
leave
jns
lahf
iret
insb
shll
mov
aad
xchg
int3
xchg
movsl
lods
insl
inc
scas
adc
mov
fsubrl
adc
push
scas
xor
jnp
ret
sbb
js
cmp
sub
mov
inc
pop
jnp
xchg
test
cs
rorb
push
test
ss
xchg
roll
shr
push
jecxz
test
cld
fcmovnbe
sar
aas
dec
mov
mov
mov
out
icebp
mov
gs
jmp
dec
pop
ss
rcll
cmp
inc
jle
decl
pop
or
mov
out
outsl
pop
fisttps
sub
bswap
in
add
vmwrite
orb
sbb
mov
mov
int
out
inc
jle
ficoms
xor
mov
mov
mov
mov
xor
mov
xor
sbb
mov
xor
addl
xor
add
sbbl
add
div
mov
jmp
inc
push
sti
sbbl
mov
fs
jle
dec
jns
jle
mov
aas
ror
fst
jg
add
push
lods
sbb
test
and
stos
iret
icebp
loop
cli
inc
ljmp
cmpb
aad
mov
push
inc
daa
mov
jns
scas
mov
and
cld
mov
outsl
adc
mov
inc
and
ret
cmpsb
or
test
and
push
mov
rcll
subl
stos
dec
rcl
jecxz
dec
into
mov
mov
aas
mov
mov
test
xchg
pushl
fisubrs
xchg
push
int3
scas
lret
fsubr
sbb
insl
and
insb
lea
into
sub
or
addr16
xchg
cli
add
sbb
push
into
jnp
or
imul
lock
and
in
cmp
cs
or
push
add
inc
inc
sub
cmp
int3
mov
dec
mov
and
icebp
sub
push
xlat
mov
xor
mov
rclb
push
push
and
nop
mov
xchg
jns
loope
into
dec
movsl
push
jnp
dec
cli
inc
cmp
jl
add
jecxz
data16
popf
test
add
sbb
ljmp
repz
add
xchg
stos
les
pop
inc
call
jl
jo
arpl
jmp
mov
mov
mov
outsl
xchg
fs
fld
ljmp
push
popa
xchg
push
aam
inc
test
cmc
repz
push
pop
mov
xchg
push
mov
mov
cmp
decb
pop
jmp
test
mov
dec
sahf
mov
push
jmp
push
mov
mov
inc
jmp
outsl
ja
imul
mov
push
mov
jbe
sbb
dec
pushf
punpckhwd
xor
sub
fistps
aam
mov
mov
test
out
push
test
sbbl
fs
dec
or
jmp
xchg
ror
cmp
hlt
loop
sub
movsb
repz
pop
push
std
adc
mov
dec
int3
push
xor
jl
shrd
jmp
add
or
push
xor
cmpl
jge
into
pop
mov
jecxz
jnp
lahf
add
cmp
push
add
mov
pop
xchg
dec
sahf
jns
fld
daa
and
inc
xchg
rcrb
dec
add
inc
fldl
inc
das
sbb
push
outsb
clc
and
addl
sbb
int
cmc
lea
imull
jnp
add
xchg
aad
jne
or
enter
ja
loopne
adc
add
or
popa
movl
lcall
lret
out
mov
test
xchg
insb
mov
jmp
ljmp
dec
push
mulps
pop
mov
cmp
imul
dec
icebp
add
xor
testl
jl
pop
or
shll
and
and
mov
xchg
dec
add
mov
rorb
lds
push
stc
mov
stos
or
data16
xlat
jle
sbb
push
and
xor
stos
div
xchg
push
mov
lahf
loop
jge
ror
inc
jl
xchg
sbb
push
mov
sbb
or
inc
inc
ret
sti
shr
std
inc
mov
or
gs
push
imul
rcrl
loop
inc
mov
incb
dec
add
mov
fimuls
xchg
lretw
inc
repz
movl
jmp
xchg
mov
jae
popf
cld
ja
or
out
ret
jle
dec
jns
jle
sbb
or
inc
mov
in
mov
ret
movsl
bnd
push
inc
sbb
xor
inc
fwait
mov
les
or
fcoml
fxch
mov
sub
rorl
cmp
adc
fcompl
sbb
sarb
stos
push
addr16
and
mov
in
pop
lods
sbb
sbb
sub
or
out
mov
xchg
cmp
sub
or
mov
rclb
adc
lret
movsb
or
sbb
sysexit
sarl
std
addr16
iret
jmp
and
pop
lock
aas
mov
out
push
dec
bound
shr
push
jb
cltd
jmp
js
adcl
lock
push
cld
scas
push
adcb
sub
cmpsw
dec
arpl
jl
sub
or
fstpl
mov
pop
sub
mov
in
mov
mov
ret
imul
dec
push
insb
cmp
sbbb
sbb
and
xlat
outsb
setbe
in
cmpsl
imul
jns
add
in
test
add
sub
aam
mov
pop
sub
pop
push
int
rcll
or
fwait
mov
or
xchg
sbb
xchg
mov
xchg
scas
ja
xlat
daa
ret
dec
adc
jb
popf
out
ret
jns
and
int
fdivl
and
jl
loope
mov
into
inc
adc
or
fwait
ss
fcoml
js
jnp
and
lret
repnz
bound
and
jle
xchg
dec
inc
ja
xchg
mov
js
aad
push
lahf
out
fdivs
add
sahf
stos
scas
fdivrl
adc
shll
mov
icebp
loope
dec
xor
pop
jle
mov
mov
in
push
xchg
imul
cmp
cvtps2pd
nop
xchg
aad
pop
add
cld
dec
iret
lahf
or
cmp
hlt
jp
and
sbb
cmc
loope
jge
lods
jb
icebp
lcall
and
outsb
and
ja
call
inc
push
xor
cltd
lret
sbb
jg
cmp
in
fsub
push
dec
pusha
add
insb
add
dec
mov
mov
jbe
pushf
jo
pop
cltd
pop
xor
adc
add
adc
xorl
push
mov
cltd
fsubl
test
or
mov
adc
jecxz
sub
mov
inc
into
or
mov
sahf
out
dec
repnz
addr16
fldl
scas
or
cmp
negb
jg
add
push
push
and
adc
sti
sub
mov
or
mov
popa
pop
jecxz
jbe
fsts
dec
push
faddl
mov
and
fwait
cmpsl
sbb
lds
mov
imul
movsb
ds
xchg
fwait
subl
pop
fldcw
outsb
loope
pop
push
jp
inc
or
dec
popf
repz
fmul
fsubs
inc
mov
decl
cli
in
pop
imul
mov
or
repnz
movsl
xchg
fistpl
mov
inc
popa
xchg
mov
mov
dec
dec
fisttps
mov
mov
adc
loope
nop
cmpsb
gs
pop
and
mov
clc
sub
dec
xchg
and
xrelease
mov
mov
aas
or
clc
jnp
inc
leave
rorl
scas
idivl
mov
mov
movl
movl
cmp
movl
je
movl
lea
addl
mov
xor
mov
not
mov
orl
imul
movl
mov
movl
mov
cmp
je
mov
mov
sub
sub
mov
orl
mov
xor
add
pop
pop
jmp
pop
add
or
add
mov
jle
dec
jns
jle
mov
mov
and
insb
subl
scas
cmp
ljmp
loope
aas
dec
bound
add
hlt
pop
stos
enter
cmp
mov
mov
mov
out
push
xchg
add
into
into
cmp
pusha
daa
adc
xor
push
push
repz
aam
test
imul
mov
in
xchg
pop
sbb
adc
jo
scas
push
icebp
xor
std
jo
clc
mov
push
aas
push
pop
jb
dec
movsb
testb
cmp
and
punpcklwd
sub
jbe
lea
inc
xor
pop
fsubrl
sbbb
andb
mov
adc
inc
aas
sub
inc
bound
in
sub
cwtl
in
mov
dec
orb
mov
int
adc
lret
in
xchg
sub
cmp
push
push
xchg
or
divb
jmp
adc
pop
mul
movsb
test
cs
adcl
out
mov
popf
stc
into
sbb
std
daa
add
sahf
out
fs
mov
imul
lret
imul
lcall
inc
loopne
cmp
lods
and
pop
test
enter
orl
stos
stos
pop
or
std
add
es
pop
xor
inc
and
pop
cmpsb
das
hlt
pop
push
xor
lds
mov
xchg
add
lods
and
popf
mov
clc
das
les
dec
mov
sar
icebp
pop
fucom
dec
ljmp
lods
xchg
adc
cld
in
fidivrs
sbb
sarb
xchg
cmp
mov
push
je
fsubrs
shlb
stos
pop
pop
repnz
cmp
call
loopne
in
mov
and
notl
enter
loopne
jae
in
jbe
in
mov
mov
and
cwtl
addl
sub
push
out
imul
push
lock
pop
push
clc
lea
or
jns
jecxz
inc
fisttpl
xor
fs
jle
faddl
inc
xchg
jge
aam
xchg
jne
js
pop
pop
pop
push
inc
outsl
mov
ret
mov
fmul
adc
mov
loope
test
jg
pop
push
andl
mov
icebp
loop
dec
je
cmp
addr16
jno
int3
test
xor
hlt
mov
cmp
sbb
mov
shll
mov
sbb
push
pop
push
mov
and
dec
es
cmp
inc
mov
out
repnz
stc
out
pop
rolb
add
dec
push
js
mov
into
sub
outsb
aas
inc
js
xor
lret
lods
sbb
xchg
and
out
lods
dec
sbb
or
sub
dec
sub
xor
outsl
into
and
int3
adc
adc
sahf
mov
or
and
jmp
rorb
dec
mov
mov
loop
pop
or
in
fistpl
jmp
jne
fsubr
xchg
jmp
data16
cmp
push
jbe
pop
add
pop
fdiv
sbb
pop
sbb
fbstp
lea
xchg
adc
or
leave
mov
loop
xchg
jmp
imul
test
lret
dec
cmp
sub
fwait
add
inc
push
cmp
cmpl
in
sbb
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
jmp
ret
or
insl
pop
jmp
pop
sbb
or
jle
dec
jns
jle
cwtl
inc
in
lcall
ja
dec
testb
mov
cltd
sbb
aaa
cmp
das
cmp
sub
dec
dec
lcall
xor
push
fdivs
push
shlb
dec
sub
mov
push
mov
mov
and
pop
les
testl
pop
fsubrs
loopne
jnp
insb
daa
addr16
ret
gs
add
cwtl
xchg
ret
mov
pop
bnd
test
out
ds
or
xchg
ror
popa
and
inc
inc
jmp
mov
xchg
mov
dec
jbe
sub
jge
jecxz
mov
push
cwtl
jecxz
inc
iret
sbb
jl
shlb
les
cmp
mov
mov
cwtl
les
test
daa
int3
adc
or
ficoms
sub
pop
notb
into
negl
stc
dec
out
sti
mov
idivb
mov
pop
js
dec
cmp
jg
iret
in
fistpl
sbb
push
lcall
ret
jge
pop
mov
inc
testl
divb
mov
popa
adc
add
test
jg
ja
pop
mov
cmc
fxch
cmp
scas
rorl
or
jb
dec
xchg
dec
ljmp
jnp
aaa
icebp
out
cli
push
rol
cmp
dec
cmp
push
into
pop
cmp
pop
cwtl
std
int
push
jns
cmp
lahf
push
cwtl
inc
sub
xor
shr
enter
ret
cmc
mov
stos
nop
int
arpl
icebp
sarl
jbe
mov
push
sub
sbb
lea
pusha
sti
sbb
ret
scas
push
addr16
xchg
and
rclb
das
jg
mov
and
in
incl
daa
out
and
mov
cmp
sahf
cltd
and
push
xchg
cld
adc
repz
and
lret
fists
sbb
mull
mov
shll
inc
cmpsl
pop
mov
pop
test
ja
adcl
pop
outsw
aad
xor
push
xchg
jne
test
les
notl
sub
cli
nop
es
stos
bound
hlt
fisubrl
or
or
cwtl
test
mov
pop
jp
jb
leave
jge
mov
lahf
sbb
jecxz
push
sbb
call
or
pop
imul
xchg
jno
inc
sbb
mov
mov
mov
in
test
dec
dec
std
insl
inc
popa
adc
or
cmp
mov
int3
sub
and
mov
fsubs
push
stos
dec
leave
mov
in
mov
xchg
push
jo
xchg
pop
decl
mov
test
adc
cmp
outsl
jmp
inc
loope
sbb
cmp
push
aad
jg
dec
mov
mulb
and
lds
insb
pushf
or
jo
lock
ljmp
jnp
dec
int
mov
scas
xchg
rcrl
mov
repz
stos
xor
inc
and
add
adc
addr16
sbb
sbb
dec
test
push
dec
insb
sahf
lret
push
mov
scas
and
popa
inc
lods
xchg
lods
push
insb
cmp
or
or
imul
test
mov
cltd
jle
dec
les
pop
arpl
mov
jo
lret
jne
mov
add
sbb
mov
xorl
jmp
mov
mov
mov
mov
xor
mov
add
jmp
int
adc
push
pop
dec
xchg
leave
mulb
mov
jle
dec
jns
jle
fmulp
popa
xchg
mov
push
fs
lret
adc
scas
mov
lret
mov
inc
repz
int
aaa
jecxz
xor
or
and
xchg
orl
push
dec
xor
out
pushf
jge
iret
and
mov
mov
add
or
ds
jp
mov
push
icebp
mov
jae
in
ret
fdivs
lahf
outsb
in
add
stos
inc
int
leave
loopne
ljmp
lods
mov
dec
movsb
or
inc
mov
dec
dec
mov
inc
popf
inc
outsb
xchg
ret
or
pop
lahf
popa
adc
test
ucomiss
fmuls
jmp
add
daa
push
dec
dec
ds
sub
xchg
nop
pop
cmp
push
lock
stc
push
shlb
and
loop
sub
nop
fscale
lds
xor
mov
stos
mov
push
mov
je
pusha
inc
push
aad
rcrb
sbb
rcrb
pop
inc
mov
xchg
lock
and
repz
dec
dec
rcr
ret
fistpll
gs
jp
inc
and
cmpl
sbb
push
inc
mov
dec
adc
sbb
push
jae
out
movsb
aaa
inc
jb
aam
xchg
push
jo
sub
jecxz
insl
or
or
lahf
dec
int
js
cmp
rcr
mov
pop
sub
push
filds
popf
mul
ret
movsl
pushf
rcrb
push
out
shrb
es
rcrl
push
roll
imul
push
seto
mov
out
aam
js
cmp
hlt
sbb
mov
cmp
adc
idivb
jecxz
out
das
mov
insl
xchg
lahf
push
sbb
xor
push
cmp
ds
pop
mov
aaa
fnstsw
or
imul
popa
lret
add
jae
pop
aad
mov
call
in
sbb
xchg
cwtl
pop
or
int3
shlb
enter
pop
pop
or
xchg
vpmulhw
and
movsl
push
or
jns
test
mov
or
int
or
iret
xchg
mov
push
addl
sub
add
bound
mov
aaa
imull
lcall
pushf
fisttps
inc
retw
fbld
in
fs
shll
pop
adc
mov
mov
xchg
sub
dec
add
sbb
shll
sub
sbbl
les
mov
sbb
lods
scas
repz
mov
add
dec
xchg
sub
mov
or
mov
scas
ret
or
adc
int
mov
enter
scas
mov
addb
xor
pop
pop
fisubrs
push
cmp
push
and
sahf
mov
dec
shrl
je
sub
fsubrs
adc
jg
jno
pop
dec
int
push
xchg
xor
lret
inc
mov
in
sahf
inc
orb
loope
out
in
mov
xchg
add
add
in
clc
xor
lret
cwtl
pop
push
ret
dec
push
sti
fmul
jmp
cltd
cmc
movsl
xor
jno
rcl
push
mov
into
push
pop
call
aaa
xor
xor
mov
mov
sar
add
jb
ret
push
pop
iret
xchg
insb
or
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
jmp
fadd
test
rorb
insl
pop
jl
ret
movsl
mov
jns
jle
inc
aam
dec
pushf
xchg
mov
add
imul
sar
jno
jbe
add
imul
mov
and
aad
enter
daa
mov
jne
leave
cmp
inc
push
push
and
fimuls
pop
into
pushf
ret
lcall
and
mov
push
jo
pusha
scas
push
mov
cmpsl
into
inc
in
clc
gs
add
fs
notl
push
adc
test
imul
sub
sub
les
idivl
pop
mov
icebp
sbb
loop
out
sub
dec
cmc
sub
cli
inc
fwait
dec
pop
sub
push
sahf
test
xchg
mov
jg
push
test
xor
jno
inc
xor
daa
xor
scas
push
mov
aas
adc
xchg
pop
jno
pop
jmp
rolb
fsubr
push
sub
sbb
fstps
jp
mov
cmpsb
jecxz
outsb
lods
ljmp
xlat
inc
test
mov
mov
rcll
fistps
add
mov
sahf
mov
ss
test
imul
mov
pop
jb
into
rorl
sbb
sub
cltd
popf
adc
repz
int
int3
loopne
push
movsl
cmp
pop
cmc
xchg
lods
scas
adc
xor
jg
sub
pop
inc
insb
sub
xchg
les
lods
push
sub
and
push
lock
dec
rcll
js
stos
jg
xchg
and
int3
js
daa
call
dec
sub
in
mov
aam
jbe
aas
push
nop
loope
mov
push
leave
sbb
push
aas
inc
mov
push
push
mov
add
mov
xchg
incl
jg
jne
sub
iret
xor
push
fsubrs
jnp
xchg
mov
xor
fcmove
in
mov
shr
imul
aad
aad
pop
std
cmp
lret
mov
fistpll
pop
leave
push
rorl
movb
push
sub
cmp
stos
pop
icebp
aad
lds
ljmp
repz
cmp
repnz
out
xchg
add
cmp
jo
adc
xchg
movsl
mov
repz
stos
push
jnp
jg
nop
iret
jo
test
bound
xchg
add
and
iret
xor
xor
pop
cvtdq2ps
sbb
cld
inc
xchg
jge
fdivs
sub
mov
fcmovb
xchg
lret
jne
jae
sarl
in
jle
mov
pop
sub
sub
pop
pop
sbb
add
xchg
xchg
mov
mov
adc
lods
mov
or
das
out
in
inc
or
cmc
sbb
or
shl
push
stc
mov
dec
pop
out
mov
mov
aam
dec
add
mov
inc
inc
rol
sub
jecxz
sub
outsl
xor
out
pop
pop
cld
sub
cmp
push
mov
pop
push
push
xor
inc
mov
mov
xchg
rcll
fsubrl
inc
fimull
sarb
pop
bound
sbbb
mov
fcom
jp
fistps
sti
jle
andps
mov
jae
sub
in
lret
out
sub
pop
mov
jecxz
int
mov
ljmp
daa
inc
xor
fcmovu
das
incb
xchg
sub
dec
imul
lret
ret
add
xchg
xor
negl
cmp
sbb
nop
jl
and
inc
xor
out
cmpsl
sbb
or
into
leave
stos
lds
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
movl
cmpl
je
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movzbl
sbb
mov
sbbl
push
xor
or
sbb
push
jmp
jmp
lahf
xchg
mov
sbb
mov
fidivrs
loope
jle
addr16
int
sub
mov
iret
xchg
jge
lds
adcb
hlt
push
iret
enter
mov
xor
popa
push
xchg
out
outsl
mov
xchg
sub
mov
fists
jae
scas
dec
xor
outsb
bound
jae
outsb
sbb
dec
unpcklps
adc
rorb
insb
cmp
pop
cmp
lds
pop
and
and
xor
ja
jmp
lret
int3
in
sub
and
dec
rorb
pop
sub
xor
icebp
in
jmp
lds
movsb
mov
mov
std
jmp
stos
or
pop
sbb
lea
mov
gs
and
fcom
loope
and
out
sbb
outsb
and
inc
cmpsb
xchg
xchg
inc
in
pushw
pop
cs
es
pop
jl
sarb
fsubl
xor
jae
in
jge
into
sarb
mov
push
pusha
or
fiadds
mov
dec
or
cmp
mov
xor
test
or
fiadds
incl
dec
xchg
xchg
and
adc
sti
shlb
inc
out
pop
pop
or
insb
xchg
movsl
adc
out
xchg
add
xchg
das
stos
xchg
xchg
push
out
push
xor
notb
dec
push
sub
cli
add
test
jno
cs
and
push
outsl
mov
mov
adc
sti
pop
icebp
push
mov
mov
pushl
sbb
pop
jl
jns
cld
xchg
mov
fidivrs
nop
lret
icebp
clc
test
pop
aaa
in
enter
addr16
les
int
dec
aas
and
inc
outsb
stos
sbb
loop
jne
pop
enter
pop
data16
mov
insb
xor
or
inc
hlt
jg
sub
pusha
jmp
jecxz
sbb
cmp
mov
cli
into
lea
pop
ret
pop
cld
cmp
xchg
push
addr16
or
sarl
dec
enter
xor
push
xchg
mov
sbb
add
movb
add
or
mov
jg
loopne
push
or
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
xor
or
mov
add
push
sub
mov
xor
jmp
push
ja
push
aaa
push
jo
mov
pop
subl
jle
js
jle
call
retw
hlt
push
pop
aas
push
and
popa
fwait
aas
cmc
lret
pop
loope
imul
xorb
xor
data16
cmp
push
ja
fcomip
es
pop
loop
push
loop
inc
int
ret
adc
jb
mov
mov
lahf
les
insl
addr16
cmp
repz
mulb
sub
xchg
mov
mov
lahf
push
lahf
insl
stos
push
enter
xchg
mov
popa
or
aam
scas
pop
sahf
xlat
xor
popa
insb
pcmpeqd
mov
je
jge
push
jbe
sub
call
in
or
xchg
int
stos
fisubrl
mov
inc
push
js
fnstcw
add
es
or
cmp
adc
jle
sub
or
pop
je
sub
and
leave
stos
fwait
in
mov
je
jb
mov
mov
fwait
rol
adc
clc
jmp
mov
ljmp
pop
or
jb
pop
mov
test
outsb
not
sbb
repz
icebp
jne
shll
jmp
push
inc
shlb
pop
inc
push
loopne
mov
test
not
decl
loopne
mov
push
add
sbb
dec
std
or
fst
lea
mov
mov
sub
sbb
mov
lret
inc
ja
pop
dec
test
shll
mov
in
xor
or
lret
aad
popf
movsl
outsl
aam
mov
addl
mov
or
mov
fists
data16
stos
jle
ret
lods
xor
xchg
int
xchg
xor
in
xchg
xor
add
push
dec
pushl
sub
mov
dec
dec
ds
adc
iret
cmp
or
out
into
hlt
test
das
cmp
inc
pop
mov
test
and
mov
into
sub
adc
mov
add
mov
movzbl
sbb
adc
xchg
dec
sub
lret
push
je
mov
scas
push
xor
jmp
jmp
mov
jg
icebp
pushf
sub
inc
scas
push
aaa
stc
fwait
dec
cltd
scas
sbb
inc
jbe
fstpl
xchg
cmc
pop
mov
xor
notl
movl
movl
add
jmp
cmp
jmp
adc
sbb
xchg
pop
adc
sti
push
jo
rcr
jle
loope
jle
push
sub
mov
mov
les
icebp
cmp
mov
mov
neg
outsb
sbb
divl
pop
xchg
or
cmp
sub
mov
aad
popa
out
rcl
xorl
ljmp
mov
cld
dec
mov
stc
sbb
popf
xchg
xchg
lcall
call
add
cmp
xor
dec
jno
sbb
int3
push
scas
test
pop
stc
mov
add
push
pusha
in
mov
adc
hlt
inc
or
cwtl
add
lock
ret
adc
xor
das
inc
mov
lret
cmp
sbb
sub
sbb
add
or
adc
repnz
dec
cltd
cmp
sahf
cmpsl
sti
dec
sbb
sbb
lret
hlt
imul
shll
mov
mov
xchg
sbb
jne
mov
rolb
ljmp
sbb
adc
mov
xor
mov
mov
xchg
sub
sahf
adc
in
mov
push
repnz
push
lcall
jmp
inc
lock
pop
pop
add
jno
push
sahf
jbe
inc
mov
xchg
mov
inc
roll
or
mov
xor
mov
add
sbb
mov
sbb
lock
adc
pop
xchg
test
pop
sub
jb
adc
and
cmp
jg
loopne
xor
xor
sub
test
push
imul
cmp
xchg
fwait
jnp
imul
mov
or
insl
arpl
popa
test
into
jbe
sub
sbb
loop
and
xlat
outsb
mov
gs
adc
pop
mov
pop
inc
dec
int3
into
popa
js
js
add
shrl
shll
inc
sub
mov
movb
mov
push
jle
sub
inc
xor
jecxz
test
mov
dec
outsb
add
lock
jb
add
sti
jmp
inc
push
inc
pop
push
and
xor
fidivl
xchg
test
mov
dec
popf
jl
inc
mov
mov
pop
shll
xchg
cmp
jno
negl
test
add
mov
mov
movl
mov
mov
movl
mov
movl
mov
movl
jmp
movl
cmp
movl
jne
jmp
call
je
fnsave
inc
leave
sarl
in
jle
js
jle
sub
pop
out
sti
jno
dec
mov
loopne
jp
in
jb
insb
add
inc
dec
enter
jmp
pop
cltd
jb
pop
jbe
arpl
adc
adc
xchg
jle
dec
pop
out
mov
scas
jo
fstpl
push
mov
sar
jle
arpl
jle
inc
sbb
pushf
mov
adc
aaa
mov
jle
in
and
popf
imul
inc
sbb
dec
mov
lcall
dec
ljmp
jge
sbbl
inc
cmpsb
jecxz
pop
mov
daa
mov
pop
pop
aas
in
jl
and
dec
arpl
dec
ret
mov
das
lock
sbb
xor
sahf
shl
xor
daa
lret
inc
push
test
repz
outsb
incl
push
outsl
notb
and
popf
js
cs
push
test
nop
addr16
dec
mov
sub
xchg
scas
inc
arpl
imul
in
or
mov
cli
imul
jo
sbbl
leave
jno
jne
jp
and
pop
stos
jnp
ja
mov
mov
adc
movsl
add
out
lods
ret
aad
mov
fsubs
adc
insb
push
lcall
pop
sbb
in
loop
leave
or
mov
push
mov
out
dec
outsl
outsl
lcall
jnp
stos
call
call
addr16
cmp
jo
rcrl
or
nop
or
sub
jp
xor
sub
es
jne
and
mov
sbb
inc
mov
jno
rol
jge
xor
xor
pushf
sahf
out
in
ljmp
pop
push
jl
mov
mov
jbe
dec
mov
ror
fs
or
or
push
imul
mov
rorl
inc
test
int
pop
jecxz
negb
xchg
out
je
lods
loopne
pop
negb
add
scas
je
sti
fs
mov
inc
lahf
fsubl
push
inc
mov
dec
fldl
loopne
cli
aad
or
movsl
mov
sub
mov
clc
mov
mov
pop
andl
mov
orl
sub
push
mov
or
mov
addl
add
subl
push
decl
call
movl
incl
cmpl
movl
jb
jmp
cmp
jne
movl
mov
mov
mov
mov
mov
jmp
mov
xchg
jno
jno
out
fisttpl
das
loopne
jle
js
jle
mov
fwait
out
lods
xchg
lock
movsl
icebp
lods
icebp
js
leave
iret
add
xchg
rcll
mov
icebp
or
out
je
inc
pusha
sub
scas
ja
push
and
push
dec
shr
push
dec
sub
int
fisttps
in
xchg
ljmp
and
add
out
mov
fs
adc
inc
jl
repnz
dec
adc
int
xor
cmp
cs
js
ja
sub
leave
aam
mov
dec
and
sbb
cmp
and
xor
mov
out
leave
dec
mov
rorl
mov
jge
add
adc
stos
push
sbb
inc
mov
test
jnp
dec
sub
imul
ret
sub
jb
jle
notb
jmp
scas
stos
mov
js
fldl
mov
mov
mov
and
std
mov
push
or
nop
mov
adc
add
sbb
xchg
bound
adc
das
in
movsb
pop
jge
cmp
push
ja
outsb
pop
xchg
mov
les
sbb
push
adc
or
jle
lret
enter
outsl
repz
adc
push
fsubrl
xchg
mov
fwait
call
and
and
xchg
jecxz
out
into
sub
adc
dec
xchg
cmp
sub
push
xor
out
ret
xor
out
ljmp
imul
adc
shlb
mov
adc
xor
pop
fadds
inc
clc
rcll
lods
jnp
mov
cmp
cmp
lock
push
cli
mov
cmc
repnz
add
sbb
inc
sbb
pop
in
cmpsl
mov
push
push
scas
xor
cwtl
inc
jl
rclb
xchg
dec
fisubrl
popa
das
imul
push
fs
sti
cltd
inc
mov
jg
sbb
cmp
pop
push
cmp
jecxz
fistpll
out
enter
mov
adc
dec
adc
cmp
in
and
xor
lea
dec
or
cli
insl
xor
push
adc
or
repnz
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jne
mov
pop
xor
pop
add
pop
leave
ret
push
mov
sub
push
adc
mov
mov
andl
jmp
jns
out
std
jge
or
clc
pop
mov
jle
jo
jle
dec
shrb
xor
les
xchg
pusha
jmp
inc
pop
xchg
fcoml
icebp
cmp
push
cli
xchg
push
cwtl
mov
fstl
or
insl
cmp
push
push
orl
in
jo
es
fsubrl
jbe
xchg
jg
sbb
and
es
jns
mov
ret
mov
ret
ret
sub
inc
xor
pop
xchg
push
add
movsb
inc
and
inc
lods
loope
push
xchg
dec
out
fsub
sahf
aam
lock
mov
sub
fcomps
add
xchg
and
pop
js
jmp
push
cld
fldl
std
mov
jg
gs
jnp
pmulhuw
loope
shrd
pop
mov
xor
inc
fs
mov
call
loope
pop
std
sub
xor
pop
test
pop
leave
rorb
xor
clc
mov
adc
mov
push
fidivs
add
dec
pop
loopne
ror
nop
inc
push
mov
xchg
mov
jecxz
mov
leave
daa
add
mov
test
addl
push
imul
xor
popf
lods
cmp
mov
pop
sahf
push
stos
in
cmp
ror
or
sbb
sbb
jae
out
popa
sub
mov
sbb
sub
test
in
addr16
andb
or
fcomps
inc
cmp
sbb
xchg
loope
mov
fidivrl
dec
sub
cmp
and
bnd
fcoml
test
pop
mov
xorb
xor
cmpsl
jns
addr16
out
mov
and
dec
sub
pushf
inc
in
into
in
push
mov
loop
in
call
xor
jo
pop
imul
cmp
dec
ficoms
and
cmp
icebp
dec
in
dec
mov
inc
mov
ud0
es
mov
jb
inc
test
cs
cmp
test
adcl
sub
orl
aas
out
enter
insb
lret
mov
inc
xor
test
movsl
xchg
add
aad
dec
popf
push
lods
xchg
inc
xchg
pusha
jnp
push
xor
ret
add
xchg
das
jb
xchg
aad
cmp
add
mov
ss
pop
shrl
mov
arpl
xchg
mov
cld
inc
sbb
jnp
fwait
adc
adc
inc
xchg
xchg
mov
dec
inc
mov
fnsave
repnz
lahf
cmp
cmp
mov
shlb
aam
insb
cmp
test
clc
cmp
arpl
dec
and
sbb
lods
pop
cmp
mov
rcrb
lcall
dec
inc
push
stos
push
insb
mov
push
adc
ds
pop
and
jle
clc
fwait
dec
test
mov
cmc
jae
gs
inc
test
jns
lds
sub
popf
jo
or
inc
out
inc
addr16
es
push
mov
cmp
test
inc
stc
sbb
shr
or
cmp
add
pop
movsb
in
jb
add
int
les
imul
and
xor
movsb
and
rcrb
adc
pop
adc
sub
iret
xchg
add
movl
xor
pop
fisttps
mov
les
scas
sar
and
sub
add
inc
dec
mov
pop
fucom
mov
out
test
das
shr
std
insb
push
mov
push
sub
inc
or
add
cmp
movl
xor
movl
movzwl
add
mov
mov
jmp
jmp
or
std
fdiv
sbb
in
mov
and
jo
jle
jmp
pop
mov
jmp
jl
ret
inc
sbb
add
mov
push
mov
inc
xchg
xchg
dec
xor
mov
and
out
dec
pusha
cmpsl
add
lcall
lods
jecxz
fld
cli
jmp
bound
ffree
xor
sbb
pop
dec
adc
cmp
push
mov
sub
inc
je
or
test
and
jle
imul
mov
cld
test
fldl
bound
lock
cmp
mov
jns
xchg
fstpt
xchg
xchg
sarb
jo
addr16
ret
into
inc
rcll
sub
cmp
inc
dec
inc
xor
clc
lods
ret
dec
sub
mov
pop
or
fcom
iret
lret
dec
sahf
std
fildl
ror
or
aam
jno,pt
movsb
mov
andb
xchg
out
jbe
fidivrs
insl
sbb
lock
sarb
sbb
imul
jg
ljmp
test
test
and
pop
lods
stos
das
loop
dec
inc
dec
jmp
ficomps
int
pusha
and
std
push
xlat
xor
fcoms
call
ljmp
xchg
cmp
ret
mov
popf
xorl
fs
or
lods
mov
sbb
shlb
dec
ljmp
popf
push
sti
fcmovb
enter
cmp
lods
add
loop
stos
adc
xor
inc
cmp
in
sub
cmc
sbb
iret
leave
mov
imull
sbb
cmpsl
adc
and
in
fdivrp
sbb
cmp
and
rclb
push
clc
cwtl
rolb
sbb
mov
aaa
cs
iret
testl
inc
sub
mov
pop
mov
lock
into
scas
es
inc
sbb
aas
mov
fisubrl
and
dec
out
call
ficomps
jae
mov
xor
cmp
aam
loope
rorl
pop
mov
fistpll
push
push
xchg
popa
subl
stos
or
jo
cmpsb
stc
push
and
stc
pop
and
daa
and
xor
mov
mov
ret
lret
int3
and
stos
sahf
fs
jns
addb
shl
scas
scas
cmpb
xchg
stos
xor
icebp
dec
dec
aam
imul
mov
inc
cmp
lds
xchg
push
out
inc
mov
xchg
repnz
call
sahf
sbb
pop
adc
jp
out
shll
jecxz
cmp
or
push
scas
aad
mov
imul
add
jns
aas
jns
cmp
cmc
or
pop
rclb
scas
hlt
xchg
stc
mov
add
stos
mov
cli
xor
xorb
fisubl
clc
outsb
push
or
mov
das
xor
std
inc
xchg
fimull
jns
or
cmp
add
lds
jno
mov
in
int
subl
xor
js
sub
or
pop
addb
jnp
pusha
enter
cmpsb
jae
cmp
jae
sbb
movsb
add
and
xchg
dec
mul
add
sub
stos
fisubs
shr
jl
repnz
or
jne
nop
mov
testl
fsubl
cmp
push
lods
lret
out
cmpsb
stos
cmpsl
fdivs
or
pop
into
adc
jcxz
in
jmp
addl
mov
xchg
and
pop
mov
in
sub
add
mov
or
jnp
mov
sub
mov
mov
or
xor
xor
add
xor
mov
add
mov
inc
mov
xor
add
mov
movl
mov
mov
sub
add
jmp
xor
xchg
mov
stos
cs
push
cmp
sbb
jns
jle
add
movsl
movsb
mov
imul
pop
cmp
add
jae
inc
int
scas
dec
pop
bound
shll
adc
adc
sub
ds
mov
mov
cmp
out
cmp
push
mov
imul
loopne
inc
xor
dec
imul
add
dec
add
fdivl
adc
lock
cmpsb
sbbl
les
pop
xchg
sarb
fisubrs
push
adc
add
andb
repnz
xchg
insb
stc
xlat
mov
dec
movsb
sub
enter
decl
jne
jb
push
xor
in
xor
jmp
ret
imul
mov
inc
ljmp
push
xchg
daa
andb
movsl
cmp
and
xor
stos
inc
mov
fcoms
ror
daa
xchg
add
daa
lahf
ljmp
pop
or
clc
jae
cmp
mov
es
inc
lret
and
into
aad
ss
sub
les
and
add
repz
push
test
sarl
or
mov
orl
adc
popa
push
pop
dec
in
jecxz
je
rol
dec
cld
mov
or
jg
push
jg
sarb
jne
xchg
mov
inc
dec
or
lods
jp
scas
int3
sarb
jb
out
or
mov
mov
call
sbb
sbb
sub
divl
mov
dec
out
insl
dec
repnz
bound
fnstenv
mov
shrb
popf
inc
mov
sbb
mov
andl
add
loope
push
mov
fiadds
mov
push
aaa
or
mov
testb
sbb
push
lock
mov
jl
pop
xor
jecxz
loope
int
sub
repnz
mov
fwait
push
adc
mov
sub
lcall
enter
in
mov
pop
sbb
sub
fldenv
mov
ja
fbld
push
pop
cmc
test
sahf
push
adc
xchg
xor
aas
insl
fs
fldt
fcmovnb
sub
repnz
and
shlb
sbb
and
dec
scas
pop
jmp
fadds
clc
jno
xchg
ret
push
xor
sub
adc
stos
outsb
add
xlat
inc
mov
inc
stc
xchg
or
xchg
mov
ljmp
mov
out
push
jno
xchg
out
dec
cltd
fwait
pushf
pop
jp
shrb
in
mov
es
mov
push
sbb
push
cmp
les
addr16
lret
pinsrw
cmpsl
pop
push
cli
in
shrl
stos
mov
cmpsb
sti
inc
and
insb
push
inc
and
sti
cmc
add
out
std
mov
mov
out
pop
fdivrs
lret
jb
cmp
add
cwtl
aam
fcmovnb
cltd
mov
sub
cwtl
lret
cld
sub
inc
clc
lahf
cmpsb
out
pop
xor
lods
push
ret
jo
int
pop
xchg
or
adc
sub
pop
xchg
ficomps
fisttps
adc
stos
xchg
cwtl
mov
sbb
lcall
ja
stos
sub
xor
addr16
shll
jae
shll
in
lret
fs
xchg
or
loope
jb
cmc
sbb
pop
movsl
cli
sbb
insl
rcrl
xchg
adc
add
aad
cmp
popa
lds
int3
xor
std
dec
mov
fdivrs
test
add
add
in
cld
popf
popa
imul
push
flds
idivb
jo
jle
cli
mov
adc
insb
ret
in
push
xchg
mov
call
andb
sbb
enter
popa
ficoml
and
xchg
sub
mov
xor
pop
fildll
lock
iret
fisttpl
push
lcall
ds
add
repnz
sub
addr16
and
lds
or
pop
inc
cmp
pusha
push
ds
stos
clc
push
jae
add
sub
push
lahf
or
popf
sub
ljmp
imul
xchg
mov
cmp
je
xor
das
arpl
lahf
sahf
or
jmp
jmp
fists
nop
cmpsl
std
sbb
mov
mov
inc
pushf
pop
mov
insb
or
dec
pop
mov
fcoms
inc
int
or
jae
iret
stc
cmc
lahf
loopne
mov
mov
mov
xchg
mov
into
cld
and
inc
dec
inc
sbb
mov
mov
fisubl
lods
sarl
jp
cli
sub
pop
xchg
jae
pop
fdivr
push
sbb
adc
mov
fstpt
and
cmpsl
aad
jbe
add
repz
mov
enter
test
cmc
add
popf
inc
jmp
rclb
add
mov
in
pop
std
cmpsb
and
frstor
sbb
cmp
mov
cwtl
xor
inc
cmc
imul
jl
mov
mov
jg
or
and
jb
in
lock
mov
sarb
pop
movsb
pusha
jg
lds
cmp
and
sbb
bound
mov
es
fdivs
jmp
push
mov
stos
inc
cmpsl
mov
sub
jecxz
test
jp
cmp
lcall
xchg
lods
sbb
push
and
jo
ficoms
push
xor
andl
gs
rclb
mov
mov
sub
mov
cmp
test
icebp
shlb
repnz
mov
cmpl
std
outsl
or
nop
mov
in
mov
pusha
adc
gs
adc
sbb
mov
sbb
or
idivl
fstps
xlat
sbb
lods
and
data16
in
add
ret
arpl
dec
nop
mov
jo
es
mov
jne
lock
stos
lods
insb
inc
nop
jns
gs
cld
test
or
in
jp
xchg
jbe
mov
into
jl
mov
mov
bound
jnp
cmpsb
insl
daa
pop
shlb
std
or
aam
cli
cmpsb
inc
mov
push
sbb
mov
cmp
cmp
dec
ja
mov
sub
loope
cld
and
xor
icebp
mov
jb
dec
jno
stos
push
test
mov
and
lea
inc
add
mov
jmp
add
jmp
xchg
jae
or
add
xor
das
xor
xchg
daa
fcmovb
mov
ror
jg
inc
scas
cwtl
clc
cmp
dec
mov
add
jne
addr16
lret
mov
in
es
dec
fists
clc
push
das
loopne
dec
xchg
push
es
jbe
and
popa
imul
dec
arpl
scas
sbb
fmul
std
es
lcall
adc
adc
dec
cmp
in
jge
push
loope
outsb
sbbl
push
pop
mov
repnz
mov
xchg
adc
sti
xor
mov
addr16
xchg
bound
or
cmpsb
add
aaa
add
faddp
inc
aam
test
test
int3
cmp
cmp
movl
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
pushl
push
call
cmpl
jb
or
movl
sbb
mov
xor
sub
mov
orl
add
cmp
je
movl
push
jmp
xorl
mov
add
mov
addl
sub
movl
mov
andl
xor
addl
add
movl
cmp
movl
jb
mov
mov
sub
xor
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
inc
xor
sbb
add
or
add
imul
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
and
mov
sub
cmp
movl
ja
xor
add
add
mov
orl
jmp
xchg
dec
in
in
test
out
lcall
jle
jns
jle
aaa
pop
xchg
popa
ss
or
mov
sub
imull
push
fisttps
fidivrs
xchg
stos
mull
in
mov
jl
sbb
sbbl
ret
mov
pop
pushf
pop
ds
push
xchg
lcall
cmp
fists
add
in
into
sub
out
mov
ss
jg
and
movsl
inc
xor
dec
test
scas
cmp
in
fdivr
stc
pop
ret
dec
xor
push
mov
mov
and
cmpl
xor
cwtl
gs
inc
cmp
inc
mov
mov
mov
insl
loope
mov
jl
inc
adc
and
daa
add
adc
sarl
mov
dec
out
out
leave
jae
rcl
add
loop
lea
popl
lea
sbb
sub
push
and
addr16
aaa
xchg
mov
in
inc
addr16
subb
fwait
test
and
imul
out
pushf
lahf
adc
push
push
je
xchg
divb
lods
lret
test
and
test
sarb
dec
xchg
hlt
jp
loop
sbbl
add
jb
decb
in
xlat
and
ss
or
aad
lret
fsubl
sbb
outsb
test
fcmovnbe
les
sahf
shll
leave
cs
subl
sbb
ficoms
shrb
int
fcomp
je
addr16
popa
jbe
pop
mov
mov
xchg
ja
es
pop
cld
pop
call
cmc
outsb
hlt
jbe
cli
loopne
jae
xchg
push
xor
lahf
scas
enter
icebp
pusha
adc
jmp
jb
sub
fdivrp
lret
pop
out
pop
mov
and
mov
mov
xor
aam
movsb
and
cltd
sarb
and
fsts
sbb
mov
je
sub
aaa
mov
nop
mov
and
in
xor
lock
jne
sub
repnz
jmp
adc
call
sub
lahf
inc
repz
or
inc
bound
pop
push
cmp
jne
mov
lcall
nop
aam
mov
les
fdivr
fcmovbe
test
pop
rolb
dec
idivb
inc
outsl
lahf
mov
test
pop
sbb
mov
adc
imul
out
xor
sbb
rcrb
scas
pop
ret
ret
int3
push
lods
dec
or
movsb
pop
add
dec
lret
cmp
rcll
frstor
imul
loope
xor
jmp
xchg
sarb
repz
inc
flds
lods
xchg
sbb
roll
dec
cmp
das
orb
mov
popl
roll
fldt
mov
sbb
stos
aaa
jmp
rolb
mov
fsub
pop
cwtl
fidivrl
and
je
leave
cmpsb
pop
sbb
add
stc
push
jne
or
add
pop
add
push
adc
out
pushl
loop
shl
adc
leave
fdivs
in
les
addr16
mov
mov
jae
push
pop
fisubs
lahf
push
push
repz
adc
and
inc
and
pop
outsb
push
jmp
add
xor
mov
rep
sahf
sti
mov
mov
pop
push
call
repz
or
xor
in
cmp
aaa
xorl
scas
cltd
je
loope
inc
lret
push
dec
repnz
pop
lds
dec
and
sahf
lods
adc
and
xor
adcl
add
jmp
mov
subl
mov
mov
sub
mov
xor
xor
or
add
adc
jmp
test
jne
xchg
in
in
dec
and
cld
jle
jo
jle
pushf
les
imulb
arpl
aas
mov
jp
or
or
sub
rcrl
mov
lea
ret
mov
mov
pop
lods
cmp
mov
stos
mov
sub
add
lock
jg
leave
sub
xor
nop
icebp
jecxz
pop
insb
js
inc
jo
pop
add
pop
xor
loope
inc
pusha
out
pop
repnz
pop
cmc
arpl
stos
insl
cmovg
jmp
xchg
adc
xchg
and
fsub
cwtl
add
out
imul
push
mov
or
outsb
popa
xor
lcall
stos
es
or
add
test
cmc
stos
lods
pop
and
lock
jge
and
cmpsl
dec
int3
je
jge
sub
xor
enter
push
or
dec
pop
imul
bndldx
bound
vdivpd
add
jae
out
scas
ds
inc
icebp
or
mov
insb
push
sarl
xor
dec
shrb
jle
mov
mov
call
arpl
mov
lret
pop
clc
cmc
mov
jo
out
xchg
inc
pop
lock
or
lods
xchg
inc
rcl
outsl
sbb
push
das
test
in
int
jb
aas
xchg
xlat
aad
lea
or
mov
push
and
mov
data16
dec
lods
das
orb
ja
adc
lea
ss
pushf
stos
out
push
je
call
js
decl
in
lds
cmp
inc
sub
pop
xor
loope
popa
repz
inc
dec
cmp
movsb
and
nop
jecxz
dec
je
and
and
sub
aas
jg
sub
sahf
dec
push
int3
fsubrl
aaa
sbb
add
loop
cld
jge
pop
shl
les
lcall
sahf
xchg
fwait
ds
cwtl
outsb
dec
mov
loopne
mov
mov
in
or
cmp
sbb
out
push
mov
or
lods
popf
mov
bnd
adc
mov
lahf
cltd
das
cmpsb
mov
adc
fucomp
cmpsl
pop
lret
rcrl
sarb
mov
mov
cmp
aad
addl
or
jbe
or
in
xchg
sahf
out
inc
sar
cmp
push
es
testb
pop
inc
jp
pop
aad
fwait
in
ja
call
mov
andl
mov
or
sub
xor
pop
outsl
rcll
add
and
pop
xchg
inc
cmp
pop
and
daa
cmpsl
sarb
test
int
xchg
ds
cld
xchg
je
mov
xchg
mov
xlat
das
div
adc
jle
jecxz
fstl
sbb
call
in
popa
or
mov
xchg
in
lds
and
and
in
push
lock
push
cld
nop
cmpsb
aaa
aas
cmp
xchg
and
sbb
push
lret
dec
pop
fisubl
stos
mov
cmc
mov
adc
pop
in
ret
mov
pop
adcb
scas
pop
addr16
fnstcw
mov
xlat
cli
imul
test
aam
add
cwtl
push
rorb
mov
lcall
je
adc
mov
repz
cmc
cmp
enter
xor
cltd
xchg
aaa
mov
cmpsb
xchg
repnz
call
cmp
xor
popf
insb
lds
jecxz
incb
xor
ficompl
jle
push
xchg
lret
out
data16
fistpll
roll
imul
xor
mov
mov
xorl
sub
movl
cmp
movl
ja
mov
mov
movl
jmp
sub
mov
add
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
call
jmp
xor
xor
xor
add
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
push
call
cmpl
jb
add
imul
mov
mov
jmp
aas
andl
push
repnz
pusha
add
jmp
idiv
jle
jo
jle
imul
mov
fdivl
jle
mov
imul
idiv
xor
xor
mov
or
pop
subb
loopne
int3
mov
aas
mov
cmpl
hlt
mov
push
or
fs
pusha
cltd
push
mov
xchg
sub
pop
push
add
scas
fistps
imul
call
pushf
in
jns
sub
mov
jb
test
in
insb
lcall
fbld
out
mov
add
sar
add
push
jmp
sets
aas
fstpl
dec
adc
adc
mov
cmp
xchg
add
dec
testl
pop
push
movb
mov
push
inc
inc
lcall
cmpsb
popa
addr16
mov
mov
add
mov
sbb
mov
cmp
loope
mov
cmp
mov
scas
push
sbbl
or
insl
jns
nop
hlt
lahf
lods
ret
int3
mov
xchg
shlb
data16
sti
adc
iret
push
aaa
insl
pop
inc
jnp
in
mov
shll
or
pop
jne
ds
mov
leave
out
jae
add
and
mov
lcall
push
dec
xchg
adc
jno
dec
xor
mov
push
adc
mov
dec
lret
mov
pop
pop
push
pop
mov
xchg
idivb
pushf
sbbb
sub
gs
fsts
imul
jns
mov
in
outsb
out
lods
or
add
dec
push
pop
rolb
xor
int3
fcmovnbe
test
ret
loopne
fistps
mov
cld
pushf
mov
mov
std
test
out
mov
sub
in
xor
and
andl
lds
mov
repz
mov
pusha
scas
inc
insl
pop
add
out
in
cmovp
ds
adc
adc
repz
inc
popf
sub
pop
popa
xor
or
lea
xchg
ret
cld
adc
cmp
mov
pop
dec
mov
push
add
jnp
jmp
push
mov
mov
fistps
out
je
xor
aam
cld
mov
imul
push
ret
testl
inc
std
xchg
cmp
shrl
les
jecxz
int
and
loopne
xchg
jmp
xor
les
dec
mov
push
cld
stc
das
push
subb
data16
test
xchg
mov
and
xchg
jge
scas
xor
iret
push
pop
xor
cld
mov
push
xchg
les
data16
fcmovbe
test
loope
iret
dec
into
jbe
push
xchg
push
push
xchg
lock
loopne
or
mov
out
aam
pushf
into
inc
add
mov
ja
lret
mov
jo
push
cltd
mov
imul
aas
out
divb
js
xor
jnp
inc
movaps
and
fists
adc
dec
and
adc
sub
shrb
fisttpl
jbe
add
arpl
jg
pop
es
mov
pushf
or
outsb
lcall
lods
pop
jp
mov
sub
sub
and
fs
or
das
pop
push
dec
std
pushf
sbb
mov
inc
xchg
movsl
jg
inc
lcall
imul
call
xchg
dec
inc
push
xchg
jl
std
cli
mov
mov
and
xchg
push
jmp
sub
adc
dec
mov
leave
pop
push
je
rcr
dec
xor
fwait
imulb
fistpll
fimull
xchg
add
add
or
add
adc
add
dec
int3
aam
pop
rcll
xchg
mov
jae
jle
jns
jle
fisubs
cli
icebp
shlb
sub
icebp
add
shlb
mov
inc
adc
imulb
and
xor
sub
stos
repz
aaa
cld
xchg
jae
testl
repz
sub
aad
xor
ret
sbb
jnp
test
sbb
shll
mov
scas
lods
mov
repz
jo
cmp
xchg
arpl
adc
xchg
shrb
fwait
sbb
into
aam
addr16
pushf
sub
push
divl
mov
hlt
adcb
add
fucomi
cmp
mov
pop
jecxz
add
push
cld
mov
dec
adc
stc
dec
rolb
scas
cmc
dec
xchg
xor
mov
xor
pop
xchg
cmp
adc
outsb
mov
jnp
daa
pop
or
jle
nop
mov
lock
arpl
fs
cmp
test
jne
test
adc
lret
repz
jecxz
lret
fimull
push
notl
js
stc
push
jbe
ret
fistl
outsl
mov
and
jmp
imul
repnz
dec
fsts
pushf
sahf
gs
and
pop
lea
rorl
inc
inc
pop
clc
add
daa
add
jno
mov
xlat
push
ficompl
lock
push
or
dec
shrl
out
inc
repnz
xchg
or
xchg
cmp
loop
dec
aaa
imul
hlt
inc
std
mov
cmpsb
in
lock
xor
aas
mov
xchg
pop
mov
addl
lock
inc
and
mov
mov
mov
repnz
jge
cmp
bound
test
mov
or
in
push
adc
movd
add
push
fdivp
mov
testb
nop
mov
sbb
cmp
sbb
cmp
dec
cmc
pop
mov
add
inc
xrelease
mov
inc
roll
js
adc
cmp
outsb
cmp
sbb
test
mov
inc
jl
fisubrl
mov
adc
mov
lods
aad
pop
popf
push
sbb
or
test
cmp
pop
ljmp
lret
pop
popf
mov
mov
fs
ret
adc
adc
adc
into
mov
push
cmp
xor
hlt
or
and
loop
dec
cld
mov
xchg
cmp
fstps
xchg
cmp
dec
pop
fisubrl
cmpl
outsl
cli
sub
clc
jne
cltd
push
cmc
sbb
pushl
pop
mov
mov
push
or
cmp
dec
adc
jno
add
mov
aas
inc
test
jl
xchg
mov
inc
xchg
aad
daa
fnsave
pop
cmc
movsb
js
stc
test
leave
loopne
ret
pop
mov
mov
mov
inc
xbegin
push
mov
pop
mov
sub
cli
scas
xchg
mov
je
nop
cmp
aas
ds
jbe
lcall
sahf
es
and
jb
and
or
andl
cmp
arpl
dec
insb
or
ficomps
daa
mov
mov
sub
fisttpl
sbb
inc
and
push
repnz
mov
test
sahf
outsl
fbstp
lods
cltd
jbe
add
je
add
mov
inc
arpl
repnz
iret
lods
sbb
outsb
int
inc
xchg
push
es
add
jno
adc
push
int3
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
jmp
xor
outsl
jne
std
inc
sbbl
dec
loope
arpl
cmpb
jns
jle
mov
cmpsl
or
inc
adc
movsb
mov
pop
mov
push
hlt
xor
pop
xchg
cmp
xor
insb
push
stos
jbe
pop
mov
adc
add
or
outsb
mov
out
sbb
xchg
mov
dec
pop
pop
add
xchg
push
ss
das
maskmovq
mull
or
push
adc
dec
jle
in
rol
jge
lods
sbbb
and
cli
sub
std
mov
iret
push
sti
popa
adc
dec
repnz
push
je
sbb
xchg
and
sbb
xchg
mov
daa
mov
je
rcrb
mov
pop
fldcw
jle
jle
imul
dec
lods
cmp
arpl
sti
adc
xchg
aad
sbb
lret
pop
jge
loopne
add
xchg
jns
sub
mov
add
inc
pop
cmp
xchg
sub
gs
jl
pop
xchg
lock
push
xor
bound
lea
ss
sbb
adc
cs
leave
sub
mov
in
lret
sub
loop
divl
mov
repnz
loope
or
fstpt
mov
scas
cs
cmp
sahf
insl
pop
daa
out
movsl
sbb
and
dec
leave
dec
jbe
loope
stos
add
pop
loopne
mov
sbb
cmp
jg
mov
jmp
lcall
mov
mov
popf
sub
xor
pusha
cmp
test
pop
add
cpuid
cmp
aad
cltd
add
sub
jno
and
push
mov
dec
lods
lcall
scas
pop
int3
push
pop
xchg
mov
mov
in
sub
push
cli
sub
cmpsb
out
mov
xchg
dec
hlt
pop
jle
aad
sub
add
jle
jl
push
dec
sbb
mov
cmpb
pop
and
push
xor
std
clc
lahf
xor
push
cmp
or
hlt
movsb
mov
rcll
out
mov
test
out
pop
in
cmc
lahf
sub
push
mov
mov
les
out
popa
std
jecxz
in
in
sub
inc
xor
xchg
stos
loop
or
push
mov
in
inc
jae
insb
or
jmp
rorl
imul
stos
xor
mov
inc
xor
outsl
outsl
int
popa
cli
fsubrl
cld
rcr
test
and
pop
pop
cmpsb
jmp
jne
mov
mov
repnz
enter
pop
xchg
in
enter
cwtl
divl
popa
add
out
dec
rol
add
aaa
add
push
jmp
mov
aas
mov
inc
mov
dec
pop
pop
mov
pop
jnp
lods
inc
loope
mov
or
jbe
mov
add
dec
and
jge
cmpb
xchg
stos
mov
push
sub
dec
pop
int
jae
shl
setl
add
inc
fsubrl
cs
aad
adc
push
aaa
cs
jle
jmp
dec
out
mov
mov
add
mov
scas
cli
add
dec
or
in
jmp
mov
lret
mov
stc
jno
dec
add
jmp
mov
in
xchg
inc
and
inc
lds
jp
cwtl
inc
sti
push
dec
lods
pop
push
push
or
ret
mov
cmpsb
shll
or
adc
aas
push
xor
inc
push
out
add
out
jno
outsb
sti
negb
pop
push
sub
movsb
sub
repnz
dec
je
jns
lock
cs
push
and
rorl
xchg
in
cmp
and
push
cmp
pop
sub
cmp
mov
jbe
mov
mov
xor
xor
jmp
test
rolb
dec
pop
repz
mov
mov
jo
jle
outsl
or
xor
xchg
shrl
lret
lock
repz
in
lret
jmp
cmp
popl
inc
sub
loop
jp
sar
imul
mov
adc
inc
adcl
sbb
dec
xchg
fistps
cwtl
aaa
push
rcrb
jo
cltd
or
insl
push
jmp
test
cli
sub
arpl
mov
push
popa
mov
cmpsb
jl
sbb
add
or
add
add
movsb
cltd
outsb
popf
push
mov
in
int3
movsl
mov
jo
xor
cld
ljmp
push
xor
aas
mov
adc
mov
ljmp
jae
dec
insl
ljmp
sub
push
pop
pop
mov
fdivl
and
gs
aas
xor
jbe
push
mov
mov
nop
sub
popa
sbb
cli
addl
xchg
repz
std
lods
push
outsl
add
ret
dec
inc
movsl
xor
cwtl
fwait
aad
loop
notb
ja
adc
test
push
lds
push
inc
xlat
xor
jno
xchg
stos
cli
mov
insb
inc
push
fsubrl
mov
out
pusha
loope
mov
pop
push
sbb
les
mov
fs
jl
imul
dec
out
dec
icebp
dec
push
xchg
cmp
test
imulb
testb
mov
add
stos
nop
gs
fdecstp
adc
int3
pusha
ss
fidivs
imul
jo
iret
jmp
push
xchg
mov
ja
into
jecxz
test
idivb
add
mov
fisubrl
pop
mov
repnz
daa
inc
into
lea
imul
adc
jbe
out
push
push
mov
outsb
push
jb
pop
xor
or
imul
xchg
leave
iret
mov
dec
leave
loop
pop
push
fwait
mov
inc
cmp
xchg
pop
xor
push
in
adc
test
pushf
lods
fwait
jne
lret
cmp
dec
cs
mov
out
push
jmp
mov
mov
testl
ret
pushf
cmpsl
push
fistps
mov
push
mov
ret
daa
mov
faddp
scas
add
cmp
lcall
pop
sub
and
xor
ljmp
addr16
ret
xor
sub
hlt
jl
sbb
rcll
nop
ljmp
adc
imul
or
sar
into
cmp
adc
lods
xchg
and
daa
in
fbstp
fistps
xchg
and
pop
jl
push
jmp
inc
loop
inc
cli
xchg
outsb
pop
and
mov
rcrl
dec
cltd
mov
pop
cli
mov
sbb
adc
call
xor
es
pop
leave
stc
push
mov
mov
repz
sub
mov
mov
sbb
jno
push
mov
inc
es
jmp
dec
dec
sbb
imul
adc
xchg
dec
cltd
mov
ret
pop
cmpsl
into
pop
subb
push
push
aad
inc
lea
add
jo
cmpsl
shll
ja
xchg
sub
dec
add
test
dec
dec
mov
mov
cmp
arpl
es
outsl
adc
ret
add
cltd
xlat
pop
or
nop
out
and
call
cmp
mov
icebp
test
les
fadds
insb
cwtl
push
jns
mov
add
jmp
cmp
dec
mov
ror
fldenv
jle
jns
jle
sbb
xor
leave
add
jecxz
or
xchg
repz
out
xchg
icebp
and
and
mov
or
push
leave
test
cmpsb
in
push
ret
dec
jb
mov
pop
xor
xor
pop
stos
xchg
mov
xchg
sub
ds
add
mov
out
dec
sbb
sbb
jle
aaa
outsb
int3
push
and
or
jge
cmp
inc
fld
cmp
imul
mov
sahf
push
cltd
ja
sub
or
inc
adc
lods
adc
add
fs
fsubl
cli
test
enter
mov
push
dec
sbb
add
daa
fildll
std
cmpsb
imulb
push
inc
cmp
ds
sahf
xchg
mov
mov
pusha
movsb
xor
inc
jecxz
xor
in
scas
shlb
mov
mov
jle
or
mov
pop
add
mov
push
mulb
scas
mov
pushf
leave
test
ds
in
repz
lods
xor
fcom
sbb
mov
ds
pop
das
jnp
loopne
repnz
out
test
lods
push
mov
popa
movsb
clc
ss
mov
in
add
adcb
xchg
imul
clc
push
xor
loop
bound
jg
cmp
sahf
mov
out
mov
cli
jns
and
mov
lds
fwait
or
mov
or
jbe
fwait
test
xchg
add
cmp
lock
xchg
mov
lods
hlt
dec
push
mov
mov
cmp
inc
pop
add
and
mov
test
jns
das
push
loope
inc
test
inc
cwtl
sahf
lret
in
add
xor
push
mov
icebp
mov
adc
rol
mov
fsubp
aas
jns
out
in
mov
sbb
sbbb
fldt
aad
cmpsl
sub
xor
idiv
and
mov
inc
inc
adc
lods
ljmp
xchg
cs
sbb
dec
mov
cmc
testl
push
cmp
insl
addr16
stos
ficoml
and
and
xor
mov
sbb
jge
mov
daa
cmp
jmp
inc
or
cs
fwait
sub
into
jge
movsl
sub
enter
or
add
mov
daa
out
fsubr
jns
lea
outsb
and
insl
movsl
add
and
ret
fnstcw
sbb
or
inc
push
movsb
sbb
shll
pop
pop
sbb
mov
scas
mov
dec
popf
inc
push
leave
push
aam
movsb
enter
movsl
es
in
sbbb
mov
add
mov
bound
mov
lock
push
pop
bound
adc
loope
gs
lret
addr16
testb
inc
or
lret
pusha
push
int3
inc
sbb
inc
push
adc
sbb
repnz
sbb
dec
jb
mov
stos
into
sub
push
push
sub
inc
fcoms
cmp
mov
out
fwait
iret
jl
dec
flds
je
or
dec
add
inc
adc
call
push
je
dec
push
adc
pop
mov
add
incb
sbb
sbb
roll
in
outsb
pushf
mov
loope
imul
jmp
jmp
into
sbb
addl
sti
mov
jle
xor
in
fwait
sub
enter
hlt
cmp
sbb
out
pop
mov
inc
fimuls
mov
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
jmp
sub
inc
dec
idivl
mov
xchg
jle
jo
jle
bound
push
xor
cmpb
jl
fildl
pop
push
pop
and
xor
sub
nop
cmc
jns
aaa
jo
mov
stos
mov
hlt
test
repnz
sbbb
lret
inc
out
lcall
xchg
sub
jmp
add
cld
leave
and
jo
lods
inc
mov
cld
xor
lcall
fmuls
dec
adc
ljmp
sub
inc
xchg
cld
loop
xor
dec
insb
pop
mov
sbb
lea
shlb
jo
mov
cmpsl
cmp
sub
push
cmp
pop
out
cs
or
pop
inc
inc
outsl
movsl
push
pusha
std
mov
pushl
repnz
jl
cmp
cmp
jge
int
xor
adc
mov
jl
jb
pop
and
aad
pop
jg
push
mov
add
sbbb
push
lock
mov
or
cbtw
ss
into
push
sbb
mov
mov
int
in
pushf
outsl
xchg
hlt
mov
clc
jg
mov
sub
cmpsb
xchg
jbe
xor
sbb
aad
mov
lds
les
adc
lock
pop
lret
fdivrl
or
sbb
pop
inc
cmpsb
mov
and
scas
outsb
ja
push
push
dec
push
dec
xchg
jo
insl
xor
lret
or
inc
and
xchg
fadds
movsb
push
sub
adc
push
sbb
push
test
add
das
push
in
orb
rcl
lret
in
test
jne
test
jecxz
int3
popf
sbb
jle
push
jmp
pop
cwtl
jg
pop
jbe
fsubl
xchg
add
dec
ret
fisubs
add
movhps
ret
nop
ss
and
jns
xchg
iret
cs
popl
and
dec
jns
mov
add
iret
or
mov
sub
insb
sbb
xchg
pushf
xchg
and
fsubs
or
or
cmc
test
jmp
sbb
in
push
or
push
adc
pop
inc
ja
mov
xor
pop
jecxz
pop
pop
mov
xchg
xchg
lea
inc
loopne
dec
mov
push
jge
push
outsl
rorl
je
and
pop
mov
inc
sarl
fiadds
pushf
mov
nop
lds
int3
enter
std
jne
pop
shlb
jae
repnz
add
sub
in
bound
mov
add
jmp
mov
nop
movsl
cmp
mov
and
not
sti
mov
nop
rcrl
insl
push
in
aam
cmp
pop
lahf
sbb
sub
fnstcw
push
data16
dec
xchg
or
daa
adc
jne
dec
push
xlat
arpl
bound
jo
cmp
mov
lahf
out
mov
sbb
call
add
and
cmc
test
stc
inc
scas
std
xchg
rorb
jns
xor
loop
mov
sar
sbb
pushf
add
test
adc
sbb
and
pop
xor
mov
lods
or
call
jno
ficoms
in
mov
sub
cli
jmp
test
repz
mov
jae
jmp
dec
and
test
push
push
mov
mov
adc
sbb
lahf
pop
fs
pop
dec
je
jmp
imul
or
out
push
lcall
add
xchg
sbb
fwait
pop
mov
pop
xlat
std
xchg
fdivrs
cld
rcr
xor
dec
and
adc
js
jnp
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
jmp
and
mov
mov
jne
rdmsr
adc
lret
jle
jns
jle
inc
jg
scas
fisttps
mull
pushf
cmp
cwtl
popa
mov
test
push
cs
and
bnd
pop
mov
test
test
test
xchg
test
insl
pop
loopne
fcmovnu
xchg
xor
ror
arpl
arpl
js
aas
ret
mov
xorl
inc
jmp
outsl
and
xchg
sahf
cmp
arpl
out
add
pop
jns
je
fidivrs
sbb
and
push
insl
dec
popf
adc
inc
dec
mov
fst
cmp
mov
ret
mov
adcb
mov
sub
pop
stc
cmp
xchg
pusha
xor
mov
cwtl
inc
lret
adc
inc
aam
and
add
aad
push
sub
jge
jae
andl
jne
mov
fwait
mov
sbb
cmp
mov
xchg
inc
add
lret
mov
push
lahf
out
mov
mov
rcrl
aam
mov
inc
push
xchg
jge
add
lret
test
or
adc
mov
push
jne
adc
add
ss
cmp
pop
mov
sbbl
fisttps
jle
lret
sbb
mov
pop
push
add
andl
cs
xchg
out
adc
jno
mov
push
and
incb
dec
pop
popa
loope
lock
mov
mov
nop
cmpsb
cmp
adc
xchg
xchg
stc
incb
pop
cmp
pushf
repz
mov
adc
pusha
push
xchg
fchs
test
jnp
jle
cmpsl
frstor
or
sub
dec
cmp
inc
dec
test
fwait
sub
cltd
push
fstps
dec
jnp
call
iret
push
pop
mov
and
pop
sub
push
aas
jo
pop
fsubp
xor
xor
hlt
das
inc
sbb
out
pop
or
stc
test
pop
mov
jle
mov
ret
mov
inc
jb
mov
sbb
imul
test
xchg
sbb
or
pop
ret
sbb
jno
test
cmp
imul
mov
repnz
sbb
mov
jae
cmp
test
or
jae
aaa
sahf
mov
mov
popf
imul
or
imul
add
in
cld
and
mov
or
cwtl
sbb
dec
nop
addr16
jnp
ret
sub
mull
movsb
lcall
xor
cs
pop
sbb
shl
push
inc
dec
mov
cmp
push
push
xchg
cmpsb
cmp
pop
enter
xor
ret
pop
inc
dec
test
xchg
in
lock
pop
push
mov
clc
pop
mov
les
scas
adc
sbb
enter
repnz
mov
outsl
int3
cmp
cmpsb
je
cmpsl
mov
test
mov
aaa
loope
xor
idivb
je
popf
xor
repnz
mov
push
add
lret
cmp
mov
sbb
push
fs
mov
mov
cltd
mov
dec
imul
cmp
mov
rorl
nop
cs
push
lods
sarb
pop
or
mov
data16
loopne
arpl
inc
jle
mov
pusha
xlat
cmp
add
data16
add
sbb
or
sub
mov
fidivs
fwait
inc
movsb
mov
pop
push
ret
add
jbe
pop
add
aad
xor
out
dec
push
push
xchg
xchg
aas
dec
in
pop
notl
xchg
cmpsl
push
push
add
rorl
xor
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
jmp
push
and
jl
jge
movsl
sbb
lcall
jle
jns
jle
insb
js
je
pop
mov
adc
mov
add
pop
enter
repz
ret
fucom
js
js
xor
aaa
adc
loope
and
xchg
leave
cli
or
out
pop
lods
fsub
fstl
data16
f2xm1
jg
outsl
push
sub
xlat
pushf
sbb
dec
push
mov
mov
mov
jbe
pop
adc
inc
jbe
push
loopne
sti
inc
mov
in
mov
or
add
div
inc
fldcw
cmp
stc
inc
dec
xlat
xor
in
jno
mov
jns
sbb
js
push
mov
pop
jb
outsb
jg
movsl
enter
mov
scas
xchg
aam
dec
xchg
mov
adc
push
std
stos
lcall
lods
mov
and
pop
sub
pop
rol
int
sub
sahf
decl
mov
in
je
andb
scas
jmp
and
les
or
add
sbb
loop
adc
lock
sub
sahf
cmp
pop
dec
jns
fs
sti
add
leave
inc
mov
xor
mov
sub
and
scas
lcall
mov
lret
in
shll
inc
push
pop
push
je
sti
es
data16
push
pop
jbe
xchg
ja
jge,pt
jb
xchg
into
and
jmp
inc
rclb
pusha
inc
cld
mov
loopne
cmp
fisubrl
lahf
pop
loop
jbe
xor
jg
inc
mov
push
cmpsb
lret
pop
inc
out
cmc
pop
mov
mov
pop
push
add
outsl
mov
inc
cmpsl
dec
lret
sbb
nop
sahf
or
popa
push
pop
in
or
mov
push
mov
addr16
cmp
inc
insl
imull
mov
sbb
sub
xchg
xor
daa
test
adc
rorl
or
mov
sub
shlb
mov
add
test
clc
loope
xor
shll
jbe
ds
jne
outsb
int
jb
push
mov
out
mov
ret
jo
jno
rcrb
repnz
mov
or
cmp
mov
test
add
add
dec
or
push
fstpl
mov
dec
in
xchg
int
fsubrs
xchg
jnp
out
aam
jo
jno
push
icebp
inc
jmp
pusha
pop
shrb
adc
daa
sti
mov
mov
sub
jp
decl
and
nop
cwtl
jge
xchg
add
xchg
push
jno
ret
jnp
pop
dec
jnp
sbb
pop
aad
mov
out
sarb
idivb
push
push
aam
fisubl
inc
loopne
push
cmp
add
and
dec
sbb
loop
xlat
nop
enter
jnp
xchg
call
mov
popa
inc
jne
xorb
xchg
xchg
xor
mov
mov
sbb
mov
aad
dec
enter
mov
push
pop
roll
pushf
inc
jns
add
xchg
push
mov
pushf
lods
out
cmp
cmp
shl
add
and
sbb
mov
jno
or
xchg
in
fdivs
cltd
out
call
lret
adc
cs
and
or
mov
sbb
outsb
pop
sbb
mov
or
repnz
ja
cmp
sti
sub
fstpt
sbbl
push
dec
mov
out
mov
sar
push
nop
decb
nop
bound
out
push
add
jl
push
clc
loope
dec
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
jmp
pop
in
add
insb
xor
fcmovb
stc
lea
lcall
mov
cmp
rorl
in
sar
sub
popf
pop
jae
mov
lret
out
test
jecxz
movsl
repz
mov
mov
scas
nopl
icebp
nop
daa
aaa
push
mov
cli
loopne
dec
std
xor
das
fistl
pop
sbb
jp
cmpl
push
sbb
and
mov
push
jb
pop
pop
add
jae
dec
mov
ds
rcrl
adc
jle
jbe
lahf
jge
imul
cmp
mov
jnp
cmpsb
addr16
out
xchg
fimull
stc
mov
cli
adc
and
fldenv
jns
imul
clc
push
mov
xorl
sbb
jle
or
testl
adcb
dec
mov
xor
and
pop
enter
adc
inc
jmp
dec
push
adc
xchg
aad
int
lret
arpl
in
mov
mov
iret
int3
jo
push
xchg
push
mov
jmp
sub
cli
out
adc
mov
mov
pop
repz
dec
das
out
in
cmpsl
cwtl
mov
in
lods
adc
mov
push
into
out
shrl
fdivl
aam
mov
push
inc
repnz
adc
mov
mov
js
scas
sub
pop
sbb
repnz
in
stc
push
mov
insb
outsl
fcomi
sub
mov
xchg
mov
or
out
inc
and
adc
xchg
dec
mov
inc
sbb
rcll
sbb
jbe
jge
cli
add
into
jae
jbe
mov
test
aas
sarb
lcall
jg
repnz
std
movsl
ja
xor
addr16
mov
pop
or
cld
push
dec
xchg
aaa
repnz
push
jg
push
dec
fldt
int3
dec
fwait
test
push
mov
mov
popa
mov
or
test
add
sbb
sbb
cld
xchg
add
test
xor
mov
in
shrb
jecxz
sarl
fcompl
add
cltd
mov
or
in
out
nop
or
mov
or
mov
scas
mov
sub
ret
cmpsb
lret
mov
or
fisubrs
mov
jae
cmp
arpl
in
repz
icebp
jmp
ret
pop
push
adc
mov
imul
fnstcw
js
insl
push
dec
inc
rcll
mov
test
or
pushf
xor
dec
lock
lahf
pop
sbb
sbb
icebp
jnp
inc
mov
add
push
outsl
jo
jne
and
xchg
shlb
push
data16
sti
jl
push
imul
jno
dec
lea
in
fs
mov
idivb
mov
inc
mov
popa
xchg
jmp
push
int
in
loop
outsb
rolb
xchg
jo
loope
jns
xchg
xlat
dec
ja
xchg
mov
fcoml
push
lahf
jnp
les
aam
add
dec
cwtl
popa
and
xor
jg
cmp
lahf
daa
ja
test
repnz
push
cld
push
cmp
push
and
add
inc
nop
int
out
bound
into
push
or
call
mov
int3
dec
mov
mov
sbb
fidivrs
dec
loopne
int
inc
sbb
aaa
jl
cmpsl
add
and
jmp
adc
insb
loopne
inc
ret
jge
inc
jne
sbb
and
aaa
add
jle
mov
lea
icebp
stc
vpsubusb
xchg
fsubrs
rorl
xor
cmp
jbe
mov
mov
xor
add
imul
mov
jmp
pusha
jecxz
jge
icebp
insb
fwait
mov
push
cmp
jle
dec
pusha
push
pop
adc
out
test
icebp
insb
lds
ss
mov
ljmp
push
sub
sbb
dec
fsubs
inc
adc
push
jb
arpl
sub
sbb
mov
imul
lret
push
jmp
xchg
aad
pusha
notb
adc
leave
xchg
jmp
jbe
std
es
in
mov
fwait
xchg
shr
stos
mov
push
push
test
pop
inc
cmpsl
cmp
add
xor
inc
pop
subb
fbld
es
or
push
push
lods
xchg
mov
and
popf
or
sub
rcl
das
or
xchg
ficomps
mov
leave
sahf
scas
test
add
cmp
je
sbb
imul
push
add
push
add
jnp
inc
pop
sub
inc
cmpsb
lcall
xchg
push
pop
inc
and
clc
cmp
jae
bound
sub
mov
clc
xchg
push
pop
mov
pop
adc
outsb
loopne
xor
enter
add
pop
lock
enter
dec
adc
mov
cmpsl
jno
xchg
testb
xlat
xlat
aas
dec
loope
adc
xchg
mov
xchg
push
sub
fldt
inc
cwtl
xor
aad
lods
lret
orb
ror
int
test
cli
inc
push
cli
into
gs
imul
mov
mov
mov
xchg
adcb
pop
mov
fmuls
icebp
in
push
adc
add
dec
cmp
sbb
inc
loop
adcl
inc
cmp
mov
sub
push
loop
cmp
push
and
aad
mov
cmpsl
je
in
jp
push
dec
ffree
out
mov
aaa
dec
sbb
xchg
mov
out
mov
hlt
fwait
std
fbstp
test
test
lea
pop
je
xchg
xor
repz
xor
cmp
mov
push
xchg
xor
sub
outsb
inc
inc
jge
out
enter
addr16
xchg
aad
and
mov
push
out
dec
jmp
loop
imul
dec
daa
inc
mov
leave
es
jg
je
inc
cmp
pusha
aaa
pop
pop
repnz
sbb
add
shl
mov
ljmp
pop
pop
rorb
dec
popf
orl
out
mov
inc
mov
loope
mov
pushf
test
outsl
xchg
fstl
jge
mov
inc
cmp
xor
outsl
mov
insb
inc
pushf
cmpsb
push
push
mov
scas
mov
pop
movsb
nop
lea
cmp
sub
rcl
inc
mov
sbb
xor
mov
or
sub
ljmp
jl
into
or
xchg
cli
cmp
inc
mov
xorl
rcll
xchg
scas
je
clc
lahf
pop
movsl
scas
push
div
inc
sub
push
iret
cs
push
and
mov
sub
mov
mov
inc
mov
xchg
xchg
push
scas
stos
jg
lret
or
push
sub
sub
test
pop
xor
test
or
lock
outsl
adc
js
stc
or
add
jmp
lock
imul
pop
jae
sahf
pusha
jl
in
pop
mov
sbb
in
mov
mov
and
cs
sub
sbb
push
add
inc
movsb
cmp
lcall
mov
arpl
dec
push
and
cmpsb
mov
or
dec
cs
pushf
sbb
xor
add
mov
lea
jmp
outsb
xlat
shlb
mov
pop
out
testb
mov
jle
lea
mov
popf
aaa
xorb
adc
xchg
sub
cltd
add
dec
cmpl
jge
je
and
in
fwait
and
dec
xor
push
ljmp
mov
push
test
mov
jmp
nop
decb
cmp
pmulhw
in
and
xor
push
hlt
xchg
or
jle
inc
mov
data16
repz
jecxz
ret
loopne
mov
push
xor
push
pusha
xchg
lcall
push
mov
mov
mov
dec
leave
push
and
mov
cli
rcrb
dec
stos
xor
dec
fwait
lds
fdivs
das
cmc
or
add
dec
sub
pop
lcall
cmp
lret
sbb
hlt
dec
lret
fistpl
out
scas
mov
call
push
and
hlt
mov
nop
pop
adc
daa
gs
xchg
dec
fisttpl
enter
jns
mov
lahf
shl
mov
fildll
adc
inc
inc
cli
and
sbb
test
je
xor
addl
mov
jmp
imulb
sbb
adc
aam
sub
orb
rcl
in
js
push
ret
mov
daa
clc
jmp
cs
popa
roll
mov
cmp
inc
xchg
enter
cli
sti
xor
and
ss
cmp
outsb
aam
lods
add
in
mov
adc
xor
and
ljmp
push
aas
addr16
mov
call
call
inc
mov
or
mov
scas
pushf
cmpl
clc
pop
sbb
rcrl
push
fcomi
inc
leave
push
xlat
lods
fildl
inc
les
frstor
cmpsb
inc
pop
insb
test
dec
gs
dec
cmp
rorb
or
push
push
fs
pop
cltd
popa
jg
stos
xchg
xor
fwait
enter
cltd
jg
push
stos
mov
movsb
mov
rorl
out
bnd
dec
dec
rcll
fucom
jnp
mov
mov
mov
nop
cld
mov
frstor
iret
psllw
xor
push
dec
cmc
jecxz
fldl
or
push
lods
dec
int
xor
fcoml
cmc
mov
test
xchg
dec
fistl
xchg
mov
push
ds
mov
push
test
bound
sarb
lock
jb
xlat
cmp
sti
pop
mov
sti
mov
inc
sbb
pop
mov
xchg
loope
ret
out
ret
adc
lret
mov
cmp
ror
push
das
push
and
test
adc
test
inc
loopne
data16
xor
cmp
mov
test
adcb
jno
loop
dec
pusha
jl
pusha
rorl
cmpsb
aas
fwait
add
inc
psrad
nop
gs
cld
adc
jecxz
adc
xchg
mov
xor
inc
mov
or
imul
xchg
or
pop
jnp
jne
or
rcll
decb
xchg
test
inc
out
sbb
xchg
xchg
mov
push
fistps
fs
add
push
gs
fistps
jno
stc
mov
xor
mov
cmp
iret
daa
push
arpl
push
mov
mov
fmull
add
lcall
jns
xchg
or
test
sub
into
inc
and
mov
lcall
sbb
test
ret
icebp
xchg
mov
ret
pop
ja
lret
popf
xor
cld
rorl
xchg
mov
add
scas
cli
xchg
xchg
add
out
xor
arpl
notl
cmp
mov
push
loopne
sarb
jmp
sahf
lcall
adc
and
jne
cmp
jo
jle
mov
adc
in
fwait
mov
iret
out
pop
shrb
or
je
xchg
push
stos
inc
scas
movsb
mov
fiaddl
mov
lret
fucomi
adc
mov
inc
outsl
cmpsl
sahf
add
or
adc
pop
jl
mov
cwtl
adc
mov
sbb
mov
pop
cmp
push
adc
mov
xor
xchg
fisttps
and
das
xor
rorb
sbb
jmp
subb
inc
push
mov
dec
sbb
call
stos
aaa
add
popf
fwait
mov
data16
inc
in
arpl
mov
das
lret
xchg
dec
je
mov
jo
enter
ljmp
shlb
add
dec
or
xchg
ds
mov
nop
mov
out
lods
fs
popf
mov
clc
in
clc
push
add
add
cwtl
cmp
cmp
addr16
rclb
xor
cmp
mov
mov
call
pop
out
pop
pop
cmovno
mov
sarb
adc
jnp
pushf
cmp
in
jmp
or
fdivr
jne
aaa
xchg
pop
xchg
pop
jmp
xor
fstps
lret
lret
lret
js
in
jle
mov
sub
stos
dec
leave
mov
aad
jmp
mov
xchg
jns
and
leave
js,pn
push
cmc
pop
mov
repnz
xor
cs
mov
jbe
cmp
inc
call
lods
or
int
inc
mov
enter
fnsave
cltd
sub
iret
into
les
add
push
fistl
fucomi
mov
mov
mov
rorl
push
sub
lock
lcall
mov
out
or
pop
in
jbe
mov
lahf
sbb
xlat
int3
dec
cmp
pop
xchg
push
mov
jge
pop
lods
int
sub
sbb
mov
popa
cs
sub
sbb
jp
inc
mov
stc
sbb
xchg
sbb
mov
movsb
leave
xlat
jbe
and
dec
inc
out
shll
das
div
fistl
xacquire
subl
fstps
cmp
push
xor
inc
adc
enter
or
in
insl
mov
cmpsl
shll
in
xchg
adc
andl
xor
je
fwait
xor
inc
sbb
inc
push
std
adc
dec
push
fs
and
xchg
add
fisubrl
aas
je
shll
pop
pushl
cmp
divb
mulb
int3
movsb
imul
mov
push
xchg
mov
inc
dec
in
testl
sti
or
call
lods
and
dec
leave
dec
cmpsb
jns
push
fnsave
loopne
imul
lock
sub
add
dec
add
mov
lods
repnz
and
mov
xlat
cld
dec
and
dec
std
stos
xchg
in
pop
mov
mov
sub
test
mov
leave
cmp
push
lcall
push
stos
cmpb
cwtl
push
xor
mov
out
or
adcl
call
sbbl
sbb
sti
test
mov
xchg
mov
popa
cmp
scas
fwait
mov
scas
jae
cmc
cmp
push
inc
int3
repnz
iret
sbb
cli
mov
push
sub
xchg
int3
push
lret
or
xchg
push
xchg
in
sbb
sbb
fwait
mov
jo
mov
leave
aad
pop
push
call
jge
mov
mov
xor
add
imul
cmp
jbe
pop
jmp
mov
xchg
imul
ret
and
cs
jle
jo
jle
es
inc
movzbl
mov
or
es
mov
pop
rorb
and
dec
pop
and
test
nop
das
push
sbbb
ja
lret
int
xchg
scas
lds
or
add
sub
insl
in
std
arpl
dec
gs
mov
into
sbb
into
imul
faddp
fucomip
loopne
loopne
addr16
leave
sti
jns
cs
stos
or
and
xor
rorb
add
imul
mov
leave
jbe
mov
leave
ss
mov
rorb
fmul
scas
addl
call
jnp
ror
cmp
cmp
push
or
stc
ss
movsl
daa
jno
push
jle
je
xchg
mov
push
push
inc
adc
mov
push
js
mov
imul
mov
push
cmp
mov
jbe
orl
in
mov
fucom
xchg
std
mov
je
nop
mov
sbb
pop
push
outsl
subl
cmp
mov
cltd
dec
push
loopne
lods
std
int
lock
adc
mov
and
cmp
jl
pop
sub
sub
jle
mov
mov
mov
or
pushf
inc
mov
mov
and
ss
mov
pusha
ljmp
insl
popa
in
lcall
jp
je
loopne
fstpt
and
mov
mov
bound
sbb
loop
cmp
in
stos
jp
movsl
adc
scas
shlb
scas
mov
jge
jecxz
pop
ja
addr16
mov
push
jo
arpl
or
push
arpl
mov
aad
fmulp
repz
mov
cld
cld
ljmp
xor
mov
cld
rcl
xchg
scas
insl
ret
out
in
daa
std
cmp
jecxz
and
cld
and
inc
std
push
into
mov
jmp
add
adc
inc
fildll
mov
test
jno
pop
cmpsl
subb
xor
jbe
call
inc
inc
in
sub
pushl
leave
cs
inc
roll
pop
xor
jge
xchg
jecxz
ds
lods
sarb
adc
mov
ss
outsl
test
inc
pop
inc
jmp
loope
gs
and
jb
and
sahf
mov
fmuls
mov
inc
and
and
and
movsb
adc
or
ss
and
adc
xchg
cmp
imul
cmpsb
mov
popa
sub
sub
jmp
lret
pop
cmp
loopne
fwait
mov
and
js
sbb
mov
inc
pop
rorb
jmp
inc
or
stc
mov
addb
push
xchg
fsubs
sbb
je
sub
inc
arpl
xor
andl
inc
xor
fs
mov
out
nop
daa
mov
lahf
or
xchg
lods
jg
push
sbb
dec
dec
jmp
pusha
es
or
cmp
push
cmp
icebp
dec
repz
mov
xor
divb
mov
sbb
cmp
cmp
mov
xor
out
rcrb
mov
jnp
and
jmp
int
inc
lock
mov
inc
enter
push
mov
addl
mov
cmc
loopne
fcmovu
dec
mov
sbb
out
jp
data16
cs
mov
adc
sarl
cmp
pop
out
xchg
sub
mov
and
ret
push
mov
sub
sbbl
push
sbbl
push
incl
push
andl
push
adcl
call
test
movl
je
adcl
xor
inc
movl
jmp
add
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
sub
movl
sbbl
lea
movzbl
and
mov
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
sub
lea
mov
adc
mov
mov
xor
or
sub
or
mov
mov
mov
sub
mov
mov
or
mov
mov
andl
xor
sbb
mov
xor
add
mov
mov
movzwl
cmp
mov
movzbl
mov
je
sub
mov
xor
add
sbbl
imul
movl
mov
movl
jmp
addl
xor
sbbl
add
mov
movzbl
sub
mov
xor
adc
add
not
mov
mov
mov
xor
xorl
add
movl
cmp
jne
sbbl
push
movl
pushl
sbbl
pushl
adcl
call
and
mov
mov
and
mov
sub
mov
neg
mov
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
jmp
xor
or
sbb
mov
mov
mov
or
movl
or
mov
movl
xor
mov
and
mov
and
mov
orl
xor
subl
xor
adcl
add
mov
adcl
xor
xor
adcl
add
movl
lea
movl
mov
movl
cmp
movl
ja
jmp
adc
mov
addl
mov
xor
xorl
lea
push
andl
xor
or
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movzbl
adc
mov
mov
xor
movl
lea
subl
push
and
mov
adcl
pushl
call
mov
mov
mov
or
xor
lea
mov
or
mov
subl
xor
xorl
xor
add
mov
andl
xor
movl
lea
movl
mov
movl
cmp
movl
jbe
movl
mov
add
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
add
mov
inc
mov
subl
pushl
orl
sub
subl
pushl
adcl
xor
mov
pushl
call
sub
adc
xor
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
pushl
push
call
mov
dec
mov
jmp
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
mov
mov
mov
mov
movl
movl
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
repz
jae
hlt
aaa
scas
aad
shr
push
mov
jle
jns
jle
mov
add
lock
bnd
pusha
xchg
adc
pop
inc
in
sub
sub
mov
inc
rolb
insl
ret
out
mov
mov
inc
jle
xchg
scas
adc
push
cltd
pop
scas
idivl
fcompl
push
xchg
add
add
call
cmp
ret
mov
clc
xchg
xor
pop
pop
cltd
mov
loop
test
ljmp
inc
lahf
out
jmp
popa
and
cmc
inc
mov
fcmovnb
xchg
rclb
or
fcmovbe
add
mov
cmp
xor
call
stos
fldcw
sti
repnz
gs
fldt
adc
test
addb
addl
je
mov
stc
jae
push
je
pop
aad
into
in
mov
and
arpl
jns
xchg
fcmovb
inc
mov
mov
fwait
adc
das
sub
push
out
xchg
jnp
sub
int
inc
pop
cmp
add
xchg
sbb
nop
adc
fildl
cmc
dec
xor
inc
cmp
xor
push
jp
lahf
fadds
fcoml
test
int
add
inc
xchg
mov
in
lock
test
push
shrb
ljmp
lahf
aam
std
jns
cmp
cld
fnstcw
xlat
in
cld
frstor
cmp
loope
test
pushf
hlt
icebp
mov
int
mov
lods
insb
jnp
fnstsw
sbb
cmpsb
cmp
dec
daa
inc
mov
cmpb
or
add
int3
stc
mov
jo
jp
and
ret
inc
pop
jae
lcall
cwtl
daa
adc
jmp
decb
loopne
filds
es
add
enter
imul
rcrl
popa
out
fnstcw
mov
adc
mov
lea
pop
jnp
or
clc
jnp
insl
cwtl
loopne
adc
bound
sub
and
xchg
xchg
int
sub
das
dec
mov
push
and
les
jb
xchg
int3
jmp
jae
rcll
and
and
gs
mov
or
or
repz
stc
sbb
ds
lcall
xor
push
jnp
jne
jg
movsl
mov
nop
fdivl
pop
jae
inc
ds
or
fisubrl
movsl
lahf
jns
jecxz
lods
push
mov
daa
push
icebp
pusha
in
dec
str
mov
stos
sti
lret
aas
clc
jle
xchg
adc
dec
addb
cmp
jge
jecxz
daa
mov
mov
lds
or
sub
xchg
mov
ja
push
sbb
mov
aad
sbb
jecxz
ds
cmp
dec
jnp
cmp
inc
xchg
scas
imul
scas
mov
jnp
insl
add
in
xchg
sub
sbb
iret
inc
jbe
repnz
push
inc
cmpsb
scas
jmp
adc
jns
add
inc
mov
nop
or
mov
add
adc
imul
inc
insl
filds
cltd
xchg
pop
mov
cmp
cld
test
inc
add
mov
mov
mov
movl
push
movl
mov
movl
mov
movl
cmp
je
or
jmp
cmc
pop
inc
gs
jge
pop
push
add
mov
jle
hlt
jns
jle
out
pop
mov
mov
add
inc
xchg
lcall
or
fstl
mov
ret
or
lret
adc
ljmp
gs
test
pop
arpl
cmp
mov
fstps
mov
pop
rcrl
fisubrl
or
and
std
mov
rcrb
pop
adc
push
dec
or
dec
dec
cmc
mov
push
pop
inc
outsb
sar
or
add
in
shr
add
aas
imul
jbe
shl
and
fwait
mov
sub
cmpsl
xor
cltd
fbld
jnp
add
sbb
xor
mov
and
fdivl
icebp
mov
enter
addl
add
loope
add
fiadds
inc
lcall
inc
xor
mov
scas
jns
imul
mov
lret
xor
xor
jle
pop
xchg
push
jbe
mov
test
jb
clc
push
xchg
mov
xchg
pop
mov
and
cmc
lcall
mov
or
aas
inc
icebp
add
pushaw
mov
cmp
or
mov
iret
and
shlb
mov
jne
jb
cmp
mov
add
daa
pushf
loope
fisttps
int3
fmuls
das
sub
push
xchg
sbb
add
shl
xor
data16
push
mov
xchg
jp
scas
mov
ds
dec
jmp
push
out
jb
cmpsb
data16
outsl
jnp
mov
dec
jb
sub
popf
test
push
pop
lods
and
cli
adcb
insb
mov
pop
mov
or
pop
or
jnp
xor
clc
into
or
push
jp
imul
pop
enter
shr
pushl
add
jno
and
je
mov
lcall
push
jb
jg
aaa
negl
out
inc
sub
scas
gs
orb
pop
ret
loopne
xchg
stos
and
xlat
push
mov
iret
bound
jp
mov
and
and
mov
mov
fistps
add
sbb
or
insb
orb
xor
shll
sbb
jns
pop
leave
nop
sbb
mov
and
adc
in
lods
imul
popf
lds
clc
out
add
sub
push
loopne
and
jno
push
int
xchg
pop
dec
push
add
sbb
mov
cmp
test
ljmp
jne
out
or
dec
repnz
sti
adc
std
in
fs
les
dec
ret
jmp
pop
imull
das
mov
sub
fsubr
lds
jmp
clc
add
aam
leave
xor
xchg
add
xchg
push
cmp
dec
sub
ret
sti
adc
pop
add
sub
addr16
adc
cld
je
inc
cs
je
nop
xchg
sub
jge
mov
sarl
cmp
ja
les
mov
scas
xchg
fbld
cmp
dec
imul
inc
cld
mov
xorl
xor
add
movl
cmp
movl
je
and
mov
mov
xor
xor
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
and
add
push
pushl
pushl
mov
jmp
pop
pop
cld
sub
mov
push
in
stos
pop
jne
adc
jle
hlt
jns
jle
fs
rolb
ret
loopne
pop
cmpsb
xlat
ret
add
addr16
dec
test
arpl
sbb
jae
ss
lods
or
lds
and
lcall
mov
sub
xor
out
add
or
push
pushf
out
outsb
ficoml
divb
inc
xor
add
test
movsl
mov
testl
insb
inc
lret
hlt
shrb
pop
mov
mov
mov
dec
xchg
inc
inc
adc
fwait
push
mov
mov
sahf
shrb
inc
enter
insl
je
mov
das
lret
lahf
push
or
push
xchg
andl
cmp
jae
scas
or
data16
sahf
sbb
jbe
jns
std
dec
scas
loope
insl
int
mov
imul
stc
cmc
bnd
out
push
scas
adcl
rep
cmp
stos
out
insl
xor
jmp
add
lret
je
mov
insb
add
cmpsl
xor
xchg
cmpsb
add
fs
clc
bound
int
xchg
lock
xchg
push
add
add
sub
mov
mov
mov
mov
cmp
test
mov
pop
addl
dec
gs
jg
pop
sti
mov
ret
mov
test
or
mov
jne,pn
pop
push
jecxz
add
lahf
or
mov
movsl
or
pop
movsl
dec
stos
sahf
jo
lock
lahf
stc
cld
dec
xchg
loop
and
dec
mov
hlt
jmp
adc
mov
ja
hlt
pop
fwait
mov
repz
fisttps
outsl
jbe
push
dec
jl
inc
pop
and
inc
add
repz
sub
dec
or
adc
int3
jmp
jb
aad
mov
scas
cwtl
push
shlb
mov
fimuls
lcall
ds
push
xor
cmp
cli
int
dec
mov
loop
je
lods
data16
fistps
or
loopne
sbbl
xor
xchg
icebp
mov
jmp
pop
out
jg
ja
inc
mov
mov
fstpt
push
stos
scas
mov
test
adc
pop
hlt
jg
dec
lcall
mov
add
fcoml
mov
dec
jbe
imul
fwait
out
cmp
pop
mov
and
ss
sbb
call
mov
cmc
pop
fldenv
bound
sbb
mov
out
pop
sub
test
test
sar
cmp
fisttps
popf
mov
mov
adc
mov
aas
jmp
jmp
and
xlat
dec
xor
nop
pop
xchg
jb
test
mov
rcll
or
test
popf
sbb
outsl
movsb
sbb
ja
cmp
pop
and
xor
xchg
cli
sbbb
xor
inc
and
mov
cmpsb
push
dec
mov
lods
xchg
jne
and
dec
scas
or
std
popf
jo
xchg
imul
ffree
test
mov
in
add
lahf
xchg
inc
inc
enter
xchg
popf
decl
adc
enter
mov
fs
in
adc
mov
add
add
add
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
pushl
pushl
call
jmp
in
ss
xor
icebp
add
or
and
cmpb
jle
testb
int3
sbb
and
push
or
cmpsl
pusha
into
mov
or
test
cmpsl
inc
sbb
loopne
popa
mov
or
and
insb
loope
test
mov
insb
rcr
iret
xchg
stc
int
mov
fsubr
lds
xchg
inc
cmp
lods
dec
xor
ljmp
sub
je
xchg
leave
inc
mov
addr16
sub
xchg
lcall
xlat
lods
push
cmp
add
add
ss
mov
and
test
push
xchg
mov
fucomi
test
jecxz
fidivrs
adc
xor
mov
lea
xchg
dec
stos
hlt
sub
in
dec
xlat
inc
cwtl
mov
cmp
aaa
mov
bound
jb
sti
mov
ret
scas
cmpb
out
xchg
lods
push
jg
pop
pop
push
out
inc
cld
into
pop
push
add
dec
push
xchg
divb
sub
inc
cmpsl
outsl
pop
sbb
inc
fwait
xor
jmp
mov
out
inc
ret
push
in
int
sahf
loopne
push
sub
jmp
mov
sbb
stc
xchg
adc
cmp
and
je,pn
sub
or
and
xchg
cmp
rolb
gs
je
pop
adc
loop
cltd
jmp
std
bound
out
jge
or
cwtl
push
js
adc
push
outsl
and
orb
test
inc
das
rcl
or
clc
bound
push
push
jne
js
xchg
rcr
push
xchg
test
pop
cld
inc
and
dec
imul
or
sahf
andb
pop
std
cmp
jbe
fwait
pop
mov
mov
testb
cltd
sahf
subb
mov
xor
jne
and
mov
push
sbb
test
enter
adc
mov
orl
dec
mov
popa
out
inc
sub
xor
hlt
iret
xor
jge
mov
add
sub
xor
out
add
mov
or
fisttpl
push
mov
fwait
cmp
lcall
adc
pop
outsl
xchg
out
jno
mov
lcall
lods
push
test
ret
or
pop
stc
adc
xchg
push
icebp
cmp
mov
pop
mov
mov
stos
xlat
fstpl
cmovp
out
ret
or
xor
push
mov
clc
in
pusha
mov
cvtps2pd
test
mov
hlt
jp
cmpsb
fisttpll
shl
lret
dec
pusha
push
repz
fistps
jo
ficoms
mov
ja
mov
call
ret
arpl
cmp
add
les
inc
pop
lea
fbstp
shlw
jne
mov
add
sbb
pushl
es
dec
arpl
push
adcb
fwait
addb
push
or
mov
push
push
pushf
mov
cmp
sbb
sub
loopne
int3
or
ret
adc
popa
out
mov
mov
je
jge
das
pop
icebp
test
leave
stos
mov
xchg
xor
aas
ret
and
out
pop
sbb
sub
mov
cwtl
aaa
pop
mov
xor
pop
jmp
push
clc
clc
mov
test
adc
hlt
js
js
jle
hlt
jns
jle
dec
mov
pop
push
icebp
fistpll
das
aam
scas
repnz
mov
sbb
popa
jge
test
es
adc
add
push
loope
add
xor
sar
jmp
jnp
arpl
adcb
mov
adc
inc
xor
dec
int
and
pop
adc
sti
mov
xchg
test
lahf
clc
add
xor
enter
shll
sbb
mov
inc
vmread
and
xchg
in
insl
cmp
mov
cwtl
xchg
mov
das
out
icebp
orb
je
popa
clc
daa
pop
push
test
ja
inc
and
shll
and
mov
push
dec
fisubs
dec
or
test
lahf
mov
xor
sahf
cmpsl
pop
in
push
nop
pop
out
subl
cli
inc
fldl
or
or
mov
jle
loopne
and
stos
mov
outsl
jne
xor
loope
adc
adc
fcoml
inc
jge
inc
jae
mov
push
scas
jae
popf
add
lock
mov
imul
in
mov
lock
or
sub
or
xlat
cs
fstpl
jbe
in
in
hlt
jns
jo
out
push
jbe
adc
sbb
add
jo
ret
jmp
jp
sahf
jbe
xchg
mov
jl
jo
lret
add
loope
mov
into
and
sub
xchg
lcall
pop
mov
popa
jns
mov
scas
daa
movsl
sbb
push
and
mov
sbb
shrl
mov
adc
shrl
popf
stos
xchg
add
outsb
rcrb
mov
push
ja
ficompl
add
push
es
sbb
mov
mov
movsl
add
adc
out
mov
pop
mov
insl
imul
xorl
cmp
push
pusha
icebp
es
loop
push
inc
jns
cwtl
pop
nop
idivb
push
shrl
pop
jecxz
imul
mov
cltd
or
xchg
rclb
inc
mov
out
rcl
popa
xor
pushl
push
sub
scas
into
cmpsb
rclb
js
pop
add
pop
popf
lea
xchg
push
std
in
les
xor
pop
mov
push
push
fdivl
push
mov
xchg
sub
mov
fsubs
xchg
cwtl
or
aam
sbb
notb
pop
loopne
cmp
dec
loope
adc
push
push
ja
les
push
rep
xchg
mov
lahf
out
ss
cmp
xlat
ret
popf
lret
xchg
inc
in
xor
push
data16
cmp
xor
mov
jp
push
pop
popf
shlb
int3
inc
addb
bound
jb
adc
push
lret
add
and
jb
xchg
and
add
add
mov
cmc
iret
into
dec
sub
adc
mov
scas
out
jae
mov
mov
add
mov
dec
imul
xor
imul
dec
add
pop
leave
ret
push
mov
push
movl
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
xor
mov
andl
mov
add
xor
cmp
movl
jne
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
add
mov
mov
mov
xor
push
jmp
mov
jae
mov
sub
jnp
insb
aam
inc
jle
pushf
jg
jle
cs
pop
int3
les
cmp
mov
lahf
add
imul
pop
icebp
jbe
in
or
les
sbb
inc
cmp
dec
lret
fildl
dec
push
test
cmp
and
mov
add
cmpsl
rol
hlt
pop
or
dec
pop
jp
cld
and
pusha
add
or
sbb
mov
jbe
nop
or
gs
lcall
xchg
iret
inc
lds
sbb
ja
pushl
mov
adc
push
pop
pop
cmp
lret
xor
lea
xchg
mov
int
push
hlt
or
adc
xchg
inc
adc
mov
or
call
dec
fisubl
icebp
test
hlt
push
or
pop
sbb
out
or
mov
test
adc
cmc
pop
adc
push
scas
adc
pop
sbb
or
pop
fdiv
pop
and
inc
aaa
cmp
adc
add
jp
ret
xchg
sub
dec
adc
rcrl
adc
loopne
cmp
cld
addr16
xlat
cmp
lds
lods
or
xor
fwait
test
jnp
sbb
ret
int
mov
andl
jbe
push
mov
jge
xor
dec
adc
pop
cmp
sbb
xchg
dec
mov
out
lock
in
call
mov
repnz
push
or
dec
imulb
stos
lods
jge
jne
mov
jmp
cmc
mov
enter
cmpsl
mov
cmp
in
and
pushf
jg
jle
xor
movsl
sub
rcll
xorb
push
imul
mov
jg
jg
xchg
sahf
out
and
fsubrl
sbbb
fmuls
xchg
xchg
ret
and
pop
xchg
sbb
fucomp
pop
rorl
lods
inc
push
xchg
imul
call
leave
cs
or
fstps
push
ret
or
mov
sub
arpl
adc
jle
add
cmc
mov
jmp
and
imul
inc
loop
imul
xchg
push
pop
lahf
mov
xchg
scas
xchg
bound
add
es
scas
mov
mov
arpl
sub
adc
pop
mov
out
sbb
fisubrl
mov
cs
jle
jb
dec
mov
or
push
cmp
add
xor
addr16
jbe
and
mov
pop
aaa
mov
sub
inc
call
stc
rclb
nop
clc
inc
ds
movsb
sbb
and
sbb
ljmp
cli
fidivrs
leave
mov
jmp
or
push
stos
push
out
mov
push
popf
out
xor
sbb
inc
cmp
sti
test
pop
xor
xchg
and
out
push
aas
pop
lods
mov
or
aas
and
imul
inc
and
lret
outsl
jae
xor
cmp
sbb
sarl
push
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzbl
adc
mov
andl
xor
add
movl
jmp
cmp
arpl
mov
arpl
in
call
jle
js
jle
jns
lret
faddl
dec
fildl
push
jle
jg
xor
jne
mov
sub
stos
or
xchg
xchg
add
sbb
ret
mov
leave
add
ja
add
in
add
mov
adc
mov
and
out
push
popf
std
jge
addr16
mov
outsl
loope
nop
pop
fmulp
xchg
inc
mov
data16
shrb
popa
pop
mov
inc
and
aaa
vandnpd
repnz
and
sub
lahf
dec
scas
lcall
mov
dec
and
push
insl
xor
icebp
pop
iret
and
jns
sti
sub
push
add
cwtl
enter
mov
dec
push
loopne
imul
loopne
mov
lret
sbb
movb
aam
push
dec
shl
negl
push
sub
test
mov
mov
inc
sub
xchg
lea
mulb
pop
cld
ret
rcrl
xor
ds
sti
jne
mov
mov
cmpsl
and
mov
rcrl
sub
andb
push
daa
mov
aas
inc
pop
pop
sahf
ljmp
lds
sub
mov
mov
jae
out
das
mov
pop
lock
out
cmp
jge
fiaddl
scas
ret
es
or
add
xor
lods
sub
mov
pop
mov
fstpl
mov
in
lahf
lea
jmp
clc
cmc
fsub
mov
loopne
xchg
inc
sahf
shrb
mov
ss
push
jns
jg
jl
repz
jne
ljmp
push
inc
push
xchg
mov
nop
std
xchg
popa
mov
add
sub
xchg
fwait
paddq
in
std
xchg
repnz
roll
push
or
mov
insb
loop
and
jb
lds
push
inc
push
pop
mov
jg
mov
pusha
add
jge
jg
fidivrl
mov
jp
clc
dec
cmc
push
es
cmp
lcall
das
inc
cwtl
cmp
loope
xchg
adc
pushf
cmpsb
inc
rolb
xorl
jo
dec
lret
sub
shlb
jbe
xor
add
mov
adc
sbb
mov
mov
in
sarb
lods
push
jg
push
loop
cmc
lcall
aam
sahf
mov
mov
movl
movl
mov
mov
push
movl
mov
mov
cmp
movl
je
mov
xor
subl
xor
xorl
lea
xor
cmp
jne
movl
jmp
jmp
inc
lods
xchg
addr16
mov
leave
dec
jle
popf
js
jle
jmp
popa
mov
pop
das
and
or
pop
sbb
mov
jmp
sub
mov
push
mov
sbb
rcll
mov
mov
negl
gs
ss
dec
dec
mov
popf
xchg
jmp
in
daa
sbb
xor
pop
jp
sub
cwtl
sbbb
cli
popf
and
add
sarl
pop
add
xchg
cld
jae
stos
mov
and
adc
jb
adc
mov
cmp
sbb
fwait
and
sub
pop
and
scas
xchg
jg
enter
shl
and
jb
lea
clc
aad
scas
cmp
pop
adc
and
dec
stos
test
cmp
lea
repnz
roll
daa
call
push
dec
stos
insb
add
leave
xchg
mov
or
scas
dec
push
jg
js
repz
js
js
loope
mov
lods
mov
pop
sub
in
or
mov
cs
mov
cld
stos
loopne
push
imull
aam
lock
xor
into
js
ljmp
push
dec
sbb
repz
in
sar
std
sub
or
cmp
cmc
push
es
and
adc
popf
loopne
xlat
xor
mov
sub
fwait
sbb
dec
outsb
das
or
or
loop
inc
xor
out
mov
es
stc
scas
or
repnz
subb
push
sbb
lahf
push
jge
cmpsl
and
sub
xchg
iret
out
ja
in
dec
ret
mov
js
dec
add
in
movsl
je
ret
xchg
xchg
sub
xchg
lods
pop
cmp
sub
pop
mov
mov
aaa
sbb
shlb
push
pop
jo
inc
cmp
jns
std
outsl
test
cli
sahf
inc
lcall
dec
mov
sbb
or
jns
mov
mov
aas
jl
sbb
aaa
cmp
mov
jnp
ret
push
push
out
ljmp
negl
mov
sub
les
jno
outsl
mov
jne
mov
imul
mov
imul
push
pop
push
xor
push
movsb
lock
bound
lret
xor
in
lods
fisubl
repnz
jge
jae
add
mov
xor
add
mov
mov
xor
jmp
jo
rsqrtps
pop
jge
pop
mov
dec
push
js
jle
push
and
in
outsl
adc
gs
sub
or
fildl
inc
out
add
sti
pmuludq
test
dec
stos
repnz
sub
leave
decb
xor
loopne
shrl
sbb
add
les
jns
arpl
jg
sbb
cmc
je
out
mov
push
and
aam
push
test
xchg
cltd
int
xor
in
iret
inc
cmpsb
jb
daa
rorb
fadd
fistps
test
rcl
push
scas
rol
out
add
rorl
cmp
test
cs
xchg
arpl
sub
xor
jge
push
fwait
movsb
xchg
xor
or
fimuls
addr16
xor
mov
cmp
sbb
mov
and
loope
inc
dec
loop
push
xor
dec
into
xchg
adc
cmp
push
mov
push
adc
jecxz
sub
sbb
push
flds
out
je
mov
sbb
repnz
lahf
je
mov
mov
cwtl
out
pop
mov
add
hlt
pop
test
repz
mov
push
imul
adc
push
mov
cltd
mov
sbb
dec
xchg
mov
cmp
mov
jb
xchg
mov
sub
out
mov
push
dec
or
repnz
fidivl
ret
xchg
fs
xor
jae
das
inc
mov
cwtl
cmp
push
shlb
ret
shrl
mov
popa
xor
sbb
iret
xchg
mov
inc
mov
add
push
mov
dec
adc
leave
push
outsb
jae
and
in
inc
mov
sub
pop
jecxz
push
inc
mov
mov
adc
mov
rcl
cmpsl
pop
cmp
fisubs
add
sar
mov
cmp
cmp
or
orl
sbb
lock
cli
push
xchg
sbb
jl
nop
mov
mov
fsts
aaa
mov
dec
data16
movsb
dec
movsl
lods
into
mov
stc
cmpsb
test
add
aam
push
ss
jle
mov
push
test
sbb
jge
bound
sub
addb
mov
add
dec
add
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
call
jmp
mov
leave
ret
push
mov
sub
movl
mov
xor
movl
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adcl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
push
mov
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
adc
mov
xorl
add
orl
mov
sbb
mov
xorl
push
movl
push
sbbl
test
je
mov
sbb
mov
andl
xor
or
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
adc
imul
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
add
jmp
roll
std
mov
xchg
inc
jg
repnz
pop
jg
jle
ror
in
dec
lret
pop
ss
paddusb
and
sbb
je
inc
mov
or
sbb
pop
sub
cmp
sub
cmp
mov
mov
and
insl
xor
mov
sub
push
into
cwtl
push
cmc
je
and
repnz
adc
bound
or
repnz
sbb
add
inc
sub
push
and
ffreep
dec
xor
jle
mov
dec
lds
fcompp
test
inc
jmp
xor
or
jmp
mov
into
adc
dec
cltd
out
test
mov
inc
fs
arpl
and
subb
push
mov
sbb
push
jmp
dec
mov
shlb
ja
mov
jg
inc
jnp
mov
dec
push
outsl
xchg
stc
push
fadds
lds
jns
pop
mov
or
xor
push
inc
pop
lcall
hlt
or
push
clc
stc
repz
sbb
push
dec
bound
sbb
cs
jge
push
or
test
shll
fstpl
push
mov
mov
mov
and
lds
xor
push
jmp
std
test
fbstp
xor
xor
inc
inc
xchg
movsl
lea
in
mov
jg
xor
aas
lcall
pushf
mov
jg
jg
es
lds
cmc
cltd
xchg
aaa
or
push
dec
stos
int3
mov
ficoml
mov
scas
jae
jl
mov
mov
xchg
push
pop
dec
sbb
addb
jnp
mov
fwait
mov
jbe
jns
add
or
mov
jmp
lret
outsl
dec
jne
stos
movsb
loope
lods
test
pop
mov
push
jle
pop
jg
jle
and
int
scas
cmpsb
mov
sarb
lods
cmp
mov
sub
or
or
push
inc
jno
and
jp
jae
fstpt
push
mov
mov
dec
pop
std
sbb
dec
xlat
test
int
aam
add
jecxz
mull
fisttpl
push
jne
and
popf
mov
dec
loope
mov
iret
dec
or
leave
in
enter
gs
paddsb
xchg
mov
sbb
push
xchg
xor
in
cmp
xor
dec
outsl
mov
and
cli
xor
mov
rclb
pop
outsl
pop
fistps
or
push
clc
daa
popa
js
adc
sbb
adc
adc
mov
pushf
xchg
sub
lock
in
les
xor
dec
sbb
fcomps
rcrl
sahf
add
and
test
adc
repnz
scas
mov
ja
jecxz
fstps
push
int3
push
dec
jae
jge
in
mov
adc
lea
jg
dec
push
add
sub
add
ret
jne
or
inc
add
int3
inc
mov
ss
sub
pop
rolb
add
movhlps
add
mov
push
dec
xchg
xchg
add
jo
adc
cltd
std
fisubl
in
sub
xlat
cld
pop
test
sbb
mov
ret
out
bound
mov
addr16
push
cmp
cs
imul
jle
repnz
jge
mov
mov
in
ja
rcrb
inc
push
insl
xor
adc
mov
xor
mov
sub
sbb
ja
push
pop
push
sub
adc
pop
xlat
decl
cmpsb
loopne
sahf
aad
jecxz
scas
jg
es
xchg
out
xchg
sub
xor
xor
adc
mov
mov
decl
mov
mov
mov
addl
xor
xor
add
mov
mov
mov
movl
je
adcl
mov
adcl
xor
orl
add
movl
cmp
jne
sbbl
pushl
orl
call
and
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
xor
add
cmp
je
orl
pushl
pushl
subl
call
movzwl
and
mov
mov
movl
cmpl
je
cmpl
jne
push
push
call
xor
or
dec
mov
jmp
add
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
call
mov
dec
mov
jmp
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
mov
jmp
scas
repz
add
push
out
sub
daa
xchg
xlat
adc
push
jle
pop
jg
jle
adc
pop
jmp
out
test
fimuls
push
shlb
xor
inc
ss
test
push
enter
fs
bound
movzwl
scas
xor
lret
pop
push
cmp
mov
ds
push
in
test
xchg
sbb
and
jmp
xor
mov
pop
mov
cmp
nop
insb
jne
pop
xchg
add
mov
adc
lcall
in
pmaddwd
dec
inc
add
pop
and
jno
aaa
cmc
push
jno
mov
jl
mov
repz
pop
pop
push
push
mov
ljmp
pop
sti
and
pop
popf
icebp
lock
inc
cmp
jle
inc
mov
mov
jbe
in
mov
sbb
out
loopne
fldl
xlat
movsl
jae
dec
mov
or
xor
pusha
lods
lock
lock
xor
push
aaa
fstpt
inc
inc
js
xchg
movsb
imul
jbe
in
inc
test
xchg
pop
xor
mov
repnz
in
fimull
xchg
or
cmp
sahf
push
fimull
out
loop
jb
or
cmp
mov
xor
push
mov
jmp
mov
sbb
repz
xchg
scas
stc
ss
scas
adc
out
mov
mov
je
subl
popf
iret
mov
dec
sbb
adc
pop
lods
js
cmpsb
sub
push
ja
or
mov
movsb
xor
ret
mov
mov
mov
jg
or
stos
jns
pop
outsb
xor
sbb
arpl
mov
call
imull
add
lea
mov
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
jmp
lret
dec
add
je
jge
out
inc
lret
push
jle
pop
jg
jle
loop
mov
xor
int3
lods
iret
cmp
addr16
cli
lret
aaa
cmp
sti
adc
ret
pop
xchg
sahf
sbb
ret
mov
xlat
dec
mov
ds
mov
dec
push
fidivl
ds
inc
mov
in
lock
or
xor
and
xchg
arpl
jmp
cmp
int
pop
loop
mov
lock
ss
adc
jecxz
cld
fdivrl
xor
jle
test
cld
inc
cli
push
fcoms
mov
aaa
mov
jle
cwtl
mov
stos
pop
push
daa
pop
pusha
push
jb
sbb
pop
push
test
hlt
fisttps
aas
push
mov
lock
shlb
sub
mov
push
out
xor
pop
add
fldcw
xor
mov
push
cmp
in
fwait
dec
mov
mov
out
adc
xchg
jp
outsb
in
jbe
insb
inc
sub
aam
inc
pop
dec
adcb
dec
movsl
cmp
mov
lods
or
or
sbb
and
cwtl
adcl
aaa
fdiv
fcoml
push
add
test
icebp
mov
lock
out
cmp
dec
or
clc
leave
add
mov
fcmovbe
and
push
imul
testb
stos
movsb
mov
loop
daa
sub
ret
dec
int3
adc
in
push
int
pop
fs
in
sbb
cltd
test
stos
or
and
call
repnz
mov
test
mov
call
int
push
prefetch
dec
loop
adc
xchg
mov
push
xchg
sub
lcall
and
icebp
jl
cmp
xchg
pop
adc
mov
mov
jmp
cmp
jne
xchg
mov
or
inc
adc
jle
jg
jle
scas
xchg
call
or
mov
mov
sub
mov
insb
iret
lods
inc
bound
outsl
xchg
mov
xor
mov
xor
in
jnp
and
in
adc
xchg
fisubs
outsb
pusha
xchg
es
mov
mov
in
cmp
push
and
movb
test
mov
popf
mov
ret
fwait
add
xlat
xlat
and
push
loope
push
das
xor
inc
fisubrs
add
lahf
pop
stos
insb
dec
scas
adc
xchg
std
into
jge
mov
mul
out
mov
clc
push
jne
repz
shr
repz
out
repz
push
add
xor
adc
pop
iret
test
cmp
rcll
sub
pop
or
jle
inc
loopne
test
or
xchg
pop
rcll
mov
dec
pop
mov
pop
aad
test
dec
cwtl
xor
scas
xchg
pop
add
fwait
sbb
in
movsb
xor
xchg
cmp
jno
mov
xorb
fmul
aaa
mov
pop
mov
mov
sbb
pop
xor
push
pop
fisttpll
dec
inc
jns
in
fidivl
or
test
or
movl
push
cmp
int3
dec
das
dec
pop
sub
adc
jp
ret
sahf
push
push
in
xor
scas
imul
mov
xor
and
shrl
xchg
insb
jae
fildl
dec
aaa
out
and
push
dec
out
repz
inc
cmpsl
das
stos
push
jnp
pop
cld
sub
push
jle
sbb
cs
xchg
jns
test
pop
adc
cli
pop
sub
imul
pop
mov
jae
mov
ja
inc
or
inc
cld
mov
xor
add
cmp
jne
mov
xor
jmp
mov
jmp
xchg
aam
jne
xchg
in
sub
aas
fidivrl
jle
pop
jg
jle
mov
pop
xorb
jo
cmp
sub
jns
xchg
cmp
sbb
lods
add
pusha
fadds
daa
sti
mov
aad
and
into
push
add
insb
jmp
mov
jmp
shll
cmpsl
push
xlat
ret
push
stos
movsb
dec
xchg
test
xor
mov
xchg
hlt
sbb
adc
mov
push
in
cld
inc
dec
mov
nop
cmp
das
inc
roll
filds
cwtl
mov
jmp
or
sbb
add
cmp
loope
mov
mov
mov
mov
mov
jle
outsl
or
jno
aas
xchg
aad
xchg
jge
test
incl
jmp
enter
lahf
sbb
mov
sbb
sub
mov
inc
push
sub
dec
sub
clc
and
out
sahf
popa
jne
lcall
sbb
mov
pop
mov
iret
lcall
out
inc
mov
outsl
jbe
xor
xchg
aas
pop
pop
pop
add
add
lods
popf
iret
pop
rorb
lcall
and
out
push
shll
inc
pop
pop
fimuls
jmp
and
cmp
fwait
repz
sahf
cmpsb
mov
sbb
das
lea
gs
aas
xchg
in
xor
and
cld
cld
mov
in
xor
xor
int3
mov
jmp
xchg
mov
shrb
mov
outsb
imul
cmp
push
cmp
adc
sbb
mov
dec
bound
fnstcw
mov
aam
xchg
sbb
outsb
lcall
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
jmp
inc
mov
pop
push
outsb
outsl
stos
inc
xchg
xchg
pop
pop
jle
pop
jg
jle
addr16
xor
addr16
adc
add
shll
add
rolb
pusha
fcomp
hlt
inc
nop
sbb
mov
xor
out
push
int3
gs
andb
popf
cmp
fwait
pop
bound
rcrl
cld
enter
sbb
leave
data16
xchg
out
aas
add
or
push
jg
daa
dec
xor
mov
mov
cmp
test
out
jl
jae
add
movntps
push
or
rcrb
or
test
insl
mov
jge
movsb
je
pop
out
mov
insl
mov
pop
cmpl
shrl
and
sbb
rcrl
loope
nop
and
mov
pushf
rcrb
mov
les
mov
push
xor
sti
or
sbb
in
icebp
aas
or
je
aas
popa
and
or
bound
idivl
xchg
pop
adc
ds
pushf
sub
xchg
mov
ss
pop
cltd
fwait
cmp
push
movsb
mov
addr16
enter
fmull
adc
test
rclb
cld
jbe
pusha
push
mov
and
xchg
adc
xlat
int
jae
arpl
test
out
xchg
adc
pop
pop
imul
pop
xor
mov
adc
mov
push
out
dec
jg
dec
in
sub
je
jns
sbbl
mov
push
testb
test
push
call
iret
shrb
dec
mov
mov
mov
loope
cmp
dec
adc
loope
roll
popa
arpl
mov
push
xchg
dec
pop
test
jmp
adc
shr
add
add
cmp
cltd
int
jno
ja
loope
add
cwtl
insl
inc
pop
jle
pop
jg
jle
fistl
mov
mov
mov
or
fdivrs
adc
insl
adc
lcall
idiv
jne
scas
in
mov
insb
sub
pop
fmull
loope
xchg
jmp
sahf
cmp
or
pop
js
mov
mov
xor
push
cld
mov
jle
stc
mov
imul
jle
fnstenv
movsb
push
sbb
add
lods
adc
add
sbb
loopne
mov
mov
pop
cltd
leave
adc
pop
fs
adc
and
mov
xchg
out
mov
call
mov
ja
xor
stos
cmp
out
push
xorl
shrb
insl
sbb
cs
lea
add
shrb
pop
xlat
adc
lahf
or
jl
jno
divb
aam
jecxz
test
cs
fists
and
inc
cli
jb
xchg
inc
cltd
push
repz
call
andl
push
movsl
fcomp
cmc
into
jo
or
sbb
inc
fmull
ss
jp
stos
xchg
add
mov
fnstsw
xlat
mov
sbb
mov
stc
push
clc
clc
or
add
mov
or
outsb
jp
ds
pop
dec
lret
jp
outsb
cmc
fcoms
out
lcall
xor
inc
jmp
push
and
mov
jnp
int3
or
inc
add
sub
cld
jge
mov
sbb
xlat
repz
in
aad
imull
lea
mov
jecxz
pop
fwait
jle
iret
jno
mov
pop
xlat
in
hlt
sysexit
xor
xor
iret
cli
sbb
rep
sub
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
jmp
ljmp
popa
cmc
xchg
fcomps
pop
jle
pop
jg
jle
imul
jle
xchg
add
lods
dec
push
jb
les
pop
insl
mov
jns
out
lods
ja
jbe
dec
lcall
mov
xor
mov
jnp
jge
aas
push
mov
movsb
call
adc
xor
xor
lret
aas
pop
imul
ret
icebp
push
fsubl
adc
addr16
mov
imul
cmovae
xchg
fwait
loop
or
pop
cli
dec
cli
add
pushl
adc
ret
sbb
aad
cmp
xor
imul
pop
adc
adc
cltd
sti
cmp
ret
push
ficomps
push
push
out
fcoml
in
inc
into
mov
pop
out
sub
push
stos
fsubl
adc
xlat
and
jmp
push
jbe
pop
push
in
leave
lcall
test
ret
shl
jle
xor
decl
cmp
subb
hlt
push
mov
popf
out
inc
imul
sar
mov
aaa
or
xor
xchg
cld
outsb
mulb
lcall
jbe
sbb
push
test
xchg
int
insl
xchg
jmp
nop
sbb
mov
jnp
repz
mov
push
stos
or
cmp
jecxz
or
sub
idivb
rcll
pop
mov
stos
and
imul
add
ret
stos
fwait
jp
test
loope
int
add
inc
nop
aaa
nop
test
pushf
insb
cld
push
rol
pop
cmc
aad
dec
iret
pop
outsb
cmp
loop
xchg
mov
add
pop
lret
in
mov
cmp
and
subl
push
mov
das
and
xchg
xlat
fnsave
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
xor
add
inc
cmp
add
add
add
add
push
add
jl
add
xchg
add
xchg
cmp
add
add
mov
add
les
add
into
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
xor
add
cmp
add
dec
cmp
add
add
pop
cmp
add
add
add
test
add
mov
add
cwtl
cmp
add
cmp
add
add
enter
fdivrl
add
out
add
repnz
add
cmp
add
cmp
add
cmp
add
add
add
cmp
add
add
pop
cmp
add
add
je
add
nop
cmp
add
add
int3
cmp
add
cmp
add
cmp
add
cmp
add
add
sbb
add
cmp
add
cmp
add
add
pop
cmp
add
add
js
add
xchg
cmp
add
add
ret
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
sub
add
cmp
add
pop
cmp
add
cmpb
add
cmp
add
ljmp
add
add
sbb
add
sub
add
cmp
add
dec
add
pop
add
insb
add
jl
add
mov
add
cwtl
add
lods
add
mov
add
fidivrl
add
lock
add
push
aas
add
sbb
add
sub
add
cmp
add
dec
aas
add
bound
add
outsb
aas
add
js
add
xchg
add
xchg
aas
add
movsb
aas
add
mov
add
enter
fidivrl
add
in
aas
add
clc
aas
add
or
add
inc
add
xor
add
dec
inc
add
pop
inc
add
fs
add
je
add
addb
cwtl
inc
add
lods
inc
add
mov
inc
add
loopne
add
lock
add
or
add
inc
add
sub
add
inc
add
inc
inc
add
push
inc
add
pusha
inc
add
jo
add
test
add
inc
add
scas
inc
add
mov
inc
add
call
inc
add
push
inc
add
sbb
add
inc
add
cmp
add
add
pusha
inc
add
add
add
addb
cwtl
inc
add
scas
inc
add
mov
inc
add
faddl
add
inc
add
clc
inc
add
push
inc
add
sbb
add
add
xor
add
add
push
inc
add
pop
inc
add
outsb
inc
add
test
add
add
mov
inc
add
fiaddl
add
inc
add
clc
inc
add
or
adc
add
and
xor
add
inc
inc
add
pop
inc
add
inc
add
jbe
add
mov
sahf
inc
add
scas
inc
add
movb
inc
add
in
inc
add
clc
inc
add
or
add
inc
add
sub
add
inc
add
inc
inc
add
dec
inc
add
pop
inc
add
add
add
jbe
add
mov
add
inc
add
lret
add
inc
add
in
inc
add
add
add
inc
add
sub
add
inc
add
dec
inc
add
pusha
inc
add
insb
inc
add
addb
xchg
inc
add
mov
inc
add
ret
add
inc
add
call
inc
add
incb
add
inc
add
and
add
cmp
add
add
add
push
add
jle
add
xchg
inc
add
mov
inc
add
int3
inc
add
faddl
add
inc
add
push
dec
add
sbb
add
dec
add
cmp
add
add
push
dec
add
outsb
dec
add
mov
add
dec
add
mov
add
rorb
dec
add
add
add
lock
add
decb
add
dec
add
push
dec
add
cs
add
add
add
push
dec
add
stos
inc
push
dec
add
add
add
add
cmp
dec
add
ret
cmp
add
add
add
add
add
add
add
add
add
add
pop
xor
add
add
fs
add
sub
add
add
add
jb
insl
pop
dec
outsl
imul
ja
imul
fs
gs
outsl
popa
jb
dec
gs
inc
pop
inc
pop
inc
cmp
add
add
add
xor
add
add
add
and
add
add
add
aam
add
je
add
mov
add
nop
aaa
add
insb
inc
add
jo
add
dec
cmp
add
dec
add
sub
add
adc
add
inc
dec
add
hlt
xor
add
add
bound
add
add
xor
add
inc
cmp
add
add
add
add
push
add
jl
add
xchg
add
xchg
cmp
add
add
mov
add
les
add
into
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
xor
add
cmp
add
dec
cmp
add
add
pop
cmp
add
add
add
test
add
mov
add
cwtl
cmp
add
cmp
add
add
enter
fdivrl
add
out
add
repnz
add
cmp
add
cmp
add
cmp
add
add
add
cmp
add
add
pop
cmp
add
add
je
add
nop
cmp
add
add
int3
cmp
add
cmp
add
cmp
add
cmp
add
add
sbb
add
cmp
add
cmp
add
add
pop
cmp
add
add
js
add
xchg
cmp
add
add
ret
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
sub
add
cmp
add
pop
cmp
add
cmpb
add
cmp
add
ljmp
add
add
sbb
add
sub
add
cmp
add
dec
add
pop
add
insb
add
jl
add
mov
add
cwtl
add
lods
add
mov
add
fidivrl
add
lock
add
push
aas
add
sbb
add
sub
add
cmp
add
dec
aas
add
bound
add
outsb
aas
add
js
add
xchg
add
xchg
aas
add
movsb
aas
add
mov
add
enter
fidivrl
add
in
aas
add
clc
aas
add
or
add
inc
add
xor
add
dec
inc
add
pop
inc
add
fs
add
je
add
addb
cwtl
inc
add
lods
inc
add
mov
inc
add
loopne
add
lock
add
or
add
inc
add
sub
add
inc
add
inc
inc
add
push
inc
add
pusha
inc
add
jo
add
test
add
inc
add
scas
inc
add
mov
inc
add
call
inc
add
push
inc
add
sbb
add
inc
add
cmp
add
add
pusha
inc
add
add
add
addb
cwtl
inc
add
scas
inc
add
mov
inc
add
faddl
add
inc
add
clc
inc
add
push
inc
add
sbb
add
add
xor
add
add
push
inc
add
pop
inc
add
outsb
inc
add
test
add
add
mov
inc
add
fiaddl
add
inc
add
clc
inc
add
or
adc
add
and
xor
add
inc
inc
add
pop
inc
add
inc
add
jbe
add
mov
sahf
inc
add
scas
inc
add
movb
inc
add
in
inc
add
clc
inc
add
or
add
inc
add
sub
add
inc
add
inc
inc
add
dec
inc
add
pop
inc
add
add
add
jbe
add
mov
add
inc
add
lret
add
inc
add
in
inc
add
add
add
inc
add
sub
add
inc
add
dec
inc
add
pusha
inc
add
insb
inc
add
addb
xchg
inc
add
mov
inc
add
ret
add
inc
add
call
inc
add
incb
add
inc
add
and
add
cmp
add
add
add
push
add
jle
add
xchg
inc
add
mov
inc
add
int3
inc
add
faddl
add
inc
add
push
dec
add
sbb
add
dec
add
cmp
add
add
push
dec
add
outsb
dec
add
mov
add
dec
add
mov
add
rorb
dec
add
add
add
lock
add
decb
add
dec
add
push
dec
add
cs
add
add
add
push
dec
add
add
add
cmc
add
outsl
outsb
je
outsl
insb
data16
add
arpl
insb
outsl
arpl
add
data16
outsl
outsl
jb
push
add
arpl
push
add
outsl
ja
outsl
ja
jb
add
gs
popa
jo
pop
je
jo
add
in
jae
jb
push
add
jo
pop
insw
outsl
fs
int3
add
outsl
jb
add
js
imul
imul
popa
add
fwait
add
jo
pop
arpl
insl
outsl
fs
sub
arpl
arpl
add
data16
add
or
je
ja
jo
gs
add
data16
je
add
outsb
jbe
add
arpl
imul
add
jo
imul
add
je
push
add
je
add
mov
outsl
ja
add
test
jae
popa
arpl
add
add
outsl
insb
outsl
ja
jb
fildl
pop
popa
insl
jae
pop
gs
je
add
add
imul
add
outsb
imul
add
jae
bound
gs
add
push
add
arpl
inc
imul
jae
jb
arpl
add
add
insl
outsl
jbe
add
cld
add
jb
outsl
insb
add
and
insb
outsb
add
and
pop
gs
je
call
js
je
add
jo
arpl
call
arpl
add
mov
pop
pop
jae
je
jae
jb
popa
je
gs
add
repnz
jb
arpl
add
imul
add
ja
je
jo
add
mov
insl
popa
insb
insb
outsl
arpl
add
pop
pop
addr16
popa
imul
add
ja
arpl
data16
push
inc
push
push
cs
insb
add
xor
dec
outsb
jne
je
insl
dec
outsb
outsw
push
add
sub
inc
gs
popa
jae
inc
arpl
gs
outsl
jo
jo
add
add
outsb
fs
imul
inc
add
dec
imul
add
inc
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
add
jne
insb
push
arpl
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
add
imul
ja
jb
insl
push
outsl
imul
push
imul
ja
add
fs
outsb
jne
add
add
popa
bound
arpl
insb
insb
inc
popa
jb
xor
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
add
add
outsb
fs
imul
rolb
dec
gs
popa
addr16
outsl
js
js
add
outsb
fs
gs
popa
addr16
add
outsb
imul
push
outsl
imul
inc
gs
imul
add
outsl
ja
arpl
insb
insb
inc
popa
jb
mov
dec
outsl
popa
fs
insl
popa
addr16
add
cltd
add
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
inc
add
add
jo
imul
gs
add
sbb
push
gs
outsl
jbe
push
jb
jo
add
gs
jo
popa
je
push
outsb
add
add
push
imul
popa
jae
inc
add
add
je
insb
addr16
je
insl
push
gs
inc
add
ja
outsb
jne
popa
jb
sub
inc
gs
outsb
jne
repnz
jae
dec
gs
popa
addr16
add
push
add
je
insb
addr16
je
insb
dec
inc
add
mov
push
imul
push
arpl
push
add
sbb
inc
gs
arpl
dec
outsb
outsw
add
add
jo
imul
imul
inc
push
js
push
add
add
outsb
fs
gs
popa
addr16
imul
add
add
popa
jb
outsl
ja
jb
jne
push
add
insl
add
je
imul
outsb
addr16
add
mov
push
popa
imul
jne
dec
fs
add
movl
imul
gs
js
add
cmp
arpl
popa
imul
outsb
add
add
outsl
ja
gs
outsl
jb
addr16
jne
fs
imul
into
add
jae
popa
addr16
outsl
js
add
add
je
gs
popa
addr16
add
push
gs
outsb
jne
gs
jne
je
je
insl
add
aad
dec
gs
popa
addr16
outsl
js
add
add
je
outsb
jne
je
imul
add
fs
outsb
jne
add
gs
jns
je
insl
dec
gs
imul
push
outsb
fs
gs
popa
addr16
add
aaa
add
je
outsb
jne
je
je
add
mov
inc
jb
ja
arpl
add
xchg
add
je
outsl
jns
jne
jae
jb
add
inc
fs
jae
push
imul
arpl
pop
add
je
jns
inc
outsl
insb
outsl
jb
jle
dec
imul
jne
je
insl
add
or
inc
jo
outsb
fs
outsb
jne
add
inc
push
outsb
jne
popa
imul
add
push
je
imul
push
arpl
insb
insb
push
imul
xor
inc
push
gs
add
push
gs
jns
inc
outsl
insb
outsl
jb
add
sgdtl
je
insb
addr16
je
insl
add
dec
add
je
outsb
jne
je
insl
inc
imul
or
inc
gs
gs
je
jo
imul
inc
add
je
popa
jb
outsb
je
movb
outsb
fs
popa
jae
add
inc
jb
popa
je
dec
outsb
jne
add
add
je
popa
jb
je
outsl
jae
sub
push
outsb
fs
gs
popa
addr16
add
test
dec
outsb
jae
jb
dec
outsb
jne
je
insl
push
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
inc
add
je
outsl
outsb
imul
push
add
add
jo
imul
gs
add
out
inc
jb
insl
gs
arpl
add
popa
bound
outsb
jne
je
insl
add
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
mov
outsl
ja
jb
insl
push
outsl
imul
jb
ja
outsb
imul
arpl
and
push
arpl
insb
insb
push
imul
add
pop
add
je
arpl
add
je
insb
addr16
je
insl
dec
outsb
je
or
imul
add
pop
add
gs
je
dec
arpl
dec
outsb
imul
dec
add
je
outsb
jne
je
insl
dec
outsb
outsw
push
add
pop
add
je
arpl
insb
insb
dec
outsb
outsw
add
add
popa
jb
outsl
dec
gs
inc
add
sub
fs
outsl
je
data16
gs
popa
addr16
add
sti
add
je
insb
popa
jae
dec
popa
insl
gs
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
push
push
jb
outsl
jb
add
push
gs
imul
js
inc
add
add
popa
jb
outsl
ja
jb
add
xchg
dec
outsb
jae
jb
dec
outsb
jne
add
add
jo
outsb
fs
outsb
jne
add
inc
gs
imul
add
push
gs
arpl
jo
jns
add
inc
gs
jns
inc
outsl
insb
outsl
jb
jb
jae
add
jg
push
push
outsb
outsl
ja
add
inc
push
dec
outsb
jne
add
add
insl
push
outsl
inc
push
add
push
jo
popa
push
add
xchg
push
jns
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
push
add
imul
popa
jae
push
add
addb
push
outsb
outsl
ja
jae
outsb
arpl
mov
jb
outsb
je
inc
add
push
gs
imul
outsb
addr16
add
test
push
ja
je
push
imul
ja
add
add
jo
imul
add
inc
imul
jae
popa
addr16
add
daa
add
je
gs
outsl
popa
jb
push
jns
gs
add
jne
inc
push
imul
add
inc
push
xor
cs
insb
add
lods
add
gs
je
push
arpl
outsb
dec
outsb
imul
add
gs
je
inc
jb
jae
dec
outsb
imul
add
push
imul
iret
add
insb
arpl
insb
gs
add
popa
je
inc
dec
inc
imul
add
jae
jp
push
popa
insb
gs
add
gs
outsl
inc
js
add
popa
je
inc
outsl
outsb
je
outsb
imul
mov
imul
inc
gs
gs
inc
inc
add
aad
inc
js
push
gs
dec
jne
push
add
popa
je
inc
imul
add
arpl
jae
bound
int
inc
jae
popa
jo
add
faddl
push
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
jae
je
imul
dec
jb
inc
js
and
inc
gs
imul
jae
mov
inc
gs
gs
dec
bound
arpl
mov
popa
je
dec
popa
je
push
push
inc
jb
popa
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
addl
imul
add
add
je
imul
jae
lods
add
insb
jns
gs
gs
add
add
je
bound
je
jb
arpl
add
jae
je
outsb
add
push
imul
add
popa
je
push
outsl
insb
imul
add
push
gs
dec
gs
imul
inc
gs
popa
insb
gs
gs
outsb
je
imul
jb
popa
je
dec
inc
push
add
add
insb
arpl
imul
add
je
imul
outsb
jae
outsl
outsb
inc
js
add
add
je
jb
jae
dec
jb
inc
js
into
add
insb
arpl
push
arpl
addl
gs
gs
inc
js
outsb
je
outsl
imul
xlat
add
insb
insb
push
outsb
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
je
imul
add
je
je
arpl
bound
arpl
cmp
inc
gs
jne
jb
outsb
je
bound
arpl
jno
inc
gs
dec
push
xor
stos
add
gs
je
push
arpl
outsb
add
push
je
jb
inc
outsl
arpl
jbe
inc
imul
add
imul
mov
insb
imul
je
add
inc
inc
dec
xor
cs
insb
add
inc
imul
je
imul
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
add
inc
gs
gs
inc
imul
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
insb
dec
popa
insl
gs
imul
add
gs
jb
outsl
jb
outsl
fs
pop
add
je
gs
jo
imul
add
cmc
add
gs
je
push
popa
imul
insl
gs
add
pop
add
outsb
fs
imul
gs
add
test
dec
gs
jo
outsl
arpl
add
jbe
inc
imul
jns
add
rolb
inc
jb
popa
je
inc
imul
outsb
addr16
add
adc
dec
outsl
arpl
push
imul
gs
push
popa
je
dec
popa
insl
gs
add
dec
outsl
fs
gs
popa
outsb
fs
gs
add
mov
je
inc
imul
outsl
bound
push
imul
inc
jb
popa
je
push
gs
popa
jo
outsl
jb
push
add
jmp
inc
gs
imul
bound
gs
js
add
mov
gs
jbe
outsb
je
add
push
insb
gs
js
int3
add
jae
jb
jo
outsb
push
add
add
gs
je
inc
jbe
outsb
je
add
push
add
je
jns
je
insl
inc
imul
jns
add
push
gs
gs
outsl
outsb
imul
imul
add
fs
imul
js
add
pop
add
insb
jae
gs
popa
insb
jne
add
add
inc
popa
fs
gs
fs
je
add
inc
add
je
push
popa
je
dec
popa
insl
gs
add
gs
jae
jb
gs
jne
je
popa
outsb
addr16
inc
add
adc
dec
outsl
arpl
dec
outsl
arpl
mov
jbe
jb
inc
gs
jne
je
outsl
arpl
add
incb
inc
gs
outsl
arpl
gs
outsb
outsw
inc
add
loopne
inc
jb
popa
je
dec
jne
gs
add
adc
inc
imul
outsl
dec
inc
dec
add
xor
inc
jae
popa
jo
inc
outsl
insl
insl
inc
jne
arpl
outsb
add
ss
gs
push
inc
outsl
outsb
je
js
add
sub
dec
outsl
jbe
inc
imul
add
je
push
dec
outsl
arpl
add
push
outsb
insb
outsl
arpl
imul
fs
je
insl
push
add
push
add
je
jns
je
insl
push
imul
jae
insl
outsb
je
mov
popa
imul
je
jo
gs
bound
arpl
add
inc
gs
gs
jo
popa
je
inc
add
out
add
je
imul
movb
je
arpl
imul
outsl
bound
inc
jb
add
roll
inc
jb
popa
je
inc
imul
outsb
addr16
add
cmp
dec
jo
outsb
inc
imul
dec
inc
dec
xor
cs
insb
add
push
add
imul
js
add
add
addr16
gs
jo
insb
addr16
add
add
outsl
outsl
jae
inc
outsl
insb
outsl
jb
add
or
inc
gs
imul
push
add
add
je
popa
jbe
inc
imul
add
arpl
fs
xor
cs
insb
add
inc
add
je
inc
imul
jae
add
dec
push
inc
push
dec
cs
insb
add
push
dec
push
jne
mov
inc
add
dec
inc
add
or
dec
ja
cmp
dec
jb
xor
dec
ss
jnp
sub
dec
sub
push
pop
push
xor
dec
cmp
dec
cmp
dec
jb
xor
dec
ss
popa
dec
sub
dec
sub
bound
arpl
dec
jno
cmp
dec
cmp
dec
dec
dec
xor
cmp
dec
push
jb
jae
addl
jo
jno
aas
dec
jbe
cmp
dec
ds
dec
dec
xor
dec
xor
dec
push
sbbb
setae
nop
jo
jno
aas
dec
jbe
cmp
dec
ds
dec
dec
xor
dec
xor
dec
push
xchg
pop
xchg
bt
mov
aas
dec
pusha
dec
cmp
dec
cmp
dec
dec
dec
xor
cmp
dec
push
mov
add
aas
dec
pusha
dec
cmp
dec
cmp
dec
pop
dec
xor
dec
xor
mov
ret
add
jo
jno
aas
dec
pusha
dec
cmp
dec
cmp
dec
dec
dec
xor
cmp
dec
push
ret
psrlq
shlb
jno
aas
dec
pusha
dec
cmp
dec
cmp
dec
dec
dec
xor
cmp
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
insl
dec
cmp
dec
cmp
dec
cmp
dec
push
loop
jecxz
repz
jo
jno
jo
jno
ds
jg
cmp
dec
cmp
push
ds
dec
dec
xor
dec
xor
add
adc
adc
jno
aas
dec
add
xchg
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
mov
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
test
mov
add
or
inc
add
fstp
inc
inc
add
inc
inc
mov
jne
mov
incb
mov
dec
inc
add
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
ds
pushf
clc
and
pushf
clc
ljmp
add
imul
pushf
clc
popf
jmp
add
jbe
inc
add
adc
fsubs
inc
add
add
add
inc
add
add
dec
add
dec
add
add
add
add
inc
add
add
dec
add
inc
add
add
dec
add
add
jae
insb
popa
imul
dec
dec
inc
inc
insb
imul
imul
insb
jae
push
insb
imul
imul
imul
jae
imul
imul
dec
dec
inc
inc
push
outsl
imul
push
fs
imul
insb
imul
push
jne
jns
imul
jne
fs
push
data16
add
add
add
xor
inc
add
pop
dec
dec
dec
dec
dec
pop
dec
push
dec
or
dec
add
push
dec
pop
dec
push
dec
or
dec
dec
dec
dec
dec
pop
dec
dec
dec
or
dec
add
dec
dec
push
dec
push
dec
inc
dec
pop
dec
dec
dec
push
dec
cmp
add
add
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jno
mov
outsb
jae
bound
add
mov
mov
inc
aaa
inc
jle
jno
mov
imul
inc
xlat
leave
xchg
inc
adc
jge
faddp
leave
xchg
fs
dec
leave
sbb
jno
rorb
add
shlb
xor
inc
push
outsl
push
push
inc
add
dec
inc
add
add
imul
pop
outsb
jbe
jns
push
imul
je
jp
arpl
push
imul
push
imul
push
jb
add
insb
pop
ja
je
bound
in
jnp
jnp
cmc
pushl
sar
fnop
adc
dec
mov
add
cmc
add
add
xchg
mov
sub
aad
std
ret
mov
jge
cltd
pop
dec
pop
ljmp
in
inc
push
xchg
or
cmpsb
cs
jp
ja
push
mov
stc
sub
sbb
int3
nop
call
sub
lret
cmc
mov
lret
jae
pusha
add
fisubl
jae
and
xchg
sbb
js
push
mov
dec
add
add
movsb
insb
push
add
pushf
out
lahf
push
push
jbe
int3
push
sti
in
push
fmull
cmp
and
jnp
cs
cmp
mov
xchg
out
lret
add
fwait
sbb
das
mov
jno
call
dec
aam
arpl
repnz
xlat
mov
or
shll
mov
jge
jmp
idiv
movb
pop
jnp
pop
ret
movsb
repnz
dec
icebp
xor
xor
add
add
push
pusha
in
jle
cs
pop
ret
shrl
cmc
add
add
mov
or
lcall
fldt
cmp
jge
ficompl
nop
mov
pop
out
fstl
cmpsl
out
mov
dec
or
sbb
dec
add
aas
or
push
scas
jae
and
out
rorb
mov
test
in
push
xchg
xchg
mov
inc
shll
pop
push
mov
jne
jl
and
mov
jno
jl
imul
xor
jmp
pop
inc
add
lods
dec
jmp
cwtl
cmpsb
and
negl
mov
aaa
inc
jo
sahf
add
cld
xor
pop
sahf
xchg
jle
adc
xchg
push
movsb
lods
dec
cwtl
test
mov
call
jmp
ret
cmp
divb
test
imul
add
adc
mov
adc
pop
test
add
cmc
add
add
gs
dec
fstpl
mov
dec
pop
push
shll
add
call
jle
inc
cli
and
imul
pop
jns
push
dec
xchg
and
popf
imul
dec
imul
mov
dec
pushf
push
mov
xor
ja
cmp
sub
test
orl
jg
ret
sbb
aas
jp
mov
scas
add
fdivrs
aas
push
jnp
fwait
or
pop
adc
jns
addr16
lods
adc
dec
push
mov
jns
popf
pushf
inc
sahf
addr16
mov
ljmp
imul
rorb
fldl
push
xorl
loope
das
inc
pop
dec
inc
mov
mov
cmp
in
leave
rcrb
icebp
adc
daa
inc
pop
mov
push
shrl
sbb
xchg
mov
add
add
mov
stos
dec
out
iret
push
iretw
imul
add
add
add
xor
sub
in
les
rcr
mov
pop
es
cld
test
bound
fnstenv
dec
or
adc
jnp
rolb
test
dec
mov
and
adc
sti
mov
jae
cmpsl
fcompl
xchg
jmp
or
mov
in
mov
pop
xchg
xchg
pop
push
add
push
lds
movsl
iret
out
push
or
jo
jbe
insl
mov
leave
jno
jg
mov
scas
xor
mov
test
mov
dec
sbb
jo
in
ljmp
data16
mov
pop
enter
mov
loop
mov
loopne
lea
lahf
mov
out
js
movsb
mov
add
lock
sub
xor
dec
or
gs
cmpsb
mov
mov
inc
clc
mov
popf
pop
cmp
add
add
inc
or
leave
bnd
outsl
test
cmc
add
add
add
mov
outsl
scas
mov
in
sbb
mov
scas
mov
push
test
pushf
cwtl
push
push
jo
jp
sbb
ret
push
stos
xchg
je
push
push
les
cmp
xorl
cltd
aam
adc
cmp
jne
jmp
xor
dec
out
xchg
enter
les
mov
lds
dec
ss
xchg
ja
xchg
mov
push
bound
sub
cmc
or
xlat
push
jge
rclb
mov
jne
out
push
in
jg
cltd
cmp
add
mov
pop
loopne
sub
sbb
imul
jno
push
ja
push
cmpsl
in
mov
loop
jo
pop
cmc
sbb
adc
mov
adc
sub
stos
lahf
add
add
cmc
insl
cmc
out
lcall
sub
out
or
push
ljmp
sub
fsubs
sbb
mov
pushf
sub
pop
movsl
and
repnz
fcmovb
fwait
rcrb
stos
rcr
pop
daa
fwait
std
lods
daa
or
push
jge
rcr
adc
cmp
dec
test
push
lret
pushf
inc
adc
enter
dec
test
and
xchg
jge
rolb
and
loopne
or
shrb
das
xchg
mov
stos
lds
in
and
out
jge
stos
mov
fists
inc
and
mov
lods
es
scas
rclb
sbb
fwait
sahf
and
mov
cwtl
sahf
jne
fstl
sub
xchg
adc
jge
frstor
nop
mov
adc
and
or
pop
push
cli
fidivl
mov
gs
stos
push
jo
jmp
leave
jp
lahf
cmp
orl
clc
cltd
jno
mov
xchg
std
xchg
and
add
jle
add
outsl
jle
dec
xchg
call
loope
jmp
add
add
add
xchg
inc
rcrb
leave
adc
ret
sahf
loope
fsubrs
mov
sub
movsl
mov
in
xchg
add
xchg
hlt
push
test
add
pusha
mov
lds
xchg
xchg
shrb
stos
add
adc
dec
rorl
sub
xchg
sub
inc
push
dec
icebp
mull
adcl
rolb
gs
push
push
inc
pop
and
pop
xchg
sub
test
scas
shlb
mov
sub
int
loop
inc
imul
lds
or
sbb
aas
cmpsb
xor
pop
dec
stc
add
mov
fwait
sahf
repz
or
int3
inc
push
xor
leave
and
adc
std
in
mov
pushf
adc
inc
aad
sbb
adc
or
loopne
scas
pop
inc
fdivs
push
cld
jge
mov
mov
xchg
les
sarl
xchg
mov
fwait
cmp
dec
cmp
add
or
and
scas
sti
jle
inc
sbb
iret
aas
in
add
cmc
add
add
push
jne
ljmp
cmp
sub
lret
lret
dec
mov
pusha
fcomip
pop
outsl
outsl
xor
cld
adc
jb
shl
test
xchg
fstpt
mov
repnz
leave
sub
and
test
cli
int
push
sbb
loopne
push
adc
push
mov
dec
jne
xor
push
sbb
fstpt
mov
dec
stos
cltd
and
push
mov
add
pop
mov
jg
push
mov
sub
outsb
stc
cli
push
xlat
inc
add
xchg
ss
fstl
mov
clc
adc
and
inc
pop
stos
or
or
pop
test
les
loopne
mov
push
mov
push
inc
jb
jb
lods
push
mov
inc
push
jp
out
pusha
push
pop
or
inc
out
pop
mov
sahf
call
add
lahf
fnstcw
ss
lahf
stc
inc
jb
lahf
lahf
inc
jno
xor
add
cmc
add
add
loope
adc
lea
icebp
in
mov
sub
jno
hlt
inc
cmp
jbe
nop
aas
dec
push
aam
aas
lret
data16
aaa
popf
fs
fildl
leave
rorl
jle
or
sarb
aad
jae
xchg
movsb
pop
jmp
scas
jmp
mov
dec
sti
jb
adc
lods
xchg
push
jbe
jmp
dec
mov
out
and
repz
inc
stos
jbe
xchg
pop
nop
pop
push
imul
or
adc
jle
das
push
scas
dec
jns
dec
jecxz
outsb
push
ret
cmp
inc
iret
out
sub
repz
pusha
and
leave
icebp
fucom
dec
pop
mov
js
aas
std
adc
sub
push
mov
add
jb
in
or
push
sahf
push
push
cmp
pop
xchg
mov
xchg
mov
mov
repnz
mov
inc
xor
pop
add
add
push
jl
jle
insb
pop
decl
dec
ss
mov
out
add
cmc
add
add
enter
sti
and
call
push
or
in
push
push
mov
adc
jg
xlat
inc
sahf
push
ret
js
mov
stos
int3
push
std
sbb
push
ds
xchg
sub
mov
mov
fs
roll
sbb
xchg
enter
insb
enter
jl
sbb
cwtl
push
sbb
movsb
dec
jne
cwtl
test
pop
push
xor
and
pop
out
mov
add
and
lds
ret
xor
pop
inc
push
out
jg
dec
ja
jmp
aam
pop
sub
outsb
ffreep
jo
xchg
push
out
sub
leave
cmp
push
push
sub
dec
lock
test
iret
jmp
jl
mov
sub
xlat
push
aas
push
xor
xchg
and
jmp
and
inc
dec
fisubs
jns
loope
mov
add
add
fwait
mov
pop
ljmp
push
out
add
cmc
add
add
loop
daa
popf
xor
hlt
mov
pop
ret
xor
int3
sub
enter
pop
insb
sub
jmp
xor
xchg
les
jne
in
psrlw
pop
inc
sbb
lret
cltd
notb
xchg
pop
pushf
cmp
and
cmp
and
push
xchg
push
mov
movsl
xchg
xorb
xor
outsb
mov
test
inc
popf
pusha
inc
mov
pop
shlb
jno
das
test
mov
mov
and
push
movsb
pop
xor
pop
mov
in
jp
loope
inc
or
jecxz
mov
sbb
add
adc
push
cmp
rolb
cmpsb
lahf
ja
push
sbb
enter
in
xchg
xbegin
push
adc
aaa
sbb
or
or
lds
add
aaa
data16
jne
mov
gs
inc
push
mov
lock
cmc
add
add
add
sub
and
fistpll
dec
inc
hlt
add
pop
or
adc
pusha
and
mov
out
cwtl
push
int
sahf
xchg
fidivrl
rcr
add
and
jno
mov
repnz
push
mov
xlat
mov
cli
sbb
pop
dec
clts
stc
rorl
push
orb
mov
add
sbb
out
sbb
mov
jne
repz
add
sub
movsl
cmp
adc
loope
adc
mov
push
dec
xchg
adc
dec
mov
push
or
mov
fildll
imul
sbb
mov
popf
inc
mov
adc
sbb
cmp
ss
jl
jno
cmpb
aas
jge
aaa
in
inc
cmpsb
inc
js
sbb
jnp
add
jnp
sti
xchg
rol
imul
xchg
icebp
add
cmc
add
add
fs
rcrb
pop
in
xor
push
cli
out
cmp
in
int
lret
pop
stc
pop
push
mov
outsl
and
push
sbb
jmp
cmp
aam
sbb
sti
test
addl
inc
jle
push
bound
jae
jno
pop
pop
clc
cli
loopne
xchg
shrl
sti
inc
pop
rorb
adc
mov
sub
movsl
shlb
in
sahf
rorb
gs
loop
mov
dec
cwtl
shrl
lods
push
jp
mov
mov
cmp
mov
and
mov
pop
mov
orb
lahf
fucomi
notb
dec
xor
mov
aad
xorb
test
cmp
xchg
pop
ds
mov
push
int3
outsl
mov
mov
sbb
add
sub
pop
sarl
test
sub
add
std
icebp
add
cmc
add
add
repz
adc
cmovge
ja
ret
fs
mov
repz
adcb
add
push
adc
icebp
addr16
or
jbe
movsb
movsb
sub
stc
inc
cmp
je
push
sub
sub
iret
mov
cmp
ret
jae
push
arpl
enter
hlt
sbb
mov
stc
std
adc
pop
push
sub
das
mov
leave
adc
adc
sub
or
fistl
idiv
xchg
es
jno
call
sub
mov
or
pusha
aaa
testl
mov
jnp
loop
jae
and
xor
jp
jge
push
cmp
mov
fmul
jmp
test
daa
ss
fwait
outsl
sbb
ret
mov
repz
fdivl
adc
jmp
ljmp
add
add
repz
std
repz
xchg
scas
pop
jo
repnz
cmc
add
add
cs
cmp
and
clc
jno
dec
add
push
dec
jl
xchg
xor
push
popf
dec
cltd
mov
jo
mov
mov
sub
icebp
inc
add
cld
or
fnsave
cmp
stos
out
mov
push
in
jo
cld
mov
mov
cs
xchg
inc
fsts
fnstcw
test
mov
mov
icebp
lds
testb
popf
sbb
mov
mov
test
popa
punpcklwd
fwait
jecxz
shlb
xor
pop
push
outsl
cltd
push
push
jmp
xchg
mov
pop
fldt
sti
flds
mov
negl
xchg
test
adc
or
outsb
div
cld
cwtl
pop
or
pop
dec
sahf
push
fcoml
imul
popa
push
jno
or
add
sarl
mov
sahf
dec
add
enter
add
lock
cmp
or
jp
xchg
sti
out
add
cmc
add
add
inc
jnp
test
dec
hlt
cmpsl
imul
xchg
push
adcb
rcr
or
add
sbb
push
push
add
cli
mov
stos
gs
shrb
popf
scas
mov
mov
inc
repnz
cmp
cmp
movsb
sbb
jmp
mov
nop
aam
je
test
movb
je
fcoms
pop
nop
rorb
ja
jnp
jae
sbb
jb
mov
xor
fsubs
js
aam
aad
and
aad
adc
sbb
sar
mov
jg
pop
pop
xor
dec
sbb
dec
mov
cli
mov
roll
adc
push
jb
lea
es
sbb
sub
fstpl
hlt
xchg
pop
push
lret
shll
jae
adc
int
dec
in
cwtl
sahf
add
add
insl
lcall
lret
sbb
aad
les
fdiv
add
cmc
add
add
in
lret
inc
push
lods
movsl
jp
out
xchg
lret
fs
cmpb
inc
inc
xorl
testl
sbb
nop
push
stc
js
mov
loopne
adc
dec
pop
inc
and
loope
ret
and
inc
mov
dec
les
aam
xchg
add
push
xchg
fdivr
pop
mov
jg
cmp
push
sub
xchg
xor
pop
jo
sahf
movsb
jne
pop
test
xchg
mov
pop
sbb
push
loopne
out
cmp
and
mov
bound
xor
jp
scas
punpckhwd
xchg
test
pop
dec
push
xchg
push
jo
hlt
mov
hlt
ret
cltd
or
and
pop
shl
pusha
inc
stos
sbb
jbe
sbb
movsl
xor
testb
sub
xor
into
sahf
push
rclb
lret
xchg
in
mov
pushl
comiss
adcb
add
cmc
add
add
fcomps
imul
lods
xor
xor
aam
jecxz
push
mov
gs
pop
movaps
pop
sbb
out
and
hlt
pop
mov
pop
cmp
sti
jecxz
add
fstl
dec
aaa
fistl
ffree
dec
ret
ds
clc
jae
int
inc
push
ljmp
mov
pop
sahf
sub
inc
inc
loop
push
icebp
dec
cmp
push
mov
jge
aam
cwtl
ds
into
xchg
or
dec
xchg
push
in
daa
jg
adc
or
insl
ret
sub
std
pusha
xor
lcall
and
mov
sar
test
add
vpsubsw
xchg
cmp
gs
flds
xchg
xlat
cld
lea
loop
mov
and
fnclex
outsl
imul
or
inc
mov
in
negl
push
inc
push
xor
testb
cmc
add
add
mov
jp
daa
fdiv
bound
decb
test
or
fisubrl
sub
stos
ret
and
andl
jge
and
mov
jo
inc
sbb
in
sub
inc
sti
jae
adc
sti
loop
lahf
xchg
or
xchg
iret
push
mov
hlt
aad
cmp
xor
jbe
dec
cmp
scas
test
adc
jecxz
cmp
dec
fcoml
push
jno
in
push
repz
jg
adc
jnp
stos
mov
arpl
jo
xor
sub
daa
ret
push
addr16
std
movsb
out
fisubs
adc
adc
imulb
xchg
xchg
addb
bound
add
lahf
sbb
pop
cld
mov
mov
scas
insb
xchg
dec
aaa
inc
add
lock
cltd
push
mov
mov
adc
lret
sub
cltd
mov
lock
xchg
xor
add
add
mov
nop
fmull
or
add
add
out
xchg
and
inc
mov
sahf
mov
jns
lret
les
xor
loop
sbb
and
fldcw
inc
or
call
add
sub
pop
lods
sbb
addb
sub
push
add
fdivl
pop
mov
dec
add
push
pusha
add
jae
jns
addb
mov
decl
sbb
mov
adcl
mov
jnp
cltd
les
push
pushf
push
inc
pop
or
flds
cmp
je
mov
push
outsl
jb
jne
stos
jle
xchg
loop
sahf
call
jo
sbb
test
jg
xlat
out
sub
push
pop
iret
imulb
push
ret
or
shr
cmp
xor
mov
es
ss
xchg
int
aas
shll
dec
sahf
stos
popf
repz
push
add
add
adc
push
add
adc
insl
lahf
daa
mov
add
cmc
add
add
jae
mov
stc
or
pop
jecxz
testb
inc
lret
pop
addr16
repz
push
subb
push
or
pop
push
cltd
mov
ds
dec
pushl
add
jp
add
lock
cs
subb
xchg
or
mov
mov
pop
test
cltd
add
mov
mov
and
push
mov
lock
das
cwtl
xor
cmpsl
clc
je
test
scas
dec
iret
loop,pt
jo
data16
gs
pop
cmc
shrb
mov
out
idivb
aad
outsb
mov
xor
frstor
mov
cmpsl
stos
pop
mov
insl
cwtl
jge
sbb
sub
iret
cli
bound
cld
push
dec
lret
mov
add
sahf
in
repz
add
out
repnz
add
pop
inc
xchg
pusha
push
movsl
stc
add
cmc
add
add
dec
cmp
mov
mov
or
mov
stos
dec
insb
mov
and
sub
ja
sbb
inc
sti
outsl
imul
mull
mov
dec
add
xchg
cmp
loop
insb
icebp
push
jle
inc
dec
lret
dec
or
cld
sub
ret
and
xor
xchg
arpl
dec
dec
and
dec
mov
add
data16
mov
sub
or
cmpsl
xor
fwait
jge
dec
pop
sbb
pusha
fimuls
fstp
jle
pop
fdivrl
rcll
mov
xor
add
lcall
fistpll
bound
xchg
leave
mov
xchg
subb
jno
repz
push
ficomps
push
sub
movsl
or
xchg
imul
dec
sub
lahf
xor
add
add
mov
push
decl
or
mov
cli
add
cmc
add
add
ja
fldcw
mov
xor
ficompl
pop
aaa
cs
das
dec
lds
iret
out
inc
leave
lahf
push
add
insl
adc
dec
xor
jg
nop
xor
jno
arpl
movsl
and
es
pop
dec
lock
call
mov
xchg
movl
sub
and
xchg
movsl
push
push
push
nop
jp
popf
aas
jno
imul
or
jp
xchg
or
iret
nop
idivl
jg
stos
hlt
mov
mov
cli
stos
je
push
dec
inc
or
xor
push
pop
insl
ja
or
pop
lret
sub
mov
dec
mov
iret
repz
shlb
xchg
sbb
cli
add
jmp
out
inc
and
les
or
daa
cmp
push
gs
cmp
jns
test
insb
push
sbb
sub
pop
sub
cwtl
mov
mov
mov
pop
dec
mov
add
and
cmp
sti
fsubp
decl
ret
andl
add
cmc
add
add
jge
pop
ror
data16
dec
and
sbb
push
xchg
ss
jle
sub
gs
js
loope
fidivrs
dec
arpl
in
pop
mov
mov
xchg
out
push
inc
in
pop
fwait
xchg
mov
push
cmp
mov
cltd
lahf
sub
jno
into
shlb
push
inc
mov
jl
and
mov
or
sbb
pop
fisubl
push
enter
pop
pop
lea
sbb
fadds
push
test
push
sarl
cmp
push
fcmovu
popl
das
xorb
cltd
scas
lods
push
pushf
inc
stos
popf
mov
ss
and
or
add
inc
pusha
ret
daa
pop
outsl
mov
mov
loop
int3
jmp
in
sub
lea
xor
aas
mulb
push
inc
pop
icebp
aas
std
push
test
je
fwait
cmpsl
js
xchg
add
add
outsb
xor
or
data16
test
add
cmc
add
add
pop
mov
into
adc
test
push
xor
xor
test
loope
in
adc
rcll
addb
push
mov
cmp
inc
cmp
inc
popa
pslld
outsl
xor
mov
or
imul
xorb
add
inc
mov
or
loopne
push
leave
cwtl
sub
mov
sub
cmp
lods
ljmp
ja
add
mov
outsl
mov
stos
xchg
cli
test
js
push
ss
or
jmp
and
pop
xor
inc
jle
pushf
push
add
pushf
fcoms
es
and
idivl
push
jnp
fs
jge
xor
imulb
in
repnz
mov
pushf
iret
pop
jae
sbb
mov
lods
jmp
inc
lea
aam
and
testl
sbb
sub
add
repz
ror
lock
jnp
jmp
sbb
push
jo
jns
add
cmc
add
add
sub
out
inc
xchg
jno
decb
sub
inc
xor
fnsave
in
fldcw
cmpsb
sub
sbb
xor
negl
int
in
sub
mov
adc
not
hlt
ljmp
mov
xor
hlt
adc
scas
sub
xchg
scas
mov
lods
mov
mov
push
jbe
insl
cmpl
xchg
shrb
in
inc
icebp
repz
sbb
std
add
bound
mov
fcmovu
jbe
inc
testl
lcall
jnp
add
and
ret
push
lods
fstpl
push
icebp
adc
jno
lcall
cmp
sub
pop
add
imul
mov
aas
and
shrb
add
add
repz
fimuls
mov
cltd
or
add
cmc
add
add
sbb
hlt
mov
push
cwtl
xlat
test
fldl
sti
dec
das
pop
xchg
xchg
push
pop
ficompl
shll
mov
sbb
mov
sbb
test
imul
sub
mov
dec
enter
leave
xchg
shr
push
cmp
sti
push
icebp
pop
inc
jl
fsubr
mov
rcll
js
add
xchg
xchg
leave
sti
jg
lods
outsb
mov
mov
rol
repz
stos
pop
mov
stos
jge
adc
lods
push
ret
fnstsw
fwait
push
inc
insl
pop
pop
jae
xor
pop
mov
in
hlt
adc
pop
sub
mov
inc
mov
imul
mov
mov
push
or
sti
filds
dec
and
in
push
outsl
jmp
inc
sbb
movsl
and
cld
and
add
pop
in
jmp
ljmp
push
add
out
xchg
jns
lcall
add
add
add
mov
insl
stc
xor
and
push
push
out
fcmove
imul
xchg
xor
stos
das
mov
aaa
sti
mov
testl
pop
sub
nop
das
push
fdivr
adc
inc
lock
pop
es
int3
cmp
or
add
add
adc
or
shll
adc
std
aas
enter
and
rcl
mov
outsl
jo
inc
lds
shrl
or
pop
dec
inc
push
or
orps
cmp
out
call
out
andb
stc
imul
pop
movsl
mov
addr16
sub
pop
fcoms
aaa
daa
call
ja
in
jp
out
xor
adc
adcb
aam
fiadds
xchg
sub
jbe
cmp
push
mov
mov
in
cld
push
andl
lret
add
shrl
cmc
scas
mov
dec
push
ret
add
cmc
add
add
fdivp
xor
mov
xor
mov
bound
cmp
jp
push
mov
cmp
lods
and
clc
add
loope
std
jecxz
leave
nop
repz
inc
fdivs
mov
fldt
mov
xchg
cmp
jecxz
or
mov
cltd
pop
xor
fstp
push
adc
adc
ret
cmp
popa
mov
cmp
insb
in
sub
insb
adc
or
xchg
mov
pusha
inc
push
fs
in
pop
sarl
jne
pop
inc
ds
mov
aad
fxam
clc
adc
hlt
fldenv
icebp
sti
fidivrl
fstpt
mov
push
insb
push
and
and
mov
mov
loop
aad
push
or
cs
ror
bound
inc
sbb
mov
loope
add
lret
push
nop
das
xchg
stc
add
add
pusha
rorb
lea
in
dec
add
add
add
add
int3
pop
push
dec
adc
push
dec
bound
add
xor
xchg
sahf
or
adc
xorl
mov
stc
cld
test
and
inc
and
insb
pop
xor
add
mov
call
adc
sub
dec
stos
scas
jne
pop
fincstp
adc
stc
in
and
minps
test
inc
mov
cmp
mov
adc
clc
adc
stc
mov
xor
add
ror
push
and
cmc
test
outsb
gs
mov
stc
sub
fs
popa
icebp
out
xchg
mov
add
push
aas
add
mov
xrelease
enter
mov
add
push
jl
jl
jmp
cmp
push
mov
or
pop
push
insl
mov
fwait
leave
daa
dec
mov
add
add
gs
testl
cmpsb
xchg
das
inc
add
add
add
add
sub
dec
xor
and
mov
insl
adc
pop
aad
cli
repnz
jns
cli
daa
adc
stos
mov
xor
or
mov
test
inc
add
sub
jb
jne
push
pop
fs
dec
mov
xchg
and
jmp
inc
sahf
sahf
and
sti
repnz
push
fs
adc
pusha
imul
mov
cmp
fnstenv
jp
mov
lahf
andb
insb
xchg
rcrb
mov
pop
shlb
jns
cs
mov
or
cmc
aad
jg
cs
inc
repz
test
add
fstpl
cmp
insl
mov
jb
movsb
lcall
xchg
fildll
scas
jg
mov
dec
and
sub
int
in
xchg
dec
test
add
push
pop
xchg
out
aas
hlt
inc
sub
cli
pop
add
jbe
pop
pop
ds
add
add
xchg
mov
jle
sbb
arpl
cmc
add
add
inc
mov
insb
or
jmp
movsl
roll
iret
dec
outsl
bound
rolb
xlat
dec
bound
bswap
xchg
push
in
push
pop
cs
push
dec
cwtl
push
cmpsl
jns
fsubrs
push
dec
push
aam
push
dec
push
ficoml
out
adc
xchg
loope
pop
rclb
jle
rcrl
xchg
popf
cmpsl
push
xchg
jmp
call
jl
cwtl
hlt
mov
loopne
dec
mov
pop
inc
fistpll
push
out
xchg
pop
cmp
cmpsl
cmp
loope
or
and
mov
mov
push
xchg
aam
into
pop
scas
sbb
and
push
fwait
jbe
sbb
or
adc
xor
cmp
movsl
std
orb
push
inc
mov
mov
and
xchg
xor
lods
inc
push
cmpl
subb
sbb
adc
mov
add
mov
xlat
aam
pop
cmpsl
cld
or
add
cmc
add
add
test
cli
lcall
dec
test
int3
adc
dec
push
pusha
pop
or
mov
add
in
xchg
mov
imul
in
lods
adc
ljmp
fs
cmpb
icebp
pop
sahf
xlat
sub
or
into
pop
insl
jmp
daa
ror
stos
xor
xor
jno
imul
pop
or
daa
sbb
xchg
cltd
dec
rorl
sahf
cs
ds
loope
daa
add
xchg
test
adc
mov
popa
mov
clc
jns
outsl
cld
stc
mov
mov
and
rcrb
addr16
clc
pop
shlb
cmp
arpl
rcll
jmp
iret
aas
in
and
mov
movsl
call
cmp
faddl
mov
xchg
outsl
pop
mov
rcrl
das
add
add
push
inc
pop
jns
aas
fisttpl
inc
and
and
add
dec
or
mov
cld
pop
sbb
test
sbb
mov
scas
adc
inc
repz
jge
mov
sub
sub
or
icebp
xor
mov
repz
push
sbb
mov
pop
cld
mov
leave
inc
outsl
dec
and
inc
cld
in
out
pop
repnz
insb
mov
jl
sub
jg
mov
mov
fmuls
or
data16
out
add
fisttps
inc
mov
xor
inc
add
in
jno
jmp
inc
ficoms
sbb
cmpsb
test
and
mov
clc
lock
cmp
std
test
cmpsl
sbb
es
xor
hlt
cmpsb
add
ss
ret
mov
dec
mov
out
stos
shlb
dec
sbb
jge
repnz
sbbb
xchg
jb
push
push
add
add
jnp
mov
addr16
adc
cmc
add
add
push
or
popf
dec
mov
push
dec
mov
push
xchg
inc
in
adc
arpl
js
push
or
inc
shlb
mov
out
pop
mov
adc
jp
cwtl
shrl
jle
lods
sbb
xchg
xchg
push
xor
sub
fs
xor
shlb
push
mov
add
mov
fbstp
inc
fstp
bound
rol
mov
cmpb
out
dec
and
out
mov
jl
mov
clc
push
rorl
jo
test
mov
pop
jmp
cmp
or
push
out
or
out
enter
je
add
stc
cs
stos
mov
loop
test
arpl
sbb
shll
jge
add
lods
scas
pop
cld
lods
aad
xor
jno
add
pop
dec
cmp
mull
sti
flds
add
add
xlat
pop
xlat
jg
mov
fs
or
add
cmc
add
add
mov
jp
xor
dec
dec
test
cmp
and
jae
add
cmp
xchg
jle
ljmp
filds
aas
sub
test
add
or
pop
mov
daa
or
clc
sbb
jp
rolb
xor
stos
iret
lret
add
mov
sub
or
mov
push
outsb
sub
gs
hlt
pop
push
sub
sub
repz
sub
xchg
jns
mov
or
testb
dec
sbb
jo
adcb
es
fisttpll
mov
push
xlat
out
push
add
call
cmpb
sarl
xor
idivl
jmp
ss
pop
andl
lret
clc
adc
mov
addr16
jge
sbb
jnp
mov
jbe
ja
das
sub
add
add
fdiv
mov
fwait
cmp
testb
add
cmc
add
add
cmp
pop
idivb
xchg
loopne
imul
push
push
mov
loop
mov
into
mov
dec
ret
int
loop
jae
mov
xorl
jmp
jbe
fs
inc
jno
xor
imul
mov
icebp
repz
add
lock
lahf
xor
pop
scas
and
into
cmp
mov
rcr
fmuls
pushf
dec
inc
std
fcomps
push
inc
push
dec
ja
or
in
mov
test
inc
dec
jae
mov
aam
lcall
mov
jmp
and
or
sbb
push
mov
add
iret
mov
and
or
dec
dec
imul
popa
lea
xor
aad
sub
arpl
rorl
or
adc
and
stos
scas
mov
add
test
mov
stc
scas
mov
push
cmc
or
add
add
add
pop
adc
lret
xchg
stos
or
fcompl
ret
or
sahf
pop
pop
iret
jne
push
dec
jl
mov
enter
mov
pop
aam
jnp
dec
dec
int3
or
jp
andl
and
sub
sbb
push
pop
pop
inc
ss
pop
les
ds
cmp
ja
dec
test
bnd
stc
mov
add
out
mov
mov
ss
adc
js
sbb
dec
sub
ja
and
mov
negb
insb
mov
push
nop
or
adc
pop
das
lock
lahf
outsl
mov
inc
adc
and
lods
mov
mov
test
nop
insl
pop
jle
mov
fucomi
sbb
add
or
and
lret
fcmovbe
jnp
mov
and
rcll
inc
sti
mov
mov
add
add
push
pop
push
jmp
sub
cltd
fdivrl
ljmp
add
fnstsw
sub
ficoms
mov
push
cmp
push
adc
xor
dec
shll
push
mov
xor
push
clc
jnp
insb
mov
mov
and
nop
or
sti
jnp
xor
jo
cmp
sub
dec
xor
ret
movsb
jge
imul
jne
xlat
and
pop
mov
clc
fiadds
repz
push
jo
push
dec
dec
lcall
mov
adc
sub
into
mov
inc
xchg
cmp
adc
std
and
sbb
aad
jl
jp
ss
divb
dec
pop
pop
or
cmp
mov
fcompl
xor
dec
mov
daa
or
outsl
mov
out
add
add
pop
lods
pop
cli
cmc
inc
mov
mov
cmc
add
add
cmp
and
fistpl
stos
jge
cli
mov
sahf
movsb
fisubs
jge
sahf
loope
lds
mov
jns
push
sub
jno
mov
mov
in
out
mov
lods
leave
cs
and
cmovae
add
test
in
dec
imul
sub
xor
sub
pop
sarb
mov
inc
mov
inc
xchg
lock
sahf
cs
push
out
pop
jl
addr16
or
xchg
inc
pop
pop
arpl
cmp
test
mov
cmc
jo
push
je
xchg
pop
and
daa
insl
out
pop
mov
mov
cltd
adc
push
gs
adc
sbb
lods
pop
mov
iret
xor
adc
mov
test
and
xchg
xlat
mov
cli
sbb
incb
add
das
stos
cltd
inc
popf
jae
out
inc
dec
clc
mov
add
cmc
add
add
sti
mov
lds
imul
add
movb
cmpsb
inc
icebp
push
sub
fwait
lahf
push
xor
push
icebp
outsl
mov
movhps
test
jbe
insb
fmuls
rcrl
add
daa
cmp
inc
roll
cmp
repnz
adc
shll
lahf
cli
xchg
mov
pop
aam
sahf
sti
sub
jle
adc
add
mov
lret
addr16
add
imul
hlt
out
outsl
iret
fstps
aas
and
ljmp
mov
mov
xchg
adc
or
push
fs
add
loopne
in
mov
xchg
scas
push
arpl
mov
or
add
and
jno
xor
mov
fiaddl
sbb
mov
sti
inc
add
mov
nop
test
add
add
aam
int
xchg
clc
cwtl
mov
add
cmc
add
add
mov
ljmp
sub
jo
or
add
je
mov
loope
pop
hlt
imulb
sbbl
insb
test
add
add
int3
xlat
adcb
das
sti
dec
aam
pop
mov
hlt
bound
lret
inc
aad
jecxz
or
daa
inc
push
scas
fistl
push
repnz
lret
testl
jne
test
add
lret
out
jo
out
cmp
mov
inc
stos
in
imul
insb
xor
fnsave
xchg
mov
fistpl
inc
out
inc
dec
pop
jle
and
out
pop
in
loop
mov
cmc
jmp
daa
int3
ror
mov
mov
fstl
pusha
xlat
je
adc
ja
outsb
add
imul
lret
loope
lea
push
mov
pop
arpl
addr16
inc
jmp
sub
cmc
add
add
jnp
mov
imul
sbb
mov
ret
pop
add
inc
cs
iret
mov
das
inc
gs
ret
ja
popa
insl
mov
fidivrl
adcl
insl
inc
dec
jl
sbb
mov
repz
mov
ljmp
xchg
mov
repnz
sub
xlat
mov
fdiv
adcl
pusha
cli
inc
iret
in
out
xchg
or
pop
mov
fidivl
repz
das
dec
lea
call
cmp
xchg
sbb
mov
xchg
pop
lea
lcall
je
push
or
hlt
sub
cmp
fisubl
xor
sub
push
int3
jl
push
mov
out
pop
cmp
inc
std
jno
push
mov
out
adc
add
add
out
out
pushl
jecxz
xchg
add
cmc
add
add
or
bound
adc
into
rcr
data16
pop
mov
cmp
pop
sub
adc
cld
push
negb
int
aas
popa
xor
lock
inc
lcall
mov
cmp
lahf
mov
inc
std
xor
mov
and
fcmovne
mov
les
leave
push
sbb
lods
push
mov
ss
enter
pop
les
mov
in
add
mov
outsb
pop
pop
imul
push
les
rorb
lret
sub
es
lret
pop
cld
push
jae
out
rcl
ss
movb
lods
sub
je
jnp
cs
or
xor
inc
xor
std
inc
loopne
lods
xchg
pusha
lcall
call
scas
cmp
psubsb
pop
sub
scas
xchg
outsb
pop
lret
add
add
push
scas
out
mov
shrb
sgdtl
cmc
add
add
dec
ret
rcrl
push
clc
rorb
jne
mov
and
pop
pop
mov
ja
ja
xchg
push
pop
mov
sub
in
cmp
cmpsl
pusha
movsb
rcrl
sub
push
or
dec
inc
ja
adc
inc
push
push
mov
push
add
sti
sbb
leave
jecxz
lret
sarb
cltd
roll
arpl
sub
jmp
popf
aad
mov
pop
dec
pop
out
mov
out
insl
insb
xchg
push
adc
add
jle
stc
sti
xor
dec
pop
std
and
loope
adc
jmp
lahf
mov
jge
out
dec
cmp
lods
adc
in
std
je
mov
push
xchg
push
std
ror
mov
cmp
xchg
add
in
ja
xlat
cmp
mov
pop
dec
lahf
jle
dec
xchg
adc
popf
xchg
pop
jno
push
xchg
xor
inc
pop
dec
and
add
aaa
xchg
and
movsl
mov
mov
cmp
scas
int
sbb
add
cmc
add
add
xchg
fucomi
mov
jle
pop
pop
and
stc
jns
sub
lahf
subl
jmp
shll
adc
dec
stos
and
pop
dec
sub
dec
aam
push
inc
insl
inc
dec
rcrl
xor
sub
fwait
dec
sbb
mov
pop
mov
cmc
pop
out
dec
lret
das
cmpb
out
add
xchg
and
cmp
jnp
push
and
jmp
adc
xchg
cmpsl
xchg
xchg
rorl
out
sahf
loope
add
fnsave
and
xchg
clc
sub
mov
sub
or
js
clc
in
lcall
cld
mov
outsl
and
mov
mov
cmp
pop
data16
jle
inc
adc
push
cwtl
negl
push
push
jb
in
outsb
cmp
add
add
mov
push
jg
mov
in
clc
dec
xchg
adc
add
add
add
dec
push
fucom
fistl
dec
mov
ror
mov
ds
dec
or
and
ret
push
lods
outsl
mov
inc
lds
out
and
push
mov
adc
mov
lods
fisttps
mov
mov
jl
inc
and
jno
lea
mov
pop
jg
jnp
lcall
xchg
arpl
es
mov
adcb
lahf
push
mov
std
xor
mov
stos
mov
idiv
mov
test
inc
movsl
cmp
out
mov
scas
inc
push
adc
cmp
aaa
xor
dec
insl
pop
dec
adc
push
jmp
pop
mov
adc
sbb
push
or
lods
sbb
push
xor
add
dec
hlt
setle
xorb
xor
add
add
mov
mov
fidivrs
test
add
cmc
add
add
stos
and
mov
int
add
push
cmc
xchg
mov
push
adc
pop
pop
or
xlat
aam
ret
mov
out
enter
in
test
lcall
daa
xorb
add
sahf
popf
lock
push
rcrl
jnp
mov
dec
jg
gs
xchg
jmp
or
cmpsb
xchg
adc
psllq
lock
outsb
aam
addr16
stos
jge
inc
xchg
jg
mov
in
cltd
push
icebp
or
pushl
add
psraw
add
xor
mov
dec
fs
dec
int
and
adc
es
fadds
mov
or
cmp
and
fndisi(8087
int
stc
jg
enter
loopne
adc
outsl
jns
arpl
arpl
lcall
stc
aam
add
mov
add
xchg
sub
scas
jbe
or
jl
add
cmc
add
add
jmp
pop
call
imul
inc
icebp
inc
arpl
cmc
imul
movsl
pop
ljmp
xchg
insb
mov
hlt
outsb
or
xor
add
jo
mov
imul
pop
nop
fcmovbe
ret
mov
lcall
icebp
inc
in
mov
in
push
push
mov
xchg
ret
cmp
sti
xchg
mov
jno
shll
or
sahf
xor
mov
xor
notl
int3
lret
inc
inc
cmp
jno
jbe
jecxz
mov
clc
fildll
push
lds
mov
push
pop
push
repz
dec
pop
cmpsb
inc
mov
ds
jns
mov
scas
pusha
lret
insb
pop
and
push
sahf
xchg
inc
inc
jb,pt
outsb
pop
js
pop
inc
sbb
push
mov
cmp
dec
xor
dec
popa
add
add
hlt
fists
lret
jno
add
cmc
add
add
jg
push
mov
mov
sahf
mov
dec
sbb
xlat
xchg
sbb
pop
jbe
mov
inc
pop
pop
dec
xchg
mov
fldcw
mov
and
sub
sbb
jge
sub
jg
insl
fmull
repz
pusha
mov
jb
stc
and
mov
mov
ss
fistpll
pop
cwtl
mov
aad
and
fscale
pop
push
or
testl
mov
adc
push
push
sub
jne
or
add
add
add
xlat
arpl
pop
push
fucomp
pushf
cmp
fwait
mulb
push
cld
sub
sahf
and
mov
mov
nop
mov
mov
xchg
xor
sub
cmpsb
mov
cmp
mov
dec
stos
sbb
pop
add
add
into
fwait
testb
incl
les
add
cmc
add
add
pop
mov
mov
dec
push
xchg
movd
push
cmpb
add
mov
lcall
and
es
adc
add
pop
add
jb
xlat
adcl
fadds
int3
jae
lret
mov
dec
push
inc
jmp
xchg
xchg
test
mov
lea
test
aam
and
xchg
outsl
data16
jnp
lcall
insl
fstps
mov
jg
out
lcall
push
nop
mov
mov
pop
sub
iret
sub
inc
and
adc
and
xchg
add
cli
xor
push
out
xlat
mov
sti
xor
add
and
sbb
mov
xor
jle
shlb
gs
cmpsb
or
mov
mov
adc
nop
jbe
and
das
xchg
add
xor
mov
pop
mov
sub
add
add
add
test
ret
push
dec
jno
jb
push
cli
adc
adc
xor
imul
cmp
out
fldcw
cs
sti
shlb
mov
jnp
rolb
jle
inc
subb
addr16
testl
xchg
ficoml
lods
dec
jbe
add
adc
mull
imul
jl
and
adc
pop
test
ja
xchg
pop
dec
jle
shll
cwtl
call
fs
mov
dec
xlat
fdivrl
sti
sbb
or
lods
xlat
cmp
sbb
cmpsb
jae
adc
pop
jo
das
adc
out
imul
sub
bound
add
out
mov
sbb
jbe
mov
popf
cmpsb
add
ja
sbb
daa
pop
pop
push
fdivrl
mov
add
sti
inc
out
aas
mov
sub
add
sbb
add
cmc
add
add
jg
in
loopne
leave
or
insb
popa
gs
mov
cmpsb
sub
inc
and
dec
in
push
adc
cs
clc
sbb
sti
in
or
stos
in
dec
sub
xchg
stos
mov
mov
aad
fidivrs
cmp
mov
and
int3
aas
jmp
add
and
mov
cmpsl
arpl
js
mov
mov
out
adc
push
data16
lret
push
jno
or
cmp
jmp
into
sbb
out
push
push
cmp
sbb
ss
xchg
cmp
scas
imul
fucomi
insb
cmp
hlt
sbbb
out
or
mov
aaa
mov
fdivrl
push
pop
icebp
mov
stos
das
lahf
icebp
xchg
mov
dec
inc
pop
xchg
push
mov
mov
mov
add
push
bnd
jp
xchg
inc
pop
dec
mov
inc
sbb
add
add
add
test
push
fs
add
js
adc
dec
mov
inc
sbb
clc
pushf
sbbb
adc
pop
int
inc
xchg
orl
leave
lret
repz
insb
jb
lods
insl
inc
pop
imul
sub
xor
rclb
sbb
xchg
sbb
ss
out
push
and
lret
test
std
les
inc
dec
lret
mov
sbb
daa
mov
pop
ss
lret
sub
and
fnsave
or
push
fdivl
adc
sti
adc
pop
mov
pop
les
cltd
jae
cltd
out
sbb
sub
cmp
rcrb
enter
and
mov
cmp
jg
push
fwait
cltd
jmp
jp
dec
leave
sahf
adc
push
adcb
test
imul
dec
lods
loope
add
sbb
in
out
ja
fbstp
mov
add
cmc
add
add
mov
in
mov
pop
and
mov
mov
rcrl
jecxz
fists
emms
xor
pop
in
cmpsb
and
loopne
aad
pop
add
and
aam
add
call
mov
jnp
in
fiadds
flds
mov
add
jbe
sub
jo
repnz
mov
add
inc
mov
sbb
rol
loopne
sti
mov
rcr
lods
dec
les
bts
mov
clc
scas
push
mov
adc
lahf
and
cmp
jbe
cli
xchg
int
xchg
mov
dec
jbe
inc
pushf
xchg
sahf
xchg
jg
mov
inc
jo
shlb
call
cmpb
rclb
int3
sti
fildll
movsb
and
daa
sti
and
lahf
pop
sub
clc
call
cmpsl
cmp
rolb
add
scas
test
in
inc
mov
sbb
add
add
add
lods
mov
push
push
sub
xchg
or
out
popf
test
fdivr
push
in
aas
xchg
imul
dec
push
clc
in
cmp
jle
mov
push
test
xchg
sub
daa
mov
mov
scas
scas
insl
pop
xchg
xchg
daa
push
lods
into
hlt
cmpsl
mov
or
popf
lret
outsb
inc
xchg
push
mov
jg
out
test
lods
mov
or
cmc
and
mov
gs
push
jge
and
mov
sub
out
scas
test
sbb
insb
hlt
inc
test
xchg
mov
or
insl
pop
add
xchg
imul
xchg
mov
popa
test
in
xor
sbbb
popa
cmp
pop
push
mov
add
mov
jg
imull
push
imulb
push
xchg
fbld
add
cmc
add
add
or
xchg
inc
and
or
pop
and
and
add
and
dec
inc
jns
daa
ja
fimull
in
jo
adc
pop
adc
sarb
jg
sub
std
je
jl
incb
icebp
xchg
imul
fbld
adc
stos
adc
xor
in
lret
or
repnz
out
jae
push
sbb
rorb
jl
pop
out
fisubrl
cmp
or
cmc
sbb
gs
or
cmp
out
or
inc
and
ds
cmp
daa
mov
add
insl
dec
jmp
ds
mov
sbb
jnp
ljmp
pop
mov
xchg
popa
push
push
js
out
scas
hlt
sub
inc
test
pop
jl
sub
inc
add
pusha
pop
dec
xchg
jns
push
push
out
repnz
mov
cmp
sti
jg
and
test
mov
sbb
add
add
add
xor
pop
fdivl
sub
shrb
xchg
insb
add
xchg
fs
jne
dec
sahf
sub
lds
mov
jbe
mov
and
xchg
fdivrl
lret
out
ret
push
mov
fisubl
jne
leave
xchg
inc
fwait
fwait
call
and
stos
push
call
xchg
stc
arpl
mov
pop
or
add
pop
lret
ret
jl
mov
mov
jo
adc
rcr
xor
in
stos
mov
lcall
loop
int
push
jl
adc
movsl
mov
xor
mov
inc
cmp
lods
inc
mov
cmp
xchg
adc
push
nop
add
or
xadd
divl
lret
jmp
sub
add
add
jnp
fldl
cmc
fsts
sbb
add
dec
scas
mov
xchg
mov
adc
jp
jbe
popf
inc
ljmp
adc
lea
fcmove
dec
sahf
and
push
pop
pop
stos
cmp
divb
sub
pop
lcall
fists
fcomi
mov
mov
xor
pusha
inc
and
jno
fnsave
jnp
jmp
push
xor
lret
movsl
in
pop
adc
insb
leave
movsl
pop
adc
and
push
mov
loop
xchg
dec
lods
imul
mov
fcompl
and
fildll
test
mov
jo
pop
sti
std
imull
shl
hlt
xlat
mov
call
cmp
lret
push
lds
mov
hlt
xlat
test
les
mov
xchg
lods
mov
lret
jecxz
push
sub
aad
cmpsb
mov
add
add
mov
jno
std
outsl
mov
xchg
pop
cltd
mov
roll
add
add
cmc
add
add
or
mov
pop
pop
lahf
sbb
sbb
data16
fildll
pop
push
rol
clc
sub
dec
mov
mov
mov
push
int
mov
cmp
scas
mov
outsl
fwait
sahf
jmp
lods
cmova
dec
jno
movb
adc
xor
das
cli
bound
add
add
in
shlb
xor
sbb
shl
mov
cmpl
icebp
xor
rorl
outsl
pop
imul
in
cmp
push
jg
cmp
xchg
in
jnp
cwtl
test
pushf
sbbb
stos
lret
call
sahf
push
inc
and
rcrl
inc
or
push
pop
not
and
ret
add
mov
mov
mov
mov
ret
clc
sbbb
loopne
push
mov
in
xchg
nop
dec
cli
lcall
add
sbbb
loope
jmp
loop
scas
sti
iret
clc
push
add
cmc
add
add
and
or
int
pop
adc
fnsave
xchg
sti
mov
mov
mov
or
insl
fnstenv
ficompl
ret
pop
out
xor
add
test
xchg
cli
fildll
fcmovnb
xchg
icebp
fldl
or
push
pop
add
cltd
push
push
pop
push
ljmp
js
dec
pusha
int
push
xchg
cmpsl
imul
mov
sub
pop
cmpsb
sub
add
jle
lret
int
sub
dec
js
inc
inc
cmp
rorb
mov
mov
sbb
mov
inc
sub
popf
sub
data16
aas
sbb
fsts
or
mov
andl
push
push
mov
mov
les
pop
adc
jns
repz
sub
add
xor
xchg
lds
icebp
cmp
xchg
in
pop
add
cmc
add
add
test
xchg
inc
sub
xchg
out
xor
cmc
inc
push
xchg
out
jle
and
push
popf
xchg
dec
sbb
add
jg
push
in
mov
out
and
inc
xorl
decb
data16
test
rcrb
out
in
jbe,pt
and
nop
loop
push
sub
pop
std
lret
jne
sub
not
repnz
mov
xor
sbbb
out
push
stos
xor
adc
push
in
sarl
ds
mov
cmp
fcmovnb
cmp
cmp
mov
outsb
push
div
cmp
dec
add
pop
xchg
mov
scas
xor
dec
push
jecxz
mov
iret
or
shlb
pop
cmpsb
rolb
movsb
int3
xchg
inc
lea
jo
cmpsb
add
add
inc
xchg
sub
sbb
and
cmpsl
stos
shll
sbb
dec
dec
ja
in
addr16
pusha
add
add
cli
inc
jg
int
pop
sbb
pop
pop
iret
loop
add
cmc
add
add
repnz
mov
aas
sbb
pushf
push
xchg
push
or
pop
and
es
shll
add
push
adc
mov
push
push
xor
lahf
pushf
pusha
pop
lea
icebp
stos
outsl
xchg
imul
mov
xorb
into
or
dec
cwtl
and
xor
jae
pop
mov
inc
mov
push
or
sbb
testb
pop
mov
adc
je
adc
les
add
or
push
xchg
or
jl
xchg
or
mov
mov
mov
mov
or
popf
ja
lcall
cmc
dec
out
bound
xor
sub
or
js
jp
jae
lcall
popf
inc
sbb
mov
and
lods
add
adc
add
mov
push
idivl
popa
push
das
sbbb
add
add
xchg
std
cmp
jle
fisttps
cmp
inc
xlat
and
add
add
add
int3
in
push
push
cmpsb
inc
pop
loope
shlb
jg
sbb
inc
cld
add
xor
cmp
ss
lods
or
icebp
sub
adc
pushf
out
xchg
jp
cmpsl
faddp
sbb
arpl
and
into
sarl
loopne
dec
add
mov
shr
ja
dec
mov
insb
mov
es
test
imul
movsb
test
mov
sbb
popf
mov
flds
js
hlt
xchg
daa
pushf
push
cli
cld
pcmpgtw
lret
push
pop
dec
xchg
repnz
pop
ficomps
pop
dec
xor
pop
adc
cmp
movsl
lock
xor
sub
mov
pop
add
dec
dec
gs
in
mov
sub
repnz
jmp
push
sar
out
lods
jns
fldl
cmp
sub
lods
or
mov
or
and
addb
add
iret
xlat
ficoml
imul
add
add
add
in
xor
scas
out
es
or
aam
xor
repz
lds
aad
test
stc
outsl
jle
movsl
push
jo
dec
loopne
cmpxchg
push
mov
mov
mov
ret
push
push
jp
xor
add
xchg
sbb
test
xor
scas
mov
dec
movsb
arpl
jmp
cmpsl
test
insl
push
dec
adc
fidivl
ja
fsubs
pop
sub
decl
sbb
test
lods
mov
mov
xchg
bound
roll
sar
stc
mov
push
sbb
stos
enter
push
ljmp
jg
lods
add
sub
or
push
inc
pop
mov
xchg
ja
pop
lock
dec
jmp
dec
scas
iret
outsb
jmp
rcll
push
scas
push
shll
add
add
add
push
mov
adc
mov
xchg
jl
xchg
dec
mov
into
lahf
inc
bound
loop
adc
mov
int3
push
xchg
sbb
push
inc
lock
outsl
scas
scas
dec
test
pop
cli
jecxz
divl
push
jns
lock
outsb
add
gs
jecxz
gs
xchg
inc
and
mov
or
cmp
hlt
push
dec
sub
inc
nop
mov
mov
mov
out
nop
jns
cmp
mov
sti
ret
test
cli
adc
je
mov
sbb
xor
push
dec
loop
cs
inc
imul
std
ds
test
arpl
fsub
insl
mov
bound
outsb
shlb
push
jmp
pop
push
and
push
mov
std
mov
dec
fidivl
popa
cmp
dec
sub
sbb
shrb
sbb
add
sbb
std
sbb
stc
cld
or
mov
and
add
add
add
loopne
iret
shll
test
leave
mov
mov
push
or
or
iret
xor
cmp
xchg
test
shlb
xor
jmp
dec
pop
mov
inc
fisubrl
jne
sarl
or
xchg
out
fdivl
rol
push
add
push
mov
mov
jmp
sti
scas
loop
cmp
fdivrp
cld
inc
cmp
call
sahf
sub
arpl
adc
rorb
outsb
push
dec
loopne
daa
sub
mov
lods
push
add
movsb
xchg
out
fadd
sub
out
dec
mov
std
or
mov
imul
jmp
aad
pushf
lret
incb
mov
add
push
jmp
enter
fdivp
pop
pop
jg
jg
inc
add
pop
add
sbb
xor
out
adc
call
negl
adc
out
jl
pop
daa
or
stos
and
add
leave
pop
xchg
inc
sbb
stos
add
movsl
and
xchg
xchg
pop
sub
sbb
inc
sti
jnp
test
cmp
addl
dec
ja
outsl
lcall
lret
test
lea
adc
mov
sahf
sti
xorl
cmp
aaa
jb
loop
out
das
shll
mov
movsb
div
mov
push
fiadds
data16
lcall
cmpsb
push
outsb
mov
iret
test
or
lret
fbld
test
rcll
imul
push
into
sbb
cmp
repnz
sti
lods
int3
stos
addb
addb
jp
lcall
cmp
cs
jne
test
stc
adc
mov
mov
adc
aaa
dec
jmp
mov
xchg
iret
daa
aam
or
iret
addb
addr16
clc
pop
fwait
inc
jge
add
mov
dec
pushl
pop
into
or
mov
add
add
and
sar
repz
sbb
aam
sbb
dec
inc
in
add
inc
inc
addr16
cmp
pushl
push
mov
jns
xchg
jmp
scas
jb
ljmp
xchg
sbb
in
lods
pop
jne
mov
or
pop
dec
or
dec
mov
clc
xor
adc
pop
xchg
pop
sbb
jb
dec
xchg
loopne
lcall
aad
mov
dec
out
mov
adc
popf
adc
repnz
pushf
xor
in
jp
cld
ficompl
lret
inc
inc
pop
xchg
or
pop
mov
into
inc
mov
ja
fildll
fxch
xlat
mov
sbb
scas
mov
popa
aad
sub
inc
mov
mov
push
push
pop
mov
cmpl
in
mov
cmp
sbb
xor
loopne,pt
push
fistpl
cmpsb
cld
push
popa
movsl
add
add
inc
ja
pop
aas
pop
pop
inc
adc
dec
emms
xchg
daa
add
cmc
add
add
scas
lock
jns
roll
pop
push
cmc
push
lea
sub
cs
lret
and
cmp
loope
sbb
js
add
or
dec
xchg
jbe
scas
movsl
xchg
icebp
add
mov
call
cmpsl
fistpll
std
test
test
push
push
xchg
leave
mov
sbb
roll
push
pop
lock
adc
cwtl
fwait
mov
xchg
out
outsl
inc
cs
dec
cli
xor
outsl
aad
xchg
dec
ret
inc
mov
test
jle,pn
xchg
cmp
xor
insl
shlb
adc
inc
stos
divb
mov
lea
mov
mov
out
addb
cmp
sti
cmpb
out
and
add
add
test
movl
push
mov
repz
jae
ja
div
dec
lods
push
mov
leave
orb
add
push
stc
adc
sub
mov
pop
sbb
testb
mov
das
stc
sahf
lods
sub
fidivrs
mov
mov
pop
push
xorb
add
push
jno
xor
hlt
clc
adc
subb
sbb
mov
dec
popa
jb
outsl
cld
in
addb
xor
and
loope
add
cld
pop
xchg
and
mov
sub
pop
and
jbe
sub
push
jo
jmpw
xor
push
hlt
popa
lea
fstps
lret
sub
xchg
jb
push
in
sub
add
pop
int3
in
push
xchg
sahf
cli
negl
dec
or
les
sub
cs
nop
xchg
dec
add
or
lock
add
cli
std
jg
into
jno
dec
cmpsl
inc
add
add
cmc
add
add
test
arpl
xchg
mov
fstps
jno
mov
xchg
push
out
jo
dec
push
inc
enter
or
fisttps
push
movsb
pushl
dec
int3
flds
adc
cmpsb
xor
test
jmp
shll
dec
mov
insb
adc
lds
xchg
cmp
fstps
sub
add
inc
jae
lock
mov
adc
cmpsl
aas
jle
in
mov
cmpsb
nop
mov
dec
cmpsl
xchg
dec
out
mov
or
add
aas
and
ljmp
cwtl
clc
ss
add
cld
testl
inc
call
adc
popf
insb
jp
or
sub
cld
lods
fistpl
cmp
mov
fmull
cmpsb
shll
arpl
add
add
add
add
mov
std
incl
sub
pop
outsl
and
add
add
add
cli
sarl
inc
and
daa
mov
enter
int
add
xor
sahf
jl
les
icebp
cld
addr16
loopne
mov
movsb
outsb
jl
mov
pop
jmp
lea
pop
mov
sbb
aad
xor
dec
sub
clc
test
xchg
pop
int3
jns
test
push
mov
lahf
mov
rcrl
dec
inc
and
mov
push
enter
xchg
sbb
movsl
imul
xchg
test
xchg
sbb
aas
add
pop
pop
sahf
sub
or
or
fsts
fs
aas
sbb
xor
sahf
or
popf
pop
pop
fimuls
aam
outsb
lahf
leave
or
insl
or
xchg
aas
add
adc
or
movsl
add
jo
movsl
int3
insb
cmp
fdivrs
ficoms
sbb
lret
adc
scas
add
add
es
jg
pop
xorl
popa
mov
mov
sub
add
add
add
push
outsl
push
add
fimuls
das
mov
into
ljmp
cwtl
pop
pop
mov
adcb
cwtl
aas
sub
je
dec
cs
ret
in
cmc
jns
xor
lahf
insl
addr16
psllq
dec
lcall
jmp
push
stos
mov
add
xchg
mov
or
sub
mov
sahf
sbb
dec
fwait
add
cmpsl
sbb
push
lahf
clc
cmp
and
and
jnp
cmp
inc
fisttps
push
pop
pop
das
add
mulps
xor
add
cltd
add
popa
jnp
jae
xor
jge
and
aad
into
scas
decl
paddusw
daa
call
iret
or
push
lods
dec
je
test
mov
jns
imul
push
lcall
inc
mov
sbb
lret
add
add
or
cmp
pop
in
jns
sub
add
add
add
mov
sbb
cmp
mov
mov
shlb
xchg
lahf
stos
dec
enter
adc
lahf
add
xor
frstor
fcoms
lock
pop
dec
fwait
mov
adcb
push
out
sbb
fsubrs
adc
jae
mov
daa
inc
mov
cmp
inc
scas
dec
rorl
push
cmp
jecxz
push
std
pop
sbb
loope
dec
popf
xor
xchg
sub
enter
inc
add
add
negl
scas
dec
mov
int3
lods
cwtl
sub
stos
dec
orl
roll
addl
fmuls
adcb
jge
push
and
cmp
dec
gs
mov
mov
icebp
mov
sar
adc
cmp
mov
cmp
dec
loop
xchg
add
out
fs
xor
gs
or
cwtl
add
add
stc
lods
xor
ja
psubsw
inc
cwtl
push
sub
add
xchg
popa
push
aad
imul
add
test
call
cmc
sbb
mov
push
jnp
pop
mov
movsl
hlt
push
inc
jnp
xor
cmp
add
loopne
mov
jp
add
pop
sbb
shlb
stc
xchg
sbb
pusha
jb
imul
arpl
int3
orl
jecxz
pop
inc
adc
xor
mov
sub
loope
lds
hlt
push
insb
jns
inc
in
mov
jae
pop
sub
sti
mov
rcll
and
insb
or
jns
roll
push
mov
daa
inc
les
jo
fmull
ret
out
sbb
or
loope
mov
sub
and
fwait
ss
pushf
sti
xor
fldt
cmpsb
mov
sub
push
pushf
js
add
add
ficoms
stos
sbb
ljmp
arpl
add
add
add
bound
stc
push
or
es
add
add
mov
out
dec
and
jbe
inc
dec
inc
subl
xchg
test
mov
or
data16
mov
mov
pop
dec
imul
jmp
mov
outsb
outsl
push
or
sub
pop
mov
lods
shrl
pop
xorl
mov
test
je
add
pop
movsl
jg
mov
movsl
stos
sbbl
addl
push
mov
and
in
jno
adc
inc
and
bound
jae
sti
std
jbe
pop
jb
and
add
cmp
lahf
dec
leave
lret
hlt
bound
dec
jno
xchg
inc
xor
lods
or
int3
add
shlb
frstpm(287
or
and
mov
or
loopne
shrl
inc
leave
es
add
in
out
sbbb
sbb
cmp
add
add
jle
sbb
lret
jp
sub
jns
or
dec
or
add
push
mov
add
movsb
sbb
adc
sub
arpl
xchg
xor
les
mov
or
jl
inc
frstor
jmp
mov
iret
js
mov
xor
test
icebp
out
jp
mov
dec
and
xor
insb
ljmp
cli
inc
cmp
cmp
out
in
mov
pop
js
mov
movsb
inc
loop
repz
adcb
jp
cmp
ja
les
push
imul
push
mov
movsb
sbb
mov
sbb
add
loopne
lret
pusha
aam
jge
and
fwait
sti
push
fwait
mov
repnz
cmpsb
aas
mov
mov
fmuls
addr16
add
dec
or
out
aad
jo
je
inc
sub
xor
add
add
add
or
mov
pop
addr16
mov
stos
pop
xor
jns
push
add
cs
and
insb
out
imull
pop
pop
dec
std
pop
sbb
daa
xchg
pop
lret
mov
push
sbb
js
mov
cs
or
cmp
add
mov
sbb
mov
adc
or
add
inc
dec
mov
adc
fucom
insl
int
aam
or
push
or
or
fdivp
stos
xchg
sub
ja
dec
push
int3
adcb
push
stos
jae
mov
cs
leave
and
xlat
std
inc
outsb
mov
push
inc
loope
in
xchg
lock
or
sub
stos
shl
xor
xchg
jbe
mov
js
dec
call
out
xchg
cmpsl
shrb
mov
cmp
dec
adc
cwtl
dec
mov
movsb
insb
add
add
in
add
cmp
out
dec
lret
fstpt
daa
xor
add
add
add
ja
mov
adc
call
mov
test
lock
cmpsb
adc
and
add
js
adcl
cli
push
fcoml
jnp
pop
loope
pusha
push
add
insb
dec
and
roll
mov
sub
int
or
sbb
pop
dec
pop
stos
js
addl
push
adc
rolb
mov
fstl
jmp
sub
out
fisubrl
mov
jmp
cmp
lods
add
int3
xchg
ret
mov
xchg
fdiv
ret
jmp
in
push
roll
fs
jp
xchg
pop
inc
xchg
test
gs
cld
inc
in
mov
in
xchg
mov
das
ljmp
sahf
pop
into
jp
and
xchg
dec
jg
in
pop
xor
push
dec
xorb
mov
stos
mov
stc
cmp
and
add
add
lods
jg
add
lods
imul
sbb
add
cmc
add
add
loopne
cmp
mov
mov
fstps
pop
mov
into
jge
cmp
pop
add
xlat
inc
gs
cmp
mov
shlb
cli
and
mov
cmpsl
lock
mov
push
sbb
loop
aas
int
mov
jb
jnp
idivl
mov
and
pusha
or
insl
push
xor
ljmp
sbb
add
outsl
add
lea
or
in
ja
vpunpckhdq
fwait
in
xchg
addr16
filds
jle
inc
arpl
test
hlt
push
adc
adc
sbb
cmp
lret
lock
inc
mov
call
cmp
xor
test
sbb
adc
cmp
sarb
test
cmp
in
nop
xor
or
add
jg
cld
add
adc
add
xor
add
add
add
xor
inc
pop
icebp
jbe
jl
stos
lret
add
mov
repnz
xor
dec
pop
popa
ret
add
cmp
iret
pusha
jl
loopne
mov
pop
loope
repnz
or
mov
mov
sbb
pop
adc
clc
add
and
dec
xor
jns
dec
aaa
out
xchg
or
jmp
or
into
stc
leave
xor
gs
adcl
out
sbb
iret
cmp
add
inc
cli
ja
rcrb
jae
xorb
stos
xor
jge
dec
or
pop
sub
int
fldl
std
lods
pushf
adc
std
test
xchg
lret
stc
aas
mov
xor
add
push
xor
jne
mov
into
add
mov
call
cld
addr16
dec
cmp
shlb
push
jnp
lret
push
addl
fists
add
ret
mov
iret
mov
std
xor
push
xor
add
add
add
jge
fisubrl
adc
mov
iret
sub
in
icebp
shlb
fists
fldl
inc
push
xor
sbb
push
adc
cmp
dec
add
jecxz
xor
mov
cld
sbb
lea
inc
push
or
xchg
popa
dec
or
js
sbb
nop
das
jmp
adc
movsl
pop
sbb
movsl
aas
ss
in
adc
aad
ss
jo
movsb
into
pop
cmp
call
outsl
and
ret
les
clc
xchg
adc
aad
cld
adc
lds
gs
pop
aas
pop
subps
fs
add
in
ss
mov
fwait
mov
xor
idivb
or
xor
rolb
fs
dec
mov
repz
mov
shrb
add
add
mov
sbb
addb
cmc
add
add
inc
stos
addl
cmc
mov
nop
in
push
lock
notb
pop
bound
repz
inc
xchg
loopne
add
xchg
movsb
inc
cmp
in
xor
mov
fdivl
lahf
sarb
xor
orb
shrb
jle
nop
mulb
or
cs
jmp
pop
push
in
out
adcb
movntq
out
mov
inc
mov
lcall
jle
mov
adcb
xchg
addr16
fiaddl
loop
cltd
int3
sbb
mov
push
loopne
incb
js
cmc
jmp
out
xor
mov
arpl
js
lea
cwtl
in
imul
test
test
pusha
lods
test
fmuls
push
or
or
in
cmp
inc
sti
ret
out
xor
mov
bound
add
add
xor
clc
cli
clc
sarb
repnz
inc
aam
sti
in
lock
add
cmpsb
push
sbb
or
sbb
es
je
pop
push
mov
lahf
pusha
mov
sub
cld
rolb
jle
xlat
pop
test
cmpsl
aam
in
test
scas
out
pop
xor
jnp
or
xchg
xchg
mov
or
xchg
imul
sub
lea
aaa
sub
js
jne
push
push
push
add
ret
ss
xor
mov
mov
inc
scas
mov
dec
pop
xlat
push
loop
lds
pop
sbb
dec
mov
push
jbe
or
xchg
dec
pushf
les
push
or
cltd
xor
cmp
out
mov
push
add
lock
dec
mov
or
imul
mov
lock
mov
rcrl
jmp
nop
pop
clc
scas
fildll
add
add
jnp
out
push
lcall
in
add
cmc
add
add
xchg
dec
xchg
mov
xchg
cs
and
or
arpl
push
sbb
fcmovnu
nop
mov
push
push
xchg
jmp
call
adc
dec
xchg
dec
sarb
push
mov
out
lcall
out
out
mov
push
aas
mov
or
mov
pop
sub
call
in
and
or
cmpsb
xchg
sub
call
sub
or
sbb
sub
cs
lahf
pushf
xchg
mov
pop
pop
push
hlt
mov
nop
mov
hlt
add
adc
repz
mov
jns
std
sub
xchg
fadd
lods
xor
pop
dec
add
cmp
push
loopne
inc
sub
aaa
repnz
add
ljmp
in
push
mov
test
nop
xor
iret
push
xor
jg
imul
js
out
add
fs
es
data16
cmc
jle
dec
in
hlt
fidivl
add
cmc
add
add
dec
push
pop
sub
pop
imul
push
ret
iret
xor
cltd
fs
mov
cmp
lock
jne
mov
inc
jecxz
dec
adc
not
jno
popa
add
or
lock
add
fimuls
dec
add
and
xchg
cld
pop
add
scas
lods
pusha
fdivrl
inc
lea
dec
adc
and
push
pop
and
dec
pushf
fcmovnb
das
rcrb
testl
sbb
mov
rcr
aam
clc
ret
or
jmp
or
or
xor
jg
push
push
test
fwait
popf
popf
int3
cmp
negb
stos
mov
mov
repnz
or
outsl
shlb
push
sub
cmp
inc
repz
pushf
lahf
daa
mov
add
add
dec
mov
imul
push
nop
iret
cmp
add
add
add
add
mov
mov
in
out
mov
pushf
decb
pop
pop
outsb
xor
out
jge
pop
or
in
pop
int
inc
aas
xchg
mov
mov
hlt
xchg
les
sbbb
xor
hlt
pop
or
stos
hlt
push
jg
repnz
xor
fmull
pop
inc
xchg
cmp
xor
cwtl
inc
jno
jg
pop
test
and
pop
xor
jne
mov
add
push
icebp
call
clc
cmp
inc
mov
xlat
push
out
es
sahf
lods
dec
or
aaa
cmc
shlb
and
cltd
enter
lahf
inc
add
dec
push
push
jb
or
jnp
pop
out
mov
dec
inc
dec
xor
mov
xchg
pop
mov
jg
insb
cmp
jae
pop
xchg
sbb
jae
pop
mov
jge
popw
mov
orb
jl
aaa
add
add
and
push
sti
cmpsl
pop
push
jo
mov
cmp
add
add
add
mov
dec
adc
mov
or
cmpsl
cmp
mov
xchg
stos
mov
cmpsb
dec
stc
push
mov
adc
lcall
and
push
add
aaa
pop
scas
and
xor
mov
dec
mov
push
mov
cmp
icebp
fs
mov
adc
fadds
sbb
call
mov
mov
xchg
mov
outsl
push
sub
add
jle
cltd
outsb
outsb
loop
mov
pusha
dec
loope
dec
in
xlat
rcrl
inc
test
jge
inc
mov
mov
sbb
xchg
xchg
cmc
mov
push
pushf
ret
mov
dec
mov
jne
jle
loop
scas
in
js
mov
inc
aam
orl
mov
out
or
lahf
jbe
add
push
and
std
cmp
mov
cmp
add
add
add
lahf
shrb
pop
cwtl
ret
imul
insl
stos
mov
stc
xchg
add
test
sbb
xor
mov
cli
mov
mov
and
push
sti
add
cli
jbe
fwait
js
adc
jae
shrl
in
dec
adc
das
and
xorb
js
pusha
and
test
dec
sub
enter
and
insb
shlb
roll
adcl
jp
xchg
imul
lret
loop
daa
nopl
sub
clc
enter
cmpsl
scas
jae
push
out
cli
adc
push
iret
and
jns
mov
sbb
hlt
or
jecxz
cld
adc
xor
lcall
xor
pushf
int3
pop
push
icebp
or
movsl
mov
inc
lock
stos
scas
inc
fwait
inc
jmp
ret
hlt
in
loope
add
lds
xchg
and
push
or
scas
cmp
add
add
add
sub
sbb
xor
adc
call
mov
in
setbe
lahf
mov
rorl
mov
test
dec
xor
sub
pop
push
push
push
and
clc
pop
sbb
fcompl
cmp
cmp
ljmp
xchg
jle
idiv
int
cmpsl
xorb
insb
shrb
cld
mov
xor
mov
mov
test
xchg
jae
adc
push
emms
cli
aam
iret
shll
jbe
inc
ret
and
mov
xor
add
jge
scas
movsb
sub
icebp
and
lds
sub
aam
mov
cmpb
xor
fdivr
adc
cld
sbb
jae
add
and
pop
rorl
shll
lock
cmp
test
add
add
xchg
ficomps
push
loope
mov
add
add
movsb
rolb
in
stos
movsb
xlat
pop
and
mov
pop
xor
arpl
dec
cmpsb
popa
sbb
mov
mov
mov
insl
jno
addr16
fstpt
ret
inc
mov
fs
pop
inc
jp
psadbw
dec
xor
rcl
push
push
cmpl
lea
dec
into
push
mov
je
mov
push
sub
loopne
and
imul
stos
add
test
lcall
xchg
loope
sbb
mov
int3
or
or
lret
ss
sahf
mov
sbb
cmp
dec
jg
pop
lret
test
icebp
lods
imul
and
pop
push
xchg
ficompl
fcmove
and
sub
push
jb
movsl
scas
sbb
scas
push
test
mov
push
mov
push
aas
bound
cmpl
inc
push
add
add
lods
xor
mov
pop
add
ds
add
add
add
aad
jo
loope
jae
mov
push
outsb
int
xor
jg
cmpsl
popf
rcr
aaa
shll
pusha
inc
in
mov
adc
xor
andl
jnp
fdivl
test
addr16
insl
imul
clts
adc
dec
js
xor
cmovae
pop
adc
push
pop
scas
clc
lret
lds
and
sub
mov
inc
sbb
scas
cltd
popf
ret
adc
push
push
out
mov
insb
xor
pop
out
dec
cmp
push
or
daa
punpckhwd
stos
arpl
les
stc
add
cwtl
pop
lds
stos
cmc
jp
sbb
pop
xabort
rdtsc
frstor
pcmpgtb
div
stc
adc
fisubs
pusha
fimuls
pop
fwait
pop
mov
test
out
add
rcr
and
sahf
mov
sbb
mov
add
lock
mov
cwtl
sbb
mov
add
cmc
add
add
jno
lret
ss
xchg
xchg
push
pop
int
jns
mov
dec
xor
mov
das
int
out
enter
insb
nop
sbb
sub
push
mov
aad
xchg
cmp
test
lahf
int
rorl
sbb
inc
jno
adc
push
or
cmp
xchg
fsubrl
mov
test
incb
orl
pushf
cwtl
test
push
aas
mov
push
xchg
insl
leave
or
out
lcall
mov
jmp
ljmp
sbb
jecxz
jg
cli
sub
insl
arpl
mov
sbb
dec
ret
add
loope
std
aad
xchg
add
xchg
loop
sbb
mov
out
cld
ljmp
push
movsl
inc
pop
jge
dec
pushl
shlb
add
sti
pop
jge
div
cmp
and
add
cmc
add
add
or
xor
pop
cmpsl
or
mov
xchg
xor
dec
daa
nop
cmp
sub
bound
cmp
daa
mov
mov
adc
js
mov
dec
mov
iret
pop
sub
mov
mov
stos
sub
lock
sbbl
cmpsb
xchg
fs
es
xchg
dec
leave
inc
inc
pop
xchg
cmp
cmp
mov
cmp
int
scas
jns
rorb
lea
sbb
dec
cmp
jnp
daa
sub
jnp
push
pop
std
sub
sbb
call
jbe
cmp
pop
add
jb
das
stos
jg
push
fcompl
or
push
sub
sub
stos
js
lret
inc
repz
int3
inc
add
fildll
xchg
imul
lea
mov
testb
push
ljmp
ret
ret
add
fsub
std
in
popf
jle
es
sbb
mov
cmc
add
add
jmp
fwait
xchg
fs
xchg
mov
jmp
jbe
jmp
daa
pop
sub
or
cmp
cs
sub
enter
cmp
or
inc
test
movl
fldl
repz
push
dec
out
add
sub
add
jae
xchg
cmc
xor
sub
jmp
dec
mov
xchg
aas
and
and
adc
lcall
jecxz
or
sub
rol
xor
pop
pop
inc
pusha
add
and
mov
adc
xlat
test
outsb
xor
ret
leave
popa
pop
adc
call
push
inc
clc
push
stc
das
adc
dec
jne
dec
movsl
jecxz,pn
sub
enter
ret
push
repnz
std
js
and
xorl
push
rcrl
mov
add
add
jp
jnp
sti
xchg
jle
popf
loopne
mov
inc
add
cmc
add
add
cltd
xor
jg
imul
or
push
mov
or
xchg
mov
mov
mov
or
adcb
sbb
sub
insb
mov
or
sub
nop
ja
add
decb
mov
lds
fsts
mov
mov
arpl
in
cwtl
pop
cwtl
daa
cmpsl
lret
loope
mov
aas
nop
popw
push
imul
push
cltd
lds
in
aas
rclb
adc
push
cld
cmp
adc
pop
rcl
sub
inc
sub
addr16
or
push
jp
loopne
mov
inc
inc
dec
adc
cmp
sbb
mov
stos
pop
xchg
xor
xchg
xlat
hlt
or
adc
test
dec
shll
mov
outsb
andb
add
mov
push
sti
loopne
cmp
mov
inc
add
cmc
add
add
jge
cmpsb
xchg
in
jo
dec
push
xchg
mov
popf
stc
aam
add
and
push
aaa
cmpsl
inc
enter
inc
in
insl
pop
adc
movsb
dec
dec
std
fisttpl
test
stos
pop
das
insl
sub
fs
sub
and
aad
imul
idivl
jb,pt
xchg
xor
ja
fimuls
aaa
repz
cmp
shll
neg
push
lock
out
mov
push
shr
inc
xchg
mov
adc
int3
lcall
gs
cltd
adc
pop
scas
xchg
ljmp
ja
test
incb
mov
test
movsb
mov
scas
lods
mov
push
jle
inc
out
insb
and
mov
stc
cmc
cmp
jle
cmp
lahf
add
int
pop
mov
popf
and
call
fwait
inc
sbb
call
push
ret
cmp
and
push
dec
cmp
je
push
inc
add
cmc
add
add
push
andl
clc
test
pop
xchg
or
xor
imul
xchg
hlt
and
rcrl
js
loope
and
push
outsl
lods
lock
test
rol
xchg
inc
into
inc
pop
lcall
xor
push
inc
insl
push
xor
rcr
mov
je
paddd
mov
aaa
sbb
out
int
push
cmpsl
xchg
mov
into
arpl
mov
movsb
jns
fstpl
pop
fiadds
sub
or
dec
sub
aad
out
test
push
cmp
mov
inc
iretw
jl
xor
imul
xchg
jns
dec
sbb
popf
dec
into
stos
cltd
and
das
mov
mov
repz
pop
out
dec
add
ret
jbe
cmc
out
mov
ss
pop
pushf
adc
sbb
cltd
mov
sbb
je
fiadds
test
adc
and
mov
add
cmp
jge
stos
movsl
push
arpl
sbb
add
add
add
pop
inc
dec
pop
call
arpl
pop
and
icebp
lahf
pop
lret
aam
out
cmp
out
ret
jp
jnp
pop
pusha
sarl
lock
icebp
jnp
cmc
jl
movsb
inc
popf
cmp
fs
fisttps
inc
jg
xor
push
cmp
mov
ja
lods
je
adc
cmp
insl
insl
cmp
mov
sub
cld
lds
sbb
dec
ljmp
and
ret
push
mov
xchg
lods
data16
frstor
arpl
popa
sbb
jbe
xor
out
int
push
rcrb
mov
sbb
mov
inc
and
out
cmp
push
dec
sub
xor
scas
mov
inc
out
mov
lcall
inc
mov
mov
addl
add
divb
rclb
mov
cwtl
dec
inc
inc
add
cmc
add
add
insb
in
das
and
icebp
push
adc
enter
xor
mov
jae
mov
xchg
push
gs
sbb
xor
int3
negl
outsl
dec
insl
enter
push
push
test
arpl
or
ret
std
ljmp
pop
ja
mov
pop
mov
shrb
add
push
jg
divb
lds
jge
movsl
xchg
add
xorb
leave
dec
jno
cltd
movsl
aad
and
stc
call
mov
stos
mov
cld
cmpsl
mov
jb
mov
jne
rclb
repz
mov
mov
out
mov
ret
push
or
push
cmp
call
outsl
xchg
push
xchg
add
lret
incb
push
sbb
inc
cs
and
subl
ja
jbe
mov
rcr
jne
inc
jp
jnp
dec
add
add
jbe
idivl
ss
repz
add
cmc
add
add
movsb
jecxz
aas
pop
inc
push
test
ffree
xchg
test
jnp
and
mov
xor
mov
xchg
mov
inc
enter
sub
js
mov
cmc
sahf
jno
mov
xor
adc
lods
outsb
push
mov
je
xor
into
cs
and
aad
xchg
push
data16
mov
bound
mov
nop
out
insb
lock
out
stos
adc
stos
sti
cmp
pop
xor
cmp
bound
push
inc
and
sbb
mov
nop
adc
xor
in
sbb
mov
rorb
cli
dec
dec
jb
loopne
aaa
sbb
mov
ja
xchg
mov
and
adc
lret
xor
sbb
testb
ljmp
adc
cs
jge
dec
xacquire
push
in
add
add
outsb
sub
stos
fs
cmp
xor
sub
add
add
add
jns
loopne
sub
jp
orb
out
loopne
and
stos
xor
repnz
jmp
push
jae
test
call
repnz
iret
mov
jp
repnz
jne
mov
push
xchg
and
mov
leave
sbb
cmpsb
add
insl
xor
pop
mov
lret
cli
cmp
sub
outsb
mov
cwtl
pop
fimull
mov
jne
rcll
push
adc
xor
adc
call
arpl
aaa
fdivs
xor
mov
cmp
outsl
ljmp
loopne
mov
scas
and
shll
lar
add
in
aad
xchg
std
pop
shl
mov
sub
ds
mov
insb
ret
pop
mov
jnp
adc
mov
loop
push
push
scas
adc
les
xchg
repnz
add
jns
scas
add
add
insb
pop
pushf
scas
fistpll
loop
fists
lcall
add
adc
xor
pusha
jp
and
movsb
data16
popf
mov
in
jne
push
int
cmp
xchg
xor
inc
or
test
mov
shlb
jl
add
sbb
pop
ljmp
cwtl
inc
jecxz
inc
stos
aaa
inc
aad
int3
sbb
repnz
or
in
dec
out
sub
cltd
int3
mov
lods
xchg
fidivrl
mov
ljmp
jb
in
fucomi
cmpsb
mov
cltd
movsl
push
test
inc
or
mov
in
rclb
into
jmp
push
mov
sbb
sbb
and
sub
lahf
adc
out
add
jmp
add
xor
mov
cmc
test
cmp
pop
cli
imul
sti
rorb
lods
pop
dec
cmp
pop
push
sbb
add
sbb
jnp
jnp
cmp
les
fisttpll
imul
add
cmc
add
add
mov
or
add
jge
int3
xor
lds
mov
dec
jne
inc
sarl
adc
scas
in
rep
push
movsl
imull
cmp
or
add
repz
jmp
fistps
int
jb
js
test
add
sbb
xchg
cmp
jbe
dec
movsl
mov
movsb
pop
imul
xchg
dec
enter
jb
test
xchg
push
xor
add
and
mov
or
test
test
int3
mov
ljmp
xchg
jp
pop
mov
xlat
mull
and
push
sbbb
aad
sub
dec
pop
test
cmp
mov
es
rcrb
out
les
or
pop
dec
insl
in
mov
jecxz
roll
setnp
pop
lds
add
outsl
lret
mov
out
incl
arpl
push
iret
into
xchg
dec
add
cmc
add
add
mov
aam
call
cmpsl
push
int3
dec
mov
push
mov
jne
fisubl
jbe
adc
and
stos
dec
cmpsl
cmp
inc
add
mov
not
movsb
das
pop
fs
xchg
inc
scas
add
je
das
jmp
mov
xor
mov
mov
add
enter
fnstenv
mov
xor
test
cld
roll
xchg
jnp
rorb
mov
aas
int3
mov
cmpsb
loopne
pusha
pushf
mov
inc
sub
ss
xor
inc
xchg
adc
aad
mov
je
test
mov
leave
jbe
jl
xchg
rcll
iret
push
movsl
iret
pop
fidivs
cld
mov
jno
adc
je
sbb
jecxz
xchg
loope
adc
ss
hlt
pop
out
cmp
cld
and
push
inc
out
mov
jge
in
sub
add
add
and
das
cmp
lods
repz
in
pusha
out
pop
pop
andb
dec
add
cmc
add
add
jmp
dec
das
push
pop
js
stc
lods
push
xchg
in
pop
lds
lret
mov
pop
ds
push
push
pop
dec
push
je
sahf
pop
mov
hlt
pop
push
mov
xor
cmp
addl
sbb
mov
arpl
ret
and
dec
fwait
or
in
cmpsb
outsb
fdivrl
adc
pop
shl
cld
hlt
xchg
pop
xlat
mov
movsb
mov
xchg
xor
add
insl
sbb
mov
lcall
lcall
imul
xchg
std
arpl
fnstenv
sti
adc
clc
in
jnp
cwtl
dec
adc
adc
cmc
xor
push
lock
add
xlat
xor
shrl
xlat
in
dec
test
push
mov
sub
cmpsl
adc
xor
inc
pop
lret
pusha
scas
cwtl
mov
out
test
repnz
add
add
daa
push
cld
push
std
jmp
push
jg
push
add
cltd
inc
repz
add
cmc
add
add
mov
cs
xchg
or
fstpt
subl
mov
push
fcoms
add
sbb
or
in
scas
or
addr16
mov
sahf
cwtl
mov
pop
push
loop
cmp
mov
inc
int3
jmp
or
push
adc
xchg
pop
or
jbe
aam
mov
add
cld
mov
lahf
fisubl
int3
dec
inc
sub
sub
ret
xchg
in
test
mov
iret
ret
aad
dec
xor
fnstsw
scas
in
mov
add
sub
lahf
bound
pop
inc
xor
lcall
cltd
movsb
sbb
pop
ret
call
mov
addr16
aad
xchg
lods
aaa
and
xlat
sub
movsl
mov
and
jne
loop
mov
xlat
mov
add
add
sbb
dec
push
cwtl
adc
loopne
add
dec
add
cmc
add
add
xchg
sahf
cltd
ja
stos
push
popa
inc
pop
adcb
sbb
je
lods
mov
lods
loop
adc
iret
imul
ja
ficompl
stos
imul
sub
jo
sub
test
into
and
mov
pusha
jp
mov
stos
nop
fwait
test
int3
insl
push
lods
sub
sbb
clc
xchg
cs
jmp
mov
dec
mov
mov
sti
shr
and
add
adc
outsb
cmp
cmp
outsb
push
xchg
lods
cmp
test
sub
xchg
out
jbe
and
inc
das
das
inc
aaa
mov
scas
enter
dec
pop
adc
and
inc
into
dec
cwtl
adc
adc
mov
jb
cmp
lahf
mov
xor
jb
movsb
hlt
xchg
sarl
out
repnz
push
outsb
adc
arpl
add
add
idivl
mov
dec
add
cmc
add
add
rorl
fnstsw
jno
mov
push
cmpsb
push
out
sti
stc
dec
mov
xor
mov
insl
fcoms
mov
aas
mov
insb
pop
adc
xor
xchg
jb
andl
xchg
add
push
ret
push
cmpsl
pop
pop
enter
js
lods
mov
testb
imulb
inc
aam
imul
mov
lcall
add
xchg
fiadds
fdivrl
mov
add
jbe
lds
outsl
shrb
adc
cmp
sub
out
jb
sub
sbb
cmp
in
test
xchg
cmp
outsb
or
scas
sbb
cli
mov
pop
inc
add
pop
aaa
stc
rcrb
leave
xchg
adc
cltd
push
jle
orb
ljmp
mov
pop
js
xchg
ss
add
add
jg
xchg
lcall
loopne
dec
add
cmc
add
add
shlb
dec
xor
xor
jnp
push
jno
pop
ret
ret
jnp
mov
lahf
sbbb
jns
inc
xchg
xchg
pop
aas
jo
arpl
getsec
xchg
call
dec
sub
push
mov
mov
cltd
fwait
mov
sbb
cmp
xchg
daa
insl
dec
inc
pop
int
sbb
loope
scas
pop
in
insb
mov
mov
repz
fisubs
pop
mov
or
xor
ljmp
inc
and
fisubrl
cmp
sbb
sub
xchg
cmp
cmp
inc
repnz
xchg
and
hlt
lcall
add
jl
icebp
mov
out
xor
test
cmp
out
mov
dec
fcomps
inc
lods
ljmp
and
xchg
sbb
lock
jnp
mov
sub
add
and
dec
lret
jmp
imul
xchg
aad
dec
lock
cmc
add
add
outsl
or
mov
inc
dec
sbb
pop
aaa
cmp
and
inc
lds
add
les
out
je
cmpsl
and
insb
pop
ja
sub
jnp
adc
scas
ficoml
dec
push
lret
or
pop
and
rorl
clc
and
insb
and
mov
jge
xchg
stc
xchg
hlt
and
out
mov
test
jnp
out
or
mov
ss
out
mov
mov
mov
idivb
xchg
adc
repz
stc
or
imulb
push
scas
and
pop
xchg
jns
pop
in
dec
scas
adcb
mov
adc
push
cmc
and
sbb
jo
dec
push
scas
mov
pop
gs
add
out
ja
jle
push
and
mov
push
pusha
jae
xor
add
cmp
aam
scas
scas
xorb
rolb
add
add
cwtl
loope
std
jge
cwtl
and
add
add
add
add
das
lahf
adc
adc
push
lahf
cmpsb
push
xchg
lods
mov
and
fsubs
fwait
and
cmpsb
push
xor
xchg
in
dec
movsl
dec
and
das
ret
push
add
pop
in
mov
ret
test
cmp
mov
and
lods
iret
lds
mov
cltd
out
jnp
iret
sub
test
ss
push
push
mov
int3
int
ds
stc
mov
imul
xor
adc
sub
das
daa
aaa
or
scas
pop
add
dec
xor
mov
adc
movsb
dec
sub
add
call
mov
aaa
test
in
cmp
in
push
xor
test
pop
mov
jno
std
pop
xor
push
sahf
xchg
popa
fldt
jno
fisubrs
ljmp
sub
jns
clc
mov
mov
movsb
mov
add
cmc
add
add
cs
out
mov
loope
cmp
imull
sbb
call
push
shlb
mov
adc
xchg
cwtl
test
ja
mov
mov
ds
loopne
add
les
cwtl
xchg
jmp
ja
fs
cmpsb
xchg
sar
scas
jle
adc
adc
adc
and
inc
xor
xor
dec
and
push
adc
mov
imul
idivb
push
nop
pop
in
cltd
sti
insb
imul
push
int3
push
lods
int3
push
mov
cs
fildl
jle
int3
inc
inc
pop
in
and
pop
stos
rcrb
jle
inc
les
adc
bswap
and
int
arpl
pushl
insl
push
push
pop
and
mov
lods
inc
ret
in
jnp
mov
add
js
ret
jg
mov
ret
gs
cmpsb
push
add
cmc
add
add
adc
push
in
jno
iret
outsl
jb
jnp
pop
mov
les
jno
sbb
out
fs
jmpw
ret
jl
jnp
ret
int
xor
push
lret
jns
or
jp
mov
dec
out
mov
and
xor
in
xor
lcall
aas
test
mov
jno
mov
mov
sub
jle
inc
insb
outsl
sbb
ja
cmpsl
aaa
sbb
or
cmp
mov
pop
xchg
sbb
out
push
and
out
aaa
jnp
cltd
das
stc
fdiv
mov
or
mov
mov
mov
mov
repnz
dec
cld
ljmp
fsub
int3
jns
repz
fwait
xlat
push
push
dec
cmpsl
ja
lods
add
repnz
push
sarb
mov
mov
pusha
test
add
add
das
mov
cwtl
out
daa
adc
adc
add
add
and
fs
or
sbb
mov
jns
pushf
cmp
mov
int3
fxch
sub
jg
pop
aam
jbe
push
rorl
xor
loopne
mov
cmc
or
jae
jmp
lcall
jne
cmpsl
nop
add
subb
gs
and
movsb
leave
je
jnp
data16
mov
out
ret
outsl
push
and
xchg
stc
shll
jle
out
es
or
cmc
sub
fnstsw
mov
sbb
jmp
mov
jecxz
incl
mov
and
ja
and
rcrl
adc
sub
cmp
sub
xchg
cmp
mov
cmp
pop
adc
fwait
xor
out
or
adc
outsl
mov
jb
in
add
add
hlt
gs
push
sub
dec
fists
add
add
xor
inc
ljmp
xchg
dec
lret
pushf
sub
add
es
push
xchg
or
fldl2t
mov
ret
roll
scas
std
lret
into
pop
int3
cmpl
adc
stos
xchg
push
jne
jmp
cmp
adc
adc
stos
iret
dec
or
jne
or
dec
rcr
inc
pop
out
mov
jl
std
mov
out
and
or
cld
jbe
loop
jno
push
in
rcr
mov
test
and
ret
mov
push
mov
in
pushl
cmp
scas
enter
xor
lds
xchg
mov
cmp
adc
dec
jb
rcr
dec
cmp
mov
aaa
js
lcall
jbe
fstl
push
pop
add
add
aas
gs
repnz
and
xchg
and
mov
add
add
pop
mov
jp
jne
jnp
stos
imul
inc
divb
and
js
dec
push
jecxz
adc
idivb
and
adc
loope
lret
mov
cli
and
loop
sub
rol
mov
mov
lods
xchg
mov
and
jmp
fsubrs
mov
in
mov
xchg
scas
les
in
insb
and
push
and
jae
lds
adc
add
xchg
aaa
mov
inc
sub
popa
cld
xchg
mov
arpl
cli
in
xor
jp
fwait
ljmp
mov
pop
xchg
les
es
nop
push
lock
jle
jbe
lods
daa
pop
in
add
loopne
rcrl
cmp
pop
inc
cmp
inc
outsb
cli
aam
cs
xchg
sbb
jbe
adc
xor
enter
add
mov
out
fisttpll
mov
jp
add
cmc
add
add
inc
popa
rorb
in
dec
mov
fdivl
dec
jmp
sub
ret
mov
or
xor
cvtps2pi
push
inc
ljmp
lret
into
jecxz
cmp
int3
xlat
in
aad
add
sbb
push
rorb
ja
mov
cli
push
clc
sub
arpl
lret
iret
xchg
xchg
push
movsb
pop
ja
pop
hlt
xchg
loopne
sbb
xchg
add
push
pop
xchg
or
push
test
mov
or
mov
sbb
arpl
mov
cmp
adc
push
xchg
in
int
ds
out
sti
out
cld
mov
aam
jno
fucomi
icebp
iret
xor
lds
imul
jecxz
jo
in
mov
leave
pop
imul
aad
test
lret
mov
pushf
mov
or
xchg
xor
lock
loope
mov
add
fildll
mov
arpl
outsl
push
add
cmc
add
add
shrl
lahf
or
pusha
inc
pop
sub
jp
mov
xor
insl
cmp
and
lods
adc
lods
in
stc
dec
rorb
bound
adc
push
and
cwtl
push
ljmp
dec
cld
cmp
push
stos
fstpt
adc
aaa
fs
jmp
movsl
cmc
loop
xlat
jmp
mov
sti
shrl
nop
xor
loope
xor
cmp
mov
add
mov
pop
xchg
sub
addr16
push
or
das
icebp
sub
sbb
cwtl
stc
xlat
repz
in
cmp
cmp
push
insl
out
sbb
push
inc
mov
sub
mov
lock
stc
insb
xor
add
stos
sti
jmp
adc
push
mov
xchg
movsl
lea
popa
mov
stc
nop
cmp
je
pop
push
and
addr16
ret
nop
mov
add
add
jmp
out
aas
mov
xor
add
add
add
cltd
js
inc
jl
push
adc
inc
out
push
dec
into
push
and
rclb
daa
test
push
xorl
ret
pop
aad
addb
test
cwtl
test
adc
clc
in
and
rcll
mov
ret
push
xor
in
dec
ja
imul
fldcw
aam
lret
xor
das
push
sub
inc
and
mov
test
es
cld
mov
test
int
test
sub
mov
push
cmp
in
lahf
xchg
psubsb
bound
insb
mov
fwait
enter
lock
scas
adc
cmp
xchg
dec
jecxz
clc
test
popf
pop
cs
into
xlat
cmp
ja
lret
inc
icebp
loope
jns
jno
xchg
pop
add
adc
mov
lods
aaa
sti
mov
push
mov
in
lods
xchg
inc
sbb
add
imul
out
mov
arpl
mov
add
add
add
filds
sbb
ficoml
push
mov
mov
cmp
cmpsl
xchg
add
out
aaa
dec
bound
iret
shr
imulb
lods
jmp
cmpsl
dec
jp
dec
addr16
xchg
mov
jg
inc
cmpsb
pop
loop
cltd
jmp
imul
fdivs
loopne
push
mov
add
pushw
xchg
cltd
dec
pushl
or
dec
gs
jmp
fdivs
push
sbb
pop
hlt
nop
rol
pextrw
lods
mov
lahf
xchg
push
adc
jg
pop
add
dec
repnz
xchg
aas
pushf
in
dec
insb
es
repz
rcrl
ljmp
mov
stc
rcrb
andl
test
mov
xorl
cmovo
adc
nop
es
cmpsb
das
ret
pusha
pop
loope
sub
into
scas
xchg
inc
shll
sub
add
add
add
dec
stc
mov
clc
add
sub
gs
pop
add
cmc
add
add
arpl
leave
gs
adc
fnstcw
mov
ficoml
fdivl
pcmpgtb
or
fld
xchg
or
sahf
arpl
mov
and
out
xor
lds
aad
test
js
into
fisttpll
mov
fistpll
iret
inc
sub
pop
push
pop
clc
adc
pop
loopne
cs
call
mov
pop
outsb
mov
int3
or
mov
lret
stos
sbb
or
aam
sarb
rcrl
push
insl
jnp
adc
fs
inc
inc
pop
jns
push
xchg
or
cltd
mov
push
mov
xchg
movsb
in
gs
and
lret
mov
sbb
scas
es
mov
xchg
xchg
andb
jno
popa
daa
xchg
dec
in
push
mov
jecxz
mov
pop
adc
int
test
mov
mov
frstor
xchg
cmp
jle
jg
cld
jo
hlt
leave
jg
mov
add
add
add
in
stc
ja
movl
jl
mov
mov
mov
out
fiaddl
movsb
mov
cmpsb
inc
das
nop
shl
negl
dec
or
cld
xchg
pusha
sahf
sahf
or
stos
jge
and
fdivs
hlt
in
sbb
jno
insb
loopne
insl
push
mov
pminsw
inc
sub
mov
lods
mov
add
clc
movsl
cmp
ds
sbb
rclb
push
loope
mov
outsb
adc
ss
lods
movsb
mov
gs
dec
sub
dec
cmp
mov
lock
lret
shrb
enter
aas
scas
push
data16
je
gs
lea
loope
pop
in
int3
mov
xchg
mov
cmc
cmp
jns
sbb
es
mov
or
mov
dec
icebp
add
add
xchg
mov
mov
jne
adc
pop
add
cmc
add
add
inc
je
pop
dec
scas
inc
fwait
loop
outsb
movsl
test
loop
jb
out
adc
push
pop
mov
and
mov
mov
jno
jb
hlt
outsb
aas
add
or
or
sub
pop
push
test
mov
cltd
mov
or
jae
add
pop
push
or
pop
outsl
inc
fucomi
inc
mov
maskmovq
idivl
sub
sub
sbb
lea
fdivrl
mov
add
mov
shrl
dec
aad
div
loope
mov
pushf
fwait
hlt
mov
enter
imul
xor
adcl
jl
xchg
push
lods
push
inc
add
inc
push
add
pop
lea
xchg
add
lret
mov
fwait
and
mov
sbb
dec
das
mov
lock
insb
ret
adc
js
xor
outsl
pop
inc
repz
add
add
or
mov
rcrb
dec
sub
add
add
adc
push
dec
fmull
push
out
xor
cmp
xor
das
clc
imul
stos
jnp
shl
aad
push
jae
jl
dec
mov
je
push
cmpsl
xor
or
add
jns
mov
iretw
pop
cmp
push
fs
scas
dec
ljmp
inc
xor
in
bound
int3
push
mov
push
fistps
ljmp
stc
mov
pop
cwtl
pop
stc
icebp
lea
xlat
mov
call
leave
stos
in
int
mov
repnz
mov
push
notb
dec
cmp
xor
mov
sarb
adc
jl
sub
iret
or
sbb
xlat
sub
les
andb
pop
test
push
add
xlat
std
lea
jg
jno
sbb
adc
sar
add
add
sub
cmp
dec
invd
and
and
add
add
add
pop
add
iret
dec
dec
mov
pop
sbb
and
adc
fstps
cwtl
xchg
push
fcmovne
pop
xchg
fadds
aam
push
xchg
mov
push
jmp
xchg
mov
jnp
sahf
cmp
clc
es
repz
xchg
pop
mov
push
leave
es
cmp
in
scas
mov
inc
mov
pop
fidivl
inc
scas
sbb
or
sub
pop
or
imul
es
ret
stc
jnp
jecxz
cmp
cmp
mov
add
mov
xor
insb
xchg
test
mov
pusha
std
mov
mov
xchg
lea
lock
and
out
or
mov
lock
loope
movsl
xor
test
mov
adc
mov
fidivs
xlat
push
push
push
std
sar
mov
cwtl
cltd
fsts
adc
mov
popa
jbe
add
or
push
shll
out
xchg
inc
push
lods
pop
pop
add
cmc
add
add
xor
adc
hlt
pop
sub
imull
sub
jae
out
mov
scas
pop
jno
stos
add
test
jge
ja
test
push
jnp
xor
js
ja
mov
and
ficomps
mov
movsl
dec
adc
jae
xchg
push
sbb
into
rorl
ror
push
clc
fcomip
lcall
sbb
test
jno
cmp
push
movl
outsl
dec
repnz
push
jp
sub
inc
mov
push
adc
arpl
aad
sbb
int
mov
cmpsb
mov
sub
pop
test
push
xchg
mov
test
int3
idivb
sarl
or
push
jge
test
mov
or
stos
push
test
outsl
imul
push
out
or
pop
jge
sbb
fcom
adc
add
add
out
lcall
inc
and
repz
add
cmc
add
add
mov
rcll
cli
std
std
push
stos
sub
mov
lahf
pop
fidivl
stos
xor
cld
or
dec
adc
cld
rorl
ss
pop
mov
lods
and
xor
jo
inc
ljmp
leave
sbb
xorl
sbb
repnz
int
scas
popf
add
adc
push
dec
pop
dec
and
test
mov
fimuls
mov
sub
dec
in
hlt
setle
rorl
lods
dec
or
cmp
mov
lock
sbb
out
dec
dec
popa
mov
std
mov
mov
dec
push
bnd
jl
sbb
xor
mov
push
inc
xchg
sti
dec
adc
xorl
out
mov
loopne
mov
int3
in
dec
ror
popf
icebp
inc
rclb
jp
mov
mov
add
bound
imul
in
jl
add
add
add
add
jno
aam
inc
sub
xor
icebp
cmp
jne
pop
repz
and
push
mov
adc
cld
cltd
loop
rcr
push
push
mov
sbb
dec
addr16
sahf
add
lea
push
dec
xor
inc
dec
mulb
push
pop
rorl
add
out
js
jae
mov
jecxz
jns
popa
mov
push
cmp
jmp
aaa
lret
inc
sbb
in
cmp
push
mov
test
outsl
sbb
fadd
imul
pop
stos
sahf
jns
push
daa
pop
mov
and
adc
inc
stos
stos
adc
hlt
mov
cltd
sub
scas
cmp
outsl
sbb
xor
lds
cmp
out
cmp
je,pn
cs
xor
int
push
jge
stc
fists
in
add
add
fwait
cmp
dec
data16
add
add
add
add
lods
repz
dec
ljmp
aad
faddl
xor
sbb
pop
dec
jo
dec
mov
scas
popa
das
data16
sbb
adc
aam
lea
push
cmpsb
mov
repnz
jg
mov
mov
orl
jmp
push
lcall
lds
fmuls
outsl
or
orb
fidivrl
in
pop
adc
cltd
xor
stos
mov
and
shll
mov
mov
jl
mov
mov
push
or
cld
cmpsb
fimull
mov
les
xor
cmp
xor
jle
dec
xchg
push
mov
enter
adc
fucomp
push
sti
pop
push
mov
xor
cmc
cmpsl
or
inc
adc
movsb
outsb
mov
pop
xor
mov
fsub
ljmp
lods
nop
cmp
add
clc
mov
or
jns
push
jmp
add
cmc
add
add
ss
loopne
xor
sbb
daa
xchg
lods
or
leave
fists
mov
mov
push
fdivs
scas
je
xchg
xor
mov
dec
es
inc
inc
movsl
insl
aaa
scas
pop
std
dec
or
mov
mov
xor
sbb
jo
adc
xchg
rolb
cmpsl
push
mov
mov
imul
add
cmp
inc
pop
fxch
sbb
jnp
push
mull
pop
mov
pop
jecxz
mov
xor
test
scas
pop
inc
pop
xchg
mov
lret
out
sub
jo
xchg
and
xchg
mov
ss
aad
xchg
inc
mov
repnz
add
imul
nop
mov
enter
mov
sub
into
jo
jl
testb
js
test
aam
push
jmp
dec
add
add
scas
xchg
push
adc
out
mov
pop
fstps
push
loopne
add
cmc
add
add
adcb
adc
or
or
loope
imul
test
add
mov
xchg
pop
or
jp
lods
jmp
hlt
mov
mov
and
inc
cmpsl
outsb
or
mov
orl
pop
cmc
xor
iret
sbb
lods
push
pushf
mov
or
mov
add
inc
sbb
mov
dec
sti
cltd
cmc
pop
sahf
jno
rcll
popf
or
xchg
adcb
enter
loope
dec
and
clc
xorb
pop
lock
nop
jp
enter
test
test
xor
xor
into
test
sub
in
xor
xchg
loope
dec
lods
loopne
shlb
mov
aas
fdivs
or
cmpsb
ja
out
repz
add
pop
push
std
jle
jns
call
add
mov
int3
rorb
dec
subb
aad
add
cmc
add
add
xchg
repz
repz
pop
mov
jb
nop
and
fsubrl
mov
cs
sub
jle
cld
lock
insb
or
aam
or
out
incb
cmp
aaa
inc
idiv
mov
pop
inc
loopne
sub
jg
lods
clc
push
jge
loope
push
or
js
das
pop
std
cmp
inc
sub
jl
std
inc
pop
mov
inc
loope
jmp
and
jno
aaa
or
aaa
push
stc
or
xchg
fldcw
mov
jae
test
xchg
push
out
sarb
mov
icebp
es
fisttpll
test
mov
jp
pop
cli
pop
pop
sub
or
lock
pop
pop
cli
roll
in
mov
mov
ret
out
movsl
mov
push
aas
ret
jp
addb
lea
fildl
add
mov
and
das
lret
cmp
mov
pop
lret
add
add
add
in
loopne
sahf
fisubs
pop
sbb
jmp
imul
test
repz
jp
les
mov
adc
scas
jno
sub
or
push
dec
jno
ret
test
sbb
les
jbe
or
mov
fwait
fwait
mov
sbb
in
and
pop
sub
clc
int3
and
dec
push
push
cmp
dec
push
jmp
or
mov
fdiv
inc
mov
test
andb
int
cwtl
jl
test
movsb
mov
insb
pop
rorl
push
in
mov
mov
loopne
pushf
pop
mov
sbb
push
sarl
sub
or
das
sub
jecxz
xor
cmp
jbe
mov
cmpb
mov
jbe
int3
push
fldl
sbb
add
add
movsb
jae
jnp
mov
lods
push
adc
fisubrs
je
add
cmc
add
add
sbb
add
mov
out
mov
adc
jl
enter
cmp
pop
cld
stos
es
testl
jae
je
and
imul
and
mov
cmpb
imul
pop
rcrl
sub
fbld
adc
sahf
cmpsb
mov
mov
outsl
hlt
loop
les
xlat
lret
in
cmp
into
mov
mov
loope
iret
pushf
mov
loope
pop
add
hlt
xor
mov
mov
or
andb
inc
aas
es
outsb
daa
cmp
and
jp
out
sub
jge
inc
cmp
fildl
mov
jo
xchg
out
pushf
adc
push
movsb
sub
ret
add
mov
fs
dec
mov
out
inc
jns
mov
sub
mov
and
add
fbstp
scas
adc
lahf
mov
and
mov
add
cmc
add
add
and
sub
lods
test
adc
mov
lret
dec
or
mov
xchg
shlb
cmp
mov
mov
jno
pop
out
pop
in
je
mov
into
xchg
dec
std
xorb
faddl
push
outsl
adc
ret
mov
adc
pop
dec
xor
cli
jmp
mov
mov
xchg
mov
out
and
addl
ss
stos
dec
mov
hlt
inc
mov
ret
sar
mov
fisubrl
leave
ror
test
mov
or
out
insl
cmp
or
and
push
add
test
sub
les
fwait
add
lds
pop
decl
into
fnclex
test
mov
jbe
and
and
mov
das
cmp
call
jle
add
add
mov
scas
sub
mov
cwtl
test
add
add
dec
stos
add
push
outsb
xchg
int3
stos
imul
sbb
ret
jbe
push
xor
cmpsb
es
jnp
mov
dec
cmc
inc
imulb
nop
pop
inc
push
xchg
icebp
add
subb
sahf
lock
imul
jle
data16
jmp
ss
movsb
arpl
das
xchg
inc
aas
cmp
iret
cmpb
jnp
lds
daa
js
in
fildll
jp
cmp
insl
fwait
scas
jb
or
lcall
xchg
cltd
stc
insb
dec
inc
fsubl
push
pop
xor
leave
fcmovnbe
adc
aad
inc
or
cmp
test
mov
pop
loop
sub
or
jmp
mov
lock
pop
add
ja
xchg
inc
les
not
sub
or
mov
into
cmpb
inc
jge
test
ret
fdivrs
cmp
xchg
lcall
add
push
into
push
cmp
sub
iret
lds
sahf
imul
add
ffree
fisubl
adc
xlat
call
or
mov
jb
sbb
pusha
popf
cld
xchg
dec
jns
push
push
pop
stos
inc
cli
mov
cmp
adc
add
cwtl
mov
ja
imul
movsb
xchg
in
jno
xor
enter
pop
cwtl
test
movsl
jno
cli
fcmovnbe
add
push
fstpt
ds
mov
leave
adc
add
add
and
pop
sub
mov
in
xchg
dec
dec
insl
movsb
jb
xchg
dec
xor
cmp
shll
test
pop
xor
push
add
push
pop
inc
loopne
cmp
cmp
push
dec
pop
sub
dec
pop
mov
push
icebp
pop
mov
js
push
jno
mov
cmp
notl
sbb
jae
fisubs
sbb
fisttps
mov
and
mov
add
and
mov
fisttps
jo
push
or
xchg
push
add
add
add
lret
xor
cmp
cwtl
test
jbe
or
mov
out
jae
cmp
iret
jnp
subb
sbb
out
push
add
ds
and
mov
popf
cmp
cltd
sar
mov
mov
dec
fcompl
lds
and
jecxz
dec
push
pop
rclb
jmp
mov
jg
cmpsb
push
cmp
jge
leave
out
mov
mov
dec
sub
scas
mov
sub
pop
fwait
inc
inc
fwait
jno
xor
shl
outsl
fsubrp
mov
cmp
push
std
ficoml
mov
fwait
mov
cmc
icebp
andb
sub
test
mov
call
sbb
xchg
mov
repnz
lret
mov
lahf
aad
cmpsl
mov
add
insb
sub
or
or
add
lahf
pop
fcmovb
fcmovnb
lahf
pop
bnd
mov
mov
add
add
add
aam
adc
and
fwait
stc
notb
jge
dec
std
push
mov
xchg
jge
in
cmp
or
popa
push
jo
iret
andl
ljmp
xor
mov
pop
mov
pop
imul
iret
sbb
imul
xlat
push
movsb
xchg
mov
insl
push
xchg
mov
xchg
adc
jmp
push
sbb
push
inc
scas
lods
inc
push
sti
mov
or
and
push
xor
dec
push
pop
inc
lahf
sbb
dec
sub
lods
mov
inc
ficoms
add
add
jbe
sbb
jge
mov
ljmp
mov
dec
add
jae
cmc
into
aas
and
popa
int
jp
test
notb
dec
jecxz
ss
sub
out
into
cmpsb
jecxz
add
add
add
idiv
jg
data16
aad
les
jge
add
cmc
add
add
xor
leave
pusha
pop
pop
leave
imul
add
mov
sbb
in
xchg
inc
sbb
pop
and
imul
ljmp
xchg
lcall
movsl
mov
mov
cmpb
mov
mov
push
in
sbb
mov
mov
adc
lea
insl
lret
lods
and
pop
lret
orl
add
sub
adc
ja
int3
dec
ja
push
ret
jnp
jmp
dec
sbbw
xchg
aad
sarb
add
push
mov
lock
adc
flds
repz
push
and
inc
push
lods
mov
lahf
dec
sbb
add
mull
scas
loopne
aaa
jne
ret
loop
adc
mov
fldenv
lods
xchg
lahf
mov
pop
sub
imul
add
add
pop
mov
movsb
inc
gs
outsb
sub
add
cmc
add
add
push
cmp
mov
test
movsl
mov
addl
andb
xor
fisttps
sbb
call
pop
adc
pop
call
adc
nop/reserved
loope
add
jno
ret
fsubp
sbb
jns
jp
sbb
and
push
rcll
test
sbb
xchg
adc
lods
cmp
mov
adc
dec
xor
sbb
subl
pop
or
push
stos
hlt
imul
stc
aad
fs
mov
xchg
dec
dec
add
push
sub
out
ss
jb
cmp
scas
xchg
jmp
mov
mov
rolb
jecxz
pusha
std
and
adcb
add
lret
pop
xchg
add
add
repnz
movsb
jle
mov
cmpsl
jp
outsb
add
cmc
add
add
xor
push
cwtl
repnz
aas
xor
mov
sti
call
add
mov
mov
cmpsl
js
push
dec
cmpsb
aas
imul
adc
divb
dec
push
hlt
ret
fld
pop
mov
and
ret
shlb
jecxz
addl
dec
push
add
fnsave
push
mov
push
popf
divb
cmc
popf
mov
shll
fsubl
inc
bound
cld
mov
dec
add
addr16
mov
hlt
inc
push
xchg
pop
mov
push
or
mov
ret
loopne
add
mulb
out
jmp
pop
push
hlt
jmp
pop
inc
rol
adc
cmc
es
mov
xchg
negl
xor
sbb
jb
test
xor
add
divb
sarl
sbb
add
jmp
sub
orl
cmc
add
add
hlt
lret
jmp
sti
mov
xlat
scas
xor
in
out
inc
push
sub
out
inc
mov
xchg
lcall
and
jb
int3
andb
mov
mov
push
cmp
push
inc
int3
add
mov
gs
pusha
test
push
jne
imul
es
add
jno
popa
jne
push
ja
repnz
jno
ret
in
cltd
movsb
fdivrl
mov
jg
cmp
test
dec
adc
clc
push
add
pushf
xchg
sti
xor
aas
jl
fwait
cmp
rolb
cli
lds
fwait
mov
repz
sbb
dec
pushf
and
or
jns
je
mov
push
gs
pop
shr
in
add
xlat
dec
xchg
jmp
nop
fdivrp
lods
lret
bound
mov
xabort
nop
jns
push
lret
mov
test
add
shll
fnstenv
pusha
xor
add
add
add
fidivs
jg
dec
pop
ja
push
popf
jge
imul
mov
fistpll
insl
mov
and
js
imul
mov
shrl
dec
and
add
fcomps
lock
xchg
and
mov
out
and
jnp
loopne
data16
test
mov
sub
in
fcmovnb
rcpps
xlat
mov
lods
cmpb
add
mov
or
or
repz
lcall
xchg
popf
dec
mov
or
daa
push
idivb
cmp
sti
fwait
out
and
sarl
in
scas
data16
pusha
lods
xchg
inc
dec
icebp
mov
cli
pusha
jb
xchg
int3
sbb
out
jnp
sub
movsl
imul
pop
xor
cs
push
dec
loope
jmp
in
leave
inc
in
shrb
sbb
add
cld
je
jbe
jmp
lea
xchg
mov
jno
add
add
add
jl
rorl
fcmovnu
addr16
fwait
sub
cwtl
rorl
cmpsl
push
stos
add
clc
ja
cs
and
and
xchg
sub
outsl
sbb
mov
jne
cmp
xchg
mov
jge
test
insb
jecxz
xor
add
icebp
adc
subl
ja
mov
adc
and
or
or
add
shl
popf
or
inc
jle
in
mov
mov
push
aas
aad
add
outsb
jp
enter
xchg
xlat
mov
inc
in
push
test
or
int3
mov
cmp
in
sub
pop
mov
popa
out
adc
add
xchg
fisubrs
dec
popa
mov
cmpsl
inc
addr16
adc
adc
cmp
fs
xchg
movsl
xchg
sub
out
cmpsl
insl
loope
xchg
clc
out
sti
ss
add
push
cltd
jmp
fcmovnbe
cld
xor
jno
dec
mov
cmc
add
add
aad
dec
jne
xchg
cld
xor
cmpsl
mov
jmp
gs
idivb
pop
mov
je
bound
fmuls
jge
jbe
add
mov
push
xchg
pop
outsb
mov
pop
inc
cmc
mov
out
test
adc
aam
mov
mov
sbb
fildl
lods
icebp
cli
sub
adc
pop
lret
mov
fcompl
mov
loop
adc
lea
rcr
cmp
push
in
or
ja
ds
jbe
lret
adc
daa
sub
ljmp
shrl
xchg
xor
loop
scas
mov
push
cli
int3
inc
xchg
mov
xor
dec
outsl
ret
push
or
aam
sbb
call
int
sbb
insb
rcll
hlt
xor
lret
mov
add
mov
mov
push
jg
pop
jne
inc
mov
add
cmc
add
add
or
jbe
leave
hlt
or
mov
fnstsw
outsl
mov
sub
add
and
out
jnp
fisttpl
mov
test
ja
into
dec
int
insb
xor
clc
sbb
push
inc
add
jl
stc
push
sub
shll
fidivs
xchg
push
pop
rclb
xchg
es
dec
out
xchg
pop
and
push
sar
insb
iret
fistl
add
mov
daa
jbe
mov
mov
out
subb
jbe
mov
lea
shl
lcall
xchg
sub
cli
cmp
rorl
mov
stos
aaa
std
adc
or
ss
mov
xchg
add
std
sbb
repz
fwait
movsl
repnz
sbb
cmc
in
add
ret
insl
and
push
sbb
pop
mov
pmaddwd
fidivs
add
mov
fucomip
addr16
lret
push
and
add
add
aas
cld
cld
shrl
fsubrl
fwait
adc
mov
rep
cmp
add
adc
cmp
test
mov
mov
xor
dec
xor
sub
sub
ljmp
xchg
inc
sub
int3
dec
pop
pushl
cmp
movsb
gs
sbb
mov
out
xor
lcall
mov
les
call
xchg
mov
sbb
mov
lods
xchg
cmp
andb
bound
adc
mul
push
repz
pushf
leave
test
push
lock
or
adcl
mov
insl
data16
xor
ret
xlat
mov
jge
and
in
xchg
sbb
stos
add
cmp
aaa
pop
jnp
shlb
xchg
mov
shr
sub
and
loop
mov
and
add
ret
mov
jno
xorl
add
dec
out
iret
jmp
cmpsb
addr16
sbbb
sbb
add
add
add
mov
add
jae
mov
pop
rorl
cmc
in
push
mov
sbb
xchg
mov
dec
sti
mov
dec
cld
sub
flds
decb
and
jno
sti
clc
aam
mov
mov
arpl
mov
rcr
xchg
xchg
mov
outsb
pop
cmp
cli
jg
adc
push
addr16
nop
gs
and
inc
xchg
js
loope
in
pushf
fstpl
movsb
inc
inc
dec
xchg
cmp
mov
aam
ds
out
mov
movsl
cmp
jmp
dec
stos
xor
mov
sbb
shr
dec
cmp
popf
es
mov
mov
bnd
and
mov
fistps
mov
mov
mov
and
out
pmaxsw
and
add
int3
das
push
jmp
out
scas
imul
int3
loop
add
cmpsb
push
jnp
std
cmpsb
pop
lods
jne
xchg
stc
push
popf
or
jbe
add
add
add
push
xchg
out
and
ds
add
andl
sub
mov
movsb
cltd
out
xor
lock
dec
jnp
sub
test
jo
data16
lods
in
fsubr
xchg
mov
mov
ret
mov
xchg
jge
cltd
testb
or
icebp
xchg
movsb
push
sbbl
fucomi
adc
mov
adc
out
incb
xor
pop
or
sub
mov
pop
fsubs
dec
jle
test
mov
lock
push
inc
aad
inc
jmp
push
pop
test
mov
push
cmc
add
and
inc
xor
inc
xchg
mov
out
scas
in
pop
test
mov
pop
push
call
icebp
in
sti
mov
inc
mov
xchg
popa
sub
mov
sub
adc
mov
add
neg
std
stc
idivl
sbb
add
cmc
add
add
scas
bswap
jnp
push
inc
sarl
ljmp
cmpsb
mov
pop
pushf
lahf
ds
imul
in
incb
ds
repnz
jmp
dec
push
ret
fisubs
push
dec
mov
addl
rolb
mov
dec
dec
cld
mov
stos
push
or
dec
stos
push
stos
or
ret
test
test
xor
push
shl
mov
inc
pop
pop
popf
push
jg
sub
inc
int3
mov
inc
or
mov
insb
aam
adc
daa
jne
pop
in
cmp
and
lods
and
sti
push
fsts
or
adc
lods
push
inc
and
int3
sub
mov
jbe
shr
lods
ficoml
sbb
aas
enter
or
clts
mov
jb
call
and
pop
gs
mov
push
mov
push
les
rcrl
and
fmuls
add
add
cs
mov
xor
cmc
add
add
mov
jecxz
inc
pavgw
dec
or
mov
popf
cli
fildll
or
in
cmp
cmp
cmpsl
push
into
xor
lret
xor
add
sbb
jp
mov
repnz
cli
or
in
or
and
jmp
add
mov
push
or
push
sbb
jg
inc
cld
add
in
rclb
sbb
push
dec
mov
ret
xor
loop
mov
inc
in
mov
sub
mov
push
adc
lret
imul
adc
mov
cld
pop
jae
add
and
adcl
sti
addr16
test
xor
add
out
icebp
xchg
pop
jl
into
xchg
cmp
sbb
push
pop
sti
xchg
ret
xor
mov
dec
pop
mov
int
out
fildl
add
lcall
out
dec
jg
aad
repnz
and
js
add
add
add
rclb
repnz
pop
int3
xor
xor
fwait
mov
ja
mov
adc
xchg
sbb
fsubr
push
pushf
outsl
jno
sarb
pop
adc
push
push
mov
pop
hlt
aam
rclb
push
loop
fdivl
jg
nop
orb
ja
jmp
mov
out
fists
push
out
lret
cmp
shll
dec
jns
mov
pusha
and
scas
in
into
fistps
and
fmull
dec
or
and
adc
xchg
mov
push
loope
ljmp
shll
mov
mov
inc
inc
pop
fsubr
cmp
out
add
mov
xor
fisubs
push
jle
clc
add
rcll
in
xchg
in
lahf
shll
and
dec
ret
addb
xchg
and
addl
add
sub
ja
mov
paddq
jns
add
add
add
les
mov
fisubrs
ja
outsb
cltd
movsl
insb
mov
adc
jae
pop
sub
cmp
or
and
jl
pop
inc
jge
and
pop
jnp
bound
loope
js
cmp
inc
xchg
jg
fidivs
push
xor
jnp
xchg
movsl
ljmp
mov
jo
scas
dec
ret
pop
push
js
lock
cld
std
push
xor
sbb
bnd
movsl
inc
mov
push
aaa
push
add
shll
mov
jmp
sub
add
shll
in
iret
pop
dec
bound
jp
push
lret
sbb
jg
in
fimull
cmp
or
cwtl
add
fisubl
adc
js
scas
cmpb
popf
adc
aas
jp
out
lea
xor
int
mov
jnp
jge
xchg
into
inc
sub
jp
add
add
add
jecxz
rolb
xor
xor
lret
imul
xchg
or
aas
xchg
stc
jge
xor
out
out
mov
xchg
inc
clc
xor
lahf
dec
jb
test
jp
sub
int3
ret
into
or
mov
popf
fisttpl
jg
dec
or
sbb
outsl
or
pop
movsb
cmp
cli
or
xor
dec
mov
or
shll
dec
adc
and
test
mov
sbb
sbb
mov
imul
sti
scas
mov
jns
ds
lcall
mov
jnp
inc
data16
xchg
sbb
loop
sub
lret
scas
dec
in
adc
inc
daa
mov
and
daa
fildl
push
add
or
loope
loope
sbb
sbb
insb
inc
mov
aam
add
xchg
push
mov
cli
xchg
jle
mov
mov
loopne
xchg
int
add
cmc
add
add
bound
scas
out
mov
arpl
sub
lea
push
mov
leave
mov
adc
aad
mov
mov
leave
push
cmp
sbb
mov
xchg
or
xorl
mov
addb
cmc
stc
lret
jle
jb
lret
push
pusha
push
add
fmull
lret
pop
popl
sbb
mov
sbbl
stos
outsb
and
aas
sub
aas
pmullw
sbb
aas
stc
xor
loope
xor
dec
aam
dec
fcmovnbe
repnz
enter
xor
dec
or
push
pusha
cmp
push
rclb
hlt
and
insl
cli
sbb
std
add
inc
fdivl
andb
pop
mov
cltd
xchg
test
inc
gs
scas
lahf
mov
sbb
nop
xchg
add
inc
aaa
dec
fwait
jnp
aad
gs
into
add
movsl
sti
ret
add
add
add
fisubl
hlt
lds
shrl
push
dec
je
test
shl
ret
repz
and
inc
in
xor
ret
rclb
test
rolb
pop
inc
dec
add
xchg
test
adc
sbb
add
adc
push
push
stc
lcall
call
ja
inc
push
insb
in
adc
loop
sbb
lods
push
xchg
ss
mov
pushf
xchg
test
xchg
clts
ss
lods
aas
pop
pop
or
xor
leave
cmp
lea
stos
xchg
insl
dec
mov
inc
add
rcll
cli
xchg
cmp
pop
add
icebp
inc
pop
or
or
mov
push
mov
jg
mov
stc
leave
mov
cmpsb
sub
fbstp
ja
inc
sub
add
std
mov
enter
js
jge
add
add
add
cmc
cwtl
jns
inc
lret
adc
or
cmpsb
mov
cmc
loope
dec
and
push
sub
loopne
dec
adc
dec
stos
stc
scas
push
les
mov
xor
out
int
sbb
in
incb
sbb
leave
jl
fdivs
int3
inc
stos
dec
mov
insl
lods
scas
push
sbb
xor
add
clc
imul
jmp
icebp
jb
out
dec
lea
mov
inc
ljmp
lods
icebp
popa
or
add
cmpsb
add
enter
int
test
push
fdivrp
xchg
stc
icebp
fildll
xor
push
cmpb
mov
mov
stos
jle
lods
pop
sahf
sbb
imulb
ds
pop
or
cmp
int
rcrl
and
xchg
cmp
xor
jle
inc
sbb
add
add
fstl
out
aas
sub
add
cmc
add
add
lods
daa
jmp
hlt
ficompl
sbb
add
shlw
cmp
arpl
mov
mov
movsl
and
and
pop
dec
movsl
lock
push
fisubl
xor
enter
jo
sarb
popf
fwait
mov
or
inc
fstpt
mov
arpl
sbb
shlb
lods
mov
mov
push
and
xchg
jl
push
dec
add
pushf
sub
mov
pop
leave
inc
add
mov
test
icebp
sbb
cwtl
sub
faddl
popa
and
test
jno
or
add
cmp
pop
sub
jl
std
inc
xchg
mov
add
negl
dec
add
cmp
add
mov
pop
dec
pop
add
loope
loope
das
sub
ficomps
mov
and
aas
cwtl
sub
mov
lods
fistpll
xchg
add
bound
in
pop
test
pop
mov
add
add
add
adc
bound
pop
int
sub
push
xchg
test
xchg
mov
inc
dec
and
das
xchg
cmp
stc
sahf
and
js
icebp
loope
mov
mov
add
dec
inc
and
int
lds
pusha
cmp
int
xor
lret
out
in
test
das
enter
sub
adc
sahf
jmp
mov
in
pop
push
pop
cld
out
jl
add
pop
into
and
push
mov
add
pop
xor
daa
mov
push
sbb
sbb
je
cmp
call
xor
test
rolb
push
dec
ret
dec
hlt
loope
sets
add
xchg
movsl
ficoms
mov
out
cmp
clc
fwait
pop
dec
xor
push
movsl
sub
sub
gs
int3
sbb
add
jns
divl
bound
adc
xchg
addb
cmc
add
add
xchg
adc
daa
pop
sub
out
out
lods
movsl
push
sahf
popf
fcmovnb
lcall
sbb
adc
and
in
jo
or
adc
inc
jbe
pop
fucomp
mov
out
add
fadd
fistpll
and
cmp
xchg
dec
test
fidivrl
addr16
icebp
mov
pop
jmp
nop
in
js
pusha
sub
mov
sbb
jp
aas
adc
push
add
mov
cmp
sub
dec
xchg
xlat
jae
mov
xchg
mov
loopne
and
mov
ret
jge
jp,pn
mov
orl
int
adcl
sub
pop
xchg
in
lahf
fs
mov
xlat
mov
sahf
jb
sbb
inc
pop
xchg
aaa
imull
mov
pop
inc
add
add
fisubs
mov
push
mov
xchg
pop
mov
add
cmp
ret
or
dec
outsb
inc
notl
sar
outsl
adc
pop
stc
bound
movsl
sbb
push
jl
adc
mov
js
xchg
iret
xchg
sbb
dec
mov
add
lods
xor
fptan
leave
gs
cmp
movsl
or
bound
jle
int
dec
jg
sbb
orb
xchg
movsb
adc
arpl
pushf
xchg
or
dec
mov
stc
push
xchg
mov
je
lcall
xor
rcll
mov
pusha
lods
sbbb
insb
mov
pop
cmpsb
bound
jne
cltd
repz
ljmp
popf
pop
add
fnsave
lahf
mov
icebp
test
pusha
in
mov
test
cmpl
push
int3
fsubr
lds
sub
mov
lahf
mov
mov
xchg
xchg
pop
mov
scas
sti
nop
add
add
shlb
mov
int
test
add
add
add
fmull
mov
sahf
mov
and
cld
in
cmp
push
sub
push
jle
push
lahf
sub
lcall
clc
jecxz
adc
and
mul
stc
jp
push
dec
imul
negb
fldenv
inc
div
sbb
sub
jmp
pop
in
hlt
int
mov
mov
sbb
rol
outsl
pop
fs
sahf
pushf
ja
or
mov
aaa
cld
es
cli
aas
jae
jecxz
pop
xchg
sarb
push
mov
std
push
push
scas
popf
xchg
cmp
popa
lret
outsl
test
lds
lds
scas
pop
aas
or
pop
xchg
addl
pushl
jo
fstpl
or
ret
clc
repz
xor
int
mov
icebp
mov
fcomip
aas
and
push
or
data16
aad
movsb
aaa
lock
or
inc
add
add
testl
mov
cmc
add
add
test
add
mov
sub
fbld
cmpsb
fldenv
mov
test
xchg
bound
xchg
pushf
fisttps
pusha
outsb
inc
bound
enter
aas
or
dec
jmp
mov
push
pusha
xor
aas
xchg
lahf
test
jle
idivl
scas
jae
sub
imul
dec
lahf
ljmp
jnp
outsb
and
jnp
xor
sbb
adc
cmpsl
std
xchg
xor
mov
addb
arpl
push
adc
loop
aaa
int3
out
xchg
sbb
and
sub
out
pop
ds
hlt
xor
cmp
addr16
clc
clc
lds
xchg
adc
mov
cmp
cmp
jae
mov
mov
xchg
lods
test
test
leave
cmp
hlt
lret
mov
enter
add
xor
jo
ja
std
stos
lods
and
fldl
test
add
add
add
cmpsb
cmp
lods
jb
sbb
loop
cmp
int3
in
sbb
lea
sti
mov
add
lods
loope
aaa
inc
jo
dec
jmp
orb
test
and
pusha
or
jl
cmc
inc
mov
sbbl
push
xor
lds
xlat
mov
jmp
mulb
add
sub
imul
pop
push
lds
test
jbe
in
pop
jmp
in
lock
out
int3
cld
mov
sub
sahf
jae
add
dec
sub
popf
divl
dec
adc
hlt
lmsw
jle
cmpsl
inc
sbb
jne
or
andl
enter
sub
or
cmp
repnz
sbb
xchg
mov
xchg
outsl
aam
jns
insl
rcr
loop
sbb
gs
dec
sub
add
add
cmpsb
arpl
je
popf
aaa
insl
pop
test
add
add
add
adc
adc
lods
or
jns
mov
cmovp
sub
xchg
dec
push
xor
sub
jae
jno
push
adcb
sub
test
sbb
movsl
mov
xor
dec
add
cmp
stos
js
adc
jmp
jle
int
rol
xchg
cmp
xchg
rcrb
fs
repnz
sbb
setle
sbb
rcr
pop
fs
or
mov
sub
into
decb
jg
cmpsl
bound
int3
dec
pop
lods
cltd
out
jle
in
in
mov
mov
lahf
out
popa
flds
mov
lcall
sti
jne
aas
cmp
test
lret
daa
adc
std
and
lcall
pop
negl
outsb
cs
add
add
cmp
cli
mov
or
push
xchg
add
add
add
or
mov
shl
adc
fistpl
sub
or
mov
pop
pop
fs
push
mov
call
inc
aad
test
into
je
mov
popa
add
rorb
pop
add
jo
or
and
mov
push
sbb
mov
dec
or
pmullw
mov
enter
mov
cmpsl
sbb
pop
pop
xchg
adc
aas
pop
out
sbb
inc
gs
scas
out
sbb
xor
out
mov
jno
cmc
jae
filds
incb
dec
mov
imul
inc
icebp
sub
push
pop
jmp
je
xlat
call
jae
sbb
in
add
aam
sbb
adc
aam
fdivrl
pusha
leave
movsb
inc
addl
hlt
cwtl
lods
sub
add
sub
sub
and
imul
and
std
test
ljmp
lds
jnp
xchg
add
add
add
mov
in
adc
js
jnp
or
xchg
cmp
mov
or
xor
out
mov
mov
lahf
or
push
lret
fcoml
xchg
shll
notb
pushf
aas
jg
xor
mov
std
out
div
insl
in
test
add
lret
add
je
outsl
xor
stos
xchg
dec
mov
pop
idivb
pop
cmp
rcrb
lock
sub
stc
mov
mov
ficoms
loopne
arpl
xchg
ss
add
push
xchg
xchg
lret
push
stos
hlt
notl
jns
jnp
jl
add
pop
xor
dec
pop
out
xchg
cs
sub
mov
scas
mov
nop
rclb
out
add
add
xchg
xchg
jns
incl
adc
mov
add
add
add
xor
popa
clc
stos
js
inc
mov
xor
jle,pn
jbe
dec
mov
mov
pushf
or
xchg
push
shll
mov
ret
and
jae
mov
fucomip
pushf
ss
mov
pop
lods
pop
mov
mov
push
sub
jg
mov
mov
lret
dec
xor
cmp
daa
inc
pop
xchg
ljmp
push
push
mov
std
testl
mov
rcll
outsl
sub
jae
ret
jge
stos
imul
lret
inc
outsb
mov
call
mov
jecxz
std
cwtl
mov
loop
out
movsb
in
jno
ljmp
dec
or
push
loope
mov
jo
int
inc
sub
add
sub
shrl
adc
xor
mov
cli
pop
ret
xchg
insl
nop
fstps
mov
cld
push
add
add
lcall
sbb
mov
add
add
add
mov
cmp
adc
dec
push
sti
fcomps
push
rcll
hlt
mov
push
iret
jmp
popa
inc
iret
sub
and
cmpl
retw
out
add
sub
adc
cmpsb
stos
loope
adc
jecxz
pop
adc
cltd
testb
pop
pushf
push
sub
andb
xlat
add
in
insl
cwtl
jle
pop
je
into
insb
xor
cwtl
mov
or
sub
loope
dec
fwait
push
dec
icebp
arpl
or
lret
sbb
dec
pop
pop
pop
dec
xchg
inc
mov
ds
out
mov
mov
rolb
adc
xor
clc
push
ljmp
and
mov
xchg
jmp
adc
lods
xor
test
xchg
mov
mov
sti
sbb
sbb
push
mov
cli
shr
mov
add
add
mov
idiv
fst
inc
sahf
pop
xchg
jb
sub
add
inc
push
pop
cmp
fs
enter
sbb
inc
pusha
add
adc
pop
lea
stos
fwait
jns
sub
add
ret
rorl
cmp
pop
imul
into
cld
inc
and
lds
xchg
add
xchg
sub
sub
add
call
daa
cmp
loope
lods
add
lret
sarb
lea
cltd
cs
insb
subl
loopne
scas
mov
test
mov
mov
pop
cli
mov
gs
insl
jle
jmp
loope
inc
int
inc
mov
jns
or
insl
dec
cli
int3
add
das
in
stos
cli
ficoms
inc
xor
cltd
adc
aam
je
cmp
mov
stc
adc
sub
shlb
cmp
lea
lods
imul
or
ftst
inc
push
repnz
push
cmpsl
mov
cwtl
imul
add
xchg
call
and
cmpsb
js
pop
sbb
add
add
mov
fistpll
hlt
jb
repnz
js
and
xchg
fcos
iret
stos
std
imul
loopne
adcl
jecxz
mov
arpl
repz
push
jg
out
lcall
idiv
sbb
lea
popl
lea
ret
cmp
pushf
pop
dec
cmp
bound
rol
lods
lcall
pop
jmp
int3
or
push
jb
xchg
mov
lods
cs
sti
and
sub
pop
xor
xchg
testb
dec
pop
std
mov
jge
icebp
mov
pushf
shl
mov
lods
mov
ret
shll
mov
sbb
out
add
jmp
mov
icebp
and
movsb
add
cmc
pop
jg
repz
push
xchg
frstor
into
adc
jp
xchg
rolb
mov
add
mov
jge
std
sti
iret
and
repnz
add
cmc
add
add
xchg
cli
scas
jmp
cmpsl
pop
arpl
insb
mov
adc
cmpb
das
sub
adc
in
push
add
decl
xchg
xor
adc
out
sub
fnclex
pusha
push
movsb
in
push
dec
out
test
out
daa
pop
cmpl
test
sub
insl
adc
test
in
in
jp
loopne
push
dec
outsl
push
mov
mov
jg
arpl
arpl
std
test
and
insl
lret
lcall
test
lea
scas
aas
lcall
push
cmp
push
adc
test
aad
sub
pop
cmp
sub
add
cli
sahf
sbb
pop
lret
mov
pushf
jbe
fcomi
jb
add
arpl
test
sub
sbb
mov
add
outsb
dec
push
repz
rorb
add
add
outsl
xchg
inc
lahf
sti
hlt
out
cmp
loop
push
outsb
cwtl
pop
pop
lea
add
add
add
push
decl
mov
pop
scas
ja
movsl
fisubrl
addw
pop
mov
mov
pop
mov
mov
aam
dec
and
test
jge
outsl
fcoms
xchg
xchg
xchg
out
jno
mov
lods
test
mov
dec
dec
cltd
cli
lea
jae
sbb
popf
in
mov
dec
pop
fdivr
test
jmp
and
es
lcall
pop
and
xchg
xchg
pop
js
popf
mov
pop
xor
movsb
mov
lods
add
mov
rcrb
les
loop
pop
jae
sub
loop,pn
cmc
fistl
xor
rcll
or
adc
rcl
add
push
inc
idiv
mov
orl
shlb
inc
aas
add
cmpsl
pusha
dec
fnstenv
add
test
pop
movsb
or
push
popf
js
add
add
mov
into
cs
mov
add
add
add
movsb
cmpsl
jnp
mov
fstps
pop
xchg
test
sub
lock
xchg
mov
dec
xchg
shll
adc
mov
mov
pop
cmp
sbb
and
bnd
lds
add
scas
xor
dec
adc
push
mov
xchg
mov
cwtl
hlt
jge
mov
mov
jge
push
arpl
inc
imul
or
cmc
inc
dec
xchg
jle
jge
stos
xor
mov
dec
push
or
or
ja
sub
mov
xchg
cmpsl
or
jg
enter
jns
inc
imul
push
hlt
or
adc
flds
mov
rcll
lahf
push
pop
ss
dec
psrld
sub
xor
jp
xchg
cmc
cmp
push
jo
mov
addr16
movsl
fcom
sub
data16
add
add
pop
test
ljmp
jp
cmp
pop
sbb
add
cmc
add
add
jp
in
mov
std
fwait
mov
outsl
cmp
imul
lods
add
or
out
mov
leave
push
cli
mov
xchg
and
mov
cmp
push
cwtl
imul
mov
xor
test
aaa
sub
fisttpl
adc
shrb
xlat
xchg
lds
out
lds
mov
or
iret
ds
pop
sbb
pop
hlt
lahf
enter
cmpsb
mov
bound
ljmp
push
jbe
and
stos
mov
adc
mov
test
jbe
cmpsb
pop
fstpl
out
or
jmp
pop
adc
arpl
cwtl
mulb
xchg
mov
daa
jb
xchg
xchg
jp
adc
js
pop
sbb
xor
cmp
mov
fsub
xchg
stos
cld
jl
int3
stos
lods
adc
add
add
arpl
jnp
sbb
xchg
sub
call
popl
add
add
add
dec
sub
cmp
and
fwait
xor
ss
popf
xor
lods
mov
pop
out
clc
adc
mov
hlt
scas
xlat
sub
jp
adc
ja
mov
cmpsl
out
out
add
out
pop
repz
int
test
jmp
insb
jns
pop
adc
rorl
mov
xchg
pop
jl
ja
inc
jnp
fpatan
adc
mov
and
inc
out
push
or
lea
mov
sti
pop
adc
add
pop
add
mov
pop
sarl
mov
aam
push
push
sub
push
push
movsb
jb
cmpsl
pop
sub
ficoms
jbe
dec
sti
xchg
cli
sub
into
mov
sbb
ret
into
mov
jbe
pusha
loop
clc
sub
jp
push
sub
out
cli
mov
cmp
add
aas
or
mov
add
add
fistl
add
sahf
pop
ljmp
js
pop
xchg
in
mov
sbb
lret
sbb
jg
movsb
and
xchg
les
xchg
imul
scas
loopne
jge
cld
in
cli
test
ss
cmp
mov
movsl
cmp
mov
mov
test
lds
pop
stos
pop
cmp
out
and
sub
movsl
mov
aad
imul
pop
aas
inc
jecxz
dec
sub
cmpsb
mov
cwtl
pusha
cmp
cs
je
pushf
clc
sbb
push
fcmovbe
add
jge
xor
xlat
xor
lret
or
push
fsubrs
dec
sub
adc
imul
loop
in
out
movsb
add
das
lea
pop
scas
lods
or
adc
dec
std
out
cmp
xchg
lahf
idiv
or
jl
mov
scas
movsl
cmpsl
hlt
pop
mov
add
add
push
outsb
fdivrp
sub
lcall
add
cmc
add
add
ljmp
push
es
shl
int
cmc
dec
subb
mov
pop
dec
fisubrs
imul
mov
sub
mov
icebp
cwtl
aad
mov
pop
inc
aad
mov
mov
shrb
or
sbb
push
inc
divl
repz
shl
dec
pop
cmp
jne
push
xor
shrb
push
add
mov
mov
or
data16
movsl
xor
push
or
mov
mov
int3
clc
pop
daa
push
dec
xor
aaa
ficomps
addl
mov
jo
pop
push
mov
testb
pop
out
xor
aam
xchg
and
rclb
jae
sub
pop
test
aaa
loopne
dec
mov
test
xchg
mov
insb
jne
sbbl
mov
repnz
divl
cs
mov
inc
push
cmp
and
add
add
mov
in
pusha
mov
add
cmc
add
add
dec
into
inc
lahf
aam
mov
sti
fists
insl
pop
repnz
mov
cli
mov
enter
inc
pop
jp
outsb
jle
scas
or
xor
inc
mov
in
jp
xlat
mov
stc
clc
or
push
inc
scas
repnz
add
fistpll
mov
dec
loopne
imul
je
inc
loope
xchg
movsb
faddl
mov
xlat
stos
imul
or
aaa
cli
cltd
xchg
or
les
cmpsb
add
and
lods
mov
popa
sub
or
mov
xor
xchg
fidivrl
pop
adc
mov
enter
cmc
aam
inc
lcall
iret
adc
mov
in
jnp
jnp
test
les
test
mov
dec
push
int
fstp
iret
push
lock
jmp
inc
mov
add
add
sbb
fldl
jnp
loop
movsl
mov
fnstcw
jle
fnsave
push
popa
and
xchg
incl
xor
and
incl
aas
jle
mov
add
sbb
bound
sbb
das
xchg
jmp
jecxz
push
and
iret
xchg
xor
add
cld
mov
fistl
call
jns
div
mov
inc
lods
ds
les
xchg
xor
adc
cmc
aas
into
ficomps
clc
outsb
mov
jno
jp
mov
in
enter
negl
xchg
in
popf
pusha
out
add
in
dec
inc
aam
pop
cltd
cli
cmc
xchg
adc
negb
test
or
dec
popf
inc
repz
shl
mov
mov
jl
mov
fdivs
adc
ficoms
lahf
and
scas
std
sub
pop
mov
scas
xchg
add
cmc
add
add
fdivs
xchg
xor
leave
leave
stc
icebp
sub
add
negb
mov
int
mov
insb
ja
xor
mov
jecxz
xor
push
push
push
mov
xor
cmp
and
add
cmp
jmp
mov
sub
xor
mov
jbe
rclb
add
cmpsl
mov
xchg
arpl
fmuls
cmp
aas
adc
or
pop
mov
scas
movl
and
testb
mov
sbb
xor
push
daa
rolb
gs
sub
leave
jl
xor
popf
mov
call
push
popf
lret
test
dec
sbb
add
push
js,pt
enter
push
xor
push
xchg
add
movsl
add
add
mov
push
cmpsb
jnp
movsb
xchg
add
cmc
add
add
sub
xchg
mov
cmp
pop
neg
mov
push
push
fwait
mov
add
or
imul
dec
lock
fbld
test
adc
out
jle
loop
mov
pushf
and
shlb
inc
dec
xchg
sbb
lret
into
adc
mov
lock
sahf
mov
enter
sti
fisttps
repnz
dec
outsl
and
sub
and
test
rcr
add
movsb
cmp
add
push
leave
jl
push
xor
dec
mov
jb
xor
xchg
out
addr16
rorl
sahf
std
or
clc
mov
jno
ds
add
mov
and
adc
jle
pushl
mulw
inc
dec
sahf
adc
mov
add
add
les
mov
das
lods
lock
cltd
xchg
add
cmc
add
add
movsl
aas
push
mov
divl
loope
pusha
in
out
mov
pop
je
out
add
movsb
or
sub
cmc
xchg
call
sub
loop
lods
addr16
ds
cmpb
mov
ret
inc
or
cs
loop
add
xchg
mull
ja
xor
adc
add
mov
push
es
in
xor
subb
mov
dec
je
addl
dec
ds
lcall
mov
mov
xor
fldl
push
out
or
sub
inc
call
xchg
jmp
and
int3
add
add
fstps
sahf
ja
xchg
cmc
popa
pop
les
cltd
enter
or
or
out
mov
push
xor
xchg
xchg
aaa
xchg
sub
add
add
ljmp
loop
dec
pop
and
add
cmc
add
add
insb
sub
add
dec
mov
add
mov
das
sub
clc
jbe
fsave
inc
fwait
xor
jle
fldenv
pop
repnz
js
mov
fisubl
pop
stos
sub
mov
inc
pop
lret
es
cmp
test
mov
sbb
ds
cld
add
and
repnz
inc
cmp
fsubr
loopne
pop
in
out
dec
bound
aam
not
daa
out
dec
xor
mov
outsl
or
sbb
insl
jl
dec
or
jl
aam
sar
sub
dec
jmp
insl
jecxz
sub
mov
fsubrp
xor
add
push
add
ret
popa
and
fcompl
cmpb
pop
pop
jp
xchg
push
or
lret
sub
movsl
add
aaa
roll
dec
repnz
mov
xor
aad
pop
sub
xchg
add
aaa
shlb
cmc
div
rcl
inc
pop
push
dec
mov
add
add
add
into
nop
fdivrs
ds
dec
ljmp
cmc
popa
loope,pn
inc
scas
xchg
mov
rolb
mov
xchg
pop
mov
out
or
push
fistps
xchg
les
imul
add
jmp
sbb
cmpsb
movsb
mov
add
call
iret
or
ljmp
push
cmc
imul
jge
dec
negl
sub
mov
ja
mov
hlt
jl
sti
pop
insb
or
jnp
inc
xchg
cmpsl
cltd
lods
or
push
adc
shl
pop
stos
mov
ds
imul
ja
pop
loope
fmuls
fidivrl
sbb
andb
cmp
jae
add
xchg
data16
loop
jl
inc
pop
sbb
xor
jae
mov
out
and
test
mov
mov
push
cli
repz
lcall
outsl
cmp
jnp
add
pop
push
nop
push
sahf
rcr
pop
test
jne
cltd
add
cmc
add
add
xor
adc
movsl
xor
loop
cmpsb
lods
lahf
mov
das
jmp
loope
sbb
movsl
adc
dec
out
cmpsb
mov
pop
xchg
push
mov
jo
mov
add
outsb
cmp
dec
jne
mov
sub
inc
add
jo
outsl
je
pop
enter
out
hlt
arpl
push
pop
loope
into
xor
adc
hlt
and
xor
adc
out
push
stos
pop
and
int3
mov
pop
mov
lret
pop
imul
push
fnclex
pop
adc
jae
adc
inc
daa
movsb
pop
xor
out
fidivl
inc
pop
cld
cwtl
xchg
sbb
jmp
push
push
cs
adc
jbe
mov
popf
int3
clc
sbb
pop
mov
xchg
push
sbb
loop
jo
add
add
arpl
cmpsb
jcxz
jne
push
inc
mov
jmp
add
add
add
mov
push
in
xor
pop
mov
mov
enter
ljmp
rcll
test
or
stc
orb
cmp
pushf
pop
inc
jle
sbb
aad
loop
push
mov
sahf
loope
pop
lret
fmuls
ret
in
out
add
jge
pusha
fstpl
outsl
push
mov
mov
repnz
fwait
sbb
push
push
adc
cmp
dec
in
aam
sahf
jle
lods
push
dec
dec
dec
xchg
mov
xchg
aad
jnp
out
mov
daa
scas
pushf
pop
test
mov
mov
std
lret
pop
adc
dec
and
jne
sti
adc
add
dec
out
cmp
adc
or
enter
jmp
lods
imul
mov
xchg
jmp
mov
and
cmpsl
movsl
add
and
push
ljmp
add
add
clc
jnp
jg
in
cli
cwtl
inc
mov
mov
push
cld
bound
add
in
dec
cmovae
cli
sub
test
test
ret
mov
fstps
imul
add
jg
xchg
mov
push
js
mov
in
dec
jg
push
cmpb
int3
test
loopne
clc
and
pop
scas
andl
mov
dec
test
int3
sub
xlat
sub
lahf
mov
std
jp
or
and
lret
adc
icebp
cwtl
dec
sub
or
int3
cmp
fstpl
xchg
rcrb
loope
stos
mov
std
jno
cmpb
cli
mov
movsl
sbb
in
adcb
adc
or
pop
sub
arpl
loopne
mov
int3
dec
dec
sbb
adc
fldl2t
push
int3
xor
mov
repnz
add
lods
faddl
fbstp
cld
inc
push
cltd
das
iret
shll
pushf
add
cmc
add
add
sbb
das
roll
in
pop
cmpsb
sbb
cli
cmp
fmuls
je
sub
mov
std
test
movsl
sub
adcb
xchg
lods
push
pop
inc
shll
movd
dec
insb
jl
std
sahf
popa
fsubr
insb
aad
shll
push
dec
addr16
push
testl
lcall
push
or
inc
inc
js
add
sbb
mov
push
pop
insl
clc
jns
dec
lock
clc
pop
jp
xchg
mov
sub
loopne
cmp
addl
mov
sbb
orb
movsl
shlb
pop
jge
and
push
xor
mov
sbb
push
pop
mov
jb
fildl
xchg
dec
outsl
ja
cmp
sbb
icebp
xchg
in
cs
push
add
in
add
add
jl
sar
std
jle
loop
fdivs
pop
dec
popf
add
cmc
add
add
xor
pop
lds
mov
xchg
add
mov
repz
in
inc
jo
jne
pusha
pop
mov
pop
xorb
rep
xor
btc
and
daa
jmp
inc
clc
sbb
inc
push
sub
mov
inc
mov
mov
cmc
shl
into
or
scas
jb
add
aaa
jb
cmpb
jp
les
dec
shll
fsubr
xchg
sbb
sbbl
push
pop
cmp
xor
xchg
cmc
mov
pop
pushf
mull
cltd
xchg
mov
add
push
test
inc
inc
and
insl
mov
inc
dec
clc
lods
lret
mov
or
cmp
aam
xchg
dec
mov
enter
negb
sbbb
or
les
add
cmp
cmp
pop
arpl
add
cmc
add
add
enter
cmp
int3
popw
mov
movsl
push
adc
mov
jnp
inc
dec
and
sbb
mov
mov
dec
mov
xor
sti
mov
mov
push
mov
into
dec
or
dec
stc
stos
mov
test
mov
test
sbb
lods
xchg
out
loope
std
jg
ss
pop
sub
inc
sbb
icebp
leave
ret
xor
pop
jmp
lock
pusha
gs
inc
lret
or
insb
push
test
stc
test
dec
and
inc
mov
xor
inc
xchg
aaa
xchg
push
stos
aas
sub
leave
fs
jp
int3
ljmp
xor
iret
cmpsl
pop
mov
bound
xchg
mov
repnz
mov
scas
and
inc
filds
mov
jmp
sub
dec
cmp
add
fwait
and
popa
mov
aad
aam
or
ss
add
cmc
add
add
sub
cli
inc
mov
dec
into
mov
push
sti
xchg
mov
mov
nop
daa
or
push
aas
mov
jp
inc
adc
mov
xor
add
stos
arpl
pusha
insb
nop
push
jp
or
jmp
jnp
mov
jle
lods
arpl
sub
cmpsb
sub
iret
repz
fmulp
xor
inc
dec
dec
mov
je
popf
out
rclb
pop
xchg
push
mov
rolb
and
jno
shl
jge
enter
fistps
adc
mov
shlb
decl
rcll
clc
adc
rorl
mov
ljmp
lret
lret
rcr
and
jg
mov
ficoms
xlat
and
popa
lods
fwait
cmp
outsb
testl
add
push
and
xlat
aas
jle
ds
sub
add
xorb
xchg
dec
aaa
and
fwait
imul
inc
or
inc
filds
sub
in
scas
enter
imul
cmp
or
hlt
gs
mov
pop
out
push
insb
dec
cwtl
sahf
jne
call
mov
jp
jae
fwait
xor
cwtl
push
push
popa
xchg
dec
push
mov
fldcw
push
cli
xchg
mov
enter
js
jg
ss
mov
xor
sub
dec
iret
mov
jmp
jne
add
mov
sub
mov
jae
test
or
mov
dec
ret
inc
inc
cmpsb
jae
xlat
pop
outsl
add
test
push
out
push
sbb
arpl
sbb
and
jo
sbb
inc
push
xchg
jae
adc
stos
fdivrs
push
cmp
add
add
mov
mov
jmp
ljmp
add
cmc
add
add
inc
fistps
sub
lock
jmp
adc
mov
in
push
int3
repz
sbb
loopne
fwait
jle
sar
sbb
pop
fs
clc
mov
jle
or
push
add
jno
lcall
mov
inc
inc
pop
hlt
sbb
mov
fsubp
sub
jbe
jle
lahf
inc
jmp
call
pop
cmpb
mov
in
ficoml
mov
cmpsl
es
aam
aam
addr16
popa
mov
mov
cmp
idiv
lock
adc
jl
int
sbb
aam
and
shlb
mov
in
push
out
jb
jmp
adc
pop
ss
pop
push
inc
push
push
shrb
xchg
and
adc
mov
adc
xchg
shl
int3
aam
scas
add
add
lret
sbbl
mov
lret
aas
xor
add
add
popa
or
mov
xchg
cmp
cwtl
sahf
pop
lahf
or
repz
int3
cs
dec
mov
xchg
out
shlb
loop
arpl
pop
addr16
add
cmp
dec
xchg
jo
icebp
stos
mov
push
and
xchg
test
sbb
int
add
lods
es
dec
aam
add
push
dec
add
jnp
xchg
stc
or
testb
stos
and
xchg
jno
add
and
mov
scas
mov
pop
pop
gs
mov
push
pop
or
mov
mov
dec
sbb
mov
cwtl
push
xchg
mov
mov
ret
cmc
adc
test
data16
jg
add
fnstcw
xlat
push
mov
aaa
or
shr
popa
and
sub
mov
stos
lret
push
addr16
push
mov
add
imul
and
or
stos
cld
cmp
mov
add
shrb
clc
data16
adc
scas
push
leave
jne
sub
cmp
in
inc
test
std
outsl
in
adc
dec
call
mov
sub
aas
ret
addr16
inc
adc
insl
jae
int3
xor
nop
insb
into
mov
jmp
lret
mov
arpl
pop
push
inc
jge
pop
mov
jns
jnp
out
fisubrl
cli
pop
ud1
mov
pop
mov
adc
mov
xchg
add
pop
pop
xchg
inc
in
or
cld
dec
icebp
data16
cli
clc
jge
lods
fcmovb
rcll
push
stos
and
pop
test
xchg
lds
cltd
out
orl
roll
hlt
stos
push
cmp
lods
imul
and
cmp
xor
add
jecxz
and
mov
adc
jp
mov
mov
sbbl
add
add
mov
dec
mov
in
jmp
add
je
dec
lods
fdivrl
mov
mov
sub
daa
pop
cmpsl
imul
js
cmc
push
add
insb
inc
cmp
shll
cltd
mov
stos
xchg
ret
pop
into
add
decb
outsb
cmp
push
scas
je
xchg
fisubrs
aad
stos
inc
push
bnd
jnp
enter
scas
out
mov
xchg
xlat
pop
xlat
sarb
data16
push
sbb
fdivs
adc
pop
xchg
lcall
cli
popl
inc
sub
dec
int3
pop
mov
leave
mov
cmpsl
inc
call
mov
dec
sti
xor
jo
arpl
cmp
cli
bound
jo
sbb
jp
mov
icebp
pop
or
inc
loopne
mov
scas
daa
sti
ja
and
sub
add
add
ja
out
das
mov
aam
lret
push
mov
cmc
add
add
leave
xor
add
in
mov
xchg
add
bound
jnp
ret
inc
stos
aad
pop
cmp
inc
xchg
repz
lods
push
dec
add
fs
ja
xchg
mov
orl
mov
mov
pop
push
data16
rclb
mov
add
xchg
js
cmp
pop
push
push
clc
dec
push
movsb
sub
mov
lcall
adc
aas
adc
mov
fildl
fstl
xlat
sbb
mov
push
enter
jecxz
adc
xor
scas
sbb
cltd
fwait
cmp
loop
pop
call
jle
stos
sbb
hlt
aas
movsb
push
mov
fistps
mov
aaa
mov
sub
xchg
call
cltd
flds
sub
dec
sub
pop
cli
pop
adc
loop
test
mov
jnp
push
jmp
add
add
push
int3
subb
call
lret
sbb
pop
jnp
pop
push
popf
lock
cmc
mov
insl
mov
int3
arpl
js
dec
ja
xor
jno
hlt
out
shrl
test
les
insb
clc
popa
jo
das
mov
cwtl
jae
outsl
push
mov
cli
mov
sbb
add
call
movsl
sbb
into
jmp
or
push
mov
leavew
lcall
xor
mov
sbb
cli
and
mov
int3
cmp
repnz
je
inc
or
scas
aas
test
les
pop
xor
jmp
and
lret
inc
add
in
cmp
stos
cmp
push
and
jg
cmpsl
mov
jecxz
das
lods
pop
xor
dec
sbb
push
mov
xchg
xchg
inc
pop
jne
push
add
mov
repz
repz
call
add
cmc
add
add
pop
lret
das
scas
add
ds
or
scas
sbb
sub
and
jnp
aad
lcall
test
cwtl
cwtl
xor
mov
ror
dec
in
jge
das
arpl
sahf
pop
addr16
sub
add
lret
xchg
scas
jns
push
inc
movsl
inc
pop
int3
sub
sbbb
jno
cmc
mov
jmp
ljmp
repnz
movsb
aaa
xchg
mov
push
negl
pop
mul
ret
int3
cs
repnz
sbbb
jecxz
mov
outsl
pop
xor
iret
sbb
popf
imul
add
scas
outsl
popf
sbb
pop
pop
mov
mov
stos
sbb
push
cwtl
jbe
add
iret
ss
flds
add
lods
cmp
dec
and
sub
loop
xor
add
add
mov
mov
cmp
nop
test
add
cmc
add
add
sub
das
rcl
mov
lock
jmp
or
aas
cld
cmp
popa
sbb
ljmp
jnp
adc
int3
movl
pop
inc
sbb
movl
outsb
gs
dec
xchg
jle
insl
cmp
sub
pop
add
cmp
mov
cmp
sub
repz
rorl
clc
pop
mov
mov
and
ficomps
jg
jb
mov
idivl
arpl
mov
dec
lret
mov
or
addb
and
ss
jno
sahf
mov
dec
xor
sub
scas
adc
xchg
jo
xor
mov
cmp
lods
subb
fdivrl
aam
out
int3
cwtl
in
mov
pop
rorl
add
or
sbb
mov
xchg
xor
add
add
add
mov
jecxz
xchg
icebp
cwtl
push
mov
xchg
and
mov
dec
mov
xor
mov
lods
outsb
mov
mov
dec
lods
mov
sub
push
test
xchg
dec
shrl
loopne
xlat
dec
adc
dec
sbb
pop
jno
sub
jmp
js
loop
aam
out
in
push
pop
aaa
jns
sub
mov
test
xchg
in
das
movsb
xchg
adc
jle
jno
lahf
add
or
add
lcall
inc
inc
jno
inc
test
mov
or
cmp
out
push
imul
aas
bound
xchg
push
inc
mov
cmp
mov
xor
daa
pop
repz
push
mov
out
in
movsl
xchg
push
jne
jp
add
add
inc
fdivl
stos
push
cld
mov
add
add
add
pop
icebp
mov
aad
sti
fwait
pop
rclb
push
xchg
push
mov
push
jne
sub
in
push
mov
std
insb
fsubs
sub
idiv
and
pop
rcr
jne
les
aaa
and
fldl
cmp
stos
adc
loopne
pushf
push
ret
cwtl
shll
mov
in
xor
sub
xchg
mov
add
sub
and
sub
lods
addb
rcrb
mov
mov
push
mov
outsb
sahf
stos
add
sbb
shrl
fwait
int
xlat
hlt
outsl
shrb
sub
enter
push
jnp
insl
sbb
rol
pop
into
loopne
xor
addr16
cltd
loope
ja
repnz
jl
xchg
xchg
ret
out
dec
clc
push
nop
xchg
icebp
mov
adc
mov
cli
addr16
jg
mov
add
sbb
mov
pusha
and
lea
add
add
aas
pop
das
icebp
insb
iret
adc
xchg
rcl
cmp
mov
jb
lock
out
adc
push
mov
out
cltd
xor
push
pop
mov
lret
sub
jl
lret
lds
gs
push
addr16
pop
mov
lret
ds
mov
lods
cltd
decl
out
lcall
inc
adc
mov
pop
cmp
ss
sub
test
jp
sub
add
xchg
cmp
addb
mov
mov
test
cmp
dec
ljmp
mov
into
lds
mov
into
pushf
mov
inc
xchg
or
sbb
sub
jnp
mov
out
adc
mov
and
sub
sub
mov
cwtl
cmp
inc
ds
fadds
add
pop
test
stos
hlt
jmp
ljmp
mov
add
add
add
cwtl
cmp
lcall
push
out
cs
lahf
xchg
add
dec
shrl
fnsave
sub
inc
insb
mov
push
mov
adc
sub
push
cmp
mov
and
mov
lea
pop
mov
sbb
stc
je
mov
mov
mov
jl
mov
aas
pushf
push
pusha
popa
loop
loopne
mov
sub
xor
aad
inc
mov
push
pop
cmp
jb
xchg
xor
xchg
pop
sub
sbb
out
inc
pushf
jge
xor
mov
into
icebp
daa
ret
cwtl
fs
mov
ljmp
or
gs
arpl
shrl
add
lret
sub
push
mov
icebp
and
cmp
push
cli
push
hlt
lret
adc
add
add
out
xlat
out
jg
dec
cmp
pop
dec
cmp
pushf
lods
add
cmc
add
add
jge
movsl
daa
sbb
nop
fistpll
scas
lods
inc
cld
aad
std
stos
lret
in
test
sub
mov
sbbl
call
cwtl
out
add
hlt
hlt
mov
jecxz
adc
inc
icebp
mov
mov
xlat
and
fimuls
ss
add
fistl
nop
adc
pop
sub
in
fldt
jg
xor
mov
dec
loopne
fimull
mov
sbb
or
pop
arpl
daa
jp
repz
fcompl
mov
sub
movsl
push
push
mov
inc
scas
adc
idivl
xlat
andps
xlat
dec
adc
frstor
xchg
sarl
mov
inc
insb
push
mov
insb
jle
out
pusha
adc
push
shrb
les
inc
test
cmpsl
iret
and
in
xchg
mov
outsl
xchg
push
rcrb
ds
push
shl
sbb
sti
pop
ret
add
mov
inc
fwait
lds
xor
insl
mov
cmc
add
add
mov
dec
aad
push
xchg
outsb
xchg
rcl
lcall
inc
imul
lock
sbbl
xor
mov
sub
adc
rorb
test
xor
dec
pop
jne
cltd
stos
fnsave
lds
adc
dec
cld
shlb
rcrl
mov
aas
xchg
jmp
rolb
push
cld
cmc
test
pop
call
cmpl
dec
pop
mov
ds
mov
pop
loopne
mov
lret
call
sbb
push
jne
idiv
push
mov
xchg
mov
xchg
ret
pushf
inc
adc
lret
mov
incl
add
out
lds
testb
arpl
mov
xchg
dec
jo
xlat
cmp
add
out
mov
lock
scas
loop
lcall
std
clc
jns
ljmp
add
cmc
add
add
inc
mov
cs
sbb
mov
cmp
stos
loope
pop
ja
mov
cli
stos
sbb
test
push
mov
pop
dec
int
jo
sub
pop
pop
xchg
popa
mov
mov
movsb
nop
xchg
ficompl
lock
mov
inc
inc
cmp
dec
push
pop
cmc
scas
xchg
in
inc
xor
cmpsb
dec
and
daa
insl
imul
cmc
mov
cmp
xor
push
lahf
sbb
dec
xor
xchg
inc
call
nop
shr
mov
stc
std
mov
sti
xchg
mov
insl
inc
pop
cmp
aaa
sub
bound
lcall
xchg
xchg
sub
sarb
sbb
arpl
leave
add
mov
mov
and
or
cmpsb
bound
pop
data16
out
cmpsl
mov
mulb
add
add
mov
push
sti
jmp
xchg
sub
add
add
add
add
jnp
cs
xchg
cmpsb
push
pop
cmp
dec
call
movsb
adc
or
push
jns
xor
xchg
imul
mov
gs
ljmp
or
cltd
xchg
cmpsl
mov
pop
hlt
popf
jecxz
xor
fcmovbe
xor
and
popf
push
and
or
sbbb
dec
scas
push
push
or
mov
or
ret
das
lret
rep
mov
sub
loopne
in
test
mov
into
pop
or
sub
pop
std
popf
mov
fisubl
leave
pop
in
cmc
xor
stos
fxch
clc
mov
add
mov
mov
popl
subb
in
sub
sbb
mov
decl
loope
bound
xchg
fisubl
into
inc
faddl
dec
ja
es
cmp
push
jne
cmpb
std
gs
loop
aaa
pop
inc
mov
test
add
add
jecxz
lock
test
add
cmc
add
add
mov
mov
scas
jno
fcompl
clc
adc
fs
xlat
inc
xchg
push
adc
jo
data16
ljmp
pop
xchg
addr16
in
adc
inc
jmp
ret
sbb
jg
aaa
lahf
sbb
pop
fisubs
mov
sub
cmp
push
xchg
push
testl
jg
popf
add
imul
jnp
in
push
cltd
in
pop
push
inc
int
sbb
push
push
jns
scas
xor
movsl
sarb
shlb
enter
es
or
xchg
xor
adc
bound
aam
xchg
inc
mov
movsl
mov
mov
push
pop
test
jge
dec
adc
ja
das
lret
xlat
sub
jne
xchg
stc
push
push
popa
call
cmpsl
inc
and
xchg
mov
xor
pop
mov
out
lahf
fwait
pop
push
or
fdivrl
mov
cld
mov
test
gs
add
add
add
inc
lea
push
and
ss
insl
xor
adc
sub
push
sbb
stos
jge
iret
mov
pop
mov
mov
inc
andl
leave
insb
out
mov
bound
and
jo
js
lods
and
add
or
pop
push
xor
cmp
pop
out
pop
dec
adcl
add
pop
inc
mov
clc
push
gs
pop
sbb
je
xor
pop
push
dec
out
pop
movsl
pop
inc
mov
hlt
xor
cmp
and
leave
dec
push
adc
faddp
xor
xchg
lds
movsb
ljmp
cmp
or
push
or
jg
or
xor
bound
push
int
adc
popa
ret
push
dec
jno
addl
xor
xlat
jecxz
xlat
clc
and
jmp
and
rcll
sldt
add
out
cmc
mov
push
mov
rcrb
add
cmc
add
add
fsubl
rolb
jae
or
mov
mov
rolb
jns
fmull
adc
rol
lods
mov
pop
sub
jp
inc
cmpsl
cmpsb
jae
mov
adc
sti
icebp
loop
or
leave
mov
outsl
mov
jnp
dec
jne
es
push
and
add
and
adc
loop
adc
xor
mov
sbb
add
cs
testl
jae
xor
lds
jle
jl
push
test
jecxz
in
dec
or
cmp
xor
xchg
and
test
pcmpgtw
xchg
mov
fistps
mov
out
imul
add
sbb
int3
pop
popl
mov
xchg
loopne
shlb
ljmp
cld
add
add
out
std
dec
std
pop
mov
push
bound
dec
mov
add
add
add
inc
leave
test
andb
rcrb
or
sbb
popa
push
lods
sub
jg
and
mov
aam
xchg
pop
mov
xor
mov
sub
adc
mov
pop
mov
sub
cwtl
loop
mov
nop
push
inc
andb
inc
jo
dec
insl
sub
jne
mov
xchg
data16
push
shrb
xchg
jno
xlat
cmc
cmp
call
jae
push
xchg
sbb
add
sbbl
lret
in
or
loopne
inc
fimuls
inc
pusha
adc
pop
mov
jne
jno
movsb
xchg
mov
xchg
test
cmp
jno
fisttpl
lds
push
dec
mov
sahf
push
xor
jnp
push
inc
imul
pop
shr
movsb
jl
ficoml
add
add
fidivs
loop
ljmp
inc
sahf
out
inc
mov
add
add
add
gs
dec
outsb
aam
cmp
outsl
and
imul
mov
sbb
xchg
adc
cmp
gs
and
daa
add
js
addr16
sub
hlt
or
gs
test
rorl
mov
lahf
add
sbb
mov
test
into
dec
or
jno
fwait
idivl
pop
aas
imul
jae
cmc
jno
cmp
adc
mov
push
and
jle
xchg
in
lahf
bound
inc
cmp
jmp
dec
dec
aad
push
hlt
mov
nop
pop
sub
out
mov
xor
imul
mov
inc
mov
in
dec
jbe
enter
sbb
xchg
pop
fimull
cmp
mov
push
sbb
add
add
xchg
jg
jmp
std
jge
in
xchg
loope
pop
mov
cmc
add
add
inc
sbb
imul
mov
pop
xchg
pop
push
sahf
in
adc
imul
rol
ret
inc
sti
jae
or
lea
xchg
lock
inc
add
in
jbe
and
out
and
sbb
pusha
dec
dec
mov
loop
mov
lods
add
repz
push
lea
lods
xor
out
ret
adc
int
sbb
dec
aad
inc
shrb
adc
cwtl
test
insl
jo
lea
jmp
xlat
push
imul
inc
jge
in
outsl
pop
sahf
inc
adc
test
mov
jmp
movsb
or
sbb
and
in
mov
jle
or
loope
push
push
icebp
push
push
mov
pop
push
icebp
pop
cmp
xchg
fcmovbe
shll
cld
lret
pushf
pop
or
pop
fisttpll
mov
insl
lods
add
add
xor
std
cmp
lahf
outsb
cs
add
add
add
lock
mov
icebp
jns
pop
sbb
out
in
lods
sub
test
xor
mov
fidivl
inc
adc
aaa
mov
imul
jo
hlt
inc
aad
add
mov
lock
leave
sub
xor
incb
out
mov
xchg
imul
cmpsb
into
or
inc
push
and
sarl
mov
mov
cmp
imul
mov
mov
int3
jl
and
movsb
dec
movsb
es
sbb
jp
push
inc
mov
cmp
test
jmp
mov
adc
jecxz
xchg
lahf
movsb
das
cwtl
push
add
fwait
rdtsc
pop
fildll
adc
mov
and
mov
mov
nopl
jmp
ffree
pusha
push
pop
xor
cmp
ficoml
sub
add
cmc
add
add
add
jb
inc
sub
dec
push
dec
xchg
daa
pusha
dec
push
push
gs
jl
and
mov
jo
sbb
jecxz
cs
or
dec
mov
mov
insb
int
xchg
lcall
mov
dec
ss
mov
pop
and
mov
sub
nop
fwait
sub
push
sub
add
mov
mov
xchg
push
in
in
lahf
jbe
cmp
mov
pop
jae
rorb
xlat
test
fucomi
xchg
mov
cmp
cmpsb
loop
ljmp
leave
add
outsl
scas
movsl
adc
mov
jecxz
mov
test
sub
cld
dec
cmc
push
push
loop
iret
fists
cmp
sub
push
sti
fldt
dec
pusha
pop
add
adc
sub
test
jmp
xchg
mov
push
incl
add
es
les
mov
push
push
adc
jns
sbb
add
addb
mov
dec
or
mov
flds
dec
inc
movsl
xlat
dec
imul
mov
dec
jno
pop
sar
add
cmp
int
enter
roll
adc
rcr
pop
mov
pop
lret
movsl
pushf
or
das
and
insl
aas
lods
les
push
and
scas
xor
hlt
dec
or
sbb
test
sub
cmp
and
cmp
in
push
popa
push
add
out
cmpsl
xor
loop
xchg
shr
ret
mov
repz
lds
and
and
sub
test
and
dec
movsl
inc
sahf
pusha
sahf
sarl
std
pop
sbb
adc
fcoml
fisttpl
outsl
jecxz
mov
jns
das
jne
icebp
out
rcrw
into
cmpsb
fadd
pop
sbb
pop
ret
movsl
adc
add
add
add
clc
pop
stc
out
push
insb
xchg
cld
sub
mov
add
push
jp
jnp
jmp
pop
mov
adcl
cmp
sbb
mov
leave
repnz
sbb
nop
nop
mov
daa
dec
mov
test
push
lock
xor
or
pop
add
outsl
jbe
ja
repz
push
adc
xor
sbb
int
repnz
pusha
xchg
mov
out
mov
cld
mov
mov
mov
lods
shlb
imul
popf
sub
dec
push
jecxz
fcmovu
out
add
movsl
and
mov
mov
pop
ret
sbb
in
iret
mov
sub
mov
lret
push
daa
inc
mov
les
insb
ret
adc
inc
xchg
call
sbb
fwait
test
sub
pop
or
dec
sub
or
jge
inc
and
xchg
pop
cmpsl
xchg
data16
clc
push
cld
ret
push
cld
xor
mov
sub
add
lds
cli
lcall
ret
xor
cmc
add
add
inc
pop
mov
addr16
rcrb
dec
mov
ds
mov
lret
sub
lock
fsub
xor
ret
dec
aaa
iret
pop
into
testl
call
dec
pop
icebp
jecxz
mov
mov
dec
pop
outsb
inc
mov
outsl
xchg
dec
mov
imul
inc
xchg
insb
pop
jbe
cs
pop
fisubrl
inc
mov
and
les
in
adc
fidivrl
fisttpl
or
mov
fstps
or
xor
jle
iret
adc
iret
add
popf
add
ret
sub
push
fwait
sahf
out
aaa
xchg
fsts
pop
jbe
cwtl
aaa
adc
sub
xor
shlb
cmp
fsubs
mov
movsl
pop
inc
and
push
cli
sub
add
add
jne
mov
xlat
insb
scas
adc
scas
idivl
add
out
mov
adc
mov
out
add
orb
fistpl
mov
mov
xchg
pop
daa
xor
mov
push
inc
jns
push
ret
enter
cmpsb
daa
push
scas
adc
cmp
je
int
call
lods
adc
or
std
out
scas
add
sahf
jecxz
pop
jno
cmpsb
mov
dec
fists
sbb
mov
sti
out
mov
cs
dec
pop
cmp
sub
dec
mov
xchg
lds
cmp
mov
movd
divl
inc
push
out
mov
in
jp
mov
dec
xor
stos
aad
inc
in
and
mov
push
cmp
pop
enter
inc
movsb
and
add
adc
mov
fsubp
push
add
out
or
sahf
cmc
add
add
pop
sbbl
fstpl
pop
popf
adc
mov
add
jae
add
mov
jnp
movsb
sub
inc
shll
mov
dec
adc
adc
dec
dec
cmp
je
cmp
sbb
mov
pop
popf
cli
xor
jns
dec
adc
lcall
out
jle
jne
push
pop
push
out
cli
pushf
aam
xor
pushf
repnz
xchg
dec
dec
call
pushf
in
jo
pushf
xchg
adc
in
xchg
xchg
add
repnz
out
xchg
mov
outsl
jbe
out
ficompl
sti
out
fists
adc
fcoms
out
movsb
fs
test
xor
pop
decl
jbe
popf
cmp
rcl
inc
mov
jmp
sbb
cmpsb
pop
mov
sub
xchg
aaa
adc
imul
in
mov
sbb
push
pop
mov
cltd
fldt
rorb
in
mov
add
add
in
mov
jecxz
out
sub
in
mov
mov
add
scas
xchg
outsl
rorb
mov
ljmp
dec
jbe
in
mov
cwtl
jbe
mov
dec
aad
pop
jae
jbe
bound
ret
jp
test
jae
das
jge
xor
pop
cmp
ljmp
jge
cmp
inc
dec
sub
addr16
sti
std
nop
cmpsb
jnp
out
and
movsb
or
mov
mov
shlb
pop
xchg
add
fidivrs
in
cs
jle
pop
or
lahf
enter
pop
push
mov
jnp
add
rcrb
jns
mov
xchg
pop
add
xchg
jp
insb
jb
fisubrl
cmp
pop
push
push
xor
pusha
add
daa
mov
jmp
inc
ja
inc
sub
jmp
adc
shlb
clc
jo
sahf
and
js
jmp
mov
add
std
test
jg
jbe
movsb
push
mov
cmc
add
add
adc
jp
popf
pop
adc
jo
loope
gs
arpl
push
cmpsb
mov
pop
je
xchg
mov
pop
stc
in
sbb
sbb
das
push
cwtl
iret
mov
sub
jg
lea
out
andb
loope
aaa
ret
cmpsl
sahf
and
and
lahf
int3
push
add
push
mov
nop
mov
jmp
dec
dec
sub
cltd
in
fcomps
cwtl
les
lret
jecxz
jle
sbb
lds
dec
push
popf
out
cmpsl
mov
and
mov
mov
jno
dec
and
push
imul
push
xchg
ret
sbb
subb
outsl
cmp
dec
push
and
push
icebp
imul
push
adc
icebp
inc
cltd
jp
xor
icebp
jns
es
sub
add
mov
insb
adc
sub
sub
add
lock
in
lcall
xor
inc
mov
add
add
add
fidivrl
add
mov
xchg
push
lock
clc
pusha
push
mov
mov
scas
shll
rcrb
push
shr
mov
in
xor
pop
loop
add
rorl
push
jae
xor
cmp
rcrl
mov
mov
cmpl
outsb
pop
rcl
mov
sti
sub
fld
loope
fisubrl
push
lock
int3
mov
xchg
add
cwtl
sbb
unpcklps
lea
std
loop
dec
fs
or
leave
js
adc
fistpll
in
jecxz
dec
ss
std
sub
call
incb
lea
pop
or
movsb
into
dec
in
or
xchg
shll
lcall
mov
pop
cmp
mov
clc
mov
mov
add
add
sub
jg,pt
stos
dec
push
jo
or
stc
sarb
add
repnz
jne
std
out
arpl
test
jnp
ud2
leave
add
mov
adc
ljmp
lret
test
imul
fildl
sbb
cmp
scas
xor
and
lods
jmp
test
cmc
jmp
pop
insl
je
loope
and
adc
popa
mov
pusha
mov
imull
and
sub
mov
adc
ljmp
data16
cmp
push
insb
or
pop
iret
into
dec
pop
test
scas
cs
sbb
lret
mov
lret
loop
add
pop
pop
push
std
int3
notb
jp
push
sahf
or
or
imul
xchg
jb
and
cmpl
mov
inc
mov
cmc
push
sub
pop
mov
push
cmpsl
adc
add
out
idiv
outsl
mov
mov
add
cmc
add
add
or
aad
jmp
sub
sar
addr16
outsb
ljmp
dec
pop
xchg
pusha
adc
jnp
xchg
sub
imul
push
jp
pop
sbbl
xor
mov
and
lods
scas
jecxz
add
into
data16
notb
jno
movsl
fildl
out
addr16
pushf
jmp
mov
loope
or
add
pop
rcll
pop
dec
repz
lds
adcb
in
test
mov
and
or
pusha
sti
sarb
or
leave
out
push
push
mov
inc
pop
in
pop
fisttps
mov
js
mov
dec
into
push
outsl
insl
sub
inc
push
out
pop
ja
sub
in
leave
mov
xchg
xor
adc
ret
roll
cmpsb
mov
daa
aam
clc
jns
stos
cs
add
add
inc
fbld
mov
cltd
jbe
add
add
add
mov
sbb
inc
xchg
mov
loopne
loope
insl
out
or
mov
mov
cmp
pop
out
mov
loop
andb
das
cmp
xchg
hlt
lcall
sbb
add
outsl
rorl
ret
xor
mov
jnp
cwtl
push
mov
inc
jecxz
inc
push
iret
out
cwtl
sub
and
dec
dec
cmp
leave
aam
jae
mov
in
out
mov
mov
or
das
mov
sub
cmpsb
sbb
sub
call
adc
jecxz
inc
mov
xor
iret
mov
dec
std
fwait
ret
loope
rclb
add
mov
push
hlt
or
mov
fisubs
jo
test
pop
je
xor
pop
jmp
xchg
xor
in
hlt
les
cmp
mov
mov
add
push
push
call
xchg
hlt
push
stos
lahf
ret
cmc
add
add
dec
sub
sbb
sar
dec
sub
sti
or
sub
push
xor
push
sbb
into
xchg
dec
loop
lcall
addr16
scas
fs
fdivs
clc
cmp
popf
rorl
inc
out
xchg
in
pop
in
aad
pop
daa
add
sbb
fs
arpl
push
push
repnz
out
pop
rol
cld
stc
and
stos
cmp
inc
cli
js
aaa
or
ror
jae
jno
jo
nop
push
fsubr
cmp
cmp
mov
jne
jns
pop
ffreep
pop
adc
push
xor
jge
mov
rcl
rclb
jbe
xchg
pop
xchg
lcall
xchg
inc
insb
loopne
lock
mov
adc
imul
test
test
push
movsl
inc
or
jle
cs
add
add
std
sti
leave
sti
iret
ljmp
mov
ret
add
cmc
add
add
test
push
sbb
xor
sbb
mul
scas
bound
sbb
mov
in
lret
mov
jl
pushf
sti
fcmovne
jge
cmp
inc
cmp
ret
aam
ja
push
cmpsb
adc
xchg
test
sub
fnstenv
inc
pop
mov
xor
repnz
testb
add
mov
mov
fimull
jecxz
fimuls
mov
xor
fs
subb
lcall
aaa
addr16
aad
sub
add
test
inc
cmpsb
insl
shr
pop
js
pop
xlat
stos
data16
loope
dec
jns
out
je
int
daa
cltd
outsb
loope
pop
jb
std
mov
pop
cmpsl
out
sbb
jns
jae
xlat
and
lods
pop
icebp
or
inc
mov
pop
adc
and
mov
bound
add
mov
es
jb
cmp
add
add
add
lcall
orb
push
jns
scas
inc
and
dec
push
jns
xor
sbb
loopne
inc
push
inc
loop,pn
cmp
dec
inc
das
sub
lahf
inc
ss
insl
mov
pop
sbb
xchg
cs
int
stc
pop
rorb
xor
xor
inc
repz
dec
mov
adc
repz
mov
loopne
mov
sub
lea
adc
aad
xchg
mov
call
ss
sahf
push
fnstsw
xor
or
in
xchg
ret
xor
mov
cmp
or
sbb
or
outsl
jmp
adc
das
adc
lods
jl
lods
jg
call
mov
call
mov
push
int3
jae
js
nop
push
loope
push
jno
in
xor
les
add
fwait
mov
or
jg
mov
sub
jp
lds
add
add
add
lods
clc
or
inc
jbe
cld
pop
sarl
inc
pushf
mov
fs
insb
lret
lcall
lock
or
cli
adc
test
inc
icebp
flds
pop
push
lret
popa
xchg
dec
adc
aad
ja
cpuid
mov
jmp
test
js
inc
test
jo
imul
movsb
xor
add
jo
stos
test
xchg
or
inc
lods
in
loopne
or
ljmp
mov
push
add
nop
icebp
into
mov
addb
jg
adcl
divl
popa
or
pop
sbb
mov
pop
test
mov
loope
loopne
notl
and
js
cmc
je
popf
push
pop
dec
int3
jnp
add
enter
inc
data16
push
test
lret
mov
add
add
inc
enter
pushl
out
adc
and
add
cmc
add
add
imul
sarb
leave
scas
sub
cld
and
push
mov
movsb
mov
and
push
repz
les
xor
dec
add
pop
inc
mov
push
sub
out
hlt
pop
rclb
movsb
andl
shll
push
fwait
adc
rorl
gs
scas
push
ds
pop
jmp
sub
add
das
fwait
lahf
sbb
shlb
fcoms
cmp
xchg
adc
push
cmpsl
out
jg
int3
push
dec
aad
ja
add
mov
dec
loop
pop
test
push
mov
push
add
imul
mov
fs
sbb
ja
cmpsb
pop
mov
inc
sbb
xor
sub
test
mov
mov
fildll
movsl
jle
dec
sbb
sub
jmp
add
pushf
shrb
jb
ret
addr16
cmc
add
add
loopne
lret
imul
inc
shl
jne
xchg
rep
dec
jns
ret
loop
mov
xchg
lock
add
and
or
popf
imul
jge
pusha
test
cltd
push
or
xor
add
inc
push
adc
mov
out
stos
cwtl
fistpll
and
inc
int
iret
or
pop
sbb
add
jg
jg
sub
stos
xchg
test
out
iret
xor
mov
or
outsb
mov
sarl
adc
push
stos
movsl
jnp
push
dec
and
adc
je
push
ljmp
add
dec
pop
pop
jge
xchg
nop
icebp
mov
xchg
cmpsb
leave
fldln2
popf
push
mov
mov
inc
lods
and
into
aas
mov
jno
fwait
iret
and
add
add
test
mov
xchg
push
outsl
jecxz
loope
pop
enter
add
add
jge
mov
fisttps
iret
jnp
pop
xor
push
or
mov
mov
dec
dec
cmp
std
repnz
or
sbb
add
xorb
mov
fs
add
add
cmc
out
lret
mov
xchg
mov
movsb
add
xor
push
cmp
xor
mov
mov
cld
jecxz
mov
pushf
outsb
mov
inc
cld
pop
fs
inc
pop
rcr
sub
hlt
enter
xchg
mov
or
push
lea
test
sub
push
test
cmp
mov
push
push
cmp
adc
adcb
pop
cmc
xor
in
xlat
lret
xorl
lahf
dec
jnp
push
xlat
adc
push
stos
lret
push
xor
mov
cs
sbb
mov
ret
fwait
xor
scas
inc
fs
add
jg
jne
jne
jg
out
and
dec
dec
ja
leave
add
cmc
add
add
and
cmpsb
popf
fwait
cmp
mov
mov
imul
loop
jp
adc
jo
xchg
cmp
loope
inc
cmp
fucom
pop
idivb
daa
repz
pusha
add
repz
jns
pushf
jecxz
fbstp
jbe
rcrb
pop
js
fwait
out
cmp
in
mov
and
rcll
sbb
clc
push
cmp
fsubl
jl
adc
pushf
or
ss
jp
mov
lea
jg
jb
or
push
sarl
mov
mov
pop
mov
lods
push
jne
cli
jne
loope
scas
daa
adc
push
gs
shlb
xchg
aas
mov
push
out
xchg
xchg
add
and
mov
dec
sahf
cmpsb
jbe
mov
mov
lods
cmp
scas
push
and
push
mov
add
sbb
mov
cmpsb
fstpl
xchg
dec
rol
inc
lret
cmc
add
add
inc
dec
inc
fs
pop
lret
jbe
inc
add
xor
and
ds
xlat
pop
mov
mov
mov
decb
repnz
mov
dec
lret
or
jle
repnz
sub
out
push
or
int3
adc
icebp
mov
cli
pop
jecxz
xchg
xchg
jns
xchg
sub
jecxz
and
jno
pushf
shrl
inc
mov
jecxz
pop
enter
dec
jns
sub
pop
mov
adc
pop
in
call
lret
jg
adc
xchg
add
sub
in
nop
cmp
pop
pop
jne
pop
js
aaa
adc
cmp
mov
lret
xchg
jge
mov
xor
pop
or
or
lea
stc
push
iret
jbe
jae
push
cmp
inc
or
add
add
outsb
jle
lods
not
mov
add
ret
lret
add
cmc
add
add
insl
sub
in
pop
mov
cli
bnd
jae
jno
sti
push
mov
lds
stos
lcall
dec
lcall
dec
cmp
push
xchg
jmp
lds
imul
fsts
aam
inc
mov
mov
andb
jl
test
xchg
cmpb
imul
fcmovbe
enter
cmp
add
into
adc
mov
dec
pop
push
mov
fdivrl
subb
mov
adc
dec
popa
fisttps
dec
mov
mov
out
pop
add
sti
daa
aad
rclb
sub
adc
cmp
sbb
incb
xchg
ds
push
aam
in
out
xor
sbb
jne
aas
out
mov
jle
dec
mov
jecxz
mov
xchg
add
mov
xor
pop
xor
add
cmc
add
add
movsl
cltd
popa
out
jmp
xchg
popf
dec
inc
bound
and
dec
bound
enter
in
sub
stos
negl
mov
jno
jo
aam
lods
fisubs
pop
mov
jno
loopne
dec
pop
ret
and
divb
jo
cld
fstpl
and
imul
mov
cmp
loope
cmpsl
xchg
outsl
aam
mov
xor
adc
add
mov
cmc
cmpsb
mov
pop
and
xchg
mov
lds
mov
cld
in
movsb
xor
ja
xor
add
mov
nop
mov
sub
data16
lds
add
fdivs
push
inc
fcomps
jg
push
roll
cmp
popa
pop
jecxz
cli
dec
adc
or
cmp
mov
jbe
and
push
fimull
je
adcb
mov
test
add
test
sbb
xlat
ss
inc
movsb
jbe
and
add
add
add
out
jns
inc
mov
cmp
fwait
movsb
mov
dec
push
daa
add
xchg
pop
xchg
imul
fwait
pop
cmp
daa
mov
pop
cwtl
push
rolb
call
mov
and
fstps
mov
pop
xor
jno
stos
add
and
xor
cld
es
arpl
dec
xor
lcall
xchg
push
and
inc
jne
xlat
cmpsb
xor
sbb
fnstcw
inc
inc
xor
and
fnsave
xor
in
lds
stos
pop
psubd
leave
jo
daa
lret
mov
xlat
pop
cmp
loop
inc
mov
mov
in
daa
xor
outsl
mov
sbb
push
mov
lret
xchg
fisttpll
add
mov
sti
dec
notl
add
add
push
sub
cmp
jg
cmp
mov
sbb
add
cmc
add
add
cmp
push
insl
sbb
fwait
ljmp
test
scas
dec
stc
cmpsb
popf
repz
adc
out
sub
fcomps
xchg
cmpsb
jnp
xchg
mov
sbb
dec
mov
cmp
cwtl
push
mov
xor
movsl
pop
lock
mov
pop
aad
cwtl
fwait
test
cmc
cmc
lahf
mov
push
lret
jp
loopne
mov
adc
or
sub
push
mov
cmp
test
fs
push
hlt
xor
into
call
xchg
out
and
push
hlt
in
sbb
add
out
subl
push
push
inc
push
int
in
jmp
xor
cmpsb
push
mov
pop
lods
mov
aam
out
mov
push
pop
pop
pop
mov
cmpsb
js
stos
fs
xchg
jb
xchg
push
add
add
xor
fistpll
out
repz
aam
std
pop
adc
add
cmc
add
add
repnz
loopne
rorl
and
add
inc
push
jl
push
dec
mulb
cmpsl
mov
push
push
mov
xchg
sbb
shll
pop
in
push
mov
lcall
pusha
popf
jne
adc
cld
stos
jb
cld
add
push
sahf
xchg
mov
shl
dec
xor
and
movl
fxch
and
mov
lods
cmpsb
hlt
pop
sub
test
push
sub
cmp
sti
les
movsb
pop
mov
bnd
mov
ds
jo
push
addr16
mov
in
loop
ljmp
or
mov
and
and
and
ror
dec
push
xchg
aas
add
sub
dec
mov
std
loope
add
xchg
stos
sbb
daa
aas
jge
add
mov
mov
jne
addr16
mov
add
add
add
sbb
aad
rcll
mov
cwtl
gs
mov
cltd
sbb
push
movsb
bound
xchg
inc
pusha
les
mov
into
movsl
add
dec
push
inc
cmp
lock
cmp
pop
mov
icebp
ret
stc
cmp
lret
inc
mov
push
lods
lcall
jmp
in
ret
lret
sahf
pop
mov
jp
les
nop
mov
pop
imul
pop
jbe
pushw
leave
xchg
xlat
stos
xchg
divb
movsl
push
sub
imul
adc
mov
push
pop
sub
mov
add
je
cmpsb
jbe
and
jle
roll
push
aad
add
addl
ret
dec
call
xor
sbb
lret
add
add
enter
in
out
mov
dec
jne
jg
rolb
add
add
add
mov
test
mov
adc
cmpsb
or
cmp
xchg
cld
mov
add
jae
adc
sbb
fildl
jp
loope
shl
push
xorl
test
jp
pop
fcmovnbe
js
sbbb
jae
pop
and
mov
inc
out
loopne
sub
lret
add
mov
sahf
shll
es
bswap
adc
imulb
pop
jmp
mov
push
fsts
fmul
adcl
push
adc
and
jmp
enter
jo
pop
icebp
repnz
pushf
mov
jne
fs
mov
sbb
or
xor
ja
pop
add
loope
mov
pusha
and
adc
push
cmc
je
add
filds
ror
jle
pop
imul
jp
push
repnz
dec
mov
gs
inc
jle
add
add
imul
cmc
call
bound
out
roll
add
add
add
cmp
adc
daa
iret
cmp
pop
call
sbb
sbb
xor
adc
inc
mov
cmp
xchg
dec
aam
mov
xor
cmp
das
sub
mov
fldl
in
mov
insb
imul
adcl
gs
mov
sub
push
roll
into
jmp
add
xchg
fwait
pshufw
ret
lea
pop
add
and
fsub
cmpb
mov
or
movsb
into
stos
insl
rorb
cmp
ds
test
movsb
fldenv
mov
push
cmp
lahf
shr
cli
jnp
dec
jno
fwait
out
ror
pop
in
dec
cmp
outsb
mov
das
ss
addl
cmp
mov
in
and
cmp
movsl
ljmp
cwtl
rcr
int3
dec
lock
insl
sbb
add
cmpsl
shll
cs
pop
add
add
ja
iret
xchg
xor
sbb
cmc
add
add
inc
popa
sbbl
jp
ficomps
mov
inc
and
lahf
test
stos
jns
and
pushf
test
push
lods
xchg
shlb
xor
push
mov
loope
adc
or
mov
add
cmpsl
push
mov
sbb
fidivrl
pop
mov
mov
inc
jmp
push
or
add
dec
sub
imulb
jmp
jb
mov
xor
push
dec
cltd
es
push
scas
lock
imul
xchg
jl
je
xchg
out
dec
xchg
lea
and
daa
std
and
mov
aaa
aad
das
jb
clc
jp
pop
lock
ja
xchg
test
es
add
out
addr16
rcrb
js
cs
pop
pop
loop
fists
jo
repnz
lcall
int3
inc
arpl
add
out
into
gs
fsts
imul
add
cmc
add
add
shrl
and
jno
sub
in
fdivs
jl
mov
imul
push
or
hlt
xchg
sbb
cmpsb
pop
pop
mov
mov
bound
mov
idiv
sbb
jmp
cltd
stos
cmpsb
pop
lock
mov
inc
xchg
imul
out
std
jecxz
xchg
lret
xor
inc
lret
dec
jns
dec
adc
sub
push
or
fiadds
daa
adc
jne
stos
xchg
xchg
cmovno
jo
adc
push
sub
adc
aaa
push
mov
xchg
arpl
xor
ljmp
mov
push
mov
add
fisttpll
xor
dec
and
jg
cmpsl
dec
cltd
mov
icebp
inc
pop
enter
int
mov
mov
xor
jo
xchg
popf
jle
out
frstor
pop
xchg
sub
xor
insb
and
add
add
xchg
and
je
out
mov
sub
add
cmc
add
add
flds
jmp
into
and
jo
pushf
mov
loope
js
and
xchg
jnp
mov
jg
xchg
loope
mov
pop
bound
shlb
and
dec
lea
jae
insl
or
sbb
mov
cmpsl
inc
test
sub
push
and
hlt
std
xor
push
jge
out
dec
std
rorl
push
imul
sbb
cmp
mov
aaa
leave
rcr
xor
pop
or
lea
mov
loop
out
push
pop
mov
mov
enter
jge
mov
mov
jno
fistpl
in
xchg
pop
ret
jbe,pn
mov
cmpsl
xchg
lock
mov
mov
mov
jmp
and
pop
and
pop
or
outsb
mov
fs
jns
xchg
fnsave
push
xchg
and
in
jmp
xor
popa
inc
dec
out
in
mov
dec
add
add
dec
daa
dec
das
outsb
imul
enter
jmp
add
add
add
pop
lahf
push
mov
sar
fildl
xchg
cmc
fs
cmp
xchg
and
sahf
mov
std
pop
rclb
imul
arpl
add
cwtl
adcl
xchg
stc
into
popf
add
rdtsc
add
xchg
mov
push
jae
std
push
and
adc
xchg
dec
fmul
dec
je
popa
shrl
dec
pop
lret
andl
xchg
fiaddl
sbb
dec
add
test
in
cmp
push
lods
leave
jbe
jge
popf
pop
in
push
pop
mov
jmp
stos
inc
ljmp
dec
notl
andb
dec
bound
outsl
popa
pop
mov
adc
rcrl
sub
inc
or
dec
aas
pop
mov
mov
jo
add
call
out
lahf
or
fdivs
mov
add
add
sbb
and
add
decl
cmp
mov
ja
maxps
pop
popf
cmp
xchg
lcall
adcl
lret
ror
sti
push
or
mov
addr16
or
insl
out
stc
addb
mov
aaa
into
xor
mov
inc
jne
addr16
sbb
push
jmp
jecxz
dec
out
ds
jns
xchg
inc
mov
ficomps
sub
in
jl
into
popfw
push
ds
fldt
cmpsl
and
int3
or
cmc
jno
ja
mov
into
mov
icebp
std
movsl
mov
iret
mov
adc
aas
sub
xor
arpl
aaa
cwtl
fs
or
es
sbbl
test
xor
into
pop
push
mov
mov
mov
push
push
push
add
add
neg
outsl
mov
push
and
xlat
add
cmc
add
add
shlb
call
push
or
sub
mov
sub
movsl
orl
inc
out
in
mov
mov
pop
add
aas
ret
xchg
stc
fisttpll
or
pop
mov
lcall
xor
jle
jl
fstpt
mov
push
add
mov
test
mov
xchg
jg
xchg
add
lods
ret
and
xor
xchg
clc
push
mov
push
inc
xor
movsl
fcoml
dec
js
cmpsl
in
lret
pop
jae
outsl
sar
mov
xor
test
push
dec
add
mov
jecxz
pop
sbb
and
stos
sbb
ror
jle
or
xor
push
xchg
test
add
add
push
repnz
xor
add
sbb
sbb
rcll
add
cmc
add
add
stos
aam
mov
mov
adcl
insl
and
in
popf
cmp
inc
xor
mov
lcall
push
scas
daa
cmp
jae
push
fstpl
in
mov
cli
test
push
cmp
adc
pop
pop
in
or
out
subb
cmp
ja
mov
dec
push
rcll
mov
call
mov
ja
icebp
jecxz
test
and
gs
cltd
icebp
js
sub
mov
or
cwtl
dec
into
test
lds
insl
cwtl
repz
lret
or
imull
out
jbe
xchg
cmp
cmpsb
mov
aad
mov
or
or
jecxz
push
inc
jbe
mov
outsl
mov
lret
repnz
add
ds
sub
jno
xchg
xchg
flds
add
add
add
testl
out
or
xchg
in
gs
mov
scas
insb
xlat
pop
aam
aaa
or
jnp
fsubs
ss
aam
mov
xchg
jne
sub
and
jmp
mov
mov
add
loopne
pushf
inc
fwait
add
xor
pusha
xchg
xor
test
xchg
loop
lods
push
fdivr
push
scas
push
std
push
icebp
int
inc
jl
outsl
pop
mov
jmp
call
push
sub
shrb
pop
je
jg
fcomip
and
mov
lods
mov
jle
xor
int3
cmp
js
xchg
pop
push
jg
aaa
clc
or
push
dec
mov
lods
fstl
cmc
or
jg
or
jo
shrb
xorb
cmp
ret
sbb
std
add
add
lcall
sbb
fs
add
cmc
add
add
mov
sub
and
pop
xor
pop
gs
add
push
es
dec
mov
in
jo
imul
and
add
push
mov
sbb
pop
push
xchg
sbb
push
xlat
int3
push
aaa
xor
adc
addr16
fisttpl
arpl
sbb
mov
mov
jl
push
out
pushf
jg
daa
dec
shrb
nop
pop
adc
ret
cmp
dec
roll
cmpsb
xchg
inc
cmp
mov
sbb
and
mov
push
mull
ss
jb
dec
aas
xor
adc
in
es
push
imul
mov
int
push
in
in
cmp
shrb
das
cli
fildll
jbe
iret
imul
xlat
adc
mov
xor
xor
mov
and
add
add
xchg
ja
push
jg
loope
cs
out
icebp
sbb
add
aaa
xorl
pop
cltd
into
mov
test
nop
stos
das
or
jb
add
mov
cmp
scas
in
push
pop
push
testb
sbbl
movsb
shrb
cmc
inc
popf
pop
ja
mov
mov
push
cmc
push
insl
movsl
xor
mov
sbb
dec
sbb
icebp
add
and
stc
or
sub
sub
cmp
push
stos
sbb
jb
data16
inc
dec
jnp
subb
jmp
lahf
mov
mov
leave
cld
dec
push
jle
jbe
fcmove
xlat
pusha
std
xchg
daa
cmpsl
out
js
mov
cs
and
insl
mov
pop
shlb
push
ljmp
arpl
sbb
pop
loop
std
mov
out
mov
inc
imul
push
mov
push
and
imul
xor
pop
jbe
add
cmc
add
add
push
xor
jno
jmp
mov
test
sbb
test
xchg
pop
or
adc
scas
stc
cmp
pop
insl
mov
inc
nop
inc
jno
push
xchg
or
fsub
ss
addr16
hlt
js
je
xorl
jne
loop
sarb
xchg
jnp
mov
push
or
inc
int
bnd
jb
cmp
lods
jle
loopne
sbb
sbb
fwait
jmp
jae
jbe
out
adc
cmp
dec
xchg
cmp
push
xor
gs
nop
mov
and
xchg
xchg
aad
add
fdivp
sub
imul
icebp
sbb
shlb
aas
and
mov
dec
mov
push
lds
push
push
adc
mov
pop
movsb
or
pop
jbe
cmp
fadds
leave
pop
inc
leave
add
add
psubusw
push
xchg
fsubrs
dec
out
in
add
cmc
add
add
xchg
cmp
mov
imulb
add
fnstenv
mov
xchg
mov
pop
lds
cmp
sbb
adc
pushf
ss
mov
push
lahf
pop
adc
dec
adc
mov
mov
outsl
aam
or
add
stos
addr16
sbb
lods
or
cmp
mov
sti
add
xchg
lcall
sub
int3
mov
mov
in
out
sub
mov
inc
in
push
inc
mov
hlt
icebp
inc
adc
sub
mov
jae
jb
push
mov
jb
andb
and
mov
leave
cltd
cltd
and
pushf
fisubl
fisubl
xchg
fimull
test
xchg
xchg
xchg
in
lock
ds
jne
loopne
mov
in
sbb
sahf
cmc
fsubrp
jnp
mov
sub
add
cmc
add
add
in
stc
inc
aas
leave
sbb
xchg
sub
mov
cmp
pop
push
jp
ss
mov
cmp
jno
sahf
inc
je
mov
sub
sbb
mov
lea
jp
rorl
jo
ficoml
movb
sub
lahf
and
pop
mov
cltd
sub
mov
mov
aad
push
mov
les
gs
push
insb
fwait
test
jno
and
into
daa
int3
add
pop
mov
and
jge
mov
mov
fstl
sbb
outsl
cmp
ja
push
push
xor
sub
mov
js
mov
ljmp
push
sbb
imul
aad
adc
fsubl
xchg
pop
jge
das
xor
mov
mov
jecxz
orl
pop
fstp
loopne
inc
fstpt
add
add
jle
jg
std
fldt
cmp
fists
add
cmc
add
add
xor
inc
jb
out
add
mov
aaa
sbb
out
cltd
loope
out
jge
sub
es
dec
xchg
movsl
mov
fdivrl
mov
mov
pop
stos
outsl
add
jb
int3
and
test
shll
scas
cmpsl
add
out
mov
out
jo
out
inc
pop
xor
ffreep
mov
xchg
mov
divps
adc
loop
inc
cmp
mov
cmp
cmp
movsb
pop
shll
outsb
call
divl
iret
shll
cmp
testb
adc
shlb
call
jae
sarl
popf
and
cmovle
sbb
movsb
mov
sub
cmp
sbb
call
push
adc
call
aam
mov
leave
jbe
scas
ret
add
cmp
ljmp
jmp
loopne
add
add
add
jmp
xor
fisubs
add
sti
add
lds
lods
frstor
mov
jmp
xor
daa
xchg
and
repnz
mov
in
dec
cmp
pop
or
adc
adc
rcrb
jg
jno
dec
and
xor
test
sub
cwtl
adc
add
leave
fidivs
sarl
sub
pop
lds
add
push
sbb
or
inc
and
lods
cmpb
inc
push
icebp
push
mov
gs
pop
and
call
push
jbe
in
push
pop
cmp
cmp
and
inc
or
pop
mov
movsl
push
cmp
pop
dec
xlat
dec
adc
cmp
aam
xchg
jb
xchg
sbb
jbe
adc
iret
sub
jne
jae
stos
add
add
add
add
sbb
jmp
mov
negl
loope
add
add
add
push
adc
xor
ficoml
out
loope
xchg
mov
xchg
and
adc
fnsave
es
push
jb
loop
or
lahf
dec
and
mov
sub
push
in
mov
jb
mov
and
mov
inc
push
dec
cwtl
insl
xor
jmp
adc
xchg
scas
and
add
mov
in
and
and
addr16
fwait
sarl
cld
leave
xor
mov
leave
add
push
push
push
inc
decb
scas
pop
mov
push
sbbl
stos
jmp
scas
jo
gs
cmp
lea
add
rorl
cmp
inc
inc
cwtl
mov
push
mov
addr16
xchg
movsl
jo
push
movl
xorl
push
les
sti
dec
mov
jmp
pop
fildll
mov
sbb
cmpsl
fimull
jp
dec
popa
and
add
add
add
jbe
adc
adcl
mov
aad
cld
mov
inc
mov
je
popa
xchg
ret
mov
xor
add
mov
les
dec
add
or
jne
fwait
xor
sbb
mov
addr16
jb
mov
push
mov
lds
adc
inc
and
pop
in
xchg
or
imulb
fs
cmp
inc
fisubrs
sub
mov
push
lock
cmp
push
adc
sti
loope
fisubl
inc
pop
adcl
out
and
add
or
movsl
arpl
jae
dec
test
aad
in
idiv
xchg
inc
push
test
int
aaa
fisubrs
arpl
or
jno
push
mov
dec
aad
dec
daa
xchg
pop
sbb
mov
add
add
add
mov
lcall
mov
mov
jecxz
add
add
add
push
mov
adc
faddl
popl
mov
lea
push
rcrb
dec
sti
ret
mov
sub
push
lds
mov
push
cwtl
enter
enter
push
sub
lods
clc
rclb
pop
jne
int
and
jmp
aam
dec
push
push
ljmp
jo
gs
xchg
out
and
fmuls
xchg
rcl
sub
loope
mov
mov
test
or
popa
popa
xchg
jnp
jg
divb
cld
int
add
loope
xor
mov
pop
sarl
cs
out
ret
test
mov
negb
jne
into
loop
pop
rcrb
xchg
pop
push
and
jnp
pop
mov
xor
or
sbb
les
sbb
add
add
mov
jns
daa
data16
push
in
add
add
add
aas
pop
test
aaa
mov
dec
mov
daa
or
out
mov
sbb
pop
lret
inc
sti
jne
aam
ds
fs
xor
and
lods
es
push
add
sbb
cmp
push
adc
pusha
sbb
mov
and
fbld
test
popa
das
stos
ficomps
mov
xor
sbb
dec
jg
dec
cmc
aam
mul
gs
icebp
popf
dec
add
or
cmpsl
adc
mov
sbb
inc
scas
icebp
icebp
fbstp
push
mov
aaa
ja
mov
ja
pop
mov
xchg
subl
ret
dec
bound
repz
jb
dec
fsubs
movsl
enter
insl
subl
lea
fiaddl
imul
xchg
ret
outsb
adc
mov
dec
add
add
fadd
fsubp
jnp
push
xor
rclb
in
add
add
add
or
gs
call
cs
adc
adc
stos
mov
test
adc
add
repnz
and
insl
idiv
mov
fld1
xchg
fisttps
cmpsb
es
mov
inc
mov
ss
ficomps
sub
cmp
fs
xchg
ja
lds
test
dec
pop
adc
cmc
in
mov
and
shr
xchg
mov
lock
rcl
in
dec
push
int
out
movl
mov
mov
incl
jmp
xor
cmpsb
rorb
sub
dec
pop
mov
push
rolb
and
sub
jecxz
or
dec
mov
push
test
sbb
repz
lods
sbb
pusha
adc
lds
fs
jmp
aad
inc
pop
mov
lcall
add
add
sub
cld
cli
jle
addb
or
add
cmc
add
add
xchg
jp
sbb
mov
insb
repnz
lcall
js
sahf
call
and
pop
out
and
sarb
pop
push
insl
cmc
sub
lcall
fldenv
mov
cmc
pop
mov
mov
lret
pop
xchg
sub
dec
cmp
jmp
xorl
dec
and
ss
jl
popf
test
mov
jcxz
popa
in
dec
inc
jb
xchg
and
pop
into
nop
int3
xor
push
addl
jecxz
mov
add
pop
fsubrs
scas
scas
loop
rcll
push
jl,pn
data16
imul
cmp
mov
shlb
fxam
mov
adc
aam
push
lds
fwait
jge
push
clc
add
or
stos
add
ds
push
mov
dec
lcall
cld
jge
mov
add
add
ja
sti
dec
push
sbb
mov
cmc
add
add
insb
cmp
xlat
jp
lahf
roll
sbb
rclb
xor
sbb
aad
mov
stc
add
das
xchg
mov
in
jb
into
addr16
int3
mov
mov
cmp
inc
inc
jns
test
inc
pop
xorb
mov
into
cs
lret
cmp
mov
jecxz
xchg
push
notl
incb
inc
mov
loop
ljmp
xchg
push
xchg
ljmp
push
andb
xchg
push
mov
mov
decl
sub
lods
imul
rolb
shll
pop
cmp
test
mov
inc
outsb
cmp
push
test
jp
dec
bnd
iret
xor
dec
stos
and
push
aaa
jne
insb
test
stc
addr16
enter
mov
loopne
mov
push
dec
dec
std
enter
cmpsb
mov
cmpsb
sbbl
ror
cltd
outsl
mov
cmc
or
insb
pop
repnz
add
add
add
sar
inc
lock
enter
lcall
and
mov
mov
pop
dec
cwtl
pop
and
sbb
sahf
add
dec
add
pop
add
and
fmul
jmp
xchg
xchg
adc
and
fs
sti
imul
outsb
dec
pop
pop
dec
adc
cmpsb
ss
or
cmp
fldcw
loopne
leave
and
lds
outsl
sbb
lods
nop
out
and
lds
push
adc
xchg
pop
popa
dec
sbbl
inc
mov
sub
mov
xlat
int3
pop
lret
sbb
lcall
mov
xchg
push
jl
xor
mov
pop
or
sub
arpl
fsts
imull
cmp
sub
sbbl
add
add
ja
decl
jecxz
mov
out
add
cmc
add
add
das
out
xor
push
bound
xchg
mov
std
pop
and
mov
loope
pop
mov
mov
adc
gs
cli
mov
mov
push
inc
adc
test
adc
add
out
add
push
cmp
mov
stos
test
outsl
dec
push
fnsave
xchg
aam
lret
pop
loop
mov
pusha
nop
xchg
fistpl
jbe
and
adc
sub
test
push
inc
mov
popf
sbb
mov
jbe
fidivrl
cmp
cmpb
mov
imul
in
in
adc
popa
pop
xor
dec
stos
xchg
jmp
insb
push
ds
or
or
jge
xchg
jecxz
icebp
push
sbb
lods
das
int
aaa
orl
lahf
repz
fcoml
push
xchg
sbb
movsl
bound
inc
jge
push
dec
test
mov
mov
add
add
add
lock
jg
mov
pop
inc
cmp
fsubr
add
cmc
add
add
fs
orl
mov
dec
pop
sbb
push
cmp
push
xor
jecxz
lret
xlat
mov
jmp
adcl
rcll
xor
lock
cmp
push
enter
sahf
adc
sti
cmp
and
std
cmp
push
rolb
mov
push
xchg
fistpll
dec
inc
je
xor
cli
iret
pop
pop
push
xchg
into
dec
xchg
sbb
clc
jle
jle
cmp
xchg
ffree
cmpsl
fadd
in
pop
shl
jp
loopne
fpatan
and
adc
aam
xorb
lret
sub
enter
pushf
cmp
push
pusha
outsl
mov
xor
xchg
mov
and
sti
gs
jg
in
int3
xor
inc
push
call
xor
pusha
pop
cmp
jb
out
xchg
aam
in
mov
add
add
pop
xlat
fisttpl
cmpsl
xor
shr
add
cmc
add
add
xlat
ja
popf
cmp
into
dec
add
mov
cli
add
das
pushl
call
jne
xchg
rol
rclb
jno
cwtl
inc
lret
lods
lds
pusha
fs
sahf
loop
out
arpl
or
and
aad
shl
inc
mov
pushf
sbb
inc
jge
cmp
xchg
adc
mov
sub
and
mov
insb
test
dec
into
ret
ror
jne
aam
in
test
push
inc
sub
movsb
ds
aam
sti
inc
dec
push
jp
pop
notl
mov
test
out
jnp
outsb
push
or
push
popa
loope
lea
pop
pop
and
aam
cmpsl
pop
push
mov
int
push
adc
in
mov
dec
push
ret
push
xchg
int3
int3
divl
mov
cmp
daa
mov
lret
bound
mov
add
add
mov
dec
js
stc
mov
push
nop
aad
or
add
cmc
add
add
jle
sbb
xchg
sbb
or
popl
add
jl
xor
scas
into
add
outsl
mov
subl
adc
adc
repnz
xor
inc
imul
adc
jl
lods
rorb
notl
cs
scas
aas
push
adc
imul
aam
mov
xchg
cmp
push
ljmp
fsts
cmpsb
mov
pop
cmp
lods
arpl
inc
xchg
out
sub
clc
loopne
mov
cmpsb
insl
cmc
push
lret
mov
pusha
aam
adc
arpl
sub
gs
test
out
push
sbb
xchg
leave
hlt
push
mov
inc
pop
or
jne
pop
nop
pop
adc
sub
dec
push
mov
rorl
mov
outsl
xchg
sarl
cmpsl
push
inc
fwait
icebp
and
add
insl
repz
add
pop
insb
gs
mov
add
add
jnp
pop
mov
mov
push
push
addr16
data16
iret
sub
dec
rorb
push
sbb
mov
mov
jo
rcr
dec
aam
mov
xchg
push
mov
pop
jmp
mov
insb
push
inc
or
mov
pop
add
cmp
xchg
out
cmpsb
xchg
arpl
fsubs
dec
xchg
cmp
add
cmpsb
lods
jne
xor
aaa
adc
mov
or
cmp
out
sbb
push
xor
cs
sbb
repz
sbb
mov
imul
jge
jo
pusha
add
pop
mov
out
sbb
cmpsb
pop
clc
stc
std
mov
fsubs
cs
in
mov
xor
jle
adc
inc
adc
xor
out
and
add
cmp
jnp
sbb
xchg
add
add
cli
jg
jmp
aas
arpl
or
mov
xor
cs
packuswb
subl
push
or
cli
mov
jo
test
jne
pop
mov
push
jg
repnz
dec
cmp
mov
fistl
mov
hlt
xchg
fnstenv
lods
jmp
lahf
cmp
negl
fildl
xchg
mov
sti
test
cli
adc
xchg
lds
adc
outsl
pop
fistl
jo
std
mov
cmp
mov
cmp
lock
mov
and
mov
mov
sbb
fnsave
stos
sbb
and
in
inc
daa
stos
push
pop
dec
popf
rcr
arpl
add
xchg
push
pop
out
decb
jb
add
shll
add
sbb
sub
out
and
add
subb
jmp
popa
test
movsl
out
add
cmc
add
add
xchg
add
lds
out
enter
or
loope
lret
test
outsl
sub
mov
inc
arpl
and
jnp
add
cli
cld
cli
and
push
pusha
ss
lret
jmp
aas
xchg
sbb
cmp
mov
inc
dec
or
and
call
jbe
icebp
lcall
xchg
in
jne
dec
out
and
adc
push
pop
cmpsl
int3
pop
pop
cmpsl
push
pop
mov
leave
les
imul
dec
cld
pop
in
fstl
stos
add
add
cmp
or
cmp
add
jle
mov
dec
or
popf
mov
out
push
jo
out
sahf
popf
cs
das
mov
sarl
cmc
and
fldcw
sbb
adc
and
inc
mov
loop
outsb
xchg
fldl
add
add
jb
scas
cmp
int3
repnz
add
cmc
add
add
fucomp
mov
repz
pop
inc
pop
dec
lods
rorb
mov
cmp
jg
ja
sbb
lcall
push
push
push
and
leave
loop
jbe
testb
fisttpll
adcl
and
and
jns
xchg
xorb
mov
add
push
mov
xchg
inc
sub
ds
sub
aad
lret
mov
mov
subb
pop
fcmovne
lods
push
jno
lcall
push
cltd
and
mov
sub
aaa
add
push
mov
add
mov
repz
or
inc
cli
add
cwtl
xchg
push
movsl
cmp
sub
push
imul
adc
lock
push
fisttps
cwtl
xor
out
xchg
sub
push
iret
cmp
and
sub
andl
cmp
iret
push
add
add
xlat
mov
bound
fbstp
push
lock
cmc
add
add
xlat
iret
and
mov
ret
cld
jnp
icebp
outsb
inc
xlat
jae
fchs
stos
arpl
not
es
mov
jmp
mov
stos
jne
cmpsl
inc
cltd
cmp
sub
and
in
dec
outsl
or
lahf
std
test
xlat
mov
ja
fadds
or
inc
jbe
out
mov
sti
stc
sarl
fbstp
mov
stos
dec
jnp
imul
ss
pop
andb
sub
adc
dec
shrb
nop
adc
jae
int3
repnz
rorl
xchg
or
arpl
dec
fidivs
cmpsl
in
jbe
push
dec
test
pushf
add
adc
pop
lds
jmp
shlb
dec
pushw
dec
xchg
cld
rclb
test
pop
add
nop
jg
clc
sub
bound
or
add
add
mov
aas
jp
int3
icebp
in
sub
add
xchg
add
dec
lret
mov
ret
xor
pop
icebp
scas
adc
ljmp
faddl
ljmp
out
movsl
mov
in
mov
pop
or
add
dec
mov
ss
neg
adc
xchg
dec
movsb
dec
pushf
ljmp
ds
jle
and
jmp
cld
daa
cmc
cmp
or
shrl
xlat
fidivl
fisubrl
sub
mov
ljmp
push
mov
jmp
jns
push
aaa
or
jp
in
xchg
inc
add
rcll
cmpsl
xor
std
fildl
mov
pop
lcall
negl
mov
fwait
lock
and
mov
or
sahf
in
shl
jo
ret
fstl
in
jnp
test
sbbl
xchg
mov
or
cmpb
adc
repz
fnstenv
add
loop
fadd
sti
mov
inc
adc
add
add
add
push
jne
pop
fildl
fcmovb
sahf
xlat
mov
dec
mov
decl
add
dec
sbb
or
push
ss
cmp
notl
inc
in
add
dec
enter
add
jae
pop
sti
sbb
into
push
sbb
insl
insl
js
dec
pop
ljmp
cmp
outsl
jle
mov
pop
std
xchg
sub
cmp
jle
lock
jl
std
xchg
mov
nop
cld
inc
add
or
clc
test
aaa
add
pop
xchg
dec
push
and
xlat
aas
ds
hlt
aam
sub
rclb
cs
push
movsb
cmc
mov
cs
shrl
test
add
xor
xchg
cmp
mov
mov
mov
add
cmp
cmp
jo
orb
mov
sbb
sbbl
add
add
into
adc
neg
jge
push
xchg
std
ljmp
add
add
aam
les
xchg
lds
inc
dec
cli
xchg
mov
pop
jecxz
push
out
sbb
cmp
mul
sahf
nop
sbb
leave
push
add
push
lahf
add
sbb
xchg
jecxz
fisubrl
aad
xchg
das
cld
lret
push
jnp
xor
pop
pop
sarl
xchg
add
test
pop
pop
stos
or
adc
test
nop
jbe
push
nop
mov
inc
and
call
sub
ja
jge
sub
mov
mov
jmp
in
int3
out
imull
adc
jle
orb
dec
scas
fwait
cmpsb
insl
jmp
lret
push
iret
cmp
mov
lock
add
roll
andb
fcoms
cmp
stc
in
inc
fdivl
movsl
sub
int
adc
in
sub
ret
xchg
push
sbb
add
pop
cmp
outsl
jg
jg
mov
xor
hlt
add
cmc
add
add
pushf
pop
xchg
and
cli
xchg
and
sahf
and
movsl
and
xchg
fdivs
gs
out
adc
jns
mov
or
movsb
lods
in
jno
es
loop
and
mov
test
pop
imul
pushl
cmp
fucomp
ficomps
out
rcrb
jo
adc
inc
addr16
mov
add
call
icebp
pop
nop
jne
jb
xchg
pop
dec
repz
and
sub
lahf
repnz
cmp
mov
xchg
lret
push
fdivl
add
fisttpl
push
mov
lock
sbb
mov
movsb
add
test
inc
es
sahf
mov
rorl
pop
inc
dec
fildl
mov
and
or
push
jno
testl
sub
mov
fwait
lds
add
ret
ja
and
aaa
negl
mov
sbb
cmc
add
add
lea
cltd
jbe
aaa
test
lock
ret
pop
push
dec
fs
xor
and
pushf
in
jbe
lahf
js
pop
out
xor
cwtl
jl
in
repnz
adc
xlat
mov
fnsave
aam
jb
xor
push
into
jmp
jp
pop
push
xchg
mov
push
pusha
or
popf
in
sti
test
ljmp
push
cmp
sub
inc
btrl
out
sbb
pop
insl
pop
jne
std
mov
inc
adc
add
pop
int3
cmpsb
in
mov
pop
mov
lock
arpl
ss
std
pop
nop
into
nop
scas
inc
dec
lea
mov
daa
repz
xor
push
or
add
mov
sub
jp
fadd
lea
out
sbb
jge
enter
pop
xchg
dec
push
inc
xchg
push
lahf
out
js
jge
add
add
mov
cmc
mov
ret
jbe
jmp
cmc
add
add
jl
sub
popa
sub
or
lret
add
lods
in
shll
pushf
fs
push
leave
xchg
and
shrl
xchg
nop
xchg
jns
cwtl
or
jbe
adc
push
or
xchg
or
aas
mov
and
out
fdivrl
aaa
nop
xchg
pushf
sub
je
pop
imul
push
adc
fistpl
xor
dec
imul
mov
or
add
jl
popf
pushf
test
cwtl
jp
pop
nop
das
mov
pop
cltd
out
dec
pop
sub
fmuls
int3
and
fisttpll
shr
mov
or
in
xor
jmp
mov
push
incb
leave
mov
bound
insb
icebp
and
repz
or
jge
mov
arpl
cmp
ja
cmp
inc
xchg
scas
add
add
jne
cmp
pop
gs
jl
inc
testl
add
cmpsb
sbb
cli
enter
xchg
pusha
push
mov
call
xchg
mov
jg
push
mov
dec
cmp
mulb
adc
jle
mov
xchg
sub
adc
jne
idivb
or
ret
or
or
jnp
enter
stos
nop
add
aam
es
lret
test
dec
push
fwait
test
push
rcrb
adc
mov
cwtl
scas
mov
test
or
scas
lods
jmp
repnz
lock
ja
or
addr16
fs
aad
add
sbb
lods
xchg
cmc
insl
aaa
cmc
mov
lds
ret
aam
mov
out
lahf
mov
cld
js
xor
into
jae
jg
mov
lret
push
in
or
outsl
outsl
mov
popf
popf
loop
pop
ret
mov
out
xchg
enter
cmpsb
and
add
sub
scas
fdivr
fnstcw
cmpl
sub
clc
add
cmc
add
add
aaa
dec
loope
icebp
cmp
or
cmpsl
addl
dec
gs
inc
mov
shll
rolb
jle
jl
popa
jns
jecxz
push
mulb
data16
mov
jle
flds
ss
and
mov
jnp
fdivr
addr16
add
cmp
mov
sub
bound
or
cwtl
cld
or
or
jae,pt
fnsave
jae
sar
loope
decl
inc
sub
inc
daa
mov
jcxz
icebp
sbb
dec
insb
inc
mov
xorl
cmp
rcl
lock
jl
mul
stos
adc
adc
push
sub
subb
xchg
xor
inc
push
or
movsl
add
lea
subb
leave
jne
sub
push
cld
add
xchg
mov
ret
add
xor
xchg
fwait
bound
fucomp
xor
sub
add
cmc
add
add
mov
fs
mov
jecxz
xchg
cmpsl
inc
imul
xchg
std
popf
imul
jns
xor
sbb
cmc
add
dec
adc
mov
inc
outsl
out
pusha
iret
sbb
clc
stos
popf
leave
fwait
cmpsb
mov
and
xchg
in
or
mov
push
je
js
jo
mov
lock
movsl
imul
shrb
mov
sub
movsb
mov
cmp
inc
and
fstpt
or
mov
mov
movsl
pushf
mov
inc
dec
sbb
pushf
popa
push
cmp
aad
jle
mov
mov
fdivrs
gs
dec
popa
mov
pop
leave
dec
dec
cmp
sti
inc
jl
pop
jecxz
mov
dec
push
xchg
pushf
xchg
push
xor
inc
shr
or
std
dec
imul
loope
mov
ss
cwtl
pop
ljmp
add
add
ds
in
idivl
pushl
gs
or
cli
add
cmc
add
add
test
xor
inc
shll
dec
add
nop
js
sti
jecxz
andb
bound
mov
and
xchg
bound
jb
cmpl
or
push
mov
add
push
inc
movsb
loopne
and
fisubrs
test
mov
scas
dec
mov
cltd
xlat
and
ret
mov
in
jns
inc
xchg
sbb
pop
ds
and
mov
jmp
xchg
cmpsl
dec
cs
out
scas
sahf
jmp
hlt
test
xor
add
gs
add
icebp
mov
imul
jp
lods
popf
jge
inc
add
bound
or
sub
imul
subl
fs
out
push
xchg
inc
and
adc
iret
and
jno
arpl
cmpsb
mov
ficoml
cmp
fisubrl
add
add
jecxz
inc
cli
aas
push
ljmp
push
sti
add
cmc
add
add
out
mov
call
rolb
ja
jecxz
jecxz
or
lcall
outsb
inc
cmp
bound
jb
fmuls
cltd
aad
das
mov
aas
jl
call
push
pop
ret
mov
repnz
cmp
dec
bound
xchg
sub
mov
or
stc
add
mov
fidivrs
shlb
pop
fdivs
aaa
fs
clc
outsb
jp
pop
mov
sbb
mov
shll
sti
lods
into
aas
xor
lds
mov
mov
add
mov
les
sti
adc
mov
das
cmp
xchg
xchg
enter
test
pop
imul
lret
or
hlt
fstl
bound
iret
xor
mov
ss
fists
mov
in
sub
add
mov
lcall
fnstsw
add
cmc
add
add
xchg
mov
roll
pop
loope
lahf
sbb
inc
shlb
les
test
jo
popf
fcmove
mov
cmp
and
mov
pop
jl
call
leave
repz
adc
pop
std
dec
pop
inc
push
jb
pop
cwtl
gs
xchg
lds
int3
dec
test
out
jecxz
mov
shll
mov
lods
dec
mov
mov
or
popf
lahf
push
inc
out
ret
hlt
fnstcw
mov
nop
in
outsl
xchg
dec
xchg
xchg
leave
xchg
aam
mov
mov
cmp
ret
mov
mov
jl
scas
xchg
adc
xchg
xor
mov
mov
cmpsb
mov
inc
xor
push
cmp
out
pop
lods
fcomp
mov
xchg
xorb
cmp
add
add
jae
cltd
dec
mov
fs
add
cmc
add
add
jge
or
ret
xor
in
sbbl
data16
cmpsl
sbb
fcomps
add
inc
gs
dec
sub
add
arpl
push
ja
cwtl
icebp
movsl
inc
and
xor
cltd
xchg
xor
push
mov
jnp
mov
mov
loopne
mov
jne
ss
das
fdivl
jb
sub
inc
push
sub
jo
aas
iret
sbb
hlt
adc
pop
add
mov
xor
sbb
or
jb
pop
lods
push
dec
out
in
pop
inc
cmp
fcmovb
cmp
stos
inc
lret
in
mov
sbb
pcmpeqw
lgs
shrb
mov
cmpsl
mov
cmp
std
sub
pop
inc
fidivrl
data16
jle
push
mov
dec
push
out
jmp
mov
dec
sar
lods
and
orb
leave
out
add
cmpsl
inc
dec
loope
std
iret
cltd
jge
cmpsl
frstor
out
add
add
push
into
nop
out
cwtl
jle
xlat
movsb
add
push
in
cmc
std
add
cmc
add
add
mov
jo
xor
and
sbb
sub
dec
popa
jmp
lcall
cwtl
and
jae
cmp
mov
hlt
out
jno
mov
cld
adc
xor
xchg
fistl
mov
jbe
out
ret
adc
imul
leave
aas
jnp
fadds
ja
in
jbe
movsb
jecxz
add
jo
fsub
lret
cli
adc
add
stos
clc
mov
lock
sbb
vpsubsw
stc
push
dec
or
mov
jne
ds
or
sub
outsb
pop
rcrl
cs
das
ljmp
fiaddl
insb
jns
lahf
or
test
mov
mov
repnz
cmp
mov
stos
dec
mov
push
test
push
das
fwait
sahf
inc
pop
push
es
add
jno
test
jg
xor
or
pop
inc
inc
ljmp
add
mov
add
mov
sbb
lahf
popf
neg
outsb
out
cli
and
fadds
push
fidivs
jecxz
sbb
cmpsb
bound
daa
bound
xchg
jg
enter
adcl
stc
aas
daa
nop
int3
div
insb
hlt
mov
xchg
sub
ds
fs
cld
dec
inc
push
mov
nop
pop
add
loope
rcrl
stc
xchg
and
mov
cwtl
add
fwait
mov
push
add
jno
into
adc
scas
rorb
testl
push
mov
stos
push
test
fisubrs
pushf
xchg
jge
inc
push
ret
add
inc
out
mov
andb
push
popf
andl
add
adc
and
cld
jl
push
pop
xor
jnp
xor
adc
mov
fildl
add
adc
movsb
push
in
cmc
jne
pop
adc
adc
add
cmc
add
add
adc
subl
fmuls
mov
ret
and
pop
mov
leave
enter
xor
movsl
popf
or
jmp
imul
cltd
sub
xor
popf
cs
mov
jo
jne,pn
repz
movb
mov
mov
or
std
dec
push
push
sub
sbb
aaa
ret
fistps
push
out
xor
pop
mov
pop
mov
xchg
jb
add
push
and
and
cmp
jle
movl
icebp
mov
mov
test
js
xchg
pop
aas
inc
rcll
lret
aad
incb
aas
loopne
pop
movsb
out
xchg
inc
dec
in
and
add
in
inc
xor
das
test
les
mov
mov
fdivrp
sbb
jp
jns
mov
dec
push
mov
dec
or
inc
sbb
adc
add
out
shlb
aas
out
fwait
aaa
call
xchg
aam
add
cmc
add
add
adc
call
and
push
bound
sti
scas
sbb
mov
nop
aas
divw
mov
push
adc
dec
jne
lods
daa
adc
jbe
push
mov
sub
xchg
popl
sub
mov
out
xchg
std
fsubs
ss
pop
dec
cld
adc
and
cmp
cwtl
jo
jnp
fmul
pop
push
incb
sbb
or
push
mov
or
scas
adc
negb
xor
stc
imul
arpl
adc
sub
sbb
out
xchg
cwtl
mov
and
mov
out
jb
fistpl
scas
pop
mov
stc
outsb
lret
pop
movsb
sub
hlt
fcoms
mov
xor
test
push
xchg
pop
idiv
mov
pushf
aas
cmp
xor
ret
dec
popl
insb
scas
aas
push
ljmp
imul
or
add
or
mov
aas
mov
add
add
add
add
jnp
xchg
ret
ljmp
out
out
adc
adcl
mov
inc
out
inc
es
mov
out
pop
mov
dec
lahf
iret
test
adc
jmp
jne
stc
icebp
pop
fwait
inc
mov
mov
outsb
inc
in
jbe
adc
sub
mov
inc
push
test
and
cltd
xor
mulb
xchg
test
jbe
iret
fisubl
mov
data16
outsl
pop
xor
pop
push
mov
mov
rclb
scas
push
xor
mov
scas
aas
out
out
add
ljmp
dec
push
pop
stc
out
push
mov
push
or
test
ljmp
movsb
out
daa
testl
iret
jl
mov
cs
mov
lret
mov
and
shr
xchg
mov
mov
setnp
cmp
or
mov
pop
add
add
ret
bnd
rorb
cltd
jl
add
add
add
xor
or
arpl
xor
rorb
add
rcll
xor
or
dec
sbb
push
or
xor
in
sbbl
xchg
inc
adc
movsl
aaa
sbb
fs
dec
notb
push
mov
lds
pusha
pusha
push
repnz
mulb
aaa
jmp
sbb
jp
push
movsl
adc
push
add
in
cmp
pop
out
adc
or
lds
jecxz
stc
cmpl
lret
lock
sub
jns
repz
loope
fwait
aad
push
cmp
xor
sar
sti
testb
xchg
subb
ss
pop
mov
xchg
dec
jne
movsl
insl
inc
fwait
or
jge
stc
fdivrs
test
xor
xchg
notl
mov
cld
fstpl
sub
les
add
add
std
aaa
mov
lret
jne
scas
cmp
add
add
add
add
ljmp
movsb
fisubrs
lds
mov
rorl
lret
mov
test
aas
push
sbb
adc
repnz
or
push
fildll
lods
leave
push
push
arpl
add
stc
cwtl
jg
dec
sbb
dec
fcomps
lea
cmp
shll
sbb
dec
xchg
fs
sbb
xchg
mov
negl
into
in
cs
or
jbe
out
pop
mov
push
push
rcrb
adc
mov
dec
xchg
adc
loopne
jne
les
test
cwtl
xchg
or
and
repz
xchg
sub
sub
ljmp
lds
pop
in
loopne
jg
jbe
mov
data16
adc
iret
cmp
imulb
out
jg
add
imul
in
pop
add
add
insl
aam
mov
fs
mov
insb
adc
add
add
add
mov
xor
pop
wbinvd
adc
shll
add
mov
mov
or
dec
add
add
add
movl
add
lret
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
cltd
mov
xor
add
mov
mov
xor
lret
ret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
ljmp
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
fs
decl
mov
test
add
xor
add
mov
or
inc
mov
popa
mov
cld
inc
cmp
lea
and
incl
mov
cld
add
xchg
sar
inc
incl
mov
xor
add
nop
inc
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
test
inc
aas
inc
lea
inc
mov
mov
call
out
fisttps
jecxz
call
lea
call
add
add
test
wrmsr
jae
add
mov
add
add
mov
addl
mov
mov
dec
nop
mov
fadds
add
lea
pusha
push
incl
call
mov
mov
cld
mov
add
cmp
mov
mov
push
nop
incl
cld
add
mov
cld
push
nop
inc
add
add
ljmp
movntq
movl
test
jmp
int
sub
add
filds
cmp
je
movl
jne
mov
cld
jle
cmp
inc
call
add
add
add
xor
inc
add
mov
add
fmuls
cld
call
decl
add
push
es
inc
mov
decl
mov
call
inc
mov
add
mov
cld
mov
call
sub
cld
movb
xor
push
inc
mov
in
inc
lea
dec
cltd
mov
or
rorl
call
add
jge
mov
cld
lea
call
push
incl
mov
xor
add
cmp
jne
movl
add
mov
cld
test
mov
xor
test
mov
mov
mov
add
add
mov
add
addr16
je
mov
cld
sarb
pcmpeqw
xor
lea
add
cmp
mov
test
clc
pushl
lea
int3
inc
call
jne
xor
jmp
mov
mov
incl
pushl
aaa
mov
jmp
mov
mov
cld
clc
ret
test
pop
xchg
add
inc
decl
and
add
push
jbe
mov
or
inc
enter
inc
mov
int3
add
ss
rorb
inc
add
fadd
rolb
inc
fmull
inc
test
cltd
clc
xor
inc
cmp
pushf
mov
test
clc
dec
inc
mov
or
test
clc
testl
enter
ss
pushf
inc
decl
push
xabort
add
mov
mov
les
adc
dec
add
mov
lock
clc
inc
add
jge
xor
cmp
paddb
mov
test
dec
test
pop
xor
add
add
psraw
sub
mov
lock
shl
rolb
movl
jmp
pushf
inc
mov
xor
add
mov
enter
xor
add
sub
cmp
mov
test
cmp
pushf
xor
add
inc
dec
cmp
sarl
inc
jmp
mov
dec
xor
add
add
dec
test
out
rolb
add
dec
mov
mov
ret
xor
add
add
dec
inc
mov
ror
add
scas
mov
xor
xor
add
mov
clc
rol
mov
mov
dec
jbe
mov
call
rdpmc
roll
add
inc
rorb
jmp
inc
inc
mov
clc
test
clc
lret
inc
into
mov
clc
enter
sub
ret
mov
addr16
clc
add
loopne
dec
into
mov
or
inc
push
mov
in
cmp
ja
mov
inc
cltd
mov
clc
mov
xlat
lret
inc
into
mov
in
scas
lret
mov
mov
sub
mov
mov
clc
loopne
push
lret
mov
adc
jb
add
in
sub
cmp
mov
mov
add
mov
in
into
dec
xor
roll
xor
sub
add
mov
inc
xor
add
inc
xor
sub
test
clc
enter
incl
jmp
mov
inc
mov
cltd
lret
xor
mov
lea
xor
add
inc
dec
mov
addr16
inc
sub
inc
xor
push
mov
add
inc
decl
add
inc
mov
cltd
add
add
pushl
int3
xor
add
mov
call
mov
add
mov
in
ret
iret
enter
in
or
adc
push
dec
inc
mov
jb
mov
cld
scas
orb
movb
push
push
xor
mov
call
mov
in
jge
mov
int3
add
xor
dec
pushf
xor
add
mov
test
cltd
add
jmp
mov
add
mov
jmp
mov
rolb
add
xor
rorl
jb
add
clc
inc
jb
mov
mov
ret
xor
add
ss
inc
adc
inc
test
mov
cld
orl
jbe
mov
dec
mov
mov
mov
or
dec
int3
xor
add
mov
xor
add
adcb
add
inc
mov
xor
dec
mov
hlt
add
push
inc
dec
call
in
lret
mov
adc
inc
and
cmpl
cmpb
mov
cmp
jne
mov
mov
rcrb
or
dec
inc
add
or
test
xchg
mov
movsl
inc
cmp
pushf
orl
mov
into
decl
push
lret
inc
into
decl
push
into
call
lret
add
add
mov
clc
inc
inc
mov
push
push
add
mov
cld
mov
into
rorb
xor
jne
call
mov
mov
call
add
rolb
add
add
inc
push
cmp
mov
test
clc
test
addb
jmp
in
or
xor
hlt
mov
xor
add
inc
adc
pushf
inc
add
movsl
test
clc
incl
cmp
push
movsb
jne
push
clc
test
cmp
les
inc
push
aas
sbb
dec
add
inc
add
enter
add
add
out
sbb
dec
mov
sub
mov
add
cmp
or
incl
mov
mov
lret
inc
into
mov
int3
scas
push
mov
call
sub
mov
mov
ss
pushf
mov
faddl
test
mov
in
ret
add
add
mov
in
ret
mov
in
inc
rol
sar
or
add
add
test
clc
lret
inc
into
cmp
pushf
scas
mov
inc
cmp
pushf
mov
mov
clc
mov
mov
in
lret
ret
into
mov
scas
cmp
add
jmp
mov
mov
inc
enter
xor
add
cmp
shufps
add
dec
sub
cmp
ja
mov
lods
mov
inc
dec
mov
lret
rol
or
inc
scas
xor
add
add
inc
mov
inc
lret
mov
clc
lret
scas
ret
mov
hlt
push
scas
sub
mov
add
mov
movsb
inc
dec
xor
inc
rcrl
sar
rolb
xor
jmp
mov
xor
mov
rolb
test
cltd
shll
mov
xor
add
mov
add
inc
xor
rdpmc
roll
loopne
push
in
mov
adc
jb
add
jmp
mov
test
dec
dec
xor
add
dec
mov
dec
in
xor
xor
add
jbe
mov
test
dec
mov
loopne
inc
add
rol
scas
mov
mov
hlt
dec
inc
mov
loopne
lret
test
clc
scas
inc
mov
fdiv
roll
cltd
cmp
pushf
cmp
inc
mov
inc
dec
xor
add
loopne
dec
rorl
add
lock
ret
xor
mov
rolb
xor
call
enter
mov
fmul
push
dec
xor
ret
xor
dec
jne
mov
cld
loopne
push
add
incl
incl
mov
lock
lret
add
xor
inc
scas
mov
shl
inc
decl
call
ud0
adc
inc
xor
lock
add
ud0
sbb
xor
sub
push
add
mov
cld
inc
nop
mov
xabort
icebp
mov
lret
or
dec
pop
or
jb
add
inc
mov
fadd
ret
add
int
sub
add
inc
inc
mov
cld
mov
mov
clc
push
pushl
movb
int3
or
lea
insb
incl
push
movb
leave
les
in
call
inc
cld
mov
cld
xor
std
mov
clc
test
je
mov
cld
add
add
fiaddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
ljmp
leave
jmp
mov
jle
inc
nop
in
inc
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jle
inc
inc
leave
add
and
inc
jne
add
lret
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
jmp
jge
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
cmc
or
out
mov
pop
push
cmp
sar
incl
inc
in
jle
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
mov
mov
push
insb
push
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
ss
lea
mov
fadd
dec
lds
out
inc
lea
inc
dec
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
jmp
addb
mov
sub
add
js
data16
idiv
inc
fadd
mov
andl
flds
pop
push
jmp
push
jmp
addl
mov
inc
out
add
mov
outsb
inc
jle
idivb
mov
orl
jb
decl
mov
test
inc
rorb
adc
mov
mov
cmp
test
pushl
mov
add
jmp
pushf
decl
add
data16
add
add
test
inc
mov
mov
inc
cmpb
mov
add
push
mov
call
mov
data16
test
out
lea
test
inc
ljmp
decl
test
incl
test
rclb
test
inc
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
std
mov
ret
adcb
add
mov
ret
or
lea
loop
xchg
aam
out
mov
inc
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
cwtd
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
jmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
inc
test
decl
xor
add
inc
xorl
mov
lea
inc
lcall
pushf
roll
add
add
test
decw
mov
add
lea
push
rolb
xor
lea
test
decl
mov
dec
clc
call
lea
lea
test
popf
push
add
xor
cltd
mov
incl
push
push
inc
shlb
lea
call
test
incl
clc
call
jmp
inc
jae
add
mov
mov
data16
inc
lea
test
inc
dec
test
pushl
jnp
mov
mov
lcall
incl
pop
mov
mov
decl
mov
mov
test
incb
incl
ss
pushf
inc
mov
hlt
test
cmp
lock
test
clc
mov
lahf
lret
mov
add
add
rorb
mov
incl
cld
mov
add
jge
test
sbb
xchg
call
push
inc
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
cmp
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
cld
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
cltd
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
out
adc
jne
mov
fcomps
add
incl
mov
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
add
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
cmpl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pop
jmp
mov
xor
lea
ss
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
cltd
pushf
xor
jne
mov
icebp
icebp
shl
mov
inc
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
cmp
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
testb
dec
mov
mov
xor
mov
in
jge
mov
dec
inc
xor
inc
hlt
ss
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
ss
fdivl
test
push
add
cmp
setns
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
jne
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
push
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
in
and
or
in
xchg
add
add
push
inc
xor
add
push
push
inc
jmp
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
rol
call
jne
mov
inc
and
fs
bswap
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
cmp
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
idivb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
data16
pushf
inc
mov
hlt
test
mov
cmp
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
sti
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
cltd
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
data16
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
data16
add
data16
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
jle
popa
data16
into
addr16
add
cmp
add
cld
add
cmp
pop
or
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
xor
pop
mov
je
xor
mov
xor
pop
cmp
jne
mov
cld
push
pop
inc
stc
aaa
test
clc
test
xor
fs
or
decb
lret
aaa
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
data16
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
push
add
add
add
lret
lock
lret
cmp
pushf
jge
aaa
cld
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
cmp
add
mov
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
cmp
add
data16
dec
fisttps
add
ret
lea
add
ss
call
clc
inc
shll
cltd
push
xor
inc
cmp
jbe
mov
or
inc
test
cmp
in
hlt
push
push
push
push
mov
cltd
cltd
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
cmp
pushf
jb
add
inc
daa
inc
inc
xor
dec
cltd
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
cmp
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
ss
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
std
lock
inc
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
ss
pushf
pop
mov
call
in
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
incb
cmp
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
ss
pushf
push
movl
inc
cmpb
pushf
addr16
shl
dec
xchg
jmp
aam
test
mov
or
add
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
ss
pushf
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
clc
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
dec
pushf
mov
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
mov
push
ret
call
call
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
cmp
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
pushf
add
mov
xor
test
clc
dec
inc
xor
setl
lret
rol
dec
test
inc
lea
lea
mov
xor
bswap
rorb
roll
add
cmp
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
cltd
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
cmp
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
leave
call
call
in
jmp
and
call
pushf
inc
mov
pop
push
in
ret
and
mov
and
mov
or
lcall
or
decl
jl
adc
dec
cmp
mov
and
xor
test
jge
push
jmp
adc
dec
pop
ret
push
jmp
mov
add
adc
or
add
add
adc
std
dec
adc
outsb
adc
sahf
xor
add
adc
fs
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
adc
adc
add
push
adc
roll
int
adc
aaa
inc
inc
add
inc
inc
add
inc
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
push
adc
sbb
adc
mov
dec
adc
inc
or
add
adc
mov
inc
inc
add
inc
add
inc
add
inc
inc
add
inc
inc
add
push
add
imul
sahf
push
adc
jle
adc
jbe
adc
cmp
add
adc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
adc
dec
dec
adc
dec
popa
adc
adc
add
push
adc
hlt
pop
adc
dec
pop
adc
testl
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
xor
cmp
push
add
push
xor
xor
push
add
inc
pop
dec
push
push
add
pop
aaa
xor
xor
inc
pop
add
cmp
push
cmp
add
cmp
cmp
pop
inc
dec
inc
push
add
xor
xor
inc
xor
xor
xor
dec
xor
add
inc
pop
ss
pop
inc
push
dec
add
push
pop
inc
push
push
push
dec
add
inc
pop
xor
push
pop
pop
xor
push
push
pop
xor
push
dec
xor
xor
xor
inc
pop
pop
xor
push
dec
push
xor
pop
push
xor
inc
add
push
cmp
pop
inc
xor
aaa
xor
pop
inc
cmp
dec
pop
dec
add
pop
push
push
aaa
dec
pop
xor
dec
dec
add
xor
push
pop
push
inc
inc
inc
add
inc
cmp
push
push
pop
dec
inc
push
pop
inc
add
inc
pop
push
inc
pop
inc
ss
push
inc
dec
inc
add
inc
xor
dec
pop
cmp
cmp
push
pop
push
pop
dec
push
dec
dec
inc
pop
dec
xor
push
inc
pop
xor
add
push
pop
inc
push
dec
xor
pop
dec
xor
inc
inc
dec
pop
push
dec
xor
dec
ss
aaa
aaa
dec
dec
add
ss
inc
inc
xor
dec
ss
pop
dec
dec
inc
inc
dec
xor
xor
add
add
add
add
inc
add
dec
add
add
inc
add
add
xor
xor
pop
add
xor
dec
add
pop
add
add
dec
add
add
dec
add
dec
add
xor
xor
pop
add
inc
add
add
push
add
add
pop
add
xor
add
add
dec
add
add
pop
add
pop
add
add
add
add
xor
xor
pop
add
pop
add
pop
add
add
add
dec
add
add
add
push
add
pop
add
xor
inc
add
add
add
add
cmp
push
add
add
dec
add
add
dec
add
inc
add
add
xor
pop
add
add
add
add
add
push
add
xor
pop
add
inc
add
add
push
add
add
xor
xor
xor
xor
pop
add
add
add
inc
add
add
dec
add
add
add
add
add
add
cmp
dec
add
add
pop
add
dec
add
add
dec
add
dec
add
add
inc
push
ss
dec
adcb
jg
dec
insb
lock
add
add
pop
popa
jbe
jns
dec
jb
pop
bound
gs
arpl
js
je
jno
jno
bound
jo
bound
